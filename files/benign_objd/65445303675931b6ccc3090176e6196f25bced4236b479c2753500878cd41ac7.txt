
65445303675931b6ccc3090176e6196f25bced4236b479c2753500878cd41ac7.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	mov    rcx,QWORD PTR [rcx]
  401003:	jmp    0x40215c
  401008:	rex.W push rbx
  40100a:	push   rbp
  40100b:	push   rsi
  40100c:	push   rdi
  40100d:	push   r12
  40100f:	push   r13
  401011:	push   r14
  401013:	push   r15
  401015:	sub    rsp,0x28
  401019:	mov    rax,QWORD PTR [rdx]
  40101c:	xor    ebx,ebx
  40101e:	mov    r15,r8
  401021:	mov    DWORD PTR [rdx+0x8],ebx
  401024:	mov    WORD PTR [rax],bx
  401027:	mov    rax,QWORD PTR [r8]
  40102a:	mov    DWORD PTR [r8+0x8],ebx
  40102e:	mov    WORD PTR [rax],bx
  401031:	cmp    DWORD PTR [rcx+0x8],ebx
  401034:	mov    rbp,rdx
  401037:	mov    r13,rcx
  40103a:	mov    r14b,bl
  40103d:	mov    edi,ebx
  40103f:	jbe    0x4010b0
  401041:	mov    r12,rbx
  401044:	mov    rax,QWORD PTR [r13+0x0]
  401048:	movzx  esi,WORD PTR [r12+rax*1]
  40104d:	cmp    si,0x20
  401051:	je     0x401059
  401053:	cmp    si,0x9
  401057:	jne    0x40105e
  401059:	cmp    r14b,bl
  40105c:	je     0x4010a1
  40105e:	cmp    si,0x22
  401062:	jne    0x40106d
  401064:	cmp    r14b,bl
  401067:	sete   r14b
  40106b:	jmp    0x401093
  40106d:	mov    eax,DWORD PTR [rbp+0x8]
  401070:	cmp    DWORD PTR [rbp+0xc],eax
  401073:	jne    0x40107d
  401075:	mov    rcx,rbp
  401078:	call   0x402f2c
  40107d:	mov    edx,DWORD PTR [rbp+0x8]
  401080:	mov    rcx,QWORD PTR [rbp+0x0]
  401084:	mov    WORD PTR [rcx+rdx*2],si
  401088:	inc    edx
  40108a:	mov    WORD PTR [rcx+rdx*2],bx
  40108e:	mov    DWORD PTR [rbp+0x8],edx
  401091:	mov    eax,edx
  401093:	inc    edi
  401095:	add    r12,0x2
  401099:	cmp    edi,DWORD PTR [r13+0x8]
  40109d:	jb     0x401044
  40109f:	jmp    0x4010b0
  4010a1:	lea    ecx,[rdi+0x1]
  4010a4:	lea    rdx,[rax+rcx*2]
  4010a8:	mov    rcx,r15
  4010ab:	call   0x403290
  4010b0:	cmp    edi,ebx
  4010b2:	setne  al
  4010b5:	add    rsp,0x28
  4010b9:	pop    r15
  4010bb:	pop    r14
  4010bd:	pop    r13
  4010bf:	pop    r12
  4010c1:	pop    rdi
  4010c2:	pop    rsi
  4010c3:	pop    rbp
  4010c4:	pop    rbx
  4010c5:	ret    
  4010c6:	int3   
  4010c7:	int3   
  4010c8:	rex.W push rbx
  4010ca:	push   rbp
  4010cb:	push   rsi
  4010cc:	push   rdi
  4010cd:	sub    rsp,0x28
  4010d1:	mov    rbx,rcx
  4010d4:	mov    ecx,DWORD PTR [rcx+0xc]
  4010d7:	mov    rsi,rdx
  4010da:	cmp    DWORD PTR [rbx+0x8],ecx
  4010dd:	jne    0x40111d
  4010df:	mov    eax,ecx
  4010e1:	shr    eax,0x2
  4010e4:	lea    ebp,[rax+rcx*1+0x1]
  4010e8:	mov    ecx,ebp
  4010ea:	shl    rcx,0x3
  4010ee:	call   0x402130
  4010f3:	cmp    DWORD PTR [rbx+0x8],0x0
  4010f7:	mov    rdi,rax
  4010fa:	je     0x40110f
  4010fc:	mov    r8d,DWORD PTR [rbx+0x8]
  401100:	mov    rdx,QWORD PTR [rbx]
  401103:	mov    rcx,rax
  401106:	shl    r8,0x3
  40110a:	call   0x44b480
  40110f:	mov    rcx,QWORD PTR [rbx]
  401112:	call   0x40215c
  401117:	mov    QWORD PTR [rbx],rdi
  40111a:	mov    DWORD PTR [rbx+0xc],ebp
  40111d:	mov    ecx,DWORD PTR [rbx+0x8]
  401120:	mov    rax,QWORD PTR [rbx]
  401123:	mov    QWORD PTR [rax+rcx*8],rsi
  401127:	mov    eax,DWORD PTR [rbx+0x8]
  40112a:	lea    ecx,[rax+0x1]
  40112d:	mov    DWORD PTR [rbx+0x8],ecx
  401130:	add    rsp,0x28
  401134:	pop    rdi
  401135:	pop    rsi
  401136:	pop    rbp
  401137:	pop    rbx
  401138:	ret    
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	xor    eax,eax
  40113e:	mov    BYTE PTR [rcx],al
  401140:	mov    QWORD PTR [rcx+0x8],rax
  401144:	mov    DWORD PTR [rcx+0x10],eax
  401147:	mov    DWORD PTR [rcx+0x14],eax
  40114a:	mov    rax,rcx
  40114d:	ret    
  40114e:	int3   
  40114f:	int3   
  401150:	rex.W push rbx
  401152:	push   rbp
  401153:	push   rsi
  401154:	push   rdi
  401155:	sub    rsp,0x28
  401159:	movsxd rbx,DWORD PTR [rcx+0x10]
  40115d:	mov    rdi,rcx
  401160:	test   ebx,ebx
  401162:	mov    rsi,rbx
  401165:	je     0x401194
  401167:	shl    rsi,0x3
  40116b:	mov    rax,QWORD PTR [rdi+0x8]
  40116f:	sub    rsi,0x8
  401173:	add    ebx,0xffffffff
  401176:	mov    rbp,QWORD PTR [rsi+rax*1]
  40117a:	test   rbp,rbp
  40117d:	je     0x401190
  40117f:	mov    rcx,QWORD PTR [rbp+0x0]
  401183:	call   0x40215c
  401188:	mov    rcx,rbp
  40118b:	call   0x40215c
  401190:	test   ebx,ebx
  401192:	jne    0x40116b
  401194:	mov    rcx,QWORD PTR [rdi+0x8]
  401198:	add    rsp,0x28
  40119c:	pop    rdi
  40119d:	pop    rsi
  40119e:	pop    rbp
  40119f:	pop    rbx
  4011a0:	jmp    0x40215c
  4011a5:	int3   
  4011a6:	int3   
  4011a7:	int3   
  4011a8:	rex.W push rbx
  4011aa:	push   rbp
  4011ab:	push   rsi
  4011ac:	push   rdi
  4011ad:	sub    rsp,0x68
  4011b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4011ba:	mov    rbp,rdx
  4011bd:	mov    rdx,rcx
  4011c0:	lea    rcx,[rsp+0x38]
  4011c5:	call   0x403208
  4011ca:	nop
  4011cb:	lea    rcx,[rsp+0x38]
  4011d0:	call   0x4036bc
  4011d5:	lea    rcx,[rsp+0x38]
  4011da:	call   0x403668
  4011df:	movsxd rdi,DWORD PTR [rbp+0x8]
  4011e3:	mov    rbx,rdi
  4011e6:	test   edi,edi
  4011e8:	je     0x401216
  4011ea:	shl    rbx,0x3
  4011ee:	add    edi,0xffffffff
  4011f1:	sub    rbx,0x8
  4011f5:	mov    rax,QWORD PTR [rbp+0x0]
  4011f9:	mov    rsi,QWORD PTR [rbx+rax*1]
  4011fd:	test   rsi,rsi
  401200:	je     0x401212
  401202:	mov    rcx,QWORD PTR [rsi]
  401205:	call   0x40215c
  40120a:	mov    rcx,rsi
  40120d:	call   0x40215c
  401212:	test   edi,edi
  401214:	jne    0x4011ee
  401216:	mov    DWORD PTR [rbp+0x8],0x0
  40121d:	lea    rcx,[rsp+0x48]
  401222:	call   0x403150
  401227:	nop
  401228:	lea    rcx,[rsp+0x28]
  40122d:	call   0x403150
  401232:	nop
  401233:	lea    r8,[rsp+0x28]
  401238:	lea    rdx,[rsp+0x48]
  40123d:	lea    rcx,[rsp+0x38]
  401242:	call   0x401008
  401247:	test   al,al
  401249:	je     0x40127e
  40124b:	mov    ecx,0x10
  401250:	call   0x402130
  401255:	mov    QWORD PTR [rsp+0x98],rax
  40125d:	test   rax,rax
  401260:	je     0x401271
  401262:	lea    rdx,[rsp+0x48]
  401267:	mov    rcx,rax
  40126a:	call   0x403208
  40126f:	jmp    0x401273
  401271:	xor    eax,eax
  401273:	mov    rdx,rax
  401276:	mov    rcx,rbp
  401279:	call   0x4010c8
  40127e:	cmp    DWORD PTR [rsp+0x30],0x0
  401283:	je     0x4012af
  401285:	lea    rdx,[rsp+0x28]
  40128a:	lea    rcx,[rsp+0x38]
  40128f:	call   0x4032f8
  401294:	nop
  401295:	mov    rcx,QWORD PTR [rsp+0x28]
  40129a:	call   0x40215c
  40129f:	nop
  4012a0:	mov    rcx,QWORD PTR [rsp+0x48]
  4012a5:	call   0x40215c
  4012aa:	jmp    0x40121d
  4012af:	mov    rcx,QWORD PTR [rsp+0x28]
  4012b4:	call   0x40215c
  4012b9:	nop
  4012ba:	mov    rcx,QWORD PTR [rsp+0x48]
  4012bf:	call   0x40215c
  4012c4:	nop
  4012c5:	mov    rcx,QWORD PTR [rsp+0x38]
  4012ca:	call   0x40215c
  4012cf:	add    rsp,0x68
  4012d3:	pop    rdi
  4012d4:	pop    rsi
  4012d5:	pop    rbp
  4012d6:	pop    rbx
  4012d7:	ret    
  4012d8:	rex.W push rbp
  4012da:	sub    rsp,0x20
  4012de:	mov    rbp,rdx
  4012e1:	lea    rcx,[rbp+0x38]
  4012e5:	call   0x401000
  4012ea:	add    rsp,0x20
  4012ee:	pop    rbp
  4012ef:	ret    
  4012f0:	int3   
  4012f1:	int3   
  4012f2:	int3   
  4012f3:	int3   
  4012f4:	int3   
  4012f5:	int3   
  4012f6:	int3   
  4012f7:	int3   
  4012f8:	rex.W push rbp
  4012fa:	sub    rsp,0x20
  4012fe:	mov    rbp,rdx
  401301:	lea    rcx,[rbp+0x48]
  401305:	call   0x401000
  40130a:	add    rsp,0x20
  40130e:	pop    rbp
  40130f:	ret    
  401310:	int3   
  401311:	int3   
  401312:	int3   
  401313:	int3   
  401314:	int3   
  401315:	int3   
  401316:	int3   
  401317:	int3   
  401318:	rex.W push rbp
  40131a:	sub    rsp,0x20
  40131e:	mov    rbp,rdx
  401321:	lea    rcx,[rbp+0x28]
  401325:	call   0x401000
  40132a:	add    rsp,0x20
  40132e:	pop    rbp
  40132f:	ret    
  401330:	int3   
  401331:	int3   
  401332:	int3   
  401333:	int3   
  401334:	int3   
  401335:	int3   
  401336:	int3   
  401337:	int3   
  401338:	rex.W push rbp
  40133a:	sub    rsp,0x20
  40133e:	mov    rbp,rdx
  401341:	mov    rcx,QWORD PTR [rbp+0x98]
  401348:	call   0x40215c
  40134d:	add    rsp,0x20
  401351:	pop    rbp
  401352:	ret    
  401353:	int3   
  401354:	mov    QWORD PTR [rsp+0x8],rcx
  401359:	push   rbx
  40135a:	push   rsi
  40135b:	push   rdi
  40135c:	sub    rsp,0x40
  401360:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  401369:	mov    esi,edx
  40136b:	mov    rbx,rcx
  40136e:	mov    DWORD PTR [rcx],edx
  401370:	xor    edi,edi
  401372:	mov    QWORD PTR [rcx+0x8],rdi
  401376:	mov    QWORD PTR [rcx+0x10],rdi
  40137a:	mov    DWORD PTR [rcx+0x18],edi
  40137d:	mov    DWORD PTR [rcx+0x1c],edi
  401380:	add    rcx,0x20
  401384:	call   0x402b34
  401389:	nop
  40138a:	lea    rcx,[rbx+0x30]
  40138e:	call   0x403150
  401393:	nop
  401394:	lea    ecx,[rsi+rsi*2]
  401397:	shl    ecx,0x3
  40139a:	add    rcx,0x8
  40139e:	call   0x402130
  4013a3:	mov    QWORD PTR [rsp+0x70],rax
  4013a8:	cmp    rax,rdi
  4013ab:	je     0x4013d7
  4013ad:	mov    DWORD PTR [rax],esi
  4013af:	lea    rdi,[rax+0x8]
  4013b3:	lea    rax,[rip+0xfffffffffffffd96]        # 0x401150
  4013ba:	mov    QWORD PTR [rsp+0x20],rax
  4013bf:	lea    r9,[rip+0xfffffffffffffd76]        # 0x40113c
  4013c6:	mov    r8d,esi
  4013c9:	mov    edx,0x18
  4013ce:	mov    rcx,rdi
  4013d1:	call   0x44b490
  4013d6:	nop
  4013d7:	mov    QWORD PTR [rbx+0x8],rdi
  4013db:	mov    rax,rbx
  4013de:	add    rsp,0x40
  4013e2:	pop    rdi
  4013e3:	pop    rsi
  4013e4:	pop    rbx
  4013e5:	ret    
  4013e6:	int3   
  4013e7:	int3   
  4013e8:	int3   
  4013e9:	int3   
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	int3   
  4013f1:	int3   
  4013f2:	int3   
  4013f3:	int3   
  4013f4:	rex.W push rbp
  4013f6:	sub    rsp,0x20
  4013fa:	mov    rbp,rdx
  4013fd:	mov    rcx,QWORD PTR [rbp+0x60]
  401401:	add    rcx,0x10
  401405:	call   0x4047cc
  40140a:	add    rsp,0x20
  40140e:	pop    rbp
  40140f:	ret    
  401410:	int3   
  401411:	int3   
  401412:	int3   
  401413:	int3   
  401414:	rex.W push rbp
  401416:	sub    rsp,0x20
  40141a:	mov    rbp,rdx
  40141d:	mov    rcx,QWORD PTR [rbp+0x60]
  401421:	add    rcx,0x20
  401425:	call   0x401000
  40142a:	add    rsp,0x20
  40142e:	pop    rbp
  40142f:	ret    
  401430:	int3   
  401431:	int3   
  401432:	int3   
  401433:	int3   
  401434:	rex.W push rbp
  401436:	sub    rsp,0x20
  40143a:	mov    rbp,rdx
  40143d:	mov    rcx,QWORD PTR [rbp+0x60]
  401441:	add    rcx,0x30
  401445:	call   0x401000
  40144a:	add    rsp,0x20
  40144e:	pop    rbp
  40144f:	ret    
  401450:	int3   
  401451:	int3   
  401452:	int3   
  401453:	int3   
  401454:	rex.W push rbp
  401456:	sub    rsp,0x20
  40145a:	mov    rbp,rdx
  40145d:	mov    rcx,QWORD PTR [rbp+0x70]
  401461:	call   0x40215c
  401466:	add    rsp,0x20
  40146a:	pop    rbp
  40146b:	ret    
  40146c:	mov    QWORD PTR [rsp+0x8],rcx
  401471:	push   rbx
  401472:	push   rbp
  401473:	push   rsi
  401474:	push   rdi
  401475:	sub    rsp,0x38
  401479:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  401482:	mov    rdi,rcx
  401485:	mov    rcx,QWORD PTR [rcx+0x8]
  401489:	test   rcx,rcx
  40148c:	je     0x4014af
  40148e:	lea    rbx,[rcx-0x8]
  401492:	lea    r9,[rip+0xfffffffffffffcb7]        # 0x401150
  401499:	mov    r8d,DWORD PTR [rbx]
  40149c:	mov    edx,0x18
  4014a1:	call   0x44b5f0
  4014a6:	mov    rcx,rbx
  4014a9:	call   0x40215c
  4014ae:	nop
  4014af:	mov    rcx,QWORD PTR [rdi+0x30]
  4014b3:	call   0x40215c
  4014b8:	nop
  4014b9:	mov    rcx,QWORD PTR [rdi+0x20]
  4014bd:	call   0x40215c
  4014c2:	nop
  4014c3:	movsxd rsi,DWORD PTR [rdi+0x18]
  4014c7:	mov    rbx,rsi
  4014ca:	test   esi,esi
  4014cc:	je     0x4014fb
  4014ce:	shl    rbx,0x3
  4014d2:	add    esi,0xffffffff
  4014d5:	sub    rbx,0x8
  4014d9:	mov    rax,QWORD PTR [rdi+0x10]
  4014dd:	mov    rbp,QWORD PTR [rbx+rax*1]
  4014e1:	test   rbp,rbp
  4014e4:	je     0x4014f7
  4014e6:	mov    rcx,QWORD PTR [rbp+0x0]
  4014ea:	call   0x40215c
  4014ef:	mov    rcx,rbp
  4014f2:	call   0x40215c
  4014f7:	test   esi,esi
  4014f9:	jne    0x4014d2
  4014fb:	mov    rcx,QWORD PTR [rdi+0x10]
  4014ff:	add    rsp,0x38
  401503:	pop    rdi
  401504:	pop    rsi
  401505:	pop    rbp
  401506:	pop    rbx
  401507:	jmp    0x40215c
  40150c:	rex.W push rbp
  40150e:	sub    rsp,0x20
  401512:	mov    rbp,rdx
  401515:	mov    rcx,QWORD PTR [rbp+0x60]
  401519:	add    rcx,0x10
  40151d:	call   0x4047cc
  401522:	add    rsp,0x20
  401526:	pop    rbp
  401527:	ret    
  401528:	int3   
  401529:	int3   
  40152a:	int3   
  40152b:	int3   
  40152c:	rex.W push rbp
  40152e:	sub    rsp,0x20
  401532:	mov    rbp,rdx
  401535:	mov    rcx,QWORD PTR [rbp+0x60]
  401539:	add    rcx,0x20
  40153d:	call   0x401000
  401542:	add    rsp,0x20
  401546:	pop    rbp
  401547:	ret    
  401548:	int3   
  401549:	int3   
  40154a:	int3   
  40154b:	int3   
  40154c:	rex.W push rbp
  40154e:	sub    rsp,0x20
  401552:	mov    rbp,rdx
  401555:	mov    rcx,QWORD PTR [rbp+0x60]
  401559:	add    rcx,0x30
  40155d:	call   0x401000
  401562:	add    rsp,0x20
  401566:	pop    rbp
  401567:	ret    
  401568:	rex.W push rbx
  40156a:	push   rbp
  40156b:	push   rsi
  40156c:	push   rdi
  40156d:	push   r12
  40156f:	push   r13
  401571:	push   r14
  401573:	push   r15
  401575:	sub    rsp,0x48
  401579:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  401582:	mov    r10,r8
  401585:	mov    r9,rdx
  401588:	mov    rbp,rcx
  40158b:	xor    ebx,ebx
  40158d:	cmp    DWORD PTR [rdx+0x8],ebx
  401590:	je     0x4017b6
  401596:	mov    r13,QWORD PTR [rdx]
  401599:	cmp    WORD PTR [r13+0x0],0x2d
  40159f:	jne    0x4017b6
  4015a5:	mov    r15d,ebx
  4015a8:	lea    r8d,[rbx-0x1]
  4015ac:	mov    r11d,ebx
  4015af:	cmp    DWORD PTR [rcx],ebx
  4015b1:	jbe    0x40162e
  4015b3:	mov    r14,r10
  4015b6:	mov    r12,QWORD PTR [r14]
  4015b9:	mov    edi,ebx
  4015bb:	mov    dl,BYTE PTR [r12]
  4015bf:	cmp    dl,bl
  4015c1:	je     0x4015cf
  4015c3:	mov    rax,r12
  4015c6:	inc    edi
  4015c8:	inc    rax
  4015cb:	cmp    BYTE PTR [rax],bl
  4015cd:	jne    0x4015c6
  4015cf:	cmp    edi,r8d
  4015d2:	jle    0x40161c
  4015d4:	lea    eax,[rdi+0x1]
  4015d7:	cmp    eax,DWORD PTR [r9+0x8]
  4015db:	ja     0x40161c
  4015dd:	lea    rsi,[r13+0x2]
  4015e1:	cmp    dl,bl
  4015e3:	je     0x401616
  4015e5:	lea    eax,[rdx-0x41]
  4015e8:	cmp    al,0x19
  4015ea:	ja     0x4015ef
  4015ec:	add    dl,0x20
  4015ef:	movzx  ecx,WORD PTR [rsi]
  4015f2:	lea    eax,[rcx-0x41]
  4015f5:	cmp    ax,0x19
  4015f9:	ja     0x4015ff
  4015fb:	add    cx,0x20
  4015ff:	movzx  eax,dl
  401602:	cmp    ax,cx
  401605:	jne    0x40161c
  401607:	inc    r12
  40160a:	add    rsi,0x2
  40160e:	mov    dl,BYTE PTR [r12]
  401612:	cmp    dl,bl
  401614:	jne    0x4015e5
  401616:	mov    r15d,r11d
  401619:	mov    r8d,edi
  40161c:	inc    r11d
  40161f:	add    r14,0x18
  401623:	cmp    r11d,DWORD PTR [rbp+0x0]
  401627:	jb     0x4015b6
  401629:	cmp    r8d,ebx
  40162c:	jge    0x401645
  40162e:	lea    rcx,[rbp+0x20]
  401632:	lea    rdx,[rip+0x4bf2f]        # 0x44d568
  401639:	call   0x402be4
  40163e:	xor    al,al
  401640:	jmp    0x4017b8
  401645:	lea    edx,[r8+0x1]
  401649:	mov    eax,r15d
  40164c:	lea    rdi,[rax+rax*2]
  401650:	mov    rsi,QWORD PTR [rbp+0x8]
  401654:	cmp    BYTE PTR [r10+rdi*8+0x9],bl
  401659:	jne    0x401677
  40165b:	cmp    BYTE PTR [rsi+rdi*8],bl
  40165e:	je     0x401677
  401660:	lea    rcx,[rbp+0x20]
  401664:	lea    rdx,[rip+0x4bedd]        # 0x44d548
  40166b:	call   0x402be4
  401670:	xor    al,al
  401672:	jmp    0x4017b8
  401677:	mov    BYTE PTR [rsi+rdi*8],0x1
  40167b:	mov    r8d,DWORD PTR [r9+0x8]
  40167f:	sub    r8d,edx
  401682:	movzx  eax,BYTE PTR [r10+rdi*8+0xa]
  401688:	cmp    r8d,eax
  40168b:	jge    0x4016a4
  40168d:	lea    rcx,[rbp+0x20]
  401691:	lea    rdx,[rip+0x4be98]        # 0x44d530
  401698:	call   0x402be4
  40169d:	xor    al,al
  40169f:	jmp    0x4017b8
  4016a4:	mov    BYTE PTR [rsi+rdi*8+0x1],bl
  4016a8:	mov    DWORD PTR [rsi+rdi*8+0x4],0xffffffff
  4016b0:	movzx  ecx,BYTE PTR [r10+rdi*8+0x8]
  4016b6:	dec    ecx
  4016b8:	je     0x401766
  4016be:	dec    ecx
  4016c0:	je     0x401711
  4016c2:	dec    ecx
  4016c4:	jne    0x401798
  4016ca:	cmp    r8d,0x1
  4016ce:	jne    0x401798
  4016d4:	mov    rcx,QWORD PTR [r9]
  4016d7:	cmp    WORD PTR [rcx+rdx*2],0x7f
  4016dc:	ja     0x4016fa
  4016de:	mov    dl,BYTE PTR [rcx+rdx*2]
  4016e1:	mov    rcx,QWORD PTR [r10+rdi*8+0x10]
  4016e6:	call   0x4026bc
  4016eb:	mov    DWORD PTR [rsi+rdi*8+0x4],eax
  4016ef:	cmp    eax,ebx
  4016f1:	jl     0x4016fa
  4016f3:	mov    al,0x1
  4016f5:	jmp    0x4017b8
  4016fa:	lea    rcx,[rbp+0x20]
  4016fe:	lea    rdx,[rip+0x4be0b]        # 0x44d510
  401705:	call   0x402be4
  40170a:	xor    al,al
  40170c:	jmp    0x4017b8
  401711:	mov    rcx,QWORD PTR [r9]
  401714:	lea    rdx,[rcx+rdx*2]
  401718:	lea    rcx,[rsp+0x28]
  40171d:	call   0x4031c0
  401722:	nop
  401723:	mov    ecx,0x10
  401728:	call   0x402130
  40172d:	mov    QWORD PTR [rsp+0x98],rax
  401735:	cmp    rax,rbx
  401738:	je     0x40174a
  40173a:	lea    rdx,[rsp+0x28]
  40173f:	mov    rcx,rax
  401742:	call   0x403208
  401747:	mov    rbx,rax
  40174a:	lea    rcx,[rsi+rdi*8+0x8]
  40174f:	mov    rdx,rbx
  401752:	call   0x4010c8
  401757:	nop
  401758:	mov    rcx,QWORD PTR [rsp+0x28]
  40175d:	call   0x40215c
  401762:	mov    al,0x1
  401764:	jmp    0x4017b8
  401766:	cmp    r8d,0x1
  40176a:	jne    0x401798
  40176c:	mov    rax,QWORD PTR [r9]
  40176f:	cmp    WORD PTR [rax+rdx*2],0x2d
  401774:	sete   al
  401777:	mov    BYTE PTR [rsi+rdi*8+0x1],al
  40177b:	cmp    al,bl
  40177d:	je     0x401784
  40177f:	mov    al,r8b
  401782:	jmp    0x4017b8
  401784:	lea    rcx,[rbp+0x20]
  401788:	lea    rdx,[rip+0x4bd81]        # 0x44d510
  40178f:	call   0x402be4
  401794:	xor    al,al
  401796:	jmp    0x4017b8
  401798:	cmp    edx,DWORD PTR [r9+0x8]
  40179c:	je     0x4017b2
  40179e:	lea    rcx,[rbp+0x20]
  4017a2:	lea    rdx,[rip+0x4bd4f]        # 0x44d4f8
  4017a9:	call   0x402be4
  4017ae:	xor    al,al
  4017b0:	jmp    0x4017b8
  4017b2:	mov    al,0x1
  4017b4:	jmp    0x4017b8
  4017b6:	xor    al,al
  4017b8:	add    rsp,0x48
  4017bc:	pop    r15
  4017be:	pop    r14
  4017c0:	pop    r13
  4017c2:	pop    r12
  4017c4:	pop    rdi
  4017c5:	pop    rsi
  4017c6:	pop    rbp
  4017c7:	pop    rbx
  4017c8:	ret    
  4017c9:	int3   
  4017ca:	int3   
  4017cb:	int3   
  4017cc:	int3   
  4017cd:	int3   
  4017ce:	int3   
  4017cf:	int3   
  4017d0:	int3   
  4017d1:	int3   
  4017d2:	int3   
  4017d3:	int3   
  4017d4:	int3   
  4017d5:	int3   
  4017d6:	int3   
  4017d7:	int3   
  4017d8:	rex.W push rbp
  4017da:	sub    rsp,0x20
  4017de:	mov    rbp,rdx
  4017e1:	lea    rcx,[rbp+0x28]
  4017e5:	call   0x401000
  4017ea:	add    rsp,0x20
  4017ee:	pop    rbp
  4017ef:	ret    
  4017f0:	int3   
  4017f1:	int3   
  4017f2:	int3   
  4017f3:	int3   
  4017f4:	int3   
  4017f5:	int3   
  4017f6:	int3   
  4017f7:	int3   
  4017f8:	rex.W push rbp
  4017fa:	sub    rsp,0x20
  4017fe:	mov    rbp,rdx
  401801:	mov    rcx,QWORD PTR [rbp+0x98]
  401808:	call   0x40215c
  40180d:	add    rsp,0x20
  401811:	pop    rbp
  401812:	ret    
  401813:	int3   
  401814:	rex.W push rbx
  401816:	push   rbp
  401817:	push   rsi
  401818:	push   rdi
  401819:	push   r12
  40181b:	push   r13
  40181d:	push   r14
  40181f:	push   r15
  401821:	sub    rsp,0x38
  401825:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40182e:	mov    r12,r8
  401831:	mov    r15,rdx
  401834:	mov    r14,rcx
  401837:	mov    DWORD PTR [rcx+0x38],0x0
  40183e:	mov    rax,QWORD PTR [rcx+0x30]
  401842:	mov    WORD PTR [rax],0x0
  401847:	xor    r13b,r13b
  40184a:	xor    esi,esi
  40184c:	cmp    DWORD PTR [r8+0x8],esi
  401850:	jbe    0x4018f5
  401856:	xor    edi,edi
  401858:	mov    rax,QWORD PTR [r12]
  40185c:	mov    rbx,QWORD PTR [rdi+rax*1]
  401860:	test   r13b,r13b
  401863:	jne    0x4018a0
  401865:	mov    rdx,QWORD PTR [rip+0x66794]        # 0x468000
  40186c:	mov    rcx,QWORD PTR [rbx]
  40186f:	call   0x4027fc
  401874:	test   al,al
  401876:	je     0x40187d
  401878:	mov    r13b,0x1
  40187b:	jmp    0x4018d2
  40187d:	cmp    DWORD PTR [rbx+0x8],0x0
  401881:	je     0x4018a0
  401883:	mov    rax,QWORD PTR [rbx]
  401886:	cmp    WORD PTR [rax],0x2d
  40188a:	jne    0x4018a0
  40188c:	mov    r8,r15
  40188f:	mov    rdx,rbx
  401892:	mov    rcx,r14
  401895:	call   0x401568
  40189a:	test   al,al
  40189c:	je     0x4018e5
  40189e:	jmp    0x4018d2
  4018a0:	mov    ecx,0x10
  4018a5:	call   0x402130
  4018aa:	mov    QWORD PTR [rsp+0x80],rax
  4018b2:	test   rax,rax
  4018b5:	je     0x4018c4
  4018b7:	mov    rdx,rbx
  4018ba:	mov    rcx,rax
  4018bd:	call   0x403208
  4018c2:	jmp    0x4018c6
  4018c4:	xor    eax,eax
  4018c6:	lea    rcx,[r14+0x10]
  4018ca:	mov    rdx,rax
  4018cd:	call   0x4010c8
  4018d2:	inc    esi
  4018d4:	add    rdi,0x8
  4018d8:	cmp    esi,DWORD PTR [r12+0x8]
  4018dd:	jb     0x401858
  4018e3:	jmp    0x4018f5
  4018e5:	mov    rdx,rbx
  4018e8:	lea    rcx,[r14+0x30]
  4018ec:	call   0x4032f8
  4018f1:	xor    al,al
  4018f3:	jmp    0x4018f7
  4018f5:	mov    al,0x1
  4018f7:	add    rsp,0x38
  4018fb:	pop    r15
  4018fd:	pop    r14
  4018ff:	pop    r13
  401901:	pop    r12
  401903:	pop    rdi
  401904:	pop    rsi
  401905:	pop    rbp
  401906:	pop    rbx
  401907:	ret    
  401908:	int3   
  401909:	int3   
  40190a:	int3   
  40190b:	int3   
  40190c:	int3   
  40190d:	int3   
  40190e:	int3   
  40190f:	int3   
  401910:	int3   
  401911:	int3   
  401912:	int3   
  401913:	int3   
  401914:	rex.W push rbp
  401916:	sub    rsp,0x20
  40191a:	mov    rbp,rdx
  40191d:	mov    rcx,QWORD PTR [rbp+0x80]
  401924:	call   0x40215c
  401929:	add    rsp,0x20
  40192d:	pop    rbp
  40192e:	ret    
  40192f:	int3   
  401930:	sub    rsp,0x18
  401934:	xor    r9d,r9d
  401937:	cmp    ecx,0xa
  40193a:	mov    r8,rdx
  40193d:	mov    r10d,ecx
  401940:	jb     0x401973
  401942:	lea    r11,[rsp]
  401946:	mov    eax,0xcccccccd
  40194b:	inc    r9d
  40194e:	mul    r10d
  401951:	shr    edx,0x3
  401954:	mov    al,dl
  401956:	shl    al,0x2
  401959:	lea    ecx,[rax+rdx*1]
  40195c:	add    cl,cl
  40195e:	sub    r10b,cl
  401961:	add    r10b,0x30
  401965:	mov    BYTE PTR [r11],r10b
  401968:	inc    r11
  40196b:	cmp    edx,0xa
  40196e:	mov    r10d,edx
  401971:	jae    0x401946
  401973:	add    r10b,0x30
  401977:	movsxd rax,r9d
  40197a:	mov    BYTE PTR [r8],r10b
  40197d:	inc    r8
  401980:	test   r9d,r9d
  401983:	je     0x40199a
  401985:	lea    rcx,[rsp+rax*1]
  401989:	dec    rcx
  40198c:	mov    al,BYTE PTR [rcx]
  40198e:	mov    BYTE PTR [r8],al
  401991:	inc    r8
  401994:	add    r9d,0xffffffff
  401998:	jne    0x401989
  40199a:	mov    BYTE PTR [r8],0x0
  40199e:	add    rsp,0x18
  4019a2:	ret    
  4019a3:	int3   
  4019a4:	rex.W push rbx
  4019a6:	sub    rsp,0x40
  4019aa:	mov    ebx,0xffffffff
  4019af:	mov    r8,rdx
  4019b2:	mov    r9,rcx
  4019b5:	cmp    rcx,rbx
  4019b8:	ja     0x4019c1
  4019ba:	call   0x401930
  4019bf:	jmp    0x401a2e
  4019c1:	xor    r10d,r10d
  4019c4:	cmp    rcx,0xa
  4019c8:	jb     0x401a03
  4019ca:	lea    r11,[rsp+0x20]
  4019cf:	movabs rax,0xcccccccccccccccd
  4019d9:	inc    r10d
  4019dc:	mul    r9
  4019df:	shr    rdx,0x3
  4019e3:	mov    al,dl
  4019e5:	shl    al,0x2
  4019e8:	lea    ecx,[rax+rdx*1]
  4019eb:	add    cl,cl
  4019ed:	sub    r9b,cl
  4019f0:	add    r9b,0x30
  4019f4:	mov    BYTE PTR [r11],r9b
  4019f7:	inc    r11
  4019fa:	cmp    rdx,0xa
  4019fe:	mov    r9,rdx
  401a01:	jae    0x4019cf
  401a03:	add    r9b,0x30
  401a07:	movsxd rax,r10d
  401a0a:	mov    BYTE PTR [r8],r9b
  401a0d:	inc    r8
  401a10:	test   r10d,r10d
  401a13:	je     0x401a2a
  401a15:	lea    rcx,[rsp+rax*1+0x20]
  401a1a:	dec    rcx
  401a1d:	mov    al,BYTE PTR [rcx]
  401a1f:	mov    BYTE PTR [r8],al
  401a22:	inc    r8
  401a25:	add    r10d,ebx
  401a28:	jne    0x401a1a
  401a2a:	mov    BYTE PTR [r8],0x0
  401a2e:	add    rsp,0x40
  401a32:	pop    rbx
  401a33:	ret    
  401a34:	mov    r10d,ecx
  401a37:	mov    r9d,0x1
  401a3d:	mov    eax,ecx
  401a3f:	jmp    0x401a44
  401a41:	inc    r9d
  401a44:	shr    eax,0x4
  401a47:	jne    0x401a41
  401a49:	mov    eax,r9d
  401a4c:	movsxd r11,r9d
  401a4f:	mov    BYTE PTR [rax+rdx*1],0x0
  401a53:	add    r11,rdx
  401a56:	dec    r11
  401a59:	mov    r8d,r10d
  401a5c:	shr    r10d,0x4
  401a60:	and    r8d,0xf
  401a64:	cmp    r8d,0xa
  401a68:	lea    eax,[r8+0x37]
  401a6c:	lea    edx,[r8+0x30]
  401a70:	movzx  ecx,al
  401a73:	movzx  eax,dl
  401a76:	cmovb  ecx,eax
  401a79:	add    r9d,0xffffffff
  401a7d:	mov    BYTE PTR [r11],cl
  401a80:	jne    0x401a56
  401a82:	ret    
  401a83:	int3   
  401a84:	mov    r10,rcx
  401a87:	mov    r9d,0x1
  401a8d:	mov    rax,rcx
  401a90:	jmp    0x401a95
  401a92:	inc    r9d
  401a95:	shr    rax,0x4
  401a99:	jne    0x401a92
  401a9b:	mov    eax,r9d
  401a9e:	movsxd r11,r9d
  401aa1:	mov    BYTE PTR [rax+rdx*1],0x0
  401aa5:	add    r11,rdx
  401aa8:	dec    r11
  401aab:	mov    r8d,r10d
  401aae:	shr    r10,0x4
  401ab2:	and    r8d,0xf
  401ab6:	cmp    r8d,0xa
  401aba:	lea    eax,[r8+0x37]
  401abe:	lea    edx,[r8+0x30]
  401ac2:	movzx  ecx,al
  401ac5:	movzx  eax,dl
  401ac8:	cmovb  ecx,eax
  401acb:	add    r9d,0xffffffff
  401acf:	mov    BYTE PTR [r11],cl
  401ad2:	jne    0x401aa8
  401ad4:	ret    
  401ad5:	int3   
  401ad6:	int3   
  401ad7:	int3   
  401ad8:	mov    r10d,ecx
  401adb:	mov    BYTE PTR [rdx+0x8],0x0
  401adf:	mov    r11d,0x7
  401ae5:	mov    r9d,r10d
  401ae8:	shr    r10d,0x4
  401aec:	and    r9d,0xf
  401af0:	cmp    r9d,0xa
  401af4:	lea    eax,[r9+0x37]
  401af8:	lea    r8d,[r9+0x30]
  401afc:	movzx  ecx,al
  401aff:	movzx  eax,r8b
  401b03:	cmovb  ecx,eax
  401b06:	mov    BYTE PTR [r11+rdx*1],cl
  401b0a:	dec    r11
  401b0d:	jns    0x401ae5
  401b0f:	ret    
  401b10:	sub    rsp,0x18
  401b14:	xor    r9d,r9d
  401b17:	cmp    ecx,0xa
  401b1a:	mov    r8,rdx
  401b1d:	mov    r10d,ecx
  401b20:	jb     0x401b53
  401b22:	lea    r11,[rsp]
  401b26:	mov    eax,0xcccccccd
  401b2b:	inc    r9d
  401b2e:	mul    r10d
  401b31:	shr    edx,0x3
  401b34:	mov    al,dl
  401b36:	shl    al,0x2
  401b39:	lea    ecx,[rax+rdx*1]
  401b3c:	add    cl,cl
  401b3e:	sub    r10b,cl
  401b41:	add    r10b,0x30
  401b45:	mov    BYTE PTR [r11],r10b
  401b48:	inc    r11
  401b4b:	cmp    edx,0xa
  401b4e:	mov    r10d,edx
  401b51:	jae    0x401b26
  401b53:	add    r10w,0x30
  401b58:	movsxd rax,r9d
  401b5b:	mov    WORD PTR [r8],r10w
  401b5f:	add    r8,0x2
  401b63:	test   r9d,r9d
  401b66:	je     0x401b80
  401b68:	lea    rcx,[rsp+rax*1]
  401b6c:	dec    rcx
  401b6f:	movzx  eax,BYTE PTR [rcx]
  401b72:	mov    WORD PTR [r8],ax
  401b76:	add    r8,0x2
  401b7a:	add    r9d,0xffffffff
  401b7e:	jne    0x401b6c
  401b80:	mov    WORD PTR [r8],0x0
  401b86:	add    rsp,0x18
  401b8a:	ret    
  401b8b:	int3   
  401b8c:	test   rcx,rcx
  401b8f:	jns    0x401b9a
  401b91:	mov    BYTE PTR [rdx],0x2d
  401b94:	inc    rdx
  401b97:	neg    rcx
  401b9a:	jmp    0x4019a4
  401b9f:	int3   
  401ba0:	rex.W push rbx
  401ba2:	push   rsi
  401ba3:	push   rdi
  401ba4:	sub    rsp,0x30
  401ba8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  401bb1:	mov    rdi,rdx
  401bb4:	mov    rsi,rcx
  401bb7:	mov    rcx,rdx
  401bba:	call   0x4036bc
  401bbf:	mov    rcx,rdi
  401bc2:	call   0x403668
  401bc7:	mov    ecx,DWORD PTR [rdi+0x8]
  401bca:	xor    ebx,ebx
  401bcc:	cmp    ecx,0x2
  401bcf:	jb     0x401bf4
  401bd1:	mov    rdx,QWORD PTR [rdi]
  401bd4:	cmp    WORD PTR [rdx],0x22
  401bd8:	jne    0x401bf4
  401bda:	dec    ecx
  401bdc:	cmp    WORD PTR [rdx+rcx*2],0x22
  401be1:	jne    0x401bf4
  401be3:	mov    DWORD PTR [rdi+0x8],ecx
  401be6:	mov    WORD PTR [rdx+rcx*2],bx
  401bea:	xor    edx,edx
  401bec:	mov    rcx,rdi
  401bef:	call   0x403750
  401bf4:	cmp    DWORD PTR [rdi+0x8],ebx
  401bf7:	je     0x401c26
  401bf9:	mov    ecx,0x10
  401bfe:	call   0x402130
  401c03:	mov    QWORD PTR [rsp+0x58],rax
  401c08:	cmp    rax,rbx
  401c0b:	je     0x401c1b
  401c0d:	mov    rdx,rdi
  401c10:	mov    rcx,rax
  401c13:	call   0x403208
  401c18:	mov    rbx,rax
  401c1b:	mov    rdx,rbx
  401c1e:	mov    rcx,rsi
  401c21:	call   0x4010c8
  401c26:	add    rsp,0x30
  401c2a:	pop    rdi
  401c2b:	pop    rsi
  401c2c:	pop    rbx
  401c2d:	ret    
  401c2e:	int3   
  401c2f:	int3   
  401c30:	rex.W push rbp
  401c32:	sub    rsp,0x20
  401c36:	mov    rbp,rdx
  401c39:	mov    rcx,QWORD PTR [rbp+0x58]
  401c3d:	call   0x40215c
  401c42:	add    rsp,0x20
  401c46:	pop    rbp
  401c47:	ret    
  401c48:	rex.W push rbx
  401c4a:	push   rbp
  401c4b:	push   rsi
  401c4c:	push   rdi
  401c4d:	push   r12
  401c4f:	sub    rsp,0x80
  401c56:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  401c5f:	mov    ebp,r8d
  401c62:	mov    r12,rdx
  401c65:	mov    QWORD PTR [rsp+0x68],0xffffffffffffffff
  401c6e:	mov    rdx,rcx
  401c71:	lea    rcx,[rsp+0x68]
  401c76:	call   0x40946c
  401c7b:	xor    edi,edi
  401c7d:	cmp    al,dil
  401c80:	jne    0x401c87
  401c82:	jmp    0x402075
  401c87:	lea    rdx,[rsp+0x28]
  401c8c:	lea    rcx,[rsp+0x68]
  401c91:	call   0x408cac
  401c96:	cmp    al,dil
  401c99:	jne    0x401ca0
  401c9b:	jmp    0x402075
  401ca0:	cmp    QWORD PTR [rsp+0x28],0x7fffffe0
  401ca9:	jb     0x401cb0
  401cab:	jmp    0x402075
  401cb0:	lea    rcx,[rsp+0x38]
  401cb5:	call   0x403150
  401cba:	nop
  401cbb:	cmp    ebp,0x4b0
  401cc1:	je     0x401e09
  401cc7:	cmp    ebp,0x4b1
  401ccd:	je     0x401e09
  401cd3:	lea    rcx,[rsp+0x58]
  401cd8:	call   0x402b34
  401cdd:	nop
  401cde:	mov    rax,QWORD PTR [rsp+0x28]
  401ce3:	cmp    eax,DWORD PTR [rsp+0x64]
  401ce7:	jbe    0x401cfa
  401ce9:	mov    edx,eax
  401ceb:	lea    rcx,[rsp+0x58]
  401cf0:	call   0x402a70
  401cf5:	mov    rax,QWORD PTR [rsp+0x28]
  401cfa:	lea    r9,[rsp+0xc8]
  401d02:	mov    r8d,eax
  401d05:	mov    rdx,QWORD PTR [rsp+0x58]
  401d0a:	lea    rcx,[rsp+0x68]
  401d0f:	call   0x408dd4
  401d14:	cmp    al,dil
  401d17:	jne    0x401d34
  401d19:	mov    rcx,QWORD PTR [rsp+0x58]
  401d1e:	call   0x40215c
  401d23:	nop
  401d24:	mov    rcx,QWORD PTR [rsp+0x38]
  401d29:	call   0x40215c
  401d2e:	nop
  401d2f:	jmp    0x402075
  401d34:	mov    eax,DWORD PTR [rsp+0xc8]
  401d3b:	cmp    rax,QWORD PTR [rsp+0x28]
  401d40:	je     0x401d5d
  401d42:	mov    rcx,QWORD PTR [rsp+0x58]
  401d47:	call   0x40215c
  401d4c:	nop
  401d4d:	mov    rcx,QWORD PTR [rsp+0x38]
  401d52:	call   0x40215c
  401d57:	nop
  401d58:	jmp    0x402075
  401d5d:	lea    rcx,[rsp+0x68]
  401d62:	call   0x408c80
  401d67:	mov    r11,QWORD PTR [rsp+0x58]
  401d6c:	mov    eax,DWORD PTR [rsp+0xc8]
  401d73:	mov    BYTE PTR [rax+r11*1],dil
  401d77:	mov    eax,edi
  401d79:	cmp    BYTE PTR [r11],dil
  401d7c:	je     0x401d88
  401d7e:	inc    eax
  401d80:	inc    r11
  401d83:	cmp    BYTE PTR [r11],dil
  401d86:	jne    0x401d7e
  401d88:	mov    DWORD PTR [rsp+0x60],eax
  401d8c:	cmp    eax,DWORD PTR [rsp+0xc8]
  401d93:	je     0x401db0
  401d95:	mov    rcx,QWORD PTR [rsp+0x58]
  401d9a:	call   0x40215c
  401d9f:	nop
  401da0:	mov    rcx,QWORD PTR [rsp+0x38]
  401da5:	call   0x40215c
  401daa:	nop
  401dab:	jmp    0x402075
  401db0:	cmp    ebp,0xfde9
  401db6:	jne    0x401de7
  401db8:	lea    rdx,[rsp+0x38]
  401dbd:	lea    rcx,[rsp+0x58]
  401dc2:	call   0x40408c
  401dc7:	cmp    al,dil
  401dca:	jne    0x401dfa
  401dcc:	mov    rcx,QWORD PTR [rsp+0x58]
  401dd1:	call   0x40215c
  401dd6:	nop
  401dd7:	mov    rcx,QWORD PTR [rsp+0x38]
  401ddc:	call   0x40215c
  401de1:	nop
  401de2:	jmp    0x402075
  401de7:	mov    r8d,ebp
  401dea:	lea    rdx,[rsp+0x58]
  401def:	lea    rcx,[rsp+0x38]
  401df4:	call   0x403af4
  401df9:	nop
  401dfa:	mov    rcx,QWORD PTR [rsp+0x58]
  401dff:	call   0x40215c
  401e04:	jmp    0x401f7a
  401e09:	mov    rax,QWORD PTR [rsp+0x28]
  401e0e:	test   al,0x1
  401e10:	je     0x401e22
  401e12:	mov    rcx,QWORD PTR [rsp+0x38]
  401e17:	call   0x40215c
  401e1c:	nop
  401e1d:	jmp    0x402075
  401e22:	mov    rbx,rdi
  401e25:	mov    QWORD PTR [rsp+0xc8],rdi
  401e2d:	cmp    rax,rdi
  401e30:	je     0x401e4a
  401e32:	mov    rcx,rax
  401e35:	call   0x402130
  401e3a:	mov    rbx,rax
  401e3d:	mov    QWORD PTR [rsp+0xc8],rax
  401e45:	mov    rax,QWORD PTR [rsp+0x28]
  401e4a:	lea    r9,[rsp+0x20]
  401e4f:	mov    r8d,eax
  401e52:	mov    rdx,rbx
  401e55:	lea    rcx,[rsp+0x68]
  401e5a:	call   0x408dd4
  401e5f:	cmp    al,dil
  401e62:	jne    0x401e7d
  401e64:	mov    rcx,rbx
  401e67:	call   0x40215c
  401e6c:	nop
  401e6d:	mov    rcx,QWORD PTR [rsp+0x38]
  401e72:	call   0x40215c
  401e77:	nop
  401e78:	jmp    0x402075
  401e7d:	mov    eax,DWORD PTR [rsp+0x20]
  401e81:	cmp    rax,QWORD PTR [rsp+0x28]
  401e86:	je     0x401ea1
  401e88:	mov    rcx,rbx
  401e8b:	call   0x40215c
  401e90:	nop
  401e91:	mov    rcx,QWORD PTR [rsp+0x38]
  401e96:	call   0x40215c
  401e9b:	nop
  401e9c:	jmp    0x402075
  401ea1:	lea    rcx,[rsp+0x68]
  401ea6:	call   0x408c80
  401eab:	mov    esi,DWORD PTR [rsp+0x28]
  401eaf:	shr    esi,1
  401eb1:	cmp    esi,DWORD PTR [rsp+0x44]
  401eb5:	jbe    0x401ec3
  401eb7:	mov    edx,esi
  401eb9:	lea    rcx,[rsp+0x38]
  401ebe:	call   0x402ea4
  401ec3:	mov    r10,QWORD PTR [rsp+0x38]
  401ec8:	cmp    ebp,0x4b0
  401ece:	jne    0x401f18
  401ed0:	mov    ecx,edi
  401ed2:	cmp    esi,edi
  401ed4:	jbe    0x401f69
  401eda:	mov    edx,edi
  401edc:	mov    r8,r10
  401edf:	mov    eax,edx
  401ee1:	movzx  r9d,WORD PTR [rax+rbx*1]
  401ee6:	cmp    r9w,di
  401eea:	je     0x401eff
  401eec:	mov    WORD PTR [r8],r9w
  401ef0:	inc    ecx
  401ef2:	add    edx,0x2
  401ef5:	add    r8,0x2
  401ef9:	cmp    ecx,esi
  401efb:	jb     0x401edf
  401efd:	jmp    0x401f69
  401eff:	mov    rcx,rbx
  401f02:	call   0x40215c
  401f07:	nop
  401f08:	mov    rcx,QWORD PTR [rsp+0x38]
  401f0d:	call   0x40215c
  401f12:	nop
  401f13:	jmp    0x402075
  401f18:	mov    ecx,edi
  401f1a:	cmp    esi,edi
  401f1c:	jbe    0x401f69
  401f1e:	mov    r8d,edi
  401f21:	mov    rdx,r10
  401f24:	mov    eax,r8d
  401f27:	movzx  r9d,BYTE PTR [rax+rbx*1]
  401f2c:	shl    r9w,0x8
  401f31:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
  401f36:	or     r9w,ax
  401f3a:	je     0x401f50
  401f3c:	mov    WORD PTR [rdx],r9w
  401f40:	inc    ecx
  401f42:	add    r8d,0x2
  401f46:	add    rdx,0x2
  401f4a:	cmp    ecx,esi
  401f4c:	jb     0x401f24
  401f4e:	jmp    0x401f69
  401f50:	mov    rcx,rbx
  401f53:	call   0x40215c
  401f58:	nop
  401f59:	mov    rcx,QWORD PTR [rsp+0x38]
  401f5e:	call   0x40215c
  401f63:	nop
  401f64:	jmp    0x402075
  401f69:	mov    WORD PTR [r10+rsi*2],di
  401f6e:	mov    DWORD PTR [rsp+0x40],esi
  401f72:	mov    rcx,rbx
  401f75:	call   0x40215c
  401f7a:	lea    rcx,[rsp+0x48]
  401f7f:	call   0x403150
  401f84:	nop
  401f85:	mov    ebx,edi
  401f87:	mov    r8,QWORD PTR [rsp+0x38]
  401f8c:	mov    ecx,DWORD PTR [rsp+0x40]
  401f90:	cmp    ecx,edi
  401f92:	jbe    0x401fa8
  401f94:	mov    rax,r8
  401f97:	cmp    WORD PTR [rax],0xfeff
  401f9c:	jne    0x401fa8
  401f9e:	inc    ebx
  401fa0:	add    rax,0x2
  401fa4:	cmp    ebx,ecx
  401fa6:	jb     0x401f97
  401fa8:	movsxd rbp,ebx
  401fab:	cmp    ebx,ecx
  401fad:	jae    0x40204e
  401fb3:	add    rbp,rbp
  401fb6:	mov    edx,DWORD PTR [rsp+0x50]
  401fba:	jmp    0x401fc1
  401fbc:	mov    r8,QWORD PTR [rsp+0x38]
  401fc1:	movzx  esi,WORD PTR [r8+rbp*1]
  401fc6:	cmp    si,0xfeff
  401fcb:	je     0x402036
  401fcd:	cmp    si,0xfffe
  401fd2:	je     0x402036
  401fd4:	cmp    si,0xa
  401fd8:	je     0x40200b
  401fda:	cmp    si,0xd
  401fde:	je     0x40200b
  401fe0:	cmp    DWORD PTR [rsp+0x54],edx
  401fe4:	jne    0x401ff4
  401fe6:	lea    rcx,[rsp+0x48]
  401feb:	call   0x402f2c
  401ff0:	mov    edx,DWORD PTR [rsp+0x50]
  401ff4:	mov    rcx,QWORD PTR [rsp+0x48]
  401ff9:	mov    eax,edx
  401ffb:	mov    WORD PTR [rcx+rax*2],si
  401fff:	inc    edx
  402001:	mov    WORD PTR [rcx+rdx*2],di
  402005:	mov    DWORD PTR [rsp+0x50],edx
  402009:	jmp    0x402028
  40200b:	lea    rdx,[rsp+0x48]
  402010:	mov    rcx,r12
  402013:	call   0x401ba0
  402018:	mov    DWORD PTR [rsp+0x50],edi
  40201c:	mov    rax,QWORD PTR [rsp+0x48]
  402021:	mov    WORD PTR [rax],di
  402024:	mov    edx,DWORD PTR [rsp+0x50]
  402028:	inc    ebx
  40202a:	add    rbp,0x2
  40202e:	cmp    ebx,DWORD PTR [rsp+0x40]
  402032:	jb     0x401fbc
  402034:	jmp    0x40204e
  402036:	mov    rcx,QWORD PTR [rsp+0x48]
  40203b:	call   0x40215c
  402040:	nop
  402041:	mov    rcx,QWORD PTR [rsp+0x38]
  402046:	call   0x40215c
  40204b:	nop
  40204c:	jmp    0x402075
  40204e:	lea    rdx,[rsp+0x48]
  402053:	mov    rcx,r12
  402056:	call   0x401ba0
  40205b:	nop
  40205c:	mov    rcx,QWORD PTR [rsp+0x48]
  402061:	call   0x40215c
  402066:	nop
  402067:	mov    rcx,QWORD PTR [rsp+0x38]
  40206c:	call   0x40215c
  402071:	nop
  402072:	mov    dil,0x1
  402075:	lea    rcx,[rsp+0x68]
  40207a:	call   0x408c80
  40207f:	mov    al,dil
  402082:	add    rsp,0x80
  402089:	pop    r12
  40208b:	pop    rdi
  40208c:	pop    rsi
  40208d:	pop    rbp
  40208e:	pop    rbx
  40208f:	ret    
  402090:	int3   
  402091:	int3   
  402092:	int3   
  402093:	int3   
  402094:	int3   
  402095:	int3   
  402096:	int3   
  402097:	int3   
  402098:	rex.W push rbp
  40209a:	sub    rsp,0x20
  40209e:	mov    rbp,rdx
  4020a1:	lea    rcx,[rbp+0x68]
  4020a5:	call   0x409728
  4020aa:	add    rsp,0x20
  4020ae:	pop    rbp
  4020af:	ret    
  4020b0:	int3   
  4020b1:	int3   
  4020b2:	int3   
  4020b3:	int3   
  4020b4:	int3   
  4020b5:	int3   
  4020b6:	int3   
  4020b7:	int3   
  4020b8:	rex.W push rbp
  4020ba:	sub    rsp,0x20
  4020be:	mov    rbp,rdx
  4020c1:	lea    rcx,[rbp+0x38]
  4020c5:	call   0x401000
  4020ca:	add    rsp,0x20
  4020ce:	pop    rbp
  4020cf:	ret    
  4020d0:	int3   
  4020d1:	int3   
  4020d2:	int3   
  4020d3:	int3   
  4020d4:	int3   
  4020d5:	int3   
  4020d6:	int3   
  4020d7:	int3   
  4020d8:	rex.W push rbp
  4020da:	sub    rsp,0x20
  4020de:	mov    rbp,rdx
  4020e1:	lea    rcx,[rbp+0xc8]
  4020e8:	call   0x401000
  4020ed:	add    rsp,0x20
  4020f1:	pop    rbp
  4020f2:	ret    
  4020f3:	int3   
  4020f4:	int3   
  4020f5:	int3   
  4020f6:	int3   
  4020f7:	int3   
  4020f8:	rex.W push rbp
  4020fa:	sub    rsp,0x20
  4020fe:	mov    rbp,rdx
  402101:	lea    rcx,[rbp+0x58]
  402105:	call   0x401000
  40210a:	add    rsp,0x20
  40210e:	pop    rbp
  40210f:	ret    
  402110:	int3   
  402111:	int3   
  402112:	int3   
  402113:	int3   
  402114:	int3   
  402115:	int3   
  402116:	int3   
  402117:	int3   
  402118:	rex.W push rbp
  40211a:	sub    rsp,0x20
  40211e:	mov    rbp,rdx
  402121:	lea    rcx,[rbp+0x48]
  402125:	call   0x401000
  40212a:	add    rsp,0x20
  40212e:	pop    rbp
  40212f:	ret    
  402130:	sub    rsp,0x28
  402134:	call   QWORD PTR [rip+0x4b266]        # 0x44d3a0
  40213a:	test   rax,rax
  40213d:	jne    0x402155
  40213f:	lea    rdx,[rip+0x64eaa]        # 0x466ff0
  402146:	lea    rcx,[rsp+0x38]
  40214b:	mov    BYTE PTR [rsp+0x38],al
  40214f:	call   0x44b71e
  402154:	int3   
  402155:	add    rsp,0x28
  402159:	ret    
  40215a:	int3   
  40215b:	int3   
  40215c:	rex.W jmp QWORD PTR [rip+0x4b22d]        # 0x44d390
  402163:	int3   
  402164:	rex.W push rbx
  402166:	push   rdi
  402167:	sub    rsp,0x28
  40216b:	xor    ebx,ebx
  40216d:	mov    rdi,rcx
  402170:	cmp    BYTE PTR [rcx+0x8],bl
  402173:	jne    0x402179
  402175:	mov    al,0x1
  402177:	jmp    0x40218f
  402179:	mov    rcx,QWORD PTR [rcx]
  40217c:	call   QWORD PTR [rip+0x4b206]        # 0x44d388
  402182:	cmp    eax,ebx
  402184:	setne  al
  402187:	cmp    al,bl
  402189:	mov    BYTE PTR [rdi+0x8],al
  40218c:	sete   al
  40218f:	add    rsp,0x28
  402193:	pop    rdi
  402194:	pop    rbx
  402195:	ret    
  402196:	int3   
  402197:	int3   
  402198:	rex.W push rbx
  40219a:	sub    rsp,0x20
  40219e:	mov    rbx,rcx
  4021a1:	mov    rcx,QWORD PTR [rcx]
  4021a4:	call   QWORD PTR [rip+0x4b1d6]        # 0x44d380
  4021aa:	cmp    eax,0xffffffff
  4021ad:	jne    0x4021db
  4021af:	mov    rcx,QWORD PTR [rbx]
  4021b2:	mov    edx,DWORD PTR [rcx+0x18]
  4021b5:	shr    edx,0x4
  4021b8:	test   dl,0x1
  4021bb:	jne    0x4021db
  4021bd:	mov    rax,QWORD PTR [rip+0x65e74]        # 0x468038
  4021c4:	lea    rdx,[rip+0x64ead]        # 0x467078
  4021cb:	lea    rcx,[rsp+0x38]
  4021d0:	mov    QWORD PTR [rsp+0x38],rax
  4021d5:	call   0x44b71e
  4021da:	int3   
  4021db:	add    rsp,0x20
  4021df:	pop    rbx
  4021e0:	ret    
  4021e1:	int3   
  4021e2:	int3   
  4021e3:	int3   
  4021e4:	mov    QWORD PTR [rsp+0x10],rdx
  4021e9:	push   rbx
  4021ea:	push   rbp
  4021eb:	push   rsi
  4021ec:	push   rdi
  4021ed:	sub    rsp,0x38
  4021f1:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
  4021fa:	mov    sil,r8b
  4021fd:	mov    rbx,rdx
  402200:	mov    rbp,rcx
  402203:	mov    DWORD PTR [rsp+0x78],0x0
  40220b:	mov    rcx,rdx
  40220e:	call   0x402b34
  402213:	mov    DWORD PTR [rsp+0x78],0x1
  40221b:	mov    rcx,rbp
  40221e:	call   0x402198
  402223:	mov    edi,eax
  402225:	cmp    eax,0xffffffff
  402228:	je     0x402267
  40222a:	test   dil,dil
  40222d:	je     0x40228a
  40222f:	cmp    dil,0xa
  402233:	je     0x4022a8
  402235:	mov    ecx,DWORD PTR [rbx+0x8]
  402238:	cmp    DWORD PTR [rbx+0xc],ecx
  40223b:	jne    0x402245
  40223d:	mov    rcx,rbx
  402240:	call   0x402af0
  402245:	mov    edx,DWORD PTR [rbx+0x8]
  402248:	mov    rcx,QWORD PTR [rbx]
  40224b:	mov    BYTE PTR [rdx+rcx*1],dil
  40224f:	inc    edx
  402251:	mov    BYTE PTR [rdx+rcx*1],0x0
  402255:	mov    DWORD PTR [rbx+0x8],edx
  402258:	mov    rcx,rbp
  40225b:	call   0x402198
  402260:	mov    edi,eax
  402262:	cmp    eax,0xffffffff
  402265:	jne    0x40222a
  402267:	test   sil,sil
  40226a:	jne    0x4022a8
  40226c:	mov    rax,QWORD PTR [rip+0x65dbd]        # 0x468030
  402273:	mov    QWORD PTR [rsp+0x20],rax
  402278:	lea    rdx,[rip+0x64df9]        # 0x467078
  40227f:	lea    rcx,[rsp+0x20]
  402284:	call   0x44b71e
  402289:	int3   
  40228a:	mov    rax,QWORD PTR [rip+0x65daf]        # 0x468040
  402291:	mov    QWORD PTR [rsp+0x20],rax
  402296:	lea    rdx,[rip+0x64ddb]        # 0x467078
  40229d:	lea    rcx,[rsp+0x20]
  4022a2:	call   0x44b71e
  4022a7:	int3   
  4022a8:	mov    rax,rbx
  4022ab:	add    rsp,0x38
  4022af:	pop    rdi
  4022b0:	pop    rsi
  4022b1:	pop    rbp
  4022b2:	pop    rbx
  4022b3:	ret    
  4022b4:	int3   
  4022b5:	int3   
  4022b6:	int3   
  4022b7:	int3   
  4022b8:	int3   
  4022b9:	int3   
  4022ba:	int3   
  4022bb:	int3   
  4022bc:	int3   
  4022bd:	int3   
  4022be:	int3   
  4022bf:	int3   
  4022c0:	int3   
  4022c1:	int3   
  4022c2:	int3   
  4022c3:	int3   
  4022c4:	rex.W push rbp
  4022c6:	sub    rsp,0x20
  4022ca:	mov    rbp,rdx
  4022cd:	mov    eax,DWORD PTR [rbp+0x78]
  4022d0:	and    eax,0x1
  4022d3:	test   eax,eax
  4022d5:	je     0x4022e4
  4022d7:	and    DWORD PTR [rbp+0x78],0xfffffffe
  4022db:	mov    rcx,QWORD PTR [rbp+0x68]
  4022df:	call   0x401000
  4022e4:	add    rsp,0x20
  4022e8:	pop    rbp
  4022e9:	ret    
  4022ea:	int3   
  4022eb:	int3   
  4022ec:	mov    QWORD PTR [rsp+0x10],rdx
  4022f1:	push   rbx
  4022f2:	push   rsi
  4022f3:	push   rdi
  4022f4:	mov    rax,rsp
  4022f7:	sub    rsp,0x50
  4022fb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  402304:	mov    rbx,rdx
  402307:	mov    DWORD PTR [rax+0x30],0x0
  40230e:	mov    esi,0x1
  402313:	mov    r8b,sil
  402316:	lea    rdx,[rax-0x28]
  40231a:	call   0x4021e4
  40231f:	nop
  402320:	mov    edi,DWORD PTR [rip+0x65d9a]        # 0x4680c0
  402326:	cmp    edi,0xffffffff
  402329:	cmove  edi,esi
  40232c:	mov    rcx,rbx
  40232f:	call   0x403150
  402334:	nop
  402335:	mov    DWORD PTR [rsp+0x80],esi
  40233c:	cmp    edi,0xfde9
  402342:	jne    0x402353
  402344:	mov    rdx,rbx
  402347:	lea    rcx,[rsp+0x28]
  40234c:	call   0x40408c
  402351:	jmp    0x40237d
  402353:	mov    r8d,edi
  402356:	lea    rdx,[rsp+0x28]
  40235b:	lea    rcx,[rsp+0x38]
  402360:	call   0x403d2c
  402365:	nop
  402366:	mov    rdx,rax
  402369:	mov    rcx,rbx
  40236c:	call   0x4032f8
  402371:	nop
  402372:	mov    rcx,QWORD PTR [rsp+0x38]
  402377:	call   0x40215c
  40237c:	nop
  40237d:	mov    rcx,QWORD PTR [rsp+0x28]
  402382:	call   0x40215c
  402387:	mov    rax,rbx
  40238a:	add    rsp,0x50
  40238e:	pop    rdi
  40238f:	pop    rsi
  402390:	pop    rbx
  402391:	ret    
  402392:	int3   
  402393:	int3   
  402394:	int3   
  402395:	int3   
  402396:	int3   
  402397:	int3   
  402398:	int3   
  402399:	int3   
  40239a:	int3   
  40239b:	int3   
  40239c:	rex.W push rbp
  40239e:	sub    rsp,0x20
  4023a2:	mov    rbp,rdx
  4023a5:	lea    rcx,[rbp+0x28]
  4023a9:	call   0x401000
  4023ae:	add    rsp,0x20
  4023b2:	pop    rbp
  4023b3:	ret    
  4023b4:	int3   
  4023b5:	int3   
  4023b6:	int3   
  4023b7:	int3   
  4023b8:	int3   
  4023b9:	int3   
  4023ba:	int3   
  4023bb:	int3   
  4023bc:	rex.W push rbp
  4023be:	sub    rsp,0x20
  4023c2:	mov    rbp,rdx
  4023c5:	mov    eax,DWORD PTR [rbp+0x80]
  4023cb:	and    eax,0x1
  4023ce:	test   eax,eax
  4023d0:	je     0x4023e2
  4023d2:	and    DWORD PTR [rbp+0x80],0xfffffffe
  4023d9:	mov    rcx,QWORD PTR [rbp+0x78]
  4023dd:	call   0x401000
  4023e2:	add    rsp,0x20
  4023e6:	pop    rbp
  4023e7:	ret    
  4023e8:	int3   
  4023e9:	int3   
  4023ea:	int3   
  4023eb:	int3   
  4023ec:	rex.W push rbp
  4023ee:	sub    rsp,0x20
  4023f2:	mov    rbp,rdx
  4023f5:	lea    rcx,[rbp+0x38]
  4023f9:	call   0x401000
  4023fe:	add    rsp,0x20
  402402:	pop    rbp
  402403:	ret    
  402404:	rex.W push rbx
  402406:	sub    rsp,0x20
  40240a:	cmp    BYTE PTR [rcx+0x8],0x0
  40240e:	mov    rbx,rcx
  402411:	je     0x40242f
  402413:	mov    rcx,QWORD PTR [rcx]
  402416:	call   QWORD PTR [rip+0x4af6c]        # 0x44d388
  40241c:	test   eax,eax
  40241e:	je     0x402424
  402420:	xor    al,al
  402422:	jmp    0x402431
  402424:	mov    QWORD PTR [rbx],0x0
  40242b:	mov    BYTE PTR [rbx+0x8],0x0
  40242f:	mov    al,0x1
  402431:	add    rsp,0x20
  402435:	pop    rbx
  402436:	ret    
  402437:	int3   
  402438:	sub    rsp,0x28
  40243c:	mov    rcx,QWORD PTR [rcx]
  40243f:	call   QWORD PTR [rip+0x4af1b]        # 0x44d360
  402445:	xor    ecx,ecx
  402447:	cmp    eax,ecx
  402449:	sete   al
  40244c:	add    rsp,0x28
  402450:	ret    
  402451:	int3   
  402452:	int3   
  402453:	int3   
  402454:	rex.W push rbx
  402456:	sub    rsp,0x20
  40245a:	mov    rdx,QWORD PTR [rcx]
  40245d:	mov    rbx,rcx
  402460:	mov    ecx,0xa
  402465:	call   QWORD PTR [rip+0x4aefd]        # 0x44d368
  40246b:	mov    rax,rbx
  40246e:	add    rsp,0x20
  402472:	pop    rbx
  402473:	ret    
  402474:	rex.W push rbx
  402476:	push   rsi
  402477:	push   rdi
  402478:	sub    rsp,0x50
  40247c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  402485:	mov    rsi,rdx
  402488:	mov    rbx,rcx
  40248b:	mov    edi,DWORD PTR [rip+0x65c2f]        # 0x4680c0
  402491:	mov    eax,0x1
  402496:	cmp    edi,0xffffffff
  402499:	cmove  edi,eax
  40249c:	lea    rcx,[rsp+0x28]
  4024a1:	call   0x402b34
  4024a6:	nop
  4024a7:	cmp    edi,0xfde9
  4024ad:	jne    0x4024d9
  4024af:	mov    rdx,rsi
  4024b2:	lea    rcx,[rsp+0x38]
  4024b7:	call   0x4031c0
  4024bc:	nop
  4024bd:	lea    rdx,[rsp+0x28]
  4024c2:	lea    rcx,[rsp+0x38]
  4024c7:	call   0x404114
  4024cc:	nop
  4024cd:	mov    rcx,QWORD PTR [rsp+0x38]
  4024d2:	call   0x40215c
  4024d7:	jmp    0x402504
  4024d9:	mov    rdx,rsi
  4024dc:	lea    rcx,[rsp+0x38]
  4024e1:	call   0x4031c0
  4024e6:	nop
  4024e7:	mov    r8d,edi
  4024ea:	lea    rdx,[rsp+0x38]
  4024ef:	lea    rcx,[rsp+0x28]
  4024f4:	call   0x403da4
  4024f9:	nop
  4024fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4024ff:	call   0x40215c
  402504:	mov    rdx,QWORD PTR [rbx]
  402507:	mov    rcx,QWORD PTR [rsp+0x28]
  40250c:	call   QWORD PTR [rip+0x4ae5e]        # 0x44d370
  402512:	nop
  402513:	mov    rcx,QWORD PTR [rsp+0x28]
  402518:	call   0x40215c
  40251d:	mov    rax,rbx
  402520:	add    rsp,0x50
  402524:	pop    rdi
  402525:	pop    rsi
  402526:	pop    rbx
  402527:	ret    
  402528:	int3   
  402529:	int3   
  40252a:	int3   
  40252b:	int3   
  40252c:	int3   
  40252d:	int3   
  40252e:	int3   
  40252f:	int3   
  402530:	int3   
  402531:	int3   
  402532:	int3   
  402533:	int3   
  402534:	rex.W push rbp
  402536:	sub    rsp,0x20
  40253a:	mov    rbp,rdx
  40253d:	lea    rcx,[rbp+0x28]
  402541:	call   0x401000
  402546:	add    rsp,0x20
  40254a:	pop    rbp
  40254b:	ret    
  40254c:	int3   
  40254d:	int3   
  40254e:	int3   
  40254f:	int3   
  402550:	int3   
  402551:	int3   
  402552:	int3   
  402553:	int3   
  402554:	rex.W push rbp
  402556:	sub    rsp,0x20
  40255a:	mov    rbp,rdx
  40255d:	lea    rcx,[rbp+0x38]
  402561:	call   0x401000
  402566:	add    rsp,0x20
  40256a:	pop    rbp
  40256b:	ret    
  40256c:	int3   
  40256d:	int3   
  40256e:	int3   
  40256f:	int3   
  402570:	int3   
  402571:	int3   
  402572:	int3   
  402573:	int3   
  402574:	rex.W push rbp
  402576:	sub    rsp,0x20
  40257a:	mov    rbp,rdx
  40257d:	lea    rcx,[rbp+0x38]
  402581:	call   0x401000
  402586:	add    rsp,0x20
  40258a:	pop    rbp
  40258b:	ret    
  40258c:	sub    rsp,0x28
  402590:	mov    r8d,DWORD PTR [rip+0x65b29]        # 0x4680c0
  402597:	mov    rax,rdx
  40259a:	mov    edx,0x1
  40259f:	cmp    r8d,0xffffffff
  4025a3:	cmove  r8d,edx
  4025a7:	cmp    r8d,0xfde9
  4025ae:	jne    0x4025ba
  4025b0:	mov    rdx,rax
  4025b3:	call   0x404114
  4025b8:	jmp    0x4025c5
  4025ba:	mov    rdx,rcx
  4025bd:	mov    rcx,rax
  4025c0:	call   0x403da4
  4025c5:	add    rsp,0x28
  4025c9:	ret    
  4025ca:	int3   
  4025cb:	int3   
  4025cc:	rex.W push rbx
  4025ce:	push   rdi
  4025cf:	sub    rsp,0x28
  4025d3:	mov    rax,rdx
  4025d6:	mov    rbx,rcx
  4025d9:	mov    rdx,r8
  4025dc:	mov    rcx,rax
  4025df:	mov    rdi,r8
  4025e2:	call   0x40258c
  4025e7:	mov    rdx,QWORD PTR [rbx]
  4025ea:	mov    rcx,QWORD PTR [rdi]
  4025ed:	add    rsp,0x28
  4025f1:	pop    rdi
  4025f2:	pop    rbx
  4025f3:	rex.W jmp QWORD PTR [rip+0x4ad76]        # 0x44d370
  4025fa:	int3   
  4025fb:	int3   
  4025fc:	rex.W push rbx
  4025fe:	sub    rsp,0x40
  402602:	mov    rbx,rcx
  402605:	movsxd rcx,edx
  402608:	lea    rdx,[rsp+0x20]
  40260d:	call   0x401b8c
  402612:	mov    rdx,QWORD PTR [rbx]
  402615:	lea    rcx,[rsp+0x20]
  40261a:	call   QWORD PTR [rip+0x4ad50]        # 0x44d370
  402620:	mov    rax,rbx
  402623:	add    rsp,0x40
  402627:	pop    rbx
  402628:	ret    
  402629:	int3   
  40262a:	int3   
  40262b:	int3   
  40262c:	rex.W push rbx
  40262e:	sub    rsp,0x40
  402632:	mov    rax,rdx
  402635:	mov    rbx,rcx
  402638:	lea    rdx,[rsp+0x20]
  40263d:	mov    rcx,rax
  402640:	call   0x401b8c
  402645:	mov    rdx,QWORD PTR [rbx]
  402648:	lea    rcx,[rsp+0x20]
  40264d:	call   QWORD PTR [rip+0x4ad1d]        # 0x44d370
  402653:	mov    rax,rbx
  402656:	add    rsp,0x40
  40265a:	pop    rbx
  40265b:	ret    
  40265c:	rex.W push rbx
  40265e:	sub    rsp,0x30
  402662:	mov    eax,edx
  402664:	mov    rbx,rcx
  402667:	lea    rdx,[rsp+0x20]
  40266c:	mov    ecx,eax
  40266e:	call   0x401930
  402673:	mov    rdx,QWORD PTR [rbx]
  402676:	lea    rcx,[rsp+0x20]
  40267b:	call   QWORD PTR [rip+0x4acef]        # 0x44d370
  402681:	mov    rax,rbx
  402684:	add    rsp,0x30
  402688:	pop    rbx
  402689:	ret    
  40268a:	int3   
  40268b:	int3   
  40268c:	rex.W push rbx
  40268e:	sub    rsp,0x40
  402692:	mov    rax,rdx
  402695:	mov    rbx,rcx
  402698:	lea    rdx,[rsp+0x20]
  40269d:	mov    rcx,rax
  4026a0:	call   0x4019a4
  4026a5:	mov    rdx,QWORD PTR [rbx]
  4026a8:	lea    rcx,[rsp+0x20]
  4026ad:	call   QWORD PTR [rip+0x4acbd]        # 0x44d370
  4026b3:	mov    rax,rbx
  4026b6:	add    rsp,0x40
  4026ba:	pop    rbx
  4026bb:	ret    
  4026bc:	mov    r8b,BYTE PTR [rcx]
  4026bf:	mov    rax,rcx
  4026c2:	jmp    0x4026cf
  4026c4:	test   r8b,r8b
  4026c7:	je     0x4026d8
  4026c9:	inc    rax
  4026cc:	mov    r8b,BYTE PTR [rax]
  4026cf:	cmp    r8b,dl
  4026d2:	jne    0x4026c4
  4026d4:	sub    rax,rcx
  4026d7:	ret    
  4026d8:	mov    eax,0xffffffff
  4026dd:	ret    
  4026de:	int3   
  4026df:	int3   
  4026e0:	movzx  r8d,WORD PTR [rcx]
  4026e4:	mov    rax,rcx
  4026e7:	jmp    0x4026f7
  4026e9:	test   r8w,r8w
  4026ed:	je     0x402704
  4026ef:	add    rax,0x2
  4026f3:	mov    r8w,WORD PTR [rax]
  4026f7:	cmp    r8w,dx
  4026fb:	jne    0x4026e9
  4026fd:	sub    rax,rcx
  402700:	sar    rax,1
  402703:	ret    
  402704:	mov    eax,0xffffffff
  402709:	ret    
  40270a:	int3   
  40270b:	int3   
  40270c:	jmp    0x402722
  40270e:	lea    eax,[rdx-0x41]
  402711:	cmp    ax,0x19
  402715:	ja     0x40271b
  402717:	add    dx,0x20
  40271b:	mov    WORD PTR [rcx],dx
  40271e:	add    rcx,0x2
  402722:	movzx  edx,WORD PTR [rcx]
  402725:	test   dx,dx
  402728:	jne    0x40270e
  40272a:	ret    
  40272b:	int3   
  40272c:	rex.W push rbx
  40272e:	push   rbp
  40272f:	push   rsi
  402730:	push   rdi
  402731:	push   r12
  402733:	sub    rsp,0x20
  402737:	mov    rbp,rdx
  40273a:	mov    r12,rcx
  40273d:	movzx  ebx,WORD PTR [r12]
  402742:	mov    di,WORD PTR [rbp+0x0]
  402746:	add    r12,0x2
  40274a:	add    rbp,0x2
  40274e:	cmp    bx,di
  402751:	je     0x4027a4
  402753:	cmp    bx,0x61
  402757:	jb     0x40276a
  402759:	cmp    bx,0x7a
  40275d:	ja     0x402764
  40275f:	lea    esi,[rbx-0x20]
  402762:	jmp    0x40277b
  402764:	cmp    bx,0x7f
  402768:	ja     0x40276f
  40276a:	mov    si,bx
  40276d:	jmp    0x40277b
  40276f:	movzx  ecx,bx
  402772:	call   QWORD PTR [rip+0x4ab40]        # 0x44d2b8
  402778:	mov    rsi,rax
  40277b:	cmp    di,0x61
  40277f:	jb     0x40279f
  402781:	cmp    di,0x7a
  402785:	ja     0x40278d
  402787:	sub    di,0x20
  40278b:	jmp    0x40279f
  40278d:	cmp    di,0x7f
  402791:	jbe    0x40279f
  402793:	movzx  ecx,di
  402796:	call   QWORD PTR [rip+0x4ab1c]        # 0x44d2b8
  40279c:	mov    rdi,rax
  40279f:	cmp    si,di
  4027a2:	jne    0x4027b6
  4027a4:	test   bx,bx
  4027a7:	jne    0x40273d
  4027a9:	mov    al,0x1
  4027ab:	add    rsp,0x20
  4027af:	pop    r12
  4027b1:	pop    rdi
  4027b2:	pop    rsi
  4027b3:	pop    rbp
  4027b4:	pop    rbx
  4027b5:	ret    
  4027b6:	xor    al,al
  4027b8:	jmp    0x4027ab
  4027ba:	int3   
  4027bb:	int3   
  4027bc:	mov    r9,QWORD PTR [rcx]
  4027bf:	jmp    0x4027eb
  4027c1:	movzx  r8d,WORD PTR [r9]
  4027c5:	add    r9,0x2
  4027c9:	lea    eax,[r8-0x41]
  4027cd:	cmp    ax,0x19
  4027d1:	ja     0x4027d8
  4027d3:	add    r8w,0x20
  4027d8:	lea    eax,[rcx-0x41]
  4027db:	cmp    al,0x19
  4027dd:	ja     0x4027e2
  4027df:	add    cl,0x20
  4027e2:	movzx  ecx,cl
  4027e5:	cmp    r8w,cx
  4027e9:	jne    0x4027f7
  4027eb:	mov    cl,BYTE PTR [rdx]
  4027ed:	inc    rdx
  4027f0:	test   cl,cl
  4027f2:	jne    0x4027c1
  4027f4:	mov    al,0x1
  4027f6:	ret    
  4027f7:	xor    al,al
  4027f9:	ret    
  4027fa:	int3   
  4027fb:	int3   
  4027fc:	jmp    0x40280a
  4027fe:	test   r8b,r8b
  402801:	je     0x40281b
  402803:	inc    rdx
  402806:	add    rcx,0x2
  40280a:	movzx  r8d,BYTE PTR [rdx]
  40280e:	cmp    r8w,WORD PTR [rcx]
  402812:	movzx  eax,r8w
  402816:	je     0x4027fe
  402818:	xor    al,al
  40281a:	ret    
  40281b:	mov    al,0x1
  40281d:	ret    
  40281e:	int3   
  40281f:	int3   
  402820:	mov    r10,rcx
  402823:	mov    r8b,BYTE PTR [r10]
  402826:	mov    r9b,BYTE PTR [rdx]
  402829:	inc    r10
  40282c:	inc    rdx
  40282f:	cmp    r8b,r9b
  402832:	je     0x402856
  402834:	lea    eax,[r8-0x41]
  402838:	cmp    al,0x19
  40283a:	ja     0x402842
  40283c:	lea    ecx,[r8+0x20]
  402840:	jmp    0x402845
  402842:	mov    cl,r8b
  402845:	lea    eax,[r9-0x41]
  402849:	cmp    al,0x19
  40284b:	ja     0x402851
  40284d:	add    r9b,0x20
  402851:	cmp    cl,r9b
  402854:	jne    0x40285e
  402856:	test   r8b,r8b
  402859:	jne    0x402823
  40285b:	mov    al,0x1
  40285d:	ret    
  40285e:	xor    al,al
  402860:	ret    
  402861:	int3   
  402862:	int3   
  402863:	int3   
  402864:	mov    r10,rcx
  402867:	movzx  r9d,BYTE PTR [rdx]
  40286b:	movzx  r8d,WORD PTR [r10]
  40286f:	add    r10,0x2
  402873:	inc    rdx
  402876:	cmp    r8w,r9w
  40287a:	movzx  eax,r9w
  40287e:	je     0x4028b0
  402880:	cmp    r8w,0x7f
  402885:	ja     0x4028b9
  402887:	lea    eax,[r8-0x41]
  40288b:	cmp    ax,0x19
  40288f:	ja     0x402897
  402891:	lea    ecx,[r8+0x20]
  402895:	jmp    0x40289b
  402897:	movzx  ecx,r8w
  40289b:	lea    eax,[r9-0x41]
  40289f:	cmp    al,0x19
  4028a1:	ja     0x4028a7
  4028a3:	add    r9b,0x20
  4028a7:	movzx  eax,r9b
  4028ab:	cmp    cx,ax
  4028ae:	jne    0x4028b9
  4028b0:	test   r8w,r8w
  4028b4:	jne    0x402867
  4028b6:	mov    al,0x1
  4028b8:	ret    
  4028b9:	xor    al,al
  4028bb:	ret    
  4028bc:	jmp    0x4028cb
  4028be:	movzx  eax,WORD PTR [rcx]
  4028c1:	add    rcx,0x2
  4028c5:	cmp    ax,r8w
  4028c9:	jne    0x4028dc
  4028cb:	movzx  r8d,WORD PTR [rdx]
  4028cf:	add    rdx,0x2
  4028d3:	test   r8w,r8w
  4028d7:	jne    0x4028be
  4028d9:	mov    al,0x1
  4028db:	ret    
  4028dc:	xor    al,al
  4028de:	ret    
  4028df:	int3   
  4028e0:	rex.W push rbx
  4028e2:	push   rbp
  4028e3:	push   rsi
  4028e4:	push   rdi
  4028e5:	sub    rsp,0x28
  4028e9:	mov    bx,WORD PTR [rdx]
  4028ec:	mov    rbp,rcx
  4028ef:	lea    rsi,[rdx+0x2]
  4028f3:	jmp    0x402956
  4028f5:	mov    di,WORD PTR [rbp+0x0]
  4028f9:	add    rbp,0x2
  4028fd:	cmp    di,bx
  402900:	je     0x40294f
  402902:	cmp    di,0x61
  402906:	jb     0x402926
  402908:	cmp    di,0x7a
  40290c:	ja     0x402914
  40290e:	sub    di,0x20
  402912:	jmp    0x402926
  402914:	cmp    di,0x7f
  402918:	jbe    0x402926
  40291a:	movzx  ecx,di
  40291d:	call   QWORD PTR [rip+0x4a995]        # 0x44d2b8
  402923:	mov    rdi,rax
  402926:	cmp    bx,0x61
  40292a:	jb     0x40294a
  40292c:	cmp    bx,0x7a
  402930:	ja     0x402938
  402932:	sub    bx,0x20
  402936:	jmp    0x40294a
  402938:	cmp    bx,0x7f
  40293c:	jbe    0x40294a
  40293e:	movzx  ecx,bx
  402941:	call   QWORD PTR [rip+0x4a971]        # 0x44d2b8
  402947:	mov    rbx,rax
  40294a:	cmp    di,bx
  40294d:	jne    0x40295f
  40294f:	mov    bx,WORD PTR [rsi]
  402952:	add    rsi,0x2
  402956:	test   bx,bx
  402959:	jne    0x4028f5
  40295b:	mov    al,0x1
  40295d:	jmp    0x402961
  40295f:	xor    al,al
  402961:	add    rsp,0x28
  402965:	pop    rdi
  402966:	pop    rsi
  402967:	pop    rbp
  402968:	pop    rbx
  402969:	ret    
  40296a:	int3   
  40296b:	int3   
  40296c:	rex.W push rbx
  40296e:	push   rbp
  40296f:	push   rsi
  402970:	push   rdi
  402971:	push   r12
  402973:	sub    rsp,0x20
  402977:	mov    rbp,rdx
  40297a:	mov    r12,rcx
  40297d:	movzx  edi,WORD PTR [r12]
  402982:	mov    bx,WORD PTR [rbp+0x0]
  402986:	add    r12,0x2
  40298a:	add    rbp,0x2
  40298e:	cmp    di,bx
  402991:	je     0x4029e6
  402993:	cmp    di,0x61
  402997:	jb     0x4029aa
  402999:	cmp    di,0x7a
  40299d:	ja     0x4029a4
  40299f:	lea    esi,[rdi-0x20]
  4029a2:	jmp    0x4029bb
  4029a4:	cmp    di,0x7f
  4029a8:	ja     0x4029af
  4029aa:	mov    si,di
  4029ad:	jmp    0x4029bb
  4029af:	movzx  ecx,di
  4029b2:	call   QWORD PTR [rip+0x4a900]        # 0x44d2b8
  4029b8:	mov    rsi,rax
  4029bb:	cmp    bx,0x61
  4029bf:	jb     0x4029df
  4029c1:	cmp    bx,0x7a
  4029c5:	ja     0x4029cd
  4029c7:	sub    bx,0x20
  4029cb:	jmp    0x4029df
  4029cd:	cmp    bx,0x7f
  4029d1:	jbe    0x4029df
  4029d3:	movzx  ecx,bx
  4029d6:	call   QWORD PTR [rip+0x4a8dc]        # 0x44d2b8
  4029dc:	mov    rbx,rax
  4029df:	cmp    si,bx
  4029e2:	jb     0x4029f8
  4029e4:	ja     0x4029ff
  4029e6:	test   di,di
  4029e9:	jne    0x40297d
  4029eb:	xor    eax,eax
  4029ed:	add    rsp,0x20
  4029f1:	pop    r12
  4029f3:	pop    rdi
  4029f4:	pop    rsi
  4029f5:	pop    rbp
  4029f6:	pop    rbx
  4029f7:	ret    
  4029f8:	mov    eax,0xffffffff
  4029fd:	jmp    0x4029ed
  4029ff:	mov    eax,0x1
  402a04:	jmp    0x4029ed
  402a06:	int3   
  402a07:	int3   
  402a08:	rex.W push rbx
  402a0a:	push   rsi
  402a0b:	push   rdi
  402a0c:	sub    rsp,0x20
  402a10:	cmp    edx,DWORD PTR [rcx+0x8]
  402a13:	mov    edi,edx
  402a15:	mov    rsi,rcx
  402a18:	jb     0x402a55
  402a1a:	cmp    edx,0x40000000
  402a20:	jae    0x402a55
  402a22:	lea    ecx,[rdx+0x1]
  402a25:	call   0x402130
  402a2a:	mov    r8d,DWORD PTR [rsi+0x8]
  402a2e:	mov    rdx,QWORD PTR [rsi]
  402a31:	inc    r8d
  402a34:	mov    rcx,rax
  402a37:	mov    rbx,rax
  402a3a:	call   0x44b480
  402a3f:	mov    rcx,QWORD PTR [rsi]
  402a42:	call   0x40215c
  402a47:	mov    QWORD PTR [rsi],rbx
  402a4a:	mov    DWORD PTR [rsi+0xc],edi
  402a4d:	add    rsp,0x20
  402a51:	pop    rdi
  402a52:	pop    rsi
  402a53:	pop    rbx
  402a54:	ret    
  402a55:	lea    rdx,[rip+0x64674]        # 0x4670d0
  402a5c:	lea    rcx,[rsp+0x48]
  402a61:	mov    DWORD PTR [rsp+0x48],0x13329ac
  402a69:	call   0x44b71e
  402a6e:	int3   
  402a6f:	int3   
  402a70:	rex.W push rbx
  402a72:	push   rsi
  402a73:	push   rdi
  402a74:	sub    rsp,0x20
  402a78:	cmp    edx,0x40000000
  402a7e:	mov    edi,edx
  402a80:	mov    rsi,rcx
  402a83:	jb     0x402a9f
  402a85:	lea    rdx,[rip+0x64644]        # 0x4670d0
  402a8c:	lea    rcx,[rsp+0x48]
  402a91:	mov    DWORD PTR [rsp+0x48],0x13329ac
  402a99:	call   0x44b71e
  402a9e:	int3   
  402a9f:	lea    ecx,[rdx+0x1]
  402aa2:	call   0x402130
  402aa7:	mov    rbx,rax
  402aaa:	mov    BYTE PTR [rax],0x0
  402aad:	mov    rcx,QWORD PTR [rsi]
  402ab0:	call   0x40215c
  402ab5:	mov    QWORD PTR [rsi],rbx
  402ab8:	mov    DWORD PTR [rsi+0xc],edi
  402abb:	add    rsp,0x20
  402abf:	pop    rdi
  402ac0:	pop    rsi
  402ac1:	pop    rbx
  402ac2:	ret    
  402ac3:	int3   
  402ac4:	rex.W push rbx
  402ac6:	push   rdi
  402ac7:	sub    rsp,0x28
  402acb:	mov    rbx,rcx
  402ace:	mov    QWORD PTR [rcx],0x0
  402ad5:	lea    ecx,[rdx+0x1]
  402ad8:	mov    edi,edx
  402ada:	call   0x402130
  402adf:	mov    DWORD PTR [rbx+0x8],edi
  402ae2:	mov    QWORD PTR [rbx],rax
  402ae5:	mov    DWORD PTR [rbx+0xc],edi
  402ae8:	add    rsp,0x28
  402aec:	pop    rdi
  402aed:	pop    rbx
  402aee:	ret    
  402aef:	int3   
  402af0:	mov    edx,DWORD PTR [rcx+0x8]
  402af3:	mov    eax,edx
  402af5:	shr    eax,1
  402af7:	lea    edx,[rax+rdx*1+0x10]
  402afb:	and    edx,0xfffffff0
  402afe:	dec    edx
  402b00:	jmp    0x402a08
  402b05:	int3   
  402b06:	int3   
  402b07:	int3   
  402b08:	sub    rsp,0x28
  402b0c:	mov    r8d,DWORD PTR [rcx+0x8]
  402b10:	mov    eax,DWORD PTR [rcx+0xc]
  402b13:	sub    eax,r8d
  402b16:	cmp    edx,eax
  402b18:	jbe    0x402b2f
  402b1a:	add    edx,r8d
  402b1d:	mov    eax,edx
  402b1f:	shr    eax,1
  402b21:	lea    edx,[rax+rdx*1+0x10]
  402b25:	and    edx,0xfffffff0
  402b28:	dec    edx
  402b2a:	call   0x402a08
  402b2f:	add    rsp,0x28
  402b33:	ret    
  402b34:	rex.W push rbx
  402b36:	sub    rsp,0x20
  402b3a:	mov    rbx,rcx
  402b3d:	mov    QWORD PTR [rcx],0x0
  402b44:	mov    ecx,0x4
  402b49:	call   0x402130
  402b4e:	mov    DWORD PTR [rbx+0x8],0x0
  402b55:	mov    DWORD PTR [rbx+0xc],0x3
  402b5c:	mov    QWORD PTR [rbx],rax
  402b5f:	mov    BYTE PTR [rax],0x0
  402b62:	mov    rax,rbx
  402b65:	add    rsp,0x20
  402b69:	pop    rbx
  402b6a:	ret    
  402b6b:	int3   
  402b6c:	rex.W push rbx
  402b6e:	push   rdi
  402b6f:	sub    rsp,0x28
  402b73:	mov    rbx,rdx
  402b76:	xor    edx,edx
  402b78:	mov    rdi,rcx
  402b7b:	cmp    BYTE PTR [rbx],dl
  402b7d:	je     0x402b8c
  402b7f:	mov    rax,rbx
  402b82:	inc    rax
  402b85:	inc    edx
  402b87:	cmp    BYTE PTR [rax],0x0
  402b8a:	jne    0x402b82
  402b8c:	call   0x402ac4
  402b91:	mov    r11,QWORD PTR [rdi]
  402b94:	mov    al,BYTE PTR [rbx]
  402b96:	inc    rbx
  402b99:	mov    BYTE PTR [r11],al
  402b9c:	inc    r11
  402b9f:	test   al,al
  402ba1:	jne    0x402b94
  402ba3:	mov    rax,rdi
  402ba6:	add    rsp,0x28
  402baa:	pop    rdi
  402bab:	pop    rbx
  402bac:	ret    
  402bad:	int3   
  402bae:	int3   
  402baf:	int3   
  402bb0:	rex.W push rbx
  402bb2:	push   rdi
  402bb3:	sub    rsp,0x28
  402bb7:	mov    rbx,rdx
  402bba:	mov    edx,DWORD PTR [rdx+0x8]
  402bbd:	mov    rdi,rcx
  402bc0:	call   0x402ac4
  402bc5:	mov    r11,QWORD PTR [rdi]
  402bc8:	mov    rdx,QWORD PTR [rbx]
  402bcb:	mov    al,BYTE PTR [rdx]
  402bcd:	inc    rdx
  402bd0:	mov    BYTE PTR [r11],al
  402bd3:	inc    r11
  402bd6:	test   al,al
  402bd8:	jne    0x402bcb
  402bda:	mov    rax,rdi
  402bdd:	add    rsp,0x28
  402be1:	pop    rdi
  402be2:	pop    rbx
  402be3:	ret    
  402be4:	rex.W push rbx
  402be6:	push   rbp
  402be7:	push   rsi
  402be8:	push   rdi
  402be9:	sub    rsp,0x28
  402bed:	xor    esi,esi
  402bef:	mov    rbp,rdx
  402bf2:	mov    rdi,rcx
  402bf5:	cmp    BYTE PTR [rdx],sil
  402bf8:	je     0x402c07
  402bfa:	mov    rax,rdx
  402bfd:	inc    rax
  402c00:	inc    esi
  402c02:	cmp    BYTE PTR [rax],0x0
  402c05:	jne    0x402bfd
  402c07:	cmp    esi,DWORD PTR [rcx+0xc]
  402c0a:	jbe    0x402c25
  402c0c:	lea    ecx,[rsi+0x1]
  402c0f:	call   0x402130
  402c14:	mov    rcx,QWORD PTR [rdi]
  402c17:	mov    rbx,rax
  402c1a:	call   0x40215c
  402c1f:	mov    QWORD PTR [rdi],rbx
  402c22:	mov    DWORD PTR [rdi+0xc],esi
  402c25:	mov    rcx,QWORD PTR [rdi]
  402c28:	mov    DWORD PTR [rdi+0x8],esi
  402c2b:	mov    al,BYTE PTR [rbp+0x0]
  402c2e:	inc    rbp
  402c31:	mov    BYTE PTR [rcx],al
  402c33:	inc    rcx
  402c36:	test   al,al
  402c38:	jne    0x402c2b
  402c3a:	mov    rax,rdi
  402c3d:	add    rsp,0x28
  402c41:	pop    rdi
  402c42:	pop    rsi
  402c43:	pop    rbp
  402c44:	pop    rbx
  402c45:	ret    
  402c46:	int3   
  402c47:	int3   
  402c48:	rex.W push rbx
  402c4a:	push   rbp
  402c4b:	push   rsi
  402c4c:	push   rdi
  402c4d:	sub    rsp,0x28
  402c51:	cmp    rdx,rcx
  402c54:	mov    rsi,rdx
  402c57:	mov    rdi,rcx
  402c5a:	je     0x402c94
  402c5c:	mov    ebp,DWORD PTR [rdx+0x8]
  402c5f:	cmp    ebp,DWORD PTR [rcx+0xc]
  402c62:	jbe    0x402c7d
  402c64:	lea    ecx,[rbp+0x1]
  402c67:	call   0x402130
  402c6c:	mov    rcx,QWORD PTR [rdi]
  402c6f:	mov    rbx,rax
  402c72:	call   0x40215c
  402c77:	mov    QWORD PTR [rdi],rbx
  402c7a:	mov    DWORD PTR [rdi+0xc],ebp
  402c7d:	mov    rcx,QWORD PTR [rdi]
  402c80:	mov    DWORD PTR [rdi+0x8],ebp
  402c83:	mov    rdx,QWORD PTR [rsi]
  402c86:	mov    al,BYTE PTR [rdx]
  402c88:	inc    rdx
  402c8b:	mov    BYTE PTR [rcx],al
  402c8d:	inc    rcx
  402c90:	test   al,al
  402c92:	jne    0x402c86
  402c94:	mov    rax,rdi
  402c97:	add    rsp,0x28
  402c9b:	pop    rdi
  402c9c:	pop    rsi
  402c9d:	pop    rbp
  402c9e:	pop    rbx
  402c9f:	ret    
  402ca0:	rex.W push rbx
  402ca2:	push   rbp
  402ca3:	push   rsi
  402ca4:	push   rdi
  402ca5:	sub    rsp,0x28
  402ca9:	movzx  eax,WORD PTR [rdx]
  402cac:	xor    edi,edi
  402cae:	mov    rbp,rdx
  402cb1:	test   ax,ax
  402cb4:	mov    rsi,rcx
  402cb7:	je     0x402cd0
  402cb9:	mov    rcx,rdx
  402cbc:	cmp    ax,0x80
  402cc0:	jae    0x402d18
  402cc2:	add    rcx,0x2
  402cc6:	inc    edi
  402cc8:	mov    ax,WORD PTR [rcx]
  402ccb:	test   ax,ax
  402cce:	jne    0x402cbc
  402cd0:	cmp    edi,DWORD PTR [rsi+0xc]
  402cd3:	jbe    0x402cee
  402cd5:	lea    ecx,[rdi+0x1]
  402cd8:	call   0x402130
  402cdd:	mov    rcx,QWORD PTR [rsi]
  402ce0:	mov    rbx,rax
  402ce3:	call   0x40215c
  402ce8:	mov    QWORD PTR [rsi],rbx
  402ceb:	mov    DWORD PTR [rsi+0xc],edi
  402cee:	mov    rdx,QWORD PTR [rsi]
  402cf1:	xor    ecx,ecx
  402cf3:	test   edi,edi
  402cf5:	mov    DWORD PTR [rsi+0x8],edi
  402cf8:	je     0x402d14
  402cfa:	mov    r8,rdx
  402cfd:	mov    ecx,edi
  402cff:	mov    r9d,edi
  402d02:	mov    al,BYTE PTR [rbp+0x0]
  402d05:	add    rbp,0x2
  402d09:	mov    BYTE PTR [r8],al
  402d0c:	inc    r8
  402d0f:	dec    r9
  402d12:	jne    0x402d02
  402d14:	mov    BYTE PTR [rcx+rdx*1],0x0
  402d18:	add    rsp,0x28
  402d1c:	pop    rdi
  402d1d:	pop    rsi
  402d1e:	pop    rbp
  402d1f:	pop    rbx
  402d20:	ret    
  402d21:	int3   
  402d22:	int3   
  402d23:	int3   
  402d24:	rex.W push rbx
  402d26:	push   rsi
  402d27:	push   rdi
  402d28:	sub    rsp,0x20
  402d2c:	xor    edi,edi
  402d2e:	mov    rsi,rdx
  402d31:	mov    rbx,rcx
  402d34:	cmp    BYTE PTR [rdx],dil
  402d37:	je     0x402d46
  402d39:	mov    rax,rdx
  402d3c:	inc    rax
  402d3f:	inc    edi
  402d41:	cmp    BYTE PTR [rax],0x0
  402d44:	jne    0x402d3c
  402d46:	mov    edx,edi
  402d48:	call   0x402b08
  402d4d:	mov    ecx,DWORD PTR [rbx+0x8]
  402d50:	add    rcx,QWORD PTR [rbx]
  402d53:	mov    al,BYTE PTR [rsi]
  402d55:	inc    rsi
  402d58:	mov    BYTE PTR [rcx],al
  402d5a:	inc    rcx
  402d5d:	test   al,al
  402d5f:	jne    0x402d53
  402d61:	add    DWORD PTR [rbx+0x8],edi
  402d64:	mov    rax,rbx
  402d67:	add    rsp,0x20
  402d6b:	pop    rdi
  402d6c:	pop    rsi
  402d6d:	pop    rbx
  402d6e:	ret    
  402d6f:	int3   
  402d70:	rex.W push rbx
  402d72:	push   rdi
  402d73:	sub    rsp,0x28
  402d77:	mov    rdi,rdx
  402d7a:	mov    edx,DWORD PTR [rdx+0x8]
  402d7d:	mov    rbx,rcx
  402d80:	call   0x402b08
  402d85:	mov    ecx,DWORD PTR [rbx+0x8]
  402d88:	mov    r8,QWORD PTR [rdi]
  402d8b:	add    rcx,QWORD PTR [rbx]
  402d8e:	mov    al,BYTE PTR [r8]
  402d91:	inc    r8
  402d94:	mov    BYTE PTR [rcx],al
  402d96:	inc    rcx
  402d99:	test   al,al
  402d9b:	jne    0x402d8e
  402d9d:	mov    eax,DWORD PTR [rdi+0x8]
  402da0:	add    DWORD PTR [rbx+0x8],eax
  402da3:	mov    rax,rbx
  402da6:	add    rsp,0x28
  402daa:	pop    rdi
  402dab:	pop    rbx
  402dac:	ret    
  402dad:	int3   
  402dae:	int3   
  402daf:	int3   
  402db0:	rex.W push rbx
  402db2:	push   rdi
  402db3:	sub    rsp,0x28
  402db7:	mov    rbx,QWORD PTR [rcx]
  402dba:	mov    rdi,rcx
  402dbd:	mov    al,BYTE PTR [rbx]
  402dbf:	cmp    al,0x20
  402dc1:	je     0x402dcb
  402dc3:	cmp    al,0xa
  402dc5:	je     0x402dcb
  402dc7:	cmp    al,0x9
  402dc9:	jne    0x402dd0
  402dcb:	inc    rbx
  402dce:	jmp    0x402dbd
  402dd0:	sub    ebx,DWORD PTR [rcx]
  402dd2:	je     0x402dee
  402dd4:	mov    r8d,DWORD PTR [rcx+0x8]
  402dd8:	mov    edx,ebx
  402dda:	add    rdx,QWORD PTR [rcx]
  402ddd:	mov    rcx,QWORD PTR [rcx]
  402de0:	sub    r8d,ebx
  402de3:	inc    r8d
  402de6:	call   0x44b774
  402deb:	sub    DWORD PTR [rdi+0x8],ebx
  402dee:	add    rsp,0x28
  402df2:	pop    rdi
  402df3:	pop    rbx
  402df4:	ret    
  402df5:	int3   
  402df6:	int3   
  402df7:	int3   
  402df8:	movsxd rdx,DWORD PTR [rcx+0x8]
  402dfc:	mov    r9,QWORD PTR [rcx]
  402dff:	test   edx,edx
  402e01:	mov    rax,rdx
  402e04:	je     0x402e22
  402e06:	lea    r8,[rdx+r9*1-0x1]
  402e0b:	mov    al,BYTE PTR [r8]
  402e0e:	cmp    al,0x20
  402e10:	je     0x402e1a
  402e12:	cmp    al,0xa
  402e14:	je     0x402e1a
  402e16:	cmp    al,0x9
  402e18:	jne    0x402e22
  402e1a:	dec    r8
  402e1d:	add    edx,0xffffffff
  402e20:	jne    0x402e0b
  402e22:	cmp    edx,DWORD PTR [rcx+0x8]
  402e25:	je     0x402e31
  402e27:	mov    eax,edx
  402e29:	mov    BYTE PTR [rax+r9*1],0x0
  402e2e:	mov    DWORD PTR [rcx+0x8],edx
  402e31:	ret    
  402e32:	int3   
  402e33:	int3   
  402e34:	rex.W push rbx
  402e36:	push   rsi
  402e37:	push   rdi
  402e38:	sub    rsp,0x20
  402e3c:	cmp    edx,DWORD PTR [rcx+0x8]
  402e3f:	mov    edi,edx
  402e41:	mov    rsi,rcx
  402e44:	jb     0x402e87
  402e46:	cmp    edx,0x40000000
  402e4c:	jae    0x402e87
  402e4e:	lea    ecx,[rdx+0x1]
  402e51:	add    rcx,rcx
  402e54:	call   0x402130
  402e59:	mov    r8d,DWORD PTR [rsi+0x8]
  402e5d:	mov    rdx,QWORD PTR [rsi]
  402e60:	inc    r8d
  402e63:	mov    rcx,rax
  402e66:	mov    rbx,rax
  402e69:	add    r8,r8
  402e6c:	call   0x44b480
  402e71:	mov    rcx,QWORD PTR [rsi]
  402e74:	call   0x40215c
  402e79:	mov    QWORD PTR [rsi],rbx
  402e7c:	mov    DWORD PTR [rsi+0xc],edi
  402e7f:	add    rsp,0x20
  402e83:	pop    rdi
  402e84:	pop    rsi
  402e85:	pop    rbx
  402e86:	ret    
  402e87:	lea    rdx,[rip+0x64242]        # 0x4670d0
  402e8e:	lea    rcx,[rsp+0x48]
  402e93:	mov    DWORD PTR [rsp+0x48],0x13329ad
  402e9b:	call   0x44b71e
  402ea0:	int3   
  402ea1:	int3   
  402ea2:	int3   
  402ea3:	int3   
  402ea4:	rex.W push rbx
  402ea6:	push   rsi
  402ea7:	push   rdi
  402ea8:	sub    rsp,0x20
  402eac:	cmp    edx,0x40000000
  402eb2:	mov    edi,edx
  402eb4:	mov    rsi,rcx
  402eb7:	jb     0x402ed3
  402eb9:	lea    rdx,[rip+0x64210]        # 0x4670d0
  402ec0:	lea    rcx,[rsp+0x48]
  402ec5:	mov    DWORD PTR [rsp+0x48],0x13329ad
  402ecd:	call   0x44b71e
  402ed2:	int3   
  402ed3:	lea    ecx,[rdx+0x1]
  402ed6:	add    rcx,rcx
  402ed9:	call   0x402130
  402ede:	mov    rbx,rax
  402ee1:	mov    WORD PTR [rax],0x0
  402ee6:	mov    rcx,QWORD PTR [rsi]
  402ee9:	call   0x40215c
  402eee:	mov    QWORD PTR [rsi],rbx
  402ef1:	mov    DWORD PTR [rsi+0xc],edi
  402ef4:	add    rsp,0x20
  402ef8:	pop    rdi
  402ef9:	pop    rsi
  402efa:	pop    rbx
  402efb:	ret    
  402efc:	rex.W push rbx
  402efe:	push   rdi
  402eff:	sub    rsp,0x28
  402f03:	mov    rbx,rcx
  402f06:	mov    QWORD PTR [rcx],0x0
  402f0d:	lea    ecx,[rdx+0x1]
  402f10:	add    rcx,rcx
  402f13:	mov    edi,edx
  402f15:	call   0x402130
  402f1a:	mov    DWORD PTR [rbx+0x8],edi
  402f1d:	mov    DWORD PTR [rbx+0xc],edi
  402f20:	mov    QWORD PTR [rbx],rax
  402f23:	add    rsp,0x28
  402f27:	pop    rdi
  402f28:	pop    rbx
  402f29:	ret    
  402f2a:	int3   
  402f2b:	int3   
  402f2c:	mov    edx,DWORD PTR [rcx+0x8]
  402f2f:	mov    eax,edx
  402f31:	shr    eax,1
  402f33:	lea    edx,[rax+rdx*1+0x10]
  402f37:	and    edx,0xfffffff0
  402f3a:	dec    edx
  402f3c:	jmp    0x402e34
  402f41:	int3   
  402f42:	int3   
  402f43:	int3   
  402f44:	sub    rsp,0x28
  402f48:	mov    r8d,DWORD PTR [rcx+0x8]
  402f4c:	mov    eax,DWORD PTR [rcx+0xc]
  402f4f:	sub    eax,r8d
  402f52:	cmp    edx,eax
  402f54:	jbe    0x402f6b
  402f56:	add    edx,r8d
  402f59:	mov    eax,edx
  402f5b:	shr    eax,1
  402f5d:	lea    edx,[rax+rdx*1+0x10]
  402f61:	and    edx,0xfffffff0
  402f64:	dec    edx
  402f66:	call   0x402e34
  402f6b:	add    rsp,0x28
  402f6f:	ret    
  402f70:	rex.W push rbx
  402f72:	push   rsi
  402f73:	push   rdi
  402f74:	sub    rsp,0x20
  402f78:	xor    r9d,r9d
  402f7b:	mov    rdi,r8
  402f7e:	mov    ebx,edx
  402f80:	cmp    WORD PTR [r8],r9w
  402f84:	mov    rsi,rcx
  402f87:	je     0x402f99
  402f89:	mov    rax,r8
  402f8c:	add    rax,0x2
  402f90:	inc    r9d
  402f93:	cmp    WORD PTR [rax],0x0
  402f97:	jne    0x402f8c
  402f99:	cmp    edx,r9d
  402f9c:	cmova  ebx,r9d
  402fa0:	mov    edx,ebx
  402fa2:	call   0x402efc
  402fa7:	mov    rcx,QWORD PTR [rsi]
  402faa:	add    rbx,rbx
  402fad:	mov    r8,rbx
  402fb0:	mov    rdx,rdi
  402fb3:	call   0x44b480
  402fb8:	mov    r11,QWORD PTR [rsi]
  402fbb:	mov    rax,rsi
  402fbe:	mov    WORD PTR [rbx+r11*1],0x0
  402fc5:	add    rsp,0x20
  402fc9:	pop    rdi
  402fca:	pop    rsi
  402fcb:	pop    rbx
  402fcc:	ret    
  402fcd:	int3   
  402fce:	int3   
  402fcf:	int3   
  402fd0:	rex.W push rbx
  402fd2:	push   rsi
  402fd3:	push   rdi
  402fd4:	sub    rsp,0x20
  402fd8:	cmp    edx,DWORD PTR [r8+0x8]
  402fdc:	mov    ebx,edx
  402fde:	mov    rdi,r8
  402fe1:	cmova  ebx,DWORD PTR [r8+0x8]
  402fe6:	mov    rsi,rcx
  402fe9:	mov    edx,ebx
  402feb:	call   0x402efc
  402ff0:	mov    rdx,QWORD PTR [rdi]
  402ff3:	mov    rcx,QWORD PTR [rsi]
  402ff6:	add    rbx,rbx
  402ff9:	mov    r8,rbx
  402ffc:	call   0x44b480
  403001:	mov    r11,QWORD PTR [rsi]
  403004:	mov    rax,rsi
  403007:	mov    WORD PTR [rbx+r11*1],0x0
  40300e:	add    rsp,0x20
  403012:	pop    rdi
  403013:	pop    rsi
  403014:	pop    rbx
  403015:	ret    
  403016:	int3   
  403017:	int3   
  403018:	rex.W push rbx
  40301a:	push   rbp
  40301b:	push   rsi
  40301c:	push   rdi
  40301d:	push   r12
  40301f:	push   r13
  403021:	sub    rsp,0x28
  403025:	mov    rbp,rdx
  403028:	mov    edx,DWORD PTR [rdx+0x8]
  40302b:	movzx  r12d,r8w
  40302f:	inc    edx
  403031:	mov    r13,rcx
  403034:	call   0x402efc
  403039:	mov    edi,DWORD PTR [rbp+0x8]
  40303c:	mov    rsi,QWORD PTR [r13+0x0]
  403040:	mov    rdx,QWORD PTR [rbp+0x0]
  403044:	lea    rbx,[rdi+rdi*1]
  403048:	mov    rcx,rsi
  40304b:	mov    r8,rbx
  40304e:	call   0x44b480
  403053:	lea    eax,[rdi+0x1]
  403056:	mov    WORD PTR [rbx+rsi*1],r12w
  40305b:	mov    WORD PTR [rsi+rax*2],0x0
  403061:	mov    rax,r13
  403064:	add    rsp,0x28
  403068:	pop    r13
  40306a:	pop    r12
  40306c:	pop    rdi
  40306d:	pop    rsi
  40306e:	pop    rbp
  40306f:	pop    rbx
  403070:	ret    
  403071:	int3   
  403072:	int3   
  403073:	int3   
  403074:	rex.W push rbx
  403076:	push   rbp
  403077:	push   rsi
  403078:	push   rdi
  403079:	push   r12
  40307b:	push   r13
  40307d:	sub    rsp,0x28
  403081:	mov    ebp,DWORD PTR [rsp+0x80]
  403088:	mov    ebx,r8d
  40308b:	mov    rsi,rdx
  40308e:	lea    edx,[rbx+rbp*1]
  403091:	mov    r13,r9
  403094:	mov    r12,rcx
  403097:	call   0x402efc
  40309c:	mov    rdi,QWORD PTR [r12]
  4030a0:	add    rbx,rbx
  4030a3:	mov    r8,rbx
  4030a6:	mov    rdx,rsi
  4030a9:	mov    rcx,rdi
  4030ac:	call   0x44b480
  4030b1:	lea    r8d,[rbp+0x1]
  4030b5:	lea    rcx,[rbx+rdi*1]
  4030b9:	add    r8,r8
  4030bc:	mov    rdx,r13
  4030bf:	call   0x44b480
  4030c4:	mov    rax,r12
  4030c7:	add    rsp,0x28
  4030cb:	pop    r13
  4030cd:	pop    r12
  4030cf:	pop    rdi
  4030d0:	pop    rsi
  4030d1:	pop    rbp
  4030d2:	pop    rbx
  4030d3:	ret    
  4030d4:	rex.W push rbx
  4030d6:	sub    rsp,0x30
  4030da:	mov    eax,DWORD PTR [r8+0x8]
  4030de:	mov    r9,QWORD PTR [r8]
  4030e1:	mov    r8d,DWORD PTR [rdx+0x8]
  4030e5:	mov    rdx,QWORD PTR [rdx]
  4030e8:	mov    rbx,rcx
  4030eb:	mov    DWORD PTR [rsp+0x40],0x0
  4030f3:	mov    DWORD PTR [rsp+0x20],eax
  4030f7:	call   0x403074
  4030fc:	mov    rax,rbx
  4030ff:	add    rsp,0x30
  403103:	pop    rbx
  403104:	ret    
  403105:	int3   
  403106:	int3   
  403107:	int3   
  403108:	rex.W push rbx
  40310a:	sub    rsp,0x30
  40310e:	mov    rbx,rcx
  403111:	xor    ecx,ecx
  403113:	cmp    WORD PTR [r8],cx
  403117:	mov    DWORD PTR [rsp+0x40],ecx
  40311b:	mov    r9d,ecx
  40311e:	je     0x40312f
  403120:	mov    rax,r8
  403123:	add    rax,0x2
  403127:	inc    r9d
  40312a:	cmp    WORD PTR [rax],cx
  40312d:	jne    0x403123
  40312f:	mov    DWORD PTR [rsp+0x20],r9d
  403134:	mov    r9,r8
  403137:	mov    r8d,DWORD PTR [rdx+0x8]
  40313b:	mov    rdx,QWORD PTR [rdx]
  40313e:	mov    rcx,rbx
  403141:	call   0x403074
  403146:	mov    rax,rbx
  403149:	add    rsp,0x30
  40314d:	pop    rbx
  40314e:	ret    
  40314f:	int3   
  403150:	rex.W push rbx
  403152:	sub    rsp,0x20
  403156:	mov    rbx,rcx
  403159:	mov    QWORD PTR [rcx],0x0
  403160:	mov    ecx,0x8
  403165:	call   0x402130
  40316a:	mov    DWORD PTR [rbx+0x8],0x0
  403171:	mov    DWORD PTR [rbx+0xc],0x3
  403178:	mov    QWORD PTR [rbx],rax
  40317b:	mov    WORD PTR [rax],0x0
  403180:	mov    rax,rbx
  403183:	add    rsp,0x20
  403187:	pop    rbx
  403188:	ret    
  403189:	int3   
  40318a:	int3   
  40318b:	int3   
  40318c:	rex.W push rbx
  40318e:	push   rdi
  40318f:	sub    rsp,0x28
  403193:	movzx  ebx,dx
  403196:	mov    edx,0x1
  40319b:	mov    rdi,rcx
  40319e:	call   0x402efc
  4031a3:	mov    r11,QWORD PTR [rdi]
  4031a6:	mov    WORD PTR [r11],bx
  4031aa:	mov    rax,QWORD PTR [rdi]
  4031ad:	mov    WORD PTR [rax+0x2],0x0
  4031b3:	mov    rax,rdi
  4031b6:	add    rsp,0x28
  4031ba:	pop    rdi
  4031bb:	pop    rbx
  4031bc:	ret    
  4031bd:	int3   
  4031be:	int3   
  4031bf:	int3   
  4031c0:	rex.W push rbx
  4031c2:	push   rsi
  4031c3:	push   rdi
  4031c4:	sub    rsp,0x20
  4031c8:	xor    ebx,ebx
  4031ca:	mov    rdi,rdx
  4031cd:	mov    rsi,rcx
  4031d0:	cmp    WORD PTR [rdx],bx
  4031d3:	je     0x4031e4
  4031d5:	mov    rax,rdx
  4031d8:	add    rax,0x2
  4031dc:	inc    ebx
  4031de:	cmp    WORD PTR [rax],0x0
  4031e2:	jne    0x4031d8
  4031e4:	mov    edx,ebx
  4031e6:	call   0x402efc
  4031eb:	mov    rcx,QWORD PTR [rsi]
  4031ee:	lea    r8d,[rbx+0x1]
  4031f2:	add    r8,r8
  4031f5:	mov    rdx,rdi
  4031f8:	call   0x44b480
  4031fd:	mov    rax,rsi
  403200:	add    rsp,0x20
  403204:	pop    rdi
  403205:	pop    rsi
  403206:	pop    rbx
  403207:	ret    
  403208:	rex.W push rbx
  40320a:	push   rdi
  40320b:	sub    rsp,0x28
  40320f:	mov    rbx,rdx
  403212:	mov    edx,DWORD PTR [rdx+0x8]
  403215:	mov    rdi,rcx
  403218:	call   0x402efc
  40321d:	mov    r8d,DWORD PTR [rbx+0x8]
  403221:	mov    rdx,QWORD PTR [rbx]
  403224:	mov    rcx,QWORD PTR [rdi]
  403227:	inc    r8d
  40322a:	add    r8,r8
  40322d:	call   0x44b480
  403232:	mov    rax,rdi
  403235:	add    rsp,0x28
  403239:	pop    rdi
  40323a:	pop    rbx
  40323b:	ret    
  40323c:	rex.W push rbx
  40323e:	push   rsi
  40323f:	push   rdi
  403240:	sub    rsp,0x20
  403244:	cmp    DWORD PTR [rcx+0xc],0x1
  403248:	movzx  esi,dx
  40324b:	mov    rdi,rcx
  40324e:	jae    0x40326f
  403250:	mov    ecx,0x4
  403255:	call   0x402130
  40325a:	mov    rcx,QWORD PTR [rdi]
  40325d:	mov    rbx,rax
  403260:	call   0x40215c
  403265:	mov    QWORD PTR [rdi],rbx
  403268:	mov    DWORD PTR [rdi+0xc],0x1
  40326f:	mov    rax,QWORD PTR [rdi]
  403272:	mov    DWORD PTR [rdi+0x8],0x1
  403279:	mov    WORD PTR [rax],si
  40327c:	mov    rax,QWORD PTR [rdi]
  40327f:	mov    WORD PTR [rax+0x2],0x0
  403285:	mov    rax,rdi
  403288:	add    rsp,0x20
  40328c:	pop    rdi
  40328d:	pop    rsi
  40328e:	pop    rbx
  40328f:	ret    
  403290:	rex.W push rbx
  403292:	push   rbp
  403293:	push   rsi
  403294:	push   rdi
  403295:	sub    rsp,0x28
  403299:	xor    edi,edi
  40329b:	mov    rbp,rdx
  40329e:	mov    rsi,rcx
  4032a1:	cmp    WORD PTR [rdx],di
  4032a4:	je     0x4032b5
  4032a6:	mov    rax,rdx
  4032a9:	add    rax,0x2
  4032ad:	inc    edi
  4032af:	cmp    WORD PTR [rax],0x0
  4032b3:	jne    0x4032a9
  4032b5:	cmp    edi,DWORD PTR [rcx+0xc]
  4032b8:	jbe    0x4032d6
  4032ba:	lea    ecx,[rdi+0x1]
  4032bd:	add    rcx,rcx
  4032c0:	call   0x402130
  4032c5:	mov    rcx,QWORD PTR [rsi]
  4032c8:	mov    rbx,rax
  4032cb:	call   0x40215c
  4032d0:	mov    QWORD PTR [rsi],rbx
  4032d3:	mov    DWORD PTR [rsi+0xc],edi
  4032d6:	mov    rcx,QWORD PTR [rsi]
  4032d9:	lea    r8d,[rdi+0x1]
  4032dd:	mov    rdx,rbp
  4032e0:	add    r8,r8
  4032e3:	mov    DWORD PTR [rsi+0x8],edi
  4032e6:	call   0x44b480
  4032eb:	mov    rax,rsi
  4032ee:	add    rsp,0x28
  4032f2:	pop    rdi
  4032f3:	pop    rsi
  4032f4:	pop    rbp
  4032f5:	pop    rbx
  4032f6:	ret    
  4032f7:	int3   
  4032f8:	rex.W push rbx
  4032fa:	push   rbp
  4032fb:	push   rsi
  4032fc:	push   rdi
  4032fd:	sub    rsp,0x28
  403301:	cmp    rdx,rcx
  403304:	mov    rsi,rdx
  403307:	mov    rdi,rcx
  40330a:	je     0x403345
  40330c:	mov    ebp,DWORD PTR [rdx+0x8]
  40330f:	cmp    ebp,DWORD PTR [rcx+0xc]
  403312:	jbe    0x403330
  403314:	lea    ecx,[rbp+0x1]
  403317:	add    rcx,rcx
  40331a:	call   0x402130
  40331f:	mov    rcx,QWORD PTR [rdi]
  403322:	mov    rbx,rax
  403325:	call   0x40215c
  40332a:	mov    QWORD PTR [rdi],rbx
  40332d:	mov    DWORD PTR [rdi+0xc],ebp
  403330:	mov    rcx,QWORD PTR [rdi]
  403333:	mov    DWORD PTR [rdi+0x8],ebp
  403336:	mov    rdx,QWORD PTR [rsi]
  403339:	lea    r8d,[rbp+0x1]
  40333d:	add    r8,r8
  403340:	call   0x44b480
  403345:	mov    rax,rdi
  403348:	add    rsp,0x28
  40334c:	pop    rdi
  40334d:	pop    rsi
  40334e:	pop    rbp
  40334f:	pop    rbx
  403350:	ret    
  403351:	int3   
  403352:	int3   
  403353:	int3   
  403354:	rex.W push rbx
  403356:	push   rbp
  403357:	push   rsi
  403358:	push   rdi
  403359:	sub    rsp,0x28
  40335d:	mov    rdi,rcx
  403360:	mov    rcx,rdx
  403363:	mov    rbp,rdx
  403366:	call   QWORD PTR [rip+0x49f0c]        # 0x44d278
  40336c:	cmp    eax,DWORD PTR [rdi+0xc]
  40336f:	mov    esi,eax
  403371:	jbe    0x40338f
  403373:	lea    ecx,[rax+0x1]
  403376:	add    rcx,rcx
  403379:	call   0x402130
  40337e:	mov    rcx,QWORD PTR [rdi]
  403381:	mov    rbx,rax
  403384:	call   0x40215c
  403389:	mov    QWORD PTR [rdi],rbx
  40338c:	mov    DWORD PTR [rdi+0xc],esi
  40338f:	mov    rcx,QWORD PTR [rdi]
  403392:	lea    r8d,[rsi+0x1]
  403396:	mov    rdx,rbp
  403399:	add    r8,r8
  40339c:	mov    DWORD PTR [rdi+0x8],esi
  40339f:	add    rsp,0x28
  4033a3:	pop    rdi
  4033a4:	pop    rsi
  4033a5:	pop    rbp
  4033a6:	pop    rbx
  4033a7:	jmp    0x44b480
  4033ac:	rex.W push rbx
  4033ae:	sub    rsp,0x20
  4033b2:	mov    rbx,rcx
  4033b5:	mov    ecx,DWORD PTR [rcx+0x8]
  4033b8:	cmp    DWORD PTR [rbx+0xc],ecx
  4033bb:	jne    0x4033d2
  4033bd:	mov    eax,ecx
  4033bf:	shr    eax,1
  4033c1:	lea    edx,[rax+rcx*1+0x10]
  4033c5:	mov    rcx,rbx
  4033c8:	and    edx,0xfffffff0
  4033cb:	dec    edx
  4033cd:	call   0x402e34
  4033d2:	mov    edx,DWORD PTR [rbx+0x8]
  4033d5:	mov    rcx,QWORD PTR [rbx]
  4033d8:	mov    WORD PTR [rcx+rdx*2],0xa
  4033de:	inc    edx
  4033e0:	mov    WORD PTR [rcx+rdx*2],0x0
  4033e6:	mov    DWORD PTR [rbx+0x8],edx
  4033e9:	add    rsp,0x20
  4033ed:	pop    rbx
  4033ee:	ret    
  4033ef:	int3   
  4033f0:	rex.W push rbx
  4033f2:	push   rsi
  4033f3:	push   rdi
  4033f4:	sub    rsp,0x20
  4033f8:	xor    ebx,ebx
  4033fa:	mov    rdi,rdx
  4033fd:	mov    rsi,rcx
  403400:	cmp    WORD PTR [rdx],bx
  403403:	je     0x403414
  403405:	mov    rax,rdx
  403408:	add    rax,0x2
  40340c:	inc    ebx
  40340e:	cmp    WORD PTR [rax],0x0
  403412:	jne    0x403408
  403414:	mov    edx,ebx
  403416:	call   0x402f44
  40341b:	mov    ecx,DWORD PTR [rsi+0x8]
  40341e:	mov    rax,QWORD PTR [rsi]
  403421:	lea    r8d,[rbx+0x1]
  403425:	lea    rcx,[rax+rcx*2]
  403429:	mov    rdx,rdi
  40342c:	add    r8,r8
  40342f:	call   0x44b480
  403434:	add    DWORD PTR [rsi+0x8],ebx
  403437:	mov    rax,rsi
  40343a:	add    rsp,0x20
  40343e:	pop    rdi
  40343f:	pop    rsi
  403440:	pop    rbx
  403441:	ret    
  403442:	int3   
  403443:	int3   
  403444:	rex.W push rbx
  403446:	push   rdi
  403447:	sub    rsp,0x28
  40344b:	mov    rbx,rdx
  40344e:	mov    edx,DWORD PTR [rdx+0x8]
  403451:	mov    rdi,rcx
  403454:	call   0x402f44
  403459:	mov    r8d,DWORD PTR [rbx+0x8]
  40345d:	mov    r9d,DWORD PTR [rdi+0x8]
  403461:	mov    rax,QWORD PTR [rdi]
  403464:	mov    rdx,QWORD PTR [rbx]
  403467:	inc    r8d
  40346a:	lea    rcx,[rax+r9*2]
  40346e:	add    r8,r8
  403471:	call   0x44b480
  403476:	mov    r11d,DWORD PTR [rbx+0x8]
  40347a:	mov    rax,rdi
  40347d:	add    DWORD PTR [rdi+0x8],r11d
  403481:	add    rsp,0x28
  403485:	pop    rdi
  403486:	pop    rbx
  403487:	ret    
  403488:	rex.W push rbx
  40348a:	push   rbp
  40348b:	push   rsi
  40348c:	push   rdi
  40348d:	sub    rsp,0x28
  403491:	cmp    r8d,DWORD PTR [rcx+0xc]
  403495:	mov    edi,r8d
  403498:	mov    rbp,rdx
  40349b:	mov    rsi,rcx
  40349e:	jbe    0x4034bc
  4034a0:	lea    ecx,[rdi+0x1]
  4034a3:	add    rcx,rcx
  4034a6:	call   0x402130
  4034ab:	mov    rcx,QWORD PTR [rsi]
  4034ae:	mov    rbx,rax
  4034b1:	call   0x40215c
  4034b6:	mov    QWORD PTR [rsi],rbx
  4034b9:	mov    DWORD PTR [rsi+0xc],edi
  4034bc:	test   edi,edi
  4034be:	je     0x4034d1
  4034c0:	mov    rcx,QWORD PTR [rsi]
  4034c3:	mov    r8,rdi
  4034c6:	mov    rdx,rbp
  4034c9:	add    r8,r8
  4034cc:	call   0x44b480
  4034d1:	mov    rax,QWORD PTR [rsi]
  4034d4:	mov    WORD PTR [rax+rdi*2],0x0
  4034da:	mov    DWORD PTR [rsi+0x8],edi
  4034dd:	add    rsp,0x28
  4034e1:	pop    rdi
  4034e2:	pop    rsi
  4034e3:	pop    rbp
  4034e4:	pop    rbx
  4034e5:	ret    
  4034e6:	int3   
  4034e7:	int3   
  4034e8:	rex.W push rbx
  4034ea:	push   rbp
  4034eb:	push   rsi
  4034ec:	push   rdi
  4034ed:	sub    rsp,0x28
  4034f1:	xor    edi,edi
  4034f3:	mov    rbp,rdx
  4034f6:	mov    rsi,rcx
  4034f9:	cmp    BYTE PTR [rdx],dil
  4034fc:	je     0x40350b
  4034fe:	mov    rax,rdx
  403501:	inc    rax
  403504:	inc    edi
  403506:	cmp    BYTE PTR [rax],0x0
  403509:	jne    0x403501
  40350b:	cmp    edi,DWORD PTR [rcx+0xc]
  40350e:	jbe    0x40352c
  403510:	lea    ecx,[rdi+0x1]
  403513:	add    rcx,rcx
  403516:	call   0x402130
  40351b:	mov    rcx,QWORD PTR [rsi]
  40351e:	mov    rbx,rax
  403521:	call   0x40215c
  403526:	mov    QWORD PTR [rsi],rbx
  403529:	mov    DWORD PTR [rsi+0xc],edi
  40352c:	test   edi,edi
  40352e:	mov    rcx,QWORD PTR [rsi]
  403531:	je     0x40354c
  403533:	mov    rdx,rcx
  403536:	mov    r8d,edi
  403539:	movzx  eax,BYTE PTR [rbp+0x0]
  40353d:	inc    rbp
  403540:	mov    WORD PTR [rdx],ax
  403543:	add    rdx,0x2
  403547:	dec    r8
  40354a:	jne    0x403539
  40354c:	mov    WORD PTR [rcx+rdi*2],0x0
  403552:	mov    DWORD PTR [rsi+0x8],edi
  403555:	add    rsp,0x28
  403559:	pop    rdi
  40355a:	pop    rsi
  40355b:	pop    rbp
  40355c:	pop    rbx
  40355d:	ret    
  40355e:	int3   
  40355f:	int3   
  403560:	rex.W push rbx
  403562:	push   rsi
  403563:	push   rdi
  403564:	sub    rsp,0x20
  403568:	xor    ebx,ebx
  40356a:	mov    rdi,rdx
  40356d:	mov    rsi,rcx
  403570:	cmp    BYTE PTR [rdx],bl
  403572:	je     0x403581
  403574:	mov    rax,rdx
  403577:	inc    rax
  40357a:	inc    ebx
  40357c:	cmp    BYTE PTR [rax],0x0
  40357f:	jne    0x403577
  403581:	mov    edx,ebx
  403583:	call   0x402f44
  403588:	test   ebx,ebx
  40358a:	mov    ecx,DWORD PTR [rsi+0x8]
  40358d:	mov    rax,QWORD PTR [rsi]
  403590:	lea    rdx,[rax+rcx*2]
  403594:	je     0x4035ae
  403596:	mov    rcx,rdx
  403599:	mov    r8d,ebx
  40359c:	movzx  eax,BYTE PTR [rdi]
  40359f:	inc    rdi
  4035a2:	mov    WORD PTR [rcx],ax
  4035a5:	add    rcx,0x2
  4035a9:	dec    r8
  4035ac:	jne    0x40359c
  4035ae:	mov    WORD PTR [rdx+rbx*2],0x0
  4035b4:	add    DWORD PTR [rsi+0x8],ebx
  4035b7:	add    rsp,0x20
  4035bb:	pop    rdi
  4035bc:	pop    rsi
  4035bd:	pop    rbx
  4035be:	ret    
  4035bf:	int3   
  4035c0:	rex.W push rbx
  4035c2:	sub    rsp,0x20
  4035c6:	mov    rax,QWORD PTR [rcx]
  4035c9:	mov    r8d,r8d
  4035cc:	mov    rbx,rcx
  4035cf:	lea    rcx,[rax+r8*2]
  4035d3:	call   QWORD PTR [rip+0x49d5f]        # 0x44d338
  4035d9:	test   rax,rax
  4035dc:	jne    0x4035e5
  4035de:	mov    eax,0xffffffff
  4035e3:	jmp    0x4035eb
  4035e5:	sub    rax,QWORD PTR [rbx]
  4035e8:	sar    rax,1
  4035eb:	add    rsp,0x20
  4035ef:	pop    rbx
  4035f0:	ret    
  4035f1:	int3   
  4035f2:	int3   
  4035f3:	int3   
  4035f4:	cmp    DWORD PTR [rcx+0x8],0x0
  4035f8:	movzx  r8d,dx
  4035fc:	je     0x403623
  4035fe:	mov    rdx,QWORD PTR [rcx]
  403601:	mov    eax,DWORD PTR [rcx+0x8]
  403604:	lea    rcx,[rdx+rax*2-0x2]
  403609:	jmp    0x403614
  40360b:	cmp    rcx,rdx
  40360e:	je     0x403623
  403610:	sub    rcx,0x2
  403614:	cmp    WORD PTR [rcx],r8w
  403618:	jne    0x40360b
  40361a:	sub    rcx,rdx
  40361d:	sar    rcx,1
  403620:	mov    eax,ecx
  403622:	ret    
  403623:	mov    eax,0xffffffff
  403628:	ret    
  403629:	int3   
  40362a:	int3   
  40362b:	int3   
  40362c:	cmp    DWORD PTR [rcx+0x8],0x0
  403630:	jne    0x403638
  403632:	mov    eax,0xffffffff
  403637:	ret    
  403638:	mov    rdx,QWORD PTR [rcx]
  40363b:	mov    eax,DWORD PTR [rcx+0x8]
  40363e:	lea    rcx,[rdx+rax*2-0x2]
  403643:	jmp    0x403654
  403645:	cmp    ax,0x2f
  403649:	je     0x40365d
  40364b:	cmp    rcx,rdx
  40364e:	je     0x403632
  403650:	sub    rcx,0x2
  403654:	movzx  eax,WORD PTR [rcx]
  403657:	cmp    ax,0x5c
  40365b:	jne    0x403645
  40365d:	sub    rcx,rdx
  403660:	sar    rcx,1
  403663:	mov    eax,ecx
  403665:	ret    
  403666:	int3   
  403667:	int3   
  403668:	rex.W push rbx
  40366a:	push   rdi
  40366b:	sub    rsp,0x28
  40366f:	mov    rdi,rcx
  403672:	mov    rcx,QWORD PTR [rcx]
  403675:	mov    rbx,rcx
  403678:	cmp    WORD PTR [rbx],0x20
  40367c:	je     0x40368a
  40367e:	cmp    WORD PTR [rbx],0xa
  403682:	je     0x40368a
  403684:	cmp    WORD PTR [rbx],0x9
  403688:	jne    0x403690
  40368a:	add    rbx,0x2
  40368e:	jmp    0x403678
  403690:	sub    rbx,rcx
  403693:	sar    rbx,1
  403696:	test   ebx,ebx
  403698:	je     0x4036b5
  40369a:	mov    r8d,DWORD PTR [rdi+0x8]
  40369e:	mov    eax,ebx
  4036a0:	sub    r8d,ebx
  4036a3:	lea    rdx,[rcx+rax*2]
  4036a7:	inc    r8d
  4036aa:	add    r8,r8
  4036ad:	call   0x44b774
  4036b2:	sub    DWORD PTR [rdi+0x8],ebx
  4036b5:	add    rsp,0x28
  4036b9:	pop    rdi
  4036ba:	pop    rbx
  4036bb:	ret    
  4036bc:	movsxd rdx,DWORD PTR [rcx+0x8]
  4036c0:	mov    r8,QWORD PTR [rcx]
  4036c3:	test   edx,edx
  4036c5:	je     0x4036e7
  4036c7:	lea    rax,[r8+rdx*2-0x2]
  4036cc:	cmp    WORD PTR [rax],0x20
  4036d0:	je     0x4036de
  4036d2:	cmp    WORD PTR [rax],0xa
  4036d6:	je     0x4036de
  4036d8:	cmp    WORD PTR [rax],0x9
  4036dc:	jne    0x4036e7
  4036de:	sub    rax,0x2
  4036e2:	add    edx,0xffffffff
  4036e5:	jne    0x4036cc
  4036e7:	cmp    edx,DWORD PTR [rcx+0x8]
  4036ea:	je     0x4036f8
  4036ec:	mov    eax,edx
  4036ee:	mov    WORD PTR [r8+rax*2],0x0
  4036f5:	mov    DWORD PTR [rcx+0x8],edx
  4036f8:	ret    
  4036f9:	int3   
  4036fa:	int3   
  4036fb:	int3   
  4036fc:	rex.W push rbx
  4036fe:	push   rdi
  4036ff:	sub    rsp,0x28
  403703:	mov    rbx,rcx
  403706:	mov    ecx,DWORD PTR [rcx+0x8]
  403709:	movzx  edi,dx
  40370c:	cmp    DWORD PTR [rbx+0xc],ecx
  40370f:	jne    0x403726
  403711:	mov    eax,ecx
  403713:	shr    eax,1
  403715:	lea    edx,[rax+rcx*1+0x10]
  403719:	mov    rcx,rbx
  40371c:	and    edx,0xfffffff0
  40371f:	dec    edx
  403721:	call   0x402e34
  403726:	mov    r8d,DWORD PTR [rbx+0x8]
  40372a:	mov    rdx,QWORD PTR [rbx]
  40372d:	inc    r8d
  403730:	lea    rcx,[rdx+0x2]
  403734:	add    r8,r8
  403737:	call   0x44b774
  40373c:	mov    r11,QWORD PTR [rbx]
  40373f:	mov    WORD PTR [r11],di
  403743:	inc    DWORD PTR [rbx+0x8]
  403746:	add    rsp,0x28
  40374a:	pop    rdi
  40374b:	pop    rbx
  40374c:	ret    
  40374d:	int3   
  40374e:	int3   
  40374f:	int3   
  403750:	rex.W push rbx
  403752:	sub    rsp,0x20
  403756:	mov    r8d,DWORD PTR [rcx+0x8]
  40375a:	mov    r10,QWORD PTR [rcx]
  40375d:	mov    r11d,edx
  403760:	lea    r9d,[r11+0x1]
  403764:	mov    rbx,rcx
  403767:	lea    rcx,[r10+r11*2]
  40376b:	sub    r8d,r9d
  40376e:	lea    rdx,[r10+r9*2]
  403772:	inc    r8d
  403775:	add    r8,r8
  403778:	call   0x44b774
  40377d:	add    DWORD PTR [rbx+0x8],0xffffffff
  403781:	add    rsp,0x20
  403785:	pop    rbx
  403786:	ret    
  403787:	int3   
  403788:	rex.W push rbx
  40378a:	push   rdi
  40378b:	sub    rsp,0x28
  40378f:	mov    ebx,r8d
  403792:	mov    r8d,DWORD PTR [rcx+0x8]
  403796:	mov    r9d,edx
  403799:	lea    eax,[r9+rbx*1]
  40379d:	mov    rdi,rcx
  4037a0:	cmp    eax,r8d
  4037a3:	jbe    0x4037ab
  4037a5:	mov    ebx,r8d
  4037a8:	sub    ebx,r9d
  4037ab:	test   ebx,ebx
  4037ad:	je     0x4037cf
  4037af:	mov    rcx,QWORD PTR [rcx]
  4037b2:	lea    eax,[r9+rbx*1]
  4037b6:	sub    r8d,eax
  4037b9:	lea    rdx,[rcx+rax*2]
  4037bd:	lea    rcx,[rcx+r9*2]
  4037c1:	inc    r8d
  4037c4:	add    r8,r8
  4037c7:	call   0x44b774
  4037cc:	sub    DWORD PTR [rdi+0x8],ebx
  4037cf:	add    rsp,0x28
  4037d3:	pop    rdi
  4037d4:	pop    rbx
  4037d5:	ret    
  4037d6:	int3   
  4037d7:	int3   
  4037d8:	test   edx,edx
  4037da:	je     0x403809
  4037dc:	push   rbx
  4037dd:	push   rdi
  4037de:	sub    rsp,0x28
  4037e2:	mov    rdi,rcx
  4037e5:	mov    rcx,QWORD PTR [rcx]
  4037e8:	mov    ebx,edx
  4037ea:	mov    r8d,DWORD PTR [rdi+0x8]
  4037ee:	lea    rdx,[rcx+rbx*2]
  4037f2:	sub    r8d,ebx
  4037f5:	inc    r8d
  4037f8:	add    r8,r8
  4037fb:	call   0x44b774
  403800:	sub    DWORD PTR [rdi+0x8],ebx
  403803:	add    rsp,0x28
  403807:	pop    rdi
  403808:	pop    rbx
  403809:	ret    
  40380a:	int3   
  40380b:	int3   
  40380c:	rex.W push rbx
  40380e:	sub    rsp,0x20
  403812:	mov    rbx,rcx
  403815:	mov    ecx,DWORD PTR [rcx+0x8]
  403818:	cmp    DWORD PTR [rbx+0xc],ecx
  40381b:	jne    0x403832
  40381d:	mov    eax,ecx
  40381f:	shr    eax,1
  403821:	lea    edx,[rax+rcx*1+0x10]
  403825:	mov    rcx,rbx
  403828:	and    edx,0xfffffff0
  40382b:	dec    edx
  40382d:	call   0x402a08
  403832:	mov    edx,DWORD PTR [rbx+0x8]
  403835:	mov    rcx,QWORD PTR [rbx]
  403838:	mov    BYTE PTR [rdx+rcx*1],0x20
  40383c:	inc    edx
  40383e:	mov    BYTE PTR [rdx+rcx*1],0x0
  403842:	mov    DWORD PTR [rbx+0x8],edx
  403845:	add    rsp,0x20
  403849:	pop    rbx
  40384a:	ret    
  40384b:	int3   
  40384c:	sub    rsp,0x28
  403850:	cmp    DWORD PTR [rcx+0x8],0x0
  403854:	je     0x40385b
  403856:	call   0x40380c
  40385b:	add    rsp,0x28
  40385f:	ret    
  403860:	rex.W push rbx
  403862:	sub    rsp,0x20
  403866:	mov    rbx,rcx
  403869:	mov    ecx,DWORD PTR [rcx+0x8]
  40386c:	cmp    DWORD PTR [rbx+0xc],ecx
  40386f:	jne    0x403886
  403871:	mov    eax,ecx
  403873:	shr    eax,1
  403875:	lea    edx,[rax+rcx*1+0x10]
  403879:	mov    rcx,rbx
  40387c:	and    edx,0xfffffff0
  40387f:	dec    edx
  403881:	call   0x402a08
  403886:	mov    edx,DWORD PTR [rbx+0x8]
  403889:	mov    rcx,QWORD PTR [rbx]
  40388c:	mov    BYTE PTR [rdx+rcx*1],0xa
  403890:	inc    edx
  403892:	mov    BYTE PTR [rdx+rcx*1],0x0
  403896:	mov    DWORD PTR [rbx+0x8],edx
  403899:	add    rsp,0x20
  40389d:	pop    rbx
  40389e:	ret    
  40389f:	int3   
  4038a0:	cmp    dl,r8b
  4038a3:	je     0x4038fa
  4038a5:	push   rbx
  4038a6:	push   rdi
  4038a7:	xor    r9d,r9d
  4038aa:	mov    r10b,dl
  4038ad:	cmp    DWORD PTR [rcx+0x8],r9d
  4038b1:	jbe    0x4038f8
  4038b3:	lea    edi,[r9-0x1]
  4038b7:	mov    rbx,QWORD PTR [rcx]
  4038ba:	mov    r11d,r9d
  4038bd:	add    r11,rbx
  4038c0:	mov    rax,r11
  4038c3:	mov    dl,BYTE PTR [r11]
  4038c6:	jmp    0x4038d1
  4038c8:	test   dl,dl
  4038ca:	je     0x4038db
  4038cc:	inc    rax
  4038cf:	mov    dl,BYTE PTR [rax]
  4038d1:	cmp    dl,r10b
  4038d4:	jne    0x4038c8
  4038d6:	sub    eax,r11d
  4038d9:	jmp    0x4038dd
  4038db:	mov    eax,edi
  4038dd:	add    r9d,eax
  4038e0:	test   eax,eax
  4038e2:	cmovs  r9d,edi
  4038e6:	test   r9d,r9d
  4038e9:	js     0x4038f8
  4038eb:	mov    BYTE PTR [r9+rbx*1],r8b
  4038ef:	inc    r9d
  4038f2:	cmp    r9d,DWORD PTR [rcx+0x8]
  4038f6:	jb     0x4038b7
  4038f8:	pop    rdi
  4038f9:	pop    rbx
  4038fa:	ret    
  4038fb:	int3   
  4038fc:	rex.W push rbx
  4038fe:	push   rsi
  4038ff:	push   rdi
  403900:	sub    rsp,0x20
  403904:	mov    edi,edx
  403906:	mov    edx,r8d
  403909:	mov    esi,r8d
  40390c:	mov    rbx,rcx
  40390f:	call   0x402f44
  403914:	mov    r8d,DWORD PTR [rbx+0x8]
  403918:	mov    r11,QWORD PTR [rbx]
  40391b:	sub    r8d,edi
  40391e:	lea    eax,[rdi+rsi*1]
  403921:	inc    r8d
  403924:	lea    rdx,[r11+rdi*2]
  403928:	lea    rcx,[r11+rax*2]
  40392c:	add    r8,r8
  40392f:	add    rsp,0x20
  403933:	pop    rdi
  403934:	pop    rsi
  403935:	pop    rbx
  403936:	jmp    0x44b774
  40393b:	int3   
  40393c:	rex.W push rbx
  40393e:	sub    rsp,0x20
  403942:	mov    rbx,rcx
  403945:	mov    ecx,DWORD PTR [rcx+0x8]
  403948:	cmp    DWORD PTR [rbx+0xc],ecx
  40394b:	jne    0x403962
  40394d:	mov    eax,ecx
  40394f:	shr    eax,1
  403951:	lea    edx,[rax+rcx*1+0x10]
  403955:	mov    rcx,rbx
  403958:	and    edx,0xfffffff0
  40395b:	dec    edx
  40395d:	call   0x402e34
  403962:	mov    edx,DWORD PTR [rbx+0x8]
  403965:	mov    rcx,QWORD PTR [rbx]
  403968:	mov    WORD PTR [rcx+rdx*2],0x20
  40396e:	inc    edx
  403970:	mov    WORD PTR [rcx+rdx*2],0x0
  403976:	mov    DWORD PTR [rbx+0x8],edx
  403979:	add    rsp,0x20
  40397d:	pop    rbx
  40397e:	ret    
  40397f:	int3   
  403980:	rex.W push rbx
  403982:	push   rbp
  403983:	push   rsi
  403984:	push   rdi
  403985:	sub    rsp,0x28
  403989:	xor    ebx,ebx
  40398b:	mov    rdi,r8
  40398e:	mov    ebp,edx
  403990:	cmp    WORD PTR [r8],bx
  403994:	mov    rsi,rcx
  403997:	je     0x4039ce
  403999:	mov    rax,r8
  40399c:	add    rax,0x2
  4039a0:	inc    ebx
  4039a2:	cmp    WORD PTR [rax],0x0
  4039a6:	jne    0x40399c
  4039a8:	test   ebx,ebx
  4039aa:	je     0x4039ce
  4039ac:	mov    r8d,ebx
  4039af:	mov    edx,ebp
  4039b1:	call   0x4038fc
  4039b6:	mov    rax,QWORD PTR [rsi]
  4039b9:	mov    r8d,ebx
  4039bc:	lea    rcx,[rax+rbp*2]
  4039c0:	add    r8,r8
  4039c3:	mov    rdx,rdi
  4039c6:	call   0x44b480
  4039cb:	add    DWORD PTR [rsi+0x8],ebx
  4039ce:	add    rsp,0x28
  4039d2:	pop    rdi
  4039d3:	pop    rsi
  4039d4:	pop    rbp
  4039d5:	pop    rbx
  4039d6:	ret    
  4039d7:	int3   
  4039d8:	rex.W push rbx
  4039da:	push   rbp
  4039db:	push   rsi
  4039dc:	push   rdi
  4039dd:	sub    rsp,0x28
  4039e1:	mov    ebx,DWORD PTR [r8+0x8]
  4039e5:	mov    rdi,r8
  4039e8:	mov    ebp,edx
  4039ea:	test   ebx,ebx
  4039ec:	mov    rsi,rcx
  4039ef:	je     0x403a13
  4039f1:	mov    r8d,ebx
  4039f4:	mov    edx,ebp
  4039f6:	call   0x4038fc
  4039fb:	mov    rax,QWORD PTR [rsi]
  4039fe:	mov    rdx,QWORD PTR [rdi]
  403a01:	mov    r8,rbx
  403a04:	lea    rcx,[rax+rbp*2]
  403a08:	add    r8,r8
  403a0b:	call   0x44b480
  403a10:	add    DWORD PTR [rsi+0x8],ebx
  403a13:	add    rsp,0x28
  403a17:	pop    rdi
  403a18:	pop    rsi
  403a19:	pop    rbp
  403a1a:	pop    rbx
  403a1b:	ret    
  403a1c:	cmp    dx,r8w
  403a20:	je     0x403a69
  403a22:	push   rbx
  403a23:	sub    rsp,0x20
  403a27:	xor    r9d,r9d
  403a2a:	movzx  r11d,r8w
  403a2e:	mov    r10,rcx
  403a31:	cmp    DWORD PTR [rcx+0x8],r9d
  403a35:	jbe    0x403a64
  403a37:	mov    rbx,QWORD PTR [r10]
  403a3a:	lea    rcx,[rbx+r9*2]
  403a3e:	call   0x4026e0
  403a43:	mov    ecx,0xffffffff
  403a48:	add    r9d,eax
  403a4b:	test   eax,eax
  403a4d:	cmovs  r9d,ecx
  403a51:	test   r9d,r9d
  403a54:	js     0x403a64
  403a56:	mov    WORD PTR [rbx+r9*2],r11w
  403a5b:	inc    r9d
  403a5e:	cmp    r9d,DWORD PTR [r10+0x8]
  403a62:	jb     0x403a37
  403a64:	add    rsp,0x20
  403a68:	pop    rbx
  403a69:	ret    
  403a6a:	int3   
  403a6b:	int3   
  403a6c:	rex.W push rbx
  403a6e:	push   rbp
  403a6f:	push   rsi
  403a70:	push   rdi
  403a71:	push   r12
  403a73:	push   r13
  403a75:	sub    rsp,0x28
  403a79:	mov    eax,DWORD PTR [rdx+0x8]
  403a7c:	mov    rbx,r8
  403a7f:	mov    rdi,rdx
  403a82:	test   eax,eax
  403a84:	mov    rsi,rcx
  403a87:	je     0x403ae4
  403a89:	cmp    eax,DWORD PTR [r8+0x8]
  403a8d:	jne    0x403a9f
  403a8f:	mov    rdx,QWORD PTR [r8]
  403a92:	mov    rcx,QWORD PTR [rdi]
  403a95:	call   QWORD PTR [rip+0x498ad]        # 0x44d348
  403a9b:	test   eax,eax
  403a9d:	je     0x403ae4
  403a9f:	mov    r12d,DWORD PTR [rdi+0x8]
  403aa3:	mov    r13d,DWORD PTR [rbx+0x8]
  403aa7:	xor    ebp,ebp
  403aa9:	cmp    DWORD PTR [rsi+0x8],ebp
  403aac:	jbe    0x403ae4
  403aae:	mov    rdx,QWORD PTR [rdi]
  403ab1:	mov    r8d,ebp
  403ab4:	mov    rcx,rsi
  403ab7:	call   0x4035c0
  403abc:	test   eax,eax
  403abe:	mov    ebp,eax
  403ac0:	js     0x403ae4
  403ac2:	mov    r8d,r12d
  403ac5:	mov    edx,eax
  403ac7:	mov    rcx,rsi
  403aca:	call   0x403788
  403acf:	mov    r8,rbx
  403ad2:	mov    edx,ebp
  403ad4:	mov    rcx,rsi
  403ad7:	call   0x4039d8
  403adc:	add    ebp,r13d
  403adf:	cmp    ebp,DWORD PTR [rsi+0x8]
  403ae2:	jb     0x403aae
  403ae4:	add    rsp,0x28
  403ae8:	pop    r13
  403aea:	pop    r12
  403aec:	pop    rdi
  403aed:	pop    rsi
  403aee:	pop    rbp
  403aef:	pop    rbx
  403af0:	ret    
  403af1:	int3   
  403af2:	int3   
  403af3:	int3   
  403af4:	rex.W push rbx
  403af6:	push   rbp
  403af7:	push   rsi
  403af8:	push   rdi
  403af9:	sub    rsp,0x38
  403afd:	mov    rax,QWORD PTR [rcx]
  403b00:	mov    DWORD PTR [rcx+0x8],0x0
  403b07:	mov    ebp,r8d
  403b0a:	mov    WORD PTR [rax],0x0
  403b0f:	mov    r9d,DWORD PTR [rdx+0x8]
  403b13:	mov    rsi,rdx
  403b16:	test   r9d,r9d
  403b19:	mov    rbx,rcx
  403b1c:	je     0x403bc2
  403b22:	mov    r8,QWORD PTR [rdx]
  403b25:	mov    ecx,ebp
  403b27:	xor    edx,edx
  403b29:	mov    DWORD PTR [rsp+0x28],0x0
  403b31:	mov    QWORD PTR [rsp+0x20],0x0
  403b3a:	call   QWORD PTR [rip+0x49668]        # 0x44d1a8
  403b40:	test   eax,eax
  403b42:	mov    edi,eax
  403b44:	jne    0x403b6a
  403b46:	call   QWORD PTR [rip+0x49654]        # 0x44d1a0
  403b4c:	test   eax,eax
  403b4e:	je     0x403bc2
  403b50:	lea    rdx,[rip+0x63579]        # 0x4670d0
  403b57:	lea    rcx,[rsp+0x60]
  403b5c:	mov    DWORD PTR [rsp+0x60],0x44e74
  403b64:	call   0x44b71e
  403b69:	int3   
  403b6a:	cmp    eax,DWORD PTR [rbx+0xc]
  403b6d:	jbe    0x403b79
  403b6f:	mov    edx,eax
  403b71:	mov    rcx,rbx
  403b74:	call   0x402ea4
  403b79:	mov    rax,QWORD PTR [rbx]
  403b7c:	mov    r9d,DWORD PTR [rsi+0x8]
  403b80:	mov    r8,QWORD PTR [rsi]
  403b83:	xor    edx,edx
  403b85:	mov    ecx,ebp
  403b87:	mov    DWORD PTR [rsp+0x28],edi
  403b8b:	mov    QWORD PTR [rsp+0x20],rax
  403b90:	call   QWORD PTR [rip+0x49612]        # 0x44d1a8
  403b96:	test   eax,eax
  403b98:	jne    0x403bb4
  403b9a:	lea    rdx,[rip+0x6352f]        # 0x4670d0
  403ba1:	lea    rcx,[rsp+0x60]
  403ba6:	mov    DWORD PTR [rsp+0x60],0x44e74
  403bae:	call   0x44b71e
  403bb3:	int3   
  403bb4:	mov    DWORD PTR [rbx+0x8],eax
  403bb7:	mov    ecx,eax
  403bb9:	mov    rax,QWORD PTR [rbx]
  403bbc:	mov    WORD PTR [rax+rcx*2],0x0
  403bc2:	add    rsp,0x38
  403bc6:	pop    rdi
  403bc7:	pop    rsi
  403bc8:	pop    rbp
  403bc9:	pop    rbx
  403bca:	ret    
  403bcb:	int3   
  403bcc:	mov    BYTE PTR [rsp+0x20],r9b
  403bd1:	push   rbx
  403bd2:	push   rbp
  403bd3:	push   rsi
  403bd4:	push   rdi
  403bd5:	push   r12
  403bd7:	push   r13
  403bd9:	push   r14
  403bdb:	mov    r11,rsp
  403bde:	sub    rsp,0x40
  403be2:	mov    rax,QWORD PTR [rcx]
  403be5:	mov    r12,QWORD PTR [rsp+0xa0]
  403bed:	xor    r14d,r14d
  403bf0:	mov    DWORD PTR [rcx+0x8],r14d
  403bf4:	mov    BYTE PTR [rax],r14b
  403bf7:	mov    BYTE PTR [r12],r14b
  403bfb:	mov    r9d,DWORD PTR [rdx+0x8]
  403bff:	mov    edi,r8d
  403c02:	mov    r13,rdx
  403c05:	cmp    r9d,r14d
  403c08:	mov    rbx,rcx
  403c0b:	je     0x403d1c
  403c11:	mov    r8,QWORD PTR [rdx]
  403c14:	mov    QWORD PTR [r11-0x8],r14
  403c18:	mov    QWORD PTR [r11-0x10],r14
  403c1c:	mov    DWORD PTR [r11-0x18],r14d
  403c20:	xor    edx,edx
  403c22:	mov    ecx,edi
  403c24:	mov    QWORD PTR [r11-0x20],r14
  403c28:	call   QWORD PTR [rip+0x49582]        # 0x44d1b0
  403c2e:	cmp    eax,r14d
  403c31:	mov    esi,eax
  403c33:	jne    0x403c64
  403c35:	call   QWORD PTR [rip+0x49565]        # 0x44d1a0
  403c3b:	cmp    eax,r14d
  403c3e:	je     0x403d1c
  403c44:	lea    rdx,[rip+0x63485]        # 0x4670d0
  403c4b:	lea    rcx,[rsp+0xa0]
  403c53:	mov    DWORD PTR [rsp+0xa0],0x44e74
  403c5e:	call   0x44b71e
  403c63:	int3   
  403c64:	cmp    edi,0xfde9
  403c6a:	mov    DWORD PTR [rsp+0xa0],r14d
  403c72:	je     0x403c7f
  403c74:	cmp    edi,0xfde8
  403c7a:	mov    bpl,r14b
  403c7d:	jne    0x403c82
  403c7f:	mov    bpl,0x1
  403c82:	cmp    eax,DWORD PTR [rbx+0xc]
  403c85:	jbe    0x403c91
  403c87:	mov    edx,eax
  403c89:	mov    rcx,rbx
  403c8c:	call   0x402a70
  403c91:	mov    rdx,QWORD PTR [rbx]
  403c94:	mov    r9d,DWORD PTR [r13+0x8]
  403c98:	mov    r8,QWORD PTR [r13+0x0]
  403c9c:	cmp    bpl,r14b
  403c9f:	lea    rcx,[rsp+0xa0]
  403ca7:	lea    rax,[rsp+0x98]
  403caf:	cmovne rcx,r14
  403cb3:	cmp    bpl,r14b
  403cb6:	mov    QWORD PTR [rsp+0x38],rcx
  403cbb:	cmovne rax,r14
  403cbf:	mov    ecx,edi
  403cc1:	mov    QWORD PTR [rsp+0x30],rax
  403cc6:	mov    DWORD PTR [rsp+0x28],esi
  403cca:	mov    QWORD PTR [rsp+0x20],rdx
  403ccf:	xor    edx,edx
  403cd1:	call   QWORD PTR [rip+0x494d9]        # 0x44d1b0
  403cd7:	cmp    bpl,r14b
  403cda:	jne    0x403ceb
  403cdc:	cmp    DWORD PTR [rsp+0xa0],r14d
  403ce4:	setne  cl
  403ce7:	mov    BYTE PTR [r12],cl
  403ceb:	cmp    eax,r14d
  403cee:	jne    0x403d10
  403cf0:	lea    rdx,[rip+0x633d9]        # 0x4670d0
  403cf7:	lea    rcx,[rsp+0x80]
  403cff:	mov    DWORD PTR [rsp+0x80],0x44e74
  403d0a:	call   0x44b71e
  403d0f:	int3   
  403d10:	mov    DWORD PTR [rbx+0x8],eax
  403d13:	mov    ecx,eax
  403d15:	mov    rax,QWORD PTR [rbx]
  403d18:	mov    BYTE PTR [rcx+rax*1],r14b
  403d1c:	add    rsp,0x40
  403d20:	pop    r14
  403d22:	pop    r13
  403d24:	pop    r12
  403d26:	pop    rdi
  403d27:	pop    rsi
  403d28:	pop    rbp
  403d29:	pop    rbx
  403d2a:	ret    
  403d2b:	int3   
  403d2c:	mov    QWORD PTR [rsp+0x8],rcx
  403d31:	push   rbx
  403d32:	push   rsi
  403d33:	push   rdi
  403d34:	sub    rsp,0x30
  403d38:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  403d41:	mov    ebx,r8d
  403d44:	mov    rdi,rdx
  403d47:	mov    rsi,rcx
  403d4a:	mov    DWORD PTR [rsp+0x68],0x0
  403d52:	call   0x403150
  403d57:	mov    DWORD PTR [rsp+0x68],0x1
  403d5f:	mov    r8d,ebx
  403d62:	mov    rdx,rdi
  403d65:	mov    rcx,rsi
  403d68:	call   0x403af4
  403d6d:	mov    rax,rsi
  403d70:	add    rsp,0x30
  403d74:	pop    rdi
  403d75:	pop    rsi
  403d76:	pop    rbx
  403d77:	ret    
  403d78:	int3   
  403d79:	int3   
  403d7a:	int3   
  403d7b:	int3   
  403d7c:	rex.W push rbp
  403d7e:	sub    rsp,0x20
  403d82:	mov    rbp,rdx
  403d85:	mov    eax,DWORD PTR [rbp+0x68]
  403d88:	and    eax,0x1
  403d8b:	test   eax,eax
  403d8d:	je     0x403d9c
  403d8f:	and    DWORD PTR [rbp+0x68],0xfffffffe
  403d93:	mov    rcx,QWORD PTR [rbp+0x50]
  403d97:	call   0x401000
  403d9c:	add    rsp,0x20
  403da0:	pop    rbp
  403da1:	ret    
  403da2:	int3   
  403da3:	int3   
  403da4:	sub    rsp,0x38
  403da8:	lea    rax,[rsp+0x58]
  403dad:	mov    r9b,0x5f
  403db0:	mov    QWORD PTR [rsp+0x20],rax
  403db5:	call   0x403bcc
  403dba:	add    rsp,0x38
  403dbe:	ret    
  403dbf:	int3   
  403dc0:	mov    QWORD PTR [rsp+0x8],rcx
  403dc5:	push   rbx
  403dc6:	push   rsi
  403dc7:	push   rdi
  403dc8:	sub    rsp,0x40
  403dcc:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  403dd5:	mov    ebx,r8d
  403dd8:	mov    rdi,rdx
  403ddb:	mov    rsi,rcx
  403dde:	mov    DWORD PTR [rsp+0x30],0x0
  403de6:	call   0x402b34
  403deb:	mov    DWORD PTR [rsp+0x30],0x1
  403df3:	lea    rax,[rsp+0x78]
  403df8:	mov    QWORD PTR [rsp+0x20],rax
  403dfd:	mov    r9b,0x5f
  403e00:	mov    r8d,ebx
  403e03:	mov    rdx,rdi
  403e06:	mov    rcx,rsi
  403e09:	call   0x403bcc
  403e0e:	mov    rax,rsi
  403e11:	add    rsp,0x40
  403e15:	pop    rdi
  403e16:	pop    rsi
  403e17:	pop    rbx
  403e18:	ret    
  403e19:	int3   
  403e1a:	int3   
  403e1b:	int3   
  403e1c:	int3   
  403e1d:	int3   
  403e1e:	int3   
  403e1f:	int3   
  403e20:	rex.W push rbp
  403e22:	sub    rsp,0x20
  403e26:	mov    rbp,rdx
  403e29:	mov    eax,DWORD PTR [rbp+0x30]
  403e2c:	and    eax,0x1
  403e2f:	test   eax,eax
  403e31:	je     0x403e40
  403e33:	and    DWORD PTR [rbp+0x30],0xfffffffe
  403e37:	mov    rcx,QWORD PTR [rbp+0x60]
  403e3b:	call   0x401000
  403e40:	add    rsp,0x20
  403e44:	pop    rbp
  403e45:	ret    
  403e46:	int3   
  403e47:	int3   
  403e48:	test   rdx,rdx
  403e4b:	je     0x403e50
  403e4d:	mov    QWORD PTR [rdx],rcx
  403e50:	xor    r8d,r8d
  403e53:	jmp    0x403e87
  403e55:	cmp    ax,0x39
  403e59:	ja     0x403e90
  403e5b:	cmp    r8d,0x19999999
  403e62:	ja     0x403e9c
  403e64:	movzx  r9d,ax
  403e68:	lea    r8d,[r8+r8*4]
  403e6c:	mov    eax,0xffffffff
  403e71:	sub    r9d,0x30
  403e75:	add    r8d,r8d
  403e78:	sub    eax,r9d
  403e7b:	cmp    r8d,eax
  403e7e:	ja     0x403e9c
  403e80:	add    r8d,r9d
  403e83:	add    rcx,0x2
  403e87:	movzx  eax,WORD PTR [rcx]
  403e8a:	cmp    ax,0x30
  403e8e:	jae    0x403e55
  403e90:	test   rdx,rdx
  403e93:	je     0x403e98
  403e95:	mov    QWORD PTR [rdx],rcx
  403e98:	mov    eax,r8d
  403e9b:	ret    
  403e9c:	xor    eax,eax
  403e9e:	ret    
  403e9f:	int3   
  403ea0:	test   rdx,rdx
  403ea3:	je     0x403ea8
  403ea5:	mov    QWORD PTR [rdx],rcx
  403ea8:	xor    r8d,r8d
  403eab:	jmp    0x403ee7
  403ead:	cmp    ax,0x39
  403eb1:	ja     0x403ef0
  403eb3:	movabs r9,0x1999999999999999
  403ebd:	cmp    r8,r9
  403ec0:	ja     0x403efc
  403ec2:	movzx  r9d,ax
  403ec6:	lea    r8,[r8+r8*4]
  403eca:	mov    rax,0xffffffffffffffff
  403ed1:	add    r9d,0xffffffd0
  403ed5:	add    r8,r8
  403ed8:	sub    rax,r9
  403edb:	cmp    r8,rax
  403ede:	ja     0x403efc
  403ee0:	add    r8,r9
  403ee3:	add    rcx,0x2
  403ee7:	movzx  eax,WORD PTR [rcx]
  403eea:	cmp    ax,0x30
  403eee:	jae    0x403ead
  403ef0:	test   rdx,rdx
  403ef3:	je     0x403ef8
  403ef5:	mov    QWORD PTR [rdx],rcx
  403ef8:	mov    rax,r8
  403efb:	ret    
  403efc:	xor    eax,eax
  403efe:	ret    
  403eff:	int3   
  403f00:	test   rdx,rdx
  403f03:	je     0x403f08
  403f05:	mov    QWORD PTR [rdx],rcx
  403f08:	xor    r9d,r9d
  403f0b:	movzx  r8d,BYTE PTR [rcx]
  403f0f:	lea    eax,[r8-0x30]
  403f13:	cmp    eax,0x9
  403f16:	jbe    0x403f34
  403f18:	lea    eax,[r8-0x41]
  403f1c:	cmp    eax,0x5
  403f1f:	ja     0x403f27
  403f21:	lea    eax,[r8-0x37]
  403f25:	jmp    0x403f34
  403f27:	lea    eax,[r8-0x61]
  403f2b:	cmp    eax,0x5
  403f2e:	ja     0x403f4c
  403f30:	lea    eax,[r8-0x57]
  403f34:	test   r9d,0xf0000000
  403f3b:	jne    0x403f49
  403f3d:	shl    r9d,0x4
  403f41:	or     r9d,eax
  403f44:	inc    rcx
  403f47:	jmp    0x403f0b
  403f49:	xor    eax,eax
  403f4b:	ret    
  403f4c:	test   rdx,rdx
  403f4f:	je     0x403f54
  403f51:	mov    QWORD PTR [rdx],rcx
  403f54:	mov    eax,r9d
  403f57:	ret    
  403f58:	rex.W push rbx
  403f5a:	push   rsi
  403f5b:	push   rdi
  403f5c:	mov    rdi,r9
  403f5f:	xor    r10d,r10d
  403f62:	mov    rbx,r8
  403f65:	cmp    r8,rdi
  403f68:	mov    rsi,rdx
  403f6b:	mov    r11,rcx
  403f6e:	mov    r9b,0x1
  403f71:	je     0x404082
  403f77:	mov    al,BYTE PTR [rbx]
  403f79:	inc    rbx
  403f7c:	cmp    al,0x80
  403f7e:	jae    0x403f96
  403f80:	test   r11,r11
  403f83:	je     0x40402b
  403f89:	movzx  eax,al
  403f8c:	mov    WORD PTR [r11+r10*2],ax
  403f91:	jmp    0x40402b
  403f96:	cmp    al,0xc0
  403f98:	jb     0x404067
  403f9e:	cmp    al,0xe0
  403fa0:	jae    0x403fac
  403fa2:	mov    r8d,0x1
  403fa8:	add    al,0x40
  403faa:	jmp    0x403fe6
  403fac:	cmp    al,0xf0
  403fae:	jae    0x403fba
  403fb0:	mov    r8d,0x2
  403fb6:	add    al,0x20
  403fb8:	jmp    0x403fe6
  403fba:	cmp    al,0xf8
  403fbc:	jae    0x403fc8
  403fbe:	mov    r8d,0x3
  403fc4:	add    al,0x10
  403fc6:	jmp    0x403fe6
  403fc8:	cmp    al,0xfc
  403fca:	jae    0x403fd6
  403fcc:	mov    r8d,0x4
  403fd2:	add    al,0x8
  403fd4:	jmp    0x403fe6
  403fd6:	cmp    al,0xfe
  403fd8:	jae    0x404067
  403fde:	mov    r8d,0x5
  403fe4:	add    al,0x4
  403fe6:	movzx  edx,al
  403fe9:	cmp    rbx,rdi
  403fec:	je     0x404014
  403fee:	mov    cl,BYTE PTR [rbx]
  403ff0:	lea    eax,[rcx+0x80]
  403ff6:	cmp    al,0x3f
  403ff8:	ja     0x404014
  403ffa:	mov    eax,edx
  403ffc:	movzx  ecx,cl
  403fff:	inc    rbx
  404002:	add    ecx,0xffffff80
  404005:	shl    eax,0x6
  404008:	mov    edx,ecx
  40400a:	or     edx,eax
  40400c:	add    r8d,0xffffffff
  404010:	je     0x404019
  404012:	jmp    0x403fe9
  404014:	test   r8d,r8d
  404017:	jne    0x404067
  404019:	cmp    edx,0x10000
  40401f:	jae    0x404030
  404021:	test   r11,r11
  404024:	je     0x40402b
  404026:	mov    WORD PTR [r11+r10*2],dx
  40402b:	inc    r10
  40402e:	jmp    0x404079
  404030:	add    edx,0xffff0000
  404036:	cmp    edx,0x100000
  40403c:	jae    0x404067
  40403e:	test   r11,r11
  404041:	je     0x404061
  404043:	mov    eax,edx
  404045:	and    dx,0x3ff
  40404a:	shr    eax,0xa
  40404d:	sub    ax,0x2800
  404051:	sub    dx,0x2400
  404056:	mov    WORD PTR [r11+r10*2+0x2],dx
  40405c:	mov    WORD PTR [r11+r10*2],ax
  404061:	add    r10,0x2
  404065:	jmp    0x404079
  404067:	test   r11,r11
  40406a:	je     0x404073
  40406c:	mov    WORD PTR [r11+r10*2],0xfffd
  404073:	inc    r10
  404076:	xor    r9b,r9b
  404079:	cmp    rbx,rdi
  40407c:	jne    0x403f77
  404082:	mov    QWORD PTR [rsi],r10
  404085:	mov    al,r9b
  404088:	pop    rdi
  404089:	pop    rsi
  40408a:	pop    rbx
  40408b:	ret    
  40408c:	rex.W push rbx
  40408e:	push   rsi
  40408f:	push   rdi
  404090:	sub    rsp,0x20
  404094:	mov    rax,QWORD PTR [rdx]
  404097:	mov    DWORD PTR [rdx+0x8],0x0
  40409e:	mov    rdi,rdx
  4040a1:	mov    WORD PTR [rax],0x0
  4040a6:	mov    r9d,DWORD PTR [rcx+0x8]
  4040aa:	mov    r8,QWORD PTR [rcx]
  4040ad:	add    r9,QWORD PTR [rcx]
  4040b0:	mov    rbx,rcx
  4040b3:	lea    rdx,[rsp+0x40]
  4040b8:	xor    ecx,ecx
  4040ba:	mov    QWORD PTR [rsp+0x40],0x0
  4040c3:	call   0x403f58
  4040c8:	mov    rsi,QWORD PTR [rbx]
  4040cb:	mov    ebx,DWORD PTR [rbx+0x8]
  4040ce:	mov    rax,QWORD PTR [rsp+0x40]
  4040d3:	add    rbx,rsi
  4040d6:	cmp    eax,DWORD PTR [rdi+0xc]
  4040d9:	jbe    0x4040e5
  4040db:	mov    edx,eax
  4040dd:	mov    rcx,rdi
  4040e0:	call   0x402ea4
  4040e5:	mov    rcx,QWORD PTR [rdi]
  4040e8:	lea    rdx,[rsp+0x40]
  4040ed:	mov    r9,rbx
  4040f0:	mov    r8,rsi
  4040f3:	call   0x403f58
  4040f8:	mov    rcx,QWORD PTR [rsp+0x40]
  4040fd:	mov    DWORD PTR [rdi+0x8],ecx
  404100:	mov    edx,ecx
  404102:	mov    rcx,QWORD PTR [rdi]
  404105:	mov    WORD PTR [rcx+rdx*2],0x0
  40410b:	add    rsp,0x20
  40410f:	pop    rdi
  404110:	pop    rsi
  404111:	pop    rbx
  404112:	ret    
  404113:	int3   
  404114:	rex.W push rbx
  404116:	push   rbp
  404117:	push   rsi
  404118:	push   rdi
  404119:	push   r12
  40411b:	sub    rsp,0x20
  40411f:	mov    rax,QWORD PTR [rdx]
  404122:	mov    DWORD PTR [rdx+0x8],0x0
  404129:	mov    rsi,rdx
  40412c:	mov    BYTE PTR [rax],0x0
  40412f:	mov    rdi,QWORD PTR [rcx]
  404132:	mov    eax,DWORD PTR [rcx+0x8]
  404135:	lea    rbp,[rdi+rax*2]
  404139:	mov    r8,rdi
  40413c:	mov    r12d,0x3ff
  404142:	mov    rbx,rbp
  404145:	sub    rbx,rdi
  404148:	sar    rbx,1
  40414b:	cmp    rdi,rbp
  40414e:	je     0x404195
  404150:	movzx  eax,WORD PTR [r8]
  404154:	add    r8,0x2
  404158:	cmp    eax,0x80
  40415d:	jb     0x404190
  40415f:	cmp    eax,0x800
  404164:	jae    0x40416b
  404166:	inc    rbx
  404169:	jmp    0x404190
  40416b:	add    eax,0xffff2800
  404170:	cmp    eax,r12d
  404173:	ja     0x40418c
  404175:	cmp    r8,rbp
  404178:	je     0x40418c
  40417a:	movzx  eax,WORD PTR [r8]
  40417e:	add    eax,0xffff2400
  404183:	cmp    eax,r12d
  404186:	ja     0x40418c
  404188:	add    r8,0x2
  40418c:	add    rbx,0x2
  404190:	cmp    r8,rbp
  404193:	jne    0x404150
  404195:	cmp    ebx,DWORD PTR [rdx+0xc]
  404198:	jbe    0x4041a4
  40419a:	mov    edx,ebx
  40419c:	mov    rcx,rsi
  40419f:	call   0x402a70
  4041a4:	cmp    rdi,rbp
  4041a7:	mov    rdx,QWORD PTR [rsi]
  4041aa:	je     0x404287
  4041b0:	mov    r9b,0x3f
  4041b3:	mov    r10b,0x80
  4041b6:	movzx  ecx,WORD PTR [rdi]
  4041b9:	add    rdi,0x2
  4041bd:	cmp    ecx,0x80
  4041c3:	jae    0x4041cf
  4041c5:	mov    BYTE PTR [rdx],cl
  4041c7:	inc    rdx
  4041ca:	jmp    0x40427e
  4041cf:	cmp    ecx,0x800
  4041d5:	jae    0x4041f2
  4041d7:	mov    eax,ecx
  4041d9:	and    cl,r9b
  4041dc:	shr    eax,0x6
  4041df:	add    cl,r10b
  4041e2:	sub    al,0x40
  4041e4:	mov    BYTE PTR [rdx+0x1],cl
  4041e7:	mov    BYTE PTR [rdx],al
  4041e9:	add    rdx,0x2
  4041ed:	jmp    0x40427e
  4041f2:	lea    r8d,[rcx-0xd800]
  4041f9:	cmp    r8d,r12d
  4041fc:	ja     0x40425a
  4041fe:	cmp    rdi,rbp
  404201:	je     0x40425a
  404203:	movzx  eax,WORD PTR [rdi]
  404206:	add    eax,0xffff2400
  40420b:	cmp    eax,r12d
  40420e:	ja     0x40425a
  404210:	shl    r8d,0xa
  404214:	add    rdi,0x2
  404218:	or     r8d,eax
  40421b:	add    r8d,0x10000
  404222:	mov    eax,r8d
  404225:	shr    eax,0x12
  404228:	sub    al,0x10
  40422a:	mov    BYTE PTR [rdx],al
  40422c:	mov    eax,r8d
  40422f:	shr    eax,0xc
  404232:	and    al,r9b
  404235:	add    al,r10b
  404238:	mov    BYTE PTR [rdx+0x1],al
  40423b:	mov    eax,r8d
  40423e:	and    r8b,r9b
  404241:	shr    eax,0x6
  404244:	add    r8b,r10b
  404247:	and    al,r9b
  40424a:	mov    BYTE PTR [rdx+0x3],r8b
  40424e:	add    al,r10b
  404251:	add    rdx,0x4
  404255:	mov    BYTE PTR [rdx-0x2],al
  404258:	jmp    0x40427e
  40425a:	mov    eax,ecx
  40425c:	shr    eax,0xc
  40425f:	sub    al,0x20
  404261:	mov    BYTE PTR [rdx],al
  404263:	mov    eax,ecx
  404265:	and    cl,r9b
  404268:	shr    eax,0x6
  40426b:	add    cl,r10b
  40426e:	and    al,r9b
  404271:	mov    BYTE PTR [rdx+0x2],cl
  404274:	add    al,r10b
  404277:	add    rdx,0x3
  40427b:	mov    BYTE PTR [rdx-0x2],al
  40427e:	cmp    rdi,rbp
  404281:	jne    0x4041b6
  404287:	mov    rax,QWORD PTR [rsi]
  40428a:	mov    ecx,ebx
  40428c:	mov    DWORD PTR [rsi+0x8],ebx
  40428f:	mov    BYTE PTR [rcx+rax*1],0x0
  404293:	add    rsp,0x20
  404297:	pop    r12
  404299:	pop    rdi
  40429a:	pop    rsi
  40429b:	pop    rbp
  40429c:	pop    rbx
  40429d:	ret    
  40429e:	int3   
  40429f:	int3   
  4042a0:	rex.W push rbx
  4042a2:	sub    rsp,0x20
  4042a6:	mov    eax,r8d
  4042a9:	mov    rbx,rdx
  4042ac:	mov    r8,rcx
  4042af:	mov    edx,eax
  4042b1:	mov    rcx,rbx
  4042b4:	mov    DWORD PTR [rsp+0x38],0x0
  4042bc:	call   0x402fd0
  4042c1:	mov    rax,rbx
  4042c4:	add    rsp,0x20
  4042c8:	pop    rbx
  4042c9:	ret    
  4042ca:	int3   
  4042cb:	int3   
  4042cc:	sub    rsp,0x28
  4042d0:	cmp    BYTE PTR [rip+0x64721],0x0        # 0x4689f8
  4042d7:	je     0x4042e0
  4042d9:	call   0x4028bc
  4042de:	jmp    0x4042e5
  4042e0:	call   0x4028e0
  4042e5:	add    rsp,0x28
  4042e9:	ret    
  4042ea:	int3   
  4042eb:	int3   
  4042ec:	sub    rsp,0x28
  4042f0:	cmp    BYTE PTR [rip+0x64701],0x0        # 0x4689f8
  4042f7:	je     0x404301
  4042f9:	call   QWORD PTR [rip+0x49049]        # 0x44d348
  4042ff:	jmp    0x404306
  404301:	call   0x40296c
  404306:	add    rsp,0x28
  40430a:	ret    
  40430b:	int3   
  40430c:	mov    QWORD PTR [rsp+0x10],rdx
  404311:	push   rbx
  404312:	push   rbp
  404313:	push   rsi
  404314:	push   rdi
  404315:	sub    rsp,0x28
  404319:	mov    bx,WORD PTR [rcx]
  40431c:	mov    di,WORD PTR [rdx]
  40431f:	mov    rax,rdx
  404322:	mov    rbp,rcx
  404325:	xor    esi,esi
  404327:	jmp    0x4043dd
  40432c:	cmp    bx,0x2a
  404330:	jne    0x404353
  404332:	lea    rcx,[rbp+0x2]
  404336:	mov    rdx,rax
  404339:	call   0x40430c
  40433e:	cmp    al,sil
  404341:	jne    0x4043f1
  404347:	cmp    di,si
  40434a:	je     0x40435e
  40434c:	mov    rax,QWORD PTR [rsp+0x58]
  404351:	jmp    0x4043cd
  404353:	cmp    bx,0x3f
  404357:	jne    0x404369
  404359:	cmp    di,si
  40435c:	jne    0x4043c9
  40435e:	xor    al,al
  404360:	add    rsp,0x28
  404364:	pop    rdi
  404365:	pop    rsi
  404366:	pop    rbp
  404367:	pop    rbx
  404368:	ret    
  404369:	cmp    bx,di
  40436c:	je     0x4043c9
  40436e:	cmp    BYTE PTR [rip+0x64683],sil        # 0x4689f8
  404375:	jne    0x40435e
  404377:	cmp    bx,0x61
  40437b:	jb     0x40439b
  40437d:	cmp    bx,0x7a
  404381:	ja     0x404389
  404383:	sub    bx,0x20
  404387:	jmp    0x40439b
  404389:	cmp    bx,0x7f
  40438d:	jbe    0x40439b
  40438f:	movzx  ecx,bx
  404392:	call   QWORD PTR [rip+0x48f20]        # 0x44d2b8
  404398:	mov    rbx,rax
  40439b:	cmp    di,0x61
  40439f:	jb     0x4043bf
  4043a1:	cmp    di,0x7a
  4043a5:	ja     0x4043ad
  4043a7:	sub    di,0x20
  4043ab:	jmp    0x4043bf
  4043ad:	cmp    di,0x7f
  4043b1:	jbe    0x4043bf
  4043b3:	movzx  ecx,di
  4043b6:	call   QWORD PTR [rip+0x48efc]        # 0x44d2b8
  4043bc:	mov    rdi,rax
  4043bf:	cmp    bx,di
  4043c2:	jne    0x40435e
  4043c4:	mov    rax,QWORD PTR [rsp+0x58]
  4043c9:	add    rbp,0x2
  4043cd:	mov    bx,WORD PTR [rbp+0x0]
  4043d1:	add    rax,0x2
  4043d5:	mov    di,WORD PTR [rax]
  4043d8:	mov    QWORD PTR [rsp+0x58],rax
  4043dd:	cmp    bx,si
  4043e0:	jne    0x40432c
  4043e6:	cmp    di,si
  4043e9:	sete   al
  4043ec:	jmp    0x404360
  4043f1:	mov    al,0x1
  4043f3:	jmp    0x404360
  4043f8:	rex.W push rbx
  4043fa:	push   rdi
  4043fb:	sub    rsp,0x28
  4043ff:	mov    eax,DWORD PTR [rcx+0x8]
  404402:	mov    r9,rdx
  404405:	mov    rdx,QWORD PTR [rcx]
  404408:	lea    rbx,[rdx+rax*2]
  40440c:	mov    rdi,r8
  40440f:	cmp    rbx,rdx
  404412:	je     0x40442c
  404414:	lea    rax,[rbx-0x2]
  404418:	cmp    WORD PTR [rax],0x5c
  40441c:	je     0x40442c
  40441e:	cmp    WORD PTR [rax],0x2f
  404422:	je     0x40442c
  404424:	cmp    rax,rdx
  404427:	mov    rbx,rax
  40442a:	jne    0x404414
  40442c:	mov    r8,rbx
  40442f:	mov    rcx,r9
  404432:	sub    r8,rdx
  404435:	sar    r8,1
  404438:	call   0x403488
  40443d:	mov    rdx,rbx
  404440:	mov    rcx,rdi
  404443:	add    rsp,0x28
  404447:	pop    rdi
  404448:	pop    rbx
  404449:	jmp    0x403290
  40444e:	int3   
  40444f:	int3   
  404450:	rex.W push rbx
  404452:	push   rdi
  404453:	sub    rsp,0x28
  404457:	mov    eax,DWORD PTR [rcx+0x8]
  40445a:	mov    r9,rdx
  40445d:	mov    rdx,QWORD PTR [rcx]
  404460:	lea    rbx,[rdx+rax*2]
  404464:	mov    rdi,r8
  404467:	cmp    rbx,rdx
  40446a:	je     0x40449b
  40446c:	cmp    WORD PTR [rbx-0x2],0x5c
  404471:	je     0x40447a
  404473:	cmp    WORD PTR [rbx-0x2],0x2f
  404478:	jne    0x40447e
  40447a:	add    rbx,0xfffffffffffffffe
  40447e:	cmp    rbx,rdx
  404481:	je     0x40449b
  404483:	lea    rax,[rbx-0x2]
  404487:	cmp    WORD PTR [rax],0x5c
  40448b:	je     0x40449b
  40448d:	cmp    WORD PTR [rax],0x2f
  404491:	je     0x40449b
  404493:	cmp    rax,rdx
  404496:	mov    rbx,rax
  404499:	jne    0x404483
  40449b:	mov    r8,rbx
  40449e:	mov    rcx,r9
  4044a1:	sub    r8,rdx
  4044a4:	sar    r8,1
  4044a7:	call   0x403488
  4044ac:	mov    rdx,rbx
  4044af:	mov    rcx,rdi
  4044b2:	add    rsp,0x28
  4044b6:	pop    rdi
  4044b7:	pop    rbx
  4044b8:	jmp    0x403290
  4044bd:	int3   
  4044be:	int3   
  4044bf:	int3   
  4044c0:	rex.W push rbx
  4044c2:	sub    rsp,0x20
  4044c6:	mov    eax,DWORD PTR [rdx+0x8]
  4044c9:	mov    rbx,rcx
  4044cc:	mov    rcx,QWORD PTR [rdx]
  4044cf:	lea    rdx,[rcx+rax*2]
  4044d3:	mov    DWORD PTR [rsp+0x30],0x0
  4044db:	cmp    rdx,rcx
  4044de:	je     0x4044f8
  4044e0:	lea    rax,[rdx-0x2]
  4044e4:	cmp    WORD PTR [rax],0x5c
  4044e8:	je     0x4044f8
  4044ea:	cmp    WORD PTR [rax],0x2f
  4044ee:	je     0x4044f8
  4044f0:	cmp    rax,rcx
  4044f3:	mov    rdx,rax
  4044f6:	jne    0x4044e0
  4044f8:	mov    rcx,rbx
  4044fb:	call   0x4031c0
  404500:	mov    rax,rbx
  404503:	add    rsp,0x20
  404507:	pop    rbx
  404508:	ret    
  404509:	int3   
  40450a:	int3   
  40450b:	int3   
  40450c:	mov    edx,DWORD PTR [rcx+0x8]
  40450f:	xor    eax,eax
  404511:	cmp    edx,eax
  404513:	jbe    0x40452e
  404515:	mov    rcx,QWORD PTR [rcx]
  404518:	cmp    WORD PTR [rcx],0x2a
  40451c:	je     0x404531
  40451e:	cmp    WORD PTR [rcx],0x3f
  404522:	je     0x404531
  404524:	inc    eax
  404526:	add    rcx,0x2
  40452a:	cmp    eax,edx
  40452c:	jb     0x404518
  40452e:	xor    al,al
  404530:	ret    
  404531:	mov    al,0x1
  404533:	ret    
  404534:	movzx  eax,WORD PTR [rcx]
  404537:	xor    edx,edx
  404539:	cmp    ax,dx
  40453c:	je     0x404566
  40453e:	cmp    WORD PTR [rcx+0x2],0x3a
  404543:	jne    0x404566
  404545:	cmp    WORD PTR [rcx+0x4],dx
  404549:	jne    0x404566
  40454b:	cmp    ax,0x61
  40454f:	jb     0x404557
  404551:	cmp    ax,0x7a
  404555:	jbe    0x404561
  404557:	sub    ax,0x41
  40455b:	cmp    ax,0x19
  40455f:	ja     0x404566
  404561:	mov    edx,0x1
  404566:	mov    al,dl
  404568:	ret    
  404569:	int3   
  40456a:	int3   
  40456b:	int3   
  40456c:	rex.W push rbx
  40456e:	push   rbp
  40456f:	push   rsi
  404570:	push   rdi
  404571:	push   r12
  404573:	sub    rsp,0x20
  404577:	mov    rdi,rcx
  40457a:	mov    ecx,DWORD PTR [rcx+0xc]
  40457d:	mov    r12,r8
  404580:	cmp    DWORD PTR [rdi+0x8],ecx
  404583:	mov    ebp,edx
  404585:	jne    0x4045c5
  404587:	mov    eax,ecx
  404589:	shr    eax,0x2
  40458c:	lea    esi,[rax+rcx*1+0x1]
  404590:	mov    ecx,esi
  404592:	shl    rcx,0x3
  404596:	call   0x402130
  40459b:	cmp    DWORD PTR [rdi+0x8],0x0
  40459f:	mov    rbx,rax
  4045a2:	je     0x4045b7
  4045a4:	mov    r8d,DWORD PTR [rdi+0x8]
  4045a8:	mov    rdx,QWORD PTR [rdi]
  4045ab:	mov    rcx,rax
  4045ae:	shl    r8,0x3
  4045b2:	call   0x44b480
  4045b7:	mov    rcx,QWORD PTR [rdi]
  4045ba:	call   0x40215c
  4045bf:	mov    QWORD PTR [rdi],rbx
  4045c2:	mov    DWORD PTR [rdi+0xc],esi
  4045c5:	mov    r9,QWORD PTR [rdi]
  4045c8:	mov    r8d,DWORD PTR [rdi+0x8]
  4045cc:	lea    eax,[rbp+0x1]
  4045cf:	sub    r8d,ebp
  4045d2:	lea    rdx,[r9+rbp*8]
  4045d6:	lea    rcx,[r9+rax*8]
  4045da:	shl    r8,0x3
  4045de:	call   0x44b774
  4045e3:	mov    r11,QWORD PTR [rdi]
  4045e6:	mov    QWORD PTR [r11+rbp*8],r12
  4045ea:	inc    DWORD PTR [rdi+0x8]
  4045ed:	add    rsp,0x20
  4045f1:	pop    r12
  4045f3:	pop    rdi
  4045f4:	pop    rsi
  4045f5:	pop    rbp
  4045f6:	pop    rbx
  4045f7:	ret    
  4045f8:	rex.W push rbx
  4045fa:	sub    rsp,0x20
  4045fe:	cmp    BYTE PTR [rcx+0x11],0x0
  404602:	je     0x404634
  404604:	cmp    BYTE PTR [rcx+0x12],0x0
  404608:	je     0x404634
  40460a:	cmp    BYTE PTR [rcx+0x13],0x0
  40460e:	je     0x404634
  404610:	mov    ebx,0x1
  404615:	cmp    DWORD PTR [rcx+0x8],ebx
  404618:	jne    0x404634
  40461a:	mov    rax,QWORD PTR [rcx]
  40461d:	lea    rdx,[rip+0x490cc]        # 0x44d6f0
  404624:	mov    rcx,QWORD PTR [rax]
  404627:	mov    rcx,QWORD PTR [rcx]
  40462a:	call   QWORD PTR [rip+0x48d18]        # 0x44d348
  404630:	test   eax,eax
  404632:	je     0x404636
  404634:	xor    ebx,ebx
  404636:	mov    al,bl
  404638:	add    rsp,0x20
  40463c:	pop    rbx
  40463d:	ret    
  40463e:	int3   
  40463f:	int3   
  404640:	rex.W push rbx
  404642:	push   rbp
  404643:	push   rsi
  404644:	push   rdi
  404645:	push   r12
  404647:	push   r13
  404649:	push   r14
  40464b:	sub    rsp,0x20
  40464f:	test   r8b,r8b
  404652:	mov    r14,rdx
  404655:	mov    rbx,rcx
  404658:	jne    0x404664
  40465a:	cmp    BYTE PTR [rcx+0x12],r8b
  40465e:	je     0x404729
  404664:	mov    ecx,DWORD PTR [rcx+0x8]
  404667:	mov    eax,DWORD PTR [rdx+0x8]
  40466a:	sub    eax,ecx
  40466c:	js     0x404729
  404672:	xor    r9d,r9d
  404675:	xor    edx,edx
  404677:	test   r8b,r8b
  40467a:	je     0x4046a0
  40467c:	cmp    BYTE PTR [rbx+0x12],dl
  40467f:	jne    0x404693
  404681:	cmp    BYTE PTR [rbx+0x10],dl
  404684:	je     0x40468b
  404686:	mov    r9d,eax
  404689:	jmp    0x404693
  40468b:	test   eax,eax
  40468d:	jne    0x404729
  404693:	cmp    BYTE PTR [rbx+0x11],dl
  404696:	jne    0x4046a0
  404698:	test   eax,eax
  40469a:	je     0x404729
  4046a0:	cmp    BYTE PTR [rbx+0x10],dl
  4046a3:	je     0x4046b5
  4046a5:	test   r8b,r8b
  4046a8:	mov    edx,eax
  4046aa:	je     0x4046b5
  4046ac:	cmp    BYTE PTR [rbx+0x11],0x0
  4046b0:	jne    0x4046b5
  4046b2:	lea    edx,[rax-0x1]
  4046b5:	movsxd rdi,r9d
  4046b8:	movsxd r13,edx
  4046bb:	jmp    0x404724
  4046bd:	xor    esi,esi
  4046bf:	test   ecx,ecx
  4046c1:	je     0x40471a
  4046c3:	mov    r12,rdi
  4046c6:	xor    ebp,ebp
  4046c8:	shl    r12,0x3
  4046cc:	cmp    BYTE PTR [rbx+0x13],0x0
  4046d0:	mov    rax,QWORD PTR [r14]
  4046d3:	mov    rcx,QWORD PTR [r12+rax*1]
  4046d7:	mov    rax,QWORD PTR [rbx]
  4046da:	mov    rdx,QWORD PTR [rcx]
  4046dd:	mov    rcx,QWORD PTR [rax+rbp*1]
  4046e1:	mov    rcx,QWORD PTR [rcx]
  4046e4:	je     0x4046f1
  4046e6:	call   0x40430c
  4046eb:	test   al,al
  4046ed:	je     0x40471a
  4046ef:	jmp    0x40470b
  4046f1:	cmp    BYTE PTR [rip+0x64300],0x0        # 0x4689f8
  4046f8:	je     0x404702
  4046fa:	call   QWORD PTR [rip+0x48c48]        # 0x44d348
  404700:	jmp    0x404707
  404702:	call   0x40296c
  404707:	test   eax,eax
  404709:	jne    0x40471a
  40470b:	inc    esi
  40470d:	add    rbp,0x8
  404711:	add    r12,0x8
  404715:	cmp    esi,DWORD PTR [rbx+0x8]
  404718:	jb     0x4046cc
  40471a:	mov    ecx,DWORD PTR [rbx+0x8]
  40471d:	cmp    esi,ecx
  40471f:	je     0x40473a
  404721:	inc    rdi
  404724:	cmp    rdi,r13
  404727:	jle    0x4046bd
  404729:	xor    al,al
  40472b:	add    rsp,0x20
  40472f:	pop    r14
  404731:	pop    r13
  404733:	pop    r12
  404735:	pop    rdi
  404736:	pop    rsi
  404737:	pop    rbp
  404738:	pop    rbx
  404739:	ret    
  40473a:	mov    al,0x1
  40473c:	jmp    0x40472b
  40473e:	int3   
  40473f:	int3   
  404740:	sub    rsp,0x28
  404744:	xor    eax,eax
  404746:	cmp    DWORD PTR [rcx+0x10],eax
  404749:	jne    0x404767
  40474b:	cmp    DWORD PTR [rcx+0x20],eax
  40474e:	jne    0x404767
  404750:	cmp    DWORD PTR [rcx+0x40],eax
  404753:	jne    0x404767
  404755:	cmp    DWORD PTR [rcx+0x30],0x1
  404759:	jne    0x404767
  40475b:	mov    rax,QWORD PTR [rcx+0x28]
  40475f:	mov    rcx,QWORD PTR [rax]
  404762:	call   0x4045f8
  404767:	add    rsp,0x28
  40476b:	ret    
  40476c:	rex.W push rbx
  40476e:	push   rbp
  40476f:	push   rsi
  404770:	push   rdi
  404771:	sub    rsp,0x28
  404775:	xor    ebx,ebx
  404777:	mov    rbp,rdx
  40477a:	mov    rsi,rcx
  40477d:	cmp    DWORD PTR [rcx+0x20],ebx
  404780:	jbe    0x4047b9
  404782:	xor    edi,edi
  404784:	cmp    BYTE PTR [rip+0x6426d],0x0        # 0x4689f8
  40478b:	mov    rax,QWORD PTR [rsi+0x18]
  40478f:	mov    rdx,QWORD PTR [rbp+0x0]
  404793:	mov    rcx,QWORD PTR [rdi+rax*1]
  404797:	mov    rcx,QWORD PTR [rcx+0x8]
  40479b:	je     0x4047a5
  40479d:	call   QWORD PTR [rip+0x48ba5]        # 0x44d348
  4047a3:	jmp    0x4047aa
  4047a5:	call   0x40296c
  4047aa:	test   eax,eax
  4047ac:	je     0x4047c7
  4047ae:	inc    ebx
  4047b0:	add    rdi,0x8
  4047b4:	cmp    ebx,DWORD PTR [rsi+0x20]
  4047b7:	jb     0x404784
  4047b9:	mov    eax,0xffffffff
  4047be:	add    rsp,0x28
  4047c2:	pop    rdi
  4047c3:	pop    rsi
  4047c4:	pop    rbp
  4047c5:	pop    rbx
  4047c6:	ret    
  4047c7:	mov    eax,ebx
  4047c9:	jmp    0x4047be
  4047cb:	int3   
  4047cc:	rex.W push rbx
  4047ce:	push   rbp
  4047cf:	push   rsi
  4047d0:	push   rdi
  4047d1:	sub    rsp,0x28
  4047d5:	movsxd rbx,DWORD PTR [rcx+0x8]
  4047d9:	mov    rdi,rcx
  4047dc:	test   ebx,ebx
  4047de:	mov    rsi,rbx
  4047e1:	je     0x40480f
  4047e3:	shl    rsi,0x3
  4047e7:	mov    rax,QWORD PTR [rdi]
  4047ea:	sub    rsi,0x8
  4047ee:	add    ebx,0xffffffff
  4047f1:	mov    rbp,QWORD PTR [rsi+rax*1]
  4047f5:	test   rbp,rbp
  4047f8:	je     0x40480b
  4047fa:	mov    rcx,QWORD PTR [rbp+0x0]
  4047fe:	call   0x40215c
  404803:	mov    rcx,rbp
  404806:	call   0x40215c
  40480b:	test   ebx,ebx
  40480d:	jne    0x4047e7
  40480f:	mov    rcx,QWORD PTR [rdi]
  404812:	add    rsp,0x28
  404816:	pop    rdi
  404817:	pop    rsi
  404818:	pop    rbp
  404819:	pop    rbx
  40481a:	jmp    0x40215c
  40481f:	int3   
  404820:	mov    r8d,DWORD PTR [rcx+0x30]
  404824:	xor    eax,eax
  404826:	test   r8d,r8d
  404829:	je     0x404849
  40482b:	mov    rdx,QWORD PTR [rcx+0x28]
  40482f:	mov    rcx,QWORD PTR [rdx]
  404832:	cmp    BYTE PTR [rcx+0x10],0x0
  404836:	jne    0x40484c
  404838:	cmp    DWORD PTR [rcx+0x8],0x1
  40483c:	ja     0x40484c
  40483e:	inc    eax
  404840:	add    rdx,0x8
  404844:	cmp    eax,r8d
  404847:	jb     0x40482f
  404849:	xor    al,al
  40484b:	ret    
  40484c:	mov    al,0x1
  40484e:	ret    
  40484f:	int3   
  404850:	rex.W push rbx
  404852:	push   rsi
  404853:	push   rdi
  404854:	sub    rsp,0x20
  404858:	cmp    DWORD PTR [rcx+0x30],0x0
  40485c:	mov    rbx,rcx
  40485f:	ja     0x404890
  404861:	xor    edi,edi
  404863:	cmp    DWORD PTR [rcx+0x20],edi
  404866:	jbe    0x404886
  404868:	xor    esi,esi
  40486a:	mov    rax,QWORD PTR [rbx+0x18]
  40486e:	mov    rcx,QWORD PTR [rsi+rax*1]
  404872:	call   0x404850
  404877:	test   al,al
  404879:	jne    0x404890
  40487b:	inc    edi
  40487d:	add    rsi,0x8
  404881:	cmp    edi,DWORD PTR [rbx+0x20]
  404884:	jb     0x40486a
  404886:	xor    al,al
  404888:	add    rsp,0x20
  40488c:	pop    rdi
  40488d:	pop    rsi
  40488e:	pop    rbx
  40488f:	ret    
  404890:	mov    al,0x1
  404892:	jmp    0x404888
  404894:	rex.W push rbx
  404896:	push   rbp
  404897:	push   rsi
  404898:	push   rdi
  404899:	push   r12
  40489b:	sub    rsp,0x20
  40489f:	test   dl,dl
  4048a1:	lea    rax,[rcx+0x28]
  4048a5:	lea    rsi,[rcx+0x38]
  4048a9:	cmovne rsi,rax
  4048ad:	xor    edi,edi
  4048af:	mov    bpl,r9b
  4048b2:	cmp    DWORD PTR [rsi+0x8],edi
  4048b5:	mov    r12,r8
  4048b8:	jbe    0x4048dd
  4048ba:	xor    ebx,ebx
  4048bc:	mov    rax,QWORD PTR [rsi]
  4048bf:	mov    r8b,bpl
  4048c2:	mov    rdx,r12
  4048c5:	mov    rcx,QWORD PTR [rbx+rax*1]
  4048c9:	call   0x404640
  4048ce:	test   al,al
  4048d0:	jne    0x4048ea
  4048d2:	inc    edi
  4048d4:	add    rbx,0x8
  4048d8:	cmp    edi,DWORD PTR [rsi+0x8]
  4048db:	jb     0x4048bc
  4048dd:	xor    al,al
  4048df:	add    rsp,0x20
  4048e3:	pop    r12
  4048e5:	pop    rdi
  4048e6:	pop    rsi
  4048e7:	pop    rbp
  4048e8:	pop    rbx
  4048e9:	ret    
  4048ea:	mov    al,0x1
  4048ec:	jmp    0x4048df
  4048ee:	int3   
  4048ef:	int3   
  4048f0:	rex.W push rbx
  4048f2:	push   rbp
  4048f3:	push   rsi
  4048f4:	push   rdi
  4048f5:	sub    rsp,0x28
  4048f9:	xor    ebx,ebx
  4048fb:	mov    rbp,rdx
  4048fe:	mov    rsi,rcx
  404901:	cmp    DWORD PTR [rcx+0x8],ebx
  404904:	jbe    0x40493b
  404906:	xor    edi,edi
  404908:	cmp    BYTE PTR [rip+0x640e9],0x0        # 0x4689f8
  40490f:	mov    rax,QWORD PTR [rsi]
  404912:	mov    rdx,QWORD PTR [rbp+0x0]
  404916:	mov    r8,QWORD PTR [rdi+rax*1]
  40491a:	mov    rcx,QWORD PTR [r8]
  40491d:	je     0x404927
  40491f:	call   QWORD PTR [rip+0x48a23]        # 0x44d348
  404925:	jmp    0x40492c
  404927:	call   0x40296c
  40492c:	test   eax,eax
  40492e:	je     0x404949
  404930:	inc    ebx
  404932:	add    rdi,0x8
  404936:	cmp    ebx,DWORD PTR [rsi+0x8]
  404939:	jb     0x404908
  40493b:	mov    eax,0xffffffff
  404940:	add    rsp,0x28
  404944:	pop    rdi
  404945:	pop    rsi
  404946:	pop    rbp
  404947:	pop    rbx
  404948:	ret    
  404949:	mov    eax,ebx
  40494b:	jmp    0x404940
  40494d:	int3   
  40494e:	int3   
  40494f:	int3   
  404950:	rex.W push rbx
  404952:	sub    rsp,0x20
  404956:	cmp    DWORD PTR [rcx+0x8],0x0
  40495a:	mov    rbx,rcx
  40495d:	je     0x4049b6
  40495f:	mov    rcx,QWORD PTR [rcx]
  404962:	xor    r8d,r8d
  404965:	mov    rax,QWORD PTR [rcx]
  404968:	cmp    DWORD PTR [rax+0x8],r8d
  40496c:	jne    0x40499a
  40496e:	cmp    DWORD PTR [rbx+0x8],0x4
  404972:	jb     0x4049b6
  404974:	mov    rax,QWORD PTR [rcx+0x8]
  404978:	cmp    DWORD PTR [rax+0x8],r8d
  40497c:	jne    0x4049b6
  40497e:	mov    rax,QWORD PTR [rcx+0x10]
  404982:	lea    rdx,[rip+0x48d6b]        # 0x44d6f4
  404989:	mov    rcx,QWORD PTR [rax]
  40498c:	call   QWORD PTR [rip+0x489b6]        # 0x44d348
  404992:	test   eax,eax
  404994:	jne    0x4049b6
  404996:	lea    r8d,[rax+0x3]
  40499a:	mov    rax,QWORD PTR [rbx]
  40499d:	mov    ecx,r8d
  4049a0:	mov    rcx,QWORD PTR [rax+rcx*8]
  4049a4:	mov    rcx,QWORD PTR [rcx]
  4049a7:	call   0x404534
  4049ac:	test   al,al
  4049ae:	je     0x4049b6
  4049b0:	lea    eax,[r8+0x1]
  4049b4:	jmp    0x4049b8
  4049b6:	xor    eax,eax
  4049b8:	add    rsp,0x20
  4049bc:	pop    rbx
  4049bd:	ret    
  4049be:	int3   
  4049bf:	int3   
  4049c0:	rex.W push rbx
  4049c2:	push   rbp
  4049c3:	push   rsi
  4049c4:	push   rdi
  4049c5:	push   r12
  4049c7:	push   r13
  4049c9:	sub    rsp,0x28
  4049cd:	movsxd rdi,DWORD PTR [rcx+0x8]
  4049d1:	xor    ebx,ebx
  4049d3:	mov    rbp,rcx
  4049d6:	cmp    edi,ebx
  4049d8:	je     0x404cfe
  4049de:	mov    r9,QWORD PTR [rcx]
  4049e1:	mov    r8,QWORD PTR [r9]
  4049e4:	mov    rcx,QWORD PTR [r8]
  4049e7:	call   0x404534
  4049ec:	cmp    al,bl
  4049ee:	je     0x404a29
  4049f0:	mov    r12,rdi
  4049f3:	shl    r12,0x3
  4049f7:	mov    rax,QWORD PTR [rbp+0x0]
  4049fb:	sub    r12,0x8
  4049ff:	add    edi,0xffffffff
  404a02:	mov    rsi,QWORD PTR [r12+rax*1]
  404a06:	cmp    rsi,rbx
  404a09:	je     0x404a1b
  404a0b:	mov    rcx,QWORD PTR [rsi]
  404a0e:	call   0x40215c
  404a13:	mov    rcx,rsi
  404a16:	call   0x40215c
  404a1b:	cmp    edi,ebx
  404a1d:	jne    0x4049f7
  404a1f:	mov    ebx,0x1
  404a24:	jmp    0x404cfe
  404a29:	cmp    DWORD PTR [r8+0x8],ebx
  404a2d:	je     0x404a63
  404a2f:	mov    r12,rdi
  404a32:	shl    r12,0x3
  404a36:	mov    rax,QWORD PTR [rbp+0x0]
  404a3a:	sub    r12,0x8
  404a3e:	add    edi,0xffffffff
  404a41:	mov    rsi,QWORD PTR [r12+rax*1]
  404a45:	cmp    rsi,rbx
  404a48:	je     0x404a5a
  404a4a:	mov    rcx,QWORD PTR [rsi]
  404a4d:	call   0x40215c
  404a52:	mov    rcx,rsi
  404a55:	call   0x40215c
  404a5a:	cmp    edi,ebx
  404a5c:	jne    0x404a36
  404a5e:	jmp    0x404cfe
  404a63:	mov    r12d,0x1
  404a69:	cmp    edi,r12d
  404a6c:	jne    0x404aa7
  404a6e:	mov    edi,r12d
  404a71:	lea    esi,[r12+0x7]
  404a76:	mov    rax,QWORD PTR [rbp+0x0]
  404a7a:	sub    rsi,0x8
  404a7e:	add    edi,0xffffffff
  404a81:	mov    r13,QWORD PTR [rsi+rax*1]
  404a85:	cmp    r13,rbx
  404a88:	je     0x404a9b
  404a8a:	mov    rcx,QWORD PTR [r13+0x0]
  404a8e:	call   0x40215c
  404a93:	mov    rcx,r13
  404a96:	call   0x40215c
  404a9b:	cmp    edi,ebx
  404a9d:	jne    0x404a76
  404a9f:	mov    ebx,r12d
  404aa2:	jmp    0x404cfe
  404aa7:	mov    rax,QWORD PTR [r9+0x8]
  404aab:	cmp    DWORD PTR [rax+0x8],ebx
  404aae:	je     0x404ae2
  404ab0:	mov    r13,rdi
  404ab3:	shl    r13,0x3
  404ab7:	mov    rax,QWORD PTR [rbp+0x0]
  404abb:	sub    r13,0x8
  404abf:	add    edi,0xffffffff
  404ac2:	mov    rsi,QWORD PTR [r13+rax*1+0x0]
  404ac7:	cmp    rsi,rbx
  404aca:	je     0x404adc
  404acc:	mov    rcx,QWORD PTR [rsi]
  404acf:	call   0x40215c
  404ad4:	mov    rcx,rsi
  404ad7:	call   0x40215c
  404adc:	cmp    edi,ebx
  404ade:	jne    0x404ab7
  404ae0:	jmp    0x404a9f
  404ae2:	mov    esi,0x2
  404ae7:	cmp    edi,esi
  404ae9:	jne    0x404b1f
  404aeb:	mov    edi,esi
  404aed:	lea    r12d,[rsi+0xe]
  404af1:	mov    rax,QWORD PTR [rbp+0x0]
  404af5:	sub    r12,0x8
  404af9:	add    edi,0xffffffff
  404afc:	mov    r13,QWORD PTR [r12+rax*1]
  404b00:	cmp    r13,rbx
  404b03:	je     0x404b16
  404b05:	mov    rcx,QWORD PTR [r13+0x0]
  404b09:	call   0x40215c
  404b0e:	mov    rcx,r13
  404b11:	call   0x40215c
  404b16:	cmp    edi,ebx
  404b18:	jne    0x404af1
  404b1a:	jmp    0x404cfc
  404b1f:	mov    rax,QWORD PTR [r9+0x10]
  404b23:	lea    rdx,[rip+0x48bd2]        # 0x44d6fc
  404b2a:	mov    rcx,QWORD PTR [rax]
  404b2d:	call   QWORD PTR [rip+0x48815]        # 0x44d348
  404b33:	cmp    eax,ebx
  404b35:	jne    0x404b79
  404b37:	movsxd rdi,DWORD PTR [rbp+0x8]
  404b3b:	cmp    edi,ebx
  404b3d:	mov    rsi,rdi
  404b40:	je     0x404b6f
  404b42:	shl    rsi,0x3
  404b46:	mov    rax,QWORD PTR [rbp+0x0]
  404b4a:	sub    rsi,0x8
  404b4e:	add    edi,0xffffffff
  404b51:	mov    r12,QWORD PTR [rsi+rax*1]
  404b55:	cmp    r12,rbx
  404b58:	je     0x404b6b
  404b5a:	mov    rcx,QWORD PTR [r12]
  404b5e:	call   0x40215c
  404b63:	mov    rcx,r12
  404b66:	call   0x40215c
  404b6b:	cmp    edi,ebx
  404b6d:	jne    0x404b46
  404b6f:	mov    ebx,0x3
  404b74:	jmp    0x404cfe
  404b79:	mov    rax,QWORD PTR [rbp+0x0]
  404b7d:	lea    rdx,[rip+0x48b70]        # 0x44d6f4
  404b84:	mov    rcx,QWORD PTR [rax+0x10]
  404b88:	mov    rcx,QWORD PTR [rcx]
  404b8b:	call   QWORD PTR [rip+0x487b7]        # 0x44d348
  404b91:	cmp    eax,ebx
  404b93:	jne    0x404c80
  404b99:	movsxd rsi,DWORD PTR [rbp+0x8]
  404b9d:	mov    edi,0x3
  404ba2:	cmp    esi,edi
  404ba4:	jne    0x404bdc
  404ba6:	mov    esi,edi
  404ba8:	lea    r12d,[rdi+0x15]
  404bac:	mov    rax,QWORD PTR [rbp+0x0]
  404bb0:	sub    r12,0x8
  404bb4:	add    esi,0xffffffff
  404bb7:	mov    r13,QWORD PTR [r12+rax*1]
  404bbb:	cmp    r13,rbx
  404bbe:	je     0x404bd1
  404bc0:	mov    rcx,QWORD PTR [r13+0x0]
  404bc4:	call   0x40215c
  404bc9:	mov    rcx,r13
  404bcc:	call   0x40215c
  404bd1:	cmp    esi,ebx
  404bd3:	jne    0x404bac
  404bd5:	mov    ebx,edi
  404bd7:	jmp    0x404cfe
  404bdc:	mov    rax,QWORD PTR [rbp+0x0]
  404be0:	mov    r8,QWORD PTR [rax+0x18]
  404be4:	mov    rcx,QWORD PTR [r8]
  404be7:	call   0x404534
  404bec:	cmp    al,bl
  404bee:	je     0x404c2e
  404bf0:	cmp    esi,ebx
  404bf2:	mov    rdi,rsi
  404bf5:	je     0x404c24
  404bf7:	shl    rdi,0x3
  404bfb:	mov    rax,QWORD PTR [rbp+0x0]
  404bff:	sub    rdi,0x8
  404c03:	add    esi,0xffffffff
  404c06:	mov    r12,QWORD PTR [rdi+rax*1]
  404c0a:	cmp    r12,rbx
  404c0d:	je     0x404c20
  404c0f:	mov    rcx,QWORD PTR [r12]
  404c13:	call   0x40215c
  404c18:	mov    rcx,r12
  404c1b:	call   0x40215c
  404c20:	cmp    esi,ebx
  404c22:	jne    0x404bfb
  404c24:	mov    ebx,0x4
  404c29:	jmp    0x404cfe
  404c2e:	lea    rdx,[rip+0x48ac3]        # 0x44d6f8
  404c35:	call   0x402864
  404c3a:	cmp    al,bl
  404c3c:	jne    0x404c7b
  404c3e:	movsxd rsi,DWORD PTR [rbp+0x8]
  404c42:	cmp    esi,ebx
  404c44:	mov    r12,rsi
  404c47:	je     0x404bd5
  404c49:	shl    r12,0x3
  404c4d:	mov    rax,QWORD PTR [rbp+0x0]
  404c51:	sub    r12,0x8
  404c55:	add    esi,0xffffffff
  404c58:	mov    r13,QWORD PTR [r12+rax*1]
  404c5c:	cmp    r13,rbx
  404c5f:	je     0x404c72
  404c61:	mov    rcx,QWORD PTR [r13+0x0]
  404c65:	call   0x40215c
  404c6a:	mov    rcx,r13
  404c6d:	call   0x40215c
  404c72:	cmp    esi,ebx
  404c74:	jne    0x404c4d
  404c76:	jmp    0x404bd5
  404c7b:	mov    esi,0x4
  404c80:	movsxd rdi,DWORD PTR [rbp+0x8]
  404c84:	add    esi,r12d
  404c87:	cmp    edi,esi
  404c89:	ja     0x404cc8
  404c8b:	movsxd rsi,DWORD PTR [rbp+0x8]
  404c8f:	cmp    esi,ebx
  404c91:	mov    rdi,rsi
  404c94:	mov    r12,rsi
  404c97:	je     0x404cfc
  404c99:	shl    r12,0x3
  404c9d:	mov    rax,QWORD PTR [rbp+0x0]
  404ca1:	sub    r12,0x8
  404ca5:	add    edi,0xffffffff
  404ca8:	mov    r13,QWORD PTR [r12+rax*1]
  404cac:	cmp    r13,rbx
  404caf:	je     0x404cc2
  404cb1:	mov    rcx,QWORD PTR [r13+0x0]
  404cb5:	call   0x40215c
  404cba:	mov    rcx,r13
  404cbd:	call   0x40215c
  404cc2:	cmp    edi,ebx
  404cc4:	jne    0x404c9d
  404cc6:	jmp    0x404cfc
  404cc8:	cmp    edi,ebx
  404cca:	mov    r12,rdi
  404ccd:	je     0x404cfc
  404ccf:	shl    r12,0x3
  404cd3:	mov    rax,QWORD PTR [rbp+0x0]
  404cd7:	sub    r12,0x8
  404cdb:	add    edi,0xffffffff
  404cde:	mov    r13,QWORD PTR [r12+rax*1]
  404ce2:	cmp    r13,rbx
  404ce5:	je     0x404cf8
  404ce7:	mov    rcx,QWORD PTR [r13+0x0]
  404ceb:	call   0x40215c
  404cf0:	mov    rcx,r13
  404cf3:	call   0x40215c
  404cf8:	cmp    edi,ebx
  404cfa:	jne    0x404cd3
  404cfc:	mov    ebx,esi
  404cfe:	mov    rcx,QWORD PTR [rbp+0x0]
  404d02:	call   0x40215c
  404d07:	mov    eax,ebx
  404d09:	add    rsp,0x28
  404d0d:	pop    r13
  404d0f:	pop    r12
  404d11:	pop    rdi
  404d12:	pop    rsi
  404d13:	pop    rbp
  404d14:	pop    rbx
  404d15:	ret    
  404d16:	int3   
  404d17:	int3   
  404d18:	mov    QWORD PTR [rsp+0x8],rcx
  404d1d:	push   rbx
  404d1e:	push   rbp
  404d1f:	push   rsi
  404d20:	push   rdi
  404d21:	sub    rsp,0x38
  404d25:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  404d2e:	mov    rbp,rdx
  404d31:	mov    rbx,rcx
  404d34:	mov    QWORD PTR [rcx],0x0
  404d3b:	mov    DWORD PTR [rcx+0x8],0x0
  404d42:	mov    DWORD PTR [rcx+0xc],0x0
  404d49:	mov    edi,DWORD PTR [rdx+0x8]
  404d4c:	test   edi,edi
  404d4e:	je     0x404d62
  404d50:	mov    rcx,rdi
  404d53:	shl    rcx,0x3
  404d57:	call   0x402130
  404d5c:	mov    QWORD PTR [rbx],rax
  404d5f:	mov    DWORD PTR [rbx+0xc],edi
  404d62:	test   edi,edi
  404d64:	je     0x404daa
  404d66:	xor    esi,esi
  404d68:	mov    ecx,0x10
  404d6d:	call   0x402130
  404d72:	mov    QWORD PTR [rsp+0x68],rax
  404d77:	test   rax,rax
  404d7a:	je     0x404d91
  404d7c:	mov    rcx,QWORD PTR [rbp+0x0]
  404d80:	mov    rdx,QWORD PTR [rsi+rcx*1]
  404d84:	mov    rcx,rax
  404d87:	call   0x403208
  404d8c:	mov    r11,rax
  404d8f:	jmp    0x404d94
  404d91:	xor    r11d,r11d
  404d94:	mov    ecx,DWORD PTR [rbx+0x8]
  404d97:	mov    rax,QWORD PTR [rbx]
  404d9a:	mov    QWORD PTR [rax+rcx*8],r11
  404d9e:	inc    DWORD PTR [rbx+0x8]
  404da1:	add    rsi,0x8
  404da5:	dec    rdi
  404da8:	jne    0x404d68
  404daa:	mov    rax,rbx
  404dad:	add    rsp,0x38
  404db1:	pop    rdi
  404db2:	pop    rsi
  404db3:	pop    rbp
  404db4:	pop    rbx
  404db5:	ret    
  404db6:	int3   
  404db7:	int3   
  404db8:	rex.W push rbp
  404dba:	sub    rsp,0x20
  404dbe:	mov    rbp,rdx
  404dc1:	mov    rcx,QWORD PTR [rbp+0x60]
  404dc5:	call   0x401000
  404dca:	add    rsp,0x20
  404dce:	pop    rbp
  404dcf:	ret    
  404dd0:	int3   
  404dd1:	int3   
  404dd2:	int3   
  404dd3:	int3   
  404dd4:	int3   
  404dd5:	int3   
  404dd6:	int3   
  404dd7:	int3   
  404dd8:	rex.W push rbp
  404dda:	sub    rsp,0x20
  404dde:	mov    rbp,rdx
  404de1:	mov    rcx,QWORD PTR [rbp+0x68]
  404de5:	call   0x40215c
  404dea:	add    rsp,0x20
  404dee:	pop    rbp
  404def:	ret    
  404df0:	rex.W push rbx
  404df2:	push   rbp
  404df3:	push   rsi
  404df4:	push   rdi
  404df5:	push   r12
  404df7:	sub    rsp,0x30
  404dfb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  404e04:	mov    r12,rdx
  404e07:	mov    rbx,rcx
  404e0a:	cmp    rdx,rcx
  404e0d:	jne    0x404e17
  404e0f:	mov    rax,rcx
  404e12:	jmp    0x404ee0
  404e17:	movsxd rdi,DWORD PTR [rcx+0x8]
  404e1b:	mov    rsi,rdi
  404e1e:	test   edi,edi
  404e20:	je     0x404e4e
  404e22:	shl    rsi,0x3
  404e26:	add    edi,0xffffffff
  404e29:	sub    rsi,0x8
  404e2d:	mov    rax,QWORD PTR [rbx]
  404e30:	mov    rbp,QWORD PTR [rsi+rax*1]
  404e34:	test   rbp,rbp
  404e37:	je     0x404e4a
  404e39:	mov    rcx,QWORD PTR [rbp+0x0]
  404e3d:	call   0x40215c
  404e42:	mov    rcx,rbp
  404e45:	call   0x40215c
  404e4a:	test   edi,edi
  404e4c:	jne    0x404e26
  404e4e:	mov    DWORD PTR [rbx+0x8],0x0
  404e55:	mov    edi,DWORD PTR [r12+0x8]
  404e5a:	cmp    edi,DWORD PTR [rbx+0xc]
  404e5d:	jbe    0x404e95
  404e5f:	mov    rcx,rdi
  404e62:	shl    rcx,0x3
  404e66:	call   0x402130
  404e6b:	mov    rsi,rax
  404e6e:	cmp    DWORD PTR [rbx+0x8],0x0
  404e72:	je     0x404e87
  404e74:	mov    r8d,DWORD PTR [rbx+0x8]
  404e78:	shl    r8,0x3
  404e7c:	mov    rdx,QWORD PTR [rbx]
  404e7f:	mov    rcx,rax
  404e82:	call   0x44b480
  404e87:	mov    rcx,QWORD PTR [rbx]
  404e8a:	call   0x40215c
  404e8f:	mov    QWORD PTR [rbx],rsi
  404e92:	mov    DWORD PTR [rbx+0xc],edi
  404e95:	test   edi,edi
  404e97:	je     0x404edd
  404e99:	xor    esi,esi
  404e9b:	mov    ecx,0x10
  404ea0:	call   0x402130
  404ea5:	mov    QWORD PTR [rsp+0x60],rax
  404eaa:	test   rax,rax
  404ead:	je     0x404ec4
  404eaf:	mov    rcx,QWORD PTR [r12]
  404eb3:	mov    rdx,QWORD PTR [rsi+rcx*1]
  404eb7:	mov    rcx,rax
  404eba:	call   0x403208
  404ebf:	mov    r11,rax
  404ec2:	jmp    0x404ec7
  404ec4:	xor    r11d,r11d
  404ec7:	mov    ecx,DWORD PTR [rbx+0x8]
  404eca:	mov    rax,QWORD PTR [rbx]
  404ecd:	mov    QWORD PTR [rax+rcx*8],r11
  404ed1:	inc    DWORD PTR [rbx+0x8]
  404ed4:	add    rsi,0x8
  404ed8:	dec    rdi
  404edb:	jne    0x404e9b
  404edd:	mov    rax,rbx
  404ee0:	add    rsp,0x30
  404ee4:	pop    r12
  404ee6:	pop    rdi
  404ee7:	pop    rsi
  404ee8:	pop    rbp
  404ee9:	pop    rbx
  404eea:	ret    
  404eeb:	int3   
  404eec:	int3   
  404eed:	int3   
  404eee:	int3   
  404eef:	int3   
  404ef0:	rex.W push rbp
  404ef2:	sub    rsp,0x20
  404ef6:	mov    rbp,rdx
  404ef9:	mov    rcx,QWORD PTR [rbp+0x60]
  404efd:	call   0x40215c
  404f02:	add    rsp,0x20
  404f06:	pop    rbp
  404f07:	ret    
  404f08:	mov    QWORD PTR [rsp+0x8],rcx
  404f0d:	push   rbx
  404f0e:	push   rbp
  404f0f:	push   rsi
  404f10:	push   rdi
  404f11:	push   r12
  404f13:	push   r13
  404f15:	sub    rsp,0x38
  404f19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  404f22:	mov    r13,rdx
  404f25:	mov    rdi,rcx
  404f28:	mov    QWORD PTR [rcx],0x0
  404f2f:	mov    DWORD PTR [rcx+0x8],0x0
  404f36:	mov    DWORD PTR [rcx+0xc],0x0
  404f3d:	mov    ebx,DWORD PTR [rdx+0x8]
  404f40:	test   ebx,ebx
  404f42:	je     0x404f56
  404f44:	mov    rcx,rbx
  404f47:	shl    rcx,0x3
  404f4b:	call   0x402130
  404f50:	mov    QWORD PTR [rdi],rax
  404f53:	mov    DWORD PTR [rdi+0xc],ebx
  404f56:	test   ebx,ebx
  404f58:	je     0x404fbd
  404f5a:	xor    ebp,ebp
  404f5c:	mov    r12,rbx
  404f5f:	mov    ecx,0x18
  404f64:	call   0x402130
  404f69:	mov    rsi,rax
  404f6c:	mov    QWORD PTR [rsp+0x78],rax
  404f71:	test   rax,rax
  404f74:	je     0x404fa5
  404f76:	mov    rcx,QWORD PTR [r13+0x0]
  404f7a:	mov    rbx,QWORD PTR [rcx+rbp*1]
  404f7e:	mov    rdx,rbx
  404f81:	mov    rcx,rax
  404f84:	call   0x404d18
  404f89:	mov    r11b,BYTE PTR [rbx+0x10]
  404f8d:	mov    BYTE PTR [rsi+0x10],r11b
  404f91:	mov    cl,BYTE PTR [rbx+0x11]
  404f94:	mov    BYTE PTR [rsi+0x11],cl
  404f97:	mov    al,BYTE PTR [rbx+0x12]
  404f9a:	mov    BYTE PTR [rsi+0x12],al
  404f9d:	mov    al,BYTE PTR [rbx+0x13]
  404fa0:	mov    BYTE PTR [rsi+0x13],al
  404fa3:	jmp    0x404fa7
  404fa5:	xor    esi,esi
  404fa7:	mov    ecx,DWORD PTR [rdi+0x8]
  404faa:	mov    rax,QWORD PTR [rdi]
  404fad:	mov    QWORD PTR [rax+rcx*8],rsi
  404fb1:	inc    DWORD PTR [rdi+0x8]
  404fb4:	add    rbp,0x8
  404fb8:	dec    r12
  404fbb:	jne    0x404f5f
  404fbd:	mov    rax,rdi
  404fc0:	add    rsp,0x38
  404fc4:	pop    r13
  404fc6:	pop    r12
  404fc8:	pop    rdi
  404fc9:	pop    rsi
  404fca:	pop    rbp
  404fcb:	pop    rbx
  404fcc:	ret    
  404fcd:	int3   
  404fce:	int3   
  404fcf:	int3   
  404fd0:	int3   
  404fd1:	int3   
  404fd2:	int3   
  404fd3:	int3   
  404fd4:	int3   
  404fd5:	int3   
  404fd6:	int3   
  404fd7:	int3   
  404fd8:	rex.W push rbp
  404fda:	sub    rsp,0x20
  404fde:	mov    rbp,rdx
  404fe1:	mov    rcx,QWORD PTR [rbp+0x70]
  404fe5:	call   0x401000
  404fea:	add    rsp,0x20
  404fee:	pop    rbp
  404fef:	ret    
  404ff0:	int3   
  404ff1:	int3   
  404ff2:	int3   
  404ff3:	int3   
  404ff4:	int3   
  404ff5:	int3   
  404ff6:	int3   
  404ff7:	int3   
  404ff8:	rex.W push rbp
  404ffa:	sub    rsp,0x20
  404ffe:	mov    rbp,rdx
  405001:	mov    rcx,QWORD PTR [rbp+0x78]
  405005:	call   0x40215c
  40500a:	add    rsp,0x20
  40500e:	pop    rbp
  40500f:	ret    
  405010:	rex.W push rbx
  405012:	push   rbp
  405013:	push   rsi
  405014:	push   rdi
  405015:	push   r12
  405017:	push   r13
  405019:	sub    rsp,0x48
  40501d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405026:	mov    rsi,rdx
  405029:	mov    r13,rcx
  40502c:	movsxd rdi,DWORD PTR [rdx+0x8]
  405030:	mov    rbp,rdi
  405033:	xor    ebx,ebx
  405035:	cmp    edi,ebx
  405037:	je     0x405065
  405039:	shl    rbp,0x3
  40503d:	add    edi,0xffffffff
  405040:	sub    rbp,0x8
  405044:	mov    rax,QWORD PTR [rsi]
  405047:	mov    r12,QWORD PTR [rax+rbp*1]
  40504b:	cmp    r12,rbx
  40504e:	je     0x405061
  405050:	mov    rcx,QWORD PTR [r12]
  405054:	call   0x40215c
  405059:	mov    rcx,r12
  40505c:	call   0x40215c
  405061:	cmp    edi,ebx
  405063:	jne    0x40503d
  405065:	mov    DWORD PTR [rsi+0x8],ebx
  405068:	mov    edi,DWORD PTR [r13+0x8]
  40506c:	cmp    edi,ebx
  40506e:	je     0x405149
  405074:	lea    rcx,[rsp+0x28]
  405079:	call   0x403150
  40507e:	nop
  40507f:	mov    eax,ebx
  405081:	mov    ebp,ebx
  405083:	cmp    edi,ebx
  405085:	jbe    0x4050f3
  405087:	mov    r12,rbx
  40508a:	mov    rcx,QWORD PTR [r13+0x0]
  40508e:	cmp    WORD PTR [r12+rcx*1],0x5c
  405094:	je     0x40509e
  405096:	cmp    WORD PTR [r12+rcx*1],0x2f
  40509c:	jne    0x4050e9
  40509e:	mov    r8d,ebp
  4050a1:	sub    r8d,eax
  4050a4:	lea    rdx,[rcx+rax*2]
  4050a8:	lea    rcx,[rsp+0x28]
  4050ad:	call   0x403488
  4050b2:	mov    ecx,0x10
  4050b7:	call   0x402130
  4050bc:	mov    QWORD PTR [rsp+0x80],rax
  4050c4:	cmp    rax,rbx
  4050c7:	je     0x4050d8
  4050c9:	lea    rdx,[rsp+0x28]
  4050ce:	mov    rcx,rax
  4050d1:	call   0x403208
  4050d6:	jmp    0x4050db
  4050d8:	mov    rax,rbx
  4050db:	mov    rdx,rax
  4050de:	mov    rcx,rsi
  4050e1:	call   0x4010c8
  4050e6:	lea    eax,[rbp+0x1]
  4050e9:	inc    ebp
  4050eb:	add    r12,0x2
  4050ef:	cmp    ebp,edi
  4050f1:	jb     0x40508a
  4050f3:	sub    edi,eax
  4050f5:	mov    edx,eax
  4050f7:	mov    rax,QWORD PTR [r13+0x0]
  4050fb:	lea    rdx,[rax+rdx*2]
  4050ff:	mov    r8d,edi
  405102:	lea    rcx,[rsp+0x28]
  405107:	call   0x403488
  40510c:	mov    ecx,0x10
  405111:	call   0x402130
  405116:	mov    QWORD PTR [rsp+0x80],rax
  40511e:	cmp    rax,rbx
  405121:	je     0x405133
  405123:	lea    rdx,[rsp+0x28]
  405128:	mov    rcx,rax
  40512b:	call   0x403208
  405130:	mov    rbx,rax
  405133:	mov    rdx,rbx
  405136:	mov    rcx,rsi
  405139:	call   0x4010c8
  40513e:	nop
  40513f:	mov    rcx,QWORD PTR [rsp+0x28]
  405144:	call   0x40215c
  405149:	add    rsp,0x48
  40514d:	pop    r13
  40514f:	pop    r12
  405151:	pop    rdi
  405152:	pop    rsi
  405153:	pop    rbp
  405154:	pop    rbx
  405155:	ret    
  405156:	int3   
  405157:	int3   
  405158:	int3   
  405159:	int3   
  40515a:	int3   
  40515b:	int3   
  40515c:	int3   
  40515d:	int3   
  40515e:	int3   
  40515f:	int3   
  405160:	rex.W push rbp
  405162:	sub    rsp,0x20
  405166:	mov    rbp,rdx
  405169:	lea    rcx,[rbp+0x28]
  40516d:	call   0x401000
  405172:	add    rsp,0x20
  405176:	pop    rbp
  405177:	ret    
  405178:	int3   
  405179:	int3   
  40517a:	int3   
  40517b:	int3   
  40517c:	int3   
  40517d:	int3   
  40517e:	int3   
  40517f:	int3   
  405180:	rex.W push rbp
  405182:	sub    rsp,0x20
  405186:	mov    rbp,rdx
  405189:	mov    rcx,QWORD PTR [rbp+0x80]
  405190:	call   0x40215c
  405195:	add    rsp,0x20
  405199:	pop    rbp
  40519a:	ret    
  40519b:	int3   
  40519c:	int3   
  40519d:	int3   
  40519e:	int3   
  40519f:	int3   
  4051a0:	rex.W push rbp
  4051a2:	sub    rsp,0x20
  4051a6:	mov    rbp,rdx
  4051a9:	mov    rcx,QWORD PTR [rbp+0x80]
  4051b0:	call   0x40215c
  4051b5:	add    rsp,0x20
  4051b9:	pop    rbp
  4051ba:	ret    
  4051bb:	int3   
  4051bc:	mov    BYTE PTR [rsp+0x18],r8b
  4051c1:	push   rbx
  4051c2:	push   rbp
  4051c3:	push   rsi
  4051c4:	push   rdi
  4051c5:	sub    rsp,0x48
  4051c9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
  4051d2:	mov    rsi,r9
  4051d5:	mov    bpl,r8b
  4051d8:	mov    rbx,rdx
  4051db:	mov    rdi,rcx
  4051de:	mov    r9b,r8b
  4051e1:	mov    r8,rdx
  4051e4:	xor    edx,edx
  4051e6:	call   0x404894
  4051eb:	test   al,al
  4051ed:	je     0x4051f9
  4051ef:	mov    BYTE PTR [rsi],0x0
  4051f2:	mov    al,0x1
  4051f4:	jmp    0x405330
  4051f9:	mov    BYTE PTR [rsi],0x1
  4051fc:	mov    r9b,bpl
  4051ff:	mov    r8,rbx
  405202:	mov    dl,0x1
  405204:	mov    rcx,rdi
  405207:	call   0x404894
  40520c:	mov    bpl,al
  40520f:	cmp    DWORD PTR [rbx+0x8],0x1
  405213:	jbe    0x405330
  405219:	mov    rax,QWORD PTR [rbx]
  40521c:	mov    rdx,QWORD PTR [rax]
  40521f:	mov    rcx,rdi
  405222:	call   0x40476c
  405227:	mov    DWORD PTR [rsp+0x20],eax
  40522b:	test   eax,eax
  40522d:	js     0x40532d
  405233:	mov    rdx,rbx
  405236:	lea    rcx,[rsp+0x30]
  40523b:	call   0x404d18
  405240:	nop
  405241:	mov    rcx,QWORD PTR [rsp+0x30]
  405246:	mov    rbx,QWORD PTR [rcx]
  405249:	test   rbx,rbx
  40524c:	je     0x405263
  40524e:	mov    rcx,QWORD PTR [rbx]
  405251:	call   0x40215c
  405256:	mov    rcx,rbx
  405259:	call   0x40215c
  40525e:	mov    rcx,QWORD PTR [rsp+0x30]
  405263:	mov    r8d,DWORD PTR [rsp+0x38]
  405268:	add    r8d,0xffffffff
  40526c:	shl    r8,0x3
  405270:	lea    rdx,[rcx+0x8]
  405274:	call   0x44b774
  405279:	add    DWORD PTR [rsp+0x38],0xffffffff
  40527e:	mov    ecx,DWORD PTR [rsp+0x20]
  405282:	mov    rax,QWORD PTR [rdi+0x18]
  405286:	mov    r9,rsi
  405289:	mov    r8b,BYTE PTR [rsp+0x80]
  405291:	lea    rdx,[rsp+0x30]
  405296:	mov    rcx,QWORD PTR [rax+rcx*8]
  40529a:	call   0x4051bc
  40529f:	test   al,al
  4052a1:	je     0x4052ea
  4052a3:	movsxd rbx,DWORD PTR [rsp+0x38]
  4052a8:	mov    rdi,rbx
  4052ab:	test   ebx,ebx
  4052ad:	je     0x4052dc
  4052af:	shl    rdi,0x3
  4052b3:	add    ebx,0xffffffff
  4052b6:	sub    rdi,0x8
  4052ba:	mov    rax,QWORD PTR [rsp+0x30]
  4052bf:	mov    rsi,QWORD PTR [rdi+rax*1]
  4052c3:	test   rsi,rsi
  4052c6:	je     0x4052d8
  4052c8:	mov    rcx,QWORD PTR [rsi]
  4052cb:	call   0x40215c
  4052d0:	mov    rcx,rsi
  4052d3:	call   0x40215c
  4052d8:	test   ebx,ebx
  4052da:	jne    0x4052b3
  4052dc:	mov    rcx,QWORD PTR [rsp+0x30]
  4052e1:	call   0x40215c
  4052e6:	mov    al,0x1
  4052e8:	jmp    0x405330
  4052ea:	movsxd rbx,DWORD PTR [rsp+0x38]
  4052ef:	mov    rdi,rbx
  4052f2:	test   ebx,ebx
  4052f4:	je     0x405323
  4052f6:	shl    rdi,0x3
  4052fa:	add    ebx,0xffffffff
  4052fd:	sub    rdi,0x8
  405301:	mov    rax,QWORD PTR [rsp+0x30]
  405306:	mov    rsi,QWORD PTR [rdi+rax*1]
  40530a:	test   rsi,rsi
  40530d:	je     0x40531f
  40530f:	mov    rcx,QWORD PTR [rsi]
  405312:	call   0x40215c
  405317:	mov    rcx,rsi
  40531a:	call   0x40215c
  40531f:	test   ebx,ebx
  405321:	jne    0x4052fa
  405323:	mov    rcx,QWORD PTR [rsp+0x30]
  405328:	call   0x40215c
  40532d:	mov    al,bpl
  405330:	add    rsp,0x48
  405334:	pop    rdi
  405335:	pop    rsi
  405336:	pop    rbp
  405337:	pop    rbx
  405338:	ret    
  405339:	int3   
  40533a:	int3   
  40533b:	int3   
  40533c:	rex.W push rbp
  40533e:	sub    rsp,0x20
  405342:	mov    rbp,rdx
  405345:	lea    rcx,[rbp+0x30]
  405349:	call   0x4047cc
  40534e:	add    rsp,0x20
  405352:	pop    rbp
  405353:	ret    
  405354:	rex.W push rbx
  405356:	push   rbp
  405357:	push   rsi
  405358:	push   rdi
  405359:	sub    rsp,0x38
  40535d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405366:	mov    sil,r9b
  405369:	mov    rdi,r8
  40536c:	mov    bpl,dl
  40536f:	mov    rbx,rcx
  405372:	call   0x404894
  405377:	test   al,al
  405379:	jne    0x4053ca
  40537b:	cmp    QWORD PTR [rbx],0x0
  40537f:	je     0x4053ce
  405381:	mov    ecx,0x10
  405386:	call   0x402130
  40538b:	mov    QWORD PTR [rsp+0x28],rax
  405390:	test   rax,rax
  405393:	je     0x4053a3
  405395:	lea    rdx,[rbx+0x8]
  405399:	mov    rcx,rax
  40539c:	call   0x403208
  4053a1:	jmp    0x4053a5
  4053a3:	xor    eax,eax
  4053a5:	mov    r8,rax
  4053a8:	xor    edx,edx
  4053aa:	mov    rcx,rdi
  4053ad:	call   0x40456c
  4053b2:	mov    rbx,QWORD PTR [rbx]
  4053b5:	mov    r9b,sil
  4053b8:	mov    r8,rdi
  4053bb:	mov    dl,bpl
  4053be:	mov    rcx,rbx
  4053c1:	call   0x404894
  4053c6:	test   al,al
  4053c8:	je     0x40537b
  4053ca:	mov    al,0x1
  4053cc:	jmp    0x4053d0
  4053ce:	xor    al,al
  4053d0:	add    rsp,0x38
  4053d4:	pop    rdi
  4053d5:	pop    rsi
  4053d6:	pop    rbp
  4053d7:	pop    rbx
  4053d8:	ret    
  4053d9:	int3   
  4053da:	int3   
  4053db:	int3   
  4053dc:	int3   
  4053dd:	int3   
  4053de:	int3   
  4053df:	int3   
  4053e0:	int3   
  4053e1:	int3   
  4053e2:	int3   
  4053e3:	int3   
  4053e4:	rex.W push rbp
  4053e6:	sub    rsp,0x20
  4053ea:	mov    rbp,rdx
  4053ed:	mov    rcx,QWORD PTR [rbp+0x28]
  4053f1:	call   0x40215c
  4053f6:	add    rsp,0x20
  4053fa:	pop    rbp
  4053fb:	ret    
  4053fc:	rex.W push rbx
  4053fe:	push   rbp
  4053ff:	push   rsi
  405400:	push   rdi
  405401:	push   r12
  405403:	sub    rsp,0x30
  405407:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405410:	mov    dil,r9b
  405413:	mov    rsi,r8
  405416:	mov    bpl,dl
  405419:	mov    r12,rcx
  40541c:	mov    ecx,0x18
  405421:	call   0x402130
  405426:	mov    rbx,rax
  405429:	mov    QWORD PTR [rsp+0x60],rax
  40542e:	test   rax,rax
  405431:	je     0x405449
  405433:	mov    rcx,rax
  405436:	call   0x403150
  40543b:	mov    BYTE PTR [rbx+0x10],0x1
  40543f:	mov    BYTE PTR [rbx+0x11],0x0
  405443:	mov    BYTE PTR [rbx+0x12],0x1
  405447:	jmp    0x40544b
  405449:	xor    ebx,ebx
  40544b:	lea    rcx,[r12+0x10]
  405450:	mov    rdx,rbx
  405453:	call   0x4010c8
  405458:	mov    rdx,rsi
  40545b:	mov    rcx,rbx
  40545e:	call   0x4032f8
  405463:	mov    BYTE PTR [rbx+0x10],bpl
  405467:	mov    BYTE PTR [rbx+0x11],dil
  40546b:	mov    al,BYTE PTR [rsp+0x80]
  405472:	mov    BYTE PTR [rbx+0x12],al
  405475:	add    rsp,0x30
  405479:	pop    r12
  40547b:	pop    rdi
  40547c:	pop    rsi
  40547d:	pop    rbp
  40547e:	pop    rbx
  40547f:	ret    
  405480:	int3   
  405481:	int3   
  405482:	int3   
  405483:	int3   
  405484:	int3   
  405485:	int3   
  405486:	int3   
  405487:	int3   
  405488:	int3   
  405489:	int3   
  40548a:	int3   
  40548b:	int3   
  40548c:	rex.W push rbp
  40548e:	sub    rsp,0x20
  405492:	mov    rbp,rdx
  405495:	mov    rcx,QWORD PTR [rbp+0x60]
  405499:	call   0x40215c
  40549e:	add    rsp,0x20
  4054a2:	pop    rbp
  4054a3:	ret    
  4054a4:	rex.W push rbx
  4054a6:	push   rbp
  4054a7:	push   rsi
  4054a8:	push   rdi
  4054a9:	push   r12
  4054ab:	push   r13
  4054ad:	sub    rsp,0x38
  4054b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4054ba:	mov    r13,rdx
  4054bd:	mov    rdi,rcx
  4054c0:	mov    ebx,DWORD PTR [rdx+0x8]
  4054c3:	mov    esi,DWORD PTR [rcx+0x8]
  4054c6:	add    esi,ebx
  4054c8:	cmp    esi,DWORD PTR [rcx+0xc]
  4054cb:	jbe    0x405502
  4054cd:	mov    ecx,esi
  4054cf:	shl    rcx,0x3
  4054d3:	call   0x402130
  4054d8:	mov    rbp,rax
  4054db:	cmp    DWORD PTR [rdi+0x8],0x0
  4054df:	je     0x4054f4
  4054e1:	mov    r8d,DWORD PTR [rdi+0x8]
  4054e5:	shl    r8,0x3
  4054e9:	mov    rdx,QWORD PTR [rdi]
  4054ec:	mov    rcx,rax
  4054ef:	call   0x44b480
  4054f4:	mov    rcx,QWORD PTR [rdi]
  4054f7:	call   0x40215c
  4054fc:	mov    QWORD PTR [rdi],rbp
  4054ff:	mov    DWORD PTR [rdi+0xc],esi
  405502:	test   ebx,ebx
  405504:	je     0x405569
  405506:	xor    ebp,ebp
  405508:	mov    r12,rbx
  40550b:	mov    ecx,0x18
  405510:	call   0x402130
  405515:	mov    rsi,rax
  405518:	mov    QWORD PTR [rsp+0x70],rax
  40551d:	test   rax,rax
  405520:	je     0x405551
  405522:	mov    rcx,QWORD PTR [r13+0x0]
  405526:	mov    rbx,QWORD PTR [rcx+rbp*1]
  40552a:	mov    rdx,rbx
  40552d:	mov    rcx,rax
  405530:	call   0x404d18
  405535:	mov    r11b,BYTE PTR [rbx+0x10]
  405539:	mov    BYTE PTR [rsi+0x10],r11b
  40553d:	mov    cl,BYTE PTR [rbx+0x11]
  405540:	mov    BYTE PTR [rsi+0x11],cl
  405543:	mov    al,BYTE PTR [rbx+0x12]
  405546:	mov    BYTE PTR [rsi+0x12],al
  405549:	mov    al,BYTE PTR [rbx+0x13]
  40554c:	mov    BYTE PTR [rsi+0x13],al
  40554f:	jmp    0x405553
  405551:	xor    esi,esi
  405553:	mov    ecx,DWORD PTR [rdi+0x8]
  405556:	mov    rax,QWORD PTR [rdi]
  405559:	mov    QWORD PTR [rax+rcx*8],rsi
  40555d:	inc    DWORD PTR [rdi+0x8]
  405560:	add    rbp,0x8
  405564:	dec    r12
  405567:	jne    0x40550b
  405569:	mov    rax,rdi
  40556c:	add    rsp,0x38
  405570:	pop    r13
  405572:	pop    r12
  405574:	pop    rdi
  405575:	pop    rsi
  405576:	pop    rbp
  405577:	pop    rbx
  405578:	ret    
  405579:	int3   
  40557a:	int3   
  40557b:	int3   
  40557c:	int3   
  40557d:	int3   
  40557e:	int3   
  40557f:	int3   
  405580:	int3   
  405581:	int3   
  405582:	int3   
  405583:	int3   
  405584:	rex.W push rbp
  405586:	sub    rsp,0x20
  40558a:	mov    rbp,rdx
  40558d:	mov    rcx,QWORD PTR [rbp+0x70]
  405591:	call   0x40215c
  405596:	add    rsp,0x20
  40559a:	pop    rbp
  40559b:	ret    
  40559c:	rex.W push rbx
  40559e:	push   rsi
  40559f:	push   rdi
  4055a0:	sub    rsp,0x30
  4055a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4055ad:	mov    rdi,rdx
  4055b0:	mov    rsi,rcx
  4055b3:	mov    ecx,0x18
  4055b8:	call   0x402130
  4055bd:	mov    rbx,rax
  4055c0:	mov    QWORD PTR [rsp+0x60],rax
  4055c5:	test   rax,rax
  4055c8:	je     0x4055f1
  4055ca:	mov    rdx,rdi
  4055cd:	mov    rcx,rax
  4055d0:	call   0x404d18
  4055d5:	mov    r11b,BYTE PTR [rdi+0x10]
  4055d9:	mov    BYTE PTR [rbx+0x10],r11b
  4055dd:	mov    al,BYTE PTR [rdi+0x11]
  4055e0:	mov    BYTE PTR [rbx+0x11],al
  4055e3:	mov    al,BYTE PTR [rdi+0x12]
  4055e6:	mov    BYTE PTR [rbx+0x12],al
  4055e9:	mov    al,BYTE PTR [rdi+0x13]
  4055ec:	mov    BYTE PTR [rbx+0x13],al
  4055ef:	jmp    0x4055f3
  4055f1:	xor    ebx,ebx
  4055f3:	mov    rdx,rbx
  4055f6:	mov    rcx,rsi
  4055f9:	add    rsp,0x30
  4055fd:	pop    rdi
  4055fe:	pop    rsi
  4055ff:	pop    rbx
  405600:	jmp    0x4010c8
  405605:	int3   
  405606:	int3   
  405607:	int3   
  405608:	int3   
  405609:	int3   
  40560a:	int3   
  40560b:	int3   
  40560c:	rex.W push rbp
  40560e:	sub    rsp,0x20
  405612:	mov    rbp,rdx
  405615:	mov    rcx,QWORD PTR [rbp+0x60]
  405619:	call   0x40215c
  40561e:	add    rsp,0x20
  405622:	pop    rbp
  405623:	ret    
  405624:	rex.W push rbx
  405626:	push   rbp
  405627:	push   rsi
  405628:	push   rdi
  405629:	push   r12
  40562b:	push   r13
  40562d:	push   r14
  40562f:	sub    rsp,0x20
  405633:	movsxd rbx,DWORD PTR [rcx+0x8]
  405637:	mov    rdi,rcx
  40563a:	test   ebx,ebx
  40563c:	je     0x4056a3
  40563e:	mov    r12,rbx
  405641:	shl    r12,0x3
  405645:	mov    rax,QWORD PTR [rdi]
  405648:	sub    r12,0x8
  40564c:	add    ebx,0xffffffff
  40564f:	mov    rsi,QWORD PTR [r12+rax*1]
  405653:	test   rsi,rsi
  405656:	je     0x40569f
  405658:	movsxd rbp,DWORD PTR [rsi+0x8]
  40565c:	test   ebp,ebp
  40565e:	je     0x40568f
  405660:	mov    r14,rbp
  405663:	shl    r14,0x3
  405667:	mov    rax,QWORD PTR [rsi]
  40566a:	sub    r14,0x8
  40566e:	add    ebp,0xffffffff
  405671:	mov    r13,QWORD PTR [r14+rax*1]
  405675:	test   r13,r13
  405678:	je     0x40568b
  40567a:	mov    rcx,QWORD PTR [r13+0x0]
  40567e:	call   0x40215c
  405683:	mov    rcx,r13
  405686:	call   0x40215c
  40568b:	test   ebp,ebp
  40568d:	jne    0x405667
  40568f:	mov    rcx,QWORD PTR [rsi]
  405692:	call   0x40215c
  405697:	mov    rcx,rsi
  40569a:	call   0x40215c
  40569f:	test   ebx,ebx
  4056a1:	jne    0x405645
  4056a3:	mov    rcx,QWORD PTR [rdi]
  4056a6:	add    rsp,0x20
  4056aa:	pop    r14
  4056ac:	pop    r13
  4056ae:	pop    r12
  4056b0:	pop    rdi
  4056b1:	pop    rsi
  4056b2:	pop    rbp
  4056b3:	pop    rbx
  4056b4:	jmp    0x40215c
  4056b9:	int3   
  4056ba:	int3   
  4056bb:	int3   
  4056bc:	mov    QWORD PTR [rsp+0x8],rcx
  4056c1:	push   rbx
  4056c2:	sub    rsp,0x30
  4056c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4056cf:	mov    rbx,rcx
  4056d2:	add    rcx,0x38
  4056d6:	call   0x405624
  4056db:	lea    rcx,[rbx+0x28]
  4056df:	call   0x405624
  4056e4:	lea    rcx,[rbx+0x18]
  4056e8:	call   0x4057b4
  4056ed:	nop
  4056ee:	mov    rcx,QWORD PTR [rbx+0x8]
  4056f2:	add    rsp,0x30
  4056f6:	pop    rbx
  4056f7:	jmp    0x40215c
  4056fc:	rex.W push rbp
  4056fe:	sub    rsp,0x20
  405702:	mov    rbp,rdx
  405705:	mov    rcx,QWORD PTR [rbp+0x40]
  405709:	add    rcx,0x8
  40570d:	call   0x401000
  405712:	add    rsp,0x20
  405716:	pop    rbp
  405717:	ret    
  405718:	mov    QWORD PTR [rsp+0x8],rcx
  40571d:	push   rbx
  40571e:	push   rdi
  40571f:	sub    rsp,0x38
  405723:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40572c:	mov    rdi,rcx
  40572f:	lea    rbx,[rcx+0x10]
  405733:	mov    QWORD PTR [rsp+0x58],rbx
  405738:	lea    rcx,[rbx+0x38]
  40573c:	call   0x405624
  405741:	lea    rcx,[rbx+0x28]
  405745:	call   0x405624
  40574a:	lea    rcx,[rbx+0x18]
  40574e:	call   0x4057b4
  405753:	nop
  405754:	mov    rcx,QWORD PTR [rbx+0x8]
  405758:	call   0x40215c
  40575d:	nop
  40575e:	mov    rcx,QWORD PTR [rdi]
  405761:	add    rsp,0x38
  405765:	pop    rdi
  405766:	pop    rbx
  405767:	jmp    0x40215c
  40576c:	int3   
  40576d:	int3   
  40576e:	int3   
  40576f:	int3   
  405770:	int3   
  405771:	int3   
  405772:	int3   
  405773:	int3   
  405774:	int3   
  405775:	int3   
  405776:	int3   
  405777:	int3   
  405778:	rex.W push rbp
  40577a:	sub    rsp,0x20
  40577e:	mov    rbp,rdx
  405781:	mov    rcx,QWORD PTR [rbp+0x50]
  405785:	call   0x401000
  40578a:	add    rsp,0x20
  40578e:	pop    rbp
  40578f:	ret    
  405790:	int3   
  405791:	int3   
  405792:	int3   
  405793:	int3   
  405794:	int3   
  405795:	int3   
  405796:	int3   
  405797:	int3   
  405798:	rex.W push rbp
  40579a:	sub    rsp,0x20
  40579e:	mov    rbp,rdx
  4057a1:	mov    rcx,QWORD PTR [rbp+0x58]
  4057a5:	add    rcx,0x8
  4057a9:	call   0x401000
  4057ae:	add    rsp,0x20
  4057b2:	pop    rbp
  4057b3:	ret    
  4057b4:	mov    QWORD PTR [rsp+0x8],rcx
  4057b9:	push   rbx
  4057ba:	push   rbp
  4057bb:	push   rsi
  4057bc:	push   rdi
  4057bd:	sub    rsp,0x38
  4057c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4057ca:	mov    rdi,rcx
  4057cd:	movsxd rbx,DWORD PTR [rcx+0x8]
  4057d1:	mov    rbp,rbx
  4057d4:	test   ebx,ebx
  4057d6:	je     0x405825
  4057d8:	shl    rbp,0x3
  4057dc:	add    ebx,0xffffffff
  4057df:	sub    rbp,0x8
  4057e3:	mov    rax,QWORD PTR [rdi]
  4057e6:	mov    rsi,QWORD PTR [rax+rbp*1]
  4057ea:	mov    QWORD PTR [rsp+0x68],rsi
  4057ef:	test   rsi,rsi
  4057f2:	je     0x405821
  4057f4:	lea    rcx,[rsi+0x38]
  4057f8:	call   0x405624
  4057fd:	lea    rcx,[rsi+0x28]
  405801:	call   0x405624
  405806:	lea    rcx,[rsi+0x18]
  40580a:	call   0x4057b4
  40580f:	nop
  405810:	mov    rcx,QWORD PTR [rsi+0x8]
  405814:	call   0x40215c
  405819:	mov    rcx,rsi
  40581c:	call   0x40215c
  405821:	test   ebx,ebx
  405823:	jne    0x4057dc
  405825:	mov    rcx,QWORD PTR [rdi]
  405828:	add    rsp,0x38
  40582c:	pop    rdi
  40582d:	pop    rsi
  40582e:	pop    rbp
  40582f:	pop    rbx
  405830:	jmp    0x40215c
  405835:	int3   
  405836:	int3   
  405837:	int3   
  405838:	int3   
  405839:	int3   
  40583a:	int3   
  40583b:	int3   
  40583c:	int3   
  40583d:	int3   
  40583e:	int3   
  40583f:	int3   
  405840:	int3   
  405841:	int3   
  405842:	int3   
  405843:	int3   
  405844:	rex.W push rbp
  405846:	sub    rsp,0x20
  40584a:	mov    rbp,rdx
  40584d:	mov    rcx,QWORD PTR [rbp+0x60]
  405851:	call   0x401000
  405856:	add    rsp,0x20
  40585a:	pop    rbp
  40585b:	ret    
  40585c:	int3   
  40585d:	int3   
  40585e:	int3   
  40585f:	int3   
  405860:	int3   
  405861:	int3   
  405862:	int3   
  405863:	int3   
  405864:	rex.W push rbp
  405866:	sub    rsp,0x20
  40586a:	mov    rbp,rdx
  40586d:	mov    rcx,QWORD PTR [rbp+0x68]
  405871:	add    rcx,0x8
  405875:	call   0x401000
  40587a:	add    rsp,0x20
  40587e:	pop    rbp
  40587f:	ret    
  405880:	mov    QWORD PTR [rsp+0x8],rcx
  405885:	push   rbx
  405886:	push   rsi
  405887:	push   rdi
  405888:	sub    rsp,0x30
  40588c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405895:	mov    rdi,rdx
  405898:	mov    rsi,rcx
  40589b:	call   0x403208
  4058a0:	nop
  4058a1:	lea    rbx,[rsi+0x10]
  4058a5:	mov    QWORD PTR [rsp+0x58],rbx
  4058aa:	mov    rax,QWORD PTR [rdi+0x10]
  4058ae:	mov    QWORD PTR [rbx],rax
  4058b1:	lea    rdx,[rdi+0x18]
  4058b5:	lea    rcx,[rbx+0x8]
  4058b9:	call   0x403208
  4058be:	nop
  4058bf:	lea    rdx,[rdi+0x28]
  4058c3:	lea    rcx,[rbx+0x18]
  4058c7:	call   0x40597c
  4058cc:	nop
  4058cd:	lea    rdx,[rdi+0x38]
  4058d1:	lea    rcx,[rbx+0x28]
  4058d5:	call   0x404f08
  4058da:	nop
  4058db:	lea    rdx,[rdi+0x48]
  4058df:	lea    rcx,[rbx+0x38]
  4058e3:	call   0x404f08
  4058e8:	nop
  4058e9:	mov    rax,rsi
  4058ec:	add    rsp,0x30
  4058f0:	pop    rdi
  4058f1:	pop    rsi
  4058f2:	pop    rbx
  4058f3:	ret    
  4058f4:	int3   
  4058f5:	int3   
  4058f6:	int3   
  4058f7:	int3   
  4058f8:	int3   
  4058f9:	int3   
  4058fa:	int3   
  4058fb:	int3   
  4058fc:	int3   
  4058fd:	int3   
  4058fe:	int3   
  4058ff:	int3   
  405900:	rex.W push rbp
  405902:	sub    rsp,0x20
  405906:	mov    rbp,rdx
  405909:	mov    rcx,QWORD PTR [rbp+0x50]
  40590d:	call   0x401000
  405912:	add    rsp,0x20
  405916:	pop    rbp
  405917:	ret    
  405918:	int3   
  405919:	int3   
  40591a:	int3   
  40591b:	int3   
  40591c:	int3   
  40591d:	int3   
  40591e:	int3   
  40591f:	int3   
  405920:	rex.W push rbp
  405922:	sub    rsp,0x20
  405926:	mov    rbp,rdx
  405929:	mov    rcx,QWORD PTR [rbp+0x58]
  40592d:	add    rcx,0x8
  405931:	call   0x401000
  405936:	add    rsp,0x20
  40593a:	pop    rbp
  40593b:	ret    
  40593c:	int3   
  40593d:	int3   
  40593e:	int3   
  40593f:	int3   
  405940:	rex.W push rbp
  405942:	sub    rsp,0x20
  405946:	mov    rbp,rdx
  405949:	mov    rcx,QWORD PTR [rbp+0x58]
  40594d:	add    rcx,0x18
  405951:	call   0x4057b4
  405956:	add    rsp,0x20
  40595a:	pop    rbp
  40595b:	ret    
  40595c:	int3   
  40595d:	int3   
  40595e:	int3   
  40595f:	int3   
  405960:	rex.W push rbp
  405962:	sub    rsp,0x20
  405966:	mov    rbp,rdx
  405969:	mov    rcx,QWORD PTR [rbp+0x58]
  40596d:	add    rcx,0x28
  405971:	call   0x405624
  405976:	add    rsp,0x20
  40597a:	pop    rbp
  40597b:	ret    
  40597c:	mov    QWORD PTR [rsp+0x10],rdx
  405981:	mov    QWORD PTR [rsp+0x8],rcx
  405986:	push   rbx
  405987:	push   rbp
  405988:	push   rsi
  405989:	push   rdi
  40598a:	sub    rsp,0x38
  40598e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405997:	mov    rdi,rcx
  40599a:	xor    esi,esi
  40599c:	mov    QWORD PTR [rcx],rsi
  40599f:	mov    DWORD PTR [rcx+0x8],esi
  4059a2:	mov    DWORD PTR [rcx+0xc],esi
  4059a5:	mov    ebx,DWORD PTR [rdx+0x8]
  4059a8:	cmp    ebx,esi
  4059aa:	je     0x4059be
  4059ac:	mov    rcx,rbx
  4059af:	shl    rcx,0x3
  4059b3:	call   0x402130
  4059b8:	mov    QWORD PTR [rdi],rax
  4059bb:	mov    DWORD PTR [rdi+0xc],ebx
  4059be:	cmp    ebx,esi
  4059c0:	jbe    0x405a57
  4059c6:	mov    rbp,rsi
  4059c9:	mov    QWORD PTR [rsp+0x70],rbx
  4059ce:	mov    ecx,0x48
  4059d3:	call   0x402130
  4059d8:	mov    rsi,rax
  4059db:	mov    QWORD PTR [rsp+0x78],rax
  4059e0:	test   rax,rax
  4059e3:	je     0x405a36
  4059e5:	mov    rax,QWORD PTR [rsp+0x68]
  4059ea:	mov    rcx,QWORD PTR [rax]
  4059ed:	mov    rbx,QWORD PTR [rcx+rbp*1]
  4059f1:	mov    rcx,QWORD PTR [rbx]
  4059f4:	mov    QWORD PTR [rsi],rcx
  4059f7:	lea    rdx,[rbx+0x8]
  4059fb:	lea    rcx,[rsi+0x8]
  4059ff:	call   0x403208
  405a04:	nop
  405a05:	lea    rdx,[rbx+0x18]
  405a09:	lea    rcx,[rsi+0x18]
  405a0d:	call   0x40597c
  405a12:	nop
  405a13:	lea    rdx,[rbx+0x28]
  405a17:	lea    rcx,[rsi+0x28]
  405a1b:	call   0x404f08
  405a20:	nop
  405a21:	lea    rdx,[rbx+0x38]
  405a25:	lea    rcx,[rsi+0x38]
  405a29:	call   0x404f08
  405a2e:	nop
  405a2f:	mov    rbx,QWORD PTR [rsp+0x70]
  405a34:	jmp    0x405a38
  405a36:	xor    esi,esi
  405a38:	mov    ecx,DWORD PTR [rdi+0x8]
  405a3b:	mov    rax,QWORD PTR [rdi]
  405a3e:	mov    QWORD PTR [rax+rcx*8],rsi
  405a42:	inc    DWORD PTR [rdi+0x8]
  405a45:	add    rbp,0x8
  405a49:	dec    rbx
  405a4c:	mov    QWORD PTR [rsp+0x70],rbx
  405a51:	jne    0x4059ce
  405a57:	mov    rax,rdi
  405a5a:	add    rsp,0x38
  405a5e:	pop    rdi
  405a5f:	pop    rsi
  405a60:	pop    rbp
  405a61:	pop    rbx
  405a62:	ret    
  405a63:	int3   
  405a64:	int3   
  405a65:	int3   
  405a66:	int3   
  405a67:	int3   
  405a68:	int3   
  405a69:	int3   
  405a6a:	int3   
  405a6b:	int3   
  405a6c:	rex.W push rbp
  405a6e:	sub    rsp,0x20
  405a72:	mov    rbp,rdx
  405a75:	mov    rcx,QWORD PTR [rbp+0x60]
  405a79:	call   0x401000
  405a7e:	add    rsp,0x20
  405a82:	pop    rbp
  405a83:	ret    
  405a84:	int3   
  405a85:	int3   
  405a86:	int3   
  405a87:	int3   
  405a88:	int3   
  405a89:	int3   
  405a8a:	int3   
  405a8b:	int3   
  405a8c:	rex.W push rbp
  405a8e:	sub    rsp,0x20
  405a92:	mov    rbp,rdx
  405a95:	mov    rcx,QWORD PTR [rbp+0x78]
  405a99:	call   0x40215c
  405a9e:	add    rsp,0x20
  405aa2:	pop    rbp
  405aa3:	ret    
  405aa4:	int3   
  405aa5:	int3   
  405aa6:	int3   
  405aa7:	int3   
  405aa8:	int3   
  405aa9:	int3   
  405aaa:	int3   
  405aab:	int3   
  405aac:	rex.W push rbp
  405aae:	sub    rsp,0x20
  405ab2:	mov    rbp,rdx
  405ab5:	mov    rcx,QWORD PTR [rbp+0x78]
  405ab9:	add    rcx,0x8
  405abd:	call   0x401000
  405ac2:	add    rsp,0x20
  405ac6:	pop    rbp
  405ac7:	ret    
  405ac8:	int3   
  405ac9:	int3   
  405aca:	int3   
  405acb:	int3   
  405acc:	rex.W push rbp
  405ace:	sub    rsp,0x20
  405ad2:	mov    rbp,rdx
  405ad5:	mov    rcx,QWORD PTR [rbp+0x78]
  405ad9:	add    rcx,0x18
  405add:	call   0x4057b4
  405ae2:	add    rsp,0x20
  405ae6:	pop    rbp
  405ae7:	ret    
  405ae8:	int3   
  405ae9:	int3   
  405aea:	int3   
  405aeb:	int3   
  405aec:	rex.W push rbp
  405aee:	sub    rsp,0x20
  405af2:	mov    rbp,rdx
  405af5:	mov    rcx,QWORD PTR [rbp+0x78]
  405af9:	add    rcx,0x28
  405afd:	call   0x405624
  405b02:	add    rsp,0x20
  405b06:	pop    rbp
  405b07:	ret    
  405b08:	rex.W push rbx
  405b0a:	sub    rsp,0x20
  405b0e:	mov    rbx,rcx
  405b11:	mov    QWORD PTR [rcx],0x0
  405b18:	add    rcx,0x8
  405b1c:	call   0x403150
  405b21:	mov    QWORD PTR [rbx+0x18],0x0
  405b29:	mov    DWORD PTR [rbx+0x20],0x0
  405b30:	mov    DWORD PTR [rbx+0x24],0x0
  405b37:	mov    QWORD PTR [rbx+0x28],0x0
  405b3f:	mov    DWORD PTR [rbx+0x30],0x0
  405b46:	mov    DWORD PTR [rbx+0x34],0x0
  405b4d:	mov    rax,rbx
  405b50:	mov    QWORD PTR [rbx+0x38],0x0
  405b58:	mov    DWORD PTR [rbx+0x40],0x0
  405b5f:	mov    DWORD PTR [rbx+0x44],0x0
  405b66:	add    rsp,0x20
  405b6a:	pop    rbx
  405b6b:	ret    
  405b6c:	rex.W push rbx
  405b6e:	push   rsi
  405b6f:	push   rdi
  405b70:	sub    rsp,0x30
  405b74:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405b7d:	mov    rsi,rdx
  405b80:	mov    rdi,rcx
  405b83:	mov    ecx,0x48
  405b88:	call   0x402130
  405b8d:	mov    rbx,rax
  405b90:	mov    QWORD PTR [rsp+0x60],rax
  405b95:	test   rax,rax
  405b98:	je     0x405bda
  405b9a:	mov    rax,QWORD PTR [rsi]
  405b9d:	mov    QWORD PTR [rbx],rax
  405ba0:	lea    rdx,[rsi+0x8]
  405ba4:	lea    rcx,[rbx+0x8]
  405ba8:	call   0x403208
  405bad:	nop
  405bae:	lea    rdx,[rsi+0x18]
  405bb2:	lea    rcx,[rbx+0x18]
  405bb6:	call   0x40597c
  405bbb:	nop
  405bbc:	lea    rdx,[rsi+0x28]
  405bc0:	lea    rcx,[rbx+0x28]
  405bc4:	call   0x404f08
  405bc9:	nop
  405bca:	lea    rdx,[rsi+0x38]
  405bce:	lea    rcx,[rbx+0x38]
  405bd2:	call   0x404f08
  405bd7:	nop
  405bd8:	jmp    0x405bdc
  405bda:	xor    ebx,ebx
  405bdc:	mov    rdx,rbx
  405bdf:	mov    rcx,rdi
  405be2:	add    rsp,0x30
  405be6:	pop    rdi
  405be7:	pop    rsi
  405be8:	pop    rbx
  405be9:	jmp    0x4010c8
  405bee:	int3   
  405bef:	int3   
  405bf0:	int3   
  405bf1:	int3   
  405bf2:	int3   
  405bf3:	int3   
  405bf4:	int3   
  405bf5:	int3   
  405bf6:	int3   
  405bf7:	int3   
  405bf8:	int3   
  405bf9:	int3   
  405bfa:	int3   
  405bfb:	int3   
  405bfc:	rex.W push rbp
  405bfe:	sub    rsp,0x20
  405c02:	mov    rbp,rdx
  405c05:	mov    rcx,QWORD PTR [rbp+0x60]
  405c09:	call   0x40215c
  405c0e:	add    rsp,0x20
  405c12:	pop    rbp
  405c13:	ret    
  405c14:	int3   
  405c15:	int3   
  405c16:	int3   
  405c17:	int3   
  405c18:	int3   
  405c19:	int3   
  405c1a:	int3   
  405c1b:	int3   
  405c1c:	rex.W push rbp
  405c1e:	sub    rsp,0x20
  405c22:	mov    rbp,rdx
  405c25:	mov    rcx,QWORD PTR [rbp+0x60]
  405c29:	add    rcx,0x8
  405c2d:	call   0x401000
  405c32:	add    rsp,0x20
  405c36:	pop    rbp
  405c37:	ret    
  405c38:	int3   
  405c39:	int3   
  405c3a:	int3   
  405c3b:	int3   
  405c3c:	rex.W push rbp
  405c3e:	sub    rsp,0x20
  405c42:	mov    rbp,rdx
  405c45:	mov    rcx,QWORD PTR [rbp+0x60]
  405c49:	add    rcx,0x18
  405c4d:	call   0x4057b4
  405c52:	add    rsp,0x20
  405c56:	pop    rbp
  405c57:	ret    
  405c58:	int3   
  405c59:	int3   
  405c5a:	int3   
  405c5b:	int3   
  405c5c:	rex.W push rbp
  405c5e:	sub    rsp,0x20
  405c62:	mov    rbp,rdx
  405c65:	mov    rcx,QWORD PTR [rbp+0x60]
  405c69:	add    rcx,0x28
  405c6d:	call   0x405624
  405c72:	add    rsp,0x20
  405c76:	pop    rbp
  405c77:	ret    
  405c78:	rex.W push rbx
  405c7a:	push   rbp
  405c7b:	push   rsi
  405c7c:	push   rdi
  405c7d:	push   r12
  405c7f:	push   r13
  405c81:	push   r14
  405c83:	sub    rsp,0x70
  405c87:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405c90:	mov    r13d,r9d
  405c93:	mov    rbx,r8
  405c96:	mov    bpl,dl
  405c99:	mov    rdi,rcx
  405c9c:	xor    r14d,r14d
  405c9f:	cmp    DWORD PTR [r8+0x8],0x1
  405ca4:	jbe    0x405da7
  405caa:	mov    rax,QWORD PTR [rbx]
  405cad:	mov    rsi,QWORD PTR [rax]
  405cb0:	cmp    BYTE PTR [rbx+0x13],r14b
  405cb4:	je     0x405ccc
  405cb6:	cmp    r13d,r14d
  405cb9:	je     0x405ccc
  405cbb:	mov    rcx,rsi
  405cbe:	call   0x40450c
  405cc3:	cmp    al,r14b
  405cc6:	jne    0x405de8
  405ccc:	mov    rdx,rsi
  405ccf:	mov    rcx,rdi
  405cd2:	call   0x40476c
  405cd7:	mov    r12d,eax
  405cda:	cmp    eax,r14d
  405cdd:	jge    0x405d58
  405cdf:	mov    QWORD PTR [rsp+0x28],rdi
  405ce4:	mov    rdx,rsi
  405ce7:	lea    rcx,[rsp+0x30]
  405cec:	call   0x403208
  405cf1:	mov    QWORD PTR [rsp+0x40],r14
  405cf6:	mov    DWORD PTR [rsp+0x48],r14d
  405cfb:	mov    DWORD PTR [rsp+0x4c],r14d
  405d00:	mov    QWORD PTR [rsp+0x50],r14
  405d05:	mov    DWORD PTR [rsp+0x58],r14d
  405d0a:	mov    DWORD PTR [rsp+0x5c],r14d
  405d0f:	mov    QWORD PTR [rsp+0x60],r14
  405d14:	mov    DWORD PTR [rsp+0x68],r14d
  405d19:	mov    DWORD PTR [rsp+0x6c],r14d
  405d1e:	lea    rcx,[rdi+0x18]
  405d22:	lea    rdx,[rsp+0x28]
  405d27:	call   0x405b6c
  405d2c:	mov    r12d,eax
  405d2f:	lea    rcx,[rsp+0x60]
  405d34:	call   0x405624
  405d39:	lea    rcx,[rsp+0x50]
  405d3e:	call   0x405624
  405d43:	lea    rcx,[rsp+0x40]
  405d48:	call   0x4057b4
  405d4d:	nop
  405d4e:	mov    rcx,QWORD PTR [rsp+0x30]
  405d53:	call   0x40215c
  405d58:	mov    rax,QWORD PTR [rbx]
  405d5b:	mov    rsi,QWORD PTR [rax]
  405d5e:	cmp    rsi,r14
  405d61:	je     0x405d73
  405d63:	mov    rcx,QWORD PTR [rsi]
  405d66:	call   0x40215c
  405d6b:	mov    rcx,rsi
  405d6e:	call   0x40215c
  405d73:	mov    rcx,QWORD PTR [rbx]
  405d76:	mov    r8d,DWORD PTR [rbx+0x8]
  405d7a:	add    r8d,0xffffffff
  405d7e:	shl    r8,0x3
  405d82:	lea    rdx,[rcx+0x8]
  405d86:	call   0x44b774
  405d8b:	add    DWORD PTR [rbx+0x8],0xffffffff
  405d8f:	dec    r13d
  405d92:	mov    ecx,r12d
  405d95:	mov    rax,QWORD PTR [rdi+0x18]
  405d99:	mov    rdi,QWORD PTR [rax+rcx*8]
  405d9d:	cmp    DWORD PTR [rbx+0x8],0x1
  405da1:	ja     0x405caa
  405da7:	cmp    DWORD PTR [rbx+0x8],r14d
  405dab:	je     0x405dc7
  405dad:	cmp    BYTE PTR [rbx+0x13],r14b
  405db1:	je     0x405dc7
  405db3:	mov    rcx,QWORD PTR [rbx]
  405db6:	mov    rcx,QWORD PTR [rcx]
  405db9:	call   0x40450c
  405dbe:	cmp    al,r14b
  405dc1:	jne    0x405dc7
  405dc3:	mov    BYTE PTR [rbx+0x13],r14b
  405dc7:	cmp    bpl,r14b
  405dca:	je     0x405dda
  405dcc:	lea    rcx,[rdi+0x28]
  405dd0:	mov    rdx,rbx
  405dd3:	call   0x40559c
  405dd8:	jmp    0x405e07
  405dda:	lea    rcx,[rdi+0x38]
  405dde:	mov    rdx,rbx
  405de1:	call   0x40559c
  405de6:	jmp    0x405e07
  405de8:	cmp    bpl,r14b
  405deb:	je     0x405dfb
  405ded:	lea    rcx,[rdi+0x28]
  405df1:	mov    rdx,rbx
  405df4:	call   0x40559c
  405df9:	jmp    0x405e07
  405dfb:	lea    rcx,[rdi+0x38]
  405dff:	mov    rdx,rbx
  405e02:	call   0x40559c
  405e07:	add    rsp,0x70
  405e0b:	pop    r14
  405e0d:	pop    r13
  405e0f:	pop    r12
  405e11:	pop    rdi
  405e12:	pop    rsi
  405e13:	pop    rbp
  405e14:	pop    rbx
  405e15:	ret    
  405e16:	int3   
  405e17:	int3   
  405e18:	rex.W push rbp
  405e1a:	sub    rsp,0x20
  405e1e:	mov    rbp,rdx
  405e21:	lea    rcx,[rbp+0x28]
  405e25:	call   0x4056bc
  405e2a:	add    rsp,0x20
  405e2e:	pop    rbp
  405e2f:	ret    
  405e30:	int3   
  405e31:	int3   
  405e32:	int3   
  405e33:	int3   
  405e34:	int3   
  405e35:	int3   
  405e36:	int3   
  405e37:	int3   
  405e38:	rex.W push rbp
  405e3a:	sub    rsp,0x20
  405e3e:	mov    rbp,rdx
  405e41:	lea    rcx,[rbp+0x28]
  405e45:	add    rcx,0x8
  405e49:	call   0x401000
  405e4e:	add    rsp,0x20
  405e52:	pop    rbp
  405e53:	ret    
  405e54:	rex.W push rbx
  405e56:	push   rbp
  405e57:	push   rsi
  405e58:	push   rdi
  405e59:	sub    rsp,0x78
  405e5d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  405e66:	mov    rbx,rdx
  405e69:	mov    rdi,rcx
  405e6c:	add    rdx,0x38
  405e70:	add    rcx,0x38
  405e74:	call   0x4054a4
  405e79:	xor    ebp,ebp
  405e7b:	cmp    DWORD PTR [rbx+0x20],ebp
  405e7e:	jbe    0x405f60
  405e84:	xor    esi,esi
  405e86:	mov    rax,QWORD PTR [rbx+0x18]
  405e8a:	mov    rax,QWORD PTR [rsi+rax*1]
  405e8e:	mov    QWORD PTR [rsp+0xa8],rax
  405e96:	add    rax,0x8
  405e9a:	mov    QWORD PTR [rsp+0xa0],rax
  405ea2:	mov    rdx,rax
  405ea5:	mov    rcx,rdi
  405ea8:	call   0x40476c
  405ead:	test   eax,eax
  405eaf:	jns    0x405f3a
  405eb5:	mov    QWORD PTR [rsp+0x28],rdi
  405eba:	mov    rdx,QWORD PTR [rsp+0xa0]
  405ec2:	lea    rcx,[rsp+0x30]
  405ec7:	call   0x403208
  405ecc:	xor    eax,eax
  405ece:	mov    QWORD PTR [rsp+0x40],rax
  405ed3:	mov    DWORD PTR [rsp+0x48],eax
  405ed7:	mov    DWORD PTR [rsp+0x4c],eax
  405edb:	mov    QWORD PTR [rsp+0x50],rax
  405ee0:	mov    DWORD PTR [rsp+0x58],eax
  405ee4:	mov    DWORD PTR [rsp+0x5c],eax
  405ee8:	mov    QWORD PTR [rsp+0x60],rax
  405eed:	mov    DWORD PTR [rsp+0x68],eax
  405ef1:	mov    DWORD PTR [rsp+0x6c],eax
  405ef5:	lea    rdx,[rsp+0x28]
  405efa:	lea    rcx,[rdi+0x18]
  405efe:	call   0x405b6c
  405f03:	mov    DWORD PTR [rsp+0xa0],eax
  405f0a:	lea    rcx,[rsp+0x60]
  405f0f:	call   0x405624
  405f14:	lea    rcx,[rsp+0x50]
  405f19:	call   0x405624
  405f1e:	lea    rcx,[rsp+0x40]
  405f23:	call   0x4057b4
  405f28:	nop
  405f29:	mov    rcx,QWORD PTR [rsp+0x30]
  405f2e:	call   0x40215c
  405f33:	mov    eax,DWORD PTR [rsp+0xa0]
  405f3a:	mov    eax,eax
  405f3c:	mov    rcx,QWORD PTR [rdi+0x18]
  405f40:	mov    rdx,QWORD PTR [rsp+0xa8]
  405f48:	mov    rcx,QWORD PTR [rcx+rax*8]
  405f4c:	call   0x405e54
  405f51:	inc    ebp
  405f53:	add    rsi,0x8
  405f57:	cmp    ebp,DWORD PTR [rbx+0x20]
  405f5a:	jb     0x405e86
  405f60:	add    rsp,0x78
  405f64:	pop    rdi
  405f65:	pop    rsi
  405f66:	pop    rbp
  405f67:	pop    rbx
  405f68:	ret    
  405f69:	int3   
  405f6a:	int3   
  405f6b:	int3   
  405f6c:	int3   
  405f6d:	int3   
  405f6e:	int3   
  405f6f:	int3   
  405f70:	int3   
  405f71:	int3   
  405f72:	int3   
  405f73:	int3   
  405f74:	rex.W push rbp
  405f76:	sub    rsp,0x20
  405f7a:	mov    rbp,rdx
  405f7d:	lea    rcx,[rbp+0x28]
  405f81:	call   0x4056bc
  405f86:	add    rsp,0x20
  405f8a:	pop    rbp
  405f8b:	ret    
  405f8c:	int3   
  405f8d:	int3   
  405f8e:	int3   
  405f8f:	int3   
  405f90:	int3   
  405f91:	int3   
  405f92:	int3   
  405f93:	int3   
  405f94:	rex.W push rbp
  405f96:	sub    rsp,0x20
  405f9a:	mov    rbp,rdx
  405f9d:	lea    rcx,[rbp+0x28]
  405fa1:	add    rcx,0x8
  405fa5:	call   0x401000
  405faa:	add    rsp,0x20
  405fae:	pop    rbp
  405faf:	ret    
  405fb0:	mov    BYTE PTR [rsp+0x18],r8b
  405fb5:	mov    DWORD PTR [rsp+0x10],edx
  405fb9:	mov    QWORD PTR [rsp+0x8],rcx
  405fbe:	push   rbx
  405fbf:	push   rbp
  405fc0:	push   rsi
  405fc1:	push   rdi
  405fc2:	push   r12
  405fc4:	push   r13
  405fc6:	push   r14
  405fc8:	push   r15
  405fca:	mov    r11,rsp
  405fcd:	sub    rsp,0xe8
  405fd4:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
  405fdd:	mov    r12d,edx
  405fe0:	mov    r14,rcx
  405fe3:	xor    r15d,r15d
  405fe6:	cmp    DWORD PTR [r9+0x8],r15d
  405fea:	jne    0x406008
  405fec:	lea    rax,[rip+0x47955]        # 0x44d948
  405ff3:	mov    QWORD PTR [r11+0x60],rax
  405ff7:	lea    rdx,[rip+0x610f2]        # 0x4670f0
  405ffe:	lea    rcx,[r11+0x60]
  406002:	call   0x44b71e
  406007:	int3   
  406008:	mov    QWORD PTR [rsp+0x20],r15
  40600d:	mov    DWORD PTR [rsp+0x28],r15d
  406012:	mov    DWORD PTR [rsp+0x2c],r15d
  406017:	lea    rdx,[rsp+0x20]
  40601c:	mov    rcx,r9
  40601f:	call   0x405010
  406024:	mov    BYTE PTR [rsp+0x148],0x1
  40602c:	mov    ebx,DWORD PTR [rsp+0x28]
  406030:	lea    ebp,[rbx-0x1]
  406033:	mov    rdi,QWORD PTR [rsp+0x20]
  406038:	mov    rsi,QWORD PTR [rdi+rbp*8]
  40603c:	cmp    DWORD PTR [rsi+0x8],r15d
  406040:	jne    0x406065
  406042:	mov    BYTE PTR [rsp+0x148],r15b
  40604a:	cmp    rsi,r15
  40604d:	je     0x40605f
  40604f:	mov    rcx,QWORD PTR [rsi]
  406052:	call   0x40215c
  406057:	mov    rcx,rsi
  40605a:	call   0x40215c
  40605f:	mov    ebx,ebp
  406061:	mov    DWORD PTR [rsp+0x28],ebp
  406065:	lea    rcx,[rsp+0x30]
  40606a:	call   0x403150
  40606f:	nop
  406070:	mov    esi,0xffffffff
  406075:	mov    r13d,esi
  406078:	lea    ebp,[rsi+0x3]
  40607b:	cmp    ebx,0x3
  40607e:	jb     0x4060ae
  406080:	mov    rax,QWORD PTR [rdi]
  406083:	cmp    DWORD PTR [rax+0x8],r15d
  406087:	jne    0x4060ae
  406089:	mov    rax,QWORD PTR [rdi+0x8]
  40608d:	cmp    DWORD PTR [rax+0x8],r15d
  406091:	jne    0x4060ae
  406093:	mov    rax,QWORD PTR [rdi+0x10]
  406097:	lea    rdx,[rip+0x47656]        # 0x44d6f4
  40609e:	mov    rcx,QWORD PTR [rax]
  4060a1:	call   QWORD PTR [rip+0x472a1]        # 0x44d348
  4060a7:	cmp    eax,r15d
  4060aa:	cmove  r13d,ebp
  4060ae:	cmp    r12d,ebp
  4060b1:	je     0x406229
  4060b7:	mov    DWORD PTR [rsp+0x40],esi
  4060bb:	lea    rdx,[rsp+0x20]
  4060c0:	lea    rcx,[rsp+0xc8]
  4060c8:	call   0x404d18
  4060cd:	mov    rcx,rax
  4060d0:	call   0x4049c0
  4060d5:	movsxd r13,eax
  4060d8:	mov    r14d,r13d
  4060db:	cmp    r12d,0x1
  4060df:	je     0x4060ef
  4060e1:	cmp    r13d,r15d
  4060e4:	je     0x4060ef
  4060e6:	cmp    ebx,r13d
  4060e9:	jbe    0x4060ef
  4060eb:	lea    r14d,[rbx-0x1]
  4060ef:	mov    ebp,r13d
  4060f2:	cmp    r13d,ebx
  4060f5:	jae    0x40616b
  4060f7:	lea    r12,[rdi+r13*8]
  4060fb:	mov    r15,QWORD PTR [r12]
  4060ff:	lea    rdx,[rip+0x4783a]        # 0x44d940
  406106:	mov    rcx,QWORD PTR [r15]
  406109:	call   QWORD PTR [rip+0x47239]        # 0x44d348
  40610f:	test   eax,eax
  406111:	je     0x40612d
  406113:	lea    rdx,[rip+0x475e2]        # 0x44d6fc
  40611a:	mov    rcx,QWORD PTR [r15]
  40611d:	call   QWORD PTR [rip+0x47225]        # 0x44d348
  406123:	xor    r15d,r15d
  406126:	cmp    eax,r15d
  406129:	jne    0x406132
  40612b:	jmp    0x406130
  40612d:	xor    r15d,r15d
  406130:	mov    esi,ebp
  406132:	inc    ebp
  406134:	add    r12,0x8
  406138:	cmp    ebp,ebx
  40613a:	jb     0x4060fb
  40613c:	cmp    esi,r15d
  40613f:	jl     0x406163
  406141:	lea    eax,[rbx-0x1]
  406144:	cmp    esi,eax
  406146:	jne    0x406155
  406148:	mov    r14d,ebx
  40614b:	mov    r12d,DWORD PTR [rsp+0x138]
  406153:	jmp    0x40616b
  406155:	lea    r14d,[rbx-0x1]
  406159:	mov    r12d,DWORD PTR [rsp+0x138]
  406161:	jmp    0x40616b
  406163:	mov    r12d,DWORD PTR [rsp+0x138]
  40616b:	mov    ebp,r15d
  40616e:	cmp    r14d,r15d
  406171:	jbe    0x406233
  406177:	mov    r15b,BYTE PTR [rsp+0x158]
  40617f:	test   r15b,r15b
  406182:	je     0x406199
  406184:	cmp    ebp,r13d
  406187:	jb     0x406199
  406189:	mov    rcx,QWORD PTR [rdi]
  40618c:	call   0x40450c
  406191:	test   al,al
  406193:	jne    0x40621a
  406199:	mov    rdx,QWORD PTR [rdi]
  40619c:	lea    rcx,[rsp+0x30]
  4061a1:	call   0x403444
  4061a6:	mov    r11d,DWORD PTR [rsp+0x38]
  4061ab:	cmp    DWORD PTR [rsp+0x3c],r11d
  4061b0:	jne    0x4061c1
  4061b2:	lea    rcx,[rsp+0x30]
  4061b7:	call   0x402f2c
  4061bc:	mov    r11d,DWORD PTR [rsp+0x38]
  4061c1:	mov    rcx,QWORD PTR [rsp+0x30]
  4061c6:	mov    eax,r11d
  4061c9:	mov    WORD PTR [rcx+rax*2],0x5c
  4061cf:	inc    r11d
  4061d2:	mov    WORD PTR [rcx+r11*2],0x0
  4061d9:	mov    DWORD PTR [rsp+0x38],r11d
  4061de:	mov    rsi,QWORD PTR [rdi]
  4061e1:	test   rsi,rsi
  4061e4:	je     0x4061f6
  4061e6:	mov    rcx,QWORD PTR [rsi]
  4061e9:	call   0x40215c
  4061ee:	mov    rcx,rsi
  4061f1:	call   0x40215c
  4061f6:	dec    ebx
  4061f8:	mov    r8d,ebx
  4061fb:	shl    r8,0x3
  4061ff:	lea    rdx,[rdi+0x8]
  406203:	mov    rcx,rdi
  406206:	call   0x44b774
  40620b:	mov    DWORD PTR [rsp+0x28],ebx
  40620f:	inc    ebp
  406211:	cmp    ebp,r14d
  406214:	jb     0x40617f
  40621a:	mov    r13d,DWORD PTR [rsp+0x40]
  40621f:	mov    r14,QWORD PTR [rsp+0x130]
  406227:	jmp    0x406248
  406229:	mov    r15b,BYTE PTR [rsp+0x158]
  406231:	jmp    0x406248
  406233:	mov    r15b,BYTE PTR [rsp+0x158]
  40623b:	mov    r13d,DWORD PTR [rsp+0x40]
  406240:	mov    r14,QWORD PTR [rsp+0x130]
  406248:	lea    rdx,[rsp+0x30]
  40624d:	mov    rcx,r14
  406250:	call   0x4048f0
  406255:	mov    ebp,eax
  406257:	test   eax,eax
  406259:	jns    0x4062fc
  40625f:	lea    rdx,[rsp+0x30]
  406264:	lea    rcx,[rsp+0x70]
  406269:	call   0x403208
  40626e:	nop
  40626f:	lea    rcx,[rsp+0x80]
  406277:	call   0x405b08
  40627c:	nop
  40627d:	mov    ecx,0x58
  406282:	call   0x402130
  406287:	mov    QWORD PTR [rsp+0x40],rax
  40628c:	test   rax,rax
  40628f:	je     0x4062a0
  406291:	lea    rdx,[rsp+0x70]
  406296:	mov    rcx,rax
  406299:	call   0x405880
  40629e:	jmp    0x4062a2
  4062a0:	xor    eax,eax
  4062a2:	mov    rdx,rax
  4062a5:	mov    rcx,r14
  4062a8:	call   0x4010c8
  4062ad:	mov    ebp,eax
  4062af:	lea    rax,[rsp+0x80]
  4062b7:	mov    QWORD PTR [rsp+0x40],rax
  4062bc:	lea    rcx,[rsp+0xb8]
  4062c4:	call   0x405624
  4062c9:	lea    rcx,[rsp+0xa8]
  4062d1:	call   0x405624
  4062d6:	lea    rcx,[rsp+0x98]
  4062de:	call   0x4057b4
  4062e3:	nop
  4062e4:	mov    rcx,QWORD PTR [rsp+0x88]
  4062ec:	call   0x40215c
  4062f1:	nop
  4062f2:	mov    rcx,QWORD PTR [rsp+0x70]
  4062f7:	call   0x40215c
  4062fc:	cmp    r12d,0x2
  406300:	je     0x4063c5
  406306:	xor    r12d,r12d
  406309:	cmp    ebx,r12d
  40630c:	je     0x406324
  40630e:	cmp    ebx,0x1
  406311:	jne    0x4063c8
  406317:	mov    rax,QWORD PTR [rdi]
  40631a:	cmp    DWORD PTR [rax+0x8],r12d
  40631e:	jne    0x4063c8
  406324:	movsxd rax,ebx
  406327:	cmp    ebx,r12d
  40632a:	je     0x406354
  40632c:	lea    rdi,[rdi+rax*8]
  406330:	add    ebx,0xffffffff
  406333:	sub    rdi,0x8
  406337:	mov    rsi,QWORD PTR [rdi]
  40633a:	cmp    rsi,r12
  40633d:	je     0x40634f
  40633f:	mov    rcx,QWORD PTR [rsi]
  406342:	call   0x40215c
  406347:	mov    rcx,rsi
  40634a:	call   0x40215c
  40634f:	cmp    ebx,r12d
  406352:	jne    0x406330
  406354:	mov    DWORD PTR [rsp+0x28],r12d
  406359:	lea    rdx,[rip+0x47390]        # 0x44d6f0
  406360:	lea    rcx,[rsp+0x40]
  406365:	call   0x4031c0
  40636a:	nop
  40636b:	mov    ecx,0x10
  406370:	call   0x402130
  406375:	mov    QWORD PTR [rsp+0x148],rax
  40637d:	cmp    rax,r12
  406380:	je     0x406391
  406382:	lea    rdx,[rsp+0x40]
  406387:	mov    rcx,rax
  40638a:	call   0x403208
  40638f:	jmp    0x406394
  406391:	mov    rax,r12
  406394:	mov    rdx,rax
  406397:	lea    rcx,[rsp+0x20]
  40639c:	call   0x4010c8
  4063a1:	nop
  4063a2:	mov    rcx,QWORD PTR [rsp+0x40]
  4063a7:	call   0x40215c
  4063ac:	mov    BYTE PTR [rsp+0x148],0x1
  4063b4:	mov    r15b,0x1
  4063b7:	mov    sil,r12b
  4063ba:	mov    ebx,DWORD PTR [rsp+0x28]
  4063be:	mov    rdi,QWORD PTR [rsp+0x20]
  4063c3:	jmp    0x4063d0
  4063c5:	xor    r12d,r12d
  4063c8:	mov    sil,BYTE PTR [rsp+0x150]
  4063d0:	mov    QWORD PTR [rsp+0x50],r12
  4063d5:	mov    DWORD PTR [rsp+0x58],r12d
  4063da:	mov    DWORD PTR [rsp+0x5c],r12d
  4063df:	lea    rdx,[rsp+0x20]
  4063e4:	lea    rcx,[rsp+0x50]
  4063e9:	call   0x404df0
  4063ee:	mov    BYTE PTR [rsp+0x62],0x1
  4063f3:	mov    al,BYTE PTR [rsp+0x148]
  4063fa:	mov    BYTE PTR [rsp+0x61],al
  4063fe:	mov    BYTE PTR [rsp+0x60],sil
  406403:	mov    BYTE PTR [rsp+0x63],r15b
  406408:	mov    ecx,ebp
  40640a:	mov    rax,QWORD PTR [r14]
  40640d:	mov    rcx,QWORD PTR [rax+rcx*8]
  406411:	add    rcx,0x10
  406415:	mov    r9d,r13d
  406418:	lea    r8,[rsp+0x50]
  40641d:	mov    dl,BYTE PTR [rsp+0x140]
  406424:	call   0x405c78
  406429:	nop
  40642a:	movsxd r12,DWORD PTR [rsp+0x58]
  40642f:	mov    rsi,r12
  406432:	test   r12d,r12d
  406435:	je     0x406467
  406437:	shl    rsi,0x3
  40643b:	add    r12d,0xffffffff
  40643f:	sub    rsi,0x8
  406443:	mov    rax,QWORD PTR [rsp+0x50]
  406448:	mov    rbp,QWORD PTR [rsi+rax*1]
  40644c:	test   rbp,rbp
  40644f:	je     0x406462
  406451:	mov    rcx,QWORD PTR [rbp+0x0]
  406455:	call   0x40215c
  40645a:	mov    rcx,rbp
  40645d:	call   0x40215c
  406462:	test   r12d,r12d
  406465:	jne    0x40643b
  406467:	mov    rcx,QWORD PTR [rsp+0x50]
  40646c:	call   0x40215c
  406471:	nop
  406472:	mov    rcx,QWORD PTR [rsp+0x30]
  406477:	call   0x40215c
  40647c:	nop
  40647d:	movsxd rax,ebx
  406480:	test   ebx,ebx
  406482:	je     0x4064ac
  406484:	lea    rsi,[rdi+rax*8]
  406488:	add    ebx,0xffffffff
  40648b:	sub    rsi,0x8
  40648f:	mov    rbp,QWORD PTR [rsi]
  406492:	test   rbp,rbp
  406495:	je     0x4064a8
  406497:	mov    rcx,QWORD PTR [rbp+0x0]
  40649b:	call   0x40215c
  4064a0:	mov    rcx,rbp
  4064a3:	call   0x40215c
  4064a8:	test   ebx,ebx
  4064aa:	jne    0x406488
  4064ac:	mov    rcx,rdi
  4064af:	call   0x40215c
  4064b4:	add    rsp,0xe8
  4064bb:	pop    r15
  4064bd:	pop    r14
  4064bf:	pop    r13
  4064c1:	pop    r12
  4064c3:	pop    rdi
  4064c4:	pop    rsi
  4064c5:	pop    rbp
  4064c6:	pop    rbx
  4064c7:	ret    
  4064c8:	int3   
  4064c9:	int3   
  4064ca:	int3   
  4064cb:	int3   
  4064cc:	int3   
  4064cd:	int3   
  4064ce:	int3   
  4064cf:	int3   
  4064d0:	rex.W push rbp
  4064d2:	sub    rsp,0x20
  4064d6:	mov    rbp,rdx
  4064d9:	lea    rcx,[rbp+0x20]
  4064dd:	call   0x4047cc
  4064e2:	add    rsp,0x20
  4064e6:	pop    rbp
  4064e7:	ret    
  4064e8:	int3   
  4064e9:	int3   
  4064ea:	int3   
  4064eb:	int3   
  4064ec:	int3   
  4064ed:	int3   
  4064ee:	int3   
  4064ef:	int3   
  4064f0:	rex.W push rbp
  4064f2:	sub    rsp,0x20
  4064f6:	mov    rbp,rdx
  4064f9:	lea    rcx,[rbp+0x30]
  4064fd:	call   0x401000
  406502:	add    rsp,0x20
  406506:	pop    rbp
  406507:	ret    
  406508:	int3   
  406509:	int3   
  40650a:	int3   
  40650b:	int3   
  40650c:	int3   
  40650d:	int3   
  40650e:	int3   
  40650f:	int3   
  406510:	rex.W push rbp
  406512:	sub    rsp,0x20
  406516:	mov    rbp,rdx
  406519:	lea    rcx,[rbp+0x70]
  40651d:	call   0x401000
  406522:	add    rsp,0x20
  406526:	pop    rbp
  406527:	ret    
  406528:	int3   
  406529:	int3   
  40652a:	int3   
  40652b:	int3   
  40652c:	int3   
  40652d:	int3   
  40652e:	int3   
  40652f:	int3   
  406530:	rex.W push rbp
  406532:	sub    rsp,0x20
  406536:	mov    rbp,rdx
  406539:	lea    rcx,[rbp+0x70]
  40653d:	call   0x405718
  406542:	add    rsp,0x20
  406546:	pop    rbp
  406547:	ret    
  406548:	int3   
  406549:	int3   
  40654a:	int3   
  40654b:	int3   
  40654c:	int3   
  40654d:	int3   
  40654e:	int3   
  40654f:	int3   
  406550:	rex.W push rbp
  406552:	sub    rsp,0x20
  406556:	mov    rbp,rdx
  406559:	mov    rcx,QWORD PTR [rbp+0x40]
  40655d:	call   0x40215c
  406562:	add    rsp,0x20
  406566:	pop    rbp
  406567:	ret    
  406568:	int3   
  406569:	int3   
  40656a:	int3   
  40656b:	int3   
  40656c:	int3   
  40656d:	int3   
  40656e:	int3   
  40656f:	int3   
  406570:	rex.W push rbp
  406572:	sub    rsp,0x20
  406576:	mov    rbp,rdx
  406579:	lea    rcx,[rbp+0x70]
  40657d:	call   0x401000
  406582:	add    rsp,0x20
  406586:	pop    rbp
  406587:	ret    
  406588:	int3   
  406589:	int3   
  40658a:	int3   
  40658b:	int3   
  40658c:	int3   
  40658d:	int3   
  40658e:	int3   
  40658f:	int3   
  406590:	rex.W push rbp
  406592:	sub    rsp,0x20
  406596:	mov    rbp,rdx
  406599:	mov    rcx,QWORD PTR [rbp+0x40]
  40659d:	add    rcx,0x8
  4065a1:	call   0x401000
  4065a6:	add    rsp,0x20
  4065aa:	pop    rbp
  4065ab:	ret    
  4065ac:	int3   
  4065ad:	int3   
  4065ae:	int3   
  4065af:	int3   
  4065b0:	rex.W push rbp
  4065b2:	sub    rsp,0x20
  4065b6:	mov    rbp,rdx
  4065b9:	lea    rcx,[rbp+0x40]
  4065bd:	call   0x401000
  4065c2:	add    rsp,0x20
  4065c6:	pop    rbp
  4065c7:	ret    
  4065c8:	int3   
  4065c9:	int3   
  4065ca:	int3   
  4065cb:	int3   
  4065cc:	int3   
  4065cd:	int3   
  4065ce:	int3   
  4065cf:	int3   
  4065d0:	rex.W push rbp
  4065d2:	sub    rsp,0x20
  4065d6:	mov    rbp,rdx
  4065d9:	mov    rcx,QWORD PTR [rbp+0x148]
  4065e0:	call   0x40215c
  4065e5:	add    rsp,0x20
  4065e9:	pop    rbp
  4065ea:	ret    
  4065eb:	int3   
  4065ec:	int3   
  4065ed:	int3   
  4065ee:	int3   
  4065ef:	int3   
  4065f0:	rex.W push rbp
  4065f2:	sub    rsp,0x20
  4065f6:	mov    rbp,rdx
  4065f9:	lea    rcx,[rbp+0x50]
  4065fd:	call   0x4047cc
  406602:	add    rsp,0x20
  406606:	pop    rbp
  406607:	ret    
  406608:	rex.W push rbx
  40660a:	push   rbp
  40660b:	push   rsi
  40660c:	push   rdi
  40660d:	push   r12
  40660f:	sub    rsp,0x20
  406613:	mov    edx,DWORD PTR [rcx+0x8]
  406616:	xor    ebx,ebx
  406618:	mov    rbp,rcx
  40661b:	cmp    edx,ebx
  40661d:	mov    edi,ebx
  40661f:	jbe    0x406636
  406621:	mov    r8,QWORD PTR [rcx]
  406624:	mov    rax,QWORD PTR [r8]
  406627:	cmp    DWORD PTR [rax+0x8],ebx
  40662a:	je     0x406636
  40662c:	inc    edi
  40662e:	add    r8,0x8
  406632:	cmp    edi,edx
  406634:	jb     0x406624
  406636:	cmp    edi,edx
  406638:	je     0x40666c
  40663a:	cmp    edx,ebx
  40663c:	movsxd r12,edi
  40663f:	jbe    0x40666c
  406641:	mov    rsi,rbx
  406644:	cmp    edi,ebx
  406646:	je     0x406661
  406648:	mov    rax,QWORD PTR [rbp+0x0]
  40664c:	mov    rdx,QWORD PTR [rax+r12*8]
  406650:	mov    rcx,QWORD PTR [rsi+rax*1]
  406654:	add    rdx,0x10
  406658:	add    rcx,0x10
  40665c:	call   0x405e54
  406661:	inc    ebx
  406663:	add    rsi,0x8
  406667:	cmp    ebx,DWORD PTR [rbp+0x8]
  40666a:	jb     0x406644
  40666c:	add    rsp,0x20
  406670:	pop    r12
  406672:	pop    rdi
  406673:	pop    rsi
  406674:	pop    rbp
  406675:	pop    rbx
  406676:	ret    
  406677:	int3   
  406678:	rex.W push rbx
  40667a:	push   rbp
  40667b:	push   rsi
  40667c:	push   rdi
  40667d:	sub    rsp,0x38
  406681:	xor    esi,esi
  406683:	mov    ebp,edx
  406685:	mov    rdi,rcx
  406688:	cmp    DWORD PTR [rcx+0x18],esi
  40668b:	jbe    0x4066c1
  40668d:	xor    ebx,ebx
  40668f:	mov    rax,QWORD PTR [rdi+0x10]
  406693:	mov    edx,ebp
  406695:	mov    rcx,QWORD PTR [rbx+rax*1]
  406699:	mov    r9,rcx
  40669c:	mov    al,BYTE PTR [rcx+0x12]
  40669f:	mov    r8b,BYTE PTR [rcx+0x10]
  4066a3:	mov    BYTE PTR [rsp+0x28],al
  4066a7:	mov    al,BYTE PTR [rcx+0x11]
  4066aa:	mov    rcx,rdi
  4066ad:	mov    BYTE PTR [rsp+0x20],al
  4066b1:	call   0x405fb0
  4066b6:	inc    esi
  4066b8:	add    rbx,0x8
  4066bc:	cmp    esi,DWORD PTR [rdi+0x18]
  4066bf:	jb     0x40668f
  4066c1:	movsxd rbx,DWORD PTR [rdi+0x18]
  4066c5:	test   ebx,ebx
  4066c7:	mov    rsi,rbx
  4066ca:	je     0x4066f9
  4066cc:	shl    rsi,0x3
  4066d0:	mov    rax,QWORD PTR [rdi+0x10]
  4066d4:	sub    rsi,0x8
  4066d8:	add    ebx,0xffffffff
  4066db:	mov    rbp,QWORD PTR [rsi+rax*1]
  4066df:	test   rbp,rbp
  4066e2:	je     0x4066f5
  4066e4:	mov    rcx,QWORD PTR [rbp+0x0]
  4066e8:	call   0x40215c
  4066ed:	mov    rcx,rbp
  4066f0:	call   0x40215c
  4066f5:	test   ebx,ebx
  4066f7:	jne    0x4066d0
  4066f9:	mov    DWORD PTR [rdi+0x18],0x0
  406700:	add    rsp,0x38
  406704:	pop    rdi
  406705:	pop    rsi
  406706:	pop    rbp
  406707:	pop    rbx
  406708:	ret    
  406709:	int3   
  40670a:	int3   
  40670b:	int3   
  40670c:	rex.W push rbx
  40670e:	sub    rsp,0x20
  406712:	mov    rbx,rcx
  406715:	mov    rcx,QWORD PTR [rcx]
  406718:	test   rcx,rcx
  40671b:	je     0x40672e
  40671d:	call   QWORD PTR [rip+0x46a95]        # 0x44d1b8
  406723:	test   eax,eax
  406725:	je     0x406730
  406727:	mov    QWORD PTR [rbx],0x0
  40672e:	mov    al,0x1
  406730:	add    rsp,0x20
  406734:	pop    rbx
  406735:	ret    
  406736:	int3   
  406737:	int3   
  406738:	rex.W push rbx
  40673a:	push   rbp
  40673b:	push   rsi
  40673c:	push   rdi
  40673d:	sub    rsp,0x28
  406741:	mov    esi,r8d
  406744:	mov    rbp,rdx
  406747:	mov    rdi,rcx
  40674a:	call   0x40670c
  40674f:	xor    ebx,ebx
  406751:	cmp    al,bl
  406753:	jne    0x406759
  406755:	xor    al,al
  406757:	jmp    0x406770
  406759:	mov    r8d,esi
  40675c:	xor    edx,edx
  40675e:	mov    rcx,rbp
  406761:	call   QWORD PTR [rip+0x46a59]        # 0x44d1c0
  406767:	cmp    rax,rbx
  40676a:	mov    QWORD PTR [rdi],rax
  40676d:	setne  al
  406770:	add    rsp,0x28
  406774:	pop    rdi
  406775:	pop    rsi
  406776:	pop    rbp
  406777:	pop    rbx
  406778:	ret    
  406779:	int3   
  40677a:	int3   
  40677b:	int3   
  40677c:	rex.W push rbx
  40677e:	push   rsi
  40677f:	push   rdi
  406780:	sub    rsp,0x20
  406784:	mov    rsi,rdx
  406787:	mov    rdi,rcx
  40678a:	call   0x40670c
  40678f:	xor    ebx,ebx
  406791:	cmp    al,bl
  406793:	jne    0x406799
  406795:	xor    al,al
  406797:	jmp    0x4067ab
  406799:	mov    rcx,rsi
  40679c:	call   QWORD PTR [rip+0x46a26]        # 0x44d1c8
  4067a2:	cmp    rax,rbx
  4067a5:	mov    QWORD PTR [rdi],rax
  4067a8:	setne  al
  4067ab:	add    rsp,0x20
  4067af:	pop    rdi
  4067b0:	pop    rsi
  4067b1:	pop    rbx
  4067b2:	ret    
  4067b3:	int3   
  4067b4:	rex.W push rbx
  4067b6:	sub    rsp,0x230
  4067bd:	mov    rbx,rcx
  4067c0:	mov    rcx,QWORD PTR [rip+0x62771]        # 0x468f38
  4067c7:	lea    rdx,[rsp+0x20]
  4067cc:	mov    rax,QWORD PTR [rbx]
  4067cf:	mov    DWORD PTR [rbx+0x8],0x0
  4067d6:	mov    r8d,0x105
  4067dc:	mov    WORD PTR [rax],0x0
  4067e1:	mov    WORD PTR [rsp+0x20],0x0
  4067e8:	call   QWORD PTR [rip+0x469e2]        # 0x44d1d0
  4067ee:	cmp    eax,0x104
  4067f3:	ja     0x40680a
  4067f5:	test   eax,eax
  4067f7:	je     0x40680a
  4067f9:	lea    rdx,[rsp+0x20]
  4067fe:	mov    rcx,rbx
  406801:	call   0x403290
  406806:	mov    al,0x1
  406808:	jmp    0x40680c
  40680a:	xor    al,al
  40680c:	add    rsp,0x230
  406813:	pop    rbx
  406814:	ret    
  406815:	int3   
  406816:	int3   
  406817:	int3   
  406818:	rex.W push rbx
  40681a:	sub    rsp,0x40
  40681e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  406827:	mov    rbx,rcx
  40682a:	mov    DWORD PTR [rsp+0x58],0x0
  406832:	lea    rcx,[rsp+0x28]
  406837:	call   0x403150
  40683c:	nop
  40683d:	lea    rcx,[rsp+0x28]
  406842:	call   0x4067b4
  406847:	test   al,al
  406849:	je     0x40688f
  40684b:	lea    rcx,[rsp+0x28]
  406850:	call   0x40362c
  406855:	test   eax,eax
  406857:	js     0x40688f
  406859:	inc    eax
  40685b:	cmp    eax,DWORD PTR [rsp+0x30]
  40685f:	jae    0x406872
  406861:	mov    DWORD PTR [rsp+0x30],eax
  406865:	mov    ecx,eax
  406867:	mov    rax,QWORD PTR [rsp+0x28]
  40686c:	mov    WORD PTR [rax+rcx*2],0x0
  406872:	lea    rdx,[rsp+0x28]
  406877:	mov    rcx,rbx
  40687a:	call   0x403208
  40687f:	nop
  406880:	mov    rcx,QWORD PTR [rsp+0x28]
  406885:	call   0x40215c
  40688a:	mov    rax,rbx
  40688d:	jmp    0x4068ac
  40688f:	lea    rdx,[rip+0x470e2]        # 0x44d978
  406896:	mov    rcx,rbx
  406899:	call   0x4031c0
  40689e:	nop
  40689f:	mov    rcx,QWORD PTR [rsp+0x28]
  4068a4:	call   0x40215c
  4068a9:	mov    rax,rbx
  4068ac:	add    rsp,0x40
  4068b0:	pop    rbx
  4068b1:	ret    
  4068b2:	int3   
  4068b3:	int3   
  4068b4:	int3   
  4068b5:	int3   
  4068b6:	int3   
  4068b7:	int3   
  4068b8:	rex.W push rbp
  4068ba:	sub    rsp,0x20
  4068be:	mov    rbp,rdx
  4068c1:	lea    rcx,[rbp+0x28]
  4068c5:	call   0x401000
  4068ca:	add    rsp,0x20
  4068ce:	pop    rbp
  4068cf:	ret    
  4068d0:	mov    QWORD PTR [rsp+0x8],rcx
  4068d5:	push   rbx
  4068d6:	push   rdi
  4068d7:	mov    rax,rsp
  4068da:	sub    rsp,0x68
  4068de:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  4068e7:	mov    edi,edx
  4068e9:	mov    rbx,rcx
  4068ec:	mov    DWORD PTR [rax+0x28],0x0
  4068f3:	call   0x403150
  4068f8:	mov    DWORD PTR [rsp+0x90],0x1
  406903:	mov    QWORD PTR [rsp+0x30],0x0
  40690c:	mov    DWORD PTR [rsp+0x28],0x0
  406914:	lea    rax,[rsp+0x98]
  40691c:	mov    QWORD PTR [rsp+0x20],rax
  406921:	xor    r9d,r9d
  406924:	mov    r8d,edi
  406927:	xor    edx,edx
  406929:	mov    ecx,0x1300
  40692e:	call   QWORD PTR [rip+0x468a4]        # 0x44d1d8
  406934:	test   eax,eax
  406936:	je     0x406992
  406938:	mov    rdx,QWORD PTR [rsp+0x98]
  406940:	mov    rcx,rbx
  406943:	call   0x403290
  406948:	mov    rcx,QWORD PTR [rsp+0x98]
  406950:	call   QWORD PTR [rip+0x4671a]        # 0x44d070
  406956:	mov    edx,DWORD PTR [rbx+0x8]
  406959:	test   edx,edx
  40695b:	je     0x406992
  40695d:	cmp    edx,0x2
  406960:	jb     0x4069e8
  406966:	mov    r8,QWORD PTR [rbx]
  406969:	lea    eax,[rdx-0x1]
  40696c:	cmp    WORD PTR [r8+rax*2],0xa
  406972:	jne    0x4069e8
  406974:	lea    eax,[rdx-0x2]
  406977:	cmp    WORD PTR [r8+rax*2],0xd
  40697d:	jne    0x4069e8
  40697f:	lea    eax,[rdx-0x2]
  406982:	cmp    eax,edx
  406984:	jae    0x4069e8
  406986:	mov    DWORD PTR [rbx+0x8],eax
  406989:	mov    WORD PTR [r8+rax*2],0x0
  406990:	jmp    0x4069e8
  406992:	lea    r9,[rsp+0x4f]
  406997:	mov    r10d,0x8
  40699d:	mov    r8d,edi
  4069a0:	and    r8d,0xf
  4069a4:	shr    edi,0x4
  4069a7:	lea    edx,[r8+0x30]
  4069ab:	lea    eax,[r8+0x37]
  4069af:	movzx  ecx,al
  4069b2:	movzx  eax,dl
  4069b5:	cmp    r8d,0xa
  4069b9:	cmovb  ecx,eax
  4069bc:	mov    BYTE PTR [r9],cl
  4069bf:	dec    r9
  4069c2:	dec    r10
  4069c5:	jne    0x40699d
  4069c7:	mov    BYTE PTR [rsp+0x50],r10b
  4069cc:	lea    rdx,[rip+0x46fcd]        # 0x44d9a0
  4069d3:	mov    rcx,rbx
  4069d6:	call   0x403560
  4069db:	lea    rdx,[rsp+0x48]
  4069e0:	mov    rcx,rbx
  4069e3:	call   0x403560
  4069e8:	mov    rax,rbx
  4069eb:	add    rsp,0x68
  4069ef:	pop    rdi
  4069f0:	pop    rbx
  4069f1:	ret    
  4069f2:	int3   
  4069f3:	int3   
  4069f4:	int3   
  4069f5:	int3   
  4069f6:	int3   
  4069f7:	int3   
  4069f8:	int3   
  4069f9:	int3   
  4069fa:	int3   
  4069fb:	int3   
  4069fc:	int3   
  4069fd:	int3   
  4069fe:	int3   
  4069ff:	int3   
  406a00:	rex.W push rbp
  406a02:	sub    rsp,0x20
  406a06:	mov    rbp,rdx
  406a09:	mov    eax,DWORD PTR [rbp+0x90]
  406a0f:	and    eax,0x1
  406a12:	test   eax,eax
  406a14:	je     0x406a29
  406a16:	and    DWORD PTR [rbp+0x90],0xfffffffe
  406a1d:	mov    rcx,QWORD PTR [rbp+0x80]
  406a24:	call   0x401000
  406a29:	add    rsp,0x20
  406a2d:	pop    rbp
  406a2e:	ret    
  406a2f:	int3   
  406a30:	rex.W push rbx
  406a32:	push   rbp
  406a33:	push   rsi
  406a34:	push   rdi
  406a35:	push   r12
  406a37:	push   r13
  406a39:	push   r14
  406a3b:	sub    rsp,0x60
  406a3f:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  406a48:	mov    r12,r9
  406a4b:	mov    r13,r8
  406a4e:	mov    r14,rdx
  406a51:	mov    rbp,rcx
  406a54:	mov    rdi,0xffffffffffffffff
  406a5b:	call   0x40a3e4
  406a60:	mov    esi,eax
  406a62:	xor    ebx,ebx
  406a64:	cmp    eax,0x1
  406a67:	je     0x406a9c
  406a69:	mov    QWORD PTR [rsp+0x30],rbx
  406a6e:	mov    DWORD PTR [rsp+0x28],0x2000000
  406a76:	mov    DWORD PTR [rsp+0x20],0x3
  406a7e:	xor    r9d,r9d
  406a81:	mov    edx,0x40000000
  406a86:	lea    r8d,[rdi+0x4]
  406a8a:	mov    rcx,rbp
  406a8d:	call   QWORD PTR [rip+0x4675d]        # 0x44d1f0
  406a93:	mov    rdi,rax
  406a96:	cmp    rax,0xffffffffffffffff
  406a9a:	jne    0x406afc
  406a9c:	cmp    esi,ebx
  406a9e:	je     0x406afc
  406aa0:	lea    rcx,[rsp+0x48]
  406aa5:	call   0x403150
  406aaa:	nop
  406aab:	cmp    esi,0x1
  406aae:	setne  r8b
  406ab2:	lea    rdx,[rsp+0x48]
  406ab7:	mov    rcx,rbp
  406aba:	call   0x40aa60
  406abf:	cmp    al,bl
  406ac1:	je     0x406af2
  406ac3:	mov    QWORD PTR [rsp+0x30],rbx
  406ac8:	mov    DWORD PTR [rsp+0x28],0x2000000
  406ad0:	mov    DWORD PTR [rsp+0x20],0x3
  406ad8:	xor    r9d,r9d
  406adb:	mov    edx,0x40000000
  406ae0:	lea    r8d,[r9+0x3]
  406ae4:	mov    rcx,QWORD PTR [rsp+0x48]
  406ae9:	call   QWORD PTR [rip+0x46701]        # 0x44d1f0
  406aef:	mov    rdi,rax
  406af2:	mov    rcx,QWORD PTR [rsp+0x48]
  406af7:	call   0x40215c
  406afc:	cmp    rdi,0xffffffffffffffff
  406b00:	je     0x406b22
  406b02:	mov    r9,r12
  406b05:	mov    r8,r13
  406b08:	mov    rdx,r14
  406b0b:	mov    rcx,rdi
  406b0e:	call   QWORD PTR [rip+0x466d4]        # 0x44d1e8
  406b14:	cmp    eax,ebx
  406b16:	setne  bl
  406b19:	mov    rcx,rdi
  406b1c:	call   QWORD PTR [rip+0x466be]        # 0x44d1e0
  406b22:	mov    al,bl
  406b24:	add    rsp,0x60
  406b28:	pop    r14
  406b2a:	pop    r13
  406b2c:	pop    r12
  406b2e:	pop    rdi
  406b2f:	pop    rsi
  406b30:	pop    rbp
  406b31:	pop    rbx
  406b32:	ret    
  406b33:	int3   
  406b34:	int3   
  406b35:	int3   
  406b36:	int3   
  406b37:	int3   
  406b38:	int3   
  406b39:	int3   
  406b3a:	int3   
  406b3b:	int3   
  406b3c:	int3   
  406b3d:	int3   
  406b3e:	int3   
  406b3f:	int3   
  406b40:	rex.W push rbp
  406b42:	sub    rsp,0x20
  406b46:	mov    rbp,rdx
  406b49:	lea    rcx,[rbp+0x48]
  406b4d:	call   0x401000
  406b52:	add    rsp,0x20
  406b56:	pop    rbp
  406b57:	ret    
  406b58:	rex.W push rbx
  406b5a:	push   rsi
  406b5b:	push   rdi
  406b5c:	sub    rsp,0x40
  406b60:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  406b69:	mov    esi,edx
  406b6b:	mov    rdi,rcx
  406b6e:	call   0x40a3e4
  406b73:	mov    ebx,eax
  406b75:	cmp    eax,0x1
  406b78:	je     0x406b8d
  406b7a:	mov    edx,esi
  406b7c:	mov    rcx,rdi
  406b7f:	call   QWORD PTR [rip+0x46673]        # 0x44d1f8
  406b85:	test   eax,eax
  406b87:	je     0x406b8d
  406b89:	mov    al,0x1
  406b8b:	jmp    0x406be0
  406b8d:	test   ebx,ebx
  406b8f:	je     0x406bde
  406b91:	lea    rcx,[rsp+0x28]
  406b96:	call   0x403150
  406b9b:	nop
  406b9c:	cmp    ebx,0x1
  406b9f:	setne  r8b
  406ba3:	lea    rdx,[rsp+0x28]
  406ba8:	mov    rcx,rdi
  406bab:	call   0x40aa60
  406bb0:	test   al,al
  406bb2:	je     0x406bd4
  406bb4:	mov    edx,esi
  406bb6:	mov    rcx,QWORD PTR [rsp+0x28]
  406bbb:	call   QWORD PTR [rip+0x46637]        # 0x44d1f8
  406bc1:	test   eax,eax
  406bc3:	setne  bl
  406bc6:	mov    rcx,QWORD PTR [rsp+0x28]
  406bcb:	call   0x40215c
  406bd0:	mov    al,bl
  406bd2:	jmp    0x406be0
  406bd4:	mov    rcx,QWORD PTR [rsp+0x28]
  406bd9:	call   0x40215c
  406bde:	xor    al,al
  406be0:	add    rsp,0x40
  406be4:	pop    rdi
  406be5:	pop    rsi
  406be6:	pop    rbx
  406be7:	ret    
  406be8:	rex.W push rbp
  406bea:	sub    rsp,0x20
  406bee:	mov    rbp,rdx
  406bf1:	lea    rcx,[rbp+0x28]
  406bf5:	call   0x401000
  406bfa:	add    rsp,0x20
  406bfe:	pop    rbp
  406bff:	ret    
  406c00:	rex.W push rbx
  406c02:	push   rdi
  406c03:	sub    rsp,0x48
  406c07:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  406c10:	mov    rdi,rcx
  406c13:	call   0x40a3e4
  406c18:	mov    ebx,eax
  406c1a:	cmp    eax,0x1
  406c1d:	je     0x406c30
  406c1f:	mov    rcx,rdi
  406c22:	call   QWORD PTR [rip+0x465d8]        # 0x44d200
  406c28:	test   eax,eax
  406c2a:	je     0x406c30
  406c2c:	mov    al,0x1
  406c2e:	jmp    0x406c81
  406c30:	test   ebx,ebx
  406c32:	je     0x406c7f
  406c34:	lea    rcx,[rsp+0x28]
  406c39:	call   0x403150
  406c3e:	nop
  406c3f:	cmp    ebx,0x1
  406c42:	setne  r8b
  406c46:	lea    rdx,[rsp+0x28]
  406c4b:	mov    rcx,rdi
  406c4e:	call   0x40aa60
  406c53:	test   al,al
  406c55:	je     0x406c75
  406c57:	mov    rcx,QWORD PTR [rsp+0x28]
  406c5c:	call   QWORD PTR [rip+0x4659e]        # 0x44d200
  406c62:	test   eax,eax
  406c64:	setne  bl
  406c67:	mov    rcx,QWORD PTR [rsp+0x28]
  406c6c:	call   0x40215c
  406c71:	mov    al,bl
  406c73:	jmp    0x406c81
  406c75:	mov    rcx,QWORD PTR [rsp+0x28]
  406c7a:	call   0x40215c
  406c7f:	xor    al,al
  406c81:	add    rsp,0x48
  406c85:	pop    rdi
  406c86:	pop    rbx
  406c87:	ret    
  406c88:	int3   
  406c89:	int3   
  406c8a:	int3   
  406c8b:	int3   
  406c8c:	int3   
  406c8d:	int3   
  406c8e:	int3   
  406c8f:	int3   
  406c90:	rex.W push rbp
  406c92:	sub    rsp,0x20
  406c96:	mov    rbp,rdx
  406c99:	lea    rcx,[rbp+0x28]
  406c9d:	call   0x401000
  406ca2:	add    rsp,0x20
  406ca6:	pop    rbp
  406ca7:	ret    
  406ca8:	rex.W push rbx
  406caa:	push   rbp
  406cab:	push   rsi
  406cac:	push   rdi
  406cad:	push   r12
  406caf:	sub    rsp,0x60
  406cb3:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  406cbc:	mov    rbp,rdx
  406cbf:	mov    r12,rcx
  406cc2:	call   0x40a3e4
  406cc7:	mov    esi,eax
  406cc9:	mov    rcx,rbp
  406ccc:	call   0x40a3e4
  406cd1:	mov    edi,eax
  406cd3:	mov    ebx,0x1
  406cd8:	cmp    esi,ebx
  406cda:	je     0x406cf7
  406cdc:	cmp    eax,ebx
  406cde:	je     0x406cf7
  406ce0:	mov    rdx,rbp
  406ce3:	mov    rcx,r12
  406ce6:	call   QWORD PTR [rip+0x4651c]        # 0x44d208
  406cec:	test   eax,eax
  406cee:	je     0x406cf7
  406cf0:	mov    al,bl
  406cf2:	jmp    0x406d85
  406cf7:	test   esi,esi
  406cf9:	jne    0x406d03
  406cfb:	test   edi,edi
  406cfd:	je     0x406d83
  406d03:	lea    rcx,[rsp+0x48]
  406d08:	call   0x403150
  406d0d:	nop
  406d0e:	lea    rcx,[rsp+0x38]
  406d13:	call   0x403150
  406d18:	nop
  406d19:	cmp    esi,ebx
  406d1b:	je     0x406d21
  406d1d:	cmp    edi,ebx
  406d1f:	jne    0x406d23
  406d21:	xor    bl,bl
  406d23:	mov    BYTE PTR [rsp+0x20],bl
  406d27:	lea    r9,[rsp+0x38]
  406d2c:	lea    r8,[rsp+0x48]
  406d31:	mov    rdx,rbp
  406d34:	mov    rcx,r12
  406d37:	call   0x40aaa0
  406d3c:	test   al,al
  406d3e:	je     0x406d6e
  406d40:	mov    rdx,QWORD PTR [rsp+0x38]
  406d45:	mov    rcx,QWORD PTR [rsp+0x48]
  406d4a:	call   QWORD PTR [rip+0x464b8]        # 0x44d208
  406d50:	test   eax,eax
  406d52:	setne  bl
  406d55:	mov    rcx,QWORD PTR [rsp+0x38]
  406d5a:	call   0x40215c
  406d5f:	nop
  406d60:	mov    rcx,QWORD PTR [rsp+0x48]
  406d65:	call   0x40215c
  406d6a:	mov    al,bl
  406d6c:	jmp    0x406d85
  406d6e:	mov    rcx,QWORD PTR [rsp+0x38]
  406d73:	call   0x40215c
  406d78:	nop
  406d79:	mov    rcx,QWORD PTR [rsp+0x48]
  406d7e:	call   0x40215c
  406d83:	xor    al,al
  406d85:	add    rsp,0x60
  406d89:	pop    r12
  406d8b:	pop    rdi
  406d8c:	pop    rsi
  406d8d:	pop    rbp
  406d8e:	pop    rbx
  406d8f:	ret    
  406d90:	int3   
  406d91:	int3   
  406d92:	int3   
  406d93:	int3   
  406d94:	int3   
  406d95:	int3   
  406d96:	int3   
  406d97:	int3   
  406d98:	rex.W push rbp
  406d9a:	sub    rsp,0x20
  406d9e:	mov    rbp,rdx
  406da1:	lea    rcx,[rbp+0x48]
  406da5:	call   0x401000
  406daa:	add    rsp,0x20
  406dae:	pop    rbp
  406daf:	ret    
  406db0:	int3   
  406db1:	int3   
  406db2:	int3   
  406db3:	int3   
  406db4:	int3   
  406db5:	int3   
  406db6:	int3   
  406db7:	int3   
  406db8:	rex.W push rbp
  406dba:	sub    rsp,0x20
  406dbe:	mov    rbp,rdx
  406dc1:	lea    rcx,[rbp+0x38]
  406dc5:	call   0x401000
  406dca:	add    rsp,0x20
  406dce:	pop    rbp
  406dcf:	ret    
  406dd0:	rex.W push rbx
  406dd2:	push   rbp
  406dd3:	push   rsi
  406dd4:	push   rdi
  406dd5:	push   r12
  406dd7:	push   r13
  406dd9:	sub    rsp,0x68
  406ddd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  406de6:	mov    rbp,rdx
  406de9:	mov    r12,rcx
  406dec:	lea    rcx,[rip+0x46c65]        # 0x44da58
  406df3:	call   QWORD PTR [rip+0x4641f]        # 0x44d218
  406df9:	mov    rcx,rax
  406dfc:	lea    rdx,[rip+0x46c45]        # 0x44da48
  406e03:	call   QWORD PTR [rip+0x46407]        # 0x44d210
  406e09:	mov    r13,rax
  406e0c:	test   rax,rax
  406e0f:	je     0x406edb
  406e15:	mov    rcx,r12
  406e18:	call   0x40a3e4
  406e1d:	mov    esi,eax
  406e1f:	mov    rcx,rbp
  406e22:	call   0x40a3e4
  406e27:	mov    edi,eax
  406e29:	mov    ebx,0x1
  406e2e:	cmp    esi,ebx
  406e30:	je     0x406e4d
  406e32:	cmp    eax,ebx
  406e34:	je     0x406e4d
  406e36:	xor    r8d,r8d
  406e39:	mov    rdx,rbp
  406e3c:	mov    rcx,r12
  406e3f:	call   r13
  406e42:	test   eax,eax
  406e44:	je     0x406e4d
  406e46:	mov    al,bl
  406e48:	jmp    0x406edb
  406e4d:	test   esi,esi
  406e4f:	jne    0x406e59
  406e51:	test   edi,edi
  406e53:	je     0x406ed9
  406e59:	lea    rcx,[rsp+0x48]
  406e5e:	call   0x403150
  406e63:	nop
  406e64:	lea    rcx,[rsp+0x38]
  406e69:	call   0x403150
  406e6e:	nop
  406e6f:	cmp    esi,ebx
  406e71:	je     0x406e77
  406e73:	cmp    edi,ebx
  406e75:	jne    0x406e79
  406e77:	xor    bl,bl
  406e79:	mov    BYTE PTR [rsp+0x20],bl
  406e7d:	lea    r9,[rsp+0x38]
  406e82:	lea    r8,[rsp+0x48]
  406e87:	mov    rdx,rbp
  406e8a:	mov    rcx,r12
  406e8d:	call   0x40aaa0
  406e92:	test   al,al
  406e94:	je     0x406ec4
  406e96:	xor    r8d,r8d
  406e99:	mov    rdx,QWORD PTR [rsp+0x38]
  406e9e:	mov    rcx,QWORD PTR [rsp+0x48]
  406ea3:	call   r13
  406ea6:	test   eax,eax
  406ea8:	setne  bl
  406eab:	mov    rcx,QWORD PTR [rsp+0x38]
  406eb0:	call   0x40215c
  406eb5:	nop
  406eb6:	mov    rcx,QWORD PTR [rsp+0x48]
  406ebb:	call   0x40215c
  406ec0:	mov    al,bl
  406ec2:	jmp    0x406edb
  406ec4:	mov    rcx,QWORD PTR [rsp+0x38]
  406ec9:	call   0x40215c
  406ece:	nop
  406ecf:	mov    rcx,QWORD PTR [rsp+0x48]
  406ed4:	call   0x40215c
  406ed9:	xor    al,al
  406edb:	add    rsp,0x68
  406edf:	pop    r13
  406ee1:	pop    r12
  406ee3:	pop    rdi
  406ee4:	pop    rsi
  406ee5:	pop    rbp
  406ee6:	pop    rbx
  406ee7:	ret    
  406ee8:	int3   
  406ee9:	int3   
  406eea:	int3   
  406eeb:	int3   
  406eec:	int3   
  406eed:	int3   
  406eee:	int3   
  406eef:	int3   
  406ef0:	rex.W push rbp
  406ef2:	sub    rsp,0x20
  406ef6:	mov    rbp,rdx
  406ef9:	lea    rcx,[rbp+0x48]
  406efd:	call   0x401000
  406f02:	add    rsp,0x20
  406f06:	pop    rbp
  406f07:	ret    
  406f08:	int3   
  406f09:	int3   
  406f0a:	int3   
  406f0b:	int3   
  406f0c:	int3   
  406f0d:	int3   
  406f0e:	int3   
  406f0f:	int3   
  406f10:	rex.W push rbp
  406f12:	sub    rsp,0x20
  406f16:	mov    rbp,rdx
  406f19:	lea    rcx,[rbp+0x38]
  406f1d:	call   0x401000
  406f22:	add    rsp,0x20
  406f26:	pop    rbp
  406f27:	ret    
  406f28:	rex.W push rbx
  406f2a:	push   rdi
  406f2b:	sub    rsp,0x48
  406f2f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  406f38:	mov    rdi,rcx
  406f3b:	call   0x40a3e4
  406f40:	mov    ebx,eax
  406f42:	cmp    eax,0x1
  406f45:	je     0x406f67
  406f47:	xor    edx,edx
  406f49:	mov    rcx,rdi
  406f4c:	call   QWORD PTR [rip+0x462ce]        # 0x44d220
  406f52:	test   eax,eax
  406f54:	je     0x406f5a
  406f56:	mov    al,0x1
  406f58:	jmp    0x406fba
  406f5a:	call   QWORD PTR [rip+0x46240]        # 0x44d1a0
  406f60:	cmp    eax,0xb7
  406f65:	je     0x406fb8
  406f67:	test   ebx,ebx
  406f69:	je     0x406fb8
  406f6b:	lea    rcx,[rsp+0x28]
  406f70:	call   0x403150
  406f75:	nop
  406f76:	cmp    ebx,0x1
  406f79:	setne  r8b
  406f7d:	lea    rdx,[rsp+0x28]
  406f82:	mov    rcx,rdi
  406f85:	call   0x40aa60
  406f8a:	test   al,al
  406f8c:	je     0x406fae
  406f8e:	xor    edx,edx
  406f90:	mov    rcx,QWORD PTR [rsp+0x28]
  406f95:	call   QWORD PTR [rip+0x46285]        # 0x44d220
  406f9b:	test   eax,eax
  406f9d:	setne  bl
  406fa0:	mov    rcx,QWORD PTR [rsp+0x28]
  406fa5:	call   0x40215c
  406faa:	mov    al,bl
  406fac:	jmp    0x406fba
  406fae:	mov    rcx,QWORD PTR [rsp+0x28]
  406fb3:	call   0x40215c
  406fb8:	xor    al,al
  406fba:	add    rsp,0x48
  406fbe:	pop    rdi
  406fbf:	pop    rbx
  406fc0:	ret    
  406fc1:	int3   
  406fc2:	int3   
  406fc3:	int3   
  406fc4:	int3   
  406fc5:	int3   
  406fc6:	int3   
  406fc7:	int3   
  406fc8:	rex.W push rbp
  406fca:	sub    rsp,0x20
  406fce:	mov    rbp,rdx
  406fd1:	lea    rcx,[rbp+0x28]
  406fd5:	call   0x401000
  406fda:	add    rsp,0x20
  406fde:	pop    rbp
  406fdf:	ret    
  406fe0:	mov    rcx,QWORD PTR [rcx+0x28]
  406fe4:	jmp    0x40215c
  406fe9:	int3   
  406fea:	int3   
  406feb:	int3   
  406fec:	rex.W push rbx
  406fee:	push   rdi
  406fef:	sub    rsp,0x48
  406ff3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  406ffc:	mov    rbx,rcx
  406fff:	call   0x407fe4
  407004:	cmp    eax,0xffffffff
  407007:	je     0x407022
  407009:	test   al,0x10
  40700b:	jne    0x407022
  40700d:	test   al,0x1
  40700f:	je     0x407022
  407011:	and    eax,0xfffffffe
  407014:	mov    edx,eax
  407016:	mov    rcx,rbx
  407019:	call   0x406b58
  40701e:	test   al,al
  407020:	je     0x407093
  407022:	mov    rcx,rbx
  407025:	call   0x40a3e4
  40702a:	mov    edi,eax
  40702c:	cmp    eax,0x1
  40702f:	je     0x407042
  407031:	mov    rcx,rbx
  407034:	call   QWORD PTR [rip+0x461ee]        # 0x44d228
  40703a:	test   eax,eax
  40703c:	je     0x407042
  40703e:	mov    al,0x1
  407040:	jmp    0x407093
  407042:	test   edi,edi
  407044:	je     0x407091
  407046:	lea    rcx,[rsp+0x28]
  40704b:	call   0x403150
  407050:	nop
  407051:	cmp    edi,0x1
  407054:	setne  r8b
  407058:	lea    rdx,[rsp+0x28]
  40705d:	mov    rcx,rbx
  407060:	call   0x40aa60
  407065:	test   al,al
  407067:	je     0x407087
  407069:	mov    rcx,QWORD PTR [rsp+0x28]
  40706e:	call   QWORD PTR [rip+0x461b4]        # 0x44d228
  407074:	test   eax,eax
  407076:	setne  bl
  407079:	mov    rcx,QWORD PTR [rsp+0x28]
  40707e:	call   0x40215c
  407083:	mov    al,bl
  407085:	jmp    0x407093
  407087:	mov    rcx,QWORD PTR [rsp+0x28]
  40708c:	call   0x40215c
  407091:	xor    al,al
  407093:	add    rsp,0x48
  407097:	pop    rdi
  407098:	pop    rbx
  407099:	ret    
  40709a:	int3   
  40709b:	int3   
  40709c:	rex.W push rbp
  40709e:	sub    rsp,0x20
  4070a2:	mov    rbp,rdx
  4070a5:	lea    rcx,[rbp+0x28]
  4070a9:	call   0x401000
  4070ae:	add    rsp,0x20
  4070b2:	pop    rbp
  4070b3:	ret    
  4070b4:	jmp    0x40adac
  4070b9:	int3   
  4070ba:	int3   
  4070bb:	int3   
  4070bc:	sub    rsp,0x28
  4070c0:	call   QWORD PTR [rip+0x4616a]        # 0x44d230
  4070c6:	xor    ecx,ecx
  4070c8:	cmp    eax,ecx
  4070ca:	setne  al
  4070cd:	add    rsp,0x28
  4070d1:	ret    
  4070d2:	int3   
  4070d3:	int3   
  4070d4:	rex.W push rbx
  4070d6:	push   rbp
  4070d7:	push   rsi
  4070d8:	push   rdi
  4070d9:	sub    rsp,0x28
  4070dd:	mov    rbp,r8
  4070e0:	mov    rbx,rdx
  4070e3:	mov    rdi,rcx
  4070e6:	call   0x40adac
  4070eb:	test   al,al
  4070ed:	mov    sil,al
  4070f0:	jne    0x4070fd
  4070f2:	mov    rdx,rdi
  4070f5:	mov    rcx,rbx
  4070f8:	call   0x403290
  4070fd:	mov    rcx,rbx
  407100:	call   0x40362c
  407105:	mov    rcx,rbp
  407108:	lea    edi,[rax+0x1]
  40710b:	mov    rax,QWORD PTR [rbx]
  40710e:	lea    rdx,[rax+rdi*2]
  407112:	call   0x403290
  407117:	cmp    edi,DWORD PTR [rbx+0x8]
  40711a:	jae    0x407128
  40711c:	mov    rax,QWORD PTR [rbx]
  40711f:	mov    DWORD PTR [rbx+0x8],edi
  407122:	mov    WORD PTR [rax+rdi*2],0x0
  407128:	mov    al,sil
  40712b:	add    rsp,0x28
  40712f:	pop    rdi
  407130:	pop    rsi
  407131:	pop    rbp
  407132:	pop    rbx
  407133:	ret    
  407134:	rex.W push rbx
  407136:	push   rdi
  407137:	sub    rsp,0x48
  40713b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  407144:	mov    rbx,rdx
  407147:	mov    rdi,rcx
  40714a:	lea    rcx,[rsp+0x28]
  40714f:	call   0x403150
  407154:	nop
  407155:	lea    r8,[rsp+0x28]
  40715a:	mov    rdx,rbx
  40715d:	mov    rcx,rdi
  407160:	call   0x4070d4
  407165:	mov    bl,al
  407167:	mov    rcx,QWORD PTR [rsp+0x28]
  40716c:	call   0x40215c
  407171:	mov    al,bl
  407173:	add    rsp,0x48
  407177:	pop    rdi
  407178:	pop    rbx
  407179:	ret    
  40717a:	int3   
  40717b:	int3   
  40717c:	int3   
  40717d:	int3   
  40717e:	int3   
  40717f:	int3   
  407180:	int3   
  407181:	int3   
  407182:	int3   
  407183:	int3   
  407184:	rex.W push rbp
  407186:	sub    rsp,0x20
  40718a:	mov    rbp,rdx
  40718d:	lea    rcx,[rbp+0x28]
  407191:	call   0x401000
  407196:	add    rsp,0x20
  40719a:	pop    rbp
  40719b:	ret    
  40719c:	rex.W push rbx
  40719e:	push   rsi
  40719f:	push   rdi
  4071a0:	sub    rsp,0x230
  4071a7:	mov    rax,QWORD PTR [rcx]
  4071aa:	xor    esi,esi
  4071ac:	mov    rdi,rcx
  4071af:	mov    DWORD PTR [rcx+0x8],esi
  4071b2:	lea    rdx,[rsp+0x20]
  4071b7:	mov    ecx,0x105
  4071bc:	mov    WORD PTR [rax],si
  4071bf:	mov    WORD PTR [rsp+0x20],si
  4071c4:	call   QWORD PTR [rip+0x46076]        # 0x44d240
  4071ca:	lea    rdx,[rsp+0x20]
  4071cf:	mov    rcx,rdi
  4071d2:	mov    ebx,eax
  4071d4:	call   0x403290
  4071d9:	lea    r11d,[rbx-0x1]
  4071dd:	cmp    r11d,0x103
  4071e4:	setbe  al
  4071e7:	add    rsp,0x230
  4071ee:	pop    rdi
  4071ef:	pop    rsi
  4071f0:	pop    rbx
  4071f1:	ret    
  4071f2:	int3   
  4071f3:	int3   
  4071f4:	rex.W push rbx
  4071f6:	push   rbp
  4071f7:	push   rsi
  4071f8:	push   rdi
  4071f9:	push   r12
  4071fb:	push   r13
  4071fd:	push   r14
  4071ff:	push   r15
  407201:	sub    rsp,0x48
  407205:	mov    rbp,r9
  407208:	mov    rsi,r8
  40720b:	mov    r12b,dl
  40720e:	mov    r14,rcx
  407211:	call   QWORD PTR [rip+0x46049]        # 0x44d260
  407217:	mov    ebx,eax
  407219:	shl    ebx,0x2
  40721c:	call   QWORD PTR [rip+0x46036]        # 0x44d258
  407222:	mov    edi,eax
  407224:	xor    edi,ebx
  407226:	shl    edi,0xc
  407229:	call   QWORD PTR [rip+0x46021]        # 0x44d250
  40722f:	mov    r13d,eax
  407232:	xor    r13d,edi
  407235:	xor    edi,edi
  407237:	lea    r15d,[rdi+0x1]
  40723b:	mov    ebx,edi
  40723d:	mov    rdx,r14
  407240:	mov    rcx,rsi
  407243:	call   0x403290
  407248:	cmp    r12b,dil
  40724b:	je     0x4072cc
  40724d:	mov    r9d,r13d
  407250:	mov    r8,rdi
  407253:	mov    r10d,0x8
  407259:	mov    edx,r9d
  40725c:	shr    r9d,0x4
  407260:	and    edx,0xf
  407263:	cmp    edx,0xa
  407266:	lea    ecx,[rdx+0x30]
  407269:	lea    eax,[rdx+0x37]
  40726c:	cmovb  ax,cx
  407270:	mov    WORD PTR [rsp+r8*2+0x20],ax
  407276:	add    r8,r15
  407279:	sub    r10,r15
  40727c:	jne    0x407259
  40727e:	cmp    rbp,rdi
  407281:	mov    WORD PTR [rsp+r8*2+0x20],di
  407287:	je     0x4072af
  407289:	mov    eax,DWORD PTR [rsi+0x8]
  40728c:	cmp    DWORD PTR [rsi+0xc],eax
  40728f:	jne    0x407299
  407291:	mov    rcx,rsi
  407294:	call   0x402f2c
  407299:	mov    edx,DWORD PTR [rsi+0x8]
  40729c:	mov    rcx,QWORD PTR [rsi]
  40729f:	mov    WORD PTR [rcx+rdx*2],0x2e
  4072a5:	add    edx,r15d
  4072a8:	mov    WORD PTR [rcx+rdx*2],di
  4072ac:	mov    DWORD PTR [rsi+0x8],edx
  4072af:	lea    rdx,[rsp+0x20]
  4072b4:	mov    rcx,rsi
  4072b7:	call   0x4033f0
  4072bc:	call   QWORD PTR [rip+0x45f96]        # 0x44d258
  4072c2:	add    eax,0x2
  4072c5:	cmove  eax,r15d
  4072c9:	add    r13d,eax
  4072cc:	cmp    rbp,rdi
  4072cf:	mov    r12b,r15b
  4072d2:	je     0x4072e3
  4072d4:	lea    rdx,[rip+0x467fd]        # 0x44dad8
  4072db:	mov    rcx,rsi
  4072de:	call   0x4033f0
  4072e3:	mov    rcx,QWORD PTR [rsi]
  4072e6:	call   0x408a3c
  4072eb:	cmp    al,dil
  4072ee:	je     0x4072fd
  4072f0:	mov    ecx,0xb7
  4072f5:	call   QWORD PTR [rip+0x45f4d]        # 0x44d248
  4072fb:	jmp    0x407331
  4072fd:	cmp    rbp,rdi
  407300:	je     0x407312
  407302:	mov    rdx,QWORD PTR [rsi]
  407305:	xor    r8d,r8d
  407308:	mov    rcx,rbp
  40730b:	call   0x4094d8
  407310:	jmp    0x40731a
  407312:	mov    rcx,QWORD PTR [rsi]
  407315:	call   0x406f28
  40731a:	cmp    al,dil
  40731d:	jne    0x407359
  40731f:	call   QWORD PTR [rip+0x45e7b]        # 0x44d1a0
  407325:	cmp    eax,0x50
  407328:	je     0x407331
  40732a:	cmp    eax,0xb7
  40732f:	jne    0x40733d
  407331:	add    ebx,r15d
  407334:	cmp    ebx,0x64
  407337:	jb     0x40723d
  40733d:	mov    rax,QWORD PTR [rsi]
  407340:	mov    DWORD PTR [rsi+0x8],edi
  407343:	mov    WORD PTR [rax],di
  407346:	xor    al,al
  407348:	add    rsp,0x48
  40734c:	pop    r15
  40734e:	pop    r14
  407350:	pop    r13
  407352:	pop    r12
  407354:	pop    rdi
  407355:	pop    rsi
  407356:	pop    rbp
  407357:	pop    rbx
  407358:	ret    
  407359:	mov    al,r15b
  40735c:	jmp    0x407348
  40735e:	int3   
  40735f:	int3   
  407360:	rex.W push rbx
  407362:	push   rbp
  407363:	push   rsi
  407364:	push   rdi
  407365:	push   r12
  407367:	push   r13
  407369:	sub    rsp,0xd8
  407370:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
  407379:	mov    rbx,rcx
  40737c:	call   0x407fe4
  407381:	cmp    eax,0xffffffff
  407384:	je     0x407391
  407386:	test   al,0x10
  407388:	je     0x407391
  40738a:	mov    al,0x1
  40738c:	jmp    0x4076e1
  407391:	mov    rcx,rbx
  407394:	call   0x40a014
  407399:	test   al,al
  40739b:	je     0x4073a4
  40739d:	xor    al,al
  40739f:	jmp    0x4076e1
  4073a4:	mov    rcx,rbx
  4073a7:	call   0x40a168
  4073ac:	mov    r12d,eax
  4073af:	mov    rdx,rbx
  4073b2:	lea    rcx,[rsp+0x20]
  4073b7:	call   0x4031c0
  4073bc:	nop
  4073bd:	lea    rcx,[rsp+0x20]
  4073c2:	call   0x40362c
  4073c7:	mov    esi,0x1
  4073cc:	test   eax,eax
  4073ce:	js     0x4073f3
  4073d0:	mov    edx,DWORD PTR [rsp+0x28]
  4073d4:	lea    ecx,[rdx-0x1]
  4073d7:	cmp    eax,ecx
  4073d9:	jne    0x4073f3
  4073db:	cmp    edx,esi
  4073dd:	jne    0x4073e4
  4073df:	jmp    0x407689
  4073e4:	mov    DWORD PTR [rsp+0x28],ecx
  4073e8:	mov    rax,QWORD PTR [rsp+0x20]
  4073ed:	mov    WORD PTR [rax+rcx*2],0x0
  4073f3:	lea    rdx,[rsp+0x20]
  4073f8:	lea    rcx,[rsp+0x30]
  4073fd:	call   0x403208
  407402:	nop
  407403:	mov    edi,DWORD PTR [rsp+0x28]
  407407:	mov    r13d,0xb7
  40740d:	mov    rbx,QWORD PTR [rsp+0x20]
  407412:	mov    rcx,rbx
  407415:	call   0x40a3e4
  40741a:	mov    ebp,eax
  40741c:	cmp    eax,esi
  40741e:	je     0x407442
  407420:	xor    edx,edx
  407422:	mov    rcx,rbx
  407425:	call   QWORD PTR [rip+0x45df5]        # 0x44d220
  40742b:	test   eax,eax
  40742d:	jne    0x4075f8
  407433:	call   QWORD PTR [rip+0x45d67]        # 0x44d1a0
  407439:	cmp    eax,r13d
  40743c:	je     0x407515
  407442:	test   ebp,ebp
  407444:	je     0x407515
  40744a:	lea    rcx,[rsp+0x40]
  40744f:	call   0x403150
  407454:	nop
  407455:	cmp    ebp,esi
  407457:	setne  r8b
  40745b:	lea    rdx,[rsp+0x40]
  407460:	mov    rcx,rbx
  407463:	call   0x40aa60
  407468:	test   al,al
  40746a:	je     0x40750b
  407470:	xor    edx,edx
  407472:	mov    rcx,QWORD PTR [rsp+0x40]
  407477:	call   QWORD PTR [rip+0x45da3]        # 0x44d220
  40747d:	test   eax,eax
  40747f:	jne    0x4075ee
  407485:	call   QWORD PTR [rip+0x45d15]        # 0x44d1a0
  40748b:	cmp    eax,r13d
  40748e:	je     0x40749f
  407490:	mov    rcx,QWORD PTR [rsp+0x40]
  407495:	call   0x40215c
  40749a:	jmp    0x40757c
  40749f:	lea    rcx,[rsp+0x58]
  4074a4:	call   0x407fc0
  4074a9:	lea    rcx,[rsp+0x80]
  4074b1:	call   0x403150
  4074b6:	nop
  4074b7:	mov    rdx,QWORD PTR [rsp+0x40]
  4074bc:	lea    rcx,[rsp+0x58]
  4074c1:	call   0x408134
  4074c6:	test   al,al
  4074c8:	jne    0x4074e7
  4074ca:	mov    rcx,QWORD PTR [rsp+0x80]
  4074d2:	call   0x40215c
  4074d7:	nop
  4074d8:	mov    rcx,QWORD PTR [rsp+0x40]
  4074dd:	call   0x40215c
  4074e2:	jmp    0x40757c
  4074e7:	mov    ebx,DWORD PTR [rsp+0x78]
  4074eb:	shr    ebx,0x4
  4074ee:	and    bl,sil
  4074f1:	mov    rcx,QWORD PTR [rsp+0x80]
  4074f9:	call   0x40215c
  4074fe:	nop
  4074ff:	mov    rcx,QWORD PTR [rsp+0x40]
  407504:	call   0x40215c
  407509:	jmp    0x407578
  40750b:	mov    rcx,QWORD PTR [rsp+0x40]
  407510:	call   0x40215c
  407515:	call   QWORD PTR [rip+0x45c85]        # 0x44d1a0
  40751b:	cmp    eax,r13d
  40751e:	jne    0x40757c
  407520:	lea    rcx,[rsp+0x90]
  407528:	call   0x407fc0
  40752d:	lea    rcx,[rsp+0xb8]
  407535:	call   0x403150
  40753a:	nop
  40753b:	mov    rdx,rbx
  40753e:	lea    rcx,[rsp+0x90]
  407546:	call   0x408134
  40754b:	test   al,al
  40754d:	jne    0x40755e
  40754f:	mov    rcx,QWORD PTR [rsp+0xb8]
  407557:	call   0x40215c
  40755c:	jmp    0x40757c
  40755e:	mov    ebx,DWORD PTR [rsp+0xb0]
  407565:	shr    ebx,0x4
  407568:	and    bl,sil
  40756b:	mov    rcx,QWORD PTR [rsp+0xb8]
  407573:	call   0x40215c
  407578:	test   bl,bl
  40757a:	jne    0x4075f8
  40757c:	call   QWORD PTR [rip+0x45c1e]        # 0x44d1a0
  407582:	cmp    eax,r13d
  407585:	je     0x40767b
  40758b:	lea    rcx,[rsp+0x20]
  407590:	call   0x40362c
  407595:	mov    edi,eax
  407597:	test   eax,eax
  407599:	js     0x4076ca
  40759f:	test   eax,eax
  4075a1:	je     0x4076ca
  4075a7:	mov    rbx,QWORD PTR [rsp+0x20]
  4075ac:	cmp    edi,esi
  4075ae:	jne    0x4075c4
  4075b0:	cmp    WORD PTR [rbx],0x5c
  4075b4:	je     0x407698
  4075ba:	cmp    WORD PTR [rbx],0x2f
  4075be:	je     0x407698
  4075c4:	lea    eax,[rdi+0x1]
  4075c7:	cmp    r12d,eax
  4075ca:	jae    0x4076b1
  4075d0:	cmp    edi,DWORD PTR [rsp+0x28]
  4075d4:	jae    0x407412
  4075da:	mov    DWORD PTR [rsp+0x28],edi
  4075de:	mov    WORD PTR [rbx+rdi*2],0x0
  4075e4:	mov    rbx,QWORD PTR [rsp+0x20]
  4075e9:	jmp    0x407412
  4075ee:	mov    rcx,QWORD PTR [rsp+0x40]
  4075f3:	call   0x40215c
  4075f8:	cmp    edi,DWORD PTR [rsp+0x38]
  4075fc:	jge    0x407661
  4075fe:	lea    ecx,[rdi+0x1]
  407601:	mov    rax,QWORD PTR [rsp+0x30]
  407606:	lea    rcx,[rax+rcx*2]
  40760a:	call   0x409d3c
  40760f:	test   eax,eax
  407611:	jns    0x407619
  407613:	mov    edi,DWORD PTR [rsp+0x38]
  407617:	jmp    0x40761d
  407619:	lea    edi,[rdi+rax*1+0x1]
  40761d:	mov    r8d,edi
  407620:	mov    rdx,QWORD PTR [rsp+0x30]
  407625:	lea    rcx,[rsp+0x20]
  40762a:	call   0x403488
  40762f:	mov    rcx,QWORD PTR [rsp+0x20]
  407634:	call   0x406f28
  407639:	test   al,al
  40763b:	je     0x407645
  40763d:	cmp    edi,DWORD PTR [rsp+0x38]
  407641:	jl     0x4075fe
  407643:	jmp    0x407661
  407645:	mov    rcx,QWORD PTR [rsp+0x30]
  40764a:	call   0x40215c
  40764f:	nop
  407650:	mov    rcx,QWORD PTR [rsp+0x20]
  407655:	call   0x40215c
  40765a:	xor    al,al
  40765c:	jmp    0x4076e1
  407661:	mov    rcx,QWORD PTR [rsp+0x30]
  407666:	call   0x40215c
  40766b:	nop
  40766c:	mov    rcx,QWORD PTR [rsp+0x20]
  407671:	call   0x40215c
  407676:	mov    al,sil
  407679:	jmp    0x4076e1
  40767b:	mov    rcx,QWORD PTR [rsp+0x30]
  407680:	call   0x40215c
  407685:	nop
  407686:	xor    sil,sil
  407689:	mov    rcx,QWORD PTR [rsp+0x20]
  40768e:	call   0x40215c
  407693:	mov    al,sil
  407696:	jmp    0x4076e1
  407698:	mov    rcx,QWORD PTR [rsp+0x30]
  40769d:	call   0x40215c
  4076a2:	nop
  4076a3:	mov    rcx,QWORD PTR [rsp+0x20]
  4076a8:	call   0x40215c
  4076ad:	xor    al,al
  4076af:	jmp    0x4076e1
  4076b1:	mov    rcx,QWORD PTR [rsp+0x30]
  4076b6:	call   0x40215c
  4076bb:	nop
  4076bc:	mov    rcx,QWORD PTR [rsp+0x20]
  4076c1:	call   0x40215c
  4076c6:	xor    al,al
  4076c8:	jmp    0x4076e1
  4076ca:	mov    rcx,QWORD PTR [rsp+0x30]
  4076cf:	call   0x40215c
  4076d4:	nop
  4076d5:	mov    rcx,QWORD PTR [rsp+0x20]
  4076da:	call   0x40215c
  4076df:	xor    al,al
  4076e1:	add    rsp,0xd8
  4076e8:	pop    r13
  4076ea:	pop    r12
  4076ec:	pop    rdi
  4076ed:	pop    rsi
  4076ee:	pop    rbp
  4076ef:	pop    rbx
  4076f0:	ret    
  4076f1:	int3   
  4076f2:	int3   
  4076f3:	int3   
  4076f4:	int3   
  4076f5:	int3   
  4076f6:	int3   
  4076f7:	int3   
  4076f8:	int3   
  4076f9:	int3   
  4076fa:	int3   
  4076fb:	int3   
  4076fc:	int3   
  4076fd:	int3   
  4076fe:	int3   
  4076ff:	int3   
  407700:	rex.W push rbp
  407702:	sub    rsp,0x20
  407706:	mov    rbp,rdx
  407709:	lea    rcx,[rbp+0x20]
  40770d:	call   0x401000
  407712:	add    rsp,0x20
  407716:	pop    rbp
  407717:	ret    
  407718:	int3   
  407719:	int3   
  40771a:	int3   
  40771b:	int3   
  40771c:	int3   
  40771d:	int3   
  40771e:	int3   
  40771f:	int3   
  407720:	rex.W push rbp
  407722:	sub    rsp,0x20
  407726:	mov    rbp,rdx
  407729:	lea    rcx,[rbp+0x30]
  40772d:	call   0x401000
  407732:	add    rsp,0x20
  407736:	pop    rbp
  407737:	ret    
  407738:	int3   
  407739:	int3   
  40773a:	int3   
  40773b:	int3   
  40773c:	int3   
  40773d:	int3   
  40773e:	int3   
  40773f:	int3   
  407740:	rex.W push rbp
  407742:	sub    rsp,0x20
  407746:	mov    rbp,rdx
  407749:	lea    rcx,[rbp+0x40]
  40774d:	call   0x401000
  407752:	add    rsp,0x20
  407756:	pop    rbp
  407757:	ret    
  407758:	int3   
  407759:	int3   
  40775a:	int3   
  40775b:	int3   
  40775c:	int3   
  40775d:	int3   
  40775e:	int3   
  40775f:	int3   
  407760:	rex.W push rbp
  407762:	sub    rsp,0x20
  407766:	mov    rbp,rdx
  407769:	lea    rcx,[rbp+0x58]
  40776d:	call   0x406fe0
  407772:	add    rsp,0x20
  407776:	pop    rbp
  407777:	ret    
  407778:	int3   
  407779:	int3   
  40777a:	int3   
  40777b:	int3   
  40777c:	int3   
  40777d:	int3   
  40777e:	int3   
  40777f:	int3   
  407780:	rex.W push rbp
  407782:	sub    rsp,0x20
  407786:	mov    rbp,rdx
  407789:	lea    rcx,[rbp+0x90]
  407790:	call   0x406fe0
  407795:	add    rsp,0x20
  407799:	pop    rbp
  40779a:	ret    
  40779b:	int3   
  40779c:	rex.W push rbx
  40779e:	push   rbp
  40779f:	push   rsi
  4077a0:	push   rdi
  4077a1:	sub    rsp,0x98
  4077a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4077b1:	mov    rdi,rcx
  4077b4:	mov    esi,0x1
  4077b9:	lea    rcx,[rsp+0x50]
  4077be:	call   0x407fc0
  4077c3:	lea    rcx,[rsp+0x78]
  4077c8:	call   0x403150
  4077cd:	nop
  4077ce:	mov    rdx,QWORD PTR [rdi]
  4077d1:	lea    rcx,[rsp+0x50]
  4077d6:	call   0x408134
  4077db:	xor    ebp,ebp
  4077dd:	cmp    al,bpl
  4077e0:	jne    0x4077f3
  4077e2:	mov    rcx,QWORD PTR [rsp+0x78]
  4077e7:	call   0x40215c
  4077ec:	xor    al,al
  4077ee:	jmp    0x4079f9
  4077f3:	mov    ecx,DWORD PTR [rsp+0x70]
  4077f7:	mov    eax,ecx
  4077f9:	shr    eax,0x4
  4077fc:	test   sil,al
  4077ff:	jne    0x40781e
  407801:	mov    ecx,0x10b
  407806:	call   QWORD PTR [rip+0x45a3c]        # 0x44d248
  40780c:	nop
  40780d:	mov    rcx,QWORD PTR [rsp+0x78]
  407812:	call   0x40215c
  407817:	xor    al,al
  407819:	jmp    0x4079f9
  40781e:	shr    ecx,0xa
  407821:	test   sil,cl
  407824:	movzx  ebx,sil
  407828:	cmovne ebx,ebp
  40782b:	mov    rcx,QWORD PTR [rsp+0x78]
  407830:	call   0x40215c
  407835:	cmp    bl,bpl
  407838:	je     0x4079de
  40783e:	mov    rdx,rdi
  407841:	lea    rcx,[rsp+0x28]
  407846:	call   0x403208
  40784b:	nop
  40784c:	mov    ebx,DWORD PTR [rsp+0x30]
  407850:	cmp    DWORD PTR [rsp+0x34],ebx
  407854:	jne    0x407864
  407856:	lea    rcx,[rsp+0x28]
  40785b:	call   0x402f2c
  407860:	mov    ebx,DWORD PTR [rsp+0x30]
  407864:	mov    rcx,QWORD PTR [rsp+0x28]
  407869:	mov    eax,ebx
  40786b:	mov    WORD PTR [rcx+rax*2],0x5c
  407871:	add    ebx,esi
  407873:	mov    WORD PTR [rcx+rbx*2],bp
  407877:	mov    edx,ebx
  407879:	mov    DWORD PTR [rsp+0x30],ebx
  40787d:	cmp    DWORD PTR [rsp+0x34],ebx
  407881:	jne    0x407891
  407883:	lea    rcx,[rsp+0x28]
  407888:	call   0x402f2c
  40788d:	mov    edx,DWORD PTR [rsp+0x30]
  407891:	mov    rcx,QWORD PTR [rsp+0x28]
  407896:	mov    eax,edx
  407898:	mov    WORD PTR [rcx+rax*2],0x2a
  40789e:	add    edx,esi
  4078a0:	mov    WORD PTR [rcx+rdx*2],bp
  4078a4:	mov    DWORD PTR [rsp+0x30],edx
  4078a8:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
  4078b1:	lea    rdx,[rsp+0x28]
  4078b6:	lea    rcx,[rsp+0x40]
  4078bb:	call   0x403208
  4078c0:	nop
  4078c1:	lea    rcx,[rsp+0x50]
  4078c6:	call   0x407fc0
  4078cb:	lea    rcx,[rsp+0x78]
  4078d0:	call   0x403150
  4078d5:	nop
  4078d6:	movsxd rsi,ebx
  4078d9:	lea    rdx,[rsp+0x50]
  4078de:	lea    rcx,[rsp+0x38]
  4078e3:	call   0x40808c
  4078e8:	cmp    al,bpl
  4078eb:	je     0x4079b4
  4078f1:	cmp    ebx,DWORD PTR [rsp+0x30]
  4078f5:	jae    0x407904
  4078f7:	mov    DWORD PTR [rsp+0x30],ebx
  4078fb:	mov    rax,QWORD PTR [rsp+0x28]
  407900:	mov    WORD PTR [rax+rsi*2],bp
  407904:	lea    rdx,[rsp+0x78]
  407909:	lea    rcx,[rsp+0x28]
  40790e:	call   0x403444
  407913:	mov    r11d,DWORD PTR [rsp+0x70]
  407918:	shr    r11d,0x4
  40791c:	test   r11b,0x1
  407920:	je     0x407933
  407922:	lea    rcx,[rsp+0x28]
  407927:	call   0x40779c
  40792c:	cmp    al,bpl
  40792f:	je     0x407958
  407931:	jmp    0x407942
  407933:	mov    rcx,QWORD PTR [rsp+0x28]
  407938:	call   0x406fec
  40793d:	cmp    al,bpl
  407940:	je     0x407986
  407942:	lea    rdx,[rsp+0x50]
  407947:	lea    rcx,[rsp+0x38]
  40794c:	call   0x40808c
  407951:	cmp    al,bpl
  407954:	jne    0x4078f1
  407956:	jmp    0x4079b4
  407958:	mov    rcx,QWORD PTR [rsp+0x78]
  40795d:	call   0x40215c
  407962:	nop
  407963:	mov    rcx,QWORD PTR [rsp+0x40]
  407968:	call   0x40215c
  40796d:	lea    rcx,[rsp+0x38]
  407972:	call   0x407be4
  407977:	nop
  407978:	mov    rcx,QWORD PTR [rsp+0x28]
  40797d:	call   0x40215c
  407982:	xor    al,al
  407984:	jmp    0x4079f9
  407986:	mov    rcx,QWORD PTR [rsp+0x78]
  40798b:	call   0x40215c
  407990:	nop
  407991:	mov    rcx,QWORD PTR [rsp+0x40]
  407996:	call   0x40215c
  40799b:	lea    rcx,[rsp+0x38]
  4079a0:	call   0x407be4
  4079a5:	nop
  4079a6:	mov    rcx,QWORD PTR [rsp+0x28]
  4079ab:	call   0x40215c
  4079b0:	xor    al,al
  4079b2:	jmp    0x4079f9
  4079b4:	mov    rcx,QWORD PTR [rsp+0x78]
  4079b9:	call   0x40215c
  4079be:	nop
  4079bf:	mov    rcx,QWORD PTR [rsp+0x40]
  4079c4:	call   0x40215c
  4079c9:	lea    rcx,[rsp+0x38]
  4079ce:	call   0x407be4
  4079d3:	nop
  4079d4:	mov    rcx,QWORD PTR [rsp+0x28]
  4079d9:	call   0x40215c
  4079de:	xor    edx,edx
  4079e0:	mov    rcx,QWORD PTR [rdi]
  4079e3:	call   0x406b58
  4079e8:	cmp    al,bpl
  4079eb:	jne    0x4079f1
  4079ed:	xor    al,al
  4079ef:	jmp    0x4079f9
  4079f1:	mov    rcx,QWORD PTR [rdi]
  4079f4:	call   0x406c00
  4079f9:	add    rsp,0x98
  407a00:	pop    rdi
  407a01:	pop    rsi
  407a02:	pop    rbp
  407a03:	pop    rbx
  407a04:	ret    
  407a05:	int3   
  407a06:	int3   
  407a07:	int3   
  407a08:	int3   
  407a09:	int3   
  407a0a:	int3   
  407a0b:	int3   
  407a0c:	rex.W push rbp
  407a0e:	sub    rsp,0x20
  407a12:	mov    rbp,rdx
  407a15:	lea    rcx,[rbp+0x50]
  407a19:	call   0x406fe0
  407a1e:	add    rsp,0x20
  407a22:	pop    rbp
  407a23:	ret    
  407a24:	int3   
  407a25:	int3   
  407a26:	int3   
  407a27:	int3   
  407a28:	int3   
  407a29:	int3   
  407a2a:	int3   
  407a2b:	int3   
  407a2c:	rex.W push rbp
  407a2e:	sub    rsp,0x20
  407a32:	mov    rbp,rdx
  407a35:	lea    rcx,[rbp+0x28]
  407a39:	call   0x401000
  407a3e:	add    rsp,0x20
  407a42:	pop    rbp
  407a43:	ret    
  407a44:	int3   
  407a45:	int3   
  407a46:	int3   
  407a47:	int3   
  407a48:	int3   
  407a49:	int3   
  407a4a:	int3   
  407a4b:	int3   
  407a4c:	rex.W push rbp
  407a4e:	sub    rsp,0x20
  407a52:	mov    rbp,rdx
  407a55:	lea    rcx,[rbp+0x38]
  407a59:	call   0x40810c
  407a5e:	add    rsp,0x20
  407a62:	pop    rbp
  407a63:	ret    
  407a64:	int3   
  407a65:	int3   
  407a66:	int3   
  407a67:	int3   
  407a68:	int3   
  407a69:	int3   
  407a6a:	int3   
  407a6b:	int3   
  407a6c:	rex.W push rbp
  407a6e:	sub    rsp,0x20
  407a72:	mov    rbp,rdx
  407a75:	lea    rcx,[rbp+0x38]
  407a79:	call   0x408114
  407a7e:	add    rsp,0x20
  407a82:	pop    rbp
  407a83:	ret    
  407a84:	int3   
  407a85:	int3   
  407a86:	int3   
  407a87:	int3   
  407a88:	int3   
  407a89:	int3   
  407a8a:	int3   
  407a8b:	int3   
  407a8c:	rex.W push rbp
  407a8e:	sub    rsp,0x20
  407a92:	mov    rbp,rdx
  407a95:	lea    rcx,[rbp+0x50]
  407a99:	call   0x406fe0
  407a9e:	add    rsp,0x20
  407aa2:	pop    rbp
  407aa3:	ret    
  407aa4:	rex.W push rbx
  407aa6:	push   rdi
  407aa7:	sub    rsp,0x28
  407aab:	xor    ebx,ebx
  407aad:	mov    rdi,rcx
  407ab0:	cmp    BYTE PTR [rcx],bl
  407ab2:	jne    0x407ab8
  407ab4:	mov    al,0x1
  407ab6:	jmp    0x407acd
  407ab8:	add    rcx,0x8
  407abc:	call   0x40779c
  407ac1:	cmp    al,bl
  407ac3:	sete   al
  407ac6:	cmp    al,bl
  407ac8:	mov    BYTE PTR [rdi],al
  407aca:	sete   al
  407acd:	add    rsp,0x28
  407ad1:	pop    rdi
  407ad2:	pop    rbx
  407ad3:	ret    
  407ad4:	rex.W push rbx
  407ad6:	push   rsi
  407ad7:	push   rdi
  407ad8:	sub    rsp,0x50
  407adc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  407ae5:	mov    rbx,rdx
  407ae8:	mov    rsi,rcx
  407aeb:	call   0x407aa4
  407af0:	xor    edi,edi
  407af2:	cmp    al,dil
  407af5:	jne    0x407afb
  407af7:	xor    al,al
  407af9:	jmp    0x407b65
  407afb:	lea    rcx,[rsp+0x28]
  407b00:	call   0x403150
  407b05:	nop
  407b06:	lea    rcx,[rsp+0x28]
  407b0b:	call   0x40719c
  407b10:	cmp    al,dil
  407b13:	jne    0x407b17
  407b15:	jmp    0x407b58
  407b17:	mov    r8,rbx
  407b1a:	lea    rdx,[rsp+0x28]
  407b1f:	lea    rcx,[rsp+0x38]
  407b24:	call   0x403108
  407b29:	nop
  407b2a:	lea    r8,[rsi+0x8]
  407b2e:	xor    r9d,r9d
  407b31:	mov    dl,0x1
  407b33:	mov    rcx,QWORD PTR [rax]
  407b36:	call   0x4071f4
  407b3b:	cmp    al,dil
  407b3e:	sete   bl
  407b41:	mov    rcx,QWORD PTR [rsp+0x38]
  407b46:	call   0x40215c
  407b4b:	cmp    bl,dil
  407b4e:	je     0x407b52
  407b50:	jmp    0x407b58
  407b52:	mov    BYTE PTR [rsi],0x1
  407b55:	mov    dil,0x1
  407b58:	mov    rcx,QWORD PTR [rsp+0x28]
  407b5d:	call   0x40215c
  407b62:	mov    al,dil
  407b65:	add    rsp,0x50
  407b69:	pop    rdi
  407b6a:	pop    rsi
  407b6b:	pop    rbx
  407b6c:	ret    
  407b6d:	int3   
  407b6e:	int3   
  407b6f:	int3   
  407b70:	int3   
  407b71:	int3   
  407b72:	int3   
  407b73:	int3   
  407b74:	rex.W push rbp
  407b76:	sub    rsp,0x20
  407b7a:	mov    rbp,rdx
  407b7d:	lea    rcx,[rbp+0x28]
  407b81:	call   0x401000
  407b86:	add    rsp,0x20
  407b8a:	pop    rbp
  407b8b:	ret    
  407b8c:	int3   
  407b8d:	int3   
  407b8e:	int3   
  407b8f:	int3   
  407b90:	int3   
  407b91:	int3   
  407b92:	int3   
  407b93:	int3   
  407b94:	rex.W push rbp
  407b96:	sub    rsp,0x20
  407b9a:	mov    rbp,rdx
  407b9d:	lea    rcx,[rbp+0x38]
  407ba1:	call   0x401000
  407ba6:	add    rsp,0x20
  407baa:	pop    rbp
  407bab:	ret    
  407bac:	mov    eax,DWORD PTR [rcx+0x20]
  407baf:	shr    eax,0x4
  407bb2:	test   al,0x1
  407bb4:	je     0x407be0
  407bb6:	xor    eax,eax
  407bb8:	cmp    DWORD PTR [rcx+0x30],eax
  407bbb:	je     0x407be0
  407bbd:	mov    rdx,QWORD PTR [rcx+0x28]
  407bc1:	cmp    WORD PTR [rdx],0x2e
  407bc5:	jne    0x407be2
  407bc7:	cmp    DWORD PTR [rcx+0x30],0x1
  407bcb:	je     0x407bda
  407bcd:	cmp    DWORD PTR [rcx+0x30],0x2
  407bd1:	jne    0x407be2
  407bd3:	cmp    WORD PTR [rdx+0x2],0x2e
  407bd8:	jne    0x407be2
  407bda:	mov    eax,0x1
  407bdf:	ret    
  407be0:	xor    al,al
  407be2:	ret    
  407be3:	int3   
  407be4:	rex.W push rbx
  407be6:	sub    rsp,0x20
  407bea:	cmp    QWORD PTR [rcx],0xffffffffffffffff
  407bee:	mov    rbx,rcx
  407bf1:	je     0x407c07
  407bf3:	mov    rcx,QWORD PTR [rcx]
  407bf6:	call   QWORD PTR [rip+0x4566c]        # 0x44d268
  407bfc:	test   eax,eax
  407bfe:	je     0x407c09
  407c00:	mov    QWORD PTR [rbx],0xffffffffffffffff
  407c07:	mov    al,0x1
  407c09:	add    rsp,0x20
  407c0d:	pop    rbx
  407c0e:	ret    
  407c0f:	int3   
  407c10:	rex.W push rbx
  407c12:	push   rbp
  407c13:	push   rsi
  407c14:	push   rdi
  407c15:	sub    rsp,0x298
  407c1c:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  407c25:	mov    rbp,r8
  407c28:	mov    rsi,rdx
  407c2b:	mov    rbx,rcx
  407c2e:	call   0x407be4
  407c33:	test   al,al
  407c35:	je     0x407cfc
  407c3b:	mov    rcx,rsi
  407c3e:	call   0x40a3e4
  407c43:	mov    edi,eax
  407c45:	cmp    eax,0x1
  407c48:	je     0x407c5b
  407c4a:	lea    rdx,[rsp+0x40]
  407c4f:	mov    rcx,rsi
  407c52:	call   QWORD PTR [rip+0x45540]        # 0x44d198
  407c58:	mov    QWORD PTR [rbx],rax
  407c5b:	cmp    QWORD PTR [rbx],0xffffffffffffffff
  407c5f:	jne    0x407caf
  407c61:	test   edi,edi
  407c63:	je     0x407ca5
  407c65:	lea    rcx,[rsp+0x20]
  407c6a:	call   0x403150
  407c6f:	nop
  407c70:	cmp    edi,0x1
  407c73:	setne  r8b
  407c77:	lea    rdx,[rsp+0x20]
  407c7c:	mov    rcx,rsi
  407c7f:	call   0x40aa60
  407c84:	test   al,al
  407c86:	je     0x407c9b
  407c88:	lea    rdx,[rsp+0x40]
  407c8d:	mov    rcx,QWORD PTR [rsp+0x20]
  407c92:	call   QWORD PTR [rip+0x45500]        # 0x44d198
  407c98:	mov    QWORD PTR [rbx],rax
  407c9b:	mov    rcx,QWORD PTR [rsp+0x20]
  407ca0:	call   0x40215c
  407ca5:	cmp    QWORD PTR [rbx],0xffffffffffffffff
  407ca9:	jne    0x407caf
  407cab:	xor    al,al
  407cad:	jmp    0x407cfc
  407caf:	mov    eax,DWORD PTR [rsp+0x40]
  407cb3:	mov    DWORD PTR [rbp+0x20],eax
  407cb6:	mov    rax,QWORD PTR [rsp+0x44]
  407cbb:	mov    QWORD PTR [rbp+0x8],rax
  407cbf:	mov    rcx,QWORD PTR [rsp+0x4c]
  407cc4:	mov    QWORD PTR [rbp+0x10],rcx
  407cc8:	mov    rcx,QWORD PTR [rsp+0x54]
  407ccd:	mov    QWORD PTR [rbp+0x18],rcx
  407cd1:	mov    edx,DWORD PTR [rsp+0x5c]
  407cd5:	shl    rdx,0x20
  407cd9:	mov    ecx,DWORD PTR [rsp+0x60]
  407cdd:	add    rdx,rcx
  407ce0:	mov    QWORD PTR [rbp+0x0],rdx
  407ce4:	mov    BYTE PTR [rbp+0x24],0x0
  407ce8:	mov    BYTE PTR [rbp+0x25],0x0
  407cec:	lea    rcx,[rbp+0x28]
  407cf0:	lea    rdx,[rsp+0x6c]
  407cf5:	call   0x403290
  407cfa:	mov    al,0x1
  407cfc:	add    rsp,0x298
  407d03:	pop    rdi
  407d04:	pop    rsi
  407d05:	pop    rbp
  407d06:	pop    rbx
  407d07:	ret    
  407d08:	int3   
  407d09:	int3   
  407d0a:	int3   
  407d0b:	int3   
  407d0c:	int3   
  407d0d:	int3   
  407d0e:	int3   
  407d0f:	int3   
  407d10:	rex.W push rbp
  407d12:	sub    rsp,0x20
  407d16:	mov    rbp,rdx
  407d19:	lea    rcx,[rbp+0x20]
  407d1d:	call   0x401000
  407d22:	add    rsp,0x20
  407d26:	pop    rbp
  407d27:	ret    
  407d28:	rex.W push rbx
  407d2a:	sub    rsp,0x270
  407d31:	mov    rcx,QWORD PTR [rcx]
  407d34:	mov    rbx,rdx
  407d37:	lea    rdx,[rsp+0x20]
  407d3c:	call   QWORD PTR [rip+0x4544e]        # 0x44d190
  407d42:	test   eax,eax
  407d44:	je     0x407d92
  407d46:	mov    eax,DWORD PTR [rsp+0x20]
  407d4a:	mov    ecx,DWORD PTR [rsp+0x3c]
  407d4e:	lea    rdx,[rsp+0x4c]
  407d53:	mov    DWORD PTR [rbx+0x20],eax
  407d56:	mov    rax,QWORD PTR [rsp+0x24]
  407d5b:	shl    rcx,0x20
  407d5f:	mov    QWORD PTR [rbx+0x8],rax
  407d63:	mov    rax,QWORD PTR [rsp+0x2c]
  407d68:	mov    BYTE PTR [rbx+0x24],0x0
  407d6c:	mov    QWORD PTR [rbx+0x10],rax
  407d70:	mov    rax,QWORD PTR [rsp+0x34]
  407d75:	mov    BYTE PTR [rbx+0x25],0x0
  407d79:	mov    QWORD PTR [rbx+0x18],rax
  407d7d:	mov    eax,DWORD PTR [rsp+0x40]
  407d81:	add    rcx,rax
  407d84:	mov    QWORD PTR [rbx],rcx
  407d87:	lea    rcx,[rbx+0x28]
  407d8b:	call   0x403290
  407d90:	mov    al,0x1
  407d92:	add    rsp,0x270
  407d99:	pop    rbx
  407d9a:	ret    
  407d9b:	int3   
  407d9c:	mov    rcx,QWORD PTR [rcx]
  407d9f:	lea    rdx,[rip+0x45dfa]        # 0x44dba0
  407da6:	jmp    0x402864
  407dab:	int3   
  407dac:	rex.W push rbx
  407dae:	sub    rsp,0x20
  407db2:	mov    rbx,rdx
  407db5:	mov    rdx,rcx
  407db8:	mov    DWORD PTR [rsp+0x38],0x0
  407dc0:	mov    rcx,rbx
  407dc3:	call   0x403208
  407dc8:	cmp    DWORD PTR [rbx+0x8],0x7
  407dcc:	jbe    0x407dff
  407dce:	mov    ecx,DWORD PTR [rbx+0x8]
  407dd1:	mov    rax,QWORD PTR [rbx]
  407dd4:	lea    rdx,[rip+0x45dcd]        # 0x44dba8
  407ddb:	lea    rcx,[rax+rcx*2-0xc]
  407de0:	call   0x402864
  407de5:	test   al,al
  407de7:	je     0x407dff
  407de9:	mov    eax,DWORD PTR [rbx+0x8]
  407dec:	lea    ecx,[rax-0x6]
  407def:	cmp    ecx,eax
  407df1:	jae    0x407dff
  407df3:	mov    rax,QWORD PTR [rbx]
  407df6:	mov    DWORD PTR [rbx+0x8],ecx
  407df9:	mov    WORD PTR [rax+rcx*2],0x0
  407dff:	mov    rax,rbx
  407e02:	add    rsp,0x20
  407e06:	pop    rbx
  407e07:	ret    
  407e08:	rex.W push rbx
  407e0a:	push   rbp
  407e0b:	push   rsi
  407e0c:	push   rdi
  407e0d:	sub    rsp,0x2a8
  407e14:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  407e1d:	mov    rsi,r8
  407e20:	mov    rbp,rdx
  407e23:	mov    rbx,rcx
  407e26:	call   0x407be4
  407e2b:	test   al,al
  407e2d:	je     0x407efc
  407e33:	cmp    QWORD PTR [rip+0x60bcd],0x0        # 0x468a08
  407e3b:	jne    0x407e4f
  407e3d:	mov    ecx,0x78
  407e42:	call   QWORD PTR [rip+0x45400]        # 0x44d248
  407e48:	xor    al,al
  407e4a:	jmp    0x407efc
  407e4f:	xor    ecx,ecx
  407e51:	call   QWORD PTR [rip+0x453f1]        # 0x44d248
  407e57:	mov    rcx,rbp
  407e5a:	call   0x40a3e4
  407e5f:	mov    edi,eax
  407e61:	cmp    eax,0x1
  407e64:	je     0x407e7c
  407e66:	xor    r9d,r9d
  407e69:	lea    r8,[rsp+0x40]
  407e6e:	xor    edx,edx
  407e70:	mov    rcx,rbp
  407e73:	call   QWORD PTR [rip+0x60b8f]        # 0x468a08
  407e79:	mov    QWORD PTR [rbx],rax
  407e7c:	cmp    QWORD PTR [rbx],0xffffffffffffffff
  407e80:	jne    0x407ee4
  407e82:	call   QWORD PTR [rip+0x45318]        # 0x44d1a0
  407e88:	cmp    eax,0x26
  407e8b:	jne    0x407e91
  407e8d:	xor    al,al
  407e8f:	jmp    0x407efc
  407e91:	test   edi,edi
  407e93:	je     0x407eda
  407e95:	lea    rcx,[rsp+0x20]
  407e9a:	call   0x403150
  407e9f:	nop
  407ea0:	cmp    edi,0x1
  407ea3:	setne  r8b
  407ea7:	lea    rdx,[rsp+0x20]
  407eac:	mov    rcx,rbp
  407eaf:	call   0x40aa60
  407eb4:	test   al,al
  407eb6:	je     0x407ed0
  407eb8:	xor    r9d,r9d
  407ebb:	lea    r8,[rsp+0x40]
  407ec0:	xor    edx,edx
  407ec2:	mov    rcx,QWORD PTR [rsp+0x20]
  407ec7:	call   QWORD PTR [rip+0x60b3b]        # 0x468a08
  407ecd:	mov    QWORD PTR [rbx],rax
  407ed0:	mov    rcx,QWORD PTR [rsp+0x20]
  407ed5:	call   0x40215c
  407eda:	cmp    QWORD PTR [rbx],0xffffffffffffffff
  407ede:	jne    0x407ee4
  407ee0:	xor    al,al
  407ee2:	jmp    0x407efc
  407ee4:	mov    rcx,QWORD PTR [rsp+0x40]
  407ee9:	mov    QWORD PTR [rsi+0x10],rcx
  407eed:	lea    rdx,[rsp+0x48]
  407ef2:	mov    rcx,rsi
  407ef5:	call   0x403290
  407efa:	mov    al,0x1
  407efc:	add    rsp,0x2a8
  407f03:	pop    rdi
  407f04:	pop    rsi
  407f05:	pop    rbp
  407f06:	pop    rbx
  407f07:	ret    
  407f08:	rex.W push rbp
  407f0a:	sub    rsp,0x20
  407f0e:	mov    rbp,rdx
  407f11:	lea    rcx,[rbp+0x20]
  407f15:	call   0x401000
  407f1a:	add    rsp,0x20
  407f1e:	pop    rbp
  407f1f:	ret    
  407f20:	rex.W push rbx
  407f22:	sub    rsp,0x280
  407f29:	mov    rax,QWORD PTR [rip+0x60ad0]        # 0x468a00
  407f30:	mov    rbx,rdx
  407f33:	test   rax,rax
  407f36:	jne    0x407f43
  407f38:	lea    ecx,[rax+0x78]
  407f3b:	call   QWORD PTR [rip+0x45307]        # 0x44d248
  407f41:	jmp    0x407f51
  407f43:	mov    rcx,QWORD PTR [rcx]
  407f46:	lea    rdx,[rsp+0x20]
  407f4b:	call   rax
  407f4d:	test   eax,eax
  407f4f:	jne    0x407f55
  407f51:	xor    al,al
  407f53:	jmp    0x407f6d
  407f55:	mov    rax,QWORD PTR [rsp+0x20]
  407f5a:	lea    rdx,[rsp+0x28]
  407f5f:	mov    rcx,rbx
  407f62:	mov    QWORD PTR [rbx+0x10],rax
  407f66:	call   0x403290
  407f6b:	mov    al,0x1
  407f6d:	add    rsp,0x280
  407f74:	pop    rbx
  407f75:	ret    
  407f76:	int3   
  407f77:	int3   
  407f78:	rex.W push rbx
  407f7a:	push   rdi
  407f7b:	sub    rsp,0x28
  407f7f:	cmp    QWORD PTR [rcx],0xffffffffffffffff
  407f83:	mov    rdi,r8
  407f86:	je     0x407f8f
  407f88:	call   0x407f20
  407f8d:	jmp    0x407f9b
  407f8f:	mov    r8,rdx
  407f92:	mov    rdx,QWORD PTR [rcx+0x8]
  407f96:	call   0x407e08
  407f9b:	xor    ebx,ebx
  407f9d:	cmp    al,bl
  407f9f:	je     0x407fa8
  407fa1:	mov    BYTE PTR [rdi],0x1
  407fa4:	mov    al,0x1
  407fa6:	jmp    0x407fb6
  407fa8:	mov    BYTE PTR [rdi],bl
  407faa:	call   QWORD PTR [rip+0x451f0]        # 0x44d1a0
  407fb0:	cmp    eax,0x26
  407fb3:	sete   al
  407fb6:	add    rsp,0x28
  407fba:	pop    rdi
  407fbb:	pop    rbx
  407fbc:	ret    
  407fbd:	int3   
  407fbe:	int3   
  407fbf:	int3   
  407fc0:	xor    eax,eax
  407fc2:	mov    QWORD PTR [rcx],rax
  407fc5:	mov    DWORD PTR [rcx+0xc],eax
  407fc8:	mov    DWORD PTR [rcx+0x8],eax
  407fcb:	mov    DWORD PTR [rcx+0x14],eax
  407fce:	mov    DWORD PTR [rcx+0x10],eax
  407fd1:	mov    DWORD PTR [rcx+0x1c],eax
  407fd4:	mov    DWORD PTR [rcx+0x18],eax
  407fd7:	mov    DWORD PTR [rcx+0x20],eax
  407fda:	mov    BYTE PTR [rcx+0x24],al
  407fdd:	mov    BYTE PTR [rcx+0x25],al
  407fe0:	ret    
  407fe1:	int3   
  407fe2:	int3   
  407fe3:	int3   
  407fe4:	rex.W push rbx
  407fe6:	push   rdi
  407fe7:	sub    rsp,0x48
  407feb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  407ff4:	mov    rdi,rcx
  407ff7:	call   0x40a3e4
  407ffc:	mov    ebx,eax
  407ffe:	cmp    eax,0x1
  408001:	je     0x408011
  408003:	mov    rcx,rdi
  408006:	call   QWORD PTR [rip+0x45174]        # 0x44d180
  40800c:	cmp    eax,0xffffffff
  40800f:	jne    0x408062
  408011:	test   ebx,ebx
  408013:	je     0x40805d
  408015:	lea    rcx,[rsp+0x28]
  40801a:	call   0x403150
  40801f:	nop
  408020:	cmp    ebx,0x1
  408023:	setne  r8b
  408027:	lea    rdx,[rsp+0x28]
  40802c:	mov    rcx,rdi
  40802f:	call   0x40aa60
  408034:	test   al,al
  408036:	je     0x408053
  408038:	mov    rcx,QWORD PTR [rsp+0x28]
  40803d:	call   QWORD PTR [rip+0x4513d]        # 0x44d180
  408043:	mov    ebx,eax
  408045:	mov    rcx,QWORD PTR [rsp+0x28]
  40804a:	call   0x40215c
  40804f:	mov    eax,ebx
  408051:	jmp    0x408062
  408053:	mov    rcx,QWORD PTR [rsp+0x28]
  408058:	call   0x40215c
  40805d:	mov    eax,0xffffffff
  408062:	add    rsp,0x48
  408066:	pop    rdi
  408067:	pop    rbx
  408068:	ret    
  408069:	int3   
  40806a:	int3   
  40806b:	int3   
  40806c:	int3   
  40806d:	int3   
  40806e:	int3   
  40806f:	int3   
  408070:	int3   
  408071:	int3   
  408072:	int3   
  408073:	int3   
  408074:	rex.W push rbp
  408076:	sub    rsp,0x20
  40807a:	mov    rbp,rdx
  40807d:	lea    rcx,[rbp+0x28]
  408081:	call   0x401000
  408086:	add    rsp,0x20
  40808a:	pop    rbp
  40808b:	ret    
  40808c:	rex.W push rbx
  40808e:	push   rdi
  40808f:	sub    rsp,0x28
  408093:	mov    rdi,rdx
  408096:	mov    rbx,rcx
  408099:	cmp    QWORD PTR [rbx],0xffffffffffffffff
  40809d:	mov    rcx,rbx
  4080a0:	je     0x4080ac
  4080a2:	mov    rdx,rdi
  4080a5:	call   0x407d28
  4080aa:	jmp    0x4080b8
  4080ac:	mov    rdx,QWORD PTR [rbx+0x8]
  4080b0:	mov    r8,rdi
  4080b3:	call   0x407c10
  4080b8:	test   al,al
  4080ba:	je     0x4080d1
  4080bc:	mov    rcx,rdi
  4080bf:	call   0x407bac
  4080c4:	test   al,al
  4080c6:	jne    0x408099
  4080c8:	mov    al,0x1
  4080ca:	add    rsp,0x28
  4080ce:	pop    rdi
  4080cf:	pop    rbx
  4080d0:	ret    
  4080d1:	xor    al,al
  4080d3:	jmp    0x4080ca
  4080d5:	int3   
  4080d6:	int3   
  4080d7:	int3   
  4080d8:	rex.W push rbx
  4080da:	push   rdi
  4080db:	sub    rsp,0x28
  4080df:	mov    rdi,r8
  4080e2:	call   0x40808c
  4080e7:	xor    ebx,ebx
  4080e9:	cmp    al,bl
  4080eb:	je     0x4080f4
  4080ed:	mov    BYTE PTR [rdi],0x1
  4080f0:	mov    al,0x1
  4080f2:	jmp    0x408102
  4080f4:	mov    BYTE PTR [rdi],bl
  4080f6:	call   QWORD PTR [rip+0x450a4]        # 0x44d1a0
  4080fc:	cmp    eax,0x12
  4080ff:	sete   al
  408102:	add    rsp,0x28
  408106:	pop    rdi
  408107:	pop    rbx
  408108:	ret    
  408109:	int3   
  40810a:	int3   
  40810b:	int3   
  40810c:	jmp    0x407be4
  408111:	int3   
  408112:	int3   
  408113:	int3   
  408114:	rex.W push rbx
  408116:	sub    rsp,0x20
  40811a:	mov    rbx,rcx
  40811d:	mov    rcx,QWORD PTR [rcx+0x8]
  408121:	call   0x40215c
  408126:	mov    rcx,rbx
  408129:	add    rsp,0x20
  40812d:	pop    rbx
  40812e:	jmp    0x407be4
  408133:	int3   
  408134:	rex.W push rbx
  408136:	push   rbp
  408137:	push   rsi
  408138:	push   rdi
  408139:	sub    rsp,0x88
  408140:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
  408149:	mov    rbp,rdx
  40814c:	mov    rdi,rcx
  40814f:	mov    rcx,rdx
  408152:	call   0x409df4
  408157:	xor    ebx,ebx
  408159:	cmp    al,bl
  40815b:	je     0x408242
  408161:	mov    QWORD PTR [rdi],rbx
  408164:	mov    DWORD PTR [rdi+0xc],ebx
  408167:	mov    DWORD PTR [rdi+0x8],ebx
  40816a:	mov    DWORD PTR [rdi+0x14],ebx
  40816d:	mov    DWORD PTR [rdi+0x10],ebx
  408170:	mov    DWORD PTR [rdi+0x1c],ebx
  408173:	mov    DWORD PTR [rdi+0x18],ebx
  408176:	mov    DWORD PTR [rdi+0x20],ebx
  408179:	mov    BYTE PTR [rdi+0x24],bl
  40817c:	mov    BYTE PTR [rdi+0x25],bl
  40817f:	lea    rcx,[rdi+0x28]
  408183:	lea    rdx,[rbp+0x8]
  408187:	call   0x403290
  40818c:	lea    esi,[rbx+0x1]
  40818f:	mov    BYTE PTR [rdi+0x25],sil
  408193:	lea    rcx,[rbp+0x8]
  408197:	call   0x409f74
  40819c:	cmp    al,bl
  40819e:	je     0x408204
  4081a0:	cmp    WORD PTR [rbp+0xc],bx
  4081a4:	jne    0x408204
  4081a6:	movzx  eax,WORD PTR [rbp+0x8]
  4081aa:	mov    WORD PTR [rsp+0xc0],ax
  4081b2:	mov    WORD PTR [rsp+0xc2],0x3a
  4081bc:	mov    WORD PTR [rsp+0xc4],0x5c
  4081c6:	mov    WORD PTR [rsp+0xc6],bx
  4081ce:	lea    r9,[rsp+0x30]
  4081d3:	lea    r8,[rsp+0xc8]
  4081db:	lea    rdx,[rsp+0x40]
  4081e0:	lea    rcx,[rsp+0xc0]
  4081e8:	call   0x40ae24
  4081ed:	cmp    al,bl
  4081ef:	je     0x408204
  4081f1:	mov    rcx,QWORD PTR [rsp+0xc8]
  4081f9:	mov    QWORD PTR [rdi],rcx
  4081fc:	mov    al,sil
  4081ff:	jmp    0x4087c8
  408204:	mov    QWORD PTR [rsp+0x48],0xffffffffffffffff
  40820d:	mov    rdx,rbp
  408210:	lea    rcx,[rsp+0x48]
  408215:	call   0x40946c
  40821a:	cmp    al,bl
  40821c:	jne    0x408220
  40821e:	jmp    0x408231
  408220:	cmp    BYTE PTR [rsp+0x51],bl
  408224:	je     0x40822e
  408226:	mov    rax,QWORD PTR [rsp+0x58]
  40822b:	mov    QWORD PTR [rdi],rax
  40822e:	mov    bl,sil
  408231:	lea    rcx,[rsp+0x48]
  408236:	call   0x408c80
  40823b:	mov    al,bl
  40823d:	jmp    0x4087c8
  408242:	mov    rcx,rbp
  408245:	call   0x40a06c
  40824a:	mov    esi,eax
  40824c:	cmp    eax,ebx
  40824e:	jl     0x4084cb
  408254:	lea    ecx,[rsi+0x1]
  408257:	cmp    WORD PTR [rbp+rcx*2+0x0],bx
  40825c:	je     0x4084cb
  408262:	lea    rdx,[rbp+rsi*2+0x0]
  408267:	lea    rcx,[rsp+0x30]
  40826c:	call   0x4031c0
  408271:	nop
  408272:	mov    rdx,rbp
  408275:	lea    rcx,[rsp+0x20]
  40827a:	call   0x4031c0
  40827f:	nop
  408280:	cmp    esi,DWORD PTR [rsp+0x28]
  408284:	jae    0x408293
  408286:	mov    DWORD PTR [rsp+0x28],esi
  40828a:	mov    rax,QWORD PTR [rsp+0x20]
  40828f:	mov    WORD PTR [rax+rsi*2],bx
  408293:	cmp    DWORD PTR [rsp+0x38],0x6
  408298:	jbe    0x4082b8
  40829a:	mov    ecx,DWORD PTR [rsp+0x38]
  40829e:	mov    rax,QWORD PTR [rsp+0x30]
  4082a3:	lea    rcx,[rax+rcx*2-0xc]
  4082a8:	lea    rdx,[rip+0x458f9]        # 0x44dba8
  4082af:	call   0x402864
  4082b4:	cmp    al,bl
  4082b6:	jne    0x4082c9
  4082b8:	lea    rdx,[rip+0x45951]        # 0x44dc10
  4082bf:	lea    rcx,[rsp+0x30]
  4082c4:	call   0x4033f0
  4082c9:	mov    rcx,QWORD PTR [rsp+0x20]
  4082ce:	call   0x409f74
  4082d3:	mov    rdx,QWORD PTR [rsp+0x20]
  4082d8:	cmp    al,bl
  4082da:	je     0x408329
  4082dc:	cmp    esi,0x2
  4082df:	je     0x4082ed
  4082e1:	cmp    esi,0x3
  4082e4:	jne    0x408329
  4082e6:	cmp    WORD PTR [rdx+0x4],0x5c
  4082eb:	jne    0x408329
  4082ed:	mov    QWORD PTR [rdi],rbx
  4082f0:	mov    DWORD PTR [rdi+0xc],ebx
  4082f3:	mov    DWORD PTR [rdi+0x8],ebx
  4082f6:	mov    DWORD PTR [rdi+0x14],ebx
  4082f9:	mov    DWORD PTR [rdi+0x10],ebx
  4082fc:	mov    DWORD PTR [rdi+0x1c],ebx
  4082ff:	mov    DWORD PTR [rdi+0x18],ebx
  408302:	mov    DWORD PTR [rdi+0x20],ebx
  408305:	mov    BYTE PTR [rdi+0x24],bl
  408308:	mov    BYTE PTR [rdi+0x25],bl
  40830b:	lea    rcx,[rdi+0x28]
  40830f:	mov    DWORD PTR [rcx+0x8],ebx
  408312:	mov    rax,QWORD PTR [rcx]
  408315:	mov    WORD PTR [rax],bx
  408318:	cmp    esi,0x2
  40831b:	jne    0x408339
  40831d:	lea    rdx,[rsp+0x20]
  408322:	call   0x4032f8
  408327:	jmp    0x408339
  408329:	mov    rcx,rdi
  40832c:	call   0x408134
  408331:	cmp    al,bl
  408333:	je     0x4084b6
  408339:	and    DWORD PTR [rdi+0x20],0xfffffbef
  408340:	mov    QWORD PTR [rdi],rbx
  408343:	mov    QWORD PTR [rsp+0x48],0xffffffffffffffff
  40834c:	lea    rdx,[rsp+0x20]
  408351:	lea    rcx,[rsp+0x50]
  408356:	call   0x403208
  40835b:	nop
  40835c:	lea    rcx,[rsp+0x60]
  408361:	call   0x403150
  408366:	nop
  408367:	lea    r8,[rsp+0xc0]
  40836f:	lea    rdx,[rsp+0x60]
  408374:	lea    rcx,[rsp+0x48]
  408379:	call   0x407f78
  40837e:	cmp    al,bl
  408380:	je     0x4083d2
  408382:	cmp    BYTE PTR [rsp+0xc0],bl
  408389:	je     0x408402
  40838b:	mov    rdx,QWORD PTR [rsp+0x30]
  408390:	mov    rcx,QWORD PTR [rsp+0x60]
  408395:	call   0x40272c
  40839a:	cmp    al,bl
  40839c:	jne    0x40843b
  4083a2:	mov    rcx,QWORD PTR [rsp+0x60]
  4083a7:	call   0x40215c
  4083ac:	lea    rcx,[rsp+0x60]
  4083b1:	call   0x403150
  4083b6:	nop
  4083b7:	lea    r8,[rsp+0xc0]
  4083bf:	lea    rdx,[rsp+0x60]
  4083c4:	lea    rcx,[rsp+0x48]
  4083c9:	call   0x407f78
  4083ce:	cmp    al,bl
  4083d0:	jne    0x408382
  4083d2:	mov    rcx,QWORD PTR [rsp+0x60]
  4083d7:	call   0x40215c
  4083dc:	nop
  4083dd:	mov    rcx,QWORD PTR [rsp+0x50]
  4083e2:	call   0x40215c
  4083e7:	lea    rcx,[rsp+0x48]
  4083ec:	call   0x407be4
  4083f1:	nop
  4083f2:	mov    rcx,QWORD PTR [rsp+0x20]
  4083f7:	call   0x40215c
  4083fc:	nop
  4083fd:	jmp    0x4084a5
  408402:	mov    ecx,0x2
  408407:	call   QWORD PTR [rip+0x44e3b]        # 0x44d248
  40840d:	nop
  40840e:	mov    rcx,QWORD PTR [rsp+0x60]
  408413:	call   0x40215c
  408418:	nop
  408419:	mov    rcx,QWORD PTR [rsp+0x50]
  40841e:	call   0x40215c
  408423:	lea    rcx,[rsp+0x48]
  408428:	call   0x407be4
  40842d:	nop
  40842e:	mov    rcx,QWORD PTR [rsp+0x20]
  408433:	call   0x40215c
  408438:	nop
  408439:	jmp    0x4084a5
  40843b:	mov    eax,DWORD PTR [rsp+0x68]
  40843f:	cmp    eax,0x7
  408442:	jbe    0x408458
  408444:	lea    ecx,[rax-0x6]
  408447:	cmp    ecx,eax
  408449:	jae    0x408458
  40844b:	mov    DWORD PTR [rsp+0x68],ecx
  40844f:	mov    rax,QWORD PTR [rsp+0x60]
  408454:	mov    WORD PTR [rax+rcx*2],bx
  408458:	lea    rcx,[rdi+0x28]
  40845c:	lea    rdx,[rsp+0x60]
  408461:	call   0x403444
  408466:	mov    r11,QWORD PTR [rsp+0x70]
  40846b:	mov    QWORD PTR [rdi],r11
  40846e:	mov    esi,0x1
  408473:	mov    BYTE PTR [rdi+0x24],sil
  408477:	mov    rcx,QWORD PTR [rsp+0x60]
  40847c:	call   0x40215c
  408481:	nop
  408482:	mov    rcx,QWORD PTR [rsp+0x50]
  408487:	call   0x40215c
  40848c:	lea    rcx,[rsp+0x48]
  408491:	call   0x407be4
  408496:	nop
  408497:	mov    rcx,QWORD PTR [rsp+0x20]
  40849c:	call   0x40215c
  4084a1:	nop
  4084a2:	mov    bl,sil
  4084a5:	mov    rcx,QWORD PTR [rsp+0x30]
  4084aa:	call   0x40215c
  4084af:	mov    al,bl
  4084b1:	jmp    0x4087c8
  4084b6:	mov    rcx,QWORD PTR [rsp+0x20]
  4084bb:	call   0x40215c
  4084c0:	nop
  4084c1:	mov    rcx,QWORD PTR [rsp+0x30]
  4084c6:	call   0x40215c
  4084cb:	mov    QWORD PTR [rsp+0x40],0xffffffffffffffff
  4084d4:	mov    r8,rdi
  4084d7:	mov    rdx,rbp
  4084da:	lea    rcx,[rsp+0x40]
  4084df:	call   0x407c10
  4084e4:	cmp    al,bl
  4084e6:	je     0x4084f2
  4084e8:	mov    esi,0x1
  4084ed:	jmp    0x4087bb
  4084f2:	call   QWORD PTR [rip+0x44ca8]        # 0x44d1a0
  4084f8:	mov    DWORD PTR [rsp+0xc8],eax
  4084ff:	cmp    eax,0x2
  408502:	je     0x40851e
  408504:	cmp    eax,0x35
  408507:	je     0x40851e
  408509:	cmp    eax,0x43
  40850c:	je     0x40851e
  40850e:	cmp    eax,0x7b
  408511:	je     0x40851e
  408513:	cmp    eax,0xa1
  408518:	jne    0x4087b8
  40851e:	mov    rcx,rbp
  408521:	call   0x409f9c
  408526:	mov    esi,ebx
  408528:	mov    ecx,0x4
  40852d:	cmp    al,bl
  40852f:	cmovne esi,ecx
  408532:	cmp    WORD PTR [rbp+0x0],0x5c
  408537:	je     0x408540
  408539:	cmp    WORD PTR [rbp+0x0],0x2f
  40853e:	jne    0x40859f
  408540:	cmp    WORD PTR [rbp+0x2],bx
  408544:	jne    0x40859f
  408546:	mov    rcx,rbp
  408549:	call   0x407fe4
  40854e:	mov    r11d,eax
  408551:	mov    edx,0xffffffff
  408556:	cmp    eax,edx
  408558:	je     0x4087b8
  40855e:	mov    ecx,0x10
  408563:	test   cl,al
  408565:	je     0x4087b8
  40856b:	mov    QWORD PTR [rdi],rbx
  40856e:	mov    DWORD PTR [rdi+0xc],ebx
  408571:	mov    DWORD PTR [rdi+0x8],ebx
  408574:	mov    DWORD PTR [rdi+0x14],ebx
  408577:	mov    DWORD PTR [rdi+0x10],ebx
  40857a:	mov    DWORD PTR [rdi+0x1c],ebx
  40857d:	mov    DWORD PTR [rdi+0x18],ebx
  408580:	mov    DWORD PTR [rdi+0x20],ebx
  408583:	mov    BYTE PTR [rdi+0x24],bl
  408586:	mov    BYTE PTR [rdi+0x25],bl
  408589:	mov    DWORD PTR [rdi+0x30],ebx
  40858c:	mov    rax,QWORD PTR [rdi+0x28]
  408590:	mov    WORD PTR [rax],bx
  408593:	mov    DWORD PTR [rdi+0x20],r11d
  408597:	lea    esi,[rcx-0xf]
  40859a:	jmp    0x4087bb
  40859f:	lea    rax,[rbp+rsi*2+0x0]
  4085a4:	mov    QWORD PTR [rsp+0xc0],rax
  4085ac:	mov    rcx,rax
  4085af:	call   0x409dbc
  4085b4:	cmp    al,bl
  4085b6:	je     0x408632
  4085b8:	lea    eax,[rsi+0x3]
  4085bb:	cmp    WORD PTR [rbp+rax*2+0x0],bx
  4085c0:	jne    0x408632
  4085c2:	mov    rcx,rbp
  4085c5:	call   0x407fe4
  4085ca:	mov    edx,0xffffffff
  4085cf:	cmp    eax,edx
  4085d1:	je     0x4087b8
  4085d7:	mov    ecx,0x10
  4085dc:	test   cl,al
  4085de:	je     0x4087b8
  4085e4:	mov    QWORD PTR [rdi],rbx
  4085e7:	mov    DWORD PTR [rdi+0xc],ebx
  4085ea:	mov    DWORD PTR [rdi+0x8],ebx
  4085ed:	mov    DWORD PTR [rdi+0x14],ebx
  4085f0:	mov    DWORD PTR [rdi+0x10],ebx
  4085f3:	mov    DWORD PTR [rdi+0x1c],ebx
  4085f6:	mov    DWORD PTR [rdi+0x18],ebx
  4085f9:	mov    BYTE PTR [rdi+0x24],bl
  4085fc:	mov    BYTE PTR [rdi+0x25],bl
  4085ff:	mov    DWORD PTR [rdi+0x20],eax
  408602:	mov    rdx,QWORD PTR [rsp+0xc0]
  40860a:	lea    rcx,[rdi+0x28]
  40860e:	call   0x403290
  408613:	cmp    DWORD PTR [rdi+0x30],0x2
  408617:	jbe    0x408628
  408619:	mov    DWORD PTR [rdi+0x30],0x2
  408620:	mov    rax,QWORD PTR [rdi+0x28]
  408624:	mov    WORD PTR [rax+0x4],bx
  408628:	mov    esi,0x1
  40862d:	jmp    0x4087bb
  408632:	mov    rcx,rbp
  408635:	call   0x409f10
  40863a:	cmp    eax,ebx
  40863c:	jbe    0x4087b8
  408642:	mov    eax,eax
  408644:	lea    rax,[rbp+rax*2+0x0]
  408649:	mov    QWORD PTR [rsp+0x30],rax
  40864e:	cmp    WORD PTR [rax],bx
  408651:	je     0x4087b8
  408657:	mov    rcx,rax
  40865a:	call   0x409d3c
  40865f:	cmp    eax,ebx
  408661:	jge    0x4087b8
  408667:	mov    rdx,rbp
  40866a:	lea    rcx,[rsp+0x20]
  40866f:	call   0x4031c0
  408674:	nop
  408675:	mov    edx,DWORD PTR [rsp+0x28]
  408679:	cmp    DWORD PTR [rsp+0x2c],edx
  40867d:	jne    0x40868d
  40867f:	lea    rcx,[rsp+0x20]
  408684:	call   0x402f2c
  408689:	mov    edx,DWORD PTR [rsp+0x28]
  40868d:	mov    rcx,QWORD PTR [rsp+0x20]
  408692:	mov    eax,edx
  408694:	mov    WORD PTR [rcx+rax*2],0x5c
  40869a:	mov    esi,0x1
  40869f:	add    edx,esi
  4086a1:	mov    WORD PTR [rcx+rdx*2],bx
  4086a5:	mov    DWORD PTR [rsp+0x28],edx
  4086a9:	cmp    DWORD PTR [rsp+0x2c],edx
  4086ad:	jne    0x4086bd
  4086af:	lea    rcx,[rsp+0x20]
  4086b4:	call   0x402f2c
  4086b9:	mov    edx,DWORD PTR [rsp+0x28]
  4086bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4086c2:	mov    eax,edx
  4086c4:	mov    WORD PTR [rcx+rax*2],0x2a
  4086ca:	add    edx,esi
  4086cc:	mov    WORD PTR [rcx+rdx*2],bx
  4086d0:	mov    DWORD PTR [rsp+0x28],edx
  4086d4:	mov    BYTE PTR [rsp+0xc0],bl
  4086db:	mov    r8,rdi
  4086de:	mov    rdx,QWORD PTR [rsp+0x20]
  4086e3:	lea    rcx,[rsp+0x40]
  4086e8:	call   0x407c10
  4086ed:	cmp    al,bl
  4086ef:	je     0x40873c
  4086f1:	lea    rax,[rdi+0x28]
  4086f5:	mov    QWORD PTR [rsp+0xc0],rax
  4086fd:	lea    rdx,[rip+0x44ff8]        # 0x44d6fc
  408704:	mov    rcx,QWORD PTR [rax]
  408707:	call   QWORD PTR [rip+0x44c3b]        # 0x44d348
  40870d:	cmp    eax,ebx
  40870f:	jne    0x408734
  408711:	mov    rdx,QWORD PTR [rsp+0x30]
  408716:	mov    rcx,QWORD PTR [rsp+0xc0]
  40871e:	call   0x403290
  408723:	nop
  408724:	mov    rcx,QWORD PTR [rsp+0x20]
  408729:	call   0x40215c
  40872e:	nop
  40872f:	jmp    0x4087bb
  408734:	mov    BYTE PTR [rsp+0xc0],sil
  40873c:	mov    rcx,rbp
  40873f:	call   0x407fe4
  408744:	mov    edx,0xffffffff
  408749:	mov    ecx,0x10
  40874e:	cmp    BYTE PTR [rsp+0xc0],bl
  408755:	jne    0x408779
  408757:	cmp    eax,edx
  408759:	je     0x40875f
  40875b:	test   cl,al
  40875d:	jne    0x408779
  40875f:	mov    ecx,DWORD PTR [rsp+0xc8]
  408766:	call   QWORD PTR [rip+0x44adc]        # 0x44d248
  40876c:	nop
  40876d:	mov    rcx,QWORD PTR [rsp+0x20]
  408772:	call   0x40215c
  408777:	jmp    0x4087b8
  408779:	mov    QWORD PTR [rdi],rbx
  40877c:	mov    DWORD PTR [rdi+0xc],ebx
  40877f:	mov    DWORD PTR [rdi+0x8],ebx
  408782:	mov    DWORD PTR [rdi+0x14],ebx
  408785:	mov    DWORD PTR [rdi+0x10],ebx
  408788:	mov    DWORD PTR [rdi+0x1c],ebx
  40878b:	mov    DWORD PTR [rdi+0x18],ebx
  40878e:	mov    BYTE PTR [rdi+0x24],bl
  408791:	mov    BYTE PTR [rdi+0x25],bl
  408794:	cmp    eax,edx
  408796:	cmovne ecx,eax
  408799:	mov    DWORD PTR [rdi+0x20],ecx
  40879c:	lea    rcx,[rdi+0x28]
  4087a0:	mov    rdx,QWORD PTR [rsp+0x30]
  4087a5:	call   0x403290
  4087aa:	nop
  4087ab:	mov    rcx,QWORD PTR [rsp+0x20]
  4087b0:	call   0x40215c
  4087b5:	nop
  4087b6:	jmp    0x4087bb
  4087b8:	mov    sil,bl
  4087bb:	lea    rcx,[rsp+0x40]
  4087c0:	call   0x407be4
  4087c5:	mov    al,sil
  4087c8:	add    rsp,0x88
  4087cf:	pop    rdi
  4087d0:	pop    rsi
  4087d1:	pop    rbp
  4087d2:	pop    rbx
  4087d3:	ret    
  4087d4:	rex.W push rbp
  4087d6:	sub    rsp,0x20
  4087da:	mov    rbp,rdx
  4087dd:	lea    rcx,[rbp+0x48]
  4087e1:	call   0x409728
  4087e6:	add    rsp,0x20
  4087ea:	pop    rbp
  4087eb:	ret    
  4087ec:	int3   
  4087ed:	int3   
  4087ee:	int3   
  4087ef:	int3   
  4087f0:	int3   
  4087f1:	int3   
  4087f2:	int3   
  4087f3:	int3   
  4087f4:	rex.W push rbp
  4087f6:	sub    rsp,0x20
  4087fa:	mov    rbp,rdx
  4087fd:	lea    rcx,[rbp+0x30]
  408801:	call   0x401000
  408806:	add    rsp,0x20
  40880a:	pop    rbp
  40880b:	ret    
  40880c:	int3   
  40880d:	int3   
  40880e:	int3   
  40880f:	int3   
  408810:	int3   
  408811:	int3   
  408812:	int3   
  408813:	int3   
  408814:	rex.W push rbp
  408816:	sub    rsp,0x20
  40881a:	mov    rbp,rdx
  40881d:	lea    rcx,[rbp+0x20]
  408821:	call   0x401000
  408826:	add    rsp,0x20
  40882a:	pop    rbp
  40882b:	ret    
  40882c:	int3   
  40882d:	int3   
  40882e:	int3   
  40882f:	int3   
  408830:	int3   
  408831:	int3   
  408832:	int3   
  408833:	int3   
  408834:	rex.W push rbp
  408836:	sub    rsp,0x20
  40883a:	mov    rbp,rdx
  40883d:	lea    rcx,[rbp+0x48]
  408841:	call   0x40810c
  408846:	add    rsp,0x20
  40884a:	pop    rbp
  40884b:	ret    
  40884c:	int3   
  40884d:	int3   
  40884e:	int3   
  40884f:	int3   
  408850:	int3   
  408851:	int3   
  408852:	int3   
  408853:	int3   
  408854:	rex.W push rbp
  408856:	sub    rsp,0x20
  40885a:	mov    rbp,rdx
  40885d:	lea    rcx,[rbp+0x48]
  408861:	call   0x408114
  408866:	add    rsp,0x20
  40886a:	pop    rbp
  40886b:	ret    
  40886c:	int3   
  40886d:	int3   
  40886e:	int3   
  40886f:	int3   
  408870:	int3   
  408871:	int3   
  408872:	int3   
  408873:	int3   
  408874:	rex.W push rbp
  408876:	sub    rsp,0x20
  40887a:	mov    rbp,rdx
  40887d:	lea    rcx,[rbp+0x60]
  408881:	call   0x401000
  408886:	add    rsp,0x20
  40888a:	pop    rbp
  40888b:	ret    
  40888c:	int3   
  40888d:	int3   
  40888e:	int3   
  40888f:	int3   
  408890:	int3   
  408891:	int3   
  408892:	int3   
  408893:	int3   
  408894:	rex.W push rbp
  408896:	sub    rsp,0x20
  40889a:	mov    rbp,rdx
  40889d:	lea    rcx,[rbp+0x40]
  4088a1:	call   0x40810c
  4088a6:	add    rsp,0x20
  4088aa:	pop    rbp
  4088ab:	ret    
  4088ac:	int3   
  4088ad:	int3   
  4088ae:	int3   
  4088af:	int3   
  4088b0:	int3   
  4088b1:	int3   
  4088b2:	int3   
  4088b3:	int3   
  4088b4:	rex.W push rbp
  4088b6:	sub    rsp,0x20
  4088ba:	mov    rbp,rdx
  4088bd:	lea    rcx,[rbp+0x20]
  4088c1:	call   0x401000
  4088c6:	add    rsp,0x20
  4088ca:	pop    rbp
  4088cb:	ret    
  4088cc:	rex.W push rbx
  4088ce:	mov    rax,rsp
  4088d1:	sub    rsp,0x60
  4088d5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4088de:	mov    rbx,rcx
  4088e1:	mov    QWORD PTR [rax-0x38],0x0
  4088e9:	mov    DWORD PTR [rax-0x2c],0x0
  4088f0:	mov    DWORD PTR [rax-0x30],0x0
  4088f7:	mov    DWORD PTR [rax-0x24],0x0
  4088fe:	mov    DWORD PTR [rax-0x28],0x0
  408905:	mov    DWORD PTR [rax-0x1c],0x0
  40890c:	mov    DWORD PTR [rax-0x20],0x0
  408913:	mov    DWORD PTR [rax-0x18],0x0
  40891a:	mov    BYTE PTR [rax-0x14],0x0
  40891e:	mov    BYTE PTR [rax-0x13],0x0
  408922:	lea    rcx,[rax-0x10]
  408926:	call   0x403150
  40892b:	nop
  40892c:	mov    rdx,rbx
  40892f:	lea    rcx,[rsp+0x28]
  408934:	call   0x408134
  408939:	test   al,al
  40893b:	je     0x40894a
  40893d:	mov    eax,DWORD PTR [rsp+0x48]
  408941:	shr    eax,0x4
  408944:	mov    bl,0x1
  408946:	test   bl,al
  408948:	je     0x40894c
  40894a:	xor    bl,bl
  40894c:	mov    rcx,QWORD PTR [rsp+0x50]
  408951:	call   0x40215c
  408956:	mov    al,bl
  408958:	add    rsp,0x60
  40895c:	pop    rbx
  40895d:	ret    
  40895e:	int3   
  40895f:	int3   
  408960:	int3   
  408961:	int3   
  408962:	int3   
  408963:	int3   
  408964:	int3   
  408965:	int3   
  408966:	int3   
  408967:	int3   
  408968:	int3   
  408969:	int3   
  40896a:	int3   
  40896b:	int3   
  40896c:	rex.W push rbp
  40896e:	sub    rsp,0x20
  408972:	mov    rbp,rdx
  408975:	lea    rcx,[rbp+0x28]
  408979:	call   0x406fe0
  40897e:	add    rsp,0x20
  408982:	pop    rbp
  408983:	ret    
  408984:	rex.W push rbx
  408986:	mov    rax,rsp
  408989:	sub    rsp,0x60
  40898d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  408996:	mov    rbx,rcx
  408999:	mov    QWORD PTR [rax-0x38],0x0
  4089a1:	mov    DWORD PTR [rax-0x2c],0x0
  4089a8:	mov    DWORD PTR [rax-0x30],0x0
  4089af:	mov    DWORD PTR [rax-0x24],0x0
  4089b6:	mov    DWORD PTR [rax-0x28],0x0
  4089bd:	mov    DWORD PTR [rax-0x1c],0x0
  4089c4:	mov    DWORD PTR [rax-0x20],0x0
  4089cb:	mov    DWORD PTR [rax-0x18],0x0
  4089d2:	mov    BYTE PTR [rax-0x14],0x0
  4089d6:	mov    BYTE PTR [rax-0x13],0x0
  4089da:	lea    rcx,[rax-0x10]
  4089de:	call   0x403150
  4089e3:	nop
  4089e4:	mov    rdx,rbx
  4089e7:	lea    rcx,[rsp+0x28]
  4089ec:	call   0x408134
  4089f1:	test   al,al
  4089f3:	je     0x408a02
  4089f5:	mov    eax,DWORD PTR [rsp+0x48]
  4089f9:	shr    eax,0x4
  4089fc:	mov    bl,0x1
  4089fe:	test   bl,al
  408a00:	jne    0x408a04
  408a02:	xor    bl,bl
  408a04:	mov    rcx,QWORD PTR [rsp+0x50]
  408a09:	call   0x40215c
  408a0e:	mov    al,bl
  408a10:	add    rsp,0x60
  408a14:	pop    rbx
  408a15:	ret    
  408a16:	int3   
  408a17:	int3   
  408a18:	int3   
  408a19:	int3   
  408a1a:	int3   
  408a1b:	int3   
  408a1c:	int3   
  408a1d:	int3   
  408a1e:	int3   
  408a1f:	int3   
  408a20:	int3   
  408a21:	int3   
  408a22:	int3   
  408a23:	int3   
  408a24:	rex.W push rbp
  408a26:	sub    rsp,0x20
  408a2a:	mov    rbp,rdx
  408a2d:	lea    rcx,[rbp+0x28]
  408a31:	call   0x406fe0
  408a36:	add    rsp,0x20
  408a3a:	pop    rbp
  408a3b:	ret    
  408a3c:	rex.W push rbx
  408a3e:	sub    rsp,0x60
  408a42:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  408a4b:	mov    rbx,rcx
  408a4e:	xor    eax,eax
  408a50:	mov    QWORD PTR [rsp+0x28],rax
  408a55:	mov    DWORD PTR [rsp+0x34],eax
  408a59:	mov    DWORD PTR [rsp+0x30],eax
  408a5d:	mov    DWORD PTR [rsp+0x3c],eax
  408a61:	mov    DWORD PTR [rsp+0x38],eax
  408a65:	mov    DWORD PTR [rsp+0x44],eax
  408a69:	mov    DWORD PTR [rsp+0x40],eax
  408a6d:	mov    DWORD PTR [rsp+0x48],eax
  408a71:	mov    BYTE PTR [rsp+0x4c],al
  408a75:	mov    BYTE PTR [rsp+0x4d],al
  408a79:	lea    rcx,[rsp+0x50]
  408a7e:	call   0x403150
  408a83:	nop
  408a84:	mov    rdx,rbx
  408a87:	lea    rcx,[rsp+0x28]
  408a8c:	call   0x408134
  408a91:	mov    bl,al
  408a93:	mov    rcx,QWORD PTR [rsp+0x50]
  408a98:	call   0x40215c
  408a9d:	mov    al,bl
  408a9f:	add    rsp,0x60
  408aa3:	pop    rbx
  408aa4:	ret    
  408aa5:	int3   
  408aa6:	int3   
  408aa7:	int3   
  408aa8:	int3   
  408aa9:	int3   
  408aaa:	int3   
  408aab:	int3   
  408aac:	rex.W push rbp
  408aae:	sub    rsp,0x20
  408ab2:	mov    rbp,rdx
  408ab5:	lea    rcx,[rbp+0x28]
  408ab9:	call   0x406fe0
  408abe:	add    rsp,0x20
  408ac2:	pop    rbp
  408ac3:	ret    
  408ac4:	rex.W push rbx
  408ac6:	push   rbp
  408ac7:	push   rsi
  408ac8:	push   rdi
  408ac9:	push   r12
  408acb:	push   r13
  408acd:	sub    rsp,0x48
  408ad1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  408ada:	mov    r12,rcx
  408add:	movsxd rbx,DWORD PTR [rcx+0x8]
  408ae1:	mov    rdi,rbx
  408ae4:	test   ebx,ebx
  408ae6:	je     0x408b14
  408ae8:	shl    rdi,0x3
  408aec:	add    ebx,0xffffffff
  408aef:	sub    rdi,0x8
  408af3:	mov    rax,QWORD PTR [r12]
  408af7:	mov    rsi,QWORD PTR [rdi+rax*1]
  408afb:	test   rsi,rsi
  408afe:	je     0x408b10
  408b00:	mov    rcx,QWORD PTR [rsi]
  408b03:	call   0x40215c
  408b08:	mov    rcx,rsi
  408b0b:	call   0x40215c
  408b10:	test   ebx,ebx
  408b12:	jne    0x408aec
  408b14:	mov    DWORD PTR [r12+0x8],0x0
  408b1d:	xor    edx,edx
  408b1f:	xor    ecx,ecx
  408b21:	call   QWORD PTR [rip+0x44651]        # 0x44d178
  408b27:	mov    edi,eax
  408b29:	test   eax,eax
  408b2b:	je     0x408c08
  408b31:	mov    rcx,rdi
  408b34:	xor    ebx,ebx
  408b36:	mov    QWORD PTR [rsp+0x80],rbx
  408b3e:	test   eax,eax
  408b40:	je     0x408b55
  408b42:	add    rcx,rcx
  408b45:	call   0x402130
  408b4a:	mov    rbx,rax
  408b4d:	mov    QWORD PTR [rsp+0x80],rax
  408b55:	mov    rdx,rbx
  408b58:	mov    ecx,edi
  408b5a:	call   QWORD PTR [rip+0x44618]        # 0x44d178
  408b60:	mov    esi,eax
  408b62:	test   eax,eax
  408b64:	je     0x408bfe
  408b6a:	cmp    eax,edi
  408b6c:	ja     0x408bfe
  408b72:	lea    rcx,[rsp+0x28]
  408b77:	call   0x403150
  408b7c:	nop
  408b7d:	xor    r13d,r13d
  408b80:	xor    edi,edi
  408b82:	test   esi,esi
  408b84:	je     0x408bdf
  408b86:	mov    rbp,rbx
  408b89:	cmp    WORD PTR [rbp+0x0],0x0
  408b8e:	jne    0x408bd5
  408b90:	lea    rdx,[rbx+r13*2]
  408b94:	lea    rcx,[rsp+0x28]
  408b99:	call   0x403290
  408b9e:	lea    r13d,[rdi+0x1]
  408ba2:	mov    ecx,0x10
  408ba7:	call   0x402130
  408bac:	mov    QWORD PTR [rsp+0x88],rax
  408bb4:	test   rax,rax
  408bb7:	je     0x408bc8
  408bb9:	lea    rdx,[rsp+0x28]
  408bbe:	mov    rcx,rax
  408bc1:	call   0x403208
  408bc6:	jmp    0x408bca
  408bc8:	xor    eax,eax
  408bca:	mov    rdx,rax
  408bcd:	mov    rcx,r12
  408bd0:	call   0x4010c8
  408bd5:	inc    edi
  408bd7:	add    rbp,0x2
  408bdb:	cmp    edi,esi
  408bdd:	jb     0x408b89
  408bdf:	cmp    r13d,esi
  408be2:	sete   dil
  408be6:	mov    rcx,QWORD PTR [rsp+0x28]
  408beb:	call   0x40215c
  408bf0:	nop
  408bf1:	mov    rcx,rbx
  408bf4:	call   0x40215c
  408bf9:	mov    al,dil
  408bfc:	jmp    0x408c08
  408bfe:	mov    rcx,rbx
  408c01:	call   0x40215c
  408c06:	xor    al,al
  408c08:	add    rsp,0x48
  408c0c:	pop    r13
  408c0e:	pop    r12
  408c10:	pop    rdi
  408c11:	pop    rsi
  408c12:	pop    rbp
  408c13:	pop    rbx
  408c14:	ret    
  408c15:	int3   
  408c16:	int3   
  408c17:	int3   
  408c18:	int3   
  408c19:	int3   
  408c1a:	int3   
  408c1b:	int3   
  408c1c:	int3   
  408c1d:	int3   
  408c1e:	int3   
  408c1f:	int3   
  408c20:	int3   
  408c21:	int3   
  408c22:	int3   
  408c23:	int3   
  408c24:	rex.W push rbp
  408c26:	sub    rsp,0x20
  408c2a:	mov    rbp,rdx
  408c2d:	lea    rcx,[rbp+0x80]
  408c34:	call   0x401000
  408c39:	add    rsp,0x20
  408c3d:	pop    rbp
  408c3e:	ret    
  408c3f:	int3   
  408c40:	int3   
  408c41:	int3   
  408c42:	int3   
  408c43:	int3   
  408c44:	rex.W push rbp
  408c46:	sub    rsp,0x20
  408c4a:	mov    rbp,rdx
  408c4d:	lea    rcx,[rbp+0x28]
  408c51:	call   0x401000
  408c56:	add    rsp,0x20
  408c5a:	pop    rbp
  408c5b:	ret    
  408c5c:	int3   
  408c5d:	int3   
  408c5e:	int3   
  408c5f:	int3   
  408c60:	int3   
  408c61:	int3   
  408c62:	int3   
  408c63:	int3   
  408c64:	rex.W push rbp
  408c66:	sub    rsp,0x20
  408c6a:	mov    rbp,rdx
  408c6d:	mov    rcx,QWORD PTR [rbp+0x88]
  408c74:	call   0x40215c
  408c79:	add    rsp,0x20
  408c7d:	pop    rbp
  408c7e:	ret    
  408c7f:	int3   
  408c80:	rex.W push rbx
  408c82:	sub    rsp,0x20
  408c86:	cmp    QWORD PTR [rcx],0xffffffffffffffff
  408c8a:	mov    rbx,rcx
  408c8d:	je     0x408ca3
  408c8f:	mov    rcx,QWORD PTR [rcx]
  408c92:	call   QWORD PTR [rip+0x44548]        # 0x44d1e0
  408c98:	test   eax,eax
  408c9a:	je     0x408ca5
  408c9c:	mov    QWORD PTR [rbx],0xffffffffffffffff
  408ca3:	mov    al,0x1
  408ca5:	add    rsp,0x20
  408ca9:	pop    rbx
  408caa:	ret    
  408cab:	int3   
  408cac:	rex.W push rbx
  408cae:	push   rdi
  408caf:	sub    rsp,0x28
  408cb3:	cmp    BYTE PTR [rcx+0x8],0x0
  408cb7:	mov    rbx,rdx
  408cba:	je     0x408ccb
  408cbc:	cmp    BYTE PTR [rcx+0x9],0x0
  408cc0:	je     0x408ccb
  408cc2:	mov    rax,QWORD PTR [rcx+0x10]
  408cc6:	mov    QWORD PTR [rdx],rax
  408cc9:	jmp    0x408cff
  408ccb:	mov    rcx,QWORD PTR [rcx]
  408cce:	lea    rdx,[rsp+0x40]
  408cd3:	call   QWORD PTR [rip+0x4448f]        # 0x44d168
  408cd9:	cmp    eax,0xffffffff
  408cdc:	mov    edi,eax
  408cde:	jne    0x408cee
  408ce0:	call   QWORD PTR [rip+0x444ba]        # 0x44d1a0
  408ce6:	test   eax,eax
  408ce8:	je     0x408cee
  408cea:	xor    al,al
  408cec:	jmp    0x408d01
  408cee:	mov    ecx,DWORD PTR [rsp+0x40]
  408cf2:	mov    rax,rdi
  408cf5:	shl    rcx,0x20
  408cf9:	add    rcx,rdi
  408cfc:	mov    QWORD PTR [rbx],rcx
  408cff:	mov    al,0x1
  408d01:	add    rsp,0x28
  408d05:	pop    rdi
  408d06:	pop    rbx
  408d07:	ret    
  408d08:	rex.W push rbx
  408d0a:	push   rdi
  408d0b:	sub    rsp,0x28
  408d0f:	cmp    BYTE PTR [rcx+0x8],0x0
  408d13:	mov    rdi,r9
  408d16:	je     0x408d2b
  408d18:	cmp    BYTE PTR [rcx+0x9],0x0
  408d1c:	je     0x408d2b
  408d1e:	cmp    r8d,0x2
  408d22:	jne    0x408d2b
  408d24:	add    rdx,QWORD PTR [rcx+0x10]
  408d28:	xor    r8d,r8d
  408d2b:	mov    rcx,QWORD PTR [rcx]
  408d2e:	mov    rax,rdx
  408d31:	mov    r9d,r8d
  408d34:	sar    rax,0x20
  408d38:	lea    r8,[rsp+0x40]
  408d3d:	mov    DWORD PTR [rsp+0x40],eax
  408d41:	call   QWORD PTR [rip+0x44419]        # 0x44d160
  408d47:	cmp    eax,0xffffffff
  408d4a:	mov    ebx,eax
  408d4c:	jne    0x408d5c
  408d4e:	call   QWORD PTR [rip+0x4444c]        # 0x44d1a0
  408d54:	test   eax,eax
  408d56:	je     0x408d5c
  408d58:	xor    al,al
  408d5a:	jmp    0x408d6f
  408d5c:	mov    ecx,DWORD PTR [rsp+0x40]
  408d60:	mov    rax,rbx
  408d63:	mov    al,0x1
  408d65:	shl    rcx,0x20
  408d69:	add    rcx,rbx
  408d6c:	mov    QWORD PTR [rdi],rcx
  408d6f:	add    rsp,0x28
  408d73:	pop    rdi
  408d74:	pop    rbx
  408d75:	ret    
  408d76:	int3   
  408d77:	int3   
  408d78:	mov    r9,r8
  408d7b:	xor    r8d,r8d
  408d7e:	jmp    0x408d08
  408d83:	int3   
  408d84:	rex.W push rbx
  408d86:	sub    rsp,0x30
  408d8a:	mov    rcx,QWORD PTR [rcx]
  408d8d:	mov    rbx,r9
  408d90:	lea    r9,[rsp+0x58]
  408d95:	mov    DWORD PTR [rsp+0x58],0x0
  408d9d:	mov    QWORD PTR [rsp+0x20],0x0
  408da6:	call   QWORD PTR [rip+0x443ac]        # 0x44d158
  408dac:	mov    ecx,DWORD PTR [rsp+0x58]
  408db0:	test   eax,eax
  408db2:	setne  al
  408db5:	mov    DWORD PTR [rbx],ecx
  408db7:	add    rsp,0x30
  408dbb:	pop    rbx
  408dbc:	ret    
  408dbd:	int3   
  408dbe:	int3   
  408dbf:	int3   
  408dc0:	mov    eax,DWORD PTR [rip+0x5f2d6]        # 0x46809c
  408dc6:	cmp    r8d,eax
  408dc9:	cmova  r8d,eax
  408dcd:	jmp    0x408d84
  408dd2:	int3   
  408dd3:	int3   
  408dd4:	rex.W push rbx
  408dd6:	push   rbp
  408dd7:	push   rsi
  408dd8:	push   rdi
  408dd9:	sub    rsp,0x28
  408ddd:	mov    rsi,r9
  408de0:	mov    ebx,r8d
  408de3:	mov    rdi,rdx
  408de6:	mov    rbp,rcx
  408de9:	mov    DWORD PTR [r9],0x0
  408df0:	mov    eax,DWORD PTR [rip+0x5f2a6]        # 0x46809c
  408df6:	mov    r8d,ebx
  408df9:	lea    r9,[rsp+0x60]
  408dfe:	cmp    ebx,eax
  408e00:	mov    rdx,rdi
  408e03:	mov    rcx,rbp
  408e06:	cmova  r8d,eax
  408e0a:	mov    DWORD PTR [rsp+0x60],0x0
  408e12:	call   0x408d84
  408e17:	mov    ecx,DWORD PTR [rsp+0x60]
  408e1b:	add    DWORD PTR [rsi],ecx
  408e1d:	test   al,al
  408e1f:	je     0x408e3a
  408e21:	test   ecx,ecx
  408e23:	je     0x408e2f
  408e25:	add    rdi,rcx
  408e28:	sub    ebx,ecx
  408e2a:	mov    rax,rcx
  408e2d:	jne    0x408df0
  408e2f:	mov    al,0x1
  408e31:	add    rsp,0x28
  408e35:	pop    rdi
  408e36:	pop    rsi
  408e37:	pop    rbp
  408e38:	pop    rbx
  408e39:	ret    
  408e3a:	xor    al,al
  408e3c:	jmp    0x408e31
  408e3e:	int3   
  408e3f:	int3   
  408e40:	sub    rsp,0x28
  408e44:	mov    rcx,QWORD PTR [rcx]
  408e47:	call   QWORD PTR [rip+0x4439b]        # 0x44d1e8
  408e4d:	xor    ecx,ecx
  408e4f:	cmp    eax,ecx
  408e51:	setne  al
  408e54:	add    rsp,0x28
  408e58:	ret    
  408e59:	int3   
  408e5a:	int3   
  408e5b:	int3   
  408e5c:	sub    rsp,0x28
  408e60:	mov    rcx,QWORD PTR [rcx]
  408e63:	mov    r9,rdx
  408e66:	xor    r8d,r8d
  408e69:	xor    edx,edx
  408e6b:	call   QWORD PTR [rip+0x44377]        # 0x44d1e8
  408e71:	xor    ecx,ecx
  408e73:	cmp    eax,ecx
  408e75:	setne  al
  408e78:	add    rsp,0x28
  408e7c:	ret    
  408e7d:	int3   
  408e7e:	int3   
  408e7f:	int3   
  408e80:	rex.W push rbx
  408e82:	sub    rsp,0x30
  408e86:	mov    eax,DWORD PTR [rip+0x5f210]        # 0x46809c
  408e8c:	mov    rcx,QWORD PTR [rcx]
  408e8f:	mov    rbx,r9
  408e92:	cmp    r8d,eax
  408e95:	lea    r9,[rsp+0x50]
  408e9a:	mov    DWORD PTR [rsp+0x50],0x0
  408ea2:	cmova  r8d,eax
  408ea6:	mov    QWORD PTR [rsp+0x20],0x0
  408eaf:	call   QWORD PTR [rip+0x4429b]        # 0x44d150
  408eb5:	mov    ecx,DWORD PTR [rsp+0x50]
  408eb9:	test   eax,eax
  408ebb:	mov    DWORD PTR [rbx],ecx
  408ebd:	setne  al
  408ec0:	add    rsp,0x30
  408ec4:	pop    rbx
  408ec5:	ret    
  408ec6:	int3   
  408ec7:	int3   
  408ec8:	rex.W push rbx
  408eca:	push   rbp
  408ecb:	push   rsi
  408ecc:	push   rdi
  408ecd:	sub    rsp,0x28
  408ed1:	mov    rsi,r9
  408ed4:	mov    ebx,r8d
  408ed7:	mov    rdi,rdx
  408eda:	mov    rbp,rcx
  408edd:	mov    DWORD PTR [r9],0x0
  408ee4:	lea    r9,[rsp+0x68]
  408ee9:	mov    r8d,ebx
  408eec:	mov    rdx,rdi
  408eef:	mov    rcx,rbp
  408ef2:	mov    DWORD PTR [rsp+0x68],0x0
  408efa:	call   0x408e80
  408eff:	mov    edx,DWORD PTR [rsp+0x68]
  408f03:	add    DWORD PTR [rsi],edx
  408f05:	test   al,al
  408f07:	je     0x408f22
  408f09:	test   edx,edx
  408f0b:	je     0x408f17
  408f0d:	add    rdi,rdx
  408f10:	sub    ebx,edx
  408f12:	mov    rax,rdx
  408f15:	jne    0x408ee4
  408f17:	mov    al,0x1
  408f19:	add    rsp,0x28
  408f1d:	pop    rdi
  408f1e:	pop    rsi
  408f1f:	pop    rbp
  408f20:	pop    rbx
  408f21:	ret    
  408f22:	xor    al,al
  408f24:	jmp    0x408f19
  408f26:	int3   
  408f27:	int3   
  408f28:	rex.W push rbx
  408f2a:	push   rsi
  408f2b:	push   rdi
  408f2c:	sub    rsp,0x20
  408f30:	lea    r9,[rsp+0x50]
  408f35:	xor    r8d,r8d
  408f38:	mov    rdi,rdx
  408f3b:	mov    rsi,rcx
  408f3e:	call   0x408d08
  408f43:	xor    ebx,ebx
  408f45:	cmp    al,bl
  408f47:	je     0x408f50
  408f49:	cmp    QWORD PTR [rsp+0x50],rdi
  408f4e:	je     0x408f54
  408f50:	xor    al,al
  408f52:	jmp    0x408f62
  408f54:	mov    rcx,QWORD PTR [rsi]
  408f57:	call   QWORD PTR [rip+0x441eb]        # 0x44d148
  408f5d:	cmp    eax,ebx
  408f5f:	setne  al
  408f62:	add    rsp,0x20
  408f66:	pop    rdi
  408f67:	pop    rsi
  408f68:	pop    rbx
  408f69:	ret    
  408f6a:	int3   
  408f6b:	int3   
  408f6c:	rex.W push rbx
  408f6e:	push   rbp
  408f6f:	push   rsi
  408f70:	push   rdi
  408f71:	push   r12
  408f73:	push   r13
  408f75:	push   r14
  408f77:	push   r15
  408f79:	sub    rsp,0x68
  408f7d:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  408f86:	mov    r14d,r9d
  408f89:	mov    r15d,r8d
  408f8c:	mov    rbp,rdx
  408f8f:	mov    rdi,rcx
  408f92:	call   0x408c80
  408f97:	xor    ebx,ebx
  408f99:	cmp    al,bl
  408f9b:	jne    0x408fa4
  408f9d:	xor    al,al
  408f9f:	jmp    0x40904e
  408fa4:	mov    BYTE PTR [rdi+0x8],bl
  408fa7:	mov    rcx,rbp
  408faa:	call   0x40a3e4
  408faf:	mov    esi,eax
  408fb1:	mov    r12d,DWORD PTR [rsp+0xd8]
  408fb9:	mov    r13d,DWORD PTR [rsp+0xd0]
  408fc1:	cmp    eax,0x1
  408fc4:	je     0x408fea
  408fc6:	mov    QWORD PTR [rsp+0x30],rbx
  408fcb:	mov    DWORD PTR [rsp+0x28],r12d
  408fd0:	mov    DWORD PTR [rsp+0x20],r13d
  408fd5:	xor    r9d,r9d
  408fd8:	mov    r8d,r14d
  408fdb:	mov    edx,r15d
  408fde:	mov    rcx,rbp
  408fe1:	call   QWORD PTR [rip+0x44209]        # 0x44d1f0
  408fe7:	mov    QWORD PTR [rdi],rax
  408fea:	cmp    QWORD PTR [rdi],0xffffffffffffffff
  408fee:	jne    0x409047
  408ff0:	cmp    esi,ebx
  408ff2:	je     0x409047
  408ff4:	lea    rcx,[rsp+0x48]
  408ff9:	call   0x403150
  408ffe:	nop
  408fff:	cmp    esi,0x1
  409002:	setne  r8b
  409006:	lea    rdx,[rsp+0x48]
  40900b:	mov    rcx,rbp
  40900e:	call   0x40aa60
  409013:	cmp    al,bl
  409015:	je     0x40903d
  409017:	mov    QWORD PTR [rsp+0x30],rbx
  40901c:	mov    DWORD PTR [rsp+0x28],r12d
  409021:	mov    DWORD PTR [rsp+0x20],r13d
  409026:	xor    r9d,r9d
  409029:	mov    r8d,r14d
  40902c:	mov    edx,r15d
  40902f:	mov    rcx,QWORD PTR [rsp+0x48]
  409034:	call   QWORD PTR [rip+0x441b6]        # 0x44d1f0
  40903a:	mov    QWORD PTR [rdi],rax
  40903d:	mov    rcx,QWORD PTR [rsp+0x48]
  409042:	call   0x40215c
  409047:	cmp    QWORD PTR [rdi],0xffffffffffffffff
  40904b:	setne  al
  40904e:	add    rsp,0x68
  409052:	pop    r15
  409054:	pop    r14
  409056:	pop    r13
  409058:	pop    r12
  40905a:	pop    rdi
  40905b:	pop    rsi
  40905c:	pop    rbp
  40905d:	pop    rbx
  40905e:	ret    
  40905f:	int3   
  409060:	int3   
  409061:	int3   
  409062:	int3   
  409063:	int3   
  409064:	int3   
  409065:	int3   
  409066:	int3   
  409067:	int3   
  409068:	int3   
  409069:	int3   
  40906a:	int3   
  40906b:	int3   
  40906c:	rex.W push rbp
  40906e:	sub    rsp,0x20
  409072:	mov    rbp,rdx
  409075:	lea    rcx,[rbp+0x48]
  409079:	call   0x401000
  40907e:	add    rsp,0x20
  409082:	pop    rbp
  409083:	ret    
  409084:	rex.W push rbx
  409086:	push   rbp
  409087:	push   rsi
  409088:	push   rdi
  409089:	push   r13
  40908b:	sub    rsp,0x20
  40908f:	mov    rbx,QWORD PTR [rcx+0x10]
  409093:	lea    r9,[rsp+0x50]
  409098:	xor    r8d,r8d
  40909b:	and    rbx,0xffffffffffffc000
  4090a2:	mov    rdi,rcx
  4090a5:	mov    rdx,rbx
  4090a8:	call   0x408d08
  4090ad:	test   al,al
  4090af:	je     0x40919d
  4090b5:	mov    r13d,0x4000
  4090bb:	mov    rcx,r13
  4090be:	call   0x44ad00
  4090c3:	lea    r9,[rsp+0x50]
  4090c8:	mov    r8d,r13d
  4090cb:	mov    rcx,rdi
  4090ce:	mov    rdx,rax
  4090d1:	mov    bpl,0x1
  4090d4:	mov    rsi,rax
  4090d7:	mov    DWORD PTR [rsp+0x50],0x0
  4090df:	call   0x408d84
  4090e4:	test   al,al
  4090e6:	je     0x40916d
  4090ec:	mov    ecx,DWORD PTR [rsp+0x50]
  4090f0:	test   ecx,ecx
  4090f2:	je     0x40912a
  4090f4:	lea    rax,[rbx+rcx*1]
  4090f8:	xor    bpl,bpl
  4090fb:	cmp    ecx,r13d
  4090fe:	mov    QWORD PTR [rdi+0x10],rax
  409102:	jne    0x409195
  409108:	lea    r9,[rsp+0x50]
  40910d:	mov    r8d,r13d
  409110:	mov    rdx,rsi
  409113:	mov    rcx,rdi
  409116:	add    rbx,r13
  409119:	mov    DWORD PTR [rsp+0x50],0x0
  409121:	call   0x408d84
  409126:	test   al,al
  409128:	jne    0x4090ec
  40912a:	test   bpl,bpl
  40912d:	je     0x409195
  40912f:	jmp    0x40916d
  409131:	test   rsi,rsi
  409134:	jne    0x409146
  409136:	mov    rcx,r13
  409139:	call   0x44ad00
  40913e:	test   rax,rax
  409141:	mov    rsi,rax
  409144:	je     0x409195
  409146:	lea    r9,[rsp+0x50]
  40914b:	mov    r8d,r13d
  40914e:	mov    rdx,rsi
  409151:	mov    rcx,rdi
  409154:	mov    DWORD PTR [rsp+0x50],0x0
  40915c:	call   0x408d84
  409161:	test   al,al
  409163:	je     0x409195
  409165:	mov    eax,DWORD PTR [rsp+0x50]
  409169:	test   eax,eax
  40916b:	jne    0x40918e
  40916d:	test   rbx,rbx
  409170:	je     0x409195
  409172:	sub    rbx,r13
  409175:	lea    r9,[rsp+0x50]
  40917a:	xor    r8d,r8d
  40917d:	mov    rdx,rbx
  409180:	mov    rcx,rdi
  409183:	call   0x408d08
  409188:	test   al,al
  40918a:	jne    0x409131
  40918c:	jmp    0x409195
  40918e:	add    rax,rbx
  409191:	mov    QWORD PTR [rdi+0x10],rax
  409195:	mov    rcx,rsi
  409198:	call   0x44ad20
  40919d:	add    rsp,0x20
  4091a1:	pop    r13
  4091a3:	pop    rdi
  4091a4:	pop    rsi
  4091a5:	pop    rbp
  4091a6:	pop    rbx
  4091a7:	ret    
  4091a8:	rex.W push rbx
  4091aa:	push   rbp
  4091ab:	push   rsi
  4091ac:	push   rdi
  4091ad:	mov    r11,rsp
  4091b0:	sub    rsp,0xb8
  4091b7:	xor    ebp,ebp
  4091b9:	cmp    QWORD PTR [rcx],0xffffffffffffffff
  4091bd:	mov    rdi,rdx
  4091c0:	mov    BYTE PTR [rcx+0x9],bpl
  4091c4:	mov    QWORD PTR [rcx+0x10],rbp
  4091c8:	mov    rbx,rcx
  4091cb:	je     0x4093e6
  4091d1:	cmp    BYTE PTR [rcx+0x8],bpl
  4091d5:	je     0x4093e6
  4091db:	mov    rcx,QWORD PTR [rcx]
  4091de:	mov    QWORD PTR [r11-0x80],rbp
  4091e2:	lea    rax,[r11+0x28]
  4091e6:	mov    QWORD PTR [rsp+0x30],rax
  4091eb:	lea    rax,[r11-0x58]
  4091ef:	xor    r9d,r9d
  4091f2:	xor    r8d,r8d
  4091f5:	mov    edx,0x74004
  4091fa:	mov    DWORD PTR [rsp+0x28],0x20
  409202:	mov    QWORD PTR [rsp+0x20],rax
  409207:	mov    sil,0x1
  40920a:	call   QWORD PTR [rip+0x43f60]        # 0x44d170
  409210:	cmp    eax,ebp
  409212:	je     0x4092af
  409218:	mov    rax,QWORD PTR [rsp+0x68]
  40921d:	mov    BYTE PTR [rbx+0x9],sil
  409221:	mov    cx,0x5c
  409225:	mov    QWORD PTR [rbx+0x10],rax
  409229:	cmp    WORD PTR [rdi],cx
  40922c:	mov    sil,bpl
  40922f:	jne    0x4092af
  409231:	cmp    WORD PTR [rdi+0x2],cx
  409235:	jne    0x4092af
  409237:	cmp    WORD PTR [rdi+0x4],0x2e
  40923c:	jne    0x4092af
  40923e:	cmp    WORD PTR [rdi+0x6],cx
  409242:	jne    0x4092af
  409244:	cmp    WORD PTR [rdi+0xa],0x3a
  409249:	jne    0x4092af
  40924b:	cmp    WORD PTR [rdi+0xc],bp
  40924f:	jne    0x4092af
  409251:	movzx  eax,WORD PTR [rdi+0x8]
  409255:	mov    WORD PTR [rsp+0xe4],cx
  40925d:	lea    r9,[rsp+0xf8]
  409265:	lea    r8,[rsp+0xf0]
  40926d:	lea    rdx,[rsp+0x40]
  409272:	lea    rcx,[rsp+0xe0]
  40927a:	mov    WORD PTR [rsp+0xe0],ax
  409282:	mov    WORD PTR [rsp+0xe2],0x3a
  40928c:	mov    WORD PTR [rsp+0xe6],bp
  409294:	call   0x40ae24
  409299:	cmp    al,bpl
  40929c:	je     0x4092ac
  40929e:	mov    rax,QWORD PTR [rsp+0xf0]
  4092a6:	mov    QWORD PTR [rbx+0x10],rax
  4092aa:	jmp    0x4092af
  4092ac:	mov    sil,0x1
  4092af:	cmp    BYTE PTR [rbx+0x9],bpl
  4092b3:	jne    0x4093b8
  4092b9:	mov    rcx,QWORD PTR [rbx]
  4092bc:	mov    QWORD PTR [rsp+0x38],rbp
  4092c1:	lea    rax,[rsp+0xe0]
  4092c9:	mov    QWORD PTR [rsp+0x30],rax
  4092ce:	lea    rax,[rsp+0x80]
  4092d6:	xor    r9d,r9d
  4092d9:	xor    r8d,r8d
  4092dc:	mov    edx,0x700a0
  4092e1:	mov    DWORD PTR [rsp+0x28],0x28
  4092e9:	mov    QWORD PTR [rsp+0x20],rax
  4092ee:	call   QWORD PTR [rip+0x43e7c]        # 0x44d170
  4092f4:	cmp    eax,ebp
  4092f6:	setne  al
  4092f9:	cmp    al,bpl
  4092fc:	mov    BYTE PTR [rbx+0x9],al
  4092ff:	je     0x409312
  409301:	mov    rax,QWORD PTR [rsp+0x98]
  409309:	mov    QWORD PTR [rbx+0x10],rax
  40930d:	jmp    0x4093b8
  409312:	mov    rcx,QWORD PTR [rbx]
  409315:	mov    QWORD PTR [rsp+0x38],rbp
  40931a:	lea    rax,[rsp+0xe0]
  409322:	mov    QWORD PTR [rsp+0x30],rax
  409327:	lea    rax,[rsp+0x48]
  40932c:	mov    edi,0x18
  409331:	xor    r9d,r9d
  409334:	xor    r8d,r8d
  409337:	mov    edx,0x70000
  40933c:	mov    DWORD PTR [rsp+0x28],edi
  409340:	mov    QWORD PTR [rsp+0x20],rax
  409345:	call   QWORD PTR [rip+0x43e25]        # 0x44d170
  40934b:	cmp    eax,ebp
  40934d:	setne  al
  409350:	cmp    al,bpl
  409353:	mov    BYTE PTR [rbx+0x9],al
  409356:	jne    0x409394
  409358:	mov    rcx,QWORD PTR [rbx]
  40935b:	mov    QWORD PTR [rsp+0x38],rbp
  409360:	lea    rax,[rsp+0xe0]
  409368:	mov    QWORD PTR [rsp+0x30],rax
  40936d:	lea    rax,[rsp+0x48]
  409372:	xor    r9d,r9d
  409375:	xor    r8d,r8d
  409378:	mov    edx,0x2404c
  40937d:	mov    DWORD PTR [rsp+0x28],edi
  409381:	mov    QWORD PTR [rsp+0x20],rax
  409386:	call   QWORD PTR [rip+0x43de4]        # 0x44d170
  40938c:	cmp    eax,ebp
  40938e:	setne  al
  409391:	mov    BYTE PTR [rbx+0x9],al
  409394:	cmp    BYTE PTR [rbx+0x9],bpl
  409398:	je     0x4093b8
  40939a:	mov    eax,DWORD PTR [rsp+0x58]
  40939e:	mov    ecx,DWORD PTR [rsp+0x5c]
  4093a2:	imul   rcx,rax
  4093a6:	mov    eax,DWORD PTR [rsp+0x54]
  4093aa:	imul   rcx,rax
  4093ae:	imul   rcx,QWORD PTR [rsp+0x48]
  4093b4:	mov    QWORD PTR [rbx+0x10],rcx
  4093b8:	cmp    sil,bpl
  4093bb:	je     0x4093e6
  4093bd:	cmp    BYTE PTR [rbx+0x9],bpl
  4093c1:	je     0x4093e6
  4093c3:	cmp    QWORD PTR [rbx+0x10],rbp
  4093c7:	je     0x4093e6
  4093c9:	mov    rcx,rbx
  4093cc:	call   0x409084
  4093d1:	lea    r9,[rsp+0xe0]
  4093d9:	xor    r8d,r8d
  4093dc:	xor    edx,edx
  4093de:	mov    rcx,rbx
  4093e1:	call   0x408d08
  4093e6:	add    rsp,0xb8
  4093ed:	pop    rdi
  4093ee:	pop    rsi
  4093ef:	pop    rbp
  4093f0:	pop    rbx
  4093f1:	ret    
  4093f2:	int3   
  4093f3:	int3   
  4093f4:	rex.W push rbx
  4093f6:	push   rsi
  4093f7:	push   rdi
  4093f8:	sub    rsp,0x30
  4093fc:	mov    eax,DWORD PTR [rsp+0x70]
  409400:	mov    rdi,rdx
  409403:	mov    rsi,rcx
  409406:	mov    DWORD PTR [rsp+0x28],eax
  40940a:	mov    DWORD PTR [rsp+0x20],r9d
  40940f:	mov    r9d,r8d
  409412:	mov    r8d,0x80000000
  409418:	call   0x408f6c
  40941d:	mov    rcx,rdi
  409420:	mov    bl,al
  409422:	call   0x409df4
  409427:	mov    rdx,rdi
  40942a:	mov    rcx,rsi
  40942d:	mov    BYTE PTR [rsi+0x8],al
  409430:	call   0x4091a8
  409435:	mov    al,bl
  409437:	add    rsp,0x30
  40943b:	pop    rdi
  40943c:	pop    rsi
  40943d:	pop    rbx
  40943e:	ret    
  40943f:	int3   
  409440:	sub    rsp,0x38
  409444:	neg    r8b
  409447:	mov    r9d,0x3
  40944d:	mov    DWORD PTR [rsp+0x20],0x80
  409455:	sbb    r8d,r8d
  409458:	and    r8d,0x2
  40945c:	or     r8d,0x1
  409460:	call   0x4093f4
  409465:	add    rsp,0x38
  409469:	ret    
  40946a:	int3   
  40946b:	int3   
  40946c:	sub    rsp,0x38
  409470:	mov    r9d,0x3
  409476:	mov    DWORD PTR [rsp+0x20],0x80
  40947e:	lea    r8d,[r9-0x2]
  409482:	call   0x4093f4
  409487:	add    rsp,0x38
  40948b:	ret    
  40948c:	sub    rsp,0x38
  409490:	mov    eax,DWORD PTR [rsp+0x60]
  409494:	mov    DWORD PTR [rsp+0x28],eax
  409498:	mov    DWORD PTR [rsp+0x20],r9d
  40949d:	mov    r9d,r8d
  4094a0:	mov    r8d,0x40000000
  4094a6:	call   0x408f6c
  4094ab:	add    rsp,0x38
  4094af:	ret    
  4094b0:	sub    rsp,0x38
  4094b4:	mov    DWORD PTR [rsp+0x28],0x80
  4094bc:	mov    DWORD PTR [rsp+0x20],r8d
  4094c1:	mov    r9d,0x1
  4094c7:	mov    r8d,0x40000000
  4094cd:	call   0x408f6c
  4094d2:	add    rsp,0x38
  4094d6:	ret    
  4094d7:	int3   
  4094d8:	sub    rsp,0x38
  4094dc:	neg    r8b
  4094df:	mov    r9d,0x1
  4094e5:	mov    r8d,0x40000000
  4094eb:	sbb    eax,eax
  4094ed:	mov    DWORD PTR [rsp+0x28],0x80
  4094f5:	neg    eax
  4094f7:	add    eax,r9d
  4094fa:	mov    DWORD PTR [rsp+0x20],eax
  4094fe:	call   0x408f6c
  409503:	add    rsp,0x38
  409507:	ret    
  409508:	rex.W push rbx
  40950a:	push   rsi
  40950b:	push   rdi
  40950c:	sub    rsp,0x20
  409510:	cmp    edx,DWORD PTR [r8+0xc]
  409514:	mov    rbx,r8
  409517:	mov    edi,edx
  409519:	mov    rsi,rcx
  40951c:	jbe    0x409526
  40951e:	mov    rcx,r8
  409521:	call   0x402ea4
  409526:	mov    rdx,QWORD PTR [rbx]
  409529:	xor    r8d,r8d
  40952c:	test   edi,edi
  40952e:	je     0x40954e
  409530:	mov    rax,rdx
  409533:	sub    rsi,rdx
  409536:	movzx  ecx,WORD PTR [rsi+rax*1]
  40953a:	test   cx,cx
  40953d:	je     0x40954e
  40953f:	inc    r8d
  409542:	mov    WORD PTR [rax],cx
  409545:	add    rax,0x2
  409549:	cmp    r8d,edi
  40954c:	jb     0x409536
  40954e:	mov    WORD PTR [rdx+r8*2],0x0
  409555:	mov    DWORD PTR [rbx+0x8],r8d
  409559:	add    rsp,0x20
  40955d:	pop    rdi
  40955e:	pop    rsi
  40955f:	pop    rbx
  409560:	ret    
  409561:	int3   
  409562:	int3   
  409563:	int3   
  409564:	rex.W push rbx
  409566:	push   rbp
  409567:	push   rsi
  409568:	push   rdi
  409569:	sub    rsp,0x28
  40956d:	cmp    r8,0x8
  409571:	mov    r9,r8
  409574:	mov    rbx,rdx
  409577:	mov    rdi,rcx
  40957a:	jb     0x40964e
  409580:	mov    r8d,DWORD PTR [rdx]
  409583:	mov    DWORD PTR [rcx],r8d
  409586:	movzx  edx,WORD PTR [rdx+0x4]
  40958a:	lea    eax,[rdx+0x8]
  40958d:	mov    ecx,eax
  40958f:	cmp    rcx,r9
  409592:	ja     0x40964e
  409598:	cmp    r8d,0xa0000003
  40959f:	mov    r10d,0xa000000c
  4095a5:	je     0x4095b0
  4095a7:	cmp    r8d,r10d
  4095aa:	jne    0x40964e
  4095b0:	cmp    WORD PTR [rbx+0x6],0x0
  4095b5:	jne    0x40964e
  4095bb:	lea    rcx,[r9-0x8]
  4095bf:	mov    rax,rdx
  4095c2:	cmp    rdx,rcx
  4095c5:	jne    0x40964e
  4095cb:	cmp    edx,0x8
  4095ce:	jb     0x40964e
  4095d0:	movzx  ecx,WORD PTR [rbx+0x8]
  4095d4:	movzx  r9d,WORD PTR [rbx+0xa]
  4095d9:	movzx  esi,WORD PTR [rbx+0xc]
  4095dd:	movzx  ebp,WORD PTR [rbx+0xe]
  4095e1:	add    rbx,0x10
  4095e5:	add    edx,0xfffffff8
  4095e8:	cmp    r8d,r10d
  4095eb:	mov    DWORD PTR [rdi+0x4],0x0
  4095f2:	jne    0x409605
  4095f4:	cmp    edx,0x4
  4095f7:	jb     0x40964e
  4095f9:	mov    eax,DWORD PTR [rbx]
  4095fb:	add    edx,0xfffffffc
  4095fe:	add    rbx,0x4
  409602:	mov    DWORD PTR [rdi+0x4],eax
  409605:	test   cl,0x1
  409608:	jne    0x40964e
  40960a:	cmp    ecx,edx
  40960c:	ja     0x40964e
  40960e:	mov    eax,edx
  409610:	sub    eax,ecx
  409612:	cmp    eax,r9d
  409615:	jb     0x40964e
  409617:	test   sil,0x1
  40961b:	jne    0x40964e
  40961d:	cmp    esi,edx
  40961f:	ja     0x40964e
  409621:	sub    edx,esi
  409623:	cmp    edx,ebp
  409625:	jb     0x40964e
  409627:	shr    r9d,1
  40962a:	lea    r8,[rdi+0x8]
  40962e:	add    rcx,rbx
  409631:	mov    edx,r9d
  409634:	call   0x409508
  409639:	shr    ebp,1
  40963b:	lea    r8,[rdi+0x18]
  40963f:	lea    rcx,[rbx+rsi*1]
  409643:	mov    edx,ebp
  409645:	call   0x409508
  40964a:	mov    al,0x1
  40964c:	jmp    0x409650
  40964e:	xor    al,al
  409650:	add    rsp,0x28
  409654:	pop    rdi
  409655:	pop    rsi
  409656:	pop    rbp
  409657:	pop    rbx
  409658:	ret    
  409659:	int3   
  40965a:	int3   
  40965b:	int3   
  40965c:	rex.W push rbx
  40965e:	push   rdi
  40965f:	sub    rsp,0x28
  409663:	mov    rdx,QWORD PTR [rip+0x5ea36]        # 0x4680a0
  40966a:	mov    rdi,rcx
  40966d:	mov    rcx,QWORD PTR [rcx+0x8]
  409671:	call   0x4028bc
  409676:	xor    ebx,ebx
  409678:	cmp    al,bl
  40967a:	je     0x4096ac
  40967c:	mov    rcx,QWORD PTR [rdi+0x8]
  409680:	add    rcx,0x8
  409684:	call   0x409dbc
  409689:	cmp    al,bl
  40968b:	jne    0x409692
  40968d:	cmp    DWORD PTR [rdi+0x20],ebx
  409690:	jmp    0x4096bc
  409692:	mov    rcx,QWORD PTR [rdi+0x8]
  409696:	mov    rdx,QWORD PTR [rdi+0x18]
  40969a:	add    rcx,0x8
  40969e:	call   QWORD PTR [rip+0x43ca4]        # 0x44d348
  4096a4:	cmp    eax,ebx
  4096a6:	jne    0x4096ac
  4096a8:	mov    al,0x1
  4096aa:	jmp    0x4096bf
  4096ac:	mov    rdx,QWORD PTR [rdi+0x18]
  4096b0:	mov    rcx,QWORD PTR [rdi+0x8]
  4096b4:	call   QWORD PTR [rip+0x43c8e]        # 0x44d348
  4096ba:	cmp    eax,ebx
  4096bc:	sete   al
  4096bf:	add    rsp,0x28
  4096c3:	pop    rdi
  4096c4:	pop    rbx
  4096c5:	ret    
  4096c6:	int3   
  4096c7:	int3   
  4096c8:	rex.W push rbx
  4096ca:	sub    rsp,0x20
  4096ce:	mov    rbx,rdx
  4096d1:	lea    rdx,[rcx+0x8]
  4096d5:	mov    DWORD PTR [rsp+0x30],0x0
  4096dd:	mov    rcx,rbx
  4096e0:	call   0x403208
  4096e5:	mov    rdx,QWORD PTR [rip+0x5e9b4]        # 0x4680a0
  4096ec:	mov    rcx,QWORD PTR [rbx]
  4096ef:	call   0x4028bc
  4096f4:	test   al,al
  4096f6:	je     0x40971e
  4096f8:	mov    rax,QWORD PTR [rbx]
  4096fb:	mov    WORD PTR [rax+0x2],0x5c
  409701:	mov    rcx,QWORD PTR [rbx]
  409704:	add    rcx,0x8
  409708:	call   0x409dbc
  40970d:	test   al,al
  40970f:	je     0x40971e
  409711:	mov    edx,0x4
  409716:	mov    rcx,rbx
  409719:	call   0x4037d8
  40971e:	mov    rax,rbx
  409721:	add    rsp,0x20
  409725:	pop    rbx
  409726:	ret    
  409727:	int3   
  409728:	jmp    0x408c80
  40972d:	int3   
  40972e:	int3   
  40972f:	int3   
  409730:	rex.W push rbx
  409732:	push   rbp
  409733:	push   rsi
  409734:	push   rdi
  409735:	push   r12
  409737:	push   r13
  409739:	push   r14
  40973b:	push   r15
  40973d:	sub    rsp,0x28
  409741:	mov    rdi,rcx
  409744:	mov    rcx,rdx
  409747:	mov    sil,r8b
  40974a:	mov    rbx,rdx
  40974d:	call   0x40a044
  409752:	test   al,al
  409754:	mov    r14b,al
  409757:	jne    0x409762
  409759:	test   sil,sil
  40975c:	je     0x409926
  409762:	mov    bpl,0x1
  409765:	mov    rcx,rbx
  409768:	mov    BYTE PTR [rsp+0x88],bpl
  409770:	call   0x409f9c
  409775:	test   al,al
  409777:	je     0x409796
  409779:	add    rbx,0x8
  40977d:	mov    rcx,rbx
  409780:	call   0x409dbc
  409785:	neg    al
  409787:	sbb    cl,cl
  409789:	and    cl,bpl
  40978c:	mov    bpl,cl
  40978f:	mov    BYTE PTR [rsp+0x88],cl
  409796:	mov    al,r14b
  409799:	neg    al
  40979b:	sbb    r12d,r12d
  40979e:	xor    ecx,ecx
  4097a0:	and    r12d,0x4
  4097a4:	cmp    WORD PTR [rbx],cx
  4097a7:	je     0x4097b8
  4097a9:	mov    rax,rbx
  4097ac:	add    rax,0x2
  4097b0:	inc    ecx
  4097b2:	cmp    WORD PTR [rax],0x0
  4097b6:	jne    0x4097ac
  4097b8:	add    ecx,ecx
  4097ba:	lea    r15d,[r12+r12*1]
  4097be:	mov    al,bpl
  4097c1:	add    r15d,ecx
  4097c4:	neg    al
  4097c6:	sbb    r13d,r13d
  4097c9:	and    r13d,ecx
  4097cc:	test   sil,sil
  4097cf:	lea    edx,[r15+r13*1]
  4097d3:	jne    0x4097d8
  4097d5:	add    edx,0x4
  4097d8:	mov    al,sil
  4097db:	neg    al
  4097dd:	sbb    ecx,ecx
  4097df:	and    ecx,0x4
  4097e2:	lea    ebp,[rcx+rdx*1+0x10]
  4097e6:	cmp    rbp,QWORD PTR [rdi+0x8]
  4097ea:	je     0x40981c
  4097ec:	mov    rcx,QWORD PTR [rdi]
  4097ef:	test   rcx,rcx
  4097f2:	je     0x409800
  4097f4:	call   0x40215c
  4097f9:	mov    QWORD PTR [rdi],0x0
  409800:	test   rbp,rbp
  409803:	mov    QWORD PTR [rdi+0x8],0x0
  40980b:	je     0x40981c
  40980d:	mov    rcx,rbp
  409810:	call   0x402130
  409815:	mov    QWORD PTR [rdi+0x8],rbp
  409819:	mov    QWORD PTR [rdi],rax
  40981c:	mov    rcx,QWORD PTR [rdi]
  40981f:	mov    r8,rbp
  409822:	xor    edx,edx
  409824:	call   0x44b780
  409829:	mov    r11,QWORD PTR [rdi]
  40982c:	mov    al,sil
  40982f:	neg    al
  409831:	mov    WORD PTR [r11+0x6],0x0
  409838:	sbb    ecx,ecx
  40983a:	sub    bp,0x8
  40983e:	xor    r8d,r8d
  409841:	and    ecx,0x9
  409844:	xor    r10d,r10d
  409847:	mov    WORD PTR [r11+0x4],bp
  40984c:	add    ecx,0xa0000003
  409852:	test   sil,sil
  409855:	mov    DWORD PTR [r11],ecx
  409858:	je     0x40985f
  40985a:	mov    r8d,r13d
  40985d:	jmp    0x409863
  40985f:	lea    r10d,[r15+0x2]
  409863:	mov    WORD PTR [r11+0x8],r8w
  409868:	mov    WORD PTR [r11+0xa],r15w
  40986d:	mov    WORD PTR [r11+0xc],r10w
  409872:	mov    WORD PTR [r11+0xe],r13w
  409877:	add    r11,0x10
  40987b:	test   sil,sil
  40987e:	je     0x40988f
  409880:	xor    eax,eax
  409882:	test   r14b,r14b
  409885:	sete   al
  409888:	mov    DWORD PTR [r11],eax
  40988b:	add    r11,0x4
  40988f:	test   r12d,r12d
  409892:	je     0x4098c2
  409894:	mov    rax,QWORD PTR [rip+0x5e805]        # 0x4680a0
  40989b:	mov    edx,r8d
  40989e:	movzx  ecx,WORD PTR [rax]
  4098a1:	add    rax,0x2
  4098a5:	test   cx,cx
  4098a8:	je     0x4098c2
  4098aa:	sub    rdx,rax
  4098ad:	lea    r9,[rdx+r11*1]
  4098b1:	mov    WORD PTR [r9+rax*1],cx
  4098b6:	mov    cx,WORD PTR [rax]
  4098b9:	add    rax,0x2
  4098bd:	test   cx,cx
  4098c0:	jne    0x4098b1
  4098c2:	mov    r9d,r8d
  4098c5:	movzx  r8d,WORD PTR [rbx]
  4098c9:	lea    rcx,[rbx+0x2]
  4098cd:	test   r8w,r8w
  4098d1:	lea    eax,[r12+r12*1]
  4098d5:	mov    rdx,rcx
  4098d8:	je     0x4098f7
  4098da:	sub    rax,rcx
  4098dd:	add    rax,r9
  4098e0:	lea    r9,[rax+r11*1]
  4098e4:	mov    WORD PTR [r9+rdx*1],r8w
  4098e9:	mov    r8w,WORD PTR [rdx]
  4098ed:	add    rdx,0x2
  4098f1:	test   r8w,r8w
  4098f5:	jne    0x4098e4
  4098f7:	cmp    BYTE PTR [rsp+0x88],0x0
  4098ff:	je     0x409924
  409901:	movzx  edx,WORD PTR [rbx]
  409904:	mov    r8d,r10d
  409907:	test   dx,dx
  40990a:	je     0x409924
  40990c:	sub    r8,rcx
  40990f:	lea    r9,[r8+r11*1]
  409913:	mov    WORD PTR [r9+rcx*1],dx
  409918:	mov    dx,WORD PTR [rcx]
  40991b:	add    rcx,0x2
  40991f:	test   dx,dx
  409922:	jne    0x409913
  409924:	mov    al,0x1
  409926:	add    rsp,0x28
  40992a:	pop    r15
  40992c:	pop    r14
  40992e:	pop    r13
  409930:	pop    r12
  409932:	pop    rdi
  409933:	pop    rsi
  409934:	pop    rbp
  409935:	pop    rbx
  409936:	ret    
  409937:	int3   
  409938:	rex.W push rbx
  40993a:	push   rbp
  40993b:	push   rsi
  40993c:	push   rdi
  40993d:	sub    rsp,0x68
  409941:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  40994a:	mov    rbx,r8
  40994d:	mov    rsi,rdx
  409950:	mov    rbp,rcx
  409953:	xor    edi,edi
  409955:	cmp    QWORD PTR [rdx],rdi
  409958:	je     0x409965
  40995a:	mov    rcx,QWORD PTR [rdx]
  40995d:	call   0x40215c
  409962:	mov    QWORD PTR [rsi],rdi
  409965:	mov    QWORD PTR [rsi+0x8],rdi
  409969:	mov    QWORD PTR [rsp+0x48],0xffffffffffffffff
  409972:	mov    DWORD PTR [rsp+0x20],0x2200000
  40997a:	mov    r9d,0x3
  409980:	lea    r8d,[r9-0x2]
  409984:	mov    rdx,rbp
  409987:	lea    rcx,[rsp+0x48]
  40998c:	call   0x4093f4
  409991:	cmp    al,dil
  409994:	jne    0x40999b
  409996:	jmp    0x409a5b
  40999b:	cmp    rbx,rdi
  40999e:	je     0x4099ae
  4099a0:	mov    rdx,rbx
  4099a3:	mov    rcx,QWORD PTR [rsp+0x48]
  4099a8:	call   QWORD PTR [rip+0x43792]        # 0x44d140
  4099ae:	mov    ebp,0x4000
  4099b3:	mov    rcx,rbp
  4099b6:	call   0x402130
  4099bb:	mov    rbx,rax
  4099be:	mov    QWORD PTR [rsp+0xa8],rax
  4099c6:	mov    QWORD PTR [rsp+0x38],rdi
  4099cb:	lea    rax,[rsp+0x98]
  4099d3:	mov    QWORD PTR [rsp+0x30],rax
  4099d8:	mov    DWORD PTR [rsp+0x28],ebp
  4099dc:	mov    QWORD PTR [rsp+0x20],rbx
  4099e1:	xor    r9d,r9d
  4099e4:	xor    r8d,r8d
  4099e7:	mov    edx,0x900a8
  4099ec:	mov    rcx,QWORD PTR [rsp+0x48]
  4099f1:	call   QWORD PTR [rip+0x43779]        # 0x44d170
  4099f7:	cmp    eax,edi
  4099f9:	jne    0x409a06
  4099fb:	mov    rcx,rbx
  4099fe:	call   0x40215c
  409a03:	nop
  409a04:	jmp    0x409a5b
  409a06:	mov    ebp,DWORD PTR [rsp+0x98]
  409a0d:	cmp    rbp,QWORD PTR [rsi+0x8]
  409a11:	je     0x409a3b
  409a13:	cmp    QWORD PTR [rsi],rdi
  409a16:	je     0x409a23
  409a18:	mov    rcx,QWORD PTR [rsi]
  409a1b:	call   0x40215c
  409a20:	mov    QWORD PTR [rsi],rdi
  409a23:	mov    QWORD PTR [rsi+0x8],rdi
  409a27:	cmp    rbp,rdi
  409a2a:	je     0x409a4f
  409a2c:	mov    rcx,rbp
  409a2f:	call   0x402130
  409a34:	mov    QWORD PTR [rsi],rax
  409a37:	mov    QWORD PTR [rsi+0x8],rbp
  409a3b:	cmp    rbp,rdi
  409a3e:	je     0x409a4f
  409a40:	mov    r8,rbp
  409a43:	mov    rdx,rbx
  409a46:	mov    rcx,QWORD PTR [rsi]
  409a49:	call   0x44b480
  409a4e:	nop
  409a4f:	mov    rcx,rbx
  409a52:	call   0x40215c
  409a57:	nop
  409a58:	mov    dil,0x1
  409a5b:	lea    rcx,[rsp+0x48]
  409a60:	call   0x408c80
  409a65:	mov    al,dil
  409a68:	add    rsp,0x68
  409a6c:	pop    rdi
  409a6d:	pop    rsi
  409a6e:	pop    rbp
  409a6f:	pop    rbx
  409a70:	ret    
  409a71:	int3   
  409a72:	int3   
  409a73:	int3   
  409a74:	int3   
  409a75:	int3   
  409a76:	int3   
  409a77:	int3   
  409a78:	rex.W push rbp
  409a7a:	sub    rsp,0x20
  409a7e:	mov    rbp,rdx
  409a81:	lea    rcx,[rbp+0x48]
  409a85:	call   0x409728
  409a8a:	add    rsp,0x20
  409a8e:	pop    rbp
  409a8f:	ret    
  409a90:	int3   
  409a91:	int3   
  409a92:	int3   
  409a93:	int3   
  409a94:	int3   
  409a95:	int3   
  409a96:	int3   
  409a97:	int3   
  409a98:	rex.W push rbp
  409a9a:	sub    rsp,0x20
  409a9e:	mov    rbp,rdx
  409aa1:	lea    rcx,[rbp+0xa8]
  409aa8:	call   0x401000
  409aad:	add    rsp,0x20
  409ab1:	pop    rbp
  409ab2:	ret    
  409ab3:	int3   
  409ab4:	rex.W push rbx
  409ab6:	push   rbp
  409ab7:	push   rsi
  409ab8:	push   rdi
  409ab9:	push   r12
  409abb:	mov    rax,rsp
  409abe:	sub    rsp,0xd0
  409ac5:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
  409ad1:	mov    ebp,r9d
  409ad4:	mov    r12,r8
  409ad7:	mov    dil,dl
  409ada:	mov    rsi,rcx
  409add:	lea    rcx,[rax-0x40]
  409ae1:	call   0x407fc0
  409ae6:	lea    rcx,[rsp+0xb8]
  409aee:	call   0x403150
  409af3:	nop
  409af4:	mov    rdx,rsi
  409af7:	lea    rcx,[rsp+0x90]
  409aff:	call   0x408134
  409b04:	xor    ebx,ebx
  409b06:	cmp    al,bl
  409b08:	je     0x409b30
  409b0a:	mov    eax,DWORD PTR [rsp+0xb0]
  409b11:	shr    eax,0x4
  409b14:	and    al,0x1
  409b16:	cmp    al,dil
  409b19:	je     0x409be6
  409b1f:	mov    ecx,0x10b
  409b24:	call   QWORD PTR [rip+0x4371e]        # 0x44d248
  409b2a:	nop
  409b2b:	jmp    0x409c6b
  409b30:	cmp    dil,bl
  409b33:	je     0x409b4a
  409b35:	mov    rcx,rsi
  409b38:	call   0x407360
  409b3d:	cmp    al,bl
  409b3f:	jne    0x409be6
  409b45:	jmp    0x409c6b
  409b4a:	mov    rdx,rsi
  409b4d:	lea    rcx,[rsp+0x40]
  409b52:	call   0x4031c0
  409b57:	nop
  409b58:	lea    rcx,[rsp+0x40]
  409b5d:	call   0x40362c
  409b62:	cmp    eax,ebx
  409b64:	jge    0x409b72
  409b66:	mov    rcx,QWORD PTR [rsp+0x40]
  409b6b:	call   0x40215c
  409b70:	jmp    0x409baf
  409b72:	mov    rcx,QWORD PTR [rsp+0x40]
  409b77:	cmp    eax,0x2
  409b7a:	jne    0x409b8a
  409b7c:	cmp    WORD PTR [rcx+0x2],0x3a
  409b81:	jne    0x409b8a
  409b83:	call   0x40215c
  409b88:	jmp    0x409baf
  409b8a:	cmp    eax,DWORD PTR [rsp+0x48]
  409b8e:	jae    0x409b9f
  409b90:	mov    DWORD PTR [rsp+0x48],eax
  409b94:	mov    eax,eax
  409b96:	mov    WORD PTR [rcx+rax*2],bx
  409b9a:	mov    rcx,QWORD PTR [rsp+0x40]
  409b9f:	call   0x407360
  409ba4:	nop
  409ba5:	mov    rcx,QWORD PTR [rsp+0x40]
  409baa:	call   0x40215c
  409baf:	mov    QWORD PTR [rsp+0x70],0xffffffffffffffff
  409bb8:	mov    r8b,0x1
  409bbb:	mov    rdx,rsi
  409bbe:	lea    rcx,[rsp+0x70]
  409bc3:	call   0x4094d8
  409bc8:	cmp    al,bl
  409bca:	jne    0x409bdc
  409bcc:	lea    rcx,[rsp+0x70]
  409bd1:	call   0x408c80
  409bd6:	nop
  409bd7:	jmp    0x409c6b
  409bdc:	lea    rcx,[rsp+0x70]
  409be1:	call   0x408c80
  409be6:	mov    QWORD PTR [rsp+0x50],0xffffffffffffffff
  409bef:	mov    DWORD PTR [rsp+0x20],0x2200000
  409bf7:	mov    r9d,0x3
  409bfd:	lea    r8d,[r9-0x1]
  409c01:	mov    rdx,rsi
  409c04:	lea    rcx,[rsp+0x50]
  409c09:	call   0x40948c
  409c0e:	cmp    al,bl
  409c10:	jne    0x409c1f
  409c12:	lea    rcx,[rsp+0x50]
  409c17:	call   0x408c80
  409c1c:	nop
  409c1d:	jmp    0x409c6b
  409c1f:	mov    QWORD PTR [rsp+0x38],rbx
  409c24:	lea    rax,[rsp+0x68]
  409c29:	mov    QWORD PTR [rsp+0x30],rax
  409c2e:	mov    DWORD PTR [rsp+0x28],ebx
  409c32:	mov    QWORD PTR [rsp+0x20],rbx
  409c37:	mov    r9d,ebp
  409c3a:	mov    r8,r12
  409c3d:	mov    edx,0x900a4
  409c42:	mov    rcx,QWORD PTR [rsp+0x50]
  409c47:	call   QWORD PTR [rip+0x43523]        # 0x44d170
  409c4d:	cmp    eax,ebx
  409c4f:	jne    0x409c5e
  409c51:	lea    rcx,[rsp+0x50]
  409c56:	call   0x408c80
  409c5b:	nop
  409c5c:	jmp    0x409c6b
  409c5e:	lea    rcx,[rsp+0x50]
  409c63:	call   0x408c80
  409c68:	nop
  409c69:	mov    bl,0x1
  409c6b:	mov    rcx,QWORD PTR [rsp+0xb8]
  409c73:	call   0x40215c
  409c78:	mov    al,bl
  409c7a:	add    rsp,0xd0
  409c81:	pop    r12
  409c83:	pop    rdi
  409c84:	pop    rsi
  409c85:	pop    rbp
  409c86:	pop    rbx
  409c87:	ret    
  409c88:	int3   
  409c89:	int3   
  409c8a:	int3   
  409c8b:	int3   
  409c8c:	int3   
  409c8d:	int3   
  409c8e:	int3   
  409c8f:	int3   
  409c90:	int3   
  409c91:	int3   
  409c92:	int3   
  409c93:	int3   
  409c94:	rex.W push rbp
  409c96:	sub    rsp,0x20
  409c9a:	mov    rbp,rdx
  409c9d:	lea    rcx,[rbp+0x90]
  409ca4:	call   0x406fe0
  409ca9:	add    rsp,0x20
  409cad:	pop    rbp
  409cae:	ret    
  409caf:	int3   
  409cb0:	int3   
  409cb1:	int3   
  409cb2:	int3   
  409cb3:	int3   
  409cb4:	rex.W push rbp
  409cb6:	sub    rsp,0x20
  409cba:	mov    rbp,rdx
  409cbd:	lea    rcx,[rbp+0x40]
  409cc1:	call   0x401000
  409cc6:	add    rsp,0x20
  409cca:	pop    rbp
  409ccb:	ret    
  409ccc:	int3   
  409ccd:	int3   
  409cce:	int3   
  409ccf:	int3   
  409cd0:	int3   
  409cd1:	int3   
  409cd2:	int3   
  409cd3:	int3   
  409cd4:	rex.W push rbp
  409cd6:	sub    rsp,0x20
  409cda:	mov    rbp,rdx
  409cdd:	lea    rcx,[rbp+0x70]
  409ce1:	call   0x409728
  409ce6:	add    rsp,0x20
  409cea:	pop    rbp
  409ceb:	ret    
  409cec:	int3   
  409ced:	int3   
  409cee:	int3   
  409cef:	int3   
  409cf0:	int3   
  409cf1:	int3   
  409cf2:	int3   
  409cf3:	int3   
  409cf4:	rex.W push rbp
  409cf6:	sub    rsp,0x20
  409cfa:	mov    rbp,rdx
  409cfd:	lea    rcx,[rbp+0x50]
  409d01:	call   0x409728
  409d06:	add    rsp,0x20
  409d0a:	pop    rbp
  409d0b:	ret    
  409d0c:	rex.W push rbx
  409d0e:	sub    rsp,0x20
  409d12:	mov    rax,QWORD PTR [rcx]
  409d15:	mov    rbx,rdx
  409d18:	mov    r8d,r8d
  409d1b:	lea    r8,[rax+r8*2]
  409d1f:	mov    edx,r9d
  409d22:	mov    rcx,rbx
  409d25:	mov    DWORD PTR [rsp+0x40],0x0
  409d2d:	call   0x402f70
  409d32:	mov    rax,rbx
  409d35:	add    rsp,0x20
  409d39:	pop    rbx
  409d3a:	ret    
  409d3b:	int3   
  409d3c:	movzx  edx,WORD PTR [rcx]
  409d3f:	mov    rax,rcx
  409d42:	jmp    0x409d57
  409d44:	cmp    dx,0x5c
  409d48:	je     0x409d62
  409d4a:	cmp    dx,0x2f
  409d4e:	je     0x409d62
  409d50:	add    rax,0x2
  409d54:	mov    dx,WORD PTR [rax]
  409d57:	test   dx,dx
  409d5a:	jne    0x409d44
  409d5c:	mov    eax,0xffffffff
  409d61:	ret    
  409d62:	sub    rax,rcx
  409d65:	sar    rax,1
  409d68:	ret    
  409d69:	int3   
  409d6a:	int3   
  409d6b:	int3   
  409d6c:	rex.W push rbx
  409d6e:	sub    rsp,0x20
  409d72:	mov    rbx,rcx
  409d75:	mov    ecx,DWORD PTR [rcx+0x8]
  409d78:	test   ecx,ecx
  409d7a:	je     0x409db4
  409d7c:	mov    rax,QWORD PTR [rbx]
  409d7f:	lea    edx,[rcx-0x1]
  409d82:	cmp    WORD PTR [rax+rdx*2],0x5c
  409d87:	je     0x409db4
  409d89:	cmp    WORD PTR [rax+rdx*2],0x2f
  409d8e:	je     0x409db4
  409d90:	cmp    DWORD PTR [rbx+0xc],ecx
  409d93:	jne    0x409d9d
  409d95:	mov    rcx,rbx
  409d98:	call   0x402f2c
  409d9d:	mov    edx,DWORD PTR [rbx+0x8]
  409da0:	mov    rcx,QWORD PTR [rbx]
  409da3:	mov    WORD PTR [rcx+rdx*2],0x5c
  409da9:	inc    edx
  409dab:	mov    WORD PTR [rcx+rdx*2],0x0
  409db1:	mov    DWORD PTR [rbx+0x8],edx
  409db4:	add    rsp,0x20
  409db8:	pop    rbx
  409db9:	ret    
  409dba:	int3   
  409dbb:	int3   
  409dbc:	cmp    WORD PTR [rcx],0x61
  409dc0:	jb     0x409dc8
  409dc2:	cmp    WORD PTR [rcx],0x7a
  409dc6:	jbe    0x409dd4
  409dc8:	cmp    WORD PTR [rcx],0x41
  409dcc:	jb     0x409def
  409dce:	cmp    WORD PTR [rcx],0x5a
  409dd2:	ja     0x409def
  409dd4:	cmp    WORD PTR [rcx+0x2],0x3a
  409dd9:	jne    0x409def
  409ddb:	cmp    WORD PTR [rcx+0x4],0x5c
  409de0:	je     0x409de9
  409de2:	cmp    WORD PTR [rcx+0x4],0x2f
  409de7:	jne    0x409def
  409de9:	mov    eax,0x1
  409dee:	ret    
  409def:	xor    eax,eax
  409df1:	ret    
  409df2:	int3   
  409df3:	int3   
  409df4:	rex.W push rbx
  409df6:	push   rdi
  409df7:	sub    rsp,0x28
  409dfb:	cmp    WORD PTR [rcx],0x5c
  409dff:	mov    rbx,rcx
  409e02:	je     0x409e0a
  409e04:	cmp    WORD PTR [rcx],0x2f
  409e08:	jne    0x409e4c
  409e0a:	cmp    WORD PTR [rcx+0x2],0x5c
  409e0f:	je     0x409e18
  409e11:	cmp    WORD PTR [rcx+0x2],0x2f
  409e16:	jne    0x409e4c
  409e18:	cmp    WORD PTR [rcx+0x4],0x2e
  409e1d:	jne    0x409e4c
  409e1f:	cmp    WORD PTR [rcx+0x6],0x5c
  409e24:	je     0x409e2d
  409e26:	cmp    WORD PTR [rcx+0x6],0x2f
  409e2b:	jne    0x409e4c
  409e2d:	xor    edi,edi
  409e2f:	cmp    WORD PTR [rcx],di
  409e32:	je     0x409e4c
  409e34:	add    rcx,0x2
  409e38:	inc    edi
  409e3a:	cmp    WORD PTR [rcx],0x0
  409e3e:	jne    0x409e34
  409e40:	cmp    edi,0x6
  409e43:	jne    0x409e55
  409e45:	cmp    WORD PTR [rbx+0xa],0x3a
  409e4a:	je     0x409e9c
  409e4c:	xor    al,al
  409e4e:	add    rsp,0x28
  409e52:	pop    rdi
  409e53:	pop    rbx
  409e54:	ret    
  409e55:	cmp    edi,0x12
  409e58:	jb     0x409e4c
  409e5a:	cmp    edi,0x16
  409e5d:	ja     0x409e4c
  409e5f:	lea    rcx,[rbx+0x8]
  409e63:	lea    rdx,[rip+0x43ece]        # 0x44dd38
  409e6a:	mov    r8d,0x1a
  409e70:	call   0x44b786
  409e75:	test   eax,eax
  409e77:	jne    0x409e4c
  409e79:	mov    eax,0x11
  409e7e:	cmp    edi,eax
  409e80:	jbe    0x409e9c
  409e82:	add    rbx,0x22
  409e86:	cmp    WORD PTR [rbx],0x30
  409e8a:	jb     0x409e4c
  409e8c:	cmp    WORD PTR [rbx],0x39
  409e90:	ja     0x409e4c
  409e92:	inc    eax
  409e94:	add    rbx,0x2
  409e98:	cmp    eax,edi
  409e9a:	jb     0x409e86
  409e9c:	mov    al,0x1
  409e9e:	jmp    0x409e4e
  409ea0:	mov    dx,0x5c
  409ea4:	mov    ax,0x2f
  409ea8:	cmp    WORD PTR [rcx],dx
  409eab:	je     0x409eb2
  409ead:	cmp    WORD PTR [rcx],ax
  409eb0:	jne    0x409f0d
  409eb2:	cmp    WORD PTR [rcx+0x2],dx
  409eb6:	je     0x409ebe
  409eb8:	cmp    WORD PTR [rcx+0x2],ax
  409ebc:	jne    0x409f0d
  409ebe:	cmp    WORD PTR [rcx+0x4],0x3f
  409ec3:	jne    0x409f0d
  409ec5:	cmp    WORD PTR [rcx+0x6],dx
  409ec9:	je     0x409ed1
  409ecb:	cmp    WORD PTR [rcx+0x6],ax
  409ecf:	jne    0x409f0d
  409ed1:	cmp    WORD PTR [rcx+0x8],0x55
  409ed6:	je     0x409edf
  409ed8:	cmp    WORD PTR [rcx+0x8],0x75
  409edd:	jne    0x409f0d
  409edf:	cmp    WORD PTR [rcx+0xa],0x4e
  409ee4:	je     0x409eed
  409ee6:	cmp    WORD PTR [rcx+0xa],0x6e
  409eeb:	jne    0x409f0d
  409eed:	cmp    WORD PTR [rcx+0xc],0x43
  409ef2:	je     0x409efb
  409ef4:	cmp    WORD PTR [rcx+0xc],0x63
  409ef9:	jne    0x409f0d
  409efb:	cmp    WORD PTR [rcx+0xe],dx
  409eff:	je     0x409f07
  409f01:	cmp    WORD PTR [rcx+0xe],ax
  409f05:	jne    0x409f0d
  409f07:	mov    eax,0x1
  409f0c:	ret    
  409f0d:	xor    eax,eax
  409f0f:	ret    
  409f10:	sub    rsp,0x28
  409f14:	cmp    WORD PTR [rcx],0x5c
  409f18:	je     0x409f20
  409f1a:	cmp    WORD PTR [rcx],0x2f
  409f1e:	jne    0x409f6a
  409f20:	cmp    WORD PTR [rcx+0x2],0x5c
  409f25:	je     0x409f2e
  409f27:	cmp    WORD PTR [rcx+0x2],0x2f
  409f2c:	jne    0x409f6a
  409f2e:	mov    r8d,0x2
  409f34:	call   0x409ea0
  409f39:	test   al,al
  409f3b:	je     0x409f45
  409f3d:	mov    r8d,0x8
  409f43:	jmp    0x409f53
  409f45:	cmp    WORD PTR [rcx+0x4],0x2e
  409f4a:	je     0x409f6a
  409f4c:	cmp    WORD PTR [rcx+0x4],0x3f
  409f51:	je     0x409f6a
  409f53:	mov    eax,r8d
  409f56:	lea    rcx,[rcx+rax*2]
  409f5a:	call   0x409d3c
  409f5f:	test   eax,eax
  409f61:	js     0x409f6a
  409f63:	lea    eax,[rax+r8*1+0x1]
  409f68:	jmp    0x409f6c
  409f6a:	xor    eax,eax
  409f6c:	add    rsp,0x28
  409f70:	ret    
  409f71:	int3   
  409f72:	int3   
  409f73:	int3   
  409f74:	cmp    WORD PTR [rcx],0x61
  409f78:	jb     0x409f80
  409f7a:	cmp    WORD PTR [rcx],0x7a
  409f7e:	jbe    0x409f8c
  409f80:	cmp    WORD PTR [rcx],0x41
  409f84:	jb     0x409f99
  409f86:	cmp    WORD PTR [rcx],0x5a
  409f8a:	ja     0x409f99
  409f8c:	cmp    WORD PTR [rcx+0x2],0x3a
  409f91:	jne    0x409f99
  409f93:	mov    eax,0x1
  409f98:	ret    
  409f99:	xor    eax,eax
  409f9b:	ret    
  409f9c:	cmp    WORD PTR [rcx],0x5c
  409fa0:	je     0x409fa8
  409fa2:	cmp    WORD PTR [rcx],0x2f
  409fa6:	jne    0x409fd1
  409fa8:	cmp    WORD PTR [rcx+0x2],0x5c
  409fad:	je     0x409fb6
  409faf:	cmp    WORD PTR [rcx+0x2],0x2f
  409fb4:	jne    0x409fd1
  409fb6:	cmp    WORD PTR [rcx+0x4],0x3f
  409fbb:	jne    0x409fd1
  409fbd:	cmp    WORD PTR [rcx+0x6],0x5c
  409fc2:	je     0x409fcb
  409fc4:	cmp    WORD PTR [rcx+0x6],0x2f
  409fc9:	jne    0x409fd1
  409fcb:	mov    eax,0x1
  409fd0:	ret    
  409fd1:	xor    eax,eax
  409fd3:	ret    
  409fd4:	cmp    WORD PTR [rcx],0x5c
  409fd8:	je     0x409fe0
  409fda:	cmp    WORD PTR [rcx],0x2f
  409fde:	jne    0x40a00a
  409fe0:	cmp    WORD PTR [rcx+0x2],0x5c
  409fe5:	je     0x409fee
  409fe7:	cmp    WORD PTR [rcx+0x2],0x2f
  409fec:	jne    0x40a00a
  409fee:	cmp    WORD PTR [rcx+0x4],0x3f
  409ff3:	je     0x409ffc
  409ff5:	cmp    WORD PTR [rcx+0x4],0x2e
  409ffa:	jne    0x40a00a
  409ffc:	cmp    WORD PTR [rcx+0x6],0x5c
  40a001:	je     0x40a00d
  40a003:	cmp    WORD PTR [rcx+0x6],0x2f
  40a008:	je     0x40a00d
  40a00a:	xor    eax,eax
  40a00c:	ret    
  40a00d:	mov    eax,0x1
  40a012:	ret    
  40a013:	int3   
  40a014:	sub    rsp,0x28
  40a018:	call   0x409f9c
  40a01d:	xor    edx,edx
  40a01f:	cmp    al,dl
  40a021:	je     0x40a027
  40a023:	add    rcx,0x8
  40a027:	call   0x409dbc
  40a02c:	cmp    al,dl
  40a02e:	je     0x40a03b
  40a030:	cmp    WORD PTR [rcx+0x6],dx
  40a034:	jne    0x40a03b
  40a036:	mov    edx,0x1
  40a03b:	mov    al,dl
  40a03d:	add    rsp,0x28
  40a041:	ret    
  40a042:	int3   
  40a043:	int3   
  40a044:	sub    rsp,0x28
  40a048:	cmp    WORD PTR [rcx],0x5c
  40a04c:	je     0x40a05f
  40a04e:	cmp    WORD PTR [rcx],0x2f
  40a052:	je     0x40a05f
  40a054:	call   0x409f74
  40a059:	xor    ecx,ecx
  40a05b:	cmp    al,cl
  40a05d:	je     0x40a064
  40a05f:	mov    ecx,0x1
  40a064:	mov    al,cl
  40a066:	add    rsp,0x28
  40a06a:	ret    
  40a06b:	int3   
  40a06c:	sub    rsp,0x28
  40a070:	mov    r9,rcx
  40a073:	call   0x409f74
  40a078:	xor    r8d,r8d
  40a07b:	test   al,al
  40a07d:	lea    r11d,[r8+0x2]
  40a081:	cmovne r8d,r11d
  40a085:	lea    r10d,[r11-0x3]
  40a089:	movzx  ecx,WORD PTR [rcx+r8*2]
  40a08e:	mov    edx,r10d
  40a091:	movsxd rax,r8d
  40a094:	test   cx,cx
  40a097:	je     0x40a0c9
  40a099:	lea    rax,[r9+rax*2]
  40a09d:	cmp    cx,0x3a
  40a0a1:	jne    0x40a0ac
  40a0a3:	test   edx,edx
  40a0a5:	jns    0x40a0bb
  40a0a7:	mov    edx,r8d
  40a0aa:	jmp    0x40a0bb
  40a0ac:	cmp    cx,0x5c
  40a0b0:	je     0x40a0b8
  40a0b2:	cmp    cx,0x2f
  40a0b6:	jne    0x40a0bb
  40a0b8:	mov    edx,r10d
  40a0bb:	add    rax,r11
  40a0be:	inc    r8d
  40a0c1:	mov    cx,WORD PTR [rax]
  40a0c4:	test   cx,cx
  40a0c7:	jne    0x40a09d
  40a0c9:	mov    eax,edx
  40a0cb:	add    rsp,0x28
  40a0cf:	ret    
  40a0d0:	sub    rsp,0x28
  40a0d4:	call   0x409d3c
  40a0d9:	test   eax,eax
  40a0db:	mov    r8d,eax
  40a0de:	js     0x40a0ee
  40a0e0:	lea    rcx,[rcx+r8*2+0x2]
  40a0e5:	call   0x409d3c
  40a0ea:	test   eax,eax
  40a0ec:	jns    0x40a0f2
  40a0ee:	xor    eax,eax
  40a0f0:	jmp    0x40a0f7
  40a0f2:	lea    eax,[rax+r8*1+0x2]
  40a0f7:	add    rsp,0x28
  40a0fb:	ret    
  40a0fc:	sub    rsp,0x28
  40a100:	cmp    WORD PTR [rcx+0x8],0x55
  40a105:	je     0x40a10e
  40a107:	cmp    WORD PTR [rcx+0x8],0x75
  40a10c:	jne    0x40a138
  40a10e:	cmp    WORD PTR [rcx+0xa],0x4e
  40a113:	je     0x40a11c
  40a115:	cmp    WORD PTR [rcx+0xa],0x6e
  40a11a:	jne    0x40a138
  40a11c:	cmp    WORD PTR [rcx+0xc],0x43
  40a121:	je     0x40a12a
  40a123:	cmp    WORD PTR [rcx+0xc],0x63
  40a128:	jne    0x40a138
  40a12a:	cmp    WORD PTR [rcx+0xe],0x5c
  40a12f:	je     0x40a14e
  40a131:	cmp    WORD PTR [rcx+0xe],0x2f
  40a136:	je     0x40a14e
  40a138:	add    rcx,0x8
  40a13c:	call   0x409d3c
  40a141:	test   eax,eax
  40a143:	jns    0x40a149
  40a145:	xor    eax,eax
  40a147:	jmp    0x40a160
  40a149:	add    eax,0x5
  40a14c:	jmp    0x40a160
  40a14e:	add    rcx,0x10
  40a152:	call   0x40a0d0
  40a157:	lea    ecx,[rax+0x8]
  40a15a:	neg    eax
  40a15c:	sbb    eax,eax
  40a15e:	and    eax,ecx
  40a160:	add    rsp,0x28
  40a164:	ret    
  40a165:	int3   
  40a166:	int3   
  40a167:	int3   
  40a168:	sub    rsp,0x28
  40a16c:	mov    r9w,0x5c
  40a171:	mov    r8w,0x2f
  40a176:	cmp    WORD PTR [rcx],r9w
  40a17a:	je     0x40a182
  40a17c:	cmp    WORD PTR [rcx],r8w
  40a180:	jne    0x40a1ac
  40a182:	cmp    WORD PTR [rcx+0x2],r9w
  40a187:	je     0x40a190
  40a189:	cmp    WORD PTR [rcx+0x2],r8w
  40a18e:	jne    0x40a1ac
  40a190:	cmp    WORD PTR [rcx+0x4],0x2e
  40a195:	jne    0x40a1ac
  40a197:	cmp    WORD PTR [rcx+0x6],r9w
  40a19c:	je     0x40a1a5
  40a19e:	cmp    WORD PTR [rcx+0x6],r8w
  40a1a3:	jne    0x40a1ac
  40a1a5:	mov    eax,0x4
  40a1aa:	jmp    0x40a209
  40a1ac:	call   0x409f9c
  40a1b1:	xor    edx,edx
  40a1b3:	cmp    al,dl
  40a1b5:	je     0x40a1be
  40a1b7:	call   0x40a0fc
  40a1bc:	jmp    0x40a209
  40a1be:	call   0x409dbc
  40a1c3:	cmp    al,dl
  40a1c5:	je     0x40a1ce
  40a1c7:	mov    edx,0x3
  40a1cc:	jmp    0x40a207
  40a1ce:	cmp    WORD PTR [rcx],r9w
  40a1d2:	je     0x40a1da
  40a1d4:	cmp    WORD PTR [rcx],r8w
  40a1d8:	jne    0x40a207
  40a1da:	cmp    WORD PTR [rcx+0x2],dx
  40a1de:	je     0x40a202
  40a1e0:	cmp    WORD PTR [rcx+0x2],r9w
  40a1e5:	je     0x40a1ee
  40a1e7:	cmp    WORD PTR [rcx+0x2],r8w
  40a1ec:	jne    0x40a202
  40a1ee:	add    rcx,0x4
  40a1f2:	call   0x40a0d0
  40a1f7:	lea    ecx,[rax+0x2]
  40a1fa:	neg    eax
  40a1fc:	sbb    edx,edx
  40a1fe:	and    edx,ecx
  40a200:	jmp    0x40a207
  40a202:	mov    edx,0x1
  40a207:	mov    eax,edx
  40a209:	add    rsp,0x28
  40a20d:	ret    
  40a20e:	int3   
  40a20f:	int3   
  40a210:	rex.W push rbx
  40a212:	push   rsi
  40a213:	push   rdi
  40a214:	sub    rsp,0x230
  40a21b:	mov    rax,QWORD PTR [rcx]
  40a21e:	xor    esi,esi
  40a220:	mov    rdi,rcx
  40a223:	mov    DWORD PTR [rcx+0x8],esi
  40a226:	lea    rdx,[rsp+0x20]
  40a22b:	mov    ecx,0x105
  40a230:	mov    WORD PTR [rax],si
  40a233:	mov    WORD PTR [rsp+0x20],si
  40a238:	call   QWORD PTR [rip+0x42ffa]        # 0x44d238
  40a23e:	lea    rdx,[rsp+0x20]
  40a243:	mov    rcx,rdi
  40a246:	mov    ebx,eax
  40a248:	call   0x403290
  40a24d:	lea    r11d,[rbx-0x1]
  40a251:	cmp    r11d,0x103
  40a258:	setbe  al
  40a25b:	add    rsp,0x230
  40a262:	pop    rdi
  40a263:	pop    rsi
  40a264:	pop    rbx
  40a265:	ret    
  40a266:	int3   
  40a267:	int3   
  40a268:	rex.W push rbx
  40a26a:	push   rsi
  40a26b:	push   rdi
  40a26c:	sub    rsp,0x20
  40a270:	mov    rdx,QWORD PTR [rcx]
  40a273:	xor    ebx,ebx
  40a275:	mov    rdi,rcx
  40a278:	movzx  eax,WORD PTR [rdx]
  40a27b:	lea    esi,[rbx+0x1]
  40a27e:	jmp    0x40a362
  40a283:	cmp    ax,0x2e
  40a287:	jne    0x40a357
  40a28d:	test   ebx,ebx
  40a28f:	je     0x40a2a6
  40a291:	lea    eax,[rbx-0x1]
  40a294:	cmp    WORD PTR [rdx+rax*2],0x5c
  40a299:	je     0x40a2a6
  40a29b:	cmp    WORD PTR [rdx+rax*2],0x2f
  40a2a0:	jne    0x40a357
  40a2a6:	lea    eax,[rbx+0x1]
  40a2a9:	movzx  eax,WORD PTR [rdx+rax*2]
  40a2ad:	cmp    ax,0x2e
  40a2b1:	jne    0x40a324
  40a2b3:	lea    r10d,[rbx+0x2]
  40a2b7:	mov    eax,r10d
  40a2ba:	movzx  r9d,WORD PTR [rdx+r10*2]
  40a2bf:	cmp    r9w,0x5c
  40a2c4:	je     0x40a2d7
  40a2c6:	cmp    r9w,0x2f
  40a2cb:	je     0x40a2d7
  40a2cd:	test   r9w,r9w
  40a2d1:	jne    0x40a357
  40a2d7:	test   ebx,ebx
  40a2d9:	je     0x40a370
  40a2df:	lea    eax,[rbx-0x2]
  40a2e2:	test   eax,eax
  40a2e4:	movsxd rcx,eax
  40a2e7:	js     0x40a314
  40a2e9:	lea    r8,[rdx+rcx*2]
  40a2ed:	cmp    WORD PTR [r8],0x5c
  40a2f2:	je     0x40a306
  40a2f4:	cmp    WORD PTR [r8],0x2f
  40a2f9:	je     0x40a306
  40a2fb:	sub    eax,esi
  40a2fd:	sub    r8,0x2
  40a301:	sub    rcx,rsi
  40a304:	jns    0x40a2ed
  40a306:	test   eax,eax
  40a308:	js     0x40a314
  40a30a:	sub    ebx,eax
  40a30c:	lea    r8d,[rbx+0x2]
  40a310:	mov    ebx,eax
  40a312:	jmp    0x40a34b
  40a314:	lea    r8d,[rbx+0x3]
  40a318:	test   r9w,r9w
  40a31c:	cmove  r8d,r10d
  40a320:	xor    ebx,ebx
  40a322:	jmp    0x40a34b
  40a324:	cmp    ax,0x5c
  40a328:	je     0x40a335
  40a32a:	cmp    ax,0x2f
  40a32e:	je     0x40a335
  40a330:	test   ax,ax
  40a333:	jne    0x40a357
  40a335:	test   ebx,ebx
  40a337:	mov    r8d,0x2
  40a33d:	je     0x40a344
  40a33f:	add    ebx,0xffffffff
  40a342:	jmp    0x40a34b
  40a344:	test   ax,ax
  40a347:	cmove  r8d,esi
  40a34b:	mov    edx,ebx
  40a34d:	mov    rcx,rdi
  40a350:	call   0x403788
  40a355:	jmp    0x40a359
  40a357:	add    ebx,esi
  40a359:	mov    rdx,QWORD PTR [rdi]
  40a35c:	mov    ecx,ebx
  40a35e:	mov    ax,WORD PTR [rdx+rcx*2]
  40a362:	test   ax,ax
  40a365:	jne    0x40a283
  40a36b:	mov    al,sil
  40a36e:	jmp    0x40a372
  40a370:	xor    al,al
  40a372:	add    rsp,0x20
  40a376:	pop    rdi
  40a377:	pop    rsi
  40a378:	pop    rbx
  40a379:	ret    
  40a37a:	int3   
  40a37b:	int3   
  40a37c:	movzx  eax,WORD PTR [rcx]
  40a37f:	xor    edx,edx
  40a381:	test   ax,ax
  40a384:	je     0x40a3de
  40a386:	add    rcx,0x4
  40a38a:	cmp    ax,0x2e
  40a38e:	jne    0x40a3cf
  40a390:	test   edx,edx
  40a392:	je     0x40a3a2
  40a394:	cmp    WORD PTR [rcx-0x6],0x5c
  40a399:	je     0x40a3a2
  40a39b:	cmp    WORD PTR [rcx-0x6],0x2f
  40a3a0:	jne    0x40a3cf
  40a3a2:	movzx  eax,WORD PTR [rcx-0x2]
  40a3a6:	test   ax,ax
  40a3a9:	je     0x40a3e1
  40a3ab:	cmp    ax,0x5c
  40a3af:	je     0x40a3e1
  40a3b1:	cmp    ax,0x2f
  40a3b5:	je     0x40a3e1
  40a3b7:	cmp    ax,0x2e
  40a3bb:	jne    0x40a3cf
  40a3bd:	cmp    WORD PTR [rcx],0x0
  40a3c1:	je     0x40a3e1
  40a3c3:	cmp    WORD PTR [rcx],0x5c
  40a3c7:	je     0x40a3e1
  40a3c9:	cmp    WORD PTR [rcx],0x2f
  40a3cd:	je     0x40a3e1
  40a3cf:	mov    ax,WORD PTR [rcx-0x2]
  40a3d3:	add    rcx,0x2
  40a3d7:	inc    edx
  40a3d9:	test   ax,ax
  40a3dc:	jne    0x40a38a
  40a3de:	xor    al,al
  40a3e0:	ret    
  40a3e1:	mov    al,0x1
  40a3e3:	ret    
  40a3e4:	sub    rsp,0x28
  40a3e8:	call   0x409fd4
  40a3ed:	test   al,al
  40a3ef:	je     0x40a410
  40a3f1:	cmp    WORD PTR [rcx+0x4],0x2e
  40a3f6:	je     0x40a409
  40a3f8:	add    rcx,0x8
  40a3fc:	call   0x40a37c
  40a401:	test   al,al
  40a403:	jne    0x40a48c
  40a409:	xor    eax,eax
  40a40b:	jmp    0x40a491
  40a410:	movzx  eax,WORD PTR [rcx]
  40a413:	xor    edx,edx
  40a415:	test   ax,ax
  40a418:	je     0x40a485
  40a41a:	lea    r8,[rcx-0x2]
  40a41e:	cmp    ax,0x2e
  40a422:	je     0x40a42a
  40a424:	cmp    ax,0x20
  40a428:	jne    0x40a475
  40a42a:	movzx  ecx,WORD PTR [r8+0x4]
  40a42f:	test   cx,cx
  40a432:	je     0x40a440
  40a434:	cmp    cx,0x5c
  40a438:	je     0x40a440
  40a43a:	cmp    cx,0x2f
  40a43e:	jne    0x40a475
  40a440:	cmp    ax,0x2e
  40a444:	jne    0x40a48c
  40a446:	test   edx,edx
  40a448:	je     0x40a475
  40a44a:	cmp    WORD PTR [r8],0x5c
  40a44f:	je     0x40a475
  40a451:	cmp    WORD PTR [r8],0x2f
  40a456:	je     0x40a475
  40a458:	cmp    WORD PTR [r8],ax
  40a45c:	jne    0x40a48c
  40a45e:	lea    eax,[rdx-0x1]
  40a461:	test   eax,eax
  40a463:	je     0x40a475
  40a465:	cmp    WORD PTR [r8-0x2],0x5c
  40a46b:	je     0x40a475
  40a46d:	cmp    WORD PTR [r8-0x2],0x2f
  40a473:	jne    0x40a48c
  40a475:	mov    ax,WORD PTR [r8+0x4]
  40a47a:	add    r8,0x2
  40a47e:	inc    edx
  40a480:	test   ax,ax
  40a483:	jne    0x40a41e
  40a485:	mov    eax,0x2
  40a48a:	jmp    0x40a491
  40a48c:	mov    eax,0x1
  40a491:	add    rsp,0x28
  40a495:	ret    
  40a496:	int3   
  40a497:	int3   
  40a498:	rex.W push rbx
  40a49a:	push   rbp
  40a49b:	push   rsi
  40a49c:	push   rdi
  40a49d:	push   r12
  40a49f:	push   r13
  40a4a1:	sub    rsp,0x78
  40a4a5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40a4ae:	mov    rdi,rdx
  40a4b1:	mov    rbx,rcx
  40a4b4:	mov    DWORD PTR [rdx+0x8],0x0
  40a4bb:	mov    rax,QWORD PTR [rdx]
  40a4be:	mov    WORD PTR [rax],0x0
  40a4c3:	movzx  esi,WORD PTR [rcx]
  40a4c6:	test   si,si
  40a4c9:	jne    0x40a4d2
  40a4cb:	mov    al,0x1
  40a4cd:	jmp    0x40a933
  40a4d2:	cmp    si,0x2e
  40a4d6:	jne    0x40a4f3
  40a4d8:	cmp    WORD PTR [rcx+0x2],0x0
  40a4dd:	je     0x40a4ec
  40a4df:	cmp    WORD PTR [rcx+0x2],si
  40a4e3:	jne    0x40a4f3
  40a4e5:	cmp    WORD PTR [rcx+0x4],0x0
  40a4ea:	jne    0x40a4f3
  40a4ec:	mov    al,0x1
  40a4ee:	jmp    0x40a933
  40a4f3:	call   0x409fd4
  40a4f8:	test   al,al
  40a4fa:	je     0x40a5d7
  40a500:	cmp    WORD PTR [rbx+0x4],0x2e
  40a505:	jne    0x40a50e
  40a507:	mov    al,0x1
  40a509:	jmp    0x40a933
  40a50e:	lea    rcx,[rbx+0x8]
  40a512:	call   0x40a37c
  40a517:	test   al,al
  40a519:	jne    0x40a522
  40a51b:	mov    al,0x1
  40a51d:	jmp    0x40a933
  40a522:	mov    rdx,rbx
  40a525:	lea    rcx,[rsp+0x38]
  40a52a:	call   0x4031c0
  40a52f:	nop
  40a530:	mov    r9,QWORD PTR [rsp+0x38]
  40a535:	mov    rcx,r9
  40a538:	call   0x40a0fc
  40a53d:	mov    ebx,eax
  40a53f:	test   eax,eax
  40a541:	jne    0x40a552
  40a543:	mov    rcx,r9
  40a546:	call   0x40215c
  40a54b:	mov    al,0x1
  40a54d:	jmp    0x40a933
  40a552:	lea    rdx,[r9+rbx*2]
  40a556:	lea    rcx,[rsp+0x58]
  40a55b:	call   0x4031c0
  40a560:	nop
  40a561:	lea    rcx,[rsp+0x58]
  40a566:	call   0x40a268
  40a56b:	test   al,al
  40a56d:	jne    0x40a58b
  40a56f:	mov    rcx,QWORD PTR [rsp+0x58]
  40a574:	call   0x40215c
  40a579:	nop
  40a57a:	mov    rcx,QWORD PTR [rsp+0x38]
  40a57f:	call   0x40215c
  40a584:	mov    al,0x1
  40a586:	jmp    0x40a933
  40a58b:	cmp    ebx,DWORD PTR [rsp+0x40]
  40a58f:	jae    0x40a5a0
  40a591:	mov    DWORD PTR [rsp+0x40],ebx
  40a595:	mov    rax,QWORD PTR [rsp+0x38]
  40a59a:	mov    WORD PTR [rax+rbx*2],0x0
  40a5a0:	lea    rdx,[rsp+0x38]
  40a5a5:	mov    rcx,rdi
  40a5a8:	call   0x403444
  40a5ad:	lea    rdx,[rsp+0x58]
  40a5b2:	mov    rcx,rdi
  40a5b5:	call   0x403444
  40a5ba:	nop
  40a5bb:	mov    rcx,QWORD PTR [rsp+0x58]
  40a5c0:	call   0x40215c
  40a5c5:	nop
  40a5c6:	mov    rcx,QWORD PTR [rsp+0x38]
  40a5cb:	call   0x40215c
  40a5d0:	mov    al,0x1
  40a5d2:	jmp    0x40a933
  40a5d7:	mov    bp,0x5c
  40a5db:	cmp    si,bp
  40a5de:	je     0x40a6be
  40a5e4:	cmp    si,0x2f
  40a5e8:	je     0x40a6be
  40a5ee:	call   0x409f74
  40a5f3:	test   al,al
  40a5f5:	je     0x40a6d3
  40a5fb:	mov    rdx,rbx
  40a5fe:	lea    rcx,[rsp+0x38]
  40a603:	call   0x4031c0
  40a608:	nop
  40a609:	mov    r12d,0x2
  40a60f:	mov    rcx,rbx
  40a612:	call   0x409dbc
  40a617:	lea    ebp,[r12+0x1]
  40a61c:	test   al,al
  40a61e:	cmovne r12d,ebp
  40a622:	mov    rax,QWORD PTR [rsp+0x38]
  40a627:	lea    rdx,[rax+r12*2]
  40a62b:	lea    rcx,[rsp+0x58]
  40a630:	call   0x4031c0
  40a635:	nop
  40a636:	lea    rcx,[rsp+0x58]
  40a63b:	call   0x40a268
  40a640:	test   al,al
  40a642:	jne    0x40a660
  40a644:	mov    rcx,QWORD PTR [rsp+0x58]
  40a649:	call   0x40215c
  40a64e:	nop
  40a64f:	mov    rcx,QWORD PTR [rsp+0x38]
  40a654:	call   0x40215c
  40a659:	mov    al,0x1
  40a65b:	jmp    0x40a933
  40a660:	mov    rdx,QWORD PTR [rip+0x5da41]        # 0x4680a8
  40a667:	mov    rcx,rdi
  40a66a:	call   0x4033f0
  40a66f:	cmp    r12d,DWORD PTR [rsp+0x40]
  40a674:	jae    0x40a687
  40a676:	mov    DWORD PTR [rsp+0x40],r12d
  40a67b:	mov    rax,QWORD PTR [rsp+0x38]
  40a680:	mov    WORD PTR [rax+r12*2],0x0
  40a687:	lea    rdx,[rsp+0x38]
  40a68c:	mov    rcx,rdi
  40a68f:	call   0x403444
  40a694:	lea    rdx,[rsp+0x58]
  40a699:	mov    rcx,rdi
  40a69c:	call   0x403444
  40a6a1:	nop
  40a6a2:	mov    rcx,QWORD PTR [rsp+0x58]
  40a6a7:	call   0x40215c
  40a6ac:	nop
  40a6ad:	mov    rcx,QWORD PTR [rsp+0x38]
  40a6b2:	call   0x40215c
  40a6b7:	mov    al,0x1
  40a6b9:	jmp    0x40a933
  40a6be:	cmp    WORD PTR [rbx+0x2],bp
  40a6c2:	je     0x40a889
  40a6c8:	cmp    WORD PTR [rbx+0x2],0x2f
  40a6cd:	je     0x40a889
  40a6d3:	lea    rcx,[rsp+0x28]
  40a6d8:	call   0x403150
  40a6dd:	nop
  40a6de:	lea    rcx,[rsp+0x28]
  40a6e3:	call   0x40a210
  40a6e8:	test   al,al
  40a6ea:	jne    0x40a6fd
  40a6ec:	mov    rcx,QWORD PTR [rsp+0x28]
  40a6f1:	call   0x40215c
  40a6f6:	xor    al,al
  40a6f8:	jmp    0x40a933
  40a6fd:	lea    rcx,[rsp+0x28]
  40a702:	call   0x409d6c
  40a707:	xor    r12d,r12d
  40a70a:	xor    r13d,r13d
  40a70d:	mov    r9,QWORD PTR [rsp+0x28]
  40a712:	mov    rcx,r9
  40a715:	call   0x409f9c
  40a71a:	test   al,al
  40a71c:	je     0x40a738
  40a71e:	call   0x40a0fc
  40a723:	mov    ebp,eax
  40a725:	test   eax,eax
  40a727:	jne    0x40a79e
  40a729:	mov    rcx,r9
  40a72c:	call   0x40215c
  40a731:	xor    al,al
  40a733:	jmp    0x40a933
  40a738:	call   0x409dbc
  40a73d:	test   al,al
  40a73f:	je     0x40a74f
  40a741:	mov    r13,QWORD PTR [rip+0x5d960]        # 0x4680a8
  40a748:	mov    ebp,0x3
  40a74d:	jmp    0x40a79e
  40a74f:	cmp    WORD PTR [r9],bp
  40a753:	je     0x40a760
  40a755:	cmp    WORD PTR [r9],0x2f
  40a75a:	jne    0x40a87a
  40a760:	cmp    WORD PTR [r9+0x2],bp
  40a765:	je     0x40a773
  40a767:	cmp    WORD PTR [r9+0x2],0x2f
  40a76d:	jne    0x40a87a
  40a773:	mov    r12d,0x2
  40a779:	lea    rcx,[r9+0x4]
  40a77d:	call   0x40a0d0
  40a782:	mov    ebp,eax
  40a784:	test   eax,eax
  40a786:	jne    0x40a797
  40a788:	mov    rcx,r9
  40a78b:	call   0x40215c
  40a790:	xor    al,al
  40a792:	jmp    0x40a933
  40a797:	mov    r13,QWORD PTR [rip+0x5d912]        # 0x4680b0
  40a79e:	lea    rcx,[rsp+0x48]
  40a7a3:	call   0x403150
  40a7a8:	nop
  40a7a9:	cmp    si,0x5c
  40a7ad:	je     0x40a7dc
  40a7af:	cmp    si,0x2f
  40a7b3:	je     0x40a7dc
  40a7b5:	lea    ecx,[rbp+r12*1+0x0]
  40a7ba:	mov    rax,QWORD PTR [rsp+0x28]
  40a7bf:	lea    rdx,[rax+rcx*2]
  40a7c3:	lea    rcx,[rsp+0x48]
  40a7c8:	call   0x4033f0
  40a7cd:	mov    rdx,rbx
  40a7d0:	lea    rcx,[rsp+0x48]
  40a7d5:	call   0x4033f0
  40a7da:	jmp    0x40a7ea
  40a7dc:	lea    rdx,[rbx+0x2]
  40a7e0:	lea    rcx,[rsp+0x48]
  40a7e5:	call   0x403290
  40a7ea:	lea    rcx,[rsp+0x48]
  40a7ef:	call   0x40a268
  40a7f4:	test   al,al
  40a7f6:	jne    0x40a814
  40a7f8:	mov    rcx,QWORD PTR [rsp+0x48]
  40a7fd:	call   0x40215c
  40a802:	nop
  40a803:	mov    rcx,QWORD PTR [rsp+0x28]
  40a808:	call   0x40215c
  40a80d:	xor    al,al
  40a80f:	jmp    0x40a933
  40a814:	test   r13,r13
  40a817:	je     0x40a824
  40a819:	mov    rdx,r13
  40a81c:	mov    rcx,rdi
  40a81f:	call   0x4033f0
  40a824:	mov    r9d,ebp
  40a827:	mov    r8d,r12d
  40a82a:	lea    rdx,[rsp+0x58]
  40a82f:	lea    rcx,[rsp+0x28]
  40a834:	call   0x409d0c
  40a839:	nop
  40a83a:	mov    rdx,rax
  40a83d:	mov    rcx,rdi
  40a840:	call   0x403444
  40a845:	nop
  40a846:	mov    rcx,QWORD PTR [rsp+0x58]
  40a84b:	call   0x40215c
  40a850:	lea    rdx,[rsp+0x48]
  40a855:	mov    rcx,rdi
  40a858:	call   0x403444
  40a85d:	nop
  40a85e:	mov    rcx,QWORD PTR [rsp+0x48]
  40a863:	call   0x40215c
  40a868:	nop
  40a869:	mov    rcx,QWORD PTR [rsp+0x28]
  40a86e:	call   0x40215c
  40a873:	mov    al,0x1
  40a875:	jmp    0x40a933
  40a87a:	mov    rcx,r9
  40a87d:	call   0x40215c
  40a882:	xor    al,al
  40a884:	jmp    0x40a933
  40a889:	lea    rdx,[rbx+0x4]
  40a88d:	lea    rcx,[rsp+0x38]
  40a892:	call   0x4031c0
  40a897:	nop
  40a898:	mov    r9,QWORD PTR [rsp+0x38]
  40a89d:	mov    rcx,r9
  40a8a0:	call   0x40a0d0
  40a8a5:	mov    ebx,eax
  40a8a7:	lea    rdx,[r9+rbx*2]
  40a8ab:	lea    rcx,[rsp+0x58]
  40a8b0:	call   0x4031c0
  40a8b5:	nop
  40a8b6:	lea    rcx,[rsp+0x58]
  40a8bb:	call   0x40a268
  40a8c0:	test   al,al
  40a8c2:	jne    0x40a8dd
  40a8c4:	mov    rcx,QWORD PTR [rsp+0x58]
  40a8c9:	call   0x40215c
  40a8ce:	nop
  40a8cf:	mov    rcx,QWORD PTR [rsp+0x38]
  40a8d4:	call   0x40215c
  40a8d9:	xor    al,al
  40a8db:	jmp    0x40a933
  40a8dd:	mov    rdx,QWORD PTR [rip+0x5d7cc]        # 0x4680b0
  40a8e4:	mov    rcx,rdi
  40a8e7:	call   0x4033f0
  40a8ec:	cmp    ebx,DWORD PTR [rsp+0x40]
  40a8f0:	jae    0x40a901
  40a8f2:	mov    DWORD PTR [rsp+0x40],ebx
  40a8f6:	mov    rax,QWORD PTR [rsp+0x38]
  40a8fb:	mov    WORD PTR [rax+rbx*2],0x0
  40a901:	lea    rdx,[rsp+0x38]
  40a906:	mov    rcx,rdi
  40a909:	call   0x403444
  40a90e:	lea    rdx,[rsp+0x58]
  40a913:	mov    rcx,rdi
  40a916:	call   0x403444
  40a91b:	nop
  40a91c:	mov    rcx,QWORD PTR [rsp+0x58]
  40a921:	call   0x40215c
  40a926:	nop
  40a927:	mov    rcx,QWORD PTR [rsp+0x38]
  40a92c:	call   0x40215c
  40a931:	mov    al,0x1
  40a933:	add    rsp,0x78
  40a937:	pop    r13
  40a939:	pop    r12
  40a93b:	pop    rdi
  40a93c:	pop    rsi
  40a93d:	pop    rbp
  40a93e:	pop    rbx
  40a93f:	ret    
  40a940:	int3   
  40a941:	int3   
  40a942:	int3   
  40a943:	int3   
  40a944:	int3   
  40a945:	int3   
  40a946:	int3   
  40a947:	int3   
  40a948:	rex.W push rbp
  40a94a:	sub    rsp,0x20
  40a94e:	mov    rbp,rdx
  40a951:	lea    rcx,[rbp+0x38]
  40a955:	call   0x401000
  40a95a:	add    rsp,0x20
  40a95e:	pop    rbp
  40a95f:	ret    
  40a960:	int3   
  40a961:	int3   
  40a962:	int3   
  40a963:	int3   
  40a964:	int3   
  40a965:	int3   
  40a966:	int3   
  40a967:	int3   
  40a968:	rex.W push rbp
  40a96a:	sub    rsp,0x20
  40a96e:	mov    rbp,rdx
  40a971:	lea    rcx,[rbp+0x58]
  40a975:	call   0x401000
  40a97a:	add    rsp,0x20
  40a97e:	pop    rbp
  40a97f:	ret    
  40a980:	int3   
  40a981:	int3   
  40a982:	int3   
  40a983:	int3   
  40a984:	int3   
  40a985:	int3   
  40a986:	int3   
  40a987:	int3   
  40a988:	rex.W push rbp
  40a98a:	sub    rsp,0x20
  40a98e:	mov    rbp,rdx
  40a991:	lea    rcx,[rbp+0x38]
  40a995:	call   0x401000
  40a99a:	add    rsp,0x20
  40a99e:	pop    rbp
  40a99f:	ret    
  40a9a0:	int3   
  40a9a1:	int3   
  40a9a2:	int3   
  40a9a3:	int3   
  40a9a4:	int3   
  40a9a5:	int3   
  40a9a6:	int3   
  40a9a7:	int3   
  40a9a8:	rex.W push rbp
  40a9aa:	sub    rsp,0x20
  40a9ae:	mov    rbp,rdx
  40a9b1:	lea    rcx,[rbp+0x58]
  40a9b5:	call   0x401000
  40a9ba:	add    rsp,0x20
  40a9be:	pop    rbp
  40a9bf:	ret    
  40a9c0:	int3   
  40a9c1:	int3   
  40a9c2:	int3   
  40a9c3:	int3   
  40a9c4:	int3   
  40a9c5:	int3   
  40a9c6:	int3   
  40a9c7:	int3   
  40a9c8:	rex.W push rbp
  40a9ca:	sub    rsp,0x20
  40a9ce:	mov    rbp,rdx
  40a9d1:	lea    rcx,[rbp+0x38]
  40a9d5:	call   0x401000
  40a9da:	add    rsp,0x20
  40a9de:	pop    rbp
  40a9df:	ret    
  40a9e0:	int3   
  40a9e1:	int3   
  40a9e2:	int3   
  40a9e3:	int3   
  40a9e4:	int3   
  40a9e5:	int3   
  40a9e6:	int3   
  40a9e7:	int3   
  40a9e8:	rex.W push rbp
  40a9ea:	sub    rsp,0x20
  40a9ee:	mov    rbp,rdx
  40a9f1:	lea    rcx,[rbp+0x58]
  40a9f5:	call   0x401000
  40a9fa:	add    rsp,0x20
  40a9fe:	pop    rbp
  40a9ff:	ret    
  40aa00:	int3   
  40aa01:	int3   
  40aa02:	int3   
  40aa03:	int3   
  40aa04:	int3   
  40aa05:	int3   
  40aa06:	int3   
  40aa07:	int3   
  40aa08:	rex.W push rbp
  40aa0a:	sub    rsp,0x20
  40aa0e:	mov    rbp,rdx
  40aa11:	lea    rcx,[rbp+0x28]
  40aa15:	call   0x401000
  40aa1a:	add    rsp,0x20
  40aa1e:	pop    rbp
  40aa1f:	ret    
  40aa20:	int3   
  40aa21:	int3   
  40aa22:	int3   
  40aa23:	int3   
  40aa24:	int3   
  40aa25:	int3   
  40aa26:	int3   
  40aa27:	int3   
  40aa28:	rex.W push rbp
  40aa2a:	sub    rsp,0x20
  40aa2e:	mov    rbp,rdx
  40aa31:	lea    rcx,[rbp+0x48]
  40aa35:	call   0x401000
  40aa3a:	add    rsp,0x20
  40aa3e:	pop    rbp
  40aa3f:	ret    
  40aa40:	int3   
  40aa41:	int3   
  40aa42:	int3   
  40aa43:	int3   
  40aa44:	int3   
  40aa45:	int3   
  40aa46:	int3   
  40aa47:	int3   
  40aa48:	rex.W push rbp
  40aa4a:	sub    rsp,0x20
  40aa4e:	mov    rbp,rdx
  40aa51:	lea    rcx,[rbp+0x58]
  40aa55:	call   0x401000
  40aa5a:	add    rsp,0x20
  40aa5e:	pop    rbp
  40aa5f:	ret    
  40aa60:	rex.W push rbx
  40aa62:	push   rsi
  40aa63:	push   rdi
  40aa64:	sub    rsp,0x20
  40aa68:	mov    sil,r8b
  40aa6b:	mov    rbx,rdx
  40aa6e:	mov    rdi,rcx
  40aa71:	call   0x40a498
  40aa76:	test   al,al
  40aa78:	je     0x40aa94
  40aa7a:	cmp    DWORD PTR [rbx+0x8],0x0
  40aa7e:	jne    0x40aa90
  40aa80:	test   sil,sil
  40aa83:	jne    0x40aa94
  40aa85:	mov    rdx,rdi
  40aa88:	mov    rcx,rbx
  40aa8b:	call   0x403290
  40aa90:	mov    al,0x1
  40aa92:	jmp    0x40aa96
  40aa94:	xor    al,al
  40aa96:	add    rsp,0x20
  40aa9a:	pop    rdi
  40aa9b:	pop    rsi
  40aa9c:	pop    rbx
  40aa9d:	ret    
  40aa9e:	int3   
  40aa9f:	int3   
  40aaa0:	rex.W push rbx
  40aaa2:	push   rbp
  40aaa3:	push   rsi
  40aaa4:	push   rdi
  40aaa5:	sub    rsp,0x28
  40aaa9:	mov    rsi,rdx
  40aaac:	mov    rdx,r8
  40aaaf:	mov    rbx,r9
  40aab2:	mov    rdi,r8
  40aab5:	mov    rbp,rcx
  40aab8:	call   0x40a498
  40aabd:	test   al,al
  40aabf:	je     0x40ab06
  40aac1:	mov    rdx,rbx
  40aac4:	mov    rcx,rsi
  40aac7:	call   0x40a498
  40aacc:	test   al,al
  40aace:	je     0x40ab06
  40aad0:	mov    eax,DWORD PTR [rdi+0x8]
  40aad3:	test   eax,eax
  40aad5:	jne    0x40aaf1
  40aad7:	cmp    DWORD PTR [rbx+0x8],eax
  40aada:	jne    0x40aae2
  40aadc:	cmp    BYTE PTR [rsp+0x70],al
  40aae0:	jne    0x40ab06
  40aae2:	test   eax,eax
  40aae4:	jne    0x40aaf1
  40aae6:	mov    rdx,rbp
  40aae9:	mov    rcx,rdi
  40aaec:	call   0x403290
  40aaf1:	cmp    DWORD PTR [rbx+0x8],0x0
  40aaf5:	jne    0x40ab02
  40aaf7:	mov    rdx,rsi
  40aafa:	mov    rcx,rbx
  40aafd:	call   0x403290
  40ab02:	mov    al,0x1
  40ab04:	jmp    0x40ab08
  40ab06:	xor    al,al
  40ab08:	add    rsp,0x28
  40ab0c:	pop    rdi
  40ab0d:	pop    rsi
  40ab0e:	pop    rbp
  40ab0f:	pop    rbx
  40ab10:	ret    
  40ab11:	int3   
  40ab12:	int3   
  40ab13:	int3   
  40ab14:	rex.W push rbx
  40ab16:	push   rbp
  40ab17:	push   rsi
  40ab18:	push   rdi
  40ab19:	sub    rsp,0x68
  40ab1d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40ab26:	mov    rdi,r8
  40ab29:	mov    rbp,rdx
  40ab2c:	mov    rsi,rcx
  40ab2f:	mov    rcx,r8
  40ab32:	call   0x403290
  40ab37:	mov    rcx,rbp
  40ab3a:	call   0x40a168
  40ab3f:	mov    ebx,eax
  40ab41:	test   eax,eax
  40ab43:	je     0x40abba
  40ab45:	lea    r8,[rbp+rbx*2+0x0]
  40ab4a:	mov    rcx,r8
  40ab4d:	call   0x40a37c
  40ab52:	test   al,al
  40ab54:	jne    0x40ab5d
  40ab56:	mov    al,0x1
  40ab58:	jmp    0x40ad4b
  40ab5d:	mov    rdx,r8
  40ab60:	lea    rcx,[rsp+0x48]
  40ab65:	call   0x4031c0
  40ab6a:	nop
  40ab6b:	lea    rcx,[rsp+0x48]
  40ab70:	call   0x40a268
  40ab75:	test   al,al
  40ab77:	jne    0x40ab8a
  40ab79:	mov    rcx,QWORD PTR [rsp+0x48]
  40ab7e:	call   0x40215c
  40ab83:	mov    al,0x1
  40ab85:	jmp    0x40ad4b
  40ab8a:	cmp    ebx,DWORD PTR [rdi+0x8]
  40ab8d:	jae    0x40ab9b
  40ab8f:	mov    DWORD PTR [rdi+0x8],ebx
  40ab92:	mov    rax,QWORD PTR [rdi]
  40ab95:	mov    WORD PTR [rax+rbx*2],0x0
  40ab9b:	lea    rdx,[rsp+0x48]
  40aba0:	mov    rcx,rdi
  40aba3:	call   0x403444
  40aba8:	nop
  40aba9:	mov    rcx,QWORD PTR [rsp+0x48]
  40abae:	call   0x40215c
  40abb3:	mov    al,0x1
  40abb5:	jmp    0x40ad4b
  40abba:	lea    rcx,[rsp+0x28]
  40abbf:	call   0x403150
  40abc4:	nop
  40abc5:	test   rsi,rsi
  40abc8:	je     0x40abd9
  40abca:	mov    rdx,rsi
  40abcd:	lea    rcx,[rsp+0x28]
  40abd2:	call   0x403290
  40abd7:	jmp    0x40abf8
  40abd9:	lea    rcx,[rsp+0x28]
  40abde:	call   0x40a210
  40abe3:	test   al,al
  40abe5:	jne    0x40abf8
  40abe7:	mov    rcx,QWORD PTR [rsp+0x28]
  40abec:	call   0x40215c
  40abf1:	xor    al,al
  40abf3:	jmp    0x40ad4b
  40abf8:	lea    rcx,[rsp+0x28]
  40abfd:	call   0x409d6c
  40ac02:	mov    r11,QWORD PTR [rsp+0x28]
  40ac07:	mov    rcx,r11
  40ac0a:	call   0x409f9c
  40ac0f:	test   al,al
  40ac11:	je     0x40ac2d
  40ac13:	call   0x40a0fc
  40ac18:	mov    ebx,eax
  40ac1a:	test   eax,eax
  40ac1c:	jne    0x40ac84
  40ac1e:	mov    rcx,r11
  40ac21:	call   0x40215c
  40ac26:	xor    al,al
  40ac28:	jmp    0x40ad4b
  40ac2d:	call   0x409dbc
  40ac32:	test   al,al
  40ac34:	je     0x40ac3d
  40ac36:	mov    ebx,0x3
  40ac3b:	jmp    0x40ac84
  40ac3d:	cmp    WORD PTR [r11],0x5c
  40ac42:	je     0x40ac4f
  40ac44:	cmp    WORD PTR [r11],0x2f
  40ac49:	jne    0x40ad41
  40ac4f:	cmp    WORD PTR [r11+0x2],0x5c
  40ac55:	je     0x40ac63
  40ac57:	cmp    WORD PTR [r11+0x2],0x2f
  40ac5d:	jne    0x40ad41
  40ac63:	lea    rcx,[r11+0x4]
  40ac67:	call   0x40a0d0
  40ac6c:	mov    ebx,eax
  40ac6e:	test   eax,eax
  40ac70:	jne    0x40ac81
  40ac72:	mov    rcx,r11
  40ac75:	call   0x40215c
  40ac7a:	xor    al,al
  40ac7c:	jmp    0x40ad4b
  40ac81:	add    ebx,0x2
  40ac84:	lea    rcx,[rsp+0x38]
  40ac89:	call   0x403150
  40ac8e:	nop
  40ac8f:	cmp    WORD PTR [rbp+0x0],0x5c
  40ac94:	je     0x40acc1
  40ac96:	cmp    WORD PTR [rbp+0x0],0x2f
  40ac9b:	je     0x40acc1
  40ac9d:	mov    ecx,ebx
  40ac9f:	mov    rax,QWORD PTR [rsp+0x28]
  40aca4:	lea    rdx,[rax+rcx*2]
  40aca8:	lea    rcx,[rsp+0x38]
  40acad:	call   0x4033f0
  40acb2:	mov    rdx,rbp
  40acb5:	lea    rcx,[rsp+0x38]
  40acba:	call   0x4033f0
  40acbf:	jmp    0x40accf
  40acc1:	lea    rdx,[rbp+0x2]
  40acc5:	lea    rcx,[rsp+0x38]
  40acca:	call   0x403290
  40accf:	lea    rcx,[rsp+0x38]
  40acd4:	call   0x40a268
  40acd9:	test   al,al
  40acdb:	jne    0x40acf6
  40acdd:	mov    rcx,QWORD PTR [rsp+0x38]
  40ace2:	call   0x40215c
  40ace7:	nop
  40ace8:	mov    rcx,QWORD PTR [rsp+0x28]
  40aced:	call   0x40215c
  40acf2:	xor    al,al
  40acf4:	jmp    0x40ad4b
  40acf6:	cmp    ebx,DWORD PTR [rsp+0x30]
  40acfa:	jae    0x40ad0d
  40acfc:	mov    DWORD PTR [rsp+0x30],ebx
  40ad00:	mov    ecx,ebx
  40ad02:	mov    rax,QWORD PTR [rsp+0x28]
  40ad07:	mov    WORD PTR [rax+rcx*2],0x0
  40ad0d:	lea    rdx,[rsp+0x28]
  40ad12:	mov    rcx,rdi
  40ad15:	call   0x4032f8
  40ad1a:	lea    rdx,[rsp+0x38]
  40ad1f:	mov    rcx,rdi
  40ad22:	call   0x403444
  40ad27:	nop
  40ad28:	mov    rcx,QWORD PTR [rsp+0x38]
  40ad2d:	call   0x40215c
  40ad32:	nop
  40ad33:	mov    rcx,QWORD PTR [rsp+0x28]
  40ad38:	call   0x40215c
  40ad3d:	mov    al,0x1
  40ad3f:	jmp    0x40ad4b
  40ad41:	mov    rcx,r11
  40ad44:	call   0x40215c
  40ad49:	xor    al,al
  40ad4b:	add    rsp,0x68
  40ad4f:	pop    rdi
  40ad50:	pop    rsi
  40ad51:	pop    rbp
  40ad52:	pop    rbx
  40ad53:	ret    
  40ad54:	rex.W push rbp
  40ad56:	sub    rsp,0x20
  40ad5a:	mov    rbp,rdx
  40ad5d:	lea    rcx,[rbp+0x48]
  40ad61:	call   0x401000
  40ad66:	add    rsp,0x20
  40ad6a:	pop    rbp
  40ad6b:	ret    
  40ad6c:	int3   
  40ad6d:	int3   
  40ad6e:	int3   
  40ad6f:	int3   
  40ad70:	int3   
  40ad71:	int3   
  40ad72:	int3   
  40ad73:	int3   
  40ad74:	rex.W push rbp
  40ad76:	sub    rsp,0x20
  40ad7a:	mov    rbp,rdx
  40ad7d:	lea    rcx,[rbp+0x28]
  40ad81:	call   0x401000
  40ad86:	add    rsp,0x20
  40ad8a:	pop    rbp
  40ad8b:	ret    
  40ad8c:	int3   
  40ad8d:	int3   
  40ad8e:	int3   
  40ad8f:	int3   
  40ad90:	int3   
  40ad91:	int3   
  40ad92:	int3   
  40ad93:	int3   
  40ad94:	rex.W push rbp
  40ad96:	sub    rsp,0x20
  40ad9a:	mov    rbp,rdx
  40ad9d:	lea    rcx,[rbp+0x38]
  40ada1:	call   0x401000
  40ada6:	add    rsp,0x20
  40adaa:	pop    rbp
  40adab:	ret    
  40adac:	mov    r8,rdx
  40adaf:	mov    rdx,rcx
  40adb2:	xor    ecx,ecx
  40adb4:	jmp    0x40ab14
  40adb9:	int3   
  40adba:	int3   
  40adbb:	int3   
  40adbc:	rex.W push rbx
  40adbe:	push   rdi
  40adbf:	sub    rsp,0x28
  40adc3:	xor    ebx,ebx
  40adc5:	mov    rdi,rcx
  40adc8:	cmp    WORD PTR [rcx],bx
  40adcb:	je     0x40addc
  40adcd:	mov    rax,rcx
  40add0:	add    rax,0x2
  40add4:	inc    ebx
  40add6:	cmp    WORD PTR [rax],0x0
  40adda:	jne    0x40add0
  40addc:	test   ebx,ebx
  40adde:	je     0x40ae17
  40ade0:	lea    eax,[rbx-0x1]
  40ade3:	cmp    WORD PTR [rcx+rax*2],0x3a
  40ade8:	jne    0x40ae17
  40adea:	call   0x409df4
  40adef:	test   al,al
  40adf1:	jne    0x40ae17
  40adf3:	mov    rcx,rdi
  40adf6:	call   0x409f9c
  40adfb:	test   al,al
  40adfd:	je     0x40ae06
  40adff:	add    rdi,0x8
  40ae03:	add    ebx,0xfffffffc
  40ae06:	cmp    ebx,0x2
  40ae09:	jne    0x40ae1b
  40ae0b:	mov    rcx,rdi
  40ae0e:	call   0x409f74
  40ae13:	test   al,al
  40ae15:	je     0x40ae1b
  40ae17:	xor    al,al
  40ae19:	jmp    0x40ae1d
  40ae1b:	mov    al,0x1
  40ae1d:	add    rsp,0x28
  40ae21:	pop    rdi
  40ae22:	pop    rbx
  40ae23:	ret    
  40ae24:	rex.W push rbx
  40ae26:	push   rbp
  40ae27:	push   rsi
  40ae28:	push   rdi
  40ae29:	push   r12
  40ae2b:	sub    rsp,0x60
  40ae2f:	mov    r12,rcx
  40ae32:	lea    rcx,[rip+0x42c1f]        # 0x44da58
  40ae39:	mov    rdi,r9
  40ae3c:	mov    rsi,r8
  40ae3f:	mov    rbx,rdx
  40ae42:	xor    bpl,bpl
  40ae45:	call   QWORD PTR [rip+0x423cd]        # 0x44d218
  40ae4b:	lea    rdx,[rip+0x42f46]        # 0x44dd98
  40ae52:	mov    rcx,rax
  40ae55:	call   QWORD PTR [rip+0x423b5]        # 0x44d210
  40ae5b:	test   rax,rax
  40ae5e:	je     0x40ae8a
  40ae60:	lea    r9,[rsp+0x48]
  40ae65:	lea    r8,[rsp+0x40]
  40ae6a:	lea    rdx,[rsp+0x50]
  40ae6f:	mov    rcx,r12
  40ae72:	call   rax
  40ae74:	test   eax,eax
  40ae76:	mov    rax,QWORD PTR [rsp+0x40]
  40ae7b:	mov    QWORD PTR [rsi],rax
  40ae7e:	mov    rax,QWORD PTR [rsp+0x48]
  40ae83:	setne  bpl
  40ae87:	mov    QWORD PTR [rdi],rax
  40ae8a:	lea    rax,[rsp+0x38]
  40ae8f:	lea    r9,[rsp+0x3c]
  40ae94:	lea    r8,[rsp+0x34]
  40ae99:	lea    rdx,[rsp+0x30]
  40ae9e:	mov    rcx,r12
  40aea1:	mov    QWORD PTR [rsp+0x20],rax
  40aea6:	call   QWORD PTR [rip+0x4228c]        # 0x44d138
  40aeac:	test   eax,eax
  40aeae:	je     0x40aedc
  40aeb0:	mov    ecx,DWORD PTR [rsp+0x30]
  40aeb4:	mov    eax,DWORD PTR [rsp+0x34]
  40aeb8:	imul   rcx,rax
  40aebc:	test   bpl,bpl
  40aebf:	mov    QWORD PTR [rbx],rcx
  40aec2:	jne    0x40aeda
  40aec4:	mov    eax,DWORD PTR [rsp+0x38]
  40aec8:	imul   rax,rcx
  40aecc:	mov    QWORD PTR [rsi],rax
  40aecf:	mov    eax,DWORD PTR [rsp+0x3c]
  40aed3:	imul   rax,QWORD PTR [rbx]
  40aed7:	mov    QWORD PTR [rdi],rax
  40aeda:	mov    al,0x1
  40aedc:	add    rsp,0x60
  40aee0:	pop    r12
  40aee2:	pop    rdi
  40aee3:	pop    rsi
  40aee4:	pop    rbp
  40aee5:	pop    rbx
  40aee6:	ret    
  40aee7:	int3   
  40aee8:	rex.W push rbx
  40aeea:	push   rsi
  40aeeb:	push   rdi
  40aeec:	sub    rsp,0x40
  40aef0:	mov    dil,dl
  40aef3:	mov    rsi,rcx
  40aef6:	xor    ebx,ebx
  40aef8:	call   QWORD PTR [rip+0x42232]        # 0x44d130
  40aefe:	lea    r8,[rsp+0x70]
  40af03:	lea    edx,[rbx+0x20]
  40af06:	mov    rcx,rax
  40af09:	call   QWORD PTR [rip+0x420f1]        # 0x44d000
  40af0f:	cmp    eax,ebx
  40af11:	je     0x40af74
  40af13:	lea    r8,[rsp+0x34]
  40af18:	mov    rdx,rsi
  40af1b:	xor    ecx,ecx
  40af1d:	call   QWORD PTR [rip+0x4210d]        # 0x44d030
  40af23:	cmp    eax,ebx
  40af25:	je     0x40af69
  40af27:	mov    rcx,QWORD PTR [rsp+0x70]
  40af2c:	neg    dil
  40af2f:	lea    r8,[rsp+0x30]
  40af34:	sbb    eax,eax
  40af36:	xor    r9d,r9d
  40af39:	xor    edx,edx
  40af3b:	and    eax,0x2
  40af3e:	mov    QWORD PTR [rsp+0x28],rbx
  40af43:	mov    DWORD PTR [rsp+0x30],0x1
  40af4b:	mov    DWORD PTR [rsp+0x3c],eax
  40af4f:	mov    QWORD PTR [rsp+0x20],rbx
  40af54:	call   QWORD PTR [rip+0x420ce]        # 0x44d028
  40af5a:	cmp    eax,ebx
  40af5c:	je     0x40af69
  40af5e:	call   QWORD PTR [rip+0x4223c]        # 0x44d1a0
  40af64:	cmp    eax,ebx
  40af66:	sete   bl
  40af69:	mov    rcx,QWORD PTR [rsp+0x70]
  40af6e:	call   QWORD PTR [rip+0x4226c]        # 0x44d1e0
  40af74:	mov    al,bl
  40af76:	add    rsp,0x40
  40af7a:	pop    rdi
  40af7b:	pop    rsi
  40af7c:	pop    rbx
  40af7d:	ret    
  40af7e:	int3   
  40af7f:	int3   
  40af80:	rex.W push rbx
  40af82:	push   rdi
  40af83:	sub    rsp,0x28
  40af87:	test   rcx,rcx
  40af8a:	mov    rbx,rcx
  40af8d:	jne    0x40af93
  40af8f:	xor    eax,eax
  40af91:	jmp    0x40afc3
  40af93:	call   0x44b78c
  40af98:	xor    ecx,ecx
  40af9a:	mov    edx,eax
  40af9c:	mov    rdi,rax
  40af9f:	call   QWORD PTR [rip+0x42303]        # 0x44d2a8
  40afa5:	test   rax,rax
  40afa8:	je     0x40afc3
  40afaa:	mov    rdx,rax
  40afad:	lea    r8d,[rdi+0x1]
  40afb1:	movzx  ecx,BYTE PTR [rbx]
  40afb4:	inc    rbx
  40afb7:	mov    WORD PTR [rdx],cx
  40afba:	add    rdx,0x2
  40afbe:	dec    r8
  40afc1:	jne    0x40afb1
  40afc3:	add    rsp,0x28
  40afc7:	pop    rdi
  40afc8:	pop    rbx
  40afc9:	ret    
  40afca:	int3   
  40afcb:	int3   
  40afcc:	sub    rsp,0x28
  40afd0:	movzx  eax,WORD PTR [rcx]
  40afd3:	xor    edx,edx
  40afd5:	cmp    eax,0x13
  40afd8:	jg     0x40b002
  40afda:	cmp    eax,0x10
  40afdd:	jge    0x40b011
  40afdf:	cmp    eax,edx
  40afe1:	je     0x40b011
  40afe3:	cmp    eax,0x1
  40afe6:	jle    0x40aff7
  40afe8:	cmp    eax,0x7
  40afeb:	jle    0x40b011
  40afed:	cmp    eax,0x9
  40aff0:	jle    0x40aff7
  40aff2:	cmp    eax,0xb
  40aff5:	jle    0x40b011
  40aff7:	call   QWORD PTR [rip+0x42283]        # 0x44d280
  40affd:	add    rsp,0x28
  40b001:	ret    
  40b002:	cmp    eax,0x15
  40b005:	jl     0x40aff7
  40b007:	cmp    eax,0x17
  40b00a:	jle    0x40b011
  40b00c:	cmp    eax,0x40
  40b00f:	jne    0x40aff7
  40b011:	mov    WORD PTR [rcx],dx
  40b014:	mov    WORD PTR [rcx+0x2],dx
  40b018:	mov    WORD PTR [rcx+0x4],dx
  40b01c:	mov    WORD PTR [rcx+0x6],dx
  40b020:	mov    QWORD PTR [rcx+0x8],rdx
  40b024:	xor    eax,eax
  40b026:	jmp    0x40affd
  40b028:	sub    rsp,0x28
  40b02c:	cmp    WORD PTR [rcx],0x0
  40b030:	jne    0x40b036
  40b032:	xor    eax,eax
  40b034:	jmp    0x40b03b
  40b036:	call   0x40afcc
  40b03b:	add    rsp,0x28
  40b03f:	ret    
  40b040:	rex.W push rbx
  40b042:	push   rdi
  40b043:	sub    rsp,0x28
  40b047:	mov    rbx,rdx
  40b04a:	mov    rdi,rcx
  40b04d:	call   QWORD PTR [rip+0x4222d]        # 0x44d280
  40b053:	movzx  r11d,WORD PTR [rbx]
  40b057:	cmp    r11d,0x2
  40b05b:	jl     0x40b0a2
  40b05d:	cmp    r11d,0x7
  40b061:	jle    0x40b08d
  40b063:	cmp    r11d,0x9
  40b067:	jle    0x40b0a2
  40b069:	cmp    r11d,0xb
  40b06d:	jle    0x40b08d
  40b06f:	cmp    r11d,0xf
  40b073:	jle    0x40b0a2
  40b075:	cmp    r11d,0x13
  40b079:	jle    0x40b08d
  40b07b:	cmp    r11d,0x14
  40b07f:	jle    0x40b0a2
  40b081:	cmp    r11d,0x17
  40b085:	jle    0x40b08d
  40b087:	cmp    r11d,0x40
  40b08b:	jne    0x40b0a2
  40b08d:	mov    r8d,0x18
  40b093:	mov    rdx,rbx
  40b096:	mov    rcx,rdi
  40b099:	call   0x44b774
  40b09e:	xor    eax,eax
  40b0a0:	jmp    0x40b0ae
  40b0a2:	mov    rdx,rbx
  40b0a5:	mov    rcx,rdi
  40b0a8:	call   QWORD PTR [rip+0x421da]        # 0x44d288
  40b0ae:	add    rsp,0x28
  40b0b2:	pop    rdi
  40b0b3:	pop    rbx
  40b0b4:	ret    
  40b0b5:	int3   
  40b0b6:	int3   
  40b0b7:	int3   
  40b0b8:	rex.W push rbx
  40b0ba:	push   rdi
  40b0bb:	sub    rsp,0x28
  40b0bf:	cmp    WORD PTR [rdx],0x0
  40b0c3:	mov    rbx,rdx
  40b0c6:	mov    rdi,rcx
  40b0c9:	je     0x40b0d7
  40b0cb:	mov    rcx,rdx
  40b0ce:	call   0x40afcc
  40b0d3:	test   eax,eax
  40b0d5:	js     0x40b0ef
  40b0d7:	mov    r8d,0x18
  40b0dd:	mov    rdx,rdi
  40b0e0:	mov    rcx,rbx
  40b0e3:	call   0x44b480
  40b0e8:	mov    WORD PTR [rdi],0x0
  40b0ed:	xor    eax,eax
  40b0ef:	add    rsp,0x28
  40b0f3:	pop    rdi
  40b0f4:	pop    rbx
  40b0f5:	ret    
  40b0f6:	int3   
  40b0f7:	int3   
  40b0f8:	rex.W push rbx
  40b0fa:	sub    rsp,0x20
  40b0fe:	cmp    WORD PTR [rcx],0x0
  40b102:	mov    rbx,rcx
  40b105:	jne    0x40b10b
  40b107:	xor    eax,eax
  40b109:	jmp    0x40b11c
  40b10b:	call   0x40afcc
  40b110:	test   eax,eax
  40b112:	jns    0x40b11c
  40b114:	mov    WORD PTR [rbx],0xa
  40b119:	mov    DWORD PTR [rbx+0x8],eax
  40b11c:	add    rsp,0x20
  40b120:	pop    rbx
  40b121:	ret    
  40b122:	int3   
  40b123:	int3   
  40b124:	rex.W push rbx
  40b126:	sub    rsp,0x20
  40b12a:	mov    rbx,rcx
  40b12d:	call   0x40b040
  40b132:	test   eax,eax
  40b134:	jns    0x40b163
  40b136:	cmp    eax,0x8007000e
  40b13b:	jne    0x40b15b
  40b13d:	mov    rax,QWORD PTR [rip+0x5cf74]        # 0x4680b8
  40b144:	lea    rdx,[rip+0x5bf2d]        # 0x467078
  40b14b:	lea    rcx,[rsp+0x40]
  40b150:	mov    QWORD PTR [rsp+0x40],rax
  40b155:	call   0x44b71e
  40b15a:	int3   
  40b15b:	mov    WORD PTR [rbx],0xa
  40b160:	mov    DWORD PTR [rbx+0x8],eax
  40b163:	add    rsp,0x20
  40b167:	pop    rbx
  40b168:	ret    
  40b169:	int3   
  40b16a:	int3   
  40b16b:	int3   
  40b16c:	rex.W push rbx
  40b16e:	sub    rsp,0x20
  40b172:	mov    rbx,rcx
  40b175:	mov    WORD PTR [rcx],0x0
  40b17a:	call   0x40b124
  40b17f:	mov    rax,rbx
  40b182:	add    rsp,0x20
  40b186:	pop    rbx
  40b187:	ret    
  40b188:	rex.W push rbx
  40b18a:	sub    rsp,0x20
  40b18e:	mov    rbx,rcx
  40b191:	call   0x40b124
  40b196:	mov    rax,rbx
  40b199:	add    rsp,0x20
  40b19d:	pop    rbx
  40b19e:	ret    
  40b19f:	int3   
  40b1a0:	rex.W push rbx
  40b1a2:	push   rdi
  40b1a3:	sub    rsp,0x28
  40b1a7:	mov    rbx,rdx
  40b1aa:	mov    rdi,rcx
  40b1ad:	call   0x40b0f8
  40b1b2:	mov    WORD PTR [rdi],0x8
  40b1b7:	mov    WORD PTR [rdi+0x2],0x0
  40b1bd:	mov    edx,DWORD PTR [rbx+0x8]
  40b1c0:	mov    rcx,QWORD PTR [rbx]
  40b1c3:	call   QWORD PTR [rip+0x420df]        # 0x44d2a8
  40b1c9:	test   rax,rax
  40b1cc:	mov    QWORD PTR [rdi+0x8],rax
  40b1d0:	jne    0x40b1f0
  40b1d2:	mov    rax,QWORD PTR [rip+0x5cedf]        # 0x4680b8
  40b1d9:	lea    rdx,[rip+0x5be98]        # 0x467078
  40b1e0:	lea    rcx,[rsp+0x40]
  40b1e5:	mov    QWORD PTR [rsp+0x40],rax
  40b1ea:	call   0x44b71e
  40b1ef:	int3   
  40b1f0:	mov    rax,rdi
  40b1f3:	add    rsp,0x28
  40b1f7:	pop    rdi
  40b1f8:	pop    rbx
  40b1f9:	ret    
  40b1fa:	int3   
  40b1fb:	int3   
  40b1fc:	rex.W push rbx
  40b1fe:	push   rdi
  40b1ff:	sub    rsp,0x28
  40b203:	mov    rbx,rdx
  40b206:	mov    rdi,rcx
  40b209:	call   0x40b0f8
  40b20e:	mov    rcx,rbx
  40b211:	mov    WORD PTR [rdi],0x8
  40b216:	mov    WORD PTR [rdi+0x2],0x0
  40b21c:	call   0x40af80
  40b221:	test   rax,rax
  40b224:	mov    QWORD PTR [rdi+0x8],rax
  40b228:	jne    0x40b248
  40b22a:	mov    rax,QWORD PTR [rip+0x5ce87]        # 0x4680b8
  40b231:	lea    rdx,[rip+0x5be40]        # 0x467078
  40b238:	lea    rcx,[rsp+0x40]
  40b23d:	mov    QWORD PTR [rsp+0x40],rax
  40b242:	call   0x44b71e
  40b247:	int3   
  40b248:	mov    rax,rdi
  40b24b:	add    rsp,0x28
  40b24f:	pop    rdi
  40b250:	pop    rbx
  40b251:	ret    
  40b252:	int3   
  40b253:	int3   
  40b254:	rex.W push rbx
  40b256:	push   rdi
  40b257:	sub    rsp,0x28
  40b25b:	cmp    WORD PTR [rcx],0xb
  40b25f:	mov    dil,dl
  40b262:	mov    rbx,rcx
  40b265:	je     0x40b271
  40b267:	call   0x40b0f8
  40b26c:	mov    WORD PTR [rbx],0xb
  40b271:	neg    dil
  40b274:	sbb    ax,ax
  40b277:	mov    WORD PTR [rbx+0x8],ax
  40b27b:	mov    rax,rbx
  40b27e:	add    rsp,0x28
  40b282:	pop    rdi
  40b283:	pop    rbx
  40b284:	ret    
  40b285:	int3   
  40b286:	int3   
  40b287:	int3   
  40b288:	rex.W push rbx
  40b28a:	push   rdi
  40b28b:	sub    rsp,0x28
  40b28f:	cmp    WORD PTR [rcx],0x13
  40b293:	mov    edi,edx
  40b295:	mov    rbx,rcx
  40b298:	je     0x40b2a4
  40b29a:	call   0x40b0f8
  40b29f:	mov    WORD PTR [rbx],0x13
  40b2a4:	mov    DWORD PTR [rbx+0x8],edi
  40b2a7:	mov    rax,rbx
  40b2aa:	add    rsp,0x28
  40b2ae:	pop    rdi
  40b2af:	pop    rbx
  40b2b0:	ret    
  40b2b1:	int3   
  40b2b2:	int3   
  40b2b3:	int3   
  40b2b4:	rex.W push rbx
  40b2b6:	push   rdi
  40b2b7:	sub    rsp,0x28
  40b2bb:	cmp    WORD PTR [rcx],0x15
  40b2bf:	mov    rdi,rdx
  40b2c2:	mov    rbx,rcx
  40b2c5:	je     0x40b2d1
  40b2c7:	call   0x40b0f8
  40b2cc:	mov    WORD PTR [rbx],0x15
  40b2d1:	mov    QWORD PTR [rbx+0x8],rdi
  40b2d5:	mov    rax,rbx
  40b2d8:	add    rsp,0x28
  40b2dc:	pop    rdi
  40b2dd:	pop    rbx
  40b2de:	ret    
  40b2df:	int3   
  40b2e0:	rex.W push rbx
  40b2e2:	push   rdi
  40b2e3:	sub    rsp,0x28
  40b2e7:	cmp    WORD PTR [rcx],0x40
  40b2eb:	mov    rdi,rdx
  40b2ee:	mov    rbx,rcx
  40b2f1:	je     0x40b2fd
  40b2f3:	call   0x40b0f8
  40b2f8:	mov    WORD PTR [rbx],0x40
  40b2fd:	mov    rax,QWORD PTR [rdi]
  40b300:	mov    QWORD PTR [rbx+0x8],rax
  40b304:	mov    rax,rbx
  40b307:	add    rsp,0x28
  40b30b:	pop    rdi
  40b30c:	pop    rbx
  40b30d:	ret    
  40b30e:	int3   
  40b30f:	int3   
  40b310:	rex.W push rbx
  40b312:	push   rbp
  40b313:	push   rsi
  40b314:	push   rdi
  40b315:	sub    rsp,0x38
  40b319:	mov    rbx,rdx
  40b31c:	lea    rdx,[rsp+0x20]
  40b321:	mov    dil,r9b
  40b324:	mov    sil,r8b
  40b327:	call   QWORD PTR [rip+0x41df3]        # 0x44d120
  40b32d:	test   eax,eax
  40b32f:	je     0x40b4ce
  40b335:	movzx  r8d,WORD PTR [rsp+0x20]
  40b33b:	mov    bpl,0x30
  40b33e:	cmp    r8d,0x2710
  40b345:	jb     0x40b364
  40b347:	mov    eax,0xd1b71759
  40b34c:	mul    r8d
  40b34f:	shr    edx,0xd
  40b352:	lea    eax,[rbp+rdx*1+0x0]
  40b356:	imul   edx,edx,0xffffd8f0
  40b35c:	mov    BYTE PTR [rbx],al
  40b35e:	inc    rbx
  40b361:	add    r8d,edx
  40b364:	mov    r11d,0xcccccccd
  40b36a:	mov    eax,r11d
  40b36d:	mul    r8d
  40b370:	mov    r9d,edx
  40b373:	shr    r9d,0x3
  40b377:	mov    al,r9b
  40b37a:	shl    al,0x2
  40b37d:	lea    ecx,[rax+r9*1]
  40b381:	mov    eax,r11d
  40b384:	add    cl,cl
  40b386:	mul    r9d
  40b389:	sub    r8b,cl
  40b38c:	mov    r10d,edx
  40b38f:	shr    r10d,0x3
  40b393:	add    r8b,bpl
  40b396:	mov    eax,r11d
  40b399:	mov    BYTE PTR [rbx+0x3],r8b
  40b39d:	mov    cl,r10b
  40b3a0:	mul    r10d
  40b3a3:	shr    edx,0x3
  40b3a6:	shl    cl,0x2
  40b3a9:	mov    al,dl
  40b3ab:	lea    r8d,[rcx+r10*1]
  40b3af:	shl    al,0x2
  40b3b2:	add    r8b,r8b
  40b3b5:	lea    ecx,[rax+rdx*1]
  40b3b8:	add    dl,bpl
  40b3bb:	sub    r9b,r8b
  40b3be:	mov    BYTE PTR [rbx],dl
  40b3c0:	add    cl,cl
  40b3c2:	add    r9b,bpl
  40b3c5:	sub    r10b,cl
  40b3c8:	movzx  ecx,WORD PTR [rsp+0x22]
  40b3cd:	mov    BYTE PTR [rbx+0x2],r9b
  40b3d1:	mov    r9d,0x66666667
  40b3d7:	add    r10b,bpl
  40b3da:	add    rbx,0xa
  40b3de:	mov    BYTE PTR [rbx-0x9],r10b
  40b3e2:	mov    BYTE PTR [rbx-0x6],0x2d
  40b3e6:	mov    eax,r9d
  40b3e9:	imul   ecx
  40b3eb:	sar    edx,0x2
  40b3ee:	mov    eax,edx
  40b3f0:	shr    eax,0x1f
  40b3f3:	add    edx,eax
  40b3f5:	lea    eax,[rdx+rdx*4]
  40b3f8:	add    dl,bpl
  40b3fb:	add    eax,eax
  40b3fd:	mov    BYTE PTR [rbx-0x5],dl
  40b400:	sub    ecx,eax
  40b402:	mov    eax,r9d
  40b405:	add    cl,bpl
  40b408:	mov    BYTE PTR [rbx-0x4],cl
  40b40b:	movzx  ecx,WORD PTR [rsp+0x26]
  40b410:	mov    BYTE PTR [rbx-0x3],0x2d
  40b414:	imul   ecx
  40b416:	sar    edx,0x2
  40b419:	mov    eax,edx
  40b41b:	shr    eax,0x1f
  40b41e:	add    edx,eax
  40b420:	lea    eax,[rdx+rdx*4]
  40b423:	add    dl,bpl
  40b426:	add    eax,eax
  40b428:	mov    BYTE PTR [rbx-0x2],dl
  40b42b:	sub    ecx,eax
  40b42d:	add    cl,bpl
  40b430:	test   sil,sil
  40b433:	mov    BYTE PTR [rbx-0x1],cl
  40b436:	je     0x40b4cc
  40b43c:	movzx  ecx,WORD PTR [rsp+0x28]
  40b441:	mov    BYTE PTR [rbx],0x20
  40b444:	mov    eax,r9d
  40b447:	add    rbx,0x6
  40b44b:	imul   ecx
  40b44d:	sar    edx,0x2
  40b450:	mov    eax,edx
  40b452:	shr    eax,0x1f
  40b455:	add    edx,eax
  40b457:	lea    eax,[rdx+rdx*4]
  40b45a:	add    dl,bpl
  40b45d:	add    eax,eax
  40b45f:	mov    BYTE PTR [rbx-0x5],dl
  40b462:	sub    ecx,eax
  40b464:	mov    eax,r9d
  40b467:	add    cl,bpl
  40b46a:	mov    BYTE PTR [rbx-0x4],cl
  40b46d:	movzx  ecx,WORD PTR [rsp+0x2a]
  40b472:	mov    BYTE PTR [rbx-0x3],0x3a
  40b476:	imul   ecx
  40b478:	sar    edx,0x2
  40b47b:	mov    eax,edx
  40b47d:	shr    eax,0x1f
  40b480:	add    edx,eax
  40b482:	lea    eax,[rdx+rdx*4]
  40b485:	add    dl,bpl
  40b488:	add    eax,eax
  40b48a:	mov    BYTE PTR [rbx-0x2],dl
  40b48d:	sub    ecx,eax
  40b48f:	add    cl,bpl
  40b492:	test   dil,dil
  40b495:	mov    BYTE PTR [rbx-0x1],cl
  40b498:	je     0x40b4cc
  40b49a:	movzx  r8d,WORD PTR [rsp+0x2c]
  40b4a0:	mov    eax,r9d
  40b4a3:	mov    BYTE PTR [rbx],0x3a
  40b4a6:	imul   r8d
  40b4a9:	sar    edx,0x2
  40b4ac:	mov    eax,edx
  40b4ae:	shr    eax,0x1f
  40b4b1:	add    edx,eax
  40b4b3:	lea    ecx,[rdx+rdx*4]
  40b4b6:	add    dl,bpl
  40b4b9:	add    ecx,ecx
  40b4bb:	mov    BYTE PTR [rbx+0x1],dl
  40b4be:	sub    r8d,ecx
  40b4c1:	add    r8b,bpl
  40b4c4:	add    rbx,0x3
  40b4c8:	mov    BYTE PTR [rbx-0x1],r8b
  40b4cc:	mov    al,0x1
  40b4ce:	mov    BYTE PTR [rbx],0x0
  40b4d1:	add    rsp,0x38
  40b4d5:	pop    rdi
  40b4d6:	pop    rsi
  40b4d7:	pop    rbp
  40b4d8:	pop    rbx
  40b4d9:	ret    
  40b4da:	int3   
  40b4db:	int3   
  40b4dc:	sub    rsp,0x28
  40b4e0:	xor    r9d,r9d
  40b4e3:	mov    BYTE PTR [rdx],r9b
  40b4e6:	movzx  r8d,WORD PTR [rcx]
  40b4ea:	cmp    r8d,0x11
  40b4ee:	jg     0x40b546
  40b4f0:	je     0x40b540
  40b4f2:	cmp    r8d,r9d
  40b4f5:	je     0x40b5a1
  40b4fb:	sub    r8d,0x2
  40b4ff:	je     0x40b534
  40b501:	dec    r8d
  40b504:	je     0x40b52e
  40b506:	sub    r8d,0x5
  40b50a:	je     0x40b525
  40b50c:	cmp    r8d,0x3
  40b510:	jne    0x40b561
  40b512:	movzx  eax,WORD PTR [rcx+0x8]
  40b516:	neg    ax
  40b519:	sbb    cl,cl
  40b51b:	and    cl,0xfe
  40b51e:	add    cl,0x2d
  40b521:	mov    BYTE PTR [rdx],cl
  40b523:	jmp    0x40b528
  40b525:	mov    BYTE PTR [rdx],0x3f
  40b528:	mov    BYTE PTR [rdx+0x1],r9b
  40b52c:	jmp    0x40b5a1
  40b52e:	movsxd rcx,DWORD PTR [rcx+0x8]
  40b532:	jmp    0x40b539
  40b534:	movsx  rcx,WORD PTR [rcx+0x8]
  40b539:	call   0x401b8c
  40b53e:	jmp    0x40b5a1
  40b540:	movzx  ecx,BYTE PTR [rcx+0x8]
  40b544:	jmp    0x40b59c
  40b546:	sub    r8d,0x12
  40b54a:	je     0x40b598
  40b54c:	dec    r8d
  40b54f:	je     0x40b593
  40b551:	dec    r8d
  40b554:	je     0x40b58d
  40b556:	dec    r8d
  40b559:	je     0x40b587
  40b55b:	cmp    r8d,0x2b
  40b55f:	je     0x40b576
  40b561:	mov    BYTE PTR [rdx],0x3f
  40b564:	mov    BYTE PTR [rdx+0x1],0x3a
  40b568:	movzx  ecx,WORD PTR [rcx]
  40b56b:	add    rdx,0x2
  40b56f:	call   0x4019a4
  40b574:	jmp    0x40b5a1
  40b576:	mov    r9b,0x1
  40b579:	add    rcx,0x8
  40b57d:	mov    r8b,r9b
  40b580:	call   0x40b310
  40b585:	jmp    0x40b5a1
  40b587:	mov    rcx,QWORD PTR [rcx+0x8]
  40b58b:	jmp    0x40b56f
  40b58d:	mov    rcx,QWORD PTR [rcx+0x8]
  40b591:	jmp    0x40b539
  40b593:	mov    ecx,DWORD PTR [rcx+0x8]
  40b596:	jmp    0x40b59c
  40b598:	movzx  ecx,WORD PTR [rcx+0x8]
  40b59c:	call   0x401930
  40b5a1:	add    rsp,0x28
  40b5a5:	ret    
  40b5a6:	int3   
  40b5a7:	int3   
  40b5a8:	rex.W push rbx
  40b5aa:	sub    rsp,0x20
  40b5ae:	mov    rbx,rcx
  40b5b1:	mov    rcx,QWORD PTR [rcx]
  40b5b4:	xor    eax,eax
  40b5b6:	test   rcx,rcx
  40b5b9:	je     0x40b5c8
  40b5bb:	call   QWORD PTR [rip+0x41a77]        # 0x44d038
  40b5c1:	mov    QWORD PTR [rbx],0x0
  40b5c8:	add    rsp,0x20
  40b5cc:	pop    rbx
  40b5cd:	ret    
  40b5ce:	int3   
  40b5cf:	int3   
  40b5d0:	rex.W push rbx
  40b5d2:	push   rsi
  40b5d3:	push   rdi
  40b5d4:	mov    r11,rsp
  40b5d7:	sub    rsp,0x40
  40b5db:	mov    rax,QWORD PTR [r8]
  40b5de:	mov    DWORD PTR [r8+0x8],0x0
  40b5e6:	mov    rsi,rcx
  40b5e9:	mov    WORD PTR [rax],0x0
  40b5ee:	mov    rcx,QWORD PTR [rcx]
  40b5f1:	lea    rax,[r11+0x30]
  40b5f5:	mov    rbx,r8
  40b5f8:	mov    QWORD PTR [r11-0x18],rax
  40b5fc:	lea    r9,[r11-0x10]
  40b600:	xor    r8d,r8d
  40b603:	mov    QWORD PTR [r11-0x20],0x0
  40b60b:	mov    rdi,rdx
  40b60e:	mov    DWORD PTR [rsp+0x30],0x0
  40b616:	mov    DWORD PTR [rsp+0x70],0x0
  40b61e:	call   QWORD PTR [rip+0x419fc]        # 0x44d020
  40b624:	test   eax,eax
  40b626:	je     0x40b62f
  40b628:	cmp    eax,0xea
  40b62d:	jne    0x40b6a5
  40b62f:	mov    edx,DWORD PTR [rsp+0x70]
  40b633:	cmp    edx,DWORD PTR [rbx+0xc]
  40b636:	mov    DWORD PTR [rsp+0x78],edx
  40b63a:	jbe    0x40b644
  40b63c:	mov    rcx,rbx
  40b63f:	call   0x402ea4
  40b644:	mov    rax,QWORD PTR [rbx]
  40b647:	lea    rcx,[rsp+0x78]
  40b64c:	lea    r9,[rsp+0x34]
  40b651:	mov    QWORD PTR [rsp+0x28],rcx
  40b656:	mov    rcx,QWORD PTR [rsi]
  40b659:	xor    r8d,r8d
  40b65c:	mov    rdx,rdi
  40b65f:	mov    DWORD PTR [rsp+0x34],0x0
  40b667:	mov    QWORD PTR [rsp+0x20],rax
  40b66c:	call   QWORD PTR [rip+0x419ae]        # 0x44d020
  40b672:	mov    ecx,DWORD PTR [rsp+0x70]
  40b676:	mov    rdx,QWORD PTR [rbx]
  40b679:	cmp    ecx,DWORD PTR [rsp+0x78]
  40b67d:	cmova  ecx,DWORD PTR [rsp+0x78]
  40b682:	mov    DWORD PTR [rsp+0x70],ecx
  40b686:	shr    rcx,1
  40b689:	mov    WORD PTR [rdx+rcx*2],0x0
  40b68f:	xor    ecx,ecx
  40b691:	cmp    WORD PTR [rdx],cx
  40b694:	je     0x40b6a2
  40b696:	add    rdx,0x2
  40b69a:	inc    ecx
  40b69c:	cmp    WORD PTR [rdx],0x0
  40b6a0:	jne    0x40b696
  40b6a2:	mov    DWORD PTR [rbx+0x8],ecx
  40b6a5:	add    rsp,0x40
  40b6a9:	pop    rdi
  40b6aa:	pop    rsi
  40b6ab:	pop    rbx
  40b6ac:	ret    
  40b6ad:	int3   
  40b6ae:	int3   
  40b6af:	int3   
  40b6b0:	jmp    0x40b5a8
  40b6b5:	int3   
  40b6b6:	int3   
  40b6b7:	int3   
  40b6b8:	rex.W push rbx
  40b6ba:	sub    rsp,0x40
  40b6be:	mov    rbx,rcx
  40b6c1:	mov    rax,r8
  40b6c4:	mov    r10,rdx
  40b6c7:	lea    rcx,[rsp+0x30]
  40b6cc:	xor    r8d,r8d
  40b6cf:	mov    rdx,rax
  40b6d2:	mov    QWORD PTR [rsp+0x20],rcx
  40b6d7:	mov    rcx,r10
  40b6da:	mov    QWORD PTR [rsp+0x30],0x0
  40b6e3:	call   QWORD PTR [rip+0x4192f]        # 0x44d018
  40b6e9:	test   eax,eax
  40b6eb:	mov    r11d,eax
  40b6ee:	jne    0x40b703
  40b6f0:	mov    rcx,rbx
  40b6f3:	call   0x40b5a8
  40b6f8:	mov    r11d,eax
  40b6fb:	mov    rax,QWORD PTR [rsp+0x30]
  40b700:	mov    QWORD PTR [rbx],rax
  40b703:	mov    eax,r11d
  40b706:	add    rsp,0x40
  40b70a:	pop    rbx
  40b70b:	ret    
  40b70c:	sub    rsp,0x58
  40b710:	lea    rcx,[rsp+0x20]
  40b715:	call   QWORD PTR [rip+0x419fd]        # 0x44d118
  40b71b:	mov    eax,DWORD PTR [rsp+0x40]
  40b71f:	add    rsp,0x58
  40b723:	ret    
  40b724:	rex.W push rbx
  40b726:	sub    rsp,0x60
  40b72a:	movabs rax,0x100000000
  40b734:	mov    rbx,rcx
  40b737:	mov    DWORD PTR [rsp+0x20],0x40
  40b73f:	mov    QWORD PTR [rcx],rax
  40b742:	lea    rcx,[rsp+0x20]
  40b747:	call   QWORD PTR [rip+0x419c3]        # 0x44d110
  40b74d:	test   eax,eax
  40b74f:	je     0x40b766
  40b751:	mov    rax,QWORD PTR [rsp+0x28]
  40b756:	cmp    QWORD PTR [rsp+0x48],rax
  40b75b:	cmovb  rax,QWORD PTR [rsp+0x48]
  40b761:	mov    QWORD PTR [rbx],rax
  40b764:	mov    al,0x1
  40b766:	add    rsp,0x60
  40b76a:	pop    rbx
  40b76b:	ret    
  40b76c:	rex.W push rbx
  40b76e:	push   rdi
  40b76f:	sub    rsp,0x28
  40b773:	mov    rbx,rdx
  40b776:	lea    r8,[rsp+0x58]
  40b77b:	lea    rdx,[rsp+0x50]
  40b780:	mov    rdi,rcx
  40b783:	call   QWORD PTR [rip+0x4197f]        # 0x44d108
  40b789:	test   eax,eax
  40b78b:	jne    0x40b7a6
  40b78d:	cmp    DWORD PTR [rdi+0x4],0x1c00000
  40b794:	sbb    eax,eax
  40b796:	and    eax,0x814083
  40b79b:	add    eax,0xff9fbf7d
  40b7a0:	mov    DWORD PTR [rbx],eax
  40b7a2:	xor    al,al
  40b7a4:	jmp    0x40b7b9
  40b7a6:	movzx  eax,WORD PTR [rsp+0x58]
  40b7ab:	movzx  ecx,WORD PTR [rsp+0x50]
  40b7b0:	shl    ecx,0x10
  40b7b3:	add    ecx,eax
  40b7b5:	mov    al,0x1
  40b7b7:	mov    DWORD PTR [rbx],ecx
  40b7b9:	add    rsp,0x28
  40b7bd:	pop    rdi
  40b7be:	pop    rbx
  40b7bf:	ret    
  40b7c0:	mov    eax,DWORD PTR [rcx]
  40b7c2:	mov    r8d,DWORD PTR [rcx+0x4]
  40b7c6:	mov    r9,rdx
  40b7c9:	shl    r8,0x20
  40b7cd:	add    r8,rax
  40b7d0:	movabs rax,0xd6bf94d5e57a42bd
  40b7da:	mul    r8
  40b7dd:	movabs rax,0x2b6109100
  40b7e7:	shr    rdx,0x17
  40b7eb:	cmp    rdx,rax
  40b7ee:	jae    0x40b7f9
  40b7f0:	mov    DWORD PTR [r9],0x0
  40b7f7:	jmp    0x40b809
  40b7f9:	sub    rdx,rax
  40b7fc:	mov    eax,0xffffffff
  40b801:	cmp    rdx,rax
  40b804:	jbe    0x40b80c
  40b806:	mov    DWORD PTR [r9],eax
  40b809:	xor    al,al
  40b80b:	ret    
  40b80c:	mov    DWORD PTR [r9],edx
  40b80f:	mov    al,0x1
  40b811:	ret    
  40b812:	int3   
  40b813:	int3   
  40b814:	rex.W jmp QWORD PTR [rip+0x418e5]        # 0x44d100
  40b81b:	int3   
  40b81c:	xor    eax,eax
  40b81e:	mov    WORD PTR [rcx],ax
  40b821:	mov    WORD PTR [rcx+0x2],ax
  40b825:	mov    QWORD PTR [rcx+0x8],rax
  40b829:	mov    rax,rcx
  40b82c:	ret    
  40b82d:	int3   
  40b82e:	int3   
  40b82f:	int3   
  40b830:	jmp    0x40b028
  40b835:	int3   
  40b836:	int3   
  40b837:	int3   
  40b838:	rex.W push rbx
  40b83a:	push   rdi
  40b83b:	sub    rsp,0x48
  40b83f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40b848:	mov    rbx,r9
  40b84b:	mov    WORD PTR [rsp+0x28],0x0
  40b852:	mov    WORD PTR [rsp+0x2a],0x0
  40b859:	mov    QWORD PTR [rsp+0x30],0x0
  40b862:	mov    rax,QWORD PTR [rcx]
  40b865:	lea    r9,[rsp+0x28]
  40b86a:	call   QWORD PTR [rax+0x20]
  40b86d:	mov    edi,eax
  40b86f:	test   eax,eax
  40b871:	je     0x40b881
  40b873:	lea    rcx,[rsp+0x28]
  40b878:	call   0x40b028
  40b87d:	mov    eax,edi
  40b87f:	jmp    0x40b8bc
  40b881:	movzx  eax,WORD PTR [rsp+0x28]
  40b886:	test   ax,ax
  40b889:	jne    0x40b893
  40b88b:	mov    DWORD PTR [rbx],0x1
  40b891:	jmp    0x40b89f
  40b893:	cmp    ax,0x13
  40b897:	jne    0x40b8ad
  40b899:	mov    eax,DWORD PTR [rsp+0x30]
  40b89d:	mov    DWORD PTR [rbx],eax
  40b89f:	lea    rcx,[rsp+0x28]
  40b8a4:	call   0x40b028
  40b8a9:	xor    eax,eax
  40b8ab:	jmp    0x40b8bc
  40b8ad:	lea    rcx,[rsp+0x28]
  40b8b2:	call   0x40b028
  40b8b7:	mov    eax,0x80070057
  40b8bc:	add    rsp,0x48
  40b8c0:	pop    rdi
  40b8c1:	pop    rbx
  40b8c2:	ret    
  40b8c3:	int3   
  40b8c4:	int3   
  40b8c5:	int3   
  40b8c6:	int3   
  40b8c7:	int3   
  40b8c8:	rex.W push rbp
  40b8ca:	sub    rsp,0x20
  40b8ce:	mov    rbp,rdx
  40b8d1:	lea    rcx,[rbp+0x28]
  40b8d5:	call   0x40b830
  40b8da:	add    rsp,0x20
  40b8de:	pop    rbp
  40b8df:	ret    
  40b8e0:	rex.W push rbx
  40b8e2:	push   rdi
  40b8e3:	sub    rsp,0x48
  40b8e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40b8f0:	mov    rbx,r9
  40b8f3:	mov    WORD PTR [rsp+0x28],0x0
  40b8fa:	mov    WORD PTR [rsp+0x2a],0x0
  40b901:	mov    QWORD PTR [rsp+0x30],0x0
  40b90a:	mov    rax,QWORD PTR [rcx]
  40b90d:	lea    r9,[rsp+0x28]
  40b912:	call   QWORD PTR [rax+0x20]
  40b915:	mov    edi,eax
  40b917:	test   eax,eax
  40b919:	je     0x40b929
  40b91b:	lea    rcx,[rsp+0x28]
  40b920:	call   0x40b028
  40b925:	mov    eax,edi
  40b927:	jmp    0x40b966
  40b929:	movzx  eax,WORD PTR [rsp+0x28]
  40b92e:	test   ax,ax
  40b931:	jne    0x40b938
  40b933:	mov    BYTE PTR [rbx],0x1
  40b936:	jmp    0x40b949
  40b938:	cmp    ax,0xb
  40b93c:	jne    0x40b957
  40b93e:	cmp    WORD PTR [rsp+0x30],0x0
  40b944:	setne  al
  40b947:	mov    BYTE PTR [rbx],al
  40b949:	lea    rcx,[rsp+0x28]
  40b94e:	call   0x40b028
  40b953:	xor    eax,eax
  40b955:	jmp    0x40b966
  40b957:	lea    rcx,[rsp+0x28]
  40b95c:	call   0x40b028
  40b961:	mov    eax,0x80070057
  40b966:	add    rsp,0x48
  40b96a:	pop    rdi
  40b96b:	pop    rbx
  40b96c:	ret    
  40b96d:	int3   
  40b96e:	int3   
  40b96f:	int3   
  40b970:	rex.W push rbp
  40b972:	sub    rsp,0x20
  40b976:	mov    rbp,rdx
  40b979:	lea    rcx,[rbp+0x28]
  40b97d:	call   0x40b830
  40b982:	add    rsp,0x20
  40b986:	pop    rbp
  40b987:	ret    
  40b988:	mov    rcx,QWORD PTR [rcx+0x8]
  40b98c:	jmp    0x40215c
  40b991:	int3   
  40b992:	int3   
  40b993:	int3   
  40b994:	mov    QWORD PTR [rsp+0x8],rcx
  40b999:	push   rbx
  40b99a:	sub    rsp,0x30
  40b99e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40b9a7:	mov    rbx,rcx
  40b9aa:	mov    rcx,QWORD PTR [rcx+0x8]
  40b9ae:	test   rcx,rcx
  40b9b1:	je     0x40b9ba
  40b9b3:	mov    rax,QWORD PTR [rcx]
  40b9b6:	call   QWORD PTR [rax+0x10]
  40b9b9:	nop
  40b9ba:	mov    rcx,QWORD PTR [rbx]
  40b9bd:	test   rcx,rcx
  40b9c0:	je     0x40b9c8
  40b9c2:	mov    rax,QWORD PTR [rcx]
  40b9c5:	call   QWORD PTR [rax+0x10]
  40b9c8:	add    rsp,0x30
  40b9cc:	pop    rbx
  40b9cd:	ret    
  40b9ce:	int3   
  40b9cf:	int3   
  40b9d0:	int3   
  40b9d1:	int3   
  40b9d2:	int3   
  40b9d3:	int3   
  40b9d4:	rex.W push rbp
  40b9d6:	sub    rsp,0x20
  40b9da:	mov    rbp,rdx
  40b9dd:	mov    rcx,QWORD PTR [rbp+0x40]
  40b9e1:	call   0x4176b4
  40b9e6:	add    rsp,0x20
  40b9ea:	pop    rbp
  40b9eb:	ret    
  40b9ec:	rex.W push rbx
  40b9ee:	push   rbp
  40b9ef:	push   rsi
  40b9f0:	push   rdi
  40b9f1:	push   r12
  40b9f3:	push   r13
  40b9f5:	push   r14
  40b9f7:	sub    rsp,0x20
  40b9fb:	xor    edi,edi
  40b9fd:	mov    r12,r9
  40ba00:	mov    r13,r8
  40ba03:	cmp    DWORD PTR [rip+0x5d297],edi        # 0x468ca0
  40ba09:	mov    r14,rdx
  40ba0c:	mov    rbp,rcx
  40ba0f:	jbe    0x40ba39
  40ba11:	lea    rsi,[rip+0x5d088]        # 0x468aa0
  40ba18:	mov    rbx,QWORD PTR [rsi]
  40ba1b:	mov    rcx,QWORD PTR [r14]
  40ba1e:	mov    rdx,QWORD PTR [rbx+0x18]
  40ba22:	call   0x402820
  40ba27:	test   al,al
  40ba29:	jne    0x40ba7b
  40ba2b:	inc    edi
  40ba2d:	add    rsi,0x8
  40ba31:	cmp    edi,DWORD PTR [rip+0x5d269]        # 0x468ca0
  40ba37:	jb     0x40ba18
  40ba39:	test   rbp,rbp
  40ba3c:	je     0x40ba6a
  40ba3e:	xor    ebx,ebx
  40ba40:	cmp    DWORD PTR [rbp+0x18],ebx
  40ba43:	jbe    0x40ba6a
  40ba45:	xor    esi,esi
  40ba47:	mov    rax,QWORD PTR [rbp+0x10]
  40ba4b:	mov    rcx,QWORD PTR [r14]
  40ba4e:	mov    rdi,QWORD PTR [rsi+rax*1]
  40ba52:	mov    rdx,QWORD PTR [rdi+0x8]
  40ba56:	call   0x402820
  40ba5b:	test   al,al
  40ba5d:	jne    0x40ba8c
  40ba5f:	inc    ebx
  40ba61:	add    rsi,0x8
  40ba65:	cmp    ebx,DWORD PTR [rbp+0x18]
  40ba68:	jb     0x40ba47
  40ba6a:	xor    al,al
  40ba6c:	add    rsp,0x20
  40ba70:	pop    r14
  40ba72:	pop    r13
  40ba74:	pop    r12
  40ba76:	pop    rdi
  40ba77:	pop    rsi
  40ba78:	pop    rbp
  40ba79:	pop    rbx
  40ba7a:	ret    
  40ba7b:	mov    rcx,QWORD PTR [rbx+0x10]
  40ba7f:	mov    QWORD PTR [r13+0x0],rcx
  40ba83:	mov    ecx,DWORD PTR [rbx+0x20]
  40ba86:	mov    DWORD PTR [r12],ecx
  40ba8a:	jmp    0x40ba9a
  40ba8c:	mov    rax,QWORD PTR [rdi]
  40ba8f:	mov    QWORD PTR [r13+0x0],rax
  40ba93:	mov    eax,DWORD PTR [rdi+0x18]
  40ba96:	mov    DWORD PTR [r12],eax
  40ba9a:	mov    al,0x1
  40ba9c:	jmp    0x40ba6c
  40ba9e:	int3   
  40ba9f:	int3   
  40baa0:	rex.W push rbx
  40baa2:	push   rbp
  40baa3:	push   rsi
  40baa4:	push   rdi
  40baa5:	push   r12
  40baa7:	push   r13
  40baa9:	sub    rsp,0x28
  40baad:	xor    ebx,ebx
  40baaf:	mov    rbp,r8
  40bab2:	mov    r13,rdx
  40bab5:	cmp    DWORD PTR [rip+0x5d1e9],ebx        # 0x468ca4
  40babb:	mov    rsi,rcx
  40babe:	jbe    0x40baea
  40bac0:	lea    rdi,[rip+0x5cf59]        # 0x468a20
  40bac7:	mov    r12,QWORD PTR [rdi]
  40baca:	mov    rcx,QWORD PTR [r13+0x0]
  40bace:	mov    rdx,QWORD PTR [r12+0x10]
  40bad3:	call   0x402820
  40bad8:	test   al,al
  40bada:	jne    0x40bb2c
  40badc:	inc    ebx
  40bade:	add    rdi,0x8
  40bae2:	cmp    ebx,DWORD PTR [rip+0x5d1bc]        # 0x468ca4
  40bae8:	jb     0x40bac7
  40baea:	test   rsi,rsi
  40baed:	je     0x40bb1d
  40baef:	xor    ebx,ebx
  40baf1:	cmp    DWORD PTR [rsi+0x28],ebx
  40baf4:	jbe    0x40bb1d
  40baf6:	xor    edi,edi
  40baf8:	mov    rax,QWORD PTR [rsi+0x20]
  40bafc:	mov    rcx,QWORD PTR [r13+0x0]
  40bb00:	mov    r12,QWORD PTR [rdi+rax*1]
  40bb04:	mov    rdx,QWORD PTR [r12+0x8]
  40bb09:	call   0x402820
  40bb0e:	test   al,al
  40bb10:	jne    0x40bb37
  40bb12:	inc    ebx
  40bb14:	add    rdi,0x8
  40bb18:	cmp    ebx,DWORD PTR [rsi+0x28]
  40bb1b:	jb     0x40baf8
  40bb1d:	xor    al,al
  40bb1f:	add    rsp,0x28
  40bb23:	pop    r13
  40bb25:	pop    r12
  40bb27:	pop    rdi
  40bb28:	pop    rsi
  40bb29:	pop    rbp
  40bb2a:	pop    rbx
  40bb2b:	ret    
  40bb2c:	mov    rcx,QWORD PTR [r12+0x8]
  40bb31:	mov    QWORD PTR [rbp+0x0],rcx
  40bb35:	jmp    0x40bb3f
  40bb37:	mov    rax,QWORD PTR [r12]
  40bb3b:	mov    QWORD PTR [rbp+0x0],rax
  40bb3f:	mov    al,0x1
  40bb41:	jmp    0x40bb1f
  40bb43:	int3   
  40bb44:	rex.W push rbx
  40bb46:	push   rbp
  40bb47:	push   rsi
  40bb48:	push   rdi
  40bb49:	push   r12
  40bb4b:	sub    rsp,0x20
  40bb4f:	mov    rdi,QWORD PTR [rsp+0x70]
  40bb54:	mov    rbp,r9
  40bb57:	mov    r12,rcx
  40bb5a:	mov    BYTE PTR [rdi+0x10],0x0
  40bb5e:	mov    BYTE PTR [rdi+0x11],0x0
  40bb62:	mov    DWORD PTR [rdi+0x14],0x1
  40bb69:	mov    r9d,DWORD PTR [rip+0x5d130]        # 0x468ca0
  40bb70:	xor    ecx,ecx
  40bb72:	test   r9d,r9d
  40bb75:	je     0x40bbb0
  40bb77:	lea    rax,[rip+0x5cf22]        # 0x468aa0
  40bb7e:	mov    rsi,QWORD PTR [rax]
  40bb81:	cmp    QWORD PTR [rsi+0x10],rdx
  40bb85:	jne    0x40bba5
  40bb87:	test   r8b,r8b
  40bb8a:	je     0x40bb9b
  40bb8c:	cmp    QWORD PTR [rsi+0x8],0x0
  40bb91:	je     0x40bba5
  40bb93:	call   QWORD PTR [rsi+0x8]
  40bb96:	jmp    0x40bc75
  40bb9b:	cmp    QWORD PTR [rsi],0x0
  40bb9f:	jne    0x40bc73
  40bba5:	inc    ecx
  40bba7:	add    rax,0x8
  40bbab:	cmp    ecx,r9d
  40bbae:	jb     0x40bb7e
  40bbb0:	test   r12,r12
  40bbb3:	je     0x40bc66
  40bbb9:	xor    ebx,ebx
  40bbbb:	mov    BYTE PTR [rdi+0x10],0x1
  40bbbf:	cmp    DWORD PTR [r12+0x18],ebx
  40bbc4:	jbe    0x40bc66
  40bbca:	mov    rcx,QWORD PTR [r12+0x10]
  40bbcf:	mov    rax,QWORD PTR [rcx]
  40bbd2:	cmp    QWORD PTR [rax],rdx
  40bbd5:	jne    0x40bcc8
  40bbdb:	test   r8b,r8b
  40bbde:	je     0x40bcc2
  40bbe4:	cmp    BYTE PTR [rax+0x1c],0x0
  40bbe8:	je     0x40bcc8
  40bbee:	mov    ecx,DWORD PTR [rax+0x18]
  40bbf1:	mov    edx,ebx
  40bbf3:	cmp    ecx,0x1
  40bbf6:	jne    0x40bcdb
  40bbfc:	mov    rcx,QWORD PTR [r12]
  40bc00:	lea    r8,[rip+0x48191]        # 0x453d98
  40bc07:	mov    r9,rdi
  40bc0a:	mov    rax,QWORD PTR [rcx]
  40bc0d:	call   QWORD PTR [rax+0x30]
  40bc10:	test   eax,eax
  40bc12:	je     0x40bc22
  40bc14:	cmp    eax,0x80004002
  40bc19:	je     0x40bc22
  40bc1b:	cmp    eax,0x80040111
  40bc20:	jne    0x40bc68
  40bc22:	cmp    QWORD PTR [rdi],0x0
  40bc26:	jne    0x40bc68
  40bc28:	mov    r9,rbp
  40bc2b:	lea    r8,[rip+0x480e6]        # 0x453d18
  40bc32:	mov    edx,ebx
  40bc34:	jmp    0x40bce9
  40bc39:	cmp    DWORD PTR [rsi+0x20],0x1
  40bc3d:	je     0x40bca1
  40bc3f:	test   rax,rax
  40bc42:	je     0x40bc4d
  40bc44:	mov    rax,QWORD PTR [rax]
  40bc47:	mov    rcx,rbx
  40bc4a:	call   QWORD PTR [rax+0x8]
  40bc4d:	mov    rcx,QWORD PTR [rdi+0x8]
  40bc51:	test   rcx,rcx
  40bc54:	je     0x40bc5c
  40bc56:	mov    rax,QWORD PTR [rcx]
  40bc59:	call   QWORD PTR [rax+0x10]
  40bc5c:	mov    QWORD PTR [rdi+0x8],rbx
  40bc60:	mov    eax,DWORD PTR [rsi+0x20]
  40bc63:	mov    DWORD PTR [rdi+0x14],eax
  40bc66:	xor    eax,eax
  40bc68:	add    rsp,0x20
  40bc6c:	pop    r12
  40bc6e:	pop    rdi
  40bc6f:	pop    rsi
  40bc70:	pop    rbp
  40bc71:	pop    rbx
  40bc72:	ret    
  40bc73:	call   QWORD PTR [rsi]
  40bc75:	cmp    BYTE PTR [rsi+0x24],0x0
  40bc79:	mov    rbx,rax
  40bc7c:	je     0x40bc39
  40bc7e:	test   rax,rax
  40bc81:	je     0x40bc8c
  40bc83:	mov    rdx,QWORD PTR [rax]
  40bc86:	mov    rcx,rax
  40bc89:	call   QWORD PTR [rdx+0x8]
  40bc8c:	mov    rcx,QWORD PTR [rbp+0x0]
  40bc90:	test   rcx,rcx
  40bc93:	je     0x40bc9b
  40bc95:	mov    rax,QWORD PTR [rcx]
  40bc98:	call   QWORD PTR [rax+0x10]
  40bc9b:	mov    QWORD PTR [rbp+0x0],rbx
  40bc9f:	jmp    0x40bc66
  40bca1:	test   rax,rax
  40bca4:	je     0x40bcaf
  40bca6:	mov    rax,QWORD PTR [rax]
  40bca9:	mov    rcx,rbx
  40bcac:	call   QWORD PTR [rax+0x8]
  40bcaf:	mov    rcx,QWORD PTR [rdi]
  40bcb2:	test   rcx,rcx
  40bcb5:	je     0x40bcbd
  40bcb7:	mov    rax,QWORD PTR [rcx]
  40bcba:	call   QWORD PTR [rax+0x10]
  40bcbd:	mov    QWORD PTR [rdi],rbx
  40bcc0:	jmp    0x40bc66
  40bcc2:	cmp    BYTE PTR [rax+0x1d],0x0
  40bcc6:	jne    0x40bcf8
  40bcc8:	inc    ebx
  40bcca:	add    rcx,0x8
  40bcce:	cmp    ebx,DWORD PTR [r12+0x18]
  40bcd3:	jb     0x40bbcf
  40bcd9:	jmp    0x40bc66
  40bcdb:	mov    DWORD PTR [rdi+0x14],ecx
  40bcde:	lea    r9,[rdi+0x8]
  40bce2:	lea    r8,[rip+0x4809f]        # 0x453d88
  40bce9:	mov    rcx,QWORD PTR [r12]
  40bced:	mov    rax,QWORD PTR [rcx]
  40bcf0:	call   QWORD PTR [rax+0x30]
  40bcf3:	jmp    0x40bc68
  40bcf8:	mov    ecx,DWORD PTR [rax+0x18]
  40bcfb:	mov    edx,ebx
  40bcfd:	cmp    ecx,0x1
  40bd00:	jne    0x40bd44
  40bd02:	mov    rcx,QWORD PTR [r12]
  40bd06:	lea    r8,[rip+0x4808b]        # 0x453d98
  40bd0d:	mov    r9,rdi
  40bd10:	mov    rax,QWORD PTR [rcx]
  40bd13:	call   QWORD PTR [rax+0x28]
  40bd16:	test   eax,eax
  40bd18:	je     0x40bd2c
  40bd1a:	cmp    eax,0x80004002
  40bd1f:	je     0x40bd2c
  40bd21:	cmp    eax,0x80040111
  40bd26:	jne    0x40bc68
  40bd2c:	cmp    QWORD PTR [rdi],0x0
  40bd30:	jne    0x40bc68
  40bd36:	mov    r9,rbp
  40bd39:	lea    r8,[rip+0x47fd8]        # 0x453d18
  40bd40:	mov    edx,ebx
  40bd42:	jmp    0x40bd52
  40bd44:	mov    DWORD PTR [rdi+0x14],ecx
  40bd47:	lea    r9,[rdi+0x8]
  40bd4b:	lea    r8,[rip+0x48036]        # 0x453d88
  40bd52:	mov    rcx,QWORD PTR [r12]
  40bd56:	mov    rax,QWORD PTR [rcx]
  40bd59:	call   QWORD PTR [rax+0x28]
  40bd5c:	jmp    0x40bc68
  40bd61:	int3   
  40bd62:	int3   
  40bd63:	int3   
  40bd64:	rex.W push rbx
  40bd66:	push   rbp
  40bd67:	push   rsi
  40bd68:	push   rdi
  40bd69:	push   r12
  40bd6b:	push   r13
  40bd6d:	push   r14
  40bd6f:	sub    rsp,0x20
  40bd73:	mov    rax,QWORD PTR [r8]
  40bd76:	xor    ebx,ebx
  40bd78:	mov    rbp,rcx
  40bd7b:	mov    DWORD PTR [r8+0x8],ebx
  40bd7f:	mov    BYTE PTR [rax],bl
  40bd81:	mov    ecx,DWORD PTR [rip+0x5cf1d]        # 0x468ca4
  40bd87:	cmp    ecx,ebx
  40bd89:	mov    r12,r9
  40bd8c:	mov    r14,r8
  40bd8f:	mov    r13,rdx
  40bd92:	mov    r10d,ebx
  40bd95:	jbe    0x40bde9
  40bd97:	lea    rax,[rip+0x5cc82]        # 0x468a20
  40bd9e:	mov    rsi,QWORD PTR [rax]
  40bda1:	cmp    QWORD PTR [rsi+0x8],rdx
  40bda5:	je     0x40bdb5
  40bda7:	inc    r10d
  40bdaa:	add    rax,0x8
  40bdae:	cmp    r10d,ecx
  40bdb1:	jb     0x40bd9e
  40bdb3:	jmp    0x40bde9
  40bdb5:	call   QWORD PTR [rsi]
  40bdb7:	cmp    rax,rbx
  40bdba:	mov    rdi,rax
  40bdbd:	je     0x40bdc9
  40bdbf:	mov    r8,QWORD PTR [rax]
  40bdc2:	mov    rcx,rax
  40bdc5:	call   QWORD PTR [r8+0x8]
  40bdc9:	mov    rcx,QWORD PTR [r12]
  40bdcd:	cmp    rcx,rbx
  40bdd0:	je     0x40bdd9
  40bdd2:	mov    r8,QWORD PTR [rcx]
  40bdd5:	call   QWORD PTR [r8+0x10]
  40bdd9:	mov    QWORD PTR [r12],rdi
  40bddd:	mov    rdx,QWORD PTR [rsi+0x10]
  40bde1:	mov    rcx,r14
  40bde4:	call   0x402be4
  40bde9:	cmp    QWORD PTR [r12],rbx
  40bded:	jne    0x40be10
  40bdef:	cmp    rbp,rbx
  40bdf2:	je     0x40be10
  40bdf4:	cmp    DWORD PTR [rbp+0x28],ebx
  40bdf7:	jbe    0x40be10
  40bdf9:	mov    rax,QWORD PTR [rbp+0x20]
  40bdfd:	mov    rdx,QWORD PTR [rax]
  40be00:	cmp    QWORD PTR [rdx],r13
  40be03:	je     0x40be21
  40be05:	inc    ebx
  40be07:	add    rax,0x8
  40be0b:	cmp    ebx,DWORD PTR [rbp+0x28]
  40be0e:	jb     0x40bdfd
  40be10:	xor    eax,eax
  40be12:	add    rsp,0x20
  40be16:	pop    r14
  40be18:	pop    r13
  40be1a:	pop    r12
  40be1c:	pop    rdi
  40be1d:	pop    rsi
  40be1e:	pop    rbp
  40be1f:	pop    rbx
  40be20:	ret    
  40be21:	add    rdx,0x8
  40be25:	mov    rcx,r14
  40be28:	call   0x402c48
  40be2d:	mov    rcx,QWORD PTR [rbp+0x8]
  40be31:	mov    r8,r12
  40be34:	mov    rax,QWORD PTR [rcx]
  40be37:	mov    edx,ebx
  40be39:	call   QWORD PTR [rax+0x28]
  40be3c:	jmp    0x40be12
  40be3e:	int3   
  40be3f:	int3   
  40be40:	rex.W push rbx
  40be42:	push   rsi
  40be43:	push   rdi
  40be44:	sub    rsp,0x30
  40be48:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40be51:	mov    rdi,rdx
  40be54:	mov    rsi,rcx
  40be57:	mov    ecx,0x20
  40be5c:	call   0x402130
  40be61:	mov    rbx,rax
  40be64:	mov    QWORD PTR [rsp+0x60],rax
  40be69:	test   rax,rax
  40be6c:	je     0x40be97
  40be6e:	mov    rax,QWORD PTR [rdi]
  40be71:	mov    QWORD PTR [rbx],rax
  40be74:	lea    rdx,[rdi+0x8]
  40be78:	lea    rcx,[rbx+0x8]
  40be7c:	call   0x402bb0
  40be81:	mov    r11d,DWORD PTR [rdi+0x18]
  40be85:	mov    DWORD PTR [rbx+0x18],r11d
  40be89:	mov    al,BYTE PTR [rdi+0x1c]
  40be8c:	mov    BYTE PTR [rbx+0x1c],al
  40be8f:	mov    al,BYTE PTR [rdi+0x1d]
  40be92:	mov    BYTE PTR [rbx+0x1d],al
  40be95:	jmp    0x40be99
  40be97:	xor    ebx,ebx
  40be99:	mov    rdx,rbx
  40be9c:	mov    rcx,rsi
  40be9f:	add    rsp,0x30
  40bea3:	pop    rdi
  40bea4:	pop    rsi
  40bea5:	pop    rbx
  40bea6:	jmp    0x4010c8
  40beab:	int3   
  40beac:	int3   
  40bead:	int3   
  40beae:	int3   
  40beaf:	int3   
  40beb0:	rex.W push rbp
  40beb2:	sub    rsp,0x20
  40beb6:	mov    rbp,rdx
  40beb9:	mov    rcx,QWORD PTR [rbp+0x60]
  40bebd:	call   0x40215c
  40bec2:	add    rsp,0x20
  40bec6:	pop    rbp
  40bec7:	ret    
  40bec8:	rex.W push rbx
  40beca:	push   rbp
  40becb:	push   rsi
  40becc:	push   rdi
  40becd:	push   r12
  40becf:	push   r13
  40bed1:	push   r14
  40bed3:	push   r15
  40bed5:	sub    rsp,0x88
  40bedc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40bee5:	mov    rdi,rcx
  40bee8:	movsxd rbx,DWORD PTR [rcx+0x18]
  40beec:	mov    rsi,rbx
  40beef:	mov    r15d,0xffffffff
  40bef5:	xor    r14d,r14d
  40bef8:	cmp    ebx,r14d
  40befb:	je     0x40bf2b
  40befd:	shl    rsi,0x3
  40bf01:	add    ebx,r15d
  40bf04:	sub    rsi,0x8
  40bf08:	mov    rax,QWORD PTR [rdi+0x10]
  40bf0c:	mov    rbp,QWORD PTR [rsi+rax*1]
  40bf10:	cmp    rbp,r14
  40bf13:	je     0x40bf26
  40bf15:	mov    rcx,QWORD PTR [rbp+0x8]
  40bf19:	call   0x40215c
  40bf1e:	mov    rcx,rbp
  40bf21:	call   0x40215c
  40bf26:	cmp    ebx,r14d
  40bf29:	jne    0x40bf01
  40bf2b:	mov    DWORD PTR [rdi+0x18],r14d
  40bf2f:	movsxd rbx,DWORD PTR [rdi+0x28]
  40bf33:	mov    rsi,rbx
  40bf36:	cmp    ebx,r14d
  40bf39:	je     0x40bf69
  40bf3b:	shl    rsi,0x3
  40bf3f:	add    ebx,r15d
  40bf42:	sub    rsi,0x8
  40bf46:	mov    rax,QWORD PTR [rdi+0x20]
  40bf4a:	mov    rbp,QWORD PTR [rsi+rax*1]
  40bf4e:	cmp    rbp,r14
  40bf51:	je     0x40bf64
  40bf53:	mov    rcx,QWORD PTR [rbp+0x8]
  40bf57:	call   0x40215c
  40bf5c:	mov    rcx,rbp
  40bf5f:	call   0x40215c
  40bf64:	cmp    ebx,r14d
  40bf67:	jne    0x40bf3f
  40bf69:	mov    DWORD PTR [rdi+0x28],r14d
  40bf6d:	mov    r15d,0x1
  40bf73:	cmp    QWORD PTR [rdi],r14
  40bf76:	je     0x40c21c
  40bf7c:	lea    rcx,[rsp+0x60]
  40bf81:	call   0x402b34
  40bf86:	mov    BYTE PTR [rsp+0x74],r14b
  40bf8b:	mov    BYTE PTR [rsp+0x75],r14b
  40bf90:	lea    rcx,[rsp+0x28]
  40bf95:	call   0x403150
  40bf9a:	nop
  40bf9b:	mov    rcx,QWORD PTR [rdi]
  40bf9e:	mov    rax,QWORD PTR [rcx]
  40bfa1:	lea    rdx,[rsp+0xd8]
  40bfa9:	call   QWORD PTR [rax+0x18]
  40bfac:	mov    ebx,eax
  40bfae:	cmp    eax,r14d
  40bfb1:	je     0x40bfc3
  40bfb3:	mov    rcx,QWORD PTR [rsp+0x28]
  40bfb8:	call   0x40215c
  40bfbd:	nop
  40bfbe:	jmp    0x40c1f6
  40bfc3:	mov    ebx,r14d
  40bfc6:	cmp    DWORD PTR [rsp+0xd8],r14d
  40bfce:	jbe    0x40c207
  40bfd4:	mov    WORD PTR [rsp+0x40],r14w
  40bfda:	mov    WORD PTR [rsp+0x42],r14w
  40bfe0:	mov    QWORD PTR [rsp+0x48],r14
  40bfe5:	mov    rcx,QWORD PTR [rdi]
  40bfe8:	mov    rax,QWORD PTR [rcx]
  40bfeb:	lea    r9,[rsp+0x40]
  40bff0:	xor    r8d,r8d
  40bff3:	mov    edx,ebx
  40bff5:	call   QWORD PTR [rax+0x20]
  40bff8:	mov    esi,eax
  40bffa:	cmp    eax,r14d
  40bffd:	jne    0x40c159
  40c003:	cmp    WORD PTR [rsp+0x40],0x15
  40c009:	je     0x40c01a
  40c00b:	lea    rcx,[rsp+0x40]
  40c010:	call   0x40b028
  40c015:	jmp    0x40c144
  40c01a:	mov    rax,QWORD PTR [rsp+0x48]
  40c01f:	mov    QWORD PTR [rsp+0x58],rax
  40c024:	lea    rcx,[rsp+0x40]
  40c029:	call   0x40b028
  40c02e:	mov    DWORD PTR [rsp+0x68],r14d
  40c033:	mov    rax,QWORD PTR [rsp+0x60]
  40c038:	mov    BYTE PTR [rax],r14b
  40c03b:	mov    rcx,QWORD PTR [rdi]
  40c03e:	mov    rax,QWORD PTR [rcx]
  40c041:	lea    r9,[rsp+0x40]
  40c046:	mov    r8d,r15d
  40c049:	mov    edx,ebx
  40c04b:	call   QWORD PTR [rax+0x20]
  40c04e:	mov    esi,eax
  40c050:	cmp    eax,r14d
  40c053:	jne    0x40c176
  40c059:	movzx  eax,WORD PTR [rsp+0x40]
  40c05e:	cmp    ax,0x8
  40c062:	jne    0x40c075
  40c064:	mov    rdx,QWORD PTR [rsp+0x48]
  40c069:	lea    rcx,[rsp+0x60]
  40c06e:	call   0x402ca0
  40c073:	jmp    0x40c08a
  40c075:	cmp    ax,r14w
  40c079:	je     0x40c08a
  40c07b:	lea    rcx,[rsp+0x40]
  40c080:	call   0x40b028
  40c085:	jmp    0x40c144
  40c08a:	lea    r9,[rsp+0x70]
  40c08f:	mov    r8d,0x4
  40c095:	mov    edx,ebx
  40c097:	mov    rcx,QWORD PTR [rdi]
  40c09a:	call   0x40b838
  40c09f:	mov    esi,eax
  40c0a1:	cmp    eax,r14d
  40c0a4:	jne    0x40c190
  40c0aa:	mov    DWORD PTR [rsp+0xd0],r15d
  40c0b2:	lea    r9,[rsp+0xd0]
  40c0ba:	mov    r8d,0x5
  40c0c0:	mov    edx,ebx
  40c0c2:	mov    rcx,QWORD PTR [rdi]
  40c0c5:	call   0x40b838
  40c0ca:	mov    esi,eax
  40c0cc:	cmp    eax,r14d
  40c0cf:	jne    0x40c1aa
  40c0d5:	cmp    DWORD PTR [rsp+0xd0],r15d
  40c0dd:	je     0x40c0eb
  40c0df:	lea    rcx,[rsp+0x40]
  40c0e4:	call   0x40b028
  40c0e9:	jmp    0x40c144
  40c0eb:	lea    r9,[rsp+0x74]
  40c0f0:	mov    r8d,0x8
  40c0f6:	mov    edx,ebx
  40c0f8:	mov    rcx,QWORD PTR [rdi]
  40c0fb:	call   0x40b8e0
  40c100:	mov    esi,eax
  40c102:	cmp    eax,r14d
  40c105:	jne    0x40c1c4
  40c10b:	lea    r9,[rsp+0x75]
  40c110:	mov    r8d,0x7
  40c116:	mov    edx,ebx
  40c118:	mov    rcx,QWORD PTR [rdi]
  40c11b:	call   0x40b8e0
  40c120:	mov    esi,eax
  40c122:	cmp    eax,r14d
  40c125:	jne    0x40c1de
  40c12b:	lea    rdx,[rsp+0x58]
  40c130:	lea    rcx,[rdi+0x10]
  40c134:	call   0x40be40
  40c139:	nop
  40c13a:	lea    rcx,[rsp+0x40]
  40c13f:	call   0x40b028
  40c144:	add    ebx,r15d
  40c147:	cmp    ebx,DWORD PTR [rsp+0xd8]
  40c14e:	jb     0x40bfd4
  40c154:	jmp    0x40c207
  40c159:	lea    rcx,[rsp+0x40]
  40c15e:	call   0x40b028
  40c163:	nop
  40c164:	mov    rcx,QWORD PTR [rsp+0x28]
  40c169:	call   0x40215c
  40c16e:	nop
  40c16f:	mov    ebx,esi
  40c171:	jmp    0x40c1f6
  40c176:	lea    rcx,[rsp+0x40]
  40c17b:	call   0x40b028
  40c180:	nop
  40c181:	mov    rcx,QWORD PTR [rsp+0x28]
  40c186:	call   0x40215c
  40c18b:	nop
  40c18c:	mov    ebx,esi
  40c18e:	jmp    0x40c1f6
  40c190:	lea    rcx,[rsp+0x40]
  40c195:	call   0x40b028
  40c19a:	nop
  40c19b:	mov    rcx,QWORD PTR [rsp+0x28]
  40c1a0:	call   0x40215c
  40c1a5:	nop
  40c1a6:	mov    ebx,esi
  40c1a8:	jmp    0x40c1f6
  40c1aa:	lea    rcx,[rsp+0x40]
  40c1af:	call   0x40b028
  40c1b4:	nop
  40c1b5:	mov    rcx,QWORD PTR [rsp+0x28]
  40c1ba:	call   0x40215c
  40c1bf:	nop
  40c1c0:	mov    ebx,esi
  40c1c2:	jmp    0x40c1f6
  40c1c4:	lea    rcx,[rsp+0x40]
  40c1c9:	call   0x40b028
  40c1ce:	nop
  40c1cf:	mov    rcx,QWORD PTR [rsp+0x28]
  40c1d4:	call   0x40215c
  40c1d9:	nop
  40c1da:	mov    ebx,esi
  40c1dc:	jmp    0x40c1f6
  40c1de:	lea    rcx,[rsp+0x40]
  40c1e3:	call   0x40b028
  40c1e8:	nop
  40c1e9:	mov    rcx,QWORD PTR [rsp+0x28]
  40c1ee:	call   0x40215c
  40c1f3:	nop
  40c1f4:	mov    ebx,esi
  40c1f6:	mov    rcx,QWORD PTR [rsp+0x60]
  40c1fb:	call   0x40215c
  40c200:	mov    eax,ebx
  40c202:	jmp    0x40c388
  40c207:	mov    rcx,QWORD PTR [rsp+0x28]
  40c20c:	call   0x40215c
  40c211:	nop
  40c212:	mov    rcx,QWORD PTR [rsp+0x60]
  40c217:	call   0x40215c
  40c21c:	mov    rcx,QWORD PTR [rdi+0x8]
  40c220:	cmp    rcx,r14
  40c223:	je     0x40c386
  40c229:	mov    rax,QWORD PTR [rcx]
  40c22c:	call   QWORD PTR [rax+0x18]
  40c22f:	mov    ebp,eax
  40c231:	lea    rcx,[rsp+0x30]
  40c236:	call   0x402b34
  40c23b:	nop
  40c23c:	mov    esi,r14d
  40c23f:	cmp    ebp,r14d
  40c242:	jbe    0x40c37c
  40c248:	mov    WORD PTR [rsp+0x40],r14w
  40c24e:	mov    WORD PTR [rsp+0x42],r14w
  40c254:	mov    QWORD PTR [rsp+0x48],r14
  40c259:	mov    rcx,QWORD PTR [rdi+0x8]
  40c25d:	mov    rax,QWORD PTR [rcx]
  40c260:	lea    r9,[rsp+0x40]
  40c265:	xor    r8d,r8d
  40c268:	mov    edx,esi
  40c26a:	call   QWORD PTR [rax+0x20]
  40c26d:	mov    ebx,eax
  40c26f:	cmp    eax,r14d
  40c272:	jne    0x40c356
  40c278:	cmp    WORD PTR [rsp+0x40],0x15
  40c27e:	je     0x40c28f
  40c280:	lea    rcx,[rsp+0x40]
  40c285:	call   0x40b028
  40c28a:	jmp    0x40c349
  40c28f:	mov    rax,QWORD PTR [rsp+0x48]
  40c294:	mov    QWORD PTR [rsp+0x28],rax
  40c299:	lea    rcx,[rsp+0x40]
  40c29e:	call   0x40b028
  40c2a3:	mov    DWORD PTR [rsp+0x38],r14d
  40c2a8:	mov    rax,QWORD PTR [rsp+0x30]
  40c2ad:	mov    BYTE PTR [rax],r14b
  40c2b0:	mov    rcx,QWORD PTR [rdi+0x8]
  40c2b4:	mov    rax,QWORD PTR [rcx]
  40c2b7:	lea    r9,[rsp+0x40]
  40c2bc:	mov    r8d,r15d
  40c2bf:	mov    edx,esi
  40c2c1:	call   QWORD PTR [rax+0x20]
  40c2c4:	mov    ebx,eax
  40c2c6:	cmp    eax,r14d
  40c2c9:	jne    0x40c363
  40c2cf:	movzx  eax,WORD PTR [rsp+0x40]
  40c2d4:	cmp    ax,0x8
  40c2d8:	jne    0x40c2eb
  40c2da:	mov    rdx,QWORD PTR [rsp+0x48]
  40c2df:	lea    rcx,[rsp+0x30]
  40c2e4:	call   0x402ca0
  40c2e9:	jmp    0x40c2fd
  40c2eb:	cmp    ax,r14w
  40c2ef:	je     0x40c2fd
  40c2f1:	lea    rcx,[rsp+0x40]
  40c2f6:	call   0x40b028
  40c2fb:	jmp    0x40c349
  40c2fd:	mov    ecx,0x18
  40c302:	call   0x402130
  40c307:	mov    rbx,rax
  40c30a:	mov    QWORD PTR [rsp+0xd0],rax
  40c312:	cmp    rax,r14
  40c315:	je     0x40c32f
  40c317:	mov    rax,QWORD PTR [rsp+0x28]
  40c31c:	mov    QWORD PTR [rbx],rax
  40c31f:	lea    rcx,[rbx+0x8]
  40c323:	lea    rdx,[rsp+0x30]
  40c328:	call   0x402bb0
  40c32d:	jmp    0x40c332
  40c32f:	mov    rbx,r14
  40c332:	mov    rdx,rbx
  40c335:	lea    rcx,[rdi+0x20]
  40c339:	call   0x4010c8
  40c33e:	nop
  40c33f:	lea    rcx,[rsp+0x40]
  40c344:	call   0x40b028
  40c349:	add    esi,r15d
  40c34c:	cmp    esi,ebp
  40c34e:	jb     0x40c248
  40c354:	jmp    0x40c37c
  40c356:	lea    rcx,[rsp+0x40]
  40c35b:	call   0x40b028
  40c360:	nop
  40c361:	jmp    0x40c36e
  40c363:	lea    rcx,[rsp+0x40]
  40c368:	call   0x40b028
  40c36d:	nop
  40c36e:	mov    rcx,QWORD PTR [rsp+0x30]
  40c373:	call   0x40215c
  40c378:	mov    eax,ebx
  40c37a:	jmp    0x40c388
  40c37c:	mov    rcx,QWORD PTR [rsp+0x30]
  40c381:	call   0x40215c
  40c386:	xor    eax,eax
  40c388:	add    rsp,0x88
  40c38f:	pop    r15
  40c391:	pop    r14
  40c393:	pop    r13
  40c395:	pop    r12
  40c397:	pop    rdi
  40c398:	pop    rsi
  40c399:	pop    rbp
  40c39a:	pop    rbx
  40c39b:	ret    
  40c39c:	int3   
  40c39d:	int3   
  40c39e:	int3   
  40c39f:	int3   
  40c3a0:	int3   
  40c3a1:	int3   
  40c3a2:	int3   
  40c3a3:	int3   
  40c3a4:	int3   
  40c3a5:	int3   
  40c3a6:	int3   
  40c3a7:	int3   
  40c3a8:	rex.W push rbp
  40c3aa:	sub    rsp,0x20
  40c3ae:	mov    rbp,rdx
  40c3b1:	lea    rcx,[rbp+0x58]
  40c3b5:	call   0x40b988
  40c3ba:	add    rsp,0x20
  40c3be:	pop    rbp
  40c3bf:	ret    
  40c3c0:	int3   
  40c3c1:	int3   
  40c3c2:	int3   
  40c3c3:	int3   
  40c3c4:	int3   
  40c3c5:	int3   
  40c3c6:	int3   
  40c3c7:	int3   
  40c3c8:	rex.W push rbp
  40c3ca:	sub    rsp,0x20
  40c3ce:	mov    rbp,rdx
  40c3d1:	lea    rcx,[rbp+0x28]
  40c3d5:	call   0x401000
  40c3da:	add    rsp,0x20
  40c3de:	pop    rbp
  40c3df:	ret    
  40c3e0:	int3   
  40c3e1:	int3   
  40c3e2:	int3   
  40c3e3:	int3   
  40c3e4:	int3   
  40c3e5:	int3   
  40c3e6:	int3   
  40c3e7:	int3   
  40c3e8:	rex.W push rbp
  40c3ea:	sub    rsp,0x20
  40c3ee:	mov    rbp,rdx
  40c3f1:	lea    rcx,[rbp+0x40]
  40c3f5:	call   0x40b830
  40c3fa:	add    rsp,0x20
  40c3fe:	pop    rbp
  40c3ff:	ret    
  40c400:	int3   
  40c401:	int3   
  40c402:	int3   
  40c403:	int3   
  40c404:	int3   
  40c405:	int3   
  40c406:	int3   
  40c407:	int3   
  40c408:	rex.W push rbp
  40c40a:	sub    rsp,0x20
  40c40e:	mov    rbp,rdx
  40c411:	lea    rcx,[rbp+0x28]
  40c415:	call   0x40b988
  40c41a:	add    rsp,0x20
  40c41e:	pop    rbp
  40c41f:	ret    
  40c420:	int3   
  40c421:	int3   
  40c422:	int3   
  40c423:	int3   
  40c424:	int3   
  40c425:	int3   
  40c426:	int3   
  40c427:	int3   
  40c428:	rex.W push rbp
  40c42a:	sub    rsp,0x20
  40c42e:	mov    rbp,rdx
  40c431:	lea    rcx,[rbp+0x40]
  40c435:	call   0x40b830
  40c43a:	add    rsp,0x20
  40c43e:	pop    rbp
  40c43f:	ret    
  40c440:	int3   
  40c441:	int3   
  40c442:	int3   
  40c443:	int3   
  40c444:	int3   
  40c445:	int3   
  40c446:	int3   
  40c447:	int3   
  40c448:	rex.W push rbp
  40c44a:	sub    rsp,0x20
  40c44e:	mov    rbp,rdx
  40c451:	mov    rcx,QWORD PTR [rbp+0xd0]
  40c458:	call   0x40215c
  40c45d:	add    rsp,0x20
  40c461:	pop    rbp
  40c462:	ret    
  40c463:	int3   
  40c464:	rex.W push rbx
  40c466:	push   rbp
  40c467:	push   rsi
  40c468:	push   rdi
  40c469:	sub    rsp,0x28
  40c46d:	mov    esi,DWORD PTR [rip+0x5c831]        # 0x468ca4
  40c473:	xor    ebx,ebx
  40c475:	mov    rdi,rdx
  40c478:	cmp    esi,DWORD PTR [rdx+0xc]
  40c47b:	mov    rbp,rcx
  40c47e:	mov    DWORD PTR [rdx+0x8],ebx
  40c481:	jbe    0x40c4a3
  40c483:	mov    rcx,QWORD PTR [rdx]
  40c486:	call   0x40215c
  40c48b:	mov    rcx,rsi
  40c48e:	mov    QWORD PTR [rdi],rbx
  40c491:	shl    rcx,0x3
  40c495:	mov    DWORD PTR [rdi+0xc],ebx
  40c498:	call   0x402130
  40c49d:	mov    DWORD PTR [rdi+0xc],esi
  40c4a0:	mov    QWORD PTR [rdi],rax
  40c4a3:	mov    DWORD PTR [rdi+0x8],esi
  40c4a6:	cmp    DWORD PTR [rip+0x5c7f8],ebx        # 0x468ca4
  40c4ac:	mov    r8d,ebx
  40c4af:	jbe    0x40c4da
  40c4b1:	mov    rdx,rbx
  40c4b4:	mov    rcx,QWORD PTR [rdi]
  40c4b7:	lea    rax,[rip+0x5c562]        # 0x468a20
  40c4be:	inc    r8d
  40c4c1:	mov    rax,QWORD PTR [rdx+rax*1]
  40c4c5:	mov    rax,QWORD PTR [rax+0x8]
  40c4c9:	mov    QWORD PTR [rdx+rcx*1],rax
  40c4cd:	add    rdx,0x8
  40c4d1:	cmp    r8d,DWORD PTR [rip+0x5c7cc]        # 0x468ca4
  40c4d8:	jb     0x40c4b4
  40c4da:	cmp    rbp,rbx
  40c4dd:	je     0x40c505
  40c4df:	cmp    DWORD PTR [rbp+0x28],ebx
  40c4e2:	jbe    0x40c505
  40c4e4:	mov    rsi,rbx
  40c4e7:	mov    rax,QWORD PTR [rbp+0x20]
  40c4eb:	mov    rcx,rdi
  40c4ee:	mov    rdx,QWORD PTR [rsi+rax*1]
  40c4f2:	mov    rdx,QWORD PTR [rdx]
  40c4f5:	call   0x4010c8
  40c4fa:	inc    ebx
  40c4fc:	add    rsi,0x8
  40c500:	cmp    ebx,DWORD PTR [rbp+0x28]
  40c503:	jb     0x40c4e7
  40c505:	add    rsp,0x28
  40c509:	pop    rdi
  40c50a:	pop    rsi
  40c50b:	pop    rbp
  40c50c:	pop    rbx
  40c50d:	ret    
  40c50e:	int3   
  40c50f:	int3   
  40c510:	rex.W push rbx
  40c512:	push   rbp
  40c513:	push   rsi
  40c514:	push   rdi
  40c515:	sub    rsp,0x78
  40c519:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40c522:	mov    rbp,rcx
  40c525:	mov    dx,0x2e
  40c529:	call   0x4035f4
  40c52e:	mov    edi,eax
  40c530:	mov    rcx,rbp
  40c533:	call   0x40362c
  40c538:	mov    ebx,eax
  40c53a:	mov    rdx,rbp
  40c53d:	lea    rcx,[rsp+0x28]
  40c542:	call   0x403208
  40c547:	nop
  40c548:	lea    rcx,[rsp+0x48]
  40c54d:	call   0x403150
  40c552:	nop
  40c553:	lea    ecx,[rbx+0x1]
  40c556:	cmp    edi,ecx
  40c558:	jle    0x40c581
  40c55a:	cmp    edi,DWORD PTR [rsp+0x30]
  40c55e:	jae    0x40c56f
  40c560:	mov    DWORD PTR [rsp+0x30],edi
  40c564:	mov    rax,QWORD PTR [rsp+0x28]
  40c569:	mov    WORD PTR [rax+rdi*2],0x0
  40c56f:	mov    rax,QWORD PTR [rbp+0x0]
  40c573:	lea    rdx,[rax+rdi*2]
  40c577:	lea    rcx,[rsp+0x48]
  40c57c:	call   0x403290
  40c581:	mov    edx,DWORD PTR [rsp+0x30]
  40c585:	cmp    DWORD PTR [rsp+0x34],edx
  40c589:	jne    0x40c599
  40c58b:	lea    rcx,[rsp+0x28]
  40c590:	call   0x402f2c
  40c595:	mov    edx,DWORD PTR [rsp+0x30]
  40c599:	mov    rcx,QWORD PTR [rsp+0x28]
  40c59e:	mov    eax,edx
  40c5a0:	mov    WORD PTR [rcx+rax*2],0x5f
  40c5a6:	mov    ebx,0x1
  40c5ab:	add    edx,ebx
  40c5ad:	mov    WORD PTR [rcx+rdx*2],0x0
  40c5b3:	mov    DWORD PTR [rsp+0x30],edx
  40c5b7:	lea    rcx,[rsp+0x38]
  40c5bc:	call   0x403150
  40c5c1:	nop
  40c5c2:	mov    esi,0x40000000
  40c5c7:	lea    edi,[rsi+rbx*1]
  40c5ca:	shr    edi,1
  40c5cc:	lea    rdx,[rsp+0x58]
  40c5d1:	mov    ecx,edi
  40c5d3:	call   0x401930
  40c5d8:	lea    rdx,[rsp+0x28]
  40c5dd:	lea    rcx,[rsp+0x38]
  40c5e2:	call   0x4032f8
  40c5e7:	lea    rdx,[rsp+0x58]
  40c5ec:	lea    rcx,[rsp+0x38]
  40c5f1:	call   0x403560
  40c5f6:	lea    rdx,[rsp+0x48]
  40c5fb:	lea    rcx,[rsp+0x38]
  40c600:	call   0x403444
  40c605:	mov    rcx,QWORD PTR [rsp+0x38]
  40c60a:	call   0x408a3c
  40c60f:	test   al,al
  40c611:	je     0x40c618
  40c613:	lea    ebx,[rdi+0x1]
  40c616:	jmp    0x40c61a
  40c618:	mov    esi,edi
  40c61a:	cmp    ebx,esi
  40c61c:	jne    0x40c5c7
  40c61e:	lea    rdx,[rsp+0x58]
  40c623:	mov    ecx,esi
  40c625:	call   0x401930
  40c62a:	lea    rdx,[rsp+0x28]
  40c62f:	mov    rcx,rbp
  40c632:	call   0x4032f8
  40c637:	lea    rdx,[rsp+0x58]
  40c63c:	mov    rcx,rbp
  40c63f:	call   0x403560
  40c644:	lea    rdx,[rsp+0x48]
  40c649:	mov    rcx,rbp
  40c64c:	call   0x403444
  40c651:	mov    rcx,QWORD PTR [rbp+0x0]
  40c655:	call   0x408a3c
  40c65a:	test   al,al
  40c65c:	sete   bl
  40c65f:	mov    rcx,QWORD PTR [rsp+0x38]
  40c664:	call   0x40215c
  40c669:	nop
  40c66a:	mov    rcx,QWORD PTR [rsp+0x48]
  40c66f:	call   0x40215c
  40c674:	nop
  40c675:	mov    rcx,QWORD PTR [rsp+0x28]
  40c67a:	call   0x40215c
  40c67f:	mov    al,bl
  40c681:	add    rsp,0x78
  40c685:	pop    rdi
  40c686:	pop    rsi
  40c687:	pop    rbp
  40c688:	pop    rbx
  40c689:	ret    
  40c68a:	int3   
  40c68b:	int3   
  40c68c:	int3   
  40c68d:	int3   
  40c68e:	int3   
  40c68f:	int3   
  40c690:	rex.W push rbp
  40c692:	sub    rsp,0x20
  40c696:	mov    rbp,rdx
  40c699:	lea    rcx,[rbp+0x28]
  40c69d:	call   0x401000
  40c6a2:	add    rsp,0x20
  40c6a6:	pop    rbp
  40c6a7:	ret    
  40c6a8:	int3   
  40c6a9:	int3   
  40c6aa:	int3   
  40c6ab:	int3   
  40c6ac:	int3   
  40c6ad:	int3   
  40c6ae:	int3   
  40c6af:	int3   
  40c6b0:	rex.W push rbp
  40c6b2:	sub    rsp,0x20
  40c6b6:	mov    rbp,rdx
  40c6b9:	lea    rcx,[rbp+0x48]
  40c6bd:	call   0x401000
  40c6c2:	add    rsp,0x20
  40c6c6:	pop    rbp
  40c6c7:	ret    
  40c6c8:	int3   
  40c6c9:	int3   
  40c6ca:	int3   
  40c6cb:	int3   
  40c6cc:	int3   
  40c6cd:	int3   
  40c6ce:	int3   
  40c6cf:	int3   
  40c6d0:	rex.W push rbp
  40c6d2:	sub    rsp,0x20
  40c6d6:	mov    rbp,rdx
  40c6d9:	lea    rcx,[rbp+0x38]
  40c6dd:	call   0x401000
  40c6e2:	add    rsp,0x20
  40c6e6:	pop    rbp
  40c6e7:	ret    
  40c6e8:	mov    QWORD PTR [rsp+0x8],rcx
  40c6ed:	push   rbx
  40c6ee:	sub    rsp,0x30
  40c6f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40c6fb:	mov    rbx,rcx
  40c6fe:	lea    rax,[rip+0x417fb]        # 0x44df00
  40c705:	mov    QWORD PTR [rcx],rax
  40c708:	lea    rax,[rip+0x417d1]        # 0x44dee0
  40c70f:	mov    QWORD PTR [rcx+0x8],rax
  40c713:	lea    rax,[rip+0x417a6]        # 0x44dec0
  40c71a:	mov    QWORD PTR [rcx+0x10],rax
  40c71e:	lea    rax,[rip+0x4177b]        # 0x44dea0
  40c725:	mov    QWORD PTR [rcx+0x18],rax
  40c729:	mov    rcx,QWORD PTR [rcx+0x58]
  40c72d:	call   0x44ad20
  40c732:	mov    rcx,QWORD PTR [rbx+0x68]
  40c736:	test   rcx,rcx
  40c739:	je     0x40c746
  40c73b:	mov    rax,QWORD PTR [rcx]
  40c73e:	mov    rdx,QWORD PTR [rbx+0x70]
  40c742:	call   QWORD PTR [rax+0x8]
  40c745:	nop
  40c746:	lea    rcx,[rbx+0x28]
  40c74a:	add    rsp,0x30
  40c74e:	pop    rbx
  40c74f:	jmp    0x408c80
  40c754:	int3   
  40c755:	int3   
  40c756:	int3   
  40c757:	int3   
  40c758:	rex.W push rbp
  40c75a:	sub    rsp,0x20
  40c75e:	mov    rbp,rdx
  40c761:	mov    rcx,QWORD PTR [rbp+0x40]
  40c765:	add    rcx,0x28
  40c769:	call   0x409728
  40c76e:	add    rsp,0x20
  40c772:	pop    rbp
  40c773:	ret    
  40c774:	rex.W push rbx
  40c776:	push   rbp
  40c777:	push   rsi
  40c778:	push   rdi
  40c779:	sub    rsp,0x28
  40c77d:	mov    rsi,rdx
  40c780:	mov    rdi,r8
  40c783:	mov    rbx,rcx
  40c786:	mov    QWORD PTR [r8],0x0
  40c78d:	mov    ebp,0x10
  40c792:	lea    rdx,[rip+0x48657]        # 0x454df0
  40c799:	mov    r8,rbp
  40c79c:	mov    rcx,rsi
  40c79f:	call   0x44b786
  40c7a4:	test   eax,eax
  40c7a6:	jne    0x40c7ad
  40c7a8:	mov    QWORD PTR [rdi],rbx
  40c7ab:	jmp    0x40c824
  40c7ad:	lea    rdx,[rip+0x47754]        # 0x453f08
  40c7b4:	mov    r8,rbp
  40c7b7:	mov    rcx,rsi
  40c7ba:	call   0x44b786
  40c7bf:	test   eax,eax
  40c7c1:	je     0x40c7a8
  40c7c3:	lea    rdx,[rip+0x4771e]        # 0x453ee8
  40c7ca:	mov    r8,rbp
  40c7cd:	mov    rcx,rsi
  40c7d0:	call   0x44b786
  40c7d5:	test   eax,eax
  40c7d7:	jne    0x40c7df
  40c7d9:	lea    rdx,[rbx+0x8]
  40c7dd:	jmp    0x40c815
  40c7df:	lea    rdx,[rip+0x476f2]        # 0x453ed8
  40c7e6:	mov    r8,rbp
  40c7e9:	mov    rcx,rsi
  40c7ec:	call   0x44b786
  40c7f1:	test   eax,eax
  40c7f3:	jne    0x40c7fb
  40c7f5:	lea    rdx,[rbx+0x10]
  40c7f9:	jmp    0x40c815
  40c7fb:	lea    rdx,[rip+0x476c6]        # 0x453ec8
  40c802:	mov    r8,rbp
  40c805:	mov    rcx,rsi
  40c808:	call   0x44b786
  40c80d:	test   eax,eax
  40c80f:	jne    0x40c82b
  40c811:	lea    rdx,[rbx+0x18]
  40c815:	mov    rax,rbx
  40c818:	neg    rax
  40c81b:	sbb    rcx,rcx
  40c81e:	and    rcx,rdx
  40c821:	mov    QWORD PTR [rdi],rcx
  40c824:	inc    DWORD PTR [rbx+0x20]
  40c827:	xor    eax,eax
  40c829:	jmp    0x40c830
  40c82b:	mov    eax,0x80004002
  40c830:	add    rsp,0x28
  40c834:	pop    rdi
  40c835:	pop    rsi
  40c836:	pop    rbp
  40c837:	pop    rbx
  40c838:	ret    
  40c839:	int3   
  40c83a:	int3   
  40c83b:	int3   
  40c83c:	sub    rsp,0x28
  40c840:	add    DWORD PTR [rcx+0x20],0xffffffff
  40c844:	mov    eax,DWORD PTR [rcx+0x20]
  40c847:	jne    0x40c856
  40c849:	mov    rax,QWORD PTR [rcx]
  40c84c:	mov    edx,0x1
  40c851:	call   QWORD PTR [rax+0x28]
  40c854:	xor    eax,eax
  40c856:	add    rsp,0x28
  40c85a:	ret    
  40c85b:	int3   
  40c85c:	rex.W push rbx
  40c85e:	push   rbp
  40c85f:	push   rsi
  40c860:	push   rdi
  40c861:	sub    rsp,0x38
  40c865:	mov    ebx,0x100000
  40c86a:	mov    ecx,0xfffffff6
  40c86f:	mov    rbp,r9
  40c872:	cmp    r8d,ebx
  40c875:	mov    rdi,rdx
  40c878:	cmovb  ebx,r8d
  40c87c:	call   QWORD PTR [rip+0x40876]        # 0x44d0f8
  40c882:	lea    r9,[rsp+0x70]
  40c887:	xor    esi,esi
  40c889:	mov    r8d,ebx
  40c88c:	mov    rdx,rdi
  40c88f:	mov    rcx,rax
  40c892:	mov    QWORD PTR [rsp+0x20],rsi
  40c897:	call   QWORD PTR [rip+0x408bb]        # 0x44d158
  40c89d:	cmp    rbp,rsi
  40c8a0:	mov    r11d,eax
  40c8a3:	je     0x40c8ac
  40c8a5:	mov    eax,DWORD PTR [rsp+0x70]
  40c8a9:	mov    DWORD PTR [rbp+0x0],eax
  40c8ac:	cmp    r11d,esi
  40c8af:	jne    0x40c8e5
  40c8b1:	call   QWORD PTR [rip+0x408e9]        # 0x44d1a0
  40c8b7:	cmp    eax,0x6d
  40c8ba:	jne    0x40c8c0
  40c8bc:	xor    eax,eax
  40c8be:	jmp    0x40c8e7
  40c8c0:	call   QWORD PTR [rip+0x408da]        # 0x44d1a0
  40c8c6:	cmp    eax,esi
  40c8c8:	mov    r11d,eax
  40c8cb:	jne    0x40c8d4
  40c8cd:	mov    esi,0x80004005
  40c8d2:	jmp    0x40c8e5
  40c8d4:	movzx  eax,ax
  40c8d7:	or     eax,0x80070000
  40c8dc:	cmp    r11d,esi
  40c8df:	cmovle eax,r11d
  40c8e3:	mov    esi,eax
  40c8e5:	mov    eax,esi
  40c8e7:	add    rsp,0x38
  40c8eb:	pop    rdi
  40c8ec:	pop    rsi
  40c8ed:	pop    rbp
  40c8ee:	pop    rbx
  40c8ef:	ret    
  40c8f0:	rex.W push rbx
  40c8f2:	push   rsi
  40c8f3:	push   rdi
  40c8f4:	sub    rsp,0x30
  40c8f8:	cmp    r8d,0x3
  40c8fc:	mov    rsi,r9
  40c8ff:	mov    rdi,rcx
  40c902:	jae    0x40c925
  40c904:	xor    ebx,ebx
  40c906:	cmp    BYTE PTR [rcx+0x30],bl
  40c909:	je     0x40c952
  40c90b:	cmp    BYTE PTR [rcx+0x31],bl
  40c90e:	jne    0x40c916
  40c910:	cmp    r8d,0x2
  40c914:	je     0x40c952
  40c916:	cmp    r8d,ebx
  40c919:	je     0x40c936
  40c91b:	dec    r8d
  40c91e:	je     0x40c932
  40c920:	dec    r8d
  40c923:	je     0x40c92c
  40c925:	mov    eax,0x80030001
  40c92a:	jmp    0x40c9a0
  40c92c:	add    rdx,QWORD PTR [rcx+0x38]
  40c930:	jmp    0x40c936
  40c932:	add    rdx,QWORD PTR [rcx+0x40]
  40c936:	cmp    rdx,rbx
  40c939:	jge    0x40c942
  40c93b:	mov    eax,0x80070083
  40c940:	jmp    0x40c9a0
  40c942:	cmp    r9,rbx
  40c945:	mov    QWORD PTR [rcx+0x40],rdx
  40c949:	je     0x40c94e
  40c94b:	mov    QWORD PTR [r9],rdx
  40c94e:	xor    eax,eax
  40c950:	jmp    0x40c9a0
  40c952:	lea    r9,[rsp+0x20]
  40c957:	add    rcx,0x28
  40c95b:	call   0x408d08
  40c960:	cmp    rsi,rbx
  40c963:	mov    rcx,QWORD PTR [rsp+0x20]
  40c968:	mov    QWORD PTR [rdi+0x40],rcx
  40c96c:	mov    QWORD PTR [rdi+0x48],rcx
  40c970:	je     0x40c975
  40c972:	mov    QWORD PTR [rsi],rcx
  40c975:	cmp    al,bl
  40c977:	jne    0x40c99e
  40c979:	call   QWORD PTR [rip+0x40821]        # 0x44d1a0
  40c97f:	cmp    eax,ebx
  40c981:	mov    r11d,eax
  40c984:	jne    0x40c98d
  40c986:	mov    ebx,0x80004005
  40c98b:	jmp    0x40c99e
  40c98d:	movzx  eax,ax
  40c990:	or     eax,0x80070000
  40c995:	cmp    r11d,ebx
  40c998:	cmovle eax,r11d
  40c99c:	mov    ebx,eax
  40c99e:	mov    eax,ebx
  40c9a0:	add    rsp,0x30
  40c9a4:	pop    rdi
  40c9a5:	pop    rsi
  40c9a6:	pop    rbx
  40c9a7:	ret    
  40c9a8:	rex.W push rbx
  40c9aa:	sub    rsp,0x20
  40c9ae:	add    rcx,0x20
  40c9b2:	call   0x408cac
  40c9b7:	xor    ebx,ebx
  40c9b9:	cmp    al,bl
  40c9bb:	jne    0x40c9e2
  40c9bd:	call   QWORD PTR [rip+0x407dd]        # 0x44d1a0
  40c9c3:	cmp    eax,ebx
  40c9c5:	mov    r11d,eax
  40c9c8:	jne    0x40c9d1
  40c9ca:	mov    ebx,0x80004005
  40c9cf:	jmp    0x40c9e2
  40c9d1:	movzx  eax,ax
  40c9d4:	or     eax,0x80070000
  40c9d9:	cmp    r11d,ebx
  40c9dc:	cmovle eax,r11d
  40c9e0:	mov    ebx,eax
  40c9e2:	mov    eax,ebx
  40c9e4:	add    rsp,0x20
  40c9e8:	pop    rbx
  40c9e9:	ret    
  40c9ea:	int3   
  40c9eb:	int3   
  40c9ec:	rex.W push rbx
  40c9ee:	push   rsi
  40c9ef:	push   rdi
  40c9f0:	sub    rsp,0x60
  40c9f4:	mov    rcx,QWORD PTR [rcx+0x18]
  40c9f8:	mov    rsi,rdx
  40c9fb:	lea    rdx,[rsp+0x20]
  40ca00:	mov    rbx,r9
  40ca03:	mov    rdi,r8
  40ca06:	call   QWORD PTR [rip+0x40734]        # 0x44d140
  40ca0c:	test   eax,eax
  40ca0e:	je     0x40ca6d
  40ca10:	test   rsi,rsi
  40ca13:	je     0x40ca27
  40ca15:	mov    ecx,DWORD PTR [rsp+0x40]
  40ca19:	mov    eax,DWORD PTR [rsp+0x44]
  40ca1d:	shl    rcx,0x20
  40ca21:	add    rcx,rax
  40ca24:	mov    QWORD PTR [rsi],rcx
  40ca27:	test   rdi,rdi
  40ca2a:	je     0x40ca34
  40ca2c:	mov    rax,QWORD PTR [rsp+0x24]
  40ca31:	mov    QWORD PTR [rdi],rax
  40ca34:	test   rbx,rbx
  40ca37:	je     0x40ca41
  40ca39:	mov    rax,QWORD PTR [rsp+0x2c]
  40ca3e:	mov    QWORD PTR [rbx],rax
  40ca41:	mov    rcx,QWORD PTR [rsp+0xa0]
  40ca49:	test   rcx,rcx
  40ca4c:	je     0x40ca56
  40ca4e:	mov    rax,QWORD PTR [rsp+0x34]
  40ca53:	mov    QWORD PTR [rcx],rax
  40ca56:	mov    rcx,QWORD PTR [rsp+0xa8]
  40ca5e:	test   rcx,rcx
  40ca61:	je     0x40ca69
  40ca63:	mov    eax,DWORD PTR [rsp+0x20]
  40ca67:	mov    DWORD PTR [rcx],eax
  40ca69:	xor    eax,eax
  40ca6b:	jmp    0x40ca73
  40ca6d:	call   QWORD PTR [rip+0x4072d]        # 0x44d1a0
  40ca73:	add    rsp,0x60
  40ca77:	pop    rdi
  40ca78:	pop    rsi
  40ca79:	pop    rbx
  40ca7a:	ret    
  40ca7b:	int3   
  40ca7c:	rex.W push rbx
  40ca7e:	push   rdi
  40ca7f:	sub    rsp,0x68
  40ca83:	mov    rdi,rcx
  40ca86:	mov    rcx,QWORD PTR [rcx+0x10]
  40ca8a:	mov    rbx,rdx
  40ca8d:	lea    rdx,[rsp+0x20]
  40ca92:	call   QWORD PTR [rip+0x406a8]        # 0x44d140
  40ca98:	test   eax,eax
  40ca9a:	je     0x40cb09
  40ca9c:	mov    eax,DWORD PTR [rsp+0x44]
  40caa0:	mov    r8d,DWORD PTR [rsp+0x40]
  40caa5:	mov    ecx,DWORD PTR [rsp+0x4c]
  40caa9:	shl    r8,0x20
  40caad:	shl    rcx,0x20
  40cab1:	mov    QWORD PTR [rbx+0x18],0x0
  40cab9:	add    r8,rax
  40cabc:	mov    eax,DWORD PTR [rsp+0x3c]
  40cac0:	mov    QWORD PTR [rbx+0x8],rax
  40cac4:	mov    eax,DWORD PTR [rsp+0x50]
  40cac8:	mov    QWORD PTR [rbx],r8
  40cacb:	add    rcx,rax
  40cace:	mov    eax,0x1
  40cad3:	mov    QWORD PTR [rbx+0x10],rcx
  40cad7:	cmp    BYTE PTR [rdi+0x4c],0x0
  40cadb:	cmovne eax,DWORD PTR [rsp+0x48]
  40cae0:	mov    DWORD PTR [rbx+0x20],eax
  40cae3:	mov    eax,DWORD PTR [rsp+0x20]
  40cae7:	mov    DWORD PTR [rbx+0x24],eax
  40caea:	mov    rax,QWORD PTR [rsp+0x24]
  40caef:	mov    QWORD PTR [rbx+0x28],rax
  40caf3:	mov    rax,QWORD PTR [rsp+0x2c]
  40caf8:	mov    QWORD PTR [rbx+0x30],rax
  40cafc:	mov    rax,QWORD PTR [rsp+0x34]
  40cb01:	mov    QWORD PTR [rbx+0x38],rax
  40cb05:	xor    eax,eax
  40cb07:	jmp    0x40cb0f
  40cb09:	call   QWORD PTR [rip+0x40691]        # 0x44d1a0
  40cb0f:	add    rsp,0x68
  40cb13:	pop    rdi
  40cb14:	pop    rbx
  40cb15:	ret    
  40cb16:	int3   
  40cb17:	int3   
  40cb18:	rex.W push rbx
  40cb1a:	sub    rsp,0x20
  40cb1e:	add    rcx,0x10
  40cb22:	call   0x408c80
  40cb27:	xor    ebx,ebx
  40cb29:	cmp    al,bl
  40cb2b:	jne    0x40cb52
  40cb2d:	call   QWORD PTR [rip+0x4066d]        # 0x44d1a0
  40cb33:	cmp    eax,ebx
  40cb35:	mov    r11d,eax
  40cb38:	jne    0x40cb41
  40cb3a:	mov    ebx,0x80004005
  40cb3f:	jmp    0x40cb52
  40cb41:	movzx  eax,ax
  40cb44:	or     eax,0x80070000
  40cb49:	cmp    r11d,ebx
  40cb4c:	cmovle eax,r11d
  40cb50:	mov    ebx,eax
  40cb52:	mov    eax,ebx
  40cb54:	add    rsp,0x20
  40cb58:	pop    rbx
  40cb59:	ret    
  40cb5a:	int3   
  40cb5b:	int3   
  40cb5c:	rex.W push rbx
  40cb5e:	push   rdi
  40cb5f:	sub    rsp,0x28
  40cb63:	mov    rdi,r9
  40cb66:	mov    rbx,rcx
  40cb69:	lea    r9,[rsp+0x40]
  40cb6e:	add    rcx,0x10
  40cb72:	call   0x408ec8
  40cb77:	mov    ecx,DWORD PTR [rsp+0x40]
  40cb7b:	add    QWORD PTR [rbx+0x28],rcx
  40cb7f:	xor    ebx,ebx
  40cb81:	cmp    rdi,rbx
  40cb84:	je     0x40cb88
  40cb86:	mov    DWORD PTR [rdi],ecx
  40cb88:	cmp    al,bl
  40cb8a:	jne    0x40cbb1
  40cb8c:	call   QWORD PTR [rip+0x4060e]        # 0x44d1a0
  40cb92:	cmp    eax,ebx
  40cb94:	mov    r11d,eax
  40cb97:	jne    0x40cba0
  40cb99:	mov    ebx,0x80004005
  40cb9e:	jmp    0x40cbb1
  40cba0:	movzx  eax,ax
  40cba3:	or     eax,0x80070000
  40cba8:	cmp    r11d,ebx
  40cbab:	cmovle eax,r11d
  40cbaf:	mov    ebx,eax
  40cbb1:	mov    eax,ebx
  40cbb3:	add    rsp,0x28
  40cbb7:	pop    rdi
  40cbb8:	pop    rbx
  40cbb9:	ret    
  40cbba:	int3   
  40cbbb:	int3   
  40cbbc:	rex.W push rbx
  40cbbe:	push   rdi
  40cbbf:	sub    rsp,0x38
  40cbc3:	cmp    r8d,0x3
  40cbc7:	mov    rdi,r9
  40cbca:	jb     0x40cbd3
  40cbcc:	mov    eax,0x80030001
  40cbd1:	jmp    0x40cc1b
  40cbd3:	lea    r9,[rsp+0x20]
  40cbd8:	add    rcx,0x10
  40cbdc:	call   0x408d08
  40cbe1:	xor    ebx,ebx
  40cbe3:	cmp    rdi,rbx
  40cbe6:	je     0x40cbf0
  40cbe8:	mov    rcx,QWORD PTR [rsp+0x20]
  40cbed:	mov    QWORD PTR [rdi],rcx
  40cbf0:	cmp    al,bl
  40cbf2:	jne    0x40cc19
  40cbf4:	call   QWORD PTR [rip+0x405a6]        # 0x44d1a0
  40cbfa:	cmp    eax,ebx
  40cbfc:	mov    r11d,eax
  40cbff:	jne    0x40cc08
  40cc01:	mov    ebx,0x80004005
  40cc06:	jmp    0x40cc19
  40cc08:	movzx  eax,ax
  40cc0b:	or     eax,0x80070000
  40cc10:	cmp    r11d,ebx
  40cc13:	cmovle eax,r11d
  40cc17:	mov    ebx,eax
  40cc19:	mov    eax,ebx
  40cc1b:	add    rsp,0x38
  40cc1f:	pop    rdi
  40cc20:	pop    rbx
  40cc21:	ret    
  40cc22:	int3   
  40cc23:	int3   
  40cc24:	rex.W push rbx
  40cc26:	push   rsi
  40cc27:	push   rdi
  40cc28:	sub    rsp,0x20
  40cc2c:	lea    rdi,[rcx+0x10]
  40cc30:	mov    rsi,rdx
  40cc33:	mov    ebx,0x1
  40cc38:	lea    r9,[rsp+0x40]
  40cc3d:	xor    edx,edx
  40cc3f:	mov    rcx,rdi
  40cc42:	mov    r8d,ebx
  40cc45:	call   0x408d08
  40cc4a:	test   al,al
  40cc4c:	jne    0x40cc55
  40cc4e:	mov    eax,0x80004005
  40cc53:	jmp    0x40cc87
  40cc55:	mov    rdx,rsi
  40cc58:	mov    rcx,rdi
  40cc5b:	call   0x408f28
  40cc60:	test   al,al
  40cc62:	je     0x40cc7a
  40cc64:	mov    rdx,QWORD PTR [rsp+0x40]
  40cc69:	lea    r8,[rsp+0x50]
  40cc6e:	mov    rcx,rdi
  40cc71:	call   0x408d78
  40cc76:	test   al,al
  40cc78:	jne    0x40cc7c
  40cc7a:	xor    bl,bl
  40cc7c:	neg    bl
  40cc7e:	sbb    eax,eax
  40cc80:	not    eax
  40cc82:	and    eax,0x80004005
  40cc87:	add    rsp,0x20
  40cc8b:	pop    rdi
  40cc8c:	pop    rsi
  40cc8d:	pop    rbx
  40cc8e:	ret    
  40cc8f:	int3   
  40cc90:	rex.W push rbx
  40cc92:	sub    rsp,0x20
  40cc96:	add    rcx,0x10
  40cc9a:	call   0x408cac
  40cc9f:	xor    ebx,ebx
  40cca1:	cmp    al,bl
  40cca3:	jne    0x40ccca
  40cca5:	call   QWORD PTR [rip+0x404f5]        # 0x44d1a0
  40ccab:	cmp    eax,ebx
  40ccad:	mov    r11d,eax
  40ccb0:	jne    0x40ccb9
  40ccb2:	mov    ebx,0x80004005
  40ccb7:	jmp    0x40ccca
  40ccb9:	movzx  eax,ax
  40ccbc:	or     eax,0x80070000
  40ccc1:	cmp    r11d,ebx
  40ccc4:	cmovle eax,r11d
  40ccc8:	mov    ebx,eax
  40ccca:	mov    eax,ebx
  40cccc:	add    rsp,0x20
  40ccd0:	pop    rbx
  40ccd1:	ret    
  40ccd2:	int3   
  40ccd3:	int3   
  40ccd4:	rex.W push rbx
  40ccd6:	push   rbp
  40ccd7:	push   rsi
  40ccd8:	push   rdi
  40ccd9:	push   r12
  40ccdb:	sub    rsp,0x30
  40ccdf:	xor    edi,edi
  40cce1:	mov    rsi,r9
  40cce4:	mov    r12,rdx
  40cce7:	cmp    r9,rdi
  40ccea:	mov    rbp,rcx
  40cced:	je     0x40ccf2
  40ccef:	mov    DWORD PTR [r9],edi
  40ccf2:	cmp    r8d,edi
  40ccf5:	jbe    0x40cd5f
  40ccf7:	mov    ebx,0x8000
  40ccfc:	mov    ecx,0xfffffff5
  40cd01:	cmp    r8d,ebx
  40cd04:	cmovb  ebx,r8d
  40cd08:	call   QWORD PTR [rip+0x403ea]        # 0x44d0f8
  40cd0e:	lea    r9,[rsp+0x70]
  40cd13:	mov    r8d,ebx
  40cd16:	mov    rdx,r12
  40cd19:	mov    rcx,rax
  40cd1c:	mov    QWORD PTR [rsp+0x20],rdi
  40cd21:	call   QWORD PTR [rip+0x40429]        # 0x44d150
  40cd27:	mov    ecx,DWORD PTR [rsp+0x70]
  40cd2b:	add    QWORD PTR [rbp+0x10],rcx
  40cd2f:	cmp    rsi,rdi
  40cd32:	je     0x40cd36
  40cd34:	add    DWORD PTR [rsi],ecx
  40cd36:	cmp    eax,edi
  40cd38:	jne    0x40cd5f
  40cd3a:	call   QWORD PTR [rip+0x40460]        # 0x44d1a0
  40cd40:	cmp    eax,edi
  40cd42:	mov    r11d,eax
  40cd45:	jne    0x40cd4e
  40cd47:	mov    edi,0x80004005
  40cd4c:	jmp    0x40cd5f
  40cd4e:	movzx  eax,ax
  40cd51:	or     eax,0x80070000
  40cd56:	cmp    r11d,edi
  40cd59:	cmovle eax,r11d
  40cd5d:	mov    edi,eax
  40cd5f:	mov    eax,edi
  40cd61:	add    rsp,0x30
  40cd65:	pop    r12
  40cd67:	pop    rdi
  40cd68:	pop    rsi
  40cd69:	pop    rbp
  40cd6a:	pop    rbx
  40cd6b:	ret    
  40cd6c:	sub    rcx,0x8
  40cd70:	jmp    0x40c774
  40cd75:	int3   
  40cd76:	int3   
  40cd77:	int3   
  40cd78:	sub    rcx,0x8
  40cd7c:	jmp    0x40c83c
  40cd81:	int3   
  40cd82:	int3   
  40cd83:	int3   
  40cd84:	sub    rcx,0x10
  40cd88:	jmp    0x40c774
  40cd8d:	int3   
  40cd8e:	int3   
  40cd8f:	int3   
  40cd90:	sub    rcx,0x10
  40cd94:	jmp    0x40c83c
  40cd99:	int3   
  40cd9a:	int3   
  40cd9b:	int3   
  40cd9c:	sub    rcx,0x18
  40cda0:	jmp    0x40c774
  40cda5:	int3   
  40cda6:	int3   
  40cda7:	int3   
  40cda8:	sub    rcx,0x18
  40cdac:	jmp    0x40c83c
  40cdb1:	int3   
  40cdb2:	int3   
  40cdb3:	int3   
  40cdb4:	rex.W push rbx
  40cdb6:	push   rdi
  40cdb7:	sub    rsp,0x28
  40cdbb:	mov    ebx,edx
  40cdbd:	mov    rdi,rcx
  40cdc0:	call   0x40c6e8
  40cdc5:	test   bl,0x1
  40cdc8:	je     0x40cdd2
  40cdca:	mov    rcx,rdi
  40cdcd:	call   0x40215c
  40cdd2:	mov    rax,rdi
  40cdd5:	add    rsp,0x28
  40cdd9:	pop    rdi
  40cdda:	pop    rbx
  40cddb:	ret    
  40cddc:	rex.W push rbx
  40cdde:	push   rbp
  40cddf:	push   rsi
  40cde0:	push   rdi
  40cde1:	push   r12
  40cde3:	push   r13
  40cde5:	push   r15
  40cde7:	sub    rsp,0x20
  40cdeb:	test   r9,r9
  40cdee:	mov    rbp,r9
  40cdf1:	mov    esi,r8d
  40cdf4:	mov    r13,rdx
  40cdf7:	mov    rdi,rcx
  40cdfa:	je     0x40ce03
  40cdfc:	mov    DWORD PTR [r9],0x0
  40ce03:	test   r8d,r8d
  40ce06:	je     0x40cfd5
  40ce0c:	cmp    BYTE PTR [rcx+0x30],0x0
  40ce10:	je     0x40cfa9
  40ce16:	cmp    BYTE PTR [rcx+0x31],0x0
  40ce1a:	je     0x40ce44
  40ce1c:	mov    rax,QWORD PTR [rcx+0x40]
  40ce20:	mov    rcx,QWORD PTR [rcx+0x38]
  40ce24:	cmp    rax,rcx
  40ce27:	jb     0x40ce3b
  40ce29:	sub    rax,rcx
  40ce2c:	neg    rax
  40ce2f:	sbb    eax,eax
  40ce31:	and    eax,0x80004005
  40ce36:	jmp    0x40d01b
  40ce3b:	sub    rcx,rax
  40ce3e:	cmp    rsi,rcx
  40ce41:	cmova  esi,ecx
  40ce44:	mov    r15d,0x3ffff
  40ce4a:	mov    rcx,QWORD PTR [rdi+0x40]
  40ce4e:	mov    rbx,rcx
  40ce51:	and    rbx,0xfffffffffffc0000
  40ce58:	cmp    DWORD PTR [rdi+0x60],0x0
  40ce5c:	jbe    0x40ce68
  40ce5e:	cmp    QWORD PTR [rdi+0x50],rbx
  40ce62:	je     0x40cf56
  40ce68:	test   r15,rcx
  40ce6b:	jne    0x40ce8f
  40ce6d:	test   r15,r13
  40ce70:	jne    0x40ce8f
  40ce72:	mov    eax,esi
  40ce74:	add    rax,rcx
  40ce77:	test   r15,rax
  40ce7a:	je     0x40cf27
  40ce80:	and    rax,0xfffffffffffc0000
  40ce86:	cmp    rax,rcx
  40ce89:	ja     0x40cf23
  40ce8f:	cmp    rbx,QWORD PTR [rdi+0x48]
  40ce93:	je     0x40ceba
  40ce95:	lea    rcx,[rdi+0x28]
  40ce99:	lea    r9,[rsp+0x78]
  40ce9e:	xor    r8d,r8d
  40cea1:	mov    rdx,rbx
  40cea4:	call   0x408d08
  40cea9:	test   al,al
  40ceab:	je     0x40cf45
  40ceb1:	mov    rax,QWORD PTR [rsp+0x78]
  40ceb6:	mov    QWORD PTR [rdi+0x48],rax
  40ceba:	cmp    BYTE PTR [rdi+0x31],0x0
  40cebe:	mov    QWORD PTR [rdi+0x50],rbx
  40cec2:	mov    ebx,0x40000
  40cec7:	je     0x40ced7
  40cec9:	mov    rax,QWORD PTR [rdi+0x38]
  40cecd:	sub    rax,QWORD PTR [rdi+0x48]
  40ced1:	cmp    rax,rbx
  40ced4:	cmovb  ebx,eax
  40ced7:	cmp    QWORD PTR [rdi+0x58],0x0
  40cedc:	jne    0x40cef5
  40cede:	mov    ecx,0x40000
  40cee3:	call   0x44ad00
  40cee8:	test   rax,rax
  40ceeb:	mov    QWORD PTR [rdi+0x58],rax
  40ceef:	je     0x40cfd9
  40cef5:	mov    rdx,QWORD PTR [rdi+0x58]
  40cef9:	lea    rcx,[rdi+0x28]
  40cefd:	lea    r9,[rdi+0x60]
  40cf01:	mov    r8d,ebx
  40cf04:	call   0x408d84
  40cf09:	test   al,al
  40cf0b:	je     0x40cf45
  40cf0d:	cmp    DWORD PTR [rdi+0x60],0x0
  40cf11:	je     0x40cfd5
  40cf17:	mov    eax,DWORD PTR [rdi+0x60]
  40cf1a:	add    QWORD PTR [rdi+0x48],rax
  40cf1e:	jmp    0x40ce4a
  40cf23:	mov    esi,eax
  40cf25:	sub    esi,ecx
  40cf27:	cmp    rcx,QWORD PTR [rdi+0x48]
  40cf2b:	mov    rdx,rcx
  40cf2e:	je     0x40cfa9
  40cf30:	lea    rcx,[rdi+0x28]
  40cf34:	lea    r9,[rsp+0x78]
  40cf39:	xor    r8d,r8d
  40cf3c:	call   0x408d08
  40cf41:	test   al,al
  40cf43:	jne    0x40cf9c
  40cf45:	call   QWORD PTR [rip+0x40255]        # 0x44d1a0
  40cf4b:	test   eax,eax
  40cf4d:	jne    0x40cf8a
  40cf4f:	mov    ecx,0x80004005
  40cf54:	jmp    0x40cf98
  40cf56:	mov    eax,ecx
  40cf58:	mov    ecx,DWORD PTR [rdi+0x60]
  40cf5b:	and    eax,r15d
  40cf5e:	cmp    eax,ecx
  40cf60:	jae    0x40cfd5
  40cf62:	sub    ecx,eax
  40cf64:	mov    edx,eax
  40cf66:	cmp    ecx,esi
  40cf68:	cmovb  esi,ecx
  40cf6b:	add    rdx,QWORD PTR [rdi+0x58]
  40cf6f:	mov    rcx,r13
  40cf72:	mov    r8d,esi
  40cf75:	mov    ebx,esi
  40cf77:	call   0x44b480
  40cf7c:	add    QWORD PTR [rdi+0x40],rbx
  40cf80:	test   rbp,rbp
  40cf83:	je     0x40cfd5
  40cf85:	add    DWORD PTR [rbp+0x0],esi
  40cf88:	jmp    0x40cfd5
  40cf8a:	movzx  ecx,ax
  40cf8d:	or     ecx,0x80070000
  40cf93:	test   eax,eax
  40cf95:	cmovle ecx,eax
  40cf98:	mov    eax,ecx
  40cf9a:	jmp    0x40d01b
  40cf9c:	mov    rax,QWORD PTR [rsp+0x78]
  40cfa1:	mov    QWORD PTR [rdi+0x40],rax
  40cfa5:	mov    QWORD PTR [rdi+0x48],rax
  40cfa9:	lea    rcx,[rdi+0x28]
  40cfad:	lea    r9,[rsp+0x70]
  40cfb2:	mov    r8d,esi
  40cfb5:	mov    rdx,r13
  40cfb8:	call   0x408dc0
  40cfbd:	test   rbp,rbp
  40cfc0:	mov    ecx,DWORD PTR [rsp+0x70]
  40cfc4:	je     0x40cfc9
  40cfc6:	mov    DWORD PTR [rbp+0x0],ecx
  40cfc9:	add    QWORD PTR [rdi+0x40],rcx
  40cfcd:	add    QWORD PTR [rdi+0x48],rcx
  40cfd1:	test   al,al
  40cfd3:	je     0x40cfe0
  40cfd5:	xor    eax,eax
  40cfd7:	jmp    0x40d01b
  40cfd9:	mov    eax,0x8007000e
  40cfde:	jmp    0x40d01b
  40cfe0:	call   QWORD PTR [rip+0x401ba]        # 0x44d1a0
  40cfe6:	mov    rcx,QWORD PTR [rdi+0x68]
  40cfea:	test   rcx,rcx
  40cfed:	mov    r11d,eax
  40cff0:	je     0x40d001
  40cff2:	mov    r9,QWORD PTR [rcx]
  40cff5:	mov    rdx,QWORD PTR [rdi+0x70]
  40cff9:	mov    r8d,eax
  40cffc:	call   QWORD PTR [r9]
  40cfff:	jmp    0x40d01b
  40d001:	test   eax,eax
  40d003:	jne    0x40d00c
  40d005:	mov    eax,0x80004005
  40d00a:	jmp    0x40d01b
  40d00c:	movzx  eax,ax
  40d00f:	or     eax,0x80070000
  40d014:	test   r11d,r11d
  40d017:	cmovle eax,r11d
  40d01b:	add    rsp,0x20
  40d01f:	pop    r15
  40d021:	pop    r13
  40d023:	pop    r12
  40d025:	pop    rdi
  40d026:	pop    rsi
  40d027:	pop    rbp
  40d028:	pop    rbx
  40d029:	ret    
  40d02a:	int3   
  40d02b:	int3   
  40d02c:	xor    edx,edx
  40d02e:	lea    rax,[rip+0x40ecb]        # 0x44df00
  40d035:	mov    DWORD PTR [rcx+0x20],edx
  40d038:	mov    QWORD PTR [rcx],rax
  40d03b:	lea    rax,[rip+0x40e9e]        # 0x44dee0
  40d042:	mov    QWORD PTR [rcx+0x8],rax
  40d046:	lea    rax,[rip+0x40e73]        # 0x44dec0
  40d04d:	mov    QWORD PTR [rcx+0x10],rax
  40d051:	lea    rax,[rip+0x40e48]        # 0x44dea0
  40d058:	mov    QWORD PTR [rcx+0x18],rax
  40d05c:	mov    QWORD PTR [rcx+0x28],0xffffffffffffffff
  40d064:	mov    QWORD PTR [rcx+0x40],rdx
  40d068:	mov    QWORD PTR [rcx+0x48],rdx
  40d06c:	mov    QWORD PTR [rcx+0x58],rdx
  40d070:	mov    DWORD PTR [rcx+0x60],edx
  40d073:	mov    BYTE PTR [rcx+0x64],dl
  40d076:	mov    QWORD PTR [rcx+0x68],rdx
  40d07a:	mov    QWORD PTR [rcx+0x70],rdx
  40d07e:	mov    rax,rcx
  40d081:	ret    
  40d082:	int3   
  40d083:	int3   
  40d084:	test   r8d,r8d
  40d087:	je     0x40d0a3
  40d089:	dec    r8d
  40d08c:	je     0x40d09f
  40d08e:	dec    r8d
  40d091:	je     0x40d099
  40d093:	mov    eax,0x80030001
  40d098:	ret    
  40d099:	add    rdx,QWORD PTR [rcx+0x28]
  40d09d:	jmp    0x40d0a3
  40d09f:	add    rdx,QWORD PTR [rcx+0x18]
  40d0a3:	test   rdx,rdx
  40d0a6:	jns    0x40d0ae
  40d0a8:	mov    eax,0x80070083
  40d0ad:	ret    
  40d0ae:	test   r9,r9
  40d0b1:	mov    QWORD PTR [rcx+0x18],rdx
  40d0b5:	je     0x40d0ba
  40d0b7:	mov    QWORD PTR [r9],rdx
  40d0ba:	xor    eax,eax
  40d0bc:	ret    
  40d0bd:	int3   
  40d0be:	int3   
  40d0bf:	int3   
  40d0c0:	rex.W push rbx
  40d0c2:	push   rdi
  40d0c3:	sub    rsp,0x28
  40d0c7:	mov    r10,QWORD PTR [rcx+0x18]
  40d0cb:	mov    eax,r8d
  40d0ce:	mov    rbx,r9
  40d0d1:	sub    r10,QWORD PTR [rcx+0x20]
  40d0d5:	xor    r9d,r9d
  40d0d8:	mov    rdi,rcx
  40d0db:	cmp    rax,r10
  40d0de:	mov    DWORD PTR [rsp+0x50],r9d
  40d0e3:	cmova  r8d,r10d
  40d0e7:	xor    eax,eax
  40d0e9:	test   r8d,r8d
  40d0ec:	je     0x40d10f
  40d0ee:	mov    rcx,QWORD PTR [rcx+0x10]
  40d0f2:	lea    r9,[rsp+0x50]
  40d0f7:	mov    rax,QWORD PTR [rcx]
  40d0fa:	call   QWORD PTR [rax+0x18]
  40d0fd:	mov    r9d,DWORD PTR [rsp+0x50]
  40d102:	add    QWORD PTR [rdi+0x20],r9
  40d106:	test   r9d,r9d
  40d109:	jne    0x40d10f
  40d10b:	mov    BYTE PTR [rdi+0x28],0x1
  40d10f:	test   rbx,rbx
  40d112:	je     0x40d117
  40d114:	mov    DWORD PTR [rbx],r9d
  40d117:	add    rsp,0x28
  40d11b:	pop    rdi
  40d11c:	pop    rbx
  40d11d:	ret    
  40d11e:	int3   
  40d11f:	int3   
  40d120:	rex.W push rbx
  40d122:	push   rsi
  40d123:	push   rdi
  40d124:	sub    rsp,0x20
  40d128:	test   r9,r9
  40d12b:	mov    rdi,r9
  40d12e:	mov    rsi,rdx
  40d131:	mov    rbx,rcx
  40d134:	je     0x40d13d
  40d136:	mov    DWORD PTR [r9],0x0
  40d13d:	mov    r9,QWORD PTR [rcx+0x18]
  40d141:	mov    rcx,QWORD PTR [rcx+0x28]
  40d145:	cmp    r9,rcx
  40d148:	jb     0x40d14e
  40d14a:	xor    eax,eax
  40d14c:	jmp    0x40d1b0
  40d14e:	sub    rcx,r9
  40d151:	mov    eax,r8d
  40d154:	cmp    rax,rcx
  40d157:	mov    rax,QWORD PTR [rbx+0x30]
  40d15b:	cmova  r8d,ecx
  40d15f:	lea    rdx,[r9+rax*1]
  40d163:	cmp    rdx,QWORD PTR [rbx+0x20]
  40d167:	mov    DWORD PTR [rsp+0x50],r8d
  40d16c:	je     0x40d18b
  40d16e:	mov    rcx,QWORD PTR [rbx+0x10]
  40d172:	mov    QWORD PTR [rbx+0x20],rdx
  40d176:	xor    r9d,r9d
  40d179:	mov    rax,QWORD PTR [rcx]
  40d17c:	xor    r8d,r8d
  40d17f:	call   QWORD PTR [rax+0x20]
  40d182:	test   eax,eax
  40d184:	jne    0x40d1b0
  40d186:	mov    r8d,DWORD PTR [rsp+0x50]
  40d18b:	mov    rcx,QWORD PTR [rbx+0x10]
  40d18f:	lea    r9,[rsp+0x50]
  40d194:	mov    rdx,rsi
  40d197:	mov    rax,QWORD PTR [rcx]
  40d19a:	call   QWORD PTR [rax+0x18]
  40d19d:	test   rdi,rdi
  40d1a0:	mov    ecx,DWORD PTR [rsp+0x50]
  40d1a4:	je     0x40d1a8
  40d1a6:	mov    DWORD PTR [rdi],ecx
  40d1a8:	add    QWORD PTR [rbx+0x20],rcx
  40d1ac:	add    QWORD PTR [rbx+0x18],rcx
  40d1b0:	add    rsp,0x20
  40d1b4:	pop    rdi
  40d1b5:	pop    rsi
  40d1b6:	pop    rbx
  40d1b7:	ret    
  40d1b8:	mov    DWORD PTR [rsp+0x18],r8d
  40d1bd:	push   rbx
  40d1be:	push   rdi
  40d1bf:	sub    rsp,0x28
  40d1c3:	mov    rdi,r9
  40d1c6:	xor    r9d,r9d
  40d1c9:	mov    rbx,rcx
  40d1cc:	test   rdi,rdi
  40d1cf:	je     0x40d1d4
  40d1d1:	mov    DWORD PTR [rdi],r9d
  40d1d4:	mov    eax,r8d
  40d1d7:	cmp    rax,QWORD PTR [rcx+0x18]
  40d1db:	jbe    0x40d209
  40d1dd:	cmp    QWORD PTR [rcx+0x18],r9
  40d1e1:	jne    0x40d200
  40d1e3:	cmp    BYTE PTR [rcx+0x21],r9b
  40d1e7:	mov    BYTE PTR [rcx+0x20],0x1
  40d1eb:	jne    0x40d1f4
  40d1ed:	mov    eax,0x80004005
  40d1f2:	jmp    0x40d237
  40d1f4:	test   rdi,rdi
  40d1f7:	je     0x40d1fc
  40d1f9:	mov    DWORD PTR [rdi],r8d
  40d1fc:	xor    eax,eax
  40d1fe:	jmp    0x40d237
  40d200:	mov    r8d,DWORD PTR [rcx+0x18]
  40d204:	mov    DWORD PTR [rsp+0x50],r8d
  40d209:	mov    rcx,QWORD PTR [rcx+0x10]
  40d20d:	test   rcx,rcx
  40d210:	je     0x40d225
  40d212:	mov    rax,QWORD PTR [rcx]
  40d215:	lea    r9,[rsp+0x50]
  40d21a:	call   QWORD PTR [rax+0x18]
  40d21d:	mov    r8d,DWORD PTR [rsp+0x50]
  40d222:	mov    r9d,eax
  40d225:	mov    ecx,r8d
  40d228:	sub    QWORD PTR [rbx+0x18],rcx
  40d22c:	test   rdi,rdi
  40d22f:	je     0x40d234
  40d231:	mov    DWORD PTR [rdi],r8d
  40d234:	mov    eax,r9d
  40d237:	add    rsp,0x28
  40d23b:	pop    rdi
  40d23c:	pop    rbx
  40d23d:	ret    
  40d23e:	int3   
  40d23f:	int3   
  40d240:	rex.W push rbx
  40d242:	push   rbp
  40d243:	push   rsi
  40d244:	push   rdi
  40d245:	sub    rsp,0x28
  40d249:	test   r9,r9
  40d24c:	mov    rdi,r9
  40d24f:	mov    rbp,rdx
  40d252:	mov    rbx,rcx
  40d255:	je     0x40d25e
  40d257:	mov    DWORD PTR [r9],0x0
  40d25e:	mov    r9,QWORD PTR [rcx+0x18]
  40d262:	mov    rcx,QWORD PTR [rcx+0x28]
  40d266:	cmp    r9,rcx
  40d269:	jb     0x40d272
  40d26b:	xor    eax,eax
  40d26d:	jmp    0x40d31f
  40d272:	sub    rcx,r9
  40d275:	mov    eax,r8d
  40d278:	cmp    rcx,rax
  40d27b:	mov    rax,QWORD PTR [rbx+0x30]
  40d27f:	cmovb  r8d,ecx
  40d283:	lea    rdx,[r9+rax*1]
  40d287:	xor    esi,esi
  40d289:	mov    rcx,rdx
  40d28c:	mov    DWORD PTR [rsp+0x60],r8d
  40d291:	sub    rcx,QWORD PTR [rbx+0x48]
  40d295:	cmp    rdx,QWORD PTR [rbx+0x48]
  40d299:	jb     0x40d2ce
  40d29b:	mov    rax,QWORD PTR [rbx+0x40]
  40d29f:	cmp    rcx,rax
  40d2a2:	ja     0x40d2ce
  40d2a4:	mov    r9d,r8d
  40d2a7:	sub    rax,rcx
  40d2aa:	cmp    r9,rax
  40d2ad:	ja     0x40d2ce
  40d2af:	test   r8d,r8d
  40d2b2:	je     0x40d30e
  40d2b4:	mov    rax,QWORD PTR [rbx+0x38]
  40d2b8:	mov    r8,r9
  40d2bb:	lea    rdx,[rcx+rax*1]
  40d2bf:	mov    rcx,rbp
  40d2c2:	call   0x44b480
  40d2c7:	mov    r8d,DWORD PTR [rsp+0x60]
  40d2cc:	jmp    0x40d30e
  40d2ce:	cmp    rdx,QWORD PTR [rbx+0x20]
  40d2d2:	je     0x40d2f1
  40d2d4:	mov    rcx,QWORD PTR [rbx+0x10]
  40d2d8:	mov    QWORD PTR [rbx+0x20],rdx
  40d2dc:	xor    r9d,r9d
  40d2df:	mov    rax,QWORD PTR [rcx]
  40d2e2:	xor    r8d,r8d
  40d2e5:	call   QWORD PTR [rax+0x20]
  40d2e8:	test   eax,eax
  40d2ea:	jne    0x40d31f
  40d2ec:	mov    r8d,DWORD PTR [rsp+0x60]
  40d2f1:	mov    rcx,QWORD PTR [rbx+0x10]
  40d2f5:	lea    r9,[rsp+0x60]
  40d2fa:	mov    rdx,rbp
  40d2fd:	mov    rax,QWORD PTR [rcx]
  40d300:	call   QWORD PTR [rax+0x18]
  40d303:	mov    r8d,DWORD PTR [rsp+0x60]
  40d308:	add    QWORD PTR [rbx+0x20],r8
  40d30c:	mov    esi,eax
  40d30e:	test   rdi,rdi
  40d311:	je     0x40d316
  40d313:	mov    DWORD PTR [rdi],r8d
  40d316:	mov    ecx,r8d
  40d319:	mov    eax,esi
  40d31b:	add    QWORD PTR [rbx+0x18],rcx
  40d31f:	add    rsp,0x28
  40d323:	pop    rdi
  40d324:	pop    rsi
  40d325:	pop    rbp
  40d326:	pop    rbx
  40d327:	ret    
  40d328:	rex.W push rbx
  40d32a:	push   rdi
  40d32b:	sub    rsp,0x28
  40d32f:	mov    rbx,rcx
  40d332:	mov    rcx,QWORD PTR [rcx+0x20]
  40d336:	mov    rdi,r9
  40d339:	mov    rax,QWORD PTR [rcx]
  40d33c:	lea    r9,[rsp+0x40]
  40d341:	call   QWORD PTR [rax+0x18]
  40d344:	test   rdi,rdi
  40d347:	mov    ecx,DWORD PTR [rsp+0x40]
  40d34b:	je     0x40d34f
  40d34d:	mov    DWORD PTR [rdi],ecx
  40d34f:	add    QWORD PTR [rbx+0x10],rcx
  40d353:	mov    rcx,QWORD PTR [rbx+0x10]
  40d357:	cmp    QWORD PTR [rbx+0x18],rcx
  40d35b:	jae    0x40d361
  40d35d:	mov    QWORD PTR [rbx+0x18],rcx
  40d361:	add    rsp,0x28
  40d365:	pop    rdi
  40d366:	pop    rbx
  40d367:	ret    
  40d368:	sub    rsp,0x28
  40d36c:	test   r8d,r8d
  40d36f:	mov    r10,rcx
  40d372:	je     0x40d38f
  40d374:	dec    r8d
  40d377:	je     0x40d38b
  40d379:	dec    r8d
  40d37c:	je     0x40d385
  40d37e:	mov    eax,0x80030001
  40d383:	jmp    0x40d3bf
  40d385:	add    rdx,QWORD PTR [rcx+0x18]
  40d389:	jmp    0x40d38f
  40d38b:	add    rdx,QWORD PTR [rcx+0x10]
  40d38f:	test   rdx,rdx
  40d392:	jns    0x40d39b
  40d394:	mov    eax,0x80070083
  40d399:	jmp    0x40d3bf
  40d39b:	test   r9,r9
  40d39e:	mov    QWORD PTR [rcx+0x10],rdx
  40d3a2:	je     0x40d3a7
  40d3a4:	mov    QWORD PTR [r9],rdx
  40d3a7:	mov    rcx,QWORD PTR [rcx+0x20]
  40d3ab:	mov    rdx,QWORD PTR [r10+0x28]
  40d3af:	xor    r9d,r9d
  40d3b2:	mov    rax,QWORD PTR [rcx]
  40d3b5:	add    rdx,QWORD PTR [r10+0x10]
  40d3b9:	xor    r8d,r8d
  40d3bc:	call   QWORD PTR [rax+0x20]
  40d3bf:	add    rsp,0x28
  40d3c3:	ret    
  40d3c4:	mov    rax,QWORD PTR [rcx+0x28]
  40d3c8:	mov    QWORD PTR [rcx+0x18],rdx
  40d3cc:	mov    rcx,QWORD PTR [rcx+0x20]
  40d3d0:	mov    r8,QWORD PTR [rcx]
  40d3d3:	add    rdx,rax
  40d3d6:	rex.WB jmp QWORD PTR [r8+0x28]
  40d3da:	int3   
  40d3db:	int3   
  40d3dc:	rex.W push rbx
  40d3de:	push   rbp
  40d3df:	push   rsi
  40d3e0:	push   rdi
  40d3e1:	push   r12
  40d3e3:	sub    rsp,0x30
  40d3e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40d3f0:	mov    rsi,r9
  40d3f3:	mov    r12,r8
  40d3f6:	mov    rbp,rdx
  40d3f9:	mov    rdi,rcx
  40d3fc:	mov    QWORD PTR [r9],0x0
  40d403:	mov    ecx,0x38
  40d408:	call   0x402130
  40d40d:	mov    rbx,rax
  40d410:	test   rax,rax
  40d413:	je     0x40d430
  40d415:	mov    DWORD PTR [rax+0x8],0x0
  40d41c:	lea    rax,[rip+0x40b0d]        # 0x44df30
  40d423:	mov    QWORD PTR [rbx],rax
  40d426:	mov    QWORD PTR [rbx+0x10],0x0
  40d42e:	jmp    0x40d432
  40d430:	xor    ebx,ebx
  40d432:	mov    QWORD PTR [rsp+0x60],rbx
  40d437:	test   rbx,rbx
  40d43a:	je     0x40d446
  40d43c:	mov    rax,QWORD PTR [rbx]
  40d43f:	mov    rcx,rbx
  40d442:	call   QWORD PTR [rax+0x8]
  40d445:	nop
  40d446:	test   rdi,rdi
  40d449:	je     0x40d454
  40d44b:	mov    rax,QWORD PTR [rdi]
  40d44e:	mov    rcx,rdi
  40d451:	call   QWORD PTR [rax+0x8]
  40d454:	mov    rcx,QWORD PTR [rbx+0x10]
  40d458:	test   rcx,rcx
  40d45b:	je     0x40d463
  40d45d:	mov    rax,QWORD PTR [rcx]
  40d460:	call   QWORD PTR [rax+0x10]
  40d463:	mov    QWORD PTR [rbx+0x10],rdi
  40d467:	mov    QWORD PTR [rbx+0x30],rbp
  40d46b:	mov    QWORD PTR [rbx+0x20],rbp
  40d46f:	mov    QWORD PTR [rbx+0x18],0x0
  40d477:	mov    QWORD PTR [rbx+0x28],r12
  40d47b:	mov    rcx,QWORD PTR [rbx+0x10]
  40d47f:	mov    rax,QWORD PTR [rcx]
  40d482:	xor    r9d,r9d
  40d485:	xor    r8d,r8d
  40d488:	mov    rdx,rbp
  40d48b:	call   QWORD PTR [rax+0x20]
  40d48e:	mov    edi,eax
  40d490:	test   eax,eax
  40d492:	je     0x40d4a1
  40d494:	mov    rdx,QWORD PTR [rbx]
  40d497:	mov    rcx,rbx
  40d49a:	call   QWORD PTR [rdx+0x10]
  40d49d:	mov    eax,edi
  40d49f:	jmp    0x40d4b7
  40d4a1:	mov    rax,QWORD PTR [rbx]
  40d4a4:	xor    r9d,r9d
  40d4a7:	xor    r8d,r8d
  40d4aa:	xor    edx,edx
  40d4ac:	mov    rcx,rbx
  40d4af:	call   QWORD PTR [rax+0x20]
  40d4b2:	mov    QWORD PTR [rsi],rbx
  40d4b5:	xor    eax,eax
  40d4b7:	add    rsp,0x30
  40d4bb:	pop    r12
  40d4bd:	pop    rdi
  40d4be:	pop    rsi
  40d4bf:	pop    rbp
  40d4c0:	pop    rbx
  40d4c1:	ret    
  40d4c2:	int3   
  40d4c3:	int3   
  40d4c4:	int3   
  40d4c5:	int3   
  40d4c6:	int3   
  40d4c7:	int3   
  40d4c8:	int3   
  40d4c9:	int3   
  40d4ca:	int3   
  40d4cb:	int3   
  40d4cc:	rex.W push rbp
  40d4ce:	sub    rsp,0x20
  40d4d2:	mov    rbp,rdx
  40d4d5:	lea    rcx,[rbp+0x60]
  40d4d9:	call   0x4176b4
  40d4de:	add    rsp,0x20
  40d4e2:	pop    rbp
  40d4e3:	ret    
  40d4e4:	rex.W push rbx
  40d4e6:	push   rdi
  40d4e7:	sub    rsp,0x28
  40d4eb:	cmp    DWORD PTR [rcx+0x8],0x0
  40d4ef:	mov    rdi,rdx
  40d4f2:	mov    rbx,rcx
  40d4f5:	je     0x40d540
  40d4f7:	mov    rcx,QWORD PTR [rcx]
  40d4fa:	cmp    WORD PTR [rcx],0x2b
  40d4fe:	jne    0x40d507
  40d500:	cmp    WORD PTR [rcx+0x2],0x0
  40d505:	je     0x40d540
  40d507:	lea    rdx,[rip+0x40bd2]        # 0x44e0e0
  40d50e:	call   0x402864
  40d513:	test   al,al
  40d515:	jne    0x40d540
  40d517:	mov    rcx,QWORD PTR [rbx]
  40d51a:	cmp    WORD PTR [rcx],0x2d
  40d51e:	jne    0x40d527
  40d520:	cmp    WORD PTR [rcx+0x2],0x0
  40d525:	je     0x40d537
  40d527:	lea    rdx,[rip+0x40bae]        # 0x44e0dc
  40d52e:	call   0x402864
  40d533:	test   al,al
  40d535:	je     0x40d53c
  40d537:	mov    BYTE PTR [rdi],0x0
  40d53a:	jmp    0x40d543
  40d53c:	xor    al,al
  40d53e:	jmp    0x40d545
  40d540:	mov    BYTE PTR [rdi],0x1
  40d543:	mov    al,0x1
  40d545:	add    rsp,0x28
  40d549:	pop    rdi
  40d54a:	pop    rbx
  40d54b:	ret    
  40d54c:	rex.W push rbx
  40d54e:	sub    rsp,0x30
  40d552:	movzx  eax,WORD PTR [rcx]
  40d555:	mov    rbx,rdx
  40d558:	test   eax,eax
  40d55a:	je     0x40d5ae
  40d55c:	cmp    eax,0x8
  40d55f:	je     0x40d579
  40d561:	cmp    eax,0xb
  40d564:	je     0x40d56d
  40d566:	mov    eax,0x80070057
  40d56b:	jmp    0x40d5b3
  40d56d:	cmp    WORD PTR [rcx+0x8],0x0
  40d572:	setne  al
  40d575:	mov    BYTE PTR [rdx],al
  40d577:	jmp    0x40d5b1
  40d579:	mov    rdx,QWORD PTR [rcx+0x8]
  40d57d:	lea    rcx,[rsp+0x20]
  40d582:	call   0x4031c0
  40d587:	lea    rcx,[rsp+0x20]
  40d58c:	mov    rdx,rbx
  40d58f:	call   0x40d4e4
  40d594:	mov    rcx,QWORD PTR [rsp+0x20]
  40d599:	neg    al
  40d59b:	sbb    ebx,ebx
  40d59d:	not    ebx
  40d59f:	and    ebx,0x80070057
  40d5a5:	call   0x40215c
  40d5aa:	mov    eax,ebx
  40d5ac:	jmp    0x40d5b3
  40d5ae:	mov    BYTE PTR [rdx],0x1
  40d5b1:	xor    eax,eax
  40d5b3:	add    rsp,0x30
  40d5b7:	pop    rbx
  40d5b8:	ret    
  40d5b9:	int3   
  40d5ba:	int3   
  40d5bb:	int3   
  40d5bc:	rex.W push rbx
  40d5be:	push   rdi
  40d5bf:	sub    rsp,0x28
  40d5c3:	mov    rbx,QWORD PTR [rcx]
  40d5c6:	mov    rdi,rdx
  40d5c9:	lea    rdx,[rsp+0x40]
  40d5ce:	mov    rcx,rbx
  40d5d1:	call   0x403e48
  40d5d6:	mov    DWORD PTR [rdi],eax
  40d5d8:	mov    rax,QWORD PTR [rsp+0x40]
  40d5dd:	sub    rax,rbx
  40d5e0:	sar    rax,1
  40d5e3:	add    rsp,0x28
  40d5e7:	pop    rdi
  40d5e8:	pop    rbx
  40d5e9:	ret    
  40d5ea:	int3   
  40d5eb:	int3   
  40d5ec:	rex.W push rbx
  40d5ee:	push   rdi
  40d5ef:	sub    rsp,0x28
  40d5f3:	cmp    WORD PTR [rdx],0x13
  40d5f7:	mov    rbx,r8
  40d5fa:	jne    0x40d60a
  40d5fc:	cmp    DWORD PTR [rcx+0x8],0x0
  40d600:	jne    0x40d625
  40d602:	mov    eax,DWORD PTR [rdx+0x8]
  40d605:	mov    DWORD PTR [r8],eax
  40d608:	jmp    0x40d632
  40d60a:	cmp    WORD PTR [rdx],0x0
  40d60e:	jne    0x40d625
  40d610:	mov    edi,DWORD PTR [rcx+0x8]
  40d613:	test   edi,edi
  40d615:	je     0x40d632
  40d617:	lea    rdx,[rsp+0x48]
  40d61c:	call   0x40d5bc
  40d621:	cmp    eax,edi
  40d623:	je     0x40d62c
  40d625:	mov    eax,0x80070057
  40d62a:	jmp    0x40d634
  40d62c:	mov    eax,DWORD PTR [rsp+0x48]
  40d630:	mov    DWORD PTR [rbx],eax
  40d632:	xor    eax,eax
  40d634:	add    rsp,0x28
  40d638:	pop    rdi
  40d639:	pop    rbx
  40d63a:	ret    
  40d63b:	int3   
  40d63c:	rex.W push rbx
  40d63e:	push   rdi
  40d63f:	sub    rsp,0x28
  40d643:	cmp    DWORD PTR [rcx+0x8],0x0
  40d647:	mov    rbx,r9
  40d64a:	mov    edi,r8d
  40d64d:	mov    rax,rdx
  40d650:	jne    0x40d684
  40d652:	cmp    WORD PTR [rdx],0x13
  40d656:	je     0x40d67a
  40d658:	lea    rdx,[rsp+0x40]
  40d65d:	mov    rcx,rax
  40d660:	call   0x40d54c
  40d665:	test   eax,eax
  40d667:	jne    0x40d699
  40d669:	cmp    BYTE PTR [rsp+0x40],0x0
  40d66e:	mov    eax,0x1
  40d673:	cmovne eax,edi
  40d676:	mov    DWORD PTR [rbx],eax
  40d678:	jmp    0x40d680
  40d67a:	mov    eax,DWORD PTR [rdx+0x8]
  40d67d:	mov    DWORD PTR [r9],eax
  40d680:	xor    eax,eax
  40d682:	jmp    0x40d699
  40d684:	cmp    WORD PTR [rdx],0x0
  40d688:	je     0x40d691
  40d68a:	mov    eax,0x80070057
  40d68f:	jmp    0x40d699
  40d691:	mov    r8,rbx
  40d694:	call   0x40d5ec
  40d699:	add    rsp,0x28
  40d69d:	pop    rdi
  40d69e:	pop    rbx
  40d69f:	ret    
  40d6a0:	rex.W push rbx
  40d6a2:	push   rdi
  40d6a3:	sub    rsp,0x28
  40d6a7:	mov    rdi,rcx
  40d6aa:	mov    rcx,QWORD PTR [rcx]
  40d6ad:	mov    rbx,rdx
  40d6b0:	lea    rdx,[rsp+0x40]
  40d6b5:	call   0x403e48
  40d6ba:	mov    r8,QWORD PTR [rdi]
  40d6bd:	mov    edx,eax
  40d6bf:	mov    rax,QWORD PTR [rsp+0x40]
  40d6c4:	sub    rax,r8
  40d6c7:	sar    rax,1
  40d6ca:	test   eax,eax
  40d6cc:	je     0x40d771
  40d6d2:	lea    ecx,[rax+0x1]
  40d6d5:	cmp    DWORD PTR [rdi+0x8],ecx
  40d6d8:	ja     0x40d771
  40d6de:	cmp    DWORD PTR [rdi+0x8],eax
  40d6e1:	jne    0x40d709
  40d6e3:	cmp    edx,0x40
  40d6e6:	jae    0x40d771
  40d6ec:	mov    r9d,0x20
  40d6f2:	mov    ecx,edx
  40d6f4:	cmp    edx,r9d
  40d6f7:	lea    edx,[r9-0x1f]
  40d6fb:	jae    0x40d762
  40d6fd:	shl    edx,cl
  40d6ff:	mov    rcx,rbx
  40d702:	call   0x40b288
  40d707:	jmp    0x40d76d
  40d709:	mov    eax,eax
  40d70b:	mov    r9d,0x20
  40d711:	movzx  ecx,WORD PTR [r8+rax*2]
  40d716:	lea    eax,[rcx-0x41]
  40d719:	cmp    ax,0x19
  40d71d:	ja     0x40d723
  40d71f:	add    cx,r9w
  40d723:	movzx  eax,cx
  40d726:	cmp    eax,0x62
  40d729:	je     0x40d6ff
  40d72b:	cmp    eax,0x67
  40d72e:	je     0x40d748
  40d730:	cmp    eax,0x6b
  40d733:	je     0x40d740
  40d735:	cmp    eax,0x6d
  40d738:	jne    0x40d771
  40d73a:	lea    r8d,[rax-0x59]
  40d73e:	jmp    0x40d74e
  40d740:	mov    r8d,0xa
  40d746:	jmp    0x40d74e
  40d748:	mov    r8d,0x1e
  40d74e:	sub    r9d,r8d
  40d751:	mov    eax,0x1
  40d756:	mov    cl,r9b
  40d759:	shl    eax,cl
  40d75b:	mov    ecx,r8d
  40d75e:	cmp    edx,eax
  40d760:	jmp    0x40d6fb
  40d762:	shl    rdx,cl
  40d765:	mov    rcx,rbx
  40d768:	call   0x40b2b4
  40d76d:	xor    eax,eax
  40d76f:	jmp    0x40d776
  40d771:	mov    eax,0x80070057
  40d776:	add    rsp,0x28
  40d77a:	pop    rdi
  40d77b:	pop    rbx
  40d77c:	ret    
  40d77d:	int3   
  40d77e:	int3   
  40d77f:	int3   
  40d780:	rex.W push rbx
  40d782:	push   rsi
  40d783:	push   rdi
  40d784:	sub    rsp,0x40
  40d788:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  40d791:	mov    esi,edx
  40d793:	mov    rbx,rcx
  40d796:	mov    DWORD PTR [rcx+0x14],esi
  40d799:	xor    edi,edi
  40d79b:	mov    DWORD PTR [rcx+0x10],edi
  40d79e:	mov    ecx,edx
  40d7a0:	shl    rcx,0x2
  40d7a4:	call   0x402130
  40d7a9:	mov    QWORD PTR [rbx],rax
  40d7ac:	lea    ecx,[rsi+rsi*2]
  40d7af:	shl    ecx,0x3
  40d7b2:	add    rcx,0x8
  40d7b6:	call   0x402130
  40d7bb:	mov    QWORD PTR [rsp+0x60],rax
  40d7c0:	cmp    rax,rdi
  40d7c3:	je     0x40d7ef
  40d7c5:	mov    DWORD PTR [rax],esi
  40d7c7:	lea    rdi,[rax+0x8]
  40d7cb:	lea    rax,[rip+0xffffffffffffe05e]        # 0x40b830
  40d7d2:	mov    QWORD PTR [rsp+0x20],rax
  40d7d7:	lea    r9,[rip+0xffffffffffffe03e]        # 0x40b81c
  40d7de:	mov    r8d,esi
  40d7e1:	mov    edx,0x18
  40d7e6:	mov    rcx,rdi
  40d7e9:	call   0x44b490
  40d7ee:	nop
  40d7ef:	mov    QWORD PTR [rbx+0x8],rdi
  40d7f3:	mov    rax,rbx
  40d7f6:	add    rsp,0x40
  40d7fa:	pop    rdi
  40d7fb:	pop    rsi
  40d7fc:	pop    rbx
  40d7fd:	ret    
  40d7fe:	int3   
  40d7ff:	int3   
  40d800:	rex.W push rbp
  40d802:	sub    rsp,0x20
  40d806:	mov    rbp,rdx
  40d809:	mov    rcx,QWORD PTR [rbp+0x60]
  40d80d:	call   0x40215c
  40d812:	add    rsp,0x20
  40d816:	pop    rbp
  40d817:	ret    
  40d818:	rex.W push rbx
  40d81a:	sub    rsp,0x20
  40d81e:	mov    eax,DWORD PTR [rcx+0x10]
  40d821:	mov    r8,rdx
  40d824:	mov    rbx,rcx
  40d827:	cmp    eax,DWORD PTR [rcx+0x14]
  40d82a:	jb     0x40d846
  40d82c:	lea    rdx,[rip+0x5989d]        # 0x4670d0
  40d833:	lea    rcx,[rsp+0x30]
  40d838:	mov    DWORD PTR [rsp+0x30],0x1
  40d840:	call   0x44b71e
  40d845:	int3   
  40d846:	mov    rcx,QWORD PTR [rcx]
  40d849:	mov    rdx,rax
  40d84c:	mov    eax,DWORD PTR [r8]
  40d84f:	mov    DWORD PTR [rcx+rdx*4],eax
  40d852:	mov    eax,DWORD PTR [rbx+0x10]
  40d855:	lea    rdx,[r8+0x8]
  40d859:	lea    rcx,[rax+rax*2]
  40d85d:	mov    rax,QWORD PTR [rbx+0x8]
  40d861:	lea    rcx,[rax+rcx*8]
  40d865:	call   0x40b188
  40d86a:	inc    DWORD PTR [rbx+0x10]
  40d86d:	add    rsp,0x20
  40d871:	pop    rbx
  40d872:	ret    
  40d873:	int3   
  40d874:	add    rcx,0x8
  40d878:	jmp    0x40b028
  40d87d:	int3   
  40d87e:	int3   
  40d87f:	int3   
  40d880:	rex.W push rbx
  40d882:	sub    rsp,0x20
  40d886:	cmp    dx,WORD PTR [rcx]
  40d889:	mov    rbx,r8
  40d88c:	je     0x40d8b6
  40d88e:	cmp    dx,0xb
  40d892:	jne    0x40d8b0
  40d894:	lea    rdx,[rsp+0x38]
  40d899:	call   0x40d54c
  40d89e:	test   eax,eax
  40d8a0:	jne    0x40d8c5
  40d8a2:	mov    dl,BYTE PTR [rsp+0x38]
  40d8a6:	mov    rcx,rbx
  40d8a9:	call   0x40b254
  40d8ae:	jmp    0x40d8c1
  40d8b0:	cmp    WORD PTR [rcx],0x0
  40d8b4:	jne    0x40d8c5
  40d8b6:	mov    rdx,rcx
  40d8b9:	mov    rcx,rbx
  40d8bc:	call   0x40b188
  40d8c1:	mov    al,0x1
  40d8c3:	jmp    0x40d8c7
  40d8c5:	xor    al,al
  40d8c7:	add    rsp,0x20
  40d8cb:	pop    rbx
  40d8cc:	ret    
  40d8cd:	int3   
  40d8ce:	int3   
  40d8cf:	int3   
  40d8d0:	rex.W push rbx
  40d8d2:	push   rbp
  40d8d3:	push   rsi
  40d8d4:	push   rdi
  40d8d5:	push   r12
  40d8d7:	sub    rsp,0x20
  40d8db:	mov    rdi,rcx
  40d8de:	mov    rcx,QWORD PTR [rcx]
  40d8e1:	mov    r12,rdx
  40d8e4:	mov    dx,0x3d
  40d8e8:	mov    rbp,r8
  40d8eb:	call   0x4026e0
  40d8f0:	xor    ebx,ebx
  40d8f2:	cmp    eax,ebx
  40d8f4:	mov    esi,eax
  40d8f6:	jl     0x40d913
  40d8f8:	mov    rdx,QWORD PTR [rdi]
  40d8fb:	mov    r8d,eax
  40d8fe:	mov    rcx,r12
  40d901:	call   0x403488
  40d906:	mov    rax,QWORD PTR [rdi]
  40d909:	lea    r11d,[rsi+0x1]
  40d90d:	lea    rdx,[rax+r11*2]
  40d911:	jmp    0x40d947
  40d913:	cmp    DWORD PTR [rdi+0x8],ebx
  40d916:	jbe    0x40d932
  40d918:	mov    rax,QWORD PTR [rdi]
  40d91b:	cmp    WORD PTR [rax],0x30
  40d91f:	jb     0x40d927
  40d921:	cmp    WORD PTR [rax],0x39
  40d925:	jbe    0x40d932
  40d927:	inc    ebx
  40d929:	add    rax,0x2
  40d92d:	cmp    ebx,DWORD PTR [rdi+0x8]
  40d930:	jb     0x40d91b
  40d932:	mov    rdx,QWORD PTR [rdi]
  40d935:	mov    r8d,ebx
  40d938:	mov    rcx,r12
  40d93b:	call   0x403488
  40d940:	mov    rax,QWORD PTR [rdi]
  40d943:	lea    rdx,[rax+rbx*2]
  40d947:	mov    rcx,rbp
  40d94a:	add    rsp,0x20
  40d94e:	pop    r12
  40d950:	pop    rdi
  40d951:	pop    rsi
  40d952:	pop    rbp
  40d953:	pop    rbx
  40d954:	jmp    0x403290
  40d959:	int3   
  40d95a:	int3   
  40d95b:	int3   
  40d95c:	rex.W push rbx
  40d95e:	sub    rsp,0x20
  40d962:	mov    rbx,rcx
  40d965:	mov    rcx,QWORD PTR [rcx]
  40d968:	call   0x40215c
  40d96d:	mov    rcx,QWORD PTR [rbx+0x8]
  40d971:	test   rcx,rcx
  40d974:	je     0x40d996
  40d976:	lea    rbx,[rcx-0x8]
  40d97a:	lea    r9,[rip+0xffffffffffffdeaf]        # 0x40b830
  40d981:	mov    edx,0x18
  40d986:	mov    r8d,DWORD PTR [rbx]
  40d989:	call   0x44b5f0
  40d98e:	mov    rcx,rbx
  40d991:	call   0x40215c
  40d996:	add    rsp,0x20
  40d99a:	pop    rbx
  40d99b:	ret    
  40d99c:	rex.W push rbx
  40d99e:	push   rbp
  40d99f:	push   rsi
  40d9a0:	push   rdi
  40d9a1:	push   r12
  40d9a3:	sub    rsp,0x60
  40d9a7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40d9b0:	mov    rdi,r8
  40d9b3:	mov    r12,rdx
  40d9b6:	mov    rbp,rcx
  40d9b9:	xor    edx,edx
  40d9bb:	test   r8,r8
  40d9be:	setne  dl
  40d9c1:	add    edx,DWORD PTR [rcx+0x8]
  40d9c4:	lea    rcx,[rsp+0x28]
  40d9c9:	call   0x40d780
  40d9ce:	nop
  40d9cf:	xor    esi,esi
  40d9d1:	cmp    DWORD PTR [rbp+0x8],esi
  40d9d4:	jbe    0x40d9f5
  40d9d6:	xor    ebx,ebx
  40d9d8:	mov    rax,QWORD PTR [rbp+0x0]
  40d9dc:	mov    rdx,QWORD PTR [rbx+rax*1]
  40d9e0:	lea    rcx,[rsp+0x28]
  40d9e5:	call   0x40d818
  40d9ea:	inc    esi
  40d9ec:	add    rbx,0x8
  40d9f0:	cmp    esi,DWORD PTR [rbp+0x8]
  40d9f3:	jb     0x40d9d8
  40d9f5:	test   rdi,rdi
  40d9f8:	je     0x40da45
  40d9fa:	mov    BYTE PTR [rsp+0x44],0x0
  40d9ff:	mov    WORD PTR [rsp+0x48],0x0
  40da06:	mov    WORD PTR [rsp+0x4a],0x0
  40da0d:	mov    QWORD PTR [rsp+0x50],0x0
  40da16:	mov    DWORD PTR [rsp+0x40],0x10
  40da1e:	mov    rdx,QWORD PTR [rdi]
  40da21:	lea    rcx,[rsp+0x48]
  40da26:	call   0x40b2b4
  40da2b:	lea    rdx,[rsp+0x40]
  40da30:	lea    rcx,[rsp+0x28]
  40da35:	call   0x40d818
  40da3a:	nop
  40da3b:	lea    rcx,[rsp+0x48]
  40da40:	call   0x40b028
  40da45:	mov    rax,QWORD PTR [r12]
  40da49:	mov    r9d,DWORD PTR [rsp+0x38]
  40da4e:	mov    rdi,QWORD PTR [rsp+0x30]
  40da53:	mov    r8,rdi
  40da56:	mov    rdx,QWORD PTR [rsp+0x28]
  40da5b:	mov    rcx,r12
  40da5e:	call   QWORD PTR [rax+0x18]
  40da61:	mov    esi,eax
  40da63:	mov    rcx,QWORD PTR [rsp+0x28]
  40da68:	call   0x40215c
  40da6d:	test   rdi,rdi
  40da70:	je     0x40da93
  40da72:	lea    r9,[rip+0xffffffffffffddb7]        # 0x40b830
  40da79:	mov    r8d,DWORD PTR [rdi-0x8]
  40da7d:	mov    edx,0x18
  40da82:	mov    rcx,rdi
  40da85:	call   0x44b5f0
  40da8a:	lea    rcx,[rdi-0x8]
  40da8e:	call   0x40215c
  40da93:	mov    eax,esi
  40da95:	add    rsp,0x60
  40da99:	pop    r12
  40da9b:	pop    rdi
  40da9c:	pop    rsi
  40da9d:	pop    rbp
  40da9e:	pop    rbx
  40da9f:	ret    
  40daa0:	int3   
  40daa1:	int3   
  40daa2:	int3   
  40daa3:	int3   
  40daa4:	int3   
  40daa5:	int3   
  40daa6:	int3   
  40daa7:	int3   
  40daa8:	int3   
  40daa9:	int3   
  40daaa:	int3   
  40daab:	int3   
  40daac:	rex.W push rbp
  40daae:	sub    rsp,0x20
  40dab2:	mov    rbp,rdx
  40dab5:	lea    rcx,[rbp+0x28]
  40dab9:	call   0x40d95c
  40dabe:	add    rsp,0x20
  40dac2:	pop    rbp
  40dac3:	ret    
  40dac4:	int3   
  40dac5:	int3   
  40dac6:	int3   
  40dac7:	int3   
  40dac8:	int3   
  40dac9:	int3   
  40daca:	int3   
  40dacb:	int3   
  40dacc:	rex.W push rbp
  40dace:	sub    rsp,0x20
  40dad2:	mov    rbp,rdx
  40dad5:	lea    rcx,[rbp+0x40]
  40dad9:	call   0x40d874
  40dade:	add    rsp,0x20
  40dae2:	pop    rbp
  40dae3:	ret    
  40dae4:	mov    r8d,DWORD PTR [rcx+0x8]
  40dae8:	dec    r8d
  40daeb:	movsxd r9,r8d
  40daee:	js     0x40db0a
  40daf0:	mov    rax,QWORD PTR [rcx]
  40daf3:	lea    rcx,[rax+r9*8]
  40daf7:	mov    rax,QWORD PTR [rcx]
  40dafa:	cmp    DWORD PTR [rax],edx
  40dafc:	je     0x40db10
  40dafe:	dec    r8d
  40db01:	sub    rcx,0x8
  40db05:	dec    r9
  40db08:	jns    0x40daf7
  40db0a:	mov    eax,0xffffffff
  40db0f:	ret    
  40db10:	mov    eax,r8d
  40db13:	ret    
  40db14:	sub    rsp,0x28
  40db18:	mov    edx,0xf
  40db1d:	mov    r10,rcx
  40db20:	call   0x40dae4
  40db25:	test   eax,eax
  40db27:	jns    0x40db2e
  40db29:	lea    eax,[rdx-0xa]
  40db2c:	jmp    0x40db52
  40db2e:	mov    ecx,eax
  40db30:	mov    rax,QWORD PTR [r10]
  40db33:	mov    rdx,QWORD PTR [rax+rcx*8]
  40db37:	cmp    WORD PTR [rdx+0x8],0x13
  40db3c:	je     0x40db45
  40db3e:	mov    eax,0x9
  40db43:	jmp    0x40db52
  40db45:	mov    eax,DWORD PTR [rdx+0x10]
  40db48:	mov    ecx,0x9
  40db4d:	cmp    eax,ecx
  40db4f:	cmova  eax,ecx
  40db52:	add    rsp,0x28
  40db56:	ret    
  40db57:	int3   
  40db58:	rex.W push rbx
  40db5a:	push   rbp
  40db5b:	push   rsi
  40db5c:	push   rdi
  40db5d:	sub    rsp,0x28
  40db61:	mov    rbp,rcx
  40db64:	mov    ecx,0x20
  40db69:	mov    edi,r8d
  40db6c:	mov    esi,edx
  40db6e:	call   0x402130
  40db73:	mov    rbx,rax
  40db76:	xor    eax,eax
  40db78:	cmp    rbx,rax
  40db7b:	je     0x40db8e
  40db7d:	mov    BYTE PTR [rbx+0x4],al
  40db80:	mov    WORD PTR [rbx+0x8],ax
  40db84:	mov    WORD PTR [rbx+0xa],ax
  40db88:	mov    QWORD PTR [rbx+0x10],rax
  40db8c:	jmp    0x40db91
  40db8e:	mov    rbx,rax
  40db91:	mov    rdx,rbx
  40db94:	mov    rcx,rbp
  40db97:	call   0x4010c8
  40db9c:	lea    rcx,[rbx+0x8]
  40dba0:	mov    edx,edi
  40dba2:	mov    BYTE PTR [rbx+0x4],0x1
  40dba6:	mov    DWORD PTR [rbx],esi
  40dba8:	add    rsp,0x28
  40dbac:	pop    rdi
  40dbad:	pop    rsi
  40dbae:	pop    rbp
  40dbaf:	pop    rbx
  40dbb0:	jmp    0x40b288
  40dbb5:	int3   
  40dbb6:	int3   
  40dbb7:	int3   
  40dbb8:	rex.W push rbx
  40dbba:	push   rbp
  40dbbb:	push   rsi
  40dbbc:	push   rdi
  40dbbd:	push   r12
  40dbbf:	sub    rsp,0x60
  40dbc3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40dbcc:	mov    rdi,r8
  40dbcf:	mov    rbp,rdx
  40dbd2:	mov    r12,rcx
  40dbd5:	xor    ebx,ebx
  40dbd7:	lea    rsi,[rip+0x403aa]        # 0x44df88
  40dbde:	mov    rdx,QWORD PTR [rsi]
  40dbe1:	mov    rcx,QWORD PTR [rbp+0x0]
  40dbe5:	call   0x402864
  40dbea:	test   al,al
  40dbec:	jne    0x40dbfe
  40dbee:	inc    ebx
  40dbf0:	add    rsi,0x10
  40dbf4:	cmp    ebx,0x11
  40dbf7:	jb     0x40dbde
  40dbf9:	mov    ebx,0xffffffff
  40dbfe:	test   ebx,ebx
  40dc00:	jns    0x40dc0c
  40dc02:	mov    eax,0x80070057
  40dc07:	jmp    0x40dd99
  40dc0c:	mov    esi,ebx
  40dc0e:	shl    rsi,0x4
  40dc12:	lea    rax,[rip+0x40367]        # 0x44df80
  40dc19:	add    rsi,rax
  40dc1c:	mov    BYTE PTR [rsp+0x44],0x0
  40dc21:	mov    WORD PTR [rsp+0x48],0x0
  40dc28:	mov    WORD PTR [rsp+0x4a],0x0
  40dc2f:	mov    QWORD PTR [rsp+0x50],0x0
  40dc38:	mov    DWORD PTR [rsp+0x40],ebx
  40dc3c:	test   ebx,ebx
  40dc3e:	je     0x40dc6b
  40dc40:	cmp    ebx,0x2
  40dc43:	jbe    0x40dc4f
  40dc45:	cmp    ebx,0x4
  40dc48:	je     0x40dc4f
  40dc4a:	cmp    ebx,0x10
  40dc4d:	jne    0x40dc6b
  40dc4f:	lea    rdx,[rsp+0x48]
  40dc54:	mov    rcx,rdi
  40dc57:	call   0x40d6a0
  40dc5c:	mov    ebx,eax
  40dc5e:	test   eax,eax
  40dc60:	je     0x40dd46
  40dc66:	jmp    0x40dd8d
  40dc6b:	mov    WORD PTR [rsp+0x28],0x0
  40dc72:	mov    WORD PTR [rsp+0x2a],0x0
  40dc79:	mov    QWORD PTR [rsp+0x30],0x0
  40dc82:	cmp    WORD PTR [rsi],0x8
  40dc86:	jne    0x40dc97
  40dc88:	mov    rdx,rdi
  40dc8b:	lea    rcx,[rsp+0x28]
  40dc90:	call   0x40b1a0
  40dc95:	jmp    0x40dd14
  40dc97:	cmp    WORD PTR [rsi],0xb
  40dc9b:	jne    0x40dcd9
  40dc9d:	lea    rdx,[rsp+0xa8]
  40dca5:	mov    rcx,rdi
  40dca8:	call   0x40d4e4
  40dcad:	test   al,al
  40dcaf:	jne    0x40dcc6
  40dcb1:	lea    rcx,[rsp+0x28]
  40dcb6:	call   0x40b028
  40dcbb:	nop
  40dcbc:	mov    ebx,0x80070057
  40dcc1:	jmp    0x40dd8d
  40dcc6:	mov    dl,BYTE PTR [rsp+0xa8]
  40dccd:	lea    rcx,[rsp+0x28]
  40dcd2:	call   0x40b254
  40dcd7:	jmp    0x40dd14
  40dcd9:	mov    ebx,DWORD PTR [rdi+0x8]
  40dcdc:	test   ebx,ebx
  40dcde:	je     0x40dd14
  40dce0:	lea    rdx,[rsp+0xa8]
  40dce8:	mov    rcx,rdi
  40dceb:	call   0x40d5bc
  40dcf0:	cmp    eax,ebx
  40dcf2:	jne    0x40dd07
  40dcf4:	mov    edx,DWORD PTR [rsp+0xa8]
  40dcfb:	lea    rcx,[rsp+0x28]
  40dd00:	call   0x40b288
  40dd05:	jmp    0x40dd14
  40dd07:	mov    rdx,rdi
  40dd0a:	lea    rcx,[rsp+0x28]
  40dd0f:	call   0x40b1a0
  40dd14:	lea    r8,[rsp+0x48]
  40dd19:	movzx  edx,WORD PTR [rsi]
  40dd1c:	lea    rcx,[rsp+0x28]
  40dd21:	call   0x40d880
  40dd26:	test   al,al
  40dd28:	jne    0x40dd3c
  40dd2a:	lea    rcx,[rsp+0x28]
  40dd2f:	call   0x40b028
  40dd34:	nop
  40dd35:	mov    ebx,0x80070057
  40dd3a:	jmp    0x40dd8d
  40dd3c:	lea    rcx,[rsp+0x28]
  40dd41:	call   0x40b028
  40dd46:	mov    ecx,0x20
  40dd4b:	call   0x402130
  40dd50:	mov    rbx,rax
  40dd53:	mov    QWORD PTR [rsp+0xa8],rax
  40dd5b:	test   rax,rax
  40dd5e:	je     0x40dd7d
  40dd60:	mov    eax,DWORD PTR [rsp+0x40]
  40dd64:	mov    DWORD PTR [rbx],eax
  40dd66:	mov    al,BYTE PTR [rsp+0x44]
  40dd6a:	mov    BYTE PTR [rbx+0x4],al
  40dd6d:	lea    rcx,[rbx+0x8]
  40dd71:	lea    rdx,[rsp+0x48]
  40dd76:	call   0x40b16c
  40dd7b:	jmp    0x40dd7f
  40dd7d:	xor    ebx,ebx
  40dd7f:	mov    rdx,rbx
  40dd82:	mov    rcx,r12
  40dd85:	call   0x4010c8
  40dd8a:	nop
  40dd8b:	xor    ebx,ebx
  40dd8d:	lea    rcx,[rsp+0x48]
  40dd92:	call   0x40b028
  40dd97:	mov    eax,ebx
  40dd99:	add    rsp,0x60
  40dd9d:	pop    r12
  40dd9f:	pop    rdi
  40dda0:	pop    rsi
  40dda1:	pop    rbp
  40dda2:	pop    rbx
  40dda3:	ret    
  40dda4:	int3   
  40dda5:	int3   
  40dda6:	int3   
  40dda7:	int3   
  40dda8:	rex.W push rbp
  40ddaa:	sub    rsp,0x20
  40ddae:	mov    rbp,rdx
  40ddb1:	lea    rcx,[rbp+0x40]
  40ddb5:	call   0x40d874
  40ddba:	add    rsp,0x20
  40ddbe:	pop    rbp
  40ddbf:	ret    
  40ddc0:	int3   
  40ddc1:	int3   
  40ddc2:	int3   
  40ddc3:	int3   
  40ddc4:	int3   
  40ddc5:	int3   
  40ddc6:	int3   
  40ddc7:	int3   
  40ddc8:	rex.W push rbp
  40ddca:	sub    rsp,0x20
  40ddce:	mov    rbp,rdx
  40ddd1:	lea    rcx,[rbp+0x28]
  40ddd5:	call   0x40b830
  40ddda:	add    rsp,0x20
  40ddde:	pop    rbp
  40dddf:	ret    
  40dde0:	int3   
  40dde1:	int3   
  40dde2:	int3   
  40dde3:	int3   
  40dde4:	int3   
  40dde5:	int3   
  40dde6:	int3   
  40dde7:	int3   
  40dde8:	rex.W push rbp
  40ddea:	sub    rsp,0x20
  40ddee:	mov    rbp,rdx
  40ddf1:	mov    rcx,QWORD PTR [rbp+0xa8]
  40ddf8:	call   0x40215c
  40ddfd:	add    rsp,0x20
  40de01:	pop    rbp
  40de02:	ret    
  40de03:	int3   
  40de04:	rex.W push rbx
  40de06:	push   rbp
  40de07:	push   rsi
  40de08:	push   rdi
  40de09:	push   r12
  40de0b:	push   r13
  40de0d:	push   r14
  40de0f:	mov    rax,rsp
  40de12:	sub    rsp,0x60
  40de16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40de1f:	mov    rbp,rdx
  40de22:	mov    r14,rcx
  40de25:	xor    esi,esi
  40de27:	mov    QWORD PTR [rax-0x28],rsi
  40de2b:	mov    DWORD PTR [rax-0x1c],esi
  40de2e:	xor    edi,edi
  40de30:	mov    DWORD PTR [rax-0x20],edi
  40de33:	lea    rcx,[rax-0x38]
  40de37:	call   0x403150
  40de3c:	nop
  40de3d:	mov    eax,DWORD PTR [rbp+0x8]
  40de40:	test   eax,eax
  40de42:	jne    0x40de53
  40de44:	mov    rcx,QWORD PTR [rsp+0x28]
  40de49:	call   0x40215c
  40de4e:	jmp    0x40df42
  40de53:	mov    r12d,0x10
  40de59:	test   eax,eax
  40de5b:	je     0x40defb
  40de61:	xor    ebx,ebx
  40de63:	mov    rdi,rax
  40de66:	mov    ecx,DWORD PTR [rsp+0x30]
  40de6a:	mov    rax,QWORD PTR [rbp+0x0]
  40de6e:	movzx  esi,WORD PTR [rbx+rax*1]
  40de72:	cmp    si,0x3a
  40de76:	jne    0x40dec3
  40de78:	mov    rcx,r12
  40de7b:	call   0x402130
  40de80:	mov    QWORD PTR [rsp+0xa8],rax
  40de88:	test   rax,rax
  40de8b:	je     0x40de9c
  40de8d:	lea    rdx,[rsp+0x28]
  40de92:	mov    rcx,rax
  40de95:	call   0x403208
  40de9a:	jmp    0x40de9e
  40de9c:	xor    eax,eax
  40de9e:	mov    rdx,rax
  40dea1:	lea    rcx,[rsp+0x38]
  40dea6:	call   0x4010c8
  40deab:	mov    DWORD PTR [rsp+0x30],0x0
  40deb3:	mov    rax,QWORD PTR [rsp+0x28]
  40deb8:	mov    WORD PTR [rax],0x0
  40debd:	mov    ecx,DWORD PTR [rsp+0x30]
  40dec1:	jmp    0x40deee
  40dec3:	cmp    DWORD PTR [rsp+0x34],ecx
  40dec7:	jne    0x40ded7
  40dec9:	lea    rcx,[rsp+0x28]
  40dece:	call   0x402f2c
  40ded3:	mov    ecx,DWORD PTR [rsp+0x30]
  40ded7:	mov    rdx,QWORD PTR [rsp+0x28]
  40dedc:	mov    eax,ecx
  40dede:	mov    WORD PTR [rdx+rax*2],si
  40dee2:	inc    ecx
  40dee4:	mov    WORD PTR [rdx+rcx*2],0x0
  40deea:	mov    DWORD PTR [rsp+0x30],ecx
  40deee:	add    rbx,0x2
  40def2:	dec    rdi
  40def5:	jne    0x40de6a
  40defb:	mov    rcx,r12
  40defe:	call   0x402130
  40df03:	mov    QWORD PTR [rsp+0xa8],rax
  40df0b:	test   rax,rax
  40df0e:	je     0x40df1f
  40df10:	lea    rdx,[rsp+0x28]
  40df15:	mov    rcx,rax
  40df18:	call   0x403208
  40df1d:	jmp    0x40df21
  40df1f:	xor    eax,eax
  40df21:	mov    rdx,rax
  40df24:	lea    rcx,[rsp+0x38]
  40df29:	call   0x4010c8
  40df2e:	nop
  40df2f:	mov    rcx,QWORD PTR [rsp+0x28]
  40df34:	call   0x40215c
  40df39:	mov    edi,DWORD PTR [rsp+0x40]
  40df3d:	mov    rsi,QWORD PTR [rsp+0x38]
  40df42:	xor    ebp,ebp
  40df44:	test   edi,edi
  40df46:	je     0x40dffc
  40df4c:	mov    r12,rsi
  40df4f:	mov    rbx,QWORD PTR [r12]
  40df53:	lea    rcx,[rsp+0x48]
  40df58:	call   0x403150
  40df5d:	nop
  40df5e:	lea    rcx,[rsp+0x28]
  40df63:	call   0x403150
  40df68:	nop
  40df69:	lea    r8,[rsp+0x28]
  40df6e:	lea    rdx,[rsp+0x48]
  40df73:	mov    rcx,rbx
  40df76:	call   0x40d8d0
  40df7b:	lea    r8,[rsp+0x28]
  40df80:	lea    rdx,[rsp+0x48]
  40df85:	mov    rcx,r14
  40df88:	call   0x40dbb8
  40df8d:	mov    r13d,eax
  40df90:	test   eax,eax
  40df92:	jne    0x40dfb5
  40df94:	mov    rcx,QWORD PTR [rsp+0x28]
  40df99:	call   0x40215c
  40df9e:	nop
  40df9f:	mov    rcx,QWORD PTR [rsp+0x48]
  40dfa4:	call   0x40215c
  40dfa9:	inc    ebp
  40dfab:	add    r12,0x8
  40dfaf:	cmp    ebp,edi
  40dfb1:	jb     0x40df4f
  40dfb3:	jmp    0x40dffc
  40dfb5:	mov    rcx,QWORD PTR [rsp+0x28]
  40dfba:	call   0x40215c
  40dfbf:	nop
  40dfc0:	mov    rcx,QWORD PTR [rsp+0x48]
  40dfc5:	call   0x40215c
  40dfca:	nop
  40dfcb:	movsxd rax,edi
  40dfce:	test   edi,edi
  40dfd0:	je     0x40e02e
  40dfd2:	lea    rbx,[rsi+rax*8]
  40dfd6:	add    edi,0xffffffff
  40dfd9:	sub    rbx,0x8
  40dfdd:	mov    rbp,QWORD PTR [rbx]
  40dfe0:	test   rbp,rbp
  40dfe3:	je     0x40dff6
  40dfe5:	mov    rcx,QWORD PTR [rbp+0x0]
  40dfe9:	call   0x40215c
  40dfee:	mov    rcx,rbp
  40dff1:	call   0x40215c
  40dff6:	test   edi,edi
  40dff8:	jne    0x40dfd6
  40dffa:	jmp    0x40e02e
  40dffc:	movsxd rax,edi
  40dfff:	test   edi,edi
  40e001:	je     0x40e02b
  40e003:	lea    rbx,[rsi+rax*8]
  40e007:	add    edi,0xffffffff
  40e00a:	sub    rbx,0x8
  40e00e:	mov    rbp,QWORD PTR [rbx]
  40e011:	test   rbp,rbp
  40e014:	je     0x40e027
  40e016:	mov    rcx,QWORD PTR [rbp+0x0]
  40e01a:	call   0x40215c
  40e01f:	mov    rcx,rbp
  40e022:	call   0x40215c
  40e027:	test   edi,edi
  40e029:	jne    0x40e007
  40e02b:	xor    r13d,r13d
  40e02e:	mov    rcx,rsi
  40e031:	call   0x40215c
  40e036:	mov    eax,r13d
  40e039:	add    rsp,0x60
  40e03d:	pop    r14
  40e03f:	pop    r13
  40e041:	pop    r12
  40e043:	pop    rdi
  40e044:	pop    rsi
  40e045:	pop    rbp
  40e046:	pop    rbx
  40e047:	ret    
  40e048:	int3   
  40e049:	int3   
  40e04a:	int3   
  40e04b:	int3   
  40e04c:	int3   
  40e04d:	int3   
  40e04e:	int3   
  40e04f:	int3   
  40e050:	int3   
  40e051:	int3   
  40e052:	int3   
  40e053:	int3   
  40e054:	rex.W push rbp
  40e056:	sub    rsp,0x20
  40e05a:	mov    rbp,rdx
  40e05d:	lea    rcx,[rbp+0x38]
  40e061:	call   0x4047cc
  40e066:	add    rsp,0x20
  40e06a:	pop    rbp
  40e06b:	ret    
  40e06c:	int3   
  40e06d:	int3   
  40e06e:	int3   
  40e06f:	int3   
  40e070:	int3   
  40e071:	int3   
  40e072:	int3   
  40e073:	int3   
  40e074:	rex.W push rbp
  40e076:	sub    rsp,0x20
  40e07a:	mov    rbp,rdx
  40e07d:	lea    rcx,[rbp+0x28]
  40e081:	call   0x401000
  40e086:	add    rsp,0x20
  40e08a:	pop    rbp
  40e08b:	ret    
  40e08c:	int3   
  40e08d:	int3   
  40e08e:	int3   
  40e08f:	int3   
  40e090:	int3   
  40e091:	int3   
  40e092:	int3   
  40e093:	int3   
  40e094:	rex.W push rbp
  40e096:	sub    rsp,0x20
  40e09a:	mov    rbp,rdx
  40e09d:	mov    rcx,QWORD PTR [rbp+0xa8]
  40e0a4:	call   0x40215c
  40e0a9:	add    rsp,0x20
  40e0ad:	pop    rbp
  40e0ae:	ret    
  40e0af:	int3   
  40e0b0:	int3   
  40e0b1:	int3   
  40e0b2:	int3   
  40e0b3:	int3   
  40e0b4:	rex.W push rbp
  40e0b6:	sub    rsp,0x20
  40e0ba:	mov    rbp,rdx
  40e0bd:	mov    rcx,QWORD PTR [rbp+0xa8]
  40e0c4:	call   0x40215c
  40e0c9:	add    rsp,0x20
  40e0cd:	pop    rbp
  40e0ce:	ret    
  40e0cf:	int3   
  40e0d0:	int3   
  40e0d1:	int3   
  40e0d2:	int3   
  40e0d3:	int3   
  40e0d4:	rex.W push rbp
  40e0d6:	sub    rsp,0x20
  40e0da:	mov    rbp,rdx
  40e0dd:	lea    rcx,[rbp+0x48]
  40e0e1:	call   0x401000
  40e0e6:	add    rsp,0x20
  40e0ea:	pop    rbp
  40e0eb:	ret    
  40e0ec:	int3   
  40e0ed:	int3   
  40e0ee:	int3   
  40e0ef:	int3   
  40e0f0:	int3   
  40e0f1:	int3   
  40e0f2:	int3   
  40e0f3:	int3   
  40e0f4:	rex.W push rbp
  40e0f6:	sub    rsp,0x20
  40e0fa:	mov    rbp,rdx
  40e0fd:	lea    rcx,[rbp+0x28]
  40e101:	call   0x401000
  40e106:	add    rsp,0x20
  40e10a:	pop    rbp
  40e10b:	ret    
  40e10c:	rex.W push rbx
  40e10e:	push   rbp
  40e10f:	push   rsi
  40e110:	push   rdi
  40e111:	push   r12
  40e113:	push   r13
  40e115:	sub    rsp,0x78
  40e119:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40e122:	mov    rsi,r8
  40e125:	mov    r12,rdx
  40e128:	mov    r13,rcx
  40e12b:	cmp    DWORD PTR [rdx+0x8],0x0
  40e12f:	jne    0x40e13b
  40e131:	mov    eax,0x80070057
  40e136:	jmp    0x40e2ff
  40e13b:	cmp    WORD PTR [r8],0x0
  40e140:	jne    0x40e19a
  40e142:	lea    rcx,[rsp+0x38]
  40e147:	call   0x403150
  40e14c:	nop
  40e14d:	lea    rcx,[rsp+0x28]
  40e152:	call   0x403150
  40e157:	nop
  40e158:	lea    r8,[rsp+0x28]
  40e15d:	lea    rdx,[rsp+0x38]
  40e162:	mov    rcx,r12
  40e165:	call   0x40d8d0
  40e16a:	lea    r8,[rsp+0x28]
  40e16f:	lea    rdx,[rsp+0x38]
  40e174:	mov    rcx,r13
  40e177:	call   0x40dbb8
  40e17c:	mov    ebx,eax
  40e17e:	mov    rcx,QWORD PTR [rsp+0x28]
  40e183:	call   0x40215c
  40e188:	nop
  40e189:	mov    rcx,QWORD PTR [rsp+0x38]
  40e18e:	call   0x40215c
  40e193:	mov    eax,ebx
  40e195:	jmp    0x40e2ff
  40e19a:	xor    ebx,ebx
  40e19c:	lea    rbp,[rip+0x3fde5]        # 0x44df88
  40e1a3:	lea    edi,[rbx+0x1]
  40e1a6:	mov    rdx,QWORD PTR [rbp+0x0]
  40e1aa:	mov    rcx,QWORD PTR [r12]
  40e1ae:	call   0x402864
  40e1b3:	test   al,al
  40e1b5:	jne    0x40e1c7
  40e1b7:	add    ebx,edi
  40e1b9:	add    rbp,0x10
  40e1bd:	cmp    ebx,0x11
  40e1c0:	jb     0x40e1a6
  40e1c2:	mov    ebx,0xffffffff
  40e1c7:	test   ebx,ebx
  40e1c9:	jns    0x40e1d5
  40e1cb:	mov    eax,0x80070057
  40e1d0:	jmp    0x40e2ff
  40e1d5:	mov    eax,ebx
  40e1d7:	add    rax,rax
  40e1da:	lea    rcx,[rip+0x3fd9f]        # 0x44df80
  40e1e1:	mov    BYTE PTR [rsp+0x4c],0x0
  40e1e6:	mov    WORD PTR [rsp+0x50],0x0
  40e1ed:	mov    WORD PTR [rsp+0x52],0x0
  40e1f4:	mov    QWORD PTR [rsp+0x58],0x0
  40e1fd:	mov    DWORD PTR [rsp+0x48],ebx
  40e201:	test   ebx,ebx
  40e203:	je     0x40e290
  40e209:	cmp    ebx,0x2
  40e20c:	jbe    0x40e218
  40e20e:	cmp    ebx,0x4
  40e211:	je     0x40e218
  40e213:	cmp    ebx,0x10
  40e216:	jne    0x40e290
  40e218:	cmp    WORD PTR [rsi],0x13
  40e21c:	jne    0x40e254
  40e21e:	mov    ecx,DWORD PTR [rsi+0x8]
  40e221:	cmp    ecx,0x40
  40e224:	jb     0x40e22d
  40e226:	mov    ebx,0x80070057
  40e22b:	jmp    0x40e28e
  40e22d:	cmp    ecx,0x20
  40e230:	jae    0x40e242
  40e232:	shl    edi,cl
  40e234:	mov    edx,edi
  40e236:	lea    rcx,[rsp+0x50]
  40e23b:	call   0x40b288
  40e240:	jmp    0x40e2ac
  40e242:	shl    rdi,cl
  40e245:	mov    rdx,rdi
  40e248:	lea    rcx,[rsp+0x50]
  40e24d:	call   0x40b2b4
  40e252:	jmp    0x40e2ac
  40e254:	cmp    WORD PTR [rsi],0x8
  40e258:	jne    0x40e285
  40e25a:	mov    rdx,QWORD PTR [rsi+0x8]
  40e25e:	lea    rcx,[rsp+0x38]
  40e263:	call   0x4031c0
  40e268:	lea    rdx,[rsp+0x50]
  40e26d:	lea    rcx,[rsp+0x38]
  40e272:	call   0x40d6a0
  40e277:	mov    ebx,eax
  40e279:	mov    rcx,QWORD PTR [rsp+0x38]
  40e27e:	call   0x40215c
  40e283:	jmp    0x40e28a
  40e285:	mov    ebx,0x80070057
  40e28a:	test   ebx,ebx
  40e28c:	je     0x40e2ac
  40e28e:	jmp    0x40e2f3
  40e290:	lea    r8,[rsp+0x50]
  40e295:	movzx  edx,WORD PTR [rcx+rax*8]
  40e299:	mov    rcx,rsi
  40e29c:	call   0x40d880
  40e2a1:	test   al,al
  40e2a3:	jne    0x40e2ac
  40e2a5:	mov    ebx,0x80070057
  40e2aa:	jmp    0x40e2f3
  40e2ac:	mov    ecx,0x20
  40e2b1:	call   0x402130
  40e2b6:	mov    rbx,rax
  40e2b9:	mov    QWORD PTR [rsp+0xb8],rax
  40e2c1:	test   rax,rax
  40e2c4:	je     0x40e2e3
  40e2c6:	mov    eax,DWORD PTR [rsp+0x48]
  40e2ca:	mov    DWORD PTR [rbx],eax
  40e2cc:	mov    al,BYTE PTR [rsp+0x4c]
  40e2d0:	mov    BYTE PTR [rbx+0x4],al
  40e2d3:	lea    rcx,[rbx+0x8]
  40e2d7:	lea    rdx,[rsp+0x50]
  40e2dc:	call   0x40b16c
  40e2e1:	jmp    0x40e2e5
  40e2e3:	xor    ebx,ebx
  40e2e5:	mov    rdx,rbx
  40e2e8:	mov    rcx,r13
  40e2eb:	call   0x4010c8
  40e2f0:	nop
  40e2f1:	xor    ebx,ebx
  40e2f3:	lea    rcx,[rsp+0x50]
  40e2f8:	call   0x40b028
  40e2fd:	mov    eax,ebx
  40e2ff:	add    rsp,0x78
  40e303:	pop    r13
  40e305:	pop    r12
  40e307:	pop    rdi
  40e308:	pop    rsi
  40e309:	pop    rbp
  40e30a:	pop    rbx
  40e30b:	ret    
  40e30c:	rex.W push rbp
  40e30e:	sub    rsp,0x20
  40e312:	mov    rbp,rdx
  40e315:	lea    rcx,[rbp+0x38]
  40e319:	call   0x401000
  40e31e:	add    rsp,0x20
  40e322:	pop    rbp
  40e323:	ret    
  40e324:	int3   
  40e325:	int3   
  40e326:	int3   
  40e327:	int3   
  40e328:	int3   
  40e329:	int3   
  40e32a:	int3   
  40e32b:	int3   
  40e32c:	rex.W push rbp
  40e32e:	sub    rsp,0x20
  40e332:	mov    rbp,rdx
  40e335:	lea    rcx,[rbp+0x28]
  40e339:	call   0x401000
  40e33e:	add    rsp,0x20
  40e342:	pop    rbp
  40e343:	ret    
  40e344:	int3   
  40e345:	int3   
  40e346:	int3   
  40e347:	int3   
  40e348:	int3   
  40e349:	int3   
  40e34a:	int3   
  40e34b:	int3   
  40e34c:	rex.W push rbp
  40e34e:	sub    rsp,0x20
  40e352:	mov    rbp,rdx
  40e355:	lea    rcx,[rbp+0x48]
  40e359:	call   0x40d874
  40e35e:	add    rsp,0x20
  40e362:	pop    rbp
  40e363:	ret    
  40e364:	int3   
  40e365:	int3   
  40e366:	int3   
  40e367:	int3   
  40e368:	int3   
  40e369:	int3   
  40e36a:	int3   
  40e36b:	int3   
  40e36c:	rex.W push rbp
  40e36e:	sub    rsp,0x20
  40e372:	mov    rbp,rdx
  40e375:	mov    rcx,QWORD PTR [rbp+0xb8]
  40e37c:	call   0x40215c
  40e381:	add    rsp,0x20
  40e385:	pop    rbp
  40e386:	ret    
  40e387:	int3   
  40e388:	rex.W push rbx
  40e38a:	push   rbp
  40e38b:	push   rsi
  40e38c:	push   rdi
  40e38d:	sub    rsp,0x48
  40e391:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40e39a:	mov    rbp,rdx
  40e39d:	mov    rsi,rcx
  40e3a0:	mov    DWORD PTR [rcx+0x18],0x0
  40e3a7:	mov    rax,QWORD PTR [rcx+0x10]
  40e3ab:	mov    BYTE PTR [rax],0x0
  40e3ae:	mov    dx,0x3a
  40e3b2:	mov    rcx,QWORD PTR [rbp+0x0]
  40e3b6:	call   0x4026e0
  40e3bb:	mov    edi,eax
  40e3bd:	mov    rdx,rbp
  40e3c0:	lea    rcx,[rsp+0x28]
  40e3c5:	call   0x403208
  40e3ca:	nop
  40e3cb:	test   edi,edi
  40e3cd:	js     0x40e3ec
  40e3cf:	mov    ecx,DWORD PTR [rsp+0x30]
  40e3d3:	cmp    edi,ecx
  40e3d5:	jae    0x40e3f0
  40e3d7:	mov    DWORD PTR [rsp+0x30],edi
  40e3db:	mov    rax,QWORD PTR [rsp+0x28]
  40e3e0:	mov    WORD PTR [rax+rdi*2],0x0
  40e3e6:	mov    ecx,DWORD PTR [rsp+0x30]
  40e3ea:	jmp    0x40e3f0
  40e3ec:	mov    ecx,DWORD PTR [rsp+0x30]
  40e3f0:	xor    r8d,r8d
  40e3f3:	mov    rdx,QWORD PTR [rsp+0x28]
  40e3f8:	test   ecx,ecx
  40e3fa:	je     0x40e423
  40e3fc:	mov    rax,rdx
  40e3ff:	cmp    WORD PTR [rax],0x80
  40e404:	jae    0x40e414
  40e406:	inc    r8d
  40e409:	add    rax,0x2
  40e40d:	cmp    r8d,ecx
  40e410:	jb     0x40e3ff
  40e412:	jmp    0x40e423
  40e414:	mov    rcx,rdx
  40e417:	call   0x40215c
  40e41c:	mov    eax,0x80070057
  40e421:	jmp    0x40e45f
  40e423:	lea    rcx,[rsi+0x10]
  40e427:	call   0x402ca0
  40e42c:	nop
  40e42d:	mov    rcx,QWORD PTR [rsp+0x28]
  40e432:	call   0x40215c
  40e437:	test   edi,edi
  40e439:	jns    0x40e43f
  40e43b:	xor    eax,eax
  40e43d:	jmp    0x40e45f
  40e43f:	lea    ecx,[rdi+0x1]
  40e442:	mov    rax,QWORD PTR [rbp+0x0]
  40e446:	lea    rdx,[rax+rcx*2]
  40e44a:	lea    rcx,[rsi+0x20]
  40e44e:	call   0x403290
  40e453:	lea    rdx,[rsi+0x20]
  40e457:	mov    rcx,rsi
  40e45a:	call   0x40de04
  40e45f:	add    rsp,0x48
  40e463:	pop    rdi
  40e464:	pop    rsi
  40e465:	pop    rbp
  40e466:	pop    rbx
  40e467:	ret    
  40e468:	rex.W push rbp
  40e46a:	sub    rsp,0x20
  40e46e:	mov    rbp,rdx
  40e471:	lea    rcx,[rbp+0x28]
  40e475:	call   0x401000
  40e47a:	add    rsp,0x20
  40e47e:	pop    rbp
  40e47f:	ret    
  40e480:	rex.W push rbx
  40e482:	push   rsi
  40e483:	push   rdi
  40e484:	sub    rsp,0x40
  40e488:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40e491:	mov    rbx,r8
  40e494:	mov    rdi,rdx
  40e497:	mov    rsi,rcx
  40e49a:	cmp    DWORD PTR [rdx+0x8],0x0
  40e49e:	je     0x40e4c3
  40e4a0:	lea    rdx,[rip+0x3fd29]        # 0x44e1d0
  40e4a7:	mov    rcx,QWORD PTR [rdi]
  40e4aa:	call   0x402864
  40e4af:	test   al,al
  40e4b1:	jne    0x40e4c3
  40e4b3:	mov    r8,rbx
  40e4b6:	mov    rdx,rdi
  40e4b9:	mov    rcx,rsi
  40e4bc:	call   0x40e10c
  40e4c1:	jmp    0x40e4fa
  40e4c3:	cmp    WORD PTR [rbx],0x8
  40e4c7:	je     0x40e4d0
  40e4c9:	mov    eax,0x80070057
  40e4ce:	jmp    0x40e4fa
  40e4d0:	mov    rdx,QWORD PTR [rbx+0x8]
  40e4d4:	lea    rcx,[rsp+0x28]
  40e4d9:	call   0x4031c0
  40e4de:	nop
  40e4df:	lea    rdx,[rsp+0x28]
  40e4e4:	mov    rcx,rsi
  40e4e7:	call   0x40e388
  40e4ec:	mov    ebx,eax
  40e4ee:	mov    rcx,QWORD PTR [rsp+0x28]
  40e4f3:	call   0x40215c
  40e4f8:	mov    eax,ebx
  40e4fa:	add    rsp,0x40
  40e4fe:	pop    rdi
  40e4ff:	pop    rsi
  40e500:	pop    rbx
  40e501:	ret    
  40e502:	int3   
  40e503:	int3   
  40e504:	int3   
  40e505:	int3   
  40e506:	int3   
  40e507:	int3   
  40e508:	int3   
  40e509:	int3   
  40e50a:	int3   
  40e50b:	int3   
  40e50c:	int3   
  40e50d:	int3   
  40e50e:	int3   
  40e50f:	int3   
  40e510:	rex.W push rbp
  40e512:	sub    rsp,0x20
  40e516:	mov    rbp,rdx
  40e519:	lea    rcx,[rbp+0x28]
  40e51d:	call   0x401000
  40e522:	add    rsp,0x20
  40e526:	pop    rbp
  40e527:	ret    
  40e528:	mov    rax,QWORD PTR [rcx]
  40e52b:	xor    r8d,r8d
  40e52e:	xor    edx,edx
  40e530:	rex.W jmp QWORD PTR [rax+0x18]
  40e534:	mov    QWORD PTR [rcx],0x0
  40e53b:	mov    rax,rcx
  40e53e:	ret    
  40e53f:	int3   
  40e540:	rex.W push rbx
  40e542:	push   rbp
  40e543:	push   rsi
  40e544:	push   rdi
  40e545:	sub    rsp,0x28
  40e549:	mov    rdi,rcx
  40e54c:	mov    rcx,QWORD PTR [rcx+0x18]
  40e550:	mov    bpl,r8b
  40e553:	test   rcx,rcx
  40e556:	mov    rbx,rdx
  40e559:	je     0x40e569
  40e55b:	mov    rax,QWORD PTR [rcx]
  40e55e:	call   QWORD PTR [rax+0x10]
  40e561:	mov    QWORD PTR [rdi+0x18],0x0
  40e569:	test   rbx,rbx
  40e56c:	je     0x40e577
  40e56e:	mov    rax,QWORD PTR [rbx]
  40e571:	mov    rcx,rbx
  40e574:	call   QWORD PTR [rax+0x8]
  40e577:	mov    rcx,QWORD PTR [rdi+0x10]
  40e57b:	test   rcx,rcx
  40e57e:	je     0x40e586
  40e580:	mov    rax,QWORD PTR [rcx]
  40e583:	call   QWORD PTR [rax+0x10]
  40e586:	mov    QWORD PTR [rdi+0x10],rbx
  40e58a:	mov    rax,QWORD PTR [rbx]
  40e58d:	lea    r8,[rdi+0x18]
  40e591:	lea    rdx,[rip+0x45810]        # 0x453da8
  40e598:	mov    rcx,rbx
  40e59b:	call   QWORD PTR [rax]
  40e59d:	mov    BYTE PTR [rdi+0x20],bpl
  40e5a1:	add    rsp,0x28
  40e5a5:	pop    rdi
  40e5a6:	pop    rsi
  40e5a7:	pop    rbp
  40e5a8:	pop    rbx
  40e5a9:	ret    
  40e5aa:	int3   
  40e5ab:	int3   
  40e5ac:	rex.W push rbx
  40e5ae:	sub    rsp,0x20
  40e5b2:	test   rdx,rdx
  40e5b5:	mov    r9,QWORD PTR [rcx+0x30]
  40e5b9:	mov    rax,QWORD PTR [rcx+0x38]
  40e5bd:	mov    QWORD PTR [rsp+0x30],r9
  40e5c2:	mov    QWORD PTR [rsp+0x38],rax
  40e5c7:	mov    rbx,rcx
  40e5ca:	je     0x40e5d4
  40e5cc:	add    r9,QWORD PTR [rdx]
  40e5cf:	mov    QWORD PTR [rsp+0x30],r9
  40e5d4:	test   r8,r8
  40e5d7:	je     0x40e5e1
  40e5d9:	add    rax,QWORD PTR [r8]
  40e5dc:	mov    QWORD PTR [rsp+0x38],rax
  40e5e1:	cmp    BYTE PTR [rcx+0x40],0x0
  40e5e5:	je     0x40e60e
  40e5e7:	mov    rcx,QWORD PTR [rcx+0x18]
  40e5eb:	test   rcx,rcx
  40e5ee:	je     0x40e60e
  40e5f0:	mov    rax,QWORD PTR [rcx]
  40e5f3:	lea    r8,[rsp+0x38]
  40e5f8:	lea    rdx,[rsp+0x30]
  40e5fd:	call   QWORD PTR [rax+0x18]
  40e600:	test   eax,eax
  40e602:	jne    0x40e646
  40e604:	mov    r9,QWORD PTR [rsp+0x30]
  40e609:	mov    rax,QWORD PTR [rsp+0x38]
  40e60e:	cmp    BYTE PTR [rbx+0x41],0x0
  40e612:	je     0x40e644
  40e614:	add    rax,QWORD PTR [rbx+0x28]
  40e618:	add    r9,QWORD PTR [rbx+0x28]
  40e61c:	mov    rcx,QWORD PTR [rbx+0x10]
  40e620:	cmp    BYTE PTR [rbx+0x20],0x0
  40e624:	mov    QWORD PTR [rsp+0x30],r9
  40e629:	mov    QWORD PTR [rsp+0x38],rax
  40e62e:	mov    rax,QWORD PTR [rcx]
  40e631:	lea    r8,[rsp+0x38]
  40e636:	lea    rdx,[rsp+0x30]
  40e63b:	cmove  rdx,r8
  40e63f:	call   QWORD PTR [rax+0x20]
  40e642:	jmp    0x40e646
  40e644:	xor    eax,eax
  40e646:	add    rsp,0x20
  40e64a:	pop    rbx
  40e64b:	ret    
  40e64c:	xor    edx,edx
  40e64e:	lea    rax,[rip+0x3fb83]        # 0x44e1d8
  40e655:	mov    DWORD PTR [rcx+0x8],edx
  40e658:	mov    QWORD PTR [rcx],rax
  40e65b:	mov    QWORD PTR [rcx+0x10],rdx
  40e65f:	mov    QWORD PTR [rcx+0x18],rdx
  40e663:	mov    rax,rcx
  40e666:	mov    QWORD PTR [rcx+0x28],rdx
  40e66a:	mov    QWORD PTR [rcx+0x30],rdx
  40e66e:	mov    QWORD PTR [rcx+0x38],rdx
  40e672:	mov    BYTE PTR [rcx+0x40],0x1
  40e676:	mov    BYTE PTR [rcx+0x41],0x1
  40e67a:	ret    
  40e67b:	int3   
  40e67c:	rex.W push rbx
  40e67e:	push   rsi
  40e67f:	push   rdi
  40e680:	sub    rsp,0x20
  40e684:	mov    rsi,rdx
  40e687:	mov    rdi,r8
  40e68a:	mov    rbx,rcx
  40e68d:	mov    QWORD PTR [r8],0x0
  40e694:	lea    rdx,[rip+0x46755]        # 0x454df0
  40e69b:	mov    rcx,rsi
  40e69e:	mov    r8d,0x10
  40e6a4:	call   0x44b786
  40e6a9:	test   eax,eax
  40e6ab:	je     0x40e6c6
  40e6ad:	lea    rdx,[rip+0x456f4]        # 0x453da8
  40e6b4:	mov    r8d,0x10
  40e6ba:	mov    rcx,rsi
  40e6bd:	call   0x44b786
  40e6c2:	test   eax,eax
  40e6c4:	jne    0x40e6d0
  40e6c6:	mov    QWORD PTR [rdi],rbx
  40e6c9:	inc    DWORD PTR [rbx+0x8]
  40e6cc:	xor    eax,eax
  40e6ce:	jmp    0x40e6d5
  40e6d0:	mov    eax,0x80004002
  40e6d5:	add    rsp,0x20
  40e6d9:	pop    rdi
  40e6da:	pop    rsi
  40e6db:	pop    rbx
  40e6dc:	ret    
  40e6dd:	int3   
  40e6de:	int3   
  40e6df:	int3   
  40e6e0:	rex.W push rbx
  40e6e2:	sub    rsp,0x30
  40e6e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40e6ef:	mov    rbx,rcx
  40e6f2:	add    DWORD PTR [rcx+0x8],0xffffffff
  40e6f6:	mov    eax,DWORD PTR [rcx+0x8]
  40e6f9:	jne    0x40e729
  40e6fb:	mov    QWORD PTR [rsp+0x40],rcx
  40e700:	mov    rcx,QWORD PTR [rcx+0x18]
  40e704:	test   rcx,rcx
  40e707:	je     0x40e710
  40e709:	mov    rax,QWORD PTR [rcx]
  40e70c:	call   QWORD PTR [rax+0x10]
  40e70f:	nop
  40e710:	mov    rcx,QWORD PTR [rbx+0x10]
  40e714:	test   rcx,rcx
  40e717:	je     0x40e71f
  40e719:	mov    rax,QWORD PTR [rcx]
  40e71c:	call   QWORD PTR [rax+0x10]
  40e71f:	mov    rcx,rbx
  40e722:	call   0x40215c
  40e727:	xor    eax,eax
  40e729:	add    rsp,0x30
  40e72d:	pop    rbx
  40e72e:	ret    
  40e72f:	int3   
  40e730:	rex.W push rbp
  40e732:	sub    rsp,0x20
  40e736:	mov    rbp,rdx
  40e739:	mov    rcx,QWORD PTR [rbp+0x40]
  40e73d:	add    rcx,0x10
  40e741:	call   0x4176b4
  40e746:	add    rsp,0x20
  40e74a:	pop    rbp
  40e74b:	ret    
  40e74c:	rex.W push rbx
  40e74e:	push   rsi
  40e74f:	push   rdi
  40e750:	sub    rsp,0x20
  40e754:	mov    rbx,r9
  40e757:	mov    rsi,rcx
  40e75a:	mov    r9,rdx
  40e75d:	test   rbx,rbx
  40e760:	je     0x40e768
  40e762:	mov    DWORD PTR [rbx],0x0
  40e768:	test   r8d,r8d
  40e76b:	je     0x40e7a5
  40e76d:	mov    rcx,QWORD PTR [rcx+0x18]
  40e771:	mov    rdi,QWORD PTR [rsi+0x20]
  40e775:	cmp    rcx,rdi
  40e778:	jae    0x40e7a5
  40e77a:	mov    eax,r8d
  40e77d:	sub    rdi,rcx
  40e780:	cmp    rdi,rax
  40e783:	cmova  rdi,rax
  40e787:	mov    rax,QWORD PTR [rsi+0x10]
  40e78b:	lea    rdx,[rcx+rax*1]
  40e78f:	mov    r8,rdi
  40e792:	mov    rcx,r9
  40e795:	call   0x44b480
  40e79a:	add    QWORD PTR [rsi+0x18],rdi
  40e79e:	test   rbx,rbx
  40e7a1:	je     0x40e7a5
  40e7a3:	mov    DWORD PTR [rbx],edi
  40e7a5:	xor    eax,eax
  40e7a7:	add    rsp,0x20
  40e7ab:	pop    rdi
  40e7ac:	pop    rsi
  40e7ad:	pop    rbx
  40e7ae:	ret    
  40e7af:	int3   
  40e7b0:	test   r8d,r8d
  40e7b3:	je     0x40e7cf
  40e7b5:	dec    r8d
  40e7b8:	je     0x40e7cb
  40e7ba:	dec    r8d
  40e7bd:	je     0x40e7c5
  40e7bf:	mov    eax,0x80030001
  40e7c4:	ret    
  40e7c5:	add    rdx,QWORD PTR [rcx+0x20]
  40e7c9:	jmp    0x40e7cf
  40e7cb:	add    rdx,QWORD PTR [rcx+0x18]
  40e7cf:	test   rdx,rdx
  40e7d2:	jns    0x40e7da
  40e7d4:	mov    eax,0x80070083
  40e7d9:	ret    
  40e7da:	test   r9,r9
  40e7dd:	mov    QWORD PTR [rcx+0x18],rdx
  40e7e1:	je     0x40e7e6
  40e7e3:	mov    QWORD PTR [r9],rdx
  40e7e6:	xor    eax,eax
  40e7e8:	ret    
  40e7e9:	int3   
  40e7ea:	int3   
  40e7eb:	int3   
  40e7ec:	rex.W push rbx
  40e7ee:	push   rbp
  40e7ef:	push   rsi
  40e7f0:	push   rdi
  40e7f1:	sub    rsp,0x28
  40e7f5:	mov    rsi,rdx
  40e7f8:	mov    rdi,r8
  40e7fb:	mov    rbx,rcx
  40e7fe:	mov    QWORD PTR [r8],0x0
  40e805:	mov    ebp,0x10
  40e80a:	lea    rdx,[rip+0x465df]        # 0x454df0
  40e811:	mov    r8,rbp
  40e814:	mov    rcx,rsi
  40e817:	call   0x44b786
  40e81c:	test   eax,eax
  40e81e:	je     0x40e84c
  40e820:	lea    rdx,[rip+0x45701]        # 0x453f28
  40e827:	mov    r8,rbp
  40e82a:	mov    rcx,rsi
  40e82d:	call   0x44b786
  40e832:	test   eax,eax
  40e834:	je     0x40e84c
  40e836:	lea    rdx,[rip+0x456cb]        # 0x453f08
  40e83d:	mov    r8,rbp
  40e840:	mov    rcx,rsi
  40e843:	call   0x44b786
  40e848:	test   eax,eax
  40e84a:	jne    0x40e856
  40e84c:	mov    QWORD PTR [rdi],rbx
  40e84f:	inc    DWORD PTR [rbx+0x8]
  40e852:	xor    eax,eax
  40e854:	jmp    0x40e85b
  40e856:	mov    eax,0x80004002
  40e85b:	add    rsp,0x28
  40e85f:	pop    rdi
  40e860:	pop    rsi
  40e861:	pop    rbp
  40e862:	pop    rbx
  40e863:	ret    
  40e864:	rex.W push rbx
  40e866:	sub    rsp,0x20
  40e86a:	add    DWORD PTR [rcx+0x8],0xffffffff
  40e86e:	mov    eax,DWORD PTR [rcx+0x8]
  40e871:	mov    rbx,rcx
  40e874:	jne    0x40e88f
  40e876:	mov    rcx,QWORD PTR [rcx+0x28]
  40e87a:	test   rcx,rcx
  40e87d:	je     0x40e885
  40e87f:	mov    rax,QWORD PTR [rcx]
  40e882:	call   QWORD PTR [rax+0x10]
  40e885:	mov    rcx,rbx
  40e888:	call   0x40215c
  40e88d:	xor    eax,eax
  40e88f:	add    rsp,0x20
  40e893:	pop    rbx
  40e894:	ret    
  40e895:	int3   
  40e896:	int3   
  40e897:	int3   
  40e898:	rex.W push rbx
  40e89a:	push   rbp
  40e89b:	push   rsi
  40e89c:	push   rdi
  40e89d:	push   r12
  40e89f:	sub    rsp,0x20
  40e8a3:	mov    rbx,QWORD PTR [r8]
  40e8a6:	mov    rdi,r8
  40e8a9:	mov    rsi,rdx
  40e8ac:	test   rbx,rbx
  40e8af:	mov    rbp,rcx
  40e8b2:	mov    QWORD PTR [r8],0x0
  40e8b9:	je     0x40e8f7
  40e8bb:	mov    r12d,0x80000000
  40e8c1:	mov    rax,QWORD PTR [rbp+0x0]
  40e8c5:	mov    r8d,r12d
  40e8c8:	cmp    rbx,r12
  40e8cb:	lea    r9,[rsp+0x60]
  40e8d0:	mov    rdx,rsi
  40e8d3:	mov    rcx,rbp
  40e8d6:	cmovb  r8d,ebx
  40e8da:	call   QWORD PTR [rax+0x18]
  40e8dd:	mov    edx,DWORD PTR [rsp+0x60]
  40e8e1:	add    QWORD PTR [rdi],rdx
  40e8e4:	add    rsi,rdx
  40e8e7:	sub    rbx,rdx
  40e8ea:	test   eax,eax
  40e8ec:	jne    0x40e8f9
  40e8ee:	test   edx,edx
  40e8f0:	je     0x40e8f7
  40e8f2:	test   rbx,rbx
  40e8f5:	jne    0x40e8c1
  40e8f7:	xor    eax,eax
  40e8f9:	add    rsp,0x20
  40e8fd:	pop    r12
  40e8ff:	pop    rdi
  40e900:	pop    rsi
  40e901:	pop    rbp
  40e902:	pop    rbx
  40e903:	ret    
  40e904:	rex.W push rbx
  40e906:	push   rbp
  40e907:	push   rsi
  40e908:	push   rdi
  40e909:	sub    rsp,0x28
  40e90d:	test   r8,r8
  40e910:	mov    rbx,r8
  40e913:	mov    rdi,rdx
  40e916:	mov    rsi,rcx
  40e919:	je     0x40e952
  40e91b:	mov    ebp,0x80000000
  40e920:	mov    rax,QWORD PTR [rsi]
  40e923:	mov    r8d,ebp
  40e926:	cmp    rbx,rbp
  40e929:	lea    r9,[rsp+0x60]
  40e92e:	mov    rdx,rdi
  40e931:	mov    rcx,rsi
  40e934:	cmovb  r8d,ebx
  40e938:	call   QWORD PTR [rax+0x18]
  40e93b:	mov    edx,DWORD PTR [rsp+0x60]
  40e93f:	add    rdi,rdx
  40e942:	sub    rbx,rdx
  40e945:	test   eax,eax
  40e947:	jne    0x40e954
  40e949:	test   edx,edx
  40e94b:	je     0x40e95d
  40e94d:	test   rbx,rbx
  40e950:	jne    0x40e920
  40e952:	xor    eax,eax
  40e954:	add    rsp,0x28
  40e958:	pop    rdi
  40e959:	pop    rsi
  40e95a:	pop    rbp
  40e95b:	pop    rbx
  40e95c:	ret    
  40e95d:	mov    eax,0x80004005
  40e962:	jmp    0x40e954
  40e964:	rex.W push rbx
  40e966:	push   rbp
  40e967:	push   rsi
  40e968:	push   rdi
  40e969:	push   r12
  40e96b:	sub    rsp,0x20
  40e96f:	mov    rdi,rcx
  40e972:	mov    ecx,DWORD PTR [rcx+0xc]
  40e975:	mov    r12d,r8d
  40e978:	cmp    DWORD PTR [rdi+0x8],ecx
  40e97b:	mov    ebp,edx
  40e97d:	jne    0x40e9bd
  40e97f:	mov    eax,ecx
  40e981:	shr    eax,0x2
  40e984:	lea    esi,[rax+rcx*1+0x1]
  40e988:	mov    ecx,esi
  40e98a:	shl    rcx,0x2
  40e98e:	call   0x402130
  40e993:	cmp    DWORD PTR [rdi+0x8],0x0
  40e997:	mov    rbx,rax
  40e99a:	je     0x40e9af
  40e99c:	mov    r8d,DWORD PTR [rdi+0x8]
  40e9a0:	mov    rdx,QWORD PTR [rdi]
  40e9a3:	mov    rcx,rax
  40e9a6:	shl    r8,0x2
  40e9aa:	call   0x44b480
  40e9af:	mov    rcx,QWORD PTR [rdi]
  40e9b2:	call   0x40215c
  40e9b7:	mov    QWORD PTR [rdi],rbx
  40e9ba:	mov    DWORD PTR [rdi+0xc],esi
  40e9bd:	mov    r9,QWORD PTR [rdi]
  40e9c0:	mov    r8d,DWORD PTR [rdi+0x8]
  40e9c4:	lea    eax,[rbp+0x1]
  40e9c7:	sub    r8d,ebp
  40e9ca:	lea    rdx,[r9+rbp*4]
  40e9ce:	lea    rcx,[r9+rax*4]
  40e9d2:	shl    r8,0x2
  40e9d6:	call   0x44b774
  40e9db:	mov    r11,QWORD PTR [rdi]
  40e9de:	mov    DWORD PTR [r11+rbp*4],r12d
  40e9e2:	inc    DWORD PTR [rdi+0x8]
  40e9e5:	add    rsp,0x20
  40e9e9:	pop    r12
  40e9eb:	pop    rdi
  40e9ec:	pop    rsi
  40e9ed:	pop    rbp
  40e9ee:	pop    rbx
  40e9ef:	ret    
  40e9f0:	rex.W push rbx
  40e9f2:	push   rbp
  40e9f3:	push   rsi
  40e9f4:	push   rdi
  40e9f5:	push   r12
  40e9f7:	push   r13
  40e9f9:	push   r14
  40e9fb:	sub    rsp,0x20
  40e9ff:	mov    ebx,DWORD PTR [rcx+0x18]
  40ea02:	xor    ebp,ebp
  40ea04:	mov    rdi,r8
  40ea07:	test   ebx,ebx
  40ea09:	mov    r14,rdx
  40ea0c:	mov    r13,rcx
  40ea0f:	je     0x40ea52
  40ea11:	mov    rax,QWORD PTR [r13+0x10]
  40ea15:	lea    esi,[rbx+rbp*1]
  40ea18:	shr    esi,1
  40ea1a:	mov    r12d,DWORD PTR [rax+rsi*4]
  40ea1e:	mov    rax,QWORD PTR [r13+0x0]
  40ea22:	mov    rdx,QWORD PTR [rax+r12*8]
  40ea26:	cmp    rdi,QWORD PTR [rdx+0x8]
  40ea2a:	jae    0x40ea30
  40ea2c:	mov    ebx,esi
  40ea2e:	jmp    0x40ea4e
  40ea30:	ja     0x40ea4b
  40ea32:	test   rdi,rdi
  40ea35:	je     0x40ea87
  40ea37:	mov    rdx,QWORD PTR [rdx]
  40ea3a:	mov    r8,rdi
  40ea3d:	mov    rcx,r14
  40ea40:	call   0x44b786
  40ea45:	test   eax,eax
  40ea47:	je     0x40ea87
  40ea49:	js     0x40ea2c
  40ea4b:	lea    ebp,[rsi+0x1]
  40ea4e:	cmp    ebp,ebx
  40ea50:	jne    0x40ea11
  40ea52:	mov    esi,DWORD PTR [r13+0x8]
  40ea56:	lea    rcx,[r13+0x10]
  40ea5a:	mov    edx,ebp
  40ea5c:	mov    r8d,esi
  40ea5f:	call   0x40e964
  40ea64:	mov    ecx,0x10
  40ea69:	call   0x402130
  40ea6e:	test   rax,rax
  40ea71:	mov    rbx,rax
  40ea74:	je     0x40ea8c
  40ea76:	mov    QWORD PTR [rax],0x0
  40ea7d:	mov    QWORD PTR [rax+0x8],0x0
  40ea85:	jmp    0x40ea8e
  40ea87:	mov    eax,r12d
  40ea8a:	jmp    0x40eae4
  40ea8c:	xor    ebx,ebx
  40ea8e:	mov    rdx,rbx
  40ea91:	mov    rcx,r13
  40ea94:	call   0x4010c8
  40ea99:	cmp    rdi,QWORD PTR [rbx+0x8]
  40ea9d:	je     0x40eacf
  40ea9f:	mov    rcx,QWORD PTR [rbx]
  40eaa2:	test   rcx,rcx
  40eaa5:	je     0x40eab3
  40eaa7:	call   0x40215c
  40eaac:	mov    QWORD PTR [rbx],0x0
  40eab3:	test   rdi,rdi
  40eab6:	mov    QWORD PTR [rbx+0x8],0x0
  40eabe:	je     0x40eae2
  40eac0:	mov    rcx,rdi
  40eac3:	call   0x402130
  40eac8:	mov    QWORD PTR [rbx+0x8],rdi
  40eacc:	mov    QWORD PTR [rbx],rax
  40eacf:	test   rdi,rdi
  40ead2:	je     0x40eae2
  40ead4:	mov    rcx,QWORD PTR [rbx]
  40ead7:	mov    r8,rdi
  40eada:	mov    rdx,r14
  40eadd:	call   0x44b480
  40eae2:	mov    eax,esi
  40eae4:	add    rsp,0x20
  40eae8:	pop    r14
  40eaea:	pop    r13
  40eaec:	pop    r12
  40eaee:	pop    rdi
  40eaef:	pop    rsi
  40eaf0:	pop    rbp
  40eaf1:	pop    rbx
  40eaf2:	ret    
  40eaf3:	int3   
  40eaf4:	mov    rcx,QWORD PTR [rcx]
  40eaf7:	rex.W jmp QWORD PTR [rip+0x3e5e2]        # 0x44d0e0
  40eafe:	int3   
  40eaff:	int3   
  40eb00:	mov    QWORD PTR [rsp+0x8],rcx
  40eb05:	push   rbx
  40eb06:	sub    rsp,0x30
  40eb0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40eb13:	mov    rbx,rcx
  40eb16:	call   0x403150
  40eb1b:	nop
  40eb1c:	lea    rcx,[rbx+0x10]
  40eb20:	call   0x403150
  40eb25:	nop
  40eb26:	lea    rcx,[rbx+0x20]
  40eb2a:	call   0x403150
  40eb2f:	nop
  40eb30:	lea    rcx,[rbx+0x30]
  40eb34:	call   0x403150
  40eb39:	nop
  40eb3a:	lea    rcx,[rbx+0x40]
  40eb3e:	call   0x403150
  40eb43:	nop
  40eb44:	mov    BYTE PTR [rbx+0x50],0x0
  40eb48:	lea    rcx,[rbx+0x58]
  40eb4c:	call   0x403150
  40eb51:	nop
  40eb52:	lea    rcx,[rbx+0x68]
  40eb56:	call   0x403150
  40eb5b:	nop
  40eb5c:	mov    rax,rbx
  40eb5f:	add    rsp,0x30
  40eb63:	pop    rbx
  40eb64:	ret    
  40eb65:	int3   
  40eb66:	int3   
  40eb67:	int3   
  40eb68:	int3   
  40eb69:	int3   
  40eb6a:	int3   
  40eb6b:	int3   
  40eb6c:	int3   
  40eb6d:	int3   
  40eb6e:	int3   
  40eb6f:	int3   
  40eb70:	rex.W push rbp
  40eb72:	sub    rsp,0x20
  40eb76:	mov    rbp,rdx
  40eb79:	mov    rcx,QWORD PTR [rbp+0x40]
  40eb7d:	call   0x401000
  40eb82:	add    rsp,0x20
  40eb86:	pop    rbp
  40eb87:	ret    
  40eb88:	int3   
  40eb89:	int3   
  40eb8a:	int3   
  40eb8b:	int3   
  40eb8c:	int3   
  40eb8d:	int3   
  40eb8e:	int3   
  40eb8f:	int3   
  40eb90:	rex.W push rbp
  40eb92:	sub    rsp,0x20
  40eb96:	mov    rbp,rdx
  40eb99:	mov    rcx,QWORD PTR [rbp+0x40]
  40eb9d:	add    rcx,0x10
  40eba1:	call   0x401000
  40eba6:	add    rsp,0x20
  40ebaa:	pop    rbp
  40ebab:	ret    
  40ebac:	int3   
  40ebad:	int3   
  40ebae:	int3   
  40ebaf:	int3   
  40ebb0:	rex.W push rbp
  40ebb2:	sub    rsp,0x20
  40ebb6:	mov    rbp,rdx
  40ebb9:	mov    rcx,QWORD PTR [rbp+0x40]
  40ebbd:	add    rcx,0x20
  40ebc1:	call   0x401000
  40ebc6:	add    rsp,0x20
  40ebca:	pop    rbp
  40ebcb:	ret    
  40ebcc:	int3   
  40ebcd:	int3   
  40ebce:	int3   
  40ebcf:	int3   
  40ebd0:	rex.W push rbp
  40ebd2:	sub    rsp,0x20
  40ebd6:	mov    rbp,rdx
  40ebd9:	mov    rcx,QWORD PTR [rbp+0x40]
  40ebdd:	add    rcx,0x30
  40ebe1:	call   0x401000
  40ebe6:	add    rsp,0x20
  40ebea:	pop    rbp
  40ebeb:	ret    
  40ebec:	int3   
  40ebed:	int3   
  40ebee:	int3   
  40ebef:	int3   
  40ebf0:	rex.W push rbp
  40ebf2:	sub    rsp,0x20
  40ebf6:	mov    rbp,rdx
  40ebf9:	mov    rcx,QWORD PTR [rbp+0x40]
  40ebfd:	add    rcx,0x40
  40ec01:	call   0x401000
  40ec06:	add    rsp,0x20
  40ec0a:	pop    rbp
  40ec0b:	ret    
  40ec0c:	int3   
  40ec0d:	int3   
  40ec0e:	int3   
  40ec0f:	int3   
  40ec10:	rex.W push rbp
  40ec12:	sub    rsp,0x20
  40ec16:	mov    rbp,rdx
  40ec19:	mov    rcx,QWORD PTR [rbp+0x40]
  40ec1d:	add    rcx,0x58
  40ec21:	call   0x401000
  40ec26:	add    rsp,0x20
  40ec2a:	pop    rbp
  40ec2b:	ret    
  40ec2c:	rex.W push rbx
  40ec2e:	sub    rsp,0x20
  40ec32:	mov    rbx,rcx
  40ec35:	mov    rcx,QWORD PTR [rcx+0x68]
  40ec39:	call   0x40215c
  40ec3e:	mov    rcx,QWORD PTR [rbx+0x58]
  40ec42:	call   0x40215c
  40ec47:	mov    rcx,QWORD PTR [rbx+0x40]
  40ec4b:	call   0x40215c
  40ec50:	mov    rcx,QWORD PTR [rbx+0x30]
  40ec54:	call   0x40215c
  40ec59:	mov    rcx,QWORD PTR [rbx+0x20]
  40ec5d:	call   0x40215c
  40ec62:	mov    rcx,QWORD PTR [rbx+0x10]
  40ec66:	call   0x40215c
  40ec6b:	mov    rcx,QWORD PTR [rbx]
  40ec6e:	add    rsp,0x20
  40ec72:	pop    rbx
  40ec73:	jmp    0x40215c
  40ec78:	rex.W push rbx
  40ec7a:	sub    rsp,0x20
  40ec7e:	mov    rbx,rcx
  40ec81:	mov    rcx,QWORD PTR [rcx+0x78]
  40ec85:	call   0x40215c
  40ec8a:	mov    rcx,QWORD PTR [rbx+0x68]
  40ec8e:	call   0x40215c
  40ec93:	mov    rcx,QWORD PTR [rbx+0x50]
  40ec97:	call   0x40215c
  40ec9c:	mov    rcx,QWORD PTR [rbx+0x40]
  40eca0:	call   0x40215c
  40eca5:	mov    rcx,QWORD PTR [rbx+0x30]
  40eca9:	call   0x40215c
  40ecae:	mov    rcx,QWORD PTR [rbx+0x20]
  40ecb2:	call   0x40215c
  40ecb7:	mov    rcx,QWORD PTR [rbx+0x10]
  40ecbb:	call   0x40215c
  40ecc0:	mov    rcx,QWORD PTR [rbx]
  40ecc3:	add    rsp,0x20
  40ecc7:	pop    rbx
  40ecc8:	jmp    0x40215c
  40eccd:	int3   
  40ecce:	int3   
  40eccf:	int3   
  40ecd0:	mov    QWORD PTR [rsp+0x8],rcx
  40ecd5:	push   rbx
  40ecd6:	push   rsi
  40ecd7:	push   rdi
  40ecd8:	sub    rsp,0x50
  40ecdc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40ece5:	mov    rsi,r8
  40ece8:	mov    rbx,rdx
  40eceb:	mov    rdi,rcx
  40ecee:	call   0x403150
  40ecf3:	nop
  40ecf4:	mov    rdx,rbx
  40ecf7:	lea    rcx,[rsp+0x28]
  40ecfc:	call   0x402b6c
  40ed01:	nop
  40ed02:	xor    r8d,r8d
  40ed05:	lea    rdx,[rsp+0x28]
  40ed0a:	lea    rcx,[rsp+0x38]
  40ed0f:	call   0x403d2c
  40ed14:	nop
  40ed15:	mov    rdx,rax
  40ed18:	mov    rcx,rdi
  40ed1b:	call   0x403444
  40ed20:	nop
  40ed21:	mov    rcx,QWORD PTR [rsp+0x38]
  40ed26:	call   0x40215c
  40ed2b:	nop
  40ed2c:	mov    rcx,QWORD PTR [rsp+0x28]
  40ed31:	call   0x40215c
  40ed36:	test   rsi,rsi
  40ed39:	je     0x40ed4f
  40ed3b:	mov    rcx,rdi
  40ed3e:	call   0x4033ac
  40ed43:	mov    rdx,rsi
  40ed46:	mov    rcx,rdi
  40ed49:	call   0x4033f0
  40ed4e:	nop
  40ed4f:	mov    rax,rdi
  40ed52:	add    rsp,0x50
  40ed56:	pop    rdi
  40ed57:	pop    rsi
  40ed58:	pop    rbx
  40ed59:	ret    
  40ed5a:	int3   
  40ed5b:	int3   
  40ed5c:	int3   
  40ed5d:	int3   
  40ed5e:	int3   
  40ed5f:	int3   
  40ed60:	rex.W push rbp
  40ed62:	sub    rsp,0x20
  40ed66:	mov    rbp,rdx
  40ed69:	mov    rcx,QWORD PTR [rbp+0x70]
  40ed6d:	call   0x401000
  40ed72:	add    rsp,0x20
  40ed76:	pop    rbp
  40ed77:	ret    
  40ed78:	int3   
  40ed79:	int3   
  40ed7a:	int3   
  40ed7b:	int3   
  40ed7c:	int3   
  40ed7d:	int3   
  40ed7e:	int3   
  40ed7f:	int3   
  40ed80:	rex.W push rbp
  40ed82:	sub    rsp,0x20
  40ed86:	mov    rbp,rdx
  40ed89:	lea    rcx,[rbp+0x28]
  40ed8d:	call   0x401000
  40ed92:	add    rsp,0x20
  40ed96:	pop    rbp
  40ed97:	ret    
  40ed98:	int3   
  40ed99:	int3   
  40ed9a:	int3   
  40ed9b:	int3   
  40ed9c:	int3   
  40ed9d:	int3   
  40ed9e:	int3   
  40ed9f:	int3   
  40eda0:	rex.W push rbp
  40eda2:	sub    rsp,0x20
  40eda6:	mov    rbp,rdx
  40eda9:	lea    rcx,[rbp+0x38]
  40edad:	call   0x401000
  40edb2:	add    rsp,0x20
  40edb6:	pop    rbp
  40edb7:	ret    
  40edb8:	mov    eax,DWORD PTR [rcx]
  40edba:	add    eax,0xfffffffd
  40edbd:	cmp    eax,0x2
  40edc0:	setbe  al
  40edc3:	ret    
  40edc4:	cmp    DWORD PTR [rcx],0x0
  40edc7:	jl     0x40edd6
  40edc9:	cmp    DWORD PTR [rcx],0x2
  40edcc:	jle    0x40edd3
  40edce:	cmp    DWORD PTR [rcx],0xa
  40edd1:	jne    0x40edd6
  40edd3:	mov    al,0x1
  40edd5:	ret    
  40edd6:	xor    al,al
  40edd8:	ret    
  40edd9:	int3   
  40edda:	int3   
  40eddb:	int3   
  40eddc:	rex.W push rbx
  40edde:	push   rsi
  40eddf:	push   rdi
  40ede0:	sub    rsp,0x30
  40ede4:	xor    r10d,r10d
  40ede7:	mov    dil,r8b
  40edea:	mov    rbx,rdx
  40eded:	cmp    r9d,r10d
  40edf0:	mov    rsi,rcx
  40edf3:	je     0x40ee07
  40edf5:	dec    r9d
  40edf8:	jne    0x40ee0a
  40edfa:	mov    rcx,rdx
  40edfd:	call   0x40450c
  40ee02:	mov    r10b,al
  40ee05:	jmp    0x40ee0a
  40ee07:	mov    r10b,0x1
  40ee0a:	mov    al,BYTE PTR [rsp+0x70]
  40ee0e:	mov    r9b,r10b
  40ee11:	mov    r8,rbx
  40ee14:	mov    dl,dil
  40ee17:	mov    rcx,rsi
  40ee1a:	mov    BYTE PTR [rsp+0x20],al
  40ee1e:	call   0x4053fc
  40ee23:	add    rsp,0x30
  40ee27:	pop    rdi
  40ee28:	pop    rsi
  40ee29:	pop    rbx
  40ee2a:	ret    
  40ee2b:	int3   
  40ee2c:	rex.W push rbx
  40ee2e:	push   rdi
  40ee2f:	sub    rsp,0x78
  40ee33:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40ee3c:	mov    rbx,rdx
  40ee3f:	mov    rdi,rcx
  40ee42:	cmp    DWORD PTR [rdx+0x8],0x0
  40ee46:	je     0x40eedd
  40ee4c:	mov    rcx,rdx
  40ee4f:	call   0x40450c
  40ee54:	test   al,al
  40ee56:	jne    0x40eedd
  40ee5c:	lea    rcx,[rsp+0x38]
  40ee61:	call   0x407fc0
  40ee66:	lea    rcx,[rsp+0x60]
  40ee6b:	call   0x403150
  40ee70:	nop
  40ee71:	mov    r8,rbx
  40ee74:	mov    rdx,rdi
  40ee77:	lea    rcx,[rsp+0x28]
  40ee7c:	call   0x4030d4
  40ee81:	nop
  40ee82:	mov    rcx,QWORD PTR [rsp+0x28]
  40ee87:	call   0x409df4
  40ee8c:	test   al,al
  40ee8e:	je     0x40eea7
  40ee90:	mov    rcx,QWORD PTR [rsp+0x28]
  40ee95:	call   0x40215c
  40ee9a:	nop
  40ee9b:	mov    rcx,QWORD PTR [rsp+0x60]
  40eea0:	call   0x40215c
  40eea5:	jmp    0x40eedd
  40eea7:	mov    rdx,QWORD PTR [rsp+0x28]
  40eeac:	lea    rcx,[rsp+0x38]
  40eeb1:	call   0x408134
  40eeb6:	test   al,al
  40eeb8:	je     0x40eec8
  40eeba:	lea    rdx,[rsp+0x60]
  40eebf:	mov    rcx,rbx
  40eec2:	call   0x4032f8
  40eec7:	nop
  40eec8:	mov    rcx,QWORD PTR [rsp+0x28]
  40eecd:	call   0x40215c
  40eed2:	nop
  40eed3:	mov    rcx,QWORD PTR [rsp+0x60]
  40eed8:	call   0x40215c
  40eedd:	add    rsp,0x78
  40eee1:	pop    rdi
  40eee2:	pop    rbx
  40eee3:	ret    
  40eee4:	int3   
  40eee5:	int3   
  40eee6:	int3   
  40eee7:	int3   
  40eee8:	int3   
  40eee9:	int3   
  40eeea:	int3   
  40eeeb:	int3   
  40eeec:	rex.W push rbp
  40eeee:	sub    rsp,0x20
  40eef2:	mov    rbp,rdx
  40eef5:	lea    rcx,[rbp+0x38]
  40eef9:	call   0x406fe0
  40eefe:	add    rsp,0x20
  40ef02:	pop    rbp
  40ef03:	ret    
  40ef04:	int3   
  40ef05:	int3   
  40ef06:	int3   
  40ef07:	int3   
  40ef08:	int3   
  40ef09:	int3   
  40ef0a:	int3   
  40ef0b:	int3   
  40ef0c:	rex.W push rbp
  40ef0e:	sub    rsp,0x20
  40ef12:	mov    rbp,rdx
  40ef15:	lea    rcx,[rbp+0x28]
  40ef19:	call   0x401000
  40ef1e:	add    rsp,0x20
  40ef22:	pop    rbp
  40ef23:	ret    
  40ef24:	rex.W push rbx
  40ef26:	sub    rsp,0x20
  40ef2a:	mov    rbx,rcx
  40ef2d:	mov    rcx,QWORD PTR [rcx+0x10]
  40ef31:	call   0x40215c
  40ef36:	mov    rcx,QWORD PTR [rbx]
  40ef39:	add    rsp,0x20
  40ef3d:	pop    rbx
  40ef3e:	jmp    0x40215c
  40ef43:	int3   
  40ef44:	rex.W push rbx
  40ef46:	sub    rsp,0x20
  40ef4a:	mov    edx,0x33
  40ef4f:	mov    rbx,rcx
  40ef52:	call   0x401354
  40ef57:	mov    rax,rbx
  40ef5a:	add    rsp,0x20
  40ef5e:	pop    rbx
  40ef5f:	ret    
  40ef60:	rex.W push rbx
  40ef62:	sub    rsp,0x20
  40ef66:	mov    rbx,rcx
  40ef69:	mov    rcx,QWORD PTR [rcx+0x40]
  40ef6d:	call   0x40215c
  40ef72:	mov    rcx,QWORD PTR [rbx+0x30]
  40ef76:	call   0x40215c
  40ef7b:	mov    rcx,QWORD PTR [rbx+0x20]
  40ef7f:	add    rsp,0x20
  40ef83:	pop    rbx
  40ef84:	jmp    0x40215c
  40ef89:	int3   
  40ef8a:	int3   
  40ef8b:	int3   
  40ef8c:	mov    QWORD PTR [rsp+0x8],rcx
  40ef91:	push   rbx
  40ef92:	push   rdi
  40ef93:	sub    rsp,0x38
  40ef97:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40efa0:	mov    rbx,rdx
  40efa3:	mov    rdi,rcx
  40efa6:	call   0x403208
  40efab:	nop
  40efac:	lea    rdx,[rbx+0x10]
  40efb0:	lea    rcx,[rdi+0x10]
  40efb4:	call   0x403208
  40efb9:	nop
  40efba:	lea    rdx,[rbx+0x20]
  40efbe:	lea    rcx,[rdi+0x20]
  40efc2:	call   0x403208
  40efc7:	nop
  40efc8:	lea    rdx,[rbx+0x30]
  40efcc:	lea    rcx,[rdi+0x30]
  40efd0:	call   0x403208
  40efd5:	nop
  40efd6:	lea    rdx,[rbx+0x40]
  40efda:	lea    rcx,[rdi+0x40]
  40efde:	call   0x403208
  40efe3:	nop
  40efe4:	mov    al,BYTE PTR [rbx+0x50]
  40efe7:	mov    BYTE PTR [rdi+0x50],al
  40efea:	lea    rdx,[rbx+0x58]
  40efee:	lea    rcx,[rdi+0x58]
  40eff2:	call   0x403208
  40eff7:	nop
  40eff8:	lea    rdx,[rbx+0x68]
  40effc:	lea    rcx,[rdi+0x68]
  40f000:	call   0x403208
  40f005:	nop
  40f006:	mov    rax,rdi
  40f009:	add    rsp,0x38
  40f00d:	pop    rdi
  40f00e:	pop    rbx
  40f00f:	ret    
  40f010:	int3   
  40f011:	int3   
  40f012:	int3   
  40f013:	int3   
  40f014:	int3   
  40f015:	int3   
  40f016:	int3   
  40f017:	int3   
  40f018:	int3   
  40f019:	int3   
  40f01a:	int3   
  40f01b:	int3   
  40f01c:	rex.W push rbp
  40f01e:	sub    rsp,0x20
  40f022:	mov    rbp,rdx
  40f025:	mov    rcx,QWORD PTR [rbp+0x50]
  40f029:	call   0x401000
  40f02e:	add    rsp,0x20
  40f032:	pop    rbp
  40f033:	ret    
  40f034:	int3   
  40f035:	int3   
  40f036:	int3   
  40f037:	int3   
  40f038:	int3   
  40f039:	int3   
  40f03a:	int3   
  40f03b:	int3   
  40f03c:	rex.W push rbp
  40f03e:	sub    rsp,0x20
  40f042:	mov    rbp,rdx
  40f045:	mov    rcx,QWORD PTR [rbp+0x50]
  40f049:	add    rcx,0x10
  40f04d:	call   0x401000
  40f052:	add    rsp,0x20
  40f056:	pop    rbp
  40f057:	ret    
  40f058:	int3   
  40f059:	int3   
  40f05a:	int3   
  40f05b:	int3   
  40f05c:	rex.W push rbp
  40f05e:	sub    rsp,0x20
  40f062:	mov    rbp,rdx
  40f065:	mov    rcx,QWORD PTR [rbp+0x50]
  40f069:	add    rcx,0x20
  40f06d:	call   0x401000
  40f072:	add    rsp,0x20
  40f076:	pop    rbp
  40f077:	ret    
  40f078:	int3   
  40f079:	int3   
  40f07a:	int3   
  40f07b:	int3   
  40f07c:	rex.W push rbp
  40f07e:	sub    rsp,0x20
  40f082:	mov    rbp,rdx
  40f085:	mov    rcx,QWORD PTR [rbp+0x50]
  40f089:	add    rcx,0x30
  40f08d:	call   0x401000
  40f092:	add    rsp,0x20
  40f096:	pop    rbp
  40f097:	ret    
  40f098:	int3   
  40f099:	int3   
  40f09a:	int3   
  40f09b:	int3   
  40f09c:	rex.W push rbp
  40f09e:	sub    rsp,0x20
  40f0a2:	mov    rbp,rdx
  40f0a5:	mov    rcx,QWORD PTR [rbp+0x50]
  40f0a9:	add    rcx,0x40
  40f0ad:	call   0x401000
  40f0b2:	add    rsp,0x20
  40f0b6:	pop    rbp
  40f0b7:	ret    
  40f0b8:	int3   
  40f0b9:	int3   
  40f0ba:	int3   
  40f0bb:	int3   
  40f0bc:	rex.W push rbp
  40f0be:	sub    rsp,0x20
  40f0c2:	mov    rbp,rdx
  40f0c5:	mov    rcx,QWORD PTR [rbp+0x50]
  40f0c9:	add    rcx,0x58
  40f0cd:	call   0x401000
  40f0d2:	add    rsp,0x20
  40f0d6:	pop    rbp
  40f0d7:	ret    
  40f0d8:	rex.W push rbx
  40f0da:	sub    rsp,0x20
  40f0de:	mov    rbx,rcx
  40f0e1:	mov    DWORD PTR [rsp+0x30],0x0
  40f0e9:	call   0x403018
  40f0ee:	mov    rax,rbx
  40f0f1:	add    rsp,0x20
  40f0f5:	pop    rbx
  40f0f6:	ret    
  40f0f7:	int3   
  40f0f8:	rex.W push rbx
  40f0fa:	sub    rsp,0x20
  40f0fe:	mov    rbx,rcx
  40f101:	mov    rcx,QWORD PTR [rcx]
  40f104:	test   rcx,rcx
  40f107:	je     0x40f11a
  40f109:	call   QWORD PTR [rip+0x3e0d1]        # 0x44d1e0
  40f10f:	test   eax,eax
  40f111:	je     0x40f11a
  40f113:	mov    QWORD PTR [rbx],0x0
  40f11a:	add    rsp,0x20
  40f11e:	pop    rbx
  40f11f:	ret    
  40f120:	rex.W push rbx
  40f122:	push   rbp
  40f123:	push   rsi
  40f124:	push   rdi
  40f125:	push   r12
  40f127:	push   r13
  40f129:	sub    rsp,0x38
  40f12d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40f136:	mov    r12,rdx
  40f139:	mov    rdi,rcx
  40f13c:	cmp    rdx,rcx
  40f13f:	jne    0x40f149
  40f141:	mov    rax,rcx
  40f144:	jmp    0x40f22f
  40f149:	movsxd rbx,DWORD PTR [rcx+0x8]
  40f14d:	mov    rsi,rbx
  40f150:	test   ebx,ebx
  40f152:	je     0x40f189
  40f154:	shl    rsi,0x3
  40f158:	add    ebx,0xffffffff
  40f15b:	sub    rsi,0x8
  40f15f:	mov    rax,QWORD PTR [rdi]
  40f162:	mov    rbp,QWORD PTR [rsi+rax*1]
  40f166:	test   rbp,rbp
  40f169:	je     0x40f185
  40f16b:	mov    rcx,QWORD PTR [rbp+0x10]
  40f16f:	call   0x40215c
  40f174:	mov    rcx,QWORD PTR [rbp+0x0]
  40f178:	call   0x40215c
  40f17d:	mov    rcx,rbp
  40f180:	call   0x40215c
  40f185:	test   ebx,ebx
  40f187:	jne    0x40f158
  40f189:	mov    DWORD PTR [rdi+0x8],0x0
  40f190:	mov    ebx,DWORD PTR [r12+0x8]
  40f195:	cmp    ebx,DWORD PTR [rdi+0xc]
  40f198:	jbe    0x40f1d0
  40f19a:	mov    rcx,rbx
  40f19d:	shl    rcx,0x3
  40f1a1:	call   0x402130
  40f1a6:	mov    rsi,rax
  40f1a9:	cmp    DWORD PTR [rdi+0x8],0x0
  40f1ad:	je     0x40f1c2
  40f1af:	mov    r8d,DWORD PTR [rdi+0x8]
  40f1b3:	shl    r8,0x3
  40f1b7:	mov    rdx,QWORD PTR [rdi]
  40f1ba:	mov    rcx,rax
  40f1bd:	call   0x44b480
  40f1c2:	mov    rcx,QWORD PTR [rdi]
  40f1c5:	call   0x40215c
  40f1ca:	mov    QWORD PTR [rdi],rsi
  40f1cd:	mov    DWORD PTR [rdi+0xc],ebx
  40f1d0:	test   ebx,ebx
  40f1d2:	je     0x40f22c
  40f1d4:	xor    ebp,ebp
  40f1d6:	mov    r13,rbx
  40f1d9:	mov    ecx,0x20
  40f1de:	call   0x402130
  40f1e3:	mov    rsi,rax
  40f1e6:	mov    QWORD PTR [rsp+0x70],rax
  40f1eb:	test   rax,rax
  40f1ee:	je     0x40f214
  40f1f0:	mov    rcx,QWORD PTR [r12]
  40f1f4:	mov    rbx,QWORD PTR [rcx+rbp*1]
  40f1f8:	mov    rdx,rbx
  40f1fb:	mov    rcx,rax
  40f1fe:	call   0x403208
  40f203:	nop
  40f204:	lea    rdx,[rbx+0x10]
  40f208:	lea    rcx,[rsi+0x10]
  40f20c:	call   0x403208
  40f211:	nop
  40f212:	jmp    0x40f216
  40f214:	xor    esi,esi
  40f216:	mov    ecx,DWORD PTR [rdi+0x8]
  40f219:	mov    rax,QWORD PTR [rdi]
  40f21c:	mov    QWORD PTR [rax+rcx*8],rsi
  40f220:	inc    DWORD PTR [rdi+0x8]
  40f223:	add    rbp,0x8
  40f227:	dec    r13
  40f22a:	jne    0x40f1d9
  40f22c:	mov    rax,rdi
  40f22f:	add    rsp,0x38
  40f233:	pop    r13
  40f235:	pop    r12
  40f237:	pop    rdi
  40f238:	pop    rsi
  40f239:	pop    rbp
  40f23a:	pop    rbx
  40f23b:	ret    
  40f23c:	int3   
  40f23d:	int3   
  40f23e:	int3   
  40f23f:	int3   
  40f240:	rex.W push rbp
  40f242:	sub    rsp,0x20
  40f246:	mov    rbp,rdx
  40f249:	mov    rcx,QWORD PTR [rbp+0x70]
  40f24d:	call   0x40215c
  40f252:	add    rsp,0x20
  40f256:	pop    rbp
  40f257:	ret    
  40f258:	int3   
  40f259:	int3   
  40f25a:	int3   
  40f25b:	int3   
  40f25c:	int3   
  40f25d:	int3   
  40f25e:	int3   
  40f25f:	int3   
  40f260:	rex.W push rbp
  40f262:	sub    rsp,0x20
  40f266:	mov    rbp,rdx
  40f269:	mov    rcx,QWORD PTR [rbp+0x70]
  40f26d:	call   0x401000
  40f272:	add    rsp,0x20
  40f276:	pop    rbp
  40f277:	ret    
  40f278:	rex.W push rbx
  40f27a:	push   rbp
  40f27b:	push   rsi
  40f27c:	push   rdi
  40f27d:	sub    rsp,0x28
  40f281:	movsxd rbx,DWORD PTR [rcx+0x8]
  40f285:	mov    rdi,rcx
  40f288:	test   ebx,ebx
  40f28a:	mov    rsi,rbx
  40f28d:	je     0x40f2fa
  40f28f:	shl    rsi,0x3
  40f293:	mov    rax,QWORD PTR [rdi]
  40f296:	sub    rsi,0x8
  40f29a:	add    ebx,0xffffffff
  40f29d:	mov    rbp,QWORD PTR [rsi+rax*1]
  40f2a1:	test   rbp,rbp
  40f2a4:	je     0x40f2f6
  40f2a6:	mov    rcx,QWORD PTR [rbp+0x78]
  40f2aa:	call   0x40215c
  40f2af:	mov    rcx,QWORD PTR [rbp+0x68]
  40f2b3:	call   0x40215c
  40f2b8:	mov    rcx,QWORD PTR [rbp+0x50]
  40f2bc:	call   0x40215c
  40f2c1:	mov    rcx,QWORD PTR [rbp+0x40]
  40f2c5:	call   0x40215c
  40f2ca:	mov    rcx,QWORD PTR [rbp+0x30]
  40f2ce:	call   0x40215c
  40f2d3:	mov    rcx,QWORD PTR [rbp+0x20]
  40f2d7:	call   0x40215c
  40f2dc:	mov    rcx,QWORD PTR [rbp+0x10]
  40f2e0:	call   0x40215c
  40f2e5:	mov    rcx,QWORD PTR [rbp+0x0]
  40f2e9:	call   0x40215c
  40f2ee:	mov    rcx,rbp
  40f2f1:	call   0x40215c
  40f2f6:	test   ebx,ebx
  40f2f8:	jne    0x40f293
  40f2fa:	mov    DWORD PTR [rdi+0x8],0x0
  40f301:	add    rsp,0x28
  40f305:	pop    rdi
  40f306:	pop    rsi
  40f307:	pop    rbp
  40f308:	pop    rbx
  40f309:	ret    
  40f30a:	int3   
  40f30b:	int3   
  40f30c:	rex.W push rbx
  40f30e:	sub    rsp,0x20
  40f312:	mov    r8,QWORD PTR [rcx]
  40f315:	xor    edx,edx
  40f317:	mov    rbx,rcx
  40f31a:	lea    ecx,[rdx+0x2]
  40f31d:	mov    QWORD PTR [rsp+0x30],0x0
  40f326:	call   QWORD PTR [rip+0x3ddac]        # 0x44d0d8
  40f32c:	test   rax,rax
  40f32f:	mov    QWORD PTR [rsp+0x30],rax
  40f334:	jne    0x40f340
  40f336:	call   QWORD PTR [rip+0x3de64]        # 0x44d1a0
  40f33c:	test   eax,eax
  40f33e:	jne    0x40f34a
  40f340:	lea    rcx,[rsp+0x30]
  40f345:	call   0x44b0c0
  40f34a:	lea    rcx,[rsp+0x30]
  40f34f:	call   0x44b000
  40f354:	mov    rcx,QWORD PTR [rbx]
  40f357:	add    rsp,0x20
  40f35b:	pop    rbx
  40f35c:	jmp    0x40215c
  40f361:	int3   
  40f362:	int3   
  40f363:	int3   
  40f364:	mov    QWORD PTR [rsp+0x8],rcx
  40f369:	push   rbx
  40f36a:	push   rbp
  40f36b:	push   rsi
  40f36c:	push   rdi
  40f36d:	push   r12
  40f36f:	push   r13
  40f371:	push   r14
  40f373:	push   r15
  40f375:	sub    rsp,0x88
  40f37c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  40f385:	mov    r14d,r9d
  40f388:	mov    r15b,r8b
  40f38b:	lea    rcx,[rsp+0x48]
  40f390:	call   0x403208
  40f395:	nop
  40f396:	mov    dx,0x3a
  40f39a:	mov    rcx,QWORD PTR [rsp+0x48]
  40f39f:	call   0x4026e0
  40f3a4:	mov    esi,eax
  40f3a6:	xor    ebp,ebp
  40f3a8:	cmp    eax,ebp
  40f3aa:	jge    0x40f3b5
  40f3ac:	mov    rbx,QWORD PTR [rip+0x58d75]        # 0x468128
  40f3b3:	jmp    0x40f3e2
  40f3b5:	lea    edi,[rsi+0x1]
  40f3b8:	mov    rax,QWORD PTR [rsp+0x48]
  40f3bd:	lea    rcx,[rax+rdi*2]
  40f3c1:	mov    dx,0x3a
  40f3c5:	call   0x4026e0
  40f3ca:	lea    ebx,[rax+rdi*1]
  40f3cd:	mov    ecx,0xffffffff
  40f3d2:	cmp    eax,ebp
  40f3d4:	cmovl  ebx,ecx
  40f3d7:	cmp    ebx,ebp
  40f3d9:	jge    0x40f3f4
  40f3db:	mov    rbx,QWORD PTR [rip+0x58d46]        # 0x468128
  40f3e2:	mov    rcx,QWORD PTR [rsp+0x48]
  40f3e7:	call   0x40215c
  40f3ec:	mov    rax,rbx
  40f3ef:	jmp    0x40f825
  40f3f4:	lea    ecx,[rbx+0x1]
  40f3f7:	mov    rax,QWORD PTR [rsp+0x48]
  40f3fc:	lea    rdx,[rax+rcx*2]
  40f400:	lea    rcx,[rsp+0x68]
  40f405:	call   0x4031c0
  40f40a:	nop
  40f40b:	cmp    ebx,DWORD PTR [rsp+0x50]
  40f40f:	jae    0x40f41e
  40f411:	mov    DWORD PTR [rsp+0x50],ebx
  40f415:	mov    rax,QWORD PTR [rsp+0x48]
  40f41a:	mov    WORD PTR [rax+rbx*2],bp
  40f41e:	mov    rax,QWORD PTR [rsp+0x48]
  40f423:	lea    rcx,[rax+rdi*2]
  40f427:	cmp    WORD PTR [rcx],bp
  40f42a:	je     0x40f7cc
  40f430:	lea    rdx,[rsp+0x30]
  40f435:	call   0x403e48
  40f43a:	mov    edi,eax
  40f43c:	mov    rcx,QWORD PTR [rsp+0x30]
  40f441:	cmp    WORD PTR [rcx],bp
  40f444:	sete   cl
  40f447:	cmp    cl,bpl
  40f44a:	je     0x40f7cc
  40f450:	lea    ecx,[rdi-0x2]
  40f453:	cmp    ecx,0x7ffffffe
  40f459:	ja     0x40f7cc
  40f45f:	test   dil,0x1
  40f463:	jne    0x40f7cc
  40f469:	cmp    esi,DWORD PTR [rsp+0x50]
  40f46d:	jae    0x40f47c
  40f46f:	mov    DWORD PTR [rsp+0x50],esi
  40f473:	mov    rax,QWORD PTR [rsp+0x48]
  40f478:	mov    WORD PTR [rax+rsi*2],bp
  40f47c:	mov    r8,QWORD PTR [rsp+0x48]
  40f481:	xor    edx,edx
  40f483:	lea    esi,[rdx+0x4]
  40f486:	mov    ecx,esi
  40f488:	call   QWORD PTR [rip+0x3dc62]        # 0x44d0f0
  40f48e:	mov    rbx,rax
  40f491:	mov    QWORD PTR [rsp+0x30],rax
  40f496:	cmp    rax,rbp
  40f499:	jne    0x40f503
  40f49b:	call   QWORD PTR [rip+0x3dcff]        # 0x44d1a0
  40f4a1:	cmp    eax,ebp
  40f4a3:	je     0x40f503
  40f4a5:	mov    QWORD PTR [rsp+0x30],rbp
  40f4aa:	mov    r8,QWORD PTR [rsp+0x68]
  40f4af:	xor    edx,edx
  40f4b1:	lea    ecx,[rsi-0x2]
  40f4b4:	call   QWORD PTR [rip+0x3dc1e]        # 0x44d0d8
  40f4ba:	mov    QWORD PTR [rsp+0x30],rax
  40f4bf:	cmp    rax,rbp
  40f4c2:	jne    0x40f4ce
  40f4c4:	call   QWORD PTR [rip+0x3dcd6]        # 0x44d1a0
  40f4ca:	cmp    eax,ebp
  40f4cc:	jne    0x40f4d8
  40f4ce:	lea    rcx,[rsp+0x30]
  40f4d3:	call   0x44b0c0
  40f4d8:	lea    rcx,[rsp+0x30]
  40f4dd:	call   0x44b000
  40f4e2:	mov    rcx,QWORD PTR [rsp+0x68]
  40f4e7:	call   0x40215c
  40f4ec:	nop
  40f4ed:	mov    rcx,QWORD PTR [rsp+0x48]
  40f4f2:	call   0x40215c
  40f4f7:	lea    rax,[rip+0x3f0e2]        # 0x44e5e0
  40f4fe:	jmp    0x40f825
  40f503:	mov    QWORD PTR [rsp+0x20],rdi
  40f508:	xor    r9d,r9d
  40f50b:	xor    r8d,r8d
  40f50e:	mov    edx,esi
  40f510:	mov    rcx,rbx
  40f513:	call   QWORD PTR [rip+0x3dbcf]        # 0x44d0e8
  40f519:	mov    rsi,rax
  40f51c:	cmp    rax,rbp
  40f51f:	jne    0x40f58e
  40f521:	cmp    rbx,rbp
  40f524:	je     0x40f530
  40f526:	mov    rcx,rbx
  40f529:	call   QWORD PTR [rip+0x3dcb1]        # 0x44d1e0
  40f52f:	nop
  40f530:	mov    QWORD PTR [rsp+0x30],rbp
  40f535:	mov    r8,QWORD PTR [rsp+0x68]
  40f53a:	xor    edx,edx
  40f53c:	lea    ecx,[rdx+0x2]
  40f53f:	call   QWORD PTR [rip+0x3db93]        # 0x44d0d8
  40f545:	mov    QWORD PTR [rsp+0x30],rax
  40f54a:	cmp    rax,rbp
  40f54d:	jne    0x40f559
  40f54f:	call   QWORD PTR [rip+0x3dc4b]        # 0x44d1a0
  40f555:	cmp    eax,ebp
  40f557:	jne    0x40f563
  40f559:	lea    rcx,[rsp+0x30]
  40f55e:	call   0x44b0c0
  40f563:	lea    rcx,[rsp+0x30]
  40f568:	call   0x44b000
  40f56d:	mov    rcx,QWORD PTR [rsp+0x68]
  40f572:	call   0x40215c
  40f577:	nop
  40f578:	mov    rcx,QWORD PTR [rsp+0x48]
  40f57d:	call   0x40215c
  40f582:	lea    rax,[rip+0x3f03f]        # 0x44e5c8
  40f589:	jmp    0x40f825
  40f58e:	mov    QWORD PTR [rsp+0x40],rax
  40f593:	lea    rcx,[rsp+0x58]
  40f598:	call   0x403150
  40f59d:	nop
  40f59e:	cmp    WORD PTR [rsi],bp
  40f5a1:	je     0x40f629
  40f5a7:	mov    rcx,QWORD PTR [rsp+0x58]
  40f5ac:	call   0x40215c
  40f5b1:	nop
  40f5b2:	mov    rcx,rsi
  40f5b5:	call   QWORD PTR [rip+0x3db25]        # 0x44d0e0
  40f5bb:	nop
  40f5bc:	cmp    rbx,rbp
  40f5bf:	je     0x40f5cb
  40f5c1:	mov    rcx,rbx
  40f5c4:	call   QWORD PTR [rip+0x3dc16]        # 0x44d1e0
  40f5ca:	nop
  40f5cb:	mov    QWORD PTR [rsp+0x30],rbp
  40f5d0:	mov    r8,QWORD PTR [rsp+0x68]
  40f5d5:	xor    edx,edx
  40f5d7:	lea    ecx,[rdx+0x2]
  40f5da:	call   QWORD PTR [rip+0x3daf8]        # 0x44d0d8
  40f5e0:	mov    QWORD PTR [rsp+0x30],rax
  40f5e5:	cmp    rax,rbp
  40f5e8:	jne    0x40f5f4
  40f5ea:	call   QWORD PTR [rip+0x3dbb0]        # 0x44d1a0
  40f5f0:	cmp    eax,ebp
  40f5f2:	jne    0x40f5fe
  40f5f4:	lea    rcx,[rsp+0x30]
  40f5f9:	call   0x44b0c0
  40f5fe:	lea    rcx,[rsp+0x30]
  40f603:	call   0x44b000
  40f608:	mov    rcx,QWORD PTR [rsp+0x68]
  40f60d:	call   0x40215c
  40f612:	nop
  40f613:	mov    rcx,QWORD PTR [rsp+0x48]
  40f618:	call   0x40215c
  40f61d:	lea    rax,[rip+0x3ef8c]        # 0x44e5b0
  40f624:	jmp    0x40f825
  40f629:	shr    edi,1
  40f62b:	cmp    edi,0x1
  40f62e:	jbe    0x40f6c4
  40f634:	lea    rbp,[rsi+0x2]
  40f638:	lea    r12d,[rdi-0x1]
  40f63c:	mov    r13b,BYTE PTR [rsp+0xf0]
  40f644:	mov    edx,DWORD PTR [rsp+0x60]
  40f648:	mov    rbx,QWORD PTR [rsp+0xd0]
  40f650:	movzx  edi,WORD PTR [rbp+0x0]
  40f654:	test   di,di
  40f657:	jne    0x40f687
  40f659:	mov    BYTE PTR [rsp+0x20],r13b
  40f65e:	mov    r9d,r14d
  40f661:	mov    r8b,r15b
  40f664:	lea    rdx,[rsp+0x58]
  40f669:	mov    rcx,rbx
  40f66c:	call   0x40eddc
  40f671:	mov    DWORD PTR [rsp+0x60],0x0
  40f679:	mov    rax,QWORD PTR [rsp+0x58]
  40f67e:	mov    WORD PTR [rax],di
  40f681:	mov    edx,DWORD PTR [rsp+0x60]
  40f685:	jmp    0x40f6b2
  40f687:	cmp    DWORD PTR [rsp+0x64],edx
  40f68b:	jne    0x40f69b
  40f68d:	lea    rcx,[rsp+0x58]
  40f692:	call   0x402f2c
  40f697:	mov    edx,DWORD PTR [rsp+0x60]
  40f69b:	mov    rcx,QWORD PTR [rsp+0x58]
  40f6a0:	mov    eax,edx
  40f6a2:	mov    WORD PTR [rcx+rax*2],di
  40f6a6:	inc    edx
  40f6a8:	mov    WORD PTR [rcx+rdx*2],0x0
  40f6ae:	mov    DWORD PTR [rsp+0x60],edx
  40f6b2:	add    rbp,0x2
  40f6b6:	dec    r12
  40f6b9:	jne    0x40f650
  40f6bb:	mov    rbx,QWORD PTR [rsp+0x30]
  40f6c0:	xor    ebp,ebp
  40f6c2:	jmp    0x40f6c8
  40f6c4:	mov    edx,DWORD PTR [rsp+0x60]
  40f6c8:	cmp    edx,ebp
  40f6ca:	je     0x40f752
  40f6d0:	mov    rcx,QWORD PTR [rsp+0x58]
  40f6d5:	call   0x40215c
  40f6da:	nop
  40f6db:	mov    rcx,rsi
  40f6de:	call   QWORD PTR [rip+0x3d9fc]        # 0x44d0e0
  40f6e4:	nop
  40f6e5:	cmp    rbx,rbp
  40f6e8:	je     0x40f6f4
  40f6ea:	mov    rcx,rbx
  40f6ed:	call   QWORD PTR [rip+0x3daed]        # 0x44d1e0
  40f6f3:	nop
  40f6f4:	mov    QWORD PTR [rsp+0x30],rbp
  40f6f9:	mov    r8,QWORD PTR [rsp+0x68]
  40f6fe:	xor    edx,edx
  40f700:	lea    ecx,[rdx+0x2]
  40f703:	call   QWORD PTR [rip+0x3d9cf]        # 0x44d0d8
  40f709:	mov    QWORD PTR [rsp+0x30],rax
  40f70e:	cmp    rax,rbp
  40f711:	jne    0x40f71d
  40f713:	call   QWORD PTR [rip+0x3da87]        # 0x44d1a0
  40f719:	cmp    eax,ebp
  40f71b:	jne    0x40f727
  40f71d:	lea    rcx,[rsp+0x30]
  40f722:	call   0x44b0c0
  40f727:	lea    rcx,[rsp+0x30]
  40f72c:	call   0x44b000
  40f731:	mov    rcx,QWORD PTR [rsp+0x68]
  40f736:	call   0x40215c
  40f73b:	nop
  40f73c:	mov    rcx,QWORD PTR [rsp+0x48]
  40f741:	call   0x40215c
  40f746:	lea    rax,[rip+0x3ee53]        # 0x44e5a0
  40f74d:	jmp    0x40f825
  40f752:	mov    rcx,QWORD PTR [rsp+0x58]
  40f757:	call   0x40215c
  40f75c:	nop
  40f75d:	mov    rcx,rsi
  40f760:	call   QWORD PTR [rip+0x3d97a]        # 0x44d0e0
  40f766:	nop
  40f767:	cmp    rbx,rbp
  40f76a:	je     0x40f776
  40f76c:	mov    rcx,rbx
  40f76f:	call   QWORD PTR [rip+0x3da6b]        # 0x44d1e0
  40f775:	nop
  40f776:	mov    QWORD PTR [rsp+0x30],rbp
  40f77b:	mov    r8,QWORD PTR [rsp+0x68]
  40f780:	xor    edx,edx
  40f782:	lea    ecx,[rdx+0x2]
  40f785:	call   QWORD PTR [rip+0x3d94d]        # 0x44d0d8
  40f78b:	mov    QWORD PTR [rsp+0x30],rax
  40f790:	cmp    rax,rbp
  40f793:	jne    0x40f79f
  40f795:	call   QWORD PTR [rip+0x3da05]        # 0x44d1a0
  40f79b:	cmp    eax,ebp
  40f79d:	jne    0x40f7a9
  40f79f:	lea    rcx,[rsp+0x30]
  40f7a4:	call   0x44b0c0
  40f7a9:	lea    rcx,[rsp+0x30]
  40f7ae:	call   0x44b000
  40f7b3:	mov    rcx,QWORD PTR [rsp+0x68]
  40f7b8:	call   0x40215c
  40f7bd:	nop
  40f7be:	mov    rcx,QWORD PTR [rsp+0x48]
  40f7c3:	call   0x40215c
  40f7c8:	xor    eax,eax
  40f7ca:	jmp    0x40f825
  40f7cc:	mov    QWORD PTR [rsp+0x30],rbp
  40f7d1:	mov    r8,QWORD PTR [rsp+0x68]
  40f7d6:	xor    edx,edx
  40f7d8:	lea    ecx,[rdx+0x2]
  40f7db:	call   QWORD PTR [rip+0x3d8f7]        # 0x44d0d8
  40f7e1:	mov    QWORD PTR [rsp+0x30],rax
  40f7e6:	cmp    rax,rbp
  40f7e9:	jne    0x40f7f5
  40f7eb:	call   QWORD PTR [rip+0x3d9af]        # 0x44d1a0
  40f7f1:	cmp    eax,ebp
  40f7f3:	jne    0x40f7ff
  40f7f5:	lea    rcx,[rsp+0x30]
  40f7fa:	call   0x44b0c0
  40f7ff:	lea    rcx,[rsp+0x30]
  40f804:	call   0x44b000
  40f809:	mov    rcx,QWORD PTR [rsp+0x68]
  40f80e:	call   0x40215c
  40f813:	nop
  40f814:	mov    rcx,QWORD PTR [rsp+0x48]
  40f819:	call   0x40215c
  40f81e:	lea    rax,[rip+0x3ed5b]        # 0x44e580
  40f825:	add    rsp,0x88
  40f82c:	pop    r15
  40f82e:	pop    r14
  40f830:	pop    r13
  40f832:	pop    r12
  40f834:	pop    rdi
  40f835:	pop    rsi
  40f836:	pop    rbp
  40f837:	pop    rbx
  40f838:	ret    
  40f839:	int3   
  40f83a:	int3   
  40f83b:	int3   
  40f83c:	int3   
  40f83d:	int3   
  40f83e:	int3   
  40f83f:	int3   
  40f840:	int3   
  40f841:	int3   
  40f842:	int3   
  40f843:	int3   
  40f844:	rex.W push rbp
  40f846:	sub    rsp,0x20
  40f84a:	mov    rbp,rdx
  40f84d:	lea    rcx,[rbp+0x48]
  40f851:	call   0x401000
  40f856:	add    rsp,0x20
  40f85a:	pop    rbp
  40f85b:	ret    
  40f85c:	int3   
  40f85d:	int3   
  40f85e:	int3   
  40f85f:	int3   
  40f860:	int3   
  40f861:	int3   
  40f862:	int3   
  40f863:	int3   
  40f864:	rex.W push rbp
  40f866:	sub    rsp,0x20
  40f86a:	mov    rbp,rdx
  40f86d:	lea    rcx,[rbp+0x68]
  40f871:	call   0x40f30c
  40f876:	add    rsp,0x20
  40f87a:	pop    rbp
  40f87b:	ret    
  40f87c:	int3   
  40f87d:	int3   
  40f87e:	int3   
  40f87f:	int3   
  40f880:	int3   
  40f881:	int3   
  40f882:	int3   
  40f883:	int3   
  40f884:	rex.W push rbp
  40f886:	sub    rsp,0x20
  40f88a:	mov    rbp,rdx
  40f88d:	lea    rcx,[rbp+0x30]
  40f891:	call   0x40f0f8
  40f896:	add    rsp,0x20
  40f89a:	pop    rbp
  40f89b:	ret    
  40f89c:	int3   
  40f89d:	int3   
  40f89e:	int3   
  40f89f:	int3   
  40f8a0:	int3   
  40f8a1:	int3   
  40f8a2:	int3   
  40f8a3:	int3   
  40f8a4:	rex.W push rbp
  40f8a6:	sub    rsp,0x20
  40f8aa:	mov    rbp,rdx
  40f8ad:	lea    rcx,[rbp+0x40]
  40f8b1:	call   0x40eaf4
  40f8b6:	add    rsp,0x20
  40f8ba:	pop    rbp
  40f8bb:	ret    
  40f8bc:	int3   
  40f8bd:	int3   
  40f8be:	int3   
  40f8bf:	int3   
  40f8c0:	int3   
  40f8c1:	int3   
  40f8c2:	int3   
  40f8c3:	int3   
  40f8c4:	rex.W push rbp
  40f8c6:	sub    rsp,0x20
  40f8ca:	mov    rbp,rdx
  40f8cd:	lea    rcx,[rbp+0x58]
  40f8d1:	call   0x401000
  40f8d6:	add    rsp,0x20
  40f8da:	pop    rbp
  40f8db:	ret    
  40f8dc:	rex.W push rbx
  40f8de:	push   rbp
  40f8df:	push   rsi
  40f8e0:	push   rdi
  40f8e1:	push   r12
  40f8e3:	sub    rsp,0x20
  40f8e7:	xor    edi,edi
  40f8e9:	mov    rbp,rdx
  40f8ec:	mov    r12,rcx
  40f8ef:	cmp    DWORD PTR [rdx+0x8],edi
  40f8f2:	jbe    0x40f949
  40f8f4:	xor    esi,esi
  40f8f6:	mov    rax,QWORD PTR [rbp+0x0]
  40f8fa:	mov    rbx,QWORD PTR [rsi+rax*1]
  40f8fe:	cmp    BYTE PTR [rbx+0x10],0x0
  40f902:	jne    0x40f93e
  40f904:	cmp    DWORD PTR [rbx+0x8],0x1
  40f908:	jne    0x40f93e
  40f90a:	cmp    DWORD PTR [r12+0x8],0x0
  40f910:	jne    0x40f930
  40f912:	cmp    BYTE PTR [rbx+0x11],0x0
  40f916:	jne    0x40f930
  40f918:	cmp    BYTE PTR [rbx+0x12],0x0
  40f91c:	je     0x40f930
  40f91e:	mov    rax,QWORD PTR [rbx]
  40f921:	mov    rcx,QWORD PTR [rax]
  40f924:	mov    rcx,QWORD PTR [rcx]
  40f927:	call   0x404534
  40f92c:	test   al,al
  40f92e:	jne    0x40f93e
  40f930:	mov    rdx,QWORD PTR [rbx]
  40f933:	mov    rcx,r12
  40f936:	mov    rdx,QWORD PTR [rdx]
  40f939:	call   0x40ee2c
  40f93e:	inc    edi
  40f940:	add    rsi,0x8
  40f944:	cmp    edi,DWORD PTR [rbp+0x8]
  40f947:	jb     0x40f8f6
  40f949:	add    rsp,0x20
  40f94d:	pop    r12
  40f94f:	pop    rdi
  40f950:	pop    rsi
  40f951:	pop    rbp
  40f952:	pop    rbx
  40f953:	ret    
  40f954:	rex.W push rbx
  40f956:	push   rbp
  40f957:	push   rsi
  40f958:	push   rdi
  40f959:	sub    rsp,0x58
  40f95d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40f966:	mov    rbx,r8
  40f969:	mov    rdi,rcx
  40f96c:	mov    r8,rdx
  40f96f:	lea    rdx,[rip+0x587ca]        # 0x468140
  40f976:	call   0x401814
  40f97b:	xor    ebp,ebp
  40f97d:	cmp    al,bpl
  40f980:	jne    0x40f9a6
  40f982:	mov    r8,QWORD PTR [rdi+0x30]
  40f986:	mov    rdx,QWORD PTR [rdi+0x20]
  40f98a:	lea    rcx,[rsp+0x28]
  40f98f:	call   0x40ecd0
  40f994:	lea    rdx,[rip+0x577dd]        # 0x467178
  40f99b:	lea    rcx,[rsp+0x28]
  40f9a0:	call   0x44b71e
  40f9a5:	int3   
  40f9a6:	mov    rax,QWORD PTR [rip+0x3d9cb]        # 0x44d378
  40f9ad:	mov    ecx,DWORD PTR [rax+0x1c]
  40f9b0:	call   QWORD PTR [rip+0x3d95a]        # 0x44d310
  40f9b6:	cmp    eax,ebp
  40f9b8:	setne  al
  40f9bb:	mov    BYTE PTR [rbx+0x4],al
  40f9be:	mov    rax,QWORD PTR [rip+0x3d9b3]        # 0x44d378
  40f9c5:	mov    ecx,DWORD PTR [rax+0x4c]
  40f9c8:	call   QWORD PTR [rip+0x3d942]        # 0x44d310
  40f9ce:	cmp    eax,ebp
  40f9d0:	setne  al
  40f9d3:	mov    BYTE PTR [rbx+0x5],al
  40f9d6:	mov    rax,QWORD PTR [rip+0x3d99b]        # 0x44d378
  40f9dd:	mov    ecx,DWORD PTR [rax+0x7c]
  40f9e0:	call   QWORD PTR [rip+0x3d92a]        # 0x44d310
  40f9e6:	cmp    eax,ebp
  40f9e8:	setne  al
  40f9eb:	mov    BYTE PTR [rbx+0x6],al
  40f9ee:	mov    rax,QWORD PTR [rdi+0x8]
  40f9f2:	cmp    BYTE PTR [rax],bpl
  40f9f5:	jne    0x40fa07
  40f9f7:	cmp    BYTE PTR [rax+0x18],bpl
  40f9fb:	jne    0x40fa07
  40f9fd:	cmp    BYTE PTR [rax+0x30],bpl
  40fa01:	jne    0x40fa07
  40fa03:	mov    eax,ebp
  40fa05:	jmp    0x40fa0c
  40fa07:	mov    eax,0x1
  40fa0c:	mov    BYTE PTR [rbx],al
  40fa0e:	mov    rax,QWORD PTR [rdi+0x8]
  40fa12:	mov    cl,BYTE PTR [rax+0x2d0]
  40fa18:	mov    BYTE PTR [rbx+0x7],cl
  40fa1b:	mov    rax,QWORD PTR [rdi+0x8]
  40fa1f:	mov    cl,BYTE PTR [rax+0x2e8]
  40fa25:	mov    BYTE PTR [rbx+0x8],cl
  40fa28:	mov    rax,QWORD PTR [rdi+0x8]
  40fa2c:	cmp    BYTE PTR [rax+0x48],bpl
  40fa30:	sete   al
  40fa33:	mov    BYTE PTR [rbx+0x9],al
  40fa36:	mov    rax,QWORD PTR [rdi+0x8]
  40fa3a:	mov    cl,BYTE PTR [rax+0x348]
  40fa40:	mov    BYTE PTR [rbx+0x60],cl
  40fa43:	mov    rax,QWORD PTR [rdi+0x8]
  40fa47:	mov    cl,BYTE PTR [rax+0x78]
  40fa4a:	mov    BYTE PTR [rbx+0x61],cl
  40fa4d:	mov    rax,QWORD PTR [rdi+0x8]
  40fa51:	cmp    BYTE PTR [rax+0x60],bpl
  40fa55:	jne    0x40fa63
  40fa57:	cmp    BYTE PTR [rbx+0x8],bpl
  40fa5b:	jne    0x40fa63
  40fa5d:	cmp    BYTE PTR [rbx+0x5],bpl
  40fa61:	jne    0x40fa69
  40fa63:	mov    DWORD PTR [rbx+0x2a0],ebp
  40fa69:	cmp    BYTE PTR [rbx+0x8],bpl
  40fa6d:	je     0x40fa75
  40fa6f:	mov    DWORD PTR [rbx+0x298],ebp
  40fa75:	mov    rax,QWORD PTR [rdi+0x8]
  40fa79:	cmp    BYTE PTR [rax+0xa8],bpl
  40fa80:	je     0x40fa8e
  40fa82:	mov    eax,DWORD PTR [rax+0xac]
  40fa88:	mov    DWORD PTR [rbx+0x298],eax
  40fa8e:	mov    rax,QWORD PTR [rdi+0x8]
  40fa92:	cmp    BYTE PTR [rax+0xc0],bpl
  40fa99:	je     0x40faa7
  40fa9b:	mov    eax,DWORD PTR [rax+0xc4]
  40faa1:	mov    DWORD PTR [rbx+0x29c],eax
  40faa7:	mov    rax,QWORD PTR [rdi+0x8]
  40faab:	cmp    BYTE PTR [rax+0xd8],bpl
  40fab2:	je     0x40fac0
  40fab4:	mov    eax,DWORD PTR [rax+0xdc]
  40faba:	mov    DWORD PTR [rbx+0x2a0],eax
  40fac0:	mov    rax,QWORD PTR [rdi+0x8]
  40fac4:	cmp    BYTE PTR [rax+0x90],bpl
  40facb:	je     0x40fb3c
  40facd:	mov    rax,QWORD PTR [rax+0x98]
  40fad4:	mov    rsi,QWORD PTR [rax]
  40fad7:	cmp    DWORD PTR [rsi+0x8],ebp
  40fada:	jne    0x40fae8
  40fadc:	mov    DWORD PTR [rbx+0x2a4],0x1
  40fae6:	jmp    0x40fb3c
  40fae8:	mov    rcx,QWORD PTR [rsi]
  40faeb:	cmp    WORD PTR [rcx],bp
  40faee:	je     0x40fb10
  40faf0:	lea    rdx,[rsp+0x98]
  40faf8:	call   0x403e48
  40fafd:	mov    rcx,QWORD PTR [rsp+0x98]
  40fb05:	cmp    WORD PTR [rcx],bp
  40fb08:	sete   cl
  40fb0b:	cmp    cl,bpl
  40fb0e:	jne    0x40fb36
  40fb10:	mov    r8,QWORD PTR [rsi]
  40fb13:	lea    rdx,[rip+0x3eb26]        # 0x44e640
  40fb1a:	lea    rcx,[rsp+0x28]
  40fb1f:	call   0x40ecd0
  40fb24:	lea    rdx,[rip+0x5764d]        # 0x467178
  40fb2b:	lea    rcx,[rsp+0x28]
  40fb30:	call   0x44b71e
  40fb35:	int3   
  40fb36:	mov    DWORD PTR [rbx+0x2a4],eax
  40fb3c:	mov    rax,QWORD PTR [rdi+0x8]
  40fb40:	cmp    BYTE PTR [rax+0x378],bpl
  40fb47:	je     0x40fb64
  40fb49:	cmp    BYTE PTR [rax+0x379],bpl
  40fb50:	sete   BYTE PTR [rip+0x58ea1]        # 0x4689f8
  40fb57:	mov    BYTE PTR [rbx+0x2],0x1
  40fb5b:	mov    al,BYTE PTR [rip+0x58e97]        # 0x4689f8
  40fb61:	mov    BYTE PTR [rbx+0x3],al
  40fb64:	mov    BYTE PTR [rbx+0x1],bpl
  40fb68:	mov    rax,QWORD PTR [rdi+0x8]
  40fb6c:	cmp    BYTE PTR [rax+0x300],bpl
  40fb73:	je     0x40fb82
  40fb75:	cmp    BYTE PTR [rax+0x301],bpl
  40fb7c:	sete   al
  40fb7f:	mov    BYTE PTR [rbx+0x1],al
  40fb82:	mov    rax,QWORD PTR [rdi+0x8]
  40fb86:	cmp    BYTE PTR [rax+0x270],bpl
  40fb8d:	je     0x40fc3a
  40fb93:	mov    rax,QWORD PTR [rax+0x278]
  40fb9a:	mov    rbx,QWORD PTR [rax]
  40fb9d:	cmp    DWORD PTR [rbx+0x8],ebp
  40fba0:	je     0x40fc3a
  40fba6:	lea    rcx,[rsp+0x28]
  40fbab:	call   0x402b34
  40fbb0:	nop
  40fbb1:	mov    rdx,QWORD PTR [rbx]
  40fbb4:	lea    rcx,[rsp+0x28]
  40fbb9:	call   0x402ca0
  40fbbe:	cmp    DWORD PTR [rsp+0x30],ebp
  40fbc2:	je     0x40fbf5
  40fbc4:	lea    rdx,[rsp+0x98]
  40fbcc:	mov    rcx,QWORD PTR [rsp+0x28]
  40fbd1:	call   0x403f00
  40fbd6:	mov    rcx,QWORD PTR [rsp+0x98]
  40fbde:	cmp    BYTE PTR [rcx],bpl
  40fbe1:	je     0x40fbef
  40fbe3:	mov    DWORD PTR [rsp+0x30],ebp
  40fbe7:	mov    rcx,QWORD PTR [rsp+0x28]
  40fbec:	mov    BYTE PTR [rcx],bpl
  40fbef:	cmp    DWORD PTR [rsp+0x30],ebp
  40fbf3:	jne    0x40fc1b
  40fbf5:	mov    r8,QWORD PTR [rbx]
  40fbf8:	lea    rdx,[rip+0x3ea21]        # 0x44e620
  40fbff:	lea    rcx,[rsp+0x38]
  40fc04:	call   0x40ecd0
  40fc09:	lea    rdx,[rip+0x57568]        # 0x467178
  40fc10:	lea    rcx,[rsp+0x38]
  40fc15:	call   0x44b71e
  40fc1a:	int3   
  40fc1b:	mov    ebx,eax
  40fc1d:	call   QWORD PTR [rip+0x3d50d]        # 0x44d130
  40fc23:	mov    rcx,rax
  40fc26:	mov    rdx,rbx
  40fc29:	call   QWORD PTR [rip+0x3d4a1]        # 0x44d0d0
  40fc2f:	nop
  40fc30:	mov    rcx,QWORD PTR [rsp+0x28]
  40fc35:	call   0x40215c
  40fc3a:	add    rsp,0x58
  40fc3e:	pop    rdi
  40fc3f:	pop    rsi
  40fc40:	pop    rbp
  40fc41:	pop    rbx
  40fc42:	ret    
  40fc43:	int3   
  40fc44:	rex.W push rbp
  40fc46:	sub    rsp,0x20
  40fc4a:	mov    rbp,rdx
  40fc4d:	lea    rcx,[rbp+0x28]
  40fc51:	call   0x401000
  40fc56:	add    rsp,0x20
  40fc5a:	pop    rbp
  40fc5b:	ret    
  40fc5c:	rex.W push rbx
  40fc5e:	sub    rsp,0x20
  40fc62:	mov    rbx,rcx
  40fc65:	call   0x403208
  40fc6a:	mov    rax,rbx
  40fc6d:	add    rsp,0x20
  40fc71:	pop    rbx
  40fc72:	ret    
  40fc73:	int3   
  40fc74:	rex.W push rbx
  40fc76:	push   rsi
  40fc77:	push   rdi
  40fc78:	sub    rsp,0x50
  40fc7c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40fc85:	mov    dil,r8b
  40fc88:	mov    eax,edx
  40fc8a:	lea    r8,[rax+rax*2]
  40fc8e:	mov    r10,QWORD PTR [rcx+0x8]
  40fc92:	cmp    BYTE PTR [r10+r8*8],0x0
  40fc97:	jne    0x40fca1
  40fc99:	mov    eax,r9d
  40fc9c:	jmp    0x40fd6d
  40fca1:	mov    edx,DWORD PTR [r10+r8*8+0x10]
  40fca6:	dec    edx
  40fca8:	mov    rax,QWORD PTR [r10+r8*8+0x8]
  40fcad:	mov    rdx,QWORD PTR [rax+rdx*8]
  40fcb1:	lea    rcx,[rsp+0x28]
  40fcb6:	call   0x403208
  40fcbb:	nop
  40fcbc:	mov    rcx,QWORD PTR [rsp+0x28]
  40fcc1:	cmp    WORD PTR [rcx],0x0
  40fcc5:	je     0x40fcfd
  40fcc7:	lea    rdx,[rsp+0x70]
  40fccc:	call   0x403e48
  40fcd1:	mov    ebx,eax
  40fcd3:	mov    rcx,QWORD PTR [rsp+0x70]
  40fcd8:	cmp    WORD PTR [rcx],0x0
  40fcdc:	sete   cl
  40fcdf:	test   cl,cl
  40fce1:	je     0x40fcf8
  40fce3:	cmp    eax,0x10000
  40fce8:	jae    0x40fcf8
  40fcea:	mov    rcx,QWORD PTR [rsp+0x28]
  40fcef:	call   0x40215c
  40fcf4:	mov    eax,ebx
  40fcf6:	jmp    0x40fd6d
  40fcf8:	mov    rcx,QWORD PTR [rsp+0x28]
  40fcfd:	call   0x40270c
  40fd02:	neg    dil
  40fd05:	sbb    edi,edi
  40fd07:	and    edi,0xfffffffe
  40fd0a:	add    edi,0x5
  40fd0d:	mov    esi,0x0
  40fd12:	je     0x40fd36
  40fd14:	lea    rbx,[rip+0x3e5c5]        # 0x44e2e0
  40fd1b:	mov    rdx,QWORD PTR [rbx]
  40fd1e:	mov    rcx,QWORD PTR [rsp+0x28]
  40fd23:	call   0x4027fc
  40fd28:	test   al,al
  40fd2a:	jne    0x40fd5e
  40fd2c:	inc    esi
  40fd2e:	add    rbx,0x10
  40fd32:	cmp    esi,edi
  40fd34:	jne    0x40fd1b
  40fd36:	mov    r8,QWORD PTR [rsp+0x28]
  40fd3b:	lea    rdx,[rip+0x3e93e]        # 0x44e680
  40fd42:	lea    rcx,[rsp+0x38]
  40fd47:	call   0x40ecd0
  40fd4c:	lea    rdx,[rip+0x57425]        # 0x467178
  40fd53:	lea    rcx,[rsp+0x38]
  40fd58:	call   0x44b71e
  40fd5d:	int3   
  40fd5e:	mov    ebx,DWORD PTR [rbx+0x8]
  40fd61:	mov    rcx,QWORD PTR [rsp+0x28]
  40fd66:	call   0x40215c
  40fd6b:	mov    eax,ebx
  40fd6d:	add    rsp,0x50
  40fd71:	pop    rdi
  40fd72:	pop    rsi
  40fd73:	pop    rbx
  40fd74:	ret    
  40fd75:	int3   
  40fd76:	int3   
  40fd77:	int3   
  40fd78:	int3   
  40fd79:	int3   
  40fd7a:	int3   
  40fd7b:	int3   
  40fd7c:	int3   
  40fd7d:	int3   
  40fd7e:	int3   
  40fd7f:	int3   
  40fd80:	int3   
  40fd81:	int3   
  40fd82:	int3   
  40fd83:	int3   
  40fd84:	rex.W push rbp
  40fd86:	sub    rsp,0x20
  40fd8a:	mov    rbp,rdx
  40fd8d:	lea    rcx,[rbp+0x28]
  40fd91:	call   0x401000
  40fd96:	add    rsp,0x20
  40fd9a:	pop    rbp
  40fd9b:	ret    
  40fd9c:	rex.W push rbx
  40fd9e:	push   rbp
  40fd9f:	push   rsi
  40fda0:	push   rdi
  40fda1:	sub    rsp,0x28
  40fda5:	mov    rbx,rcx
  40fda8:	mov    rcx,QWORD PTR [rcx+0x20]
  40fdac:	call   0x40215c
  40fdb1:	mov    rcx,QWORD PTR [rbx+0x10]
  40fdb5:	call   0x40215c
  40fdba:	movsxd rdi,DWORD PTR [rbx+0x8]
  40fdbe:	test   edi,edi
  40fdc0:	mov    rsi,rdi
  40fdc3:	je     0x40fdf1
  40fdc5:	shl    rsi,0x3
  40fdc9:	mov    rax,QWORD PTR [rbx]
  40fdcc:	sub    rsi,0x8
  40fdd0:	add    edi,0xffffffff
  40fdd3:	mov    rbp,QWORD PTR [rsi+rax*1]
  40fdd7:	test   rbp,rbp
  40fdda:	je     0x40fded
  40fddc:	mov    rcx,QWORD PTR [rbp+0x0]
  40fde0:	call   0x40215c
  40fde5:	mov    rcx,rbp
  40fde8:	call   0x40215c
  40fded:	test   edi,edi
  40fdef:	jne    0x40fdc9
  40fdf1:	mov    rcx,QWORD PTR [rbx]
  40fdf4:	add    rsp,0x28
  40fdf8:	pop    rdi
  40fdf9:	pop    rsi
  40fdfa:	pop    rbp
  40fdfb:	pop    rbx
  40fdfc:	jmp    0x40215c
  40fe01:	int3   
  40fe02:	int3   
  40fe03:	int3   
  40fe04:	rex.W push rbx
  40fe06:	push   rbp
  40fe07:	push   rsi
  40fe08:	push   rdi
  40fe09:	push   r12
  40fe0b:	sub    rsp,0x20
  40fe0f:	movsxd rdi,DWORD PTR [rcx+0x8]
  40fe13:	mov    r12d,edx
  40fe16:	mov    rbx,rcx
  40fe19:	test   edi,edi
  40fe1b:	mov    rsi,rdi
  40fe1e:	je     0x40fe4c
  40fe20:	shl    rsi,0x3
  40fe24:	mov    rax,QWORD PTR [rbx]
  40fe27:	sub    rsi,0x8
  40fe2b:	add    edi,0xffffffff
  40fe2e:	mov    rbp,QWORD PTR [rsi+rax*1]
  40fe32:	test   rbp,rbp
  40fe35:	je     0x40fe48
  40fe37:	mov    rcx,QWORD PTR [rbp+0x0]
  40fe3b:	call   0x40215c
  40fe40:	mov    rcx,rbp
  40fe43:	call   0x40215c
  40fe48:	test   edi,edi
  40fe4a:	jne    0x40fe24
  40fe4c:	cmp    r12d,DWORD PTR [rbx+0xc]
  40fe50:	mov    DWORD PTR [rbx+0x8],0x0
  40fe57:	jbe    0x40fe82
  40fe59:	mov    rcx,QWORD PTR [rbx]
  40fe5c:	call   0x40215c
  40fe61:	mov    rcx,r12
  40fe64:	mov    QWORD PTR [rbx],0x0
  40fe6b:	shl    rcx,0x3
  40fe6f:	mov    DWORD PTR [rbx+0xc],0x0
  40fe76:	call   0x402130
  40fe7b:	mov    DWORD PTR [rbx+0xc],r12d
  40fe7f:	mov    QWORD PTR [rbx],rax
  40fe82:	add    rsp,0x20
  40fe86:	pop    r12
  40fe88:	pop    rdi
  40fe89:	pop    rsi
  40fe8a:	pop    rbp
  40fe8b:	pop    rbx
  40fe8c:	ret    
  40fe8d:	int3   
  40fe8e:	int3   
  40fe8f:	int3   
  40fe90:	rex.W push rbx
  40fe92:	push   rbp
  40fe93:	push   rsi
  40fe94:	push   rdi
  40fe95:	sub    rsp,0x28
  40fe99:	movsxd rbx,DWORD PTR [rcx+0x8]
  40fe9d:	mov    rdi,rcx
  40fea0:	test   ebx,ebx
  40fea2:	mov    rsi,rbx
  40fea5:	je     0x40fee5
  40fea7:	shl    rsi,0x3
  40feab:	mov    rax,QWORD PTR [rdi]
  40feae:	sub    rsi,0x8
  40feb2:	add    ebx,0xffffffff
  40feb5:	mov    rbp,QWORD PTR [rsi+rax*1]
  40feb9:	test   rbp,rbp
  40febc:	je     0x40fee1
  40febe:	mov    rcx,QWORD PTR [rbp+0x40]
  40fec2:	call   0x40215c
  40fec7:	mov    rcx,QWORD PTR [rbp+0x30]
  40fecb:	call   0x40215c
  40fed0:	mov    rcx,QWORD PTR [rbp+0x20]
  40fed4:	call   0x40215c
  40fed9:	mov    rcx,rbp
  40fedc:	call   0x40215c
  40fee1:	test   ebx,ebx
  40fee3:	jne    0x40feab
  40fee5:	mov    rcx,QWORD PTR [rdi]
  40fee8:	add    rsp,0x28
  40feec:	pop    rdi
  40feed:	pop    rsi
  40feee:	pop    rbp
  40feef:	pop    rbx
  40fef0:	jmp    0x40215c
  40fef5:	int3   
  40fef6:	int3   
  40fef7:	int3   
  40fef8:	rex.W push rbx
  40fefa:	push   rsi
  40fefb:	push   rdi
  40fefc:	sub    rsp,0x30
  40ff00:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  40ff09:	mov    rsi,rdx
  40ff0c:	mov    rdi,rcx
  40ff0f:	mov    ecx,0xa8
  40ff14:	call   0x402130
  40ff19:	mov    rbx,rax
  40ff1c:	mov    QWORD PTR [rsp+0x60],rax
  40ff21:	test   rax,rax
  40ff24:	je     0x40ff5b
  40ff26:	mov    rdx,rsi
  40ff29:	mov    rcx,rax
  40ff2c:	call   0x403208
  40ff31:	nop
  40ff32:	lea    rdx,[rsi+0x10]
  40ff36:	lea    rcx,[rbx+0x10]
  40ff3a:	call   0x40ef8c
  40ff3f:	lea    rcx,[rbx+0x88]
  40ff46:	lea    rdx,[rsi+0x88]
  40ff4d:	mov    r8d,0x1c
  40ff53:	call   0x44b480
  40ff58:	nop
  40ff59:	jmp    0x40ff5d
  40ff5b:	xor    ebx,ebx
  40ff5d:	mov    rdx,rbx
  40ff60:	mov    rcx,rdi
  40ff63:	add    rsp,0x30
  40ff67:	pop    rdi
  40ff68:	pop    rsi
  40ff69:	pop    rbx
  40ff6a:	jmp    0x4010c8
  40ff6f:	int3   
  40ff70:	int3   
  40ff71:	int3   
  40ff72:	int3   
  40ff73:	int3   
  40ff74:	int3   
  40ff75:	int3   
  40ff76:	int3   
  40ff77:	int3   
  40ff78:	rex.W push rbp
  40ff7a:	sub    rsp,0x20
  40ff7e:	mov    rbp,rdx
  40ff81:	mov    rcx,QWORD PTR [rbp+0x60]
  40ff85:	call   0x40215c
  40ff8a:	add    rsp,0x20
  40ff8e:	pop    rbp
  40ff8f:	ret    
  40ff90:	int3   
  40ff91:	int3   
  40ff92:	int3   
  40ff93:	int3   
  40ff94:	int3   
  40ff95:	int3   
  40ff96:	int3   
  40ff97:	int3   
  40ff98:	rex.W push rbp
  40ff9a:	sub    rsp,0x20
  40ff9e:	mov    rbp,rdx
  40ffa1:	mov    rcx,QWORD PTR [rbp+0x60]
  40ffa5:	call   0x401000
  40ffaa:	add    rsp,0x20
  40ffae:	pop    rbp
  40ffaf:	ret    
  40ffb0:	rex.W push rbx
  40ffb2:	push   rbp
  40ffb3:	push   rsi
  40ffb4:	push   rdi
  40ffb5:	sub    rsp,0x28
  40ffb9:	mov    rax,QWORD PTR [rcx]
  40ffbc:	mov    esi,edx
  40ffbe:	mov    rbx,rcx
  40ffc1:	mov    rdi,QWORD PTR [rax+rsi*8]
  40ffc5:	test   rdi,rdi
  40ffc8:	je     0x410019
  40ffca:	mov    rcx,QWORD PTR [rdi+0x78]
  40ffce:	call   0x40215c
  40ffd3:	mov    rcx,QWORD PTR [rdi+0x68]
  40ffd7:	call   0x40215c
  40ffdc:	mov    rcx,QWORD PTR [rdi+0x50]
  40ffe0:	call   0x40215c
  40ffe5:	mov    rcx,QWORD PTR [rdi+0x40]
  40ffe9:	call   0x40215c
  40ffee:	mov    rcx,QWORD PTR [rdi+0x30]
  40fff2:	call   0x40215c
  40fff7:	mov    rcx,QWORD PTR [rdi+0x20]
  40fffb:	call   0x40215c
  410000:	mov    rcx,QWORD PTR [rdi+0x10]
  410004:	call   0x40215c
  410009:	mov    rcx,QWORD PTR [rdi]
  41000c:	call   0x40215c
  410011:	mov    rcx,rdi
  410014:	call   0x40215c
  410019:	mov    r9,QWORD PTR [rbx]
  41001c:	mov    r8d,DWORD PTR [rbx+0x8]
  410020:	lea    ecx,[rsi+0x1]
  410023:	sub    r8d,ecx
  410026:	lea    rdx,[r9+rcx*8]
  41002a:	lea    rcx,[r9+rsi*8]
  41002e:	shl    r8,0x3
  410032:	call   0x44b774
  410037:	add    DWORD PTR [rbx+0x8],0xffffffff
  41003b:	add    rsp,0x28
  41003f:	pop    rdi
  410040:	pop    rsi
  410041:	pop    rbp
  410042:	pop    rbx
  410043:	ret    
  410044:	rex.W push rbx
  410046:	push   rbp
  410047:	push   rsi
  410048:	push   rdi
  410049:	push   r12
  41004b:	sub    rsp,0x50
  41004f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  410058:	mov    edi,r9d
  41005b:	mov    rbp,r8
  41005e:	mov    rsi,rdx
  410061:	mov    r12,rcx
  410064:	mov    ecx,0x28
  410069:	call   0x402130
  41006e:	mov    rbx,rax
  410071:	mov    QWORD PTR [rsp+0x28],rax
  410076:	test   rax,rax
  410079:	je     0x41009a
  41007b:	mov    rcx,rax
  41007e:	call   0x403150
  410083:	nop
  410084:	lea    rcx,[rbx+0x10]
  410088:	call   0x403150
  41008d:	mov    BYTE PTR [rbx+0x20],0x1
  410091:	mov    DWORD PTR [rbx+0x24],0x2
  410098:	jmp    0x41009c
  41009a:	xor    ebx,ebx
  41009c:	mov    rdx,rbx
  41009f:	mov    rcx,r12
  4100a2:	call   0x4010c8
  4100a7:	mov    rdx,rsi
  4100aa:	mov    rcx,rbx
  4100ad:	call   0x4032f8
  4100b2:	mov    rdx,rbp
  4100b5:	lea    rcx,[rbx+0x10]
  4100b9:	call   0x4032f8
  4100be:	mov    DWORD PTR [rbx+0x24],edi
  4100c1:	mov    al,BYTE PTR [rsp+0xa0]
  4100c8:	mov    BYTE PTR [rbx+0x20],al
  4100cb:	mov    rcx,rbx
  4100ce:	call   0x434a40
  4100d3:	test   al,al
  4100d5:	jne    0x41014e
  4100d7:	lea    rcx,[rsp+0x28]
  4100dc:	call   0x403150
  4100e1:	nop
  4100e2:	mov    rdx,rbx
  4100e5:	lea    rcx,[rsp+0x28]
  4100ea:	call   0x403444
  4100ef:	lea    rcx,[rsp+0x28]
  4100f4:	call   0x4033ac
  4100f9:	lea    rdx,[rbx+0x10]
  4100fd:	lea    rcx,[rsp+0x28]
  410102:	call   0x403444
  410107:	lea    rcx,[rsp+0x28]
  41010c:	call   0x4033ac
  410111:	test   edi,edi
  410113:	jne    0x410126
  410115:	lea    rdx,[rip+0x3e5e0]        # 0x44e6fc
  41011c:	lea    rcx,[rsp+0x28]
  410121:	call   0x403560
  410126:	mov    r8,QWORD PTR [rsp+0x28]
  41012b:	lea    rdx,[rip+0x3e5ae]        # 0x44e6e0
  410132:	lea    rcx,[rsp+0x38]
  410137:	call   0x40ecd0
  41013c:	lea    rdx,[rip+0x57035]        # 0x467178
  410143:	lea    rcx,[rsp+0x38]
  410148:	call   0x44b71e
  41014d:	nop
  41014e:	add    rsp,0x50
  410152:	pop    r12
  410154:	pop    rdi
  410155:	pop    rsi
  410156:	pop    rbp
  410157:	pop    rbx
  410158:	ret    
  410159:	int3   
  41015a:	int3   
  41015b:	int3   
  41015c:	int3   
  41015d:	int3   
  41015e:	int3   
  41015f:	int3   
  410160:	int3   
  410161:	int3   
  410162:	int3   
  410163:	int3   
  410164:	rex.W push rbp
  410166:	sub    rsp,0x20
  41016a:	mov    rbp,rdx
  41016d:	mov    rcx,QWORD PTR [rbp+0x28]
  410171:	call   0x40215c
  410176:	add    rsp,0x20
  41017a:	pop    rbp
  41017b:	ret    
  41017c:	int3   
  41017d:	int3   
  41017e:	int3   
  41017f:	int3   
  410180:	int3   
  410181:	int3   
  410182:	int3   
  410183:	int3   
  410184:	rex.W push rbp
  410186:	sub    rsp,0x20
  41018a:	mov    rbp,rdx
  41018d:	mov    rcx,QWORD PTR [rbp+0x28]
  410191:	call   0x401000
  410196:	add    rsp,0x20
  41019a:	pop    rbp
  41019b:	ret    
  41019c:	int3   
  41019d:	int3   
  41019e:	int3   
  41019f:	int3   
  4101a0:	int3   
  4101a1:	int3   
  4101a2:	int3   
  4101a3:	int3   
  4101a4:	rex.W push rbp
  4101a6:	sub    rsp,0x20
  4101aa:	mov    rbp,rdx
  4101ad:	lea    rcx,[rbp+0x28]
  4101b1:	call   0x401000
  4101b6:	add    rsp,0x20
  4101ba:	pop    rbp
  4101bb:	ret    
  4101bc:	rex.W push rbx
  4101be:	push   rbp
  4101bf:	push   rsi
  4101c0:	push   rdi
  4101c1:	push   r12
  4101c3:	push   r13
  4101c5:	sub    rsp,0x68
  4101c9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  4101d2:	mov    r12b,r9b
  4101d5:	mov    rdi,r8
  4101d8:	mov    r13,rdx
  4101db:	mov    rbp,rcx
  4101de:	mov    QWORD PTR [rsp+0x38],0x0
  4101e7:	mov    DWORD PTR [rsp+0x40],0x0
  4101ef:	mov    DWORD PTR [rsp+0x44],0x0
  4101f7:	mov    rcx,r8
  4101fa:	call   0x4088cc
  4101ff:	test   al,al
  410201:	jne    0x410229
  410203:	mov    r8,rdi
  410206:	mov    rdx,QWORD PTR [rip+0x57ee3]        # 0x4680f0
  41020d:	lea    rcx,[rsp+0x48]
  410212:	call   0x40ecd0
  410217:	lea    rdx,[rip+0x56f5a]        # 0x467178
  41021e:	lea    rcx,[rsp+0x48]
  410223:	call   0x44b71e
  410228:	int3   
  410229:	mov    r8d,DWORD PTR [rsp+0xd0]
  410231:	lea    rdx,[rsp+0x38]
  410236:	mov    rcx,rdi
  410239:	call   0x401c48
  41023e:	test   al,al
  410240:	jne    0x410268
  410242:	mov    r8,rdi
  410245:	mov    rdx,QWORD PTR [rip+0x57eac]        # 0x4680f8
  41024c:	lea    rcx,[rsp+0x48]
  410251:	call   0x40ecd0
  410256:	lea    rdx,[rip+0x56f1b]        # 0x467178
  41025d:	lea    rcx,[rsp+0x48]
  410262:	call   0x44b71e
  410267:	int3   
  410268:	test   rbp,rbp
  41026b:	je     0x4102e4
  41026d:	mov    ebx,DWORD PTR [rsp+0x40]
  410271:	test   bl,0x1
  410274:	je     0x41029c
  410276:	mov    r8,rdi
  410279:	mov    rdx,QWORD PTR [rip+0x57e78]        # 0x4680f8
  410280:	lea    rcx,[rsp+0x48]
  410285:	call   0x40ecd0
  41028a:	lea    rdx,[rip+0x56ee7]        # 0x467178
  410291:	lea    rcx,[rsp+0x48]
  410296:	call   0x44b71e
  41029b:	int3   
  41029c:	xor    esi,esi
  41029e:	test   ebx,ebx
  4102a0:	je     0x410327
  4102a6:	xor    edi,edi
  4102a8:	mov    r12b,BYTE PTR [rsp+0xc8]
  4102b0:	mov    rax,QWORD PTR [rsp+0x38]
  4102b5:	mov    BYTE PTR [rsp+0x20],r12b
  4102ba:	mov    r9d,DWORD PTR [rsp+0xc0]
  4102c2:	mov    r8,QWORD PTR [rdi+rax*1+0x8]
  4102c7:	mov    rdx,QWORD PTR [rdi+rax*1]
  4102cb:	mov    rcx,rbp
  4102ce:	call   0x410044
  4102d3:	add    esi,0x2
  4102d6:	add    rdi,0x10
  4102da:	mov    ebx,DWORD PTR [rsp+0x40]
  4102de:	cmp    esi,ebx
  4102e0:	jb     0x4102b0
  4102e2:	jmp    0x410327
  4102e4:	xor    edi,edi
  4102e6:	mov    ebx,DWORD PTR [rsp+0x40]
  4102ea:	test   ebx,ebx
  4102ec:	je     0x410327
  4102ee:	xor    esi,esi
  4102f0:	mov    bpl,BYTE PTR [rsp+0xc8]
  4102f8:	mov    rax,QWORD PTR [rsp+0x38]
  4102fd:	mov    BYTE PTR [rsp+0x20],bpl
  410302:	mov    r9d,DWORD PTR [rsp+0xc0]
  41030a:	mov    r8b,r12b
  41030d:	mov    rdx,QWORD PTR [rsi+rax*1]
  410311:	mov    rcx,r13
  410314:	call   0x40eddc
  410319:	inc    edi
  41031b:	add    rsi,0x8
  41031f:	mov    ebx,DWORD PTR [rsp+0x40]
  410323:	cmp    edi,ebx
  410325:	jb     0x4102f8
  410327:	movsxd rdi,ebx
  41032a:	test   ebx,ebx
  41032c:	je     0x41035b
  41032e:	shl    rdi,0x3
  410332:	add    ebx,0xffffffff
  410335:	sub    rdi,0x8
  410339:	mov    rax,QWORD PTR [rsp+0x38]
  41033e:	mov    rsi,QWORD PTR [rdi+rax*1]
  410342:	test   rsi,rsi
  410345:	je     0x410357
  410347:	mov    rcx,QWORD PTR [rsi]
  41034a:	call   0x40215c
  41034f:	mov    rcx,rsi
  410352:	call   0x40215c
  410357:	test   ebx,ebx
  410359:	jne    0x410332
  41035b:	mov    rcx,QWORD PTR [rsp+0x38]
  410360:	call   0x40215c
  410365:	add    rsp,0x68
  410369:	pop    r13
  41036b:	pop    r12
  41036d:	pop    rdi
  41036e:	pop    rsi
  41036f:	pop    rbp
  410370:	pop    rbx
  410371:	ret    
  410372:	int3   
  410373:	int3   
  410374:	int3   
  410375:	int3   
  410376:	int3   
  410377:	int3   
  410378:	int3   
  410379:	int3   
  41037a:	int3   
  41037b:	int3   
  41037c:	rex.W push rbp
  41037e:	sub    rsp,0x20
  410382:	mov    rbp,rdx
  410385:	lea    rcx,[rbp+0x38]
  410389:	call   0x4047cc
  41038e:	add    rsp,0x20
  410392:	pop    rbp
  410393:	ret    
  410394:	rex.W push rbx
  410396:	push   rbp
  410397:	push   rsi
  410398:	push   rdi
  410399:	push   r12
  41039b:	push   r13
  41039d:	push   r14
  41039f:	push   r15
  4103a1:	sub    rsp,0x78
  4103a5:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  4103ae:	mov    rdi,r9
  4103b1:	mov    r14,r8
  4103b4:	movsxd rbx,edx
  4103b7:	mov    r12,rcx
  4103ba:	mov    r15d,DWORD PTR [rsp+0xe0]
  4103c2:	test   rcx,rcx
  4103c5:	jne    0x4103cd
  4103c7:	cmp    DWORD PTR [r9+0x8],ebx
  4103cb:	jne    0x41040c
  4103cd:	cmp    BYTE PTR [rsp+0xf0],0x0
  4103d5:	jne    0x41040c
  4103d7:	mov    rdx,QWORD PTR [rip+0x57d0a]        # 0x4680e8
  4103de:	lea    rcx,[rsp+0x48]
  4103e3:	call   0x4031c0
  4103e8:	nop
  4103e9:	mov    BYTE PTR [rsp+0x20],0x1
  4103ee:	mov    r9d,r15d
  4103f1:	mov    r8b,0x1
  4103f4:	lea    rdx,[rsp+0x48]
  4103f9:	mov    rcx,r14
  4103fc:	call   0x40eddc
  410401:	nop
  410402:	mov    rcx,QWORD PTR [rsp+0x48]
  410407:	call   0x40215c
  41040c:	mov    esi,0xffffffff
  410411:	mov    rbp,rbx
  410414:	mov    r13,0xffffffffffffffff
  41041b:	cmp    ebx,DWORD PTR [rdi+0x8]
  41041e:	jae    0x410532
  410424:	mov    rax,QWORD PTR [rdi]
  410427:	mov    rdx,QWORD PTR [rax+rbp*8]
  41042b:	cmp    DWORD PTR [rdx+0x8],0x0
  41042f:	je     0x4104d7
  410435:	mov    r8,QWORD PTR [rdx]
  410438:	cmp    WORD PTR [r8],0x40
  41043d:	jne    0x41046e
  41043f:	add    r8,0x2
  410443:	mov    eax,DWORD PTR [rsp+0xf8]
  41044a:	mov    DWORD PTR [rsp+0x30],eax
  41044e:	mov    al,BYTE PTR [rsp+0xe8]
  410455:	mov    BYTE PTR [rsp+0x28],al
  410459:	mov    DWORD PTR [rsp+0x20],r15d
  41045e:	mov    r9b,0x1
  410461:	mov    rdx,r14
  410464:	mov    rcx,r12
  410467:	call   0x4101bc
  41046c:	jmp    0x4104c7
  41046e:	test   r12,r12
  410471:	je     0x4104ae
  410473:	cmp    r13,0xffffffffffffffff
  410477:	jne    0x410480
  410479:	mov    esi,ebx
  41047b:	mov    r13,rbp
  41047e:	jmp    0x4104c7
  410480:	mov    cl,BYTE PTR [rsp+0xe8]
  410487:	mov    BYTE PTR [rsp+0x20],cl
  41048b:	mov    r9d,0x2
  410491:	mov    r8,rdx
  410494:	mov    rdx,QWORD PTR [rax+r13*8]
  410498:	mov    rcx,r12
  41049b:	call   0x410044
  4104a0:	mov    esi,0xffffffff
  4104a5:	mov    r13,0xffffffffffffffff
  4104ac:	jmp    0x4104c7
  4104ae:	mov    al,BYTE PTR [rsp+0xe8]
  4104b5:	mov    BYTE PTR [rsp+0x20],al
  4104b9:	mov    r9d,r15d
  4104bc:	mov    r8b,0x1
  4104bf:	mov    rcx,r14
  4104c2:	call   0x40eddc
  4104c7:	inc    ebx
  4104c9:	inc    rbp
  4104cc:	cmp    ebx,DWORD PTR [rdi+0x8]
  4104cf:	jb     0x410424
  4104d5:	jmp    0x4104fd
  4104d7:	xor    r8d,r8d
  4104da:	mov    rdx,QWORD PTR [rip+0x57c2f]        # 0x468110
  4104e1:	lea    rcx,[rsp+0x58]
  4104e6:	call   0x40ecd0
  4104eb:	lea    rdx,[rip+0x56c86]        # 0x467178
  4104f2:	lea    rcx,[rsp+0x58]
  4104f7:	call   0x44b71e
  4104fc:	int3   
  4104fd:	cmp    esi,0xffffffff
  410500:	je     0x410532
  410502:	mov    r8d,esi
  410505:	mov    rax,QWORD PTR [rdi]
  410508:	mov    r8,QWORD PTR [rax+r8*8]
  41050c:	mov    r8,QWORD PTR [r8]
  41050f:	lea    rdx,[rip+0x3e22a]        # 0x44e740
  410516:	lea    rcx,[rsp+0x58]
  41051b:	call   0x40ecd0
  410520:	lea    rdx,[rip+0x56c51]        # 0x467178
  410527:	lea    rcx,[rsp+0x58]
  41052c:	call   0x44b71e
  410531:	int3   
  410532:	add    rsp,0x78
  410536:	pop    r15
  410538:	pop    r14
  41053a:	pop    r13
  41053c:	pop    r12
  41053e:	pop    rdi
  41053f:	pop    rsi
  410540:	pop    rbp
  410541:	pop    rbx
  410542:	ret    
  410543:	int3   
  410544:	rex.W push rbp
  410546:	sub    rsp,0x20
  41054a:	mov    rbp,rdx
  41054d:	lea    rcx,[rbp+0x48]
  410551:	call   0x401000
  410556:	add    rsp,0x20
  41055a:	pop    rbp
  41055b:	ret    
  41055c:	mov    DWORD PTR [rsp+0x20],r9d
  410561:	mov    BYTE PTR [rsp+0x18],r8b
  410566:	mov    QWORD PTR [rsp+0x8],rcx
  41056b:	push   rbx
  41056c:	push   rbp
  41056d:	push   rsi
  41056e:	push   rdi
  41056f:	push   r12
  410571:	push   r13
  410573:	push   r14
  410575:	push   r15
  410577:	sub    rsp,0x78
  41057b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  410584:	mov    rbp,rdx
  410587:	xor    ebx,ebx
  410589:	xor    esi,esi
  41058b:	cmp    DWORD PTR [rdx+0x8],ebx
  41058e:	jbe    0x41073f
  410594:	xor    r15d,r15d
  410597:	mov    rax,QWORD PTR [rbp+0x0]
  41059b:	mov    r14,QWORD PTR [r15+rax*1]
  41059f:	xor    r13d,r13d
  4105a2:	xor    r12d,r12d
  4105a5:	cmp    DWORD PTR [r14+0x8],0x2
  4105aa:	jb     0x410710
  4105b0:	mov    rdx,QWORD PTR [r14]
  4105b3:	movzx  ecx,WORD PTR [rdx]
  4105b6:	lea    eax,[rcx-0x41]
  4105b9:	cmp    ax,0x19
  4105bd:	ja     0x4105c3
  4105bf:	add    cx,0x20
  4105c3:	cmp    cx,0x72
  4105c7:	jne    0x410619
  4105c9:	mov    r13d,0x1
  4105cf:	mov    r12,r13
  4105d2:	lea    r8d,[r13-0x2]
  4105d6:	cmp    WORD PTR [rdx+0x2],0x7f
  4105db:	ja     0x4105ef
  4105dd:	mov    dl,BYTE PTR [rdx+0x2]
  4105e0:	mov    rcx,QWORD PTR [rip+0x57ae1]        # 0x4680c8
  4105e7:	call   0x4026bc
  4105ec:	mov    r8d,eax
  4105ef:	mov    ecx,r8d
  4105f2:	test   r8d,r8d
  4105f5:	je     0x410606
  4105f7:	dec    ecx
  4105f9:	je     0x4105ff
  4105fb:	xor    edi,edi
  4105fd:	jmp    0x410609
  4105ff:	mov    edi,0x2
  410604:	jmp    0x41060e
  410606:	mov    edi,r12d
  410609:	test   r8d,r8d
  41060c:	js     0x41061c
  41060e:	mov    r13d,0x2
  410614:	mov    r12,r13
  410617:	jmp    0x41061c
  410619:	mov    edi,r9d
  41061c:	lea    eax,[r13+0x2]
  410620:	cmp    DWORD PTR [r14+0x8],eax
  410624:	jb     0x410719
  41062a:	lea    ecx,[r13+0x1]
  41062e:	mov    rax,QWORD PTR [r14]
  410631:	lea    rdx,[rax+rcx*2]
  410635:	lea    rcx,[rsp+0x48]
  41063a:	call   0x4031c0
  41063f:	nop
  410640:	mov    rax,QWORD PTR [r14]
  410643:	cmp    WORD PTR [rax+r12*2],0x21
  410649:	jne    0x410675
  41064b:	mov    al,BYTE PTR [rsp+0xe0]
  410652:	mov    BYTE PTR [rsp+0x20],al
  410656:	mov    r9d,edi
  410659:	mov    r8b,BYTE PTR [rsp+0xd0]
  410661:	lea    rdx,[rsp+0x48]
  410666:	mov    rcx,QWORD PTR [rsp+0xc0]
  41066e:	call   0x40eddc
  410673:	jmp    0x4106ed
  410675:	cmp    WORD PTR [rax+r12*2],0x40
  41067b:	jne    0x4106b5
  41067d:	mov    eax,DWORD PTR [rsp+0xe8]
  410684:	mov    DWORD PTR [rsp+0x30],eax
  410688:	mov    al,BYTE PTR [rsp+0xe0]
  41068f:	mov    BYTE PTR [rsp+0x28],al
  410693:	mov    DWORD PTR [rsp+0x20],edi
  410697:	mov    r9b,BYTE PTR [rsp+0xd0]
  41069f:	mov    r8,QWORD PTR [rsp+0x48]
  4106a4:	mov    rdx,QWORD PTR [rsp+0xc0]
  4106ac:	xor    ecx,ecx
  4106ae:	call   0x4101bc
  4106b3:	jmp    0x4106ed
  4106b5:	cmp    WORD PTR [rax+r12*2],0x23
  4106bb:	jne    0x41072e
  4106bd:	mov    al,BYTE PTR [rsp+0xe0]
  4106c4:	mov    BYTE PTR [rsp+0x20],al
  4106c8:	mov    r9d,edi
  4106cb:	mov    r8b,BYTE PTR [rsp+0xd0]
  4106d3:	lea    rdx,[rsp+0x48]
  4106d8:	mov    rcx,QWORD PTR [rsp+0xc0]
  4106e0:	call   0x40f364
  4106e5:	mov    rbx,rax
  4106e8:	test   rax,rax
  4106eb:	jne    0x410722
  4106ed:	mov    rcx,QWORD PTR [rsp+0x48]
  4106f2:	call   0x40215c
  4106f7:	inc    esi
  4106f9:	add    r15,0x8
  4106fd:	cmp    esi,DWORD PTR [rbp+0x8]
  410700:	mov    r9d,DWORD PTR [rsp+0xd8]
  410708:	jb     0x410597
  41070e:	jmp    0x41073f
  410710:	lea    rbx,[rip+0x3e099]        # 0x44e7b0
  410717:	jmp    0x41073f
  410719:	lea    rbx,[rip+0x3e090]        # 0x44e7b0
  410720:	jmp    0x41073f
  410722:	mov    rcx,QWORD PTR [rsp+0x48]
  410727:	call   0x40215c
  41072c:	jmp    0x41073f
  41072e:	lea    rbx,[rip+0x3e05b]        # 0x44e790
  410735:	mov    rcx,QWORD PTR [rsp+0x48]
  41073a:	call   0x40215c
  41073f:	cmp    esi,DWORD PTR [rbp+0x8]
  410742:	je     0x41076e
  410744:	mov    rax,QWORD PTR [rbp+0x0]
  410748:	mov    r8,QWORD PTR [rax+rsi*8]
  41074c:	mov    r8,QWORD PTR [r8]
  41074f:	mov    rdx,rbx
  410752:	lea    rcx,[rsp+0x58]
  410757:	call   0x40ecd0
  41075c:	lea    rdx,[rip+0x56a15]        # 0x467178
  410763:	lea    rcx,[rsp+0x58]
  410768:	call   0x44b71e
  41076d:	int3   
  41076e:	add    rsp,0x78
  410772:	pop    r15
  410774:	pop    r14
  410776:	pop    r13
  410778:	pop    r12
  41077a:	pop    rdi
  41077b:	pop    rsi
  41077c:	pop    rbp
  41077d:	pop    rbx
  41077e:	ret    
  41077f:	int3   
  410780:	int3   
  410781:	int3   
  410782:	int3   
  410783:	int3   
  410784:	int3   
  410785:	int3   
  410786:	int3   
  410787:	int3   
  410788:	int3   
  410789:	int3   
  41078a:	int3   
  41078b:	int3   
  41078c:	rex.W push rbp
  41078e:	sub    rsp,0x20
  410792:	mov    rbp,rdx
  410795:	lea    rcx,[rbp+0x48]
  410799:	call   0x401000
  41079e:	add    rsp,0x20
  4107a2:	pop    rbp
  4107a3:	ret    
  4107a4:	rex.W push rbx
  4107a6:	push   rbp
  4107a7:	push   rsi
  4107a8:	push   rdi
  4107a9:	push   r12
  4107ab:	push   r13
  4107ad:	push   r14
  4107af:	push   r15
  4107b1:	sub    rsp,0x128
  4107b8:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
  4107c1:	mov    r15,r8
  4107c4:	mov    r12,rdx
  4107c7:	mov    r13,rcx
  4107ca:	xor    edi,edi
  4107cc:	mov    ebp,edi
  4107ce:	cmp    DWORD PTR [rdx+0x8],edi
  4107d1:	jbe    0x410aba
  4107d7:	mov    r14,rdi
  4107da:	mov    rax,QWORD PTR [r12]
  4107de:	mov    rsi,QWORD PTR [r14+rax*1]
  4107e2:	mov    rdx,QWORD PTR [rip+0x5794f]        # 0x468138
  4107e9:	mov    rcx,QWORD PTR [rsi]
  4107ec:	call   0x4027fc
  4107f1:	cmp    al,dil
  4107f4:	je     0x410814
  4107f6:	cmp    BYTE PTR [r13+0x48],dil
  4107fa:	je     0x410a13
  410800:	mov    BYTE PTR [r13+0x48],dil
  410804:	lea    rcx,[r13+0x38]
  410808:	xor    edx,edx
  41080a:	call   0x40ffb0
  41080f:	jmp    0x410a13
  410814:	lea    rcx,[rsp+0x40]
  410819:	mov    rdx,r15
  41081c:	mov    r8d,0x1c
  410822:	call   0x44b480
  410827:	lea    rcx,[rsp+0x20]
  41082c:	call   0x403150
  410831:	nop
  410832:	mov    ebx,edi
  410834:	cmp    DWORD PTR [rsi+0x8],edi
  410837:	jbe    0x4108cb
  41083d:	mov    rax,QWORD PTR [rsi]
  410840:	movzx  edx,WORD PTR [rdi+rax*1]
  410844:	lea    eax,[rdx-0x41]
  410847:	cmp    ax,0x19
  41084b:	ja     0x410851
  41084d:	add    dx,0x20
  410851:	mov    rcx,QWORD PTR [rip+0x578d8]        # 0x468130
  410858:	call   0x4026e0
  41085d:	test   eax,eax
  41085f:	js     0x4108b4
  410861:	inc    ebx
  410863:	cmp    ebx,DWORD PTR [rsi+0x8]
  410866:	jae    0x410a29
  41086c:	mov    rcx,QWORD PTR [rsi]
  41086f:	cmp    WORD PTR [rdi+rcx*1+0x2],0x30
  410875:	jb     0x410a29
  41087b:	cmp    WORD PTR [rdi+rcx*1+0x2],0x34
  410881:	jae    0x410a29
  410887:	movzx  ecx,WORD PTR [rdi+rcx*1+0x2]
  41088c:	sub    ecx,0x30
  41088f:	mov    eax,eax
  410891:	mov    DWORD PTR [rsp+rax*4+0x40],ecx
  410895:	lea    rdx,[rip+0x3da24]        # 0x44e2c0
  41089c:	cmp    DWORD PTR [rdx+rax*4],ecx
  41089f:	je     0x410a29
  4108a5:	inc    ebx
  4108a7:	add    rdi,0x4
  4108ab:	cmp    ebx,DWORD PTR [rsi+0x8]
  4108ae:	jb     0x41083d
  4108b0:	xor    edi,edi
  4108b2:	jmp    0x4108cb
  4108b4:	mov    ecx,ebx
  4108b6:	mov    rax,QWORD PTR [rsi]
  4108b9:	lea    rdx,[rax+rcx*2]
  4108bd:	lea    rcx,[rsp+0x20]
  4108c2:	call   0x403290
  4108c7:	xor    edi,edi
  4108c9:	jmp    0x4108d7
  4108cb:	mov    DWORD PTR [rsp+0x28],edi
  4108cf:	mov    rax,QWORD PTR [rsp+0x20]
  4108d4:	mov    WORD PTR [rax],di
  4108d7:	cmp    DWORD PTR [rsp+0x28],edi
  4108db:	jne    0x41090a
  4108dd:	cmp    BYTE PTR [r13+0x48],dil
  4108e1:	je     0x410a09
  4108e7:	mov    rax,QWORD PTR [r13+0x38]
  4108eb:	mov    rcx,QWORD PTR [rax]
  4108ee:	add    rcx,0x88
  4108f5:	lea    rdx,[rsp+0x40]
  4108fa:	mov    r8d,0x1c
  410900:	call   0x44b480
  410905:	jmp    0x410a09
  41090a:	mov    rcx,QWORD PTR [rsp+0x20]
  41090f:	cmp    WORD PTR [rcx],0x21
  410913:	jne    0x410a38
  410919:	lea    rcx,[rsp+0x70]
  41091e:	call   0x403150
  410923:	nop
  410924:	lea    rcx,[rsp+0x80]
  41092c:	call   0x40eb00
  410931:	nop
  410932:	mov    rdx,QWORD PTR [rsp+0x20]
  410937:	add    rdx,0x2
  41093b:	lea    rcx,[rsp+0x30]
  410940:	call   0x4031c0
  410945:	nop
  410946:	cmp    DWORD PTR [rsp+0x38],edi
  41094a:	je     0x410a3f
  410950:	lea    rdx,[rsp+0x30]
  410955:	lea    rcx,[rsp+0x70]
  41095a:	call   0x4032f8
  41095f:	lea    r11,[rsp+0xf8]
  410967:	lea    rcx,[rsp+0x40]
  41096c:	mov    rax,QWORD PTR [rcx]
  41096f:	mov    QWORD PTR [r11],rax
  410972:	mov    rax,QWORD PTR [rcx+0x8]
  410976:	mov    QWORD PTR [r11+0x8],rax
  41097a:	mov    rax,QWORD PTR [rcx+0x10]
  41097e:	mov    QWORD PTR [r11+0x10],rax
  410982:	mov    eax,DWORD PTR [rcx+0x18]
  410985:	mov    DWORD PTR [r11+0x18],eax
  410989:	lea    rcx,[r13+0x38]
  41098d:	lea    rdx,[rsp+0x70]
  410992:	call   0x40fef8
  410997:	nop
  410998:	mov    rcx,QWORD PTR [rsp+0x30]
  41099d:	call   0x40215c
  4109a2:	nop
  4109a3:	mov    rcx,QWORD PTR [rsp+0xe8]
  4109ab:	call   0x40215c
  4109b0:	mov    rcx,QWORD PTR [rsp+0xd8]
  4109b8:	call   0x40215c
  4109bd:	mov    rcx,QWORD PTR [rsp+0xc0]
  4109c5:	call   0x40215c
  4109ca:	mov    rcx,QWORD PTR [rsp+0xb0]
  4109d2:	call   0x40215c
  4109d7:	mov    rcx,QWORD PTR [rsp+0xa0]
  4109df:	call   0x40215c
  4109e4:	mov    rcx,QWORD PTR [rsp+0x90]
  4109ec:	call   0x40215c
  4109f1:	mov    rcx,QWORD PTR [rsp+0x80]
  4109f9:	call   0x40215c
  4109fe:	mov    rcx,QWORD PTR [rsp+0x70]
  410a03:	call   0x40215c
  410a08:	nop
  410a09:	mov    rcx,QWORD PTR [rsp+0x20]
  410a0e:	call   0x40215c
  410a13:	inc    ebp
  410a15:	add    r14,0x8
  410a19:	cmp    ebp,DWORD PTR [r12+0x8]
  410a1e:	jae    0x410aba
  410a24:	jmp    0x4107da
  410a29:	mov    rcx,QWORD PTR [rsp+0x20]
  410a2e:	call   0x40215c
  410a33:	jmp    0x410aba
  410a38:	call   0x40215c
  410a3d:	jmp    0x410aba
  410a3f:	mov    rcx,QWORD PTR [rsp+0x30]
  410a44:	call   0x40215c
  410a49:	nop
  410a4a:	mov    rcx,QWORD PTR [rsp+0xe8]
  410a52:	call   0x40215c
  410a57:	mov    rcx,QWORD PTR [rsp+0xd8]
  410a5f:	call   0x40215c
  410a64:	mov    rcx,QWORD PTR [rsp+0xc0]
  410a6c:	call   0x40215c
  410a71:	mov    rcx,QWORD PTR [rsp+0xb0]
  410a79:	call   0x40215c
  410a7e:	mov    rcx,QWORD PTR [rsp+0xa0]
  410a86:	call   0x40215c
  410a8b:	mov    rcx,QWORD PTR [rsp+0x90]
  410a93:	call   0x40215c
  410a98:	mov    rcx,QWORD PTR [rsp+0x80]
  410aa0:	call   0x40215c
  410aa5:	mov    rcx,QWORD PTR [rsp+0x70]
  410aaa:	call   0x40215c
  410aaf:	nop
  410ab0:	mov    rcx,QWORD PTR [rsp+0x20]
  410ab5:	call   0x40215c
  410aba:	cmp    ebp,DWORD PTR [r12+0x8]
  410abf:	je     0x410af2
  410ac1:	mov    r8d,ebp
  410ac4:	mov    rax,QWORD PTR [r12]
  410ac8:	mov    r8,QWORD PTR [rax+r8*8]
  410acc:	mov    r8,QWORD PTR [r8]
  410acf:	lea    rdx,[rip+0x3dd1a]        # 0x44e7f0
  410ad6:	lea    rcx,[rsp+0x30]
  410adb:	call   0x40ecd0
  410ae0:	lea    rdx,[rip+0x56691]        # 0x467178
  410ae7:	lea    rcx,[rsp+0x30]
  410aec:	call   0x44b71e
  410af1:	int3   
  410af2:	add    rsp,0x128
  410af9:	pop    r15
  410afb:	pop    r14
  410afd:	pop    r13
  410aff:	pop    r12
  410b01:	pop    rdi
  410b02:	pop    rsi
  410b03:	pop    rbp
  410b04:	pop    rbx
  410b05:	ret    
  410b06:	int3   
  410b07:	int3   
  410b08:	int3   
  410b09:	int3   
  410b0a:	int3   
  410b0b:	int3   
  410b0c:	int3   
  410b0d:	int3   
  410b0e:	int3   
  410b0f:	int3   
  410b10:	int3   
  410b11:	int3   
  410b12:	int3   
  410b13:	int3   
  410b14:	rex.W push rbp
  410b16:	sub    rsp,0x20
  410b1a:	mov    rbp,rdx
  410b1d:	lea    rcx,[rbp+0x20]
  410b21:	call   0x401000
  410b26:	add    rsp,0x20
  410b2a:	pop    rbp
  410b2b:	ret    
  410b2c:	int3   
  410b2d:	int3   
  410b2e:	int3   
  410b2f:	int3   
  410b30:	int3   
  410b31:	int3   
  410b32:	int3   
  410b33:	int3   
  410b34:	rex.W push rbp
  410b36:	sub    rsp,0x20
  410b3a:	mov    rbp,rdx
  410b3d:	lea    rcx,[rbp+0x70]
  410b41:	call   0x401000
  410b46:	add    rsp,0x20
  410b4a:	pop    rbp
  410b4b:	ret    
  410b4c:	int3   
  410b4d:	int3   
  410b4e:	int3   
  410b4f:	int3   
  410b50:	int3   
  410b51:	int3   
  410b52:	int3   
  410b53:	int3   
  410b54:	rex.W push rbp
  410b56:	sub    rsp,0x20
  410b5a:	mov    rbp,rdx
  410b5d:	lea    rcx,[rbp+0x70]
  410b61:	call   0x40ec78
  410b66:	add    rsp,0x20
  410b6a:	pop    rbp
  410b6b:	ret    
  410b6c:	int3   
  410b6d:	int3   
  410b6e:	int3   
  410b6f:	int3   
  410b70:	int3   
  410b71:	int3   
  410b72:	int3   
  410b73:	int3   
  410b74:	rex.W push rbp
  410b76:	sub    rsp,0x20
  410b7a:	mov    rbp,rdx
  410b7d:	lea    rcx,[rbp+0x30]
  410b81:	call   0x401000
  410b86:	add    rsp,0x20
  410b8a:	pop    rbp
  410b8b:	ret    
  410b8c:	rex.W push rbx
  410b8e:	push   rbp
  410b8f:	push   rsi
  410b90:	push   rdi
  410b91:	sub    rsp,0x108
  410b98:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  410ba1:	mov    rdi,r8
  410ba4:	mov    rsi,rdx
  410ba7:	test   ecx,ecx
  410ba9:	je     0x410be2
  410bab:	cmp    ecx,0x2
  410bae:	je     0x410bc9
  410bb0:	lea    rcx,[rsp+0x20]
  410bb5:	lea    rdx,[rip+0x40d64]        # 0x451920
  410bbc:	mov    r8d,0x1c
  410bc2:	call   0x44b480
  410bc7:	jmp    0x410bf9
  410bc9:	lea    rcx,[rsp+0x20]
  410bce:	lea    rdx,[rip+0x40dab]        # 0x451980
  410bd5:	mov    r8d,0x1c
  410bdb:	call   0x44b480
  410be0:	jmp    0x410bf9
  410be2:	lea    rcx,[rsp+0x20]
  410be7:	lea    rdx,[rip+0x40d12]        # 0x451900
  410bee:	mov    r8d,0x1c
  410bf4:	call   0x44b480
  410bf9:	mov    BYTE PTR [rdi+0x48],0x1
  410bfd:	lea    rcx,[rdi+0x38]
  410c01:	call   0x40f278
  410c06:	lea    rcx,[rsp+0x50]
  410c0b:	call   0x403150
  410c10:	nop
  410c11:	lea    rcx,[rsp+0x60]
  410c16:	call   0x40eb00
  410c1b:	nop
  410c1c:	lea    rdx,[rsp+0xd8]
  410c24:	lea    rcx,[rsp+0x20]
  410c29:	mov    rax,QWORD PTR [rcx]
  410c2c:	mov    QWORD PTR [rdx],rax
  410c2f:	mov    rax,QWORD PTR [rcx+0x8]
  410c33:	mov    QWORD PTR [rdx+0x8],rax
  410c37:	mov    rax,QWORD PTR [rcx+0x10]
  410c3b:	mov    QWORD PTR [rdx+0x10],rax
  410c3f:	mov    eax,DWORD PTR [rcx+0x18]
  410c42:	mov    DWORD PTR [rdx+0x18],eax
  410c45:	lea    rdx,[rsp+0x50]
  410c4a:	lea    rcx,[rdi+0x38]
  410c4e:	call   0x40fef8
  410c53:	mov    rdx,QWORD PTR [rsi+0x8]
  410c57:	cmp    BYTE PTR [rdx+0x228],0x0
  410c5e:	je     0x410c74
  410c60:	add    rdx,0x230
  410c67:	lea    r8,[rsp+0x20]
  410c6c:	mov    rcx,rdi
  410c6f:	call   0x4107a4
  410c74:	mov    rax,QWORD PTR [rsi+0x8]
  410c78:	cmp    BYTE PTR [rax+0x198],0x0
  410c7f:	je     0x410cab
  410c81:	mov    rax,QWORD PTR [rax+0x1a0]
  410c88:	mov    rdx,QWORD PTR [rax]
  410c8b:	cmp    DWORD PTR [rdx+0x8],0x0
  410c8f:	jne    0x410c9f
  410c91:	lea    rcx,[rdi+0x110]
  410c98:	call   0x40719c
  410c9d:	jmp    0x410cab
  410c9f:	lea    rcx,[rdi+0x110]
  410ca6:	call   0x4032f8
  410cab:	mov    rax,QWORD PTR [rsi+0x8]
  410caf:	mov    cl,BYTE PTR [rax+0x288]
  410cb5:	mov    BYTE PTR [rdi+0xcc],cl
  410cbb:	test   cl,cl
  410cbd:	je     0x410cd9
  410cbf:	mov    rax,QWORD PTR [rsi+0x8]
  410cc3:	mov    rcx,QWORD PTR [rax+0x290]
  410cca:	mov    rdx,QWORD PTR [rcx]
  410ccd:	lea    rcx,[rdi+0xd0]
  410cd4:	call   0x4032f8
  410cd9:	mov    rbx,QWORD PTR [rsi+0x8]
  410cdd:	cmp    BYTE PTR [rbx+0x240],0x0
  410ce4:	je     0x410d6f
  410cea:	xor    esi,esi
  410cec:	cmp    DWORD PTR [rbx+0x250],esi
  410cf2:	jbe    0x410d6f
  410cf4:	xor    ebp,ebp
  410cf6:	mov    rax,QWORD PTR [rbx+0x248]
  410cfd:	mov    rcx,QWORD PTR [rax+rbp*1]
  410d01:	lea    rdx,[rsp+0x138]
  410d09:	mov    rcx,QWORD PTR [rcx]
  410d0c:	call   0x42a058
  410d11:	test   al,al
  410d13:	je     0x410d3e
  410d15:	mov    rdx,QWORD PTR [rsp+0x138]
  410d1d:	test   rdx,rdx
  410d20:	je     0x410d3e
  410d22:	lea    rcx,[rdi+0x158]
  410d29:	call   0x4010c8
  410d2e:	inc    esi
  410d30:	add    rbp,0x8
  410d34:	cmp    esi,DWORD PTR [rbx+0x250]
  410d3a:	jb     0x410cf6
  410d3c:	jmp    0x410d6f
  410d3e:	mov    rax,QWORD PTR [rbx+0x248]
  410d45:	mov    r8,QWORD PTR [rax+rsi*8]
  410d49:	mov    r8,QWORD PTR [r8]
  410d4c:	lea    rdx,[rip+0x3dadd]        # 0x44e830
  410d53:	lea    rcx,[rsp+0x20]
  410d58:	call   0x40ecd0
  410d5d:	lea    rdx,[rip+0x56414]        # 0x467178
  410d64:	lea    rcx,[rsp+0x20]
  410d69:	call   0x44b71e
  410d6e:	nop
  410d6f:	mov    rcx,QWORD PTR [rsp+0xc8]
  410d77:	call   0x40215c
  410d7c:	mov    rcx,QWORD PTR [rsp+0xb8]
  410d84:	call   0x40215c
  410d89:	mov    rcx,QWORD PTR [rsp+0xa0]
  410d91:	call   0x40215c
  410d96:	mov    rcx,QWORD PTR [rsp+0x90]
  410d9e:	call   0x40215c
  410da3:	mov    rcx,QWORD PTR [rsp+0x80]
  410dab:	call   0x40215c
  410db0:	mov    rcx,QWORD PTR [rsp+0x70]
  410db5:	call   0x40215c
  410dba:	mov    rcx,QWORD PTR [rsp+0x60]
  410dbf:	call   0x40215c
  410dc4:	mov    rcx,QWORD PTR [rsp+0x50]
  410dc9:	call   0x40215c
  410dce:	add    rsp,0x108
  410dd5:	pop    rdi
  410dd6:	pop    rsi
  410dd7:	pop    rbp
  410dd8:	pop    rbx
  410dd9:	ret    
  410dda:	int3   
  410ddb:	int3   
  410ddc:	rex.W push rbp
  410dde:	sub    rsp,0x20
  410de2:	mov    rbp,rdx
  410de5:	lea    rcx,[rbp+0x50]
  410de9:	call   0x401000
  410dee:	add    rsp,0x20
  410df2:	pop    rbp
  410df3:	ret    
  410df4:	int3   
  410df5:	int3   
  410df6:	int3   
  410df7:	int3   
  410df8:	int3   
  410df9:	int3   
  410dfa:	int3   
  410dfb:	int3   
  410dfc:	rex.W push rbp
  410dfe:	sub    rsp,0x20
  410e02:	mov    rbp,rdx
  410e05:	lea    rcx,[rbp+0x50]
  410e09:	call   0x40ec78
  410e0e:	add    rsp,0x20
  410e12:	pop    rbp
  410e13:	ret    
  410e14:	rex.W push rbx
  410e16:	push   rbp
  410e17:	push   rsi
  410e18:	push   rdi
  410e19:	push   r12
  410e1b:	sub    rsp,0x50
  410e1f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  410e28:	mov    r12,rdx
  410e2b:	mov    rsi,rcx
  410e2e:	mov    rax,QWORD PTR [rcx+0x8]
  410e32:	cmp    BYTE PTR [rax+0x168],0x0
  410e39:	je     0x410f2e
  410e3f:	xor    edi,edi
  410e41:	cmp    DWORD PTR [rax+0x178],edi
  410e47:	jbe    0x410f2e
  410e4d:	xor    ebp,ebp
  410e4f:	lea    rcx,[rsp+0x28]
  410e54:	call   0x403150
  410e59:	nop
  410e5a:	lea    rcx,[rsp+0x38]
  410e5f:	call   0x403150
  410e64:	nop
  410e65:	mov    rax,QWORD PTR [rsi+0x8]
  410e69:	mov    rcx,QWORD PTR [rax+0x170]
  410e70:	mov    rdx,QWORD PTR [rcx+rbp*1]
  410e74:	lea    rcx,[rsp+0x28]
  410e79:	call   0x4032f8
  410e7e:	mov    dx,0x3d
  410e82:	mov    rcx,QWORD PTR [rsp+0x28]
  410e87:	call   0x4026e0
  410e8c:	mov    ebx,eax
  410e8e:	test   eax,eax
  410e90:	js     0x410ebd
  410e92:	lea    edx,[rbx+0x1]
  410e95:	mov    rcx,QWORD PTR [rsp+0x28]
  410e9a:	lea    rdx,[rcx+rdx*2]
  410e9e:	lea    rcx,[rsp+0x38]
  410ea3:	call   0x403290
  410ea8:	cmp    ebx,DWORD PTR [rsp+0x30]
  410eac:	jae    0x410ebd
  410eae:	mov    DWORD PTR [rsp+0x30],ebx
  410eb2:	mov    rax,QWORD PTR [rsp+0x28]
  410eb7:	mov    WORD PTR [rax+rbx*2],0x0
  410ebd:	mov    ecx,0x20
  410ec2:	call   0x402130
  410ec7:	mov    rbx,rax
  410eca:	mov    QWORD PTR [rsp+0x80],rax
  410ed2:	test   rax,rax
  410ed5:	je     0x410ef6
  410ed7:	lea    rdx,[rsp+0x28]
  410edc:	mov    rcx,rax
  410edf:	call   0x403208
  410ee4:	nop
  410ee5:	lea    rcx,[rbx+0x10]
  410ee9:	lea    rdx,[rsp+0x38]
  410eee:	call   0x403208
  410ef3:	nop
  410ef4:	jmp    0x410ef8
  410ef6:	xor    ebx,ebx
  410ef8:	mov    rdx,rbx
  410efb:	mov    rcx,r12
  410efe:	call   0x4010c8
  410f03:	nop
  410f04:	mov    rcx,QWORD PTR [rsp+0x38]
  410f09:	call   0x40215c
  410f0e:	mov    rcx,QWORD PTR [rsp+0x28]
  410f13:	call   0x40215c
  410f18:	inc    edi
  410f1a:	add    rbp,0x8
  410f1e:	mov    rax,QWORD PTR [rsi+0x8]
  410f22:	cmp    edi,DWORD PTR [rax+0x178]
  410f28:	jb     0x410e4f
  410f2e:	add    rsp,0x50
  410f32:	pop    r12
  410f34:	pop    rdi
  410f35:	pop    rsi
  410f36:	pop    rbp
  410f37:	pop    rbx
  410f38:	ret    
  410f39:	int3   
  410f3a:	int3   
  410f3b:	int3   
  410f3c:	int3   
  410f3d:	int3   
  410f3e:	int3   
  410f3f:	int3   
  410f40:	int3   
  410f41:	int3   
  410f42:	int3   
  410f43:	int3   
  410f44:	rex.W push rbp
  410f46:	sub    rsp,0x20
  410f4a:	mov    rbp,rdx
  410f4d:	lea    rcx,[rbp+0x28]
  410f51:	call   0x401000
  410f56:	add    rsp,0x20
  410f5a:	pop    rbp
  410f5b:	ret    
  410f5c:	int3   
  410f5d:	int3   
  410f5e:	int3   
  410f5f:	int3   
  410f60:	int3   
  410f61:	int3   
  410f62:	int3   
  410f63:	int3   
  410f64:	rex.W push rbp
  410f66:	sub    rsp,0x20
  410f6a:	mov    rbp,rdx
  410f6d:	lea    rcx,[rbp+0x28]
  410f71:	call   0x40ef24
  410f76:	add    rsp,0x20
  410f7a:	pop    rbp
  410f7b:	ret    
  410f7c:	int3   
  410f7d:	int3   
  410f7e:	int3   
  410f7f:	int3   
  410f80:	int3   
  410f81:	int3   
  410f82:	int3   
  410f83:	int3   
  410f84:	rex.W push rbp
  410f86:	sub    rsp,0x20
  410f8a:	mov    rbp,rdx
  410f8d:	mov    rcx,QWORD PTR [rbp+0x80]
  410f94:	call   0x40215c
  410f99:	add    rsp,0x20
  410f9d:	pop    rbp
  410f9e:	ret    
  410f9f:	int3   
  410fa0:	int3   
  410fa1:	int3   
  410fa2:	int3   
  410fa3:	int3   
  410fa4:	rex.W push rbp
  410fa6:	sub    rsp,0x20
  410faa:	mov    rbp,rdx
  410fad:	mov    rcx,QWORD PTR [rbp+0x80]
  410fb4:	call   0x401000
  410fb9:	add    rsp,0x20
  410fbd:	pop    rbp
  410fbe:	ret    
  410fbf:	int3   
  410fc0:	rex.W push rbx
  410fc2:	push   rbp
  410fc3:	push   rsi
  410fc4:	push   rdi
  410fc5:	sub    rsp,0x28
  410fc9:	mov    rdi,rcx
  410fcc:	mov    rcx,QWORD PTR [rcx+0xa8]
  410fd3:	call   0x40215c
  410fd8:	lea    rcx,[rdi+0x78]
  410fdc:	call   0x40fd9c
  410fe1:	lea    rcx,[rdi+0x30]
  410fe5:	call   0x40fe90
  410fea:	mov    rcx,QWORD PTR [rdi+0x20]
  410fee:	call   0x40215c
  410ff3:	mov    rcx,QWORD PTR [rdi+0x10]
  410ff7:	call   0x40215c
  410ffc:	movsxd rsi,DWORD PTR [rdi+0x8]
  411000:	test   esi,esi
  411002:	mov    rbx,rsi
  411005:	je     0x411033
  411007:	shl    rbx,0x3
  41100b:	mov    rax,QWORD PTR [rdi]
  41100e:	sub    rbx,0x8
  411012:	add    esi,0xffffffff
  411015:	mov    rbp,QWORD PTR [rbx+rax*1]
  411019:	test   rbp,rbp
  41101c:	je     0x41102f
  41101e:	mov    rcx,QWORD PTR [rbp+0x0]
  411022:	call   0x40215c
  411027:	mov    rcx,rbp
  41102a:	call   0x40215c
  41102f:	test   esi,esi
  411031:	jne    0x41100b
  411033:	mov    rcx,QWORD PTR [rdi]
  411036:	add    rsp,0x28
  41103a:	pop    rdi
  41103b:	pop    rsi
  41103c:	pop    rbp
  41103d:	pop    rbx
  41103e:	jmp    0x40215c
  411043:	int3   
  411044:	mov    QWORD PTR [rsp+0x8],rcx
  411049:	push   rbx
  41104a:	push   rbp
  41104b:	push   rsi
  41104c:	push   rdi
  41104d:	sub    rsp,0x58
  411051:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
  41105a:	mov    rdi,rdx
  41105d:	mov    rbx,rcx
  411060:	add    rdx,0x28
  411064:	call   0x40f8dc
  411069:	lea    rdx,[rdi+0x38]
  41106d:	mov    rcx,rbx
  411070:	call   0x40f8dc
  411075:	xor    esi,esi
  411077:	mov    ebp,esi
  411079:	cmp    DWORD PTR [rdi+0x20],esi
  41107c:	jbe    0x4110d2
  41107e:	mov    rbx,rsi
  411081:	mov    rax,QWORD PTR [rdi+0x18]
  411085:	mov    rax,QWORD PTR [rbx+rax*1]
  411089:	add    rax,0x8
  41108d:	mov    QWORD PTR [rsp+0x88],rax
  411095:	mov    rcx,QWORD PTR [rsp+0x80]
  41109d:	cmp    DWORD PTR [rcx+0x8],esi
  4110a0:	jne    0x4110b7
  4110a2:	mov    rcx,QWORD PTR [rax]
  4110a5:	call   0x404534
  4110aa:	cmp    al,sil
  4110ad:	jne    0x4110c7
  4110af:	mov    rax,QWORD PTR [rsp+0x88]
  4110b7:	mov    rdx,rax
  4110ba:	mov    rcx,QWORD PTR [rsp+0x80]
  4110c2:	call   0x40ee2c
  4110c7:	inc    ebp
  4110c9:	add    rbx,0x8
  4110cd:	cmp    ebp,DWORD PTR [rdi+0x20]
  4110d0:	jb     0x411081
  4110d2:	mov    ecx,DWORD PTR [rdi+0x20]
  4110d5:	cmp    ecx,esi
  4110d7:	jbe    0x41120d
  4110dd:	mov    ebx,0x1
  4110e2:	mov    DWORD PTR [rsp+0x90],ebx
  4110e9:	mov    rbp,rsi
  4110ec:	mov    QWORD PTR [rsp+0x28],rsi
  4110f1:	mov    rax,QWORD PTR [rdi+0x18]
  4110f5:	mov    r8,QWORD PTR [rax+rbp*1]
  4110f9:	mov    QWORD PTR [rsp+0x20],r8
  4110fe:	cmp    ebx,ecx
  411100:	jae    0x4111ed
  411106:	lea    eax,[rbx+0x1]
  411109:	mov    DWORD PTR [rsp+0x88],eax
  411110:	lea    rax,[rbp+0x8]
  411114:	mov    rbp,rax
  411117:	mov    rax,QWORD PTR [rdi+0x18]
  41111b:	mov    rax,QWORD PTR [rax+rbp*1]
  41111f:	mov    QWORD PTR [rsp+0x98],rax
  411127:	mov    rdx,QWORD PTR [rax+0x8]
  41112b:	mov    rcx,QWORD PTR [r8+0x8]
  41112f:	call   0x40272c
  411134:	cmp    al,sil
  411137:	je     0x4111c6
  41113d:	mov    rdx,QWORD PTR [rsp+0x98]
  411145:	add    rdx,0x28
  411149:	mov    rcx,QWORD PTR [rsp+0x20]
  41114e:	add    rcx,0x28
  411152:	call   0x4054a4
  411157:	mov    rdx,QWORD PTR [rsp+0x98]
  41115f:	add    rdx,0x38
  411163:	mov    rcx,QWORD PTR [rsp+0x20]
  411168:	add    rcx,0x38
  41116c:	call   0x4054a4
  411171:	mov    rax,QWORD PTR [rdi+0x18]
  411175:	mov    rax,QWORD PTR [rax+rbp*1]
  411179:	mov    QWORD PTR [rsp+0x98],rax
  411181:	cmp    rax,rsi
  411184:	je     0x41119b
  411186:	mov    rcx,rax
  411189:	call   0x4056bc
  41118e:	mov    rcx,QWORD PTR [rsp+0x98]
  411196:	call   0x40215c
  41119b:	mov    rcx,QWORD PTR [rdi+0x18]
  41119f:	mov    r8d,DWORD PTR [rdi+0x20]
  4111a3:	mov    edx,DWORD PTR [rsp+0x88]
  4111aa:	sub    r8d,edx
  4111ad:	shl    r8,0x3
  4111b1:	lea    rdx,[rcx+rdx*8]
  4111b5:	mov    eax,ebx
  4111b7:	lea    rcx,[rcx+rax*8]
  4111bb:	call   0x44b774
  4111c0:	add    DWORD PTR [rdi+0x20],0xffffffff
  4111c4:	jmp    0x4111d3
  4111c6:	inc    ebx
  4111c8:	inc    DWORD PTR [rsp+0x88]
  4111cf:	add    rbp,0x8
  4111d3:	cmp    ebx,DWORD PTR [rdi+0x20]
  4111d6:	mov    r8,QWORD PTR [rsp+0x20]
  4111db:	jb     0x411117
  4111e1:	mov    ebx,DWORD PTR [rsp+0x90]
  4111e8:	mov    rbp,QWORD PTR [rsp+0x28]
  4111ed:	inc    ebx
  4111ef:	mov    DWORD PTR [rsp+0x90],ebx
  4111f6:	add    rbp,0x8
  4111fa:	mov    QWORD PTR [rsp+0x28],rbp
  4111ff:	mov    ecx,DWORD PTR [rdi+0x20]
  411202:	lea    eax,[rbx-0x1]
  411205:	cmp    eax,ecx
  411207:	jb     0x4110f1
  41120d:	cmp    DWORD PTR [rdi+0x20],esi
  411210:	jbe    0x411273
  411212:	mov    rbp,rsi
  411215:	mov    rax,QWORD PTR [rdi+0x18]
  411219:	mov    rbx,QWORD PTR [rax+rbp*1]
  41121d:	lea    r8,[rbx+0x8]
  411221:	mov    rdx,QWORD PTR [rsp+0x80]
  411229:	lea    rcx,[rsp+0x28]
  41122e:	call   0x4030d4
  411233:	nop
  411234:	mov    r8w,0x5c
  411239:	mov    rdx,rax
  41123c:	lea    rcx,[rsp+0x38]
  411241:	call   0x40f0d8
  411246:	nop
  411247:	mov    rdx,rbx
  41124a:	mov    rcx,rax
  41124d:	call   0x411044
  411252:	nop
  411253:	mov    rcx,QWORD PTR [rsp+0x38]
  411258:	call   0x40215c
  41125d:	nop
  41125e:	mov    rcx,QWORD PTR [rsp+0x28]
  411263:	call   0x40215c
  411268:	inc    esi
  41126a:	add    rbp,0x8
  41126e:	cmp    esi,DWORD PTR [rdi+0x20]
  411271:	jb     0x411215
  411273:	add    rsp,0x58
  411277:	pop    rdi
  411278:	pop    rsi
  411279:	pop    rbp
  41127a:	pop    rbx
  41127b:	ret    
  41127c:	int3   
  41127d:	int3   
  41127e:	int3   
  41127f:	int3   
  411280:	int3   
  411281:	int3   
  411282:	int3   
  411283:	int3   
  411284:	rex.W push rbp
  411286:	sub    rsp,0x20
  41128a:	mov    rbp,rdx
  41128d:	lea    rcx,[rbp+0x28]
  411291:	call   0x401000
  411296:	add    rsp,0x20
  41129a:	pop    rbp
  41129b:	ret    
  41129c:	int3   
  41129d:	int3   
  41129e:	int3   
  41129f:	int3   
  4112a0:	int3   
  4112a1:	int3   
  4112a2:	int3   
  4112a3:	int3   
  4112a4:	rex.W push rbp
  4112a6:	sub    rsp,0x20
  4112aa:	mov    rbp,rdx
  4112ad:	lea    rcx,[rbp+0x38]
  4112b1:	call   0x401000
  4112b6:	add    rsp,0x20
  4112ba:	pop    rbp
  4112bb:	ret    
  4112bc:	rex.W push rbx
  4112be:	push   rsi
  4112bf:	push   rdi
  4112c0:	sub    rsp,0x20
  4112c4:	xor    ebx,ebx
  4112c6:	mov    rdi,rcx
  4112c9:	cmp    DWORD PTR [rcx+0x8],ebx
  4112cc:	jbe    0x4112ec
  4112ce:	mov    rsi,rbx
  4112d1:	mov    rax,QWORD PTR [rdi]
  4112d4:	mov    rcx,QWORD PTR [rsi+rax*1]
  4112d8:	lea    rdx,[rcx+0x10]
  4112dc:	call   0x411044
  4112e1:	inc    ebx
  4112e3:	add    rsi,0x8
  4112e7:	cmp    ebx,DWORD PTR [rdi+0x8]
  4112ea:	jb     0x4112d1
  4112ec:	add    rsp,0x20
  4112f0:	pop    rdi
  4112f1:	pop    rsi
  4112f2:	pop    rbx
  4112f3:	ret    
  4112f4:	mov    QWORD PTR [rsp+0x20],r9
  4112f9:	push   rbx
  4112fa:	push   rbp
  4112fb:	push   rsi
  4112fc:	push   rdi
  4112fd:	push   r12
  4112ff:	push   r13
  411301:	push   r14
  411303:	push   r15
  411305:	sub    rsp,0x148
  41130c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
  411315:	mov    r13,r9
  411318:	mov    rbx,r8
  41131b:	mov    edi,edx
  41131d:	mov    rsi,rcx
  411320:	xor    r15d,r15d
  411323:	mov    r12,r15
  411326:	mov    QWORD PTR [rsp+0x50],r15
  41132b:	mov    ebp,r15d
  41132e:	mov    DWORD PTR [rsp+0x58],r15d
  411333:	mov    DWORD PTR [rsp+0x5c],r15d
  411338:	lea    rcx,[rsp+0x70]
  41133d:	call   0x420840
  411342:	nop
  411343:	mov    rax,QWORD PTR [rsp+0x1c0]
  41134b:	mov    QWORD PTR [rsp+0x130],rax
  411353:	lea    r9,[rsp+0x70]
  411358:	mov    r8,rbx
  41135b:	mov    edx,edi
  41135d:	mov    rcx,rsi
  411360:	call   0x42287c
  411365:	mov    ebx,eax
  411367:	mov    rcx,QWORD PTR [rsp+0x1b8]
  41136f:	lea    rdx,[rsp+0xb8]
  411377:	lea    r8d,[r15+0x30]
  41137b:	call   0x44b480
  411380:	cmp    ebx,r15d
  411383:	je     0x41139e
  411385:	lea    rcx,[rsp+0x70]
  41138a:	call   0x410fc0
  41138f:	nop
  411390:	xor    ecx,ecx
  411392:	call   0x40215c
  411397:	mov    eax,ebx
  411399:	jmp    0x4116c2
  41139e:	mov    ebx,r15d
  4113a1:	mov    r14d,0x10
  4113a7:	mov    edx,DWORD PTR [rsp+0xa8]
  4113ae:	cmp    edx,r15d
  4113b1:	jbe    0x41143c
  4113b7:	mov    rdi,r15
  4113ba:	mov    rax,QWORD PTR [rsp+0xa0]
  4113c2:	mov    rcx,QWORD PTR [rdi+rax*1]
  4113c6:	mov    eax,DWORD PTR [rcx+0x50]
  4113c9:	shr    eax,0x4
  4113cc:	test   al,0x1
  4113ce:	jne    0x411429
  4113d0:	mov    r8d,ebx
  4113d3:	lea    rdx,[rsp+0x20]
  4113d8:	lea    rcx,[rsp+0x70]
  4113dd:	call   0x41fd04
  4113e2:	mov    rsi,rax
  4113e5:	mov    rcx,r14
  4113e8:	call   0x402130
  4113ed:	mov    QWORD PTR [rsp+0x1c0],rax
  4113f5:	cmp    rax,r15
  4113f8:	je     0x411407
  4113fa:	mov    rdx,rsi
  4113fd:	mov    rcx,rax
  411400:	call   0x403208
  411405:	jmp    0x41140a
  411407:	mov    rax,r15
  41140a:	mov    rdx,rax
  41140d:	lea    rcx,[rsp+0x50]
  411412:	call   0x4010c8
  411417:	nop
  411418:	mov    rcx,QWORD PTR [rsp+0x20]
  41141d:	call   0x40215c
  411422:	mov    edx,DWORD PTR [rsp+0xa8]
  411429:	inc    ebx
  41142b:	add    rdi,0x8
  41142f:	cmp    ebx,edx
  411431:	jb     0x4113ba
  411433:	mov    ebp,DWORD PTR [rsp+0x58]
  411437:	mov    r12,QWORD PTR [rsp+0x50]
  41143c:	lea    rcx,[rsp+0x70]
  411441:	call   0x410fc0
  411446:	cmp    ebp,r15d
  411449:	jne    0x411471
  41144b:	xor    r8d,r8d
  41144e:	mov    rdx,QWORD PTR [rip+0x56cc3]        # 0x468118
  411455:	lea    rcx,[rsp+0x20]
  41145a:	call   0x40ecd0
  41145f:	lea    rdx,[rip+0x55d12]        # 0x467178
  411466:	lea    rcx,[rsp+0x20]
  41146b:	call   0x44b71e
  411470:	int3   
  411471:	mov    QWORD PTR [rsp+0x40],r15
  411476:	mov    DWORD PTR [rsp+0x48],r15d
  41147b:	mov    DWORD PTR [rsp+0x4c],r15d
  411480:	cmp    ebp,r15d
  411483:	jbe    0x4114ed
  411485:	mov    rbx,r12
  411488:	mov    edi,ebp
  41148a:	lea    rcx,[rsp+0x20]
  41148f:	call   0x403150
  411494:	nop
  411495:	mov    rax,QWORD PTR [rbx]
  411498:	lea    rdx,[rsp+0x20]
  41149d:	mov    rcx,QWORD PTR [rax]
  4114a0:	call   0x4070b4
  4114a5:	mov    rcx,r14
  4114a8:	call   0x402130
  4114ad:	mov    QWORD PTR [rsp+0x1c0],rax
  4114b5:	cmp    rax,r15
  4114b8:	je     0x4114c9
  4114ba:	lea    rdx,[rsp+0x20]
  4114bf:	mov    rcx,rax
  4114c2:	call   0x403208
  4114c7:	jmp    0x4114cc
  4114c9:	mov    rax,r15
  4114cc:	mov    rdx,rax
  4114cf:	lea    rcx,[rsp+0x40]
  4114d4:	call   0x4010c8
  4114d9:	nop
  4114da:	mov    rcx,QWORD PTR [rsp+0x20]
  4114df:	call   0x40215c
  4114e4:	add    rbx,0x8
  4114e8:	dec    rdi
  4114eb:	jne    0x41148a
  4114ed:	mov    QWORD PTR [rsp+0x30],r15
  4114f2:	mov    DWORD PTR [rsp+0x38],r15d
  4114f7:	mov    DWORD PTR [rsp+0x3c],r15d
  4114fc:	lea    rdx,[rsp+0x30]
  411501:	lea    rcx,[rsp+0x40]
  411506:	call   0x434490
  41150b:	mov    edx,DWORD PTR [rsp+0x38]
  41150f:	mov    rcx,r13
  411512:	call   0x40fe04
  411517:	mov    edx,DWORD PTR [rsp+0x38]
  41151b:	mov    rbx,QWORD PTR [rsp+0x1b0]
  411523:	mov    rcx,rbx
  411526:	call   0x40fe04
  41152b:	mov    edi,r15d
  41152e:	cmp    DWORD PTR [rsp+0x38],r15d
  411533:	jbe    0x411636
  411539:	mov    rsi,r15
  41153c:	mov    r13,r15
  41153f:	mov    rax,QWORD PTR [rsp+0x30]
  411544:	mov    r15d,DWORD PTR [r13+rax*1+0x0]
  411549:	mov    r14,QWORD PTR [r12+r15*8]
  41154d:	mov    ecx,0x10
  411552:	call   0x402130
  411557:	mov    QWORD PTR [rsp+0x1c0],rax
  41155f:	test   rax,rax
  411562:	je     0x411574
  411564:	mov    rdx,r14
  411567:	mov    rcx,rax
  41156a:	call   0x403208
  41156f:	mov    r11,rax
  411572:	jmp    0x411577
  411574:	xor    r11d,r11d
  411577:	mov    rdx,QWORD PTR [rsp+0x1a8]
  41157f:	mov    ecx,DWORD PTR [rdx+0x8]
  411582:	mov    rax,QWORD PTR [rdx]
  411585:	mov    QWORD PTR [rax+rcx*8],r11
  411589:	inc    DWORD PTR [rdx+0x8]
  41158c:	mov    rax,QWORD PTR [rsp+0x40]
  411591:	mov    r14,QWORD PTR [rax+r15*8]
  411595:	mov    ecx,0x10
  41159a:	call   0x402130
  41159f:	mov    QWORD PTR [rsp+0x1c0],rax
  4115a7:	xor    r15d,r15d
  4115aa:	cmp    rax,r15
  4115ad:	je     0x4115bf
  4115af:	mov    rdx,r14
  4115b2:	mov    rcx,rax
  4115b5:	call   0x403208
  4115ba:	mov    r11,rax
  4115bd:	jmp    0x4115c2
  4115bf:	mov    r11,r15
  4115c2:	mov    ecx,DWORD PTR [rbx+0x8]
  4115c5:	mov    rax,QWORD PTR [rbx]
  4115c8:	mov    QWORD PTR [rax+rcx*8],r11
  4115cc:	inc    DWORD PTR [rbx+0x8]
  4115cf:	cmp    edi,r15d
  4115d2:	jbe    0x4115f0
  4115d4:	mov    rcx,QWORD PTR [rbx]
  4115d7:	mov    rax,QWORD PTR [rsi+rcx*1-0x8]
  4115dc:	mov    rdx,QWORD PTR [rax]
  4115df:	mov    rax,QWORD PTR [rsi+rcx*1]
  4115e3:	mov    rcx,QWORD PTR [rax]
  4115e6:	call   0x4042ec
  4115eb:	cmp    eax,r15d
  4115ee:	je     0x411606
  4115f0:	inc    edi
  4115f2:	add    r13,0x4
  4115f6:	add    rsi,0x8
  4115fa:	cmp    edi,DWORD PTR [rsp+0x38]
  4115fe:	jb     0x41153f
  411604:	jmp    0x411636
  411606:	mov    r8d,edi
  411609:	mov    rax,QWORD PTR [rbx]
  41160c:	mov    r8,QWORD PTR [rax+r8*8]
  411610:	mov    r8,QWORD PTR [r8]
  411613:	lea    rdx,[rip+0x3d296]        # 0x44e8b0
  41161a:	lea    rcx,[rsp+0x20]
  41161f:	call   0x40ecd0
  411624:	lea    rdx,[rip+0x55b4d]        # 0x467178
  41162b:	lea    rcx,[rsp+0x20]
  411630:	call   0x44b71e
  411635:	nop
  411636:	mov    rcx,QWORD PTR [rsp+0x30]
  41163b:	call   0x40215c
  411640:	nop
  411641:	movsxd rbx,DWORD PTR [rsp+0x48]
  411646:	mov    rdi,rbx
  411649:	mov    r13d,0xffffffff
  41164f:	cmp    ebx,r15d
  411652:	je     0x411682
  411654:	shl    rdi,0x3
  411658:	add    ebx,r13d
  41165b:	sub    rdi,0x8
  41165f:	mov    rax,QWORD PTR [rsp+0x40]
  411664:	mov    rsi,QWORD PTR [rdi+rax*1]
  411668:	cmp    rsi,r15
  41166b:	je     0x41167d
  41166d:	mov    rcx,QWORD PTR [rsi]
  411670:	call   0x40215c
  411675:	mov    rcx,rsi
  411678:	call   0x40215c
  41167d:	cmp    ebx,r15d
  411680:	jne    0x411658
  411682:	mov    rcx,QWORD PTR [rsp+0x40]
  411687:	call   0x40215c
  41168c:	nop
  41168d:	movsxd rax,ebp
  411690:	lea    rdi,[r12+rax*8]
  411694:	add    ebp,r13d
  411697:	sub    rdi,0x8
  41169b:	mov    rbx,QWORD PTR [rdi]
  41169e:	cmp    rbx,r15
  4116a1:	je     0x4116b3
  4116a3:	mov    rcx,QWORD PTR [rbx]
  4116a6:	call   0x40215c
  4116ab:	mov    rcx,rbx
  4116ae:	call   0x40215c
  4116b3:	cmp    ebp,r15d
  4116b6:	jne    0x411694
  4116b8:	mov    rcx,r12
  4116bb:	call   0x40215c
  4116c0:	xor    eax,eax
  4116c2:	add    rsp,0x148
  4116c9:	pop    r15
  4116cb:	pop    r14
  4116cd:	pop    r13
  4116cf:	pop    r12
  4116d1:	pop    rdi
  4116d2:	pop    rsi
  4116d3:	pop    rbp
  4116d4:	pop    rbx
  4116d5:	ret    
  4116d6:	int3   
  4116d7:	int3   
  4116d8:	int3   
  4116d9:	int3   
  4116da:	int3   
  4116db:	int3   
  4116dc:	int3   
  4116dd:	int3   
  4116de:	int3   
  4116df:	int3   
  4116e0:	int3   
  4116e1:	int3   
  4116e2:	int3   
  4116e3:	int3   
  4116e4:	rex.W push rbp
  4116e6:	sub    rsp,0x20
  4116ea:	mov    rbp,rdx
  4116ed:	lea    rcx,[rbp+0x50]
  4116f1:	call   0x4047cc
  4116f6:	add    rsp,0x20
  4116fa:	pop    rbp
  4116fb:	ret    
  4116fc:	int3   
  4116fd:	int3   
  4116fe:	int3   
  4116ff:	int3   
  411700:	int3   
  411701:	int3   
  411702:	int3   
  411703:	int3   
  411704:	rex.W push rbp
  411706:	sub    rsp,0x20
  41170a:	mov    rbp,rdx
  41170d:	lea    rcx,[rbp+0x70]
  411711:	call   0x410fc0
  411716:	add    rsp,0x20
  41171a:	pop    rbp
  41171b:	ret    
  41171c:	int3   
  41171d:	int3   
  41171e:	int3   
  41171f:	int3   
  411720:	int3   
  411721:	int3   
  411722:	int3   
  411723:	int3   
  411724:	rex.W push rbp
  411726:	sub    rsp,0x20
  41172a:	mov    rbp,rdx
  41172d:	lea    rcx,[rbp+0x20]
  411731:	call   0x401000
  411736:	add    rsp,0x20
  41173a:	pop    rbp
  41173b:	ret    
  41173c:	int3   
  41173d:	int3   
  41173e:	int3   
  41173f:	int3   
  411740:	int3   
  411741:	int3   
  411742:	int3   
  411743:	int3   
  411744:	rex.W push rbp
  411746:	sub    rsp,0x20
  41174a:	mov    rbp,rdx
  41174d:	mov    rcx,QWORD PTR [rbp+0x1c0]
  411754:	call   0x40215c
  411759:	add    rsp,0x20
  41175d:	pop    rbp
  41175e:	ret    
  41175f:	int3   
  411760:	int3   
  411761:	int3   
  411762:	int3   
  411763:	int3   
  411764:	rex.W push rbp
  411766:	sub    rsp,0x20
  41176a:	mov    rbp,rdx
  41176d:	lea    rcx,[rbp+0x40]
  411771:	call   0x4047cc
  411776:	add    rsp,0x20
  41177a:	pop    rbp
  41177b:	ret    
  41177c:	int3   
  41177d:	int3   
  41177e:	int3   
  41177f:	int3   
  411780:	int3   
  411781:	int3   
  411782:	int3   
  411783:	int3   
  411784:	rex.W push rbp
  411786:	sub    rsp,0x20
  41178a:	mov    rbp,rdx
  41178d:	lea    rcx,[rbp+0x20]
  411791:	call   0x401000
  411796:	add    rsp,0x20
  41179a:	pop    rbp
  41179b:	ret    
  41179c:	int3   
  41179d:	int3   
  41179e:	int3   
  41179f:	int3   
  4117a0:	int3   
  4117a1:	int3   
  4117a2:	int3   
  4117a3:	int3   
  4117a4:	rex.W push rbp
  4117a6:	sub    rsp,0x20
  4117aa:	mov    rbp,rdx
  4117ad:	mov    rcx,QWORD PTR [rbp+0x1c0]
  4117b4:	call   0x40215c
  4117b9:	add    rsp,0x20
  4117bd:	pop    rbp
  4117be:	ret    
  4117bf:	int3   
  4117c0:	int3   
  4117c1:	int3   
  4117c2:	int3   
  4117c3:	int3   
  4117c4:	rex.W push rbp
  4117c6:	sub    rsp,0x20
  4117ca:	mov    rbp,rdx
  4117cd:	lea    rcx,[rbp+0x30]
  4117d1:	call   0x401000
  4117d6:	add    rsp,0x20
  4117da:	pop    rbp
  4117db:	ret    
  4117dc:	int3   
  4117dd:	int3   
  4117de:	int3   
  4117df:	int3   
  4117e0:	int3   
  4117e1:	int3   
  4117e2:	int3   
  4117e3:	int3   
  4117e4:	rex.W push rbp
  4117e6:	sub    rsp,0x20
  4117ea:	mov    rbp,rdx
  4117ed:	mov    rcx,QWORD PTR [rbp+0x1c0]
  4117f4:	call   0x40215c
  4117f9:	add    rsp,0x20
  4117fd:	pop    rbp
  4117fe:	ret    
  4117ff:	int3   
  411800:	int3   
  411801:	int3   
  411802:	int3   
  411803:	int3   
  411804:	rex.W push rbp
  411806:	sub    rsp,0x20
  41180a:	mov    rbp,rdx
  41180d:	mov    rcx,QWORD PTR [rbp+0x1c0]
  411814:	call   0x40215c
  411819:	add    rsp,0x20
  41181d:	pop    rbp
  41181e:	ret    
  41181f:	int3   
  411820:	rex.W push rbx
  411822:	push   rbp
  411823:	push   rsi
  411824:	push   rdi
  411825:	push   r12
  411827:	push   r13
  411829:	push   r14
  41182b:	push   r15
  41182d:	sub    rsp,0x68
  411831:	mov    eax,DWORD PTR [rcx+0x18]
  411834:	mov    r15d,0x1
  41183a:	mov    rdi,rdx
  41183d:	cmp    eax,r15d
  411840:	mov    rsi,rcx
  411843:	mov    DWORD PTR [rsp+0x4c],eax
  411847:	jae    0x41186f
  411849:	lea    rdx,[rip+0x3d1e0]        # 0x44ea30
  411850:	lea    rcx,[rsp+0x50]
  411855:	xor    r8d,r8d
  411858:	call   0x40ecd0
  41185d:	lea    rdx,[rip+0x55914]        # 0x467178
  411864:	lea    rcx,[rsp+0x50]
  411869:	call   0x44b71e
  41186e:	int3   
  41186f:	mov    rdx,QWORD PTR [rcx+0x10]
  411873:	lea    rcx,[rsp+0x50]
  411878:	mov    rdx,QWORD PTR [rdx]
  41187b:	call   0x403208
  411880:	mov    rcx,QWORD PTR [rsp+0x50]
  411885:	call   0x40270c
  41188a:	xor    r13d,r13d
  41188d:	cmp    DWORD PTR [rsp+0x58],r15d
  411892:	jne    0x4118f1
  411894:	mov    rax,QWORD PTR [rsp+0x50]
  411899:	cmp    WORD PTR [rax],0x7f
  41189d:	jbe    0x4118d4
  41189f:	mov    rcx,rax
  4118a2:	call   0x40215c
  4118a7:	mov    rax,QWORD PTR [rsi+0x10]
  4118ab:	lea    rdx,[rip+0x3d166]        # 0x44ea18
  4118b2:	mov    r8,QWORD PTR [rax]
  4118b5:	lea    rcx,[rsp+0x50]
  4118ba:	mov    r8,QWORD PTR [r8]
  4118bd:	call   0x40ecd0
  4118c2:	lea    rdx,[rip+0x558af]        # 0x467178
  4118c9:	lea    rcx,[rsp+0x50]
  4118ce:	call   0x44b71e
  4118d3:	int3   
  4118d4:	mov    dl,BYTE PTR [rax]
  4118d6:	mov    rcx,QWORD PTR [rip+0x56843]        # 0x468120
  4118dd:	call   0x4026bc
  4118e2:	mov    rcx,QWORD PTR [rsp+0x50]
  4118e7:	cmp    eax,r13d
  4118ea:	jl     0x4118a2
  4118ec:	mov    DWORD PTR [rdi+0x30],eax
  4118ef:	jmp    0x411911
  4118f1:	cmp    DWORD PTR [rsp+0x58],0x2
  4118f6:	mov    rcx,QWORD PTR [rsp+0x50]
  4118fb:	jne    0x4118a2
  4118fd:	cmp    WORD PTR [rcx],0x72
  411901:	jne    0x4118a2
  411903:	cmp    WORD PTR [rcx+0x2],0x6e
  411908:	jne    0x4118a2
  41190a:	mov    DWORD PTR [rdi+0x30],0xa
  411911:	call   0x40215c
  411916:	mov    rdx,QWORD PTR [rsi+0x8]
  41191a:	cmp    BYTE PTR [rdx+0x2b8],r13b
  411921:	je     0x411933
  411923:	lea    rcx,[rdi+0x68]
  411927:	add    rdx,0x2c0
  41192e:	call   0x404df0
  411933:	mov    rax,QWORD PTR [rsi+0x8]
  411937:	cmp    BYTE PTR [rax+0x3c0],r13b
  41193e:	je     0x41195b
  411940:	mov    BYTE PTR [rdi+0xc1],r15b
  411947:	mov    rax,QWORD PTR [rsi+0x8]
  41194b:	cmp    BYTE PTR [rax+0x3c1],r13b
  411952:	sete   al
  411955:	mov    BYTE PTR [rdi+0xc0],al
  41195b:	mov    rax,QWORD PTR [rsi+0x8]
  41195f:	mov    r14d,r13d
  411962:	cmp    BYTE PTR [rax+0x3d8],r13b
  411969:	je     0x411999
  41196b:	mov    rax,QWORD PTR [rax+0x3e0]
  411972:	mov    r14d,0x2
  411978:	mov    rbx,QWORD PTR [rax]
  41197b:	cmp    DWORD PTR [rbx+0x8],r13d
  41197f:	je     0x411999
  411981:	mov    rcx,QWORD PTR [rbx]
  411984:	lea    rdx,[rip+0x3d089]        # 0x44ea14
  41198b:	call   QWORD PTR [rip+0x3b9b7]        # 0x44d348
  411991:	cmp    eax,r13d
  411994:	jne    0x4119ba
  411996:	mov    r14d,r15d
  411999:	mov    rdx,QWORD PTR [rsi+0x8]
  41199d:	cmp    BYTE PTR [rdx+0x258],r13b
  4119a4:	je     0x4119e5
  4119a6:	mov    ecx,DWORD PTR [rdx+0x25c]
  4119ac:	cmp    ecx,r13d
  4119af:	je     0x4119e0
  4119b1:	dec    ecx
  4119b3:	je     0x4119e5
  4119b5:	mov    ebx,r13d
  4119b8:	jmp    0x4119ea
  4119ba:	mov    r8,QWORD PTR [rbx]
  4119bd:	lea    rdx,[rip+0x3d03c]        # 0x44ea00
  4119c4:	lea    rcx,[rsp+0x50]
  4119c9:	call   0x40ecd0
  4119ce:	lea    rdx,[rip+0x557a3]        # 0x467178
  4119d5:	lea    rcx,[rsp+0x50]
  4119da:	call   0x44b71e
  4119df:	int3   
  4119e0:	mov    ebx,r15d
  4119e3:	jmp    0x4119ea
  4119e5:	mov    ebx,0x2
  4119ea:	cmp    BYTE PTR [rdx+0x3a8],r13b
  4119f1:	mov    r9d,0xffffffff
  4119f7:	movzx  ebp,r15b
  4119fb:	cmovne ebp,r13d
  4119ff:	lea    edx,[r9+0x23]
  411a03:	mov    r8b,r15b
  411a06:	mov    rcx,rsi
  411a09:	mov    DWORD PTR [rsp+0x44],ebp
  411a0d:	call   0x40fc74
  411a12:	xor    r8d,r8d
  411a15:	mov    r9d,0xfde9
  411a1b:	lea    edx,[r8+0x21]
  411a1f:	mov    rcx,rsi
  411a22:	mov    DWORD PTR [rip+0x56698],eax        # 0x4680c0
  411a28:	call   0x40fc74
  411a2d:	mov    rdx,QWORD PTR [rsi+0x8]
  411a31:	mov    BYTE PTR [rsp+0xb0],r13b
  411a39:	cmp    BYTE PTR [rdx+0x1b0],r13b
  411a40:	mov    DWORD PTR [rsp+0x40],eax
  411a44:	je     0x411a71
  411a46:	mov    DWORD PTR [rsp+0x28],eax
  411a4a:	lea    rcx,[rdi+0x10]
  411a4e:	add    rdx,0x1b8
  411a55:	mov    r9d,ebx
  411a58:	mov    r8b,r15b
  411a5b:	mov    BYTE PTR [rsp+0xb0],r15b
  411a63:	mov    BYTE PTR [rsp+0x20],bpl
  411a68:	call   0x41055c
  411a6d:	mov    eax,DWORD PTR [rsp+0x40]
  411a71:	mov    rdx,QWORD PTR [rsi+0x8]
  411a75:	cmp    BYTE PTR [rdx+0x1c8],r13b
  411a7c:	je     0x411a9d
  411a7e:	mov    DWORD PTR [rsp+0x28],eax
  411a82:	lea    rcx,[rdi+0x10]
  411a86:	add    rdx,0x1d0
  411a8d:	mov    r9d,ebx
  411a90:	xor    r8d,r8d
  411a93:	mov    BYTE PTR [rsp+0x20],bpl
  411a98:	call   0x41055c
  411a9d:	mov    rdx,QWORD PTR [rsi+0x8]
  411aa1:	mov    r10d,r15d
  411aa4:	mov    DWORD PTR [rsp+0x48],r15d
  411aa9:	cmp    BYTE PTR [rdx+0x210],r13b
  411ab0:	jne    0x411ac4
  411ab2:	cmp    DWORD PTR [rdi+0x30],0x7
  411ab6:	je     0x411ac4
  411ab8:	cmp    DWORD PTR [rdi+0x30],0x8
  411abc:	je     0x411ac4
  411abe:	cmp    DWORD PTR [rdi+0x30],0x9
  411ac2:	jne    0x411ac7
  411ac4:	mov    r15b,r13b
  411ac7:	mov    ecx,DWORD PTR [rdi+0x30]
  411aca:	lea    eax,[rcx-0x3]
  411acd:	cmp    eax,0x2
  411ad0:	ja     0x411adc
  411ad2:	mov    BYTE PTR [rsp+0xc8],r10b
  411ada:	jmp    0x411aec
  411adc:	cmp    ecx,0x6
  411adf:	mov    BYTE PTR [rsp+0xc8],r13b
  411ae7:	mov    al,r13b
  411aea:	jne    0x411aef
  411aec:	mov    al,r10b
  411aef:	cmp    ecx,0xa
  411af2:	mov    BYTE PTR [rsp+0xc0],al
  411af9:	sete   r13b
  411afd:	xor    ebp,ebp
  411aff:	cmp    al,bpl
  411b02:	jne    0x411b09
  411b04:	cmp    r13b,bpl
  411b07:	je     0x411b15
  411b09:	cmp    BYTE PTR [rdi+0x7],bpl
  411b0d:	movzx  r15d,r15b
  411b11:	cmovne r15d,ebp
  411b15:	cmp    BYTE PTR [rdx+0x390],bpl
  411b1c:	je     0x411b40
  411b1e:	mov    ecx,DWORD PTR [rdx+0x394]
  411b24:	dec    ecx
  411b26:	je     0x411b37
  411b28:	dec    ecx
  411b2a:	je     0x411b30
  411b2c:	mov    eax,ebp
  411b2e:	jmp    0x411b3a
  411b30:	mov    eax,0x2
  411b35:	jmp    0x411b3a
  411b37:	mov    eax,r10d
  411b3a:	mov    DWORD PTR [rdi+0x1c0],eax
  411b40:	cmp    r15b,bpl
  411b43:	je     0x411bb9
  411b45:	cmp    DWORD PTR [rsp+0x4c],r10d
  411b4a:	ja     0x411b72
  411b4c:	lea    rdx,[rip+0x3ce8d]        # 0x44e9e0
  411b53:	lea    rcx,[rsp+0x50]
  411b58:	xor    r8d,r8d
  411b5b:	call   0x40ecd0
  411b60:	lea    rdx,[rip+0x55611]        # 0x467178
  411b67:	lea    rcx,[rsp+0x50]
  411b6c:	call   0x44b71e
  411b71:	int3   
  411b72:	mov    rdx,QWORD PTR [rsi+0x10]
  411b76:	lea    rcx,[rdi+0x38]
  411b7a:	mov    rdx,QWORD PTR [rdx+0x8]
  411b7e:	call   0x4032f8
  411b83:	cmp    DWORD PTR [rdi+0x40],ebp
  411b86:	mov    r10d,0x2
  411b8c:	mov    DWORD PTR [rsp+0x48],r10d
  411b91:	jne    0x411bb9
  411b93:	lea    rdx,[rip+0x3ce26]        # 0x44e9c0
  411b9a:	lea    rcx,[rsp+0x50]
  411b9f:	xor    r8d,r8d
  411ba2:	call   0x40ecd0
  411ba7:	lea    rdx,[rip+0x555ca]        # 0x467178
  411bae:	lea    rcx,[rsp+0x50]
  411bb3:	call   0x44b71e
  411bb8:	int3   
  411bb9:	lea    rax,[rdi+0x240]
  411bc0:	neg    r13b
  411bc3:	lea    r9,[rsi+0x10]
  411bc7:	sbb    rcx,rcx
  411bca:	lea    r8,[rdi+0x10]
  411bce:	mov    edx,r10d
  411bd1:	and    rcx,rax
  411bd4:	mov    eax,DWORD PTR [rsp+0x40]
  411bd8:	mov    DWORD PTR [rsp+0x38],eax
  411bdc:	mov    al,BYTE PTR [rsp+0xb0]
  411be3:	mov    BYTE PTR [rsp+0x30],al
  411be7:	mov    eax,DWORD PTR [rsp+0x44]
  411beb:	mov    BYTE PTR [rsp+0x28],al
  411bef:	mov    DWORD PTR [rsp+0x20],ebx
  411bf3:	call   0x410394
  411bf8:	mov    rax,QWORD PTR [rsi+0x8]
  411bfc:	xor    ebx,ebx
  411bfe:	mov    cl,BYTE PTR [rax+0xf0]
  411c04:	mov    BYTE PTR [rdi+0xa],cl
  411c07:	mov    rax,QWORD PTR [rsi+0x8]
  411c0b:	mov    cl,BYTE PTR [rax+0x4b0]
  411c11:	cmp    cl,bl
  411c13:	mov    BYTE PTR [rdi+0x48],cl
  411c16:	je     0x411c2f
  411c18:	mov    rax,QWORD PTR [rsi+0x8]
  411c1c:	lea    rcx,[rdi+0x50]
  411c20:	mov    rdx,QWORD PTR [rax+0x4b8]
  411c27:	mov    rdx,QWORD PTR [rdx]
  411c2a:	call   0x4032f8
  411c2f:	mov    rax,QWORD PTR [rsi+0x8]
  411c33:	mov    cl,BYTE PTR [rax+0x108]
  411c39:	mov    BYTE PTR [rdi+0xb],cl
  411c3c:	mov    rax,QWORD PTR [rsi+0x8]
  411c40:	cmp    BYTE PTR [rax+0x138],bl
  411c46:	je     0x411c5e
  411c48:	mov    rdx,QWORD PTR [rax+0x140]
  411c4f:	lea    rcx,[rdi+0x278]
  411c56:	mov    rdx,QWORD PTR [rdx]
  411c59:	call   0x4032f8
  411c5e:	mov    rdx,QWORD PTR [rsi+0x8]
  411c62:	lea    rcx,[rdi+0x288]
  411c69:	add    rdx,0x158
  411c70:	call   0x404df0
  411c75:	lea    rdx,[rdi+0xb0]
  411c7c:	mov    rcx,rsi
  411c7f:	call   0x410e14
  411c84:	mov    r11,QWORD PTR [rsi+0x8]
  411c88:	cmp    BYTE PTR [r11+0x420],bl
  411c8f:	je     0x411c9f
  411c91:	mov    BYTE PTR [rdi+0xf0],0x1
  411c98:	mov    BYTE PTR [rdi+0xf1],0x1
  411c9f:	mov    rax,QWORD PTR [rsi+0x8]
  411ca3:	mov    cl,BYTE PTR [rax+0x438]
  411ca9:	cmp    cl,bl
  411cab:	mov    BYTE PTR [rdi+0xf3],cl
  411cb1:	je     0x411cc6
  411cb3:	mov    rax,QWORD PTR [rsi+0x8]
  411cb7:	cmp    BYTE PTR [rax+0x439],bl
  411cbd:	sete   al
  411cc0:	mov    BYTE PTR [rdi+0xf2],al
  411cc6:	mov    rax,QWORD PTR [rsi+0x8]
  411cca:	mov    cl,BYTE PTR [rax+0x3f0]
  411cd0:	cmp    cl,bl
  411cd2:	mov    BYTE PTR [rdi+0xf5],cl
  411cd8:	je     0x411ced
  411cda:	mov    rax,QWORD PTR [rsi+0x8]
  411cde:	cmp    BYTE PTR [rax+0x3f1],bl
  411ce4:	sete   al
  411ce7:	mov    BYTE PTR [rdi+0xf4],al
  411ced:	mov    rax,QWORD PTR [rsi+0x8]
  411cf1:	mov    cl,BYTE PTR [rax+0x408]
  411cf7:	cmp    cl,bl
  411cf9:	mov    BYTE PTR [rdi+0xf7],cl
  411cff:	je     0x411d14
  411d01:	mov    rax,QWORD PTR [rsi+0x8]
  411d05:	cmp    BYTE PTR [rax+0x409],bl
  411d0b:	sete   al
  411d0e:	mov    BYTE PTR [rdi+0xf6],al
  411d14:	cmp    BYTE PTR [rsp+0xc0],bl
  411d1b:	je     0x411fe9
  411d21:	movzx  eax,WORD PTR [rdi+0xf0]
  411d28:	xor    r13d,r13d
  411d2b:	mov    WORD PTR [rdi+0xe0],ax
  411d32:	movzx  eax,WORD PTR [rdi+0xf2]
  411d39:	mov    WORD PTR [rdi+0xe6],ax
  411d40:	cmp    BYTE PTR [rdi+0xf3],r13b
  411d47:	jne    0x411d50
  411d49:	mov    BYTE PTR [rdi+0xe6],0x1
  411d50:	movzx  eax,WORD PTR [rdi+0xf4]
  411d57:	mov    WORD PTR [rdi+0xe4],ax
  411d5e:	cmp    BYTE PTR [rdi+0xf5],r13b
  411d65:	jne    0x411d6e
  411d67:	mov    BYTE PTR [rdi+0xe4],0x1
  411d6e:	movzx  eax,WORD PTR [rdi+0xf6]
  411d75:	mov    WORD PTR [rdi+0xe2],ax
  411d7c:	cmp    BYTE PTR [rdi+0xf7],r13b
  411d83:	jne    0x411d8c
  411d85:	mov    BYTE PTR [rdi+0xe2],0x1
  411d8c:	mov    rax,QWORD PTR [rsi+0x8]
  411d90:	mov    edx,0x2
  411d95:	mov    cl,BYTE PTR [rax+0x450]
  411d9b:	mov    BYTE PTR [rdi+0xe8],cl
  411da1:	mov    rax,QWORD PTR [rsi+0x8]
  411da5:	mov    cl,BYTE PTR [rax+0x468]
  411dab:	mov    BYTE PTR [rdi+0xe9],cl
  411db1:	lea    rcx,[rdi+0x10]
  411db5:	call   0x406678
  411dba:	lea    rcx,[rdi+0x10]
  411dbe:	call   0x406608
  411dc3:	cmp    DWORD PTR [rdi+0x18],0x1
  411dc7:	jne    0x411dd6
  411dc9:	mov    rax,QWORD PTR [rdi+0x10]
  411dcd:	mov    rcx,QWORD PTR [rax]
  411dd0:	cmp    DWORD PTR [rcx+0x8],r13d
  411dd4:	je     0x411dfc
  411dd6:	lea    rdx,[rip+0x3cbb3]        # 0x44e990
  411ddd:	lea    rcx,[rsp+0x50]
  411de2:	xor    r8d,r8d
  411de5:	call   0x40ecd0
  411dea:	lea    rdx,[rip+0x55387]        # 0x467178
  411df1:	lea    rcx,[rsp+0x50]
  411df6:	call   0x44b71e
  411dfb:	int3   
  411dfc:	mov    rdx,QWORD PTR [rsi+0x8]
  411e00:	mov    r12d,DWORD PTR [rsp+0x40]
  411e05:	mov    ebp,DWORD PTR [rsp+0x44]
  411e09:	cmp    BYTE PTR [rdx+0x1e0],r13b
  411e10:	je     0x411e38
  411e12:	lea    rcx,[rdi+0x80]
  411e19:	add    rdx,0x1e8
  411e20:	mov    r9d,0x2
  411e26:	mov    r8b,0x1
  411e29:	mov    DWORD PTR [rsp+0x28],r12d
  411e2e:	mov    BYTE PTR [rsp+0x20],bpl
  411e33:	call   0x41055c
  411e38:	mov    rdx,QWORD PTR [rsi+0x8]
  411e3c:	cmp    BYTE PTR [rdx+0x1f8],r13b
  411e43:	je     0x411e6b
  411e45:	lea    rcx,[rdi+0x80]
  411e4c:	add    rdx,0x200
  411e53:	mov    r9d,0x2
  411e59:	xor    r8d,r8d
  411e5c:	mov    DWORD PTR [rsp+0x28],r12d
  411e61:	mov    BYTE PTR [rsp+0x20],bpl
  411e66:	call   0x41055c
  411e6b:	cmp    r15b,r13b
  411e6e:	je     0x411e8a
  411e70:	lea    r8,[rdi+0x38]
  411e74:	lea    rcx,[rdi+0x80]
  411e7b:	xor    r9d,r9d
  411e7e:	mov    dl,0x1
  411e80:	mov    BYTE PTR [rsp+0x20],bpl
  411e85:	call   0x4053fc
  411e8a:	lea    rcx,[rdi+0x80]
  411e91:	xor    edx,edx
  411e93:	call   0x406678
  411e98:	lea    rcx,[rdi+0x80]
  411e9f:	call   0x4112bc
  411ea4:	lea    rcx,[rdi+0x80]
  411eab:	call   0x406608
  411eb0:	cmp    BYTE PTR [rdi+0x7],r13b
  411eb4:	je     0x411ed0
  411eb6:	mov    rax,QWORD PTR [rsi+0x8]
  411eba:	lea    rcx,[rdi+0xa0]
  411ec1:	mov    rdx,QWORD PTR [rax+0x2d8]
  411ec8:	mov    rdx,QWORD PTR [rdx]
  411ecb:	call   0x4032f8
  411ed0:	cmp    BYTE PTR [rsp+0xc8],r13b
  411ed8:	je     0x411f98
  411ede:	cmp    BYTE PTR [rdi+0x8],r13b
  411ee2:	je     0x411f26
  411ee4:	mov    eax,DWORD PTR [rdi+0x2a0]
  411eea:	cmp    eax,0x1
  411eed:	je     0x411f00
  411eef:	cmp    BYTE PTR [rdi+0x5],r13b
  411ef3:	je     0x411f26
  411ef5:	cmp    BYTE PTR [rdi+0x6],r13b
  411ef9:	je     0x411f26
  411efb:	cmp    eax,r13d
  411efe:	je     0x411f26
  411f00:	mov    rdx,QWORD PTR [rip+0x56201]        # 0x468108
  411f07:	lea    rcx,[rsp+0x50]
  411f0c:	xor    r8d,r8d
  411f0f:	call   0x40ecd0
  411f14:	lea    rdx,[rip+0x5525d]        # 0x467178
  411f1b:	lea    rcx,[rsp+0x50]
  411f20:	call   0x44b71e
  411f25:	int3   
  411f26:	mov    rdx,QWORD PTR [rsi+0x8]
  411f2a:	cmp    BYTE PTR [rdx+0x180],r13b
  411f31:	je     0x411f55
  411f33:	mov    rdx,QWORD PTR [rdx+0x188]
  411f3a:	lea    rcx,[rdi+0xd0]
  411f41:	mov    rdx,QWORD PTR [rdx]
  411f44:	call   0x4032f8
  411f49:	lea    rcx,[rdi+0xd0]
  411f50:	call   0x409d6c
  411f55:	mov    DWORD PTR [rdi+0xc8],r13d
  411f5c:	mov    rax,QWORD PTR [rsi+0x8]
  411f60:	cmp    BYTE PTR [rax+0x120],r13b
  411f67:	je     0x411f81
  411f69:	mov    eax,DWORD PTR [rax+0x124]
  411f6f:	lea    rcx,[rip+0x3c33a]        # 0x44e2b0
  411f76:	mov    eax,DWORD PTR [rcx+rax*4]
  411f79:	mov    DWORD PTR [rdi+0xc8],eax
  411f7f:	jmp    0x411f91
  411f81:	cmp    BYTE PTR [rdi+0xa],r13b
  411f85:	je     0x411f98
  411f87:	mov    DWORD PTR [rdi+0xc8],0x1
  411f91:	mov    BYTE PTR [rdi+0xc3],0x1
  411f98:	cmp    DWORD PTR [rdi+0x30],0x3
  411f9c:	je     0x411fa9
  411f9e:	cmp    DWORD PTR [rdi+0x30],0x5
  411fa2:	mov    eax,0x2
  411fa7:	jne    0x411fac
  411fa9:	mov    eax,r13d
  411fac:	cmp    r14d,0x2
  411fb0:	mov    DWORD PTR [rdi+0xc4],eax
  411fb6:	jne    0x411fda
  411fb8:	mov    DWORD PTR [rdi+0xc4],0x3
  411fc2:	mov    BYTE PTR [rdi+0xc2],0x1
  411fc9:	add    rsp,0x68
  411fcd:	pop    r15
  411fcf:	pop    r14
  411fd1:	pop    r13
  411fd3:	pop    r12
  411fd5:	pop    rdi
  411fd6:	pop    rsi
  411fd7:	pop    rbp
  411fd8:	pop    rbx
  411fd9:	ret    
  411fda:	cmp    r14d,0x1
  411fde:	jne    0x411fc9
  411fe0:	mov    DWORD PTR [rdi+0xc4],r13d
  411fe7:	jmp    0x411fc2
  411fe9:	mov    ecx,DWORD PTR [rdi+0x30]
  411fec:	xor    r15d,r15d
  411fef:	cmp    ecx,r15d
  411ff2:	jl     0x41224a
  411ff8:	cmp    ecx,0x2
  411ffb:	jle    0x412006
  411ffd:	cmp    ecx,0xa
  412000:	jne    0x41224a
  412006:	mov    rax,QWORD PTR [rsi+0x8]
  41200a:	cmp    BYTE PTR [rax+0x1e0],r15b
  412011:	je     0x412039
  412013:	lea    rdx,[rip+0x3c946]        # 0x44e960
  41201a:	lea    rcx,[rsp+0x50]
  41201f:	xor    r8d,r8d
  412022:	call   0x40ecd0
  412027:	lea    rdx,[rip+0x5514a]        # 0x467178
  41202e:	lea    rcx,[rsp+0x50]
  412033:	call   0x44b71e
  412038:	int3   
  412039:	lea    r8,[rdi+0xf8]
  412040:	mov    rdx,rsi
  412043:	call   0x410b8c
  412048:	lea    rcx,[rdi+0x120]
  41204f:	lea    rdx,[rdi+0xb0]
  412056:	call   0x40f120
  41205b:	mov    r11,QWORD PTR [rsi+0x8]
  41205f:	cmp    BYTE PTR [r11+0x360],r15b
  412066:	je     0x41206f
  412068:	mov    BYTE PTR [rdi+0x1d8],0x1
  41206f:	mov    DWORD PTR [rdi+0x218],r14d
  412076:	movzx  eax,WORD PTR [rdi+0xf2]
  41207d:	mov    WORD PTR [rdi+0x232],ax
  412084:	movzx  eax,WORD PTR [rdi+0xf0]
  41208b:	mov    WORD PTR [rdi+0x230],ax
  412092:	movzx  eax,WORD PTR [rdi+0xf4]
  412099:	mov    WORD PTR [rdi+0x234],ax
  4120a0:	movzx  eax,WORD PTR [rdi+0xf6]
  4120a7:	mov    WORD PTR [rdi+0x236],ax
  4120ae:	mov    rax,QWORD PTR [rsi+0x8]
  4120b2:	mov    cl,BYTE PTR [rax+0x2a0]
  4120b8:	cmp    cl,r15b
  4120bb:	mov    BYTE PTR [rdi+0x1f1],cl
  4120c1:	je     0x412108
  4120c3:	mov    rax,QWORD PTR [rsi+0x8]
  4120c7:	lea    rcx,[rdi+0x1f8]
  4120ce:	mov    rdx,QWORD PTR [rax+0x2a8]
  4120d5:	mov    rdx,QWORD PTR [rdx]
  4120d8:	call   0x4032f8
  4120dd:	cmp    DWORD PTR [rdi+0x200],r15d
  4120e4:	jbe    0x412108
  4120e6:	mov    rax,QWORD PTR [rdi+0x1f8]
  4120ed:	cmp    WORD PTR [rax],0x2e
  4120f1:	jne    0x412108
  4120f3:	lea    rcx,[rdi+0x1f8]
  4120fa:	xor    edx,edx
  4120fc:	mov    BYTE PTR [rdi+0x1f2],0x1
  412103:	call   0x403750
  412108:	mov    al,BYTE PTR [rdi+0x8]
  41210b:	mov    BYTE PTR [rdi+0x1f0],al
  412111:	mov    al,BYTE PTR [rdi+0x7]
  412114:	mov    BYTE PTR [rdi+0x1d9],al
  41211a:	mov    rax,QWORD PTR [rsi+0x8]
  41211e:	mov    cl,BYTE PTR [rax+0x480]
  412124:	mov    BYTE PTR [rdi+0x238],cl
  41212a:	mov    rax,QWORD PTR [rsi+0x8]
  41212e:	mov    cl,BYTE PTR [rax+0x498]
  412134:	mov    al,BYTE PTR [rdi+0x1f0]
  41213a:	cmp    al,r15b
  41213d:	mov    BYTE PTR [rdi+0x239],cl
  412143:	je     0x4121ea
  412149:	cmp    BYTE PTR [rdi+0x1f1],r15b
  412150:	je     0x412178
  412152:	lea    rdx,[rip+0x3c7d7]        # 0x44e930
  412159:	lea    rcx,[rsp+0x50]
  41215e:	xor    r8d,r8d
  412161:	call   0x40ecd0
  412166:	lea    rdx,[rip+0x5500b]        # 0x467178
  41216d:	lea    rcx,[rsp+0x50]
  412172:	call   0x44b71e
  412177:	int3   
  412178:	cmp    al,r15b
  41217b:	je     0x4121ea
  41217d:	cmp    BYTE PTR [rdi+0x5],r15b
  412181:	je     0x4121a9
  412183:	mov    rdx,QWORD PTR [rip+0x55f76]        # 0x468100
  41218a:	lea    rcx,[rsp+0x50]
  41218f:	xor    r8d,r8d
  412192:	call   0x40ecd0
  412197:	lea    rdx,[rip+0x54fda]        # 0x467178
  41219e:	lea    rcx,[rsp+0x50]
  4121a3:	call   0x44b71e
  4121a8:	int3   
  4121a9:	cmp    DWORD PTR [rdi+0x2a0],0x1
  4121b0:	je     0x4121c4
  4121b2:	cmp    DWORD PTR [rdi+0x298],0x1
  4121b9:	je     0x4121c4
  4121bb:	cmp    DWORD PTR [rdi+0x29c],0x1
  4121c2:	jne    0x4121ea
  4121c4:	mov    rdx,QWORD PTR [rip+0x55f3d]        # 0x468108
  4121cb:	lea    rcx,[rsp+0x50]
  4121d0:	xor    r8d,r8d
  4121d3:	call   0x40ecd0
  4121d8:	lea    rdx,[rip+0x54f99]        # 0x467178
  4121df:	lea    rcx,[rsp+0x50]
  4121e4:	call   0x44b71e
  4121e9:	int3   
  4121ea:	cmp    BYTE PTR [rdi+0x1d9],r15b
  4121f1:	je     0x41220d
  4121f3:	mov    rax,QWORD PTR [rsi+0x8]
  4121f7:	lea    rcx,[rdi+0x1e0]
  4121fe:	mov    rdx,QWORD PTR [rax+0x2d8]
  412205:	mov    rdx,QWORD PTR [rdx]
  412208:	call   0x4032f8
  41220d:	cmp    DWORD PTR [rdi+0x30],0xa
  412211:	jne    0x411fc9
  412217:	cmp    DWORD PTR [rdi+0x138],0x1
  41221e:	je     0x411fc9
  412224:	lea    rdx,[rip+0x3c6cd]        # 0x44e8f8
  41222b:	lea    rcx,[rsp+0x50]
  412230:	xor    r8d,r8d
  412233:	call   0x40ecd0
  412238:	lea    rdx,[rip+0x54f39]        # 0x467178
  41223f:	lea    rcx,[rsp+0x50]
  412244:	call   0x44b71e
  412249:	int3   
  41224a:	cmp    ecx,0x7
  41224d:	jne    0x4122d8
  412253:	mov    eax,DWORD PTR [rsp+0x48]
  412257:	mov    DWORD PTR [rdi+0x2a8],0x1
  412261:	cmp    eax,DWORD PTR [rsp+0x4c]
  412265:	jae    0x411fc9
  41226b:	mov    rbx,rax
  41226e:	mov    rax,QWORD PTR [rsi+0x10]
  412272:	mov    rcx,QWORD PTR [rax+rbx*8]
  412276:	mov    rcx,QWORD PTR [rcx]
  412279:	cmp    WORD PTR [rcx],r15w
  41227d:	je     0x4122aa
  41227f:	lea    rdx,[rsp+0xb0]
  412287:	call   0x403e48
  41228c:	mov    DWORD PTR [rdi+0x2a8],eax
  412292:	mov    rax,QWORD PTR [rsp+0xb0]
  41229a:	cmp    WORD PTR [rax],r15w
  41229e:	sete   al
  4122a1:	cmp    al,r15b
  4122a4:	jne    0x411fc9
  4122aa:	mov    rax,QWORD PTR [rsi+0x10]
  4122ae:	lea    rdx,[rip+0x3c613]        # 0x44e8c8
  4122b5:	lea    rcx,[rsp+0x50]
  4122ba:	mov    r8,QWORD PTR [rax+rbx*8]
  4122be:	mov    r8,QWORD PTR [r8]
  4122c1:	call   0x40ecd0
  4122c6:	lea    rdx,[rip+0x54eab]        # 0x467178
  4122cd:	lea    rcx,[rsp+0x50]
  4122d2:	call   0x44b71e
  4122d7:	int3   
  4122d8:	cmp    ecx,0x9
  4122db:	jne    0x412337
  4122dd:	lea    rcx,[rdi+0x10]
  4122e1:	mov    edx,r14d
  4122e4:	call   0x406678
  4122e9:	lea    rcx,[rdi+0x10]
  4122ed:	call   0x406608
  4122f2:	lea    rdx,[rdi+0x68]
  4122f6:	lea    rcx,[rdi+0x260]
  4122fd:	mov    DWORD PTR [rdi+0x274],r14d
  412304:	call   0x404df0
  412309:	mov    r11,QWORD PTR [rsi+0x8]
  41230d:	cmp    BYTE PTR [r11+0x360],r15b
  412314:	je     0x41231d
  412316:	mov    BYTE PTR [rdi+0x270],0x1
  41231d:	mov    al,BYTE PTR [rdi+0x7]
  412320:	mov    BYTE PTR [rdi+0x271],al
  412326:	mov    al,BYTE PTR [rdi+0xf2]
  41232c:	mov    BYTE PTR [rdi+0x272],al
  412332:	jmp    0x411fc9
  412337:	cmp    ecx,0x8
  41233a:	je     0x411fc9
  412340:	lea    rdx,[rip+0x54d89]        # 0x4670d0
  412347:	lea    rcx,[rsp+0xb0]
  41234f:	mov    DWORD PTR [rsp+0xb0],0x1337a87
  41235a:	call   0x44b71e
  41235f:	int3   
  412360:	rex.W push rbx
  412362:	push   rbp
  412363:	push   rsi
  412364:	push   rdi
  412365:	push   r12
  412367:	sub    rsp,0x40
  41236b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  412374:	mov    rsi,r9
  412377:	mov    rbx,r8
  41237a:	mov    r12d,edx
  41237d:	mov    rbp,rcx
  412380:	mov    QWORD PTR [r8+0x8],0x0
  412388:	mov    QWORD PTR [r8],0xffffffffffffffff
  41238f:	mov    BYTE PTR [r9],0x0
  412393:	mov    WORD PTR [rsp+0x28],0x0
  41239a:	mov    WORD PTR [rsp+0x2a],0x0
  4123a1:	mov    QWORD PTR [rsp+0x30],0x0
  4123aa:	mov    rax,QWORD PTR [rcx]
  4123ad:	lea    r9,[rsp+0x28]
  4123b2:	mov    r8d,0x5b
  4123b8:	call   QWORD PTR [rax+0x30]
  4123bb:	mov    edi,eax
  4123bd:	test   eax,eax
  4123bf:	je     0x4123c3
  4123c1:	jmp    0x412425
  4123c3:	movzx  ecx,WORD PTR [rsp+0x28]
  4123c8:	test   ecx,ecx
  4123ca:	je     0x412423
  4123cc:	sub    ecx,0x11
  4123cf:	je     0x412418
  4123d1:	dec    ecx
  4123d3:	je     0x41240d
  4123d5:	dec    ecx
  4123d7:	je     0x412403
  4123d9:	cmp    ecx,0x2
  4123dc:	je     0x4123f8
  4123de:	mov    DWORD PTR [rsp+0x70],0x24e9f
  4123e6:	lea    rdx,[rip+0x54ce3]        # 0x4670d0
  4123ed:	lea    rcx,[rsp+0x70]
  4123f2:	call   0x44b71e
  4123f7:	int3   
  4123f8:	mov    rax,QWORD PTR [rsp+0x30]
  4123fd:	mov    QWORD PTR [rbx+0x8],rax
  412401:	jmp    0x412436
  412403:	mov    eax,DWORD PTR [rsp+0x30]
  412407:	mov    QWORD PTR [rbx+0x8],rax
  41240b:	jmp    0x412436
  41240d:	movzx  eax,WORD PTR [rsp+0x30]
  412412:	mov    QWORD PTR [rbx+0x8],rax
  412416:	jmp    0x412436
  412418:	movzx  eax,BYTE PTR [rsp+0x30]
  41241d:	mov    QWORD PTR [rbx+0x8],rax
  412421:	jmp    0x412436
  412423:	xor    edi,edi
  412425:	lea    rcx,[rsp+0x28]
  41242a:	call   0x40b028
  41242f:	mov    eax,edi
  412431:	jmp    0x4124ec
  412436:	lea    rcx,[rsp+0x28]
  41243b:	call   0x40b028
  412440:	mov    WORD PTR [rsp+0x28],0x0
  412447:	mov    WORD PTR [rsp+0x2a],0x0
  41244e:	mov    QWORD PTR [rsp+0x30],0x0
  412457:	mov    rax,QWORD PTR [rbp+0x0]
  41245b:	lea    r9,[rsp+0x28]
  412460:	mov    r8d,0x5c
  412466:	mov    edx,r12d
  412469:	mov    rcx,rbp
  41246c:	call   QWORD PTR [rax+0x30]
  41246f:	mov    edi,eax
  412471:	test   eax,eax
  412473:	je     0x412483
  412475:	lea    rcx,[rsp+0x28]
  41247a:	call   0x40b028
  41247f:	mov    eax,edi
  412481:	jmp    0x4124ec
  412483:	movzx  ecx,WORD PTR [rsp+0x28]
  412488:	test   ecx,ecx
  41248a:	je     0x4124dd
  41248c:	sub    ecx,0x11
  41248f:	je     0x4124d5
  412491:	dec    ecx
  412493:	je     0x4124cb
  412495:	dec    ecx
  412497:	je     0x4124c2
  412499:	cmp    ecx,0x2
  41249c:	je     0x4124b8
  41249e:	mov    DWORD PTR [rsp+0x70],0x24e9f
  4124a6:	lea    rdx,[rip+0x54c23]        # 0x4670d0
  4124ad:	lea    rcx,[rsp+0x70]
  4124b2:	call   0x44b71e
  4124b7:	int3   
  4124b8:	mov    rax,QWORD PTR [rsp+0x30]
  4124bd:	mov    QWORD PTR [rbx],rax
  4124c0:	jmp    0x4124dd
  4124c2:	mov    eax,DWORD PTR [rsp+0x30]
  4124c6:	mov    QWORD PTR [rbx],rax
  4124c9:	jmp    0x4124dd
  4124cb:	movzx  eax,WORD PTR [rsp+0x30]
  4124d0:	mov    QWORD PTR [rbx],rax
  4124d3:	jmp    0x4124dd
  4124d5:	movzx  eax,BYTE PTR [rsp+0x30]
  4124da:	mov    QWORD PTR [rbx],rax
  4124dd:	lea    rcx,[rsp+0x28]
  4124e2:	call   0x40b028
  4124e7:	mov    BYTE PTR [rsi],0x1
  4124ea:	xor    eax,eax
  4124ec:	add    rsp,0x40
  4124f0:	pop    r12
  4124f2:	pop    rdi
  4124f3:	pop    rsi
  4124f4:	pop    rbp
  4124f5:	pop    rbx
  4124f6:	ret    
  4124f7:	int3   
  4124f8:	int3   
  4124f9:	int3   
  4124fa:	int3   
  4124fb:	int3   
  4124fc:	int3   
  4124fd:	int3   
  4124fe:	int3   
  4124ff:	int3   
  412500:	rex.W push rbp
  412502:	sub    rsp,0x20
  412506:	mov    rbp,rdx
  412509:	lea    rcx,[rbp+0x28]
  41250d:	call   0x40b830
  412512:	add    rsp,0x20
  412516:	pop    rbp
  412517:	ret    
  412518:	int3   
  412519:	int3   
  41251a:	int3   
  41251b:	int3   
  41251c:	int3   
  41251d:	int3   
  41251e:	int3   
  41251f:	int3   
  412520:	rex.W push rbp
  412522:	sub    rsp,0x20
  412526:	mov    rbp,rdx
  412529:	lea    rcx,[rbp+0x28]
  41252d:	call   0x40b830
  412532:	add    rsp,0x20
  412536:	pop    rbp
  412537:	ret    
  412538:	rex.W push rbx
  41253a:	sub    rsp,0x20
  41253e:	mov    rbx,rcx
  412541:	mov    DWORD PTR [rsp+0x30],0x0
  412549:	call   0x403208
  41254e:	mov    ecx,DWORD PTR [rbx+0x8]
  412551:	test   ecx,ecx
  412553:	je     0x41258e
  412555:	mov    rdx,QWORD PTR [rbx]
  412558:	dec    ecx
  41255a:	cmp    WORD PTR [rdx+rcx*2],0x5c
  41255f:	je     0x412568
  412561:	cmp    WORD PTR [rdx+rcx*2],0x2f
  412566:	jne    0x412571
  412568:	mov    DWORD PTR [rbx+0x8],ecx
  41256b:	mov    WORD PTR [rdx+rcx*2],0x0
  412571:	mov    rcx,rbx
  412574:	call   0x40362c
  412579:	inc    eax
  41257b:	cmp    eax,DWORD PTR [rbx+0x8]
  41257e:	jae    0x41258e
  412580:	mov    DWORD PTR [rbx+0x8],eax
  412583:	mov    ecx,eax
  412585:	mov    rax,QWORD PTR [rbx]
  412588:	mov    WORD PTR [rax+rcx*2],0x0
  41258e:	mov    rax,rbx
  412591:	add    rsp,0x20
  412595:	pop    rbx
  412596:	ret    
  412597:	int3   
  412598:	mov    QWORD PTR [rsp+0x8],rcx
  41259d:	push   rbx
  41259e:	push   rsi
  41259f:	push   rdi
  4125a0:	sub    rsp,0x30
  4125a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4125ad:	mov    rdi,r8
  4125b0:	mov    rsi,rdx
  4125b3:	mov    rbx,rcx
  4125b6:	mov    DWORD PTR [rsp+0x60],0x0
  4125be:	call   0x403208
  4125c3:	mov    DWORD PTR [rsp+0x60],0x1
  4125cb:	cmp    DWORD PTR [rdi+0x8],0x0
  4125cf:	je     0x41260d
  4125d1:	mov    rax,QWORD PTR [rdi]
  4125d4:	cmp    WORD PTR [rax],0x3a
  4125d8:	jne    0x41260d
  4125da:	mov    eax,DWORD PTR [rsi+0x8]
  4125dd:	test   eax,eax
  4125df:	je     0x41260d
  4125e1:	mov    rcx,QWORD PTR [rsi]
  4125e4:	dec    eax
  4125e6:	cmp    WORD PTR [rcx+rax*2],0x5c
  4125eb:	je     0x4125f4
  4125ed:	cmp    WORD PTR [rcx+rax*2],0x2f
  4125f2:	jne    0x41260d
  4125f4:	call   0x40a014
  4125f9:	test   al,al
  4125fb:	jne    0x41260d
  4125fd:	add    DWORD PTR [rbx+0x8],0xffffffff
  412601:	mov    ecx,DWORD PTR [rbx+0x8]
  412604:	mov    rax,QWORD PTR [rbx]
  412607:	mov    WORD PTR [rax+rcx*2],0x0
  41260d:	mov    rdx,rdi
  412610:	mov    rcx,rbx
  412613:	call   0x403444
  412618:	mov    rax,rbx
  41261b:	add    rsp,0x30
  41261f:	pop    rdi
  412620:	pop    rsi
  412621:	pop    rbx
  412622:	ret    
  412623:	int3   
  412624:	int3   
  412625:	int3   
  412626:	int3   
  412627:	int3   
  412628:	rex.W push rbp
  41262a:	sub    rsp,0x20
  41262e:	mov    rbp,rdx
  412631:	mov    eax,DWORD PTR [rbp+0x60]
  412634:	and    eax,0x1
  412637:	test   eax,eax
  412639:	je     0x412648
  41263b:	and    DWORD PTR [rbp+0x60],0xfffffffe
  41263f:	mov    rcx,QWORD PTR [rbp+0x50]
  412643:	call   0x401000
  412648:	add    rsp,0x20
  41264c:	pop    rbp
  41264d:	ret    
  41264e:	int3   
  41264f:	int3   
  412650:	rex.W push rbx
  412652:	sub    rsp,0x20
  412656:	mov    rbx,rcx
  412659:	mov    rcx,QWORD PTR [rcx+0x18]
  41265d:	call   0x40215c
  412662:	mov    rcx,QWORD PTR [rbx+0x8]
  412666:	add    rsp,0x20
  41266a:	pop    rbx
  41266b:	jmp    0x40215c
  412670:	mov    DWORD PTR [rsp+0x18],r8d
  412675:	push   rbx
  412676:	push   rbp
  412677:	push   rsi
  412678:	push   rdi
  412679:	sub    rsp,0x28
  41267d:	mov    rbx,rcx
  412680:	mov    rcx,QWORD PTR [rcx+0x10]
  412684:	xor    esi,esi
  412686:	test   rcx,rcx
  412689:	mov    rdi,r9
  41268c:	mov    rbp,rdx
  41268f:	je     0x4126a3
  412691:	mov    rax,QWORD PTR [rcx]
  412694:	lea    r9,[rsp+0x60]
  412699:	call   QWORD PTR [rax+0x18]
  41269c:	mov    r8d,DWORD PTR [rsp+0x60]
  4126a1:	mov    esi,eax
  4126a3:	cmp    BYTE PTR [rbx+0x20],0x0
  4126a7:	je     0x4126bc
  4126a9:	mov    rcx,QWORD PTR [rbx+0x28]
  4126ad:	mov    rdx,rbp
  4126b0:	mov    r9,QWORD PTR [rcx]
  4126b3:	call   QWORD PTR [r9+0x8]
  4126b7:	mov    r8d,DWORD PTR [rsp+0x60]
  4126bc:	mov    eax,r8d
  4126bf:	add    QWORD PTR [rbx+0x18],rax
  4126c3:	test   rdi,rdi
  4126c6:	je     0x4126cb
  4126c8:	mov    DWORD PTR [rdi],r8d
  4126cb:	mov    eax,esi
  4126cd:	add    rsp,0x28
  4126d1:	pop    rdi
  4126d2:	pop    rsi
  4126d3:	pop    rbp
  4126d4:	pop    rbx
  4126d5:	ret    
  4126d6:	int3   
  4126d7:	int3   
  4126d8:	rex.W push rbx
  4126da:	push   rdi
  4126db:	sub    rsp,0x48
  4126df:	xor    edi,edi
  4126e1:	mov    QWORD PTR [rsp+0x60],rdi
  4126e6:	call   QWORD PTR [rip+0x3aa44]        # 0x44d130
  4126ec:	mov    rcx,QWORD PTR [rsp+0x60]
  4126f1:	cmp    rcx,rdi
  4126f4:	mov    rbx,rax
  4126f7:	je     0x41270f
  4126f9:	call   QWORD PTR [rip+0x3aae1]        # 0x44d1e0
  4126ff:	mov    rcx,QWORD PTR [rsp+0x60]
  412704:	cmp    eax,edi
  412706:	cmovne rcx,rdi
  41270a:	mov    QWORD PTR [rsp+0x60],rcx
  41270f:	lea    r8,[rsp+0x60]
  412714:	mov    edx,0x28
  412719:	mov    rcx,rbx
  41271c:	call   QWORD PTR [rip+0x3a8de]        # 0x44d000
  412722:	cmp    eax,edi
  412724:	je     0x412771
  412726:	lea    r8,[rsp+0x34]
  41272b:	lea    rdx,[rip+0x3c49e]        # 0x44ebd0
  412732:	xor    ecx,ecx
  412734:	mov    DWORD PTR [rsp+0x30],0x1
  41273c:	mov    DWORD PTR [rsp+0x3c],0x2
  412744:	call   QWORD PTR [rip+0x3a8e6]        # 0x44d030
  41274a:	cmp    eax,edi
  41274c:	mov    rcx,QWORD PTR [rsp+0x60]
  412751:	je     0x412776
  412753:	lea    r8,[rsp+0x30]
  412758:	xor    r9d,r9d
  41275b:	xor    edx,edx
  41275d:	mov    QWORD PTR [rsp+0x28],rdi
  412762:	mov    QWORD PTR [rsp+0x20],rdi
  412767:	call   QWORD PTR [rip+0x3a8bb]        # 0x44d028
  41276d:	cmp    eax,edi
  41276f:	jne    0x412785
  412771:	mov    rcx,QWORD PTR [rsp+0x60]
  412776:	cmp    rcx,rdi
  412779:	je     0x412781
  41277b:	call   QWORD PTR [rip+0x3aa5f]        # 0x44d1e0
  412781:	xor    al,al
  412783:	jmp    0x4127a2
  412785:	call   QWORD PTR [rip+0x3aa15]        # 0x44d1a0
  41278b:	mov    rcx,QWORD PTR [rsp+0x60]
  412790:	cmp    eax,edi
  412792:	sete   bl
  412795:	cmp    rcx,rdi
  412798:	je     0x4127a0
  41279a:	call   QWORD PTR [rip+0x3aa40]        # 0x44d1e0
  4127a0:	mov    al,bl
  4127a2:	add    rsp,0x48
  4127a6:	pop    rdi
  4127a7:	pop    rbx
  4127a8:	ret    
  4127a9:	int3   
  4127aa:	int3   
  4127ab:	int3   
  4127ac:	mov    rax,QWORD PTR [rdx]
  4127af:	cmp    QWORD PTR [rcx],rax
  4127b2:	jae    0x4127ba
  4127b4:	mov    eax,0xffffffff
  4127b9:	ret    
  4127ba:	jbe    0x4127c2
  4127bc:	mov    eax,0x1
  4127c1:	ret    
  4127c2:	mov    rcx,QWORD PTR [rcx+0x8]
  4127c6:	cmp    rcx,QWORD PTR [rdx+0x8]
  4127ca:	sbb    eax,eax
  4127cc:	xor    r8d,r8d
  4127cf:	and    eax,0xfffffffe
  4127d2:	inc    eax
  4127d4:	cmp    rcx,QWORD PTR [rdx+0x8]
  4127d8:	cmove  eax,r8d
  4127dc:	ret    
  4127dd:	int3   
  4127de:	int3   
  4127df:	int3   
  4127e0:	sub    rsp,0x38
  4127e4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4127ed:	mov    QWORD PTR [rcx+0x1b0],rdx
  4127f4:	mov    BYTE PTR [rcx+0x1b8],0x1
  4127fb:	cmp    BYTE PTR [rcx+0x19a],0x0
  412802:	jne    0x412815
  412804:	mov    rcx,QWORD PTR [rcx+0x48]
  412808:	test   rcx,rcx
  41280b:	je     0x412815
  41280d:	mov    rax,QWORD PTR [rcx]
  412810:	call   QWORD PTR [rax+0x18]
  412813:	jmp    0x41281e
  412815:	xor    eax,eax
  412817:	jmp    0x41281e
  412819:	mov    eax,0x8007000e
  41281e:	add    rsp,0x38
  412822:	ret    
  412823:	int3   
  412824:	int3   
  412825:	int3   
  412826:	int3   
  412827:	int3   
  412828:	int3   
  412829:	int3   
  41282a:	int3   
  41282b:	int3   
  41282c:	int3   
  41282d:	int3   
  41282e:	int3   
  41282f:	int3   
  412830:	mov    QWORD PTR [rsp+0x10],rdx
  412835:	push   rbp
  412836:	sub    rsp,0x20
  41283a:	mov    rbp,rdx
  41283d:	lea    rax,[rip+0xffffffffffffffd5]        # 0x412819
  412844:	jmp    0x412846
  412846:	add    rsp,0x20
  41284a:	pop    rbp
  41284b:	ret    
  41284c:	int3   
  41284d:	int3   
  41284e:	int3   
  41284f:	int3   
  412850:	sub    rsp,0x48
  412854:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  41285d:	xor    r11d,r11d
  412860:	cmp    QWORD PTR [rcx+0x48],r11
  412864:	jne    0x41286d
  412866:	xor    eax,eax
  412868:	jmp    0x412929
  41286d:	cmp    BYTE PTR [rcx+0x19a],r11b
  412874:	je     0x412918
  41287a:	mov    rax,QWORD PTR [rcx+0x1e8]
  412881:	mov    r9,QWORD PTR [rax+0x30]
  412885:	mov    QWORD PTR [rsp+0x50],r9
  41288a:	cmp    rdx,r11
  41288d:	je     0x412913
  412893:	cmp    BYTE PTR [rcx+0x1b8],r11b
  41289a:	je     0x412913
  41289c:	mov    rax,QWORD PTR [rdx]
  41289f:	mov    QWORD PTR [rsp+0x30],rax
  4128a4:	mov    r8,QWORD PTR [rcx+0x1b0]
  4128ab:	mov    QWORD PTR [rsp+0x20],r8
  4128b0:	mov    rdx,QWORD PTR [rcx+0x1a8]
  4128b7:	mov    QWORD PTR [rsp+0x28],rdx
  4128bc:	mov    r10d,0x80000000
  4128c2:	cmp    rdx,r10
  4128c5:	jbe    0x4128d9
  4128c7:	shr    rdx,1
  4128ca:	mov    QWORD PTR [rsp+0x28],rdx
  4128cf:	shr    r8,1
  4128d2:	mov    QWORD PTR [rsp+0x20],r8
  4128d7:	jmp    0x4128c2
  4128d9:	cmp    rax,r10
  4128dc:	jbe    0x4128f0
  4128de:	shr    rax,1
  4128e1:	mov    QWORD PTR [rsp+0x30],rax
  4128e6:	shr    r8,1
  4128e9:	mov    QWORD PTR [rsp+0x20],r8
  4128ee:	jmp    0x4128d9
  4128f0:	mov    r10d,0x1
  4128f6:	cmp    r8,r11
  4128f9:	cmove  r8,r10
  4128fd:	mov    QWORD PTR [rsp+0x20],r8
  412902:	imul   rax,rdx
  412906:	xor    edx,edx
  412908:	div    r8
  41290b:	add    r9,rax
  41290e:	mov    QWORD PTR [rsp+0x50],r9
  412913:	lea    rdx,[rsp+0x50]
  412918:	mov    rcx,QWORD PTR [rcx+0x48]
  41291c:	mov    rax,QWORD PTR [rcx]
  41291f:	call   QWORD PTR [rax+0x20]
  412922:	jmp    0x412929
  412924:	mov    eax,0x8007000e
  412929:	add    rsp,0x48
  41292d:	ret    
  41292e:	int3   
  41292f:	int3   
  412930:	mov    QWORD PTR [rsp+0x10],rdx
  412935:	push   rbp
  412936:	sub    rsp,0x20
  41293a:	mov    rbp,rdx
  41293d:	lea    rax,[rip+0xffffffffffffffe0]        # 0x412924
  412944:	jmp    0x412946
  412946:	add    rsp,0x20
  41294a:	pop    rbp
  41294b:	ret    
  41294c:	int3   
  41294d:	int3   
  41294e:	int3   
  41294f:	int3   
  412950:	sub    rsp,0x38
  412954:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41295d:	mov    rcx,QWORD PTR [rcx+0x188]
  412964:	mov    rax,QWORD PTR [rcx]
  412967:	call   QWORD PTR [rax+0x18]
  41296a:	jmp    0x412971
  41296c:	mov    eax,0x8007000e
  412971:	add    rsp,0x38
  412975:	ret    
  412976:	int3   
  412977:	int3   
  412978:	int3   
  412979:	int3   
  41297a:	int3   
  41297b:	int3   
  41297c:	int3   
  41297d:	int3   
  41297e:	int3   
  41297f:	int3   
  412980:	mov    QWORD PTR [rsp+0x10],rdx
  412985:	push   rbp
  412986:	sub    rsp,0x20
  41298a:	mov    rbp,rdx
  41298d:	lea    rax,[rip+0xffffffffffffffd8]        # 0x41296c
  412994:	jmp    0x412996
  412996:	add    rsp,0x20
  41299a:	pop    rbp
  41299b:	ret    
  41299c:	int3   
  41299d:	int3   
  41299e:	int3   
  41299f:	int3   
  4129a0:	rex.W push rbx
  4129a2:	push   rsi
  4129a3:	push   rdi
  4129a4:	sub    rsp,0x40
  4129a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4129b1:	mov    rdi,r9
  4129b4:	mov    rsi,QWORD PTR [rsp+0x80]
  4129bc:	mov    BYTE PTR [rsi],0x0
  4129bf:	mov    WORD PTR [rsp+0x28],0x0
  4129c6:	mov    WORD PTR [rsp+0x2a],0x0
  4129cd:	mov    QWORD PTR [rsp+0x30],0x0
  4129d6:	mov    rax,QWORD PTR [rcx+0x28]
  4129da:	mov    rcx,QWORD PTR [rax]
  4129dd:	mov    rax,QWORD PTR [rcx]
  4129e0:	lea    r9,[rsp+0x28]
  4129e5:	call   QWORD PTR [rax+0x30]
  4129e8:	mov    ebx,eax
  4129ea:	test   eax,eax
  4129ec:	je     0x4129f0
  4129ee:	jmp    0x412a25
  4129f0:	movzx  eax,WORD PTR [rsp+0x28]
  4129f5:	cmp    ax,0x40
  4129f9:	jne    0x412a17
  4129fb:	mov    rax,QWORD PTR [rsp+0x30]
  412a00:	mov    QWORD PTR [rdi],rax
  412a03:	cmp    DWORD PTR [rdi+0x4],0x0
  412a07:	jne    0x412a0e
  412a09:	cmp    eax,0x0
  412a0c:	je     0x412a13
  412a0e:	mov    eax,0x1
  412a13:	mov    BYTE PTR [rsi],al
  412a15:	jmp    0x412a23
  412a17:	test   ax,ax
  412a1a:	je     0x412a23
  412a1c:	mov    ebx,0x80004005
  412a21:	jmp    0x412a25
  412a23:	xor    ebx,ebx
  412a25:	lea    rcx,[rsp+0x28]
  412a2a:	call   0x40b028
  412a2f:	mov    eax,ebx
  412a31:	add    rsp,0x40
  412a35:	pop    rdi
  412a36:	pop    rsi
  412a37:	pop    rbx
  412a38:	ret    
  412a39:	int3   
  412a3a:	int3   
  412a3b:	int3   
  412a3c:	int3   
  412a3d:	int3   
  412a3e:	int3   
  412a3f:	int3   
  412a40:	rex.W push rbp
  412a42:	sub    rsp,0x20
  412a46:	mov    rbp,rdx
  412a49:	lea    rcx,[rbp+0x28]
  412a4d:	call   0x40b830
  412a52:	add    rsp,0x20
  412a56:	pop    rbp
  412a57:	ret    
  412a58:	rex.W push rbx
  412a5a:	push   rsi
  412a5b:	push   rdi
  412a5c:	sub    rsp,0x40
  412a60:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  412a69:	mov    rdi,r8
  412a6c:	mov    rbx,rdx
  412a6f:	mov    rsi,rcx
  412a72:	lea    rcx,[rsp+0x28]
  412a77:	call   0x403150
  412a7c:	nop
  412a7d:	mov    rdx,rbx
  412a80:	lea    rcx,[rsp+0x28]
  412a85:	call   0x403560
  412a8a:	lea    rdx,[rip+0x3c117]        # 0x44eba8
  412a91:	lea    rcx,[rsp+0x28]
  412a96:	call   0x403560
  412a9b:	mov    rdx,rdi
  412a9e:	lea    rcx,[rsp+0x28]
  412aa3:	call   0x403444
  412aa8:	mov    rcx,QWORD PTR [rsi+0x48]
  412aac:	mov    rax,QWORD PTR [rcx]
  412aaf:	mov    rdx,QWORD PTR [rsp+0x28]
  412ab4:	call   QWORD PTR [rax+0x38]
  412ab7:	mov    ebx,eax
  412ab9:	mov    rcx,QWORD PTR [rsp+0x28]
  412abe:	call   0x40215c
  412ac3:	mov    eax,ebx
  412ac5:	add    rsp,0x40
  412ac9:	pop    rdi
  412aca:	pop    rsi
  412acb:	pop    rbx
  412acc:	ret    
  412acd:	int3   
  412ace:	int3   
  412acf:	int3   
  412ad0:	int3   
  412ad1:	int3   
  412ad2:	int3   
  412ad3:	int3   
  412ad4:	int3   
  412ad5:	int3   
  412ad6:	int3   
  412ad7:	int3   
  412ad8:	rex.W push rbp
  412ada:	sub    rsp,0x20
  412ade:	mov    rbp,rdx
  412ae1:	lea    rcx,[rbp+0x28]
  412ae5:	call   0x401000
  412aea:	add    rsp,0x20
  412aee:	pop    rbp
  412aef:	ret    
  412af0:	rex.W push rbx
  412af2:	push   rbp
  412af3:	push   rsi
  412af4:	push   rdi
  412af5:	sub    rsp,0x58
  412af9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  412b02:	mov    rsi,r8
  412b05:	mov    rbx,rdx
  412b08:	mov    rbp,rcx
  412b0b:	call   QWORD PTR [rip+0x3a68f]        # 0x44d1a0
  412b11:	mov    edi,eax
  412b13:	lea    rcx,[rsp+0x28]
  412b18:	call   0x403150
  412b1d:	nop
  412b1e:	mov    rdx,rbx
  412b21:	lea    rcx,[rsp+0x28]
  412b26:	call   0x403560
  412b2b:	test   edi,edi
  412b2d:	je     0x412b65
  412b2f:	lea    rdx,[rip+0x3c072]        # 0x44eba8
  412b36:	lea    rcx,[rsp+0x28]
  412b3b:	call   0x403560
  412b40:	mov    edx,edi
  412b42:	lea    rcx,[rsp+0x38]
  412b47:	call   0x4068d0
  412b4c:	nop
  412b4d:	mov    rdx,rax
  412b50:	lea    rcx,[rsp+0x28]
  412b55:	call   0x403444
  412b5a:	nop
  412b5b:	mov    rcx,QWORD PTR [rsp+0x38]
  412b60:	call   0x40215c
  412b65:	lea    rdx,[rip+0x3c03c]        # 0x44eba8
  412b6c:	lea    rcx,[rsp+0x28]
  412b71:	call   0x403560
  412b76:	mov    rdx,rsi
  412b79:	lea    rcx,[rsp+0x28]
  412b7e:	call   0x403444
  412b83:	mov    rcx,QWORD PTR [rbp+0x48]
  412b87:	mov    rax,QWORD PTR [rcx]
  412b8a:	mov    rdx,QWORD PTR [rsp+0x28]
  412b8f:	call   QWORD PTR [rax+0x38]
  412b92:	mov    ebx,eax
  412b94:	mov    rcx,QWORD PTR [rsp+0x28]
  412b99:	call   0x40215c
  412b9e:	mov    eax,ebx
  412ba0:	add    rsp,0x58
  412ba4:	pop    rdi
  412ba5:	pop    rsi
  412ba6:	pop    rbp
  412ba7:	pop    rbx
  412ba8:	ret    
  412ba9:	int3   
  412baa:	int3   
  412bab:	int3   
  412bac:	int3   
  412bad:	int3   
  412bae:	int3   
  412baf:	int3   
  412bb0:	rex.W push rbp
  412bb2:	sub    rsp,0x20
  412bb6:	mov    rbp,rdx
  412bb9:	lea    rcx,[rbp+0x28]
  412bbd:	call   0x401000
  412bc2:	add    rsp,0x20
  412bc6:	pop    rbp
  412bc7:	ret    
  412bc8:	int3   
  412bc9:	int3   
  412bca:	int3   
  412bcb:	int3   
  412bcc:	int3   
  412bcd:	int3   
  412bce:	int3   
  412bcf:	int3   
  412bd0:	rex.W push rbp
  412bd2:	sub    rsp,0x20
  412bd6:	mov    rbp,rdx
  412bd9:	lea    rcx,[rbp+0x38]
  412bdd:	call   0x401000
  412be2:	add    rsp,0x20
  412be6:	pop    rbp
  412be7:	ret    
  412be8:	rex.W push rbx
  412bea:	push   rbp
  412beb:	push   rsi
  412bec:	push   rdi
  412bed:	sub    rsp,0x48
  412bf1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  412bfa:	mov    rsi,r9
  412bfd:	mov    rdi,r8
  412c00:	mov    rbx,rdx
  412c03:	mov    rbp,rcx
  412c06:	lea    rcx,[rsp+0x28]
  412c0b:	call   0x403150
  412c10:	nop
  412c11:	mov    rdx,rbx
  412c14:	lea    rcx,[rsp+0x28]
  412c19:	call   0x403560
  412c1e:	lea    rdx,[rip+0x3bf83]        # 0x44eba8
  412c25:	lea    rcx,[rsp+0x28]
  412c2a:	call   0x403560
  412c2f:	mov    rdx,rdi
  412c32:	lea    rcx,[rsp+0x28]
  412c37:	call   0x403444
  412c3c:	lea    rdx,[rip+0x3bf65]        # 0x44eba8
  412c43:	lea    rcx,[rsp+0x28]
  412c48:	call   0x403560
  412c4d:	mov    rdx,rsi
  412c50:	lea    rcx,[rsp+0x28]
  412c55:	call   0x403444
  412c5a:	mov    rcx,QWORD PTR [rbp+0x48]
  412c5e:	mov    rax,QWORD PTR [rcx]
  412c61:	mov    rdx,QWORD PTR [rsp+0x28]
  412c66:	call   QWORD PTR [rax+0x38]
  412c69:	mov    ebx,eax
  412c6b:	mov    rcx,QWORD PTR [rsp+0x28]
  412c70:	call   0x40215c
  412c75:	mov    eax,ebx
  412c77:	add    rsp,0x48
  412c7b:	pop    rdi
  412c7c:	pop    rsi
  412c7d:	pop    rbp
  412c7e:	pop    rbx
  412c7f:	ret    
  412c80:	int3   
  412c81:	int3   
  412c82:	int3   
  412c83:	int3   
  412c84:	int3   
  412c85:	int3   
  412c86:	int3   
  412c87:	int3   
  412c88:	rex.W push rbp
  412c8a:	sub    rsp,0x20
  412c8e:	mov    rbp,rdx
  412c91:	lea    rcx,[rbp+0x28]
  412c95:	call   0x401000
  412c9a:	add    rsp,0x20
  412c9e:	pop    rbp
  412c9f:	ret    
  412ca0:	mov    rax,QWORD PTR [rcx+0x10]
  412ca4:	mov    r10,rcx
  412ca7:	mov    r9,r8
  412caa:	mov    rcx,QWORD PTR [rax]
  412cad:	mov    r8d,edx
  412cb0:	mov    edx,DWORD PTR [r10+0x18]
  412cb4:	mov    rax,QWORD PTR [rcx]
  412cb7:	rex.W jmp QWORD PTR [rax+0x30]
  412cbb:	int3   
  412cbc:	rex.W push rbx
  412cbe:	push   rsi
  412cbf:	push   rdi
  412cc0:	sub    rsp,0x20
  412cc4:	mov    rsi,rdx
  412cc7:	mov    rdi,r8
  412cca:	mov    rbx,rcx
  412ccd:	mov    QWORD PTR [r8],0x0
  412cd4:	lea    rdx,[rip+0x42115]        # 0x454df0
  412cdb:	mov    rcx,rsi
  412cde:	mov    r8d,0x10
  412ce4:	call   0x44b786
  412ce9:	test   eax,eax
  412ceb:	je     0x412d06
  412ced:	lea    rdx,[rip+0x40fa4]        # 0x453c98
  412cf4:	mov    r8d,0x10
  412cfa:	mov    rcx,rsi
  412cfd:	call   0x44b786
  412d02:	test   eax,eax
  412d04:	jne    0x412d10
  412d06:	mov    QWORD PTR [rdi],rbx
  412d09:	inc    DWORD PTR [rbx+0x8]
  412d0c:	xor    eax,eax
  412d0e:	jmp    0x412d15
  412d10:	mov    eax,0x80004002
  412d15:	add    rsp,0x20
  412d19:	pop    rdi
  412d1a:	pop    rsi
  412d1b:	pop    rbx
  412d1c:	ret    
  412d1d:	int3   
  412d1e:	int3   
  412d1f:	int3   
  412d20:	sub    rsp,0x28
  412d24:	add    DWORD PTR [rcx+0x8],0xffffffff
  412d28:	mov    eax,DWORD PTR [rcx+0x8]
  412d2b:	jne    0x412d34
  412d2d:	call   0x40215c
  412d32:	xor    eax,eax
  412d34:	add    rsp,0x28
  412d38:	ret    
  412d39:	int3   
  412d3a:	int3   
  412d3b:	int3   
  412d3c:	rex.W push rbx
  412d3e:	sub    rsp,0x40
  412d42:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  412d4b:	mov    ebx,edx
  412d4d:	mov    rdx,rcx
  412d50:	mov    rcx,QWORD PTR [rcx+0x98]
  412d57:	xor    r8d,r8d
  412d5a:	cmp    rcx,r8
  412d5d:	je     0x412d69
  412d5f:	mov    rax,QWORD PTR [rcx]
  412d62:	mov    edx,ebx
  412d64:	call   QWORD PTR [rax+0x28]
  412d67:	jmp    0x412dcd
  412d69:	mov    BYTE PTR [rdx+0x119],r8b
  412d70:	cmp    ebx,r8d
  412d73:	jne    0x412d8c
  412d75:	cmp    BYTE PTR [rdx+0x199],r8b
  412d7c:	je     0x412d85
  412d7e:	mov    ebx,0x1
  412d83:	jmp    0x412d8c
  412d85:	mov    BYTE PTR [rdx+0x119],0x1
  412d8c:	mov    rcx,QWORD PTR [rdx+0x48]
  412d90:	cmp    BYTE PTR [rdx+0xf2],r8b
  412d97:	setne  r8b
  412d9b:	mov    r11,QWORD PTR [rcx]
  412d9e:	mov    al,BYTE PTR [rdx+0x118]
  412da4:	lea    r10,[rdx+0x110]
  412dab:	neg    al
  412dad:	sbb    r9,r9
  412db0:	and    r9,r10
  412db3:	mov    QWORD PTR [rsp+0x20],r9
  412db8:	mov    r9d,ebx
  412dbb:	mov    rdx,QWORD PTR [rdx+0xb0]
  412dc2:	call   QWORD PTR [r11+0x30]
  412dc6:	jmp    0x412dcd
  412dc8:	mov    eax,0x8007000e
  412dcd:	add    rsp,0x40
  412dd1:	pop    rbx
  412dd2:	ret    
  412dd3:	int3   
  412dd4:	int3   
  412dd5:	int3   
  412dd6:	int3   
  412dd7:	int3   
  412dd8:	int3   
  412dd9:	int3   
  412dda:	int3   
  412ddb:	int3   
  412ddc:	mov    QWORD PTR [rsp+0x10],rdx
  412de1:	push   rbp
  412de2:	sub    rsp,0x30
  412de6:	mov    rbp,rdx
  412de9:	lea    rax,[rip+0xffffffffffffffd8]        # 0x412dc8
  412df0:	jmp    0x412df2
  412df2:	add    rsp,0x30
  412df6:	pop    rbp
  412df7:	ret    
  412df8:	int3   
  412df9:	int3   
  412dfa:	int3   
  412dfb:	int3   
  412dfc:	rex.W push rbx
  412dfe:	push   rsi
  412dff:	push   rdi
  412e00:	push   r12
  412e02:	sub    rsp,0x48
  412e06:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  412e0f:	mov    r12d,edx
  412e12:	mov    rbx,rcx
  412e15:	mov    rcx,QWORD PTR [rcx+0x98]
  412e1c:	xor    edi,edi
  412e1e:	cmp    rcx,rdi
  412e21:	je     0x412e3c
  412e23:	cmp    BYTE PTR [rbx+0x11d],dil
  412e2a:	setne  dil
  412e2e:	mov    rax,QWORD PTR [rcx]
  412e31:	mov    r8d,edi
  412e34:	call   QWORD PTR [rax+0x30]
  412e37:	jmp    0x413103
  412e3c:	cmp    BYTE PTR [rbx+0x178],dil
  412e43:	je     0x412e9d
  412e45:	mov    rax,QWORD PTR [rbx+0x168]
  412e4c:	mov    rcx,QWORD PTR [rax+0x28]
  412e50:	mov    rax,QWORD PTR [rcx]
  412e53:	lea    r9,[rbx+0xb0]
  412e5a:	mov    r8b,BYTE PTR [rbx+0xf0]
  412e61:	mov    dl,BYTE PTR [rbx+0xf2]
  412e67:	call   QWORD PTR [rax+0x18]
  412e6a:	mov    rsi,QWORD PTR [rbx+0x168]
  412e71:	mov    rax,QWORD PTR [rsi+0x18]
  412e75:	mov    QWORD PTR [rbx+0x148],rax
  412e7c:	mov    BYTE PTR [rbx+0x150],0x1
  412e83:	mov    rcx,QWORD PTR [rsi+0x10]
  412e87:	cmp    rcx,rdi
  412e8a:	je     0x412e96
  412e8c:	mov    rax,QWORD PTR [rcx]
  412e8f:	call   QWORD PTR [rax+0x10]
  412e92:	mov    QWORD PTR [rsi+0x10],rdi
  412e96:	mov    BYTE PTR [rbx+0x178],dil
  412e9d:	cmp    QWORD PTR [rbx+0x160],rdi
  412ea4:	je     0x412f69
  412eaa:	cmp    BYTE PTR [rbx+0x11c],dil
  412eb1:	je     0x412ec5
  412eb3:	cmp    BYTE PTR [rbx+0x13e],dil
  412eba:	je     0x412ec5
  412ebc:	lea    r9,[rbx+0x130]
  412ec3:	jmp    0x412ede
  412ec5:	mov    rax,QWORD PTR [rbx+0x28]
  412ec9:	cmp    BYTE PTR [rax+0xd0],dil
  412ed0:	je     0x412edb
  412ed2:	lea    r9,[rax+0xc8]
  412ed9:	jmp    0x412ede
  412edb:	mov    r9,rdi
  412ede:	cmp    BYTE PTR [rbx+0x11b],dil
  412ee5:	je     0x412ef9
  412ee7:	cmp    BYTE PTR [rbx+0x13d],dil
  412eee:	je     0x412ef9
  412ef0:	lea    r8,[rbx+0x128]
  412ef7:	jmp    0x412efc
  412ef9:	mov    r8,rdi
  412efc:	cmp    BYTE PTR [rbx+0x11a],dil
  412f03:	je     0x412f17
  412f05:	cmp    BYTE PTR [rbx+0x13c],dil
  412f0c:	je     0x412f17
  412f0e:	lea    rdx,[rbx+0x120]
  412f15:	jmp    0x412f1a
  412f17:	mov    rdx,rdi
  412f1a:	mov    rcx,QWORD PTR [rbx+0x158]
  412f21:	add    rcx,0x10
  412f25:	call   0x408e40
  412f2a:	mov    rcx,QWORD PTR [rbx+0x158]
  412f31:	mov    rax,QWORD PTR [rcx+0x28]
  412f35:	mov    QWORD PTR [rbx+0x148],rax
  412f3c:	mov    BYTE PTR [rbx+0x150],0x1
  412f43:	call   0x40cb18
  412f48:	cmp    eax,edi
  412f4a:	jne    0x413103
  412f50:	mov    rcx,QWORD PTR [rbx+0x160]
  412f57:	cmp    rcx,rdi
  412f5a:	je     0x412f69
  412f5c:	mov    rax,QWORD PTR [rcx]
  412f5f:	call   QWORD PTR [rax+0x10]
  412f62:	mov    QWORD PTR [rbx+0x160],rdi
  412f69:	cmp    BYTE PTR [rbx+0x198],dil
  412f70:	jne    0x41302d
  412f76:	cmp    BYTE PTR [rbx+0x119],dil
  412f7d:	je     0x41302d
  412f83:	cmp    BYTE PTR [rbx+0x30],dil
  412f87:	je     0x41302d
  412f8d:	mov    rcx,QWORD PTR [rbx+0x28]
  412f91:	cmp    QWORD PTR [rcx+0x10],rdi
  412f95:	je     0x41302d
  412f9b:	mov    rcx,QWORD PTR [rcx+0x10]
  412f9f:	mov    rax,QWORD PTR [rcx]
  412fa2:	lea    rdx,[rsp+0x80]
  412faa:	mov    QWORD PTR [rsp+0x28],rdx
  412faf:	lea    rdx,[rsp+0x70]
  412fb4:	mov    QWORD PTR [rsp+0x20],rdx
  412fb9:	lea    r9,[rsp+0x88]
  412fc1:	mov    r8d,0x3e
  412fc7:	mov    edx,DWORD PTR [rbx+0x140]
  412fcd:	call   QWORD PTR [rax+0x20]
  412fd0:	mov    edx,DWORD PTR [rsp+0x70]
  412fd4:	cmp    edx,edi
  412fd6:	je     0x41302d
  412fd8:	cmp    DWORD PTR [rsp+0x80],0x1
  412fe0:	je     0x412fec
  412fe2:	mov    eax,0x80004005
  412fe7:	jmp    0x413103
  412fec:	mov    rcx,QWORD PTR [rsp+0x88]
  412ff4:	call   0x433b74
  412ff9:	cmp    al,dil
  412ffc:	je     0x41302d
  412ffe:	mov    edx,0x7
  413003:	mov    DWORD PTR [rsp+0x30],edx
  413007:	lea    eax,[rdx+0x8]
  41300a:	cmp    BYTE PTR [rbx+0x1e0],dil
  413011:	cmovne edx,eax
  413014:	mov    DWORD PTR [rsp+0x30],edx
  413018:	mov    r8,QWORD PTR [rsp+0x88]
  413020:	mov    rcx,QWORD PTR [rbx+0x100]
  413027:	call   QWORD PTR [rip+0x39fe3]        # 0x44d010
  41302d:	cmp    BYTE PTR [rbx+0x150],dil
  413034:	jne    0x413053
  413036:	lea    r8,[rbx+0x148]
  41303d:	lea    r9,[rbx+0x150]
  413044:	mov    edx,DWORD PTR [rbx+0x140]
  41304a:	mov    rcx,QWORD PTR [rbx+0x28]
  41304e:	call   0x42aad0
  413053:	cmp    BYTE PTR [rbx+0x150],dil
  41305a:	je     0x413083
  41305c:	cmp    BYTE PTR [rbx+0xf0],dil
  413063:	je     0x413075
  413065:	mov    rax,QWORD PTR [rbx+0x148]
  41306c:	add    QWORD PTR [rbx+0x210],rax
  413073:	jmp    0x413083
  413075:	mov    rax,QWORD PTR [rbx+0x148]
  41307c:	add    QWORD PTR [rbx+0x208],rax
  413083:	cmp    BYTE PTR [rbx+0xf2],dil
  41308a:	je     0x413095
  41308c:	inc    QWORD PTR [rbx+0x1f0]
  413093:	jmp    0x4130ae
  413095:	cmp    BYTE PTR [rbx+0xf0],dil
  41309c:	je     0x4130a7
  41309e:	inc    QWORD PTR [rbx+0x200]
  4130a5:	jmp    0x4130ae
  4130a7:	inc    QWORD PTR [rbx+0x1f8]
  4130ae:	cmp    BYTE PTR [rbx+0x198],dil
  4130b5:	jne    0x4130db
  4130b7:	cmp    BYTE PTR [rbx+0x119],dil
  4130be:	je     0x4130db
  4130c0:	cmp    BYTE PTR [rbx+0x13f],dil
  4130c7:	je     0x4130db
  4130c9:	mov    edx,DWORD PTR [rbx+0x138]
  4130cf:	mov    rcx,QWORD PTR [rbx+0x100]
  4130d6:	call   0x406b58
  4130db:	mov    rcx,QWORD PTR [rbx+0x48]
  4130df:	mov    r8d,edi
  4130e2:	cmp    BYTE PTR [rbx+0x11d],dil
  4130e9:	setne  r8b
  4130ed:	mov    rax,QWORD PTR [rcx]
  4130f0:	mov    edx,r12d
  4130f3:	call   QWORD PTR [rax+0x40]
  4130f6:	cmp    eax,edi
  4130f8:	jne    0x413103
  4130fa:	xor    eax,eax
  4130fc:	jmp    0x413103
  4130fe:	mov    eax,0x8007000e
  413103:	add    rsp,0x48
  413107:	pop    r12
  413109:	pop    rdi
  41310a:	pop    rsi
  41310b:	pop    rbx
  41310c:	ret    
  41310d:	int3   
  41310e:	int3   
  41310f:	int3   
  413110:	int3   
  413111:	int3   
  413112:	int3   
  413113:	int3   
  413114:	int3   
  413115:	int3   
  413116:	int3   
  413117:	int3   
  413118:	int3   
  413119:	int3   
  41311a:	int3   
  41311b:	int3   
  41311c:	mov    QWORD PTR [rsp+0x10],rdx
  413121:	push   rbp
  413122:	sub    rsp,0x30
  413126:	mov    rbp,rdx
  413129:	lea    rax,[rip+0xffffffffffffffce]        # 0x4130fe
  413130:	jmp    0x413132
  413132:	add    rsp,0x30
  413136:	pop    rbp
  413137:	ret    
  413138:	int3   
  413139:	int3   
  41313a:	int3   
  41313b:	int3   
  41313c:	rex.W push rbx
  41313e:	push   rdi
  41313f:	sub    rsp,0x38
  413143:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41314c:	mov    rdi,rdx
  41314f:	lea    rbx,[rcx+0x48]
  413153:	cmp    QWORD PTR [rbx],0x0
  413157:	jne    0x413170
  413159:	mov    rcx,QWORD PTR [rcx+0x38]
  41315d:	mov    rax,QWORD PTR [rcx]
  413160:	mov    r8,rbx
  413163:	lea    rdx,[rip+0x40c5e]        # 0x453dc8
  41316a:	call   QWORD PTR [rax]
  41316c:	test   eax,eax
  41316e:	jne    0x413183
  413170:	mov    rcx,QWORD PTR [rbx]
  413173:	mov    rax,QWORD PTR [rcx]
  413176:	mov    rdx,rdi
  413179:	call   QWORD PTR [rax+0x18]
  41317c:	jmp    0x413183
  41317e:	mov    eax,0x8007000e
  413183:	add    rsp,0x38
  413187:	pop    rdi
  413188:	pop    rbx
  413189:	ret    
  41318a:	int3   
  41318b:	int3   
  41318c:	mov    QWORD PTR [rsp+0x10],rdx
  413191:	push   rbp
  413192:	sub    rsp,0x20
  413196:	mov    rbp,rdx
  413199:	lea    rax,[rip+0xffffffffffffffde]        # 0x41317e
  4131a0:	jmp    0x4131a2
  4131a2:	add    rsp,0x20
  4131a6:	pop    rbp
  4131a7:	ret    
  4131a8:	int3   
  4131a9:	int3   
  4131aa:	int3   
  4131ab:	int3   
  4131ac:	mov    r8d,DWORD PTR [rcx]
  4131af:	cmp    r8d,DWORD PTR [rdx]
  4131b2:	sbb    eax,eax
  4131b4:	xor    r9d,r9d
  4131b7:	and    eax,0xfffffffe
  4131ba:	inc    eax
  4131bc:	cmp    r8d,DWORD PTR [rdx]
  4131bf:	cmove  eax,r9d
  4131c3:	neg    eax
  4131c5:	jne    0x4131db
  4131c7:	mov    ecx,DWORD PTR [rcx+0x4]
  4131ca:	cmp    ecx,DWORD PTR [rdx+0x4]
  4131cd:	sbb    eax,eax
  4131cf:	and    eax,0xfffffffe
  4131d2:	inc    eax
  4131d4:	cmp    ecx,DWORD PTR [rdx+0x4]
  4131d7:	cmove  eax,r9d
  4131db:	ret    
  4131dc:	rex.W push rbx
  4131de:	push   rbp
  4131df:	push   rsi
  4131e0:	push   rdi
  4131e1:	sub    rsp,0x28
  4131e5:	mov    rbx,rcx
  4131e8:	mov    ecx,DWORD PTR [rcx+0xc]
  4131eb:	mov    esi,edx
  4131ed:	cmp    DWORD PTR [rbx+0x8],ecx
  4131f0:	jne    0x413230
  4131f2:	mov    eax,ecx
  4131f4:	shr    eax,0x2
  4131f7:	lea    ebp,[rax+rcx*1+0x1]
  4131fb:	mov    ecx,ebp
  4131fd:	shl    rcx,0x2
  413201:	call   0x402130
  413206:	cmp    DWORD PTR [rbx+0x8],0x0
  41320a:	mov    rdi,rax
  41320d:	je     0x413222
  41320f:	mov    r8d,DWORD PTR [rbx+0x8]
  413213:	mov    rdx,QWORD PTR [rbx]
  413216:	mov    rcx,rax
  413219:	shl    r8,0x2
  41321d:	call   0x44b480
  413222:	mov    rcx,QWORD PTR [rbx]
  413225:	call   0x40215c
  41322a:	mov    QWORD PTR [rbx],rdi
  41322d:	mov    DWORD PTR [rbx+0xc],ebp
  413230:	mov    ecx,DWORD PTR [rbx+0x8]
  413233:	mov    rax,QWORD PTR [rbx]
  413236:	mov    DWORD PTR [rax+rcx*4],esi
  413239:	mov    eax,DWORD PTR [rbx+0x8]
  41323c:	lea    ecx,[rax+0x1]
  41323f:	mov    DWORD PTR [rbx+0x8],ecx
  413242:	add    rsp,0x28
  413246:	pop    rdi
  413247:	pop    rsi
  413248:	pop    rbp
  413249:	pop    rbx
  41324a:	ret    
  41324b:	int3   
  41324c:	rex.W push rbx
  41324e:	push   rbp
  41324f:	push   rsi
  413250:	push   rdi
  413251:	sub    rsp,0x28
  413255:	mov    rbx,rcx
  413258:	mov    ecx,DWORD PTR [rcx+0xc]
  41325b:	mov    rbp,rdx
  41325e:	cmp    DWORD PTR [rbx+0x8],ecx
  413261:	jne    0x4132a1
  413263:	mov    eax,ecx
  413265:	shr    eax,0x2
  413268:	lea    esi,[rax+rcx*1+0x1]
  41326c:	mov    ecx,esi
  41326e:	shl    rcx,0x4
  413272:	call   0x402130
  413277:	cmp    DWORD PTR [rbx+0x8],0x0
  41327b:	mov    rdi,rax
  41327e:	je     0x413293
  413280:	mov    r8d,DWORD PTR [rbx+0x8]
  413284:	mov    rdx,QWORD PTR [rbx]
  413287:	mov    rcx,rax
  41328a:	shl    r8,0x4
  41328e:	call   0x44b480
  413293:	mov    rcx,QWORD PTR [rbx]
  413296:	call   0x40215c
  41329b:	mov    QWORD PTR [rbx],rdi
  41329e:	mov    DWORD PTR [rbx+0xc],esi
  4132a1:	mov    ecx,DWORD PTR [rbx+0x8]
  4132a4:	mov    rax,QWORD PTR [rbx]
  4132a7:	movdqu xmm0,XMMWORD PTR [rbp+0x0]
  4132ac:	add    rcx,rcx
  4132af:	movdqu XMMWORD PTR [rax+rcx*8],xmm0
  4132b4:	mov    eax,DWORD PTR [rbx+0x8]
  4132b7:	lea    ecx,[rax+0x1]
  4132ba:	mov    DWORD PTR [rbx+0x8],ecx
  4132bd:	add    rsp,0x28
  4132c1:	pop    rdi
  4132c2:	pop    rsi
  4132c3:	pop    rbp
  4132c4:	pop    rbx
  4132c5:	ret    
  4132c6:	int3   
  4132c7:	int3   
  4132c8:	rex.W push rbx
  4132ca:	push   rdi
  4132cb:	sub    rsp,0x48
  4132cf:	mov    eax,edx
  4132d1:	movdqa XMMWORD PTR [rsp+0x30],xmm6
  4132d7:	mov    r11d,edx
  4132da:	add    rax,rax
  4132dd:	lea    r10d,[r11+r11*1]
  4132e1:	mov    edi,r8d
  4132e4:	cmp    r10d,r8d
  4132e7:	mov    rbx,rcx
  4132ea:	movdqu xmm6,XMMWORD PTR [rcx+rax*8]
  4132ef:	movdqu XMMWORD PTR [rsp+0x20],xmm6
  4132f5:	ja     0x413351
  4132f7:	cmp    r10d,r8d
  4132fa:	jae    0x41331f
  4132fc:	lea    r9d,[r10+0x1]
  413300:	mov    edx,r10d
  413303:	mov    ecx,r9d
  413306:	shl    rdx,0x4
  41330a:	shl    rcx,0x4
  41330e:	add    rdx,rbx
  413311:	add    rcx,rbx
  413314:	call   0x4127ac
  413319:	test   eax,eax
  41331b:	cmovg  r10d,r9d
  41331f:	mov    edx,r10d
  413322:	lea    rcx,[rsp+0x20]
  413327:	shl    rdx,0x4
  41332b:	add    rdx,rbx
  41332e:	call   0x4127ac
  413333:	test   eax,eax
  413335:	jns    0x413351
  413337:	movdqu xmm0,XMMWORD PTR [rdx]
  41333b:	mov    eax,r11d
  41333e:	mov    r11d,r10d
  413341:	add    rax,rax
  413344:	add    r10d,r10d
  413347:	cmp    r10d,edi
  41334a:	movdqu XMMWORD PTR [rbx+rax*8],xmm0
  41334f:	jbe    0x4132fa
  413351:	mov    eax,r11d
  413354:	add    rax,rax
  413357:	movdqu XMMWORD PTR [rbx+rax*8],xmm6
  41335c:	movdqa xmm6,XMMWORD PTR [rsp+0x30]
  413362:	add    rsp,0x48
  413366:	pop    rdi
  413367:	pop    rbx
  413368:	ret    
  413369:	int3   
  41336a:	int3   
  41336b:	int3   
  41336c:	rex.W push rbx
  41336e:	push   rbp
  41336f:	push   rsi
  413370:	push   rdi
  413371:	sub    rsp,0x28
  413375:	mov    edi,edx
  413377:	mov    ebp,r8d
  41337a:	mov    rsi,rcx
  41337d:	mov    r10,QWORD PTR [rcx+rdi*8]
  413381:	lea    ebx,[rdi+rdi*1]
  413384:	cmp    ebx,r8d
  413387:	mov    QWORD PTR [rsp+0x50],r10
  41338c:	ja     0x4133cd
  41338e:	cmp    ebx,r8d
  413391:	jae    0x4133aa
  413393:	lea    r11d,[rbx+0x1]
  413397:	lea    rdx,[rsi+rbx*8]
  41339b:	lea    rcx,[rsi+r11*8]
  41339f:	call   0x4131ac
  4133a4:	test   eax,eax
  4133a6:	cmovg  ebx,r11d
  4133aa:	lea    rdx,[rsi+rbx*8]
  4133ae:	lea    rcx,[rsp+0x50]
  4133b3:	call   0x4131ac
  4133b8:	test   eax,eax
  4133ba:	jns    0x4133cd
  4133bc:	mov    rax,QWORD PTR [rdx]
  4133bf:	mov    ecx,edi
  4133c1:	mov    edi,ebx
  4133c3:	add    ebx,ebx
  4133c5:	mov    QWORD PTR [rsi+rcx*8],rax
  4133c9:	cmp    ebx,ebp
  4133cb:	jbe    0x413391
  4133cd:	mov    eax,edi
  4133cf:	mov    QWORD PTR [rsi+rax*8],r10
  4133d3:	add    rsp,0x28
  4133d7:	pop    rdi
  4133d8:	pop    rsi
  4133d9:	pop    rbp
  4133da:	pop    rbx
  4133db:	ret    
  4133dc:	rex.W push rbx
  4133de:	sub    rsp,0x20
  4133e2:	test   dl,0x1
  4133e5:	lea    rax,[rip+0x3b96c]        # 0x44ed58
  4133ec:	mov    rbx,rcx
  4133ef:	mov    QWORD PTR [rcx],rax
  4133f2:	je     0x4133f9
  4133f4:	call   0x40215c
  4133f9:	mov    rax,rbx
  4133fc:	add    rsp,0x20
  413400:	pop    rbx
  413401:	ret    
  413402:	int3   
  413403:	int3   
  413404:	rex.W push rbx
  413406:	push   rbp
  413407:	push   rsi
  413408:	push   rdi
  413409:	sub    rsp,0x28
  41340d:	mov    rbx,rcx
  413410:	mov    rcx,QWORD PTR [rcx+0x30]
  413414:	call   0x40215c
  413419:	mov    rcx,QWORD PTR [rbx+0x20]
  41341d:	call   0x40215c
  413422:	movsxd rdi,DWORD PTR [rbx+0x18]
  413426:	test   edi,edi
  413428:	mov    rsi,rdi
  41342b:	je     0x41345a
  41342d:	shl    rsi,0x3
  413431:	mov    rax,QWORD PTR [rbx+0x10]
  413435:	sub    rsi,0x8
  413439:	add    edi,0xffffffff
  41343c:	mov    rbp,QWORD PTR [rsi+rax*1]
  413440:	test   rbp,rbp
  413443:	je     0x413456
  413445:	mov    rcx,QWORD PTR [rbp+0x0]
  413449:	call   0x40215c
  41344e:	mov    rcx,rbp
  413451:	call   0x40215c
  413456:	test   edi,edi
  413458:	jne    0x413431
  41345a:	mov    rcx,QWORD PTR [rbx+0x10]
  41345e:	call   0x40215c
  413463:	mov    rcx,QWORD PTR [rbx]
  413466:	add    rsp,0x28
  41346a:	pop    rdi
  41346b:	pop    rsi
  41346c:	pop    rbp
  41346d:	pop    rbx
  41346e:	jmp    0x40215c
  413473:	int3   
  413474:	rex.W push rbx
  413476:	push   rbp
  413477:	push   rsi
  413478:	push   rdi
  413479:	sub    rsp,0x28
  41347d:	movsxd rdi,DWORD PTR [rcx+0x18]
  413481:	mov    rbx,rcx
  413484:	test   edi,edi
  413486:	mov    rsi,rdi
  413489:	je     0x4134b8
  41348b:	shl    rsi,0x3
  41348f:	mov    rax,QWORD PTR [rbx+0x10]
  413493:	sub    rsi,0x8
  413497:	add    edi,0xffffffff
  41349a:	mov    rbp,QWORD PTR [rsi+rax*1]
  41349e:	test   rbp,rbp
  4134a1:	je     0x4134b4
  4134a3:	mov    rcx,QWORD PTR [rbp+0x0]
  4134a7:	call   0x40215c
  4134ac:	mov    rcx,rbp
  4134af:	call   0x40215c
  4134b4:	test   edi,edi
  4134b6:	jne    0x41348f
  4134b8:	mov    rcx,QWORD PTR [rbx+0x10]
  4134bc:	call   0x40215c
  4134c1:	mov    rcx,QWORD PTR [rbx]
  4134c4:	add    rsp,0x28
  4134c8:	pop    rdi
  4134c9:	pop    rsi
  4134ca:	pop    rbp
  4134cb:	pop    rbx
  4134cc:	jmp    0x40215c
  4134d1:	int3   
  4134d2:	int3   
  4134d3:	int3   
  4134d4:	rex.W push rbx
  4134d6:	push   rbp
  4134d7:	push   rsi
  4134d8:	push   rdi
  4134d9:	push   r12
  4134db:	push   r13
  4134dd:	push   r15
  4134df:	sub    rsp,0x20
  4134e3:	xor    dil,dil
  4134e6:	cmp    DWORD PTR [rdx+0x8],0x0
  4134ea:	mov    rbx,r8
  4134ed:	mov    rsi,rdx
  4134f0:	mov    r13,rcx
  4134f3:	mov    r15d,0x1
  4134f9:	je     0x41351e
  4134fb:	mov    rax,QWORD PTR [rdx]
  4134fe:	mov    rcx,QWORD PTR [rax]
  413501:	cmp    DWORD PTR [rcx+0x8],0x0
  413505:	jne    0x41350c
  413507:	mov    dil,r15b
  41350a:	jmp    0x41351e
  41350c:	mov    rcx,QWORD PTR [rcx]
  41350f:	call   0x409f74
  413514:	movzx  edi,dil
  413518:	test   al,al
  41351a:	cmovne edi,r15d
  41351e:	cmp    DWORD PTR [r13+0x90],0x3
  413526:	jne    0x41353e
  413528:	test   dil,dil
  41352b:	je     0x41353e
  41352d:	mov    rax,QWORD PTR [rbx]
  413530:	mov    DWORD PTR [rbx+0x8],0x0
  413537:	mov    WORD PTR [rax],0x0
  41353c:	jmp    0x41354a
  41353e:	lea    rdx,[r13+0x70]
  413542:	mov    rcx,rbx
  413545:	call   0x4032f8
  41354a:	xor    edi,edi
  41354c:	cmp    DWORD PTR [rsi+0x8],edi
  41354f:	jbe    0x4135c7
  413551:	xor    r12d,r12d
  413554:	test   edi,edi
  413556:	je     0x413580
  413558:	mov    eax,DWORD PTR [rbx+0x8]
  41355b:	cmp    DWORD PTR [rbx+0xc],eax
  41355e:	jne    0x413568
  413560:	mov    rcx,rbx
  413563:	call   0x402f2c
  413568:	mov    edx,DWORD PTR [rbx+0x8]
  41356b:	mov    rcx,QWORD PTR [rbx]
  41356e:	mov    WORD PTR [rcx+rdx*2],0x5c
  413574:	add    edx,r15d
  413577:	mov    WORD PTR [rcx+rdx*2],0x0
  41357d:	mov    DWORD PTR [rbx+0x8],edx
  413580:	mov    rax,QWORD PTR [rsi]
  413583:	mov    rcx,rbx
  413586:	mov    rbp,QWORD PTR [r12+rax*1]
  41358a:	mov    rdx,rbp
  41358d:	call   0x403444
  413592:	cmp    DWORD PTR [r13+0x90],0x3
  41359a:	jne    0x4135b3
  41359c:	test   edi,edi
  41359e:	jne    0x4135b3
  4135a0:	cmp    DWORD PTR [rbp+0x8],0x2
  4135a4:	jne    0x4135b3
  4135a6:	mov    rcx,QWORD PTR [rbp+0x0]
  4135aa:	call   0x409f74
  4135af:	test   al,al
  4135b1:	jne    0x4135bb
  4135b3:	mov    rcx,QWORD PTR [rbx]
  4135b6:	call   0x406f28
  4135bb:	add    edi,r15d
  4135be:	add    r12,0x8
  4135c2:	cmp    edi,DWORD PTR [rsi+0x8]
  4135c5:	jb     0x413554
  4135c7:	add    rsp,0x20
  4135cb:	pop    r15
  4135cd:	pop    r13
  4135cf:	pop    r12
  4135d1:	pop    rdi
  4135d2:	pop    rsi
  4135d3:	pop    rbp
  4135d4:	pop    rbx
  4135d5:	ret    
  4135d6:	int3   
  4135d7:	int3   
  4135d8:	rex.W push rbx
  4135da:	push   rbp
  4135db:	push   rsi
  4135dc:	push   rdi
  4135dd:	push   r12
  4135df:	push   r13
  4135e1:	push   r14
  4135e3:	sub    rsp,0x40
  4135e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4135f0:	mov    rdi,rcx
  4135f3:	mov    rcx,QWORD PTR [rcx]
  4135f6:	call   0x40a044
  4135fb:	xor    ebx,ebx
  4135fd:	cmp    al,bl
  4135ff:	je     0x413608
  413601:	xor    al,al
  413603:	jmp    0x413760
  413608:	mov    QWORD PTR [rsp+0x28],rbx
  41360d:	mov    DWORD PTR [rsp+0x30],ebx
  413611:	mov    DWORD PTR [rsp+0x34],ebx
  413615:	lea    rdx,[rsp+0x28]
  41361a:	mov    rcx,rdi
  41361d:	call   0x405010
  413622:	mov    esi,ebx
  413624:	mov    ebp,ebx
  413626:	mov    r14d,0xffffffff
  41362c:	mov    edi,DWORD PTR [rsp+0x30]
  413630:	cmp    edi,ebx
  413632:	jbe    0x413716
  413638:	mov    r12,rbx
  41363b:	mov    rax,QWORD PTR [rsp+0x28]
  413640:	mov    r13,QWORD PTR [r12+rax*1]
  413644:	cmp    DWORD PTR [r13+0x8],ebx
  413648:	jne    0x413650
  41364a:	cmp    ebp,ebx
  41364c:	je     0x41369f
  41364e:	jmp    0x413693
  413650:	lea    rdx,[rip+0x3a0a5]        # 0x44d6fc
  413657:	mov    rcx,QWORD PTR [r13+0x0]
  41365b:	call   QWORD PTR [rip+0x39ce7]        # 0x44d348
  413661:	cmp    eax,ebx
  413663:	je     0x41368f
  413665:	lea    rdx,[rip+0x3a2d4]        # 0x44d940
  41366c:	mov    rcx,QWORD PTR [r13+0x0]
  413670:	call   QWORD PTR [rip+0x39cd2]        # 0x44d348
  413676:	cmp    eax,ebx
  413678:	jne    0x413687
  41367a:	cmp    esi,ebx
  41367c:	je     0x4136da
  41367e:	add    esi,r14d
  413681:	mov    edi,DWORD PTR [rsp+0x30]
  413685:	jmp    0x413693
  413687:	inc    esi
  413689:	mov    edi,DWORD PTR [rsp+0x30]
  41368d:	jmp    0x413693
  41368f:	mov    edi,DWORD PTR [rsp+0x30]
  413693:	inc    ebp
  413695:	add    r12,0x8
  413699:	cmp    ebp,edi
  41369b:	jb     0x41363b
  41369d:	jmp    0x413716
  41369f:	movsxd rsi,edi
  4136a2:	cmp    edi,ebx
  4136a4:	je     0x413754
  4136aa:	shl    rsi,0x3
  4136ae:	add    edi,r14d
  4136b1:	sub    rsi,0x8
  4136b5:	mov    rax,QWORD PTR [rsp+0x28]
  4136ba:	mov    rbp,QWORD PTR [rsi+rax*1]
  4136be:	cmp    rbp,rbx
  4136c1:	je     0x4136d4
  4136c3:	mov    rcx,QWORD PTR [rbp+0x0]
  4136c7:	call   0x40215c
  4136cc:	mov    rcx,rbp
  4136cf:	call   0x40215c
  4136d4:	cmp    edi,ebx
  4136d6:	jne    0x4136ae
  4136d8:	jmp    0x413754
  4136da:	movsxd rdi,DWORD PTR [rsp+0x30]
  4136df:	mov    rsi,rdi
  4136e2:	cmp    edi,ebx
  4136e4:	je     0x413754
  4136e6:	shl    rsi,0x3
  4136ea:	add    edi,r14d
  4136ed:	sub    rsi,0x8
  4136f1:	mov    rax,QWORD PTR [rsp+0x28]
  4136f6:	mov    rbp,QWORD PTR [rsi+rax*1]
  4136fa:	cmp    rbp,rbx
  4136fd:	je     0x413710
  4136ff:	mov    rcx,QWORD PTR [rbp+0x0]
  413703:	call   0x40215c
  413708:	mov    rcx,rbp
  41370b:	call   0x40215c
  413710:	cmp    edi,ebx
  413712:	jne    0x4136ea
  413714:	jmp    0x413754
  413716:	cmp    esi,ebx
  413718:	seta   r12b
  41371c:	movsxd rsi,edi
  41371f:	cmp    edi,ebx
  413721:	je     0x413751
  413723:	shl    rsi,0x3
  413727:	add    edi,r14d
  41372a:	sub    rsi,0x8
  41372e:	mov    rax,QWORD PTR [rsp+0x28]
  413733:	mov    rbp,QWORD PTR [rsi+rax*1]
  413737:	cmp    rbp,rbx
  41373a:	je     0x41374d
  41373c:	mov    rcx,QWORD PTR [rbp+0x0]
  413740:	call   0x40215c
  413745:	mov    rcx,rbp
  413748:	call   0x40215c
  41374d:	cmp    edi,ebx
  41374f:	jne    0x413727
  413751:	mov    bl,r12b
  413754:	mov    rcx,QWORD PTR [rsp+0x28]
  413759:	call   0x40215c
  41375e:	mov    al,bl
  413760:	add    rsp,0x40
  413764:	pop    r14
  413766:	pop    r13
  413768:	pop    r12
  41376a:	pop    rdi
  41376b:	pop    rsi
  41376c:	pop    rbp
  41376d:	pop    rbx
  41376e:	ret    
  41376f:	int3   
  413770:	int3   
  413771:	int3   
  413772:	int3   
  413773:	int3   
  413774:	int3   
  413775:	int3   
  413776:	int3   
  413777:	int3   
  413778:	rex.W push rbp
  41377a:	sub    rsp,0x20
  41377e:	mov    rbp,rdx
  413781:	lea    rcx,[rbp+0x28]
  413785:	call   0x4047cc
  41378a:	add    rsp,0x20
  41378e:	pop    rbp
  41378f:	ret    
  413790:	rex.W push rbx
  413792:	push   rdi
  413793:	sub    rsp,0x28
  413797:	lea    rax,[rip+0x3b602]        # 0x44eda0
  41379e:	mov    rdi,rcx
  4137a1:	mov    ebx,edx
  4137a3:	mov    QWORD PTR [rcx],rax
  4137a6:	add    rcx,0x10
  4137aa:	call   0x408c80
  4137af:	test   bl,0x1
  4137b2:	je     0x4137bc
  4137b4:	mov    rcx,rdi
  4137b7:	call   0x40215c
  4137bc:	mov    rax,rdi
  4137bf:	add    rsp,0x28
  4137c3:	pop    rdi
  4137c4:	pop    rbx
  4137c5:	ret    
  4137c6:	int3   
  4137c7:	int3   
  4137c8:	rex.W push rbx
  4137ca:	push   rbp
  4137cb:	push   rsi
  4137cc:	push   rdi
  4137cd:	mov    rax,rsp
  4137d0:	sub    rsp,0xb8
  4137d7:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
  4137e3:	mov    ebp,r9d
  4137e6:	mov    edi,r8d
  4137e9:	mov    ebx,edx
  4137eb:	mov    rsi,rcx
  4137ee:	cmp    QWORD PTR [rcx+0x60],0x0
  4137f3:	je     0x413926
  4137f9:	mov    BYTE PTR [rax+0x28],0x0
  4137fd:	lea    rcx,[rsp+0x20]
  413802:	call   0x403150
  413807:	nop
  413808:	cmp    ebx,0x1
  41380b:	jne    0x4138dc
  413811:	cmp    edi,0xffffffff
  413814:	je     0x4138dc
  41381a:	lea    rcx,[rsp+0x30]
  41381f:	call   0x403150
  413824:	nop
  413825:	mov    QWORD PTR [rsp+0x40],0x0
  41382e:	mov    DWORD PTR [rsp+0x48],0x0
  413836:	mov    DWORD PTR [rsp+0x4c],0x0
  41383e:	lea    rcx,[rsp+0x50]
  413843:	call   0x403150
  413848:	nop
  413849:	lea    rcx,[rsp+0x60]
  41384e:	call   0x403150
  413853:	mov    BYTE PTR [rsp+0x71],0x0
  413858:	mov    BYTE PTR [rsp+0x78],0x0
  41385d:	mov    DWORD PTR [rsp+0x7c],0xffffffff
  413865:	lea    r8,[rsp+0x30]
  41386a:	mov    edx,edi
  41386c:	mov    rcx,QWORD PTR [rsi+0x20]
  413870:	call   0x42d1f4
  413875:	mov    ebx,eax
  413877:	test   eax,eax
  413879:	je     0x41388b
  41387b:	lea    rcx,[rsp+0x30]
  413880:	call   0x413404
  413885:	nop
  413886:	jmp    0x413918
  41388b:	lea    rdx,[rsp+0x30]
  413890:	lea    rcx,[rsp+0x20]
  413895:	call   0x4032f8
  41389a:	mov    rbx,QWORD PTR [rsp+0x20]
  41389f:	mov    rax,QWORD PTR [rsi+0x20]
  4138a3:	lea    r9,[rsp+0xe0]
  4138ab:	mov    r8d,0xf
  4138b1:	mov    edx,edi
  4138b3:	mov    rcx,QWORD PTR [rax]
  4138b6:	call   0x429798
  4138bb:	mov    edi,eax
  4138bd:	test   eax,eax
  4138bf:	je     0x4138d0
  4138c1:	lea    rcx,[rsp+0x30]
  4138c6:	call   0x413404
  4138cb:	nop
  4138cc:	mov    ebx,edi
  4138ce:	jmp    0x413918
  4138d0:	lea    rcx,[rsp+0x30]
  4138d5:	call   0x413404
  4138da:	jmp    0x4138fd
  4138dc:	mov    WORD PTR [rsp+0x88],0x23
  4138e6:	lea    rdx,[rsp+0x8a]
  4138ee:	mov    ecx,edi
  4138f0:	call   0x401b10
  4138f5:	lea    rbx,[rsp+0x88]
  4138fd:	mov    rcx,QWORD PTR [rsi+0x60]
  413901:	mov    rax,QWORD PTR [rcx]
  413904:	movzx  r8d,BYTE PTR [rsp+0xe0]
  41390d:	mov    r9,rbx
  413910:	mov    edx,ebp
  413912:	call   QWORD PTR [rax+0x18]
  413915:	nop
  413916:	mov    ebx,eax
  413918:	mov    rcx,QWORD PTR [rsp+0x20]
  41391d:	call   0x40215c
  413922:	mov    eax,ebx
  413924:	jmp    0x413928
  413926:	xor    eax,eax
  413928:	add    rsp,0xb8
  41392f:	pop    rdi
  413930:	pop    rsi
  413931:	pop    rbp
  413932:	pop    rbx
  413933:	ret    
  413934:	int3   
  413935:	int3   
  413936:	int3   
  413937:	int3   
  413938:	rex.W push rbp
  41393a:	sub    rsp,0x20
  41393e:	mov    rbp,rdx
  413941:	lea    rcx,[rbp+0x20]
  413945:	call   0x401000
  41394a:	add    rsp,0x20
  41394e:	pop    rbp
  41394f:	ret    
  413950:	int3   
  413951:	int3   
  413952:	int3   
  413953:	int3   
  413954:	int3   
  413955:	int3   
  413956:	int3   
  413957:	int3   
  413958:	rex.W push rbp
  41395a:	sub    rsp,0x20
  41395e:	mov    rbp,rdx
  413961:	lea    rcx,[rbp+0x30]
  413965:	call   0x401000
  41396a:	add    rsp,0x20
  41396e:	pop    rbp
  41396f:	ret    
  413970:	int3   
  413971:	int3   
  413972:	int3   
  413973:	int3   
  413974:	int3   
  413975:	int3   
  413976:	int3   
  413977:	int3   
  413978:	rex.W push rbp
  41397a:	sub    rsp,0x20
  41397e:	mov    rbp,rdx
  413981:	lea    rcx,[rbp+0x30]
  413985:	add    rcx,0x10
  413989:	call   0x4047cc
  41398e:	add    rsp,0x20
  413992:	pop    rbp
  413993:	ret    
  413994:	int3   
  413995:	int3   
  413996:	int3   
  413997:	int3   
  413998:	rex.W push rbp
  41399a:	sub    rsp,0x20
  41399e:	mov    rbp,rdx
  4139a1:	lea    rcx,[rbp+0x30]
  4139a5:	add    rcx,0x20
  4139a9:	call   0x401000
  4139ae:	add    rsp,0x20
  4139b2:	pop    rbp
  4139b3:	ret    
  4139b4:	int3   
  4139b5:	int3   
  4139b6:	int3   
  4139b7:	int3   
  4139b8:	rex.W push rbp
  4139ba:	sub    rsp,0x20
  4139be:	mov    rbp,rdx
  4139c1:	lea    rcx,[rbp+0x30]
  4139c5:	call   0x413404
  4139ca:	add    rsp,0x20
  4139ce:	pop    rbp
  4139cf:	ret    
  4139d0:	rex.W push rbx
  4139d2:	push   rbp
  4139d3:	push   rsi
  4139d4:	push   rdi
  4139d5:	push   r12
  4139d7:	sub    rsp,0x20
  4139db:	test   edx,edx
  4139dd:	mov    ebx,edx
  4139df:	mov    r12,rcx
  4139e2:	je     0x413a10
  4139e4:	xor    edi,edi
  4139e6:	mov    rsi,rbx
  4139e9:	mov    rax,QWORD PTR [r12]
  4139ed:	mov    rbp,QWORD PTR [rdi+rax*1]
  4139f1:	test   rbp,rbp
  4139f4:	je     0x413a07
  4139f6:	mov    rcx,QWORD PTR [rbp+0x0]
  4139fa:	call   0x40215c
  4139ff:	mov    rcx,rbp
  413a02:	call   0x40215c
  413a07:	add    rdi,0x8
  413a0b:	dec    rsi
  413a0e:	jne    0x4139e9
  413a10:	test   ebx,ebx
  413a12:	je     0x413a32
  413a14:	mov    r8d,DWORD PTR [r12+0x8]
  413a19:	mov    rcx,QWORD PTR [r12]
  413a1d:	sub    r8d,ebx
  413a20:	lea    rdx,[rcx+rbx*8]
  413a24:	shl    r8,0x3
  413a28:	call   0x44b774
  413a2d:	sub    DWORD PTR [r12+0x8],ebx
  413a32:	add    rsp,0x20
  413a36:	pop    r12
  413a38:	pop    rdi
  413a39:	pop    rsi
  413a3a:	pop    rbp
  413a3b:	pop    rbx
  413a3c:	ret    
  413a3d:	int3   
  413a3e:	int3   
  413a3f:	int3   
  413a40:	rex.W push rbx
  413a42:	push   rsi
  413a43:	push   rdi
  413a44:	sub    rsp,0x20
  413a48:	movsxd rbx,DWORD PTR [rcx+0x8]
  413a4c:	cmp    ebx,0x1
  413a4f:	jbe    0x413aa6
  413a51:	mov    rsi,QWORD PTR [rcx]
  413a54:	mov    edi,ebx
  413a56:	sub    rsi,0x10
  413a5a:	shr    edi,1
  413a5c:	mov    r8d,ebx
  413a5f:	mov    edx,edi
  413a61:	mov    rcx,rsi
  413a64:	call   0x4132c8
  413a69:	add    edi,0xffffffff
  413a6c:	jne    0x413a5c
  413a6e:	mov    rdi,rbx
  413a71:	shl    rdi,0x4
  413a75:	add    rdi,rsi
  413a78:	movdqu xmm1,XMMWORD PTR [rdi]
  413a7c:	movdqu xmm0,XMMWORD PTR [rsi+0x10]
  413a81:	add    ebx,0xffffffff
  413a84:	mov    edx,0x1
  413a89:	mov    rcx,rsi
  413a8c:	mov    r8d,ebx
  413a8f:	movdqu XMMWORD PTR [rdi],xmm0
  413a93:	movdqu XMMWORD PTR [rsi+0x10],xmm1
  413a98:	sub    rdi,0x10
  413a9c:	call   0x4132c8
  413aa1:	cmp    ebx,0x1
  413aa4:	ja     0x413a78
  413aa6:	add    rsp,0x20
  413aaa:	pop    rdi
  413aab:	pop    rsi
  413aac:	pop    rbx
  413aad:	ret    
  413aae:	int3   
  413aaf:	int3   
  413ab0:	rex.W push rbx
  413ab2:	push   rbp
  413ab3:	push   rsi
  413ab4:	push   rdi
  413ab5:	push   r12
  413ab7:	sub    rsp,0x30
  413abb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  413ac4:	mov    rbp,rdx
  413ac7:	mov    rsi,rcx
  413aca:	xor    r12d,r12d
  413acd:	mov    edx,r12d
  413ad0:	mov    edi,DWORD PTR [rcx+0x8]
  413ad3:	cmp    edi,r12d
  413ad6:	je     0x413b19
  413ad8:	mov    r10,QWORD PTR [rcx]
  413adb:	mov    r9d,DWORD PTR [rbp+0x0]
  413adf:	lea    r8d,[rdi+rdx*1]
  413ae3:	shr    r8d,1
  413ae6:	mov    rcx,QWORD PTR [r10+r8*8]
  413aea:	cmp    r9d,DWORD PTR [rcx]
  413aed:	sbb    eax,eax
  413aef:	and    eax,0xfffffffe
  413af2:	inc    eax
  413af4:	cmp    r9d,DWORD PTR [rcx]
  413af7:	cmove  eax,r12d
  413afb:	cmp    eax,r12d
  413afe:	je     0x413b14
  413b00:	cmp    eax,r12d
  413b03:	jge    0x413b0a
  413b05:	mov    edi,r8d
  413b08:	jmp    0x413b0e
  413b0a:	lea    edx,[r8+0x1]
  413b0e:	cmp    edx,edi
  413b10:	jne    0x413adf
  413b12:	jmp    0x413b19
  413b14:	mov    eax,r8d
  413b17:	jmp    0x413b56
  413b19:	mov    ecx,0x18
  413b1e:	call   0x402130
  413b23:	mov    rbx,rax
  413b26:	mov    QWORD PTR [rsp+0x60],rax
  413b2b:	cmp    rax,r12
  413b2e:	je     0x413b44
  413b30:	mov    eax,DWORD PTR [rbp+0x0]
  413b33:	mov    DWORD PTR [rbx],eax
  413b35:	lea    rdx,[rbp+0x8]
  413b39:	lea    rcx,[rbx+0x8]
  413b3d:	call   0x403208
  413b42:	jmp    0x413b47
  413b44:	mov    rbx,r12
  413b47:	mov    r8,rbx
  413b4a:	mov    edx,edi
  413b4c:	mov    rcx,rsi
  413b4f:	call   0x40456c
  413b54:	mov    eax,edi
  413b56:	add    rsp,0x30
  413b5a:	pop    r12
  413b5c:	pop    rdi
  413b5d:	pop    rsi
  413b5e:	pop    rbp
  413b5f:	pop    rbx
  413b60:	ret    
  413b61:	int3   
  413b62:	int3   
  413b63:	int3   
  413b64:	int3   
  413b65:	int3   
  413b66:	int3   
  413b67:	int3   
  413b68:	int3   
  413b69:	int3   
  413b6a:	int3   
  413b6b:	int3   
  413b6c:	int3   
  413b6d:	int3   
  413b6e:	int3   
  413b6f:	int3   
  413b70:	rex.W push rbp
  413b72:	sub    rsp,0x20
  413b76:	mov    rbp,rdx
  413b79:	mov    rcx,QWORD PTR [rbp+0x60]
  413b7d:	call   0x40215c
  413b82:	add    rsp,0x20
  413b86:	pop    rbp
  413b87:	ret    
  413b88:	rex.W push rbx
  413b8a:	push   rsi
  413b8b:	push   rdi
  413b8c:	sub    rsp,0x20
  413b90:	movsxd rbx,DWORD PTR [rcx+0x8]
  413b94:	cmp    ebx,0x1
  413b97:	jbe    0x413be1
  413b99:	mov    rsi,QWORD PTR [rcx]
  413b9c:	mov    edi,ebx
  413b9e:	shr    edi,1
  413ba0:	lea    rcx,[rsi-0x8]
  413ba4:	mov    r8d,ebx
  413ba7:	mov    edx,edi
  413ba9:	call   0x41336c
  413bae:	add    edi,0xffffffff
  413bb1:	jne    0x413ba0
  413bb3:	lea    rdi,[rsi+rbx*8-0x8]
  413bb8:	mov    rcx,QWORD PTR [rsi]
  413bbb:	mov    rax,QWORD PTR [rdi]
  413bbe:	add    ebx,0xffffffff
  413bc1:	mov    QWORD PTR [rdi],rcx
  413bc4:	lea    rcx,[rsi-0x8]
  413bc8:	mov    r8d,ebx
  413bcb:	mov    edx,0x1
  413bd0:	sub    rdi,0x8
  413bd4:	mov    QWORD PTR [rsi],rax
  413bd7:	call   0x41336c
  413bdc:	cmp    ebx,0x1
  413bdf:	ja     0x413bb8
  413be1:	add    rsp,0x20
  413be5:	pop    rdi
  413be6:	pop    rsi
  413be7:	pop    rbx
  413be8:	ret    
  413be9:	int3   
  413bea:	int3   
  413beb:	int3   
  413bec:	rex.W push rbx
  413bee:	push   rbp
  413bef:	push   rsi
  413bf0:	push   rdi
  413bf1:	push   r12
  413bf3:	push   r13
  413bf5:	sub    rsp,0x58
  413bf9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  413c02:	mov    rsi,rdx
  413c05:	mov    r13,rcx
  413c08:	lea    rbx,[rcx+0x218]
  413c0f:	mov    DWORD PTR [rbx+0x8],0x0
  413c16:	movsxd rdi,DWORD PTR [rbx+0x18]
  413c1a:	mov    rbp,rdi
  413c1d:	test   edi,edi
  413c1f:	je     0x413c4e
  413c21:	shl    rbp,0x3
  413c25:	add    edi,0xffffffff
  413c28:	sub    rbp,0x8
  413c2c:	mov    rax,QWORD PTR [rbx+0x10]
  413c30:	mov    r12,QWORD PTR [rax+rbp*1]
  413c34:	test   r12,r12
  413c37:	je     0x413c4a
  413c39:	mov    rcx,QWORD PTR [r12]
  413c3d:	call   0x40215c
  413c42:	mov    rcx,r12
  413c45:	call   0x40215c
  413c4a:	test   edi,edi
  413c4c:	jne    0x413c25
  413c4e:	mov    DWORD PTR [rbx+0x18],0x0
  413c55:	mov    rax,QWORD PTR [r13+0x28]
  413c59:	cmp    BYTE PTR [rax+0x10e],0x0
  413c60:	jne    0x413c69
  413c62:	xor    eax,eax
  413c64:	jmp    0x413df3
  413c69:	mov    r12,QWORD PTR [rax]
  413c6c:	test   rsi,rsi
  413c6f:	je     0x413c7d
  413c71:	mov    eax,DWORD PTR [rsi+0x8]
  413c74:	mov    DWORD PTR [rsp+0xa8],eax
  413c7b:	jmp    0x413c9e
  413c7d:	mov    rax,QWORD PTR [r12]
  413c81:	lea    rdx,[rsp+0xa8]
  413c89:	mov    rcx,r12
  413c8c:	call   QWORD PTR [rax+0x28]
  413c8f:	test   eax,eax
  413c91:	jne    0x413df3
  413c97:	mov    eax,DWORD PTR [rsp+0xa8]
  413c9e:	xor    edi,edi
  413ca0:	test   eax,eax
  413ca2:	je     0x413d3a
  413ca8:	xor    ebp,ebp
  413caa:	test   rsi,rsi
  413cad:	je     0x413cb8
  413caf:	mov    rax,QWORD PTR [rsi]
  413cb2:	mov    r13d,DWORD PTR [rax+rbp*1]
  413cb6:	jmp    0x413cbb
  413cb8:	mov    r13d,edi
  413cbb:	lea    r9,[rsp+0xa0]
  413cc3:	lea    r8,[rsp+0x30]
  413cc8:	mov    edx,r13d
  413ccb:	mov    rcx,r12
  413cce:	call   0x412360
  413cd3:	test   eax,eax
  413cd5:	jne    0x413df3
  413cdb:	cmp    BYTE PTR [rsp+0xa0],al
  413ce2:	je     0x413d27
  413ce4:	mov    BYTE PTR [rsp+0x90],al
  413ceb:	lea    r8,[rsp+0x90]
  413cf3:	mov    edx,r13d
  413cf6:	mov    rcx,r12
  413cf9:	call   0x429824
  413cfe:	test   eax,eax
  413d00:	jne    0x413df3
  413d06:	cmp    BYTE PTR [rsp+0x90],al
  413d0d:	jne    0x413d27
  413d0f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
  413d14:	movdqa XMMWORD PTR [rsp+0x40],xmm0
  413d1a:	lea    rdx,[rsp+0x40]
  413d1f:	mov    rcx,rbx
  413d22:	call   0x41324c
  413d27:	inc    edi
  413d29:	add    rbp,0x4
  413d2d:	cmp    edi,DWORD PTR [rsp+0xa8]
  413d34:	jb     0x413caa
  413d3a:	mov    rcx,rbx
  413d3d:	call   0x413a40
  413d42:	xor    r11d,r11d
  413d45:	lea    r9d,[r11+0x1]
  413d49:	mov    r10d,r9d
  413d4c:	cmp    DWORD PTR [rbx+0x8],r9d
  413d50:	jbe    0x413dae
  413d52:	xor    edi,edi
  413d54:	xor    esi,esi
  413d56:	lea    r12d,[r10-0x1]
  413d5a:	mov    rbp,QWORD PTR [rbx]
  413d5d:	mov    edx,r12d
  413d60:	shl    rdx,0x4
  413d64:	add    rdx,rbp
  413d67:	mov    ecx,r10d
  413d6a:	shl    rcx,0x4
  413d6e:	add    rcx,rbp
  413d71:	call   0x4127ac
  413d76:	test   eax,eax
  413d78:	je     0x413d82
  413d7a:	mov    r9d,0x1
  413d80:	jmp    0x413da1
  413d82:	inc    r9d
  413d85:	cmp    r9d,0x2
  413d89:	jne    0x413da1
  413d8b:	cmp    r12d,r11d
  413d8e:	je     0x413d9a
  413d90:	movdqu xmm0,XMMWORD PTR [rsi+rbp*1]
  413d95:	movdqu XMMWORD PTR [rdi+rbp*1],xmm0
  413d9a:	inc    r11d
  413d9d:	add    rdi,0x10
  413da1:	inc    r10d
  413da4:	add    rsi,0x10
  413da8:	cmp    r10d,DWORD PTR [rbx+0x8]
  413dac:	jb     0x413d56
  413dae:	mov    DWORD PTR [rbx+0x8],r11d
  413db2:	cmp    DWORD PTR [rbx+0x18],r11d
  413db6:	jae    0x413df1
  413db8:	mov    ecx,0x10
  413dbd:	call   0x402130
  413dc2:	mov    QWORD PTR [rsp+0x90],rax
  413dca:	test   rax,rax
  413dcd:	je     0x413dd9
  413dcf:	mov    rcx,rax
  413dd2:	call   0x403150
  413dd7:	jmp    0x413ddb
  413dd9:	xor    eax,eax
  413ddb:	mov    rdx,rax
  413dde:	lea    rcx,[rbx+0x10]
  413de2:	call   0x4010c8
  413de7:	mov    r11d,DWORD PTR [rbx+0x8]
  413deb:	cmp    DWORD PTR [rbx+0x18],r11d
  413def:	jb     0x413db8
  413df1:	xor    eax,eax
  413df3:	add    rsp,0x58
  413df7:	pop    r13
  413df9:	pop    r12
  413dfb:	pop    rdi
  413dfc:	pop    rsi
  413dfd:	pop    rbp
  413dfe:	pop    rbx
  413dff:	ret    
  413e00:	int3   
  413e01:	int3   
  413e02:	int3   
  413e03:	int3   
  413e04:	int3   
  413e05:	int3   
  413e06:	int3   
  413e07:	int3   
  413e08:	int3   
  413e09:	int3   
  413e0a:	int3   
  413e0b:	int3   
  413e0c:	rex.W push rbp
  413e0e:	sub    rsp,0x20
  413e12:	mov    rbp,rdx
  413e15:	mov    rcx,QWORD PTR [rbp+0x90]
  413e1c:	call   0x40215c
  413e21:	add    rsp,0x20
  413e25:	pop    rbp
  413e26:	ret    
  413e27:	int3   
  413e28:	mov    QWORD PTR [rsp+0x8],rcx
  413e2d:	push   rbx
  413e2e:	push   rsi
  413e2f:	push   rdi
  413e30:	sub    rsp,0x30
  413e34:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  413e3d:	mov    rdi,rcx
  413e40:	xor    esi,esi
  413e42:	mov    DWORD PTR [rcx+0x20],esi
  413e45:	lea    rax,[rip+0x3b084]        # 0x44eed0
  413e4c:	mov    QWORD PTR [rcx],rax
  413e4f:	lea    rax,[rip+0x3b042]        # 0x44ee98
  413e56:	mov    QWORD PTR [rcx+0x8],rax
  413e5a:	lea    rax,[rip+0x3b017]        # 0x44ee78
  413e61:	mov    QWORD PTR [rcx+0x10],rax
  413e65:	lea    rax,[rip+0x3afec]        # 0x44ee58
  413e6c:	mov    QWORD PTR [rcx+0x18],rax
  413e70:	mov    BYTE PTR [rcx+0x30],sil
  413e74:	mov    BYTE PTR [rcx+0x31],sil
  413e78:	mov    BYTE PTR [rcx+0x33],sil
  413e7c:	mov    BYTE PTR [rcx+0x35],sil
  413e80:	mov    BYTE PTR [rcx+0x37],sil
  413e84:	mov    BYTE PTR [rcx+0x38],sil
  413e88:	mov    BYTE PTR [rcx+0x39],sil
  413e8c:	mov    BYTE PTR [rcx+0x32],0x1
  413e90:	mov    BYTE PTR [rcx+0x34],0x1
  413e94:	mov    BYTE PTR [rcx+0x36],0x1
  413e98:	mov    QWORD PTR [rcx+0x48],rsi
  413e9c:	mov    QWORD PTR [rcx+0x50],rsi
  413ea0:	mov    QWORD PTR [rcx+0x58],rsi
  413ea4:	mov    QWORD PTR [rcx+0x60],rsi
  413ea8:	mov    QWORD PTR [rcx+0x68],rsi
  413eac:	add    rcx,0x70
  413eb0:	call   0x403150
  413eb5:	nop
  413eb6:	lea    rcx,[rdi+0x80]
  413ebd:	call   0x403150
  413ec2:	nop
  413ec3:	mov    QWORD PTR [rdi+0x98],rsi
  413eca:	mov    QWORD PTR [rdi+0xa8],rsi
  413ed1:	lea    rbx,[rdi+0xb0]
  413ed8:	mov    QWORD PTR [rsp+0x58],rbx
  413edd:	mov    rcx,rbx
  413ee0:	call   0x403150
  413ee5:	nop
  413ee6:	mov    QWORD PTR [rbx+0x10],rsi
  413eea:	mov    DWORD PTR [rbx+0x18],esi
  413eed:	mov    DWORD PTR [rbx+0x1c],esi
  413ef0:	lea    rcx,[rbx+0x20]
  413ef4:	call   0x403150
  413ef9:	nop
  413efa:	lea    rcx,[rbx+0x30]
  413efe:	call   0x403150
  413f03:	mov    BYTE PTR [rbx+0x41],sil
  413f07:	mov    BYTE PTR [rbx+0x48],sil
  413f0b:	mov    DWORD PTR [rbx+0x4c],0xffffffff
  413f12:	lea    rcx,[rdi+0x100]
  413f19:	call   0x403150
  413f1e:	nop
  413f1f:	mov    BYTE PTR [rdi+0x11a],0x1
  413f26:	mov    BYTE PTR [rdi+0x11b],0x1
  413f2d:	mov    BYTE PTR [rdi+0x11c],0x1
  413f34:	mov    QWORD PTR [rdi+0x160],rsi
  413f3b:	mov    QWORD PTR [rdi+0x170],rsi
  413f42:	mov    QWORD PTR [rdi+0x180],rsi
  413f49:	mov    DWORD PTR [rdi+0x188],esi
  413f4f:	mov    DWORD PTR [rdi+0x18c],esi
  413f55:	mov    BYTE PTR [rdi+0x19a],sil
  413f5c:	mov    QWORD PTR [rdi+0x1a0],rsi
  413f63:	mov    QWORD PTR [rdi+0x1c0],rsi
  413f6a:	mov    DWORD PTR [rdi+0x1c8],esi
  413f70:	mov    DWORD PTR [rdi+0x1cc],esi
  413f76:	mov    QWORD PTR [rdi+0x1d0],rsi
  413f7d:	mov    DWORD PTR [rdi+0x1d8],esi
  413f83:	mov    DWORD PTR [rdi+0x1dc],esi
  413f89:	mov    QWORD PTR [rdi+0x218],rsi
  413f90:	mov    DWORD PTR [rdi+0x220],esi
  413f96:	mov    DWORD PTR [rdi+0x224],esi
  413f9c:	mov    QWORD PTR [rdi+0x228],rsi
  413fa3:	mov    DWORD PTR [rdi+0x230],esi
  413fa9:	mov    DWORD PTR [rdi+0x234],esi
  413faf:	lea    rcx,[rdi+0x238]
  413fb6:	call   0x403150
  413fbb:	nop
  413fbc:	mov    QWORD PTR [rdi+0x248],rsi
  413fc3:	mov    DWORD PTR [rdi+0x250],esi
  413fc9:	mov    DWORD PTR [rdi+0x254],esi
  413fcf:	lea    ecx,[rsi+0x48]
  413fd2:	call   0x402130
  413fd7:	mov    QWORD PTR [rsp+0x58],rax
  413fdc:	cmp    rax,rsi
  413fdf:	je     0x413fee
  413fe1:	mov    rcx,rax
  413fe4:	call   0x40e64c
  413fe9:	mov    rbx,rax
  413fec:	jmp    0x413ff1
  413fee:	mov    rbx,rsi
  413ff1:	mov    QWORD PTR [rdi+0x1e8],rbx
  413ff8:	cmp    rbx,rsi
  413ffb:	je     0x414006
  413ffd:	mov    rax,QWORD PTR [rbx]
  414000:	mov    rcx,rbx
  414003:	call   QWORD PTR [rax+0x8]
  414006:	mov    rcx,QWORD PTR [rdi+0x1a0]
  41400d:	cmp    rcx,rsi
  414010:	je     0x414018
  414012:	mov    rax,QWORD PTR [rcx]
  414015:	call   QWORD PTR [rax+0x10]
  414018:	mov    QWORD PTR [rdi+0x1a0],rbx
  41401f:	call   0x4126d8
  414024:	mov    BYTE PTR [rdi+0x1e0],al
  41402a:	mov    rax,rdi
  41402d:	add    rsp,0x30
  414031:	pop    rdi
  414032:	pop    rsi
  414033:	pop    rbx
  414034:	ret    
  414035:	int3   
  414036:	int3   
  414037:	int3   
  414038:	rex.W push rbp
  41403a:	sub    rsp,0x20
  41403e:	mov    rbp,rdx
  414041:	mov    rcx,QWORD PTR [rbp+0x50]
  414045:	add    rcx,0x48
  414049:	call   0x4176b4
  41404e:	add    rsp,0x20
  414052:	pop    rbp
  414053:	ret    
  414054:	int3   
  414055:	int3   
  414056:	int3   
  414057:	int3   
  414058:	rex.W push rbp
  41405a:	sub    rsp,0x20
  41405e:	mov    rbp,rdx
  414061:	mov    rcx,QWORD PTR [rbp+0x50]
  414065:	add    rcx,0x50
  414069:	call   0x4176b4
  41406e:	add    rsp,0x20
  414072:	pop    rbp
  414073:	ret    
  414074:	int3   
  414075:	int3   
  414076:	int3   
  414077:	int3   
  414078:	rex.W push rbp
  41407a:	sub    rsp,0x20
  41407e:	mov    rbp,rdx
  414081:	mov    rcx,QWORD PTR [rbp+0x50]
  414085:	add    rcx,0x58
  414089:	call   0x4176b4
  41408e:	add    rsp,0x20
  414092:	pop    rbp
  414093:	ret    
  414094:	int3   
  414095:	int3   
  414096:	int3   
  414097:	int3   
  414098:	rex.W push rbp
  41409a:	sub    rsp,0x20
  41409e:	mov    rbp,rdx
  4140a1:	mov    rcx,QWORD PTR [rbp+0x50]
  4140a5:	add    rcx,0x60
  4140a9:	call   0x4176b4
  4140ae:	add    rsp,0x20
  4140b2:	pop    rbp
  4140b3:	ret    
  4140b4:	int3   
  4140b5:	int3   
  4140b6:	int3   
  4140b7:	int3   
  4140b8:	rex.W push rbp
  4140ba:	sub    rsp,0x20
  4140be:	mov    rbp,rdx
  4140c1:	mov    rcx,QWORD PTR [rbp+0x50]
  4140c5:	add    rcx,0x68
  4140c9:	call   0x4176b4
  4140ce:	add    rsp,0x20
  4140d2:	pop    rbp
  4140d3:	ret    
  4140d4:	int3   
  4140d5:	int3   
  4140d6:	int3   
  4140d7:	int3   
  4140d8:	rex.W push rbp
  4140da:	sub    rsp,0x20
  4140de:	mov    rbp,rdx
  4140e1:	mov    rcx,QWORD PTR [rbp+0x50]
  4140e5:	add    rcx,0x70
  4140e9:	call   0x401000
  4140ee:	add    rsp,0x20
  4140f2:	pop    rbp
  4140f3:	ret    
  4140f4:	int3   
  4140f5:	int3   
  4140f6:	int3   
  4140f7:	int3   
  4140f8:	rex.W push rbp
  4140fa:	sub    rsp,0x20
  4140fe:	mov    rbp,rdx
  414101:	mov    rcx,QWORD PTR [rbp+0x50]
  414105:	add    rcx,0x80
  41410c:	call   0x401000
  414111:	add    rsp,0x20
  414115:	pop    rbp
  414116:	ret    
  414117:	int3   
  414118:	rex.W push rbp
  41411a:	sub    rsp,0x20
  41411e:	mov    rbp,rdx
  414121:	mov    rcx,QWORD PTR [rbp+0x50]
  414125:	add    rcx,0x98
  41412c:	call   0x4176b4
  414131:	add    rsp,0x20
  414135:	pop    rbp
  414136:	ret    
  414137:	int3   
  414138:	rex.W push rbp
  41413a:	sub    rsp,0x20
  41413e:	mov    rbp,rdx
  414141:	mov    rcx,QWORD PTR [rbp+0x50]
  414145:	add    rcx,0xa8
  41414c:	call   0x4176b4
  414151:	add    rsp,0x20
  414155:	pop    rbp
  414156:	ret    
  414157:	int3   
  414158:	rex.W push rbp
  41415a:	sub    rsp,0x20
  41415e:	mov    rbp,rdx
  414161:	mov    rcx,QWORD PTR [rbp+0x58]
  414165:	call   0x401000
  41416a:	add    rsp,0x20
  41416e:	pop    rbp
  41416f:	ret    
  414170:	int3   
  414171:	int3   
  414172:	int3   
  414173:	int3   
  414174:	int3   
  414175:	int3   
  414176:	int3   
  414177:	int3   
  414178:	rex.W push rbp
  41417a:	sub    rsp,0x20
  41417e:	mov    rbp,rdx
  414181:	mov    rcx,QWORD PTR [rbp+0x58]
  414185:	add    rcx,0x10
  414189:	call   0x4047cc
  41418e:	add    rsp,0x20
  414192:	pop    rbp
  414193:	ret    
  414194:	int3   
  414195:	int3   
  414196:	int3   
  414197:	int3   
  414198:	rex.W push rbp
  41419a:	sub    rsp,0x20
  41419e:	mov    rbp,rdx
  4141a1:	mov    rcx,QWORD PTR [rbp+0x58]
  4141a5:	add    rcx,0x20
  4141a9:	call   0x401000
  4141ae:	add    rsp,0x20
  4141b2:	pop    rbp
  4141b3:	ret    
  4141b4:	int3   
  4141b5:	int3   
  4141b6:	int3   
  4141b7:	int3   
  4141b8:	rex.W push rbp
  4141ba:	sub    rsp,0x20
  4141be:	mov    rbp,rdx
  4141c1:	mov    rcx,QWORD PTR [rbp+0x50]
  4141c5:	add    rcx,0xb0
  4141cc:	call   0x413404
  4141d1:	add    rsp,0x20
  4141d5:	pop    rbp
  4141d6:	ret    
  4141d7:	int3   
  4141d8:	rex.W push rbp
  4141da:	sub    rsp,0x20
  4141de:	mov    rbp,rdx
  4141e1:	mov    rcx,QWORD PTR [rbp+0x50]
  4141e5:	add    rcx,0x100
  4141ec:	call   0x401000
  4141f1:	add    rsp,0x20
  4141f5:	pop    rbp
  4141f6:	ret    
  4141f7:	int3   
  4141f8:	rex.W push rbp
  4141fa:	sub    rsp,0x20
  4141fe:	mov    rbp,rdx
  414201:	mov    rcx,QWORD PTR [rbp+0x50]
  414205:	add    rcx,0x160
  41420c:	call   0x4176b4
  414211:	add    rsp,0x20
  414215:	pop    rbp
  414216:	ret    
  414217:	int3   
  414218:	rex.W push rbp
  41421a:	sub    rsp,0x20
  41421e:	mov    rbp,rdx
  414221:	mov    rcx,QWORD PTR [rbp+0x50]
  414225:	add    rcx,0x170
  41422c:	call   0x4176b4
  414231:	add    rsp,0x20
  414235:	pop    rbp
  414236:	ret    
  414237:	int3   
  414238:	rex.W push rbp
  41423a:	sub    rsp,0x20
  41423e:	mov    rbp,rdx
  414241:	mov    rcx,QWORD PTR [rbp+0x50]
  414245:	add    rcx,0x180
  41424c:	call   0x4047cc
  414251:	add    rsp,0x20
  414255:	pop    rbp
  414256:	ret    
  414257:	int3   
  414258:	rex.W push rbp
  41425a:	sub    rsp,0x20
  41425e:	mov    rbp,rdx
  414261:	mov    rcx,QWORD PTR [rbp+0x50]
  414265:	add    rcx,0x1a0
  41426c:	call   0x4176b4
  414271:	add    rsp,0x20
  414275:	pop    rbp
  414276:	ret    
  414277:	int3   
  414278:	rex.W push rbp
  41427a:	sub    rsp,0x20
  41427e:	mov    rbp,rdx
  414281:	mov    rcx,QWORD PTR [rbp+0x50]
  414285:	add    rcx,0x1c0
  41428c:	call   0x4047cc
  414291:	add    rsp,0x20
  414295:	pop    rbp
  414296:	ret    
  414297:	int3   
  414298:	rex.W push rbp
  41429a:	sub    rsp,0x20
  41429e:	mov    rbp,rdx
  4142a1:	mov    rcx,QWORD PTR [rbp+0x50]
  4142a5:	add    rcx,0x1d0
  4142ac:	call   0x401000
  4142b1:	add    rsp,0x20
  4142b5:	pop    rbp
  4142b6:	ret    
  4142b7:	int3   
  4142b8:	rex.W push rbp
  4142ba:	sub    rsp,0x20
  4142be:	mov    rbp,rdx
  4142c1:	mov    rcx,QWORD PTR [rbp+0x50]
  4142c5:	add    rcx,0x218
  4142cc:	call   0x413474
  4142d1:	add    rsp,0x20
  4142d5:	pop    rbp
  4142d6:	ret    
  4142d7:	int3   
  4142d8:	rex.W push rbp
  4142da:	sub    rsp,0x20
  4142de:	mov    rbp,rdx
  4142e1:	mov    rcx,QWORD PTR [rbp+0x50]
  4142e5:	add    rcx,0x238
  4142ec:	call   0x401000
  4142f1:	add    rsp,0x20
  4142f5:	pop    rbp
  4142f6:	ret    
  4142f7:	int3   
  4142f8:	rex.W push rbp
  4142fa:	sub    rsp,0x20
  4142fe:	mov    rbp,rdx
  414301:	mov    rcx,QWORD PTR [rbp+0x50]
  414305:	add    rcx,0x248
  41430c:	call   0x444ad4
  414311:	add    rsp,0x20
  414315:	pop    rbp
  414316:	ret    
  414317:	int3   
  414318:	rex.W push rbp
  41431a:	sub    rsp,0x20
  41431e:	mov    rbp,rdx
  414321:	mov    rcx,QWORD PTR [rbp+0x58]
  414325:	call   0x40215c
  41432a:	add    rsp,0x20
  41432e:	pop    rbp
  41432f:	ret    
  414330:	rex.W push rbx
  414332:	push   rbp
  414333:	push   rsi
  414334:	push   rdi
  414335:	sub    rsp,0x28
  414339:	mov    rsi,rdx
  41433c:	mov    rdi,r8
  41433f:	mov    rbx,rcx
  414342:	mov    QWORD PTR [r8],0x0
  414349:	mov    ebp,0x10
  41434e:	lea    rdx,[rip+0x40a9b]        # 0x454df0
  414355:	mov    r8,rbp
  414358:	mov    rcx,rsi
  41435b:	call   0x44b786
  414360:	test   eax,eax
  414362:	je     0x41437a
  414364:	lea    rdx,[rip+0x3fb2d]        # 0x453e98
  41436b:	mov    r8,rbp
  41436e:	mov    rcx,rsi
  414371:	call   0x44b786
  414376:	test   eax,eax
  414378:	jne    0x414380
  41437a:	lea    rdx,[rbx+0x8]
  41437e:	jmp    0x4143b6
  414380:	lea    rdx,[rip+0x3fa41]        # 0x453dc8
  414387:	mov    r8,rbp
  41438a:	mov    rcx,rsi
  41438d:	call   0x44b786
  414392:	test   eax,eax
  414394:	jne    0x41439c
  414396:	lea    rdx,[rbx+0x10]
  41439a:	jmp    0x4143b6
  41439c:	lea    rdx,[rip+0x3fa05]        # 0x453da8
  4143a3:	mov    r8,rbp
  4143a6:	mov    rcx,rsi
  4143a9:	call   0x44b786
  4143ae:	test   eax,eax
  4143b0:	jne    0x4143cc
  4143b2:	lea    rdx,[rbx+0x18]
  4143b6:	mov    rax,rbx
  4143b9:	neg    rax
  4143bc:	sbb    rcx,rcx
  4143bf:	and    rcx,rdx
  4143c2:	mov    QWORD PTR [rdi],rcx
  4143c5:	inc    DWORD PTR [rbx+0x20]
  4143c8:	xor    eax,eax
  4143ca:	jmp    0x4143d1
  4143cc:	mov    eax,0x80004002
  4143d1:	add    rsp,0x28
  4143d5:	pop    rdi
  4143d6:	pop    rsi
  4143d7:	pop    rbp
  4143d8:	pop    rbx
  4143d9:	ret    
  4143da:	int3   
  4143db:	int3   
  4143dc:	sub    rcx,0x8
  4143e0:	jmp    0x414330
  4143e5:	int3   
  4143e6:	int3   
  4143e7:	int3   
  4143e8:	sub    rcx,0x8
  4143ec:	jmp    0x42b3ec
  4143f1:	int3   
  4143f2:	int3   
  4143f3:	int3   
  4143f4:	sub    rcx,0x10
  4143f8:	jmp    0x414330
  4143fd:	int3   
  4143fe:	int3   
  4143ff:	int3   
  414400:	sub    rcx,0x10
  414404:	jmp    0x42b3ec
  414409:	int3   
  41440a:	int3   
  41440b:	int3   
  41440c:	sub    rcx,0x18
  414410:	jmp    0x414330
  414415:	int3   
  414416:	int3   
  414417:	int3   
  414418:	sub    rcx,0x8
  41441c:	jmp    0x4127e0
  414421:	int3   
  414422:	int3   
  414423:	int3   
  414424:	sub    rcx,0x8
  414428:	jmp    0x412850
  41442d:	int3   
  41442e:	int3   
  41442f:	int3   
  414430:	mov    QWORD PTR [rsp+0x8],rcx
  414435:	push   rbx
  414436:	push   rbp
  414437:	push   rsi
  414438:	push   rdi
  414439:	push   r12
  41443b:	sub    rsp,0x30
  41443f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  414448:	mov    rbx,rcx
  41444b:	movsxd rdi,DWORD PTR [rcx+0x250]
  414452:	mov    rsi,rdi
  414455:	mov    r12d,0xffffffff
  41445b:	test   edi,edi
  41445d:	je     0x41448f
  41445f:	shl    rsi,0x3
  414463:	add    edi,r12d
  414466:	sub    rsi,0x8
  41446a:	mov    rax,QWORD PTR [rbx+0x248]
  414471:	mov    rbp,QWORD PTR [rsi+rax*1]
  414475:	test   rbp,rbp
  414478:	je     0x41448b
  41447a:	mov    rcx,QWORD PTR [rbp+0x8]
  41447e:	call   0x40215c
  414483:	mov    rcx,rbp
  414486:	call   0x40215c
  41448b:	test   edi,edi
  41448d:	jne    0x414463
  41448f:	mov    rcx,QWORD PTR [rbx+0x248]
  414496:	call   0x40215c
  41449b:	mov    rcx,QWORD PTR [rbx+0x238]
  4144a2:	call   0x40215c
  4144a7:	movsxd rdi,DWORD PTR [rbx+0x230]
  4144ae:	mov    rsi,rdi
  4144b1:	test   edi,edi
  4144b3:	je     0x4144e5
  4144b5:	shl    rsi,0x3
  4144b9:	add    edi,r12d
  4144bc:	sub    rsi,0x8
  4144c0:	mov    rax,QWORD PTR [rbx+0x228]
  4144c7:	mov    rbp,QWORD PTR [rsi+rax*1]
  4144cb:	test   rbp,rbp
  4144ce:	je     0x4144e1
  4144d0:	mov    rcx,QWORD PTR [rbp+0x0]
  4144d4:	call   0x40215c
  4144d9:	mov    rcx,rbp
  4144dc:	call   0x40215c
  4144e1:	test   edi,edi
  4144e3:	jne    0x4144b9
  4144e5:	mov    rcx,QWORD PTR [rbx+0x228]
  4144ec:	call   0x40215c
  4144f1:	mov    rcx,QWORD PTR [rbx+0x218]
  4144f8:	call   0x40215c
  4144fd:	mov    rcx,QWORD PTR [rbx+0x1d0]
  414504:	call   0x40215c
  414509:	movsxd rbp,DWORD PTR [rbx+0x1c8]
  414510:	mov    rdi,rbp
  414513:	test   ebp,ebp
  414515:	je     0x414546
  414517:	shl    rdi,0x3
  41451b:	add    ebp,r12d
  41451e:	sub    rdi,0x8
  414522:	mov    rax,QWORD PTR [rbx+0x1c0]
  414529:	mov    rsi,QWORD PTR [rdi+rax*1]
  41452d:	test   rsi,rsi
  414530:	je     0x414542
  414532:	mov    rcx,QWORD PTR [rsi]
  414535:	call   0x40215c
  41453a:	mov    rcx,rsi
  41453d:	call   0x40215c
  414542:	test   ebp,ebp
  414544:	jne    0x41451b
  414546:	mov    rcx,QWORD PTR [rbx+0x1c0]
  41454d:	call   0x40215c
  414552:	mov    rcx,QWORD PTR [rbx+0x1a0]
  414559:	test   rcx,rcx
  41455c:	je     0x414565
  41455e:	mov    rax,QWORD PTR [rcx]
  414561:	call   QWORD PTR [rax+0x10]
  414564:	nop
  414565:	movsxd rdi,DWORD PTR [rbx+0x188]
  41456c:	mov    rsi,rdi
  41456f:	test   edi,edi
  414571:	je     0x4145a3
  414573:	shl    rsi,0x3
  414577:	add    edi,r12d
  41457a:	sub    rsi,0x8
  41457e:	mov    rax,QWORD PTR [rbx+0x180]
  414585:	mov    rbp,QWORD PTR [rsi+rax*1]
  414589:	test   rbp,rbp
  41458c:	je     0x41459f
  41458e:	mov    rcx,QWORD PTR [rbp+0x0]
  414592:	call   0x40215c
  414597:	mov    rcx,rbp
  41459a:	call   0x40215c
  41459f:	test   edi,edi
  4145a1:	jne    0x414577
  4145a3:	mov    rcx,QWORD PTR [rbx+0x180]
  4145aa:	call   0x40215c
  4145af:	nop
  4145b0:	mov    rcx,QWORD PTR [rbx+0x170]
  4145b7:	test   rcx,rcx
  4145ba:	je     0x4145c3
  4145bc:	mov    rax,QWORD PTR [rcx]
  4145bf:	call   QWORD PTR [rax+0x10]
  4145c2:	nop
  4145c3:	mov    rcx,QWORD PTR [rbx+0x160]
  4145ca:	test   rcx,rcx
  4145cd:	je     0x4145d6
  4145cf:	mov    rax,QWORD PTR [rcx]
  4145d2:	call   QWORD PTR [rax+0x10]
  4145d5:	nop
  4145d6:	mov    rcx,QWORD PTR [rbx+0x100]
  4145dd:	call   0x40215c
  4145e2:	nop
  4145e3:	lea    rcx,[rbx+0xb0]
  4145ea:	call   0x413404
  4145ef:	nop
  4145f0:	mov    rcx,QWORD PTR [rbx+0xa8]
  4145f7:	test   rcx,rcx
  4145fa:	je     0x414603
  4145fc:	mov    rax,QWORD PTR [rcx]
  4145ff:	call   QWORD PTR [rax+0x10]
  414602:	nop
  414603:	mov    rcx,QWORD PTR [rbx+0x98]
  41460a:	test   rcx,rcx
  41460d:	je     0x414616
  41460f:	mov    rax,QWORD PTR [rcx]
  414612:	call   QWORD PTR [rax+0x10]
  414615:	nop
  414616:	mov    rcx,QWORD PTR [rbx+0x80]
  41461d:	call   0x40215c
  414622:	nop
  414623:	mov    rcx,QWORD PTR [rbx+0x70]
  414627:	call   0x40215c
  41462c:	nop
  41462d:	mov    rcx,QWORD PTR [rbx+0x68]
  414631:	test   rcx,rcx
  414634:	je     0x41463d
  414636:	mov    rax,QWORD PTR [rcx]
  414639:	call   QWORD PTR [rax+0x10]
  41463c:	nop
  41463d:	mov    rcx,QWORD PTR [rbx+0x60]
  414641:	test   rcx,rcx
  414644:	je     0x41464d
  414646:	mov    rax,QWORD PTR [rcx]
  414649:	call   QWORD PTR [rax+0x10]
  41464c:	nop
  41464d:	mov    rcx,QWORD PTR [rbx+0x58]
  414651:	test   rcx,rcx
  414654:	je     0x41465d
  414656:	mov    rax,QWORD PTR [rcx]
  414659:	call   QWORD PTR [rax+0x10]
  41465c:	nop
  41465d:	mov    rcx,QWORD PTR [rbx+0x50]
  414661:	test   rcx,rcx
  414664:	je     0x41466d
  414666:	mov    rax,QWORD PTR [rcx]
  414669:	call   QWORD PTR [rax+0x10]
  41466c:	nop
  41466d:	mov    rcx,QWORD PTR [rbx+0x48]
  414671:	test   rcx,rcx
  414674:	je     0x41467c
  414676:	mov    rax,QWORD PTR [rcx]
  414679:	call   QWORD PTR [rax+0x10]
  41467c:	add    rsp,0x30
  414680:	pop    r12
  414682:	pop    rdi
  414683:	pop    rsi
  414684:	pop    rbp
  414685:	pop    rbx
  414686:	ret    
  414687:	int3   
  414688:	int3   
  414689:	int3   
  41468a:	int3   
  41468b:	int3   
  41468c:	int3   
  41468d:	int3   
  41468e:	int3   
  41468f:	int3   
  414690:	rex.W push rbp
  414692:	sub    rsp,0x20
  414696:	mov    rbp,rdx
  414699:	mov    rcx,QWORD PTR [rbp+0x60]
  41469d:	add    rcx,0x48
  4146a1:	call   0x4176b4
  4146a6:	add    rsp,0x20
  4146aa:	pop    rbp
  4146ab:	ret    
  4146ac:	int3   
  4146ad:	int3   
  4146ae:	int3   
  4146af:	int3   
  4146b0:	rex.W push rbp
  4146b2:	sub    rsp,0x20
  4146b6:	mov    rbp,rdx
  4146b9:	mov    rcx,QWORD PTR [rbp+0x60]
  4146bd:	add    rcx,0x50
  4146c1:	call   0x4176b4
  4146c6:	add    rsp,0x20
  4146ca:	pop    rbp
  4146cb:	ret    
  4146cc:	int3   
  4146cd:	int3   
  4146ce:	int3   
  4146cf:	int3   
  4146d0:	rex.W push rbp
  4146d2:	sub    rsp,0x20
  4146d6:	mov    rbp,rdx
  4146d9:	mov    rcx,QWORD PTR [rbp+0x60]
  4146dd:	add    rcx,0x58
  4146e1:	call   0x4176b4
  4146e6:	add    rsp,0x20
  4146ea:	pop    rbp
  4146eb:	ret    
  4146ec:	int3   
  4146ed:	int3   
  4146ee:	int3   
  4146ef:	int3   
  4146f0:	rex.W push rbp
  4146f2:	sub    rsp,0x20
  4146f6:	mov    rbp,rdx
  4146f9:	mov    rcx,QWORD PTR [rbp+0x60]
  4146fd:	add    rcx,0x60
  414701:	call   0x4176b4
  414706:	add    rsp,0x20
  41470a:	pop    rbp
  41470b:	ret    
  41470c:	int3   
  41470d:	int3   
  41470e:	int3   
  41470f:	int3   
  414710:	rex.W push rbp
  414712:	sub    rsp,0x20
  414716:	mov    rbp,rdx
  414719:	mov    rcx,QWORD PTR [rbp+0x60]
  41471d:	add    rcx,0x68
  414721:	call   0x4176b4
  414726:	add    rsp,0x20
  41472a:	pop    rbp
  41472b:	ret    
  41472c:	int3   
  41472d:	int3   
  41472e:	int3   
  41472f:	int3   
  414730:	rex.W push rbp
  414732:	sub    rsp,0x20
  414736:	mov    rbp,rdx
  414739:	mov    rcx,QWORD PTR [rbp+0x60]
  41473d:	add    rcx,0x70
  414741:	call   0x401000
  414746:	add    rsp,0x20
  41474a:	pop    rbp
  41474b:	ret    
  41474c:	int3   
  41474d:	int3   
  41474e:	int3   
  41474f:	int3   
  414750:	rex.W push rbp
  414752:	sub    rsp,0x20
  414756:	mov    rbp,rdx
  414759:	mov    rcx,QWORD PTR [rbp+0x60]
  41475d:	add    rcx,0x80
  414764:	call   0x401000
  414769:	add    rsp,0x20
  41476d:	pop    rbp
  41476e:	ret    
  41476f:	int3   
  414770:	rex.W push rbp
  414772:	sub    rsp,0x20
  414776:	mov    rbp,rdx
  414779:	mov    rcx,QWORD PTR [rbp+0x60]
  41477d:	add    rcx,0x98
  414784:	call   0x4176b4
  414789:	add    rsp,0x20
  41478d:	pop    rbp
  41478e:	ret    
  41478f:	int3   
  414790:	rex.W push rbp
  414792:	sub    rsp,0x20
  414796:	mov    rbp,rdx
  414799:	mov    rcx,QWORD PTR [rbp+0x60]
  41479d:	add    rcx,0xa8
  4147a4:	call   0x4176b4
  4147a9:	add    rsp,0x20
  4147ad:	pop    rbp
  4147ae:	ret    
  4147af:	int3   
  4147b0:	rex.W push rbp
  4147b2:	sub    rsp,0x20
  4147b6:	mov    rbp,rdx
  4147b9:	mov    rcx,QWORD PTR [rbp+0x60]
  4147bd:	add    rcx,0xb0
  4147c4:	call   0x413404
  4147c9:	add    rsp,0x20
  4147cd:	pop    rbp
  4147ce:	ret    
  4147cf:	int3   
  4147d0:	rex.W push rbp
  4147d2:	sub    rsp,0x20
  4147d6:	mov    rbp,rdx
  4147d9:	mov    rcx,QWORD PTR [rbp+0x60]
  4147dd:	add    rcx,0x100
  4147e4:	call   0x401000
  4147e9:	add    rsp,0x20
  4147ed:	pop    rbp
  4147ee:	ret    
  4147ef:	int3   
  4147f0:	rex.W push rbp
  4147f2:	sub    rsp,0x20
  4147f6:	mov    rbp,rdx
  4147f9:	mov    rcx,QWORD PTR [rbp+0x60]
  4147fd:	add    rcx,0x160
  414804:	call   0x4176b4
  414809:	add    rsp,0x20
  41480d:	pop    rbp
  41480e:	ret    
  41480f:	int3   
  414810:	rex.W push rbp
  414812:	sub    rsp,0x20
  414816:	mov    rbp,rdx
  414819:	mov    rcx,QWORD PTR [rbp+0x60]
  41481d:	add    rcx,0x170
  414824:	call   0x4176b4
  414829:	add    rsp,0x20
  41482d:	pop    rbp
  41482e:	ret    
  41482f:	int3   
  414830:	rex.W push rbp
  414832:	sub    rsp,0x20
  414836:	mov    rbp,rdx
  414839:	mov    rcx,QWORD PTR [rbp+0x60]
  41483d:	add    rcx,0x180
  414844:	call   0x4047cc
  414849:	add    rsp,0x20
  41484d:	pop    rbp
  41484e:	ret    
  41484f:	int3   
  414850:	rex.W push rbx
  414852:	push   rbp
  414853:	push   rsi
  414854:	push   rdi
  414855:	push   r12
  414857:	push   r13
  414859:	push   r14
  41485b:	push   r15
  41485d:	sub    rsp,0x28
  414861:	movsxd rdi,DWORD PTR [rcx+0x1c8]
  414868:	xor    r15d,r15d
  41486b:	mov    r14,r9
  41486e:	cmp    edi,r15d
  414871:	mov    r13,r8
  414874:	mov    r12,rdx
  414877:	mov    rbx,rcx
  41487a:	mov    rbp,rdi
  41487d:	je     0x4148af
  41487f:	shl    rbp,0x3
  414883:	mov    rax,QWORD PTR [rbx+0x1c0]
  41488a:	sub    rbp,0x8
  41488e:	add    edi,0xffffffff
  414891:	mov    rsi,QWORD PTR [rax+rbp*1]
  414895:	cmp    rsi,r15
  414898:	je     0x4148aa
  41489a:	mov    rcx,QWORD PTR [rsi]
  41489d:	call   0x40215c
  4148a2:	mov    rcx,rsi
  4148a5:	call   0x40215c
  4148aa:	cmp    edi,r15d
  4148ad:	jne    0x414883
  4148af:	mov    DWORD PTR [rbx+0x1c8],r15d
  4148b6:	mov    DWORD PTR [rbx+0x1d8],r15d
  4148bd:	mov    DWORD PTR [rbx+0x220],r15d
  4148c4:	movsxd rdi,DWORD PTR [rbx+0x230]
  4148cb:	cmp    edi,r15d
  4148ce:	mov    rbp,rdi
  4148d1:	je     0x414903
  4148d3:	shl    rbp,0x3
  4148d7:	mov    rax,QWORD PTR [rbx+0x228]
  4148de:	sub    rbp,0x8
  4148e2:	add    edi,0xffffffff
  4148e5:	mov    rsi,QWORD PTR [rax+rbp*1]
  4148e9:	cmp    rsi,r15
  4148ec:	je     0x4148fe
  4148ee:	mov    rcx,QWORD PTR [rsi]
  4148f1:	call   0x40215c
  4148f6:	mov    rcx,rsi
  4148f9:	call   0x40215c
  4148fe:	cmp    edi,r15d
  414901:	jne    0x4148d7
  414903:	mov    DWORD PTR [rbx+0x230],r15d
  41490a:	movsxd rdi,DWORD PTR [rbx+0x250]
  414911:	cmp    edi,r15d
  414914:	mov    rbp,rdi
  414917:	je     0x41494a
  414919:	shl    rbp,0x3
  41491d:	mov    rax,QWORD PTR [rbx+0x248]
  414924:	sub    rbp,0x8
  414928:	add    edi,0xffffffff
  41492b:	mov    rsi,QWORD PTR [rax+rbp*1]
  41492f:	cmp    rsi,r15
  414932:	je     0x414945
  414934:	mov    rcx,QWORD PTR [rsi+0x8]
  414938:	call   0x40215c
  41493d:	mov    rcx,rsi
  414940:	call   0x40215c
  414945:	cmp    edi,r15d
  414948:	jne    0x41491d
  41494a:	mov    rdi,QWORD PTR [rsp+0x90]
  414952:	mov    DWORD PTR [rbx+0x250],r15d
  414959:	mov    rax,QWORD PTR [r12]
  41495d:	cmp    rdi,r15
  414960:	mov    QWORD PTR [rbx+0x30],rax
  414964:	movzx  eax,WORD PTR [r12+0x8]
  41496a:	mov    WORD PTR [rbx+0x38],ax
  41496e:	mov    al,BYTE PTR [rsp+0x98]
  414975:	mov    QWORD PTR [rbx+0x40],r13
  414979:	mov    BYTE PTR [rbx+0x198],al
  41497f:	mov    al,BYTE PTR [rsp+0xa0]
  414986:	mov    BYTE PTR [rbx+0x1b8],0x1
  41498d:	mov    BYTE PTR [rbx+0x199],al
  414993:	mov    rax,QWORD PTR [rsp+0xc0]
  41499b:	mov    QWORD PTR [rbx+0x1a8],rax
  4149a2:	mov    QWORD PTR [rbx+0x1b0],rax
  4149a9:	je     0x4149b4
  4149ab:	mov    rax,QWORD PTR [rdi]
  4149ae:	mov    rcx,rdi
  4149b1:	call   QWORD PTR [rax+0x8]
  4149b4:	mov    rcx,QWORD PTR [rbx+0x48]
  4149b8:	cmp    rcx,r15
  4149bb:	je     0x4149c3
  4149bd:	mov    rax,QWORD PTR [rcx]
  4149c0:	call   QWORD PTR [rax+0x10]
  4149c3:	mov    QWORD PTR [rbx+0x48],rdi
  4149c7:	mov    rcx,QWORD PTR [rbx+0x50]
  4149cb:	cmp    rcx,r15
  4149ce:	je     0x4149da
  4149d0:	mov    rax,QWORD PTR [rcx]
  4149d3:	call   QWORD PTR [rax+0x10]
  4149d6:	mov    QWORD PTR [rbx+0x50],r15
  4149da:	mov    rcx,QWORD PTR [rbx+0x48]
  4149de:	lea    r8,[rbx+0x50]
  4149e2:	lea    rdx,[rip+0x3f3bf]        # 0x453da8
  4149e9:	mov    rax,QWORD PTR [rcx]
  4149ec:	call   QWORD PTR [rax]
  4149ee:	mov    rcx,QWORD PTR [rbx+0x48]
  4149f2:	lea    r8,[rbx+0x60]
  4149f6:	mov    rax,QWORD PTR [rcx]
  4149f9:	lea    rdx,[rip+0x3f498]        # 0x453e98
  414a00:	call   QWORD PTR [rax]
  414a02:	mov    rcx,QWORD PTR [rbx+0x48]
  414a06:	lea    r8,[rbx+0x68]
  414a0a:	mov    rax,QWORD PTR [rcx]
  414a0d:	lea    rdx,[rip+0x3f294]        # 0x453ca8
  414a14:	call   QWORD PTR [rax]
  414a16:	mov    rcx,QWORD PTR [rbx+0x48]
  414a1a:	lea    r8,[rbx+0x98]
  414a21:	mov    rax,QWORD PTR [rcx]
  414a24:	lea    rdx,[rip+0x3f25d]        # 0x453c88
  414a2b:	call   QWORD PTR [rax]
  414a2d:	mov    rcx,QWORD PTR [rbx+0x98]
  414a34:	cmp    rcx,r15
  414a37:	je     0x414a82
  414a39:	mov    DWORD PTR [rsp+0x98],r15d
  414a41:	mov    rax,QWORD PTR [rcx]
  414a44:	lea    rdx,[rsp+0x98]
  414a4c:	call   QWORD PTR [rax+0x18]
  414a4f:	mov    ecx,DWORD PTR [rsp+0x98]
  414a56:	cmp    eax,r15d
  414a59:	cmovne ecx,r15d
  414a5d:	cmp    ecx,r15d
  414a60:	mov    DWORD PTR [rsp+0x98],ecx
  414a67:	jne    0x414a82
  414a69:	mov    rcx,QWORD PTR [rbx+0x98]
  414a70:	cmp    rcx,r15
  414a73:	je     0x414a82
  414a75:	mov    rax,QWORD PTR [rcx]
  414a78:	call   QWORD PTR [rax+0x10]
  414a7b:	mov    QWORD PTR [rbx+0x98],r15
  414a82:	mov    rcx,QWORD PTR [rbx+0x1e8]
  414a89:	mov    r8b,0x1
  414a8c:	mov    rdx,rdi
  414a8f:	call   0x40e540
  414a94:	mov    r11,QWORD PTR [rbx+0x1e8]
  414a9b:	mov    rdx,QWORD PTR [rsp+0xb0]
  414aa3:	lea    rcx,[rbx+0x180]
  414aaa:	mov    BYTE PTR [r11+0x41],r15b
  414aae:	call   0x404df0
  414ab3:	mov    r11b,BYTE PTR [rsp+0xb8]
  414abb:	mov    rsi,QWORD PTR [rsp+0xa8]
  414ac3:	lea    rdi,[rbx+0x70]
  414ac7:	mov    rdx,rsi
  414aca:	mov    BYTE PTR [rbx+0x179],r11b
  414ad1:	mov    rcx,rdi
  414ad4:	mov    DWORD PTR [rbx+0x194],0xffffffff
  414ade:	mov    BYTE PTR [rbx+0x190],r15b
  414ae5:	mov    QWORD PTR [rbx+0x28],r14
  414ae9:	call   0x4032f8
  414aee:	sub    rbx,0xffffffffffffff80
  414af2:	mov    rcx,rbx
  414af5:	mov    rdx,rsi
  414af8:	call   0x4032f8
  414afd:	mov    rcx,QWORD PTR [rdi]
  414b00:	call   0x40adbc
  414b05:	cmp    al,r15b
  414b08:	jne    0x414b25
  414b0a:	mov    rcx,rdi
  414b0d:	call   0x409d6c
  414b12:	mov    rcx,QWORD PTR [rsi]
  414b15:	mov    rdx,rbx
  414b18:	call   0x4070b4
  414b1d:	mov    rcx,rbx
  414b20:	call   0x409d6c
  414b25:	add    rsp,0x28
  414b29:	pop    r15
  414b2b:	pop    r14
  414b2d:	pop    r13
  414b2f:	pop    r12
  414b31:	pop    rdi
  414b32:	pop    rsi
  414b33:	pop    rbp
  414b34:	pop    rbx
  414b35:	ret    
  414b36:	int3   
  414b37:	int3   
  414b38:	rex.W push rbx
  414b3a:	push   rbp
  414b3b:	push   rsi
  414b3c:	push   rdi
  414b3d:	push   r12
  414b3f:	push   r13
  414b41:	sub    rsp,0x48
  414b45:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  414b4e:	mov    rbp,r8
  414b51:	mov    rsi,rdx
  414b54:	mov    r13,rcx
  414b57:	xor    r12b,r12b
  414b5a:	cmp    BYTE PTR [rdx+0x43],r12b
  414b5e:	sete   r8b
  414b62:	mov    r9,rbp
  414b65:	add    rdx,0x10
  414b69:	call   0x4051bc
  414b6e:	mov    ebx,0x1
  414b73:	test   al,al
  414b75:	je     0x414b94
  414b77:	cmp    BYTE PTR [rbp+0x0],r12b
  414b7b:	jne    0x414b84
  414b7d:	mov    al,bl
  414b7f:	jmp    0x414cd8
  414b84:	cmp    BYTE PTR [rsi+0x40],0x0
  414b88:	jne    0x414b91
  414b8a:	mov    al,bl
  414b8c:	jmp    0x414cd8
  414b91:	mov    r12b,bl
  414b94:	cmp    BYTE PTR [rsi+0x40],0x0
  414b98:	jne    0x414ba1
  414b9a:	xor    al,al
  414b9c:	jmp    0x414cd8
  414ba1:	lea    rdx,[rsi+0x10]
  414ba5:	lea    rcx,[rsp+0x28]
  414baa:	call   0x404d18
  414baf:	nop
  414bb0:	mov    eax,DWORD PTR [rsp+0x30]
  414bb4:	test   eax,eax
  414bb6:	jne    0x414bea
  414bb8:	lea    ecx,[rax+0x10]
  414bbb:	call   0x402130
  414bc0:	mov    QWORD PTR [rsp+0x98],rax
  414bc8:	test   rax,rax
  414bcb:	je     0x414bd7
  414bcd:	mov    rcx,rax
  414bd0:	call   0x403150
  414bd5:	jmp    0x414bd9
  414bd7:	xor    eax,eax
  414bd9:	mov    rdx,rax
  414bdc:	lea    rcx,[rsp+0x28]
  414be1:	call   0x4010c8
  414be6:	mov    eax,DWORD PTR [rsp+0x30]
  414bea:	lea    ecx,[rax-0x1]
  414bed:	mov    rax,QWORD PTR [rsp+0x28]
  414bf2:	mov    rdi,QWORD PTR [rax+rcx*8]
  414bf6:	mov    eax,DWORD PTR [rdi+0x8]
  414bf9:	cmp    DWORD PTR [rdi+0xc],eax
  414bfc:	jne    0x414c06
  414bfe:	mov    rcx,rdi
  414c01:	call   0x402f2c
  414c06:	mov    r8d,DWORD PTR [rdi+0x8]
  414c0a:	mov    rdx,QWORD PTR [rdi]
  414c0d:	mov    WORD PTR [rdx+r8*2],0x3a
  414c14:	add    r8d,ebx
  414c17:	mov    WORD PTR [rdx+r8*2],0x0
  414c1e:	mov    DWORD PTR [rdi+0x8],r8d
  414c22:	lea    rdx,[rsi+0x30]
  414c26:	mov    rcx,rdi
  414c29:	call   0x403444
  414c2e:	lea    r9,[rsp+0x88]
  414c36:	mov    r8b,bl
  414c39:	lea    rdx,[rsp+0x28]
  414c3e:	mov    rcx,r13
  414c41:	call   0x4051bc
  414c46:	test   al,al
  414c48:	je     0x414c90
  414c4a:	mov    al,BYTE PTR [rsp+0x88]
  414c51:	mov    BYTE PTR [rbp+0x0],al
  414c54:	movsxd rdi,DWORD PTR [rsp+0x30]
  414c59:	mov    rsi,rdi
  414c5c:	test   edi,edi
  414c5e:	je     0x414ccc
  414c60:	shl    rsi,0x3
  414c64:	add    edi,0xffffffff
  414c67:	sub    rsi,0x8
  414c6b:	mov    rax,QWORD PTR [rsp+0x28]
  414c70:	mov    rbp,QWORD PTR [rsi+rax*1]
  414c74:	test   rbp,rbp
  414c77:	je     0x414c8a
  414c79:	mov    rcx,QWORD PTR [rbp+0x0]
  414c7d:	call   0x40215c
  414c82:	mov    rcx,rbp
  414c85:	call   0x40215c
  414c8a:	test   edi,edi
  414c8c:	jne    0x414c64
  414c8e:	jmp    0x414ccc
  414c90:	movsxd rbx,DWORD PTR [rsp+0x30]
  414c95:	mov    rdi,rbx
  414c98:	test   ebx,ebx
  414c9a:	je     0x414cc9
  414c9c:	shl    rdi,0x3
  414ca0:	add    ebx,0xffffffff
  414ca3:	sub    rdi,0x8
  414ca7:	mov    rax,QWORD PTR [rsp+0x28]
  414cac:	mov    rsi,QWORD PTR [rdi+rax*1]
  414cb0:	test   rsi,rsi
  414cb3:	je     0x414cc5
  414cb5:	mov    rcx,QWORD PTR [rsi]
  414cb8:	call   0x40215c
  414cbd:	mov    rcx,rsi
  414cc0:	call   0x40215c
  414cc5:	test   ebx,ebx
  414cc7:	jne    0x414ca0
  414cc9:	mov    bl,r12b
  414ccc:	mov    rcx,QWORD PTR [rsp+0x28]
  414cd1:	call   0x40215c
  414cd6:	mov    al,bl
  414cd8:	add    rsp,0x48
  414cdc:	pop    r13
  414cde:	pop    r12
  414ce0:	pop    rdi
  414ce1:	pop    rsi
  414ce2:	pop    rbp
  414ce3:	pop    rbx
  414ce4:	ret    
  414ce5:	int3   
  414ce6:	int3   
  414ce7:	int3   
  414ce8:	rex.W push rbp
  414cea:	sub    rsp,0x20
  414cee:	mov    rbp,rdx
  414cf1:	lea    rcx,[rbp+0x28]
  414cf5:	call   0x4047cc
  414cfa:	add    rsp,0x20
  414cfe:	pop    rbp
  414cff:	ret    
  414d00:	int3   
  414d01:	int3   
  414d02:	int3   
  414d03:	int3   
  414d04:	int3   
  414d05:	int3   
  414d06:	int3   
  414d07:	int3   
  414d08:	rex.W push rbp
  414d0a:	sub    rsp,0x20
  414d0e:	mov    rbp,rdx
  414d11:	mov    rcx,QWORD PTR [rbp+0x98]
  414d18:	call   0x40215c
  414d1d:	add    rsp,0x20
  414d21:	pop    rbp
  414d22:	ret    
  414d23:	int3   
  414d24:	sub    rsp,0x28
  414d28:	lea    r8,[rsp+0x40]
  414d2d:	call   0x414b38
  414d32:	neg    al
  414d34:	sbb    al,al
  414d36:	and    al,BYTE PTR [rsp+0x40]
  414d3a:	add    rsp,0x28
  414d3e:	ret    
  414d3f:	int3   
  414d40:	mov    DWORD PTR [rsp+0x20],r9d
  414d45:	mov    QWORD PTR [rsp+0x18],r8
  414d4a:	mov    DWORD PTR [rsp+0x10],edx
  414d4e:	push   rbx
  414d4f:	push   rsi
  414d50:	push   rdi
  414d51:	push   r12
  414d53:	push   r13
  414d55:	push   r14
  414d57:	push   r15
  414d59:	sub    rsp,0x170
  414d60:	mov    QWORD PTR [rsp+0x130],0xfffffffffffffffe
  414d6c:	mov    r15d,edx
  414d6f:	mov    rsi,rcx
  414d72:	xor    edi,edi
  414d74:	mov    QWORD PTR [r8],rdi
  414d77:	cmp    QWORD PTR [rcx+0x170],rdi
  414d7e:	je     0x414d9a
  414d80:	mov    rbx,QWORD PTR [rcx+0x168]
  414d87:	mov    rcx,QWORD PTR [rbx+0x10]
  414d8b:	cmp    rcx,rdi
  414d8e:	je     0x414d9a
  414d90:	mov    rax,QWORD PTR [rcx]
  414d93:	call   QWORD PTR [rax+0x10]
  414d96:	mov    QWORD PTR [rbx+0x10],rdi
  414d9a:	mov    BYTE PTR [rsi+0x178],dil
  414da1:	mov    rcx,QWORD PTR [rsi+0x160]
  414da8:	cmp    rcx,rdi
  414dab:	je     0x414dba
  414dad:	mov    rax,QWORD PTR [rcx]
  414db0:	call   QWORD PTR [rax+0x10]
  414db3:	mov    QWORD PTR [rsi+0x160],rdi
  414dba:	mov    BYTE PTR [rsi+0x11d],dil
  414dc1:	mov    QWORD PTR [rsi+0x110],rdi
  414dc8:	mov    BYTE PTR [rsi+0x118],dil
  414dcf:	mov    QWORD PTR [rsi+0x148],rdi
  414dd6:	mov    BYTE PTR [rsi+0x150],dil
  414ddd:	mov    DWORD PTR [rsi+0x140],r15d
  414de4:	mov    DWORD PTR [rsi+0x108],edi
  414dea:	mov    rax,QWORD PTR [rsi+0x100]
  414df1:	mov    WORD PTR [rax],di
  414df4:	mov    DWORD PTR [rsi+0x240],edi
  414dfa:	mov    rax,QWORD PTR [rsi+0x238]
  414e01:	mov    WORD PTR [rax],di
  414e04:	mov    rcx,QWORD PTR [rsi+0x28]
  414e08:	mov    r14,QWORD PTR [rcx]
  414e0b:	mov    QWORD PTR [rsp+0x128],r14
  414e13:	mov    al,BYTE PTR [rsi+0x190]
  414e19:	mov    BYTE PTR [rsi+0xf8],al
  414e1f:	cmp    al,dil
  414e22:	je     0x414e49
  414e24:	mov    eax,DWORD PTR [rsi+0x194]
  414e2a:	mov    DWORD PTR [rsi+0xfc],eax
  414e30:	mov    eax,DWORD PTR [rsi+0x90]
  414e36:	cmp    eax,edi
  414e38:	je     0x414e3f
  414e3a:	cmp    eax,0x3
  414e3d:	jne    0x414e49
  414e3f:	mov    DWORD PTR [rsi+0xfc],0xffffffff
  414e49:	mov    al,BYTE PTR [rsi+0x39]
  414e4c:	mov    BYTE PTR [rsi+0xf1],al
  414e52:	lea    r8,[rsi+0xb0]
  414e59:	mov    edx,r15d
  414e5c:	call   0x42d1f4
  414e61:	cmp    eax,edi
  414e63:	jne    0x416e48
  414e69:	mov    WORD PTR [rsp+0x48],di
  414e6e:	mov    WORD PTR [rsp+0x4a],di
  414e73:	mov    QWORD PTR [rsp+0x50],rdi
  414e78:	mov    rax,QWORD PTR [r14]
  414e7b:	lea    r9,[rsp+0x48]
  414e80:	mov    r8d,0x1d
  414e86:	mov    edx,r15d
  414e89:	mov    rcx,r14
  414e8c:	call   QWORD PTR [rax+0x30]
  414e8f:	mov    r12d,eax
  414e92:	cmp    eax,edi
  414e94:	je     0x414ea8
  414e96:	lea    rcx,[rsp+0x48]
  414e9b:	call   0x40b028
  414ea0:	mov    eax,r12d
  414ea3:	jmp    0x416e48
  414ea8:	cmp    WORD PTR [rsp+0x48],di
  414ead:	je     0x414ede
  414eaf:	cmp    WORD PTR [rsp+0x48],0x15
  414eb5:	je     0x414ecb
  414eb7:	lea    rcx,[rsp+0x48]
  414ebc:	call   0x40b028
  414ec1:	mov    eax,0x80004005
  414ec6:	jmp    0x416e48
  414ecb:	mov    rax,QWORD PTR [rsp+0x50]
  414ed0:	mov    QWORD PTR [rsi+0x110],rax
  414ed7:	mov    BYTE PTR [rsi+0x118],0x1
  414ede:	lea    rcx,[rsp+0x48]
  414ee3:	call   0x40b028
  414ee8:	mov    BYTE PTR [rsp+0x41],dil
  414eed:	mov    BYTE PTR [rsp+0x70],dil
  414ef2:	mov    r13b,dil
  414ef5:	mov    BYTE PTR [rsp+0x40],dil
  414efa:	mov    WORD PTR [rsp+0x48],di
  414eff:	mov    WORD PTR [rsp+0x4a],di
  414f04:	mov    QWORD PTR [rsp+0x50],rdi
  414f09:	mov    rax,QWORD PTR [r14]
  414f0c:	lea    r9,[rsp+0x48]
  414f11:	mov    r8d,0x5a
  414f17:	mov    edx,r15d
  414f1a:	mov    rcx,r14
  414f1d:	call   QWORD PTR [rax+0x30]
  414f20:	mov    r12d,eax
  414f23:	cmp    eax,edi
  414f25:	je     0x414f39
  414f27:	lea    rcx,[rsp+0x48]
  414f2c:	call   0x40b028
  414f31:	mov    eax,r12d
  414f34:	jmp    0x416e48
  414f39:	cmp    WORD PTR [rsp+0x48],0x8
  414f3f:	jne    0x414f61
  414f41:	mov    BYTE PTR [rsp+0x41],0x1
  414f46:	mov    r13b,dil
  414f49:	mov    BYTE PTR [rsp+0x40],dil
  414f4e:	mov    rdx,QWORD PTR [rsp+0x50]
  414f53:	lea    rcx,[rsi+0x238]
  414f5a:	call   0x403354
  414f5f:	jmp    0x414f7c
  414f61:	cmp    WORD PTR [rsp+0x48],di
  414f66:	je     0x414f7c
  414f68:	lea    rcx,[rsp+0x48]
  414f6d:	call   0x40b028
  414f72:	mov    eax,0x80004005
  414f77:	jmp    0x416e48
  414f7c:	lea    rcx,[rsp+0x48]
  414f81:	call   0x40b028
  414f86:	mov    WORD PTR [rsp+0x48],di
  414f8b:	mov    WORD PTR [rsp+0x4a],di
  414f90:	mov    QWORD PTR [rsp+0x50],rdi
  414f95:	mov    rax,QWORD PTR [r14]
  414f98:	lea    r9,[rsp+0x48]
  414f9d:	mov    r8d,0x36
  414fa3:	mov    edx,r15d
  414fa6:	mov    rcx,r14
  414fa9:	call   QWORD PTR [rax+0x30]
  414fac:	mov    r12d,eax
  414faf:	cmp    eax,edi
  414fb1:	je     0x414fc5
  414fb3:	lea    rcx,[rsp+0x48]
  414fb8:	call   0x40b028
  414fbd:	mov    eax,r12d
  414fc0:	jmp    0x416e48
  414fc5:	cmp    WORD PTR [rsp+0x48],0x8
  414fcb:	jne    0x414fed
  414fcd:	mov    BYTE PTR [rsp+0x41],dil
  414fd2:	mov    r13b,0x1
  414fd5:	mov    BYTE PTR [rsp+0x40],r13b
  414fda:	mov    rdx,QWORD PTR [rsp+0x50]
  414fdf:	lea    rcx,[rsi+0x238]
  414fe6:	call   0x403354
  414feb:	jmp    0x415008
  414fed:	cmp    WORD PTR [rsp+0x48],di
  414ff2:	je     0x415008
  414ff4:	lea    rcx,[rsp+0x48]
  414ff9:	call   0x40b028
  414ffe:	mov    eax,0x80004005
  415003:	jmp    0x416e48
  415008:	lea    rcx,[rsp+0x48]
  41500d:	call   0x40b028
  415012:	cmp    DWORD PTR [rsi+0x240],edi
  415018:	jne    0x415154
  41501e:	mov    rcx,QWORD PTR [rsi+0x28]
  415022:	cmp    QWORD PTR [rcx+0x10],rdi
  415026:	je     0x415154
  41502c:	mov    rcx,QWORD PTR [rcx+0x10]
  415030:	mov    rax,QWORD PTR [rcx]
  415033:	lea    rdx,[rsp+0xb8]
  41503b:	mov    QWORD PTR [rsp+0x28],rdx
  415040:	lea    rdx,[rsp+0x1b0]
  415048:	mov    QWORD PTR [rsp+0x20],rdx
  41504d:	lea    r9,[rsp+0xa8]
  415055:	mov    r8d,0x59
  41505b:	mov    edx,DWORD PTR [rsi+0x140]
  415061:	call   QWORD PTR [rax+0x20]
  415064:	cmp    DWORD PTR [rsp+0x1b0],edi
  41506b:	je     0x415154
  415071:	cmp    DWORD PTR [rsp+0xb8],0x1
  415079:	je     0x415085
  41507b:	mov    eax,0x80004005
  415080:	jmp    0x416e48
  415085:	lea    rcx,[rsp+0x78]
  41508a:	call   0x403150
  41508f:	nop
  415090:	mov    DWORD PTR [rsp+0xc0],edi
  415097:	mov    DWORD PTR [rsp+0xc4],edi
  41509e:	lea    rcx,[rsp+0xc8]
  4150a6:	call   0x403150
  4150ab:	nop
  4150ac:	lea    rcx,[rsp+0xd8]
  4150b4:	call   0x403150
  4150b9:	nop
  4150ba:	mov    r8d,DWORD PTR [rsp+0x1b0]
  4150c2:	mov    rdx,QWORD PTR [rsp+0xa8]
  4150ca:	lea    rcx,[rsp+0xc0]
  4150d2:	call   0x409564
  4150d7:	cmp    al,dil
  4150da:	je     0x41512f
  4150dc:	mov    BYTE PTR [rsp+0x41],dil
  4150e1:	lea    rdx,[rsp+0x48]
  4150e6:	lea    rcx,[rsp+0xc0]
  4150ee:	call   0x4096c8
  4150f3:	nop
  4150f4:	mov    rdx,rax
  4150f7:	lea    rcx,[rsi+0x238]
  4150fe:	call   0x4032f8
  415103:	nop
  415104:	mov    rcx,QWORD PTR [rsp+0x48]
  415109:	call   0x40215c
  41510e:	cmp    DWORD PTR [rsp+0xc0],0xa0000003
  415119:	sete   BYTE PTR [rsp+0x70]
  41511e:	cmp    DWORD PTR [rsp+0xc4],0x1
  415126:	sete   r13b
  41512a:	mov    BYTE PTR [rsp+0x40],r13b
  41512f:	mov    rcx,QWORD PTR [rsp+0xd8]
  415137:	call   0x40215c
  41513c:	mov    rcx,QWORD PTR [rsp+0xc8]
  415144:	call   0x40215c
  415149:	nop
  41514a:	mov    rcx,QWORD PTR [rsp+0x78]
  41514f:	call   0x40215c
  415154:	cmp    DWORD PTR [rsi+0x240],edi
  41515a:	je     0x4151ca
  41515c:	mov    r8w,0x5c
  415161:	mov    dx,0x2f
  415165:	lea    rcx,[rsi+0x238]
  41516c:	call   0x403a1c
  415171:	lea    rdx,[rip+0x38b48]        # 0x44dcc0
  415178:	mov    rcx,QWORD PTR [rsi+0x238]
  41517f:	call   0x4028bc
  415184:	cmp    al,dil
  415187:	je     0x4151a2
  415189:	mov    r13b,dil
  41518c:	mov    BYTE PTR [rsp+0x40],dil
  415191:	mov    edx,0x4
  415196:	lea    rcx,[rsi+0x238]
  41519d:	call   0x4037d8
  4151a2:	mov    rcx,QWORD PTR [rsi+0x238]
  4151a9:	call   0x40a168
  4151ae:	cmp    eax,edi
  4151b0:	je     0x4151ca
  4151b2:	mov    r13b,dil
  4151b5:	mov    BYTE PTR [rsp+0x40],dil
  4151ba:	mov    edx,eax
  4151bc:	lea    rcx,[rsi+0x238]
  4151c3:	call   0x4037d8
  4151c8:	jmp    0x4151a2
  4151ca:	cmp    DWORD PTR [rsi+0x240],edi
  4151d0:	je     0x4152d8
  4151d6:	cmp    r13b,dil
  4151d9:	jne    0x4152d8
  4151df:	cmp    DWORD PTR [rsi+0x188],edi
  4151e5:	je     0x4152d8
  4151eb:	mov    QWORD PTR [rsp+0x78],rdi
  4151f0:	mov    DWORD PTR [rsp+0x80],edi
  4151f7:	mov    DWORD PTR [rsp+0x84],edi
  4151fe:	lea    rdx,[rsp+0x78]
  415203:	lea    rcx,[rsi+0x238]
  41520a:	call   0x405010
  41520f:	mov    ebx,edi
  415211:	mov    DWORD PTR [rsp+0x118],edi
  415218:	cmp    ebx,DWORD PTR [rsi+0x188]
  41521e:	jae    0x415251
  415220:	mov    r8d,ebx
  415223:	mov    rax,QWORD PTR [rsp+0x78]
  415228:	mov    rcx,QWORD PTR [rax+r8*8]
  41522c:	mov    rdx,QWORD PTR [rcx]
  41522f:	mov    rax,QWORD PTR [rsi+0x180]
  415236:	mov    rcx,QWORD PTR [rax+r8*8]
  41523a:	mov    rcx,QWORD PTR [rcx]
  41523d:	call   0x4042ec
  415242:	cmp    eax,edi
  415244:	jne    0x415266
  415246:	inc    ebx
  415248:	mov    DWORD PTR [rsp+0x118],ebx
  41524f:	jmp    0x415218
  415251:	cmp    dil,dil
  415254:	jne    0x415266
  415256:	mov    edx,DWORD PTR [rsi+0x188]
  41525c:	lea    rcx,[rsp+0x78]
  415261:	call   0x4139d0
  415266:	lea    rdx,[rsp+0x78]
  41526b:	lea    rcx,[rsp+0x48]
  415270:	call   0x424ca8
  415275:	nop
  415276:	lea    rcx,[rsi+0x238]
  41527d:	mov    rdx,rax
  415280:	call   0x4032f8
  415285:	nop
  415286:	mov    rcx,QWORD PTR [rsp+0x48]
  41528b:	call   0x40215c
  415290:	nop
  415291:	mov    ebx,DWORD PTR [rsp+0x80]
  415298:	mov    DWORD PTR [rsp+0x10c],ebx
  41529f:	mov    rcx,QWORD PTR [rsp+0x78]
  4152a4:	cmp    ebx,edi
  4152a6:	je     0x4152d3
  4152a8:	add    ebx,0xffffffff
  4152ab:	mov    DWORD PTR [rsp+0x10c],ebx
  4152b2:	mov    r12,QWORD PTR [rcx+rbx*8]
  4152b6:	cmp    r12,rdi
  4152b9:	je     0x4152a4
  4152bb:	mov    rcx,QWORD PTR [r12]
  4152bf:	call   0x40215c
  4152c4:	mov    rcx,r12
  4152c7:	call   0x40215c
  4152cc:	mov    rcx,QWORD PTR [rsp+0x78]
  4152d1:	jmp    0x4152a4
  4152d3:	call   0x40215c
  4152d8:	lea    r9,[rsi+0x11d]
  4152df:	mov    r8d,0xf
  4152e5:	mov    edx,r15d
  4152e8:	mov    rcx,r14
  4152eb:	call   0x429798
  4152f0:	cmp    eax,edi
  4152f2:	jne    0x416e48
  4152f8:	lea    r9,[rsi+0x150]
  4152ff:	lea    r8,[rsi+0x148]
  415306:	mov    edx,DWORD PTR [rsi+0x140]
  41530c:	mov    rcx,QWORD PTR [rsi+0x28]
  415310:	call   0x42aad0
  415315:	cmp    eax,edi
  415317:	jne    0x416e48
  41531d:	cmp    BYTE PTR [rsi+0x36],dil
  415321:	jne    0x415333
  415323:	cmp    BYTE PTR [rsi+0xf0],dil
  41532a:	je     0x415333
  41532c:	xor    eax,eax
  41532e:	jmp    0x416e48
  415333:	lea    r14,[rsi+0xc0]
  41533a:	mov    rcx,QWORD PTR [rsi+0x40]
  41533e:	cmp    rcx,rdi
  415341:	je     0x41536e
  415343:	lea    rdx,[rsi+0xb0]
  41534a:	lea    r8,[rsp+0x1b0]
  415352:	call   0x414b38
  415357:	neg    al
  415359:	sbb    al,al
  41535b:	and    al,BYTE PTR [rsp+0x1b0]
  415362:	cmp    al,dil
  415365:	jne    0x41536e
  415367:	xor    eax,eax
  415369:	jmp    0x416e48
  41536e:	cmp    BYTE PTR [rsi+0x190],dil
  415375:	je     0x4153bf
  415377:	mov    ecx,DWORD PTR [r14+0x8]
  41537b:	cmp    ecx,edi
  41537d:	je     0x41556c
  415383:	mov    edx,edi
  415385:	mov    eax,DWORD PTR [rsi+0x90]
  41538b:	cmp    eax,0x4
  41538e:	jne    0x41539d
  415390:	cmp    BYTE PTR [rsi+0xf0],dil
  415397:	je     0x41539d
  415399:	mov    edx,ecx
  41539b:	jmp    0x4153aa
  41539d:	cmp    eax,0x2
  4153a0:	je     0x4153a7
  4153a2:	cmp    eax,0x4
  4153a5:	jne    0x4153aa
  4153a7:	lea    edx,[rcx-0x1]
  4153aa:	mov    rcx,r14
  4153ad:	call   0x4139d0
  4153b2:	mov    r12d,DWORD PTR [rsp+0x1c8]
  4153ba:	jmp    0x415574
  4153bf:	mov    eax,DWORD PTR [r14+0x8]
  4153c3:	cmp    eax,edi
  4153c5:	jne    0x4153d7
  4153c7:	cmp    BYTE PTR [rsi+0xf2],dil
  4153ce:	je     0x4153d7
  4153d0:	xor    eax,eax
  4153d2:	jmp    0x416e48
  4153d7:	mov    ebx,edi
  4153d9:	mov    DWORD PTR [rsp+0xa4],edi
  4153e0:	mov    ecx,DWORD PTR [rsi+0x90]
  4153e6:	cmp    ecx,edi
  4153e8:	jl     0x415530
  4153ee:	cmp    ecx,0x1
  4153f1:	jle    0x41545e
  4153f3:	cmp    ecx,0x2
  4153f6:	je     0x41543f
  4153f8:	cmp    ecx,0x4
  4153fb:	jne    0x415558
  415401:	cmp    BYTE PTR [rsi+0xf0],dil
  415408:	je     0x415420
  41540a:	mov    ebx,eax
  41540c:	mov    DWORD PTR [rsp+0xa4],eax
  415413:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41541b:	jmp    0x415560
  415420:	cmp    eax,edi
  415422:	je     0x41554e
  415428:	lea    ebx,[rax-0x1]
  41542b:	mov    DWORD PTR [rsp+0xa4],ebx
  415432:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41543a:	jmp    0x415560
  41543f:	cmp    eax,edi
  415441:	je     0x415544
  415447:	lea    ebx,[rax-0x1]
  41544a:	mov    DWORD PTR [rsp+0xa4],ebx
  415451:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415459:	jmp    0x415560
  41545e:	mov    ecx,DWORD PTR [rsi+0x188]
  415464:	cmp    ecx,edi
  415466:	je     0x41553a
  41546c:	mov    BYTE PTR [rsp+0x42],dil
  415471:	cmp    eax,ecx
  415473:	jae    0x41547c
  415475:	mov    BYTE PTR [rsp+0x42],0x1
  41547a:	jmp    0x4154f9
  41547c:	cmp    eax,ecx
  41547e:	jne    0x4154a9
  415480:	cmp    BYTE PTR [rsi+0x179],dil
  415487:	je     0x415499
  415489:	cmp    BYTE PTR [rsi+0xf0],dil
  415490:	jne    0x4154a9
  415492:	mov    BYTE PTR [rsp+0x42],0x1
  415497:	jmp    0x4154f9
  415499:	cmp    BYTE PTR [rsi+0xf3],dil
  4154a0:	jne    0x4154a9
  4154a2:	mov    BYTE PTR [rsp+0x42],0x1
  4154a7:	jmp    0x4154f9
  4154a9:	mov    r12d,edi
  4154ac:	mov    DWORD PTR [rsp+0x108],edi
  4154b3:	cmp    r12d,DWORD PTR [rsi+0x188]
  4154ba:	jae    0x4154f4
  4154bc:	mov    r8d,r12d
  4154bf:	mov    rax,QWORD PTR [r14]
  4154c2:	mov    rcx,QWORD PTR [rax+r8*8]
  4154c6:	mov    rdx,QWORD PTR [rcx]
  4154c9:	mov    rax,QWORD PTR [rsi+0x180]
  4154d0:	mov    rcx,QWORD PTR [rax+r8*8]
  4154d4:	mov    rcx,QWORD PTR [rcx]
  4154d7:	call   0x4042ec
  4154dc:	cmp    eax,edi
  4154de:	je     0x4154e7
  4154e0:	mov    BYTE PTR [rsp+0x42],0x1
  4154e5:	jmp    0x4154f9
  4154e7:	inc    r12d
  4154ea:	mov    DWORD PTR [rsp+0x108],r12d
  4154f2:	jmp    0x4154b3
  4154f4:	cmp    dil,dil
  4154f7:	je     0x415519
  4154f9:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415501:	cmp    r12d,edi
  415504:	jne    0x415560
  415506:	cmp    BYTE PTR [rsi+0x199],dil
  41550d:	jne    0x415560
  41550f:	mov    eax,0x80004005
  415514:	jmp    0x416e48
  415519:	mov    ebx,DWORD PTR [rsi+0x188]
  41551f:	mov    DWORD PTR [rsp+0xa4],ebx
  415526:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41552e:	jmp    0x415560
  415530:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415538:	jmp    0x415560
  41553a:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415542:	jmp    0x415560
  415544:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41554c:	jmp    0x415560
  41554e:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415556:	jmp    0x415560
  415558:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415560:	mov    edx,ebx
  415562:	mov    rcx,r14
  415565:	call   0x4139d0
  41556a:	jmp    0x415574
  41556c:	mov    r12d,DWORD PTR [rsp+0x1c8]
  415574:	cmp    QWORD PTR [rsi+0x98],rdi
  41557b:	je     0x4156be
  415581:	cmp    QWORD PTR [rsi+0xa8],rdi
  415588:	jne    0x4155dc
  41558a:	mov    ecx,0x20
  41558f:	call   0x402130
  415594:	mov    rbx,rax
  415597:	cmp    rax,rdi
  41559a:	je     0x4155ab
  41559c:	mov    DWORD PTR [rax+0x8],edi
  41559f:	lea    rax,[rip+0x39732]        # 0x44ecd8
  4155a6:	mov    QWORD PTR [rbx],rax
  4155a9:	jmp    0x4155ae
  4155ab:	mov    rbx,rdi
  4155ae:	mov    QWORD PTR [rsi+0xa0],rbx
  4155b5:	cmp    rbx,rdi
  4155b8:	je     0x4155c3
  4155ba:	mov    rax,QWORD PTR [rbx]
  4155bd:	mov    rcx,rbx
  4155c0:	call   QWORD PTR [rax+0x8]
  4155c3:	mov    rcx,QWORD PTR [rsi+0xa8]
  4155ca:	cmp    rcx,rdi
  4155cd:	je     0x4155d5
  4155cf:	mov    rax,QWORD PTR [rcx]
  4155d2:	call   QWORD PTR [rax+0x10]
  4155d5:	mov    QWORD PTR [rsi+0xa8],rbx
  4155dc:	mov    rcx,QWORD PTR [rsi+0xa0]
  4155e3:	mov    rax,QWORD PTR [rsi+0x28]
  4155e7:	mov    QWORD PTR [rcx+0x10],rax
  4155eb:	mov    rax,QWORD PTR [rsi+0xa0]
  4155f2:	mov    DWORD PTR [rax+0x18],r15d
  4155f6:	mov    rdx,r14
  4155f9:	lea    rcx,[rsp+0x78]
  4155fe:	call   0x424ca8
  415603:	nop
  415604:	cmp    BYTE PTR [rsi+0xf0],dil
  41560b:	je     0x415671
  41560d:	cmp    DWORD PTR [r14+0x8],edi
  415611:	jne    0x415625
  415613:	cmp    BYTE PTR [rsi+0x179],dil
  41561a:	jne    0x415660
  41561c:	cmp    DWORD PTR [rsi+0x90],0x4
  415623:	je     0x415660
  415625:	mov    edx,DWORD PTR [rsp+0x80]
  41562c:	cmp    DWORD PTR [rsp+0x84],edx
  415633:	jne    0x415646
  415635:	lea    rcx,[rsp+0x78]
  41563a:	call   0x402f2c
  41563f:	mov    edx,DWORD PTR [rsp+0x80]
  415646:	mov    rcx,QWORD PTR [rsp+0x78]
  41564b:	mov    eax,edx
  41564d:	mov    WORD PTR [rcx+rax*2],0x3a
  415653:	inc    edx
  415655:	mov    WORD PTR [rcx+rdx*2],di
  415659:	mov    DWORD PTR [rsp+0x80],edx
  415660:	lea    rdx,[rsi+0xe0]
  415667:	lea    rcx,[rsp+0x78]
  41566c:	call   0x403444
  415671:	mov    rcx,QWORD PTR [rsi+0x98]
  415678:	mov    rax,QWORD PTR [rsi+0xa8]
  41567f:	cmp    BYTE PTR [rsi+0xf2],dil
  415686:	setne  dil
  41568a:	mov    r10,QWORD PTR [rcx]
  41568d:	mov    QWORD PTR [rsp+0x28],rax
  415692:	mov    DWORD PTR [rsp+0x20],r12d
  415697:	mov    r9,QWORD PTR [rsp+0x1c0]
  41569f:	mov    r8d,edi
  4156a2:	mov    rdx,QWORD PTR [rsp+0x78]
  4156a7:	call   QWORD PTR [r10+0x20]
  4156ab:	mov    ebx,eax
  4156ad:	mov    rcx,QWORD PTR [rsp+0x78]
  4156b2:	call   0x40215c
  4156b7:	mov    eax,ebx
  4156b9:	jmp    0x416e48
  4156be:	mov    rbx,rdi
  4156c1:	mov    QWORD PTR [rsp+0xf8],rdi
  4156c9:	mov    eax,DWORD PTR [rsp+0x1c8]
  4156d0:	cmp    eax,edi
  4156d2:	jne    0x416d81
  4156d8:	cmp    BYTE PTR [rsi+0x199],dil
  4156df:	jne    0x416d81
  4156e5:	cmp    BYTE PTR [rsi+0x198],dil
  4156ec:	je     0x415738
  4156ee:	mov    ecx,0x18
  4156f3:	call   0x402130
  4156f8:	mov    rbx,rax
  4156fb:	cmp    rax,rdi
  4156fe:	je     0x415713
  415700:	mov    DWORD PTR [rax+0x8],edi
  415703:	lea    rax,[rip+0x3964e]        # 0x44ed58
  41570a:	mov    QWORD PTR [rbx],rax
  41570d:	mov    QWORD PTR [rbx+0x10],rdi
  415711:	jmp    0x415716
  415713:	mov    rbx,rdi
  415716:	cmp    rbx,rdi
  415719:	je     0x415724
  41571b:	mov    rax,QWORD PTR [rbx]
  41571e:	mov    rcx,rbx
  415721:	call   QWORD PTR [rax+0x8]
  415724:	mov    QWORD PTR [rsp+0xf8],rbx
  41572c:	mov    eax,DWORD PTR [rsp+0x1c8]
  415733:	jmp    0x416d81
  415738:	mov    WORD PTR [rsp+0x48],di
  41573d:	mov    WORD PTR [rsp+0x4a],di
  415742:	mov    QWORD PTR [rsp+0x50],rdi
  415747:	mov    rcx,QWORD PTR [rsp+0x128]
  41574f:	mov    rax,QWORD PTR [rcx]
  415752:	lea    r9,[rsp+0x48]
  415757:	mov    r8d,0x9
  41575d:	mov    edx,r15d
  415760:	call   QWORD PTR [rax+0x30]
  415763:	mov    r12d,eax
  415766:	cmp    eax,edi
  415768:	je     0x41577d
  41576a:	lea    rcx,[rsp+0x48]
  41576f:	call   0x40b028
  415774:	nop
  415775:	mov    eax,r12d
  415778:	jmp    0x416e48
  41577d:	cmp    WORD PTR [rsp+0x48],0x13
  415783:	jne    0x415798
  415785:	mov    eax,DWORD PTR [rsp+0x50]
  415789:	mov    DWORD PTR [rsi+0x138],eax
  41578f:	mov    BYTE PTR [rsi+0x13f],0x1
  415796:	jmp    0x4157aa
  415798:	cmp    WORD PTR [rsp+0x48],di
  41579d:	jne    0x416d6c
  4157a3:	mov    BYTE PTR [rsi+0x13f],dil
  4157aa:	lea    rcx,[rsp+0x48]
  4157af:	call   0x40b028
  4157b4:	lea    rcx,[rsi+0x13c]
  4157bb:	mov    QWORD PTR [rsp+0x20],rcx
  4157c0:	lea    r9,[rsi+0x120]
  4157c7:	mov    r8d,0xa
  4157cd:	mov    edx,r15d
  4157d0:	mov    rcx,rsi
  4157d3:	call   0x4129a0
  4157d8:	cmp    eax,edi
  4157da:	je     0x4157e1
  4157dc:	jmp    0x416e48
  4157e1:	lea    r13,[rsi+0x13d]
  4157e8:	mov    QWORD PTR [rsp+0x20],r13
  4157ed:	lea    r9,[rsi+0x128]
  4157f4:	mov    r8d,0xb
  4157fa:	mov    edx,r15d
  4157fd:	mov    rcx,rsi
  415800:	call   0x4129a0
  415805:	cmp    eax,edi
  415807:	je     0x41580e
  415809:	jmp    0x416e48
  41580e:	lea    r15,[rsi+0x13e]
  415815:	lea    r9,[rsi+0x130]
  41581c:	mov    QWORD PTR [rsp+0x20],r15
  415821:	mov    r8d,0xc
  415827:	mov    r12d,DWORD PTR [rsp+0x1b8]
  41582f:	mov    edx,r12d
  415832:	mov    rcx,rsi
  415835:	call   0x4129a0
  41583a:	cmp    eax,edi
  41583c:	je     0x415843
  41583e:	jmp    0x416e48
  415843:	mov    BYTE PTR [rsp+0x1b0],dil
  41584b:	mov    rax,QWORD PTR [rsi+0x28]
  41584f:	lea    r9,[rsp+0x1b0]
  415857:	mov    r8d,0x15
  41585d:	mov    edx,r12d
  415860:	mov    rcx,QWORD PTR [rax]
  415863:	call   0x429798
  415868:	cmp    eax,edi
  41586a:	je     0x415871
  41586c:	jmp    0x416e48
  415871:	cmp    BYTE PTR [rsi+0xf0],dil
  415878:	je     0x415892
  41587a:	cmp    DWORD PTR [r14+0x8],edi
  41587e:	jne    0x415892
  415880:	cmp    BYTE PTR [rsi+0x179],dil
  415887:	jne    0x4158ab
  415889:	cmp    DWORD PTR [rsi+0x90],0x4
  415890:	je     0x4158ab
  415892:	cmp    DWORD PTR [rsi+0x90],0x3
  415899:	sete   cl
  41589c:	mov    r8b,BYTE PTR [rsi+0xf3]
  4158a3:	mov    rdx,r14
  4158a6:	call   0x424d60
  4158ab:	cmp    BYTE PTR [rsi+0xf0],dil
  4158b2:	je     0x4159ec
  4158b8:	lea    rdx,[rsi+0xe0]
  4158bf:	lea    rcx,[rsp+0x48]
  4158c4:	call   0x403208
  4158c9:	nop
  4158ca:	lea    rcx,[rsp+0x48]
  4158cf:	call   0x424a44
  4158d4:	mov    r13b,0x1
  4158d7:	mov    BYTE PTR [rsp+0xa0],r13b
  4158df:	mov    r12d,DWORD PTR [r14+0x8]
  4158e3:	cmp    r12d,edi
  4158e6:	jne    0x415936
  4158e8:	mov    ecx,0x10
  4158ed:	call   0x402130
  4158f2:	mov    QWORD PTR [rsp+0xa8],rax
  4158fa:	cmp    rax,rdi
  4158fd:	je     0x415909
  4158ff:	mov    rcx,rax
  415902:	call   0x403150
  415907:	jmp    0x41590c
  415909:	mov    rax,rdi
  41590c:	mov    rdx,rax
  41590f:	mov    rcx,r14
  415912:	call   0x4010c8
  415917:	cmp    BYTE PTR [rsi+0x179],dil
  41591e:	jne    0x415929
  415920:	cmp    DWORD PTR [rsi+0x90],0x4
  415927:	jne    0x41597b
  415929:	mov    r13b,dil
  41592c:	mov    BYTE PTR [rsp+0xa0],dil
  415934:	jmp    0x41597b
  415936:	cmp    DWORD PTR [rsi+0x90],0x3
  41593d:	jne    0x41597b
  41593f:	mov    rcx,r14
  415942:	call   0x404950
  415947:	cmp    eax,r12d
  41594a:	jne    0x41597b
  41594c:	mov    ecx,0x10
  415951:	call   0x402130
  415956:	mov    QWORD PTR [rsp+0xa8],rax
  41595e:	cmp    rax,rdi
  415961:	je     0x41596d
  415963:	mov    rcx,rax
  415966:	call   0x403150
  41596b:	jmp    0x415970
  41596d:	mov    rax,rdi
  415970:	mov    rdx,rax
  415973:	mov    rcx,r14
  415976:	call   0x4010c8
  41597b:	mov    ecx,DWORD PTR [r14+0x8]
  41597f:	dec    ecx
  415981:	mov    rax,QWORD PTR [r14]
  415984:	mov    r12,QWORD PTR [rax+rcx*8]
  415988:	cmp    r13b,dil
  41598b:	je     0x4159cd
  41598d:	mov    al,BYTE PTR [rsi+0x38]
  415990:	neg    al
  415992:	sbb    r13w,r13w
  415996:	and    r13w,0x25
  41599b:	add    r13w,0x3a
  4159a0:	mov    eax,DWORD PTR [r12+0x8]
  4159a5:	cmp    DWORD PTR [r12+0xc],eax
  4159aa:	jne    0x4159b4
  4159ac:	mov    rcx,r12
  4159af:	call   0x402f2c
  4159b4:	mov    edx,DWORD PTR [r12+0x8]
  4159b9:	mov    rcx,QWORD PTR [r12]
  4159bd:	mov    WORD PTR [rcx+rdx*2],r13w
  4159c2:	inc    edx
  4159c4:	mov    WORD PTR [rcx+rdx*2],di
  4159c8:	mov    DWORD PTR [r12+0x8],edx
  4159cd:	lea    rdx,[rsp+0x48]
  4159d2:	mov    rcx,r12
  4159d5:	call   0x403444
  4159da:	nop
  4159db:	mov    rcx,QWORD PTR [rsp+0x48]
  4159e0:	call   0x40215c
  4159e5:	lea    r13,[rsi+0x13d]
  4159ec:	mov    rdx,r14
  4159ef:	lea    rcx,[rsp+0x90]
  4159f7:	call   0x424ca8
  4159fc:	nop
  4159fd:	cmp    BYTE PTR [rsp+0x1b0],dil
  415a05:	jne    0x415b3e
  415a0b:	cmp    BYTE PTR [rsi+0xf2],dil
  415a12:	jne    0x415a41
  415a14:	mov    eax,DWORD PTR [r14+0x8]
  415a18:	cmp    eax,edi
  415a1a:	je     0x415a41
  415a1c:	lea    ecx,[rax-0x1]
  415a1f:	mov    rax,QWORD PTR [r14]
  415a22:	mov    r12,QWORD PTR [rax+rcx*8]
  415a26:	cmp    r12,rdi
  415a29:	je     0x415a3c
  415a2b:	mov    rcx,QWORD PTR [r12]
  415a2f:	call   0x40215c
  415a34:	mov    rcx,r12
  415a37:	call   0x40215c
  415a3c:	add    DWORD PTR [r14+0x8],0xffffffff
  415a41:	cmp    DWORD PTR [r14+0x8],edi
  415a45:	je     0x415b3e
  415a4b:	lea    rcx,[rsp+0x48]
  415a50:	call   0x403150
  415a55:	nop
  415a56:	lea    r8,[rsp+0x48]
  415a5b:	mov    rdx,r14
  415a5e:	mov    rcx,rsi
  415a61:	call   0x4134d4
  415a66:	cmp    BYTE PTR [rsi+0xf2],dil
  415a6d:	je     0x415b34
  415a73:	mov    ecx,0x10
  415a78:	call   0x402130
  415a7d:	mov    QWORD PTR [rsp+0xa8],rax
  415a85:	cmp    rax,rdi
  415a88:	je     0x415a99
  415a8a:	lea    rdx,[rsp+0x48]
  415a8f:	mov    rcx,rax
  415a92:	call   0x403208
  415a97:	jmp    0x415a9c
  415a99:	mov    rax,rdi
  415a9c:	lea    rcx,[rsi+0x1c0]
  415aa3:	mov    rdx,rax
  415aa6:	call   0x4010c8
  415aab:	lea    rcx,[rsi+0x1d0]
  415ab2:	mov    edx,DWORD PTR [rsp+0x1b8]
  415ab9:	call   0x4131dc
  415abe:	cmp    BYTE PTR [rsi+0x11c],dil
  415ac5:	je     0x415ad5
  415ac7:	cmp    BYTE PTR [r15],dil
  415aca:	je     0x415ad5
  415acc:	lea    rax,[rsi+0x130]
  415ad3:	jmp    0x415aed
  415ad5:	mov    rax,QWORD PTR [rsi+0x28]
  415ad9:	cmp    BYTE PTR [rax+0xd0],dil
  415ae0:	je     0x415aea
  415ae2:	add    rax,0xc8
  415ae8:	jmp    0x415aed
  415aea:	mov    rax,rdi
  415aed:	cmp    BYTE PTR [rsi+0x11b],dil
  415af4:	je     0x415b05
  415af6:	cmp    BYTE PTR [r13+0x0],dil
  415afa:	je     0x415b05
  415afc:	lea    r8,[rsi+0x128]
  415b03:	jmp    0x415b08
  415b05:	mov    r8,rdi
  415b08:	cmp    BYTE PTR [rsi+0x11a],dil
  415b0f:	je     0x415b23
  415b11:	cmp    BYTE PTR [rsi+0x13c],dil
  415b18:	je     0x415b23
  415b1a:	lea    rdx,[rsi+0x120]
  415b21:	jmp    0x415b26
  415b23:	mov    rdx,rdi
  415b26:	mov    r9,rax
  415b29:	mov    rcx,QWORD PTR [rsp+0x48]
  415b2e:	call   0x406a30
  415b33:	nop
  415b34:	mov    rcx,QWORD PTR [rsp+0x48]
  415b39:	call   0x40215c
  415b3e:	lea    rdx,[rsp+0x90]
  415b46:	lea    rcx,[rsp+0x60]
  415b4b:	call   0x403208
  415b50:	nop
  415b51:	cmp    DWORD PTR [rsi+0x90],0x3
  415b58:	jne    0x415b6c
  415b5a:	mov    rcx,QWORD PTR [rsp+0x90]
  415b62:	call   0x40a044
  415b67:	cmp    al,dil
  415b6a:	jne    0x415b98
  415b6c:	lea    rdx,[rsi+0x70]
  415b70:	lea    r8,[rsp+0x60]
  415b75:	lea    rcx,[rsp+0x48]
  415b7a:	call   0x412598
  415b7f:	nop
  415b80:	mov    rdx,rax
  415b83:	lea    rcx,[rsp+0x60]
  415b88:	call   0x4032f8
  415b8d:	nop
  415b8e:	mov    rcx,QWORD PTR [rsp+0x48]
  415b93:	call   0x40215c
  415b98:	cmp    BYTE PTR [rsi+0xf0],dil
  415b9f:	je     0x415cc6
  415ba5:	mov    eax,DWORD PTR [rsi+0xf4]
  415bab:	cmp    eax,0xffffffff
  415bae:	je     0x415cc6
  415bb4:	mov    DWORD PTR [rsp+0x48],eax
  415bb8:	lea    rcx,[rsp+0x50]
  415bbd:	call   0x403150
  415bc2:	lea    r10,[rsp+0x48]
  415bc7:	mov    r8d,edi
  415bca:	mov    DWORD PTR [rsp+0x104],edi
  415bd1:	mov    r9d,DWORD PTR [rsi+0x250]
  415bd8:	mov    DWORD PTR [rsp+0x100],r9d
  415be0:	cmp    r8d,r9d
  415be3:	je     0x415c2c
  415be5:	lea    r12d,[r9+r8*1]
  415be9:	shr    r12d,1
  415bec:	mov    rax,QWORD PTR [rsi+0x248]
  415bf3:	mov    rdx,QWORD PTR [rax+r12*8]
  415bf7:	mov    eax,DWORD PTR [r10]
  415bfa:	cmp    eax,DWORD PTR [rdx]
  415bfc:	sbb    ecx,ecx
  415bfe:	and    ecx,0xfffffffe
  415c01:	inc    ecx
  415c03:	cmp    eax,DWORD PTR [rdx]
  415c05:	cmove  ecx,edi
  415c08:	cmp    ecx,edi
  415c0a:	je     0x415c32
  415c0c:	cmp    ecx,edi
  415c0e:	jge    0x415c1d
  415c10:	mov    r9d,r12d
  415c13:	mov    DWORD PTR [rsp+0x100],r12d
  415c1b:	jmp    0x415be0
  415c1d:	lea    r8d,[r12+0x1]
  415c22:	mov    DWORD PTR [rsp+0x104],r8d
  415c2a:	jmp    0x415be0
  415c2c:	mov    r12d,0xffffffff
  415c32:	mov    rcx,QWORD PTR [rsp+0x50]
  415c37:	call   0x40215c
  415c3c:	cmp    r12d,edi
  415c3f:	jl     0x415cc6
  415c45:	mov    edx,r12d
  415c48:	mov    rax,QWORD PTR [rsi+0x248]
  415c4f:	mov    rdx,QWORD PTR [rax+rdx*8]
  415c53:	add    rdx,0x8
  415c57:	lea    rcx,[rsp+0x60]
  415c5c:	call   0x4032f8
  415c61:	mov    edx,DWORD PTR [rsp+0x68]
  415c65:	cmp    DWORD PTR [rsp+0x6c],edx
  415c69:	jne    0x415c79
  415c6b:	lea    rcx,[rsp+0x60]
  415c70:	call   0x402f2c
  415c75:	mov    edx,DWORD PTR [rsp+0x68]
  415c79:	mov    rcx,QWORD PTR [rsp+0x60]
  415c7e:	mov    eax,edx
  415c80:	mov    WORD PTR [rcx+rax*2],0x3a
  415c86:	inc    edx
  415c88:	mov    WORD PTR [rcx+rdx*2],di
  415c8c:	mov    DWORD PTR [rsp+0x68],edx
  415c90:	lea    rdx,[rsi+0xe0]
  415c97:	lea    rcx,[rsp+0x48]
  415c9c:	call   0x403208
  415ca1:	nop
  415ca2:	lea    rcx,[rsp+0x48]
  415ca7:	call   0x424a44
  415cac:	lea    rdx,[rsp+0x48]
  415cb1:	lea    rcx,[rsp+0x60]
  415cb6:	call   0x403444
  415cbb:	nop
  415cbc:	mov    rcx,QWORD PTR [rsp+0x48]
  415cc1:	call   0x40215c
  415cc6:	mov    r14b,dil
  415cc9:	mov    BYTE PTR [rsp+0x88],dil
  415cd1:	cmp    BYTE PTR [rsi+0xf2],dil
  415cd8:	je     0x415d3b
  415cda:	lea    rdx,[rsp+0x60]
  415cdf:	lea    rcx,[rsi+0x100]
  415ce6:	call   0x4032f8
  415ceb:	cmp    BYTE PTR [rsp+0x1b0],dil
  415cf3:	je     0x415d01
  415cf5:	mov    rcx,QWORD PTR [rsi+0x100]
  415cfc:	call   0x406c00
  415d01:	cmp    DWORD PTR [rsi+0x240],edi
  415d07:	jne    0x4164dc
  415d0d:	mov    rcx,QWORD PTR [rsp+0x60]
  415d12:	call   0x40215c
  415d17:	nop
  415d18:	mov    rcx,QWORD PTR [rsp+0x90]
  415d20:	call   0x40215c
  415d25:	nop
  415d26:	cmp    rbx,rdi
  415d29:	je     0x415d34
  415d2b:	mov    rax,QWORD PTR [rdi]
  415d2e:	mov    rcx,rbx
  415d31:	call   QWORD PTR [rax+0x10]
  415d34:	xor    eax,eax
  415d36:	jmp    0x416e48
  415d3b:	cmp    BYTE PTR [rsi+0x118],dil
  415d42:	jne    0x4164dc
  415d48:	lea    rcx,[rsp+0xc0]
  415d50:	call   0x407fc0
  415d55:	lea    rcx,[rsp+0xe8]
  415d5d:	call   0x403150
  415d62:	nop
  415d63:	mov    rdx,QWORD PTR [rsp+0x60]
  415d68:	lea    rcx,[rsp+0xc0]
  415d70:	call   0x408134
  415d75:	cmp    al,dil
  415d78:	je     0x41641a
  415d7e:	mov    eax,DWORD PTR [rsi+0x94]
  415d84:	cmp    eax,edi
  415d86:	je     0x415dcd
  415d88:	cmp    eax,0x2
  415d8b:	jne    0x416049
  415d91:	mov    rcx,QWORD PTR [rsp+0xe8]
  415d99:	call   0x40215c
  415d9e:	nop
  415d9f:	mov    rcx,QWORD PTR [rsp+0x60]
  415da4:	call   0x40215c
  415da9:	nop
  415daa:	mov    rcx,QWORD PTR [rsp+0x90]
  415db2:	call   0x40215c
  415db7:	nop
  415db8:	cmp    rbx,rdi
  415dbb:	je     0x415dc6
  415dbd:	mov    rax,QWORD PTR [rdi]
  415dc0:	mov    rcx,rbx
  415dc3:	call   QWORD PTR [rax+0x10]
  415dc6:	xor    eax,eax
  415dc8:	jmp    0x416e48
  415dcd:	lea    rcx,[rsp+0x60]
  415dd2:	call   0x40362c
  415dd7:	lea    r8d,[rax+0x1]
  415ddb:	lea    rdx,[rsp+0x78]
  415de0:	lea    rcx,[rsp+0x60]
  415de5:	call   0x4042a0
  415dea:	nop
  415deb:	lea    r8,[rsp+0xe8]
  415df3:	mov    rdx,rax
  415df6:	lea    rcx,[rsp+0x48]
  415dfb:	call   0x4030d4
  415e00:	nop
  415e01:	mov    rcx,QWORD PTR [rsp+0x78]
  415e06:	call   0x40215c
  415e0b:	mov    rcx,QWORD PTR [rsi+0x48]
  415e0f:	mov    r10,QWORD PTR [rsi+0xb0]
  415e16:	mov    r11,QWORD PTR [rcx]
  415e19:	mov    al,BYTE PTR [rsi+0x150]
  415e1f:	lea    rdx,[rsi+0x148]
  415e26:	neg    al
  415e28:	sbb    r9,r9
  415e2b:	and    r9,rdx
  415e2e:	mov    al,BYTE PTR [rsi+0x13e]
  415e34:	lea    rdx,[rsi+0x130]
  415e3b:	neg    al
  415e3d:	sbb    r8,r8
  415e40:	and    r8,rdx
  415e43:	lea    rax,[rsp+0xb8]
  415e4b:	mov    QWORD PTR [rsp+0x38],rax
  415e50:	mov    QWORD PTR [rsp+0x30],r9
  415e55:	mov    QWORD PTR [rsp+0x28],r8
  415e5a:	mov    QWORD PTR [rsp+0x20],r10
  415e5f:	lea    r9,[rsp+0xc0]
  415e67:	lea    r8,[rsp+0xd8]
  415e6f:	mov    rdx,QWORD PTR [rsp+0x48]
  415e74:	call   QWORD PTR [r11+0x28]
  415e78:	mov    r12d,eax
  415e7b:	cmp    eax,edi
  415e7d:	je     0x415ec7
  415e7f:	mov    rcx,QWORD PTR [rsp+0x48]
  415e84:	call   0x40215c
  415e89:	nop
  415e8a:	mov    rcx,QWORD PTR [rsp+0xe8]
  415e92:	call   0x40215c
  415e97:	nop
  415e98:	mov    rcx,QWORD PTR [rsp+0x60]
  415e9d:	call   0x40215c
  415ea2:	nop
  415ea3:	mov    rcx,QWORD PTR [rsp+0x90]
  415eab:	call   0x40215c
  415eb0:	nop
  415eb1:	cmp    rbx,rdi
  415eb4:	je     0x415ebf
  415eb6:	mov    rdx,QWORD PTR [rdi]
  415eb9:	mov    rcx,rbx
  415ebc:	call   QWORD PTR [rdx+0x10]
  415ebf:	mov    eax,r12d
  415ec2:	jmp    0x416e48
  415ec7:	mov    ecx,DWORD PTR [rsp+0xb8]
  415ece:	cmp    ecx,edi
  415ed0:	je     0x41603f
  415ed6:	dec    ecx
  415ed8:	je     0x416035
  415ede:	dec    ecx
  415ee0:	je     0x415fee
  415ee6:	dec    ecx
  415ee8:	je     0x415f9d
  415eee:	dec    ecx
  415ef0:	je     0x415f8e
  415ef6:	dec    ecx
  415ef8:	je     0x415f44
  415efa:	mov    rcx,QWORD PTR [rsp+0x48]
  415eff:	call   0x40215c
  415f04:	nop
  415f05:	mov    rcx,QWORD PTR [rsp+0xe8]
  415f0d:	call   0x40215c
  415f12:	nop
  415f13:	mov    rcx,QWORD PTR [rsp+0x60]
  415f18:	call   0x40215c
  415f1d:	nop
  415f1e:	mov    rcx,QWORD PTR [rsp+0x90]
  415f26:	call   0x40215c
  415f2b:	nop
  415f2c:	cmp    rbx,rdi
  415f2f:	je     0x415f3a
  415f31:	mov    rax,QWORD PTR [rdi]
  415f34:	mov    rcx,rbx
  415f37:	call   QWORD PTR [rax+0x10]
  415f3a:	mov    eax,0x80004005
  415f3f:	jmp    0x416e48
  415f44:	mov    rcx,QWORD PTR [rsp+0x48]
  415f49:	call   0x40215c
  415f4e:	nop
  415f4f:	mov    rcx,QWORD PTR [rsp+0xe8]
  415f57:	call   0x40215c
  415f5c:	nop
  415f5d:	mov    rcx,QWORD PTR [rsp+0x60]
  415f62:	call   0x40215c
  415f67:	nop
  415f68:	mov    rcx,QWORD PTR [rsp+0x90]
  415f70:	call   0x40215c
  415f75:	nop
  415f76:	cmp    rbx,rdi
  415f79:	je     0x415f84
  415f7b:	mov    rax,QWORD PTR [rdi]
  415f7e:	mov    rcx,rbx
  415f81:	call   QWORD PTR [rax+0x10]
  415f84:	mov    eax,0x80004004
  415f89:	jmp    0x416e48
  415f8e:	mov    DWORD PTR [rsi+0x94],0x3
  415f98:	jmp    0x41603f
  415f9d:	mov    DWORD PTR [rsi+0x94],0x2
  415fa7:	mov    rcx,QWORD PTR [rsp+0x48]
  415fac:	call   0x40215c
  415fb1:	nop
  415fb2:	mov    rcx,QWORD PTR [rsp+0xe8]
  415fba:	call   0x40215c
  415fbf:	nop
  415fc0:	mov    rcx,QWORD PTR [rsp+0x60]
  415fc5:	call   0x40215c
  415fca:	nop
  415fcb:	mov    rcx,QWORD PTR [rsp+0x90]
  415fd3:	call   0x40215c
  415fd8:	nop
  415fd9:	cmp    rbx,rdi
  415fdc:	je     0x415fe7
  415fde:	mov    rax,QWORD PTR [rdi]
  415fe1:	mov    rcx,rbx
  415fe4:	call   QWORD PTR [rax+0x10]
  415fe7:	xor    eax,eax
  415fe9:	jmp    0x416e48
  415fee:	mov    rcx,QWORD PTR [rsp+0x48]
  415ff3:	call   0x40215c
  415ff8:	nop
  415ff9:	mov    rcx,QWORD PTR [rsp+0xe8]
  416001:	call   0x40215c
  416006:	nop
  416007:	mov    rcx,QWORD PTR [rsp+0x60]
  41600c:	call   0x40215c
  416011:	nop
  416012:	mov    rcx,QWORD PTR [rsp+0x90]
  41601a:	call   0x40215c
  41601f:	nop
  416020:	cmp    rbx,rdi
  416023:	je     0x41602e
  416025:	mov    rax,QWORD PTR [rdi]
  416028:	mov    rcx,rbx
  41602b:	call   QWORD PTR [rax+0x10]
  41602e:	xor    eax,eax
  416030:	jmp    0x416e48
  416035:	mov    DWORD PTR [rsi+0x94],0x1
  41603f:	mov    rcx,QWORD PTR [rsp+0x48]
  416044:	call   0x40215c
  416049:	mov    eax,DWORD PTR [rsi+0x94]
  41604f:	cmp    eax,0x3
  416052:	jne    0x416110
  416058:	lea    rcx,[rsp+0x60]
  41605d:	call   0x40c510
  416062:	cmp    al,dil
  416065:	jne    0x416100
  41606b:	lea    r8,[rsp+0x60]
  416070:	mov    rdx,QWORD PTR [rip+0x525e1]        # 0x468658
  416077:	mov    rcx,rsi
  41607a:	call   0x412a58
  41607f:	mov    esi,eax
  416081:	cmp    eax,edi
  416083:	je     0x4160c1
  416085:	mov    rcx,QWORD PTR [rsp+0xe8]
  41608d:	call   0x40215c
  416092:	nop
  416093:	mov    rcx,QWORD PTR [rsp+0x60]
  416098:	call   0x40215c
  41609d:	nop
  41609e:	mov    rcx,QWORD PTR [rsp+0x90]
  4160a6:	call   0x40215c
  4160ab:	nop
  4160ac:	cmp    rbx,rdi
  4160af:	je     0x4160ba
  4160b1:	mov    rdx,QWORD PTR [rdi]
  4160b4:	mov    rcx,rbx
  4160b7:	call   QWORD PTR [rdx+0x10]
  4160ba:	mov    eax,esi
  4160bc:	jmp    0x416e48
  4160c1:	mov    rcx,QWORD PTR [rsp+0xe8]
  4160c9:	call   0x40215c
  4160ce:	nop
  4160cf:	mov    rcx,QWORD PTR [rsp+0x60]
  4160d4:	call   0x40215c
  4160d9:	nop
  4160da:	mov    rcx,QWORD PTR [rsp+0x90]
  4160e2:	call   0x40215c
  4160e7:	nop
  4160e8:	cmp    rbx,rdi
  4160eb:	je     0x4160f6
  4160ed:	mov    rax,QWORD PTR [rdi]
  4160f0:	mov    rcx,rbx
  4160f3:	call   QWORD PTR [rax+0x10]
  4160f6:	mov    eax,0x80004005
  4160fb:	jmp    0x416e48
  416100:	mov    r14b,0x1
  416103:	mov    BYTE PTR [rsp+0x88],r14b
  41610b:	jmp    0x4164cf
  416110:	cmp    eax,0x4
  416113:	jne    0x4162be
  416119:	lea    rdx,[rsp+0x60]
  41611e:	lea    rcx,[rsp+0x48]
  416123:	call   0x403208
  416128:	nop
  416129:	lea    rcx,[rsp+0x48]
  41612e:	call   0x40c510
  416133:	cmp    al,dil
  416136:	jne    0x4161e7
  41613c:	lea    r8,[rsp+0x60]
  416141:	mov    rdx,QWORD PTR [rip+0x52510]        # 0x468658
  416148:	mov    rcx,rsi
  41614b:	call   0x412a58
  416150:	mov    esi,eax
  416152:	cmp    eax,edi
  416154:	je     0x41619d
  416156:	mov    rcx,QWORD PTR [rsp+0x48]
  41615b:	call   0x40215c
  416160:	nop
  416161:	mov    rcx,QWORD PTR [rsp+0xe8]
  416169:	call   0x40215c
  41616e:	nop
  41616f:	mov    rcx,QWORD PTR [rsp+0x60]
  416174:	call   0x40215c
  416179:	nop
  41617a:	mov    rcx,QWORD PTR [rsp+0x90]
  416182:	call   0x40215c
  416187:	nop
  416188:	cmp    rbx,rdi
  41618b:	je     0x416196
  41618d:	mov    rdx,QWORD PTR [rdi]
  416190:	mov    rcx,rbx
  416193:	call   QWORD PTR [rdx+0x10]
  416196:	mov    eax,esi
  416198:	jmp    0x416e48
  41619d:	mov    rcx,QWORD PTR [rsp+0x48]
  4161a2:	call   0x40215c
  4161a7:	nop
  4161a8:	mov    rcx,QWORD PTR [rsp+0xe8]
  4161b0:	call   0x40215c
  4161b5:	nop
  4161b6:	mov    rcx,QWORD PTR [rsp+0x60]
  4161bb:	call   0x40215c
  4161c0:	nop
  4161c1:	mov    rcx,QWORD PTR [rsp+0x90]
  4161c9:	call   0x40215c
  4161ce:	nop
  4161cf:	cmp    rbx,rdi
  4161d2:	je     0x4161dd
  4161d4:	mov    rax,QWORD PTR [rdi]
  4161d7:	mov    rcx,rbx
  4161da:	call   QWORD PTR [rax+0x10]
  4161dd:	mov    eax,0x80004005
  4161e2:	jmp    0x416e48
  4161e7:	mov    rdx,QWORD PTR [rsp+0x48]
  4161ec:	mov    rcx,QWORD PTR [rsp+0x60]
  4161f1:	call   0x406ca8
  4161f6:	cmp    al,dil
  4161f9:	jne    0x4162af
  4161ff:	lea    r9,[rsp+0x60]
  416204:	lea    r8,[rsp+0x48]
  416209:	mov    rdx,QWORD PTR [rip+0x52450]        # 0x468660
  416210:	mov    rcx,rsi
  416213:	call   0x412be8
  416218:	mov    esi,eax
  41621a:	cmp    eax,edi
  41621c:	je     0x416265
  41621e:	mov    rcx,QWORD PTR [rsp+0x48]
  416223:	call   0x40215c
  416228:	nop
  416229:	mov    rcx,QWORD PTR [rsp+0xe8]
  416231:	call   0x40215c
  416236:	nop
  416237:	mov    rcx,QWORD PTR [rsp+0x60]
  41623c:	call   0x40215c
  416241:	nop
  416242:	mov    rcx,QWORD PTR [rsp+0x90]
  41624a:	call   0x40215c
  41624f:	nop
  416250:	cmp    rbx,rdi
  416253:	je     0x41625e
  416255:	mov    rdx,QWORD PTR [rdi]
  416258:	mov    rcx,rbx
  41625b:	call   QWORD PTR [rdx+0x10]
  41625e:	mov    eax,esi
  416260:	jmp    0x416e48
  416265:	mov    rcx,QWORD PTR [rsp+0x48]
  41626a:	call   0x40215c
  41626f:	nop
  416270:	mov    rcx,QWORD PTR [rsp+0xe8]
  416278:	call   0x40215c
  41627d:	nop
  41627e:	mov    rcx,QWORD PTR [rsp+0x60]
  416283:	call   0x40215c
  416288:	nop
  416289:	mov    rcx,QWORD PTR [rsp+0x90]
  416291:	call   0x40215c
  416296:	nop
  416297:	cmp    rbx,rdi
  41629a:	je     0x4162a5
  41629c:	mov    rax,QWORD PTR [rdi]
  41629f:	mov    rcx,rbx
  4162a2:	call   QWORD PTR [rax+0x10]
  4162a5:	mov    eax,0x80004005
  4162aa:	jmp    0x416e48
  4162af:	mov    rcx,QWORD PTR [rsp+0x48]
  4162b4:	call   0x40215c
  4162b9:	jmp    0x4164cf
  4162be:	mov    eax,DWORD PTR [rsp+0xe0]
  4162c5:	shr    eax,0x4
  4162c8:	test   al,0x1
  4162ca:	je     0x416375
  4162d0:	mov    rcx,QWORD PTR [rsp+0x60]
  4162d5:	call   0x406c00
  4162da:	cmp    al,dil
  4162dd:	jne    0x4164cf
  4162e3:	lea    r8,[rsp+0x60]
  4162e8:	mov    rdx,QWORD PTR [rip+0x52381]        # 0x468670
  4162ef:	mov    rcx,rsi
  4162f2:	call   0x412af0
  4162f7:	mov    esi,eax
  4162f9:	cmp    eax,edi
  4162fb:	je     0x416339
  4162fd:	mov    rcx,QWORD PTR [rsp+0xe8]
  416305:	call   0x40215c
  41630a:	nop
  41630b:	mov    rcx,QWORD PTR [rsp+0x60]
  416310:	call   0x40215c
  416315:	nop
  416316:	mov    rcx,QWORD PTR [rsp+0x90]
  41631e:	call   0x40215c
  416323:	nop
  416324:	cmp    rbx,rdi
  416327:	je     0x416332
  416329:	mov    rdx,QWORD PTR [rdi]
  41632c:	mov    rcx,rbx
  41632f:	call   QWORD PTR [rdx+0x10]
  416332:	mov    eax,esi
  416334:	jmp    0x416e48
  416339:	mov    rcx,QWORD PTR [rsp+0xe8]
  416341:	call   0x40215c
  416346:	nop
  416347:	mov    rcx,QWORD PTR [rsp+0x60]
  41634c:	call   0x40215c
  416351:	nop
  416352:	mov    rcx,QWORD PTR [rsp+0x90]
  41635a:	call   0x40215c
  41635f:	nop
  416360:	cmp    rbx,rdi
  416363:	je     0x41636e
  416365:	mov    rax,QWORD PTR [rdi]
  416368:	mov    rcx,rbx
  41636b:	call   QWORD PTR [rax+0x10]
  41636e:	xor    eax,eax
  416370:	jmp    0x416e48
  416375:	mov    rcx,QWORD PTR [rsp+0x60]
  41637a:	call   0x406fec
  41637f:	cmp    al,dil
  416382:	jne    0x4164cf
  416388:	lea    r8,[rsp+0x60]
  41638d:	mov    rdx,QWORD PTR [rip+0x522d4]        # 0x468668
  416394:	mov    rcx,rsi
  416397:	call   0x412af0
  41639c:	mov    esi,eax
  41639e:	cmp    eax,edi
  4163a0:	je     0x4163de
  4163a2:	mov    rcx,QWORD PTR [rsp+0xe8]
  4163aa:	call   0x40215c
  4163af:	nop
  4163b0:	mov    rcx,QWORD PTR [rsp+0x60]
  4163b5:	call   0x40215c
  4163ba:	nop
  4163bb:	mov    rcx,QWORD PTR [rsp+0x90]
  4163c3:	call   0x40215c
  4163c8:	nop
  4163c9:	cmp    rbx,rdi
  4163cc:	je     0x4163d7
  4163ce:	mov    rdx,QWORD PTR [rdi]
  4163d1:	mov    rcx,rbx
  4163d4:	call   QWORD PTR [rdx+0x10]
  4163d7:	mov    eax,esi
  4163d9:	jmp    0x416e48
  4163de:	mov    rcx,QWORD PTR [rsp+0xe8]
  4163e6:	call   0x40215c
  4163eb:	nop
  4163ec:	mov    rcx,QWORD PTR [rsp+0x60]
  4163f1:	call   0x40215c
  4163f6:	nop
  4163f7:	mov    rcx,QWORD PTR [rsp+0x90]
  4163ff:	call   0x40215c
  416404:	nop
  416405:	cmp    rbx,rdi
  416408:	je     0x416413
  41640a:	mov    rax,QWORD PTR [rdi]
  41640d:	mov    rcx,rbx
  416410:	call   QWORD PTR [rax+0x10]
  416413:	xor    eax,eax
  416415:	jmp    0x416e48
  41641a:	mov    rcx,QWORD PTR [rsp+0x60]
  41641f:	call   0x40a06c
  416424:	mov    r12d,eax
  416427:	cmp    r12d,edi
  41642a:	jl     0x4164cf
  416430:	lea    edx,[r12+0x1]
  416435:	mov    rcx,QWORD PTR [rsp+0x60]
  41643a:	cmp    WORD PTR [rcx+rdx*2],di
  41643e:	je     0x4164cf
  416444:	lea    rdx,[rsp+0x60]
  416449:	lea    rcx,[rsp+0x48]
  41644e:	call   0x403208
  416453:	nop
  416454:	cmp    r12d,DWORD PTR [rsp+0x50]
  416459:	jae    0x41646a
  41645b:	mov    DWORD PTR [rsp+0x50],r12d
  416460:	mov    rax,QWORD PTR [rsp+0x48]
  416465:	mov    WORD PTR [rax+r12*2],di
  41646a:	lea    rcx,[rsp+0x138]
  416472:	call   0x407fc0
  416477:	lea    rcx,[rsp+0x160]
  41647f:	call   0x403150
  416484:	nop
  416485:	mov    rdx,QWORD PTR [rsp+0x48]
  41648a:	lea    rcx,[rsp+0x138]
  416492:	call   0x408134
  416497:	cmp    al,dil
  41649a:	je     0x4164b6
  41649c:	mov    edx,DWORD PTR [rsp+0x158]
  4164a3:	test   dl,0x1
  4164a6:	je     0x4164b6
  4164a8:	and    edx,0xfffffffe
  4164ab:	mov    rcx,QWORD PTR [rsp+0x48]
  4164b0:	call   0x406b58
  4164b5:	nop
  4164b6:	mov    rcx,QWORD PTR [rsp+0x160]
  4164be:	call   0x40215c
  4164c3:	nop
  4164c4:	mov    rcx,QWORD PTR [rsp+0x48]
  4164c9:	call   0x40215c
  4164ce:	nop
  4164cf:	mov    rcx,QWORD PTR [rsp+0xe8]
  4164d7:	call   0x40215c
  4164dc:	lea    rcx,[rsi+0x100]
  4164e3:	lea    rdx,[rsp+0x60]
  4164e8:	call   0x4032f8
  4164ed:	cmp    BYTE PTR [rsp+0x1b0],dil
  4164f5:	jne    0x416d1c
  4164fb:	cmp    DWORD PTR [rsi+0x240],edi
  416501:	je     0x416917
  416507:	lea    rcx,[rsp+0xa8]
  41650f:	call   0x403150
  416514:	nop
  416515:	mov    r13b,BYTE PTR [rsp+0x40]
  41651a:	cmp    r13b,dil
  41651d:	je     0x41654c
  41651f:	lea    rdx,[rsi+0xb0]
  416526:	lea    rcx,[rsp+0x48]
  41652b:	call   0x412538
  416530:	nop
  416531:	mov    rdx,rax
  416534:	lea    rcx,[rsp+0xa8]
  41653c:	call   0x4032f8
  416541:	nop
  416542:	mov    rcx,QWORD PTR [rsp+0x48]
  416547:	call   0x40215c
  41654c:	lea    rdx,[rsi+0x238]
  416553:	lea    rcx,[rsp+0xa8]
  41655b:	call   0x403444
  416560:	lea    rcx,[rsp+0xa8]
  416568:	call   0x4135d8
  41656d:	cmp    al,dil
  416570:	jne    0x4165d1
  416572:	lea    r8,[rsp+0xa8]
  41657a:	lea    rdx,[rip+0x38a87]        # 0x44f008
  416581:	mov    rcx,rsi
  416584:	call   0x412a58
  416589:	mov    r12d,eax
  41658c:	cmp    eax,edi
  41658e:	je     0x41690a
  416594:	mov    rcx,QWORD PTR [rsp+0xa8]
  41659c:	call   0x40215c
  4165a1:	nop
  4165a2:	mov    rcx,QWORD PTR [rsp+0x60]
  4165a7:	call   0x40215c
  4165ac:	nop
  4165ad:	mov    rcx,QWORD PTR [rsp+0x90]
  4165b5:	call   0x40215c
  4165ba:	nop
  4165bb:	cmp    rbx,rdi
  4165be:	je     0x4165c9
  4165c0:	mov    rdx,QWORD PTR [rdi]
  4165c3:	mov    rcx,rbx
  4165c6:	call   QWORD PTR [rdx+0x10]
  4165c9:	mov    eax,r12d
  4165cc:	jmp    0x416e48
  4165d1:	lea    rcx,[rsp+0x78]
  4165d6:	call   0x403150
  4165db:	nop
  4165dc:	mov    r15b,BYTE PTR [rsp+0x41]
  4165e1:	cmp    r15b,dil
  4165e4:	jne    0x416601
  4165e6:	cmp    r13b,dil
  4165e9:	je     0x416601
  4165eb:	lea    rdx,[rsi+0x238]
  4165f2:	lea    rcx,[rsp+0x78]
  4165f7:	call   0x4032f8
  4165fc:	jmp    0x416685
  416601:	lea    r8,[rsp+0x78]
  416606:	mov    rdx,QWORD PTR [rsp+0xa8]
  41660e:	mov    rcx,QWORD PTR [rsi+0x80]
  416615:	call   0x40ab14
  41661a:	cmp    al,dil
  41661d:	jne    0x416685
  41661f:	lea    r8,[rsp+0xa8]
  416627:	lea    rdx,[rip+0x389ca]        # 0x44eff8
  41662e:	mov    rcx,rsi
  416631:	call   0x412a58
  416636:	mov    r12d,eax
  416639:	cmp    eax,edi
  41663b:	je     0x416685
  41663d:	mov    rcx,QWORD PTR [rsp+0x78]
  416642:	call   0x40215c
  416647:	nop
  416648:	mov    rcx,QWORD PTR [rsp+0xa8]
  416650:	call   0x40215c
  416655:	nop
  416656:	mov    rcx,QWORD PTR [rsp+0x60]
  41665b:	call   0x40215c
  416660:	nop
  416661:	mov    rcx,QWORD PTR [rsp+0x90]
  416669:	call   0x40215c
  41666e:	nop
  41666f:	cmp    rbx,rdi
  416672:	je     0x41667d
  416674:	mov    rdx,QWORD PTR [rdi]
  416677:	mov    rcx,rbx
  41667a:	call   QWORD PTR [rdx+0x10]
  41667d:	mov    eax,r12d
  416680:	jmp    0x416e48
  416685:	cmp    DWORD PTR [rsp+0x80],edi
  41668c:	je     0x4168ff
  416692:	cmp    r15b,dil
  416695:	je     0x41671f
  41669b:	mov    rdx,QWORD PTR [rsp+0x78]
  4166a0:	mov    rcx,QWORD PTR [rsp+0x60]
  4166a5:	call   0x406dd0
  4166aa:	cmp    al,dil
  4166ad:	jne    0x4168ff
  4166b3:	lea    r9,[rsp+0x78]
  4166b8:	lea    r8,[rsp+0x60]
  4166bd:	lea    rdx,[rip+0x38914]        # 0x44efd8
  4166c4:	mov    rcx,rsi
  4166c7:	call   0x412be8
  4166cc:	mov    r12d,eax
  4166cf:	cmp    eax,edi
  4166d1:	je     0x4168ff
  4166d7:	mov    rcx,QWORD PTR [rsp+0x78]
  4166dc:	call   0x40215c
  4166e1:	nop
  4166e2:	mov    rcx,QWORD PTR [rsp+0xa8]
  4166ea:	call   0x40215c
  4166ef:	nop
  4166f0:	mov    rcx,QWORD PTR [rsp+0x60]
  4166f5:	call   0x40215c
  4166fa:	nop
  4166fb:	mov    rcx,QWORD PTR [rsp+0x90]
  416703:	call   0x40215c
  416708:	nop
  416709:	cmp    rbx,rdi
  41670c:	je     0x416717
  41670e:	mov    rdx,QWORD PTR [rdi]
  416711:	mov    rcx,rbx
  416714:	call   QWORD PTR [rdx+0x10]
  416717:	mov    eax,r12d
  41671a:	jmp    0x416e48
  41671f:	cmp    BYTE PTR [rsi+0x32],dil
  416723:	je     0x4168ff
  416729:	mov    QWORD PTR [rsp+0x48],rdi
  41672e:	mov    QWORD PTR [rsp+0x50],rdi
  416733:	cmp    BYTE PTR [rsp+0x70],dil
  416738:	sete   r8b
  41673c:	mov    rdx,QWORD PTR [rsp+0x78]
  416741:	lea    rcx,[rsp+0x48]
  416746:	call   0x409730
  41674b:	cmp    al,dil
  41674e:	je     0x4168f4
  416754:	mov    DWORD PTR [rsp+0xc0],edi
  41675b:	mov    DWORD PTR [rsp+0xc4],edi
  416762:	lea    rcx,[rsp+0xc8]
  41676a:	call   0x403150
  41676f:	nop
  416770:	lea    rcx,[rsp+0xd8]
  416778:	call   0x403150
  41677d:	nop
  41677e:	mov    r8,QWORD PTR [rsp+0x50]
  416783:	mov    rdx,QWORD PTR [rsp+0x48]
  416788:	lea    rcx,[rsp+0xc0]
  416790:	call   0x409564
  416795:	cmp    al,dil
  416798:	jne    0x41682d
  41679e:	lea    r8,[rsi+0xb0]
  4167a5:	lea    rdx,[rip+0x38804]        # 0x44efb0
  4167ac:	mov    rcx,rsi
  4167af:	call   0x412a58
  4167b4:	mov    r12d,eax
  4167b7:	cmp    eax,edi
  4167b9:	je     0x4168d9
  4167bf:	mov    rcx,QWORD PTR [rsp+0xd8]
  4167c7:	call   0x40215c
  4167cc:	mov    rcx,QWORD PTR [rsp+0xc8]
  4167d4:	call   0x40215c
  4167d9:	nop
  4167da:	mov    rcx,QWORD PTR [rsp+0x48]
  4167df:	call   0x40215c
  4167e4:	nop
  4167e5:	mov    rcx,QWORD PTR [rsp+0x78]
  4167ea:	call   0x40215c
  4167ef:	nop
  4167f0:	mov    rcx,QWORD PTR [rsp+0xa8]
  4167f8:	call   0x40215c
  4167fd:	nop
  4167fe:	mov    rcx,QWORD PTR [rsp+0x60]
  416803:	call   0x40215c
  416808:	nop
  416809:	mov    rcx,QWORD PTR [rsp+0x90]
  416811:	call   0x40215c
  416816:	nop
  416817:	cmp    rbx,rdi
  41681a:	je     0x416825
  41681c:	mov    rdx,QWORD PTR [rdi]
  41681f:	mov    rcx,rbx
  416822:	call   QWORD PTR [rdx+0x10]
  416825:	mov    eax,r12d
  416828:	jmp    0x416e48
  41682d:	mov    r9d,DWORD PTR [rsp+0x50]
  416832:	mov    r8,QWORD PTR [rsp+0x48]
  416837:	mov    dl,BYTE PTR [rsi+0xf2]
  41683d:	mov    rcx,QWORD PTR [rsp+0x60]
  416842:	call   0x409ab4
  416847:	cmp    al,dil
  41684a:	jne    0x4168d9
  416850:	lea    r8,[rsp+0x60]
  416855:	lea    rdx,[rip+0x38734]        # 0x44ef90
  41685c:	mov    rcx,rsi
  41685f:	call   0x412af0
  416864:	mov    r12d,eax
  416867:	cmp    eax,edi
  416869:	je     0x4168d9
  41686b:	mov    rcx,QWORD PTR [rsp+0xd8]
  416873:	call   0x40215c
  416878:	mov    rcx,QWORD PTR [rsp+0xc8]
  416880:	call   0x40215c
  416885:	nop
  416886:	mov    rcx,QWORD PTR [rsp+0x48]
  41688b:	call   0x40215c
  416890:	nop
  416891:	mov    rcx,QWORD PTR [rsp+0x78]
  416896:	call   0x40215c
  41689b:	nop
  41689c:	mov    rcx,QWORD PTR [rsp+0xa8]
  4168a4:	call   0x40215c
  4168a9:	nop
  4168aa:	mov    rcx,QWORD PTR [rsp+0x60]
  4168af:	call   0x40215c
  4168b4:	nop
  4168b5:	mov    rcx,QWORD PTR [rsp+0x90]
  4168bd:	call   0x40215c
  4168c2:	nop
  4168c3:	cmp    rbx,rdi
  4168c6:	je     0x4168d1
  4168c8:	mov    rdx,QWORD PTR [rdi]
  4168cb:	mov    rcx,rbx
  4168ce:	call   QWORD PTR [rdx+0x10]
  4168d1:	mov    eax,r12d
  4168d4:	jmp    0x416e48
  4168d9:	mov    rcx,QWORD PTR [rsp+0xd8]
  4168e1:	call   0x40215c
  4168e6:	mov    rcx,QWORD PTR [rsp+0xc8]
  4168ee:	call   0x40215c
  4168f3:	nop
  4168f4:	mov    rcx,QWORD PTR [rsp+0x48]
  4168f9:	call   0x40215c
  4168fe:	nop
  4168ff:	mov    rcx,QWORD PTR [rsp+0x78]
  416904:	call   0x40215c
  416909:	nop
  41690a:	mov    rcx,QWORD PTR [rsp+0xa8]
  416912:	call   0x40215c
  416917:	cmp    DWORD PTR [rsi+0x240],edi
  41691d:	jne    0x416d1c
  416923:	mov    r13b,0x1
  416926:	mov    BYTE PTR [rsp+0xa1],r13b
  41692e:	cmp    DWORD PTR [rsi+0x220],edi
  416934:	je     0x416af2
  41693a:	cmp    BYTE PTR [rsi+0xf0],dil
  416941:	jne    0x416ae8
  416947:	lea    r9,[rsp+0x89]
  41694f:	lea    r8,[rsp+0x48]
  416954:	mov    r15d,DWORD PTR [rsp+0x1b8]
  41695c:	mov    edx,r15d
  41695f:	mov    rcx,QWORD PTR [rsp+0x128]
  416967:	call   0x412360
  41696c:	mov    r12d,eax
  41696f:	cmp    eax,edi
  416971:	je     0x4169a2
  416973:	mov    rcx,QWORD PTR [rsp+0x60]
  416978:	call   0x40215c
  41697d:	nop
  41697e:	mov    rcx,QWORD PTR [rsp+0x90]
  416986:	call   0x40215c
  41698b:	nop
  41698c:	cmp    rbx,rdi
  41698f:	je     0x41699a
  416991:	mov    rdx,QWORD PTR [rdi]
  416994:	mov    rcx,rbx
  416997:	call   QWORD PTR [rdx+0x10]
  41699a:	mov    eax,r12d
  41699d:	jmp    0x416e48
  4169a2:	cmp    BYTE PTR [rsp+0x89],dil
  4169aa:	je     0x416afa
  4169b0:	mov    r10d,edi
  4169b3:	mov    DWORD PTR [rsp+0x120],edi
  4169ba:	mov    r11d,DWORD PTR [rsi+0x220]
  4169c1:	mov    DWORD PTR [rsp+0x110],r11d
  4169c9:	cmp    r10d,r11d
  4169cc:	je     0x416a10
  4169ce:	lea    r9d,[r10+r11*1]
  4169d2:	shr    r9d,1
  4169d5:	mov    edx,r9d
  4169d8:	shl    rdx,0x4
  4169dc:	add    rdx,QWORD PTR [rsi+0x218]
  4169e3:	lea    rcx,[rsp+0x48]
  4169e8:	call   0x4127ac
  4169ed:	cmp    eax,edi
  4169ef:	je     0x416a16
  4169f1:	cmp    eax,edi
  4169f3:	jge    0x416a02
  4169f5:	mov    r11d,r9d
  4169f8:	mov    DWORD PTR [rsp+0x110],r9d
  416a00:	jmp    0x4169c9
  416a02:	lea    r10d,[r9+0x1]
  416a06:	mov    DWORD PTR [rsp+0x120],r10d
  416a0e:	jmp    0x4169c9
  416a10:	mov    r9d,0xffffffff
  416a16:	cmp    r9d,edi
  416a19:	jl     0x416add
  416a1f:	mov    ecx,r9d
  416a22:	mov    rax,QWORD PTR [rsi+0x228]
  416a29:	mov    r12,QWORD PTR [rax+rcx*8]
  416a2d:	cmp    DWORD PTR [r12+0x8],edi
  416a32:	jne    0x416a46
  416a34:	lea    rdx,[rsp+0x60]
  416a39:	mov    rcx,r12
  416a3c:	call   0x4032f8
  416a41:	jmp    0x416add
  416a46:	mov    rdx,QWORD PTR [r12]
  416a4a:	mov    rcx,QWORD PTR [rsp+0x60]
  416a4f:	call   0x406dd0
  416a54:	cmp    al,dil
  416a57:	jne    0x416ad2
  416a59:	mov    r9,r12
  416a5c:	lea    r8,[rsp+0x60]
  416a61:	lea    rdx,[rip+0x38570]        # 0x44efd8
  416a68:	mov    rcx,rsi
  416a6b:	call   0x412be8
  416a70:	mov    esi,eax
  416a72:	cmp    eax,edi
  416a74:	je     0x416aa4
  416a76:	mov    rcx,QWORD PTR [rsp+0x60]
  416a7b:	call   0x40215c
  416a80:	nop
  416a81:	mov    rcx,QWORD PTR [rsp+0x90]
  416a89:	call   0x40215c
  416a8e:	nop
  416a8f:	cmp    rbx,rdi
  416a92:	je     0x416a9d
  416a94:	mov    rdx,QWORD PTR [rdi]
  416a97:	mov    rcx,rbx
  416a9a:	call   QWORD PTR [rdx+0x10]
  416a9d:	mov    eax,esi
  416a9f:	jmp    0x416e48
  416aa4:	mov    rcx,QWORD PTR [rsp+0x60]
  416aa9:	call   0x40215c
  416aae:	nop
  416aaf:	mov    rcx,QWORD PTR [rsp+0x90]
  416ab7:	call   0x40215c
  416abc:	nop
  416abd:	cmp    rbx,rdi
  416ac0:	je     0x416acb
  416ac2:	mov    rax,QWORD PTR [rdi]
  416ac5:	mov    rcx,rbx
  416ac8:	call   QWORD PTR [rax+0x10]
  416acb:	xor    eax,eax
  416acd:	jmp    0x416e48
  416ad2:	mov    r13b,dil
  416ad5:	mov    BYTE PTR [rsp+0xa1],dil
  416add:	cmp    r13b,dil
  416ae0:	je     0x416d1c
  416ae6:	jmp    0x416afa
  416ae8:	mov    r15d,DWORD PTR [rsp+0x1b8]
  416af0:	jmp    0x416afa
  416af2:	mov    r15d,DWORD PTR [rsp+0x1b8]
  416afa:	mov    ecx,0x30
  416aff:	call   0x402130
  416b04:	mov    r12,rax
  416b07:	cmp    rax,rdi
  416b0a:	je     0x416b25
  416b0c:	mov    DWORD PTR [rax+0x8],edi
  416b0f:	lea    rax,[rip+0x3828a]        # 0x44eda0
  416b16:	mov    QWORD PTR [r12],rax
  416b1a:	mov    QWORD PTR [r12+0x10],0xffffffffffffffff
  416b23:	jmp    0x416b28
  416b25:	mov    r12,rdi
  416b28:	mov    QWORD PTR [rsi+0x158],r12
  416b2f:	mov    QWORD PTR [rsp+0xa8],r12
  416b37:	cmp    r12,rdi
  416b3a:	je     0x416b47
  416b3c:	mov    rax,QWORD PTR [r12]
  416b40:	mov    rcx,r12
  416b43:	call   QWORD PTR [rax+0x8]
  416b46:	nop
  416b47:	mov    rdx,QWORD PTR [rsp+0x60]
  416b4c:	mov    rcx,QWORD PTR [rsi+0x158]
  416b53:	mov    al,BYTE PTR [rsi+0x118]
  416b59:	neg    al
  416b5b:	sbb    r8d,r8d
  416b5e:	and    r8d,0x2
  416b62:	add    r8d,0x2
  416b66:	mov    QWORD PTR [rcx+0x28],rdi
  416b6a:	add    rcx,0x10
  416b6e:	call   0x4094b0
  416b73:	cmp    al,dil
  416b76:	jne    0x416c12
  416b7c:	lea    r8,[rsp+0x60]
  416b81:	lea    rdx,[rip+0x383e8]        # 0x44ef70
  416b88:	mov    rcx,rsi
  416b8b:	call   0x412af0
  416b90:	mov    esi,eax
  416b92:	cmp    eax,edi
  416b94:	je     0x416bd4
  416b96:	cmp    r12,rdi
  416b99:	je     0x416ba6
  416b9b:	mov    rax,QWORD PTR [r12]
  416b9f:	mov    rcx,r12
  416ba2:	call   QWORD PTR [rax+0x10]
  416ba5:	nop
  416ba6:	mov    rcx,QWORD PTR [rsp+0x60]
  416bab:	call   0x40215c
  416bb0:	nop
  416bb1:	mov    rcx,QWORD PTR [rsp+0x90]
  416bb9:	call   0x40215c
  416bbe:	nop
  416bbf:	cmp    rbx,rdi
  416bc2:	je     0x416bcd
  416bc4:	mov    rdx,QWORD PTR [rdi]
  416bc7:	mov    rcx,rbx
  416bca:	call   QWORD PTR [rdx+0x10]
  416bcd:	mov    eax,esi
  416bcf:	jmp    0x416e48
  416bd4:	cmp    r12,rdi
  416bd7:	je     0x416be4
  416bd9:	mov    rax,QWORD PTR [r12]
  416bdd:	mov    rcx,r12
  416be0:	call   QWORD PTR [rax+0x10]
  416be3:	nop
  416be4:	mov    rcx,QWORD PTR [rsp+0x60]
  416be9:	call   0x40215c
  416bee:	nop
  416bef:	mov    rcx,QWORD PTR [rsp+0x90]
  416bf7:	call   0x40215c
  416bfc:	nop
  416bfd:	cmp    rbx,rdi
  416c00:	je     0x416c0b
  416c02:	mov    rax,QWORD PTR [rdi]
  416c05:	mov    rcx,rbx
  416c08:	call   QWORD PTR [rax+0x10]
  416c0b:	xor    eax,eax
  416c0d:	jmp    0x416e48
  416c12:	cmp    r14b,dil
  416c15:	je     0x416c7c
  416c17:	cmp    BYTE PTR [rsi+0xf0],dil
  416c1e:	jne    0x416c7c
  416c20:	mov    DWORD PTR [rsp+0x48],r15d
  416c25:	lea    rdx,[rsp+0x60]
  416c2a:	lea    rcx,[rsp+0x50]
  416c2f:	call   0x403208
  416c34:	nop
  416c35:	mov    r14d,DWORD PTR [rsi+0x250]
  416c3c:	lea    rdx,[rsp+0x48]
  416c41:	lea    rcx,[rsi+0x248]
  416c48:	call   0x413ab0
  416c4d:	cmp    r14d,DWORD PTR [rsi+0x250]
  416c54:	jne    0x416c72
  416c56:	mov    ecx,eax
  416c58:	mov    rax,QWORD PTR [rsi+0x248]
  416c5f:	mov    rcx,QWORD PTR [rax+rcx*8]
  416c63:	add    rcx,0x8
  416c67:	lea    rdx,[rsp+0x60]
  416c6c:	call   0x4032f8
  416c71:	nop
  416c72:	mov    rcx,QWORD PTR [rsp+0x50]
  416c77:	call   0x40215c
  416c7c:	cmp    BYTE PTR [rsi+0x118],dil
  416c83:	je     0x416ce5
  416c85:	mov    rcx,QWORD PTR [rsi+0x158]
  416c8c:	mov    rax,QWORD PTR [rcx]
  416c8f:	xor    r9d,r9d
  416c92:	xor    r8d,r8d
  416c95:	mov    rdx,QWORD PTR [rsi+0x110]
  416c9c:	call   QWORD PTR [rax+0x20]
  416c9f:	mov    r13d,eax
  416ca2:	cmp    eax,edi
  416ca4:	je     0x416ce5
  416ca6:	cmp    r12,rdi
  416ca9:	je     0x416cb6
  416cab:	mov    rax,QWORD PTR [r12]
  416caf:	mov    rcx,r12
  416cb2:	call   QWORD PTR [rax+0x10]
  416cb5:	nop
  416cb6:	mov    rcx,QWORD PTR [rsp+0x60]
  416cbb:	call   0x40215c
  416cc0:	nop
  416cc1:	mov    rcx,QWORD PTR [rsp+0x90]
  416cc9:	call   0x40215c
  416cce:	nop
  416ccf:	cmp    rbx,rdi
  416cd2:	je     0x416cdd
  416cd4:	mov    rdx,QWORD PTR [rdi]
  416cd7:	mov    rcx,rbx
  416cda:	call   QWORD PTR [rdx+0x10]
  416cdd:	mov    eax,r13d
  416ce0:	jmp    0x416e48
  416ce5:	cmp    r12,rdi
  416ce8:	je     0x416cf4
  416cea:	mov    rax,QWORD PTR [r12]
  416cee:	mov    rcx,r12
  416cf1:	call   QWORD PTR [rax+0x8]
  416cf4:	mov    rcx,QWORD PTR [rsi+0x160]
  416cfb:	cmp    rcx,rdi
  416cfe:	je     0x416d06
  416d00:	mov    rax,QWORD PTR [rcx]
  416d03:	call   QWORD PTR [rax+0x10]
  416d06:	mov    QWORD PTR [rsi+0x160],r12
  416d0d:	cmp    r12,rdi
  416d10:	je     0x416d1c
  416d12:	mov    rax,QWORD PTR [r12]
  416d16:	mov    rcx,r12
  416d19:	call   QWORD PTR [rax+0x10]
  416d1c:	mov    r12,QWORD PTR [rsi+0x160]
  416d23:	cmp    r12,rdi
  416d26:	je     0x416d32
  416d28:	mov    rax,QWORD PTR [r12]
  416d2c:	mov    rcx,r12
  416d2f:	call   QWORD PTR [rax+0x8]
  416d32:	cmp    rbx,rdi
  416d35:	je     0x416d40
  416d37:	mov    rax,QWORD PTR [rdi]
  416d3a:	mov    rcx,rbx
  416d3d:	call   QWORD PTR [rax+0x10]
  416d40:	mov    rbx,r12
  416d43:	mov    QWORD PTR [rsp+0xf8],r12
  416d4b:	mov    rcx,QWORD PTR [rsp+0x60]
  416d50:	call   0x40215c
  416d55:	nop
  416d56:	mov    rcx,QWORD PTR [rsp+0x90]
  416d5e:	call   0x40215c
  416d63:	mov    eax,DWORD PTR [rsp+0x1c8]
  416d6a:	jmp    0x416d81
  416d6c:	lea    rcx,[rsp+0x48]
  416d71:	call   0x40b028
  416d76:	nop
  416d77:	mov    eax,0x80004005
  416d7c:	jmp    0x416e48
  416d81:	cmp    QWORD PTR [rsi+0x170],rdi
  416d88:	je     0x416e13
  416d8e:	cmp    eax,edi
  416d90:	je     0x416d97
  416d92:	cmp    eax,0x1
  416d95:	jne    0x416e13
  416d97:	mov    r12,QWORD PTR [rsi+0x168]
  416d9e:	cmp    rbx,rdi
  416da1:	je     0x416dac
  416da3:	mov    rax,QWORD PTR [rbx]
  416da6:	mov    rcx,rbx
  416da9:	call   QWORD PTR [rax+0x8]
  416dac:	mov    rcx,QWORD PTR [r12+0x10]
  416db1:	cmp    rcx,rdi
  416db4:	je     0x416dbc
  416db6:	mov    rax,QWORD PTR [rcx]
  416db9:	call   QWORD PTR [rax+0x10]
  416dbc:	mov    QWORD PTR [r12+0x10],rbx
  416dc1:	mov    r12,QWORD PTR [rsi+0x170]
  416dc8:	cmp    r12,rdi
  416dcb:	je     0x416dd7
  416dcd:	mov    rax,QWORD PTR [r12]
  416dd1:	mov    rcx,r12
  416dd4:	call   QWORD PTR [rax+0x8]
  416dd7:	cmp    rbx,rdi
  416dda:	je     0x416de5
  416ddc:	mov    rax,QWORD PTR [rbx]
  416ddf:	mov    rcx,rbx
  416de2:	call   QWORD PTR [rax+0x10]
  416de5:	mov    rbx,r12
  416de8:	mov    QWORD PTR [rsp+0xf8],r12
  416df0:	mov    r12,QWORD PTR [rsi+0x168]
  416df7:	mov    rcx,QWORD PTR [r12+0x28]
  416dfc:	mov    rax,QWORD PTR [rcx]
  416dff:	call   QWORD PTR [rax]
  416e01:	mov    QWORD PTR [r12+0x18],rdi
  416e06:	mov    BYTE PTR [r12+0x20],0x1
  416e0c:	mov    BYTE PTR [rsi+0x178],0x1
  416e13:	cmp    rbx,rdi
  416e16:	je     0x416e31
  416e18:	mov    rax,rbx
  416e1b:	mov    rbx,rdi
  416e1e:	mov    QWORD PTR [rsp+0xf8],rdi
  416e26:	mov    rdx,QWORD PTR [rsp+0x1c0]
  416e2e:	mov    QWORD PTR [rdx],rax
  416e31:	cmp    rbx,rdi
  416e34:	je     0x416e3f
  416e36:	mov    rax,QWORD PTR [rbx]
  416e39:	mov    rcx,rbx
  416e3c:	call   QWORD PTR [rax+0x10]
  416e3f:	xor    eax,eax
  416e41:	jmp    0x416e48
  416e43:	mov    eax,0x8007000e
  416e48:	add    rsp,0x170
  416e4f:	pop    r15
  416e51:	pop    r14
  416e53:	pop    r13
  416e55:	pop    r12
  416e57:	pop    rdi
  416e58:	pop    rsi
  416e59:	pop    rbx
  416e5a:	ret    
  416e5b:	int3   
  416e5c:	int3   
  416e5d:	int3   
  416e5e:	int3   
  416e5f:	int3   
  416e60:	rex.W push rbp
  416e62:	sub    rsp,0x20
  416e66:	mov    rbp,rdx
  416e69:	lea    rcx,[rbp+0x48]
  416e6d:	call   0x40b830
  416e72:	add    rsp,0x20
  416e76:	pop    rbp
  416e77:	ret    
  416e78:	int3   
  416e79:	int3   
  416e7a:	int3   
  416e7b:	int3   
  416e7c:	int3   
  416e7d:	int3   
  416e7e:	int3   
  416e7f:	int3   
  416e80:	rex.W push rbp
  416e82:	sub    rsp,0x20
  416e86:	mov    rbp,rdx
  416e89:	lea    rcx,[rbp+0x48]
  416e8d:	call   0x40b830
  416e92:	add    rsp,0x20
  416e96:	pop    rbp
  416e97:	ret    
  416e98:	int3   
  416e99:	int3   
  416e9a:	int3   
  416e9b:	int3   
  416e9c:	int3   
  416e9d:	int3   
  416e9e:	int3   
  416e9f:	int3   
  416ea0:	rex.W push rbp
  416ea2:	sub    rsp,0x20
  416ea6:	mov    rbp,rdx
  416ea9:	lea    rcx,[rbp+0x48]
  416ead:	call   0x40b830
  416eb2:	add    rsp,0x20
  416eb6:	pop    rbp
  416eb7:	ret    
  416eb8:	int3   
  416eb9:	int3   
  416eba:	int3   
  416ebb:	int3   
  416ebc:	int3   
  416ebd:	int3   
  416ebe:	int3   
  416ebf:	int3   
  416ec0:	rex.W push rbp
  416ec2:	sub    rsp,0x20
  416ec6:	mov    rbp,rdx
  416ec9:	lea    rcx,[rbp+0x78]
  416ecd:	call   0x401000
  416ed2:	add    rsp,0x20
  416ed6:	pop    rbp
  416ed7:	ret    
  416ed8:	int3   
  416ed9:	int3   
  416eda:	int3   
  416edb:	int3   
  416edc:	int3   
  416edd:	int3   
  416ede:	int3   
  416edf:	int3   
  416ee0:	rex.W push rbp
  416ee2:	sub    rsp,0x20
  416ee6:	mov    rbp,rdx
  416ee9:	lea    rcx,[rbp+0xc0]
  416ef0:	add    rcx,0x8
  416ef4:	call   0x401000
  416ef9:	add    rsp,0x20
  416efd:	pop    rbp
  416efe:	ret    
  416eff:	int3   
  416f00:	rex.W push rbp
  416f02:	sub    rsp,0x20
  416f06:	mov    rbp,rdx
  416f09:	lea    rcx,[rbp+0xc0]
  416f10:	call   0x412650
  416f15:	add    rsp,0x20
  416f19:	pop    rbp
  416f1a:	ret    
  416f1b:	int3   
  416f1c:	int3   
  416f1d:	int3   
  416f1e:	int3   
  416f1f:	int3   
  416f20:	rex.W push rbp
  416f22:	sub    rsp,0x20
  416f26:	mov    rbp,rdx
  416f29:	lea    rcx,[rbp+0x48]
  416f2d:	call   0x401000
  416f32:	add    rsp,0x20
  416f36:	pop    rbp
  416f37:	ret    
  416f38:	int3   
  416f39:	int3   
  416f3a:	int3   
  416f3b:	int3   
  416f3c:	int3   
  416f3d:	int3   
  416f3e:	int3   
  416f3f:	int3   
  416f40:	rex.W push rbp
  416f42:	sub    rsp,0x20
  416f46:	mov    rbp,rdx
  416f49:	lea    rcx,[rbp+0x78]
  416f4d:	call   0x4047cc
  416f52:	add    rsp,0x20
  416f56:	pop    rbp
  416f57:	ret    
  416f58:	int3   
  416f59:	int3   
  416f5a:	int3   
  416f5b:	int3   
  416f5c:	int3   
  416f5d:	int3   
  416f5e:	int3   
  416f5f:	int3   
  416f60:	rex.W push rbp
  416f62:	sub    rsp,0x20
  416f66:	mov    rbp,rdx
  416f69:	lea    rcx,[rbp+0x48]
  416f6d:	call   0x401000
  416f72:	add    rsp,0x20
  416f76:	pop    rbp
  416f77:	ret    
  416f78:	int3   
  416f79:	int3   
  416f7a:	int3   
  416f7b:	int3   
  416f7c:	int3   
  416f7d:	int3   
  416f7e:	int3   
  416f7f:	int3   
  416f80:	rex.W push rbp
  416f82:	sub    rsp,0x20
  416f86:	mov    rbp,rdx
  416f89:	lea    rcx,[rbp+0x78]
  416f8d:	call   0x401000
  416f92:	add    rsp,0x20
  416f96:	pop    rbp
  416f97:	ret    
  416f98:	int3   
  416f99:	int3   
  416f9a:	int3   
  416f9b:	int3   
  416f9c:	int3   
  416f9d:	int3   
  416f9e:	int3   
  416f9f:	int3   
  416fa0:	rex.W push rbp
  416fa2:	sub    rsp,0x20
  416fa6:	mov    rbp,rdx
  416fa9:	lea    rcx,[rbp+0xf8]
  416fb0:	call   0x4176b4
  416fb5:	add    rsp,0x20
  416fb9:	pop    rbp
  416fba:	ret    
  416fbb:	int3   
  416fbc:	int3   
  416fbd:	int3   
  416fbe:	int3   
  416fbf:	int3   
  416fc0:	rex.W push rbp
  416fc2:	sub    rsp,0x20
  416fc6:	mov    rbp,rdx
  416fc9:	lea    rcx,[rbp+0x48]
  416fcd:	call   0x40b830
  416fd2:	add    rsp,0x20
  416fd6:	pop    rbp
  416fd7:	ret    
  416fd8:	int3   
  416fd9:	int3   
  416fda:	int3   
  416fdb:	int3   
  416fdc:	int3   
  416fdd:	int3   
  416fde:	int3   
  416fdf:	int3   
  416fe0:	rex.W push rbp
  416fe2:	sub    rsp,0x20
  416fe6:	mov    rbp,rdx
  416fe9:	lea    rcx,[rbp+0x48]
  416fed:	call   0x401000
  416ff2:	add    rsp,0x20
  416ff6:	pop    rbp
  416ff7:	ret    
  416ff8:	int3   
  416ff9:	int3   
  416ffa:	int3   
  416ffb:	int3   
  416ffc:	int3   
  416ffd:	int3   
  416ffe:	int3   
  416fff:	int3   
  417000:	rex.W push rbp
  417002:	sub    rsp,0x20
  417006:	mov    rbp,rdx
  417009:	mov    rcx,QWORD PTR [rbp+0xa8]
  417010:	call   0x40215c
  417015:	add    rsp,0x20
  417019:	pop    rbp
  41701a:	ret    
  41701b:	int3   
  41701c:	int3   
  41701d:	int3   
  41701e:	int3   
  41701f:	int3   
  417020:	rex.W push rbp
  417022:	sub    rsp,0x20
  417026:	mov    rbp,rdx
  417029:	mov    rcx,QWORD PTR [rbp+0xa8]
  417030:	call   0x40215c
  417035:	add    rsp,0x20
  417039:	pop    rbp
  41703a:	ret    
  41703b:	int3   
  41703c:	int3   
  41703d:	int3   
  41703e:	int3   
  41703f:	int3   
  417040:	rex.W push rbp
  417042:	sub    rsp,0x20
  417046:	mov    rbp,rdx
  417049:	lea    rcx,[rbp+0x90]
  417050:	call   0x401000
  417055:	add    rsp,0x20
  417059:	pop    rbp
  41705a:	ret    
  41705b:	int3   
  41705c:	int3   
  41705d:	int3   
  41705e:	int3   
  41705f:	int3   
  417060:	rex.W push rbp
  417062:	sub    rsp,0x20
  417066:	mov    rbp,rdx
  417069:	lea    rcx,[rbp+0x48]
  41706d:	call   0x401000
  417072:	add    rsp,0x20
  417076:	pop    rbp
  417077:	ret    
  417078:	int3   
  417079:	int3   
  41707a:	int3   
  41707b:	int3   
  41707c:	int3   
  41707d:	int3   
  41707e:	int3   
  41707f:	int3   
  417080:	rex.W push rbp
  417082:	sub    rsp,0x20
  417086:	mov    rbp,rdx
  417089:	mov    rcx,QWORD PTR [rbp+0xa8]
  417090:	call   0x40215c
  417095:	add    rsp,0x20
  417099:	pop    rbp
  41709a:	ret    
  41709b:	int3   
  41709c:	int3   
  41709d:	int3   
  41709e:	int3   
  41709f:	int3   
  4170a0:	rex.W push rbp
  4170a2:	sub    rsp,0x20
  4170a6:	mov    rbp,rdx
  4170a9:	lea    rcx,[rbp+0x60]
  4170ad:	call   0x401000
  4170b2:	add    rsp,0x20
  4170b6:	pop    rbp
  4170b7:	ret    
  4170b8:	int3   
  4170b9:	int3   
  4170ba:	int3   
  4170bb:	int3   
  4170bc:	int3   
  4170bd:	int3   
  4170be:	int3   
  4170bf:	int3   
  4170c0:	rex.W push rbp
  4170c2:	sub    rsp,0x20
  4170c6:	mov    rbp,rdx
  4170c9:	lea    rcx,[rbp+0x48]
  4170cd:	call   0x401000
  4170d2:	add    rsp,0x20
  4170d6:	pop    rbp
  4170d7:	ret    
  4170d8:	int3   
  4170d9:	int3   
  4170da:	int3   
  4170db:	int3   
  4170dc:	int3   
  4170dd:	int3   
  4170de:	int3   
  4170df:	int3   
  4170e0:	rex.W push rbp
  4170e2:	sub    rsp,0x20
  4170e6:	mov    rbp,rdx
  4170e9:	lea    rcx,[rbp+0x48]
  4170ed:	call   0x401000
  4170f2:	add    rsp,0x20
  4170f6:	pop    rbp
  4170f7:	ret    
  4170f8:	int3   
  4170f9:	int3   
  4170fa:	int3   
  4170fb:	int3   
  4170fc:	int3   
  4170fd:	int3   
  4170fe:	int3   
  4170ff:	int3   
  417100:	rex.W push rbp
  417102:	sub    rsp,0x20
  417106:	mov    rbp,rdx
  417109:	lea    rcx,[rbp+0xc0]
  417110:	call   0x406fe0
  417115:	add    rsp,0x20
  417119:	pop    rbp
  41711a:	ret    
  41711b:	int3   
  41711c:	int3   
  41711d:	int3   
  41711e:	int3   
  41711f:	int3   
  417120:	rex.W push rbp
  417122:	sub    rsp,0x20
  417126:	mov    rbp,rdx
  417129:	lea    rcx,[rbp+0x78]
  41712d:	call   0x401000
  417132:	add    rsp,0x20
  417136:	pop    rbp
  417137:	ret    
  417138:	int3   
  417139:	int3   
  41713a:	int3   
  41713b:	int3   
  41713c:	int3   
  41713d:	int3   
  41713e:	int3   
  41713f:	int3   
  417140:	rex.W push rbp
  417142:	sub    rsp,0x20
  417146:	mov    rbp,rdx
  417149:	lea    rcx,[rbp+0x48]
  41714d:	call   0x401000
  417152:	add    rsp,0x20
  417156:	pop    rbp
  417157:	ret    
  417158:	int3   
  417159:	int3   
  41715a:	int3   
  41715b:	int3   
  41715c:	int3   
  41715d:	int3   
  41715e:	int3   
  41715f:	int3   
  417160:	rex.W push rbp
  417162:	sub    rsp,0x20
  417166:	mov    rbp,rdx
  417169:	lea    rcx,[rbp+0x48]
  41716d:	call   0x401000
  417172:	add    rsp,0x20
  417176:	pop    rbp
  417177:	ret    
  417178:	int3   
  417179:	int3   
  41717a:	int3   
  41717b:	int3   
  41717c:	int3   
  41717d:	int3   
  41717e:	int3   
  41717f:	int3   
  417180:	rex.W push rbp
  417182:	sub    rsp,0x20
  417186:	mov    rbp,rdx
  417189:	lea    rcx,[rbp+0x48]
  41718d:	call   0x401000
  417192:	add    rsp,0x20
  417196:	pop    rbp
  417197:	ret    
  417198:	int3   
  417199:	int3   
  41719a:	int3   
  41719b:	int3   
  41719c:	int3   
  41719d:	int3   
  41719e:	int3   
  41719f:	int3   
  4171a0:	rex.W push rbp
  4171a2:	sub    rsp,0x20
  4171a6:	mov    rbp,rdx
  4171a9:	lea    rcx,[rbp+0x138]
  4171b0:	call   0x406fe0
  4171b5:	add    rsp,0x20
  4171b9:	pop    rbp
  4171ba:	ret    
  4171bb:	int3   
  4171bc:	int3   
  4171bd:	int3   
  4171be:	int3   
  4171bf:	int3   
  4171c0:	rex.W push rbp
  4171c2:	sub    rsp,0x20
  4171c6:	mov    rbp,rdx
  4171c9:	lea    rcx,[rbp+0xa8]
  4171d0:	call   0x401000
  4171d5:	add    rsp,0x20
  4171d9:	pop    rbp
  4171da:	ret    
  4171db:	int3   
  4171dc:	int3   
  4171dd:	int3   
  4171de:	int3   
  4171df:	int3   
  4171e0:	rex.W push rbp
  4171e2:	sub    rsp,0x20
  4171e6:	mov    rbp,rdx
  4171e9:	lea    rcx,[rbp+0x48]
  4171ed:	call   0x401000
  4171f2:	add    rsp,0x20
  4171f6:	pop    rbp
  4171f7:	ret    
  4171f8:	int3   
  4171f9:	int3   
  4171fa:	int3   
  4171fb:	int3   
  4171fc:	int3   
  4171fd:	int3   
  4171fe:	int3   
  4171ff:	int3   
  417200:	rex.W push rbp
  417202:	sub    rsp,0x20
  417206:	mov    rbp,rdx
  417209:	lea    rcx,[rbp+0x78]
  41720d:	call   0x401000
  417212:	add    rsp,0x20
  417216:	pop    rbp
  417217:	ret    
  417218:	int3   
  417219:	int3   
  41721a:	int3   
  41721b:	int3   
  41721c:	int3   
  41721d:	int3   
  41721e:	int3   
  41721f:	int3   
  417220:	rex.W push rbp
  417222:	sub    rsp,0x20
  417226:	mov    rbp,rdx
  417229:	lea    rcx,[rbp+0x48]
  41722d:	call   0x401000
  417232:	add    rsp,0x20
  417236:	pop    rbp
  417237:	ret    
  417238:	int3   
  417239:	int3   
  41723a:	int3   
  41723b:	int3   
  41723c:	int3   
  41723d:	int3   
  41723e:	int3   
  41723f:	int3   
  417240:	rex.W push rbp
  417242:	sub    rsp,0x20
  417246:	mov    rbp,rdx
  417249:	lea    rcx,[rbp+0xc0]
  417250:	add    rcx,0x8
  417254:	call   0x401000
  417259:	add    rsp,0x20
  41725d:	pop    rbp
  41725e:	ret    
  41725f:	int3   
  417260:	rex.W push rbp
  417262:	sub    rsp,0x20
  417266:	mov    rbp,rdx
  417269:	lea    rcx,[rbp+0xc0]
  417270:	call   0x412650
  417275:	add    rsp,0x20
  417279:	pop    rbp
  41727a:	ret    
  41727b:	int3   
  41727c:	int3   
  41727d:	int3   
  41727e:	int3   
  41727f:	int3   
  417280:	rex.W push rbp
  417282:	sub    rsp,0x20
  417286:	mov    rbp,rdx
  417289:	lea    rcx,[rbp+0xa8]
  417290:	call   0x4176b4
  417295:	add    rsp,0x20
  417299:	pop    rbp
  41729a:	ret    
  41729b:	int3   
  41729c:	int3   
  41729d:	int3   
  41729e:	int3   
  41729f:	int3   
  4172a0:	rex.W push rbp
  4172a2:	sub    rsp,0x20
  4172a6:	mov    rbp,rdx
  4172a9:	lea    rcx,[rbp+0x48]
  4172ad:	call   0x40b988
  4172b2:	add    rsp,0x20
  4172b6:	pop    rbp
  4172b7:	ret    
  4172b8:	int3   
  4172b9:	int3   
  4172ba:	int3   
  4172bb:	int3   
  4172bc:	int3   
  4172bd:	int3   
  4172be:	int3   
  4172bf:	int3   
  4172c0:	mov    QWORD PTR [rsp+0x10],rdx
  4172c5:	push   rbp
  4172c6:	sub    rsp,0x40
  4172ca:	mov    rbp,rdx
  4172cd:	lea    rax,[rip+0xfffffffffffffb6f]        # 0x416e43
  4172d4:	jmp    0x4172d6
  4172d6:	add    rsp,0x40
  4172da:	pop    rbp
  4172db:	ret    
  4172dc:	int3   
  4172dd:	int3   
  4172de:	int3   
  4172df:	int3   
  4172e0:	rex.W push rbx
  4172e2:	push   rbp
  4172e3:	push   rsi
  4172e4:	push   rdi
  4172e5:	push   r12
  4172e7:	push   r13
  4172e9:	push   r14
  4172eb:	push   r15
  4172ed:	sub    rsp,0x68
  4172f1:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  4172fa:	mov    rdi,rcx
  4172fd:	xor    ebx,ebx
  4172ff:	mov    rsi,rbx
  417302:	mov    QWORD PTR [rsp+0x48],rbx
  417307:	mov    DWORD PTR [rsp+0x54],ebx
  41730b:	mov    ebp,DWORD PTR [rcx+0x1c8]
  417311:	mov    DWORD PTR [rsp+0x50],ebx
  417315:	cmp    ebp,ebx
  417317:	jbe    0x417341
  417319:	xor    ecx,ecx
  41731b:	call   0x40215c
  417320:	mov    QWORD PTR [rsp+0x48],rbx
  417325:	mov    DWORD PTR [rsp+0x54],ebx
  417329:	mov    rcx,rbp
  41732c:	shl    rcx,0x3
  417330:	call   0x402130
  417335:	mov    rsi,rax
  417338:	mov    QWORD PTR [rsp+0x48],rax
  41733d:	mov    DWORD PTR [rsp+0x54],ebp
  417341:	mov    DWORD PTR [rsp+0x50],ebp
  417345:	mov    r8d,ebx
  417348:	cmp    DWORD PTR [rdi+0x1c8],ebx
  41734e:	jbe    0x4173a7
  417350:	mov    r10,rbx
  417353:	mov    r9,rsi
  417356:	mov    DWORD PTR [r9+0x4],r8d
  41735a:	mov    rax,QWORD PTR [rdi+0x1c0]
  417361:	mov    rcx,QWORD PTR [r10+rax*1]
  417365:	mov    rdx,QWORD PTR [rcx]
  417368:	mov    ecx,ebx
  41736a:	movzx  eax,WORD PTR [rdx]
  41736d:	add    rdx,0x2
  417371:	cmp    ax,bx
  417374:	je     0x417390
  417376:	cmp    ax,0x5c
  41737a:	je     0x417382
  41737c:	cmp    ax,0x2f
  417380:	jne    0x417384
  417382:	inc    ecx
  417384:	mov    ax,WORD PTR [rdx]
  417387:	add    rdx,0x2
  41738b:	cmp    ax,bx
  41738e:	jne    0x417376
  417390:	mov    DWORD PTR [r9],ecx
  417393:	inc    r8d
  417396:	add    r10,0x8
  41739a:	add    r9,0x8
  41739e:	cmp    r8d,DWORD PTR [rdi+0x1c8]
  4173a5:	jb     0x417356
  4173a7:	lea    rcx,[rsp+0x48]
  4173ac:	call   0x413b88
  4173b1:	mov    r14d,ebx
  4173b4:	cmp    ebp,ebx
  4173b6:	jbe    0x4174e9
  4173bc:	lea    r13,[rsi+0x4]
  4173c0:	mov    r15d,DWORD PTR [r13+0x0]
  4173c4:	mov    rax,QWORD PTR [rdi+0x1d0]
  4173cb:	mov    r12d,DWORD PTR [rax+r15*4]
  4173cf:	lea    rax,[rsp+0xc0]
  4173d7:	mov    QWORD PTR [rsp+0x20],rax
  4173dc:	lea    r9,[rsp+0x38]
  4173e1:	mov    r8d,0xa
  4173e7:	mov    edx,r12d
  4173ea:	mov    rcx,rdi
  4173ed:	call   0x4129a0
  4173f2:	mov    ebx,eax
  4173f4:	test   eax,eax
  4173f6:	jne    0x4174df
  4173fc:	lea    rax,[rsp+0xb8]
  417404:	mov    QWORD PTR [rsp+0x20],rax
  417409:	lea    r9,[rsp+0x30]
  41740e:	lea    r8d,[rbx+0xb]
  417412:	mov    edx,r12d
  417415:	mov    rcx,rdi
  417418:	call   0x4129a0
  41741d:	cmp    eax,ebx
  41741f:	jne    0x4174e1
  417425:	lea    rax,[rsp+0xb0]
  41742d:	mov    QWORD PTR [rsp+0x20],rax
  417432:	lea    r9,[rsp+0xc8]
  41743a:	lea    r8d,[rbx+0xc]
  41743e:	mov    edx,r12d
  417441:	mov    rcx,rdi
  417444:	call   0x4129a0
  417449:	cmp    eax,ebx
  41744b:	jne    0x4174e5
  417451:	cmp    BYTE PTR [rdi+0x11c],bl
  417457:	je     0x41746c
  417459:	cmp    BYTE PTR [rsp+0xb0],bl
  417460:	je     0x41746c
  417462:	lea    r9,[rsp+0xc8]
  41746a:	jmp    0x417484
  41746c:	mov    rax,QWORD PTR [rdi+0x28]
  417470:	cmp    BYTE PTR [rax+0xd0],bl
  417476:	je     0x417481
  417478:	lea    r9,[rax+0xc8]
  41747f:	jmp    0x417484
  417481:	mov    r9,rbx
  417484:	cmp    BYTE PTR [rdi+0x11b],bl
  41748a:	je     0x41749c
  41748c:	cmp    BYTE PTR [rsp+0xb8],bl
  417493:	je     0x41749c
  417495:	lea    r8,[rsp+0x30]
  41749a:	jmp    0x41749f
  41749c:	mov    r8,rbx
  41749f:	cmp    BYTE PTR [rdi+0x11a],bl
  4174a5:	je     0x4174b7
  4174a7:	cmp    BYTE PTR [rsp+0xc0],bl
  4174ae:	je     0x4174b7
  4174b0:	lea    rdx,[rsp+0x38]
  4174b5:	jmp    0x4174ba
  4174b7:	mov    rdx,rbx
  4174ba:	mov    rax,QWORD PTR [rdi+0x1c0]
  4174c1:	mov    rcx,QWORD PTR [rax+r15*8]
  4174c5:	mov    rcx,QWORD PTR [rcx]
  4174c8:	call   0x406a30
  4174cd:	inc    r14d
  4174d0:	add    r13,0x8
  4174d4:	cmp    r14d,ebp
  4174d7:	jb     0x4173c0
  4174dd:	jmp    0x4174e9
  4174df:	jmp    0x4174e9
  4174e1:	mov    ebx,eax
  4174e3:	jmp    0x4174e9
  4174e5:	mov    ebx,eax
  4174e7:	jmp    0x4174e9
  4174e9:	mov    rcx,rsi
  4174ec:	call   0x40215c
  4174f1:	mov    eax,ebx
  4174f3:	add    rsp,0x68
  4174f7:	pop    r15
  4174f9:	pop    r14
  4174fb:	pop    r13
  4174fd:	pop    r12
  4174ff:	pop    rdi
  417500:	pop    rsi
  417501:	pop    rbp
  417502:	pop    rbx
  417503:	ret    
  417504:	int3   
  417505:	int3   
  417506:	int3   
  417507:	int3   
  417508:	int3   
  417509:	int3   
  41750a:	int3   
  41750b:	int3   
  41750c:	int3   
  41750d:	int3   
  41750e:	int3   
  41750f:	int3   
  417510:	rex.W push rbp
  417512:	sub    rsp,0x20
  417516:	mov    rbp,rdx
  417519:	lea    rcx,[rbp+0x48]
  41751d:	call   0x401000
  417522:	add    rsp,0x20
  417526:	pop    rbp
  417527:	ret    
  417528:	rex.W push rbx
  41752a:	sub    rsp,0x20
  41752e:	add    DWORD PTR [rcx+0x20],0xffffffff
  417532:	mov    eax,DWORD PTR [rcx+0x20]
  417535:	mov    rbx,rcx
  417538:	jne    0x417549
  41753a:	call   0x414430
  41753f:	mov    rcx,rbx
  417542:	call   0x40215c
  417547:	xor    eax,eax
  417549:	add    rsp,0x20
  41754d:	pop    rbx
  41754e:	ret    
  41754f:	int3   
  417550:	sub    rcx,0x8
  417554:	jmp    0x417528
  417559:	int3   
  41755a:	int3   
  41755b:	int3   
  41755c:	sub    rcx,0x10
  417560:	jmp    0x417528
  417565:	int3   
  417566:	int3   
  417567:	int3   
  417568:	sub    rcx,0x18
  41756c:	jmp    0x417528
  417571:	int3   
  417572:	int3   
  417573:	int3   
  417574:	rex.W push rbx
  417576:	sub    rsp,0x40
  41757a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  417583:	mov    rbx,r8
  417586:	xor    eax,eax
  417588:	mov    WORD PTR [rsp+0x28],ax
  41758d:	mov    WORD PTR [rsp+0x2a],ax
  417592:	mov    QWORD PTR [rsp+0x30],rax
  417597:	cmp    BYTE PTR [rcx+0x68],al
  41759a:	je     0x4175b8
  41759c:	cmp    edx,0x4
  41759f:	jne    0x417649
  4175a5:	lea    rdx,[rcx+0x70]
  4175a9:	lea    rcx,[rsp+0x28]
  4175ae:	call   0x40b1a0
  4175b3:	jmp    0x417649
  4175b8:	sub    edx,0x4
  4175bb:	je     0x41763b
  4175bd:	sub    edx,0x2
  4175c0:	je     0x417626
  4175c2:	dec    edx
  4175c4:	je     0x417616
  4175c6:	sub    edx,0x2
  4175c9:	je     0x417607
  4175cb:	dec    edx
  4175cd:	je     0x4175f7
  4175cf:	dec    edx
  4175d1:	je     0x4175e7
  4175d3:	dec    edx
  4175d5:	jne    0x417649
  4175d7:	lea    rdx,[rcx+0x48]
  4175db:	lea    rcx,[rsp+0x28]
  4175e0:	call   0x40b2e0
  4175e5:	jmp    0x417649
  4175e7:	lea    rdx,[rcx+0x40]
  4175eb:	lea    rcx,[rsp+0x28]
  4175f0:	call   0x40b2e0
  4175f5:	jmp    0x417649
  4175f7:	lea    rdx,[rcx+0x38]
  4175fb:	lea    rcx,[rsp+0x28]
  417600:	call   0x40b2e0
  417605:	jmp    0x417649
  417607:	mov    edx,DWORD PTR [rcx+0x50]
  41760a:	lea    rcx,[rsp+0x28]
  41760f:	call   0x40b288
  417614:	jmp    0x417649
  417616:	mov    rdx,QWORD PTR [rcx+0x30]
  41761a:	lea    rcx,[rsp+0x28]
  41761f:	call   0x40b2b4
  417624:	jmp    0x417649
  417626:	mov    edx,DWORD PTR [rcx+0x50]
  417629:	shr    edx,0x4
  41762c:	and    dl,0x1
  41762f:	lea    rcx,[rsp+0x28]
  417634:	call   0x40b254
  417639:	jmp    0x417649
  41763b:	lea    rdx,[rcx+0x58]
  41763f:	lea    rcx,[rsp+0x28]
  417644:	call   0x40b1a0
  417649:	mov    rdx,rbx
  41764c:	lea    rcx,[rsp+0x28]
  417651:	call   0x40b0b8
  417656:	nop
  417657:	lea    rcx,[rsp+0x28]
  41765c:	call   0x40b028
  417661:	xor    eax,eax
  417663:	jmp    0x41766a
  417665:	mov    eax,0x8007000e
  41766a:	add    rsp,0x40
  41766e:	pop    rbx
  41766f:	ret    
  417670:	int3   
  417671:	int3   
  417672:	int3   
  417673:	int3   
  417674:	rex.W push rbp
  417676:	sub    rsp,0x20
  41767a:	mov    rbp,rdx
  41767d:	lea    rcx,[rbp+0x28]
  417681:	call   0x40b830
  417686:	add    rsp,0x20
  41768a:	pop    rbp
  41768b:	ret    
  41768c:	int3   
  41768d:	int3   
  41768e:	int3   
  41768f:	int3   
  417690:	int3   
  417691:	int3   
  417692:	int3   
  417693:	int3   
  417694:	mov    QWORD PTR [rsp+0x10],rdx
  417699:	push   rbp
  41769a:	sub    rsp,0x20
  41769e:	mov    rbp,rdx
  4176a1:	lea    rax,[rip+0xffffffffffffffbd]        # 0x417665
  4176a8:	jmp    0x4176aa
  4176aa:	add    rsp,0x20
  4176ae:	pop    rbp
  4176af:	ret    
  4176b0:	int3   
  4176b1:	int3   
  4176b2:	int3   
  4176b3:	int3   
  4176b4:	sub    rsp,0x28
  4176b8:	mov    rcx,QWORD PTR [rcx]
  4176bb:	test   rcx,rcx
  4176be:	je     0x4176c6
  4176c0:	mov    rax,QWORD PTR [rcx]
  4176c3:	call   QWORD PTR [rax+0x10]
  4176c6:	add    rsp,0x28
  4176ca:	ret    
  4176cb:	int3   
  4176cc:	sub    rsp,0x38
  4176d0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4176d9:	mov    r9,QWORD PTR [rcx+0xc8]
  4176e0:	test   r9,r9
  4176e3:	je     0x4176f0
  4176e5:	mov    rax,QWORD PTR [r9]
  4176e8:	mov    rcx,r9
  4176eb:	call   QWORD PTR [rax+0x18]
  4176ee:	jmp    0x417712
  4176f0:	cmp    QWORD PTR [rcx+0xc0],0x0
  4176f8:	jne    0x4176fe
  4176fa:	xor    eax,eax
  4176fc:	jmp    0x417712
  4176fe:	mov    rcx,QWORD PTR [rcx+0xc0]
  417705:	mov    rax,QWORD PTR [rcx]
  417708:	call   QWORD PTR [rax+0x8]
  41770b:	jmp    0x417712
  41770d:	mov    eax,0x8007000e
  417712:	add    rsp,0x38
  417716:	ret    
  417717:	int3   
  417718:	int3   
  417719:	int3   
  41771a:	int3   
  41771b:	int3   
  41771c:	mov    QWORD PTR [rsp+0x10],rdx
  417721:	push   rbp
  417722:	sub    rsp,0x20
  417726:	mov    rbp,rdx
  417729:	lea    rax,[rip+0xffffffffffffffdd]        # 0x41770d
  417730:	jmp    0x417732
  417732:	add    rsp,0x20
  417736:	pop    rbp
  417737:	ret    
  417738:	int3   
  417739:	int3   
  41773a:	int3   
  41773b:	int3   
  41773c:	sub    rsp,0x38
  417740:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  417749:	mov    r9,QWORD PTR [rcx+0xc8]
  417750:	test   r9,r9
  417753:	je     0x417760
  417755:	mov    rax,QWORD PTR [r9]
  417758:	mov    rcx,r9
  41775b:	call   QWORD PTR [rax+0x20]
  41775e:	jmp    0x417782
  417760:	cmp    QWORD PTR [rcx+0xc0],0x0
  417768:	jne    0x41776e
  41776a:	xor    eax,eax
  41776c:	jmp    0x417782
  41776e:	mov    rcx,QWORD PTR [rcx+0xc0]
  417775:	mov    rax,QWORD PTR [rcx]
  417778:	call   QWORD PTR [rax+0x10]
  41777b:	jmp    0x417782
  41777d:	mov    eax,0x8007000e
  417782:	add    rsp,0x38
  417786:	ret    
  417787:	int3   
  417788:	int3   
  417789:	int3   
  41778a:	int3   
  41778b:	int3   
  41778c:	mov    QWORD PTR [rsp+0x10],rdx
  417791:	push   rbp
  417792:	sub    rsp,0x20
  417796:	mov    rbp,rdx
  417799:	lea    rax,[rip+0xffffffffffffffdd]        # 0x41777d
  4177a0:	jmp    0x4177a2
  4177a2:	add    rsp,0x20
  4177a6:	pop    rbp
  4177a7:	ret    
  4177a8:	int3   
  4177a9:	int3   
  4177aa:	int3   
  4177ab:	int3   
  4177ac:	mov    QWORD PTR [rsp+0x8],rcx
  4177b1:	push   rbx
  4177b2:	sub    rsp,0x30
  4177b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4177bf:	mov    rbx,rcx
  4177c2:	lea    rax,[rip+0x378df]        # 0x44f0a8
  4177c9:	mov    QWORD PTR [rcx],rax
  4177cc:	lea    rax,[rip+0x3670d]        # 0x44dee0
  4177d3:	mov    QWORD PTR [rcx+0x8],rax
  4177d7:	lea    rax,[rip+0x366e2]        # 0x44dec0
  4177de:	mov    QWORD PTR [rcx+0x10],rax
  4177e2:	lea    rax,[rip+0x366b7]        # 0x44dea0
  4177e9:	mov    QWORD PTR [rcx+0x18],rax
  4177ed:	cmp    QWORD PTR [rcx+0x88],0x0
  4177f5:	je     0x41780c
  4177f7:	mov    rax,QWORD PTR [rcx+0x80]
  4177fe:	mov    ecx,DWORD PTR [rcx+0x78]
  417801:	mov    rax,QWORD PTR [rax+0x98]
  417808:	mov    BYTE PTR [rcx+rax*1],0x0
  41780c:	mov    rcx,QWORD PTR [rbx+0x88]
  417813:	test   rcx,rcx
  417816:	je     0x41781f
  417818:	mov    rax,QWORD PTR [rcx]
  41781b:	call   QWORD PTR [rax+0x10]
  41781e:	nop
  41781f:	mov    rcx,rbx
  417822:	add    rsp,0x30
  417826:	pop    rbx
  417827:	jmp    0x40c6e8
  41782c:	rex.W push rbp
  41782e:	sub    rsp,0x20
  417832:	mov    rbp,rdx
  417835:	mov    rcx,QWORD PTR [rbp+0x40]
  417839:	call   0x40c6e8
  41783e:	add    rsp,0x20
  417842:	pop    rbp
  417843:	ret    
  417844:	rex.W push rbx
  417846:	push   rdi
  417847:	sub    rsp,0x28
  41784b:	mov    ebx,edx
  41784d:	mov    rdi,rcx
  417850:	call   0x4177ac
  417855:	test   bl,0x1
  417858:	je     0x417862
  41785a:	mov    rcx,rdi
  41785d:	call   0x40215c
  417862:	mov    rax,rdi
  417865:	add    rsp,0x28
  417869:	pop    rdi
  41786a:	pop    rbx
  41786b:	ret    
  41786c:	rex.W push rbx
  41786e:	push   rdi
  41786f:	sub    rsp,0x38
  417873:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41787c:	mov    rdi,rdx
  41787f:	mov    rbx,rcx
  417882:	cmp    QWORD PTR [rcx+0xb0],0x0
  41788a:	je     0x4178d6
  41788c:	mov    QWORD PTR [rsp+0x50],0x0
  417895:	mov    rcx,QWORD PTR [rcx+0xb0]
  41789c:	mov    rax,QWORD PTR [rcx]
  41789f:	lea    r8,[rsp+0x50]
  4178a4:	lea    rdx,[rip+0x3c51d]        # 0x453dc8
  4178ab:	call   QWORD PTR [rax]
  4178ad:	mov    rcx,QWORD PTR [rsp+0x50]
  4178b2:	test   rcx,rcx
  4178b5:	je     0x4178d6
  4178b7:	mov    rax,QWORD PTR [rcx]
  4178ba:	mov    rdx,rdi
  4178bd:	call   QWORD PTR [rax+0x18]
  4178c0:	mov    ebx,eax
  4178c2:	mov    rcx,QWORD PTR [rsp+0x50]
  4178c7:	test   rcx,rcx
  4178ca:	je     0x4178d2
  4178cc:	mov    rdx,QWORD PTR [rcx]
  4178cf:	call   QWORD PTR [rdx+0x10]
  4178d2:	mov    eax,ebx
  4178d4:	jmp    0x417900
  4178d6:	mov    rcx,QWORD PTR [rbx+0xa8]
  4178dd:	test   rcx,rcx
  4178e0:	jne    0x4178e9
  4178e2:	mov    eax,0x80004001
  4178e7:	jmp    0x417900
  4178e9:	mov    BYTE PTR [rbx+0xa0],0x1
  4178f0:	mov    rax,QWORD PTR [rcx]
  4178f3:	mov    rdx,rdi
  4178f6:	call   QWORD PTR [rax+0x20]
  4178f9:	jmp    0x417900
  4178fb:	mov    eax,0x8007000e
  417900:	add    rsp,0x38
  417904:	pop    rdi
  417905:	pop    rbx
  417906:	ret    
  417907:	int3   
  417908:	int3   
  417909:	int3   
  41790a:	int3   
  41790b:	int3   
  41790c:	rex.W push rbp
  41790e:	sub    rsp,0x20
  417912:	mov    rbp,rdx
  417915:	lea    rcx,[rbp+0x50]
  417919:	call   0x4176b4
  41791e:	add    rsp,0x20
  417922:	pop    rbp
  417923:	ret    
  417924:	int3   
  417925:	int3   
  417926:	int3   
  417927:	int3   
  417928:	int3   
  417929:	int3   
  41792a:	int3   
  41792b:	int3   
  41792c:	mov    QWORD PTR [rsp+0x10],rdx
  417931:	push   rbp
  417932:	sub    rsp,0x20
  417936:	mov    rbp,rdx
  417939:	lea    rax,[rip+0xffffffffffffffbb]        # 0x4178fb
  417940:	jmp    0x417942
  417942:	add    rsp,0x20
  417946:	pop    rbp
  417947:	ret    
  417948:	int3   
  417949:	int3   
  41794a:	int3   
  41794b:	int3   
  41794c:	rex.W push rbx
  41794e:	push   rbp
  41794f:	push   rsi
  417950:	push   rdi
  417951:	sub    rsp,0x28
  417955:	mov    rbx,rcx
  417958:	mov    ecx,DWORD PTR [rcx+0xc]
  41795b:	mov    bpl,dl
  41795e:	cmp    DWORD PTR [rbx+0x8],ecx
  417961:	jne    0x417999
  417963:	mov    eax,ecx
  417965:	shr    eax,0x2
  417968:	lea    esi,[rax+rcx*1+0x1]
  41796c:	mov    ecx,esi
  41796e:	call   0x402130
  417973:	cmp    DWORD PTR [rbx+0x8],0x0
  417977:	mov    rdi,rax
  41797a:	je     0x41798b
  41797c:	mov    r8d,DWORD PTR [rbx+0x8]
  417980:	mov    rdx,QWORD PTR [rbx]
  417983:	mov    rcx,rax
  417986:	call   0x44b480
  41798b:	mov    rcx,QWORD PTR [rbx]
  41798e:	call   0x40215c
  417993:	mov    QWORD PTR [rbx],rdi
  417996:	mov    DWORD PTR [rbx+0xc],esi
  417999:	mov    ecx,DWORD PTR [rbx+0x8]
  41799c:	mov    rax,QWORD PTR [rbx]
  41799f:	mov    BYTE PTR [rcx+rax*1],bpl
  4179a3:	mov    eax,DWORD PTR [rbx+0x8]
  4179a6:	lea    ecx,[rax+0x1]
  4179a9:	mov    DWORD PTR [rbx+0x8],ecx
  4179ac:	add    rsp,0x28
  4179b0:	pop    rdi
  4179b1:	pop    rsi
  4179b2:	pop    rbp
  4179b3:	pop    rbx
  4179b4:	ret    
  4179b5:	int3   
  4179b6:	int3   
  4179b7:	int3   
  4179b8:	rex.W push rbx
  4179ba:	push   rsi
  4179bb:	push   rdi
  4179bc:	push   r12
  4179be:	sub    rsp,0x58
  4179c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4179cb:	mov    r12,r8
  4179ce:	mov    rbx,rdx
  4179d1:	mov    rdi,rcx
  4179d4:	mov    QWORD PTR [r8],0x0
  4179db:	cmp    BYTE PTR [rcx+0x68],0x0
  4179df:	je     0x4179eb
  4179e1:	mov    eax,0x1
  4179e6:	jmp    0x417c86
  4179eb:	cmp    QWORD PTR [rcx+0xb8],0x0
  4179f3:	je     0x417a09
  4179f5:	mov    rcx,QWORD PTR [rcx+0xb8]
  4179fc:	mov    rax,QWORD PTR [rcx]
  4179ff:	call   QWORD PTR [rax]
  417a01:	test   eax,eax
  417a03:	jne    0x417c86
  417a09:	mov    rdx,rbx
  417a0c:	lea    rcx,[rsp+0x28]
  417a11:	call   0x4031c0
  417a16:	nop
  417a17:	mov    r8w,0x5c
  417a1c:	mov    dx,0x2f
  417a20:	lea    rcx,[rsp+0x28]
  417a25:	call   0x403a1c
  417a2a:	lea    rcx,[rsp+0x28]
  417a2f:	call   0x4135d8
  417a34:	test   al,al
  417a36:	jne    0x417a4c
  417a38:	mov    rcx,QWORD PTR [rsp+0x28]
  417a3d:	call   0x40215c
  417a42:	mov    eax,0x1
  417a47:	jmp    0x417c86
  417a4c:	lea    rcx,[rsp+0x38]
  417a51:	call   0x403150
  417a56:	nop
  417a57:	lea    r8,[rsp+0x38]
  417a5c:	mov    rdx,QWORD PTR [rsp+0x28]
  417a61:	mov    rcx,QWORD PTR [rdi+0x20]
  417a65:	call   0x40ab14
  417a6a:	test   al,al
  417a6c:	jne    0x417a8d
  417a6e:	mov    rcx,QWORD PTR [rsp+0x38]
  417a73:	call   0x40215c
  417a78:	nop
  417a79:	mov    rcx,QWORD PTR [rsp+0x28]
  417a7e:	call   0x40215c
  417a83:	mov    eax,0x1
  417a88:	jmp    0x417c86
  417a8d:	mov    rdx,QWORD PTR [rsp+0x38]
  417a92:	lea    rcx,[rdi+0x30]
  417a96:	call   0x408134
  417a9b:	test   al,al
  417a9d:	jne    0x417abe
  417a9f:	mov    rcx,QWORD PTR [rsp+0x38]
  417aa4:	call   0x40215c
  417aa9:	nop
  417aaa:	mov    rcx,QWORD PTR [rsp+0x28]
  417aaf:	call   0x40215c
  417ab4:	mov    eax,0x1
  417ab9:	jmp    0x417c86
  417abe:	mov    eax,DWORD PTR [rdi+0x50]
  417ac1:	shr    eax,0x4
  417ac4:	test   al,0x1
  417ac6:	je     0x417ae7
  417ac8:	mov    rcx,QWORD PTR [rsp+0x38]
  417acd:	call   0x40215c
  417ad2:	nop
  417ad3:	mov    rcx,QWORD PTR [rsp+0x28]
  417ad8:	call   0x40215c
  417add:	mov    eax,0x1
  417ae2:	jmp    0x417c86
  417ae7:	mov    ecx,0x90
  417aec:	call   0x402130
  417af1:	mov    rbx,rax
  417af4:	mov    QWORD PTR [rsp+0x80],rax
  417afc:	test   rax,rax
  417aff:	je     0x417b41
  417b01:	mov    rcx,rax
  417b04:	call   0x40d02c
  417b09:	lea    rax,[rip+0x37598]        # 0x44f0a8
  417b10:	mov    QWORD PTR [rbx],rax
  417b13:	lea    rax,[rip+0x363c6]        # 0x44dee0
  417b1a:	mov    QWORD PTR [rbx+0x8],rax
  417b1e:	lea    rax,[rip+0x3639b]        # 0x44dec0
  417b25:	mov    QWORD PTR [rbx+0x10],rax
  417b29:	lea    rax,[rip+0x36370]        # 0x44dea0
  417b30:	mov    QWORD PTR [rbx+0x18],rax
  417b34:	mov    QWORD PTR [rbx+0x88],0x0
  417b3f:	jmp    0x417b43
  417b41:	xor    ebx,ebx
  417b43:	mov    QWORD PTR [rsp+0x80],rbx
  417b4b:	test   rbx,rbx
  417b4e:	je     0x417b5a
  417b50:	mov    rax,QWORD PTR [rbx]
  417b53:	mov    rcx,rbx
  417b56:	call   QWORD PTR [rax+0x8]
  417b59:	nop
  417b5a:	lea    rcx,[rbx+0x28]
  417b5e:	mov    rdx,QWORD PTR [rsp+0x38]
  417b63:	call   0x40946c
  417b68:	test   al,al
  417b6a:	jne    0x417bdd
  417b6c:	call   QWORD PTR [rip+0x3562e]        # 0x44d1a0
  417b72:	test   eax,eax
  417b74:	jne    0x417ba4
  417b76:	test   rbx,rbx
  417b79:	je     0x417b85
  417b7b:	mov    rax,QWORD PTR [rbx]
  417b7e:	mov    rcx,rbx
  417b81:	call   QWORD PTR [rax+0x10]
  417b84:	nop
  417b85:	mov    rcx,QWORD PTR [rsp+0x38]
  417b8a:	call   0x40215c
  417b8f:	nop
  417b90:	mov    rcx,QWORD PTR [rsp+0x28]
  417b95:	call   0x40215c
  417b9a:	mov    eax,0x80004005
  417b9f:	jmp    0x417c86
  417ba4:	movzx  edi,ax
  417ba7:	or     edi,0x80070000
  417bad:	test   eax,eax
  417baf:	cmovle edi,eax
  417bb2:	test   rbx,rbx
  417bb5:	je     0x417bc1
  417bb7:	mov    rdx,QWORD PTR [rbx]
  417bba:	mov    rcx,rbx
  417bbd:	call   QWORD PTR [rdx+0x10]
  417bc0:	nop
  417bc1:	mov    rcx,QWORD PTR [rsp+0x38]
  417bc6:	call   0x40215c
  417bcb:	nop
  417bcc:	mov    rcx,QWORD PTR [rsp+0x28]
  417bd1:	call   0x40215c
  417bd6:	mov    eax,edi
  417bd8:	jmp    0x417c86
  417bdd:	lea    rcx,[rdi+0xa0]
  417be4:	mov    rdx,QWORD PTR [rdi+0x30]
  417be8:	call   0x4010c8
  417bed:	mov    ecx,0x10
  417bf2:	call   0x402130
  417bf7:	mov    QWORD PTR [rsp+0x90],rax
  417bff:	test   rax,rax
  417c02:	je     0x417c13
  417c04:	lea    rdx,[rsp+0x28]
  417c09:	mov    rcx,rax
  417c0c:	call   0x403208
  417c11:	jmp    0x417c15
  417c13:	xor    eax,eax
  417c15:	lea    rcx,[rdi+0x80]
  417c1c:	mov    rdx,rax
  417c1f:	call   0x4010c8
  417c24:	lea    rcx,[rdi+0x90]
  417c2b:	mov    dl,0x1
  417c2d:	call   0x41794c
  417c32:	mov    DWORD PTR [rbx+0x78],eax
  417c35:	add    rdi,0xfffffffffffffff8
  417c39:	mov    QWORD PTR [rbx+0x80],rdi
  417c40:	je     0x417c4b
  417c42:	mov    rax,QWORD PTR [rdi]
  417c45:	mov    rcx,rdi
  417c48:	call   QWORD PTR [rax+0x8]
  417c4b:	mov    rcx,QWORD PTR [rbx+0x88]
  417c52:	test   rcx,rcx
  417c55:	je     0x417c5d
  417c57:	mov    rax,QWORD PTR [rcx]
  417c5a:	call   QWORD PTR [rax+0x10]
  417c5d:	mov    QWORD PTR [rbx+0x88],rdi
  417c64:	mov    QWORD PTR [r12],rbx
  417c68:	mov    rcx,QWORD PTR [rsp+0x38]
  417c6d:	call   0x40215c
  417c72:	nop
  417c73:	mov    rcx,QWORD PTR [rsp+0x28]
  417c78:	call   0x40215c
  417c7d:	xor    eax,eax
  417c7f:	jmp    0x417c86
  417c81:	mov    eax,0x8007000e
  417c86:	add    rsp,0x58
  417c8a:	pop    r12
  417c8c:	pop    rdi
  417c8d:	pop    rsi
  417c8e:	pop    rbx
  417c8f:	ret    
  417c90:	int3   
  417c91:	int3   
  417c92:	int3   
  417c93:	int3   
  417c94:	int3   
  417c95:	int3   
  417c96:	int3   
  417c97:	int3   
  417c98:	rex.W push rbp
  417c9a:	sub    rsp,0x20
  417c9e:	mov    rbp,rdx
  417ca1:	lea    rcx,[rbp+0x28]
  417ca5:	call   0x401000
  417caa:	add    rsp,0x20
  417cae:	pop    rbp
  417caf:	ret    
  417cb0:	int3   
  417cb1:	int3   
  417cb2:	int3   
  417cb3:	int3   
  417cb4:	int3   
  417cb5:	int3   
  417cb6:	int3   
  417cb7:	int3   
  417cb8:	rex.W push rbp
  417cba:	sub    rsp,0x20
  417cbe:	mov    rbp,rdx
  417cc1:	lea    rcx,[rbp+0x38]
  417cc5:	call   0x401000
  417cca:	add    rsp,0x20
  417cce:	pop    rbp
  417ccf:	ret    
  417cd0:	int3   
  417cd1:	int3   
  417cd2:	int3   
  417cd3:	int3   
  417cd4:	int3   
  417cd5:	int3   
  417cd6:	int3   
  417cd7:	int3   
  417cd8:	rex.W push rbp
  417cda:	sub    rsp,0x20
  417cde:	mov    rbp,rdx
  417ce1:	mov    rcx,QWORD PTR [rbp+0x80]
  417ce8:	call   0x40215c
  417ced:	add    rsp,0x20
  417cf1:	pop    rbp
  417cf2:	ret    
  417cf3:	int3   
  417cf4:	int3   
  417cf5:	int3   
  417cf6:	int3   
  417cf7:	int3   
  417cf8:	rex.W push rbp
  417cfa:	sub    rsp,0x20
  417cfe:	mov    rbp,rdx
  417d01:	lea    rcx,[rbp+0x80]
  417d08:	call   0x4176b4
  417d0d:	add    rsp,0x20
  417d11:	pop    rbp
  417d12:	ret    
  417d13:	int3   
  417d14:	int3   
  417d15:	int3   
  417d16:	int3   
  417d17:	int3   
  417d18:	rex.W push rbp
  417d1a:	sub    rsp,0x20
  417d1e:	mov    rbp,rdx
  417d21:	mov    rcx,QWORD PTR [rbp+0x90]
  417d28:	call   0x40215c
  417d2d:	add    rsp,0x20
  417d31:	pop    rbp
  417d32:	ret    
  417d33:	int3   
  417d34:	int3   
  417d35:	int3   
  417d36:	int3   
  417d37:	int3   
  417d38:	mov    QWORD PTR [rsp+0x10],rdx
  417d3d:	push   rbp
  417d3e:	sub    rsp,0x20
  417d42:	mov    rbp,rdx
  417d45:	lea    rax,[rip+0xffffffffffffff35]        # 0x417c81
  417d4c:	jmp    0x417d4e
  417d4e:	add    rsp,0x20
  417d52:	pop    rbp
  417d53:	ret    
  417d54:	int3   
  417d55:	int3   
  417d56:	int3   
  417d57:	int3   
  417d58:	mov    rcx,QWORD PTR [rcx]
  417d5b:	rex.W jmp QWORD PTR [rip+0x35356]        # 0x44d0b8
  417d62:	int3   
  417d63:	int3   
  417d64:	mov    rcx,QWORD PTR [rcx+0x8]
  417d68:	jmp    0x44ad20
  417d6d:	int3   
  417d6e:	int3   
  417d6f:	int3   
  417d70:	rex.W push rbx
  417d72:	push   rbp
  417d73:	push   rsi
  417d74:	push   rdi
  417d75:	push   r12
  417d77:	push   r13
  417d79:	push   r14
  417d7b:	push   r15
  417d7d:	mov    rbp,QWORD PTR [rcx]
  417d80:	mov    rax,QWORD PTR [r8]
  417d83:	mov    r14,QWORD PTR [rcx+0x8]
  417d87:	xor    r9d,r9d
  417d8a:	test   rbp,rbp
  417d8d:	mov    r12,r8
  417d90:	lea    r13d,[r9+0x1]
  417d94:	mov    r15d,edx
  417d97:	mov    QWORD PTR [rsp+0x48],rax
  417d9c:	mov    r10d,r13d
  417d9f:	mov    r11d,r13d
  417da2:	je     0x417f32
  417da8:	mov    ebx,DWORD PTR [rsp+0x4c]
  417dac:	mov    edi,DWORD PTR [rsp+0x48]
  417db0:	movzx  ecx,di
  417db3:	shr    edi,0x10
  417db6:	imul   ecx,ecx,0x9069
  417dbc:	add    edi,ecx
  417dbe:	movzx  ecx,bx
  417dc1:	shr    ebx,0x10
  417dc4:	mov    edx,edi
  417dc6:	mov    DWORD PTR [rsp+0x48],edi
  417dca:	imul   ecx,ecx,0x4650
  417dd0:	add    ebx,ecx
  417dd2:	shl    edx,0x10
  417dd5:	add    edx,ebx
  417dd7:	mov    DWORD PTR [rsp+0x4c],ebx
  417ddb:	mov    eax,edx
  417ddd:	shr    edx,1
  417ddf:	and    eax,r13d
  417de2:	je     0x417f1a
  417de8:	cmp    r9d,0x400
  417def:	jb     0x417f1a
  417df5:	mov    ecx,edx
  417df7:	shr    edx,0x2
  417dfa:	mov    r8d,r13d
  417dfd:	and    ecx,0x3
  417e00:	inc    ecx
  417e02:	shl    r8d,cl
  417e05:	sub    r8d,r13d
  417e08:	and    r8d,edx
  417e0b:	shr    edx,cl
  417e0d:	mov    eax,edx
  417e0f:	inc    r8d
  417e12:	shr    edx,0x3
  417e15:	and    eax,0x7
  417e18:	je     0x417ee6
  417e1e:	mov    ecx,edx
  417e20:	shr    edx,0x2
  417e23:	mov    eax,r13d
  417e26:	and    ecx,0x3
  417e29:	inc    ecx
  417e2b:	shl    eax,cl
  417e2d:	sub    eax,r13d
  417e30:	and    eax,edx
  417e32:	shr    edx,cl
  417e34:	add    r8d,eax
  417e37:	jmp    0x417e3c
  417e39:	add    r11d,r13d
  417e3c:	mov    ecx,r11d
  417e3f:	mov    eax,r13d
  417e42:	shl    eax,cl
  417e44:	cmp    eax,r9d
  417e47:	jb     0x417e39
  417e49:	cmp    r15d,r11d
  417e4c:	mov    ecx,0x5
  417e51:	mov    esi,r15d
  417e54:	cmova  esi,r11d
  417e58:	lea    eax,[rcx-0x1]
  417e5b:	cmp    esi,0x15
  417e5e:	cmovbe ecx,eax
  417e61:	mov    eax,r13d
  417e64:	shl    eax,cl
  417e66:	movzx  ecx,di
  417e69:	shr    edi,0x10
  417e6c:	lea    r10d,[rax-0x1]
  417e70:	and    r10d,edx
  417e73:	movzx  edx,bx
  417e76:	shr    ebx,0x10
  417e79:	imul   ecx,ecx,0x9069
  417e7f:	add    edi,ecx
  417e81:	add    r10d,0x6
  417e85:	imul   edx,edx,0x4650
  417e8b:	add    ebx,edx
  417e8d:	mov    edx,edi
  417e8f:	shl    edx,0x10
  417e92:	add    edx,ebx
  417e94:	cmp    r10d,esi
  417e97:	ja     0x417e66
  417e99:	mov    ecx,r10d
  417e9c:	mov    r10d,0x1
  417ea2:	shl    r10d,cl
  417ea5:	dec    r10d
  417ea8:	and    r10d,edx
  417eab:	cmp    r10d,r9d
  417eae:	jb     0x417ed5
  417eb0:	movzx  ecx,di
  417eb3:	shr    edi,0x10
  417eb6:	imul   ecx,ecx,0x9069
  417ebc:	add    edi,ecx
  417ebe:	movzx  ecx,bx
  417ec1:	shr    ebx,0x10
  417ec4:	mov    edx,edi
  417ec6:	imul   ecx,ecx,0x4650
  417ecc:	add    ebx,ecx
  417ece:	shl    edx,0x10
  417ed1:	add    edx,ebx
  417ed3:	jmp    0x417e66
  417ed5:	mov    r13d,0x1
  417edb:	mov    DWORD PTR [rsp+0x4c],ebx
  417edf:	mov    DWORD PTR [rsp+0x48],edi
  417ee3:	add    r10d,r13d
  417ee6:	mov    eax,ebp
  417ee8:	mov    ecx,r9d
  417eeb:	sub    eax,r9d
  417eee:	cmp    r8d,eax
  417ef1:	cmova  r8d,eax
  417ef5:	add    rcx,r14
  417ef8:	mov    eax,r10d
  417efb:	mov    rdx,rcx
  417efe:	add    r9d,r8d
  417f01:	sub    rdx,rax
  417f04:	test   r8d,r8d
  417f07:	je     0x417f21
  417f09:	mov    al,BYTE PTR [rdx]
  417f0b:	add    rdx,r13
  417f0e:	mov    BYTE PTR [rcx],al
  417f10:	add    rcx,r13
  417f13:	sub    r8,r13
  417f16:	jne    0x417f09
  417f18:	jmp    0x417f21
  417f1a:	mov    BYTE PTR [r9+r14*1],dl
  417f1e:	add    r9d,r13d
  417f21:	mov    eax,r9d
  417f24:	cmp    rax,rbp
  417f27:	jb     0x417db0
  417f2d:	mov    rax,QWORD PTR [rsp+0x48]
  417f32:	mov    QWORD PTR [r12],rax
  417f36:	pop    r15
  417f38:	pop    r14
  417f3a:	pop    r13
  417f3c:	pop    r12
  417f3e:	pop    rdi
  417f3f:	pop    rsi
  417f40:	pop    rbp
  417f41:	pop    rbx
  417f42:	ret    
  417f43:	int3   
  417f44:	rex.W push rbx
  417f46:	mov    r10,QWORD PTR [rcx+0x20]
  417f4a:	mov    eax,0x100000
  417f4f:	mov    rbx,rdx
  417f52:	sub    r10,QWORD PTR [rcx+0x18]
  417f56:	cmp    r8d,eax
  417f59:	mov    r11,rcx
  417f5c:	cmova  r8d,eax
  417f60:	mov    eax,r8d
  417f63:	cmp    rax,r10
  417f66:	cmova  r8d,r10d
  417f6a:	test   r8d,r8d
  417f6d:	je     0x417f90
  417f6f:	xor    edx,edx
  417f71:	mov    r10d,r8d
  417f74:	mov    rax,QWORD PTR [r11+0x18]
  417f78:	lea    rcx,[rdx+rax*1]
  417f7c:	mov    rax,QWORD PTR [r11+0x10]
  417f80:	inc    rdx
  417f83:	mov    cl,BYTE PTR [rcx+rax*1]
  417f86:	mov    BYTE PTR [rbx],cl
  417f88:	inc    rbx
  417f8b:	dec    r10
  417f8e:	jne    0x417f74
  417f90:	mov    eax,r8d
  417f93:	add    QWORD PTR [r11+0x18],rax
  417f97:	test   r9,r9
  417f9a:	je     0x417f9f
  417f9c:	mov    DWORD PTR [r9],r8d
  417f9f:	xor    eax,eax
  417fa1:	pop    rbx
  417fa2:	ret    
  417fa3:	int3   
  417fa4:	rex.W push rbx
  417fa6:	push   rbp
  417fa7:	push   rsi
  417fa8:	push   rdi
  417fa9:	push   r12
  417fab:	sub    rsp,0x20
  417faf:	mov    rdi,rcx
  417fb2:	mov    rcx,QWORD PTR [rcx+0x20]
  417fb6:	mov    ebp,r8d
  417fb9:	mov    rbx,QWORD PTR [rdi+0x8]
  417fbd:	mov    rsi,r9
  417fc0:	mov    r12,rdx
  417fc3:	sub    rbx,rcx
  417fc6:	cmp    rbx,rbp
  417fc9:	cmova  rbx,rbp
  417fcd:	test   rbx,rbx
  417fd0:	je     0x417fff
  417fd2:	cmp    BYTE PTR [rdi+0x28],0x0
  417fd6:	je     0x417fe4
  417fd8:	add    rcx,QWORD PTR [rdi+0x10]
  417fdc:	mov    r8,rbx
  417fdf:	call   0x44b480
  417fe4:	cmp    BYTE PTR [rdi+0x29],0x0
  417fe8:	je     0x417ffb
  417fea:	mov    ecx,DWORD PTR [rdi+0x2c]
  417fed:	mov    r8,rbx
  417ff0:	mov    rdx,r12
  417ff3:	call   0x44b110
  417ff8:	mov    DWORD PTR [rdi+0x2c],eax
  417ffb:	add    QWORD PTR [rdi+0x20],rbx
  417fff:	test   rsi,rsi
  418002:	je     0x418006
  418004:	mov    DWORD PTR [rsi],ebx
  418006:	sub    rbx,rbp
  418009:	neg    rbx
  41800c:	sbb    eax,eax
  41800e:	and    eax,0x80004005
  418013:	add    rsp,0x20
  418017:	pop    r12
  418019:	pop    rdi
  41801a:	pop    rsi
  41801b:	pop    rbp
  41801c:	pop    rbx
  41801d:	ret    
  41801e:	int3   
  41801f:	int3   
  418020:	rex.W push rbx
  418022:	push   rsi
  418023:	push   rdi
  418024:	sub    rsp,0x20
  418028:	cmp    BYTE PTR [rcx+0xc],0x0
  41802c:	mov    rbx,r9
  41802f:	mov    edi,r8d
  418032:	mov    rsi,rcx
  418035:	je     0x418045
  418037:	mov    ecx,DWORD PTR [rcx+0x10]
  41803a:	mov    r8,rdi
  41803d:	call   0x44b110
  418042:	mov    DWORD PTR [rsi+0x10],eax
  418045:	test   rbx,rbx
  418048:	je     0x41804c
  41804a:	mov    DWORD PTR [rbx],edi
  41804c:	xor    eax,eax
  41804e:	add    rsp,0x20
  418052:	pop    rdi
  418053:	pop    rsi
  418054:	pop    rbx
  418055:	ret    
  418056:	int3   
  418057:	int3   
  418058:	sub    rsp,0x38
  41805c:	call   QWORD PTR [rip+0x350ce]        # 0x44d130
  418062:	lea    r9,[rsp+0x40]
  418067:	lea    r8,[rsp+0x50]
  41806c:	mov    rcx,rax
  41806f:	lea    rax,[rsp+0x48]
  418074:	lea    rdx,[rsp+0x58]
  418079:	mov    QWORD PTR [rsp+0x20],rax
  41807e:	call   QWORD PTR [rip+0x3502c]        # 0x44d0b0
  418084:	test   eax,eax
  418086:	je     0x4180ab
  418088:	mov    ecx,DWORD PTR [rsp+0x40]
  41808c:	mov    eax,DWORD PTR [rsp+0x44]
  418090:	mov    edx,DWORD PTR [rsp+0x4c]
  418094:	shl    rax,0x20
  418098:	shl    rdx,0x20
  41809c:	or     rax,rcx
  41809f:	mov    ecx,DWORD PTR [rsp+0x48]
  4180a3:	or     rdx,rcx
  4180a6:	add    rax,rdx
  4180a9:	jmp    0x4180ba
  4180ab:	call   QWORD PTR [rip+0x351a7]        # 0x44d258
  4180b1:	mov    eax,eax
  4180b3:	imul   rax,rax,0x2710
  4180ba:	add    rsp,0x38
  4180be:	ret    
  4180bf:	int3   
  4180c0:	rex.W push rbx
  4180c2:	sub    rsp,0x20
  4180c6:	mov    rbx,rcx
  4180c9:	mov    QWORD PTR [rcx+0x8],0x3e8
  4180d1:	mov    QWORD PTR [rcx+0x18],0x989680
  4180d9:	call   QWORD PTR [rip+0x35179]        # 0x44d258
  4180df:	mov    QWORD PTR [rbx+0x10],0x0
  4180e7:	mov    r11d,eax
  4180ea:	mov    QWORD PTR [rbx],r11
  4180ed:	call   0x418058
  4180f2:	mov    QWORD PTR [rbx+0x38],rax
  4180f6:	add    rsp,0x20
  4180fa:	pop    rbx
  4180fb:	ret    
  4180fc:	rex.W push rbx
  4180fe:	push   rdi
  4180ff:	sub    rsp,0x28
  418103:	mov    rbx,rcx
  418106:	mov    rdi,rdx
  418109:	mov    rcx,rdx
  41810c:	mov    rdx,rbx
  41810f:	mov    r8d,0x38
  418115:	call   0x44b480
  41811a:	call   QWORD PTR [rip+0x35138]        # 0x44d258
  418120:	mov    r11d,eax
  418123:	sub    r11,QWORD PTR [rbx]
  418126:	mov    QWORD PTR [rdi],r11
  418129:	call   0x418058
  41812e:	sub    rax,QWORD PTR [rbx+0x38]
  418132:	mov    QWORD PTR [rdi+0x10],rax
  418136:	add    rsp,0x28
  41813a:	pop    rdi
  41813b:	pop    rbx
  41813c:	ret    
  41813d:	int3   
  41813e:	int3   
  41813f:	int3   
  418140:	rex.W push rbx
  418142:	push   rbp
  418143:	push   rsi
  418144:	push   rdi
  418145:	push   r12
  418147:	sub    rsp,0x60
  41814b:	mov    rbx,QWORD PTR [rcx+0x50]
  41814f:	mov    rdi,rcx
  418152:	mov    rbp,r8
  418155:	mov    rcx,rbx
  418158:	mov    r12,rdx
  41815b:	call   QWORD PTR [rip+0x34f5f]        # 0x44d0c0
  418161:	mov    esi,DWORD PTR [rbx+0x28]
  418164:	mov    rcx,rbx
  418167:	call   QWORD PTR [rip+0x34f4b]        # 0x44d0b8
  41816d:	xor    ebx,ebx
  41816f:	cmp    esi,ebx
  418171:	jne    0x41820e
  418177:	cmp    QWORD PTR [rdi+0x60],rbx
  41817b:	jne    0x418184
  41817d:	xor    eax,eax
  41817f:	jmp    0x418210
  418184:	lea    rcx,[rdi+0x10]
  418188:	lea    rdx,[rsp+0x20]
  41818d:	mov    QWORD PTR [rsp+0x50],rbx
  418192:	call   0x4180fc
  418197:	mov    r11,QWORD PTR [rdi+0x50]
  41819b:	mov    rcx,QWORD PTR [rdi+0x60]
  41819f:	xor    r8d,r8d
  4181a2:	cmp    BYTE PTR [r11+0x2c],bl
  4181a6:	lea    rdx,[rsp+0x20]
  4181ab:	je     0x4181cf
  4181ad:	mov    rax,QWORD PTR [rdi+0x30]
  4181b1:	add    rax,QWORD PTR [r12]
  4181b5:	mov    QWORD PTR [rsp+0x40],rax
  4181ba:	mov    rax,QWORD PTR [rdi+0x38]
  4181be:	add    rax,QWORD PTR [rbp+0x0]
  4181c2:	mov    QWORD PTR [rsp+0x48],rax
  4181c7:	mov    rax,QWORD PTR [rcx]
  4181ca:	call   QWORD PTR [rax+0x8]
  4181cd:	jmp    0x4181ef
  4181cf:	mov    rax,QWORD PTR [rdi+0x38]
  4181d3:	add    rax,QWORD PTR [r12]
  4181d7:	mov    QWORD PTR [rsp+0x48],rax
  4181dc:	mov    rax,QWORD PTR [rdi+0x30]
  4181e0:	add    rax,QWORD PTR [rbp+0x0]
  4181e4:	mov    QWORD PTR [rsp+0x40],rax
  4181e9:	mov    rax,QWORD PTR [rcx]
  4181ec:	call   QWORD PTR [rax+0x10]
  4181ef:	cmp    eax,ebx
  4181f1:	mov    esi,eax
  4181f3:	je     0x41820e
  4181f5:	mov    rbx,QWORD PTR [rdi+0x50]
  4181f9:	mov    rcx,rbx
  4181fc:	call   QWORD PTR [rip+0x34ebe]        # 0x44d0c0
  418202:	mov    rcx,rbx
  418205:	mov    DWORD PTR [rbx+0x28],esi
  418208:	call   QWORD PTR [rip+0x34eaa]        # 0x44d0b8
  41820e:	mov    eax,esi
  418210:	add    rsp,0x60
  418214:	pop    r12
  418216:	pop    rdi
  418217:	pop    rsi
  418218:	pop    rbp
  418219:	pop    rbx
  41821a:	ret    
  41821b:	int3   
  41821c:	mov    rdx,QWORD PTR [rcx+0x10]
  418220:	mov    r8,QWORD PTR [rcx+0x18]
  418224:	mov    r9,QWORD PTR [rcx]
  418227:	mov    rax,QWORD PTR [rcx+0x8]
  41822b:	mov    ecx,0xf4240
  418230:	jmp    0x418238
  418232:	shr    rdx,1
  418235:	shr    r8,1
  418238:	cmp    rdx,rcx
  41823b:	ja     0x418232
  41823d:	jmp    0x418245
  41823f:	shr    rax,1
  418242:	shr    r9,1
  418245:	cmp    rax,rcx
  418248:	ja     0x41823f
  41824a:	mov    ecx,0x1
  41824f:	test   r8,r8
  418252:	cmove  r8,rcx
  418256:	test   r9,r9
  418259:	cmove  r9,rcx
  41825d:	imul   rax,rdx
  418261:	xor    edx,edx
  418263:	imul   rax,rax,0xf4240
  41826a:	div    r8
  41826d:	xor    edx,edx
  41826f:	div    r9
  418272:	ret    
  418273:	int3   
  418274:	mov    r10,QWORD PTR [rcx+0x10]
  418278:	mov    r8,QWORD PTR [rcx+0x18]
  41827c:	mov    rax,QWORD PTR [rcx]
  41827f:	mov    r9,QWORD PTR [rcx+0x8]
  418283:	mov    r11,rdx
  418286:	mov    ecx,0xf4240
  41828b:	jmp    0x418293
  41828d:	shr    r8,1
  418290:	shr    r10,1
  418293:	cmp    r8,rcx
  418296:	ja     0x41828d
  418298:	jmp    0x4182a0
  41829a:	shr    rax,1
  41829d:	shr    r9,1
  4182a0:	cmp    rax,rcx
  4182a3:	ja     0x41829a
  4182a5:	mov    ecx,0x1
  4182aa:	test   r9,r9
  4182ad:	cmove  r9,rcx
  4182b1:	test   r10,r10
  4182b4:	cmove  r10,rcx
  4182b8:	xor    edx,edx
  4182ba:	imul   rax,r8
  4182be:	div    r9
  4182c1:	xor    edx,edx
  4182c3:	imul   rax,r11
  4182c7:	div    r10
  4182ca:	ret    
  4182cb:	int3   
  4182cc:	mov    rax,QWORD PTR [rcx+0x8]
  4182d0:	mov    r8,QWORD PTR [rcx]
  4182d3:	mov    ecx,0xf4240
  4182d8:	jmp    0x4182e0
  4182da:	shr    rax,1
  4182dd:	shr    r8,1
  4182e0:	cmp    rax,rcx
  4182e3:	ja     0x4182da
  4182e5:	mov    ecx,0x1
  4182ea:	test   r8,r8
  4182ed:	cmove  r8,rcx
  4182f1:	imul   rax,rdx
  4182f5:	xor    edx,edx
  4182f7:	div    r8
  4182fa:	ret    
  4182fb:	int3   
  4182fc:	rex.W push rbx
  4182fe:	push   rsi
  4182ff:	push   rdi
  418300:	mov    eax,0x40000
  418305:	mov    edi,edx
  418307:	mov    r10,r8
  41830a:	cmp    edx,eax
  41830c:	mov    esi,0x1
  418311:	cmovb  edi,eax
  418314:	cmp    BYTE PTR [rcx],0x0
  418317:	mov    eax,DWORD PTR [rcx+0x4]
  41831a:	je     0x418369
  41831c:	lea    edx,[rsi+0x7]
  41831f:	mov    ecx,edx
  418321:	mov    r11d,esi
  418324:	xor    r8d,r8d
  418327:	shl    r11d,cl
  41832a:	lea    ecx,[rdx-0x8]
  41832d:	mov    eax,r8d
  418330:	shl    eax,cl
  418332:	add    eax,r11d
  418335:	cmp    edi,eax
  418337:	jbe    0x418376
  418339:	add    r8d,esi
  41833c:	cmp    r8d,0x100
  418343:	jb     0x41832a
  418345:	add    edx,esi
  418347:	cmp    edx,0x20
  41834a:	jb     0x41831f
  41834c:	mov    edx,0x2000
  418351:	lea    ecx,[rdx-0x1200]
  418357:	imul   rcx,rcx
  41835b:	lea    rax,[rcx+rcx*4]
  41835f:	shr    rax,0x10
  418363:	add    rax,0x366
  418369:	imul   rax,QWORD PTR [rsp+0x40]
  41836f:	mov    ecx,0xf4240
  418374:	jmp    0x418384
  418376:	shl    edx,0x8
  418379:	add    edx,r8d
  41837c:	jmp    0x418351
  41837e:	shr    r9,1
  418381:	shr    r10,1
  418384:	cmp    r9,rcx
  418387:	ja     0x41837e
  418389:	test   r10,r10
  41838c:	cmove  r10,rsi
  418390:	xor    edx,edx
  418392:	imul   r9,rax
  418396:	mov    rax,r9
  418399:	div    r10
  41839c:	pop    rdi
  41839d:	pop    rsi
  41839e:	pop    rbx
  41839f:	ret    
  4183a0:	mov    eax,DWORD PTR [rcx+0x8]
  4183a3:	mov    r10,rdx
  4183a6:	mov    edx,DWORD PTR [rcx+0xc]
  4183a9:	imul   rax,QWORD PTR [rsp+0x28]
  4183af:	imul   rdx,r9
  4183b3:	add    rdx,rax
  4183b6:	mov    eax,0xf4240
  4183bb:	imul   rdx,QWORD PTR [rsp+0x30]
  4183c1:	jmp    0x4183c9
  4183c3:	shr    r8,1
  4183c6:	shr    r10,1
  4183c9:	cmp    r8,rax
  4183cc:	ja     0x4183c3
  4183ce:	mov    eax,0x1
  4183d3:	test   r10,r10
  4183d6:	cmove  r10,rax
  4183da:	imul   r8,rdx
  4183de:	xor    edx,edx
  4183e0:	mov    rax,r8
  4183e3:	div    r10
  4183e6:	ret    
  4183e7:	int3   
  4183e8:	test   r8,r8
  4183eb:	je     0x418434
  4183ed:	push   rbx
  4183ee:	push   rbp
  4183ef:	push   rsi
  4183f0:	push   rdi
  4183f1:	sub    rsp,0x28
  4183f5:	mov    rbx,r8
  4183f8:	mov    rdi,rdx
  4183fb:	mov    rsi,rcx
  4183fe:	mov    ebp,0x80000000
  418403:	mov    rax,QWORD PTR [rsi]
  418406:	mov    r8d,ebp
  418409:	cmp    rbx,rbp
  41840c:	mov    rdx,rdi
  41840f:	mov    rcx,rsi
  418412:	cmovb  r8d,ebx
  418416:	call   QWORD PTR [rax+0x20]
  418419:	mov    ecx,eax
  41841b:	add    rdi,rcx
  41841e:	cmp    rcx,rbx
  418421:	ja     0x41842c
  418423:	test   eax,eax
  418425:	je     0x41842c
  418427:	sub    rbx,rcx
  41842a:	jne    0x418403
  41842c:	add    rsp,0x28
  418430:	pop    rdi
  418431:	pop    rsi
  418432:	pop    rbp
  418433:	pop    rbx
  418434:	ret    
  418435:	int3   
  418436:	int3   
  418437:	int3   
  418438:	rex.W jmp QWORD PTR [rip+0x34c89]        # 0x44d0c8
  41843f:	int3   
  418440:	test   r8b,r8b
  418443:	mov    r9d,ecx
  418446:	mov    r10d,0x1
  41844c:	jne    0x418463
  41844e:	cmp    ecx,r10d
  418451:	ja     0x418456
  418453:	xor    r10b,r10b
  418456:	test   r8b,r8b
  418459:	jne    0x418463
  41845b:	test   r10b,r10b
  41845e:	je     0x418463
  418460:	shr    r9d,1
  418463:	lea    ecx,[rdx-0x1]
  418466:	mov    eax,ecx
  418468:	shr    eax,1
  41846a:	or     ecx,eax
  41846c:	mov    eax,ecx
  41846e:	shr    eax,0x2
  418471:	or     ecx,eax
  418473:	mov    eax,ecx
  418475:	shr    eax,0x4
  418478:	or     ecx,eax
  41847a:	mov    eax,ecx
  41847c:	or     eax,0x1fffe00
  418481:	shr    eax,0x8
  418484:	or     eax,ecx
  418486:	shr    eax,1
  418488:	cmp    eax,0x1000000
  41848d:	jbe    0x418491
  41848f:	shr    eax,1
  418491:	lea    ecx,[rax+0x10001]
  418497:	mov    r8d,edx
  41849a:	lea    rax,[r8+r8*2]
  41849e:	shr    rax,1
  4184a1:	neg    r10b
  4184a4:	lea    rdx,[rax+rcx*4+0x300000]
  4184ac:	sbb    rax,rax
  4184af:	mov    ecx,r9d
  4184b2:	and    eax,0x600000
  4184b7:	add    rdx,rax
  4184ba:	lea    rax,[r8+r8*4]
  4184be:	lea    rax,[rdx+rax*2]
  4184c2:	imul   rax,rcx
  4184c6:	ret    
  4184c7:	int3   
  4184c8:	rex.W push rbx
  4184ca:	push   rbp
  4184cb:	push   rsi
  4184cc:	push   rdi
  4184cd:	push   r12
  4184cf:	push   r13
  4184d1:	push   r14
  4184d3:	sub    rsp,0x60
  4184d7:	mov    r13d,edx
  4184da:	xor    edx,edx
  4184dc:	mov    rbp,r8
  4184df:	mov    r14,rcx
  4184e2:	lea    r8d,[rdx+0x40]
  4184e6:	lea    rcx,[rsp+0x20]
  4184eb:	mov    rsi,r9
  4184ee:	call   0x44b780
  4184f3:	xor    ebx,ebx
  4184f5:	test   rbp,rbp
  4184f8:	je     0x418595
  4184fe:	mov    rdi,QWORD PTR [rsp+0xc8]
  418506:	mov    r12,QWORD PTR [rsp+0xc0]
  41850e:	test   rdi,rdi
  418511:	je     0x418524
  418513:	test   bl,bl
  418515:	jne    0x418524
  418517:	mov    rax,QWORD PTR [rdi]
  41851a:	mov    rcx,rdi
  41851d:	call   QWORD PTR [rax+0x10]
  418520:	test   eax,eax
  418522:	jne    0x418597
  418524:	mov    rax,QWORD PTR [r12]
  418528:	mov    rcx,r12
  41852b:	call   QWORD PTR [rax+0x18]
  41852e:	mov    r11,QWORD PTR [r12]
  418532:	mov    r8d,r13d
  418535:	mov    rdx,r14
  418538:	mov    rcx,r12
  41853b:	call   QWORD PTR [r11+0x20]
  41853f:	mov    r11,QWORD PTR [r12]
  418543:	lea    rdx,[rsp+0x20]
  418548:	mov    rcx,r12
  41854b:	call   QWORD PTR [r11+0x28]
  41854f:	mov    r11,QWORD PTR [r12]
  418553:	mov    rcx,r12
  418556:	call   QWORD PTR [r11+0x30]
  41855a:	cmp    eax,0x40
  41855d:	ja     0x4185a6
  41855f:	xor    ecx,ecx
  418561:	test   eax,eax
  418563:	je     0x418580
  418565:	lea    r8d,[rax-0x1]
  418569:	lea    rdx,[rsp+0x20]
  41856e:	shr    r8d,0x2
  418572:	inc    r8d
  418575:	xor    ecx,DWORD PTR [rdx]
  418577:	add    rdx,0x4
  41857b:	dec    r8
  41857e:	jne    0x418575
  418580:	test   rsi,rsi
  418583:	je     0x418589
  418585:	cmp    ecx,DWORD PTR [rsi]
  418587:	jne    0x4185a6
  418589:	inc    rbx
  41858c:	cmp    rbx,rbp
  41858f:	jb     0x41850e
  418595:	xor    eax,eax
  418597:	add    rsp,0x60
  41859b:	pop    r14
  41859d:	pop    r13
  41859f:	pop    r12
  4185a1:	pop    rdi
  4185a2:	pop    rsi
  4185a3:	pop    rbp
  4185a4:	pop    rbx
  4185a5:	ret    
  4185a6:	mov    eax,0x1
  4185ab:	jmp    0x418597
  4185ad:	int3   
  4185ae:	int3   
  4185af:	int3   
  4185b0:	test   edx,edx
  4185b2:	je     0x418743
  4185b8:	mov    eax,edx
  4185ba:	add    ecx,r8d
  4185bd:	xor    ecx,r8d
  4185c0:	add    ecx,r8d
  4185c3:	xor    ecx,r8d
  4185c6:	add    ecx,r8d
  4185c9:	xor    ecx,r8d
  4185cc:	add    ecx,r8d
  4185cf:	xor    ecx,r8d
  4185d2:	add    ecx,r8d
  4185d5:	xor    ecx,r8d
  4185d8:	add    ecx,r8d
  4185db:	xor    ecx,r8d
  4185de:	add    ecx,r8d
  4185e1:	xor    ecx,r8d
  4185e4:	add    ecx,r8d
  4185e7:	xor    ecx,r8d
  4185ea:	add    ecx,r8d
  4185ed:	xor    ecx,r8d
  4185f0:	add    ecx,r8d
  4185f3:	xor    ecx,r8d
  4185f6:	add    ecx,r8d
  4185f9:	xor    ecx,r8d
  4185fc:	add    ecx,r8d
  4185ff:	xor    ecx,r8d
  418602:	add    ecx,r8d
  418605:	xor    ecx,r8d
  418608:	add    ecx,r8d
  41860b:	xor    ecx,r8d
  41860e:	add    ecx,r8d
  418611:	xor    ecx,r8d
  418614:	add    ecx,r8d
  418617:	xor    ecx,r8d
  41861a:	add    ecx,r8d
  41861d:	xor    ecx,r8d
  418620:	add    ecx,r8d
  418623:	xor    ecx,r8d
  418626:	add    ecx,r8d
  418629:	xor    ecx,r8d
  41862c:	add    ecx,r8d
  41862f:	xor    ecx,r8d
  418632:	add    ecx,r8d
  418635:	xor    ecx,r8d
  418638:	add    ecx,r8d
  41863b:	xor    ecx,r8d
  41863e:	add    ecx,r8d
  418641:	xor    ecx,r8d
  418644:	add    ecx,r8d
  418647:	xor    ecx,r8d
  41864a:	add    ecx,r8d
  41864d:	xor    ecx,r8d
  418650:	add    ecx,r8d
  418653:	xor    ecx,r8d
  418656:	add    ecx,r8d
  418659:	xor    ecx,r8d
  41865c:	add    ecx,r8d
  41865f:	xor    ecx,r8d
  418662:	add    ecx,r8d
  418665:	xor    ecx,r8d
  418668:	add    ecx,r8d
  41866b:	xor    ecx,r8d
  41866e:	add    ecx,r8d
  418671:	xor    ecx,r8d
  418674:	add    ecx,r8d
  418677:	xor    ecx,r8d
  41867a:	add    ecx,r8d
  41867d:	xor    ecx,r8d
  418680:	add    ecx,r8d
  418683:	xor    ecx,r8d
  418686:	add    ecx,r8d
  418689:	xor    ecx,r8d
  41868c:	add    ecx,r8d
  41868f:	xor    ecx,r8d
  418692:	add    ecx,r8d
  418695:	xor    ecx,r8d
  418698:	add    ecx,r8d
  41869b:	xor    ecx,r8d
  41869e:	add    ecx,r8d
  4186a1:	xor    ecx,r8d
  4186a4:	add    ecx,r8d
  4186a7:	xor    ecx,r8d
  4186aa:	add    ecx,r8d
  4186ad:	xor    ecx,r8d
  4186b0:	add    ecx,r8d
  4186b3:	xor    ecx,r8d
  4186b6:	add    ecx,r8d
  4186b9:	xor    ecx,r8d
  4186bc:	add    ecx,r8d
  4186bf:	xor    ecx,r8d
  4186c2:	add    ecx,r8d
  4186c5:	xor    ecx,r8d
  4186c8:	add    ecx,r8d
  4186cb:	xor    ecx,r8d
  4186ce:	add    ecx,r8d
  4186d1:	xor    ecx,r8d
  4186d4:	add    ecx,r8d
  4186d7:	xor    ecx,r8d
  4186da:	add    ecx,r8d
  4186dd:	xor    ecx,r8d
  4186e0:	add    ecx,r8d
  4186e3:	xor    ecx,r8d
  4186e6:	add    ecx,r8d
  4186e9:	xor    ecx,r8d
  4186ec:	add    ecx,r8d
  4186ef:	xor    ecx,r8d
  4186f2:	add    ecx,r8d
  4186f5:	xor    ecx,r8d
  4186f8:	add    ecx,r8d
  4186fb:	xor    ecx,r8d
  4186fe:	add    ecx,r8d
  418701:	xor    ecx,r8d
  418704:	add    ecx,r8d
  418707:	xor    ecx,r8d
  41870a:	add    ecx,r8d
  41870d:	xor    ecx,r8d
  418710:	add    ecx,r8d
  418713:	xor    ecx,r8d
  418716:	add    ecx,r8d
  418719:	xor    ecx,r8d
  41871c:	add    ecx,r8d
  41871f:	xor    ecx,r8d
  418722:	add    ecx,r8d
  418725:	xor    ecx,r8d
  418728:	add    ecx,r8d
  41872b:	xor    ecx,r8d
  41872e:	add    ecx,r8d
  418731:	xor    ecx,r8d
  418734:	add    ecx,r8d
  418737:	xor    ecx,r8d
  41873a:	dec    rax
  41873d:	jne    0x4185ba
  418743:	mov    eax,ecx
  418745:	ret    
  418746:	int3   
  418747:	int3   
  418748:	rex.W push rbx
  41874a:	push   rsi
  41874b:	push   rdi
  41874c:	sub    rsp,0x20
  418750:	mov    rsi,QWORD PTR [rcx+0x20]
  418754:	mov    edi,DWORD PTR [rip+0x4ff1e]        # 0x468678
  41875a:	mov    rbx,rcx
  41875d:	test   rsi,rsi
  418760:	je     0x41878b
  418762:	mov    rcx,QWORD PTR [rbx+0x8]
  418766:	mov    rax,QWORD PTR [rcx]
  418769:	call   QWORD PTR [rax+0x10]
  41876c:	test   eax,eax
  41876e:	mov    DWORD PTR [rbx+0x10],eax
  418771:	jne    0x41878e
  418773:	mov    r8d,DWORD PTR [rip+0x4fefe]        # 0x468678
  41877a:	mov    edx,DWORD PTR [rbx+0x18]
  41877d:	mov    ecx,edi
  41877f:	call   0x4185b0
  418784:	dec    rsi
  418787:	mov    edi,eax
  418789:	jne    0x418762
  41878b:	mov    DWORD PTR [rbx+0x14],edi
  41878e:	xor    eax,eax
  418790:	add    rsp,0x20
  418794:	pop    rdi
  418795:	pop    rsi
  418796:	pop    rbx
  418797:	ret    
  418798:	test   edx,edx
  41879a:	mov    r9,rcx
  41879d:	mov    r8d,0xffffffff
  4187a3:	je     0x4187cd
  4187a5:	mov    r10d,edx
  4187a8:	mov    dl,BYTE PTR [r9]
  4187ab:	mov    ecx,r8d
  4187ae:	inc    r9
  4187b1:	xor    dl,r8b
  4187b4:	shr    ecx,0x8
  4187b7:	movzx  eax,dl
  4187ba:	lea    rdx,[rip+0x507df]        # 0x468fa0
  4187c1:	mov    r8d,DWORD PTR [rdx+rax*4]
  4187c5:	xor    r8d,ecx
  4187c8:	dec    r10
  4187cb:	jne    0x4187a8
  4187cd:	not    r8d
  4187d0:	mov    eax,r8d
  4187d3:	ret    
  4187d4:	rex.W push rbx
  4187d6:	sub    rsp,0x20
  4187da:	test   edx,edx
  4187dc:	mov    r10,rcx
  4187df:	je     0x41881e
  4187e1:	mov    r11,rcx
  4187e4:	mov    ebx,edx
  4187e6:	mov    r9d,DWORD PTR [r8]
  4187e9:	mov    ecx,DWORD PTR [r8+0x4]
  4187ed:	movzx  eax,r9w
  4187f1:	shr    r9d,0x10
  4187f5:	imul   eax,eax,0x9069
  4187fb:	add    eax,r9d
  4187fe:	mov    DWORD PTR [r8],eax
  418801:	movzx  eax,cx
  418804:	shr    ecx,0x10
  418807:	imul   eax,eax,0x4650
  41880d:	add    eax,ecx
  41880f:	mov    DWORD PTR [r8+0x4],eax
  418813:	mov    BYTE PTR [r11],al
  418816:	inc    r11
  418819:	dec    rbx
  41881c:	jne    0x4187e6
  41881e:	mov    rcx,r10
  418821:	add    rsp,0x20
  418825:	pop    rbx
  418826:	jmp    0x418798
  41882b:	int3   
  41882c:	rex.W push rbx
  41882e:	push   rsi
  41882f:	push   rdi
  418830:	sub    rsp,0xa0
  418837:	mov    rbx,rdx
  41883a:	mov    edx,0x20
  41883f:	lea    esi,[r8+0x1]
  418843:	mov    rdi,rcx
  418846:	lea    rcx,[rsp+0x20]
  41884b:	lea    r8d,[rdx+0x40]
  41884f:	call   0x44b780
  418854:	lea    rdx,[rsp+0x80]
  41885c:	mov    rcx,rbx
  41885f:	call   0x4019a4
  418864:	lea    rcx,[rsp+0x7f]
  418869:	mov    ebx,0x5f
  41886e:	call   0x44b78c
  418873:	cmp    esi,eax
  418875:	jbe    0x41887b
  418877:	sub    eax,esi
  418879:	add    ebx,eax
  41887b:	mov    r8,QWORD PTR [rdi]
  41887e:	mov    eax,ebx
  418880:	mov    rcx,rdi
  418883:	lea    rdx,[rsp+rax*1+0x20]
  418888:	call   QWORD PTR [r8]
  41888b:	add    rsp,0xa0
  418892:	pop    rdi
  418893:	pop    rsi
  418894:	pop    rbx
  418895:	ret    
  418896:	int3   
  418897:	int3   
  418898:	rex.W push rbx
  41889a:	push   rdi
  41889b:	sub    rsp,0x128
  4188a2:	mov    rdi,rcx
  4188a5:	mov    ebx,r8d
  4188a8:	lea    rcx,[rsp+0x20]
  4188ad:	movzx  edx,dl
  4188b0:	mov    r8d,r8d
  4188b3:	call   0x44b780
  4188b8:	mov    rax,QWORD PTR [rdi]
  4188bb:	lea    rdx,[rsp+0x20]
  4188c0:	mov    rcx,rdi
  4188c3:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  4188c8:	call   QWORD PTR [rax]
  4188ca:	add    rsp,0x128
  4188d1:	pop    rdi
  4188d2:	pop    rbx
  4188d3:	ret    
  4188d4:	rex.W push rbx
  4188d6:	push   rbp
  4188d7:	push   rsi
  4188d8:	push   rdi
  4188d9:	push   r12
  4188db:	sub    rsp,0x20
  4188df:	mov    rsi,rdx
  4188e2:	add    rdx,0x1388
  4188e9:	mov    rbx,r8
  4188ec:	movabs rax,0x346dc5d63886594b
  4188f6:	mov    r8d,0x5
  4188fc:	mov    rbp,r9
  4188ff:	mov    rdi,rcx
  418902:	mul    rdx
  418905:	shr    rdx,0xb
  418909:	call   0x41882c
  41890e:	lea    r11,[rbx+0x7a120]
  418915:	movabs r12,0x431bde82d7b634db
  41891f:	mov    rax,r12
  418922:	mov    ebx,0x6
  418927:	mov    rcx,rdi
  41892a:	mov    r8d,ebx
  41892d:	mul    r11
  418930:	shr    rdx,0x12
  418934:	call   0x41882c
  418939:	lea    r11,[rbp+0x7a120]
  418940:	mov    rax,r12
  418943:	mov    r8d,ebx
  418946:	mov    rcx,rdi
  418949:	mul    r11
  41894c:	shr    rdx,0x12
  418950:	call   0x41882c
  418955:	cmp    BYTE PTR [rsp+0x70],0x0
  41895a:	je     0x4189ed
  418960:	mov    rbx,QWORD PTR [rsp+0x78]
  418965:	test   rbx,rbx
  418968:	jne    0x41897a
  41896a:	lea    r8d,[rbx+0xc]
  41896e:	mov    dl,0x20
  418970:	mov    rcx,rdi
  418973:	call   0x418898
  418978:	jmp    0x4189ed
  41897a:	imul   rsi,rbx
  41897e:	movabs rax,0x47ae147ae147ae15
  418988:	mov    r8d,0x5
  41898e:	mul    rsi
  418991:	mov    eax,0x1
  418996:	sub    rsi,rdx
  418999:	shr    rsi,1
  41899c:	add    rsi,rdx
  41899f:	shr    rsi,0x6
  4189a3:	cmove  rsi,rax
  4189a7:	xor    edx,edx
  4189a9:	mov    rax,rbp
  4189ac:	mov    rcx,rsi
  4189af:	shr    rcx,1
  4189b2:	imul   rax,rax,0xf4240
  4189b9:	add    rax,rcx
  4189bc:	mov    rcx,rdi
  4189bf:	div    rsi
  4189c2:	mov    rdx,rax
  4189c5:	call   0x41882c
  4189ca:	xor    edx,edx
  4189cc:	mov    rax,rbx
  4189cf:	shr    rax,1
  4189d2:	imul   rbp,rbp,0x64
  4189d6:	mov    r8d,0x5
  4189dc:	add    rax,rbp
  4189df:	mov    rcx,rdi
  4189e2:	div    rbx
  4189e5:	mov    rdx,rax
  4189e8:	call   0x41882c
  4189ed:	add    rsp,0x20
  4189f1:	pop    r12
  4189f3:	pop    rdi
  4189f4:	pop    rsi
  4189f5:	pop    rbp
  4189f6:	pop    rbx
  4189f7:	ret    
  4189f8:	rex.W push rbx
  4189fa:	push   rbp
  4189fb:	push   rsi
  4189fc:	push   rdi
  4189fd:	push   r12
  4189ff:	sub    rsp,0x30
  418a03:	mov    rsi,rdx
  418a06:	mov    rdx,QWORD PTR [rdx+0x30]
  418a0a:	mov    rbx,rcx
  418a0d:	mov    rcx,rsi
  418a10:	mov    rbp,r9
  418a13:	mov    r12d,r8d
  418a16:	imul   rdx,QWORD PTR [rsi+0x20]
  418a1b:	call   0x4182cc
  418a20:	test   rbx,rbx
  418a23:	je     0x418a4e
  418a25:	test   rax,rax
  418a28:	mov    rcx,rbx
  418a2b:	je     0x418a41
  418a2d:	shr    rax,0xa
  418a31:	mov    r8d,0x9
  418a37:	mov    rdx,rax
  418a3a:	call   0x41882c
  418a3f:	jmp    0x418a4e
  418a41:	mov    r8d,0xa
  418a47:	mov    dl,0x20
  418a49:	call   0x418898
  418a4e:	mov    rcx,rsi
  418a51:	call   0x41821c
  418a56:	mov    rdx,rbp
  418a59:	mov    rcx,rsi
  418a5c:	mov    rdi,rax
  418a5f:	call   0x418274
  418a64:	test   rbx,rbx
  418a67:	mov    rsi,rax
  418a6a:	je     0x418a95
  418a6c:	mov    rcx,QWORD PTR [rsp+0x88]
  418a74:	mov    r9,rbp
  418a77:	mov    r8,rax
  418a7a:	mov    QWORD PTR [rsp+0x28],rcx
  418a7f:	mov    cl,BYTE PTR [rsp+0x80]
  418a86:	mov    rdx,rdi
  418a89:	mov    BYTE PTR [rsp+0x20],cl
  418a8d:	mov    rcx,rbx
  418a90:	call   0x4188d4
  418a95:	mov    rdx,QWORD PTR [rsp+0x90]
  418a9d:	test   rdx,rdx
  418aa0:	je     0x418ac6
  418aa2:	add    QWORD PTR [rdx],r12
  418aa5:	mov    rax,r12
  418aa8:	mov    rcx,r12
  418aab:	imul   rax,rsi
  418aaf:	add    QWORD PTR [rdx+0x18],rax
  418ab3:	mov    rax,r12
  418ab6:	imul   rcx,rdi
  418aba:	imul   rax,rbp
  418abe:	add    QWORD PTR [rdx+0x8],rax
  418ac2:	add    QWORD PTR [rdx+0x10],rcx
  418ac6:	add    rsp,0x30
  418aca:	pop    r12
  418acc:	pop    rdi
  418acd:	pop    rsi
  418ace:	pop    rbp
  418acf:	pop    rbx
  418ad0:	ret    
  418ad1:	int3   
  418ad2:	int3   
  418ad3:	int3   
  418ad4:	rex.W push rbx
  418ad6:	push   rbp
  418ad7:	push   rsi
  418ad8:	push   rdi
  418ad9:	sub    rsp,0x38
  418add:	mov    rdi,r8
  418ae0:	mov    sil,dl
  418ae3:	mov    r8d,0xa
  418ae9:	mov    dl,0x20
  418aeb:	mov    rbx,r9
  418aee:	mov    rbp,rcx
  418af1:	call   0x418898
  418af6:	mov    r11,QWORD PTR [rbx]
  418af9:	mov    eax,0x1
  418afe:	test   r11,r11
  418b01:	mov    rcx,rbp
  418b04:	mov    QWORD PTR [rsp+0x28],rdi
  418b09:	cmove  r11,rax
  418b0d:	mov    rax,QWORD PTR [rbx+0x8]
  418b11:	xor    edx,edx
  418b13:	div    r11
  418b16:	xor    edx,edx
  418b18:	mov    BYTE PTR [rsp+0x20],sil
  418b1d:	mov    r9,rax
  418b20:	mov    rax,QWORD PTR [rbx+0x18]
  418b24:	div    r11
  418b27:	xor    edx,edx
  418b29:	mov    r8,rax
  418b2c:	mov    rax,QWORD PTR [rbx+0x10]
  418b30:	div    r11
  418b33:	mov    rdx,rax
  418b36:	call   0x4188d4
  418b3b:	add    rsp,0x38
  418b3f:	pop    rdi
  418b40:	pop    rsi
  418b41:	pop    rbp
  418b42:	pop    rbx
  418b43:	ret    
  418b44:	rex.W push rbx
  418b46:	push   rbp
  418b47:	push   rsi
  418b48:	push   rdi
  418b49:	sub    rsp,0x28
  418b4d:	mov    rax,QWORD PTR [rcx]
  418b50:	mov    rbx,rdx
  418b53:	lea    rdx,[rip+0x369e6]        # 0x44f540
  418b5a:	mov    rbp,r9
  418b5d:	mov    dil,r8b
  418b60:	mov    rsi,rcx
  418b63:	call   QWORD PTR [rax]
  418b65:	mov    r11,QWORD PTR [rsi]
  418b68:	mov    rdx,rbx
  418b6b:	mov    rcx,rsi
  418b6e:	call   QWORD PTR [r11]
  418b71:	test   dil,dil
  418b74:	mov    rcx,rsi
  418b77:	je     0x418b8d
  418b79:	shr    rbp,0x14
  418b7d:	mov    r8d,0x6
  418b83:	mov    rdx,rbp
  418b86:	call   0x41882c
  418b8b:	jmp    0x418b99
  418b8d:	mov    rax,QWORD PTR [rsi]
  418b90:	lea    rdx,[rip+0x369a1]        # 0x44f538
  418b97:	call   QWORD PTR [rax]
  418b99:	mov    rax,QWORD PTR [rsi]
  418b9c:	lea    rdx,[rip+0x36985]        # 0x44f528
  418ba3:	mov    rcx,rsi
  418ba6:	call   QWORD PTR [rax]
  418ba8:	mov    r11,QWORD PTR [rsi]
  418bab:	mov    rdx,QWORD PTR [rsp+0x70]
  418bb0:	mov    rcx,rsi
  418bb3:	call   QWORD PTR [r11]
  418bb6:	mov    edx,DWORD PTR [rsp+0x78]
  418bba:	mov    r8d,0x3
  418bc0:	mov    rcx,rsi
  418bc3:	call   0x41882c
  418bc8:	mov    r11,QWORD PTR [rsi]
  418bcb:	mov    rcx,rsi
  418bce:	add    rsp,0x28
  418bd2:	pop    rdi
  418bd3:	pop    rsi
  418bd4:	pop    rbp
  418bd5:	pop    rbx
  418bd6:	rex.WB jmp QWORD PTR [r11+0x8]
  418bda:	int3   
  418bdb:	int3   
  418bdc:	mov    BYTE PTR [rcx+0x6c],dl
  418bdf:	mov    QWORD PTR [rcx+0x70],r8
  418be3:	xor    eax,eax
  418be5:	ret    
  418be6:	int3   
  418be7:	int3   
  418be8:	rex.W push rbx
  418bea:	push   rsi
  418beb:	push   rdi
  418bec:	sub    rsp,0x40
  418bf0:	mov    rdi,rcx
  418bf3:	mov    rcx,QWORD PTR [rcx+0x58]
  418bf7:	mov    bl,r8b
  418bfa:	mov    rax,QWORD PTR [rcx]
  418bfd:	mov    rsi,rdx
  418c00:	call   QWORD PTR [rax+0x10]
  418c03:	test   eax,eax
  418c05:	jne    0x418c6a
  418c07:	test   bl,bl
  418c09:	je     0x418c68
  418c0b:	mov    rax,QWORD PTR [rsi+0x30]
  418c0f:	mov    r9,QWORD PTR [rsi+0x8]
  418c13:	mov    r8,QWORD PTR [rsi]
  418c16:	imul   rax,QWORD PTR [rsi+0x20]
  418c1b:	mov    edx,DWORD PTR [rdi+0x60]
  418c1e:	lea    rcx,[rdi+0x8]
  418c22:	lea    rbx,[rdi+0x18]
  418c26:	mov    QWORD PTR [rsp+0x20],rax
  418c2b:	call   0x4182fc
  418c30:	mov    r8d,DWORD PTR [rdi+0x78]
  418c34:	mov    rcx,QWORD PTR [rdi+0x58]
  418c38:	mov    r9,rax
  418c3b:	mov    rax,QWORD PTR [rdi+0x70]
  418c3f:	mov    QWORD PTR [rsp+0x30],rbx
  418c44:	mov    QWORD PTR [rsp+0x28],rax
  418c49:	mov    al,BYTE PTR [rdi+0x6c]
  418c4c:	mov    rdx,rsi
  418c4f:	mov    BYTE PTR [rsp+0x20],al
  418c53:	call   0x4189f8
  418c58:	cmp    BYTE PTR [rdi+0x64],0x0
  418c5c:	jne    0x418c68
  418c5e:	mov    rcx,QWORD PTR [rdi+0x58]
  418c62:	mov    rax,QWORD PTR [rcx]
  418c65:	call   QWORD PTR [rax+0x8]
  418c68:	xor    eax,eax
  418c6a:	add    rsp,0x40
  418c6e:	pop    rdi
  418c6f:	pop    rsi
  418c70:	pop    rbx
  418c71:	ret    
  418c72:	int3   
  418c73:	int3   
  418c74:	rex.W push rbx
  418c76:	push   rsi
  418c77:	push   rdi
  418c78:	sub    rsp,0x80
  418c7f:	mov    rbx,rcx
  418c82:	mov    rcx,QWORD PTR [rcx+0x58]
  418c86:	mov    sil,r8b
  418c89:	mov    rax,QWORD PTR [rcx]
  418c8c:	mov    rdi,rdx
  418c8f:	call   QWORD PTR [rax+0x10]
  418c92:	test   eax,eax
  418c94:	jne    0x418d5c
  418c9a:	test   sil,sil
  418c9d:	je     0x418d5a
  418ca3:	mov    rax,QWORD PTR [rdi+0x30]
  418ca7:	mov    r9,QWORD PTR [rdi+0x20]
  418cab:	mov    r8,QWORD PTR [rdi+0x8]
  418caf:	mov    rdx,QWORD PTR [rdi]
  418cb2:	mov    QWORD PTR [rsp+0x28],rax
  418cb7:	mov    rax,QWORD PTR [rdi+0x28]
  418cbb:	lea    rcx,[rbx+0x8]
  418cbf:	mov    QWORD PTR [rsp+0x20],rax
  418cc4:	call   0x4183a0
  418cc9:	cmp    BYTE PTR [rbx+0x64],0x0
  418ccd:	mov    rcx,QWORD PTR [rbx+0x58]
  418cd1:	mov    rsi,rax
  418cd4:	je     0x418ce5
  418cd6:	mov    r8,QWORD PTR [rcx]
  418cd9:	mov    rdx,QWORD PTR [rip+0x4f9a0]        # 0x468680
  418ce0:	call   QWORD PTR [r8]
  418ce3:	jmp    0x418cf0
  418ce5:	mov    r8d,DWORD PTR [rbx+0x68]
  418ce9:	mov    dl,0x20
  418ceb:	call   0x418898
  418cf0:	lea    rcx,[rsp+0x40]
  418cf5:	mov    rdx,rdi
  418cf8:	mov    r8d,0x38
  418cfe:	call   0x44b480
  418d03:	mov    rax,QWORD PTR [rsp+0x60]
  418d08:	mov    r8d,DWORD PTR [rbx+0x7c]
  418d0c:	imul   rax,QWORD PTR [rsp+0x70]
  418d12:	mov    rcx,QWORD PTR [rbx+0x58]
  418d16:	mov    QWORD PTR [rsp+0x60],rax
  418d1b:	mov    rax,QWORD PTR [rsp+0x68]
  418d20:	imul   rax,QWORD PTR [rsp+0x70]
  418d26:	mov    QWORD PTR [rsp+0x68],rax
  418d2b:	lea    rax,[rbx+0x38]
  418d2f:	mov    QWORD PTR [rsp+0x30],rax
  418d34:	mov    rax,QWORD PTR [rbx+0x70]
  418d38:	lea    rdx,[rsp+0x40]
  418d3d:	mov    QWORD PTR [rsp+0x28],rax
  418d42:	mov    al,BYTE PTR [rbx+0x6c]
  418d45:	mov    r9,rsi
  418d48:	mov    BYTE PTR [rsp+0x20],al
  418d4c:	mov    QWORD PTR [rsp+0x70],0x1
  418d55:	call   0x4189f8
  418d5a:	xor    eax,eax
  418d5c:	add    rsp,0x80
  418d63:	pop    rdi
  418d64:	pop    rsi
  418d65:	pop    rbx
  418d66:	ret    
  418d67:	int3   
  418d68:	rex.W push rbx
  418d6a:	push   rsi
  418d6b:	push   rdi
  418d6c:	sub    rsp,0x20
  418d70:	mov    rax,QWORD PTR [rcx]
  418d73:	mov    ebx,r8d
  418d76:	mov    rdi,rdx
  418d79:	mov    rsi,rcx
  418d7c:	call   QWORD PTR [rax]
  418d7e:	xor    eax,eax
  418d80:	cmp    BYTE PTR [rdi],al
  418d82:	je     0x418d8e
  418d84:	inc    rdi
  418d87:	inc    eax
  418d89:	cmp    BYTE PTR [rdi],0x0
  418d8c:	jne    0x418d84
  418d8e:	sub    ebx,eax
  418d90:	test   ebx,ebx
  418d92:	jle    0x418da1
  418d94:	mov    r8d,ebx
  418d97:	mov    dl,0x20
  418d99:	mov    rcx,rsi
  418d9c:	call   0x418898
  418da1:	add    rsp,0x20
  418da5:	pop    rdi
  418da6:	pop    rsi
  418da7:	pop    rbx
  418da8:	ret    
  418da9:	int3   
  418daa:	int3   
  418dab:	int3   
  418dac:	rex.W push rbx
  418dae:	push   rdi
  418daf:	sub    rsp,0x28
  418db3:	mov    rbx,rcx
  418db6:	xor    ecx,ecx
  418db8:	mov    rdi,rdx
  418dbb:	cmp    BYTE PTR [rdx],cl
  418dbd:	je     0x418dcc
  418dbf:	mov    rax,rdx
  418dc2:	inc    rax
  418dc5:	inc    ecx
  418dc7:	cmp    BYTE PTR [rax],0x0
  418dca:	jne    0x418dc2
  418dcc:	sub    r8d,ecx
  418dcf:	test   r8d,r8d
  418dd2:	jle    0x418dde
  418dd4:	mov    dl,0x20
  418dd6:	mov    rcx,rbx
  418dd9:	call   0x418898
  418dde:	mov    rax,QWORD PTR [rbx]
  418de1:	mov    rdx,rdi
  418de4:	mov    rcx,rbx
  418de7:	add    rsp,0x28
  418deb:	pop    rdi
  418dec:	pop    rbx
  418ded:	rex.W jmp QWORD PTR [rax]
  418df0:	rex.W push rbx
  418df2:	push   rbp
  418df3:	push   rsi
  418df4:	push   rdi
  418df5:	sub    rsp,0x28
  418df9:	mov    ebx,edx
  418dfb:	mov    rdi,rcx
  418dfe:	xor    ebp,ebp
  418e00:	mov    sil,bl
  418e03:	shr    ebx,0x8
  418e06:	test   sil,sil
  418e09:	je     0x418e35
  418e0b:	mov    eax,DWORD PTR [rdi+0x8]
  418e0e:	cmp    DWORD PTR [rdi+0xc],eax
  418e11:	jne    0x418e1b
  418e13:	mov    rcx,rdi
  418e16:	call   0x402af0
  418e1b:	mov    edx,DWORD PTR [rdi+0x8]
  418e1e:	mov    rcx,QWORD PTR [rdi]
  418e21:	inc    ebp
  418e23:	mov    BYTE PTR [rdx+rcx*1],sil
  418e27:	inc    edx
  418e29:	cmp    ebp,0x4
  418e2c:	mov    BYTE PTR [rdx+rcx*1],0x0
  418e30:	mov    DWORD PTR [rdi+0x8],edx
  418e33:	jl     0x418e00
  418e35:	add    rsp,0x28
  418e39:	pop    rdi
  418e3a:	pop    rsi
  418e3b:	pop    rbp
  418e3c:	pop    rbx
  418e3d:	ret    
  418e3e:	int3   
  418e3f:	int3   
  418e40:	rex.W push rbx
  418e42:	push   rbp
  418e43:	push   rsi
  418e44:	push   rdi
  418e45:	push   r12
  418e47:	mov    r11,rsp
  418e4a:	sub    rsp,0x60
  418e4e:	mov    rax,QWORD PTR [rdx]
  418e51:	mov    DWORD PTR [rdx+0x8],0x0
  418e58:	mov    rbx,rdx
  418e5b:	mov    BYTE PTR [rax],0x0
  418e5e:	lea    rax,[r11-0x28]
  418e62:	mov    r12,rcx
  418e65:	lea    r9,[r11-0x2c]
  418e69:	lea    r8,[r11-0x30]
  418e6d:	lea    rdx,[r11+0x30]
  418e71:	mov    ecx,0x80000000
  418e76:	mov    QWORD PTR [r11-0x40],rax
  418e7a:	mov    DWORD PTR [r11+0x30],0x0
  418e82:	call   0x44ae70
  418e87:	cmp    DWORD PTR [rsp+0x90],0x80000004
  418e92:	mov    esi,0x3
  418e97:	jae    0x418eb3
  418e99:	lea    rdi,[r12+0x4]
  418e9e:	mov    edx,DWORD PTR [rdi]
  418ea0:	mov    rcx,rbx
  418ea3:	call   0x418df0
  418ea8:	add    rdi,0x4
  418eac:	dec    rsi
  418eaf:	jne    0x418e9e
  418eb1:	jmp    0x418f0c
  418eb3:	xor    edi,edi
  418eb5:	xor    eax,eax
  418eb7:	lea    ecx,[rdi-0x7ffffffe]
  418ebd:	lea    r9,[rsp+0x48]
  418ec2:	mov    DWORD PTR [rsp+0x44],eax
  418ec6:	mov    DWORD PTR [rsp+0x48],eax
  418eca:	mov    DWORD PTR [rsp+0x4c],eax
  418ece:	lea    rax,[rsp+0x4c]
  418ed3:	lea    r8,[rsp+0x44]
  418ed8:	lea    rdx,[rsp+0x40]
  418edd:	mov    QWORD PTR [rsp+0x20],rax
  418ee2:	mov    DWORD PTR [rsp+0x40],0x0
  418eea:	call   0x44ae70
  418eef:	xor    ebp,ebp
  418ef1:	mov    edx,DWORD PTR [rsp+rbp*4+0x40]
  418ef5:	mov    rcx,rbx
  418ef8:	call   0x418df0
  418efd:	inc    rbp
  418f00:	cmp    rbp,0x4
  418f04:	jl     0x418ef1
  418f06:	inc    edi
  418f08:	cmp    edi,esi
  418f0a:	jl     0x418eb5
  418f0c:	mov    rcx,rbx
  418f0f:	call   0x40384c
  418f14:	mov    ecx,DWORD PTR [r12+0x10]
  418f19:	lea    rdx,[rsp+0x40]
  418f1e:	call   0x401a34
  418f23:	mov    eax,DWORD PTR [rbx+0x8]
  418f26:	cmp    DWORD PTR [rbx+0xc],eax
  418f29:	jne    0x418f33
  418f2b:	mov    rcx,rbx
  418f2e:	call   0x402af0
  418f33:	mov    edx,DWORD PTR [rbx+0x8]
  418f36:	mov    rcx,QWORD PTR [rbx]
  418f39:	mov    BYTE PTR [rdx+rcx*1],0x28
  418f3d:	inc    edx
  418f3f:	mov    BYTE PTR [rdx+rcx*1],0x0
  418f43:	mov    DWORD PTR [rbx+0x8],edx
  418f46:	lea    rdx,[rsp+0x40]
  418f4b:	mov    rcx,rbx
  418f4e:	call   0x402d24
  418f53:	mov    r11d,DWORD PTR [rbx+0x8]
  418f57:	cmp    DWORD PTR [rbx+0xc],r11d
  418f5b:	jne    0x418f65
  418f5d:	mov    rcx,rbx
  418f60:	call   0x402af0
  418f65:	mov    edx,DWORD PTR [rbx+0x8]
  418f68:	mov    rcx,QWORD PTR [rbx]
  418f6b:	mov    BYTE PTR [rdx+rcx*1],0x29
  418f6f:	inc    edx
  418f71:	mov    BYTE PTR [rdx+rcx*1],0x0
  418f75:	mov    DWORD PTR [rbx+0x8],edx
  418f78:	add    rsp,0x60
  418f7c:	pop    r12
  418f7e:	pop    rdi
  418f7f:	pop    rsi
  418f80:	pop    rbp
  418f81:	pop    rbx
  418f82:	ret    
  418f83:	int3   
  418f84:	rex.W push rbx
  418f86:	sub    rsp,0x40
  418f8a:	mov    rax,QWORD PTR [rcx]
  418f8d:	mov    DWORD PTR [rcx+0x8],0x0
  418f94:	mov    rbx,rcx
  418f97:	lea    rcx,[rsp+0x20]
  418f9c:	mov    BYTE PTR [rax],0x0
  418f9f:	call   0x44ae90
  418fa4:	test   eax,eax
  418fa6:	je     0x418fb7
  418fa8:	lea    rcx,[rsp+0x20]
  418fad:	mov    rdx,rbx
  418fb0:	call   0x418e40
  418fb5:	jmp    0x418fc6
  418fb7:	lea    rdx,[rip+0x3658a]        # 0x44f548
  418fbe:	mov    rcx,rbx
  418fc1:	call   0x402be4
  418fc6:	add    rsp,0x40
  418fca:	pop    rbx
  418fcb:	ret    
  418fcc:	jmp    0x44b000
  418fd1:	int3   
  418fd2:	int3   
  418fd3:	int3   
  418fd4:	rex.W push rbx
  418fd6:	push   rdi
  418fd7:	sub    rsp,0x28
  418fdb:	mov    rax,rdx
  418fde:	mov    rdi,r8
  418fe1:	mov    rbx,rcx
  418fe4:	mov    QWORD PTR [r8],0x0
  418feb:	lea    rdx,[rip+0x3bdfe]        # 0x454df0
  418ff2:	mov    rcx,rax
  418ff5:	mov    r8d,0x10
  418ffb:	call   0x44b786
  419000:	test   eax,eax
  419002:	jne    0x41900c
  419004:	mov    QWORD PTR [rdi],rbx
  419007:	inc    DWORD PTR [rbx+0x18]
  41900a:	jmp    0x419011
  41900c:	mov    eax,0x80004002
  419011:	add    rsp,0x28
  419015:	pop    rdi
  419016:	pop    rbx
  419017:	ret    
  419018:	inc    DWORD PTR [rcx+0x18]
  41901b:	mov    eax,DWORD PTR [rcx+0x18]
  41901e:	ret    
  41901f:	int3   
  419020:	rex.W push rbx
  419022:	push   rbp
  419023:	push   rsi
  419024:	push   rdi
  419025:	push   r12
  419027:	push   r13
  419029:	push   r14
  41902b:	push   r15
  41902d:	mov    rax,rsp
  419030:	sub    rsp,0x48
  419034:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  41903d:	mov    rsi,rcx
  419040:	mov    rbp,QWORD PTR [rcx+0x28]
  419044:	xor    r14d,r14d
  419047:	mov    QWORD PTR [rbp+0x30],r14
  41904b:	mov    QWORD PTR [rbp+0x38],r14
  41904f:	mov    QWORD PTR [rax+0x50],r14
  419053:	mov    QWORD PTR [rax+0x58],r14
  419057:	mov    rbx,QWORD PTR [rcx+0x20]
  41905b:	cmp    rbx,r14
  41905e:	je     0x419078
  419060:	cmp    rbx,r14
  419063:	je     0x41906e
  419065:	mov    rax,QWORD PTR [rbx]
  419068:	mov    rcx,rbx
  41906b:	call   QWORD PTR [rax+0x8]
  41906e:	mov    QWORD PTR [rsp+0xa0],rbx
  419076:	jmp    0x419092
  419078:	mov    rbx,QWORD PTR [rcx+0x18]
  41907c:	cmp    rbx,r14
  41907f:	je     0x41908a
  419081:	mov    rax,QWORD PTR [rbx]
  419084:	mov    rcx,rbx
  419087:	call   QWORD PTR [rax+0x8]
  41908a:	mov    QWORD PTR [rsp+0xa0],rbx
  419092:	mov    rax,QWORD PTR [rbx]
  419095:	lea    r8,[rsp+0x98]
  41909d:	lea    rdx,[rip+0x3ac44]        # 0x453ce8
  4190a4:	mov    rcx,rbx
  4190a7:	call   QWORD PTR [rax]
  4190a9:	mov    ecx,0x28
  4190ae:	call   0x402130
  4190b3:	mov    rdi,rax
  4190b6:	cmp    rax,r14
  4190b9:	je     0x4190cb
  4190bb:	mov    DWORD PTR [rax+0x8],r14d
  4190bf:	lea    rax,[rip+0x364ca]        # 0x44f590
  4190c6:	mov    QWORD PTR [rdi],rax
  4190c9:	jmp    0x4190ce
  4190cb:	mov    rdi,r14
  4190ce:	mov    QWORD PTR [rsp+0xa8],rdi
  4190d6:	cmp    rdi,r14
  4190d9:	je     0x4190e5
  4190db:	mov    rax,QWORD PTR [rdi]
  4190de:	mov    rcx,rdi
  4190e1:	call   QWORD PTR [rax+0x8]
  4190e4:	nop
  4190e5:	mov    r15,r14
  4190e8:	mov    DWORD PTR [rsp+0x90],r14d
  4190f0:	mov    rcx,QWORD PTR [rsp+0x98]
  4190f8:	cmp    rcx,r14
  4190fb:	je     0x4191a1
  419101:	mov    rax,QWORD PTR [rcx]
  419104:	lea    rdx,[rsi+0x58]
  419108:	mov    r8d,0x20
  41910e:	call   QWORD PTR [rax+0x18]
  419111:	mov    r12d,eax
  419114:	cmp    eax,r14d
  419117:	je     0x41914d
  419119:	cmp    rdi,r14
  41911c:	je     0x419128
  41911e:	mov    rdx,QWORD PTR [rdi]
  419121:	mov    rcx,rdi
  419124:	call   QWORD PTR [rdx+0x10]
  419127:	nop
  419128:	mov    rdx,QWORD PTR [rbx]
  41912b:	mov    rcx,rbx
  41912e:	call   QWORD PTR [rdx+0x10]
  419131:	nop
  419132:	mov    rcx,QWORD PTR [rsp+0x98]
  41913a:	cmp    rcx,r14
  41913d:	je     0x419145
  41913f:	mov    rax,QWORD PTR [rcx]
  419142:	call   QWORD PTR [rax+0x10]
  419145:	mov    eax,r12d
  419148:	jmp    0x41945b
  41914d:	mov    rcx,QWORD PTR [rsp+0x98]
  419155:	mov    rax,QWORD PTR [rcx]
  419158:	lea    rdx,[rsi+0x78]
  41915c:	mov    r8d,0x10
  419162:	call   QWORD PTR [rax+0x20]
  419165:	mov    r12d,eax
  419168:	cmp    eax,r14d
  41916b:	je     0x4191a1
  41916d:	cmp    rdi,r14
  419170:	je     0x41917c
  419172:	mov    rdx,QWORD PTR [rdi]
  419175:	mov    rcx,rdi
  419178:	call   QWORD PTR [rdx+0x10]
  41917b:	nop
  41917c:	mov    rdx,QWORD PTR [rbx]
  41917f:	mov    rcx,rbx
  419182:	call   QWORD PTR [rdx+0x10]
  419185:	nop
  419186:	mov    rcx,QWORD PTR [rsp+0x98]
  41918e:	cmp    rcx,r14
  419191:	je     0x419199
  419193:	mov    rax,QWORD PTR [rcx]
  419196:	call   QWORD PTR [rax+0x10]
  419199:	mov    eax,r12d
  41919c:	jmp    0x41945b
  4191a1:	mov    r12,r14
  4191a4:	cmp    QWORD PTR [rsi+0x48],r14
  4191a8:	jbe    0x419407
  4191ae:	mov    rcx,QWORD PTR [rsi+0x108]
  4191b5:	cmp    rcx,r14
  4191b8:	je     0x4191df
  4191ba:	mov    rax,QWORD PTR [rbp+0x30]
  4191be:	sub    rax,r15
  4191c1:	cmp    rax,0x100000
  4191c7:	jbe    0x4191df
  4191c9:	mov    rax,QWORD PTR [rcx]
  4191cc:	call   QWORD PTR [rax+0x10]
  4191cf:	mov    r13d,eax
  4191d2:	cmp    eax,r14d
  4191d5:	jne    0x41933d
  4191db:	mov    r15,QWORD PTR [rbp+0x30]
  4191df:	mov    rcx,QWORD PTR [rsi+0x48]
  4191e3:	lea    rax,[rcx-0x1]
  4191e7:	cmp    r12,rax
  4191ea:	sete   dl
  4191ed:	cmp    dl,r14b
  4191f0:	jne    0x419201
  4191f2:	test   r12b,0x7f
  4191f6:	je     0x419201
  4191f8:	cmp    BYTE PTR [rsi+0x98],r14b
  4191ff:	je     0x41920c
  419201:	cmp    rcx,0x1
  419205:	je     0x41920c
  419207:	mov    r13b,0x1
  41920a:	jmp    0x41920f
  41920c:	mov    r13b,r14b
  41920f:	mov    rax,QWORD PTR [rsi+0xf0]
  419216:	mov    DWORD PTR [rax+0x2c],0xffffffff
  41921d:	mov    BYTE PTR [rax+0x28],dl
  419220:	mov    BYTE PTR [rax+0x29],r13b
  419224:	mov    QWORD PTR [rax+0x20],r14
  419228:	cmp    QWORD PTR [rsi+0x20],r14
  41922c:	je     0x419290
  41922e:	mov    r8,QWORD PTR [rsi+0x118]
  419235:	mov    rdx,QWORD PTR [rsi+0x128]
  41923c:	mov    rcx,QWORD PTR [rsi+0x150]
  419243:	call   0x44b480
  419248:	mov    rcx,QWORD PTR [rsi+0x20]
  41924c:	mov    rax,QWORD PTR [rcx]
  41924f:	call   QWORD PTR [rax+0x18]
  419252:	mov    r8,QWORD PTR [rsi+0x118]
  419259:	mov    rdx,QWORD PTR [rsi+0x150]
  419260:	mov    rcx,QWORD PTR [rsi+0x20]
  419264:	call   0x4183e8
  419269:	mov    r8,QWORD PTR [rsi+0x118]
  419270:	mov    rdx,QWORD PTR [rsi+0x150]
  419277:	mov    rcx,QWORD PTR [rsi+0xf8]
  41927e:	call   0x40e904
  419283:	mov    r14d,eax
  419286:	test   eax,eax
  419288:	jne    0x419371
  41928e:	jmp    0x4192db
  419290:	mov    rcx,QWORD PTR [rsi+0x128]
  419297:	mov    rax,QWORD PTR [rsi+0x118]
  41929e:	mov    QWORD PTR [rdi+0x10],rcx
  4192a2:	mov    QWORD PTR [rdi+0x20],rax
  4192a6:	mov    QWORD PTR [rdi+0x18],r14
  4192aa:	mov    rcx,QWORD PTR [rsi+0x18]
  4192ae:	mov    rax,QWORD PTR [rsi+0x38]
  4192b2:	mov    r10,QWORD PTR [rcx]
  4192b5:	mov    QWORD PTR [rsp+0x28],rax
  4192ba:	mov    QWORD PTR [rsp+0x20],r14
  4192bf:	xor    r9d,r9d
  4192c2:	mov    r8,QWORD PTR [rsi+0xf8]
  4192c9:	mov    rdx,rdi
  4192cc:	call   QWORD PTR [r10+0x18]
  4192d0:	mov    r14d,eax
  4192d3:	test   eax,eax
  4192d5:	jne    0x4193a5
  4192db:	mov    rcx,QWORD PTR [rsi+0xf0]
  4192e2:	mov    eax,DWORD PTR [rcx+0x2c]
  4192e5:	not    eax
  4192e7:	xor    r14d,r14d
  4192ea:	cmp    r12,r14
  4192ed:	jne    0x4192f8
  4192ef:	mov    DWORD PTR [rsp+0x90],eax
  4192f6:	jmp    0x41930a
  4192f8:	cmp    r13b,r14b
  4192fb:	je     0x41930a
  4192fd:	cmp    DWORD PTR [rsp+0x90],eax
  419304:	jne    0x4193d4
  41930a:	mov    rax,QWORD PTR [rcx+0x20]
  41930e:	mov    QWORD PTR [rsi+0x120],rax
  419315:	mov    rax,QWORD PTR [rsi+0x118]
  41931c:	add    QWORD PTR [rbp+0x30],rax
  419320:	mov    rax,QWORD PTR [rsi+0x120]
  419327:	add    QWORD PTR [rbp+0x38],rax
  41932b:	inc    r12
  41932e:	cmp    r12,QWORD PTR [rsi+0x48]
  419332:	jb     0x4191ae
  419338:	jmp    0x419407
  41933d:	cmp    rdi,r14
  419340:	je     0x41934c
  419342:	mov    rax,QWORD PTR [rdi]
  419345:	mov    rcx,rdi
  419348:	call   QWORD PTR [rax+0x10]
  41934b:	nop
  41934c:	mov    rax,QWORD PTR [rbx]
  41934f:	mov    rcx,rbx
  419352:	call   QWORD PTR [rax+0x10]
  419355:	nop
  419356:	mov    rcx,QWORD PTR [rsp+0x98]
  41935e:	cmp    rcx,r14
  419361:	je     0x419369
  419363:	mov    rax,QWORD PTR [rcx]
  419366:	call   QWORD PTR [rax+0x10]
  419369:	mov    eax,r13d
  41936c:	jmp    0x41945b
  419371:	test   rdi,rdi
  419374:	je     0x419380
  419376:	mov    rax,QWORD PTR [rdi]
  419379:	mov    rcx,rdi
  41937c:	call   QWORD PTR [rax+0x10]
  41937f:	nop
  419380:	mov    rax,QWORD PTR [rbx]
  419383:	mov    rcx,rbx
  419386:	call   QWORD PTR [rax+0x10]
  419389:	nop
  41938a:	mov    rcx,QWORD PTR [rsp+0x98]
  419392:	test   rcx,rcx
  419395:	je     0x41939d
  419397:	mov    rax,QWORD PTR [rcx]
  41939a:	call   QWORD PTR [rax+0x10]
  41939d:	mov    eax,r14d
  4193a0:	jmp    0x41945b
  4193a5:	mov    rax,QWORD PTR [rdi]
  4193a8:	mov    rcx,rdi
  4193ab:	call   QWORD PTR [rax+0x10]
  4193ae:	nop
  4193af:	mov    rax,QWORD PTR [rbx]
  4193b2:	mov    rcx,rbx
  4193b5:	call   QWORD PTR [rax+0x10]
  4193b8:	nop
  4193b9:	mov    rcx,QWORD PTR [rsp+0x98]
  4193c1:	test   rcx,rcx
  4193c4:	je     0x4193cc
  4193c6:	mov    rax,QWORD PTR [rcx]
  4193c9:	call   QWORD PTR [rax+0x10]
  4193cc:	mov    eax,r14d
  4193cf:	jmp    0x41945b
  4193d4:	cmp    rdi,r14
  4193d7:	je     0x4193e3
  4193d9:	mov    rax,QWORD PTR [rdi]
  4193dc:	mov    rcx,rdi
  4193df:	call   QWORD PTR [rax+0x10]
  4193e2:	nop
  4193e3:	mov    rax,QWORD PTR [rbx]
  4193e6:	mov    rcx,rbx
  4193e9:	call   QWORD PTR [rax+0x10]
  4193ec:	nop
  4193ed:	mov    rcx,QWORD PTR [rsp+0x98]
  4193f5:	cmp    rcx,r14
  4193f8:	je     0x419400
  4193fa:	mov    rax,QWORD PTR [rcx]
  4193fd:	call   QWORD PTR [rax+0x10]
  419400:	mov    eax,0x80004005
  419405:	jmp    0x41945b
  419407:	mov    rcx,QWORD PTR [rsi+0x18]
  41940b:	cmp    rcx,r14
  41940e:	je     0x41941a
  419410:	mov    rax,QWORD PTR [rcx]
  419413:	call   QWORD PTR [rax+0x10]
  419416:	mov    QWORD PTR [rsi+0x18],r14
  41941a:	mov    rcx,QWORD PTR [rsi+0x20]
  41941e:	cmp    rcx,r14
  419421:	je     0x41942d
  419423:	mov    rax,QWORD PTR [rcx]
  419426:	call   QWORD PTR [rax+0x10]
  419429:	mov    QWORD PTR [rsi+0x20],r14
  41942d:	cmp    rdi,r14
  419430:	je     0x41943c
  419432:	mov    rax,QWORD PTR [rdi]
  419435:	mov    rcx,rdi
  419438:	call   QWORD PTR [rax+0x10]
  41943b:	nop
  41943c:	mov    rax,QWORD PTR [rbx]
  41943f:	mov    rcx,rbx
  419442:	call   QWORD PTR [rax+0x10]
  419445:	nop
  419446:	mov    rcx,QWORD PTR [rsp+0x98]
  41944e:	cmp    rcx,r14
  419451:	je     0x419459
  419453:	mov    rax,QWORD PTR [rcx]
  419456:	call   QWORD PTR [rax+0x10]
  419459:	xor    eax,eax
  41945b:	add    rsp,0x48
  41945f:	pop    r15
  419461:	pop    r14
  419463:	pop    r13
  419465:	pop    r12
  419467:	pop    rdi
  419468:	pop    rsi
  419469:	pop    rbp
  41946a:	pop    rbx
  41946b:	ret    
  41946c:	int3   
  41946d:	int3   
  41946e:	int3   
  41946f:	int3   
  419470:	rex.W push rbp
  419472:	sub    rsp,0x20
  419476:	mov    rbp,rdx
  419479:	lea    rcx,[rbp+0x98]
  419480:	call   0x4176b4
  419485:	add    rsp,0x20
  419489:	pop    rbp
  41948a:	ret    
  41948b:	int3   
  41948c:	int3   
  41948d:	int3   
  41948e:	int3   
  41948f:	int3   
  419490:	rex.W push rbp
  419492:	sub    rsp,0x20
  419496:	mov    rbp,rdx
  419499:	lea    rcx,[rbp+0xa0]
  4194a0:	call   0x4176b4
  4194a5:	add    rsp,0x20
  4194a9:	pop    rbp
  4194aa:	ret    
  4194ab:	int3   
  4194ac:	int3   
  4194ad:	int3   
  4194ae:	int3   
  4194af:	int3   
  4194b0:	rex.W push rbp
  4194b2:	sub    rsp,0x20
  4194b6:	mov    rbp,rdx
  4194b9:	lea    rcx,[rbp+0xa8]
  4194c0:	call   0x4176b4
  4194c5:	add    rsp,0x20
  4194c9:	pop    rbp
  4194ca:	ret    
  4194cb:	int3   
  4194cc:	rex.W push rbp
  4194ce:	push   rbx
  4194cf:	sub    rsp,0x38
  4194d3:	lea    rbp,[rsp+0x30]
  4194d8:	mov    rax,QWORD PTR [rcx+0x48]
  4194dc:	mov    rbx,rcx
  4194df:	add    rax,0xf
  4194e3:	and    rax,0xfffffffffffffff0
  4194e7:	call   0x44b9d0
  4194ec:	mov    r8,QWORD PTR [rcx+0x38]
  4194f0:	sub    rsp,rax
  4194f3:	mov    al,BYTE PTR [rcx+0x30]
  4194f6:	lea    rdx,[rcx+0x34]
  4194fa:	neg    al
  4194fc:	mov    rax,QWORD PTR [rcx+0x8]
  419500:	sbb    r9,r9
  419503:	mov    QWORD PTR [rsp+0x28],rax
  419508:	mov    QWORD PTR [rsp+0x20],r8
  41950d:	mov    r8,QWORD PTR [rcx+0x28]
  419511:	and    r9,rdx
  419514:	mov    edx,DWORD PTR [rcx+0x20]
  419517:	mov    rcx,QWORD PTR [rcx+0x18]
  41951b:	call   0x4184c8
  419520:	mov    DWORD PTR [rbx+0x40],eax
  419523:	xor    eax,eax
  419525:	lea    rsp,[rbp+0x8]
  419529:	pop    rbx
  41952a:	pop    rbp
  41952b:	ret    
  41952c:	mov    QWORD PTR [rsp+0x8],rcx
  419531:	push   rbx
  419532:	sub    rsp,0x30
  419536:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41953f:	mov    rbx,rcx
  419542:	mov    rcx,QWORD PTR [rcx+0x38]
  419546:	test   rcx,rcx
  419549:	je     0x419552
  41954b:	mov    rax,QWORD PTR [rcx]
  41954e:	call   QWORD PTR [rax+0x10]
  419551:	nop
  419552:	mov    rcx,rbx
  419555:	add    rsp,0x30
  419559:	pop    rbx
  41955a:	jmp    0x44b000
  41955f:	int3   
  419560:	int3   
  419561:	int3   
  419562:	int3   
  419563:	int3   
  419564:	int3   
  419565:	int3   
  419566:	int3   
  419567:	int3   
  419568:	int3   
  419569:	int3   
  41956a:	int3   
  41956b:	int3   
  41956c:	rex.W push rbp
  41956e:	sub    rsp,0x20
  419572:	mov    rbp,rdx
  419575:	mov    rcx,QWORD PTR [rbp+0x40]
  419579:	call   0x418fcc
  41957e:	add    rsp,0x20
  419582:	pop    rbp
  419583:	ret    
  419584:	rex.W push rbx
  419586:	push   rbp
  419587:	push   rsi
  419588:	push   rdi
  419589:	push   r12
  41958b:	sub    rsp,0x20
  41958f:	xor    ecx,ecx
  419591:	call   0x44ad20
  419596:	mov    ecx,0x500
  41959b:	call   0x44ad00
  4195a0:	xor    ebx,ebx
  4195a2:	cmp    rax,rbx
  4195a5:	mov    rdi,rax
  4195a8:	je     0x41967e
  4195ae:	mov    eax,ebx
  4195b0:	mov    rcx,rdi
  4195b3:	mov    r8d,0x100
  4195b9:	mov    BYTE PTR [rcx],al
  4195bb:	inc    eax
  4195bd:	inc    rcx
  4195c0:	cmp    eax,r8d
  4195c3:	jb     0x4195b9
  4195c5:	mov    edx,0xffffffff
  4195ca:	mov    r9,rdi
  4195cd:	mov    eax,edx
  4195cf:	lea    r10,[rip+0x4f9ca]        # 0x468fa0
  4195d6:	xor    al,BYTE PTR [r9]
  4195d9:	inc    r9
  4195dc:	movzx  ecx,al
  4195df:	mov    eax,edx
  4195e1:	mov    edx,DWORD PTR [r10+rcx*4]
  4195e5:	shr    eax,0x8
  4195e8:	xor    edx,eax
  4195ea:	dec    r8
  4195ed:	jne    0x4195cd
  4195ef:	not    edx
  4195f1:	cmp    edx,0x29058c73
  4195f7:	jne    0x41967e
  4195fd:	mov    edx,0x1f123bb5
  419602:	mov    r9d,0x159a55e5
  419608:	lea    r8,[rdi+0x100]
  41960f:	mov    r10d,0x400
  419615:	movzx  ecx,r9w
  419619:	shr    r9d,0x10
  41961d:	imul   ecx,ecx,0x9069
  419623:	add    r9d,ecx
  419626:	movzx  ecx,dx
  419629:	shr    edx,0x10
  41962c:	imul   ecx,ecx,0x4650
  419632:	add    edx,ecx
  419634:	mov    BYTE PTR [r8],dl
  419637:	inc    r8
  41963a:	dec    r10
  41963d:	mov    DWORD PTR [rsp+0x54],edx
  419641:	mov    al,dl
  419643:	jne    0x419615
  419645:	mov    esi,ebx
  419647:	mov    r12d,esi
  41964a:	mov    ebp,ebx
  41964c:	add    r12,rdi
  41964f:	mov    edx,ebp
  419651:	mov    rcx,r12
  419654:	call   0x44b120
  419659:	mov    edx,ebp
  41965b:	mov    rcx,r12
  41965e:	mov    r11d,eax
  419661:	call   0x418798
  419666:	cmp    eax,r11d
  419669:	jne    0x41967e
  41966b:	inc    ebp
  41966d:	cmp    ebp,0x20
  419670:	jb     0x41964f
  419672:	inc    esi
  419674:	cmp    esi,0x4e0
  41967a:	jb     0x419647
  41967c:	mov    bl,0x1
  41967e:	mov    rcx,rdi
  419681:	call   0x44ad20
  419686:	mov    al,bl
  419688:	add    rsp,0x20
  41968c:	pop    r12
  41968e:	pop    rdi
  41968f:	pop    rsi
  419690:	pop    rbp
  419691:	pop    rbx
  419692:	ret    
  419693:	int3   
  419694:	mov    QWORD PTR [rcx],0x0
  41969b:	mov    rax,rcx
  41969e:	mov    QWORD PTR [rcx+0x38],0x0
  4196a6:	ret    
  4196a7:	int3   
  4196a8:	rex.W push rbx
  4196aa:	push   rdi
  4196ab:	sub    rsp,0x28
  4196af:	mov    edi,0x1
  4196b4:	mov    rbx,rcx
  4196b7:	mov    edx,edi
  4196b9:	call   0x40dae4
  4196be:	test   eax,eax
  4196c0:	js     0x4196d9
  4196c2:	mov    edx,eax
  4196c4:	mov    rax,QWORD PTR [rbx]
  4196c7:	mov    r8,QWORD PTR [rax+rdx*8]
  4196cb:	cmp    WORD PTR [r8+0x8],0x13
  4196d1:	jne    0x4196d9
  4196d3:	mov    eax,DWORD PTR [r8+0x10]
  4196d7:	jmp    0x419702
  4196d9:	mov    rcx,rbx
  4196dc:	call   0x40db14
  4196e1:	mov    r11d,eax
  4196e4:	lea    ecx,[rax+rax*1+0xe]
  4196e8:	mov    eax,0x4000000
  4196ed:	shl    edi,cl
  4196ef:	cmp    r11d,0x6
  4196f3:	mov    ecx,0x2000000
  4196f8:	cmove  eax,ecx
  4196fb:	cmp    r11d,0x5
  4196ff:	cmovle eax,edi
  419702:	add    rsp,0x28
  419706:	pop    rdi
  419707:	pop    rbx
  419708:	ret    
  419709:	int3   
  41970a:	int3   
  41970b:	int3   
  41970c:	rex.W push rbx
  41970e:	push   rsi
  41970f:	push   rdi
  419710:	sub    rsp,0x20
  419714:	xor    ebx,ebx
  419716:	mov    rsi,rdx
  419719:	mov    rdi,rcx
  41971c:	mov    BYTE PTR [rdx],bl
  41971e:	lea    edx,[rbx+0xd]
  419721:	call   0x40dae4
  419726:	cmp    eax,ebx
  419728:	jl     0x419740
  41972a:	mov    r8d,eax
  41972d:	mov    rax,QWORD PTR [rdi]
  419730:	mov    rcx,QWORD PTR [rax+r8*8]
  419734:	cmp    WORD PTR [rcx+0x8],0x13
  419739:	jne    0x419740
  41973b:	mov    eax,DWORD PTR [rcx+0x10]
  41973e:	jmp    0x419745
  419740:	mov    eax,0xffffffff
  419745:	cmp    eax,ebx
  419747:	jl     0x419757
  419749:	cmp    eax,0x2
  41974c:	mov    BYTE PTR [rsi],0x1
  41974f:	setge  bl
  419752:	lea    eax,[rbx+0x1]
  419755:	jmp    0x419793
  419757:	mov    edx,0xc
  41975c:	mov    rcx,rdi
  41975f:	call   0x40dae4
  419764:	cmp    eax,ebx
  419766:	jl     0x41977d
  419768:	mov    ecx,eax
  41976a:	mov    rax,QWORD PTR [rdi]
  41976d:	mov    rdx,QWORD PTR [rax+rcx*8]
  419771:	cmp    WORD PTR [rdx+0x8],0x13
  419776:	jne    0x41977d
  419778:	mov    ebx,DWORD PTR [rdx+0x10]
  41977b:	jmp    0x41978b
  41977d:	mov    rcx,rdi
  419780:	call   0x40db14
  419785:	cmp    eax,0x5
  419788:	setge  bl
  41978b:	neg    ebx
  41978d:	sbb    eax,eax
  41978f:	neg    eax
  419791:	inc    eax
  419793:	add    rsp,0x20
  419797:	pop    rdi
  419798:	pop    rsi
  419799:	pop    rbx
  41979a:	ret    
  41979b:	int3   
  41979c:	rex.W push rbx
  41979e:	sub    rsp,0x20
  4197a2:	add    DWORD PTR [rcx+0x18],0xffffffff
  4197a6:	mov    eax,DWORD PTR [rcx+0x18]
  4197a9:	mov    rbx,rcx
  4197ac:	jne    0x4197c1
  4197ae:	mov    rcx,QWORD PTR [rcx+0x10]
  4197b2:	call   0x44ad20
  4197b7:	mov    rcx,rbx
  4197ba:	call   0x40215c
  4197bf:	xor    eax,eax
  4197c1:	add    rsp,0x20
  4197c5:	pop    rbx
  4197c6:	ret    
  4197c7:	int3   
  4197c8:	mov    QWORD PTR [rsp+0x8],rcx
  4197cd:	push   rbp
  4197ce:	push   rbx
  4197cf:	push   rdi
  4197d0:	sub    rsp,0x30
  4197d4:	lea    rbp,[rsp+0x20]
  4197d9:	mov    QWORD PTR [rbp+0x8],0xfffffffffffffffe
  4197e1:	mov    rbx,rcx
  4197e4:	mov    rax,QWORD PTR [rcx+0x50]
  4197e8:	add    rax,0xf
  4197ec:	and    rax,0xfffffffffffffff0
  4197f0:	call   0x44b9d0
  4197f5:	sub    rsp,rax
  4197f8:	call   0x419020
  4197fd:	mov    edi,eax
  4197ff:	mov    DWORD PTR [rbp+0x0],eax
  419802:	mov    DWORD PTR [rbx+0xe8],eax
  419808:	jmp    0x419811
  41980a:	mov    rbx,QWORD PTR [rbp+0x30]
  41980e:	mov    edi,DWORD PTR [rbp+0x0]
  419811:	test   edi,edi
  419813:	je     0x419832
  419815:	mov    rax,QWORD PTR [rbx+0x28]
  419819:	mov    rbx,QWORD PTR [rax+0x50]
  41981d:	mov    rcx,rbx
  419820:	call   QWORD PTR [rip+0x3389a]        # 0x44d0c0
  419826:	mov    DWORD PTR [rbx+0x28],edi
  419829:	mov    rcx,rbx
  41982c:	call   QWORD PTR [rip+0x33886]        # 0x44d0b8
  419832:	xor    eax,eax
  419834:	lea    rsp,[rbp+0x10]
  419838:	pop    rdi
  419839:	pop    rbx
  41983a:	pop    rbp
  41983b:	ret    
  41983c:	int3   
  41983d:	int3   
  41983e:	int3   
  41983f:	int3   
  419840:	int3   
  419841:	int3   
  419842:	int3   
  419843:	int3   
  419844:	int3   
  419845:	int3   
  419846:	int3   
  419847:	int3   
  419848:	mov    QWORD PTR [rsp+0x10],rdx
  41984d:	push   rbp
  41984e:	sub    rsp,0x20
  419852:	lea    rbp,[rdx+0x20]
  419856:	mov    DWORD PTR [rbp+0x0],0x80004005
  41985d:	lea    rax,[rip+0xffffffffffffffa6]        # 0x41980a
  419864:	jmp    0x419866
  419866:	add    rsp,0x20
  41986a:	pop    rbp
  41986b:	ret    
  41986c:	int3   
  41986d:	int3   
  41986e:	int3   
  41986f:	int3   
  419870:	rex.W push rbx
  419872:	push   rbp
  419873:	push   rsi
  419874:	push   rdi
  419875:	push   r12
  419877:	push   r13
  419879:	push   r14
  41987b:	push   r15
  41987d:	sub    rsp,0x78
  419881:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
  41988a:	mov    rbp,r9
  41988d:	mov    r13d,r8d
  419890:	mov    r14,rdx
  419893:	mov    rdi,rcx
  419896:	mov    rbx,QWORD PTR [rcx+0x118]
  41989d:	mov    rax,rbx
  4198a0:	shr    rax,0x4
  4198a4:	lea    r12,[rax+rbx*1+0x400]
  4198ac:	cmp    r12,rbx
  4198af:	jae    0x4198bb
  4198b1:	mov    eax,0x80004005
  4198b6:	jmp    0x419efe
  4198bb:	mov    rax,QWORD PTR [rcx+0x130]
  4198c2:	mov    QWORD PTR [rcx+0x128],rax
  4198c9:	xor    r15d,r15d
  4198cc:	cmp    rax,r15
  4198cf:	jne    0x4199e5
  4198d5:	mov    rcx,QWORD PTR [rcx+0x140]
  4198dc:	cmp    rcx,r15
  4198df:	je     0x4198ea
  4198e1:	cmp    QWORD PTR [rdi+0x138],rbx
  4198e8:	je     0x419922
  4198ea:	call   0x44ad20
  4198ef:	mov    QWORD PTR [rdi+0x138],r15
  4198f6:	mov    rcx,rbx
  4198f9:	call   0x44ad00
  4198fe:	mov    QWORD PTR [rdi+0x140],rax
  419905:	cmp    rax,r15
  419908:	je     0x419913
  41990a:	mov    QWORD PTR [rdi+0x138],rbx
  419911:	jmp    0x419922
  419913:	cmp    rbx,r15
  419916:	je     0x419922
  419918:	mov    eax,0x8007000e
  41991d:	jmp    0x419efe
  419922:	cmp    r13d,r15d
  419925:	jne    0x4199ac
  41992b:	mov    rax,QWORD PTR [rbp+0x0]
  41992f:	mov    QWORD PTR [rsp+0xc0],rax
  419937:	mov    rdx,QWORD PTR [rdi+0x138]
  41993e:	mov    r11,QWORD PTR [rdi+0x140]
  419945:	mov    r10,r15
  419948:	cmp    rdx,r15
  41994b:	jbe    0x4199a6
  41994d:	mov    r8d,DWORD PTR [rsp+0xc4]
  419955:	mov    r9d,DWORD PTR [rsp+0xc0]
  41995d:	movzx  ecx,r9w
  419961:	imul   ecx,ecx,0x9069
  419967:	shr    r9d,0x10
  41996b:	add    r9d,ecx
  41996e:	movzx  ecx,r8w
  419972:	imul   ecx,ecx,0x4650
  419978:	shr    r8d,0x10
  41997c:	add    r8d,ecx
  41997f:	mov    DWORD PTR [rsp+0xc4],r8d
  419987:	mov    al,r8b
  41998a:	mov    BYTE PTR [r10+r11*1],r8b
  41998e:	inc    r10
  419991:	cmp    r10,rdx
  419994:	jb     0x41995d
  419996:	mov    DWORD PTR [rsp+0xc0],r9d
  41999e:	mov    rax,QWORD PTR [rsp+0xc0]
  4199a6:	mov    QWORD PTR [rbp+0x0],rax
  4199aa:	jmp    0x4199be
  4199ac:	mov    r8,rbp
  4199af:	mov    edx,r13d
  4199b2:	lea    rcx,[rdi+0x138]
  4199b9:	call   0x417d70
  4199be:	mov    rdx,QWORD PTR [rdi+0x138]
  4199c5:	mov    rcx,QWORD PTR [rdi+0x140]
  4199cc:	call   0x44b120
  4199d1:	mov    DWORD PTR [rdi+0x110],eax
  4199d7:	mov    rax,QWORD PTR [rdi+0x140]
  4199de:	mov    QWORD PTR [rdi+0x128],rax
  4199e5:	cmp    QWORD PTR [rdi+0x20],r15
  4199e9:	je     0x419a3f
  4199eb:	mov    rbx,QWORD PTR [rdi+0x118]
  4199f2:	mov    rcx,QWORD PTR [rdi+0x150]
  4199f9:	cmp    rcx,r15
  4199fc:	je     0x419a07
  4199fe:	cmp    QWORD PTR [rdi+0x148],rbx
  419a05:	je     0x419a3f
  419a07:	call   0x44ad20
  419a0c:	mov    QWORD PTR [rdi+0x148],r15
  419a13:	mov    rcx,rbx
  419a16:	call   0x44ad00
  419a1b:	mov    QWORD PTR [rdi+0x150],rax
  419a22:	cmp    rax,r15
  419a25:	je     0x419a30
  419a27:	mov    QWORD PTR [rdi+0x148],rbx
  419a2e:	jmp    0x419a3f
  419a30:	cmp    rbx,r15
  419a33:	je     0x419a3f
  419a35:	mov    eax,0x8007000e
  419a3a:	jmp    0x419efe
  419a3f:	mov    esi,0x30
  419a44:	mov    rcx,rsi
  419a47:	call   0x402130
  419a4c:	mov    rbx,rax
  419a4f:	lea    rbp,[rip+0x35b1a]        # 0x44f570
  419a56:	cmp    rax,r15
  419a59:	je     0x419a6c
  419a5b:	mov    QWORD PTR [rax+0x8],r15
  419a5f:	mov    QWORD PTR [rax+0x10],r15
  419a63:	mov    DWORD PTR [rax+0x18],r15d
  419a67:	mov    QWORD PTR [rax],rbp
  419a6a:	jmp    0x419a6f
  419a6c:	mov    rbx,r15
  419a6f:	mov    QWORD PTR [rdi+0xf0],rbx
  419a76:	cmp    rbx,r15
  419a79:	je     0x419a84
  419a7b:	mov    rax,QWORD PTR [rbx]
  419a7e:	mov    rcx,rbx
  419a81:	call   QWORD PTR [rax+0x8]
  419a84:	mov    rcx,QWORD PTR [rdi+0xf8]
  419a8b:	cmp    rcx,r15
  419a8e:	je     0x419a96
  419a90:	mov    rax,QWORD PTR [rcx]
  419a93:	call   QWORD PTR [rax+0x10]
  419a96:	mov    QWORD PTR [rdi+0xf8],rbx
  419a9d:	mov    rbx,QWORD PTR [rdi+0xf0]
  419aa4:	mov    rcx,QWORD PTR [rbx+0x10]
  419aa8:	cmp    rcx,r15
  419aab:	je     0x419ab3
  419aad:	cmp    QWORD PTR [rbx+0x8],r12
  419ab1:	je     0x419ae2
  419ab3:	call   0x44ad20
  419ab8:	mov    QWORD PTR [rbx+0x8],r15
  419abc:	mov    rcx,r12
  419abf:	call   0x44ad00
  419ac4:	mov    QWORD PTR [rbx+0x10],rax
  419ac8:	cmp    rax,r15
  419acb:	je     0x419ad3
  419acd:	mov    QWORD PTR [rbx+0x8],r12
  419ad1:	jmp    0x419ae2
  419ad3:	cmp    r12,r15
  419ad6:	je     0x419ae2
  419ad8:	mov    eax,0x8007000e
  419add:	jmp    0x419efe
  419ae2:	mov    QWORD PTR [rdi+0x158],r15
  419ae9:	cmp    QWORD PTR [rdi+0x160],r15
  419af0:	jne    0x419b44
  419af2:	mov    rcx,rsi
  419af5:	call   0x402130
  419afa:	mov    rbx,rax
  419afd:	cmp    rax,r15
  419b00:	je     0x419b13
  419b02:	mov    QWORD PTR [rax+0x8],r15
  419b06:	mov    QWORD PTR [rax+0x10],r15
  419b0a:	mov    DWORD PTR [rax+0x18],r15d
  419b0e:	mov    QWORD PTR [rax],rbp
  419b11:	jmp    0x419b16
  419b13:	mov    rbx,r15
  419b16:	mov    QWORD PTR [rdi+0x158],rbx
  419b1d:	cmp    rbx,r15
  419b20:	je     0x419b2b
  419b22:	mov    rax,QWORD PTR [rbx]
  419b25:	mov    rcx,rbx
  419b28:	call   QWORD PTR [rax+0x8]
  419b2b:	mov    rcx,QWORD PTR [rdi+0x160]
  419b32:	cmp    rcx,r15
  419b35:	je     0x419b3d
  419b37:	mov    rax,QWORD PTR [rcx]
  419b3a:	call   QWORD PTR [rax+0x10]
  419b3d:	mov    QWORD PTR [rdi+0x160],rbx
  419b44:	mov    rbx,QWORD PTR [rdi+0x158]
  419b4b:	mov    rcx,QWORD PTR [rbx+0x10]
  419b4f:	mov    esi,0x5
  419b54:	cmp    rcx,r15
  419b57:	je     0x419b5f
  419b59:	cmp    QWORD PTR [rbx+0x8],rsi
  419b5d:	je     0x419b89
  419b5f:	call   0x44ad20
  419b64:	mov    QWORD PTR [rbx+0x8],r15
  419b68:	mov    rcx,rsi
  419b6b:	call   0x44ad00
  419b70:	mov    QWORD PTR [rbx+0x10],rax
  419b74:	cmp    rax,r15
  419b77:	je     0x419b7f
  419b79:	mov    QWORD PTR [rbx+0x8],rsi
  419b7d:	jmp    0x419b89
  419b7f:	mov    eax,0x8007000e
  419b84:	jmp    0x419efe
  419b89:	mov    rax,QWORD PTR [rdi+0x158]
  419b90:	mov    r12d,0xffffffff
  419b96:	mov    DWORD PTR [rax+0x2c],r12d
  419b9a:	mov    BYTE PTR [rax+0x28],0x1
  419b9e:	mov    BYTE PTR [rax+0x29],r15b
  419ba2:	mov    QWORD PTR [rax+0x20],r15
  419ba6:	mov    QWORD PTR [rsp+0x40],r15
  419bab:	mov    rbx,QWORD PTR [rdi+0x20]
  419baf:	cmp    rbx,r15
  419bb2:	je     0x419bc9
  419bb4:	cmp    rbx,r15
  419bb7:	je     0x419bc2
  419bb9:	mov    rax,QWORD PTR [rbx]
  419bbc:	mov    rcx,rbx
  419bbf:	call   QWORD PTR [rax+0x8]
  419bc2:	mov    QWORD PTR [rsp+0x40],rbx
  419bc7:	jmp    0x419be0
  419bc9:	mov    rbx,QWORD PTR [rdi+0x18]
  419bcd:	cmp    rbx,r15
  419bd0:	je     0x419bdb
  419bd2:	mov    rax,QWORD PTR [rbx]
  419bd5:	mov    rcx,rbx
  419bd8:	call   QWORD PTR [rax+0x8]
  419bdb:	mov    QWORD PTR [rsp+0x40],rbx
  419be0:	mov    QWORD PTR [rsp+0xc0],r15
  419be8:	mov    rax,QWORD PTR [rbx]
  419beb:	lea    r8,[rsp+0xc0]
  419bf3:	lea    rdx,[rip+0x3a17e]        # 0x453d78
  419bfa:	mov    rcx,rbx
  419bfd:	call   QWORD PTR [rax]
  419bff:	mov    rdx,QWORD PTR [rsp+0xc0]
  419c07:	cmp    rdx,r15
  419c0a:	je     0x419c50
  419c0c:	mov    rax,QWORD PTR [rdi+0x118]
  419c13:	mov    QWORD PTR [rsp+0x30],rax
  419c18:	lea    r8,[rsp+0x30]
  419c1d:	mov    rcx,r14
  419c20:	call   0x40d99c
  419c25:	mov    esi,eax
  419c27:	cmp    eax,r15d
  419c2a:	je     0x419c7a
  419c2c:	mov    rcx,QWORD PTR [rsp+0xc0]
  419c34:	cmp    rcx,r15
  419c37:	je     0x419c40
  419c39:	mov    rdx,QWORD PTR [rcx]
  419c3c:	call   QWORD PTR [rdx+0x10]
  419c3f:	nop
  419c40:	mov    rax,QWORD PTR [rbx]
  419c43:	mov    rcx,rbx
  419c46:	call   QWORD PTR [rax+0x10]
  419c49:	mov    eax,esi
  419c4b:	jmp    0x419efe
  419c50:	mov    edx,r15d
  419c53:	cmp    DWORD PTR [r14+0x8],r15d
  419c57:	jbe    0x419c7a
  419c59:	mov    rcx,QWORD PTR [r14]
  419c5c:	mov    rax,QWORD PTR [rcx]
  419c5f:	cmp    BYTE PTR [rax+0x4],r15b
  419c63:	je     0x419c73
  419c65:	inc    edx
  419c67:	add    rcx,0x8
  419c6b:	cmp    edx,DWORD PTR [r14+0x8]
  419c6f:	jb     0x419c5c
  419c71:	jmp    0x419c7a
  419c73:	mov    esi,0x80070057
  419c78:	jmp    0x419cd6
  419c7a:	mov    QWORD PTR [rsp+0x38],r15
  419c7f:	mov    rax,QWORD PTR [rbx]
  419c82:	lea    r8,[rsp+0x38]
  419c87:	lea    rdx,[rip+0x3a0ca]        # 0x453d58
  419c8e:	mov    rcx,rbx
  419c91:	call   QWORD PTR [rax]
  419c93:	mov    rcx,QWORD PTR [rsp+0x38]
  419c98:	cmp    rcx,r15
  419c9b:	je     0x419ce6
  419c9d:	mov    rax,QWORD PTR [rcx]
  419ca0:	mov    rdx,QWORD PTR [rdi+0x160]
  419ca7:	call   QWORD PTR [rax+0x18]
  419caa:	mov    esi,eax
  419cac:	cmp    eax,r15d
  419caf:	je     0x419ce6
  419cb1:	mov    rcx,QWORD PTR [rsp+0x38]
  419cb6:	cmp    rcx,r15
  419cb9:	je     0x419cc2
  419cbb:	mov    rdx,QWORD PTR [rcx]
  419cbe:	call   QWORD PTR [rdx+0x10]
  419cc1:	nop
  419cc2:	mov    rcx,QWORD PTR [rsp+0xc0]
  419cca:	cmp    rcx,r15
  419ccd:	je     0x419cd6
  419ccf:	mov    rax,QWORD PTR [rcx]
  419cd2:	call   QWORD PTR [rax+0x10]
  419cd5:	nop
  419cd6:	mov    rax,QWORD PTR [rbx]
  419cd9:	mov    rcx,rbx
  419cdc:	call   QWORD PTR [rax+0x10]
  419cdf:	mov    eax,esi
  419ce1:	jmp    0x419efe
  419ce6:	mov    QWORD PTR [rsp+0x30],r15
  419ceb:	mov    rax,QWORD PTR [rbx]
  419cee:	lea    r8,[rsp+0x30]
  419cf3:	lea    rdx,[rip+0x39fde]        # 0x453cd8
  419cfa:	mov    rcx,rbx
  419cfd:	call   QWORD PTR [rax]
  419cff:	mov    rcx,QWORD PTR [rsp+0x30]
  419d04:	cmp    rcx,r15
  419d07:	je     0x419ec2
  419d0d:	mov    rax,QWORD PTR [rcx]
  419d10:	lea    rdx,[rdi+0x88]
  419d17:	mov    ebp,0x10
  419d1c:	mov    r8d,ebp
  419d1f:	call   QWORD PTR [rax+0x18]
  419d22:	mov    esi,eax
  419d24:	cmp    eax,r15d
  419d27:	je     0x419d64
  419d29:	mov    rcx,QWORD PTR [rsp+0x30]
  419d2e:	cmp    rcx,r15
  419d31:	je     0x419d3a
  419d33:	mov    rdx,QWORD PTR [rcx]
  419d36:	call   QWORD PTR [rdx+0x10]
  419d39:	nop
  419d3a:	mov    rcx,QWORD PTR [rsp+0x38]
  419d3f:	cmp    rcx,r15
  419d42:	je     0x419d4b
  419d44:	mov    rax,QWORD PTR [rcx]
  419d47:	call   QWORD PTR [rax+0x10]
  419d4a:	nop
  419d4b:	mov    rcx,QWORD PTR [rsp+0xc0]
  419d53:	cmp    rcx,r15
  419d56:	je     0x419d5f
  419d58:	mov    rax,QWORD PTR [rcx]
  419d5b:	call   QWORD PTR [rax+0x10]
  419d5e:	nop
  419d5f:	jmp    0x419e9c
  419d64:	mov    r8,rbp
  419d67:	xor    edx,edx
  419d69:	lea    rcx,[rsp+0x60]
  419d6e:	call   0x44b780
  419d73:	mov    rcx,QWORD PTR [rdi+0x20]
  419d77:	cmp    rcx,r15
  419d7a:	je     0x419d9e
  419d7c:	mov    rax,QWORD PTR [rcx]
  419d7f:	call   QWORD PTR [rax+0x18]
  419d82:	mov    rcx,QWORD PTR [rdi+0x20]
  419d86:	mov    rax,QWORD PTR [rcx]
  419d89:	mov    r8d,ebp
  419d8c:	lea    rdx,[rsp+0x60]
  419d91:	call   QWORD PTR [rax+0x20]
  419d94:	mov    rcx,QWORD PTR [rsp+0x30]
  419d99:	jmp    0x419ec2
  419d9e:	mov    ecx,0x28
  419da3:	call   0x402130
  419da8:	mov    rsi,rax
  419dab:	cmp    rax,r15
  419dae:	je     0x419dc0
  419db0:	mov    DWORD PTR [rax+0x8],r15d
  419db4:	lea    rax,[rip+0x357d5]        # 0x44f590
  419dbb:	mov    QWORD PTR [rsi],rax
  419dbe:	jmp    0x419dc3
  419dc0:	mov    rsi,r15
  419dc3:	mov    QWORD PTR [rsp+0x50],rsi
  419dc8:	cmp    rsi,r15
  419dcb:	je     0x419dd7
  419dcd:	mov    rax,QWORD PTR [rsi]
  419dd0:	mov    rcx,rsi
  419dd3:	call   QWORD PTR [rax+0x8]
  419dd6:	nop
  419dd7:	lea    rax,[rsp+0x60]
  419ddc:	mov    QWORD PTR [rsi+0x10],rax
  419de0:	mov    QWORD PTR [rsi+0x20],rbp
  419de4:	mov    QWORD PTR [rsi+0x18],r15
  419de8:	mov    ecx,0x18
  419ded:	call   0x402130
  419df2:	mov    rbp,rax
  419df5:	cmp    rax,r15
  419df8:	je     0x419e0f
  419dfa:	mov    DWORD PTR [rax+0x8],r15d
  419dfe:	lea    rax,[rip+0x35803]        # 0x44f608
  419e05:	mov    QWORD PTR [rbp+0x0],rax
  419e09:	mov    BYTE PTR [rbp+0xc],0x1
  419e0d:	jmp    0x419e12
  419e0f:	mov    rbp,r15
  419e12:	mov    QWORD PTR [rsp+0x58],rbp
  419e17:	cmp    rbp,r15
  419e1a:	je     0x419e27
  419e1c:	mov    rax,QWORD PTR [rbp+0x0]
  419e20:	mov    rcx,rbp
  419e23:	call   QWORD PTR [rax+0x8]
  419e26:	nop
  419e27:	mov    DWORD PTR [rbp+0x10],r12d
  419e2b:	mov    rcx,QWORD PTR [rdi+0x18]
  419e2f:	mov    rax,QWORD PTR [rcx]
  419e32:	mov    QWORD PTR [rsp+0x28],r15
  419e37:	mov    QWORD PTR [rsp+0x20],r15
  419e3c:	xor    r9d,r9d
  419e3f:	mov    r8,rbp
  419e42:	mov    rdx,rsi
  419e45:	call   QWORD PTR [rax+0x18]
  419e48:	mov    edi,eax
  419e4a:	cmp    eax,r15d
  419e4d:	je     0x419ea9
  419e4f:	mov    rdx,QWORD PTR [rbp+0x0]
  419e53:	mov    rcx,rbp
  419e56:	call   QWORD PTR [rdx+0x10]
  419e59:	nop
  419e5a:	mov    rdx,QWORD PTR [rsi]
  419e5d:	mov    rcx,rsi
  419e60:	call   QWORD PTR [rdx+0x10]
  419e63:	nop
  419e64:	mov    rcx,QWORD PTR [rsp+0x30]
  419e69:	cmp    rcx,r15
  419e6c:	je     0x419e75
  419e6e:	mov    rax,QWORD PTR [rcx]
  419e71:	call   QWORD PTR [rax+0x10]
  419e74:	nop
  419e75:	mov    rcx,QWORD PTR [rsp+0x38]
  419e7a:	cmp    rcx,r15
  419e7d:	je     0x419e86
  419e7f:	mov    rax,QWORD PTR [rcx]
  419e82:	call   QWORD PTR [rax+0x10]
  419e85:	nop
  419e86:	mov    rcx,QWORD PTR [rsp+0xc0]
  419e8e:	cmp    rcx,r15
  419e91:	je     0x419e9a
  419e93:	mov    rax,QWORD PTR [rcx]
  419e96:	call   QWORD PTR [rax+0x10]
  419e99:	nop
  419e9a:	mov    esi,edi
  419e9c:	mov    rax,QWORD PTR [rbx]
  419e9f:	mov    rcx,rbx
  419ea2:	call   QWORD PTR [rax+0x10]
  419ea5:	mov    eax,esi
  419ea7:	jmp    0x419efe
  419ea9:	mov    rax,QWORD PTR [rbp+0x0]
  419ead:	mov    rcx,rbp
  419eb0:	call   QWORD PTR [rax+0x10]
  419eb3:	nop
  419eb4:	mov    rax,QWORD PTR [rsi]
  419eb7:	mov    rcx,rsi
  419eba:	call   QWORD PTR [rax+0x10]
  419ebd:	mov    rcx,QWORD PTR [rsp+0x30]
  419ec2:	cmp    rcx,r15
  419ec5:	je     0x419ece
  419ec7:	mov    rax,QWORD PTR [rcx]
  419eca:	call   QWORD PTR [rax+0x10]
  419ecd:	nop
  419ece:	mov    rcx,QWORD PTR [rsp+0x38]
  419ed3:	cmp    rcx,r15
  419ed6:	je     0x419edf
  419ed8:	mov    rax,QWORD PTR [rcx]
  419edb:	call   QWORD PTR [rax+0x10]
  419ede:	nop
  419edf:	mov    rcx,QWORD PTR [rsp+0xc0]
  419ee7:	cmp    rcx,r15
  419eea:	je     0x419ef3
  419eec:	mov    rax,QWORD PTR [rcx]
  419eef:	call   QWORD PTR [rax+0x10]
  419ef2:	nop
  419ef3:	mov    rax,QWORD PTR [rbx]
  419ef6:	mov    rcx,rbx
  419ef9:	call   QWORD PTR [rax+0x10]
  419efc:	xor    eax,eax
  419efe:	add    rsp,0x78
  419f02:	pop    r15
  419f04:	pop    r14
  419f06:	pop    r13
  419f08:	pop    r12
  419f0a:	pop    rdi
  419f0b:	pop    rsi
  419f0c:	pop    rbp
  419f0d:	pop    rbx
  419f0e:	ret    
  419f0f:	int3   
  419f10:	rex.W push rbp
  419f12:	sub    rsp,0x20
  419f16:	mov    rbp,rdx
  419f19:	lea    rcx,[rbp+0x40]
  419f1d:	call   0x4176b4
  419f22:	add    rsp,0x20
  419f26:	pop    rbp
  419f27:	ret    
  419f28:	int3   
  419f29:	int3   
  419f2a:	int3   
  419f2b:	int3   
  419f2c:	int3   
  419f2d:	int3   
  419f2e:	int3   
  419f2f:	int3   
  419f30:	rex.W push rbp
  419f32:	sub    rsp,0x20
  419f36:	mov    rbp,rdx
  419f39:	lea    rcx,[rbp+0xc0]
  419f40:	call   0x4176b4
  419f45:	add    rsp,0x20
  419f49:	pop    rbp
  419f4a:	ret    
  419f4b:	int3   
  419f4c:	int3   
  419f4d:	int3   
  419f4e:	int3   
  419f4f:	int3   
  419f50:	rex.W push rbp
  419f52:	sub    rsp,0x20
  419f56:	mov    rbp,rdx
  419f59:	lea    rcx,[rbp+0x38]
  419f5d:	call   0x4176b4
  419f62:	add    rsp,0x20
  419f66:	pop    rbp
  419f67:	ret    
  419f68:	int3   
  419f69:	int3   
  419f6a:	int3   
  419f6b:	int3   
  419f6c:	int3   
  419f6d:	int3   
  419f6e:	int3   
  419f6f:	int3   
  419f70:	rex.W push rbp
  419f72:	sub    rsp,0x20
  419f76:	mov    rbp,rdx
  419f79:	lea    rcx,[rbp+0x30]
  419f7d:	call   0x4176b4
  419f82:	add    rsp,0x20
  419f86:	pop    rbp
  419f87:	ret    
  419f88:	int3   
  419f89:	int3   
  419f8a:	int3   
  419f8b:	int3   
  419f8c:	int3   
  419f8d:	int3   
  419f8e:	int3   
  419f8f:	int3   
  419f90:	rex.W push rbp
  419f92:	sub    rsp,0x20
  419f96:	mov    rbp,rdx
  419f99:	lea    rcx,[rbp+0x50]
  419f9d:	call   0x4176b4
  419fa2:	add    rsp,0x20
  419fa6:	pop    rbp
  419fa7:	ret    
  419fa8:	int3   
  419fa9:	int3   
  419faa:	int3   
  419fab:	int3   
  419fac:	int3   
  419fad:	int3   
  419fae:	int3   
  419faf:	int3   
  419fb0:	rex.W push rbp
  419fb2:	sub    rsp,0x20
  419fb6:	mov    rbp,rdx
  419fb9:	lea    rcx,[rbp+0x58]
  419fbd:	call   0x4176b4
  419fc2:	add    rsp,0x20
  419fc6:	pop    rbp
  419fc7:	ret    
  419fc8:	rex.W push rbx
  419fca:	push   rbp
  419fcb:	push   rsi
  419fcc:	push   rdi
  419fcd:	push   r12
  419fcf:	push   r13
  419fd1:	push   r14
  419fd3:	push   r15
  419fd5:	sub    rsp,0x68
  419fd9:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
  419fe2:	mov    edi,edx
  419fe4:	mov    rbp,rcx
  419fe7:	mov    ecx,0x28
  419fec:	call   0x402130
  419ff1:	mov    rsi,rax
  419ff4:	xor    r15d,r15d
  419ff7:	cmp    rax,r15
  419ffa:	je     0x41a00c
  419ffc:	mov    DWORD PTR [rax+0x8],r15d
  41a000:	lea    rax,[rip+0x35589]        # 0x44f590
  41a007:	mov    QWORD PTR [rsi],rax
  41a00a:	jmp    0x41a00f
  41a00c:	mov    rsi,r15
  41a00f:	mov    QWORD PTR [rsp+0x50],rsi
  41a014:	cmp    rsi,r15
  41a017:	je     0x41a023
  41a019:	mov    rax,QWORD PTR [rsi]
  41a01c:	mov    rcx,rsi
  41a01f:	call   QWORD PTR [rax+0x8]
  41a022:	nop
  41a023:	mov    r14,rdi
  41a026:	mov    QWORD PTR [rsp+0x38],r15
  41a02b:	mov    rbx,QWORD PTR [rbp+0xe0]
  41a032:	cmp    rbx,r15
  41a035:	je     0x41a069
  41a037:	cmp    edi,r15d
  41a03a:	je     0x41a054
  41a03c:	cmp    rsi,r15
  41a03f:	je     0x41a04a
  41a041:	mov    rax,QWORD PTR [rsi]
  41a044:	mov    rcx,rsi
  41a047:	call   QWORD PTR [rax+0x10]
  41a04a:	mov    eax,0x80004005
  41a04f:	jmp    0x41a932
  41a054:	cmp    rbx,r15
  41a057:	je     0x41a062
  41a059:	mov    rax,QWORD PTR [rbx]
  41a05c:	mov    rcx,rbx
  41a05f:	call   QWORD PTR [rax+0x8]
  41a062:	mov    QWORD PTR [rsp+0x38],rbx
  41a067:	jmp    0x41a084
  41a069:	mov    rbx,QWORD PTR [rbp+rdi*8+0xd0]
  41a071:	cmp    rbx,r15
  41a074:	je     0x41a07f
  41a076:	mov    rax,QWORD PTR [rbx]
  41a079:	mov    rcx,rbx
  41a07c:	call   QWORD PTR [rax+0x8]
  41a07f:	mov    QWORD PTR [rsp+0x38],rbx
  41a084:	mov    QWORD PTR [rsp+0xc0],r15
  41a08c:	mov    rax,QWORD PTR [rbx]
  41a08f:	lea    r8,[rsp+0xc0]
  41a097:	lea    rdx,[rip+0x39cca]        # 0x453d68
  41a09e:	mov    rcx,rbx
  41a0a1:	call   QWORD PTR [rax]
  41a0a3:	cmp    QWORD PTR [rsp+0xc0],r15
  41a0ab:	jne    0x41a0dc
  41a0ad:	mov    rax,QWORD PTR [rbp+0x158]
  41a0b4:	cmp    QWORD PTR [rax+0x20],r15
  41a0b8:	je     0x41a0dc
  41a0ba:	mov    rax,QWORD PTR [rbx]
  41a0bd:	mov    rcx,rbx
  41a0c0:	call   QWORD PTR [rax+0x10]
  41a0c3:	nop
  41a0c4:	cmp    rsi,r15
  41a0c7:	je     0x41a0d2
  41a0c9:	mov    rax,QWORD PTR [rsi]
  41a0cc:	mov    rcx,rsi
  41a0cf:	call   QWORD PTR [rax+0x10]
  41a0d2:	mov    eax,0x80004005
  41a0d7:	jmp    0x41a932
  41a0dc:	mov    ecx,0x18
  41a0e1:	call   0x402130
  41a0e6:	mov    rdi,rax
  41a0e9:	cmp    rax,r15
  41a0ec:	je     0x41a102
  41a0ee:	mov    DWORD PTR [rax+0x8],r15d
  41a0f2:	lea    rax,[rip+0x3550f]        # 0x44f608
  41a0f9:	mov    QWORD PTR [rdi],rax
  41a0fc:	mov    BYTE PTR [rdi+0xc],0x1
  41a100:	jmp    0x41a105
  41a102:	mov    rdi,r15
  41a105:	mov    QWORD PTR [rsp+0x58],rdi
  41a10a:	cmp    rdi,r15
  41a10d:	je     0x41a119
  41a10f:	mov    rax,QWORD PTR [rdi]
  41a112:	mov    rcx,rdi
  41a115:	call   QWORD PTR [rax+0x8]
  41a118:	nop
  41a119:	mov    r13,QWORD PTR [rbp+r14*8+0x28]
  41a11e:	mov    QWORD PTR [r13+0x30],r15
  41a122:	mov    QWORD PTR [r13+0x38],r15
  41a126:	mov    QWORD PTR [rsp+0x30],r15
  41a12b:	mov    rax,QWORD PTR [rbx]
  41a12e:	lea    r8,[rsp+0x30]
  41a133:	lea    rdx,[rip+0x39bfe]        # 0x453d38
  41a13a:	mov    rcx,rbx
  41a13d:	call   QWORD PTR [rax]
  41a13f:	mov    rcx,QWORD PTR [rsp+0x30]
  41a144:	cmp    rcx,r15
  41a147:	je     0x41a1b3
  41a149:	mov    rax,QWORD PTR [rcx]
  41a14c:	mov    edx,DWORD PTR [rbp+0x10]
  41a14f:	call   QWORD PTR [rax+0x18]
  41a152:	mov    r12d,eax
  41a155:	cmp    eax,r15d
  41a158:	je     0x41a1ae
  41a15a:	mov    rcx,QWORD PTR [rsp+0x30]
  41a15f:	cmp    rcx,r15
  41a162:	je     0x41a16b
  41a164:	mov    rdx,QWORD PTR [rcx]
  41a167:	call   QWORD PTR [rdx+0x10]
  41a16a:	nop
  41a16b:	cmp    rdi,r15
  41a16e:	je     0x41a17a
  41a170:	mov    rax,QWORD PTR [rdi]
  41a173:	mov    rcx,rdi
  41a176:	call   QWORD PTR [rax+0x10]
  41a179:	nop
  41a17a:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a182:	cmp    rcx,r15
  41a185:	je     0x41a18e
  41a187:	mov    rax,QWORD PTR [rcx]
  41a18a:	call   QWORD PTR [rax+0x10]
  41a18d:	nop
  41a18e:	mov    rax,QWORD PTR [rbx]
  41a191:	mov    rcx,rbx
  41a194:	call   QWORD PTR [rax+0x10]
  41a197:	nop
  41a198:	cmp    rsi,r15
  41a19b:	je     0x41a1a6
  41a19d:	mov    rax,QWORD PTR [rsi]
  41a1a0:	mov    rcx,rsi
  41a1a3:	call   QWORD PTR [rax+0x10]
  41a1a6:	mov    eax,r12d
  41a1a9:	jmp    0x41a932
  41a1ae:	mov    rcx,QWORD PTR [rsp+0x30]
  41a1b3:	cmp    rcx,r15
  41a1b6:	je     0x41a1be
  41a1b8:	mov    rax,QWORD PTR [rcx]
  41a1bb:	call   QWORD PTR [rax+0x10]
  41a1be:	mov    QWORD PTR [rsp+0xc8],r15
  41a1c6:	mov    rax,QWORD PTR [rbx]
  41a1c9:	lea    r8,[rsp+0xc8]
  41a1d1:	lea    rdx,[rip+0x39ba0]        # 0x453d78
  41a1d8:	mov    rcx,rbx
  41a1db:	call   QWORD PTR [rax]
  41a1dd:	mov    rdx,QWORD PTR [rsp+0xc8]
  41a1e5:	cmp    rdx,r15
  41a1e8:	je     0x41a266
  41a1ea:	mov    rax,QWORD PTR [rbp+0x198]
  41a1f1:	mov    QWORD PTR [rsp+0x30],rax
  41a1f6:	lea    rcx,[rbp+0x168]
  41a1fd:	lea    r8,[rsp+0x30]
  41a202:	call   0x40d99c
  41a207:	mov    r12d,eax
  41a20a:	cmp    eax,r15d
  41a20d:	je     0x41a266
  41a20f:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a217:	cmp    rcx,r15
  41a21a:	je     0x41a223
  41a21c:	mov    rdx,QWORD PTR [rcx]
  41a21f:	call   QWORD PTR [rdx+0x10]
  41a222:	nop
  41a223:	cmp    rdi,r15
  41a226:	je     0x41a232
  41a228:	mov    rax,QWORD PTR [rdi]
  41a22b:	mov    rcx,rdi
  41a22e:	call   QWORD PTR [rax+0x10]
  41a231:	nop
  41a232:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a23a:	cmp    rcx,r15
  41a23d:	je     0x41a246
  41a23f:	mov    rax,QWORD PTR [rcx]
  41a242:	call   QWORD PTR [rax+0x10]
  41a245:	nop
  41a246:	mov    rax,QWORD PTR [rbx]
  41a249:	mov    rcx,rbx
  41a24c:	call   QWORD PTR [rax+0x10]
  41a24f:	nop
  41a250:	cmp    rsi,r15
  41a253:	je     0x41a25e
  41a255:	mov    rax,QWORD PTR [rsi]
  41a258:	mov    rcx,rsi
  41a25b:	call   QWORD PTR [rax+0x10]
  41a25e:	mov    eax,r12d
  41a261:	jmp    0x41a932
  41a266:	mov    QWORD PTR [rsp+0xb0],r15
  41a26e:	mov    rax,QWORD PTR [rbx]
  41a271:	lea    r8,[rsp+0xb0]
  41a279:	lea    rdx,[rip+0x39a68]        # 0x453ce8
  41a280:	mov    rcx,rbx
  41a283:	call   QWORD PTR [rax]
  41a285:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a28d:	cmp    rcx,r15
  41a290:	je     0x41a31e
  41a296:	mov    rdx,QWORD PTR [rbp+0x158]
  41a29d:	mov    rax,QWORD PTR [rcx]
  41a2a0:	mov    r8d,DWORD PTR [rdx+0x20]
  41a2a4:	mov    rdx,QWORD PTR [rdx+0x10]
  41a2a8:	call   QWORD PTR [rax+0x18]
  41a2ab:	mov    r12d,eax
  41a2ae:	cmp    eax,r15d
  41a2b1:	je     0x41a31e
  41a2b3:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a2bb:	cmp    rcx,r15
  41a2be:	je     0x41a2c7
  41a2c0:	mov    rdx,QWORD PTR [rcx]
  41a2c3:	call   QWORD PTR [rdx+0x10]
  41a2c6:	nop
  41a2c7:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a2cf:	cmp    rcx,r15
  41a2d2:	je     0x41a2db
  41a2d4:	mov    rax,QWORD PTR [rcx]
  41a2d7:	call   QWORD PTR [rax+0x10]
  41a2da:	nop
  41a2db:	cmp    rdi,r15
  41a2de:	je     0x41a2ea
  41a2e0:	mov    rax,QWORD PTR [rdi]
  41a2e3:	mov    rcx,rdi
  41a2e6:	call   QWORD PTR [rax+0x10]
  41a2e9:	nop
  41a2ea:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a2f2:	cmp    rcx,r15
  41a2f5:	je     0x41a2fe
  41a2f7:	mov    rax,QWORD PTR [rcx]
  41a2fa:	call   QWORD PTR [rax+0x10]
  41a2fd:	nop
  41a2fe:	mov    rax,QWORD PTR [rbx]
  41a301:	mov    rcx,rbx
  41a304:	call   QWORD PTR [rax+0x10]
  41a307:	nop
  41a308:	cmp    rsi,r15
  41a30b:	je     0x41a316
  41a30d:	mov    rax,QWORD PTR [rsi]
  41a310:	mov    rcx,rsi
  41a313:	call   QWORD PTR [rax+0x10]
  41a316:	mov    eax,r12d
  41a319:	jmp    0x41a932
  41a31e:	mov    QWORD PTR [rsp+0x30],r15
  41a323:	mov    rax,QWORD PTR [rbx]
  41a326:	lea    r8,[rsp+0x30]
  41a32b:	lea    rdx,[rip+0x399a6]        # 0x453cd8
  41a332:	mov    rcx,rbx
  41a335:	call   QWORD PTR [rax]
  41a337:	mov    rcx,QWORD PTR [rsp+0x30]
  41a33c:	cmp    rcx,r15
  41a33f:	je     0x41a3e1
  41a345:	mov    rax,QWORD PTR [rcx]
  41a348:	lea    rdx,[rbp+0x88]
  41a34f:	mov    r8d,0x10
  41a355:	call   QWORD PTR [rax+0x18]
  41a358:	mov    r12d,eax
  41a35b:	cmp    eax,r15d
  41a35e:	je     0x41a3dc
  41a360:	mov    rcx,QWORD PTR [rsp+0x30]
  41a365:	cmp    rcx,r15
  41a368:	je     0x41a371
  41a36a:	mov    rdx,QWORD PTR [rcx]
  41a36d:	call   QWORD PTR [rdx+0x10]
  41a370:	nop
  41a371:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a379:	cmp    rcx,r15
  41a37c:	je     0x41a385
  41a37e:	mov    rax,QWORD PTR [rcx]
  41a381:	call   QWORD PTR [rax+0x10]
  41a384:	nop
  41a385:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a38d:	cmp    rcx,r15
  41a390:	je     0x41a399
  41a392:	mov    rax,QWORD PTR [rcx]
  41a395:	call   QWORD PTR [rax+0x10]
  41a398:	nop
  41a399:	cmp    rdi,r15
  41a39c:	je     0x41a3a8
  41a39e:	mov    rax,QWORD PTR [rdi]
  41a3a1:	mov    rcx,rdi
  41a3a4:	call   QWORD PTR [rax+0x10]
  41a3a7:	nop
  41a3a8:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a3b0:	cmp    rcx,r15
  41a3b3:	je     0x41a3bc
  41a3b5:	mov    rax,QWORD PTR [rcx]
  41a3b8:	call   QWORD PTR [rax+0x10]
  41a3bb:	nop
  41a3bc:	mov    rax,QWORD PTR [rbx]
  41a3bf:	mov    rcx,rbx
  41a3c2:	call   QWORD PTR [rax+0x10]
  41a3c5:	nop
  41a3c6:	cmp    rsi,r15
  41a3c9:	je     0x41a3d4
  41a3cb:	mov    rax,QWORD PTR [rsi]
  41a3ce:	mov    rcx,rsi
  41a3d1:	call   QWORD PTR [rax+0x10]
  41a3d4:	mov    eax,r12d
  41a3d7:	jmp    0x41a932
  41a3dc:	mov    rcx,QWORD PTR [rsp+0x30]
  41a3e1:	cmp    rcx,r15
  41a3e4:	je     0x41a3ec
  41a3e6:	mov    rax,QWORD PTR [rcx]
  41a3e9:	call   QWORD PTR [rax+0x10]
  41a3ec:	mov    rdx,r15
  41a3ef:	mov    QWORD PTR [rsp+0x30],r15
  41a3f4:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a3fc:	cmp    rcx,r15
  41a3ff:	je     0x41a520
  41a405:	mov    rax,QWORD PTR [rcx]
  41a408:	lea    rdx,[rbp+0x58]
  41a40c:	mov    r8d,0x20
  41a412:	call   QWORD PTR [rax+0x18]
  41a415:	mov    r12d,eax
  41a418:	cmp    eax,r15d
  41a41b:	je     0x41a488
  41a41d:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a425:	cmp    rcx,r15
  41a428:	je     0x41a431
  41a42a:	mov    rdx,QWORD PTR [rcx]
  41a42d:	call   QWORD PTR [rdx+0x10]
  41a430:	nop
  41a431:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a439:	cmp    rcx,r15
  41a43c:	je     0x41a445
  41a43e:	mov    rax,QWORD PTR [rcx]
  41a441:	call   QWORD PTR [rax+0x10]
  41a444:	nop
  41a445:	cmp    rdi,r15
  41a448:	je     0x41a454
  41a44a:	mov    rax,QWORD PTR [rdi]
  41a44d:	mov    rcx,rdi
  41a450:	call   QWORD PTR [rax+0x10]
  41a453:	nop
  41a454:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a45c:	cmp    rcx,r15
  41a45f:	je     0x41a468
  41a461:	mov    rax,QWORD PTR [rcx]
  41a464:	call   QWORD PTR [rax+0x10]
  41a467:	nop
  41a468:	mov    rax,QWORD PTR [rbx]
  41a46b:	mov    rcx,rbx
  41a46e:	call   QWORD PTR [rax+0x10]
  41a471:	nop
  41a472:	cmp    rsi,r15
  41a475:	je     0x41a480
  41a477:	mov    rax,QWORD PTR [rsi]
  41a47a:	mov    rcx,rsi
  41a47d:	call   QWORD PTR [rax+0x10]
  41a480:	mov    eax,r12d
  41a483:	jmp    0x41a932
  41a488:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a490:	mov    rax,QWORD PTR [rcx]
  41a493:	lea    rdx,[rbp+0x78]
  41a497:	mov    r8d,0x10
  41a49d:	call   QWORD PTR [rax+0x20]
  41a4a0:	mov    r12d,eax
  41a4a3:	cmp    eax,r15d
  41a4a6:	je     0x41a513
  41a4a8:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a4b0:	cmp    rcx,r15
  41a4b3:	je     0x41a4bc
  41a4b5:	mov    rdx,QWORD PTR [rcx]
  41a4b8:	call   QWORD PTR [rdx+0x10]
  41a4bb:	nop
  41a4bc:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a4c4:	cmp    rcx,r15
  41a4c7:	je     0x41a4d0
  41a4c9:	mov    rax,QWORD PTR [rcx]
  41a4cc:	call   QWORD PTR [rax+0x10]
  41a4cf:	nop
  41a4d0:	cmp    rdi,r15
  41a4d3:	je     0x41a4df
  41a4d5:	mov    rax,QWORD PTR [rdi]
  41a4d8:	mov    rcx,rdi
  41a4db:	call   QWORD PTR [rax+0x10]
  41a4de:	nop
  41a4df:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a4e7:	cmp    rcx,r15
  41a4ea:	je     0x41a4f3
  41a4ec:	mov    rax,QWORD PTR [rcx]
  41a4ef:	call   QWORD PTR [rax+0x10]
  41a4f2:	nop
  41a4f3:	mov    rax,QWORD PTR [rbx]
  41a4f6:	mov    rcx,rbx
  41a4f9:	call   QWORD PTR [rax+0x10]
  41a4fc:	nop
  41a4fd:	cmp    rsi,r15
  41a500:	je     0x41a50b
  41a502:	mov    rax,QWORD PTR [rsi]
  41a505:	mov    rcx,rsi
  41a508:	call   QWORD PTR [rax+0x10]
  41a50b:	mov    eax,r12d
  41a50e:	jmp    0x41a932
  41a513:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a51b:	mov    rdx,QWORD PTR [rsp+0x30]
  41a520:	xor    r12d,r12d
  41a523:	cmp    QWORD PTR [rbp+0x48],r12
  41a527:	jbe    0x41a88b
  41a52d:	cmp    QWORD PTR [rbp+0x108],r12
  41a534:	je     0x41a566
  41a536:	mov    rax,QWORD PTR [r13+0x30]
  41a53a:	sub    rax,rdx
  41a53d:	cmp    rax,0x100000
  41a543:	jbe    0x41a566
  41a545:	mov    rcx,QWORD PTR [rbp+0x108]
  41a54c:	mov    rax,QWORD PTR [rcx]
  41a54f:	call   QWORD PTR [rax+0x10]
  41a552:	mov    r12d,eax
  41a555:	test   eax,eax
  41a557:	jne    0x41a6b7
  41a55d:	mov    rax,QWORD PTR [r13+0x30]
  41a561:	mov    QWORD PTR [rsp+0x30],rax
  41a566:	mov    rax,QWORD PTR [rbp+0xf0]
  41a56d:	mov    rcx,QWORD PTR [rax+0x10]
  41a571:	mov    rax,QWORD PTR [rbp+0x120]
  41a578:	mov    QWORD PTR [rsi+0x10],rcx
  41a57c:	mov    QWORD PTR [rsi+0x20],rax
  41a580:	mov    QWORD PTR [rsi+0x18],r12
  41a584:	mov    DWORD PTR [rdi+0x10],0xffffffff
  41a58b:	mov    rax,QWORD PTR [rbp+0x118]
  41a592:	mov    QWORD PTR [rsp+0x40],rax
  41a597:	test   r15b,0x7f
  41a59b:	je     0x41a5ab
  41a59d:	cmp    BYTE PTR [rbp+0x99],r12b
  41a5a4:	jne    0x41a5ab
  41a5a6:	mov    eax,r12d
  41a5a9:	jmp    0x41a5b0
  41a5ab:	mov    eax,0x1
  41a5b0:	mov    BYTE PTR [rdi+0xc],al
  41a5b3:	cmp    QWORD PTR [rbp+0xe0],r12
  41a5ba:	je     0x41a631
  41a5bc:	mov    r8,QWORD PTR [rbp+0x120]
  41a5c3:	cmp    r8,QWORD PTR [rbp+0x148]
  41a5ca:	ja     0x41a722
  41a5d0:	mov    rdx,QWORD PTR [rbp+0xf0]
  41a5d7:	mov    rdx,QWORD PTR [rdx+0x10]
  41a5db:	mov    rcx,QWORD PTR [rbp+0x150]
  41a5e2:	call   0x44b480
  41a5e7:	mov    rcx,QWORD PTR [rbp+0xe0]
  41a5ee:	mov    rax,QWORD PTR [rcx]
  41a5f1:	call   QWORD PTR [rax+0x18]
  41a5f4:	mov    r8,QWORD PTR [rbp+0x120]
  41a5fb:	mov    rdx,QWORD PTR [rbp+0x150]
  41a602:	mov    rcx,QWORD PTR [rbp+0xe0]
  41a609:	call   0x4183e8
  41a60e:	mov    r8,QWORD PTR [rbp+0x120]
  41a615:	mov    rdx,QWORD PTR [rbp+0x150]
  41a61c:	mov    rcx,rdi
  41a61f:	call   0x40e904
  41a624:	mov    r12d,eax
  41a627:	test   eax,eax
  41a629:	jne    0x41a77d
  41a62f:	jmp    0x41a668
  41a631:	mov    rcx,QWORD PTR [rbp+r14*8+0xd0]
  41a639:	mov    rax,QWORD PTR [rbp+r14*8+0x38]
  41a63e:	mov    r10,QWORD PTR [rcx]
  41a641:	mov    QWORD PTR [rsp+0x28],rax
  41a646:	lea    rax,[rsp+0x40]
  41a64b:	mov    QWORD PTR [rsp+0x20],rax
  41a650:	xor    r9d,r9d
  41a653:	mov    r8,rdi
  41a656:	mov    rdx,rsi
  41a659:	call   QWORD PTR [r10+0x18]
  41a65d:	mov    r12d,eax
  41a660:	test   eax,eax
  41a662:	jne    0x41a7d2
  41a668:	xor    r12d,r12d
  41a66b:	cmp    BYTE PTR [rdi+0xc],r12b
  41a66f:	je     0x41a682
  41a671:	mov    eax,DWORD PTR [rdi+0x10]
  41a674:	not    eax
  41a676:	cmp    eax,DWORD PTR [rbp+0x110]
  41a67c:	jne    0x41a824
  41a682:	mov    rax,QWORD PTR [rbp+0x118]
  41a689:	add    QWORD PTR [r13+0x30],rax
  41a68d:	mov    rax,QWORD PTR [rbp+0x120]
  41a694:	add    QWORD PTR [r13+0x38],rax
  41a698:	inc    r15
  41a69b:	cmp    r15,QWORD PTR [rbp+0x48]
  41a69f:	mov    rdx,QWORD PTR [rsp+0x30]
  41a6a4:	jb     0x41a52d
  41a6aa:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a6b2:	jmp    0x41a88b
  41a6b7:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a6bf:	test   rcx,rcx
  41a6c2:	je     0x41a6cb
  41a6c4:	mov    rax,QWORD PTR [rcx]
  41a6c7:	call   QWORD PTR [rax+0x10]
  41a6ca:	nop
  41a6cb:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a6d3:	test   rcx,rcx
  41a6d6:	je     0x41a6df
  41a6d8:	mov    rax,QWORD PTR [rcx]
  41a6db:	call   QWORD PTR [rax+0x10]
  41a6de:	nop
  41a6df:	test   rdi,rdi
  41a6e2:	je     0x41a6ee
  41a6e4:	mov    rax,QWORD PTR [rdi]
  41a6e7:	mov    rcx,rdi
  41a6ea:	call   QWORD PTR [rax+0x10]
  41a6ed:	nop
  41a6ee:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a6f6:	test   rcx,rcx
  41a6f9:	je     0x41a702
  41a6fb:	mov    rax,QWORD PTR [rcx]
  41a6fe:	call   QWORD PTR [rax+0x10]
  41a701:	nop
  41a702:	mov    rax,QWORD PTR [rbx]
  41a705:	mov    rcx,rbx
  41a708:	call   QWORD PTR [rax+0x10]
  41a70b:	nop
  41a70c:	test   rsi,rsi
  41a70f:	je     0x41a71a
  41a711:	mov    rax,QWORD PTR [rsi]
  41a714:	mov    rcx,rsi
  41a717:	call   QWORD PTR [rax+0x10]
  41a71a:	mov    eax,r12d
  41a71d:	jmp    0x41a932
  41a722:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a72a:	cmp    rcx,r12
  41a72d:	je     0x41a736
  41a72f:	mov    rax,QWORD PTR [rcx]
  41a732:	call   QWORD PTR [rax+0x10]
  41a735:	nop
  41a736:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a73e:	cmp    rcx,r12
  41a741:	je     0x41a74a
  41a743:	mov    rax,QWORD PTR [rcx]
  41a746:	call   QWORD PTR [rax+0x10]
  41a749:	nop
  41a74a:	mov    rax,QWORD PTR [rdi]
  41a74d:	mov    rcx,rdi
  41a750:	call   QWORD PTR [rax+0x10]
  41a753:	nop
  41a754:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a75c:	cmp    rcx,r12
  41a75f:	je     0x41a768
  41a761:	mov    rax,QWORD PTR [rcx]
  41a764:	call   QWORD PTR [rax+0x10]
  41a767:	nop
  41a768:	mov    rax,QWORD PTR [rbx]
  41a76b:	mov    rcx,rbx
  41a76e:	call   QWORD PTR [rax+0x10]
  41a771:	nop
  41a772:	mov    r12d,0x80004005
  41a778:	jmp    0x41a87a
  41a77d:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a785:	test   rcx,rcx
  41a788:	je     0x41a791
  41a78a:	mov    rax,QWORD PTR [rcx]
  41a78d:	call   QWORD PTR [rax+0x10]
  41a790:	nop
  41a791:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a799:	test   rcx,rcx
  41a79c:	je     0x41a7a5
  41a79e:	mov    rax,QWORD PTR [rcx]
  41a7a1:	call   QWORD PTR [rax+0x10]
  41a7a4:	nop
  41a7a5:	mov    rax,QWORD PTR [rdi]
  41a7a8:	mov    rcx,rdi
  41a7ab:	call   QWORD PTR [rax+0x10]
  41a7ae:	nop
  41a7af:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a7b7:	test   rcx,rcx
  41a7ba:	je     0x41a7c3
  41a7bc:	mov    rax,QWORD PTR [rcx]
  41a7bf:	call   QWORD PTR [rax+0x10]
  41a7c2:	nop
  41a7c3:	mov    rax,QWORD PTR [rbx]
  41a7c6:	mov    rcx,rbx
  41a7c9:	call   QWORD PTR [rax+0x10]
  41a7cc:	nop
  41a7cd:	jmp    0x41a87a
  41a7d2:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a7da:	test   rcx,rcx
  41a7dd:	je     0x41a7e6
  41a7df:	mov    rax,QWORD PTR [rcx]
  41a7e2:	call   QWORD PTR [rax+0x10]
  41a7e5:	nop
  41a7e6:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a7ee:	test   rcx,rcx
  41a7f1:	je     0x41a7fa
  41a7f3:	mov    rax,QWORD PTR [rcx]
  41a7f6:	call   QWORD PTR [rax+0x10]
  41a7f9:	nop
  41a7fa:	mov    rax,QWORD PTR [rdi]
  41a7fd:	mov    rcx,rdi
  41a800:	call   QWORD PTR [rax+0x10]
  41a803:	nop
  41a804:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a80c:	test   rcx,rcx
  41a80f:	je     0x41a818
  41a811:	mov    rax,QWORD PTR [rcx]
  41a814:	call   QWORD PTR [rax+0x10]
  41a817:	nop
  41a818:	mov    rax,QWORD PTR [rbx]
  41a81b:	mov    rcx,rbx
  41a81e:	call   QWORD PTR [rax+0x10]
  41a821:	nop
  41a822:	jmp    0x41a87a
  41a824:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a82c:	cmp    rcx,r12
  41a82f:	je     0x41a838
  41a831:	mov    rax,QWORD PTR [rcx]
  41a834:	call   QWORD PTR [rax+0x10]
  41a837:	nop
  41a838:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a840:	cmp    rcx,r12
  41a843:	je     0x41a84c
  41a845:	mov    rax,QWORD PTR [rcx]
  41a848:	call   QWORD PTR [rax+0x10]
  41a84b:	nop
  41a84c:	mov    rax,QWORD PTR [rdi]
  41a84f:	mov    rcx,rdi
  41a852:	call   QWORD PTR [rax+0x10]
  41a855:	nop
  41a856:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a85e:	cmp    rcx,r12
  41a861:	je     0x41a86a
  41a863:	mov    rax,QWORD PTR [rcx]
  41a866:	call   QWORD PTR [rax+0x10]
  41a869:	nop
  41a86a:	mov    rax,QWORD PTR [rbx]
  41a86d:	mov    rcx,rbx
  41a870:	call   QWORD PTR [rax+0x10]
  41a873:	nop
  41a874:	mov    r12d,0x1
  41a87a:	mov    rax,QWORD PTR [rsi]
  41a87d:	mov    rcx,rsi
  41a880:	call   QWORD PTR [rax+0x10]
  41a883:	mov    eax,r12d
  41a886:	jmp    0x41a932
  41a88b:	mov    rdx,QWORD PTR [rbp+r14*8+0xd0]
  41a893:	cmp    rdx,r12
  41a896:	je     0x41a8b1
  41a898:	mov    rax,QWORD PTR [rdx]
  41a89b:	mov    rcx,rdx
  41a89e:	call   QWORD PTR [rax+0x10]
  41a8a1:	mov    QWORD PTR [rbp+r14*8+0xd0],r12
  41a8a9:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a8b1:	mov    rdx,QWORD PTR [rbp+0xe0]
  41a8b8:	cmp    rdx,r12
  41a8bb:	je     0x41a8d5
  41a8bd:	mov    rax,QWORD PTR [rdx]
  41a8c0:	mov    rcx,rdx
  41a8c3:	call   QWORD PTR [rax+0x10]
  41a8c6:	mov    QWORD PTR [rbp+0xe0],r12
  41a8cd:	mov    rcx,QWORD PTR [rsp+0xb0]
  41a8d5:	cmp    rcx,r12
  41a8d8:	je     0x41a8e1
  41a8da:	mov    rax,QWORD PTR [rcx]
  41a8dd:	call   QWORD PTR [rax+0x10]
  41a8e0:	nop
  41a8e1:	mov    rcx,QWORD PTR [rsp+0xc8]
  41a8e9:	cmp    rcx,r12
  41a8ec:	je     0x41a8f5
  41a8ee:	mov    rax,QWORD PTR [rcx]
  41a8f1:	call   QWORD PTR [rax+0x10]
  41a8f4:	nop
  41a8f5:	cmp    rdi,r12
  41a8f8:	je     0x41a904
  41a8fa:	mov    rax,QWORD PTR [rdi]
  41a8fd:	mov    rcx,rdi
  41a900:	call   QWORD PTR [rax+0x10]
  41a903:	nop
  41a904:	mov    rcx,QWORD PTR [rsp+0xc0]
  41a90c:	cmp    rcx,r12
  41a90f:	je     0x41a918
  41a911:	mov    rax,QWORD PTR [rcx]
  41a914:	call   QWORD PTR [rax+0x10]
  41a917:	nop
  41a918:	mov    rax,QWORD PTR [rbx]
  41a91b:	mov    rcx,rbx
  41a91e:	call   QWORD PTR [rax+0x10]
  41a921:	nop
  41a922:	cmp    rsi,r12
  41a925:	je     0x41a930
  41a927:	mov    rax,QWORD PTR [rsi]
  41a92a:	mov    rcx,rsi
  41a92d:	call   QWORD PTR [rax+0x10]
  41a930:	xor    eax,eax
  41a932:	add    rsp,0x68
  41a936:	pop    r15
  41a938:	pop    r14
  41a93a:	pop    r13
  41a93c:	pop    r12
  41a93e:	pop    rdi
  41a93f:	pop    rsi
  41a940:	pop    rbp
  41a941:	pop    rbx
  41a942:	ret    
  41a943:	int3   
  41a944:	int3   
  41a945:	int3   
  41a946:	int3   
  41a947:	int3   
  41a948:	rex.W push rbp
  41a94a:	sub    rsp,0x20
  41a94e:	mov    rbp,rdx
  41a951:	lea    rcx,[rbp+0x50]
  41a955:	call   0x4176b4
  41a95a:	add    rsp,0x20
  41a95e:	pop    rbp
  41a95f:	ret    
  41a960:	int3   
  41a961:	int3   
  41a962:	int3   
  41a963:	int3   
  41a964:	int3   
  41a965:	int3   
  41a966:	int3   
  41a967:	int3   
  41a968:	rex.W push rbp
  41a96a:	sub    rsp,0x20
  41a96e:	mov    rbp,rdx
  41a971:	lea    rcx,[rbp+0x38]
  41a975:	call   0x4176b4
  41a97a:	add    rsp,0x20
  41a97e:	pop    rbp
  41a97f:	ret    
  41a980:	int3   
  41a981:	int3   
  41a982:	int3   
  41a983:	int3   
  41a984:	int3   
  41a985:	int3   
  41a986:	int3   
  41a987:	int3   
  41a988:	rex.W push rbp
  41a98a:	sub    rsp,0x20
  41a98e:	mov    rbp,rdx
  41a991:	lea    rcx,[rbp+0xc0]
  41a998:	call   0x4176b4
  41a99d:	add    rsp,0x20
  41a9a1:	pop    rbp
  41a9a2:	ret    
  41a9a3:	int3   
  41a9a4:	int3   
  41a9a5:	int3   
  41a9a6:	int3   
  41a9a7:	int3   
  41a9a8:	rex.W push rbp
  41a9aa:	sub    rsp,0x20
  41a9ae:	mov    rbp,rdx
  41a9b1:	lea    rcx,[rbp+0x58]
  41a9b5:	call   0x4176b4
  41a9ba:	add    rsp,0x20
  41a9be:	pop    rbp
  41a9bf:	ret    
  41a9c0:	int3   
  41a9c1:	int3   
  41a9c2:	int3   
  41a9c3:	int3   
  41a9c4:	int3   
  41a9c5:	int3   
  41a9c6:	int3   
  41a9c7:	int3   
  41a9c8:	rex.W push rbp
  41a9ca:	sub    rsp,0x20
  41a9ce:	mov    rbp,rdx
  41a9d1:	lea    rcx,[rbp+0x30]
  41a9d5:	call   0x4176b4
  41a9da:	add    rsp,0x20
  41a9de:	pop    rbp
  41a9df:	ret    
  41a9e0:	int3   
  41a9e1:	int3   
  41a9e2:	int3   
  41a9e3:	int3   
  41a9e4:	int3   
  41a9e5:	int3   
  41a9e6:	int3   
  41a9e7:	int3   
  41a9e8:	rex.W push rbp
  41a9ea:	sub    rsp,0x20
  41a9ee:	mov    rbp,rdx
  41a9f1:	lea    rcx,[rbp+0xc8]
  41a9f8:	call   0x4176b4
  41a9fd:	add    rsp,0x20
  41aa01:	pop    rbp
  41aa02:	ret    
  41aa03:	int3   
  41aa04:	int3   
  41aa05:	int3   
  41aa06:	int3   
  41aa07:	int3   
  41aa08:	rex.W push rbp
  41aa0a:	sub    rsp,0x20
  41aa0e:	mov    rbp,rdx
  41aa11:	lea    rcx,[rbp+0xb0]
  41aa18:	call   0x4176b4
  41aa1d:	add    rsp,0x20
  41aa21:	pop    rbp
  41aa22:	ret    
  41aa23:	int3   
  41aa24:	int3   
  41aa25:	int3   
  41aa26:	int3   
  41aa27:	int3   
  41aa28:	rex.W push rbp
  41aa2a:	sub    rsp,0x20
  41aa2e:	mov    rbp,rdx
  41aa31:	lea    rcx,[rbp+0x30]
  41aa35:	call   0x4176b4
  41aa3a:	add    rsp,0x20
  41aa3e:	pop    rbp
  41aa3f:	ret    
  41aa40:	mov    QWORD PTR [rsp+0x8],rcx
  41aa45:	push   rbx
  41aa46:	push   rbp
  41aa47:	push   rsi
  41aa48:	push   rdi
  41aa49:	push   r12
  41aa4b:	sub    rsp,0x30
  41aa4f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41aa58:	mov    r12,rdx
  41aa5b:	mov    rbx,rcx
  41aa5e:	mov    QWORD PTR [rcx],0x0
  41aa65:	mov    DWORD PTR [rcx+0x8],0x0
  41aa6c:	mov    DWORD PTR [rcx+0xc],0x0
  41aa73:	mov    edi,DWORD PTR [rdx+0x8]
  41aa76:	test   edi,edi
  41aa78:	je     0x41aa8c
  41aa7a:	mov    rcx,rdi
  41aa7d:	shl    rcx,0x3
  41aa81:	call   0x402130
  41aa86:	mov    QWORD PTR [rbx],rax
  41aa89:	mov    DWORD PTR [rbx+0xc],edi
  41aa8c:	test   edi,edi
  41aa8e:	je     0x41aae5
  41aa90:	xor    esi,esi
  41aa92:	mov    rbp,rdi
  41aa95:	mov    ecx,0x20
  41aa9a:	call   0x402130
  41aa9f:	mov    rdi,rax
  41aaa2:	mov    QWORD PTR [rsp+0x68],rax
  41aaa7:	test   rax,rax
  41aaaa:	je     0x41aacd
  41aaac:	mov    rcx,QWORD PTR [r12]
  41aab0:	mov    rdx,QWORD PTR [rsi+rcx*1]
  41aab4:	mov    ecx,DWORD PTR [rdx]
  41aab6:	mov    DWORD PTR [rax],ecx
  41aab8:	mov    cl,BYTE PTR [rdx+0x4]
  41aabb:	mov    BYTE PTR [rax+0x4],cl
  41aabe:	add    rdx,0x8
  41aac2:	lea    rcx,[rax+0x8]
  41aac6:	call   0x40b16c
  41aacb:	jmp    0x41aacf
  41aacd:	xor    edi,edi
  41aacf:	mov    ecx,DWORD PTR [rbx+0x8]
  41aad2:	mov    rax,QWORD PTR [rbx]
  41aad5:	mov    QWORD PTR [rax+rcx*8],rdi
  41aad9:	inc    DWORD PTR [rbx+0x8]
  41aadc:	add    rsi,0x8
  41aae0:	dec    rbp
  41aae3:	jne    0x41aa95
  41aae5:	mov    rax,rbx
  41aae8:	add    rsp,0x30
  41aaec:	pop    r12
  41aaee:	pop    rdi
  41aaef:	pop    rsi
  41aaf0:	pop    rbp
  41aaf1:	pop    rbx
  41aaf2:	ret    
  41aaf3:	int3   
  41aaf4:	int3   
  41aaf5:	int3   
  41aaf6:	int3   
  41aaf7:	int3   
  41aaf8:	int3   
  41aaf9:	int3   
  41aafa:	int3   
  41aafb:	int3   
  41aafc:	int3   
  41aafd:	int3   
  41aafe:	int3   
  41aaff:	int3   
  41ab00:	rex.W push rbp
  41ab02:	sub    rsp,0x20
  41ab06:	mov    rbp,rdx
  41ab09:	mov    rcx,QWORD PTR [rbp+0x60]
  41ab0d:	call   0x401000
  41ab12:	add    rsp,0x20
  41ab16:	pop    rbp
  41ab17:	ret    
  41ab18:	int3   
  41ab19:	int3   
  41ab1a:	int3   
  41ab1b:	int3   
  41ab1c:	int3   
  41ab1d:	int3   
  41ab1e:	int3   
  41ab1f:	int3   
  41ab20:	rex.W push rbp
  41ab22:	sub    rsp,0x20
  41ab26:	mov    rbp,rdx
  41ab29:	mov    rcx,QWORD PTR [rbp+0x68]
  41ab2d:	call   0x40215c
  41ab32:	add    rsp,0x20
  41ab36:	pop    rbp
  41ab37:	ret    
  41ab38:	rex.W push rbp
  41ab3a:	push   rbx
  41ab3b:	push   rdi
  41ab3c:	sub    rsp,0x20
  41ab40:	lea    rbp,[rsp+0x20]
  41ab45:	mov    rax,QWORD PTR [rcx+0x10]
  41ab49:	mov    rdi,rcx
  41ab4c:	add    rax,0xf
  41ab50:	and    rax,0xfffffffffffffff0
  41ab54:	call   0x44b9d0
  41ab59:	mov    rbx,QWORD PTR [rcx]
  41ab5c:	mov    edx,DWORD PTR [rcx+0x8]
  41ab5f:	mov    rcx,rbx
  41ab62:	sub    rsp,rax
  41ab65:	call   0x419fc8
  41ab6a:	mov    ecx,DWORD PTR [rdi+0x8]
  41ab6d:	mov    DWORD PTR [rbx+rcx*4+0xe8],eax
  41ab74:	xor    eax,eax
  41ab76:	mov    rsp,rbp
  41ab79:	pop    rdi
  41ab7a:	pop    rbx
  41ab7b:	pop    rbp
  41ab7c:	ret    
  41ab7d:	int3   
  41ab7e:	int3   
  41ab7f:	int3   
  41ab80:	rex.W push rbx
  41ab82:	push   rbp
  41ab83:	push   rsi
  41ab84:	push   rdi
  41ab85:	sub    rsp,0x28
  41ab89:	xor    ebp,ebp
  41ab8b:	mov    rdi,rcx
  41ab8e:	cmp    DWORD PTR [rcx+0x8],ebp
  41ab91:	jbe    0x41abb7
  41ab93:	xor    esi,esi
  41ab95:	mov    rax,QWORD PTR [rdi]
  41ab98:	lea    rbx,[rsi+rax*1]
  41ab9c:	mov    rcx,QWORD PTR [rbx]
  41ab9f:	call   0x44b050
  41aba4:	mov    rcx,rbx
  41aba7:	call   0x44b000
  41abac:	inc    ebp
  41abae:	add    rsi,0x28
  41abb2:	cmp    ebp,DWORD PTR [rdi+0x8]
  41abb5:	jb     0x41ab95
  41abb7:	mov    rcx,QWORD PTR [rdi]
  41abba:	mov    DWORD PTR [rdi+0x8],0x0
  41abc1:	test   rcx,rcx
  41abc4:	je     0x41abe6
  41abc6:	lea    rbx,[rcx-0x8]
  41abca:	lea    r9,[rip+0xffffffffffffe3fb]        # 0x418fcc
  41abd1:	mov    edx,0x28
  41abd6:	mov    r8d,DWORD PTR [rbx]
  41abd9:	call   0x44b5f0
  41abde:	mov    rcx,rbx
  41abe1:	call   0x40215c
  41abe6:	add    rsp,0x28
  41abea:	pop    rdi
  41abeb:	pop    rsi
  41abec:	pop    rbp
  41abed:	pop    rbx
  41abee:	ret    
  41abef:	int3   
  41abf0:	rex.W push rbx
  41abf2:	push   rbp
  41abf3:	push   rsi
  41abf4:	push   rdi
  41abf5:	sub    rsp,0x28
  41abf9:	xor    ebp,ebp
  41abfb:	mov    rdi,rcx
  41abfe:	cmp    DWORD PTR [rcx+0x8],ebp
  41ac01:	jbe    0x41ac27
  41ac03:	xor    esi,esi
  41ac05:	mov    rax,QWORD PTR [rdi]
  41ac08:	lea    rbx,[rsi+rax*1]
  41ac0c:	mov    rcx,QWORD PTR [rbx]
  41ac0f:	call   0x44b050
  41ac14:	mov    rcx,rbx
  41ac17:	call   0x44b000
  41ac1c:	inc    ebp
  41ac1e:	add    rsi,0x50
  41ac22:	cmp    ebp,DWORD PTR [rdi+0x8]
  41ac25:	jb     0x41ac05
  41ac27:	mov    rcx,QWORD PTR [rdi]
  41ac2a:	mov    DWORD PTR [rdi+0x8],0x0
  41ac31:	test   rcx,rcx
  41ac34:	je     0x41ac56
  41ac36:	lea    rbx,[rcx-0x8]
  41ac3a:	lea    r9,[rip+0xffffffffffffe8eb]        # 0x41952c
  41ac41:	mov    edx,0x50
  41ac46:	mov    r8d,DWORD PTR [rbx]
  41ac49:	call   0x44b5f0
  41ac4e:	mov    rcx,rbx
  41ac51:	call   0x40215c
  41ac56:	add    rsp,0x28
  41ac5a:	pop    rdi
  41ac5b:	pop    rsi
  41ac5c:	pop    rbp
  41ac5d:	pop    rbx
  41ac5e:	ret    
  41ac5f:	int3   
  41ac60:	rex.W push rbx
  41ac62:	push   rbp
  41ac63:	push   rsi
  41ac64:	push   rdi
  41ac65:	push   r12
  41ac67:	push   r13
  41ac69:	push   r14
  41ac6b:	push   r15
  41ac6d:	mov    r11,rsp
  41ac70:	sub    rsp,0xd8
  41ac77:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
  41ac80:	mov    r15b,r9b
  41ac83:	mov    r13,r8
  41ac86:	mov    edi,edx
  41ac88:	mov    r14,rcx
  41ac8b:	mov    rsi,QWORD PTR [rsp+0x150]
  41ac93:	mov    DWORD PTR [rsi],0x0
  41ac99:	mov    rax,QWORD PTR [rsp+0x148]
  41aca1:	mov    QWORD PTR [rax],0x0
  41aca8:	mov    ebx,0x1
  41acad:	test   edx,edx
  41acaf:	cmove  edi,ebx
  41acb2:	shr    r14,0x1b
  41acb6:	cmove  r14,rbx
  41acba:	mov    QWORD PTR [r11-0x18],0x0
  41acc2:	mov    QWORD PTR [rsp+0x40],0x0
  41accb:	xor    r12d,r12d
  41acce:	mov    DWORD PTR [rsp+0x48],r12d
  41acd3:	cmp    edi,ebx
  41acd5:	jbe    0x41ade2
  41acdb:	lea    ecx,[rdi+rdi*4]
  41acde:	shl    ecx,0x3
  41ace1:	add    rcx,0x8
  41ace5:	call   0x402130
  41acea:	mov    QWORD PTR [rsp+0x150],rax
  41acf2:	test   rax,rax
  41acf5:	je     0x41ad20
  41acf7:	mov    DWORD PTR [rax],edi
  41acf9:	lea    rsi,[rax+0x8]
  41acfd:	lea    rax,[rip+0xffffffffffffe2c8]        # 0x418fcc
  41ad04:	mov    QWORD PTR [rsp+0x20],rax
  41ad09:	lea    r9,[rip+0xffffffffffff3824]        # 0x40e534
  41ad10:	mov    r8d,edi
  41ad13:	lea    edx,[rbx+0x27]
  41ad16:	mov    rcx,rsi
  41ad19:	call   0x44b490
  41ad1e:	jmp    0x41ad22
  41ad20:	xor    esi,esi
  41ad22:	mov    QWORD PTR [rsp+0x40],rsi
  41ad27:	test   edi,edi
  41ad29:	je     0x41ad4f
  41ad2b:	lea    rax,[rsi+0x10]
  41ad2f:	mov    ecx,edi
  41ad31:	mov    QWORD PTR [rax-0x8],r13
  41ad35:	mov    DWORD PTR [rax],0x0
  41ad3b:	mov    QWORD PTR [rax+0x10],r14
  41ad3f:	mov    DWORD PTR [rax+0x8],0x100000
  41ad46:	add    rax,0x28
  41ad4a:	sub    rcx,rbx
  41ad4d:	jne    0x41ad31
  41ad4f:	lea    rcx,[rsp+0x90]
  41ad57:	call   0x4180c0
  41ad5c:	xor    ebp,ebp
  41ad5e:	test   edi,edi
  41ad60:	je     0x41ad95
  41ad62:	lea    rcx,[rbp+rbp*4+0x0]
  41ad67:	lea    rcx,[rsi+rcx*8]
  41ad6b:	mov    r8,rcx
  41ad6e:	lea    rdx,[rip+0xffffffffffffd9d3]        # 0x418748
  41ad75:	call   0x44b060
  41ad7a:	mov    ebx,eax
  41ad7c:	test   eax,eax
  41ad7e:	jne    0x41ad90
  41ad80:	inc    r12d
  41ad83:	mov    DWORD PTR [rsp+0x48],r12d
  41ad88:	inc    ebp
  41ad8a:	cmp    ebp,edi
  41ad8c:	jb     0x41ad62
  41ad8e:	jmp    0x41ad95
  41ad90:	jmp    0x41aee5
  41ad95:	test   r12d,r12d
  41ad98:	je     0x41adb9
  41ad9a:	mov    rbx,rsi
  41ad9d:	mov    ebp,r12d
  41ada0:	mov    rcx,QWORD PTR [rbx]
  41ada3:	call   0x44b050
  41ada8:	mov    rcx,rbx
  41adab:	call   0x44b000
  41adb0:	add    rbx,0x28
  41adb4:	dec    rbp
  41adb7:	jne    0x41ada0
  41adb9:	mov    DWORD PTR [rsp+0x48],0x0
  41adc1:	xor    eax,eax
  41adc3:	test   edi,edi
  41adc5:	je     0x41ae30
  41adc7:	add    rsi,0x10
  41adcb:	mov    ebx,DWORD PTR [rsi]
  41adcd:	test   ebx,ebx
  41adcf:	jne    0x41addd
  41add1:	inc    eax
  41add3:	add    rsi,0x28
  41add7:	cmp    eax,edi
  41add9:	jb     0x41adcb
  41addb:	jmp    0x41ae30
  41addd:	jmp    0x41aee5
  41ade2:	lea    rcx,[rsp+0x90]
  41adea:	call   0x4180c0
  41adef:	mov    ebx,DWORD PTR [rip+0x4d883]        # 0x468678
  41adf5:	mov    rbp,r14
  41adf8:	test   r14,r14
  41adfb:	je     0x41ae2e
  41adfd:	mov    rax,QWORD PTR [r13+0x0]
  41ae01:	mov    rcx,r13
  41ae04:	call   QWORD PTR [rax+0x10]
  41ae07:	test   eax,eax
  41ae09:	jne    0x41ae27
  41ae0b:	mov    r8d,DWORD PTR [rip+0x4d866]        # 0x468678
  41ae12:	mov    edx,0x100000
  41ae17:	mov    ecx,ebx
  41ae19:	call   0x4185b0
  41ae1e:	mov    ebx,eax
  41ae20:	dec    rbp
  41ae23:	jne    0x41adfd
  41ae25:	jmp    0x41ae2e
  41ae27:	mov    ebx,eax
  41ae29:	jmp    0x41aee5
  41ae2e:	add    DWORD PTR [rsi],ebx
  41ae30:	lea    rdx,[rsp+0x58]
  41ae35:	lea    rcx,[rsp+0x90]
  41ae3d:	call   0x4180fc
  41ae42:	mov    QWORD PTR [rsp+0x78],0x0
  41ae4b:	mov    QWORD PTR [rsp+0x80],0x0
  41ae57:	mov    QWORD PTR [rsp+0x88],0x1
  41ae63:	test   r13,r13
  41ae66:	je     0x41aee3
  41ae68:	mov    r9d,edi
  41ae6b:	mov    edx,edi
  41ae6d:	imul   rdx,r14
  41ae71:	shl    rdx,0x1b
  41ae75:	lea    rcx,[rsp+0x58]
  41ae7a:	call   0x4182cc
  41ae7f:	mov    r10,rax
  41ae82:	xor    edx,edx
  41ae84:	div    r9
  41ae87:	mov    rcx,QWORD PTR [rsp+0x148]
  41ae8f:	mov    QWORD PTR [rcx],rax
  41ae92:	test   r15b,r15b
  41ae95:	je     0x41aea8
  41ae97:	mov    rcx,QWORD PTR [rsp+0x140]
  41ae9f:	test   rcx,rcx
  41aea2:	cmovne rax,rcx
  41aea6:	jmp    0x41aeaa
  41aea8:	xor    eax,eax
  41aeaa:	mov    QWORD PTR [rsp+0x30],0x0
  41aeb3:	mov    QWORD PTR [rsp+0x28],rax
  41aeb8:	mov    BYTE PTR [rsp+0x20],r15b
  41aebd:	mov    r9,r10
  41aec0:	xor    r8d,r8d
  41aec3:	lea    rdx,[rsp+0x58]
  41aec8:	mov    rcx,r13
  41aecb:	call   0x4189f8
  41aed0:	mov    r11,QWORD PTR [r13+0x0]
  41aed4:	mov    rcx,r13
  41aed7:	call   QWORD PTR [r11+0x10]
  41aedb:	test   eax,eax
  41aedd:	je     0x41aee3
  41aedf:	mov    ebx,eax
  41aee1:	jmp    0x41aee5
  41aee3:	xor    ebx,ebx
  41aee5:	lea    rcx,[rsp+0x40]
  41aeea:	call   0x41ab80
  41aeef:	mov    eax,ebx
  41aef1:	add    rsp,0xd8
  41aef8:	pop    r15
  41aefa:	pop    r14
  41aefc:	pop    r13
  41aefe:	pop    r12
  41af00:	pop    rdi
  41af01:	pop    rsi
  41af02:	pop    rbp
  41af03:	pop    rbx
  41af04:	ret    
  41af05:	int3   
  41af06:	int3   
  41af07:	int3   
  41af08:	int3   
  41af09:	int3   
  41af0a:	int3   
  41af0b:	int3   
  41af0c:	int3   
  41af0d:	int3   
  41af0e:	int3   
  41af0f:	int3   
  41af10:	rex.W push rbp
  41af12:	sub    rsp,0x20
  41af16:	mov    rbp,rdx
  41af19:	lea    rcx,[rbp+0x40]
  41af1d:	call   0x41ab80
  41af22:	add    rsp,0x20
  41af26:	pop    rbp
  41af27:	ret    
  41af28:	int3   
  41af29:	int3   
  41af2a:	int3   
  41af2b:	int3   
  41af2c:	int3   
  41af2d:	int3   
  41af2e:	int3   
  41af2f:	int3   
  41af30:	rex.W push rbp
  41af32:	sub    rsp,0x20
  41af36:	mov    rbp,rdx
  41af39:	mov    rcx,QWORD PTR [rbp+0x150]
  41af40:	call   0x40215c
  41af45:	add    rsp,0x20
  41af49:	pop    rbp
  41af4a:	ret    
  41af4b:	int3   
  41af4c:	mov    DWORD PTR [rsp+0x20],r9d
  41af51:	mov    QWORD PTR [rsp+0x8],rcx
  41af56:	push   rbx
  41af57:	push   rbp
  41af58:	push   rsi
  41af59:	push   rdi
  41af5a:	push   r12
  41af5c:	push   r13
  41af5e:	push   r14
  41af60:	push   r15
  41af62:	sub    rsp,0x158
  41af69:	mov    QWORD PTR [rsp+0xc8],0xfffffffffffffffe
  41af75:	mov    ebp,r9d
  41af78:	mov    esi,r8d
  41af7b:	mov    r12,rdx
  41af7e:	mov    rbx,rcx
  41af81:	mov    eax,0x1
  41af86:	xor    r15d,r15d
  41af89:	cmp    r8d,r15d
  41af8c:	cmove  esi,eax
  41af8f:	mov    rdx,QWORD PTR [rsp+0x1e0]
  41af97:	add    rdx,0x10
  41af9b:	lea    rcx,[rsp+0xb8]
  41afa3:	call   0x402bb0
  41afa8:	nop
  41afa9:	lea    r8,[rsp+0x80]
  41afb1:	lea    rdx,[rsp+0xb8]
  41afb9:	mov    rcx,rbx
  41afbc:	call   0x40baa0
  41afc1:	cmp    al,r15b
  41afc4:	jne    0x41afd0
  41afc6:	mov    ebx,0x80004001
  41afcb:	jmp    0x41b6c7
  41afd0:	mov    QWORD PTR [rsp+0xa0],r15
  41afd8:	mov    QWORD PTR [rsp+0xa8],r15
  41afe0:	mov    r14d,esi
  41afe3:	mov    r13,rbp
  41afe6:	mov    QWORD PTR [rsp+0x40],rbp
  41afeb:	mov    rbx,rbp
  41afee:	imul   rbx,r14
  41aff2:	xor    edx,edx
  41aff4:	mov    rax,rbx
  41aff7:	div    r14
  41affa:	cmp    rax,rbp
  41affd:	je     0x41b011
  41afff:	xor    ecx,ecx
  41b001:	call   0x44ad20
  41b006:	nop
  41b007:	mov    ebx,0x8007000e
  41b00c:	jmp    0x41b6c7
  41b011:	xor    ecx,ecx
  41b013:	call   0x44ad20
  41b018:	mov    QWORD PTR [rsp+0xa0],r15
  41b020:	mov    rcx,rbx
  41b023:	call   0x44ad00
  41b028:	mov    rdi,rax
  41b02b:	mov    QWORD PTR [rsp+0xa8],rax
  41b033:	cmp    rax,r15
  41b036:	je     0x41b042
  41b038:	mov    QWORD PTR [rsp+0xa0],rbx
  41b040:	jmp    0x41b05a
  41b042:	cmp    rbx,r15
  41b045:	je     0x41b05a
  41b047:	mov    rcx,rax
  41b04a:	call   0x44ad20
  41b04f:	nop
  41b050:	mov    ebx,0x8007000e
  41b055:	jmp    0x41b6c7
  41b05a:	mov    DWORD PTR [rsp+0x48],0x159a55e5
  41b062:	mov    DWORD PTR [rsp+0x4c],0x1f123bb5
  41b06a:	mov    ecx,ebp
  41b06c:	test   ebp,ebp
  41b06e:	mov    ebx,0x1
  41b073:	cmove  ecx,ebx
  41b076:	shl    r12,0x8
  41b07a:	xor    edx,edx
  41b07c:	mov    rax,r12
  41b07f:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41b087:	div    r12
  41b08a:	xor    edx,edx
  41b08c:	div    rcx
  41b08f:	test   rax,rax
  41b092:	cmove  rax,rbx
  41b096:	mov    QWORD PTR [rsp+0x68],rax
  41b09b:	mov    QWORD PTR [rsp+0x140],0x0
  41b0a7:	mov    QWORD PTR [rsp+0x50],0x0
  41b0b0:	xor    r15d,r15d
  41b0b3:	mov    DWORD PTR [rsp+0x58],r15d
  41b0b8:	cmp    esi,ebx
  41b0ba:	jbe    0x41b3bc
  41b0c0:	lea    ecx,[rsi+rsi*4]
  41b0c3:	shl    ecx,0x4
  41b0c6:	add    rcx,0x8
  41b0ca:	call   0x402130
  41b0cf:	mov    QWORD PTR [rsp+0x98],rax
  41b0d7:	test   rax,rax
  41b0da:	je     0x41b105
  41b0dc:	mov    DWORD PTR [rax],esi
  41b0de:	lea    r12,[rax+0x8]
  41b0e2:	lea    rax,[rip+0xffffffffffffe443]        # 0x41952c
  41b0e9:	mov    QWORD PTR [rsp+0x20],rax
  41b0ee:	lea    r9,[rip+0xffffffffffffe59f]        # 0x419694
  41b0f5:	mov    r8d,esi
  41b0f8:	lea    edx,[rbx+0x4f]
  41b0fb:	mov    rcx,r12
  41b0fe:	call   0x44b490
  41b103:	jmp    0x41b108
  41b105:	xor    r12d,r12d
  41b108:	mov    QWORD PTR [rsp+0x50],r12
  41b10d:	xor    r13d,r13d
  41b110:	test   esi,esi
  41b112:	je     0x41b2dd
  41b118:	lea    rbp,[r12+0x38]
  41b11d:	lea    rcx,[rsp+0x88]
  41b125:	call   0x402b34
  41b12a:	nop
  41b12b:	mov    r9,rbp
  41b12e:	lea    r8,[rsp+0x88]
  41b136:	mov    rdx,QWORD PTR [rsp+0x80]
  41b13e:	mov    rcx,QWORD PTR [rsp+0x1a0]
  41b146:	call   0x40bd64
  41b14b:	mov    ebx,eax
  41b14d:	test   eax,eax
  41b14f:	jne    0x41b252
  41b155:	cmp    QWORD PTR [rbp+0x0],0x0
  41b15a:	je     0x41b279
  41b160:	mov    QWORD PTR [rsp+0x60],0x0
  41b169:	mov    rcx,QWORD PTR [rbp+0x0]
  41b16d:	mov    rax,QWORD PTR [rcx]
  41b170:	lea    r8,[rsp+0x60]
  41b175:	lea    rdx,[rip+0x38bfc]        # 0x453d78
  41b17c:	call   QWORD PTR [rax]
  41b17e:	mov    rdx,QWORD PTR [rsp+0x60]
  41b183:	test   rdx,rdx
  41b186:	je     0x41b1b3
  41b188:	mov    QWORD PTR [rsp+0xb0],0x1
  41b194:	lea    r8,[rsp+0xb0]
  41b19c:	mov    rcx,QWORD PTR [rsp+0x1e0]
  41b1a4:	call   0x40d99c
  41b1a9:	mov    ebx,eax
  41b1ab:	test   eax,eax
  41b1ad:	jne    0x41b2a5
  41b1b3:	mov    ecx,r13d
  41b1b6:	imul   rcx,QWORD PTR [rsp+0x40]
  41b1bc:	add    rcx,rdi
  41b1bf:	mov    rax,QWORD PTR [rsp+0x1e8]
  41b1c7:	mov    QWORD PTR [rbp-0x30],rax
  41b1cb:	mov    QWORD PTR [rbp-0x20],rcx
  41b1cf:	mov    rax,QWORD PTR [rsp+0x68]
  41b1d4:	mov    QWORD PTR [rbp-0x10],rax
  41b1d8:	mov    eax,DWORD PTR [rsp+0x1b8]
  41b1df:	mov    DWORD PTR [rbp-0x18],eax
  41b1e2:	lea    r8,[rsp+0x48]
  41b1e7:	mov    edx,eax
  41b1e9:	call   0x4187d4
  41b1ee:	mov    BYTE PTR [rbp-0x8],0x0
  41b1f2:	mov    rax,QWORD PTR [rsp+0x1d8]
  41b1fa:	test   rax,rax
  41b1fd:	je     0x41b20d
  41b1ff:	mov    eax,DWORD PTR [rax]
  41b201:	mov    DWORD PTR [rbp-0x4],eax
  41b204:	test   r13d,r13d
  41b207:	sete   al
  41b20a:	mov    BYTE PTR [rbp-0x8],al
  41b20d:	mov    eax,r13d
  41b210:	imul   eax,eax,0x150
  41b216:	and    eax,0x7ff
  41b21b:	mov    QWORD PTR [rbp+0x10],rax
  41b21f:	mov    rcx,QWORD PTR [rsp+0x60]
  41b224:	test   rcx,rcx
  41b227:	je     0x41b230
  41b229:	mov    rax,QWORD PTR [rcx]
  41b22c:	call   QWORD PTR [rax+0x10]
  41b22f:	nop
  41b230:	mov    rcx,QWORD PTR [rsp+0x88]
  41b238:	call   0x40215c
  41b23d:	inc    r13d
  41b240:	add    rbp,0x50
  41b244:	cmp    r13d,esi
  41b247:	jb     0x41b11d
  41b24d:	jmp    0x41b2dd
  41b252:	mov    rcx,QWORD PTR [rsp+0x88]
  41b25a:	call   0x40215c
  41b25f:	nop
  41b260:	lea    rcx,[rsp+0x50]
  41b265:	call   0x41abf0
  41b26a:	nop
  41b26b:	mov    rcx,rdi
  41b26e:	call   0x44ad20
  41b273:	nop
  41b274:	jmp    0x41b6c7
  41b279:	mov    rcx,QWORD PTR [rsp+0x88]
  41b281:	call   0x40215c
  41b286:	nop
  41b287:	lea    rcx,[rsp+0x50]
  41b28c:	call   0x41abf0
  41b291:	nop
  41b292:	mov    rcx,rdi
  41b295:	call   0x44ad20
  41b29a:	nop
  41b29b:	mov    ebx,0x80004001
  41b2a0:	jmp    0x41b6c7
  41b2a5:	mov    rcx,QWORD PTR [rsp+0x60]
  41b2aa:	test   rcx,rcx
  41b2ad:	je     0x41b2b6
  41b2af:	mov    rax,QWORD PTR [rcx]
  41b2b2:	call   QWORD PTR [rax+0x10]
  41b2b5:	nop
  41b2b6:	mov    rcx,QWORD PTR [rsp+0x88]
  41b2be:	call   0x40215c
  41b2c3:	nop
  41b2c4:	lea    rcx,[rsp+0x50]
  41b2c9:	call   0x41abf0
  41b2ce:	nop
  41b2cf:	mov    rcx,rdi
  41b2d2:	call   0x44ad20
  41b2d7:	nop
  41b2d8:	jmp    0x41b6c7
  41b2dd:	lea    rcx,[rsp+0x110]
  41b2e5:	call   0x4180c0
  41b2ea:	xor    ebp,ebp
  41b2ec:	test   esi,esi
  41b2ee:	je     0x41b33f
  41b2f0:	lea    r13d,[rbp+0x1]
  41b2f4:	lea    rcx,[rbp+rbp*4+0x0]
  41b2f9:	shl    rcx,0x4
  41b2fd:	add    rcx,r12
  41b300:	mov    r8,rcx
  41b303:	lea    rdx,[rip+0xffffffffffffe1c2]        # 0x4194cc
  41b30a:	call   0x44b060
  41b30f:	mov    ebx,eax
  41b311:	test   eax,eax
  41b313:	jne    0x41b326
  41b315:	add    r15d,r13d
  41b318:	mov    DWORD PTR [rsp+0x58],r15d
  41b31d:	add    ebp,r13d
  41b320:	cmp    ebp,esi
  41b322:	jb     0x41b2f4
  41b324:	jmp    0x41b345
  41b326:	lea    rcx,[rsp+0x50]
  41b32b:	call   0x41abf0
  41b330:	nop
  41b331:	mov    rcx,rdi
  41b334:	call   0x44ad20
  41b339:	nop
  41b33a:	jmp    0x41b6c7
  41b33f:	mov    r13d,0x1
  41b345:	test   r15d,r15d
  41b348:	je     0x41b369
  41b34a:	mov    rbx,r12
  41b34d:	mov    ebp,r15d
  41b350:	mov    rcx,QWORD PTR [rbx]
  41b353:	call   0x44b050
  41b358:	mov    rcx,rbx
  41b35b:	call   0x44b000
  41b360:	add    rbx,0x50
  41b364:	sub    rbp,r13
  41b367:	jne    0x41b350
  41b369:	mov    DWORD PTR [rsp+0x58],0x0
  41b371:	xor    ecx,ecx
  41b373:	test   esi,esi
  41b375:	je     0x41b5c3
  41b37b:	lea    rax,[r12+0x40]
  41b380:	mov    ebx,DWORD PTR [rax]
  41b382:	test   ebx,ebx
  41b384:	jne    0x41b3a3
  41b386:	add    ecx,r13d
  41b389:	add    rax,0x50
  41b38d:	cmp    ecx,esi
  41b38f:	jb     0x41b380
  41b391:	mov    r13,QWORD PTR [rsp+0x40]
  41b396:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41b39e:	jmp    0x41b5d0
  41b3a3:	lea    rcx,[rsp+0x50]
  41b3a8:	call   0x41abf0
  41b3ad:	nop
  41b3ae:	mov    rcx,rdi
  41b3b1:	call   0x44ad20
  41b3b6:	nop
  41b3b7:	jmp    0x41b6c7
  41b3bc:	lea    r8,[rsp+0x48]
  41b3c1:	mov    edx,ebp
  41b3c3:	mov    rcx,rdi
  41b3c6:	call   0x4187d4
  41b3cb:	lea    rcx,[rsp+0x110]
  41b3d3:	call   0x4180c0
  41b3d8:	mov    QWORD PTR [rsp+0x40],0x0
  41b3e1:	lea    rcx,[rsp+0x70]
  41b3e6:	call   0x402b34
  41b3eb:	nop
  41b3ec:	lea    r9,[rsp+0x40]
  41b3f1:	lea    r8,[rsp+0x70]
  41b3f6:	mov    rdx,QWORD PTR [rsp+0x80]
  41b3fe:	mov    rcx,QWORD PTR [rsp+0x1a0]
  41b406:	call   0x40bd64
  41b40b:	mov    ebx,eax
  41b40d:	test   eax,eax
  41b40f:	je     0x41b446
  41b411:	mov    rcx,QWORD PTR [rsp+0x70]
  41b416:	call   0x40215c
  41b41b:	nop
  41b41c:	mov    rcx,QWORD PTR [rsp+0x40]
  41b421:	test   rcx,rcx
  41b424:	je     0x41b42d
  41b426:	mov    rax,QWORD PTR [rcx]
  41b429:	call   QWORD PTR [rax+0x10]
  41b42c:	nop
  41b42d:	lea    rcx,[rsp+0x50]
  41b432:	call   0x41abf0
  41b437:	nop
  41b438:	mov    rcx,rdi
  41b43b:	call   0x44ad20
  41b440:	nop
  41b441:	jmp    0x41b6c7
  41b446:	mov    rcx,QWORD PTR [rsp+0x40]
  41b44b:	test   rcx,rcx
  41b44e:	jne    0x41b48a
  41b450:	mov    rcx,QWORD PTR [rsp+0x70]
  41b455:	call   0x40215c
  41b45a:	nop
  41b45b:	mov    rcx,QWORD PTR [rsp+0x40]
  41b460:	test   rcx,rcx
  41b463:	je     0x41b46c
  41b465:	mov    rax,QWORD PTR [rcx]
  41b468:	call   QWORD PTR [rax+0x10]
  41b46b:	nop
  41b46c:	lea    rcx,[rsp+0x50]
  41b471:	call   0x41abf0
  41b476:	nop
  41b477:	mov    rcx,rdi
  41b47a:	call   0x44ad20
  41b47f:	nop
  41b480:	mov    ebx,0x80004001
  41b485:	jmp    0x41b6c7
  41b48a:	mov    QWORD PTR [rsp+0x48],0x0
  41b493:	mov    rax,QWORD PTR [rcx]
  41b496:	lea    r8,[rsp+0x48]
  41b49b:	lea    rdx,[rip+0x388d6]        # 0x453d78
  41b4a2:	call   QWORD PTR [rax]
  41b4a4:	mov    rdx,QWORD PTR [rsp+0x48]
  41b4a9:	test   rdx,rdx
  41b4ac:	je     0x41b51b
  41b4ae:	mov    QWORD PTR [rsp+0x98],0x1
  41b4ba:	lea    r8,[rsp+0x98]
  41b4c2:	mov    rcx,QWORD PTR [rsp+0x1e0]
  41b4ca:	call   0x40d99c
  41b4cf:	mov    ebx,eax
  41b4d1:	test   eax,eax
  41b4d3:	je     0x41b51b
  41b4d5:	mov    rcx,QWORD PTR [rsp+0x48]
  41b4da:	test   rcx,rcx
  41b4dd:	je     0x41b4e6
  41b4df:	mov    rax,QWORD PTR [rcx]
  41b4e2:	call   QWORD PTR [rax+0x10]
  41b4e5:	nop
  41b4e6:	mov    rcx,QWORD PTR [rsp+0x70]
  41b4eb:	call   0x40215c
  41b4f0:	nop
  41b4f1:	mov    rcx,QWORD PTR [rsp+0x40]
  41b4f6:	test   rcx,rcx
  41b4f9:	je     0x41b502
  41b4fb:	mov    rax,QWORD PTR [rcx]
  41b4fe:	call   QWORD PTR [rax+0x10]
  41b501:	nop
  41b502:	lea    rcx,[rsp+0x50]
  41b507:	call   0x41abf0
  41b50c:	nop
  41b50d:	mov    rcx,rdi
  41b510:	call   0x44ad20
  41b515:	nop
  41b516:	jmp    0x41b6c7
  41b51b:	mov    rax,QWORD PTR [rsp+0x1e8]
  41b523:	mov    QWORD PTR [rsp+0x28],rax
  41b528:	mov    rax,QWORD PTR [rsp+0x40]
  41b52d:	mov    QWORD PTR [rsp+0x20],rax
  41b532:	mov    r9,QWORD PTR [rsp+0x1d8]
  41b53a:	mov    r8,QWORD PTR [rsp+0x68]
  41b53f:	mov    edx,ebp
  41b541:	mov    rcx,rdi
  41b544:	call   0x4184c8
  41b549:	mov    ebx,eax
  41b54b:	test   eax,eax
  41b54d:	je     0x41b595
  41b54f:	mov    rcx,QWORD PTR [rsp+0x48]
  41b554:	test   rcx,rcx
  41b557:	je     0x41b560
  41b559:	mov    rax,QWORD PTR [rcx]
  41b55c:	call   QWORD PTR [rax+0x10]
  41b55f:	nop
  41b560:	mov    rcx,QWORD PTR [rsp+0x70]
  41b565:	call   0x40215c
  41b56a:	nop
  41b56b:	mov    rcx,QWORD PTR [rsp+0x40]
  41b570:	test   rcx,rcx
  41b573:	je     0x41b57c
  41b575:	mov    rax,QWORD PTR [rcx]
  41b578:	call   QWORD PTR [rax+0x10]
  41b57b:	nop
  41b57c:	lea    rcx,[rsp+0x50]
  41b581:	call   0x41abf0
  41b586:	nop
  41b587:	mov    rcx,rdi
  41b58a:	call   0x44ad20
  41b58f:	nop
  41b590:	jmp    0x41b6c7
  41b595:	mov    rcx,QWORD PTR [rsp+0x48]
  41b59a:	test   rcx,rcx
  41b59d:	je     0x41b5a6
  41b59f:	mov    rax,QWORD PTR [rcx]
  41b5a2:	call   QWORD PTR [rax+0x10]
  41b5a5:	nop
  41b5a6:	mov    rcx,QWORD PTR [rsp+0x70]
  41b5ab:	call   0x40215c
  41b5b0:	nop
  41b5b1:	mov    rcx,QWORD PTR [rsp+0x40]
  41b5b6:	test   rcx,rcx
  41b5b9:	je     0x41b5d0
  41b5bb:	mov    rax,QWORD PTR [rcx]
  41b5be:	call   QWORD PTR [rax+0x10]
  41b5c1:	jmp    0x41b5d0
  41b5c3:	mov    r13,QWORD PTR [rsp+0x40]
  41b5c8:	mov    r12d,DWORD PTR [rsp+0x1c8]
  41b5d0:	lea    rdx,[rsp+0xd0]
  41b5d8:	lea    rcx,[rsp+0x110]
  41b5e0:	call   0x4180fc
  41b5e5:	imul   r13,QWORD PTR [rsp+0x68]
  41b5eb:	imul   r14,r13
  41b5ef:	mov    QWORD PTR [rsp+0xf0],r14
  41b5f7:	mov    QWORD PTR [rsp+0xf8],r14
  41b5ff:	mov    QWORD PTR [rsp+0x100],0x1
  41b60b:	mov    rbx,QWORD PTR [rsp+0x1e8]
  41b613:	test   rbx,rbx
  41b616:	je     0x41b696
  41b618:	imul   r12,r14
  41b61c:	shr    r12,0x8
  41b620:	mov    rdx,r12
  41b623:	lea    rcx,[rsp+0xd0]
  41b62b:	call   0x4182cc
  41b630:	mov    rdx,QWORD PTR [rsp+0x1f0]
  41b638:	mov    QWORD PTR [rsp+0x30],rdx
  41b63d:	mov    rdx,QWORD PTR [rsp+0x200]
  41b645:	mov    QWORD PTR [rsp+0x28],rdx
  41b64a:	mov    dl,BYTE PTR [rsp+0x1f8]
  41b651:	mov    BYTE PTR [rsp+0x20],dl
  41b655:	mov    r9,rax
  41b658:	mov    r8d,DWORD PTR [rsp+0x1d0]
  41b660:	lea    rdx,[rsp+0xd0]
  41b668:	mov    rcx,rbx
  41b66b:	call   0x4189f8
  41b670:	mov    r11,QWORD PTR [rbx]
  41b673:	mov    rcx,rbx
  41b676:	call   QWORD PTR [r11+0x10]
  41b67a:	mov    ebx,eax
  41b67c:	test   eax,eax
  41b67e:	je     0x41b696
  41b680:	lea    rcx,[rsp+0x50]
  41b685:	call   0x41abf0
  41b68a:	nop
  41b68b:	mov    rcx,rdi
  41b68e:	call   0x44ad20
  41b693:	nop
  41b694:	jmp    0x41b6c7
  41b696:	mov    rdx,r14
  41b699:	lea    rcx,[rsp+0xd0]
  41b6a1:	call   0x4182cc
  41b6a6:	mov    rcx,QWORD PTR [rsp+0x1c0]
  41b6ae:	mov    QWORD PTR [rcx],rax
  41b6b1:	lea    rcx,[rsp+0x50]
  41b6b6:	call   0x41abf0
  41b6bb:	nop
  41b6bc:	mov    rcx,rdi
  41b6bf:	call   0x44ad20
  41b6c4:	nop
  41b6c5:	xor    ebx,ebx
  41b6c7:	mov    rcx,QWORD PTR [rsp+0xb8]
  41b6cf:	call   0x40215c
  41b6d4:	mov    eax,ebx
  41b6d6:	add    rsp,0x158
  41b6dd:	pop    r15
  41b6df:	pop    r14
  41b6e1:	pop    r13
  41b6e3:	pop    r12
  41b6e5:	pop    rdi
  41b6e6:	pop    rsi
  41b6e7:	pop    rbp
  41b6e8:	pop    rbx
  41b6e9:	ret    
  41b6ea:	int3   
  41b6eb:	int3   
  41b6ec:	rex.W push rbp
  41b6ee:	sub    rsp,0x20
  41b6f2:	mov    rbp,rdx
  41b6f5:	lea    rcx,[rbp+0xb8]
  41b6fc:	call   0x401000
  41b701:	add    rsp,0x20
  41b705:	pop    rbp
  41b706:	ret    
  41b707:	int3   
  41b708:	int3   
  41b709:	int3   
  41b70a:	int3   
  41b70b:	int3   
  41b70c:	rex.W push rbp
  41b70e:	sub    rsp,0x20
  41b712:	mov    rbp,rdx
  41b715:	lea    rcx,[rbp+0xa0]
  41b71c:	call   0x417d64
  41b721:	add    rsp,0x20
  41b725:	pop    rbp
  41b726:	ret    
  41b727:	int3   
  41b728:	int3   
  41b729:	int3   
  41b72a:	int3   
  41b72b:	int3   
  41b72c:	rex.W push rbp
  41b72e:	sub    rsp,0x20
  41b732:	mov    rbp,rdx
  41b735:	lea    rcx,[rbp+0x50]
  41b739:	call   0x41abf0
  41b73e:	add    rsp,0x20
  41b742:	pop    rbp
  41b743:	ret    
  41b744:	int3   
  41b745:	int3   
  41b746:	int3   
  41b747:	int3   
  41b748:	int3   
  41b749:	int3   
  41b74a:	int3   
  41b74b:	int3   
  41b74c:	rex.W push rbp
  41b74e:	sub    rsp,0x20
  41b752:	mov    rbp,rdx
  41b755:	mov    rcx,QWORD PTR [rbp+0x98]
  41b75c:	call   0x40215c
  41b761:	add    rsp,0x20
  41b765:	pop    rbp
  41b766:	ret    
  41b767:	int3   
  41b768:	int3   
  41b769:	int3   
  41b76a:	int3   
  41b76b:	int3   
  41b76c:	rex.W push rbp
  41b76e:	sub    rsp,0x20
  41b772:	mov    rbp,rdx
  41b775:	lea    rcx,[rbp+0x88]
  41b77c:	call   0x401000
  41b781:	add    rsp,0x20
  41b785:	pop    rbp
  41b786:	ret    
  41b787:	int3   
  41b788:	int3   
  41b789:	int3   
  41b78a:	int3   
  41b78b:	int3   
  41b78c:	rex.W push rbp
  41b78e:	sub    rsp,0x20
  41b792:	mov    rbp,rdx
  41b795:	lea    rcx,[rbp+0x60]
  41b799:	call   0x4176b4
  41b79e:	add    rsp,0x20
  41b7a2:	pop    rbp
  41b7a3:	ret    
  41b7a4:	int3   
  41b7a5:	int3   
  41b7a6:	int3   
  41b7a7:	int3   
  41b7a8:	int3   
  41b7a9:	int3   
  41b7aa:	int3   
  41b7ab:	int3   
  41b7ac:	rex.W push rbp
  41b7ae:	sub    rsp,0x20
  41b7b2:	mov    rbp,rdx
  41b7b5:	lea    rcx,[rbp+0x40]
  41b7b9:	call   0x4176b4
  41b7be:	add    rsp,0x20
  41b7c2:	pop    rbp
  41b7c3:	ret    
  41b7c4:	int3   
  41b7c5:	int3   
  41b7c6:	int3   
  41b7c7:	int3   
  41b7c8:	int3   
  41b7c9:	int3   
  41b7ca:	int3   
  41b7cb:	int3   
  41b7cc:	rex.W push rbp
  41b7ce:	sub    rsp,0x20
  41b7d2:	mov    rbp,rdx
  41b7d5:	lea    rcx,[rbp+0x70]
  41b7d9:	call   0x401000
  41b7de:	add    rsp,0x20
  41b7e2:	pop    rbp
  41b7e3:	ret    
  41b7e4:	int3   
  41b7e5:	int3   
  41b7e6:	int3   
  41b7e7:	int3   
  41b7e8:	int3   
  41b7e9:	int3   
  41b7ea:	int3   
  41b7eb:	int3   
  41b7ec:	rex.W push rbp
  41b7ee:	sub    rsp,0x20
  41b7f2:	mov    rbp,rdx
  41b7f5:	lea    rcx,[rbp+0x48]
  41b7f9:	call   0x4176b4
  41b7fe:	add    rsp,0x20
  41b802:	pop    rbp
  41b803:	ret    
  41b804:	rex.W push rbx
  41b806:	push   rbp
  41b807:	push   rsi
  41b808:	push   rdi
  41b809:	push   r12
  41b80b:	sub    rsp,0x30
  41b80f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41b818:	mov    r12,rdx
  41b81b:	mov    rbx,rcx
  41b81e:	cmp    rdx,rcx
  41b821:	jne    0x41b82b
  41b823:	mov    rax,rcx
  41b826:	jmp    0x41b905
  41b82b:	movsxd rdi,DWORD PTR [rcx+0x8]
  41b82f:	mov    rsi,rdi
  41b832:	test   edi,edi
  41b834:	je     0x41b862
  41b836:	shl    rsi,0x3
  41b83a:	add    edi,0xffffffff
  41b83d:	sub    rsi,0x8
  41b841:	mov    rax,QWORD PTR [rbx]
  41b844:	mov    rbp,QWORD PTR [rsi+rax*1]
  41b848:	test   rbp,rbp
  41b84b:	je     0x41b85e
  41b84d:	lea    rcx,[rbp+0x8]
  41b851:	call   0x40b028
  41b856:	mov    rcx,rbp
  41b859:	call   0x40215c
  41b85e:	test   edi,edi
  41b860:	jne    0x41b83a
  41b862:	mov    DWORD PTR [rbx+0x8],0x0
  41b869:	mov    edi,DWORD PTR [r12+0x8]
  41b86e:	cmp    edi,DWORD PTR [rbx+0xc]
  41b871:	jbe    0x41b8a9
  41b873:	mov    rcx,rdi
  41b876:	shl    rcx,0x3
  41b87a:	call   0x402130
  41b87f:	mov    rsi,rax
  41b882:	cmp    DWORD PTR [rbx+0x8],0x0
  41b886:	je     0x41b89b
  41b888:	mov    r8d,DWORD PTR [rbx+0x8]
  41b88c:	shl    r8,0x3
  41b890:	mov    rdx,QWORD PTR [rbx]
  41b893:	mov    rcx,rax
  41b896:	call   0x44b480
  41b89b:	mov    rcx,QWORD PTR [rbx]
  41b89e:	call   0x40215c
  41b8a3:	mov    QWORD PTR [rbx],rsi
  41b8a6:	mov    DWORD PTR [rbx+0xc],edi
  41b8a9:	test   edi,edi
  41b8ab:	je     0x41b902
  41b8ad:	xor    esi,esi
  41b8af:	mov    rbp,rdi
  41b8b2:	mov    ecx,0x20
  41b8b7:	call   0x402130
  41b8bc:	mov    rdi,rax
  41b8bf:	mov    QWORD PTR [rsp+0x60],rax
  41b8c4:	test   rax,rax
  41b8c7:	je     0x41b8ea
  41b8c9:	mov    rcx,QWORD PTR [r12]
  41b8cd:	mov    rdx,QWORD PTR [rsi+rcx*1]
  41b8d1:	mov    ecx,DWORD PTR [rdx]
  41b8d3:	mov    DWORD PTR [rax],ecx
  41b8d5:	mov    cl,BYTE PTR [rdx+0x4]
  41b8d8:	mov    BYTE PTR [rax+0x4],cl
  41b8db:	add    rdx,0x8
  41b8df:	lea    rcx,[rax+0x8]
  41b8e3:	call   0x40b16c
  41b8e8:	jmp    0x41b8ec
  41b8ea:	xor    edi,edi
  41b8ec:	mov    ecx,DWORD PTR [rbx+0x8]
  41b8ef:	mov    rax,QWORD PTR [rbx]
  41b8f2:	mov    QWORD PTR [rax+rcx*8],rdi
  41b8f6:	inc    DWORD PTR [rbx+0x8]
  41b8f9:	add    rsi,0x8
  41b8fd:	dec    rbp
  41b900:	jne    0x41b8b2
  41b902:	mov    rax,rbx
  41b905:	add    rsp,0x30
  41b909:	pop    r12
  41b90b:	pop    rdi
  41b90c:	pop    rsi
  41b90d:	pop    rbp
  41b90e:	pop    rbx
  41b90f:	ret    
  41b910:	int3   
  41b911:	int3   
  41b912:	int3   
  41b913:	int3   
  41b914:	rex.W push rbp
  41b916:	sub    rsp,0x20
  41b91a:	mov    rbp,rdx
  41b91d:	mov    rcx,QWORD PTR [rbp+0x60]
  41b921:	call   0x40215c
  41b926:	add    rsp,0x20
  41b92a:	pop    rbp
  41b92b:	ret    
  41b92c:	rex.W push rbx
  41b92e:	push   rbp
  41b92f:	push   rsi
  41b930:	push   rdi
  41b931:	sub    rsp,0x28
  41b935:	movsxd rbx,DWORD PTR [rcx+0x8]
  41b939:	mov    rdi,rcx
  41b93c:	test   ebx,ebx
  41b93e:	mov    rsi,rbx
  41b941:	je     0x41b96f
  41b943:	shl    rsi,0x3
  41b947:	mov    rax,QWORD PTR [rdi]
  41b94a:	sub    rsi,0x8
  41b94e:	add    ebx,0xffffffff
  41b951:	mov    rbp,QWORD PTR [rsi+rax*1]
  41b955:	test   rbp,rbp
  41b958:	je     0x41b96b
  41b95a:	lea    rcx,[rbp+0x8]
  41b95e:	call   0x40b028
  41b963:	mov    rcx,rbp
  41b966:	call   0x40215c
  41b96b:	test   ebx,ebx
  41b96d:	jne    0x41b947
  41b96f:	mov    rcx,QWORD PTR [rdi]
  41b972:	add    rsp,0x28
  41b976:	pop    rdi
  41b977:	pop    rsi
  41b978:	pop    rbp
  41b979:	pop    rbx
  41b97a:	jmp    0x40215c
  41b97f:	int3   
  41b980:	rex.W push rbx
  41b982:	push   rbp
  41b983:	push   rsi
  41b984:	push   rdi
  41b985:	sub    rsp,0x28
  41b989:	mov    rbx,rcx
  41b98c:	mov    rcx,QWORD PTR [rcx+0x20]
  41b990:	call   0x40215c
  41b995:	mov    rcx,QWORD PTR [rbx+0x10]
  41b999:	call   0x40215c
  41b99e:	movsxd rdi,DWORD PTR [rbx+0x8]
  41b9a2:	test   edi,edi
  41b9a4:	mov    rsi,rdi
  41b9a7:	je     0x41b9d5
  41b9a9:	shl    rsi,0x3
  41b9ad:	mov    rax,QWORD PTR [rbx]
  41b9b0:	sub    rsi,0x8
  41b9b4:	add    edi,0xffffffff
  41b9b7:	mov    rbp,QWORD PTR [rsi+rax*1]
  41b9bb:	test   rbp,rbp
  41b9be:	je     0x41b9d1
  41b9c0:	lea    rcx,[rbp+0x8]
  41b9c4:	call   0x40b028
  41b9c9:	mov    rcx,rbp
  41b9cc:	call   0x40215c
  41b9d1:	test   edi,edi
  41b9d3:	jne    0x41b9ad
  41b9d5:	mov    rcx,QWORD PTR [rbx]
  41b9d8:	add    rsp,0x28
  41b9dc:	pop    rdi
  41b9dd:	pop    rsi
  41b9de:	pop    rbp
  41b9df:	pop    rbx
  41b9e0:	jmp    0x40215c
  41b9e5:	int3   
  41b9e6:	int3   
  41b9e7:	int3   
  41b9e8:	mov    QWORD PTR [rsp+0x8],rcx
  41b9ed:	push   rbx
  41b9ee:	push   rsi
  41b9ef:	sub    rsp,0x38
  41b9f3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41b9fc:	mov    rbx,rcx
  41b9ff:	add    rcx,0x168
  41ba06:	call   0x41b980
  41ba0b:	mov    rcx,QWORD PTR [rbx+0x160]
  41ba12:	test   rcx,rcx
  41ba15:	je     0x41ba1e
  41ba17:	mov    rax,QWORD PTR [rcx]
  41ba1a:	call   QWORD PTR [rax+0x10]
  41ba1d:	nop
  41ba1e:	mov    rcx,QWORD PTR [rbx+0x150]
  41ba25:	call   0x44ad20
  41ba2a:	nop
  41ba2b:	mov    rcx,QWORD PTR [rbx+0x140]
  41ba32:	call   0x44ad20
  41ba37:	nop
  41ba38:	mov    rcx,QWORD PTR [rbx+0xf8]
  41ba3f:	test   rcx,rcx
  41ba42:	je     0x41ba4b
  41ba44:	mov    rax,QWORD PTR [rcx]
  41ba47:	call   QWORD PTR [rax+0x10]
  41ba4a:	nop
  41ba4b:	mov    rcx,QWORD PTR [rbx+0xe0]
  41ba52:	test   rcx,rcx
  41ba55:	je     0x41ba5e
  41ba57:	mov    rax,QWORD PTR [rcx]
  41ba5a:	call   QWORD PTR [rax+0x10]
  41ba5d:	nop
  41ba5e:	lea    rcx,[rbx+0xd0]
  41ba65:	lea    r9,[rip+0xffffffffffffbc48]        # 0x4176b4
  41ba6c:	mov    esi,0x8
  41ba71:	lea    r8d,[rsi-0x6]
  41ba75:	mov    rdx,rsi
  41ba78:	call   0x44b5f0
  41ba7d:	nop
  41ba7e:	lea    rcx,[rbx+0x38]
  41ba82:	lea    r9,[rip+0xffffffffffffbc2b]        # 0x4176b4
  41ba89:	lea    r8d,[rsi-0x6]
  41ba8d:	mov    rdx,rsi
  41ba90:	call   0x44b5f0
  41ba95:	nop
  41ba96:	mov    rcx,QWORD PTR [rbx+0x20]
  41ba9a:	test   rcx,rcx
  41ba9d:	je     0x41baa6
  41ba9f:	mov    rax,QWORD PTR [rcx]
  41baa2:	call   QWORD PTR [rax+0x10]
  41baa5:	nop
  41baa6:	mov    rcx,QWORD PTR [rbx+0x18]
  41baaa:	test   rcx,rcx
  41baad:	je     0x41bab6
  41baaf:	mov    rax,QWORD PTR [rcx]
  41bab2:	call   QWORD PTR [rax+0x10]
  41bab5:	nop
  41bab6:	lea    r9,[rip+0xffffffffffffd50f]        # 0x418fcc
  41babd:	mov    r8d,0x2
  41bac3:	mov    rdx,rsi
  41bac6:	mov    rcx,rbx
  41bac9:	add    rsp,0x38
  41bacd:	pop    rsi
  41bace:	pop    rbx
  41bacf:	jmp    0x44b5f0
  41bad4:	int3   
  41bad5:	int3   
  41bad6:	int3   
  41bad7:	int3   
  41bad8:	rex.W push rbp
  41bada:	sub    rsp,0x20
  41bade:	mov    rbp,rdx
  41bae1:	lea    r9,[rip+0xffffffffffffd4e4]        # 0x418fcc
  41bae8:	mov    r8d,0x2
  41baee:	mov    edx,0x8
  41baf3:	mov    rcx,QWORD PTR [rbp+0x50]
  41baf7:	call   0x44b5f0
  41bafc:	add    rsp,0x20
  41bb00:	pop    rbp
  41bb01:	ret    
  41bb02:	int3   
  41bb03:	int3   
  41bb04:	int3   
  41bb05:	int3   
  41bb06:	int3   
  41bb07:	int3   
  41bb08:	rex.W push rbp
  41bb0a:	sub    rsp,0x20
  41bb0e:	mov    rbp,rdx
  41bb11:	mov    rcx,QWORD PTR [rbp+0x50]
  41bb15:	add    rcx,0x18
  41bb19:	call   0x4176b4
  41bb1e:	add    rsp,0x20
  41bb22:	pop    rbp
  41bb23:	ret    
  41bb24:	int3   
  41bb25:	int3   
  41bb26:	int3   
  41bb27:	int3   
  41bb28:	rex.W push rbp
  41bb2a:	sub    rsp,0x20
  41bb2e:	mov    rbp,rdx
  41bb31:	mov    rcx,QWORD PTR [rbp+0x50]
  41bb35:	add    rcx,0x20
  41bb39:	call   0x4176b4
  41bb3e:	add    rsp,0x20
  41bb42:	pop    rbp
  41bb43:	ret    
  41bb44:	int3   
  41bb45:	int3   
  41bb46:	int3   
  41bb47:	int3   
  41bb48:	rex.W push rbp
  41bb4a:	sub    rsp,0x20
  41bb4e:	mov    rbp,rdx
  41bb51:	mov    rcx,QWORD PTR [rbp+0x50]
  41bb55:	add    rcx,0x38
  41bb59:	lea    r9,[rip+0xffffffffffffbb54]        # 0x4176b4
  41bb60:	mov    r8d,0x2
  41bb66:	mov    edx,0x8
  41bb6b:	call   0x44b5f0
  41bb70:	add    rsp,0x20
  41bb74:	pop    rbp
  41bb75:	ret    
  41bb76:	int3   
  41bb77:	int3   
  41bb78:	rex.W push rbp
  41bb7a:	sub    rsp,0x20
  41bb7e:	mov    rbp,rdx
  41bb81:	mov    rcx,QWORD PTR [rbp+0x50]
  41bb85:	add    rcx,0xd0
  41bb8c:	lea    r9,[rip+0xffffffffffffbb21]        # 0x4176b4
  41bb93:	mov    r8d,0x2
  41bb99:	mov    edx,0x8
  41bb9e:	call   0x44b5f0
  41bba3:	add    rsp,0x20
  41bba7:	pop    rbp
  41bba8:	ret    
  41bba9:	int3   
  41bbaa:	int3   
  41bbab:	int3   
  41bbac:	int3   
  41bbad:	int3   
  41bbae:	int3   
  41bbaf:	int3   
  41bbb0:	int3   
  41bbb1:	int3   
  41bbb2:	int3   
  41bbb3:	int3   
  41bbb4:	int3   
  41bbb5:	int3   
  41bbb6:	int3   
  41bbb7:	int3   
  41bbb8:	rex.W push rbp
  41bbba:	sub    rsp,0x20
  41bbbe:	mov    rbp,rdx
  41bbc1:	mov    rcx,QWORD PTR [rbp+0x50]
  41bbc5:	add    rcx,0xe0
  41bbcc:	call   0x4176b4
  41bbd1:	add    rsp,0x20
  41bbd5:	pop    rbp
  41bbd6:	ret    
  41bbd7:	int3   
  41bbd8:	rex.W push rbp
  41bbda:	sub    rsp,0x20
  41bbde:	mov    rbp,rdx
  41bbe1:	mov    rcx,QWORD PTR [rbp+0x50]
  41bbe5:	add    rcx,0xf8
  41bbec:	call   0x4176b4
  41bbf1:	add    rsp,0x20
  41bbf5:	pop    rbp
  41bbf6:	ret    
  41bbf7:	int3   
  41bbf8:	rex.W push rbp
  41bbfa:	sub    rsp,0x20
  41bbfe:	mov    rbp,rdx
  41bc01:	mov    rcx,QWORD PTR [rbp+0x50]
  41bc05:	add    rcx,0x138
  41bc0c:	call   0x417d64
  41bc11:	add    rsp,0x20
  41bc15:	pop    rbp
  41bc16:	ret    
  41bc17:	int3   
  41bc18:	rex.W push rbp
  41bc1a:	sub    rsp,0x20
  41bc1e:	mov    rbp,rdx
  41bc21:	mov    rcx,QWORD PTR [rbp+0x50]
  41bc25:	add    rcx,0x148
  41bc2c:	call   0x417d64
  41bc31:	add    rsp,0x20
  41bc35:	pop    rbp
  41bc36:	ret    
  41bc37:	int3   
  41bc38:	rex.W push rbx
  41bc3a:	push   rbp
  41bc3b:	push   rsi
  41bc3c:	push   rdi
  41bc3d:	push   r12
  41bc3f:	push   r13
  41bc41:	push   r14
  41bc43:	push   r15
  41bc45:	sub    rsp,0xe8
  41bc4c:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
  41bc55:	mov    r12d,r9d
  41bc58:	mov    r13d,r8d
  41bc5b:	mov    r14,rdx
  41bc5e:	mov    r15,rcx
  41bc61:	xor    ebx,ebx
  41bc63:	mov    esi,ebx
  41bc65:	mov    rbp,QWORD PTR [rsp+0x158]
  41bc6d:	lea    rdi,[rip+0x336fc]        # 0x44f370
  41bc74:	mov    r8d,0xc
  41bc7a:	mov    rdx,QWORD PTR [rdi]
  41bc7d:	mov    rcx,QWORD PTR [rbp+0x58]
  41bc81:	call   0x418d68
  41bc86:	mov    QWORD PTR [rsp+0xa8],rbx
  41bc8e:	mov    DWORD PTR [rsp+0xb0],ebx
  41bc95:	mov    DWORD PTR [rsp+0xb4],ebx
  41bc9c:	lea    rcx,[rsp+0xb8]
  41bca4:	call   0x402b34
  41bca9:	nop
  41bcaa:	lea    rcx,[rsp+0xc8]
  41bcb2:	call   0x403150
  41bcb7:	nop
  41bcb8:	mov    WORD PTR [rsp+0x90],bx
  41bcc0:	mov    WORD PTR [rsp+0x92],bx
  41bcc8:	mov    QWORD PTR [rsp+0x98],rbx
  41bcd0:	mov    rdx,QWORD PTR [rdi]
  41bcd3:	lea    rcx,[rsp+0x90]
  41bcdb:	call   0x40b1fc
  41bce0:	lea    rcx,[rsp+0x80]
  41bce8:	call   0x403150
  41bced:	nop
  41bcee:	lea    r8,[rsp+0x90]
  41bcf6:	mov    rdx,rax
  41bcf9:	lea    rcx,[rsp+0xa8]
  41bd01:	call   0x40e480
  41bd06:	mov    ebx,eax
  41bd08:	mov    rcx,QWORD PTR [rsp+0x80]
  41bd10:	call   0x40215c
  41bd15:	test   ebx,ebx
  41bd17:	jne    0x41bdd7
  41bd1d:	lea    rax,[rdi-0x8]
  41bd21:	mov    rcx,QWORD PTR [rsp+0x170]
  41bd29:	mov    QWORD PTR [rsp+0x60],rcx
  41bd2e:	mov    cl,BYTE PTR [rsp+0x168]
  41bd35:	mov    BYTE PTR [rsp+0x58],cl
  41bd39:	mov    rcx,QWORD PTR [rsp+0x160]
  41bd41:	mov    QWORD PTR [rsp+0x50],rcx
  41bd46:	mov    rcx,QWORD PTR [rsp+0x150]
  41bd4e:	mov    QWORD PTR [rsp+0x48],rcx
  41bd53:	lea    rcx,[rsp+0xa8]
  41bd5b:	mov    QWORD PTR [rsp+0x40],rcx
  41bd60:	mov    QWORD PTR [rsp+0x38],rax
  41bd65:	mov    eax,DWORD PTR [rdi-0x10]
  41bd68:	mov    DWORD PTR [rsp+0x30],eax
  41bd6c:	mov    eax,DWORD PTR [rdi-0xc]
  41bd6f:	mov    DWORD PTR [rsp+0x28],eax
  41bd73:	lea    rax,[rsp+0x78]
  41bd78:	mov    QWORD PTR [rsp+0x20],rax
  41bd7d:	mov    r9d,r12d
  41bd80:	mov    r8d,r13d
  41bd83:	mov    rdx,r14
  41bd86:	mov    rcx,r15
  41bd89:	call   0x41af4c
  41bd8e:	mov    ebx,eax
  41bd90:	cmp    eax,0x80004001
  41bd95:	je     0x41bd9b
  41bd97:	test   eax,eax
  41bd99:	jne    0x41bde7
  41bd9b:	mov    rcx,QWORD PTR [rbp+0x58]
  41bd9f:	mov    rax,QWORD PTR [rcx]
  41bda2:	call   QWORD PTR [rax+0x8]
  41bda5:	nop
  41bda6:	lea    rcx,[rsp+0x90]
  41bdae:	call   0x40b028
  41bdb3:	nop
  41bdb4:	lea    rcx,[rsp+0xa8]
  41bdbc:	call   0x41b980
  41bdc1:	inc    esi
  41bdc3:	add    rdi,0x18
  41bdc7:	cmp    esi,0x7
  41bdca:	mov    ebx,0x0
  41bdcf:	jb     0x41bc74
  41bdd5:	jmp    0x41be06
  41bdd7:	lea    rcx,[rsp+0x90]
  41bddf:	call   0x40b028
  41bde4:	nop
  41bde5:	jmp    0x41bdf5
  41bde7:	lea    rcx,[rsp+0x90]
  41bdef:	call   0x40b028
  41bdf4:	nop
  41bdf5:	lea    rcx,[rsp+0xa8]
  41bdfd:	call   0x41b980
  41be02:	mov    eax,ebx
  41be04:	jmp    0x41be08
  41be06:	xor    eax,eax
  41be08:	add    rsp,0xe8
  41be0f:	pop    r15
  41be11:	pop    r14
  41be13:	pop    r13
  41be15:	pop    r12
  41be17:	pop    rdi
  41be18:	pop    rsi
  41be19:	pop    rbp
  41be1a:	pop    rbx
  41be1b:	ret    
  41be1c:	int3   
  41be1d:	int3   
  41be1e:	int3   
  41be1f:	int3   
  41be20:	int3   
  41be21:	int3   
  41be22:	int3   
  41be23:	int3   
  41be24:	int3   
  41be25:	int3   
  41be26:	int3   
  41be27:	int3   
  41be28:	rex.W push rbp
  41be2a:	sub    rsp,0x20
  41be2e:	mov    rbp,rdx
  41be31:	lea    rcx,[rbp+0xa8]
  41be38:	call   0x41b92c
  41be3d:	add    rsp,0x20
  41be41:	pop    rbp
  41be42:	ret    
  41be43:	int3   
  41be44:	int3   
  41be45:	int3   
  41be46:	int3   
  41be47:	int3   
  41be48:	rex.W push rbp
  41be4a:	sub    rsp,0x20
  41be4e:	mov    rbp,rdx
  41be51:	lea    rcx,[rbp+0xa8]
  41be58:	add    rcx,0x10
  41be5c:	call   0x401000
  41be61:	add    rsp,0x20
  41be65:	pop    rbp
  41be66:	ret    
  41be67:	int3   
  41be68:	rex.W push rbp
  41be6a:	sub    rsp,0x20
  41be6e:	mov    rbp,rdx
  41be71:	lea    rcx,[rbp+0xa8]
  41be78:	call   0x41b980
  41be7d:	add    rsp,0x20
  41be81:	pop    rbp
  41be82:	ret    
  41be83:	int3   
  41be84:	int3   
  41be85:	int3   
  41be86:	int3   
  41be87:	int3   
  41be88:	rex.W push rbp
  41be8a:	sub    rsp,0x20
  41be8e:	mov    rbp,rdx
  41be91:	lea    rcx,[rbp+0x90]
  41be98:	call   0x40b830
  41be9d:	add    rsp,0x20
  41bea1:	pop    rbp
  41bea2:	ret    
  41bea3:	int3   
  41bea4:	int3   
  41bea5:	int3   
  41bea6:	int3   
  41bea7:	int3   
  41bea8:	rex.W push rbp
  41beaa:	sub    rsp,0x20
  41beae:	mov    rbp,rdx
  41beb1:	lea    rcx,[rbp+0x80]
  41beb8:	call   0x401000
  41bebd:	add    rsp,0x20
  41bec1:	pop    rbp
  41bec2:	ret    
  41bec3:	int3   
  41bec4:	mov    QWORD PTR [rsp+0x8],rcx
  41bec9:	push   rbx
  41beca:	push   rbp
  41becb:	push   rdi
  41becc:	sub    rsp,0x40
  41bed0:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  41bed9:	mov    rdi,rcx
  41bedc:	lea    rax,[rip+0xffffffffffffd0e9]        # 0x418fcc
  41bee3:	mov    QWORD PTR [rsp+0x20],rax
  41bee8:	lea    r9,[rip+0xffffffffffff2645]        # 0x40e534
  41beef:	mov    ebx,0x8
  41bef4:	lea    r8d,[rbx-0x6]
  41bef8:	mov    rdx,rbx
  41befb:	call   0x44b490
  41bf00:	nop
  41bf01:	xor    ebp,ebp
  41bf03:	mov    QWORD PTR [rdi+0x18],rbp
  41bf07:	mov    QWORD PTR [rdi+0x20],rbp
  41bf0b:	lea    rcx,[rdi+0x38]
  41bf0f:	lea    rax,[rip+0xffffffffffffb79e]        # 0x4176b4
  41bf16:	mov    QWORD PTR [rsp+0x20],rax
  41bf1b:	lea    r9,[rip+0xffffffffffff2612]        # 0x40e534
  41bf22:	lea    r8d,[rbx-0x6]
  41bf26:	mov    rdx,rbx
  41bf29:	call   0x44b490
  41bf2e:	nop
  41bf2f:	mov    BYTE PTR [rdi+0x98],0x1
  41bf36:	mov    BYTE PTR [rdi+0x99],0x1
  41bf3d:	lea    rcx,[rdi+0xd0]
  41bf44:	lea    rax,[rip+0xffffffffffffb769]        # 0x4176b4
  41bf4b:	mov    QWORD PTR [rsp+0x20],rax
  41bf50:	lea    r9,[rip+0xffffffffffff25dd]        # 0x40e534
  41bf57:	lea    r8d,[rbx-0x6]
  41bf5b:	mov    rdx,rbx
  41bf5e:	call   0x44b490
  41bf63:	nop
  41bf64:	mov    QWORD PTR [rdi+0xe0],rbp
  41bf6b:	mov    QWORD PTR [rdi+0xf0],rbp
  41bf72:	mov    QWORD PTR [rdi+0xf8],rbp
  41bf79:	mov    QWORD PTR [rdi+0x100],rbp
  41bf80:	mov    QWORD PTR [rdi+0x108],rbp
  41bf87:	mov    QWORD PTR [rdi+0x130],rbp
  41bf8e:	mov    QWORD PTR [rdi+0x138],rbp
  41bf95:	mov    QWORD PTR [rdi+0x140],rbp
  41bf9c:	mov    QWORD PTR [rdi+0x148],rbp
  41bfa3:	mov    QWORD PTR [rdi+0x150],rbp
  41bfaa:	mov    QWORD PTR [rdi+0x158],rbp
  41bfb1:	mov    QWORD PTR [rdi+0x160],rbp
  41bfb8:	lea    rbx,[rdi+0x168]
  41bfbf:	mov    QWORD PTR [rsp+0x68],rbx
  41bfc4:	mov    QWORD PTR [rbx],rbp
  41bfc7:	mov    DWORD PTR [rbx+0x8],ebp
  41bfca:	mov    DWORD PTR [rbx+0xc],ebp
  41bfcd:	lea    rcx,[rbx+0x10]
  41bfd1:	call   0x402b34
  41bfd6:	nop
  41bfd7:	lea    rcx,[rbx+0x20]
  41bfdb:	call   0x403150
  41bfe0:	nop
  41bfe1:	mov    rax,rdi
  41bfe4:	add    rsp,0x40
  41bfe8:	pop    rdi
  41bfe9:	pop    rbp
  41bfea:	pop    rbx
  41bfeb:	ret    
  41bfec:	int3   
  41bfed:	int3   
  41bfee:	int3   
  41bfef:	int3   
  41bff0:	int3   
  41bff1:	int3   
  41bff2:	int3   
  41bff3:	int3   
  41bff4:	rex.W push rbp
  41bff6:	sub    rsp,0x20
  41bffa:	mov    rbp,rdx
  41bffd:	lea    r9,[rip+0xffffffffffffcfc8]        # 0x418fcc
  41c004:	mov    r8d,0x2
  41c00a:	mov    edx,0x8
  41c00f:	mov    rcx,QWORD PTR [rbp+0x60]
  41c013:	call   0x44b5f0
  41c018:	add    rsp,0x20
  41c01c:	pop    rbp
  41c01d:	ret    
  41c01e:	int3   
  41c01f:	int3   
  41c020:	int3   
  41c021:	int3   
  41c022:	int3   
  41c023:	int3   
  41c024:	rex.W push rbp
  41c026:	sub    rsp,0x20
  41c02a:	mov    rbp,rdx
  41c02d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c031:	add    rcx,0x18
  41c035:	call   0x4176b4
  41c03a:	add    rsp,0x20
  41c03e:	pop    rbp
  41c03f:	ret    
  41c040:	int3   
  41c041:	int3   
  41c042:	int3   
  41c043:	int3   
  41c044:	rex.W push rbp
  41c046:	sub    rsp,0x20
  41c04a:	mov    rbp,rdx
  41c04d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c051:	add    rcx,0x20
  41c055:	call   0x4176b4
  41c05a:	add    rsp,0x20
  41c05e:	pop    rbp
  41c05f:	ret    
  41c060:	int3   
  41c061:	int3   
  41c062:	int3   
  41c063:	int3   
  41c064:	rex.W push rbp
  41c066:	sub    rsp,0x20
  41c06a:	mov    rbp,rdx
  41c06d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c071:	add    rcx,0x38
  41c075:	lea    r9,[rip+0xffffffffffffb638]        # 0x4176b4
  41c07c:	mov    r8d,0x2
  41c082:	mov    edx,0x8
  41c087:	call   0x44b5f0
  41c08c:	add    rsp,0x20
  41c090:	pop    rbp
  41c091:	ret    
  41c092:	int3   
  41c093:	int3   
  41c094:	rex.W push rbp
  41c096:	sub    rsp,0x20
  41c09a:	mov    rbp,rdx
  41c09d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c0a1:	add    rcx,0xd0
  41c0a8:	lea    r9,[rip+0xffffffffffffb605]        # 0x4176b4
  41c0af:	mov    r8d,0x2
  41c0b5:	mov    edx,0x8
  41c0ba:	call   0x44b5f0
  41c0bf:	add    rsp,0x20
  41c0c3:	pop    rbp
  41c0c4:	ret    
  41c0c5:	int3   
  41c0c6:	int3   
  41c0c7:	int3   
  41c0c8:	int3   
  41c0c9:	int3   
  41c0ca:	int3   
  41c0cb:	int3   
  41c0cc:	int3   
  41c0cd:	int3   
  41c0ce:	int3   
  41c0cf:	int3   
  41c0d0:	int3   
  41c0d1:	int3   
  41c0d2:	int3   
  41c0d3:	int3   
  41c0d4:	rex.W push rbp
  41c0d6:	sub    rsp,0x20
  41c0da:	mov    rbp,rdx
  41c0dd:	mov    rcx,QWORD PTR [rbp+0x60]
  41c0e1:	add    rcx,0xe0
  41c0e8:	call   0x4176b4
  41c0ed:	add    rsp,0x20
  41c0f1:	pop    rbp
  41c0f2:	ret    
  41c0f3:	int3   
  41c0f4:	rex.W push rbp
  41c0f6:	sub    rsp,0x20
  41c0fa:	mov    rbp,rdx
  41c0fd:	mov    rcx,QWORD PTR [rbp+0x60]
  41c101:	add    rcx,0xf8
  41c108:	call   0x4176b4
  41c10d:	add    rsp,0x20
  41c111:	pop    rbp
  41c112:	ret    
  41c113:	int3   
  41c114:	rex.W push rbp
  41c116:	sub    rsp,0x20
  41c11a:	mov    rbp,rdx
  41c11d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c121:	add    rcx,0x138
  41c128:	call   0x417d64
  41c12d:	add    rsp,0x20
  41c131:	pop    rbp
  41c132:	ret    
  41c133:	int3   
  41c134:	rex.W push rbp
  41c136:	sub    rsp,0x20
  41c13a:	mov    rbp,rdx
  41c13d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c141:	add    rcx,0x148
  41c148:	call   0x417d64
  41c14d:	add    rsp,0x20
  41c151:	pop    rbp
  41c152:	ret    
  41c153:	int3   
  41c154:	rex.W push rbp
  41c156:	sub    rsp,0x20
  41c15a:	mov    rbp,rdx
  41c15d:	mov    rcx,QWORD PTR [rbp+0x60]
  41c161:	add    rcx,0x160
  41c168:	call   0x4176b4
  41c16d:	add    rsp,0x20
  41c171:	pop    rbp
  41c172:	ret    
  41c173:	int3   
  41c174:	rex.W push rbp
  41c176:	sub    rsp,0x20
  41c17a:	mov    rbp,rdx
  41c17d:	mov    rcx,QWORD PTR [rbp+0x68]
  41c181:	call   0x41b92c
  41c186:	add    rsp,0x20
  41c18a:	pop    rbp
  41c18b:	ret    
  41c18c:	int3   
  41c18d:	int3   
  41c18e:	int3   
  41c18f:	int3   
  41c190:	int3   
  41c191:	int3   
  41c192:	int3   
  41c193:	int3   
  41c194:	rex.W push rbp
  41c196:	sub    rsp,0x20
  41c19a:	mov    rbp,rdx
  41c19d:	mov    rcx,QWORD PTR [rbp+0x68]
  41c1a1:	add    rcx,0x10
  41c1a5:	call   0x401000
  41c1aa:	add    rsp,0x20
  41c1ae:	pop    rbp
  41c1af:	ret    
  41c1b0:	rex.W push rbx
  41c1b2:	push   rsi
  41c1b3:	push   rdi
  41c1b4:	sub    rsp,0x40
  41c1b8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  41c1c1:	mov    esi,edx
  41c1c3:	mov    rbx,rcx
  41c1c6:	xor    edi,edi
  41c1c8:	mov    QWORD PTR [rcx],rdi
  41c1cb:	mov    ecx,edx
  41c1cd:	imul   ecx,ecx,0x1a0
  41c1d3:	add    rcx,0x8
  41c1d7:	call   0x402130
  41c1dc:	mov    QWORD PTR [rsp+0x60],rax
  41c1e1:	cmp    rax,rdi
  41c1e4:	je     0x41c210
  41c1e6:	mov    DWORD PTR [rax],esi
  41c1e8:	lea    rdi,[rax+0x8]
  41c1ec:	lea    rax,[rip+0xfffffffffffff7f5]        # 0x41b9e8
  41c1f3:	mov    QWORD PTR [rsp+0x20],rax
  41c1f8:	lea    r9,[rip+0xfffffffffffffcc5]        # 0x41bec4
  41c1ff:	mov    r8d,esi
  41c202:	mov    edx,0x1a0
  41c207:	mov    rcx,rdi
  41c20a:	call   0x44b490
  41c20f:	nop
  41c210:	mov    QWORD PTR [rbx],rdi
  41c213:	mov    rax,rbx
  41c216:	add    rsp,0x40
  41c21a:	pop    rdi
  41c21b:	pop    rsi
  41c21c:	pop    rbx
  41c21d:	ret    
  41c21e:	int3   
  41c21f:	int3   
  41c220:	rex.W push rbp
  41c222:	sub    rsp,0x20
  41c226:	mov    rbp,rdx
  41c229:	mov    rcx,QWORD PTR [rbp+0x60]
  41c22d:	call   0x40215c
  41c232:	add    rsp,0x20
  41c236:	pop    rbp
  41c237:	ret    
  41c238:	rex.W push rbx
  41c23a:	sub    rsp,0x20
  41c23e:	mov    rcx,QWORD PTR [rcx]
  41c241:	test   rcx,rcx
  41c244:	je     0x41c266
  41c246:	lea    rbx,[rcx-0x8]
  41c24a:	lea    r9,[rip+0xfffffffffffff797]        # 0x41b9e8
  41c251:	mov    edx,0x1a0
  41c256:	mov    r8d,DWORD PTR [rbx]
  41c259:	call   0x44b5f0
  41c25e:	mov    rcx,rbx
  41c261:	call   0x40215c
  41c266:	add    rsp,0x20
  41c26a:	pop    rbx
  41c26b:	ret    
  41c26c:	mov    QWORD PTR [rsp+0x10],rdx
  41c271:	mov    QWORD PTR [rsp+0x8],rcx
  41c276:	push   rbx
  41c277:	push   rbp
  41c278:	push   rsi
  41c279:	push   rdi
  41c27a:	push   r12
  41c27c:	push   r13
  41c27e:	push   r14
  41c280:	push   r15
  41c282:	mov    rax,rsp
  41c285:	sub    rsp,0x128
  41c28c:	mov    QWORD PTR [rsp+0x118],0xfffffffffffffffe
  41c298:	mov    edi,r9d
  41c29b:	mov    sil,r8b
  41c29e:	mov    r13,rcx
  41c2a1:	mov    rbx,QWORD PTR [rsp+0x190]
  41c2a9:	mov    rdx,rbx
  41c2ac:	lea    rcx,[rax-0x40]
  41c2b0:	call   0x41aa40
  41c2b5:	nop
  41c2b6:	lea    rdx,[rbx+0x10]
  41c2ba:	lea    rcx,[rsp+0xf8]
  41c2c2:	call   0x402bb0
  41c2c7:	nop
  41c2c8:	lea    rdx,[rbx+0x20]
  41c2cc:	lea    rcx,[rsp+0x108]
  41c2d4:	call   0x403208
  41c2d9:	nop
  41c2da:	lea    r9,[rsp+0x40]
  41c2df:	lea    r8,[rsp+0x48]
  41c2e4:	lea    rdx,[rsp+0xf8]
  41c2ec:	mov    rcx,r13
  41c2ef:	call   0x40b9ec
  41c2f4:	test   al,al
  41c2f6:	jne    0x41c302
  41c2f8:	mov    esi,0x80004001
  41c2fd:	jmp    0x41cf80
  41c302:	mov    ebp,0x1
  41c307:	cmp    DWORD PTR [rsp+0x40],ebp
  41c30b:	je     0x41c317
  41c30d:	mov    esi,0x80070057
  41c312:	jmp    0x41cf80
  41c317:	mov    r15d,ebp
  41c31a:	mov    DWORD PTR [rsp+0x30],ebp
  41c31e:	test   sil,sil
  41c321:	je     0x41c37d
  41c323:	cmp    QWORD PTR [rsp+0x48],0x30101
  41c32c:	jne    0x41c37d
  41c32e:	lea    rdx,[rsp+0x190]
  41c336:	lea    rcx,[rsp+0xe8]
  41c33e:	call   0x41970c
  41c343:	mov    ebx,eax
  41c345:	cmp    BYTE PTR [rsp+0x190],0x0
  41c34d:	jne    0x41c368
  41c34f:	cmp    edi,ebp
  41c351:	jne    0x41c368
  41c353:	mov    r8d,ebp
  41c356:	mov    edx,0xd
  41c35b:	lea    rcx,[rsp+0xe8]
  41c363:	call   0x40db58
  41c368:	cmp    edi,ebp
  41c36a:	jbe    0x41c37d
  41c36c:	cmp    ebx,ebp
  41c36e:	jbe    0x41c37d
  41c370:	shr    edi,1
  41c372:	mov    r15d,0x2
  41c378:	mov    DWORD PTR [rsp+0x30],r15d
  41c37d:	mov    edx,edi
  41c37f:	lea    rcx,[rsp+0x38]
  41c384:	call   0x41c1b0
  41c389:	nop
  41c38a:	xor    r14d,r14d
  41c38d:	mov    rbx,QWORD PTR [rsp+0x38]
  41c392:	test   edi,edi
  41c394:	je     0x41c700
  41c39a:	lea    rbp,[rbx+0x18]
  41c39e:	xor    eax,eax
  41c3a0:	test   r14d,r14d
  41c3a3:	cmove  rax,QWORD PTR [rsp+0x1b8]
  41c3ac:	mov    QWORD PTR [rbp+0xe8],rax
  41c3b3:	mov    rax,QWORD PTR [rsp+0x1b0]
  41c3bb:	mov    QWORD PTR [rbp+0xf0],rax
  41c3c2:	mov    QWORD PTR [rsp+0x50],0x0
  41c3cb:	mov    QWORD PTR [rsp+0x58],0x0
  41c3d4:	lea    rax,[rsp+0x50]
  41c3d9:	mov    QWORD PTR [rsp+0x20],rax
  41c3de:	lea    r9,[rbp+0x8]
  41c3e2:	mov    r8b,0x1
  41c3e5:	mov    rdx,QWORD PTR [rsp+0x48]
  41c3ea:	mov    rcx,r13
  41c3ed:	call   0x40bb44
  41c3f2:	mov    esi,eax
  41c3f4:	test   eax,eax
  41c3f6:	jne    0x41c5ba
  41c3fc:	mov    rcx,QWORD PTR [rsp+0x50]
  41c401:	mov    rsi,rcx
  41c404:	test   rcx,rcx
  41c407:	je     0x41c414
  41c409:	mov    rax,QWORD PTR [rcx]
  41c40c:	call   QWORD PTR [rax+0x8]
  41c40f:	mov    rcx,QWORD PTR [rsp+0x50]
  41c414:	mov    rdx,QWORD PTR [rbp+0x0]
  41c418:	test   rdx,rdx
  41c41b:	je     0x41c42b
  41c41d:	mov    rax,QWORD PTR [rdx]
  41c420:	mov    rcx,rdx
  41c423:	call   QWORD PTR [rax+0x10]
  41c426:	mov    rcx,QWORD PTR [rsp+0x50]
  41c42b:	mov    QWORD PTR [rbp+0x0],rsi
  41c42f:	cmp    rsi,0x0
  41c433:	jne    0x41c43f
  41c435:	cmp    QWORD PTR [rbp+0x8],rsi
  41c439:	je     0x41c608
  41c43f:	mov    rdx,QWORD PTR [rsp+0x58]
  41c444:	test   rdx,rdx
  41c447:	je     0x41c457
  41c449:	mov    rax,QWORD PTR [rdx]
  41c44c:	mov    rcx,rdx
  41c44f:	call   QWORD PTR [rax+0x10]
  41c452:	mov    rcx,QWORD PTR [rsp+0x50]
  41c457:	test   rcx,rcx
  41c45a:	je     0x41c462
  41c45c:	mov    rax,QWORD PTR [rcx]
  41c45f:	call   QWORD PTR [rax+0x10]
  41c462:	mov    rcx,QWORD PTR [rsp+0x1c0]
  41c46a:	cmp    DWORD PTR [rcx+0x4],0x1e
  41c46e:	seta   al
  41c471:	mov    BYTE PTR [rbp+0x80],al
  41c477:	mov    eax,DWORD PTR [rcx+0xc]
  41c47a:	add    eax,DWORD PTR [rcx+0x8]
  41c47d:	cmp    eax,0x1e
  41c480:	seta   al
  41c483:	mov    BYTE PTR [rbp+0x81],al
  41c489:	lea    rcx,[rbp+0x60]
  41c48d:	mov    esi,0x10
  41c492:	mov    r8,rsi
  41c495:	xor    edx,edx
  41c497:	call   0x44b780
  41c49c:	lea    rcx,[rbp+0x40]
  41c4a0:	xor    edx,edx
  41c4a2:	lea    r8d,[rsi+0x10]
  41c4a6:	call   0x44b780
  41c4ab:	lea    rcx,[rbp+0x70]
  41c4af:	mov    r8,rsi
  41c4b2:	xor    edx,edx
  41c4b4:	call   0x44b780
  41c4b9:	xor    r13d,r13d
  41c4bc:	test   r15d,r15d
  41c4bf:	je     0x41c595
  41c4c5:	lea    r12,[rbp+0xb8]
  41c4cc:	mov    QWORD PTR [rsp+0x68],0x0
  41c4d5:	mov    QWORD PTR [rsp+0x70],0x0
  41c4de:	lea    rax,[rsp+0x68]
  41c4e3:	mov    QWORD PTR [rsp+0x20],rax
  41c4e8:	lea    r9,[rbp+0xc8]
  41c4ef:	xor    r8d,r8d
  41c4f2:	mov    rdx,QWORD PTR [rsp+0x48]
  41c4f7:	mov    rcx,QWORD PTR [rsp+0x170]
  41c4ff:	call   0x40bb44
  41c504:	mov    esi,eax
  41c506:	test   eax,eax
  41c508:	jne    0x41c65d
  41c50e:	mov    rcx,QWORD PTR [rsp+0x68]
  41c513:	mov    rsi,rcx
  41c516:	test   rcx,rcx
  41c519:	je     0x41c526
  41c51b:	mov    rax,QWORD PTR [rcx]
  41c51e:	call   QWORD PTR [rax+0x8]
  41c521:	mov    rcx,QWORD PTR [rsp+0x68]
  41c526:	mov    rdx,QWORD PTR [r12]
  41c52a:	test   rdx,rdx
  41c52d:	je     0x41c53d
  41c52f:	mov    rax,QWORD PTR [rdx]
  41c532:	mov    rcx,rdx
  41c535:	call   QWORD PTR [rax+0x10]
  41c538:	mov    rcx,QWORD PTR [rsp+0x68]
  41c53d:	mov    QWORD PTR [r12],rsi
  41c541:	cmp    QWORD PTR [rbp+0xc8],0x0
  41c549:	jne    0x41c554
  41c54b:	test   rsi,rsi
  41c54e:	je     0x41c6ab
  41c554:	mov    rdx,QWORD PTR [rsp+0x70]
  41c559:	test   rdx,rdx
  41c55c:	je     0x41c56c
  41c55e:	mov    rax,QWORD PTR [rdx]
  41c561:	mov    rcx,rdx
  41c564:	call   QWORD PTR [rax+0x10]
  41c567:	mov    rcx,QWORD PTR [rsp+0x68]
  41c56c:	test   rcx,rcx
  41c56f:	je     0x41c577
  41c571:	mov    rax,QWORD PTR [rcx]
  41c574:	call   QWORD PTR [rax+0x10]
  41c577:	mov    eax,0x1
  41c57c:	add    r13d,eax
  41c57f:	add    r12,0x8
  41c583:	cmp    r13d,DWORD PTR [rsp+0x30]
  41c588:	jb     0x41c4cc
  41c58e:	mov    r15d,DWORD PTR [rsp+0x30]
  41c593:	jmp    0x41c59a
  41c595:	mov    eax,0x1
  41c59a:	add    r14d,eax
  41c59d:	add    rbp,0x1a0
  41c5a4:	cmp    r14d,edi
  41c5a7:	mov    r13,QWORD PTR [rsp+0x170]
  41c5af:	jb     0x41c39e
  41c5b5:	jmp    0x41c700
  41c5ba:	mov    rcx,QWORD PTR [rsp+0x58]
  41c5bf:	test   rcx,rcx
  41c5c2:	je     0x41c5cb
  41c5c4:	mov    rax,QWORD PTR [rcx]
  41c5c7:	call   QWORD PTR [rax+0x10]
  41c5ca:	nop
  41c5cb:	mov    rcx,QWORD PTR [rsp+0x50]
  41c5d0:	test   rcx,rcx
  41c5d3:	je     0x41c5dc
  41c5d5:	mov    rax,QWORD PTR [rcx]
  41c5d8:	call   QWORD PTR [rax+0x10]
  41c5db:	nop
  41c5dc:	test   rbx,rbx
  41c5df:	je     0x41c603
  41c5e1:	lea    r9,[rip+0xfffffffffffff400]        # 0x41b9e8
  41c5e8:	mov    r8d,DWORD PTR [rbx-0x8]
  41c5ec:	mov    edx,0x1a0
  41c5f1:	mov    rcx,rbx
  41c5f4:	call   0x44b5f0
  41c5f9:	lea    rcx,[rbx-0x8]
  41c5fd:	call   0x40215c
  41c602:	nop
  41c603:	jmp    0x41cf80
  41c608:	mov    rdx,QWORD PTR [rsp+0x58]
  41c60d:	test   rdx,rdx
  41c610:	je     0x41c620
  41c612:	mov    rax,QWORD PTR [rdx]
  41c615:	mov    rcx,rdx
  41c618:	call   QWORD PTR [rax+0x10]
  41c61b:	mov    rcx,QWORD PTR [rsp+0x50]
  41c620:	test   rcx,rcx
  41c623:	je     0x41c62c
  41c625:	mov    rax,QWORD PTR [rcx]
  41c628:	call   QWORD PTR [rax+0x10]
  41c62b:	nop
  41c62c:	test   rbx,rbx
  41c62f:	je     0x41c653
  41c631:	lea    r9,[rip+0xfffffffffffff3b0]        # 0x41b9e8
  41c638:	mov    r8d,DWORD PTR [rbx-0x8]
  41c63c:	mov    edx,0x1a0
  41c641:	mov    rcx,rbx
  41c644:	call   0x44b5f0
  41c649:	lea    rcx,[rbx-0x8]
  41c64d:	call   0x40215c
  41c652:	nop
  41c653:	mov    esi,0x80004001
  41c658:	jmp    0x41cf80
  41c65d:	mov    rcx,QWORD PTR [rsp+0x70]
  41c662:	test   rcx,rcx
  41c665:	je     0x41c66e
  41c667:	mov    rax,QWORD PTR [rcx]
  41c66a:	call   QWORD PTR [rax+0x10]
  41c66d:	nop
  41c66e:	mov    rcx,QWORD PTR [rsp+0x68]
  41c673:	test   rcx,rcx
  41c676:	je     0x41c67f
  41c678:	mov    rax,QWORD PTR [rcx]
  41c67b:	call   QWORD PTR [rax+0x10]
  41c67e:	nop
  41c67f:	test   rbx,rbx
  41c682:	je     0x41c6a6
  41c684:	lea    r9,[rip+0xfffffffffffff35d]        # 0x41b9e8
  41c68b:	mov    r8d,DWORD PTR [rbx-0x8]
  41c68f:	mov    edx,0x1a0
  41c694:	mov    rcx,rbx
  41c697:	call   0x44b5f0
  41c69c:	lea    rcx,[rbx-0x8]
  41c6a0:	call   0x40215c
  41c6a5:	nop
  41c6a6:	jmp    0x41cf80
  41c6ab:	mov    rdx,QWORD PTR [rsp+0x70]
  41c6b0:	test   rdx,rdx
  41c6b3:	je     0x41c6c3
  41c6b5:	mov    rax,QWORD PTR [rdx]
  41c6b8:	mov    rcx,rdx
  41c6bb:	call   QWORD PTR [rax+0x10]
  41c6be:	mov    rcx,QWORD PTR [rsp+0x68]
  41c6c3:	test   rcx,rcx
  41c6c6:	je     0x41c6cf
  41c6c8:	mov    rax,QWORD PTR [rcx]
  41c6cb:	call   QWORD PTR [rax+0x10]
  41c6ce:	nop
  41c6cf:	test   rbx,rbx
  41c6d2:	je     0x41c6f6
  41c6d4:	lea    r9,[rip+0xfffffffffffff30d]        # 0x41b9e8
  41c6db:	mov    r8d,DWORD PTR [rbx-0x8]
  41c6df:	mov    edx,0x1a0
  41c6e4:	mov    rcx,rbx
  41c6e7:	call   0x44b5f0
  41c6ec:	lea    rcx,[rbx-0x8]
  41c6f0:	call   0x40215c
  41c6f5:	nop
  41c6f6:	mov    esi,0x80004001
  41c6fb:	jmp    0x41cf80
  41c700:	mov    DWORD PTR [rsp+0x190],0x159a55e5
  41c70b:	mov    DWORD PTR [rsp+0x194],0x1f123bb5
  41c716:	xor    r14d,r14d
  41c719:	mov    r13,QWORD PTR [rsp+0x1a0]
  41c721:	test   r13,r13
  41c724:	je     0x41c73e
  41c726:	mov    r15,QWORD PTR [rsp+0x198]
  41c72e:	mov    rdx,r15
  41c731:	mov    rcx,r13
  41c734:	call   0x44b120
  41c739:	mov    r14d,eax
  41c73c:	jmp    0x41c746
  41c73e:	mov    r15,QWORD PTR [rsp+0x198]
  41c746:	xor    r12d,r12d
  41c749:	test   edi,edi
  41c74b:	je     0x41c80b
  41c751:	lea    rbp,[rbx+0x188]
  41c758:	lea    rcx,[rbp-0x20]
  41c75c:	lea    rdx,[rsp+0xe8]
  41c764:	call   0x41b804
  41c769:	lea    rcx,[rbp-0x10]
  41c76d:	lea    rdx,[rsp+0xf8]
  41c775:	call   0x402c48
  41c77a:	lea    rdx,[rsp+0x108]
  41c782:	mov    rcx,rbp
  41c785:	call   0x4032f8
  41c78a:	mov    QWORD PTR [rbp+0x10],r15
  41c78e:	mov    QWORD PTR [rbp-0x70],r15
  41c792:	mov    QWORD PTR [rbp-0x58],r13
  41c796:	mov    DWORD PTR [rbp-0x78],r14d
  41c79a:	mov    ecx,r12d
  41c79d:	imul   rcx,rcx,0x1a0
  41c7a4:	add    rcx,rbx
  41c7a7:	lea    r9,[rsp+0x190]
  41c7af:	mov    r8d,DWORD PTR [rsp+0x1a8]
  41c7b7:	lea    rdx,[rsp+0xe8]
  41c7bf:	call   0x419870
  41c7c4:	mov    esi,eax
  41c7c6:	test   eax,eax
  41c7c8:	jne    0x41c7df
  41c7ca:	inc    r12d
  41c7cd:	add    rbp,0x1a0
  41c7d4:	cmp    r12d,edi
  41c7d7:	jb     0x41c758
  41c7dd:	jmp    0x41c80b
  41c7df:	test   rbx,rbx
  41c7e2:	je     0x41c806
  41c7e4:	lea    r9,[rip+0xfffffffffffff1fd]        # 0x41b9e8
  41c7eb:	mov    r8d,DWORD PTR [rbx-0x8]
  41c7ef:	mov    edx,0x1a0
  41c7f4:	mov    rcx,rbx
  41c7f7:	call   0x44b5f0
  41c7fc:	lea    rcx,[rbx-0x8]
  41c800:	call   0x40215c
  41c805:	nop
  41c806:	jmp    0x41cf80
  41c80b:	lea    rcx,[rsp+0x80]
  41c813:	call   0x44b0f0
  41c818:	nop
  41c819:	xor    esi,esi
  41c81b:	mov    DWORD PTR [rsp+0xa8],esi
  41c822:	lea    r14d,[rsi+0x1]
  41c826:	mov    BYTE PTR [rsp+0xac],r14b
  41c82e:	xor    r12d,r12d
  41c831:	test   edi,edi
  41c833:	je     0x41c9fb
  41c839:	lea    r14,[rbx+0x38]
  41c83d:	mov    rax,QWORD PTR [rsp+0x1c0]
  41c845:	mov    ecx,DWORD PTR [rax+0x4]
  41c848:	imul   rcx,r15
  41c84c:	mov    eax,0x10
  41c851:	cmp    rcx,rax
  41c854:	cmovb  rcx,rax
  41c858:	xor    edx,edx
  41c85a:	mov    rax,QWORD PTR [rsp+0x178]
  41c862:	div    rcx
  41c865:	test   rax,rax
  41c868:	mov    ebx,0x1
  41c86d:	cmove  rax,rbx
  41c871:	mov    QWORD PTR [r14+0x10],rax
  41c875:	mov    rbp,r14
  41c878:	lea    r15d,[rbx+0x1]
  41c87c:	mov    ecx,0x68
  41c881:	call   0x402130
  41c886:	mov    rsi,rax
  41c889:	test   rax,rax
  41c88c:	je     0x41c8b1
  41c88e:	mov    DWORD PTR [rax+0x8],0x0
  41c895:	mov    QWORD PTR [rax+0x40],0x0
  41c89d:	lea    rax,[rip+0x32cac]        # 0x44f550
  41c8a4:	mov    QWORD PTR [rsi],rax
  41c8a7:	mov    QWORD PTR [rsi+0x60],0x0
  41c8af:	jmp    0x41c8b3
  41c8b1:	xor    esi,esi
  41c8b3:	mov    QWORD PTR [rbp-0x10],rsi
  41c8b7:	test   rsi,rsi
  41c8ba:	je     0x41c8c5
  41c8bc:	mov    rax,QWORD PTR [rsi]
  41c8bf:	mov    rcx,rsi
  41c8c2:	call   QWORD PTR [rax+0x8]
  41c8c5:	mov    rcx,QWORD PTR [rbp+0x0]
  41c8c9:	test   rcx,rcx
  41c8cc:	je     0x41c8d4
  41c8ce:	mov    rax,QWORD PTR [rcx]
  41c8d1:	call   QWORD PTR [rax+0x10]
  41c8d4:	mov    QWORD PTR [rbp+0x0],rsi
  41c8d8:	lea    rax,[rsp+0x80]
  41c8e0:	mov    QWORD PTR [rsi+0x50],rax
  41c8e4:	add    rbp,0x8
  41c8e8:	sub    r15,rbx
  41c8eb:	jne    0x41c87c
  41c8ed:	mov    rbx,QWORD PTR [rsp+0x38]
  41c8f2:	test   r12d,r12d
  41c8f5:	jne    0x41c916
  41c8f7:	mov    rcx,QWORD PTR [r14-0x10]
  41c8fb:	mov    rax,QWORD PTR [rsp+0x1b8]
  41c903:	mov    QWORD PTR [rcx+0x60],rax
  41c907:	mov    eax,edi
  41c909:	mov    QWORD PTR [rcx+0x40],rax
  41c90d:	add    rcx,0x10
  41c911:	call   0x4180c0
  41c916:	mov    ebp,0x1
  41c91b:	cmp    edi,ebp
  41c91d:	jbe    0x41c94d
  41c91f:	mov    eax,r12d
  41c922:	imul   eax,eax,0x150
  41c928:	and    eax,0x7ff
  41c92d:	mov    QWORD PTR [r14+0x18],rax
  41c931:	lea    r8,[r14-0x38]
  41c935:	lea    rdx,[rip+0xffffffffffffce8c]        # 0x4197c8
  41c93c:	lea    rcx,[r14-0x38]
  41c940:	call   0x44b060
  41c945:	mov    esi,eax
  41c947:	test   eax,eax
  41c949:	jne    0x41c985
  41c94b:	jmp    0x41c95c
  41c94d:	lea    rcx,[r14-0x38]
  41c951:	call   0x419020
  41c956:	mov    esi,eax
  41c958:	test   eax,eax
  41c95a:	jne    0x41c9c0
  41c95c:	add    r12d,ebp
  41c95f:	mov    r13d,0x1a0
  41c965:	add    r14,r13
  41c968:	cmp    r12d,edi
  41c96b:	mov    r15,QWORD PTR [rsp+0x198]
  41c973:	jb     0x41c83d
  41c979:	mov    esi,DWORD PTR [rsp+0xa8]
  41c980:	mov    r14,rbp
  41c983:	jmp    0x41ca01
  41c985:	lea    rcx,[rsp+0x80]
  41c98d:	call   QWORD PTR [rip+0x30735]        # 0x44d0c8
  41c993:	nop
  41c994:	test   rbx,rbx
  41c997:	je     0x41c9bb
  41c999:	lea    r9,[rip+0xfffffffffffff048]        # 0x41b9e8
  41c9a0:	mov    r8d,DWORD PTR [rbx-0x8]
  41c9a4:	mov    edx,0x1a0
  41c9a9:	mov    rcx,rbx
  41c9ac:	call   0x44b5f0
  41c9b1:	lea    rcx,[rbx-0x8]
  41c9b5:	call   0x40215c
  41c9ba:	nop
  41c9bb:	jmp    0x41cf80
  41c9c0:	lea    rcx,[rsp+0x80]
  41c9c8:	call   QWORD PTR [rip+0x306fa]        # 0x44d0c8
  41c9ce:	nop
  41c9cf:	test   rbx,rbx
  41c9d2:	je     0x41c9f6
  41c9d4:	lea    r9,[rip+0xfffffffffffff00d]        # 0x41b9e8
  41c9db:	mov    r8d,DWORD PTR [rbx-0x8]
  41c9df:	mov    edx,0x1a0
  41c9e4:	mov    rcx,rbx
  41c9e7:	call   0x44b5f0
  41c9ec:	lea    rcx,[rbx-0x8]
  41c9f0:	call   0x40215c
  41c9f5:	nop
  41c9f6:	jmp    0x41cf80
  41c9fb:	mov    r13d,0x1a0
  41ca01:	cmp    edi,r14d
  41ca04:	jbe    0x41ca26
  41ca06:	test   edi,edi
  41ca08:	je     0x41ca26
  41ca0a:	mov    rsi,rbx
  41ca0d:	mov    ebp,edi
  41ca0f:	mov    rcx,QWORD PTR [rsi]
  41ca12:	call   0x44b050
  41ca17:	add    rsi,r13
  41ca1a:	sub    rbp,r14
  41ca1d:	jne    0x41ca0f
  41ca1f:	mov    esi,DWORD PTR [rsp+0xa8]
  41ca26:	test   esi,esi
  41ca28:	je     0x41ca63
  41ca2a:	lea    rcx,[rsp+0x80]
  41ca32:	call   QWORD PTR [rip+0x30690]        # 0x44d0c8
  41ca38:	nop
  41ca39:	test   rbx,rbx
  41ca3c:	je     0x41ca5e
  41ca3e:	lea    r9,[rip+0xffffffffffffefa3]        # 0x41b9e8
  41ca45:	mov    r8d,DWORD PTR [rbx-0x8]
  41ca49:	mov    rdx,r13
  41ca4c:	mov    rcx,rbx
  41ca4f:	call   0x44b5f0
  41ca54:	lea    rcx,[rbx-0x8]
  41ca58:	call   0x40215c
  41ca5d:	nop
  41ca5e:	jmp    0x41cf80
  41ca63:	mov    QWORD PTR [rsp+0xe0],0x0
  41ca6f:	mov    rcx,QWORD PTR [rbx+0x28]
  41ca73:	add    rcx,0x10
  41ca77:	lea    rdx,[rsp+0xb0]
  41ca7f:	call   0x4180fc
  41ca84:	xor    r11d,r11d
  41ca87:	mov    QWORD PTR [rsp+0xd0],r11
  41ca8f:	xor    ecx,ecx
  41ca91:	mov    QWORD PTR [rsp+0xd8],rcx
  41ca99:	mov    rax,QWORD PTR [rbx+0x48]
  41ca9d:	mov    QWORD PTR [rsp+0xe0],rax
  41caa5:	test   edi,edi
  41caa7:	je     0x41cad1
  41caa9:	lea    rax,[rbx+0x120]
  41cab0:	mov    edx,edi
  41cab2:	add    r11,QWORD PTR [rax-0x8]
  41cab6:	mov    QWORD PTR [rsp+0xd0],r11
  41cabe:	add    rcx,QWORD PTR [rax]
  41cac1:	mov    QWORD PTR [rsp+0xd8],rcx
  41cac9:	add    rax,r13
  41cacc:	sub    rdx,r14
  41cacf:	jne    0x41cab2
  41cad1:	mov    r12,QWORD PTR [rsp+0x1b8]
  41cad9:	mov    rax,QWORD PTR [r12]
  41cadd:	mov    r8b,r14b
  41cae0:	lea    rdx,[rsp+0xb0]
  41cae8:	mov    rcx,r12
  41caeb:	call   QWORD PTR [rax+0x8]
  41caee:	mov    esi,eax
  41caf0:	test   eax,eax
  41caf2:	je     0x41cb28
  41caf4:	lea    rcx,[rsp+0x80]
  41cafc:	call   QWORD PTR [rip+0x305c6]        # 0x44d0c8
  41cb02:	nop
  41cb03:	lea    r9,[rip+0xffffffffffffeede]        # 0x41b9e8
  41cb0a:	mov    r8d,DWORD PTR [rbx-0x8]
  41cb0e:	mov    rdx,r13
  41cb11:	mov    rcx,rbx
  41cb14:	call   0x44b5f0
  41cb19:	lea    rcx,[rbx-0x8]
  41cb1d:	call   0x40215c
  41cb22:	nop
  41cb23:	jmp    0x41cf80
  41cb28:	xor    eax,eax
  41cb2a:	mov    DWORD PTR [rsp+0xa8],eax
  41cb31:	mov    BYTE PTR [rsp+0xac],al
  41cb38:	mov    ecx,DWORD PTR [rsp+0x30]
  41cb3c:	mov    r15d,ecx
  41cb3f:	imul   r15d,edi
  41cb43:	xor    r13d,r13d
  41cb46:	test   edi,edi
  41cb48:	je     0x41cd50
  41cb4e:	lea    rbp,[rbx+0x118]
  41cb55:	lea    rsi,[rbp-0x118]
  41cb5c:	test   r13d,r13d
  41cb5f:	jne    0x41cbbf
  41cb61:	mov    rax,QWORD PTR [rsp+0x1c0]
  41cb69:	mov    ecx,DWORD PTR [rax+0x8]
  41cb6c:	imul   rcx,QWORD PTR [rbp+0x8]
  41cb71:	mov    eax,DWORD PTR [rax+0xc]
  41cb74:	imul   rax,QWORD PTR [rbp+0x0]
  41cb79:	add    rcx,rax
  41cb7c:	lea    eax,[r13+0x10]
  41cb80:	cmp    rcx,rax
  41cb83:	cmovb  rcx,rax
  41cb87:	xor    edx,edx
  41cb89:	mov    rax,QWORD PTR [rsp+0x178]
  41cb91:	div    rcx
  41cb94:	test   rax,rax
  41cb97:	cmove  rax,r14
  41cb9b:	mov    QWORD PTR [rbp-0xd0],rax
  41cba2:	mov    rcx,QWORD PTR [rbp-0xf0]
  41cba9:	mov    QWORD PTR [rcx+0x60],r12
  41cbad:	mov    eax,r15d
  41cbb0:	mov    QWORD PTR [rcx+0x40],rax
  41cbb4:	add    rcx,0x10
  41cbb8:	call   0x4180c0
  41cbbd:	jmp    0x41cbca
  41cbbf:	mov    rax,QWORD PTR [rbx+0x48]
  41cbc3:	mov    QWORD PTR [rbp-0xd0],rax
  41cbca:	mov    edx,0xd
  41cbcf:	lea    rcx,[rsp+0xe8]
  41cbd7:	call   0x40dae4
  41cbdc:	test   eax,eax
  41cbde:	js     0x41cbfa
  41cbe0:	mov    ecx,eax
  41cbe2:	mov    rax,QWORD PTR [rsp+0xe8]
  41cbea:	mov    rdx,QWORD PTR [rax+rcx*8]
  41cbee:	cmp    WORD PTR [rdx+0x8],0x13
  41cbf3:	jne    0x41cbfa
  41cbf5:	mov    eax,DWORD PTR [rdx+0x10]
  41cbf8:	jmp    0x41cbff
  41cbfa:	mov    eax,0xffffffff
  41cbff:	test   eax,eax
  41cc01:	cmovle eax,r14d
  41cc05:	mov    DWORD PTR [rbp-0x108],eax
  41cc0b:	cmp    r15d,r14d
  41cc0e:	jbe    0x41ccaa
  41cc14:	xor    r12d,r12d
  41cc17:	mov    ecx,DWORD PTR [rsp+0x30]
  41cc1b:	test   ecx,ecx
  41cc1d:	je     0x41ccc0
  41cc23:	mov    eax,r13d
  41cc26:	imul   eax,ecx
  41cc29:	mov    DWORD PTR [rsp+0x190],eax
  41cc30:	lea    r14,[rbp-0x68]
  41cc34:	test   r13d,r13d
  41cc37:	jne    0x41cc44
  41cc39:	test   r12d,r12d
  41cc3c:	jne    0x41cc44
  41cc3e:	lea    ecx,[r13+0x1]
  41cc42:	jmp    0x41cc46
  41cc44:	xor    cl,cl
  41cc46:	mov    DWORD PTR [r14-0x8],r12d
  41cc4a:	lea    r8,[r14-0x10]
  41cc4e:	mov    QWORD PTR [r8],rsi
  41cc51:	add    eax,r12d
  41cc54:	imul   eax,eax,0x150
  41cc5a:	and    eax,0x7ff
  41cc5f:	mov    QWORD PTR [r14],rax
  41cc62:	mov    BYTE PTR [r14-0x4],cl
  41cc66:	lea    rcx,[rsi+r12*8]
  41cc6a:	lea    rdx,[rip+0xffffffffffffdec7]        # 0x41ab38
  41cc71:	call   0x44b060
  41cc76:	mov    esi,eax
  41cc78:	test   eax,eax
  41cc7a:	jne    0x41cce4
  41cc7c:	inc    r12d
  41cc7f:	add    r14,0x18
  41cc83:	mov    ecx,DWORD PTR [rsp+0x30]
  41cc87:	cmp    r12d,ecx
  41cc8a:	mov    eax,DWORD PTR [rsp+0x190]
  41cc91:	lea    rsi,[rbp-0x118]
  41cc98:	jb     0x41cc34
  41cc9a:	mov    r12,QWORD PTR [rsp+0x1b8]
  41cca2:	mov    r14d,0x1
  41cca8:	jmp    0x41ccc8
  41ccaa:	xor    edx,edx
  41ccac:	mov    rcx,rsi
  41ccaf:	call   0x419fc8
  41ccb4:	mov    esi,eax
  41ccb6:	test   eax,eax
  41ccb8:	jne    0x41cd1a
  41ccba:	mov    ecx,DWORD PTR [rsp+0x30]
  41ccbe:	jmp    0x41ccc8
  41ccc0:	mov    r12,QWORD PTR [rsp+0x1b8]
  41ccc8:	add    r13d,r14d
  41cccb:	add    rbp,0x1a0
  41ccd2:	cmp    r13d,edi
  41ccd5:	jb     0x41cb55
  41ccdb:	mov    eax,DWORD PTR [rsp+0xa8]
  41cce2:	jmp    0x41cd50
  41cce4:	lea    rcx,[rsp+0x80]
  41ccec:	call   QWORD PTR [rip+0x303d6]        # 0x44d0c8
  41ccf2:	nop
  41ccf3:	lea    r9,[rip+0xffffffffffffecee]        # 0x41b9e8
  41ccfa:	mov    r8d,DWORD PTR [rbx-0x8]
  41ccfe:	mov    edx,0x1a0
  41cd03:	mov    rcx,rbx
  41cd06:	call   0x44b5f0
  41cd0b:	lea    rcx,[rbx-0x8]
  41cd0f:	call   0x40215c
  41cd14:	nop
  41cd15:	jmp    0x41cf80
  41cd1a:	lea    rcx,[rsp+0x80]
  41cd22:	call   QWORD PTR [rip+0x303a0]        # 0x44d0c8
  41cd28:	nop
  41cd29:	lea    r9,[rip+0xffffffffffffecb8]        # 0x41b9e8
  41cd30:	mov    r8d,DWORD PTR [rbx-0x8]
  41cd34:	mov    edx,0x1a0
  41cd39:	mov    rcx,rbx
  41cd3c:	call   0x44b5f0
  41cd41:	lea    rcx,[rbx-0x8]
  41cd45:	call   0x40215c
  41cd4a:	nop
  41cd4b:	jmp    0x41cf80
  41cd50:	xor    esi,esi
  41cd52:	cmp    r15d,r14d
  41cd55:	jbe    0x41ce0a
  41cd5b:	test   edi,edi
  41cd5d:	je     0x41ce02
  41cd63:	mov    rbp,rbx
  41cd66:	mov    r14d,edi
  41cd69:	lea    ebx,[rsi+0x1]
  41cd6c:	mov    r12d,0x1a0
  41cd72:	test   ecx,ecx
  41cd74:	je     0x41cdae
  41cd76:	xor    r12d,r12d
  41cd79:	mov    r13d,0xe8
  41cd7f:	mov    r15d,ecx
  41cd82:	mov    rcx,QWORD PTR [r12+rbp*1]
  41cd86:	call   0x44b050
  41cd8b:	cmp    DWORD PTR [r13+rbp*1+0x0],0x0
  41cd91:	cmovne esi,DWORD PTR [r13+rbp*1+0x0]
  41cd97:	add    r13,0x4
  41cd9b:	add    r12,0x8
  41cd9f:	sub    r15,rbx
  41cda2:	jne    0x41cd82
  41cda4:	mov    ecx,DWORD PTR [rsp+0x30]
  41cda8:	mov    r12d,0x1a0
  41cdae:	add    rbp,r12
  41cdb1:	sub    r14,rbx
  41cdb4:	jne    0x41cd72
  41cdb6:	test   esi,esi
  41cdb8:	mov    rbx,QWORD PTR [rsp+0x38]
  41cdbd:	je     0x41cdf3
  41cdbf:	lea    rcx,[rsp+0x80]
  41cdc7:	call   QWORD PTR [rip+0x302fb]        # 0x44d0c8
  41cdcd:	nop
  41cdce:	lea    r9,[rip+0xffffffffffffec13]        # 0x41b9e8
  41cdd5:	mov    r8d,DWORD PTR [rbx-0x8]
  41cdd9:	mov    rdx,r12
  41cddc:	mov    rcx,rbx
  41cddf:	call   0x44b5f0
  41cde4:	lea    rcx,[rbx-0x8]
  41cde8:	call   0x40215c
  41cded:	nop
  41cdee:	jmp    0x41cf80
  41cdf3:	mov    eax,DWORD PTR [rsp+0xa8]
  41cdfa:	mov    r14d,0x1
  41ce00:	jmp    0x41ce10
  41ce02:	mov    r12d,0x1a0
  41ce08:	jmp    0x41ce10
  41ce0a:	mov    r12d,0x1a0
  41ce10:	test   eax,eax
  41ce12:	je     0x41ce4a
  41ce14:	mov    esi,eax
  41ce16:	lea    rcx,[rsp+0x80]
  41ce1e:	call   QWORD PTR [rip+0x302a4]        # 0x44d0c8
  41ce24:	nop
  41ce25:	lea    r9,[rip+0xffffffffffffebbc]        # 0x41b9e8
  41ce2c:	mov    r8d,DWORD PTR [rbx-0x8]
  41ce30:	mov    rdx,r12
  41ce33:	mov    rcx,rbx
  41ce36:	call   0x44b5f0
  41ce3b:	lea    rcx,[rbx-0x8]
  41ce3f:	call   0x40215c
  41ce44:	nop
  41ce45:	jmp    0x41cf80
  41ce4a:	mov    rcx,QWORD PTR [rbx+0x28]
  41ce4e:	add    rcx,0x10
  41ce52:	lea    rdx,[rsp+0xb0]
  41ce5a:	call   0x4180fc
  41ce5f:	xor    r11d,r11d
  41ce62:	mov    QWORD PTR [rsp+0xd0],r11
  41ce6a:	xor    ecx,ecx
  41ce6c:	mov    QWORD PTR [rsp+0xd8],rcx
  41ce74:	mov    eax,DWORD PTR [rsp+0x30]
  41ce78:	imul   rax,QWORD PTR [rbx+0x48]
  41ce7d:	mov    QWORD PTR [rsp+0xe0],rax
  41ce85:	test   edi,edi
  41ce87:	je     0x41ceb1
  41ce89:	lea    rax,[rbx+0x120]
  41ce90:	mov    edx,edi
  41ce92:	add    r11,QWORD PTR [rax-0x8]
  41ce96:	mov    QWORD PTR [rsp+0xd0],r11
  41ce9e:	add    rcx,QWORD PTR [rax]
  41cea1:	mov    QWORD PTR [rsp+0xd8],rcx
  41cea9:	add    rax,r12
  41ceac:	sub    rdx,r14
  41ceaf:	jne    0x41ce92
  41ceb1:	mov    rdi,QWORD PTR [rsp+0x1b8]
  41ceb9:	mov    rax,QWORD PTR [rdi]
  41cebc:	xor    r8d,r8d
  41cebf:	lea    rdx,[rsp+0xb0]
  41cec7:	mov    rcx,rdi
  41ceca:	call   QWORD PTR [rax+0x10]
  41cecd:	mov    esi,eax
  41cecf:	test   eax,eax
  41ced1:	je     0x41cf04
  41ced3:	lea    rcx,[rsp+0x80]
  41cedb:	call   QWORD PTR [rip+0x301e7]        # 0x44d0c8
  41cee1:	nop
  41cee2:	lea    r9,[rip+0xffffffffffffeaff]        # 0x41b9e8
  41cee9:	mov    r8d,DWORD PTR [rbx-0x8]
  41ceed:	mov    rdx,r12
  41cef0:	mov    rcx,rbx
  41cef3:	call   0x44b5f0
  41cef8:	lea    rcx,[rbx-0x8]
  41cefc:	call   0x40215c
  41cf01:	nop
  41cf02:	jmp    0x41cf80
  41cf04:	mov    rax,QWORD PTR [rdi]
  41cf07:	mov    r8b,r14b
  41cf0a:	lea    rdx,[rsp+0xb0]
  41cf12:	mov    rcx,rdi
  41cf15:	call   QWORD PTR [rax+0x10]
  41cf18:	mov    esi,eax
  41cf1a:	test   eax,eax
  41cf1c:	je     0x41cf4f
  41cf1e:	lea    rcx,[rsp+0x80]
  41cf26:	call   QWORD PTR [rip+0x3019c]        # 0x44d0c8
  41cf2c:	nop
  41cf2d:	lea    r9,[rip+0xffffffffffffeab4]        # 0x41b9e8
  41cf34:	mov    r8d,DWORD PTR [rbx-0x8]
  41cf38:	mov    rdx,r12
  41cf3b:	mov    rcx,rbx
  41cf3e:	call   0x44b5f0
  41cf43:	lea    rcx,[rbx-0x8]
  41cf47:	call   0x40215c
  41cf4c:	nop
  41cf4d:	jmp    0x41cf80
  41cf4f:	lea    rcx,[rsp+0x80]
  41cf57:	call   QWORD PTR [rip+0x3016b]        # 0x44d0c8
  41cf5d:	nop
  41cf5e:	lea    r9,[rip+0xffffffffffffea83]        # 0x41b9e8
  41cf65:	mov    r8d,DWORD PTR [rbx-0x8]
  41cf69:	mov    rdx,r12
  41cf6c:	mov    rcx,rbx
  41cf6f:	call   0x44b5f0
  41cf74:	lea    rcx,[rbx-0x8]
  41cf78:	call   0x40215c
  41cf7d:	nop
  41cf7e:	xor    esi,esi
  41cf80:	lea    rcx,[rsp+0xe8]
  41cf88:	call   0x41b980
  41cf8d:	mov    eax,esi
  41cf8f:	add    rsp,0x128
  41cf96:	pop    r15
  41cf98:	pop    r14
  41cf9a:	pop    r13
  41cf9c:	pop    r12
  41cf9e:	pop    rdi
  41cf9f:	pop    rsi
  41cfa0:	pop    rbp
  41cfa1:	pop    rbx
  41cfa2:	ret    
  41cfa3:	int3   
  41cfa4:	int3   
  41cfa5:	int3   
  41cfa6:	int3   
  41cfa7:	int3   
  41cfa8:	int3   
  41cfa9:	int3   
  41cfaa:	int3   
  41cfab:	int3   
  41cfac:	rex.W push rbp
  41cfae:	sub    rsp,0x20
  41cfb2:	mov    rbp,rdx
  41cfb5:	lea    rcx,[rbp+0xe8]
  41cfbc:	call   0x41b92c
  41cfc1:	add    rsp,0x20
  41cfc5:	pop    rbp
  41cfc6:	ret    
  41cfc7:	int3   
  41cfc8:	int3   
  41cfc9:	int3   
  41cfca:	int3   
  41cfcb:	int3   
  41cfcc:	rex.W push rbp
  41cfce:	sub    rsp,0x20
  41cfd2:	mov    rbp,rdx
  41cfd5:	lea    rcx,[rbp+0xe8]
  41cfdc:	add    rcx,0x10
  41cfe0:	call   0x401000
  41cfe5:	add    rsp,0x20
  41cfe9:	pop    rbp
  41cfea:	ret    
  41cfeb:	int3   
  41cfec:	rex.W push rbp
  41cfee:	sub    rsp,0x20
  41cff2:	mov    rbp,rdx
  41cff5:	lea    rcx,[rbp+0xe8]
  41cffc:	call   0x41b980
  41d001:	add    rsp,0x20
  41d005:	pop    rbp
  41d006:	ret    
  41d007:	int3   
  41d008:	int3   
  41d009:	int3   
  41d00a:	int3   
  41d00b:	int3   
  41d00c:	rex.W push rbp
  41d00e:	sub    rsp,0x20
  41d012:	mov    rbp,rdx
  41d015:	lea    rcx,[rbp+0x38]
  41d019:	call   0x41c238
  41d01e:	add    rsp,0x20
  41d022:	pop    rbp
  41d023:	ret    
  41d024:	int3   
  41d025:	int3   
  41d026:	int3   
  41d027:	int3   
  41d028:	int3   
  41d029:	int3   
  41d02a:	int3   
  41d02b:	int3   
  41d02c:	rex.W push rbp
  41d02e:	sub    rsp,0x20
  41d032:	mov    rbp,rdx
  41d035:	lea    rcx,[rbp+0x50]
  41d039:	call   0x40b994
  41d03e:	add    rsp,0x20
  41d042:	pop    rbp
  41d043:	ret    
  41d044:	int3   
  41d045:	int3   
  41d046:	int3   
  41d047:	int3   
  41d048:	int3   
  41d049:	int3   
  41d04a:	int3   
  41d04b:	int3   
  41d04c:	rex.W push rbp
  41d04e:	sub    rsp,0x20
  41d052:	mov    rbp,rdx
  41d055:	lea    rcx,[rbp+0x50]
  41d059:	call   0x4176b4
  41d05e:	add    rsp,0x20
  41d062:	pop    rbp
  41d063:	ret    
  41d064:	int3   
  41d065:	int3   
  41d066:	int3   
  41d067:	int3   
  41d068:	int3   
  41d069:	int3   
  41d06a:	int3   
  41d06b:	int3   
  41d06c:	rex.W push rbp
  41d06e:	sub    rsp,0x20
  41d072:	mov    rbp,rdx
  41d075:	lea    rcx,[rbp+0x50]
  41d079:	call   0x4176b4
  41d07e:	add    rsp,0x20
  41d082:	pop    rbp
  41d083:	ret    
  41d084:	int3   
  41d085:	int3   
  41d086:	int3   
  41d087:	int3   
  41d088:	int3   
  41d089:	int3   
  41d08a:	int3   
  41d08b:	int3   
  41d08c:	rex.W push rbp
  41d08e:	sub    rsp,0x20
  41d092:	mov    rbp,rdx
  41d095:	lea    rcx,[rbp+0x50]
  41d099:	call   0x4176b4
  41d09e:	add    rsp,0x20
  41d0a2:	pop    rbp
  41d0a3:	ret    
  41d0a4:	int3   
  41d0a5:	int3   
  41d0a6:	int3   
  41d0a7:	int3   
  41d0a8:	int3   
  41d0a9:	int3   
  41d0aa:	int3   
  41d0ab:	int3   
  41d0ac:	rex.W push rbp
  41d0ae:	sub    rsp,0x20
  41d0b2:	mov    rbp,rdx
  41d0b5:	lea    rcx,[rbp+0x68]
  41d0b9:	call   0x40b994
  41d0be:	add    rsp,0x20
  41d0c2:	pop    rbp
  41d0c3:	ret    
  41d0c4:	int3   
  41d0c5:	int3   
  41d0c6:	int3   
  41d0c7:	int3   
  41d0c8:	int3   
  41d0c9:	int3   
  41d0ca:	int3   
  41d0cb:	int3   
  41d0cc:	rex.W push rbp
  41d0ce:	sub    rsp,0x20
  41d0d2:	mov    rbp,rdx
  41d0d5:	lea    rcx,[rbp+0x68]
  41d0d9:	call   0x4176b4
  41d0de:	add    rsp,0x20
  41d0e2:	pop    rbp
  41d0e3:	ret    
  41d0e4:	int3   
  41d0e5:	int3   
  41d0e6:	int3   
  41d0e7:	int3   
  41d0e8:	int3   
  41d0e9:	int3   
  41d0ea:	int3   
  41d0eb:	int3   
  41d0ec:	rex.W push rbp
  41d0ee:	sub    rsp,0x20
  41d0f2:	mov    rbp,rdx
  41d0f5:	lea    rcx,[rbp+0x68]
  41d0f9:	call   0x4176b4
  41d0fe:	add    rsp,0x20
  41d102:	pop    rbp
  41d103:	ret    
  41d104:	int3   
  41d105:	int3   
  41d106:	int3   
  41d107:	int3   
  41d108:	int3   
  41d109:	int3   
  41d10a:	int3   
  41d10b:	int3   
  41d10c:	rex.W push rbp
  41d10e:	sub    rsp,0x20
  41d112:	mov    rbp,rdx
  41d115:	lea    rcx,[rbp+0x68]
  41d119:	call   0x4176b4
  41d11e:	add    rsp,0x20
  41d122:	pop    rbp
  41d123:	ret    
  41d124:	int3   
  41d125:	int3   
  41d126:	int3   
  41d127:	int3   
  41d128:	int3   
  41d129:	int3   
  41d12a:	int3   
  41d12b:	int3   
  41d12c:	rex.W push rbp
  41d12e:	sub    rsp,0x20
  41d132:	mov    rbp,rdx
  41d135:	lea    rcx,[rbp+0x80]
  41d13c:	call   0x418438
  41d141:	add    rsp,0x20
  41d145:	pop    rbp
  41d146:	ret    
  41d147:	int3   
  41d148:	rex.W push rbx
  41d14a:	push   rbp
  41d14b:	push   rsi
  41d14c:	push   rdi
  41d14d:	push   r12
  41d14f:	push   r13
  41d151:	push   r14
  41d153:	push   r15
  41d155:	sub    rsp,0xc8
  41d15c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
  41d165:	mov    r12b,r9b
  41d168:	mov    r13d,r8d
  41d16b:	mov    r14,rdx
  41d16e:	mov    r15,rcx
  41d171:	xor    esi,esi
  41d173:	mov    ebp,esi
  41d175:	mov    rbx,QWORD PTR [rsp+0x148]
  41d17d:	lea    rdi,[rip+0x31fc8]        # 0x44f14c
  41d184:	mov    r8d,0xc
  41d18a:	mov    rdx,QWORD PTR [rdi+0xc]
  41d18e:	mov    rcx,QWORD PTR [rbx+0x58]
  41d192:	call   0x418d68
  41d197:	mov    r11d,DWORD PTR [rdi+0x4]
  41d19b:	mov    DWORD PTR [rbx+0x14],r11d
  41d19f:	mov    eax,DWORD PTR [rdi]
  41d1a1:	mov    DWORD PTR [rbx+0x10],eax
  41d1a4:	mov    eax,DWORD PTR [rdi-0x4]
  41d1a7:	mov    DWORD PTR [rbx+0xc],eax
  41d1aa:	mov    QWORD PTR [rsp+0x90],rsi
  41d1b2:	mov    DWORD PTR [rsp+0x98],esi
  41d1b9:	mov    DWORD PTR [rsp+0x9c],esi
  41d1c0:	lea    rcx,[rsp+0xa0]
  41d1c8:	call   0x402b34
  41d1cd:	nop
  41d1ce:	lea    rcx,[rsp+0xb0]
  41d1d6:	call   0x403150
  41d1db:	nop
  41d1dc:	mov    WORD PTR [rsp+0x78],si
  41d1e1:	mov    WORD PTR [rsp+0x7a],si
  41d1e6:	mov    QWORD PTR [rsp+0x80],rsi
  41d1ee:	mov    rdx,QWORD PTR [rdi+0xc]
  41d1f2:	lea    rcx,[rsp+0x78]
  41d1f7:	call   0x40b1fc
  41d1fc:	lea    rcx,[rsp+0x68]
  41d201:	call   0x403150
  41d206:	nop
  41d207:	lea    r8,[rsp+0x78]
  41d20c:	mov    rdx,rax
  41d20f:	lea    rcx,[rsp+0x90]
  41d217:	call   0x40e480
  41d21c:	mov    esi,eax
  41d21e:	mov    rcx,QWORD PTR [rsp+0x68]
  41d223:	call   0x40215c
  41d228:	test   esi,esi
  41d22a:	jne    0x41d2ff
  41d230:	mov    rcx,QWORD PTR [rsp+0x130]
  41d238:	test   r12b,r12b
  41d23b:	jne    0x41d24a
  41d23d:	mov    eax,0xc000
  41d242:	cmp    DWORD PTR [rdi-0x8],0x0
  41d246:	cmove  rcx,rax
  41d24a:	mov    eax,DWORD PTR [rdi-0xc]
  41d24d:	mov    DWORD PTR [rbx+0x78],eax
  41d250:	mov    eax,DWORD PTR [rdi-0xc]
  41d253:	mov    DWORD PTR [rbx+0x7c],eax
  41d256:	lea    rax,[rbx+0x8]
  41d25a:	mov    QWORD PTR [rsp+0x50],rax
  41d25f:	mov    QWORD PTR [rsp+0x48],rbx
  41d264:	mov    rax,QWORD PTR [rsp+0x140]
  41d26c:	mov    QWORD PTR [rsp+0x40],rax
  41d271:	mov    eax,DWORD PTR [rdi-0x8]
  41d274:	mov    DWORD PTR [rsp+0x38],eax
  41d278:	mov    rax,QWORD PTR [rsp+0x138]
  41d280:	mov    QWORD PTR [rsp+0x30],rax
  41d285:	mov    QWORD PTR [rsp+0x28],rcx
  41d28a:	lea    rax,[rsp+0x90]
  41d292:	mov    QWORD PTR [rsp+0x20],rax
  41d297:	mov    r9d,r13d
  41d29a:	xor    r8d,r8d
  41d29d:	mov    rdx,r14
  41d2a0:	mov    rcx,r15
  41d2a3:	call   0x41c26c
  41d2a8:	mov    esi,eax
  41d2aa:	cmp    eax,0x80004001
  41d2af:	jne    0x41d2c5
  41d2b1:	xor    esi,esi
  41d2b3:	cmp    BYTE PTR [rbx+0x64],sil
  41d2b7:	jne    0x41d2cb
  41d2b9:	mov    rcx,QWORD PTR [rbx+0x58]
  41d2bd:	mov    rax,QWORD PTR [rcx]
  41d2c0:	call   QWORD PTR [rax+0x8]
  41d2c3:	jmp    0x41d2cb
  41d2c5:	test   eax,eax
  41d2c7:	jne    0x41d30c
  41d2c9:	xor    esi,esi
  41d2cb:	mov    rcx,QWORD PTR [rbx+0x58]
  41d2cf:	mov    rax,QWORD PTR [rcx]
  41d2d2:	call   QWORD PTR [rax+0x8]
  41d2d5:	nop
  41d2d6:	lea    rcx,[rsp+0x78]
  41d2db:	call   0x40b028
  41d2e0:	nop
  41d2e1:	lea    rcx,[rsp+0x90]
  41d2e9:	call   0x41b980
  41d2ee:	inc    ebp
  41d2f0:	add    rdi,0x20
  41d2f4:	cmp    ebp,0x11
  41d2f7:	jb     0x41d184
  41d2fd:	jmp    0x41d328
  41d2ff:	lea    rcx,[rsp+0x78]
  41d304:	call   0x40b028
  41d309:	nop
  41d30a:	jmp    0x41d317
  41d30c:	lea    rcx,[rsp+0x78]
  41d311:	call   0x40b028
  41d316:	nop
  41d317:	lea    rcx,[rsp+0x90]
  41d31f:	call   0x41b980
  41d324:	mov    eax,esi
  41d326:	jmp    0x41d32a
  41d328:	xor    eax,eax
  41d32a:	add    rsp,0xc8
  41d331:	pop    r15
  41d333:	pop    r14
  41d335:	pop    r13
  41d337:	pop    r12
  41d339:	pop    rdi
  41d33a:	pop    rsi
  41d33b:	pop    rbp
  41d33c:	pop    rbx
  41d33d:	ret    
  41d33e:	int3   
  41d33f:	int3   
  41d340:	int3   
  41d341:	int3   
  41d342:	int3   
  41d343:	int3   
  41d344:	int3   
  41d345:	int3   
  41d346:	int3   
  41d347:	int3   
  41d348:	rex.W push rbp
  41d34a:	sub    rsp,0x20
  41d34e:	mov    rbp,rdx
  41d351:	lea    rcx,[rbp+0x90]
  41d358:	call   0x41b92c
  41d35d:	add    rsp,0x20
  41d361:	pop    rbp
  41d362:	ret    
  41d363:	int3   
  41d364:	int3   
  41d365:	int3   
  41d366:	int3   
  41d367:	int3   
  41d368:	rex.W push rbp
  41d36a:	sub    rsp,0x20
  41d36e:	mov    rbp,rdx
  41d371:	lea    rcx,[rbp+0x90]
  41d378:	add    rcx,0x10
  41d37c:	call   0x401000
  41d381:	add    rsp,0x20
  41d385:	pop    rbp
  41d386:	ret    
  41d387:	int3   
  41d388:	rex.W push rbp
  41d38a:	sub    rsp,0x20
  41d38e:	mov    rbp,rdx
  41d391:	lea    rcx,[rbp+0x90]
  41d398:	call   0x41b980
  41d39d:	add    rsp,0x20
  41d3a1:	pop    rbp
  41d3a2:	ret    
  41d3a3:	int3   
  41d3a4:	int3   
  41d3a5:	int3   
  41d3a6:	int3   
  41d3a7:	int3   
  41d3a8:	rex.W push rbp
  41d3aa:	sub    rsp,0x20
  41d3ae:	mov    rbp,rdx
  41d3b1:	lea    rcx,[rbp+0x78]
  41d3b5:	call   0x40b830
  41d3ba:	add    rsp,0x20
  41d3be:	pop    rbp
  41d3bf:	ret    
  41d3c0:	int3   
  41d3c1:	int3   
  41d3c2:	int3   
  41d3c3:	int3   
  41d3c4:	int3   
  41d3c5:	int3   
  41d3c6:	int3   
  41d3c7:	int3   
  41d3c8:	rex.W push rbp
  41d3ca:	sub    rsp,0x20
  41d3ce:	mov    rbp,rdx
  41d3d1:	lea    rcx,[rbp+0x68]
  41d3d5:	call   0x401000
  41d3da:	add    rsp,0x20
  41d3de:	pop    rbp
  41d3df:	ret    
  41d3e0:	mov    QWORD PTR [rsp+0x18],r8
  41d3e5:	mov    QWORD PTR [rsp+0x8],rcx
  41d3ea:	push   rbx
  41d3eb:	push   rbp
  41d3ec:	push   rsi
  41d3ed:	push   rdi
  41d3ee:	push   r12
  41d3f0:	push   r13
  41d3f2:	push   r14
  41d3f4:	push   r15
  41d3f6:	sub    rsp,0x2c8
  41d3fd:	mov    QWORD PTR [rsp+0x2a8],0xfffffffffffffffe
  41d409:	mov    rdi,r9
  41d40c:	mov    r15,r8
  41d40f:	mov    rsi,rdx
  41d412:	call   0x419584
  41d417:	xor    r13d,r13d
  41d41a:	cmp    al,r13b
  41d41d:	jne    0x41d428
  41d41f:	lea    eax,[r13+0x1]
  41d423:	jmp    0x41f22b
  41d428:	movabs rax,0x100000000
  41d432:	mov    QWORD PTR [rsp+0x138],rax
  41d43a:	call   0x40b70c
  41d43f:	mov    ebx,eax
  41d441:	mov    DWORD PTR [rsp+0x94],eax
  41d448:	lea    rcx,[rsp+0x138]
  41d450:	call   0x40b724
  41d455:	mov    BYTE PTR [rsp+0x79],al
  41d459:	mov    DWORD PTR [rsp+0x80],ebx
  41d460:	mov    DWORD PTR [rsp+0xe4],0x4
  41d46b:	mov    rbx,r13
  41d46e:	mov    QWORD PTR [rsp+0x88],r13
  41d476:	mov    BYTE PTR [rsp+0x71],r13b
  41d47b:	mov    QWORD PTR [rsp+0x148],r13
  41d483:	mov    DWORD PTR [rsp+0x150],r13d
  41d48b:	mov    DWORD PTR [rsp+0x154],r13d
  41d493:	lea    rcx,[rsp+0x158]
  41d49b:	call   0x402b34
  41d4a0:	nop
  41d4a1:	lea    rcx,[rsp+0x168]
  41d4a9:	call   0x403150
  41d4ae:	nop
  41d4af:	mov    QWORD PTR [rsp+0x128],r13
  41d4b7:	mov    r12,r13
  41d4ba:	mov    QWORD PTR [rsp+0x130],r13
  41d4c2:	mov    r14d,r13d
  41d4c5:	mov    ebp,0x1
  41d4ca:	cmp    DWORD PTR [rdi+0x8],r13d
  41d4ce:	jbe    0x41dc0a
  41d4d4:	mov    rax,QWORD PTR [rdi]
  41d4d7:	mov    rbx,QWORD PTR [r13+rax*1+0x0]
  41d4dc:	mov    rdx,rbx
  41d4df:	lea    rcx,[rsp+0x98]
  41d4e7:	call   0x403208
  41d4ec:	nop
  41d4ed:	mov    rcx,QWORD PTR [rsp+0x98]
  41d4f5:	call   0x40270c
  41d4fa:	lea    rdx,[rip+0x3243b]        # 0x44f93c
  41d501:	mov    rcx,QWORD PTR [rsp+0x98]
  41d509:	call   0x4027fc
  41d50e:	xor    ecx,ecx
  41d510:	cmp    al,cl
  41d512:	je     0x41d671
  41d518:	cmp    DWORD PTR [rbx+0x18],ecx
  41d51b:	je     0x41da16
  41d521:	mov    QWORD PTR [rsp+0x210],0xffffffffffffffff
  41d52d:	mov    rdx,QWORD PTR [rbx+0x10]
  41d531:	lea    rcx,[rsp+0x210]
  41d539:	call   0x40946c
  41d53e:	xor    ecx,ecx
  41d540:	cmp    al,cl
  41d542:	je     0x41da37
  41d548:	lea    rdx,[rsp+0x110]
  41d550:	lea    rcx,[rsp+0x210]
  41d558:	call   0x408cac
  41d55d:	xor    ecx,ecx
  41d55f:	cmp    al,cl
  41d561:	je     0x41da66
  41d567:	mov    eax,0x80000000
  41d56c:	mov    rbx,QWORD PTR [rsp+0x110]
  41d574:	cmp    rbx,rax
  41d577:	jae    0x41daf3
  41d57d:	cmp    rbx,rcx
  41d580:	je     0x41daf3
  41d586:	cmp    r12,rcx
  41d589:	je     0x41d595
  41d58b:	cmp    QWORD PTR [rsp+0x128],rbx
  41d593:	je     0x41d5e4
  41d595:	mov    rcx,r12
  41d598:	call   0x44ad20
  41d59d:	xor    ecx,ecx
  41d59f:	mov    QWORD PTR [rsp+0x128],rcx
  41d5a7:	mov    rcx,rbx
  41d5aa:	call   0x44ad00
  41d5af:	mov    r12,rax
  41d5b2:	mov    QWORD PTR [rsp+0x130],rax
  41d5ba:	xor    eax,eax
  41d5bc:	cmp    r12,rax
  41d5bf:	je     0x41d5d3
  41d5c1:	mov    QWORD PTR [rsp+0x128],rbx
  41d5c9:	mov    rbx,QWORD PTR [rsp+0x110]
  41d5d1:	jmp    0x41d5e4
  41d5d3:	cmp    rbx,rax
  41d5d6:	jne    0x41da95
  41d5dc:	mov    rbx,QWORD PTR [rsp+0x110]
  41d5e4:	lea    r9,[rsp+0x18c]
  41d5ec:	mov    r8d,ebx
  41d5ef:	mov    rdx,r12
  41d5f2:	lea    rcx,[rsp+0x210]
  41d5fa:	call   0x408dd4
  41d5ff:	mov    r11d,DWORD PTR [rsp+0x18c]
  41d607:	cmp    r11,QWORD PTR [rsp+0x110]
  41d60f:	jne    0x41dac4
  41d615:	xor    ecx,ecx
  41d617:	cmp    rsi,rcx
  41d61a:	je     0x41d649
  41d61c:	mov    rax,QWORD PTR [rsi]
  41d61f:	lea    rdx,[rip+0x3230a]        # 0x44f930
  41d626:	mov    rcx,rsi
  41d629:	call   QWORD PTR [rax]
  41d62b:	xor    r8d,r8d
  41d62e:	mov    rdx,QWORD PTR [rsp+0x110]
  41d636:	mov    rcx,rsi
  41d639:	call   0x41882c
  41d63e:	mov    r11,QWORD PTR [rsi]
  41d641:	mov    rcx,rsi
  41d644:	call   QWORD PTR [r11+0x8]
  41d648:	nop
  41d649:	lea    rcx,[rsp+0x210]
  41d651:	call   0x408c80
  41d656:	nop
  41d657:	mov    rcx,QWORD PTR [rsp+0x98]
  41d65f:	call   0x40215c
  41d664:	mov    rbx,QWORD PTR [rsp+0x88]
  41d66c:	jmp    0x41da00
  41d671:	mov    WORD PTR [rsp+0xe8],cx
  41d679:	mov    WORD PTR [rsp+0xea],cx
  41d681:	mov    QWORD PTR [rsp+0xf0],rcx
  41d689:	cmp    DWORD PTR [rbx+0x18],ecx
  41d68c:	je     0x41d6f1
  41d68e:	lea    rdx,[rsp+0xd8]
  41d696:	mov    rcx,QWORD PTR [rbx+0x10]
  41d69a:	call   0x403ea0
  41d69f:	mov    rcx,QWORD PTR [rsp+0xd8]
  41d6a7:	xor    edx,edx
  41d6a9:	cmp    WORD PTR [rcx],dx
  41d6ac:	jne    0x41d6e0
  41d6ae:	cmp    DWORD PTR [rbx+0x18],edx
  41d6b1:	je     0x41d6e0
  41d6b3:	mov    ecx,0xffffffff
  41d6b8:	cmp    rax,rcx
  41d6bb:	ja     0x41d6ce
  41d6bd:	mov    edx,eax
  41d6bf:	lea    rcx,[rsp+0xe8]
  41d6c7:	call   0x40b288
  41d6cc:	jmp    0x41d6f1
  41d6ce:	mov    rdx,rax
  41d6d1:	lea    rcx,[rsp+0xe8]
  41d6d9:	call   0x40b2b4
  41d6de:	jmp    0x41d6f1
  41d6e0:	lea    rdx,[rbx+0x10]
  41d6e4:	lea    rcx,[rsp+0xe8]
  41d6ec:	call   0x40b1a0
  41d6f1:	lea    rdx,[rip+0x32230]        # 0x44f928
  41d6f8:	mov    rcx,QWORD PTR [rsp+0x98]
  41d700:	call   0x4027fc
  41d705:	xor    ebx,ebx
  41d707:	cmp    al,bl
  41d709:	je     0x41d77e
  41d70b:	lea    rdx,[rip+0x32212]        # 0x44f924
  41d712:	lea    rcx,[rsp+0xa8]
  41d71a:	call   0x4031c0
  41d71f:	nop
  41d720:	lea    r8,[rsp+0xe4]
  41d728:	lea    rdx,[rsp+0xe8]
  41d730:	lea    rcx,[rsp+0xa8]
  41d738:	call   0x40d5ec
  41d73d:	mov    ebx,eax
  41d73f:	mov    rcx,QWORD PTR [rsp+0xa8]
  41d747:	call   0x40215c
  41d74c:	xor    ecx,ecx
  41d74e:	cmp    ebx,ecx
  41d750:	jne    0x41db22
  41d756:	lea    rcx,[rsp+0xe8]
  41d75e:	call   0x40b028
  41d763:	nop
  41d764:	mov    rcx,QWORD PTR [rsp+0x98]
  41d76c:	call   0x40215c
  41d771:	mov    rbx,QWORD PTR [rsp+0x88]
  41d779:	jmp    0x41da00
  41d77e:	lea    rdx,[rip+0x32197]        # 0x44f91c
  41d785:	mov    rcx,QWORD PTR [rsp+0x98]
  41d78d:	call   0x4027fc
  41d792:	cmp    al,bl
  41d794:	je     0x41d85e
  41d79a:	mov    DWORD PTR [rsp+0xe0],ebx
  41d7a1:	lea    rdx,[rip+0x3217c]        # 0x44f924
  41d7a8:	lea    rcx,[rsp+0x100]
  41d7b0:	call   0x4031c0
  41d7b5:	nop
  41d7b6:	lea    r8,[rsp+0xe0]
  41d7be:	lea    rdx,[rsp+0xe8]
  41d7c6:	lea    rcx,[rsp+0x100]
  41d7ce:	call   0x40d5ec
  41d7d3:	mov    ebx,eax
  41d7d5:	mov    rcx,QWORD PTR [rsp+0x100]
  41d7dd:	call   0x40215c
  41d7e2:	xor    ecx,ecx
  41d7e4:	cmp    ebx,ecx
  41d7e6:	jne    0x41db4c
  41d7ec:	mov    eax,DWORD PTR [rsp+0xe0]
  41d7f3:	cmp    eax,ecx
  41d7f5:	je     0x41db76
  41d7fb:	mov    rbx,rax
  41d7fe:	imul   rbx,rbx,0xf4240
  41d805:	mov    QWORD PTR [rsp+0x88],rbx
  41d80d:	cmp    rsi,rcx
  41d810:	je     0x41d83e
  41d812:	mov    rax,QWORD PTR [rsi]
  41d815:	lea    rdx,[rip+0x320f8]        # 0x44f914
  41d81c:	mov    rcx,rsi
  41d81f:	call   QWORD PTR [rax]
  41d821:	mov    edx,DWORD PTR [rsp+0xe0]
  41d828:	xor    r8d,r8d
  41d82b:	mov    rcx,rsi
  41d82e:	call   0x41882c
  41d833:	mov    r11,QWORD PTR [rsi]
  41d836:	mov    rcx,rsi
  41d839:	call   QWORD PTR [r11+0x8]
  41d83d:	nop
  41d83e:	lea    rcx,[rsp+0xe8]
  41d846:	call   0x40b028
  41d84b:	nop
  41d84c:	mov    rcx,QWORD PTR [rsp+0x98]
  41d854:	call   0x40215c
  41d859:	jmp    0x41da00
  41d85e:	lea    rdx,[rip+0x3083f]        # 0x44e0a4
  41d865:	lea    rcx,[rsp+0x98]
  41d86d:	call   0x4027bc
  41d872:	cmp    al,bl
  41d874:	je     0x41d9b4
  41d87a:	mov    rdx,QWORD PTR [rsp+0x98]
  41d882:	add    rdx,0x4
  41d886:	lea    rcx,[rsp+0x178]
  41d88e:	call   0x4031c0
  41d893:	nop
  41d894:	lea    rdx,[rip+0x2fe55]        # 0x44d6f0
  41d89b:	mov    rcx,QWORD PTR [rsp+0x178]
  41d8a3:	call   QWORD PTR [rip+0x2fa9f]        # 0x44d348
  41d8a9:	cmp    eax,ebx
  41d8ab:	jne    0x41d8e8
  41d8ad:	mov    BYTE PTR [rsp+0x71],bpl
  41d8b2:	mov    rcx,QWORD PTR [rsp+0x178]
  41d8ba:	call   0x40215c
  41d8bf:	nop
  41d8c0:	lea    rcx,[rsp+0xe8]
  41d8c8:	call   0x40b028
  41d8cd:	nop
  41d8ce:	mov    rcx,QWORD PTR [rsp+0x98]
  41d8d6:	call   0x40215c
  41d8db:	mov    rbx,QWORD PTR [rsp+0x88]
  41d8e3:	jmp    0x41da00
  41d8e8:	cmp    DWORD PTR [rsp+0x180],ebx
  41d8ef:	jne    0x41d950
  41d8f1:	cmp    WORD PTR [rsp+0xe8],0x8
  41d8fa:	jne    0x41d950
  41d8fc:	lea    rdx,[rip+0x2fded]        # 0x44d6f0
  41d903:	mov    rcx,QWORD PTR [rsp+0xf0]
  41d90b:	call   QWORD PTR [rip+0x2fa37]        # 0x44d348
  41d911:	cmp    eax,ebx
  41d913:	jne    0x41d950
  41d915:	mov    BYTE PTR [rsp+0x71],bpl
  41d91a:	mov    rcx,QWORD PTR [rsp+0x178]
  41d922:	call   0x40215c
  41d927:	nop
  41d928:	lea    rcx,[rsp+0xe8]
  41d930:	call   0x40b028
  41d935:	nop
  41d936:	mov    rcx,QWORD PTR [rsp+0x98]
  41d93e:	call   0x40215c
  41d943:	mov    rbx,QWORD PTR [rsp+0x88]
  41d94b:	jmp    0x41da00
  41d950:	lea    r9,[rsp+0x80]
  41d958:	mov    r8d,DWORD PTR [rsp+0x94]
  41d960:	lea    rdx,[rsp+0xe8]
  41d968:	lea    rcx,[rsp+0x178]
  41d970:	call   0x40d63c
  41d975:	mov    ebx,eax
  41d977:	xor    ecx,ecx
  41d979:	cmp    eax,ecx
  41d97b:	jne    0x41dba5
  41d981:	mov    rcx,QWORD PTR [rsp+0x178]
  41d989:	call   0x40215c
  41d98e:	nop
  41d98f:	lea    rcx,[rsp+0xe8]
  41d997:	call   0x40b028
  41d99c:	nop
  41d99d:	mov    rcx,QWORD PTR [rsp+0x98]
  41d9a5:	call   0x40215c
  41d9aa:	mov    rbx,QWORD PTR [rsp+0x88]
  41d9b2:	jmp    0x41da00
  41d9b4:	lea    r8,[rsp+0xe8]
  41d9bc:	lea    rdx,[rsp+0x98]
  41d9c4:	lea    rcx,[rsp+0x148]
  41d9cc:	call   0x40e480
  41d9d1:	mov    ebx,eax
  41d9d3:	xor    ecx,ecx
  41d9d5:	cmp    eax,ecx
  41d9d7:	jne    0x41dbdd
  41d9dd:	lea    rcx,[rsp+0xe8]
  41d9e5:	call   0x40b028
  41d9ea:	nop
  41d9eb:	mov    rcx,QWORD PTR [rsp+0x98]
  41d9f3:	call   0x40215c
  41d9f8:	mov    rbx,QWORD PTR [rsp+0x88]
  41da00:	add    r14d,ebp
  41da03:	add    r13,0x8
  41da07:	cmp    r14d,DWORD PTR [rdi+0x8]
  41da0b:	jae    0x41dc07
  41da11:	jmp    0x41d4d4
  41da16:	mov    rcx,QWORD PTR [rsp+0x98]
  41da1e:	call   0x40215c
  41da23:	nop
  41da24:	mov    rcx,r12
  41da27:	call   0x44ad20
  41da2c:	nop
  41da2d:	mov    ebx,0x80070057
  41da32:	jmp    0x41f1d7
  41da37:	lea    rcx,[rsp+0x210]
  41da3f:	call   0x408c80
  41da44:	nop
  41da45:	mov    rcx,QWORD PTR [rsp+0x98]
  41da4d:	call   0x40215c
  41da52:	nop
  41da53:	mov    rcx,r12
  41da56:	call   0x44ad20
  41da5b:	nop
  41da5c:	mov    ebx,0x80070057
  41da61:	jmp    0x41f1d7
  41da66:	lea    rcx,[rsp+0x210]
  41da6e:	call   0x408c80
  41da73:	nop
  41da74:	mov    rcx,QWORD PTR [rsp+0x98]
  41da7c:	call   0x40215c
  41da81:	nop
  41da82:	mov    rcx,r12
  41da85:	call   0x44ad20
  41da8a:	nop
  41da8b:	mov    ebx,0x80004005
  41da90:	jmp    0x41f1d7
  41da95:	lea    rcx,[rsp+0x210]
  41da9d:	call   0x408c80
  41daa2:	nop
  41daa3:	mov    rcx,QWORD PTR [rsp+0x98]
  41daab:	call   0x40215c
  41dab0:	nop
  41dab1:	mov    rcx,r12
  41dab4:	call   0x44ad20
  41dab9:	nop
  41daba:	mov    ebx,0x8007000e
  41dabf:	jmp    0x41f1d7
  41dac4:	lea    rcx,[rsp+0x210]
  41dacc:	call   0x408c80
  41dad1:	nop
  41dad2:	mov    rcx,QWORD PTR [rsp+0x98]
  41dada:	call   0x40215c
  41dadf:	nop
  41dae0:	mov    rcx,r12
  41dae3:	call   0x44ad20
  41dae8:	nop
  41dae9:	mov    ebx,0x80004005
  41daee:	jmp    0x41f1d7
  41daf3:	lea    rcx,[rsp+0x210]
  41dafb:	call   0x408c80
  41db00:	nop
  41db01:	mov    rcx,QWORD PTR [rsp+0x98]
  41db09:	call   0x40215c
  41db0e:	nop
  41db0f:	mov    rcx,r12
  41db12:	call   0x44ad20
  41db17:	nop
  41db18:	mov    ebx,0x80070057
  41db1d:	jmp    0x41f1d7
  41db22:	lea    rcx,[rsp+0xe8]
  41db2a:	call   0x40b028
  41db2f:	nop
  41db30:	mov    rcx,QWORD PTR [rsp+0x98]
  41db38:	call   0x40215c
  41db3d:	nop
  41db3e:	mov    rcx,r12
  41db41:	call   0x44ad20
  41db46:	nop
  41db47:	jmp    0x41f1d7
  41db4c:	lea    rcx,[rsp+0xe8]
  41db54:	call   0x40b028
  41db59:	nop
  41db5a:	mov    rcx,QWORD PTR [rsp+0x98]
  41db62:	call   0x40215c
  41db67:	nop
  41db68:	mov    rcx,r12
  41db6b:	call   0x44ad20
  41db70:	nop
  41db71:	jmp    0x41f1d7
  41db76:	lea    rcx,[rsp+0xe8]
  41db7e:	call   0x40b028
  41db83:	nop
  41db84:	mov    rcx,QWORD PTR [rsp+0x98]
  41db8c:	call   0x40215c
  41db91:	nop
  41db92:	mov    rcx,r12
  41db95:	call   0x44ad20
  41db9a:	nop
  41db9b:	mov    ebx,0x80070057
  41dba0:	jmp    0x41f1d7
  41dba5:	mov    rcx,QWORD PTR [rsp+0x178]
  41dbad:	call   0x40215c
  41dbb2:	nop
  41dbb3:	lea    rcx,[rsp+0xe8]
  41dbbb:	call   0x40b028
  41dbc0:	nop
  41dbc1:	mov    rcx,QWORD PTR [rsp+0x98]
  41dbc9:	call   0x40215c
  41dbce:	nop
  41dbcf:	mov    rcx,r12
  41dbd2:	call   0x44ad20
  41dbd7:	nop
  41dbd8:	jmp    0x41f1d7
  41dbdd:	lea    rcx,[rsp+0xe8]
  41dbe5:	call   0x40b028
  41dbea:	nop
  41dbeb:	mov    rcx,QWORD PTR [rsp+0x98]
  41dbf3:	call   0x40215c
  41dbf8:	nop
  41dbf9:	mov    rcx,r12
  41dbfc:	call   0x44ad20
  41dc01:	nop
  41dc02:	jmp    0x41f1d7
  41dc07:	xor    r13d,r13d
  41dc0a:	cmp    rsi,r13
  41dc0d:	je     0x41dc63
  41dc0f:	lea    rcx,[rsp+0xa8]
  41dc17:	call   0x402b34
  41dc1c:	nop
  41dc1d:	lea    rcx,[rsp+0xa8]
  41dc25:	call   0x418f84
  41dc2a:	mov    r11,QWORD PTR [rsi]
  41dc2d:	mov    rdx,QWORD PTR [rsp+0xa8]
  41dc35:	mov    rcx,rsi
  41dc38:	call   QWORD PTR [r11]
  41dc3b:	mov    r11,QWORD PTR [rsi]
  41dc3e:	mov    rcx,rsi
  41dc41:	call   QWORD PTR [r11+0x8]
  41dc45:	nop
  41dc46:	mov    rcx,QWORD PTR [rsp+0xa8]
  41dc4e:	call   0x40215c
  41dc53:	mov    r11,QWORD PTR [rsi]
  41dc56:	lea    rdx,[rip+0x31cab]        # 0x44f908
  41dc5d:	mov    rcx,rsi
  41dc60:	call   QWORD PTR [r11]
  41dc63:	movabs rax,0x400000000
  41dc6d:	mov    r14,rax
  41dc70:	mov    QWORD PTR [rsp+0xb8],rax
  41dc78:	cmp    rsi,r13
  41dc7b:	je     0x41de1e
  41dc81:	mov    edi,0x40
  41dc86:	cmp    rbx,r13
  41dc89:	je     0x41dca2
  41dc8b:	mov    rax,rdi
  41dc8e:	imul   rax,rax,0xf4240
  41dc95:	cmp    rbx,rax
  41dc98:	jae    0x41dca2
  41dc9a:	shr    rdi,1
  41dc9d:	cmp    rdi,rbp
  41dca0:	ja     0x41dc8b
  41dca2:	mov    rax,QWORD PTR [rsi]
  41dca5:	mov    rcx,rsi
  41dca8:	call   QWORD PTR [rax+0x10]
  41dcab:	mov    ebx,eax
  41dcad:	xor    eax,eax
  41dcaf:	cmp    ebx,eax
  41dcb1:	jne    0x41ddb7
  41dcb7:	call   QWORD PTR [rip+0x2f59b]        # 0x44d258
  41dcbd:	mov    ebx,eax
  41dcbf:	mov    rdx,rdi
  41dcc2:	imul   rdx,rdx,0xf4240
  41dcc9:	shr    rdx,0x7
  41dccd:	mov    r8d,DWORD PTR [rip+0x4a9a4]        # 0x468678
  41dcd4:	mov    ecx,eax
  41dcd6:	call   0x4185b0
  41dcdb:	mov    r15d,eax
  41dcde:	call   QWORD PTR [rip+0x2f574]        # 0x44d258
  41dce4:	mov    r11d,eax
  41dce7:	sub    r11,rbx
  41dcea:	mov    r14,r11
  41dced:	cmove  r14,rbp
  41dcf1:	mov    rax,rdi
  41dcf4:	imul   rax,rax,0x3e8
  41dcfb:	xor    edx,edx
  41dcfd:	div    r14
  41dd00:	mov    rbx,rax
  41dd03:	xor    eax,eax
  41dd05:	cmp    r11,rax
  41dd08:	jne    0x41dd1c
  41dd0a:	mov    r8,QWORD PTR [rsi]
  41dd0d:	lea    rdx,[rip+0x31bec]        # 0x44f900
  41dd14:	mov    rcx,rsi
  41dd17:	call   QWORD PTR [r8]
  41dd1a:	jmp    0x41dd39
  41dd1c:	mov    r8d,eax
  41dd1f:	cmp    r15d,0xf1541213
  41dd26:	sete   r8b
  41dd2a:	add    r8d,0x5
  41dd2e:	mov    rdx,rbx
  41dd31:	mov    rcx,rsi
  41dd34:	call   0x41882c
  41dd39:	cmp    r13d,0x3
  41dd3d:	jl     0x41ddaf
  41dd3f:	imul   rbx,rbx,0xf4240
  41dd46:	movabs rax,0x400000000
  41dd50:	mov    QWORD PTR [rsp+0xb8],rax
  41dd58:	mov    eax,0x3d0900
  41dd5d:	cmp    rbx,rax
  41dd60:	cmovb  rbx,rax
  41dd64:	movabs rax,0x4a817c800
  41dd6e:	cmp    rbx,rax
  41dd71:	jae    0x41dd9d
  41dd73:	mov    eax,DWORD PTR [rsp+0xe4]
  41dd7a:	xor    ecx,ecx
  41dd7c:	cmp    eax,ecx
  41dd7e:	je     0x41dd8e
  41dd80:	imul   rax,rbx
  41dd84:	mov    QWORD PTR [rsp+0xb8],rax
  41dd8c:	jmp    0x41dd9d
  41dd8e:	mov    rax,rbx
  41dd91:	shr    rax,0x2
  41dd95:	mov    QWORD PTR [rsp+0xb8],rax
  41dd9d:	cmp    r13d,0x8
  41dda1:	jge    0x41ddc5
  41dda3:	cmp    r14,0x3e8
  41ddaa:	jae    0x41ddc5
  41ddac:	add    rdi,rdi
  41ddaf:	add    r13d,ebp
  41ddb2:	jmp    0x41dca2
  41ddb7:	mov    rcx,r12
  41ddba:	call   0x44ad20
  41ddbf:	nop
  41ddc0:	jmp    0x41f1d7
  41ddc5:	mov    rax,QWORD PTR [rsi]
  41ddc8:	mov    rcx,rsi
  41ddcb:	call   QWORD PTR [rax+0x8]
  41ddce:	mov    r11,QWORD PTR [rsi]
  41ddd1:	mov    rcx,rsi
  41ddd4:	call   QWORD PTR [r11+0x8]
  41ddd8:	mov    eax,DWORD PTR [rsp+0x94]
  41dddf:	mov    DWORD PTR [rsp+0x28],eax
  41dde3:	lea    rax,[rip+0x31afe]        # 0x44f8e8
  41ddea:	mov    QWORD PTR [rsp+0x20],rax
  41ddef:	mov    r9,QWORD PTR [rsp+0x138]
  41ddf7:	mov    r8b,BYTE PTR [rsp+0x79]
  41ddfc:	lea    rdx,[rip+0x31add]        # 0x44f8e0
  41de03:	mov    rcx,rsi
  41de06:	call   0x418b44
  41de0b:	mov    r15,QWORD PTR [rsp+0x320]
  41de13:	mov    r14,QWORD PTR [rsp+0xb8]
  41de1b:	xor    r13d,r13d
  41de1e:	mov    eax,DWORD PTR [rsp+0x80]
  41de25:	dec    eax
  41de27:	cmp    eax,0xfff
  41de2c:	ja     0x41f210
  41de32:	mov    DWORD PTR [rsp+0x74],r13d
  41de37:	mov    edx,ebp
  41de39:	lea    rcx,[rsp+0x148]
  41de41:	call   0x40dae4
  41de46:	xor    edi,edi
  41de48:	cmp    eax,edi
  41de4a:	jl     0x41de74
  41de4c:	mov    ecx,eax
  41de4e:	mov    rax,QWORD PTR [rsp+0x148]
  41de56:	mov    rdx,QWORD PTR [rax+rcx*8]
  41de5a:	cmp    WORD PTR [rdx+0x8],0x13
  41de5f:	jne    0x41de74
  41de61:	mov    r13d,DWORD PTR [rdx+0x10]
  41de65:	mov    DWORD PTR [rsp+0x74],r13d
  41de6a:	mov    bl,bpl
  41de6d:	mov    BYTE PTR [rsp+0x72],bpl
  41de72:	jmp    0x41de7c
  41de74:	mov    bl,dil
  41de77:	mov    BYTE PTR [rsp+0x72],dil
  41de7c:	cmp    DWORD PTR [rsp+0x160],edi
  41de83:	jne    0x41de99
  41de85:	lea    rdx,[rip+0x31a4c]        # 0x44f8d8
  41de8c:	lea    rcx,[rsp+0x158]
  41de94:	call   0x402be4
  41de99:	cmp    r15,rdi
  41de9c:	je     0x41df3f
  41dea2:	mov    DWORD PTR [rsp+0xac],0x4b0
  41dead:	mov    DWORD PTR [rsp+0xb4],0x4
  41deb8:	mov    DWORD PTR [rsp+0xb0],0xbe
  41dec3:	mov    BYTE PTR [rsp+0xa8],bpl
  41decb:	lea    rcx,[rsp+0x148]
  41ded3:	call   0x4196a8
  41ded8:	lea    ecx,[rax+0x10000]
  41dede:	lea    rax,[rsp+0xa8]
  41dee6:	mov    QWORD PTR [rsp+0x50],rax
  41deeb:	mov    QWORD PTR [rsp+0x48],r15
  41def0:	mov    QWORD PTR [rsp+0x40],rsi
  41def5:	mov    DWORD PTR [rsp+0x38],0x1e
  41defd:	mov    QWORD PTR [rsp+0x30],r12
  41df02:	mov    QWORD PTR [rsp+0x28],rcx
  41df07:	lea    rax,[rsp+0x148]
  41df0f:	mov    QWORD PTR [rsp+0x20],rax
  41df14:	mov    r9d,DWORD PTR [rsp+0x80]
  41df1c:	mov    r8b,bpl
  41df1f:	mov    rdx,r14
  41df22:	mov    rcx,QWORD PTR [rsp+0x310]
  41df2a:	call   0x41c26c
  41df2f:	mov    ebx,eax
  41df31:	mov    rcx,r12
  41df34:	call   0x44ad20
  41df39:	nop
  41df3a:	jmp    0x41f1d7
  41df3f:	lea    rdx,[rsp+0x158]
  41df47:	lea    rcx,[rsp+0xc8]
  41df4f:	call   0x402bb0
  41df54:	nop
  41df55:	lea    rdx,[rip+0x31978]        # 0x44f8d4
  41df5c:	mov    rcx,QWORD PTR [rsp+0xc8]
  41df64:	call   0x402820
  41df69:	cmp    al,dil
  41df6c:	je     0x41df82
  41df6e:	lea    rdx,[rip+0x31957]        # 0x44f8cc
  41df75:	lea    rcx,[rsp+0xc8]
  41df7d:	call   0x402be4
  41df82:	lea    rdx,[rsp+0xc8]
  41df8a:	lea    rcx,[rsp+0x158]
  41df92:	call   0x402c48
  41df97:	lea    r8,[rsp+0x2b0]
  41df9f:	lea    rdx,[rsp+0xc8]
  41dfa7:	mov    rcx,QWORD PTR [rsp+0x310]
  41dfaf:	call   0x40baa0
  41dfb4:	cmp    al,dil
  41dfb7:	je     0x41e4b4
  41dfbd:	xor    r14d,r14d
  41dfc0:	cmp    rsi,r14
  41dfc3:	jne    0x41dfe3
  41dfc5:	mov    rcx,QWORD PTR [rsp+0xc8]
  41dfcd:	call   0x40215c
  41dfd2:	nop
  41dfd3:	mov    rcx,r12
  41dfd6:	call   0x44ad20
  41dfdb:	nop
  41dfdc:	mov    ebx,ebp
  41dfde:	jmp    0x41f1d7
  41dfe3:	mov    eax,0x1000000
  41dfe8:	cmp    bl,r14b
  41dfeb:	cmove  r13d,eax
  41dfef:	mov    DWORD PTR [rsp+0x74],r13d
  41dff4:	mov    DWORD PTR [rsp+0x94],0x2710
  41dfff:	mov    QWORD PTR [rsp+0xd8],r14
  41e007:	mov    r13d,r14d
  41e00a:	lea    rdi,[rip+0x3134f]        # 0x44f360
  41e011:	mov    rdx,QWORD PTR [rdi+0x10]
  41e015:	lea    rcx,[rsp+0x118]
  41e01d:	call   0x402b6c
  41e022:	nop
  41e023:	lea    rcx,[rsp+0xa8]
  41e02b:	call   0x402b34
  41e030:	nop
  41e031:	mov    dl,0x3a
  41e033:	mov    rcx,QWORD PTR [rsp+0x118]
  41e03b:	call   0x4026bc
  41e040:	mov    ebx,eax
  41e042:	cmp    eax,r14d
  41e045:	jl     0x41e07e
  41e047:	lea    edx,[rbx+0x1]
  41e04a:	add    rdx,QWORD PTR [rsp+0x118]
  41e052:	lea    rcx,[rsp+0xa8]
  41e05a:	call   0x402be4
  41e05f:	cmp    ebx,DWORD PTR [rsp+0x120]
  41e066:	jae    0x41e07e
  41e068:	mov    DWORD PTR [rsp+0x120],ebx
  41e06f:	mov    rcx,rbx
  41e072:	mov    rax,QWORD PTR [rsp+0x118]
  41e07a:	mov    BYTE PTR [rbx+rax*1],r14b
  41e07e:	mov    r9,QWORD PTR [rsp+0x118]
  41e086:	mov    rax,QWORD PTR [rsp+0xc8]
  41e08e:	mov    cl,BYTE PTR [rax]
  41e090:	lea    r8,[rax+0x1]
  41e094:	cmp    cl,r14b
  41e097:	je     0x41e0c2
  41e099:	mov    dl,BYTE PTR [r9]
  41e09c:	add    r9,rbp
  41e09f:	lea    eax,[rdx-0x41]
  41e0a2:	cmp    al,0x19
  41e0a4:	ja     0x41e0a9
  41e0a6:	add    dl,0x20
  41e0a9:	lea    eax,[rcx-0x41]
  41e0ac:	cmp    al,0x19
  41e0ae:	ja     0x41e0b3
  41e0b0:	add    cl,0x20
  41e0b3:	cmp    dl,cl
  41e0b5:	jne    0x41e0f2
  41e0b7:	mov    cl,BYTE PTR [r8]
  41e0ba:	add    r8,rbp
  41e0bd:	cmp    cl,r14b
  41e0c0:	jne    0x41e099
  41e0c2:	mov    eax,DWORD PTR [rdi+0x4]
  41e0c5:	mov    DWORD PTR [rsp+0x94],eax
  41e0cc:	lea    rax,[rdi+0x8]
  41e0d0:	mov    QWORD PTR [rsp+0xd8],rax
  41e0d8:	mov    rdx,QWORD PTR [rsp+0xa8]
  41e0e0:	mov    rcx,QWORD PTR [rsp+0x168]
  41e0e8:	call   0x402864
  41e0ed:	cmp    al,r14b
  41e0f0:	jne    0x41e120
  41e0f2:	mov    rcx,QWORD PTR [rsp+0xa8]
  41e0fa:	call   0x40215c
  41e0ff:	nop
  41e100:	mov    rcx,QWORD PTR [rsp+0x118]
  41e108:	call   0x40215c
  41e10d:	add    r13d,ebp
  41e110:	add    rdi,0x18
  41e114:	cmp    r13d,0x7
  41e118:	jb     0x41e011
  41e11e:	jmp    0x41e13b
  41e120:	mov    rcx,QWORD PTR [rsp+0xa8]
  41e128:	call   0x40215c
  41e12d:	nop
  41e12e:	mov    rcx,QWORD PTR [rsp+0x118]
  41e136:	call   0x40215c
  41e13b:	mov    rax,QWORD PTR [rsi]
  41e13e:	mov    rcx,rsi
  41e141:	call   QWORD PTR [rax+0x8]
  41e144:	mov    r11,QWORD PTR [rsi]
  41e147:	lea    rdx,[rip+0x31776]        # 0x44f8c4
  41e14e:	mov    rcx,rsi
  41e151:	call   QWORD PTR [r11]
  41e154:	mov    r13d,r14d
  41e157:	mov    edi,0xffffffff
  41e15c:	mov    r8d,DWORD PTR [rsp+0x80]
  41e164:	cmp    r13d,0x2
  41e168:	jae    0x41e16f
  41e16a:	lea    ebx,[rdi+0x2]
  41e16d:	jmp    0x41e185
  41e16f:	mov    edx,edi
  41e171:	and    edx,ebp
  41e173:	add    edx,0x2
  41e176:	mov    ecx,edi
  41e178:	shr    ecx,1
  41e17a:	shl    edx,cl
  41e17c:	mov    ebx,r8d
  41e17f:	cmp    edx,r8d
  41e182:	cmovbe ebx,edx
  41e185:	mov    edx,ebx
  41e187:	mov    r8d,0x6
  41e18d:	mov    rcx,rsi
  41e190:	call   0x41882c
  41e195:	add    r13d,ebp
  41e198:	add    edi,ebp
  41e19a:	mov    r8d,DWORD PTR [rsp+0x80]
  41e1a2:	cmp    ebx,r8d
  41e1a5:	jb     0x41e164
  41e1a7:	mov    rax,QWORD PTR [rsi]
  41e1aa:	mov    rcx,rsi
  41e1ad:	call   QWORD PTR [rax+0x8]
  41e1b0:	mov    r11,QWORD PTR [rsi]
  41e1b3:	mov    rcx,rsi
  41e1b6:	call   QWORD PTR [r11+0x8]
  41e1ba:	mov    edi,r13d
  41e1bd:	mov    QWORD PTR [rsp+0x228],rdi
  41e1c5:	mov    ecx,r13d
  41e1c8:	shl    rcx,0x3
  41e1cc:	call   0x402130
  41e1d1:	mov    rbx,rax
  41e1d4:	mov    QWORD PTR [rsp+0x118],rax
  41e1dc:	cmp    r13d,r14d
  41e1df:	jbe    0x41e1f2
  41e1e1:	mov    r8,rdi
  41e1e4:	shl    r8,0x3
  41e1e8:	xor    edx,edx
  41e1ea:	mov    rcx,rax
  41e1ed:	call   0x44b780
  41e1f2:	mov    r15,r14
  41e1f5:	mov    DWORD PTR [rsp+0x7c],r14d
  41e1fa:	cmp    DWORD PTR [rsp+0x330],r14d
  41e202:	jbe    0x41e48c
  41e208:	mov    r14d,0xa
  41e20e:	mov    ecx,r14d
  41e211:	mov    eax,ebp
  41e213:	shl    eax,cl
  41e215:	mov    DWORD PTR [rsp+0xc0],eax
  41e21c:	cmp    eax,DWORD PTR [rsp+0x74]
  41e220:	ja     0x41e3bf
  41e226:	lea    rdx,[rsp+0x100]
  41e22e:	call   0x401930
  41e233:	xor    edi,edi
  41e235:	mov    rax,rdi
  41e238:	cmp    BYTE PTR [rsp+0x100],dil
  41e240:	je     0x41e24f
  41e242:	add    rax,rbp
  41e245:	cmp    BYTE PTR [rsp+rax*1+0x100],dil
  41e24d:	jne    0x41e242
  41e24f:	mov    BYTE PTR [rsp+rax*1+0x100],0x3a
  41e257:	inc    rax
  41e25a:	mov    BYTE PTR [rsp+rax*1+0x100],0x20
  41e262:	add    rax,rbp
  41e265:	mov    BYTE PTR [rsp+rax*1+0x100],dil
  41e26d:	mov    rax,QWORD PTR [rsi]
  41e270:	lea    rdx,[rsp+0x100]
  41e278:	mov    rcx,rsi
  41e27b:	call   QWORD PTR [rax]
  41e27d:	cmp    r13d,edi
  41e280:	jbe    0x41e3a6
  41e286:	mov    edi,0xffffffff
  41e28b:	mov    QWORD PTR [rsp+0x140],rbx
  41e293:	mov    rax,QWORD PTR [rsi]
  41e296:	mov    rcx,rsi
  41e299:	call   QWORD PTR [rax+0x10]
  41e29c:	mov    DWORD PTR [rsp+0x90],eax
  41e2a3:	xor    edx,edx
  41e2a5:	cmp    eax,edx
  41e2a7:	jne    0x41e3d8
  41e2ad:	lea    eax,[rdi+0x1]
  41e2b0:	mov    DWORD PTR [rsp+0x90],eax
  41e2b7:	cmp    eax,0x2
  41e2ba:	jae    0x41e2c2
  41e2bc:	lea    r8d,[rdi+0x2]
  41e2c0:	jmp    0x41e2df
  41e2c2:	mov    eax,edi
  41e2c4:	and    eax,ebp
  41e2c6:	add    eax,0x2
  41e2c9:	shr    edi,1
  41e2cb:	mov    cl,dil
  41e2ce:	shl    eax,cl
  41e2d0:	mov    r8d,DWORD PTR [rsp+0x80]
  41e2d8:	cmp    eax,r8d
  41e2db:	cmovbe r8d,eax
  41e2df:	mov    QWORD PTR [rsp+0x88],rdx
  41e2e7:	mov    rax,rdx
  41e2ea:	cmp    r14d,0x11
  41e2ee:	cmove  rax,QWORD PTR [rsp+0xd8]
  41e2f7:	mov    QWORD PTR [rsp+0x60],rdx
  41e2fc:	mov    BYTE PTR [rsp+0x58],dl
  41e300:	mov    QWORD PTR [rsp+0x50],rdx
  41e305:	mov    QWORD PTR [rsp+0x48],rdx
  41e30a:	lea    rcx,[rsp+0x148]
  41e312:	mov    QWORD PTR [rsp+0x40],rcx
  41e317:	mov    QWORD PTR [rsp+0x38],rax
  41e31c:	mov    DWORD PTR [rsp+0x30],ebp
  41e320:	mov    eax,DWORD PTR [rsp+0x94]
  41e327:	mov    DWORD PTR [rsp+0x28],eax
  41e32b:	lea    rax,[rsp+0x88]
  41e333:	mov    QWORD PTR [rsp+0x20],rax
  41e338:	mov    r9d,DWORD PTR [rsp+0xc0]
  41e340:	mov    rdx,QWORD PTR [rsp+0xb8]
  41e348:	mov    rcx,QWORD PTR [rsp+0x310]
  41e350:	call   0x41af4c
  41e355:	mov    edi,eax
  41e357:	xor    eax,eax
  41e359:	cmp    edi,eax
  41e35b:	jne    0x41e404
  41e361:	mov    rdi,QWORD PTR [rsp+0x88]
  41e369:	mov    rdx,rdi
  41e36c:	shr    rdx,0x14
  41e370:	lea    r8d,[rax+0x6]
  41e374:	mov    rcx,rsi
  41e377:	call   0x41882c
  41e37c:	mov    rax,QWORD PTR [rsp+0x140]
  41e384:	add    QWORD PTR [rax],rdi
  41e387:	mov    edi,DWORD PTR [rsp+0x90]
  41e38e:	add    rax,0x8
  41e392:	mov    QWORD PTR [rsp+0x140],rax
  41e39a:	lea    eax,[rdi+0x1]
  41e39d:	cmp    eax,r13d
  41e3a0:	jb     0x41e293
  41e3a6:	mov    rax,QWORD PTR [rsi]
  41e3a9:	mov    rcx,rsi
  41e3ac:	call   QWORD PTR [rax+0x8]
  41e3af:	add    r15,rbp
  41e3b2:	add    r14d,ebp
  41e3b5:	cmp    r14d,0x20
  41e3b9:	jb     0x41e20e
  41e3bf:	mov    eax,DWORD PTR [rsp+0x7c]
  41e3c3:	add    eax,ebp
  41e3c5:	mov    DWORD PTR [rsp+0x7c],eax
  41e3c9:	cmp    eax,DWORD PTR [rsp+0x330]
  41e3d0:	jb     0x41e208
  41e3d6:	jmp    0x41e42b
  41e3d8:	mov    rcx,rbx
  41e3db:	call   0x40215c
  41e3e0:	nop
  41e3e1:	mov    rcx,QWORD PTR [rsp+0xc8]
  41e3e9:	call   0x40215c
  41e3ee:	nop
  41e3ef:	mov    rcx,r12
  41e3f2:	call   0x44ad20
  41e3f7:	nop
  41e3f8:	mov    ebx,DWORD PTR [rsp+0x90]
  41e3ff:	jmp    0x41f1d7
  41e404:	mov    rcx,rbx
  41e407:	call   0x40215c
  41e40c:	nop
  41e40d:	mov    rcx,QWORD PTR [rsp+0xc8]
  41e415:	call   0x40215c
  41e41a:	nop
  41e41b:	mov    rcx,r12
  41e41e:	call   0x44ad20
  41e423:	nop
  41e424:	mov    ebx,edi
  41e426:	jmp    0x41f1d7
  41e42b:	xor    r14d,r14d
  41e42e:	cmp    r15,r14
  41e431:	je     0x41e48c
  41e433:	mov    rax,QWORD PTR [rsi]
  41e436:	mov    rcx,rsi
  41e439:	call   QWORD PTR [rax+0x8]
  41e43c:	mov    r11,QWORD PTR [rsi]
  41e43f:	lea    rdx,[rip+0x31476]        # 0x44f8bc
  41e446:	mov    rcx,rsi
  41e449:	call   QWORD PTR [r11]
  41e44c:	cmp    r13d,r14d
  41e44f:	jbe    0x41e482
  41e451:	mov    rdi,rbx
  41e454:	mov    r13,QWORD PTR [rsp+0x228]
  41e45c:	xor    edx,edx
  41e45e:	mov    rax,QWORD PTR [rdi]
  41e461:	div    r15
  41e464:	shr    rax,0x14
  41e468:	mov    r8d,0x6
  41e46e:	mov    rdx,rax
  41e471:	mov    rcx,rsi
  41e474:	call   0x41882c
  41e479:	add    rdi,0x8
  41e47d:	sub    r13,rbp
  41e480:	jne    0x41e45c
  41e482:	mov    rax,QWORD PTR [rsi]
  41e485:	mov    rcx,rsi
  41e488:	call   QWORD PTR [rax+0x8]
  41e48b:	nop
  41e48c:	mov    rcx,rbx
  41e48f:	call   0x40215c
  41e494:	nop
  41e495:	mov    rcx,QWORD PTR [rsp+0xc8]
  41e49d:	call   0x40215c
  41e4a2:	nop
  41e4a3:	mov    rcx,r12
  41e4a6:	call   0x44ad20
  41e4ab:	nop
  41e4ac:	mov    ebx,r14d
  41e4af:	jmp    0x41f1d7
  41e4b4:	lea    rdx,[rip+0x313fd]        # 0x44f8b8
  41e4bb:	mov    rcx,QWORD PTR [rsp+0x158]
  41e4c3:	call   0x402820
  41e4c8:	mov    r15b,al
  41e4cb:	mov    BYTE PTR [rsp+0x70],al
  41e4cf:	mov    BYTE PTR [rsp+0x7a],dil
  41e4d4:	lea    rdx,[rip+0x313d5]        # 0x44f8b0
  41e4db:	mov    rcx,QWORD PTR [rsp+0x158]
  41e4e3:	call   0x402820
  41e4e8:	xor    edx,edx
  41e4ea:	cmp    al,dl
  41e4ec:	je     0x41e4fb
  41e4ee:	mov    BYTE PTR [rsp+0x7a],bpl
  41e4f3:	mov    r15b,bpl
  41e4f6:	mov    BYTE PTR [rsp+0x70],bpl
  41e4fb:	mov    eax,edx
  41e4fd:	mov    DWORD PTR [rsp+0xc0],edx
  41e504:	mov    edi,DWORD PTR [rsp+0x80]
  41e50b:	mov    DWORD PTR [rsp+0x7c],edi
  41e50f:	cmp    BYTE PTR [rsp+0x71],dl
  41e513:	jne    0x41e51f
  41e515:	cmp    eax,edx
  41e517:	jne    0x41f1e8
  41e51d:	jmp    0x41e559
  41e51f:	mov    edi,ebp
  41e521:	mov    DWORD PTR [rsp+0x7c],ebp
  41e525:	cmp    eax,edx
  41e527:	je     0x41e559
  41e529:	mov    ecx,DWORD PTR [rsp+0x94]
  41e530:	cmp    ecx,0x2
  41e533:	jb     0x41f1e8
  41e539:	mov    edi,ecx
  41e53b:	mov    DWORD PTR [rsp+0x7c],ecx
  41e53f:	cmp    eax,ebp
  41e541:	jne    0x41e550
  41e543:	cmp    ecx,0x4
  41e546:	jb     0x41e559
  41e548:	shr    edi,1
  41e54a:	mov    DWORD PTR [rsp+0x7c],edi
  41e54e:	jmp    0x41e559
  41e550:	cmp    ecx,0x4
  41e553:	jb     0x41f1e8
  41e559:	lea    rcx,[rip+0x31090]        # 0x44f5f0
  41e560:	mov    QWORD PTR [rsp+0x190],rcx
  41e568:	mov    BYTE PTR [rsp+0x198],dl
  41e56f:	mov    BYTE PTR [rsp+0x1f4],dl
  41e576:	mov    DWORD PTR [rsp+0x1f8],edx
  41e57d:	mov    BYTE PTR [rsp+0x1fc],dl
  41e584:	mov    QWORD PTR [rsp+0x200],rdx
  41e58c:	mov    DWORD PTR [rsp+0x208],ebp
  41e593:	mov    DWORD PTR [rsp+0x20c],ebp
  41e59a:	mov    QWORD PTR [rsp+0x1a8],rdx
  41e5a2:	mov    QWORD PTR [rsp+0x1b0],rdx
  41e5aa:	mov    QWORD PTR [rsp+0x1b8],rdx
  41e5b2:	mov    QWORD PTR [rsp+0x1c0],rdx
  41e5ba:	mov    QWORD PTR [rsp+0x1c8],rdx
  41e5c2:	mov    QWORD PTR [rsp+0x1d0],rdx
  41e5ca:	mov    QWORD PTR [rsp+0x1d8],rdx
  41e5d2:	mov    QWORD PTR [rsp+0x1e0],rdx
  41e5da:	mov    QWORD PTR [rsp+0x1e8],rsi
  41e5e2:	cmp    eax,edx
  41e5e4:	jbe    0x41e5fb
  41e5e6:	mov    rax,QWORD PTR [rsi]
  41e5e9:	mov    rcx,rsi
  41e5ec:	call   QWORD PTR [rax+0x8]
  41e5ef:	mov    r11,QWORD PTR [rsi]
  41e5f2:	mov    rcx,rsi
  41e5f5:	call   QWORD PTR [r11+0x8]
  41e5f9:	xor    edx,edx
  41e5fb:	cmp    bl,dl
  41e5fd:	jne    0x41e68b
  41e603:	mov    al,r15b
  41e606:	neg    al
  41e608:	sbb    r11d,r11d
  41e60b:	add    r11d,0x19
  41e60f:	mov    ebx,r11d
  41e612:	cmp    BYTE PTR [rsp+0x79],dl
  41e616:	je     0x41e64e
  41e618:	cmp    r11d,0x12
  41e61c:	jbe    0x41e64e
  41e61e:	mov    r12d,0xffffffff
  41e624:	mov    ecx,ebx
  41e626:	mov    edx,ebp
  41e628:	shl    edx,cl
  41e62a:	mov    r8b,r15b
  41e62d:	mov    ecx,edi
  41e62f:	call   0x418440
  41e634:	add    rax,0x800000
  41e63a:	cmp    rax,QWORD PTR [rsp+0x138]
  41e642:	jbe    0x41e64c
  41e644:	add    ebx,r12d
  41e647:	cmp    ebx,0x12
  41e64a:	ja     0x41e624
  41e64c:	xor    edx,edx
  41e64e:	mov    ecx,ebx
  41e650:	mov    r13d,ebp
  41e653:	shl    r13d,cl
  41e656:	mov    DWORD PTR [rsp+0x74],r13d
  41e65b:	cmp    r15b,dl
  41e65e:	je     0x41e68b
  41e660:	cmp    ebx,r11d
  41e663:	je     0x41e68b
  41e665:	mov    rax,QWORD PTR [rsi]
  41e668:	lea    rdx,[rip+0x31229]        # 0x44f898
  41e66f:	mov    rcx,rsi
  41e672:	call   QWORD PTR [rax]
  41e674:	mov    edx,ebx
  41e676:	mov    r8d,ebp
  41e679:	mov    rcx,rsi
  41e67c:	call   0x41882c
  41e681:	mov    r11,QWORD PTR [rsi]
  41e684:	mov    rcx,rsi
  41e687:	call   QWORD PTR [r11+0x8]
  41e68b:	mov    r8b,r15b
  41e68e:	mov    edx,r13d
  41e691:	mov    ecx,edi
  41e693:	call   0x418440
  41e698:	mov    r9,rax
  41e69b:	mov    DWORD PTR [rsp+0x28],edi
  41e69f:	lea    rax,[rip+0x311da]        # 0x44f880
  41e6a6:	mov    QWORD PTR [rsp+0x20],rax
  41e6ab:	mov    r8b,bpl
  41e6ae:	lea    rdx,[rip+0x311bf]        # 0x44f874
  41e6b5:	mov    rcx,rsi
  41e6b8:	call   0x418b44
  41e6bd:	mov    r11,QWORD PTR [rsi]
  41e6c0:	mov    rcx,rsi
  41e6c3:	call   QWORD PTR [r11+0x8]
  41e6c7:	xor    ecx,ecx
  41e6c9:	cmp    r15b,cl
  41e6cc:	je     0x41e6e3
  41e6ce:	lea    r8d,[rcx+0xc]
  41e6d2:	mov    DWORD PTR [rsp+0x1f8],r8d
  41e6da:	mov    r15b,cl
  41e6dd:	mov    BYTE PTR [rsp+0x78],cl
  41e6e1:	jmp    0x41e6f9
  41e6e3:	mov    r8d,0x4
  41e6e9:	mov    DWORD PTR [rsp+0x1f8],r8d
  41e6f1:	mov    r15b,bpl
  41e6f4:	mov    BYTE PTR [rsp+0x78],bpl
  41e6f9:	mov    BYTE PTR [rsp+0x1f4],r15b
  41e701:	movzx  edi,cl
  41e704:	cmp    BYTE PTR [rsp+0x70],cl
  41e708:	cmovne edi,ebp
  41e70b:	mov    DWORD PTR [rsp+0x90],edi
  41e712:	mov    ebx,0x1e
  41e717:	lea    eax,[rbx+0xc]
  41e71a:	cmp    dil,cl
  41e71d:	cmovne ebx,eax
  41e720:	mov    DWORD PTR [rsp+0x188],ebx
  41e727:	cmp    r15b,cl
  41e72a:	je     0x41e76a
  41e72c:	mov    dl,0x20
  41e72e:	mov    rcx,rsi
  41e731:	call   0x418898
  41e736:	mov    r8d,ebx
  41e739:	lea    rdx,[rip+0x31128]        # 0x44f868
  41e740:	mov    rcx,rsi
  41e743:	call   0x418dac
  41e748:	mov    r11,QWORD PTR [rsi]
  41e74b:	mov    rdx,QWORD PTR [rip+0x49f2e]        # 0x468680
  41e752:	mov    rcx,rsi
  41e755:	call   QWORD PTR [r11]
  41e758:	mov    r8d,ebx
  41e75b:	lea    rdx,[rip+0x310f6]        # 0x44f858
  41e762:	mov    rcx,rsi
  41e765:	call   0x418dac
  41e76a:	mov    rax,QWORD PTR [rsi]
  41e76d:	mov    rcx,rsi
  41e770:	call   QWORD PTR [rax+0x8]
  41e773:	lea    rax,[rip+0x310d2]        # 0x44f84c
  41e77a:	lea    rdx,[rip+0x310c3]        # 0x44f844
  41e781:	xor    r12d,r12d
  41e784:	cmp    BYTE PTR [rsp+0x70],r12b
  41e789:	cmovne rdx,rax
  41e78d:	mov    r8d,DWORD PTR [rsp+0x1f8]
  41e795:	mov    rcx,rsi
  41e798:	call   0x418d68
  41e79d:	mov    ebx,r12d
  41e7a0:	mov    r8d,0xa
  41e7a6:	lea    rdx,[rip+0x3108f]        # 0x44f83c
  41e7ad:	mov    rcx,rsi
  41e7b0:	call   0x418dac
  41e7b5:	mov    r8d,0x6
  41e7bb:	lea    rdx,[rip+0x31072]        # 0x44f834
  41e7c2:	mov    rcx,rsi
  41e7c5:	call   0x418dac
  41e7ca:	mov    r8d,0x7
  41e7d0:	lea    rdx,[rip+0x31059]        # 0x44f830
  41e7d7:	mov    rcx,rsi
  41e7da:	call   0x418dac
  41e7df:	mov    r8d,0x7
  41e7e5:	lea    rdx,[rip+0x3103c]        # 0x44f828
  41e7ec:	mov    rcx,rsi
  41e7ef:	call   0x418dac
  41e7f4:	cmp    dil,r12b
  41e7f7:	je     0x41e823
  41e7f9:	mov    r8d,0x6
  41e7ff:	lea    rdx,[rip+0x3101e]        # 0x44f824
  41e806:	mov    rcx,rsi
  41e809:	call   0x418dac
  41e80e:	mov    r8d,0x6
  41e814:	lea    rdx,[rip+0x31001]        # 0x44f81c
  41e81b:	mov    rcx,rsi
  41e81e:	call   0x418dac
  41e823:	cmp    r15b,r12b
  41e826:	je     0x41e847
  41e828:	cmp    ebx,r12d
  41e82b:	jne    0x41e83c
  41e82d:	mov    rax,QWORD PTR [rsi]
  41e830:	mov    rdx,QWORD PTR [rip+0x49e49]        # 0x468680
  41e837:	mov    rcx,rsi
  41e83a:	call   QWORD PTR [rax]
  41e83c:	add    ebx,ebp
  41e83e:	cmp    ebx,0x2
  41e841:	jl     0x41e7a0
  41e847:	mov    rax,QWORD PTR [rsi]
  41e84a:	mov    rcx,rsi
  41e84d:	call   QWORD PTR [rax+0x8]
  41e850:	mov    r8d,DWORD PTR [rsp+0x1f8]
  41e858:	mov    dl,0x20
  41e85a:	mov    rcx,rsi
  41e85d:	call   0x418898
  41e862:	xor    r13d,r13d
  41e865:	mov    ebx,r13d
  41e868:	mov    r12,QWORD PTR [rsp+0x130]
  41e870:	mov    r8d,0xa
  41e876:	lea    rdx,[rip+0x30f97]        # 0x44f814
  41e87d:	mov    rcx,rsi
  41e880:	call   0x418dac
  41e885:	mov    r8d,0x6
  41e88b:	lea    rdx,[rip+0x30f7e]        # 0x44f810
  41e892:	mov    rcx,rsi
  41e895:	call   0x418dac
  41e89a:	mov    r8d,0x7
  41e8a0:	lea    rdx,[rip+0x30f61]        # 0x44f808
  41e8a7:	mov    rcx,rsi
  41e8aa:	call   0x418dac
  41e8af:	mov    r8d,0x7
  41e8b5:	lea    rdx,[rip+0x30f4c]        # 0x44f808
  41e8bc:	mov    rcx,rsi
  41e8bf:	call   0x418dac
  41e8c4:	cmp    dil,r13b
  41e8c7:	je     0x41e8f3
  41e8c9:	mov    r8d,0x6
  41e8cf:	lea    rdx,[rip+0x30f3a]        # 0x44f810
  41e8d6:	mov    rcx,rsi
  41e8d9:	call   0x418dac
  41e8de:	mov    r8d,0x6
  41e8e4:	lea    rdx,[rip+0x30f25]        # 0x44f810
  41e8eb:	mov    rcx,rsi
  41e8ee:	call   0x418dac
  41e8f3:	cmp    r15b,r13b
  41e8f6:	je     0x41e917
  41e8f8:	cmp    ebx,r13d
  41e8fb:	jne    0x41e90c
  41e8fd:	mov    rax,QWORD PTR [rsi]
  41e900:	mov    rdx,QWORD PTR [rip+0x49d79]        # 0x468680
  41e907:	mov    rcx,rsi
  41e90a:	call   QWORD PTR [rax]
  41e90c:	add    ebx,ebp
  41e90e:	cmp    ebx,0x2
  41e911:	jl     0x41e870
  41e917:	mov    rax,QWORD PTR [rsi]
  41e91a:	mov    rcx,rsi
  41e91d:	call   QWORD PTR [rax+0x8]
  41e920:	mov    r11,QWORD PTR [rsi]
  41e923:	mov    rcx,rsi
  41e926:	call   QWORD PTR [r11+0x8]
  41e92a:	xor    edi,edi
  41e92c:	mov    r15,rdi
  41e92f:	mov    rbx,QWORD PTR [rsp+0x88]
  41e937:	cmp    rbx,rdi
  41e93a:	cmovne r15,rbx
  41e93e:	mov    QWORD PTR [rsp+0xd8],r15
  41e946:	cmp    BYTE PTR [rsp+0x70],dil
  41e94b:	mov    r13d,DWORD PTR [rsp+0x74]
  41e950:	je     0x41ec07
  41e956:	mov    r13d,edi
  41e959:	cmp    DWORD PTR [rsp+0x330],edi
  41e960:	jbe    0x41ef77
  41e966:	cmp    r13d,edi
  41e969:	je     0x41e974
  41e96b:	mov    rax,QWORD PTR [rsi]
  41e96e:	mov    rcx,rsi
  41e971:	call   QWORD PTR [rax+0x8]
  41e974:	mov    r8d,0xc
  41e97a:	lea    rdx,[rip+0x30e83]        # 0x44f804
  41e981:	mov    rcx,rsi
  41e984:	call   0x418d68
  41e989:	cmp    edi,0x2
  41e98c:	je     0x41e99b
  41e98e:	xor    r15d,r15d
  41e991:	cmp    rbx,r15
  41e994:	jne    0x41e99e
  41e996:	mov    r9b,r15b
  41e999:	jmp    0x41e9a1
  41e99b:	xor    r15d,r15d
  41e99e:	mov    r9b,bpl
  41e9a1:	lea    rax,[rsp+0x228]
  41e9a9:	mov    QWORD PTR [rsp+0x30],rax
  41e9ae:	lea    rax,[rsp+0xd8]
  41e9b6:	mov    QWORD PTR [rsp+0x28],rax
  41e9bb:	mov    QWORD PTR [rsp+0x20],rbx
  41e9c0:	mov    r8,rsi
  41e9c3:	mov    edx,DWORD PTR [rsp+0x7c]
  41e9c7:	mov    rcx,r14
  41e9ca:	call   0x41ac60
  41e9cf:	mov    ebx,eax
  41e9d1:	cmp    eax,r15d
  41e9d4:	jne    0x41f10f
  41e9da:	mov    rcx,QWORD PTR [rsp+0x1e8]
  41e9e2:	mov    rax,QWORD PTR [rcx]
  41e9e5:	call   QWORD PTR [rax+0x8]
  41e9e8:	mov    r15,QWORD PTR [rsp+0xd8]
  41e9f0:	mov    rbx,QWORD PTR [rsp+0x88]
  41e9f8:	xor    edx,edx
  41e9fa:	cmp    rbx,rdx
  41e9fd:	cmovne r15,rbx
  41ea01:	mov    QWORD PTR [rsp+0xd8],r15
  41ea09:	cmp    edi,0x2
  41ea0c:	jne    0x41ea7b
  41ea0e:	cmp    rbx,rdx
  41ea11:	setne  cl
  41ea14:	mov    rax,r15
  41ea17:	movabs r8,0x400000000
  41ea21:	mov    r14,r8
  41ea24:	mov    QWORD PTR [rsp+0xb8],r8
  41ea2c:	mov    r8d,0x3d0900
  41ea32:	cmp    r15,r8
  41ea35:	jae    0x41ea3d
  41ea37:	cmp    cl,dl
  41ea39:	cmove  rax,r8
  41ea3d:	movabs r8,0x4a817c800
  41ea47:	cmp    rax,r8
  41ea4a:	jb     0x41ea50
  41ea4c:	cmp    cl,dl
  41ea4e:	je     0x41ea7b
  41ea50:	mov    ecx,DWORD PTR [rsp+0xe4]
  41ea57:	cmp    ecx,edx
  41ea59:	je     0x41ea6c
  41ea5b:	mov    r14,rcx
  41ea5e:	imul   r14,rax
  41ea62:	mov    QWORD PTR [rsp+0xb8],r14
  41ea6a:	jmp    0x41ea7b
  41ea6c:	mov    r14,rax
  41ea6f:	shr    r14,0x2
  41ea73:	mov    QWORD PTR [rsp+0xb8],r14
  41ea7b:	add    edi,ebp
  41ea7d:	cmp    edi,0x3
  41ea80:	jb     0x41e974
  41ea86:	mov    rcx,QWORD PTR [rsp+0x1e8]
  41ea8e:	mov    rax,QWORD PTR [rcx]
  41ea91:	call   QWORD PTR [rax+0x8]
  41ea94:	mov    BYTE PTR [rsp+0x1fc],bpl
  41ea9c:	mov    QWORD PTR [rsp+0x200],r15
  41eaa4:	xor    ecx,ecx
  41eaa6:	cmp    BYTE PTR [rsp+0x7a],cl
  41eaaa:	jne    0x41eb10
  41eaac:	cmp    BYTE PTR [rsp+0x72],cl
  41eab0:	jne    0x41eabc
  41eab2:	cmp    r12,rcx
  41eab5:	jne    0x41eabc
  41eab7:	mov    r9b,cl
  41eaba:	jmp    0x41eabf
  41eabc:	mov    r9b,bpl
  41eabf:	mov    eax,DWORD PTR [rsp+0x74]
  41eac3:	cmp    r12,rcx
  41eac6:	cmovne rax,QWORD PTR [rsp+0x128]
  41eacf:	lea    rcx,[rsp+0x190]
  41ead7:	mov    QWORD PTR [rsp+0x38],rcx
  41eadc:	mov    QWORD PTR [rsp+0x30],rsi
  41eae1:	mov    QWORD PTR [rsp+0x28],r12
  41eae6:	mov    QWORD PTR [rsp+0x20],rax
  41eaeb:	mov    edi,DWORD PTR [rsp+0x7c]
  41eaef:	mov    r8d,edi
  41eaf2:	mov    rdx,r14
  41eaf5:	mov    rcx,QWORD PTR [rsp+0x310]
  41eafd:	call   0x41d148
  41eb02:	mov    ebx,eax
  41eb04:	xor    eax,eax
  41eb06:	cmp    ebx,eax
  41eb08:	jne    0x41f12b
  41eb0e:	jmp    0x41eb14
  41eb10:	mov    edi,DWORD PTR [rsp+0x7c]
  41eb14:	mov    QWORD PTR [rsp+0x40],r15
  41eb19:	mov    BYTE PTR [rsp+0x38],bpl
  41eb1e:	lea    rax,[rsp+0x1a8]
  41eb26:	mov    QWORD PTR [rsp+0x30],rax
  41eb2b:	lea    rax,[rsp+0x190]
  41eb33:	mov    QWORD PTR [rsp+0x28],rax
  41eb38:	mov    QWORD PTR [rsp+0x20],rsi
  41eb3d:	mov    r9d,0x20000
  41eb43:	mov    r8d,edi
  41eb46:	mov    rdx,r14
  41eb49:	mov    rcx,QWORD PTR [rsp+0x310]
  41eb51:	call   0x41bc38
  41eb56:	mov    ebx,eax
  41eb58:	xor    eax,eax
  41eb5a:	cmp    ebx,eax
  41eb5c:	jne    0x41f147
  41eb62:	mov    rcx,QWORD PTR [rsp+0x1e8]
  41eb6a:	mov    rax,QWORD PTR [rcx]
  41eb6d:	call   QWORD PTR [rax+0x8]
  41eb70:	mov    r8d,0xc
  41eb76:	lea    rdx,[rip+0x30c87]        # 0x44f804
  41eb7d:	mov    rcx,rsi
  41eb80:	call   0x418d68
  41eb85:	mov    QWORD PTR [rsp+0x118],r15
  41eb8d:	mov    rax,QWORD PTR [rsp+0x88]
  41eb95:	xor    ecx,ecx
  41eb97:	cmp    rax,rcx
  41eb9a:	setne  r9b
  41eb9e:	lea    rcx,[rsp+0x140]
  41eba6:	mov    QWORD PTR [rsp+0x30],rcx
  41ebab:	lea    rcx,[rsp+0x118]
  41ebb3:	mov    QWORD PTR [rsp+0x28],rcx
  41ebb8:	mov    QWORD PTR [rsp+0x20],rax
  41ebbd:	mov    r8,rsi
  41ebc0:	mov    edx,edi
  41ebc2:	mov    rcx,r14
  41ebc5:	call   0x41ac60
  41ebca:	mov    ebx,eax
  41ebcc:	xor    edi,edi
  41ebce:	cmp    eax,edi
  41ebd0:	jne    0x41f160
  41ebd6:	mov    rcx,QWORD PTR [rsp+0x1e8]
  41ebde:	mov    rax,QWORD PTR [rcx]
  41ebe1:	call   QWORD PTR [rax+0x8]
  41ebe4:	add    r13d,ebp
  41ebe7:	cmp    r13d,DWORD PTR [rsp+0x330]
  41ebef:	mov    rbx,QWORD PTR [rsp+0x88]
  41ebf7:	jb     0x41e966
  41ebfd:	mov    r13d,DWORD PTR [rsp+0x74]
  41ec02:	jmp    0x41ef7c
  41ec07:	lea    rdx,[rip+0x30cca]        # 0x44f8d8
  41ec0e:	mov    rcx,QWORD PTR [rsp+0xc8]
  41ec16:	call   0x402820
  41ec1b:	cmp    al,dil
  41ec1e:	jne    0x41ecc6
  41ec24:	lea    rbx,[rip+0x3052d]        # 0x44f158
  41ec2b:	mov    rdx,QWORD PTR [rbx]
  41ec2e:	lea    rcx,[rsp+0x100]
  41ec36:	call   0x402b6c
  41ec3b:	mov    r11,QWORD PTR [rbx]
  41ec3e:	mov    rax,QWORD PTR [rsp+0xc8]
  41ec46:	mov    cl,BYTE PTR [rax]
  41ec48:	lea    r8,[rax+0x1]
  41ec4c:	xor    r9d,r9d
  41ec4f:	cmp    cl,r9b
  41ec52:	je     0x41ec99
  41ec54:	mov    dl,BYTE PTR [r11]
  41ec57:	add    r11,rbp
  41ec5a:	lea    eax,[rdx-0x41]
  41ec5d:	cmp    al,0x19
  41ec5f:	ja     0x41ec64
  41ec61:	add    dl,0x20
  41ec64:	lea    eax,[rcx-0x41]
  41ec67:	cmp    al,0x19
  41ec69:	ja     0x41ec6e
  41ec6b:	add    cl,0x20
  41ec6e:	cmp    dl,cl
  41ec70:	jne    0x41ec7f
  41ec72:	mov    cl,BYTE PTR [r8]
  41ec75:	add    r8,rbp
  41ec78:	cmp    cl,r9b
  41ec7b:	je     0x41ec99
  41ec7d:	jmp    0x41ec54
  41ec7f:	mov    rcx,QWORD PTR [rsp+0x100]
  41ec87:	call   0x40215c
  41ec8c:	add    edi,ebp
  41ec8e:	add    rbx,0x20
  41ec92:	cmp    edi,0x11
  41ec95:	jae    0x41ecc6
  41ec97:	jmp    0x41ec2b
  41ec99:	mov    eax,DWORD PTR [rbx-0x10]
  41ec9c:	mov    DWORD PTR [rsp+0x19c],eax
  41eca3:	mov    eax,DWORD PTR [rbx-0xc]
  41eca6:	mov    DWORD PTR [rsp+0x1a0],eax
  41ecad:	mov    eax,DWORD PTR [rbx-0x8]
  41ecb0:	mov    DWORD PTR [rsp+0x1a4],eax
  41ecb7:	mov    rcx,QWORD PTR [rsp+0x100]
  41ecbf:	call   0x40215c
  41ecc4:	jmp    0x41ecef
  41ecc6:	mov    DWORD PTR [rsp+0x19c],0x4b0
  41ecd1:	mov    DWORD PTR [rsp+0x1a4],0x4
  41ecdc:	mov    DWORD PTR [rsp+0x1a0],0xbe
  41ece7:	mov    BYTE PTR [rsp+0x198],bpl
  41ecef:	xor    r8d,r8d
  41ecf2:	mov    r14d,r8d
  41ecf5:	cmp    DWORD PTR [rsp+0x330],r8d
  41ecfd:	jbe    0x41ef7c
  41ed03:	cmp    r13d,0x400000
  41ed0a:	sbb    r13d,r13d
  41ed0d:	and    r13d,0xfffffffc
  41ed11:	mov    edx,DWORD PTR [rsp+0x74]
  41ed15:	lea    ebx,[r13+0x16]
  41ed19:	mov    eax,0x1f
  41ed1e:	cmp    BYTE PTR [rsp+0x338],r8b
  41ed26:	cmove  ebx,eax
  41ed29:	mov    ecx,ebx
  41ed2b:	mov    eax,ebp
  41ed2d:	shl    eax,cl
  41ed2f:	cmp    eax,edx
  41ed31:	jbe    0x41ed53
  41ed33:	mov    r12d,0xffffffff
  41ed39:	cmp    ebx,r8d
  41ed3c:	jbe    0x41ed4b
  41ed3e:	add    ebx,r12d
  41ed41:	mov    ecx,ebx
  41ed43:	mov    eax,ebp
  41ed45:	shl    eax,cl
  41ed47:	cmp    eax,edx
  41ed49:	ja     0x41ed39
  41ed4b:	mov    r12,QWORD PTR [rsp+0x130]
  41ed53:	mov    ecx,ebx
  41ed55:	mov    edi,ebp
  41ed57:	shl    edi,cl
  41ed59:	cmp    edi,edx
  41ed5b:	ja     0x41ef5f
  41ed61:	lea    rdx,[rsp+0xa8]
  41ed69:	mov    ecx,ebx
  41ed6b:	call   0x401930
  41ed70:	xor    eax,eax
  41ed72:	mov    r11,rax
  41ed75:	cmp    BYTE PTR [rsp+0xa8],al
  41ed7c:	je     0x41ed8b
  41ed7e:	add    r11,rbp
  41ed81:	cmp    BYTE PTR [rsp+r11*1+0xa8],al
  41ed89:	jne    0x41ed7e
  41ed8b:	mov    BYTE PTR [rsp+r11*1+0xa8],0x3a
  41ed94:	mov    BYTE PTR [rsp+r11*1+0xa9],al
  41ed9c:	mov    r8d,0x4
  41eda2:	lea    rdx,[rsp+0xa8]
  41edaa:	mov    rcx,rsi
  41edad:	call   0x418d68
  41edb2:	mov    DWORD PTR [rsp+0x1f0],edi
  41edb9:	lea    rdx,[rsp+0x148]
  41edc1:	lea    rcx,[rsp+0x248]
  41edc9:	call   0x41aa40
  41edce:	nop
  41edcf:	lea    rdx,[rsp+0x158]
  41edd7:	lea    rcx,[rsp+0x258]
  41eddf:	call   0x402bb0
  41ede4:	nop
  41ede5:	lea    rdx,[rsp+0x168]
  41eded:	lea    rcx,[rsp+0x268]
  41edf5:	call   0x403208
  41edfa:	nop
  41edfb:	lea    rdx,[rip+0x30ad6]        # 0x44f8d8
  41ee02:	mov    rcx,QWORD PTR [rsp+0x258]
  41ee0a:	call   0x402820
  41ee0f:	xor    ecx,ecx
  41ee11:	cmp    al,cl
  41ee13:	je     0x41ee88
  41ee15:	mov    WORD PTR [rsp+0x230],0x13
  41ee1f:	mov    WORD PTR [rsp+0x232],cx
  41ee27:	mov    DWORD PTR [rsp+0x238],ebx
  41ee2e:	lea    rdx,[rip+0x309cb]        # 0x44f800
  41ee35:	lea    rcx,[rsp+0x278]
  41ee3d:	call   0x4031c0
  41ee42:	nop
  41ee43:	lea    r8,[rsp+0x230]
  41ee4b:	lea    rdx,[rsp+0x278]
  41ee53:	lea    rcx,[rsp+0x248]
  41ee5b:	call   0x40e480
  41ee60:	mov    edi,eax
  41ee62:	mov    rcx,QWORD PTR [rsp+0x278]
  41ee6a:	call   0x40215c
  41ee6f:	xor    eax,eax
  41ee71:	cmp    edi,eax
  41ee73:	jne    0x41f179
  41ee79:	lea    rcx,[rsp+0x230]
  41ee81:	call   0x40b028
  41ee86:	xor    ecx,ecx
  41ee88:	cmp    r12,rcx
  41ee8b:	je     0x41ee97
  41ee8d:	mov    rax,QWORD PTR [rsp+0x128]
  41ee95:	jmp    0x41eeac
  41ee97:	mov    eax,DWORD PTR [rsp+0x1f0]
  41ee9e:	cmp    rax,0x40000
  41eea4:	jb     0x41eeac
  41eea6:	add    rax,0x10000
  41eeac:	lea    rcx,[rsp+0x198]
  41eeb4:	mov    QWORD PTR [rsp+0x50],rcx
  41eeb9:	lea    rcx,[rsp+0x190]
  41eec1:	mov    QWORD PTR [rsp+0x48],rcx
  41eec6:	mov    QWORD PTR [rsp+0x40],rsi
  41eecb:	mov    DWORD PTR [rsp+0x38],0x1e
  41eed3:	mov    QWORD PTR [rsp+0x30],r12
  41eed8:	mov    QWORD PTR [rsp+0x28],rax
  41eedd:	lea    rax,[rsp+0x248]
  41eee5:	mov    QWORD PTR [rsp+0x20],rax
  41eeea:	mov    r9d,DWORD PTR [rsp+0x7c]
  41eeef:	mov    r8b,bpl
  41eef2:	mov    rdx,QWORD PTR [rsp+0xb8]
  41eefa:	mov    rcx,QWORD PTR [rsp+0x310]
  41ef02:	call   0x41c26c
  41ef07:	mov    edi,eax
  41ef09:	mov    rdx,QWORD PTR [rsi]
  41ef0c:	mov    rcx,rsi
  41ef0f:	call   QWORD PTR [rdx+0x8]
  41ef12:	xor    eax,eax
  41ef14:	cmp    edi,eax
  41ef16:	jne    0x41f1b0
  41ef1c:	cmp    BYTE PTR [rsp+0x338],al
  41ef23:	je     0x41ef4b
  41ef25:	lea    rcx,[rsp+0x248]
  41ef2d:	call   0x41b980
  41ef32:	add    ebx,ebp
  41ef34:	mov    ecx,ebx
  41ef36:	mov    edi,ebp
  41ef38:	shl    edi,cl
  41ef3a:	mov    edx,DWORD PTR [rsp+0x74]
  41ef3e:	cmp    edi,edx
  41ef40:	jbe    0x41ed61
  41ef46:	xor    r8d,r8d
  41ef49:	jmp    0x41ef5f
  41ef4b:	lea    rcx,[rsp+0x248]
  41ef53:	call   0x41b980
  41ef58:	mov    edx,DWORD PTR [rsp+0x74]
  41ef5c:	xor    r8d,r8d
  41ef5f:	add    r14d,ebp
  41ef62:	cmp    r14d,DWORD PTR [rsp+0x330]
  41ef6a:	jb     0x41ed15
  41ef70:	mov    r13d,DWORD PTR [rsp+0x74]
  41ef75:	jmp    0x41ef7c
  41ef77:	mov    r13d,DWORD PTR [rsp+0x74]
  41ef7c:	mov    eax,DWORD PTR [rsp+0x1f8]
  41ef83:	mov    edi,DWORD PTR [rsp+0x188]
  41ef8a:	lea    r8d,[rdi+rax*1]
  41ef8e:	mov    dl,0x2d
  41ef90:	mov    rcx,rsi
  41ef93:	call   0x418898
  41ef98:	mov    bl,BYTE PTR [rsp+0x78]
  41ef9c:	xor    r14d,r14d
  41ef9f:	cmp    bl,r14b
  41efa2:	je     0x41efc0
  41efa4:	mov    rax,QWORD PTR [rsi]
  41efa7:	mov    rdx,QWORD PTR [rip+0x496d2]        # 0x468680
  41efae:	mov    rcx,rsi
  41efb1:	call   QWORD PTR [rax]
  41efb3:	mov    r8d,edi
  41efb6:	mov    dl,0x2d
  41efb8:	mov    rcx,rsi
  41efbb:	call   0x418898
  41efc0:	mov    rax,QWORD PTR [rsi]
  41efc3:	mov    rcx,rsi
  41efc6:	call   QWORD PTR [rax+0x8]
  41efc9:	cmp    bl,r14b
  41efcc:	je     0x41f032
  41efce:	mov    r8d,DWORD PTR [rsp+0x1f8]
  41efd6:	lea    rdx,[rip+0x3081b]        # 0x44f7f8
  41efdd:	mov    rcx,rsi
  41efe0:	call   0x418d68
  41efe5:	lea    r9,[rsp+0x1a8]
  41efed:	mov    r8,r15
  41eff0:	mov    ebx,DWORD PTR [rsp+0x90]
  41eff7:	mov    dl,bl
  41eff9:	mov    rcx,rsi
  41effc:	call   0x418ad4
  41f001:	mov    r11,QWORD PTR [rsi]
  41f004:	mov    rdx,QWORD PTR [rip+0x49675]        # 0x468680
  41f00b:	mov    rcx,rsi
  41f00e:	call   QWORD PTR [r11]
  41f011:	lea    r9,[rsp+0x1c8]
  41f019:	mov    r8,r15
  41f01c:	mov    dl,bl
  41f01e:	mov    rcx,rsi
  41f021:	call   0x418ad4
  41f026:	mov    r11,QWORD PTR [rsi]
  41f029:	mov    rcx,rsi
  41f02c:	call   QWORD PTR [r11+0x8]
  41f030:	jmp    0x41f039
  41f032:	mov    ebx,DWORD PTR [rsp+0x90]
  41f039:	mov    r8d,DWORD PTR [rsp+0x1f8]
  41f041:	lea    rdx,[rip+0x307a8]        # 0x44f7f0
  41f048:	mov    rcx,rsi
  41f04b:	call   0x418d68
  41f050:	mov    r11,QWORD PTR [rsp+0x1b0]
  41f058:	mov    rcx,QWORD PTR [rsp+0x1d0]
  41f060:	add    rcx,r11
  41f063:	mov    QWORD PTR [rsp+0x290],rcx
  41f06b:	mov    rcx,QWORD PTR [rsp+0x1b8]
  41f073:	mov    rax,QWORD PTR [rsp+0x1d8]
  41f07b:	add    rcx,rax
  41f07e:	mov    QWORD PTR [rsp+0x298],rcx
  41f086:	mov    rcx,QWORD PTR [rsp+0x1c0]
  41f08e:	mov    rax,QWORD PTR [rsp+0x1e0]
  41f096:	add    rcx,rax
  41f099:	mov    QWORD PTR [rsp+0x2a0],rcx
  41f0a1:	mov    rcx,QWORD PTR [rsp+0x1a8]
  41f0a9:	mov    rax,QWORD PTR [rsp+0x1c8]
  41f0b1:	add    rcx,rax
  41f0b4:	mov    QWORD PTR [rsp+0x288],rcx
  41f0bc:	lea    r9,[rsp+0x288]
  41f0c4:	mov    r8,r15
  41f0c7:	mov    dl,bl
  41f0c9:	mov    rcx,rsi
  41f0cc:	call   0x418ad4
  41f0d1:	mov    r11,QWORD PTR [rsi]
  41f0d4:	mov    rcx,rsi
  41f0d7:	call   QWORD PTR [r11+0x8]
  41f0db:	mov    eax,DWORD PTR [rsp+0xc0]
  41f0e2:	add    eax,ebp
  41f0e4:	mov    DWORD PTR [rsp+0xc0],eax
  41f0eb:	cmp    eax,0x3
  41f0ee:	mov    r14,QWORD PTR [rsp+0xb8]
  41f0f6:	mov    r15b,BYTE PTR [rsp+0x70]
  41f0fb:	mov    bl,BYTE PTR [rsp+0x72]
  41f0ff:	mov    edx,0x0
  41f104:	jb     0x41e504
  41f10a:	jmp    0x41f1e8
  41f10f:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f117:	call   0x40215c
  41f11c:	nop
  41f11d:	mov    rcx,r12
  41f120:	call   0x44ad20
  41f125:	nop
  41f126:	jmp    0x41f1d7
  41f12b:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f133:	call   0x40215c
  41f138:	nop
  41f139:	mov    rcx,r12
  41f13c:	call   0x44ad20
  41f141:	nop
  41f142:	jmp    0x41f1d7
  41f147:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f14f:	call   0x40215c
  41f154:	nop
  41f155:	mov    rcx,r12
  41f158:	call   0x44ad20
  41f15d:	nop
  41f15e:	jmp    0x41f1d7
  41f160:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f168:	call   0x40215c
  41f16d:	nop
  41f16e:	mov    rcx,r12
  41f171:	call   0x44ad20
  41f176:	nop
  41f177:	jmp    0x41f1d7
  41f179:	lea    rcx,[rsp+0x230]
  41f181:	call   0x40b028
  41f186:	nop
  41f187:	lea    rcx,[rsp+0x248]
  41f18f:	call   0x41b980
  41f194:	nop
  41f195:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f19d:	call   0x40215c
  41f1a2:	nop
  41f1a3:	mov    rcx,r12
  41f1a6:	call   0x44ad20
  41f1ab:	nop
  41f1ac:	mov    ebx,edi
  41f1ae:	jmp    0x41f1d7
  41f1b0:	lea    rcx,[rsp+0x248]
  41f1b8:	call   0x41b980
  41f1bd:	nop
  41f1be:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f1c6:	call   0x40215c
  41f1cb:	nop
  41f1cc:	mov    rcx,r12
  41f1cf:	call   0x44ad20
  41f1d4:	nop
  41f1d5:	mov    ebx,edi
  41f1d7:	lea    rcx,[rsp+0x148]
  41f1df:	call   0x41b980
  41f1e4:	mov    eax,ebx
  41f1e6:	jmp    0x41f22b
  41f1e8:	mov    rcx,QWORD PTR [rsp+0xc8]
  41f1f0:	call   0x40215c
  41f1f5:	nop
  41f1f6:	mov    rcx,r12
  41f1f9:	call   0x44ad20
  41f1fe:	nop
  41f1ff:	lea    rcx,[rsp+0x148]
  41f207:	call   0x41b980
  41f20c:	xor    eax,eax
  41f20e:	jmp    0x41f22b
  41f210:	mov    rcx,r12
  41f213:	call   0x44ad20
  41f218:	nop
  41f219:	lea    rcx,[rsp+0x148]
  41f221:	call   0x41b980
  41f226:	mov    eax,0x80070057
  41f22b:	add    rsp,0x2c8
  41f232:	pop    r15
  41f234:	pop    r14
  41f236:	pop    r13
  41f238:	pop    r12
  41f23a:	pop    rdi
  41f23b:	pop    rsi
  41f23c:	pop    rbp
  41f23d:	pop    rbx
  41f23e:	ret    
  41f23f:	int3   
  41f240:	rex.W push rbp
  41f242:	sub    rsp,0x20
  41f246:	mov    rbp,rdx
  41f249:	lea    rcx,[rbp+0x148]
  41f250:	call   0x41b92c
  41f255:	add    rsp,0x20
  41f259:	pop    rbp
  41f25a:	ret    
  41f25b:	int3   
  41f25c:	int3   
  41f25d:	int3   
  41f25e:	int3   
  41f25f:	int3   
  41f260:	rex.W push rbp
  41f262:	sub    rsp,0x20
  41f266:	mov    rbp,rdx
  41f269:	lea    rcx,[rbp+0x148]
  41f270:	add    rcx,0x10
  41f274:	call   0x401000
  41f279:	add    rsp,0x20
  41f27d:	pop    rbp
  41f27e:	ret    
  41f27f:	int3   
  41f280:	rex.W push rbp
  41f282:	sub    rsp,0x20
  41f286:	mov    rbp,rdx
  41f289:	lea    rcx,[rbp+0x148]
  41f290:	call   0x41b980
  41f295:	add    rsp,0x20
  41f299:	pop    rbp
  41f29a:	ret    
  41f29b:	int3   
  41f29c:	int3   
  41f29d:	int3   
  41f29e:	int3   
  41f29f:	int3   
  41f2a0:	rex.W push rbp
  41f2a2:	sub    rsp,0x20
  41f2a6:	mov    rbp,rdx
  41f2a9:	lea    rcx,[rbp+0x128]
  41f2b0:	call   0x417d64
  41f2b5:	add    rsp,0x20
  41f2b9:	pop    rbp
  41f2ba:	ret    
  41f2bb:	int3   
  41f2bc:	int3   
  41f2bd:	int3   
  41f2be:	int3   
  41f2bf:	int3   
  41f2c0:	rex.W push rbp
  41f2c2:	sub    rsp,0x20
  41f2c6:	mov    rbp,rdx
  41f2c9:	lea    rcx,[rbp+0x98]
  41f2d0:	call   0x401000
  41f2d5:	add    rsp,0x20
  41f2d9:	pop    rbp
  41f2da:	ret    
  41f2db:	int3   
  41f2dc:	int3   
  41f2dd:	int3   
  41f2de:	int3   
  41f2df:	int3   
  41f2e0:	rex.W push rbp
  41f2e2:	sub    rsp,0x20
  41f2e6:	mov    rbp,rdx
  41f2e9:	lea    rcx,[rbp+0x210]
  41f2f0:	call   0x409728
  41f2f5:	add    rsp,0x20
  41f2f9:	pop    rbp
  41f2fa:	ret    
  41f2fb:	int3   
  41f2fc:	int3   
  41f2fd:	int3   
  41f2fe:	int3   
  41f2ff:	int3   
  41f300:	rex.W push rbp
  41f302:	sub    rsp,0x20
  41f306:	mov    rbp,rdx
  41f309:	lea    rcx,[rbp+0xe8]
  41f310:	call   0x40b830
  41f315:	add    rsp,0x20
  41f319:	pop    rbp
  41f31a:	ret    
  41f31b:	int3   
  41f31c:	int3   
  41f31d:	int3   
  41f31e:	int3   
  41f31f:	int3   
  41f320:	rex.W push rbp
  41f322:	sub    rsp,0x20
  41f326:	mov    rbp,rdx
  41f329:	lea    rcx,[rbp+0xa8]
  41f330:	call   0x401000
  41f335:	add    rsp,0x20
  41f339:	pop    rbp
  41f33a:	ret    
  41f33b:	int3   
  41f33c:	int3   
  41f33d:	int3   
  41f33e:	int3   
  41f33f:	int3   
  41f340:	rex.W push rbp
  41f342:	sub    rsp,0x20
  41f346:	mov    rbp,rdx
  41f349:	lea    rcx,[rbp+0x100]
  41f350:	call   0x401000
  41f355:	add    rsp,0x20
  41f359:	pop    rbp
  41f35a:	ret    
  41f35b:	int3   
  41f35c:	int3   
  41f35d:	int3   
  41f35e:	int3   
  41f35f:	int3   
  41f360:	rex.W push rbp
  41f362:	sub    rsp,0x20
  41f366:	mov    rbp,rdx
  41f369:	lea    rcx,[rbp+0x178]
  41f370:	call   0x401000
  41f375:	add    rsp,0x20
  41f379:	pop    rbp
  41f37a:	ret    
  41f37b:	int3   
  41f37c:	int3   
  41f37d:	int3   
  41f37e:	int3   
  41f37f:	int3   
  41f380:	rex.W push rbp
  41f382:	sub    rsp,0x20
  41f386:	mov    rbp,rdx
  41f389:	lea    rcx,[rbp+0xa8]
  41f390:	call   0x401000
  41f395:	add    rsp,0x20
  41f399:	pop    rbp
  41f39a:	ret    
  41f39b:	int3   
  41f39c:	int3   
  41f39d:	int3   
  41f39e:	int3   
  41f39f:	int3   
  41f3a0:	rex.W push rbp
  41f3a2:	sub    rsp,0x20
  41f3a6:	mov    rbp,rdx
  41f3a9:	lea    rcx,[rbp+0xc8]
  41f3b0:	call   0x401000
  41f3b5:	add    rsp,0x20
  41f3b9:	pop    rbp
  41f3ba:	ret    
  41f3bb:	int3   
  41f3bc:	int3   
  41f3bd:	int3   
  41f3be:	int3   
  41f3bf:	int3   
  41f3c0:	rex.W push rbp
  41f3c2:	sub    rsp,0x20
  41f3c6:	mov    rbp,rdx
  41f3c9:	lea    rcx,[rbp+0x118]
  41f3d0:	call   0x401000
  41f3d5:	add    rsp,0x20
  41f3d9:	pop    rbp
  41f3da:	ret    
  41f3db:	int3   
  41f3dc:	int3   
  41f3dd:	int3   
  41f3de:	int3   
  41f3df:	int3   
  41f3e0:	rex.W push rbp
  41f3e2:	sub    rsp,0x20
  41f3e6:	mov    rbp,rdx
  41f3e9:	lea    rcx,[rbp+0xa8]
  41f3f0:	call   0x401000
  41f3f5:	add    rsp,0x20
  41f3f9:	pop    rbp
  41f3fa:	ret    
  41f3fb:	int3   
  41f3fc:	int3   
  41f3fd:	int3   
  41f3fe:	int3   
  41f3ff:	int3   
  41f400:	rex.W push rbp
  41f402:	sub    rsp,0x20
  41f406:	mov    rbp,rdx
  41f409:	lea    rcx,[rbp+0x118]
  41f410:	call   0x401000
  41f415:	add    rsp,0x20
  41f419:	pop    rbp
  41f41a:	ret    
  41f41b:	int3   
  41f41c:	int3   
  41f41d:	int3   
  41f41e:	int3   
  41f41f:	int3   
  41f420:	rex.W push rbp
  41f422:	sub    rsp,0x20
  41f426:	mov    rbp,rdx
  41f429:	lea    rcx,[rbp+0x248]
  41f430:	call   0x41b92c
  41f435:	add    rsp,0x20
  41f439:	pop    rbp
  41f43a:	ret    
  41f43b:	int3   
  41f43c:	int3   
  41f43d:	int3   
  41f43e:	int3   
  41f43f:	int3   
  41f440:	rex.W push rbp
  41f442:	sub    rsp,0x20
  41f446:	mov    rbp,rdx
  41f449:	lea    rcx,[rbp+0x248]
  41f450:	add    rcx,0x10
  41f454:	call   0x401000
  41f459:	add    rsp,0x20
  41f45d:	pop    rbp
  41f45e:	ret    
  41f45f:	int3   
  41f460:	rex.W push rbp
  41f462:	sub    rsp,0x20
  41f466:	mov    rbp,rdx
  41f469:	lea    rcx,[rbp+0x248]
  41f470:	call   0x41b980
  41f475:	add    rsp,0x20
  41f479:	pop    rbp
  41f47a:	ret    
  41f47b:	int3   
  41f47c:	int3   
  41f47d:	int3   
  41f47e:	int3   
  41f47f:	int3   
  41f480:	rex.W push rbp
  41f482:	sub    rsp,0x20
  41f486:	mov    rbp,rdx
  41f489:	lea    rcx,[rbp+0x230]
  41f490:	call   0x40b830
  41f495:	add    rsp,0x20
  41f499:	pop    rbp
  41f49a:	ret    
  41f49b:	int3   
  41f49c:	int3   
  41f49d:	int3   
  41f49e:	int3   
  41f49f:	int3   
  41f4a0:	rex.W push rbp
  41f4a2:	sub    rsp,0x20
  41f4a6:	mov    rbp,rdx
  41f4a9:	lea    rcx,[rbp+0x278]
  41f4b0:	call   0x401000
  41f4b5:	add    rsp,0x20
  41f4b9:	pop    rbp
  41f4ba:	ret    
  41f4bb:	int3   
  41f4bc:	rex.W push rbx
  41f4be:	push   rbp
  41f4bf:	push   rsi
  41f4c0:	push   rdi
  41f4c1:	sub    rsp,0x48
  41f4c5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41f4ce:	mov    rsi,r9
  41f4d1:	mov    rdi,rdx
  41f4d4:	mov    rbx,rcx
  41f4d7:	mov    DWORD PTR [rsp+0x78],0x0
  41f4df:	mov    ecx,DWORD PTR [r8+0x8]
  41f4e3:	mov    ebp,DWORD PTR [rdx+0x8]
  41f4e6:	lea    eax,[rcx+0x1]
  41f4e9:	cmp    ebp,eax
  41f4eb:	jbe    0x41f53d
  41f4ed:	sub    ebp,ecx
  41f4ef:	dec    ebp
  41f4f1:	mov    rdx,QWORD PTR [rdx]
  41f4f4:	cmp    WORD PTR [rdx+rbp*2],0x2e
  41f4f9:	jne    0x41f53d
  41f4fb:	lea    eax,[rbp+0x1]
  41f4fe:	lea    rdx,[rdx+rax*2]
  41f502:	mov    rcx,QWORD PTR [r8]
  41f505:	call   0x40272c
  41f50a:	test   al,al
  41f50c:	je     0x41f53d
  41f50e:	mov    r8d,ebp
  41f511:	lea    rdx,[rsp+0x28]
  41f516:	mov    rcx,rdi
  41f519:	call   0x4042a0
  41f51e:	nop
  41f51f:	mov    r8,rsi
  41f522:	mov    rdx,rax
  41f525:	mov    rcx,rbx
  41f528:	call   0x4030d4
  41f52d:	nop
  41f52e:	mov    rcx,QWORD PTR [rsp+0x28]
  41f533:	call   0x40215c
  41f538:	mov    rax,rbx
  41f53b:	jmp    0x41f5a8
  41f53d:	mov    dx,0x2e
  41f541:	mov    rcx,rdi
  41f544:	call   0x4035f4
  41f549:	test   eax,eax
  41f54b:	jle    0x41f57c
  41f54d:	mov    r8d,eax
  41f550:	lea    rdx,[rsp+0x28]
  41f555:	mov    rcx,rdi
  41f558:	call   0x4042a0
  41f55d:	nop
  41f55e:	mov    r8,rsi
  41f561:	mov    rdx,rax
  41f564:	mov    rcx,rbx
  41f567:	call   0x4030d4
  41f56c:	nop
  41f56d:	mov    rcx,QWORD PTR [rsp+0x28]
  41f572:	call   0x40215c
  41f577:	mov    rax,rbx
  41f57a:	jmp    0x41f5a8
  41f57c:	cmp    DWORD PTR [rsi+0x8],0x0
  41f580:	jne    0x41f597
  41f582:	mov    r8w,0x7e
  41f587:	mov    rdx,rdi
  41f58a:	mov    rcx,rbx
  41f58d:	call   0x40f0d8
  41f592:	mov    rax,rbx
  41f595:	jmp    0x41f5a8
  41f597:	mov    r8,rsi
  41f59a:	mov    rdx,rdi
  41f59d:	mov    rcx,rbx
  41f5a0:	call   0x4030d4
  41f5a5:	mov    rax,rbx
  41f5a8:	add    rsp,0x48
  41f5ac:	pop    rdi
  41f5ad:	pop    rsi
  41f5ae:	pop    rbp
  41f5af:	pop    rbx
  41f5b0:	ret    
  41f5b1:	int3   
  41f5b2:	int3   
  41f5b3:	int3   
  41f5b4:	int3   
  41f5b5:	int3   
  41f5b6:	int3   
  41f5b7:	int3   
  41f5b8:	int3   
  41f5b9:	int3   
  41f5ba:	int3   
  41f5bb:	int3   
  41f5bc:	rex.W push rbp
  41f5be:	sub    rsp,0x20
  41f5c2:	mov    rbp,rdx
  41f5c5:	lea    rcx,[rbp+0x28]
  41f5c9:	call   0x401000
  41f5ce:	add    rsp,0x20
  41f5d2:	pop    rbp
  41f5d3:	ret    
  41f5d4:	int3   
  41f5d5:	int3   
  41f5d6:	int3   
  41f5d7:	int3   
  41f5d8:	int3   
  41f5d9:	int3   
  41f5da:	int3   
  41f5db:	int3   
  41f5dc:	rex.W push rbp
  41f5de:	sub    rsp,0x20
  41f5e2:	mov    rbp,rdx
  41f5e5:	lea    rcx,[rbp+0x28]
  41f5e9:	call   0x401000
  41f5ee:	add    rsp,0x20
  41f5f2:	pop    rbp
  41f5f3:	ret    
  41f5f4:	rex.W push rbx
  41f5f6:	sub    rsp,0x20
  41f5fa:	mov    rbx,rcx
  41f5fd:	mov    DWORD PTR [rsp+0x30],0x0
  41f605:	call   0x41f4bc
  41f60a:	mov    rcx,rbx
  41f60d:	call   0x4036bc
  41f612:	mov    rax,rbx
  41f615:	add    rsp,0x20
  41f619:	pop    rbx
  41f61a:	ret    
  41f61b:	int3   
  41f61c:	rex.W push rbx
  41f61e:	push   rdi
  41f61f:	sub    rsp,0x28
  41f623:	mov    rdi,rdx
  41f626:	mov    rbx,rcx
  41f629:	call   QWORD PTR [rip+0x2db71]        # 0x44d1a0
  41f62f:	mov    rcx,QWORD PTR [rbx+0xc0]
  41f636:	inc    QWORD PTR [rbx+0x70]
  41f63a:	mov    r8d,eax
  41f63d:	xor    eax,eax
  41f63f:	cmp    rcx,rax
  41f642:	je     0x41f64d
  41f644:	mov    r9,QWORD PTR [rcx]
  41f647:	mov    rdx,rdi
  41f64a:	call   QWORD PTR [r9]
  41f64d:	add    rsp,0x28
  41f651:	pop    rdi
  41f652:	pop    rbx
  41f653:	ret    
  41f654:	sub    rsp,0x28
  41f658:	cmp    QWORD PTR [rcx+0xc0],0x0
  41f660:	mov    r8,rdx
  41f663:	mov    rdx,rcx
  41f666:	je     0x41f67e
  41f668:	mov    rcx,QWORD PTR [rcx+0xc0]
  41f66f:	add    rdx,0x48
  41f673:	mov    r9b,0x1
  41f676:	mov    rax,QWORD PTR [rcx]
  41f679:	call   QWORD PTR [rax+0x8]
  41f67c:	jmp    0x41f680
  41f67e:	xor    eax,eax
  41f680:	add    rsp,0x28
  41f684:	ret    
  41f685:	int3   
  41f686:	int3   
  41f687:	int3   
  41f688:	rex.W push rbx
  41f68a:	sub    rsp,0x40
  41f68e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41f697:	mov    rbx,rdx
  41f69a:	mov    rdx,rcx
  41f69d:	lea    rcx,[rsp+0x28]
  41f6a2:	call   0x403208
  41f6a7:	nop
  41f6a8:	mov    rdx,rbx
  41f6ab:	lea    rcx,[rsp+0x28]
  41f6b0:	call   0x403444
  41f6b5:	mov    r11d,DWORD PTR [rsp+0x30]
  41f6ba:	cmp    DWORD PTR [rsp+0x34],r11d
  41f6bf:	jne    0x41f6d0
  41f6c1:	lea    rcx,[rsp+0x28]
  41f6c6:	call   0x402f2c
  41f6cb:	mov    r11d,DWORD PTR [rsp+0x30]
  41f6d0:	mov    rcx,QWORD PTR [rsp+0x28]
  41f6d5:	mov    eax,r11d
  41f6d8:	mov    WORD PTR [rcx+rax*2],0x5c
  41f6de:	mov    ebx,0x1
  41f6e3:	add    r11d,ebx
  41f6e6:	mov    WORD PTR [rcx+r11*2],0x0
  41f6ed:	mov    DWORD PTR [rsp+0x30],r11d
  41f6f2:	mov    rcx,QWORD PTR [rsp+0x28]
  41f6f7:	cmp    WORD PTR [rcx],0x5c
  41f6fb:	je     0x41f703
  41f6fd:	cmp    WORD PTR [rcx],0x2f
  41f701:	jne    0x41f718
  41f703:	call   0x40a168
  41f708:	test   eax,eax
  41f70a:	jne    0x41f713
  41f70c:	mov    rcx,QWORD PTR [rsp+0x28]
  41f711:	jmp    0x41f71a
  41f713:	mov    rcx,QWORD PTR [rsp+0x28]
  41f718:	xor    bl,bl
  41f71a:	call   0x40215c
  41f71f:	mov    al,bl
  41f721:	add    rsp,0x40
  41f725:	pop    rbx
  41f726:	ret    
  41f727:	int3   
  41f728:	rex.W push rbp
  41f72a:	sub    rsp,0x20
  41f72e:	mov    rbp,rdx
  41f731:	lea    rcx,[rbp+0x28]
  41f735:	call   0x401000
  41f73a:	add    rsp,0x20
  41f73e:	pop    rbp
  41f73f:	ret    
  41f740:	rex.W push rbx
  41f742:	push   rbp
  41f743:	push   rsi
  41f744:	push   rdi
  41f745:	push   r12
  41f747:	push   r13
  41f749:	push   r14
  41f74b:	push   r15
  41f74d:	mov    r11,rsp
  41f750:	sub    rsp,0x38
  41f754:	mov    DWORD PTR [r8],0xffffffff
  41f75b:	mov    r9d,DWORD PTR [rcx+0xb0]
  41f762:	mov    eax,0xf
  41f767:	lea    r14d,[rax-0x8]
  41f76b:	mov    r13,rdx
  41f76e:	xor    edi,edi
  41f770:	cmp    BYTE PTR [rcx+0xb8],dil
  41f777:	mov    r15,r8
  41f77a:	mov    r8,QWORD PTR [rcx+0xa8]
  41f781:	cmovne r14d,eax
  41f785:	mov    rbx,rcx
  41f788:	mov    rcx,QWORD PTR [r13+0x0]
  41f78c:	lea    rax,[r11+0x48]
  41f790:	mov    edx,r14d
  41f793:	mov    esi,edi
  41f795:	mov    QWORD PTR [r11-0x18],rax
  41f799:	call   QWORD PTR [rip+0x2d869]        # 0x44d008
  41f79f:	lea    ebp,[rdi+0x1]
  41f7a2:	cmp    eax,edi
  41f7a4:	mov    r12d,eax
  41f7a7:	je     0x41f7cc
  41f7a9:	mov    ecx,DWORD PTR [rsp+0x80]
  41f7b0:	cmp    ecx,edi
  41f7b2:	je     0x41f89d
  41f7b8:	cmp    rcx,QWORD PTR [rbx+0xb0]
  41f7bf:	jbe    0x41f882
  41f7c5:	mov    esi,ebp
  41f7c7:	jmp    0x41f882
  41f7cc:	call   QWORD PTR [rip+0x2d9ce]        # 0x44d1a0
  41f7d2:	cmp    eax,0x7a
  41f7d5:	mov    esi,eax
  41f7d7:	jne    0x41f8a1
  41f7dd:	mov    r12d,DWORD PTR [rsp+0x80]
  41f7e5:	cmp    r12,QWORD PTR [rbx+0xb0]
  41f7ec:	ja     0x41f7f5
  41f7ee:	mov    esi,ebp
  41f7f0:	jmp    0x41f8a6
  41f7f5:	mov    rcx,QWORD PTR [rbx+0xa8]
  41f7fc:	cmp    rcx,rdi
  41f7ff:	je     0x41f80d
  41f801:	call   0x40215c
  41f806:	mov    QWORD PTR [rbx+0xa8],rdi
  41f80d:	cmp    r12,rdi
  41f810:	mov    QWORD PTR [rbx+0xb0],rdi
  41f817:	je     0x41f82f
  41f819:	mov    rcx,r12
  41f81c:	call   0x402130
  41f821:	mov    QWORD PTR [rbx+0xb0],r12
  41f828:	mov    QWORD PTR [rbx+0xa8],rax
  41f82f:	mov    r9d,DWORD PTR [rbx+0xb0]
  41f836:	mov    r8,QWORD PTR [rbx+0xa8]
  41f83d:	mov    rcx,QWORD PTR [r13+0x0]
  41f841:	lea    rax,[rsp+0x80]
  41f849:	mov    edx,r14d
  41f84c:	mov    QWORD PTR [rsp+0x20],rax
  41f851:	call   QWORD PTR [rip+0x2d7b1]        # 0x44d008
  41f857:	cmp    eax,edi
  41f859:	mov    r12d,eax
  41f85c:	je     0x41f873
  41f85e:	mov    ecx,DWORD PTR [rsp+0x80]
  41f865:	cmp    rcx,QWORD PTR [rbx+0xb0]
  41f86c:	je     0x41f882
  41f86e:	jmp    0x41f7c5
  41f873:	call   QWORD PTR [rip+0x2d927]        # 0x44d1a0
  41f879:	mov    ecx,DWORD PTR [rsp+0x80]
  41f880:	mov    esi,eax
  41f882:	cmp    r12d,edi
  41f885:	je     0x41f8a1
  41f887:	mov    rdx,QWORD PTR [rbx+0xa8]
  41f88e:	mov    r8d,ecx
  41f891:	lea    rcx,[rbx+0x78]
  41f895:	call   0x40e9f0
  41f89a:	mov    DWORD PTR [r15],eax
  41f89d:	xor    eax,eax
  41f89f:	jmp    0x41f8c5
  41f8a1:	cmp    esi,edi
  41f8a3:	cmove  esi,ebp
  41f8a6:	mov    rcx,QWORD PTR [rbx+0xc0]
  41f8ad:	add    QWORD PTR [rbx+0x70],rbp
  41f8b1:	cmp    rcx,rdi
  41f8b4:	je     0x41f8c3
  41f8b6:	mov    rax,QWORD PTR [rcx]
  41f8b9:	mov    r8d,esi
  41f8bc:	mov    rdx,r13
  41f8bf:	call   QWORD PTR [rax]
  41f8c1:	mov    edi,eax
  41f8c3:	mov    eax,edi
  41f8c5:	add    rsp,0x38
  41f8c9:	pop    r15
  41f8cb:	pop    r14
  41f8cd:	pop    r13
  41f8cf:	pop    r12
  41f8d1:	pop    rdi
  41f8d2:	pop    rsi
  41f8d3:	pop    rbp
  41f8d4:	pop    rbx
  41f8d5:	ret    
  41f8d6:	int3   
  41f8d7:	int3   
  41f8d8:	rex.W push rbx
  41f8da:	push   rbp
  41f8db:	push   rsi
  41f8dc:	push   rdi
  41f8dd:	sub    rsp,0x68
  41f8e1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41f8ea:	mov    rsi,rdx
  41f8ed:	mov    rdi,rcx
  41f8f0:	xor    ebx,ebx
  41f8f2:	cmp    BYTE PTR [rcx+0x40],bl
  41f8f5:	je     0x41f9e8
  41f8fb:	mov    eax,DWORD PTR [r8+0x20]
  41f8ff:	shr    eax,0xa
  41f902:	test   al,0x1
  41f904:	je     0x41f9e8
  41f90a:	add    r8,0x28
  41f90e:	mov    rdx,r9
  41f911:	lea    rcx,[rsp+0x28]
  41f916:	call   0x4030d4
  41f91b:	nop
  41f91c:	xor    r8d,r8d
  41f91f:	lea    rdx,[rsi+0x30]
  41f923:	mov    rcx,QWORD PTR [rsp+0x28]
  41f928:	call   0x409938
  41f92d:	cmp    al,bl
  41f92f:	je     0x41f99c
  41f931:	mov    DWORD PTR [rsp+0x38],ebx
  41f935:	mov    DWORD PTR [rsp+0x3c],ebx
  41f939:	lea    rcx,[rsp+0x40]
  41f93e:	call   0x403150
  41f943:	nop
  41f944:	lea    rcx,[rsp+0x50]
  41f949:	call   0x403150
  41f94e:	nop
  41f94f:	mov    r8,QWORD PTR [rsi+0x38]
  41f953:	mov    rdx,QWORD PTR [rsi+0x30]
  41f957:	lea    rcx,[rsp+0x38]
  41f95c:	call   0x409564
  41f961:	cmp    al,bl
  41f963:	je     0x41f988
  41f965:	mov    rcx,QWORD PTR [rsp+0x50]
  41f96a:	call   0x40215c
  41f96f:	mov    rcx,QWORD PTR [rsp+0x40]
  41f974:	call   0x40215c
  41f979:	nop
  41f97a:	mov    rcx,QWORD PTR [rsp+0x28]
  41f97f:	call   0x40215c
  41f984:	xor    eax,eax
  41f986:	jmp    0x41f9ea
  41f988:	mov    rcx,QWORD PTR [rsp+0x50]
  41f98d:	call   0x40215c
  41f992:	mov    rcx,QWORD PTR [rsp+0x40]
  41f997:	call   0x40215c
  41f99c:	call   QWORD PTR [rip+0x2d7fe]        # 0x44d1a0
  41f9a2:	mov    ebp,eax
  41f9a4:	cmp    QWORD PTR [rsi+0x30],rbx
  41f9a8:	je     0x41f9b7
  41f9aa:	mov    rcx,QWORD PTR [rsi+0x30]
  41f9ae:	call   0x40215c
  41f9b3:	mov    QWORD PTR [rsi+0x30],rbx
  41f9b7:	mov    QWORD PTR [rsi+0x38],rbx
  41f9bb:	inc    QWORD PTR [rdi+0x70]
  41f9bf:	mov    rcx,QWORD PTR [rdi+0xc0]
  41f9c6:	cmp    rcx,rbx
  41f9c9:	je     0x41f9da
  41f9cb:	mov    rax,QWORD PTR [rcx]
  41f9ce:	mov    r8d,ebp
  41f9d1:	lea    rdx,[rsp+0x28]
  41f9d6:	call   QWORD PTR [rax]
  41f9d8:	mov    ebx,eax
  41f9da:	mov    rcx,QWORD PTR [rsp+0x28]
  41f9df:	call   0x40215c
  41f9e4:	mov    eax,ebx
  41f9e6:	jmp    0x41f9ea
  41f9e8:	xor    eax,eax
  41f9ea:	add    rsp,0x68
  41f9ee:	pop    rdi
  41f9ef:	pop    rsi
  41f9f0:	pop    rbp
  41f9f1:	pop    rbx
  41f9f2:	ret    
  41f9f3:	int3   
  41f9f4:	int3   
  41f9f5:	int3   
  41f9f6:	int3   
  41f9f7:	int3   
  41f9f8:	rex.W push rbp
  41f9fa:	sub    rsp,0x20
  41f9fe:	mov    rbp,rdx
  41fa01:	lea    rcx,[rbp+0x28]
  41fa05:	call   0x401000
  41fa0a:	add    rsp,0x20
  41fa0e:	pop    rbp
  41fa0f:	ret    
  41fa10:	int3   
  41fa11:	int3   
  41fa12:	int3   
  41fa13:	int3   
  41fa14:	int3   
  41fa15:	int3   
  41fa16:	int3   
  41fa17:	int3   
  41fa18:	rex.W push rbp
  41fa1a:	sub    rsp,0x20
  41fa1e:	mov    rbp,rdx
  41fa21:	lea    rcx,[rbp+0x38]
  41fa25:	add    rcx,0x8
  41fa29:	call   0x401000
  41fa2e:	add    rsp,0x20
  41fa32:	pop    rbp
  41fa33:	ret    
  41fa34:	int3   
  41fa35:	int3   
  41fa36:	int3   
  41fa37:	int3   
  41fa38:	rex.W push rbp
  41fa3a:	sub    rsp,0x20
  41fa3e:	mov    rbp,rdx
  41fa41:	lea    rcx,[rbp+0x38]
  41fa45:	call   0x412650
  41fa4a:	add    rsp,0x20
  41fa4e:	pop    rbp
  41fa4f:	ret    
  41fa50:	rex.W push rbx
  41fa52:	push   rsi
  41fa53:	push   rdi
  41fa54:	sub    rsp,0x20
  41fa58:	cmp    rdx,rcx
  41fa5b:	mov    rbx,rcx
  41fa5e:	je     0x41fab0
  41fa60:	mov    rdi,QWORD PTR [rdx+0x8]
  41fa64:	mov    rsi,QWORD PTR [rdx]
  41fa67:	cmp    rdi,QWORD PTR [rcx+0x8]
  41fa6b:	je     0x41fa9d
  41fa6d:	mov    rcx,QWORD PTR [rcx]
  41fa70:	test   rcx,rcx
  41fa73:	je     0x41fa81
  41fa75:	call   0x40215c
  41fa7a:	mov    QWORD PTR [rbx],0x0
  41fa81:	test   rdi,rdi
  41fa84:	mov    QWORD PTR [rbx+0x8],0x0
  41fa8c:	je     0x41fab0
  41fa8e:	mov    rcx,rdi
  41fa91:	call   0x402130
  41fa96:	mov    QWORD PTR [rbx+0x8],rdi
  41fa9a:	mov    QWORD PTR [rbx],rax
  41fa9d:	test   rdi,rdi
  41faa0:	je     0x41fab0
  41faa2:	mov    rcx,QWORD PTR [rbx]
  41faa5:	mov    r8,rdi
  41faa8:	mov    rdx,rsi
  41faab:	call   0x44b480
  41fab0:	mov    rax,rbx
  41fab3:	add    rsp,0x20
  41fab7:	pop    rdi
  41fab8:	pop    rsi
  41fab9:	pop    rbx
  41faba:	ret    
  41fabb:	int3   
  41fabc:	mov    QWORD PTR [rsp+0x8],rcx
  41fac1:	push   rbx
  41fac2:	push   rsi
  41fac3:	push   rdi
  41fac4:	sub    rsp,0x30
  41fac8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41fad1:	mov    rdi,rdx
  41fad4:	mov    rbx,rcx
  41fad7:	mov    rax,QWORD PTR [rdx]
  41fada:	mov    QWORD PTR [rcx],rax
  41fadd:	mov    rax,QWORD PTR [rdx+0x8]
  41fae1:	mov    QWORD PTR [rcx+0x8],rax
  41fae5:	mov    rax,QWORD PTR [rdx+0x10]
  41fae9:	mov    QWORD PTR [rcx+0x10],rax
  41faed:	mov    rax,QWORD PTR [rdx+0x18]
  41faf1:	mov    QWORD PTR [rcx+0x18],rax
  41faf5:	add    rdx,0x20
  41faf9:	add    rcx,0x20
  41fafd:	call   0x403208
  41fb02:	nop
  41fb03:	mov    QWORD PTR [rbx+0x30],0x0
  41fb0b:	mov    QWORD PTR [rbx+0x38],0x0
  41fb13:	mov    rsi,QWORD PTR [rdi+0x38]
  41fb17:	test   rsi,rsi
  41fb1a:	je     0x41fb3b
  41fb1c:	mov    rcx,rsi
  41fb1f:	call   0x402130
  41fb24:	mov    QWORD PTR [rbx+0x30],rax
  41fb28:	mov    r8,rsi
  41fb2b:	mov    rdx,QWORD PTR [rdi+0x30]
  41fb2f:	mov    rcx,rax
  41fb32:	call   0x44b480
  41fb37:	mov    QWORD PTR [rbx+0x38],rsi
  41fb3b:	mov    QWORD PTR [rbx+0x40],0x0
  41fb43:	mov    QWORD PTR [rbx+0x48],0x0
  41fb4b:	mov    rsi,QWORD PTR [rdi+0x48]
  41fb4f:	test   rsi,rsi
  41fb52:	je     0x41fb73
  41fb54:	mov    rcx,rsi
  41fb57:	call   0x402130
  41fb5c:	mov    QWORD PTR [rbx+0x40],rax
  41fb60:	mov    r8,rsi
  41fb63:	mov    rdx,QWORD PTR [rdi+0x40]
  41fb67:	mov    rcx,rax
  41fb6a:	call   0x44b480
  41fb6f:	mov    QWORD PTR [rbx+0x48],rsi
  41fb73:	mov    eax,DWORD PTR [rdi+0x50]
  41fb76:	mov    DWORD PTR [rbx+0x50],eax
  41fb79:	mov    eax,DWORD PTR [rdi+0x54]
  41fb7c:	mov    DWORD PTR [rbx+0x54],eax
  41fb7f:	mov    eax,DWORD PTR [rdi+0x58]
  41fb82:	mov    DWORD PTR [rbx+0x58],eax
  41fb85:	mov    eax,DWORD PTR [rdi+0x5c]
  41fb88:	mov    DWORD PTR [rbx+0x5c],eax
  41fb8b:	mov    al,BYTE PTR [rdi+0x60]
  41fb8e:	mov    BYTE PTR [rbx+0x60],al
  41fb91:	mov    rax,rbx
  41fb94:	add    rsp,0x30
  41fb98:	pop    rdi
  41fb99:	pop    rsi
  41fb9a:	pop    rbx
  41fb9b:	ret    
  41fb9c:	rex.W push rbp
  41fb9e:	sub    rsp,0x20
  41fba2:	mov    rbp,rdx
  41fba5:	mov    rcx,QWORD PTR [rbp+0x50]
  41fba9:	add    rcx,0x20
  41fbad:	call   0x401000
  41fbb2:	add    rsp,0x20
  41fbb6:	pop    rbp
  41fbb7:	ret    
  41fbb8:	int3   
  41fbb9:	int3   
  41fbba:	int3   
  41fbbb:	int3   
  41fbbc:	rex.W push rbp
  41fbbe:	sub    rsp,0x20
  41fbc2:	mov    rbp,rdx
  41fbc5:	mov    rcx,QWORD PTR [rbp+0x50]
  41fbc9:	add    rcx,0x30
  41fbcd:	call   0x401000
  41fbd2:	add    rsp,0x20
  41fbd6:	pop    rbp
  41fbd7:	ret    
  41fbd8:	mov    QWORD PTR [rsp+0x10],rdx
  41fbdd:	push   rbx
  41fbde:	push   rbp
  41fbdf:	push   rsi
  41fbe0:	push   rdi
  41fbe1:	push   r12
  41fbe3:	push   r13
  41fbe5:	push   r14
  41fbe7:	mov    rax,rsp
  41fbea:	sub    rsp,0x30
  41fbee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  41fbf7:	mov    esi,r9d
  41fbfa:	mov    rbp,r8
  41fbfd:	mov    rdi,rdx
  41fc00:	mov    r12,rcx
  41fc03:	mov    DWORD PTR [rax+0x58],0x0
  41fc0a:	mov    rcx,rdx
  41fc0d:	call   0x403150
  41fc12:	mov    DWORD PTR [rsp+0x88],0x1
  41fc1d:	mov    r13,QWORD PTR [rsp+0x90]
  41fc25:	mov    ebx,DWORD PTR [r13+0x8]
  41fc29:	mov    eax,esi
  41fc2b:	test   esi,esi
  41fc2d:	js     0x41fc48
  41fc2f:	mov    rdx,QWORD PTR [r12]
  41fc33:	mov    r8,QWORD PTR [rbp+0x0]
  41fc37:	mov    ecx,eax
  41fc39:	mov    rax,QWORD PTR [rdx+rcx*8]
  41fc3d:	add    ebx,DWORD PTR [rax+0x8]
  41fc40:	mov    eax,DWORD PTR [r8+rcx*4]
  41fc44:	test   eax,eax
  41fc46:	jns    0x41fc37
  41fc48:	cmp    ebx,DWORD PTR [rdi+0xc]
  41fc4b:	jbe    0x41fc57
  41fc4d:	mov    edx,ebx
  41fc4f:	mov    rcx,rdi
  41fc52:	call   0x402ea4
  41fc57:	mov    rdx,QWORD PTR [rdi]
  41fc5a:	mov    ecx,ebx
  41fc5c:	mov    WORD PTR [rdx+rcx*2],0x0
  41fc62:	mov    DWORD PTR [rdi+0x8],ebx
  41fc65:	mov    eax,DWORD PTR [r13+0x8]
  41fc69:	sub    rcx,rax
  41fc6c:	lea    r14,[rdx+rcx*2]
  41fc70:	mov    r8d,DWORD PTR [r13+0x8]
  41fc74:	add    r8,r8
  41fc77:	mov    rdx,QWORD PTR [r13+0x0]
  41fc7b:	mov    rcx,r14
  41fc7e:	call   0x44b480
  41fc83:	test   esi,esi
  41fc85:	js     0x41fcb9
  41fc87:	mov    ebx,esi
  41fc89:	mov    rax,QWORD PTR [r12]
  41fc8d:	mov    rdx,QWORD PTR [rax+rbx*8]
  41fc91:	mov    eax,DWORD PTR [rdx+0x8]
  41fc94:	neg    rax
  41fc97:	lea    r14,[r14+rax*2]
  41fc9b:	mov    r8d,DWORD PTR [rdx+0x8]
  41fc9f:	add    r8,r8
  41fca2:	mov    rdx,QWORD PTR [rdx]
  41fca5:	mov    rcx,r14
  41fca8:	call   0x44b480
  41fcad:	mov    r11,QWORD PTR [rbp+0x0]
  41fcb1:	mov    esi,DWORD PTR [r11+rbx*4]
  41fcb5:	test   esi,esi
  41fcb7:	jns    0x41fc87
  41fcb9:	mov    rax,rdi
  41fcbc:	add    rsp,0x30
  41fcc0:	pop    r14
  41fcc2:	pop    r13
  41fcc4:	pop    r12
  41fcc6:	pop    rdi
  41fcc7:	pop    rsi
  41fcc8:	pop    rbp
  41fcc9:	pop    rbx
  41fcca:	ret    
  41fccb:	int3   
  41fccc:	int3   
  41fccd:	int3   
  41fcce:	int3   
  41fccf:	int3   
  41fcd0:	int3   
  41fcd1:	int3   
  41fcd2:	int3   
  41fcd3:	int3   
  41fcd4:	int3   
  41fcd5:	int3   
  41fcd6:	int3   
  41fcd7:	int3   
  41fcd8:	rex.W push rbp
  41fcda:	sub    rsp,0x20
  41fcde:	mov    rbp,rdx
  41fce1:	mov    eax,DWORD PTR [rbp+0x88]
  41fce7:	and    eax,0x1
  41fcea:	test   eax,eax
  41fcec:	je     0x41fcfe
  41fcee:	and    DWORD PTR [rbp+0x88],0xfffffffe
  41fcf5:	mov    rcx,QWORD PTR [rbp+0x78]
  41fcf9:	call   0x401000
  41fcfe:	add    rsp,0x20
  41fd02:	pop    rbp
  41fd03:	ret    
  41fd04:	rex.W push rbx
  41fd06:	sub    rsp,0x30
  41fd0a:	mov    rax,QWORD PTR [rcx+0x30]
  41fd0e:	mov    r8d,r8d
  41fd11:	mov    rbx,rdx
  41fd14:	mov    r9,QWORD PTR [rax+r8*8]
  41fd18:	lea    r8,[rcx+0x10]
  41fd1c:	mov    DWORD PTR [rsp+0x50],0x0
  41fd24:	lea    rax,[r9+0x20]
  41fd28:	mov    r9d,DWORD PTR [r9+0x54]
  41fd2c:	mov    QWORD PTR [rsp+0x20],rax
  41fd31:	call   0x41fbd8
  41fd36:	mov    rax,rbx
  41fd39:	add    rsp,0x30
  41fd3d:	pop    rbx
  41fd3e:	ret    
  41fd3f:	int3   
  41fd40:	rex.W push rbx
  41fd42:	sub    rsp,0x30
  41fd46:	mov    rax,QWORD PTR [rcx+0x30]
  41fd4a:	mov    r8d,r8d
  41fd4d:	mov    rbx,rdx
  41fd50:	mov    r9,QWORD PTR [rax+r8*8]
  41fd54:	lea    r8,[rcx+0x20]
  41fd58:	mov    DWORD PTR [rsp+0x50],0x0
  41fd60:	lea    rax,[r9+0x20]
  41fd64:	mov    r9d,DWORD PTR [r9+0x58]
  41fd68:	mov    QWORD PTR [rsp+0x20],rax
  41fd6d:	call   0x41fbd8
  41fd72:	mov    rax,rbx
  41fd75:	add    rsp,0x30
  41fd79:	pop    rbx
  41fd7a:	ret    
  41fd7b:	int3   
  41fd7c:	rex.W push rbx
  41fd7e:	push   rsi
  41fd7f:	push   rdi
  41fd80:	sub    rsp,0x20
  41fd84:	mov    eax,DWORD PTR [rcx+0x8]
  41fd87:	xor    edi,edi
  41fd89:	mov    rbx,rcx
  41fd8c:	cmp    eax,DWORD PTR [rcx+0xc]
  41fd8f:	je     0x41fdcb
  41fd91:	cmp    eax,edi
  41fd93:	mov    rsi,rdi
  41fd96:	je     0x41fdba
  41fd98:	mov    rcx,rax
  41fd9b:	shl    rcx,0x3
  41fd9f:	call   0x402130
  41fda4:	mov    r8d,DWORD PTR [rbx+0x8]
  41fda8:	mov    rdx,QWORD PTR [rbx]
  41fdab:	shl    r8,0x3
  41fdaf:	mov    rcx,rax
  41fdb2:	mov    rsi,rax
  41fdb5:	call   0x44b480
  41fdba:	mov    rcx,QWORD PTR [rbx]
  41fdbd:	call   0x40215c
  41fdc2:	mov    eax,DWORD PTR [rbx+0x8]
  41fdc5:	mov    QWORD PTR [rbx],rsi
  41fdc8:	mov    DWORD PTR [rbx+0xc],eax
  41fdcb:	mov    eax,DWORD PTR [rbx+0x18]
  41fdce:	cmp    eax,DWORD PTR [rbx+0x1c]
  41fdd1:	je     0x41fe10
  41fdd3:	cmp    eax,edi
  41fdd5:	mov    rsi,rdi
  41fdd8:	je     0x41fdfd
  41fdda:	mov    rcx,rax
  41fddd:	shl    rcx,0x2
  41fde1:	call   0x402130
  41fde6:	mov    r8d,DWORD PTR [rbx+0x18]
  41fdea:	mov    rdx,QWORD PTR [rbx+0x10]
  41fdee:	shl    r8,0x2
  41fdf2:	mov    rcx,rax
  41fdf5:	mov    rsi,rax
  41fdf8:	call   0x44b480
  41fdfd:	mov    rcx,QWORD PTR [rbx+0x10]
  41fe01:	call   0x40215c
  41fe06:	mov    eax,DWORD PTR [rbx+0x18]
  41fe09:	mov    QWORD PTR [rbx+0x10],rsi
  41fe0d:	mov    DWORD PTR [rbx+0x1c],eax
  41fe10:	mov    eax,DWORD PTR [rbx+0x28]
  41fe13:	cmp    eax,DWORD PTR [rbx+0x2c]
  41fe16:	je     0x41fe55
  41fe18:	cmp    eax,edi
  41fe1a:	mov    rsi,rdi
  41fe1d:	je     0x41fe42
  41fe1f:	mov    rcx,rax
  41fe22:	shl    rcx,0x2
  41fe26:	call   0x402130
  41fe2b:	mov    r8d,DWORD PTR [rbx+0x28]
  41fe2f:	mov    rdx,QWORD PTR [rbx+0x20]
  41fe33:	shl    r8,0x2
  41fe37:	mov    rcx,rax
  41fe3a:	mov    rsi,rax
  41fe3d:	call   0x44b480
  41fe42:	mov    rcx,QWORD PTR [rbx+0x20]
  41fe46:	call   0x40215c
  41fe4b:	mov    eax,DWORD PTR [rbx+0x28]
  41fe4e:	mov    QWORD PTR [rbx+0x20],rsi
  41fe52:	mov    DWORD PTR [rbx+0x2c],eax
  41fe55:	mov    eax,DWORD PTR [rbx+0x38]
  41fe58:	cmp    eax,DWORD PTR [rbx+0x3c]
  41fe5b:	je     0x41fe97
  41fe5d:	cmp    eax,edi
  41fe5f:	je     0x41fe84
  41fe61:	mov    rcx,rax
  41fe64:	shl    rcx,0x3
  41fe68:	call   0x402130
  41fe6d:	mov    r8d,DWORD PTR [rbx+0x38]
  41fe71:	mov    rdx,QWORD PTR [rbx+0x30]
  41fe75:	shl    r8,0x3
  41fe79:	mov    rcx,rax
  41fe7c:	mov    rdi,rax
  41fe7f:	call   0x44b480
  41fe84:	mov    rcx,QWORD PTR [rbx+0x30]
  41fe88:	call   0x40215c
  41fe8d:	mov    eax,DWORD PTR [rbx+0x38]
  41fe90:	mov    QWORD PTR [rbx+0x30],rdi
  41fe94:	mov    DWORD PTR [rbx+0x3c],eax
  41fe97:	add    rsp,0x20
  41fe9b:	pop    rdi
  41fe9c:	pop    rsi
  41fe9d:	pop    rbx
  41fe9e:	ret    
  41fe9f:	int3   
  41fea0:	rex.W push rbx
  41fea2:	push   rdi
  41fea3:	sub    rsp,0x28
  41fea7:	add    DWORD PTR [rcx+0x18],0xffffffff
  41feab:	add    DWORD PTR [rcx+0x28],0xffffffff
  41feaf:	mov    edx,DWORD PTR [rcx+0x8]
  41feb2:	mov    rax,QWORD PTR [rcx]
  41feb5:	dec    edx
  41feb7:	mov    rbx,rcx
  41feba:	mov    rdi,QWORD PTR [rax+rdx*8]
  41febe:	test   rdi,rdi
  41fec1:	je     0x41fed3
  41fec3:	mov    rcx,QWORD PTR [rdi]
  41fec6:	call   0x40215c
  41fecb:	mov    rcx,rdi
  41fece:	call   0x40215c
  41fed3:	add    DWORD PTR [rbx+0x8],0xffffffff
  41fed7:	add    rsp,0x28
  41fedb:	pop    rdi
  41fedc:	pop    rbx
  41fedd:	ret    
  41fede:	int3   
  41fedf:	int3   
  41fee0:	rex.W push rbx
  41fee2:	push   rbp
  41fee3:	push   rsi
  41fee4:	push   rdi
  41fee5:	push   r12
  41fee7:	push   r13
  41fee9:	sub    rsp,0xe8
  41fef0:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
  41fefc:	mov    rdi,rcx
  41feff:	cmp    BYTE PTR [rcx+0x40],0x0
  41ff03:	je     0x4204c1
  41ff09:	xor    ebp,ebp
  41ff0b:	cmp    DWORD PTR [rcx+0x38],ebp
  41ff0e:	jbe    0x4204c1
  41ff14:	xor    r13d,r13d
  41ff17:	mov    rax,QWORD PTR [rdi+0x30]
  41ff1b:	mov    r12,QWORD PTR [r13+rax*1+0x0]
  41ff20:	cmp    QWORD PTR [r12+0x38],0x0
  41ff26:	je     0x4204b2
  41ff2c:	mov    DWORD PTR [rsp+0x50],0x0
  41ff34:	mov    DWORD PTR [rsp+0x54],0x0
  41ff3c:	lea    rcx,[rsp+0x58]
  41ff41:	call   0x403150
  41ff46:	nop
  41ff47:	lea    rcx,[rsp+0x68]
  41ff4c:	call   0x403150
  41ff51:	nop
  41ff52:	mov    r8,QWORD PTR [r12+0x38]
  41ff57:	mov    rdx,QWORD PTR [r12+0x30]
  41ff5c:	lea    rcx,[rsp+0x50]
  41ff61:	call   0x409564
  41ff66:	test   al,al
  41ff68:	jne    0x41ff83
  41ff6a:	mov    rcx,QWORD PTR [rsp+0x68]
  41ff6f:	call   0x40215c
  41ff74:	mov    rcx,QWORD PTR [rsp+0x58]
  41ff79:	call   0x40215c
  41ff7e:	jmp    0x4204b2
  41ff83:	cmp    DWORD PTR [rsp+0x54],0x1
  41ff88:	jne    0x41ffa3
  41ff8a:	mov    rcx,QWORD PTR [rsp+0x68]
  41ff8f:	call   0x40215c
  41ff94:	mov    rcx,QWORD PTR [rsp+0x58]
  41ff99:	call   0x40215c
  41ff9e:	jmp    0x4204b2
  41ffa3:	lea    rdx,[rsp+0x20]
  41ffa8:	lea    rcx,[rsp+0x50]
  41ffad:	call   0x4096c8
  41ffb2:	nop
  41ffb3:	mov    rcx,QWORD PTR [rsp+0x20]
  41ffb8:	call   0x409dbc
  41ffbd:	test   al,al
  41ffbf:	jne    0x41ffe5
  41ffc1:	mov    rcx,QWORD PTR [rsp+0x20]
  41ffc6:	call   0x40215c
  41ffcb:	nop
  41ffcc:	mov    rcx,QWORD PTR [rsp+0x68]
  41ffd1:	call   0x40215c
  41ffd6:	mov    rcx,QWORD PTR [rsp+0x58]
  41ffdb:	call   0x40215c
  41ffe0:	jmp    0x4204b2
  41ffe5:	lea    rcx,[rsp+0x78]
  41ffea:	call   0x403150
  41ffef:	nop
  41fff0:	mov    r8d,ebp
  41fff3:	lea    rdx,[rsp+0xc8]
  41fffb:	mov    rcx,rdi
  41fffe:	call   0x41fd04
  420003:	nop
  420004:	lea    rdx,[rsp+0x78]
  420009:	mov    rcx,QWORD PTR [rax]
  42000c:	call   0x4070b4
  420011:	test   al,al
  420013:	sete   bl
  420016:	mov    rcx,QWORD PTR [rsp+0xc8]
  42001e:	call   0x40215c
  420023:	test   bl,bl
  420025:	je     0x420056
  420027:	mov    rcx,QWORD PTR [rsp+0x78]
  42002c:	call   0x40215c
  420031:	nop
  420032:	mov    rcx,QWORD PTR [rsp+0x20]
  420037:	call   0x40215c
  42003c:	nop
  42003d:	mov    rcx,QWORD PTR [rsp+0x68]
  420042:	call   0x40215c
  420047:	mov    rcx,QWORD PTR [rsp+0x58]
  42004c:	call   0x40215c
  420051:	jmp    0x4204b2
  420056:	lea    rdx,[rsp+0x78]
  42005b:	lea    rcx,[rsp+0x40]
  420060:	call   0x403208
  420065:	nop
  420066:	mov    r8d,ebp
  420069:	lea    rdx,[rsp+0x30]
  42006e:	mov    rcx,rdi
  420071:	call   0x41fd40
  420076:	nop
  420077:	mov    eax,DWORD PTR [rsp+0x48]
  42007b:	cmp    DWORD PTR [rsp+0x38],eax
  42007f:	jb     0x4200c6
  420081:	mov    rcx,QWORD PTR [rsp+0x30]
  420086:	call   0x40215c
  42008b:	nop
  42008c:	mov    rcx,QWORD PTR [rsp+0x40]
  420091:	call   0x40215c
  420096:	nop
  420097:	mov    rcx,QWORD PTR [rsp+0x78]
  42009c:	call   0x40215c
  4200a1:	nop
  4200a2:	mov    rcx,QWORD PTR [rsp+0x20]
  4200a7:	call   0x40215c
  4200ac:	nop
  4200ad:	mov    rcx,QWORD PTR [rsp+0x68]
  4200b2:	call   0x40215c
  4200b7:	mov    rcx,QWORD PTR [rsp+0x58]
  4200bc:	call   0x40215c
  4200c1:	jmp    0x4204b2
  4200c6:	mov    rcx,rax
  4200c9:	mov    eax,DWORD PTR [rsp+0x38]
  4200cd:	sub    rcx,rax
  4200d0:	mov    rax,QWORD PTR [rsp+0x40]
  4200d5:	lea    rdx,[rax+rcx*2]
  4200d9:	mov    rcx,QWORD PTR [rsp+0x30]
  4200de:	call   0x4042ec
  4200e3:	test   eax,eax
  4200e5:	je     0x42012c
  4200e7:	mov    rcx,QWORD PTR [rsp+0x30]
  4200ec:	call   0x40215c
  4200f1:	nop
  4200f2:	mov    rcx,QWORD PTR [rsp+0x40]
  4200f7:	call   0x40215c
  4200fc:	nop
  4200fd:	mov    rcx,QWORD PTR [rsp+0x78]
  420102:	call   0x40215c
  420107:	nop
  420108:	mov    rcx,QWORD PTR [rsp+0x20]
  42010d:	call   0x40215c
  420112:	nop
  420113:	mov    rcx,QWORD PTR [rsp+0x68]
  420118:	call   0x40215c
  42011d:	mov    rcx,QWORD PTR [rsp+0x58]
  420122:	call   0x40215c
  420127:	jmp    0x4204b2
  42012c:	mov    r8d,DWORD PTR [rsp+0x48]
  420131:	sub    r8d,DWORD PTR [rsp+0x38]
  420136:	lea    rdx,[rsp+0x88]
  42013e:	lea    rcx,[rsp+0x40]
  420143:	call   0x4042a0
  420148:	nop
  420149:	mov    eax,DWORD PTR [rsp+0x90]
  420150:	dec    eax
  420152:	mov    rcx,QWORD PTR [rsp+0x88]
  42015a:	cmp    WORD PTR [rcx+rax*2],0x5c
  42015f:	je     0x4201b3
  420161:	cmp    WORD PTR [rcx+rax*2],0x2f
  420166:	je     0x4201b3
  420168:	call   0x40215c
  42016d:	nop
  42016e:	mov    rcx,QWORD PTR [rsp+0x30]
  420173:	call   0x40215c
  420178:	nop
  420179:	mov    rcx,QWORD PTR [rsp+0x40]
  42017e:	call   0x40215c
  420183:	nop
  420184:	mov    rcx,QWORD PTR [rsp+0x78]
  420189:	call   0x40215c
  42018e:	nop
  42018f:	mov    rcx,QWORD PTR [rsp+0x20]
  420194:	call   0x40215c
  420199:	nop
  42019a:	mov    rcx,QWORD PTR [rsp+0x68]
  42019f:	call   0x40215c
  4201a4:	mov    rcx,QWORD PTR [rsp+0x58]
  4201a9:	call   0x40215c
  4201ae:	jmp    0x4204b2
  4201b3:	call   0x40a168
  4201b8:	mov    esi,eax
  4201ba:	test   eax,eax
  4201bc:	jne    0x420211
  4201be:	mov    rcx,QWORD PTR [rsp+0x88]
  4201c6:	call   0x40215c
  4201cb:	nop
  4201cc:	mov    rcx,QWORD PTR [rsp+0x30]
  4201d1:	call   0x40215c
  4201d6:	nop
  4201d7:	mov    rcx,QWORD PTR [rsp+0x40]
  4201dc:	call   0x40215c
  4201e1:	nop
  4201e2:	mov    rcx,QWORD PTR [rsp+0x78]
  4201e7:	call   0x40215c
  4201ec:	nop
  4201ed:	mov    rcx,QWORD PTR [rsp+0x20]
  4201f2:	call   0x40215c
  4201f7:	nop
  4201f8:	mov    rcx,QWORD PTR [rsp+0x68]
  4201fd:	call   0x40215c
  420202:	mov    rcx,QWORD PTR [rsp+0x58]
  420207:	call   0x40215c
  42020c:	jmp    0x4204b2
  420211:	mov    r8d,DWORD PTR [rsp+0x90]
  420219:	cmp    eax,r8d
  42021c:	jne    0x420271
  42021e:	mov    rcx,QWORD PTR [rsp+0x88]
  420226:	call   0x40215c
  42022b:	nop
  42022c:	mov    rcx,QWORD PTR [rsp+0x30]
  420231:	call   0x40215c
  420236:	nop
  420237:	mov    rcx,QWORD PTR [rsp+0x40]
  42023c:	call   0x40215c
  420241:	nop
  420242:	mov    rcx,QWORD PTR [rsp+0x78]
  420247:	call   0x40215c
  42024c:	nop
  42024d:	mov    rcx,QWORD PTR [rsp+0x20]
  420252:	call   0x40215c
  420257:	nop
  420258:	mov    rcx,QWORD PTR [rsp+0x68]
  42025d:	call   0x40215c
  420262:	mov    rcx,QWORD PTR [rsp+0x58]
  420267:	call   0x40215c
  42026c:	jmp    0x4204b2
  420271:	cmp    DWORD PTR [rsp+0x28],r8d
  420276:	ja     0x4202cb
  420278:	mov    rcx,QWORD PTR [rsp+0x88]
  420280:	call   0x40215c
  420285:	nop
  420286:	mov    rcx,QWORD PTR [rsp+0x30]
  42028b:	call   0x40215c
  420290:	nop
  420291:	mov    rcx,QWORD PTR [rsp+0x40]
  420296:	call   0x40215c
  42029b:	nop
  42029c:	mov    rcx,QWORD PTR [rsp+0x78]
  4202a1:	call   0x40215c
  4202a6:	nop
  4202a7:	mov    rcx,QWORD PTR [rsp+0x20]
  4202ac:	call   0x40215c
  4202b1:	nop
  4202b2:	mov    rcx,QWORD PTR [rsp+0x68]
  4202b7:	call   0x40215c
  4202bc:	mov    rcx,QWORD PTR [rsp+0x58]
  4202c1:	call   0x40215c
  4202c6:	jmp    0x4204b2
  4202cb:	lea    rdx,[rsp+0xb8]
  4202d3:	lea    rcx,[rsp+0x20]
  4202d8:	call   0x4042a0
  4202dd:	mov    rdx,QWORD PTR [rsp+0x88]
  4202e5:	mov    rcx,QWORD PTR [rax]
  4202e8:	call   0x4042ec
  4202ed:	test   eax,eax
  4202ef:	setne  bl
  4202f2:	mov    rcx,QWORD PTR [rsp+0xb8]
  4202fa:	call   0x40215c
  4202ff:	test   bl,bl
  420301:	je     0x420356
  420303:	mov    rcx,QWORD PTR [rsp+0x88]
  42030b:	call   0x40215c
  420310:	nop
  420311:	mov    rcx,QWORD PTR [rsp+0x30]
  420316:	call   0x40215c
  42031b:	nop
  42031c:	mov    rcx,QWORD PTR [rsp+0x40]
  420321:	call   0x40215c
  420326:	nop
  420327:	mov    rcx,QWORD PTR [rsp+0x78]
  42032c:	call   0x40215c
  420331:	nop
  420332:	mov    rcx,QWORD PTR [rsp+0x20]
  420337:	call   0x40215c
  42033c:	nop
  42033d:	mov    rcx,QWORD PTR [rsp+0x68]
  420342:	call   0x40215c
  420347:	mov    rcx,QWORD PTR [rsp+0x58]
  42034c:	call   0x40215c
  420351:	jmp    0x4204b2
  420356:	mov    r8d,esi
  420359:	lea    rdx,[rsp+0xa8]
  420361:	lea    rcx,[rsp+0x88]
  420369:	call   0x4042a0
  42036e:	nop
  42036f:	mov    ecx,DWORD PTR [rsp+0x90]
  420376:	mov    rax,QWORD PTR [rsp+0x20]
  42037b:	lea    rdx,[rax+rcx*2]
  42037f:	lea    rcx,[rsp+0xa8]
  420387:	call   0x4033f0
  42038c:	mov    QWORD PTR [rsp+0x98],0x0
  420398:	mov    QWORD PTR [rsp+0xa0],0x0
  4203a4:	cmp    DWORD PTR [rsp+0x50],0xa000000c
  4203ac:	sete   r8b
  4203b0:	mov    rdx,QWORD PTR [rsp+0xa8]
  4203b8:	lea    rcx,[rsp+0x98]
  4203c0:	call   0x409730
  4203c5:	test   al,al
  4203c7:	jne    0x420435
  4203c9:	mov    rcx,QWORD PTR [rsp+0x98]
  4203d1:	call   0x40215c
  4203d6:	nop
  4203d7:	mov    rcx,QWORD PTR [rsp+0xa8]
  4203df:	call   0x40215c
  4203e4:	nop
  4203e5:	mov    rcx,QWORD PTR [rsp+0x88]
  4203ed:	call   0x40215c
  4203f2:	nop
  4203f3:	mov    rcx,QWORD PTR [rsp+0x30]
  4203f8:	call   0x40215c
  4203fd:	nop
  4203fe:	mov    rcx,QWORD PTR [rsp+0x40]
  420403:	call   0x40215c
  420408:	nop
  420409:	mov    rcx,QWORD PTR [rsp+0x78]
  42040e:	call   0x40215c
  420413:	nop
  420414:	mov    rcx,QWORD PTR [rsp+0x20]
  420419:	call   0x40215c
  42041e:	nop
  42041f:	mov    rcx,QWORD PTR [rsp+0x68]
  420424:	call   0x40215c
  420429:	mov    rcx,QWORD PTR [rsp+0x58]
  42042e:	call   0x40215c
  420433:	jmp    0x4204b2
  420435:	lea    rcx,[r12+0x40]
  42043a:	lea    rdx,[rsp+0x98]
  420442:	call   0x41fa50
  420447:	nop
  420448:	mov    rcx,QWORD PTR [rsp+0x98]
  420450:	call   0x40215c
  420455:	nop
  420456:	mov    rcx,QWORD PTR [rsp+0xa8]
  42045e:	call   0x40215c
  420463:	nop
  420464:	mov    rcx,QWORD PTR [rsp+0x88]
  42046c:	call   0x40215c
  420471:	nop
  420472:	mov    rcx,QWORD PTR [rsp+0x30]
  420477:	call   0x40215c
  42047c:	nop
  42047d:	mov    rcx,QWORD PTR [rsp+0x40]
  420482:	call   0x40215c
  420487:	nop
  420488:	mov    rcx,QWORD PTR [rsp+0x78]
  42048d:	call   0x40215c
  420492:	nop
  420493:	mov    rcx,QWORD PTR [rsp+0x20]
  420498:	call   0x40215c
  42049d:	nop
  42049e:	mov    rcx,QWORD PTR [rsp+0x68]
  4204a3:	call   0x40215c
  4204a8:	mov    rcx,QWORD PTR [rsp+0x58]
  4204ad:	call   0x40215c
  4204b2:	inc    ebp
  4204b4:	add    r13,0x8
  4204b8:	cmp    ebp,DWORD PTR [rdi+0x38]
  4204bb:	jb     0x41ff17
  4204c1:	add    rsp,0xe8
  4204c8:	pop    r13
  4204ca:	pop    r12
  4204cc:	pop    rdi
  4204cd:	pop    rsi
  4204ce:	pop    rbp
  4204cf:	pop    rbx
  4204d0:	ret    
  4204d1:	int3   
  4204d2:	int3   
  4204d3:	int3   
  4204d4:	int3   
  4204d5:	int3   
  4204d6:	int3   
  4204d7:	int3   
  4204d8:	int3   
  4204d9:	int3   
  4204da:	int3   
  4204db:	int3   
  4204dc:	int3   
  4204dd:	int3   
  4204de:	int3   
  4204df:	int3   
  4204e0:	rex.W push rbp
  4204e2:	sub    rsp,0x20
  4204e6:	mov    rbp,rdx
  4204e9:	lea    rcx,[rbp+0x50]
  4204ed:	add    rcx,0x8
  4204f1:	call   0x401000
  4204f6:	add    rsp,0x20
  4204fa:	pop    rbp
  4204fb:	ret    
  4204fc:	int3   
  4204fd:	int3   
  4204fe:	int3   
  4204ff:	int3   
  420500:	rex.W push rbp
  420502:	sub    rsp,0x20
  420506:	mov    rbp,rdx
  420509:	lea    rcx,[rbp+0x50]
  42050d:	call   0x412650
  420512:	add    rsp,0x20
  420516:	pop    rbp
  420517:	ret    
  420518:	int3   
  420519:	int3   
  42051a:	int3   
  42051b:	int3   
  42051c:	int3   
  42051d:	int3   
  42051e:	int3   
  42051f:	int3   
  420520:	rex.W push rbp
  420522:	sub    rsp,0x20
  420526:	mov    rbp,rdx
  420529:	lea    rcx,[rbp+0x20]
  42052d:	call   0x401000
  420532:	add    rsp,0x20
  420536:	pop    rbp
  420537:	ret    
  420538:	int3   
  420539:	int3   
  42053a:	int3   
  42053b:	int3   
  42053c:	int3   
  42053d:	int3   
  42053e:	int3   
  42053f:	int3   
  420540:	rex.W push rbp
  420542:	sub    rsp,0x20
  420546:	mov    rbp,rdx
  420549:	lea    rcx,[rbp+0x78]
  42054d:	call   0x401000
  420552:	add    rsp,0x20
  420556:	pop    rbp
  420557:	ret    
  420558:	int3   
  420559:	int3   
  42055a:	int3   
  42055b:	int3   
  42055c:	int3   
  42055d:	int3   
  42055e:	int3   
  42055f:	int3   
  420560:	rex.W push rbp
  420562:	sub    rsp,0x20
  420566:	mov    rbp,rdx
  420569:	lea    rcx,[rbp+0xc8]
  420570:	call   0x401000
  420575:	add    rsp,0x20
  420579:	pop    rbp
  42057a:	ret    
  42057b:	int3   
  42057c:	int3   
  42057d:	int3   
  42057e:	int3   
  42057f:	int3   
  420580:	rex.W push rbp
  420582:	sub    rsp,0x20
  420586:	mov    rbp,rdx
  420589:	lea    rcx,[rbp+0x40]
  42058d:	call   0x401000
  420592:	add    rsp,0x20
  420596:	pop    rbp
  420597:	ret    
  420598:	int3   
  420599:	int3   
  42059a:	int3   
  42059b:	int3   
  42059c:	int3   
  42059d:	int3   
  42059e:	int3   
  42059f:	int3   
  4205a0:	rex.W push rbp
  4205a2:	sub    rsp,0x20
  4205a6:	mov    rbp,rdx
  4205a9:	lea    rcx,[rbp+0x30]
  4205ad:	call   0x401000
  4205b2:	add    rsp,0x20
  4205b6:	pop    rbp
  4205b7:	ret    
  4205b8:	int3   
  4205b9:	int3   
  4205ba:	int3   
  4205bb:	int3   
  4205bc:	int3   
  4205bd:	int3   
  4205be:	int3   
  4205bf:	int3   
  4205c0:	rex.W push rbp
  4205c2:	sub    rsp,0x20
  4205c6:	mov    rbp,rdx
  4205c9:	lea    rcx,[rbp+0x88]
  4205d0:	call   0x401000
  4205d5:	add    rsp,0x20
  4205d9:	pop    rbp
  4205da:	ret    
  4205db:	int3   
  4205dc:	int3   
  4205dd:	int3   
  4205de:	int3   
  4205df:	int3   
  4205e0:	rex.W push rbp
  4205e2:	sub    rsp,0x20
  4205e6:	mov    rbp,rdx
  4205e9:	lea    rcx,[rbp+0xa8]
  4205f0:	call   0x401000
  4205f5:	add    rsp,0x20
  4205f9:	pop    rbp
  4205fa:	ret    
  4205fb:	int3   
  4205fc:	int3   
  4205fd:	int3   
  4205fe:	int3   
  4205ff:	int3   
  420600:	rex.W push rbp
  420602:	sub    rsp,0x20
  420606:	mov    rbp,rdx
  420609:	lea    rcx,[rbp+0x98]
  420610:	call   0x401000
  420615:	add    rsp,0x20
  420619:	pop    rbp
  42061a:	ret    
  42061b:	int3   
  42061c:	rex.W push rbx
  42061e:	push   rbp
  42061f:	push   rsi
  420620:	push   rdi
  420621:	push   r12
  420623:	sub    rsp,0xa0
  42062a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  420633:	mov    esi,r9d
  420636:	mov    edi,r8d
  420639:	mov    ebx,edx
  42063b:	mov    rbp,rcx
  42063e:	lea    rcx,[rsp+0x50]
  420643:	call   0x403150
  420648:	mov    QWORD PTR [rsp+0x60],0x0
  420651:	mov    QWORD PTR [rsp+0x68],0x0
  42065a:	mov    QWORD PTR [rsp+0x70],0x0
  420663:	mov    QWORD PTR [rsp+0x78],0x0
  42066c:	mov    r12,QWORD PTR [rsp+0xf0]
  420674:	mov    rax,QWORD PTR [r12]
  420678:	mov    QWORD PTR [rsp+0x30],rax
  42067d:	mov    rax,QWORD PTR [r12+0x8]
  420682:	mov    QWORD PTR [rsp+0x38],rax
  420687:	mov    rax,QWORD PTR [r12+0x10]
  42068c:	mov    QWORD PTR [rsp+0x40],rax
  420691:	mov    rax,QWORD PTR [r12+0x18]
  420696:	mov    QWORD PTR [rsp+0x48],rax
  42069b:	mov    eax,DWORD PTR [r12+0x20]
  4206a0:	mov    DWORD PTR [rsp+0x80],eax
  4206a7:	mov    al,BYTE PTR [r12+0x24]
  4206ac:	mov    BYTE PTR [rsp+0x90],al
  4206b3:	mov    DWORD PTR [rsp+0x84],ebx
  4206ba:	mov    DWORD PTR [rsp+0x88],edi
  4206c1:	mov    DWORD PTR [rsp+0x8c],esi
  4206c8:	lea    rdx,[r12+0x28]
  4206cd:	lea    rcx,[rsp+0x50]
  4206d2:	call   0x4032f8
  4206d7:	mov    ecx,0x68
  4206dc:	call   0x402130
  4206e1:	mov    QWORD PTR [rsp+0xf0],rax
  4206e9:	test   rax,rax
  4206ec:	je     0x4206fd
  4206ee:	lea    rdx,[rsp+0x30]
  4206f3:	mov    rcx,rax
  4206f6:	call   0x41fabc
  4206fb:	jmp    0x4206ff
  4206fd:	xor    eax,eax
  4206ff:	lea    rcx,[rbp+0x30]
  420703:	mov    rdx,rax
  420706:	call   0x4010c8
  42070b:	mov    r11d,DWORD PTR [r12+0x20]
  420710:	shr    r11d,0x4
  420714:	test   r11b,0x1
  420718:	je     0x420720
  42071a:	inc    QWORD PTR [rbp+0x48]
  42071e:	jmp    0x420742
  420720:	cmp    BYTE PTR [r12+0x24],0x0
  420726:	je     0x420736
  420728:	inc    QWORD PTR [rbp+0x58]
  42072c:	mov    rax,QWORD PTR [r12]
  420730:	add    QWORD PTR [rbp+0x68],rax
  420734:	jmp    0x420742
  420736:	inc    QWORD PTR [rbp+0x50]
  42073a:	mov    rax,QWORD PTR [r12]
  42073e:	add    QWORD PTR [rbp+0x60],rax
  420742:	mov    rcx,QWORD PTR [rsp+0x70]
  420747:	call   0x40215c
  42074c:	mov    rcx,QWORD PTR [rsp+0x60]
  420751:	call   0x40215c
  420756:	mov    rcx,QWORD PTR [rsp+0x50]
  42075b:	call   0x40215c
  420760:	add    rsp,0xa0
  420767:	pop    r12
  420769:	pop    rdi
  42076a:	pop    rsi
  42076b:	pop    rbp
  42076c:	pop    rbx
  42076d:	ret    
  42076e:	int3   
  42076f:	int3   
  420770:	int3   
  420771:	int3   
  420772:	int3   
  420773:	int3   
  420774:	int3   
  420775:	int3   
  420776:	int3   
  420777:	int3   
  420778:	int3   
  420779:	int3   
  42077a:	int3   
  42077b:	int3   
  42077c:	rex.W push rbp
  42077e:	sub    rsp,0x20
  420782:	mov    rbp,rdx
  420785:	lea    rcx,[rbp+0x30]
  420789:	call   0x40ef60
  42078e:	add    rsp,0x20
  420792:	pop    rbp
  420793:	ret    
  420794:	int3   
  420795:	int3   
  420796:	int3   
  420797:	int3   
  420798:	int3   
  420799:	int3   
  42079a:	int3   
  42079b:	int3   
  42079c:	rex.W push rbp
  42079e:	sub    rsp,0x20
  4207a2:	mov    rbp,rdx
  4207a5:	mov    rcx,QWORD PTR [rbp+0xf0]
  4207ac:	call   0x40215c
  4207b1:	add    rsp,0x20
  4207b5:	pop    rbp
  4207b6:	ret    
  4207b7:	int3   
  4207b8:	rex.W push rbx
  4207ba:	push   rsi
  4207bb:	push   rdi
  4207bc:	sub    rsp,0x30
  4207c0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4207c9:	mov    rsi,r9
  4207cc:	mov    ebx,r8d
  4207cf:	mov    rdi,rcx
  4207d2:	add    rcx,0x10
  4207d6:	call   0x4131dc
  4207db:	lea    rcx,[rdi+0x20]
  4207df:	mov    edx,ebx
  4207e1:	call   0x4131dc
  4207e6:	mov    ecx,0x10
  4207eb:	call   0x402130
  4207f0:	mov    rcx,rax
  4207f3:	mov    QWORD PTR [rsp+0x50],rax
  4207f8:	xor    eax,eax
  4207fa:	cmp    rcx,rax
  4207fd:	je     0x420808
  4207ff:	mov    rdx,rsi
  420802:	call   0x403208
  420807:	nop
  420808:	mov    rdx,rax
  42080b:	mov    rcx,rdi
  42080e:	add    rsp,0x30
  420812:	pop    rdi
  420813:	pop    rsi
  420814:	pop    rbx
  420815:	jmp    0x4010c8
  42081a:	int3   
  42081b:	int3   
  42081c:	int3   
  42081d:	int3   
  42081e:	int3   
  42081f:	int3   
  420820:	int3   
  420821:	int3   
  420822:	int3   
  420823:	int3   
  420824:	int3   
  420825:	int3   
  420826:	int3   
  420827:	int3   
  420828:	rex.W push rbp
  42082a:	sub    rsp,0x20
  42082e:	mov    rbp,rdx
  420831:	mov    rcx,QWORD PTR [rbp+0x50]
  420835:	call   0x40215c
  42083a:	add    rsp,0x20
  42083e:	pop    rbp
  42083f:	ret    
  420840:	mov    QWORD PTR [rsp+0x8],rcx
  420845:	push   rbx
  420846:	sub    rsp,0x30
  42084a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  420853:	mov    rbx,rcx
  420856:	xor    eax,eax
  420858:	mov    QWORD PTR [rcx],rax
  42085b:	mov    DWORD PTR [rcx+0x8],eax
  42085e:	mov    DWORD PTR [rcx+0xc],eax
  420861:	mov    QWORD PTR [rcx+0x10],rax
  420865:	mov    DWORD PTR [rcx+0x18],eax
  420868:	mov    DWORD PTR [rcx+0x1c],eax
  42086b:	mov    QWORD PTR [rcx+0x20],rax
  42086f:	mov    DWORD PTR [rcx+0x28],eax
  420872:	mov    DWORD PTR [rcx+0x2c],eax
  420875:	mov    QWORD PTR [rcx+0x30],rax
  420879:	mov    DWORD PTR [rcx+0x38],eax
  42087c:	mov    DWORD PTR [rcx+0x3c],eax
  42087f:	mov    BYTE PTR [rcx+0x40],al
  420882:	mov    BYTE PTR [rcx+0x41],al
  420885:	mov    QWORD PTR [rcx+0x48],rax
  420889:	mov    QWORD PTR [rcx+0x50],rax
  42088d:	mov    QWORD PTR [rcx+0x58],rax
  420891:	mov    QWORD PTR [rcx+0x60],rax
  420895:	mov    QWORD PTR [rcx+0x68],rax
  420899:	mov    QWORD PTR [rcx+0x70],rax
  42089d:	mov    QWORD PTR [rcx+0x78],rax
  4208a1:	mov    DWORD PTR [rcx+0x80],eax
  4208a7:	mov    DWORD PTR [rcx+0x84],eax
  4208ad:	mov    QWORD PTR [rcx+0x88],rax
  4208b4:	mov    DWORD PTR [rcx+0x90],eax
  4208ba:	mov    DWORD PTR [rcx+0x94],eax
  4208c0:	mov    QWORD PTR [rcx+0x98],rax
  4208c7:	mov    DWORD PTR [rcx+0xa0],eax
  4208cd:	mov    DWORD PTR [rcx+0xa4],eax
  4208d3:	mov    QWORD PTR [rcx+0xa8],rax
  4208da:	mov    QWORD PTR [rcx+0xb0],rax
  4208e1:	mov    BYTE PTR [rcx+0xb9],al
  4208e7:	mov    QWORD PTR [rcx+0xc0],rax
  4208ee:	call   0x4126d8
  4208f3:	mov    BYTE PTR [rbx+0xb8],al
  4208f9:	mov    rax,rbx
  4208fc:	add    rsp,0x30
  420900:	pop    rbx
  420901:	ret    
  420902:	int3   
  420903:	int3   
  420904:	int3   
  420905:	int3   
  420906:	int3   
  420907:	int3   
  420908:	int3   
  420909:	int3   
  42090a:	int3   
  42090b:	int3   
  42090c:	int3   
  42090d:	int3   
  42090e:	int3   
  42090f:	int3   
  420910:	rex.W push rbp
  420912:	sub    rsp,0x20
  420916:	mov    rbp,rdx
  420919:	mov    rcx,QWORD PTR [rbp+0x40]
  42091d:	call   0x4047cc
  420922:	add    rsp,0x20
  420926:	pop    rbp
  420927:	ret    
  420928:	int3   
  420929:	int3   
  42092a:	int3   
  42092b:	int3   
  42092c:	int3   
  42092d:	int3   
  42092e:	int3   
  42092f:	int3   
  420930:	rex.W push rbp
  420932:	sub    rsp,0x20
  420936:	mov    rbp,rdx
  420939:	mov    rcx,QWORD PTR [rbp+0x40]
  42093d:	add    rcx,0x10
  420941:	call   0x401000
  420946:	add    rsp,0x20
  42094a:	pop    rbp
  42094b:	ret    
  42094c:	int3   
  42094d:	int3   
  42094e:	int3   
  42094f:	int3   
  420950:	rex.W push rbp
  420952:	sub    rsp,0x20
  420956:	mov    rbp,rdx
  420959:	mov    rcx,QWORD PTR [rbp+0x40]
  42095d:	add    rcx,0x20
  420961:	call   0x401000
  420966:	add    rsp,0x20
  42096a:	pop    rbp
  42096b:	ret    
  42096c:	int3   
  42096d:	int3   
  42096e:	int3   
  42096f:	int3   
  420970:	rex.W push rbp
  420972:	sub    rsp,0x20
  420976:	mov    rbp,rdx
  420979:	mov    rcx,QWORD PTR [rbp+0x40]
  42097d:	add    rcx,0x30
  420981:	call   0x40fe90
  420986:	add    rsp,0x20
  42098a:	pop    rbp
  42098b:	ret    
  42098c:	int3   
  42098d:	int3   
  42098e:	int3   
  42098f:	int3   
  420990:	rex.W push rbp
  420992:	sub    rsp,0x20
  420996:	mov    rbp,rdx
  420999:	mov    rcx,QWORD PTR [rbp+0x40]
  42099d:	add    rcx,0x78
  4209a1:	call   0x40fd9c
  4209a6:	add    rsp,0x20
  4209aa:	pop    rbp
  4209ab:	ret    
  4209ac:	int3   
  4209ad:	int3   
  4209ae:	int3   
  4209af:	int3   
  4209b0:	rex.W push rbp
  4209b2:	sub    rsp,0x20
  4209b6:	mov    rbp,rdx
  4209b9:	mov    rcx,QWORD PTR [rbp+0x40]
  4209bd:	add    rcx,0xa8
  4209c4:	call   0x401000
  4209c9:	add    rsp,0x20
  4209cd:	pop    rbp
  4209ce:	ret    
  4209cf:	int3   
  4209d0:	rex.W push rbx
  4209d2:	push   rbp
  4209d3:	push   rsi
  4209d4:	push   rdi
  4209d5:	sub    rsp,0x78
  4209d9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  4209e2:	mov    ebx,r8d
  4209e5:	mov    edi,edx
  4209e7:	mov    rsi,rcx
  4209ea:	mov    r8w,0x5c
  4209ef:	mov    rdx,r9
  4209f2:	lea    rcx,[rsp+0x48]
  4209f7:	call   0x40f0d8
  4209fc:	nop
  4209fd:	lea    r9,[rsp+0x48]
  420a02:	mov    r8d,ebx
  420a05:	mov    edx,edi
  420a07:	mov    rbp,QWORD PTR [rsp+0xd0]
  420a0f:	mov    rcx,rbp
  420a12:	call   0x4207b8
  420a17:	mov    ebx,eax
  420a19:	mov    edi,DWORD PTR [rbp+0x38]
  420a1c:	lea    r8,[rsp+0x48]
  420a21:	mov    rdx,QWORD PTR [rsp+0xc0]
  420a29:	lea    rcx,[rsp+0x58]
  420a2e:	call   0x4030d4
  420a33:	nop
  420a34:	mov    cl,BYTE PTR [rsp+0xd8]
  420a3b:	mov    BYTE PTR [rsp+0x30],cl
  420a3f:	mov    QWORD PTR [rsp+0x28],rbp
  420a44:	mov    rdx,QWORD PTR [rsp+0xc8]
  420a4c:	mov    QWORD PTR [rsp+0x20],rdx
  420a51:	mov    r9,rax
  420a54:	mov    r8d,ebx
  420a57:	mov    edx,ebx
  420a59:	mov    rcx,rsi
  420a5c:	call   0x421570
  420a61:	mov    ebx,eax
  420a63:	mov    rcx,QWORD PTR [rsp+0x58]
  420a68:	call   0x40215c
  420a6d:	cmp    edi,DWORD PTR [rbp+0x38]
  420a70:	jne    0x420a7b
  420a72:	mov    rcx,rbp
  420a75:	call   0x41fea0
  420a7a:	nop
  420a7b:	mov    rcx,QWORD PTR [rsp+0x48]
  420a80:	call   0x40215c
  420a85:	mov    eax,ebx
  420a87:	add    rsp,0x78
  420a8b:	pop    rdi
  420a8c:	pop    rsi
  420a8d:	pop    rbp
  420a8e:	pop    rbx
  420a8f:	ret    
  420a90:	rex.W push rbp
  420a92:	sub    rsp,0x20
  420a96:	mov    rbp,rdx
  420a99:	lea    rcx,[rbp+0x48]
  420a9d:	call   0x401000
  420aa2:	add    rsp,0x20
  420aa6:	pop    rbp
  420aa7:	ret    
  420aa8:	int3   
  420aa9:	int3   
  420aaa:	int3   
  420aab:	int3   
  420aac:	int3   
  420aad:	int3   
  420aae:	int3   
  420aaf:	int3   
  420ab0:	rex.W push rbp
  420ab2:	sub    rsp,0x20
  420ab6:	mov    rbp,rdx
  420ab9:	lea    rcx,[rbp+0x58]
  420abd:	call   0x401000
  420ac2:	add    rsp,0x20
  420ac6:	pop    rbp
  420ac7:	ret    
  420ac8:	rex.W push rbx
  420aca:	push   rbp
  420acb:	push   rsi
  420acc:	push   rdi
  420acd:	push   r12
  420acf:	push   r13
  420ad1:	push   r14
  420ad3:	sub    rsp,0xe0
  420ada:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
  420ae6:	mov    r13d,r9d
  420ae9:	mov    r14d,r8d
  420aec:	mov    r12,rdx
  420aef:	mov    rbp,rcx
  420af2:	mov    QWORD PTR [rsp+0x70],0xffffffffffffffff
  420afb:	mov    rdx,QWORD PTR [rsp+0x140]
  420b03:	lea    rcx,[rsp+0x78]
  420b08:	call   0x403208
  420b0d:	nop
  420b0e:	lea    rcx,[rsp+0x48]
  420b13:	call   0x403150
  420b18:	nop
  420b19:	lea    r8,[rsp+0x30]
  420b1e:	lea    rdx,[rsp+0x48]
  420b23:	lea    rcx,[rsp+0x70]
  420b28:	call   0x407f78
  420b2d:	test   al,al
  420b2f:	je     0x420d19
  420b35:	cmp    BYTE PTR [rsp+0x30],0x0
  420b3a:	je     0x420d63
  420b40:	lea    rcx,[rsp+0x48]
  420b45:	call   0x407d9c
  420b4a:	test   al,al
  420b4c:	je     0x420b5d
  420b4e:	mov    rcx,QWORD PTR [rsp+0x48]
  420b53:	call   0x40215c
  420b58:	jmp    0x420cf2
  420b5d:	mov    rdx,QWORD PTR [rsp+0x148]
  420b65:	lea    rcx,[rsp+0x38]
  420b6a:	call   0x404d18
  420b6f:	nop
  420b70:	lea    rdx,[rsp+0x60]
  420b75:	lea    rcx,[rsp+0x48]
  420b7a:	call   0x407dac
  420b7f:	nop
  420b80:	mov    ecx,DWORD PTR [rsp+0x40]
  420b84:	dec    ecx
  420b86:	mov    rax,QWORD PTR [rsp+0x38]
  420b8b:	lea    rdx,[rsp+0x60]
  420b90:	mov    rcx,QWORD PTR [rax+rcx*8]
  420b94:	call   0x403444
  420b99:	mov    r9b,0x1
  420b9c:	lea    r8,[rsp+0x38]
  420ba1:	xor    edx,edx
  420ba3:	mov    rcx,r12
  420ba6:	call   0x405354
  420bab:	test   al,al
  420bad:	je     0x420c0d
  420baf:	mov    rcx,QWORD PTR [rsp+0x60]
  420bb4:	call   0x40215c
  420bb9:	nop
  420bba:	movsxd rbx,DWORD PTR [rsp+0x40]
  420bbf:	mov    rsi,rbx
  420bc2:	test   ebx,ebx
  420bc4:	je     0x420bf3
  420bc6:	shl    rsi,0x3
  420bca:	add    ebx,0xffffffff
  420bcd:	sub    rsi,0x8
  420bd1:	mov    rax,QWORD PTR [rsp+0x38]
  420bd6:	mov    rdi,QWORD PTR [rsi+rax*1]
  420bda:	test   rdi,rdi
  420bdd:	je     0x420bef
  420bdf:	mov    rcx,QWORD PTR [rdi]
  420be2:	call   0x40215c
  420be7:	mov    rcx,rdi
  420bea:	call   0x40215c
  420bef:	test   ebx,ebx
  420bf1:	jne    0x420bca
  420bf3:	mov    rcx,QWORD PTR [rsp+0x38]
  420bf8:	call   0x40215c
  420bfd:	nop
  420bfe:	mov    rcx,QWORD PTR [rsp+0x48]
  420c03:	call   0x40215c
  420c08:	jmp    0x420cf2
  420c0d:	lea    rcx,[rsp+0x88]
  420c15:	mov    rdx,rbp
  420c18:	mov    r8d,0x28
  420c1e:	call   0x44b480
  420c23:	lea    rdx,[rbp+0x28]
  420c27:	lea    rcx,[rsp+0xb0]
  420c2f:	call   0x403208
  420c34:	nop
  420c35:	lea    rdx,[rsp+0x60]
  420c3a:	lea    rcx,[rsp+0xb0]
  420c42:	call   0x403444
  420c47:	mov    r11,QWORD PTR [rsp+0x58]
  420c4c:	mov    QWORD PTR [rsp+0x88],r11
  420c54:	and    DWORD PTR [rsp+0xa8],0xffffffef
  420c5c:	mov    BYTE PTR [rsp+0xac],0x1
  420c64:	lea    rax,[rsp+0x88]
  420c6c:	mov    QWORD PTR [rsp+0x20],rax
  420c71:	mov    r9d,0xffffffff
  420c77:	mov    r8d,r13d
  420c7a:	mov    edx,r14d
  420c7d:	mov    rcx,QWORD PTR [rsp+0x150]
  420c85:	call   0x42061c
  420c8a:	nop
  420c8b:	mov    rcx,QWORD PTR [rsp+0xb0]
  420c93:	call   0x40215c
  420c98:	nop
  420c99:	mov    rcx,QWORD PTR [rsp+0x60]
  420c9e:	call   0x40215c
  420ca3:	nop
  420ca4:	movsxd rsi,DWORD PTR [rsp+0x40]
  420ca9:	mov    rdi,rsi
  420cac:	test   esi,esi
  420cae:	je     0x420cdd
  420cb0:	shl    rdi,0x3
  420cb4:	add    esi,0xffffffff
  420cb7:	sub    rdi,0x8
  420cbb:	mov    rax,QWORD PTR [rsp+0x38]
  420cc0:	mov    rbx,QWORD PTR [rdi+rax*1]
  420cc4:	test   rbx,rbx
  420cc7:	je     0x420cd9
  420cc9:	mov    rcx,QWORD PTR [rbx]
  420ccc:	call   0x40215c
  420cd1:	mov    rcx,rbx
  420cd4:	call   0x40215c
  420cd9:	test   esi,esi
  420cdb:	jne    0x420cb4
  420cdd:	mov    rcx,QWORD PTR [rsp+0x38]
  420ce2:	call   0x40215c
  420ce7:	nop
  420ce8:	mov    rcx,QWORD PTR [rsp+0x48]
  420ced:	call   0x40215c
  420cf2:	lea    rcx,[rsp+0x48]
  420cf7:	call   0x403150
  420cfc:	nop
  420cfd:	lea    r8,[rsp+0x30]
  420d02:	lea    rdx,[rsp+0x48]
  420d07:	lea    rcx,[rsp+0x70]
  420d0c:	call   0x407f78
  420d11:	test   al,al
  420d13:	jne    0x420b35
  420d19:	lea    r8,[rip+0x2ed88]        # 0x44faa8
  420d20:	mov    rdx,QWORD PTR [rsp+0x140]
  420d28:	lea    rcx,[rsp+0xc8]
  420d30:	call   0x403108
  420d35:	nop
  420d36:	mov    rdx,rax
  420d39:	mov    rcx,QWORD PTR [rsp+0x150]
  420d41:	call   0x41f61c
  420d46:	mov    ebx,eax
  420d48:	mov    rcx,QWORD PTR [rsp+0xc8]
  420d50:	call   0x40215c
  420d55:	nop
  420d56:	mov    rcx,QWORD PTR [rsp+0x48]
  420d5b:	call   0x40215c
  420d60:	nop
  420d61:	jmp    0x420d70
  420d63:	mov    rcx,QWORD PTR [rsp+0x48]
  420d68:	call   0x40215c
  420d6d:	nop
  420d6e:	xor    ebx,ebx
  420d70:	mov    rcx,QWORD PTR [rsp+0x78]
  420d75:	call   0x40215c
  420d7a:	lea    rcx,[rsp+0x70]
  420d7f:	call   0x407be4
  420d84:	mov    eax,ebx
  420d86:	add    rsp,0xe0
  420d8d:	pop    r14
  420d8f:	pop    r13
  420d91:	pop    r12
  420d93:	pop    rdi
  420d94:	pop    rsi
  420d95:	pop    rbp
  420d96:	pop    rbx
  420d97:	ret    
  420d98:	rex.W push rbp
  420d9a:	sub    rsp,0x20
  420d9e:	mov    rbp,rdx
  420da1:	lea    rcx,[rbp+0x70]
  420da5:	call   0x40810c
  420daa:	add    rsp,0x20
  420dae:	pop    rbp
  420daf:	ret    
  420db0:	int3   
  420db1:	int3   
  420db2:	int3   
  420db3:	int3   
  420db4:	int3   
  420db5:	int3   
  420db6:	int3   
  420db7:	int3   
  420db8:	rex.W push rbp
  420dba:	sub    rsp,0x20
  420dbe:	mov    rbp,rdx
  420dc1:	lea    rcx,[rbp+0x70]
  420dc5:	call   0x408114
  420dca:	add    rsp,0x20
  420dce:	pop    rbp
  420dcf:	ret    
  420dd0:	int3   
  420dd1:	int3   
  420dd2:	int3   
  420dd3:	int3   
  420dd4:	int3   
  420dd5:	int3   
  420dd6:	int3   
  420dd7:	int3   
  420dd8:	rex.W push rbp
  420dda:	sub    rsp,0x20
  420dde:	mov    rbp,rdx
  420de1:	lea    rcx,[rbp+0x48]
  420de5:	call   0x401000
  420dea:	add    rsp,0x20
  420dee:	pop    rbp
  420def:	ret    
  420df0:	int3   
  420df1:	int3   
  420df2:	int3   
  420df3:	int3   
  420df4:	int3   
  420df5:	int3   
  420df6:	int3   
  420df7:	int3   
  420df8:	rex.W push rbp
  420dfa:	sub    rsp,0x20
  420dfe:	mov    rbp,rdx
  420e01:	lea    rcx,[rbp+0xc8]
  420e08:	call   0x401000
  420e0d:	add    rsp,0x20
  420e11:	pop    rbp
  420e12:	ret    
  420e13:	int3   
  420e14:	int3   
  420e15:	int3   
  420e16:	int3   
  420e17:	int3   
  420e18:	rex.W push rbp
  420e1a:	sub    rsp,0x20
  420e1e:	mov    rbp,rdx
  420e21:	lea    rcx,[rbp+0x38]
  420e25:	call   0x4047cc
  420e2a:	add    rsp,0x20
  420e2e:	pop    rbp
  420e2f:	ret    
  420e30:	int3   
  420e31:	int3   
  420e32:	int3   
  420e33:	int3   
  420e34:	int3   
  420e35:	int3   
  420e36:	int3   
  420e37:	int3   
  420e38:	rex.W push rbp
  420e3a:	sub    rsp,0x20
  420e3e:	mov    rbp,rdx
  420e41:	lea    rcx,[rbp+0x60]
  420e45:	call   0x401000
  420e4a:	add    rsp,0x20
  420e4e:	pop    rbp
  420e4f:	ret    
  420e50:	int3   
  420e51:	int3   
  420e52:	int3   
  420e53:	int3   
  420e54:	int3   
  420e55:	int3   
  420e56:	int3   
  420e57:	int3   
  420e58:	rex.W push rbp
  420e5a:	sub    rsp,0x20
  420e5e:	mov    rbp,rdx
  420e61:	lea    rcx,[rbp+0x88]
  420e68:	call   0x406fe0
  420e6d:	add    rsp,0x20
  420e71:	pop    rbp
  420e72:	ret    
  420e73:	int3   
  420e74:	mov    DWORD PTR [rsp+0x20],r9d
  420e79:	mov    DWORD PTR [rsp+0x18],r8d
  420e7e:	push   rbx
  420e7f:	push   rbp
  420e80:	push   rsi
  420e81:	push   rdi
  420e82:	push   r12
  420e84:	push   r13
  420e86:	push   r14
  420e88:	push   r15
  420e8a:	sub    rsp,0x98
  420e91:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  420e9a:	mov    r15,rdx
  420e9d:	mov    r14,rcx
  420ea0:	lea    r13,[rcx+0x28]
  420ea4:	mov    rdx,r13
  420ea7:	lea    rcx,[rsp+0x68]
  420eac:	call   0x403208
  420eb1:	nop
  420eb2:	mov    al,BYTE PTR [rsp+0x118]
  420eb9:	mov    DWORD PTR [rsp+0xe0],eax
  420ec0:	mov    rdx,QWORD PTR [rsp+0x108]
  420ec8:	lea    rcx,[rsp+0x58]
  420ecd:	call   0x404d18
  420ed2:	nop
  420ed3:	mov    ecx,0x10
  420ed8:	call   0x402130
  420edd:	mov    QWORD PTR [rsp+0x48],rax
  420ee2:	xor    ebx,ebx
  420ee4:	cmp    rax,rbx
  420ee7:	je     0x420ef8
  420ee9:	lea    rdx,[rsp+0x68]
  420eee:	mov    rcx,rax
  420ef1:	call   0x403208
  420ef6:	jmp    0x420efb
  420ef8:	mov    rax,rbx
  420efb:	mov    rdx,rax
  420efe:	lea    rcx,[rsp+0x58]
  420f03:	call   0x4010c8
  420f08:	lea    rdx,[rsp+0x58]
  420f0d:	lea    rcx,[rsp+0x48]
  420f12:	call   0x404d18
  420f17:	nop
  420f18:	mov    eax,DWORD PTR [r14+0x20]
  420f1c:	shr    eax,0x4
  420f1f:	mov    ebp,0x1
  420f24:	and    al,bpl
  420f27:	sete   r9b
  420f2b:	lea    r8,[rsp+0x48]
  420f30:	xor    edx,edx
  420f32:	mov    rcx,r15
  420f35:	call   0x405354
  420f3a:	cmp    al,bl
  420f3c:	je     0x420fd4
  420f42:	movsxd rsi,DWORD PTR [rsp+0x50]
  420f47:	mov    rbp,rsi
  420f4a:	mov    edi,0xffffffff
  420f4f:	cmp    esi,ebx
  420f51:	je     0x420f80
  420f53:	shl    rbp,0x3
  420f57:	add    esi,edi
  420f59:	sub    rbp,0x8
  420f5d:	mov    rax,QWORD PTR [rsp+0x48]
  420f62:	mov    r12,QWORD PTR [rax+rbp*1]
  420f66:	cmp    r12,rbx
  420f69:	je     0x420f7c
  420f6b:	mov    rcx,QWORD PTR [r12]
  420f6f:	call   0x40215c
  420f74:	mov    rcx,r12
  420f77:	call   0x40215c
  420f7c:	cmp    esi,ebx
  420f7e:	jne    0x420f57
  420f80:	mov    rcx,QWORD PTR [rsp+0x48]
  420f85:	call   0x40215c
  420f8a:	nop
  420f8b:	movsxd rsi,DWORD PTR [rsp+0x60]
  420f90:	mov    rbp,rsi
  420f93:	cmp    esi,ebx
  420f95:	je     0x420fc4
  420f97:	shl    rbp,0x3
  420f9b:	add    esi,edi
  420f9d:	sub    rbp,0x8
  420fa1:	mov    rax,QWORD PTR [rsp+0x58]
  420fa6:	mov    r12,QWORD PTR [rax+rbp*1]
  420faa:	cmp    r12,rbx
  420fad:	je     0x420fc0
  420faf:	mov    rcx,QWORD PTR [r12]
  420fb3:	call   0x40215c
  420fb8:	mov    rcx,r12
  420fbb:	call   0x40215c
  420fc0:	cmp    esi,ebx
  420fc2:	jne    0x420f9b
  420fc4:	mov    rcx,QWORD PTR [rsp+0x58]
  420fc9:	call   0x40215c
  420fce:	nop
  420fcf:	jmp    0x421471
  420fd4:	movsxd rsi,DWORD PTR [rsp+0x50]
  420fd9:	mov    r12,rsi
  420fdc:	mov    edi,0xffffffff
  420fe1:	cmp    esi,ebx
  420fe3:	je     0x421017
  420fe5:	shl    r12,0x3
  420fe9:	add    esi,edi
  420feb:	sub    r12,0x8
  420fef:	mov    rax,QWORD PTR [rsp+0x48]
  420ff4:	mov    rbp,QWORD PTR [r12+rax*1]
  420ff8:	cmp    rbp,rbx
  420ffb:	je     0x42100e
  420ffd:	mov    rcx,QWORD PTR [rbp+0x0]
  421001:	call   0x40215c
  421006:	mov    rcx,rbp
  421009:	call   0x40215c
  42100e:	cmp    esi,ebx
  421010:	jne    0x420fe9
  421012:	mov    ebp,0x1
  421017:	mov    rcx,QWORD PTR [rsp+0x48]
  42101c:	call   0x40215c
  421021:	mov    esi,0xffffffff
  421026:	mov    eax,DWORD PTR [r14+0x20]
  42102a:	shr    eax,0x4
  42102d:	and    al,bpl
  421030:	sete   r9b
  421034:	lea    r8,[rsp+0x58]
  421039:	mov    dl,bpl
  42103c:	mov    rcx,r15
  42103f:	call   0x405354
  421044:	mov    rbp,QWORD PTR [rsp+0x110]
  42104c:	cmp    al,bl
  42104e:	je     0x42113e
  421054:	mov    r9d,esi
  421057:	mov    DWORD PTR [rsp+0x118],esi
  42105e:	cmp    BYTE PTR [rbp+0xb9],bl
  421064:	je     0x4210fd
  42106a:	mov    r8,r13
  42106d:	mov    rdx,QWORD PTR [rsp+0x100]
  421075:	lea    rcx,[rsp+0x78]
  42107a:	call   0x4030d4
  42107f:	nop
  421080:	lea    r8,[rsp+0x118]
  421088:	mov    rdx,rax
  42108b:	mov    rcx,rbp
  42108e:	call   0x41f740
  421093:	mov    r13d,eax
  421096:	mov    rcx,QWORD PTR [rsp+0x78]
  42109b:	call   0x40215c
  4210a0:	cmp    r13d,ebx
  4210a3:	je     0x4210f1
  4210a5:	movsxd rsi,DWORD PTR [rsp+0x60]
  4210aa:	mov    rbp,rsi
  4210ad:	cmp    esi,ebx
  4210af:	je     0x4210de
  4210b1:	shl    rbp,0x3
  4210b5:	add    esi,edi
  4210b7:	sub    rbp,0x8
  4210bb:	mov    rax,QWORD PTR [rsp+0x58]
  4210c0:	mov    r12,QWORD PTR [rax+rbp*1]
  4210c4:	cmp    r12,rbx
  4210c7:	je     0x4210da
  4210c9:	mov    rcx,QWORD PTR [r12]
  4210cd:	call   0x40215c
  4210d2:	mov    rcx,r12
  4210d5:	call   0x40215c
  4210da:	cmp    esi,ebx
  4210dc:	jne    0x4210b5
  4210de:	mov    rcx,QWORD PTR [rsp+0x58]
  4210e3:	call   0x40215c
  4210e8:	nop
  4210e9:	mov    ebx,r13d
  4210ec:	jmp    0x421471
  4210f1:	mov    r9d,DWORD PTR [rsp+0x118]
  4210f9:	lea    r13,[r14+0x28]
  4210fd:	mov    esi,DWORD PTR [rbp+0x38]
  421100:	mov    QWORD PTR [rsp+0x20],r14
  421105:	mov    r8d,DWORD PTR [rsp+0xf8]
  42110d:	mov    edx,DWORD PTR [rsp+0xf0]
  421114:	mov    rcx,rbp
  421117:	call   0x42061c
  42111c:	mov    r11d,DWORD PTR [r14+0x20]
  421120:	shr    r11d,0x4
  421124:	mov    eax,0x1
  421129:	test   al,r11b
  42112c:	mov    r12d,DWORD PTR [rsp+0xe0]
  421134:	movzx  r12d,r12b
  421138:	cmovne r12d,eax
  42113c:	jmp    0x421146
  42113e:	mov    r12d,DWORD PTR [rsp+0xe0]
  421146:	cmp    BYTE PTR [rbp+0x41],bl
  421149:	je     0x4211f2
  42114f:	mov    r8,r13
  421152:	mov    rdx,QWORD PTR [rsp+0x100]
  42115a:	lea    rcx,[rsp+0x78]
  42115f:	call   0x4030d4
  421164:	nop
  421165:	mov    QWORD PTR [rsp+0x30],rbp
  42116a:	lea    rcx,[rsp+0x58]
  42116f:	mov    QWORD PTR [rsp+0x28],rcx
  421174:	mov    QWORD PTR [rsp+0x20],rax
  421179:	mov    r9d,DWORD PTR [rsp+0xf8]
  421181:	mov    r8d,DWORD PTR [rsp+0xf0]
  421189:	mov    rdx,r15
  42118c:	mov    rcx,r14
  42118f:	call   0x420ac8
  421194:	mov    r13d,eax
  421197:	mov    rcx,QWORD PTR [rsp+0x78]
  42119c:	call   0x40215c
  4211a1:	cmp    r13d,ebx
  4211a4:	je     0x4211f2
  4211a6:	movsxd rsi,DWORD PTR [rsp+0x60]
  4211ab:	mov    rbp,rsi
  4211ae:	cmp    esi,ebx
  4211b0:	je     0x4211df
  4211b2:	shl    rbp,0x3
  4211b6:	add    esi,edi
  4211b8:	sub    rbp,0x8
  4211bc:	mov    rax,QWORD PTR [rsp+0x58]
  4211c1:	mov    r12,QWORD PTR [rax+rbp*1]
  4211c5:	cmp    r12,rbx
  4211c8:	je     0x4211db
  4211ca:	mov    rcx,QWORD PTR [r12]
  4211ce:	call   0x40215c
  4211d3:	mov    rcx,r12
  4211d6:	call   0x40215c
  4211db:	cmp    esi,ebx
  4211dd:	jne    0x4211b6
  4211df:	mov    rcx,QWORD PTR [rsp+0x58]
  4211e4:	call   0x40215c
  4211e9:	nop
  4211ea:	mov    ebx,r13d
  4211ed:	jmp    0x421471
  4211f2:	cmp    esi,ebx
  4211f4:	jl     0x4212bc
  4211fa:	mov    ecx,esi
  4211fc:	mov    rax,QWORD PTR [rbp+0x30]
  421200:	mov    rsi,QWORD PTR [rax+rcx*8]
  421204:	mov    r9,QWORD PTR [rsp+0x100]
  42120c:	mov    r8,r14
  42120f:	mov    rdx,rsi
  421212:	mov    rcx,rbp
  421215:	call   0x41f8d8
  42121a:	mov    r13d,eax
  42121d:	cmp    eax,ebx
  42121f:	je     0x42126d
  421221:	movsxd rsi,DWORD PTR [rsp+0x60]
  421226:	mov    rbp,rsi
  421229:	cmp    esi,ebx
  42122b:	je     0x42125a
  42122d:	shl    rbp,0x3
  421231:	add    esi,edi
  421233:	sub    rbp,0x8
  421237:	mov    rax,QWORD PTR [rsp+0x58]
  42123c:	mov    r12,QWORD PTR [rax+rbp*1]
  421240:	cmp    r12,rbx
  421243:	je     0x421256
  421245:	mov    rcx,QWORD PTR [r12]
  421249:	call   0x40215c
  42124e:	mov    rcx,r12
  421251:	call   0x40215c
  421256:	cmp    esi,ebx
  421258:	jne    0x421231
  42125a:	mov    rcx,QWORD PTR [rsp+0x58]
  42125f:	call   0x40215c
  421264:	nop
  421265:	mov    ebx,r13d
  421268:	jmp    0x421471
  42126d:	cmp    QWORD PTR [rsi+0x38],rbx
  421271:	je     0x4212bc
  421273:	movsxd rsi,DWORD PTR [rsp+0x60]
  421278:	mov    rbp,rsi
  42127b:	cmp    esi,ebx
  42127d:	je     0x4212ac
  42127f:	shl    rbp,0x3
  421283:	add    esi,edi
  421285:	sub    rbp,0x8
  421289:	mov    rax,QWORD PTR [rsp+0x58]
  42128e:	mov    r12,QWORD PTR [rax+rbp*1]
  421292:	cmp    r12,rbx
  421295:	je     0x4212a8
  421297:	mov    rcx,QWORD PTR [r12]
  42129b:	call   0x40215c
  4212a0:	mov    rcx,r12
  4212a3:	call   0x40215c
  4212a8:	cmp    esi,ebx
  4212aa:	jne    0x421283
  4212ac:	mov    rcx,QWORD PTR [rsp+0x58]
  4212b1:	call   0x40215c
  4212b6:	nop
  4212b7:	jmp    0x421471
  4212bc:	mov    eax,DWORD PTR [r14+0x20]
  4212c0:	shr    eax,0x4
  4212c3:	test   al,0x1
  4212c5:	jne    0x421310
  4212c7:	movsxd rsi,DWORD PTR [rsp+0x60]
  4212cc:	mov    rbp,rsi
  4212cf:	cmp    esi,ebx
  4212d1:	je     0x421300
  4212d3:	shl    rbp,0x3
  4212d7:	add    esi,edi
  4212d9:	sub    rbp,0x8
  4212dd:	mov    rax,QWORD PTR [rsp+0x58]
  4212e2:	mov    r12,QWORD PTR [rax+rbp*1]
  4212e6:	cmp    r12,rbx
  4212e9:	je     0x4212fc
  4212eb:	mov    rcx,QWORD PTR [r12]
  4212ef:	call   0x40215c
  4212f4:	mov    rcx,r12
  4212f7:	call   0x40215c
  4212fc:	cmp    esi,ebx
  4212fe:	jne    0x4212d7
  421300:	mov    rcx,QWORD PTR [rsp+0x58]
  421305:	call   0x40215c
  42130a:	nop
  42130b:	jmp    0x421471
  421310:	mov    rsi,rbx
  421313:	mov    rax,QWORD PTR [rsp+0x108]
  42131b:	cmp    DWORD PTR [rax+0x8],ebx
  42131e:	jne    0x42134d
  421320:	lea    rdx,[rsp+0x68]
  421325:	mov    rcx,r15
  421328:	call   0x40476c
  42132d:	cmp    eax,ebx
  42132f:	jl     0x421345
  421331:	mov    ecx,eax
  421333:	mov    rax,QWORD PTR [r15+0x18]
  421337:	mov    rsi,QWORD PTR [rax+rcx*8]
  42133b:	mov    rax,QWORD PTR [rsp+0x108]
  421343:	jmp    0x42134d
  421345:	mov    rax,QWORD PTR [rsp+0x108]
  42134d:	cmp    r12b,bl
  421350:	jne    0x4213a0
  421352:	cmp    rsi,rbx
  421355:	jne    0x4213a0
  421357:	movsxd rsi,DWORD PTR [rsp+0x60]
  42135c:	mov    rbp,rsi
  42135f:	cmp    esi,ebx
  421361:	je     0x421390
  421363:	shl    rbp,0x3
  421367:	add    esi,edi
  421369:	sub    rbp,0x8
  42136d:	mov    rax,QWORD PTR [rsp+0x58]
  421372:	mov    r12,QWORD PTR [rax+rbp*1]
  421376:	cmp    r12,rbx
  421379:	je     0x42138c
  42137b:	mov    rcx,QWORD PTR [r12]
  42137f:	call   0x40215c
  421384:	mov    rcx,r12
  421387:	call   0x40215c
  42138c:	cmp    esi,ebx
  42138e:	jne    0x421367
  421390:	mov    rcx,QWORD PTR [rsp+0x58]
  421395:	call   0x40215c
  42139a:	nop
  42139b:	jmp    0x421471
  4213a0:	mov    rdx,rax
  4213a3:	lea    rcx,[rsp+0x58]
  4213a8:	call   0x404df0
  4213ad:	cmp    rsi,rbx
  4213b0:	jne    0x4213eb
  4213b2:	mov    rsi,r15
  4213b5:	mov    ecx,0x10
  4213ba:	call   0x402130
  4213bf:	mov    QWORD PTR [rsp+0xe0],rax
  4213c7:	cmp    rax,rbx
  4213ca:	je     0x4213db
  4213cc:	lea    rdx,[rsp+0x68]
  4213d1:	mov    rcx,rax
  4213d4:	call   0x403208
  4213d9:	jmp    0x4213de
  4213db:	mov    rax,rbx
  4213de:	mov    rdx,rax
  4213e1:	lea    rcx,[rsp+0x58]
  4213e6:	call   0x4010c8
  4213eb:	mov    BYTE PTR [rsp+0x38],r12b
  4213f0:	mov    QWORD PTR [rsp+0x30],rbp
  4213f5:	lea    rax,[rsp+0x58]
  4213fa:	mov    QWORD PTR [rsp+0x28],rax
  4213ff:	mov    rax,QWORD PTR [rsp+0x100]
  421407:	mov    QWORD PTR [rsp+0x20],rax
  42140c:	lea    r9,[r14+0x28]
  421410:	mov    r8d,DWORD PTR [rsp+0xf8]
  421418:	mov    edx,DWORD PTR [rsp+0xf0]
  42141f:	mov    rcx,rsi
  421422:	call   0x4209d0
  421427:	mov    r13d,eax
  42142a:	movsxd rsi,DWORD PTR [rsp+0x60]
  42142f:	mov    rbp,rsi
  421432:	cmp    esi,ebx
  421434:	je     0x421463
  421436:	shl    rbp,0x3
  42143a:	add    esi,edi
  42143c:	sub    rbp,0x8
  421440:	mov    rcx,QWORD PTR [rsp+0x58]
  421445:	mov    r12,QWORD PTR [rcx+rbp*1]
  421449:	cmp    r12,rbx
  42144c:	je     0x42145f
  42144e:	mov    rcx,QWORD PTR [r12]
  421452:	call   0x40215c
  421457:	mov    rcx,r12
  42145a:	call   0x40215c
  42145f:	cmp    esi,ebx
  421461:	jne    0x42143a
  421463:	mov    rcx,QWORD PTR [rsp+0x58]
  421468:	call   0x40215c
  42146d:	nop
  42146e:	mov    ebx,r13d
  421471:	mov    rcx,QWORD PTR [rsp+0x68]
  421476:	call   0x40215c
  42147b:	mov    eax,ebx
  42147d:	add    rsp,0x98
  421484:	pop    r15
  421486:	pop    r14
  421488:	pop    r13
  42148a:	pop    r12
  42148c:	pop    rdi
  42148d:	pop    rsi
  42148e:	pop    rbp
  42148f:	pop    rbx
  421490:	ret    
  421491:	int3   
  421492:	int3   
  421493:	int3   
  421494:	rex.W push rbp
  421496:	sub    rsp,0x20
  42149a:	mov    rbp,rdx
  42149d:	lea    rcx,[rbp+0x68]
  4214a1:	call   0x401000
  4214a6:	add    rsp,0x20
  4214aa:	pop    rbp
  4214ab:	ret    
  4214ac:	int3   
  4214ad:	int3   
  4214ae:	int3   
  4214af:	int3   
  4214b0:	int3   
  4214b1:	int3   
  4214b2:	int3   
  4214b3:	int3   
  4214b4:	rex.W push rbp
  4214b6:	sub    rsp,0x20
  4214ba:	mov    rbp,rdx
  4214bd:	lea    rcx,[rbp+0x58]
  4214c1:	call   0x4047cc
  4214c6:	add    rsp,0x20
  4214ca:	pop    rbp
  4214cb:	ret    
  4214cc:	int3   
  4214cd:	int3   
  4214ce:	int3   
  4214cf:	int3   
  4214d0:	int3   
  4214d1:	int3   
  4214d2:	int3   
  4214d3:	int3   
  4214d4:	rex.W push rbp
  4214d6:	sub    rsp,0x20
  4214da:	mov    rbp,rdx
  4214dd:	mov    rcx,QWORD PTR [rbp+0x48]
  4214e1:	call   0x40215c
  4214e6:	add    rsp,0x20
  4214ea:	pop    rbp
  4214eb:	ret    
  4214ec:	int3   
  4214ed:	int3   
  4214ee:	int3   
  4214ef:	int3   
  4214f0:	int3   
  4214f1:	int3   
  4214f2:	int3   
  4214f3:	int3   
  4214f4:	rex.W push rbp
  4214f6:	sub    rsp,0x20
  4214fa:	mov    rbp,rdx
  4214fd:	lea    rcx,[rbp+0x48]
  421501:	call   0x4047cc
  421506:	add    rsp,0x20
  42150a:	pop    rbp
  42150b:	ret    
  42150c:	int3   
  42150d:	int3   
  42150e:	int3   
  42150f:	int3   
  421510:	int3   
  421511:	int3   
  421512:	int3   
  421513:	int3   
  421514:	rex.W push rbp
  421516:	sub    rsp,0x20
  42151a:	mov    rbp,rdx
  42151d:	lea    rcx,[rbp+0x78]
  421521:	call   0x401000
  421526:	add    rsp,0x20
  42152a:	pop    rbp
  42152b:	ret    
  42152c:	int3   
  42152d:	int3   
  42152e:	int3   
  42152f:	int3   
  421530:	int3   
  421531:	int3   
  421532:	int3   
  421533:	int3   
  421534:	rex.W push rbp
  421536:	sub    rsp,0x20
  42153a:	mov    rbp,rdx
  42153d:	lea    rcx,[rbp+0x78]
  421541:	call   0x401000
  421546:	add    rsp,0x20
  42154a:	pop    rbp
  42154b:	ret    
  42154c:	int3   
  42154d:	int3   
  42154e:	int3   
  42154f:	int3   
  421550:	int3   
  421551:	int3   
  421552:	int3   
  421553:	int3   
  421554:	rex.W push rbp
  421556:	sub    rsp,0x20
  42155a:	mov    rbp,rdx
  42155d:	mov    rcx,QWORD PTR [rbp+0xe0]
  421564:	call   0x40215c
  421569:	add    rsp,0x20
  42156d:	pop    rbp
  42156e:	ret    
  42156f:	int3   
  421570:	mov    QWORD PTR [rsp+0x20],r9
  421575:	mov    DWORD PTR [rsp+0x18],r8d
  42157a:	mov    DWORD PTR [rsp+0x10],edx
  42157e:	push   rbx
  42157f:	push   rbp
  421580:	push   rsi
  421581:	push   rdi
  421582:	push   r12
  421584:	push   r13
  421586:	push   r14
  421588:	push   r15
  42158a:	sub    rsp,0x158
  421591:	mov    QWORD PTR [rsp+0x140],0xfffffffffffffffe
  42159d:	mov    r13,r9
  4215a0:	mov    r12d,r8d
  4215a3:	mov    r14,rcx
  4215a6:	mov    esi,0x1
  4215ab:	mov    dil,BYTE PTR [rsp+0x1d0]
  4215b3:	test   dil,dil
  4215b6:	jne    0x4215c6
  4215b8:	call   0x404820
  4215bd:	movzx  edi,dil
  4215c1:	test   al,al
  4215c3:	cmovne edi,esi
  4215c6:	mov    rdx,r13
  4215c9:	mov    rbp,QWORD PTR [rsp+0x1c8]
  4215d1:	mov    rcx,rbp
  4215d4:	call   0x41f654
  4215d9:	test   eax,eax
  4215db:	jne    0x4225ff
  4215e1:	mov    r15,QWORD PTR [rsp+0x1c0]
  4215e9:	cmp    DWORD PTR [r15+0x8],0x0
  4215ee:	jne    0x422167
  4215f4:	test   dil,dil
  4215f7:	jne    0x422167
  4215fd:	xor    esi,esi
  4215ff:	cmp    DWORD PTR [r14+0x30],esi
  421603:	jbe    0x421642
  421605:	xor    ebx,ebx
  421607:	mov    rax,QWORD PTR [r14+0x28]
  42160b:	mov    rax,QWORD PTR [rbx+rax*1]
  42160f:	cmp    BYTE PTR [rax+0x10],0x0
  421613:	jne    0x422167
  421619:	cmp    DWORD PTR [rax+0x8],0x1
  42161d:	jne    0x422167
  421623:	mov    rax,QWORD PTR [rax]
  421626:	mov    rcx,QWORD PTR [rax]
  421629:	call   0x40450c
  42162e:	test   al,al
  421630:	jne    0x422167
  421636:	inc    esi
  421638:	add    rbx,0x8
  42163c:	cmp    esi,DWORD PTR [r14+0x30]
  421640:	jb     0x421607
  421642:	xor    ecx,ecx
  421644:	mov    QWORD PTR [rsp+0x40],rcx
  421649:	xor    eax,eax
  42164b:	mov    DWORD PTR [rsp+0x48],eax
  42164f:	mov    DWORD PTR [rsp+0x4c],eax
  421653:	mov    DWORD PTR [rsp+0x80],eax
  42165a:	mov    r15d,0xffffffff
  421660:	cmp    DWORD PTR [r14+0x30],eax
  421664:	jbe    0x421e0a
  42166a:	mov    QWORD PTR [rsp+0x88],rcx
  421672:	mov    rax,QWORD PTR [r14+0x28]
  421676:	mov    rbx,QWORD PTR [rcx+rax*1]
  42167a:	mov    rax,QWORD PTR [rbx]
  42167d:	mov    rdi,QWORD PTR [rax]
  421680:	mov    QWORD PTR [rsp+0x138],rdi
  421688:	mov    r8,rdi
  42168b:	mov    rdx,r13
  42168e:	lea    rcx,[rsp+0x50]
  421693:	call   0x4030d4
  421698:	nop
  421699:	mov    r12b,0x1
  42169c:	xor    esi,esi
  42169e:	cmp    DWORD PTR [r13+0x8],esi
  4216a2:	jne    0x421713
  4216a4:	cmp    BYTE PTR [rbx+0x11],sil
  4216a8:	jne    0x421713
  4216aa:	cmp    DWORD PTR [rdi+0x8],esi
  4216ad:	jne    0x4216c2
  4216af:	mov    r12b,sil
  4216b2:	mov    dx,0x5c
  4216b6:	lea    rcx,[rsp+0x50]
  4216bb:	call   0x40323c
  4216c0:	jmp    0x421713
  4216c2:	cmp    DWORD PTR [rbx+0x8],0x1
  4216c6:	jne    0x421713
  4216c8:	cmp    BYTE PTR [rbx+0x12],sil
  4216cc:	je     0x421713
  4216ce:	mov    rax,QWORD PTR [rbx]
  4216d1:	mov    rcx,QWORD PTR [rax]
  4216d4:	mov    rcx,QWORD PTR [rcx]
  4216d7:	call   0x404534
  4216dc:	cmp    al,sil
  4216df:	je     0x421713
  4216e1:	mov    r12b,sil
  4216e4:	mov    edx,DWORD PTR [rsp+0x58]
  4216e8:	cmp    DWORD PTR [rsp+0x5c],edx
  4216ec:	jne    0x4216fc
  4216ee:	lea    rcx,[rsp+0x50]
  4216f3:	call   0x402f2c
  4216f8:	mov    edx,DWORD PTR [rsp+0x58]
  4216fc:	mov    rcx,QWORD PTR [rsp+0x50]
  421701:	mov    eax,edx
  421703:	mov    WORD PTR [rcx+rax*2],0x5c
  421709:	inc    edx
  42170b:	mov    WORD PTR [rcx+rdx*2],si
  42170f:	mov    DWORD PTR [rsp+0x58],edx
  421713:	lea    rcx,[rsp+0xe8]
  42171b:	call   0x407fc0
  421720:	lea    rcx,[rsp+0x110]
  421728:	call   0x403150
  42172d:	nop
  42172e:	mov    rdx,rdi
  421731:	mov    rcx,r13
  421734:	call   0x41f688
  421739:	cmp    al,sil
  42173c:	je     0x42175b
  42173e:	mov    DWORD PTR [rsp+0x108],0x10
  421749:	mov    rdx,rdi
  42174c:	lea    rcx,[rsp+0x110]
  421754:	call   0x4032f8
  421759:	jmp    0x4217a6
  42175b:	mov    rdx,QWORD PTR [rsp+0x50]
  421760:	lea    rcx,[rsp+0xe8]
  421768:	call   0x408134
  42176d:	cmp    al,sil
  421770:	jne    0x4217a6
  421772:	lea    rdx,[rsp+0x50]
  421777:	mov    rcx,rbp
  42177a:	call   0x41f61c
  42177f:	mov    ebx,eax
  421781:	cmp    eax,esi
  421783:	jne    0x421cc4
  421789:	mov    rcx,QWORD PTR [rsp+0x110]
  421791:	call   0x40215c
  421796:	nop
  421797:	mov    rcx,QWORD PTR [rsp+0x50]
  42179c:	call   0x40215c
  4217a1:	jmp    0x421c88
  4217a6:	mov    r13d,DWORD PTR [rsp+0x108]
  4217ae:	shr    r13d,0x4
  4217b2:	and    r13b,0x1
  4217b6:	je     0x4217c0
  4217b8:	cmp    BYTE PTR [rbx+0x12],sil
  4217bc:	je     0x4217c6
  4217be:	jmp    0x421819
  4217c0:	cmp    BYTE PTR [rbx+0x11],sil
  4217c4:	jne    0x421819
  4217c6:	inc    QWORD PTR [rbp+0x70]
  4217ca:	mov    rcx,QWORD PTR [rbp+0xc0]
  4217d1:	cmp    rcx,rsi
  4217d4:	je     0x4217ea
  4217d6:	mov    rax,QWORD PTR [rcx]
  4217d9:	mov    r8d,0x80004005
  4217df:	lea    rdx,[rsp+0x50]
  4217e4:	call   QWORD PTR [rax]
  4217e6:	mov    ebx,eax
  4217e8:	jmp    0x4217ec
  4217ea:	mov    ebx,esi
  4217ec:	cmp    ebx,esi
  4217ee:	jne    0x421ce2
  4217f4:	mov    rcx,QWORD PTR [rsp+0x110]
  4217fc:	call   0x40215c
  421801:	nop
  421802:	mov    rcx,QWORD PTR [rsp+0x50]
  421807:	call   0x40215c
  42180c:	mov    r13,QWORD PTR [rsp+0x1b8]
  421814:	jmp    0x421c88
  421819:	mov    QWORD PTR [rsp+0xa0],rsi
  421821:	mov    DWORD PTR [rsp+0xa8],esi
  421828:	mov    DWORD PTR [rsp+0xac],esi
  42182f:	mov    ecx,0x10
  421834:	call   0x402130
  421839:	mov    QWORD PTR [rsp+0x70],rax
  42183e:	cmp    rax,rsi
  421841:	je     0x421855
  421843:	lea    rdx,[rsp+0x110]
  42184b:	mov    rcx,rax
  42184e:	call   0x403208
  421853:	jmp    0x421858
  421855:	mov    rax,rsi
  421858:	mov    rdx,rax
  42185b:	lea    rcx,[rsp+0xa0]
  421863:	call   0x4010c8
  421868:	cmp    r13b,sil
  42186b:	sete   r9b
  42186f:	lea    r8,[rsp+0xa0]
  421877:	xor    edx,edx
  421879:	mov    rcx,r14
  42187c:	call   0x405354
  421881:	cmp    al,sil
  421884:	je     0x4218f8
  421886:	movsxd rbx,DWORD PTR [rsp+0xa8]
  42188e:	mov    rsi,rbx
  421891:	test   ebx,ebx
  421893:	je     0x4218c5
  421895:	shl    rsi,0x3
  421899:	add    ebx,r15d
  42189c:	sub    rsi,0x8
  4218a0:	mov    rax,QWORD PTR [rsp+0xa0]
  4218a8:	mov    rdi,QWORD PTR [rsi+rax*1]
  4218ac:	test   rdi,rdi
  4218af:	je     0x4218c1
  4218b1:	mov    rcx,QWORD PTR [rdi]
  4218b4:	call   0x40215c
  4218b9:	mov    rcx,rdi
  4218bc:	call   0x40215c
  4218c1:	test   ebx,ebx
  4218c3:	jne    0x421899
  4218c5:	mov    rcx,QWORD PTR [rsp+0xa0]
  4218cd:	call   0x40215c
  4218d2:	nop
  4218d3:	mov    rcx,QWORD PTR [rsp+0x110]
  4218db:	call   0x40215c
  4218e0:	nop
  4218e1:	mov    rcx,QWORD PTR [rsp+0x50]
  4218e6:	call   0x40215c
  4218eb:	mov    r13,QWORD PTR [rsp+0x1b8]
  4218f3:	jmp    0x421c88
  4218f8:	movsxd rbx,DWORD PTR [rsp+0xa8]
  421900:	mov    rsi,rbx
  421903:	test   ebx,ebx
  421905:	je     0x421937
  421907:	shl    rsi,0x3
  42190b:	add    ebx,r15d
  42190e:	sub    rsi,0x8
  421912:	mov    rax,QWORD PTR [rsp+0xa0]
  42191a:	mov    rdi,QWORD PTR [rsi+rax*1]
  42191e:	test   rdi,rdi
  421921:	je     0x421933
  421923:	mov    rcx,QWORD PTR [rdi]
  421926:	call   0x40215c
  42192b:	mov    rcx,rdi
  42192e:	call   0x40215c
  421933:	test   ebx,ebx
  421935:	jne    0x42190b
  421937:	mov    rcx,QWORD PTR [rsp+0xa0]
  42193f:	call   0x40215c
  421944:	mov    r9d,0xffffffff
  42194a:	mov    DWORD PTR [rsp+0x1d0],r9d
  421952:	cmp    BYTE PTR [rbp+0xb9],0x0
  421959:	je     0x421982
  42195b:	lea    r8,[rsp+0x1d0]
  421963:	lea    rdx,[rsp+0x50]
  421968:	mov    rcx,rbp
  42196b:	call   0x41f740
  421970:	mov    ebx,eax
  421972:	test   eax,eax
  421974:	jne    0x421d00
  42197a:	mov    r9d,DWORD PTR [rsp+0x1d0]
  421982:	lea    rax,[rsp+0xe8]
  42198a:	mov    QWORD PTR [rsp+0x20],rax
  42198f:	mov    esi,DWORD PTR [rsp+0x1b0]
  421996:	mov    r8d,esi
  421999:	mov    edx,DWORD PTR [rsp+0x1a8]
  4219a0:	mov    rcx,rbp
  4219a3:	call   0x42061c
  4219a8:	mov    ecx,DWORD PTR [rbp+0x38]
  4219ab:	dec    ecx
  4219ad:	mov    rax,QWORD PTR [rbp+0x30]
  4219b1:	mov    rdi,QWORD PTR [rax+rcx*8]
  4219b5:	mov    r9,QWORD PTR [rsp+0x1b8]
  4219bd:	lea    r8,[rsp+0xe8]
  4219c5:	mov    rdx,rdi
  4219c8:	mov    rcx,rbp
  4219cb:	call   0x41f8d8
  4219d0:	mov    ebx,eax
  4219d2:	test   eax,eax
  4219d4:	jne    0x421d1e
  4219da:	cmp    QWORD PTR [rdi+0x38],0x0
  4219df:	je     0x421a29
  4219e1:	cmp    BYTE PTR [rsp+0x10c],al
  4219e8:	je     0x4219f8
  4219ea:	mov    rax,QWORD PTR [rsp+0xe8]
  4219f2:	sub    QWORD PTR [rbp+0x68],rax
  4219f6:	jmp    0x421a04
  4219f8:	mov    rax,QWORD PTR [rsp+0xe8]
  421a00:	sub    QWORD PTR [rbp+0x60],rax
  421a04:	mov    rcx,QWORD PTR [rsp+0x110]
  421a0c:	call   0x40215c
  421a11:	nop
  421a12:	mov    rcx,QWORD PTR [rsp+0x50]
  421a17:	call   0x40215c
  421a1c:	mov    r13,QWORD PTR [rsp+0x1b8]
  421a24:	jmp    0x421c88
  421a29:	test   r12b,r12b
  421a2c:	je     0x421b0d
  421a32:	cmp    BYTE PTR [rbp+0x41],0x0
  421a36:	je     0x421b0d
  421a3c:	mov    QWORD PTR [rsp+0x60],0x0
  421a45:	mov    DWORD PTR [rsp+0x68],0x0
  421a4d:	mov    DWORD PTR [rsp+0x6c],0x0
  421a55:	mov    ecx,0x10
  421a5a:	call   0x402130
  421a5f:	mov    QWORD PTR [rsp+0x70],rax
  421a64:	test   rax,rax
  421a67:	je     0x421a7b
  421a69:	lea    rdx,[rsp+0x110]
  421a71:	mov    rcx,rax
  421a74:	call   0x403208
  421a79:	jmp    0x421a7d
  421a7b:	xor    eax,eax
  421a7d:	mov    rdx,rax
  421a80:	lea    rcx,[rsp+0x60]
  421a85:	call   0x4010c8
  421a8a:	mov    QWORD PTR [rsp+0x30],rbp
  421a8f:	lea    rax,[rsp+0x60]
  421a94:	mov    QWORD PTR [rsp+0x28],rax
  421a99:	lea    rax,[rsp+0x50]
  421a9e:	mov    QWORD PTR [rsp+0x20],rax
  421aa3:	mov    r9d,esi
  421aa6:	mov    r8d,DWORD PTR [rsp+0x1a8]
  421aae:	mov    rdx,r14
  421ab1:	lea    rcx,[rsp+0xe8]
  421ab9:	call   0x420ac8
  421abe:	mov    r12d,eax
  421ac1:	test   eax,eax
  421ac3:	jne    0x421d3c
  421ac9:	movsxd rbx,DWORD PTR [rsp+0x68]
  421ace:	mov    r12,QWORD PTR [rsp+0x60]
  421ad3:	test   ebx,ebx
  421ad5:	je     0x421b05
  421ad7:	lea    rsi,[r12+rbx*8]
  421adb:	add    ebx,r15d
  421ade:	sub    rsi,0x8
  421ae2:	mov    rdi,QWORD PTR [rsi]
  421ae5:	test   rdi,rdi
  421ae8:	je     0x421afa
  421aea:	mov    rcx,QWORD PTR [rdi]
  421aed:	call   0x40215c
  421af2:	mov    rcx,rdi
  421af5:	call   0x40215c
  421afa:	test   ebx,ebx
  421afc:	jne    0x421adb
  421afe:	mov    esi,DWORD PTR [rsp+0x1b0]
  421b05:	mov    rcx,r12
  421b08:	call   0x40215c
  421b0d:	test   r13b,r13b
  421b10:	jne    0x421b37
  421b12:	mov    rcx,QWORD PTR [rsp+0x110]
  421b1a:	call   0x40215c
  421b1f:	nop
  421b20:	mov    rcx,QWORD PTR [rsp+0x50]
  421b25:	call   0x40215c
  421b2a:	mov    r13,QWORD PTR [rsp+0x1b8]
  421b32:	jmp    0x421c88
  421b37:	mov    QWORD PTR [rsp+0x90],0x0
  421b43:	mov    DWORD PTR [rsp+0x98],0x0
  421b4e:	mov    DWORD PTR [rsp+0x9c],0x0
  421b59:	mov    rdi,QWORD PTR [rsp+0x138]
  421b61:	mov    rdx,rdi
  421b64:	mov    rcx,r14
  421b67:	call   0x40476c
  421b6c:	mov    ebx,eax
  421b6e:	test   eax,eax
  421b70:	js     0x421ba4
  421b72:	mov    eax,DWORD PTR [rsp+0x48]
  421b76:	cmp    eax,ebx
  421b78:	jg     0x421b91
  421b7a:	mov    edi,ebx
  421b7c:	sub    edi,eax
  421b7e:	inc    edi
  421b80:	mov    dl,0x1
  421b82:	lea    rcx,[rsp+0x40]
  421b87:	call   0x41794c
  421b8c:	dec    rdi
  421b8f:	jne    0x421b80
  421b91:	mov    rax,QWORD PTR [rsp+0x40]
  421b96:	mov    BYTE PTR [rbx+rax*1],0x0
  421b9a:	mov    rax,QWORD PTR [r14+0x18]
  421b9e:	mov    rbx,QWORD PTR [rax+rbx*8]
  421ba2:	jmp    0x421bda
  421ba4:	mov    rbx,r14
  421ba7:	mov    ecx,0x10
  421bac:	call   0x402130
  421bb1:	mov    QWORD PTR [rsp+0x70],rax
  421bb6:	test   rax,rax
  421bb9:	je     0x421bc8
  421bbb:	mov    rdx,rdi
  421bbe:	mov    rcx,rax
  421bc1:	call   0x403208
  421bc6:	jmp    0x421bca
  421bc8:	xor    eax,eax
  421bca:	mov    rdx,rax
  421bcd:	lea    rcx,[rsp+0x90]
  421bd5:	call   0x4010c8
  421bda:	mov    BYTE PTR [rsp+0x38],0x1
  421bdf:	mov    QWORD PTR [rsp+0x30],rbp
  421be4:	lea    rax,[rsp+0x90]
  421bec:	mov    QWORD PTR [rsp+0x28],rax
  421bf1:	mov    r13,QWORD PTR [rsp+0x1b8]
  421bf9:	mov    QWORD PTR [rsp+0x20],r13
  421bfe:	lea    r9,[rsp+0x110]
  421c06:	mov    r8d,esi
  421c09:	mov    edx,DWORD PTR [rsp+0x1a8]
  421c10:	mov    rcx,rbx
  421c13:	call   0x4209d0
  421c18:	mov    r12d,eax
  421c1b:	test   eax,eax
  421c1d:	jne    0x421d9c
  421c23:	movsxd rbx,DWORD PTR [rsp+0x98]
  421c2b:	mov    rsi,rbx
  421c2e:	test   ebx,ebx
  421c30:	je     0x421c62
  421c32:	shl    rsi,0x3
  421c36:	add    ebx,r15d
  421c39:	sub    rsi,0x8
  421c3d:	mov    rax,QWORD PTR [rsp+0x90]
  421c45:	mov    rdi,QWORD PTR [rsi+rax*1]
  421c49:	test   rdi,rdi
  421c4c:	je     0x421c5e
  421c4e:	mov    rcx,QWORD PTR [rdi]
  421c51:	call   0x40215c
  421c56:	mov    rcx,rdi
  421c59:	call   0x40215c
  421c5e:	test   ebx,ebx
  421c60:	jne    0x421c36
  421c62:	mov    rcx,QWORD PTR [rsp+0x90]
  421c6a:	call   0x40215c
  421c6f:	nop
  421c70:	mov    rcx,QWORD PTR [rsp+0x110]
  421c78:	call   0x40215c
  421c7d:	nop
  421c7e:	mov    rcx,QWORD PTR [rsp+0x50]
  421c83:	call   0x40215c
  421c88:	mov    eax,DWORD PTR [rsp+0x80]
  421c8f:	inc    eax
  421c91:	mov    DWORD PTR [rsp+0x80],eax
  421c98:	mov    rcx,QWORD PTR [rsp+0x88]
  421ca0:	add    rcx,0x8
  421ca4:	mov    QWORD PTR [rsp+0x88],rcx
  421cac:	cmp    eax,DWORD PTR [r14+0x30]
  421cb0:	jb     0x421672
  421cb6:	mov    eax,DWORD PTR [rsp+0x48]
  421cba:	mov    rcx,QWORD PTR [rsp+0x40]
  421cbf:	jmp    0x421e0a
  421cc4:	mov    rcx,QWORD PTR [rsp+0x110]
  421ccc:	call   0x40215c
  421cd1:	nop
  421cd2:	mov    rcx,QWORD PTR [rsp+0x50]
  421cd7:	call   0x40215c
  421cdc:	nop
  421cdd:	jmp    0x422156
  421ce2:	mov    rcx,QWORD PTR [rsp+0x110]
  421cea:	call   0x40215c
  421cef:	nop
  421cf0:	mov    rcx,QWORD PTR [rsp+0x50]
  421cf5:	call   0x40215c
  421cfa:	nop
  421cfb:	jmp    0x422156
  421d00:	mov    rcx,QWORD PTR [rsp+0x110]
  421d08:	call   0x40215c
  421d0d:	nop
  421d0e:	mov    rcx,QWORD PTR [rsp+0x50]
  421d13:	call   0x40215c
  421d18:	nop
  421d19:	jmp    0x422156
  421d1e:	mov    rcx,QWORD PTR [rsp+0x110]
  421d26:	call   0x40215c
  421d2b:	nop
  421d2c:	mov    rcx,QWORD PTR [rsp+0x50]
  421d31:	call   0x40215c
  421d36:	nop
  421d37:	jmp    0x422156
  421d3c:	movsxd rbx,DWORD PTR [rsp+0x68]
  421d41:	mov    rbp,QWORD PTR [rsp+0x60]
  421d46:	test   ebx,ebx
  421d48:	je     0x421d72
  421d4a:	lea    rdi,[rbp+rbx*8+0x0]
  421d4f:	add    ebx,r15d
  421d52:	sub    rdi,0x8
  421d56:	mov    rsi,QWORD PTR [rdi]
  421d59:	test   rsi,rsi
  421d5c:	je     0x421d6e
  421d5e:	mov    rcx,QWORD PTR [rsi]
  421d61:	call   0x40215c
  421d66:	mov    rcx,rsi
  421d69:	call   0x40215c
  421d6e:	test   ebx,ebx
  421d70:	jne    0x421d4f
  421d72:	mov    rcx,rbp
  421d75:	call   0x40215c
  421d7a:	nop
  421d7b:	mov    rcx,QWORD PTR [rsp+0x110]
  421d83:	call   0x40215c
  421d88:	nop
  421d89:	mov    rcx,QWORD PTR [rsp+0x50]
  421d8e:	call   0x40215c
  421d93:	nop
  421d94:	mov    ebx,r12d
  421d97:	jmp    0x422156
  421d9c:	movsxd rbx,DWORD PTR [rsp+0x98]
  421da4:	mov    rdi,rbx
  421da7:	test   ebx,ebx
  421da9:	je     0x421ddb
  421dab:	shl    rdi,0x3
  421daf:	add    ebx,r15d
  421db2:	sub    rdi,0x8
  421db6:	mov    rax,QWORD PTR [rsp+0x90]
  421dbe:	mov    rsi,QWORD PTR [rdi+rax*1]
  421dc2:	test   rsi,rsi
  421dc5:	je     0x421dd7
  421dc7:	mov    rcx,QWORD PTR [rsi]
  421dca:	call   0x40215c
  421dcf:	mov    rcx,rsi
  421dd2:	call   0x40215c
  421dd7:	test   ebx,ebx
  421dd9:	jne    0x421daf
  421ddb:	mov    rcx,QWORD PTR [rsp+0x90]
  421de3:	call   0x40215c
  421de8:	nop
  421de9:	mov    rcx,QWORD PTR [rsp+0x110]
  421df1:	call   0x40215c
  421df6:	nop
  421df7:	mov    rcx,QWORD PTR [rsp+0x50]
  421dfc:	call   0x40215c
  421e01:	nop
  421e02:	mov    ebx,r12d
  421e05:	jmp    0x422156
  421e0a:	xor    r13d,r13d
  421e0d:	cmp    DWORD PTR [r14+0x20],r13d
  421e11:	jbe    0x422154
  421e17:	xor    r12d,r12d
  421e1a:	mov    QWORD PTR [rsp+0x80],r12
  421e22:	mov    rsi,rcx
  421e25:	mov    QWORD PTR [rsp+0x88],rcx
  421e2d:	cmp    r13d,eax
  421e30:	jae    0x421e3b
  421e32:	cmp    BYTE PTR [rsi],0x0
  421e35:	je     0x4220da
  421e3b:	mov    rax,QWORD PTR [r14+0x18]
  421e3f:	mov    rbx,QWORD PTR [r12+rax*1]
  421e43:	lea    r8,[rbx+0x8]
  421e47:	mov    rdx,QWORD PTR [rsp+0x1b8]
  421e4f:	lea    rcx,[rsp+0x70]
  421e54:	call   0x4030d4
  421e59:	nop
  421e5a:	lea    rcx,[rsp+0xb0]
  421e62:	call   0x407fc0
  421e67:	lea    rcx,[rsp+0xd8]
  421e6f:	call   0x403150
  421e74:	nop
  421e75:	mov    rax,QWORD PTR [rsp+0x1b8]
  421e7d:	cmp    DWORD PTR [rax+0x8],0x0
  421e81:	jne    0x421ef1
  421e83:	cmp    DWORD PTR [rbx+0x10],0x0
  421e87:	jne    0x421ea1
  421e89:	mov    dx,0x5c
  421e8d:	lea    rcx,[rsp+0x70]
  421e92:	call   0x40323c
  421e97:	mov    rax,QWORD PTR [rsp+0x1b8]
  421e9f:	jmp    0x421ef1
  421ea1:	mov    rcx,QWORD PTR [rbx+0x8]
  421ea5:	call   0x404534
  421eaa:	test   al,al
  421eac:	je     0x421ee9
  421eae:	mov    edx,DWORD PTR [rsp+0x78]
  421eb2:	cmp    DWORD PTR [rsp+0x7c],edx
  421eb6:	jne    0x421ec6
  421eb8:	lea    rcx,[rsp+0x70]
  421ebd:	call   0x402f2c
  421ec2:	mov    edx,DWORD PTR [rsp+0x78]
  421ec6:	mov    rcx,QWORD PTR [rsp+0x70]
  421ecb:	mov    eax,edx
  421ecd:	mov    WORD PTR [rcx+rax*2],0x5c
  421ed3:	inc    edx
  421ed5:	mov    WORD PTR [rcx+rdx*2],0x0
  421edb:	mov    DWORD PTR [rsp+0x78],edx
  421edf:	mov    rax,QWORD PTR [rsp+0x1b8]
  421ee7:	jmp    0x421ef1
  421ee9:	mov    rax,QWORD PTR [rsp+0x1b8]
  421ef1:	cmp    DWORD PTR [rax+0x8],0x0
  421ef5:	jne    0x421efd
  421ef7:	cmp    DWORD PTR [rbx+0x10],0x0
  421efb:	je     0x421f0d
  421efd:	lea    rdx,[rbx+0x8]
  421f01:	mov    rcx,rax
  421f04:	call   0x41f688
  421f09:	test   al,al
  421f0b:	je     0x421f2e
  421f0d:	mov    DWORD PTR [rsp+0xd0],0x10
  421f18:	lea    rdx,[rbx+0x8]
  421f1c:	lea    rcx,[rsp+0xd8]
  421f24:	call   0x4032f8
  421f29:	jmp    0x422006
  421f2e:	mov    rdx,QWORD PTR [rsp+0x70]
  421f33:	lea    rcx,[rsp+0xb0]
  421f3b:	call   0x408134
  421f40:	test   al,al
  421f42:	jne    0x421fa9
  421f44:	mov    rcx,rbx
  421f47:	call   0x404850
  421f4c:	test   al,al
  421f4e:	jne    0x421f71
  421f50:	mov    rcx,QWORD PTR [rsp+0xd8]
  421f58:	call   0x40215c
  421f5d:	nop
  421f5e:	mov    rcx,QWORD PTR [rsp+0x70]
  421f63:	call   0x40215c
  421f68:	mov    eax,DWORD PTR [rsp+0x48]
  421f6c:	jmp    0x4220da
  421f71:	lea    rdx,[rsp+0x70]
  421f76:	mov    rcx,rbp
  421f79:	call   0x41f61c
  421f7e:	mov    ebx,eax
  421f80:	test   eax,eax
  421f82:	jne    0x422100
  421f88:	mov    rcx,QWORD PTR [rsp+0xd8]
  421f90:	call   0x40215c
  421f95:	nop
  421f96:	mov    rcx,QWORD PTR [rsp+0x70]
  421f9b:	call   0x40215c
  421fa0:	mov    eax,DWORD PTR [rsp+0x48]
  421fa4:	jmp    0x4220da
  421fa9:	mov    eax,DWORD PTR [rsp+0xd0]
  421fb0:	shr    eax,0x4
  421fb3:	test   al,0x1
  421fb5:	jne    0x422006
  421fb7:	inc    QWORD PTR [rbp+0x70]
  421fbb:	mov    rcx,QWORD PTR [rbp+0xc0]
  421fc2:	test   rcx,rcx
  421fc5:	je     0x421fdb
  421fc7:	mov    rax,QWORD PTR [rcx]
  421fca:	mov    r8d,0x80004005
  421fd0:	lea    rdx,[rsp+0x70]
  421fd5:	call   QWORD PTR [rax]
  421fd7:	mov    ebx,eax
  421fd9:	jmp    0x421fdd
  421fdb:	xor    ebx,ebx
  421fdd:	test   ebx,ebx
  421fdf:	jne    0x42211b
  421fe5:	mov    rcx,QWORD PTR [rsp+0xd8]
  421fed:	call   0x40215c
  421ff2:	nop
  421ff3:	mov    rcx,QWORD PTR [rsp+0x70]
  421ff8:	call   0x40215c
  421ffd:	mov    eax,DWORD PTR [rsp+0x48]
  422001:	jmp    0x4220da
  422006:	mov    QWORD PTR [rsp+0x60],0x0
  42200f:	mov    DWORD PTR [rsp+0x68],0x0
  422017:	mov    DWORD PTR [rsp+0x6c],0x0
  42201f:	mov    BYTE PTR [rsp+0x38],0x0
  422024:	mov    QWORD PTR [rsp+0x30],rbp
  422029:	lea    rax,[rsp+0x60]
  42202e:	mov    QWORD PTR [rsp+0x28],rax
  422033:	mov    rax,QWORD PTR [rsp+0x1b8]
  42203b:	mov    QWORD PTR [rsp+0x20],rax
  422040:	lea    r9,[rsp+0xd8]
  422048:	mov    r8d,DWORD PTR [rsp+0x1b0]
  422050:	mov    edx,DWORD PTR [rsp+0x1a8]
  422057:	mov    rcx,rbx
  42205a:	call   0x4209d0
  42205f:	mov    r12d,eax
  422062:	movsxd rbx,DWORD PTR [rsp+0x68]
  422067:	mov    rsi,rbx
  42206a:	test   ebx,ebx
  42206c:	je     0x42209b
  42206e:	shl    rsi,0x3
  422072:	add    ebx,r15d
  422075:	sub    rsi,0x8
  422079:	mov    rcx,QWORD PTR [rsp+0x60]
  42207e:	mov    rdi,QWORD PTR [rcx+rsi*1]
  422082:	test   rdi,rdi
  422085:	je     0x422097
  422087:	mov    rcx,QWORD PTR [rdi]
  42208a:	call   0x40215c
  42208f:	mov    rcx,rdi
  422092:	call   0x40215c
  422097:	test   ebx,ebx
  422099:	jne    0x422072
  42209b:	mov    rcx,QWORD PTR [rsp+0x60]
  4220a0:	call   0x40215c
  4220a5:	test   r12d,r12d
  4220a8:	jne    0x422136
  4220ae:	mov    rcx,QWORD PTR [rsp+0xd8]
  4220b6:	call   0x40215c
  4220bb:	nop
  4220bc:	mov    rcx,QWORD PTR [rsp+0x70]
  4220c1:	call   0x40215c
  4220c6:	mov    rsi,QWORD PTR [rsp+0x88]
  4220ce:	mov    r12,QWORD PTR [rsp+0x80]
  4220d6:	mov    eax,DWORD PTR [rsp+0x48]
  4220da:	inc    r13d
  4220dd:	inc    rsi
  4220e0:	mov    QWORD PTR [rsp+0x88],rsi
  4220e8:	add    r12,0x8
  4220ec:	mov    QWORD PTR [rsp+0x80],r12
  4220f4:	cmp    r13d,DWORD PTR [r14+0x20]
  4220f8:	jb     0x421e2d
  4220fe:	jmp    0x422154
  422100:	mov    rcx,QWORD PTR [rsp+0xd8]
  422108:	call   0x40215c
  42210d:	nop
  42210e:	mov    rcx,QWORD PTR [rsp+0x70]
  422113:	call   0x40215c
  422118:	nop
  422119:	jmp    0x422156
  42211b:	mov    rcx,QWORD PTR [rsp+0xd8]
  422123:	call   0x40215c
  422128:	nop
  422129:	mov    rcx,QWORD PTR [rsp+0x70]
  42212e:	call   0x40215c
  422133:	nop
  422134:	jmp    0x422156
  422136:	mov    rcx,QWORD PTR [rsp+0xd8]
  42213e:	call   0x40215c
  422143:	nop
  422144:	mov    rcx,QWORD PTR [rsp+0x70]
  422149:	call   0x40215c
  42214e:	nop
  42214f:	mov    ebx,r12d
  422152:	jmp    0x422156
  422154:	xor    ebx,ebx
  422156:	mov    rcx,QWORD PTR [rsp+0x40]
  42215b:	call   0x40215c
  422160:	mov    eax,ebx
  422162:	jmp    0x4225ff
  422167:	cmp    DWORD PTR [r13+0x8],0x0
  42216c:	jne    0x42240e
  422172:	mov    eax,DWORD PTR [r14+0x30]
  422176:	test   eax,eax
  422178:	je     0x42240e
  42217e:	xor    ebx,ebx
  422180:	test   eax,eax
  422182:	je     0x4221ec
  422184:	xor    esi,esi
  422186:	mov    rax,QWORD PTR [r14+0x28]
  42218a:	mov    rdx,QWORD PTR [rsi+rax*1]
  42218e:	cmp    DWORD PTR [rdx+0x8],0x1
  422192:	jb     0x4221e4
  422194:	mov    rax,QWORD PTR [rdx]
  422197:	mov    r12,QWORD PTR [rax]
  42219a:	cmp    DWORD PTR [r12+0x8],0x2
  4221a0:	jne    0x4221e4
  4221a2:	mov    rcx,QWORD PTR [r12]
  4221a6:	cmp    WORD PTR [rcx+0x2],0x3a
  4221ab:	jne    0x4221e4
  4221ad:	cmp    DWORD PTR [rdx+0x8],0x1
  4221b1:	jne    0x4221bf
  4221b3:	cmp    BYTE PTR [rdx+0x11],0x0
  4221b7:	jne    0x4221e4
  4221b9:	cmp    BYTE PTR [rdx+0x12],0x0
  4221bd:	je     0x4221e4
  4221bf:	call   0x404534
  4221c4:	test   al,al
  4221c6:	jne    0x4221d8
  4221c8:	mov    rax,QWORD PTR [r12]
  4221cc:	cmp    WORD PTR [rax],0x2a
  4221d0:	je     0x4221d8
  4221d2:	cmp    WORD PTR [rax],0x3f
  4221d6:	jne    0x4221e4
  4221d8:	inc    ebx
  4221da:	add    rsi,0x8
  4221de:	cmp    ebx,DWORD PTR [r14+0x30]
  4221e2:	jb     0x422186
  4221e4:	mov    r12d,DWORD PTR [rsp+0x1b0]
  4221ec:	cmp    ebx,DWORD PTR [r14+0x30]
  4221f0:	jne    0x42240e
  4221f6:	mov    QWORD PTR [rsp+0x40],0x0
  4221ff:	mov    DWORD PTR [rsp+0x48],0x0
  422207:	mov    DWORD PTR [rsp+0x4c],0x0
  42220f:	lea    rcx,[rsp+0x40]
  422214:	call   0x408ac4
  422219:	xor    r13d,r13d
  42221c:	mov    ebx,DWORD PTR [rsp+0x48]
  422220:	test   ebx,ebx
  422222:	je     0x4223c1
  422228:	xor    r12d,r12d
  42222b:	mov    rax,QWORD PTR [rsp+0x40]
  422230:	mov    rdx,QWORD PTR [r12+rax*1]
  422234:	lea    rcx,[rsp+0x60]
  422239:	call   0x403208
  42223e:	nop
  42223f:	mov    rcx,QWORD PTR [rsp+0x60]
  422244:	mov    edx,DWORD PTR [rsp+0x68]
  422248:	cmp    edx,0x3
  42224b:	jb     0x422375
  422251:	dec    edx
  422253:	cmp    WORD PTR [rcx+rdx*2],0x5c
  422258:	jne    0x422375
  42225e:	mov    DWORD PTR [rsp+0x68],edx
  422262:	mov    WORD PTR [rcx+rdx*2],0x0
  422268:	lea    rcx,[rsp+0xb0]
  422270:	call   0x407fc0
  422275:	lea    rcx,[rsp+0xd8]
  42227d:	call   0x403150
  422282:	nop
  422283:	mov    DWORD PTR [rsp+0xd0],0x10
  42228e:	lea    rdx,[rsp+0x60]
  422293:	lea    rcx,[rsp+0xd8]
  42229b:	call   0x4032f8
  4222a0:	mov    BYTE PTR [rsp+0x38],dil
  4222a5:	mov    QWORD PTR [rsp+0x30],rbp
  4222aa:	mov    QWORD PTR [rsp+0x28],r15
  4222af:	mov    rax,QWORD PTR [rsp+0x1b8]
  4222b7:	mov    QWORD PTR [rsp+0x20],rax
  4222bc:	mov    r9d,DWORD PTR [rsp+0x1b0]
  4222c4:	mov    r8d,DWORD PTR [rsp+0x1a8]
  4222cc:	mov    rdx,r14
  4222cf:	lea    rcx,[rsp+0xb0]
  4222d7:	call   0x420e74
  4222dc:	mov    esi,eax
  4222de:	test   eax,eax
  4222e0:	jne    0x422313
  4222e2:	mov    rcx,QWORD PTR [rsp+0xd8]
  4222ea:	call   0x40215c
  4222ef:	nop
  4222f0:	mov    rcx,QWORD PTR [rsp+0x60]
  4222f5:	call   0x40215c
  4222fa:	inc    r13d
  4222fd:	add    r12,0x8
  422301:	mov    ebx,DWORD PTR [rsp+0x48]
  422305:	cmp    r13d,ebx
  422308:	jb     0x42222b
  42230e:	jmp    0x4223c1
  422313:	mov    rcx,QWORD PTR [rsp+0xd8]
  42231b:	call   0x40215c
  422320:	nop
  422321:	mov    rcx,QWORD PTR [rsp+0x60]
  422326:	call   0x40215c
  42232b:	nop
  42232c:	movsxd rbx,DWORD PTR [rsp+0x48]
  422331:	mov    rdi,rbx
  422334:	test   ebx,ebx
  422336:	je     0x4223fd
  42233c:	shl    rdi,0x3
  422340:	mov    r15d,0xffffffff
  422346:	add    ebx,r15d
  422349:	sub    rdi,0x8
  42234d:	mov    rax,QWORD PTR [rsp+0x40]
  422352:	mov    rbp,QWORD PTR [rdi+rax*1]
  422356:	test   rbp,rbp
  422359:	je     0x42236c
  42235b:	mov    rcx,QWORD PTR [rbp+0x0]
  42235f:	call   0x40215c
  422364:	mov    rcx,rbp
  422367:	call   0x40215c
  42236c:	test   ebx,ebx
  42236e:	jne    0x422346
  422370:	jmp    0x4223fd
  422375:	call   0x40215c
  42237a:	nop
  42237b:	movsxd rbx,DWORD PTR [rsp+0x48]
  422380:	mov    rdi,rbx
  422383:	test   ebx,ebx
  422385:	je     0x4223ba
  422387:	shl    rdi,0x3
  42238b:	mov    r15d,0xffffffff
  422391:	add    ebx,r15d
  422394:	sub    rdi,0x8
  422398:	mov    rax,QWORD PTR [rsp+0x40]
  42239d:	mov    rsi,QWORD PTR [rdi+rax*1]
  4223a1:	test   rsi,rsi
  4223a4:	je     0x4223b6
  4223a6:	mov    rcx,QWORD PTR [rsi]
  4223a9:	call   0x40215c
  4223ae:	mov    rcx,rsi
  4223b1:	call   0x40215c
  4223b6:	test   ebx,ebx
  4223b8:	jne    0x422391
  4223ba:	mov    esi,0x80004005
  4223bf:	jmp    0x4223fd
  4223c1:	movsxd rdi,ebx
  4223c4:	test   ebx,ebx
  4223c6:	je     0x4223fb
  4223c8:	shl    rdi,0x3
  4223cc:	mov    r15d,0xffffffff
  4223d2:	add    ebx,r15d
  4223d5:	sub    rdi,0x8
  4223d9:	mov    rax,QWORD PTR [rsp+0x40]
  4223de:	mov    rsi,QWORD PTR [rdi+rax*1]
  4223e2:	test   rsi,rsi
  4223e5:	je     0x4223f7
  4223e7:	mov    rcx,QWORD PTR [rsi]
  4223ea:	call   0x40215c
  4223ef:	mov    rcx,rsi
  4223f2:	call   0x40215c
  4223f7:	test   ebx,ebx
  4223f9:	jne    0x4223d2
  4223fb:	xor    esi,esi
  4223fd:	mov    rcx,QWORD PTR [rsp+0x40]
  422402:	call   0x40215c
  422407:	mov    eax,esi
  422409:	jmp    0x4225ff
  42240e:	mov    r8w,0x2a
  422413:	mov    rdx,r13
  422416:	lea    rcx,[rsp+0x60]
  42241b:	call   0x40f0d8
  422420:	nop
  422421:	mov    QWORD PTR [rsp+0x120],0xffffffffffffffff
  42242d:	mov    rdx,rax
  422430:	lea    rcx,[rsp+0x128]
  422438:	call   0x403208
  42243d:	nop
  42243e:	mov    rcx,QWORD PTR [rsp+0x60]
  422443:	call   0x40215c
  422448:	xor    esi,esi
  42244a:	lea    rcx,[rsp+0xb0]
  422452:	call   0x407fc0
  422457:	lea    rcx,[rsp+0xd8]
  42245f:	call   0x403150
  422464:	nop
  422465:	lea    r8,[rsp+0x1d0]
  42246d:	lea    rdx,[rsp+0xb0]
  422475:	lea    rcx,[rsp+0x120]
  42247d:	call   0x4080d8
  422482:	test   al,al
  422484:	je     0x42254d
  42248a:	cmp    BYTE PTR [rsp+0x1d0],0x0
  422492:	je     0x42257d
  422498:	cmp    QWORD PTR [rbp+0xc0],0x0
  4224a0:	je     0x4224c5
  4224a2:	mov    eax,esi
  4224a4:	and    eax,0xfff
  4224a9:	cmp    eax,0xfff
  4224ae:	jne    0x4224c5
  4224b0:	mov    rdx,r13
  4224b3:	mov    rcx,rbp
  4224b6:	call   0x41f654
  4224bb:	mov    ebx,eax
  4224bd:	test   eax,eax
  4224bf:	jne    0x4225a9
  4224c5:	mov    BYTE PTR [rsp+0x38],dil
  4224ca:	mov    QWORD PTR [rsp+0x30],rbp
  4224cf:	mov    QWORD PTR [rsp+0x28],r15
  4224d4:	mov    QWORD PTR [rsp+0x20],r13
  4224d9:	mov    r9d,r12d
  4224dc:	mov    r8d,DWORD PTR [rsp+0x1a8]
  4224e4:	mov    rdx,r14
  4224e7:	lea    rcx,[rsp+0xb0]
  4224ef:	call   0x420e74
  4224f4:	mov    ebx,eax
  4224f6:	test   eax,eax
  4224f8:	jne    0x4225d5
  4224fe:	mov    rcx,QWORD PTR [rsp+0xd8]
  422506:	call   0x40215c
  42250b:	inc    esi
  42250d:	lea    rcx,[rsp+0xb0]
  422515:	call   0x407fc0
  42251a:	lea    rcx,[rsp+0xd8]
  422522:	call   0x403150
  422527:	nop
  422528:	lea    r8,[rsp+0x1d0]
  422530:	lea    rdx,[rsp+0xb0]
  422538:	lea    rcx,[rsp+0x120]
  422540:	call   0x4080d8
  422545:	test   al,al
  422547:	jne    0x42248a
  42254d:	mov    rdx,r13
  422550:	mov    rcx,rbp
  422553:	call   0x41f61c
  422558:	mov    ebx,eax
  42255a:	test   eax,eax
  42255c:	je     0x42256e
  42255e:	mov    rcx,QWORD PTR [rsp+0xd8]
  422566:	call   0x40215c
  42256b:	nop
  42256c:	jmp    0x4225b7
  42256e:	mov    rcx,QWORD PTR [rsp+0xd8]
  422576:	call   0x40215c
  42257b:	jmp    0x42258b
  42257d:	mov    rcx,QWORD PTR [rsp+0xd8]
  422585:	call   0x40215c
  42258a:	nop
  42258b:	mov    rcx,QWORD PTR [rsp+0x128]
  422593:	call   0x40215c
  422598:	lea    rcx,[rsp+0x120]
  4225a0:	call   0x407be4
  4225a5:	xor    eax,eax
  4225a7:	jmp    0x4225ff
  4225a9:	mov    rcx,QWORD PTR [rsp+0xd8]
  4225b1:	call   0x40215c
  4225b6:	nop
  4225b7:	mov    rcx,QWORD PTR [rsp+0x128]
  4225bf:	call   0x40215c
  4225c4:	lea    rcx,[rsp+0x120]
  4225cc:	call   0x407be4
  4225d1:	mov    eax,ebx
  4225d3:	jmp    0x4225ff
  4225d5:	mov    rcx,QWORD PTR [rsp+0xd8]
  4225dd:	call   0x40215c
  4225e2:	nop
  4225e3:	mov    rcx,QWORD PTR [rsp+0x128]
  4225eb:	call   0x40215c
  4225f0:	lea    rcx,[rsp+0x120]
  4225f8:	call   0x407be4
  4225fd:	mov    eax,ebx
  4225ff:	add    rsp,0x158
  422606:	pop    r15
  422608:	pop    r14
  42260a:	pop    r13
  42260c:	pop    r12
  42260e:	pop    rdi
  42260f:	pop    rsi
  422610:	pop    rbp
  422611:	pop    rbx
  422612:	ret    
  422613:	int3   
  422614:	int3   
  422615:	int3   
  422616:	int3   
  422617:	int3   
  422618:	int3   
  422619:	int3   
  42261a:	int3   
  42261b:	int3   
  42261c:	int3   
  42261d:	int3   
  42261e:	int3   
  42261f:	int3   
  422620:	rex.W push rbp
  422622:	sub    rsp,0x20
  422626:	mov    rbp,rdx
  422629:	lea    rcx,[rbp+0x40]
  42262d:	call   0x401000
  422632:	add    rsp,0x20
  422636:	pop    rbp
  422637:	ret    
  422638:	int3   
  422639:	int3   
  42263a:	int3   
  42263b:	int3   
  42263c:	int3   
  42263d:	int3   
  42263e:	int3   
  42263f:	int3   
  422640:	rex.W push rbp
  422642:	sub    rsp,0x20
  422646:	mov    rbp,rdx
  422649:	lea    rcx,[rbp+0x50]
  42264d:	call   0x401000
  422652:	add    rsp,0x20
  422656:	pop    rbp
  422657:	ret    
  422658:	int3   
  422659:	int3   
  42265a:	int3   
  42265b:	int3   
  42265c:	int3   
  42265d:	int3   
  42265e:	int3   
  42265f:	int3   
  422660:	rex.W push rbp
  422662:	sub    rsp,0x20
  422666:	mov    rbp,rdx
  422669:	lea    rcx,[rbp+0xe8]
  422670:	call   0x406fe0
  422675:	add    rsp,0x20
  422679:	pop    rbp
  42267a:	ret    
  42267b:	int3   
  42267c:	int3   
  42267d:	int3   
  42267e:	int3   
  42267f:	int3   
  422680:	rex.W push rbp
  422682:	sub    rsp,0x20
  422686:	mov    rbp,rdx
  422689:	lea    rcx,[rbp+0xa0]
  422690:	call   0x4047cc
  422695:	add    rsp,0x20
  422699:	pop    rbp
  42269a:	ret    
  42269b:	int3   
  42269c:	int3   
  42269d:	int3   
  42269e:	int3   
  42269f:	int3   
  4226a0:	rex.W push rbp
  4226a2:	sub    rsp,0x20
  4226a6:	mov    rbp,rdx
  4226a9:	mov    rcx,QWORD PTR [rbp+0x70]
  4226ad:	call   0x40215c
  4226b2:	add    rsp,0x20
  4226b6:	pop    rbp
  4226b7:	ret    
  4226b8:	int3   
  4226b9:	int3   
  4226ba:	int3   
  4226bb:	int3   
  4226bc:	int3   
  4226bd:	int3   
  4226be:	int3   
  4226bf:	int3   
  4226c0:	rex.W push rbp
  4226c2:	sub    rsp,0x20
  4226c6:	mov    rbp,rdx
  4226c9:	lea    rcx,[rbp+0x60]
  4226cd:	call   0x4047cc
  4226d2:	add    rsp,0x20
  4226d6:	pop    rbp
  4226d7:	ret    
  4226d8:	int3   
  4226d9:	int3   
  4226da:	int3   
  4226db:	int3   
  4226dc:	int3   
  4226dd:	int3   
  4226de:	int3   
  4226df:	int3   
  4226e0:	rex.W push rbp
  4226e2:	sub    rsp,0x20
  4226e6:	mov    rbp,rdx
  4226e9:	mov    rcx,QWORD PTR [rbp+0x70]
  4226ed:	call   0x40215c
  4226f2:	add    rsp,0x20
  4226f6:	pop    rbp
  4226f7:	ret    
  4226f8:	int3   
  4226f9:	int3   
  4226fa:	int3   
  4226fb:	int3   
  4226fc:	int3   
  4226fd:	int3   
  4226fe:	int3   
  4226ff:	int3   
  422700:	rex.W push rbp
  422702:	sub    rsp,0x20
  422706:	mov    rbp,rdx
  422709:	lea    rcx,[rbp+0x90]
  422710:	call   0x4047cc
  422715:	add    rsp,0x20
  422719:	pop    rbp
  42271a:	ret    
  42271b:	int3   
  42271c:	int3   
  42271d:	int3   
  42271e:	int3   
  42271f:	int3   
  422720:	rex.W push rbp
  422722:	sub    rsp,0x20
  422726:	mov    rbp,rdx
  422729:	mov    rcx,QWORD PTR [rbp+0x70]
  42272d:	call   0x40215c
  422732:	add    rsp,0x20
  422736:	pop    rbp
  422737:	ret    
  422738:	int3   
  422739:	int3   
  42273a:	int3   
  42273b:	int3   
  42273c:	int3   
  42273d:	int3   
  42273e:	int3   
  42273f:	int3   
  422740:	rex.W push rbp
  422742:	sub    rsp,0x20
  422746:	mov    rbp,rdx
  422749:	lea    rcx,[rbp+0x70]
  42274d:	call   0x401000
  422752:	add    rsp,0x20
  422756:	pop    rbp
  422757:	ret    
  422758:	int3   
  422759:	int3   
  42275a:	int3   
  42275b:	int3   
  42275c:	int3   
  42275d:	int3   
  42275e:	int3   
  42275f:	int3   
  422760:	rex.W push rbp
  422762:	sub    rsp,0x20
  422766:	mov    rbp,rdx
  422769:	lea    rcx,[rbp+0xb0]
  422770:	call   0x406fe0
  422775:	add    rsp,0x20
  422779:	pop    rbp
  42277a:	ret    
  42277b:	int3   
  42277c:	int3   
  42277d:	int3   
  42277e:	int3   
  42277f:	int3   
  422780:	rex.W push rbp
  422782:	sub    rsp,0x20
  422786:	mov    rbp,rdx
  422789:	lea    rcx,[rbp+0x60]
  42278d:	call   0x4047cc
  422792:	add    rsp,0x20
  422796:	pop    rbp
  422797:	ret    
  422798:	int3   
  422799:	int3   
  42279a:	int3   
  42279b:	int3   
  42279c:	int3   
  42279d:	int3   
  42279e:	int3   
  42279f:	int3   
  4227a0:	rex.W push rbp
  4227a2:	sub    rsp,0x20
  4227a6:	mov    rbp,rdx
  4227a9:	lea    rcx,[rbp+0x40]
  4227ad:	call   0x4047cc
  4227b2:	add    rsp,0x20
  4227b6:	pop    rbp
  4227b7:	ret    
  4227b8:	int3   
  4227b9:	int3   
  4227ba:	int3   
  4227bb:	int3   
  4227bc:	int3   
  4227bd:	int3   
  4227be:	int3   
  4227bf:	int3   
  4227c0:	rex.W push rbp
  4227c2:	sub    rsp,0x20
  4227c6:	mov    rbp,rdx
  4227c9:	lea    rcx,[rbp+0x60]
  4227cd:	call   0x401000
  4227d2:	add    rsp,0x20
  4227d6:	pop    rbp
  4227d7:	ret    
  4227d8:	int3   
  4227d9:	int3   
  4227da:	int3   
  4227db:	int3   
  4227dc:	int3   
  4227dd:	int3   
  4227de:	int3   
  4227df:	int3   
  4227e0:	rex.W push rbp
  4227e2:	sub    rsp,0x20
  4227e6:	mov    rbp,rdx
  4227e9:	lea    rcx,[rbp+0xb0]
  4227f0:	call   0x406fe0
  4227f5:	add    rsp,0x20
  4227f9:	pop    rbp
  4227fa:	ret    
  4227fb:	int3   
  4227fc:	int3   
  4227fd:	int3   
  4227fe:	int3   
  4227ff:	int3   
  422800:	rex.W push rbp
  422802:	sub    rsp,0x20
  422806:	mov    rbp,rdx
  422809:	lea    rcx,[rbp+0x60]
  42280d:	call   0x401000
  422812:	add    rsp,0x20
  422816:	pop    rbp
  422817:	ret    
  422818:	int3   
  422819:	int3   
  42281a:	int3   
  42281b:	int3   
  42281c:	int3   
  42281d:	int3   
  42281e:	int3   
  42281f:	int3   
  422820:	rex.W push rbp
  422822:	sub    rsp,0x20
  422826:	mov    rbp,rdx
  422829:	lea    rcx,[rbp+0x120]
  422830:	call   0x40810c
  422835:	add    rsp,0x20
  422839:	pop    rbp
  42283a:	ret    
  42283b:	int3   
  42283c:	int3   
  42283d:	int3   
  42283e:	int3   
  42283f:	int3   
  422840:	rex.W push rbp
  422842:	sub    rsp,0x20
  422846:	mov    rbp,rdx
  422849:	lea    rcx,[rbp+0x120]
  422850:	call   0x408114
  422855:	add    rsp,0x20
  422859:	pop    rbp
  42285a:	ret    
  42285b:	int3   
  42285c:	int3   
  42285d:	int3   
  42285e:	int3   
  42285f:	int3   
  422860:	rex.W push rbp
  422862:	sub    rsp,0x20
  422866:	mov    rbp,rdx
  422869:	lea    rcx,[rbp+0xb0]
  422870:	call   0x406fe0
  422875:	add    rsp,0x20
  422879:	pop    rbp
  42287a:	ret    
  42287b:	int3   
  42287c:	rex.W push rbx
  42287e:	push   rbp
  42287f:	push   rsi
  422880:	push   rdi
  422881:	push   r12
  422883:	push   r13
  422885:	push   r14
  422887:	push   r15
  422889:	sub    rsp,0x68
  42288d:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
  422896:	mov    rbx,r9
  422899:	mov    r14,r8
  42289c:	mov    r15d,edx
  42289f:	mov    rbp,rcx
  4228a2:	xor    esi,esi
  4228a4:	cmp    DWORD PTR [rcx+0x8],esi
  4228a7:	jbe    0x422960
  4228ad:	mov    QWORD PTR [rsp+0x48],rsi
  4228b2:	mov    DWORD PTR [rsp+0x50],esi
  4228b6:	mov    DWORD PTR [rsp+0x54],esi
  4228ba:	xor    edi,edi
  4228bc:	lea    ecx,[rsi-0x1]
  4228bf:	mov    rax,QWORD PTR [rbp+0x0]
  4228c3:	mov    r13,QWORD PTR [rdi+rax*1]
  4228c7:	cmp    DWORD PTR [r13+0x8],0x0
  4228cc:	jne    0x4228d3
  4228ce:	mov    r12d,ecx
  4228d1:	jmp    0x4228eb
  4228d3:	mov    r9,r13
  4228d6:	mov    r8d,ecx
  4228d9:	mov    edx,ecx
  4228db:	mov    rcx,rbx
  4228de:	call   0x4207b8
  4228e3:	mov    r12d,eax
  4228e6:	mov    ecx,0xffffffff
  4228eb:	mov    eax,ecx
  4228ed:	cmp    r15d,0x2
  4228f1:	jne    0x4228f8
  4228f3:	mov    eax,r12d
  4228f6:	jmp    0x422910
  4228f8:	cmp    DWORD PTR [r14+0x8],0x0
  4228fd:	je     0x422910
  4228ff:	mov    r9,r14
  422902:	mov    r8d,ecx
  422905:	mov    edx,ecx
  422907:	mov    rcx,rbx
  42290a:	call   0x4207b8
  42290f:	nop
  422910:	lea    rcx,[r13+0x10]
  422914:	mov    BYTE PTR [rsp+0x30],0x0
  422919:	mov    QWORD PTR [rsp+0x28],rbx
  42291e:	lea    rdx,[rsp+0x48]
  422923:	mov    QWORD PTR [rsp+0x20],rdx
  422928:	mov    r9,r13
  42292b:	mov    r8d,eax
  42292e:	mov    edx,r12d
  422931:	call   0x421570
  422936:	mov    r12d,eax
  422939:	xor    ecx,ecx
  42293b:	call   0x40215c
  422940:	test   r12d,r12d
  422943:	jne    0x42295b
  422945:	inc    esi
  422947:	add    rdi,0x8
  42294b:	cmp    esi,DWORD PTR [rbp+0x8]
  42294e:	lea    ecx,[r12-0x1]
  422953:	jb     0x4228bf
  422959:	jmp    0x422960
  42295b:	mov    eax,r12d
  42295e:	jmp    0x422972
  422960:	mov    rcx,rbx
  422963:	call   0x41fd7c
  422968:	mov    rcx,rbx
  42296b:	call   0x41fee0
  422970:	xor    eax,eax
  422972:	add    rsp,0x68
  422976:	pop    r15
  422978:	pop    r14
  42297a:	pop    r13
  42297c:	pop    r12
  42297e:	pop    rdi
  42297f:	pop    rsi
  422980:	pop    rbp
  422981:	pop    rbx
  422982:	ret    
  422983:	int3   
  422984:	int3   
  422985:	int3   
  422986:	int3   
  422987:	int3   
  422988:	int3   
  422989:	int3   
  42298a:	int3   
  42298b:	int3   
  42298c:	rex.W push rbp
  42298e:	sub    rsp,0x20
  422992:	mov    rbp,rdx
  422995:	lea    rcx,[rbp+0x48]
  422999:	call   0x4047cc
  42299e:	add    rsp,0x20
  4229a2:	pop    rbp
  4229a3:	ret    
  4229a4:	rex.W push rbx
  4229a6:	sub    rsp,0x20
  4229aa:	xor    eax,eax
  4229ac:	mov    rbx,rcx
  4229af:	mov    QWORD PTR [rcx],rax
  4229b2:	mov    DWORD PTR [rcx+0x8],0xffffffff
  4229b9:	mov    BYTE PTR [rcx+0x10],al
  4229bc:	mov    BYTE PTR [rcx+0x11],al
  4229bf:	mov    BYTE PTR [rcx+0x12],al
  4229c2:	mov    BYTE PTR [rcx+0x13],al
  4229c5:	mov    BYTE PTR [rcx+0x14],al
  4229c8:	mov    BYTE PTR [rcx+0x18],0x1
  4229cc:	mov    BYTE PTR [rcx+0x19],0x1
  4229d0:	mov    BYTE PTR [rcx+0x1a],al
  4229d3:	mov    BYTE PTR [rcx+0x1b],al
  4229d6:	mov    BYTE PTR [rcx+0x1c],al
  4229d9:	mov    BYTE PTR [rcx+0x1d],al
  4229dc:	mov    QWORD PTR [rcx+0x20],rax
  4229e0:	mov    BYTE PTR [rcx+0xc],0x1
  4229e4:	mov    BYTE PTR [rcx+0xd],0x1
  4229e8:	mov    BYTE PTR [rcx+0xe],0x1
  4229ec:	mov    BYTE PTR [rcx+0xf],0x1
  4229f0:	mov    BYTE PTR [rcx+0x16],0x1
  4229f4:	mov    BYTE PTR [rcx+0x17],0x1
  4229f8:	mov    BYTE PTR [rcx+0x15],0x1
  4229fc:	mov    QWORD PTR [rcx+0x28],rax
  422a00:	mov    QWORD PTR [rcx+0x30],rax
  422a04:	mov    QWORD PTR [rcx+0x38],rax
  422a08:	mov    QWORD PTR [rcx+0x40],rax
  422a0c:	mov    QWORD PTR [rcx+0x48],rax
  422a10:	mov    QWORD PTR [rcx+0x50],rax
  422a14:	mov    BYTE PTR [rcx+0x60],al
  422a17:	add    rcx,0x68
  422a1b:	call   0x403150
  422a20:	mov    rax,rbx
  422a23:	add    rsp,0x20
  422a27:	pop    rbx
  422a28:	ret    
  422a29:	int3   
  422a2a:	int3   
  422a2b:	int3   
  422a2c:	rex.W push rbx
  422a2e:	sub    rsp,0x20
  422a32:	mov    rbx,rcx
  422a35:	mov    rcx,QWORD PTR [rcx+0x28]
  422a39:	call   0x40215c
  422a3e:	mov    rcx,QWORD PTR [rbx+0x18]
  422a42:	add    rsp,0x20
  422a46:	pop    rbx
  422a47:	jmp    0x40215c
  422a4c:	mov    rcx,QWORD PTR [rcx+0x68]
  422a50:	jmp    0x40215c
  422a55:	int3   
  422a56:	int3   
  422a57:	int3   
  422a58:	mov    QWORD PTR [rsp+0x8],rcx
  422a5d:	push   rbx
  422a5e:	sub    rsp,0x30
  422a62:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  422a6b:	mov    rbx,rcx
  422a6e:	mov    rcx,QWORD PTR [rcx+0xb0]
  422a75:	call   0x40215c
  422a7a:	mov    rcx,QWORD PTR [rbx+0xa0]
  422a81:	call   0x40215c
  422a86:	mov    rcx,QWORD PTR [rbx+0x90]
  422a8d:	call   0x40215c
  422a92:	mov    rcx,QWORD PTR [rbx+0x80]
  422a99:	call   0x40215c
  422a9e:	mov    rcx,QWORD PTR [rbx+0x70]
  422aa2:	call   0x40215c
  422aa7:	mov    rcx,QWORD PTR [rbx+0x48]
  422aab:	call   0x40215c
  422ab0:	mov    rcx,QWORD PTR [rbx+0x38]
  422ab4:	call   0x40215c
  422ab9:	mov    rcx,QWORD PTR [rbx+0x18]
  422abd:	test   rcx,rcx
  422ac0:	je     0x422ac9
  422ac2:	mov    rax,QWORD PTR [rcx]
  422ac5:	call   QWORD PTR [rax+0x10]
  422ac8:	nop
  422ac9:	mov    rcx,QWORD PTR [rbx+0x10]
  422acd:	test   rcx,rcx
  422ad0:	je     0x422ad9
  422ad2:	mov    rax,QWORD PTR [rcx]
  422ad5:	call   QWORD PTR [rax+0x10]
  422ad8:	nop
  422ad9:	mov    rcx,QWORD PTR [rbx+0x8]
  422add:	test   rcx,rcx
  422ae0:	je     0x422ae9
  422ae2:	mov    rax,QWORD PTR [rcx]
  422ae5:	call   QWORD PTR [rax+0x10]
  422ae8:	nop
  422ae9:	mov    rcx,QWORD PTR [rbx]
  422aec:	test   rcx,rcx
  422aef:	je     0x422af7
  422af1:	mov    rax,QWORD PTR [rcx]
  422af4:	call   QWORD PTR [rax+0x10]
  422af7:	add    rsp,0x30
  422afb:	pop    rbx
  422afc:	ret    
  422afd:	int3   
  422afe:	int3   
  422aff:	int3   
  422b00:	int3   
  422b01:	int3   
  422b02:	int3   
  422b03:	int3   
  422b04:	int3   
  422b05:	int3   
  422b06:	int3   
  422b07:	int3   
  422b08:	rex.W push rbp
  422b0a:	sub    rsp,0x20
  422b0e:	mov    rbp,rdx
  422b11:	mov    rcx,QWORD PTR [rbp+0x40]
  422b15:	call   0x4176b4
  422b1a:	add    rsp,0x20
  422b1e:	pop    rbp
  422b1f:	ret    
  422b20:	int3   
  422b21:	int3   
  422b22:	int3   
  422b23:	int3   
  422b24:	int3   
  422b25:	int3   
  422b26:	int3   
  422b27:	int3   
  422b28:	rex.W push rbp
  422b2a:	sub    rsp,0x20
  422b2e:	mov    rbp,rdx
  422b31:	mov    rcx,QWORD PTR [rbp+0x40]
  422b35:	add    rcx,0x8
  422b39:	call   0x4176b4
  422b3e:	add    rsp,0x20
  422b42:	pop    rbp
  422b43:	ret    
  422b44:	int3   
  422b45:	int3   
  422b46:	int3   
  422b47:	int3   
  422b48:	rex.W push rbp
  422b4a:	sub    rsp,0x20
  422b4e:	mov    rbp,rdx
  422b51:	mov    rcx,QWORD PTR [rbp+0x40]
  422b55:	add    rcx,0x10
  422b59:	call   0x4176b4
  422b5e:	add    rsp,0x20
  422b62:	pop    rbp
  422b63:	ret    
  422b64:	rex.W push rbx
  422b66:	push   rdi
  422b67:	sub    rsp,0x28
  422b6b:	mov    rax,rdx
  422b6e:	mov    rdi,r8
  422b71:	mov    rbx,rcx
  422b74:	mov    QWORD PTR [r8],0x0
  422b7b:	lea    rdx,[rip+0x3226e]        # 0x454df0
  422b82:	mov    rcx,rax
  422b85:	mov    r8d,0x10
  422b8b:	call   0x44b786
  422b90:	test   eax,eax
  422b92:	jne    0x422b9c
  422b94:	mov    QWORD PTR [rdi],rbx
  422b97:	inc    DWORD PTR [rbx+0x8]
  422b9a:	jmp    0x422ba1
  422b9c:	mov    eax,0x80004002
  422ba1:	add    rsp,0x28
  422ba5:	pop    rdi
  422ba6:	pop    rbx
  422ba7:	ret    
  422ba8:	mov    QWORD PTR [rsp+0x8],rcx
  422bad:	push   rbx
  422bae:	push   rbp
  422baf:	push   rsi
  422bb0:	push   rdi
  422bb1:	push   r12
  422bb3:	sub    rsp,0x30
  422bb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  422bc0:	mov    r12,rdx
  422bc3:	mov    rbx,rcx
  422bc6:	mov    QWORD PTR [rcx],0x0
  422bcd:	mov    DWORD PTR [rcx+0x8],0x0
  422bd4:	mov    DWORD PTR [rcx+0xc],0x0
  422bdb:	mov    edi,DWORD PTR [rdx+0x8]
  422bde:	test   edi,edi
  422be0:	je     0x422bf4
  422be2:	mov    rcx,rdi
  422be5:	shl    rcx,0x3
  422be9:	call   0x402130
  422bee:	mov    QWORD PTR [rbx],rax
  422bf1:	mov    DWORD PTR [rbx+0xc],edi
  422bf4:	test   edi,edi
  422bf6:	je     0x422c3f
  422bf8:	xor    esi,esi
  422bfa:	mov    rbp,rdi
  422bfd:	mov    ecx,0x20
  422c02:	call   0x402130
  422c07:	mov    rdi,rax
  422c0a:	test   rax,rax
  422c0d:	je     0x422c27
  422c0f:	mov    rcx,QWORD PTR [r12]
  422c13:	mov    rdx,QWORD PTR [rsi+rcx*1]
  422c17:	mov    rcx,rax
  422c1a:	mov    r8d,0x20
  422c20:	call   0x44b480
  422c25:	jmp    0x422c29
  422c27:	xor    edi,edi
  422c29:	mov    ecx,DWORD PTR [rbx+0x8]
  422c2c:	mov    rax,QWORD PTR [rbx]
  422c2f:	mov    QWORD PTR [rax+rcx*8],rdi
  422c33:	inc    DWORD PTR [rbx+0x8]
  422c36:	add    rsi,0x8
  422c3a:	dec    rbp
  422c3d:	jne    0x422bfd
  422c3f:	mov    rax,rbx
  422c42:	add    rsp,0x30
  422c46:	pop    r12
  422c48:	pop    rdi
  422c49:	pop    rsi
  422c4a:	pop    rbp
  422c4b:	pop    rbx
  422c4c:	ret    
  422c4d:	int3   
  422c4e:	int3   
  422c4f:	int3   
  422c50:	int3   
  422c51:	int3   
  422c52:	int3   
  422c53:	int3   
  422c54:	int3   
  422c55:	int3   
  422c56:	int3   
  422c57:	int3   
  422c58:	rex.W push rbp
  422c5a:	sub    rsp,0x20
  422c5e:	mov    rbp,rdx
  422c61:	mov    rcx,QWORD PTR [rbp+0x60]
  422c65:	call   0x401000
  422c6a:	add    rsp,0x20
  422c6e:	pop    rbp
  422c6f:	ret    
  422c70:	rex.W push rbx
  422c72:	push   rsi
  422c73:	push   rdi
  422c74:	sub    rsp,0x20
  422c78:	movsxd rdi,DWORD PTR [rcx+0x8]
  422c7c:	mov    rbx,rcx
  422c7f:	test   edi,edi
  422c81:	mov    rsi,rdi
  422c84:	je     0x422c9f
  422c86:	shl    rsi,0x3
  422c8a:	mov    rcx,QWORD PTR [rbx]
  422c8d:	sub    rsi,0x8
  422c91:	mov    rcx,QWORD PTR [rsi+rcx*1]
  422c95:	call   0x40215c
  422c9a:	add    edi,0xffffffff
  422c9d:	jne    0x422c8a
  422c9f:	mov    rcx,QWORD PTR [rbx]
  422ca2:	add    rsp,0x20
  422ca6:	pop    rdi
  422ca7:	pop    rsi
  422ca8:	pop    rbx
  422ca9:	jmp    0x40215c
  422cae:	int3   
  422caf:	int3   
  422cb0:	test   rdx,rdx
  422cb3:	je     0x422d31
  422cb5:	push   rbx
  422cb6:	push   rsi
  422cb7:	push   rdi
  422cb8:	sub    rsp,0x20
  422cbc:	mov    rdi,rcx
  422cbf:	mov    ecx,0x30
  422cc4:	mov    rsi,rdx
  422cc7:	call   0x402130
  422ccc:	test   rax,rax
  422ccf:	mov    rbx,rax
  422cd2:	je     0x422cef
  422cd4:	mov    DWORD PTR [rax+0x8],0x0
  422cdb:	lea    rax,[rip+0x2ce4e]        # 0x44fb30
  422ce2:	mov    QWORD PTR [rbx],rax
  422ce5:	mov    QWORD PTR [rbx+0x10],0x0
  422ced:	jmp    0x422cf1
  422cef:	xor    ebx,ebx
  422cf1:	test   rbx,rbx
  422cf4:	mov    QWORD PTR [rdi+0x168],rbx
  422cfb:	je     0x422d06
  422cfd:	mov    rax,QWORD PTR [rbx]
  422d00:	mov    rcx,rbx
  422d03:	call   QWORD PTR [rax+0x8]
  422d06:	mov    rcx,QWORD PTR [rdi+0x170]
  422d0d:	test   rcx,rcx
  422d10:	je     0x422d18
  422d12:	mov    rax,QWORD PTR [rcx]
  422d15:	call   QWORD PTR [rax+0x10]
  422d18:	mov    QWORD PTR [rdi+0x170],rbx
  422d1f:	mov    rax,QWORD PTR [rdi+0x168]
  422d26:	mov    QWORD PTR [rax+0x28],rsi
  422d2a:	add    rsp,0x20
  422d2e:	pop    rdi
  422d2f:	pop    rsi
  422d30:	pop    rbx
  422d31:	ret    
  422d32:	int3   
  422d33:	int3   
  422d34:	rex.W push rbx
  422d36:	push   rbp
  422d37:	push   rsi
  422d38:	push   rdi
  422d39:	push   r12
  422d3b:	sub    rsp,0x20
  422d3f:	mov    ebx,DWORD PTR [rcx+0x8]
  422d42:	xor    esi,esi
  422d44:	mov    r12,rdx
  422d47:	test   ebx,ebx
  422d49:	mov    rbp,rcx
  422d4c:	je     0x422d78
  422d4e:	mov    rax,QWORD PTR [rbp+0x0]
  422d52:	lea    edi,[rbx+rsi*1]
  422d55:	shr    edi,1
  422d57:	mov    rcx,QWORD PTR [rax+rdi*8]
  422d5b:	mov    rdx,QWORD PTR [rcx]
  422d5e:	mov    rcx,QWORD PTR [r12]
  422d62:	call   0x4042ec
  422d67:	test   eax,eax
  422d69:	je     0x422d88
  422d6b:	jns    0x422d71
  422d6d:	mov    ebx,edi
  422d6f:	jmp    0x422d74
  422d71:	lea    esi,[rdi+0x1]
  422d74:	cmp    esi,ebx
  422d76:	jne    0x422d4e
  422d78:	mov    eax,0xffffffff
  422d7d:	add    rsp,0x20
  422d81:	pop    r12
  422d83:	pop    rdi
  422d84:	pop    rsi
  422d85:	pop    rbp
  422d86:	pop    rbx
  422d87:	ret    
  422d88:	mov    eax,edi
  422d8a:	jmp    0x422d7d
  422d8c:	mov    QWORD PTR [rsp+0x8],rcx
  422d91:	push   rbx
  422d92:	push   rbp
  422d93:	push   rsi
  422d94:	push   rdi
  422d95:	sub    rsp,0x38
  422d99:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  422da2:	mov    rdi,rcx
  422da5:	movsxd rbx,DWORD PTR [rcx+0x8]
  422da9:	mov    rsi,rbx
  422dac:	test   ebx,ebx
  422dae:	je     0x422ddb
  422db0:	shl    rsi,0x3
  422db4:	add    ebx,0xffffffff
  422db7:	sub    rsi,0x8
  422dbb:	mov    rax,QWORD PTR [rdi]
  422dbe:	mov    rbp,QWORD PTR [rsi+rax*1]
  422dc2:	test   rbp,rbp
  422dc5:	je     0x422dd7
  422dc7:	mov    rcx,rbp
  422dca:	call   0x422a58
  422dcf:	mov    rcx,rbp
  422dd2:	call   0x40215c
  422dd7:	test   ebx,ebx
  422dd9:	jne    0x422db4
  422ddb:	mov    rcx,QWORD PTR [rdi]
  422dde:	add    rsp,0x38
  422de2:	pop    rdi
  422de3:	pop    rsi
  422de4:	pop    rbp
  422de5:	pop    rbx
  422de6:	jmp    0x40215c
  422deb:	int3   
  422dec:	rex.W push rbp
  422dee:	sub    rsp,0x20
  422df2:	mov    rbp,rdx
  422df5:	mov    rcx,QWORD PTR [rbp+0x60]
  422df9:	call   0x401000
  422dfe:	add    rsp,0x20
  422e02:	pop    rbp
  422e03:	ret    
  422e04:	mov    QWORD PTR [rsp+0x8],rcx
  422e09:	push   rbx
  422e0a:	push   rsi
  422e0b:	push   rdi
  422e0c:	sub    rsp,0x30
  422e10:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  422e19:	mov    rdi,rcx
  422e1c:	xor    esi,esi
  422e1e:	mov    QWORD PTR [rcx],rsi
  422e21:	mov    DWORD PTR [rcx+0x8],esi
  422e24:	mov    DWORD PTR [rcx+0xc],esi
  422e27:	mov    QWORD PTR [rcx+0x10],rsi
  422e2b:	mov    DWORD PTR [rcx+0x18],esi
  422e2e:	mov    DWORD PTR [rcx+0x1c],esi
  422e31:	mov    QWORD PTR [rcx+0x20],rsi
  422e35:	mov    BYTE PTR [rcx+0x28],sil
  422e39:	mov    BYTE PTR [rcx+0x29],sil
  422e3d:	add    rcx,0x30
  422e41:	call   0x403150
  422e46:	nop
  422e47:	lea    rbx,[rdi+0x40]
  422e4b:	mov    QWORD PTR [rsp+0x58],rbx
  422e50:	mov    BYTE PTR [rbx],sil
  422e53:	mov    BYTE PTR [rbx+0x1],sil
  422e57:	mov    BYTE PTR [rbx+0x2],sil
  422e5b:	mov    BYTE PTR [rbx+0x3],sil
  422e5f:	mov    DWORD PTR [rbx+0x4],esi
  422e62:	mov    DWORD PTR [rbx+0x8],esi
  422e65:	mov    DWORD PTR [rbx+0xc],0xffffffff
  422e6c:	mov    QWORD PTR [rbx+0x10],rsi
  422e70:	lea    rcx,[rbx+0x18]
  422e74:	call   0x403150
  422e79:	nop
  422e7a:	lea    rcx,[rbx+0x28]
  422e7e:	call   0x403150
  422e83:	nop
  422e84:	mov    rax,rdi
  422e87:	add    rsp,0x30
  422e8b:	pop    rdi
  422e8c:	pop    rsi
  422e8d:	pop    rbx
  422e8e:	ret    
  422e8f:	int3   
  422e90:	int3   
  422e91:	int3   
  422e92:	int3   
  422e93:	int3   
  422e94:	rex.W push rbp
  422e96:	sub    rsp,0x20
  422e9a:	mov    rbp,rdx
  422e9d:	mov    rcx,QWORD PTR [rbp+0x50]
  422ea1:	call   0x422d8c
  422ea6:	add    rsp,0x20
  422eaa:	pop    rbp
  422eab:	ret    
  422eac:	int3   
  422ead:	int3   
  422eae:	int3   
  422eaf:	int3   
  422eb0:	int3   
  422eb1:	int3   
  422eb2:	int3   
  422eb3:	int3   
  422eb4:	rex.W push rbp
  422eb6:	sub    rsp,0x20
  422eba:	mov    rbp,rdx
  422ebd:	mov    rcx,QWORD PTR [rbp+0x50]
  422ec1:	add    rcx,0x10
  422ec5:	call   0x4047cc
  422eca:	add    rsp,0x20
  422ece:	pop    rbp
  422ecf:	ret    
  422ed0:	int3   
  422ed1:	int3   
  422ed2:	int3   
  422ed3:	int3   
  422ed4:	rex.W push rbp
  422ed6:	sub    rsp,0x20
  422eda:	mov    rbp,rdx
  422edd:	mov    rcx,QWORD PTR [rbp+0x50]
  422ee1:	add    rcx,0x30
  422ee5:	call   0x401000
  422eea:	add    rsp,0x20
  422eee:	pop    rbp
  422eef:	ret    
  422ef0:	int3   
  422ef1:	int3   
  422ef2:	int3   
  422ef3:	int3   
  422ef4:	rex.W push rbp
  422ef6:	sub    rsp,0x20
  422efa:	mov    rbp,rdx
  422efd:	mov    rcx,QWORD PTR [rbp+0x58]
  422f01:	add    rcx,0x18
  422f05:	call   0x401000
  422f0a:	add    rsp,0x20
  422f0e:	pop    rbp
  422f0f:	ret    
  422f10:	mov    QWORD PTR [rsp+0x8],rcx
  422f15:	push   rbx
  422f16:	push   rbp
  422f17:	push   rsi
  422f18:	push   rdi
  422f19:	sub    rsp,0x38
  422f1d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  422f26:	mov    rdi,rcx
  422f29:	call   0x432468
  422f2e:	nop
  422f2f:	mov    rcx,QWORD PTR [rdi+0x68]
  422f33:	call   0x40215c
  422f38:	mov    rcx,QWORD PTR [rdi+0x58]
  422f3c:	call   0x40215c
  422f41:	nop
  422f42:	mov    rcx,QWORD PTR [rdi+0x30]
  422f46:	call   0x40215c
  422f4b:	nop
  422f4c:	movsxd rbp,DWORD PTR [rdi+0x18]
  422f50:	mov    rbx,rbp
  422f53:	test   ebp,ebp
  422f55:	je     0x422f83
  422f57:	shl    rbx,0x3
  422f5b:	add    ebp,0xffffffff
  422f5e:	sub    rbx,0x8
  422f62:	mov    rax,QWORD PTR [rdi+0x10]
  422f66:	mov    rsi,QWORD PTR [rbx+rax*1]
  422f6a:	test   rsi,rsi
  422f6d:	je     0x422f7f
  422f6f:	mov    rcx,QWORD PTR [rsi]
  422f72:	call   0x40215c
  422f77:	mov    rcx,rsi
  422f7a:	call   0x40215c
  422f7f:	test   ebp,ebp
  422f81:	jne    0x422f5b
  422f83:	mov    rcx,QWORD PTR [rdi+0x10]
  422f87:	call   0x40215c
  422f8c:	nop
  422f8d:	movsxd rbx,DWORD PTR [rdi+0x8]
  422f91:	mov    rsi,rbx
  422f94:	test   ebx,ebx
  422f96:	je     0x422fc3
  422f98:	shl    rsi,0x3
  422f9c:	add    ebx,0xffffffff
  422f9f:	sub    rsi,0x8
  422fa3:	mov    rax,QWORD PTR [rdi]
  422fa6:	mov    rbp,QWORD PTR [rsi+rax*1]
  422faa:	test   rbp,rbp
  422fad:	je     0x422fbf
  422faf:	mov    rcx,rbp
  422fb2:	call   0x422a58
  422fb7:	mov    rcx,rbp
  422fba:	call   0x40215c
  422fbf:	test   ebx,ebx
  422fc1:	jne    0x422f9c
  422fc3:	mov    rcx,QWORD PTR [rdi]
  422fc6:	add    rsp,0x38
  422fca:	pop    rdi
  422fcb:	pop    rsi
  422fcc:	pop    rbp
  422fcd:	pop    rbx
  422fce:	jmp    0x40215c
  422fd3:	int3   
  422fd4:	int3   
  422fd5:	int3   
  422fd6:	int3   
  422fd7:	int3   
  422fd8:	int3   
  422fd9:	int3   
  422fda:	int3   
  422fdb:	int3   
  422fdc:	int3   
  422fdd:	int3   
  422fde:	int3   
  422fdf:	int3   
  422fe0:	rex.W push rbp
  422fe2:	sub    rsp,0x20
  422fe6:	mov    rbp,rdx
  422fe9:	mov    rcx,QWORD PTR [rbp+0x60]
  422fed:	call   0x422d8c
  422ff2:	add    rsp,0x20
  422ff6:	pop    rbp
  422ff7:	ret    
  422ff8:	int3   
  422ff9:	int3   
  422ffa:	int3   
  422ffb:	int3   
  422ffc:	int3   
  422ffd:	int3   
  422ffe:	int3   
  422fff:	int3   
  423000:	rex.W push rbp
  423002:	sub    rsp,0x20
  423006:	mov    rbp,rdx
  423009:	mov    rcx,QWORD PTR [rbp+0x60]
  42300d:	add    rcx,0x10
  423011:	call   0x4047cc
  423016:	add    rsp,0x20
  42301a:	pop    rbp
  42301b:	ret    
  42301c:	int3   
  42301d:	int3   
  42301e:	int3   
  42301f:	int3   
  423020:	rex.W push rbp
  423022:	sub    rsp,0x20
  423026:	mov    rbp,rdx
  423029:	mov    rcx,QWORD PTR [rbp+0x60]
  42302d:	add    rcx,0x30
  423031:	call   0x401000
  423036:	add    rsp,0x20
  42303a:	pop    rbp
  42303b:	ret    
  42303c:	int3   
  42303d:	int3   
  42303e:	int3   
  42303f:	int3   
  423040:	rex.W push rbp
  423042:	sub    rsp,0x20
  423046:	mov    rbp,rdx
  423049:	mov    rcx,QWORD PTR [rbp+0x60]
  42304d:	add    rcx,0x40
  423051:	call   0x422a2c
  423056:	add    rsp,0x20
  42305a:	pop    rbp
  42305b:	ret    
  42305c:	int3   
  42305d:	int3   
  42305e:	int3   
  42305f:	int3   
  423060:	rex.W push rbp
  423062:	sub    rsp,0x20
  423066:	mov    rbp,rdx
  423069:	mov    rcx,QWORD PTR [rbp+0x60]
  42306d:	call   0x401000
  423072:	add    rsp,0x20
  423076:	pop    rbp
  423077:	ret    
  423078:	rex.W push rbx
  42307a:	sub    rsp,0x20
  42307e:	add    DWORD PTR [rcx+0x8],0xffffffff
  423082:	mov    eax,DWORD PTR [rcx+0x8]
  423085:	mov    rbx,rcx
  423088:	jne    0x4230a3
  42308a:	mov    rcx,QWORD PTR [rcx+0x10]
  42308e:	test   rcx,rcx
  423091:	je     0x423099
  423093:	mov    rax,QWORD PTR [rcx]
  423096:	call   QWORD PTR [rax+0x10]
  423099:	mov    rcx,rbx
  42309c:	call   0x40215c
  4230a1:	xor    eax,eax
  4230a3:	add    rsp,0x20
  4230a7:	pop    rbx
  4230a8:	ret    
  4230a9:	int3   
  4230aa:	int3   
  4230ab:	int3   
  4230ac:	mov    QWORD PTR [rsp+0x20],r9
  4230b1:	mov    QWORD PTR [rsp+0x18],r8
  4230b6:	push   rbx
  4230b7:	push   rbp
  4230b8:	push   rsi
  4230b9:	push   rdi
  4230ba:	push   r12
  4230bc:	push   r13
  4230be:	push   r14
  4230c0:	push   r15
  4230c2:	sub    rsp,0x158
  4230c9:	mov    QWORD PTR [rsp+0x140],0xfffffffffffffffe
  4230d5:	mov    r12,r9
  4230d8:	mov    rbx,rdx
  4230db:	mov    rsi,rcx
  4230de:	mov    r10d,DWORD PTR [rdx+0x8]
  4230e2:	dec    r10d
  4230e5:	mov    rax,QWORD PTR [rdx]
  4230e8:	mov    rbp,QWORD PTR [rax+r10*8]
  4230ec:	mov    QWORD PTR [rsp+0x1a8],rbp
  4230f4:	xor    eax,eax
  4230f6:	mov    r14,QWORD PTR [rsp+0x1e8]
  4230fe:	mov    QWORD PTR [r14],rax
  423101:	mov    r15,QWORD PTR [rbp+0x0]
  423105:	mov    QWORD PTR [rsp+0xa0],rax
  42310d:	mov    DWORD PTR [rsp+0xa8],eax
  423114:	mov    DWORD PTR [rsp+0xac],eax
  42311b:	mov    QWORD PTR [rsp+0x60],rax
  423120:	mov    DWORD PTR [rsp+0x68],eax
  423124:	mov    DWORD PTR [rsp+0x6c],eax
  423128:	mov    rdi,QWORD PTR [rsp+0x1c0]
  423130:	lea    rdx,[rdi+0x10]
  423134:	lea    rcx,[rsp+0x70]
  423139:	call   0x403208
  42313e:	nop
  42313f:	lea    rdx,[rbp+0xb0]
  423146:	lea    rcx,[rsp+0x90]
  42314e:	call   0x403208
  423153:	nop
  423154:	mov    r13d,0x1
  42315a:	cmp    DWORD PTR [rbx+0x8],r13d
  42315e:	jbe    0x42319c
  423160:	mov    rax,QWORD PTR [rbx]
  423163:	mov    rbx,QWORD PTR [rax]
  423166:	mov    ecx,DWORD PTR [rbx+0xc0]
  42316c:	mov    rax,QWORD PTR [rsi+0x40]
  423170:	mov    rcx,QWORD PTR [rax+rcx*8]
  423174:	lea    rdx,[rip+0x2ca99]        # 0x44fc14
  42317b:	mov    rcx,QWORD PTR [rcx+0x18]
  42317f:	call   0x402864
  423184:	test   al,al
  423186:	je     0x42319c
  423188:	lea    rdx,[rbx+0xb0]
  42318f:	lea    rcx,[rsp+0x90]
  423197:	call   0x4032f8
  42319c:	lea    rdx,[rip+0x2a54d]        # 0x44d6f0
  4231a3:	lea    rcx,[rsp+0xd8]
  4231ab:	call   0x4031c0
  4231b0:	nop
  4231b1:	lea    rdx,[rsp+0x90]
  4231b9:	lea    rcx,[rsp+0xc0]
  4231c1:	call   0x424c20
  4231c6:	nop
  4231c7:	mov    r8,rax
  4231ca:	lea    rdx,[rsp+0xd8]
  4231d2:	lea    rcx,[rsp+0x70]
  4231d7:	call   0x403a6c
  4231dc:	nop
  4231dd:	mov    rcx,QWORD PTR [rsp+0xc0]
  4231e5:	call   0x40215c
  4231ea:	nop
  4231eb:	mov    rcx,QWORD PTR [rsp+0xd8]
  4231f3:	call   0x40215c
  4231f8:	xor    ebx,ebx
  4231fa:	mov    sil,bl
  4231fd:	lea    rcx,[rsp+0x80]
  423205:	call   0x403150
  42320a:	nop
  42320b:	lea    rdx,[rsp+0x70]
  423210:	lea    rcx,[rsp+0xb0]
  423218:	call   0x403208
  42321d:	nop
  42321e:	cmp    BYTE PTR [rdi],bl
  423220:	je     0x4232bc
  423226:	cmp    DWORD PTR [rdi+0x4],0x3
  42322a:	je     0x4232bc
  423230:	lea    rcx,[rsp+0xd8]
  423238:	call   0x403150
  42323d:	nop
  42323e:	lea    r8,[rsp+0x80]
  423246:	lea    rdx,[rsp+0xd8]
  42324e:	lea    rcx,[rsp+0x70]
  423253:	call   0x404450
  423258:	mov    r11d,DWORD PTR [rsp+0x88]
  423260:	cmp    r11d,ebx
  423263:	je     0x4232af
  423265:	lea    ecx,[r11-0x1]
  423269:	mov    rdx,QWORD PTR [rsp+0x80]
  423271:	cmp    WORD PTR [rdx+rcx*2],0x5c
  423276:	je     0x42327f
  423278:	cmp    WORD PTR [rdx+rcx*2],0x2f
  42327d:	jne    0x423292
  42327f:	mov    DWORD PTR [rsp+0x88],ecx
  423286:	mov    WORD PTR [rdx+rcx*2],bx
  42328a:	mov    r11d,DWORD PTR [rsp+0x88]
  423292:	cmp    r11d,ebx
  423295:	je     0x4232af
  423297:	lea    rdx,[rsp+0xd8]
  42329f:	lea    rcx,[rsp+0xb0]
  4232a7:	call   0x4032f8
  4232ac:	mov    sil,r13b
  4232af:	mov    rcx,QWORD PTR [rsp+0xd8]
  4232b7:	call   0x40215c
  4232bc:	mov    rcx,r12
  4232bf:	call   0x404740
  4232c4:	mov    r12b,al
  4232c7:	cmp    BYTE PTR [rdi+0x30],bl
  4232ca:	jne    0x4236fd
  4232d0:	mov    r8,QWORD PTR [r15]
  4232d3:	lea    rdx,[rsp+0x1e8]
  4232db:	mov    rcx,r15
  4232de:	call   QWORD PTR [r8+0x28]
  4232e2:	mov    ebx,eax
  4232e4:	test   eax,eax
  4232e6:	je     0x423367
  4232e8:	mov    rcx,QWORD PTR [rsp+0xb0]
  4232f0:	call   0x40215c
  4232f5:	nop
  4232f6:	mov    rcx,QWORD PTR [rsp+0x80]
  4232fe:	call   0x40215c
  423303:	nop
  423304:	mov    rcx,QWORD PTR [rsp+0x90]
  42330c:	call   0x40215c
  423311:	nop
  423312:	mov    rcx,QWORD PTR [rsp+0x70]
  423317:	call   0x40215c
  42331c:	nop
  42331d:	movsxd rdi,DWORD PTR [rsp+0x68]
  423322:	mov    rsi,rdi
  423325:	test   edi,edi
  423327:	je     0x423357
  423329:	shl    rsi,0x3
  42332d:	add    edi,0xffffffff
  423330:	sub    rsi,0x8
  423334:	mov    rax,QWORD PTR [rsp+0x60]
  423339:	mov    rbp,QWORD PTR [rsi+rax*1]
  42333d:	test   rbp,rbp
  423340:	je     0x423353
  423342:	mov    rcx,QWORD PTR [rbp+0x0]
  423346:	call   0x40215c
  42334b:	mov    rcx,rbp
  42334e:	call   0x40215c
  423353:	test   edi,edi
  423355:	jne    0x42332d
  423357:	mov    rcx,QWORD PTR [rsp+0x60]
  42335c:	call   0x40215c
  423361:	nop
  423362:	jmp    0x423943
  423367:	lea    rcx,[rsp+0xf0]
  42336f:	call   0x403150
  423374:	nop
  423375:	xor    eax,eax
  423377:	mov    QWORD PTR [rsp+0x100],rax
  42337f:	mov    DWORD PTR [rsp+0x108],eax
  423386:	mov    DWORD PTR [rsp+0x10c],eax
  42338d:	lea    rcx,[rsp+0x110]
  423395:	call   0x403150
  42339a:	nop
  42339b:	lea    rcx,[rsp+0x120]
  4233a3:	call   0x403150
  4233a8:	xor    r8d,r8d
  4233ab:	mov    BYTE PTR [rsp+0x131],r8b
  4233b3:	mov    BYTE PTR [rsp+0x138],r8b
  4233bb:	mov    DWORD PTR [rsp+0x13c],0xffffffff
  4233c6:	mov    ebx,r8d
  4233c9:	cmp    DWORD PTR [rsp+0x1e8],r8d
  4233d1:	jbe    0x42362f
  4233d7:	cmp    sil,r8b
  4233da:	jne    0x423423
  4233dc:	cmp    r12b,r8b
  4233df:	je     0x423423
  4233e1:	mov    BYTE PTR [rsp+0x130],r8b
  4233e9:	cmp    BYTE PTR [rdi+0x26],r8b
  4233ed:	jne    0x42344b
  4233ef:	cmp    BYTE PTR [rbp+0x10c],r8b
  4233f6:	je     0x42344b
  4233f8:	lea    r8,[rsp+0x130]
  423400:	mov    edx,ebx
  423402:	mov    rcx,QWORD PTR [rbp+0x0]
  423406:	call   0x429824
  42340b:	mov    ebp,eax
  42340d:	xor    r8d,r8d
  423410:	cmp    eax,r8d
  423413:	jne    0x423509
  423419:	mov    rbp,QWORD PTR [rsp+0x1a8]
  423421:	jmp    0x42344b
  423423:	lea    r8,[rsp+0xf0]
  42342b:	mov    edx,ebx
  42342d:	mov    rcx,rbp
  423430:	call   0x42d1f4
  423435:	mov    ebp,eax
  423437:	xor    r8d,r8d
  42343a:	cmp    eax,r8d
  42343d:	jne    0x42359c
  423443:	mov    rbp,QWORD PTR [rsp+0x1a8]
  42344b:	cmp    BYTE PTR [rdi+0x26],r8b
  42344f:	jne    0x42345f
  423451:	cmp    BYTE PTR [rsp+0x130],r8b
  423459:	jne    0x4234f4
  42345f:	cmp    sil,r8b
  423462:	je     0x4234c0
  423464:	mov    rdx,QWORD PTR [rsp+0x80]
  42346c:	mov    rcx,QWORD PTR [rsp+0x110]
  423474:	call   0x4042cc
  423479:	xor    r8d,r8d
  42347c:	cmp    al,r8b
  42347f:	jne    0x423486
  423481:	mov    sil,r8b
  423484:	jmp    0x4234c0
  423486:	mov    ecx,DWORD PTR [rsp+0x88]
  42348d:	mov    rax,QWORD PTR [rsp+0x110]
  423495:	movzx  edx,WORD PTR [rax+rcx*2]
  423499:	cmp    dx,r8w
  42349d:	jne    0x4234ae
  42349f:	cmp    BYTE PTR [rsp+0x133],r8b
  4234a7:	jne    0x4234c0
  4234a9:	mov    sil,r8b
  4234ac:	jmp    0x4234c0
  4234ae:	cmp    dx,0x5c
  4234b2:	je     0x4234c0
  4234b4:	movzx  esi,sil
  4234b8:	cmp    dx,0x2f
  4234bc:	cmovne esi,r8d
  4234c0:	cmp    r12b,r8b
  4234c3:	jne    0x4234e2
  4234c5:	lea    rdx,[rsp+0xf0]
  4234cd:	mov    rcx,QWORD PTR [rsp+0x1b8]
  4234d5:	call   0x414d24
  4234da:	xor    r8d,r8d
  4234dd:	cmp    al,r8b
  4234e0:	je     0x4234f4
  4234e2:	mov    edx,ebx
  4234e4:	lea    rcx,[rsp+0xa0]
  4234ec:	call   0x4131dc
  4234f1:	xor    r8d,r8d
  4234f4:	add    ebx,r13d
  4234f7:	cmp    ebx,DWORD PTR [rsp+0x1e8]
  4234fe:	jb     0x4233d7
  423504:	jmp    0x42362f
  423509:	lea    rcx,[rsp+0xf0]
  423511:	call   0x413404
  423516:	nop
  423517:	mov    rcx,QWORD PTR [rsp+0xb0]
  42351f:	call   0x40215c
  423524:	nop
  423525:	mov    rcx,QWORD PTR [rsp+0x80]
  42352d:	call   0x40215c
  423532:	nop
  423533:	mov    rcx,QWORD PTR [rsp+0x90]
  42353b:	call   0x40215c
  423540:	nop
  423541:	mov    rcx,QWORD PTR [rsp+0x70]
  423546:	call   0x40215c
  42354b:	nop
  42354c:	movsxd rbx,DWORD PTR [rsp+0x68]
  423551:	mov    rdi,rbx
  423554:	xor    r12d,r12d
  423557:	cmp    ebx,r12d
  42355a:	je     0x42358a
  42355c:	shl    rdi,0x3
  423560:	add    ebx,0xffffffff
  423563:	sub    rdi,0x8
  423567:	mov    rax,QWORD PTR [rsp+0x60]
  42356c:	mov    rsi,QWORD PTR [rdi+rax*1]
  423570:	cmp    rsi,r12
  423573:	je     0x423585
  423575:	mov    rcx,QWORD PTR [rsi]
  423578:	call   0x40215c
  42357d:	mov    rcx,rsi
  423580:	call   0x40215c
  423585:	cmp    ebx,r12d
  423588:	jne    0x423560
  42358a:	mov    rcx,QWORD PTR [rsp+0x60]
  42358f:	call   0x40215c
  423594:	nop
  423595:	mov    ebx,ebp
  423597:	jmp    0x423943
  42359c:	lea    rcx,[rsp+0xf0]
  4235a4:	call   0x413404
  4235a9:	nop
  4235aa:	mov    rcx,QWORD PTR [rsp+0xb0]
  4235b2:	call   0x40215c
  4235b7:	nop
  4235b8:	mov    rcx,QWORD PTR [rsp+0x80]
  4235c0:	call   0x40215c
  4235c5:	nop
  4235c6:	mov    rcx,QWORD PTR [rsp+0x90]
  4235ce:	call   0x40215c
  4235d3:	nop
  4235d4:	mov    rcx,QWORD PTR [rsp+0x70]
  4235d9:	call   0x40215c
  4235de:	nop
  4235df:	movsxd rbx,DWORD PTR [rsp+0x68]
  4235e4:	mov    rdi,rbx
  4235e7:	xor    r12d,r12d
  4235ea:	cmp    ebx,r12d
  4235ed:	je     0x42361d
  4235ef:	shl    rdi,0x3
  4235f3:	add    ebx,0xffffffff
  4235f6:	sub    rdi,0x8
  4235fa:	mov    rax,QWORD PTR [rsp+0x60]
  4235ff:	mov    rsi,QWORD PTR [rdi+rax*1]
  423603:	cmp    rsi,r12
  423606:	je     0x423618
  423608:	mov    rcx,QWORD PTR [rsi]
  42360b:	call   0x40215c
  423610:	mov    rcx,rsi
  423613:	call   0x40215c
  423618:	cmp    ebx,r12d
  42361b:	jne    0x4235f3
  42361d:	mov    rcx,QWORD PTR [rsp+0x60]
  423622:	call   0x40215c
  423627:	nop
  423628:	mov    ebx,ebp
  42362a:	jmp    0x423943
  42362f:	xor    ebx,ebx
  423631:	cmp    DWORD PTR [rsp+0xa8],ebx
  423638:	jne    0x4236f0
  42363e:	mov    rbx,QWORD PTR [rsp+0x1d0]
  423646:	mov    rax,QWORD PTR [rbx]
  423649:	mov    rcx,rbx
  42364c:	call   QWORD PTR [rax+0x58]
  42364f:	mov    r11,QWORD PTR [rbx]
  423652:	xor    edx,edx
  423654:	mov    rcx,rbx
  423657:	call   QWORD PTR [r11+0x60]
  42365b:	mov    ebp,eax
  42365d:	lea    rcx,[rsp+0xf0]
  423665:	call   0x413404
  42366a:	nop
  42366b:	mov    rcx,QWORD PTR [rsp+0xb0]
  423673:	call   0x40215c
  423678:	nop
  423679:	mov    rcx,QWORD PTR [rsp+0x80]
  423681:	call   0x40215c
  423686:	nop
  423687:	mov    rcx,QWORD PTR [rsp+0x90]
  42368f:	call   0x40215c
  423694:	nop
  423695:	mov    rcx,QWORD PTR [rsp+0x70]
  42369a:	call   0x40215c
  42369f:	nop
  4236a0:	movsxd rbx,DWORD PTR [rsp+0x68]
  4236a5:	mov    rdi,rbx
  4236a8:	xor    r12d,r12d
  4236ab:	cmp    ebx,r12d
  4236ae:	je     0x4236de
  4236b0:	shl    rdi,0x3
  4236b4:	add    ebx,0xffffffff
  4236b7:	sub    rdi,0x8
  4236bb:	mov    rax,QWORD PTR [rsp+0x60]
  4236c0:	mov    rsi,QWORD PTR [rdi+rax*1]
  4236c4:	cmp    rsi,r12
  4236c7:	je     0x4236d9
  4236c9:	mov    rcx,QWORD PTR [rsi]
  4236cc:	call   0x40215c
  4236d1:	mov    rcx,rsi
  4236d4:	call   0x40215c
  4236d9:	cmp    ebx,r12d
  4236dc:	jne    0x4236b4
  4236de:	mov    rcx,QWORD PTR [rsp+0x60]
  4236e3:	call   0x40215c
  4236e8:	nop
  4236e9:	mov    ebx,ebp
  4236eb:	jmp    0x423943
  4236f0:	lea    rcx,[rsp+0xf0]
  4236f8:	call   0x413404
  4236fd:	cmp    sil,bl
  423700:	je     0x42373b
  423702:	mov    ecx,0x10
  423707:	call   0x402130
  42370c:	mov    QWORD PTR [rsp+0x1c0],rax
  423714:	cmp    rax,rbx
  423717:	je     0x42372b
  423719:	lea    rdx,[rsp+0x80]
  423721:	mov    rcx,rax
  423724:	call   0x403208
  423729:	jmp    0x42372e
  42372b:	mov    rax,rbx
  42372e:	mov    rdx,rax
  423731:	lea    rcx,[rsp+0x60]
  423736:	call   0x4010c8
  42373b:	cmp    DWORD PTR [rsp+0x78],ebx
  42373f:	jne    0x423757
  423741:	lea    rdx,[rip+0x2a230]        # 0x44d978
  423748:	lea    rcx,[rsp+0x70]
  42374d:	call   0x403290
  423752:	jmp    0x423827
  423757:	mov    rcx,QWORD PTR [rsp+0x70]
  42375c:	call   0x407360
  423761:	cmp    al,bl
  423763:	jne    0x423827
  423769:	call   QWORD PTR [rip+0x29a31]        # 0x44d1a0
  42376f:	mov    ebp,eax
  423771:	mov    eax,0x80004005
  423776:	cmp    ebp,ebx
  423778:	cmove  ebp,eax
  42377b:	lea    rdx,[rip+0x2c46e]        # 0x44fbf0
  423782:	mov    rcx,QWORD PTR [rsp+0x1e0]
  42378a:	call   0x4034e8
  42378f:	lea    rdx,[rsp+0x70]
  423794:	mov    rcx,QWORD PTR [rsp+0x1e0]
  42379c:	call   0x403444
  4237a1:	nop
  4237a2:	mov    rcx,QWORD PTR [rsp+0xb0]
  4237aa:	call   0x40215c
  4237af:	nop
  4237b0:	mov    rcx,QWORD PTR [rsp+0x80]
  4237b8:	call   0x40215c
  4237bd:	nop
  4237be:	mov    rcx,QWORD PTR [rsp+0x90]
  4237c6:	call   0x40215c
  4237cb:	nop
  4237cc:	mov    rcx,QWORD PTR [rsp+0x70]
  4237d1:	call   0x40215c
  4237d6:	nop
  4237d7:	movsxd rbx,DWORD PTR [rsp+0x68]
  4237dc:	mov    rdi,rbx
  4237df:	xor    r12d,r12d
  4237e2:	cmp    ebx,r12d
  4237e5:	je     0x423815
  4237e7:	shl    rdi,0x3
  4237eb:	add    ebx,0xffffffff
  4237ee:	sub    rdi,0x8
  4237f2:	mov    rax,QWORD PTR [rsp+0x60]
  4237f7:	mov    rsi,QWORD PTR [rdi+rax*1]
  4237fb:	cmp    rsi,r12
  4237fe:	je     0x423810
  423800:	mov    rcx,QWORD PTR [rsi]
  423803:	call   0x40215c
  423808:	mov    rcx,rsi
  42380b:	call   0x40215c
  423810:	cmp    ebx,r12d
  423813:	jne    0x4237eb
  423815:	mov    rcx,QWORD PTR [rsp+0x60]
  42381a:	call   0x40215c
  42381f:	nop
  423820:	mov    ebx,ebp
  423822:	jmp    0x423943
  423827:	mov    al,BYTE PTR [rdi+0x30]
  42382a:	neg    al
  42382c:	sbb    r8,r8
  42382f:	and    r8,QWORD PTR [rsp+0x1b8]
  423837:	lea    rdx,[rdi+0x20]
  42383b:	mov    rax,QWORD PTR [rsp+0x1b0]
  423843:	mov    QWORD PTR [rsp+0x50],rax
  423848:	mov    BYTE PTR [rsp+0x48],bl
  42384c:	lea    rax,[rsp+0x60]
  423851:	mov    QWORD PTR [rsp+0x40],rax
  423856:	lea    rax,[rsp+0x70]
  42385b:	mov    QWORD PTR [rsp+0x38],rax
  423860:	mov    al,BYTE PTR [rdi+0x33]
  423863:	mov    BYTE PTR [rsp+0x30],al
  423867:	mov    al,BYTE PTR [rdi+0x31]
  42386a:	mov    BYTE PTR [rsp+0x28],al
  42386e:	mov    r12,QWORD PTR [rsp+0x1d0]
  423876:	mov    QWORD PTR [rsp+0x20],r12
  42387b:	mov    r9,rbp
  42387e:	mov    rsi,QWORD PTR [rsp+0x1d8]
  423886:	mov    rcx,rsi
  423889:	call   0x414850
  42388e:	cmp    BYTE PTR [rdi+0x30],bl
  423891:	jne    0x423957
  423897:	cmp    BYTE PTR [rdi+0x33],bl
  42389a:	jne    0x423957
  4238a0:	cmp    BYTE PTR [rdi+0x24],bl
  4238a3:	je     0x423957
  4238a9:	lea    rdx,[rsp+0xa0]
  4238b1:	mov    rcx,rsi
  4238b4:	call   0x413bec
  4238b9:	mov    ebp,eax
  4238bb:	cmp    eax,ebx
  4238bd:	je     0x423957
  4238c3:	mov    rcx,QWORD PTR [rsp+0xb0]
  4238cb:	call   0x40215c
  4238d0:	nop
  4238d1:	mov    rcx,QWORD PTR [rsp+0x80]
  4238d9:	call   0x40215c
  4238de:	nop
  4238df:	mov    rcx,QWORD PTR [rsp+0x90]
  4238e7:	call   0x40215c
  4238ec:	nop
  4238ed:	mov    rcx,QWORD PTR [rsp+0x70]
  4238f2:	call   0x40215c
  4238f7:	nop
  4238f8:	movsxd rbx,DWORD PTR [rsp+0x68]
  4238fd:	mov    rdi,rbx
  423900:	xor    r12d,r12d
  423903:	cmp    ebx,r12d
  423906:	je     0x423936
  423908:	shl    rdi,0x3
  42390c:	add    ebx,0xffffffff
  42390f:	sub    rdi,0x8
  423913:	mov    rax,QWORD PTR [rsp+0x60]
  423918:	mov    rsi,QWORD PTR [rdi+rax*1]
  42391c:	cmp    rsi,r12
  42391f:	je     0x423931
  423921:	mov    rcx,QWORD PTR [rsi]
  423924:	call   0x40215c
  423929:	mov    rcx,rsi
  42392c:	call   0x40215c
  423931:	cmp    ebx,r12d
  423934:	jne    0x42390c
  423936:	mov    rcx,QWORD PTR [rsp+0x60]
  42393b:	call   0x40215c
  423940:	nop
  423941:	mov    ebx,ebp
  423943:	mov    rcx,QWORD PTR [rsp+0xa0]
  42394b:	call   0x40215c
  423950:	mov    eax,ebx
  423952:	jmp    0x423b16
  423957:	cmp    BYTE PTR [rdi+0x33],bl
  42395a:	je     0x423965
  42395c:	cmp    BYTE PTR [rsp+0x1c8],bl
  423963:	je     0x423968
  423965:	mov    r13d,ebx
  423968:	cmp    BYTE PTR [rdi+0x30],bl
  42396b:	je     0x423a43
  423971:	mov    rax,QWORD PTR [r15]
  423974:	mov    QWORD PTR [rsp+0x20],rsi
  423979:	mov    r9d,r13d
  42397c:	xor    edx,edx
  42397e:	mov    r8d,0xffffffff
  423984:	mov    rcx,r15
  423987:	call   QWORD PTR [rax+0x38]
  42398a:	mov    ebx,eax
  42398c:	xor    r13d,r13d
  42398f:	mov    WORD PTR [rsp+0xc0],r13w
  423998:	mov    WORD PTR [rsp+0xc2],r13w
  4239a1:	mov    QWORD PTR [rsp+0xc8],r13
  4239a9:	mov    r9,QWORD PTR [r15]
  4239ac:	lea    r8,[rsp+0xc0]
  4239b4:	lea    edx,[r13+0x2c]
  4239b8:	mov    rcx,r15
  4239bb:	call   QWORD PTR [r9+0x40]
  4239bf:	cmp    eax,r13d
  4239c2:	jne    0x423a34
  4239c4:	movzx  ecx,WORD PTR [rsp+0xc0]
  4239cc:	cmp    ecx,r13d
  4239cf:	je     0x423a34
  4239d1:	sub    ecx,0x11
  4239d4:	je     0x423a29
  4239d6:	dec    ecx
  4239d8:	je     0x423a1c
  4239da:	dec    ecx
  4239dc:	je     0x423a10
  4239de:	cmp    ecx,0x2
  4239e1:	je     0x423a03
  4239e3:	mov    DWORD PTR [rsp+0x1e8],0x24e9f
  4239ee:	lea    rdx,[rip+0x436db]        # 0x4670d0
  4239f5:	lea    rcx,[rsp+0x1e8]
  4239fd:	call   0x44b71e
  423a02:	int3   
  423a03:	mov    rax,QWORD PTR [rsp+0xc8]
  423a0b:	mov    QWORD PTR [r14],rax
  423a0e:	jmp    0x423a34
  423a10:	mov    eax,DWORD PTR [rsp+0xc8]
  423a17:	mov    QWORD PTR [r14],rax
  423a1a:	jmp    0x423a34
  423a1c:	movzx  eax,WORD PTR [rsp+0xc8]
  423a24:	mov    QWORD PTR [r14],rax
  423a27:	jmp    0x423a34
  423a29:	movzx  eax,BYTE PTR [rsp+0xc8]
  423a31:	mov    QWORD PTR [r14],rax
  423a34:	lea    rcx,[rsp+0xc0]
  423a3c:	call   0x40b028
  423a41:	jmp    0x423a69
  423a43:	mov    rax,QWORD PTR [r15]
  423a46:	mov    QWORD PTR [rsp+0x20],rsi
  423a4b:	mov    r9d,r13d
  423a4e:	mov    r8d,DWORD PTR [rsp+0xa8]
  423a56:	mov    rdx,QWORD PTR [rsp+0xa0]
  423a5e:	mov    rcx,r15
  423a61:	call   QWORD PTR [rax+0x38]
  423a64:	mov    ebx,eax
  423a66:	xor    r13d,r13d
  423a69:	cmp    ebx,r13d
  423a6c:	jne    0x423a7e
  423a6e:	cmp    BYTE PTR [rdi+0x30],r13b
  423a72:	jne    0x423a7e
  423a74:	mov    rcx,rsi
  423a77:	call   0x4172e0
  423a7c:	mov    ebx,eax
  423a7e:	mov    rax,QWORD PTR [r12]
  423a82:	mov    edx,ebx
  423a84:	mov    rcx,r12
  423a87:	call   QWORD PTR [rax+0x60]
  423a8a:	mov    ebp,eax
  423a8c:	mov    rcx,QWORD PTR [rsp+0xb0]
  423a94:	call   0x40215c
  423a99:	nop
  423a9a:	mov    rcx,QWORD PTR [rsp+0x80]
  423aa2:	call   0x40215c
  423aa7:	nop
  423aa8:	mov    rcx,QWORD PTR [rsp+0x90]
  423ab0:	call   0x40215c
  423ab5:	nop
  423ab6:	mov    rcx,QWORD PTR [rsp+0x70]
  423abb:	call   0x40215c
  423ac0:	nop
  423ac1:	movsxd rbx,DWORD PTR [rsp+0x68]
  423ac6:	mov    rdi,rbx
  423ac9:	cmp    ebx,r13d
  423acc:	je     0x423afc
  423ace:	shl    rdi,0x3
  423ad2:	add    ebx,0xffffffff
  423ad5:	sub    rdi,0x8
  423ad9:	mov    rax,QWORD PTR [rsp+0x60]
  423ade:	mov    rsi,QWORD PTR [rdi+rax*1]
  423ae2:	cmp    rsi,r13
  423ae5:	je     0x423af7
  423ae7:	mov    rcx,QWORD PTR [rsi]
  423aea:	call   0x40215c
  423aef:	mov    rcx,rsi
  423af2:	call   0x40215c
  423af7:	cmp    ebx,r13d
  423afa:	jne    0x423ad2
  423afc:	mov    rcx,QWORD PTR [rsp+0x60]
  423b01:	call   0x40215c
  423b06:	nop
  423b07:	mov    rcx,QWORD PTR [rsp+0xa0]
  423b0f:	call   0x40215c
  423b14:	mov    eax,ebp
  423b16:	add    rsp,0x158
  423b1d:	pop    r15
  423b1f:	pop    r14
  423b21:	pop    r13
  423b23:	pop    r12
  423b25:	pop    rdi
  423b26:	pop    rsi
  423b27:	pop    rbp
  423b28:	pop    rbx
  423b29:	ret    
  423b2a:	int3   
  423b2b:	int3   
  423b2c:	rex.W push rbp
  423b2e:	sub    rsp,0x20
  423b32:	mov    rbp,rdx
  423b35:	lea    rcx,[rbp+0xa0]
  423b3c:	call   0x401000
  423b41:	add    rsp,0x20
  423b45:	pop    rbp
  423b46:	ret    
  423b47:	int3   
  423b48:	int3   
  423b49:	int3   
  423b4a:	int3   
  423b4b:	int3   
  423b4c:	rex.W push rbp
  423b4e:	sub    rsp,0x20
  423b52:	mov    rbp,rdx
  423b55:	lea    rcx,[rbp+0x60]
  423b59:	call   0x4047cc
  423b5e:	add    rsp,0x20
  423b62:	pop    rbp
  423b63:	ret    
  423b64:	int3   
  423b65:	int3   
  423b66:	int3   
  423b67:	int3   
  423b68:	int3   
  423b69:	int3   
  423b6a:	int3   
  423b6b:	int3   
  423b6c:	rex.W push rbp
  423b6e:	sub    rsp,0x20
  423b72:	mov    rbp,rdx
  423b75:	lea    rcx,[rbp+0x70]
  423b79:	call   0x401000
  423b7e:	add    rsp,0x20
  423b82:	pop    rbp
  423b83:	ret    
  423b84:	int3   
  423b85:	int3   
  423b86:	int3   
  423b87:	int3   
  423b88:	int3   
  423b89:	int3   
  423b8a:	int3   
  423b8b:	int3   
  423b8c:	rex.W push rbp
  423b8e:	sub    rsp,0x20
  423b92:	mov    rbp,rdx
  423b95:	lea    rcx,[rbp+0x90]
  423b9c:	call   0x401000
  423ba1:	add    rsp,0x20
  423ba5:	pop    rbp
  423ba6:	ret    
  423ba7:	int3   
  423ba8:	int3   
  423ba9:	int3   
  423baa:	int3   
  423bab:	int3   
  423bac:	rex.W push rbp
  423bae:	sub    rsp,0x20
  423bb2:	mov    rbp,rdx
  423bb5:	lea    rcx,[rbp+0xd8]
  423bbc:	call   0x401000
  423bc1:	add    rsp,0x20
  423bc5:	pop    rbp
  423bc6:	ret    
  423bc7:	int3   
  423bc8:	int3   
  423bc9:	int3   
  423bca:	int3   
  423bcb:	int3   
  423bcc:	rex.W push rbp
  423bce:	sub    rsp,0x20
  423bd2:	mov    rbp,rdx
  423bd5:	lea    rcx,[rbp+0xc0]
  423bdc:	call   0x401000
  423be1:	add    rsp,0x20
  423be5:	pop    rbp
  423be6:	ret    
  423be7:	int3   
  423be8:	int3   
  423be9:	int3   
  423bea:	int3   
  423beb:	int3   
  423bec:	rex.W push rbp
  423bee:	sub    rsp,0x20
  423bf2:	mov    rbp,rdx
  423bf5:	lea    rcx,[rbp+0x80]
  423bfc:	call   0x401000
  423c01:	add    rsp,0x20
  423c05:	pop    rbp
  423c06:	ret    
  423c07:	int3   
  423c08:	int3   
  423c09:	int3   
  423c0a:	int3   
  423c0b:	int3   
  423c0c:	rex.W push rbp
  423c0e:	sub    rsp,0x20
  423c12:	mov    rbp,rdx
  423c15:	lea    rcx,[rbp+0xb0]
  423c1c:	call   0x401000
  423c21:	add    rsp,0x20
  423c25:	pop    rbp
  423c26:	ret    
  423c27:	int3   
  423c28:	int3   
  423c29:	int3   
  423c2a:	int3   
  423c2b:	int3   
  423c2c:	rex.W push rbp
  423c2e:	sub    rsp,0x20
  423c32:	mov    rbp,rdx
  423c35:	lea    rcx,[rbp+0xd8]
  423c3c:	call   0x401000
  423c41:	add    rsp,0x20
  423c45:	pop    rbp
  423c46:	ret    
  423c47:	int3   
  423c48:	int3   
  423c49:	int3   
  423c4a:	int3   
  423c4b:	int3   
  423c4c:	rex.W push rbp
  423c4e:	sub    rsp,0x20
  423c52:	mov    rbp,rdx
  423c55:	lea    rcx,[rbp+0xf0]
  423c5c:	call   0x401000
  423c61:	add    rsp,0x20
  423c65:	pop    rbp
  423c66:	ret    
  423c67:	int3   
  423c68:	int3   
  423c69:	int3   
  423c6a:	int3   
  423c6b:	int3   
  423c6c:	rex.W push rbp
  423c6e:	sub    rsp,0x20
  423c72:	mov    rbp,rdx
  423c75:	lea    rcx,[rbp+0xf0]
  423c7c:	add    rcx,0x10
  423c80:	call   0x4047cc
  423c85:	add    rsp,0x20
  423c89:	pop    rbp
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	rex.W push rbp
  423c8e:	sub    rsp,0x20
  423c92:	mov    rbp,rdx
  423c95:	lea    rcx,[rbp+0xf0]
  423c9c:	add    rcx,0x20
  423ca0:	call   0x401000
  423ca5:	add    rsp,0x20
  423ca9:	pop    rbp
  423caa:	ret    
  423cab:	int3   
  423cac:	rex.W push rbp
  423cae:	sub    rsp,0x20
  423cb2:	mov    rbp,rdx
  423cb5:	lea    rcx,[rbp+0xf0]
  423cbc:	call   0x413404
  423cc1:	add    rsp,0x20
  423cc5:	pop    rbp
  423cc6:	ret    
  423cc7:	int3   
  423cc8:	int3   
  423cc9:	int3   
  423cca:	int3   
  423ccb:	int3   
  423ccc:	rex.W push rbp
  423cce:	sub    rsp,0x20
  423cd2:	mov    rbp,rdx
  423cd5:	mov    rcx,QWORD PTR [rbp+0x1c0]
  423cdc:	call   0x40215c
  423ce1:	add    rsp,0x20
  423ce5:	pop    rbp
  423ce6:	ret    
  423ce7:	int3   
  423ce8:	int3   
  423ce9:	int3   
  423cea:	int3   
  423ceb:	int3   
  423cec:	rex.W push rbp
  423cee:	sub    rsp,0x20
  423cf2:	mov    rbp,rdx
  423cf5:	lea    rcx,[rbp+0xc0]
  423cfc:	call   0x40b830
  423d01:	add    rsp,0x20
  423d05:	pop    rbp
  423d06:	ret    
  423d07:	int3   
  423d08:	mov    QWORD PTR [rsp+0x20],r9
  423d0d:	mov    QWORD PTR [rsp+0x18],r8
  423d12:	mov    QWORD PTR [rsp+0x10],rdx
  423d17:	mov    QWORD PTR [rsp+0x8],rcx
  423d1c:	push   rbx
  423d1d:	push   rbp
  423d1e:	push   rsi
  423d1f:	push   rdi
  423d20:	push   r12
  423d22:	push   r13
  423d24:	push   r14
  423d26:	push   r15
  423d28:	sub    rsp,0x248
  423d2f:	mov    QWORD PTR [rsp+0x1f8],0xfffffffffffffffe
  423d3b:	mov    rsi,r9
  423d3e:	mov    rbp,QWORD PTR [rsp+0x2e8]
  423d46:	xor    r14d,r14d
  423d49:	mov    QWORD PTR [rbp+0x30],r14
  423d4d:	mov    QWORD PTR [rbp+0x28],r14
  423d51:	mov    QWORD PTR [rbp+0x20],r14
  423d55:	mov    QWORD PTR [rbp+0x18],r14
  423d59:	mov    QWORD PTR [rbp+0x10],r14
  423d5d:	mov    QWORD PTR [rbp+0x8],r14
  423d61:	mov    QWORD PTR [rbp+0x0],r14
  423d65:	mov    r13,r14
  423d68:	mov    QWORD PTR [rsp+0x70],r14
  423d6d:	mov    QWORD PTR [rsp+0xd0],r14
  423d75:	mov    DWORD PTR [rsp+0xd8],r14d
  423d7d:	mov    DWORD PTR [rsp+0xdc],r14d
  423d85:	lea    eax,[r14+0x1]
  423d89:	mov    r12,QWORD PTR [rsp+0x2c0]
  423d91:	cmp    BYTE PTR [r12+0x30],r14b
  423d96:	je     0x423da1
  423d98:	mov    r15d,eax
  423d9b:	mov    DWORD PTR [rsp+0x78],eax
  423d9f:	jmp    0x423daa
  423da1:	mov    r15d,DWORD PTR [r9+0x8]
  423da5:	mov    DWORD PTR [rsp+0x78],r15d
  423daa:	mov    edi,r14d
  423dad:	cmp    r15d,r14d
  423db0:	jbe    0x423e9d
  423db6:	mov    rbx,r14
  423db9:	lea    rcx,[rsp+0x98]
  423dc1:	call   0x407fc0
  423dc6:	lea    rcx,[rsp+0xc0]
  423dce:	call   0x403150
  423dd3:	nop
  423dd4:	mov    rdx,r14
  423dd7:	mov    QWORD PTR [rsp+0x98],r14
  423ddf:	cmp    BYTE PTR [r12+0x30],r14b
  423de4:	jne    0x423e1d
  423de6:	mov    rax,QWORD PTR [rsi]
  423de9:	mov    rcx,QWORD PTR [rbx+rax*1]
  423ded:	mov    rdx,QWORD PTR [rcx]
  423df0:	lea    rcx,[rsp+0x98]
  423df8:	call   0x408134
  423dfd:	cmp    al,r14b
  423e00:	je     0x423e55
  423e02:	mov    eax,DWORD PTR [rsp+0xb8]
  423e09:	shr    eax,0x4
  423e0c:	mov    ecx,0x1
  423e11:	test   cl,al
  423e13:	jne    0x423e79
  423e15:	mov    rdx,QWORD PTR [rsp+0x98]
  423e1d:	lea    rcx,[rsp+0xd0]
  423e25:	call   0x4010c8
  423e2a:	add    r13,QWORD PTR [rsp+0x98]
  423e32:	mov    QWORD PTR [rsp+0x70],r13
  423e37:	mov    rcx,QWORD PTR [rsp+0xc0]
  423e3f:	call   0x40215c
  423e44:	inc    edi
  423e46:	add    rbx,0x8
  423e4a:	cmp    edi,r15d
  423e4d:	jb     0x423db9
  423e53:	jmp    0x423e9d
  423e55:	lea    rax,[rip+0x2bdf4]        # 0x44fc50
  423e5c:	mov    QWORD PTR [rsp+0x2c0],rax
  423e64:	lea    rdx,[rip+0x43285]        # 0x4670f0
  423e6b:	lea    rcx,[rsp+0x2c0]
  423e73:	call   0x44b71e
  423e78:	int3   
  423e79:	lea    rax,[rip+0x2bdb8]        # 0x44fc38
  423e80:	mov    QWORD PTR [rsp+0x2c0],rax
  423e88:	lea    rdx,[rip+0x43261]        # 0x4670f0
  423e8f:	lea    rcx,[rsp+0x2c0]
  423e97:	call   0x44b71e
  423e9c:	nop
  423e9d:	mov    edi,r15d
  423ea0:	mov    rbx,r14
  423ea3:	mov    QWORD PTR [rsp+0xe8],r14
  423eab:	cmp    rdi,r14
  423eae:	je     0x423ec3
  423eb0:	mov    rcx,rdi
  423eb3:	call   0x402130
  423eb8:	mov    rbx,rax
  423ebb:	mov    QWORD PTR [rsp+0xe8],rax
  423ec3:	cmp    r15d,r14d
  423ec6:	jbe    0x423ed5
  423ec8:	mov    r8,rdi
  423ecb:	xor    edx,edx
  423ecd:	mov    rcx,rbx
  423ed0:	call   0x44b780
  423ed5:	mov    ecx,0x258
  423eda:	call   0x402130
  423edf:	mov    QWORD PTR [rsp+0x88],rax
  423ee7:	cmp    rax,r14
  423eea:	je     0x423f01
  423eec:	mov    rcx,rax
  423eef:	call   0x413e28
  423ef4:	mov    rdi,rax
  423ef7:	mov    QWORD PTR [rsp+0xe0],rax
  423eff:	jmp    0x423f0c
  423f01:	mov    rdi,r14
  423f04:	mov    QWORD PTR [rsp+0xe0],r14
  423f0c:	mov    QWORD PTR [rsp+0x1f0],rdi
  423f14:	cmp    rdi,r14
  423f17:	je     0x423f23
  423f19:	mov    rax,QWORD PTR [rdi]
  423f1c:	mov    rcx,rdi
  423f1f:	call   QWORD PTR [rax+0x8]
  423f22:	nop
  423f23:	mov    eax,0x1
  423f28:	cmp    r15d,eax
  423f2b:	seta   sil
  423f2f:	mov    BYTE PTR [rsp+0x51],sil
  423f34:	mov    eax,DWORD PTR [r12+0x4]
  423f39:	mov    ecx,DWORD PTR [r12+0x8]
  423f3e:	mov    BYTE PTR [rdi+0x19a],sil
  423f45:	mov    DWORD PTR [rdi+0x90],eax
  423f4b:	mov    DWORD PTR [rdi+0x94],ecx
  423f51:	mov    QWORD PTR [rdi+0x210],r14
  423f58:	mov    QWORD PTR [rdi+0x208],r14
  423f5f:	mov    QWORD PTR [rdi+0x200],r14
  423f66:	mov    QWORD PTR [rdi+0x1f8],r14
  423f6d:	mov    QWORD PTR [rdi+0x1f0],r14
  423f74:	mov    rdx,QWORD PTR [rsp+0x2d8]
  423f7c:	mov    rcx,rdi
  423f7f:	call   0x422cb0
  423f84:	mov    r14,QWORD PTR [rsp+0x2d0]
  423f8c:	test   sil,sil
  423f8f:	je     0x423fbb
  423f91:	mov    rax,QWORD PTR [r14]
  423f94:	mov    rdx,r13
  423f97:	mov    rcx,r14
  423f9a:	call   QWORD PTR [rax+0x18]
  423f9d:	mov    esi,eax
  423f9f:	test   eax,eax
  423fa1:	je     0x423fbb
  423fa3:	mov    rdx,QWORD PTR [rdi]
  423fa6:	mov    rcx,rdi
  423fa9:	call   QWORD PTR [rdx+0x10]
  423fac:	nop
  423fad:	mov    rcx,rbx
  423fb0:	call   0x40215c
  423fb5:	nop
  423fb6:	jmp    0x424863
  423fbb:	xor    esi,esi
  423fbd:	mov    QWORD PTR [rsp+0x80],rsi
  423fc5:	mov    cl,sil
  423fc8:	mov    BYTE PTR [rsp+0x50],sil
  423fcd:	mov    eax,esi
  423fcf:	mov    DWORD PTR [rsp+0x68],eax
  423fd3:	cmp    r15d,esi
  423fd6:	jbe    0x424801
  423fdc:	mov    rcx,rsi
  423fdf:	mov    QWORD PTR [rsp+0x90],rsi
  423fe7:	lea    edx,[rsi+0x1]
  423fea:	cmp    BYTE PTR [rax+rbx*1],sil
  423fee:	jne    0x42451b
  423ff4:	mov    rax,QWORD PTR [rsp+0x2a8]
  423ffc:	mov    rax,QWORD PTR [rax]
  423fff:	mov    r13,QWORD PTR [rcx+rax*1]
  424003:	lea    rcx,[rsp+0x98]
  42400b:	call   0x407fc0
  424010:	lea    rcx,[rsp+0xc0]
  424018:	call   0x403150
  42401d:	nop
  42401e:	cmp    BYTE PTR [r12+0x30],sil
  424023:	je     0x424036
  424025:	mov    QWORD PTR [rsp+0x98],rsi
  42402d:	mov    DWORD PTR [rsp+0xb8],esi
  424034:	jmp    0x424067
  424036:	mov    rdx,QWORD PTR [r13+0x0]
  42403a:	lea    rcx,[rsp+0x98]
  424042:	call   0x408134
  424047:	cmp    al,sil
  42404a:	je     0x4247dd
  424050:	mov    eax,DWORD PTR [rsp+0xb8]
  424057:	shr    eax,0x4
  42405a:	mov    ecx,0x1
  42405f:	test   cl,al
  424061:	jne    0x4247dd
  424067:	mov    rax,QWORD PTR [r14]
  42406a:	mov    r8b,BYTE PTR [r12+0x33]
  42406f:	mov    rdx,QWORD PTR [r13+0x0]
  424073:	mov    rcx,r14
  424076:	call   QWORD PTR [rax+0x48]
  424079:	mov    esi,eax
  42407b:	test   eax,eax
  42407d:	jne    0x424543
  424083:	lea    rcx,[rsp+0xf0]
  42408b:	call   0x422e04
  424090:	nop
  424091:	mov    rdx,QWORD PTR [rsp+0x298]
  424099:	lea    rcx,[rsp+0x58]
  42409e:	call   0x422ba8
  4240a3:	nop
  4240a4:	lea    rcx,[rsp+0x170]
  4240ac:	call   0x4229a4
  4240b1:	nop
  4240b2:	lea    rax,[r12+0x38]
  4240b7:	mov    QWORD PTR [rsp+0x1c8],rax
  4240bf:	mov    rax,QWORD PTR [rsp+0x290]
  4240c7:	mov    QWORD PTR [rsp+0x170],rax
  4240cf:	lea    rax,[rsp+0x58]
  4240d4:	mov    QWORD PTR [rsp+0x198],rax
  4240dc:	mov    rax,QWORD PTR [rsp+0x2a0]
  4240e4:	mov    QWORD PTR [rsp+0x1a0],rax
  4240ec:	mov    al,BYTE PTR [r12+0x30]
  4240f1:	mov    BYTE PTR [rsp+0x1d0],al
  4240f8:	xor    r12d,r12d
  4240fb:	mov    QWORD PTR [rsp+0x1a8],r12
  424103:	mov    rdx,r13
  424106:	lea    rcx,[rsp+0x1d8]
  42410e:	call   0x4032f8
  424113:	mov    r8,QWORD PTR [rsp+0x2c8]
  42411b:	lea    rdx,[rsp+0x170]
  424123:	lea    rcx,[rsp+0xf0]
  42412b:	call   0x433188
  424130:	mov    esi,eax
  424132:	cmp    eax,0x80004004
  424137:	je     0x424569
  42413d:	cmp    eax,r12d
  424140:	jne    0x424152
  424142:	cmp    DWORD PTR [rsp+0x13c],r12d
  42414a:	lea    eax,[r12+0x1]
  42414f:	cmovge esi,eax
  424152:	mov    rax,QWORD PTR [r14]
  424155:	mov    DWORD PTR [rsp+0x20],esi
  424159:	mov    r9,QWORD PTR [r13+0x0]
  42415d:	lea    r8,[rsp+0xf0]
  424165:	mov    rdx,QWORD PTR [rsp+0x290]
  42416d:	mov    rcx,r14
  424170:	call   QWORD PTR [rax+0x50]
  424173:	mov    r12d,eax
  424176:	xor    r8d,r8d
  424179:	cmp    eax,r8d
  42417c:	jne    0x4245e6
  424182:	cmp    esi,r8d
  424185:	je     0x424285
  42418b:	lea    esi,[r8+0x1]
  42418f:	mov    BYTE PTR [rsp+0x50],sil
  424194:	mov    rax,QWORD PTR [rsp+0x2c0]
  42419c:	cmp    BYTE PTR [rax+0x30],r8b
  4241a0:	jne    0x424204
  4241a2:	lea    rcx,[rsp+0x200]
  4241aa:	call   0x407fc0
  4241af:	lea    rcx,[rsp+0x228]
  4241b7:	call   0x403150
  4241bc:	nop
  4241bd:	mov    rdx,QWORD PTR [r13+0x0]
  4241c1:	lea    rcx,[rsp+0x200]
  4241c9:	call   0x408134
  4241ce:	xor    r13d,r13d
  4241d1:	cmp    al,r13b
  4241d4:	je     0x4241f5
  4241d6:	mov    eax,DWORD PTR [rsp+0x220]
  4241dd:	shr    eax,0x4
  4241e0:	test   sil,al
  4241e3:	jne    0x4241f5
  4241e5:	mov    rax,QWORD PTR [rsp+0x200]
  4241ed:	add    QWORD PTR [rsp+0x80],rax
  4241f5:	mov    rcx,QWORD PTR [rsp+0x228]
  4241fd:	call   0x40215c
  424202:	jmp    0x424207
  424204:	xor    r13d,r13d
  424207:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42420f:	call   0x40215c
  424214:	nop
  424215:	movsxd rsi,DWORD PTR [rsp+0x60]
  42421a:	mov    r12,rsi
  42421d:	cmp    esi,r13d
  424220:	je     0x424240
  424222:	shl    r12,0x3
  424226:	add    esi,0xffffffff
  424229:	sub    r12,0x8
  42422d:	mov    rax,QWORD PTR [rsp+0x58]
  424232:	mov    rcx,QWORD PTR [r12+rax*1]
  424236:	call   0x40215c
  42423b:	cmp    esi,r13d
  42423e:	jne    0x424226
  424240:	mov    rcx,QWORD PTR [rsp+0x58]
  424245:	call   0x40215c
  42424a:	nop
  42424b:	lea    rcx,[rsp+0xf0]
  424253:	call   0x422f10
  424258:	nop
  424259:	mov    rcx,QWORD PTR [rsp+0xc0]
  424261:	call   0x40215c
  424266:	mov    r12,QWORD PTR [rsp+0x2c0]
  42426e:	mov    r13,QWORD PTR [rsp+0x70]
  424273:	mov    rcx,QWORD PTR [rsp+0x90]
  42427b:	xor    esi,esi
  42427d:	lea    edx,[rsi+0x1]
  424280:	jmp    0x42451b
  424285:	mov    rsi,QWORD PTR [rsp+0x2c0]
  42428d:	cmp    BYTE PTR [rsi+0x30],r8b
  424291:	jne    0x42436b
  424297:	mov    eax,DWORD PTR [rsp+0x108]
  42429e:	cmp    eax,r8d
  4242a1:	je     0x424372
  4242a7:	mov    r13,QWORD PTR [rsp+0x110]
  4242af:	mov    r12d,r8d
  4242b2:	cmp    eax,r8d
  4242b5:	jbe    0x424332
  4242b7:	xor    r15d,r15d
  4242ba:	mov    rsi,r15
  4242bd:	mov    ebp,DWORD PTR [rsp+0x68]
  4242c1:	mov    r14,QWORD PTR [rsp+0xd0]
  4242c9:	lea    edi,[r15+0x1]
  4242cd:	mov    rax,QWORD PTR [rsp+0x100]
  4242d5:	mov    rdx,QWORD PTR [rsi+rax*1]
  4242d9:	mov    rcx,QWORD PTR [rsp+0x2b0]
  4242e1:	call   0x422d34
  4242e6:	cmp    eax,r15d
  4242e9:	jl     0x4242f9
  4242eb:	cmp    eax,ebp
  4242ed:	jbe    0x4242f9
  4242ef:	mov    eax,eax
  4242f1:	mov    BYTE PTR [rbx+rax*1],dil
  4242f5:	sub    r13,QWORD PTR [r14+rax*8]
  4242f9:	add    r12d,edi
  4242fc:	add    rsi,0x8
  424300:	cmp    r12d,DWORD PTR [rsp+0x108]
  424308:	jb     0x4242cd
  42430a:	mov    rdi,QWORD PTR [rsp+0xe0]
  424312:	mov    rbp,QWORD PTR [rsp+0x2e8]
  42431a:	mov    r14,QWORD PTR [rsp+0x2d0]
  424322:	mov    r15d,DWORD PTR [rsp+0x78]
  424327:	mov    rsi,QWORD PTR [rsp+0x2c0]
  42432f:	xor    r8d,r8d
  424332:	cmp    r13,r8
  424335:	je     0x424379
  424337:	mov    rax,QWORD PTR [rsp+0x70]
  42433c:	add    rax,r13
  42433f:	mov    r13,rax
  424342:	cmp    rax,r8
  424345:	cmovl  r13,r8
  424349:	mov    QWORD PTR [rsp+0x70],r13
  42434e:	mov    rax,QWORD PTR [r14]
  424351:	mov    rdx,r13
  424354:	mov    rcx,r14
  424357:	call   QWORD PTR [rax+0x18]
  42435a:	mov    r12d,eax
  42435d:	xor    r8d,r8d
  424360:	cmp    eax,r8d
  424363:	jne    0x424664
  424369:	jmp    0x42437e
  42436b:	mov    r13,QWORD PTR [rsp+0x70]
  424370:	jmp    0x42437e
  424372:	mov    r13,QWORD PTR [rsp+0x70]
  424377:	jmp    0x42437e
  424379:	mov    r13,QWORD PTR [rsp+0x70]
  42437e:	mov    ecx,DWORD PTR [rsp+0xf8]
  424385:	dec    ecx
  424387:	mov    rax,QWORD PTR [rsp+0xf0]
  42438f:	mov    rdx,QWORD PTR [rax+rcx*8]
  424393:	cmp    BYTE PTR [rsi+0x30],r8b
  424397:	jne    0x4243aa
  424399:	cmp    BYTE PTR [rsp+0xbd],r8b
  4243a1:	jne    0x4243aa
  4243a3:	mov    eax,0x1
  4243a8:	jmp    0x4243ad
  4243aa:	mov    eax,r8d
  4243ad:	mov    BYTE PTR [rdx+0xd0],al
  4243b3:	mov    rax,QWORD PTR [rsp+0xb0]
  4243bb:	mov    QWORD PTR [rdx+0xc8],rax
  4243c2:	cmp    QWORD PTR [rsp+0x2d8],r8
  4243ca:	setne  dl
  4243cd:	mov    rcx,QWORD PTR [rsp+0x98]
  4243d5:	mov    r8,QWORD PTR [rsp+0x110]
  4243dd:	add    r8,rcx
  4243e0:	lea    rax,[rsp+0x88]
  4243e8:	mov    QWORD PTR [rsp+0x48],rax
  4243ed:	mov    rax,QWORD PTR [rsp+0x2e0]
  4243f5:	mov    QWORD PTR [rsp+0x40],rax
  4243fa:	mov    QWORD PTR [rsp+0x38],rdi
  4243ff:	mov    QWORD PTR [rsp+0x30],r14
  424404:	mov    BYTE PTR [rsp+0x28],dl
  424408:	mov    QWORD PTR [rsp+0x20],rsi
  42440d:	mov    r9,QWORD PTR [rsp+0x2b8]
  424415:	lea    rdx,[rsp+0xf0]
  42441d:	mov    rcx,QWORD PTR [rsp+0x290]
  424425:	call   0x4230ac
  42442a:	mov    r12d,eax
  42442d:	xor    eax,eax
  42442f:	cmp    r12d,eax
  424432:	jne    0x4246e2
  424438:	xor    r12d,r12d
  42443b:	cmp    BYTE PTR [rsi+0x30],r12b
  42443f:	jne    0x42445e
  424441:	mov    rcx,QWORD PTR [rsp+0x98]
  424449:	mov    rdx,QWORD PTR [rsp+0x110]
  424451:	add    rdx,rcx
  424454:	mov    QWORD PTR [rsp+0x88],rdx
  42445c:	jmp    0x424466
  42445e:	mov    rdx,QWORD PTR [rsp+0x88]
  424466:	add    QWORD PTR [rsp+0x80],rdx
  42446e:	mov    rax,QWORD PTR [rdi+0x1e8]
  424475:	add    QWORD PTR [rax+0x30],rdx
  424479:	mov    rcx,QWORD PTR [rdi+0x1e8]
  424480:	mov    rax,QWORD PTR [rdi+0x208]
  424487:	mov    QWORD PTR [rcx+0x38],rax
  42448b:	mov    rax,QWORD PTR [rsp+0x2e0]
  424493:	cmp    DWORD PTR [rax+0x8],r12d
  424497:	jne    0x424760
  42449d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  4244a5:	call   0x40215c
  4244aa:	nop
  4244ab:	movsxd rsi,DWORD PTR [rsp+0x60]
  4244b0:	mov    r12,rsi
  4244b3:	xor    eax,eax
  4244b5:	cmp    esi,eax
  4244b7:	je     0x4244e0
  4244b9:	shl    r12,0x3
  4244bd:	xor    ebp,ebp
  4244bf:	add    esi,0xffffffff
  4244c2:	sub    r12,0x8
  4244c6:	mov    rax,QWORD PTR [rsp+0x58]
  4244cb:	mov    rcx,QWORD PTR [r12+rax*1]
  4244cf:	call   0x40215c
  4244d4:	cmp    esi,ebp
  4244d6:	jne    0x4244bf
  4244d8:	mov    rbp,QWORD PTR [rsp+0x2e8]
  4244e0:	mov    rcx,QWORD PTR [rsp+0x58]
  4244e5:	call   0x40215c
  4244ea:	nop
  4244eb:	lea    rcx,[rsp+0xf0]
  4244f3:	call   0x422f10
  4244f8:	nop
  4244f9:	mov    rcx,QWORD PTR [rsp+0xc0]
  424501:	call   0x40215c
  424506:	mov    r12,QWORD PTR [rsp+0x2c0]
  42450e:	mov    rcx,QWORD PTR [rsp+0x90]
  424516:	xor    esi,esi
  424518:	lea    edx,[rsi+0x1]
  42451b:	mov    eax,DWORD PTR [rsp+0x68]
  42451f:	add    eax,edx
  424521:	mov    DWORD PTR [rsp+0x68],eax
  424525:	add    rcx,0x8
  424529:	mov    QWORD PTR [rsp+0x90],rcx
  424531:	cmp    eax,r15d
  424534:	jb     0x423fea
  42453a:	mov    cl,BYTE PTR [rsp+0x50]
  42453e:	jmp    0x424801
  424543:	mov    rcx,QWORD PTR [rsp+0xc0]
  42454b:	call   0x40215c
  424550:	nop
  424551:	mov    rax,QWORD PTR [rdi]
  424554:	mov    rcx,rdi
  424557:	call   QWORD PTR [rax+0x10]
  42455a:	nop
  42455b:	mov    rcx,rbx
  42455e:	call   0x40215c
  424563:	nop
  424564:	jmp    0x424863
  424569:	mov    rcx,QWORD PTR [rsp+0x1d8]
  424571:	call   0x40215c
  424576:	nop
  424577:	movsxd rsi,DWORD PTR [rsp+0x60]
  42457c:	mov    rbp,rsi
  42457f:	cmp    esi,r12d
  424582:	je     0x4245a2
  424584:	shl    rbp,0x3
  424588:	add    esi,0xffffffff
  42458b:	sub    rbp,0x8
  42458f:	mov    rax,QWORD PTR [rsp+0x58]
  424594:	mov    rcx,QWORD PTR [rax+rbp*1]
  424598:	call   0x40215c
  42459d:	cmp    esi,r12d
  4245a0:	jne    0x424588
  4245a2:	mov    rcx,QWORD PTR [rsp+0x58]
  4245a7:	call   0x40215c
  4245ac:	nop
  4245ad:	lea    rcx,[rsp+0xf0]
  4245b5:	call   0x422f10
  4245ba:	nop
  4245bb:	mov    rcx,QWORD PTR [rsp+0xc0]
  4245c3:	call   0x40215c
  4245c8:	nop
  4245c9:	mov    rax,QWORD PTR [rdi]
  4245cc:	mov    rcx,rdi
  4245cf:	call   QWORD PTR [rax+0x10]
  4245d2:	nop
  4245d3:	mov    rcx,rbx
  4245d6:	call   0x40215c
  4245db:	nop
  4245dc:	mov    esi,0x80004004
  4245e1:	jmp    0x424863
  4245e6:	mov    rcx,QWORD PTR [rsp+0x1d8]
  4245ee:	call   0x40215c
  4245f3:	nop
  4245f4:	movsxd rsi,DWORD PTR [rsp+0x60]
  4245f9:	mov    rbp,rsi
  4245fc:	xor    r13d,r13d
  4245ff:	cmp    esi,r13d
  424602:	je     0x424622
  424604:	shl    rbp,0x3
  424608:	add    esi,0xffffffff
  42460b:	sub    rbp,0x8
  42460f:	mov    rax,QWORD PTR [rsp+0x58]
  424614:	mov    rcx,QWORD PTR [rax+rbp*1]
  424618:	call   0x40215c
  42461d:	cmp    esi,r13d
  424620:	jne    0x424608
  424622:	mov    rcx,QWORD PTR [rsp+0x58]
  424627:	call   0x40215c
  42462c:	nop
  42462d:	lea    rcx,[rsp+0xf0]
  424635:	call   0x422f10
  42463a:	nop
  42463b:	mov    rcx,QWORD PTR [rsp+0xc0]
  424643:	call   0x40215c
  424648:	nop
  424649:	mov    rax,QWORD PTR [rdi]
  42464c:	mov    rcx,rdi
  42464f:	call   QWORD PTR [rax+0x10]
  424652:	nop
  424653:	mov    rcx,rbx
  424656:	call   0x40215c
  42465b:	nop
  42465c:	mov    esi,r12d
  42465f:	jmp    0x424863
  424664:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42466c:	call   0x40215c
  424671:	nop
  424672:	movsxd rsi,DWORD PTR [rsp+0x60]
  424677:	mov    rbp,rsi
  42467a:	xor    r13d,r13d
  42467d:	cmp    esi,r13d
  424680:	je     0x4246a0
  424682:	shl    rbp,0x3
  424686:	add    esi,0xffffffff
  424689:	sub    rbp,0x8
  42468d:	mov    rax,QWORD PTR [rsp+0x58]
  424692:	mov    rcx,QWORD PTR [rax+rbp*1]
  424696:	call   0x40215c
  42469b:	cmp    esi,r13d
  42469e:	jne    0x424686
  4246a0:	mov    rcx,QWORD PTR [rsp+0x58]
  4246a5:	call   0x40215c
  4246aa:	nop
  4246ab:	lea    rcx,[rsp+0xf0]
  4246b3:	call   0x422f10
  4246b8:	nop
  4246b9:	mov    rcx,QWORD PTR [rsp+0xc0]
  4246c1:	call   0x40215c
  4246c6:	nop
  4246c7:	mov    rax,QWORD PTR [rdi]
  4246ca:	mov    rcx,rdi
  4246cd:	call   QWORD PTR [rax+0x10]
  4246d0:	nop
  4246d1:	mov    rcx,rbx
  4246d4:	call   0x40215c
  4246d9:	nop
  4246da:	mov    esi,r12d
  4246dd:	jmp    0x424863
  4246e2:	mov    rcx,QWORD PTR [rsp+0x1d8]
  4246ea:	call   0x40215c
  4246ef:	nop
  4246f0:	movsxd rsi,DWORD PTR [rsp+0x60]
  4246f5:	mov    rbp,rsi
  4246f8:	xor    r13d,r13d
  4246fb:	cmp    esi,r13d
  4246fe:	je     0x42471e
  424700:	shl    rbp,0x3
  424704:	add    esi,0xffffffff
  424707:	sub    rbp,0x8
  42470b:	mov    rax,QWORD PTR [rsp+0x58]
  424710:	mov    rcx,QWORD PTR [rax+rbp*1]
  424714:	call   0x40215c
  424719:	cmp    esi,r13d
  42471c:	jne    0x424704
  42471e:	mov    rcx,QWORD PTR [rsp+0x58]
  424723:	call   0x40215c
  424728:	nop
  424729:	lea    rcx,[rsp+0xf0]
  424731:	call   0x422f10
  424736:	nop
  424737:	mov    rcx,QWORD PTR [rsp+0xc0]
  42473f:	call   0x40215c
  424744:	nop
  424745:	mov    rax,QWORD PTR [rdi]
  424748:	mov    rcx,rdi
  42474b:	call   QWORD PTR [rax+0x10]
  42474e:	nop
  42474f:	mov    rcx,rbx
  424752:	call   0x40215c
  424757:	nop
  424758:	mov    esi,r12d
  42475b:	jmp    0x424863
  424760:	mov    rcx,QWORD PTR [rsp+0x1d8]
  424768:	call   0x40215c
  42476d:	nop
  42476e:	movsxd rsi,DWORD PTR [rsp+0x60]
  424773:	mov    rbp,rsi
  424776:	cmp    esi,r12d
  424779:	je     0x424799
  42477b:	shl    rbp,0x3
  42477f:	add    esi,0xffffffff
  424782:	sub    rbp,0x8
  424786:	mov    rax,QWORD PTR [rsp+0x58]
  42478b:	mov    rcx,QWORD PTR [rax+rbp*1]
  42478f:	call   0x40215c
  424794:	cmp    esi,r12d
  424797:	jne    0x42477f
  424799:	mov    rcx,QWORD PTR [rsp+0x58]
  42479e:	call   0x40215c
  4247a3:	nop
  4247a4:	lea    rcx,[rsp+0xf0]
  4247ac:	call   0x422f10
  4247b1:	nop
  4247b2:	mov    rcx,QWORD PTR [rsp+0xc0]
  4247ba:	call   0x40215c
  4247bf:	nop
  4247c0:	mov    rax,QWORD PTR [rdi]
  4247c3:	mov    rcx,rdi
  4247c6:	call   QWORD PTR [rax+0x10]
  4247c9:	nop
  4247ca:	mov    rcx,rbx
  4247cd:	call   0x40215c
  4247d2:	nop
  4247d3:	mov    esi,0x80004005
  4247d8:	jmp    0x424863
  4247dd:	lea    rax,[rip+0x2b46c]        # 0x44fc50
  4247e4:	mov    QWORD PTR [rsp+0x2c0],rax
  4247ec:	lea    rdx,[rip+0x428fd]        # 0x4670f0
  4247f3:	lea    rcx,[rsp+0x2c0]
  4247fb:	call   0x44b71e
  424800:	nop
  424801:	cmp    BYTE PTR [rsp+0x51],sil
  424806:	jne    0x42480d
  424808:	cmp    cl,sil
  42480b:	je     0x424874
  42480d:	mov    rax,QWORD PTR [r14]
  424810:	mov    rdx,r13
  424813:	mov    rcx,r14
  424816:	call   QWORD PTR [rax+0x18]
  424819:	mov    esi,eax
  42481b:	xor    r12d,r12d
  42481e:	cmp    eax,r12d
  424821:	je     0x424838
  424823:	mov    rdx,QWORD PTR [rdi]
  424826:	mov    rcx,rdi
  424829:	call   QWORD PTR [rdx+0x10]
  42482c:	nop
  42482d:	mov    rcx,rbx
  424830:	call   0x40215c
  424835:	nop
  424836:	jmp    0x424863
  424838:	mov    rax,QWORD PTR [r14]
  42483b:	lea    rdx,[rsp+0x80]
  424843:	mov    rcx,r14
  424846:	call   QWORD PTR [rax+0x20]
  424849:	mov    esi,eax
  42484b:	cmp    eax,r12d
  42484e:	je     0x424874
  424850:	mov    rdx,QWORD PTR [rdi]
  424853:	mov    rcx,rdi
  424856:	call   QWORD PTR [rdx+0x10]
  424859:	nop
  42485a:	mov    rcx,rbx
  42485d:	call   0x40215c
  424862:	nop
  424863:	mov    rcx,QWORD PTR [rsp+0xd0]
  42486b:	call   0x40215c
  424870:	mov    eax,esi
  424872:	jmp    0x4248eb
  424874:	mov    rax,QWORD PTR [rdi+0x1f0]
  42487b:	mov    QWORD PTR [rbp+0x20],rax
  42487f:	mov    rax,QWORD PTR [rdi+0x1f8]
  424886:	mov    QWORD PTR [rbp+0x28],rax
  42488a:	mov    rax,QWORD PTR [rdi+0x200]
  424891:	mov    QWORD PTR [rbp+0x30],rax
  424895:	mov    rax,QWORD PTR [rdi+0x208]
  42489c:	mov    QWORD PTR [rbp+0x8],rax
  4248a0:	mov    rax,QWORD PTR [rdi+0x210]
  4248a7:	mov    QWORD PTR [rbp+0x10],rax
  4248ab:	mov    rax,QWORD PTR [rsp+0x2a8]
  4248b3:	mov    eax,DWORD PTR [rax+0x8]
  4248b6:	mov    QWORD PTR [rbp+0x0],rax
  4248ba:	mov    rax,QWORD PTR [rdi+0x1e8]
  4248c1:	mov    rcx,QWORD PTR [rax+0x30]
  4248c5:	mov    QWORD PTR [rbp+0x18],rcx
  4248c9:	mov    rax,QWORD PTR [rdi]
  4248cc:	mov    rcx,rdi
  4248cf:	call   QWORD PTR [rax+0x10]
  4248d2:	nop
  4248d3:	mov    rcx,rbx
  4248d6:	call   0x40215c
  4248db:	nop
  4248dc:	mov    rcx,QWORD PTR [rsp+0xd0]
  4248e4:	call   0x40215c
  4248e9:	xor    eax,eax
  4248eb:	add    rsp,0x248
  4248f2:	pop    r15
  4248f4:	pop    r14
  4248f6:	pop    r13
  4248f8:	pop    r12
  4248fa:	pop    rdi
  4248fb:	pop    rsi
  4248fc:	pop    rbp
  4248fd:	pop    rbx
  4248fe:	ret    
  4248ff:	int3   
  424900:	int3   
  424901:	int3   
  424902:	int3   
  424903:	int3   
  424904:	int3   
  424905:	int3   
  424906:	int3   
  424907:	int3   
  424908:	rex.W push rbp
  42490a:	sub    rsp,0x20
  42490e:	mov    rbp,rdx
  424911:	lea    rcx,[rbp+0xd0]
  424918:	call   0x401000
  42491d:	add    rsp,0x20
  424921:	pop    rbp
  424922:	ret    
  424923:	int3   
  424924:	int3   
  424925:	int3   
  424926:	int3   
  424927:	int3   
  424928:	rex.W push rbp
  42492a:	sub    rsp,0x20
  42492e:	mov    rbp,rdx
  424931:	lea    rcx,[rbp+0x98]
  424938:	call   0x406fe0
  42493d:	add    rsp,0x20
  424941:	pop    rbp
  424942:	ret    
  424943:	int3   
  424944:	int3   
  424945:	int3   
  424946:	int3   
  424947:	int3   
  424948:	rex.W push rbp
  42494a:	sub    rsp,0x20
  42494e:	mov    rbp,rdx
  424951:	lea    rcx,[rbp+0xe8]
  424958:	call   0x401000
  42495d:	add    rsp,0x20
  424961:	pop    rbp
  424962:	ret    
  424963:	int3   
  424964:	int3   
  424965:	int3   
  424966:	int3   
  424967:	int3   
  424968:	rex.W push rbp
  42496a:	sub    rsp,0x20
  42496e:	mov    rbp,rdx
  424971:	mov    rcx,QWORD PTR [rbp+0x88]
  424978:	call   0x40215c
  42497d:	add    rsp,0x20
  424981:	pop    rbp
  424982:	ret    
  424983:	int3   
  424984:	int3   
  424985:	int3   
  424986:	int3   
  424987:	int3   
  424988:	rex.W push rbp
  42498a:	sub    rsp,0x20
  42498e:	mov    rbp,rdx
  424991:	lea    rcx,[rbp+0x1f0]
  424998:	call   0x4176b4
  42499d:	add    rsp,0x20
  4249a1:	pop    rbp
  4249a2:	ret    
  4249a3:	int3   
  4249a4:	int3   
  4249a5:	int3   
  4249a6:	int3   
  4249a7:	int3   
  4249a8:	rex.W push rbp
  4249aa:	sub    rsp,0x20
  4249ae:	mov    rbp,rdx
  4249b1:	lea    rcx,[rbp+0x98]
  4249b8:	call   0x406fe0
  4249bd:	add    rsp,0x20
  4249c1:	pop    rbp
  4249c2:	ret    
  4249c3:	int3   
  4249c4:	int3   
  4249c5:	int3   
  4249c6:	int3   
  4249c7:	int3   
  4249c8:	rex.W push rbp
  4249ca:	sub    rsp,0x20
  4249ce:	mov    rbp,rdx
  4249d1:	lea    rcx,[rbp+0xf0]
  4249d8:	call   0x422f10
  4249dd:	add    rsp,0x20
  4249e1:	pop    rbp
  4249e2:	ret    
  4249e3:	int3   
  4249e4:	int3   
  4249e5:	int3   
  4249e6:	int3   
  4249e7:	int3   
  4249e8:	rex.W push rbp
  4249ea:	sub    rsp,0x20
  4249ee:	mov    rbp,rdx
  4249f1:	lea    rcx,[rbp+0x58]
  4249f5:	call   0x422c70
  4249fa:	add    rsp,0x20
  4249fe:	pop    rbp
  4249ff:	ret    
  424a00:	int3   
  424a01:	int3   
  424a02:	int3   
  424a03:	int3   
  424a04:	int3   
  424a05:	int3   
  424a06:	int3   
  424a07:	int3   
  424a08:	rex.W push rbp
  424a0a:	sub    rsp,0x20
  424a0e:	mov    rbp,rdx
  424a11:	lea    rcx,[rbp+0x170]
  424a18:	call   0x422a4c
  424a1d:	add    rsp,0x20
  424a21:	pop    rbp
  424a22:	ret    
  424a23:	int3   
  424a24:	int3   
  424a25:	int3   
  424a26:	int3   
  424a27:	int3   
  424a28:	rex.W push rbp
  424a2a:	sub    rsp,0x20
  424a2e:	mov    rbp,rdx
  424a31:	lea    rcx,[rbp+0x200]
  424a38:	call   0x406fe0
  424a3d:	add    rsp,0x20
  424a41:	pop    rbp
  424a42:	ret    
  424a43:	int3   
  424a44:	rex.W push rbx
  424a46:	push   rdi
  424a47:	sub    rsp,0x28
  424a4b:	mov    ebx,DWORD PTR [rcx+0x8]
  424a4e:	mov    rdi,rcx
  424a51:	cmp    ebx,0x6
  424a54:	jb     0x424a73
  424a56:	mov    rax,QWORD PTR [rcx]
  424a59:	mov    edx,ebx
  424a5b:	lea    rcx,[rax+rdx*2-0xc]
  424a60:	lea    rdx,[rip+0x29141]        # 0x44dba8
  424a67:	call   0x402864
  424a6c:	test   al,al
  424a6e:	je     0x424a73
  424a70:	add    ebx,0xfffffffa
  424a73:	test   ebx,ebx
  424a75:	mov    dx,0x5f
  424a79:	je     0x424aaf
  424a7b:	xor    eax,eax
  424a7d:	mov    r8d,ebx
  424a80:	mov    r9,QWORD PTR [rdi]
  424a83:	movzx  ecx,WORD PTR [rax+r9*1]
  424a88:	cmp    cx,0x3a
  424a8c:	je     0x424aa1
  424a8e:	cmp    cx,0x5c
  424a92:	je     0x424aa1
  424a94:	cmp    cx,0x2f
  424a98:	je     0x424aa1
  424a9a:	cmp    cx,0x202e
  424a9f:	jne    0x424aa6
  424aa1:	mov    WORD PTR [rax+r9*1],dx
  424aa6:	add    rax,0x2
  424aaa:	dec    r8
  424aad:	jne    0x424a80
  424aaf:	cmp    DWORD PTR [rdi+0x8],0x0
  424ab3:	jne    0x424abd
  424ab5:	mov    rcx,rdi
  424ab8:	call   0x40323c
  424abd:	add    rsp,0x28
  424ac1:	pop    rdi
  424ac2:	pop    rbx
  424ac3:	ret    
  424ac4:	rex.W push rbx
  424ac6:	push   rbp
  424ac7:	push   rsi
  424ac8:	push   rdi
  424ac9:	sub    rsp,0x28
  424acd:	mov    rsi,rcx
  424ad0:	xor    edi,edi
  424ad2:	lea    rbp,[rip+0x2b197]        # 0x44fc70
  424ad9:	mov    rdx,QWORD PTR [rbp+0x0]
  424add:	xor    eax,eax
  424adf:	xor    ebx,ebx
  424ae1:	cmp    BYTE PTR [rdx],al
  424ae3:	je     0x424af0
  424ae5:	inc    rbx
  424ae8:	inc    eax
  424aea:	cmp    BYTE PTR [rbx+rdx*1],0x0
  424aee:	jne    0x424ae5
  424af0:	cmp    DWORD PTR [rsi+0x8],eax
  424af3:	jb     0x424b39
  424af5:	mov    rcx,rsi
  424af8:	call   0x4027bc
  424afd:	test   al,al
  424aff:	je     0x424b39
  424b01:	cmp    edi,0x4
  424b04:	jb     0x424b1a
  424b06:	mov    rax,QWORD PTR [rsi]
  424b09:	movzx  ecx,WORD PTR [rax+rbx*2]
  424b0d:	sub    cx,0x30
  424b11:	cmp    cx,0x9
  424b15:	ja     0x424b39
  424b17:	inc    rbx
  424b1a:	mov    rax,QWORD PTR [rsi]
  424b1d:	lea    rcx,[rax+rbx*2]
  424b21:	movzx  eax,WORD PTR [rcx]
  424b24:	add    rcx,0x2
  424b28:	test   ax,ax
  424b2b:	je     0x424b46
  424b2d:	cmp    ax,0x2e
  424b31:	je     0x424b46
  424b33:	cmp    ax,0x20
  424b37:	je     0x424b21
  424b39:	inc    edi
  424b3b:	add    rbp,0x8
  424b3f:	cmp    edi,0x6
  424b42:	jb     0x424ad9
  424b44:	jmp    0x424b52
  424b46:	mov    dx,0x5f
  424b4a:	mov    rcx,rsi
  424b4d:	call   0x4036fc
  424b52:	add    rsp,0x28
  424b56:	pop    rdi
  424b57:	pop    rsi
  424b58:	pop    rbp
  424b59:	pop    rbx
  424b5a:	ret    
  424b5b:	int3   
  424b5c:	mov    rax,QWORD PTR [rcx]
  424b5f:	xor    r10d,r10d
  424b62:	cmp    WORD PTR [rax],0x2e
  424b66:	jne    0x424b86
  424b68:	cmp    WORD PTR [rax+0x2],r10w
  424b6d:	je     0x424b7d
  424b6f:	cmp    WORD PTR [rax+0x2],0x2e
  424b74:	jne    0x424b86
  424b76:	cmp    WORD PTR [rax+0x4],r10w
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [rcx+0x8],r10d
  424b81:	mov    WORD PTR [rax],r10w
  424b85:	ret    
  424b86:	cmp    DWORD PTR [rcx+0x8],r10d
  424b8a:	mov    r8d,r10d
  424b8d:	jbe    0x424bea
  424b8f:	mov    rdx,r10
  424b92:	mov    r9,QWORD PTR [rcx]
  424b95:	movzx  eax,WORD PTR [rdx+r9*1]
  424b9a:	cmp    ax,0x3a
  424b9e:	je     0x424bd6
  424ba0:	cmp    ax,0x2a
  424ba4:	je     0x424bd6
  424ba6:	cmp    ax,0x3f
  424baa:	je     0x424bd6
  424bac:	cmp    ax,0x20
  424bb0:	jb     0x424bd6
  424bb2:	cmp    ax,0x3c
  424bb6:	je     0x424bd6
  424bb8:	cmp    ax,0x3e
  424bbc:	je     0x424bd6
  424bbe:	cmp    ax,0x7c
  424bc2:	je     0x424bd6
  424bc4:	cmp    ax,0x22
  424bc8:	je     0x424bd6
  424bca:	cmp    ax,0x2f
  424bce:	je     0x424bd6
  424bd0:	cmp    ax,0x5c
  424bd4:	jne    0x424bdd
  424bd6:	mov    WORD PTR [rdx+r9*1],0x5f
  424bdd:	inc    r8d
  424be0:	add    rdx,0x2
  424be4:	cmp    r8d,DWORD PTR [rcx+0x8]
  424be8:	jb     0x424b92
  424bea:	movsxd rax,DWORD PTR [rcx+0x8]
  424bee:	cmp    eax,r10d
  424bf1:	mov    rdx,rax
  424bf4:	je     0x424c1f
  424bf6:	add    rdx,rdx
  424bf9:	mov    r8,QWORD PTR [rcx]
  424bfc:	sub    rdx,0x2
  424c00:	add    eax,0xffffffff
  424c03:	cmp    WORD PTR [rdx+r8*1],0x2e
  424c09:	je     0x424c13
  424c0b:	cmp    WORD PTR [rdx+r8*1],0x20
  424c11:	jne    0x424c1f
  424c13:	cmp    eax,r10d
  424c16:	mov    WORD PTR [rdx+r8*1],0x5f
  424c1d:	jne    0x424bf9
  424c1f:	ret    
  424c20:	mov    QWORD PTR [rsp+0x8],rcx
  424c25:	push   rbx
  424c26:	sub    rsp,0x30
  424c2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  424c33:	mov    rbx,rcx
  424c36:	mov    DWORD PTR [rsp+0x50],0x0
  424c3e:	call   0x403208
  424c43:	mov    DWORD PTR [rsp+0x50],0x1
  424c4b:	mov    rcx,rbx
  424c4e:	call   0x424b5c
  424c53:	call   0x424ac4
  424c58:	cmp    DWORD PTR [rbx+0x8],0x0
  424c5c:	jne    0x424c6a
  424c5e:	mov    dx,0x5f
  424c62:	mov    rcx,rbx
  424c65:	call   0x40323c
  424c6a:	mov    rax,rbx
  424c6d:	add    rsp,0x30
  424c71:	pop    rbx
  424c72:	ret    
  424c73:	int3   
  424c74:	int3   
  424c75:	int3   
  424c76:	int3   
  424c77:	int3   
  424c78:	int3   
  424c79:	int3   
  424c7a:	int3   
  424c7b:	int3   
  424c7c:	int3   
  424c7d:	int3   
  424c7e:	int3   
  424c7f:	int3   
  424c80:	rex.W push rbp
  424c82:	sub    rsp,0x20
  424c86:	mov    rbp,rdx
  424c89:	mov    eax,DWORD PTR [rbp+0x50]
  424c8c:	and    eax,0x1
  424c8f:	test   eax,eax
  424c91:	je     0x424ca0
  424c93:	and    DWORD PTR [rbp+0x50],0xfffffffe
  424c97:	mov    rcx,QWORD PTR [rbp+0x40]
  424c9b:	call   0x401000
  424ca0:	add    rsp,0x20
  424ca4:	pop    rbp
  424ca5:	ret    
  424ca6:	int3   
  424ca7:	int3   
  424ca8:	mov    QWORD PTR [rsp+0x8],rcx
  424cad:	push   rbx
  424cae:	push   rbp
  424caf:	push   rsi
  424cb0:	push   rdi
  424cb1:	sub    rsp,0x38
  424cb5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  424cbe:	mov    rbp,rdx
  424cc1:	mov    rbx,rcx
  424cc4:	mov    DWORD PTR [rsp+0x68],0x0
  424ccc:	call   0x403150
  424cd1:	mov    DWORD PTR [rsp+0x68],0x1
  424cd9:	xor    edi,edi
  424cdb:	cmp    DWORD PTR [rbp+0x8],edi
  424cde:	jbe    0x424d28
  424ce0:	xor    esi,esi
  424ce2:	test   edi,edi
  424ce4:	je     0x424d0d
  424ce6:	mov    eax,DWORD PTR [rbx+0x8]
  424ce9:	cmp    DWORD PTR [rbx+0xc],eax
  424cec:	jne    0x424cf6
  424cee:	mov    rcx,rbx
  424cf1:	call   0x402f2c
  424cf6:	mov    edx,DWORD PTR [rbx+0x8]
  424cf9:	mov    rcx,QWORD PTR [rbx]
  424cfc:	mov    WORD PTR [rcx+rdx*2],0x5c
  424d02:	inc    edx
  424d04:	mov    WORD PTR [rcx+rdx*2],0x0
  424d0a:	mov    DWORD PTR [rbx+0x8],edx
  424d0d:	mov    rax,QWORD PTR [rbp+0x0]
  424d11:	mov    rdx,QWORD PTR [rsi+rax*1]
  424d15:	mov    rcx,rbx
  424d18:	call   0x403444
  424d1d:	inc    edi
  424d1f:	add    rsi,0x8
  424d23:	cmp    edi,DWORD PTR [rbp+0x8]
  424d26:	jb     0x424ce2
  424d28:	mov    rax,rbx
  424d2b:	add    rsp,0x38
  424d2f:	pop    rdi
  424d30:	pop    rsi
  424d31:	pop    rbp
  424d32:	pop    rbx
  424d33:	ret    
  424d34:	int3   
  424d35:	int3   
  424d36:	int3   
  424d37:	int3   
  424d38:	rex.W push rbp
  424d3a:	sub    rsp,0x20
  424d3e:	mov    rbp,rdx
  424d41:	mov    eax,DWORD PTR [rbp+0x68]
  424d44:	and    eax,0x1
  424d47:	test   eax,eax
  424d49:	je     0x424d58
  424d4b:	and    DWORD PTR [rbp+0x68],0xfffffffe
  424d4f:	mov    rcx,QWORD PTR [rbp+0x60]
  424d53:	call   0x401000
  424d58:	add    rsp,0x20
  424d5c:	pop    rbp
  424d5d:	ret    
  424d5e:	int3   
  424d5f:	int3   
  424d60:	rex.W push rbx
  424d62:	push   rbp
  424d63:	push   rsi
  424d64:	push   rdi
  424d65:	push   r12
  424d67:	push   r13
  424d69:	push   r14
  424d6b:	sub    rsp,0x40
  424d6f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  424d78:	mov    r14b,r8b
  424d7b:	mov    rsi,rdx
  424d7e:	xor    ebx,ebx
  424d80:	mov    edi,ebx
  424d82:	cmp    cl,bl
  424d84:	je     0x424e6e
  424d8a:	mov    rcx,QWORD PTR [rdx]
  424d8d:	mov    rax,QWORD PTR [rcx]
  424d90:	cmp    DWORD PTR [rax+0x8],ebx
  424d93:	jne    0x424dfa
  424d95:	lea    edi,[rbx+0x1]
  424d98:	cmp    DWORD PTR [rdx+0x8],edi
  424d9b:	jbe    0x424e6e
  424da1:	mov    rax,QWORD PTR [rcx+0x8]
  424da5:	cmp    DWORD PTR [rax+0x8],ebx
  424da8:	jne    0x424e6e
  424dae:	lea    edi,[rbx+0x2]
  424db1:	cmp    DWORD PTR [rdx+0x8],edi
  424db4:	jbe    0x424e6e
  424dba:	mov    rax,QWORD PTR [rcx+0x10]
  424dbe:	lea    rdx,[rip+0x2892f]        # 0x44d6f4
  424dc5:	mov    rcx,QWORD PTR [rax]
  424dc8:	call   QWORD PTR [rip+0x2857a]        # 0x44d348
  424dce:	cmp    eax,ebx
  424dd0:	jne    0x424e6e
  424dd6:	lea    edi,[rbx+0x3]
  424dd9:	cmp    DWORD PTR [rsi+0x8],edi
  424ddc:	jbe    0x424e6e
  424de2:	mov    rax,QWORD PTR [rsi]
  424de5:	mov    rcx,QWORD PTR [rax+0x18]
  424de9:	mov    rcx,QWORD PTR [rcx]
  424dec:	call   0x409f74
  424df1:	cmp    al,bl
  424df3:	je     0x424e6e
  424df5:	lea    edi,[rbx+0x4]
  424df8:	jmp    0x424e0b
  424dfa:	mov    rcx,QWORD PTR [rax]
  424dfd:	call   0x409f74
  424e02:	cmp    al,bl
  424e04:	je     0x424e6e
  424e06:	mov    edi,0x1
  424e0b:	lea    ecx,[rdi-0x1]
  424e0e:	mov    rax,QWORD PTR [rsi]
  424e11:	mov    rdx,QWORD PTR [rax+rcx*8]
  424e15:	cmp    DWORD PTR [rdx+0x8],0x2
  424e19:	je     0x424e6e
  424e1b:	mov    rdx,QWORD PTR [rdx]
  424e1e:	add    rdx,0x4
  424e22:	lea    rcx,[rsp+0x28]
  424e27:	call   0x4031c0
  424e2c:	nop
  424e2d:	mov    ecx,0x10
  424e32:	call   0x402130
  424e37:	mov    QWORD PTR [rsp+0x88],rax
  424e3f:	cmp    rax,rbx
  424e42:	je     0x424e53
  424e44:	lea    rdx,[rsp+0x28]
  424e49:	mov    rcx,rax
  424e4c:	call   0x403208
  424e51:	jmp    0x424e56
  424e53:	mov    rax,rbx
  424e56:	mov    r8,rax
  424e59:	mov    edx,edi
  424e5b:	mov    rcx,rsi
  424e5e:	call   0x40456c
  424e63:	nop
  424e64:	mov    rcx,QWORD PTR [rsp+0x28]
  424e69:	call   0x40215c
  424e6e:	movsxd rbp,edi
  424e71:	cmp    edi,DWORD PTR [rsi+0x8]
  424e74:	jae    0x424eff
  424e7a:	lea    r13d,[rdi+0x1]
  424e7e:	shl    rbp,0x3
  424e82:	mov    rax,QWORD PTR [rsi]
  424e85:	mov    rcx,QWORD PTR [rax+rbp*1]
  424e89:	call   0x424b5c
  424e8e:	cmp    DWORD PTR [rcx+0x8],ebx
  424e91:	jne    0x424eec
  424e93:	cmp    r14b,bl
  424e96:	jne    0x424eac
  424e98:	mov    eax,DWORD PTR [rsi+0x8]
  424e9b:	dec    eax
  424e9d:	cmp    edi,eax
  424e9f:	jne    0x424eac
  424ea1:	mov    dx,0x5f
  424ea5:	call   0x40323c
  424eaa:	jmp    0x424ef1
  424eac:	mov    rax,QWORD PTR [rsi]
  424eaf:	mov    r12,QWORD PTR [rax+rbp*1]
  424eb3:	cmp    r12,rbx
  424eb6:	je     0x424ec9
  424eb8:	mov    rcx,QWORD PTR [r12]
  424ebc:	call   0x40215c
  424ec1:	mov    rcx,r12
  424ec4:	call   0x40215c
  424ec9:	mov    rcx,QWORD PTR [rsi]
  424ecc:	mov    r8d,DWORD PTR [rsi+0x8]
  424ed0:	sub    r8d,r13d
  424ed3:	shl    r8,0x3
  424ed7:	lea    rdx,[rcx+r13*8]
  424edb:	mov    eax,edi
  424edd:	lea    rcx,[rcx+rax*8]
  424ee1:	call   0x44b774
  424ee6:	add    DWORD PTR [rsi+0x8],0xffffffff
  424eea:	jmp    0x424efa
  424eec:	call   0x424ac4
  424ef1:	inc    edi
  424ef3:	inc    r13d
  424ef6:	add    rbp,0x8
  424efa:	cmp    edi,DWORD PTR [rsi+0x8]
  424efd:	jb     0x424e82
  424eff:	cmp    r14b,bl
  424f02:	jne    0x424f71
  424f04:	mov    eax,DWORD PTR [rsi+0x8]
  424f07:	cmp    eax,ebx
  424f09:	jne    0x424f59
  424f0b:	mov    dx,0x5f
  424f0f:	lea    rcx,[rsp+0x28]
  424f14:	call   0x40318c
  424f19:	nop
  424f1a:	mov    ecx,0x10
  424f1f:	call   0x402130
  424f24:	mov    QWORD PTR [rsp+0x88],rax
  424f2c:	cmp    rax,rbx
  424f2f:	je     0x424f41
  424f31:	lea    rdx,[rsp+0x28]
  424f36:	mov    rcx,rax
  424f39:	call   0x403208
  424f3e:	mov    rbx,rax
  424f41:	mov    rdx,rbx
  424f44:	mov    rcx,rsi
  424f47:	call   0x4010c8
  424f4c:	nop
  424f4d:	mov    rcx,QWORD PTR [rsp+0x28]
  424f52:	call   0x40215c
  424f57:	jmp    0x424f71
  424f59:	lea    ecx,[rax-0x1]
  424f5c:	mov    rax,QWORD PTR [rsi]
  424f5f:	mov    rcx,QWORD PTR [rax+rcx*8]
  424f63:	cmp    DWORD PTR [rcx+0x8],ebx
  424f66:	jne    0x424f71
  424f68:	mov    dx,0x5f
  424f6c:	call   0x40323c
  424f71:	add    rsp,0x40
  424f75:	pop    r14
  424f77:	pop    r13
  424f79:	pop    r12
  424f7b:	pop    rdi
  424f7c:	pop    rsi
  424f7d:	pop    rbp
  424f7e:	pop    rbx
  424f7f:	ret    
  424f80:	rex.W push rbp
  424f82:	sub    rsp,0x20
  424f86:	mov    rbp,rdx
  424f89:	lea    rcx,[rbp+0x28]
  424f8d:	call   0x401000
  424f92:	add    rsp,0x20
  424f96:	pop    rbp
  424f97:	ret    
  424f98:	int3   
  424f99:	int3   
  424f9a:	int3   
  424f9b:	int3   
  424f9c:	int3   
  424f9d:	int3   
  424f9e:	int3   
  424f9f:	int3   
  424fa0:	rex.W push rbp
  424fa2:	sub    rsp,0x20
  424fa6:	mov    rbp,rdx
  424fa9:	mov    rcx,QWORD PTR [rbp+0x88]
  424fb0:	call   0x40215c
  424fb5:	add    rsp,0x20
  424fb9:	pop    rbp
  424fba:	ret    
  424fbb:	int3   
  424fbc:	int3   
  424fbd:	int3   
  424fbe:	int3   
  424fbf:	int3   
  424fc0:	rex.W push rbp
  424fc2:	sub    rsp,0x20
  424fc6:	mov    rbp,rdx
  424fc9:	lea    rcx,[rbp+0x28]
  424fcd:	call   0x401000
  424fd2:	add    rsp,0x20
  424fd6:	pop    rbp
  424fd7:	ret    
  424fd8:	int3   
  424fd9:	int3   
  424fda:	int3   
  424fdb:	int3   
  424fdc:	int3   
  424fdd:	int3   
  424fde:	int3   
  424fdf:	int3   
  424fe0:	rex.W push rbp
  424fe2:	sub    rsp,0x20
  424fe6:	mov    rbp,rdx
  424fe9:	mov    rcx,QWORD PTR [rbp+0x88]
  424ff0:	call   0x40215c
  424ff5:	add    rsp,0x20
  424ff9:	pop    rbp
  424ffa:	ret    
  424ffb:	int3   
  424ffc:	mov    rcx,QWORD PTR [rcx]
  424fff:	jmp    0x44ad20
  425004:	mov    QWORD PTR [rcx+0x48],rdx
  425008:	ret    
  425009:	int3   
  42500a:	int3   
  42500b:	int3   
  42500c:	rex.W push rbx
  42500e:	push   rdi
  42500f:	test   rdx,rdx
  425012:	mov    r10,rcx
  425015:	lea    ecx,[r8+r8*1]
  425019:	mov    BYTE PTR [rcx+r10*1],0x0
  42501e:	mov    r11,rdx
  425021:	jne    0x425046
  425023:	test   r8d,r8d
  425026:	je     0x4250b6
  42502c:	mov    eax,r8d
  42502f:	lea    edx,[r11+0x2]
  425033:	mov    BYTE PTR [r10],0x20
  425037:	mov    BYTE PTR [r10+0x1],0x20
  42503c:	add    r10,rdx
  42503f:	dec    rax
  425042:	jne    0x425033
  425044:	jmp    0x4250b6
  425046:	cmp    r8d,0x8
  42504a:	mov    edx,0x2
  42504f:	ja     0x42505c
  425051:	add    ecx,0xfffffffe
  425054:	mov    edx,0xfffffffe
  425059:	add    r10,rcx
  42505c:	test   r8d,r8d
  42505f:	je     0x4250b6
  425061:	movsxd rdi,edx
  425064:	mov    ebx,r8d
  425067:	movzx  r9d,BYTE PTR [r11]
  42506b:	mov    r8d,r9d
  42506e:	shr    r8d,0x4
  425072:	and    r8d,0xf
  425076:	cmp    r8d,0xa
  42507a:	lea    eax,[r8+0x37]
  42507e:	lea    edx,[r8+0x30]
  425082:	movzx  ecx,al
  425085:	movzx  eax,dl
  425088:	cmovb  ecx,eax
  42508b:	and    r9d,0xf
  42508f:	mov    BYTE PTR [r10],cl
  425092:	lea    eax,[r9+0x37]
  425096:	cmp    r9d,0xa
  42509a:	movzx  ecx,al
  42509d:	lea    edx,[r9+0x30]
  4250a1:	movzx  eax,dl
  4250a4:	cmovb  ecx,eax
  4250a7:	inc    r11
  4250aa:	mov    BYTE PTR [r10+0x1],cl
  4250ae:	add    r10,rdi
  4250b1:	dec    rbx
  4250b4:	jne    0x425067
  4250b6:	pop    rdi
  4250b7:	pop    rbx
  4250b8:	ret    
  4250b9:	int3   
  4250ba:	int3   
  4250bb:	int3   
  4250bc:	sub    rsp,0x28
  4250c0:	add    DWORD PTR [rcx+0x8],0xffffffff
  4250c4:	mov    eax,DWORD PTR [rcx+0x8]
  4250c7:	jne    0x4250d6
  4250c9:	mov    rax,QWORD PTR [rcx]
  4250cc:	mov    edx,0x1
  4250d1:	call   QWORD PTR [rax+0x20]
  4250d4:	xor    eax,eax
  4250d6:	add    rsp,0x28
  4250da:	ret    
  4250db:	int3   
  4250dc:	rex.W push rbx
  4250de:	sub    rsp,0x20
  4250e2:	test   dl,0x1
  4250e5:	lea    rax,[rip+0x2ac34]        # 0x44fd20
  4250ec:	mov    rbx,rcx
  4250ef:	mov    QWORD PTR [rcx],rax
  4250f2:	je     0x4250f9
  4250f4:	call   0x40215c
  4250f9:	mov    rax,rbx
  4250fc:	add    rsp,0x20
  425100:	pop    rbx
  425101:	ret    
  425102:	int3   
  425103:	int3   
  425104:	rex.W push rbx
  425106:	push   rbp
  425107:	push   rsi
  425108:	push   rdi
  425109:	sub    rsp,0x28
  42510d:	xor    edi,edi
  42510f:	mov    rsi,rcx
  425112:	cmp    DWORD PTR [rcx+0x10],edi
  425115:	mov    QWORD PTR [rcx+0x48],rdi
  425119:	jbe    0x425149
  42511b:	mov    rbp,rdi
  42511e:	mov    rax,QWORD PTR [rsi+0x8]
  425122:	mov    rbx,QWORD PTR [rax+rbp*1]
  425126:	mov    rcx,QWORD PTR [rbx]
  425129:	mov    rax,QWORD PTR [rcx]
  42512c:	call   QWORD PTR [rax+0x18]
  42512f:	mov    r8d,DWORD PTR [rbx+0x18]
  425133:	lea    rcx,[rbx+0x1c]
  425137:	xor    edx,edx
  425139:	call   0x44b780
  42513e:	inc    edi
  425140:	add    rbp,0x8
  425144:	cmp    edi,DWORD PTR [rsi+0x10]
  425147:	jb     0x42511e
  425149:	add    rsp,0x28
  42514d:	pop    rdi
  42514e:	pop    rsi
  42514f:	pop    rbp
  425150:	pop    rbx
  425151:	ret    
  425152:	int3   
  425153:	int3   
  425154:	rex.W push rbx
  425156:	push   rbp
  425157:	push   rsi
  425158:	push   rdi
  425159:	push   r12
  42515b:	sub    rsp,0x20
  42515f:	mov    ebp,r8d
  425162:	xor    ebx,ebx
  425164:	mov    r12,rdx
  425167:	add    QWORD PTR [rcx+0x48],rbp
  42516b:	cmp    DWORD PTR [rcx+0x10],ebx
  42516e:	mov    rdi,rcx
  425171:	jbe    0x425198
  425173:	mov    rsi,rbx
  425176:	mov    rax,QWORD PTR [rdi+0x8]
  42517a:	mov    r8d,ebp
  42517d:	mov    rdx,r12
  425180:	mov    rcx,QWORD PTR [rsi+rax*1]
  425184:	mov    rcx,QWORD PTR [rcx]
  425187:	mov    rax,QWORD PTR [rcx]
  42518a:	call   QWORD PTR [rax+0x20]
  42518d:	inc    ebx
  42518f:	add    rsi,0x8
  425193:	cmp    ebx,DWORD PTR [rdi+0x10]
  425196:	jb     0x425176
  425198:	add    rsp,0x20
  42519c:	pop    r12
  42519e:	pop    rdi
  42519f:	pop    rsi
  4251a0:	pop    rbp
  4251a1:	pop    rbx
  4251a2:	ret    
  4251a3:	int3   
  4251a4:	mov    QWORD PTR [rsp+0x20],r9
  4251a9:	mov    BYTE PTR [rsp+0x18],r8b
  4251ae:	mov    BYTE PTR [rsp+0x10],dl
  4251b2:	push   rbx
  4251b3:	push   rbp
  4251b4:	push   rsi
  4251b5:	push   rdi
  4251b6:	push   r12
  4251b8:	push   r13
  4251ba:	push   r14
  4251bc:	push   r15
  4251be:	sub    rsp,0x78
  4251c2:	test   dl,dl
  4251c4:	mov    r14b,r8b
  4251c7:	mov    r13b,dl
  4251ca:	mov    rbx,rcx
  4251cd:	mov    edi,0x1
  4251d2:	je     0x4251da
  4251d4:	add    QWORD PTR [rcx+0x18],rdi
  4251d8:	jmp    0x4251f5
  4251da:	test   r14b,r14b
  4251dd:	mov    rax,QWORD PTR [rcx+0x48]
  4251e1:	je     0x4251ed
  4251e3:	add    QWORD PTR [rcx+0x28],rdi
  4251e7:	add    QWORD PTR [rcx+0x38],rax
  4251eb:	jmp    0x4251f5
  4251ed:	add    QWORD PTR [rcx+0x20],rdi
  4251f1:	add    QWORD PTR [rcx+0x30],rax
  4251f5:	xor    edx,edx
  4251f7:	lea    rcx,[rsp+0x20]
  4251fc:	lea    r8d,[rdx+0x10]
  425200:	call   0x44b780
  425205:	movzx  r11d,BYTE PTR [rsp+0x20]
  42520b:	test   r13b,r13b
  42520e:	cmovne r11d,edi
  425212:	xor    r15d,r15d
  425215:	cmp    DWORD PTR [rbx+0x10],r15d
  425219:	mov    BYTE PTR [rsp+0x20],r11b
  42521e:	jbe    0x42539d
  425224:	xor    r12d,r12d
  425227:	test   r13b,r13b
  42522a:	mov    rax,QWORD PTR [rbx+0x8]
  42522e:	mov    rsi,QWORD PTR [r12+rax*1]
  425232:	jne    0x425275
  425234:	mov    rcx,QWORD PTR [rsi]
  425237:	lea    rbp,[rsi+0x1c]
  42523b:	mov    rax,QWORD PTR [rcx]
  42523e:	mov    rdx,rbp
  425241:	call   QWORD PTR [rax+0x28]
  425244:	test   r14b,r14b
  425247:	jne    0x425275
  425249:	xor    edx,edx
  42524b:	lea    r8,[rsi+0x5c]
  42524f:	cmp    DWORD PTR [rsi+0x18],edx
  425252:	jbe    0x425275
  425254:	mov    r9d,DWORD PTR [rsi+0x18]
  425258:	movzx  eax,BYTE PTR [rbp+0x0]
  42525c:	movzx  ecx,BYTE PTR [r8]
  425260:	add    rbp,rdi
  425263:	add    edx,eax
  425265:	add    edx,ecx
  425267:	mov    BYTE PTR [r8],dl
  42526a:	shr    edx,0x8
  42526d:	add    r8,rdi
  425270:	sub    r9,rdi
  425273:	jne    0x425258
  425275:	mov    rcx,QWORD PTR [rsi]
  425278:	mov    rax,QWORD PTR [rcx]
  42527b:	call   QWORD PTR [rax+0x18]
  42527e:	mov    rcx,QWORD PTR [rsi]
  425281:	lea    rdx,[rsp+0x20]
  425286:	mov    rax,QWORD PTR [rcx]
  425289:	mov    r8d,0x10
  42528f:	call   QWORD PTR [rax+0x20]
  425292:	mov    rcx,QWORD PTR [rsi]
  425295:	mov    r8d,DWORD PTR [rsi+0x18]
  425299:	mov    rax,QWORD PTR [rcx]
  42529c:	lea    rdx,[rsi+0x1c]
  4252a0:	call   QWORD PTR [rax+0x20]
  4252a3:	mov    rax,QWORD PTR [rsp+0xd8]
  4252ab:	xor    r14d,r14d
  4252ae:	cmp    DWORD PTR [rax+0x8],r14d
  4252b2:	jbe    0x4252ff
  4252b4:	xor    ebp,ebp
  4252b6:	mov    r13,rax
  4252b9:	mov    rax,QWORD PTR [r13+0x0]
  4252bd:	lea    rdx,[rsp+0xc0]
  4252c5:	mov    r8d,0x2
  4252cb:	movzx  ecx,WORD PTR [rax+rbp*1]
  4252cf:	mov    BYTE PTR [rsp+0xc0],cl
  4252d6:	shr    cx,0x8
  4252da:	mov    BYTE PTR [rsp+0xc1],cl
  4252e1:	mov    rcx,QWORD PTR [rsi]
  4252e4:	mov    rax,QWORD PTR [rcx]
  4252e7:	call   QWORD PTR [rax+0x20]
  4252ea:	add    r14d,edi
  4252ed:	add    rbp,0x2
  4252f1:	cmp    r14d,DWORD PTR [r13+0x8]
  4252f5:	jb     0x4252b9
  4252f7:	mov    r13b,BYTE PTR [rsp+0xc8]
  4252ff:	mov    rcx,QWORD PTR [rsi]
  425302:	lea    rdx,[rsp+0x30]
  425307:	mov    rax,QWORD PTR [rcx]
  42530a:	call   QWORD PTR [rax+0x28]
  42530d:	mov    r14b,BYTE PTR [rsp+0xd0]
  425315:	test   r14b,r14b
  425318:	jne    0x425353
  42531a:	xor    r8d,r8d
  42531d:	lea    rdx,[rsi+0x9c]
  425324:	cmp    DWORD PTR [rsi+0x18],r8d
  425328:	jbe    0x425353
  42532a:	mov    r10d,DWORD PTR [rsi+0x18]
  42532e:	lea    r9,[rsp+0x30]
  425333:	sub    r9,rdx
  425336:	movzx  eax,BYTE PTR [rdx]
  425339:	movzx  ecx,BYTE PTR [r9+rdx*1]
  42533e:	add    r8d,eax
  425341:	add    r8d,ecx
  425344:	mov    BYTE PTR [rdx],r8b
  425347:	shr    r8d,0x8
  42534b:	add    rdx,rdi
  42534e:	sub    r10,rdi
  425351:	jne    0x425336
  425353:	xor    r8d,r8d
  425356:	lea    rdx,[rsi+0xdc]
  42535d:	cmp    DWORD PTR [rsi+0x18],r8d
  425361:	jbe    0x42538c
  425363:	mov    r10d,DWORD PTR [rsi+0x18]
  425367:	lea    r9,[rsp+0x30]
  42536c:	sub    r9,rdx
  42536f:	movzx  eax,BYTE PTR [rdx]
  425372:	movzx  ecx,BYTE PTR [r9+rdx*1]
  425377:	add    r8d,eax
  42537a:	add    r8d,ecx
  42537d:	mov    BYTE PTR [rdx],r8b
  425380:	shr    r8d,0x8
  425384:	add    rdx,rdi
  425387:	sub    r10,rdi
  42538a:	jne    0x42536f
  42538c:	add    r15d,edi
  42538f:	add    r12,0x8
  425393:	cmp    r15d,DWORD PTR [rbx+0x10]
  425397:	jb     0x425227
  42539d:	add    rsp,0x78
  4253a1:	pop    r15
  4253a3:	pop    r14
  4253a5:	pop    r13
  4253a7:	pop    r12
  4253a9:	pop    rdi
  4253aa:	pop    rsi
  4253ab:	pop    rbp
  4253ac:	pop    rbx
  4253ad:	ret    
  4253ae:	int3   
  4253af:	int3   
  4253b0:	mov    QWORD PTR [rsp+0x8],rcx
  4253b5:	push   rbx
  4253b6:	push   rbp
  4253b7:	push   rsi
  4253b8:	push   rdi
  4253b9:	sub    rsp,0x38
  4253bd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4253c6:	mov    rdi,rcx
  4253c9:	movsxd rbx,DWORD PTR [rcx+0x8]
  4253cd:	mov    rbp,rbx
  4253d0:	test   ebx,ebx
  4253d2:	je     0x42540e
  4253d4:	shl    rbp,0x3
  4253d8:	add    ebx,0xffffffff
  4253db:	sub    rbp,0x8
  4253df:	mov    rax,QWORD PTR [rdi]
  4253e2:	mov    rsi,QWORD PTR [rax+rbp*1]
  4253e6:	test   rsi,rsi
  4253e9:	je     0x42540a
  4253eb:	mov    rcx,QWORD PTR [rsi+0x8]
  4253ef:	call   0x40215c
  4253f4:	mov    rcx,QWORD PTR [rsi]
  4253f7:	test   rcx,rcx
  4253fa:	je     0x425402
  4253fc:	mov    rax,QWORD PTR [rcx]
  4253ff:	call   QWORD PTR [rax+0x10]
  425402:	mov    rcx,rsi
  425405:	call   0x40215c
  42540a:	test   ebx,ebx
  42540c:	jne    0x4253d8
  42540e:	mov    rcx,QWORD PTR [rdi]
  425411:	add    rsp,0x38
  425415:	pop    rdi
  425416:	pop    rsi
  425417:	pop    rbp
  425418:	pop    rbx
  425419:	jmp    0x40215c
  42541e:	int3   
  42541f:	int3   
  425420:	rex.W push rbp
  425422:	sub    rsp,0x20
  425426:	mov    rbp,rdx
  425429:	mov    rcx,QWORD PTR [rbp+0x60]
  42542d:	call   0x401000
  425432:	add    rsp,0x20
  425436:	pop    rbp
  425437:	ret    
  425438:	add    rcx,0x8
  42543c:	jmp    0x4253b0
  425441:	int3   
  425442:	int3   
  425443:	int3   
  425444:	rex.W push rbx
  425446:	push   rbp
  425447:	push   rsi
  425448:	push   rdi
  425449:	sub    rsp,0x38
  42544d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  425456:	mov    rbp,r8
  425459:	mov    edi,edx
  42545b:	mov    rsi,rcx
  42545e:	mov    ecx,0x30
  425463:	call   0x402130
  425468:	mov    rbx,rax
  42546b:	mov    QWORD PTR [rsp+0x78],rax
  425470:	test   rax,rax
  425473:	je     0x42549f
  425475:	mov    rdx,rbp
  425478:	mov    rcx,rax
  42547b:	call   0x41aa40
  425480:	nop
  425481:	lea    rdx,[rbp+0x10]
  425485:	lea    rcx,[rbx+0x10]
  425489:	call   0x402bb0
  42548e:	nop
  42548f:	lea    rdx,[rbp+0x20]
  425493:	lea    rcx,[rbx+0x20]
  425497:	call   0x403208
  42549c:	nop
  42549d:	jmp    0x4254a1
  42549f:	xor    ebx,ebx
  4254a1:	mov    r8,rbx
  4254a4:	mov    edx,edi
  4254a6:	mov    rcx,rsi
  4254a9:	add    rsp,0x38
  4254ad:	pop    rdi
  4254ae:	pop    rsi
  4254af:	pop    rbp
  4254b0:	pop    rbx
  4254b1:	jmp    0x40456c
  4254b6:	int3   
  4254b7:	int3   
  4254b8:	int3   
  4254b9:	int3   
  4254ba:	int3   
  4254bb:	int3   
  4254bc:	int3   
  4254bd:	int3   
  4254be:	int3   
  4254bf:	int3   
  4254c0:	int3   
  4254c1:	int3   
  4254c2:	int3   
  4254c3:	int3   
  4254c4:	rex.W push rbp
  4254c6:	sub    rsp,0x20
  4254ca:	mov    rbp,rdx
  4254cd:	mov    rcx,QWORD PTR [rbp+0x78]
  4254d1:	call   0x40215c
  4254d6:	add    rsp,0x20
  4254da:	pop    rbp
  4254db:	ret    
  4254dc:	int3   
  4254dd:	int3   
  4254de:	int3   
  4254df:	int3   
  4254e0:	int3   
  4254e1:	int3   
  4254e2:	int3   
  4254e3:	int3   
  4254e4:	rex.W push rbp
  4254e6:	sub    rsp,0x20
  4254ea:	mov    rbp,rdx
  4254ed:	mov    rcx,QWORD PTR [rbp+0x78]
  4254f1:	call   0x41b92c
  4254f6:	add    rsp,0x20
  4254fa:	pop    rbp
  4254fb:	ret    
  4254fc:	int3   
  4254fd:	int3   
  4254fe:	int3   
  4254ff:	int3   
  425500:	int3   
  425501:	int3   
  425502:	int3   
  425503:	int3   
  425504:	rex.W push rbp
  425506:	sub    rsp,0x20
  42550a:	mov    rbp,rdx
  42550d:	mov    rcx,QWORD PTR [rbp+0x78]
  425511:	add    rcx,0x10
  425515:	call   0x401000
  42551a:	add    rsp,0x20
  42551e:	pop    rbp
  42551f:	ret    
  425520:	rex.W push rbx
  425522:	push   rbp
  425523:	push   rsi
  425524:	push   rdi
  425525:	sub    rsp,0x28
  425529:	movsxd rbx,DWORD PTR [rcx+0x8]
  42552d:	mov    rdi,rcx
  425530:	test   ebx,ebx
  425532:	mov    rsi,rbx
  425535:	je     0x425562
  425537:	shl    rsi,0x3
  42553b:	mov    rax,QWORD PTR [rdi]
  42553e:	sub    rsi,0x8
  425542:	add    ebx,0xffffffff
  425545:	mov    rbp,QWORD PTR [rsi+rax*1]
  425549:	test   rbp,rbp
  42554c:	je     0x42555e
  42554e:	mov    rcx,rbp
  425551:	call   0x41b980
  425556:	mov    rcx,rbp
  425559:	call   0x40215c
  42555e:	test   ebx,ebx
  425560:	jne    0x42553b
  425562:	mov    rcx,QWORD PTR [rdi]
  425565:	add    rsp,0x28
  425569:	pop    rdi
  42556a:	pop    rsi
  42556b:	pop    rbp
  42556c:	pop    rbx
  42556d:	jmp    0x40215c
  425572:	int3   
  425573:	int3   
  425574:	mov    QWORD PTR [rsp+0x10],rdx
  425579:	mov    QWORD PTR [rsp+0x8],rcx
  42557e:	push   rbx
  42557f:	push   rbp
  425580:	push   rsi
  425581:	push   rdi
  425582:	push   r12
  425584:	push   r13
  425586:	push   r14
  425588:	push   r15
  42558a:	sub    rsp,0xd8
  425591:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
  42559d:	mov    r15,rdx
  4255a0:	mov    rdx,r8
  4255a3:	lea    rcx,[rsp+0x20]
  4255a8:	call   0x404d18
  4255ad:	nop
  4255ae:	mov    eax,DWORD PTR [rsp+0x28]
  4255b2:	test   eax,eax
  4255b4:	jne    0x425616
  4255b6:	lea    rcx,[rsp+0x50]
  4255bb:	call   0x403150
  4255c0:	nop
  4255c1:	mov    rdx,QWORD PTR [rip+0x430c0]        # 0x468688
  4255c8:	lea    rcx,[rsp+0x50]
  4255cd:	call   0x4034e8
  4255d2:	mov    ecx,0x10
  4255d7:	call   0x402130
  4255dc:	mov    QWORD PTR [rsp+0x138],rax
  4255e4:	test   rax,rax
  4255e7:	je     0x4255f8
  4255e9:	lea    rdx,[rsp+0x50]
  4255ee:	mov    rcx,rax
  4255f1:	call   0x403208
  4255f6:	jmp    0x4255fa
  4255f8:	xor    eax,eax
  4255fa:	mov    rdx,rax
  4255fd:	lea    rcx,[rsp+0x20]
  425602:	call   0x4010c8
  425607:	nop
  425608:	mov    rcx,QWORD PTR [rsp+0x50]
  42560d:	call   0x40215c
  425612:	mov    eax,DWORD PTR [rsp+0x28]
  425616:	xor    r14d,r14d
  425619:	mov    QWORD PTR [rsp+0x30],r14
  42561e:	xor    ebp,ebp
  425620:	mov    DWORD PTR [rsp+0x38],ebp
  425624:	mov    DWORD PTR [rsp+0x3c],ebp
  425628:	xor    edi,edi
  42562a:	mov    QWORD PTR [rsp+0x40],rdi
  42562f:	xor    ebx,ebx
  425631:	mov    DWORD PTR [rsp+0x48],ebx
  425635:	mov    DWORD PTR [rsp+0x4c],ebx
  425639:	xor    esi,esi
  42563b:	mov    r13d,0xffffffff
  425641:	test   eax,eax
  425643:	je     0x4259b3
  425649:	xor    r12d,r12d
  42564c:	xor    eax,eax
  42564e:	mov    QWORD PTR [rsp+0x88],rax
  425656:	mov    DWORD PTR [rsp+0x90],eax
  42565d:	mov    DWORD PTR [rsp+0x94],eax
  425664:	lea    rcx,[rsp+0x98]
  42566c:	call   0x402b34
  425671:	nop
  425672:	lea    rcx,[rsp+0xa8]
  42567a:	call   0x403150
  42567f:	nop
  425680:	mov    rax,QWORD PTR [rsp+0x20]
  425685:	mov    rdx,QWORD PTR [r12+rax*1]
  425689:	lea    rcx,[rsp+0x88]
  425691:	call   0x40e388
  425696:	mov    edi,eax
  425698:	test   eax,eax
  42569a:	jne    0x42577d
  4256a0:	cmp    DWORD PTR [rsp+0xa0],eax
  4256a7:	jne    0x4256bd
  4256a9:	mov    rdx,QWORD PTR [rip+0x42fd8]        # 0x468688
  4256b0:	lea    rcx,[rsp+0x98]
  4256b8:	call   0x402be4
  4256bd:	lea    rdx,[rip+0x2a1f4]        # 0x44f8b8
  4256c4:	mov    rcx,QWORD PTR [rsp+0x98]
  4256cc:	call   0x44b77a
  4256d1:	test   eax,eax
  4256d3:	je     0x425819
  4256d9:	lea    r8,[rsp+0xb8]
  4256e1:	lea    rdx,[rsp+0x98]
  4256e9:	mov    rcx,r15
  4256ec:	call   0x40baa0
  4256f1:	test   al,al
  4256f3:	je     0x425916
  4256f9:	xor    ecx,ecx
  4256fb:	mov    edi,ebp
  4256fd:	mov    r8,QWORD PTR [rsp+0xb8]
  425705:	test   ebp,ebp
  425707:	je     0x425725
  425709:	lea    edx,[rdi+rcx*1]
  42570c:	shr    edx,1
  42570e:	cmp    r8,QWORD PTR [r14+rdx*8]
  425712:	je     0x42573c
  425714:	cmp    r8,QWORD PTR [r14+rdx*8]
  425718:	jae    0x42571e
  42571a:	mov    edi,edx
  42571c:	jmp    0x425721
  42571e:	lea    ecx,[rdx+0x1]
  425721:	cmp    ecx,edi
  425723:	jne    0x425709
  425725:	mov    edx,edi
  425727:	lea    rcx,[rsp+0x30]
  42572c:	call   0x40456c
  425731:	mov    edx,edi
  425733:	mov    ebp,DWORD PTR [rsp+0x38]
  425737:	mov    r14,QWORD PTR [rsp+0x30]
  42573c:	cmp    ebp,ebx
  42573e:	je     0x425756
  425740:	lea    r8,[rsp+0x88]
  425748:	lea    rcx,[rsp+0x40]
  42574d:	call   0x425444
  425752:	mov    ebx,DWORD PTR [rsp+0x48]
  425756:	lea    rcx,[rsp+0x88]
  42575e:	call   0x41b980
  425763:	inc    esi
  425765:	add    r12,0x8
  425769:	cmp    esi,DWORD PTR [rsp+0x28]
  42576d:	jb     0x42564c
  425773:	mov    rdi,QWORD PTR [rsp+0x40]
  425778:	jmp    0x4259b3
  42577d:	lea    rcx,[rsp+0x88]
  425785:	call   0x41b980
  42578a:	nop
  42578b:	movsxd rax,ebx
  42578e:	mov    r13d,0xffffffff
  425794:	mov    r12,QWORD PTR [rsp+0x40]
  425799:	test   ebx,ebx
  42579b:	je     0x4257c4
  42579d:	lea    rsi,[r12+rax*8]
  4257a1:	add    ebx,r13d
  4257a4:	sub    rsi,0x8
  4257a8:	mov    rbp,QWORD PTR [rsi]
  4257ab:	test   rbp,rbp
  4257ae:	je     0x4257c0
  4257b0:	mov    rcx,rbp
  4257b3:	call   0x41b980
  4257b8:	mov    rcx,rbp
  4257bb:	call   0x40215c
  4257c0:	test   ebx,ebx
  4257c2:	jne    0x4257a1
  4257c4:	mov    rcx,r12
  4257c7:	call   0x40215c
  4257cc:	nop
  4257cd:	mov    rcx,r14
  4257d0:	call   0x40215c
  4257d5:	nop
  4257d6:	movsxd rbx,DWORD PTR [rsp+0x28]
  4257db:	mov    rsi,rbx
  4257de:	test   ebx,ebx
  4257e0:	je     0x425d83
  4257e6:	shl    rsi,0x3
  4257ea:	add    ebx,r13d
  4257ed:	sub    rsi,0x8
  4257f1:	mov    rax,QWORD PTR [rsp+0x20]
  4257f6:	mov    rbp,QWORD PTR [rsi+rax*1]
  4257fa:	test   rbp,rbp
  4257fd:	je     0x425810
  4257ff:	mov    rcx,QWORD PTR [rbp+0x0]
  425803:	call   0x40215c
  425808:	mov    rcx,rbp
  42580b:	call   0x40215c
  425810:	test   ebx,ebx
  425812:	jne    0x4257ea
  425814:	jmp    0x425d83
  425819:	mov    QWORD PTR [rsp+0x68],0x0
  425822:	mov    DWORD PTR [rsp+0x70],0x0
  42582a:	mov    DWORD PTR [rsp+0x74],0x0
  425832:	lea    rdx,[rsp+0x68]
  425837:	mov    rcx,r15
  42583a:	call   0x40c464
  42583f:	movsxd rax,ebx
  425842:	mov    rdi,QWORD PTR [rsp+0x40]
  425847:	test   ebx,ebx
  425849:	je     0x425873
  42584b:	lea    rbp,[rdi+rax*8]
  42584f:	add    ebx,r13d
  425852:	sub    rbp,0x8
  425856:	mov    rsi,QWORD PTR [rbp+0x0]
  42585a:	test   rsi,rsi
  42585d:	je     0x42586f
  42585f:	mov    rcx,rsi
  425862:	call   0x41b980
  425867:	mov    rcx,rsi
  42586a:	call   0x40215c
  42586f:	test   ebx,ebx
  425871:	jne    0x42584f
  425873:	xor    ebx,ebx
  425875:	mov    DWORD PTR [rsp+0x48],ebx
  425879:	xor    ebp,ebp
  42587b:	mov    DWORD PTR [rsp+0x38],ebp
  42587f:	xor    esi,esi
  425881:	cmp    DWORD PTR [rsp+0x70],ebx
  425885:	jbe    0x4258f9
  425887:	xor    r12d,r12d
  42588a:	mov    rax,QWORD PTR [rsp+0x68]
  42588f:	mov    r8,QWORD PTR [r12+rax*1]
  425893:	xor    ecx,ecx
  425895:	mov    edi,ebp
  425897:	test   ebp,ebp
  425899:	je     0x4258b7
  42589b:	lea    edx,[rdi+rcx*1]
  42589e:	shr    edx,1
  4258a0:	cmp    r8,QWORD PTR [r14+rdx*8]
  4258a4:	je     0x4258ce
  4258a6:	cmp    r8,QWORD PTR [r14+rdx*8]
  4258aa:	jae    0x4258b0
  4258ac:	mov    edi,edx
  4258ae:	jmp    0x4258b3
  4258b0:	lea    ecx,[rdx+0x1]
  4258b3:	cmp    ecx,edi
  4258b5:	jne    0x42589b
  4258b7:	mov    edx,edi
  4258b9:	lea    rcx,[rsp+0x30]
  4258be:	call   0x40456c
  4258c3:	mov    edx,edi
  4258c5:	mov    ebp,DWORD PTR [rsp+0x38]
  4258c9:	mov    r14,QWORD PTR [rsp+0x30]
  4258ce:	cmp    ebp,ebx
  4258d0:	je     0x4258e8
  4258d2:	lea    r8,[rsp+0x88]
  4258da:	lea    rcx,[rsp+0x40]
  4258df:	call   0x425444
  4258e4:	mov    ebx,DWORD PTR [rsp+0x48]
  4258e8:	inc    esi
  4258ea:	add    r12,0x8
  4258ee:	cmp    esi,DWORD PTR [rsp+0x70]
  4258f2:	jb     0x42588a
  4258f4:	mov    rdi,QWORD PTR [rsp+0x40]
  4258f9:	mov    rcx,QWORD PTR [rsp+0x68]
  4258fe:	call   0x40215c
  425903:	nop
  425904:	lea    rcx,[rsp+0x88]
  42590c:	call   0x41b980
  425911:	jmp    0x4259b3
  425916:	lea    rcx,[rsp+0x88]
  42591e:	call   0x41b980
  425923:	nop
  425924:	movsxd rax,ebx
  425927:	mov    r13d,0xffffffff
  42592d:	mov    rbp,QWORD PTR [rsp+0x40]
  425932:	test   ebx,ebx
  425934:	je     0x42595e
  425936:	lea    rdi,[rbp+rax*8+0x0]
  42593b:	add    ebx,r13d
  42593e:	sub    rdi,0x8
  425942:	mov    rsi,QWORD PTR [rdi]
  425945:	test   rsi,rsi
  425948:	je     0x42595a
  42594a:	mov    rcx,rsi
  42594d:	call   0x41b980
  425952:	mov    rcx,rsi
  425955:	call   0x40215c
  42595a:	test   ebx,ebx
  42595c:	jne    0x42593b
  42595e:	mov    rcx,rbp
  425961:	call   0x40215c
  425966:	nop
  425967:	mov    rcx,r14
  42596a:	call   0x40215c
  42596f:	nop
  425970:	movsxd rbx,DWORD PTR [rsp+0x28]
  425975:	mov    rdi,rbx
  425978:	test   ebx,ebx
  42597a:	je     0x4259a9
  42597c:	shl    rdi,0x3
  425980:	add    ebx,r13d
  425983:	sub    rdi,0x8
  425987:	mov    rax,QWORD PTR [rsp+0x20]
  42598c:	mov    rsi,QWORD PTR [rdi+rax*1]
  425990:	test   rsi,rsi
  425993:	je     0x4259a5
  425995:	mov    rcx,QWORD PTR [rsi]
  425998:	call   0x40215c
  42599d:	mov    rcx,rsi
  4259a0:	call   0x40215c
  4259a5:	test   ebx,ebx
  4259a7:	jne    0x425980
  4259a9:	mov    edi,0x80004001
  4259ae:	jmp    0x425d83
  4259b3:	xor    r15d,r15d
  4259b6:	test   ebp,ebp
  4259b8:	je     0x425d94
  4259be:	mov    rsi,rdi
  4259c1:	mov    QWORD PTR [rsp+0x80],rdi
  4259c9:	mov    r12,r14
  4259cc:	sub    r12,rdi
  4259cf:	mov    QWORD PTR [rsp+0x78],r12
  4259d4:	mov    QWORD PTR [rsp+0x138],0x0
  4259e0:	lea    rcx,[rsp+0x50]
  4259e5:	call   0x402b34
  4259ea:	nop
  4259eb:	lea    r9,[rsp+0x138]
  4259f3:	lea    r8,[rsp+0x50]
  4259f8:	mov    rdx,QWORD PTR [r12+rsi*1]
  4259fc:	mov    rcx,QWORD PTR [rsp+0x128]
  425a04:	call   0x40bd64
  425a09:	mov    r12d,eax
  425a0c:	test   eax,eax
  425a0e:	jne    0x425b71
  425a14:	mov    rcx,QWORD PTR [rsp+0x138]
  425a1c:	test   rcx,rcx
  425a1f:	je     0x425c13
  425a25:	mov    rsi,QWORD PTR [rsi]
  425a28:	mov    QWORD PTR [rsp+0x60],0x0
  425a31:	mov    rax,QWORD PTR [rcx]
  425a34:	lea    r8,[rsp+0x60]
  425a39:	lea    rdx,[rip+0x2e338]        # 0x453d78
  425a40:	call   QWORD PTR [rax]
  425a42:	mov    rcx,QWORD PTR [rsp+0x60]
  425a47:	test   rcx,rcx
  425a4a:	je     0x425a6a
  425a4c:	xor    r8d,r8d
  425a4f:	mov    rdx,rcx
  425a52:	mov    rcx,rsi
  425a55:	call   0x40d99c
  425a5a:	mov    r12d,eax
  425a5d:	test   eax,eax
  425a5f:	jne    0x425c31
  425a65:	mov    rcx,QWORD PTR [rsp+0x60]
  425a6a:	test   rcx,rcx
  425a6d:	je     0x425a75
  425a6f:	mov    rax,QWORD PTR [rcx]
  425a72:	call   QWORD PTR [rax+0x10]
  425a75:	mov    rcx,QWORD PTR [rsp+0x138]
  425a7d:	mov    rax,QWORD PTR [rcx]
  425a80:	call   QWORD PTR [rax+0x30]
  425a83:	mov    r14d,eax
  425a86:	cmp    eax,0x40
  425a89:	ja     0x425ce4
  425a8f:	mov    ecx,0x120
  425a94:	call   0x402130
  425a99:	mov    rsi,rax
  425a9c:	mov    QWORD PTR [rsp+0x68],rax
  425aa1:	test   rax,rax
  425aa4:	je     0x425ab9
  425aa6:	mov    QWORD PTR [rax],0x0
  425aad:	lea    rcx,[rax+0x8]
  425ab1:	call   0x402b34
  425ab6:	nop
  425ab7:	jmp    0x425abb
  425ab9:	xor    esi,esi
  425abb:	mov    rcx,QWORD PTR [rsp+0x120]
  425ac3:	add    rcx,0x8
  425ac7:	mov    rdx,rsi
  425aca:	call   0x4010c8
  425acf:	mov    r12,QWORD PTR [rsp+0x138]
  425ad7:	test   r12,r12
  425ada:	je     0x425ae6
  425adc:	mov    rax,QWORD PTR [r12]
  425ae0:	mov    rcx,r12
  425ae3:	call   QWORD PTR [rax+0x8]
  425ae6:	mov    rcx,QWORD PTR [rsi]
  425ae9:	test   rcx,rcx
  425aec:	je     0x425af4
  425aee:	mov    rax,QWORD PTR [rcx]
  425af1:	call   QWORD PTR [rax+0x10]
  425af4:	mov    QWORD PTR [rsi],r12
  425af7:	lea    rcx,[rsi+0x8]
  425afb:	lea    rdx,[rsp+0x50]
  425b00:	call   0x402c48
  425b05:	mov    DWORD PTR [rsi+0x18],r14d
  425b09:	add    rsi,0x1c
  425b0d:	mov    r12d,0x4
  425b13:	mov    r8,r14
  425b16:	xor    edx,edx
  425b18:	mov    rcx,rsi
  425b1b:	call   0x44b780
  425b20:	add    rsi,0x40
  425b24:	dec    r12
  425b27:	jne    0x425b13
  425b29:	mov    rcx,QWORD PTR [rsp+0x50]
  425b2e:	call   0x40215c
  425b33:	nop
  425b34:	mov    rcx,QWORD PTR [rsp+0x138]
  425b3c:	test   rcx,rcx
  425b3f:	je     0x425b47
  425b41:	mov    rax,QWORD PTR [rcx]
  425b44:	call   QWORD PTR [rax+0x10]
  425b47:	inc    r15d
  425b4a:	mov    rsi,QWORD PTR [rsp+0x80]
  425b52:	add    rsi,0x8
  425b56:	mov    QWORD PTR [rsp+0x80],rsi
  425b5e:	cmp    r15d,ebp
  425b61:	mov    r12,QWORD PTR [rsp+0x78]
  425b66:	jb     0x4259d4
  425b6c:	jmp    0x425d94
  425b71:	mov    rcx,QWORD PTR [rsp+0x50]
  425b76:	call   0x40215c
  425b7b:	nop
  425b7c:	mov    rcx,QWORD PTR [rsp+0x138]
  425b84:	test   rcx,rcx
  425b87:	je     0x425b90
  425b89:	mov    rax,QWORD PTR [rcx]
  425b8c:	call   QWORD PTR [rax+0x10]
  425b8f:	nop
  425b90:	movsxd rax,ebx
  425b93:	test   ebx,ebx
  425b95:	je     0x425bbe
  425b97:	lea    rsi,[rdi+rax*8]
  425b9b:	add    ebx,r13d
  425b9e:	sub    rsi,0x8
  425ba2:	mov    rbp,QWORD PTR [rsi]
  425ba5:	test   rbp,rbp
  425ba8:	je     0x425bba
  425baa:	mov    rcx,rbp
  425bad:	call   0x41b980
  425bb2:	mov    rcx,rbp
  425bb5:	call   0x40215c
  425bba:	test   ebx,ebx
  425bbc:	jne    0x425b9b
  425bbe:	mov    rcx,rdi
  425bc1:	call   0x40215c
  425bc6:	nop
  425bc7:	mov    rcx,QWORD PTR [rsp+0x30]
  425bcc:	call   0x40215c
  425bd1:	nop
  425bd2:	movsxd rbx,DWORD PTR [rsp+0x28]
  425bd7:	mov    rdi,rbx
  425bda:	test   ebx,ebx
  425bdc:	je     0x425c0b
  425bde:	shl    rdi,0x3
  425be2:	add    ebx,r13d
  425be5:	sub    rdi,0x8
  425be9:	mov    rax,QWORD PTR [rsp+0x20]
  425bee:	mov    rsi,QWORD PTR [rdi+rax*1]
  425bf2:	test   rsi,rsi
  425bf5:	je     0x425c07
  425bf7:	mov    rcx,QWORD PTR [rsi]
  425bfa:	call   0x40215c
  425bff:	mov    rcx,rsi
  425c02:	call   0x40215c
  425c07:	test   ebx,ebx
  425c09:	jne    0x425be2
  425c0b:	mov    edi,r12d
  425c0e:	jmp    0x425d83
  425c13:	lea    rax,[rip+0x2a1ae]        # 0x44fdc8
  425c1a:	mov    QWORD PTR [rsp+0x78],rax
  425c1f:	lea    rdx,[rip+0x414ca]        # 0x4670f0
  425c26:	lea    rcx,[rsp+0x78]
  425c2b:	call   0x44b71e
  425c30:	int3   
  425c31:	mov    rcx,QWORD PTR [rsp+0x60]
  425c36:	test   rcx,rcx
  425c39:	je     0x425c42
  425c3b:	mov    rax,QWORD PTR [rcx]
  425c3e:	call   QWORD PTR [rax+0x10]
  425c41:	nop
  425c42:	mov    rcx,QWORD PTR [rsp+0x50]
  425c47:	call   0x40215c
  425c4c:	nop
  425c4d:	mov    rcx,QWORD PTR [rsp+0x138]
  425c55:	test   rcx,rcx
  425c58:	je     0x425c61
  425c5a:	mov    rax,QWORD PTR [rcx]
  425c5d:	call   QWORD PTR [rax+0x10]
  425c60:	nop
  425c61:	movsxd rax,ebx
  425c64:	test   ebx,ebx
  425c66:	je     0x425c8f
  425c68:	lea    rsi,[rdi+rax*8]
  425c6c:	add    ebx,r13d
  425c6f:	sub    rsi,0x8
  425c73:	mov    rbp,QWORD PTR [rsi]
  425c76:	test   rbp,rbp
  425c79:	je     0x425c8b
  425c7b:	mov    rcx,rbp
  425c7e:	call   0x41b980
  425c83:	mov    rcx,rbp
  425c86:	call   0x40215c
  425c8b:	test   ebx,ebx
  425c8d:	jne    0x425c6c
  425c8f:	mov    rcx,rdi
  425c92:	call   0x40215c
  425c97:	nop
  425c98:	mov    rcx,QWORD PTR [rsp+0x30]
  425c9d:	call   0x40215c
  425ca2:	nop
  425ca3:	movsxd rbx,DWORD PTR [rsp+0x28]
  425ca8:	mov    rdi,rbx
  425cab:	test   ebx,ebx
  425cad:	je     0x425cdc
  425caf:	shl    rdi,0x3
  425cb3:	add    ebx,r13d
  425cb6:	sub    rdi,0x8
  425cba:	mov    rax,QWORD PTR [rsp+0x20]
  425cbf:	mov    rsi,QWORD PTR [rdi+rax*1]
  425cc3:	test   rsi,rsi
  425cc6:	je     0x425cd8
  425cc8:	mov    rcx,QWORD PTR [rsi]
  425ccb:	call   0x40215c
  425cd0:	mov    rcx,rsi
  425cd3:	call   0x40215c
  425cd8:	test   ebx,ebx
  425cda:	jne    0x425cb3
  425cdc:	mov    edi,r12d
  425cdf:	jmp    0x425d83
  425ce4:	mov    rcx,QWORD PTR [rsp+0x50]
  425ce9:	call   0x40215c
  425cee:	nop
  425cef:	mov    rcx,QWORD PTR [rsp+0x138]
  425cf7:	test   rcx,rcx
  425cfa:	je     0x425d03
  425cfc:	mov    rax,QWORD PTR [rcx]
  425cff:	call   QWORD PTR [rax+0x10]
  425d02:	nop
  425d03:	movsxd rax,ebx
  425d06:	test   ebx,ebx
  425d08:	je     0x425d31
  425d0a:	lea    rsi,[rdi+rax*8]
  425d0e:	add    ebx,r13d
  425d11:	sub    rsi,0x8
  425d15:	mov    rbp,QWORD PTR [rsi]
  425d18:	test   rbp,rbp
  425d1b:	je     0x425d2d
  425d1d:	mov    rcx,rbp
  425d20:	call   0x41b980
  425d25:	mov    rcx,rbp
  425d28:	call   0x40215c
  425d2d:	test   ebx,ebx
  425d2f:	jne    0x425d0e
  425d31:	mov    rcx,rdi
  425d34:	call   0x40215c
  425d39:	nop
  425d3a:	mov    rcx,QWORD PTR [rsp+0x30]
  425d3f:	call   0x40215c
  425d44:	nop
  425d45:	movsxd rbx,DWORD PTR [rsp+0x28]
  425d4a:	mov    rdi,rbx
  425d4d:	test   ebx,ebx
  425d4f:	je     0x425d7e
  425d51:	shl    rdi,0x3
  425d55:	add    ebx,r13d
  425d58:	sub    rdi,0x8
  425d5c:	mov    rax,QWORD PTR [rsp+0x20]
  425d61:	mov    rsi,QWORD PTR [rdi+rax*1]
  425d65:	test   rsi,rsi
  425d68:	je     0x425d7a
  425d6a:	mov    rcx,QWORD PTR [rsi]
  425d6d:	call   0x40215c
  425d72:	mov    rcx,rsi
  425d75:	call   0x40215c
  425d7a:	test   ebx,ebx
  425d7c:	jne    0x425d55
  425d7e:	mov    edi,0x80004001
  425d83:	mov    rcx,QWORD PTR [rsp+0x20]
  425d88:	call   0x40215c
  425d8d:	mov    eax,edi
  425d8f:	jmp    0x425e1b
  425d94:	movsxd rax,ebx
  425d97:	test   ebx,ebx
  425d99:	je     0x425dc2
  425d9b:	lea    rsi,[rdi+rax*8]
  425d9f:	add    ebx,r13d
  425da2:	sub    rsi,0x8
  425da6:	mov    rbp,QWORD PTR [rsi]
  425da9:	test   rbp,rbp
  425dac:	je     0x425dbe
  425dae:	mov    rcx,rbp
  425db1:	call   0x41b980
  425db6:	mov    rcx,rbp
  425db9:	call   0x40215c
  425dbe:	test   ebx,ebx
  425dc0:	jne    0x425d9f
  425dc2:	mov    rcx,rdi
  425dc5:	call   0x40215c
  425dca:	nop
  425dcb:	mov    rcx,QWORD PTR [rsp+0x30]
  425dd0:	call   0x40215c
  425dd5:	nop
  425dd6:	movsxd rbx,DWORD PTR [rsp+0x28]
  425ddb:	mov    rdi,rbx
  425dde:	test   ebx,ebx
  425de0:	je     0x425e0f
  425de2:	shl    rdi,0x3
  425de6:	add    ebx,r13d
  425de9:	sub    rdi,0x8
  425ded:	mov    rax,QWORD PTR [rsp+0x20]
  425df2:	mov    rsi,QWORD PTR [rdi+rax*1]
  425df6:	test   rsi,rsi
  425df9:	je     0x425e0b
  425dfb:	mov    rcx,QWORD PTR [rsi]
  425dfe:	call   0x40215c
  425e03:	mov    rcx,rsi
  425e06:	call   0x40215c
  425e0b:	test   ebx,ebx
  425e0d:	jne    0x425de6
  425e0f:	mov    rcx,QWORD PTR [rsp+0x20]
  425e14:	call   0x40215c
  425e19:	xor    eax,eax
  425e1b:	add    rsp,0xd8
  425e22:	pop    r15
  425e24:	pop    r14
  425e26:	pop    r13
  425e28:	pop    r12
  425e2a:	pop    rdi
  425e2b:	pop    rsi
  425e2c:	pop    rbp
  425e2d:	pop    rbx
  425e2e:	ret    
  425e2f:	int3   
  425e30:	int3   
  425e31:	int3   
  425e32:	int3   
  425e33:	int3   
  425e34:	rex.W push rbp
  425e36:	sub    rsp,0x20
  425e3a:	mov    rbp,rdx
  425e3d:	lea    rcx,[rbp+0x20]
  425e41:	call   0x4047cc
  425e46:	add    rsp,0x20
  425e4a:	pop    rbp
  425e4b:	ret    
  425e4c:	int3   
  425e4d:	int3   
  425e4e:	int3   
  425e4f:	int3   
  425e50:	int3   
  425e51:	int3   
  425e52:	int3   
  425e53:	int3   
  425e54:	rex.W push rbp
  425e56:	sub    rsp,0x20
  425e5a:	mov    rbp,rdx
  425e5d:	lea    rcx,[rbp+0x50]
  425e61:	call   0x401000
  425e66:	add    rsp,0x20
  425e6a:	pop    rbp
  425e6b:	ret    
  425e6c:	int3   
  425e6d:	int3   
  425e6e:	int3   
  425e6f:	int3   
  425e70:	int3   
  425e71:	int3   
  425e72:	int3   
  425e73:	int3   
  425e74:	rex.W push rbp
  425e76:	sub    rsp,0x20
  425e7a:	mov    rbp,rdx
  425e7d:	mov    rcx,QWORD PTR [rbp+0x138]
  425e84:	call   0x40215c
  425e89:	add    rsp,0x20
  425e8d:	pop    rbp
  425e8e:	ret    
  425e8f:	int3   
  425e90:	int3   
  425e91:	int3   
  425e92:	int3   
  425e93:	int3   
  425e94:	rex.W push rbp
  425e96:	sub    rsp,0x20
  425e9a:	mov    rbp,rdx
  425e9d:	lea    rcx,[rbp+0x30]
  425ea1:	call   0x401000
  425ea6:	add    rsp,0x20
  425eaa:	pop    rbp
  425eab:	ret    
  425eac:	int3   
  425ead:	int3   
  425eae:	int3   
  425eaf:	int3   
  425eb0:	int3   
  425eb1:	int3   
  425eb2:	int3   
  425eb3:	int3   
  425eb4:	rex.W push rbp
  425eb6:	sub    rsp,0x20
  425eba:	mov    rbp,rdx
  425ebd:	lea    rcx,[rbp+0x40]
  425ec1:	call   0x425520
  425ec6:	add    rsp,0x20
  425eca:	pop    rbp
  425ecb:	ret    
  425ecc:	int3   
  425ecd:	int3   
  425ece:	int3   
  425ecf:	int3   
  425ed0:	int3   
  425ed1:	int3   
  425ed2:	int3   
  425ed3:	int3   
  425ed4:	rex.W push rbp
  425ed6:	sub    rsp,0x20
  425eda:	mov    rbp,rdx
  425edd:	lea    rcx,[rbp+0x88]
  425ee4:	call   0x41b92c
  425ee9:	add    rsp,0x20
  425eed:	pop    rbp
  425eee:	ret    
  425eef:	int3   
  425ef0:	int3   
  425ef1:	int3   
  425ef2:	int3   
  425ef3:	int3   
  425ef4:	rex.W push rbp
  425ef6:	sub    rsp,0x20
  425efa:	mov    rbp,rdx
  425efd:	lea    rcx,[rbp+0x88]
  425f04:	add    rcx,0x10
  425f08:	call   0x401000
  425f0d:	add    rsp,0x20
  425f11:	pop    rbp
  425f12:	ret    
  425f13:	int3   
  425f14:	rex.W push rbp
  425f16:	sub    rsp,0x20
  425f1a:	mov    rbp,rdx
  425f1d:	lea    rcx,[rbp+0x88]
  425f24:	call   0x41b980
  425f29:	add    rsp,0x20
  425f2d:	pop    rbp
  425f2e:	ret    
  425f2f:	int3   
  425f30:	int3   
  425f31:	int3   
  425f32:	int3   
  425f33:	int3   
  425f34:	rex.W push rbp
  425f36:	sub    rsp,0x20
  425f3a:	mov    rbp,rdx
  425f3d:	lea    rcx,[rbp+0x68]
  425f41:	call   0x401000
  425f46:	add    rsp,0x20
  425f4a:	pop    rbp
  425f4b:	ret    
  425f4c:	int3   
  425f4d:	int3   
  425f4e:	int3   
  425f4f:	int3   
  425f50:	int3   
  425f51:	int3   
  425f52:	int3   
  425f53:	int3   
  425f54:	rex.W push rbp
  425f56:	sub    rsp,0x20
  425f5a:	mov    rbp,rdx
  425f5d:	lea    rcx,[rbp+0x138]
  425f64:	call   0x4176b4
  425f69:	add    rsp,0x20
  425f6d:	pop    rbp
  425f6e:	ret    
  425f6f:	int3   
  425f70:	int3   
  425f71:	int3   
  425f72:	int3   
  425f73:	int3   
  425f74:	rex.W push rbp
  425f76:	sub    rsp,0x20
  425f7a:	mov    rbp,rdx
  425f7d:	lea    rcx,[rbp+0x50]
  425f81:	call   0x401000
  425f86:	add    rsp,0x20
  425f8a:	pop    rbp
  425f8b:	ret    
  425f8c:	int3   
  425f8d:	int3   
  425f8e:	int3   
  425f8f:	int3   
  425f90:	int3   
  425f91:	int3   
  425f92:	int3   
  425f93:	int3   
  425f94:	rex.W push rbp
  425f96:	sub    rsp,0x20
  425f9a:	mov    rbp,rdx
  425f9d:	lea    rcx,[rbp+0x60]
  425fa1:	call   0x4176b4
  425fa6:	add    rsp,0x20
  425faa:	pop    rbp
  425fab:	ret    
  425fac:	int3   
  425fad:	int3   
  425fae:	int3   
  425faf:	int3   
  425fb0:	int3   
  425fb1:	int3   
  425fb2:	int3   
  425fb3:	int3   
  425fb4:	rex.W push rbp
  425fb6:	sub    rsp,0x20
  425fba:	mov    rbp,rdx
  425fbd:	mov    rcx,QWORD PTR [rbp+0x68]
  425fc1:	call   0x40215c
  425fc6:	add    rsp,0x20
  425fca:	pop    rbp
  425fcb:	ret    
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	int3   
  425fd1:	int3   
  425fd2:	int3   
  425fd3:	int3   
  425fd4:	rex.W push rbp
  425fd6:	sub    rsp,0x20
  425fda:	mov    rbp,rdx
  425fdd:	mov    rcx,QWORD PTR [rbp+0x68]
  425fe1:	call   0x4176b4
  425fe6:	add    rsp,0x20
  425fea:	pop    rbp
  425feb:	ret    
  425fec:	rex.W push rbx
  425fee:	push   rbp
  425fef:	push   rsi
  425ff0:	push   rdi
  425ff1:	push   r12
  425ff3:	push   r13
  425ff5:	push   r14
  425ff7:	push   r15
  425ff9:	sub    rsp,0x218
  426000:	mov    QWORD PTR [rsp+0x138],0xfffffffffffffffe
  42600c:	mov    rdi,r9
  42600f:	mov    r13,r8
  426012:	mov    rsi,rdx
  426015:	mov    r12,rcx
  426018:	lea    rcx,[rsp+0x140]
  426020:	call   0x420840
  426025:	nop
  426026:	mov    rbp,QWORD PTR [rsp+0x280]
  42602e:	mov    QWORD PTR [rsp+0x200],rbp
  426036:	xor    r15d,r15d
  426039:	cmp    BYTE PTR [r13+0x11],r15b
  42603d:	je     0x426131
  426043:	lea    rcx,[rsp+0xd0]
  42604b:	call   0x403150
  426050:	mov    QWORD PTR [rsp+0xe0],r15
  426058:	mov    QWORD PTR [rsp+0xe8],r15
  426060:	mov    QWORD PTR [rsp+0xf0],r15
  426068:	mov    QWORD PTR [rsp+0xf8],r15
  426070:	lea    rax,[r15-0x1]
  426074:	mov    DWORD PTR [rsp+0x104],eax
  42607b:	mov    DWORD PTR [rsp+0x108],eax
  426082:	mov    DWORD PTR [rsp+0x10c],eax
  426089:	mov    BYTE PTR [rsp+0x110],r15b
  426091:	mov    QWORD PTR [rsp+0xb0],rax
  426099:	mov    DWORD PTR [rsp+0x100],r15d
  4260a1:	mov    DWORD PTR [rsp+0xc8],r15d
  4260a9:	mov    DWORD PTR [rsp+0xcc],r15d
  4260b1:	mov    rax,QWORD PTR [rsp+0xc8]
  4260b9:	mov    QWORD PTR [rsp+0xc0],rax
  4260c1:	mov    QWORD PTR [rsp+0xb8],rax
  4260c9:	lea    ecx,[r15+0x68]
  4260cd:	call   0x402130
  4260d2:	mov    QWORD PTR [rsp+0x280],rax
  4260da:	cmp    rax,r15
  4260dd:	je     0x4260f1
  4260df:	lea    rdx,[rsp+0xb0]
  4260e7:	mov    rcx,rax
  4260ea:	call   0x41fabc
  4260ef:	jmp    0x4260f4
  4260f1:	mov    rax,r15
  4260f4:	mov    rdx,rax
  4260f7:	lea    rcx,[rsp+0x170]
  4260ff:	call   0x4010c8
  426104:	nop
  426105:	mov    rcx,QWORD PTR [rsp+0xf0]
  42610d:	call   0x40215c
  426112:	mov    rcx,QWORD PTR [rsp+0xe0]
  42611a:	call   0x40215c
  42611f:	mov    rcx,QWORD PTR [rsp+0xd0]
  426127:	call   0x40215c
  42612c:	jmp    0x4261c0
  426131:	mov    rax,QWORD PTR [rbp+0x0]
  426135:	mov    rcx,rbp
  426138:	call   QWORD PTR [rax+0x10]
  42613b:	mov    ebx,eax
  42613d:	cmp    eax,r15d
  426140:	je     0x426147
  426142:	jmp    0x426764
  426147:	mov    al,BYTE PTR [r13+0x12]
  42614b:	mov    BYTE PTR [rsp+0x181],al
  426152:	lea    rcx,[rsp+0x40]
  426157:	call   0x403150
  42615c:	nop
  42615d:	lea    r9,[rsp+0x140]
  426165:	mov    r8,rax
  426168:	mov    edx,DWORD PTR [r13+0x14]
  42616c:	mov    rcx,rsi
  42616f:	call   0x42287c
  426174:	mov    ebx,eax
  426176:	mov    rcx,QWORD PTR [rsp+0x40]
  42617b:	call   0x40215c
  426180:	cmp    ebx,r15d
  426183:	je     0x4261a2
  426185:	cmp    ebx,0x80004004
  42618b:	je     0x42619d
  42618d:	lea    rdx,[rip+0x29c6c]        # 0x44fe00
  426194:	mov    rcx,rdi
  426197:	call   0x402be4
  42619c:	nop
  42619d:	jmp    0x426764
  4261a2:	mov    rax,QWORD PTR [rbp+0x0]
  4261a6:	lea    rdx,[rsp+0x188]
  4261ae:	mov    rcx,rbp
  4261b1:	call   QWORD PTR [rax+0x18]
  4261b4:	cmp    eax,r15d
  4261b7:	je     0x4261c0
  4261b9:	mov    ebx,eax
  4261bb:	jmp    0x426764
  4261c0:	lea    rax,[rip+0x29ba1]        # 0x44fd68
  4261c7:	mov    QWORD PTR [rsp+0x50],rax
  4261cc:	mov    QWORD PTR [rsp+0x58],r15
  4261d1:	mov    DWORD PTR [rsp+0x60],r15d
  4261d6:	mov    DWORD PTR [rsp+0x64],r15d
  4261db:	mov    r8,r13
  4261de:	mov    rdx,r12
  4261e1:	lea    rcx,[rsp+0x50]
  4261e6:	call   0x425574
  4261eb:	mov    ebx,eax
  4261ed:	cmp    eax,r15d
  4261f0:	je     0x426202
  4261f2:	lea    rcx,[rsp+0x58]
  4261f7:	call   0x4253b0
  4261fc:	nop
  4261fd:	jmp    0x426764
  426202:	mov    QWORD PTR [rsp+0x88],r15
  42620a:	mov    QWORD PTR [rsp+0x80],r15
  426212:	mov    QWORD PTR [rsp+0x78],r15
  426217:	mov    QWORD PTR [rsp+0x70],r15
  42621c:	mov    QWORD PTR [rsp+0x68],r15
  426221:	mov    rax,QWORD PTR [rsp+0x1b0]
  426229:	mov    QWORD PTR [rsp+0x90],rax
  426231:	cmp    BYTE PTR [r13+0x11],r15b
  426235:	je     0x42625d
  426237:	mov    rax,QWORD PTR [rbp+0x0]
  42623b:	mov    edx,0x1
  426240:	mov    rcx,rbp
  426243:	call   QWORD PTR [rax+0x20]
  426246:	mov    ebx,eax
  426248:	cmp    eax,r15d
  42624b:	je     0x426291
  42624d:	lea    rcx,[rsp+0x58]
  426252:	call   0x4253b0
  426257:	nop
  426258:	jmp    0x426764
  42625d:	mov    rcx,QWORD PTR [rsp+0x1a0]
  426265:	mov    rdx,QWORD PTR [rsp+0x1a8]
  42626d:	add    rdx,rcx
  426270:	mov    rax,QWORD PTR [rbp+0x0]
  426274:	mov    rcx,rbp
  426277:	call   QWORD PTR [rax+0x28]
  42627a:	mov    ebx,eax
  42627c:	cmp    eax,r15d
  42627f:	je     0x426291
  426281:	lea    rcx,[rsp+0x58]
  426286:	call   0x4253b0
  42628b:	nop
  42628c:	jmp    0x426764
  426291:	mov    ecx,0x8000
  426296:	call   0x44ad00
  42629b:	mov    rdi,rax
  42629e:	mov    QWORD PTR [rsp+0x120],rax
  4262a6:	cmp    rax,r15
  4262a9:	setne  al
  4262ac:	cmp    al,r15b
  4262af:	jne    0x4262cf
  4262b1:	mov    rcx,rdi
  4262b4:	call   0x44ad20
  4262b9:	nop
  4262ba:	lea    rcx,[rsp+0x58]
  4262bf:	call   0x4253b0
  4262c4:	nop
  4262c5:	mov    ebx,0x8007000e
  4262ca:	jmp    0x426764
  4262cf:	mov    QWORD PTR [rsp+0x38],r15
  4262d4:	mov    rax,QWORD PTR [rbp+0x0]
  4262d8:	lea    rdx,[rsp+0x50]
  4262dd:	mov    rcx,rbp
  4262e0:	call   QWORD PTR [rax+0x40]
  4262e3:	mov    ebx,eax
  4262e5:	cmp    eax,r15d
  4262e8:	je     0x426303
  4262ea:	mov    rcx,rdi
  4262ed:	call   0x44ad20
  4262f2:	nop
  4262f3:	lea    rcx,[rsp+0x58]
  4262f8:	call   0x4253b0
  4262fd:	nop
  4262fe:	jmp    0x426764
  426303:	mov    r14d,r15d
  426306:	cmp    DWORD PTR [rsp+0x178],r15d
  42630e:	jbe    0x42673f
  426314:	mov    rsi,r15
  426317:	mov    QWORD PTR [rsp+0xa0],r15
  42631f:	mov    QWORD PTR [rsp+0xa8],r15
  426327:	lea    rcx,[rsp+0x28]
  42632c:	call   0x403150
  426331:	nop
  426332:	mov    r12b,r15b
  426335:	mov    DWORD PTR [rsp+0x20],r12d
  42633a:	mov    BYTE PTR [rsp+0x280],r15b
  426342:	cmp    BYTE PTR [r13+0x11],r15b
  426346:	je     0x426388
  426348:	mov    ecx,0x10
  42634d:	call   0x402130
  426352:	mov    rbx,rax
  426355:	cmp    rax,r15
  426358:	je     0x42636a
  42635a:	mov    DWORD PTR [rax+0x8],r15d
  42635e:	lea    rax,[rip+0x299bb]        # 0x44fd20
  426365:	mov    QWORD PTR [rbx],rax
  426368:	jmp    0x42636d
  42636a:	mov    rbx,r15
  42636d:	cmp    rbx,r15
  426370:	je     0x42637b
  426372:	mov    rax,QWORD PTR [rbx]
  426375:	mov    rcx,rbx
  426378:	call   QWORD PTR [rax+0x8]
  42637b:	mov    QWORD PTR [rsp+0xa8],rbx
  426383:	jmp    0x4264b8
  426388:	mov    ecx,0x78
  42638d:	call   0x402130
  426392:	mov    QWORD PTR [rsp+0x280],rax
  42639a:	cmp    rax,r15
  42639d:	je     0x4263ac
  42639f:	mov    rcx,rax
  4263a2:	call   0x40d02c
  4263a7:	mov    rbx,rax
  4263aa:	jmp    0x4263af
  4263ac:	mov    rbx,r15
  4263af:	cmp    rbx,r15
  4263b2:	je     0x4263bd
  4263b4:	mov    rax,QWORD PTR [rbx]
  4263b7:	mov    rcx,rbx
  4263ba:	call   QWORD PTR [rax+0x8]
  4263bd:	mov    QWORD PTR [rsp+0xa8],rbx
  4263c5:	mov    rax,QWORD PTR [rsp+0x170]
  4263cd:	mov    rcx,QWORD PTR [rsi+rax*1]
  4263d1:	mov    r12d,DWORD PTR [rcx+0x50]
  4263d5:	shr    r12d,0x4
  4263d9:	and    r12b,0x1
  4263dd:	mov    DWORD PTR [rsp+0x20],r12d
  4263e2:	mov    al,BYTE PTR [rcx+0x60]
  4263e5:	mov    BYTE PTR [rsp+0x280],al
  4263ec:	mov    r8d,r14d
  4263ef:	lea    rdx,[rsp+0x128]
  4263f7:	lea    rcx,[rsp+0x140]
  4263ff:	call   0x41fd40
  426404:	nop
  426405:	mov    rdx,rax
  426408:	lea    rcx,[rsp+0x28]
  42640d:	call   0x4032f8
  426412:	nop
  426413:	mov    rcx,QWORD PTR [rsp+0x128]
  42641b:	call   0x40215c
  426420:	cmp    r12b,r15b
  426423:	jne    0x4264b8
  426429:	mov    r8d,r14d
  42642c:	lea    rdx,[rsp+0x40]
  426431:	lea    rcx,[rsp+0x140]
  426439:	call   0x41fd04
  42643e:	nop
  42643f:	lea    rcx,[rbx+0x28]
  426443:	mov    r8b,BYTE PTR [r13+0x10]
  426447:	mov    rdx,QWORD PTR [rsp+0x40]
  42644c:	call   0x409440
  426451:	cmp    al,r15b
  426454:	jne    0x4264ae
  426456:	mov    rsi,QWORD PTR [rbp+0x0]
  42645a:	call   QWORD PTR [rip+0x26d40]        # 0x44d1a0
  426460:	mov    r8d,eax
  426463:	lea    rdx,[rsp+0x40]
  426468:	mov    rcx,rbp
  42646b:	call   QWORD PTR [rsi+0x50]
  42646e:	mov    esi,eax
  426470:	inc    QWORD PTR [rsp+0x90]
  426478:	cmp    eax,0x1
  42647b:	jne    0x4265fc
  426481:	mov    rcx,QWORD PTR [rsp+0x40]
  426486:	call   0x40215c
  42648b:	nop
  42648c:	mov    rcx,QWORD PTR [rsp+0x28]
  426491:	call   0x40215c
  426496:	nop
  426497:	cmp    rbx,r15
  42649a:	je     0x4265d2
  4264a0:	mov    rax,QWORD PTR [rbx]
  4264a3:	mov    rcx,rbx
  4264a6:	call   QWORD PTR [rax+0x10]
  4264a9:	jmp    0x4265d2
  4264ae:	mov    rcx,QWORD PTR [rsp+0x40]
  4264b3:	call   0x40215c
  4264b8:	mov    rax,QWORD PTR [rbp+0x0]
  4264bc:	mov    r8b,r12b
  4264bf:	mov    rdx,QWORD PTR [rsp+0x28]
  4264c4:	mov    rcx,rbp
  4264c7:	call   QWORD PTR [rax+0x48]
  4264ca:	mov    esi,eax
  4264cc:	cmp    eax,r15d
  4264cf:	jne    0x42663c
  4264d5:	lea    rcx,[rsp+0x50]
  4264da:	call   0x425104
  4264df:	test   r12b,r12b
  4264e2:	jne    0x42655d
  4264e4:	xor    r12d,r12d
  4264e7:	test   r12b,r12b
  4264ea:	jne    0x426505
  4264ec:	mov    rax,QWORD PTR [rbp+0x0]
  4264f0:	lea    rdx,[rsp+0x38]
  4264f5:	mov    rcx,rbp
  4264f8:	call   QWORD PTR [rax+0x30]
  4264fb:	mov    esi,eax
  4264fd:	test   eax,eax
  4264ff:	jne    0x426671
  426505:	mov    rax,QWORD PTR [rbx]
  426508:	lea    r9,[rsp+0x270]
  426510:	mov    r8d,0x8000
  426516:	mov    rdx,rdi
  426519:	mov    rcx,rbx
  42651c:	call   QWORD PTR [rax+0x18]
  42651f:	mov    esi,eax
  426521:	test   eax,eax
  426523:	jne    0x4266a6
  426529:	mov    r8d,DWORD PTR [rsp+0x270]
  426531:	test   r8d,r8d
  426534:	je     0x426558
  426536:	mov    rdx,rdi
  426539:	lea    rcx,[rsp+0x50]
  42653e:	call   0x425154
  426543:	mov    r11d,DWORD PTR [rsp+0x270]
  42654b:	add    r15,r11
  42654e:	add    QWORD PTR [rsp+0x38],r11
  426553:	inc    r12d
  426556:	jmp    0x4264e7
  426558:	mov    r12d,DWORD PTR [rsp+0x20]
  42655d:	lea    r9,[rsp+0x28]
  426562:	mov    r8b,BYTE PTR [rsp+0x280]
  42656a:	mov    dl,r12b
  42656d:	lea    rcx,[rsp+0x50]
  426572:	call   0x4251a4
  426577:	mov    r11,QWORD PTR [rbp+0x0]
  42657b:	test   r12b,r12b
  42657e:	sete   r9b
  426582:	lea    r8,[rsp+0x50]
  426587:	mov    rdx,r15
  42658a:	mov    rcx,rbp
  42658d:	call   QWORD PTR [r11+0x58]
  426591:	mov    esi,eax
  426593:	xor    r15d,r15d
  426596:	cmp    eax,r15d
  426599:	jne    0x4266db
  42659f:	mov    rax,QWORD PTR [rbp+0x0]
  4265a3:	lea    rdx,[rsp+0x38]
  4265a8:	mov    rcx,rbp
  4265ab:	call   QWORD PTR [rax+0x30]
  4265ae:	mov    esi,eax
  4265b0:	cmp    eax,r15d
  4265b3:	jne    0x42670d
  4265b9:	mov    rcx,QWORD PTR [rsp+0x28]
  4265be:	call   0x40215c
  4265c3:	nop
  4265c4:	cmp    rbx,r15
  4265c7:	je     0x4265d2
  4265c9:	mov    rax,QWORD PTR [rbx]
  4265cc:	mov    rcx,rbx
  4265cf:	call   QWORD PTR [rax+0x10]
  4265d2:	inc    r14d
  4265d5:	mov    rsi,QWORD PTR [rsp+0xa0]
  4265dd:	add    rsi,0x8
  4265e1:	mov    QWORD PTR [rsp+0xa0],rsi
  4265e9:	cmp    r14d,DWORD PTR [rsp+0x178]
  4265f1:	jb     0x42631f
  4265f7:	jmp    0x42673f
  4265fc:	mov    rcx,QWORD PTR [rsp+0x40]
  426601:	call   0x40215c
  426606:	nop
  426607:	mov    rcx,QWORD PTR [rsp+0x28]
  42660c:	call   0x40215c
  426611:	nop
  426612:	cmp    rbx,r15
  426615:	je     0x426621
  426617:	mov    rax,QWORD PTR [rbx]
  42661a:	mov    rcx,rbx
  42661d:	call   QWORD PTR [rax+0x10]
  426620:	nop
  426621:	mov    rcx,rdi
  426624:	call   0x44ad20
  426629:	nop
  42662a:	lea    rcx,[rsp+0x58]
  42662f:	call   0x4253b0
  426634:	nop
  426635:	mov    ebx,esi
  426637:	jmp    0x426764
  42663c:	mov    rcx,QWORD PTR [rsp+0x28]
  426641:	call   0x40215c
  426646:	nop
  426647:	cmp    rbx,r15
  42664a:	je     0x426656
  42664c:	mov    rax,QWORD PTR [rbx]
  42664f:	mov    rcx,rbx
  426652:	call   QWORD PTR [rax+0x10]
  426655:	nop
  426656:	mov    rcx,rdi
  426659:	call   0x44ad20
  42665e:	nop
  42665f:	lea    rcx,[rsp+0x58]
  426664:	call   0x4253b0
  426669:	nop
  42666a:	mov    ebx,esi
  42666c:	jmp    0x426764
  426671:	mov    rcx,QWORD PTR [rsp+0x28]
  426676:	call   0x40215c
  42667b:	nop
  42667c:	test   rbx,rbx
  42667f:	je     0x42668b
  426681:	mov    rax,QWORD PTR [rbx]
  426684:	mov    rcx,rbx
  426687:	call   QWORD PTR [rax+0x10]
  42668a:	nop
  42668b:	mov    rcx,rdi
  42668e:	call   0x44ad20
  426693:	nop
  426694:	lea    rcx,[rsp+0x58]
  426699:	call   0x4253b0
  42669e:	nop
  42669f:	mov    ebx,esi
  4266a1:	jmp    0x426764
  4266a6:	mov    rcx,QWORD PTR [rsp+0x28]
  4266ab:	call   0x40215c
  4266b0:	nop
  4266b1:	test   rbx,rbx
  4266b4:	je     0x4266c0
  4266b6:	mov    rax,QWORD PTR [rbx]
  4266b9:	mov    rcx,rbx
  4266bc:	call   QWORD PTR [rax+0x10]
  4266bf:	nop
  4266c0:	mov    rcx,rdi
  4266c3:	call   0x44ad20
  4266c8:	nop
  4266c9:	lea    rcx,[rsp+0x58]
  4266ce:	call   0x4253b0
  4266d3:	nop
  4266d4:	mov    ebx,esi
  4266d6:	jmp    0x426764
  4266db:	mov    rcx,QWORD PTR [rsp+0x28]
  4266e0:	call   0x40215c
  4266e5:	nop
  4266e6:	cmp    rbx,r15
  4266e9:	je     0x4266f5
  4266eb:	mov    rax,QWORD PTR [rbx]
  4266ee:	mov    rcx,rbx
  4266f1:	call   QWORD PTR [rax+0x10]
  4266f4:	nop
  4266f5:	mov    rcx,rdi
  4266f8:	call   0x44ad20
  4266fd:	nop
  4266fe:	lea    rcx,[rsp+0x58]
  426703:	call   0x4253b0
  426708:	nop
  426709:	mov    ebx,esi
  42670b:	jmp    0x426764
  42670d:	mov    rcx,QWORD PTR [rsp+0x28]
  426712:	call   0x40215c
  426717:	nop
  426718:	cmp    rbx,r15
  42671b:	je     0x426727
  42671d:	mov    rax,QWORD PTR [rbx]
  426720:	mov    rcx,rbx
  426723:	call   QWORD PTR [rax+0x10]
  426726:	nop
  426727:	mov    rcx,rdi
  42672a:	call   0x44ad20
  42672f:	nop
  426730:	lea    rcx,[rsp+0x58]
  426735:	call   0x4253b0
  42673a:	nop
  42673b:	mov    ebx,esi
  42673d:	jmp    0x426764
  42673f:	mov    rax,QWORD PTR [rbp+0x0]
  426743:	lea    rdx,[rsp+0x50]
  426748:	mov    rcx,rbp
  42674b:	call   QWORD PTR [rax+0x60]
  42674e:	mov    ebx,eax
  426750:	mov    rcx,rdi
  426753:	call   0x44ad20
  426758:	nop
  426759:	lea    rcx,[rsp+0x58]
  42675e:	call   0x4253b0
  426763:	nop
  426764:	lea    rcx,[rsp+0x140]
  42676c:	call   0x410fc0
  426771:	mov    eax,ebx
  426773:	add    rsp,0x218
  42677a:	pop    r15
  42677c:	pop    r14
  42677e:	pop    r13
  426780:	pop    r12
  426782:	pop    rdi
  426783:	pop    rsi
  426784:	pop    rbp
  426785:	pop    rbx
  426786:	ret    
  426787:	int3   
  426788:	int3   
  426789:	int3   
  42678a:	int3   
  42678b:	int3   
  42678c:	rex.W push rbp
  42678e:	sub    rsp,0x20
  426792:	mov    rbp,rdx
  426795:	lea    rcx,[rbp+0x140]
  42679c:	call   0x410fc0
  4267a1:	add    rsp,0x20
  4267a5:	pop    rbp
  4267a6:	ret    
  4267a7:	int3   
  4267a8:	int3   
  4267a9:	int3   
  4267aa:	int3   
  4267ab:	int3   
  4267ac:	rex.W push rbp
  4267ae:	sub    rsp,0x20
  4267b2:	mov    rbp,rdx
  4267b5:	lea    rcx,[rbp+0xb0]
  4267bc:	call   0x40ef60
  4267c1:	add    rsp,0x20
  4267c5:	pop    rbp
  4267c6:	ret    
  4267c7:	int3   
  4267c8:	int3   
  4267c9:	int3   
  4267ca:	int3   
  4267cb:	int3   
  4267cc:	rex.W push rbp
  4267ce:	sub    rsp,0x20
  4267d2:	mov    rbp,rdx
  4267d5:	mov    rcx,QWORD PTR [rbp+0x280]
  4267dc:	call   0x40215c
  4267e1:	add    rsp,0x20
  4267e5:	pop    rbp
  4267e6:	ret    
  4267e7:	int3   
  4267e8:	int3   
  4267e9:	int3   
  4267ea:	int3   
  4267eb:	int3   
  4267ec:	rex.W push rbp
  4267ee:	sub    rsp,0x20
  4267f2:	mov    rbp,rdx
  4267f5:	lea    rcx,[rbp+0x40]
  4267f9:	call   0x401000
  4267fe:	add    rsp,0x20
  426802:	pop    rbp
  426803:	ret    
  426804:	int3   
  426805:	int3   
  426806:	int3   
  426807:	int3   
  426808:	int3   
  426809:	int3   
  42680a:	int3   
  42680b:	int3   
  42680c:	rex.W push rbp
  42680e:	sub    rsp,0x20
  426812:	mov    rbp,rdx
  426815:	lea    rcx,[rbp+0x50]
  426819:	call   0x425438
  42681e:	add    rsp,0x20
  426822:	pop    rbp
  426823:	ret    
  426824:	int3   
  426825:	int3   
  426826:	int3   
  426827:	int3   
  426828:	int3   
  426829:	int3   
  42682a:	int3   
  42682b:	int3   
  42682c:	rex.W push rbp
  42682e:	sub    rsp,0x20
  426832:	mov    rbp,rdx
  426835:	lea    rcx,[rbp+0x120]
  42683c:	call   0x424ffc
  426841:	add    rsp,0x20
  426845:	pop    rbp
  426846:	ret    
  426847:	int3   
  426848:	int3   
  426849:	int3   
  42684a:	int3   
  42684b:	int3   
  42684c:	rex.W push rbp
  42684e:	sub    rsp,0x20
  426852:	mov    rbp,rdx
  426855:	lea    rcx,[rbp+0xa8]
  42685c:	call   0x4176b4
  426861:	add    rsp,0x20
  426865:	pop    rbp
  426866:	ret    
  426867:	int3   
  426868:	int3   
  426869:	int3   
  42686a:	int3   
  42686b:	int3   
  42686c:	rex.W push rbp
  42686e:	sub    rsp,0x20
  426872:	mov    rbp,rdx
  426875:	lea    rcx,[rbp+0x28]
  426879:	call   0x401000
  42687e:	add    rsp,0x20
  426882:	pop    rbp
  426883:	ret    
  426884:	int3   
  426885:	int3   
  426886:	int3   
  426887:	int3   
  426888:	int3   
  426889:	int3   
  42688a:	int3   
  42688b:	int3   
  42688c:	rex.W push rbp
  42688e:	sub    rsp,0x20
  426892:	mov    rbp,rdx
  426895:	mov    rcx,QWORD PTR [rbp+0x280]
  42689c:	call   0x40215c
  4268a1:	add    rsp,0x20
  4268a5:	pop    rbp
  4268a6:	ret    
  4268a7:	int3   
  4268a8:	int3   
  4268a9:	int3   
  4268aa:	int3   
  4268ab:	int3   
  4268ac:	rex.W push rbp
  4268ae:	sub    rsp,0x20
  4268b2:	mov    rbp,rdx
  4268b5:	lea    rcx,[rbp+0x128]
  4268bc:	call   0x401000
  4268c1:	add    rsp,0x20
  4268c5:	pop    rbp
  4268c6:	ret    
  4268c7:	int3   
  4268c8:	int3   
  4268c9:	int3   
  4268ca:	int3   
  4268cb:	int3   
  4268cc:	rex.W push rbp
  4268ce:	sub    rsp,0x20
  4268d2:	mov    rbp,rdx
  4268d5:	lea    rcx,[rbp+0x40]
  4268d9:	call   0x401000
  4268de:	add    rsp,0x20
  4268e2:	pop    rbp
  4268e3:	ret    
  4268e4:	jmp    0x40670c
  4268e9:	int3   
  4268ea:	int3   
  4268eb:	int3   
  4268ec:	rex.W push rbx
  4268ee:	push   rdi
  4268ef:	mov    rax,rsp
  4268f2:	sub    rsp,0x58
  4268f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4268ff:	mov    rdi,r8
  426902:	mov    rbx,rdx
  426905:	mov    QWORD PTR [rax+0x30],0x0
  42690d:	mov    r9d,0x20019
  426913:	mov    r8,QWORD PTR [rip+0x41d7e]        # 0x468698
  42691a:	mov    rdx,rcx
  42691d:	lea    rcx,[rax+0x30]
  426921:	call   0x40b6b8
  426926:	test   eax,eax
  426928:	jne    0x4269a5
  42692a:	lea    rcx,[rsp+0x28]
  42692f:	call   0x403150
  426934:	nop
  426935:	lea    r8,[rsp+0x28]
  42693a:	mov    rdx,rbx
  42693d:	lea    rcx,[rsp+0x88]
  426945:	call   0x40b5d0
  42694a:	test   eax,eax
  42694c:	jne    0x42699a
  42694e:	lea    rdx,[rsp+0x28]
  426953:	mov    rcx,rdi
  426956:	call   0x4032f8
  42695b:	mov    rcx,rdi
  42695e:	call   0x409d6c
  426963:	mov    r8,QWORD PTR [rip+0x41d26]        # 0x468690
  42696a:	mov    rdx,rdi
  42696d:	lea    rcx,[rsp+0x38]
  426972:	call   0x403108
  426977:	nop
  426978:	mov    rcx,QWORD PTR [rax]
  42697b:	call   0x4088cc
  426980:	mov    bl,al
  426982:	mov    rcx,QWORD PTR [rsp+0x38]
  426987:	call   0x40215c
  42698c:	nop
  42698d:	mov    rcx,QWORD PTR [rsp+0x28]
  426992:	call   0x40215c
  426997:	nop
  426998:	jmp    0x4269a7
  42699a:	mov    rcx,QWORD PTR [rsp+0x28]
  42699f:	call   0x40215c
  4269a4:	nop
  4269a5:	xor    bl,bl
  4269a7:	lea    rcx,[rsp+0x88]
  4269af:	call   0x40b5a8
  4269b4:	mov    al,bl
  4269b6:	add    rsp,0x58
  4269ba:	pop    rdi
  4269bb:	pop    rbx
  4269bc:	ret    
  4269bd:	int3   
  4269be:	int3   
  4269bf:	int3   
  4269c0:	int3   
  4269c1:	int3   
  4269c2:	int3   
  4269c3:	int3   
  4269c4:	int3   
  4269c5:	int3   
  4269c6:	int3   
  4269c7:	int3   
  4269c8:	int3   
  4269c9:	int3   
  4269ca:	int3   
  4269cb:	int3   
  4269cc:	rex.W push rbp
  4269ce:	sub    rsp,0x20
  4269d2:	mov    rbp,rdx
  4269d5:	lea    rcx,[rbp+0x88]
  4269dc:	call   0x40b6b0
  4269e1:	add    rsp,0x20
  4269e5:	pop    rbp
  4269e6:	ret    
  4269e7:	int3   
  4269e8:	int3   
  4269e9:	int3   
  4269ea:	int3   
  4269eb:	int3   
  4269ec:	rex.W push rbp
  4269ee:	sub    rsp,0x20
  4269f2:	mov    rbp,rdx
  4269f5:	lea    rcx,[rbp+0x28]
  4269f9:	call   0x401000
  4269fe:	add    rsp,0x20
  426a02:	pop    rbp
  426a03:	ret    
  426a04:	int3   
  426a05:	int3   
  426a06:	int3   
  426a07:	int3   
  426a08:	int3   
  426a09:	int3   
  426a0a:	int3   
  426a0b:	int3   
  426a0c:	rex.W push rbp
  426a0e:	sub    rsp,0x20
  426a12:	mov    rbp,rdx
  426a15:	lea    rcx,[rbp+0x38]
  426a19:	call   0x401000
  426a1e:	add    rsp,0x20
  426a22:	pop    rbp
  426a23:	ret    
  426a24:	rex.W push rbx
  426a26:	push   rsi
  426a27:	push   rdi
  426a28:	mov    rax,rsp
  426a2b:	sub    rsp,0x70
  426a2f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  426a38:	mov    rbx,rcx
  426a3b:	mov    DWORD PTR [rax+0x28],0x0
  426a42:	lea    rcx,[rax-0x38]
  426a46:	call   0x406818
  426a4b:	nop
  426a4c:	mov    r8,QWORD PTR [rip+0x41c3d]        # 0x468690
  426a53:	lea    rdx,[rsp+0x38]
  426a58:	lea    rcx,[rsp+0x58]
  426a5d:	call   0x403108
  426a62:	nop
  426a63:	mov    edi,0x1
  426a68:	mov    DWORD PTR [rsp+0x98],edi
  426a6f:	mov    rcx,QWORD PTR [rax]
  426a72:	call   0x4088cc
  426a77:	test   al,al
  426a79:	jne    0x426ade
  426a7b:	lea    r8,[rip+0x29446]        # 0x44fec8
  426a82:	lea    rdx,[rsp+0x38]
  426a87:	lea    rcx,[rsp+0x48]
  426a8c:	call   0x403108
  426a91:	nop
  426a92:	mov    edi,0x3
  426a97:	mov    DWORD PTR [rsp+0x98],edi
  426a9e:	mov    rcx,QWORD PTR [rax]
  426aa1:	call   0x408984
  426aa6:	test   al,al
  426aa8:	jne    0x426ade
  426aaa:	lea    r8,[rip+0x29407]        # 0x44feb8
  426ab1:	lea    rdx,[rsp+0x38]
  426ab6:	lea    rcx,[rsp+0x28]
  426abb:	call   0x403108
  426ac0:	nop
  426ac1:	mov    edi,0x7
  426ac6:	mov    DWORD PTR [rsp+0x98],edi
  426acd:	mov    rcx,QWORD PTR [rax]
  426ad0:	call   0x408984
  426ad5:	test   al,al
  426ad7:	jne    0x426ade
  426ad9:	mov    sil,0x1
  426adc:	jmp    0x426ae1
  426ade:	xor    sil,sil
  426ae1:	test   dil,0x4
  426ae5:	je     0x426af5
  426ae7:	and    edi,0xfffffffb
  426aea:	mov    rcx,QWORD PTR [rsp+0x28]
  426aef:	call   0x40215c
  426af4:	nop
  426af5:	test   dil,0x2
  426af9:	je     0x426b09
  426afb:	and    edi,0xfffffffd
  426afe:	mov    rcx,QWORD PTR [rsp+0x48]
  426b03:	call   0x40215c
  426b08:	nop
  426b09:	test   dil,0x1
  426b0d:	je     0x426b19
  426b0f:	mov    rcx,QWORD PTR [rsp+0x58]
  426b14:	call   0x40215c
  426b19:	test   sil,sil
  426b1c:	je     0x426c4b
  426b22:	lea    rcx,[rsp+0x28]
  426b27:	call   0x403150
  426b2c:	nop
  426b2d:	lea    r8,[rsp+0x28]
  426b32:	mov    rdx,QWORD PTR [rip+0x41b6f]        # 0x4686a8
  426b39:	mov    rsi,0xffffffff80000001
  426b40:	mov    rcx,rsi
  426b43:	call   0x4268ec
  426b48:	test   al,al
  426b4a:	je     0x426b77
  426b4c:	lea    rdx,[rsp+0x28]
  426b51:	mov    rcx,rbx
  426b54:	call   0x403208
  426b59:	nop
  426b5a:	mov    rcx,QWORD PTR [rsp+0x28]
  426b5f:	call   0x40215c
  426b64:	nop
  426b65:	mov    rcx,QWORD PTR [rsp+0x38]
  426b6a:	call   0x40215c
  426b6f:	mov    rax,rbx
  426b72:	jmp    0x426c66
  426b77:	lea    r8,[rsp+0x28]
  426b7c:	mov    rdx,QWORD PTR [rip+0x41b25]        # 0x4686a8
  426b83:	mov    rdi,0xffffffff80000002
  426b8a:	mov    rcx,rdi
  426b8d:	call   0x4268ec
  426b92:	test   al,al
  426b94:	je     0x426bc1
  426b96:	lea    rdx,[rsp+0x28]
  426b9b:	mov    rcx,rbx
  426b9e:	call   0x403208
  426ba3:	nop
  426ba4:	mov    rcx,QWORD PTR [rsp+0x28]
  426ba9:	call   0x40215c
  426bae:	nop
  426baf:	mov    rcx,QWORD PTR [rsp+0x38]
  426bb4:	call   0x40215c
  426bb9:	mov    rax,rbx
  426bbc:	jmp    0x426c66
  426bc1:	lea    r8,[rsp+0x28]
  426bc6:	mov    rdx,QWORD PTR [rip+0x41ad3]        # 0x4686a0
  426bcd:	mov    rcx,rsi
  426bd0:	call   0x4268ec
  426bd5:	test   al,al
  426bd7:	je     0x426c01
  426bd9:	lea    rdx,[rsp+0x28]
  426bde:	mov    rcx,rbx
  426be1:	call   0x403208
  426be6:	nop
  426be7:	mov    rcx,QWORD PTR [rsp+0x28]
  426bec:	call   0x40215c
  426bf1:	nop
  426bf2:	mov    rcx,QWORD PTR [rsp+0x38]
  426bf7:	call   0x40215c
  426bfc:	mov    rax,rbx
  426bff:	jmp    0x426c66
  426c01:	lea    r8,[rsp+0x28]
  426c06:	mov    rdx,QWORD PTR [rip+0x41a93]        # 0x4686a0
  426c0d:	mov    rcx,rdi
  426c10:	call   0x4268ec
  426c15:	test   al,al
  426c17:	je     0x426c41
  426c19:	lea    rdx,[rsp+0x28]
  426c1e:	mov    rcx,rbx
  426c21:	call   0x403208
  426c26:	nop
  426c27:	mov    rcx,QWORD PTR [rsp+0x28]
  426c2c:	call   0x40215c
  426c31:	nop
  426c32:	mov    rcx,QWORD PTR [rsp+0x38]
  426c37:	call   0x40215c
  426c3c:	mov    rax,rbx
  426c3f:	jmp    0x426c66
  426c41:	mov    rcx,QWORD PTR [rsp+0x28]
  426c46:	call   0x40215c
  426c4b:	lea    rdx,[rsp+0x38]
  426c50:	mov    rcx,rbx
  426c53:	call   0x403208
  426c58:	nop
  426c59:	mov    rcx,QWORD PTR [rsp+0x38]
  426c5e:	call   0x40215c
  426c63:	mov    rax,rbx
  426c66:	add    rsp,0x70
  426c6a:	pop    rdi
  426c6b:	pop    rsi
  426c6c:	pop    rbx
  426c6d:	ret    
  426c6e:	int3   
  426c6f:	int3   
  426c70:	int3   
  426c71:	int3   
  426c72:	int3   
  426c73:	int3   
  426c74:	rex.W push rbp
  426c76:	sub    rsp,0x20
  426c7a:	mov    rbp,rdx
  426c7d:	lea    rcx,[rbp+0x38]
  426c81:	call   0x401000
  426c86:	add    rsp,0x20
  426c8a:	pop    rbp
  426c8b:	ret    
  426c8c:	int3   
  426c8d:	int3   
  426c8e:	int3   
  426c8f:	int3   
  426c90:	int3   
  426c91:	int3   
  426c92:	int3   
  426c93:	int3   
  426c94:	rex.W push rbp
  426c96:	sub    rsp,0x20
  426c9a:	mov    rbp,rdx
  426c9d:	mov    eax,DWORD PTR [rbp+0x98]
  426ca3:	and    eax,0x1
  426ca6:	test   eax,eax
  426ca8:	je     0x426cba
  426caa:	and    DWORD PTR [rbp+0x98],0xfffffffe
  426cb1:	lea    rcx,[rbp+0x58]
  426cb5:	call   0x401000
  426cba:	add    rsp,0x20
  426cbe:	pop    rbp
  426cbf:	ret    
  426cc0:	int3   
  426cc1:	int3   
  426cc2:	int3   
  426cc3:	int3   
  426cc4:	rex.W push rbp
  426cc6:	sub    rsp,0x20
  426cca:	mov    rbp,rdx
  426ccd:	mov    eax,DWORD PTR [rbp+0x98]
  426cd3:	and    eax,0x2
  426cd6:	test   eax,eax
  426cd8:	je     0x426cea
  426cda:	and    DWORD PTR [rbp+0x98],0xfffffffd
  426ce1:	lea    rcx,[rbp+0x48]
  426ce5:	call   0x401000
  426cea:	add    rsp,0x20
  426cee:	pop    rbp
  426cef:	ret    
  426cf0:	int3   
  426cf1:	int3   
  426cf2:	int3   
  426cf3:	int3   
  426cf4:	rex.W push rbp
  426cf6:	sub    rsp,0x20
  426cfa:	mov    rbp,rdx
  426cfd:	mov    eax,DWORD PTR [rbp+0x98]
  426d03:	and    eax,0x4
  426d06:	test   eax,eax
  426d08:	je     0x426d1a
  426d0a:	and    DWORD PTR [rbp+0x98],0xfffffffb
  426d11:	lea    rcx,[rbp+0x28]
  426d15:	call   0x401000
  426d1a:	add    rsp,0x20
  426d1e:	pop    rbp
  426d1f:	ret    
  426d20:	int3   
  426d21:	int3   
  426d22:	int3   
  426d23:	int3   
  426d24:	rex.W push rbp
  426d26:	sub    rsp,0x20
  426d2a:	mov    rbp,rdx
  426d2d:	lea    rcx,[rbp+0x28]
  426d31:	call   0x401000
  426d36:	add    rsp,0x20
  426d3a:	pop    rbp
  426d3b:	ret    
  426d3c:	rex.W push rbx
  426d3e:	push   rsi
  426d3f:	push   rdi
  426d40:	sub    rsp,0x40
  426d44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  426d4d:	mov    rsi,r9
  426d50:	mov    eax,r8d
  426d53:	mov    r10d,edx
  426d56:	mov    r11,rcx
  426d59:	mov    WORD PTR [rsp+0x28],0x0
  426d60:	mov    WORD PTR [rsp+0x2a],0x0
  426d67:	mov    QWORD PTR [rsp+0x30],0x0
  426d70:	mov    rdi,QWORD PTR [rsp+0x80]
  426d78:	mov    BYTE PTR [rdi],0x0
  426d7b:	lea    r8,[rsp+0x28]
  426d80:	mov    edx,eax
  426d82:	mov    ecx,r10d
  426d85:	call   r11
  426d88:	mov    ebx,eax
  426d8a:	test   eax,eax
  426d8c:	je     0x426d90
  426d8e:	jmp    0x426dd2
  426d90:	movzx  eax,WORD PTR [rsp+0x28]
  426d95:	cmp    ax,0x8
  426d99:	jne    0x426dc4
  426d9b:	mov    rcx,QWORD PTR [rsp+0x30]
  426da0:	call   QWORD PTR [rip+0x264f2]        # 0x44d298
  426da6:	cmp    eax,0x10
  426da9:	je     0x426db2
  426dab:	mov    ebx,0x80004005
  426db0:	jmp    0x426dd2
  426db2:	mov    BYTE PTR [rdi],0x1
  426db5:	mov    rax,QWORD PTR [rsp+0x30]
  426dba:	movdqu xmm0,XMMWORD PTR [rax]
  426dbe:	movdqu XMMWORD PTR [rsi],xmm0
  426dc2:	jmp    0x426dd0
  426dc4:	test   ax,ax
  426dc7:	je     0x426dd0
  426dc9:	mov    ebx,0x80004005
  426dce:	jmp    0x426dd2
  426dd0:	xor    ebx,ebx
  426dd2:	lea    rcx,[rsp+0x28]
  426dd7:	call   0x40b028
  426ddc:	mov    eax,ebx
  426dde:	add    rsp,0x40
  426de2:	pop    rdi
  426de3:	pop    rsi
  426de4:	pop    rbx
  426de5:	ret    
  426de6:	int3   
  426de7:	int3   
  426de8:	int3   
  426de9:	int3   
  426dea:	int3   
  426deb:	int3   
  426dec:	rex.W push rbp
  426dee:	sub    rsp,0x20
  426df2:	mov    rbp,rdx
  426df5:	lea    rcx,[rbp+0x28]
  426df9:	call   0x40b830
  426dfe:	add    rsp,0x20
  426e02:	pop    rbp
  426e03:	ret    
  426e04:	rex.W push rbx
  426e06:	push   rdi
  426e07:	sub    rsp,0x48
  426e0b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  426e14:	mov    r11d,r8d
  426e17:	mov    r10,rdx
  426e1a:	mov    rax,rcx
  426e1d:	mov    rdi,QWORD PTR [rsp+0x80]
  426e25:	mov    BYTE PTR [rdi],0x0
  426e28:	mov    WORD PTR [rsp+0x28],0x0
  426e2f:	mov    WORD PTR [rsp+0x2a],0x0
  426e36:	mov    QWORD PTR [rsp+0x30],0x0
  426e3f:	test   rdx,rdx
  426e42:	je     0x426e56
  426e44:	lea    r8,[rsp+0x28]
  426e49:	mov    edx,r9d
  426e4c:	mov    ecx,r11d
  426e4f:	call   r10
  426e52:	mov    ebx,eax
  426e54:	jmp    0x426e62
  426e56:	lea    rdx,[rsp+0x28]
  426e5b:	mov    ecx,r9d
  426e5e:	call   rax
  426e60:	mov    ebx,eax
  426e62:	test   ebx,ebx
  426e64:	je     0x426e68
  426e66:	jmp    0x426e8e
  426e68:	movzx  eax,WORD PTR [rsp+0x28]
  426e6d:	cmp    ax,0xb
  426e71:	jne    0x426e80
  426e73:	cmp    WORD PTR [rsp+0x30],0x0
  426e79:	setne  al
  426e7c:	mov    BYTE PTR [rdi],al
  426e7e:	jmp    0x426e8c
  426e80:	test   ax,ax
  426e83:	je     0x426e8c
  426e85:	mov    ebx,0x80004005
  426e8a:	jmp    0x426e8e
  426e8c:	xor    ebx,ebx
  426e8e:	lea    rcx,[rsp+0x28]
  426e93:	call   0x40b028
  426e98:	mov    eax,ebx
  426e9a:	add    rsp,0x48
  426e9e:	pop    rdi
  426e9f:	pop    rbx
  426ea0:	ret    
  426ea1:	int3   
  426ea2:	int3   
  426ea3:	int3   
  426ea4:	rex.W push rbp
  426ea6:	sub    rsp,0x20
  426eaa:	mov    rbp,rdx
  426ead:	lea    rcx,[rbp+0x28]
  426eb1:	call   0x40b830
  426eb6:	add    rsp,0x20
  426eba:	pop    rbp
  426ebb:	ret    
  426ebc:	rex.W push rbx
  426ebe:	push   rsi
  426ebf:	push   rdi
  426ec0:	sub    rsp,0x40
  426ec4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  426ecd:	mov    r11d,r8d
  426ed0:	mov    r10,rdx
  426ed3:	mov    rax,rcx
  426ed6:	mov    rdi,QWORD PTR [rsp+0x80]
  426ede:	mov    DWORD PTR [rdi],0x0
  426ee4:	mov    rsi,QWORD PTR [rsp+0x88]
  426eec:	mov    BYTE PTR [rsi],0x0
  426eef:	mov    WORD PTR [rsp+0x28],0x0
  426ef6:	mov    WORD PTR [rsp+0x2a],0x0
  426efd:	mov    QWORD PTR [rsp+0x30],0x0
  426f06:	test   rdx,rdx
  426f09:	je     0x426f1d
  426f0b:	lea    r8,[rsp+0x28]
  426f10:	mov    edx,r9d
  426f13:	mov    ecx,r11d
  426f16:	call   r10
  426f19:	mov    ebx,eax
  426f1b:	jmp    0x426f29
  426f1d:	lea    rdx,[rsp+0x28]
  426f22:	mov    ecx,r9d
  426f25:	call   rax
  426f27:	mov    ebx,eax
  426f29:	test   ebx,ebx
  426f2b:	je     0x426f2f
  426f2d:	jmp    0x426f53
  426f2f:	movzx  eax,WORD PTR [rsp+0x28]
  426f34:	cmp    ax,0x13
  426f38:	jne    0x426f45
  426f3a:	mov    eax,DWORD PTR [rsp+0x30]
  426f3e:	mov    DWORD PTR [rdi],eax
  426f40:	mov    BYTE PTR [rsi],0x1
  426f43:	jmp    0x426f51
  426f45:	test   ax,ax
  426f48:	je     0x426f51
  426f4a:	mov    ebx,0x80004005
  426f4f:	jmp    0x426f53
  426f51:	xor    ebx,ebx
  426f53:	lea    rcx,[rsp+0x28]
  426f58:	call   0x40b028
  426f5d:	mov    eax,ebx
  426f5f:	add    rsp,0x40
  426f63:	pop    rdi
  426f64:	pop    rsi
  426f65:	pop    rbx
  426f66:	ret    
  426f67:	int3   
  426f68:	int3   
  426f69:	int3   
  426f6a:	int3   
  426f6b:	int3   
  426f6c:	rex.W push rbp
  426f6e:	sub    rsp,0x20
  426f72:	mov    rbp,rdx
  426f75:	lea    rcx,[rbp+0x28]
  426f79:	call   0x40b830
  426f7e:	add    rsp,0x20
  426f82:	pop    rbp
  426f83:	ret    
  426f84:	rex.W push rbx
  426f86:	push   rdi
  426f87:	sub    rsp,0x48
  426f8b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  426f94:	mov    ebx,r8d
  426f97:	mov    r11,rdx
  426f9a:	mov    r10,rcx
  426f9d:	mov    rdi,QWORD PTR [rsp+0x80]
  426fa5:	mov    DWORD PTR [rdi+0x8],0x0
  426fac:	mov    rax,QWORD PTR [rdi]
  426faf:	mov    WORD PTR [rax],0x0
  426fb4:	mov    WORD PTR [rsp+0x28],0x0
  426fbb:	mov    WORD PTR [rsp+0x2a],0x0
  426fc2:	mov    QWORD PTR [rsp+0x30],0x0
  426fcb:	test   rdx,rdx
  426fce:	je     0x426fe1
  426fd0:	lea    r8,[rsp+0x28]
  426fd5:	mov    edx,r9d
  426fd8:	mov    ecx,ebx
  426fda:	call   r11
  426fdd:	mov    ebx,eax
  426fdf:	jmp    0x426fee
  426fe1:	lea    rdx,[rsp+0x28]
  426fe6:	mov    ecx,r9d
  426fe9:	call   r10
  426fec:	mov    ebx,eax
  426fee:	test   ebx,ebx
  426ff0:	je     0x426ff4
  426ff2:	jmp    0x42701c
  426ff4:	movzx  eax,WORD PTR [rsp+0x28]
  426ff9:	cmp    ax,0x8
  426ffd:	jne    0x42700e
  426fff:	mov    rdx,QWORD PTR [rsp+0x30]
  427004:	mov    rcx,rdi
  427007:	call   0x403354
  42700c:	jmp    0x42701a
  42700e:	test   ax,ax
  427011:	je     0x42701a
  427013:	mov    ebx,0x80004005
  427018:	jmp    0x42701c
  42701a:	xor    ebx,ebx
  42701c:	lea    rcx,[rsp+0x28]
  427021:	call   0x40b028
  427026:	mov    eax,ebx
  427028:	add    rsp,0x48
  42702c:	pop    rdi
  42702d:	pop    rbx
  42702e:	ret    
  42702f:	int3   
  427030:	int3   
  427031:	int3   
  427032:	int3   
  427033:	int3   
  427034:	rex.W push rbp
  427036:	sub    rsp,0x20
  42703a:	mov    rbp,rdx
  42703d:	lea    rcx,[rbp+0x28]
  427041:	call   0x40b830
  427046:	add    rsp,0x20
  42704a:	pop    rbp
  42704b:	ret    
  42704c:	rex.W push rbx
  42704e:	sub    rsp,0x40
  427052:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42705b:	mov    WORD PTR [rsp+0x28],0x0
  427062:	mov    WORD PTR [rsp+0x2a],0x0
  427069:	mov    QWORD PTR [rsp+0x30],0x0
  427072:	mov    rax,QWORD PTR [rcx]
  427075:	lea    r9,[rsp+0x28]
  42707a:	mov    r8d,0x4
  427080:	call   QWORD PTR [rax+0x20]
  427083:	mov    ebx,eax
  427085:	test   eax,eax
  427087:	je     0x42708b
  427089:	jmp    0x4270aa
  42708b:	movzx  eax,WORD PTR [rsp+0x28]
  427090:	cmp    ax,0x13
  427094:	jne    0x42709c
  427096:	mov    ebx,DWORD PTR [rsp+0x30]
  42709a:	jmp    0x4270aa
  42709c:	test   ax,ax
  42709f:	jne    0x4270a8
  4270a1:	mov    ebx,0x1
  4270a6:	jmp    0x4270aa
  4270a8:	xor    ebx,ebx
  4270aa:	lea    rcx,[rsp+0x28]
  4270af:	call   0x40b028
  4270b4:	mov    eax,ebx
  4270b6:	add    rsp,0x40
  4270ba:	pop    rbx
  4270bb:	ret    
  4270bc:	rex.W push rbp
  4270be:	sub    rsp,0x20
  4270c2:	mov    rbp,rdx
  4270c5:	lea    rcx,[rbp+0x28]
  4270c9:	call   0x40b830
  4270ce:	add    rsp,0x20
  4270d2:	pop    rbp
  4270d3:	ret    
  4270d4:	rex.W push rbx
  4270d6:	push   rdi
  4270d7:	sub    rsp,0x48
  4270db:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4270e4:	mov    rdi,r8
  4270e7:	mov    WORD PTR [rsp+0x28],0x0
  4270ee:	mov    WORD PTR [rsp+0x2a],0x0
  4270f5:	mov    QWORD PTR [rsp+0x30],0x0
  4270fe:	mov    rax,QWORD PTR [rcx]
  427101:	lea    r9,[rsp+0x28]
  427106:	xor    r8d,r8d
  427109:	call   QWORD PTR [rax+0x20]
  42710c:	mov    ebx,eax
  42710e:	test   eax,eax
  427110:	je     0x427114
  427112:	jmp    0x42712d
  427114:	cmp    WORD PTR [rsp+0x28],0x15
  42711a:	je     0x427123
  42711c:	mov    ebx,0x80070057
  427121:	jmp    0x42712d
  427123:	mov    rax,QWORD PTR [rsp+0x30]
  427128:	mov    QWORD PTR [rdi],rax
  42712b:	xor    ebx,ebx
  42712d:	lea    rcx,[rsp+0x28]
  427132:	call   0x40b028
  427137:	mov    eax,ebx
  427139:	add    rsp,0x48
  42713d:	pop    rdi
  42713e:	pop    rbx
  42713f:	ret    
  427140:	int3   
  427141:	int3   
  427142:	int3   
  427143:	int3   
  427144:	rex.W push rbp
  427146:	sub    rsp,0x20
  42714a:	mov    rbp,rdx
  42714d:	lea    rcx,[rbp+0x28]
  427151:	call   0x40b830
  427156:	add    rsp,0x20
  42715a:	pop    rbp
  42715b:	ret    
  42715c:	mov    QWORD PTR [rsp+0x10],rdx
  427161:	push   rbx
  427162:	push   rsi
  427163:	push   rdi
  427164:	sub    rsp,0x40
  427168:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427171:	mov    edi,r8d
  427174:	mov    rsi,rdx
  427177:	mov    rbx,rcx
  42717a:	mov    DWORD PTR [rsp+0x60],0x0
  427182:	mov    rcx,rdx
  427185:	call   0x402b34
  42718a:	mov    r8d,0x1
  427190:	mov    DWORD PTR [rsp+0x60],r8d
  427195:	mov    WORD PTR [rsp+0x28],0x0
  42719c:	mov    WORD PTR [rsp+0x2a],0x0
  4271a3:	mov    QWORD PTR [rsp+0x30],0x0
  4271ac:	mov    rax,QWORD PTR [rbx]
  4271af:	lea    r9,[rsp+0x28]
  4271b4:	mov    edx,edi
  4271b6:	mov    rcx,rbx
  4271b9:	call   QWORD PTR [rax+0x20]
  4271bc:	test   eax,eax
  4271be:	jne    0x4271d6
  4271c0:	cmp    WORD PTR [rsp+0x28],0x8
  4271c6:	jne    0x4271d6
  4271c8:	mov    rdx,QWORD PTR [rsp+0x30]
  4271cd:	mov    rcx,rsi
  4271d0:	call   0x402ca0
  4271d5:	nop
  4271d6:	lea    rcx,[rsp+0x28]
  4271db:	call   0x40b028
  4271e0:	mov    rax,rsi
  4271e3:	add    rsp,0x40
  4271e7:	pop    rdi
  4271e8:	pop    rsi
  4271e9:	pop    rbx
  4271ea:	ret    
  4271eb:	int3   
  4271ec:	rex.W push rbp
  4271ee:	sub    rsp,0x20
  4271f2:	mov    rbp,rdx
  4271f5:	mov    eax,DWORD PTR [rbp+0x60]
  4271f8:	and    eax,0x1
  4271fb:	test   eax,eax
  4271fd:	je     0x42720c
  4271ff:	and    DWORD PTR [rbp+0x60],0xfffffffe
  427203:	mov    rcx,QWORD PTR [rbp+0x68]
  427207:	call   0x401000
  42720c:	add    rsp,0x20
  427210:	pop    rbp
  427211:	ret    
  427212:	int3   
  427213:	int3   
  427214:	int3   
  427215:	int3   
  427216:	int3   
  427217:	int3   
  427218:	int3   
  427219:	int3   
  42721a:	int3   
  42721b:	int3   
  42721c:	rex.W push rbp
  42721e:	sub    rsp,0x20
  427222:	mov    rbp,rdx
  427225:	lea    rcx,[rbp+0x28]
  427229:	call   0x40b830
  42722e:	add    rsp,0x20
  427232:	pop    rbp
  427233:	ret    
  427234:	rex.W push rbx
  427236:	sub    rsp,0x40
  42723a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427243:	xor    ebx,ebx
  427245:	mov    WORD PTR [rsp+0x28],bx
  42724a:	mov    WORD PTR [rsp+0x2a],bx
  42724f:	mov    QWORD PTR [rsp+0x30],rbx
  427254:	add    rcx,0x8
  427258:	mov    rax,QWORD PTR [rcx]
  42725b:	lea    r9,[rsp+0x28]
  427260:	xor    r8d,r8d
  427263:	call   QWORD PTR [rax+0x20]
  427266:	cmp    eax,ebx
  427268:	je     0x42726c
  42726a:	jmp    0x42727b
  42726c:	cmp    WORD PTR [rsp+0x28],0x15
  427272:	je     0x427276
  427274:	jmp    0x42727b
  427276:	mov    rbx,QWORD PTR [rsp+0x30]
  42727b:	lea    rcx,[rsp+0x28]
  427280:	call   0x40b028
  427285:	mov    rax,rbx
  427288:	add    rsp,0x40
  42728c:	pop    rbx
  42728d:	ret    
  42728e:	int3   
  42728f:	int3   
  427290:	int3   
  427291:	int3   
  427292:	int3   
  427293:	int3   
  427294:	rex.W push rbp
  427296:	sub    rsp,0x20
  42729a:	mov    rbp,rdx
  42729d:	lea    rcx,[rbp+0x28]
  4272a1:	call   0x40b830
  4272a6:	add    rsp,0x20
  4272aa:	pop    rbp
  4272ab:	ret    
  4272ac:	mov    QWORD PTR [rsp+0x10],rdx
  4272b1:	push   rbx
  4272b2:	push   rsi
  4272b3:	push   rdi
  4272b4:	sub    rsp,0x40
  4272b8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4272c1:	mov    edi,r8d
  4272c4:	mov    rsi,rdx
  4272c7:	mov    rbx,rcx
  4272ca:	mov    DWORD PTR [rsp+0x60],0x0
  4272d2:	mov    rcx,rdx
  4272d5:	call   0x402b34
  4272da:	mov    r8d,0x1
  4272e0:	mov    DWORD PTR [rsp+0x60],r8d
  4272e5:	mov    WORD PTR [rsp+0x28],0x0
  4272ec:	mov    WORD PTR [rsp+0x2a],0x0
  4272f3:	mov    QWORD PTR [rsp+0x30],0x0
  4272fc:	lea    rcx,[rbx+0x8]
  427300:	mov    rax,QWORD PTR [rcx]
  427303:	lea    r9,[rsp+0x28]
  427308:	mov    edx,edi
  42730a:	call   QWORD PTR [rax+0x20]
  42730d:	test   eax,eax
  42730f:	jne    0x427327
  427311:	cmp    WORD PTR [rsp+0x28],0x8
  427317:	jne    0x427327
  427319:	mov    rdx,QWORD PTR [rsp+0x30]
  42731e:	mov    rcx,rsi
  427321:	call   0x402ca0
  427326:	nop
  427327:	lea    rcx,[rsp+0x28]
  42732c:	call   0x40b028
  427331:	mov    rax,rsi
  427334:	add    rsp,0x40
  427338:	pop    rdi
  427339:	pop    rsi
  42733a:	pop    rbx
  42733b:	ret    
  42733c:	int3   
  42733d:	int3   
  42733e:	int3   
  42733f:	int3   
  427340:	int3   
  427341:	int3   
  427342:	int3   
  427343:	int3   
  427344:	int3   
  427345:	int3   
  427346:	int3   
  427347:	int3   
  427348:	int3   
  427349:	int3   
  42734a:	int3   
  42734b:	int3   
  42734c:	rex.W push rbp
  42734e:	sub    rsp,0x20
  427352:	mov    rbp,rdx
  427355:	mov    eax,DWORD PTR [rbp+0x60]
  427358:	and    eax,0x1
  42735b:	test   eax,eax
  42735d:	je     0x42736c
  42735f:	and    DWORD PTR [rbp+0x60],0xfffffffe
  427363:	mov    rcx,QWORD PTR [rbp+0x68]
  427367:	call   0x401000
  42736c:	add    rsp,0x20
  427370:	pop    rbp
  427371:	ret    
  427372:	int3   
  427373:	int3   
  427374:	int3   
  427375:	int3   
  427376:	int3   
  427377:	int3   
  427378:	int3   
  427379:	int3   
  42737a:	int3   
  42737b:	int3   
  42737c:	rex.W push rbp
  42737e:	sub    rsp,0x20
  427382:	mov    rbp,rdx
  427385:	lea    rcx,[rbp+0x28]
  427389:	call   0x40b830
  42738e:	add    rsp,0x20
  427392:	pop    rbp
  427393:	ret    
  427394:	rex.W push rbx
  427396:	sub    rsp,0x40
  42739a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4273a3:	mov    WORD PTR [rsp+0x28],0x0
  4273aa:	mov    WORD PTR [rsp+0x2a],0x0
  4273b1:	mov    QWORD PTR [rsp+0x30],0x0
  4273ba:	add    rcx,0x8
  4273be:	mov    rax,QWORD PTR [rcx]
  4273c1:	lea    r9,[rsp+0x28]
  4273c6:	mov    r8d,0x9
  4273cc:	call   QWORD PTR [rax+0x20]
  4273cf:	mov    ebx,eax
  4273d1:	test   eax,eax
  4273d3:	je     0x4273d7
  4273d5:	jmp    0x4273e7
  4273d7:	cmp    WORD PTR [rsp+0x28],0x13
  4273dd:	je     0x4273e3
  4273df:	xor    ebx,ebx
  4273e1:	jmp    0x4273e7
  4273e3:	mov    ebx,DWORD PTR [rsp+0x30]
  4273e7:	lea    rcx,[rsp+0x28]
  4273ec:	call   0x40b028
  4273f1:	mov    eax,ebx
  4273f3:	add    rsp,0x40
  4273f7:	pop    rbx
  4273f8:	ret    
  4273f9:	int3   
  4273fa:	int3   
  4273fb:	int3   
  4273fc:	int3   
  4273fd:	int3   
  4273fe:	int3   
  4273ff:	int3   
  427400:	int3   
  427401:	int3   
  427402:	int3   
  427403:	int3   
  427404:	rex.W push rbp
  427406:	sub    rsp,0x20
  42740a:	mov    rbp,rdx
  42740d:	lea    rcx,[rbp+0x28]
  427411:	call   0x40b830
  427416:	add    rsp,0x20
  42741a:	pop    rbp
  42741b:	ret    
  42741c:	mov    eax,DWORD PTR [rcx+0x58]
  42741f:	mov    DWORD PTR [rdx],eax
  427421:	xor    eax,eax
  427423:	ret    
  427424:	mov    eax,DWORD PTR [rcx+0x60]
  427427:	ret    
  427428:	mov    rax,QWORD PTR [rcx+0x50]
  42742c:	mov    r8d,edx
  42742f:	imul   r8,r8,0x2c
  427433:	mov    eax,DWORD PTR [r8+rax*1]
  427437:	ret    
  427438:	mov    rax,QWORD PTR [rcx+0x60]
  42743c:	mov    edx,edx
  42743e:	mov    eax,DWORD PTR [rax+rdx*8]
  427441:	ret    
  427442:	int3   
  427443:	int3   
  427444:	mov    rax,QWORD PTR [rcx+0x50]
  427448:	mov    r8d,edx
  42744b:	imul   r8,r8,0x2c
  42744f:	mov    al,BYTE PTR [r8+rax*1+0x9]
  427454:	ret    
  427455:	int3   
  427456:	int3   
  427457:	int3   
  427458:	mov    rax,QWORD PTR [rcx+0x50]
  42745c:	mov    r8d,edx
  42745f:	imul   r8,r8,0x2c
  427463:	mov    al,BYTE PTR [r8+rax*1+0x8]
  427468:	ret    
  427469:	int3   
  42746a:	int3   
  42746b:	int3   
  42746c:	rex.W push rbx
  42746e:	push   rbp
  42746f:	push   rsi
  427470:	push   rdi
  427471:	sub    rsp,0x28
  427475:	mov    rbx,rcx
  427478:	mov    ecx,DWORD PTR [rcx+0xc]
  42747b:	mov    rbp,rdx
  42747e:	cmp    DWORD PTR [rbx+0x8],ecx
  427481:	jne    0x4274c1
  427483:	mov    eax,ecx
  427485:	shr    eax,0x2
  427488:	lea    esi,[rax+rcx*1+0x1]
  42748c:	mov    ecx,esi
  42748e:	imul   rcx,rcx,0x2c
  427492:	call   0x402130
  427497:	cmp    DWORD PTR [rbx+0x8],0x0
  42749b:	mov    rdi,rax
  42749e:	je     0x4274b3
  4274a0:	mov    r8d,DWORD PTR [rbx+0x8]
  4274a4:	mov    rdx,QWORD PTR [rbx]
  4274a7:	mov    rcx,rax
  4274aa:	imul   r8,r8,0x2c
  4274ae:	call   0x44b480
  4274b3:	mov    rcx,QWORD PTR [rbx]
  4274b6:	call   0x40215c
  4274bb:	mov    QWORD PTR [rbx],rdi
  4274be:	mov    DWORD PTR [rbx+0xc],esi
  4274c1:	mov    ecx,DWORD PTR [rbx+0x8]
  4274c4:	mov    rdx,rbp
  4274c7:	mov    r8d,0x2c
  4274cd:	imul   rcx,rcx,0x2c
  4274d1:	add    rcx,QWORD PTR [rbx]
  4274d4:	call   0x44b480
  4274d9:	mov    eax,DWORD PTR [rbx+0x8]
  4274dc:	lea    ecx,[rax+0x1]
  4274df:	mov    DWORD PTR [rbx+0x8],ecx
  4274e2:	add    rsp,0x28
  4274e6:	pop    rdi
  4274e7:	pop    rsi
  4274e8:	pop    rbp
  4274e9:	pop    rbx
  4274ea:	ret    
  4274eb:	int3   
  4274ec:	mov    QWORD PTR [rsp+0x8],rcx
  4274f1:	push   rbx
  4274f2:	push   rbp
  4274f3:	push   rsi
  4274f4:	push   rdi
  4274f5:	push   r12
  4274f7:	push   r13
  4274f9:	sub    rsp,0x38
  4274fd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427506:	mov    r13,rdx
  427509:	mov    rdi,rcx
  42750c:	mov    QWORD PTR [rcx],0x0
  427513:	mov    DWORD PTR [rcx+0x8],0x0
  42751a:	mov    DWORD PTR [rcx+0xc],0x0
  427521:	mov    ebx,DWORD PTR [rdx+0x8]
  427524:	test   ebx,ebx
  427526:	je     0x42753a
  427528:	mov    rcx,rbx
  42752b:	shl    rcx,0x3
  42752f:	call   0x402130
  427534:	mov    QWORD PTR [rdi],rax
  427537:	mov    DWORD PTR [rdi+0xc],ebx
  42753a:	test   ebx,ebx
  42753c:	je     0x427596
  42753e:	xor    ebp,ebp
  427540:	mov    r12,rbx
  427543:	mov    ecx,0x20
  427548:	call   0x402130
  42754d:	mov    rsi,rax
  427550:	mov    QWORD PTR [rsp+0x78],rax
  427555:	test   rax,rax
  427558:	je     0x42757e
  42755a:	mov    rcx,QWORD PTR [r13+0x0]
  42755e:	mov    rbx,QWORD PTR [rcx+rbp*1]
  427562:	mov    rdx,rbx
  427565:	mov    rcx,rax
  427568:	call   0x403208
  42756d:	nop
  42756e:	lea    rdx,[rbx+0x10]
  427572:	lea    rcx,[rsi+0x10]
  427576:	call   0x403208
  42757b:	nop
  42757c:	jmp    0x427580
  42757e:	xor    esi,esi
  427580:	mov    ecx,DWORD PTR [rdi+0x8]
  427583:	mov    rax,QWORD PTR [rdi]
  427586:	mov    QWORD PTR [rax+rcx*8],rsi
  42758a:	inc    DWORD PTR [rdi+0x8]
  42758d:	add    rbp,0x8
  427591:	dec    r12
  427594:	jne    0x427543
  427596:	mov    rax,rdi
  427599:	add    rsp,0x38
  42759d:	pop    r13
  42759f:	pop    r12
  4275a1:	pop    rdi
  4275a2:	pop    rsi
  4275a3:	pop    rbp
  4275a4:	pop    rbx
  4275a5:	ret    
  4275a6:	int3   
  4275a7:	int3   
  4275a8:	int3   
  4275a9:	int3   
  4275aa:	int3   
  4275ab:	int3   
  4275ac:	rex.W push rbp
  4275ae:	sub    rsp,0x20
  4275b2:	mov    rbp,rdx
  4275b5:	mov    rcx,QWORD PTR [rbp+0x70]
  4275b9:	call   0x401000
  4275be:	add    rsp,0x20
  4275c2:	pop    rbp
  4275c3:	ret    
  4275c4:	int3   
  4275c5:	int3   
  4275c6:	int3   
  4275c7:	int3   
  4275c8:	int3   
  4275c9:	int3   
  4275ca:	int3   
  4275cb:	int3   
  4275cc:	rex.W push rbp
  4275ce:	sub    rsp,0x20
  4275d2:	mov    rbp,rdx
  4275d5:	mov    rcx,QWORD PTR [rbp+0x78]
  4275d9:	call   0x40215c
  4275de:	add    rsp,0x20
  4275e2:	pop    rbp
  4275e3:	ret    
  4275e4:	int3   
  4275e5:	int3   
  4275e6:	int3   
  4275e7:	int3   
  4275e8:	int3   
  4275e9:	int3   
  4275ea:	int3   
  4275eb:	int3   
  4275ec:	rex.W push rbp
  4275ee:	sub    rsp,0x20
  4275f2:	mov    rbp,rdx
  4275f5:	mov    rcx,QWORD PTR [rbp+0x78]
  4275f9:	call   0x401000
  4275fe:	add    rsp,0x20
  427602:	pop    rbp
  427603:	ret    
  427604:	mov    QWORD PTR [rsp+0x8],rcx
  427609:	push   rbx
  42760a:	push   rbp
  42760b:	push   rsi
  42760c:	push   rdi
  42760d:	push   r12
  42760f:	push   r13
  427611:	push   r14
  427613:	sub    rsp,0x30
  427617:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427620:	mov    r12,rdx
  427623:	mov    rbx,rcx
  427626:	mov    QWORD PTR [rcx],0x0
  42762d:	mov    DWORD PTR [rcx+0x8],0x0
  427634:	mov    DWORD PTR [rcx+0xc],0x0
  42763b:	mov    edi,DWORD PTR [rdx+0x8]
  42763e:	test   edi,edi
  427640:	je     0x427654
  427642:	mov    rcx,rdi
  427645:	shl    rcx,0x3
  427649:	call   0x402130
  42764e:	mov    QWORD PTR [rbx],rax
  427651:	mov    DWORD PTR [rbx+0xc],edi
  427654:	test   edi,edi
  427656:	je     0x4276cb
  427658:	xor    esi,esi
  42765a:	mov    rbp,rdi
  42765d:	mov    ecx,0x10
  427662:	call   0x402130
  427667:	mov    rdi,rax
  42766a:	mov    QWORD PTR [rsp+0x78],rax
  42766f:	test   rax,rax
  427672:	je     0x4276b3
  427674:	mov    rcx,QWORD PTR [r12]
  427678:	mov    r14,QWORD PTR [rsi+rcx*1]
  42767c:	mov    QWORD PTR [rax],0x0
  427683:	mov    QWORD PTR [rax+0x8],0x0
  42768b:	mov    r13,QWORD PTR [r14+0x8]
  42768f:	test   r13,r13
  427692:	je     0x4276b5
  427694:	mov    rcx,r13
  427697:	call   0x402130
  42769c:	mov    QWORD PTR [rdi],rax
  42769f:	mov    r8,r13
  4276a2:	mov    rdx,QWORD PTR [r14]
  4276a5:	mov    rcx,rax
  4276a8:	call   0x44b480
  4276ad:	mov    QWORD PTR [rdi+0x8],r13
  4276b1:	jmp    0x4276b5
  4276b3:	xor    edi,edi
  4276b5:	mov    ecx,DWORD PTR [rbx+0x8]
  4276b8:	mov    rax,QWORD PTR [rbx]
  4276bb:	mov    QWORD PTR [rax+rcx*8],rdi
  4276bf:	inc    DWORD PTR [rbx+0x8]
  4276c2:	add    rsi,0x8
  4276c6:	dec    rbp
  4276c9:	jne    0x42765d
  4276cb:	mov    rax,rbx
  4276ce:	add    rsp,0x30
  4276d2:	pop    r14
  4276d4:	pop    r13
  4276d6:	pop    r12
  4276d8:	pop    rdi
  4276d9:	pop    rsi
  4276da:	pop    rbp
  4276db:	pop    rbx
  4276dc:	ret    
  4276dd:	int3   
  4276de:	int3   
  4276df:	int3   
  4276e0:	int3   
  4276e1:	int3   
  4276e2:	int3   
  4276e3:	int3   
  4276e4:	rex.W push rbp
  4276e6:	sub    rsp,0x20
  4276ea:	mov    rbp,rdx
  4276ed:	mov    rcx,QWORD PTR [rbp+0x70]
  4276f1:	call   0x401000
  4276f6:	add    rsp,0x20
  4276fa:	pop    rbp
  4276fb:	ret    
  4276fc:	int3   
  4276fd:	int3   
  4276fe:	int3   
  4276ff:	int3   
  427700:	int3   
  427701:	int3   
  427702:	int3   
  427703:	int3   
  427704:	rex.W push rbp
  427706:	sub    rsp,0x20
  42770a:	mov    rbp,rdx
  42770d:	mov    rcx,QWORD PTR [rbp+0x78]
  427711:	call   0x40215c
  427716:	add    rsp,0x20
  42771a:	pop    rbp
  42771b:	ret    
  42771c:	rex.W push rbx
  42771e:	push   rbp
  42771f:	push   rsi
  427720:	push   rdi
  427721:	sub    rsp,0x28
  427725:	xor    ebx,ebx
  427727:	mov    rbp,rdx
  42772a:	mov    rsi,rcx
  42772d:	cmp    DWORD PTR [rcx+0x30],ebx
  427730:	jbe    0x427757
  427732:	xor    edi,edi
  427734:	mov    rax,QWORD PTR [rsi+0x28]
  427738:	mov    rcx,QWORD PTR [rbp+0x0]
  42773c:	mov    rdx,QWORD PTR [rdi+rax*1]
  427740:	mov    rdx,QWORD PTR [rdx]
  427743:	call   0x40272c
  427748:	test   al,al
  42774a:	jne    0x427765
  42774c:	inc    ebx
  42774e:	add    rdi,0x8
  427752:	cmp    ebx,DWORD PTR [rsi+0x30]
  427755:	jb     0x427734
  427757:	mov    eax,0xffffffff
  42775c:	add    rsp,0x28
  427760:	pop    rdi
  427761:	pop    rsi
  427762:	pop    rbp
  427763:	pop    rbx
  427764:	ret    
  427765:	mov    eax,ebx
  427767:	jmp    0x42775c
  427769:	int3   
  42776a:	int3   
  42776b:	int3   
  42776c:	rex.W push rbx
  42776e:	push   rbp
  42776f:	push   rsi
  427770:	push   rdi
  427771:	sub    rsp,0x98
  427778:	mov    edx,DWORD PTR [rcx+0x20]
  42777b:	mov    rax,QWORD PTR [rcx+0x18]
  42777f:	mov    rbp,rcx
  427782:	dec    edx
  427784:	mov    rsi,QWORD PTR [rax+rdx*8]
  427788:	lea    rdx,[rip+0x28919]        # 0x4500a8
  42778f:	mov    rcx,QWORD PTR [rsi]
  427792:	call   QWORD PTR [rip+0x25a78]        # 0x44d210
  427798:	mov    rcx,QWORD PTR [rsi]
  42779b:	lea    rdx,[rip+0x288f6]        # 0x450098
  4277a2:	mov    QWORD PTR [rsi+0x28],rax
  4277a6:	call   QWORD PTR [rip+0x25a64]        # 0x44d210
  4277ac:	mov    rcx,QWORD PTR [rsi]
  4277af:	lea    rdx,[rip+0x288ca]        # 0x450080
  4277b6:	mov    QWORD PTR [rsi+0x30],rax
  4277ba:	call   QWORD PTR [rip+0x25a50]        # 0x44d210
  4277c0:	xor    ebx,ebx
  4277c2:	cmp    rax,rbx
  4277c5:	mov    QWORD PTR [rsi+0x20],rax
  4277c9:	je     0x42789f
  4277cf:	mov    rcx,QWORD PTR [rsi]
  4277d2:	lea    rdx,[rip+0x2888f]        # 0x450068
  4277d9:	mov    DWORD PTR [rsp+0xc0],0x1
  4277e4:	call   QWORD PTR [rip+0x25a26]        # 0x44d210
  4277ea:	cmp    rax,rbx
  4277ed:	je     0x427801
  4277ef:	lea    rcx,[rsp+0xc0]
  4277f7:	call   rax
  4277f9:	cmp    eax,ebx
  4277fb:	jne    0x4278ff
  427801:	cmp    DWORD PTR [rsp+0xc0],ebx
  427808:	mov    edi,ebx
  42780a:	jbe    0x42789f
  427810:	mov    eax,DWORD PTR [rbp+0x20]
  427813:	mov    rcx,QWORD PTR [rsi+0x20]
  427817:	lea    r9,[rsp+0x3c]
  42781c:	dec    eax
  42781e:	mov    r8d,0x3
  427824:	mov    edx,edi
  427826:	mov    DWORD PTR [rsp+0x30],eax
  42782a:	lea    rax,[rsp+0x38]
  42782f:	mov    DWORD PTR [rsp+0x34],edi
  427833:	mov    QWORD PTR [rsp+0x20],rax
  427838:	call   0x426d3c
  42783d:	cmp    eax,ebx
  42783f:	jne    0x4278ff
  427845:	mov    rcx,QWORD PTR [rsi+0x20]
  427849:	lea    rax,[rsp+0x39]
  42784e:	lea    r9,[rsp+0x4c]
  427853:	mov    r8d,0x2
  427859:	mov    edx,edi
  42785b:	mov    QWORD PTR [rsp+0x20],rax
  427860:	call   0x426d3c
  427865:	cmp    eax,ebx
  427867:	jne    0x4278ff
  42786d:	lea    rcx,[rsp+0x60]
  427872:	lea    rdx,[rsp+0x30]
  427877:	mov    r8d,0x2c
  42787d:	call   0x44b480
  427882:	lea    rcx,[rbp+0x50]
  427886:	lea    rdx,[rsp+0x60]
  42788b:	call   0x42746c
  427890:	inc    edi
  427892:	cmp    edi,DWORD PTR [rsp+0xc0]
  427899:	jb     0x427810
  42789f:	mov    rcx,QWORD PTR [rsi]
  4278a2:	lea    rdx,[rip+0x287af]        # 0x450058
  4278a9:	call   QWORD PTR [rip+0x25961]        # 0x44d210
  4278af:	cmp    rax,rbx
  4278b2:	je     0x4278fd
  4278b4:	lea    rcx,[rsi+0x40]
  4278b8:	call   rax
  4278ba:	cmp    eax,ebx
  4278bc:	jne    0x4278ff
  4278be:	mov    rcx,QWORD PTR [rsi+0x40]
  4278c2:	cmp    rcx,rbx
  4278c5:	je     0x4278fd
  4278c7:	mov    rax,QWORD PTR [rcx]
  4278ca:	call   QWORD PTR [rax+0x18]
  4278cd:	cmp    eax,ebx
  4278cf:	mov    edi,eax
  4278d1:	jbe    0x4278fd
  4278d3:	mov    ecx,DWORD PTR [rbp+0x20]
  4278d6:	mov    DWORD PTR [rsp+0xc4],ebx
  4278dd:	dec    ecx
  4278df:	mov    DWORD PTR [rsp+0xc0],ecx
  4278e6:	mov    rdx,QWORD PTR [rsp+0xc0]
  4278ee:	lea    rcx,[rbp+0x60]
  4278f2:	call   0x434fb4
  4278f7:	inc    ebx
  4278f9:	cmp    ebx,edi
  4278fb:	jb     0x4278d3
  4278fd:	xor    eax,eax
  4278ff:	add    rsp,0x98
  427906:	pop    rdi
  427907:	pop    rsi
  427908:	pop    rbp
  427909:	pop    rbx
  42790a:	ret    
  42790b:	int3   
  42790c:	rex.W push rbx
  42790e:	push   rbp
  42790f:	push   rsi
  427910:	push   rdi
  427911:	push   r12
  427913:	sub    rsp,0x40
  427917:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427920:	mov    esi,r9d
  427923:	mov    r12d,r8d
  427926:	mov    rbx,rdx
  427929:	mov    rbp,rcx
  42792c:	mov    rdi,QWORD PTR [rsp+0x90]
  427934:	mov    rcx,QWORD PTR [rdi]
  427937:	test   rcx,rcx
  42793a:	je     0x427948
  42793c:	call   0x40215c
  427941:	mov    QWORD PTR [rdi],0x0
  427948:	mov    QWORD PTR [rdi+0x8],0x0
  427950:	mov    WORD PTR [rsp+0x28],0x0
  427957:	mov    WORD PTR [rsp+0x2a],0x0
  42795e:	mov    QWORD PTR [rsp+0x30],0x0
  427967:	test   rbx,rbx
  42796a:	je     0x42797c
  42796c:	lea    r8,[rsp+0x28]
  427971:	mov    edx,esi
  427973:	mov    ecx,r12d
  427976:	call   rbx
  427978:	mov    ebx,eax
  42797a:	jmp    0x427987
  42797c:	lea    rdx,[rsp+0x28]
  427981:	mov    ecx,esi
  427983:	call   rbp
  427985:	mov    ebx,eax
  427987:	test   ebx,ebx
  427989:	je     0x42798d
  42798b:	jmp    0x427a03
  42798d:	movzx  eax,WORD PTR [rsp+0x28]
  427992:	cmp    ax,0x8
  427996:	jne    0x4279f5
  427998:	mov    rcx,QWORD PTR [rsp+0x30]
  42799d:	call   QWORD PTR [rip+0x258f5]        # 0x44d298
  4279a3:	mov    rsi,QWORD PTR [rsp+0x30]
  4279a8:	mov    ebx,eax
  4279aa:	cmp    rbx,QWORD PTR [rdi+0x8]
  4279ae:	je     0x4279e0
  4279b0:	mov    rcx,QWORD PTR [rdi]
  4279b3:	test   rcx,rcx
  4279b6:	je     0x4279c4
  4279b8:	call   0x40215c
  4279bd:	mov    QWORD PTR [rdi],0x0
  4279c4:	mov    QWORD PTR [rdi+0x8],0x0
  4279cc:	test   rbx,rbx
  4279cf:	je     0x427a01
  4279d1:	mov    rcx,rbx
  4279d4:	call   0x402130
  4279d9:	mov    QWORD PTR [rdi],rax
  4279dc:	mov    QWORD PTR [rdi+0x8],rbx
  4279e0:	test   rbx,rbx
  4279e3:	je     0x427a01
  4279e5:	mov    r8,rbx
  4279e8:	mov    rdx,rsi
  4279eb:	mov    rcx,QWORD PTR [rdi]
  4279ee:	call   0x44b480
  4279f3:	jmp    0x427a01
  4279f5:	test   ax,ax
  4279f8:	je     0x427a01
  4279fa:	mov    ebx,0x80004005
  4279ff:	jmp    0x427a03
  427a01:	xor    ebx,ebx
  427a03:	lea    rcx,[rsp+0x28]
  427a08:	call   0x40b028
  427a0d:	mov    eax,ebx
  427a0f:	add    rsp,0x40
  427a13:	pop    r12
  427a15:	pop    rdi
  427a16:	pop    rsi
  427a17:	pop    rbp
  427a18:	pop    rbx
  427a19:	ret    
  427a1a:	int3   
  427a1b:	int3   
  427a1c:	rex.W push rbp
  427a1e:	sub    rsp,0x20
  427a22:	mov    rbp,rdx
  427a25:	lea    rcx,[rbp+0x28]
  427a29:	call   0x40b830
  427a2e:	add    rsp,0x20
  427a32:	pop    rbp
  427a33:	ret    
  427a34:	rex.W push rbx
  427a36:	push   rbp
  427a37:	push   rsi
  427a38:	push   rdi
  427a39:	sub    rsp,0x28
  427a3d:	movsxd rdi,DWORD PTR [rcx+0x50]
  427a41:	mov    rbx,rcx
  427a44:	test   edi,edi
  427a46:	mov    rsi,rdi
  427a49:	je     0x427a78
  427a4b:	shl    rsi,0x3
  427a4f:	mov    rax,QWORD PTR [rbx+0x48]
  427a53:	sub    rsi,0x8
  427a57:	add    edi,0xffffffff
  427a5a:	mov    rbp,QWORD PTR [rsi+rax*1]
  427a5e:	test   rbp,rbp
  427a61:	je     0x427a74
  427a63:	mov    rcx,QWORD PTR [rbp+0x0]
  427a67:	call   0x40215c
  427a6c:	mov    rcx,rbp
  427a6f:	call   0x40215c
  427a74:	test   edi,edi
  427a76:	jne    0x427a4f
  427a78:	mov    rcx,QWORD PTR [rbx+0x48]
  427a7c:	call   0x40215c
  427a81:	movsxd rdi,DWORD PTR [rbx+0x30]
  427a85:	test   edi,edi
  427a87:	mov    rsi,rdi
  427a8a:	je     0x427ac2
  427a8c:	shl    rsi,0x3
  427a90:	mov    rax,QWORD PTR [rbx+0x28]
  427a94:	sub    rsi,0x8
  427a98:	add    edi,0xffffffff
  427a9b:	mov    rbp,QWORD PTR [rsi+rax*1]
  427a9f:	test   rbp,rbp
  427aa2:	je     0x427abe
  427aa4:	mov    rcx,QWORD PTR [rbp+0x10]
  427aa8:	call   0x40215c
  427aad:	mov    rcx,QWORD PTR [rbp+0x0]
  427ab1:	call   0x40215c
  427ab6:	mov    rcx,rbp
  427ab9:	call   0x40215c
  427abe:	test   edi,edi
  427ac0:	jne    0x427a90
  427ac2:	mov    rcx,QWORD PTR [rbx+0x28]
  427ac6:	call   0x40215c
  427acb:	mov    rcx,QWORD PTR [rbx+0x18]
  427acf:	add    rsp,0x28
  427ad3:	pop    rdi
  427ad4:	pop    rsi
  427ad5:	pop    rbp
  427ad6:	pop    rbx
  427ad7:	jmp    0x40215c
  427adc:	rex.W push rbx
  427ade:	push   rsi
  427adf:	push   rdi
  427ae0:	sub    rsp,0x30
  427ae4:	mov    rbx,rdx
  427ae7:	mov    rsi,rcx
  427aea:	mov    dx,0x2e
  427aee:	mov    rcx,rbx
  427af1:	call   0x4035f4
  427af6:	mov    rcx,rbx
  427af9:	mov    edi,eax
  427afb:	call   0x40362c
  427b00:	cmp    edi,eax
  427b02:	jg     0x427b0b
  427b04:	mov    eax,0xffffffff
  427b09:	jmp    0x427b76
  427b0b:	mov    rax,QWORD PTR [rbx]
  427b0e:	lea    ecx,[rdi+0x1]
  427b11:	lea    rdx,[rax+rcx*2]
  427b15:	lea    rcx,[rsp+0x20]
  427b1a:	call   0x4031c0
  427b1f:	cmp    DWORD PTR [rsp+0x28],0x0
  427b24:	je     0x427b65
  427b26:	mov    rcx,QWORD PTR [rsp+0x20]
  427b2b:	lea    rdx,[rip+0x285a6]        # 0x4500d8
  427b32:	call   0x402864
  427b37:	test   al,al
  427b39:	jne    0x427b65
  427b3b:	xor    ebx,ebx
  427b3d:	cmp    DWORD PTR [rsi+0x48],ebx
  427b40:	jbe    0x427b65
  427b42:	xor    edi,edi
  427b44:	mov    rax,QWORD PTR [rsi+0x40]
  427b48:	lea    rdx,[rsp+0x20]
  427b4d:	mov    rcx,QWORD PTR [rdi+rax*1]
  427b51:	call   0x42771c
  427b56:	test   eax,eax
  427b58:	jns    0x427b6a
  427b5a:	inc    ebx
  427b5c:	add    rdi,0x8
  427b60:	cmp    ebx,DWORD PTR [rsi+0x48]
  427b63:	jb     0x427b44
  427b65:	mov    ebx,0xffffffff
  427b6a:	mov    rcx,QWORD PTR [rsp+0x20]
  427b6f:	call   0x40215c
  427b74:	mov    eax,ebx
  427b76:	add    rsp,0x30
  427b7a:	pop    rdi
  427b7b:	pop    rsi
  427b7c:	pop    rbx
  427b7d:	ret    
  427b7e:	int3   
  427b7f:	int3   
  427b80:	rex.W push rbx
  427b82:	push   rbp
  427b83:	push   rsi
  427b84:	push   rdi
  427b85:	sub    rsp,0x28
  427b89:	xor    ebx,ebx
  427b8b:	mov    rbp,rdx
  427b8e:	mov    rsi,rcx
  427b91:	cmp    DWORD PTR [rcx+0x48],ebx
  427b94:	jbe    0x427bbc
  427b96:	xor    edi,edi
  427b98:	mov    rax,QWORD PTR [rsi+0x40]
  427b9c:	mov    rdx,QWORD PTR [rbp+0x0]
  427ba0:	mov    rcx,QWORD PTR [rdi+rax*1]
  427ba4:	mov    rcx,QWORD PTR [rcx+0x18]
  427ba8:	call   0x40272c
  427bad:	test   al,al
  427baf:	jne    0x427bca
  427bb1:	inc    ebx
  427bb3:	add    rdi,0x8
  427bb7:	cmp    ebx,DWORD PTR [rsi+0x48]
  427bba:	jb     0x427b98
  427bbc:	mov    eax,0xffffffff
  427bc1:	add    rsp,0x28
  427bc5:	pop    rdi
  427bc6:	pop    rsi
  427bc7:	pop    rbp
  427bc8:	pop    rbx
  427bc9:	ret    
  427bca:	mov    eax,ebx
  427bcc:	jmp    0x427bc1
  427bce:	int3   
  427bcf:	int3   
  427bd0:	rex.W push rbx
  427bd2:	push   rbp
  427bd3:	push   rsi
  427bd4:	push   rdi
  427bd5:	push   r12
  427bd7:	sub    rsp,0x40
  427bdb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427be4:	mov    rsi,r8
  427be7:	mov    rbx,rdx
  427bea:	mov    r12,rcx
  427bed:	mov    DWORD PTR [r8+0x8],0x0
  427bf5:	xor    edi,edi
  427bf7:	cmp    DWORD PTR [rdx+0x8],edi
  427bfa:	jbe    0x427cb0
  427c00:	mov    rax,QWORD PTR [rbx]
  427c03:	lea    rcx,[rax+rdi*2]
  427c07:	mov    dx,0x2e
  427c0b:	call   0x4026e0
  427c10:	lea    ebp,[rax+rdi*1]
  427c13:	mov    ecx,0xffffffff
  427c18:	test   eax,eax
  427c1a:	cmovs  ebp,ecx
  427c1d:	test   ebp,ebp
  427c1f:	jns    0x427c24
  427c21:	mov    ebp,DWORD PTR [rbx+0x8]
  427c24:	mov    r9d,ebp
  427c27:	sub    r9d,edi
  427c2a:	mov    r8d,edi
  427c2d:	lea    rdx,[rsp+0x28]
  427c32:	mov    rcx,rbx
  427c35:	call   0x409d0c
  427c3a:	nop
  427c3b:	cmp    DWORD PTR [rsp+0x30],0x0
  427c40:	je     0x427c8d
  427c42:	lea    rdx,[rsp+0x28]
  427c47:	mov    rcx,r12
  427c4a:	call   0x427b80
  427c4f:	mov    edi,eax
  427c51:	test   eax,eax
  427c53:	jns    0x427c6b
  427c55:	lea    rdx,[rip+0x25a94]        # 0x44d6f0
  427c5c:	mov    rcx,QWORD PTR [rsp+0x28]
  427c61:	call   QWORD PTR [rip+0x256e1]        # 0x44d348
  427c67:	test   eax,eax
  427c69:	jne    0x427c9b
  427c6b:	mov    edx,edi
  427c6d:	mov    rcx,rsi
  427c70:	call   0x4131dc
  427c75:	lea    edi,[rbp+0x1]
  427c78:	mov    rcx,QWORD PTR [rsp+0x28]
  427c7d:	call   0x40215c
  427c82:	cmp    edi,DWORD PTR [rbx+0x8]
  427c85:	jb     0x427c00
  427c8b:	jmp    0x427cb0
  427c8d:	mov    rcx,QWORD PTR [rsp+0x28]
  427c92:	call   0x40215c
  427c97:	xor    al,al
  427c99:	jmp    0x427cb2
  427c9b:	mov    DWORD PTR [rsi+0x8],0x0
  427ca2:	mov    rcx,QWORD PTR [rsp+0x28]
  427ca7:	call   0x40215c
  427cac:	xor    al,al
  427cae:	jmp    0x427cb2
  427cb0:	mov    al,0x1
  427cb2:	add    rsp,0x40
  427cb6:	pop    r12
  427cb8:	pop    rdi
  427cb9:	pop    rsi
  427cba:	pop    rbp
  427cbb:	pop    rbx
  427cbc:	ret    
  427cbd:	int3   
  427cbe:	int3   
  427cbf:	int3   
  427cc0:	rex.W push rbp
  427cc2:	sub    rsp,0x20
  427cc6:	mov    rbp,rdx
  427cc9:	lea    rcx,[rbp+0x28]
  427ccd:	call   0x401000
  427cd2:	add    rsp,0x20
  427cd6:	pop    rbp
  427cd7:	ret    
  427cd8:	rex.W push rbx
  427cda:	sub    rsp,0x40
  427cde:	mov    rax,rcx
  427ce1:	mov    ecx,edx
  427ce3:	mov    rbx,r9
  427ce6:	mov    r10d,r8d
  427ce9:	imul   rcx,rcx,0x2c
  427ced:	add    rcx,QWORD PTR [rax+0x50]
  427cf1:	cmp    r8d,0x7
  427cf5:	je     0x427d16
  427cf7:	cmp    r8d,0x8
  427cfb:	je     0x427d16
  427cfd:	mov    edx,DWORD PTR [rcx]
  427cff:	mov    rax,QWORD PTR [rax+0x18]
  427d03:	mov    ecx,DWORD PTR [rcx+0x4]
  427d06:	mov    r9,QWORD PTR [rax+rdx*8]
  427d0a:	mov    r8,rbx
  427d0d:	mov    edx,r10d
  427d10:	call   QWORD PTR [r9+0x20]
  427d14:	jmp    0x427d58
  427d16:	xor    eax,eax
  427d18:	cmp    r8d,0x7
  427d1c:	mov    WORD PTR [rsp+0x20],ax
  427d21:	mov    WORD PTR [rsp+0x22],ax
  427d26:	mov    QWORD PTR [rsp+0x28],rax
  427d2b:	jne    0x427d32
  427d2d:	mov    dl,BYTE PTR [rcx+0x9]
  427d30:	jmp    0x427d35
  427d32:	mov    dl,BYTE PTR [rcx+0x8]
  427d35:	lea    rcx,[rsp+0x20]
  427d3a:	call   0x40b254
  427d3f:	lea    rcx,[rsp+0x20]
  427d44:	mov    rdx,rbx
  427d47:	call   0x40b0b8
  427d4c:	lea    rcx,[rsp+0x20]
  427d51:	call   0x40b028
  427d56:	xor    eax,eax
  427d58:	add    rsp,0x40
  427d5c:	pop    rbx
  427d5d:	ret    
  427d5e:	int3   
  427d5f:	int3   
  427d60:	sub    rsp,0x28
  427d64:	mov    rax,rcx
  427d67:	mov    ecx,edx
  427d69:	mov    r10,r9
  427d6c:	mov    r11,r8
  427d6f:	imul   rcx,rcx,0x2c
  427d73:	add    rcx,QWORD PTR [rax+0x50]
  427d77:	cmp    BYTE PTR [rcx+0x9],0x0
  427d7b:	je     0x427da7
  427d7d:	mov    edx,DWORD PTR [rcx]
  427d7f:	mov    rax,QWORD PTR [rax+0x18]
  427d83:	mov    r8,r10
  427d86:	mov    r9,QWORD PTR [rax+rdx*8]
  427d8a:	mov    rdx,r11
  427d8d:	mov    rax,QWORD PTR [r9+0x28]
  427d91:	test   rax,rax
  427d94:	je     0x427d9d
  427d96:	mov    ecx,DWORD PTR [rcx+0x4]
  427d99:	call   rax
  427d9b:	jmp    0x427da9
  427d9d:	add    rcx,0x1c
  427da1:	call   QWORD PTR [r9+0x18]
  427da5:	jmp    0x427da9
  427da7:	xor    eax,eax
  427da9:	add    rsp,0x28
  427dad:	ret    
  427dae:	int3   
  427daf:	int3   
  427db0:	sub    rsp,0x28
  427db4:	mov    rax,rcx
  427db7:	mov    ecx,edx
  427db9:	mov    r10,r9
  427dbc:	mov    r11,r8
  427dbf:	imul   rcx,rcx,0x2c
  427dc3:	add    rcx,QWORD PTR [rax+0x50]
  427dc7:	cmp    BYTE PTR [rcx+0x8],0x0
  427dcb:	je     0x427df7
  427dcd:	mov    edx,DWORD PTR [rcx]
  427dcf:	mov    rax,QWORD PTR [rax+0x18]
  427dd3:	mov    r8,r10
  427dd6:	mov    r9,QWORD PTR [rax+rdx*8]
  427dda:	mov    rdx,r11
  427ddd:	mov    rax,QWORD PTR [r9+0x30]
  427de1:	test   rax,rax
  427de4:	je     0x427ded
  427de6:	mov    ecx,DWORD PTR [rcx+0x4]
  427de9:	call   rax
  427deb:	jmp    0x427df9
  427ded:	add    rcx,0xc
  427df1:	call   QWORD PTR [r9+0x18]
  427df5:	jmp    0x427df9
  427df7:	xor    eax,eax
  427df9:	add    rsp,0x28
  427dfd:	ret    
  427dfe:	int3   
  427dff:	int3   
  427e00:	mov    rax,QWORD PTR [rcx+0x10]
  427e04:	mov    r10d,edx
  427e07:	mov    rdx,QWORD PTR [rcx+0x58]
  427e0b:	mov    ecx,DWORD PTR [rdx+r10*8]
  427e0f:	mov    edx,DWORD PTR [rdx+r10*8+0x4]
  427e14:	mov    rcx,QWORD PTR [rax+rcx*8]
  427e18:	mov    rcx,QWORD PTR [rcx+0x40]
  427e1c:	mov    rax,QWORD PTR [rcx]
  427e1f:	rex.W jmp QWORD PTR [rax+0x20]
  427e23:	int3   
  427e24:	mov    rax,QWORD PTR [rcx+0x10]
  427e28:	mov    r9d,edx
  427e2b:	mov    rdx,QWORD PTR [rcx+0x58]
  427e2f:	mov    ecx,DWORD PTR [rdx+r9*8]
  427e33:	mov    edx,DWORD PTR [rdx+r9*8+0x4]
  427e38:	mov    rcx,QWORD PTR [rax+rcx*8]
  427e3c:	mov    rcx,QWORD PTR [rcx+0x40]
  427e40:	mov    rax,QWORD PTR [rcx]
  427e43:	rex.W jmp QWORD PTR [rax+0x28]
  427e47:	int3   
  427e48:	rex.W push rbx
  427e4a:	push   rbp
  427e4b:	push   rsi
  427e4c:	push   rdi
  427e4d:	sub    rsp,0x38
  427e51:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427e5a:	mov    rsi,rdx
  427e5d:	mov    rbp,rcx
  427e60:	mov    ecx,0x10
  427e65:	call   0x402130
  427e6a:	mov    rbx,rax
  427e6d:	mov    QWORD PTR [rsp+0x70],rax
  427e72:	test   rax,rax
  427e75:	je     0x427eae
  427e77:	mov    QWORD PTR [rax],0x0
  427e7e:	mov    QWORD PTR [rax+0x8],0x0
  427e86:	mov    rdi,QWORD PTR [rsi+0x8]
  427e8a:	test   rdi,rdi
  427e8d:	je     0x427eb0
  427e8f:	mov    rcx,rdi
  427e92:	call   0x402130
  427e97:	mov    QWORD PTR [rbx],rax
  427e9a:	mov    r8,rdi
  427e9d:	mov    rdx,QWORD PTR [rsi]
  427ea0:	mov    rcx,rax
  427ea3:	call   0x44b480
  427ea8:	mov    QWORD PTR [rbx+0x8],rdi
  427eac:	jmp    0x427eb0
  427eae:	xor    ebx,ebx
  427eb0:	mov    rdx,rbx
  427eb3:	mov    rcx,rbp
  427eb6:	add    rsp,0x38
  427eba:	pop    rdi
  427ebb:	pop    rsi
  427ebc:	pop    rbp
  427ebd:	pop    rbx
  427ebe:	jmp    0x4010c8
  427ec3:	int3   
  427ec4:	int3   
  427ec5:	int3   
  427ec6:	int3   
  427ec7:	int3   
  427ec8:	rex.W push rbp
  427eca:	sub    rsp,0x20
  427ece:	mov    rbp,rdx
  427ed1:	mov    rcx,QWORD PTR [rbp+0x70]
  427ed5:	call   0x40215c
  427eda:	add    rsp,0x20
  427ede:	pop    rbp
  427edf:	ret    
  427ee0:	rex.W push rbx
  427ee2:	push   rdi
  427ee3:	sub    rsp,0x38
  427ee7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427ef0:	mov    rdi,rcx
  427ef3:	mov    ecx,0x48
  427ef8:	call   0x402130
  427efd:	mov    rbx,rax
  427f00:	mov    QWORD PTR [rsp+0x58],rax
  427f05:	test   rax,rax
  427f08:	je     0x427f4c
  427f0a:	mov    QWORD PTR [rax],0x0
  427f11:	lea    rcx,[rax+0x8]
  427f15:	call   0x403150
  427f1a:	mov    QWORD PTR [rbx+0x18],0x0
  427f22:	mov    QWORD PTR [rbx+0x20],0x0
  427f2a:	mov    QWORD PTR [rbx+0x28],0x0
  427f32:	mov    QWORD PTR [rbx+0x30],0x0
  427f3a:	mov    QWORD PTR [rbx+0x38],0x0
  427f42:	mov    QWORD PTR [rbx+0x40],0x0
  427f4a:	jmp    0x427f4e
  427f4c:	xor    ebx,ebx
  427f4e:	mov    rdx,rbx
  427f51:	mov    rcx,rdi
  427f54:	call   0x4010c8
  427f59:	mov    rax,rbx
  427f5c:	add    rsp,0x38
  427f60:	pop    rdi
  427f61:	pop    rbx
  427f62:	ret    
  427f63:	int3   
  427f64:	int3   
  427f65:	int3   
  427f66:	int3   
  427f67:	int3   
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	rex.W push rbp
  427f72:	sub    rsp,0x20
  427f76:	mov    rbp,rdx
  427f79:	mov    rcx,QWORD PTR [rbp+0x58]
  427f7d:	call   0x40215c
  427f82:	add    rsp,0x20
  427f86:	pop    rbp
  427f87:	ret    
  427f88:	int3   
  427f89:	int3   
  427f8a:	int3   
  427f8b:	int3   
  427f8c:	int3   
  427f8d:	int3   
  427f8e:	int3   
  427f8f:	int3   
  427f90:	rex.W push rbp
  427f92:	sub    rsp,0x20
  427f96:	mov    rbp,rdx
  427f99:	mov    rcx,QWORD PTR [rbp+0x58]
  427f9d:	call   0x4268e4
  427fa2:	add    rsp,0x20
  427fa6:	pop    rbp
  427fa7:	ret    
  427fa8:	rex.W push rbx
  427faa:	push   rbp
  427fab:	push   rsi
  427fac:	push   rdi
  427fad:	sub    rsp,0x38
  427fb1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  427fba:	mov    rdi,rcx
  427fbd:	movsxd rbx,DWORD PTR [rcx+0x8]
  427fc1:	mov    rbp,rbx
  427fc4:	test   ebx,ebx
  427fc6:	je     0x428012
  427fc8:	shl    rbp,0x3
  427fcc:	add    ebx,0xffffffff
  427fcf:	sub    rbp,0x8
  427fd3:	mov    rax,QWORD PTR [rdi]
  427fd6:	mov    rsi,QWORD PTR [rax+rbp*1]
  427fda:	mov    QWORD PTR [rsp+0x60],rsi
  427fdf:	test   rsi,rsi
  427fe2:	je     0x42800e
  427fe4:	mov    rcx,QWORD PTR [rsi+0x40]
  427fe8:	test   rcx,rcx
  427feb:	je     0x427ff4
  427fed:	mov    rax,QWORD PTR [rcx]
  427ff0:	call   QWORD PTR [rax+0x10]
  427ff3:	nop
  427ff4:	mov    rcx,QWORD PTR [rsi+0x8]
  427ff8:	call   0x40215c
  427ffd:	nop
  427ffe:	mov    rcx,rsi
  428001:	call   0x40670c
  428006:	mov    rcx,rsi
  428009:	call   0x40215c
  42800e:	test   ebx,ebx
  428010:	jne    0x427fcc
  428012:	mov    DWORD PTR [rdi+0x8],0x0
  428019:	add    rsp,0x38
  42801d:	pop    rdi
  42801e:	pop    rsi
  42801f:	pop    rbp
  428020:	pop    rbx
  428021:	ret    
  428022:	int3   
  428023:	int3   
  428024:	int3   
  428025:	int3   
  428026:	int3   
  428027:	int3   
  428028:	rex.W push rbp
  42802a:	sub    rsp,0x20
  42802e:	mov    rbp,rdx
  428031:	mov    rcx,QWORD PTR [rbp+0x60]
  428035:	call   0x4268e4
  42803a:	add    rsp,0x20
  42803e:	pop    rbp
  42803f:	ret    
  428040:	int3   
  428041:	int3   
  428042:	int3   
  428043:	int3   
  428044:	int3   
  428045:	int3   
  428046:	int3   
  428047:	int3   
  428048:	rex.W push rbp
  42804a:	sub    rsp,0x20
  42804e:	mov    rbp,rdx
  428051:	mov    rcx,QWORD PTR [rbp+0x60]
  428055:	add    rcx,0x8
  428059:	call   0x401000
  42805e:	add    rsp,0x20
  428062:	pop    rbp
  428063:	ret    
  428064:	mov    QWORD PTR [rsp+0x8],rcx
  428069:	push   rbx
  42806a:	push   rdi
  42806b:	sub    rsp,0x38
  42806f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  428078:	mov    rbx,rdx
  42807b:	mov    rdi,rcx
  42807e:	mov    eax,DWORD PTR [rdx]
  428080:	mov    DWORD PTR [rcx],eax
  428082:	mov    rax,QWORD PTR [rdx+0x8]
  428086:	mov    QWORD PTR [rcx+0x8],rax
  42808a:	mov    rax,QWORD PTR [rdx+0x10]
  42808e:	mov    QWORD PTR [rcx+0x10],rax
  428092:	add    rdx,0x18
  428096:	add    rcx,0x18
  42809a:	call   0x403208
  42809f:	nop
  4280a0:	lea    rdx,[rbx+0x28]
  4280a4:	lea    rcx,[rdi+0x28]
  4280a8:	call   0x4274ec
  4280ad:	nop
  4280ae:	mov    rax,QWORD PTR [rbx+0x38]
  4280b2:	mov    QWORD PTR [rdi+0x38],rax
  4280b6:	mov    al,BYTE PTR [rbx+0x40]
  4280b9:	mov    BYTE PTR [rdi+0x40],al
  4280bc:	mov    al,BYTE PTR [rbx+0x41]
  4280bf:	mov    BYTE PTR [rdi+0x41],al
  4280c2:	mov    eax,DWORD PTR [rbx+0x44]
  4280c5:	mov    DWORD PTR [rdi+0x44],eax
  4280c8:	lea    rdx,[rbx+0x48]
  4280cc:	lea    rcx,[rdi+0x48]
  4280d0:	call   0x427604
  4280d5:	mov    r11d,DWORD PTR [rbx+0x58]
  4280d9:	mov    DWORD PTR [rdi+0x58],r11d
  4280dd:	mov    eax,DWORD PTR [rbx+0x5c]
  4280e0:	mov    DWORD PTR [rdi+0x5c],eax
  4280e3:	movdqu xmm0,XMMWORD PTR [rbx+0x60]
  4280e8:	movdqu XMMWORD PTR [rdi+0x60],xmm0
  4280ed:	mov    rax,rdi
  4280f0:	add    rsp,0x38
  4280f4:	pop    rdi
  4280f5:	pop    rbx
  4280f6:	ret    
  4280f7:	int3   
  4280f8:	int3   
  4280f9:	int3   
  4280fa:	int3   
  4280fb:	int3   
  4280fc:	int3   
  4280fd:	int3   
  4280fe:	int3   
  4280ff:	int3   
  428100:	int3   
  428101:	int3   
  428102:	int3   
  428103:	int3   
  428104:	rex.W push rbp
  428106:	sub    rsp,0x20
  42810a:	mov    rbp,rdx
  42810d:	mov    rcx,QWORD PTR [rbp+0x50]
  428111:	add    rcx,0x18
  428115:	call   0x401000
  42811a:	add    rsp,0x20
  42811e:	pop    rbp
  42811f:	ret    
  428120:	int3   
  428121:	int3   
  428122:	int3   
  428123:	int3   
  428124:	rex.W push rbp
  428126:	sub    rsp,0x20
  42812a:	mov    rbp,rdx
  42812d:	mov    rcx,QWORD PTR [rbp+0x50]
  428131:	add    rcx,0x28
  428135:	call   0x444b28
  42813a:	add    rsp,0x20
  42813e:	pop    rbp
  42813f:	ret    
  428140:	rex.W push rbx
  428142:	push   rbp
  428143:	push   rsi
  428144:	push   rdi
  428145:	push   r12
  428147:	push   r13
  428149:	sub    rsp,0x48
  42814d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  428156:	mov    rbp,rdx
  428159:	mov    r13,rcx
  42815c:	movsxd rdi,DWORD PTR [rdx+0x8]
  428160:	mov    rsi,rdi
  428163:	xor    ebx,ebx
  428165:	cmp    edi,ebx
  428167:	je     0x428196
  428169:	shl    rsi,0x3
  42816d:	add    edi,0xffffffff
  428170:	sub    rsi,0x8
  428174:	mov    rax,QWORD PTR [rbp+0x0]
  428178:	mov    r12,QWORD PTR [rsi+rax*1]
  42817c:	cmp    r12,rbx
  42817f:	je     0x428192
  428181:	mov    rcx,QWORD PTR [r12]
  428185:	call   0x40215c
  42818a:	mov    rcx,r12
  42818d:	call   0x40215c
  428192:	cmp    edi,ebx
  428194:	jne    0x42816d
  428196:	mov    DWORD PTR [rbp+0x8],ebx
  428199:	lea    rcx,[rsp+0x28]
  42819e:	call   0x403150
  4281a3:	nop
  4281a4:	cmp    DWORD PTR [r13+0x8],ebx
  4281a8:	jne    0x4281b9
  4281aa:	mov    rcx,QWORD PTR [rsp+0x28]
  4281af:	call   0x40215c
  4281b4:	jmp    0x4282a3
  4281b9:	cmp    DWORD PTR [r13+0x8],ebx
  4281bd:	jbe    0x42825e
  4281c3:	mov    rdi,rbx
  4281c6:	mov    r12d,DWORD PTR [r13+0x8]
  4281ca:	mov    edx,DWORD PTR [rsp+0x30]
  4281ce:	mov    rax,QWORD PTR [r13+0x0]
  4281d2:	movzx  esi,WORD PTR [rdi+rax*1]
  4281d6:	cmp    si,0x20
  4281da:	jne    0x428226
  4281dc:	cmp    edx,ebx
  4281de:	je     0x42824f
  4281e0:	mov    ecx,0x10
  4281e5:	call   0x402130
  4281ea:	mov    QWORD PTR [rsp+0x80],rax
  4281f2:	cmp    rax,rbx
  4281f5:	je     0x428206
  4281f7:	lea    rdx,[rsp+0x28]
  4281fc:	mov    rcx,rax
  4281ff:	call   0x403208
  428204:	jmp    0x428209
  428206:	mov    rax,rbx
  428209:	mov    rdx,rax
  42820c:	mov    rcx,rbp
  42820f:	call   0x4010c8
  428214:	mov    DWORD PTR [rsp+0x30],ebx
  428218:	mov    rax,QWORD PTR [rsp+0x28]
  42821d:	mov    WORD PTR [rax],bx
  428220:	mov    edx,DWORD PTR [rsp+0x30]
  428224:	jmp    0x42824f
  428226:	cmp    DWORD PTR [rsp+0x34],edx
  42822a:	jne    0x42823a
  42822c:	lea    rcx,[rsp+0x28]
  428231:	call   0x402f2c
  428236:	mov    edx,DWORD PTR [rsp+0x30]
  42823a:	mov    rcx,QWORD PTR [rsp+0x28]
  42823f:	mov    eax,edx
  428241:	mov    WORD PTR [rcx+rax*2],si
  428245:	inc    edx
  428247:	mov    WORD PTR [rcx+rdx*2],bx
  42824b:	mov    DWORD PTR [rsp+0x30],edx
  42824f:	add    rdi,0x2
  428253:	dec    r12
  428256:	jne    0x4281ce
  42825c:	jmp    0x428262
  42825e:	mov    edx,DWORD PTR [rsp+0x30]
  428262:	cmp    edx,ebx
  428264:	je     0x428299
  428266:	mov    ecx,0x10
  42826b:	call   0x402130
  428270:	mov    QWORD PTR [rsp+0x80],rax
  428278:	cmp    rax,rbx
  42827b:	je     0x42828d
  42827d:	lea    rdx,[rsp+0x28]
  428282:	mov    rcx,rax
  428285:	call   0x403208
  42828a:	mov    rbx,rax
  42828d:	mov    rdx,rbx
  428290:	mov    rcx,rbp
  428293:	call   0x4010c8
  428298:	nop
  428299:	mov    rcx,QWORD PTR [rsp+0x28]
  42829e:	call   0x40215c
  4282a3:	add    rsp,0x48
  4282a7:	pop    r13
  4282a9:	pop    r12
  4282ab:	pop    rdi
  4282ac:	pop    rsi
  4282ad:	pop    rbp
  4282ae:	pop    rbx
  4282af:	ret    
  4282b0:	rex.W push rbp
  4282b2:	sub    rsp,0x20
  4282b6:	mov    rbp,rdx
  4282b9:	lea    rcx,[rbp+0x28]
  4282bd:	call   0x401000
  4282c2:	add    rsp,0x20
  4282c6:	pop    rbp
  4282c7:	ret    
  4282c8:	int3   
  4282c9:	int3   
  4282ca:	int3   
  4282cb:	int3   
  4282cc:	int3   
  4282cd:	int3   
  4282ce:	int3   
  4282cf:	int3   
  4282d0:	rex.W push rbp
  4282d2:	sub    rsp,0x20
  4282d6:	mov    rbp,rdx
  4282d9:	mov    rcx,QWORD PTR [rbp+0x80]
  4282e0:	call   0x40215c
  4282e5:	add    rsp,0x20
  4282e9:	pop    rbp
  4282ea:	ret    
  4282eb:	int3   
  4282ec:	int3   
  4282ed:	int3   
  4282ee:	int3   
  4282ef:	int3   
  4282f0:	rex.W push rbp
  4282f2:	sub    rsp,0x20
  4282f6:	mov    rbp,rdx
  4282f9:	mov    rcx,QWORD PTR [rbp+0x80]
  428300:	call   0x40215c
  428305:	add    rsp,0x20
  428309:	pop    rbp
  42830a:	ret    
  42830b:	int3   
  42830c:	rex.W push rbx
  42830e:	push   rbp
  42830f:	push   rsi
  428310:	push   rdi
  428311:	push   r12
  428313:	push   r13
  428315:	push   r14
  428317:	push   r15
  428319:	mov    r11,rsp
  42831c:	sub    rsp,0x78
  428320:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  428329:	mov    rbx,r8
  42832c:	mov    rax,rdx
  42832f:	mov    rdi,rcx
  428332:	xor    r13d,r13d
  428335:	mov    QWORD PTR [r11-0x50],r13
  428339:	mov    DWORD PTR [r11-0x48],r13d
  42833d:	mov    DWORD PTR [r11-0x44],r13d
  428341:	mov    QWORD PTR [r11-0x40],r13
  428345:	mov    DWORD PTR [r11-0x38],r13d
  428349:	mov    DWORD PTR [r11-0x34],r13d
  42834d:	lea    rdx,[r11-0x50]
  428351:	mov    rcx,rax
  428354:	call   0x428140
  428359:	lea    rdx,[rsp+0x38]
  42835e:	mov    rcx,rbx
  428361:	call   0x428140
  428366:	mov    r15d,r13d
  428369:	mov    r14,QWORD PTR [rsp+0x28]
  42836e:	movsxd rbx,DWORD PTR [rsp+0x40]
  428373:	mov    r12,QWORD PTR [rsp+0x38]
  428378:	movsxd rsi,DWORD PTR [rsp+0x30]
  42837d:	cmp    esi,r13d
  428380:	jbe    0x428465
  428386:	lea    rax,[rdi+0x28]
  42838a:	mov    r13,r12
  42838d:	mov    rbp,r14
  428390:	sub    rbp,r12
  428393:	mov    r14,rax
  428396:	lea    rcx,[rsp+0x48]
  42839b:	call   0x403150
  4283a0:	nop
  4283a1:	lea    rcx,[rsp+0x58]
  4283a6:	call   0x403150
  4283ab:	nop
  4283ac:	mov    rdx,QWORD PTR [r13+rbp*1+0x0]
  4283b1:	lea    rcx,[rsp+0x48]
  4283b6:	call   0x4032f8
  4283bb:	cmp    r15d,ebx
  4283be:	jae    0x4283f2
  4283c0:	mov    rdx,QWORD PTR [r13+0x0]
  4283c4:	lea    rcx,[rsp+0x58]
  4283c9:	call   0x4032f8
  4283ce:	lea    rdx,[rip+0x2531b]        # 0x44d6f0
  4283d5:	mov    rcx,QWORD PTR [rsp+0x58]
  4283da:	call   QWORD PTR [rip+0x24f68]        # 0x44d348
  4283e0:	test   eax,eax
  4283e2:	jne    0x4283f2
  4283e4:	mov    DWORD PTR [rsp+0x60],eax
  4283e8:	mov    rax,QWORD PTR [rsp+0x58]
  4283ed:	mov    WORD PTR [rax],0x0
  4283f2:	mov    ecx,0x20
  4283f7:	call   0x402130
  4283fc:	mov    rdi,rax
  4283ff:	mov    QWORD PTR [rsp+0xd8],rax
  428407:	test   rax,rax
  42840a:	je     0x42842b
  42840c:	lea    rdx,[rsp+0x48]
  428411:	mov    rcx,rax
  428414:	call   0x403208
  428419:	nop
  42841a:	lea    rcx,[rdi+0x10]
  42841e:	lea    rdx,[rsp+0x58]
  428423:	call   0x403208
  428428:	nop
  428429:	jmp    0x42842d
  42842b:	xor    edi,edi
  42842d:	mov    rdx,rdi
  428430:	mov    rcx,r14
  428433:	call   0x4010c8
  428438:	nop
  428439:	mov    rcx,QWORD PTR [rsp+0x58]
  42843e:	call   0x40215c
  428443:	mov    rcx,QWORD PTR [rsp+0x48]
  428448:	call   0x40215c
  42844d:	inc    r15d
  428450:	add    r13,0x8
  428454:	cmp    r15d,esi
  428457:	jb     0x428396
  42845d:	mov    r14,QWORD PTR [rsp+0x28]
  428462:	xor    r13d,r13d
  428465:	mov    r15d,0xffffffff
  42846b:	cmp    ebx,r13d
  42846e:	je     0x428499
  428470:	lea    rdi,[r12+rbx*8]
  428474:	add    ebx,r15d
  428477:	sub    rdi,0x8
  42847b:	mov    rbp,QWORD PTR [rdi]
  42847e:	cmp    rbp,r13
  428481:	je     0x428494
  428483:	mov    rcx,QWORD PTR [rbp+0x0]
  428487:	call   0x40215c
  42848c:	mov    rcx,rbp
  42848f:	call   0x40215c
  428494:	cmp    ebx,r13d
  428497:	jne    0x428474
  428499:	mov    rcx,r12
  42849c:	call   0x40215c
  4284a1:	nop
  4284a2:	cmp    esi,r13d
  4284a5:	je     0x4284cf
  4284a7:	lea    rbx,[r14+rsi*8]
  4284ab:	add    esi,r15d
  4284ae:	sub    rbx,0x8
  4284b2:	mov    rdi,QWORD PTR [rbx]
  4284b5:	cmp    rdi,r13
  4284b8:	je     0x4284ca
  4284ba:	mov    rcx,QWORD PTR [rdi]
  4284bd:	call   0x40215c
  4284c2:	mov    rcx,rdi
  4284c5:	call   0x40215c
  4284ca:	cmp    esi,r13d
  4284cd:	jne    0x4284ab
  4284cf:	mov    rcx,r14
  4284d2:	add    rsp,0x78
  4284d6:	pop    r15
  4284d8:	pop    r14
  4284da:	pop    r13
  4284dc:	pop    r12
  4284de:	pop    rdi
  4284df:	pop    rsi
  4284e0:	pop    rbp
  4284e1:	pop    rbx
  4284e2:	jmp    0x40215c
  4284e7:	int3   
  4284e8:	int3   
  4284e9:	int3   
  4284ea:	int3   
  4284eb:	int3   
  4284ec:	rex.W push rbp
  4284ee:	sub    rsp,0x20
  4284f2:	mov    rbp,rdx
  4284f5:	lea    rcx,[rbp+0x28]
  4284f9:	call   0x4047cc
  4284fe:	add    rsp,0x20
  428502:	pop    rbp
  428503:	ret    
  428504:	int3   
  428505:	int3   
  428506:	int3   
  428507:	int3   
  428508:	int3   
  428509:	int3   
  42850a:	int3   
  42850b:	int3   
  42850c:	rex.W push rbp
  42850e:	sub    rsp,0x20
  428512:	mov    rbp,rdx
  428515:	lea    rcx,[rbp+0x38]
  428519:	call   0x4047cc
  42851e:	add    rsp,0x20
  428522:	pop    rbp
  428523:	ret    
  428524:	int3   
  428525:	int3   
  428526:	int3   
  428527:	int3   
  428528:	int3   
  428529:	int3   
  42852a:	int3   
  42852b:	int3   
  42852c:	rex.W push rbp
  42852e:	sub    rsp,0x20
  428532:	mov    rbp,rdx
  428535:	lea    rcx,[rbp+0x48]
  428539:	call   0x401000
  42853e:	add    rsp,0x20
  428542:	pop    rbp
  428543:	ret    
  428544:	int3   
  428545:	int3   
  428546:	int3   
  428547:	int3   
  428548:	int3   
  428549:	int3   
  42854a:	int3   
  42854b:	int3   
  42854c:	rex.W push rbp
  42854e:	sub    rsp,0x20
  428552:	mov    rbp,rdx
  428555:	lea    rcx,[rbp+0x48]
  428559:	call   0x40ef24
  42855e:	add    rsp,0x20
  428562:	pop    rbp
  428563:	ret    
  428564:	int3   
  428565:	int3   
  428566:	int3   
  428567:	int3   
  428568:	int3   
  428569:	int3   
  42856a:	int3   
  42856b:	int3   
  42856c:	rex.W push rbp
  42856e:	sub    rsp,0x20
  428572:	mov    rbp,rdx
  428575:	mov    rcx,QWORD PTR [rbp+0xd8]
  42857c:	call   0x40215c
  428581:	add    rsp,0x20
  428585:	pop    rbp
  428586:	ret    
  428587:	int3   
  428588:	int3   
  428589:	int3   
  42858a:	int3   
  42858b:	int3   
  42858c:	rex.W push rbp
  42858e:	sub    rsp,0x20
  428592:	mov    rbp,rdx
  428595:	mov    rcx,QWORD PTR [rbp+0xd8]
  42859c:	call   0x401000
  4285a1:	add    rsp,0x20
  4285a5:	pop    rbp
  4285a6:	ret    
  4285a7:	int3   
  4285a8:	rex.W push rbx
  4285aa:	push   rbp
  4285ab:	push   rsi
  4285ac:	push   rdi
  4285ad:	push   r12
  4285af:	push   r13
  4285b1:	sub    rsp,0x28
  4285b5:	movsxd rbx,DWORD PTR [r8+0x8]
  4285b9:	mov    r13,r8
  4285bc:	mov    edi,edx
  4285be:	test   ebx,ebx
  4285c0:	mov    rsi,rcx
  4285c3:	mov    r12,rbx
  4285c6:	je     0x4285f5
  4285c8:	shl    r12,0x3
  4285cc:	mov    rax,QWORD PTR [r13+0x0]
  4285d0:	sub    r12,0x8
  4285d4:	add    ebx,0xffffffff
  4285d7:	mov    rbp,QWORD PTR [r12+rax*1]
  4285db:	test   rbp,rbp
  4285de:	je     0x4285f1
  4285e0:	mov    rcx,QWORD PTR [rbp+0x0]
  4285e4:	call   0x40215c
  4285e9:	mov    rcx,rbp
  4285ec:	call   0x40215c
  4285f1:	test   ebx,ebx
  4285f3:	jne    0x4285cc
  4285f5:	test   edi,edi
  4285f7:	mov    DWORD PTR [r13+0x8],0x0
  4285ff:	je     0x42869d
  428605:	movzx  r12d,BYTE PTR [rsi]
  428609:	add    edi,0xffffffff
  42860c:	inc    rsi
  42860f:	cmp    r12d,edi
  428612:	ja     0x4286ac
  428618:	mov    ecx,0x10
  42861d:	call   0x402130
  428622:	test   rax,rax
  428625:	mov    rbx,rax
  428628:	je     0x42863b
  42862a:	mov    QWORD PTR [rax],0x0
  428631:	mov    QWORD PTR [rax+0x8],0x0
  428639:	jmp    0x42863d
  42863b:	xor    ebx,ebx
  42863d:	mov    rdx,rbx
  428640:	mov    rcx,r13
  428643:	call   0x4010c8
  428648:	cmp    r12,QWORD PTR [rbx+0x8]
  42864c:	je     0x42867e
  42864e:	mov    rcx,QWORD PTR [rbx]
  428651:	test   rcx,rcx
  428654:	je     0x428662
  428656:	call   0x40215c
  42865b:	mov    QWORD PTR [rbx],0x0
  428662:	test   r12d,r12d
  428665:	mov    QWORD PTR [rbx+0x8],0x0
  42866d:	je     0x428691
  42866f:	mov    rcx,r12
  428672:	call   0x402130
  428677:	mov    QWORD PTR [rbx+0x8],r12
  42867b:	mov    QWORD PTR [rbx],rax
  42867e:	test   r12d,r12d
  428681:	je     0x428691
  428683:	mov    rcx,QWORD PTR [rbx]
  428686:	mov    r8,r12
  428689:	mov    rdx,rsi
  42868c:	call   0x44b480
  428691:	add    rsi,r12
  428694:	sub    edi,r12d
  428697:	jne    0x428605
  42869d:	mov    al,0x1
  42869f:	add    rsp,0x28
  4286a3:	pop    r13
  4286a5:	pop    r12
  4286a7:	pop    rdi
  4286a8:	pop    rsi
  4286a9:	pop    rbp
  4286aa:	pop    rbx
  4286ab:	ret    
  4286ac:	xor    al,al
  4286ae:	jmp    0x42869f
  4286b0:	rex.W push rbx
  4286b2:	push   rsi
  4286b3:	push   rdi
  4286b4:	sub    rsp,0x20
  4286b8:	xor    edi,edi
  4286ba:	mov    rbx,rcx
  4286bd:	cmp    DWORD PTR [rcx+0x20],edi
  4286c0:	jbe    0x4286e4
  4286c2:	xor    esi,esi
  4286c4:	mov    rax,QWORD PTR [rbx+0x18]
  4286c8:	mov    rdx,QWORD PTR [rsi+rax*1]
  4286cc:	mov    rax,QWORD PTR [rdx+0x38]
  4286d0:	test   rax,rax
  4286d3:	je     0x4286d9
  4286d5:	xor    ecx,ecx
  4286d7:	call   rax
  4286d9:	inc    edi
  4286db:	add    rsi,0x8
  4286df:	cmp    edi,DWORD PTR [rbx+0x20]
  4286e2:	jb     0x4286c4
  4286e4:	lea    rcx,[rbx+0x18]
  4286e8:	add    rsp,0x20
  4286ec:	pop    rdi
  4286ed:	pop    rsi
  4286ee:	pop    rbx
  4286ef:	jmp    0x427fa8
  4286f4:	rex.W push rbx
  4286f6:	push   rbp
  4286f7:	push   rsi
  4286f8:	push   rdi
  4286f9:	push   r12
  4286fb:	push   r13
  4286fd:	push   r14
  4286ff:	push   r15
  428701:	sub    rsp,0x108
  428708:	mov    QWORD PTR [rsp+0xf0],0xfffffffffffffffe
  428714:	mov    r13,rcx
  428717:	mov    edx,DWORD PTR [rcx+0x20]
  42871a:	dec    edx
  42871c:	mov    rax,QWORD PTR [rcx+0x18]
  428720:	mov    rbx,QWORD PTR [rax+rdx*8]
  428724:	xor    r15d,r15d
  428727:	mov    rsi,r15
  42872a:	lea    rdx,[rip+0x27aef]        # 0x450220
  428731:	mov    rcx,QWORD PTR [rbx]
  428734:	call   QWORD PTR [rip+0x24ad6]        # 0x44d210
  42873a:	mov    rbp,rax
  42873d:	lea    rdx,[rip+0x27acc]        # 0x450210
  428744:	mov    rcx,QWORD PTR [rbx]
  428747:	call   QWORD PTR [rip+0x24ac3]        # 0x44d210
  42874d:	mov    r14,rax
  428750:	mov    DWORD PTR [rsp+0x158],0x1
  42875b:	cmp    rbp,r15
  42875e:	je     0x428789
  428760:	lea    rdx,[rip+0x27a91]        # 0x4501f8
  428767:	mov    rcx,QWORD PTR [rbx]
  42876a:	call   QWORD PTR [rip+0x24aa0]        # 0x44d210
  428770:	cmp    rax,r15
  428773:	je     0x4287a8
  428775:	lea    rcx,[rsp+0x158]
  42877d:	call   rax
  42877f:	cmp    eax,r15d
  428782:	je     0x4287a8
  428784:	jmp    0x428ca0
  428789:	lea    rdx,[rip+0x27a50]        # 0x4501e0
  428790:	mov    rcx,QWORD PTR [rbx]
  428793:	call   QWORD PTR [rip+0x24a77]        # 0x44d210
  428799:	mov    rsi,rax
  42879c:	cmp    rax,r15
  42879f:	jne    0x4287a8
  4287a1:	xor    eax,eax
  4287a3:	jmp    0x428ca0
  4287a8:	mov    edi,r15d
  4287ab:	cmp    DWORD PTR [rsp+0x158],r15d
  4287b3:	jbe    0x428c9e
  4287b9:	mov    DWORD PTR [rsp+0x80],r15d
  4287c1:	mov    QWORD PTR [rsp+0x88],r15
  4287c9:	mov    QWORD PTR [rsp+0x90],r15
  4287d1:	lea    rcx,[rsp+0x98]
  4287d9:	call   0x403150
  4287de:	mov    QWORD PTR [rsp+0xa8],r15
  4287e6:	mov    DWORD PTR [rsp+0xb0],r15d
  4287ee:	mov    DWORD PTR [rsp+0xb4],r15d
  4287f6:	mov    QWORD PTR [rsp+0xb8],r15
  4287fe:	mov    BYTE PTR [rsp+0xc0],r15b
  428806:	mov    BYTE PTR [rsp+0xc1],r15b
  42880e:	mov    DWORD PTR [rsp+0xc4],r15d
  428816:	mov    QWORD PTR [rsp+0xc8],r15
  42881e:	mov    DWORD PTR [rsp+0xd0],r15d
  428826:	mov    DWORD PTR [rsp+0xd4],r15d
  42882e:	mov    eax,DWORD PTR [r13+0x20]
  428832:	dec    eax
  428834:	mov    DWORD PTR [rsp+0xd8],eax
  42883b:	mov    DWORD PTR [rsp+0xdc],edi
  428842:	lea    rax,[rsp+0x98]
  42884a:	mov    QWORD PTR [rsp+0x20],rax
  42884f:	xor    r9d,r9d
  428852:	mov    r8d,edi
  428855:	mov    rdx,rbp
  428858:	mov    rcx,rsi
  42885b:	call   0x426f84
  428860:	mov    ebx,eax
  428862:	cmp    eax,r15d
  428865:	jne    0x428bbd
  42886b:	mov    WORD PTR [rsp+0x60],r15w
  428871:	mov    WORD PTR [rsp+0x62],r15w
  428877:	mov    QWORD PTR [rsp+0x68],r15
  42887c:	cmp    rbp,r15
  42887f:	je     0x428891
  428881:	lea    r8,[rsp+0x60]
  428886:	mov    edx,0x1
  42888b:	mov    ecx,edi
  42888d:	call   rbp
  42888f:	jmp    0x42889d
  428891:	lea    rdx,[rsp+0x60]
  428896:	mov    ecx,0x1
  42889b:	call   rsi
  42889d:	cmp    eax,r15d
  4288a0:	je     0x4288bf
  4288a2:	lea    rcx,[rsp+0x60]
  4288a7:	call   0x40b028
  4288ac:	nop
  4288ad:	lea    rcx,[rsp+0x80]
  4288b5:	call   0x427a34
  4288ba:	jmp    0x428ba9
  4288bf:	cmp    WORD PTR [rsp+0x60],0x8
  4288c5:	je     0x4288e4
  4288c7:	lea    rcx,[rsp+0x60]
  4288cc:	call   0x40b028
  4288d1:	nop
  4288d2:	lea    rcx,[rsp+0x80]
  4288da:	call   0x427a34
  4288df:	jmp    0x428ba9
  4288e4:	mov    rcx,QWORD PTR [rsp+0x68]
  4288e9:	call   QWORD PTR [rip+0x249a9]        # 0x44d298
  4288ef:	cmp    eax,0x10
  4288f2:	jne    0x428bc2
  4288f8:	mov    rax,QWORD PTR [rsp+0x68]
  4288fd:	movdqu xmm0,XMMWORD PTR [rax]
  428901:	movdqu XMMWORD PTR [rsp+0xe0],xmm0
  42890a:	lea    rcx,[rsp+0x60]
  42890f:	call   0x40b028
  428914:	nop
  428915:	lea    rcx,[rsp+0x60]
  42891a:	call   0x40b028
  42891f:	lea    rcx,[rsp+0x50]
  428924:	call   0x403150
  428929:	nop
  42892a:	lea    rcx,[rsp+0x40]
  42892f:	call   0x403150
  428934:	nop
  428935:	lea    rax,[rsp+0x50]
  42893a:	mov    QWORD PTR [rsp+0x20],rax
  42893f:	mov    r9d,0x2
  428945:	mov    r8d,edi
  428948:	mov    rdx,rbp
  42894b:	mov    rcx,rsi
  42894e:	call   0x426f84
  428953:	mov    ebx,eax
  428955:	cmp    eax,r15d
  428958:	jne    0x428bd7
  42895e:	lea    rax,[rsp+0x40]
  428963:	mov    QWORD PTR [rsp+0x20],rax
  428968:	mov    r9d,0x3
  42896e:	mov    r8d,edi
  428971:	mov    rdx,rbp
  428974:	mov    rcx,rsi
  428977:	call   0x426f84
  42897c:	mov    ebx,eax
  42897e:	cmp    eax,r15d
  428981:	jne    0x428bf2
  428987:	lea    r8,[rsp+0x40]
  42898c:	lea    rdx,[rsp+0x50]
  428991:	lea    rcx,[rsp+0x80]
  428999:	call   0x42830c
  42899e:	lea    r11,[rsp+0xc0]
  4289a6:	mov    QWORD PTR [rsp+0x20],r11
  4289ab:	mov    r9d,0x4
  4289b1:	mov    r8d,edi
  4289b4:	mov    rdx,rbp
  4289b7:	mov    rcx,rsi
  4289ba:	call   0x426e04
  4289bf:	mov    BYTE PTR [rsp+0x150],r15b
  4289c7:	lea    rax,[rsp+0x150]
  4289cf:	mov    QWORD PTR [rsp+0x28],rax
  4289d4:	lea    rax,[rsp+0x80]
  4289dc:	mov    QWORD PTR [rsp+0x20],rax
  4289e1:	mov    r9d,0xb
  4289e7:	mov    r8d,edi
  4289ea:	mov    rdx,rbp
  4289ed:	mov    rcx,rsi
  4289f0:	call   0x426ebc
  4289f5:	mov    ebx,eax
  4289f7:	cmp    eax,r15d
  4289fa:	jne    0x428c0d
  428a00:	mov    al,BYTE PTR [rsp+0x150]
  428a07:	mov    BYTE PTR [rsp+0xc1],al
  428a0e:	cmp    al,r15b
  428a11:	jne    0x428a63
  428a13:	lea    rbx,[rip+0x273f6]        # 0x44fe10
  428a1a:	mov    r12d,0x3
  428a20:	mov    BYTE PTR [rsp+0x150],r15b
  428a28:	lea    rax,[rsp+0x150]
  428a30:	mov    QWORD PTR [rsp+0x20],rax
  428a35:	mov    r9d,DWORD PTR [rbx]
  428a38:	mov    r8d,edi
  428a3b:	mov    rdx,rbp
  428a3e:	mov    rcx,rsi
  428a41:	call   0x426e04
  428a46:	cmp    BYTE PTR [rsp+0x150],r15b
  428a4e:	je     0x428a5a
  428a50:	mov    eax,DWORD PTR [rbx+0x4]
  428a53:	or     DWORD PTR [rsp+0x80],eax
  428a5a:	add    rbx,0x8
  428a5e:	dec    r12
  428a61:	jne    0x428a20
  428a63:	mov    QWORD PTR [rsp+0x30],r15
  428a68:	mov    QWORD PTR [rsp+0x38],r15
  428a6d:	lea    rax,[rsp+0x30]
  428a72:	mov    QWORD PTR [rsp+0x20],rax
  428a77:	mov    r9d,0x6
  428a7d:	mov    r8d,edi
  428a80:	mov    rdx,rbp
  428a83:	mov    rcx,rsi
  428a86:	call   0x42790c
  428a8b:	mov    ebx,eax
  428a8d:	cmp    eax,r15d
  428a90:	jne    0x428c25
  428a96:	cmp    QWORD PTR [rsp+0x38],r15
  428a9b:	je     0x428ab6
  428a9d:	lea    rdx,[rsp+0x30]
  428aa2:	lea    rcx,[rsp+0xc8]
  428aaa:	call   0x427e48
  428aaf:	mov    rbx,QWORD PTR [rsp+0x30]
  428ab4:	jmp    0x428af8
  428ab6:	lea    rax,[rsp+0x30]
  428abb:	mov    QWORD PTR [rsp+0x20],rax
  428ac0:	mov    r9d,0x7
  428ac6:	mov    r8d,edi
  428ac9:	mov    rdx,rbp
  428acc:	mov    rcx,rsi
  428acf:	call   0x42790c
  428ad4:	mov    ebx,eax
  428ad6:	cmp    eax,r15d
  428ad9:	jne    0x428c48
  428adf:	lea    r8,[rsp+0xc8]
  428ae7:	mov    edx,DWORD PTR [rsp+0x38]
  428aeb:	mov    rbx,QWORD PTR [rsp+0x30]
  428af0:	mov    rcx,rbx
  428af3:	call   0x4285a8
  428af8:	lea    rax,[rsp+0x150]
  428b00:	mov    QWORD PTR [rsp+0x28],rax
  428b05:	lea    rax,[rsp+0xc4]
  428b0d:	mov    QWORD PTR [rsp+0x20],rax
  428b12:	mov    r9d,0x8
  428b18:	mov    r8d,edi
  428b1b:	mov    rdx,rbp
  428b1e:	mov    rcx,rsi
  428b21:	call   0x426ebc
  428b26:	mov    r12d,eax
  428b29:	cmp    eax,r15d
  428b2c:	jne    0x428c6b
  428b32:	cmp    r14,r15
  428b35:	je     0x428b44
  428b37:	lea    rdx,[rsp+0x90]
  428b3f:	mov    ecx,edi
  428b41:	call   r14
  428b44:	mov    ecx,0x70
  428b49:	call   0x402130
  428b4e:	mov    QWORD PTR [rsp+0x150],rax
  428b56:	cmp    rax,r15
  428b59:	je     0x428b6d
  428b5b:	lea    rdx,[rsp+0x80]
  428b63:	mov    rcx,rax
  428b66:	call   0x428064
  428b6b:	jmp    0x428b70
  428b6d:	mov    rax,r15
  428b70:	lea    rcx,[r13+0x40]
  428b74:	mov    rdx,rax
  428b77:	call   0x4010c8
  428b7c:	nop
  428b7d:	mov    rcx,rbx
  428b80:	call   0x40215c
  428b85:	nop
  428b86:	mov    rcx,QWORD PTR [rsp+0x40]
  428b8b:	call   0x40215c
  428b90:	nop
  428b91:	mov    rcx,QWORD PTR [rsp+0x50]
  428b96:	call   0x40215c
  428b9b:	nop
  428b9c:	lea    rcx,[rsp+0x80]
  428ba4:	call   0x427a34
  428ba9:	inc    edi
  428bab:	cmp    edi,DWORD PTR [rsp+0x158]
  428bb2:	jb     0x4287b9
  428bb8:	jmp    0x428c9e
  428bbd:	jmp    0x428c8d
  428bc2:	lea    rcx,[rsp+0x60]
  428bc7:	call   0x40b028
  428bcc:	nop
  428bcd:	mov    ebx,0x80004005
  428bd2:	jmp    0x428c8d
  428bd7:	mov    rcx,QWORD PTR [rsp+0x40]
  428bdc:	call   0x40215c
  428be1:	nop
  428be2:	mov    rcx,QWORD PTR [rsp+0x50]
  428be7:	call   0x40215c
  428bec:	nop
  428bed:	jmp    0x428c8d
  428bf2:	mov    rcx,QWORD PTR [rsp+0x40]
  428bf7:	call   0x40215c
  428bfc:	nop
  428bfd:	mov    rcx,QWORD PTR [rsp+0x50]
  428c02:	call   0x40215c
  428c07:	nop
  428c08:	jmp    0x428c8d
  428c0d:	mov    rcx,QWORD PTR [rsp+0x40]
  428c12:	call   0x40215c
  428c17:	nop
  428c18:	mov    rcx,QWORD PTR [rsp+0x50]
  428c1d:	call   0x40215c
  428c22:	nop
  428c23:	jmp    0x428c8d
  428c25:	mov    rcx,QWORD PTR [rsp+0x30]
  428c2a:	call   0x40215c
  428c2f:	nop
  428c30:	mov    rcx,QWORD PTR [rsp+0x40]
  428c35:	call   0x40215c
  428c3a:	nop
  428c3b:	mov    rcx,QWORD PTR [rsp+0x50]
  428c40:	call   0x40215c
  428c45:	nop
  428c46:	jmp    0x428c8d
  428c48:	mov    rcx,QWORD PTR [rsp+0x30]
  428c4d:	call   0x40215c
  428c52:	nop
  428c53:	mov    rcx,QWORD PTR [rsp+0x40]
  428c58:	call   0x40215c
  428c5d:	nop
  428c5e:	mov    rcx,QWORD PTR [rsp+0x50]
  428c63:	call   0x40215c
  428c68:	nop
  428c69:	jmp    0x428c8d
  428c6b:	mov    rcx,rbx
  428c6e:	call   0x40215c
  428c73:	nop
  428c74:	mov    rcx,QWORD PTR [rsp+0x40]
  428c79:	call   0x40215c
  428c7e:	nop
  428c7f:	mov    rcx,QWORD PTR [rsp+0x50]
  428c84:	call   0x40215c
  428c89:	nop
  428c8a:	mov    ebx,r12d
  428c8d:	lea    rcx,[rsp+0x80]
  428c95:	call   0x427a34
  428c9a:	mov    eax,ebx
  428c9c:	jmp    0x428ca0
  428c9e:	xor    eax,eax
  428ca0:	add    rsp,0x108
  428ca7:	pop    r15
  428ca9:	pop    r14
  428cab:	pop    r13
  428cad:	pop    r12
  428caf:	pop    rdi
  428cb0:	pop    rsi
  428cb1:	pop    rbp
  428cb2:	pop    rbx
  428cb3:	ret    
  428cb4:	rex.W push rbp
  428cb6:	sub    rsp,0x20
  428cba:	mov    rbp,rdx
  428cbd:	lea    rcx,[rbp+0x80]
  428cc4:	call   0x427a34
  428cc9:	add    rsp,0x20
  428ccd:	pop    rbp
  428cce:	ret    
  428ccf:	int3   
  428cd0:	int3   
  428cd1:	int3   
  428cd2:	int3   
  428cd3:	int3   
  428cd4:	rex.W push rbp
  428cd6:	sub    rsp,0x20
  428cda:	mov    rbp,rdx
  428cdd:	lea    rcx,[rbp+0x60]
  428ce1:	call   0x40b830
  428ce6:	add    rsp,0x20
  428cea:	pop    rbp
  428ceb:	ret    
  428cec:	int3   
  428ced:	int3   
  428cee:	int3   
  428cef:	int3   
  428cf0:	int3   
  428cf1:	int3   
  428cf2:	int3   
  428cf3:	int3   
  428cf4:	rex.W push rbp
  428cf6:	sub    rsp,0x20
  428cfa:	mov    rbp,rdx
  428cfd:	lea    rcx,[rbp+0x50]
  428d01:	call   0x401000
  428d06:	add    rsp,0x20
  428d0a:	pop    rbp
  428d0b:	ret    
  428d0c:	int3   
  428d0d:	int3   
  428d0e:	int3   
  428d0f:	int3   
  428d10:	int3   
  428d11:	int3   
  428d12:	int3   
  428d13:	int3   
  428d14:	rex.W push rbp
  428d16:	sub    rsp,0x20
  428d1a:	mov    rbp,rdx
  428d1d:	lea    rcx,[rbp+0x40]
  428d21:	call   0x401000
  428d26:	add    rsp,0x20
  428d2a:	pop    rbp
  428d2b:	ret    
  428d2c:	int3   
  428d2d:	int3   
  428d2e:	int3   
  428d2f:	int3   
  428d30:	int3   
  428d31:	int3   
  428d32:	int3   
  428d33:	int3   
  428d34:	rex.W push rbp
  428d36:	sub    rsp,0x20
  428d3a:	mov    rbp,rdx
  428d3d:	lea    rcx,[rbp+0x30]
  428d41:	call   0x401000
  428d46:	add    rsp,0x20
  428d4a:	pop    rbp
  428d4b:	ret    
  428d4c:	int3   
  428d4d:	int3   
  428d4e:	int3   
  428d4f:	int3   
  428d50:	int3   
  428d51:	int3   
  428d52:	int3   
  428d53:	int3   
  428d54:	rex.W push rbp
  428d56:	sub    rsp,0x20
  428d5a:	mov    rbp,rdx
  428d5d:	mov    rcx,QWORD PTR [rbp+0x150]
  428d64:	call   0x40215c
  428d69:	add    rsp,0x20
  428d6d:	pop    rbp
  428d6e:	ret    
  428d6f:	int3   
  428d70:	rex.W push rbx
  428d72:	push   rbp
  428d73:	push   rsi
  428d74:	push   rdi
  428d75:	push   r12
  428d77:	push   r13
  428d79:	sub    rsp,0x38
  428d7d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  428d86:	mov    rbx,r9
  428d89:	mov    r13,rdx
  428d8c:	mov    rdi,rcx
  428d8f:	test   r9,r9
  428d92:	je     0x428d98
  428d94:	mov    BYTE PTR [r9],0x0
  428d98:	test   r8b,r8b
  428d9b:	je     0x428de4
  428d9d:	mov    QWORD PTR [rsp+0x88],0x0
  428da9:	mov    r8d,0x2
  428daf:	mov    rdx,QWORD PTR [rdx]
  428db2:	lea    rcx,[rsp+0x88]
  428dba:	call   0x406738
  428dbf:	test   al,al
  428dc1:	jne    0x428dd7
  428dc3:	lea    rcx,[rsp+0x88]
  428dcb:	call   0x40670c
  428dd0:	xor    eax,eax
  428dd2:	jmp    0x428f12
  428dd7:	lea    rcx,[rsp+0x88]
  428ddf:	call   0x40670c
  428de4:	lea    rcx,[rdi+0x18]
  428de8:	call   0x427ee0
  428ded:	mov    ecx,DWORD PTR [rdi+0x20]
  428df0:	dec    ecx
  428df2:	mov    rax,QWORD PTR [rdi+0x18]
  428df6:	mov    rsi,QWORD PTR [rax+rcx*8]
  428dfa:	lea    rcx,[rsi+0x8]
  428dfe:	mov    rdx,r13
  428e01:	call   0x4032f8
  428e06:	xor    r12d,r12d
  428e09:	mov    rdx,QWORD PTR [r13+0x0]
  428e0d:	mov    rcx,rsi
  428e10:	call   0x40677c
  428e15:	test   al,al
  428e17:	je     0x428ec7
  428e1d:	lea    r13d,[r12+0x1]
  428e22:	test   rbx,rbx
  428e25:	je     0x428e2a
  428e27:	mov    BYTE PTR [rbx],r13b
  428e2a:	cmp    QWORD PTR [rip+0x40147],r12        # 0x468f78
  428e31:	je     0x428e4a
  428e33:	lea    rdx,[rip+0x27446]        # 0x450280
  428e3a:	mov    rcx,QWORD PTR [rsi]
  428e3d:	call   QWORD PTR [rip+0x243cd]        # 0x44d210
  428e43:	test   rax,rax
  428e46:	je     0x428e4a
  428e48:	call   rax
  428e4a:	cmp    BYTE PTR [rdi+0x70],r12b
  428e4e:	je     0x428e6f
  428e50:	lea    rdx,[rip+0x27411]        # 0x450268
  428e57:	mov    rcx,QWORD PTR [rsi]
  428e5a:	call   QWORD PTR [rip+0x243b0]        # 0x44d210
  428e60:	test   rax,rax
  428e63:	je     0x428e6f
  428e65:	xor    ecx,ecx
  428e67:	cmp    BYTE PTR [rdi+0x71],cl
  428e6a:	setne  cl
  428e6d:	call   rax
  428e6f:	lea    rdx,[rip+0x273e2]        # 0x450258
  428e76:	mov    rcx,QWORD PTR [rsi]
  428e79:	call   QWORD PTR [rip+0x24391]        # 0x44d210
  428e7f:	mov    QWORD PTR [rsi+0x18],rax
  428e83:	test   rax,rax
  428e86:	je     0x428ec7
  428e88:	mov    ebx,DWORD PTR [rdi+0x68]
  428e8b:	add    ebx,DWORD PTR [rdi+0x58]
  428e8e:	mov    rcx,rdi
  428e91:	call   0x42776c
  428e96:	mov    r12d,eax
  428e99:	mov    edx,DWORD PTR [rdi+0x58]
  428e9c:	add    edx,DWORD PTR [rdi+0x68]
  428e9f:	cmp    ebx,edx
  428ea1:	setne  sil
  428ea5:	test   eax,eax
  428ea7:	jne    0x428ec2
  428ea9:	mov    ebx,DWORD PTR [rdi+0x48]
  428eac:	mov    rcx,rdi
  428eaf:	call   0x4286f4
  428eb4:	mov    r12d,eax
  428eb7:	movzx  esi,sil
  428ebb:	cmp    ebx,DWORD PTR [rdi+0x48]
  428ebe:	cmovne esi,r13d
  428ec2:	test   sil,sil
  428ec5:	jne    0x428f0f
  428ec7:	mov    ecx,DWORD PTR [rdi+0x20]
  428eca:	dec    ecx
  428ecc:	mov    rax,QWORD PTR [rdi+0x18]
  428ed0:	mov    rbx,QWORD PTR [rax+rcx*8]
  428ed4:	mov    QWORD PTR [rsp+0x88],rbx
  428edc:	test   rbx,rbx
  428edf:	je     0x428f0b
  428ee1:	mov    rcx,QWORD PTR [rbx+0x40]
  428ee5:	test   rcx,rcx
  428ee8:	je     0x428ef1
  428eea:	mov    rax,QWORD PTR [rcx]
  428eed:	call   QWORD PTR [rax+0x10]
  428ef0:	nop
  428ef1:	mov    rcx,QWORD PTR [rbx+0x8]
  428ef5:	call   0x40215c
  428efa:	nop
  428efb:	mov    rcx,rbx
  428efe:	call   0x40670c
  428f03:	mov    rcx,rbx
  428f06:	call   0x40215c
  428f0b:	add    DWORD PTR [rdi+0x20],0xffffffff
  428f0f:	mov    eax,r12d
  428f12:	add    rsp,0x38
  428f16:	pop    r13
  428f18:	pop    r12
  428f1a:	pop    rdi
  428f1b:	pop    rsi
  428f1c:	pop    rbp
  428f1d:	pop    rbx
  428f1e:	ret    
  428f1f:	int3   
  428f20:	rex.W push rbp
  428f22:	sub    rsp,0x20
  428f26:	mov    rbp,rdx
  428f29:	mov    rcx,QWORD PTR [rbp+0x88]
  428f30:	call   0x4268e4
  428f35:	add    rsp,0x20
  428f39:	pop    rbp
  428f3a:	ret    
  428f3b:	int3   
  428f3c:	int3   
  428f3d:	int3   
  428f3e:	int3   
  428f3f:	int3   
  428f40:	rex.W push rbp
  428f42:	sub    rsp,0x20
  428f46:	mov    rbp,rdx
  428f49:	mov    rcx,QWORD PTR [rbp+0x88]
  428f50:	add    rcx,0x8
  428f54:	call   0x401000
  428f59:	add    rsp,0x20
  428f5d:	pop    rbp
  428f5e:	ret    
  428f5f:	int3   
  428f60:	rex.W push rbx
  428f62:	push   rsi
  428f63:	push   rdi
  428f64:	sub    rsp,0x90
  428f6b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  428f74:	mov    rdi,rdx
  428f77:	mov    rsi,rcx
  428f7a:	mov    r8w,0x2a
  428f7f:	lea    rcx,[rsp+0x28]
  428f84:	call   0x40f0d8
  428f89:	nop
  428f8a:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
  428f93:	mov    rdx,rax
  428f96:	lea    rcx,[rsp+0x40]
  428f9b:	call   0x403208
  428fa0:	nop
  428fa1:	mov    rcx,QWORD PTR [rsp+0x28]
  428fa6:	call   0x40215c
  428fab:	lea    rcx,[rsp+0x50]
  428fb0:	call   0x407fc0
  428fb5:	lea    rcx,[rsp+0x78]
  428fba:	call   0x403150
  428fbf:	nop
  428fc0:	lea    rdx,[rsp+0x50]
  428fc5:	lea    rcx,[rsp+0x38]
  428fca:	call   0x40808c
  428fcf:	test   al,al
  428fd1:	je     0x429034
  428fd3:	mov    eax,DWORD PTR [rsp+0x70]
  428fd7:	shr    eax,0x4
  428fda:	test   al,0x1
  428fdc:	jne    0x429012
  428fde:	lea    r8,[rsp+0x78]
  428fe3:	mov    rdx,rdi
  428fe6:	lea    rcx,[rsp+0x28]
  428feb:	call   0x4030d4
  428ff0:	nop
  428ff1:	xor    r9d,r9d
  428ff4:	mov    r8b,0x1
  428ff7:	mov    rdx,rax
  428ffa:	mov    rcx,rsi
  428ffd:	call   0x428d70
  429002:	mov    ebx,eax
  429004:	mov    rcx,QWORD PTR [rsp+0x28]
  429009:	call   0x40215c
  42900e:	test   ebx,ebx
  429010:	jne    0x429027
  429012:	lea    rdx,[rsp+0x50]
  429017:	lea    rcx,[rsp+0x38]
  42901c:	call   0x40808c
  429021:	test   al,al
  429023:	jne    0x428fd3
  429025:	jmp    0x429034
  429027:	mov    rcx,QWORD PTR [rsp+0x78]
  42902c:	call   0x40215c
  429031:	nop
  429032:	jmp    0x429041
  429034:	mov    rcx,QWORD PTR [rsp+0x78]
  429039:	call   0x40215c
  42903e:	nop
  42903f:	xor    ebx,ebx
  429041:	mov    rcx,QWORD PTR [rsp+0x40]
  429046:	call   0x40215c
  42904b:	lea    rcx,[rsp+0x38]
  429050:	call   0x407be4
  429055:	mov    eax,ebx
  429057:	add    rsp,0x90
  42905e:	pop    rdi
  42905f:	pop    rsi
  429060:	pop    rbx
  429061:	ret    
  429062:	int3   
  429063:	int3   
  429064:	int3   
  429065:	int3   
  429066:	int3   
  429067:	int3   
  429068:	int3   
  429069:	int3   
  42906a:	int3   
  42906b:	int3   
  42906c:	int3   
  42906d:	int3   
  42906e:	int3   
  42906f:	int3   
  429070:	rex.W push rbp
  429072:	sub    rsp,0x20
  429076:	mov    rbp,rdx
  429079:	lea    rcx,[rbp+0x28]
  42907d:	call   0x401000
  429082:	add    rsp,0x20
  429086:	pop    rbp
  429087:	ret    
  429088:	int3   
  429089:	int3   
  42908a:	int3   
  42908b:	int3   
  42908c:	int3   
  42908d:	int3   
  42908e:	int3   
  42908f:	int3   
  429090:	rex.W push rbp
  429092:	sub    rsp,0x20
  429096:	mov    rbp,rdx
  429099:	lea    rcx,[rbp+0x38]
  42909d:	call   0x40810c
  4290a2:	add    rsp,0x20
  4290a6:	pop    rbp
  4290a7:	ret    
  4290a8:	int3   
  4290a9:	int3   
  4290aa:	int3   
  4290ab:	int3   
  4290ac:	int3   
  4290ad:	int3   
  4290ae:	int3   
  4290af:	int3   
  4290b0:	rex.W push rbp
  4290b2:	sub    rsp,0x20
  4290b6:	mov    rbp,rdx
  4290b9:	lea    rcx,[rbp+0x38]
  4290bd:	call   0x408114
  4290c2:	add    rsp,0x20
  4290c6:	pop    rbp
  4290c7:	ret    
  4290c8:	int3   
  4290c9:	int3   
  4290ca:	int3   
  4290cb:	int3   
  4290cc:	int3   
  4290cd:	int3   
  4290ce:	int3   
  4290cf:	int3   
  4290d0:	rex.W push rbp
  4290d2:	sub    rsp,0x20
  4290d6:	mov    rbp,rdx
  4290d9:	lea    rcx,[rbp+0x50]
  4290dd:	call   0x406fe0
  4290e2:	add    rsp,0x20
  4290e6:	pop    rbp
  4290e7:	ret    
  4290e8:	int3   
  4290e9:	int3   
  4290ea:	int3   
  4290eb:	int3   
  4290ec:	int3   
  4290ed:	int3   
  4290ee:	int3   
  4290ef:	int3   
  4290f0:	rex.W push rbp
  4290f2:	sub    rsp,0x20
  4290f6:	mov    rbp,rdx
  4290f9:	lea    rcx,[rbp+0x28]
  4290fd:	call   0x401000
  429102:	add    rsp,0x20
  429106:	pop    rbp
  429107:	ret    
  429108:	rex.W push rbx
  42910a:	push   rbp
  42910b:	push   rsi
  42910c:	push   rdi
  42910d:	push   r12
  42910f:	push   r13
  429111:	push   r14
  429113:	push   r15
  429115:	sub    rsp,0xd8
  42911c:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
  429128:	mov    rdi,rcx
  42912b:	movsxd rbx,DWORD PTR [rcx+0x48]
  42912f:	mov    rbp,rbx
  429132:	xor    r13d,r13d
  429135:	cmp    ebx,r13d
  429138:	je     0x429167
  42913a:	shl    rbp,0x3
  42913e:	add    ebx,0xffffffff
  429141:	sub    rbp,0x8
  429145:	mov    rax,QWORD PTR [rdi+0x40]
  429149:	mov    rsi,QWORD PTR [rax+rbp*1]
  42914d:	cmp    rsi,r13
  429150:	je     0x429162
  429152:	mov    rcx,rsi
  429155:	call   0x427a34
  42915a:	mov    rcx,rsi
  42915d:	call   0x40215c
  429162:	cmp    ebx,r13d
  429165:	jne    0x42913e
  429167:	mov    DWORD PTR [rdi+0x48],r13d
  42916b:	mov    DWORD PTR [rdi+0x30],r13d
  42916f:	mov    rax,QWORD PTR [rdi+0x28]
  429173:	mov    WORD PTR [rax],r13w
  429177:	mov    DWORD PTR [rdi+0x58],r13d
  42917b:	mov    DWORD PTR [rdi+0x68],r13d
  42917f:	mov    r14d,r13d
  429182:	cmp    DWORD PTR [rip+0x3fd27],r13d        # 0x468eb0
  429189:	jbe    0x4293c5
  42918f:	lea    r15,[rip+0x3fb1a]        # 0x468cb0
  429196:	mov    rsi,QWORD PTR [r15]
  429199:	mov    DWORD PTR [rsp+0x50],r13d
  42919e:	mov    QWORD PTR [rsp+0x58],r13
  4291a3:	mov    QWORD PTR [rsp+0x60],r13
  4291a8:	lea    rcx,[rsp+0x68]
  4291ad:	call   0x403150
  4291b2:	mov    QWORD PTR [rsp+0x78],r13
  4291b7:	mov    DWORD PTR [rsp+0x80],r13d
  4291bf:	mov    DWORD PTR [rsp+0x84],r13d
  4291c7:	mov    QWORD PTR [rsp+0x88],r13
  4291cf:	mov    BYTE PTR [rsp+0x90],r13b
  4291d7:	mov    BYTE PTR [rsp+0x91],r13b
  4291df:	mov    DWORD PTR [rsp+0x94],r13d
  4291e7:	mov    QWORD PTR [rsp+0x98],r13
  4291ef:	mov    DWORD PTR [rsp+0xa0],r13d
  4291f7:	mov    DWORD PTR [rsp+0xa4],r13d
  4291ff:	mov    DWORD PTR [rsp+0xa8],0xffffffff
  42920a:	mov    rdx,QWORD PTR [rsi+0x10]
  42920e:	lea    rcx,[rsp+0x68]
  429213:	call   0x4034e8
  429218:	mov    r11,QWORD PTR [rsi+0x28]
  42921c:	mov    QWORD PTR [rsp+0x58],r11
  429221:	mov    rax,QWORD PTR [rsi+0x38]
  429225:	mov    QWORD PTR [rsp+0x60],rax
  42922a:	movzx  eax,WORD PTR [rsi]
  42922d:	mov    DWORD PTR [rsp+0x50],eax
  429231:	lea    rcx,[rsp+0x20]
  429236:	call   0x403150
  42923b:	nop
  42923c:	lea    rcx,[rsp+0x40]
  429241:	call   0x403150
  429246:	nop
  429247:	mov    rdx,QWORD PTR [rsi+0x18]
  42924b:	cmp    rdx,r13
  42924e:	je     0x42925a
  429250:	lea    rcx,[rsp+0x20]
  429255:	call   0x4034e8
  42925a:	mov    rdx,QWORD PTR [rsi+0x20]
  42925e:	cmp    rdx,r13
  429261:	je     0x42926d
  429263:	lea    rcx,[rsp+0x40]
  429268:	call   0x4034e8
  42926d:	lea    r8,[rsp+0x40]
  429272:	lea    rdx,[rsp+0x20]
  429277:	lea    rcx,[rsp+0x50]
  42927c:	call   0x42830c
  429281:	nop
  429282:	mov    rcx,QWORD PTR [rsp+0x40]
  429287:	call   0x40215c
  42928c:	nop
  42928d:	mov    rcx,QWORD PTR [rsp+0x20]
  429292:	call   0x40215c
  429297:	mov    rax,QWORD PTR [rsi+0x30]
  42929b:	mov    QWORD PTR [rsp+0x88],rax
  4292a3:	cmp    QWORD PTR [rsi+0x30],r13
  4292a7:	setne  BYTE PTR [rsp+0x90]
  4292af:	movzx  eax,WORD PTR [rsi+0x4]
  4292b3:	mov    DWORD PTR [rsp+0x94],eax
  4292ba:	mov    BYTE PTR [rsp+0x91],0x1
  4292c2:	mov    al,BYTE PTR [rsi]
  4292c4:	shr    al,0x4
  4292c7:	test   al,0x1
  4292c9:	je     0x4292e5
  4292cb:	movzx  edx,BYTE PTR [rsi+0x3]
  4292cf:	lea    r8,[rsp+0x98]
  4292d7:	mov    rcx,QWORD PTR [rsi+0x8]
  4292db:	call   0x4285a8
  4292e0:	jmp    0x429371
  4292e5:	mov    ecx,0x10
  4292ea:	call   0x402130
  4292ef:	mov    rbx,rax
  4292f2:	cmp    rax,r13
  4292f5:	je     0x429300
  4292f7:	mov    QWORD PTR [rax],r13
  4292fa:	mov    QWORD PTR [rax+0x8],r13
  4292fe:	jmp    0x429303
  429300:	mov    rbx,r13
  429303:	mov    rdx,rbx
  429306:	lea    rcx,[rsp+0x98]
  42930e:	call   0x4010c8
  429313:	mov    r13,QWORD PTR [rsi+0x8]
  429317:	movzx  esi,BYTE PTR [rsi+0x3]
  42931b:	cmp    rsi,QWORD PTR [rbx+0x8]
  42931f:	je     0x429351
  429321:	mov    rcx,QWORD PTR [rbx]
  429324:	test   rcx,rcx
  429327:	je     0x429335
  429329:	call   0x40215c
  42932e:	mov    QWORD PTR [rbx],0x0
  429335:	mov    QWORD PTR [rbx+0x8],0x0
  42933d:	test   rsi,rsi
  429340:	je     0x429369
  429342:	mov    rcx,rsi
  429345:	call   0x402130
  42934a:	mov    QWORD PTR [rbx],rax
  42934d:	mov    QWORD PTR [rbx+0x8],rsi
  429351:	test   rsi,rsi
  429354:	je     0x42936e
  429356:	mov    r8,rsi
  429359:	mov    rdx,r13
  42935c:	mov    rcx,QWORD PTR [rbx]
  42935f:	call   0x44b480
  429364:	xor    r13d,r13d
  429367:	jmp    0x429371
  429369:	xor    r13d,r13d
  42936c:	jmp    0x429371
  42936e:	xor    r13d,r13d
  429371:	mov    ecx,0x70
  429376:	call   0x402130
  42937b:	mov    QWORD PTR [rsp+0x120],rax
  429383:	cmp    rax,r13
  429386:	je     0x429397
  429388:	lea    rdx,[rsp+0x50]
  42938d:	mov    rcx,rax
  429390:	call   0x428064
  429395:	jmp    0x42939a
  429397:	mov    rax,r13
  42939a:	mov    rdx,rax
  42939d:	lea    rcx,[rdi+0x40]
  4293a1:	call   0x4010c8
  4293a6:	nop
  4293a7:	lea    rcx,[rsp+0x50]
  4293ac:	call   0x427a34
  4293b1:	inc    r14d
  4293b4:	add    r15,0x8
  4293b8:	cmp    r14d,DWORD PTR [rip+0x3faf1]        # 0x468eb0
  4293bf:	jb     0x429196
  4293c5:	lea    rcx,[rsp+0x30]
  4293ca:	call   0x426a24
  4293cf:	nop
  4293d0:	mov    r8,QWORD PTR [rip+0x3f2b9]        # 0x468690
  4293d7:	lea    rdx,[rsp+0x30]
  4293dc:	lea    rcx,[rsp+0x20]
  4293e1:	call   0x403108
  4293e6:	nop
  4293e7:	lea    r9,[rsp+0x120]
  4293ef:	xor    r8d,r8d
  4293f2:	mov    rdx,rax
  4293f5:	mov    rcx,rdi
  4293f8:	call   0x428d70
  4293fd:	mov    ebx,eax
  4293ff:	mov    rcx,QWORD PTR [rsp+0x20]
  429404:	call   0x40215c
  429409:	cmp    ebx,r13d
  42940c:	je     0x429413
  42940e:	jmp    0x42950e
  429413:	cmp    BYTE PTR [rsp+0x120],r13b
  42941b:	jne    0x42942d
  42941d:	mov    rdx,QWORD PTR [rip+0x3f26c]        # 0x468690
  429424:	lea    rcx,[rdi+0x28]
  429428:	call   0x403290
  42942d:	lea    r8,[rip+0x26ecc]        # 0x450300
  429434:	lea    rdx,[rsp+0x30]
  429439:	lea    rcx,[rsp+0x20]
  42943e:	call   0x403108
  429443:	nop
  429444:	mov    rdx,rax
  429447:	mov    rcx,rdi
  42944a:	call   0x428f60
  42944f:	mov    ebx,eax
  429451:	mov    rcx,QWORD PTR [rsp+0x20]
  429456:	call   0x40215c
  42945b:	cmp    ebx,r13d
  42945e:	je     0x429465
  429460:	jmp    0x42950e
  429465:	lea    r8,[rip+0x26e7c]        # 0x4502e8
  42946c:	lea    rdx,[rsp+0x30]
  429471:	lea    rcx,[rsp+0x20]
  429476:	call   0x403108
  42947b:	nop
  42947c:	mov    rdx,rax
  42947f:	mov    rcx,rdi
  429482:	call   0x428f60
  429487:	mov    ebx,eax
  429489:	mov    rcx,QWORD PTR [rsp+0x20]
  42948e:	call   0x40215c
  429493:	cmp    ebx,r13d
  429496:	je     0x42949a
  429498:	jmp    0x42950e
  42949a:	mov    BYTE PTR [rdi+0x38],0x1
  42949e:	mov    eax,DWORD PTR [rdi+0x20]
  4294a1:	cmp    eax,r13d
  4294a4:	jne    0x4294ac
  4294a6:	mov    BYTE PTR [rdi+0x38],r13b
  4294aa:	jmp    0x4294be
  4294ac:	cmp    eax,0x1
  4294af:	jne    0x4294be
  4294b1:	cmp    DWORD PTR [rip+0x3f9f8],r13d        # 0x468eb0
  4294b8:	jne    0x4294be
  4294ba:	mov    BYTE PTR [rdi+0x38],r13b
  4294be:	cmp    BYTE PTR [rdi+0x38],r13b
  4294c2:	je     0x42950b
  4294c4:	mov    esi,r13d
  4294c7:	cmp    eax,r13d
  4294ca:	jbe    0x42950b
  4294cc:	mov    rbp,r13
  4294cf:	mov    rax,QWORD PTR [rdi+0x18]
  4294d3:	mov    rbx,QWORD PTR [rax+rbp*1]
  4294d7:	lea    rdx,[rip+0x26dfa]        # 0x4502d8
  4294de:	mov    rcx,QWORD PTR [rbx]
  4294e1:	call   QWORD PTR [rip+0x23d29]        # 0x44d210
  4294e7:	mov    QWORD PTR [rbx+0x38],rax
  4294eb:	cmp    rax,r13
  4294ee:	je     0x4294fa
  4294f0:	mov    rcx,rdi
  4294f3:	call   rax
  4294f5:	cmp    eax,r13d
  4294f8:	jne    0x429507
  4294fa:	inc    esi
  4294fc:	add    rbp,0x8
  429500:	cmp    esi,DWORD PTR [rdi+0x20]
  429503:	jb     0x4294cf
  429505:	jmp    0x42950b
  429507:	mov    ebx,eax
  429509:	jmp    0x42950e
  42950b:	mov    ebx,r13d
  42950e:	mov    rcx,QWORD PTR [rsp+0x30]
  429513:	call   0x40215c
  429518:	mov    eax,ebx
  42951a:	add    rsp,0xd8
  429521:	pop    r15
  429523:	pop    r14
  429525:	pop    r13
  429527:	pop    r12
  429529:	pop    rdi
  42952a:	pop    rsi
  42952b:	pop    rbp
  42952c:	pop    rbx
  42952d:	ret    
  42952e:	int3   
  42952f:	int3   
  429530:	int3   
  429531:	int3   
  429532:	int3   
  429533:	int3   
  429534:	int3   
  429535:	int3   
  429536:	int3   
  429537:	int3   
  429538:	rex.W push rbp
  42953a:	sub    rsp,0x20
  42953e:	mov    rbp,rdx
  429541:	lea    rcx,[rbp+0x50]
  429545:	call   0x427a34
  42954a:	add    rsp,0x20
  42954e:	pop    rbp
  42954f:	ret    
  429550:	int3   
  429551:	int3   
  429552:	int3   
  429553:	int3   
  429554:	int3   
  429555:	int3   
  429556:	int3   
  429557:	int3   
  429558:	rex.W push rbp
  42955a:	sub    rsp,0x20
  42955e:	mov    rbp,rdx
  429561:	lea    rcx,[rbp+0x20]
  429565:	call   0x401000
  42956a:	add    rsp,0x20
  42956e:	pop    rbp
  42956f:	ret    
  429570:	int3   
  429571:	int3   
  429572:	int3   
  429573:	int3   
  429574:	int3   
  429575:	int3   
  429576:	int3   
  429577:	int3   
  429578:	rex.W push rbp
  42957a:	sub    rsp,0x20
  42957e:	mov    rbp,rdx
  429581:	lea    rcx,[rbp+0x40]
  429585:	call   0x401000
  42958a:	add    rsp,0x20
  42958e:	pop    rbp
  42958f:	ret    
  429590:	int3   
  429591:	int3   
  429592:	int3   
  429593:	int3   
  429594:	int3   
  429595:	int3   
  429596:	int3   
  429597:	int3   
  429598:	rex.W push rbp
  42959a:	sub    rsp,0x20
  42959e:	mov    rbp,rdx
  4295a1:	mov    rcx,QWORD PTR [rbp+0x120]
  4295a8:	call   0x40215c
  4295ad:	add    rsp,0x20
  4295b1:	pop    rbp
  4295b2:	ret    
  4295b3:	int3   
  4295b4:	int3   
  4295b5:	int3   
  4295b6:	int3   
  4295b7:	int3   
  4295b8:	rex.W push rbp
  4295ba:	sub    rsp,0x20
  4295be:	mov    rbp,rdx
  4295c1:	lea    rcx,[rbp+0x30]
  4295c5:	call   0x401000
  4295ca:	add    rsp,0x20
  4295ce:	pop    rbp
  4295cf:	ret    
  4295d0:	int3   
  4295d1:	int3   
  4295d2:	int3   
  4295d3:	int3   
  4295d4:	int3   
  4295d5:	int3   
  4295d6:	int3   
  4295d7:	int3   
  4295d8:	rex.W push rbp
  4295da:	sub    rsp,0x20
  4295de:	mov    rbp,rdx
  4295e1:	lea    rcx,[rbp+0x20]
  4295e5:	call   0x401000
  4295ea:	add    rsp,0x20
  4295ee:	pop    rbp
  4295ef:	ret    
  4295f0:	int3   
  4295f1:	int3   
  4295f2:	int3   
  4295f3:	int3   
  4295f4:	int3   
  4295f5:	int3   
  4295f6:	int3   
  4295f7:	int3   
  4295f8:	rex.W push rbp
  4295fa:	sub    rsp,0x20
  4295fe:	mov    rbp,rdx
  429601:	lea    rcx,[rbp+0x20]
  429605:	call   0x401000
  42960a:	add    rsp,0x20
  42960e:	pop    rbp
  42960f:	ret    
  429610:	int3   
  429611:	int3   
  429612:	int3   
  429613:	int3   
  429614:	int3   
  429615:	int3   
  429616:	int3   
  429617:	int3   
  429618:	rex.W push rbp
  42961a:	sub    rsp,0x20
  42961e:	mov    rbp,rdx
  429621:	lea    rcx,[rbp+0x20]
  429625:	call   0x401000
  42962a:	add    rsp,0x20
  42962e:	pop    rbp
  42962f:	ret    
  429630:	mov    QWORD PTR [rsp+0x8],rcx
  429635:	push   rbx
  429636:	sub    rsp,0x30
  42963a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  429643:	mov    rbx,rcx
  429646:	add    rcx,0x10
  42964a:	call   0x403150
  42964f:	nop
  429650:	lea    rcx,[rbx+0x20]
  429654:	call   0x403150
  429659:	nop
  42965a:	lea    rcx,[rbx+0x38]
  42965e:	call   0x403150
  429663:	nop
  429664:	lea    rcx,[rbx+0x48]
  429668:	call   0x403150
  42966d:	xor    r11d,r11d
  429670:	mov    BYTE PTR [rbx+0x58],r11b
  429674:	mov    BYTE PTR [rbx+0x59],r11b
  429678:	mov    BYTE PTR [rbx+0x5a],r11b
  42967c:	mov    BYTE PTR [rbx+0x5b],r11b
  429680:	mov    BYTE PTR [rbx+0x5c],r11b
  429684:	mov    BYTE PTR [rbx+0x5d],r11b
  429688:	mov    BYTE PTR [rbx+0x7c],r11b
  42968c:	mov    rax,rbx
  42968f:	add    rsp,0x30
  429693:	pop    rbx
  429694:	ret    
  429695:	int3   
  429696:	int3   
  429697:	int3   
  429698:	int3   
  429699:	int3   
  42969a:	int3   
  42969b:	int3   
  42969c:	int3   
  42969d:	int3   
  42969e:	int3   
  42969f:	int3   
  4296a0:	rex.W push rbp
  4296a2:	sub    rsp,0x20
  4296a6:	mov    rbp,rdx
  4296a9:	mov    rcx,QWORD PTR [rbp+0x40]
  4296ad:	add    rcx,0x10
  4296b1:	call   0x401000
  4296b6:	add    rsp,0x20
  4296ba:	pop    rbp
  4296bb:	ret    
  4296bc:	int3   
  4296bd:	int3   
  4296be:	int3   
  4296bf:	int3   
  4296c0:	rex.W push rbp
  4296c2:	sub    rsp,0x20
  4296c6:	mov    rbp,rdx
  4296c9:	mov    rcx,QWORD PTR [rbp+0x40]
  4296cd:	add    rcx,0x20
  4296d1:	call   0x401000
  4296d6:	add    rsp,0x20
  4296da:	pop    rbp
  4296db:	ret    
  4296dc:	int3   
  4296dd:	int3   
  4296de:	int3   
  4296df:	int3   
  4296e0:	rex.W push rbp
  4296e2:	sub    rsp,0x20
  4296e6:	mov    rbp,rdx
  4296e9:	mov    rcx,QWORD PTR [rbp+0x40]
  4296ed:	add    rcx,0x38
  4296f1:	call   0x401000
  4296f6:	add    rsp,0x20
  4296fa:	pop    rbp
  4296fb:	ret    
  4296fc:	rex.W push rbx
  4296fe:	sub    rsp,0x20
  429702:	mov    rbx,rcx
  429705:	mov    rcx,QWORD PTR [rcx+0x48]
  429709:	call   0x40215c
  42970e:	mov    rcx,QWORD PTR [rbx+0x38]
  429712:	call   0x40215c
  429717:	mov    rcx,QWORD PTR [rbx+0x20]
  42971b:	call   0x40215c
  429720:	mov    rcx,QWORD PTR [rbx+0x10]
  429724:	add    rsp,0x20
  429728:	pop    rbx
  429729:	jmp    0x40215c
  42972e:	int3   
  42972f:	int3   
  429730:	mov    DWORD PTR [rdx],0x7
  429736:	xor    eax,eax
  429738:	ret    
  429739:	int3   
  42973a:	int3   
  42973b:	int3   
  42973c:	cmp    edx,0x7
  42973f:	jb     0x429747
  429741:	mov    eax,0x80070057
  429746:	ret    
  429747:	mov    eax,edx
  429749:	lea    rdx,[rip+0xfffffffffffd68b0]        # 0x400000
  429750:	movzx  eax,BYTE PTR [rax+rdx*1+0x50310]
  429758:	mov    DWORD PTR [r9],eax
  42975b:	movzx  ecx,BYTE PTR [rax+rdx*1+0x4e220]
  429763:	mov    rax,QWORD PTR [rsp+0x28]
  429768:	mov    WORD PTR [rax],cx
  42976b:	mov    QWORD PTR [r8],0x0
  429772:	xor    eax,eax
  429774:	ret    
  429775:	int3   
  429776:	int3   
  429777:	int3   
  429778:	mov    DWORD PTR [rdx],0x0
  42977e:	xor    eax,eax
  429780:	ret    
  429781:	int3   
  429782:	int3   
  429783:	int3   
  429784:	mov    eax,0x80004001
  429789:	ret    
  42978a:	int3   
  42978b:	int3   
  42978c:	mov    WORD PTR [r8],0x0
  429792:	xor    eax,eax
  429794:	ret    
  429795:	int3   
  429796:	int3   
  429797:	int3   
  429798:	rex.W push rbx
  42979a:	push   rdi
  42979b:	sub    rsp,0x48
  42979f:	mov    BYTE PTR [r9],0x0
  4297a3:	mov    rax,QWORD PTR [rcx]
  4297a6:	mov    rdi,r9
  4297a9:	lea    r9,[rsp+0x20]
  4297ae:	mov    WORD PTR [rsp+0x20],0x0
  4297b5:	mov    WORD PTR [rsp+0x22],0x0
  4297bc:	mov    QWORD PTR [rsp+0x28],0x0
  4297c5:	call   QWORD PTR [rax+0x30]
  4297c8:	test   eax,eax
  4297ca:	mov    ebx,eax
  4297cc:	jne    0x4297e5
  4297ce:	movzx  eax,WORD PTR [rsp+0x20]
  4297d3:	cmp    ax,0xb
  4297d7:	jne    0x4297f8
  4297d9:	cmp    WORD PTR [rsp+0x28],bx
  4297de:	setne  al
  4297e1:	mov    BYTE PTR [rdi],al
  4297e3:	xor    ebx,ebx
  4297e5:	lea    rcx,[rsp+0x20]
  4297ea:	call   0x40b028
  4297ef:	mov    eax,ebx
  4297f1:	add    rsp,0x48
  4297f5:	pop    rdi
  4297f6:	pop    rbx
  4297f7:	ret    
  4297f8:	test   ax,ax
  4297fb:	je     0x4297e3
  4297fd:	mov    ebx,0x80004005
  429802:	jmp    0x4297e5
  429804:	mov    r9,r8
  429807:	mov    r8d,0x6
  42980d:	jmp    0x429798
  429812:	int3   
  429813:	int3   
  429814:	mov    r9,r8
  429817:	mov    r8d,0x40
  42981d:	jmp    0x429798
  429822:	int3   
  429823:	int3   
  429824:	mov    r9,r8
  429827:	mov    r8d,0x3f
  42982d:	jmp    0x429798
  429832:	int3   
  429833:	int3   
  429834:	rex.W push rbx
  429836:	push   rdi
  429837:	sub    rsp,0x48
  42983b:	mov    BYTE PTR [r8],0x0
  42983f:	mov    rax,QWORD PTR [rcx]
  429842:	mov    rdi,r8
  429845:	lea    r8,[rsp+0x20]
  42984a:	mov    WORD PTR [rsp+0x20],0x0
  429851:	mov    WORD PTR [rsp+0x22],0x0
  429858:	mov    QWORD PTR [rsp+0x28],0x0
  429861:	call   QWORD PTR [rax+0x40]
  429864:	test   eax,eax
  429866:	mov    ebx,eax
  429868:	jne    0x429881
  42986a:	movzx  eax,WORD PTR [rsp+0x20]
  42986f:	cmp    ax,0xb
  429873:	jne    0x429894
  429875:	cmp    WORD PTR [rsp+0x28],bx
  42987a:	setne  al
  42987d:	mov    BYTE PTR [rdi],al
  42987f:	xor    ebx,ebx
  429881:	lea    rcx,[rsp+0x20]
  429886:	call   0x40b028
  42988b:	mov    eax,ebx
  42988d:	add    rsp,0x48
  429891:	pop    rdi
  429892:	pop    rbx
  429893:	ret    
  429894:	test   ax,ax
  429897:	je     0x42987f
  429899:	mov    ebx,0x80004005
  42989e:	jmp    0x429881
  4298a0:	rex.W push rbx
  4298a2:	push   rsi
  4298a3:	push   rdi
  4298a4:	sub    rsp,0x40
  4298a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4298b1:	mov    rdi,r9
  4298b4:	mov    rsi,r8
  4298b7:	mov    BYTE PTR [r9],0x0
  4298bb:	mov    WORD PTR [rsp+0x28],0x0
  4298c2:	mov    WORD PTR [rsp+0x2a],0x0
  4298c9:	mov    QWORD PTR [rsp+0x30],0x0
  4298d2:	mov    rax,QWORD PTR [rcx]
  4298d5:	lea    r8,[rsp+0x28]
  4298da:	call   QWORD PTR [rax+0x40]
  4298dd:	mov    ebx,eax
  4298df:	test   eax,eax
  4298e1:	je     0x4298e5
  4298e3:	jmp    0x42993a
  4298e5:	movzx  ecx,WORD PTR [rsp+0x28]
  4298ea:	test   ecx,ecx
  4298ec:	je     0x429938
  4298ee:	sub    ecx,0x3
  4298f1:	je     0x42992d
  4298f3:	sub    ecx,0x10
  4298f6:	je     0x429921
  4298f8:	dec    ecx
  4298fa:	je     0x429914
  4298fc:	dec    ecx
  4298fe:	je     0x429907
  429900:	mov    ebx,0x80004005
  429905:	jmp    0x42993a
  429907:	mov    rax,QWORD PTR [rsp+0x30]
  42990c:	mov    QWORD PTR [rsi],rax
  42990f:	mov    BYTE PTR [rdi],0x1
  429912:	jmp    0x429938
  429914:	mov    rax,QWORD PTR [rsp+0x30]
  429919:	mov    QWORD PTR [rsi],rax
  42991c:	mov    BYTE PTR [rdi],0x1
  42991f:	jmp    0x429938
  429921:	mov    eax,DWORD PTR [rsp+0x30]
  429925:	mov    QWORD PTR [rsi],rax
  429928:	mov    BYTE PTR [rdi],0x1
  42992b:	jmp    0x429938
  42992d:	movsxd rax,DWORD PTR [rsp+0x30]
  429932:	mov    QWORD PTR [rsi],rax
  429935:	mov    BYTE PTR [rdi],0x1
  429938:	xor    ebx,ebx
  42993a:	lea    rcx,[rsp+0x28]
  42993f:	call   0x40b028
  429944:	mov    eax,ebx
  429946:	add    rsp,0x40
  42994a:	pop    rdi
  42994b:	pop    rsi
  42994c:	pop    rbx
  42994d:	ret    
  42994e:	int3   
  42994f:	int3   
  429950:	rex.W push rbp
  429952:	sub    rsp,0x20
  429956:	mov    rbp,rdx
  429959:	lea    rcx,[rbp+0x28]
  42995d:	call   0x40b830
  429962:	add    rsp,0x20
  429966:	pop    rbp
  429967:	ret    
  429968:	xor    r8d,r8d
  42996b:	lea    r9d,[r8-0x1]
  42996f:	mov    eax,r9d
  429972:	jmp    0x429992
  429974:	cmp    dx,0x3a
  429978:	jne    0x429983
  42997a:	test   eax,eax
  42997c:	jns    0x42998b
  42997e:	mov    eax,r8d
  429981:	jmp    0x42998b
  429983:	cmp    dx,0x5c
  429987:	cmove  eax,r9d
  42998b:	inc    r8d
  42998e:	add    rcx,0x2
  429992:	movzx  edx,WORD PTR [rcx]
  429995:	test   dx,dx
  429998:	jne    0x429974
  42999a:	ret    
  42999b:	int3   
  42999c:	rex.W push rbx
  42999e:	push   rsi
  42999f:	push   rdi
  4299a0:	sub    rsp,0x40
  4299a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4299ad:	mov    rsi,r9
  4299b0:	mov    rbx,r8
  4299b3:	mov    WORD PTR [rsp+0x28],0x0
  4299ba:	mov    WORD PTR [rsp+0x2a],0x0
  4299c1:	mov    QWORD PTR [rsp+0x30],0x0
  4299ca:	mov    BYTE PTR [r9],0x0
  4299ce:	mov    QWORD PTR [r8],0x0
  4299d5:	mov    rax,QWORD PTR [rcx]
  4299d8:	lea    r9,[rsp+0x28]
  4299dd:	mov    r8d,0x7
  4299e3:	call   QWORD PTR [rax+0x30]
  4299e6:	mov    edi,eax
  4299e8:	test   eax,eax
  4299ea:	je     0x4299ee
  4299ec:	jmp    0x429a0e
  4299ee:	movzx  ecx,WORD PTR [rsp+0x28]
  4299f3:	test   ecx,ecx
  4299f5:	je     0x429a52
  4299f7:	sub    ecx,0x11
  4299fa:	je     0x429a39
  4299fc:	dec    ecx
  4299fe:	je     0x429a2f
  429a00:	dec    ecx
  429a02:	je     0x429a26
  429a04:	cmp    ecx,0x2
  429a07:	je     0x429a1c
  429a09:	mov    edi,0x80004005
  429a0e:	lea    rcx,[rsp+0x28]
  429a13:	call   0x40b028
  429a18:	mov    eax,edi
  429a1a:	jmp    0x429a5e
  429a1c:	mov    rax,QWORD PTR [rsp+0x30]
  429a21:	mov    QWORD PTR [rbx],rax
  429a24:	jmp    0x429a41
  429a26:	mov    eax,DWORD PTR [rsp+0x30]
  429a2a:	mov    QWORD PTR [rbx],rax
  429a2d:	jmp    0x429a41
  429a2f:	movzx  eax,WORD PTR [rsp+0x30]
  429a34:	mov    QWORD PTR [rbx],rax
  429a37:	jmp    0x429a41
  429a39:	movzx  eax,BYTE PTR [rsp+0x30]
  429a3e:	mov    QWORD PTR [rbx],rax
  429a41:	mov    BYTE PTR [rsi],0x1
  429a44:	lea    rcx,[rsp+0x28]
  429a49:	call   0x40b028
  429a4e:	xor    eax,eax
  429a50:	jmp    0x429a5e
  429a52:	lea    rcx,[rsp+0x28]
  429a57:	call   0x40b028
  429a5c:	xor    eax,eax
  429a5e:	add    rsp,0x40
  429a62:	pop    rdi
  429a63:	pop    rsi
  429a64:	pop    rbx
  429a65:	ret    
  429a66:	int3   
  429a67:	int3   
  429a68:	int3   
  429a69:	int3   
  429a6a:	int3   
  429a6b:	int3   
  429a6c:	rex.W push rbp
  429a6e:	sub    rsp,0x20
  429a72:	mov    rbp,rdx
  429a75:	lea    rcx,[rbp+0x28]
  429a79:	call   0x40b830
  429a7e:	add    rsp,0x20
  429a82:	pop    rbp
  429a83:	ret    
  429a84:	rex.W push rbx
  429a86:	push   rbp
  429a87:	push   rsi
  429a88:	push   rdi
  429a89:	sub    rsp,0x28
  429a8d:	mov    edx,DWORD PTR [rcx]
  429a8f:	mov    ebx,0x1
  429a94:	mov    rbp,rcx
  429a97:	shr    edx,0x9
  429a9a:	test   bl,dl
  429a9c:	jne    0x429ac4
  429a9e:	xor    edi,edi
  429aa0:	lea    rsi,[rip+0x26871]        # 0x450318
  429aa7:	mov    rdx,QWORD PTR [rsi]
  429aaa:	mov    rcx,QWORD PTR [rbp+0x18]
  429aae:	call   0x402864
  429ab3:	test   al,al
  429ab5:	jne    0x429ac4
  429ab7:	add    edi,ebx
  429ab9:	add    rsi,0x8
  429abd:	cmp    edi,0x5
  429ac0:	jb     0x429aa7
  429ac2:	xor    bl,bl
  429ac4:	mov    al,bl
  429ac6:	add    rsp,0x28
  429aca:	pop    rdi
  429acb:	pop    rsi
  429acc:	pop    rbp
  429acd:	pop    rbx
  429ace:	ret    
  429acf:	int3   
  429ad0:	xor    eax,eax
  429ad2:	ret    
  429ad3:	int3   
  429ad4:	sub    rsp,0x28
  429ad8:	test   rdx,rdx
  429adb:	je     0x429ae0
  429add:	mov    BYTE PTR [rdx],0x0
  429ae0:	movzx  eax,WORD PTR [rcx]
  429ae3:	test   eax,eax
  429ae5:	je     0x429b18
  429ae7:	cmp    eax,0x13
  429aea:	je     0x429b0b
  429aec:	cmp    eax,0x15
  429aef:	je     0x429b0b
  429af1:	lea    rdx,[rip+0x3d5d8]        # 0x4670d0
  429af8:	lea    rcx,[rsp+0x30]
  429afd:	mov    DWORD PTR [rsp+0x30],0x24e9f
  429b05:	call   0x44b71e
  429b0a:	int3   
  429b0b:	test   rdx,rdx
  429b0e:	je     0x429b13
  429b10:	mov    BYTE PTR [rdx],0x1
  429b13:	mov    eax,DWORD PTR [rcx+0x8]
  429b16:	jmp    0x429b1a
  429b18:	xor    eax,eax
  429b1a:	add    rsp,0x28
  429b1e:	ret    
  429b1f:	int3   
  429b20:	rex.W push rbx
  429b22:	push   rbp
  429b23:	push   rsi
  429b24:	push   rdi
  429b25:	push   r12
  429b27:	push   r13
  429b29:	push   r14
  429b2b:	push   r15
  429b2d:	mov    r11,rsp
  429b30:	sub    rsp,0x48
  429b34:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  429b3d:	mov    ebp,r9d
  429b40:	mov    r14,r8
  429b43:	mov    rdi,rdx
  429b46:	mov    rbx,rcx
  429b49:	xor    r15d,r15d
  429b4c:	mov    BYTE PTR [rcx+0xe8],r15b
  429b53:	mov    QWORD PTR [rcx+0xe0],r15
  429b5a:	mov    QWORD PTR [rcx+0xd8],r15
  429b61:	mov    rax,QWORD PTR [rcx+0xf0]
  429b68:	sub    rax,r8
  429b6b:	mov    QWORD PTR [rcx+0xf8],rax
  429b72:	mov    BYTE PTR [rcx+0x20],r15b
  429b76:	mov    BYTE PTR [rcx+0x21],r15b
  429b7a:	mov    BYTE PTR [rcx+0x22],r15b
  429b7e:	mov    BYTE PTR [rcx+0x23],r15b
  429b82:	mov    DWORD PTR [rcx+0x24],r15d
  429b86:	mov    DWORD PTR [rcx+0x28],r15d
  429b8a:	mov    QWORD PTR [rcx+0x30],r15
  429b8e:	mov    DWORD PTR [rcx+0x40],r15d
  429b92:	mov    rax,QWORD PTR [rcx+0x38]
  429b96:	mov    WORD PTR [rax],r15w
  429b9a:	mov    DWORD PTR [rcx+0x50],r15d
  429b9e:	mov    rax,QWORD PTR [rcx+0x48]
  429ba2:	mov    WORD PTR [rax],r15w
  429ba6:	mov    WORD PTR [r11-0x20],r15w
  429bab:	mov    WORD PTR [r11-0x1e],r15w
  429bb0:	mov    QWORD PTR [r11-0x18],r15
  429bb4:	mov    rax,QWORD PTR [rdx]
  429bb7:	lea    r8,[r11-0x20]
  429bbb:	lea    edx,[r15+0x47]
  429bbf:	mov    rcx,rdi
  429bc2:	call   QWORD PTR [rax+0x40]
  429bc5:	mov    esi,eax
  429bc7:	cmp    eax,r15d
  429bca:	je     0x429bdd
  429bcc:	lea    rcx,[rsp+0x28]
  429bd1:	call   0x40b028
  429bd6:	mov    eax,esi
  429bd8:	jmp    0x429e68
  429bdd:	lea    rdx,[rbx+0x23]
  429be1:	lea    rcx,[rsp+0x28]
  429be6:	call   0x429ad4
  429beb:	mov    DWORD PTR [rbx+0x24],eax
  429bee:	lea    rcx,[rsp+0x28]
  429bf3:	call   0x40b028
  429bf8:	mov    WORD PTR [rsp+0x28],r15w
  429bfe:	mov    WORD PTR [rsp+0x2a],r15w
  429c04:	mov    QWORD PTR [rsp+0x30],r15
  429c09:	mov    rax,QWORD PTR [rdi]
  429c0c:	lea    r8,[rsp+0x28]
  429c11:	mov    edx,0x48
  429c16:	mov    rcx,rdi
  429c19:	call   QWORD PTR [rax+0x40]
  429c1c:	mov    esi,eax
  429c1e:	cmp    eax,r15d
  429c21:	je     0x429c34
  429c23:	lea    rcx,[rsp+0x28]
  429c28:	call   0x40b028
  429c2d:	mov    eax,esi
  429c2f:	jmp    0x429e68
  429c34:	xor    edx,edx
  429c36:	lea    rcx,[rsp+0x28]
  429c3b:	call   0x429ad4
  429c40:	mov    DWORD PTR [rbx+0x28],eax
  429c43:	lea    rcx,[rsp+0x28]
  429c48:	call   0x40b028
  429c4d:	mov    WORD PTR [rsp+0x28],r15w
  429c53:	mov    WORD PTR [rsp+0x2a],r15w
  429c59:	mov    QWORD PTR [rsp+0x30],r15
  429c5e:	mov    rax,QWORD PTR [rdi]
  429c61:	lea    r8,[rsp+0x28]
  429c66:	mov    edx,0x37
  429c6b:	mov    rcx,rdi
  429c6e:	call   QWORD PTR [rax+0x40]
  429c71:	mov    esi,eax
  429c73:	cmp    eax,r15d
  429c76:	je     0x429c89
  429c78:	lea    rcx,[rsp+0x28]
  429c7d:	call   0x40b028
  429c82:	mov    eax,esi
  429c84:	jmp    0x429e68
  429c89:	movzx  eax,WORD PTR [rsp+0x28]
  429c8e:	cmp    ax,r15w
  429c92:	je     0x429caf
  429c94:	lea    rdx,[rip+0x267e5]        # 0x450480
  429c9b:	cmp    ax,0x8
  429c9f:	cmove  rdx,QWORD PTR [rsp+0x30]
  429ca5:	lea    rcx,[rbx+0x38]
  429ca9:	call   0x403290
  429cae:	nop
  429caf:	lea    rcx,[rsp+0x28]
  429cb4:	call   0x40b028
  429cb9:	mov    WORD PTR [rsp+0x28],r15w
  429cbf:	mov    WORD PTR [rsp+0x2a],r15w
  429cc5:	mov    QWORD PTR [rsp+0x30],r15
  429cca:	mov    rax,QWORD PTR [rdi]
  429ccd:	lea    r8,[rsp+0x28]
  429cd2:	mov    edx,0x49
  429cd7:	mov    rcx,rdi
  429cda:	call   QWORD PTR [rax+0x40]
  429cdd:	mov    esi,eax
  429cdf:	cmp    eax,r15d
  429ce2:	je     0x429cf5
  429ce4:	lea    rcx,[rsp+0x28]
  429ce9:	call   0x40b028
  429cee:	mov    eax,esi
  429cf0:	jmp    0x429e68
  429cf5:	movzx  eax,WORD PTR [rsp+0x28]
  429cfa:	cmp    ax,r15w
  429cfe:	je     0x429d1b
  429d00:	lea    rdx,[rip+0x26759]        # 0x450460
  429d07:	cmp    ax,0x8
  429d0b:	cmove  rdx,QWORD PTR [rsp+0x30]
  429d11:	lea    rcx,[rbx+0x48]
  429d15:	call   0x403290
  429d1a:	nop
  429d1b:	lea    rcx,[rsp+0x28]
  429d20:	call   0x40b028
  429d25:	cmp    ebp,r15d
  429d28:	je     0x429d3e
  429d2a:	cmp    BYTE PTR [rbx+0x23],r15b
  429d2e:	je     0x429e66
  429d34:	test   BYTE PTR [rbx+0x24],0x1
  429d38:	jne    0x429e66
  429d3e:	lea    r9,[rbx+0xe8]
  429d45:	lea    r8,[rbx+0xe0]
  429d4c:	mov    edx,0x2c
  429d51:	mov    rcx,rdi
  429d54:	call   0x4298a0
  429d59:	cmp    eax,r15d
  429d5c:	jne    0x429e68
  429d62:	mov    WORD PTR [rsp+0x28],r15w
  429d68:	mov    WORD PTR [rsp+0x2a],r15w
  429d6e:	mov    QWORD PTR [rsp+0x30],r15
  429d73:	mov    rax,QWORD PTR [rdi]
  429d76:	lea    r8,[rsp+0x28]
  429d7b:	mov    edx,0x24
  429d80:	mov    rcx,rdi
  429d83:	call   QWORD PTR [rax+0x40]
  429d86:	mov    edi,eax
  429d88:	cmp    eax,r15d
  429d8b:	je     0x429d99
  429d8d:	lea    rcx,[rsp+0x28]
  429d92:	call   0x40b028
  429d97:	jmp    0x429e08
  429d99:	movzx  ecx,WORD PTR [rsp+0x28]
  429d9e:	cmp    ecx,r15d
  429da1:	je     0x429dfb
  429da3:	sub    ecx,0x3
  429da6:	je     0x429def
  429da8:	sub    ecx,0x10
  429dab:	je     0x429de2
  429dad:	dec    ecx
  429daf:	je     0x429dd4
  429db1:	dec    ecx
  429db3:	je     0x429dc6
  429db5:	lea    rcx,[rsp+0x28]
  429dba:	call   0x40b028
  429dbf:	mov    edi,0x80004005
  429dc4:	jmp    0x429e0d
  429dc6:	mov    rax,QWORD PTR [rsp+0x30]
  429dcb:	mov    QWORD PTR [rbx+0xd8],rax
  429dd2:	jmp    0x429dfb
  429dd4:	mov    rax,QWORD PTR [rsp+0x30]
  429dd9:	mov    QWORD PTR [rbx+0xd8],rax
  429de0:	jmp    0x429dfb
  429de2:	mov    eax,DWORD PTR [rsp+0x30]
  429de6:	mov    QWORD PTR [rbx+0xd8],rax
  429ded:	jmp    0x429dfb
  429def:	movsxd rax,DWORD PTR [rsp+0x30]
  429df4:	mov    QWORD PTR [rbx+0xd8],rax
  429dfb:	lea    rcx,[rsp+0x28]
  429e00:	call   0x40b028
  429e05:	mov    edi,r15d
  429e08:	cmp    edi,r15d
  429e0b:	je     0x429e11
  429e0d:	mov    eax,edi
  429e0f:	jmp    0x429e68
  429e11:	mov    rax,QWORD PTR [rbx+0xd8]
  429e18:	lea    r8,[r14+rax*1]
  429e1c:	mov    rcx,QWORD PTR [rbx+0xf0]
  429e23:	mov    rax,rcx
  429e26:	sub    rax,r8
  429e29:	mov    QWORD PTR [rbx+0xf8],rax
  429e30:	cmp    BYTE PTR [rbx+0xe8],r15b
  429e37:	je     0x429e66
  429e39:	mov    rdx,QWORD PTR [rbx+0xe0]
  429e40:	lea    rax,[rdx+r8*1]
  429e44:	cmp    rax,rcx
  429e47:	jae    0x429e5d
  429e49:	mov    QWORD PTR [rbx+0xf8],rdx
  429e50:	mov    BYTE PTR [rbx+0x20],0x1
  429e54:	sub    rcx,rax
  429e57:	mov    QWORD PTR [rbx+0x30],rcx
  429e5b:	jmp    0x429e66
  429e5d:	cmp    rax,rcx
  429e60:	jbe    0x429e66
  429e62:	mov    BYTE PTR [rbx+0x21],0x1
  429e66:	xor    eax,eax
  429e68:	add    rsp,0x48
  429e6c:	pop    r15
  429e6e:	pop    r14
  429e70:	pop    r13
  429e72:	pop    r12
  429e74:	pop    rdi
  429e75:	pop    rsi
  429e76:	pop    rbp
  429e77:	pop    rbx
  429e78:	ret    
  429e79:	int3   
  429e7a:	int3   
  429e7b:	int3   
  429e7c:	int3   
  429e7d:	int3   
  429e7e:	int3   
  429e7f:	int3   
  429e80:	rex.W push rbp
  429e82:	sub    rsp,0x20
  429e86:	mov    rbp,rdx
  429e89:	lea    rcx,[rbp+0x28]
  429e8d:	call   0x40b830
  429e92:	add    rsp,0x20
  429e96:	pop    rbp
  429e97:	ret    
  429e98:	int3   
  429e99:	int3   
  429e9a:	int3   
  429e9b:	int3   
  429e9c:	int3   
  429e9d:	int3   
  429e9e:	int3   
  429e9f:	int3   
  429ea0:	rex.W push rbp
  429ea2:	sub    rsp,0x20
  429ea6:	mov    rbp,rdx
  429ea9:	lea    rcx,[rbp+0x28]
  429ead:	call   0x40b830
  429eb2:	add    rsp,0x20
  429eb6:	pop    rbp
  429eb7:	ret    
  429eb8:	int3   
  429eb9:	int3   
  429eba:	int3   
  429ebb:	int3   
  429ebc:	int3   
  429ebd:	int3   
  429ebe:	int3   
  429ebf:	int3   
  429ec0:	rex.W push rbp
  429ec2:	sub    rsp,0x20
  429ec6:	mov    rbp,rdx
  429ec9:	lea    rcx,[rbp+0x28]
  429ecd:	call   0x40b830
  429ed2:	add    rsp,0x20
  429ed6:	pop    rbp
  429ed7:	ret    
  429ed8:	int3   
  429ed9:	int3   
  429eda:	int3   
  429edb:	int3   
  429edc:	int3   
  429edd:	int3   
  429ede:	int3   
  429edf:	int3   
  429ee0:	rex.W push rbp
  429ee2:	sub    rsp,0x20
  429ee6:	mov    rbp,rdx
  429ee9:	lea    rcx,[rbp+0x28]
  429eed:	call   0x40b830
  429ef2:	add    rsp,0x20
  429ef6:	pop    rbp
  429ef7:	ret    
  429ef8:	int3   
  429ef9:	int3   
  429efa:	int3   
  429efb:	int3   
  429efc:	int3   
  429efd:	int3   
  429efe:	int3   
  429eff:	int3   
  429f00:	rex.W push rbp
  429f02:	sub    rsp,0x20
  429f06:	mov    rbp,rdx
  429f09:	lea    rcx,[rbp+0x28]
  429f0d:	call   0x40b830
  429f12:	add    rsp,0x20
  429f16:	pop    rbp
  429f17:	ret    
  429f18:	rex.W push rbx
  429f1a:	push   rdi
  429f1b:	sub    rsp,0x828
  429f22:	cmp    QWORD PTR [rdx+0x38],0x0
  429f27:	mov    r10,r8
  429f2a:	mov    rbx,rdx
  429f2d:	mov    rdi,rcx
  429f30:	je     0x429f9b
  429f32:	mov    rcx,QWORD PTR [rdx+0x38]
  429f36:	xor    r9d,r9d
  429f39:	xor    r8d,r8d
  429f3c:	mov    rax,QWORD PTR [rcx]
  429f3f:	mov    rdx,r10
  429f42:	call   QWORD PTR [rax+0x20]
  429f45:	test   eax,eax
  429f47:	jne    0x429f9d
  429f49:	jmp    0x429f67
  429f4b:	mov    ecx,DWORD PTR [rsp+0x848]
  429f52:	xor    eax,eax
  429f54:	test   ecx,ecx
  429f56:	je     0x429f95
  429f58:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  429f5d:	jne    0x429f9b
  429f5f:	inc    rax
  429f62:	cmp    rax,rcx
  429f65:	jb     0x429f58
  429f67:	mov    rcx,QWORD PTR [rbx+0x38]
  429f6b:	mov    DWORD PTR [rsp+0x848],0x0
  429f76:	lea    r9,[rsp+0x848]
  429f7e:	mov    rax,QWORD PTR [rcx]
  429f81:	lea    rdx,[rsp+0x20]
  429f86:	mov    r8d,0x800
  429f8c:	call   QWORD PTR [rax+0x18]
  429f8f:	test   eax,eax
  429f91:	je     0x429f4b
  429f93:	jmp    0x429f9d
  429f95:	mov    BYTE PTR [rdi+0x22],0x1
  429f99:	jmp    0x429f9d
  429f9b:	xor    eax,eax
  429f9d:	add    rsp,0x828
  429fa4:	pop    rdi
  429fa5:	pop    rbx
  429fa6:	ret    
  429fa7:	int3   
  429fa8:	mov    QWORD PTR [r8],0x0
  429faf:	xor    eax,eax
  429fb1:	ret    
  429fb2:	int3   
  429fb3:	int3   
  429fb4:	rex.W push rbx
  429fb6:	push   rdi
  429fb7:	sub    rsp,0x48
  429fbb:	mov    rax,QWORD PTR [rcx]
  429fbe:	mov    r10,r9
  429fc1:	mov    r9,QWORD PTR [rsp+0x80]
  429fc9:	mov    r11,r8
  429fcc:	mov    dil,dl
  429fcf:	mov    r8,r10
  429fd2:	mov    rdx,r11
  429fd5:	mov    rbx,rcx
  429fd8:	call   QWORD PTR [rax+0x18]
  429fdb:	test   eax,eax
  429fdd:	jne    0x42a04e
  429fdf:	test   dil,dil
  429fe2:	je     0x42a04c
  429fe4:	lea    r9,[rsp+0x60]
  429fe9:	lea    r8,[rsp+0x30]
  429fee:	lea    edx,[rax+0x2c]
  429ff1:	mov    rcx,rbx
  429ff4:	mov    BYTE PTR [rsp+0x60],al
  429ff8:	call   0x4298a0
  429ffd:	test   eax,eax
  429fff:	jne    0x42a04e
  42a001:	cmp    BYTE PTR [rsp+0x60],al
  42a005:	jne    0x42a04c
  42a007:	lea    r8,[rsp+0x60]
  42a00c:	lea    edx,[rax+0x55]
  42a00f:	mov    rcx,rbx
  42a012:	mov    BYTE PTR [rsp+0x60],al
  42a016:	call   0x429834
  42a01b:	test   eax,eax
  42a01d:	jne    0x42a04e
  42a01f:	cmp    BYTE PTR [rsp+0x60],al
  42a023:	jne    0x42a04c
  42a025:	mov    rax,QWORD PTR [rsp+0x88]
  42a02d:	mov    r10,QWORD PTR [rbx]
  42a030:	xor    edx,edx
  42a032:	lea    r9d,[rdx+0x1]
  42a036:	mov    r8d,0xffffffff
  42a03c:	mov    rcx,rbx
  42a03f:	mov    QWORD PTR [rsp+0x20],rax
  42a044:	call   QWORD PTR [r10+0x38]
  42a048:	test   eax,eax
  42a04a:	jne    0x42a04e
  42a04c:	xor    eax,eax
  42a04e:	add    rsp,0x48
  42a052:	pop    rdi
  42a053:	pop    rbx
  42a054:	ret    
  42a055:	int3   
  42a056:	int3   
  42a057:	int3   
  42a058:	rex.W push rbx
  42a05a:	push   rdi
  42a05b:	sub    rsp,0x28
  42a05f:	mov    rdi,rdx
  42a062:	mov    QWORD PTR [rdx],0x0
  42a069:	lea    rdx,[rsp+0x40]
  42a06e:	mov    rbx,rcx
  42a071:	call   0x403ea0
  42a076:	mov    r11,rax
  42a079:	mov    rax,QWORD PTR [rsp+0x40]
  42a07e:	cmp    rax,rbx
  42a081:	je     0x42a0e7
  42a083:	movzx  ecx,WORD PTR [rax]
  42a086:	test   cx,cx
  42a089:	je     0x42a0f0
  42a08b:	cmp    WORD PTR [rax+0x2],0x0
  42a090:	jne    0x42a0e7
  42a092:	lea    eax,[rcx-0x41]
  42a095:	cmp    ax,0x19
  42a099:	ja     0x42a09f
  42a09b:	add    cx,0x20
  42a09f:	movzx  eax,cx
  42a0a2:	cmp    eax,0x62
  42a0a5:	je     0x42a0f0
  42a0a7:	cmp    eax,0x67
  42a0aa:	je     0x42a0ce
  42a0ac:	cmp    eax,0x6b
  42a0af:	je     0x42a0c7
  42a0b1:	cmp    eax,0x6d
  42a0b4:	je     0x42a0c0
  42a0b6:	cmp    eax,0x74
  42a0b9:	jne    0x42a0e7
  42a0bb:	lea    edx,[rax-0x4c]
  42a0be:	jmp    0x42a0d3
  42a0c0:	mov    edx,0x14
  42a0c5:	jmp    0x42a0d3
  42a0c7:	mov    edx,0xa
  42a0cc:	jmp    0x42a0d3
  42a0ce:	mov    edx,0x1e
  42a0d3:	mov    ecx,0x40
  42a0d8:	mov    eax,0x1
  42a0dd:	sub    ecx,edx
  42a0df:	shl    rax,cl
  42a0e2:	cmp    r11,rax
  42a0e5:	jb     0x42a0eb
  42a0e7:	xor    al,al
  42a0e9:	jmp    0x42a0f5
  42a0eb:	mov    ecx,edx
  42a0ed:	shl    r11,cl
  42a0f0:	mov    QWORD PTR [rdi],r11
  42a0f3:	mov    al,0x1
  42a0f5:	add    rsp,0x28
  42a0f9:	pop    rdi
  42a0fa:	pop    rbx
  42a0fb:	ret    
  42a0fc:	rex.W push rbx
  42a0fe:	push   rbp
  42a0ff:	push   rsi
  42a100:	push   rdi
  42a101:	sub    rsp,0x58
  42a105:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a10e:	mov    rbx,r8
  42a111:	mov    rsi,rdx
  42a114:	mov    rbp,rcx
  42a117:	mov    dx,0x3a
  42a11b:	mov    rcx,QWORD PTR [rsi]
  42a11e:	call   0x4026e0
  42a123:	mov    edi,eax
  42a125:	lea    rcx,[rsp+0x38]
  42a12a:	call   0x403150
  42a12f:	nop
  42a130:	test   edi,edi
  42a132:	jns    0x42a146
  42a134:	mov    rdx,rsi
  42a137:	lea    rcx,[rsp+0x38]
  42a13c:	call   0x4032f8
  42a141:	mov    edi,DWORD PTR [rsi+0x8]
  42a144:	jmp    0x42a171
  42a146:	mov    r8d,edi
  42a149:	lea    rdx,[rsp+0x28]
  42a14e:	mov    rcx,rsi
  42a151:	call   0x4042a0
  42a156:	nop
  42a157:	mov    rdx,rax
  42a15a:	lea    rcx,[rsp+0x38]
  42a15f:	call   0x4032f8
  42a164:	nop
  42a165:	mov    rcx,QWORD PTR [rsp+0x28]
  42a16a:	call   0x40215c
  42a16f:	inc    edi
  42a171:	lea    rdx,[rsp+0x38]
  42a176:	mov    rcx,rbp
  42a179:	call   0x427b80
  42a17e:	mov    BYTE PTR [rbx+0x10],0x0
  42a182:	mov    rcx,QWORD PTR [rsp+0x38]
  42a187:	test   eax,eax
  42a189:	jns    0x42a1d3
  42a18b:	cmp    WORD PTR [rcx],0x2a
  42a18f:	jne    0x42a1a4
  42a191:	cmp    WORD PTR [rcx+0x2],0x0
  42a196:	je     0x42a1d3
  42a198:	call   0x40215c
  42a19d:	xor    al,al
  42a19f:	jmp    0x42a2bb
  42a1a4:	cmp    WORD PTR [rcx],0x23
  42a1a8:	jne    0x42a1c7
  42a1aa:	cmp    WORD PTR [rcx+0x2],0x0
  42a1af:	je     0x42a1bd
  42a1b1:	call   0x40215c
  42a1b6:	xor    al,al
  42a1b8:	jmp    0x42a2bb
  42a1bd:	mov    BYTE PTR [rbx+0x11],0x0
  42a1c1:	mov    BYTE PTR [rbx+0x12],0x1
  42a1c5:	jmp    0x42a1d3
  42a1c7:	call   0x40215c
  42a1cc:	xor    al,al
  42a1ce:	jmp    0x42a2bb
  42a1d3:	mov    DWORD PTR [rbx],eax
  42a1d5:	call   0x40215c
  42a1da:	cmp    edi,DWORD PTR [rsi+0x8]
  42a1dd:	jae    0x42a2b9
  42a1e3:	mov    ecx,edi
  42a1e5:	mov    rax,QWORD PTR [rsi]
  42a1e8:	lea    rcx,[rax+rcx*2]
  42a1ec:	mov    dx,0x3a
  42a1f0:	call   0x4026e0
  42a1f5:	lea    ebp,[rax+rdi*1]
  42a1f8:	mov    ecx,0xffffffff
  42a1fd:	test   eax,eax
  42a1ff:	cmovs  ebp,ecx
  42a202:	test   ebp,ebp
  42a204:	jns    0x42a209
  42a206:	mov    ebp,DWORD PTR [rsi+0x8]
  42a209:	mov    r9d,ebp
  42a20c:	sub    r9d,edi
  42a20f:	mov    r8d,edi
  42a212:	lea    rdx,[rsp+0x28]
  42a217:	mov    rcx,rsi
  42a21a:	call   0x409d0c
  42a21f:	cmp    DWORD PTR [rsp+0x30],0x0
  42a224:	je     0x42a29d
  42a226:	mov    rcx,QWORD PTR [rsp+0x28]
  42a22b:	cmp    WORD PTR [rcx],0x0
  42a22f:	je     0x42a28b
  42a231:	lea    rax,[rcx+0x2]
  42a235:	cmp    WORD PTR [rax],0x0
  42a239:	jne    0x42a25c
  42a23b:	cmp    BYTE PTR [rcx],0x61
  42a23e:	je     0x42a256
  42a240:	cmp    BYTE PTR [rcx],0x65
  42a243:	je     0x42a250
  42a245:	cmp    BYTE PTR [rcx],0x72
  42a248:	jne    0x42a2b0
  42a24a:	mov    BYTE PTR [rbx+0x10],0x1
  42a24e:	jmp    0x42a28b
  42a250:	mov    BYTE PTR [rbx+0x13],0x1
  42a254:	jmp    0x42a28b
  42a256:	mov    BYTE PTR [rbx+0x11],0x1
  42a25a:	jmp    0x42a28b
  42a25c:	cmp    WORD PTR [rcx],0x73
  42a260:	jne    0x42a2b0
  42a262:	lea    rdx,[rsp+0x90]
  42a26a:	mov    rcx,rax
  42a26d:	call   0x42a058
  42a272:	test   al,al
  42a274:	je     0x42a2ab
  42a276:	mov    rax,QWORD PTR [rsp+0x90]
  42a27e:	mov    QWORD PTR [rbx+0x18],rax
  42a282:	mov    BYTE PTR [rbx+0x15],0x1
  42a286:	mov    rcx,QWORD PTR [rsp+0x28]
  42a28b:	lea    edi,[rbp+0x1]
  42a28e:	call   0x40215c
  42a293:	cmp    edi,DWORD PTR [rsi+0x8]
  42a296:	jae    0x42a2b9
  42a298:	jmp    0x42a1e3
  42a29d:	mov    rcx,QWORD PTR [rsp+0x28]
  42a2a2:	call   0x40215c
  42a2a7:	xor    al,al
  42a2a9:	jmp    0x42a2bb
  42a2ab:	mov    rcx,QWORD PTR [rsp+0x28]
  42a2b0:	call   0x40215c
  42a2b5:	xor    al,al
  42a2b7:	jmp    0x42a2bb
  42a2b9:	mov    al,0x1
  42a2bb:	add    rsp,0x58
  42a2bf:	pop    rdi
  42a2c0:	pop    rsi
  42a2c1:	pop    rbp
  42a2c2:	pop    rbx
  42a2c3:	ret    
  42a2c4:	int3   
  42a2c5:	int3   
  42a2c6:	int3   
  42a2c7:	int3   
  42a2c8:	int3   
  42a2c9:	int3   
  42a2ca:	int3   
  42a2cb:	int3   
  42a2cc:	rex.W push rbp
  42a2ce:	sub    rsp,0x20
  42a2d2:	mov    rbp,rdx
  42a2d5:	lea    rcx,[rbp+0x38]
  42a2d9:	call   0x401000
  42a2de:	add    rsp,0x20
  42a2e2:	pop    rbp
  42a2e3:	ret    
  42a2e4:	int3   
  42a2e5:	int3   
  42a2e6:	int3   
  42a2e7:	int3   
  42a2e8:	int3   
  42a2e9:	int3   
  42a2ea:	int3   
  42a2eb:	int3   
  42a2ec:	rex.W push rbp
  42a2ee:	sub    rsp,0x20
  42a2f2:	mov    rbp,rdx
  42a2f5:	lea    rcx,[rbp+0x28]
  42a2f9:	call   0x401000
  42a2fe:	add    rsp,0x20
  42a302:	pop    rbp
  42a303:	ret    
  42a304:	rex.W push rbx
  42a306:	push   rsi
  42a307:	push   rdi
  42a308:	sub    rsp,0x20
  42a30c:	cmp    rdx,rcx
  42a30f:	mov    rsi,rdx
  42a312:	mov    rbx,rcx
  42a315:	je     0x42a367
  42a317:	mov    edi,DWORD PTR [rdx+0x8]
  42a31a:	cmp    edi,DWORD PTR [rcx+0xc]
  42a31d:	jbe    0x42a34e
  42a31f:	mov    rcx,QWORD PTR [rcx]
  42a322:	call   0x40215c
  42a327:	mov    rcx,rdi
  42a32a:	mov    DWORD PTR [rbx+0xc],0x0
  42a331:	shl    rcx,0x2
  42a335:	mov    DWORD PTR [rbx+0x8],0x0
  42a33c:	mov    QWORD PTR [rbx],0x0
  42a343:	call   0x402130
  42a348:	mov    DWORD PTR [rbx+0xc],edi
  42a34b:	mov    QWORD PTR [rbx],rax
  42a34e:	test   edi,edi
  42a350:	mov    DWORD PTR [rbx+0x8],edi
  42a353:	je     0x42a367
  42a355:	mov    rdx,QWORD PTR [rsi]
  42a358:	mov    rcx,QWORD PTR [rbx]
  42a35b:	mov    r8,rdi
  42a35e:	shl    r8,0x2
  42a362:	call   0x44b480
  42a367:	mov    rax,rbx
  42a36a:	add    rsp,0x20
  42a36e:	pop    rdi
  42a36f:	pop    rsi
  42a370:	pop    rbx
  42a371:	ret    
  42a372:	int3   
  42a373:	int3   
  42a374:	mov    QWORD PTR [rsp+0x8],rcx
  42a379:	push   rbx
  42a37a:	push   rdi
  42a37b:	sub    rsp,0x38
  42a37f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a388:	mov    rbx,rdx
  42a38b:	mov    rdi,rcx
  42a38e:	mov    rax,QWORD PTR [rdx]
  42a391:	mov    QWORD PTR [rcx],rax
  42a394:	mov    rax,QWORD PTR [rdx+0x8]
  42a398:	mov    QWORD PTR [rcx+0x8],rax
  42a39c:	add    rdx,0x10
  42a3a0:	add    rcx,0x10
  42a3a4:	call   0x403208
  42a3a9:	nop
  42a3aa:	lea    rdx,[rbx+0x20]
  42a3ae:	lea    rcx,[rdi+0x20]
  42a3b2:	call   0x403208
  42a3b7:	nop
  42a3b8:	mov    rax,QWORD PTR [rbx+0x30]
  42a3bc:	mov    QWORD PTR [rdi+0x30],rax
  42a3c0:	lea    rdx,[rbx+0x38]
  42a3c4:	lea    rcx,[rdi+0x38]
  42a3c8:	call   0x403208
  42a3cd:	nop
  42a3ce:	lea    rdx,[rbx+0x48]
  42a3d2:	lea    rcx,[rdi+0x48]
  42a3d6:	call   0x403208
  42a3db:	mov    r11b,BYTE PTR [rbx+0x58]
  42a3df:	mov    BYTE PTR [rdi+0x58],r11b
  42a3e3:	mov    al,BYTE PTR [rbx+0x59]
  42a3e6:	mov    BYTE PTR [rdi+0x59],al
  42a3e9:	mov    al,BYTE PTR [rbx+0x5a]
  42a3ec:	mov    BYTE PTR [rdi+0x5a],al
  42a3ef:	mov    al,BYTE PTR [rbx+0x5b]
  42a3f2:	mov    BYTE PTR [rdi+0x5b],al
  42a3f5:	mov    al,BYTE PTR [rbx+0x5c]
  42a3f8:	mov    BYTE PTR [rdi+0x5c],al
  42a3fb:	mov    al,BYTE PTR [rbx+0x5d]
  42a3fe:	mov    BYTE PTR [rdi+0x5d],al
  42a401:	mov    rax,QWORD PTR [rbx+0x60]
  42a405:	mov    QWORD PTR [rdi+0x60],rax
  42a409:	mov    rax,QWORD PTR [rbx+0x68]
  42a40d:	mov    QWORD PTR [rdi+0x68],rax
  42a411:	mov    rax,QWORD PTR [rbx+0x70]
  42a415:	mov    QWORD PTR [rdi+0x70],rax
  42a419:	mov    eax,DWORD PTR [rbx+0x78]
  42a41c:	mov    DWORD PTR [rdi+0x78],eax
  42a41f:	mov    al,BYTE PTR [rbx+0x7c]
  42a422:	mov    BYTE PTR [rdi+0x7c],al
  42a425:	mov    rax,rdi
  42a428:	add    rsp,0x38
  42a42c:	pop    rdi
  42a42d:	pop    rbx
  42a42e:	ret    
  42a42f:	int3   
  42a430:	int3   
  42a431:	int3   
  42a432:	int3   
  42a433:	int3   
  42a434:	rex.W push rbp
  42a436:	sub    rsp,0x20
  42a43a:	mov    rbp,rdx
  42a43d:	mov    rcx,QWORD PTR [rbp+0x50]
  42a441:	add    rcx,0x10
  42a445:	call   0x401000
  42a44a:	add    rsp,0x20
  42a44e:	pop    rbp
  42a44f:	ret    
  42a450:	int3   
  42a451:	int3   
  42a452:	int3   
  42a453:	int3   
  42a454:	rex.W push rbp
  42a456:	sub    rsp,0x20
  42a45a:	mov    rbp,rdx
  42a45d:	mov    rcx,QWORD PTR [rbp+0x50]
  42a461:	add    rcx,0x20
  42a465:	call   0x401000
  42a46a:	add    rsp,0x20
  42a46e:	pop    rbp
  42a46f:	ret    
  42a470:	int3   
  42a471:	int3   
  42a472:	int3   
  42a473:	int3   
  42a474:	rex.W push rbp
  42a476:	sub    rsp,0x20
  42a47a:	mov    rbp,rdx
  42a47d:	mov    rcx,QWORD PTR [rbp+0x50]
  42a481:	add    rcx,0x38
  42a485:	call   0x401000
  42a48a:	add    rsp,0x20
  42a48e:	pop    rbp
  42a48f:	ret    
  42a490:	mov    QWORD PTR [rsp+0x8],rcx
  42a495:	push   rbx
  42a496:	push   rdi
  42a497:	sub    rsp,0x38
  42a49b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a4a4:	mov    rbx,rdx
  42a4a7:	mov    rdi,rcx
  42a4aa:	mov    al,BYTE PTR [rdx]
  42a4ac:	mov    BYTE PTR [rcx],al
  42a4ae:	mov    al,BYTE PTR [rdx+0x1]
  42a4b1:	mov    BYTE PTR [rcx+0x1],al
  42a4b4:	mov    al,BYTE PTR [rdx+0x2]
  42a4b7:	mov    BYTE PTR [rcx+0x2],al
  42a4ba:	mov    al,BYTE PTR [rdx+0x3]
  42a4bd:	mov    BYTE PTR [rcx+0x3],al
  42a4c0:	mov    eax,DWORD PTR [rdx+0x4]
  42a4c3:	mov    DWORD PTR [rcx+0x4],eax
  42a4c6:	mov    eax,DWORD PTR [rdx+0x8]
  42a4c9:	mov    DWORD PTR [rcx+0x8],eax
  42a4cc:	mov    eax,DWORD PTR [rdx+0xc]
  42a4cf:	mov    DWORD PTR [rcx+0xc],eax
  42a4d2:	mov    rax,QWORD PTR [rdx+0x10]
  42a4d6:	mov    QWORD PTR [rcx+0x10],rax
  42a4da:	add    rdx,0x18
  42a4de:	add    rcx,0x18
  42a4e2:	call   0x403208
  42a4e7:	nop
  42a4e8:	lea    rdx,[rbx+0x28]
  42a4ec:	lea    rcx,[rdi+0x28]
  42a4f0:	call   0x403208
  42a4f5:	nop
  42a4f6:	mov    rax,rdi
  42a4f9:	add    rsp,0x38
  42a4fd:	pop    rdi
  42a4fe:	pop    rbx
  42a4ff:	ret    
  42a500:	rex.W push rbp
  42a502:	sub    rsp,0x20
  42a506:	mov    rbp,rdx
  42a509:	mov    rcx,QWORD PTR [rbp+0x50]
  42a50d:	add    rcx,0x18
  42a511:	call   0x401000
  42a516:	add    rsp,0x20
  42a51a:	pop    rbp
  42a51b:	ret    
  42a51c:	rex.W push rbx
  42a51e:	push   rbp
  42a51f:	push   rsi
  42a520:	push   rdi
  42a521:	sub    rsp,0x28
  42a525:	mov    rsi,rdx
  42a528:	mov    rdi,r8
  42a52b:	mov    rbx,rcx
  42a52e:	mov    QWORD PTR [r8],0x0
  42a535:	mov    ebp,0x10
  42a53a:	lea    rdx,[rip+0x2a8af]        # 0x454df0
  42a541:	mov    r8,rbp
  42a544:	mov    rcx,rsi
  42a547:	call   0x44b786
  42a54c:	test   eax,eax
  42a54e:	jne    0x42a555
  42a550:	mov    QWORD PTR [rdi],rbx
  42a553:	jmp    0x42a5cc
  42a555:	lea    rdx,[rip+0x2983c]        # 0x453d98
  42a55c:	mov    r8,rbp
  42a55f:	mov    rcx,rsi
  42a562:	call   0x44b786
  42a567:	test   eax,eax
  42a569:	je     0x42a550
  42a56b:	lea    rdx,[rip+0x297b6]        # 0x453d28
  42a572:	mov    r8,rbp
  42a575:	mov    rcx,rsi
  42a578:	call   0x44b786
  42a57d:	test   eax,eax
  42a57f:	jne    0x42a587
  42a581:	lea    rdx,[rbx+0x8]
  42a585:	jmp    0x42a5bd
  42a587:	lea    rdx,[rip+0x2999a]        # 0x453f28
  42a58e:	mov    r8,rbp
  42a591:	mov    rcx,rsi
  42a594:	call   0x44b786
  42a599:	test   eax,eax
  42a59b:	jne    0x42a5a3
  42a59d:	lea    rdx,[rbx+0x10]
  42a5a1:	jmp    0x42a5bd
  42a5a3:	lea    rdx,[rip+0x2979e]        # 0x453d48
  42a5aa:	mov    r8,rbp
  42a5ad:	mov    rcx,rsi
  42a5b0:	call   0x44b786
  42a5b5:	test   eax,eax
  42a5b7:	jne    0x42a5d3
  42a5b9:	lea    rdx,[rbx+0x18]
  42a5bd:	mov    rax,rbx
  42a5c0:	neg    rax
  42a5c3:	sbb    rcx,rcx
  42a5c6:	and    rcx,rdx
  42a5c9:	mov    QWORD PTR [rdi],rcx
  42a5cc:	inc    DWORD PTR [rbx+0x20]
  42a5cf:	xor    eax,eax
  42a5d1:	jmp    0x42a5d8
  42a5d3:	mov    eax,0x80004002
  42a5d8:	add    rsp,0x28
  42a5dc:	pop    rdi
  42a5dd:	pop    rsi
  42a5de:	pop    rbp
  42a5df:	pop    rbx
  42a5e0:	ret    
  42a5e1:	int3   
  42a5e2:	int3   
  42a5e3:	int3   
  42a5e4:	sub    rcx,0x8
  42a5e8:	jmp    0x42a51c
  42a5ed:	int3   
  42a5ee:	int3   
  42a5ef:	int3   
  42a5f0:	sub    rcx,0x10
  42a5f4:	jmp    0x42a51c
  42a5f9:	int3   
  42a5fa:	int3   
  42a5fb:	int3   
  42a5fc:	sub    rcx,0x18
  42a600:	jmp    0x42a51c
  42a605:	int3   
  42a606:	int3   
  42a607:	int3   
  42a608:	rex.W push rbx
  42a60a:	sub    rsp,0x20
  42a60e:	add    DWORD PTR [rcx+0x20],0xffffffff
  42a612:	mov    eax,DWORD PTR [rcx+0x20]
  42a615:	mov    rbx,rcx
  42a618:	jne    0x42a629
  42a61a:	call   0x44a990
  42a61f:	mov    rcx,rbx
  42a622:	call   0x40215c
  42a627:	xor    eax,eax
  42a629:	add    rsp,0x20
  42a62d:	pop    rbx
  42a62e:	ret    
  42a62f:	int3   
  42a630:	mov    QWORD PTR [rsp+0x8],rcx
  42a635:	push   rbx
  42a636:	push   rbp
  42a637:	push   rdi
  42a638:	sub    rsp,0x30
  42a63c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a645:	mov    rdi,rcx
  42a648:	xor    ebp,ebp
  42a64a:	mov    QWORD PTR [rcx],rbp
  42a64d:	mov    QWORD PTR [rcx+0x8],rbp
  42a651:	mov    QWORD PTR [rcx+0x10],rbp
  42a655:	mov    QWORD PTR [rcx+0x18],rbp
  42a659:	lea    rbx,[rcx+0x20]
  42a65d:	mov    QWORD PTR [rsp+0x58],rbx
  42a662:	mov    BYTE PTR [rbx],bpl
  42a665:	mov    BYTE PTR [rbx+0x1],bpl
  42a669:	mov    BYTE PTR [rbx+0x2],bpl
  42a66d:	mov    BYTE PTR [rbx+0x3],bpl
  42a671:	mov    DWORD PTR [rbx+0x4],ebp
  42a674:	mov    DWORD PTR [rbx+0x8],ebp
  42a677:	mov    DWORD PTR [rbx+0xc],0xffffffff
  42a67e:	mov    QWORD PTR [rbx+0x10],rbp
  42a682:	lea    rcx,[rbx+0x18]
  42a686:	call   0x403150
  42a68b:	nop
  42a68c:	lea    rcx,[rbx+0x28]
  42a690:	call   0x403150
  42a695:	nop
  42a696:	lea    rbx,[rdi+0x58]
  42a69a:	mov    QWORD PTR [rsp+0x58],rbx
  42a69f:	mov    BYTE PTR [rbx],bpl
  42a6a2:	mov    BYTE PTR [rbx+0x1],bpl
  42a6a6:	mov    BYTE PTR [rbx+0x2],bpl
  42a6aa:	mov    BYTE PTR [rbx+0x3],bpl
  42a6ae:	mov    DWORD PTR [rbx+0x4],ebp
  42a6b1:	mov    DWORD PTR [rbx+0x8],ebp
  42a6b4:	mov    DWORD PTR [rbx+0xc],0xffffffff
  42a6bb:	mov    QWORD PTR [rbx+0x10],rbp
  42a6bf:	lea    rcx,[rbx+0x18]
  42a6c3:	call   0x403150
  42a6c8:	nop
  42a6c9:	lea    rcx,[rbx+0x28]
  42a6cd:	call   0x403150
  42a6d2:	nop
  42a6d3:	lea    rcx,[rdi+0x90]
  42a6da:	call   0x403150
  42a6df:	nop
  42a6e0:	lea    rcx,[rdi+0xa0]
  42a6e7:	call   0x403150
  42a6ec:	nop
  42a6ed:	lea    rcx,[rdi+0xb0]
  42a6f4:	call   0x403150
  42a6f9:	mov    BYTE PTR [rdi+0xd0],bpl
  42a700:	mov    BYTE PTR [rdi+0x109],bpl
  42a707:	mov    BYTE PTR [rdi+0x10a],bpl
  42a70e:	mov    BYTE PTR [rdi+0x10b],bpl
  42a715:	mov    BYTE PTR [rdi+0x10c],bpl
  42a71c:	mov    BYTE PTR [rdi+0x10d],bpl
  42a723:	mov    BYTE PTR [rdi+0x10e],bpl
  42a72a:	mov    BYTE PTR [rdi+0x10f],bpl
  42a731:	mov    rax,rdi
  42a734:	add    rsp,0x30
  42a738:	pop    rdi
  42a739:	pop    rbp
  42a73a:	pop    rbx
  42a73b:	ret    
  42a73c:	int3   
  42a73d:	int3   
  42a73e:	int3   
  42a73f:	int3   
  42a740:	rex.W push rbp
  42a742:	sub    rsp,0x20
  42a746:	mov    rbp,rdx
  42a749:	mov    rcx,QWORD PTR [rbp+0x50]
  42a74d:	call   0x4176b4
  42a752:	add    rsp,0x20
  42a756:	pop    rbp
  42a757:	ret    
  42a758:	int3   
  42a759:	int3   
  42a75a:	int3   
  42a75b:	int3   
  42a75c:	int3   
  42a75d:	int3   
  42a75e:	int3   
  42a75f:	int3   
  42a760:	rex.W push rbp
  42a762:	sub    rsp,0x20
  42a766:	mov    rbp,rdx
  42a769:	mov    rcx,QWORD PTR [rbp+0x50]
  42a76d:	add    rcx,0x8
  42a771:	call   0x4176b4
  42a776:	add    rsp,0x20
  42a77a:	pop    rbp
  42a77b:	ret    
  42a77c:	int3   
  42a77d:	int3   
  42a77e:	int3   
  42a77f:	int3   
  42a780:	rex.W push rbp
  42a782:	sub    rsp,0x20
  42a786:	mov    rbp,rdx
  42a789:	mov    rcx,QWORD PTR [rbp+0x50]
  42a78d:	add    rcx,0x10
  42a791:	call   0x4176b4
  42a796:	add    rsp,0x20
  42a79a:	pop    rbp
  42a79b:	ret    
  42a79c:	int3   
  42a79d:	int3   
  42a79e:	int3   
  42a79f:	int3   
  42a7a0:	rex.W push rbp
  42a7a2:	sub    rsp,0x20
  42a7a6:	mov    rbp,rdx
  42a7a9:	mov    rcx,QWORD PTR [rbp+0x50]
  42a7ad:	add    rcx,0x18
  42a7b1:	call   0x4176b4
  42a7b6:	add    rsp,0x20
  42a7ba:	pop    rbp
  42a7bb:	ret    
  42a7bc:	int3   
  42a7bd:	int3   
  42a7be:	int3   
  42a7bf:	int3   
  42a7c0:	rex.W push rbp
  42a7c2:	sub    rsp,0x20
  42a7c6:	mov    rbp,rdx
  42a7c9:	mov    rcx,QWORD PTR [rbp+0x58]
  42a7cd:	add    rcx,0x18
  42a7d1:	call   0x401000
  42a7d6:	add    rsp,0x20
  42a7da:	pop    rbp
  42a7db:	ret    
  42a7dc:	int3   
  42a7dd:	int3   
  42a7de:	int3   
  42a7df:	int3   
  42a7e0:	rex.W push rbp
  42a7e2:	sub    rsp,0x20
  42a7e6:	mov    rbp,rdx
  42a7e9:	mov    rcx,QWORD PTR [rbp+0x50]
  42a7ed:	add    rcx,0x20
  42a7f1:	call   0x422a2c
  42a7f6:	add    rsp,0x20
  42a7fa:	pop    rbp
  42a7fb:	ret    
  42a7fc:	int3   
  42a7fd:	int3   
  42a7fe:	int3   
  42a7ff:	int3   
  42a800:	rex.W push rbp
  42a802:	sub    rsp,0x20
  42a806:	mov    rbp,rdx
  42a809:	mov    rcx,QWORD PTR [rbp+0x58]
  42a80d:	add    rcx,0x18
  42a811:	call   0x401000
  42a816:	add    rsp,0x20
  42a81a:	pop    rbp
  42a81b:	ret    
  42a81c:	int3   
  42a81d:	int3   
  42a81e:	int3   
  42a81f:	int3   
  42a820:	rex.W push rbp
  42a822:	sub    rsp,0x20
  42a826:	mov    rbp,rdx
  42a829:	mov    rcx,QWORD PTR [rbp+0x50]
  42a82d:	add    rcx,0x58
  42a831:	call   0x422a2c
  42a836:	add    rsp,0x20
  42a83a:	pop    rbp
  42a83b:	ret    
  42a83c:	int3   
  42a83d:	int3   
  42a83e:	int3   
  42a83f:	int3   
  42a840:	rex.W push rbp
  42a842:	sub    rsp,0x20
  42a846:	mov    rbp,rdx
  42a849:	mov    rcx,QWORD PTR [rbp+0x50]
  42a84d:	add    rcx,0x90
  42a854:	call   0x401000
  42a859:	add    rsp,0x20
  42a85d:	pop    rbp
  42a85e:	ret    
  42a85f:	int3   
  42a860:	rex.W push rbp
  42a862:	sub    rsp,0x20
  42a866:	mov    rbp,rdx
  42a869:	mov    rcx,QWORD PTR [rbp+0x50]
  42a86d:	add    rcx,0xa0
  42a874:	call   0x401000
  42a879:	add    rsp,0x20
  42a87d:	pop    rbp
  42a87e:	ret    
  42a87f:	int3   
  42a880:	rex.W push rbx
  42a882:	push   rdi
  42a883:	sub    rsp,0x38
  42a887:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a890:	mov    rdi,rdx
  42a893:	mov    rbx,rcx
  42a896:	mov    rax,QWORD PTR [rcx]
  42a899:	call   QWORD PTR [rax+0x20]
  42a89c:	test   rdi,rdi
  42a89f:	je     0x42a8aa
  42a8a1:	mov    rax,QWORD PTR [rdi]
  42a8a4:	mov    rcx,rdi
  42a8a7:	call   QWORD PTR [rax+0x8]
  42a8aa:	mov    rcx,QWORD PTR [rbx+0x30]
  42a8ae:	test   rcx,rcx
  42a8b1:	je     0x42a8b9
  42a8b3:	mov    rax,QWORD PTR [rcx]
  42a8b6:	call   QWORD PTR [rax+0x10]
  42a8b9:	mov    QWORD PTR [rbx+0x30],rdi
  42a8bd:	xor    eax,eax
  42a8bf:	jmp    0x42a8c6
  42a8c1:	mov    eax,0x8007000e
  42a8c6:	add    rsp,0x38
  42a8ca:	pop    rdi
  42a8cb:	pop    rbx
  42a8cc:	ret    
  42a8cd:	int3   
  42a8ce:	int3   
  42a8cf:	int3   
  42a8d0:	mov    QWORD PTR [rsp+0x10],rdx
  42a8d5:	push   rbp
  42a8d6:	sub    rsp,0x20
  42a8da:	mov    rbp,rdx
  42a8dd:	lea    rax,[rip+0xffffffffffffffdd]        # 0x42a8c1
  42a8e4:	jmp    0x42a8e6
  42a8e6:	add    rsp,0x20
  42a8ea:	pop    rbp
  42a8eb:	ret    
  42a8ec:	int3   
  42a8ed:	int3   
  42a8ee:	int3   
  42a8ef:	int3   
  42a8f0:	rex.W push rbx
  42a8f2:	push   rsi
  42a8f3:	push   rdi
  42a8f4:	sub    rsp,0x20
  42a8f8:	mov    rsi,rdx
  42a8fb:	mov    rdi,r8
  42a8fe:	mov    rbx,rcx
  42a901:	mov    QWORD PTR [r8],0x0
  42a908:	lea    rdx,[rip+0x2a4e1]        # 0x454df0
  42a90f:	mov    rcx,rsi
  42a912:	mov    r8d,0x10
  42a918:	call   0x44b786
  42a91d:	test   eax,eax
  42a91f:	je     0x42a93a
  42a921:	lea    rdx,[rip+0x29600]        # 0x453f28
  42a928:	mov    r8d,0x10
  42a92e:	mov    rcx,rsi
  42a931:	call   0x44b786
  42a936:	test   eax,eax
  42a938:	jne    0x42a944
  42a93a:	mov    QWORD PTR [rdi],rbx
  42a93d:	inc    DWORD PTR [rbx+0x8]
  42a940:	xor    eax,eax
  42a942:	jmp    0x42a949
  42a944:	mov    eax,0x80004002
  42a949:	add    rsp,0x20
  42a94d:	pop    rdi
  42a94e:	pop    rsi
  42a94f:	pop    rbx
  42a950:	ret    
  42a951:	int3   
  42a952:	int3   
  42a953:	int3   
  42a954:	rex.W push rbx
  42a956:	push   rsi
  42a957:	push   rdi
  42a958:	sub    rsp,0x20
  42a95c:	mov    rsi,rdx
  42a95f:	mov    rdi,r8
  42a962:	mov    rbx,rcx
  42a965:	mov    QWORD PTR [r8],0x0
  42a96c:	lea    rdx,[rip+0x2a47d]        # 0x454df0
  42a973:	mov    rcx,rsi
  42a976:	mov    r8d,0x10
  42a97c:	call   0x44b786
  42a981:	test   eax,eax
  42a983:	je     0x42a99e
  42a985:	lea    rdx,[rip+0x2958c]        # 0x453f18
  42a98c:	mov    r8d,0x10
  42a992:	mov    rcx,rsi
  42a995:	call   0x44b786
  42a99a:	test   eax,eax
  42a99c:	jne    0x42a9a8
  42a99e:	mov    QWORD PTR [rdi],rbx
  42a9a1:	inc    DWORD PTR [rbx+0x8]
  42a9a4:	xor    eax,eax
  42a9a6:	jmp    0x42a9ad
  42a9a8:	mov    eax,0x80004002
  42a9ad:	add    rsp,0x20
  42a9b1:	pop    rdi
  42a9b2:	pop    rsi
  42a9b3:	pop    rbx
  42a9b4:	ret    
  42a9b5:	int3   
  42a9b6:	int3   
  42a9b7:	int3   
  42a9b8:	rex.W push rbx
  42a9ba:	push   rsi
  42a9bb:	push   rdi
  42a9bc:	sub    rsp,0x40
  42a9c0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42a9c9:	mov    rbx,r8
  42a9cc:	mov    esi,edx
  42a9ce:	mov    rdi,rcx
  42a9d1:	mov    DWORD PTR [r8+0x8],0x0
  42a9d9:	mov    rax,QWORD PTR [r8]
  42a9dc:	mov    WORD PTR [rax],0x0
  42a9e1:	lea    r9,[rsp+0x60]
  42a9e6:	mov    r8d,0x6
  42a9ec:	mov    rcx,QWORD PTR [rcx]
  42a9ef:	call   0x429798
  42a9f4:	test   eax,eax
  42a9f6:	jne    0x42aab0
  42a9fc:	cmp    BYTE PTR [rsp+0x60],0x0
  42aa01:	jne    0x42aaae
  42aa07:	lea    rdx,[rdi+0xb0]
  42aa0e:	mov    rcx,rbx
  42aa11:	call   0x4032f8
  42aa16:	mov    WORD PTR [rsp+0x28],0x0
  42aa1d:	mov    WORD PTR [rsp+0x2a],0x0
  42aa24:	mov    QWORD PTR [rsp+0x30],0x0
  42aa2d:	mov    rcx,QWORD PTR [rdi]
  42aa30:	mov    rax,QWORD PTR [rcx]
  42aa33:	lea    r9,[rsp+0x28]
  42aa38:	mov    r8d,0x5
  42aa3e:	mov    edx,esi
  42aa40:	call   QWORD PTR [rax+0x30]
  42aa43:	mov    edi,eax
  42aa45:	test   eax,eax
  42aa47:	je     0x42aa4b
  42aa49:	jmp    0x42aa96
  42aa4b:	movzx  eax,WORD PTR [rsp+0x28]
  42aa50:	cmp    ax,0x8
  42aa54:	jne    0x42aa8c
  42aa56:	mov    eax,DWORD PTR [rbx+0x8]
  42aa59:	cmp    DWORD PTR [rbx+0xc],eax
  42aa5c:	jne    0x42aa66
  42aa5e:	mov    rcx,rbx
  42aa61:	call   0x402f2c
  42aa66:	mov    edx,DWORD PTR [rbx+0x8]
  42aa69:	mov    rcx,QWORD PTR [rbx]
  42aa6c:	mov    WORD PTR [rcx+rdx*2],0x2e
  42aa72:	inc    edx
  42aa74:	mov    WORD PTR [rcx+rdx*2],0x0
  42aa7a:	mov    DWORD PTR [rbx+0x8],edx
  42aa7d:	mov    rdx,QWORD PTR [rsp+0x30]
  42aa82:	mov    rcx,rbx
  42aa85:	call   0x4033f0
  42aa8a:	jmp    0x42aaa4
  42aa8c:	test   ax,ax
  42aa8f:	je     0x42aaa4
  42aa91:	mov    edi,0x80004005
  42aa96:	lea    rcx,[rsp+0x28]
  42aa9b:	call   0x40b028
  42aaa0:	mov    eax,edi
  42aaa2:	jmp    0x42aab0
  42aaa4:	lea    rcx,[rsp+0x28]
  42aaa9:	call   0x40b028
  42aaae:	xor    eax,eax
  42aab0:	add    rsp,0x40
  42aab4:	pop    rdi
  42aab5:	pop    rsi
  42aab6:	pop    rbx
  42aab7:	ret    
  42aab8:	rex.W push rbp
  42aaba:	sub    rsp,0x20
  42aabe:	mov    rbp,rdx
  42aac1:	lea    rcx,[rbp+0x28]
  42aac5:	call   0x40b830
  42aaca:	add    rsp,0x20
  42aace:	pop    rbp
  42aacf:	ret    
  42aad0:	rex.W push rbx
  42aad2:	push   rsi
  42aad3:	push   rdi
  42aad4:	sub    rsp,0x40
  42aad8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42aae1:	mov    rsi,r9
  42aae4:	mov    rbx,r8
  42aae7:	mov    WORD PTR [rsp+0x28],0x0
  42aaee:	mov    WORD PTR [rsp+0x2a],0x0
  42aaf5:	mov    QWORD PTR [rsp+0x30],0x0
  42aafe:	mov    BYTE PTR [r9],0x0
  42ab02:	mov    QWORD PTR [r8],0x0
  42ab09:	mov    rcx,QWORD PTR [rcx]
  42ab0c:	mov    rax,QWORD PTR [rcx]
  42ab0f:	lea    r9,[rsp+0x28]
  42ab14:	mov    r8d,0x7
  42ab1a:	call   QWORD PTR [rax+0x30]
  42ab1d:	mov    edi,eax
  42ab1f:	test   eax,eax
  42ab21:	je     0x42ab25
  42ab23:	jmp    0x42ab45
  42ab25:	movzx  ecx,WORD PTR [rsp+0x28]
  42ab2a:	test   ecx,ecx
  42ab2c:	je     0x42ab89
  42ab2e:	sub    ecx,0x11
  42ab31:	je     0x42ab70
  42ab33:	dec    ecx
  42ab35:	je     0x42ab66
  42ab37:	dec    ecx
  42ab39:	je     0x42ab5d
  42ab3b:	cmp    ecx,0x2
  42ab3e:	je     0x42ab53
  42ab40:	mov    edi,0x80004005
  42ab45:	lea    rcx,[rsp+0x28]
  42ab4a:	call   0x40b028
  42ab4f:	mov    eax,edi
  42ab51:	jmp    0x42ab95
  42ab53:	mov    rax,QWORD PTR [rsp+0x30]
  42ab58:	mov    QWORD PTR [rbx],rax
  42ab5b:	jmp    0x42ab78
  42ab5d:	mov    eax,DWORD PTR [rsp+0x30]
  42ab61:	mov    QWORD PTR [rbx],rax
  42ab64:	jmp    0x42ab78
  42ab66:	movzx  eax,WORD PTR [rsp+0x30]
  42ab6b:	mov    QWORD PTR [rbx],rax
  42ab6e:	jmp    0x42ab78
  42ab70:	movzx  eax,BYTE PTR [rsp+0x30]
  42ab75:	mov    QWORD PTR [rbx],rax
  42ab78:	mov    BYTE PTR [rsi],0x1
  42ab7b:	lea    rcx,[rsp+0x28]
  42ab80:	call   0x40b028
  42ab85:	xor    eax,eax
  42ab87:	jmp    0x42ab95
  42ab89:	lea    rcx,[rsp+0x28]
  42ab8e:	call   0x40b028
  42ab93:	xor    eax,eax
  42ab95:	add    rsp,0x40
  42ab99:	pop    rdi
  42ab9a:	pop    rsi
  42ab9b:	pop    rbx
  42ab9c:	ret    
  42ab9d:	int3   
  42ab9e:	int3   
  42ab9f:	int3   
  42aba0:	rex.W push rbp
  42aba2:	sub    rsp,0x20
  42aba6:	mov    rbp,rdx
  42aba9:	lea    rcx,[rbp+0x28]
  42abad:	call   0x40b830
  42abb2:	add    rsp,0x20
  42abb6:	pop    rbp
  42abb7:	ret    
  42abb8:	rex.W push rbx
  42abba:	push   rbp
  42abbb:	push   rsi
  42abbc:	push   rdi
  42abbd:	sub    rsp,0x48
  42abc1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42abca:	mov    rbp,r9
  42abcd:	mov    rsi,r8
  42abd0:	mov    rdi,rcx
  42abd3:	mov    WORD PTR [rsp+0x28],0x0
  42abda:	mov    WORD PTR [rsp+0x2a],0x0
  42abe1:	mov    QWORD PTR [rsp+0x30],0x0
  42abea:	mov    BYTE PTR [r9],0x0
  42abee:	mov    DWORD PTR [r8],0x0
  42abf5:	mov    DWORD PTR [r8+0x4],0x0
  42abfd:	mov    rcx,QWORD PTR [rcx]
  42ac00:	mov    rax,QWORD PTR [rcx]
  42ac03:	lea    r9,[rsp+0x28]
  42ac08:	mov    r8d,0xc
  42ac0e:	call   QWORD PTR [rax+0x30]
  42ac11:	mov    ebx,eax
  42ac13:	test   eax,eax
  42ac15:	je     0x42ac19
  42ac17:	jmp    0x42ac57
  42ac19:	movzx  eax,WORD PTR [rsp+0x28]
  42ac1e:	cmp    ax,0x40
  42ac22:	jne    0x42ac32
  42ac24:	mov    rax,QWORD PTR [rsp+0x30]
  42ac29:	mov    QWORD PTR [rsi],rax
  42ac2c:	mov    BYTE PTR [rbp+0x0],0x1
  42ac30:	jmp    0x42ac55
  42ac32:	test   ax,ax
  42ac35:	je     0x42ac3e
  42ac37:	mov    ebx,0x80004005
  42ac3c:	jmp    0x42ac57
  42ac3e:	cmp    BYTE PTR [rdi+0xd0],0x0
  42ac45:	je     0x42ac55
  42ac47:	mov    rax,QWORD PTR [rdi+0xc8]
  42ac4e:	mov    QWORD PTR [rsi],rax
  42ac51:	mov    BYTE PTR [rbp+0x0],0x1
  42ac55:	xor    ebx,ebx
  42ac57:	lea    rcx,[rsp+0x28]
  42ac5c:	call   0x40b028
  42ac61:	mov    eax,ebx
  42ac63:	add    rsp,0x48
  42ac67:	pop    rdi
  42ac68:	pop    rsi
  42ac69:	pop    rbp
  42ac6a:	pop    rbx
  42ac6b:	ret    
  42ac6c:	int3   
  42ac6d:	int3   
  42ac6e:	int3   
  42ac6f:	int3   
  42ac70:	int3   
  42ac71:	int3   
  42ac72:	int3   
  42ac73:	int3   
  42ac74:	int3   
  42ac75:	int3   
  42ac76:	int3   
  42ac77:	int3   
  42ac78:	rex.W push rbp
  42ac7a:	sub    rsp,0x20
  42ac7e:	mov    rbp,rdx
  42ac81:	lea    rcx,[rbp+0x28]
  42ac85:	call   0x40b830
  42ac8a:	add    rsp,0x20
  42ac8e:	pop    rbp
  42ac8f:	ret    
  42ac90:	sub    rsp,0x38
  42ac94:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42ac9d:	mov    rcx,QWORD PTR [rcx+0x30]
  42aca1:	test   rcx,rcx
  42aca4:	je     0x42acae
  42aca6:	mov    rax,QWORD PTR [rcx]
  42aca9:	call   QWORD PTR [rax+0x18]
  42acac:	jmp    0x42acba
  42acae:	mov    eax,0x80004001
  42acb3:	jmp    0x42acba
  42acb5:	mov    eax,0x8007000e
  42acba:	add    rsp,0x38
  42acbe:	ret    
  42acbf:	int3   
  42acc0:	mov    QWORD PTR [rsp+0x10],rdx
  42acc5:	push   rbp
  42acc6:	sub    rsp,0x20
  42acca:	mov    rbp,rdx
  42accd:	lea    rax,[rip+0xffffffffffffffe1]        # 0x42acb5
  42acd4:	jmp    0x42acd6
  42acd6:	add    rsp,0x20
  42acda:	pop    rbp
  42acdb:	ret    
  42acdc:	int3   
  42acdd:	int3   
  42acde:	int3   
  42acdf:	int3   
  42ace0:	sub    rsp,0x28
  42ace4:	mov    r9,QWORD PTR [rcx+0x20]
  42ace8:	test   r9,r9
  42aceb:	jne    0x42acf1
  42aced:	xor    eax,eax
  42acef:	jmp    0x42ad19
  42acf1:	test   r8,r8
  42acf4:	mov    rax,QWORD PTR [rcx+0x38]
  42acf8:	mov    QWORD PTR [rsp+0x30],rax
  42acfd:	je     0x42ad07
  42acff:	add    rax,QWORD PTR [r8]
  42ad02:	mov    QWORD PTR [rsp+0x30],rax
  42ad07:	mov    rax,QWORD PTR [r9]
  42ad0a:	lea    rdx,[rcx+0x30]
  42ad0e:	lea    r8,[rsp+0x30]
  42ad13:	mov    rcx,r9
  42ad16:	call   QWORD PTR [rax+0x20]
  42ad19:	add    rsp,0x28
  42ad1d:	ret    
  42ad1e:	int3   
  42ad1f:	int3   
  42ad20:	sub    rsp,0x28
  42ad24:	mov    rcx,QWORD PTR [rcx+0x20]
  42ad28:	test   rcx,rcx
  42ad2b:	je     0x42ad35
  42ad2d:	mov    rax,QWORD PTR [rcx]
  42ad30:	call   QWORD PTR [rax+0x18]
  42ad33:	jmp    0x42ad3f
  42ad35:	mov    rcx,r8
  42ad38:	call   0x40afcc
  42ad3d:	xor    eax,eax
  42ad3f:	add    rsp,0x28
  42ad43:	ret    
  42ad44:	sub    rsp,0x28
  42ad48:	mov    rcx,QWORD PTR [rcx+0x20]
  42ad4c:	test   rcx,rcx
  42ad4f:	je     0x42ad59
  42ad51:	mov    rax,QWORD PTR [rcx]
  42ad54:	call   QWORD PTR [rax+0x20]
  42ad57:	jmp    0x42ad5e
  42ad59:	mov    eax,0x1
  42ad5e:	add    rsp,0x28
  42ad62:	ret    
  42ad63:	int3   
  42ad64:	sub    rsp,0x28
  42ad68:	mov    r9,QWORD PTR [rcx+0x10]
  42ad6c:	test   r9,r9
  42ad6f:	je     0x42ad9b
  42ad71:	test   rdx,rdx
  42ad74:	mov    rax,QWORD PTR [rcx+0x20]
  42ad78:	mov    QWORD PTR [rsp+0x30],rax
  42ad7d:	je     0x42ad87
  42ad7f:	add    rax,QWORD PTR [rdx]
  42ad82:	mov    QWORD PTR [rsp+0x30],rax
  42ad87:	mov    rax,QWORD PTR [r9]
  42ad8a:	lea    rdx,[rcx+0x18]
  42ad8e:	lea    r8,[rsp+0x30]
  42ad93:	mov    rcx,r9
  42ad96:	call   QWORD PTR [rax+0x20]
  42ad99:	jmp    0x42ad9d
  42ad9b:	xor    eax,eax
  42ad9d:	add    rsp,0x28
  42ada1:	ret    
  42ada2:	int3   
  42ada3:	int3   
  42ada4:	rex.W push rbx
  42ada6:	push   rbp
  42ada7:	push   rsi
  42ada8:	push   rdi
  42ada9:	sub    rsp,0x28
  42adad:	mov    rsi,rdx
  42adb0:	mov    rdi,r8
  42adb3:	mov    rbx,rcx
  42adb6:	mov    QWORD PTR [r8],0x0
  42adbd:	mov    ebp,0x10
  42adc2:	lea    rdx,[rip+0x2a027]        # 0x454df0
  42adc9:	mov    r8,rbp
  42adcc:	mov    rcx,rsi
  42adcf:	call   0x44b786
  42add4:	test   eax,eax
  42add6:	jne    0x42addd
  42add8:	mov    QWORD PTR [rdi],rbx
  42addb:	jmp    0x42ae38
  42addd:	lea    rdx,[rip+0x290d4]        # 0x453eb8
  42ade4:	mov    r8,rbp
  42ade7:	mov    rcx,rsi
  42adea:	call   0x44b786
  42adef:	test   eax,eax
  42adf1:	je     0x42add8
  42adf3:	lea    rdx,[rip+0x2908e]        # 0x453e88
  42adfa:	mov    r8,rbp
  42adfd:	mov    rcx,rsi
  42ae00:	call   0x44b786
  42ae05:	test   eax,eax
  42ae07:	jne    0x42ae0f
  42ae09:	lea    rdx,[rbx+0x8]
  42ae0d:	jmp    0x42ae29
  42ae0f:	lea    rdx,[rip+0x28fb2]        # 0x453dc8
  42ae16:	mov    r8,rbp
  42ae19:	mov    rcx,rsi
  42ae1c:	call   0x44b786
  42ae21:	test   eax,eax
  42ae23:	jne    0x42ae3f
  42ae25:	lea    rdx,[rbx+0x10]
  42ae29:	mov    rax,rbx
  42ae2c:	neg    rax
  42ae2f:	sbb    rcx,rcx
  42ae32:	and    rcx,rdx
  42ae35:	mov    QWORD PTR [rdi],rcx
  42ae38:	inc    DWORD PTR [rbx+0x18]
  42ae3b:	xor    eax,eax
  42ae3d:	jmp    0x42ae44
  42ae3f:	mov    eax,0x80004002
  42ae44:	add    rsp,0x28
  42ae48:	pop    rdi
  42ae49:	pop    rsi
  42ae4a:	pop    rbp
  42ae4b:	pop    rbx
  42ae4c:	ret    
  42ae4d:	int3   
  42ae4e:	int3   
  42ae4f:	int3   
  42ae50:	sub    rcx,0x8
  42ae54:	jmp    0x42ada4
  42ae59:	int3   
  42ae5a:	int3   
  42ae5b:	int3   
  42ae5c:	sub    rcx,0x8
  42ae60:	jmp    0x419018
  42ae65:	int3   
  42ae66:	int3   
  42ae67:	int3   
  42ae68:	sub    rcx,0x10
  42ae6c:	jmp    0x42ada4
  42ae71:	int3   
  42ae72:	int3   
  42ae73:	int3   
  42ae74:	sub    rcx,0x10
  42ae78:	jmp    0x419018
  42ae7d:	int3   
  42ae7e:	int3   
  42ae7f:	int3   
  42ae80:	rex.W push rbx
  42ae82:	push   rbp
  42ae83:	push   rsi
  42ae84:	push   rdi
  42ae85:	sub    rsp,0x28
  42ae89:	movsxd rbx,DWORD PTR [rcx+0x8]
  42ae8d:	mov    rdi,rcx
  42ae90:	test   ebx,ebx
  42ae92:	mov    rsi,rbx
  42ae95:	je     0x42aede
  42ae97:	shl    rsi,0x3
  42ae9b:	mov    rax,QWORD PTR [rdi]
  42ae9e:	sub    rsi,0x8
  42aea2:	add    ebx,0xffffffff
  42aea5:	mov    rbp,QWORD PTR [rsi+rax*1]
  42aea9:	test   rbp,rbp
  42aeac:	je     0x42aeda
  42aeae:	mov    rcx,QWORD PTR [rbp+0x48]
  42aeb2:	call   0x40215c
  42aeb7:	mov    rcx,QWORD PTR [rbp+0x38]
  42aebb:	call   0x40215c
  42aec0:	mov    rcx,QWORD PTR [rbp+0x20]
  42aec4:	call   0x40215c
  42aec9:	mov    rcx,QWORD PTR [rbp+0x10]
  42aecd:	call   0x40215c
  42aed2:	mov    rcx,rbp
  42aed5:	call   0x40215c
  42aeda:	test   ebx,ebx
  42aedc:	jne    0x42ae9b
  42aede:	mov    rcx,QWORD PTR [rdi]
  42aee1:	add    rsp,0x28
  42aee5:	pop    rdi
  42aee6:	pop    rsi
  42aee7:	pop    rbp
  42aee8:	pop    rbx
  42aee9:	jmp    0x40215c
  42aeee:	int3   
  42aeef:	int3   
  42aef0:	rex.W push rbx
  42aef2:	push   rbp
  42aef3:	push   rsi
  42aef4:	push   rdi
  42aef5:	sub    rsp,0x28
  42aef9:	movsxd rbx,DWORD PTR [rcx+0x8]
  42aefd:	mov    rdi,rcx
  42af00:	test   ebx,ebx
  42af02:	mov    rsi,rbx
  42af05:	je     0x42af4e
  42af07:	shl    rsi,0x3
  42af0b:	mov    rax,QWORD PTR [rdi]
  42af0e:	sub    rsi,0x8
  42af12:	add    ebx,0xffffffff
  42af15:	mov    rbp,QWORD PTR [rsi+rax*1]
  42af19:	test   rbp,rbp
  42af1c:	je     0x42af4a
  42af1e:	mov    rcx,QWORD PTR [rbp+0x48]
  42af22:	call   0x40215c
  42af27:	mov    rcx,QWORD PTR [rbp+0x38]
  42af2b:	call   0x40215c
  42af30:	mov    rcx,QWORD PTR [rbp+0x20]
  42af34:	call   0x40215c
  42af39:	mov    rcx,QWORD PTR [rbp+0x10]
  42af3d:	call   0x40215c
  42af42:	mov    rcx,rbp
  42af45:	call   0x40215c
  42af4a:	test   ebx,ebx
  42af4c:	jne    0x42af0b
  42af4e:	mov    DWORD PTR [rdi+0x8],0x0
  42af55:	add    rsp,0x28
  42af59:	pop    rdi
  42af5a:	pop    rsi
  42af5b:	pop    rbp
  42af5c:	pop    rbx
  42af5d:	ret    
  42af5e:	int3   
  42af5f:	int3   
  42af60:	mov    QWORD PTR [rsp+0x8],rcx
  42af65:	push   rbx
  42af66:	push   rdi
  42af67:	sub    rsp,0x38
  42af6b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42af74:	mov    rdi,rdx
  42af77:	mov    rbx,rcx
  42af7a:	mov    rcx,QWORD PTR [rdx]
  42af7d:	mov    QWORD PTR [rbx],rcx
  42af80:	test   rcx,rcx
  42af83:	je     0x42af8c
  42af85:	mov    rax,QWORD PTR [rcx]
  42af88:	call   QWORD PTR [rax+0x8]
  42af8b:	nop
  42af8c:	mov    rcx,QWORD PTR [rdi+0x8]
  42af90:	mov    QWORD PTR [rbx+0x8],rcx
  42af94:	test   rcx,rcx
  42af97:	je     0x42afa0
  42af99:	mov    rax,QWORD PTR [rcx]
  42af9c:	call   QWORD PTR [rax+0x8]
  42af9f:	nop
  42afa0:	mov    rcx,QWORD PTR [rdi+0x10]
  42afa4:	mov    QWORD PTR [rbx+0x10],rcx
  42afa8:	test   rcx,rcx
  42afab:	je     0x42afb4
  42afad:	mov    rax,QWORD PTR [rcx]
  42afb0:	call   QWORD PTR [rax+0x8]
  42afb3:	nop
  42afb4:	mov    rcx,QWORD PTR [rdi+0x18]
  42afb8:	mov    QWORD PTR [rbx+0x18],rcx
  42afbc:	test   rcx,rcx
  42afbf:	je     0x42afc8
  42afc1:	mov    rax,QWORD PTR [rcx]
  42afc4:	call   QWORD PTR [rax+0x8]
  42afc7:	nop
  42afc8:	lea    rdx,[rdi+0x20]
  42afcc:	lea    rcx,[rbx+0x20]
  42afd0:	call   0x42a490
  42afd5:	nop
  42afd6:	lea    rdx,[rdi+0x58]
  42afda:	lea    rcx,[rbx+0x58]
  42afde:	call   0x42a490
  42afe3:	nop
  42afe4:	lea    rdx,[rdi+0x90]
  42afeb:	lea    rcx,[rbx+0x90]
  42aff2:	call   0x403208
  42aff7:	nop
  42aff8:	lea    rdx,[rdi+0xa0]
  42afff:	lea    rcx,[rbx+0xa0]
  42b006:	call   0x403208
  42b00b:	nop
  42b00c:	lea    rdx,[rdi+0xb0]
  42b013:	lea    rcx,[rbx+0xb0]
  42b01a:	call   0x403208
  42b01f:	mov    r11d,DWORD PTR [rdi+0xc0]
  42b026:	mov    DWORD PTR [rbx+0xc0],r11d
  42b02d:	mov    eax,DWORD PTR [rdi+0xc4]
  42b033:	mov    DWORD PTR [rbx+0xc4],eax
  42b039:	mov    rax,QWORD PTR [rdi+0xc8]
  42b040:	mov    QWORD PTR [rbx+0xc8],rax
  42b047:	mov    al,BYTE PTR [rdi+0xd0]
  42b04d:	mov    BYTE PTR [rbx+0xd0],al
  42b053:	mov    rax,QWORD PTR [rdi+0xd8]
  42b05a:	mov    QWORD PTR [rbx+0xd8],rax
  42b061:	mov    rax,QWORD PTR [rdi+0xe0]
  42b068:	mov    QWORD PTR [rbx+0xe0],rax
  42b06f:	mov    al,BYTE PTR [rdi+0xe8]
  42b075:	mov    BYTE PTR [rbx+0xe8],al
  42b07b:	mov    rax,QWORD PTR [rdi+0xf0]
  42b082:	mov    QWORD PTR [rbx+0xf0],rax
  42b089:	mov    rax,QWORD PTR [rdi+0xf8]
  42b090:	mov    QWORD PTR [rbx+0xf8],rax
  42b097:	mov    rax,QWORD PTR [rdi+0x100]
  42b09e:	mov    QWORD PTR [rbx+0x100],rax
  42b0a5:	mov    al,BYTE PTR [rdi+0x108]
  42b0ab:	mov    BYTE PTR [rbx+0x108],al
  42b0b1:	mov    al,BYTE PTR [rdi+0x109]
  42b0b7:	mov    BYTE PTR [rbx+0x109],al
  42b0bd:	mov    al,BYTE PTR [rdi+0x10a]
  42b0c3:	mov    BYTE PTR [rbx+0x10a],al
  42b0c9:	mov    al,BYTE PTR [rdi+0x10b]
  42b0cf:	mov    BYTE PTR [rbx+0x10b],al
  42b0d5:	mov    al,BYTE PTR [rdi+0x10c]
  42b0db:	mov    BYTE PTR [rbx+0x10c],al
  42b0e1:	mov    al,BYTE PTR [rdi+0x10d]
  42b0e7:	mov    BYTE PTR [rbx+0x10d],al
  42b0ed:	mov    al,BYTE PTR [rdi+0x10e]
  42b0f3:	mov    BYTE PTR [rbx+0x10e],al
  42b0f9:	mov    al,BYTE PTR [rdi+0x10f]
  42b0ff:	mov    BYTE PTR [rbx+0x10f],al
  42b105:	mov    rax,rbx
  42b108:	add    rsp,0x38
  42b10c:	pop    rdi
  42b10d:	pop    rbx
  42b10e:	ret    
  42b10f:	int3   
  42b110:	rex.W push rbp
  42b112:	sub    rsp,0x20
  42b116:	mov    rbp,rdx
  42b119:	mov    rcx,QWORD PTR [rbp+0x50]
  42b11d:	call   0x4176b4
  42b122:	add    rsp,0x20
  42b126:	pop    rbp
  42b127:	ret    
  42b128:	int3   
  42b129:	int3   
  42b12a:	int3   
  42b12b:	int3   
  42b12c:	int3   
  42b12d:	int3   
  42b12e:	int3   
  42b12f:	int3   
  42b130:	rex.W push rbp
  42b132:	sub    rsp,0x20
  42b136:	mov    rbp,rdx
  42b139:	mov    rcx,QWORD PTR [rbp+0x50]
  42b13d:	add    rcx,0x8
  42b141:	call   0x4176b4
  42b146:	add    rsp,0x20
  42b14a:	pop    rbp
  42b14b:	ret    
  42b14c:	int3   
  42b14d:	int3   
  42b14e:	int3   
  42b14f:	int3   
  42b150:	rex.W push rbp
  42b152:	sub    rsp,0x20
  42b156:	mov    rbp,rdx
  42b159:	mov    rcx,QWORD PTR [rbp+0x50]
  42b15d:	add    rcx,0x10
  42b161:	call   0x4176b4
  42b166:	add    rsp,0x20
  42b16a:	pop    rbp
  42b16b:	ret    
  42b16c:	int3   
  42b16d:	int3   
  42b16e:	int3   
  42b16f:	int3   
  42b170:	rex.W push rbp
  42b172:	sub    rsp,0x20
  42b176:	mov    rbp,rdx
  42b179:	mov    rcx,QWORD PTR [rbp+0x50]
  42b17d:	add    rcx,0x18
  42b181:	call   0x4176b4
  42b186:	add    rsp,0x20
  42b18a:	pop    rbp
  42b18b:	ret    
  42b18c:	int3   
  42b18d:	int3   
  42b18e:	int3   
  42b18f:	int3   
  42b190:	rex.W push rbp
  42b192:	sub    rsp,0x20
  42b196:	mov    rbp,rdx
  42b199:	mov    rcx,QWORD PTR [rbp+0x50]
  42b19d:	add    rcx,0x20
  42b1a1:	call   0x422a2c
  42b1a6:	add    rsp,0x20
  42b1aa:	pop    rbp
  42b1ab:	ret    
  42b1ac:	int3   
  42b1ad:	int3   
  42b1ae:	int3   
  42b1af:	int3   
  42b1b0:	rex.W push rbp
  42b1b2:	sub    rsp,0x20
  42b1b6:	mov    rbp,rdx
  42b1b9:	mov    rcx,QWORD PTR [rbp+0x50]
  42b1bd:	add    rcx,0x58
  42b1c1:	call   0x422a2c
  42b1c6:	add    rsp,0x20
  42b1ca:	pop    rbp
  42b1cb:	ret    
  42b1cc:	int3   
  42b1cd:	int3   
  42b1ce:	int3   
  42b1cf:	int3   
  42b1d0:	rex.W push rbp
  42b1d2:	sub    rsp,0x20
  42b1d6:	mov    rbp,rdx
  42b1d9:	mov    rcx,QWORD PTR [rbp+0x50]
  42b1dd:	add    rcx,0x90
  42b1e4:	call   0x401000
  42b1e9:	add    rsp,0x20
  42b1ed:	pop    rbp
  42b1ee:	ret    
  42b1ef:	int3   
  42b1f0:	rex.W push rbp
  42b1f2:	sub    rsp,0x20
  42b1f6:	mov    rbp,rdx
  42b1f9:	mov    rcx,QWORD PTR [rbp+0x50]
  42b1fd:	add    rcx,0xa0
  42b204:	call   0x401000
  42b209:	add    rsp,0x20
  42b20d:	pop    rbp
  42b20e:	ret    
  42b20f:	int3   
  42b210:	sub    rcx,0x8
  42b214:	jmp    0x42a608
  42b219:	int3   
  42b21a:	int3   
  42b21b:	int3   
  42b21c:	sub    rcx,0x10
  42b220:	jmp    0x42a608
  42b225:	int3   
  42b226:	int3   
  42b227:	int3   
  42b228:	sub    rcx,0x18
  42b22c:	jmp    0x42a608
  42b231:	int3   
  42b232:	int3   
  42b233:	int3   
  42b234:	mov    QWORD PTR [rsp+0x8],rcx
  42b239:	push   rbx
  42b23a:	push   rsi
  42b23b:	push   rdi
  42b23c:	sub    rsp,0x30
  42b240:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42b249:	mov    rdi,rcx
  42b24c:	xor    esi,esi
  42b24e:	mov    DWORD PTR [rcx+0x20],esi
  42b251:	lea    rax,[rip+0x25580]        # 0x4507d8
  42b258:	mov    QWORD PTR [rcx],rax
  42b25b:	lea    rax,[rip+0x2554e]        # 0x4507b0
  42b262:	mov    QWORD PTR [rcx+0x8],rax
  42b266:	lea    rax,[rip+0x25523]        # 0x450790
  42b26d:	mov    QWORD PTR [rcx+0x10],rax
  42b271:	lea    rax,[rip+0x254f8]        # 0x450770
  42b278:	mov    QWORD PTR [rcx+0x18],rax
  42b27c:	add    rcx,0x28
  42b280:	call   0x403150
  42b285:	nop
  42b286:	lea    rcx,[rdi+0x38]
  42b28a:	call   0x407fc0
  42b28f:	lea    rcx,[rdi+0x60]
  42b293:	call   0x403150
  42b298:	nop
  42b299:	mov    BYTE PTR [rdi+0x70],sil
  42b29d:	lea    rcx,[rdi+0x78]
  42b2a1:	call   0x403150
  42b2a6:	mov    QWORD PTR [rdi+0x88],rsi
  42b2ad:	mov    DWORD PTR [rdi+0x90],esi
  42b2b3:	mov    DWORD PTR [rdi+0x94],esi
  42b2b9:	mov    QWORD PTR [rdi+0x98],rsi
  42b2c0:	mov    DWORD PTR [rdi+0xa0],esi
  42b2c6:	mov    DWORD PTR [rdi+0xa4],esi
  42b2cc:	mov    QWORD PTR [rdi+0xa8],rsi
  42b2d3:	mov    DWORD PTR [rdi+0xb0],esi
  42b2d9:	mov    DWORD PTR [rdi+0xb4],esi
  42b2df:	mov    QWORD PTR [rdi+0xc0],rsi
  42b2e6:	mov    QWORD PTR [rdi+0xc8],rsi
  42b2ed:	mov    rax,rdi
  42b2f0:	add    rsp,0x30
  42b2f4:	pop    rdi
  42b2f5:	pop    rsi
  42b2f6:	pop    rbx
  42b2f7:	ret    
  42b2f8:	int3   
  42b2f9:	int3   
  42b2fa:	int3   
  42b2fb:	int3   
  42b2fc:	int3   
  42b2fd:	int3   
  42b2fe:	int3   
  42b2ff:	int3   
  42b300:	int3   
  42b301:	int3   
  42b302:	int3   
  42b303:	int3   
  42b304:	rex.W push rbp
  42b306:	sub    rsp,0x20
  42b30a:	mov    rbp,rdx
  42b30d:	mov    rcx,QWORD PTR [rbp+0x50]
  42b311:	add    rcx,0x28
  42b315:	call   0x401000
  42b31a:	add    rsp,0x20
  42b31e:	pop    rbp
  42b31f:	ret    
  42b320:	int3   
  42b321:	int3   
  42b322:	int3   
  42b323:	int3   
  42b324:	rex.W push rbp
  42b326:	sub    rsp,0x20
  42b32a:	mov    rbp,rdx
  42b32d:	mov    rcx,QWORD PTR [rbp+0x50]
  42b331:	add    rcx,0x38
  42b335:	call   0x406fe0
  42b33a:	add    rsp,0x20
  42b33e:	pop    rbp
  42b33f:	ret    
  42b340:	rex.W push rbx
  42b342:	push   rbp
  42b343:	push   rsi
  42b344:	push   rdi
  42b345:	sub    rsp,0x28
  42b349:	mov    rsi,rdx
  42b34c:	mov    rdi,r8
  42b34f:	mov    rbx,rcx
  42b352:	mov    QWORD PTR [r8],0x0
  42b359:	mov    ebp,0x10
  42b35e:	lea    rdx,[rip+0x29a8b]        # 0x454df0
  42b365:	mov    r8,rbp
  42b368:	mov    rcx,rsi
  42b36b:	call   0x44b786
  42b370:	test   eax,eax
  42b372:	je     0x42b38a
  42b374:	lea    rdx,[rip+0x28b0d]        # 0x453e88
  42b37b:	mov    r8,rbp
  42b37e:	mov    rcx,rsi
  42b381:	call   0x44b786
  42b386:	test   eax,eax
  42b388:	jne    0x42b390
  42b38a:	lea    rdx,[rbx+0x8]
  42b38e:	jmp    0x42b3c6
  42b390:	lea    rdx,[rip+0x28ad1]        # 0x453e68
  42b397:	mov    r8,rbp
  42b39a:	mov    rcx,rsi
  42b39d:	call   0x44b786
  42b3a2:	test   eax,eax
  42b3a4:	jne    0x42b3ac
  42b3a6:	lea    rdx,[rbx+0x10]
  42b3aa:	jmp    0x42b3c6
  42b3ac:	lea    rdx,[rip+0x28a15]        # 0x453dc8
  42b3b3:	mov    r8,rbp
  42b3b6:	mov    rcx,rsi
  42b3b9:	call   0x44b786
  42b3be:	test   eax,eax
  42b3c0:	jne    0x42b3dc
  42b3c2:	lea    rdx,[rbx+0x18]
  42b3c6:	mov    rax,rbx
  42b3c9:	neg    rax
  42b3cc:	sbb    rcx,rcx
  42b3cf:	and    rcx,rdx
  42b3d2:	mov    QWORD PTR [rdi],rcx
  42b3d5:	inc    DWORD PTR [rbx+0x20]
  42b3d8:	xor    eax,eax
  42b3da:	jmp    0x42b3e1
  42b3dc:	mov    eax,0x80004002
  42b3e1:	add    rsp,0x28
  42b3e5:	pop    rdi
  42b3e6:	pop    rsi
  42b3e7:	pop    rbp
  42b3e8:	pop    rbx
  42b3e9:	ret    
  42b3ea:	int3   
  42b3eb:	int3   
  42b3ec:	inc    DWORD PTR [rcx+0x20]
  42b3ef:	mov    eax,DWORD PTR [rcx+0x20]
  42b3f2:	ret    
  42b3f3:	int3   
  42b3f4:	sub    rsp,0x28
  42b3f8:	mov    BYTE PTR [rcx+0x60],0x1
  42b3fc:	add    rcx,0x68
  42b400:	call   0x403290
  42b405:	xor    eax,eax
  42b407:	add    rsp,0x28
  42b40b:	ret    
  42b40c:	sub    rcx,0x8
  42b410:	jmp    0x42b340
  42b415:	int3   
  42b416:	int3   
  42b417:	int3   
  42b418:	sub    rcx,0x10
  42b41c:	jmp    0x42b340
  42b421:	int3   
  42b422:	int3   
  42b423:	int3   
  42b424:	sub    rcx,0x18
  42b428:	jmp    0x42b340
  42b42d:	int3   
  42b42e:	int3   
  42b42f:	int3   
  42b430:	sub    rcx,0x18
  42b434:	jmp    0x42b3ec
  42b439:	int3   
  42b43a:	int3   
  42b43b:	int3   
  42b43c:	rex.W push rbx
  42b43e:	push   rbp
  42b43f:	push   rsi
  42b440:	push   rdi
  42b441:	sub    rsp,0x48
  42b445:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42b44e:	mov    rdi,r8
  42b451:	mov    rsi,rcx
  42b454:	add    rcx,0x28
  42b458:	call   0x4032f8
  42b45d:	mov    r8,rdi
  42b460:	lea    rdx,[rsi+0x28]
  42b464:	lea    rcx,[rsp+0x28]
  42b469:	call   0x4030d4
  42b46e:	nop
  42b46f:	lea    rcx,[rsi+0x38]
  42b473:	mov    rdx,QWORD PTR [rax]
  42b476:	call   0x408134
  42b47b:	test   al,al
  42b47d:	sete   bl
  42b480:	mov    rcx,QWORD PTR [rsp+0x28]
  42b485:	call   0x40215c
  42b48a:	test   bl,bl
  42b48c:	je     0x42b4a8
  42b48e:	mov    DWORD PTR [rsp+0x70],0x133061e
  42b496:	lea    rdx,[rip+0x3bc33]        # 0x4670d0
  42b49d:	lea    rcx,[rsp+0x70]
  42b4a2:	call   0x44b71e
  42b4a7:	int3   
  42b4a8:	movsxd rbx,DWORD PTR [rsi+0x90]
  42b4af:	mov    rdi,rbx
  42b4b2:	test   ebx,ebx
  42b4b4:	je     0x42b4e6
  42b4b6:	shl    rdi,0x3
  42b4ba:	add    ebx,0xffffffff
  42b4bd:	sub    rdi,0x8
  42b4c1:	mov    rax,QWORD PTR [rsi+0x88]
  42b4c8:	mov    rbp,QWORD PTR [rdi+rax*1]
  42b4cc:	test   rbp,rbp
  42b4cf:	je     0x42b4e2
  42b4d1:	mov    rcx,QWORD PTR [rbp+0x0]
  42b4d5:	call   0x40215c
  42b4da:	mov    rcx,rbp
  42b4dd:	call   0x40215c
  42b4e2:	test   ebx,ebx
  42b4e4:	jne    0x42b4ba
  42b4e6:	mov    DWORD PTR [rsi+0x90],0x0
  42b4f0:	mov    DWORD PTR [rsi+0xa0],0x0
  42b4fa:	mov    DWORD PTR [rsi+0xb0],0x0
  42b504:	mov    BYTE PTR [rsi+0x70],0x0
  42b508:	mov    BYTE PTR [rsi+0xb8],0x0
  42b50f:	add    rsp,0x48
  42b513:	pop    rdi
  42b514:	pop    rsi
  42b515:	pop    rbp
  42b516:	pop    rbx
  42b517:	ret    
  42b518:	int3   
  42b519:	int3   
  42b51a:	int3   
  42b51b:	int3   
  42b51c:	rex.W push rbp
  42b51e:	sub    rsp,0x20
  42b522:	mov    rbp,rdx
  42b525:	lea    rcx,[rbp+0x28]
  42b529:	call   0x401000
  42b52e:	add    rsp,0x20
  42b532:	pop    rbp
  42b533:	ret    
  42b534:	mov    QWORD PTR [rsp+0x8],rcx
  42b539:	push   rbx
  42b53a:	push   rbp
  42b53b:	push   rsi
  42b53c:	push   rdi
  42b53d:	sub    rsp,0x38
  42b541:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42b54a:	mov    rbx,rcx
  42b54d:	mov    rcx,QWORD PTR [rcx+0xc8]
  42b554:	test   rcx,rcx
  42b557:	je     0x42b560
  42b559:	mov    rax,QWORD PTR [rcx]
  42b55c:	call   QWORD PTR [rax+0x10]
  42b55f:	nop
  42b560:	mov    rcx,QWORD PTR [rbx+0xa8]
  42b567:	call   0x40215c
  42b56c:	nop
  42b56d:	mov    rcx,QWORD PTR [rbx+0x98]
  42b574:	call   0x40215c
  42b579:	nop
  42b57a:	movsxd rdi,DWORD PTR [rbx+0x90]
  42b581:	mov    rsi,rdi
  42b584:	test   edi,edi
  42b586:	je     0x42b5b8
  42b588:	shl    rsi,0x3
  42b58c:	add    edi,0xffffffff
  42b58f:	sub    rsi,0x8
  42b593:	mov    rax,QWORD PTR [rbx+0x88]
  42b59a:	mov    rbp,QWORD PTR [rsi+rax*1]
  42b59e:	test   rbp,rbp
  42b5a1:	je     0x42b5b4
  42b5a3:	mov    rcx,QWORD PTR [rbp+0x0]
  42b5a7:	call   0x40215c
  42b5ac:	mov    rcx,rbp
  42b5af:	call   0x40215c
  42b5b4:	test   edi,edi
  42b5b6:	jne    0x42b58c
  42b5b8:	mov    rcx,QWORD PTR [rbx+0x88]
  42b5bf:	call   0x40215c
  42b5c4:	nop
  42b5c5:	mov    rcx,QWORD PTR [rbx+0x78]
  42b5c9:	call   0x40215c
  42b5ce:	nop
  42b5cf:	mov    rcx,QWORD PTR [rbx+0x60]
  42b5d3:	call   0x40215c
  42b5d8:	nop
  42b5d9:	mov    rcx,QWORD PTR [rbx+0x28]
  42b5dd:	add    rsp,0x38
  42b5e1:	pop    rdi
  42b5e2:	pop    rsi
  42b5e3:	pop    rbp
  42b5e4:	pop    rbx
  42b5e5:	jmp    0x40215c
  42b5ea:	int3   
  42b5eb:	int3   
  42b5ec:	int3   
  42b5ed:	int3   
  42b5ee:	int3   
  42b5ef:	int3   
  42b5f0:	int3   
  42b5f1:	int3   
  42b5f2:	int3   
  42b5f3:	int3   
  42b5f4:	rex.W push rbp
  42b5f6:	sub    rsp,0x20
  42b5fa:	mov    rbp,rdx
  42b5fd:	mov    rcx,QWORD PTR [rbp+0x60]
  42b601:	add    rcx,0x28
  42b605:	call   0x401000
  42b60a:	add    rsp,0x20
  42b60e:	pop    rbp
  42b60f:	ret    
  42b610:	int3   
  42b611:	int3   
  42b612:	int3   
  42b613:	int3   
  42b614:	rex.W push rbp
  42b616:	sub    rsp,0x20
  42b61a:	mov    rbp,rdx
  42b61d:	mov    rcx,QWORD PTR [rbp+0x60]
  42b621:	add    rcx,0x38
  42b625:	call   0x406fe0
  42b62a:	add    rsp,0x20
  42b62e:	pop    rbp
  42b62f:	ret    
  42b630:	int3   
  42b631:	int3   
  42b632:	int3   
  42b633:	int3   
  42b634:	rex.W push rbp
  42b636:	sub    rsp,0x20
  42b63a:	mov    rbp,rdx
  42b63d:	mov    rcx,QWORD PTR [rbp+0x60]
  42b641:	add    rcx,0x78
  42b645:	call   0x401000
  42b64a:	add    rsp,0x20
  42b64e:	pop    rbp
  42b64f:	ret    
  42b650:	int3   
  42b651:	int3   
  42b652:	int3   
  42b653:	int3   
  42b654:	rex.W push rbp
  42b656:	sub    rsp,0x20
  42b65a:	mov    rbp,rdx
  42b65d:	mov    rcx,QWORD PTR [rbp+0x60]
  42b661:	add    rcx,0x88
  42b668:	call   0x4047cc
  42b66d:	add    rsp,0x20
  42b671:	pop    rbp
  42b672:	ret    
  42b673:	int3   
  42b674:	rex.W push rbp
  42b676:	sub    rsp,0x20
  42b67a:	mov    rbp,rdx
  42b67d:	mov    rcx,QWORD PTR [rbp+0x60]
  42b681:	add    rcx,0x98
  42b688:	call   0x401000
  42b68d:	add    rsp,0x20
  42b691:	pop    rbp
  42b692:	ret    
  42b693:	int3   
  42b694:	rex.W push rbp
  42b696:	sub    rsp,0x20
  42b69a:	mov    rbp,rdx
  42b69d:	mov    rcx,QWORD PTR [rbp+0x60]
  42b6a1:	add    rcx,0xa8
  42b6a8:	call   0x401000
  42b6ad:	add    rsp,0x20
  42b6b1:	pop    rbp
  42b6b2:	ret    
  42b6b3:	int3   
  42b6b4:	rex.W push rbx
  42b6b6:	sub    rsp,0x20
  42b6ba:	cmp    DWORD PTR [rcx+0x30],0x0
  42b6be:	mov    rbx,rdx
  42b6c1:	mov    DWORD PTR [rsp+0x30],0x0
  42b6c9:	jne    0x42b6d5
  42b6cb:	mov    rcx,rdx
  42b6ce:	call   0x403150
  42b6d3:	jmp    0x42b6e4
  42b6d5:	mov    rdx,QWORD PTR [rcx+0x28]
  42b6d9:	mov    rcx,rbx
  42b6dc:	mov    rdx,QWORD PTR [rdx]
  42b6df:	call   0x403208
  42b6e4:	mov    rax,rbx
  42b6e7:	add    rsp,0x20
  42b6eb:	pop    rbx
  42b6ec:	ret    
  42b6ed:	int3   
  42b6ee:	int3   
  42b6ef:	int3   
  42b6f0:	rex.W push rbx
  42b6f2:	push   rdi
  42b6f3:	sub    rsp,0x38
  42b6f7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42b700:	mov    rdi,r8
  42b703:	mov    r9,rcx
  42b706:	mov    edx,edx
  42b708:	mov    rax,QWORD PTR [rcx+0x40]
  42b70c:	mov    r8,QWORD PTR [rax+rdx*8]
  42b710:	cmp    DWORD PTR [r8+0x58],0x0
  42b715:	jge    0x42b748
  42b717:	call   QWORD PTR [r8+0x8]
  42b71b:	mov    rbx,rax
  42b71e:	test   rax,rax
  42b721:	je     0x42b72c
  42b723:	mov    rdx,QWORD PTR [rax]
  42b726:	mov    rcx,rax
  42b729:	call   QWORD PTR [rdx+0x8]
  42b72c:	mov    rcx,QWORD PTR [rdi]
  42b72f:	test   rcx,rcx
  42b732:	je     0x42b73a
  42b734:	mov    rax,QWORD PTR [rcx]
  42b737:	call   QWORD PTR [rax+0x10]
  42b73a:	mov    QWORD PTR [rdi],rbx
  42b73d:	xor    eax,eax
  42b73f:	jmp    0x42b767
  42b741:	mov    eax,0x8007000e
  42b746:	jmp    0x42b767
  42b748:	mov    ecx,DWORD PTR [r8+0x58]
  42b74c:	mov    rax,QWORD PTR [r9+0x18]
  42b750:	mov    r9,QWORD PTR [rax+rcx*8]
  42b754:	lea    rcx,[r8+0x60]
  42b758:	mov    r8,rdi
  42b75b:	lea    rdx,[rip+0x286f6]        # 0x453e58
  42b762:	call   QWORD PTR [r9+0x18]
  42b766:	nop
  42b767:	add    rsp,0x38
  42b76b:	pop    rdi
  42b76c:	pop    rbx
  42b76d:	ret    
  42b76e:	int3   
  42b76f:	int3   
  42b770:	mov    QWORD PTR [rsp+0x10],rdx
  42b775:	push   rbp
  42b776:	sub    rsp,0x20
  42b77a:	mov    rbp,rdx
  42b77d:	lea    rax,[rip+0xffffffffffffffbd]        # 0x42b741
  42b784:	jmp    0x42b786
  42b786:	add    rsp,0x20
  42b78a:	pop    rbp
  42b78b:	ret    
  42b78c:	int3   
  42b78d:	int3   
  42b78e:	int3   
  42b78f:	int3   
  42b790:	rex.W push rbx
  42b792:	push   rbp
  42b793:	push   rsi
  42b794:	push   rdi
  42b795:	sub    rsp,0x28
  42b799:	mov    rsi,rdx
  42b79c:	mov    rdi,r8
  42b79f:	mov    rbx,rcx
  42b7a2:	mov    QWORD PTR [r8],0x0
  42b7a9:	mov    ebp,0x10
  42b7ae:	lea    rdx,[rip+0x2963b]        # 0x454df0
  42b7b5:	mov    r8,rbp
  42b7b8:	mov    rcx,rsi
  42b7bb:	call   0x44b786
  42b7c0:	test   eax,eax
  42b7c2:	jne    0x42b7c9
  42b7c4:	mov    QWORD PTR [rdi],rbx
  42b7c7:	jmp    0x42b808
  42b7c9:	lea    rdx,[rip+0x28688]        # 0x453e58
  42b7d0:	mov    r8,rbp
  42b7d3:	mov    rcx,rsi
  42b7d6:	call   0x44b786
  42b7db:	test   eax,eax
  42b7dd:	je     0x42b7c4
  42b7df:	lea    rdx,[rip+0x28692]        # 0x453e78
  42b7e6:	mov    r8,rbp
  42b7e9:	mov    rcx,rsi
  42b7ec:	call   0x44b786
  42b7f1:	test   eax,eax
  42b7f3:	jne    0x42b80f
  42b7f5:	mov    rax,rbx
  42b7f8:	lea    rdx,[rbx+0x8]
  42b7fc:	neg    rax
  42b7ff:	sbb    rcx,rcx
  42b802:	and    rcx,rdx
  42b805:	mov    QWORD PTR [rdi],rcx
  42b808:	inc    DWORD PTR [rbx+0x10]
  42b80b:	xor    eax,eax
  42b80d:	jmp    0x42b814
  42b80f:	mov    eax,0x80004002
  42b814:	add    rsp,0x28
  42b818:	pop    rdi
  42b819:	pop    rsi
  42b81a:	pop    rbp
  42b81b:	pop    rbx
  42b81c:	ret    
  42b81d:	int3   
  42b81e:	int3   
  42b81f:	int3   
  42b820:	inc    DWORD PTR [rcx+0x10]
  42b823:	mov    eax,DWORD PTR [rcx+0x10]
  42b826:	ret    
  42b827:	int3   
  42b828:	sub    rcx,0x8
  42b82c:	jmp    0x42b790
  42b831:	int3   
  42b832:	int3   
  42b833:	int3   
  42b834:	sub    rcx,0x8
  42b838:	jmp    0x42b820
  42b83d:	int3   
  42b83e:	int3   
  42b83f:	int3   
  42b840:	mov    r9d,DWORD PTR [rcx+0x20]
  42b844:	xor    r8d,r8d
  42b847:	cmp    r9d,r8d
  42b84a:	je     0x42b87c
  42b84c:	mov    r11,QWORD PTR [rcx+0x18]
  42b850:	mov    r10,QWORD PTR [rdx]
  42b853:	lea    ecx,[r9+r8*1]
  42b857:	shr    ecx,1
  42b859:	mov    rax,QWORD PTR [r11+rcx*8]
  42b85d:	cmp    r10,QWORD PTR [rax]
  42b860:	jae    0x42b867
  42b862:	mov    r9d,ecx
  42b865:	jmp    0x42b877
  42b867:	ja     0x42b873
  42b869:	mov    rax,QWORD PTR [rax+0x8]
  42b86d:	cmp    QWORD PTR [rdx+0x8],rax
  42b871:	jb     0x42b862
  42b873:	lea    r8d,[rcx+0x1]
  42b877:	cmp    r8d,r9d
  42b87a:	jne    0x42b853
  42b87c:	mov    eax,r8d
  42b87f:	ret    
  42b880:	rex.W push rbx
  42b882:	sub    rsp,0x20
  42b886:	mov    rbx,rcx
  42b889:	add    rcx,0x18
  42b88d:	call   0x42aef0
  42b892:	mov    rcx,QWORD PTR [rbx+0x30]
  42b896:	test   rcx,rcx
  42b899:	je     0x42b8a9
  42b89b:	mov    rax,QWORD PTR [rcx]
  42b89e:	call   QWORD PTR [rax+0x10]
  42b8a1:	mov    QWORD PTR [rbx+0x30],0x0
  42b8a9:	xor    eax,eax
  42b8ab:	add    rsp,0x20
  42b8af:	pop    rbx
  42b8b0:	ret    
  42b8b1:	int3   
  42b8b2:	int3   
  42b8b3:	int3   
  42b8b4:	mov    eax,DWORD PTR [rcx+0x20]
  42b8b7:	mov    DWORD PTR [rdx],eax
  42b8b9:	xor    eax,eax
  42b8bb:	ret    
  42b8bc:	rex.W push rbx
  42b8be:	push   rsi
  42b8bf:	push   rdi
  42b8c0:	sub    rsp,0x90
  42b8c7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42b8d0:	mov    rdi,r9
  42b8d3:	xor    esi,esi
  42b8d5:	mov    WORD PTR [rsp+0x38],si
  42b8da:	mov    WORD PTR [rsp+0x3a],si
  42b8df:	mov    QWORD PTR [rsp+0x40],rsi
  42b8e4:	mov    r10d,edx
  42b8e7:	mov    rax,QWORD PTR [rcx+0x18]
  42b8eb:	mov    rbx,QWORD PTR [rax+r10*8]
  42b8ef:	cmp    r8d,0x1c
  42b8f3:	ja     0x42ba47
  42b8f9:	cmp    r8d,0x1c
  42b8fd:	je     0x42ba32
  42b903:	cmp    r8d,0x3
  42b907:	je     0x42b975
  42b909:	cmp    r8d,0x6
  42b90d:	jbe    0x42baad
  42b913:	cmp    r8d,0x8
  42b917:	jbe    0x42b962
  42b919:	cmp    r8d,0xc
  42b91d:	je     0x42b945
  42b91f:	cmp    r8d,0x14
  42b923:	jne    0x42baad
  42b929:	cmp    DWORD PTR [rbx+0x50],esi
  42b92c:	je     0x42baad
  42b932:	lea    rdx,[rbx+0x48]
  42b936:	lea    rcx,[rsp+0x38]
  42b93b:	call   0x40b1a0
  42b940:	jmp    0x42baad
  42b945:	cmp    BYTE PTR [rbx+0x58],sil
  42b949:	je     0x42baad
  42b94f:	lea    rdx,[rbx+0x30]
  42b953:	lea    rcx,[rsp+0x38]
  42b958:	call   0x40b2e0
  42b95d:	jmp    0x42baad
  42b962:	mov    rdx,QWORD PTR [rbx+0x8]
  42b966:	lea    rcx,[rsp+0x38]
  42b96b:	call   0x40b2b4
  42b970:	jmp    0x42baad
  42b975:	lea    ecx,[rdx+0x1]
  42b978:	lea    rdx,[rsp+0x50]
  42b97d:	call   0x401b10
  42b982:	lea    rdx,[rsp+0x50]
  42b987:	lea    rcx,[rsp+0x28]
  42b98c:	call   0x4031c0
  42b991:	nop
  42b992:	cmp    DWORD PTR [rbx+0x18],esi
  42b995:	je     0x42b9d4
  42b997:	mov    edx,DWORD PTR [rsp+0x30]
  42b99b:	cmp    DWORD PTR [rsp+0x34],edx
  42b99f:	jne    0x42b9af
  42b9a1:	lea    rcx,[rsp+0x28]
  42b9a6:	call   0x402f2c
  42b9ab:	mov    edx,DWORD PTR [rsp+0x30]
  42b9af:	mov    rcx,QWORD PTR [rsp+0x28]
  42b9b4:	mov    eax,edx
  42b9b6:	mov    WORD PTR [rcx+rax*2],0x2e
  42b9bc:	inc    edx
  42b9be:	mov    WORD PTR [rcx+rdx*2],si
  42b9c2:	mov    DWORD PTR [rsp+0x30],edx
  42b9c6:	lea    rdx,[rbx+0x10]
  42b9ca:	lea    rcx,[rsp+0x28]
  42b9cf:	call   0x403444
  42b9d4:	cmp    DWORD PTR [rbx+0x28],esi
  42b9d7:	je     0x42ba16
  42b9d9:	mov    edx,DWORD PTR [rsp+0x30]
  42b9dd:	cmp    DWORD PTR [rsp+0x34],edx
  42b9e1:	jne    0x42b9f1
  42b9e3:	lea    rcx,[rsp+0x28]
  42b9e8:	call   0x402f2c
  42b9ed:	mov    edx,DWORD PTR [rsp+0x30]
  42b9f1:	mov    rcx,QWORD PTR [rsp+0x28]
  42b9f6:	mov    eax,edx
  42b9f8:	mov    WORD PTR [rcx+rax*2],0x2e
  42b9fe:	inc    edx
  42ba00:	mov    WORD PTR [rcx+rdx*2],si
  42ba04:	mov    DWORD PTR [rsp+0x30],edx
  42ba08:	lea    rdx,[rbx+0x20]
  42ba0c:	lea    rcx,[rsp+0x28]
  42ba11:	call   0x403444
  42ba16:	lea    rdx,[rsp+0x28]
  42ba1b:	lea    rcx,[rsp+0x38]
  42ba20:	call   0x40b1a0
  42ba25:	nop
  42ba26:	mov    rcx,QWORD PTR [rsp+0x28]
  42ba2b:	call   0x40215c
  42ba30:	jmp    0x42baad
  42ba32:	cmp    DWORD PTR [rbx+0x40],esi
  42ba35:	je     0x42baad
  42ba37:	lea    rdx,[rbx+0x38]
  42ba3b:	lea    rcx,[rsp+0x38]
  42ba40:	call   0x40b1a0
  42ba45:	jmp    0x42baad
  42ba47:	sub    r8d,0x1f
  42ba4b:	je     0x42ba99
  42ba4d:	dec    r8d
  42ba50:	je     0x42ba83
  42ba52:	sub    r8d,0x4
  42ba56:	je     0x42ba74
  42ba58:	cmp    r8d,0x2a
  42ba5c:	jne    0x42baad
  42ba5e:	cmp    BYTE PTR [rbx+0x59],sil
  42ba62:	je     0x42baad
  42ba64:	mov    rdx,QWORD PTR [rbx+0x60]
  42ba68:	lea    rcx,[rsp+0x38]
  42ba6d:	call   0x40b2b4
  42ba72:	jmp    0x42baad
  42ba74:	mov    rdx,QWORD PTR [rbx]
  42ba77:	lea    rcx,[rsp+0x38]
  42ba7c:	call   0x40b2b4
  42ba81:	jmp    0x42baad
  42ba83:	cmp    BYTE PTR [rbx+0x5b],sil
  42ba87:	je     0x42baad
  42ba89:	mov    rdx,QWORD PTR [rbx+0x70]
  42ba8d:	lea    rcx,[rsp+0x38]
  42ba92:	call   0x40b2b4
  42ba97:	jmp    0x42baad
  42ba99:	cmp    BYTE PTR [rbx+0x5a],sil
  42ba9d:	je     0x42baad
  42ba9f:	mov    rdx,QWORD PTR [rbx+0x68]
  42baa3:	lea    rcx,[rsp+0x38]
  42baa8:	call   0x40b2b4
  42baad:	mov    rdx,rdi
  42bab0:	lea    rcx,[rsp+0x38]
  42bab5:	call   0x40b0b8
  42baba:	nop
  42babb:	lea    rcx,[rsp+0x38]
  42bac0:	call   0x40b028
  42bac5:	xor    eax,eax
  42bac7:	jmp    0x42bace
  42bac9:	mov    eax,0x8007000e
  42bace:	add    rsp,0x90
  42bad5:	pop    rdi
  42bad6:	pop    rsi
  42bad7:	pop    rbx
  42bad8:	ret    
  42bad9:	int3   
  42bada:	int3   
  42badb:	int3   
  42badc:	rex.W push rbp
  42bade:	sub    rsp,0x20
  42bae2:	mov    rbp,rdx
  42bae5:	lea    rcx,[rbp+0x38]
  42bae9:	call   0x40b830
  42baee:	add    rsp,0x20
  42baf2:	pop    rbp
  42baf3:	ret    
  42baf4:	int3   
  42baf5:	int3   
  42baf6:	int3   
  42baf7:	int3   
  42baf8:	int3   
  42baf9:	int3   
  42bafa:	int3   
  42bafb:	int3   
  42bafc:	rex.W push rbp
  42bafe:	sub    rsp,0x20
  42bb02:	mov    rbp,rdx
  42bb05:	lea    rcx,[rbp+0x28]
  42bb09:	call   0x401000
  42bb0e:	add    rsp,0x20
  42bb12:	pop    rbp
  42bb13:	ret    
  42bb14:	int3   
  42bb15:	int3   
  42bb16:	int3   
  42bb17:	int3   
  42bb18:	int3   
  42bb19:	int3   
  42bb1a:	int3   
  42bb1b:	int3   
  42bb1c:	mov    QWORD PTR [rsp+0x10],rdx
  42bb21:	push   rbp
  42bb22:	sub    rsp,0x20
  42bb26:	mov    rbp,rdx
  42bb29:	lea    rax,[rip+0xffffffffffffff99]        # 0x42bac9
  42bb30:	jmp    0x42bb32
  42bb32:	add    rsp,0x20
  42bb36:	pop    rbp
  42bb37:	ret    
  42bb38:	int3   
  42bb39:	int3   
  42bb3a:	int3   
  42bb3b:	int3   
  42bb3c:	mov    DWORD PTR [rsp+0x20],r9d
  42bb41:	mov    DWORD PTR [rsp+0x18],r8d
  42bb46:	mov    QWORD PTR [rsp+0x10],rdx
  42bb4b:	mov    QWORD PTR [rsp+0x8],rcx
  42bb50:	push   rbx
  42bb51:	push   rsi
  42bb52:	push   rdi
  42bb53:	push   r12
  42bb55:	push   r13
  42bb57:	push   r14
  42bb59:	push   r15
  42bb5b:	mov    r11,rsp
  42bb5e:	sub    rsp,0x90
  42bb65:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
  42bb6e:	mov    r13d,r8d
  42bb71:	mov    r9,rdx
  42bb74:	mov    rbx,rcx
  42bb77:	cmp    r8d,0xffffffff
  42bb7b:	sete   al
  42bb7e:	mov    BYTE PTR [rsp+0x30],al
  42bb82:	test   al,al
  42bb84:	je     0x42bb8e
  42bb86:	mov    r13d,DWORD PTR [rcx+0x20]
  42bb8a:	mov    DWORD PTR [r11+0x50],r13d
  42bb8e:	cmp    QWORD PTR [rcx+0x30],0x0
  42bb93:	je     0x42bba1
  42bb95:	test   r13d,r13d
  42bb98:	jne    0x42bba1
  42bb9a:	xor    eax,eax
  42bb9c:	jmp    0x42c15f
  42bba1:	xor    r8d,r8d
  42bba4:	mov    QWORD PTR [rsp+0x48],r8
  42bba9:	xor    edx,edx
  42bbab:	mov    DWORD PTR [rsp+0x40],edx
  42bbaf:	cmp    edx,r13d
  42bbb2:	jae    0x42bbdf
  42bbb4:	test   al,al
  42bbb6:	je     0x42bbbc
  42bbb8:	mov    eax,edx
  42bbba:	jmp    0x42bbc0
  42bbbc:	mov    eax,DWORD PTR [r9+rdx*4]
  42bbc0:	mov    ecx,eax
  42bbc2:	mov    rax,QWORD PTR [rbx+0x18]
  42bbc6:	mov    rcx,QWORD PTR [rax+rcx*8]
  42bbca:	add    r8,QWORD PTR [rcx+0x8]
  42bbce:	mov    QWORD PTR [rsp+0x48],r8
  42bbd3:	inc    edx
  42bbd5:	mov    DWORD PTR [rsp+0x40],edx
  42bbd9:	mov    al,BYTE PTR [rsp+0x30]
  42bbdd:	jmp    0x42bbaf
  42bbdf:	mov    r15,QWORD PTR [rsp+0xf0]
  42bbe7:	mov    rax,QWORD PTR [r15]
  42bbea:	mov    rdx,r8
  42bbed:	mov    rcx,r15
  42bbf0:	call   QWORD PTR [rax+0x18]
  42bbf3:	mov    QWORD PTR [rsp+0x48],0x0
  42bbfc:	mov    ecx,0x48
  42bc01:	call   0x402130
  42bc06:	mov    QWORD PTR [rsp+0x50],rax
  42bc0b:	test   rax,rax
  42bc0e:	je     0x42bc1d
  42bc10:	mov    rcx,rax
  42bc13:	call   0x40e64c
  42bc18:	mov    rsi,rax
  42bc1b:	jmp    0x42bc1f
  42bc1d:	xor    esi,esi
  42bc1f:	mov    QWORD PTR [rsp+0x60],rsi
  42bc24:	test   rsi,rsi
  42bc27:	je     0x42bc33
  42bc29:	mov    rax,QWORD PTR [rsi]
  42bc2c:	mov    rcx,rsi
  42bc2f:	call   QWORD PTR [rax+0x8]
  42bc32:	nop
  42bc33:	xor    r8d,r8d
  42bc36:	mov    rdx,r15
  42bc39:	mov    rcx,rsi
  42bc3c:	call   0x40e540
  42bc41:	mov    ecx,0x30
  42bc46:	call   0x402130
  42bc4b:	mov    rdi,rax
  42bc4e:	xor    r15d,r15d
  42bc51:	cmp    rax,r15
  42bc54:	je     0x42bc6a
  42bc56:	mov    DWORD PTR [rax+0x8],r15d
  42bc5a:	lea    rax,[rip+0x2496f]        # 0x4505d0
  42bc61:	mov    QWORD PTR [rdi],rax
  42bc64:	mov    QWORD PTR [rdi+0x10],r15
  42bc68:	jmp    0x42bc6d
  42bc6a:	mov    rdi,r15
  42bc6d:	mov    QWORD PTR [rsp+0x68],rdi
  42bc72:	cmp    rdi,r15
  42bc75:	je     0x42bc81
  42bc77:	mov    rax,QWORD PTR [rdi]
  42bc7a:	mov    rcx,rdi
  42bc7d:	call   QWORD PTR [rax+0x8]
  42bc80:	nop
  42bc81:	mov    rbx,QWORD PTR [rbx+0x30]
  42bc85:	cmp    rbx,r15
  42bc88:	je     0x42bc93
  42bc8a:	mov    rax,QWORD PTR [rbx]
  42bc8d:	mov    rcx,rbx
  42bc90:	call   QWORD PTR [rax+0x8]
  42bc93:	mov    rcx,QWORD PTR [rdi+0x10]
  42bc97:	cmp    rcx,r15
  42bc9a:	je     0x42bca2
  42bc9c:	mov    rax,QWORD PTR [rcx]
  42bc9f:	call   QWORD PTR [rax+0x10]
  42bca2:	mov    QWORD PTR [rdi+0x10],rbx
  42bca6:	mov    ecx,0x28
  42bcab:	call   0x402130
  42bcb0:	mov    rbx,rax
  42bcb3:	cmp    rax,r15
  42bcb6:	je     0x42bccc
  42bcb8:	mov    DWORD PTR [rax+0x8],r15d
  42bcbc:	lea    rax,[rip+0x2492d]        # 0x4505f0
  42bcc3:	mov    QWORD PTR [rbx],rax
  42bcc6:	mov    QWORD PTR [rbx+0x10],r15
  42bcca:	jmp    0x42bccf
  42bccc:	mov    rbx,r15
  42bccf:	mov    QWORD PTR [rsp+0x70],rbx
  42bcd4:	cmp    rbx,r15
  42bcd7:	je     0x42bce3
  42bcd9:	mov    rax,QWORD PTR [rbx]
  42bcdc:	mov    rcx,rbx
  42bcdf:	call   QWORD PTR [rax+0x8]
  42bce2:	nop
  42bce3:	mov    ecx,0x40
  42bce8:	call   0x402130
  42bced:	mov    r12,rax
  42bcf0:	cmp    rax,r15
  42bcf3:	je     0x42bd39
  42bcf5:	mov    DWORD PTR [rax+0x20],r15d
  42bcf9:	lea    rax,[rip+0x24868]        # 0x450568
  42bd00:	mov    QWORD PTR [r12],rax
  42bd04:	lea    rax,[rip+0x24835]        # 0x450540
  42bd0b:	mov    QWORD PTR [r12+0x8],rax
  42bd10:	lea    rax,[rip+0x24809]        # 0x450520
  42bd17:	mov    QWORD PTR [r12+0x10],rax
  42bd1c:	lea    rax,[rip+0x247dd]        # 0x450500
  42bd23:	mov    QWORD PTR [r12+0x18],rax
  42bd28:	mov    QWORD PTR [r12+0x28],r15
  42bd2d:	mov    QWORD PTR [r12+0x30],r15
  42bd32:	mov    QWORD PTR [r12+0x38],r15
  42bd37:	jmp    0x42bd3c
  42bd39:	mov    r12,r15
  42bd3c:	mov    QWORD PTR [rsp+0x80],r12
  42bd44:	cmp    r12,r15
  42bd47:	je     0x42bd54
  42bd49:	mov    rax,QWORD PTR [r12]
  42bd4d:	mov    rcx,r12
  42bd50:	call   QWORD PTR [rax+0x8]
  42bd53:	nop
  42bd54:	mov    r14d,r15d
  42bd57:	mov    DWORD PTR [rsp+0x40],r15d
  42bd5c:	cmp    r14d,r13d
  42bd5f:	jae    0x42c11a
  42bd65:	mov    rax,QWORD PTR [rsp+0x48]
  42bd6a:	mov    QWORD PTR [rsi+0x30],rax
  42bd6e:	mov    QWORD PTR [rsi+0x38],rax
  42bd72:	mov    rcx,rsi
  42bd75:	call   0x40e528
  42bd7a:	mov    r13d,eax
  42bd7d:	cmp    eax,r15d
  42bd80:	je     0x42bdc6
  42bd82:	cmp    r12,r15
  42bd85:	je     0x42bd92
  42bd87:	mov    rax,QWORD PTR [r12]
  42bd8b:	mov    rcx,r12
  42bd8e:	call   QWORD PTR [rax+0x10]
  42bd91:	nop
  42bd92:	cmp    rbx,r15
  42bd95:	je     0x42bda1
  42bd97:	mov    rax,QWORD PTR [rbx]
  42bd9a:	mov    rcx,rbx
  42bd9d:	call   QWORD PTR [rax+0x10]
  42bda0:	nop
  42bda1:	cmp    rdi,r15
  42bda4:	je     0x42bdb0
  42bda6:	mov    rdx,QWORD PTR [rdi]
  42bda9:	mov    rcx,rdi
  42bdac:	call   QWORD PTR [rdx+0x10]
  42bdaf:	nop
  42bdb0:	cmp    rsi,r15
  42bdb3:	je     0x42bdbe
  42bdb5:	mov    rdx,QWORD PTR [rsi]
  42bdb8:	mov    rcx,rsi
  42bdbb:	call   QWORD PTR [rdx+0x10]
  42bdbe:	mov    eax,r13d
  42bdc1:	jmp    0x42c15f
  42bdc6:	mov    QWORD PTR [rsp+0x38],r15
  42bdcb:	cmp    DWORD PTR [rsp+0xe8],0x0
  42bdd3:	setne  r15b
  42bdd7:	cmp    BYTE PTR [rsp+0x30],0x0
  42bddc:	je     0x42bde3
  42bdde:	mov    edx,r14d
  42bde1:	jmp    0x42bdf1
  42bde3:	mov    eax,r14d
  42bde6:	mov    rcx,QWORD PTR [rsp+0xd8]
  42bdee:	mov    edx,DWORD PTR [rcx+rax*4]
  42bdf1:	mov    ecx,edx
  42bdf3:	mov    rax,QWORD PTR [rsp+0xd0]
  42bdfb:	mov    rax,QWORD PTR [rax+0x18]
  42bdff:	mov    rax,QWORD PTR [rax+rcx*8]
  42be03:	mov    QWORD PTR [rsp+0x58],rax
  42be08:	mov    rcx,QWORD PTR [rsp+0xf0]
  42be10:	mov    rax,QWORD PTR [rcx]
  42be13:	mov    r9d,r15d
  42be16:	lea    r8,[rsp+0x38]
  42be1b:	call   QWORD PTR [rax+0x28]
  42be1e:	mov    r13d,eax
  42be21:	test   eax,eax
  42be23:	je     0x42be7a
  42be25:	mov    rcx,QWORD PTR [rsp+0x38]
  42be2a:	test   rcx,rcx
  42be2d:	je     0x42be36
  42be2f:	mov    rax,QWORD PTR [rcx]
  42be32:	call   QWORD PTR [rax+0x10]
  42be35:	nop
  42be36:	test   r12,r12
  42be39:	je     0x42be46
  42be3b:	mov    rax,QWORD PTR [r12]
  42be3f:	mov    rcx,r12
  42be42:	call   QWORD PTR [rax+0x10]
  42be45:	nop
  42be46:	test   rbx,rbx
  42be49:	je     0x42be55
  42be4b:	mov    rax,QWORD PTR [rbx]
  42be4e:	mov    rcx,rbx
  42be51:	call   QWORD PTR [rax+0x10]
  42be54:	nop
  42be55:	test   rdi,rdi
  42be58:	je     0x42be64
  42be5a:	mov    rdx,QWORD PTR [rdi]
  42be5d:	mov    rcx,rdi
  42be60:	call   QWORD PTR [rdx+0x10]
  42be63:	nop
  42be64:	test   rsi,rsi
  42be67:	je     0x42be72
  42be69:	mov    rdx,QWORD PTR [rsi]
  42be6c:	mov    rcx,rsi
  42be6f:	call   QWORD PTR [rdx+0x10]
  42be72:	mov    eax,r13d
  42be75:	jmp    0x42c15f
  42be7a:	mov    rax,QWORD PTR [rsp+0x58]
  42be7f:	mov    rax,QWORD PTR [rax+0x8]
  42be83:	mov    QWORD PTR [rsp+0x50],rax
  42be88:	add    QWORD PTR [rsp+0x48],rax
  42be8d:	cmp    DWORD PTR [rsp+0xe8],0x0
  42be95:	jne    0x42bea7
  42be97:	cmp    QWORD PTR [rsp+0x38],0x0
  42be9d:	jne    0x42bea7
  42be9f:	xor    r15d,r15d
  42bea2:	jmp    0x42c105
  42bea7:	mov    rcx,QWORD PTR [rsp+0xf0]
  42beaf:	mov    rax,QWORD PTR [rcx]
  42beb2:	mov    edx,r15d
  42beb5:	call   QWORD PTR [rax+0x30]
  42beb8:	mov    r13d,eax
  42bebb:	test   eax,eax
  42bebd:	je     0x42bf14
  42bebf:	mov    rcx,QWORD PTR [rsp+0x38]
  42bec4:	test   rcx,rcx
  42bec7:	je     0x42bed0
  42bec9:	mov    rax,QWORD PTR [rcx]
  42becc:	call   QWORD PTR [rax+0x10]
  42becf:	nop
  42bed0:	test   r12,r12
  42bed3:	je     0x42bee0
  42bed5:	mov    rax,QWORD PTR [r12]
  42bed9:	mov    rcx,r12
  42bedc:	call   QWORD PTR [rax+0x10]
  42bedf:	nop
  42bee0:	test   rbx,rbx
  42bee3:	je     0x42beef
  42bee5:	mov    rax,QWORD PTR [rbx]
  42bee8:	mov    rcx,rbx
  42beeb:	call   QWORD PTR [rax+0x10]
  42beee:	nop
  42beef:	test   rdi,rdi
  42bef2:	je     0x42befe
  42bef4:	mov    rdx,QWORD PTR [rdi]
  42bef7:	mov    rcx,rdi
  42befa:	call   QWORD PTR [rdx+0x10]
  42befd:	nop
  42befe:	test   rsi,rsi
  42bf01:	je     0x42bf0c
  42bf03:	mov    rdx,QWORD PTR [rsi]
  42bf06:	mov    rcx,rsi
  42bf09:	call   QWORD PTR [rdx+0x10]
  42bf0c:	mov    eax,r13d
  42bf0f:	jmp    0x42c15f
  42bf14:	mov    rcx,QWORD PTR [rsp+0x38]
  42bf19:	mov    r13,rcx
  42bf1c:	test   rcx,rcx
  42bf1f:	je     0x42bf2c
  42bf21:	mov    rax,QWORD PTR [rcx]
  42bf24:	call   QWORD PTR [rax+0x8]
  42bf27:	mov    rcx,QWORD PTR [rsp+0x38]
  42bf2c:	mov    rdx,QWORD PTR [rbx+0x10]
  42bf30:	test   rdx,rdx
  42bf33:	je     0x42bf43
  42bf35:	mov    rax,QWORD PTR [rdx]
  42bf38:	mov    rcx,rdx
  42bf3b:	call   QWORD PTR [rax+0x10]
  42bf3e:	mov    rcx,QWORD PTR [rsp+0x38]
  42bf43:	mov    QWORD PTR [rbx+0x10],r13
  42bf47:	test   rcx,rcx
  42bf4a:	je     0x42bf5b
  42bf4c:	mov    rax,QWORD PTR [rcx]
  42bf4f:	call   QWORD PTR [rax+0x10]
  42bf52:	mov    QWORD PTR [rsp+0x38],0x0
  42bf5b:	mov    r15,QWORD PTR [rsp+0x50]
  42bf60:	mov    QWORD PTR [rbx+0x18],r15
  42bf64:	mov    BYTE PTR [rbx+0x20],0x0
  42bf68:	mov    BYTE PTR [rbx+0x21],0x1
  42bf6c:	mov    rax,QWORD PTR [rsp+0xd0]
  42bf74:	mov    rcx,QWORD PTR [rax+0x30]
  42bf78:	mov    rax,QWORD PTR [rcx]
  42bf7b:	xor    r9d,r9d
  42bf7e:	xor    r8d,r8d
  42bf81:	mov    rdx,QWORD PTR [rsp+0x58]
  42bf86:	mov    rdx,QWORD PTR [rdx]
  42bf89:	call   QWORD PTR [rax+0x20]
  42bf8c:	mov    r13d,eax
  42bf8f:	test   eax,eax
  42bf91:	je     0x42bfe8
  42bf93:	mov    rcx,QWORD PTR [rsp+0x38]
  42bf98:	test   rcx,rcx
  42bf9b:	je     0x42bfa4
  42bf9d:	mov    rax,QWORD PTR [rcx]
  42bfa0:	call   QWORD PTR [rax+0x10]
  42bfa3:	nop
  42bfa4:	test   r12,r12
  42bfa7:	je     0x42bfb4
  42bfa9:	mov    rax,QWORD PTR [r12]
  42bfad:	mov    rcx,r12
  42bfb0:	call   QWORD PTR [rax+0x10]
  42bfb3:	nop
  42bfb4:	test   rbx,rbx
  42bfb7:	je     0x42bfc3
  42bfb9:	mov    rax,QWORD PTR [rbx]
  42bfbc:	mov    rcx,rbx
  42bfbf:	call   QWORD PTR [rax+0x10]
  42bfc2:	nop
  42bfc3:	test   rdi,rdi
  42bfc6:	je     0x42bfd2
  42bfc8:	mov    rdx,QWORD PTR [rdi]
  42bfcb:	mov    rcx,rdi
  42bfce:	call   QWORD PTR [rdx+0x10]
  42bfd1:	nop
  42bfd2:	test   rsi,rsi
  42bfd5:	je     0x42bfe0
  42bfd7:	mov    rdx,QWORD PTR [rsi]
  42bfda:	mov    rcx,rsi
  42bfdd:	call   QWORD PTR [rdx+0x10]
  42bfe0:	mov    eax,r13d
  42bfe3:	jmp    0x42c15f
  42bfe8:	mov    QWORD PTR [rdi+0x18],r15
  42bfec:	xor    r15d,r15d
  42bfef:	mov    QWORD PTR [rdi+0x20],r15
  42bff3:	mov    BYTE PTR [rdi+0x28],r15b
  42bff7:	mov    rax,QWORD PTR [r12]
  42bffb:	mov    QWORD PTR [rsp+0x28],rsi
  42c000:	mov    QWORD PTR [rsp+0x20],r15
  42c005:	xor    r9d,r9d
  42c008:	mov    r8,rbx
  42c00b:	mov    rdx,rdi
  42c00e:	mov    rcx,r12
  42c011:	call   QWORD PTR [rax+0x18]
  42c014:	mov    r13d,eax
  42c017:	cmp    eax,r15d
  42c01a:	je     0x42c06c
  42c01c:	mov    rcx,QWORD PTR [rsp+0x38]
  42c021:	cmp    rcx,r15
  42c024:	je     0x42c02d
  42c026:	mov    rax,QWORD PTR [rcx]
  42c029:	call   QWORD PTR [rax+0x10]
  42c02c:	nop
  42c02d:	mov    rax,QWORD PTR [r12]
  42c031:	mov    rcx,r12
  42c034:	call   QWORD PTR [rax+0x10]
  42c037:	nop
  42c038:	cmp    rbx,r15
  42c03b:	je     0x42c047
  42c03d:	mov    rax,QWORD PTR [rbx]
  42c040:	mov    rcx,rbx
  42c043:	call   QWORD PTR [rax+0x10]
  42c046:	nop
  42c047:	cmp    rdi,r15
  42c04a:	je     0x42c056
  42c04c:	mov    rdx,QWORD PTR [rdi]
  42c04f:	mov    rcx,rdi
  42c052:	call   QWORD PTR [rdx+0x10]
  42c055:	nop
  42c056:	cmp    rsi,r15
  42c059:	je     0x42c064
  42c05b:	mov    rdx,QWORD PTR [rsi]
  42c05e:	mov    rcx,rsi
  42c061:	call   QWORD PTR [rdx+0x10]
  42c064:	mov    eax,r13d
  42c067:	jmp    0x42c15f
  42c06c:	mov    r13d,r15d
  42c06f:	mov    eax,0x2
  42c074:	cmp    QWORD PTR [rbx+0x18],r15
  42c078:	cmovne r13d,eax
  42c07c:	mov    rcx,QWORD PTR [rbx+0x10]
  42c080:	cmp    rcx,r15
  42c083:	je     0x42c08f
  42c085:	mov    rax,QWORD PTR [rcx]
  42c088:	call   QWORD PTR [rax+0x10]
  42c08b:	mov    QWORD PTR [rbx+0x10],r15
  42c08f:	mov    rcx,QWORD PTR [rsp+0xf0]
  42c097:	mov    rax,QWORD PTR [rcx]
  42c09a:	mov    edx,r13d
  42c09d:	call   QWORD PTR [rax+0x38]
  42c0a0:	mov    r13d,eax
  42c0a3:	cmp    eax,r15d
  42c0a6:	je     0x42c0f5
  42c0a8:	mov    rcx,QWORD PTR [rsp+0x38]
  42c0ad:	cmp    rcx,r15
  42c0b0:	je     0x42c0b9
  42c0b2:	mov    rax,QWORD PTR [rcx]
  42c0b5:	call   QWORD PTR [rax+0x10]
  42c0b8:	nop
  42c0b9:	mov    rax,QWORD PTR [r12]
  42c0bd:	mov    rcx,r12
  42c0c0:	call   QWORD PTR [rax+0x10]
  42c0c3:	nop
  42c0c4:	cmp    rbx,r15
  42c0c7:	je     0x42c0d3
  42c0c9:	mov    rax,QWORD PTR [rbx]
  42c0cc:	mov    rcx,rbx
  42c0cf:	call   QWORD PTR [rax+0x10]
  42c0d2:	nop
  42c0d3:	cmp    rdi,r15
  42c0d6:	je     0x42c0e2
  42c0d8:	mov    rdx,QWORD PTR [rdi]
  42c0db:	mov    rcx,rdi
  42c0de:	call   QWORD PTR [rdx+0x10]
  42c0e1:	nop
  42c0e2:	cmp    rsi,r15
  42c0e5:	je     0x42c0f0
  42c0e7:	mov    rdx,QWORD PTR [rsi]
  42c0ea:	mov    rcx,rsi
  42c0ed:	call   QWORD PTR [rdx+0x10]
  42c0f0:	mov    eax,r13d
  42c0f3:	jmp    0x42c15f
  42c0f5:	mov    rcx,QWORD PTR [rsp+0x38]
  42c0fa:	cmp    rcx,r15
  42c0fd:	je     0x42c105
  42c0ff:	mov    rax,QWORD PTR [rcx]
  42c102:	call   QWORD PTR [rax+0x10]
  42c105:	inc    r14d
  42c108:	mov    DWORD PTR [rsp+0x40],r14d
  42c10d:	mov    r13d,DWORD PTR [rsp+0xe0]
  42c115:	jmp    0x42bd5c
  42c11a:	cmp    r12,r15
  42c11d:	je     0x42c12a
  42c11f:	mov    rax,QWORD PTR [r12]
  42c123:	mov    rcx,r12
  42c126:	call   QWORD PTR [rax+0x10]
  42c129:	nop
  42c12a:	cmp    rbx,r15
  42c12d:	je     0x42c139
  42c12f:	mov    rax,QWORD PTR [rbx]
  42c132:	mov    rcx,rbx
  42c135:	call   QWORD PTR [rax+0x10]
  42c138:	nop
  42c139:	cmp    rdi,r15
  42c13c:	je     0x42c148
  42c13e:	mov    rax,QWORD PTR [rdi]
  42c141:	mov    rcx,rdi
  42c144:	call   QWORD PTR [rax+0x10]
  42c147:	nop
  42c148:	cmp    rsi,r15
  42c14b:	je     0x42c156
  42c14d:	mov    rax,QWORD PTR [rsi]
  42c150:	mov    rcx,rsi
  42c153:	call   QWORD PTR [rax+0x10]
  42c156:	xor    eax,eax
  42c158:	jmp    0x42c15f
  42c15a:	mov    eax,0x8007000e
  42c15f:	add    rsp,0x90
  42c166:	pop    r15
  42c168:	pop    r14
  42c16a:	pop    r13
  42c16c:	pop    r12
  42c16e:	pop    rdi
  42c16f:	pop    rsi
  42c170:	pop    rbx
  42c171:	ret    
  42c172:	int3   
  42c173:	int3   
  42c174:	int3   
  42c175:	int3   
  42c176:	int3   
  42c177:	int3   
  42c178:	int3   
  42c179:	int3   
  42c17a:	int3   
  42c17b:	int3   
  42c17c:	rex.W push rbp
  42c17e:	sub    rsp,0x20
  42c182:	mov    rbp,rdx
  42c185:	mov    rcx,QWORD PTR [rbp+0x50]
  42c189:	call   0x40215c
  42c18e:	add    rsp,0x20
  42c192:	pop    rbp
  42c193:	ret    
  42c194:	int3   
  42c195:	int3   
  42c196:	int3   
  42c197:	int3   
  42c198:	int3   
  42c199:	int3   
  42c19a:	int3   
  42c19b:	int3   
  42c19c:	rex.W push rbp
  42c19e:	sub    rsp,0x20
  42c1a2:	mov    rbp,rdx
  42c1a5:	lea    rcx,[rbp+0x60]
  42c1a9:	call   0x4176b4
  42c1ae:	add    rsp,0x20
  42c1b2:	pop    rbp
  42c1b3:	ret    
  42c1b4:	int3   
  42c1b5:	int3   
  42c1b6:	int3   
  42c1b7:	int3   
  42c1b8:	int3   
  42c1b9:	int3   
  42c1ba:	int3   
  42c1bb:	int3   
  42c1bc:	rex.W push rbp
  42c1be:	sub    rsp,0x20
  42c1c2:	mov    rbp,rdx
  42c1c5:	lea    rcx,[rbp+0x68]
  42c1c9:	call   0x4176b4
  42c1ce:	add    rsp,0x20
  42c1d2:	pop    rbp
  42c1d3:	ret    
  42c1d4:	int3   
  42c1d5:	int3   
  42c1d6:	int3   
  42c1d7:	int3   
  42c1d8:	int3   
  42c1d9:	int3   
  42c1da:	int3   
  42c1db:	int3   
  42c1dc:	rex.W push rbp
  42c1de:	sub    rsp,0x20
  42c1e2:	mov    rbp,rdx
  42c1e5:	lea    rcx,[rbp+0x70]
  42c1e9:	call   0x4176b4
  42c1ee:	add    rsp,0x20
  42c1f2:	pop    rbp
  42c1f3:	ret    
  42c1f4:	int3   
  42c1f5:	int3   
  42c1f6:	int3   
  42c1f7:	int3   
  42c1f8:	int3   
  42c1f9:	int3   
  42c1fa:	int3   
  42c1fb:	int3   
  42c1fc:	rex.W push rbp
  42c1fe:	sub    rsp,0x20
  42c202:	mov    rbp,rdx
  42c205:	lea    rcx,[rbp+0x80]
  42c20c:	call   0x4176b4
  42c211:	add    rsp,0x20
  42c215:	pop    rbp
  42c216:	ret    
  42c217:	int3   
  42c218:	int3   
  42c219:	int3   
  42c21a:	int3   
  42c21b:	int3   
  42c21c:	rex.W push rbp
  42c21e:	sub    rsp,0x20
  42c222:	mov    rbp,rdx
  42c225:	lea    rcx,[rbp+0x38]
  42c229:	call   0x4176b4
  42c22e:	add    rsp,0x20
  42c232:	pop    rbp
  42c233:	ret    
  42c234:	int3   
  42c235:	int3   
  42c236:	int3   
  42c237:	int3   
  42c238:	int3   
  42c239:	int3   
  42c23a:	int3   
  42c23b:	int3   
  42c23c:	mov    QWORD PTR [rsp+0x10],rdx
  42c241:	push   rbp
  42c242:	sub    rsp,0x30
  42c246:	mov    rbp,rdx
  42c249:	lea    rax,[rip+0xffffffffffffff0a]        # 0x42c15a
  42c250:	jmp    0x42c252
  42c252:	add    rsp,0x30
  42c256:	pop    rbp
  42c257:	ret    
  42c258:	int3   
  42c259:	int3   
  42c25a:	int3   
  42c25b:	int3   
  42c25c:	sub    rsp,0x38
  42c260:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42c269:	mov    edx,edx
  42c26b:	mov    rax,QWORD PTR [rcx+0x10]
  42c26f:	mov    rdx,QWORD PTR [rax+rdx*8]
  42c273:	mov    r9,r8
  42c276:	mov    r8,QWORD PTR [rdx+0x8]
  42c27a:	mov    rdx,QWORD PTR [rdx]
  42c27d:	mov    rcx,QWORD PTR [rcx+0x28]
  42c281:	call   0x40d3dc
  42c286:	jmp    0x42c28d
  42c288:	mov    eax,0x8007000e
  42c28d:	add    rsp,0x38
  42c291:	ret    
  42c292:	int3   
  42c293:	int3   
  42c294:	int3   
  42c295:	int3   
  42c296:	int3   
  42c297:	int3   
  42c298:	int3   
  42c299:	int3   
  42c29a:	int3   
  42c29b:	int3   
  42c29c:	mov    QWORD PTR [rsp+0x10],rdx
  42c2a1:	push   rbp
  42c2a2:	sub    rsp,0x20
  42c2a6:	mov    rbp,rdx
  42c2a9:	lea    rax,[rip+0xffffffffffffffd8]        # 0x42c288
  42c2b0:	jmp    0x42c2b2
  42c2b2:	add    rsp,0x20
  42c2b6:	pop    rbp
  42c2b7:	ret    
  42c2b8:	int3   
  42c2b9:	int3   
  42c2ba:	int3   
  42c2bb:	int3   
  42c2bc:	rex.W push rbx
  42c2be:	push   rbp
  42c2bf:	push   rsi
  42c2c0:	push   rdi
  42c2c1:	mov    r11,rsp
  42c2c4:	sub    rsp,0x68
  42c2c8:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  42c2d1:	mov    rdi,r8
  42c2d4:	mov    ebp,edx
  42c2d6:	mov    rsi,rcx
  42c2d9:	mov    rcx,QWORD PTR [rcx+0x10]
  42c2dd:	test   rcx,rcx
  42c2e0:	je     0x42c384
  42c2e6:	cmp    BYTE PTR [rsi+0x109],0x0
  42c2ed:	jne    0x42c384
  42c2f3:	mov    rax,QWORD PTR [rcx]
  42c2f6:	lea    rdx,[r11+0x28]
  42c2fa:	mov    QWORD PTR [r11-0x40],rdx
  42c2fe:	lea    rdx,[r11+0x40]
  42c302:	mov    QWORD PTR [r11-0x48],rdx
  42c306:	lea    r9,[r11-0x38]
  42c30a:	mov    r8d,0x3
  42c310:	mov    edx,ebp
  42c312:	call   QWORD PTR [rax+0x20]
  42c315:	test   eax,eax
  42c317:	jne    0x42c384
  42c319:	cmp    DWORD PTR [rsp+0x90],0x51
  42c321:	jne    0x42c384
  42c323:	mov    ebx,DWORD PTR [rsp+0xa8]
  42c32a:	shr    ebx,1
  42c32c:	dec    ebx
  42c32e:	cmp    ebx,DWORD PTR [rdi+0xc]
  42c331:	jbe    0x42c33d
  42c333:	mov    edx,ebx
  42c335:	mov    rcx,rdi
  42c338:	call   0x402ea4
  42c33d:	mov    rdx,QWORD PTR [rdi]
  42c340:	test   ebx,ebx
  42c342:	je     0x42c371
  42c344:	mov    r8d,ebx
  42c347:	mov    rax,QWORD PTR [rsp+0x30]
  42c34c:	movzx  ecx,WORD PTR [rax]
  42c34f:	add    rax,0x2
  42c353:	mov    QWORD PTR [rsp+0x30],rax
  42c358:	mov    eax,0x5c
  42c35d:	cmp    cx,0x2f
  42c361:	cmove  cx,ax
  42c365:	mov    WORD PTR [rdx],cx
  42c368:	add    rdx,0x2
  42c36c:	dec    r8
  42c36f:	jne    0x42c347
  42c371:	mov    WORD PTR [rdx],0x0
  42c376:	mov    DWORD PTR [rdi+0x8],ebx
  42c379:	test   ebx,ebx
  42c37b:	je     0x42c384
  42c37d:	xor    eax,eax
  42c37f:	jmp    0x42c42a
  42c384:	mov    WORD PTR [rsp+0x40],0x0
  42c38b:	mov    WORD PTR [rsp+0x42],0x0
  42c392:	mov    QWORD PTR [rsp+0x48],0x0
  42c39b:	mov    rcx,QWORD PTR [rsi]
  42c39e:	mov    rax,QWORD PTR [rcx]
  42c3a1:	lea    r9,[rsp+0x40]
  42c3a6:	mov    r8d,0x3
  42c3ac:	mov    edx,ebp
  42c3ae:	call   QWORD PTR [rax+0x30]
  42c3b1:	mov    ebx,eax
  42c3b3:	test   eax,eax
  42c3b5:	je     0x42c3c5
  42c3b7:	lea    rcx,[rsp+0x40]
  42c3bc:	call   0x40b028
  42c3c1:	mov    eax,ebx
  42c3c3:	jmp    0x42c42a
  42c3c5:	movzx  eax,WORD PTR [rsp+0x40]
  42c3ca:	cmp    ax,0x8
  42c3ce:	jne    0x42c3e4
  42c3d0:	mov    rdx,QWORD PTR [rsp+0x48]
  42c3d5:	test   rdx,rdx
  42c3d8:	je     0x42c41b
  42c3da:	mov    rcx,rdi
  42c3dd:	call   0x403354
  42c3e2:	jmp    0x42c3f8
  42c3e4:	test   ax,ax
  42c3e7:	jne    0x42c41b
  42c3e9:	mov    DWORD PTR [rdi+0x8],0x0
  42c3f0:	mov    rax,QWORD PTR [rdi]
  42c3f3:	mov    WORD PTR [rax],0x0
  42c3f8:	lea    rcx,[rsp+0x40]
  42c3fd:	call   0x40b028
  42c402:	cmp    DWORD PTR [rdi+0x8],0x0
  42c406:	jne    0x42c417
  42c408:	mov    r8,rdi
  42c40b:	mov    edx,ebp
  42c40d:	mov    rcx,rsi
  42c410:	call   0x42a9b8
  42c415:	jmp    0x42c42a
  42c417:	xor    eax,eax
  42c419:	jmp    0x42c42a
  42c41b:	lea    rcx,[rsp+0x40]
  42c420:	call   0x40b028
  42c425:	mov    eax,0x80004005
  42c42a:	add    rsp,0x68
  42c42e:	pop    rdi
  42c42f:	pop    rsi
  42c430:	pop    rbp
  42c431:	pop    rbx
  42c432:	ret    
  42c433:	int3   
  42c434:	int3   
  42c435:	int3   
  42c436:	int3   
  42c437:	int3   
  42c438:	int3   
  42c439:	int3   
  42c43a:	int3   
  42c43b:	int3   
  42c43c:	rex.W push rbp
  42c43e:	sub    rsp,0x20
  42c442:	mov    rbp,rdx
  42c445:	lea    rcx,[rbp+0x40]
  42c449:	call   0x40b830
  42c44e:	add    rsp,0x20
  42c452:	pop    rbp
  42c453:	ret    
  42c454:	rex.W push rbx
  42c456:	push   rsi
  42c457:	push   rdi
  42c458:	sub    rsp,0x20
  42c45c:	mov    rdi,r8
  42c45f:	mov    esi,edx
  42c461:	mov    rbx,rcx
  42c464:	call   0x42c2bc
  42c469:	test   eax,eax
  42c46b:	jne    0x42c4a9
  42c46d:	cmp    BYTE PTR [rbx+0x10b],al
  42c473:	je     0x42c4a7
  42c475:	mov    rcx,QWORD PTR [rbx]
  42c478:	lea    r9,[rsp+0x58]
  42c47d:	lea    r8d,[rax+0x41]
  42c481:	mov    edx,esi
  42c483:	mov    BYTE PTR [rsp+0x58],al
  42c487:	call   0x429798
  42c48c:	test   eax,eax
  42c48e:	jne    0x42c4a9
  42c490:	cmp    BYTE PTR [rsp+0x58],al
  42c494:	je     0x42c4a7
  42c496:	lea    r8,[rip+0x244d3]        # 0x450970
  42c49d:	xor    edx,edx
  42c49f:	mov    rcx,rdi
  42c4a2:	call   0x403980
  42c4a7:	xor    eax,eax
  42c4a9:	add    rsp,0x20
  42c4ad:	pop    rdi
  42c4ae:	pop    rsi
  42c4af:	pop    rbx
  42c4b0:	ret    
  42c4b1:	int3   
  42c4b2:	int3   
  42c4b3:	int3   
  42c4b4:	test   r8d,r8d
  42c4b7:	je     0x42c583
  42c4bd:	push   rbx
  42c4be:	push   rbp
  42c4bf:	push   rsi
  42c4c0:	push   rdi
  42c4c1:	push   r12
  42c4c3:	push   r13
  42c4c5:	push   r15
  42c4c7:	sub    rsp,0x20
  42c4cb:	mov    r13,r9
  42c4ce:	mov    rsi,rdx
  42c4d1:	mov    r15,rcx
  42c4d4:	xor    ebx,ebx
  42c4d6:	mov    ebp,r8d
  42c4d9:	mov    rax,QWORD PTR [rsi]
  42c4dc:	mov    edx,DWORD PTR [rbx+rax*1]
  42c4df:	test   edx,edx
  42c4e1:	js     0x42c568
  42c4e7:	mov    rax,QWORD PTR [r15+0x40]
  42c4eb:	mov    r8,QWORD PTR [rax+rdx*8]
  42c4ef:	cmp    DWORD PTR [r8+0x44],0x0
  42c4f4:	jne    0x42c555
  42c4f6:	mov    r12d,DWORD PTR [r8+0x50]
  42c4fa:	xor    r11d,r11d
  42c4fd:	test   r12d,r12d
  42c500:	je     0x42c568
  42c502:	mov    r10,QWORD PTR [r8+0x48]
  42c506:	mov    rax,QWORD PTR [r10]
  42c509:	mov    rcx,QWORD PTR [rax+0x8]
  42c50d:	test   rcx,rcx
  42c510:	jne    0x42c521
  42c512:	cmp    QWORD PTR [rsp+0x88],rcx
  42c51a:	je     0x42c555
  42c51c:	test   rcx,rcx
  42c51f:	je     0x42c584
  42c521:	cmp    rcx,QWORD PTR [rsp+0x88]
  42c529:	ja     0x42c584
  42c52b:	mov    rdi,QWORD PTR [rax]
  42c52e:	xor    r9d,r9d
  42c531:	test   rcx,rcx
  42c534:	je     0x42c555
  42c536:	mov    r8,QWORD PTR [rsp+0x80]
  42c53e:	sub    rdi,r8
  42c541:	mov    al,BYTE PTR [rdi+r8*1]
  42c545:	cmp    BYTE PTR [r8],al
  42c548:	jne    0x42c584
  42c54a:	inc    r9
  42c54d:	inc    r8
  42c550:	cmp    r9,rcx
  42c553:	jb     0x42c541
  42c555:	mov    rcx,r13
  42c558:	call   0x4131dc
  42c55d:	mov    r11,QWORD PTR [rsi]
  42c560:	mov    DWORD PTR [rbx+r11*1],0xffffffff
  42c568:	add    rbx,0x4
  42c56c:	dec    rbp
  42c56f:	jne    0x42c4d9
  42c575:	add    rsp,0x20
  42c579:	pop    r15
  42c57b:	pop    r13
  42c57d:	pop    r12
  42c57f:	pop    rdi
  42c580:	pop    rsi
  42c581:	pop    rbp
  42c582:	pop    rbx
  42c583:	ret    
  42c584:	inc    r11d
  42c587:	add    r10,0x8
  42c58b:	cmp    r11d,r12d
  42c58e:	jae    0x42c568
  42c590:	jmp    0x42c506
  42c595:	int3   
  42c596:	int3   
  42c597:	int3   
  42c598:	rex.W push rbx
  42c59a:	push   rbp
  42c59b:	push   rsi
  42c59c:	push   rdi
  42c59d:	sub    rsp,0x38
  42c5a1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42c5aa:	mov    rsi,r9
  42c5ad:	mov    ebp,r8d
  42c5b0:	mov    rdi,rdx
  42c5b3:	mov    r8,r9
  42c5b6:	mov    edx,ebp
  42c5b8:	mov    rcx,QWORD PTR [rdi]
  42c5bb:	call   0x42b6f0
  42c5c0:	test   eax,eax
  42c5c2:	jne    0x42c6dc
  42c5c8:	mov    r9,QWORD PTR [rsi]
  42c5cb:	test   r9,r9
  42c5ce:	jne    0x42c5d7
  42c5d0:	xor    eax,eax
  42c5d2:	jmp    0x42c6dc
  42c5d7:	mov    rdx,QWORD PTR [rdi]
  42c5da:	cmp    BYTE PTR [rdx+0x38],0x0
  42c5de:	je     0x42c66e
  42c5e4:	mov    rax,QWORD PTR [rdx+0x40]
  42c5e8:	mov    rcx,QWORD PTR [rax+rbp*8]
  42c5ec:	cmp    DWORD PTR [rcx+0x58],0x0
  42c5f0:	jl     0x42c608
  42c5f2:	mov    ecx,DWORD PTR [rcx+0x58]
  42c5f5:	mov    rax,QWORD PTR [rdx+0x18]
  42c5f9:	mov    rdx,QWORD PTR [rax+rcx*8]
  42c5fd:	xor    eax,eax
  42c5ff:	cmp    QWORD PTR [rdx+0x38],rax
  42c603:	sete   al
  42c606:	jmp    0x42c610
  42c608:	xor    eax,eax
  42c60a:	cmp    DWORD PTR [rdx+0x20],eax
  42c60d:	setne  al
  42c610:	test   eax,eax
  42c612:	je     0x42c66e
  42c614:	mov    QWORD PTR [rsp+0x68],0x0
  42c61d:	mov    rax,QWORD PTR [r9]
  42c620:	lea    r8,[rsp+0x68]
  42c625:	lea    rdx,[rip+0x276cc]        # 0x453cf8
  42c62c:	mov    rcx,r9
  42c62f:	call   QWORD PTR [rax]
  42c631:	mov    rcx,QWORD PTR [rsp+0x68]
  42c636:	test   rcx,rcx
  42c639:	je     0x42c663
  42c63b:	mov    rax,QWORD PTR [rcx]
  42c63e:	mov    rdx,QWORD PTR [rdi]
  42c641:	call   QWORD PTR [rax+0x18]
  42c644:	mov    ebx,eax
  42c646:	test   eax,eax
  42c648:	je     0x42c65e
  42c64a:	mov    rcx,QWORD PTR [rsp+0x68]
  42c64f:	test   rcx,rcx
  42c652:	je     0x42c65a
  42c654:	mov    rdx,QWORD PTR [rcx]
  42c657:	call   QWORD PTR [rdx+0x10]
  42c65a:	mov    eax,ebx
  42c65c:	jmp    0x42c6dc
  42c65e:	mov    rcx,QWORD PTR [rsp+0x68]
  42c663:	test   rcx,rcx
  42c666:	je     0x42c66e
  42c668:	mov    rax,QWORD PTR [rcx]
  42c66b:	call   QWORD PTR [rax+0x10]
  42c66e:	mov    rax,QWORD PTR [rdi]
  42c671:	mov    rcx,QWORD PTR [rax+0x40]
  42c675:	mov    rax,QWORD PTR [rcx+rbp*8]
  42c679:	mov    ecx,DWORD PTR [rax]
  42c67b:	shr    ecx,0x9
  42c67e:	test   cl,0x1
  42c681:	je     0x42c6c5
  42c683:	mov    QWORD PTR [rsp+0x68],0x0
  42c68c:	mov    rcx,QWORD PTR [rsi]
  42c68f:	mov    rax,QWORD PTR [rcx]
  42c692:	lea    r8,[rsp+0x68]
  42c697:	lea    rdx,[rip+0x2773a]        # 0x453dd8
  42c69e:	call   QWORD PTR [rax]
  42c6a0:	mov    rcx,QWORD PTR [rsp+0x68]
  42c6a5:	test   rcx,rcx
  42c6a8:	je     0x42c6ba
  42c6aa:	mov    rax,QWORD PTR [rcx]
  42c6ad:	mov    edx,0x1
  42c6b2:	call   QWORD PTR [rax+0x18]
  42c6b5:	mov    rcx,QWORD PTR [rsp+0x68]
  42c6ba:	test   rcx,rcx
  42c6bd:	je     0x42c6c5
  42c6bf:	mov    rax,QWORD PTR [rcx]
  42c6c2:	call   QWORD PTR [rax+0x10]
  42c6c5:	mov    rdx,QWORD PTR [rdi+0x58]
  42c6c9:	test   rdx,rdx
  42c6cc:	je     0x42c6da
  42c6ce:	mov    rcx,QWORD PTR [rsi]
  42c6d1:	call   0x433ebc
  42c6d6:	test   eax,eax
  42c6d8:	jne    0x42c6dc
  42c6da:	xor    eax,eax
  42c6dc:	add    rsp,0x38
  42c6e0:	pop    rdi
  42c6e1:	pop    rsi
  42c6e2:	pop    rbp
  42c6e3:	pop    rbx
  42c6e4:	ret    
  42c6e5:	int3   
  42c6e6:	int3   
  42c6e7:	int3   
  42c6e8:	rex.W push rbp
  42c6ea:	sub    rsp,0x20
  42c6ee:	mov    rbp,rdx
  42c6f1:	lea    rcx,[rbp+0x68]
  42c6f5:	call   0x4176b4
  42c6fa:	add    rsp,0x20
  42c6fe:	pop    rbp
  42c6ff:	ret    
  42c700:	int3   
  42c701:	int3   
  42c702:	int3   
  42c703:	int3   
  42c704:	int3   
  42c705:	int3   
  42c706:	int3   
  42c707:	int3   
  42c708:	rex.W push rbp
  42c70a:	sub    rsp,0x20
  42c70e:	mov    rbp,rdx
  42c711:	lea    rcx,[rbp+0x68]
  42c715:	call   0x4176b4
  42c71a:	add    rsp,0x20
  42c71e:	pop    rbp
  42c71f:	ret    
  42c720:	rex.W push rbx
  42c722:	push   rbp
  42c723:	push   rsi
  42c724:	push   rdi
  42c725:	push   r12
  42c727:	sub    rsp,0x40
  42c72b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42c734:	mov    rbx,r8
  42c737:	mov    rsi,rdx
  42c73a:	mov    rdi,rcx
  42c73d:	lea    rdx,[rsp+0x28]
  42c742:	mov    rcx,rsi
  42c745:	call   0x42b6b4
  42c74a:	nop
  42c74b:	mov    rdx,rax
  42c74e:	lea    rcx,[rbx+0x20]
  42c752:	call   0x4032f8
  42c757:	nop
  42c758:	mov    rcx,QWORD PTR [rsp+0x28]
  42c75d:	call   0x40215c
  42c762:	xor    r12d,r12d
  42c765:	mov    BYTE PTR [rbx+0x58],r12b
  42c769:	lea    rdx,[rsi+0x18]
  42c76d:	lea    rcx,[rbx+0x48]
  42c771:	call   0x4032f8
  42c776:	lea    r8,[rbx+0x5d]
  42c77a:	lea    edx,[r12+0x54]
  42c77f:	mov    rcx,rdi
  42c782:	call   0x429834
  42c787:	cmp    eax,r12d
  42c78a:	jne    0x42ca05
  42c790:	mov    eax,DWORD PTR [rsi]
  42c792:	shr    eax,0x9
  42c795:	and    al,0x1
  42c797:	mov    BYTE PTR [rbx+0x5c],al
  42c79a:	mov    WORD PTR [rsp+0x28],r12w
  42c7a0:	mov    WORD PTR [rsp+0x2a],r12w
  42c7a6:	mov    QWORD PTR [rsp+0x30],r12
  42c7ab:	mov    rax,QWORD PTR [rdi]
  42c7ae:	lea    r8,[rsp+0x28]
  42c7b3:	mov    edx,0xc
  42c7b8:	mov    rcx,rdi
  42c7bb:	call   QWORD PTR [rax+0x40]
  42c7be:	mov    esi,eax
  42c7c0:	cmp    eax,r12d
  42c7c3:	je     0x42c7d6
  42c7c5:	lea    rcx,[rsp+0x28]
  42c7ca:	call   0x40b028
  42c7cf:	mov    eax,esi
  42c7d1:	jmp    0x42ca05
  42c7d6:	cmp    WORD PTR [rsp+0x28],0x40
  42c7dc:	jne    0x42c7eb
  42c7de:	mov    BYTE PTR [rbx+0x58],0x1
  42c7e2:	mov    rax,QWORD PTR [rsp+0x30]
  42c7e7:	mov    QWORD PTR [rbx+0x30],rax
  42c7eb:	lea    rcx,[rsp+0x28]
  42c7f0:	call   0x40b028
  42c7f5:	cmp    BYTE PTR [rbx+0x58],r12b
  42c7f9:	jne    0x42c856
  42c7fb:	mov    WORD PTR [rsp+0x28],r12w
  42c801:	mov    WORD PTR [rsp+0x2a],r12w
  42c807:	mov    QWORD PTR [rsp+0x30],r12
  42c80c:	mov    rax,QWORD PTR [rdi]
  42c80f:	lea    r8,[rsp+0x28]
  42c814:	mov    edx,0xa
  42c819:	mov    rcx,rdi
  42c81c:	call   QWORD PTR [rax+0x40]
  42c81f:	mov    esi,eax
  42c821:	cmp    eax,r12d
  42c824:	je     0x42c837
  42c826:	lea    rcx,[rsp+0x28]
  42c82b:	call   0x40b028
  42c830:	mov    eax,esi
  42c832:	jmp    0x42ca05
  42c837:	cmp    WORD PTR [rsp+0x28],0x40
  42c83d:	jne    0x42c84c
  42c83f:	mov    BYTE PTR [rbx+0x58],0x1
  42c843:	mov    rax,QWORD PTR [rsp+0x30]
  42c848:	mov    QWORD PTR [rbx+0x30],rax
  42c84c:	lea    rcx,[rsp+0x28]
  42c851:	call   0x40b028
  42c856:	mov    WORD PTR [rsp+0x28],r12w
  42c85c:	mov    WORD PTR [rsp+0x2a],r12w
  42c862:	mov    QWORD PTR [rsp+0x30],r12
  42c867:	mov    rax,QWORD PTR [rdi]
  42c86a:	lea    r8,[rsp+0x28]
  42c86f:	mov    edx,0x4
  42c874:	mov    rcx,rdi
  42c877:	call   QWORD PTR [rax+0x40]
  42c87a:	mov    esi,eax
  42c87c:	cmp    eax,r12d
  42c87f:	je     0x42c883
  42c881:	jmp    0x42c8c1
  42c883:	cmp    WORD PTR [rsp+0x28],0x8
  42c889:	jne    0x42c8a7
  42c88b:	lea    rcx,[rbx+0x10]
  42c88f:	mov    rdx,QWORD PTR [rsp+0x30]
  42c894:	call   0x403354
  42c899:	mov    DWORD PTR [rbx+0x28],r12d
  42c89d:	mov    rax,QWORD PTR [rbx+0x20]
  42c8a1:	mov    WORD PTR [rax],r12w
  42c8a5:	jmp    0x42c8e9
  42c8a7:	mov    rax,QWORD PTR [rdi]
  42c8aa:	lea    r8,[rsp+0x28]
  42c8af:	mov    edx,0x5
  42c8b4:	mov    rcx,rdi
  42c8b7:	call   QWORD PTR [rax+0x40]
  42c8ba:	cmp    eax,r12d
  42c8bd:	je     0x42c8d2
  42c8bf:	mov    esi,eax
  42c8c1:	lea    rcx,[rsp+0x28]
  42c8c6:	call   0x40b028
  42c8cb:	mov    eax,esi
  42c8cd:	jmp    0x42ca05
  42c8d2:	cmp    WORD PTR [rsp+0x28],0x8
  42c8d8:	jne    0x42c8e9
  42c8da:	mov    rdx,QWORD PTR [rsp+0x30]
  42c8df:	lea    rcx,[rbx+0x20]
  42c8e3:	call   0x403354
  42c8e8:	nop
  42c8e9:	lea    rcx,[rsp+0x28]
  42c8ee:	call   0x40b028
  42c8f3:	mov    WORD PTR [rsp+0x28],r12w
  42c8f9:	mov    WORD PTR [rsp+0x2a],r12w
  42c8ff:	mov    QWORD PTR [rsp+0x30],r12
  42c904:	mov    rax,QWORD PTR [rdi]
  42c907:	lea    r8,[rsp+0x28]
  42c90c:	mov    edx,0x52
  42c911:	mov    rcx,rdi
  42c914:	call   QWORD PTR [rax+0x40]
  42c917:	mov    esi,eax
  42c919:	cmp    eax,r12d
  42c91c:	je     0x42c92f
  42c91e:	lea    rcx,[rsp+0x28]
  42c923:	call   0x40b028
  42c928:	mov    eax,esi
  42c92a:	jmp    0x42ca05
  42c92f:	cmp    WORD PTR [rsp+0x28],0x8
  42c935:	jne    0x42c946
  42c937:	lea    rcx,[rbx+0x38]
  42c93b:	mov    rdx,QWORD PTR [rsp+0x30]
  42c940:	call   0x403354
  42c945:	nop
  42c946:	lea    rcx,[rsp+0x28]
  42c94b:	call   0x40b028
  42c950:	mov    r11,QWORD PTR [rdi]
  42c953:	lea    rdx,[rsp+0x80]
  42c95b:	mov    rcx,rdi
  42c95e:	call   QWORD PTR [r11+0x28]
  42c962:	cmp    eax,r12d
  42c965:	jne    0x42ca05
  42c96b:	mov    QWORD PTR [rbx+0x70],r12
  42c96f:	mov    QWORD PTR [rbx+0x68],r12
  42c973:	mov    QWORD PTR [rbx+0x60],r12
  42c977:	mov    esi,r12d
  42c97a:	cmp    DWORD PTR [rsp+0x80],r12d
  42c982:	jbe    0x42c9f5
  42c984:	mov    QWORD PTR [rsp+0x88],r12
  42c98c:	mov    BYTE PTR [rsp+0x78],r12b
  42c991:	lea    r9,[rsp+0x78]
  42c996:	lea    r8,[rsp+0x88]
  42c99e:	mov    edx,esi
  42c9a0:	mov    rcx,rdi
  42c9a3:	call   0x42999c
  42c9a8:	cmp    BYTE PTR [rsp+0x78],r12b
  42c9ad:	je     0x42c9bf
  42c9af:	mov    BYTE PTR [rbx+0x59],0x1
  42c9b3:	mov    rax,QWORD PTR [rsp+0x88]
  42c9bb:	add    QWORD PTR [rbx+0x60],rax
  42c9bf:	mov    BYTE PTR [rsp+0x78],r12b
  42c9c4:	lea    r9,[rsp+0x78]
  42c9c9:	mov    r8d,0x6
  42c9cf:	mov    edx,esi
  42c9d1:	mov    rcx,rdi
  42c9d4:	call   0x429798
  42c9d9:	cmp    BYTE PTR [rsp+0x78],r12b
  42c9de:	je     0x42c9e6
  42c9e0:	inc    QWORD PTR [rbx+0x68]
  42c9e4:	jmp    0x42c9ea
  42c9e6:	inc    QWORD PTR [rbx+0x70]
  42c9ea:	inc    esi
  42c9ec:	cmp    esi,DWORD PTR [rsp+0x80]
  42c9f3:	jb     0x42c984
  42c9f5:	cmp    QWORD PTR [rbx+0x68],r12
  42c9f9:	je     0x42c9ff
  42c9fb:	mov    BYTE PTR [rbx+0x5a],0x1
  42c9ff:	mov    BYTE PTR [rbx+0x5b],0x1
  42ca03:	xor    eax,eax
  42ca05:	add    rsp,0x40
  42ca09:	pop    r12
  42ca0b:	pop    rdi
  42ca0c:	pop    rsi
  42ca0d:	pop    rbp
  42ca0e:	pop    rbx
  42ca0f:	ret    
  42ca10:	rex.W push rbp
  42ca12:	sub    rsp,0x20
  42ca16:	mov    rbp,rdx
  42ca19:	lea    rcx,[rbp+0x28]
  42ca1d:	call   0x401000
  42ca22:	add    rsp,0x20
  42ca26:	pop    rbp
  42ca27:	ret    
  42ca28:	int3   
  42ca29:	int3   
  42ca2a:	int3   
  42ca2b:	int3   
  42ca2c:	int3   
  42ca2d:	int3   
  42ca2e:	int3   
  42ca2f:	int3   
  42ca30:	rex.W push rbp
  42ca32:	sub    rsp,0x20
  42ca36:	mov    rbp,rdx
  42ca39:	lea    rcx,[rbp+0x28]
  42ca3d:	call   0x40b830
  42ca42:	add    rsp,0x20
  42ca46:	pop    rbp
  42ca47:	ret    
  42ca48:	int3   
  42ca49:	int3   
  42ca4a:	int3   
  42ca4b:	int3   
  42ca4c:	int3   
  42ca4d:	int3   
  42ca4e:	int3   
  42ca4f:	int3   
  42ca50:	rex.W push rbp
  42ca52:	sub    rsp,0x20
  42ca56:	mov    rbp,rdx
  42ca59:	lea    rcx,[rbp+0x28]
  42ca5d:	call   0x40b830
  42ca62:	add    rsp,0x20
  42ca66:	pop    rbp
  42ca67:	ret    
  42ca68:	int3   
  42ca69:	int3   
  42ca6a:	int3   
  42ca6b:	int3   
  42ca6c:	int3   
  42ca6d:	int3   
  42ca6e:	int3   
  42ca6f:	int3   
  42ca70:	rex.W push rbp
  42ca72:	sub    rsp,0x20
  42ca76:	mov    rbp,rdx
  42ca79:	lea    rcx,[rbp+0x28]
  42ca7d:	call   0x40b830
  42ca82:	add    rsp,0x20
  42ca86:	pop    rbp
  42ca87:	ret    
  42ca88:	int3   
  42ca89:	int3   
  42ca8a:	int3   
  42ca8b:	int3   
  42ca8c:	int3   
  42ca8d:	int3   
  42ca8e:	int3   
  42ca8f:	int3   
  42ca90:	rex.W push rbp
  42ca92:	sub    rsp,0x20
  42ca96:	mov    rbp,rdx
  42ca99:	lea    rcx,[rbp+0x28]
  42ca9d:	call   0x40b830
  42caa2:	add    rsp,0x20
  42caa6:	pop    rbp
  42caa7:	ret    
  42caa8:	rex.W push rbx
  42caaa:	push   rbp
  42caab:	push   rsi
  42caac:	push   rdi
  42caad:	push   r12
  42caaf:	sub    rsp,0x20
  42cab3:	xor    ebx,ebx
  42cab5:	mov    rbp,r8
  42cab8:	mov    rdi,rdx
  42cabb:	cmp    DWORD PTR [rdx+0x8],ebx
  42cabe:	mov    r12,rcx
  42cac1:	jbe    0x42caef
  42cac3:	xor    esi,esi
  42cac5:	mov    rax,QWORD PTR [rdi]
  42cac8:	mov    rdx,rbp
  42cacb:	mov    ecx,DWORD PTR [rax+rsi*1]
  42cace:	mov    rax,QWORD PTR [r12+0x40]
  42cad3:	mov    rcx,QWORD PTR [rax+rcx*8]
  42cad7:	mov    rcx,QWORD PTR [rcx+0x18]
  42cadb:	call   0x402864
  42cae0:	test   al,al
  42cae2:	jne    0x42caf4
  42cae4:	inc    ebx
  42cae6:	add    rsi,0x4
  42caea:	cmp    ebx,DWORD PTR [rdi+0x8]
  42caed:	jb     0x42cac5
  42caef:	mov    ebx,0xffffffff
  42caf4:	mov    rcx,QWORD PTR [rdi]
  42caf7:	call   0x40215c
  42cafc:	mov    eax,ebx
  42cafe:	add    rsp,0x20
  42cb02:	pop    r12
  42cb04:	pop    rdi
  42cb05:	pop    rsi
  42cb06:	pop    rbp
  42cb07:	pop    rbx
  42cb08:	ret    
  42cb09:	int3   
  42cb0a:	int3   
  42cb0b:	int3   
  42cb0c:	rex.W push rbx
  42cb0e:	push   rbp
  42cb0f:	push   rsi
  42cb10:	push   rdi
  42cb11:	sub    rsp,0x28
  42cb15:	mov    rsi,rdx
  42cb18:	mov    rdi,r8
  42cb1b:	mov    rbx,rcx
  42cb1e:	mov    QWORD PTR [r8],0x0
  42cb25:	mov    ebp,0x10
  42cb2a:	lea    rdx,[rip+0x282bf]        # 0x454df0
  42cb31:	mov    r8,rbp
  42cb34:	mov    rcx,rsi
  42cb37:	call   0x44b786
  42cb3c:	test   eax,eax
  42cb3e:	jne    0x42cb45
  42cb40:	mov    QWORD PTR [rdi],rbx
  42cb43:	jmp    0x42cb84
  42cb45:	lea    rdx,[rip+0x2735c]        # 0x453ea8
  42cb4c:	mov    r8,rbp
  42cb4f:	mov    rcx,rsi
  42cb52:	call   0x44b786
  42cb57:	test   eax,eax
  42cb59:	je     0x42cb40
  42cb5b:	lea    rdx,[rip+0x27246]        # 0x453da8
  42cb62:	mov    r8,rbp
  42cb65:	mov    rcx,rsi
  42cb68:	call   0x44b786
  42cb6d:	test   eax,eax
  42cb6f:	jne    0x42cb8b
  42cb71:	mov    rax,rbx
  42cb74:	lea    rdx,[rbx+0x8]
  42cb78:	neg    rax
  42cb7b:	sbb    rcx,rcx
  42cb7e:	and    rcx,rdx
  42cb81:	mov    QWORD PTR [rdi],rcx
  42cb84:	inc    DWORD PTR [rbx+0x10]
  42cb87:	xor    eax,eax
  42cb89:	jmp    0x42cb90
  42cb8b:	mov    eax,0x80004002
  42cb90:	add    rsp,0x28
  42cb94:	pop    rdi
  42cb95:	pop    rsi
  42cb96:	pop    rbp
  42cb97:	pop    rbx
  42cb98:	ret    
  42cb99:	int3   
  42cb9a:	int3   
  42cb9b:	int3   
  42cb9c:	sub    rcx,0x8
  42cba0:	jmp    0x42cb0c
  42cba5:	int3   
  42cba6:	int3   
  42cba7:	int3   
  42cba8:	rex.W push rbx
  42cbaa:	push   rbp
  42cbab:	push   rsi
  42cbac:	push   rdi
  42cbad:	sub    rsp,0x28
  42cbb1:	movsxd rbx,DWORD PTR [rcx+0x8]
  42cbb5:	mov    rdi,rcx
  42cbb8:	test   ebx,ebx
  42cbba:	je     0x42cbfa
  42cbbc:	mov    rsi,rbx
  42cbbf:	shl    rsi,0x3
  42cbc3:	mov    rax,QWORD PTR [rdi]
  42cbc6:	sub    rsi,0x8
  42cbca:	add    ebx,0xffffffff
  42cbcd:	mov    rbp,QWORD PTR [rsi+rax*1]
  42cbd1:	mov    rcx,QWORD PTR [rbp+0x8]
  42cbd5:	test   rcx,rcx
  42cbd8:	je     0x42cbe8
  42cbda:	mov    rax,QWORD PTR [rcx]
  42cbdd:	call   QWORD PTR [rax+0x10]
  42cbe0:	mov    QWORD PTR [rbp+0x8],0x0
  42cbe8:	mov    rcx,QWORD PTR [rbp+0x0]
  42cbec:	mov    rax,QWORD PTR [rcx]
  42cbef:	call   QWORD PTR [rax+0x20]
  42cbf2:	test   eax,eax
  42cbf4:	jne    0x42cc00
  42cbf6:	test   ebx,ebx
  42cbf8:	jne    0x42cbc3
  42cbfa:	mov    BYTE PTR [rdi+0x28],0x0
  42cbfe:	xor    eax,eax
  42cc00:	add    rsp,0x28
  42cc04:	pop    rdi
  42cc05:	pop    rsi
  42cc06:	pop    rbp
  42cc07:	pop    rbx
  42cc08:	ret    
  42cc09:	int3   
  42cc0a:	int3   
  42cc0b:	int3   
  42cc0c:	rex.W push rbx
  42cc0e:	sub    rsp,0x20
  42cc12:	add    DWORD PTR [rcx+0x8],0xffffffff
  42cc16:	mov    eax,DWORD PTR [rcx+0x8]
  42cc19:	mov    rbx,rcx
  42cc1c:	jne    0x42cc40
  42cc1e:	mov    rcx,QWORD PTR [rcx+0x50]
  42cc22:	call   0x40215c
  42cc27:	mov    rcx,QWORD PTR [rbx+0x10]
  42cc2b:	test   rcx,rcx
  42cc2e:	je     0x42cc36
  42cc30:	mov    rax,QWORD PTR [rcx]
  42cc33:	call   QWORD PTR [rax+0x10]
  42cc36:	mov    rcx,rbx
  42cc39:	call   0x40215c
  42cc3e:	xor    eax,eax
  42cc40:	add    rsp,0x20
  42cc44:	pop    rbx
  42cc45:	ret    
  42cc46:	int3   
  42cc47:	int3   
  42cc48:	rex.W push rbx
  42cc4a:	push   rdi
  42cc4b:	sub    rsp,0xb8
  42cc52:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42cc5b:	mov    rbx,rdx
  42cc5e:	mov    rdi,rcx
  42cc61:	cmp    QWORD PTR [rcx+0x28],rdx
  42cc65:	jae    0x42cceb
  42cc6b:	lea    rcx,[rsp+0x30]
  42cc70:	call   0x429630
  42cc75:	nop
  42cc76:	mov    r8,QWORD PTR [rdi+0x28]
  42cc7a:	mov    QWORD PTR [rsp+0x30],r8
  42cc7f:	mov    rax,rbx
  42cc82:	sub    rax,r8
  42cc85:	mov    QWORD PTR [rsp+0x38],rax
  42cc8a:	mov    QWORD PTR [rdi+0x28],rbx
  42cc8e:	mov    ecx,0x80
  42cc93:	call   0x402130
  42cc98:	mov    QWORD PTR [rsp+0xd0],rax
  42cca0:	xor    edx,edx
  42cca2:	cmp    rax,rdx
  42cca5:	je     0x42ccb7
  42cca7:	lea    rdx,[rsp+0x30]
  42ccac:	mov    rcx,rax
  42ccaf:	call   0x42a374
  42ccb4:	mov    rdx,rax
  42ccb7:	lea    rcx,[rdi+0x18]
  42ccbb:	call   0x4010c8
  42ccc0:	nop
  42ccc1:	mov    rcx,QWORD PTR [rsp+0x78]
  42ccc6:	call   0x40215c
  42cccb:	mov    rcx,QWORD PTR [rsp+0x68]
  42ccd0:	call   0x40215c
  42ccd5:	mov    rcx,QWORD PTR [rsp+0x50]
  42ccda:	call   0x40215c
  42ccdf:	mov    rcx,QWORD PTR [rsp+0x40]
  42cce4:	call   0x40215c
  42cce9:	jmp    0x42cd19
  42cceb:	cmp    QWORD PTR [rcx+0x28],rdx
  42ccef:	jbe    0x42cd19
  42ccf1:	xor    edx,edx
  42ccf3:	cmp    DWORD PTR [rcx+0x20],edx
  42ccf6:	je     0x42cd19
  42ccf8:	mov    ecx,DWORD PTR [rcx+0x20]
  42ccfb:	dec    ecx
  42ccfd:	mov    rax,QWORD PTR [rdi+0x18]
  42cd01:	mov    r8,QWORD PTR [rax+rcx*8]
  42cd05:	cmp    BYTE PTR [r8+0x7c],dl
  42cd09:	je     0x42cd19
  42cd0b:	mov    rax,rbx
  42cd0e:	sub    rax,QWORD PTR [r8]
  42cd11:	mov    QWORD PTR [r8+0x8],rax
  42cd15:	mov    QWORD PTR [rdi+0x28],rbx
  42cd19:	add    rsp,0xb8
  42cd20:	pop    rdi
  42cd21:	pop    rbx
  42cd22:	ret    
  42cd23:	int3   
  42cd24:	int3   
  42cd25:	int3   
  42cd26:	int3   
  42cd27:	int3   
  42cd28:	rex.W push rbp
  42cd2a:	sub    rsp,0x20
  42cd2e:	mov    rbp,rdx
  42cd31:	lea    rcx,[rbp+0x30]
  42cd35:	call   0x4296fc
  42cd3a:	add    rsp,0x20
  42cd3e:	pop    rbp
  42cd3f:	ret    
  42cd40:	int3   
  42cd41:	int3   
  42cd42:	int3   
  42cd43:	int3   
  42cd44:	int3   
  42cd45:	int3   
  42cd46:	int3   
  42cd47:	int3   
  42cd48:	rex.W push rbp
  42cd4a:	sub    rsp,0x20
  42cd4e:	mov    rbp,rdx
  42cd51:	mov    rcx,QWORD PTR [rbp+0xd0]
  42cd58:	call   0x40215c
  42cd5d:	add    rsp,0x20
  42cd61:	pop    rbp
  42cd62:	ret    
  42cd63:	int3   
  42cd64:	rex.W push rbx
  42cd66:	push   rbp
  42cd67:	push   rsi
  42cd68:	push   rdi
  42cd69:	sub    rsp,0x38
  42cd6d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42cd76:	mov    rsi,rdx
  42cd79:	mov    rbx,rcx
  42cd7c:	mov    rdx,QWORD PTR [rdx]
  42cd7f:	call   0x42cc48
  42cd84:	mov    rdx,rsi
  42cd87:	mov    rcx,rbx
  42cd8a:	call   0x42b840
  42cd8f:	mov    ebp,eax
  42cd91:	xor    edi,edi
  42cd93:	cmp    eax,edi
  42cd95:	jl     0x42cdd8
  42cd97:	mov    ecx,0x80
  42cd9c:	call   0x402130
  42cda1:	mov    QWORD PTR [rsp+0x70],rax
  42cda6:	cmp    rax,rdi
  42cda9:	je     0x42cdb9
  42cdab:	mov    rdx,rsi
  42cdae:	mov    rcx,rax
  42cdb1:	call   0x42a374
  42cdb6:	mov    rdi,rax
  42cdb9:	lea    rcx,[rbx+0x18]
  42cdbd:	mov    r8,rdi
  42cdc0:	mov    edx,ebp
  42cdc2:	call   0x40456c
  42cdc7:	mov    r11,QWORD PTR [rsi+0x8]
  42cdcb:	add    r11,QWORD PTR [rsi]
  42cdce:	cmp    QWORD PTR [rbx+0x28],r11
  42cdd2:	jae    0x42cdd8
  42cdd4:	mov    QWORD PTR [rbx+0x28],r11
  42cdd8:	add    rsp,0x38
  42cddc:	pop    rdi
  42cddd:	pop    rsi
  42cdde:	pop    rbp
  42cddf:	pop    rbx
  42cde0:	ret    
  42cde1:	int3   
  42cde2:	int3   
  42cde3:	int3   
  42cde4:	rex.W push rbp
  42cde6:	sub    rsp,0x20
  42cdea:	mov    rbp,rdx
  42cded:	mov    rcx,QWORD PTR [rbp+0x70]
  42cdf1:	call   0x40215c
  42cdf6:	add    rsp,0x20
  42cdfa:	pop    rbp
  42cdfb:	ret    
  42cdfc:	rex.W push rbx
  42cdfe:	push   rbp
  42cdff:	push   rsi
  42ce00:	push   rdi
  42ce01:	push   r12
  42ce03:	push   r13
  42ce05:	push   r14
  42ce07:	push   r15
  42ce09:	sub    rsp,0x98
  42ce10:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
  42ce1c:	mov    rsi,r9
  42ce1f:	mov    r13d,r8d
  42ce22:	mov    edi,edx
  42ce24:	mov    r12,rcx
  42ce27:	xor    r14d,r14d
  42ce2a:	cmp    QWORD PTR [rcx+0x10],r14
  42ce2e:	jne    0x42ce3a
  42ce30:	mov    eax,0x80004005
  42ce35:	jmp    0x42d13a
  42ce3a:	cmp    edx,r8d
  42ce3d:	jne    0x42ce46
  42ce3f:	xor    eax,eax
  42ce41:	jmp    0x42d13a
  42ce46:	lea    rcx,[rsp+0x30]
  42ce4b:	call   0x403150
  42ce50:	nop
  42ce51:	mov    bpl,r14b
  42ce54:	mov    rcx,QWORD PTR [r12+0x10]
  42ce59:	mov    rax,QWORD PTR [rcx]
  42ce5c:	lea    rdx,[rsp+0x40]
  42ce61:	mov    QWORD PTR [rsp+0x28],rdx
  42ce66:	lea    rdx,[rsp+0x48]
  42ce6b:	mov    QWORD PTR [rsp+0x20],rdx
  42ce70:	lea    r9,[rsp+0x50]
  42ce75:	mov    r8d,0x4
  42ce7b:	mov    edx,edi
  42ce7d:	call   QWORD PTR [rax+0x20]
  42ce80:	mov    ebx,eax
  42ce82:	cmp    eax,r14d
  42ce85:	jne    0x42d0f5
  42ce8b:	mov    r15d,0x1
  42ce91:	mov    rdx,QWORD PTR [rsp+0x50]
  42ce96:	cmp    rdx,r14
  42ce99:	je     0x42ceae
  42ce9b:	cmp    DWORD PTR [rsp+0x40],0x51
  42cea0:	jne    0x42ceae
  42cea2:	lea    rcx,[rsp+0x30]
  42cea7:	call   0x403290
  42ceac:	jmp    0x42cf28
  42ceae:	mov    WORD PTR [rsp+0x58],r14w
  42ceb4:	mov    WORD PTR [rsp+0x5a],r14w
  42ceba:	mov    QWORD PTR [rsp+0x60],r14
  42cebf:	mov    rcx,QWORD PTR [r12]
  42cec3:	mov    rax,QWORD PTR [rcx]
  42cec6:	lea    r9,[rsp+0x58]
  42cecb:	mov    r8d,0x4
  42ced1:	mov    edx,edi
  42ced3:	call   QWORD PTR [rax+0x30]
  42ced6:	mov    ebx,eax
  42ced8:	cmp    eax,r14d
  42cedb:	jne    0x42d103
  42cee1:	movzx  eax,WORD PTR [rsp+0x58]
  42cee6:	cmp    ax,0x8
  42ceea:	jne    0x42cf06
  42ceec:	mov    rdx,QWORD PTR [rsp+0x60]
  42cef1:	cmp    rdx,r14
  42cef4:	je     0x42d120
  42cefa:	lea    rcx,[rsp+0x30]
  42ceff:	call   0x403354
  42cf04:	jmp    0x42cf1e
  42cf06:	cmp    ax,r14w
  42cf0a:	jne    0x42d120
  42cf10:	mov    DWORD PTR [rsp+0x38],r14d
  42cf15:	mov    rax,QWORD PTR [rsp+0x30]
  42cf1a:	mov    WORD PTR [rax],r14w
  42cf1e:	lea    rcx,[rsp+0x58]
  42cf23:	call   0x40b028
  42cf28:	mov    DWORD PTR [rsp+0x44],0xffffffff
  42cf30:	mov    DWORD PTR [rsp+0xe0],r14d
  42cf38:	mov    rcx,QWORD PTR [r12+0x10]
  42cf3d:	mov    rax,QWORD PTR [rcx]
  42cf40:	lea    r9,[rsp+0xe0]
  42cf48:	lea    r8,[rsp+0x44]
  42cf4d:	mov    edx,edi
  42cf4f:	call   QWORD PTR [rax+0x18]
  42cf52:	cmp    eax,r14d
  42cf55:	jne    0x42d110
  42cf5b:	cmp    DWORD PTR [rsp+0xe0],r15d
  42cf63:	je     0x42cff6
  42cf69:	lea    rcx,[rsp+0x30]
  42cf6e:	call   0x40362c
  42cf73:	mov    ebx,eax
  42cf75:	cmp    eax,r14d
  42cf78:	jl     0x42cff6
  42cf7a:	lea    edx,[rbx+0x1]
  42cf7d:	mov    rcx,QWORD PTR [rsp+0x30]
  42cf82:	lea    rdx,[rcx+rdx*2]
  42cf86:	lea    rcx,[rsp+0x78]
  42cf8b:	call   0x4031c0
  42cf90:	nop
  42cf91:	mov    ecx,0x10
  42cf96:	call   0x402130
  42cf9b:	mov    QWORD PTR [rsp+0x70],rax
  42cfa0:	cmp    rax,r14
  42cfa3:	je     0x42cfb4
  42cfa5:	lea    rdx,[rsp+0x78]
  42cfaa:	mov    rcx,rax
  42cfad:	call   0x403208
  42cfb2:	jmp    0x42cfb7
  42cfb4:	mov    rax,r14
  42cfb7:	mov    r8,rax
  42cfba:	xor    edx,edx
  42cfbc:	mov    rcx,rsi
  42cfbf:	call   0x40456c
  42cfc4:	nop
  42cfc5:	mov    rcx,QWORD PTR [rsp+0x78]
  42cfca:	call   0x40215c
  42cfcf:	cmp    ebx,DWORD PTR [rsp+0x38]
  42cfd3:	jae    0x42cfe5
  42cfd5:	mov    DWORD PTR [rsp+0x38],ebx
  42cfd9:	mov    ecx,ebx
  42cfdb:	mov    rax,QWORD PTR [rsp+0x30]
  42cfe0:	mov    WORD PTR [rax+rcx*2],r14w
  42cfe5:	lea    rcx,[rsp+0x30]
  42cfea:	call   0x40362c
  42cfef:	mov    ebx,eax
  42cff1:	cmp    eax,r14d
  42cff4:	jge    0x42cf7a
  42cff6:	mov    ecx,0x10
  42cffb:	call   0x402130
  42d000:	mov    QWORD PTR [rsp+0x70],rax
  42d005:	cmp    rax,r14
  42d008:	je     0x42d019
  42d00a:	lea    rdx,[rsp+0x30]
  42d00f:	mov    rcx,rax
  42d012:	call   0x403208
  42d017:	jmp    0x42d01c
  42d019:	mov    rax,r14
  42d01c:	mov    r8,rax
  42d01f:	xor    edx,edx
  42d021:	mov    rcx,rsi
  42d024:	call   0x40456c
  42d029:	cmp    bpl,r14b
  42d02c:	je     0x42d0a0
  42d02e:	mov    ecx,DWORD PTR [rsi+0x8]
  42d031:	add    ecx,0xfffffffe
  42d034:	mov    rax,QWORD PTR [rsi]
  42d037:	mov    rbx,QWORD PTR [rax+rcx*8]
  42d03b:	mov    eax,DWORD PTR [rbx+0x8]
  42d03e:	cmp    DWORD PTR [rbx+0xc],eax
  42d041:	jne    0x42d04b
  42d043:	mov    rcx,rbx
  42d046:	call   0x402f2c
  42d04b:	mov    r8d,DWORD PTR [rbx+0x8]
  42d04f:	mov    rdx,QWORD PTR [rbx]
  42d052:	mov    WORD PTR [rdx+r8*2],0x3a
  42d059:	add    r8d,r15d
  42d05c:	mov    WORD PTR [rdx+r8*2],r14w
  42d061:	mov    DWORD PTR [rbx+0x8],r8d
  42d065:	mov    edx,DWORD PTR [rsi+0x8]
  42d068:	dec    edx
  42d06a:	mov    rax,QWORD PTR [rsi]
  42d06d:	mov    rdx,QWORD PTR [rax+rdx*8]
  42d071:	mov    rcx,rbx
  42d074:	call   0x403444
  42d079:	mov    r11d,DWORD PTR [rsi+0x8]
  42d07d:	dec    r11d
  42d080:	mov    rax,QWORD PTR [rsi]
  42d083:	mov    rbx,QWORD PTR [rax+r11*8]
  42d087:	cmp    rbx,r14
  42d08a:	je     0x42d09c
  42d08c:	mov    rcx,QWORD PTR [rbx]
  42d08f:	call   0x40215c
  42d094:	mov    rcx,rbx
  42d097:	call   0x40215c
  42d09c:	add    DWORD PTR [rsi+0x8],0xffffffff
  42d0a0:	mov    edi,DWORD PTR [rsp+0x44]
  42d0a4:	cmp    r13d,edi
  42d0a7:	je     0x42d114
  42d0a9:	movzx  ebp,r14b
  42d0ad:	cmp    DWORD PTR [rsp+0xe0],r15d
  42d0b5:	cmove  ebp,r15d
  42d0b9:	cmp    edi,0xffffffff
  42d0bc:	je     0x42d119
  42d0be:	mov    rcx,QWORD PTR [r12+0x10]
  42d0c3:	mov    rax,QWORD PTR [rcx]
  42d0c6:	lea    rdx,[rsp+0x40]
  42d0cb:	mov    QWORD PTR [rsp+0x28],rdx
  42d0d0:	lea    rdx,[rsp+0x48]
  42d0d5:	mov    QWORD PTR [rsp+0x20],rdx
  42d0da:	lea    r9,[rsp+0x50]
  42d0df:	mov    r8d,0x4
  42d0e5:	mov    edx,edi
  42d0e7:	call   QWORD PTR [rax+0x20]
  42d0ea:	mov    ebx,eax
  42d0ec:	cmp    eax,r14d
  42d0ef:	je     0x42ce91
  42d0f5:	mov    rcx,QWORD PTR [rsp+0x30]
  42d0fa:	call   0x40215c
  42d0ff:	mov    eax,ebx
  42d101:	jmp    0x42d13a
  42d103:	lea    rcx,[rsp+0x58]
  42d108:	call   0x40b028
  42d10d:	nop
  42d10e:	jmp    0x42d0f5
  42d110:	mov    ebx,eax
  42d112:	jmp    0x42d0f5
  42d114:	mov    ebx,r14d
  42d117:	jmp    0x42d0f5
  42d119:	mov    ebx,0x80004005
  42d11e:	jmp    0x42d0f5
  42d120:	lea    rcx,[rsp+0x58]
  42d125:	call   0x40b028
  42d12a:	nop
  42d12b:	mov    rcx,QWORD PTR [rsp+0x30]
  42d130:	call   0x40215c
  42d135:	mov    eax,0x80004005
  42d13a:	add    rsp,0x98
  42d141:	pop    r15
  42d143:	pop    r14
  42d145:	pop    r13
  42d147:	pop    r12
  42d149:	pop    rdi
  42d14a:	pop    rsi
  42d14b:	pop    rbp
  42d14c:	pop    rbx
  42d14d:	ret    
  42d14e:	int3   
  42d14f:	int3   
  42d150:	int3   
  42d151:	int3   
  42d152:	int3   
  42d153:	int3   
  42d154:	int3   
  42d155:	int3   
  42d156:	int3   
  42d157:	int3   
  42d158:	int3   
  42d159:	int3   
  42d15a:	int3   
  42d15b:	int3   
  42d15c:	rex.W push rbp
  42d15e:	sub    rsp,0x20
  42d162:	mov    rbp,rdx
  42d165:	lea    rcx,[rbp+0x30]
  42d169:	call   0x401000
  42d16e:	add    rsp,0x20
  42d172:	pop    rbp
  42d173:	ret    
  42d174:	int3   
  42d175:	int3   
  42d176:	int3   
  42d177:	int3   
  42d178:	int3   
  42d179:	int3   
  42d17a:	int3   
  42d17b:	int3   
  42d17c:	rex.W push rbp
  42d17e:	sub    rsp,0x20
  42d182:	mov    rbp,rdx
  42d185:	lea    rcx,[rbp+0x58]
  42d189:	call   0x40b830
  42d18e:	add    rsp,0x20
  42d192:	pop    rbp
  42d193:	ret    
  42d194:	int3   
  42d195:	int3   
  42d196:	int3   
  42d197:	int3   
  42d198:	int3   
  42d199:	int3   
  42d19a:	int3   
  42d19b:	int3   
  42d19c:	rex.W push rbp
  42d19e:	sub    rsp,0x20
  42d1a2:	mov    rbp,rdx
  42d1a5:	lea    rcx,[rbp+0x78]
  42d1a9:	call   0x401000
  42d1ae:	add    rsp,0x20
  42d1b2:	pop    rbp
  42d1b3:	ret    
  42d1b4:	int3   
  42d1b5:	int3   
  42d1b6:	int3   
  42d1b7:	int3   
  42d1b8:	int3   
  42d1b9:	int3   
  42d1ba:	int3   
  42d1bb:	int3   
  42d1bc:	rex.W push rbp
  42d1be:	sub    rsp,0x20
  42d1c2:	mov    rbp,rdx
  42d1c5:	mov    rcx,QWORD PTR [rbp+0x70]
  42d1c9:	call   0x40215c
  42d1ce:	add    rsp,0x20
  42d1d2:	pop    rbp
  42d1d3:	ret    
  42d1d4:	int3   
  42d1d5:	int3   
  42d1d6:	int3   
  42d1d7:	int3   
  42d1d8:	int3   
  42d1d9:	int3   
  42d1da:	int3   
  42d1db:	int3   
  42d1dc:	rex.W push rbp
  42d1de:	sub    rsp,0x20
  42d1e2:	mov    rbp,rdx
  42d1e5:	mov    rcx,QWORD PTR [rbp+0x70]
  42d1e9:	call   0x40215c
  42d1ee:	add    rsp,0x20
  42d1f2:	pop    rbp
  42d1f3:	ret    
  42d1f4:	mov    QWORD PTR [rsp+0x8],rcx
  42d1f9:	push   rbx
  42d1fa:	push   rbp
  42d1fb:	push   rsi
  42d1fc:	push   rdi
  42d1fd:	push   r12
  42d1ff:	push   r13
  42d201:	push   r14
  42d203:	push   r15
  42d205:	sub    rsp,0x58
  42d209:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
  42d212:	mov    rdi,r8
  42d215:	mov    r14d,edx
  42d218:	lea    rbx,[r8+0x40]
  42d21c:	mov    QWORD PTR [rsp+0x20],rbx
  42d221:	xor    ecx,ecx
  42d223:	mov    BYTE PTR [rbx],cl
  42d225:	lea    rax,[r8+0x30]
  42d229:	mov    QWORD PTR [rsp+0xb8],rax
  42d231:	mov    DWORD PTR [rax+0x8],ecx
  42d234:	mov    rax,QWORD PTR [rax]
  42d237:	mov    WORD PTR [rax],cx
  42d23a:	mov    DWORD PTR [r8+0x28],ecx
  42d23e:	mov    rax,QWORD PTR [r8+0x20]
  42d242:	mov    WORD PTR [rax],cx
  42d245:	mov    BYTE PTR [r8+0x42],cl
  42d249:	mov    DWORD PTR [r8+0x8],ecx
  42d24d:	mov    rax,QWORD PTR [r8]
  42d250:	mov    WORD PTR [rax],cx
  42d253:	mov    DWORD PTR [r8+0x44],0xffffffff
  42d25b:	lea    rsi,[r8+0x10]
  42d25f:	movsxd r12,DWORD PTR [rsi+0x8]
  42d263:	mov    rbp,r12
  42d266:	cmp    r12d,ecx
  42d269:	je     0x42d29e
  42d26b:	shl    rbp,0x3
  42d26f:	add    r12d,0xffffffff
  42d273:	sub    rbp,0x8
  42d277:	mov    rax,QWORD PTR [rsi]
  42d27a:	mov    rbx,QWORD PTR [rax+rbp*1]
  42d27e:	cmp    rbx,rcx
  42d281:	je     0x42d295
  42d283:	mov    rcx,QWORD PTR [rbx]
  42d286:	call   0x40215c
  42d28b:	mov    rcx,rbx
  42d28e:	call   0x40215c
  42d293:	xor    ecx,ecx
  42d295:	cmp    r12d,ecx
  42d298:	jne    0x42d26f
  42d29a:	lea    rbx,[rdi+0x40]
  42d29e:	mov    DWORD PTR [rsi+0x8],ecx
  42d2a1:	lea    r9,[rdi+0x42]
  42d2a5:	mov    r8d,0x6
  42d2ab:	mov    edx,r14d
  42d2ae:	mov    r12,QWORD PTR [rsp+0xa0]
  42d2b6:	mov    rcx,QWORD PTR [r12]
  42d2ba:	call   0x429798
  42d2bf:	test   eax,eax
  42d2c1:	jne    0x42d59e
  42d2c7:	mov    al,BYTE PTR [rdi+0x42]
  42d2ca:	lea    r15,[rdi+0x43]
  42d2ce:	mov    BYTE PTR [r15],al
  42d2d1:	mov    r8,rdi
  42d2d4:	mov    edx,r14d
  42d2d7:	mov    rcx,r12
  42d2da:	call   0x42c454
  42d2df:	test   eax,eax
  42d2e1:	jne    0x42d59e
  42d2e7:	mov    rdx,rdi
  42d2ea:	lea    rcx,[rdi+0x20]
  42d2ee:	call   0x4032f8
  42d2f3:	cmp    BYTE PTR [r12+0x10c],0x0
  42d2fc:	je     0x42d31b
  42d2fe:	mov    r9,rbx
  42d301:	mov    r8d,0x3f
  42d307:	mov    edx,r14d
  42d30a:	mov    rcx,QWORD PTR [r12]
  42d30e:	call   0x429798
  42d313:	test   eax,eax
  42d315:	jne    0x42d59e
  42d31b:	xor    bpl,bpl
  42d31e:	cmp    BYTE PTR [rbx],bpl
  42d321:	je     0x42d454
  42d327:	mov    bpl,0x1
  42d32a:	mov    rcx,QWORD PTR [r12+0x10]
  42d32f:	test   rcx,rcx
  42d332:	je     0x42d454
  42d338:	mov    DWORD PTR [rsp+0xa0],0x0
  42d343:	mov    rax,QWORD PTR [rcx]
  42d346:	lea    r9,[rsp+0xa0]
  42d34e:	lea    r8,[rsp+0xb0]
  42d356:	mov    edx,r14d
  42d359:	call   QWORD PTR [rax+0x18]
  42d35c:	test   eax,eax
  42d35e:	jne    0x42d59e
  42d364:	cmp    DWORD PTR [rsp+0xa0],0x1
  42d36c:	jne    0x42d454
  42d372:	mov    WORD PTR [rsp+0x30],0x0
  42d379:	mov    WORD PTR [rsp+0x32],0x0
  42d380:	mov    QWORD PTR [rsp+0x38],0x0
  42d389:	mov    rcx,QWORD PTR [r12]
  42d38d:	mov    rax,QWORD PTR [rcx]
  42d390:	lea    r9,[rsp+0x30]
  42d395:	mov    r8d,0x4
  42d39b:	mov    edx,r14d
  42d39e:	call   QWORD PTR [rax+0x30]
  42d3a1:	mov    ebx,eax
  42d3a3:	test   eax,eax
  42d3a5:	je     0x42d3ac
  42d3a7:	jmp    0x42d439
  42d3ac:	movzx  eax,WORD PTR [rsp+0x30]
  42d3b1:	cmp    ax,0x8
  42d3b5:	jne    0x42d3cc
  42d3b7:	mov    rdx,QWORD PTR [rsp+0x38]
  42d3bc:	test   rdx,rdx
  42d3bf:	je     0x42d3d1
  42d3c1:	lea    rcx,[rdi+0x30]
  42d3c5:	call   0x403354
  42d3ca:	jmp    0x42d3d8
  42d3cc:	test   ax,ax
  42d3cf:	je     0x42d3d8
  42d3d1:	mov    ebx,0x80004005
  42d3d6:	jmp    0x42d439
  42d3d8:	xor    bpl,bpl
  42d3db:	mov    r14d,DWORD PTR [rsp+0xb0]
  42d3e3:	mov    DWORD PTR [rdi+0x44],r14d
  42d3e7:	cmp    r14d,0xffffffff
  42d3eb:	jne    0x42d403
  42d3ed:	mov    DWORD PTR [rdi+0x28],0x0
  42d3f4:	mov    rax,QWORD PTR [rdi+0x20]
  42d3f8:	mov    WORD PTR [rax],0x0
  42d3fd:	mov    BYTE PTR [r15],0x1
  42d401:	jmp    0x42d44a
  42d403:	lea    r8,[rdi+0x20]
  42d407:	mov    edx,r14d
  42d40a:	mov    rcx,r12
  42d40d:	call   0x42c454
  42d412:	test   eax,eax
  42d414:	je     0x42d41a
  42d416:	mov    ebx,eax
  42d418:	jmp    0x42d439
  42d41a:	mov    r9,r15
  42d41d:	mov    r8d,0x6
  42d423:	mov    edx,DWORD PTR [rsp+0xb0]
  42d42a:	mov    rcx,QWORD PTR [r12]
  42d42e:	call   0x429798
  42d433:	test   eax,eax
  42d435:	je     0x42d44a
  42d437:	mov    ebx,eax
  42d439:	lea    rcx,[rsp+0x30]
  42d43e:	call   0x40b028
  42d443:	mov    eax,ebx
  42d445:	jmp    0x42d59e
  42d44a:	lea    rcx,[rsp+0x30]
  42d44f:	call   0x40b028
  42d454:	cmp    BYTE PTR [rdi+0x41],0x0
  42d458:	jne    0x42d45f
  42d45a:	test   bpl,bpl
  42d45d:	je     0x42d4ba
  42d45f:	mov    rcx,QWORD PTR [rdi]
  42d462:	call   0x429968
  42d467:	mov    ebx,eax
  42d469:	test   eax,eax
  42d46b:	js     0x42d4ba
  42d46d:	cmp    ebx,DWORD PTR [rdi+0x28]
  42d470:	jae    0x42d47f
  42d472:	mov    DWORD PTR [rdi+0x28],ebx
  42d475:	mov    rcx,QWORD PTR [rdi+0x20]
  42d479:	mov    WORD PTR [rcx+rbx*2],0x0
  42d47f:	lea    ecx,[rbx+0x1]
  42d482:	mov    rax,QWORD PTR [rdi]
  42d485:	lea    rdx,[rax+rcx*2]
  42d489:	lea    rcx,[rdi+0x30]
  42d48d:	call   0x403290
  42d492:	test   ebx,ebx
  42d494:	je     0x42d4ae
  42d496:	lea    ecx,[rbx-0x1]
  42d499:	mov    rax,QWORD PTR [rdi]
  42d49c:	cmp    WORD PTR [rax+rcx*2],0x5c
  42d4a1:	je     0x42d4ae
  42d4a3:	cmp    WORD PTR [rax+rcx*2],0x2f
  42d4a8:	je     0x42d4ae
  42d4aa:	xor    eax,eax
  42d4ac:	jmp    0x42d4b3
  42d4ae:	mov    eax,0x1
  42d4b3:	mov    BYTE PTR [r15],al
  42d4b6:	mov    BYTE PTR [rdi+0x40],0x1
  42d4ba:	cmp    BYTE PTR [rdi+0x48],0x0
  42d4be:	je     0x42d590
  42d4c4:	mov    r9,rsi
  42d4c7:	mov    r8d,DWORD PTR [rdi+0x4c]
  42d4cb:	mov    edx,r14d
  42d4ce:	mov    rcx,r12
  42d4d1:	call   0x42cdfc
  42d4d6:	test   eax,eax
  42d4d8:	jne    0x42d59e
  42d4de:	cmp    BYTE PTR [rdi+0x41],0x0
  42d4e2:	jne    0x42d4ed
  42d4e4:	test   bpl,bpl
  42d4e7:	je     0x42d59c
  42d4ed:	cmp    DWORD PTR [rdi+0x18],0x0
  42d4f1:	je     0x42d59c
  42d4f7:	mov    edx,DWORD PTR [rsi+0x8]
  42d4fa:	dec    edx
  42d4fc:	mov    rax,QWORD PTR [rsi]
  42d4ff:	mov    rdi,QWORD PTR [rax+rdx*8]
  42d503:	mov    r10,QWORD PTR [rdi]
  42d506:	mov    rcx,r10
  42d509:	call   0x429968
  42d50e:	mov    ebx,eax
  42d510:	test   eax,eax
  42d512:	js     0x42d565
  42d514:	lea    edx,[rbx+0x1]
  42d517:	lea    rdx,[r10+rdx*2]
  42d51b:	mov    rcx,QWORD PTR [rsp+0xb8]
  42d523:	call   0x403290
  42d528:	test   ebx,ebx
  42d52a:	je     0x42d544
  42d52c:	lea    edx,[rbx-0x1]
  42d52f:	mov    rcx,QWORD PTR [rdi]
  42d532:	cmp    WORD PTR [rcx+rdx*2],0x5c
  42d537:	je     0x42d544
  42d539:	cmp    WORD PTR [rcx+rdx*2],0x2f
  42d53e:	je     0x42d544
  42d540:	xor    eax,eax
  42d542:	jmp    0x42d549
  42d544:	mov    eax,0x1
  42d549:	mov    BYTE PTR [r15],al
  42d54c:	mov    rax,QWORD PTR [rsp+0x20]
  42d551:	mov    BYTE PTR [rax],0x1
  42d554:	cmp    ebx,DWORD PTR [rdi+0x8]
  42d557:	jae    0x42d565
  42d559:	mov    DWORD PTR [rdi+0x8],ebx
  42d55c:	mov    rax,QWORD PTR [rdi]
  42d55f:	mov    WORD PTR [rax+rbx*2],0x0
  42d565:	test   ebx,ebx
  42d567:	jne    0x42d59c
  42d569:	mov    ecx,DWORD PTR [rsi+0x8]
  42d56c:	dec    ecx
  42d56e:	mov    rax,QWORD PTR [rsi]
  42d571:	mov    rbx,QWORD PTR [rax+rcx*8]
  42d575:	test   rbx,rbx
  42d578:	je     0x42d58a
  42d57a:	mov    rcx,QWORD PTR [rbx]
  42d57d:	call   0x40215c
  42d582:	mov    rcx,rbx
  42d585:	call   0x40215c
  42d58a:	add    DWORD PTR [rsi+0x8],0xffffffff
  42d58e:	jmp    0x42d59c
  42d590:	mov    rdx,rsi
  42d593:	lea    rcx,[rdi+0x20]
  42d597:	call   0x405010
  42d59c:	xor    eax,eax
  42d59e:	add    rsp,0x58
  42d5a2:	pop    r15
  42d5a4:	pop    r14
  42d5a6:	pop    r13
  42d5a8:	pop    r12
  42d5aa:	pop    rdi
  42d5ab:	pop    rsi
  42d5ac:	pop    rbp
  42d5ad:	pop    rbx
  42d5ae:	ret    
  42d5af:	int3   
  42d5b0:	int3   
  42d5b1:	int3   
  42d5b2:	int3   
  42d5b3:	int3   
  42d5b4:	rex.W push rbp
  42d5b6:	sub    rsp,0x20
  42d5ba:	mov    rbp,rdx
  42d5bd:	lea    rcx,[rbp+0x30]
  42d5c1:	call   0x40b830
  42d5c6:	add    rsp,0x20
  42d5ca:	pop    rbp
  42d5cb:	ret    
  42d5cc:	rex.W push rbx
  42d5ce:	sub    rsp,0x30
  42d5d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  42d5db:	mov    rbx,rcx
  42d5de:	add    DWORD PTR [rcx+0x18],0xffffffff
  42d5e2:	mov    eax,DWORD PTR [rcx+0x18]
  42d5e5:	jne    0x42d625
  42d5e7:	mov    QWORD PTR [rsp+0x40],rcx
  42d5ec:	mov    rcx,QWORD PTR [rcx+0x40]
  42d5f0:	test   rcx,rcx
  42d5f3:	je     0x42d5fc
  42d5f5:	mov    rax,QWORD PTR [rcx]
  42d5f8:	call   QWORD PTR [rax+0x10]
  42d5fb:	nop
  42d5fc:	mov    rcx,QWORD PTR [rbx+0x28]
  42d600:	test   rcx,rcx
  42d603:	je     0x42d60c
  42d605:	mov    rax,QWORD PTR [rcx]
  42d608:	call   QWORD PTR [rax+0x10]
  42d60b:	nop
  42d60c:	mov    rcx,QWORD PTR [rbx+0x20]
  42d610:	test   rcx,rcx
  42d613:	je     0x42d61b
  42d615:	mov    rax,QWORD PTR [rcx]
  42d618:	call   QWORD PTR [rax+0x10]
  42d61b:	mov    rcx,rbx
  42d61e:	call   0x40215c
  42d623:	xor    eax,eax
  42d625:	add    rsp,0x30
  42d629:	pop    rbx
  42d62a:	ret    
  42d62b:	int3   
  42d62c:	rex.W push rbp
  42d62e:	sub    rsp,0x20
  42d632:	mov    rbp,rdx
  42d635:	mov    rcx,QWORD PTR [rbp+0x40]
  42d639:	add    rcx,0x20
  42d63d:	call   0x4176b4
  42d642:	add    rsp,0x20
  42d646:	pop    rbp
  42d647:	ret    
  42d648:	int3   
  42d649:	int3   
  42d64a:	int3   
  42d64b:	int3   
  42d64c:	rex.W push rbp
  42d64e:	sub    rsp,0x20
  42d652:	mov    rbp,rdx
  42d655:	mov    rcx,QWORD PTR [rbp+0x40]
  42d659:	add    rcx,0x28
  42d65d:	call   0x4176b4
  42d662:	add    rsp,0x20
  42d666:	pop    rbp
  42d667:	ret    
  42d668:	rex.W push rbx
  42d66a:	sub    rsp,0x20
  42d66e:	add    DWORD PTR [rcx+0x10],0xffffffff
  42d672:	mov    eax,DWORD PTR [rcx+0x10]
  42d675:	mov    rbx,rcx
  42d678:	jne    0x42d693
  42d67a:	mov    rcx,QWORD PTR [rcx+0x18]
  42d67e:	test   rcx,rcx
  42d681:	je     0x42d689
  42d683:	mov    rax,QWORD PTR [rcx]
  42d686:	call   QWORD PTR [rax+0x10]
  42d689:	mov    rcx,rbx
  42d68c:	call   0x40215c
  42d691:	xor    eax,eax
  42d693:	add    rsp,0x20
  42d697:	pop    rbx
  42d698:	ret    
  42d699:	int3   
  42d69a:	int3   
  42d69b:	int3   
  42d69c:	mov    QWORD PTR [rsp+0x10],rdx
  42d6a1:	mov    QWORD PTR [rsp+0x8],rcx
  42d6a6:	push   rbx
  42d6a7:	push   rbp
  42d6a8:	push   rsi
  42d6a9:	push   rdi
  42d6aa:	push   r12
  42d6ac:	push   r13
  42d6ae:	push   r14
  42d6b0:	push   r15
  42d6b2:	sub    rsp,0x3f8
  42d6b9:	mov    QWORD PTR [rsp+0x2e0],0xfffffffffffffffe
  42d6c5:	mov    rbp,rdx
  42d6c8:	mov    r15,rcx
  42d6cb:	mov    rcx,QWORD PTR [rcx]
  42d6ce:	xor    r13d,r13d
  42d6d1:	cmp    rcx,r13
  42d6d4:	je     0x42d6df
  42d6d6:	mov    rax,QWORD PTR [rcx]
  42d6d9:	call   QWORD PTR [rax+0x10]
  42d6dc:	mov    QWORD PTR [r15],r13
  42d6df:	mov    rcx,QWORD PTR [r15+0x10]
  42d6e3:	cmp    rcx,r13
  42d6e6:	je     0x42d6f2
  42d6e8:	mov    rax,QWORD PTR [rcx]
  42d6eb:	call   QWORD PTR [rax+0x10]
  42d6ee:	mov    QWORD PTR [r15+0x10],r13
  42d6f2:	mov    rcx,QWORD PTR [r15+0x18]
  42d6f6:	cmp    rcx,r13
  42d6f9:	je     0x42d705
  42d6fb:	mov    rax,QWORD PTR [rcx]
  42d6fe:	call   QWORD PTR [rax+0x10]
  42d701:	mov    QWORD PTR [r15+0x18],r13
  42d705:	mov    BYTE PTR [r15+0x20],r13b
  42d709:	mov    BYTE PTR [r15+0x21],r13b
  42d70d:	mov    BYTE PTR [r15+0x22],r13b
  42d711:	mov    BYTE PTR [r15+0x23],r13b
  42d715:	mov    DWORD PTR [r15+0x24],r13d
  42d719:	mov    DWORD PTR [r15+0x28],r13d
  42d71d:	mov    QWORD PTR [r15+0x30],r13
  42d721:	mov    DWORD PTR [r15+0x40],r13d
  42d725:	mov    rax,QWORD PTR [r15+0x38]
  42d729:	mov    WORD PTR [rax],r13w
  42d72d:	mov    DWORD PTR [r15+0x50],r13d
  42d731:	mov    rax,QWORD PTR [r15+0x48]
  42d735:	mov    WORD PTR [rax],r13w
  42d739:	mov    DWORD PTR [r15+0x2c],0xffffffff
  42d741:	mov    BYTE PTR [r15+0x108],r13b
  42d748:	mov    QWORD PTR [r15+0x100],r13
  42d74f:	lea    rdx,[r15+0x90]
  42d756:	lea    rcx,[rsp+0x190]
  42d75e:	call   0x4044c0
  42d763:	nop
  42d764:	lea    rcx,[rsp+0x60]
  42d769:	call   0x403150
  42d76e:	nop
  42d76f:	mov    dx,0x2e
  42d773:	lea    rcx,[rsp+0x190]
  42d77b:	call   0x4035f4
  42d780:	cmp    eax,r13d
  42d783:	jl     0x42d79e
  42d785:	lea    ecx,[rax+0x1]
  42d788:	mov    rax,QWORD PTR [rsp+0x190]
  42d790:	lea    rdx,[rax+rcx*2]
  42d794:	lea    rcx,[rsp+0x60]
  42d799:	call   0x403290
  42d79e:	mov    r12,r13
  42d7a1:	mov    QWORD PTR [rsp+0xb8],r13
  42d7a9:	mov    r14d,r13d
  42d7ac:	mov    DWORD PTR [rsp+0xc0],r13d
  42d7b4:	mov    DWORD PTR [rsp+0xc4],r13d
  42d7bc:	mov    BYTE PTR [rsp+0x450],r13b
  42d7c4:	mov    rax,QWORD PTR [rbp+0x0]
  42d7c8:	mov    ecx,DWORD PTR [rax+0x48]
  42d7cb:	mov    rdi,r13
  42d7ce:	mov    QWORD PTR [rsp+0x158],r13
  42d7d6:	cmp    rcx,r13
  42d7d9:	je     0x42d7eb
  42d7db:	call   0x402130
  42d7e0:	mov    rdi,rax
  42d7e3:	mov    QWORD PTR [rsp+0x158],rax
  42d7eb:	mov    ecx,r13d
  42d7ee:	mov    rax,QWORD PTR [rbp+0x0]
  42d7f2:	mov    r8d,0x1
  42d7f8:	cmp    DWORD PTR [rax+0x48],r13d
  42d7fc:	jbe    0x42d810
  42d7fe:	mov    eax,ecx
  42d800:	mov    BYTE PTR [rax+rdi*1],r13b
  42d804:	add    ecx,r8d
  42d807:	mov    rax,QWORD PTR [rbp+0x0]
  42d80b:	cmp    ecx,DWORD PTR [rax+0x48]
  42d80e:	jb     0x42d7fe
  42d810:	cmp    BYTE PTR [rbp+0x1d],r13b
  42d814:	je     0x42d824
  42d816:	mov    rax,QWORD PTR [rbp+0x20]
  42d81a:	mov    QWORD PTR [rsp+0x170],rax
  42d822:	jmp    0x42d830
  42d824:	mov    QWORD PTR [rsp+0x170],0x800000
  42d830:	mov    BYTE PTR [rsp+0x458],r13b
  42d838:	mov    BYTE PTR [rsp+0x35],r13b
  42d83d:	mov    esi,DWORD PTR [rbp+0x8]
  42d840:	mov    DWORD PTR [rsp+0xc8],esi
  42d847:	cmp    esi,r13d
  42d84a:	jl     0x42d88a
  42d84c:	mov    BYTE PTR [rsp+0x35],r8b
  42d851:	mov    edx,esi
  42d853:	lea    rcx,[rsp+0xb8]
  42d85b:	call   0x4131dc
  42d860:	mov    ecx,0x1
  42d865:	mov    ebx,ecx
  42d867:	mov    DWORD PTR [rsp+0x30],ecx
  42d86b:	mov    BYTE PTR [rsi+rdi*1],cl
  42d86e:	mov    BYTE PTR [rsp+0x450],cl
  42d875:	mov    r12,QWORD PTR [rsp+0xb8]
  42d87d:	mov    r14d,DWORD PTR [rsp+0xc0]
  42d885:	jmp    0x42dfd0
  42d88a:	mov    DWORD PTR [rsp+0x30],r13d
  42d88f:	xor    r10d,r10d
  42d892:	mov    BYTE PTR [rsp+0x38],r10b
  42d897:	mov    BYTE PTR [rsp+0x458],r10b
  42d89f:	mov    BYTE PTR [rsp+0x34],r10b
  42d8a4:	mov    rdx,QWORD PTR [rsp+0x60]
  42d8a9:	cmp    WORD PTR [rdx],0x7a
  42d8ad:	je     0x42d8c1
  42d8af:	cmp    WORD PTR [rdx],0x5a
  42d8b3:	je     0x42d8c1
  42d8b5:	cmp    WORD PTR [rdx],0x72
  42d8b9:	je     0x42d8c1
  42d8bb:	cmp    WORD PTR [rdx],0x52
  42d8bf:	jne    0x42d900
  42d8c1:	lea    rcx,[rdx+0x2]
  42d8c5:	movzx  eax,WORD PTR [rcx]
  42d8c8:	cmp    ax,r10w
  42d8cc:	je     0x42d900
  42d8ce:	sub    ax,0x30
  42d8d2:	cmp    ax,0x9
  42d8d6:	ja     0x42d900
  42d8d8:	add    rcx,0x2
  42d8dc:	mov    ax,WORD PTR [rcx]
  42d8df:	cmp    ax,r10w
  42d8e3:	jne    0x42d8ce
  42d8e5:	cmp    WORD PTR [rdx],0x7a
  42d8e9:	je     0x42d8f8
  42d8eb:	cmp    WORD PTR [rdx],0x5a
  42d8ef:	je     0x42d8f8
  42d8f1:	mov    BYTE PTR [rsp+0x34],r8b
  42d8f6:	jmp    0x42d900
  42d8f8:	mov    BYTE PTR [rsp+0x458],r8b
  42d900:	mov    ebx,r10d
  42d903:	mov    rax,QWORD PTR [rbp+0x0]
  42d907:	cmp    DWORD PTR [rax+0x48],r10d
  42d90b:	jbe    0x42da6b
  42d911:	mov    r12,r10
  42d914:	mov    r14b,BYTE PTR [rsp+0x458]
  42d91c:	mov    rax,QWORD PTR [rax+0x40]
  42d920:	mov    rsi,QWORD PTR [r12+rax*1]
  42d924:	cmp    BYTE PTR [r15+0x10f],r10b
  42d92b:	jne    0x42d933
  42d92d:	cmp    BYTE PTR [rbp+0x19],r10b
  42d931:	jne    0x42d94f
  42d933:	lea    rdx,[rip+0x22a9a]        # 0x4503d4
  42d93a:	mov    rcx,QWORD PTR [rsi+0x18]
  42d93e:	call   0x402864
  42d943:	xor    r10d,r10d
  42d946:	cmp    al,r10b
  42d949:	jne    0x42da3c
  42d94f:	mov    rax,QWORD PTR [rbp+0x30]
  42d953:	mov    r8d,r10d
  42d956:	mov    edx,DWORD PTR [rax+0x8]
  42d959:	cmp    edx,r10d
  42d95c:	je     0x42d980
  42d95e:	mov    r9,QWORD PTR [rax]
  42d961:	lea    ecx,[r8+rdx*1]
  42d965:	shr    ecx,1
  42d967:	cmp    ebx,DWORD PTR [r9+rcx*4]
  42d96b:	je     0x42d985
  42d96d:	cmp    ebx,DWORD PTR [r9+rcx*4]
  42d971:	jge    0x42d977
  42d973:	mov    edx,ecx
  42d975:	jmp    0x42d97b
  42d977:	lea    r8d,[rcx+0x1]
  42d97b:	cmp    r8d,edx
  42d97e:	jne    0x42d961
  42d980:	mov    ecx,0xffffffff
  42d985:	cmp    ecx,r10d
  42d988:	jge    0x42da34
  42d98e:	mov    rcx,rsi
  42d991:	call   0x429a84
  42d996:	mov    ecx,DWORD PTR [rsp+0x38]
  42d99a:	movzx  ecx,cl
  42d99d:	xor    edx,edx
  42d99f:	cmp    al,dl
  42d9a1:	lea    eax,[rdx+0x1]
  42d9a4:	cmovne ecx,eax
  42d9a7:	mov    DWORD PTR [rsp+0x38],ecx
  42d9ab:	lea    rdx,[rsp+0x60]
  42d9b0:	mov    rcx,rsi
  42d9b3:	call   0x42771c
  42d9b8:	xor    ecx,ecx
  42d9ba:	cmp    eax,ecx
  42d9bc:	jge    0x42da0d
  42d9be:	cmp    r14b,cl
  42d9c1:	je     0x42d9d9
  42d9c3:	lea    rdx,[rip+0x23136]        # 0x450b00
  42d9ca:	mov    rcx,QWORD PTR [rsi+0x18]
  42d9ce:	call   0x402864
  42d9d3:	xor    ecx,ecx
  42d9d5:	cmp    al,cl
  42d9d7:	jne    0x42da0d
  42d9d9:	cmp    BYTE PTR [rsp+0x34],cl
  42d9dd:	je     0x42d9f5
  42d9df:	lea    rdx,[rip+0x229ce]        # 0x4503b4
  42d9e6:	mov    rcx,QWORD PTR [rsi+0x18]
  42d9ea:	call   0x402864
  42d9ef:	xor    ecx,ecx
  42d9f1:	cmp    al,cl
  42d9f3:	jne    0x42da0d
  42d9f5:	mov    edx,ebx
  42d9f7:	lea    rcx,[rsp+0xb8]
  42d9ff:	call   0x4131dc
  42da04:	xor    r10d,r10d
  42da07:	lea    r8d,[r10+0x1]
  42da0b:	jmp    0x42da42
  42da0d:	mov    r8d,ebx
  42da10:	mov    edx,r13d
  42da13:	lea    rcx,[rsp+0xb8]
  42da1b:	call   0x40e964
  42da20:	mov    r8d,0x1
  42da26:	add    r13d,r8d
  42da29:	mov    eax,ebx
  42da2b:	mov    BYTE PTR [rax+rdi*1],r8b
  42da2f:	xor    r10d,r10d
  42da32:	jmp    0x42da42
  42da34:	mov    r8d,0x1
  42da3a:	jmp    0x42da42
  42da3c:	mov    r8d,0x1
  42da42:	add    ebx,r8d
  42da45:	add    r12,0x8
  42da49:	mov    rax,QWORD PTR [rbp+0x0]
  42da4d:	cmp    ebx,DWORD PTR [rax+0x48]
  42da50:	jb     0x42d91c
  42da56:	mov    DWORD PTR [rsp+0x30],r13d
  42da5b:	mov    r12,QWORD PTR [rsp+0xb8]
  42da63:	mov    r14d,DWORD PTR [rsp+0xc0]
  42da6b:	mov    rax,QWORD PTR [rbp+0x38]
  42da6f:	xor    ebx,ebx
  42da71:	cmp    rax,rbx
  42da74:	jne    0x42daae
  42da76:	cmp    r13d,r8d
  42da79:	je     0x42daa3
  42da7b:	mov    rcx,rdi
  42da7e:	call   0x40215c
  42da83:	nop
  42da84:	mov    rcx,r12
  42da87:	call   0x40215c
  42da8c:	nop
  42da8d:	mov    rcx,QWORD PTR [rsp+0x60]
  42da92:	call   0x40215c
  42da97:	nop
  42da98:	mov    r13d,0x80004001
  42da9e:	jmp    0x4312f4
  42daa3:	mov    r14d,r8d
  42daa6:	mov    DWORD PTR [rsp+0xc0],r8d
  42daae:	cmp    rax,rbx
  42dab1:	je     0x42ded4
  42dab7:	cmp    r14d,0x2
  42dabb:	jb     0x42dfa4
  42dac1:	mov    rcx,rax
  42dac4:	mov    rax,QWORD PTR [rax]
  42dac7:	xor    r9d,r9d
  42daca:	xor    r8d,r8d
  42dacd:	xor    edx,edx
  42dacf:	call   QWORD PTR [rax+0x20]
  42dad2:	mov    r13d,eax
  42dad5:	cmp    eax,ebx
  42dad7:	je     0x42dafb
  42dad9:	mov    rcx,rdi
  42dadc:	call   0x40215c
  42dae1:	nop
  42dae2:	mov    rcx,r12
  42dae5:	call   0x40215c
  42daea:	nop
  42daeb:	mov    rcx,QWORD PTR [rsp+0x60]
  42daf0:	call   0x40215c
  42daf5:	nop
  42daf6:	jmp    0x4312f4
  42dafb:	mov    rsi,rbx
  42dafe:	mov    QWORD PTR [rsp+0x70],rbx
  42db03:	mov    QWORD PTR [rsp+0x78],rbx
  42db08:	mov    QWORD PTR [rsp+0x48],rbx
  42db0d:	mov    DWORD PTR [rsp+0x50],ebx
  42db11:	mov    DWORD PTR [rsp+0x54],ebx
  42db15:	mov    r13d,DWORD PTR [rsp+0x30]
  42db1a:	cmp    r13d,ebx
  42db1d:	je     0x42de60
  42db23:	lea    rdx,[rip+0x225ae]        # 0x4500d8
  42db2a:	mov    rcx,QWORD PTR [rsp+0x60]
  42db2f:	call   0x402864
  42db34:	cmp    al,bl
  42db36:	jne    0x42de67
  42db3c:	lea    rdx,[rip+0x22fb9]        # 0x450afc
  42db43:	mov    rcx,QWORD PTR [rsp+0x60]
  42db48:	call   0x4027fc
  42db4d:	cmp    al,bl
  42db4f:	jne    0x42dc85
  42db55:	lea    rdx,[rip+0x22f9c]        # 0x450af8
  42db5c:	mov    rcx,QWORD PTR [rsp+0x60]
  42db61:	call   0x4027fc
  42db66:	cmp    al,bl
  42db68:	jne    0x42dc85
  42db6e:	mov    QWORD PTR [rsp+0x78],rbx
  42db73:	mov    ebx,0x400
  42db78:	mov    rcx,rbx
  42db7b:	call   0x402130
  42db80:	mov    rsi,rax
  42db83:	mov    QWORD PTR [rsp+0x70],rax
  42db88:	mov    QWORD PTR [rsp+0x78],rbx
  42db8d:	mov    QWORD PTR [rsp+0x178],rbx
  42db95:	lea    r8,[rsp+0x178]
  42db9d:	mov    rdx,rax
  42dba0:	mov    rcx,QWORD PTR [rbp+0x38]
  42dba4:	call   0x40e898
  42dba9:	mov    r13d,eax
  42dbac:	xor    ebx,ebx
  42dbae:	cmp    eax,ebx
  42dbb0:	je     0x42dbe5
  42dbb2:	xor    ecx,ecx
  42dbb4:	call   0x40215c
  42dbb9:	nop
  42dbba:	mov    rcx,rsi
  42dbbd:	call   0x40215c
  42dbc2:	nop
  42dbc3:	mov    rcx,rdi
  42dbc6:	call   0x40215c
  42dbcb:	nop
  42dbcc:	mov    rcx,r12
  42dbcf:	call   0x40215c
  42dbd4:	nop
  42dbd5:	mov    rcx,QWORD PTR [rsp+0x60]
  42dbda:	call   0x40215c
  42dbdf:	nop
  42dbe0:	jmp    0x4312f4
  42dbe5:	cmp    QWORD PTR [rsp+0x178],rbx
  42dbed:	jne    0x42dc28
  42dbef:	xor    ecx,ecx
  42dbf1:	call   0x40215c
  42dbf6:	nop
  42dbf7:	mov    rcx,rsi
  42dbfa:	call   0x40215c
  42dbff:	nop
  42dc00:	mov    rcx,rdi
  42dc03:	call   0x40215c
  42dc08:	nop
  42dc09:	mov    rcx,r12
  42dc0c:	call   0x40215c
  42dc11:	nop
  42dc12:	mov    rcx,QWORD PTR [rsp+0x60]
  42dc17:	call   0x40215c
  42dc1c:	nop
  42dc1d:	mov    r13d,0x1
  42dc23:	jmp    0x4312f4
  42dc28:	mov    QWORD PTR [rsp+0x28],rbx
  42dc2d:	mov    QWORD PTR [rsp+0x20],rbx
  42dc32:	lea    r9,[rsp+0x48]
  42dc37:	mov    r13d,DWORD PTR [rsp+0x30]
  42dc3c:	mov    r8d,r13d
  42dc3f:	lea    rdx,[rsp+0xb8]
  42dc47:	mov    rcx,QWORD PTR [rbp+0x0]
  42dc4b:	call   0x42c4b4
  42dc50:	mov    r11,QWORD PTR [rsp+0x178]
  42dc58:	mov    QWORD PTR [rsp+0x28],r11
  42dc5d:	mov    QWORD PTR [rsp+0x20],rsi
  42dc62:	lea    r9,[rsp+0x48]
  42dc67:	mov    r8d,r13d
  42dc6a:	lea    rdx,[rsp+0xb8]
  42dc72:	mov    rcx,QWORD PTR [rbp+0x0]
  42dc76:	call   0x42c4b4
  42dc7b:	mov    eax,0x1
  42dc80:	jmp    0x42de73
  42dc85:	mov    QWORD PTR [rsp+0xa0],rbx
  42dc8d:	mov    DWORD PTR [rsp+0xa8],ebx
  42dc94:	mov    DWORD PTR [rsp+0xac],ebx
  42dc9b:	cmp    r14d,ebx
  42dc9e:	je     0x42dcd7
  42dca0:	mov    ebx,r14d
  42dca3:	shl    rbx,0x2
  42dca7:	mov    rcx,rbx
  42dcaa:	call   0x402130
  42dcaf:	mov    QWORD PTR [rsp+0xa0],rax
  42dcb7:	mov    DWORD PTR [rsp+0xa8],r14d
  42dcbf:	mov    DWORD PTR [rsp+0xac],r14d
  42dcc7:	mov    r8,rbx
  42dcca:	mov    rdx,r12
  42dccd:	mov    rcx,rax
  42dcd0:	call   0x44b480
  42dcd5:	xor    ebx,ebx
  42dcd7:	lea    r8,[rip+0x226d6]        # 0x4503b4
  42dcde:	lea    rdx,[rsp+0xa0]
  42dce6:	mov    rcx,QWORD PTR [rbp+0x0]
  42dcea:	call   0x42caa8
  42dcef:	mov    DWORD PTR [rsp+0x458],eax
  42dcf6:	cmp    eax,ebx
  42dcf8:	jl     0x42de6e
  42dcfe:	mov    QWORD PTR [rsp+0x78],rbx
  42dd03:	mov    ebx,0x400
  42dd08:	mov    rcx,rbx
  42dd0b:	call   0x402130
  42dd10:	mov    rsi,rax
  42dd13:	mov    QWORD PTR [rsp+0x70],rax
  42dd18:	mov    QWORD PTR [rsp+0x78],rbx
  42dd1d:	mov    QWORD PTR [rsp+0x188],rbx
  42dd25:	lea    r8,[rsp+0x188]
  42dd2d:	mov    rdx,rax
  42dd30:	mov    rcx,QWORD PTR [rbp+0x38]
  42dd34:	call   0x40e898
  42dd39:	mov    r13d,eax
  42dd3c:	xor    ebx,ebx
  42dd3e:	cmp    eax,ebx
  42dd40:	je     0x42dd75
  42dd42:	xor    ecx,ecx
  42dd44:	call   0x40215c
  42dd49:	nop
  42dd4a:	mov    rcx,rsi
  42dd4d:	call   0x40215c
  42dd52:	nop
  42dd53:	mov    rcx,rdi
  42dd56:	call   0x40215c
  42dd5b:	nop
  42dd5c:	mov    rcx,r12
  42dd5f:	call   0x40215c
  42dd64:	nop
  42dd65:	mov    rcx,QWORD PTR [rsp+0x60]
  42dd6a:	call   0x40215c
  42dd6f:	nop
  42dd70:	jmp    0x4312f4
  42dd75:	cmp    QWORD PTR [rsp+0x188],0x10
  42dd7e:	jb     0x42de3a
  42dd84:	mov    BYTE PTR [rsp+0x108],0x52
  42dd8c:	mov    BYTE PTR [rsp+0x109],0x61
  42dd94:	mov    BYTE PTR [rsp+0x10a],0x72
  42dd9c:	mov    BYTE PTR [rsp+0x10b],0x21
  42dda4:	mov    BYTE PTR [rsp+0x10c],0x1a
  42ddac:	mov    BYTE PTR [rsp+0x10d],0x7
  42ddb4:	mov    BYTE PTR [rsp+0x10e],bl
  42ddbb:	mov    rdx,rbx
  42ddbe:	lea    rax,[rsp+0x108]
  42ddc6:	mov    r8,rsi
  42ddc9:	sub    r8,rax
  42ddcc:	lea    rcx,[rsp+rdx*1+0x108]
  42ddd4:	mov    al,BYTE PTR [rcx]
  42ddd6:	cmp    BYTE PTR [rcx+r8*1],al
  42ddda:	jne    0x42de2e
  42dddc:	mov    eax,0x1
  42dde1:	add    rdx,rax
  42dde4:	cmp    rdx,0x7
  42dde8:	jb     0x42ddcc
  42ddea:	cmp    BYTE PTR [rsi+0x9],0x73
  42ddee:	jne    0x42de46
  42ddf0:	test   BYTE PTR [rsi+0xa],al
  42ddf3:	je     0x42de4d
  42ddf5:	mov    r13d,DWORD PTR [rsp+0x458]
  42ddfd:	mov    edx,DWORD PTR [r12+r13*4]
  42de01:	lea    rcx,[rsp+0x48]
  42de06:	call   0x4131dc
  42de0b:	mov    DWORD PTR [r12+r13*4],0xffffffff
  42de13:	cmp    r13d,DWORD PTR [rsp+0x30]
  42de18:	jl     0x42de54
  42de1a:	mov    r13d,DWORD PTR [rsp+0x30]
  42de1f:	mov    eax,0x1
  42de24:	add    r13d,eax
  42de27:	mov    DWORD PTR [rsp+0x30],r13d
  42de2c:	jmp    0x42de73
  42de2e:	mov    r13d,DWORD PTR [rsp+0x30]
  42de33:	mov    eax,0x1
  42de38:	jmp    0x42de73
  42de3a:	mov    r13d,DWORD PTR [rsp+0x30]
  42de3f:	mov    eax,0x1
  42de44:	jmp    0x42de73
  42de46:	mov    r13d,DWORD PTR [rsp+0x30]
  42de4b:	jmp    0x42de73
  42de4d:	mov    r13d,DWORD PTR [rsp+0x30]
  42de52:	jmp    0x42de73
  42de54:	mov    r13d,DWORD PTR [rsp+0x30]
  42de59:	mov    eax,0x1
  42de5e:	jmp    0x42de73
  42de60:	mov    eax,0x1
  42de65:	jmp    0x42de73
  42de67:	mov    eax,0x1
  42de6c:	jmp    0x42de73
  42de6e:	mov    eax,0x1
  42de73:	cmp    r14d,ebx
  42de76:	jbe    0x42de9e
  42de78:	mov    ebx,r14d
  42de7b:	cmp    DWORD PTR [r12],0xffffffff
  42de80:	je     0x42de95
  42de82:	mov    edx,DWORD PTR [r12]
  42de86:	lea    rcx,[rsp+0x48]
  42de8b:	call   0x4131dc
  42de90:	mov    eax,0x1
  42de95:	add    r12,0x4
  42de99:	sub    rbx,rax
  42de9c:	jne    0x42de7b
  42de9e:	lea    rdx,[rsp+0x48]
  42dea3:	lea    rcx,[rsp+0xb8]
  42deab:	call   0x42a304
  42deb0:	nop
  42deb1:	mov    rcx,QWORD PTR [rsp+0x48]
  42deb6:	call   0x40215c
  42debb:	nop
  42debc:	mov    rcx,rsi
  42debf:	call   0x40215c
  42dec4:	mov    r12,QWORD PTR [rsp+0xb8]
  42decc:	mov    r14d,DWORD PTR [rsp+0xc0]
  42ded4:	cmp    r14d,0x2
  42ded8:	jb     0x42dfa4
  42dede:	mov    QWORD PTR [rsp+0x48],rbx
  42dee3:	mov    DWORD PTR [rsp+0x50],ebx
  42dee7:	mov    DWORD PTR [rsp+0x54],ebx
  42deeb:	cmp    r14d,ebx
  42deee:	je     0x42df1e
  42def0:	mov    ebx,r14d
  42def3:	shl    rbx,0x2
  42def7:	mov    rcx,rbx
  42defa:	call   0x402130
  42deff:	mov    QWORD PTR [rsp+0x48],rax
  42df04:	mov    DWORD PTR [rsp+0x50],r14d
  42df09:	mov    DWORD PTR [rsp+0x54],r14d
  42df0e:	mov    r8,rbx
  42df11:	mov    rdx,r12
  42df14:	mov    rcx,rax
  42df17:	call   0x44b480
  42df1c:	xor    ebx,ebx
  42df1e:	lea    r8,[rip+0x22bcf]        # 0x450af4
  42df25:	lea    rdx,[rsp+0x48]
  42df2a:	mov    rcx,QWORD PTR [rbp+0x0]
  42df2e:	call   0x42caa8
  42df33:	mov    esi,eax
  42df35:	mov    QWORD PTR [rsp+0x48],rbx
  42df3a:	mov    DWORD PTR [rsp+0x50],ebx
  42df3e:	mov    DWORD PTR [rsp+0x54],ebx
  42df42:	cmp    r14d,ebx
  42df45:	je     0x42df75
  42df47:	mov    ebx,r14d
  42df4a:	shl    rbx,0x2
  42df4e:	mov    rcx,rbx
  42df51:	call   0x402130
  42df56:	mov    QWORD PTR [rsp+0x48],rax
  42df5b:	mov    DWORD PTR [rsp+0x50],r14d
  42df60:	mov    DWORD PTR [rsp+0x54],r14d
  42df65:	mov    r8,rbx
  42df68:	mov    rdx,r12
  42df6b:	mov    rcx,rax
  42df6e:	call   0x44b480
  42df73:	xor    ebx,ebx
  42df75:	lea    r8,[rip+0x22b74]        # 0x450af0
  42df7c:	lea    rdx,[rsp+0x48]
  42df81:	mov    rcx,QWORD PTR [rbp+0x0]
  42df85:	call   0x42caa8
  42df8a:	cmp    eax,esi
  42df8c:	jle    0x42dfa4
  42df8e:	cmp    esi,ebx
  42df90:	jl     0x42dfa4
  42df92:	mov    edx,DWORD PTR [r12+rsi*4]
  42df96:	mov    ecx,eax
  42df98:	mov    eax,DWORD PTR [r12+rcx*4]
  42df9c:	mov    DWORD PTR [r12+rcx*4],edx
  42dfa0:	mov    DWORD PTR [r12+rsi*4],eax
  42dfa4:	cmp    r13d,ebx
  42dfa7:	je     0x42dfc1
  42dfa9:	xor    r13d,r13d
  42dfac:	cmp    BYTE PTR [rsp+0x38],r13b
  42dfb1:	jne    0x42dfc4
  42dfb3:	mov    BYTE PTR [rsp+0x458],r13b
  42dfbb:	mov    ebx,DWORD PTR [rsp+0x30]
  42dfbf:	jmp    0x42dfd0
  42dfc1:	xor    r13d,r13d
  42dfc4:	mov    BYTE PTR [rsp+0x458],0x1
  42dfcc:	mov    ebx,DWORD PTR [rsp+0x30]
  42dfd0:	mov    rax,r13
  42dfd3:	mov    QWORD PTR [rsp+0x120],r13
  42dfdb:	cmp    QWORD PTR [rbp+0x38],r13
  42dfdf:	je     0x42e06e
  42dfe5:	mov    rcx,QWORD PTR [rbp+0x38]
  42dfe9:	mov    rax,QWORD PTR [rcx]
  42dfec:	lea    r9,[rsp+0x120]
  42dff4:	xor    edx,edx
  42dff6:	lea    r8d,[rdx+0x2]
  42dffa:	call   QWORD PTR [rax+0x20]
  42dffd:	mov    r13d,eax
  42e000:	xor    esi,esi
  42e002:	cmp    eax,esi
  42e004:	je     0x42e028
  42e006:	mov    rcx,rdi
  42e009:	call   0x40215c
  42e00e:	nop
  42e00f:	mov    rcx,r12
  42e012:	call   0x40215c
  42e017:	nop
  42e018:	mov    rcx,QWORD PTR [rsp+0x60]
  42e01d:	call   0x40215c
  42e022:	nop
  42e023:	jmp    0x4312f4
  42e028:	mov    rcx,QWORD PTR [rbp+0x38]
  42e02c:	mov    rax,QWORD PTR [rcx]
  42e02f:	xor    r9d,r9d
  42e032:	xor    r8d,r8d
  42e035:	xor    edx,edx
  42e037:	call   QWORD PTR [rax+0x20]
  42e03a:	mov    r13d,eax
  42e03d:	cmp    eax,esi
  42e03f:	je     0x42e063
  42e041:	mov    rcx,rdi
  42e044:	call   0x40215c
  42e049:	nop
  42e04a:	mov    rcx,r12
  42e04d:	call   0x40215c
  42e052:	nop
  42e053:	mov    rcx,QWORD PTR [rsp+0x60]
  42e058:	call   0x40215c
  42e05d:	nop
  42e05e:	jmp    0x4312f4
  42e063:	mov    rax,QWORD PTR [rsp+0x120]
  42e06b:	xor    r13d,r13d
  42e06e:	mov    QWORD PTR [r15+0xf0],rax
  42e075:	mov    rax,QWORD PTR [rbp+0x0]
  42e079:	mov    ecx,DWORD PTR [rax+0x48]
  42e07c:	mov    rsi,r13
  42e07f:	mov    QWORD PTR [rsp+0x160],r13
  42e087:	cmp    rcx,r13
  42e08a:	je     0x42e09c
  42e08c:	call   0x402130
  42e091:	mov    rsi,rax
  42e094:	mov    QWORD PTR [rsp+0x160],rax
  42e09c:	mov    ecx,r13d
  42e09f:	mov    rax,QWORD PTR [rbp+0x0]
  42e0a3:	cmp    DWORD PTR [rax+0x48],r13d
  42e0a7:	jbe    0x42e0c7
  42e0a9:	mov    edi,0x1
  42e0ae:	mov    eax,ecx
  42e0b0:	mov    BYTE PTR [rax+rsi*1],r13b
  42e0b4:	add    ecx,edi
  42e0b6:	mov    rax,QWORD PTR [rbp+0x0]
  42e0ba:	cmp    ecx,DWORD PTR [rax+0x48]
  42e0bd:	jb     0x42e0ae
  42e0bf:	mov    rdi,QWORD PTR [rsp+0x158]
  42e0c7:	movsxd rcx,DWORD PTR [rsp+0xc8]
  42e0cf:	mov    QWORD PTR [rsp+0x148],rcx
  42e0d7:	cmp    BYTE PTR [rbp+0x19],r13b
  42e0db:	je     0x42e81c
  42e0e1:	mov    eax,r14d
  42e0e4:	cmp    ecx,r13d
  42e0e7:	cmovge eax,ebx
  42e0ea:	mov    DWORD PTR [rsp+0x110],eax
  42e0f1:	mov    DWORD PTR [rsp+0x38],r13d
  42e0f6:	cmp    eax,r13d
  42e0f9:	jbe    0x42e81c
  42e0ff:	mov    rcx,r12
  42e102:	mov    QWORD PTR [rsp+0x140],r12
  42e10a:	mov    eax,DWORD PTR [rcx]
  42e10c:	mov    DWORD PTR [r15+0xc0],eax
  42e113:	mov    r14b,r13b
  42e116:	mov    BYTE PTR [rsp+0x34],r13b
  42e11b:	mov    rdx,rax
  42e11e:	mov    rax,QWORD PTR [rbp+0x0]
  42e122:	mov    rcx,QWORD PTR [rax+0x40]
  42e126:	mov    rax,QWORD PTR [rcx+rdx*8]
  42e12a:	mov    QWORD PTR [rsp+0x100],rax
  42e132:	cmp    DWORD PTR [rsp+0x38],ebx
  42e136:	jb     0x42e154
  42e138:	mov    eax,DWORD PTR [rax]
  42e13a:	shr    eax,0x8
  42e13d:	mov    ecx,0x1
  42e142:	test   cl,al
  42e144:	je     0x42e595
  42e14a:	mov    rax,rcx
  42e14d:	mov    r14b,al
  42e150:	mov    BYTE PTR [rsp+0x34],al
  42e154:	cmp    QWORD PTR [rbp+0x48],r13
  42e158:	je     0x42e17f
  42e15a:	mov    rcx,QWORD PTR [rbp+0x48]
  42e15e:	mov    rax,QWORD PTR [rcx]
  42e161:	lea    r8,[rsp+0x120]
  42e169:	xor    edx,edx
  42e16b:	call   QWORD PTR [rax+0x18]
  42e16e:	mov    r13d,eax
  42e171:	xor    eax,eax
  42e173:	cmp    r13d,eax
  42e176:	jne    0x42e5cc
  42e17c:	xor    r13d,r13d
  42e17f:	cmp    QWORD PTR [rbp+0x38],r13
  42e183:	je     0x42e1a8
  42e185:	mov    rcx,QWORD PTR [rbp+0x38]
  42e189:	mov    rax,QWORD PTR [rcx]
  42e18c:	xor    r9d,r9d
  42e18f:	xor    r8d,r8d
  42e192:	xor    edx,edx
  42e194:	call   QWORD PTR [rax+0x20]
  42e197:	mov    r13d,eax
  42e19a:	xor    eax,eax
  42e19c:	cmp    r13d,eax
  42e19f:	jne    0x42e5f7
  42e1a5:	xor    r13d,r13d
  42e1a8:	mov    QWORD PTR [rsp+0xd0],r13
  42e1b0:	lea    r9,[rsp+0xd0]
  42e1b8:	mov    r8d,DWORD PTR [r15+0xc0]
  42e1bf:	mov    rdx,rbp
  42e1c2:	mov    rcx,r15
  42e1c5:	call   0x42c598
  42e1ca:	mov    r13d,eax
  42e1cd:	xor    eax,eax
  42e1cf:	cmp    r13d,eax
  42e1d2:	jne    0x42e622
  42e1d8:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e1e0:	xor    r13d,r13d
  42e1e3:	cmp    rcx,r13
  42e1e6:	jne    0x42e1f0
  42e1e8:	lea    ecx,[rax+0x1]
  42e1eb:	jmp    0x42e595
  42e1f0:	mov    rdx,QWORD PTR [rbp+0x38]
  42e1f4:	cmp    rdx,r13
  42e1f7:	je     0x42e238
  42e1f9:	cmp    r14b,r13b
  42e1fc:	jne    0x42e21a
  42e1fe:	cmp    BYTE PTR [rsp+0x450],r13b
  42e206:	je     0x42e21a
  42e208:	mov    rax,QWORD PTR [rsp+0x170]
  42e210:	mov    QWORD PTR [rsp+0xd8],rax
  42e218:	jmp    0x42e222
  42e21a:	mov    QWORD PTR [rsp+0xd8],r13
  42e222:	mov    rax,QWORD PTR [rcx]
  42e225:	mov    r9,QWORD PTR [rbp+0x48]
  42e229:	lea    r8,[rsp+0xd8]
  42e231:	call   QWORD PTR [rax+0x18]
  42e234:	mov    ebx,eax
  42e236:	jmp    0x42e284
  42e238:	mov    QWORD PTR [rsp+0x168],r13
  42e240:	mov    rax,QWORD PTR [rcx]
  42e243:	lea    r8,[rsp+0x168]
  42e24b:	lea    rdx,[rip+0x25bd6]        # 0x453e28
  42e252:	call   QWORD PTR [rax]
  42e254:	mov    rcx,QWORD PTR [rsp+0x168]
  42e25c:	cmp    rcx,r13
  42e25f:	je     0x42e661
  42e265:	mov    rax,QWORD PTR [rcx]
  42e268:	mov    rdx,QWORD PTR [rbp+0x40]
  42e26c:	call   QWORD PTR [rax+0x18]
  42e26f:	mov    ebx,eax
  42e271:	mov    rcx,QWORD PTR [rsp+0x168]
  42e279:	cmp    rcx,r13
  42e27c:	je     0x42e284
  42e27e:	mov    rax,QWORD PTR [rcx]
  42e281:	call   QWORD PTR [rax+0x10]
  42e284:	mov    r9d,ebx
  42e287:	xor    r8d,r8d
  42e28a:	mov    rdx,QWORD PTR [rsp+0xd0]
  42e292:	mov    rcx,r15
  42e295:	call   0x429b20
  42e29a:	mov    r13d,eax
  42e29d:	xor    eax,eax
  42e29f:	cmp    r13d,eax
  42e2a2:	jne    0x42e6a6
  42e2a8:	lea    ecx,[rax+0x1]
  42e2ab:	cmp    ebx,ecx
  42e2ad:	jne    0x42e3cb
  42e2b3:	xor    r13d,r13d
  42e2b6:	cmp    BYTE PTR [r15+0x23],r13b
  42e2ba:	je     0x42e2c6
  42e2bc:	test   BYTE PTR [r15+0x24],cl
  42e2c0:	jne    0x42e2c6
  42e2c2:	mov    bl,cl
  42e2c4:	jmp    0x42e2c9
  42e2c6:	mov    bl,r13b
  42e2c9:	cmp    BYTE PTR [rbp+0x1a],r13b
  42e2cd:	je     0x42e2d4
  42e2cf:	cmp    bl,r13b
  42e2d2:	jne    0x42e2de
  42e2d4:	mov    eax,DWORD PTR [r15+0xc0]
  42e2db:	mov    BYTE PTR [rax+rsi*1],cl
  42e2de:	cmp    r14b,r13b
  42e2e1:	je     0x42e308
  42e2e3:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e2eb:	cmp    rcx,r13
  42e2ee:	je     0x42e581
  42e2f4:	mov    rax,QWORD PTR [rcx]
  42e2f7:	call   QWORD PTR [rax+0x10]
  42e2fa:	mov    ebx,DWORD PTR [rsp+0x30]
  42e2fe:	mov    ecx,0x1
  42e303:	jmp    0x42e595
  42e308:	cmp    DWORD PTR [rsp+0x38],r13d
  42e30d:	jne    0x42e3a6
  42e313:	cmp    DWORD PTR [rsp+0x30],ecx
  42e317:	jne    0x42e3a6
  42e31d:	mov    eax,DWORD PTR [r15+0xc0]
  42e324:	mov    DWORD PTR [r15+0x2c],eax
  42e328:	mov    al,BYTE PTR [r15+0x20]
  42e32c:	mov    BYTE PTR [r15+0x58],al
  42e330:	mov    al,BYTE PTR [r15+0x21]
  42e334:	mov    BYTE PTR [r15+0x59],al
  42e338:	mov    al,BYTE PTR [r15+0x22]
  42e33c:	mov    BYTE PTR [r15+0x5a],al
  42e340:	mov    al,BYTE PTR [r15+0x23]
  42e344:	mov    BYTE PTR [r15+0x5b],al
  42e348:	mov    eax,DWORD PTR [r15+0x24]
  42e34c:	mov    DWORD PTR [r15+0x5c],eax
  42e350:	mov    eax,DWORD PTR [r15+0x28]
  42e354:	mov    DWORD PTR [r15+0x60],eax
  42e358:	mov    eax,DWORD PTR [r15+0x2c]
  42e35c:	mov    DWORD PTR [r15+0x64],eax
  42e360:	mov    rax,QWORD PTR [r15+0x30]
  42e364:	mov    QWORD PTR [r15+0x68],rax
  42e368:	lea    rdx,[r15+0x38]
  42e36c:	lea    rcx,[r15+0x70]
  42e370:	call   0x4032f8
  42e375:	lea    rdx,[r15+0x48]
  42e379:	lea    rcx,[r15+0x80]
  42e380:	call   0x4032f8
  42e385:	cmp    BYTE PTR [rbp+0x1a],r13b
  42e389:	jne    0x42e3a6
  42e38b:	cmp    bl,r13b
  42e38e:	je     0x42e3a6
  42e390:	mov    rcx,QWORD PTR [rsp+0x100]
  42e398:	call   0x429a84
  42e39d:	cmp    al,r13b
  42e3a0:	je     0x42e6e5
  42e3a6:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e3ae:	cmp    rcx,r13
  42e3b1:	je     0x42e576
  42e3b7:	mov    rax,QWORD PTR [rcx]
  42e3ba:	call   QWORD PTR [rax+0x10]
  42e3bd:	mov    ebx,DWORD PTR [rsp+0x30]
  42e3c1:	mov    ecx,0x1
  42e3c6:	jmp    0x42e595
  42e3cb:	xor    r13d,r13d
  42e3ce:	cmp    ebx,r13d
  42e3d1:	jne    0x42e72a
  42e3d7:	mov    eax,DWORD PTR [r15+0xc0]
  42e3de:	cmp    BYTE PTR [rsp+0x35],r13b
  42e3e3:	je     0x42e3eb
  42e3e5:	lea    rbx,[rbp+0xc]
  42e3e9:	jmp    0x42e40b
  42e3eb:	cmp    BYTE PTR [rax+rdi*1],r13b
  42e3ef:	je     0x42e3f7
  42e3f1:	lea    rbx,[rbp+0xf]
  42e3f5:	jmp    0x42e40b
  42e3f7:	lea    rax,[rbp+0x15]
  42e3fb:	lea    rbx,[rbp+0x12]
  42e3ff:	cmp    BYTE PTR [rsp+0x458],r13b
  42e407:	cmovne rbx,rax
  42e40b:	mov    r14b,BYTE PTR [r15+0x20]
  42e40f:	cmp    r14b,r13b
  42e412:	je     0x42e450
  42e414:	cmp    BYTE PTR [rbp+0x1c],r13b
  42e418:	je     0x42e450
  42e41a:	mov    r8,QWORD PTR [r15+0xe0]
  42e421:	add    r8,QWORD PTR [r15+0xd8]
  42e428:	mov    rdx,rbp
  42e42b:	mov    rcx,r15
  42e42e:	call   0x429f18
  42e433:	mov    r13d,eax
  42e436:	xor    eax,eax
  42e438:	cmp    r13d,eax
  42e43b:	jne    0x42e76c
  42e441:	movzx  r14d,r14b
  42e445:	xor    r13d,r13d
  42e448:	cmp    BYTE PTR [r15+0x22],r13b
  42e44c:	cmovne r14d,r13d
  42e450:	mov    rax,QWORD PTR [r15+0xd8]
  42e457:	cmp    rax,r13
  42e45a:	jle    0x42e4aa
  42e45c:	cmp    BYTE PTR [rsp+0x34],r13b
  42e461:	jne    0x42e485
  42e463:	cmp    BYTE PTR [rsp+0x450],r13b
  42e46b:	je     0x42e485
  42e46d:	cmp    BYTE PTR [rbx+0x1],r13b
  42e471:	jne    0x42e479
  42e473:	cmp    BYTE PTR [rbx+0x2],r13b
  42e477:	je     0x42e485
  42e479:	cmp    BYTE PTR [rbp+0x1d],r13b
  42e47d:	je     0x42e4aa
  42e47f:	cmp    rax,QWORD PTR [rbp+0x20]
  42e483:	jbe    0x42e4aa
  42e485:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e48d:	cmp    rcx,r13
  42e490:	je     0x42e56b
  42e496:	mov    rax,QWORD PTR [rcx]
  42e499:	call   QWORD PTR [rax+0x10]
  42e49c:	mov    ebx,DWORD PTR [rsp+0x30]
  42e4a0:	mov    ecx,0x1
  42e4a5:	jmp    0x42e595
  42e4aa:	cmp    r14b,r13b
  42e4ad:	je     0x42e505
  42e4af:	cmp    rax,r13
  42e4b2:	jle    0x42e4df
  42e4b4:	cmp    BYTE PTR [rbx+0x2],r13b
  42e4b8:	jne    0x42e505
  42e4ba:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e4c2:	cmp    rcx,r13
  42e4c5:	je     0x42e560
  42e4cb:	mov    rax,QWORD PTR [rcx]
  42e4ce:	call   QWORD PTR [rax+0x10]
  42e4d1:	mov    ebx,DWORD PTR [rsp+0x30]
  42e4d5:	mov    ecx,0x1
  42e4da:	jmp    0x42e595
  42e4df:	cmp    BYTE PTR [rbx],r13b
  42e4e2:	jne    0x42e505
  42e4e4:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e4ec:	cmp    rcx,r13
  42e4ef:	je     0x42e555
  42e4f1:	mov    rax,QWORD PTR [rcx]
  42e4f4:	call   QWORD PTR [rax+0x10]
  42e4f7:	mov    ebx,DWORD PTR [rsp+0x30]
  42e4fb:	mov    ecx,0x1
  42e500:	jmp    0x42e595
  42e505:	cmp    rax,r13
  42e508:	jg     0x42e513
  42e50a:	cmp    r14b,r13b
  42e50d:	je     0x42e7ab
  42e513:	cmp    QWORD PTR [rsp+0x148],r13
  42e51b:	jge    0x42e7ab
  42e521:	mov    rcx,QWORD PTR [rsp+0x100]
  42e529:	call   0x429a84
  42e52e:	cmp    al,r13b
  42e531:	je     0x42e7ab
  42e537:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e53f:	cmp    rcx,r13
  42e542:	je     0x42e58c
  42e544:	mov    rax,QWORD PTR [rcx]
  42e547:	call   QWORD PTR [rax+0x10]
  42e54a:	mov    ebx,DWORD PTR [rsp+0x30]
  42e54e:	mov    ecx,0x1
  42e553:	jmp    0x42e595
  42e555:	mov    ebx,DWORD PTR [rsp+0x30]
  42e559:	mov    ecx,0x1
  42e55e:	jmp    0x42e595
  42e560:	mov    ebx,DWORD PTR [rsp+0x30]
  42e564:	mov    ecx,0x1
  42e569:	jmp    0x42e595
  42e56b:	mov    ebx,DWORD PTR [rsp+0x30]
  42e56f:	mov    ecx,0x1
  42e574:	jmp    0x42e595
  42e576:	mov    ebx,DWORD PTR [rsp+0x30]
  42e57a:	mov    ecx,0x1
  42e57f:	jmp    0x42e595
  42e581:	mov    ebx,DWORD PTR [rsp+0x30]
  42e585:	mov    ecx,0x1
  42e58a:	jmp    0x42e595
  42e58c:	mov    ebx,DWORD PTR [rsp+0x30]
  42e590:	mov    ecx,0x1
  42e595:	mov    eax,DWORD PTR [rsp+0x38]
  42e599:	add    eax,ecx
  42e59b:	mov    DWORD PTR [rsp+0x38],eax
  42e59f:	mov    rcx,QWORD PTR [rsp+0x140]
  42e5a7:	add    rcx,0x4
  42e5ab:	mov    QWORD PTR [rsp+0x140],rcx
  42e5b3:	cmp    eax,DWORD PTR [rsp+0x110]
  42e5ba:	jb     0x42e10a
  42e5c0:	mov    ecx,DWORD PTR [rsp+0xc8]
  42e5c7:	jmp    0x42e81c
  42e5cc:	mov    rcx,rsi
  42e5cf:	call   0x40215c
  42e5d4:	nop
  42e5d5:	mov    rcx,rdi
  42e5d8:	call   0x40215c
  42e5dd:	nop
  42e5de:	mov    rcx,r12
  42e5e1:	call   0x40215c
  42e5e6:	nop
  42e5e7:	mov    rcx,QWORD PTR [rsp+0x60]
  42e5ec:	call   0x40215c
  42e5f1:	nop
  42e5f2:	jmp    0x4312f4
  42e5f7:	mov    rcx,rsi
  42e5fa:	call   0x40215c
  42e5ff:	nop
  42e600:	mov    rcx,rdi
  42e603:	call   0x40215c
  42e608:	nop
  42e609:	mov    rcx,r12
  42e60c:	call   0x40215c
  42e611:	nop
  42e612:	mov    rcx,QWORD PTR [rsp+0x60]
  42e617:	call   0x40215c
  42e61c:	nop
  42e61d:	jmp    0x4312f4
  42e622:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e62a:	cmp    rcx,rax
  42e62d:	je     0x42e636
  42e62f:	mov    rax,QWORD PTR [rcx]
  42e632:	call   QWORD PTR [rax+0x10]
  42e635:	nop
  42e636:	mov    rcx,rsi
  42e639:	call   0x40215c
  42e63e:	nop
  42e63f:	mov    rcx,rdi
  42e642:	call   0x40215c
  42e647:	nop
  42e648:	mov    rcx,r12
  42e64b:	call   0x40215c
  42e650:	nop
  42e651:	mov    rcx,QWORD PTR [rsp+0x60]
  42e656:	call   0x40215c
  42e65b:	nop
  42e65c:	jmp    0x4312f4
  42e661:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e669:	cmp    rcx,r13
  42e66c:	je     0x42e675
  42e66e:	mov    rax,QWORD PTR [rcx]
  42e671:	call   QWORD PTR [rax+0x10]
  42e674:	nop
  42e675:	mov    rcx,rsi
  42e678:	call   0x40215c
  42e67d:	nop
  42e67e:	mov    rcx,rdi
  42e681:	call   0x40215c
  42e686:	nop
  42e687:	mov    rcx,r12
  42e68a:	call   0x40215c
  42e68f:	nop
  42e690:	mov    rcx,QWORD PTR [rsp+0x60]
  42e695:	call   0x40215c
  42e69a:	nop
  42e69b:	mov    r13d,0x80004001
  42e6a1:	jmp    0x4312f4
  42e6a6:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e6ae:	cmp    rcx,rax
  42e6b1:	je     0x42e6ba
  42e6b3:	mov    rax,QWORD PTR [rcx]
  42e6b6:	call   QWORD PTR [rax+0x10]
  42e6b9:	nop
  42e6ba:	mov    rcx,rsi
  42e6bd:	call   0x40215c
  42e6c2:	nop
  42e6c3:	mov    rcx,rdi
  42e6c6:	call   0x40215c
  42e6cb:	nop
  42e6cc:	mov    rcx,r12
  42e6cf:	call   0x40215c
  42e6d4:	nop
  42e6d5:	mov    rcx,QWORD PTR [rsp+0x60]
  42e6da:	call   0x40215c
  42e6df:	nop
  42e6e0:	jmp    0x4312f4
  42e6e5:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e6ed:	cmp    rcx,r13
  42e6f0:	je     0x42e6f9
  42e6f2:	mov    rax,QWORD PTR [rcx]
  42e6f5:	call   QWORD PTR [rax+0x10]
  42e6f8:	nop
  42e6f9:	mov    rcx,rsi
  42e6fc:	call   0x40215c
  42e701:	nop
  42e702:	mov    rcx,rdi
  42e705:	call   0x40215c
  42e70a:	nop
  42e70b:	mov    rcx,r12
  42e70e:	call   0x40215c
  42e713:	nop
  42e714:	mov    rcx,QWORD PTR [rsp+0x60]
  42e719:	call   0x40215c
  42e71e:	nop
  42e71f:	mov    r13d,0x1
  42e725:	jmp    0x4312f4
  42e72a:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e732:	cmp    rcx,r13
  42e735:	je     0x42e73e
  42e737:	mov    rax,QWORD PTR [rcx]
  42e73a:	call   QWORD PTR [rax+0x10]
  42e73d:	nop
  42e73e:	mov    rcx,rsi
  42e741:	call   0x40215c
  42e746:	nop
  42e747:	mov    rcx,rdi
  42e74a:	call   0x40215c
  42e74f:	nop
  42e750:	mov    rcx,r12
  42e753:	call   0x40215c
  42e758:	nop
  42e759:	mov    rcx,QWORD PTR [rsp+0x60]
  42e75e:	call   0x40215c
  42e763:	nop
  42e764:	mov    r13d,ebx
  42e767:	jmp    0x4312f4
  42e76c:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e774:	cmp    rcx,rax
  42e777:	je     0x42e780
  42e779:	mov    rax,QWORD PTR [rcx]
  42e77c:	call   QWORD PTR [rax+0x10]
  42e77f:	nop
  42e780:	mov    rcx,rsi
  42e783:	call   0x40215c
  42e788:	nop
  42e789:	mov    rcx,rdi
  42e78c:	call   0x40215c
  42e791:	nop
  42e792:	mov    rcx,r12
  42e795:	call   0x40215c
  42e79a:	nop
  42e79b:	mov    rcx,QWORD PTR [rsp+0x60]
  42e7a0:	call   0x40215c
  42e7a5:	nop
  42e7a6:	jmp    0x4312f4
  42e7ab:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e7b3:	mov    rbx,rcx
  42e7b6:	cmp    rcx,r13
  42e7b9:	je     0x42e7c9
  42e7bb:	mov    rax,QWORD PTR [rcx]
  42e7be:	call   QWORD PTR [rax+0x8]
  42e7c1:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e7c9:	mov    rdx,QWORD PTR [r15]
  42e7cc:	cmp    rdx,r13
  42e7cf:	je     0x42e7e2
  42e7d1:	mov    rax,QWORD PTR [rdx]
  42e7d4:	mov    rcx,rdx
  42e7d7:	call   QWORD PTR [rax+0x10]
  42e7da:	mov    rcx,QWORD PTR [rsp+0xd0]
  42e7e2:	mov    QWORD PTR [r15],rbx
  42e7e5:	cmp    rcx,r13
  42e7e8:	je     0x42e7f1
  42e7ea:	mov    rax,QWORD PTR [rcx]
  42e7ed:	call   QWORD PTR [rax+0x10]
  42e7f0:	nop
  42e7f1:	mov    rcx,rsi
  42e7f4:	call   0x40215c
  42e7f9:	nop
  42e7fa:	mov    rcx,rdi
  42e7fd:	call   0x40215c
  42e802:	nop
  42e803:	mov    rcx,r12
  42e806:	call   0x40215c
  42e80b:	nop
  42e80c:	mov    rcx,QWORD PTR [rsp+0x60]
  42e811:	call   0x40215c
  42e816:	nop
  42e817:	jmp    0x4312f4
  42e81c:	cmp    QWORD PTR [rbp+0x38],r13
  42e820:	jne    0x42e853
  42e822:	mov    rcx,rsi
  42e825:	call   0x40215c
  42e82a:	nop
  42e82b:	mov    rcx,rdi
  42e82e:	call   0x40215c
  42e833:	nop
  42e834:	mov    rcx,r12
  42e837:	call   0x40215c
  42e83c:	nop
  42e83d:	mov    rcx,QWORD PTR [rsp+0x60]
  42e842:	call   0x40215c
  42e847:	nop
  42e848:	mov    r13d,0x1
  42e84e:	jmp    0x4312f4
  42e853:	cmp    ecx,r13d
  42e856:	jl     0x42e90d
  42e85c:	cmp    BYTE PTR [rbp+0x1a],r13b
  42e860:	jne    0x42e90d
  42e866:	cmp    BYTE PTR [rbp+0x1d],r13b
  42e86a:	je     0x42e8a7
  42e86c:	cmp    QWORD PTR [rbp+0x20],r13
  42e870:	jne    0x42e90d
  42e876:	mov    rcx,rsi
  42e879:	call   0x40215c
  42e87e:	nop
  42e87f:	mov    rcx,rdi
  42e882:	call   0x40215c
  42e887:	nop
  42e888:	mov    rcx,r12
  42e88b:	call   0x40215c
  42e890:	nop
  42e891:	mov    rcx,QWORD PTR [rsp+0x60]
  42e896:	call   0x40215c
  42e89b:	nop
  42e89c:	mov    r13d,0x1
  42e8a2:	jmp    0x4312f4
  42e8a7:	mov    edx,ecx
  42e8a9:	mov    rax,QWORD PTR [rbp+0x0]
  42e8ad:	mov    rcx,QWORD PTR [rax+0x40]
  42e8b1:	mov    rbx,QWORD PTR [rcx+rdx*8]
  42e8b5:	lea    rdx,[rsp+0x60]
  42e8ba:	mov    rcx,rbx
  42e8bd:	call   0x42771c
  42e8c2:	cmp    eax,r13d
  42e8c5:	jl     0x42e90d
  42e8c7:	mov    eax,DWORD PTR [rbx]
  42e8c9:	shr    eax,0x3
  42e8cc:	mov    ebx,0x1
  42e8d1:	test   bl,al
  42e8d3:	je     0x42e90d
  42e8d5:	cmp    BYTE PTR [rsp+0x450],r13b
  42e8dd:	je     0x42e90d
  42e8df:	mov    rcx,rsi
  42e8e2:	call   0x40215c
  42e8e7:	nop
  42e8e8:	mov    rcx,rdi
  42e8eb:	call   0x40215c
  42e8f0:	nop
  42e8f1:	mov    rcx,r12
  42e8f4:	call   0x40215c
  42e8f9:	nop
  42e8fa:	mov    rcx,QWORD PTR [rsp+0x60]
  42e8ff:	call   0x40215c
  42e904:	nop
  42e905:	mov    r13d,ebx
  42e908:	jmp    0x4312f4
  42e90d:	mov    ecx,0x38
  42e912:	call   0x402130
  42e917:	mov    r14,rax
  42e91a:	mov    QWORD PTR [rsp+0x118],rax
  42e922:	cmp    rax,r13
  42e925:	je     0x42e956
  42e927:	mov    DWORD PTR [rax+0x10],r13d
  42e92b:	lea    rax,[rip+0x21f4e]        # 0x450880
  42e932:	mov    QWORD PTR [r14],rax
  42e935:	lea    rax,[rip+0x21f24]        # 0x450860
  42e93c:	mov    QWORD PTR [r14+0x8],rax
  42e940:	mov    QWORD PTR [r14+0x18],r13
  42e944:	mov    DWORD PTR [r14+0x20],r13d
  42e948:	mov    DWORD PTR [r14+0x24],r13d
  42e94c:	mov    QWORD PTR [r14+0x28],r13
  42e950:	mov    QWORD PTR [r14+0x30],r13
  42e954:	jmp    0x42e961
  42e956:	mov    r14,r13
  42e959:	mov    QWORD PTR [rsp+0x118],r13
  42e961:	mov    QWORD PTR [rsp+0x2c8],r14
  42e969:	cmp    r14,r13
  42e96c:	je     0x42e978
  42e96e:	mov    rax,QWORD PTR [r14]
  42e971:	mov    rcx,r14
  42e974:	call   QWORD PTR [rax+0x8]
  42e977:	nop
  42e978:	mov    ecx,0x30
  42e97d:	call   0x402130
  42e982:	mov    rbx,rax
  42e985:	mov    QWORD PTR [rsp+0x80],rax
  42e98d:	cmp    rax,r13
  42e990:	je     0x42e9b1
  42e992:	mov    DWORD PTR [rax+0x10],r13d
  42e996:	lea    rax,[rip+0x22053]        # 0x4509f0
  42e99d:	mov    QWORD PTR [rbx],rax
  42e9a0:	lea    rax,[rip+0x22029]        # 0x4509d0
  42e9a7:	mov    QWORD PTR [rbx+0x8],rax
  42e9ab:	mov    QWORD PTR [rbx+0x18],r13
  42e9af:	jmp    0x42e9bc
  42e9b1:	mov    rbx,r13
  42e9b4:	mov    QWORD PTR [rsp+0x80],r13
  42e9bc:	mov    QWORD PTR [rsp+0x2d0],rbx
  42e9c4:	cmp    rbx,r13
  42e9c7:	je     0x42e9d3
  42e9c9:	mov    rax,QWORD PTR [rbx]
  42e9cc:	mov    rcx,rbx
  42e9cf:	call   QWORD PTR [rax+0x8]
  42e9d2:	nop
  42e9d3:	mov    r13,QWORD PTR [rbp+0x48]
  42e9d7:	xor    eax,eax
  42e9d9:	cmp    r13,rax
  42e9dc:	je     0x42e9ea
  42e9de:	mov    rax,QWORD PTR [r13+0x0]
  42e9e2:	mov    rcx,r13
  42e9e5:	call   QWORD PTR [rax+0x8]
  42e9e8:	xor    eax,eax
  42e9ea:	mov    rcx,QWORD PTR [rbx+0x18]
  42e9ee:	cmp    rcx,rax
  42e9f1:	je     0x42e9f9
  42e9f3:	mov    rax,QWORD PTR [rcx]
  42e9f6:	call   QWORD PTR [rax+0x10]
  42e9f9:	mov    QWORD PTR [rbx+0x18],r13
  42e9fd:	xor    ecx,ecx
  42e9ff:	mov    QWORD PTR [rbx+0x20],rcx
  42ea03:	mov    QWORD PTR [rbx+0x28],rcx
  42ea07:	mov    QWORD PTR [rsp+0x70],rcx
  42ea0c:	mov    QWORD PTR [rsp+0x78],rcx
  42ea11:	mov    BYTE PTR [rsp+0x450],cl
  42ea18:	mov    edx,0x100000
  42ea1d:	mov    r13,rdx
  42ea20:	mov    QWORD PTR [rsp+0xe0],rdx
  42ea28:	mov    rax,QWORD PTR [rsp+0x120]
  42ea30:	cmp    rax,rdx
  42ea33:	jae    0x42ea4d
  42ea35:	mov    r13,rax
  42ea38:	mov    QWORD PTR [rsp+0xe0],rax
  42ea40:	mov    BYTE PTR [rsp+0x450],0x1
  42ea48:	cmp    rax,rcx
  42ea4b:	je     0x42ea69
  42ea4d:	mov    QWORD PTR [rsp+0x78],rcx
  42ea52:	cmp    r13,rcx
  42ea55:	je     0x42ea69
  42ea57:	mov    rcx,r13
  42ea5a:	call   0x402130
  42ea5f:	mov    QWORD PTR [rsp+0x70],rax
  42ea64:	mov    QWORD PTR [rsp+0x78],r13
  42ea69:	mov    rcx,QWORD PTR [rbp+0x38]
  42ea6d:	mov    r10,QWORD PTR [rcx]
  42ea70:	xor    r9d,r9d
  42ea73:	xor    r8d,r8d
  42ea76:	xor    edx,edx
  42ea78:	call   QWORD PTR [r10+0x20]
  42ea7c:	mov    r13d,eax
  42ea7f:	xor    eax,eax
  42ea81:	cmp    r13d,eax
  42ea84:	je     0x42ead7
  42ea86:	mov    rcx,QWORD PTR [rsp+0x70]
  42ea8b:	call   0x40215c
  42ea90:	nop
  42ea91:	mov    rax,QWORD PTR [rbx]
  42ea94:	mov    rcx,rbx
  42ea97:	call   QWORD PTR [rax+0x10]
  42ea9a:	nop
  42ea9b:	xor    eax,eax
  42ea9d:	cmp    r14,rax
  42eaa0:	je     0x42eaac
  42eaa2:	mov    rax,QWORD PTR [r14]
  42eaa5:	mov    rcx,r14
  42eaa8:	call   QWORD PTR [rax+0x10]
  42eaab:	nop
  42eaac:	mov    rcx,rsi
  42eaaf:	call   0x40215c
  42eab4:	nop
  42eab5:	mov    rcx,rdi
  42eab8:	call   0x40215c
  42eabd:	nop
  42eabe:	mov    rcx,r12
  42eac1:	call   0x40215c
  42eac6:	nop
  42eac7:	mov    rcx,QWORD PTR [rsp+0x60]
  42eacc:	call   0x40215c
  42ead1:	nop
  42ead2:	jmp    0x4312f4
  42ead7:	mov    rax,QWORD PTR [rsp+0xe0]
  42eadf:	mov    QWORD PTR [rsp+0x140],rax
  42eae7:	lea    r8,[rsp+0x140]
  42eaef:	mov    rdx,QWORD PTR [rsp+0x70]
  42eaf4:	mov    rcx,QWORD PTR [rbp+0x38]
  42eaf8:	call   0x40e898
  42eafd:	mov    r13d,eax
  42eb00:	xor    eax,eax
  42eb02:	cmp    r13d,eax
  42eb05:	je     0x42eb58
  42eb07:	mov    rcx,QWORD PTR [rsp+0x70]
  42eb0c:	call   0x40215c
  42eb11:	nop
  42eb12:	mov    rax,QWORD PTR [rbx]
  42eb15:	mov    rcx,rbx
  42eb18:	call   QWORD PTR [rax+0x10]
  42eb1b:	nop
  42eb1c:	xor    eax,eax
  42eb1e:	cmp    r14,rax
  42eb21:	je     0x42eb2d
  42eb23:	mov    rax,QWORD PTR [r14]
  42eb26:	mov    rcx,r14
  42eb29:	call   QWORD PTR [rax+0x10]
  42eb2c:	nop
  42eb2d:	mov    rcx,rsi
  42eb30:	call   0x40215c
  42eb35:	nop
  42eb36:	mov    rcx,rdi
  42eb39:	call   0x40215c
  42eb3e:	nop
  42eb3f:	mov    rcx,r12
  42eb42:	call   0x40215c
  42eb47:	nop
  42eb48:	mov    rcx,QWORD PTR [rsp+0x60]
  42eb4d:	call   0x40215c
  42eb52:	nop
  42eb53:	jmp    0x4312f4
  42eb58:	mov    rax,QWORD PTR [rsp+0x140]
  42eb60:	xor    r13d,r13d
  42eb63:	cmp    rax,r13
  42eb66:	jne    0x42ebbd
  42eb68:	mov    rcx,QWORD PTR [rsp+0x70]
  42eb6d:	call   0x40215c
  42eb72:	nop
  42eb73:	mov    rax,QWORD PTR [rbx]
  42eb76:	mov    rcx,rbx
  42eb79:	call   QWORD PTR [rax+0x10]
  42eb7c:	nop
  42eb7d:	cmp    r14,r13
  42eb80:	je     0x42eb8c
  42eb82:	mov    rax,QWORD PTR [r14]
  42eb85:	mov    rcx,r14
  42eb88:	call   QWORD PTR [rax+0x10]
  42eb8b:	nop
  42eb8c:	mov    rcx,rsi
  42eb8f:	call   0x40215c
  42eb94:	nop
  42eb95:	mov    rcx,rdi
  42eb98:	call   0x40215c
  42eb9d:	nop
  42eb9e:	mov    rcx,r12
  42eba1:	call   0x40215c
  42eba6:	nop
  42eba7:	mov    rcx,QWORD PTR [rsp+0x60]
  42ebac:	call   0x40215c
  42ebb1:	nop
  42ebb2:	mov    r13d,0x1
  42ebb8:	jmp    0x4312f4
  42ebbd:	movzx  ecx,BYTE PTR [rsp+0x450]
  42ebc5:	cmp    rax,QWORD PTR [rsp+0xe0]
  42ebcd:	mov    eax,0x1
  42ebd2:	cmovb  ecx,eax
  42ebd5:	mov    DWORD PTR [rsp+0xc8],ecx
  42ebdc:	mov    rax,r13
  42ebdf:	mov    QWORD PTR [rsp+0x48],r13
  42ebe4:	mov    DWORD PTR [rsp+0x50],r13d
  42ebe9:	mov    DWORD PTR [rsp+0x54],r13d
  42ebee:	mov    DWORD PTR [rsp+0x30],0xffffffff
  42ebf6:	mov    ecx,DWORD PTR [rsp+0xc0]
  42ebfd:	cmp    ecx,r13d
  42ec00:	jbe    0x42ef2d
  42ec06:	mov    rdi,r12
  42ec09:	mov    QWORD PTR [rsp+0x100],r12
  42ec11:	mov    QWORD PTR [rsp+0x98],rcx
  42ec19:	mov    r12,QWORD PTR [rsp+0x70]
  42ec1e:	mov    r14d,DWORD PTR [rsp+0xc8]
  42ec26:	mov    rax,rcx
  42ec29:	mov    ecx,0x1
  42ec2e:	mov    ebx,DWORD PTR [rdi]
  42ec30:	mov    DWORD PTR [rsp+0x110],ebx
  42ec37:	xor    r15d,r15d
  42ec3a:	cmp    BYTE PTR [rbx+rsi*1],r15b
  42ec3e:	jne    0x42eee9
  42ec44:	mov    rax,QWORD PTR [rbp+0x0]
  42ec48:	mov    rcx,QWORD PTR [rax+0x40]
  42ec4c:	mov    r13,QWORD PTR [rcx+rbx*8]
  42ec50:	lea    rdx,[rip+0x2177d]        # 0x4503d4
  42ec57:	mov    rcx,QWORD PTR [r13+0x18]
  42ec5b:	call   0x402864
  42ec60:	cmp    al,r15b
  42ec63:	je     0x42ec7f
  42ec65:	mov    edx,ebx
  42ec67:	mov    DWORD PTR [rsp+0x30],ebx
  42ec6b:	mov    rax,QWORD PTR [rsp+0x98]
  42ec73:	xor    r13d,r13d
  42ec76:	lea    ecx,[r15+0x1]
  42ec7a:	jmp    0x42eef0
  42ec7f:	mov    rax,QWORD PTR [r13+0x10]
  42ec83:	cmp    rax,r15
  42ec86:	je     0x42ecd4
  42ec88:	mov    rdx,QWORD PTR [rsp+0x140]
  42ec90:	mov    rcx,r12
  42ec93:	call   rax
  42ec95:	xor    r13d,r13d
  42ec98:	cmp    eax,r13d
  42ec9b:	je     0x42eed6
  42eca1:	cmp    eax,0x2
  42eca4:	jne    0x42ecaf
  42eca6:	cmp    r14b,r13b
  42eca9:	jne    0x42eec3
  42ecaf:	mov    r8d,ebx
  42ecb2:	xor    edx,edx
  42ecb4:	lea    rcx,[rsp+0x48]
  42ecb9:	call   0x40e964
  42ecbe:	mov    edx,DWORD PTR [rsp+0x30]
  42ecc2:	mov    rax,QWORD PTR [rsp+0x98]
  42ecca:	mov    ecx,0x1
  42eccf:	jmp    0x42eef0
  42ecd4:	cmp    BYTE PTR [r13+0x41],r15b
  42ecd8:	je     0x42ece5
  42ecda:	mov    r8d,0x1
  42ece0:	mov    dl,r8b
  42ece3:	jmp    0x42ed52
  42ece5:	mov    DWORD PTR [rsp+0x450],r15d
  42eced:	lea    rax,[rip+0x2164c]        # 0x450340
  42ecf4:	mov    QWORD PTR [rsp+0xd8],rax
  42ecfc:	mov    rdx,QWORD PTR [rax]
  42ecff:	mov    rcx,QWORD PTR [r13+0x18]
  42ed03:	call   0x402864
  42ed08:	cmp    al,r15b
  42ed0b:	jne    0x42ed3f
  42ed0d:	mov    ecx,DWORD PTR [rsp+0x450]
  42ed14:	mov    r8d,0x1
  42ed1a:	add    ecx,r8d
  42ed1d:	mov    DWORD PTR [rsp+0x450],ecx
  42ed24:	mov    rax,QWORD PTR [rsp+0xd8]
  42ed2c:	add    rax,0x8
  42ed30:	mov    QWORD PTR [rsp+0xd8],rax
  42ed38:	cmp    ecx,0xa
  42ed3b:	jb     0x42ecfc
  42ed3d:	jmp    0x42ed4a
  42ed3f:	mov    r8d,0x1
  42ed45:	mov    dl,r8b
  42ed48:	jmp    0x42ed4d
  42ed4a:	mov    dl,r15b
  42ed4d:	cmp    dl,r15b
  42ed50:	je     0x42ed82
  42ed52:	cmp    DWORD PTR [r13+0x50],r15d
  42ed56:	je     0x42ed82
  42ed58:	mov    ecx,DWORD PTR [r13+0x0]
  42ed5c:	mov    eax,ecx
  42ed5e:	shr    eax,0x7
  42ed61:	test   r8b,al
  42ed64:	jne    0x42ed82
  42ed66:	mov    eax,ecx
  42ed68:	shr    eax,0x6
  42ed6b:	test   r8b,al
  42ed6e:	jne    0x42ed82
  42ed70:	shr    ecx,0x8
  42ed73:	test   r8b,cl
  42ed76:	jne    0x42ed82
  42ed78:	mov    BYTE PTR [rsp+0x450],r15b
  42ed80:	jmp    0x42ed8a
  42ed82:	mov    BYTE PTR [rsp+0x450],r8b
  42ed8a:	cmp    dl,r15b
  42ed8d:	je     0x42ee78
  42ed93:	mov    eax,DWORD PTR [r13+0x50]
  42ed97:	cmp    eax,r15d
  42ed9a:	je     0x42ee82
  42eda0:	mov    edx,r15d
  42eda3:	mov    DWORD PTR [rsp+0x38],r15d
  42eda8:	cmp    eax,r15d
  42edab:	jbe    0x42ee46
  42edb1:	mov    rbx,r15
  42edb4:	mov    r15b,BYTE PTR [rsp+0x450]
  42edbc:	mov    ebp,DWORD PTR [rsp+0xc8]
  42edc3:	xor    esi,esi
  42edc5:	lea    edi,[rsi+0x1]
  42edc8:	mov    rax,QWORD PTR [r13+0x48]
  42edcc:	mov    r9,QWORD PTR [rbx+rax*1]
  42edd0:	mov    r10,QWORD PTR [r9+0x8]
  42edd4:	mov    r8d,DWORD PTR [r13+0x44]
  42edd8:	lea    ecx,[r10+r8*1]
  42eddc:	cmp    QWORD PTR [rsp+0x140],rcx
  42ede4:	jae    0x42edf0
  42ede6:	cmp    bpl,sil
  42ede9:	jne    0x42ee07
  42edeb:	mov    r15b,dil
  42edee:	jmp    0x42ee07
  42edf0:	lea    rdx,[r12+r8*1]
  42edf4:	mov    r8,r10
  42edf7:	mov    rcx,QWORD PTR [r9]
  42edfa:	call   0x44b786
  42edff:	cmp    eax,esi
  42ee01:	je     0x42ee19
  42ee03:	mov    edx,DWORD PTR [rsp+0x38]
  42ee07:	add    edx,edi
  42ee09:	mov    DWORD PTR [rsp+0x38],edx
  42ee0d:	add    rbx,0x8
  42ee11:	cmp    edx,DWORD PTR [r13+0x50]
  42ee15:	jb     0x42edc8
  42ee17:	jmp    0x42ee1d
  42ee19:	mov    edx,DWORD PTR [rsp+0x38]
  42ee1d:	mov    rsi,QWORD PTR [rsp+0x160]
  42ee25:	mov    rbp,QWORD PTR [rsp+0x448]
  42ee2d:	mov    ebx,DWORD PTR [rsp+0x110]
  42ee34:	mov    r14d,DWORD PTR [rsp+0xc8]
  42ee3c:	mov    rdi,QWORD PTR [rsp+0x100]
  42ee44:	jmp    0x42ee4e
  42ee46:	mov    r15b,BYTE PTR [rsp+0x450]
  42ee4e:	cmp    edx,DWORD PTR [r13+0x50]
  42ee52:	je     0x42ee8a
  42ee54:	mov    r8d,ebx
  42ee57:	xor    edx,edx
  42ee59:	lea    rcx,[rsp+0x48]
  42ee5e:	call   0x40e964
  42ee63:	mov    edx,DWORD PTR [rsp+0x30]
  42ee67:	mov    rax,QWORD PTR [rsp+0x98]
  42ee6f:	xor    r13d,r13d
  42ee72:	lea    ecx,[r13+0x1]
  42ee76:	jmp    0x42eef0
  42ee78:	mov    r15b,BYTE PTR [rsp+0x450]
  42ee80:	jmp    0x42ee8a
  42ee82:	mov    r15b,BYTE PTR [rsp+0x450]
  42ee8a:	xor    r13d,r13d
  42ee8d:	cmp    r15b,r13b
  42ee90:	je     0x42eeb0
  42ee92:	mov    edx,ebx
  42ee94:	lea    rcx,[rsp+0x48]
  42ee99:	call   0x4131dc
  42ee9e:	mov    edx,DWORD PTR [rsp+0x30]
  42eea2:	mov    rax,QWORD PTR [rsp+0x98]
  42eeaa:	lea    ecx,[r13+0x1]
  42eeae:	jmp    0x42eef0
  42eeb0:	mov    edx,DWORD PTR [rsp+0x30]
  42eeb4:	mov    rax,QWORD PTR [rsp+0x98]
  42eebc:	mov    ecx,0x1
  42eec1:	jmp    0x42eef0
  42eec3:	mov    edx,DWORD PTR [rsp+0x30]
  42eec7:	mov    rax,QWORD PTR [rsp+0x98]
  42eecf:	mov    ecx,0x1
  42eed4:	jmp    0x42eef0
  42eed6:	mov    edx,DWORD PTR [rsp+0x30]
  42eeda:	mov    rax,QWORD PTR [rsp+0x98]
  42eee2:	mov    ecx,0x1
  42eee7:	jmp    0x42eef0
  42eee9:	mov    edx,DWORD PTR [rsp+0x30]
  42eeed:	xor    r13d,r13d
  42eef0:	add    rdi,0x4
  42eef4:	mov    QWORD PTR [rsp+0x100],rdi
  42eefc:	sub    rax,rcx
  42eeff:	mov    QWORD PTR [rsp+0x98],rax
  42ef07:	jne    0x42ec2e
  42ef0d:	cmp    edx,r13d
  42ef10:	jl     0x42ef28
  42ef12:	mov    r8d,edx
  42ef15:	xor    edx,edx
  42ef17:	lea    rcx,[rsp+0x48]
  42ef1c:	call   0x40e964
  42ef21:	mov    rax,QWORD PTR [rsp+0x48]
  42ef26:	jmp    0x42ef2d
  42ef28:	mov    rax,QWORD PTR [rsp+0x48]
  42ef2d:	mov    DWORD PTR [rsp+0x450],r13d
  42ef35:	cmp    DWORD PTR [rsp+0x50],r13d
  42ef3a:	mov    rdi,QWORD PTR [rsp+0x158]
  42ef42:	mov    r14,QWORD PTR [rsp+0x118]
  42ef4a:	mov    r15,QWORD PTR [rsp+0x440]
  42ef52:	mov    rbx,QWORD PTR [rsp+0x80]
  42ef5a:	mov    r12,QWORD PTR [rsp+0xb8]
  42ef62:	jbe    0x42f799
  42ef68:	mov    QWORD PTR [rsp+0x100],rax
  42ef70:	mov    eax,DWORD PTR [rax]
  42ef72:	mov    DWORD PTR [r15+0xc0],eax
  42ef79:	mov    rdx,rax
  42ef7c:	mov    rax,QWORD PTR [rbp+0x0]
  42ef80:	mov    rcx,QWORD PTR [rax+0x40]
  42ef84:	mov    rax,QWORD PTR [rcx+rdx*8]
  42ef88:	mov    QWORD PTR [rsp+0xd8],rax
  42ef90:	cmp    QWORD PTR [rbp+0x48],r13
  42ef94:	je     0x42efb8
  42ef96:	mov    rcx,QWORD PTR [rbp+0x48]
  42ef9a:	mov    rax,QWORD PTR [rcx]
  42ef9d:	lea    r8,[rsp+0x120]
  42efa5:	xor    edx,edx
  42efa7:	call   QWORD PTR [rax+0x18]
  42efaa:	mov    r13d,eax
  42efad:	xor    eax,eax
  42efaf:	cmp    r13d,eax
  42efb2:	jne    0x42f353
  42efb8:	mov    rcx,QWORD PTR [rbp+0x38]
  42efbc:	mov    rax,QWORD PTR [rcx]
  42efbf:	xor    r9d,r9d
  42efc2:	xor    r8d,r8d
  42efc5:	xor    edx,edx
  42efc7:	call   QWORD PTR [rax+0x20]
  42efca:	mov    r13d,eax
  42efcd:	xor    eax,eax
  42efcf:	cmp    r13d,eax
  42efd2:	jne    0x42f3af
  42efd8:	mov    QWORD PTR [rsp+0xf0],rax
  42efe0:	lea    r9,[rsp+0xf0]
  42efe8:	mov    r8d,DWORD PTR [r15+0xc0]
  42efef:	mov    rdx,rbp
  42eff2:	mov    rcx,r15
  42eff5:	call   0x42c598
  42effa:	mov    r13d,eax
  42effd:	xor    eax,eax
  42efff:	cmp    r13d,eax
  42f002:	jne    0x42f40b
  42f008:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f010:	xor    r13d,r13d
  42f013:	cmp    rcx,r13
  42f016:	jne    0x42f01d
  42f018:	jmp    0x42f31c
  42f01d:	mov    QWORD PTR [rsp+0x150],r13
  42f025:	cmp    BYTE PTR [rbp+0x19],r13b
  42f029:	sete   dl
  42f02c:	mov    QWORD PTR [rsp+0x28],rbx
  42f031:	mov    rax,QWORD PTR [rbp+0x48]
  42f035:	mov    QWORD PTR [rsp+0x20],rax
  42f03a:	lea    r9,[rsp+0x150]
  42f042:	mov    r8,QWORD PTR [rbp+0x38]
  42f046:	call   0x429fb4
  42f04b:	mov    r13d,eax
  42f04e:	mov    ecx,0x1
  42f053:	cmp    eax,ecx
  42f055:	jne    0x42f080
  42f057:	mov    eax,DWORD PTR [r15+0xc0]
  42f05e:	mov    BYTE PTR [rax+rsi*1],cl
  42f061:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f069:	xor    r13d,r13d
  42f06c:	cmp    rcx,r13
  42f06f:	je     0x42f31c
  42f075:	mov    rax,QWORD PTR [rcx]
  42f078:	call   QWORD PTR [rax+0x10]
  42f07b:	jmp    0x42f31c
  42f080:	xor    eax,eax
  42f082:	cmp    r13d,eax
  42f085:	jne    0x42f47b
  42f08b:	xor    r9d,r9d
  42f08e:	xor    r8d,r8d
  42f091:	mov    rdx,QWORD PTR [rsp+0xf0]
  42f099:	mov    rcx,r15
  42f09c:	call   0x429b20
  42f0a1:	mov    r13d,eax
  42f0a4:	xor    eax,eax
  42f0a6:	cmp    r13d,eax
  42f0a9:	jne    0x42f4eb
  42f0af:	xor    r13d,r13d
  42f0b2:	cmp    QWORD PTR [r15+0xd8],r13
  42f0b9:	jle    0x42f0d7
  42f0bb:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f0c3:	cmp    rcx,r13
  42f0c6:	je     0x42f31c
  42f0cc:	mov    rax,QWORD PTR [rcx]
  42f0cf:	call   QWORD PTR [rax+0x10]
  42f0d2:	jmp    0x42f31c
  42f0d7:	lea    rcx,[rsp+0x240]
  42f0df:	call   0x429630
  42f0e4:	nop
  42f0e5:	mov    rdx,QWORD PTR [r15+0xd8]
  42f0ec:	mov    QWORD PTR [rsp+0x240],rdx
  42f0f4:	mov    rcx,QWORD PTR [r15+0xf8]
  42f0fb:	mov    QWORD PTR [rsp+0x248],rcx
  42f103:	movzx  eax,BYTE PTR [rsp+0x2bc]
  42f10b:	cmp    BYTE PTR [r15+0xe8],r13b
  42f112:	mov    r8d,0x1
  42f118:	cmove  eax,r8d
  42f11c:	mov    BYTE PTR [rsp+0x2bc],al
  42f123:	cmp    rdx,r13
  42f126:	jge    0x42f13b
  42f128:	add    rcx,rdx
  42f12b:	mov    QWORD PTR [rsp+0x248],rcx
  42f133:	mov    QWORD PTR [rsp+0x240],r13
  42f13b:	cmp    BYTE PTR [rbp+0x19],r13b
  42f13f:	je     0x42f210
  42f145:	mov    eax,DWORD PTR [r15+0xc0]
  42f14c:	mov    cl,BYTE PTR [rax+rdi*1]
  42f14f:	cmp    BYTE PTR [rsp+0x35],r13b
  42f154:	je     0x42f164
  42f156:	lea    rax,[rbp+0xc]
  42f15a:	mov    QWORD PTR [rsp+0xe0],rax
  42f162:	jmp    0x42f193
  42f164:	cmp    cl,r13b
  42f167:	je     0x42f177
  42f169:	lea    rax,[rbp+0xf]
  42f16d:	mov    QWORD PTR [rsp+0xe0],rax
  42f175:	jmp    0x42f193
  42f177:	lea    rax,[rbp+0x15]
  42f17b:	lea    rcx,[rbp+0x12]
  42f17f:	cmp    BYTE PTR [rsp+0x458],r13b
  42f187:	cmovne rcx,rax
  42f18b:	mov    QWORD PTR [rsp+0xe0],rcx
  42f193:	cmp    BYTE PTR [r15+0x20],r13b
  42f197:	je     0x42f603
  42f19d:	cmp    BYTE PTR [rbp+0x1c],r13b
  42f1a1:	je     0x42f1d4
  42f1a3:	mov    rax,QWORD PTR [r15+0xe0]
  42f1aa:	lea    r8,[rdx+rax*1]
  42f1ae:	mov    rdx,rbp
  42f1b1:	mov    rcx,r15
  42f1b4:	call   0x429f18
  42f1b9:	mov    r13d,eax
  42f1bc:	xor    eax,eax
  42f1be:	cmp    r13d,eax
  42f1c1:	jne    0x42f55b
  42f1c7:	xor    r13d,r13d
  42f1ca:	cmp    BYTE PTR [r15+0x22],r13b
  42f1ce:	jne    0x42f603
  42f1d4:	mov    rax,QWORD PTR [rsp+0xe0]
  42f1dc:	mov    r13b,BYTE PTR [rax]
  42f1df:	xor    ecx,ecx
  42f1e1:	cmp    QWORD PTR [rsp+0x148],rcx
  42f1e9:	jge    0x42f204
  42f1eb:	mov    rcx,QWORD PTR [rsp+0xd8]
  42f1f3:	call   0x429a84
  42f1f8:	movzx  r13d,r13b
  42f1fc:	xor    ecx,ecx
  42f1fe:	cmp    al,cl
  42f200:	cmovne r13d,ecx
  42f204:	cmp    r13b,cl
  42f207:	jne    0x42f600
  42f20d:	xor    r13d,r13d
  42f210:	mov    eax,DWORD PTR [r15+0xc0]
  42f217:	mov    ecx,0x1
  42f21c:	mov    BYTE PTR [rax+rsi*1],cl
  42f21f:	cmp    QWORD PTR [rsp+0x240],r13
  42f227:	jne    0x42f295
  42f229:	cmp    BYTE PTR [rsp+0x2bc],r13b
  42f231:	jne    0x42f295
  42f233:	mov    rax,QWORD PTR [r15+0xf0]
  42f23a:	cmp    QWORD PTR [rsp+0x248],rax
  42f242:	jb     0x42f295
  42f244:	mov    rcx,QWORD PTR [rsp+0x288]
  42f24c:	call   0x40215c
  42f251:	mov    rcx,QWORD PTR [rsp+0x278]
  42f259:	call   0x40215c
  42f25e:	mov    rcx,QWORD PTR [rsp+0x260]
  42f266:	call   0x40215c
  42f26b:	mov    rcx,QWORD PTR [rsp+0x250]
  42f273:	call   0x40215c
  42f278:	nop
  42f279:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f281:	cmp    rcx,r13
  42f284:	je     0x42f31c
  42f28a:	mov    rax,QWORD PTR [rcx]
  42f28d:	call   QWORD PTR [rax+0x10]
  42f290:	jmp    0x42f31c
  42f295:	lea    r8,[rsp+0x240]
  42f29d:	mov    rdx,QWORD PTR [rsp+0xd8]
  42f2a5:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f2ad:	call   0x42c720
  42f2b2:	mov    r13d,eax
  42f2b5:	xor    eax,eax
  42f2b7:	cmp    r13d,eax
  42f2ba:	jne    0x42f6f4
  42f2c0:	lea    rdx,[rsp+0x240]
  42f2c8:	mov    rcx,r14
  42f2cb:	call   0x42cd64
  42f2d0:	nop
  42f2d1:	mov    rcx,QWORD PTR [rsp+0x288]
  42f2d9:	call   0x40215c
  42f2de:	mov    rcx,QWORD PTR [rsp+0x278]
  42f2e6:	call   0x40215c
  42f2eb:	mov    rcx,QWORD PTR [rsp+0x260]
  42f2f3:	call   0x40215c
  42f2f8:	mov    rcx,QWORD PTR [rsp+0x250]
  42f300:	call   0x40215c
  42f305:	nop
  42f306:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f30e:	xor    r13d,r13d
  42f311:	cmp    rcx,r13
  42f314:	je     0x42f31c
  42f316:	mov    rax,QWORD PTR [rcx]
  42f319:	call   QWORD PTR [rax+0x10]
  42f31c:	mov    r8d,DWORD PTR [rsp+0x450]
  42f324:	inc    r8d
  42f327:	mov    DWORD PTR [rsp+0x450],r8d
  42f32f:	mov    rax,QWORD PTR [rsp+0x100]
  42f337:	add    rax,0x4
  42f33b:	mov    QWORD PTR [rsp+0x100],rax
  42f343:	cmp    r8d,DWORD PTR [rsp+0x50]
  42f348:	jae    0x42f799
  42f34e:	jmp    0x42ef70
  42f353:	mov    rcx,QWORD PTR [rsp+0x48]
  42f358:	call   0x40215c
  42f35d:	nop
  42f35e:	mov    rcx,QWORD PTR [rsp+0x70]
  42f363:	call   0x40215c
  42f368:	nop
  42f369:	mov    rax,QWORD PTR [rbx]
  42f36c:	mov    rcx,rbx
  42f36f:	call   QWORD PTR [rax+0x10]
  42f372:	nop
  42f373:	xor    eax,eax
  42f375:	cmp    r14,rax
  42f378:	je     0x42f384
  42f37a:	mov    rax,QWORD PTR [r14]
  42f37d:	mov    rcx,r14
  42f380:	call   QWORD PTR [rax+0x10]
  42f383:	nop
  42f384:	mov    rcx,rsi
  42f387:	call   0x40215c
  42f38c:	nop
  42f38d:	mov    rcx,rdi
  42f390:	call   0x40215c
  42f395:	nop
  42f396:	mov    rcx,r12
  42f399:	call   0x40215c
  42f39e:	nop
  42f39f:	mov    rcx,QWORD PTR [rsp+0x60]
  42f3a4:	call   0x40215c
  42f3a9:	nop
  42f3aa:	jmp    0x4312f4
  42f3af:	mov    rcx,QWORD PTR [rsp+0x48]
  42f3b4:	call   0x40215c
  42f3b9:	nop
  42f3ba:	mov    rcx,QWORD PTR [rsp+0x70]
  42f3bf:	call   0x40215c
  42f3c4:	nop
  42f3c5:	mov    rax,QWORD PTR [rbx]
  42f3c8:	mov    rcx,rbx
  42f3cb:	call   QWORD PTR [rax+0x10]
  42f3ce:	nop
  42f3cf:	xor    eax,eax
  42f3d1:	cmp    r14,rax
  42f3d4:	je     0x42f3e0
  42f3d6:	mov    rax,QWORD PTR [r14]
  42f3d9:	mov    rcx,r14
  42f3dc:	call   QWORD PTR [rax+0x10]
  42f3df:	nop
  42f3e0:	mov    rcx,rsi
  42f3e3:	call   0x40215c
  42f3e8:	nop
  42f3e9:	mov    rcx,rdi
  42f3ec:	call   0x40215c
  42f3f1:	nop
  42f3f2:	mov    rcx,r12
  42f3f5:	call   0x40215c
  42f3fa:	nop
  42f3fb:	mov    rcx,QWORD PTR [rsp+0x60]
  42f400:	call   0x40215c
  42f405:	nop
  42f406:	jmp    0x4312f4
  42f40b:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f413:	cmp    rcx,rax
  42f416:	je     0x42f41f
  42f418:	mov    rax,QWORD PTR [rcx]
  42f41b:	call   QWORD PTR [rax+0x10]
  42f41e:	nop
  42f41f:	mov    rcx,QWORD PTR [rsp+0x48]
  42f424:	call   0x40215c
  42f429:	nop
  42f42a:	mov    rcx,QWORD PTR [rsp+0x70]
  42f42f:	call   0x40215c
  42f434:	nop
  42f435:	mov    rax,QWORD PTR [rbx]
  42f438:	mov    rcx,rbx
  42f43b:	call   QWORD PTR [rax+0x10]
  42f43e:	nop
  42f43f:	xor    eax,eax
  42f441:	cmp    r14,rax
  42f444:	je     0x42f450
  42f446:	mov    rax,QWORD PTR [r14]
  42f449:	mov    rcx,r14
  42f44c:	call   QWORD PTR [rax+0x10]
  42f44f:	nop
  42f450:	mov    rcx,rsi
  42f453:	call   0x40215c
  42f458:	nop
  42f459:	mov    rcx,rdi
  42f45c:	call   0x40215c
  42f461:	nop
  42f462:	mov    rcx,r12
  42f465:	call   0x40215c
  42f46a:	nop
  42f46b:	mov    rcx,QWORD PTR [rsp+0x60]
  42f470:	call   0x40215c
  42f475:	nop
  42f476:	jmp    0x4312f4
  42f47b:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f483:	cmp    rcx,rax
  42f486:	je     0x42f48f
  42f488:	mov    rax,QWORD PTR [rcx]
  42f48b:	call   QWORD PTR [rax+0x10]
  42f48e:	nop
  42f48f:	mov    rcx,QWORD PTR [rsp+0x48]
  42f494:	call   0x40215c
  42f499:	nop
  42f49a:	mov    rcx,QWORD PTR [rsp+0x70]
  42f49f:	call   0x40215c
  42f4a4:	nop
  42f4a5:	mov    rax,QWORD PTR [rbx]
  42f4a8:	mov    rcx,rbx
  42f4ab:	call   QWORD PTR [rax+0x10]
  42f4ae:	nop
  42f4af:	xor    eax,eax
  42f4b1:	cmp    r14,rax
  42f4b4:	je     0x42f4c0
  42f4b6:	mov    rax,QWORD PTR [r14]
  42f4b9:	mov    rcx,r14
  42f4bc:	call   QWORD PTR [rax+0x10]
  42f4bf:	nop
  42f4c0:	mov    rcx,rsi
  42f4c3:	call   0x40215c
  42f4c8:	nop
  42f4c9:	mov    rcx,rdi
  42f4cc:	call   0x40215c
  42f4d1:	nop
  42f4d2:	mov    rcx,r12
  42f4d5:	call   0x40215c
  42f4da:	nop
  42f4db:	mov    rcx,QWORD PTR [rsp+0x60]
  42f4e0:	call   0x40215c
  42f4e5:	nop
  42f4e6:	jmp    0x4312f4
  42f4eb:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f4f3:	cmp    rcx,rax
  42f4f6:	je     0x42f4ff
  42f4f8:	mov    rax,QWORD PTR [rcx]
  42f4fb:	call   QWORD PTR [rax+0x10]
  42f4fe:	nop
  42f4ff:	mov    rcx,QWORD PTR [rsp+0x48]
  42f504:	call   0x40215c
  42f509:	nop
  42f50a:	mov    rcx,QWORD PTR [rsp+0x70]
  42f50f:	call   0x40215c
  42f514:	nop
  42f515:	mov    rax,QWORD PTR [rbx]
  42f518:	mov    rcx,rbx
  42f51b:	call   QWORD PTR [rax+0x10]
  42f51e:	nop
  42f51f:	xor    eax,eax
  42f521:	cmp    r14,rax
  42f524:	je     0x42f530
  42f526:	mov    rax,QWORD PTR [r14]
  42f529:	mov    rcx,r14
  42f52c:	call   QWORD PTR [rax+0x10]
  42f52f:	nop
  42f530:	mov    rcx,rsi
  42f533:	call   0x40215c
  42f538:	nop
  42f539:	mov    rcx,rdi
  42f53c:	call   0x40215c
  42f541:	nop
  42f542:	mov    rcx,r12
  42f545:	call   0x40215c
  42f54a:	nop
  42f54b:	mov    rcx,QWORD PTR [rsp+0x60]
  42f550:	call   0x40215c
  42f555:	nop
  42f556:	jmp    0x4312f4
  42f55b:	mov    rcx,QWORD PTR [rsp+0x288]
  42f563:	call   0x40215c
  42f568:	mov    rcx,QWORD PTR [rsp+0x278]
  42f570:	call   0x40215c
  42f575:	mov    rcx,QWORD PTR [rsp+0x260]
  42f57d:	call   0x40215c
  42f582:	mov    rcx,QWORD PTR [rsp+0x250]
  42f58a:	call   0x40215c
  42f58f:	nop
  42f590:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f598:	xor    ebp,ebp
  42f59a:	cmp    rcx,rbp
  42f59d:	je     0x42f5a6
  42f59f:	mov    rax,QWORD PTR [rcx]
  42f5a2:	call   QWORD PTR [rax+0x10]
  42f5a5:	nop
  42f5a6:	mov    rcx,QWORD PTR [rsp+0x48]
  42f5ab:	call   0x40215c
  42f5b0:	nop
  42f5b1:	mov    rcx,QWORD PTR [rsp+0x70]
  42f5b6:	call   0x40215c
  42f5bb:	nop
  42f5bc:	mov    rax,QWORD PTR [rbx]
  42f5bf:	mov    rcx,rbx
  42f5c2:	call   QWORD PTR [rax+0x10]
  42f5c5:	nop
  42f5c6:	cmp    r14,rbp
  42f5c9:	je     0x42f5d5
  42f5cb:	mov    rax,QWORD PTR [r14]
  42f5ce:	mov    rcx,r14
  42f5d1:	call   QWORD PTR [rax+0x10]
  42f5d4:	nop
  42f5d5:	mov    rcx,rsi
  42f5d8:	call   0x40215c
  42f5dd:	nop
  42f5de:	mov    rcx,rdi
  42f5e1:	call   0x40215c
  42f5e6:	nop
  42f5e7:	mov    rcx,r12
  42f5ea:	call   0x40215c
  42f5ef:	nop
  42f5f0:	mov    rcx,QWORD PTR [rsp+0x60]
  42f5f5:	call   0x40215c
  42f5fa:	nop
  42f5fb:	jmp    0x4312f4
  42f600:	xor    r13d,r13d
  42f603:	mov    rbp,QWORD PTR [rbp+0x38]
  42f607:	cmp    rbp,r13
  42f60a:	je     0x42f616
  42f60c:	mov    rax,QWORD PTR [rbp+0x0]
  42f610:	mov    rcx,rbp
  42f613:	call   QWORD PTR [rax+0x8]
  42f616:	mov    rcx,QWORD PTR [r15+0x8]
  42f61a:	cmp    rcx,r13
  42f61d:	je     0x42f625
  42f61f:	mov    rax,QWORD PTR [rcx]
  42f622:	call   QWORD PTR [rax+0x10]
  42f625:	mov    QWORD PTR [r15+0x8],rbp
  42f629:	mov    rbp,QWORD PTR [rsp+0xf0]
  42f631:	cmp    rbp,r13
  42f634:	je     0x42f640
  42f636:	mov    rax,QWORD PTR [rbp+0x0]
  42f63a:	mov    rcx,rbp
  42f63d:	call   QWORD PTR [rax+0x8]
  42f640:	mov    rcx,QWORD PTR [r15]
  42f643:	cmp    rcx,r13
  42f646:	je     0x42f64e
  42f648:	mov    rax,QWORD PTR [rcx]
  42f64b:	call   QWORD PTR [rax+0x10]
  42f64e:	mov    QWORD PTR [r15],rbp
  42f651:	mov    rcx,QWORD PTR [rsp+0x288]
  42f659:	call   0x40215c
  42f65e:	mov    rcx,QWORD PTR [rsp+0x278]
  42f666:	call   0x40215c
  42f66b:	mov    rcx,QWORD PTR [rsp+0x260]
  42f673:	call   0x40215c
  42f678:	mov    rcx,QWORD PTR [rsp+0x250]
  42f680:	call   0x40215c
  42f685:	nop
  42f686:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f68e:	cmp    rcx,r13
  42f691:	je     0x42f69a
  42f693:	mov    rax,QWORD PTR [rcx]
  42f696:	call   QWORD PTR [rax+0x10]
  42f699:	nop
  42f69a:	mov    rcx,QWORD PTR [rsp+0x48]
  42f69f:	call   0x40215c
  42f6a4:	nop
  42f6a5:	mov    rcx,QWORD PTR [rsp+0x70]
  42f6aa:	call   0x40215c
  42f6af:	nop
  42f6b0:	mov    rax,QWORD PTR [rbx]
  42f6b3:	mov    rcx,rbx
  42f6b6:	call   QWORD PTR [rax+0x10]
  42f6b9:	nop
  42f6ba:	cmp    r14,r13
  42f6bd:	je     0x42f6c9
  42f6bf:	mov    rax,QWORD PTR [r14]
  42f6c2:	mov    rcx,r14
  42f6c5:	call   QWORD PTR [rax+0x10]
  42f6c8:	nop
  42f6c9:	mov    rcx,rsi
  42f6cc:	call   0x40215c
  42f6d1:	nop
  42f6d2:	mov    rcx,rdi
  42f6d5:	call   0x40215c
  42f6da:	nop
  42f6db:	mov    rcx,r12
  42f6de:	call   0x40215c
  42f6e3:	nop
  42f6e4:	mov    rcx,QWORD PTR [rsp+0x60]
  42f6e9:	call   0x40215c
  42f6ee:	nop
  42f6ef:	jmp    0x4312f4
  42f6f4:	mov    rcx,QWORD PTR [rsp+0x288]
  42f6fc:	call   0x40215c
  42f701:	mov    rcx,QWORD PTR [rsp+0x278]
  42f709:	call   0x40215c
  42f70e:	mov    rcx,QWORD PTR [rsp+0x260]
  42f716:	call   0x40215c
  42f71b:	mov    rcx,QWORD PTR [rsp+0x250]
  42f723:	call   0x40215c
  42f728:	nop
  42f729:	mov    rcx,QWORD PTR [rsp+0xf0]
  42f731:	xor    ebp,ebp
  42f733:	cmp    rcx,rbp
  42f736:	je     0x42f73f
  42f738:	mov    rax,QWORD PTR [rcx]
  42f73b:	call   QWORD PTR [rax+0x10]
  42f73e:	nop
  42f73f:	mov    rcx,QWORD PTR [rsp+0x48]
  42f744:	call   0x40215c
  42f749:	nop
  42f74a:	mov    rcx,QWORD PTR [rsp+0x70]
  42f74f:	call   0x40215c
  42f754:	nop
  42f755:	mov    rax,QWORD PTR [rbx]
  42f758:	mov    rcx,rbx
  42f75b:	call   QWORD PTR [rax+0x10]
  42f75e:	nop
  42f75f:	cmp    r14,rbp
  42f762:	je     0x42f76e
  42f764:	mov    rax,QWORD PTR [r14]
  42f767:	mov    rcx,r14
  42f76a:	call   QWORD PTR [rax+0x10]
  42f76d:	nop
  42f76e:	mov    rcx,rsi
  42f771:	call   0x40215c
  42f776:	nop
  42f777:	mov    rcx,rdi
  42f77a:	call   0x40215c
  42f77f:	nop
  42f780:	mov    rcx,r12
  42f783:	call   0x40215c
  42f788:	nop
  42f789:	mov    rcx,QWORD PTR [rsp+0x60]
  42f78e:	call   0x40215c
  42f793:	nop
  42f794:	jmp    0x4312f4
  42f799:	mov    rcx,QWORD PTR [rsp+0x48]
  42f79e:	call   0x40215c
  42f7a3:	nop
  42f7a4:	mov    rcx,QWORD PTR [rsp+0x70]
  42f7a9:	call   0x40215c
  42f7ae:	mov    QWORD PTR [rsp+0xa0],r13
  42f7b6:	mov    DWORD PTR [rsp+0xa8],r13d
  42f7be:	mov    DWORD PTR [rsp+0xac],r13d
  42f7c6:	mov    QWORD PTR [rsp+0x70],r13
  42f7cb:	mov    DWORD PTR [rsp+0x78],r13d
  42f7d0:	mov    DWORD PTR [rsp+0x7c],r13d
  42f7d5:	mov    DWORD PTR [rsp+0x450],r13d
  42f7dd:	mov    rax,QWORD PTR [rbp+0x0]
  42f7e1:	xor    ecx,ecx
  42f7e3:	cmp    DWORD PTR [rax+0x48],ecx
  42f7e6:	jbe    0x42f883
  42f7ec:	xor    edi,edi
  42f7ee:	mov    rbx,rdi
  42f7f1:	mov    r15d,r13d
  42f7f4:	lea    esi,[rcx+0x1]
  42f7f7:	mov    edx,r15d
  42f7fa:	lea    rcx,[rsp+0xa0]
  42f802:	call   0x4131dc
  42f807:	mov    r11,QWORD PTR [rbp+0x0]
  42f80b:	mov    rax,QWORD PTR [r11+0x40]
  42f80f:	mov    rax,QWORD PTR [rbx+rax*1]
  42f813:	add    r15d,DWORD PTR [rax+0x50]
  42f817:	mov    r12d,edi
  42f81a:	cmp    DWORD PTR [rax+0x50],edi
  42f81d:	jbe    0x42f84a
  42f81f:	mov    rbp,rax
  42f822:	mov    edi,0x1
  42f827:	mov    edx,r13d
  42f82a:	lea    rcx,[rsp+0x70]
  42f82f:	call   0x4131dc
  42f834:	add    r12d,edi
  42f837:	cmp    r12d,DWORD PTR [rbp+0x50]
  42f83b:	jb     0x42f827
  42f83d:	mov    rbp,QWORD PTR [rsp+0x448]
  42f845:	xor    edi,edi
  42f847:	lea    esi,[rdi+0x1]
  42f84a:	add    r13d,esi
  42f84d:	add    rbx,0x8
  42f851:	mov    rax,QWORD PTR [rbp+0x0]
  42f855:	cmp    r13d,DWORD PTR [rax+0x48]
  42f859:	jb     0x42f7f7
  42f85b:	mov    rdi,QWORD PTR [rsp+0x158]
  42f863:	mov    rsi,QWORD PTR [rsp+0x160]
  42f86b:	mov    r15,QWORD PTR [rsp+0x440]
  42f873:	mov    rbx,QWORD PTR [rsp+0x80]
  42f87b:	mov    r12,QWORD PTR [rsp+0xb8]
  42f883:	mov    r13d,0x10000
  42f889:	mov    rcx,r13
  42f88c:	call   0x402130
  42f891:	mov    rbp,rax
  42f894:	mov    QWORD PTR [rsp+0x2c0],rax
  42f89c:	mov    r8,r13
  42f89f:	mov    r13d,0xff
  42f8a5:	mov    edx,r13d
  42f8a8:	mov    rcx,rax
  42f8ab:	call   0x44b780
  42f8b0:	lea    r8d,[r13+0x1]
  42f8b4:	mov    edx,r13d
  42f8b7:	lea    rcx,[rsp+0x2f0]
  42f8bf:	call   0x44b780
  42f8c4:	cmp    DWORD PTR [rsp+0x78],r13d
  42f8c9:	jb     0x42f939
  42f8cb:	mov    rcx,rbp
  42f8ce:	call   0x40215c
  42f8d3:	nop
  42f8d4:	mov    rcx,QWORD PTR [rsp+0x70]
  42f8d9:	call   0x40215c
  42f8de:	nop
  42f8df:	mov    rcx,QWORD PTR [rsp+0xa0]
  42f8e7:	call   0x40215c
  42f8ec:	nop
  42f8ed:	mov    rax,QWORD PTR [rbx]
  42f8f0:	mov    rcx,rbx
  42f8f3:	call   QWORD PTR [rax+0x10]
  42f8f6:	nop
  42f8f7:	xor    eax,eax
  42f8f9:	cmp    r14,rax
  42f8fc:	je     0x42f908
  42f8fe:	mov    rax,QWORD PTR [r14]
  42f901:	mov    rcx,r14
  42f904:	call   QWORD PTR [rax+0x10]
  42f907:	nop
  42f908:	mov    rcx,rsi
  42f90b:	call   0x40215c
  42f910:	nop
  42f911:	mov    rcx,rdi
  42f914:	call   0x40215c
  42f919:	nop
  42f91a:	mov    rcx,r12
  42f91d:	call   0x40215c
  42f922:	nop
  42f923:	mov    rcx,QWORD PTR [rsp+0x60]
  42f928:	call   0x40215c
  42f92d:	nop
  42f92e:	mov    r13d,0x1
  42f934:	jmp    0x4312f4
  42f939:	xor    r13d,r13d
  42f93c:	mov    QWORD PTR [rsp+0x48],r13
  42f941:	mov    DWORD PTR [rsp+0x50],r13d
  42f946:	mov    DWORD PTR [rsp+0x54],r13d
  42f94b:	mov    ecx,0x100
  42f950:	call   0x402130
  42f955:	mov    r12,rax
  42f958:	mov    QWORD PTR [rsp+0x2e8],rax
  42f960:	xor    edx,edx
  42f962:	mov    r8d,0x100
  42f968:	mov    rcx,rax
  42f96b:	call   0x44b780
  42f970:	mov    eax,DWORD PTR [rsp+0xc0]
  42f977:	cmp    eax,r13d
  42f97a:	jbe    0x42facd
  42f980:	mov    r8,QWORD PTR [rsp+0xb8]
  42f988:	mov    QWORD PTR [rsp+0x450],r8
  42f990:	mov    QWORD PTR [rsp+0xe0],rax
  42f998:	mov    rbx,QWORD PTR [rsp+0x448]
  42f9a0:	mov    rdi,QWORD PTR [rsp+0xa0]
  42f9a8:	xor    r14d,r14d
  42f9ab:	lea    esi,[r13+0x1]
  42f9af:	movsxd r13,DWORD PTR [r8]
  42f9b2:	cmp    r13d,r14d
  42f9b5:	jl     0x42fa88
  42f9bb:	mov    edx,r13d
  42f9be:	mov    rax,QWORD PTR [rbx]
  42f9c1:	mov    rcx,QWORD PTR [rax+0x40]
  42f9c5:	mov    r9,QWORD PTR [rcx+rdx*8]
  42f9c9:	cmp    BYTE PTR [r9+0x41],r14b
  42f9cd:	je     0x42fa5c
  42f9d3:	mov    eax,DWORD PTR [r9]
  42f9d6:	shr    eax,0x6
  42f9d9:	test   sil,al
  42f9dc:	movzx  r11d,r14b
  42f9e0:	cmovne r11d,esi
  42f9e4:	mov    r10d,r14d
  42f9e7:	cmp    DWORD PTR [r9+0x50],r14d
  42f9eb:	jbe    0x42fa57
  42f9ed:	mov    rcx,r14
  42f9f0:	mov    QWORD PTR [rsp+0xd8],r14
  42f9f8:	mov    rax,QWORD PTR [r9+0x48]
  42f9fc:	mov    rax,QWORD PTR [rcx+rax*1]
  42fa00:	cmp    QWORD PTR [rax+0x8],0x2
  42fa05:	jae    0x42fa0c
  42fa07:	mov    r11b,sil
  42fa0a:	jmp    0x42fa3a
  42fa0c:	mov    rax,QWORD PTR [rax]
  42fa0f:	movzx  ecx,BYTE PTR [rax+0x1]
  42fa13:	shl    ecx,0x8
  42fa16:	movzx  eax,BYTE PTR [rax]
  42fa19:	or     ecx,eax
  42fa1b:	mov    eax,DWORD PTR [rdi+r13*4]
  42fa1f:	lea    r8d,[r10+rax*1]
  42fa23:	mov    al,BYTE PTR [rcx+rbp*1]
  42fa26:	mov    BYTE PTR [rsp+r8*1+0x2f0],al
  42fa2e:	mov    BYTE PTR [rcx+rbp*1],r8b
  42fa32:	mov    rcx,QWORD PTR [rsp+0xd8]
  42fa3a:	add    r10d,esi
  42fa3d:	add    rcx,0x8
  42fa41:	mov    QWORD PTR [rsp+0xd8],rcx
  42fa49:	cmp    r10d,DWORD PTR [r9+0x50]
  42fa4d:	jb     0x42f9f8
  42fa4f:	mov    r8,QWORD PTR [rsp+0x450]
  42fa57:	cmp    r11b,r14b
  42fa5a:	je     0x42fa80
  42fa5c:	mov    edx,r13d
  42fa5f:	lea    rcx,[rsp+0x48]
  42fa64:	call   0x4131dc
  42fa69:	mov    BYTE PTR [r13+r12*1+0x0],sil
  42fa6e:	mov    r8,QWORD PTR [rsp+0x450]
  42fa76:	mov    rax,QWORD PTR [rsp+0xe0]
  42fa7e:	jmp    0x42fa88
  42fa80:	mov    rax,QWORD PTR [rsp+0xe0]
  42fa88:	add    r8,0x4
  42fa8c:	mov    QWORD PTR [rsp+0x450],r8
  42fa94:	sub    rax,rsi
  42fa97:	mov    QWORD PTR [rsp+0xe0],rax
  42fa9f:	jne    0x42f9af
  42faa5:	mov    rdi,QWORD PTR [rsp+0x158]
  42faad:	mov    rsi,QWORD PTR [rsp+0x160]
  42fab5:	mov    r14,QWORD PTR [rsp+0x118]
  42fabd:	mov    r15,QWORD PTR [rsp+0x440]
  42fac5:	mov    rbx,QWORD PTR [rsp+0x80]
  42facd:	mov    rax,QWORD PTR [rsp+0x448]
  42fad5:	mov    rcx,QWORD PTR [rax+0x38]
  42fad9:	mov    rax,QWORD PTR [rcx]
  42fadc:	xor    r9d,r9d
  42fadf:	xor    r8d,r8d
  42fae2:	xor    edx,edx
  42fae4:	call   QWORD PTR [rax+0x20]
  42fae7:	mov    r13d,eax
  42faea:	xor    eax,eax
  42faec:	cmp    r13d,eax
  42faef:	je     0x42fb76
  42faf5:	mov    rcx,r12
  42faf8:	call   0x40215c
  42fafd:	nop
  42fafe:	mov    rcx,QWORD PTR [rsp+0x48]
  42fb03:	call   0x40215c
  42fb08:	nop
  42fb09:	mov    rcx,rbp
  42fb0c:	call   0x40215c
  42fb11:	nop
  42fb12:	mov    rcx,QWORD PTR [rsp+0x70]
  42fb17:	call   0x40215c
  42fb1c:	nop
  42fb1d:	mov    rcx,QWORD PTR [rsp+0xa0]
  42fb25:	call   0x40215c
  42fb2a:	nop
  42fb2b:	mov    rax,QWORD PTR [rbx]
  42fb2e:	mov    rcx,rbx
  42fb31:	call   QWORD PTR [rax+0x10]
  42fb34:	nop
  42fb35:	xor    eax,eax
  42fb37:	cmp    r14,rax
  42fb3a:	je     0x42fb46
  42fb3c:	mov    rax,QWORD PTR [r14]
  42fb3f:	mov    rcx,r14
  42fb42:	call   QWORD PTR [rax+0x10]
  42fb45:	nop
  42fb46:	mov    rcx,rsi
  42fb49:	call   0x40215c
  42fb4e:	nop
  42fb4f:	mov    rcx,rdi
  42fb52:	call   0x40215c
  42fb57:	nop
  42fb58:	mov    rcx,QWORD PTR [rsp+0xb8]
  42fb60:	call   0x40215c
  42fb65:	nop
  42fb66:	mov    rcx,QWORD PTR [rsp+0x60]
  42fb6b:	call   0x40215c
  42fb70:	nop
  42fb71:	jmp    0x4312f4
  42fb76:	mov    ecx,0x60
  42fb7b:	call   0x402130
  42fb80:	mov    r13,rax
  42fb83:	mov    QWORD PTR [rsp+0x40],rax
  42fb88:	xor    edx,edx
  42fb8a:	cmp    rax,rdx
  42fb8d:	je     0x42fbab
  42fb8f:	mov    DWORD PTR [rax+0x8],edx
  42fb92:	lea    rax,[rip+0x20af7]        # 0x450690
  42fb99:	mov    QWORD PTR [r13+0x0],rax
  42fb9d:	mov    QWORD PTR [r13+0x10],rdx
  42fba1:	mov    QWORD PTR [r13+0x50],rdx
  42fba5:	mov    QWORD PTR [r13+0x58],rdx
  42fba9:	jmp    0x42fbb3
  42fbab:	mov    r13,rdx
  42fbae:	mov    QWORD PTR [rsp+0x40],rdx
  42fbb3:	mov    QWORD PTR [rsp+0x2d8],r13
  42fbbb:	cmp    r13,rdx
  42fbbe:	je     0x42fbcc
  42fbc0:	mov    rax,QWORD PTR [r13+0x0]
  42fbc4:	mov    rcx,r13
  42fbc7:	call   QWORD PTR [rax+0x8]
  42fbca:	xor    edx,edx
  42fbcc:	mov    rax,QWORD PTR [rsp+0x448]
  42fbd4:	mov    rbx,QWORD PTR [rax+0x38]
  42fbd8:	cmp    rbx,rdx
  42fbdb:	je     0x42fbe8
  42fbdd:	mov    rax,QWORD PTR [rbx]
  42fbe0:	mov    rcx,rbx
  42fbe3:	call   QWORD PTR [rax+0x8]
  42fbe6:	xor    edx,edx
  42fbe8:	mov    rcx,QWORD PTR [r13+0x10]
  42fbec:	cmp    rcx,rdx
  42fbef:	je     0x42fbf9
  42fbf1:	mov    rax,QWORD PTR [rcx]
  42fbf4:	call   QWORD PTR [rax+0x10]
  42fbf7:	xor    edx,edx
  42fbf9:	mov    QWORD PTR [r13+0x10],rbx
  42fbfd:	mov    QWORD PTR [rsp+0x130],rdx
  42fc05:	mov    rbx,rdx
  42fc08:	mov    QWORD PTR [rsp+0x238],rdx
  42fc10:	mov    rax,QWORD PTR [rsp+0x448]
  42fc18:	cmp    QWORD PTR [rax+0x48],rdx
  42fc1c:	je     0x42fd22
  42fc22:	mov    ecx,0x48
  42fc27:	call   0x402130
  42fc2c:	mov    rdx,rax
  42fc2f:	mov    QWORD PTR [rsp+0x130],rax
  42fc37:	xor    ecx,ecx
  42fc39:	cmp    rax,rcx
  42fc3c:	je     0x42fc6f
  42fc3e:	mov    DWORD PTR [rax+0x18],ecx
  42fc41:	lea    rax,[rip+0x20ab8]        # 0x450700
  42fc48:	mov    QWORD PTR [rdx],rax
  42fc4b:	lea    rax,[rip+0x20a86]        # 0x4506d8
  42fc52:	mov    QWORD PTR [rdx+0x8],rax
  42fc56:	lea    rax,[rip+0x20a5b]        # 0x4506b8
  42fc5d:	mov    QWORD PTR [rdx+0x10],rax
  42fc61:	mov    QWORD PTR [rdx+0x20],rcx
  42fc65:	mov    QWORD PTR [rdx+0x28],rcx
  42fc69:	mov    QWORD PTR [rdx+0x40],rcx
  42fc6d:	jmp    0x42fc7a
  42fc6f:	mov    rdx,rcx
  42fc72:	mov    QWORD PTR [rsp+0x130],rcx
  42fc7a:	cmp    rdx,rcx
  42fc7d:	je     0x42fc90
  42fc7f:	mov    rax,QWORD PTR [rdx]
  42fc82:	mov    rcx,rdx
  42fc85:	call   QWORD PTR [rax+0x8]
  42fc88:	mov    rdx,QWORD PTR [rsp+0x130]
  42fc90:	mov    rbx,rdx
  42fc93:	mov    QWORD PTR [rsp+0x238],rdx
  42fc9b:	mov    rax,QWORD PTR [rsp+0x448]
  42fca3:	mov    rcx,QWORD PTR [rax+0x48]
  42fca7:	mov    QWORD PTR [rsp+0x440],rcx
  42fcaf:	xor    eax,eax
  42fcb1:	cmp    rcx,rax
  42fcb4:	je     0x42fcc6
  42fcb6:	mov    rax,QWORD PTR [rcx]
  42fcb9:	call   QWORD PTR [rax+0x8]
  42fcbc:	mov    rdx,QWORD PTR [rsp+0x130]
  42fcc4:	xor    eax,eax
  42fcc6:	mov    rcx,QWORD PTR [rdx+0x20]
  42fcca:	cmp    rcx,rax
  42fccd:	je     0x42fcdd
  42fccf:	mov    rax,QWORD PTR [rcx]
  42fcd2:	call   QWORD PTR [rax+0x10]
  42fcd5:	mov    rdx,QWORD PTR [rsp+0x130]
  42fcdd:	mov    rax,QWORD PTR [rsp+0x440]
  42fce5:	mov    QWORD PTR [rdx+0x20],rax
  42fce9:	mov    rcx,rax
  42fcec:	mov    rax,QWORD PTR [rax]
  42fcef:	lea    r8,[rdx+0x28]
  42fcf3:	lea    rdx,[rip+0x2418e]        # 0x453e88
  42fcfa:	call   QWORD PTR [rax]
  42fcfc:	mov    r8,QWORD PTR [rsp+0x130]
  42fd04:	mov    rcx,QWORD PTR [r8+0x20]
  42fd08:	mov    rax,QWORD PTR [rcx]
  42fd0b:	add    r8,0x40
  42fd0f:	lea    rdx,[rip+0x240b2]        # 0x453dc8
  42fd16:	call   QWORD PTR [rax]
  42fd18:	mov    rax,QWORD PTR [rsp+0x448]
  42fd20:	xor    edx,edx
  42fd22:	cmp    QWORD PTR [rax+0x48],rdx
  42fd26:	je     0x42fdf9
  42fd2c:	mov    rcx,QWORD PTR [rax+0x48]
  42fd30:	mov    rax,QWORD PTR [rcx]
  42fd33:	lea    r8,[rsp+0x120]
  42fd3b:	xor    edx,edx
  42fd3d:	call   QWORD PTR [rax+0x18]
  42fd40:	mov    r13d,eax
  42fd43:	xor    edx,edx
  42fd45:	cmp    eax,edx
  42fd47:	je     0x42fdf4
  42fd4d:	cmp    rbx,rdx
  42fd50:	je     0x42fd5d
  42fd52:	mov    rax,QWORD PTR [rbx]
  42fd55:	mov    rcx,rbx
  42fd58:	call   QWORD PTR [rax+0x10]
  42fd5b:	xor    edx,edx
  42fd5d:	mov    rcx,QWORD PTR [rsp+0x40]
  42fd62:	cmp    rcx,rdx
  42fd65:	je     0x42fd6e
  42fd67:	mov    rax,QWORD PTR [rcx]
  42fd6a:	call   QWORD PTR [rax+0x10]
  42fd6d:	nop
  42fd6e:	mov    rcx,r12
  42fd71:	call   0x40215c
  42fd76:	nop
  42fd77:	mov    rcx,QWORD PTR [rsp+0x48]
  42fd7c:	call   0x40215c
  42fd81:	nop
  42fd82:	mov    rcx,rbp
  42fd85:	call   0x40215c
  42fd8a:	nop
  42fd8b:	mov    rcx,QWORD PTR [rsp+0x70]
  42fd90:	call   0x40215c
  42fd95:	nop
  42fd96:	mov    rcx,QWORD PTR [rsp+0xa0]
  42fd9e:	call   0x40215c
  42fda3:	nop
  42fda4:	mov    rcx,QWORD PTR [rsp+0x80]
  42fdac:	mov    rax,QWORD PTR [rcx]
  42fdaf:	call   QWORD PTR [rax+0x10]
  42fdb2:	nop
  42fdb3:	xor    eax,eax
  42fdb5:	cmp    r14,rax
  42fdb8:	je     0x42fdc4
  42fdba:	mov    rax,QWORD PTR [r14]
  42fdbd:	mov    rcx,r14
  42fdc0:	call   QWORD PTR [rax+0x10]
  42fdc3:	nop
  42fdc4:	mov    rcx,rsi
  42fdc7:	call   0x40215c
  42fdcc:	nop
  42fdcd:	mov    rcx,rdi
  42fdd0:	call   0x40215c
  42fdd5:	nop
  42fdd6:	mov    rcx,QWORD PTR [rsp+0xb8]
  42fdde:	call   0x40215c
  42fde3:	nop
  42fde4:	mov    rcx,QWORD PTR [rsp+0x60]
  42fde9:	call   0x40215c
  42fdee:	nop
  42fdef:	jmp    0x4312f4
  42fdf4:	mov    r13,QWORD PTR [rsp+0x40]
  42fdf9:	cmp    QWORD PTR [r13+0x58],0x400000
  42fe01:	je     0x42fe31
  42fe03:	mov    rcx,QWORD PTR [r13+0x50]
  42fe07:	cmp    rcx,rdx
  42fe0a:	je     0x42fe17
  42fe0c:	call   0x40215c
  42fe11:	xor    edx,edx
  42fe13:	mov    QWORD PTR [r13+0x50],rdx
  42fe17:	mov    QWORD PTR [r13+0x58],rdx
  42fe1b:	mov    ecx,0x400000
  42fe20:	call   0x402130
  42fe25:	mov    QWORD PTR [r13+0x50],rax
  42fe29:	mov    QWORD PTR [r13+0x58],0x400000
  42fe31:	xor    ecx,ecx
  42fe33:	mov    r11,rcx
  42fe36:	mov    QWORD PTR [rsp+0x138],rcx
  42fe3e:	lea    eax,[rcx+0x1]
  42fe41:	mov    BYTE PTR [rsp+0x440],al
  42fe48:	mov    al,cl
  42fe4a:	mov    BYTE PTR [rsp+0x450],cl
  42fe51:	mov    r8,rcx
  42fe54:	mov    QWORD PTR [rsp+0x98],rcx
  42fe5c:	mov    r9,rcx
  42fe5f:	mov    QWORD PTR [rsp+0xf8],rcx
  42fe67:	mov    r10,rcx
  42fe6a:	mov    QWORD PTR [rsp+0x90],rcx
  42fe72:	mov    rdx,QWORD PTR [rsp+0x448]
  42fe7a:	cmp    BYTE PTR [rdx+0x1b],cl
  42fe7d:	jne    0x42feba
  42fe7f:	lea    ecx,[r10+0x1]
  42fe83:	cmp    DWORD PTR [r14+0x20],ecx
  42fe87:	jne    0x42feba
  42fe89:	mov    rax,QWORD PTR [r14+0x18]
  42fe8d:	mov    rcx,QWORD PTR [rax]
  42fe90:	xor    eax,eax
  42fe92:	cmp    BYTE PTR [rcx+0x7c],al
  42fe95:	jne    0x42feba
  42fe97:	cmp    QWORD PTR [rcx],rax
  42fe9a:	jne    0x42feba
  42fe9c:	mov    r10,QWORD PTR [rcx+0x8]
  42fea0:	mov    QWORD PTR [rsp+0x90],r10
  42fea8:	jmp    0x42feba
  42feaa:	mov    r9,QWORD PTR [rsp+0xf8]
  42feb2:	mov    r11,QWORD PTR [rsp+0x138]
  42feba:	mov    rcx,r10
  42febd:	sub    rcx,r8
  42fec0:	mov    QWORD PTR [rsp+0x150],rcx
  42fec8:	test   al,al
  42feca:	jne    0x43010a
  42fed0:	cmp    r9,0x400000
  42fed7:	jae    0x42fff8
  42fedd:	mov    eax,0x400000
  42fee2:	sub    rax,r9
  42fee5:	mov    QWORD PTR [rsp+0x180],rax
  42feed:	lea    r10,[r9+r8*1]
  42fef1:	mov    rcx,QWORD PTR [rdx+0x38]
  42fef5:	mov    rax,QWORD PTR [rcx]
  42fef8:	xor    r9d,r9d
  42fefb:	xor    r8d,r8d
  42fefe:	mov    rdx,r10
  42ff01:	call   QWORD PTR [rax+0x20]
  42ff04:	mov    r13d,eax
  42ff07:	xor    eax,eax
  42ff09:	cmp    r13d,eax
  42ff0c:	jne    0x430e1a
  42ff12:	mov    rcx,QWORD PTR [rsp+0x40]
  42ff17:	mov    rdx,QWORD PTR [rcx+0x50]
  42ff1b:	mov    rcx,QWORD PTR [rsp+0xf8]
  42ff23:	add    rdx,rcx
  42ff26:	lea    r8,[rsp+0x180]
  42ff2e:	mov    rax,QWORD PTR [rsp+0x448]
  42ff36:	mov    rcx,QWORD PTR [rax+0x38]
  42ff3a:	call   0x40e898
  42ff3f:	mov    r13d,eax
  42ff42:	xor    eax,eax
  42ff44:	cmp    r13d,eax
  42ff47:	jne    0x430ec1
  42ff4d:	mov    rcx,QWORD PTR [rsp+0x180]
  42ff55:	cmp    rcx,rax
  42ff58:	jne    0x42ffa4
  42ff5a:	mov    r9,QWORD PTR [rsp+0xf8]
  42ff62:	mov    r8,QWORD PTR [rsp+0x98]
  42ff6a:	lea    rax,[r9+r8*1]
  42ff6e:	mov    QWORD PTR [rsp+0x120],rax
  42ff76:	mov    eax,0x1
  42ff7b:	mov    BYTE PTR [rsp+0x450],al
  42ff82:	mov    r13,QWORD PTR [rsp+0x40]
  42ff87:	mov    rdx,QWORD PTR [rsp+0x448]
  42ff8f:	mov    r10,QWORD PTR [rsp+0x90]
  42ff97:	mov    r11,QWORD PTR [rsp+0x138]
  42ff9f:	jmp    0x42feba
  42ffa4:	mov    r9,QWORD PTR [rsp+0xf8]
  42ffac:	add    r9,rcx
  42ffaf:	mov    QWORD PTR [rsp+0xf8],r9
  42ffb7:	mov    r13,QWORD PTR [rsp+0x40]
  42ffbc:	mov    rax,QWORD PTR [r13+0x50]
  42ffc0:	mov    QWORD PTR [r13+0x38],rax
  42ffc4:	mov    QWORD PTR [r13+0x40],rcx
  42ffc8:	mov    r8,QWORD PTR [rsp+0x98]
  42ffd0:	mov    QWORD PTR [r13+0x48],r8
  42ffd4:	mov    rdx,QWORD PTR [rsp+0x448]
  42ffdc:	mov    r10,QWORD PTR [rsp+0x90]
  42ffe4:	mov    al,BYTE PTR [rsp+0x450]
  42ffeb:	mov    r11,QWORD PTR [rsp+0x138]
  42fff3:	jmp    0x42feba
  42fff8:	cmp    r9,rcx
  42fffb:	jae    0x430090
  430001:	sub    rcx,r9
  430004:	mov    r8d,0x10000
  43000a:	cmp    rcx,r8
  43000d:	ja     0x43006f
  43000f:	mov    r13,r8
  430012:	sub    r13,rcx
  430015:	mov    rcx,QWORD PTR [rsp+0x40]
  43001a:	mov    rcx,QWORD PTR [rcx+0x50]
  43001e:	sub    r9,r13
  430021:	lea    rdx,[rcx+r9*1]
  430025:	mov    r8,r13
  430028:	call   0x44b774
  43002d:	mov    r9,r13
  430030:	mov    QWORD PTR [rsp+0xf8],r13
  430038:	mov    r10,QWORD PTR [rsp+0x90]
  430040:	mov    r8,r10
  430043:	sub    r8,r13
  430046:	mov    QWORD PTR [rsp+0x98],r8
  43004e:	mov    r13,QWORD PTR [rsp+0x40]
  430053:	mov    rdx,QWORD PTR [rsp+0x448]
  43005b:	mov    al,BYTE PTR [rsp+0x450]
  430062:	mov    r11,QWORD PTR [rsp+0x138]
  43006a:	jmp    0x42feba
  43006f:	xor    ecx,ecx
  430071:	mov    r9,rcx
  430074:	mov    QWORD PTR [rsp+0xf8],rcx
  43007c:	lea    r8,[r10-0x10000]
  430083:	mov    QWORD PTR [rsp+0x98],r8
  43008b:	jmp    0x42feba
  430090:	mov    rax,r9
  430093:	sub    rax,rcx
  430096:	cmp    rax,0x100000
  43009c:	jae    0x43010a
  43009e:	lea    r13,[rcx-0x10000]
  4300a5:	sub    r9,r13
  4300a8:	mov    QWORD PTR [rsp+0xf8],r9
  4300b0:	mov    rcx,QWORD PTR [rsp+0x40]
  4300b5:	mov    rcx,QWORD PTR [rcx+0x50]
  4300b9:	lea    rdx,[r13+rcx*1+0x0]
  4300be:	mov    r8,r9
  4300c1:	call   0x44b774
  4300c6:	mov    r8,QWORD PTR [rsp+0x98]
  4300ce:	add    r8,r13
  4300d1:	mov    QWORD PTR [rsp+0x98],r8
  4300d9:	mov    r13,QWORD PTR [rsp+0x40]
  4300de:	mov    rdx,QWORD PTR [rsp+0x448]
  4300e6:	mov    r10,QWORD PTR [rsp+0x90]
  4300ee:	mov    r9,QWORD PTR [rsp+0xf8]
  4300f6:	mov    al,BYTE PTR [rsp+0x450]
  4300fd:	mov    r11,QWORD PTR [rsp+0x138]
  430105:	jmp    0x42feba
  43010a:	xor    eax,eax
  43010c:	mov    BYTE PTR [rsp+0x59],al
  430110:	cmp    rbx,rax
  430113:	je     0x43019e
  430119:	mov    eax,DWORD PTR [r14+0x20]
  43011d:	mov    r9,QWORD PTR [rsp+0x130]
  430125:	mov    QWORD PTR [r9+0x30],rax
  430129:	mov    QWORD PTR [r9+0x38],r10
  43012d:	xor    eax,eax
  43012f:	cmp    BYTE PTR [rdx+0x19],al
  430132:	je     0x430141
  430134:	cmp    DWORD PTR [r14+0x20],0x1
  430139:	ja     0x430141
  43013b:	mov    BYTE PTR [rsp+0x59],al
  43013f:	jmp    0x430146
  430141:	mov    BYTE PTR [rsp+0x59],0x1
  430146:	lea    rax,[r11+0x800000]
  43014d:	cmp    r10,rax
  430150:	jb     0x4301a3
  430152:	mov    rax,QWORD PTR [r9]
  430155:	xor    r8d,r8d
  430158:	xor    edx,edx
  43015a:	mov    rcx,r9
  43015d:	call   QWORD PTR [rax+0x20]
  430160:	mov    r13d,eax
  430163:	xor    r11d,r11d
  430166:	cmp    eax,r11d
  430169:	jne    0x430f68
  43016f:	mov    r10,QWORD PTR [rsp+0x90]
  430177:	mov    QWORD PTR [rsp+0x138],r10
  43017f:	mov    r13,QWORD PTR [rsp+0x40]
  430184:	mov    rdx,QWORD PTR [rsp+0x448]
  43018c:	mov    rcx,QWORD PTR [rsp+0x150]
  430194:	mov    r8,QWORD PTR [rsp+0x98]
  43019c:	jmp    0x4301a6
  43019e:	xor    r11d,r11d
  4301a1:	jmp    0x4301a6
  4301a3:	xor    r11d,r11d
  4301a6:	mov    r9,QWORD PTR [rsp+0xf8]
  4301ae:	lea    rax,[r9+r8*1]
  4301b2:	mov    r8,QWORD PTR [rsp+0x120]
  4301ba:	cmp    r8,rax
  4301bd:	jae    0x4301ce
  4301bf:	mov    QWORD PTR [r15+0xf0],r8
  4301c6:	mov    QWORD PTR [rsp+0x120],rax
  4301ce:	mov    r8,r9
  4301d1:	sub    r8,rcx
  4301d4:	mov    QWORD PTR [rsp+0x228],r8
  4301dc:	cmp    r8,0x2
  4301e0:	jb     0x431004
  4301e6:	mov    r9d,0x100000
  4301ec:	cmp    r8,r9
  4301ef:	sbb    rax,rax
  4301f2:	and    rax,0xfffffffffff00002
  4301f8:	add    rax,r9
  4301fb:	sub    r8,rax
  4301fe:	cmp    BYTE PTR [rdx+0x1a],r11b
  430202:	jne    0x43021f
  430204:	mov    rax,QWORD PTR [rsp+0x170]
  43020c:	cmp    r10,rax
  43020f:	ja     0x431004
  430215:	sub    rax,r10
  430218:	cmp    r8,rax
  43021b:	cmova  r8,rax
  43021f:	inc    r8
  430222:	mov    r9,QWORD PTR [r13+0x50]
  430226:	add    r9,rcx
  430229:	mov    QWORD PTR [rsp+0xe0],r11
  430231:	xor    eax,eax
  430233:	cmp    BYTE PTR [rsp+0x440],al
  43023a:	jne    0x430296
  43023c:	cmp    r8,rax
  43023f:	jbe    0x430273
  430241:	lea    edi,[rax+0x1]
  430244:	movzx  ecx,BYTE PTR [r11+r9*1+0x1]
  43024a:	shl    ecx,0x8
  43024d:	movzx  eax,BYTE PTR [r11+r9*1]
  430252:	or     rcx,rax
  430255:	cmp    BYTE PTR [rcx+rbp*1],0xff
  430259:	jne    0x430263
  43025b:	add    r11,rdi
  43025e:	cmp    r11,r8
  430261:	jb     0x430244
  430263:	mov    QWORD PTR [rsp+0xe0],r11
  43026b:	mov    rdi,QWORD PTR [rsp+0x158]
  430273:	add    r10,r11
  430276:	mov    QWORD PTR [rsp+0x90],r10
  43027e:	cmp    r11,r8
  430281:	mov    r8,QWORD PTR [rsp+0x98]
  430289:	mov    al,BYTE PTR [rsp+0x450]
  430290:	je     0x42feaa
  430296:	lea    rax,[r11+r9*1]
  43029a:	mov    QWORD PTR [rsp+0x230],rax
  4302a2:	movzx  ecx,BYTE PTR [rax+0x1]
  4302a6:	shl    ecx,0x8
  4302a9:	movzx  eax,BYTE PTR [rax]
  4302ac:	or     ecx,eax
  4302ae:	mov    BYTE PTR [rsp+0x88],0x1
  4302b6:	movzx  ecx,BYTE PTR [rcx+rbp*1]
  4302ba:	mov    DWORD PTR [rsp+0x30],ecx
  4302be:	xor    r8d,r8d
  4302c1:	mov    DWORD PTR [rsp+0xc8],r8d
  4302c9:	mov    rax,QWORD PTR [rsp+0x48]
  4302ce:	mov    QWORD PTR [rsp+0x150],rax
  4302d6:	jmp    0x4302e0
  4302d8:	mov    r11,QWORD PTR [rsp+0xe0]
  4302e0:	mov    rcx,QWORD PTR [rsp+0xa0]
  4302e8:	mov    r9d,DWORD PTR [rsp+0x30]
  4302ed:	mov    al,BYTE PTR [rsp+0x440]
  4302f4:	jmp    0x430326
  4302f6:	mov    rcx,QWORD PTR [rsp+0xa0]
  4302fe:	mov    r9d,DWORD PTR [rsp+0x30]
  430303:	jmp    0x430326
  430305:	mov    r9d,DWORD PTR [rsp+0x30]
  43030a:	jmp    0x430326
  43030c:	mov    r9d,DWORD PTR [rsp+0x30]
  430311:	mov    al,BYTE PTR [rsp+0x440]
  430318:	jmp    0x430326
  43031a:	mov    r9d,DWORD PTR [rsp+0x30]
  43031f:	jmp    0x430326
  430321:	mov    r9d,DWORD PTR [rsp+0x30]
  430326:	xor    r8d,r8d
  430329:	cmp    al,r8b
  43032c:	je     0x43036c
  43032e:	mov    eax,DWORD PTR [rsp+0xc8]
  430335:	cmp    eax,DWORD PTR [rsp+0x50]
  430339:	jae    0x43036c
  43033b:	mov    rcx,QWORD PTR [rsp+0x150]
  430343:	mov    r8d,DWORD PTR [rcx]
  430346:	mov    DWORD PTR [rsp+0x38],r8d
  43034b:	mov    r8d,0x1
  430351:	add    eax,r8d
  430354:	mov    DWORD PTR [rsp+0xc8],eax
  43035b:	add    rcx,0x4
  43035f:	mov    QWORD PTR [rsp+0x150],rcx
  430367:	jmp    0x430447
  43036c:	cmp    r9d,0xff
  430373:	je     0x430d70
  430379:	mov    eax,r9d
  43037c:	mov    r8,QWORD PTR [rsp+0x70]
  430381:	mov    r8d,DWORD PTR [r8+rax*4]
  430385:	mov    DWORD PTR [rsp+0x38],r8d
  43038a:	sub    r9d,DWORD PTR [rcx+r8*4]
  43038e:	mov    r10d,r9d
  430391:	movzx  r9d,BYTE PTR [rsp+rax*1+0x2f0]
  43039a:	mov    DWORD PTR [rsp+0x30],r9d
  43039f:	mov    al,BYTE PTR [rsp+0x440]
  4303a6:	test   al,al
  4303a8:	je     0x4303b5
  4303aa:	cmp    BYTE PTR [r8+r12*1],0x0
  4303af:	jne    0x430326
  4303b5:	mov    rax,QWORD PTR [rdx]
  4303b8:	mov    rcx,QWORD PTR [rax+0x40]
  4303bc:	mov    r9,QWORD PTR [rcx+r8*8]
  4303c0:	mov    eax,DWORD PTR [r9+0x44]
  4303c4:	mov    r8,QWORD PTR [rsp+0x90]
  4303cc:	cmp    r8,rax
  4303cf:	mov    rcx,QWORD PTR [rsp+0xa0]
  4303d7:	mov    al,BYTE PTR [rsp+0x440]
  4303de:	jb     0x430321
  4303e4:	mov    rax,QWORD PTR [r9+0x48]
  4303e8:	mov    r8,QWORD PTR [rax+r10*8]
  4303ec:	mov    r9,QWORD PTR [r8+0x8]
  4303f0:	lea    rax,[r9+r11*1]
  4303f4:	cmp    rax,QWORD PTR [rsp+0x228]
  4303fc:	mov    al,BYTE PTR [rsp+0x440]
  430403:	ja     0x430305
  430409:	mov    r10,QWORD PTR [r8]
  43040c:	xor    eax,eax
  43040e:	mov    rcx,rax
  430411:	cmp    r9,rax
  430414:	jbe    0x430444
  430416:	mov    r8,QWORD PTR [rsp+0x230]
  43041e:	mov    al,BYTE PTR [rcx+r10*1]
  430422:	cmp    BYTE PTR [r8],al
  430425:	mov    al,BYTE PTR [rsp+0x440]
  43042c:	jne    0x4302f6
  430432:	mov    eax,0x1
  430437:	add    rcx,rax
  43043a:	add    r8,rax
  43043d:	cmp    rcx,r9
  430440:	jb     0x43041e
  430442:	xor    eax,eax
  430444:	mov    r8b,al
  430447:	mov    r9d,DWORD PTR [rsp+0x38]
  43044c:	mov    QWORD PTR [rsp+0xd8],r9
  430454:	mov    rax,QWORD PTR [rdx]
  430457:	mov    rcx,QWORD PTR [rax+0x40]
  43045b:	mov    r10,QWORD PTR [rcx+r9*8]
  43045f:	mov    QWORD PTR [rsp+0x100],r10
  430467:	xor    ecx,ecx
  430469:	cmp    r8b,cl
  43046c:	je     0x430478
  43046e:	cmp    QWORD PTR [rsp+0x90],rcx
  430476:	je     0x430486
  430478:	mov    eax,DWORD PTR [r10+0x44]
  43047c:	cmp    rax,QWORD PTR [rsp+0x90]
  430484:	jne    0x43049f
  430486:	cmp    BYTE PTR [r9+rsi*1],cl
  43048a:	mov    rcx,QWORD PTR [rsp+0xa0]
  430492:	mov    al,BYTE PTR [rsp+0x440]
  430499:	jne    0x43031a
  43049f:	mov    rcx,QWORD PTR [rsp+0x90]
  4304a7:	mov    QWORD PTR [rsp+0x128],rcx
  4304af:	xor    eax,eax
  4304b1:	cmp    r8b,al
  4304b4:	jne    0x4304de
  4304b6:	mov    eax,DWORD PTR [r10+0x44]
  4304ba:	mov    r8,rcx
  4304bd:	cmp    rcx,rax
  4304c0:	mov    rcx,QWORD PTR [rsp+0xa0]
  4304c8:	jb     0x43030c
  4304ce:	mov    rcx,r8
  4304d1:	sub    rcx,rax
  4304d4:	mov    QWORD PTR [rsp+0x128],rcx
  4304dc:	xor    eax,eax
  4304de:	mov    r8,QWORD PTR [r10+0x10]
  4304e2:	cmp    r8,rax
  4304e5:	je     0x430556
  4304e7:	mov    rax,QWORD PTR [rsp+0x98]
  4304ef:	cmp    rcx,rax
  4304f2:	jb     0x43055b
  4304f4:	sub    rcx,rax
  4304f7:	mov    r10,QWORD PTR [rsp+0xf8]
  4304ff:	cmp    rcx,r10
  430502:	jae    0x430560
  430504:	mov    rdx,r10
  430507:	sub    rdx,rcx
  43050a:	add    rcx,QWORD PTR [r13+0x50]
  43050e:	call   r8
  430511:	xor    r8d,r8d
  430514:	cmp    eax,r8d
  430517:	mov    rdx,QWORD PTR [rsp+0x448]
  43051f:	je     0x4302d8
  430525:	cmp    eax,0x2
  430528:	jne    0x43053a
  43052a:	cmp    BYTE PTR [rsp+0x450],r8b
  430532:	jne    0x4302d8
  430538:	jmp    0x43054c
  43053a:	mov    rdx,QWORD PTR [rsp+0x448]
  430542:	mov    r9,QWORD PTR [rsp+0xd8]
  43054a:	jmp    0x430563
  43054c:	mov    r9,QWORD PTR [rsp+0xd8]
  430554:	jmp    0x430563
  430556:	xor    r8d,r8d
  430559:	jmp    0x430563
  43055b:	xor    r8d,r8d
  43055e:	jmp    0x430563
  430560:	xor    r8d,r8d
  430563:	cmp    BYTE PTR [rsp+0x35],r8b
  430568:	je     0x430578
  43056a:	lea    rax,[rdx+0xc]
  43056e:	mov    QWORD PTR [rsp+0x118],rax
  430576:	jmp    0x4305a8
  430578:	cmp    BYTE PTR [r9+rdi*1],r8b
  43057c:	je     0x43058c
  43057e:	lea    rax,[rdx+0xf]
  430582:	mov    QWORD PTR [rsp+0x118],rax
  43058a:	jmp    0x4305a8
  43058c:	lea    rax,[rdx+0x15]
  430590:	lea    rcx,[rdx+0x12]
  430594:	cmp    BYTE PTR [rsp+0x458],r8b
  43059c:	cmovne rcx,rax
  4305a0:	mov    QWORD PTR [rsp+0x118],rcx
  4305a8:	mov    QWORD PTR [rsp+0xb0],r8
  4305b0:	lea    r9,[rsp+0xb0]
  4305b8:	mov    r8d,DWORD PTR [rsp+0x38]
  4305bd:	mov    rcx,r15
  4305c0:	call   0x42c598
  4305c5:	mov    r13d,eax
  4305c8:	xor    r8d,r8d
  4305cb:	cmp    eax,r8d
  4305ce:	jne    0x43137f
  4305d4:	cmp    QWORD PTR [rsp+0xb0],r8
  4305dc:	je     0x43143d
  4305e2:	mov    rdx,QWORD PTR [rsp+0x120]
  4305ea:	mov    rcx,rdx
  4305ed:	mov    r10,QWORD PTR [rsp+0x128]
  4305f5:	sub    rcx,r10
  4305f8:	mov    QWORD PTR [rsp+0xd8],r8
  430600:	mov    rax,QWORD PTR [rsp+0x100]
  430608:	mov    eax,DWORD PTR [rax]
  43060a:	shr    eax,0x5
  43060d:	lea    r9d,[r8+0x1]
  430611:	test   r9b,al
  430614:	je     0x43065d
  430616:	mov    r13,QWORD PTR [rsp+0x40]
  43061b:	mov    QWORD PTR [r13+0x30],r8
  43061f:	mov    QWORD PTR [r13+0x20],r8
  430623:	mov    QWORD PTR [r13+0x18],r8
  430627:	mov    QWORD PTR [r13+0x28],rdx
  43062b:	mov    rcx,QWORD PTR [r13+0x10]
  43062f:	mov    rax,QWORD PTR [rcx]
  430632:	xor    r9d,r9d
  430635:	xor    edx,edx
  430637:	call   QWORD PTR [rax+0x20]
  43063a:	mov    r11,QWORD PTR [r13+0x0]
  43063e:	xor    r9d,r9d
  430641:	xor    r8d,r8d
  430644:	mov    rdx,QWORD PTR [rsp+0x128]
  43064c:	mov    rcx,r13
  43064f:	call   QWORD PTR [r11+0x20]
  430653:	mov    rcx,QWORD PTR [rsp+0x128]
  43065b:	jmp    0x430692
  43065d:	mov    r13,QWORD PTR [rsp+0x40]
  430662:	mov    QWORD PTR [r13+0x30],r10
  430666:	mov    QWORD PTR [r13+0x20],r10
  43066a:	mov    QWORD PTR [r13+0x18],r8
  43066e:	mov    QWORD PTR [r13+0x28],rcx
  430672:	mov    rcx,QWORD PTR [r13+0x10]
  430676:	mov    rax,QWORD PTR [rcx]
  430679:	xor    r9d,r9d
  43067c:	mov    rdx,r10
  43067f:	call   QWORD PTR [rax+0x20]
  430682:	mov    rcx,QWORD PTR [rsp+0x128]
  43068a:	mov    QWORD PTR [rsp+0xd8],rcx
  430692:	xor    r8d,r8d
  430695:	mov    QWORD PTR [rsp+0x220],r8
  43069d:	cmp    rbx,r8
  4306a0:	je     0x4306b6
  4306a2:	mov    eax,DWORD PTR [r14+0x20]
  4306a6:	mov    rdx,QWORD PTR [rsp+0x130]
  4306ae:	mov    QWORD PTR [rdx+0x30],rax
  4306b2:	mov    QWORD PTR [rdx+0x38],rcx
  4306b6:	mov    rax,QWORD PTR [rsp+0x80]
  4306be:	mov    QWORD PTR [rax+0x20],r8
  4306c2:	mov    QWORD PTR [rax+0x28],rcx
  4306c6:	cmp    BYTE PTR [rsp+0x59],r8b
  4306cb:	je     0x4306d2
  4306cd:	mov    rcx,rbx
  4306d0:	jmp    0x4306de
  4306d2:	mov    rcx,QWORD PTR [rsp+0x448]
  4306da:	mov    rcx,QWORD PTR [rcx+0x48]
  4306de:	mov    QWORD PTR [rsp+0x28],rax
  4306e3:	mov    QWORD PTR [rsp+0x20],rcx
  4306e8:	lea    r9,[rsp+0x220]
  4306f0:	mov    r8,r13
  4306f3:	mov    r13d,0x1
  4306f9:	mov    dl,r13b
  4306fc:	mov    rcx,QWORD PTR [rsp+0xb0]
  430704:	call   0x429fb4
  430709:	mov    DWORD PTR [rsp+0x110],eax
  430710:	mov    rcx,QWORD PTR [rsp+0x100]
  430718:	mov    ecx,DWORD PTR [rcx]
  43071a:	shr    ecx,0x5
  43071d:	and    cl,r13b
  430720:	mov    r8,QWORD PTR [rsp+0x128]
  430728:	lea    ecx,[r13-0x1]
  43072c:	cmovne r8,rcx
  430730:	mov    r9d,eax
  430733:	mov    rdx,QWORD PTR [rsp+0xb0]
  43073b:	mov    rcx,r15
  43073e:	call   0x429b20
  430743:	mov    r13d,eax
  430746:	xor    eax,eax
  430748:	cmp    r13d,eax
  43074b:	jne    0x4314eb
  430751:	mov    BYTE PTR [rsp+0x34],al
  430755:	mov    r13d,DWORD PTR [rsp+0x110]
  43075d:	lea    ecx,[rax+0x1]
  430760:	cmp    r13d,ecx
  430763:	jne    0x43083c
  430769:	mov    rdx,QWORD PTR [rsp+0x448]
  430771:	xor    r13d,r13d
  430774:	cmp    BYTE PTR [rdx+0x1a],r13b
  430778:	jne    0x4307d9
  43077a:	cmp    QWORD PTR [rsp+0x148],r13
  430782:	jge    0x430794
  430784:	cmp    BYTE PTR [r15+0x23],r13b
  430788:	je     0x430794
  43078a:	test   BYTE PTR [r15+0x24],cl
  43078e:	je     0x4315a1
  430794:	mov    rcx,QWORD PTR [rsp+0xb0]
  43079c:	cmp    rcx,r13
  43079f:	mov    r13,QWORD PTR [rsp+0x40]
  4307a4:	je     0x4302d8
  4307aa:	mov    rax,QWORD PTR [rcx]
  4307ad:	call   QWORD PTR [rax+0x10]
  4307b0:	mov    rdx,QWORD PTR [rsp+0x448]
  4307b8:	mov    rcx,QWORD PTR [rsp+0xa0]
  4307c0:	mov    r11,QWORD PTR [rsp+0xe0]
  4307c8:	mov    r9d,DWORD PTR [rsp+0x30]
  4307cd:	mov    al,BYTE PTR [rsp+0x440]
  4307d4:	jmp    0x430326
  4307d9:	cmp    BYTE PTR [r15+0x23],r13b
  4307dd:	je     0x4307f7
  4307df:	test   BYTE PTR [r15+0x24],cl
  4307e3:	jne    0x4307f7
  4307e5:	cmp    BYTE PTR [r15+0xe8],r13b
  4307ec:	je     0x4307f7
  4307ee:	cmp    QWORD PTR [r15+0xe0],r13
  4307f5:	jne    0x43084c
  4307f7:	mov    rcx,QWORD PTR [rsp+0xb0]
  4307ff:	cmp    rcx,r13
  430802:	mov    r13,QWORD PTR [rsp+0x40]
  430807:	je     0x4302d8
  43080d:	mov    rax,QWORD PTR [rcx]
  430810:	call   QWORD PTR [rax+0x10]
  430813:	mov    rdx,QWORD PTR [rsp+0x448]
  43081b:	mov    rcx,QWORD PTR [rsp+0xa0]
  430823:	mov    r11,QWORD PTR [rsp+0xe0]
  43082b:	mov    r9d,DWORD PTR [rsp+0x30]
  430830:	mov    al,BYTE PTR [rsp+0x440]
  430837:	jmp    0x430326
  43083c:	mov    BYTE PTR [rsp+0x34],cl
  430840:	cmp    r13d,eax
  430843:	jne    0x4316c0
  430849:	xor    r13d,r13d
  43084c:	lea    rcx,[rsp+0x1a0]
  430854:	call   0x429630
  430859:	nop
  43085a:	mov    rdx,QWORD PTR [rsp+0x128]
  430862:	mov    QWORD PTR [rsp+0x1a0],rdx
  43086a:	mov    r11,QWORD PTR [rsp+0x100]
  430872:	mov    eax,DWORD PTR [r11]
  430875:	shr    eax,0x5
  430878:	mov    ecx,0x1
  43087d:	test   cl,al
  43087f:	je     0x430892
  430881:	mov    rdx,QWORD PTR [r15+0xd8]
  430888:	mov    QWORD PTR [rsp+0x1a0],rdx
  430890:	jmp    0x43089f
  430892:	cmp    QWORD PTR [r15+0xd8],r13
  430899:	jne    0x431776
  43089f:	mov    r10,QWORD PTR [r15+0xf0]
  4308a6:	mov    r8,r10
  4308a9:	sub    r8,rdx
  4308ac:	mov    rcx,r8
  4308af:	mov    al,BYTE PTR [r15+0xe8]
  4308b6:	mov    BYTE PTR [rsp+0x58],al
  4308ba:	cmp    al,r13b
  4308bd:	je     0x4308e1
  4308bf:	mov    rax,QWORD PTR [r15+0xe0]
  4308c6:	lea    rcx,[rdx+rax*1]
  4308ca:	cmp    rcx,r10
  4308cd:	jbe    0x4308d6
  4308cf:	mov    QWORD PTR [r15+0xe0],r8
  4308d6:	mov    rcx,QWORD PTR [r15+0xe0]
  4308dd:	mov    al,BYTE PTR [rsp+0x58]
  4308e1:	cmp    rcx,r13
  4308e4:	je     0x431b96
  4308ea:	movabs r9,0x8000000000000000
  4308f4:	cmp    rcx,r9
  4308f7:	ja     0x431b96
  4308fd:	mov    r9b,r13b
  430900:	cmp    BYTE PTR [rsp+0x34],r13b
  430905:	je     0x43092a
  430907:	cmp    al,r13b
  43090a:	jne    0x43092a
  43090c:	mov    ecx,0x1
  430911:	mov    al,cl
  430913:	mov    BYTE PTR [rsp+0x21c],cl
  43091a:	mov    r9b,cl
  43091d:	mov    rcx,r8
  430920:	mov    BYTE PTR [rsp+0x88],r13b
  430928:	jmp    0x430931
  43092a:	mov    al,BYTE PTR [rsp+0x21c]
  430931:	mov    QWORD PTR [rsp+0x1a8],rcx
  430939:	cmp    rdx,r13
  43093c:	jge    0x430954
  43093e:	add    rcx,rdx
  430941:	mov    QWORD PTR [rsp+0x1a8],rcx
  430949:	mov    rdx,r13
  43094c:	mov    QWORD PTR [rsp+0x1a0],r13
  430954:	cmp    rdx,r13
  430957:	jne    0x430a09
  43095d:	cmp    al,r13b
  430960:	jne    0x430a13
  430966:	cmp    rcx,r10
  430969:	jb     0x430a1d
  43096f:	mov    rax,QWORD PTR [rsp+0x448]
  430977:	cmp    BYTE PTR [rax+0x19],r13b
  43097b:	jne    0x430a25
  430981:	mov    rcx,QWORD PTR [rsp+0x1e8]
  430989:	call   0x40215c
  43098e:	mov    rcx,QWORD PTR [rsp+0x1d8]
  430996:	call   0x40215c
  43099b:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4309a3:	call   0x40215c
  4309a8:	mov    rcx,QWORD PTR [rsp+0x1b0]
  4309b0:	call   0x40215c
  4309b5:	nop
  4309b6:	mov    rcx,QWORD PTR [rsp+0xb0]
  4309be:	cmp    rcx,r13
  4309c1:	je     0x4309f7
  4309c3:	mov    rax,QWORD PTR [rcx]
  4309c6:	call   QWORD PTR [rax+0x10]
  4309c9:	mov    r13,QWORD PTR [rsp+0x40]
  4309ce:	mov    rdx,QWORD PTR [rsp+0x448]
  4309d6:	mov    rcx,QWORD PTR [rsp+0xa0]
  4309de:	mov    r11,QWORD PTR [rsp+0xe0]
  4309e6:	mov    r9d,DWORD PTR [rsp+0x30]
  4309eb:	mov    al,BYTE PTR [rsp+0x440]
  4309f2:	jmp    0x430326
  4309f7:	mov    r13,QWORD PTR [rsp+0x40]
  4309fc:	mov    rdx,QWORD PTR [rsp+0x448]
  430a04:	jmp    0x4302d8
  430a09:	mov    rax,QWORD PTR [rsp+0x448]
  430a11:	jmp    0x430a25
  430a13:	mov    rax,QWORD PTR [rsp+0x448]
  430a1b:	jmp    0x430a25
  430a1d:	mov    rax,QWORD PTR [rsp+0x448]
  430a25:	cmp    BYTE PTR [rax+0x1b],r13b
  430a29:	je     0x430a35
  430a2b:	inc    QWORD PTR [rsp+0x90]
  430a33:	jmp    0x430a50
  430a35:	cmp    r9b,r13b
  430a38:	je     0x430a44
  430a3a:	inc    QWORD PTR [rsp+0x90]
  430a42:	jmp    0x430a50
  430a44:	lea    rax,[rcx+rdx*1]
  430a48:	mov    QWORD PTR [rsp+0x90],rax
  430a50:	lea    r8,[rsp+0x1a0]
  430a58:	mov    rdx,r11
  430a5b:	mov    rcx,QWORD PTR [rsp+0xb0]
  430a63:	call   0x42c720
  430a68:	mov    r13d,eax
  430a6b:	xor    r10d,r10d
  430a6e:	cmp    eax,r10d
  430a71:	jne    0x431864
  430a77:	mov    r8,QWORD PTR [rsp+0x1a0]
  430a7f:	cmp    r8,QWORD PTR [rsp+0x128]
  430a87:	jae    0x430b60
  430a8d:	mov    r13,QWORD PTR [rsp+0x448]
  430a95:	cmp    BYTE PTR [r13+0x1b],r10b
  430a99:	jne    0x430b68
  430a9f:	cmp    DWORD PTR [r14+0x20],r10d
  430aa3:	je     0x430b68
  430aa9:	mov    ecx,DWORD PTR [r14+0x20]
  430aad:	dec    ecx
  430aaf:	mov    rax,QWORD PTR [r14+0x18]
  430ab3:	mov    rax,QWORD PTR [rax+rcx*8]
  430ab7:	mov    rcx,QWORD PTR [rax]
  430aba:	cmp    rcx,r8
  430abd:	jb     0x430b68
  430ac3:	mov    rax,QWORD PTR [rax+0x8]
  430ac7:	lea    rdx,[rcx+rax*1]
  430acb:	mov    rax,QWORD PTR [rsp+0x1a8]
  430ad3:	lea    rcx,[rax+r8*1]
  430ad7:	cmp    rdx,rcx
  430ada:	ja     0x430b68
  430ae0:	mov    ecx,DWORD PTR [r14+0x20]
  430ae4:	dec    ecx
  430ae6:	mov    rax,QWORD PTR [r14+0x18]
  430aea:	mov    rax,QWORD PTR [rax+rcx*8]
  430aee:	mov    QWORD PTR [rsp+0x440],rax
  430af6:	cmp    rax,r10
  430af9:	je     0x430b4f
  430afb:	mov    rcx,QWORD PTR [rax+0x48]
  430aff:	call   0x40215c
  430b04:	mov    rcx,QWORD PTR [rsp+0x440]
  430b0c:	mov    rcx,QWORD PTR [rcx+0x38]
  430b10:	call   0x40215c
  430b15:	mov    rax,QWORD PTR [rsp+0x440]
  430b1d:	mov    rcx,QWORD PTR [rax+0x20]
  430b21:	call   0x40215c
  430b26:	mov    rax,QWORD PTR [rsp+0x440]
  430b2e:	mov    rcx,QWORD PTR [rax+0x10]
  430b32:	call   0x40215c
  430b37:	mov    rcx,QWORD PTR [rsp+0x440]
  430b3f:	call   0x40215c
  430b44:	mov    r8,QWORD PTR [rsp+0x1a0]
  430b4c:	xor    r10d,r10d
  430b4f:	add    DWORD PTR [r14+0x20],0xffffffff
  430b54:	cmp    DWORD PTR [r14+0x20],r10d
  430b58:	jne    0x430aa9
  430b5e:	jmp    0x430b68
  430b60:	mov    r13,QWORD PTR [rsp+0x448]
  430b68:	cmp    BYTE PTR [rsp+0x34],r10b
  430b6d:	je     0x430cf9
  430b73:	cmp    BYTE PTR [r13+0x19],r10b
  430b77:	je     0x430cf9
  430b7d:	cmp    BYTE PTR [rsp+0x58],r10b
  430b82:	je     0x430cf9
  430b88:	mov    BYTE PTR [rsp+0x108],r10b
  430b90:	mov    cl,BYTE PTR [r15+0x20]
  430b94:	mov    DWORD PTR [rsp+0x440],ecx
  430b9b:	cmp    cl,r10b
  430b9e:	je     0x430bf8
  430ba0:	cmp    BYTE PTR [r13+0x1c],r10b
  430ba4:	je     0x430bf8
  430ba6:	mov    r8,QWORD PTR [r15+0xe0]
  430bad:	add    r8,QWORD PTR [r15+0xd8]
  430bb4:	add    r8,QWORD PTR [rsp+0xd8]
  430bbc:	mov    rdx,r13
  430bbf:	mov    rcx,r15
  430bc2:	call   0x429f18
  430bc7:	mov    r13d,eax
  430bca:	xor    r10d,r10d
  430bcd:	cmp    eax,r10d
  430bd0:	jne    0x43194f
  430bd6:	mov    ecx,DWORD PTR [rsp+0x440]
  430bdd:	movzx  ecx,cl
  430be0:	cmp    BYTE PTR [r15+0x22],r10b
  430be4:	cmovne ecx,r10d
  430be8:	mov    r8,QWORD PTR [rsp+0x1a0]
  430bf0:	mov    r13,QWORD PTR [rsp+0x448]
  430bf8:	mov    r9b,BYTE PTR [rsp+0x1fd]
  430c00:	cmp    r8,r10
  430c03:	je     0x430c3b
  430c05:	cmp    r9b,r10b
  430c08:	jne    0x430c73
  430c0a:	cmp    cl,r10b
  430c0d:	je     0x430c25
  430c0f:	mov    r10,QWORD PTR [rsp+0x118]
  430c17:	mov    al,BYTE PTR [r10+0x2]
  430c1b:	mov    r11,QWORD PTR [rsp+0x148]
  430c23:	jmp    0x430c8a
  430c25:	mov    r10,QWORD PTR [rsp+0x118]
  430c2d:	mov    al,BYTE PTR [r10+0x1]
  430c31:	mov    r11,QWORD PTR [rsp+0x148]
  430c39:	jmp    0x430c8a
  430c3b:	cmp    cl,r10b
  430c3e:	jne    0x430c4f
  430c40:	mov    eax,0x1
  430c45:	mov    r10,QWORD PTR [rsp+0x118]
  430c4d:	jmp    0x430c5a
  430c4f:	mov    r10,QWORD PTR [rsp+0x118]
  430c57:	mov    al,BYTE PTR [r10]
  430c5a:	movzx  eax,al
  430c5d:	mov    r11,QWORD PTR [rsp+0x148]
  430c65:	cmp    r11,0xfffffffffffffffe
  430c69:	mov    edx,0x1
  430c6e:	cmovge eax,edx
  430c71:	jmp    0x430c8a
  430c73:	mov    eax,DWORD PTR [rsp+0x108]
  430c7a:	mov    r10,QWORD PTR [rsp+0x118]
  430c82:	mov    r11,QWORD PTR [rsp+0x148]
  430c8a:	mov    dl,BYTE PTR [rsp+0x1fc]
  430c91:	test   r11,r11
  430c94:	jns    0x430ca5
  430c96:	movzx  eax,al
  430c99:	xor    r11d,r11d
  430c9c:	cmp    dl,r11b
  430c9f:	cmovne eax,r11d
  430ca3:	jmp    0x430ca8
  430ca5:	xor    r11d,r11d
  430ca8:	cmp    al,r11b
  430cab:	jne    0x431a3a
  430cb1:	cmp    dl,r11b
  430cb4:	jne    0x430cf9
  430cb6:	cmp    cl,r11b
  430cb9:	jne    0x430cf9
  430cbb:	cmp    r9b,r11b
  430cbe:	je     0x430cc5
  430cc0:	cmp    r8,r11
  430cc3:	jne    0x430cf9
  430cc5:	cmp    DWORD PTR [r14+0x20],r11d
  430cc9:	jne    0x430cd7
  430ccb:	cmp    BYTE PTR [r10+0x1],r11b
  430ccf:	jne    0x431a3a
  430cd5:	jmp    0x430cf9
  430cd7:	mov    eax,0x1
  430cdc:	cmp    DWORD PTR [r14+0x20],eax
  430ce0:	jne    0x430cf9
  430ce2:	mov    rax,QWORD PTR [r14+0x18]
  430ce6:	mov    rcx,QWORD PTR [rax]
  430ce9:	cmp    BYTE PTR [rcx+0x5c],r11b
  430ced:	je     0x430cf9
  430cef:	cmp    BYTE PTR [r13+0x16],r11b
  430cf3:	jne    0x431a3a
  430cf9:	mov    eax,DWORD PTR [rsp+0x38]
  430cfd:	mov    DWORD PTR [rsp+0x218],eax
  430d04:	lea    rdx,[rsp+0x1a0]
  430d0c:	mov    rcx,r14
  430d0f:	call   0x42cd64
  430d14:	mov    r13b,0x1
  430d17:	mov    rcx,QWORD PTR [rsp+0x1e8]
  430d1f:	call   0x40215c
  430d24:	mov    rcx,QWORD PTR [rsp+0x1d8]
  430d2c:	call   0x40215c
  430d31:	mov    rcx,QWORD PTR [rsp+0x1c0]
  430d39:	call   0x40215c
  430d3e:	mov    rcx,QWORD PTR [rsp+0x1b0]
  430d46:	call   0x40215c
  430d4b:	nop
  430d4c:	mov    rcx,QWORD PTR [rsp+0xb0]
  430d54:	xor    eax,eax
  430d56:	cmp    rcx,rax
  430d59:	je     0x430d8d
  430d5b:	mov    rax,QWORD PTR [rcx]
  430d5e:	call   QWORD PTR [rax+0x10]
  430d61:	mov    r10,QWORD PTR [rsp+0x90]
  430d69:	mov    eax,0x1
  430d6e:	jmp    0x430d9a
  430d70:	mov    r10,QWORD PTR [rsp+0x90]
  430d78:	mov    eax,0x1
  430d7d:	add    r10,rax
  430d80:	mov    QWORD PTR [rsp+0x90],r10
  430d88:	mov    r13b,r8b
  430d8b:	jmp    0x430d9a
  430d8d:	mov    r10,QWORD PTR [rsp+0x90]
  430d95:	mov    eax,0x1
  430d9a:	xor    ecx,ecx
  430d9c:	cmp    BYTE PTR [rsp+0x88],cl
  430da3:	je     0x430de2
  430da5:	cmp    r13b,cl
  430da8:	je     0x430de2
  430daa:	mov    BYTE PTR [rsp+0x440],al
  430db1:	mov    r13,QWORD PTR [rsp+0x40]
  430db6:	mov    rdx,QWORD PTR [rsp+0x448]
  430dbe:	mov    r9,QWORD PTR [rsp+0xf8]
  430dc6:	mov    r8,QWORD PTR [rsp+0x98]
  430dce:	mov    al,BYTE PTR [rsp+0x450]
  430dd5:	mov    r11,QWORD PTR [rsp+0x138]
  430ddd:	jmp    0x42feba
  430de2:	mov    BYTE PTR [rsp+0x440],cl
  430de9:	mov    r13,QWORD PTR [rsp+0x40]
  430dee:	mov    rdx,QWORD PTR [rsp+0x448]
  430df6:	mov    r9,QWORD PTR [rsp+0xf8]
  430dfe:	mov    r8,QWORD PTR [rsp+0x98]
  430e06:	mov    al,BYTE PTR [rsp+0x450]
  430e0d:	mov    r11,QWORD PTR [rsp+0x138]
  430e15:	jmp    0x42feba
  430e1a:	xor    r15d,r15d
  430e1d:	cmp    rbx,r15
  430e20:	je     0x430e2c
  430e22:	mov    rax,QWORD PTR [rbx]
  430e25:	mov    rcx,rbx
  430e28:	call   QWORD PTR [rax+0x10]
  430e2b:	nop
  430e2c:	mov    rcx,QWORD PTR [rsp+0x40]
  430e31:	cmp    rcx,r15
  430e34:	je     0x430e3d
  430e36:	mov    rax,QWORD PTR [rcx]
  430e39:	call   QWORD PTR [rax+0x10]
  430e3c:	nop
  430e3d:	mov    rcx,r12
  430e40:	call   0x40215c
  430e45:	nop
  430e46:	mov    rcx,QWORD PTR [rsp+0x48]
  430e4b:	call   0x40215c
  430e50:	nop
  430e51:	mov    rcx,rbp
  430e54:	call   0x40215c
  430e59:	nop
  430e5a:	mov    rcx,QWORD PTR [rsp+0x70]
  430e5f:	call   0x40215c
  430e64:	nop
  430e65:	mov    rcx,QWORD PTR [rsp+0xa0]
  430e6d:	call   0x40215c
  430e72:	nop
  430e73:	mov    rcx,QWORD PTR [rsp+0x80]
  430e7b:	mov    rax,QWORD PTR [rcx]
  430e7e:	call   QWORD PTR [rax+0x10]
  430e81:	nop
  430e82:	cmp    r14,r15
  430e85:	je     0x430e91
  430e87:	mov    rax,QWORD PTR [r14]
  430e8a:	mov    rcx,r14
  430e8d:	call   QWORD PTR [rax+0x10]
  430e90:	nop
  430e91:	mov    rcx,rsi
  430e94:	call   0x40215c
  430e99:	nop
  430e9a:	mov    rcx,rdi
  430e9d:	call   0x40215c
  430ea2:	nop
  430ea3:	mov    rcx,QWORD PTR [rsp+0xb8]
  430eab:	call   0x40215c
  430eb0:	nop
  430eb1:	mov    rcx,QWORD PTR [rsp+0x60]
  430eb6:	call   0x40215c
  430ebb:	nop
  430ebc:	jmp    0x4312f4
  430ec1:	cmp    rbx,rax
  430ec4:	je     0x430ed1
  430ec6:	mov    rax,QWORD PTR [rbx]
  430ec9:	mov    rcx,rbx
  430ecc:	call   QWORD PTR [rax+0x10]
  430ecf:	xor    eax,eax
  430ed1:	mov    rcx,QWORD PTR [rsp+0x40]
  430ed6:	cmp    rcx,rax
  430ed9:	je     0x430ee2
  430edb:	mov    rax,QWORD PTR [rcx]
  430ede:	call   QWORD PTR [rax+0x10]
  430ee1:	nop
  430ee2:	mov    rcx,r12
  430ee5:	call   0x40215c
  430eea:	nop
  430eeb:	mov    rcx,QWORD PTR [rsp+0x48]
  430ef0:	call   0x40215c
  430ef5:	nop
  430ef6:	mov    rcx,rbp
  430ef9:	call   0x40215c
  430efe:	nop
  430eff:	mov    rcx,QWORD PTR [rsp+0x70]
  430f04:	call   0x40215c
  430f09:	nop
  430f0a:	mov    rcx,QWORD PTR [rsp+0xa0]
  430f12:	call   0x40215c
  430f17:	nop
  430f18:	mov    rcx,QWORD PTR [rsp+0x80]
  430f20:	mov    rax,QWORD PTR [rcx]
  430f23:	call   QWORD PTR [rax+0x10]
  430f26:	nop
  430f27:	xor    eax,eax
  430f29:	cmp    r14,rax
  430f2c:	je     0x430f38
  430f2e:	mov    rax,QWORD PTR [r14]
  430f31:	mov    rcx,r14
  430f34:	call   QWORD PTR [rax+0x10]
  430f37:	nop
  430f38:	mov    rcx,rsi
  430f3b:	call   0x40215c
  430f40:	nop
  430f41:	mov    rcx,rdi
  430f44:	call   0x40215c
  430f49:	nop
  430f4a:	mov    rcx,QWORD PTR [rsp+0xb8]
  430f52:	call   0x40215c
  430f57:	nop
  430f58:	mov    rcx,QWORD PTR [rsp+0x60]
  430f5d:	call   0x40215c
  430f62:	nop
  430f63:	jmp    0x4312f4
  430f68:	mov    rax,QWORD PTR [rbx]
  430f6b:	mov    rcx,rbx
  430f6e:	call   QWORD PTR [rax+0x10]
  430f71:	nop
  430f72:	mov    rcx,QWORD PTR [rsp+0x40]
  430f77:	xor    eax,eax
  430f79:	cmp    rcx,rax
  430f7c:	je     0x430f85
  430f7e:	mov    rax,QWORD PTR [rcx]
  430f81:	call   QWORD PTR [rax+0x10]
  430f84:	nop
  430f85:	mov    rcx,r12
  430f88:	call   0x40215c
  430f8d:	nop
  430f8e:	mov    rcx,QWORD PTR [rsp+0x48]
  430f93:	call   0x40215c
  430f98:	nop
  430f99:	mov    rcx,rbp
  430f9c:	call   0x40215c
  430fa1:	nop
  430fa2:	mov    rcx,QWORD PTR [rsp+0x70]
  430fa7:	call   0x40215c
  430fac:	nop
  430fad:	mov    rcx,QWORD PTR [rsp+0xa0]
  430fb5:	call   0x40215c
  430fba:	nop
  430fbb:	mov    rcx,QWORD PTR [rsp+0x80]
  430fc3:	mov    rax,QWORD PTR [rcx]
  430fc6:	call   QWORD PTR [rax+0x10]
  430fc9:	nop
  430fca:	mov    rax,QWORD PTR [r14]
  430fcd:	mov    rcx,r14
  430fd0:	call   QWORD PTR [rax+0x10]
  430fd3:	nop
  430fd4:	mov    rcx,rsi
  430fd7:	call   0x40215c
  430fdc:	nop
  430fdd:	mov    rcx,rdi
  430fe0:	call   0x40215c
  430fe5:	nop
  430fe6:	mov    rcx,QWORD PTR [rsp+0xb8]
  430fee:	call   0x40215c
  430ff3:	nop
  430ff4:	mov    rcx,QWORD PTR [rsp+0x60]
  430ff9:	call   0x40215c
  430ffe:	nop
  430fff:	jmp    0x4312f4
  431004:	cmp    BYTE PTR [rdx+0x1a],r11b
  431008:	je     0x431248
  43100e:	mov    eax,0x1
  431013:	cmp    DWORD PTR [r14+0x20],eax
  431017:	sete   BYTE PTR [rsp+0x440]
  43101f:	mov    rdx,QWORD PTR [rsp+0x120]
  431027:	mov    rcx,r14
  43102a:	call   0x42cc48
  43102f:	xor    r11d,r11d
  431032:	cmp    DWORD PTR [r14+0x20],r11d
  431036:	jne    0x4310e2
  43103c:	cmp    rbx,r11
  43103f:	je     0x43104d
  431041:	mov    rax,QWORD PTR [rbx]
  431044:	mov    rcx,rbx
  431047:	call   QWORD PTR [rax+0x10]
  43104a:	xor    r11d,r11d
  43104d:	cmp    r13,r11
  431050:	je     0x43105d
  431052:	mov    rax,QWORD PTR [r13+0x0]
  431056:	mov    rcx,r13
  431059:	call   QWORD PTR [rax+0x10]
  43105c:	nop
  43105d:	mov    rcx,r12
  431060:	call   0x40215c
  431065:	nop
  431066:	mov    rcx,QWORD PTR [rsp+0x48]
  43106b:	call   0x40215c
  431070:	nop
  431071:	mov    rcx,rbp
  431074:	call   0x40215c
  431079:	nop
  43107a:	mov    rcx,QWORD PTR [rsp+0x70]
  43107f:	call   0x40215c
  431084:	nop
  431085:	mov    rcx,QWORD PTR [rsp+0xa0]
  43108d:	call   0x40215c
  431092:	nop
  431093:	mov    rcx,QWORD PTR [rsp+0x80]
  43109b:	mov    rax,QWORD PTR [rcx]
  43109e:	call   QWORD PTR [rax+0x10]
  4310a1:	nop
  4310a2:	mov    rax,QWORD PTR [r14]
  4310a5:	mov    rcx,r14
  4310a8:	call   QWORD PTR [rax+0x10]
  4310ab:	nop
  4310ac:	mov    rcx,rsi
  4310af:	call   0x40215c
  4310b4:	nop
  4310b5:	mov    rcx,rdi
  4310b8:	call   0x40215c
  4310bd:	nop
  4310be:	mov    rcx,QWORD PTR [rsp+0xb8]
  4310c6:	call   0x40215c
  4310cb:	nop
  4310cc:	mov    rcx,QWORD PTR [rsp+0x60]
  4310d1:	call   0x40215c
  4310d6:	nop
  4310d7:	mov    r13d,0x1
  4310dd:	jmp    0x4312f4
  4310e2:	cmp    BYTE PTR [rsp+0x440],r11b
  4310ea:	jne    0x4310fb
  4310ec:	mov    eax,0x1
  4310f1:	cmp    DWORD PTR [r14+0x20],eax
  4310f5:	je     0x431248
  4310fb:	mov    rax,QWORD PTR [rsp+0x448]
  431103:	mov    rcx,QWORD PTR [rax+0x38]
  431107:	mov    QWORD PTR [rsp+0x448],rcx
  43110f:	cmp    rcx,r11
  431112:	je     0x43111d
  431114:	mov    rax,QWORD PTR [rcx]
  431117:	call   QWORD PTR [rax+0x8]
  43111a:	xor    r11d,r11d
  43111d:	mov    rcx,QWORD PTR [r14+0x30]
  431121:	cmp    rcx,r11
  431124:	je     0x43112c
  431126:	mov    rax,QWORD PTR [rcx]
  431129:	call   QWORD PTR [rax+0x10]
  43112c:	mov    rax,QWORD PTR [rsp+0x448]
  431134:	mov    QWORD PTR [r14+0x30],rax
  431138:	mov    rax,QWORD PTR [r14]
  43113b:	mov    rcx,r14
  43113e:	call   QWORD PTR [rax+0x8]
  431141:	mov    rcx,QWORD PTR [r15]
  431144:	xor    eax,eax
  431146:	cmp    rcx,rax
  431149:	je     0x431151
  43114b:	mov    rax,QWORD PTR [rcx]
  43114e:	call   QWORD PTR [rax+0x10]
  431151:	mov    QWORD PTR [r15],r14
  431154:	xor    ecx,ecx
  431156:	mov    BYTE PTR [r15+0x20],cl
  43115a:	mov    BYTE PTR [r15+0x21],cl
  43115e:	mov    BYTE PTR [r15+0x22],cl
  431162:	mov    BYTE PTR [r15+0x23],cl
  431166:	mov    DWORD PTR [r15+0x24],ecx
  43116a:	mov    DWORD PTR [r15+0x28],ecx
  43116e:	mov    QWORD PTR [r15+0x30],rcx
  431172:	mov    DWORD PTR [r15+0x40],ecx
  431176:	mov    rax,QWORD PTR [r15+0x38]
  43117a:	mov    WORD PTR [rax],cx
  43117d:	mov    DWORD PTR [r15+0x50],ecx
  431181:	mov    rax,QWORD PTR [r15+0x48]
  431185:	mov    WORD PTR [rax],cx
  431188:	lea    eax,[rcx+0x1]
  43118b:	mov    BYTE PTR [r15+0x108],al
  431192:	mov    DWORD PTR [r15+0xc0],0xffffffff
  43119d:	mov    QWORD PTR [r15+0xd8],rcx
  4311a4:	cmp    rbx,rcx
  4311a7:	je     0x4311b4
  4311a9:	mov    rax,QWORD PTR [rbx]
  4311ac:	mov    rcx,rbx
  4311af:	call   QWORD PTR [rax+0x10]
  4311b2:	xor    ecx,ecx
  4311b4:	cmp    r13,rcx
  4311b7:	je     0x4311c4
  4311b9:	mov    rax,QWORD PTR [r13+0x0]
  4311bd:	mov    rcx,r13
  4311c0:	call   QWORD PTR [rax+0x10]
  4311c3:	nop
  4311c4:	mov    rcx,r12
  4311c7:	call   0x40215c
  4311cc:	nop
  4311cd:	mov    rcx,QWORD PTR [rsp+0x48]
  4311d2:	call   0x40215c
  4311d7:	nop
  4311d8:	mov    rcx,rbp
  4311db:	call   0x40215c
  4311e0:	nop
  4311e1:	mov    rcx,QWORD PTR [rsp+0x70]
  4311e6:	call   0x40215c
  4311eb:	nop
  4311ec:	mov    rcx,QWORD PTR [rsp+0xa0]
  4311f4:	call   0x40215c
  4311f9:	nop
  4311fa:	mov    rcx,QWORD PTR [rsp+0x80]
  431202:	mov    rax,QWORD PTR [rcx]
  431205:	call   QWORD PTR [rax+0x10]
  431208:	nop
  431209:	mov    rax,QWORD PTR [r14]
  43120c:	mov    rcx,r14
  43120f:	call   QWORD PTR [rax+0x10]
  431212:	nop
  431213:	mov    rcx,rsi
  431216:	call   0x40215c
  43121b:	nop
  43121c:	mov    rcx,rdi
  43121f:	call   0x40215c
  431224:	nop
  431225:	mov    rcx,QWORD PTR [rsp+0xb8]
  43122d:	call   0x40215c
  431232:	nop
  431233:	mov    rcx,QWORD PTR [rsp+0x60]
  431238:	call   0x40215c
  43123d:	nop
  43123e:	xor    eax,eax
  431240:	mov    r13d,eax
  431243:	jmp    0x4312f4
  431248:	cmp    rbx,r11
  43124b:	je     0x431259
  43124d:	mov    rax,QWORD PTR [rbx]
  431250:	mov    rcx,rbx
  431253:	call   QWORD PTR [rax+0x10]
  431256:	xor    r11d,r11d
  431259:	cmp    r13,r11
  43125c:	je     0x431269
  43125e:	mov    rax,QWORD PTR [r13+0x0]
  431262:	mov    rcx,r13
  431265:	call   QWORD PTR [rax+0x10]
  431268:	nop
  431269:	mov    rcx,r12
  43126c:	call   0x40215c
  431271:	nop
  431272:	mov    rcx,QWORD PTR [rsp+0x48]
  431277:	call   0x40215c
  43127c:	nop
  43127d:	mov    rcx,rbp
  431280:	call   0x40215c
  431285:	xor    ebx,ebx
  431287:	cmp    QWORD PTR [r15],rbx
  43128a:	jne    0x431309
  43128c:	mov    rcx,QWORD PTR [rsp+0x70]
  431291:	call   0x40215c
  431296:	nop
  431297:	mov    rcx,QWORD PTR [rsp+0xa0]
  43129f:	call   0x40215c
  4312a4:	nop
  4312a5:	mov    rcx,QWORD PTR [rsp+0x80]
  4312ad:	mov    rax,QWORD PTR [rcx]
  4312b0:	call   QWORD PTR [rax+0x10]
  4312b3:	nop
  4312b4:	cmp    r14,rbx
  4312b7:	je     0x4312c3
  4312b9:	mov    rax,QWORD PTR [r14]
  4312bc:	mov    rcx,r14
  4312bf:	call   QWORD PTR [rax+0x10]
  4312c2:	nop
  4312c3:	mov    rcx,rsi
  4312c6:	call   0x40215c
  4312cb:	nop
  4312cc:	mov    rcx,rdi
  4312cf:	call   0x40215c
  4312d4:	nop
  4312d5:	mov    rcx,QWORD PTR [rsp+0xb8]
  4312dd:	call   0x40215c
  4312e2:	nop
  4312e3:	mov    rcx,QWORD PTR [rsp+0x60]
  4312e8:	call   0x40215c
  4312ed:	nop
  4312ee:	mov    r13d,0x1
  4312f4:	mov    rcx,QWORD PTR [rsp+0x190]
  4312fc:	call   0x40215c
  431301:	mov    eax,r13d
  431304:	jmp    0x431c8b
  431309:	mov    rcx,QWORD PTR [rsp+0x70]
  43130e:	call   0x40215c
  431313:	nop
  431314:	mov    rcx,QWORD PTR [rsp+0xa0]
  43131c:	call   0x40215c
  431321:	nop
  431322:	mov    rcx,QWORD PTR [rsp+0x80]
  43132a:	mov    rax,QWORD PTR [rcx]
  43132d:	call   QWORD PTR [rax+0x10]
  431330:	nop
  431331:	cmp    r14,rbx
  431334:	je     0x431340
  431336:	mov    rax,QWORD PTR [r14]
  431339:	mov    rcx,r14
  43133c:	call   QWORD PTR [rax+0x10]
  43133f:	nop
  431340:	mov    rcx,rsi
  431343:	call   0x40215c
  431348:	nop
  431349:	mov    rcx,rdi
  43134c:	call   0x40215c
  431351:	nop
  431352:	mov    rcx,QWORD PTR [rsp+0xb8]
  43135a:	call   0x40215c
  43135f:	nop
  431360:	mov    rcx,QWORD PTR [rsp+0x60]
  431365:	call   0x40215c
  43136a:	nop
  43136b:	mov    rcx,QWORD PTR [rsp+0x190]
  431373:	call   0x40215c
  431378:	xor    eax,eax
  43137a:	jmp    0x431c8b
  43137f:	mov    rcx,QWORD PTR [rsp+0xb0]
  431387:	cmp    rcx,r8
  43138a:	je     0x431395
  43138c:	mov    rax,QWORD PTR [rcx]
  43138f:	call   QWORD PTR [rax+0x10]
  431392:	xor    r8d,r8d
  431395:	cmp    rbx,r8
  431398:	je     0x4313a6
  43139a:	mov    rax,QWORD PTR [rbx]
  43139d:	mov    rcx,rbx
  4313a0:	call   QWORD PTR [rax+0x10]
  4313a3:	xor    r8d,r8d
  4313a6:	mov    rcx,QWORD PTR [rsp+0x40]
  4313ab:	cmp    rcx,r8
  4313ae:	je     0x4313b7
  4313b0:	mov    rax,QWORD PTR [rcx]
  4313b3:	call   QWORD PTR [rax+0x10]
  4313b6:	nop
  4313b7:	mov    rcx,r12
  4313ba:	call   0x40215c
  4313bf:	nop
  4313c0:	mov    rcx,QWORD PTR [rsp+0x48]
  4313c5:	call   0x40215c
  4313ca:	nop
  4313cb:	mov    rcx,rbp
  4313ce:	call   0x40215c
  4313d3:	nop
  4313d4:	mov    rcx,QWORD PTR [rsp+0x70]
  4313d9:	call   0x40215c
  4313de:	nop
  4313df:	mov    rcx,QWORD PTR [rsp+0xa0]
  4313e7:	call   0x40215c
  4313ec:	nop
  4313ed:	mov    rcx,QWORD PTR [rsp+0x80]
  4313f5:	mov    rax,QWORD PTR [rcx]
  4313f8:	call   QWORD PTR [rax+0x10]
  4313fb:	nop
  4313fc:	xor    eax,eax
  4313fe:	cmp    r14,rax
  431401:	je     0x43140d
  431403:	mov    rax,QWORD PTR [r14]
  431406:	mov    rcx,r14
  431409:	call   QWORD PTR [rax+0x10]
  43140c:	nop
  43140d:	mov    rcx,rsi
  431410:	call   0x40215c
  431415:	nop
  431416:	mov    rcx,rdi
  431419:	call   0x40215c
  43141e:	nop
  43141f:	mov    rcx,QWORD PTR [rsp+0xb8]
  431427:	call   0x40215c
  43142c:	nop
  43142d:	mov    rcx,QWORD PTR [rsp+0x60]
  431432:	call   0x40215c
  431437:	nop
  431438:	jmp    0x4312f4
  43143d:	cmp    rbx,r8
  431440:	je     0x43144e
  431442:	mov    rax,QWORD PTR [rbx]
  431445:	mov    rcx,rbx
  431448:	call   QWORD PTR [rax+0x10]
  43144b:	xor    r8d,r8d
  43144e:	mov    rcx,QWORD PTR [rsp+0x40]
  431453:	cmp    rcx,r8
  431456:	je     0x43145f
  431458:	mov    rax,QWORD PTR [rcx]
  43145b:	call   QWORD PTR [rax+0x10]
  43145e:	nop
  43145f:	mov    rcx,r12
  431462:	call   0x40215c
  431467:	nop
  431468:	mov    rcx,QWORD PTR [rsp+0x48]
  43146d:	call   0x40215c
  431472:	nop
  431473:	mov    rcx,rbp
  431476:	call   0x40215c
  43147b:	nop
  43147c:	mov    rcx,QWORD PTR [rsp+0x70]
  431481:	call   0x40215c
  431486:	nop
  431487:	mov    rcx,QWORD PTR [rsp+0xa0]
  43148f:	call   0x40215c
  431494:	nop
  431495:	mov    rcx,QWORD PTR [rsp+0x80]
  43149d:	mov    rax,QWORD PTR [rcx]
  4314a0:	call   QWORD PTR [rax+0x10]
  4314a3:	nop
  4314a4:	xor    eax,eax
  4314a6:	cmp    r14,rax
  4314a9:	je     0x4314b5
  4314ab:	mov    rax,QWORD PTR [r14]
  4314ae:	mov    rcx,r14
  4314b1:	call   QWORD PTR [rax+0x10]
  4314b4:	nop
  4314b5:	mov    rcx,rsi
  4314b8:	call   0x40215c
  4314bd:	nop
  4314be:	mov    rcx,rdi
  4314c1:	call   0x40215c
  4314c6:	nop
  4314c7:	mov    rcx,QWORD PTR [rsp+0xb8]
  4314cf:	call   0x40215c
  4314d4:	nop
  4314d5:	mov    rcx,QWORD PTR [rsp+0x60]
  4314da:	call   0x40215c
  4314df:	nop
  4314e0:	mov    r13d,0x80004005
  4314e6:	jmp    0x4312f4
  4314eb:	mov    rcx,QWORD PTR [rsp+0xb0]
  4314f3:	cmp    rcx,rax
  4314f6:	je     0x431500
  4314f8:	mov    rax,QWORD PTR [rcx]
  4314fb:	call   QWORD PTR [rax+0x10]
  4314fe:	xor    eax,eax
  431500:	cmp    rbx,rax
  431503:	je     0x43150f
  431505:	mov    rax,QWORD PTR [rbx]
  431508:	mov    rcx,rbx
  43150b:	call   QWORD PTR [rax+0x10]
  43150e:	nop
  43150f:	mov    rcx,QWORD PTR [rsp+0x40]
  431514:	mov    rax,QWORD PTR [rcx]
  431517:	call   QWORD PTR [rax+0x10]
  43151a:	nop
  43151b:	mov    rcx,r12
  43151e:	call   0x40215c
  431523:	nop
  431524:	mov    rcx,QWORD PTR [rsp+0x48]
  431529:	call   0x40215c
  43152e:	nop
  43152f:	mov    rcx,rbp
  431532:	call   0x40215c
  431537:	nop
  431538:	mov    rcx,QWORD PTR [rsp+0x70]
  43153d:	call   0x40215c
  431542:	nop
  431543:	mov    rcx,QWORD PTR [rsp+0xa0]
  43154b:	call   0x40215c
  431550:	nop
  431551:	mov    rcx,QWORD PTR [rsp+0x80]
  431559:	mov    rax,QWORD PTR [rcx]
  43155c:	call   QWORD PTR [rax+0x10]
  43155f:	nop
  431560:	xor    eax,eax
  431562:	cmp    r14,rax
  431565:	je     0x431571
  431567:	mov    rax,QWORD PTR [r14]
  43156a:	mov    rcx,r14
  43156d:	call   QWORD PTR [rax+0x10]
  431570:	nop
  431571:	mov    rcx,rsi
  431574:	call   0x40215c
  431579:	nop
  43157a:	mov    rcx,rdi
  43157d:	call   0x40215c
  431582:	nop
  431583:	mov    rcx,QWORD PTR [rsp+0xb8]
  43158b:	call   0x40215c
  431590:	nop
  431591:	mov    rcx,QWORD PTR [rsp+0x60]
  431596:	call   0x40215c
  43159b:	nop
  43159c:	jmp    0x4312f4
  4315a1:	mov    eax,DWORD PTR [rsp+0x38]
  4315a5:	mov    DWORD PTR [r15+0x2c],eax
  4315a9:	mov    al,BYTE PTR [r15+0x20]
  4315ad:	mov    BYTE PTR [r15+0x58],al
  4315b1:	mov    al,BYTE PTR [r15+0x21]
  4315b5:	mov    BYTE PTR [r15+0x59],al
  4315b9:	mov    al,BYTE PTR [r15+0x22]
  4315bd:	mov    BYTE PTR [r15+0x5a],al
  4315c1:	mov    al,BYTE PTR [r15+0x23]
  4315c5:	mov    BYTE PTR [r15+0x5b],al
  4315c9:	mov    eax,DWORD PTR [r15+0x24]
  4315cd:	mov    DWORD PTR [r15+0x5c],eax
  4315d1:	mov    eax,DWORD PTR [r15+0x28]
  4315d5:	mov    DWORD PTR [r15+0x60],eax
  4315d9:	mov    eax,DWORD PTR [r15+0x2c]
  4315dd:	mov    DWORD PTR [r15+0x64],eax
  4315e1:	mov    rax,QWORD PTR [r15+0x30]
  4315e5:	mov    QWORD PTR [r15+0x68],rax
  4315e9:	lea    rdx,[r15+0x38]
  4315ed:	lea    rcx,[r15+0x70]
  4315f1:	call   0x4032f8
  4315f6:	lea    rdx,[r15+0x48]
  4315fa:	lea    rcx,[r15+0x80]
  431601:	call   0x4032f8
  431606:	nop
  431607:	mov    rcx,QWORD PTR [rsp+0xb0]
  43160f:	cmp    rcx,r13
  431612:	je     0x43161b
  431614:	mov    rax,QWORD PTR [rcx]
  431617:	call   QWORD PTR [rax+0x10]
  43161a:	nop
  43161b:	cmp    rbx,r13
  43161e:	je     0x43162a
  431620:	mov    rax,QWORD PTR [rbx]
  431623:	mov    rcx,rbx
  431626:	call   QWORD PTR [rax+0x10]
  431629:	nop
  43162a:	mov    rcx,QWORD PTR [rsp+0x40]
  43162f:	mov    rax,QWORD PTR [rcx]
  431632:	call   QWORD PTR [rax+0x10]
  431635:	nop
  431636:	mov    rcx,r12
  431639:	call   0x40215c
  43163e:	nop
  43163f:	mov    rcx,QWORD PTR [rsp+0x48]
  431644:	call   0x40215c
  431649:	nop
  43164a:	mov    rcx,rbp
  43164d:	call   0x40215c
  431652:	nop
  431653:	mov    rcx,QWORD PTR [rsp+0x70]
  431658:	call   0x40215c
  43165d:	nop
  43165e:	mov    rcx,QWORD PTR [rsp+0xa0]
  431666:	call   0x40215c
  43166b:	nop
  43166c:	mov    rcx,QWORD PTR [rsp+0x80]
  431674:	mov    rax,QWORD PTR [rcx]
  431677:	call   QWORD PTR [rax+0x10]
  43167a:	nop
  43167b:	cmp    r14,r13
  43167e:	je     0x43168a
  431680:	mov    rax,QWORD PTR [r14]
  431683:	mov    rcx,r14
  431686:	call   QWORD PTR [rax+0x10]
  431689:	nop
  43168a:	mov    rcx,rsi
  43168d:	call   0x40215c
  431692:	nop
  431693:	mov    rcx,rdi
  431696:	call   0x40215c
  43169b:	nop
  43169c:	mov    rcx,QWORD PTR [rsp+0xb8]
  4316a4:	call   0x40215c
  4316a9:	nop
  4316aa:	mov    rcx,QWORD PTR [rsp+0x60]
  4316af:	call   0x40215c
  4316b4:	nop
  4316b5:	mov    r13d,0x1
  4316bb:	jmp    0x4312f4
  4316c0:	mov    rcx,QWORD PTR [rsp+0xb0]
  4316c8:	cmp    rcx,rax
  4316cb:	je     0x4316d5
  4316cd:	mov    rax,QWORD PTR [rcx]
  4316d0:	call   QWORD PTR [rax+0x10]
  4316d3:	xor    eax,eax
  4316d5:	cmp    rbx,rax
  4316d8:	je     0x4316e4
  4316da:	mov    rax,QWORD PTR [rbx]
  4316dd:	mov    rcx,rbx
  4316e0:	call   QWORD PTR [rax+0x10]
  4316e3:	nop
  4316e4:	mov    rcx,QWORD PTR [rsp+0x40]
  4316e9:	mov    rax,QWORD PTR [rcx]
  4316ec:	call   QWORD PTR [rax+0x10]
  4316ef:	nop
  4316f0:	mov    rcx,r12
  4316f3:	call   0x40215c
  4316f8:	nop
  4316f9:	mov    rcx,QWORD PTR [rsp+0x48]
  4316fe:	call   0x40215c
  431703:	nop
  431704:	mov    rcx,rbp
  431707:	call   0x40215c
  43170c:	nop
  43170d:	mov    rcx,QWORD PTR [rsp+0x70]
  431712:	call   0x40215c
  431717:	nop
  431718:	mov    rcx,QWORD PTR [rsp+0xa0]
  431720:	call   0x40215c
  431725:	nop
  431726:	mov    rcx,QWORD PTR [rsp+0x80]
  43172e:	mov    rax,QWORD PTR [rcx]
  431731:	call   QWORD PTR [rax+0x10]
  431734:	nop
  431735:	xor    eax,eax
  431737:	cmp    r14,rax
  43173a:	je     0x431746
  43173c:	mov    rax,QWORD PTR [r14]
  43173f:	mov    rcx,r14
  431742:	call   QWORD PTR [rax+0x10]
  431745:	nop
  431746:	mov    rcx,rsi
  431749:	call   0x40215c
  43174e:	nop
  43174f:	mov    rcx,rdi
  431752:	call   0x40215c
  431757:	nop
  431758:	mov    rcx,QWORD PTR [rsp+0xb8]
  431760:	call   0x40215c
  431765:	nop
  431766:	mov    rcx,QWORD PTR [rsp+0x60]
  43176b:	call   0x40215c
  431770:	nop
  431771:	jmp    0x4312f4
  431776:	mov    rcx,QWORD PTR [rsp+0x1e8]
  43177e:	call   0x40215c
  431783:	mov    rcx,QWORD PTR [rsp+0x1d8]
  43178b:	call   0x40215c
  431790:	mov    rcx,QWORD PTR [rsp+0x1c0]
  431798:	call   0x40215c
  43179d:	mov    rcx,QWORD PTR [rsp+0x1b0]
  4317a5:	call   0x40215c
  4317aa:	nop
  4317ab:	mov    rcx,QWORD PTR [rsp+0xb0]
  4317b3:	cmp    rcx,r13
  4317b6:	je     0x4317bf
  4317b8:	mov    rax,QWORD PTR [rcx]
  4317bb:	call   QWORD PTR [rax+0x10]
  4317be:	nop
  4317bf:	cmp    rbx,r13
  4317c2:	je     0x4317ce
  4317c4:	mov    rax,QWORD PTR [rbx]
  4317c7:	mov    rcx,rbx
  4317ca:	call   QWORD PTR [rax+0x10]
  4317cd:	nop
  4317ce:	mov    rcx,QWORD PTR [rsp+0x40]
  4317d3:	mov    rax,QWORD PTR [rcx]
  4317d6:	call   QWORD PTR [rax+0x10]
  4317d9:	nop
  4317da:	mov    rcx,r12
  4317dd:	call   0x40215c
  4317e2:	nop
  4317e3:	mov    rcx,QWORD PTR [rsp+0x48]
  4317e8:	call   0x40215c
  4317ed:	nop
  4317ee:	mov    rcx,rbp
  4317f1:	call   0x40215c
  4317f6:	nop
  4317f7:	mov    rcx,QWORD PTR [rsp+0x70]
  4317fc:	call   0x40215c
  431801:	nop
  431802:	mov    rcx,QWORD PTR [rsp+0xa0]
  43180a:	call   0x40215c
  43180f:	nop
  431810:	mov    rcx,QWORD PTR [rsp+0x80]
  431818:	mov    rax,QWORD PTR [rcx]
  43181b:	call   QWORD PTR [rax+0x10]
  43181e:	nop
  43181f:	cmp    r14,r13
  431822:	je     0x43182e
  431824:	mov    rax,QWORD PTR [r14]
  431827:	mov    rcx,r14
  43182a:	call   QWORD PTR [rax+0x10]
  43182d:	nop
  43182e:	mov    rcx,rsi
  431831:	call   0x40215c
  431836:	nop
  431837:	mov    rcx,rdi
  43183a:	call   0x40215c
  43183f:	nop
  431840:	mov    rcx,QWORD PTR [rsp+0xb8]
  431848:	call   0x40215c
  43184d:	nop
  43184e:	mov    rcx,QWORD PTR [rsp+0x60]
  431853:	call   0x40215c
  431858:	nop
  431859:	mov    r13d,0x80004005
  43185f:	jmp    0x4312f4
  431864:	mov    rcx,QWORD PTR [rsp+0x1e8]
  43186c:	call   0x40215c
  431871:	mov    rcx,QWORD PTR [rsp+0x1d8]
  431879:	call   0x40215c
  43187e:	mov    rcx,QWORD PTR [rsp+0x1c0]
  431886:	call   0x40215c
  43188b:	mov    rcx,QWORD PTR [rsp+0x1b0]
  431893:	call   0x40215c
  431898:	nop
  431899:	mov    rcx,QWORD PTR [rsp+0xb0]
  4318a1:	xor    r15d,r15d
  4318a4:	cmp    rcx,r15
  4318a7:	je     0x4318b0
  4318a9:	mov    rax,QWORD PTR [rcx]
  4318ac:	call   QWORD PTR [rax+0x10]
  4318af:	nop
  4318b0:	cmp    rbx,r15
  4318b3:	je     0x4318bf
  4318b5:	mov    rax,QWORD PTR [rbx]
  4318b8:	mov    rcx,rbx
  4318bb:	call   QWORD PTR [rax+0x10]
  4318be:	nop
  4318bf:	mov    rcx,QWORD PTR [rsp+0x40]
  4318c4:	mov    rax,QWORD PTR [rcx]
  4318c7:	call   QWORD PTR [rax+0x10]
  4318ca:	nop
  4318cb:	mov    rcx,r12
  4318ce:	call   0x40215c
  4318d3:	nop
  4318d4:	mov    rcx,QWORD PTR [rsp+0x48]
  4318d9:	call   0x40215c
  4318de:	nop
  4318df:	mov    rcx,rbp
  4318e2:	call   0x40215c
  4318e7:	nop
  4318e8:	mov    rcx,QWORD PTR [rsp+0x70]
  4318ed:	call   0x40215c
  4318f2:	nop
  4318f3:	mov    rcx,QWORD PTR [rsp+0xa0]
  4318fb:	call   0x40215c
  431900:	nop
  431901:	mov    rcx,QWORD PTR [rsp+0x80]
  431909:	mov    rax,QWORD PTR [rcx]
  43190c:	call   QWORD PTR [rax+0x10]
  43190f:	nop
  431910:	cmp    r14,r15
  431913:	je     0x43191f
  431915:	mov    rax,QWORD PTR [r14]
  431918:	mov    rcx,r14
  43191b:	call   QWORD PTR [rax+0x10]
  43191e:	nop
  43191f:	mov    rcx,rsi
  431922:	call   0x40215c
  431927:	nop
  431928:	mov    rcx,rdi
  43192b:	call   0x40215c
  431930:	nop
  431931:	mov    rcx,QWORD PTR [rsp+0xb8]
  431939:	call   0x40215c
  43193e:	nop
  43193f:	mov    rcx,QWORD PTR [rsp+0x60]
  431944:	call   0x40215c
  431949:	nop
  43194a:	jmp    0x4312f4
  43194f:	mov    rcx,QWORD PTR [rsp+0x1e8]
  431957:	call   0x40215c
  43195c:	mov    rcx,QWORD PTR [rsp+0x1d8]
  431964:	call   0x40215c
  431969:	mov    rcx,QWORD PTR [rsp+0x1c0]
  431971:	call   0x40215c
  431976:	mov    rcx,QWORD PTR [rsp+0x1b0]
  43197e:	call   0x40215c
  431983:	nop
  431984:	mov    rcx,QWORD PTR [rsp+0xb0]
  43198c:	xor    r15d,r15d
  43198f:	cmp    rcx,r15
  431992:	je     0x43199b
  431994:	mov    rax,QWORD PTR [rcx]
  431997:	call   QWORD PTR [rax+0x10]
  43199a:	nop
  43199b:	cmp    rbx,r15
  43199e:	je     0x4319aa
  4319a0:	mov    rax,QWORD PTR [rbx]
  4319a3:	mov    rcx,rbx
  4319a6:	call   QWORD PTR [rax+0x10]
  4319a9:	nop
  4319aa:	mov    rcx,QWORD PTR [rsp+0x40]
  4319af:	mov    rax,QWORD PTR [rcx]
  4319b2:	call   QWORD PTR [rax+0x10]
  4319b5:	nop
  4319b6:	mov    rcx,r12
  4319b9:	call   0x40215c
  4319be:	nop
  4319bf:	mov    rcx,QWORD PTR [rsp+0x48]
  4319c4:	call   0x40215c
  4319c9:	nop
  4319ca:	mov    rcx,rbp
  4319cd:	call   0x40215c
  4319d2:	nop
  4319d3:	mov    rcx,QWORD PTR [rsp+0x70]
  4319d8:	call   0x40215c
  4319dd:	nop
  4319de:	mov    rcx,QWORD PTR [rsp+0xa0]
  4319e6:	call   0x40215c
  4319eb:	nop
  4319ec:	mov    rcx,QWORD PTR [rsp+0x80]
  4319f4:	mov    rax,QWORD PTR [rcx]
  4319f7:	call   QWORD PTR [rax+0x10]
  4319fa:	nop
  4319fb:	cmp    r14,r15
  4319fe:	je     0x431a0a
  431a00:	mov    rax,QWORD PTR [r14]
  431a03:	mov    rcx,r14
  431a06:	call   QWORD PTR [rax+0x10]
  431a09:	nop
  431a0a:	mov    rcx,rsi
  431a0d:	call   0x40215c
  431a12:	nop
  431a13:	mov    rcx,rdi
  431a16:	call   0x40215c
  431a1b:	nop
  431a1c:	mov    rcx,QWORD PTR [rsp+0xb8]
  431a24:	call   0x40215c
  431a29:	nop
  431a2a:	mov    rcx,QWORD PTR [rsp+0x60]
  431a2f:	call   0x40215c
  431a34:	nop
  431a35:	jmp    0x4312f4
  431a3a:	mov    r13,QWORD PTR [r13+0x38]
  431a3e:	cmp    r13,r11
  431a41:	je     0x431a50
  431a43:	mov    rax,QWORD PTR [r13+0x0]
  431a47:	mov    rcx,r13
  431a4a:	call   QWORD PTR [rax+0x8]
  431a4d:	xor    r11d,r11d
  431a50:	mov    rcx,QWORD PTR [r15+0x8]
  431a54:	cmp    rcx,r11
  431a57:	je     0x431a62
  431a59:	mov    rax,QWORD PTR [rcx]
  431a5c:	call   QWORD PTR [rax+0x10]
  431a5f:	xor    r11d,r11d
  431a62:	mov    QWORD PTR [r15+0x8],r13
  431a66:	mov    r13,QWORD PTR [rsp+0xb0]
  431a6e:	cmp    r13,r11
  431a71:	je     0x431a80
  431a73:	mov    rax,QWORD PTR [r13+0x0]
  431a77:	mov    rcx,r13
  431a7a:	call   QWORD PTR [rax+0x8]
  431a7d:	xor    r11d,r11d
  431a80:	mov    rcx,QWORD PTR [r15]
  431a83:	cmp    rcx,r11
  431a86:	je     0x431a8e
  431a88:	mov    rax,QWORD PTR [rcx]
  431a8b:	call   QWORD PTR [rax+0x10]
  431a8e:	mov    QWORD PTR [r15],r13
  431a91:	mov    eax,DWORD PTR [rsp+0x38]
  431a95:	mov    DWORD PTR [r15+0xc0],eax
  431a9c:	mov    rax,QWORD PTR [rsp+0xd8]
  431aa4:	mov    QWORD PTR [r15+0x100],rax
  431aab:	mov    rcx,QWORD PTR [rsp+0x1e8]
  431ab3:	call   0x40215c
  431ab8:	mov    rcx,QWORD PTR [rsp+0x1d8]
  431ac0:	call   0x40215c
  431ac5:	mov    rcx,QWORD PTR [rsp+0x1c0]
  431acd:	call   0x40215c
  431ad2:	mov    rcx,QWORD PTR [rsp+0x1b0]
  431ada:	call   0x40215c
  431adf:	nop
  431ae0:	mov    rcx,QWORD PTR [rsp+0xb0]
  431ae8:	xor    r13d,r13d
  431aeb:	cmp    rcx,r13
  431aee:	je     0x431af7
  431af0:	mov    rax,QWORD PTR [rcx]
  431af3:	call   QWORD PTR [rax+0x10]
  431af6:	nop
  431af7:	cmp    rbx,r13
  431afa:	je     0x431b06
  431afc:	mov    rax,QWORD PTR [rbx]
  431aff:	mov    rcx,rbx
  431b02:	call   QWORD PTR [rax+0x10]
  431b05:	nop
  431b06:	mov    rcx,QWORD PTR [rsp+0x40]
  431b0b:	mov    rax,QWORD PTR [rcx]
  431b0e:	call   QWORD PTR [rax+0x10]
  431b11:	nop
  431b12:	mov    rcx,r12
  431b15:	call   0x40215c
  431b1a:	nop
  431b1b:	mov    rcx,QWORD PTR [rsp+0x48]
  431b20:	call   0x40215c
  431b25:	nop
  431b26:	mov    rcx,rbp
  431b29:	call   0x40215c
  431b2e:	nop
  431b2f:	mov    rcx,QWORD PTR [rsp+0x70]
  431b34:	call   0x40215c
  431b39:	nop
  431b3a:	mov    rcx,QWORD PTR [rsp+0xa0]
  431b42:	call   0x40215c
  431b47:	nop
  431b48:	mov    rcx,QWORD PTR [rsp+0x80]
  431b50:	mov    rax,QWORD PTR [rcx]
  431b53:	call   QWORD PTR [rax+0x10]
  431b56:	nop
  431b57:	cmp    r14,r13
  431b5a:	je     0x431b66
  431b5c:	mov    rax,QWORD PTR [r14]
  431b5f:	mov    rcx,r14
  431b62:	call   QWORD PTR [rax+0x10]
  431b65:	nop
  431b66:	mov    rcx,rsi
  431b69:	call   0x40215c
  431b6e:	nop
  431b6f:	mov    rcx,rdi
  431b72:	call   0x40215c
  431b77:	nop
  431b78:	mov    rcx,QWORD PTR [rsp+0xb8]
  431b80:	call   0x40215c
  431b85:	nop
  431b86:	mov    rcx,QWORD PTR [rsp+0x60]
  431b8b:	call   0x40215c
  431b90:	nop
  431b91:	jmp    0x4312f4
  431b96:	mov    rcx,QWORD PTR [rsp+0x1e8]
  431b9e:	call   0x40215c
  431ba3:	mov    rcx,QWORD PTR [rsp+0x1d8]
  431bab:	call   0x40215c
  431bb0:	mov    rcx,QWORD PTR [rsp+0x1c0]
  431bb8:	call   0x40215c
  431bbd:	mov    rcx,QWORD PTR [rsp+0x1b0]
  431bc5:	call   0x40215c
  431bca:	nop
  431bcb:	mov    rcx,QWORD PTR [rsp+0xb0]
  431bd3:	cmp    rcx,r13
  431bd6:	je     0x431bdf
  431bd8:	mov    rax,QWORD PTR [rcx]
  431bdb:	call   QWORD PTR [rax+0x10]
  431bde:	nop
  431bdf:	cmp    rbx,r13
  431be2:	je     0x431bee
  431be4:	mov    rax,QWORD PTR [rbx]
  431be7:	mov    rcx,rbx
  431bea:	call   QWORD PTR [rax+0x10]
  431bed:	nop
  431bee:	mov    rcx,QWORD PTR [rsp+0x40]
  431bf3:	mov    rax,QWORD PTR [rcx]
  431bf6:	call   QWORD PTR [rax+0x10]
  431bf9:	nop
  431bfa:	mov    rcx,r12
  431bfd:	call   0x40215c
  431c02:	nop
  431c03:	mov    rcx,QWORD PTR [rsp+0x48]
  431c08:	call   0x40215c
  431c0d:	nop
  431c0e:	mov    rcx,rbp
  431c11:	call   0x40215c
  431c16:	nop
  431c17:	mov    rcx,QWORD PTR [rsp+0x70]
  431c1c:	call   0x40215c
  431c21:	nop
  431c22:	mov    rcx,QWORD PTR [rsp+0xa0]
  431c2a:	call   0x40215c
  431c2f:	nop
  431c30:	mov    rcx,QWORD PTR [rsp+0x80]
  431c38:	mov    rax,QWORD PTR [rcx]
  431c3b:	call   QWORD PTR [rax+0x10]
  431c3e:	nop
  431c3f:	cmp    r14,r13
  431c42:	je     0x431c4e
  431c44:	mov    rax,QWORD PTR [r14]
  431c47:	mov    rcx,r14
  431c4a:	call   QWORD PTR [rax+0x10]
  431c4d:	nop
  431c4e:	mov    rcx,rsi
  431c51:	call   0x40215c
  431c56:	nop
  431c57:	mov    rcx,rdi
  431c5a:	call   0x40215c
  431c5f:	nop
  431c60:	mov    rcx,QWORD PTR [rsp+0xb8]
  431c68:	call   0x40215c
  431c6d:	nop
  431c6e:	mov    rcx,QWORD PTR [rsp+0x60]
  431c73:	call   0x40215c
  431c78:	nop
  431c79:	mov    rcx,QWORD PTR [rsp+0x190]
  431c81:	call   0x40215c
  431c86:	mov    eax,0x80004005
  431c8b:	add    rsp,0x3f8
  431c92:	pop    r15
  431c94:	pop    r14
  431c96:	pop    r13
  431c98:	pop    r12
  431c9a:	pop    rdi
  431c9b:	pop    rsi
  431c9c:	pop    rbp
  431c9d:	pop    rbx
  431c9e:	ret    
  431c9f:	int3   
  431ca0:	int3   
  431ca1:	int3   
  431ca2:	int3   
  431ca3:	int3   
  431ca4:	int3   
  431ca5:	int3   
  431ca6:	int3   
  431ca7:	int3   
  431ca8:	int3   
  431ca9:	int3   
  431caa:	int3   
  431cab:	int3   
  431cac:	rex.W push rbp
  431cae:	sub    rsp,0x20
  431cb2:	mov    rbp,rdx
  431cb5:	lea    rcx,[rbp+0x190]
  431cbc:	call   0x401000
  431cc1:	add    rsp,0x20
  431cc5:	pop    rbp
  431cc6:	ret    
  431cc7:	int3   
  431cc8:	int3   
  431cc9:	int3   
  431cca:	int3   
  431ccb:	int3   
  431ccc:	rex.W push rbp
  431cce:	sub    rsp,0x20
  431cd2:	mov    rbp,rdx
  431cd5:	lea    rcx,[rbp+0x60]
  431cd9:	call   0x401000
  431cde:	add    rsp,0x20
  431ce2:	pop    rbp
  431ce3:	ret    
  431ce4:	int3   
  431ce5:	int3   
  431ce6:	int3   
  431ce7:	int3   
  431ce8:	int3   
  431ce9:	int3   
  431cea:	int3   
  431ceb:	int3   
  431cec:	rex.W push rbp
  431cee:	sub    rsp,0x20
  431cf2:	mov    rbp,rdx
  431cf5:	lea    rcx,[rbp+0xb8]
  431cfc:	call   0x401000
  431d01:	add    rsp,0x20
  431d05:	pop    rbp
  431d06:	ret    
  431d07:	int3   
  431d08:	int3   
  431d09:	int3   
  431d0a:	int3   
  431d0b:	int3   
  431d0c:	rex.W push rbp
  431d0e:	sub    rsp,0x20
  431d12:	mov    rbp,rdx
  431d15:	lea    rcx,[rbp+0x158]
  431d1c:	call   0x401000
  431d21:	add    rsp,0x20
  431d25:	pop    rbp
  431d26:	ret    
  431d27:	int3   
  431d28:	int3   
  431d29:	int3   
  431d2a:	int3   
  431d2b:	int3   
  431d2c:	rex.W push rbp
  431d2e:	sub    rsp,0x20
  431d32:	mov    rbp,rdx
  431d35:	lea    rcx,[rbp+0x70]
  431d39:	call   0x401000
  431d3e:	add    rsp,0x20
  431d42:	pop    rbp
  431d43:	ret    
  431d44:	int3   
  431d45:	int3   
  431d46:	int3   
  431d47:	int3   
  431d48:	int3   
  431d49:	int3   
  431d4a:	int3   
  431d4b:	int3   
  431d4c:	rex.W push rbp
  431d4e:	sub    rsp,0x20
  431d52:	mov    rbp,rdx
  431d55:	lea    rcx,[rbp+0x48]
  431d59:	call   0x401000
  431d5e:	add    rsp,0x20
  431d62:	pop    rbp
  431d63:	ret    
  431d64:	int3   
  431d65:	int3   
  431d66:	int3   
  431d67:	int3   
  431d68:	int3   
  431d69:	int3   
  431d6a:	int3   
  431d6b:	int3   
  431d6c:	rex.W push rbp
  431d6e:	sub    rsp,0x20
  431d72:	mov    rbp,rdx
  431d75:	lea    rcx,[rbp+0x160]
  431d7c:	call   0x401000
  431d81:	add    rsp,0x20
  431d85:	pop    rbp
  431d86:	ret    
  431d87:	int3   
  431d88:	int3   
  431d89:	int3   
  431d8a:	int3   
  431d8b:	int3   
  431d8c:	rex.W push rbp
  431d8e:	sub    rsp,0x20
  431d92:	mov    rbp,rdx
  431d95:	lea    rcx,[rbp+0xd0]
  431d9c:	call   0x4176b4
  431da1:	add    rsp,0x20
  431da5:	pop    rbp
  431da6:	ret    
  431da7:	int3   
  431da8:	int3   
  431da9:	int3   
  431daa:	int3   
  431dab:	int3   
  431dac:	rex.W push rbp
  431dae:	sub    rsp,0x20
  431db2:	mov    rbp,rdx
  431db5:	lea    rcx,[rbp+0x168]
  431dbc:	call   0x4176b4
  431dc1:	add    rsp,0x20
  431dc5:	pop    rbp
  431dc6:	ret    
  431dc7:	int3   
  431dc8:	int3   
  431dc9:	int3   
  431dca:	int3   
  431dcb:	int3   
  431dcc:	rex.W push rbp
  431dce:	sub    rsp,0x20
  431dd2:	mov    rbp,rdx
  431dd5:	lea    rcx,[rbp+0x2c8]
  431ddc:	call   0x4176b4
  431de1:	add    rsp,0x20
  431de5:	pop    rbp
  431de6:	ret    
  431de7:	int3   
  431de8:	int3   
  431de9:	int3   
  431dea:	int3   
  431deb:	int3   
  431dec:	rex.W push rbp
  431dee:	sub    rsp,0x20
  431df2:	mov    rbp,rdx
  431df5:	lea    rcx,[rbp+0x2d0]
  431dfc:	call   0x4176b4
  431e01:	add    rsp,0x20
  431e05:	pop    rbp
  431e06:	ret    
  431e07:	int3   
  431e08:	int3   
  431e09:	int3   
  431e0a:	int3   
  431e0b:	int3   
  431e0c:	rex.W push rbp
  431e0e:	sub    rsp,0x20
  431e12:	mov    rbp,rdx
  431e15:	lea    rcx,[rbp+0x70]
  431e19:	call   0x401000
  431e1e:	add    rsp,0x20
  431e22:	pop    rbp
  431e23:	ret    
  431e24:	int3   
  431e25:	int3   
  431e26:	int3   
  431e27:	int3   
  431e28:	int3   
  431e29:	int3   
  431e2a:	int3   
  431e2b:	int3   
  431e2c:	rex.W push rbp
  431e2e:	sub    rsp,0x20
  431e32:	mov    rbp,rdx
  431e35:	lea    rcx,[rbp+0x48]
  431e39:	call   0x401000
  431e3e:	add    rsp,0x20
  431e42:	pop    rbp
  431e43:	ret    
  431e44:	int3   
  431e45:	int3   
  431e46:	int3   
  431e47:	int3   
  431e48:	int3   
  431e49:	int3   
  431e4a:	int3   
  431e4b:	int3   
  431e4c:	rex.W push rbp
  431e4e:	sub    rsp,0x20
  431e52:	mov    rbp,rdx
  431e55:	lea    rcx,[rbp+0xf0]
  431e5c:	call   0x4176b4
  431e61:	add    rsp,0x20
  431e65:	pop    rbp
  431e66:	ret    
  431e67:	int3   
  431e68:	int3   
  431e69:	int3   
  431e6a:	int3   
  431e6b:	int3   
  431e6c:	rex.W push rbp
  431e6e:	sub    rsp,0x20
  431e72:	mov    rbp,rdx
  431e75:	lea    rcx,[rbp+0x240]
  431e7c:	call   0x4296fc
  431e81:	add    rsp,0x20
  431e85:	pop    rbp
  431e86:	ret    
  431e87:	int3   
  431e88:	int3   
  431e89:	int3   
  431e8a:	int3   
  431e8b:	int3   
  431e8c:	rex.W push rbp
  431e8e:	sub    rsp,0x20
  431e92:	mov    rbp,rdx
  431e95:	lea    rcx,[rbp+0xa0]
  431e9c:	call   0x401000
  431ea1:	add    rsp,0x20
  431ea5:	pop    rbp
  431ea6:	ret    
  431ea7:	int3   
  431ea8:	int3   
  431ea9:	int3   
  431eaa:	int3   
  431eab:	int3   
  431eac:	rex.W push rbp
  431eae:	sub    rsp,0x20
  431eb2:	mov    rbp,rdx
  431eb5:	lea    rcx,[rbp+0x70]
  431eb9:	call   0x401000
  431ebe:	add    rsp,0x20
  431ec2:	pop    rbp
  431ec3:	ret    
  431ec4:	int3   
  431ec5:	int3   
  431ec6:	int3   
  431ec7:	int3   
  431ec8:	int3   
  431ec9:	int3   
  431eca:	int3   
  431ecb:	int3   
  431ecc:	rex.W push rbp
  431ece:	sub    rsp,0x20
  431ed2:	mov    rbp,rdx
  431ed5:	lea    rcx,[rbp+0x2c0]
  431edc:	call   0x401000
  431ee1:	add    rsp,0x20
  431ee5:	pop    rbp
  431ee6:	ret    
  431ee7:	int3   
  431ee8:	int3   
  431ee9:	int3   
  431eea:	int3   
  431eeb:	int3   
  431eec:	rex.W push rbp
  431eee:	sub    rsp,0x20
  431ef2:	mov    rbp,rdx
  431ef5:	lea    rcx,[rbp+0x48]
  431ef9:	call   0x401000
  431efe:	add    rsp,0x20
  431f02:	pop    rbp
  431f03:	ret    
  431f04:	int3   
  431f05:	int3   
  431f06:	int3   
  431f07:	int3   
  431f08:	int3   
  431f09:	int3   
  431f0a:	int3   
  431f0b:	int3   
  431f0c:	rex.W push rbp
  431f0e:	sub    rsp,0x20
  431f12:	mov    rbp,rdx
  431f15:	lea    rcx,[rbp+0x2e8]
  431f1c:	call   0x401000
  431f21:	add    rsp,0x20
  431f25:	pop    rbp
  431f26:	ret    
  431f27:	int3   
  431f28:	int3   
  431f29:	int3   
  431f2a:	int3   
  431f2b:	int3   
  431f2c:	rex.W push rbp
  431f2e:	sub    rsp,0x20
  431f32:	mov    rbp,rdx
  431f35:	lea    rcx,[rbp+0x2d8]
  431f3c:	call   0x4176b4
  431f41:	add    rsp,0x20
  431f45:	pop    rbp
  431f46:	ret    
  431f47:	int3   
  431f48:	int3   
  431f49:	int3   
  431f4a:	int3   
  431f4b:	int3   
  431f4c:	rex.W push rbp
  431f4e:	sub    rsp,0x20
  431f52:	mov    rbp,rdx
  431f55:	lea    rcx,[rbp+0x238]
  431f5c:	call   0x4176b4
  431f61:	add    rsp,0x20
  431f65:	pop    rbp
  431f66:	ret    
  431f67:	int3   
  431f68:	int3   
  431f69:	int3   
  431f6a:	int3   
  431f6b:	int3   
  431f6c:	rex.W push rbp
  431f6e:	sub    rsp,0x20
  431f72:	mov    rbp,rdx
  431f75:	lea    rcx,[rbp+0xb0]
  431f7c:	call   0x4176b4
  431f81:	add    rsp,0x20
  431f85:	pop    rbp
  431f86:	ret    
  431f87:	int3   
  431f88:	int3   
  431f89:	int3   
  431f8a:	int3   
  431f8b:	int3   
  431f8c:	rex.W push rbp
  431f8e:	sub    rsp,0x20
  431f92:	mov    rbp,rdx
  431f95:	lea    rcx,[rbp+0x1a0]
  431f9c:	call   0x4296fc
  431fa1:	add    rsp,0x20
  431fa5:	pop    rbp
  431fa6:	ret    
  431fa7:	int3   
  431fa8:	rex.W push rbx
  431faa:	push   rbp
  431fab:	push   rsi
  431fac:	push   rdi
  431fad:	push   r12
  431faf:	sub    rsp,0x80
  431fb6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  431fbf:	mov    rbp,rdx
  431fc2:	mov    rbx,rcx
  431fc5:	call   0x42d69c
  431fca:	xor    r12d,r12d
  431fcd:	cmp    eax,r12d
  431fd0:	jne    0x432211
  431fd6:	cmp    QWORD PTR [rbx],r12
  431fd9:	je     0x43220f
  431fdf:	mov    rcx,QWORD PTR [rbx+0x10]
  431fe3:	cmp    rcx,r12
  431fe6:	je     0x431ff2
  431fe8:	mov    rax,QWORD PTR [rcx]
  431feb:	call   QWORD PTR [rax+0x10]
  431fee:	mov    QWORD PTR [rbx+0x10],r12
  431ff2:	mov    rcx,QWORD PTR [rbx+0x18]
  431ff6:	cmp    rcx,r12
  431ff9:	je     0x432005
  431ffb:	mov    rax,QWORD PTR [rcx]
  431ffe:	call   QWORD PTR [rax+0x10]
  432001:	mov    QWORD PTR [rbx+0x18],r12
  432005:	mov    rcx,QWORD PTR [rbx]
  432008:	mov    rax,QWORD PTR [rcx]
  43200b:	lea    r8,[rbx+0x10]
  43200f:	lea    rdx,[rip+0x21e32]        # 0x453e48
  432016:	call   QWORD PTR [rax]
  432018:	mov    rcx,QWORD PTR [rbx]
  43201b:	mov    rax,QWORD PTR [rcx]
  43201e:	lea    r8,[rbx+0x18]
  432022:	lea    rdx,[rip+0x21e0f]        # 0x453e38
  432029:	call   QWORD PTR [rax]
  43202b:	lea    r8,[rbx+0x109]
  432032:	mov    edx,0x42
  432037:	mov    rcx,QWORD PTR [rbx]
  43203a:	call   0x429834
  43203f:	cmp    eax,r12d
  432042:	jne    0x432211
  432048:	lea    r8,[rbx+0x10b]
  43204f:	mov    edx,0x41
  432054:	mov    rcx,QWORD PTR [rbx]
  432057:	call   0x429834
  43205c:	cmp    eax,r12d
  43205f:	jne    0x432211
  432065:	lea    r8,[rbx+0x10c]
  43206c:	mov    edx,0x3f
  432071:	mov    rcx,QWORD PTR [rbx]
  432074:	call   0x429834
  432079:	cmp    eax,r12d
  43207c:	jne    0x432211
  432082:	lea    r8,[rbx+0x10d]
  432089:	mov    edx,0x40
  43208e:	mov    rcx,QWORD PTR [rbx]
  432091:	call   0x429834
  432096:	cmp    eax,r12d
  432099:	jne    0x432211
  43209f:	lea    r8,[rbx+0x10e]
  4320a6:	mov    edx,0x5b
  4320ab:	mov    rcx,QWORD PTR [rbx]
  4320ae:	call   0x429834
  4320b3:	cmp    eax,r12d
  4320b6:	jne    0x432211
  4320bc:	lea    r8,[rbx+0x10a]
  4320c3:	mov    edx,0x5d
  4320c8:	mov    rcx,QWORD PTR [rbx]
  4320cb:	call   0x429834
  4320d0:	cmp    eax,r12d
  4320d3:	jne    0x432211
  4320d9:	lea    rdx,[rbx+0x90]
  4320e0:	lea    rcx,[rsp+0x28]
  4320e5:	call   0x4044c0
  4320ea:	nop
  4320eb:	lea    rcx,[rsp+0x38]
  4320f0:	call   0x403150
  4320f5:	nop
  4320f6:	mov    dx,0x2e
  4320fa:	lea    rcx,[rsp+0x28]
  4320ff:	call   0x4035f4
  432104:	cmp    eax,r12d
  432107:	jl     0x43211f
  432109:	lea    ecx,[rax+0x1]
  43210c:	mov    rax,QWORD PTR [rsp+0x28]
  432111:	lea    rdx,[rax+rcx*2]
  432115:	lea    rcx,[rsp+0x38]
  43211a:	call   0x403290
  43211f:	lea    rdi,[rbx+0xb0]
  432126:	mov    DWORD PTR [rdi+0x8],r12d
  43212a:	mov    rax,QWORD PTR [rdi]
  43212d:	mov    WORD PTR [rax],r12w
  432131:	mov    eax,DWORD PTR [rbx+0xc0]
  432137:	cmp    eax,r12d
  43213a:	jl     0x4321fa
  432140:	mov    rdx,rax
  432143:	mov    rax,QWORD PTR [rbp+0x0]
  432147:	mov    rcx,QWORD PTR [rax+0x40]
  43214b:	mov    rbx,QWORD PTR [rcx+rdx*8]
  43214f:	cmp    DWORD PTR [rbx+0x30],r12d
  432153:	jne    0x4321b1
  432155:	lea    rcx,[rsp+0x68]
  43215a:	call   0x403150
  43215f:	mov    rbx,rax
  432162:	lea    rcx,[rsp+0x58]
  432167:	call   0x403150
  43216c:	nop
  43216d:	mov    r9,rbx
  432170:	mov    r8,rax
  432173:	lea    rdx,[rsp+0x28]
  432178:	lea    rcx,[rsp+0x48]
  43217d:	call   0x41f5f4
  432182:	nop
  432183:	mov    rdx,rax
  432186:	mov    rcx,rdi
  432189:	call   0x4032f8
  43218e:	nop
  43218f:	mov    rcx,QWORD PTR [rsp+0x48]
  432194:	call   0x40215c
  432199:	nop
  43219a:	mov    rcx,QWORD PTR [rsp+0x58]
  43219f:	call   0x40215c
  4321a4:	nop
  4321a5:	mov    rcx,QWORD PTR [rsp+0x68]
  4321aa:	call   0x40215c
  4321af:	jmp    0x4321fa
  4321b1:	lea    rdx,[rsp+0x38]
  4321b6:	mov    rcx,rbx
  4321b9:	call   0x42771c
  4321be:	cmp    eax,r12d
  4321c1:	cmovl  eax,r12d
  4321c5:	mov    ecx,eax
  4321c7:	mov    rax,QWORD PTR [rbx+0x28]
  4321cb:	mov    r8,QWORD PTR [rax+rcx*8]
  4321cf:	lea    r9,[r8+0x10]
  4321d3:	lea    rdx,[rsp+0x28]
  4321d8:	lea    rcx,[rsp+0x68]
  4321dd:	call   0x41f5f4
  4321e2:	nop
  4321e3:	mov    rdx,rax
  4321e6:	mov    rcx,rdi
  4321e9:	call   0x4032f8
  4321ee:	nop
  4321ef:	mov    rcx,QWORD PTR [rsp+0x68]
  4321f4:	call   0x40215c
  4321f9:	nop
  4321fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4321ff:	call   0x40215c
  432204:	nop
  432205:	mov    rcx,QWORD PTR [rsp+0x28]
  43220a:	call   0x40215c
  43220f:	xor    eax,eax
  432211:	add    rsp,0x80
  432218:	pop    r12
  43221a:	pop    rdi
  43221b:	pop    rsi
  43221c:	pop    rbp
  43221d:	pop    rbx
  43221e:	ret    
  43221f:	int3   
  432220:	int3   
  432221:	int3   
  432222:	int3   
  432223:	int3   
  432224:	int3   
  432225:	int3   
  432226:	int3   
  432227:	int3   
  432228:	rex.W push rbp
  43222a:	sub    rsp,0x20
  43222e:	mov    rbp,rdx
  432231:	lea    rcx,[rbp+0x28]
  432235:	call   0x401000
  43223a:	add    rsp,0x20
  43223e:	pop    rbp
  43223f:	ret    
  432240:	int3   
  432241:	int3   
  432242:	int3   
  432243:	int3   
  432244:	int3   
  432245:	int3   
  432246:	int3   
  432247:	int3   
  432248:	rex.W push rbp
  43224a:	sub    rsp,0x20
  43224e:	mov    rbp,rdx
  432251:	lea    rcx,[rbp+0x38]
  432255:	call   0x401000
  43225a:	add    rsp,0x20
  43225e:	pop    rbp
  43225f:	ret    
  432260:	int3   
  432261:	int3   
  432262:	int3   
  432263:	int3   
  432264:	int3   
  432265:	int3   
  432266:	int3   
  432267:	int3   
  432268:	rex.W push rbp
  43226a:	sub    rsp,0x20
  43226e:	mov    rbp,rdx
  432271:	lea    rcx,[rbp+0x68]
  432275:	call   0x401000
  43227a:	add    rsp,0x20
  43227e:	pop    rbp
  43227f:	ret    
  432280:	int3   
  432281:	int3   
  432282:	int3   
  432283:	int3   
  432284:	int3   
  432285:	int3   
  432286:	int3   
  432287:	int3   
  432288:	rex.W push rbp
  43228a:	sub    rsp,0x20
  43228e:	mov    rbp,rdx
  432291:	lea    rcx,[rbp+0x58]
  432295:	call   0x401000
  43229a:	add    rsp,0x20
  43229e:	pop    rbp
  43229f:	ret    
  4322a0:	int3   
  4322a1:	int3   
  4322a2:	int3   
  4322a3:	int3   
  4322a4:	int3   
  4322a5:	int3   
  4322a6:	int3   
  4322a7:	int3   
  4322a8:	rex.W push rbp
  4322aa:	sub    rsp,0x20
  4322ae:	mov    rbp,rdx
  4322b1:	lea    rcx,[rbp+0x48]
  4322b5:	call   0x401000
  4322ba:	add    rsp,0x20
  4322be:	pop    rbp
  4322bf:	ret    
  4322c0:	int3   
  4322c1:	int3   
  4322c2:	int3   
  4322c3:	int3   
  4322c4:	int3   
  4322c5:	int3   
  4322c6:	int3   
  4322c7:	int3   
  4322c8:	rex.W push rbp
  4322ca:	sub    rsp,0x20
  4322ce:	mov    rbp,rdx
  4322d1:	lea    rcx,[rbp+0x68]
  4322d5:	call   0x401000
  4322da:	add    rsp,0x20
  4322de:	pop    rbp
  4322df:	ret    
  4322e0:	rex.W push rbx
  4322e2:	push   rbp
  4322e3:	push   rsi
  4322e4:	push   rdi
  4322e5:	push   r12
  4322e7:	sub    rsp,0x30
  4322eb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4322f4:	mov    rbp,rdx
  4322f7:	mov    r12,rcx
  4322fa:	xor    ebx,ebx
  4322fc:	mov    QWORD PTR [rsp+0x70],rbx
  432301:	xor    edi,edi
  432303:	mov    QWORD PTR [rsp+0x68],rdi
  432308:	cmp    BYTE PTR [rdx+0x60],dil
  43230c:	je     0x43234b
  43230e:	lea    ecx,[rbx+0x10]
  432311:	call   0x402130
  432316:	mov    rdi,rax
  432319:	test   rax,rax
  43231c:	je     0x43232d
  43231e:	mov    DWORD PTR [rax+0x8],ebx
  432321:	lea    rax,[rip+0x1d9f8]        # 0x44fd20
  432328:	mov    QWORD PTR [rdi],rax
  43232b:	jmp    0x43232f
  43232d:	xor    edi,edi
  43232f:	test   rdi,rdi
  432332:	je     0x43233d
  432334:	mov    rax,QWORD PTR [rdi]
  432337:	mov    rcx,rdi
  43233a:	call   QWORD PTR [rax+0x8]
  43233d:	mov    QWORD PTR [rsp+0x68],rdi
  432342:	mov    QWORD PTR [rbp+0x40],rdi
  432346:	jmp    0x4323d0
  43234b:	cmp    QWORD PTR [rdx+0x38],0x0
  432350:	jne    0x4323d0
  432352:	mov    ecx,0x78
  432357:	call   0x402130
  43235c:	mov    QWORD PTR [rsp+0x78],rax
  432361:	test   rax,rax
  432364:	je     0x432373
  432366:	mov    rcx,rax
  432369:	call   0x40d02c
  43236e:	mov    rbx,rax
  432371:	jmp    0x432375
  432373:	xor    ebx,ebx
  432375:	test   rbx,rbx
  432378:	je     0x432383
  43237a:	mov    rax,QWORD PTR [rbx]
  43237d:	mov    rcx,rbx
  432380:	call   QWORD PTR [rax+0x8]
  432383:	mov    QWORD PTR [rsp+0x70],rbx
  432388:	lea    rdx,[r12+0xa0]
  432390:	lea    rcx,[r12+0x90]
  432398:	call   0x4032f8
  43239d:	lea    rcx,[rbx+0x28]
  4323a1:	mov    rdx,QWORD PTR [r12+0x90]
  4323a9:	call   0x40946c
  4323ae:	test   al,al
  4323b0:	jne    0x4323cc
  4323b2:	call   QWORD PTR [rip+0x1ade8]        # 0x44d1a0
  4323b8:	mov    edi,eax
  4323ba:	test   rbx,rbx
  4323bd:	je     0x4323c8
  4323bf:	mov    rdx,QWORD PTR [rbx]
  4323c2:	mov    rcx,rbx
  4323c5:	call   QWORD PTR [rdx+0x10]
  4323c8:	mov    eax,edi
  4323ca:	jmp    0x432405
  4323cc:	mov    QWORD PTR [rbp+0x38],rbx
  4323d0:	mov    rdx,rbp
  4323d3:	mov    rcx,r12
  4323d6:	call   0x431fa8
  4323db:	mov    esi,eax
  4323dd:	mov    BYTE PTR [r12+0x10f],0x0
  4323e6:	test   rdi,rdi
  4323e9:	je     0x4323f5
  4323eb:	mov    rdx,QWORD PTR [rdi]
  4323ee:	mov    rcx,rdi
  4323f1:	call   QWORD PTR [rdx+0x10]
  4323f4:	nop
  4323f5:	test   rbx,rbx
  4323f8:	je     0x432403
  4323fa:	mov    rax,QWORD PTR [rbx]
  4323fd:	mov    rcx,rbx
  432400:	call   QWORD PTR [rax+0x10]
  432403:	mov    eax,esi
  432405:	add    rsp,0x30
  432409:	pop    r12
  43240b:	pop    rdi
  43240c:	pop    rsi
  43240d:	pop    rbp
  43240e:	pop    rbx
  43240f:	ret    
  432410:	rex.W push rbp
  432412:	sub    rsp,0x20
  432416:	mov    rbp,rdx
  432419:	lea    rcx,[rbp+0x70]
  43241d:	call   0x4176b4
  432422:	add    rsp,0x20
  432426:	pop    rbp
  432427:	ret    
  432428:	int3   
  432429:	int3   
  43242a:	int3   
  43242b:	int3   
  43242c:	int3   
  43242d:	int3   
  43242e:	int3   
  43242f:	int3   
  432430:	rex.W push rbp
  432432:	sub    rsp,0x20
  432436:	mov    rbp,rdx
  432439:	lea    rcx,[rbp+0x68]
  43243d:	call   0x4176b4
  432442:	add    rsp,0x20
  432446:	pop    rbp
  432447:	ret    
  432448:	int3   
  432449:	int3   
  43244a:	int3   
  43244b:	int3   
  43244c:	int3   
  43244d:	int3   
  43244e:	int3   
  43244f:	int3   
  432450:	rex.W push rbp
  432452:	sub    rsp,0x20
  432456:	mov    rbp,rdx
  432459:	mov    rcx,QWORD PTR [rbp+0x78]
  43245d:	call   0x40215c
  432462:	add    rsp,0x20
  432466:	pop    rbp
  432467:	ret    
  432468:	rex.W push rbx
  43246a:	push   rsi
  43246b:	push   rdi
  43246c:	sub    rsp,0x20
  432470:	xor    esi,esi
  432472:	mov    rbx,rcx
  432475:	mov    BYTE PTR [rcx+0x40],sil
  432479:	mov    BYTE PTR [rcx+0x41],sil
  43247d:	mov    BYTE PTR [rcx+0x42],sil
  432481:	mov    BYTE PTR [rcx+0x43],sil
  432485:	mov    DWORD PTR [rcx+0x44],esi
  432488:	mov    DWORD PTR [rcx+0x48],esi
  43248b:	mov    QWORD PTR [rcx+0x50],rsi
  43248f:	mov    rax,QWORD PTR [rcx+0x58]
  432493:	mov    DWORD PTR [rcx+0x60],esi
  432496:	mov    WORD PTR [rax],si
  432499:	mov    rax,QWORD PTR [rcx+0x68]
  43249d:	mov    DWORD PTR [rcx+0x70],esi
  4324a0:	mov    WORD PTR [rax],si
  4324a3:	mov    rax,QWORD PTR [rcx+0x30]
  4324a7:	mov    DWORD PTR [rcx+0x38],esi
  4324aa:	mov    WORD PTR [rax],si
  4324ad:	cmp    DWORD PTR [rcx+0x8],esi
  4324b0:	je     0x4324dc
  4324b2:	mov    ecx,DWORD PTR [rbx+0x8]
  4324b5:	mov    rax,QWORD PTR [rbx]
  4324b8:	dec    ecx
  4324ba:	mov    rdi,QWORD PTR [rax+rcx*8]
  4324be:	cmp    rdi,rsi
  4324c1:	je     0x4324d3
  4324c3:	mov    rcx,rdi
  4324c6:	call   0x422a58
  4324cb:	mov    rcx,rdi
  4324ce:	call   0x40215c
  4324d3:	add    DWORD PTR [rbx+0x8],0xffffffff
  4324d7:	cmp    DWORD PTR [rbx+0x8],esi
  4324da:	jne    0x4324b2
  4324dc:	add    rsp,0x20
  4324e0:	pop    rdi
  4324e1:	pop    rsi
  4324e2:	pop    rbx
  4324e3:	ret    
  4324e4:	rex.W push rbx
  4324e6:	push   rbp
  4324e7:	push   rsi
  4324e8:	push   rdi
  4324e9:	push   r12
  4324eb:	push   r13
  4324ed:	push   r14
  4324ef:	push   r15
  4324f1:	sub    rsp,0x348
  4324f8:	mov    QWORD PTR [rsp+0xf0],0xfffffffffffffffe
  432504:	mov    rsi,rdx
  432507:	mov    rdi,rcx
  43250a:	call   0x432468
  43250f:	mov    rax,QWORD PTR [rsi+0x28]
  432513:	mov    r12d,0x20
  432519:	cmp    DWORD PTR [rax+0x8],r12d
  43251d:	jb     0x432529
  43251f:	mov    eax,0x80004001
  432524:	jmp    0x432d88
  432529:	xor    ebp,ebp
  43252b:	mov    r14d,0x80004001
  432531:	mov    r13d,ebp
  432534:	mov    DWORD PTR [rsp+0x30],0xffffffff
  43253c:	mov    BYTE PTR [rsp+0x38],bpl
  432541:	mov    BYTE PTR [rsp+0x39],bpl
  432546:	mov    BYTE PTR [rsp+0x3a],bpl
  43254b:	mov    BYTE PTR [rsp+0x3b],bpl
  432550:	mov    BYTE PTR [rsp+0x3c],bpl
  432555:	mov    BYTE PTR [rsp+0x40],0x1
  43255a:	mov    BYTE PTR [rsp+0x41],0x1
  43255f:	mov    BYTE PTR [rsp+0x42],bpl
  432564:	mov    BYTE PTR [rsp+0x43],bpl
  432569:	mov    BYTE PTR [rsp+0x44],bpl
  43256e:	mov    BYTE PTR [rsp+0x45],bpl
  432573:	mov    QWORD PTR [rsp+0x48],rbp
  432578:	mov    BYTE PTR [rsp+0x34],0x1
  43257d:	mov    BYTE PTR [rsp+0x35],0x1
  432582:	mov    BYTE PTR [rsp+0x36],0x1
  432587:	mov    BYTE PTR [rsp+0x37],0x1
  43258c:	mov    BYTE PTR [rsp+0x3e],0x1
  432591:	mov    BYTE PTR [rsp+0x3f],0x1
  432596:	mov    BYTE PTR [rsp+0x3d],0x1
  43259b:	lea    rcx,[rsi+0x8]
  43259f:	lea    rdx,[rsp+0x30]
  4325a4:	mov    r8,r12
  4325a7:	call   0x44b480
  4325ac:	mov    rbx,QWORD PTR [rsi+0x28]
  4325b0:	mov    eax,DWORD PTR [rbx+0x8]
  4325b3:	cmp    eax,0x1
  4325b6:	jb     0x432616
  4325b8:	cmp    DWORD PTR [rdi+0x8],eax
  4325bb:	jae    0x4325dc
  4325bd:	sub    eax,DWORD PTR [rdi+0x8]
  4325c0:	lea    ecx,[rax-0x1]
  4325c3:	mov    rax,QWORD PTR [rbx]
  4325c6:	mov    rdx,QWORD PTR [rax+rcx*8]
  4325ca:	lea    rcx,[rsp+0xf8]
  4325d2:	mov    r8,r12
  4325d5:	call   0x44b480
  4325da:	jmp    0x432600
  4325dc:	mov    rax,QWORD PTR [rbx]
  4325df:	lea    rcx,[rsp+0xf8]
  4325e7:	mov    rdx,QWORD PTR [rax]
  4325ea:	mov    r8,r12
  4325ed:	call   0x44b480
  4325f2:	cmp    BYTE PTR [rsp+0x108],bpl
  4325fa:	je     0x432d7c
  432600:	lea    rcx,[rsi+0x8]
  432604:	lea    rdx,[rsp+0xf8]
  43260c:	mov    r8,r12
  43260f:	call   0x44b480
  432614:	jmp    0x432620
  432616:	cmp    DWORD PTR [rdi+0x8],r12d
  43261a:	jae    0x432d7c
  432620:	mov    edx,DWORD PTR [rdi+0x8]
  432623:	cmp    edx,ebp
  432625:	jne    0x4326c7
  43262b:	lea    rcx,[rsp+0x230]
  432633:	call   0x42a630
  432638:	nop
  432639:	lea    rdx,[rsi+0x68]
  43263d:	lea    rcx,[rsp+0x2d0]
  432645:	call   0x4032f8
  43264a:	lea    rdx,[rsi+0x68]
  43264e:	lea    rcx,[rsp+0x2c0]
  432656:	call   0x4032f8
  43265b:	mov    DWORD PTR [rsp+0x2f4],0xffffffff
  432666:	mov    rdx,rsi
  432669:	lea    rcx,[rsp+0x230]
  432671:	call   0x4322e0
  432676:	mov    ebx,eax
  432678:	cmp    eax,ebp
  43267a:	jne    0x432a07
  432680:	mov    ecx,0x110
  432685:	call   0x402130
  43268a:	mov    QWORD PTR [rsp+0x50],rax
  43268f:	cmp    rax,rbp
  432692:	je     0x4326a6
  432694:	lea    rdx,[rsp+0x230]
  43269c:	mov    rcx,rax
  43269f:	call   0x42af60
  4326a4:	jmp    0x4326a9
  4326a6:	mov    rax,rbp
  4326a9:	mov    rdx,rax
  4326ac:	mov    rcx,rdi
  4326af:	call   0x4010c8
  4326b4:	nop
  4326b5:	lea    rcx,[rsp+0x230]
  4326bd:	call   0x422a58
  4326c2:	jmp    0x432531
  4326c7:	lea    ecx,[rdx-0x1]
  4326ca:	mov    rax,QWORD PTR [rdi]
  4326cd:	mov    r12,QWORD PTR [rax+rcx*8]
  4326d1:	cmp    DWORD PTR [rbx+0x8],edx
  4326d4:	cmova  r13d,r14d
  4326d8:	mov    WORD PTR [rsp+0x30],bp
  4326dd:	mov    WORD PTR [rsp+0x32],bp
  4326e2:	mov    QWORD PTR [rsp+0x38],rbp
  4326e7:	mov    rcx,QWORD PTR [r12]
  4326eb:	mov    rax,QWORD PTR [rcx]
  4326ee:	lea    r8,[rsp+0x30]
  4326f3:	mov    edx,0x1
  4326f8:	call   QWORD PTR [rax+0x40]
  4326fb:	mov    ebx,eax
  4326fd:	cmp    eax,ebp
  4326ff:	jne    0x432aaa
  432705:	cmp    WORD PTR [rsp+0x30],0x13
  43270b:	jne    0x432d72
  432711:	mov    ebx,DWORD PTR [rsp+0x38]
  432715:	mov    rcx,QWORD PTR [r12]
  432719:	mov    rax,QWORD PTR [rcx]
  43271c:	lea    rdx,[rsp+0x3a0]
  432724:	call   QWORD PTR [rax+0x28]
  432727:	cmp    eax,ebp
  432729:	jne    0x432aac
  43272f:	cmp    ebx,DWORD PTR [rsp+0x3a0]
  432736:	jae    0x432abf
  43273c:	lea    rcx,[rsp+0x30]
  432741:	call   0x40b028
  432746:	mov    QWORD PTR [rsp+0x3a8],rbp
  43274e:	mov    rcx,QWORD PTR [r12]
  432752:	mov    rax,QWORD PTR [rcx]
  432755:	lea    r8,[rsp+0x3a8]
  43275d:	lea    rdx,[rip+0x21714]        # 0x453e78
  432764:	call   QWORD PTR [rax]
  432766:	mov    rcx,QWORD PTR [rsp+0x3a8]
  43276e:	cmp    eax,ebp
  432770:	jne    0x432d65
  432776:	cmp    rcx,rbp
  432779:	je     0x432d65
  43277f:	mov    QWORD PTR [rsp+0x20],rbp
  432784:	mov    rax,QWORD PTR [rcx]
  432787:	lea    r8,[rsp+0x20]
  43278c:	mov    edx,ebx
  43278e:	call   QWORD PTR [rax+0x18]
  432791:	mov    rcx,QWORD PTR [rsp+0x20]
  432796:	cmp    eax,ebp
  432798:	jne    0x432d44
  43279e:	cmp    rcx,rbp
  4327a1:	je     0x432d44
  4327a7:	mov    QWORD PTR [rsp+0x28],rbp
  4327ac:	mov    rax,QWORD PTR [rcx]
  4327af:	lea    r8,[rsp+0x28]
  4327b4:	lea    rdx,[rip+0x2174d]        # 0x453f08
  4327bb:	call   QWORD PTR [rax]
  4327bd:	mov    rcx,QWORD PTR [rsp+0x28]
  4327c2:	cmp    eax,ebp
  4327c4:	jne    0x432d12
  4327ca:	cmp    rcx,rbp
  4327cd:	je     0x432d12
  4327d3:	lea    rcx,[rsp+0x120]
  4327db:	call   0x42a630
  4327e0:	nop
  4327e1:	lea    r8,[rsp+0x1b0]
  4327e9:	mov    edx,ebx
  4327eb:	mov    rcx,r12
  4327ee:	call   0x42c2bc
  4327f3:	mov    ebp,eax
  4327f5:	xor    r13d,r13d
  4327f8:	cmp    eax,r13d
  4327fb:	jne    0x432ace
  432801:	lea    r9,[rsp+0x398]
  432809:	lea    r8d,[r13+0x56]
  43280d:	mov    edx,ebx
  43280f:	mov    rcx,QWORD PTR [r12]
  432813:	call   0x429798
  432818:	mov    ebp,eax
  43281a:	cmp    eax,r13d
  43281d:	jne    0x432b18
  432823:	mov    rcx,QWORD PTR [rsi+0x48]
  432827:	cmp    rcx,r13
  43282a:	je     0x43286a
  43282c:	mov    QWORD PTR [rsp+0x50],r13
  432831:	mov    rax,QWORD PTR [rcx]
  432834:	lea    r8,[rsp+0x50]
  432839:	lea    rdx,[rip+0x21628]        # 0x453e68
  432840:	call   QWORD PTR [rax]
  432842:	mov    rcx,QWORD PTR [rsp+0x50]
  432847:	cmp    rcx,r13
  43284a:	je     0x43285f
  43284c:	mov    rax,QWORD PTR [rcx]
  43284f:	mov    rdx,QWORD PTR [rsp+0x1b0]
  432857:	call   QWORD PTR [rax+0x18]
  43285a:	mov    rcx,QWORD PTR [rsp+0x50]
  43285f:	cmp    rcx,r13
  432862:	je     0x43286a
  432864:	mov    rax,QWORD PTR [rcx]
  432867:	call   QWORD PTR [rax+0x10]
  43286a:	mov    DWORD PTR [rsp+0x1e4],ebx
  432871:	mov    QWORD PTR [rsp+0x58],r13
  432876:	mov    DWORD PTR [rsp+0x60],r13d
  43287b:	mov    DWORD PTR [rsp+0x64],r13d
  432880:	lea    rcx,[rsp+0x70]
  432885:	call   0x4229a4
  43288a:	nop
  43288b:	mov    rax,QWORD PTR [rsi+0x58]
  43288f:	mov    QWORD PTR [rsp+0xc8],rax
  432897:	mov    rax,QWORD PTR [rsi]
  43289a:	mov    QWORD PTR [rsp+0x70],rax
  43289f:	lea    rcx,[rsp+0x78]
  4328a4:	lea    rdx,[rsi+0x8]
  4328a8:	mov    r8d,0x20
  4328ae:	call   0x44b480
  4328b3:	mov    r11b,BYTE PTR [rsp+0x398]
  4328bb:	mov    BYTE PTR [rsp+0x8c],r11b
  4328c3:	lea    rax,[rsp+0x58]
  4328c8:	mov    QWORD PTR [rsp+0xa0],rax
  4328d0:	mov    BYTE PTR [rsp+0xd0],r13b
  4328d8:	mov    rax,QWORD PTR [rsp+0x28]
  4328dd:	mov    QWORD PTR [rsp+0xa8],rax
  4328e5:	lea    rdx,[rsp+0x1b0]
  4328ed:	lea    rcx,[rsp+0xd8]
  4328f5:	call   0x4032f8
  4328fa:	mov    r11,QWORD PTR [rsi+0x48]
  4328fe:	mov    QWORD PTR [rsp+0xb8],r11
  432906:	mov    rax,QWORD PTR [rsi+0x50]
  43290a:	mov    QWORD PTR [rsp+0xc0],rax
  432912:	lea    rdx,[rsp+0x70]
  432917:	lea    rcx,[rsp+0x120]
  43291f:	call   0x431fa8
  432924:	mov    ebp,eax
  432926:	mov    rax,QWORD PTR [rsi+0x28]
  43292a:	cmp    DWORD PTR [rax+0x8],0x0
  43292e:	setne  r13b
  432932:	cmp    ebp,0x1
  432935:	je     0x432b62
  43293b:	test   ebp,ebp
  43293d:	jne    0x432c4f
  432943:	lea    r9,[rsp+0x1f0]
  43294b:	lea    r8,[rsp+0x1e8]
  432953:	mov    edx,ebx
  432955:	mov    rcx,r12
  432958:	call   0x42abb8
  43295d:	mov    ebx,eax
  43295f:	cmp    eax,ebp
  432961:	jne    0x432cb2
  432967:	mov    ecx,0x110
  43296c:	call   0x402130
  432971:	mov    QWORD PTR [rsp+0x50],rax
  432976:	cmp    rax,rbp
  432979:	je     0x43298d
  43297b:	lea    rdx,[rsp+0x120]
  432983:	mov    rcx,rax
  432986:	call   0x42af60
  43298b:	jmp    0x432990
  43298d:	mov    rax,rbp
  432990:	mov    rdx,rax
  432993:	mov    rcx,rdi
  432996:	call   0x4010c8
  43299b:	nop
  43299c:	mov    rcx,QWORD PTR [rsp+0xd8]
  4329a4:	call   0x40215c
  4329a9:	nop
  4329aa:	mov    rcx,QWORD PTR [rsp+0x58]
  4329af:	call   0x40215c
  4329b4:	nop
  4329b5:	lea    rcx,[rsp+0x120]
  4329bd:	call   0x422a58
  4329c2:	nop
  4329c3:	mov    rcx,QWORD PTR [rsp+0x28]
  4329c8:	cmp    rcx,rbp
  4329cb:	je     0x4329d4
  4329cd:	mov    rax,QWORD PTR [rcx]
  4329d0:	call   QWORD PTR [rax+0x10]
  4329d3:	nop
  4329d4:	mov    rcx,QWORD PTR [rsp+0x20]
  4329d9:	cmp    rcx,rbp
  4329dc:	je     0x4329e5
  4329de:	mov    rax,QWORD PTR [rcx]
  4329e1:	call   QWORD PTR [rax+0x10]
  4329e4:	nop
  4329e5:	mov    rcx,QWORD PTR [rsp+0x3a8]
  4329ed:	cmp    rcx,rbp
  4329f0:	mov    r12d,0x20
  4329f6:	je     0x432531
  4329fc:	mov    rax,QWORD PTR [rcx]
  4329ff:	call   QWORD PTR [rax+0x10]
  432a02:	jmp    0x432531
  432a07:	cmp    eax,0x1
  432a0a:	jne    0x432a96
  432a10:	mov    al,BYTE PTR [rsp+0x288]
  432a17:	mov    BYTE PTR [rdi+0x40],al
  432a1a:	mov    al,BYTE PTR [rsp+0x289]
  432a21:	mov    BYTE PTR [rdi+0x41],al
  432a24:	mov    al,BYTE PTR [rsp+0x28a]
  432a2b:	mov    BYTE PTR [rdi+0x42],al
  432a2e:	mov    al,BYTE PTR [rsp+0x28b]
  432a35:	mov    BYTE PTR [rdi+0x43],al
  432a38:	mov    eax,DWORD PTR [rsp+0x28c]
  432a3f:	mov    DWORD PTR [rdi+0x44],eax
  432a42:	mov    eax,DWORD PTR [rsp+0x290]
  432a49:	mov    DWORD PTR [rdi+0x48],eax
  432a4c:	mov    eax,DWORD PTR [rsp+0x294]
  432a53:	mov    DWORD PTR [rdi+0x4c],eax
  432a56:	mov    rax,QWORD PTR [rsp+0x298]
  432a5e:	mov    QWORD PTR [rdi+0x50],rax
  432a62:	lea    rcx,[rdi+0x58]
  432a66:	lea    rdx,[rsp+0x2a0]
  432a6e:	call   0x4032f8
  432a73:	lea    rcx,[rdi+0x68]
  432a77:	lea    rdx,[rsp+0x2b0]
  432a7f:	call   0x4032f8
  432a84:	lea    rcx,[rdi+0x30]
  432a88:	lea    rdx,[rsp+0x2c0]
  432a90:	call   0x4032f8
  432a95:	nop
  432a96:	lea    rcx,[rsp+0x230]
  432a9e:	call   0x422a58
  432aa3:	mov    eax,ebx
  432aa5:	jmp    0x432d88
  432aaa:	jmp    0x432aae
  432aac:	mov    ebx,eax
  432aae:	lea    rcx,[rsp+0x30]
  432ab3:	call   0x40b028
  432ab8:	mov    eax,ebx
  432aba:	jmp    0x432d88
  432abf:	lea    rcx,[rsp+0x30]
  432ac4:	call   0x40b028
  432ac9:	jmp    0x432d7c
  432ace:	lea    rcx,[rsp+0x120]
  432ad6:	call   0x422a58
  432adb:	nop
  432adc:	mov    rcx,QWORD PTR [rsp+0x28]
  432ae1:	cmp    rcx,r13
  432ae4:	je     0x432aed
  432ae6:	mov    rax,QWORD PTR [rcx]
  432ae9:	call   QWORD PTR [rax+0x10]
  432aec:	nop
  432aed:	mov    rcx,QWORD PTR [rsp+0x20]
  432af2:	cmp    rcx,r13
  432af5:	je     0x432afe
  432af7:	mov    rax,QWORD PTR [rcx]
  432afa:	call   QWORD PTR [rax+0x10]
  432afd:	nop
  432afe:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432b06:	cmp    rcx,r13
  432b09:	je     0x432b11
  432b0b:	mov    rax,QWORD PTR [rcx]
  432b0e:	call   QWORD PTR [rax+0x10]
  432b11:	mov    eax,ebp
  432b13:	jmp    0x432d88
  432b18:	lea    rcx,[rsp+0x120]
  432b20:	call   0x422a58
  432b25:	nop
  432b26:	mov    rcx,QWORD PTR [rsp+0x28]
  432b2b:	cmp    rcx,r13
  432b2e:	je     0x432b37
  432b30:	mov    rax,QWORD PTR [rcx]
  432b33:	call   QWORD PTR [rax+0x10]
  432b36:	nop
  432b37:	mov    rcx,QWORD PTR [rsp+0x20]
  432b3c:	cmp    rcx,r13
  432b3f:	je     0x432b48
  432b41:	mov    rax,QWORD PTR [rcx]
  432b44:	call   QWORD PTR [rax+0x10]
  432b47:	nop
  432b48:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432b50:	cmp    rcx,r13
  432b53:	je     0x432b5b
  432b55:	mov    rax,QWORD PTR [rcx]
  432b58:	call   QWORD PTR [rax+0x10]
  432b5b:	mov    eax,ebp
  432b5d:	jmp    0x432d88
  432b62:	mov    al,BYTE PTR [rsp+0x140]
  432b69:	mov    BYTE PTR [rdi+0x40],al
  432b6c:	mov    al,BYTE PTR [rsp+0x141]
  432b73:	mov    BYTE PTR [rdi+0x41],al
  432b76:	mov    al,BYTE PTR [rsp+0x142]
  432b7d:	mov    BYTE PTR [rdi+0x42],al
  432b80:	mov    al,BYTE PTR [rsp+0x143]
  432b87:	mov    BYTE PTR [rdi+0x43],al
  432b8a:	mov    eax,DWORD PTR [rsp+0x144]
  432b91:	mov    DWORD PTR [rdi+0x44],eax
  432b94:	mov    eax,DWORD PTR [rsp+0x148]
  432b9b:	mov    DWORD PTR [rdi+0x48],eax
  432b9e:	mov    eax,DWORD PTR [rsp+0x14c]
  432ba5:	mov    DWORD PTR [rdi+0x4c],eax
  432ba8:	mov    rax,QWORD PTR [rsp+0x150]
  432bb0:	mov    QWORD PTR [rdi+0x50],rax
  432bb4:	lea    rcx,[rdi+0x58]
  432bb8:	lea    rdx,[rsp+0x158]
  432bc0:	call   0x4032f8
  432bc5:	lea    rcx,[rdi+0x68]
  432bc9:	lea    rdx,[rsp+0x168]
  432bd1:	call   0x4032f8
  432bd6:	lea    rcx,[rdi+0x30]
  432bda:	lea    rdx,[rsp+0x1b0]
  432be2:	call   0x4032f8
  432be7:	nop
  432be8:	mov    rcx,QWORD PTR [rsp+0xd8]
  432bf0:	call   0x40215c
  432bf5:	nop
  432bf6:	mov    rcx,QWORD PTR [rsp+0x58]
  432bfb:	call   0x40215c
  432c00:	nop
  432c01:	lea    rcx,[rsp+0x120]
  432c09:	call   0x422a58
  432c0e:	nop
  432c0f:	mov    rcx,QWORD PTR [rsp+0x28]
  432c14:	xor    ebp,ebp
  432c16:	cmp    rcx,rbp
  432c19:	je     0x432c22
  432c1b:	mov    rax,QWORD PTR [rcx]
  432c1e:	call   QWORD PTR [rax+0x10]
  432c21:	nop
  432c22:	mov    rcx,QWORD PTR [rsp+0x20]
  432c27:	cmp    rcx,rbp
  432c2a:	je     0x432c33
  432c2c:	mov    rax,QWORD PTR [rcx]
  432c2f:	call   QWORD PTR [rax+0x10]
  432c32:	nop
  432c33:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432c3b:	cmp    rcx,rbp
  432c3e:	je     0x432d7c
  432c44:	mov    rax,QWORD PTR [rcx]
  432c47:	call   QWORD PTR [rax+0x10]
  432c4a:	jmp    0x432d7c
  432c4f:	mov    rcx,QWORD PTR [rsp+0xd8]
  432c57:	call   0x40215c
  432c5c:	nop
  432c5d:	mov    rcx,QWORD PTR [rsp+0x58]
  432c62:	call   0x40215c
  432c67:	nop
  432c68:	lea    rcx,[rsp+0x120]
  432c70:	call   0x422a58
  432c75:	nop
  432c76:	mov    rcx,QWORD PTR [rsp+0x28]
  432c7b:	test   rcx,rcx
  432c7e:	je     0x432c87
  432c80:	mov    rax,QWORD PTR [rcx]
  432c83:	call   QWORD PTR [rax+0x10]
  432c86:	nop
  432c87:	mov    rcx,QWORD PTR [rsp+0x20]
  432c8c:	test   rcx,rcx
  432c8f:	je     0x432c98
  432c91:	mov    rax,QWORD PTR [rcx]
  432c94:	call   QWORD PTR [rax+0x10]
  432c97:	nop
  432c98:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432ca0:	test   rcx,rcx
  432ca3:	je     0x432cab
  432ca5:	mov    rax,QWORD PTR [rcx]
  432ca8:	call   QWORD PTR [rax+0x10]
  432cab:	mov    eax,ebp
  432cad:	jmp    0x432d88
  432cb2:	mov    rcx,QWORD PTR [rsp+0xd8]
  432cba:	call   0x40215c
  432cbf:	nop
  432cc0:	mov    rcx,QWORD PTR [rsp+0x58]
  432cc5:	call   0x40215c
  432cca:	nop
  432ccb:	lea    rcx,[rsp+0x120]
  432cd3:	call   0x422a58
  432cd8:	nop
  432cd9:	mov    rcx,QWORD PTR [rsp+0x28]
  432cde:	cmp    rcx,rbp
  432ce1:	je     0x432cea
  432ce3:	mov    rax,QWORD PTR [rcx]
  432ce6:	call   QWORD PTR [rax+0x10]
  432ce9:	nop
  432cea:	mov    rcx,QWORD PTR [rsp+0x20]
  432cef:	cmp    rcx,rbp
  432cf2:	je     0x432cfb
  432cf4:	mov    rax,QWORD PTR [rcx]
  432cf7:	call   QWORD PTR [rax+0x10]
  432cfa:	nop
  432cfb:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432d03:	cmp    rcx,rbp
  432d06:	je     0x432d0e
  432d08:	mov    rax,QWORD PTR [rcx]
  432d0b:	call   QWORD PTR [rax+0x10]
  432d0e:	mov    eax,ebx
  432d10:	jmp    0x432d88
  432d12:	cmp    rcx,rbp
  432d15:	je     0x432d1e
  432d17:	mov    rax,QWORD PTR [rcx]
  432d1a:	call   QWORD PTR [rax+0x10]
  432d1d:	nop
  432d1e:	mov    rcx,QWORD PTR [rsp+0x20]
  432d23:	cmp    rcx,rbp
  432d26:	je     0x432d2f
  432d28:	mov    rax,QWORD PTR [rcx]
  432d2b:	call   QWORD PTR [rax+0x10]
  432d2e:	nop
  432d2f:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432d37:	cmp    rcx,rbp
  432d3a:	je     0x432d7c
  432d3c:	mov    rax,QWORD PTR [rcx]
  432d3f:	call   QWORD PTR [rax+0x10]
  432d42:	jmp    0x432d7c
  432d44:	cmp    rcx,rbp
  432d47:	je     0x432d50
  432d49:	mov    rax,QWORD PTR [rcx]
  432d4c:	call   QWORD PTR [rax+0x10]
  432d4f:	nop
  432d50:	mov    rcx,QWORD PTR [rsp+0x3a8]
  432d58:	cmp    rcx,rbp
  432d5b:	je     0x432d7c
  432d5d:	mov    rax,QWORD PTR [rcx]
  432d60:	call   QWORD PTR [rax+0x10]
  432d63:	jmp    0x432d7c
  432d65:	cmp    rcx,rbp
  432d68:	je     0x432d7c
  432d6a:	mov    rax,QWORD PTR [rcx]
  432d6d:	call   QWORD PTR [rax+0x10]
  432d70:	jmp    0x432d7c
  432d72:	lea    rcx,[rsp+0x30]
  432d77:	call   0x40b028
  432d7c:	cmp    DWORD PTR [rdi+0x8],ebp
  432d7f:	setne  cl
  432d82:	mov    BYTE PTR [rdi+0x28],cl
  432d85:	mov    eax,r13d
  432d88:	add    rsp,0x348
  432d8f:	pop    r15
  432d91:	pop    r14
  432d93:	pop    r13
  432d95:	pop    r12
  432d97:	pop    rdi
  432d98:	pop    rsi
  432d99:	pop    rbp
  432d9a:	pop    rbx
  432d9b:	ret    
  432d9c:	int3   
  432d9d:	int3   
  432d9e:	int3   
  432d9f:	int3   
  432da0:	int3   
  432da1:	int3   
  432da2:	int3   
  432da3:	int3   
  432da4:	rex.W push rbp
  432da6:	sub    rsp,0x20
  432daa:	mov    rbp,rdx
  432dad:	lea    rcx,[rbp+0x230]
  432db4:	call   0x422a58
  432db9:	add    rsp,0x20
  432dbd:	pop    rbp
  432dbe:	ret    
  432dbf:	int3   
  432dc0:	int3   
  432dc1:	int3   
  432dc2:	int3   
  432dc3:	int3   
  432dc4:	rex.W push rbp
  432dc6:	sub    rsp,0x20
  432dca:	mov    rbp,rdx
  432dcd:	mov    rcx,QWORD PTR [rbp+0x50]
  432dd1:	call   0x40215c
  432dd6:	add    rsp,0x20
  432dda:	pop    rbp
  432ddb:	ret    
  432ddc:	int3   
  432ddd:	int3   
  432dde:	int3   
  432ddf:	int3   
  432de0:	int3   
  432de1:	int3   
  432de2:	int3   
  432de3:	int3   
  432de4:	rex.W push rbp
  432de6:	sub    rsp,0x20
  432dea:	mov    rbp,rdx
  432ded:	lea    rcx,[rbp+0x30]
  432df1:	call   0x40b830
  432df6:	add    rsp,0x20
  432dfa:	pop    rbp
  432dfb:	ret    
  432dfc:	int3   
  432dfd:	int3   
  432dfe:	int3   
  432dff:	int3   
  432e00:	int3   
  432e01:	int3   
  432e02:	int3   
  432e03:	int3   
  432e04:	rex.W push rbp
  432e06:	sub    rsp,0x20
  432e0a:	mov    rbp,rdx
  432e0d:	lea    rcx,[rbp+0x3a8]
  432e14:	call   0x4176b4
  432e19:	add    rsp,0x20
  432e1d:	pop    rbp
  432e1e:	ret    
  432e1f:	int3   
  432e20:	int3   
  432e21:	int3   
  432e22:	int3   
  432e23:	int3   
  432e24:	rex.W push rbp
  432e26:	sub    rsp,0x20
  432e2a:	mov    rbp,rdx
  432e2d:	lea    rcx,[rbp+0x20]
  432e31:	call   0x4176b4
  432e36:	add    rsp,0x20
  432e3a:	pop    rbp
  432e3b:	ret    
  432e3c:	int3   
  432e3d:	int3   
  432e3e:	int3   
  432e3f:	int3   
  432e40:	int3   
  432e41:	int3   
  432e42:	int3   
  432e43:	int3   
  432e44:	rex.W push rbp
  432e46:	sub    rsp,0x20
  432e4a:	mov    rbp,rdx
  432e4d:	lea    rcx,[rbp+0x28]
  432e51:	call   0x4176b4
  432e56:	add    rsp,0x20
  432e5a:	pop    rbp
  432e5b:	ret    
  432e5c:	int3   
  432e5d:	int3   
  432e5e:	int3   
  432e5f:	int3   
  432e60:	int3   
  432e61:	int3   
  432e62:	int3   
  432e63:	int3   
  432e64:	rex.W push rbp
  432e66:	sub    rsp,0x20
  432e6a:	mov    rbp,rdx
  432e6d:	lea    rcx,[rbp+0x120]
  432e74:	call   0x422a58
  432e79:	add    rsp,0x20
  432e7d:	pop    rbp
  432e7e:	ret    
  432e7f:	int3   
  432e80:	int3   
  432e81:	int3   
  432e82:	int3   
  432e83:	int3   
  432e84:	rex.W push rbp
  432e86:	sub    rsp,0x20
  432e8a:	mov    rbp,rdx
  432e8d:	lea    rcx,[rbp+0x50]
  432e91:	call   0x4176b4
  432e96:	add    rsp,0x20
  432e9a:	pop    rbp
  432e9b:	ret    
  432e9c:	int3   
  432e9d:	int3   
  432e9e:	int3   
  432e9f:	int3   
  432ea0:	int3   
  432ea1:	int3   
  432ea2:	int3   
  432ea3:	int3   
  432ea4:	rex.W push rbp
  432ea6:	sub    rsp,0x20
  432eaa:	mov    rbp,rdx
  432ead:	lea    rcx,[rbp+0x58]
  432eb1:	call   0x401000
  432eb6:	add    rsp,0x20
  432eba:	pop    rbp
  432ebb:	ret    
  432ebc:	int3   
  432ebd:	int3   
  432ebe:	int3   
  432ebf:	int3   
  432ec0:	int3   
  432ec1:	int3   
  432ec2:	int3   
  432ec3:	int3   
  432ec4:	rex.W push rbp
  432ec6:	sub    rsp,0x20
  432eca:	mov    rbp,rdx
  432ecd:	lea    rcx,[rbp+0x70]
  432ed1:	call   0x422a4c
  432ed6:	add    rsp,0x20
  432eda:	pop    rbp
  432edb:	ret    
  432edc:	int3   
  432edd:	int3   
  432ede:	int3   
  432edf:	int3   
  432ee0:	int3   
  432ee1:	int3   
  432ee2:	int3   
  432ee3:	int3   
  432ee4:	rex.W push rbp
  432ee6:	sub    rsp,0x20
  432eea:	mov    rbp,rdx
  432eed:	mov    rcx,QWORD PTR [rbp+0x50]
  432ef1:	call   0x40215c
  432ef6:	add    rsp,0x20
  432efa:	pop    rbp
  432efb:	ret    
  432efc:	rex.W push rbx
  432efe:	push   rbp
  432eff:	push   rsi
  432f00:	push   rdi
  432f01:	push   r12
  432f03:	sub    rsp,0x60
  432f07:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  432f10:	mov    rsi,r8
  432f13:	mov    rdi,rdx
  432f16:	mov    rbp,rcx
  432f19:	mov    QWORD PTR [rcx+0x20],0x0
  432f21:	mov    ecx,0xd0
  432f26:	call   0x402130
  432f2b:	mov    QWORD PTR [rsp+0x90],rax
  432f33:	test   rax,rax
  432f36:	je     0x432f45
  432f38:	mov    rcx,rax
  432f3b:	call   0x42b234
  432f40:	mov    rbx,rax
  432f43:	jmp    0x432f47
  432f45:	xor    ebx,ebx
  432f47:	mov    QWORD PTR [rsp+0x90],rbx
  432f4f:	test   rbx,rbx
  432f52:	je     0x432f5e
  432f54:	mov    rax,QWORD PTR [rbx]
  432f57:	mov    rcx,rbx
  432f5a:	call   QWORD PTR [rax+0x8]
  432f5d:	nop
  432f5e:	mov    QWORD PTR [rbx+0xc0],rsi
  432f65:	lea    rcx,[rsp+0x28]
  432f6a:	call   0x403150
  432f6f:	nop
  432f70:	lea    rcx,[rsp+0x38]
  432f75:	call   0x403150
  432f7a:	nop
  432f7b:	cmp    QWORD PTR [rdi+0x38],0x0
  432f80:	jne    0x432faf
  432f82:	cmp    BYTE PTR [rdi+0x60],0x0
  432f86:	jne    0x432faf
  432f88:	lea    r8,[rsp+0x38]
  432f8d:	lea    rdx,[rsp+0x28]
  432f92:	mov    rcx,QWORD PTR [rdi+0x68]
  432f96:	call   0x4070d4
  432f9b:	lea    r8,[rsp+0x38]
  432fa0:	lea    rdx,[rsp+0x28]
  432fa5:	mov    rcx,rbx
  432fa8:	call   0x42b43c
  432fad:	jmp    0x432fbd
  432faf:	lea    rcx,[rbx+0x10]
  432fb3:	mov    rax,QWORD PTR [rcx]
  432fb6:	mov    rdx,QWORD PTR [rdi+0x68]
  432fba:	call   QWORD PTR [rax+0x18]
  432fbd:	mov    QWORD PTR [rdi+0x48],rbx
  432fc1:	mov    QWORD PTR [rdi+0x50],rbx
  432fc5:	mov    rdx,rdi
  432fc8:	mov    rcx,rbp
  432fcb:	call   0x4324e4
  432fd0:	mov    edi,eax
  432fd2:	mov    cl,BYTE PTR [rbx+0xb8]
  432fd8:	mov    BYTE PTR [rbp+0x29],cl
  432fdb:	test   eax,eax
  432fdd:	je     0x432ffa
  432fdf:	mov    rcx,QWORD PTR [rsp+0x38]
  432fe4:	call   0x40215c
  432fe9:	nop
  432fea:	mov    rcx,QWORD PTR [rsp+0x28]
  432fef:	call   0x40215c
  432ff4:	nop
  432ff5:	jmp    0x4330aa
  432ffa:	xor    edi,edi
  432ffc:	cmp    DWORD PTR [rbx+0xa0],edi
  433002:	jbe    0x433092
  433008:	xor    esi,esi
  43300a:	mov    rax,QWORD PTR [rbx+0x98]
  433011:	cmp    BYTE PTR [rdi+rax*1],0x0
  433015:	je     0x433080
  433017:	mov    rax,QWORD PTR [rbx+0x88]
  43301e:	mov    r8,QWORD PTR [rsi+rax*1]
  433022:	lea    rdx,[rsp+0x28]
  433027:	lea    rcx,[rsp+0x48]
  43302c:	call   0x4030d4
  433031:	mov    r12,rax
  433034:	mov    ecx,0x10
  433039:	call   0x402130
  43303e:	mov    QWORD PTR [rsp+0x98],rax
  433046:	test   rax,rax
  433049:	je     0x433058
  43304b:	mov    rdx,r12
  43304e:	mov    rcx,rax
  433051:	call   0x403208
  433056:	jmp    0x43305a
  433058:	xor    eax,eax
  43305a:	lea    rcx,[rbp+0x10]
  43305e:	mov    rdx,rax
  433061:	call   0x4010c8
  433066:	nop
  433067:	mov    rcx,QWORD PTR [rsp+0x48]
  43306c:	call   0x40215c
  433071:	mov    r11,QWORD PTR [rbx+0xa8]
  433078:	mov    rax,QWORD PTR [r11+rsi*1]
  43307c:	add    QWORD PTR [rbp+0x20],rax
  433080:	inc    edi
  433082:	add    rsi,0x8
  433086:	cmp    edi,DWORD PTR [rbx+0xa0]
  43308c:	jb     0x43300a
  433092:	mov    rcx,QWORD PTR [rsp+0x38]
  433097:	call   0x40215c
  43309c:	nop
  43309d:	mov    rcx,QWORD PTR [rsp+0x28]
  4330a2:	call   0x40215c
  4330a7:	nop
  4330a8:	xor    edi,edi
  4330aa:	mov    rax,QWORD PTR [rbx]
  4330ad:	mov    rcx,rbx
  4330b0:	call   QWORD PTR [rax+0x10]
  4330b3:	mov    eax,edi
  4330b5:	add    rsp,0x60
  4330b9:	pop    r12
  4330bb:	pop    rdi
  4330bc:	pop    rsi
  4330bd:	pop    rbp
  4330be:	pop    rbx
  4330bf:	ret    
  4330c0:	int3   
  4330c1:	int3   
  4330c2:	int3   
  4330c3:	int3   
  4330c4:	int3   
  4330c5:	int3   
  4330c6:	int3   
  4330c7:	int3   
  4330c8:	int3   
  4330c9:	int3   
  4330ca:	int3   
  4330cb:	int3   
  4330cc:	rex.W push rbp
  4330ce:	sub    rsp,0x20
  4330d2:	mov    rbp,rdx
  4330d5:	mov    rcx,QWORD PTR [rbp+0x90]
  4330dc:	call   0x40215c
  4330e1:	add    rsp,0x20
  4330e5:	pop    rbp
  4330e6:	ret    
  4330e7:	int3   
  4330e8:	int3   
  4330e9:	int3   
  4330ea:	int3   
  4330eb:	int3   
  4330ec:	rex.W push rbp
  4330ee:	sub    rsp,0x20
  4330f2:	mov    rbp,rdx
  4330f5:	lea    rcx,[rbp+0x90]
  4330fc:	call   0x4176b4
  433101:	add    rsp,0x20
  433105:	pop    rbp
  433106:	ret    
  433107:	int3   
  433108:	int3   
  433109:	int3   
  43310a:	int3   
  43310b:	int3   
  43310c:	rex.W push rbp
  43310e:	sub    rsp,0x20
  433112:	mov    rbp,rdx
  433115:	lea    rcx,[rbp+0x28]
  433119:	call   0x401000
  43311e:	add    rsp,0x20
  433122:	pop    rbp
  433123:	ret    
  433124:	int3   
  433125:	int3   
  433126:	int3   
  433127:	int3   
  433128:	int3   
  433129:	int3   
  43312a:	int3   
  43312b:	int3   
  43312c:	rex.W push rbp
  43312e:	sub    rsp,0x20
  433132:	mov    rbp,rdx
  433135:	lea    rcx,[rbp+0x38]
  433139:	call   0x401000
  43313e:	add    rsp,0x20
  433142:	pop    rbp
  433143:	ret    
  433144:	int3   
  433145:	int3   
  433146:	int3   
  433147:	int3   
  433148:	int3   
  433149:	int3   
  43314a:	int3   
  43314b:	int3   
  43314c:	rex.W push rbp
  43314e:	sub    rsp,0x20
  433152:	mov    rbp,rdx
  433155:	lea    rcx,[rbp+0x48]
  433159:	call   0x401000
  43315e:	add    rsp,0x20
  433162:	pop    rbp
  433163:	ret    
  433164:	int3   
  433165:	int3   
  433166:	int3   
  433167:	int3   
  433168:	int3   
  433169:	int3   
  43316a:	int3   
  43316b:	int3   
  43316c:	rex.W push rbp
  43316e:	sub    rsp,0x20
  433172:	mov    rbp,rdx
  433175:	mov    rcx,QWORD PTR [rbp+0x98]
  43317c:	call   0x40215c
  433181:	add    rsp,0x20
  433185:	pop    rbp
  433186:	ret    
  433187:	int3   
  433188:	rex.W push rbx
  43318a:	push   rdi
  43318b:	sub    rsp,0x28
  43318f:	mov    rbx,r8
  433192:	call   0x432efc
  433197:	test   rbx,rbx
  43319a:	mov    edi,eax
  43319c:	je     0x4331ab
  43319e:	mov    rdx,QWORD PTR [rbx]
  4331a1:	mov    rcx,rbx
  4331a4:	call   QWORD PTR [rdx+0x18]
  4331a7:	test   eax,eax
  4331a9:	jne    0x4331ad
  4331ab:	mov    eax,edi
  4331ad:	add    rsp,0x28
  4331b1:	pop    rdi
  4331b2:	pop    rbx
  4331b3:	ret    
  4331b4:	rex.W push rbx
  4331b6:	push   rbp
  4331b7:	push   rsi
  4331b8:	push   rdi
  4331b9:	push   r12
  4331bb:	push   r13
  4331bd:	push   r15
  4331bf:	sub    rsp,0x60
  4331c3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4331cc:	mov    rbp,r8
  4331cf:	mov    rsi,rdx
  4331d2:	mov    r12,rcx
  4331d5:	movsxd rbx,DWORD PTR [r8+0x8]
  4331d9:	mov    rdi,rbx
  4331dc:	xor    r13d,r13d
  4331df:	cmp    ebx,r13d
  4331e2:	je     0x433201
  4331e4:	shl    rdi,0x3
  4331e8:	add    ebx,0xffffffff
  4331eb:	sub    rdi,0x8
  4331ef:	mov    rax,QWORD PTR [rbp+0x0]
  4331f3:	mov    rcx,QWORD PTR [rdi+rax*1]
  4331f7:	call   0x40215c
  4331fc:	cmp    ebx,r13d
  4331ff:	jne    0x4331e8
  433201:	mov    DWORD PTR [rbp+0x8],r13d
  433205:	mov    ebx,r13d
  433208:	cmp    DWORD PTR [rsi+0x8],r13d
  43320c:	jbe    0x433342
  433212:	mov    r15d,0xffffffff
  433218:	mov    ecx,ebx
  43321a:	mov    rax,QWORD PTR [rsi]
  43321d:	lea    rcx,[rax+rcx*2]
  433221:	mov    dx,0x2e
  433225:	call   0x4026e0
  43322a:	lea    edi,[rax+rbx*1]
  43322d:	cmp    eax,r13d
  433230:	cmovl  edi,r15d
  433234:	cmp    edi,r13d
  433237:	jge    0x43323c
  433239:	mov    edi,DWORD PTR [rsi+0x8]
  43323c:	mov    r9d,edi
  43323f:	sub    r9d,ebx
  433242:	mov    r8d,ebx
  433245:	lea    rdx,[rsp+0x28]
  43324a:	mov    rcx,rsi
  43324d:	call   0x409d0c
  433252:	nop
  433253:	cmp    DWORD PTR [rsp+0x30],r13d
  433258:	je     0x433326
  43325e:	mov    DWORD PTR [rsp+0x38],r15d
  433263:	mov    BYTE PTR [rsp+0x40],r13b
  433268:	mov    BYTE PTR [rsp+0x41],r13b
  43326d:	mov    BYTE PTR [rsp+0x42],r13b
  433272:	mov    BYTE PTR [rsp+0x43],r13b
  433277:	mov    BYTE PTR [rsp+0x44],r13b
  43327c:	mov    BYTE PTR [rsp+0x48],0x1
  433281:	mov    BYTE PTR [rsp+0x49],0x1
  433286:	mov    BYTE PTR [rsp+0x4a],r13b
  43328b:	mov    BYTE PTR [rsp+0x4b],r13b
  433290:	mov    BYTE PTR [rsp+0x4c],r13b
  433295:	mov    BYTE PTR [rsp+0x4d],r13b
  43329a:	mov    QWORD PTR [rsp+0x50],r13
  43329f:	mov    BYTE PTR [rsp+0x3c],0x1
  4332a4:	mov    BYTE PTR [rsp+0x3d],0x1
  4332a9:	mov    BYTE PTR [rsp+0x3e],0x1
  4332ae:	mov    BYTE PTR [rsp+0x3f],0x1
  4332b3:	mov    BYTE PTR [rsp+0x46],0x1
  4332b8:	mov    BYTE PTR [rsp+0x47],0x1
  4332bd:	mov    BYTE PTR [rsp+0x45],0x1
  4332c2:	lea    r8,[rsp+0x38]
  4332c7:	lea    rdx,[rsp+0x28]
  4332cc:	mov    rcx,r12
  4332cf:	call   0x42a0fc
  4332d4:	cmp    al,r13b
  4332d7:	je     0x433334
  4332d9:	mov    ecx,0x20
  4332de:	call   0x402130
  4332e3:	mov    rbx,rax
  4332e6:	cmp    rax,r13
  4332e9:	je     0x433300
  4332eb:	mov    rcx,rax
  4332ee:	lea    rdx,[rsp+0x38]
  4332f3:	mov    r8d,0x20
  4332f9:	call   0x44b480
  4332fe:	jmp    0x433303
  433300:	mov    rbx,r13
  433303:	mov    rdx,rbx
  433306:	mov    rcx,rbp
  433309:	call   0x4010c8
  43330e:	lea    ebx,[rdi+0x1]
  433311:	mov    rcx,QWORD PTR [rsp+0x28]
  433316:	call   0x40215c
  43331b:	cmp    ebx,DWORD PTR [rsi+0x8]
  43331e:	jb     0x433218
  433324:	jmp    0x433342
  433326:	mov    rcx,QWORD PTR [rsp+0x28]
  43332b:	call   0x40215c
  433330:	xor    al,al
  433332:	jmp    0x433344
  433334:	mov    rcx,QWORD PTR [rsp+0x28]
  433339:	call   0x40215c
  43333e:	xor    al,al
  433340:	jmp    0x433344
  433342:	mov    al,0x1
  433344:	add    rsp,0x60
  433348:	pop    r15
  43334a:	pop    r13
  43334c:	pop    r12
  43334e:	pop    rdi
  43334f:	pop    rsi
  433350:	pop    rbp
  433351:	pop    rbx
  433352:	ret    
  433353:	int3   
  433354:	rex.W push rbp
  433356:	sub    rsp,0x20
  43335a:	mov    rbp,rdx
  43335d:	lea    rcx,[rbp+0x28]
  433361:	call   0x401000
  433366:	add    rsp,0x20
  43336a:	pop    rbp
  43336b:	ret    
  43336c:	sub    rcx,0x8
  433370:	jmp    0x42d5cc
  433375:	int3   
  433376:	int3   
  433377:	int3   
  433378:	sub    rcx,0x10
  43337c:	jmp    0x42d5cc
  433381:	int3   
  433382:	int3   
  433383:	int3   
  433384:	sub    rcx,0x8
  433388:	jmp    0x42d668
  43338d:	int3   
  43338e:	int3   
  43338f:	int3   
  433390:	rex.W push rbx
  433392:	sub    rsp,0x20
  433396:	add    DWORD PTR [rcx+0x20],0xffffffff
  43339a:	mov    eax,DWORD PTR [rcx+0x20]
  43339d:	mov    rbx,rcx
  4333a0:	jne    0x4333b1
  4333a2:	call   0x42b534
  4333a7:	mov    rcx,rbx
  4333aa:	call   0x40215c
  4333af:	xor    eax,eax
  4333b1:	add    rsp,0x20
  4333b5:	pop    rbx
  4333b6:	ret    
  4333b7:	int3   
  4333b8:	rex.W push rbx
  4333ba:	sub    rsp,0x30
  4333be:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4333c7:	mov    rbx,rcx
  4333ca:	add    DWORD PTR [rcx+0x10],0xffffffff
  4333ce:	mov    eax,DWORD PTR [rcx+0x10]
  4333d1:	jne    0x4333fb
  4333d3:	mov    QWORD PTR [rsp+0x40],rcx
  4333d8:	mov    rcx,QWORD PTR [rcx+0x30]
  4333dc:	test   rcx,rcx
  4333df:	je     0x4333e8
  4333e1:	mov    rax,QWORD PTR [rcx]
  4333e4:	call   QWORD PTR [rax+0x10]
  4333e7:	nop
  4333e8:	lea    rcx,[rbx+0x18]
  4333ec:	call   0x42ae80
  4333f1:	mov    rcx,rbx
  4333f4:	call   0x40215c
  4333f9:	xor    eax,eax
  4333fb:	add    rsp,0x30
  4333ff:	pop    rbx
  433400:	ret    
  433401:	int3   
  433402:	int3   
  433403:	int3   
  433404:	int3   
  433405:	int3   
  433406:	int3   
  433407:	int3   
  433408:	rex.W push rbp
  43340a:	sub    rsp,0x20
  43340e:	mov    rbp,rdx
  433411:	mov    rcx,QWORD PTR [rbp+0x40]
  433415:	add    rcx,0x18
  433419:	call   0x42ae80
  43341e:	add    rsp,0x20
  433422:	pop    rbp
  433423:	ret    
  433424:	sub    rcx,0x8
  433428:	jmp    0x433390
  43342d:	int3   
  43342e:	int3   
  43342f:	int3   
  433430:	sub    rcx,0x10
  433434:	jmp    0x433390
  433439:	int3   
  43343a:	int3   
  43343b:	int3   
  43343c:	sub    rcx,0x18
  433440:	jmp    0x433390
  433445:	int3   
  433446:	int3   
  433447:	int3   
  433448:	sub    rcx,0x8
  43344c:	jmp    0x4333b8
  433451:	int3   
  433452:	int3   
  433453:	int3   
  433454:	sub    rsp,0x28
  433458:	mov    r9,rcx
  43345b:	mov    eax,edx
  43345d:	lea    rcx,[rip+0x1d784]        # 0x450be8
  433464:	shr    rax,0xc
  433468:	mov    r8d,edx
  43346b:	mov    r10d,0x6
  433471:	and    eax,0xf
  433474:	lea    r11,[r9+0x2]
  433478:	mov    al,BYTE PTR [rax+rcx*1]
  43347b:	mov    BYTE PTR [r9],al
  43347e:	lea    ecx,[r10+0x2]
  433482:	mov    eax,0x1
  433487:	shl    eax,cl
  433489:	lea    ecx,[r10+0x1]
  43348d:	and    eax,edx
  43348f:	neg    eax
  433491:	sbb    al,al
  433493:	and    al,0x45
  433495:	add    al,0x2d
  433497:	mov    BYTE PTR [r11-0x1],al
  43349b:	mov    eax,0x1
  4334a0:	shl    eax,cl
  4334a2:	mov    ecx,r10d
  4334a5:	and    eax,edx
  4334a7:	neg    eax
  4334a9:	sbb    al,al
  4334ab:	and    al,0x4a
  4334ad:	add    al,0x2d
  4334af:	mov    BYTE PTR [r11],al
  4334b2:	mov    eax,0x1
  4334b7:	shl    eax,cl
  4334b9:	and    eax,edx
  4334bb:	neg    eax
  4334bd:	sbb    al,al
  4334bf:	add    r11,0x3
  4334c3:	and    al,0x4b
  4334c5:	add    al,0x2d
  4334c7:	sub    r10d,0x3
  4334cb:	mov    BYTE PTR [r11-0x2],al
  4334cf:	jns    0x43347e
  4334d1:	bt     edx,0xb
  4334d5:	jae    0x4334e3
  4334d7:	mov    eax,edx
  4334d9:	shr    eax,1
  4334db:	and    al,0x20
  4334dd:	or     al,0x53
  4334df:	mov    BYTE PTR [r9+0x3],al
  4334e3:	bt     edx,0xa
  4334e7:	jae    0x4334f6
  4334e9:	mov    al,dl
  4334eb:	and    al,0x8
  4334ed:	shl    al,0x2
  4334f0:	or     al,0x53
  4334f2:	mov    BYTE PTR [r9+0x6],al
  4334f6:	bt     edx,0x9
  4334fa:	jae    0x433509
  4334fc:	mov    al,dl
  4334fe:	and    al,0x1
  433500:	shl    al,0x5
  433503:	or     al,0x54
  433505:	mov    BYTE PTR [r9+0x9],al
  433509:	and    r8d,0xffff0000
  433510:	mov    BYTE PTR [r9+0xa],0x0
  433515:	je     0x433528
  433517:	lea    rdx,[r9+0xb]
  43351b:	mov    ecx,r8d
  43351e:	mov    BYTE PTR [r9+0xa],0x20
  433523:	call   0x401ad8
  433528:	add    rsp,0x28
  43352c:	ret    
  43352d:	int3   
  43352e:	int3   
  43352f:	int3   
  433530:	sub    rsp,0x28
  433534:	xor    r8d,r8d
  433537:	lea    r9,[rip+0x1d692]        # 0x450bd0
  43353e:	bt     edx,r8d
  433542:	jae    0x433552
  433544:	cmp    r8d,0x7
  433548:	je     0x433552
  43354a:	mov    al,BYTE PTR [r9]
  43354d:	mov    BYTE PTR [rcx],al
  43354f:	inc    rcx
  433552:	inc    r8d
  433555:	inc    r9
  433558:	cmp    r8d,0x10
  43355c:	jl     0x43353e
  43355e:	shr    edx,0x10
  433561:	mov    BYTE PTR [rcx],0x0
  433564:	je     0x433571
  433566:	mov    BYTE PTR [rcx],0x20
  433569:	inc    rcx
  43356c:	call   0x433454
  433571:	add    rsp,0x28
  433575:	ret    
  433576:	int3   
  433577:	int3   
  433578:	rex.W push rbx
  43357a:	push   rsi
  43357b:	push   rdi
  43357c:	sub    rsp,0x20
  433580:	mov    BYTE PTR [rcx],0x0
  433583:	cmp    WORD PTR [rdx],0x40
  433587:	mov    sil,r9b
  43358a:	mov    rbx,rdx
  43358d:	mov    rdi,rcx
  433590:	jne    0x4335d1
  433592:	cmp    DWORD PTR [rdx+0xc],0x0
  433596:	jne    0x4335a2
  433598:	cmp    DWORD PTR [rdx+0x8],0x0
  43359c:	je     0x43369f
  4335a2:	lea    rcx,[rdx+0x8]
  4335a6:	lea    rdx,[rsp+0x40]
  4335ab:	call   QWORD PTR [rip+0x19af7]        # 0x44d0a8
  4335b1:	test   eax,eax
  4335b3:	je     0x43369f
  4335b9:	lea    rcx,[rsp+0x40]
  4335be:	mov    r9b,sil
  4335c1:	mov    r8b,0x1
  4335c4:	mov    rdx,rdi
  4335c7:	call   0x40b310
  4335cc:	jmp    0x43369f
  4335d1:	cmp    r8d,0x9
  4335d5:	je     0x433684
  4335db:	cmp    r8d,0x13
  4335df:	je     0x433671
  4335e5:	cmp    r8d,0x30
  4335e9:	je     0x43364a
  4335eb:	cmp    r8d,0x35
  4335ef:	je     0x43363a
  4335f1:	cmp    r8d,0x5b
  4335f5:	jne    0x43368a
  4335fb:	cmp    WORD PTR [rdx],0x15
  4335ff:	jne    0x43368a
  433605:	movzx  ecx,WORD PTR [rdx+0xe]
  433609:	mov    rdx,rdi
  43360c:	call   0x401930
  433611:	mov    rcx,rdi
  433614:	call   0x44b78c
  433619:	mov    BYTE PTR [rdi+rax*1],0x2d
  43361d:	mov    rcx,QWORD PTR [rbx+0x8]
  433621:	lea    rdx,[rdi+rax*1+0x1]
  433626:	movabs rax,0xffffffffffff
  433630:	and    rcx,rax
  433633:	call   0x4019a4
  433638:	jmp    0x43369f
  43363a:	cmp    WORD PTR [rdx],0x13
  43363e:	jne    0x43368a
  433640:	mov    edx,DWORD PTR [rdx+0x8]
  433643:	call   0x433454
  433648:	jmp    0x43369f
  43364a:	cmp    WORD PTR [rdx],0x13
  43364e:	jne    0x433655
  433650:	mov    ecx,DWORD PTR [rdx+0x8]
  433653:	jmp    0x43365f
  433655:	cmp    WORD PTR [rdx],0x15
  433659:	jne    0x43368a
  43365b:	mov    rcx,QWORD PTR [rdx+0x8]
  43365f:	lea    rdx,[rdi+0x2]
  433663:	mov    BYTE PTR [rdi],0x30
  433666:	mov    BYTE PTR [rdi+0x1],0x78
  43366a:	call   0x401a84
  43366f:	jmp    0x43369f
  433671:	cmp    WORD PTR [rdx],0x13
  433675:	jne    0x43368a
  433677:	mov    rdx,rcx
  43367a:	mov    ecx,DWORD PTR [rbx+0x8]
  43367d:	call   0x401ad8
  433682:	jmp    0x43369f
  433684:	cmp    WORD PTR [rdx],0x13
  433688:	je     0x433697
  43368a:	mov    rdx,rcx
  43368d:	mov    rcx,rbx
  433690:	call   0x40b4dc
  433695:	jmp    0x43369f
  433697:	mov    edx,DWORD PTR [rdx+0x8]
  43369a:	call   0x433530
  43369f:	add    rsp,0x20
  4336a3:	pop    rdi
  4336a4:	pop    rsi
  4336a5:	pop    rbx
  4336a6:	ret    
  4336a7:	int3   
  4336a8:	rex.W push rbx
  4336aa:	sub    rsp,0x60
  4336ae:	cmp    WORD PTR [rdx],0x8
  4336b2:	mov    rbx,rcx
  4336b5:	jne    0x4336c2
  4336b7:	mov    rdx,QWORD PTR [rdx+0x8]
  4336bb:	call   0x403354
  4336c0:	jmp    0x4336d9
  4336c2:	lea    rcx,[rsp+0x20]
  4336c7:	call   0x433578
  4336cc:	lea    rdx,[rsp+0x20]
  4336d1:	mov    rcx,rbx
  4336d4:	call   0x4034e8
  4336d9:	add    rsp,0x60
  4336dd:	pop    rbx
  4336de:	ret    
  4336df:	int3   
  4336e0:	rex.W push rbx
  4336e2:	push   rbp
  4336e3:	push   rsi
  4336e4:	push   rdi
  4336e5:	push   r12
  4336e7:	push   r13
  4336e9:	sub    rsp,0x38
  4336ed:	cmp    r8d,0x8
  4336f1:	mov    rdi,rdx
  4336f4:	mov    rbx,rcx
  4336f7:	mov    DWORD PTR [r9],0x0
  4336fe:	jae    0x433711
  433700:	lea    rdx,[rip+0x1dc75]        # 0x45137c
  433707:	call   0x402d24
  43370c:	jmp    0x433976
  433711:	cmp    BYTE PTR [rdx],0x1
  433714:	je     0x43371f
  433716:	lea    rdx,[rip+0x1dc53]        # 0x451370
  43371d:	jmp    0x433707
  43371f:	movzx  esi,BYTE PTR [rdx+0x1]
  433723:	lea    eax,[rsi*4+0x8]
  43372a:	cmp    eax,r8d
  43372d:	ja     0x433700
  43372f:	mov    DWORD PTR [r9],eax
  433732:	cmp    BYTE PTR [rdx+0x2],0x0
  433736:	mov    ebp,DWORD PTR [rdx+0x4]
  433739:	bswap  ebp
  43373b:	mov    r13d,0x2
  433741:	jne    0x433793
  433743:	cmp    BYTE PTR [rdx+0x3],0x0
  433747:	jne    0x433793
  433749:	cmp    ebp,0x5
  43374c:	jne    0x433793
  43374e:	cmp    esi,0x1
  433751:	jb     0x433793
  433753:	mov    eax,DWORD PTR [rdx+0x8]
  433756:	cmp    eax,0x16
  433759:	jae    0x43376b
  43375b:	mov    rdx,rax
  43375e:	lea    rax,[rip+0x1d49b]        # 0x450c00
  433765:	mov    rdx,QWORD PTR [rax+rdx*8]
  433769:	jmp    0x433707
  43376b:	cmp    eax,0x20
  43376e:	jne    0x4337e0
  433770:	cmp    esi,r13d
  433773:	jne    0x433793
  433775:	mov    edx,DWORD PTR [rdx+0xc]
  433778:	lea    r8,[rip+0x1d531]        # 0x450cb0
  43377f:	xor    eax,eax
  433781:	mov    rcx,r8
  433784:	cmp    DWORD PTR [rcx],edx
  433786:	je     0x4337d4
  433788:	inc    eax
  43378a:	add    rcx,0x10
  43378e:	cmp    eax,0x16
  433791:	jb     0x433784
  433793:	lea    rdx,[rip+0x1dbce]        # 0x451368
  43379a:	mov    rcx,rbx
  43379d:	call   0x402d24
  4337a2:	cmp    BYTE PTR [rdi+0x2],0x0
  4337a6:	jne    0x433867
  4337ac:	cmp    BYTE PTR [rdi+0x3],0x0
  4337b0:	jne    0x433867
  4337b6:	lea    rdx,[rsp+0x20]
  4337bb:	mov    ecx,ebp
  4337bd:	call   0x401930
  4337c2:	lea    rdx,[rsp+0x20]
  4337c7:	mov    rcx,rbx
  4337ca:	call   0x402d24
  4337cf:	jmp    0x433929
  4337d4:	mov    edx,eax
  4337d6:	add    rdx,rdx
  4337d9:	mov    rdx,QWORD PTR [r8+rdx*8+0x8]
  4337de:	jmp    0x43385f
  4337e0:	cmp    eax,0x15
  4337e3:	jne    0x43380a
  4337e5:	cmp    esi,0x5
  4337e8:	jne    0x433793
  4337ea:	mov    edx,DWORD PTR [rdx+0x18]
  4337ed:	lea    r8,[rip+0x1d61c]        # 0x450e10
  4337f4:	xor    eax,eax
  4337f6:	mov    rcx,r8
  4337f9:	cmp    DWORD PTR [rcx],edx
  4337fb:	je     0x4337d4
  4337fd:	inc    eax
  4337ff:	add    rcx,0x10
  433803:	cmp    eax,0xf
  433806:	jb     0x4337f9
  433808:	jmp    0x433793
  43380a:	cmp    eax,0x50
  43380d:	jne    0x433793
  43380f:	cmp    esi,0x6
  433812:	jne    0x433793
  433818:	xor    r8d,r8d
  43381b:	lea    rdx,[rip+0x1d6de]        # 0x450f00
  433822:	xor    r9d,r9d
  433825:	lea    r10,[rdi+0xc]
  433829:	xor    ecx,ecx
  43382b:	mov    eax,DWORD PTR [r10]
  43382e:	cmp    DWORD PTR [rdx+rcx*4],eax
  433831:	jne    0x433843
  433833:	inc    rcx
  433836:	inc    r9d
  433839:	add    r10,0x4
  43383d:	cmp    rcx,0x5
  433841:	jl     0x43382b
  433843:	cmp    r9d,0x5
  433847:	je     0x43385b
  433849:	inc    r8d
  43384c:	add    rdx,0x20
  433850:	cmp    r8d,0x1
  433854:	jb     0x433822
  433856:	jmp    0x433793
  43385b:	mov    rdx,QWORD PTR [rdx+0x18]
  43385f:	mov    rcx,rbx
  433862:	jmp    0x433707
  433867:	lea    rdx,[rip+0x1daf6]        # 0x451364
  43386e:	mov    rcx,rbx
  433871:	call   0x402d24
  433876:	movzx  r12d,BYTE PTR [r13+rdi*1+0x0]
  43387c:	mov    eax,DWORD PTR [rbx+0x8]
  43387f:	mov    ebp,r12d
  433882:	shr    ebp,0x4
  433885:	cmp    DWORD PTR [rbx+0xc],eax
  433888:	jne    0x433892
  43388a:	mov    rcx,rbx
  43388d:	call   0x402af0
  433892:	mov    r9d,DWORD PTR [rbx+0x8]
  433896:	mov    r8,QWORD PTR [rbx]
  433899:	lea    eax,[rbp+0x37]
  43389c:	movzx  edx,al
  43389f:	cmp    ebp,0xa
  4338a2:	lea    ecx,[rbp+0x30]
  4338a5:	movzx  eax,cl
  4338a8:	cmovb  edx,eax
  4338ab:	and    r12d,0xf
  4338af:	mov    BYTE PTR [r9+r8*1],dl
  4338b3:	inc    r9d
  4338b6:	mov    BYTE PTR [r9+r8*1],0x0
  4338bb:	cmp    DWORD PTR [rbx+0xc],r9d
  4338bf:	mov    DWORD PTR [rbx+0x8],r9d
  4338c3:	jne    0x4338cd
  4338c5:	mov    rcx,rbx
  4338c8:	call   0x402af0
  4338cd:	mov    r9d,DWORD PTR [rbx+0x8]
  4338d1:	mov    r8,QWORD PTR [rbx]
  4338d4:	lea    eax,[r12+0x37]
  4338d9:	movzx  edx,al
  4338dc:	cmp    r12d,0xa
  4338e0:	lea    ecx,[r12+0x30]
  4338e5:	movzx  eax,cl
  4338e8:	cmovb  edx,eax
  4338eb:	mov    BYTE PTR [r9+r8*1],dl
  4338ef:	inc    r9d
  4338f2:	mov    BYTE PTR [r9+r8*1],0x0
  4338f7:	cmp    DWORD PTR [rbx+0xc],r9d
  4338fb:	mov    DWORD PTR [rbx+0x8],r9d
  4338ff:	jne    0x433909
  433901:	mov    rcx,rbx
  433904:	call   0x402af0
  433909:	mov    edx,DWORD PTR [rbx+0x8]
  43390c:	mov    rcx,QWORD PTR [rbx]
  43390f:	inc    r13
  433912:	mov    BYTE PTR [rdx+rcx*1],0x20
  433916:	inc    edx
  433918:	cmp    r13,0x8
  43391c:	mov    BYTE PTR [rdx+rcx*1],0x0
  433920:	mov    DWORD PTR [rbx+0x8],edx
  433923:	jl     0x433876
  433929:	test   esi,esi
  43392b:	je     0x433976
  43392d:	add    rdi,0x8
  433931:	mov    eax,DWORD PTR [rbx+0x8]
  433934:	cmp    DWORD PTR [rbx+0xc],eax
  433937:	jne    0x433941
  433939:	mov    rcx,rbx
  43393c:	call   0x402af0
  433941:	mov    edx,DWORD PTR [rbx+0x8]
  433944:	mov    rcx,QWORD PTR [rbx]
  433947:	mov    BYTE PTR [rdx+rcx*1],0x2d
  43394b:	inc    edx
  43394d:	mov    BYTE PTR [rdx+rcx*1],0x0
  433951:	mov    DWORD PTR [rbx+0x8],edx
  433954:	mov    ecx,DWORD PTR [rdi]
  433956:	lea    rdx,[rsp+0x20]
  43395b:	call   0x401930
  433960:	lea    rdx,[rsp+0x20]
  433965:	mov    rcx,rbx
  433968:	call   0x402d24
  43396d:	add    rdi,0x4
  433971:	dec    rsi
  433974:	jne    0x433931
  433976:	add    rsp,0x38
  43397a:	pop    r13
  43397c:	pop    r12
  43397e:	pop    rdi
  43397f:	pop    rsi
  433980:	pop    rbp
  433981:	pop    rbx
  433982:	ret    
  433983:	int3   
  433984:	rex.W push rbx
  433986:	push   rbp
  433987:	push   rsi
  433988:	push   rdi
  433989:	push   r12
  43398b:	sub    rsp,0x30
  43398f:	movzx  eax,WORD PTR [rdx+0x2]
  433993:	mov    r12,r9
  433996:	mov    esi,r8d
  433999:	test   DWORD PTR [rsp+0x80],eax
  4339a0:	mov    rbx,rdx
  4339a3:	mov    rdi,rcx
  4339a6:	je     0x433a0a
  4339a8:	mov    eax,DWORD PTR [rsp+0x88]
  4339af:	mov    ebp,DWORD PTR [rax+rdx*1]
  4339b2:	mov    eax,DWORD PTR [rcx+0x8]
  4339b5:	cmp    DWORD PTR [rcx+0xc],eax
  4339b8:	jne    0x4339bf
  4339ba:	call   0x402af0
  4339bf:	mov    edx,DWORD PTR [rdi+0x8]
  4339c2:	mov    rcx,QWORD PTR [rdi]
  4339c5:	mov    BYTE PTR [rdx+rcx*1],0x20
  4339c9:	inc    edx
  4339cb:	mov    BYTE PTR [rdx+rcx*1],0x0
  4339cf:	mov    DWORD PTR [rdi+0x8],edx
  4339d2:	mov    rdx,r12
  4339d5:	mov    rcx,rdi
  4339d8:	call   0x402d24
  4339dd:	cmp    ebp,esi
  4339df:	jae    0x433a0a
  4339e1:	sub    esi,ebp
  4339e3:	cmp    esi,0x8
  4339e6:	jb     0x433a0a
  4339e8:	cmp    WORD PTR [rbx+rbp*1],0x2
  4339ed:	jne    0x433a0a
  4339ef:	mov    ecx,DWORD PTR [rbx+rbp*1+0x4]
  4339f3:	lea    rdx,[rsp+0x20]
  4339f8:	call   0x401930
  4339fd:	lea    rdx,[rsp+0x20]
  433a02:	mov    rcx,rdi
  433a05:	call   0x402d24
  433a0a:	add    rsp,0x30
  433a0e:	pop    r12
  433a10:	pop    rdi
  433a11:	pop    rsi
  433a12:	pop    rbp
  433a13:	pop    rbx
  433a14:	ret    
  433a15:	int3   
  433a16:	int3   
  433a17:	int3   
  433a18:	rex.W push rbx
  433a1a:	push   rsi
  433a1b:	push   rdi
  433a1c:	sub    rsp,0x40
  433a20:	mov    rax,QWORD PTR [r8]
  433a23:	mov    DWORD PTR [r8+0x8],0x0
  433a2b:	mov    rbx,r8
  433a2e:	mov    BYTE PTR [rax],0x0
  433a31:	lea    eax,[rdx-0x14]
  433a34:	mov    esi,edx
  433a36:	cmp    eax,0x3ffec
  433a3b:	mov    rdi,rcx
  433a3e:	ja     0x433b5d
  433a44:	cmp    WORD PTR [rcx],0x1
  433a48:	je     0x433a56
  433a4a:	lea    rdx,[rip+0x1d91f]        # 0x451370
  433a51:	jmp    0x433b64
  433a56:	cmp    DWORD PTR [rcx+0x4],edx
  433a59:	jbe    0x433a6c
  433a5b:	lea    rdx,[rip+0x1d91a]        # 0x45137c
  433a62:	mov    rcx,rbx
  433a65:	call   0x402d24
  433a6a:	jmp    0x433a86
  433a6c:	mov    r8d,edx
  433a6f:	mov    edx,DWORD PTR [rcx+0x4]
  433a72:	lea    r9,[rsp+0x68]
  433a77:	sub    r8d,DWORD PTR [rcx+0x4]
  433a7b:	add    rdx,rcx
  433a7e:	mov    rcx,rbx
  433a81:	call   0x4336e0
  433a86:	mov    eax,DWORD PTR [rbx+0x8]
  433a89:	cmp    DWORD PTR [rbx+0xc],eax
  433a8c:	jne    0x433a96
  433a8e:	mov    rcx,rbx
  433a91:	call   0x402af0
  433a96:	mov    r8d,DWORD PTR [rbx+0x8]
  433a9a:	mov    rcx,QWORD PTR [rbx]
  433a9d:	mov    BYTE PTR [r8+rcx*1],0x20
  433aa2:	inc    r8d
  433aa5:	mov    BYTE PTR [r8+rcx*1],0x0
  433aaa:	mov    DWORD PTR [rbx+0x8],r8d
  433aae:	cmp    DWORD PTR [rdi+0x8],esi
  433ab1:	mov    rcx,rbx
  433ab4:	jbe    0x433ac4
  433ab6:	lea    rdx,[rip+0x1d8bf]        # 0x45137c
  433abd:	call   0x402d24
  433ac2:	jmp    0x433adb
  433ac4:	mov    edx,DWORD PTR [rdi+0x8]
  433ac7:	mov    r8d,esi
  433aca:	lea    r9,[rsp+0x68]
  433acf:	sub    r8d,DWORD PTR [rdi+0x8]
  433ad3:	add    rdx,rdi
  433ad6:	call   0x4336e0
  433adb:	lea    r9,[rip+0x1d8a6]        # 0x451388
  433ae2:	mov    r8d,esi
  433ae5:	mov    rdx,rdi
  433ae8:	mov    rcx,rbx
  433aeb:	mov    DWORD PTR [rsp+0x28],0xc
  433af3:	mov    DWORD PTR [rsp+0x20],0x10
  433afb:	call   0x433984
  433b00:	lea    r9,[rip+0x1d87d]        # 0x451384
  433b07:	mov    r8d,esi
  433b0a:	mov    rdx,rdi
  433b0d:	mov    rcx,rbx
  433b10:	mov    DWORD PTR [rsp+0x28],0x10
  433b18:	mov    DWORD PTR [rsp+0x20],0x4
  433b20:	call   0x433984
  433b25:	mov    r11d,DWORD PTR [rbx+0x8]
  433b29:	cmp    DWORD PTR [rbx+0xc],r11d
  433b2d:	jne    0x433b37
  433b2f:	mov    rcx,rbx
  433b32:	call   0x402af0
  433b37:	mov    edx,DWORD PTR [rbx+0x8]
  433b3a:	mov    rcx,QWORD PTR [rbx]
  433b3d:	mov    BYTE PTR [rdx+rcx*1],0x20
  433b41:	inc    edx
  433b43:	mov    BYTE PTR [rdx+rcx*1],0x0
  433b47:	mov    DWORD PTR [rbx+0x8],edx
  433b4a:	lea    rdx,[rsp+0x30]
  433b4f:	mov    ecx,esi
  433b51:	call   0x401930
  433b56:	lea    rdx,[rsp+0x30]
  433b5b:	jmp    0x433b64
  433b5d:	lea    rdx,[rip+0x1d818]        # 0x45137c
  433b64:	mov    rcx,rbx
  433b67:	call   0x402d24
  433b6c:	add    rsp,0x40
  433b70:	pop    rdi
  433b71:	pop    rsi
  433b72:	pop    rbx
  433b73:	ret    
  433b74:	cmp    edx,0x14
  433b77:	mov    r8,rcx
  433b7a:	jb     0x433c6e
  433b80:	cmp    WORD PTR [rcx],0x1
  433b84:	jne    0x433c71
  433b8a:	cmp    edx,0x40000
  433b90:	ja     0x433c6e
  433b96:	mov    ecx,DWORD PTR [rcx+0x4]
  433b99:	cmp    ecx,edx
  433b9b:	jae    0x433c6e
  433ba1:	mov    r9d,edx
  433ba4:	sub    r9d,ecx
  433ba7:	cmp    r9d,0x8
  433bab:	jb     0x433c6e
  433bb1:	cmp    BYTE PTR [rcx+r8*1],0x1
  433bb6:	mov    rax,rcx
  433bb9:	jne    0x433c6e
  433bbf:	lea    eax,[rcx+0x1]
  433bc2:	movzx  eax,BYTE PTR [rax+r8*1]
  433bc7:	lea    eax,[rax*4+0x8]
  433bce:	cmp    eax,r9d
  433bd1:	setbe  al
  433bd4:	test   al,al
  433bd6:	je     0x433c6e
  433bdc:	mov    ecx,DWORD PTR [r8+0x8]
  433be0:	cmp    ecx,edx
  433be2:	jae    0x433c6e
  433be8:	mov    r9d,edx
  433beb:	sub    r9d,ecx
  433bee:	cmp    r9d,0x8
  433bf2:	jb     0x433c6e
  433bf4:	cmp    BYTE PTR [rcx+r8*1],0x1
  433bf9:	mov    rax,rcx
  433bfc:	jne    0x433c6e
  433bfe:	lea    eax,[rcx+0x1]
  433c01:	movzx  eax,BYTE PTR [rax+r8*1]
  433c06:	lea    eax,[rax*4+0x8]
  433c0d:	cmp    eax,r9d
  433c10:	setbe  al
  433c13:	test   al,al
  433c15:	je     0x433c6e
  433c17:	test   BYTE PTR [r8+0x2],0x10
  433c1c:	je     0x433c45
  433c1e:	cmp    DWORD PTR [r8+0xc],edx
  433c22:	jae    0x433c6e
  433c24:	mov    r9d,edx
  433c27:	sub    r9d,DWORD PTR [r8+0xc]
  433c2b:	cmp    r9d,0x8
  433c2f:	jb     0x433c6e
  433c31:	mov    eax,DWORD PTR [r8+0xc]
  433c35:	movzx  ecx,WORD PTR [rax+r8*1+0x2]
  433c3b:	cmp    ecx,r9d
  433c3e:	setbe  al
  433c41:	test   al,al
  433c43:	je     0x433c6e
  433c45:	test   BYTE PTR [r8+0x2],0x4
  433c4a:	je     0x433c71
  433c4c:	cmp    DWORD PTR [r8+0x10],edx
  433c50:	jae    0x433c6e
  433c52:	sub    edx,DWORD PTR [r8+0x10]
  433c56:	cmp    edx,0x8
  433c59:	jb     0x433c6e
  433c5b:	mov    eax,DWORD PTR [r8+0x10]
  433c5f:	movzx  ecx,WORD PTR [rax+r8*1+0x2]
  433c65:	cmp    ecx,edx
  433c67:	setbe  al
  433c6a:	test   al,al
  433c6c:	jne    0x433c71
  433c6e:	xor    al,al
  433c70:	ret    
  433c71:	mov    al,0x1
  433c73:	ret    
  433c74:	rex.W push rbx
  433c76:	push   rbp
  433c77:	push   rsi
  433c78:	push   rdi
  433c79:	push   r12
  433c7b:	push   r13
  433c7d:	sub    rsp,0x78
  433c81:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  433c8a:	mov    rdi,r8
  433c8d:	mov    ebx,edx
  433c8f:	mov    rsi,rcx
  433c92:	mov    DWORD PTR [r8+0x8],0x0
  433c9a:	mov    rax,QWORD PTR [r8]
  433c9d:	mov    WORD PTR [rax],0x0
  433ca2:	mov    DWORD PTR [rsp+0x48],0x0
  433caa:	mov    DWORD PTR [rsp+0x4c],0x0
  433cb2:	lea    rcx,[rsp+0x50]
  433cb7:	call   0x403150
  433cbc:	nop
  433cbd:	lea    rcx,[rsp+0x60]
  433cc2:	call   0x403150
  433cc7:	nop
  433cc8:	mov    r8,rbx
  433ccb:	mov    rdx,rsi
  433cce:	lea    rcx,[rsp+0x48]
  433cd3:	call   0x409564
  433cd8:	test   al,al
  433cda:	je     0x433d50
  433cdc:	cmp    DWORD PTR [rsp+0x48],0xa000000c
  433ce4:	je     0x433cf5
  433ce6:	lea    rdx,[rip+0x1d6c3]        # 0x4513b0
  433ced:	mov    rcx,rdi
  433cf0:	call   0x403560
  433cf5:	lea    rdx,[rsp+0x28]
  433cfa:	lea    rcx,[rsp+0x48]
  433cff:	call   0x4096c8
  433d04:	nop
  433d05:	mov    rdx,rax
  433d08:	mov    rcx,rdi
  433d0b:	call   0x403444
  433d10:	nop
  433d11:	mov    rcx,QWORD PTR [rsp+0x28]
  433d16:	call   0x40215c
  433d1b:	lea    rcx,[rsp+0x48]
  433d20:	call   0x40965c
  433d25:	test   al,al
  433d27:	jne    0x433d46
  433d29:	lea    rdx,[rip+0x1ae78]        # 0x44eba8
  433d30:	mov    rcx,rdi
  433d33:	call   0x403560
  433d38:	lea    rdx,[rsp+0x60]
  433d3d:	mov    rcx,rdi
  433d40:	call   0x403444
  433d45:	nop
  433d46:	mov    ebx,0x1
  433d4b:	jmp    0x433e3f
  433d50:	cmp    ebx,0x8
  433d53:	jae    0x433d5c
  433d55:	xor    bl,bl
  433d57:	jmp    0x433e3f
  433d5c:	movzx  ebp,WORD PTR [rsi+0x4]
  433d60:	lea    eax,[rbp+0x8]
  433d63:	cmp    eax,ebx
  433d65:	jbe    0x433d6e
  433d67:	xor    bl,bl
  433d69:	jmp    0x433e3f
  433d6e:	cmp    WORD PTR [rsi+0x6],0x0
  433d73:	je     0x433d7c
  433d75:	xor    bl,bl
  433d77:	jmp    0x433e3f
  433d7c:	lea    rdx,[rsp+0x38]
  433d81:	mov    ecx,DWORD PTR [rsi]
  433d83:	call   0x401ad8
  433d88:	lea    rdx,[rsp+0x38]
  433d8d:	mov    rcx,rdi
  433d90:	call   0x403560
  433d95:	mov    rcx,rdi
  433d98:	call   0x40393c
  433d9d:	add    rsi,0x8
  433da1:	mov    ebx,0x1
  433da6:	test   ebp,ebp
  433da8:	je     0x433e3f
  433dae:	mov    r13,rbp
  433db1:	movzx  r12d,BYTE PTR [rsi]
  433db5:	mov    ebp,r12d
  433db8:	shr    ebp,0x4
  433dbb:	and    ebp,0xf
  433dbe:	mov    eax,DWORD PTR [rdi+0x8]
  433dc1:	cmp    DWORD PTR [rdi+0xc],eax
  433dc4:	jne    0x433dce
  433dc6:	mov    rcx,rdi
  433dc9:	call   0x402f2c
  433dce:	mov    r8d,DWORD PTR [rdi+0x8]
  433dd2:	mov    rdx,QWORD PTR [rdi]
  433dd5:	lea    eax,[rbp+0x30]
  433dd8:	lea    ecx,[rbp+0x37]
  433ddb:	cmp    ebp,0xa
  433dde:	cmovb  cx,ax
  433de2:	mov    WORD PTR [rdx+r8*2],cx
  433de7:	add    r8d,ebx
  433dea:	mov    WORD PTR [rdx+r8*2],0x0
  433df1:	mov    DWORD PTR [rdi+0x8],r8d
  433df5:	and    r12d,0xf
  433df9:	cmp    DWORD PTR [rdi+0xc],r8d
  433dfd:	jne    0x433e07
  433dff:	mov    rcx,rdi
  433e02:	call   0x402f2c
  433e07:	mov    r8d,DWORD PTR [rdi+0x8]
  433e0b:	mov    rdx,QWORD PTR [rdi]
  433e0e:	lea    eax,[r12+0x30]
  433e13:	lea    ecx,[r12+0x37]
  433e18:	cmp    r12d,0xa
  433e1c:	cmovb  cx,ax
  433e20:	mov    WORD PTR [rdx+r8*2],cx
  433e25:	add    r8d,ebx
  433e28:	mov    WORD PTR [rdx+r8*2],0x0
  433e2f:	mov    DWORD PTR [rdi+0x8],r8d
  433e33:	add    rsi,rbx
  433e36:	sub    r13,rbx
  433e39:	jne    0x433db1
  433e3f:	mov    rcx,QWORD PTR [rsp+0x60]
  433e44:	call   0x40215c
  433e49:	mov    rcx,QWORD PTR [rsp+0x50]
  433e4e:	call   0x40215c
  433e53:	mov    al,bl
  433e55:	add    rsp,0x78
  433e59:	pop    r13
  433e5b:	pop    r12
  433e5d:	pop    rdi
  433e5e:	pop    rsi
  433e5f:	pop    rbp
  433e60:	pop    rbx
  433e61:	ret    
  433e62:	int3   
  433e63:	int3   
  433e64:	rex.W push rbp
  433e66:	sub    rsp,0x20
  433e6a:	mov    rbp,rdx
  433e6d:	lea    rcx,[rbp+0x48]
  433e71:	add    rcx,0x8
  433e75:	call   0x401000
  433e7a:	add    rsp,0x20
  433e7e:	pop    rbp
  433e7f:	ret    
  433e80:	int3   
  433e81:	int3   
  433e82:	int3   
  433e83:	int3   
  433e84:	rex.W push rbp
  433e86:	sub    rsp,0x20
  433e8a:	mov    rbp,rdx
  433e8d:	lea    rcx,[rbp+0x48]
  433e91:	call   0x412650
  433e96:	add    rsp,0x20
  433e9a:	pop    rbp
  433e9b:	ret    
  433e9c:	int3   
  433e9d:	int3   
  433e9e:	int3   
  433e9f:	int3   
  433ea0:	int3   
  433ea1:	int3   
  433ea2:	int3   
  433ea3:	int3   
  433ea4:	rex.W push rbp
  433ea6:	sub    rsp,0x20
  433eaa:	mov    rbp,rdx
  433ead:	lea    rcx,[rbp+0x28]
  433eb1:	call   0x401000
  433eb6:	add    rsp,0x20
  433eba:	pop    rbp
  433ebb:	ret    
  433ebc:	rex.W push rbx
  433ebe:	push   rsi
  433ebf:	push   r12
  433ec1:	push   r13
  433ec3:	push   r14
  433ec5:	push   r15
  433ec7:	sub    rsp,0x88
  433ece:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  433ed7:	mov    r14,rdx
  433eda:	cmp    DWORD PTR [rdx+0x8],0x0
  433ede:	jne    0x433ee7
  433ee0:	xor    eax,eax
  433ee2:	jmp    0x434220
  433ee7:	mov    QWORD PTR [rsp+0xc8],0x0
  433ef3:	mov    rax,QWORD PTR [rcx]
  433ef6:	lea    r8,[rsp+0xc8]
  433efe:	lea    rdx,[rip+0x1fee3]        # 0x453de8
  433f05:	call   QWORD PTR [rax]
  433f07:	cmp    QWORD PTR [rsp+0xc8],0x0
  433f10:	jne    0x433f19
  433f12:	xor    eax,eax
  433f14:	jmp    0x434220
  433f19:	xor    r12d,r12d
  433f1c:	mov    QWORD PTR [rsp+0x58],r12
  433f21:	xor    esi,esi
  433f23:	mov    DWORD PTR [rsp+0x60],esi
  433f27:	mov    DWORD PTR [rsp+0x64],esi
  433f2b:	mov    ebx,DWORD PTR [r14+0x8]
  433f2f:	lea    ecx,[rbx+rbx*2]
  433f32:	shl    ecx,0x3
  433f35:	add    rcx,0x8
  433f39:	call   0x402130
  433f3e:	mov    QWORD PTR [rsp+0xd0],rax
  433f46:	test   rax,rax
  433f49:	je     0x433f74
  433f4b:	mov    DWORD PTR [rax],ebx
  433f4d:	lea    r15,[rax+0x8]
  433f51:	lea    r13,[rip+0xfffffffffffd78d8]        # 0x40b830
  433f58:	mov    QWORD PTR [rsp+0x20],r13
  433f5d:	lea    r9,[rip+0xfffffffffffd78b8]        # 0x40b81c
  433f64:	mov    r8d,ebx
  433f67:	lea    edx,[rsi+0x18]
  433f6a:	mov    rcx,r15
  433f6d:	call   0x44b490
  433f72:	jmp    0x433f77
  433f74:	xor    r15d,r15d
  433f77:	mov    QWORD PTR [rsp+0xd8],r15
  433f7f:	xor    r13d,r13d
  433f82:	mov    DWORD PTR [rsp+0x30],r13d
  433f87:	cmp    r13d,DWORD PTR [r14+0x8]
  433f8b:	jae    0x4340f5
  433f91:	mov    rax,QWORD PTR [r14]
  433f94:	mov    rbx,QWORD PTR [rax+r13*8]
  433f98:	mov    WORD PTR [rsp+0x68],0x0
  433f9f:	mov    WORD PTR [rsp+0x6a],0x0
  433fa6:	mov    QWORD PTR [rsp+0x70],0x0
  433faf:	mov    rdx,rbx
  433fb2:	lea    rcx,[rsp+0x48]
  433fb7:	call   0x403208
  433fbc:	nop
  433fbd:	cmp    DWORD PTR [rbx+0x18],0x0
  433fc1:	jne    0x43402c
  433fc3:	mov    edx,DWORD PTR [rsp+0x50]
  433fc7:	test   edx,edx
  433fc9:	je     0x434084
  433fcf:	lea    ecx,[rdx-0x1]
  433fd2:	mov    rax,QWORD PTR [rsp+0x48]
  433fd7:	movzx  r8d,WORD PTR [rax+rcx*2]
  433fdc:	cmp    r8w,0x2d
  433fe1:	jne    0x433ff5
  433fe3:	xor    edx,edx
  433fe5:	lea    rcx,[rsp+0x68]
  433fea:	call   0x40b254
  433fef:	mov    edx,DWORD PTR [rsp+0x50]
  433ff3:	jmp    0x43400c
  433ff5:	cmp    r8w,0x2b
  433ffa:	jne    0x43400c
  433ffc:	mov    dl,0x1
  433ffe:	lea    rcx,[rsp+0x68]
  434003:	call   0x40b254
  434008:	mov    edx,DWORD PTR [rsp+0x50]
  43400c:	cmp    WORD PTR [rsp+0x68],0x0
  434012:	je     0x434084
  434014:	mov    eax,0xffffffff
  434019:	add    edx,eax
  43401b:	mov    DWORD PTR [rsp+0x50],edx
  43401f:	mov    rax,QWORD PTR [rsp+0x48]
  434024:	mov    WORD PTR [rax+rdx*2],0x0
  43402a:	jmp    0x434084
  43402c:	lea    rdx,[rsp+0xd0]
  434034:	mov    rcx,QWORD PTR [rbx+0x10]
  434038:	call   0x403ea0
  43403d:	mov    rdx,rax
  434040:	mov    rax,QWORD PTR [rsp+0xd0]
  434048:	cmp    WORD PTR [rax],0x0
  43404c:	jne    0x434076
  43404e:	cmp    DWORD PTR [rbx+0x18],0x0
  434052:	je     0x434076
  434054:	mov    eax,0xffffffff
  434059:	cmp    rdx,rax
  43405c:	ja     0x43406a
  43405e:	lea    rcx,[rsp+0x68]
  434063:	call   0x40b288
  434068:	jmp    0x434084
  43406a:	lea    rcx,[rsp+0x68]
  43406f:	call   0x40b2b4
  434074:	jmp    0x434084
  434076:	lea    rdx,[rbx+0x10]
  43407a:	lea    rcx,[rsp+0x68]
  43407f:	call   0x40b1a0
  434084:	mov    ecx,0x10
  434089:	call   0x402130
  43408e:	mov    QWORD PTR [rsp+0x40],rax
  434093:	test   rax,rax
  434096:	je     0x4340a7
  434098:	lea    rdx,[rsp+0x48]
  43409d:	mov    rcx,rax
  4340a0:	call   0x403208
  4340a5:	jmp    0x4340a9
  4340a7:	xor    eax,eax
  4340a9:	mov    rdx,rax
  4340ac:	lea    rcx,[rsp+0x58]
  4340b1:	call   0x4010c8
  4340b6:	lea    rax,[r13+r13*2+0x0]
  4340bb:	lea    rcx,[r15+rax*8]
  4340bf:	lea    rdx,[rsp+0x68]
  4340c4:	call   0x40b188
  4340c9:	nop
  4340ca:	mov    rcx,QWORD PTR [rsp+0x48]
  4340cf:	call   0x40215c
  4340d4:	nop
  4340d5:	lea    rcx,[rsp+0x68]
  4340da:	call   0x40b028
  4340df:	inc    r13d
  4340e2:	mov    DWORD PTR [rsp+0x30],r13d
  4340e7:	mov    esi,DWORD PTR [rsp+0x60]
  4340eb:	mov    r12,QWORD PTR [rsp+0x58]
  4340f0:	jmp    0x433f87
  4340f5:	xor    r13d,r13d
  4340f8:	mov    QWORD PTR [rsp+0x48],r13
  4340fd:	xor    r9d,r9d
  434100:	mov    DWORD PTR [rsp+0x50],r9d
  434105:	mov    DWORD PTR [rsp+0x54],r9d
  43410a:	xor    ebx,ebx
  43410c:	mov    DWORD PTR [rsp+0x30],ebx
  434110:	cmp    ebx,esi
  434112:	jae    0x434137
  434114:	mov    rcx,QWORD PTR [r12+rbx*8]
  434118:	mov    rdx,QWORD PTR [rcx]
  43411b:	lea    rcx,[rsp+0x48]
  434120:	call   0x4010c8
  434125:	inc    ebx
  434127:	mov    DWORD PTR [rsp+0x30],ebx
  43412b:	mov    r9d,DWORD PTR [rsp+0x50]
  434130:	mov    r13,QWORD PTR [rsp+0x48]
  434135:	jmp    0x434110
  434137:	mov    rcx,QWORD PTR [rsp+0xc8]
  43413f:	mov    rax,QWORD PTR [rcx]
  434142:	mov    r8,r15
  434145:	mov    rdx,r13
  434148:	call   QWORD PTR [rax+0x18]
  43414b:	mov    r14d,eax
  43414e:	test   eax,eax
  434150:	je     0x4341aa
  434152:	mov    rcx,r13
  434155:	call   0x40215c
  43415a:	nop
  43415b:	mov    DWORD PTR [rsp+0x34],esi
  43415f:	test   esi,esi
  434161:	je     0x434189
  434163:	mov    eax,0xffffffff
  434168:	add    esi,eax
  43416a:	mov    DWORD PTR [rsp+0x34],esi
  43416e:	mov    rbx,QWORD PTR [r12+rsi*8]
  434172:	test   rbx,rbx
  434175:	je     0x43415f
  434177:	mov    rcx,QWORD PTR [rbx]
  43417a:	call   0x40215c
  43417f:	mov    rcx,rbx
  434182:	call   0x40215c
  434187:	jmp    0x43415f
  434189:	mov    rcx,r12
  43418c:	call   0x40215c
  434191:	nop
  434192:	mov    rcx,QWORD PTR [rsp+0xc8]
  43419a:	test   rcx,rcx
  43419d:	je     0x4341a5
  43419f:	mov    rax,QWORD PTR [rcx]
  4341a2:	call   QWORD PTR [rax+0x10]
  4341a5:	mov    eax,r14d
  4341a8:	jmp    0x434220
  4341aa:	mov    rcx,r13
  4341ad:	call   0x40215c
  4341b2:	nop
  4341b3:	test   r15,r15
  4341b6:	je     0x4341da
  4341b8:	lea    r9,[rip+0xfffffffffffd7671]        # 0x40b830
  4341bf:	mov    r8d,DWORD PTR [r15-0x8]
  4341c3:	mov    edx,0x18
  4341c8:	mov    rcx,r15
  4341cb:	call   0x44b5f0
  4341d0:	lea    rcx,[r15-0x8]
  4341d4:	call   0x40215c
  4341d9:	nop
  4341da:	test   esi,esi
  4341dc:	je     0x434202
  4341de:	mov    eax,0xffffffff
  4341e3:	add    esi,eax
  4341e5:	mov    rbx,QWORD PTR [r12+rsi*8]
  4341e9:	test   rbx,rbx
  4341ec:	je     0x4341fe
  4341ee:	mov    rcx,QWORD PTR [rbx]
  4341f1:	call   0x40215c
  4341f6:	mov    rcx,rbx
  4341f9:	call   0x40215c
  4341fe:	test   esi,esi
  434200:	jne    0x4341de
  434202:	mov    rcx,r12
  434205:	call   0x40215c
  43420a:	nop
  43420b:	mov    rcx,QWORD PTR [rsp+0xc8]
  434213:	test   rcx,rcx
  434216:	je     0x43421e
  434218:	mov    rdx,QWORD PTR [rcx]
  43421b:	call   QWORD PTR [rdx+0x10]
  43421e:	xor    eax,eax
  434220:	add    rsp,0x88
  434227:	pop    r15
  434229:	pop    r14
  43422b:	pop    r13
  43422d:	pop    r12
  43422f:	pop    rsi
  434230:	pop    rbx
  434231:	ret    
  434232:	int3   
  434233:	int3   
  434234:	int3   
  434235:	int3   
  434236:	int3   
  434237:	int3   
  434238:	int3   
  434239:	int3   
  43423a:	int3   
  43423b:	int3   
  43423c:	rex.W push rbp
  43423e:	sub    rsp,0x20
  434242:	mov    rbp,rdx
  434245:	lea    rcx,[rbp+0xc8]
  43424c:	call   0x4176b4
  434251:	add    rsp,0x20
  434255:	pop    rbp
  434256:	ret    
  434257:	int3   
  434258:	int3   
  434259:	int3   
  43425a:	int3   
  43425b:	int3   
  43425c:	rex.W push rbp
  43425e:	sub    rsp,0x20
  434262:	mov    rbp,rdx
  434265:	lea    rcx,[rbp+0x58]
  434269:	call   0x4047cc
  43426e:	add    rsp,0x20
  434272:	pop    rbp
  434273:	ret    
  434274:	int3   
  434275:	int3   
  434276:	int3   
  434277:	int3   
  434278:	int3   
  434279:	int3   
  43427a:	int3   
  43427b:	int3   
  43427c:	rex.W push rbp
  43427e:	sub    rsp,0x20
  434282:	mov    rbp,rdx
  434285:	mov    rcx,QWORD PTR [rbp+0xd0]
  43428c:	call   0x40215c
  434291:	add    rsp,0x20
  434295:	pop    rbp
  434296:	ret    
  434297:	int3   
  434298:	int3   
  434299:	int3   
  43429a:	int3   
  43429b:	int3   
  43429c:	rex.W push rbp
  43429e:	sub    rsp,0x20
  4342a2:	mov    rbp,rdx
  4342a5:	lea    rcx,[rbp+0x68]
  4342a9:	call   0x40b830
  4342ae:	add    rsp,0x20
  4342b2:	pop    rbp
  4342b3:	ret    
  4342b4:	int3   
  4342b5:	int3   
  4342b6:	int3   
  4342b7:	int3   
  4342b8:	int3   
  4342b9:	int3   
  4342ba:	int3   
  4342bb:	int3   
  4342bc:	rex.W push rbp
  4342be:	sub    rsp,0x20
  4342c2:	mov    rbp,rdx
  4342c5:	lea    rcx,[rbp+0x48]
  4342c9:	call   0x401000
  4342ce:	add    rsp,0x20
  4342d2:	pop    rbp
  4342d3:	ret    
  4342d4:	int3   
  4342d5:	int3   
  4342d6:	int3   
  4342d7:	int3   
  4342d8:	int3   
  4342d9:	int3   
  4342da:	int3   
  4342db:	int3   
  4342dc:	rex.W push rbp
  4342de:	sub    rsp,0x20
  4342e2:	mov    rbp,rdx
  4342e5:	mov    rcx,QWORD PTR [rbp+0x40]
  4342e9:	call   0x40215c
  4342ee:	add    rsp,0x20
  4342f2:	pop    rbp
  4342f3:	ret    
  4342f4:	int3   
  4342f5:	int3   
  4342f6:	int3   
  4342f7:	int3   
  4342f8:	int3   
  4342f9:	int3   
  4342fa:	int3   
  4342fb:	int3   
  4342fc:	rex.W push rbp
  4342fe:	sub    rsp,0x20
  434302:	mov    rbp,rdx
  434305:	lea    rcx,[rbp+0x48]
  434309:	call   0x401000
  43430e:	add    rsp,0x20
  434312:	pop    rbp
  434313:	ret    
  434314:	int3   
  434315:	int3   
  434316:	int3   
  434317:	int3   
  434318:	int3   
  434319:	int3   
  43431a:	int3   
  43431b:	int3   
  43431c:	mov    QWORD PTR [rsp+0x10],rdx
  434321:	push   rbx
  434322:	push   rbp
  434323:	sub    rsp,0x38
  434327:	mov    rbp,rdx
  43432a:	mov    rcx,QWORD PTR [rbp+0xd8]
  434331:	test   rcx,rcx
  434334:	je     0x434356
  434336:	lea    rbx,[rcx-0x8]
  43433a:	lea    r9,[rip+0xfffffffffffd74ef]        # 0x40b830
  434341:	mov    r8d,DWORD PTR [rbx]
  434344:	mov    edx,0x18
  434349:	call   0x44b5f0
  43434e:	mov    rcx,rbx
  434351:	call   0x40215c
  434356:	xor    edx,edx
  434358:	xor    ecx,ecx
  43435a:	call   0x44b71e
  43435f:	nop
  434360:	add    rsp,0x38
  434364:	pop    rbp
  434365:	pop    rbx
  434366:	ret    
  434367:	int3   
  434368:	rex.W push rbx
  43436a:	push   rbp
  43436b:	push   rsi
  43436c:	push   rdi
  43436d:	push   r12
  43436f:	push   r13
  434371:	sub    rsp,0x28
  434375:	mov    edi,edx
  434377:	mov    r13,r9
  43437a:	mov    ebp,r8d
  43437d:	mov    r10d,DWORD PTR [rcx+rdi*4]
  434381:	lea    ebx,[rdi+rdi*1]
  434384:	mov    rsi,rcx
  434387:	cmp    ebx,r8d
  43438a:	mov    DWORD PTR [rsp+0x68],r10d
  43438f:	ja     0x4343e0
  434391:	cmp    ebx,r8d
  434394:	jae    0x4343af
  434396:	mov    r8,QWORD PTR [rsp+0x80]
  43439e:	lea    rdx,[rsi+rbx*4]
  4343a2:	lea    rcx,[rdx+0x4]
  4343a6:	call   r13
  4343a9:	test   eax,eax
  4343ab:	jle    0x4343af
  4343ad:	inc    ebx
  4343af:	mov    r8,QWORD PTR [rsp+0x80]
  4343b7:	lea    r12,[rsi+rbx*4]
  4343bb:	lea    rcx,[rsp+0x68]
  4343c0:	mov    rdx,r12
  4343c3:	call   r13
  4343c6:	test   eax,eax
  4343c8:	jns    0x4343db
  4343ca:	mov    eax,DWORD PTR [r12]
  4343ce:	mov    ecx,edi
  4343d0:	mov    edi,ebx
  4343d2:	add    ebx,ebx
  4343d4:	mov    DWORD PTR [rsi+rcx*4],eax
  4343d7:	cmp    ebx,ebp
  4343d9:	jbe    0x434394
  4343db:	mov    r10d,DWORD PTR [rsp+0x68]
  4343e0:	mov    eax,edi
  4343e2:	mov    DWORD PTR [rsi+rax*4],r10d
  4343e6:	add    rsp,0x28
  4343ea:	pop    r13
  4343ec:	pop    r12
  4343ee:	pop    rdi
  4343ef:	pop    rsi
  4343f0:	pop    rbp
  4343f1:	pop    rbx
  4343f2:	ret    
  4343f3:	int3   
  4343f4:	rex.W push rbx
  4343f6:	push   rbp
  4343f7:	push   rsi
  4343f8:	push   rdi
  4343f9:	push   r12
  4343fb:	sub    rsp,0x30
  4343ff:	movsxd rbx,DWORD PTR [rcx+0x8]
  434403:	mov    rbp,r8
  434406:	mov    r12,rdx
  434409:	cmp    ebx,0x1
  43440c:	jbe    0x434462
  43440e:	mov    rsi,QWORD PTR [rcx]
  434411:	mov    edi,ebx
  434413:	shr    edi,1
  434415:	lea    rcx,[rsi-0x4]
  434419:	mov    r9,r12
  43441c:	mov    r8d,ebx
  43441f:	mov    edx,edi
  434421:	mov    QWORD PTR [rsp+0x20],rbp
  434426:	call   0x434368
  43442b:	add    edi,0xffffffff
  43442e:	jne    0x434415
  434430:	lea    rdi,[rsi+rbx*4-0x4]
  434435:	mov    ecx,DWORD PTR [rdi]
  434437:	mov    eax,DWORD PTR [rsi]
  434439:	add    ebx,0xffffffff
  43443c:	mov    DWORD PTR [rdi],eax
  43443e:	mov    DWORD PTR [rsi],ecx
  434440:	lea    rcx,[rsi-0x4]
  434444:	mov    r9,r12
  434447:	mov    r8d,ebx
  43444a:	mov    edx,0x1
  43444f:	sub    rdi,0x4
  434453:	mov    QWORD PTR [rsp+0x20],rbp
  434458:	call   0x434368
  43445d:	cmp    ebx,0x1
  434460:	ja     0x434435
  434462:	add    rsp,0x30
  434466:	pop    r12
  434468:	pop    rdi
  434469:	pop    rsi
  43446a:	pop    rbp
  43446b:	pop    rbx
  43446c:	ret    
  43446d:	int3   
  43446e:	int3   
  43446f:	int3   
  434470:	mov    eax,DWORD PTR [rdx]
  434472:	mov    r9,rcx
  434475:	mov    rcx,QWORD PTR [r8]
  434478:	mov    rdx,QWORD PTR [rcx+rax*8]
  43447c:	mov    eax,DWORD PTR [r9]
  43447f:	mov    rcx,QWORD PTR [rcx+rax*8]
  434483:	mov    rdx,QWORD PTR [rdx]
  434486:	mov    rcx,QWORD PTR [rcx]
  434489:	jmp    0x4042ec
  43448e:	int3   
  43448f:	int3   
  434490:	rex.W push rbx
  434492:	push   rbp
  434493:	push   rsi
  434494:	push   rdi
  434495:	sub    rsp,0x28
  434499:	mov    edi,DWORD PTR [rcx+0x8]
  43449c:	xor    ebx,ebx
  43449e:	mov    rsi,rdx
  4344a1:	cmp    edi,DWORD PTR [rdx+0xc]
  4344a4:	mov    rbp,rcx
  4344a7:	mov    DWORD PTR [rdx+0x8],ebx
  4344aa:	jbe    0x4344cc
  4344ac:	mov    rcx,QWORD PTR [rdx]
  4344af:	call   0x40215c
  4344b4:	mov    rcx,rdi
  4344b7:	mov    QWORD PTR [rsi],rbx
  4344ba:	shl    rcx,0x2
  4344be:	mov    DWORD PTR [rsi+0xc],ebx
  4344c1:	call   0x402130
  4344c6:	mov    DWORD PTR [rsi+0xc],edi
  4344c9:	mov    QWORD PTR [rsi],rax
  4344cc:	cmp    edi,ebx
  4344ce:	mov    DWORD PTR [rsi+0x8],edi
  4344d1:	je     0x4344f6
  4344d3:	mov    rax,QWORD PTR [rsi]
  4344d6:	jbe    0x4344e4
  4344d8:	mov    DWORD PTR [rax],ebx
  4344da:	inc    ebx
  4344dc:	add    rax,0x4
  4344e0:	cmp    ebx,edi
  4344e2:	jb     0x4344d8
  4344e4:	lea    rdx,[rip+0xffffffffffffff85]        # 0x434470
  4344eb:	mov    r8,rbp
  4344ee:	mov    rcx,rsi
  4344f1:	call   0x4343f4
  4344f6:	add    rsp,0x28
  4344fa:	pop    rdi
  4344fb:	pop    rsi
  4344fc:	pop    rbp
  4344fd:	pop    rbx
  4344fe:	ret    
  4344ff:	int3   
  434500:	rex.W push rbx
  434502:	push   rdi
  434503:	sub    rsp,0x28
  434507:	cmp    DWORD PTR [rcx+0x8],0x0
  43450b:	mov    rbx,rcx
  43450e:	je     0x434551
  434510:	mov    ecx,DWORD PTR [rbx+0x8]
  434513:	mov    rax,QWORD PTR [rbx]
  434516:	dec    ecx
  434518:	mov    rcx,QWORD PTR [rax+rcx*8]
  43451c:	mov    rcx,QWORD PTR [rcx]
  43451f:	call   0x406fec
  434524:	mov    r11d,DWORD PTR [rbx+0x8]
  434528:	mov    rax,QWORD PTR [rbx]
  43452b:	dec    r11d
  43452e:	mov    rdi,QWORD PTR [rax+r11*8]
  434532:	test   rdi,rdi
  434535:	je     0x434547
  434537:	mov    rcx,QWORD PTR [rdi]
  43453a:	call   0x40215c
  43453f:	mov    rcx,rdi
  434542:	call   0x40215c
  434547:	add    DWORD PTR [rbx+0x8],0xffffffff
  43454b:	cmp    DWORD PTR [rbx+0x8],0x0
  43454f:	jne    0x434510
  434551:	add    rsp,0x28
  434555:	pop    rdi
  434556:	pop    rbx
  434557:	ret    
  434558:	rex.W push rbx
  43455a:	sub    rsp,0x20
  43455e:	mov    rbx,rdx
  434561:	lea    r8,[rcx+0x20]
  434565:	lea    rdx,[rcx+0x10]
  434569:	mov    rcx,rbx
  43456c:	mov    DWORD PTR [rsp+0x30],0x0
  434574:	call   0x4030d4
  434579:	mov    rax,rbx
  43457c:	add    rsp,0x20
  434580:	pop    rbx
  434581:	ret    
  434582:	int3   
  434583:	int3   
  434584:	rex.W push rbx
  434586:	sub    rsp,0x20
  43458a:	xor    r8d,r8d
  43458d:	mov    rbx,rcx
  434590:	mov    DWORD PTR [rsp+0x30],0x0
  434598:	call   0x403dc0
  43459d:	mov    rax,rbx
  4345a0:	add    rsp,0x20
  4345a4:	pop    rbx
  4345a5:	ret    
  4345a6:	int3   
  4345a7:	int3   
  4345a8:	mov    QWORD PTR [rsp+0x8],rcx
  4345ad:	push   rbx
  4345ae:	sub    rsp,0x30
  4345b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4345bb:	mov    rbx,rcx
  4345be:	call   0x407aa4
  4345c3:	nop
  4345c4:	mov    rcx,QWORD PTR [rbx+0x8]
  4345c8:	add    rsp,0x30
  4345cc:	pop    rbx
  4345cd:	jmp    0x40215c
  4345d2:	int3   
  4345d3:	int3   
  4345d4:	int3   
  4345d5:	int3   
  4345d6:	int3   
  4345d7:	int3   
  4345d8:	rex.W push rbp
  4345da:	sub    rsp,0x20
  4345de:	mov    rbp,rdx
  4345e1:	mov    rcx,QWORD PTR [rbp+0x40]
  4345e5:	add    rcx,0x8
  4345e9:	call   0x401000
  4345ee:	add    rsp,0x20
  4345f2:	pop    rbp
  4345f3:	ret    
  4345f4:	mov    QWORD PTR [rsp+0x8],rcx
  4345f9:	push   rbx
  4345fa:	sub    rsp,0x40
  4345fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  434607:	mov    rbx,rcx
  43460a:	cmp    BYTE PTR [rcx+0x10],0x0
  43460e:	je     0x434658
  434610:	lea    rcx,[rsp+0x28]
  434615:	call   0x403150
  43461a:	nop
  43461b:	lea    rcx,[rsp+0x28]
  434620:	call   0x40a210
  434625:	test   al,al
  434627:	je     0x43464d
  434629:	mov    eax,DWORD PTR [rbx+0x8]
  43462c:	cmp    DWORD PTR [rsp+0x30],eax
  434630:	jne    0x434644
  434632:	mov    rdx,QWORD PTR [rbx]
  434635:	mov    rcx,QWORD PTR [rsp+0x28]
  43463a:	call   QWORD PTR [rip+0x18d08]        # 0x44d348
  434640:	test   eax,eax
  434642:	je     0x43464d
  434644:	mov    rcx,QWORD PTR [rbx]
  434647:	call   0x4070bc
  43464c:	nop
  43464d:	mov    rcx,QWORD PTR [rsp+0x28]
  434652:	call   0x40215c
  434657:	nop
  434658:	mov    rcx,QWORD PTR [rbx]
  43465b:	add    rsp,0x40
  43465f:	pop    rbx
  434660:	jmp    0x40215c
  434665:	int3   
  434666:	int3   
  434667:	int3   
  434668:	int3   
  434669:	int3   
  43466a:	int3   
  43466b:	int3   
  43466c:	int3   
  43466d:	int3   
  43466e:	int3   
  43466f:	int3   
  434670:	int3   
  434671:	int3   
  434672:	int3   
  434673:	int3   
  434674:	rex.W push rbp
  434676:	sub    rsp,0x20
  43467a:	mov    rbp,rdx
  43467d:	mov    rcx,QWORD PTR [rbp+0x50]
  434681:	call   0x401000
  434686:	add    rsp,0x20
  43468a:	pop    rbp
  43468b:	ret    
  43468c:	int3   
  43468d:	int3   
  43468e:	int3   
  43468f:	int3   
  434690:	int3   
  434691:	int3   
  434692:	int3   
  434693:	int3   
  434694:	rex.W push rbp
  434696:	sub    rsp,0x20
  43469a:	mov    rbp,rdx
  43469d:	lea    rcx,[rbp+0x28]
  4346a1:	call   0x401000
  4346a6:	add    rsp,0x20
  4346aa:	pop    rbp
  4346ab:	ret    
  4346ac:	cmp    r8d,0x3
  4346b0:	mov    r10,rcx
  4346b3:	jb     0x4346bb
  4346b5:	mov    eax,0x80030001
  4346ba:	ret    
  4346bb:	test   r8d,r8d
  4346be:	je     0x4346de
  4346c0:	dec    r8d
  4346c3:	je     0x4346d8
  4346c5:	dec    r8d
  4346c8:	jne    0x4346e2
  4346ca:	mov    rax,QWORD PTR [rcx+0x20]
  4346ce:	lea    rcx,[rdx+rax*1]
  4346d2:	mov    QWORD PTR [r10+0x18],rcx
  4346d6:	jmp    0x4346e2
  4346d8:	add    QWORD PTR [rcx+0x18],rdx
  4346dc:	jmp    0x4346e2
  4346de:	mov    QWORD PTR [rcx+0x18],rdx
  4346e2:	test   r9,r9
  4346e5:	mov    rax,QWORD PTR [r10+0x18]
  4346e9:	mov    QWORD PTR [r10+0x10],rax
  4346ed:	je     0x4346f2
  4346ef:	mov    QWORD PTR [r9],rax
  4346f2:	mov    DWORD PTR [r10+0xc],0x0
  4346fa:	xor    eax,eax
  4346fc:	ret    
  4346fd:	int3   
  4346fe:	int3   
  4346ff:	int3   
  434700:	rex.W push rbx
  434702:	push   rbp
  434703:	push   rsi
  434704:	push   rdi
  434705:	sub    rsp,0x48
  434709:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  434712:	mov    ebp,r8d
  434715:	mov    rbx,rdx
  434718:	mov    rsi,rcx
  43471b:	call   0x4032f8
  434720:	lea    rdx,[rsi+0x10]
  434724:	lea    r8,[rsi+0x20]
  434728:	mov    rcx,rbx
  43472b:	call   0x4043f8
  434730:	cmp    ebp,0x2
  434733:	je     0x4347e8
  434739:	cmp    ebp,0x1
  43473c:	jne    0x43474f
  43473e:	xor    ebx,ebx
  434740:	mov    DWORD PTR [rsi+0x38],ebx
  434743:	mov    rax,QWORD PTR [rsi+0x30]
  434747:	mov    WORD PTR [rax],bx
  43474a:	jmp    0x4347e8
  43474f:	mov    dx,0x2e
  434753:	lea    rcx,[rsi+0x20]
  434757:	call   0x4035f4
  43475c:	mov    ebp,eax
  43475e:	xor    ebx,ebx
  434760:	cmp    eax,ebx
  434762:	jl     0x4347e8
  434768:	mov    ecx,DWORD PTR [rsi+0x28]
  43476b:	dec    ecx
  43476d:	cmp    ebp,ecx
  43476f:	jne    0x43478c
  434771:	add    DWORD PTR [rsi+0x28],0xffffffff
  434775:	mov    ecx,DWORD PTR [rsi+0x28]
  434778:	mov    rax,QWORD PTR [rsi+0x20]
  43477c:	mov    WORD PTR [rax+rcx*2],bx
  434780:	mov    DWORD PTR [rsi+0x38],ebx
  434783:	mov    rax,QWORD PTR [rsi+0x30]
  434787:	mov    WORD PTR [rax],bx
  43478a:	jmp    0x4347e8
  43478c:	lea    ecx,[rbp+0x1]
  43478f:	mov    rax,QWORD PTR [rsi+0x20]
  434793:	lea    rdx,[rax+rcx*2]
  434797:	lea    rcx,[rsp+0x28]
  43479c:	call   0x4031c0
  4347a1:	nop
  4347a2:	mov    rdx,QWORD PTR [rsp+0x28]
  4347a7:	mov    rcx,QWORD PTR [rsi+0x30]
  4347ab:	call   0x40272c
  4347b0:	cmp    al,bl
  4347b2:	je     0x4347d4
  4347b4:	lea    rdx,[rsp+0x28]
  4347b9:	lea    rcx,[rsi+0x30]
  4347bd:	call   0x4032f8
  4347c2:	cmp    ebp,DWORD PTR [rsi+0x28]
  4347c5:	jae    0x4347de
  4347c7:	mov    DWORD PTR [rsi+0x28],ebp
  4347ca:	mov    rax,QWORD PTR [rsi+0x20]
  4347ce:	mov    WORD PTR [rax+rbp*2],bx
  4347d2:	jmp    0x4347de
  4347d4:	mov    DWORD PTR [rsi+0x38],ebx
  4347d7:	mov    rax,QWORD PTR [rsi+0x30]
  4347db:	mov    WORD PTR [rax],bx
  4347de:	mov    rcx,QWORD PTR [rsp+0x28]
  4347e3:	call   0x40215c
  4347e8:	add    rsp,0x48
  4347ec:	pop    rdi
  4347ed:	pop    rsi
  4347ee:	pop    rbp
  4347ef:	pop    rbx
  4347f0:	ret    
  4347f1:	int3   
  4347f2:	int3   
  4347f3:	int3   
  4347f4:	int3   
  4347f5:	int3   
  4347f6:	int3   
  4347f7:	int3   
  4347f8:	int3   
  4347f9:	int3   
  4347fa:	int3   
  4347fb:	int3   
  4347fc:	int3   
  4347fd:	int3   
  4347fe:	int3   
  4347ff:	int3   
  434800:	rex.W push rbp
  434802:	sub    rsp,0x20
  434806:	mov    rbp,rdx
  434809:	lea    rcx,[rbp+0x28]
  43480d:	call   0x401000
  434812:	add    rsp,0x20
  434816:	pop    rbp
  434817:	ret    
  434818:	mov    QWORD PTR [rsp+0x10],rdx
  43481d:	push   rbx
  43481e:	push   rdi
  43481f:	sub    rsp,0x38
  434823:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43482c:	mov    rbx,rdx
  43482f:	mov    rdi,rcx
  434832:	mov    DWORD PTR [rsp+0x50],0x0
  43483a:	call   0x434558
  43483f:	mov    DWORD PTR [rsp+0x50],0x1
  434847:	cmp    DWORD PTR [rdi+0x38],0x0
  43484b:	je     0x434880
  43484d:	mov    eax,DWORD PTR [rbx+0x8]
  434850:	cmp    DWORD PTR [rbx+0xc],eax
  434853:	jne    0x43485d
  434855:	mov    rcx,rbx
  434858:	call   0x402f2c
  43485d:	mov    edx,DWORD PTR [rbx+0x8]
  434860:	mov    rcx,QWORD PTR [rbx]
  434863:	mov    WORD PTR [rcx+rdx*2],0x2e
  434869:	inc    edx
  43486b:	mov    WORD PTR [rcx+rdx*2],0x0
  434871:	mov    DWORD PTR [rbx+0x8],edx
  434874:	lea    rdx,[rdi+0x30]
  434878:	mov    rcx,rbx
  43487b:	call   0x403444
  434880:	mov    rax,rbx
  434883:	add    rsp,0x38
  434887:	pop    rdi
  434888:	pop    rbx
  434889:	ret    
  43488a:	int3   
  43488b:	int3   
  43488c:	int3   
  43488d:	int3   
  43488e:	int3   
  43488f:	int3   
  434890:	int3   
  434891:	int3   
  434892:	int3   
  434893:	int3   
  434894:	int3   
  434895:	int3   
  434896:	int3   
  434897:	int3   
  434898:	rex.W push rbp
  43489a:	sub    rsp,0x20
  43489e:	mov    rbp,rdx
  4348a1:	mov    eax,DWORD PTR [rbp+0x50]
  4348a4:	and    eax,0x1
  4348a7:	test   eax,eax
  4348a9:	je     0x4348b8
  4348ab:	and    DWORD PTR [rbp+0x50],0xfffffffe
  4348af:	mov    rcx,QWORD PTR [rbp+0x58]
  4348b3:	call   0x401000
  4348b8:	add    rsp,0x20
  4348bc:	pop    rbp
  4348bd:	ret    
  4348be:	int3   
  4348bf:	int3   
  4348c0:	mov    QWORD PTR [rsp+0x10],rdx
  4348c5:	push   rbx
  4348c6:	push   rdi
  4348c7:	sub    rsp,0x38
  4348cb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4348d4:	mov    rbx,rdx
  4348d7:	mov    rdi,rcx
  4348da:	mov    DWORD PTR [rsp+0x50],0x0
  4348e2:	call   0x434558
  4348e7:	mov    DWORD PTR [rsp+0x50],0x1
  4348ef:	cmp    DWORD PTR [rdi+0x38],0x0
  4348f3:	je     0x434928
  4348f5:	mov    eax,DWORD PTR [rbx+0x8]
  4348f8:	cmp    DWORD PTR [rbx+0xc],eax
  4348fb:	jne    0x434905
  4348fd:	mov    rcx,rbx
  434900:	call   0x402f2c
  434905:	mov    edx,DWORD PTR [rbx+0x8]
  434908:	mov    rcx,QWORD PTR [rbx]
  43490b:	mov    WORD PTR [rcx+rdx*2],0x2e
  434911:	inc    edx
  434913:	mov    WORD PTR [rcx+rdx*2],0x0
  434919:	mov    DWORD PTR [rbx+0x8],edx
  43491c:	lea    rdx,[rdi+0x40]
  434920:	mov    rcx,rbx
  434923:	call   0x403444
  434928:	mov    rax,rbx
  43492b:	add    rsp,0x38
  43492f:	pop    rdi
  434930:	pop    rbx
  434931:	ret    
  434932:	int3   
  434933:	int3   
  434934:	int3   
  434935:	int3   
  434936:	int3   
  434937:	int3   
  434938:	int3   
  434939:	int3   
  43493a:	int3   
  43493b:	int3   
  43493c:	int3   
  43493d:	int3   
  43493e:	int3   
  43493f:	int3   
  434940:	rex.W push rbp
  434942:	sub    rsp,0x20
  434946:	mov    rbp,rdx
  434949:	mov    eax,DWORD PTR [rbp+0x50]
  43494c:	and    eax,0x1
  43494f:	test   eax,eax
  434951:	je     0x434960
  434953:	and    DWORD PTR [rbp+0x50],0xfffffffe
  434957:	mov    rcx,QWORD PTR [rbp+0x58]
  43495b:	call   0x401000
  434960:	add    rsp,0x20
  434964:	pop    rbp
  434965:	ret    
  434966:	int3   
  434967:	int3   
  434968:	mov    QWORD PTR [rsp+0x10],rdx
  43496d:	push   rbx
  43496e:	push   rdi
  43496f:	sub    rsp,0x38
  434973:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43497c:	mov    rbx,rdx
  43497f:	mov    rdi,rcx
  434982:	mov    DWORD PTR [rsp+0x50],0x0
  43498a:	lea    rdx,[rcx+0x58]
  43498e:	mov    rcx,rbx
  434991:	call   0x403208
  434996:	mov    DWORD PTR [rsp+0x50],0x1
  43499e:	lea    rdx,[rdi+0x20]
  4349a2:	mov    rcx,rbx
  4349a5:	call   0x403444
  4349aa:	cmp    DWORD PTR [rdi+0x38],0x0
  4349ae:	je     0x4349e3
  4349b0:	mov    eax,DWORD PTR [rbx+0x8]
  4349b3:	cmp    DWORD PTR [rbx+0xc],eax
  4349b6:	jne    0x4349c0
  4349b8:	mov    rcx,rbx
  4349bb:	call   0x402f2c
  4349c0:	mov    edx,DWORD PTR [rbx+0x8]
  4349c3:	mov    rcx,QWORD PTR [rbx]
  4349c6:	mov    WORD PTR [rcx+rdx*2],0x2e
  4349cc:	inc    edx
  4349ce:	mov    WORD PTR [rcx+rdx*2],0x0
  4349d4:	mov    DWORD PTR [rbx+0x8],edx
  4349d7:	lea    rdx,[rdi+0x30]
  4349db:	mov    rcx,rbx
  4349de:	call   0x403444
  4349e3:	lea    rdx,[rip+0x1cafe]        # 0x4514e8
  4349ea:	mov    rcx,rbx
  4349ed:	call   0x403560
  4349f2:	lea    rdx,[rdi+0x68]
  4349f6:	mov    rcx,rbx
  4349f9:	call   0x403444
  4349fe:	mov    rax,rbx
  434a01:	add    rsp,0x38
  434a05:	pop    rdi
  434a06:	pop    rbx
  434a07:	ret    
  434a08:	int3   
  434a09:	int3   
  434a0a:	int3   
  434a0b:	int3   
  434a0c:	int3   
  434a0d:	int3   
  434a0e:	int3   
  434a0f:	int3   
  434a10:	int3   
  434a11:	int3   
  434a12:	int3   
  434a13:	int3   
  434a14:	int3   
  434a15:	int3   
  434a16:	int3   
  434a17:	int3   
  434a18:	rex.W push rbp
  434a1a:	sub    rsp,0x20
  434a1e:	mov    rbp,rdx
  434a21:	mov    eax,DWORD PTR [rbp+0x50]
  434a24:	and    eax,0x1
  434a27:	test   eax,eax
  434a29:	je     0x434a38
  434a2b:	and    DWORD PTR [rbp+0x50],0xfffffffe
  434a2f:	mov    rcx,QWORD PTR [rbp+0x58]
  434a33:	call   0x401000
  434a38:	add    rsp,0x20
  434a3c:	pop    rbp
  434a3d:	ret    
  434a3e:	int3   
  434a3f:	int3   
  434a40:	rex.W push rbx
  434a42:	sub    rsp,0x20
  434a46:	cmp    DWORD PTR [rcx+0x24],0x2
  434a4a:	je     0x434a50
  434a4c:	xor    al,al
  434a4e:	jmp    0x434a65
  434a50:	xor    ebx,ebx
  434a52:	cmp    BYTE PTR [rcx+0x20],bl
  434a55:	jne    0x434a5b
  434a57:	mov    al,0x1
  434a59:	jmp    0x434a65
  434a5b:	call   0x40450c
  434a60:	cmp    al,bl
  434a62:	sete   al
  434a65:	add    rsp,0x20
  434a69:	pop    rbx
  434a6a:	ret    
  434a6b:	int3   
  434a6c:	mov    QWORD PTR [rsp+0x20],r9
  434a71:	mov    BYTE PTR [rsp+0x10],dl
  434a75:	push   rbx
  434a76:	push   rbp
  434a77:	push   rsi
  434a78:	push   rdi
  434a79:	push   r12
  434a7b:	push   r13
  434a7d:	push   r14
  434a7f:	push   r15
  434a81:	sub    rsp,0x48
  434a85:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  434a8e:	mov    rsi,r9
  434a91:	mov    r13,r8
  434a94:	mov    al,dl
  434a96:	mov    r15,rcx
  434a99:	mov    r12,QWORD PTR [r8]
  434a9c:	mov    r14,QWORD PTR [rcx]
  434a9f:	xor    ebp,ebp
  434aa1:	movzx  ebx,WORD PTR [r14]
  434aa5:	movzx  edi,WORD PTR [r12]
  434aaa:	test   bx,bx
  434aad:	je     0x434b69
  434ab3:	sub    r14,r12
  434ab6:	test   di,di
  434ab9:	je     0x434b5a
  434abf:	cmp    bx,di
  434ac2:	je     0x434b41
  434ac4:	cmp    BYTE PTR [rip+0x33f2d],0x0        # 0x4689f8
  434acb:	jne    0x434b29
  434acd:	cmp    bx,0x61
  434ad1:	jae    0x434ad8
  434ad3:	mov    si,bx
  434ad6:	jmp    0x434afa
  434ad8:	cmp    bx,0x7a
  434adc:	ja     0x434ae3
  434ade:	lea    esi,[rbx-0x20]
  434ae1:	jmp    0x434afa
  434ae3:	cmp    bx,0x7f
  434ae7:	ja     0x434aee
  434ae9:	mov    si,bx
  434aec:	jmp    0x434afa
  434aee:	movzx  ecx,bx
  434af1:	call   QWORD PTR [rip+0x187c1]        # 0x44d2b8
  434af7:	mov    rsi,rax
  434afa:	cmp    di,0x61
  434afe:	jae    0x434b05
  434b00:	mov    ax,di
  434b03:	jmp    0x434b24
  434b05:	cmp    di,0x7a
  434b09:	ja     0x434b10
  434b0b:	lea    eax,[rdi-0x20]
  434b0e:	jmp    0x434b24
  434b10:	cmp    di,0x7f
  434b14:	ja     0x434b1b
  434b16:	mov    ax,di
  434b19:	jmp    0x434b24
  434b1b:	movzx  ecx,di
  434b1e:	call   QWORD PTR [rip+0x18794]        # 0x44d2b8
  434b24:	cmp    si,ax
  434b27:	je     0x434b41
  434b29:	cmp    bx,0x5c
  434b2d:	je     0x434b35
  434b2f:	cmp    bx,0x2f
  434b33:	jne    0x434b5a
  434b35:	cmp    di,0x5c
  434b39:	je     0x434b41
  434b3b:	cmp    di,0x2f
  434b3f:	jne    0x434b5a
  434b41:	inc    ebp
  434b43:	add    r12,0x2
  434b47:	mov    bx,WORD PTR [r14+r12*1]
  434b4c:	mov    di,WORD PTR [r12]
  434b51:	test   bx,bx
  434b54:	jne    0x434ab6
  434b5a:	mov    al,BYTE PTR [rsp+0x98]
  434b61:	mov    rsi,QWORD PTR [rsp+0xa8]
  434b69:	mov    r9,QWORD PTR [r15]
  434b6c:	cmp    WORD PTR [r9+rbp*2],0x0
  434b72:	jne    0x434ba6
  434b74:	mov    rdx,QWORD PTR [r13+0x0]
  434b78:	cmp    WORD PTR [rdx+rbp*2],0x0
  434b7d:	je     0x434bd0
  434b7f:	cmp    WORD PTR [rdx+rbp*2],0x5c
  434b84:	je     0x434bd0
  434b86:	cmp    WORD PTR [rdx+rbp*2],0x2f
  434b8b:	je     0x434bd0
  434b8d:	test   ebp,ebp
  434b8f:	je     0x434bd0
  434b91:	lea    eax,[rbp-0x1]
  434b94:	cmp    WORD PTR [rdx+rax*2],0x5c
  434b99:	je     0x434bd0
  434b9b:	cmp    WORD PTR [rdx+rax*2],0x2f
  434ba0:	je     0x434bd0
  434ba2:	xor    al,al
  434ba4:	jmp    0x434bff
  434ba6:	test   al,al
  434ba8:	je     0x434bfd
  434baa:	mov    rdx,QWORD PTR [r13+0x0]
  434bae:	cmp    WORD PTR [rdx+rbp*2],0x0
  434bb3:	jne    0x434bfd
  434bb5:	cmp    WORD PTR [r9+rbp*2],0x5c
  434bbb:	je     0x434bc5
  434bbd:	cmp    WORD PTR [r9+rbp*2],0x2f
  434bc3:	jne    0x434bfd
  434bc5:	lea    eax,[rbp+0x1]
  434bc8:	cmp    WORD PTR [r9+rax*2],0x0
  434bce:	jne    0x434bfd
  434bd0:	lea    r8,[rdx+rbp*2]
  434bd4:	lea    rdx,[r15+0x10]
  434bd8:	lea    rcx,[rsp+0x28]
  434bdd:	call   0x403108
  434be2:	nop
  434be3:	mov    rdx,rax
  434be6:	mov    rcx,rsi
  434be9:	call   0x4032f8
  434bee:	nop
  434bef:	mov    rcx,QWORD PTR [rsp+0x28]
  434bf4:	call   0x40215c
  434bf9:	mov    al,0x1
  434bfb:	jmp    0x434bff
  434bfd:	xor    al,al
  434bff:	add    rsp,0x48
  434c03:	pop    r15
  434c05:	pop    r14
  434c07:	pop    r13
  434c09:	pop    r12
  434c0b:	pop    rdi
  434c0c:	pop    rsi
  434c0d:	pop    rbp
  434c0e:	pop    rbx
  434c0f:	ret    
  434c10:	int3   
  434c11:	int3   
  434c12:	int3   
  434c13:	int3   
  434c14:	int3   
  434c15:	int3   
  434c16:	int3   
  434c17:	int3   
  434c18:	int3   
  434c19:	int3   
  434c1a:	int3   
  434c1b:	int3   
  434c1c:	rex.W push rbp
  434c1e:	sub    rsp,0x20
  434c22:	mov    rbp,rdx
  434c25:	lea    rcx,[rbp+0x28]
  434c29:	call   0x401000
  434c2e:	add    rsp,0x20
  434c32:	pop    rbp
  434c33:	ret    
  434c34:	mov    rcx,QWORD PTR [rcx+0x10]
  434c38:	jmp    0x40215c
  434c3d:	int3   
  434c3e:	int3   
  434c3f:	int3   
  434c40:	rex.W push rbx
  434c42:	push   rdi
  434c43:	sub    rsp,0x28
  434c47:	mov    rbx,rdx
  434c4a:	mov    rdi,rcx
  434c4d:	call   0x4032f8
  434c52:	lea    rdx,[rbx+0x10]
  434c56:	lea    rcx,[rdi+0x10]
  434c5a:	call   0x4032f8
  434c5f:	lea    rdx,[rbx+0x20]
  434c63:	lea    rcx,[rdi+0x20]
  434c67:	call   0x4032f8
  434c6c:	lea    rdx,[rbx+0x30]
  434c70:	lea    rcx,[rdi+0x30]
  434c74:	call   0x4032f8
  434c79:	lea    rdx,[rbx+0x40]
  434c7d:	lea    rcx,[rdi+0x40]
  434c81:	call   0x4032f8
  434c86:	mov    r11b,BYTE PTR [rbx+0x50]
  434c8a:	lea    rdx,[rbx+0x58]
  434c8e:	lea    rcx,[rdi+0x58]
  434c92:	mov    BYTE PTR [rdi+0x50],r11b
  434c96:	call   0x4032f8
  434c9b:	lea    rdx,[rbx+0x68]
  434c9f:	lea    rcx,[rdi+0x68]
  434ca3:	call   0x4032f8
  434ca8:	mov    rax,rdi
  434cab:	add    rsp,0x28
  434caf:	pop    rdi
  434cb0:	pop    rbx
  434cb1:	ret    
  434cb2:	int3   
  434cb3:	int3   
  434cb4:	rex.W push rbx
  434cb6:	push   rsi
  434cb7:	push   rdi
  434cb8:	sub    rsp,0x20
  434cbc:	cmp    rdx,rcx
  434cbf:	mov    rsi,rdx
  434cc2:	mov    rbx,rcx
  434cc5:	je     0x434d17
  434cc7:	mov    edi,DWORD PTR [rdx+0x8]
  434cca:	cmp    edi,DWORD PTR [rcx+0xc]
  434ccd:	jbe    0x434cfe
  434ccf:	mov    rcx,QWORD PTR [rcx]
  434cd2:	call   0x40215c
  434cd7:	mov    rcx,rdi
  434cda:	mov    DWORD PTR [rbx+0xc],0x0
  434ce1:	shl    rcx,0x3
  434ce5:	mov    DWORD PTR [rbx+0x8],0x0
  434cec:	mov    QWORD PTR [rbx],0x0
  434cf3:	call   0x402130
  434cf8:	mov    DWORD PTR [rbx+0xc],edi
  434cfb:	mov    QWORD PTR [rbx],rax
  434cfe:	test   edi,edi
  434d00:	mov    DWORD PTR [rbx+0x8],edi
  434d03:	je     0x434d17
  434d05:	mov    rdx,QWORD PTR [rsi]
  434d08:	mov    rcx,QWORD PTR [rbx]
  434d0b:	mov    r8,rdi
  434d0e:	shl    r8,0x3
  434d12:	call   0x44b480
  434d17:	mov    rax,rbx
  434d1a:	add    rsp,0x20
  434d1e:	pop    rdi
  434d1f:	pop    rsi
  434d20:	pop    rbx
  434d21:	ret    
  434d22:	int3   
  434d23:	int3   
  434d24:	rex.W push rbx
  434d26:	push   rbp
  434d27:	push   rsi
  434d28:	push   rdi
  434d29:	push   r12
  434d2b:	push   r13
  434d2d:	sub    rsp,0x28
  434d31:	mov    edi,edx
  434d33:	mov    r13,r9
  434d36:	mov    ebp,r8d
  434d39:	mov    rax,QWORD PTR [rcx+rdi*8]
  434d3d:	lea    ebx,[rdi+rdi*1]
  434d40:	mov    rsi,rcx
  434d43:	cmp    ebx,r8d
  434d46:	mov    QWORD PTR [rsp+0x60],rax
  434d4b:	ja     0x434d9d
  434d4d:	cmp    ebx,r8d
  434d50:	jae    0x434d6b
  434d52:	mov    r8,QWORD PTR [rsp+0x80]
  434d5a:	lea    rdx,[rsi+rbx*8]
  434d5e:	lea    rcx,[rdx+0x8]
  434d62:	call   r13
  434d65:	test   eax,eax
  434d67:	jle    0x434d6b
  434d69:	inc    ebx
  434d6b:	mov    r8,QWORD PTR [rsp+0x80]
  434d73:	lea    r12,[rsi+rbx*8]
  434d77:	lea    rcx,[rsp+0x60]
  434d7c:	mov    rdx,r12
  434d7f:	call   r13
  434d82:	test   eax,eax
  434d84:	jns    0x434d98
  434d86:	mov    rax,QWORD PTR [r12]
  434d8a:	mov    ecx,edi
  434d8c:	mov    edi,ebx
  434d8e:	add    ebx,ebx
  434d90:	mov    QWORD PTR [rsi+rcx*8],rax
  434d94:	cmp    ebx,ebp
  434d96:	jbe    0x434d50
  434d98:	mov    rax,QWORD PTR [rsp+0x60]
  434d9d:	mov    ecx,edi
  434d9f:	mov    QWORD PTR [rsi+rcx*8],rax
  434da3:	add    rsp,0x28
  434da7:	pop    r13
  434da9:	pop    r12
  434dab:	pop    rdi
  434dac:	pop    rsi
  434dad:	pop    rbp
  434dae:	pop    rbx
  434daf:	ret    
  434db0:	rex.W push rbx
  434db2:	sub    rsp,0x20
  434db6:	mov    rbx,rcx
  434db9:	mov    rcx,QWORD PTR [rcx+0x10]
  434dbd:	call   0x40215c
  434dc2:	mov    rcx,QWORD PTR [rbx+0x8]
  434dc6:	test   rcx,rcx
  434dc9:	je     0x434dd1
  434dcb:	mov    rax,QWORD PTR [rcx]
  434dce:	call   QWORD PTR [rax+0x10]
  434dd1:	add    rsp,0x20
  434dd5:	pop    rbx
  434dd6:	ret    
  434dd7:	int3   
  434dd8:	rex.W push rbx
  434dda:	push   rbp
  434ddb:	push   rsi
  434ddc:	push   rdi
  434ddd:	sub    rsp,0x28
  434de1:	mov    rsi,rdx
  434de4:	mov    rdi,r8
  434de7:	mov    rbx,rcx
  434dea:	mov    QWORD PTR [r8],0x0
  434df1:	mov    ebp,0x10
  434df6:	lea    rdx,[rip+0x1fff3]        # 0x454df0
  434dfd:	mov    r8,rbp
  434e00:	mov    rcx,rsi
  434e03:	call   0x44b786
  434e08:	test   eax,eax
  434e0a:	je     0x434e38
  434e0c:	lea    rdx,[rip+0x1f105]        # 0x453f18
  434e13:	mov    r8,rbp
  434e16:	mov    rcx,rsi
  434e19:	call   0x44b786
  434e1e:	test   eax,eax
  434e20:	je     0x434e38
  434e22:	lea    rdx,[rip+0x1f0cf]        # 0x453ef8
  434e29:	mov    r8,rbp
  434e2c:	mov    rcx,rsi
  434e2f:	call   0x44b786
  434e34:	test   eax,eax
  434e36:	jne    0x434e42
  434e38:	mov    QWORD PTR [rdi],rbx
  434e3b:	inc    DWORD PTR [rbx+0x8]
  434e3e:	xor    eax,eax
  434e40:	jmp    0x434e47
  434e42:	mov    eax,0x80004002
  434e47:	add    rsp,0x28
  434e4b:	pop    rdi
  434e4c:	pop    rsi
  434e4d:	pop    rbp
  434e4e:	pop    rbx
  434e4f:	ret    
  434e50:	inc    DWORD PTR [rcx+0x8]
  434e53:	mov    eax,DWORD PTR [rcx+0x8]
  434e56:	ret    
  434e57:	int3   
  434e58:	sub    rsp,0x28
  434e5c:	add    DWORD PTR [rcx+0x8],0xffffffff
  434e60:	mov    eax,DWORD PTR [rcx+0x8]
  434e63:	jne    0x434e72
  434e65:	mov    rax,QWORD PTR [rcx]
  434e68:	mov    edx,0x1
  434e6d:	call   QWORD PTR [rax+0x30]
  434e70:	xor    eax,eax
  434e72:	add    rsp,0x28
  434e76:	ret    
  434e77:	int3   
  434e78:	rex.W push rbx
  434e7a:	push   rdi
  434e7b:	sub    rsp,0x28
  434e7f:	lea    rax,[rip+0x1c692]        # 0x451518
  434e86:	mov    rbx,rcx
  434e89:	mov    edi,edx
  434e8b:	mov    QWORD PTR [rcx],rax
  434e8e:	mov    rcx,QWORD PTR [rcx+0x20]
  434e92:	test   rcx,rcx
  434e95:	je     0x434e9d
  434e97:	mov    rax,QWORD PTR [rcx]
  434e9a:	call   QWORD PTR [rax+0x10]
  434e9d:	test   dil,0x1
  434ea1:	je     0x434eab
  434ea3:	mov    rcx,rbx
  434ea6:	call   0x40215c
  434eab:	mov    rax,rbx
  434eae:	add    rsp,0x28
  434eb2:	pop    rdi
  434eb3:	pop    rbx
  434eb4:	ret    
  434eb5:	int3   
  434eb6:	int3   
  434eb7:	int3   
  434eb8:	rex.W push rbx
  434eba:	push   rsi
  434ebb:	push   rdi
  434ebc:	sub    rsp,0x30
  434ec0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  434ec9:	mov    rsi,rdx
  434ecc:	mov    rdi,rcx
  434ecf:	mov    ecx,0x30
  434ed4:	call   0x402130
  434ed9:	mov    rbx,rax
  434edc:	mov    QWORD PTR [rsp+0x50],rax
  434ee1:	test   rax,rax
  434ee4:	je     0x434f2f
  434ee6:	mov    r8,QWORD PTR [rsi]
  434ee9:	mov    QWORD PTR [rax],r8
  434eec:	mov    rdx,QWORD PTR [rsi+0x8]
  434ef0:	mov    QWORD PTR [rax+0x8],rdx
  434ef4:	lea    rdx,[rsi+0x10]
  434ef8:	lea    rcx,[rax+0x10]
  434efc:	call   0x403208
  434f01:	mov    r11b,BYTE PTR [rsi+0x20]
  434f05:	mov    BYTE PTR [rbx+0x20],r11b
  434f09:	mov    al,BYTE PTR [rsi+0x21]
  434f0c:	mov    BYTE PTR [rbx+0x21],al
  434f0f:	mov    al,BYTE PTR [rsi+0x22]
  434f12:	mov    BYTE PTR [rbx+0x22],al
  434f15:	mov    al,BYTE PTR [rsi+0x23]
  434f18:	mov    BYTE PTR [rbx+0x23],al
  434f1b:	mov    al,BYTE PTR [rsi+0x24]
  434f1e:	mov    BYTE PTR [rbx+0x24],al
  434f21:	mov    eax,DWORD PTR [rsi+0x28]
  434f24:	mov    DWORD PTR [rbx+0x28],eax
  434f27:	mov    eax,DWORD PTR [rsi+0x2c]
  434f2a:	mov    DWORD PTR [rbx+0x2c],eax
  434f2d:	jmp    0x434f31
  434f2f:	xor    ebx,ebx
  434f31:	mov    ecx,DWORD PTR [rdi+0x8]
  434f34:	mov    rax,QWORD PTR [rdi]
  434f37:	mov    QWORD PTR [rax+rcx*8],rbx
  434f3b:	inc    DWORD PTR [rdi+0x8]
  434f3e:	add    rsp,0x30
  434f42:	pop    rdi
  434f43:	pop    rsi
  434f44:	pop    rbx
  434f45:	ret    
  434f46:	int3   
  434f47:	int3   
  434f48:	rex.W push rbp
  434f4a:	sub    rsp,0x20
  434f4e:	mov    rbp,rdx
  434f51:	mov    rcx,QWORD PTR [rbp+0x50]
  434f55:	call   0x40215c
  434f5a:	add    rsp,0x20
  434f5e:	pop    rbp
  434f5f:	ret    
  434f60:	rex.W push rbx
  434f62:	push   rbp
  434f63:	push   rsi
  434f64:	push   rdi
  434f65:	sub    rsp,0x28
  434f69:	movsxd rbx,DWORD PTR [rcx+0x8]
  434f6d:	mov    rdi,rcx
  434f70:	test   ebx,ebx
  434f72:	mov    rsi,rbx
  434f75:	je     0x434fa3
  434f77:	shl    rsi,0x3
  434f7b:	mov    rax,QWORD PTR [rdi]
  434f7e:	sub    rsi,0x8
  434f82:	add    ebx,0xffffffff
  434f85:	mov    rbp,QWORD PTR [rsi+rax*1]
  434f89:	test   rbp,rbp
  434f8c:	je     0x434f9f
  434f8e:	mov    rcx,QWORD PTR [rbp+0x10]
  434f92:	call   0x40215c
  434f97:	mov    rcx,rbp
  434f9a:	call   0x40215c
  434f9f:	test   ebx,ebx
  434fa1:	jne    0x434f7b
  434fa3:	mov    rcx,QWORD PTR [rdi]
  434fa6:	add    rsp,0x28
  434faa:	pop    rdi
  434fab:	pop    rsi
  434fac:	pop    rbp
  434fad:	pop    rbx
  434fae:	jmp    0x40215c
  434fb3:	int3   
  434fb4:	rex.W push rbx
  434fb6:	push   rbp
  434fb7:	push   rsi
  434fb8:	push   rdi
  434fb9:	sub    rsp,0x28
  434fbd:	mov    rdi,rcx
  434fc0:	mov    ecx,DWORD PTR [rcx+0xc]
  434fc3:	mov    rbx,rdx
  434fc6:	cmp    DWORD PTR [rdi+0x8],ecx
  434fc9:	jne    0x435009
  434fcb:	mov    eax,ecx
  434fcd:	shr    eax,0x2
  434fd0:	lea    ebp,[rax+rcx*1+0x1]
  434fd4:	mov    ecx,ebp
  434fd6:	shl    rcx,0x3
  434fda:	call   0x402130
  434fdf:	cmp    DWORD PTR [rdi+0x8],0x0
  434fe3:	mov    rsi,rax
  434fe6:	je     0x434ffb
  434fe8:	mov    r8d,DWORD PTR [rdi+0x8]
  434fec:	mov    rdx,QWORD PTR [rdi]
  434fef:	mov    rcx,rax
  434ff2:	shl    r8,0x3
  434ff6:	call   0x44b480
  434ffb:	mov    rcx,QWORD PTR [rdi]
  434ffe:	call   0x40215c
  435003:	mov    QWORD PTR [rdi],rsi
  435006:	mov    DWORD PTR [rdi+0xc],ebp
  435009:	mov    ecx,DWORD PTR [rdi+0x8]
  43500c:	mov    rax,QWORD PTR [rdi]
  43500f:	mov    QWORD PTR [rax+rcx*8],rbx
  435013:	mov    eax,DWORD PTR [rdi+0x8]
  435016:	lea    ecx,[rax+0x1]
  435019:	mov    DWORD PTR [rdi+0x8],ecx
  43501c:	add    rsp,0x28
  435020:	pop    rdi
  435021:	pop    rsi
  435022:	pop    rbp
  435023:	pop    rbx
  435024:	ret    
  435025:	int3   
  435026:	int3   
  435027:	int3   
  435028:	rex.W push rbx
  43502a:	push   rbp
  43502b:	push   rsi
  43502c:	push   rdi
  43502d:	push   r12
  43502f:	sub    rsp,0x30
  435033:	movsxd rbx,DWORD PTR [rcx+0x8]
  435037:	mov    rbp,r8
  43503a:	mov    r12,rdx
  43503d:	cmp    ebx,0x1
  435040:	jbe    0x43509a
  435042:	mov    rsi,QWORD PTR [rcx]
  435045:	mov    edi,ebx
  435047:	shr    edi,1
  435049:	lea    rcx,[rsi-0x8]
  43504d:	mov    r9,r12
  435050:	mov    r8d,ebx
  435053:	mov    edx,edi
  435055:	mov    QWORD PTR [rsp+0x20],rbp
  43505a:	call   0x434d24
  43505f:	add    edi,0xffffffff
  435062:	jne    0x435049
  435064:	lea    rdi,[rsi+rbx*8-0x8]
  435069:	mov    rcx,QWORD PTR [rsi]
  43506c:	mov    rax,QWORD PTR [rdi]
  43506f:	add    ebx,0xffffffff
  435072:	mov    QWORD PTR [rdi],rcx
  435075:	lea    rcx,[rsi-0x8]
  435079:	mov    r9,r12
  43507c:	mov    r8d,ebx
  43507f:	mov    edx,0x1
  435084:	sub    rdi,0x8
  435088:	mov    QWORD PTR [rsi],rax
  43508b:	mov    QWORD PTR [rsp+0x20],rbp
  435090:	call   0x434d24
  435095:	cmp    ebx,0x1
  435098:	ja     0x435069
  43509a:	add    rsp,0x30
  43509e:	pop    r12
  4350a0:	pop    rdi
  4350a1:	pop    rsi
  4350a2:	pop    rbp
  4350a3:	pop    rbx
  4350a4:	ret    
  4350a5:	int3   
  4350a6:	int3   
  4350a7:	int3   
  4350a8:	rex.W push rbx
  4350aa:	push   rsi
  4350ab:	push   rdi
  4350ac:	sub    rsp,0x20
  4350b0:	mov    rbx,rcx
  4350b3:	mov    ecx,DWORD PTR [rcx+0xc]
  4350b6:	cmp    DWORD PTR [rbx+0x8],ecx
  4350b9:	jne    0x435138
  4350bb:	mov    eax,ecx
  4350bd:	shr    eax,0x2
  4350c0:	lea    esi,[rax+rcx*1+0x1]
  4350c4:	lea    ecx,[rsi+rsi*4]
  4350c7:	shl    ecx,0x2
  4350ca:	call   0x402130
  4350cf:	xor    edx,edx
  4350d1:	cmp    rax,rdx
  4350d4:	mov    rdi,rax
  4350d7:	je     0x43510c
  4350d9:	lea    eax,[rsi-0x1]
  4350dc:	cmp    eax,edx
  4350de:	jl     0x43510f
  4350e0:	lea    rcx,[rdi+0x2]
  4350e4:	lea    r8d,[rdx-0x1]
  4350e8:	mov    BYTE PTR [rcx-0x2],dl
  4350eb:	mov    BYTE PTR [rcx-0x1],dl
  4350ee:	mov    BYTE PTR [rcx],dl
  4350f0:	mov    BYTE PTR [rcx+0x1],dl
  4350f3:	mov    DWORD PTR [rcx+0x2],r8d
  4350f7:	mov    DWORD PTR [rcx+0x6],r8d
  4350fb:	mov    DWORD PTR [rcx+0xa],r8d
  4350ff:	mov    BYTE PTR [rcx+0xe],dl
  435102:	add    rcx,0x14
  435106:	dec    eax
  435108:	jns    0x4350e8
  43510a:	jmp    0x43510f
  43510c:	mov    rdi,rdx
  43510f:	cmp    DWORD PTR [rbx+0x8],edx
  435112:	je     0x43512a
  435114:	mov    eax,DWORD PTR [rbx+0x8]
  435117:	mov    rdx,QWORD PTR [rbx]
  43511a:	mov    rcx,rdi
  43511d:	lea    r8,[rax+rax*4]
  435121:	shl    r8,0x2
  435125:	call   0x44b480
  43512a:	mov    rcx,QWORD PTR [rbx]
  43512d:	call   0x40215c
  435132:	mov    QWORD PTR [rbx],rdi
  435135:	mov    DWORD PTR [rbx+0xc],esi
  435138:	add    rsp,0x20
  43513c:	pop    rdi
  43513d:	pop    rsi
  43513e:	pop    rbx
  43513f:	ret    
  435140:	rex.W push rbx
  435142:	push   rdi
  435143:	sub    rsp,0x38
  435147:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  435150:	mov    rdi,r8
  435153:	mov    r9,rcx
  435156:	mov    edx,edx
  435158:	mov    rax,QWORD PTR [rcx+0x40]
  43515c:	mov    r8,QWORD PTR [rax+rdx*8]
  435160:	cmp    DWORD PTR [r8+0x58],0x0
  435165:	jge    0x435198
  435167:	call   QWORD PTR [r8+0x38]
  43516b:	mov    rbx,rax
  43516e:	test   rax,rax
  435171:	je     0x43517c
  435173:	mov    rdx,QWORD PTR [rax]
  435176:	mov    rcx,rax
  435179:	call   QWORD PTR [rdx+0x8]
  43517c:	mov    rcx,QWORD PTR [rdi]
  43517f:	test   rcx,rcx
  435182:	je     0x43518a
  435184:	mov    rax,QWORD PTR [rcx]
  435187:	call   QWORD PTR [rax+0x10]
  43518a:	mov    QWORD PTR [rdi],rbx
  43518d:	xor    eax,eax
  43518f:	jmp    0x4351b7
  435191:	mov    eax,0x8007000e
  435196:	jmp    0x4351b7
  435198:	mov    ecx,DWORD PTR [r8+0x58]
  43519c:	mov    rax,QWORD PTR [r9+0x18]
  4351a0:	mov    r9,QWORD PTR [rax+rcx*8]
  4351a4:	lea    rcx,[r8+0x60]
  4351a8:	mov    r8,rdi
  4351ab:	lea    rdx,[rip+0x1ec46]        # 0x453df8
  4351b2:	call   QWORD PTR [r9+0x18]
  4351b6:	nop
  4351b7:	add    rsp,0x38
  4351bb:	pop    rdi
  4351bc:	pop    rbx
  4351bd:	ret    
  4351be:	int3   
  4351bf:	int3   
  4351c0:	mov    QWORD PTR [rsp+0x10],rdx
  4351c5:	push   rbp
  4351c6:	sub    rsp,0x20
  4351ca:	mov    rbp,rdx
  4351cd:	lea    rax,[rip+0xffffffffffffffbd]        # 0x435191
  4351d4:	jmp    0x4351d6
  4351d6:	add    rsp,0x20
  4351da:	pop    rbp
  4351db:	ret    
  4351dc:	int3   
  4351dd:	int3   
  4351de:	int3   
  4351df:	int3   
  4351e0:	mov    QWORD PTR [rsp+0x8],rcx
  4351e5:	push   rbx
  4351e6:	push   rbp
  4351e7:	push   rsi
  4351e8:	push   rdi
  4351e9:	sub    rsp,0x38
  4351ed:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4351f6:	mov    rbx,rcx
  4351f9:	call   0x434500
  4351fe:	nop
  4351ff:	movsxd rdi,DWORD PTR [rbx+0x8]
  435203:	mov    rsi,rdi
  435206:	test   edi,edi
  435208:	je     0x435236
  43520a:	shl    rsi,0x3
  43520e:	add    edi,0xffffffff
  435211:	sub    rsi,0x8
  435215:	mov    rax,QWORD PTR [rbx]
  435218:	mov    rbp,QWORD PTR [rsi+rax*1]
  43521c:	test   rbp,rbp
  43521f:	je     0x435232
  435221:	mov    rcx,QWORD PTR [rbp+0x0]
  435225:	call   0x40215c
  43522a:	mov    rcx,rbp
  43522d:	call   0x40215c
  435232:	test   edi,edi
  435234:	jne    0x43520e
  435236:	mov    rcx,QWORD PTR [rbx]
  435239:	add    rsp,0x38
  43523d:	pop    rdi
  43523e:	pop    rsi
  43523f:	pop    rbp
  435240:	pop    rbx
  435241:	jmp    0x40215c
  435246:	int3   
  435247:	int3   
  435248:	int3   
  435249:	int3   
  43524a:	int3   
  43524b:	int3   
  43524c:	int3   
  43524d:	int3   
  43524e:	int3   
  43524f:	int3   
  435250:	rex.W push rbp
  435252:	sub    rsp,0x20
  435256:	mov    rbp,rdx
  435259:	mov    rcx,QWORD PTR [rbp+0x60]
  43525d:	call   0x4047cc
  435262:	add    rsp,0x20
  435266:	pop    rbp
  435267:	ret    
  435268:	rex.W push rbx
  43526a:	push   rbp
  43526b:	push   rsi
  43526c:	push   rdi
  43526d:	sub    rsp,0x28
  435271:	xor    ebx,ebx
  435273:	xor    ebp,ebp
  435275:	mov    rdi,rcx
  435278:	cmp    DWORD PTR [rcx+0x30],ebx
  43527b:	jbe    0x4352a4
  43527d:	xor    esi,esi
  43527f:	mov    rax,QWORD PTR [rdi+0x28]
  435283:	mov    rcx,QWORD PTR [rsi+rax*1]
  435287:	mov    rcx,QWORD PTR [rcx]
  43528a:	test   rcx,rcx
  43528d:	je     0x435299
  43528f:	call   0x40cb18
  435294:	test   eax,eax
  435296:	cmovne ebp,eax
  435299:	inc    ebx
  43529b:	add    rsi,0x8
  43529f:	cmp    ebx,DWORD PTR [rdi+0x30]
  4352a2:	jb     0x43527f
  4352a4:	mov    eax,ebp
  4352a6:	add    rsp,0x28
  4352aa:	pop    rdi
  4352ab:	pop    rsi
  4352ac:	pop    rbp
  4352ad:	pop    rbx
  4352ae:	ret    
  4352af:	int3   
  4352b0:	rex.W push rbx
  4352b2:	push   rbp
  4352b3:	push   rsi
  4352b4:	push   rdi
  4352b5:	push   r12
  4352b7:	sub    rsp,0x20
  4352bb:	xor    ebx,ebx
  4352bd:	mov    r12,rdx
  4352c0:	mov    rsi,rcx
  4352c3:	cmp    DWORD PTR [rcx+0x30],ebx
  4352c6:	mov    bpl,0x1
  4352c9:	jbe    0x4352fb
  4352cb:	xor    edi,edi
  4352cd:	mov    rax,QWORD PTR [rsi+0x28]
  4352d1:	mov    rcx,QWORD PTR [rdi+rax*1]
  4352d5:	mov    rcx,QWORD PTR [rcx]
  4352d8:	test   rcx,rcx
  4352db:	je     0x4352f0
  4352dd:	add    rcx,0x10
  4352e1:	mov    rdx,r12
  4352e4:	call   0x408e5c
  4352e9:	neg    al
  4352eb:	sbb    cl,cl
  4352ed:	and    bpl,cl
  4352f0:	inc    ebx
  4352f2:	add    rdi,0x8
  4352f6:	cmp    ebx,DWORD PTR [rsi+0x30]
  4352f9:	jb     0x4352cd
  4352fb:	mov    al,bpl
  4352fe:	add    rsp,0x20
  435302:	pop    r12
  435304:	pop    rdi
  435305:	pop    rsi
  435306:	pop    rbp
  435307:	pop    rbx
  435308:	ret    
  435309:	int3   
  43530a:	int3   
  43530b:	int3   
  43530c:	rex.W push rbx
  43530e:	push   rbp
  43530f:	push   rsi
  435310:	push   rdi
  435311:	push   r12
  435313:	sub    rsp,0x40
  435317:	cmp    DWORD PTR [r8+0x8],0x1
  43531c:	mov    rsi,r9
  43531f:	mov    rbp,rdx
  435322:	mov    rbx,rcx
  435325:	jbe    0x43532e
  435327:	xor    al,al
  435329:	jmp    0x4353f4
  43532e:	xor    r12d,r12d
  435331:	cmp    DWORD PTR [r8+0x8],r12d
  435335:	je     0x43534e
  435337:	mov    rdx,QWORD PTR [r8]
  43533a:	lea    r8d,[r12+0x20]
  43533f:	add    rcx,0x8
  435343:	mov    rdx,QWORD PTR [rdx]
  435346:	call   0x44b480
  43534b:	mov    BYTE PTR [rbx],0x1
  43534e:	cmp    DWORD PTR [rbx+0x8],r12d
  435352:	jge    0x4353f2
  435358:	lea    rcx,[rbx+0x8]
  43535c:	lea    rdx,[rsp+0x20]
  435361:	mov    r8d,0x20
  435367:	mov    DWORD PTR [rsp+0x20],0xffffffff
  43536f:	mov    BYTE PTR [rsp+0x28],r12b
  435374:	mov    BYTE PTR [rsp+0x29],r12b
  435379:	mov    BYTE PTR [rsp+0x2a],r12b
  43537e:	mov    BYTE PTR [rsp+0x2b],r12b
  435383:	mov    BYTE PTR [rsp+0x2c],r12b
  435388:	mov    BYTE PTR [rsp+0x30],0x1
  43538d:	mov    BYTE PTR [rsp+0x31],0x1
  435392:	mov    BYTE PTR [rsp+0x32],r12b
  435397:	mov    BYTE PTR [rsp+0x33],r12b
  43539c:	mov    BYTE PTR [rsp+0x34],r12b
  4353a1:	mov    BYTE PTR [rsp+0x35],r12b
  4353a6:	mov    QWORD PTR [rsp+0x38],r12
  4353ab:	mov    BYTE PTR [rsp+0x24],0x1
  4353b0:	mov    BYTE PTR [rsp+0x25],0x1
  4353b5:	mov    BYTE PTR [rsp+0x26],0x1
  4353ba:	mov    BYTE PTR [rsp+0x27],0x1
  4353bf:	mov    BYTE PTR [rsp+0x2e],0x1
  4353c4:	mov    BYTE PTR [rsp+0x2f],0x1
  4353c9:	mov    BYTE PTR [rsp+0x2d],0x1
  4353ce:	call   0x44b480
  4353d3:	cmp    DWORD PTR [rbx+0xc8],0x2
  4353da:	je     0x4353f2
  4353dc:	mov    rdx,rsi
  4353df:	mov    rcx,rbp
  4353e2:	call   0x427adc
  4353e7:	cmp    eax,r12d
  4353ea:	mov    DWORD PTR [rbx+0x8],eax
  4353ed:	jl     0x4353f2
  4353ef:	mov    BYTE PTR [rbx],0x1
  4353f2:	mov    al,0x1
  4353f4:	add    rsp,0x40
  4353f8:	pop    r12
  4353fa:	pop    rdi
  4353fb:	pop    rsi
  4353fc:	pop    rbp
  4353fd:	pop    rbx
  4353fe:	ret    
  4353ff:	int3   
  435400:	rex.W push rbx
  435402:	push   rbp
  435403:	push   rsi
  435404:	push   rdi
  435405:	sub    rsp,0x68
  435409:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  435412:	mov    rbp,r8
  435415:	mov    rbx,rdx
  435418:	mov    rsi,rcx
  43541b:	lea    rcx,[rsp+0x28]
  435420:	call   0x403150
  435425:	nop
  435426:	xor    edi,edi
  435428:	cmp    DWORD PTR [rsi+0x8],edi
  43542b:	jge    0x435440
  43542d:	mov    rdx,QWORD PTR [rip+0x33294]        # 0x4686c8
  435434:	lea    rcx,[rsp+0x28]
  435439:	call   0x403290
  43543e:	jmp    0x435479
  435440:	mov    ecx,DWORD PTR [rsi+0x8]
  435443:	mov    rax,QWORD PTR [rbx+0x40]
  435447:	mov    rcx,QWORD PTR [rax+rcx*8]
  43544b:	cmp    BYTE PTR [rcx+0x40],dil
  43544f:	jne    0x435456
  435451:	jmp    0x435530
  435456:	lea    rdx,[rsp+0x48]
  43545b:	call   0x42b6b4
  435460:	nop
  435461:	mov    rdx,rax
  435464:	lea    rcx,[rsp+0x28]
  435469:	call   0x4032f8
  43546e:	nop
  43546f:	mov    rcx,QWORD PTR [rsp+0x48]
  435474:	call   0x40215c
  435479:	lea    rdx,[rsp+0x28]
  43547e:	lea    rcx,[rsp+0x38]
  435483:	call   0x403208
  435488:	nop
  435489:	cmp    BYTE PTR [rsi+0xcc],dil
  435490:	je     0x4354a3
  435492:	mov    rdx,QWORD PTR [rip+0x33237]        # 0x4686d0
  435499:	lea    rcx,[rsp+0x38]
  43549e:	call   0x4034e8
  4354a3:	lea    rcx,[rsi+0x80]
  4354aa:	lea    rdx,[rsp+0x38]
  4354af:	call   0x4032f8
  4354b4:	lea    rcx,[rsi+0x90]
  4354bb:	lea    rdx,[rsp+0x28]
  4354c0:	call   0x4032f8
  4354c5:	lea    rcx,[rsi+0x50]
  4354c9:	mov    r8d,DWORD PTR [rsi+0xc8]
  4354d0:	mov    rdx,rbp
  4354d3:	call   0x434700
  4354d8:	cmp    DWORD PTR [rsi+0x40],edi
  4354db:	jbe    0x435522
  4354dd:	mov    rbp,rdi
  4354e0:	mov    rax,QWORD PTR [rsi+0x38]
  4354e4:	mov    rbx,QWORD PTR [rax+rbp*1]
  4354e8:	lea    rcx,[rbx+0x40]
  4354ec:	lea    rdx,[rsp+0x38]
  4354f1:	call   0x4032f8
  4354f6:	lea    rcx,[rbx+0x50]
  4354fa:	lea    rdx,[rsp+0x28]
  4354ff:	call   0x4032f8
  435504:	lea    rcx,[rbx+0x10]
  435508:	mov    r8d,DWORD PTR [rsi+0xc8]
  43550f:	mov    rdx,rbx
  435512:	call   0x434700
  435517:	inc    edi
  435519:	add    rbp,0x8
  43551d:	cmp    edi,DWORD PTR [rsi+0x40]
  435520:	jb     0x4354e0
  435522:	mov    rcx,QWORD PTR [rsp+0x38]
  435527:	call   0x40215c
  43552c:	nop
  43552d:	mov    dil,0x1
  435530:	mov    rcx,QWORD PTR [rsp+0x28]
  435535:	call   0x40215c
  43553a:	mov    al,dil
  43553d:	add    rsp,0x68
  435541:	pop    rdi
  435542:	pop    rsi
  435543:	pop    rbp
  435544:	pop    rbx
  435545:	ret    
  435546:	int3   
  435547:	int3   
  435548:	int3   
  435549:	int3   
  43554a:	int3   
  43554b:	int3   
  43554c:	int3   
  43554d:	int3   
  43554e:	int3   
  43554f:	int3   
  435550:	rex.W push rbp
  435552:	sub    rsp,0x20
  435556:	mov    rbp,rdx
  435559:	lea    rcx,[rbp+0x28]
  43555d:	call   0x401000
  435562:	add    rsp,0x20
  435566:	pop    rbp
  435567:	ret    
  435568:	int3   
  435569:	int3   
  43556a:	int3   
  43556b:	int3   
  43556c:	int3   
  43556d:	int3   
  43556e:	int3   
  43556f:	int3   
  435570:	rex.W push rbp
  435572:	sub    rsp,0x20
  435576:	mov    rbp,rdx
  435579:	lea    rcx,[rbp+0x48]
  43557d:	call   0x401000
  435582:	add    rsp,0x20
  435586:	pop    rbp
  435587:	ret    
  435588:	int3   
  435589:	int3   
  43558a:	int3   
  43558b:	int3   
  43558c:	int3   
  43558d:	int3   
  43558e:	int3   
  43558f:	int3   
  435590:	rex.W push rbp
  435592:	sub    rsp,0x20
  435596:	mov    rbp,rdx
  435599:	lea    rcx,[rbp+0x38]
  43559d:	call   0x401000
  4355a2:	add    rsp,0x20
  4355a6:	pop    rbp
  4355a7:	ret    
  4355a8:	mov    rax,QWORD PTR [rcx+0x8]
  4355ac:	mov    rcx,QWORD PTR [rcx+0x10]
  4355b0:	mov    r8d,edx
  4355b3:	mov    rdx,QWORD PTR [rax]
  4355b6:	mov    r9,QWORD PTR [rcx]
  4355b9:	mov    rax,QWORD PTR [rdx+r8*8]
  4355bd:	mov    r8b,BYTE PTR [rax+0x20]
  4355c1:	mov    rdx,QWORD PTR [rax+0x10]
  4355c5:	rex.WB jmp QWORD PTR [r9+0x70]
  4355c9:	int3   
  4355ca:	int3   
  4355cb:	int3   
  4355cc:	rex.W push rbx
  4355ce:	push   rbp
  4355cf:	push   rsi
  4355d0:	push   rdi
  4355d1:	push   r12
  4355d3:	sub    rsp,0x20
  4355d7:	movsxd rdi,DWORD PTR [rcx+0x8]
  4355db:	mov    r12d,edx
  4355de:	mov    rbx,rcx
  4355e1:	test   edi,edi
  4355e3:	mov    rsi,rdi
  4355e6:	je     0x435614
  4355e8:	shl    rsi,0x3
  4355ec:	mov    rax,QWORD PTR [rbx]
  4355ef:	sub    rsi,0x8
  4355f3:	add    edi,0xffffffff
  4355f6:	mov    rbp,QWORD PTR [rsi+rax*1]
  4355fa:	test   rbp,rbp
  4355fd:	je     0x435610
  4355ff:	mov    rcx,QWORD PTR [rbp+0x10]
  435603:	call   0x40215c
  435608:	mov    rcx,rbp
  43560b:	call   0x40215c
  435610:	test   edi,edi
  435612:	jne    0x4355ec
  435614:	cmp    r12d,DWORD PTR [rbx+0xc]
  435618:	mov    DWORD PTR [rbx+0x8],0x0
  43561f:	jbe    0x43564a
  435621:	mov    rcx,QWORD PTR [rbx]
  435624:	call   0x40215c
  435629:	mov    rcx,r12
  43562c:	mov    QWORD PTR [rbx],0x0
  435633:	shl    rcx,0x3
  435637:	mov    DWORD PTR [rbx+0xc],0x0
  43563e:	call   0x402130
  435643:	mov    DWORD PTR [rbx+0xc],r12d
  435647:	mov    QWORD PTR [rbx],rax
  43564a:	add    rsp,0x20
  43564e:	pop    r12
  435650:	pop    rdi
  435651:	pop    rsi
  435652:	pop    rbp
  435653:	pop    rbx
  435654:	ret    
  435655:	int3   
  435656:	int3   
  435657:	int3   
  435658:	rex.W push rbx
  43565a:	push   rsi
  43565b:	push   rdi
  43565c:	sub    rsp,0x30
  435660:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  435669:	mov    rdi,rdx
  43566c:	mov    rsi,rcx
  43566f:	mov    ecx,0x30
  435674:	call   0x402130
  435679:	mov    rbx,rax
  43567c:	mov    QWORD PTR [rsp+0x60],rax
  435681:	test   rax,rax
  435684:	je     0x4356bf
  435686:	mov    rax,QWORD PTR [rdi]
  435689:	mov    QWORD PTR [rbx],rax
  43568c:	mov    rcx,QWORD PTR [rdi+0x8]
  435690:	mov    QWORD PTR [rbx+0x8],rcx
  435694:	test   rcx,rcx
  435697:	je     0x4356a0
  435699:	mov    rax,QWORD PTR [rcx]
  43569c:	call   QWORD PTR [rax+0x8]
  43569f:	nop
  4356a0:	lea    rdx,[rdi+0x10]
  4356a4:	lea    rcx,[rbx+0x10]
  4356a8:	call   0x403208
  4356ad:	mov    r11,QWORD PTR [rdi+0x20]
  4356b1:	mov    QWORD PTR [rbx+0x20],r11
  4356b5:	mov    rax,QWORD PTR [rdi+0x28]
  4356b9:	mov    QWORD PTR [rbx+0x28],rax
  4356bd:	jmp    0x4356c1
  4356bf:	xor    ebx,ebx
  4356c1:	mov    rdx,rbx
  4356c4:	mov    rcx,rsi
  4356c7:	add    rsp,0x30
  4356cb:	pop    rdi
  4356cc:	pop    rsi
  4356cd:	pop    rbx
  4356ce:	jmp    0x4010c8
  4356d3:	int3   
  4356d4:	int3   
  4356d5:	int3   
  4356d6:	int3   
  4356d7:	int3   
  4356d8:	rex.W push rbp
  4356da:	sub    rsp,0x20
  4356de:	mov    rbp,rdx
  4356e1:	mov    rcx,QWORD PTR [rbp+0x60]
  4356e5:	call   0x40215c
  4356ea:	add    rsp,0x20
  4356ee:	pop    rbp
  4356ef:	ret    
  4356f0:	int3   
  4356f1:	int3   
  4356f2:	int3   
  4356f3:	int3   
  4356f4:	int3   
  4356f5:	int3   
  4356f6:	int3   
  4356f7:	int3   
  4356f8:	rex.W push rbp
  4356fa:	sub    rsp,0x20
  4356fe:	mov    rbp,rdx
  435701:	mov    rcx,QWORD PTR [rbp+0x60]
  435705:	add    rcx,0x8
  435709:	call   0x4176b4
  43570e:	add    rsp,0x20
  435712:	pop    rbp
  435713:	ret    
  435714:	mov    QWORD PTR [rsp+0x8],rcx
  435719:	push   rbx
  43571a:	push   rbp
  43571b:	push   rsi
  43571c:	push   rdi
  43571d:	sub    rsp,0x38
  435721:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43572a:	mov    rdi,rcx
  43572d:	movsxd rbx,DWORD PTR [rcx+0x8]
  435731:	mov    rsi,rbx
  435734:	test   ebx,ebx
  435736:	je     0x435773
  435738:	shl    rsi,0x3
  43573c:	add    ebx,0xffffffff
  43573f:	sub    rsi,0x8
  435743:	mov    rax,QWORD PTR [rdi]
  435746:	mov    rbp,QWORD PTR [rsi+rax*1]
  43574a:	test   rbp,rbp
  43574d:	je     0x43576f
  43574f:	mov    rcx,QWORD PTR [rbp+0x10]
  435753:	call   0x40215c
  435758:	mov    rcx,QWORD PTR [rbp+0x8]
  43575c:	test   rcx,rcx
  43575f:	je     0x435767
  435761:	mov    rax,QWORD PTR [rcx]
  435764:	call   QWORD PTR [rax+0x10]
  435767:	mov    rcx,rbp
  43576a:	call   0x40215c
  43576f:	test   ebx,ebx
  435771:	jne    0x43573c
  435773:	mov    rcx,QWORD PTR [rdi]
  435776:	add    rsp,0x38
  43577a:	pop    rdi
  43577b:	pop    rsi
  43577c:	pop    rbp
  43577d:	pop    rbx
  43577e:	jmp    0x40215c
  435783:	int3   
  435784:	rex.W push rbp
  435786:	sub    rsp,0x20
  43578a:	mov    rbp,rdx
  43578d:	mov    rcx,QWORD PTR [rbp+0x60]
  435791:	call   0x401000
  435796:	add    rsp,0x20
  43579a:	pop    rbp
  43579b:	ret    
  43579c:	rex.W push rbx
  43579e:	push   rsi
  43579f:	push   rdi
  4357a0:	sub    rsp,0x30
  4357a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4357ad:	mov    rsi,r8
  4357b0:	mov    rbx,rdx
  4357b3:	mov    rdi,rcx
  4357b6:	call   QWORD PTR [rip+0x179e4]        # 0x44d1a0
  4357bc:	mov    DWORD PTR [rdi],eax
  4357be:	lea    rcx,[rdi+0x8]
  4357c2:	mov    rdx,rbx
  4357c5:	call   0x402be4
  4357ca:	mov    ecx,0x10
  4357cf:	call   0x402130
  4357d4:	mov    QWORD PTR [rsp+0x50],rax
  4357d9:	test   rax,rax
  4357dc:	je     0x4357eb
  4357de:	mov    rdx,rsi
  4357e1:	mov    rcx,rax
  4357e4:	call   0x403208
  4357e9:	jmp    0x4357ed
  4357eb:	xor    eax,eax
  4357ed:	lea    rcx,[rdi+0x18]
  4357f1:	mov    rdx,rax
  4357f4:	call   0x4010c8
  4357f9:	mov    eax,DWORD PTR [rdi]
  4357fb:	test   eax,eax
  4357fd:	jne    0x435806
  4357ff:	mov    eax,0x80004005
  435804:	jmp    0x435812
  435806:	test   eax,eax
  435808:	jle    0x435812
  43580a:	movzx  eax,ax
  43580d:	or     eax,0x80070000
  435812:	add    rsp,0x30
  435816:	pop    rdi
  435817:	pop    rsi
  435818:	pop    rbx
  435819:	ret    
  43581a:	int3   
  43581b:	int3   
  43581c:	rex.W push rbp
  43581e:	sub    rsp,0x20
  435822:	mov    rbp,rdx
  435825:	mov    rcx,QWORD PTR [rbp+0x50]
  435829:	call   0x40215c
  43582e:	add    rsp,0x20
  435832:	pop    rbp
  435833:	ret    
  435834:	rex.W push rbx
  435836:	push   rbp
  435837:	push   rsi
  435838:	push   rdi
  435839:	push   r12
  43583b:	push   r13
  43583d:	sub    rsp,0x98
  435844:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43584d:	mov    rsi,r9
  435850:	mov    r12d,r8d
  435853:	mov    r13,rdx
  435856:	mov    rbx,rcx
  435859:	test   r9,r9
  43585c:	je     0x435865
  43585e:	mov    DWORD PTR [r9],0x0
  435865:	test   r8d,r8d
  435868:	je     0x435b21
  43586e:	mov    edx,DWORD PTR [rbx+0xc]
  435871:	cmp    edx,DWORD PTR [rbx+0x30]
  435874:	jb     0x4359f6
  43587a:	mov    QWORD PTR [rsp+0x60],0x0
  435883:	lea    rcx,[rsp+0x68]
  435888:	call   0x403150
  43588d:	nop
  43588e:	mov    ecx,DWORD PTR [rbx+0xc]
  435891:	inc    ecx
  435893:	lea    rdx,[rsp+0x38]
  435898:	call   0x401b10
  43589d:	lea    rdx,[rsp+0x38]
  4358a2:	lea    rcx,[rsp+0x28]
  4358a7:	call   0x4031c0
  4358ac:	nop
  4358ad:	cmp    DWORD PTR [rsp+0x30],0x3
  4358b2:	jae    0x4358c9
  4358b4:	mov    dx,0x30
  4358b8:	lea    rcx,[rsp+0x28]
  4358bd:	call   0x4036fc
  4358c2:	cmp    DWORD PTR [rsp+0x30],0x3
  4358c7:	jb     0x4358b4
  4358c9:	lea    r8,[rbx+0x48]
  4358cd:	xor    edx,edx
  4358cf:	lea    rcx,[rsp+0x28]
  4358d4:	call   0x4039d8
  4358d9:	mov    ecx,0x30
  4358de:	call   0x402130
  4358e3:	mov    rdi,rax
  4358e6:	test   rax,rax
  4358e9:	je     0x435906
  4358eb:	mov    DWORD PTR [rax+0x8],0x0
  4358f2:	lea    rax,[rip+0x194a7]        # 0x44eda0
  4358f9:	mov    QWORD PTR [rdi],rax
  4358fc:	mov    QWORD PTR [rdi+0x10],0xffffffffffffffff
  435904:	jmp    0x435908
  435906:	xor    edi,edi
  435908:	mov    rcx,rdi
  43590b:	mov    QWORD PTR [rsp+0x58],rdi
  435910:	test   rdi,rdi
  435913:	je     0x435920
  435915:	mov    rax,QWORD PTR [rdi]
  435918:	call   QWORD PTR [rax+0x8]
  43591b:	mov    rcx,QWORD PTR [rsp+0x58]
  435920:	mov    rdx,QWORD PTR [rsp+0x60]
  435925:	test   rdx,rdx
  435928:	je     0x435938
  43592a:	mov    rax,QWORD PTR [rdx]
  43592d:	mov    rcx,rdx
  435930:	call   QWORD PTR [rax+0x10]
  435933:	mov    rcx,QWORD PTR [rsp+0x58]
  435938:	mov    QWORD PTR [rsp+0x60],rdi
  43593d:	mov    rdx,QWORD PTR [rsp+0x28]
  435942:	mov    QWORD PTR [rcx+0x28],0x0
  43594a:	add    rcx,0x10
  43594e:	xor    r8d,r8d
  435951:	call   0x4094d8
  435956:	test   al,al
  435958:	je     0x435a2f
  43595e:	mov    rdi,QWORD PTR [rbx+0x58]
  435962:	mov    ecx,0x10
  435967:	call   0x402130
  43596c:	mov    QWORD PTR [rsp+0xe8],rax
  435974:	test   rax,rax
  435977:	je     0x435988
  435979:	lea    rdx,[rsp+0x28]
  43597e:	mov    rcx,rax
  435981:	call   0x403208
  435986:	jmp    0x43598a
  435988:	xor    eax,eax
  43598a:	mov    rdx,rax
  43598d:	mov    rcx,rdi
  435990:	call   0x4010c8
  435995:	mov    QWORD PTR [rsp+0x78],0x0
  43599e:	mov    QWORD PTR [rsp+0x80],0x0
  4359aa:	lea    rdx,[rsp+0x28]
  4359af:	lea    rcx,[rsp+0x68]
  4359b4:	call   0x4032f8
  4359b9:	lea    rcx,[rbx+0x28]
  4359bd:	lea    rdx,[rsp+0x58]
  4359c2:	call   0x435658
  4359c7:	nop
  4359c8:	mov    rcx,QWORD PTR [rsp+0x28]
  4359cd:	call   0x40215c
  4359d2:	nop
  4359d3:	mov    rcx,QWORD PTR [rsp+0x68]
  4359d8:	call   0x40215c
  4359dd:	mov    rcx,QWORD PTR [rsp+0x60]
  4359e2:	test   rcx,rcx
  4359e5:	je     0x43586e
  4359eb:	mov    rax,QWORD PTR [rcx]
  4359ee:	call   QWORD PTR [rax+0x10]
  4359f1:	jmp    0x43586e
  4359f6:	mov    rax,QWORD PTR [rbx+0x28]
  4359fa:	mov    rdi,QWORD PTR [rax+rdx*8]
  4359fe:	mov    eax,edx
  435a00:	mov    ecx,DWORD PTR [rbx+0x40]
  435a03:	cmp    edx,ecx
  435a05:	jb     0x435a0a
  435a07:	lea    eax,[rcx-0x1]
  435a0a:	mov    ecx,eax
  435a0c:	mov    rax,QWORD PTR [rbx+0x38]
  435a10:	mov    rbp,QWORD PTR [rax+rcx*8]
  435a14:	mov    rax,QWORD PTR [rbx+0x10]
  435a18:	cmp    rax,rbp
  435a1b:	jb     0x435a63
  435a1d:	sub    rax,rbp
  435a20:	mov    QWORD PTR [rbx+0x10],rax
  435a24:	lea    eax,[rdx+0x1]
  435a27:	mov    DWORD PTR [rbx+0xc],eax
  435a2a:	jmp    0x43586e
  435a2f:	call   QWORD PTR [rip+0x1776b]        # 0x44d1a0
  435a35:	mov    ebx,eax
  435a37:	mov    rcx,QWORD PTR [rsp+0x28]
  435a3c:	call   0x40215c
  435a41:	nop
  435a42:	mov    rcx,QWORD PTR [rsp+0x68]
  435a47:	call   0x40215c
  435a4c:	mov    rcx,QWORD PTR [rsp+0x60]
  435a51:	test   rcx,rcx
  435a54:	je     0x435a5c
  435a56:	mov    rdx,QWORD PTR [rcx]
  435a59:	call   QWORD PTR [rdx+0x10]
  435a5c:	mov    eax,ebx
  435a5e:	jmp    0x435b23
  435a63:	mov    rdx,rax
  435a66:	cmp    rax,QWORD PTR [rdi+0x20]
  435a6a:	je     0x435a8c
  435a6c:	mov    rcx,QWORD PTR [rdi+0x8]
  435a70:	mov    rax,QWORD PTR [rcx]
  435a73:	xor    r9d,r9d
  435a76:	xor    r8d,r8d
  435a79:	call   QWORD PTR [rax+0x20]
  435a7c:	test   eax,eax
  435a7e:	jne    0x435b23
  435a84:	mov    rax,QWORD PTR [rbx+0x10]
  435a88:	mov    QWORD PTR [rdi+0x20],rax
  435a8c:	mov    rax,r12
  435a8f:	mov    r12,rbp
  435a92:	sub    r12,QWORD PTR [rdi+0x20]
  435a96:	cmp    rax,r12
  435a99:	cmovb  r12d,eax
  435a9d:	mov    rcx,QWORD PTR [rdi+0x8]
  435aa1:	mov    rax,QWORD PTR [rcx]
  435aa4:	lea    r9,[rsp+0xe0]
  435aac:	mov    r8d,r12d
  435aaf:	mov    rdx,r13
  435ab2:	call   QWORD PTR [rax+0x18]
  435ab5:	test   eax,eax
  435ab7:	jne    0x435b23
  435ab9:	mov    eax,DWORD PTR [rsp+0xe0]
  435ac0:	add    QWORD PTR [rdi+0x20],rax
  435ac4:	mov    ecx,DWORD PTR [rsp+0xe0]
  435acb:	mov    rax,rcx
  435ace:	add    QWORD PTR [rbx+0x10],rax
  435ad2:	mov    rdx,QWORD PTR [rbx+0x10]
  435ad6:	add    QWORD PTR [rbx+0x18],rax
  435ada:	mov    rax,QWORD PTR [rbx+0x18]
  435ade:	cmp    rax,QWORD PTR [rbx+0x20]
  435ae2:	jbe    0x435ae8
  435ae4:	mov    QWORD PTR [rbx+0x20],rax
  435ae8:	cmp    rdx,QWORD PTR [rdi+0x28]
  435aec:	jbe    0x435af9
  435aee:	mov    QWORD PTR [rdi+0x28],rdx
  435af2:	mov    ecx,DWORD PTR [rsp+0xe0]
  435af9:	test   rsi,rsi
  435afc:	je     0x435b00
  435afe:	add    DWORD PTR [rsi],ecx
  435b00:	cmp    QWORD PTR [rdi+0x20],rbp
  435b04:	jne    0x435b11
  435b06:	inc    DWORD PTR [rbx+0xc]
  435b09:	mov    QWORD PTR [rbx+0x10],0x0
  435b11:	test   ecx,ecx
  435b13:	jne    0x435b21
  435b15:	test   r12d,r12d
  435b18:	je     0x435b21
  435b1a:	mov    eax,0x80004005
  435b1f:	jmp    0x435b23
  435b21:	xor    eax,eax
  435b23:	add    rsp,0x98
  435b2a:	pop    r13
  435b2c:	pop    r12
  435b2e:	pop    rdi
  435b2f:	pop    rsi
  435b30:	pop    rbp
  435b31:	pop    rbx
  435b32:	ret    
  435b33:	int3   
  435b34:	rex.W push rbp
  435b36:	sub    rsp,0x20
  435b3a:	mov    rbp,rdx
  435b3d:	lea    rcx,[rbp+0x58]
  435b41:	add    rcx,0x8
  435b45:	call   0x4176b4
  435b4a:	add    rsp,0x20
  435b4e:	pop    rbp
  435b4f:	ret    
  435b50:	int3   
  435b51:	int3   
  435b52:	int3   
  435b53:	int3   
  435b54:	rex.W push rbp
  435b56:	sub    rsp,0x20
  435b5a:	mov    rbp,rdx
  435b5d:	lea    rcx,[rbp+0x58]
  435b61:	call   0x434db0
  435b66:	add    rsp,0x20
  435b6a:	pop    rbp
  435b6b:	ret    
  435b6c:	int3   
  435b6d:	int3   
  435b6e:	int3   
  435b6f:	int3   
  435b70:	int3   
  435b71:	int3   
  435b72:	int3   
  435b73:	int3   
  435b74:	rex.W push rbp
  435b76:	sub    rsp,0x20
  435b7a:	mov    rbp,rdx
  435b7d:	lea    rcx,[rbp+0x28]
  435b81:	call   0x401000
  435b86:	add    rsp,0x20
  435b8a:	pop    rbp
  435b8b:	ret    
  435b8c:	int3   
  435b8d:	int3   
  435b8e:	int3   
  435b8f:	int3   
  435b90:	int3   
  435b91:	int3   
  435b92:	int3   
  435b93:	int3   
  435b94:	rex.W push rbp
  435b96:	sub    rsp,0x20
  435b9a:	mov    rbp,rdx
  435b9d:	mov    rcx,QWORD PTR [rbp+0xe8]
  435ba4:	call   0x40215c
  435ba9:	add    rsp,0x20
  435bad:	pop    rbp
  435bae:	ret    
  435baf:	int3   
  435bb0:	rex.W push rbx
  435bb2:	push   rbp
  435bb3:	push   rsi
  435bb4:	push   rdi
  435bb5:	sub    rsp,0x28
  435bb9:	xor    esi,esi
  435bbb:	mov    rdi,rdx
  435bbe:	mov    rbx,rcx
  435bc1:	cmp    DWORD PTR [rcx+0x30],esi
  435bc4:	jbe    0x435c68
  435bca:	mov    rax,QWORD PTR [rcx+0x28]
  435bce:	mov    rbp,QWORD PTR [rax]
  435bd1:	inc    esi
  435bd3:	add    rax,0x8
  435bd7:	mov    rcx,QWORD PTR [rbp+0x28]
  435bdb:	cmp    rdi,rcx
  435bde:	jb     0x435bea
  435be0:	sub    rdi,rcx
  435be3:	cmp    esi,DWORD PTR [rbx+0x30]
  435be6:	jb     0x435bce
  435be8:	jmp    0x435c68
  435bea:	mov    rcx,QWORD PTR [rbp+0x8]
  435bee:	mov    rdx,rdi
  435bf1:	mov    rax,QWORD PTR [rcx]
  435bf4:	call   QWORD PTR [rax+0x28]
  435bf7:	test   eax,eax
  435bf9:	jne    0x435c82
  435bff:	mov    QWORD PTR [rbp+0x28],rdi
  435c03:	jmp    0x435c68
  435c05:	mov    ecx,DWORD PTR [rbx+0x30]
  435c08:	mov    rax,QWORD PTR [rbx+0x28]
  435c0c:	dec    ecx
  435c0e:	mov    rbp,QWORD PTR [rax+rcx*8]
  435c12:	mov    rcx,QWORD PTR [rbp+0x8]
  435c16:	test   rcx,rcx
  435c19:	je     0x435c29
  435c1b:	mov    rax,QWORD PTR [rcx]
  435c1e:	call   QWORD PTR [rax+0x10]
  435c21:	mov    QWORD PTR [rbp+0x8],0x0
  435c29:	mov    rcx,QWORD PTR [rbp+0x10]
  435c2d:	call   0x406fec
  435c32:	mov    ecx,DWORD PTR [rbx+0x30]
  435c35:	mov    rax,QWORD PTR [rbx+0x28]
  435c39:	dec    ecx
  435c3b:	mov    rbp,QWORD PTR [rax+rcx*8]
  435c3f:	test   rbp,rbp
  435c42:	je     0x435c64
  435c44:	mov    rcx,QWORD PTR [rbp+0x10]
  435c48:	call   0x40215c
  435c4d:	mov    rcx,QWORD PTR [rbp+0x8]
  435c51:	test   rcx,rcx
  435c54:	je     0x435c5c
  435c56:	mov    rax,QWORD PTR [rcx]
  435c59:	call   QWORD PTR [rax+0x10]
  435c5c:	mov    rcx,rbp
  435c5f:	call   0x40215c
  435c64:	add    DWORD PTR [rbx+0x30],0xffffffff
  435c68:	cmp    esi,DWORD PTR [rbx+0x30]
  435c6b:	jb     0x435c05
  435c6d:	mov    rax,QWORD PTR [rbx+0x18]
  435c71:	mov    DWORD PTR [rbx+0xc],0x0
  435c78:	mov    QWORD PTR [rbx+0x20],rdi
  435c7c:	mov    QWORD PTR [rbx+0x10],rax
  435c80:	xor    eax,eax
  435c82:	add    rsp,0x28
  435c86:	pop    rdi
  435c87:	pop    rsi
  435c88:	pop    rbp
  435c89:	pop    rbx
  435c8a:	ret    
  435c8b:	int3   
  435c8c:	rex.W push rbx
  435c8e:	push   rsi
  435c8f:	push   rdi
  435c90:	sub    rsp,0x20
  435c94:	mov    rsi,rdx
  435c97:	mov    rdi,r8
  435c9a:	mov    rbx,rcx
  435c9d:	mov    QWORD PTR [r8],0x0
  435ca4:	lea    rdx,[rip+0x1f145]        # 0x454df0
  435cab:	mov    rcx,rsi
  435cae:	mov    r8d,0x10
  435cb4:	call   0x44b786
  435cb9:	test   eax,eax
  435cbb:	je     0x435cd6
  435cbd:	lea    rdx,[rip+0x1e234]        # 0x453ef8
  435cc4:	mov    r8d,0x10
  435cca:	mov    rcx,rsi
  435ccd:	call   0x44b786
  435cd2:	test   eax,eax
  435cd4:	jne    0x435ce0
  435cd6:	mov    QWORD PTR [rdi],rbx
  435cd9:	inc    DWORD PTR [rbx+0x8]
  435cdc:	xor    eax,eax
  435cde:	jmp    0x435ce5
  435ce0:	mov    eax,0x80004002
  435ce5:	add    rsp,0x20
  435ce9:	pop    rdi
  435cea:	pop    rsi
  435ceb:	pop    rbx
  435cec:	ret    
  435ced:	int3   
  435cee:	int3   
  435cef:	int3   
  435cf0:	rex.W push rbx
  435cf2:	push   rbp
  435cf3:	push   rsi
  435cf4:	push   rdi
  435cf5:	push   r12
  435cf7:	push   r13
  435cf9:	push   r14
  435cfb:	push   r15
  435cfd:	sub    rsp,0xd8
  435d04:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
  435d10:	mov    rbp,r8
  435d13:	mov    r14,rdx
  435d16:	mov    r15,rcx
  435d19:	movsxd rbx,DWORD PTR [r8+0x8]
  435d1d:	mov    rdi,rbx
  435d20:	xor    r12d,r12d
  435d23:	cmp    ebx,r12d
  435d26:	je     0x435d56
  435d28:	shl    rdi,0x3
  435d2c:	add    ebx,0xffffffff
  435d2f:	sub    rdi,0x8
  435d33:	mov    rax,QWORD PTR [rbp+0x0]
  435d37:	mov    rsi,QWORD PTR [rdi+rax*1]
  435d3b:	cmp    rsi,r12
  435d3e:	je     0x435d51
  435d40:	mov    rcx,QWORD PTR [rsi+0x10]
  435d44:	call   0x40215c
  435d49:	mov    rcx,rsi
  435d4c:	call   0x40215c
  435d51:	cmp    ebx,r12d
  435d54:	jne    0x435d2c
  435d56:	mov    DWORD PTR [rbp+0x8],r12d
  435d5a:	mov    r13,QWORD PTR [r14]
  435d5d:	mov    rax,QWORD PTR [r13+0x0]
  435d61:	lea    rdx,[rsp+0x130]
  435d69:	mov    rcx,r13
  435d6c:	call   QWORD PTR [rax+0x28]
  435d6f:	cmp    eax,r12d
  435d72:	jne    0x435fdf
  435d78:	mov    edx,DWORD PTR [rsp+0x130]
  435d7f:	mov    rcx,rbp
  435d82:	call   0x4355cc
  435d87:	lea    rcx,[rsp+0x70]
  435d8c:	call   0x403150
  435d91:	nop
  435d92:	mov    QWORD PTR [rsp+0x80],r12
  435d9a:	mov    DWORD PTR [rsp+0x88],r12d
  435da2:	mov    DWORD PTR [rsp+0x8c],r12d
  435daa:	lea    rcx,[rsp+0x90]
  435db2:	call   0x403150
  435db7:	nop
  435db8:	lea    rcx,[rsp+0xa0]
  435dc0:	call   0x403150
  435dc5:	mov    BYTE PTR [rsp+0xb1],r12b
  435dcd:	mov    BYTE PTR [rsp+0xb8],r12b
  435dd5:	mov    DWORD PTR [rsp+0xbc],0xffffffff
  435de0:	mov    edi,r12d
  435de3:	cmp    DWORD PTR [rsp+0x130],r12d
  435deb:	jbe    0x435fd0
  435df1:	lea    rcx,[rsp+0x30]
  435df6:	call   0x403150
  435dfb:	mov    BYTE PTR [rsp+0x40],r12b
  435e00:	mov    BYTE PTR [rsp+0x41],r12b
  435e05:	mov    BYTE PTR [rsp+0x42],r12b
  435e0a:	mov    BYTE PTR [rsp+0x43],r12b
  435e0f:	mov    BYTE PTR [rsp+0x44],r12b
  435e14:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  435e1c:	lea    r8,[rsp+0x70]
  435e21:	mov    edx,edi
  435e23:	mov    rcx,r14
  435e26:	call   0x42d1f4
  435e2b:	mov    ebx,eax
  435e2d:	cmp    eax,r12d
  435e30:	jne    0x435f74
  435e36:	lea    rdx,[rsp+0x70]
  435e3b:	lea    rcx,[rsp+0x30]
  435e40:	call   0x4032f8
  435e45:	mov    r11b,BYTE PTR [rsp+0xb2]
  435e4d:	mov    BYTE PTR [rsp+0x40],r11b
  435e52:	mov    al,BYTE PTR [rsp+0xb0]
  435e59:	mov    BYTE PTR [rsp+0x41],al
  435e5d:	mov    sil,r12b
  435e60:	cmp    DWORD PTR [r15+0x8],0x0
  435e65:	jbe    0x435eae
  435e67:	xor    ebx,ebx
  435e69:	mov    rax,QWORD PTR [r15]
  435e6c:	mov    rcx,QWORD PTR [rbx+rax*1]
  435e70:	add    rcx,0x10
  435e74:	lea    r8,[rsp+0x128]
  435e7c:	lea    rdx,[rsp+0x70]
  435e81:	call   0x414b38
  435e86:	test   al,al
  435e88:	je     0x435e97
  435e8a:	cmp    BYTE PTR [rsp+0x128],0x0
  435e92:	je     0x435ea6
  435e94:	mov    sil,0x1
  435e97:	inc    r12d
  435e9a:	add    rbx,0x8
  435e9e:	cmp    r12d,DWORD PTR [r15+0x8]
  435ea2:	jb     0x435e69
  435ea4:	jmp    0x435eae
  435ea6:	xor    r12d,r12d
  435ea9:	mov    sil,r12b
  435eac:	jmp    0x435eb1
  435eae:	xor    r12d,r12d
  435eb1:	mov    BYTE PTR [rsp+0x44],sil
  435eb6:	lea    r9,[rsp+0x43]
  435ebb:	lea    r8,[rsp+0x28]
  435ec0:	mov    edx,edi
  435ec2:	mov    rcx,r14
  435ec5:	call   0x42abb8
  435eca:	mov    ebx,eax
  435ecc:	cmp    eax,r12d
  435ecf:	jne    0x435f81
  435ed5:	lea    r9,[rsp+0x42]
  435eda:	lea    r8,[rsp+0x20]
  435edf:	mov    edx,edi
  435ee1:	mov    rcx,r14
  435ee4:	call   0x42aad0
  435ee9:	mov    ebx,eax
  435eeb:	cmp    eax,r12d
  435eee:	jne    0x435f8e
  435ef4:	mov    WORD PTR [rsp+0x50],r12w
  435efa:	mov    WORD PTR [rsp+0x52],r12w
  435f00:	mov    QWORD PTR [rsp+0x58],r12
  435f05:	mov    rax,QWORD PTR [r13+0x0]
  435f09:	lea    r9,[rsp+0x50]
  435f0e:	mov    r8d,0x28
  435f14:	mov    edx,edi
  435f16:	mov    rcx,r13
  435f19:	call   QWORD PTR [rax+0x30]
  435f1c:	mov    ebx,eax
  435f1e:	cmp    eax,r12d
  435f21:	jne    0x435f9b
  435f23:	cmp    WORD PTR [rsp+0x50],0x13
  435f29:	jne    0x435f3d
  435f2b:	mov    eax,DWORD PTR [rsp+0x58]
  435f2f:	mov    DWORD PTR [rsp+0x4c],eax
  435f33:	cmp    eax,r12d
  435f36:	jl     0x435fb3
  435f38:	cmp    eax,0x2
  435f3b:	jg     0x435fb3
  435f3d:	lea    rcx,[rsp+0x50]
  435f42:	call   0x40b028
  435f47:	mov    DWORD PTR [rsp+0x48],edi
  435f4b:	lea    rdx,[rsp+0x20]
  435f50:	mov    rcx,rbp
  435f53:	call   0x434eb8
  435f58:	nop
  435f59:	mov    rcx,QWORD PTR [rsp+0x30]
  435f5e:	call   0x40215c
  435f63:	inc    edi
  435f65:	cmp    edi,DWORD PTR [rsp+0x130]
  435f6c:	jb     0x435df1
  435f72:	jmp    0x435fd0
  435f74:	mov    rcx,QWORD PTR [rsp+0x30]
  435f79:	call   0x40215c
  435f7e:	nop
  435f7f:	jmp    0x435fd3
  435f81:	mov    rcx,QWORD PTR [rsp+0x30]
  435f86:	call   0x40215c
  435f8b:	nop
  435f8c:	jmp    0x435fd3
  435f8e:	mov    rcx,QWORD PTR [rsp+0x30]
  435f93:	call   0x40215c
  435f98:	nop
  435f99:	jmp    0x435fd3
  435f9b:	lea    rcx,[rsp+0x50]
  435fa0:	call   0x40b028
  435fa5:	nop
  435fa6:	mov    rcx,QWORD PTR [rsp+0x30]
  435fab:	call   0x40215c
  435fb0:	nop
  435fb1:	jmp    0x435fd3
  435fb3:	lea    rcx,[rsp+0x50]
  435fb8:	call   0x40b028
  435fbd:	nop
  435fbe:	mov    rcx,QWORD PTR [rsp+0x30]
  435fc3:	call   0x40215c
  435fc8:	nop
  435fc9:	mov    ebx,0x80004005
  435fce:	jmp    0x435fd3
  435fd0:	mov    ebx,r12d
  435fd3:	lea    rcx,[rsp+0x70]
  435fd8:	call   0x413404
  435fdd:	mov    eax,ebx
  435fdf:	add    rsp,0xd8
  435fe6:	pop    r15
  435fe8:	pop    r14
  435fea:	pop    r13
  435fec:	pop    r12
  435fee:	pop    rdi
  435fef:	pop    rsi
  435ff0:	pop    rbp
  435ff1:	pop    rbx
  435ff2:	ret    
  435ff3:	int3   
  435ff4:	int3   
  435ff5:	int3   
  435ff6:	int3   
  435ff7:	int3   
  435ff8:	int3   
  435ff9:	int3   
  435ffa:	int3   
  435ffb:	int3   
  435ffc:	int3   
  435ffd:	int3   
  435ffe:	int3   
  435fff:	int3   
  436000:	rex.W push rbp
  436002:	sub    rsp,0x20
  436006:	mov    rbp,rdx
  436009:	lea    rcx,[rbp+0x70]
  43600d:	call   0x401000
  436012:	add    rsp,0x20
  436016:	pop    rbp
  436017:	ret    
  436018:	int3   
  436019:	int3   
  43601a:	int3   
  43601b:	int3   
  43601c:	int3   
  43601d:	int3   
  43601e:	int3   
  43601f:	int3   
  436020:	rex.W push rbp
  436022:	sub    rsp,0x20
  436026:	mov    rbp,rdx
  436029:	lea    rcx,[rbp+0x70]
  43602d:	add    rcx,0x10
  436031:	call   0x4047cc
  436036:	add    rsp,0x20
  43603a:	pop    rbp
  43603b:	ret    
  43603c:	int3   
  43603d:	int3   
  43603e:	int3   
  43603f:	int3   
  436040:	rex.W push rbp
  436042:	sub    rsp,0x20
  436046:	mov    rbp,rdx
  436049:	lea    rcx,[rbp+0x70]
  43604d:	add    rcx,0x20
  436051:	call   0x401000
  436056:	add    rsp,0x20
  43605a:	pop    rbp
  43605b:	ret    
  43605c:	int3   
  43605d:	int3   
  43605e:	int3   
  43605f:	int3   
  436060:	rex.W push rbp
  436062:	sub    rsp,0x20
  436066:	mov    rbp,rdx
  436069:	lea    rcx,[rbp+0x70]
  43606d:	call   0x413404
  436072:	add    rsp,0x20
  436076:	pop    rbp
  436077:	ret    
  436078:	int3   
  436079:	int3   
  43607a:	int3   
  43607b:	int3   
  43607c:	int3   
  43607d:	int3   
  43607e:	int3   
  43607f:	int3   
  436080:	rex.W push rbp
  436082:	sub    rsp,0x20
  436086:	mov    rbp,rdx
  436089:	lea    rcx,[rbp+0x20]
  43608d:	call   0x434c34
  436092:	add    rsp,0x20
  436096:	pop    rbp
  436097:	ret    
  436098:	int3   
  436099:	int3   
  43609a:	int3   
  43609b:	int3   
  43609c:	int3   
  43609d:	int3   
  43609e:	int3   
  43609f:	int3   
  4360a0:	rex.W push rbp
  4360a2:	sub    rsp,0x20
  4360a6:	mov    rbp,rdx
  4360a9:	lea    rcx,[rbp+0x50]
  4360ad:	call   0x40b830
  4360b2:	add    rsp,0x20
  4360b6:	pop    rbp
  4360b7:	ret    
  4360b8:	rex.W push rbx
  4360ba:	push   rbp
  4360bb:	push   rsi
  4360bc:	push   rdi
  4360bd:	push   r12
  4360bf:	push   r13
  4360c1:	push   r14
  4360c3:	push   r15
  4360c5:	sub    rsp,0xf8
  4360cc:	mov    QWORD PTR [rsp+0xe0],0xfffffffffffffffe
  4360d8:	mov    r12,r9
  4360db:	mov    rsi,r8
  4360de:	mov    bpl,dl
  4360e1:	mov    r15,rcx
  4360e4:	mov    QWORD PTR [rsp+0x20],0x0
  4360ed:	mov    edi,DWORD PTR [rcx+0x8]
  4360f0:	mov    r13,QWORD PTR [rsp+0x160]
  4360f8:	test   r13,r13
  4360fb:	je     0x436177
  4360fd:	mov    edi,DWORD PTR [r13+0xc0]
  436104:	test   edi,edi
  436106:	jns    0x436112
  436108:	mov    eax,0x80004001
  43610d:	jmp    0x437af5
  436112:	mov    rbx,QWORD PTR [r13+0x0]
  436116:	mov    QWORD PTR [rsp+0x140],rbx
  43611e:	test   rbx,rbx
  436121:	je     0x43612d
  436123:	mov    rax,QWORD PTR [rbx]
  436126:	mov    rcx,rbx
  436129:	call   QWORD PTR [rax+0x8]
  43612c:	nop
  43612d:	mov    rax,QWORD PTR [rbx]
  436130:	lea    r8,[rsp+0x20]
  436135:	lea    rdx,[rip+0x1dcbc]        # 0x453df8
  43613c:	mov    rcx,rbx
  43613f:	call   QWORD PTR [rax]
  436141:	test   eax,eax
  436143:	je     0x436169
  436145:	mov    rax,QWORD PTR [rip+0x32564]        # 0x4686b0
  43614c:	mov    QWORD PTR [rsp+0x160],rax
  436154:	lea    rdx,[rip+0x30f1d]        # 0x467078
  43615b:	lea    rcx,[rsp+0x160]
  436163:	call   0x44b71e
  436168:	nop
  436169:	mov    rax,QWORD PTR [rbx]
  43616c:	mov    rcx,rbx
  43616f:	call   QWORD PTR [rax+0x10]
  436172:	jmp    0x436222
  436177:	lea    r8,[rsp+0x20]
  43617c:	mov    edx,edi
  43617e:	mov    rcx,rsi
  436181:	call   0x435140
  436186:	mov    ebx,eax
  436188:	test   eax,eax
  43618a:	je     0x4361a3
  43618c:	mov    rcx,QWORD PTR [rsp+0x20]
  436191:	test   rcx,rcx
  436194:	je     0x43619c
  436196:	mov    rdx,QWORD PTR [rcx]
  436199:	call   QWORD PTR [rdx+0x10]
  43619c:	mov    eax,ebx
  43619e:	jmp    0x437af5
  4361a3:	mov    QWORD PTR [rsp+0x140],0x0
  4361af:	mov    rcx,QWORD PTR [rsp+0x20]
  4361b4:	mov    rax,QWORD PTR [rcx]
  4361b7:	lea    r8,[rsp+0x140]
  4361bf:	lea    rdx,[rip+0x1db32]        # 0x453cf8
  4361c6:	call   QWORD PTR [rax]
  4361c8:	mov    rcx,QWORD PTR [rsp+0x140]
  4361d0:	test   rcx,rcx
  4361d3:	je     0x436217
  4361d5:	mov    rax,QWORD PTR [rcx]
  4361d8:	mov    rdx,rsi
  4361db:	call   QWORD PTR [rax+0x18]
  4361de:	mov    ebx,eax
  4361e0:	test   eax,eax
  4361e2:	je     0x43620f
  4361e4:	mov    rcx,QWORD PTR [rsp+0x140]
  4361ec:	test   rcx,rcx
  4361ef:	je     0x4361f8
  4361f1:	mov    rdx,QWORD PTR [rcx]
  4361f4:	call   QWORD PTR [rdx+0x10]
  4361f7:	nop
  4361f8:	mov    rcx,QWORD PTR [rsp+0x20]
  4361fd:	test   rcx,rcx
  436200:	je     0x436208
  436202:	mov    rax,QWORD PTR [rcx]
  436205:	call   QWORD PTR [rax+0x10]
  436208:	mov    eax,ebx
  43620a:	jmp    0x437af5
  43620f:	mov    rcx,QWORD PTR [rsp+0x140]
  436217:	test   rcx,rcx
  43621a:	je     0x436222
  43621c:	mov    rax,QWORD PTR [rcx]
  43621f:	call   QWORD PTR [rax+0x10]
  436222:	mov    rcx,QWORD PTR [rsp+0x20]
  436227:	test   rcx,rcx
  43622a:	jne    0x436250
  43622c:	mov    rax,QWORD PTR [rip+0x3247d]        # 0x4686b0
  436233:	mov    QWORD PTR [rsp+0x160],rax
  43623b:	lea    rdx,[rip+0x30e36]        # 0x467078
  436242:	lea    rcx,[rsp+0x160]
  43624a:	call   0x44b71e
  43624f:	int3   
  436250:	mov    rax,QWORD PTR [rcx]
  436253:	lea    rdx,[rsp+0x140]
  43625b:	call   QWORD PTR [rax+0x20]
  43625e:	mov    ebx,eax
  436260:	test   eax,eax
  436262:	je     0x43627b
  436264:	mov    rcx,QWORD PTR [rsp+0x20]
  436269:	test   rcx,rcx
  43626c:	je     0x436274
  43626e:	mov    rdx,QWORD PTR [rcx]
  436271:	call   QWORD PTR [rdx+0x10]
  436274:	mov    eax,ebx
  436276:	jmp    0x437af5
  43627b:	mov    r8d,DWORD PTR [rsp+0x140]
  436283:	cmp    r8d,0x2
  436287:	ja     0x437ae0
  43628d:	mov    ecx,edi
  43628f:	mov    rax,QWORD PTR [rsi+0x40]
  436293:	mov    rdx,QWORD PTR [rax+rcx*8]
  436297:	xor    esi,esi
  436299:	cmp    BYTE PTR [r15+0x13a],sil
  4362a0:	je     0x4362c4
  4362a2:	mov    eax,DWORD PTR [rdx]
  4362a4:	shr    eax,1
  4362a6:	test   al,0x1
  4362a8:	jne    0x4362c4
  4362aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4362af:	cmp    rcx,rsi
  4362b2:	je     0x4362ba
  4362b4:	mov    rax,QWORD PTR [rcx]
  4362b7:	call   QWORD PTR [rax+0x10]
  4362ba:	mov    eax,0x80004001
  4362bf:	jmp    0x437af5
  4362c4:	cmp    BYTE PTR [r15+0x138],sil
  4362cb:	je     0x4362f0
  4362cd:	mov    eax,DWORD PTR [rdx]
  4362cf:	shr    eax,0x2
  4362d2:	test   al,0x1
  4362d4:	jne    0x4362f0
  4362d6:	mov    rcx,QWORD PTR [rsp+0x20]
  4362db:	cmp    rcx,rsi
  4362de:	je     0x4362e6
  4362e0:	mov    rax,QWORD PTR [rcx]
  4362e3:	call   QWORD PTR [rax+0x10]
  4362e6:	mov    eax,0x80004001
  4362eb:	jmp    0x437af5
  4362f0:	mov    QWORD PTR [rsp+0x38],rsi
  4362f5:	mov    eax,esi
  4362f7:	mov    DWORD PTR [rsp+0x40],esi
  4362fb:	mov    DWORD PTR [rsp+0x44],esi
  4362ff:	mov    QWORD PTR [rsp+0x28],rsi
  436304:	mov    DWORD PTR [rsp+0x30],esi
  436308:	mov    DWORD PTR [rsp+0x34],esi
  43630c:	cmp    DWORD PTR [r15+0x150],esi
  436313:	je     0x436674
  436319:	mov    edi,esi
  43631b:	mov    DWORD PTR [rsp+0x140],esi
  436322:	mov    r14,QWORD PTR [rsp+0x170]
  43632a:	cmp    DWORD PTR [r14+0x8],esi
  43632e:	jbe    0x4366fc
  436334:	mov    r12,rsi
  436337:	mov    QWORD PTR [rsp+0x60],rsi
  43633c:	mov    rax,QWORD PTR [r14]
  43633f:	mov    rbx,QWORD PTR [r12+rax*1]
  436343:	lea    rcx,[rsp+0x78]
  436348:	call   0x403150
  43634d:	nop
  43634e:	xor    ecx,ecx
  436350:	cmp    BYTE PTR [rbx+0x24],cl
  436353:	je     0x4364c2
  436359:	mov    edi,ecx
  43635b:	cmp    DWORD PTR [r15+0x150],ecx
  436362:	jbe    0x4364bb
  436368:	mov    rbp,rcx
  43636b:	mov    rax,QWORD PTR [r15+0x148]
  436372:	mov    r14,QWORD PTR [rax+rbp*1]
  436376:	lea    r9,[rsp+0x78]
  43637b:	lea    r8,[rbx+0x10]
  43637f:	mov    dl,BYTE PTR [rbx+0x20]
  436382:	mov    rcx,r14
  436385:	call   0x434a6c
  43638a:	xor    ecx,ecx
  43638c:	cmp    al,cl
  43638e:	jne    0x436415
  436394:	cmp    BYTE PTR [rbx+0x21],cl
  436397:	je     0x4363e1
  436399:	mov    rcx,QWORD PTR [rbx+0x10]
  43639d:	call   0x429968
  4363a2:	mov    r12d,eax
  4363a5:	xor    ecx,ecx
  4363a7:	cmp    eax,ecx
  4363a9:	jl     0x4363e1
  4363ab:	mov    r8d,eax
  4363ae:	lea    rdx,[rsp+0x68]
  4363b3:	lea    rcx,[rbx+0x10]
  4363b7:	call   0x4042a0
  4363bc:	nop
  4363bd:	lea    r9,[rsp+0x78]
  4363c2:	lea    r8,[rsp+0x68]
  4363c7:	xor    edx,edx
  4363c9:	mov    rcx,r14
  4363cc:	call   0x434a6c
  4363d1:	test   al,al
  4363d3:	jne    0x436439
  4363d5:	mov    rcx,QWORD PTR [rsp+0x68]
  4363da:	call   0x40215c
  4363df:	xor    ecx,ecx
  4363e1:	inc    edi
  4363e3:	add    rbp,0x8
  4363e7:	cmp    edi,DWORD PTR [r15+0x150]
  4363ee:	jb     0x43636b
  4363f4:	mov    edi,DWORD PTR [rsp+0x140]
  4363fb:	mov    r12,QWORD PTR [rsp+0x60]
  436400:	mov    r13,QWORD PTR [rsp+0x160]
  436408:	mov    r14,QWORD PTR [rsp+0x170]
  436410:	jmp    0x4364c2
  436415:	mov    sil,0x1
  436418:	mov    edi,DWORD PTR [rsp+0x140]
  43641f:	mov    r12,QWORD PTR [rsp+0x60]
  436424:	mov    r13,QWORD PTR [rsp+0x160]
  43642c:	mov    r14,QWORD PTR [rsp+0x170]
  436434:	jmp    0x4364c2
  436439:	mov    sil,0x1
  43643c:	mov    edx,DWORD PTR [rsp+0x80]
  436443:	cmp    DWORD PTR [rsp+0x84],edx
  43644a:	jne    0x43645d
  43644c:	lea    rcx,[rsp+0x78]
  436451:	call   0x402f2c
  436456:	mov    edx,DWORD PTR [rsp+0x80]
  43645d:	mov    rcx,QWORD PTR [rsp+0x78]
  436462:	mov    eax,edx
  436464:	mov    WORD PTR [rcx+rax*2],0x3a
  43646a:	inc    edx
  43646c:	mov    WORD PTR [rcx+rdx*2],0x0
  436472:	mov    DWORD PTR [rsp+0x80],edx
  436479:	lea    ecx,[r12+0x1]
  43647e:	mov    rax,QWORD PTR [rbx+0x10]
  436482:	lea    rdx,[rax+rcx*2]
  436486:	lea    rcx,[rsp+0x78]
  43648b:	call   0x4033f0
  436490:	nop
  436491:	mov    rcx,QWORD PTR [rsp+0x68]
  436496:	call   0x40215c
  43649b:	mov    edi,DWORD PTR [rsp+0x140]
  4364a2:	mov    r12,QWORD PTR [rsp+0x60]
  4364a7:	mov    r13,QWORD PTR [rsp+0x160]
  4364af:	mov    r14,QWORD PTR [rsp+0x170]
  4364b7:	xor    ecx,ecx
  4364b9:	jmp    0x4364c2
  4364bb:	mov    edi,DWORD PTR [rsp+0x140]
  4364c2:	mov    BYTE PTR [rsp+0x48],cl
  4364c6:	mov    BYTE PTR [rsp+0x49],cl
  4364ca:	mov    BYTE PTR [rsp+0x4a],cl
  4364ce:	mov    BYTE PTR [rsp+0x4b],cl
  4364d2:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  4364da:	mov    DWORD PTR [rsp+0x50],0xffffffff
  4364e2:	mov    DWORD PTR [rsp+0x54],0xffffffff
  4364ea:	mov    BYTE PTR [rsp+0x58],cl
  4364ee:	mov    eax,DWORD PTR [rbx+0x28]
  4364f1:	mov    BYTE PTR [rsp+0x49],cl
  4364f5:	mov    BYTE PTR [rsp+0x48],cl
  4364f9:	mov    BYTE PTR [rsp+0x4a],0x1
  4364fe:	mov    BYTE PTR [rsp+0x4b],cl
  436502:	mov    DWORD PTR [rsp+0x50],eax
  436506:	cmp    sil,cl
  436509:	je     0x43656c
  43650b:	mov    BYTE PTR [rsp+0x49],0x1
  436510:	lea    r9,[rsp+0x4b]
  436515:	mov    r8d,0x15
  43651b:	mov    edx,edi
  43651d:	mov    rcx,QWORD PTR [r13+0x0]
  436521:	call   0x429798
  436526:	mov    ebp,eax
  436528:	xor    esi,esi
  43652a:	cmp    eax,esi
  43652c:	jne    0x436601
  436532:	lea    ecx,[rsi+0x10]
  436535:	call   0x402130
  43653a:	mov    QWORD PTR [rsp+0x140],rax
  436542:	cmp    rax,rsi
  436545:	je     0x436556
  436547:	lea    rdx,[rsp+0x78]
  43654c:	mov    rcx,rax
  43654f:	call   0x403208
  436554:	jmp    0x436559
  436556:	mov    rax,rsi
  436559:	mov    rdx,rax
  43655c:	lea    rcx,[rsp+0x28]
  436561:	call   0x4010c8
  436566:	mov    DWORD PTR [rsp+0x54],eax
  43656a:	jmp    0x43656e
  43656c:	xor    esi,esi
  43656e:	lea    rdx,[rsp+0xc0]
  436576:	lea    rcx,[rsp+0x48]
  43657b:	mov    rax,QWORD PTR [rcx]
  43657e:	mov    QWORD PTR [rdx],rax
  436581:	mov    rax,QWORD PTR [rcx+0x8]
  436585:	mov    QWORD PTR [rdx+0x8],rax
  436589:	mov    eax,DWORD PTR [rcx+0x10]
  43658c:	mov    DWORD PTR [rdx+0x10],eax
  43658f:	lea    rcx,[rsp+0x38]
  436594:	call   0x4350a8
  436599:	mov    r11d,DWORD PTR [rsp+0x40]
  43659e:	lea    rcx,[r11+r11*4]
  4365a2:	mov    rax,QWORD PTR [rsp+0x38]
  4365a7:	lea    rcx,[rax+rcx*4]
  4365ab:	lea    rdx,[rsp+0xc0]
  4365b3:	mov    r8d,0x14
  4365b9:	call   0x44b480
  4365be:	inc    DWORD PTR [rsp+0x40]
  4365c2:	mov    rcx,QWORD PTR [rsp+0x78]
  4365c7:	call   0x40215c
  4365cc:	inc    edi
  4365ce:	mov    DWORD PTR [rsp+0x140],edi
  4365d5:	add    r12,0x8
  4365d9:	mov    QWORD PTR [rsp+0x60],r12
  4365de:	cmp    edi,DWORD PTR [r14+0x8]
  4365e2:	jb     0x43633c
  4365e8:	mov    eax,DWORD PTR [rsp+0x40]
  4365ec:	mov    rbx,QWORD PTR [rsp+0x1a0]
  4365f4:	mov    rdi,QWORD PTR [rsp+0x180]
  4365fc:	jmp    0x43670c
  436601:	mov    rcx,QWORD PTR [rsp+0x78]
  436606:	call   0x40215c
  43660b:	nop
  43660c:	movsxd rbx,DWORD PTR [rsp+0x30]
  436611:	mov    rdi,rbx
  436614:	cmp    ebx,esi
  436616:	je     0x436647
  436618:	shl    rdi,0x3
  43661c:	add    ebx,0xffffffff
  43661f:	sub    rdi,0x8
  436623:	mov    rax,QWORD PTR [rsp+0x28]
  436628:	mov    rsi,QWORD PTR [rdi+rax*1]
  43662c:	test   rsi,rsi
  43662f:	je     0x436641
  436631:	mov    rcx,QWORD PTR [rsi]
  436634:	call   0x40215c
  436639:	mov    rcx,rsi
  43663c:	call   0x40215c
  436641:	xor    esi,esi
  436643:	cmp    ebx,esi
  436645:	jne    0x43661c
  436647:	mov    rcx,QWORD PTR [rsp+0x28]
  43664c:	call   0x40215c
  436651:	nop
  436652:	mov    rcx,QWORD PTR [rsp+0x38]
  436657:	call   0x40215c
  43665c:	nop
  43665d:	mov    rcx,QWORD PTR [rsp+0x20]
  436662:	cmp    rcx,rsi
  436665:	je     0x43666d
  436667:	mov    rax,QWORD PTR [rcx]
  43666a:	call   QWORD PTR [rax+0x10]
  43666d:	mov    eax,ebp
  43666f:	jmp    0x437af5
  436674:	mov    QWORD PTR [rsp+0x48],rsi
  436679:	mov    DWORD PTR [rsp+0x50],esi
  43667d:	mov    DWORD PTR [rsp+0x54],esi
  436681:	lea    r9,[rsp+0x48]
  436686:	mov    r14,QWORD PTR [rsp+0x170]
  43668e:	mov    rdx,r14
  436691:	mov    rdi,QWORD PTR [rsp+0x180]
  436699:	mov    rcx,rdi
  43669c:	call   0x43d820
  4366a1:	lea    r11,[rip+0x1ae68]        # 0x451510
  4366a8:	mov    QWORD PTR [rsp+0xc0],r11
  4366b0:	mov    QWORD PTR [rsp+0xc8],r14
  4366b8:	mov    rbx,QWORD PTR [rsp+0x1a0]
  4366c0:	mov    QWORD PTR [rsp+0xd0],rbx
  4366c8:	neg    bpl
  4366cb:	sbb    r9,r9
  4366ce:	lea    rax,[rsp+0xc0]
  4366d6:	and    r9,rax
  4366d9:	lea    r8,[rsp+0x38]
  4366de:	mov    rdx,r12
  4366e1:	lea    rcx,[rsp+0x48]
  4366e6:	call   0x43e104
  4366eb:	nop
  4366ec:	mov    rcx,QWORD PTR [rsp+0x48]
  4366f1:	call   0x40215c
  4366f6:	mov    eax,DWORD PTR [rsp+0x40]
  4366fa:	jmp    0x43670c
  4366fc:	mov    rbx,QWORD PTR [rsp+0x1a0]
  436704:	mov    rdi,QWORD PTR [rsp+0x180]
  43670c:	mov    edx,esi
  43670e:	cmp    eax,esi
  436710:	jbe    0x43672a
  436712:	mov    rcx,QWORD PTR [rsp+0x38]
  436717:	mov    r8d,eax
  43671a:	cmp    BYTE PTR [rcx],sil
  43671d:	je     0x436721
  43671f:	inc    edx
  436721:	add    rcx,0x14
  436725:	dec    r8
  436728:	jne    0x43671a
  43672a:	mov    rax,QWORD PTR [rbx]
  43672d:	mov    rcx,rbx
  436730:	call   QWORD PTR [rax+0x28]
  436733:	mov    ebp,eax
  436735:	cmp    eax,esi
  436737:	je     0x4367a1
  436739:	movsxd rbx,DWORD PTR [rsp+0x30]
  43673e:	mov    rdi,rbx
  436741:	cmp    ebx,esi
  436743:	je     0x436774
  436745:	shl    rdi,0x3
  436749:	add    ebx,0xffffffff
  43674c:	sub    rdi,0x8
  436750:	mov    rax,QWORD PTR [rsp+0x28]
  436755:	mov    rsi,QWORD PTR [rax+rdi*1]
  436759:	test   rsi,rsi
  43675c:	je     0x43676e
  43675e:	mov    rcx,QWORD PTR [rsi]
  436761:	call   0x40215c
  436766:	mov    rcx,rsi
  436769:	call   0x40215c
  43676e:	xor    esi,esi
  436770:	cmp    ebx,esi
  436772:	jne    0x436749
  436774:	mov    rcx,QWORD PTR [rsp+0x28]
  436779:	call   0x40215c
  43677e:	nop
  43677f:	mov    rcx,QWORD PTR [rsp+0x38]
  436784:	call   0x40215c
  436789:	nop
  43678a:	mov    rcx,QWORD PTR [rsp+0x20]
  43678f:	cmp    rcx,rsi
  436792:	je     0x43679a
  436794:	mov    rax,QWORD PTR [rcx]
  436797:	call   QWORD PTR [rax+0x10]
  43679a:	mov    eax,ebp
  43679c:	jmp    0x437af5
  4367a1:	mov    ecx,0x108
  4367a6:	call   0x402130
  4367ab:	mov    QWORD PTR [rsp+0x140],rax
  4367b3:	cmp    rax,rsi
  4367b6:	je     0x4367cd
  4367b8:	mov    rcx,rax
  4367bb:	call   0x43c6d8
  4367c0:	mov    r12,rax
  4367c3:	mov    QWORD PTR [rsp+0xa8],rax
  4367cb:	jmp    0x4367d8
  4367cd:	mov    r12,rsi
  4367d0:	mov    QWORD PTR [rsp+0xa8],rsi
  4367d8:	mov    QWORD PTR [rsp+0xe8],r12
  4367e0:	cmp    r12,rsi
  4367e3:	je     0x4367f0
  4367e5:	mov    rax,QWORD PTR [r12]
  4367e9:	mov    rcx,r12
  4367ec:	call   QWORD PTR [rax+0x8]
  4367ef:	nop
  4367f0:	mov    al,BYTE PTR [r15+0xe0]
  4367f7:	mov    BYTE PTR [r12+0xf8],al
  4367ff:	mov    al,BYTE PTR [r15+0xe1]
  436806:	mov    BYTE PTR [r12+0xf9],al
  43680e:	mov    QWORD PTR [r12+0xb8],rbx
  436816:	cmp    r13,rsi
  436819:	je     0x436848
  43681b:	mov    rbx,QWORD PTR [r13+0x0]
  43681f:	cmp    rbx,rsi
  436822:	je     0x43682d
  436824:	mov    rax,QWORD PTR [rbx]
  436827:	mov    rcx,rbx
  43682a:	call   QWORD PTR [rax+0x8]
  43682d:	mov    rcx,QWORD PTR [r12+0xd8]
  436835:	cmp    rcx,rsi
  436838:	je     0x436840
  43683a:	mov    rax,QWORD PTR [rcx]
  43683d:	call   QWORD PTR [rax+0x10]
  436840:	mov    QWORD PTR [r12+0xd8],rbx
  436848:	mov    QWORD PTR [r12+0xc0],rdi
  436850:	mov    rax,QWORD PTR [rsp+0x188]
  436858:	mov    QWORD PTR [r12+0xc8],rax
  436860:	mov    al,BYTE PTR [r15+0x138]
  436867:	mov    BYTE PTR [r12+0xfb],al
  43686f:	mov    al,BYTE PTR [r15+0x13c]
  436876:	mov    BYTE PTR [r12+0xfc],al
  43687e:	mov    al,BYTE PTR [r15+0x13e]
  436885:	mov    BYTE PTR [r12+0xfd],al
  43688d:	mov    QWORD PTR [r12+0xd0],r13
  436895:	mov    QWORD PTR [r12+0xe0],r14
  43689d:	lea    rax,[rsp+0x38]
  4368a2:	mov    QWORD PTR [r12+0xe8],rax
  4368aa:	mov    rax,QWORD PTR [rsp+0x178]
  4368b2:	mov    QWORD PTR [r12+0x100],rax
  4368ba:	cmp    DWORD PTR [r15+0x150],esi
  4368c1:	je     0x4368d0
  4368c3:	lea    rax,[rsp+0x28]
  4368c8:	mov    QWORD PTR [r12+0xf0],rax
  4368d0:	mov    rbx,rsi
  4368d3:	mov    QWORD PTR [rsp+0xb0],rsi
  4368db:	mov    QWORD PTR [rsp+0xa0],rsi
  4368e3:	cmp    BYTE PTR [r15+0xf8],sil
  4368ea:	jne    0x436967
  4368ec:	lea    rcx,[rsp+0x68]
  4368f1:	call   0x403150
  4368f6:	nop
  4368f7:	lea    rdx,[rsp+0x48]
  4368fc:	mov    r14,QWORD PTR [rsp+0x168]
  436904:	mov    rcx,r14
  436907:	call   0x434818
  43690c:	nop
  43690d:	lea    rdx,[rsp+0x68]
  436912:	mov    rcx,QWORD PTR [rax]
  436915:	call   0x407134
  43691a:	cmp    al,sil
  43691d:	sete   dil
  436921:	mov    rcx,QWORD PTR [rsp+0x48]
  436926:	call   0x40215c
  43692b:	cmp    dil,sil
  43692e:	je     0x436950
  436930:	mov    DWORD PTR [rsp+0x160],0x159fc9
  43693b:	lea    rdx,[rip+0x3078e]        # 0x4670d0
  436942:	lea    rcx,[rsp+0x160]
  43694a:	call   0x44b71e
  43694f:	int3   
  436950:	mov    rcx,QWORD PTR [rsp+0x68]
  436955:	call   0x407360
  43695a:	nop
  43695b:	mov    rcx,QWORD PTR [rsp+0x68]
  436960:	call   0x40215c
  436965:	jmp    0x43696f
  436967:	mov    r14,QWORD PTR [rsp+0x168]
  43696f:	mov    QWORD PTR [rsp+0x90],rsi
  436977:	mov    QWORD PTR [rsp+0x98],rsi
  43697f:	mov    QWORD PTR [rsp+0x60],rsi
  436984:	lea    rdi,[rip+0x18415]        # 0x44eda0
  43698b:	cmp    DWORD PTR [r15+0x160],esi
  436992:	jne    0x436c18
  436998:	cmp    BYTE PTR [r15+0xf8],sil
  43699f:	je     0x4369ff
  4369a1:	mov    ecx,0x18
  4369a6:	call   0x402130
  4369ab:	mov    r14,rax
  4369ae:	mov    QWORD PTR [rsp+0x98],rax
  4369b6:	cmp    rax,rsi
  4369b9:	je     0x4369ce
  4369bb:	mov    DWORD PTR [rax+0x8],esi
  4369be:	lea    rax,[rip+0x18393]        # 0x44ed58
  4369c5:	mov    QWORD PTR [r14],rax
  4369c8:	mov    QWORD PTR [r14+0x10],rsi
  4369cc:	jmp    0x4369d9
  4369ce:	mov    r14,rsi
  4369d1:	mov    QWORD PTR [rsp+0x98],rsi
  4369d9:	cmp    r14,rsi
  4369dc:	je     0x4369e7
  4369de:	mov    rax,QWORD PTR [r14]
  4369e1:	mov    rcx,r14
  4369e4:	call   QWORD PTR [rax+0x8]
  4369e7:	mov    rdi,r14
  4369ea:	mov    QWORD PTR [rsp+0xa0],r14
  4369f2:	mov    r14,QWORD PTR [rsp+0x168]
  4369fa:	jmp    0x436e22
  4369ff:	mov    ecx,0x30
  436a04:	call   0x402130
  436a09:	mov    rbx,rax
  436a0c:	cmp    rax,rsi
  436a0f:	je     0x436a21
  436a11:	mov    DWORD PTR [rax+0x8],esi
  436a14:	mov    QWORD PTR [rax],rdi
  436a17:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  436a1f:	jmp    0x436a24
  436a21:	mov    rbx,rsi
  436a24:	mov    QWORD PTR [rsp+0x90],rbx
  436a2c:	cmp    rbx,rsi
  436a2f:	je     0x436a3a
  436a31:	mov    rax,QWORD PTR [rbx]
  436a34:	mov    rcx,rbx
  436a37:	call   QWORD PTR [rax+0x8]
  436a3a:	mov    QWORD PTR [rsp+0xb0],rbx
  436a42:	cmp    rbx,rsi
  436a45:	je     0x436a50
  436a47:	mov    rax,QWORD PTR [rbx]
  436a4a:	mov    rcx,rbx
  436a4d:	call   QWORD PTR [rax+0x8]
  436a50:	mov    rdi,rbx
  436a53:	mov    QWORD PTR [rsp+0xa0],rbx
  436a5b:	lea    rcx,[rsp+0x48]
  436a60:	call   0x403150
  436a65:	nop
  436a66:	cmp    BYTE PTR [r14+0x50],0x0
  436a6b:	je     0x436ab9
  436a6d:	test   esi,esi
  436a6f:	je     0x436a91
  436a71:	lea    rdx,[rsp+0xc0]
  436a79:	mov    ecx,esi
  436a7b:	call   0x401b10
  436a80:	lea    rcx,[r14+0x68]
  436a84:	lea    rdx,[rsp+0xc0]
  436a8c:	call   0x403290
  436a91:	lea    rdx,[rsp+0x68]
  436a96:	mov    rcx,r14
  436a99:	call   0x434968
  436a9e:	nop
  436a9f:	mov    rdx,rax
  436aa2:	lea    rcx,[rsp+0x48]
  436aa7:	call   0x4032f8
  436aac:	nop
  436aad:	mov    rcx,QWORD PTR [rsp+0x68]
  436ab2:	call   0x40215c
  436ab7:	jmp    0x436adf
  436ab9:	lea    rdx,[rsp+0x78]
  436abe:	mov    rcx,r14
  436ac1:	call   0x434818
  436ac6:	nop
  436ac7:	mov    rdx,rax
  436aca:	lea    rcx,[rsp+0x48]
  436acf:	call   0x4032f8
  436ad4:	nop
  436ad5:	mov    rcx,QWORD PTR [rsp+0x78]
  436ada:	call   0x40215c
  436adf:	mov    rdx,QWORD PTR [rsp+0x48]
  436ae4:	mov    QWORD PTR [rbx+0x28],0x0
  436aec:	xor    r8d,r8d
  436aef:	lea    rcx,[rbx+0x10]
  436af3:	call   0x4094d8
  436af8:	test   al,al
  436afa:	jne    0x436b1e
  436afc:	call   QWORD PTR [rip+0x1669e]        # 0x44d1a0
  436b02:	cmp    eax,0x50
  436b05:	jne    0x436b5e
  436b07:	cmp    BYTE PTR [r14+0x50],0x0
  436b0c:	je     0x436b5e
  436b0e:	inc    esi
  436b10:	cmp    esi,0x10000
  436b16:	jb     0x436a66
  436b1c:	jmp    0x436b5e
  436b1e:	mov    ecx,0x10
  436b23:	call   0x402130
  436b28:	mov    QWORD PTR [rsp+0x140],rax
  436b30:	xor    esi,esi
  436b32:	cmp    rax,rsi
  436b35:	je     0x436b46
  436b37:	lea    rdx,[rsp+0x48]
  436b3c:	mov    rcx,rax
  436b3f:	call   0x403208
  436b44:	jmp    0x436b49
  436b46:	mov    rax,rsi
  436b49:	mov    rdx,rax
  436b4c:	mov    rcx,QWORD PTR [rsp+0x190]
  436b54:	call   0x4010c8
  436b59:	jmp    0x436c09
  436b5e:	lea    r8,[rsp+0x48]
  436b63:	lea    rdx,[rip+0x1ab8e]        # 0x4516f8
  436b6a:	mov    rcx,QWORD PTR [rsp+0x198]
  436b72:	call   0x43579c
  436b77:	mov    ebp,eax
  436b79:	mov    rcx,QWORD PTR [rsp+0x48]
  436b7e:	call   0x40215c
  436b83:	nop
  436b84:	mov    rdx,QWORD PTR [rbx]
  436b87:	mov    rcx,rbx
  436b8a:	call   QWORD PTR [rdx+0x10]
  436b8d:	nop
  436b8e:	mov    rdx,QWORD PTR [rbx]
  436b91:	mov    rcx,rbx
  436b94:	call   QWORD PTR [rdx+0x10]
  436b97:	nop
  436b98:	mov    rdx,QWORD PTR [r12]
  436b9c:	mov    rcx,r12
  436b9f:	call   QWORD PTR [rdx+0x10]
  436ba2:	nop
  436ba3:	movsxd rbx,DWORD PTR [rsp+0x30]
  436ba8:	mov    rdi,rbx
  436bab:	test   ebx,ebx
  436bad:	je     0x436bdc
  436baf:	shl    rdi,0x3
  436bb3:	add    ebx,0xffffffff
  436bb6:	sub    rdi,0x8
  436bba:	mov    rax,QWORD PTR [rsp+0x28]
  436bbf:	mov    rsi,QWORD PTR [rax+rdi*1]
  436bc3:	test   rsi,rsi
  436bc6:	je     0x436bd8
  436bc8:	mov    rcx,QWORD PTR [rsi]
  436bcb:	call   0x40215c
  436bd0:	mov    rcx,rsi
  436bd3:	call   0x40215c
  436bd8:	test   ebx,ebx
  436bda:	jne    0x436bb3
  436bdc:	mov    rcx,QWORD PTR [rsp+0x28]
  436be1:	call   0x40215c
  436be6:	nop
  436be7:	mov    rcx,QWORD PTR [rsp+0x38]
  436bec:	call   0x40215c
  436bf1:	nop
  436bf2:	mov    rcx,QWORD PTR [rsp+0x20]
  436bf7:	test   rcx,rcx
  436bfa:	je     0x436c02
  436bfc:	mov    rax,QWORD PTR [rcx]
  436bff:	call   QWORD PTR [rax+0x10]
  436c02:	mov    eax,ebp
  436c04:	jmp    0x437af5
  436c09:	mov    rcx,QWORD PTR [rsp+0x48]
  436c0e:	call   0x40215c
  436c13:	jmp    0x436e22
  436c18:	cmp    BYTE PTR [r15+0xf8],sil
  436c1f:	je     0x436c97
  436c21:	mov    rax,QWORD PTR [r12]
  436c25:	mov    rcx,r12
  436c28:	call   QWORD PTR [rax+0x10]
  436c2b:	nop
  436c2c:	movsxd rbx,DWORD PTR [rsp+0x30]
  436c31:	mov    rdi,rbx
  436c34:	cmp    ebx,esi
  436c36:	je     0x436c67
  436c38:	shl    rdi,0x3
  436c3c:	add    ebx,0xffffffff
  436c3f:	sub    rdi,0x8
  436c43:	mov    rax,QWORD PTR [rsp+0x28]
  436c48:	mov    rsi,QWORD PTR [rax+rdi*1]
  436c4c:	test   rsi,rsi
  436c4f:	je     0x436c61
  436c51:	mov    rcx,QWORD PTR [rsi]
  436c54:	call   0x40215c
  436c59:	mov    rcx,rsi
  436c5c:	call   0x40215c
  436c61:	xor    esi,esi
  436c63:	cmp    ebx,esi
  436c65:	jne    0x436c3c
  436c67:	mov    rcx,QWORD PTR [rsp+0x28]
  436c6c:	call   0x40215c
  436c71:	nop
  436c72:	mov    rcx,QWORD PTR [rsp+0x38]
  436c77:	call   0x40215c
  436c7c:	nop
  436c7d:	mov    rcx,QWORD PTR [rsp+0x20]
  436c82:	cmp    rcx,rsi
  436c85:	je     0x436c8d
  436c87:	mov    rax,QWORD PTR [rcx]
  436c8a:	call   QWORD PTR [rax+0x10]
  436c8d:	mov    eax,0x80004005
  436c92:	jmp    0x437af5
  436c97:	cmp    r13,rsi
  436c9a:	je     0x436d29
  436ca0:	mov    rax,QWORD PTR [r13+0x100]
  436ca7:	add    rax,QWORD PTR [r13+0xd8]
  436cae:	cmp    rax,rsi
  436cb1:	jle    0x436d29
  436cb3:	mov    rax,QWORD PTR [r12]
  436cb7:	mov    rcx,r12
  436cba:	call   QWORD PTR [rax+0x10]
  436cbd:	nop
  436cbe:	movsxd rbx,DWORD PTR [rsp+0x30]
  436cc3:	mov    rdi,rbx
  436cc6:	cmp    ebx,esi
  436cc8:	je     0x436cf9
  436cca:	shl    rdi,0x3
  436cce:	add    ebx,0xffffffff
  436cd1:	sub    rdi,0x8
  436cd5:	mov    rax,QWORD PTR [rsp+0x28]
  436cda:	mov    rsi,QWORD PTR [rax+rdi*1]
  436cde:	test   rsi,rsi
  436ce1:	je     0x436cf3
  436ce3:	mov    rcx,QWORD PTR [rsi]
  436ce6:	call   0x40215c
  436ceb:	mov    rcx,rsi
  436cee:	call   0x40215c
  436cf3:	xor    esi,esi
  436cf5:	cmp    ebx,esi
  436cf7:	jne    0x436cce
  436cf9:	mov    rcx,QWORD PTR [rsp+0x28]
  436cfe:	call   0x40215c
  436d03:	nop
  436d04:	mov    rcx,QWORD PTR [rsp+0x38]
  436d09:	call   0x40215c
  436d0e:	nop
  436d0f:	mov    rcx,QWORD PTR [rsp+0x20]
  436d14:	cmp    rcx,rsi
  436d17:	je     0x436d1f
  436d19:	mov    rax,QWORD PTR [rcx]
  436d1c:	call   QWORD PTR [rax+0x10]
  436d1f:	mov    eax,0x80004001
  436d24:	jmp    0x437af5
  436d29:	mov    ecx,0x60
  436d2e:	call   0x402130
  436d33:	mov    rbx,rax
  436d36:	mov    QWORD PTR [rsp+0x140],rax
  436d3e:	cmp    rax,rsi
  436d41:	je     0x436d70
  436d43:	mov    DWORD PTR [rax+0x8],esi
  436d46:	lea    rax,[rip+0x1a903]        # 0x451650
  436d4d:	mov    QWORD PTR [rbx],rax
  436d50:	mov    QWORD PTR [rbx+0x28],rsi
  436d54:	mov    DWORD PTR [rbx+0x30],esi
  436d57:	mov    DWORD PTR [rbx+0x34],esi
  436d5a:	mov    QWORD PTR [rbx+0x38],rsi
  436d5e:	mov    DWORD PTR [rbx+0x40],esi
  436d61:	mov    DWORD PTR [rbx+0x44],esi
  436d64:	lea    rcx,[rbx+0x48]
  436d68:	call   0x403150
  436d6d:	nop
  436d6e:	jmp    0x436d73
  436d70:	mov    rbx,rsi
  436d73:	mov    QWORD PTR [rsp+0x60],rbx
  436d78:	cmp    rbx,rsi
  436d7b:	je     0x436d86
  436d7d:	mov    rax,QWORD PTR [rbx]
  436d80:	mov    rcx,rbx
  436d83:	call   QWORD PTR [rax+0x8]
  436d86:	mov    QWORD PTR [rsp+0xb0],rbx
  436d8e:	cmp    rbx,rsi
  436d91:	je     0x436d9c
  436d93:	mov    rax,QWORD PTR [rbx]
  436d96:	mov    rcx,rbx
  436d99:	call   QWORD PTR [rax+0x8]
  436d9c:	mov    rdi,rbx
  436d9f:	mov    QWORD PTR [rsp+0xa0],rbx
  436da7:	lea    rdx,[r15+0x158]
  436dae:	lea    rcx,[rbx+0x38]
  436db2:	call   0x434cb4
  436db7:	lea    rdx,[rsp+0x68]
  436dbc:	mov    rcx,r14
  436dbf:	call   0x4348c0
  436dc4:	nop
  436dc5:	mov    rdx,rax
  436dc8:	lea    rcx,[rbx+0x48]
  436dcc:	call   0x4032f8
  436dd1:	nop
  436dd2:	mov    rcx,QWORD PTR [rsp+0x68]
  436dd7:	call   0x40215c
  436ddc:	mov    eax,DWORD PTR [rbx+0x50]
  436ddf:	cmp    DWORD PTR [rbx+0x54],eax
  436de2:	jne    0x436ded
  436de4:	lea    rcx,[rbx+0x48]
  436de8:	call   0x402f2c
  436ded:	mov    edx,DWORD PTR [rbx+0x50]
  436df0:	mov    rcx,QWORD PTR [rbx+0x48]
  436df4:	mov    WORD PTR [rcx+rdx*2],0x2e
  436dfa:	inc    edx
  436dfc:	mov    WORD PTR [rcx+rdx*2],0x0
  436e02:	mov    DWORD PTR [rbx+0x50],edx
  436e05:	mov    rax,QWORD PTR [rsp+0x190]
  436e0d:	mov    QWORD PTR [rbx+0x58],rax
  436e11:	xor    esi,esi
  436e13:	mov    DWORD PTR [rbx+0xc],esi
  436e16:	mov    QWORD PTR [rbx+0x10],rsi
  436e1a:	mov    QWORD PTR [rbx+0x18],rsi
  436e1e:	mov    QWORD PTR [rbx+0x20],rsi
  436e22:	lea    rdx,[r15+0x28]
  436e26:	mov    rcx,QWORD PTR [rsp+0x20]
  436e2b:	call   0x433ebc
  436e30:	mov    ebp,eax
  436e32:	cmp    eax,esi
  436e34:	je     0x436ecb
  436e3a:	cmp    rdi,rsi
  436e3d:	je     0x436e49
  436e3f:	mov    rdx,QWORD PTR [rdi]
  436e42:	mov    rcx,rdi
  436e45:	call   QWORD PTR [rdx+0x10]
  436e48:	nop
  436e49:	cmp    rbx,rsi
  436e4c:	je     0x436e58
  436e4e:	mov    rax,QWORD PTR [rbx]
  436e51:	mov    rcx,rbx
  436e54:	call   QWORD PTR [rax+0x10]
  436e57:	nop
  436e58:	mov    rax,QWORD PTR [r12]
  436e5c:	mov    rcx,r12
  436e5f:	call   QWORD PTR [rax+0x10]
  436e62:	nop
  436e63:	movsxd rbx,DWORD PTR [rsp+0x30]
  436e68:	mov    rdi,rbx
  436e6b:	cmp    ebx,esi
  436e6d:	je     0x436e9e
  436e6f:	shl    rdi,0x3
  436e73:	add    ebx,0xffffffff
  436e76:	sub    rdi,0x8
  436e7a:	mov    rax,QWORD PTR [rsp+0x28]
  436e7f:	mov    rsi,QWORD PTR [rax+rdi*1]
  436e83:	test   rsi,rsi
  436e86:	je     0x436e98
  436e88:	mov    rcx,QWORD PTR [rsi]
  436e8b:	call   0x40215c
  436e90:	mov    rcx,rsi
  436e93:	call   0x40215c
  436e98:	xor    esi,esi
  436e9a:	cmp    ebx,esi
  436e9c:	jne    0x436e73
  436e9e:	mov    rcx,QWORD PTR [rsp+0x28]
  436ea3:	call   0x40215c
  436ea8:	nop
  436ea9:	mov    rcx,QWORD PTR [rsp+0x38]
  436eae:	call   0x40215c
  436eb3:	nop
  436eb4:	mov    rcx,QWORD PTR [rsp+0x20]
  436eb9:	cmp    rcx,rsi
  436ebc:	je     0x436ec4
  436ebe:	mov    rax,QWORD PTR [rcx]
  436ec1:	call   QWORD PTR [rax+0x10]
  436ec4:	mov    eax,ebp
  436ec6:	jmp    0x437af5
  436ecb:	cmp    BYTE PTR [r15+0xcc],sil
  436ed2:	je     0x4374b4
  436ed8:	mov    ecx,0x78
  436edd:	call   0x402130
  436ee2:	mov    QWORD PTR [rsp+0x140],rax
  436eea:	cmp    rax,rsi
  436eed:	je     0x436efc
  436eef:	mov    rcx,rax
  436ef2:	call   0x40d02c
  436ef7:	mov    rbp,rax
  436efa:	jmp    0x436eff
  436efc:	mov    rbp,rsi
  436eff:	mov    QWORD PTR [rsp+0x78],rbp
  436f04:	cmp    rbp,rsi
  436f07:	je     0x436f14
  436f09:	mov    rax,QWORD PTR [rbp+0x0]
  436f0d:	mov    rcx,rbp
  436f10:	call   QWORD PTR [rax+0x8]
  436f13:	nop
  436f14:	lea    rcx,[rbp+0x28]
  436f18:	mov    rdx,QWORD PTR [r15+0xd0]
  436f1f:	call   0x40946c
  436f24:	test   al,al
  436f26:	jne    0x436fea
  436f2c:	lea    r8,[r15+0xd0]
  436f33:	lea    rdx,[rip+0x1a7a6]        # 0x4516e0
  436f3a:	mov    rcx,QWORD PTR [rsp+0x198]
  436f42:	call   0x43579c
  436f47:	mov    r13d,eax
  436f4a:	test   rbp,rbp
  436f4d:	je     0x436f5a
  436f4f:	mov    rdx,QWORD PTR [rbp+0x0]
  436f53:	mov    rcx,rbp
  436f56:	call   QWORD PTR [rdx+0x10]
  436f59:	nop
  436f5a:	test   rdi,rdi
  436f5d:	je     0x436f69
  436f5f:	mov    rdx,QWORD PTR [rdi]
  436f62:	mov    rcx,rdi
  436f65:	call   QWORD PTR [rdx+0x10]
  436f68:	nop
  436f69:	test   rbx,rbx
  436f6c:	je     0x436f78
  436f6e:	mov    rax,QWORD PTR [rbx]
  436f71:	mov    rcx,rbx
  436f74:	call   QWORD PTR [rax+0x10]
  436f77:	nop
  436f78:	mov    rax,QWORD PTR [r12]
  436f7c:	mov    rcx,r12
  436f7f:	call   QWORD PTR [rax+0x10]
  436f82:	nop
  436f83:	movsxd rbx,DWORD PTR [rsp+0x30]
  436f88:	mov    rdi,rbx
  436f8b:	test   ebx,ebx
  436f8d:	je     0x436fbc
  436f8f:	shl    rdi,0x3
  436f93:	add    ebx,0xffffffff
  436f96:	sub    rdi,0x8
  436f9a:	mov    rax,QWORD PTR [rsp+0x28]
  436f9f:	mov    rsi,QWORD PTR [rax+rdi*1]
  436fa3:	test   rsi,rsi
  436fa6:	je     0x436fb8
  436fa8:	mov    rcx,QWORD PTR [rsi]
  436fab:	call   0x40215c
  436fb0:	mov    rcx,rsi
  436fb3:	call   0x40215c
  436fb8:	test   ebx,ebx
  436fba:	jne    0x436f93
  436fbc:	mov    rcx,QWORD PTR [rsp+0x28]
  436fc1:	call   0x40215c
  436fc6:	nop
  436fc7:	mov    rcx,QWORD PTR [rsp+0x38]
  436fcc:	call   0x40215c
  436fd1:	nop
  436fd2:	mov    rcx,QWORD PTR [rsp+0x20]
  436fd7:	test   rcx,rcx
  436fda:	je     0x436fe2
  436fdc:	mov    rax,QWORD PTR [rcx]
  436fdf:	call   QWORD PTR [rax+0x10]
  436fe2:	mov    eax,r13d
  436fe5:	jmp    0x437af5
  436fea:	xor    esi,esi
  436fec:	mov    QWORD PTR [rsp+0x140],rsi
  436ff4:	mov    r13,rsi
  436ff7:	cmp    DWORD PTR [r15+0x160],esi
  436ffe:	jne    0x43701e
  437000:	cmp    rdi,rsi
  437003:	je     0x43700e
  437005:	mov    rax,QWORD PTR [rdi]
  437008:	mov    rcx,rdi
  43700b:	call   QWORD PTR [rax+0x8]
  43700e:	mov    rsi,rdi
  437011:	mov    QWORD PTR [rsp+0x140],rdi
  437019:	jmp    0x437170
  43701e:	mov    ecx,0x30
  437023:	call   0x402130
  437028:	mov    r13,rax
  43702b:	cmp    rax,rsi
  43702e:	je     0x437048
  437030:	mov    DWORD PTR [rax+0x8],esi
  437033:	lea    rax,[rip+0x17d66]        # 0x44eda0
  43703a:	mov    QWORD PTR [r13+0x0],rax
  43703e:	mov    QWORD PTR [r13+0x10],0xffffffffffffffff
  437046:	jmp    0x43704b
  437048:	mov    r13,rsi
  43704b:	cmp    r13,rsi
  43704e:	je     0x43705a
  437050:	mov    rax,QWORD PTR [r13+0x0]
  437054:	mov    rcx,r13
  437057:	call   QWORD PTR [rax+0x8]
  43705a:	mov    rsi,r13
  43705d:	mov    QWORD PTR [rsp+0x140],r13
  437065:	lea    rdx,[rsp+0x68]
  43706a:	mov    rcx,r14
  43706d:	call   0x434818
  437072:	nop
  437073:	mov    rdx,QWORD PTR [rsp+0x68]
  437078:	mov    QWORD PTR [r13+0x28],0x0
  437080:	lea    rcx,[r13+0x10]
  437084:	xor    r8d,r8d
  437087:	call   0x4094d8
  43708c:	test   al,al
  43708e:	jne    0x437166
  437094:	lea    r8,[rsp+0x68]
  437099:	lea    rdx,[rip+0x1a658]        # 0x4516f8
  4370a0:	mov    rcx,QWORD PTR [rsp+0x198]
  4370a8:	call   0x43579c
  4370ad:	mov    r14d,eax
  4370b0:	mov    rcx,QWORD PTR [rsp+0x68]
  4370b5:	call   0x40215c
  4370ba:	nop
  4370bb:	mov    rdx,QWORD PTR [r13+0x0]
  4370bf:	mov    rcx,r13
  4370c2:	call   QWORD PTR [rdx+0x10]
  4370c5:	nop
  4370c6:	test   rbp,rbp
  4370c9:	je     0x4370d6
  4370cb:	mov    rdx,QWORD PTR [rbp+0x0]
  4370cf:	mov    rcx,rbp
  4370d2:	call   QWORD PTR [rdx+0x10]
  4370d5:	nop
  4370d6:	test   rdi,rdi
  4370d9:	je     0x4370e5
  4370db:	mov    rax,QWORD PTR [rdi]
  4370de:	mov    rcx,rdi
  4370e1:	call   QWORD PTR [rax+0x10]
  4370e4:	nop
  4370e5:	test   rbx,rbx
  4370e8:	je     0x4370f4
  4370ea:	mov    rax,QWORD PTR [rbx]
  4370ed:	mov    rcx,rbx
  4370f0:	call   QWORD PTR [rax+0x10]
  4370f3:	nop
  4370f4:	mov    rax,QWORD PTR [r12]
  4370f8:	mov    rcx,r12
  4370fb:	call   QWORD PTR [rax+0x10]
  4370fe:	nop
  4370ff:	movsxd rbx,DWORD PTR [rsp+0x30]
  437104:	mov    rdi,rbx
  437107:	test   ebx,ebx
  437109:	je     0x437138
  43710b:	shl    rdi,0x3
  43710f:	add    ebx,0xffffffff
  437112:	sub    rdi,0x8
  437116:	mov    rax,QWORD PTR [rsp+0x28]
  43711b:	mov    rsi,QWORD PTR [rdi+rax*1]
  43711f:	test   rsi,rsi
  437122:	je     0x437134
  437124:	mov    rcx,QWORD PTR [rsi]
  437127:	call   0x40215c
  43712c:	mov    rcx,rsi
  43712f:	call   0x40215c
  437134:	test   ebx,ebx
  437136:	jne    0x43710f
  437138:	mov    rcx,QWORD PTR [rsp+0x28]
  43713d:	call   0x40215c
  437142:	nop
  437143:	mov    rcx,QWORD PTR [rsp+0x38]
  437148:	call   0x40215c
  43714d:	nop
  43714e:	mov    rcx,QWORD PTR [rsp+0x20]
  437153:	test   rcx,rcx
  437156:	je     0x43715e
  437158:	mov    rax,QWORD PTR [rcx]
  43715b:	call   QWORD PTR [rax+0x10]
  43715e:	mov    eax,r14d
  437161:	jmp    0x437af5
  437166:	mov    rcx,QWORD PTR [rsp+0x68]
  43716b:	call   0x40215c
  437170:	lea    rcx,[rbp+0x8]
  437174:	mov    rax,QWORD PTR [rcx]
  437177:	lea    rdx,[rsp+0x88]
  43717f:	call   QWORD PTR [rax+0x18]
  437182:	mov    r14d,eax
  437185:	test   eax,eax
  437187:	je     0x437237
  43718d:	test   rsi,rsi
  437190:	je     0x43719c
  437192:	mov    rdx,QWORD PTR [rsi]
  437195:	mov    rcx,rsi
  437198:	call   QWORD PTR [rdx+0x10]
  43719b:	nop
  43719c:	mov    rdx,QWORD PTR [rbp+0x0]
  4371a0:	mov    rcx,rbp
  4371a3:	call   QWORD PTR [rdx+0x10]
  4371a6:	nop
  4371a7:	test   rdi,rdi
  4371aa:	je     0x4371b6
  4371ac:	mov    rax,QWORD PTR [rdi]
  4371af:	mov    rcx,rdi
  4371b2:	call   QWORD PTR [rax+0x10]
  4371b5:	nop
  4371b6:	test   rbx,rbx
  4371b9:	je     0x4371c5
  4371bb:	mov    rax,QWORD PTR [rbx]
  4371be:	mov    rcx,rbx
  4371c1:	call   QWORD PTR [rax+0x10]
  4371c4:	nop
  4371c5:	mov    rax,QWORD PTR [r12]
  4371c9:	mov    rcx,r12
  4371cc:	call   QWORD PTR [rax+0x10]
  4371cf:	nop
  4371d0:	movsxd rbx,DWORD PTR [rsp+0x30]
  4371d5:	mov    rdi,rbx
  4371d8:	test   ebx,ebx
  4371da:	je     0x437209
  4371dc:	shl    rdi,0x3
  4371e0:	add    ebx,0xffffffff
  4371e3:	sub    rdi,0x8
  4371e7:	mov    rax,QWORD PTR [rsp+0x28]
  4371ec:	mov    rsi,QWORD PTR [rdi+rax*1]
  4371f0:	test   rsi,rsi
  4371f3:	je     0x437205
  4371f5:	mov    rcx,QWORD PTR [rsi]
  4371f8:	call   0x40215c
  4371fd:	mov    rcx,rsi
  437200:	call   0x40215c
  437205:	test   ebx,ebx
  437207:	jne    0x4371e0
  437209:	mov    rcx,QWORD PTR [rsp+0x28]
  43720e:	call   0x40215c
  437213:	nop
  437214:	mov    rcx,QWORD PTR [rsp+0x38]
  437219:	call   0x40215c
  43721e:	nop
  43721f:	mov    rcx,QWORD PTR [rsp+0x20]
  437224:	test   rcx,rcx
  437227:	je     0x43722f
  437229:	mov    rax,QWORD PTR [rcx]
  43722c:	call   QWORD PTR [rax+0x10]
  43722f:	mov    eax,r14d
  437232:	jmp    0x437af5
  437237:	mov    rcx,QWORD PTR [rsp+0x1a0]
  43723f:	mov    rax,QWORD PTR [rcx]
  437242:	mov    r8,QWORD PTR [rsp+0x88]
  43724a:	mov    rdx,QWORD PTR [r15+0xd0]
  437251:	call   QWORD PTR [rax]
  437253:	mov    r14d,eax
  437256:	test   eax,eax
  437258:	je     0x437308
  43725e:	test   rsi,rsi
  437261:	je     0x43726d
  437263:	mov    rdx,QWORD PTR [rsi]
  437266:	mov    rcx,rsi
  437269:	call   QWORD PTR [rdx+0x10]
  43726c:	nop
  43726d:	mov    rdx,QWORD PTR [rbp+0x0]
  437271:	mov    rcx,rbp
  437274:	call   QWORD PTR [rdx+0x10]
  437277:	nop
  437278:	test   rdi,rdi
  43727b:	je     0x437287
  43727d:	mov    rax,QWORD PTR [rdi]
  437280:	mov    rcx,rdi
  437283:	call   QWORD PTR [rax+0x10]
  437286:	nop
  437287:	test   rbx,rbx
  43728a:	je     0x437296
  43728c:	mov    rax,QWORD PTR [rbx]
  43728f:	mov    rcx,rbx
  437292:	call   QWORD PTR [rax+0x10]
  437295:	nop
  437296:	mov    rax,QWORD PTR [r12]
  43729a:	mov    rcx,r12
  43729d:	call   QWORD PTR [rax+0x10]
  4372a0:	nop
  4372a1:	movsxd rbx,DWORD PTR [rsp+0x30]
  4372a6:	mov    rdi,rbx
  4372a9:	test   ebx,ebx
  4372ab:	je     0x4372da
  4372ad:	shl    rdi,0x3
  4372b1:	add    ebx,0xffffffff
  4372b4:	sub    rdi,0x8
  4372b8:	mov    rax,QWORD PTR [rsp+0x28]
  4372bd:	mov    rsi,QWORD PTR [rdi+rax*1]
  4372c1:	test   rsi,rsi
  4372c4:	je     0x4372d6
  4372c6:	mov    rcx,QWORD PTR [rsi]
  4372c9:	call   0x40215c
  4372ce:	mov    rcx,rsi
  4372d1:	call   0x40215c
  4372d6:	test   ebx,ebx
  4372d8:	jne    0x4372b1
  4372da:	mov    rcx,QWORD PTR [rsp+0x28]
  4372df:	call   0x40215c
  4372e4:	nop
  4372e5:	mov    rcx,QWORD PTR [rsp+0x38]
  4372ea:	call   0x40215c
  4372ef:	nop
  4372f0:	mov    rcx,QWORD PTR [rsp+0x20]
  4372f5:	test   rcx,rcx
  4372f8:	je     0x437300
  4372fa:	mov    rax,QWORD PTR [rcx]
  4372fd:	call   QWORD PTR [rax+0x10]
  437300:	mov    eax,r14d
  437303:	jmp    0x437af5
  437308:	xor    r8d,r8d
  43730b:	mov    rdx,rsi
  43730e:	mov    rcx,rbp
  437311:	call   0x44aac0
  437316:	mov    r14d,eax
  437319:	test   eax,eax
  43731b:	je     0x4373cb
  437321:	test   rsi,rsi
  437324:	je     0x437330
  437326:	mov    rdx,QWORD PTR [rsi]
  437329:	mov    rcx,rsi
  43732c:	call   QWORD PTR [rdx+0x10]
  43732f:	nop
  437330:	mov    rdx,QWORD PTR [rbp+0x0]
  437334:	mov    rcx,rbp
  437337:	call   QWORD PTR [rdx+0x10]
  43733a:	nop
  43733b:	test   rdi,rdi
  43733e:	je     0x43734a
  437340:	mov    rax,QWORD PTR [rdi]
  437343:	mov    rcx,rdi
  437346:	call   QWORD PTR [rax+0x10]
  437349:	nop
  43734a:	test   rbx,rbx
  43734d:	je     0x437359
  43734f:	mov    rax,QWORD PTR [rbx]
  437352:	mov    rcx,rbx
  437355:	call   QWORD PTR [rax+0x10]
  437358:	nop
  437359:	mov    rax,QWORD PTR [r12]
  43735d:	mov    rcx,r12
  437360:	call   QWORD PTR [rax+0x10]
  437363:	nop
  437364:	movsxd rbx,DWORD PTR [rsp+0x30]
  437369:	mov    rdi,rbx
  43736c:	test   ebx,ebx
  43736e:	je     0x43739d
  437370:	shl    rdi,0x3
  437374:	add    ebx,0xffffffff
  437377:	sub    rdi,0x8
  43737b:	mov    rax,QWORD PTR [rsp+0x28]
  437380:	mov    rsi,QWORD PTR [rdi+rax*1]
  437384:	test   rsi,rsi
  437387:	je     0x437399
  437389:	mov    rcx,QWORD PTR [rsi]
  43738c:	call   0x40215c
  437391:	mov    rcx,rsi
  437394:	call   0x40215c
  437399:	test   ebx,ebx
  43739b:	jne    0x437374
  43739d:	mov    rcx,QWORD PTR [rsp+0x28]
  4373a2:	call   0x40215c
  4373a7:	nop
  4373a8:	mov    rcx,QWORD PTR [rsp+0x38]
  4373ad:	call   0x40215c
  4373b2:	nop
  4373b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4373b8:	test   rcx,rcx
  4373bb:	je     0x4373c3
  4373bd:	mov    rax,QWORD PTR [rcx]
  4373c0:	call   QWORD PTR [rax+0x10]
  4373c3:	mov    eax,r14d
  4373c6:	jmp    0x437af5
  4373cb:	test   r13,r13
  4373ce:	je     0x437491
  4373d4:	mov    rcx,r13
  4373d7:	call   0x40cb18
  4373dc:	mov    r13d,eax
  4373df:	test   eax,eax
  4373e1:	je     0x437491
  4373e7:	test   rsi,rsi
  4373ea:	je     0x4373f6
  4373ec:	mov    rdx,QWORD PTR [rsi]
  4373ef:	mov    rcx,rsi
  4373f2:	call   QWORD PTR [rdx+0x10]
  4373f5:	nop
  4373f6:	mov    rdx,QWORD PTR [rbp+0x0]
  4373fa:	mov    rcx,rbp
  4373fd:	call   QWORD PTR [rdx+0x10]
  437400:	nop
  437401:	test   rdi,rdi
  437404:	je     0x437410
  437406:	mov    rax,QWORD PTR [rdi]
  437409:	mov    rcx,rdi
  43740c:	call   QWORD PTR [rax+0x10]
  43740f:	nop
  437410:	test   rbx,rbx
  437413:	je     0x43741f
  437415:	mov    rax,QWORD PTR [rbx]
  437418:	mov    rcx,rbx
  43741b:	call   QWORD PTR [rax+0x10]
  43741e:	nop
  43741f:	mov    rax,QWORD PTR [r12]
  437423:	mov    rcx,r12
  437426:	call   QWORD PTR [rax+0x10]
  437429:	nop
  43742a:	movsxd rbx,DWORD PTR [rsp+0x30]
  43742f:	mov    rdi,rbx
  437432:	test   ebx,ebx
  437434:	je     0x437463
  437436:	shl    rdi,0x3
  43743a:	add    ebx,0xffffffff
  43743d:	sub    rdi,0x8
  437441:	mov    rax,QWORD PTR [rsp+0x28]
  437446:	mov    rsi,QWORD PTR [rdi+rax*1]
  43744a:	test   rsi,rsi
  43744d:	je     0x43745f
  43744f:	mov    rcx,QWORD PTR [rsi]
  437452:	call   0x40215c
  437457:	mov    rcx,rsi
  43745a:	call   0x40215c
  43745f:	test   ebx,ebx
  437461:	jne    0x43743a
  437463:	mov    rcx,QWORD PTR [rsp+0x28]
  437468:	call   0x40215c
  43746d:	nop
  43746e:	mov    rcx,QWORD PTR [rsp+0x38]
  437473:	call   0x40215c
  437478:	nop
  437479:	mov    rcx,QWORD PTR [rsp+0x20]
  43747e:	test   rcx,rcx
  437481:	je     0x437489
  437483:	mov    rax,QWORD PTR [rcx]
  437486:	call   QWORD PTR [rax+0x10]
  437489:	mov    eax,r13d
  43748c:	jmp    0x437af5
  437491:	test   rsi,rsi
  437494:	je     0x4374a0
  437496:	mov    rax,QWORD PTR [rsi]
  437499:	mov    rcx,rsi
  43749c:	call   QWORD PTR [rax+0x10]
  43749f:	nop
  4374a0:	mov    rax,QWORD PTR [rbp+0x0]
  4374a4:	mov    rcx,rbp
  4374a7:	call   QWORD PTR [rax+0x10]
  4374aa:	mov    r13,QWORD PTR [rsp+0x160]
  4374b2:	xor    esi,esi
  4374b4:	mov    QWORD PTR [rsp+0x88],rsi
  4374bc:	cmp    BYTE PTR [r15+0xcc],sil
  4374c3:	jne    0x4376e7
  4374c9:	cmp    r13,rsi
  4374cc:	je     0x4376e7
  4374d2:	cmp    QWORD PTR [r13+0x100],rsi
  4374d9:	je     0x4376e7
  4374df:	mov    rcx,QWORD PTR [r13+0x8]
  4374e3:	mov    rax,QWORD PTR [rcx]
  4374e6:	xor    r9d,r9d
  4374e9:	xor    r8d,r8d
  4374ec:	xor    edx,edx
  4374ee:	call   QWORD PTR [rax+0x20]
  4374f1:	mov    ebp,eax
  4374f3:	cmp    eax,esi
  4374f5:	je     0x43758c
  4374fb:	cmp    rdi,rsi
  4374fe:	je     0x43750a
  437500:	mov    rdx,QWORD PTR [rdi]
  437503:	mov    rcx,rdi
  437506:	call   QWORD PTR [rdx+0x10]
  437509:	nop
  43750a:	cmp    rbx,rsi
  43750d:	je     0x437519
  43750f:	mov    rax,QWORD PTR [rbx]
  437512:	mov    rcx,rbx
  437515:	call   QWORD PTR [rax+0x10]
  437518:	nop
  437519:	mov    rax,QWORD PTR [r12]
  43751d:	mov    rcx,r12
  437520:	call   QWORD PTR [rax+0x10]
  437523:	nop
  437524:	movsxd rbx,DWORD PTR [rsp+0x30]
  437529:	mov    rdi,rbx
  43752c:	cmp    ebx,esi
  43752e:	je     0x43755f
  437530:	shl    rdi,0x3
  437534:	add    ebx,0xffffffff
  437537:	sub    rdi,0x8
  43753b:	mov    rax,QWORD PTR [rsp+0x28]
  437540:	mov    rsi,QWORD PTR [rdi+rax*1]
  437544:	test   rsi,rsi
  437547:	je     0x437559
  437549:	mov    rcx,QWORD PTR [rsi]
  43754c:	call   0x40215c
  437551:	mov    rcx,rsi
  437554:	call   0x40215c
  437559:	xor    esi,esi
  43755b:	cmp    ebx,esi
  43755d:	jne    0x437534
  43755f:	mov    rcx,QWORD PTR [rsp+0x28]
  437564:	call   0x40215c
  437569:	nop
  43756a:	mov    rcx,QWORD PTR [rsp+0x38]
  43756f:	call   0x40215c
  437574:	nop
  437575:	mov    rcx,QWORD PTR [rsp+0x20]
  43757a:	cmp    rcx,rsi
  43757d:	je     0x437585
  43757f:	mov    rax,QWORD PTR [rcx]
  437582:	call   QWORD PTR [rax+0x10]
  437585:	mov    eax,ebp
  437587:	jmp    0x437af5
  43758c:	xor    r9d,r9d
  43758f:	mov    r8,QWORD PTR [r13+0x100]
  437596:	mov    rdx,rdi
  437599:	mov    rcx,QWORD PTR [r13+0x8]
  43759d:	call   0x44abc0
  4375a2:	mov    ebp,eax
  4375a4:	cmp    eax,esi
  4375a6:	je     0x43763d
  4375ac:	cmp    rdi,rsi
  4375af:	je     0x4375bb
  4375b1:	mov    rdx,QWORD PTR [rdi]
  4375b4:	mov    rcx,rdi
  4375b7:	call   QWORD PTR [rdx+0x10]
  4375ba:	nop
  4375bb:	cmp    rbx,rsi
  4375be:	je     0x4375ca
  4375c0:	mov    rax,QWORD PTR [rbx]
  4375c3:	mov    rcx,rbx
  4375c6:	call   QWORD PTR [rax+0x10]
  4375c9:	nop
  4375ca:	mov    rax,QWORD PTR [r12]
  4375ce:	mov    rcx,r12
  4375d1:	call   QWORD PTR [rax+0x10]
  4375d4:	nop
  4375d5:	movsxd rbx,DWORD PTR [rsp+0x30]
  4375da:	mov    rdi,rbx
  4375dd:	cmp    ebx,esi
  4375df:	je     0x437610
  4375e1:	shl    rdi,0x3
  4375e5:	add    ebx,0xffffffff
  4375e8:	sub    rdi,0x8
  4375ec:	mov    rax,QWORD PTR [rsp+0x28]
  4375f1:	mov    rsi,QWORD PTR [rdi+rax*1]
  4375f5:	test   rsi,rsi
  4375f8:	je     0x43760a
  4375fa:	mov    rcx,QWORD PTR [rsi]
  4375fd:	call   0x40215c
  437602:	mov    rcx,rsi
  437605:	call   0x40215c
  43760a:	xor    esi,esi
  43760c:	cmp    ebx,esi
  43760e:	jne    0x4375e5
  437610:	mov    rcx,QWORD PTR [rsp+0x28]
  437615:	call   0x40215c
  43761a:	nop
  43761b:	mov    rcx,QWORD PTR [rsp+0x38]
  437620:	call   0x40215c
  437625:	nop
  437626:	mov    rcx,QWORD PTR [rsp+0x20]
  43762b:	cmp    rcx,rsi
  43762e:	je     0x437636
  437630:	mov    rax,QWORD PTR [rcx]
  437633:	call   QWORD PTR [rax+0x10]
  437636:	mov    eax,ebp
  437638:	jmp    0x437af5
  43763d:	cmp    BYTE PTR [r15+0xf8],sil
  437644:	je     0x437664
  437646:	cmp    rdi,rsi
  437649:	je     0x437654
  43764b:	mov    rax,QWORD PTR [rdi]
  43764e:	mov    rcx,rdi
  437651:	call   QWORD PTR [rax+0x8]
  437654:	mov    rsi,rdi
  437657:	mov    QWORD PTR [rsp+0x88],rdi
  43765f:	jmp    0x437700
  437664:	mov    ecx,0x30
  437669:	call   0x402130
  43766e:	mov    rsi,rax
  437671:	test   rax,rax
  437674:	je     0x437691
  437676:	mov    DWORD PTR [rax+0x8],0x0
  43767d:	lea    rax,[rip+0x19e94]        # 0x451518
  437684:	mov    QWORD PTR [rsi],rax
  437687:	mov    QWORD PTR [rsi+0x20],0x0
  43768f:	jmp    0x437693
  437691:	xor    esi,esi
  437693:	test   rsi,rsi
  437696:	je     0x4376a1
  437698:	mov    rax,QWORD PTR [rsi]
  43769b:	mov    rcx,rsi
  43769e:	call   QWORD PTR [rax+0x8]
  4376a1:	mov    QWORD PTR [rsp+0x88],rsi
  4376a9:	test   rbx,rbx
  4376ac:	je     0x4376b7
  4376ae:	mov    rax,QWORD PTR [rbx]
  4376b1:	mov    rcx,rbx
  4376b4:	call   QWORD PTR [rax+0x8]
  4376b7:	mov    rcx,QWORD PTR [rsi+0x20]
  4376bb:	test   rcx,rcx
  4376be:	je     0x4376c6
  4376c0:	mov    rax,QWORD PTR [rcx]
  4376c3:	call   QWORD PTR [rax+0x10]
  4376c6:	mov    QWORD PTR [rsi+0x20],rbx
  4376ca:	mov    rax,QWORD PTR [r13+0x100]
  4376d1:	mov    QWORD PTR [rsi+0x28],rax
  4376d5:	mov    QWORD PTR [rsi+0x10],0x0
  4376dd:	mov    QWORD PTR [rsi+0x18],0x0
  4376e5:	jmp    0x437700
  4376e7:	cmp    rdi,rsi
  4376ea:	je     0x4376f5
  4376ec:	mov    rax,QWORD PTR [rdi]
  4376ef:	mov    rcx,rdi
  4376f2:	call   QWORD PTR [rax+0x8]
  4376f5:	mov    rsi,rdi
  4376f8:	mov    QWORD PTR [rsp+0x88],rdi
  437700:	mov    rcx,QWORD PTR [rsp+0x20]
  437705:	mov    rax,QWORD PTR [rcx]
  437708:	mov    r9,r12
  43770b:	mov    r8d,DWORD PTR [rsp+0x40]
  437710:	mov    rdx,rsi
  437713:	call   QWORD PTR [rax+0x18]
  437716:	mov    r14d,eax
  437719:	mov    DWORD PTR [rsp+0x160],eax
  437720:	test   eax,eax
  437722:	je     0x4377c7
  437728:	test   rsi,rsi
  43772b:	je     0x437737
  43772d:	mov    rdx,QWORD PTR [rsi]
  437730:	mov    rcx,rsi
  437733:	call   QWORD PTR [rdx+0x10]
  437736:	nop
  437737:	test   rdi,rdi
  43773a:	je     0x437746
  43773c:	mov    rax,QWORD PTR [rdi]
  43773f:	mov    rcx,rdi
  437742:	call   QWORD PTR [rax+0x10]
  437745:	nop
  437746:	test   rbx,rbx
  437749:	je     0x437755
  43774b:	mov    rax,QWORD PTR [rbx]
  43774e:	mov    rcx,rbx
  437751:	call   QWORD PTR [rax+0x10]
  437754:	nop
  437755:	mov    rax,QWORD PTR [r12]
  437759:	mov    rcx,r12
  43775c:	call   QWORD PTR [rax+0x10]
  43775f:	nop
  437760:	movsxd rbx,DWORD PTR [rsp+0x30]
  437765:	mov    rdi,rbx
  437768:	test   ebx,ebx
  43776a:	je     0x437799
  43776c:	shl    rdi,0x3
  437770:	add    ebx,0xffffffff
  437773:	sub    rdi,0x8
  437777:	mov    rax,QWORD PTR [rsp+0x28]
  43777c:	mov    rsi,QWORD PTR [rdi+rax*1]
  437780:	test   rsi,rsi
  437783:	je     0x437795
  437785:	mov    rcx,QWORD PTR [rsi]
  437788:	call   0x40215c
  43778d:	mov    rcx,rsi
  437790:	call   0x40215c
  437795:	test   ebx,ebx
  437797:	jne    0x437770
  437799:	mov    rcx,QWORD PTR [rsp+0x28]
  43779e:	call   0x40215c
  4377a3:	nop
  4377a4:	mov    rcx,QWORD PTR [rsp+0x38]
  4377a9:	call   0x40215c
  4377ae:	nop
  4377af:	mov    rcx,QWORD PTR [rsp+0x20]
  4377b4:	test   rcx,rcx
  4377b7:	je     0x4377bf
  4377b9:	mov    rax,QWORD PTR [rcx]
  4377bc:	call   QWORD PTR [rax+0x10]
  4377bf:	mov    eax,r14d
  4377c2:	jmp    0x437af5
  4377c7:	cmp    DWORD PTR [r12+0x70],0x0
  4377cd:	je     0x43789b
  4377d3:	mov    rbp,QWORD PTR [rsp+0x198]
  4377db:	lea    rcx,[rbp+0x8]
  4377df:	lea    rdx,[rip+0x19eda]        # 0x4516c0
  4377e6:	call   0x402be4
  4377eb:	lea    rdx,[r12+0x78]
  4377f0:	lea    rcx,[rbp+0x18]
  4377f4:	call   0x404df0
  4377f9:	nop
  4377fa:	test   rsi,rsi
  4377fd:	je     0x437809
  4377ff:	mov    rax,QWORD PTR [rsi]
  437802:	mov    rcx,rsi
  437805:	call   QWORD PTR [rax+0x10]
  437808:	nop
  437809:	test   rdi,rdi
  43780c:	je     0x437818
  43780e:	mov    rax,QWORD PTR [rdi]
  437811:	mov    rcx,rdi
  437814:	call   QWORD PTR [rax+0x10]
  437817:	nop
  437818:	test   rbx,rbx
  43781b:	je     0x437827
  43781d:	mov    rax,QWORD PTR [rbx]
  437820:	mov    rcx,rbx
  437823:	call   QWORD PTR [rax+0x10]
  437826:	nop
  437827:	mov    rax,QWORD PTR [r12]
  43782b:	mov    rcx,r12
  43782e:	call   QWORD PTR [rax+0x10]
  437831:	nop
  437832:	movsxd rbx,DWORD PTR [rsp+0x30]
  437837:	mov    rdi,rbx
  43783a:	test   ebx,ebx
  43783c:	je     0x43786b
  43783e:	shl    rdi,0x3
  437842:	add    ebx,0xffffffff
  437845:	sub    rdi,0x8
  437849:	mov    rax,QWORD PTR [rsp+0x28]
  43784e:	mov    rsi,QWORD PTR [rdi+rax*1]
  437852:	test   rsi,rsi
  437855:	je     0x437867
  437857:	mov    rcx,QWORD PTR [rsi]
  43785a:	call   0x40215c
  43785f:	mov    rcx,rsi
  437862:	call   0x40215c
  437867:	test   ebx,ebx
  437869:	jne    0x437842
  43786b:	mov    rcx,QWORD PTR [rsp+0x28]
  437870:	call   0x40215c
  437875:	nop
  437876:	mov    rcx,QWORD PTR [rsp+0x38]
  43787b:	call   0x40215c
  437880:	nop
  437881:	mov    rcx,QWORD PTR [rsp+0x20]
  437886:	test   rcx,rcx
  437889:	je     0x437891
  43788b:	mov    rax,QWORD PTR [rcx]
  43788e:	call   QWORD PTR [rax+0x10]
  437891:	mov    eax,0x80004005
  437896:	jmp    0x437af5
  43789b:	cmp    BYTE PTR [r15+0x141],0x0
  4378a3:	je     0x4379b9
  4378a9:	mov    DWORD PTR [rsp+0x140],0x0
  4378b4:	mov    DWORD PTR [rsp+0x144],0x0
  4378bf:	xor    r15d,r15d
  4378c2:	cmp    DWORD PTR [rsp+0x40],r15d
  4378c7:	jbe    0x43796a
  4378cd:	xor    ebp,ebp
  4378cf:	mov    r14,QWORD PTR [rsp+0x170]
  4378d7:	mov    r12,QWORD PTR [rsp+0x180]
  4378df:	mov    rax,QWORD PTR [rsp+0x38]
  4378e4:	cmp    BYTE PTR [rax+rbp*1+0x1],0x0
  4378e9:	je     0x437902
  4378eb:	mov    ecx,DWORD PTR [rax+rbp*1+0x4]
  4378ef:	test   ecx,ecx
  4378f1:	js     0x437902
  4378f3:	mov    rax,QWORD PTR [r12+0x30]
  4378f8:	mov    r13,QWORD PTR [rax+rcx*8]
  4378fc:	add    r13,0x18
  437900:	jmp    0x43791c
  437902:	cmp    BYTE PTR [rax+rbp*1+0x2],0x0
  437907:	je     0x437942
  437909:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
  43790d:	test   ecx,ecx
  43790f:	js     0x437942
  437911:	mov    rax,QWORD PTR [r14]
  437914:	mov    r13,QWORD PTR [rax+rcx*8]
  437918:	add    r13,0x8
  43791c:	test   r13,r13
  43791f:	je     0x437942
  437921:	mov    rdx,r13
  437924:	lea    rcx,[rsp+0x140]
  43792c:	call   QWORD PTR [rip+0x157f6]        # 0x44d128
  437932:	test   eax,eax
  437934:	jns    0x437942
  437936:	mov    rax,QWORD PTR [r13+0x0]
  43793a:	mov    QWORD PTR [rsp+0x140],rax
  437942:	inc    r15d
  437945:	add    rbp,0x14
  437949:	cmp    r15d,DWORD PTR [rsp+0x40]
  43794e:	jb     0x4378df
  437950:	cmp    DWORD PTR [rsp+0x140],0x0
  437958:	mov    r12,QWORD PTR [rsp+0xa8]
  437960:	mov    r14d,DWORD PTR [rsp+0x160]
  437968:	jne    0x437978
  43796a:	mov    rax,QWORD PTR [rsp+0x140]
  437972:	shr    rax,0x20
  437976:	je     0x4379c8
  437978:	mov    rbp,QWORD PTR [rsp+0x90]
  437980:	test   rbp,rbp
  437983:	je     0x43799d
  437985:	lea    rcx,[rbp+0x10]
  437989:	lea    rdx,[rsp+0x140]
  437991:	call   0x408e5c
  437996:	mov    r13,QWORD PTR [rsp+0x60]
  43799b:	jmp    0x4379d5
  43799d:	mov    r13,QWORD PTR [rsp+0x60]
  4379a2:	test   r13,r13
  4379a5:	je     0x4379d5
  4379a7:	lea    rdx,[rsp+0x140]
  4379af:	mov    rcx,r13
  4379b2:	call   0x4352b0
  4379b7:	jmp    0x4379d5
  4379b9:	mov    rbp,QWORD PTR [rsp+0x90]
  4379c1:	mov    r13,QWORD PTR [rsp+0x60]
  4379c6:	jmp    0x4379d5
  4379c8:	mov    rbp,QWORD PTR [rsp+0x90]
  4379d0:	mov    r13,QWORD PTR [rsp+0x60]
  4379d5:	mov    QWORD PTR [rsp+0x160],0x0
  4379e1:	test   rbp,rbp
  4379e4:	je     0x437a00
  4379e6:	lea    rdx,[rsp+0x160]
  4379ee:	mov    rcx,rbp
  4379f1:	call   0x40cc90
  4379f6:	mov    r11,QWORD PTR [rsp+0x160]
  4379fe:	jmp    0x437a17
  437a00:	mov    rax,QWORD PTR [rsp+0x98]
  437a08:	test   rax,rax
  437a0b:	je     0x437a13
  437a0d:	mov    r11,QWORD PTR [rax+0x10]
  437a11:	jmp    0x437a17
  437a13:	mov    r11,QWORD PTR [r13+0x20]
  437a17:	mov    rax,QWORD PTR [rsp+0x1a8]
  437a1f:	mov    QWORD PTR [rax],r11
  437a22:	test   rbp,rbp
  437a25:	je     0x437a34
  437a27:	mov    rcx,rbp
  437a2a:	call   0x40cb18
  437a2f:	mov    r14d,eax
  437a32:	jmp    0x437a44
  437a34:	test   r13,r13
  437a37:	je     0x437a44
  437a39:	mov    rcx,r13
  437a3c:	call   0x435268
  437a41:	mov    r14d,eax
  437a44:	test   rsi,rsi
  437a47:	je     0x437a53
  437a49:	mov    rax,QWORD PTR [rsi]
  437a4c:	mov    rcx,rsi
  437a4f:	call   QWORD PTR [rax+0x10]
  437a52:	nop
  437a53:	test   rdi,rdi
  437a56:	je     0x437a62
  437a58:	mov    rax,QWORD PTR [rdi]
  437a5b:	mov    rcx,rdi
  437a5e:	call   QWORD PTR [rax+0x10]
  437a61:	nop
  437a62:	test   rbx,rbx
  437a65:	je     0x437a71
  437a67:	mov    rax,QWORD PTR [rbx]
  437a6a:	mov    rcx,rbx
  437a6d:	call   QWORD PTR [rax+0x10]
  437a70:	nop
  437a71:	mov    rax,QWORD PTR [r12]
  437a75:	mov    rcx,r12
  437a78:	call   QWORD PTR [rax+0x10]
  437a7b:	nop
  437a7c:	movsxd rbx,DWORD PTR [rsp+0x30]
  437a81:	mov    rdi,rbx
  437a84:	test   ebx,ebx
  437a86:	je     0x437ab5
  437a88:	shl    rdi,0x3
  437a8c:	add    ebx,0xffffffff
  437a8f:	sub    rdi,0x8
  437a93:	mov    rax,QWORD PTR [rsp+0x28]
  437a98:	mov    rsi,QWORD PTR [rdi+rax*1]
  437a9c:	test   rsi,rsi
  437a9f:	je     0x437ab1
  437aa1:	mov    rcx,QWORD PTR [rsi]
  437aa4:	call   0x40215c
  437aa9:	mov    rcx,rsi
  437aac:	call   0x40215c
  437ab1:	test   ebx,ebx
  437ab3:	jne    0x437a8c
  437ab5:	mov    rcx,QWORD PTR [rsp+0x28]
  437aba:	call   0x40215c
  437abf:	nop
  437ac0:	mov    rcx,QWORD PTR [rsp+0x38]
  437ac5:	call   0x40215c
  437aca:	nop
  437acb:	mov    rcx,QWORD PTR [rsp+0x20]
  437ad0:	test   rcx,rcx
  437ad3:	je     0x437adb
  437ad5:	mov    rax,QWORD PTR [rcx]
  437ad8:	call   QWORD PTR [rax+0x10]
  437adb:	mov    eax,r14d
  437ade:	jmp    0x437af5
  437ae0:	mov    rcx,QWORD PTR [rsp+0x20]
  437ae5:	test   rcx,rcx
  437ae8:	je     0x437af0
  437aea:	mov    rax,QWORD PTR [rcx]
  437aed:	call   QWORD PTR [rax+0x10]
  437af0:	mov    eax,0x80004005
  437af5:	add    rsp,0xf8
  437afc:	pop    r15
  437afe:	pop    r14
  437b00:	pop    r13
  437b02:	pop    r12
  437b04:	pop    rdi
  437b05:	pop    rsi
  437b06:	pop    rbp
  437b07:	pop    rbx
  437b08:	ret    
  437b09:	int3   
  437b0a:	int3   
  437b0b:	int3   
  437b0c:	int3   
  437b0d:	int3   
  437b0e:	int3   
  437b0f:	int3   
  437b10:	int3   
  437b11:	int3   
  437b12:	int3   
  437b13:	int3   
  437b14:	int3   
  437b15:	int3   
  437b16:	int3   
  437b17:	int3   
  437b18:	rex.W push rbp
  437b1a:	sub    rsp,0x20
  437b1e:	mov    rbp,rdx
  437b21:	lea    rcx,[rbp+0x20]
  437b25:	call   0x4176b4
  437b2a:	add    rsp,0x20
  437b2e:	pop    rbp
  437b2f:	ret    
  437b30:	int3   
  437b31:	int3   
  437b32:	int3   
  437b33:	int3   
  437b34:	int3   
  437b35:	int3   
  437b36:	int3   
  437b37:	int3   
  437b38:	rex.W push rbp
  437b3a:	sub    rsp,0x20
  437b3e:	mov    rbp,rdx
  437b41:	lea    rcx,[rbp+0x140]
  437b48:	call   0x4176b4
  437b4d:	add    rsp,0x20
  437b51:	pop    rbp
  437b52:	ret    
  437b53:	int3   
  437b54:	int3   
  437b55:	int3   
  437b56:	int3   
  437b57:	int3   
  437b58:	rex.W push rbp
  437b5a:	sub    rsp,0x20
  437b5e:	mov    rbp,rdx
  437b61:	lea    rcx,[rbp+0x140]
  437b68:	call   0x4176b4
  437b6d:	add    rsp,0x20
  437b71:	pop    rbp
  437b72:	ret    
  437b73:	int3   
  437b74:	int3   
  437b75:	int3   
  437b76:	int3   
  437b77:	int3   
  437b78:	rex.W push rbp
  437b7a:	sub    rsp,0x20
  437b7e:	mov    rbp,rdx
  437b81:	lea    rcx,[rbp+0x38]
  437b85:	call   0x401000
  437b8a:	add    rsp,0x20
  437b8e:	pop    rbp
  437b8f:	ret    
  437b90:	int3   
  437b91:	int3   
  437b92:	int3   
  437b93:	int3   
  437b94:	int3   
  437b95:	int3   
  437b96:	int3   
  437b97:	int3   
  437b98:	rex.W push rbp
  437b9a:	sub    rsp,0x20
  437b9e:	mov    rbp,rdx
  437ba1:	lea    rcx,[rbp+0x28]
  437ba5:	call   0x4047cc
  437baa:	add    rsp,0x20
  437bae:	pop    rbp
  437baf:	ret    
  437bb0:	int3   
  437bb1:	int3   
  437bb2:	int3   
  437bb3:	int3   
  437bb4:	int3   
  437bb5:	int3   
  437bb6:	int3   
  437bb7:	int3   
  437bb8:	rex.W push rbp
  437bba:	sub    rsp,0x20
  437bbe:	mov    rbp,rdx
  437bc1:	lea    rcx,[rbp+0x78]
  437bc5:	call   0x401000
  437bca:	add    rsp,0x20
  437bce:	pop    rbp
  437bcf:	ret    
  437bd0:	int3   
  437bd1:	int3   
  437bd2:	int3   
  437bd3:	int3   
  437bd4:	int3   
  437bd5:	int3   
  437bd6:	int3   
  437bd7:	int3   
  437bd8:	rex.W push rbp
  437bda:	sub    rsp,0x20
  437bde:	mov    rbp,rdx
  437be1:	lea    rcx,[rbp+0x68]
  437be5:	call   0x401000
  437bea:	add    rsp,0x20
  437bee:	pop    rbp
  437bef:	ret    
  437bf0:	int3   
  437bf1:	int3   
  437bf2:	int3   
  437bf3:	int3   
  437bf4:	int3   
  437bf5:	int3   
  437bf6:	int3   
  437bf7:	int3   
  437bf8:	rex.W push rbp
  437bfa:	sub    rsp,0x20
  437bfe:	mov    rbp,rdx
  437c01:	mov    rcx,QWORD PTR [rbp+0x140]
  437c08:	call   0x40215c
  437c0d:	add    rsp,0x20
  437c11:	pop    rbp
  437c12:	ret    
  437c13:	int3   
  437c14:	int3   
  437c15:	int3   
  437c16:	int3   
  437c17:	int3   
  437c18:	rex.W push rbp
  437c1a:	sub    rsp,0x20
  437c1e:	mov    rbp,rdx
  437c21:	lea    rcx,[rbp+0x48]
  437c25:	call   0x401000
  437c2a:	add    rsp,0x20
  437c2e:	pop    rbp
  437c2f:	ret    
  437c30:	int3   
  437c31:	int3   
  437c32:	int3   
  437c33:	int3   
  437c34:	int3   
  437c35:	int3   
  437c36:	int3   
  437c37:	int3   
  437c38:	rex.W push rbp
  437c3a:	sub    rsp,0x20
  437c3e:	mov    rbp,rdx
  437c41:	mov    rcx,QWORD PTR [rbp+0x140]
  437c48:	call   0x40215c
  437c4d:	add    rsp,0x20
  437c51:	pop    rbp
  437c52:	ret    
  437c53:	int3   
  437c54:	int3   
  437c55:	int3   
  437c56:	int3   
  437c57:	int3   
  437c58:	rex.W push rbp
  437c5a:	sub    rsp,0x20
  437c5e:	mov    rbp,rdx
  437c61:	lea    rcx,[rbp+0xe8]
  437c68:	call   0x4176b4
  437c6d:	add    rsp,0x20
  437c71:	pop    rbp
  437c72:	ret    
  437c73:	int3   
  437c74:	int3   
  437c75:	int3   
  437c76:	int3   
  437c77:	int3   
  437c78:	rex.W push rbp
  437c7a:	sub    rsp,0x20
  437c7e:	mov    rbp,rdx
  437c81:	lea    rcx,[rbp+0xb0]
  437c88:	call   0x4176b4
  437c8d:	add    rsp,0x20
  437c91:	pop    rbp
  437c92:	ret    
  437c93:	int3   
  437c94:	int3   
  437c95:	int3   
  437c96:	int3   
  437c97:	int3   
  437c98:	rex.W push rbp
  437c9a:	sub    rsp,0x20
  437c9e:	mov    rbp,rdx
  437ca1:	lea    rcx,[rbp+0xa0]
  437ca8:	call   0x4176b4
  437cad:	add    rsp,0x20
  437cb1:	pop    rbp
  437cb2:	ret    
  437cb3:	int3   
  437cb4:	int3   
  437cb5:	int3   
  437cb6:	int3   
  437cb7:	int3   
  437cb8:	rex.W push rbp
  437cba:	sub    rsp,0x20
  437cbe:	mov    rbp,rdx
  437cc1:	lea    rcx,[rbp+0x68]
  437cc5:	call   0x401000
  437cca:	add    rsp,0x20
  437cce:	pop    rbp
  437ccf:	ret    
  437cd0:	int3   
  437cd1:	int3   
  437cd2:	int3   
  437cd3:	int3   
  437cd4:	int3   
  437cd5:	int3   
  437cd6:	int3   
  437cd7:	int3   
  437cd8:	rex.W push rbp
  437cda:	sub    rsp,0x20
  437cde:	mov    rbp,rdx
  437ce1:	lea    rcx,[rbp+0x48]
  437ce5:	call   0x401000
  437cea:	add    rsp,0x20
  437cee:	pop    rbp
  437cef:	ret    
  437cf0:	int3   
  437cf1:	int3   
  437cf2:	int3   
  437cf3:	int3   
  437cf4:	int3   
  437cf5:	int3   
  437cf6:	int3   
  437cf7:	int3   
  437cf8:	rex.W push rbp
  437cfa:	sub    rsp,0x20
  437cfe:	mov    rbp,rdx
  437d01:	lea    rcx,[rbp+0x48]
  437d05:	call   0x401000
  437d0a:	add    rsp,0x20
  437d0e:	pop    rbp
  437d0f:	ret    
  437d10:	int3   
  437d11:	int3   
  437d12:	int3   
  437d13:	int3   
  437d14:	int3   
  437d15:	int3   
  437d16:	int3   
  437d17:	int3   
  437d18:	rex.W push rbp
  437d1a:	sub    rsp,0x20
  437d1e:	mov    rbp,rdx
  437d21:	lea    rcx,[rbp+0x68]
  437d25:	call   0x401000
  437d2a:	add    rsp,0x20
  437d2e:	pop    rbp
  437d2f:	ret    
  437d30:	int3   
  437d31:	int3   
  437d32:	int3   
  437d33:	int3   
  437d34:	int3   
  437d35:	int3   
  437d36:	int3   
  437d37:	int3   
  437d38:	rex.W push rbp
  437d3a:	sub    rsp,0x20
  437d3e:	mov    rbp,rdx
  437d41:	lea    rcx,[rbp+0x78]
  437d45:	call   0x401000
  437d4a:	add    rsp,0x20
  437d4e:	pop    rbp
  437d4f:	ret    
  437d50:	int3   
  437d51:	int3   
  437d52:	int3   
  437d53:	int3   
  437d54:	int3   
  437d55:	int3   
  437d56:	int3   
  437d57:	int3   
  437d58:	rex.W push rbp
  437d5a:	sub    rsp,0x20
  437d5e:	mov    rbp,rdx
  437d61:	mov    rcx,QWORD PTR [rbp+0x140]
  437d68:	call   0x40215c
  437d6d:	add    rsp,0x20
  437d71:	pop    rbp
  437d72:	ret    
  437d73:	int3   
  437d74:	int3   
  437d75:	int3   
  437d76:	int3   
  437d77:	int3   
  437d78:	rex.W push rbp
  437d7a:	sub    rsp,0x20
  437d7e:	mov    rbp,rdx
  437d81:	mov    rcx,QWORD PTR [rbp+0x140]
  437d88:	call   0x40215c
  437d8d:	add    rsp,0x20
  437d91:	pop    rbp
  437d92:	ret    
  437d93:	int3   
  437d94:	int3   
  437d95:	int3   
  437d96:	int3   
  437d97:	int3   
  437d98:	rex.W push rbp
  437d9a:	sub    rsp,0x20
  437d9e:	mov    rbp,rdx
  437da1:	mov    rcx,QWORD PTR [rbp+0x140]
  437da8:	add    rcx,0x28
  437dac:	call   0x435714
  437db1:	add    rsp,0x20
  437db5:	pop    rbp
  437db6:	ret    
  437db7:	int3   
  437db8:	rex.W push rbp
  437dba:	sub    rsp,0x20
  437dbe:	mov    rbp,rdx
  437dc1:	mov    rcx,QWORD PTR [rbp+0x140]
  437dc8:	add    rcx,0x38
  437dcc:	call   0x401000
  437dd1:	add    rsp,0x20
  437dd5:	pop    rbp
  437dd6:	ret    
  437dd7:	int3   
  437dd8:	rex.W push rbp
  437dda:	sub    rsp,0x20
  437dde:	mov    rbp,rdx
  437de1:	lea    rcx,[rbp+0x68]
  437de5:	call   0x401000
  437dea:	add    rsp,0x20
  437dee:	pop    rbp
  437def:	ret    
  437df0:	int3   
  437df1:	int3   
  437df2:	int3   
  437df3:	int3   
  437df4:	int3   
  437df5:	int3   
  437df6:	int3   
  437df7:	int3   
  437df8:	rex.W push rbp
  437dfa:	sub    rsp,0x20
  437dfe:	mov    rbp,rdx
  437e01:	mov    rcx,QWORD PTR [rbp+0x140]
  437e08:	call   0x40215c
  437e0d:	add    rsp,0x20
  437e11:	pop    rbp
  437e12:	ret    
  437e13:	int3   
  437e14:	int3   
  437e15:	int3   
  437e16:	int3   
  437e17:	int3   
  437e18:	rex.W push rbp
  437e1a:	sub    rsp,0x20
  437e1e:	mov    rbp,rdx
  437e21:	lea    rcx,[rbp+0x78]
  437e25:	call   0x4176b4
  437e2a:	add    rsp,0x20
  437e2e:	pop    rbp
  437e2f:	ret    
  437e30:	int3   
  437e31:	int3   
  437e32:	int3   
  437e33:	int3   
  437e34:	int3   
  437e35:	int3   
  437e36:	int3   
  437e37:	int3   
  437e38:	rex.W push rbp
  437e3a:	sub    rsp,0x20
  437e3e:	mov    rbp,rdx
  437e41:	lea    rcx,[rbp+0x140]
  437e48:	call   0x4176b4
  437e4d:	add    rsp,0x20
  437e51:	pop    rbp
  437e52:	ret    
  437e53:	int3   
  437e54:	int3   
  437e55:	int3   
  437e56:	int3   
  437e57:	int3   
  437e58:	rex.W push rbp
  437e5a:	sub    rsp,0x20
  437e5e:	mov    rbp,rdx
  437e61:	lea    rcx,[rbp+0x68]
  437e65:	call   0x401000
  437e6a:	add    rsp,0x20
  437e6e:	pop    rbp
  437e6f:	ret    
  437e70:	int3   
  437e71:	int3   
  437e72:	int3   
  437e73:	int3   
  437e74:	int3   
  437e75:	int3   
  437e76:	int3   
  437e77:	int3   
  437e78:	rex.W push rbp
  437e7a:	sub    rsp,0x20
  437e7e:	mov    rbp,rdx
  437e81:	lea    rcx,[rbp+0x88]
  437e88:	call   0x4176b4
  437e8d:	add    rsp,0x20
  437e91:	pop    rbp
  437e92:	ret    
  437e93:	int3   
  437e94:	mov    QWORD PTR [rsp+0x20],r9
  437e99:	mov    QWORD PTR [rsp+0x8],rcx
  437e9e:	push   rbx
  437e9f:	push   rsi
  437ea0:	push   rdi
  437ea1:	push   r12
  437ea3:	push   r13
  437ea5:	push   r14
  437ea7:	push   r15
  437ea9:	sub    rsp,0x4f0
  437eb0:	mov    QWORD PTR [rsp+0x4e0],0xfffffffffffffffe
  437ebc:	mov    rbx,r9
  437ebf:	mov    r14,r8
  437ec2:	mov    r13,rdx
  437ec5:	mov    rsi,rcx
  437ec8:	mov    rdi,QWORD PTR [rsp+0x550]
  437ed0:	xor    r12d,r12d
  437ed3:	cmp    BYTE PTR [rdi+0xf8],r12b
  437eda:	je     0x437eef
  437edc:	cmp    BYTE PTR [rdi+0xf9],r12b
  437ee3:	je     0x437eef
  437ee5:	mov    eax,0x80004005
  437eea:	jmp    0x43a946
  437eef:	mov    edx,0x1
  437ef4:	cmp    DWORD PTR [r13+0x8],edx
  437ef8:	jbe    0x437f04
  437efa:	mov    eax,0x80004001
  437eff:	jmp    0x43a946
  437f04:	cmp    DWORD PTR [rdi+0x150],r12d
  437f0b:	setne  r15b
  437f0f:	cmp    r15b,r12b
  437f12:	je     0x437f23
  437f14:	cmp    DWORD PTR [rdi+0x40],edx
  437f17:	je     0x437f23
  437f19:	mov    eax,0x80004005
  437f1e:	jmp    0x43a946
  437f23:	cmp    BYTE PTR [rdi+0x140],r12b
  437f2a:	je     0x437f6a
  437f2c:	cmp    DWORD PTR [rdi+0x40],edx
  437f2f:	je     0x437f3b
  437f31:	mov    eax,0x80004001
  437f36:	jmp    0x43a946
  437f3b:	mov    rax,QWORD PTR [rdi+0x38]
  437f3f:	mov    rcx,QWORD PTR [rax]
  437f42:	mov    eax,0x2
  437f47:	add    rcx,0x90
  437f4e:	cmp    DWORD PTR [rcx],0x2
  437f51:	jne    0x437f60
  437f53:	add    eax,edx
  437f55:	add    rcx,0x4
  437f59:	cmp    eax,0x7
  437f5c:	jb     0x437f4e
  437f5e:	jmp    0x437f6a
  437f60:	mov    eax,0x80004001
  437f65:	jmp    0x43a946
  437f6a:	mov    edx,DWORD PTR [rdi+0x120]
  437f70:	mov    rcx,rbx
  437f73:	call   0x406678
  437f78:	mov    rcx,rbx
  437f7b:	call   0x4112bc
  437f80:	mov    rcx,rbx
  437f83:	call   0x406608
  437f88:	cmp    DWORD PTR [rdi+0x160],r12d
  437f8f:	jbe    0x437fa4
  437f91:	cmp    BYTE PTR [rdi+0xf9],r12b
  437f98:	je     0x437fa4
  437f9a:	mov    eax,0x80004001
  437f9f:	jmp    0x43a946
  437fa4:	cmp    BYTE PTR [rdi+0xcc],r12b
  437fab:	je     0x438154
  437fb1:	lea    rcx,[rsp+0x1d8]
  437fb9:	call   0x403150
  437fbe:	nop
  437fbf:	lea    rcx,[rsp+0x1e8]
  437fc7:	call   0x403150
  437fcc:	nop
  437fcd:	lea    rdx,[rip+0x19920]        # 0x4518f4
  437fd4:	lea    rcx,[rsp+0x1d8]
  437fdc:	call   0x4034e8
  437fe1:	mov    r12d,0x20
  437fe7:	mov    rcx,r12
  437fea:	call   0x402130
  437fef:	mov    rbx,rax
  437ff2:	mov    QWORD PTR [rsp+0xe8],rax
  437ffa:	test   rax,rax
  437ffd:	je     0x438024
  437fff:	lea    rdx,[rsp+0x1d8]
  438007:	mov    rcx,rax
  43800a:	call   0x403208
  43800f:	nop
  438010:	lea    rcx,[rbx+0x10]
  438014:	lea    rdx,[rsp+0x1e8]
  43801c:	call   0x403208
  438021:	nop
  438022:	jmp    0x438026
  438024:	xor    ebx,ebx
  438026:	lea    rcx,[rdi+0x28]
  43802a:	mov    rdx,rbx
  43802d:	call   0x4010c8
  438032:	cmp    DWORD PTR [rdi+0xd8],0x0
  438039:	jne    0x43805e
  43803b:	mov    rcx,QWORD PTR [rsp+0x558]
  438043:	add    rcx,0x8
  438047:	lea    rdx,[rip+0x1988a]        # 0x4518d8
  43804e:	call   0x402be4
  438053:	nop
  438054:	mov    ebx,0x80004005
  438059:	jmp    0x43810f
  43805e:	xor    sil,sil
  438061:	mov    dx,0x5c
  438065:	mov    rcx,QWORD PTR [rdi+0xd0]
  43806c:	call   0x4026e0
  438071:	test   eax,eax
  438073:	jns    0x4380e2
  438075:	lea    rcx,[rsp+0x1c8]
  43807d:	call   0x406818
  438082:	nop
  438083:	lea    r8,[rdi+0xd0]
  43808a:	mov    rdx,rax
  43808d:	lea    rcx,[rsp+0x118]
  438095:	call   0x4030d4
  43809a:	nop
  43809b:	mov    rcx,QWORD PTR [rsp+0x1c8]
  4380a3:	call   0x40215c
  4380a8:	mov    rcx,QWORD PTR [rsp+0x118]
  4380b0:	call   0x4088cc
  4380b5:	test   al,al
  4380b7:	je     0x4380d0
  4380b9:	lea    rdx,[rsp+0x118]
  4380c1:	lea    rcx,[rdi+0xd0]
  4380c8:	call   0x4032f8
  4380cd:	mov    sil,0x1
  4380d0:	mov    rcx,QWORD PTR [rsp+0x118]
  4380d8:	call   0x40215c
  4380dd:	test   sil,sil
  4380e0:	jne    0x438130
  4380e2:	mov    rcx,QWORD PTR [rdi+0xd0]
  4380e9:	call   0x4088cc
  4380ee:	test   al,al
  4380f0:	jne    0x438130
  4380f2:	lea    r8,[rdi+0xd0]
  4380f9:	lea    rdx,[rip+0x197b0]        # 0x4518b0
  438100:	mov    rcx,QWORD PTR [rsp+0x558]
  438108:	call   0x43579c
  43810d:	mov    ebx,eax
  43810f:	mov    rcx,QWORD PTR [rsp+0x1e8]
  438117:	call   0x40215c
  43811c:	mov    rcx,QWORD PTR [rsp+0x1d8]
  438124:	call   0x40215c
  438129:	mov    eax,ebx
  43812b:	jmp    0x43a946
  438130:	mov    rcx,QWORD PTR [rsp+0x1e8]
  438138:	call   0x40215c
  43813d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  438145:	call   0x40215c
  43814a:	mov    rsi,QWORD PTR [rsp+0x530]
  438152:	jmp    0x43815a
  438154:	mov    r12d,0x20
  43815a:	lea    rcx,[rsp+0x310]
  438162:	call   0x422e04
  438167:	nop
  438168:	cmp    BYTE PTR [rsp+0x570],0x0
  438170:	je     0x4381a8
  438172:	mov    r9,r14
  438175:	mov    r8,r13
  438178:	mov    rdx,rsi
  43817b:	mov    rcx,rdi
  43817e:	call   0x43530c
  438183:	xor    r13d,r13d
  438186:	cmp    al,r13b
  438189:	je     0x43819e
  43818b:	mov    r8,r14
  43818e:	mov    rdx,rsi
  438191:	mov    rcx,rdi
  438194:	call   0x435400
  438199:	cmp    al,r13b
  43819c:	jne    0x4381ab
  43819e:	mov    ebx,0x80004001
  4381a3:	jmp    0x4398f5
  4381a8:	xor    r13d,r13d
  4381ab:	lea    rdx,[rsp+0x98]
  4381b3:	lea    rcx,[rdi+0x50]
  4381b7:	call   0x434818
  4381bc:	nop
  4381bd:	cmp    DWORD PTR [r14+0x8],r13d
  4381c1:	jne    0x4381f1
  4381c3:	cmp    DWORD PTR [rdi+0x8],r13d
  4381c7:	jge    0x438980
  4381cd:	lea    rax,[rip+0x196b4]        # 0x451888
  4381d4:	mov    QWORD PTR [rsp+0x2f0],rax
  4381dc:	lea    rdx,[rip+0x2ef0d]        # 0x4670f0
  4381e3:	lea    rcx,[rsp+0x2f0]
  4381eb:	call   0x44b71e
  4381f0:	int3   
  4381f1:	lea    rcx,[rsp+0x1f8]
  4381f9:	call   0x407fc0
  4381fe:	lea    rcx,[rsp+0x220]
  438206:	call   0x403150
  43820b:	nop
  43820c:	mov    rdx,QWORD PTR [rsp+0x98]
  438214:	lea    rcx,[rsp+0x1f8]
  43821c:	call   0x408134
  438221:	cmp    al,r13b
  438224:	jne    0x438296
  438226:	cmp    r15b,r13b
  438229:	je     0x43824f
  43822b:	lea    rax,[rip+0x1963e]        # 0x451870
  438232:	mov    QWORD PTR [rsp+0x2f8],rax
  43823a:	lea    rdx,[rip+0x2eeaf]        # 0x4670f0
  438241:	lea    rcx,[rsp+0x2f8]
  438249:	call   0x44b71e
  43824e:	int3   
  43824f:	cmp    DWORD PTR [rdi+0x8],r13d
  438253:	jge    0x438967
  438259:	mov    r8,r14
  43825c:	mov    rdx,rsi
  43825f:	mov    rcx,rdi
  438262:	call   0x435400
  438267:	cmp    al,r13b
  43826a:	jne    0x438967
  438270:	mov    rcx,QWORD PTR [rsp+0x220]
  438278:	call   0x40215c
  43827d:	nop
  43827e:	mov    rcx,QWORD PTR [rsp+0x98]
  438286:	call   0x40215c
  43828b:	nop
  43828c:	mov    ebx,0x80004001
  438291:	jmp    0x4398f5
  438296:	mov    eax,DWORD PTR [rsp+0x218]
  43829d:	shr    eax,0x4
  4382a0:	test   al,0x1
  4382a2:	je     0x4382c8
  4382a4:	lea    rax,[rip+0x179a5]        # 0x44fc50
  4382ab:	mov    QWORD PTR [rsp+0x300],rax
  4382b3:	lea    rdx,[rip+0x2ee36]        # 0x4670f0
  4382ba:	lea    rcx,[rsp+0x300]
  4382c2:	call   0x44b71e
  4382c7:	int3   
  4382c8:	cmp    BYTE PTR [rsp+0x21d],r13b
  4382d0:	je     0x4382f8
  4382d2:	mov    rcx,QWORD PTR [rsp+0x220]
  4382da:	call   0x40215c
  4382df:	nop
  4382e0:	mov    rcx,QWORD PTR [rsp+0x98]
  4382e8:	call   0x40215c
  4382ed:	nop
  4382ee:	mov    ebx,0x80004001
  4382f3:	jmp    0x4398f5
  4382f8:	cmp    DWORD PTR [rdi+0x160],r13d
  4382ff:	jbe    0x438327
  438301:	mov    rcx,QWORD PTR [rsp+0x220]
  438309:	call   0x40215c
  43830e:	nop
  43830f:	mov    rcx,QWORD PTR [rsp+0x98]
  438317:	call   0x40215c
  43831c:	nop
  43831d:	mov    ebx,0x80004001
  438322:	jmp    0x4398f5
  438327:	mov    QWORD PTR [rsp+0x88],r13
  43832f:	mov    DWORD PTR [rsp+0x90],r13d
  438337:	mov    DWORD PTR [rsp+0x94],r13d
  43833f:	cmp    BYTE PTR [rdi],r13b
  438342:	je     0x438378
  438344:	mov    rcx,r12
  438347:	call   0x402130
  43834c:	mov    rbx,rax
  43834f:	cmp    rax,r13
  438352:	je     0x438365
  438354:	mov    rcx,rax
  438357:	lea    rdx,[rdi+0x8]
  43835b:	mov    r8,r12
  43835e:	call   0x44b480
  438363:	jmp    0x438368
  438365:	mov    rbx,r13
  438368:	mov    rdx,rbx
  43836b:	lea    rcx,[rsp+0x88]
  438373:	call   0x4010c8
  438378:	mov    QWORD PTR [rsp+0xa8],r13
  438380:	mov    DWORD PTR [rsp+0xb0],r13d
  438388:	mov    DWORD PTR [rsp+0xb4],r13d
  438390:	lea    rcx,[rsp+0x460]
  438398:	call   0x4229a4
  43839d:	nop
  43839e:	lea    rax,[rdi+0x28]
  4383a2:	mov    QWORD PTR [rsp+0x4b8],rax
  4383aa:	mov    QWORD PTR [rsp+0x460],rsi
  4383b2:	lea    rax,[rsp+0x88]
  4383ba:	mov    QWORD PTR [rsp+0x488],rax
  4383c2:	lea    rax,[rsp+0xa8]
  4383ca:	mov    QWORD PTR [rsp+0x490],rax
  4383d2:	mov    BYTE PTR [rsp+0x4c0],r13b
  4383da:	mov    QWORD PTR [rsp+0x498],r13
  4383e2:	lea    rdx,[rsp+0x98]
  4383ea:	lea    rcx,[rsp+0x4c8]
  4383f2:	call   0x4032f8
  4383f7:	mov    rsi,QWORD PTR [rsp+0x568]
  4383ff:	mov    rax,QWORD PTR [rsi]
  438402:	mov    rdx,QWORD PTR [rsp+0x98]
  43840a:	mov    rcx,rsi
  43840d:	call   QWORD PTR [rax+0x90]
  438413:	mov    ebx,eax
  438415:	cmp    eax,r13d
  438418:	je     0x43849e
  43841e:	mov    rcx,QWORD PTR [rsp+0x4c8]
  438426:	call   0x40215c
  43842b:	nop
  43842c:	mov    rcx,QWORD PTR [rsp+0xa8]
  438434:	call   0x40215c
  438439:	nop
  43843a:	movsxd rdi,DWORD PTR [rsp+0x90]
  438442:	mov    r12,rdi
  438445:	cmp    edi,r13d
  438448:	je     0x43846f
  43844a:	shl    r12,0x3
  43844e:	mov    esi,0xffffffff
  438453:	add    edi,esi
  438455:	sub    r12,0x8
  438459:	mov    rax,QWORD PTR [rsp+0x88]
  438461:	mov    rcx,QWORD PTR [r12+rax*1]
  438465:	call   0x40215c
  43846a:	cmp    edi,r13d
  43846d:	jne    0x438453
  43846f:	mov    rcx,QWORD PTR [rsp+0x88]
  438477:	call   0x40215c
  43847c:	nop
  43847d:	mov    rcx,QWORD PTR [rsp+0x220]
  438485:	call   0x40215c
  43848a:	nop
  43848b:	mov    rcx,QWORD PTR [rsp+0x98]
  438493:	call   0x40215c
  438498:	nop
  438499:	jmp    0x4398f5
  43849e:	mov    r8,QWORD PTR [rsp+0x560]
  4384a6:	lea    rdx,[rsp+0x460]
  4384ae:	lea    rcx,[rsp+0x310]
  4384b6:	call   0x433188
  4384bb:	mov    r12d,eax
  4384be:	mov    ebx,0x80004004
  4384c3:	cmp    eax,ebx
  4384c5:	jne    0x43854b
  4384cb:	mov    rcx,QWORD PTR [rsp+0x4c8]
  4384d3:	call   0x40215c
  4384d8:	nop
  4384d9:	mov    rcx,QWORD PTR [rsp+0xa8]
  4384e1:	call   0x40215c
  4384e6:	nop
  4384e7:	movsxd rdi,DWORD PTR [rsp+0x90]
  4384ef:	mov    r12,rdi
  4384f2:	cmp    edi,r13d
  4384f5:	je     0x43851c
  4384f7:	shl    r12,0x3
  4384fb:	mov    esi,0xffffffff
  438500:	add    edi,esi
  438502:	sub    r12,0x8
  438506:	mov    rax,QWORD PTR [rsp+0x88]
  43850e:	mov    rcx,QWORD PTR [r12+rax*1]
  438512:	call   0x40215c
  438517:	cmp    edi,r13d
  43851a:	jne    0x438500
  43851c:	mov    rcx,QWORD PTR [rsp+0x88]
  438524:	call   0x40215c
  438529:	nop
  43852a:	mov    rcx,QWORD PTR [rsp+0x220]
  438532:	call   0x40215c
  438537:	nop
  438538:	mov    rcx,QWORD PTR [rsp+0x98]
  438540:	call   0x40215c
  438545:	nop
  438546:	jmp    0x4398f5
  43854b:	cmp    eax,r13d
  43854e:	jne    0x438561
  438550:	cmp    DWORD PTR [rsp+0x35c],r13d
  438558:	mov    eax,0x1
  43855d:	cmovge r12d,eax
  438561:	mov    rax,QWORD PTR [rsi]
  438564:	mov    DWORD PTR [rsp+0x20],r12d
  438569:	mov    r9,QWORD PTR [rsp+0x98]
  438571:	lea    r8,[rsp+0x310]
  438579:	mov    rdx,QWORD PTR [rsp+0x530]
  438581:	mov    rcx,rsi
  438584:	call   QWORD PTR [rax+0x78]
  438587:	mov    r13d,eax
  43858a:	test   eax,eax
  43858c:	je     0x43860d
  43858e:	mov    rcx,QWORD PTR [rsp+0x4c8]
  438596:	call   0x40215c
  43859b:	nop
  43859c:	mov    rcx,QWORD PTR [rsp+0xa8]
  4385a4:	call   0x40215c
  4385a9:	nop
  4385aa:	movsxd rbx,DWORD PTR [rsp+0x90]
  4385b2:	mov    rdi,rbx
  4385b5:	test   ebx,ebx
  4385b7:	je     0x4385db
  4385b9:	shl    rdi,0x3
  4385bd:	mov    esi,0xffffffff
  4385c2:	sub    rdi,0x8
  4385c6:	mov    rax,QWORD PTR [rsp+0x88]
  4385ce:	mov    rcx,QWORD PTR [rdi+rax*1]
  4385d2:	call   0x40215c
  4385d7:	add    ebx,esi
  4385d9:	jne    0x4385c2
  4385db:	mov    rcx,QWORD PTR [rsp+0x88]
  4385e3:	call   0x40215c
  4385e8:	nop
  4385e9:	mov    rcx,QWORD PTR [rsp+0x220]
  4385f1:	call   0x40215c
  4385f6:	nop
  4385f7:	mov    rcx,QWORD PTR [rsp+0x98]
  4385ff:	call   0x40215c
  438604:	nop
  438605:	mov    ebx,r13d
  438608:	jmp    0x4398f5
  43860d:	xor    r13d,r13d
  438610:	cmp    r12d,r13d
  438613:	je     0x43869c
  438619:	mov    rcx,QWORD PTR [rsp+0x4c8]
  438621:	call   0x40215c
  438626:	nop
  438627:	mov    rcx,QWORD PTR [rsp+0xa8]
  43862f:	call   0x40215c
  438634:	nop
  438635:	movsxd rbx,DWORD PTR [rsp+0x90]
  43863d:	mov    rdi,rbx
  438640:	cmp    ebx,r13d
  438643:	je     0x43866a
  438645:	shl    rdi,0x3
  438649:	mov    esi,0xffffffff
  43864e:	add    ebx,esi
  438650:	sub    rdi,0x8
  438654:	mov    rax,QWORD PTR [rsp+0x88]
  43865c:	mov    rcx,QWORD PTR [rdi+rax*1]
  438660:	call   0x40215c
  438665:	cmp    ebx,r13d
  438668:	jne    0x43864e
  43866a:	mov    rcx,QWORD PTR [rsp+0x88]
  438672:	call   0x40215c
  438677:	nop
  438678:	mov    rcx,QWORD PTR [rsp+0x220]
  438680:	call   0x40215c
  438685:	nop
  438686:	mov    rcx,QWORD PTR [rsp+0x98]
  43868e:	call   0x40215c
  438693:	nop
  438694:	mov    ebx,r12d
  438697:	jmp    0x4398f5
  43869c:	mov    eax,0x1
  4386a1:	cmp    DWORD PTR [rsp+0x328],eax
  4386a8:	jbe    0x438752
  4386ae:	mov    rcx,QWORD PTR [rsp+0x558]
  4386b6:	mov    DWORD PTR [rcx],0x80004001
  4386bc:	add    rcx,0x8
  4386c0:	lea    rdx,[rip+0x19171]        # 0x451838
  4386c7:	call   0x402be4
  4386cc:	nop
  4386cd:	mov    rcx,QWORD PTR [rsp+0x4c8]
  4386d5:	call   0x40215c
  4386da:	nop
  4386db:	mov    rcx,QWORD PTR [rsp+0xa8]
  4386e3:	call   0x40215c
  4386e8:	nop
  4386e9:	movsxd rbx,DWORD PTR [rsp+0x90]
  4386f1:	mov    rdi,rbx
  4386f4:	cmp    ebx,r13d
  4386f7:	je     0x43871e
  4386f9:	shl    rdi,0x3
  4386fd:	mov    esi,0xffffffff
  438702:	add    ebx,esi
  438704:	sub    rdi,0x8
  438708:	mov    rax,QWORD PTR [rsp+0x88]
  438710:	mov    rcx,QWORD PTR [rdi+rax*1]
  438714:	call   0x40215c
  438719:	cmp    ebx,r13d
  43871c:	jne    0x438702
  43871e:	mov    rcx,QWORD PTR [rsp+0x88]
  438726:	call   0x40215c
  43872b:	nop
  43872c:	mov    rcx,QWORD PTR [rsp+0x220]
  438734:	call   0x40215c
  438739:	nop
  43873a:	mov    rcx,QWORD PTR [rsp+0x98]
  438742:	call   0x40215c
  438747:	nop
  438748:	mov    ebx,0x80004001
  43874d:	jmp    0x4398f5
  438752:	mov    ecx,DWORD PTR [rsp+0x318]
  438759:	dec    ecx
  43875b:	mov    rax,QWORD PTR [rsp+0x310]
  438763:	mov    rdx,QWORD PTR [rax+rcx*8]
  438767:	cmp    BYTE PTR [rsp+0x21d],r13b
  43876f:	sete   al
  438772:	mov    BYTE PTR [rdx+0xd0],al
  438778:	mov    rax,QWORD PTR [rsp+0x210]
  438780:	mov    QWORD PTR [rdx+0xc8],rax
  438787:	cmp    BYTE PTR [rdx+0x20],r13b
  43878b:	je     0x438835
  438791:	mov    rcx,QWORD PTR [rsp+0x558]
  438799:	mov    DWORD PTR [rcx],0x80004001
  43879f:	add    rcx,0x8
  4387a3:	lea    rdx,[rip+0x19056]        # 0x451800
  4387aa:	call   0x402be4
  4387af:	nop
  4387b0:	mov    rcx,QWORD PTR [rsp+0x4c8]
  4387b8:	call   0x40215c
  4387bd:	nop
  4387be:	mov    rcx,QWORD PTR [rsp+0xa8]
  4387c6:	call   0x40215c
  4387cb:	nop
  4387cc:	movsxd rbx,DWORD PTR [rsp+0x90]
  4387d4:	mov    rdi,rbx
  4387d7:	cmp    ebx,r13d
  4387da:	je     0x438801
  4387dc:	shl    rdi,0x3
  4387e0:	mov    esi,0xffffffff
  4387e5:	add    ebx,esi
  4387e7:	sub    rdi,0x8
  4387eb:	mov    rax,QWORD PTR [rsp+0x88]
  4387f3:	mov    rcx,QWORD PTR [rdi+rax*1]
  4387f7:	call   0x40215c
  4387fc:	cmp    ebx,r13d
  4387ff:	jne    0x4387e5
  438801:	mov    rcx,QWORD PTR [rsp+0x88]
  438809:	call   0x40215c
  43880e:	nop
  43880f:	mov    rcx,QWORD PTR [rsp+0x220]
  438817:	call   0x40215c
  43881c:	nop
  43881d:	mov    rcx,QWORD PTR [rsp+0x98]
  438825:	call   0x40215c
  43882a:	nop
  43882b:	mov    ebx,0x80004001
  438830:	jmp    0x4398f5
  438835:	cmp    DWORD PTR [rdi+0x8],r13d
  438839:	jge    0x4388fe
  43883f:	mov    ecx,DWORD PTR [rsp+0x318]
  438846:	dec    ecx
  438848:	mov    rax,QWORD PTR [rsp+0x310]
  438850:	mov    rcx,QWORD PTR [rax+rcx*8]
  438854:	mov    eax,DWORD PTR [rcx+0xc0]
  43885a:	mov    DWORD PTR [rdi+0x8],eax
  43885d:	mov    r8,r14
  438860:	mov    rdx,QWORD PTR [rsp+0x530]
  438868:	mov    rcx,rdi
  43886b:	call   0x435400
  438870:	cmp    al,r13b
  438873:	jne    0x4388fe
  438879:	mov    rcx,QWORD PTR [rsp+0x4c8]
  438881:	call   0x40215c
  438886:	nop
  438887:	mov    rcx,QWORD PTR [rsp+0xa8]
  43888f:	call   0x40215c
  438894:	nop
  438895:	movsxd rbx,DWORD PTR [rsp+0x90]
  43889d:	mov    rdi,rbx
  4388a0:	cmp    ebx,r13d
  4388a3:	je     0x4388ca
  4388a5:	shl    rdi,0x3
  4388a9:	mov    esi,0xffffffff
  4388ae:	add    ebx,esi
  4388b0:	sub    rdi,0x8
  4388b4:	mov    rax,QWORD PTR [rsp+0x88]
  4388bc:	mov    rcx,QWORD PTR [rdi+rax*1]
  4388c0:	call   0x40215c
  4388c5:	cmp    ebx,r13d
  4388c8:	jne    0x4388ae
  4388ca:	mov    rcx,QWORD PTR [rsp+0x88]
  4388d2:	call   0x40215c
  4388d7:	nop
  4388d8:	mov    rcx,QWORD PTR [rsp+0x220]
  4388e0:	call   0x40215c
  4388e5:	nop
  4388e6:	mov    rcx,QWORD PTR [rsp+0x98]
  4388ee:	call   0x40215c
  4388f3:	nop
  4388f4:	mov    ebx,0x80004001
  4388f9:	jmp    0x4398f5
  4388fe:	mov    rcx,QWORD PTR [rsp+0x4c8]
  438906:	call   0x40215c
  43890b:	nop
  43890c:	mov    rcx,QWORD PTR [rsp+0xa8]
  438914:	call   0x40215c
  438919:	nop
  43891a:	movsxd r12,DWORD PTR [rsp+0x90]
  438922:	mov    r13,r12
  438925:	test   r12d,r12d
  438928:	je     0x438950
  43892a:	shl    r13,0x3
  43892e:	mov    esi,0xffffffff
  438933:	sub    r13,0x8
  438937:	mov    rax,QWORD PTR [rsp+0x88]
  43893f:	mov    rcx,QWORD PTR [r13+rax*1+0x0]
  438944:	call   0x40215c
  438949:	add    r12d,esi
  43894c:	jne    0x438933
  43894e:	jmp    0x438955
  438950:	mov    esi,0xffffffff
  438955:	mov    rcx,QWORD PTR [rsp+0x88]
  43895d:	call   0x40215c
  438962:	xor    r13d,r13d
  438965:	jmp    0x438971
  438967:	mov    esi,0xffffffff
  43896c:	mov    ebx,0x80004004
  438971:	mov    rcx,QWORD PTR [rsp+0x220]
  438979:	call   0x40215c
  43897e:	jmp    0x43898a
  438980:	mov    esi,0xffffffff
  438985:	mov    ebx,0x80004004
  43898a:	cmp    DWORD PTR [rdi+0x8],r13d
  43898e:	jge    0x4389e8
  438990:	mov    rdx,QWORD PTR [rip+0x2fd29]        # 0x4686c0
  438997:	lea    rcx,[rsp+0x118]
  43899f:	call   0x4031c0
  4389a4:	nop
  4389a5:	lea    rdx,[rsp+0x118]
  4389ad:	mov    rcx,QWORD PTR [rsp+0x530]
  4389b5:	call   0x427b80
  4389ba:	mov    DWORD PTR [rdi+0x8],eax
  4389bd:	mov    rcx,QWORD PTR [rsp+0x118]
  4389c5:	call   0x40215c
  4389ca:	cmp    DWORD PTR [rdi+0x8],r13d
  4389ce:	jge    0x4389e8
  4389d0:	mov    rcx,QWORD PTR [rsp+0x98]
  4389d8:	call   0x40215c
  4389dd:	nop
  4389de:	mov    ebx,0x80004001
  4389e3:	jmp    0x4398f5
  4389e8:	mov    r12b,BYTE PTR [rsp+0x338]
  4389f0:	mov    BYTE PTR [rsp+0x70],r12b
  4389f5:	cmp    r12b,r13b
  4389f8:	jne    0x438a17
  4389fa:	cmp    r15b,r13b
  4389fd:	je     0x438a17
  4389ff:	mov    rcx,QWORD PTR [rsp+0x98]
  438a07:	call   0x40215c
  438a0c:	nop
  438a0d:	mov    ebx,0x80004005
  438a12:	jmp    0x4398f5
  438a17:	lea    rcx,[rsp+0x390]
  438a1f:	call   0x420840
  438a24:	nop
  438a25:	mov    r14,QWORD PTR [rsp+0x568]
  438a2d:	mov    rax,r14
  438a30:	lea    rdx,[r14+0x8]
  438a34:	neg    rax
  438a37:	sbb    rcx,rcx
  438a3a:	and    rcx,rdx
  438a3d:	mov    QWORD PTR [rsp+0x450],rcx
  438a45:	lea    rcx,[rsp+0x150]
  438a4d:	call   0x403150
  438a52:	mov    QWORD PTR [rsp+0x160],r13
  438a5a:	mov    QWORD PTR [rsp+0x168],r13
  438a62:	mov    QWORD PTR [rsp+0x170],r13
  438a6a:	mov    QWORD PTR [rsp+0x178],r13
  438a72:	mov    r13,0xffffffffffffffff
  438a79:	mov    DWORD PTR [rsp+0x184],r13d
  438a81:	mov    DWORD PTR [rsp+0x188],r13d
  438a89:	mov    DWORD PTR [rsp+0x18c],r13d
  438a91:	xor    r11d,r11d
  438a94:	mov    BYTE PTR [rsp+0x190],r11b
  438a9c:	mov    QWORD PTR [rsp+0xb8],r11
  438aa4:	cmp    BYTE PTR [rdi+0xe1],r11b
  438aab:	je     0x438bb8
  438ab1:	lea    rcx,[rsp+0x2a0]
  438ab9:	call   0x403150
  438abe:	xor    eax,eax
  438ac0:	mov    QWORD PTR [rsp+0x2b0],rax
  438ac8:	mov    QWORD PTR [rsp+0x2b8],rax
  438ad0:	mov    QWORD PTR [rsp+0x2c0],rax
  438ad8:	mov    QWORD PTR [rsp+0x2c8],rax
  438ae0:	mov    DWORD PTR [rsp+0x2d4],r13d
  438ae8:	mov    DWORD PTR [rsp+0x2d8],r13d
  438af0:	mov    DWORD PTR [rsp+0x2dc],r13d
  438af8:	mov    BYTE PTR [rsp+0x2e0],al
  438aff:	lea    rdx,[rdi+0xe8]
  438b06:	lea    rcx,[rsp+0x2a0]
  438b0e:	call   0x4032f8
  438b13:	mov    QWORD PTR [rsp+0x280],r13
  438b1b:	mov    DWORD PTR [rsp+0x2d0],0x0
  438b26:	lea    rcx,[rsp+0x298]
  438b2e:	call   0x40b814
  438b33:	mov    r11,QWORD PTR [rsp+0x298]
  438b3b:	mov    QWORD PTR [rsp+0x290],r11
  438b43:	mov    QWORD PTR [rsp+0x288],r11
  438b4b:	lea    ecx,[r13+0x69]
  438b4f:	call   0x402130
  438b54:	mov    QWORD PTR [rsp+0xe8],rax
  438b5c:	test   rax,rax
  438b5f:	je     0x438b73
  438b61:	lea    rdx,[rsp+0x280]
  438b69:	mov    rcx,rax
  438b6c:	call   0x41fabc
  438b71:	jmp    0x438b75
  438b73:	xor    eax,eax
  438b75:	mov    rdx,rax
  438b78:	lea    rcx,[rsp+0x3c0]
  438b80:	call   0x4010c8
  438b85:	nop
  438b86:	mov    rcx,QWORD PTR [rsp+0x2c0]
  438b8e:	call   0x40215c
  438b93:	mov    rcx,QWORD PTR [rsp+0x2b0]
  438b9b:	call   0x40215c
  438ba0:	mov    rcx,QWORD PTR [rsp+0x2a0]
  438ba8:	call   0x40215c
  438bad:	mov    r15d,0x1
  438bb3:	jmp    0x438f36
  438bb8:	mov    r10b,r11b
  438bbb:	cmp    r15b,r11b
  438bbe:	jne    0x438f30
  438bc4:	mov    r9d,r11d
  438bc7:	cmp    DWORD PTR [rdi+0x40],r11d
  438bcb:	jbe    0x438f28
  438bd1:	mov    r8,QWORD PTR [rdi+0x38]
  438bd5:	mov    r15d,0x1
  438bdb:	mov    rdx,QWORD PTR [r8]
  438bde:	mov    ecx,r11d
  438be1:	lea    rax,[rdx+0x88]
  438be8:	cmp    DWORD PTR [rax],0x2
  438beb:	je     0x438c16
  438bed:	add    ecx,r15d
  438bf0:	add    rax,0x4
  438bf4:	cmp    ecx,0x7
  438bf7:	jb     0x438be8
  438bf9:	mov    ecx,r15d
  438bfc:	lea    rax,[rdx+0x8c]
  438c03:	cmp    DWORD PTR [rax],r11d
  438c06:	jne    0x438c16
  438c08:	add    ecx,r15d
  438c0b:	add    rax,0x4
  438c0f:	cmp    ecx,0x7
  438c12:	jb     0x438c03
  438c14:	jmp    0x438c19
  438c16:	mov    r10b,r15b
  438c19:	add    r9d,r15d
  438c1c:	add    r8,0x8
  438c20:	cmp    r9d,DWORD PTR [rdi+0x40]
  438c24:	jb     0x438bdb
  438c26:	cmp    r10b,r11b
  438c29:	je     0x438f36
  438c2f:	mov    rax,QWORD PTR [r14]
  438c32:	mov    rcx,r14
  438c35:	call   QWORD PTR [rax+0x80]
  438c3b:	mov    r12d,eax
  438c3e:	test   eax,eax
  438c40:	je     0x438c8e
  438c42:	mov    rcx,QWORD PTR [rsp+0x170]
  438c4a:	call   0x40215c
  438c4f:	mov    rcx,QWORD PTR [rsp+0x160]
  438c57:	call   0x40215c
  438c5c:	mov    rcx,QWORD PTR [rsp+0x150]
  438c64:	call   0x40215c
  438c69:	nop
  438c6a:	lea    rcx,[rsp+0x390]
  438c72:	call   0x410fc0
  438c77:	nop
  438c78:	mov    rcx,QWORD PTR [rsp+0x98]
  438c80:	call   0x40215c
  438c85:	nop
  438c86:	mov    ebx,r12d
  438c89:	jmp    0x4398f5
  438c8e:	mov    al,BYTE PTR [rdi+0x13e]
  438c94:	mov    BYTE PTR [rsp+0x3d0],al
  438c9b:	mov    al,BYTE PTR [rdi+0x138]
  438ca1:	mov    BYTE PTR [rsp+0x449],al
  438ca8:	mov    al,BYTE PTR [rdi+0x13a]
  438cae:	mov    BYTE PTR [rsp+0x3d1],al
  438cb5:	lea    r8,[rdi+0x128]
  438cbc:	lea    r9,[rsp+0x390]
  438cc4:	mov    edx,DWORD PTR [rdi+0x120]
  438cca:	mov    r15,QWORD PTR [rsp+0x548]
  438cd2:	mov    rcx,r15
  438cd5:	call   0x42287c
  438cda:	mov    r12d,eax
  438cdd:	test   eax,eax
  438cdf:	je     0x438d4a
  438ce1:	cmp    eax,ebx
  438ce3:	je     0x438cfe
  438ce5:	mov    rcx,QWORD PTR [rsp+0x558]
  438ced:	add    rcx,0x8
  438cf1:	lea    rdx,[rip+0x17108]        # 0x44fe00
  438cf8:	call   0x402be4
  438cfd:	nop
  438cfe:	mov    rcx,QWORD PTR [rsp+0x170]
  438d06:	call   0x40215c
  438d0b:	mov    rcx,QWORD PTR [rsp+0x160]
  438d13:	call   0x40215c
  438d18:	mov    rcx,QWORD PTR [rsp+0x150]
  438d20:	call   0x40215c
  438d25:	nop
  438d26:	lea    rcx,[rsp+0x390]
  438d2e:	call   0x410fc0
  438d33:	nop
  438d34:	mov    rcx,QWORD PTR [rsp+0x98]
  438d3c:	call   0x40215c
  438d41:	nop
  438d42:	mov    ebx,r12d
  438d45:	jmp    0x4398f5
  438d4a:	mov    rax,QWORD PTR [r14]
  438d4d:	lea    rdx,[rsp+0x3d8]
  438d55:	mov    rcx,r14
  438d58:	call   QWORD PTR [rax+0x88]
  438d5e:	mov    ebx,eax
  438d60:	test   eax,eax
  438d62:	je     0x438dad
  438d64:	mov    rcx,QWORD PTR [rsp+0x170]
  438d6c:	call   0x40215c
  438d71:	mov    rcx,QWORD PTR [rsp+0x160]
  438d79:	call   0x40215c
  438d7e:	mov    rcx,QWORD PTR [rsp+0x150]
  438d86:	call   0x40215c
  438d8b:	nop
  438d8c:	lea    rcx,[rsp+0x390]
  438d94:	call   0x410fc0
  438d99:	nop
  438d9a:	mov    rcx,QWORD PTR [rsp+0x98]
  438da2:	call   0x40215c
  438da7:	nop
  438da8:	jmp    0x4398f5
  438dad:	mov    eax,0x1
  438db2:	cmp    DWORD PTR [r15+0x8],eax
  438db6:	jne    0x438f1e
  438dbc:	lea    rcx,[rsp+0x240]
  438dc4:	call   0x407fc0
  438dc9:	lea    rcx,[rsp+0x268]
  438dd1:	call   0x403150
  438dd6:	nop
  438dd7:	mov    rax,QWORD PTR [r15]
  438dda:	mov    rdx,QWORD PTR [rax]
  438ddd:	lea    rcx,[rsp+0xe8]
  438de5:	call   0x403208
  438dea:	nop
  438deb:	mov    edx,DWORD PTR [rsp+0xf0]
  438df2:	cmp    DWORD PTR [rsp+0xf4],edx
  438df9:	jne    0x438e0f
  438dfb:	lea    rcx,[rsp+0xe8]
  438e03:	call   0x402f2c
  438e08:	mov    edx,DWORD PTR [rsp+0xf0]
  438e0f:	mov    rcx,QWORD PTR [rsp+0xe8]
  438e17:	mov    eax,edx
  438e19:	mov    WORD PTR [rcx+rax*2],0x2e
  438e1f:	mov    r15d,0x1
  438e25:	add    edx,r15d
  438e28:	mov    WORD PTR [rcx+rdx*2],0x0
  438e2e:	mov    DWORD PTR [rsp+0xf0],edx
  438e35:	mov    rdx,QWORD PTR [rsp+0xe8]
  438e3d:	lea    rcx,[rsp+0x240]
  438e45:	call   0x408134
  438e4a:	test   al,al
  438e4c:	je     0x438efc
  438e52:	mov    ecx,DWORD PTR [rsp+0x260]
  438e59:	mov    eax,ecx
  438e5b:	shr    eax,0x4
  438e5e:	test   r15b,al
  438e61:	je     0x438efc
  438e67:	mov    rax,QWORD PTR [rsp+0x240]
  438e6f:	mov    QWORD PTR [rsp+0x130],rax
  438e77:	mov    rax,QWORD PTR [rsp+0x248]
  438e7f:	mov    QWORD PTR [rsp+0x138],rax
  438e87:	mov    rax,QWORD PTR [rsp+0x250]
  438e8f:	mov    QWORD PTR [rsp+0x140],rax
  438e97:	mov    rax,QWORD PTR [rsp+0x258]
  438e9f:	mov    QWORD PTR [rsp+0x148],rax
  438ea7:	mov    DWORD PTR [rsp+0x180],ecx
  438eae:	mov    DWORD PTR [rsp+0xb8],r13d
  438eb6:	cmp    BYTE PTR [rdi+0x138],0x0
  438ebd:	je     0x438ee4
  438ebf:	lea    r8,[rsp+0xb8]
  438ec7:	lea    rdx,[rsp+0xe8]
  438ecf:	lea    rcx,[rsp+0x390]
  438ed7:	call   0x41f740
  438edc:	mov    r13d,DWORD PTR [rsp+0xb8]
  438ee4:	mov    DWORD PTR [rsp+0x18c],r13d
  438eec:	lea    rax,[rsp+0x130]
  438ef4:	mov    QWORD PTR [rsp+0xb8],rax
  438efc:	mov    rcx,QWORD PTR [rsp+0xe8]
  438f04:	call   0x40215c
  438f09:	nop
  438f0a:	mov    rcx,QWORD PTR [rsp+0x268]
  438f12:	call   0x40215c
  438f17:	mov    r12b,BYTE PTR [rsp+0x70]
  438f1c:	jmp    0x438f36
  438f1e:	mov    r12b,BYTE PTR [rsp+0x70]
  438f23:	mov    r15,rax
  438f26:	jmp    0x438f36
  438f28:	mov    r15d,0x1
  438f2e:	jmp    0x438f36
  438f30:	mov    r15d,0x1
  438f36:	lea    rcx,[rsp+0x108]
  438f3e:	call   0x403150
  438f43:	nop
  438f44:	xor    r14b,r14b
  438f47:	mov    BYTE PTR [rsp+0xd0],r14b
  438f4f:	lea    rcx,[rsp+0xd8]
  438f57:	call   0x403150
  438f5c:	nop
  438f5d:	cmp    BYTE PTR [rdi+0xf9],r14b
  438f64:	je     0x438fa8
  438f66:	cmp    BYTE PTR [rdi+0xfa],r14b
  438f6d:	je     0x438fa8
  438f6f:	mov    rdx,QWORD PTR [rip+0x2f742]        # 0x4686b8
  438f76:	lea    rcx,[rsp+0xd0]
  438f7e:	call   0x407ad4
  438f83:	lea    rdx,[rsp+0xd8]
  438f8b:	lea    rcx,[rsp+0x108]
  438f93:	call   0x4032f8
  438f98:	lea    rcx,[rsp+0x108]
  438fa0:	call   0x409d6c
  438fa5:	mov    r14b,r15b
  438fa8:	mov    QWORD PTR [rsp+0xf8],0x0
  438fb4:	mov    DWORD PTR [rsp+0x100],0x0
  438fbf:	mov    DWORD PTR [rsp+0x104],0x0
  438fca:	xor    r15b,r15b
  438fcd:	mov    BYTE PTR [rsp+0x71],r15b
  438fd2:	cmp    BYTE PTR [rdi+0xf8],r15b
  438fd9:	jne    0x439056
  438fdb:	cmp    BYTE PTR [rdi+0x48],r15b
  438fdf:	je     0x439056
  438fe1:	mov    rax,QWORD PTR [rdi+0x38]
  438fe5:	mov    rbx,QWORD PTR [rax]
  438fe8:	lea    rdx,[rdi+0x50]
  438fec:	lea    rcx,[rbx+0x10]
  438ff0:	call   0x434c40
  438ff5:	test   r12b,r12b
  438ff8:	jne    0x439003
  438ffa:	cmp    DWORD PTR [rdi+0x118],0x0
  439001:	je     0x439056
  439003:	test   r14b,r14b
  439006:	jne    0x439056
  439008:	cmp    DWORD PTR [rdi+0x160],0x0
  43900f:	jne    0x439056
  439011:	mov    eax,0x1
  439016:	mov    r15b,al
  439019:	mov    BYTE PTR [rsp+0x71],al
  43901d:	mov    BYTE PTR [rbx+0x60],al
  439020:	cmp    DWORD PTR [rdi+0x118],0x0
  439027:	je     0x43903e
  439029:	lea    r12,[rbx+0x68]
  43902d:	lea    rdx,[rdi+0x110]
  439034:	mov    rcx,r12
  439037:	call   0x4032f8
  43903c:	jmp    0x43904e
  43903e:	lea    r12,[rbx+0x68]
  439042:	lea    rdx,[rbx+0x20]
  439046:	mov    rcx,r12
  439049:	call   0x4032f8
  43904e:	mov    rcx,r12
  439051:	call   0x409d6c
  439056:	xor    ebx,ebx
  439058:	cmp    DWORD PTR [rdi+0x40],ebx
  43905b:	jbe    0x4391d2
  439061:	xor    r12d,r12d
  439064:	mov    rax,QWORD PTR [rdi+0x38]
  439068:	mov    r13,QWORD PTR [r12+rax*1]
  43906c:	test   r14b,r14b
  43906f:	je     0x439082
  439071:	lea    rcx,[r13+0x20]
  439075:	lea    rdx,[rsp+0x108]
  43907d:	call   0x4032f8
  439082:	cmp    BYTE PTR [rdi+0xf8],0x0
  439089:	jne    0x4390c4
  43908b:	test   ebx,ebx
  43908d:	jne    0x439094
  43908f:	test   r15b,r15b
  439092:	jne    0x4390c4
  439094:	lea    rdx,[rsp+0x118]
  43909c:	lea    rcx,[r13+0x10]
  4390a0:	call   0x434818
  4390a5:	nop
  4390a6:	mov    rcx,QWORD PTR [rsp+0x118]
  4390ae:	call   0x408a3c
  4390b3:	test   al,al
  4390b5:	jne    0x4390d4
  4390b7:	mov    rcx,QWORD PTR [rsp+0x118]
  4390bf:	call   0x40215c
  4390c4:	inc    ebx
  4390c6:	add    r12,0x8
  4390ca:	cmp    ebx,DWORD PTR [rdi+0x40]
  4390cd:	jb     0x439064
  4390cf:	jmp    0x4391d2
  4390d4:	mov    rbx,QWORD PTR [rsp+0x558]
  4390dc:	mov    DWORD PTR [rbx],0x50
  4390e2:	lea    rcx,[rbx+0x8]
  4390e6:	lea    rdx,[rip+0x186fb]        # 0x4517e8
  4390ed:	call   0x402be4
  4390f2:	mov    ecx,0x10
  4390f7:	call   0x402130
  4390fc:	mov    QWORD PTR [rsp+0x550],rax
  439104:	test   rax,rax
  439107:	je     0x43911b
  439109:	lea    rdx,[rsp+0x118]
  439111:	mov    rcx,rax
  439114:	call   0x403208
  439119:	jmp    0x43911d
  43911b:	xor    eax,eax
  43911d:	lea    rcx,[rbx+0x18]
  439121:	mov    rdx,rax
  439124:	call   0x4010c8
  439129:	mov    ebx,DWORD PTR [rbx]
  43912b:	test   ebx,ebx
  43912d:	jne    0x439136
  43912f:	mov    ebx,0x80004005
  439134:	jmp    0x439143
  439136:	test   ebx,ebx
  439138:	jle    0x439143
  43913a:	movzx  ebx,bx
  43913d:	or     ebx,0x80070000
  439143:	mov    rcx,QWORD PTR [rsp+0x118]
  43914b:	call   0x40215c
  439150:	nop
  439151:	lea    rcx,[rsp+0xf8]
  439159:	call   0x4351e0
  43915e:	nop
  43915f:	lea    rcx,[rsp+0xd0]
  439167:	call   0x407aa4
  43916c:	nop
  43916d:	mov    rcx,QWORD PTR [rsp+0xd8]
  439175:	call   0x40215c
  43917a:	nop
  43917b:	mov    rcx,QWORD PTR [rsp+0x108]
  439183:	call   0x40215c
  439188:	nop
  439189:	mov    rcx,QWORD PTR [rsp+0x170]
  439191:	call   0x40215c
  439196:	mov    rcx,QWORD PTR [rsp+0x160]
  43919e:	call   0x40215c
  4391a3:	mov    rcx,QWORD PTR [rsp+0x150]
  4391ab:	call   0x40215c
  4391b0:	nop
  4391b1:	lea    rcx,[rsp+0x390]
  4391b9:	call   0x410fc0
  4391be:	nop
  4391bf:	mov    rcx,QWORD PTR [rsp+0x98]
  4391c7:	call   0x40215c
  4391cc:	nop
  4391cd:	jmp    0x4398f5
  4391d2:	mov    QWORD PTR [rsp+0x78],0x0
  4391db:	mov    DWORD PTR [rsp+0x80],0x0
  4391e6:	mov    DWORD PTR [rsp+0x84],0x0
  4391f1:	mov    r14b,BYTE PTR [rsp+0x70]
  4391f6:	test   r14b,r14b
  4391f9:	je     0x4392f8
  4391ff:	mov    ecx,DWORD PTR [rsp+0x318]
  439206:	dec    ecx
  439208:	mov    rax,QWORD PTR [rsp+0x310]
  439210:	lea    r8,[rsp+0x78]
  439215:	mov    rdx,QWORD PTR [rax+rcx*8]
  439219:	mov    rcx,QWORD PTR [rsp+0x548]
  439221:	call   0x435cf0
  439226:	mov    ebx,eax
  439228:	test   eax,eax
  43922a:	je     0x4392f8
  439230:	movsxd rdi,DWORD PTR [rsp+0x80]
  439238:	mov    r12,rdi
  43923b:	test   edi,edi
  43923d:	je     0x43926c
  43923f:	shl    r12,0x3
  439243:	add    edi,esi
  439245:	sub    r12,0x8
  439249:	mov    rax,QWORD PTR [rsp+0x78]
  43924e:	mov    r13,QWORD PTR [r12+rax*1]
  439252:	test   r13,r13
  439255:	je     0x439268
  439257:	mov    rcx,QWORD PTR [r13+0x10]
  43925b:	call   0x40215c
  439260:	mov    rcx,r13
  439263:	call   0x40215c
  439268:	test   edi,edi
  43926a:	jne    0x439243
  43926c:	mov    rcx,QWORD PTR [rsp+0x78]
  439271:	call   0x40215c
  439276:	nop
  439277:	lea    rcx,[rsp+0xf8]
  43927f:	call   0x4351e0
  439284:	nop
  439285:	lea    rcx,[rsp+0xd0]
  43928d:	call   0x407aa4
  439292:	nop
  439293:	mov    rcx,QWORD PTR [rsp+0xd8]
  43929b:	call   0x40215c
  4392a0:	nop
  4392a1:	mov    rcx,QWORD PTR [rsp+0x108]
  4392a9:	call   0x40215c
  4392ae:	nop
  4392af:	mov    rcx,QWORD PTR [rsp+0x170]
  4392b7:	call   0x40215c
  4392bc:	mov    rcx,QWORD PTR [rsp+0x160]
  4392c4:	call   0x40215c
  4392c9:	mov    rcx,QWORD PTR [rsp+0x150]
  4392d1:	call   0x40215c
  4392d6:	nop
  4392d7:	lea    rcx,[rsp+0x390]
  4392df:	call   0x410fc0
  4392e4:	nop
  4392e5:	mov    rcx,QWORD PTR [rsp+0x98]
  4392ed:	call   0x40215c
  4392f2:	nop
  4392f3:	jmp    0x4398f5
  4392f8:	xor    r12d,r12d
  4392fb:	mov    QWORD PTR [rsp+0x1c8],r12
  439303:	mov    QWORD PTR [rsp+0x1d0],r12
  43930b:	cmp    BYTE PTR [rdi+0x140],r12b
  439312:	je     0x439359
  439314:	mov    r13d,DWORD PTR [rsp+0x3c8]
  43931c:	mov    rbx,r13
  43931f:	test   r13d,r13d
  439322:	je     0x439347
  439324:	mov    QWORD PTR [rsp+0x1d0],r12
  43932c:	mov    rcx,r13
  43932f:	call   0x402130
  439334:	mov    r12,rax
  439337:	mov    QWORD PTR [rsp+0x1c8],rax
  43933f:	mov    QWORD PTR [rsp+0x1d0],r13
  439347:	test   r13d,r13d
  43934a:	je     0x439359
  43934c:	mov    r8,rbx
  43934f:	xor    edx,edx
  439351:	mov    rcx,r12
  439354:	call   0x44b780
  439359:	xor    r15d,r15d
  43935c:	cmp    DWORD PTR [rdi+0x40],r15d
  439360:	jbe    0x439801
  439366:	xor    edx,edx
  439368:	mov    QWORD PTR [rsp+0x1a0],rdx
  439370:	mov    r13,QWORD PTR [rsp+0x558]
  439378:	test   r14b,r14b
  43937b:	je     0x4393a1
  43937d:	mov    ecx,DWORD PTR [rsp+0x318]
  439384:	dec    ecx
  439386:	mov    rax,QWORD PTR [rsp+0x310]
  43938e:	mov    r14,QWORD PTR [rax+rcx*8]
  439392:	mov    QWORD PTR [rsp+0x230],r14
  43939a:	mov    r14b,BYTE PTR [rsp+0x70]
  43939f:	jmp    0x4393ad
  4393a1:	mov    QWORD PTR [rsp+0x230],0x0
  4393ad:	mov    rax,QWORD PTR [rdi+0x38]
  4393b1:	mov    rbx,QWORD PTR [rdx+rax*1]
  4393b5:	mov    QWORD PTR [rsp+0xe8],rbx
  4393bd:	lea    rcx,[rsp+0xc0]
  4393c5:	call   0x403150
  4393ca:	nop
  4393cb:	cmp    BYTE PTR [rdi+0xf8],0x0
  4393d2:	je     0x4393ea
  4393d4:	lea    rdx,[rip+0x18405]        # 0x4517e0
  4393db:	lea    rcx,[rsp+0xc0]
  4393e3:	call   0x4034e8
  4393e8:	jmp    0x439432
  4393ea:	lea    rcx,[rbx+0x10]
  4393ee:	lea    rdx,[rsp+0x1d8]
  4393f6:	call   0x434818
  4393fb:	nop
  4393fc:	mov    rdx,rax
  4393ff:	lea    rcx,[rsp+0xc0]
  439407:	call   0x4032f8
  43940c:	nop
  43940d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  439415:	call   0x40215c
  43941a:	test   r15d,r15d
  43941d:	jne    0x43942f
  43941f:	cmp    BYTE PTR [rdi+0x48],r15b
  439423:	je     0x43942f
  439425:	test   r14b,r14b
  439428:	je     0x43942f
  43942a:	mov    r14b,0x1
  43942d:	jmp    0x439432
  43942f:	xor    r14b,r14b
  439432:	mov    rcx,QWORD PTR [rsp+0x568]
  43943a:	mov    rax,QWORD PTR [rcx]
  43943d:	mov    r8b,r14b
  439440:	mov    rdx,QWORD PTR [rsp+0xc0]
  439448:	call   QWORD PTR [rax+0x98]
  43944e:	mov    ebx,eax
  439450:	test   eax,eax
  439452:	jne    0x439564
  439458:	mov    QWORD PTR [rsp+0x1b0],0x0
  439464:	mov    al,BYTE PTR [rdi+0x140]
  43946a:	neg    al
  43946c:	sbb    rcx,rcx
  43946f:	and    rcx,r12
  439472:	mov    r9,QWORD PTR [rsp+0xe8]
  43947a:	lea    rax,[r9+0x10]
  43947e:	add    r9,0x88
  439485:	lea    rdx,[rsp+0x1b0]
  43948d:	mov    QWORD PTR [rsp+0x68],rdx
  439492:	mov    rdx,QWORD PTR [rsp+0x568]
  43949a:	mov    QWORD PTR [rsp+0x60],rdx
  43949f:	mov    QWORD PTR [rsp+0x58],r13
  4394a4:	lea    rdx,[rsp+0xf8]
  4394ac:	mov    QWORD PTR [rsp+0x50],rdx
  4394b1:	mov    rdx,QWORD PTR [rsp+0xb8]
  4394b9:	mov    QWORD PTR [rsp+0x48],rdx
  4394be:	lea    rdx,[rsp+0x390]
  4394c6:	mov    QWORD PTR [rsp+0x40],rdx
  4394cb:	mov    QWORD PTR [rsp+0x38],rcx
  4394d0:	lea    rcx,[rsp+0x78]
  4394d5:	mov    QWORD PTR [rsp+0x30],rcx
  4394da:	mov    QWORD PTR [rsp+0x28],rax
  4394df:	mov    rax,QWORD PTR [rsp+0x230]
  4394e7:	mov    QWORD PTR [rsp+0x20],rax
  4394ec:	mov    r8,QWORD PTR [rsp+0x530]
  4394f4:	mov    dl,r14b
  4394f7:	mov    rcx,rdi
  4394fa:	call   0x4360b8
  4394ff:	mov    ebx,eax
  439501:	test   eax,eax
  439503:	jne    0x439643
  439509:	mov    rcx,QWORD PTR [rsp+0x568]
  439511:	mov    rax,QWORD PTR [rcx]
  439514:	lea    rdx,[rsp+0x1b0]
  43951c:	call   QWORD PTR [rax+0xa0]
  439522:	mov    ebx,eax
  439524:	test   eax,eax
  439526:	jne    0x439722
  43952c:	mov    rcx,QWORD PTR [rsp+0xc0]
  439534:	call   0x40215c
  439539:	inc    r15d
  43953c:	mov    rdx,QWORD PTR [rsp+0x1a0]
  439544:	add    rdx,0x8
  439548:	mov    QWORD PTR [rsp+0x1a0],rdx
  439550:	cmp    r15d,DWORD PTR [rdi+0x40]
  439554:	mov    r14b,BYTE PTR [rsp+0x70]
  439559:	jb     0x439378
  43955f:	jmp    0x439809
  439564:	mov    rcx,QWORD PTR [rsp+0xc0]
  43956c:	call   0x40215c
  439571:	nop
  439572:	mov    rcx,r12
  439575:	call   0x40215c
  43957a:	nop
  43957b:	movsxd rdi,DWORD PTR [rsp+0x80]
  439583:	mov    r12,rdi
  439586:	test   edi,edi
  439588:	je     0x4395b7
  43958a:	shl    r12,0x3
  43958e:	add    edi,esi
  439590:	sub    r12,0x8
  439594:	mov    rax,QWORD PTR [rsp+0x78]
  439599:	mov    r13,QWORD PTR [r12+rax*1]
  43959d:	test   r13,r13
  4395a0:	je     0x4395b3
  4395a2:	mov    rcx,QWORD PTR [r13+0x10]
  4395a6:	call   0x40215c
  4395ab:	mov    rcx,r13
  4395ae:	call   0x40215c
  4395b3:	test   edi,edi
  4395b5:	jne    0x43958e
  4395b7:	mov    rcx,QWORD PTR [rsp+0x78]
  4395bc:	call   0x40215c
  4395c1:	nop
  4395c2:	lea    rcx,[rsp+0xf8]
  4395ca:	call   0x4351e0
  4395cf:	nop
  4395d0:	lea    rcx,[rsp+0xd0]
  4395d8:	call   0x407aa4
  4395dd:	nop
  4395de:	mov    rcx,QWORD PTR [rsp+0xd8]
  4395e6:	call   0x40215c
  4395eb:	nop
  4395ec:	mov    rcx,QWORD PTR [rsp+0x108]
  4395f4:	call   0x40215c
  4395f9:	nop
  4395fa:	mov    rcx,QWORD PTR [rsp+0x170]
  439602:	call   0x40215c
  439607:	mov    rcx,QWORD PTR [rsp+0x160]
  43960f:	call   0x40215c
  439614:	mov    rcx,QWORD PTR [rsp+0x150]
  43961c:	call   0x40215c
  439621:	nop
  439622:	lea    rcx,[rsp+0x390]
  43962a:	call   0x410fc0
  43962f:	nop
  439630:	mov    rcx,QWORD PTR [rsp+0x98]
  439638:	call   0x40215c
  43963d:	nop
  43963e:	jmp    0x4398f5
  439643:	mov    rcx,QWORD PTR [rsp+0xc0]
  43964b:	call   0x40215c
  439650:	nop
  439651:	mov    rcx,r12
  439654:	call   0x40215c
  439659:	nop
  43965a:	movsxd rdi,DWORD PTR [rsp+0x80]
  439662:	mov    r12,rdi
  439665:	test   edi,edi
  439667:	je     0x439696
  439669:	shl    r12,0x3
  43966d:	add    edi,esi
  43966f:	sub    r12,0x8
  439673:	mov    rax,QWORD PTR [rsp+0x78]
  439678:	mov    r13,QWORD PTR [r12+rax*1]
  43967c:	test   r13,r13
  43967f:	je     0x439692
  439681:	mov    rcx,QWORD PTR [r13+0x10]
  439685:	call   0x40215c
  43968a:	mov    rcx,r13
  43968d:	call   0x40215c
  439692:	test   edi,edi
  439694:	jne    0x43966d
  439696:	mov    rcx,QWORD PTR [rsp+0x78]
  43969b:	call   0x40215c
  4396a0:	nop
  4396a1:	lea    rcx,[rsp+0xf8]
  4396a9:	call   0x4351e0
  4396ae:	nop
  4396af:	lea    rcx,[rsp+0xd0]
  4396b7:	call   0x407aa4
  4396bc:	nop
  4396bd:	mov    rcx,QWORD PTR [rsp+0xd8]
  4396c5:	call   0x40215c
  4396ca:	nop
  4396cb:	mov    rcx,QWORD PTR [rsp+0x108]
  4396d3:	call   0x40215c
  4396d8:	nop
  4396d9:	mov    rcx,QWORD PTR [rsp+0x170]
  4396e1:	call   0x40215c
  4396e6:	mov    rcx,QWORD PTR [rsp+0x160]
  4396ee:	call   0x40215c
  4396f3:	mov    rcx,QWORD PTR [rsp+0x150]
  4396fb:	call   0x40215c
  439700:	nop
  439701:	lea    rcx,[rsp+0x390]
  439709:	call   0x410fc0
  43970e:	nop
  43970f:	mov    rcx,QWORD PTR [rsp+0x98]
  439717:	call   0x40215c
  43971c:	nop
  43971d:	jmp    0x4398f5
  439722:	mov    rcx,QWORD PTR [rsp+0xc0]
  43972a:	call   0x40215c
  43972f:	nop
  439730:	mov    rcx,r12
  439733:	call   0x40215c
  439738:	nop
  439739:	movsxd rdi,DWORD PTR [rsp+0x80]
  439741:	mov    r12,rdi
  439744:	test   edi,edi
  439746:	je     0x439775
  439748:	shl    r12,0x3
  43974c:	add    edi,esi
  43974e:	sub    r12,0x8
  439752:	mov    rax,QWORD PTR [rsp+0x78]
  439757:	mov    r13,QWORD PTR [r12+rax*1]
  43975b:	test   r13,r13
  43975e:	je     0x439771
  439760:	mov    rcx,QWORD PTR [r13+0x10]
  439764:	call   0x40215c
  439769:	mov    rcx,r13
  43976c:	call   0x40215c
  439771:	test   edi,edi
  439773:	jne    0x43974c
  439775:	mov    rcx,QWORD PTR [rsp+0x78]
  43977a:	call   0x40215c
  43977f:	nop
  439780:	lea    rcx,[rsp+0xf8]
  439788:	call   0x4351e0
  43978d:	nop
  43978e:	lea    rcx,[rsp+0xd0]
  439796:	call   0x407aa4
  43979b:	nop
  43979c:	mov    rcx,QWORD PTR [rsp+0xd8]
  4397a4:	call   0x40215c
  4397a9:	nop
  4397aa:	mov    rcx,QWORD PTR [rsp+0x108]
  4397b2:	call   0x40215c
  4397b7:	nop
  4397b8:	mov    rcx,QWORD PTR [rsp+0x170]
  4397c0:	call   0x40215c
  4397c5:	mov    rcx,QWORD PTR [rsp+0x160]
  4397cd:	call   0x40215c
  4397d2:	mov    rcx,QWORD PTR [rsp+0x150]
  4397da:	call   0x40215c
  4397df:	nop
  4397e0:	lea    rcx,[rsp+0x390]
  4397e8:	call   0x410fc0
  4397ed:	nop
  4397ee:	mov    rcx,QWORD PTR [rsp+0x98]
  4397f6:	call   0x40215c
  4397fb:	nop
  4397fc:	jmp    0x4398f5
  439801:	mov    r13,QWORD PTR [rsp+0x558]
  439809:	test   r14b,r14b
  43980c:	je     0x439916
  439812:	lea    rcx,[rsp+0x310]
  43981a:	call   0x42cba8
  43981f:	mov    ebx,eax
  439821:	test   eax,eax
  439823:	je     0x439909
  439829:	mov    rcx,r12
  43982c:	call   0x40215c
  439831:	nop
  439832:	movsxd rdi,DWORD PTR [rsp+0x80]
  43983a:	mov    r12,rdi
  43983d:	test   edi,edi
  43983f:	je     0x43986e
  439841:	shl    r12,0x3
  439845:	add    edi,esi
  439847:	sub    r12,0x8
  43984b:	mov    rax,QWORD PTR [rsp+0x78]
  439850:	mov    r13,QWORD PTR [r12+rax*1]
  439854:	test   r13,r13
  439857:	je     0x43986a
  439859:	mov    rcx,QWORD PTR [r13+0x10]
  43985d:	call   0x40215c
  439862:	mov    rcx,r13
  439865:	call   0x40215c
  43986a:	test   edi,edi
  43986c:	jne    0x439845
  43986e:	mov    rcx,QWORD PTR [rsp+0x78]
  439873:	call   0x40215c
  439878:	nop
  439879:	lea    rcx,[rsp+0xf8]
  439881:	call   0x4351e0
  439886:	nop
  439887:	lea    rcx,[rsp+0xd0]
  43988f:	call   0x407aa4
  439894:	nop
  439895:	mov    rcx,QWORD PTR [rsp+0xd8]
  43989d:	call   0x40215c
  4398a2:	nop
  4398a3:	mov    rcx,QWORD PTR [rsp+0x108]
  4398ab:	call   0x40215c
  4398b0:	nop
  4398b1:	mov    rcx,QWORD PTR [rsp+0x170]
  4398b9:	call   0x40215c
  4398be:	mov    rcx,QWORD PTR [rsp+0x160]
  4398c6:	call   0x40215c
  4398cb:	mov    rcx,QWORD PTR [rsp+0x150]
  4398d3:	call   0x40215c
  4398d8:	nop
  4398d9:	lea    rcx,[rsp+0x390]
  4398e1:	call   0x410fc0
  4398e6:	nop
  4398e7:	mov    rcx,QWORD PTR [rsp+0x98]
  4398ef:	call   0x40215c
  4398f4:	nop
  4398f5:	lea    rcx,[rsp+0x310]
  4398fd:	call   0x422f10
  439902:	mov    eax,ebx
  439904:	jmp    0x43a946
  439909:	lea    rcx,[rsp+0x310]
  439911:	call   0x432468
  439916:	movsxd rbx,DWORD PTR [rsp+0x100]
  43991e:	mov    r15,rbx
  439921:	test   ebx,ebx
  439923:	je     0x439959
  439925:	shl    r15,0x3
  439929:	add    ebx,esi
  43992b:	sub    r15,0x8
  43992f:	mov    rax,QWORD PTR [rsp+0xf8]
  439937:	mov    r14,QWORD PTR [r15+rax*1]
  43993b:	test   r14,r14
  43993e:	je     0x439950
  439940:	mov    rcx,QWORD PTR [r14]
  439943:	call   0x40215c
  439948:	mov    rcx,r14
  43994b:	call   0x40215c
  439950:	test   ebx,ebx
  439952:	jne    0x439929
  439954:	mov    r14b,BYTE PTR [rsp+0x70]
  439959:	xor    r15d,r15d
  43995c:	mov    DWORD PTR [rsp+0x100],r15d
  439964:	cmp    BYTE PTR [rsp+0x71],r15b
  439969:	je     0x439c3a
  43996f:	mov    rax,QWORD PTR [rdi+0x38]
  439973:	mov    rcx,QWORD PTR [rax]
  439976:	add    rcx,0x10
  43997a:	lea    rdx,[rsp+0xc0]
  439982:	call   0x434968
  439987:	nop
  439988:	cmp    r14b,r15b
  43998b:	je     0x439ab1
  439991:	mov    rcx,QWORD PTR [rsp+0x98]
  439999:	call   0x406fec
  43999e:	cmp    al,r15b
  4399a1:	jne    0x439ab1
  4399a7:	lea    r8,[rsp+0x98]
  4399af:	lea    rdx,[rip+0x17e12]        # 0x4517c8
  4399b6:	mov    rcx,r13
  4399b9:	call   0x43579c
  4399be:	mov    r13d,eax
  4399c1:	mov    rcx,QWORD PTR [rsp+0xc0]
  4399c9:	call   0x40215c
  4399ce:	nop
  4399cf:	mov    rcx,r12
  4399d2:	call   0x40215c
  4399d7:	nop
  4399d8:	mov    ebx,DWORD PTR [rsp+0x80]
  4399df:	mov    DWORD PTR [rsp+0x1c4],ebx
  4399e6:	mov    rcx,QWORD PTR [rsp+0x78]
  4399eb:	cmp    ebx,r15d
  4399ee:	je     0x439a1a
  4399f0:	add    ebx,esi
  4399f2:	mov    DWORD PTR [rsp+0x1c4],ebx
  4399f9:	mov    rdi,QWORD PTR [rcx+rbx*8]
  4399fd:	cmp    rdi,r15
  439a00:	je     0x4399eb
  439a02:	mov    rcx,QWORD PTR [rdi+0x10]
  439a06:	call   0x40215c
  439a0b:	mov    rcx,rdi
  439a0e:	call   0x40215c
  439a13:	mov    rcx,QWORD PTR [rsp+0x78]
  439a18:	jmp    0x4399eb
  439a1a:	call   0x40215c
  439a1f:	nop
  439a20:	lea    rcx,[rsp+0xf8]
  439a28:	call   0x4351e0
  439a2d:	nop
  439a2e:	lea    rcx,[rsp+0xd0]
  439a36:	call   0x407aa4
  439a3b:	nop
  439a3c:	mov    rcx,QWORD PTR [rsp+0xd8]
  439a44:	call   0x40215c
  439a49:	nop
  439a4a:	mov    rcx,QWORD PTR [rsp+0x108]
  439a52:	call   0x40215c
  439a57:	nop
  439a58:	mov    rcx,QWORD PTR [rsp+0x170]
  439a60:	call   0x40215c
  439a65:	mov    rcx,QWORD PTR [rsp+0x160]
  439a6d:	call   0x40215c
  439a72:	mov    rcx,QWORD PTR [rsp+0x150]
  439a7a:	call   0x40215c
  439a7f:	nop
  439a80:	lea    rcx,[rsp+0x390]
  439a88:	call   0x410fc0
  439a8d:	nop
  439a8e:	mov    rcx,QWORD PTR [rsp+0x98]
  439a96:	call   0x40215c
  439a9b:	nop
  439a9c:	lea    rcx,[rsp+0x310]
  439aa4:	call   0x422f10
  439aa9:	mov    eax,r13d
  439aac:	jmp    0x43a946
  439ab1:	mov    rdx,QWORD PTR [rsp+0x98]
  439ab9:	mov    rcx,QWORD PTR [rsp+0xc0]
  439ac1:	call   0x406ca8
  439ac6:	cmp    al,r15b
  439ac9:	jne    0x439c2c
  439acf:	lea    r8,[rsp+0xc0]
  439ad7:	lea    rdx,[rip+0x17cd2]        # 0x4517b0
  439ade:	mov    rcx,r13
  439ae1:	call   0x43579c
  439ae6:	mov    ecx,0x10
  439aeb:	call   0x402130
  439af0:	mov    QWORD PTR [rsp+0x550],rax
  439af8:	cmp    rax,r15
  439afb:	je     0x439b0f
  439afd:	lea    rdx,[rsp+0x98]
  439b05:	mov    rcx,rax
  439b08:	call   0x403208
  439b0d:	jmp    0x439b12
  439b0f:	mov    rax,r15
  439b12:	lea    rcx,[r13+0x18]
  439b16:	mov    rdx,rax
  439b19:	call   0x4010c8
  439b1e:	mov    ebx,DWORD PTR [r13+0x0]
  439b22:	cmp    ebx,r15d
  439b25:	jne    0x439b2e
  439b27:	mov    ebx,0x80004005
  439b2c:	jmp    0x439b3c
  439b2e:	cmp    ebx,r15d
  439b31:	jle    0x439b3c
  439b33:	movzx  ebx,bx
  439b36:	or     ebx,0x80070000
  439b3c:	mov    rcx,QWORD PTR [rsp+0xc0]
  439b44:	call   0x40215c
  439b49:	nop
  439b4a:	mov    rcx,r12
  439b4d:	call   0x40215c
  439b52:	nop
  439b53:	mov    edi,DWORD PTR [rsp+0x80]
  439b5a:	mov    DWORD PTR [rsp+0x1c0],edi
  439b61:	mov    rcx,QWORD PTR [rsp+0x78]
  439b66:	cmp    edi,r15d
  439b69:	je     0x439b96
  439b6b:	add    edi,esi
  439b6d:	mov    DWORD PTR [rsp+0x1c0],edi
  439b74:	mov    r12,QWORD PTR [rcx+rdi*8]
  439b78:	cmp    r12,r15
  439b7b:	je     0x439b66
  439b7d:	mov    rcx,QWORD PTR [r12+0x10]
  439b82:	call   0x40215c
  439b87:	mov    rcx,r12
  439b8a:	call   0x40215c
  439b8f:	mov    rcx,QWORD PTR [rsp+0x78]
  439b94:	jmp    0x439b66
  439b96:	call   0x40215c
  439b9b:	nop
  439b9c:	lea    rcx,[rsp+0xf8]
  439ba4:	call   0x4351e0
  439ba9:	nop
  439baa:	lea    rcx,[rsp+0xd0]
  439bb2:	call   0x407aa4
  439bb7:	nop
  439bb8:	mov    rcx,QWORD PTR [rsp+0xd8]
  439bc0:	call   0x40215c
  439bc5:	nop
  439bc6:	mov    rcx,QWORD PTR [rsp+0x108]
  439bce:	call   0x40215c
  439bd3:	nop
  439bd4:	mov    rcx,QWORD PTR [rsp+0x170]
  439bdc:	call   0x40215c
  439be1:	mov    rcx,QWORD PTR [rsp+0x160]
  439be9:	call   0x40215c
  439bee:	mov    rcx,QWORD PTR [rsp+0x150]
  439bf6:	call   0x40215c
  439bfb:	nop
  439bfc:	lea    rcx,[rsp+0x390]
  439c04:	call   0x410fc0
  439c09:	nop
  439c0a:	mov    rcx,QWORD PTR [rsp+0x98]
  439c12:	call   0x40215c
  439c17:	nop
  439c18:	lea    rcx,[rsp+0x310]
  439c20:	call   0x422f10
  439c25:	mov    eax,ebx
  439c27:	jmp    0x43a946
  439c2c:	mov    rcx,QWORD PTR [rsp+0xc0]
  439c34:	call   0x40215c
  439c39:	nop
  439c3a:	cmp    BYTE PTR [rdi+0xf9],r15b
  439c41:	je     0x43a354
  439c47:	mov    QWORD PTR [rsp+0xb8],r15
  439c4f:	lea    rdx,[rip+0x17b42]        # 0x451798
  439c56:	lea    rcx,[rsp+0xb8]
  439c5e:	call   0x40677c
  439c63:	cmp    al,r15b
  439c66:	jne    0x439d85
  439c6c:	call   QWORD PTR [rip+0x1352e]        # 0x44d1a0
  439c72:	mov    DWORD PTR [r13+0x0],eax
  439c76:	lea    rcx,[r13+0x8]
  439c7a:	lea    rdx,[rip+0x17aff]        # 0x451780
  439c81:	call   0x402be4
  439c86:	mov    ebx,DWORD PTR [r13+0x0]
  439c8a:	cmp    ebx,r15d
  439c8d:	jne    0x439c96
  439c8f:	mov    ebx,0x80004005
  439c94:	jmp    0x439ca4
  439c96:	cmp    ebx,r15d
  439c99:	jle    0x439ca4
  439c9b:	movzx  ebx,bx
  439c9e:	or     ebx,0x80070000
  439ca4:	lea    rcx,[rsp+0xb8]
  439cac:	call   0x40670c
  439cb1:	nop
  439cb2:	mov    rcx,r12
  439cb5:	call   0x40215c
  439cba:	nop
  439cbb:	movsxd rdi,DWORD PTR [rsp+0x80]
  439cc3:	mov    r12,rdi
  439cc6:	cmp    edi,r15d
  439cc9:	je     0x439cf9
  439ccb:	shl    r12,0x3
  439ccf:	add    edi,esi
  439cd1:	sub    r12,0x8
  439cd5:	mov    rax,QWORD PTR [rsp+0x78]
  439cda:	mov    r13,QWORD PTR [r12+rax*1]
  439cde:	cmp    r13,r15
  439ce1:	je     0x439cf4
  439ce3:	mov    rcx,QWORD PTR [r13+0x10]
  439ce7:	call   0x40215c
  439cec:	mov    rcx,r13
  439cef:	call   0x40215c
  439cf4:	cmp    edi,r15d
  439cf7:	jne    0x439ccf
  439cf9:	mov    rcx,QWORD PTR [rsp+0x78]
  439cfe:	call   0x40215c
  439d03:	nop
  439d04:	lea    rcx,[rsp+0xf8]
  439d0c:	call   0x4351e0
  439d11:	nop
  439d12:	lea    rcx,[rsp+0xd0]
  439d1a:	call   0x407aa4
  439d1f:	nop
  439d20:	mov    rcx,QWORD PTR [rsp+0xd8]
  439d28:	call   0x40215c
  439d2d:	nop
  439d2e:	mov    rcx,QWORD PTR [rsp+0x108]
  439d36:	call   0x40215c
  439d3b:	nop
  439d3c:	mov    rcx,QWORD PTR [rsp+0x170]
  439d44:	call   0x40215c
  439d49:	mov    rcx,QWORD PTR [rsp+0x160]
  439d51:	call   0x40215c
  439d56:	mov    rcx,QWORD PTR [rsp+0x150]
  439d5e:	call   0x40215c
  439d63:	nop
  439d64:	lea    rcx,[rsp+0x390]
  439d6c:	call   0x410fc0
  439d71:	nop
  439d72:	mov    rcx,QWORD PTR [rsp+0x98]
  439d7a:	call   0x40215c
  439d7f:	nop
  439d80:	jmp    0x43a843
  439d85:	lea    rdx,[rip+0x179e4]        # 0x451770
  439d8c:	mov    rcx,QWORD PTR [rsp+0xb8]
  439d94:	call   QWORD PTR [rip+0x13476]        # 0x44d210
  439d9a:	mov    QWORD PTR [rsp+0xe8],rax
  439da2:	cmp    rax,r15
  439da5:	jne    0x439ec4
  439dab:	call   QWORD PTR [rip+0x133ef]        # 0x44d1a0
  439db1:	mov    DWORD PTR [r13+0x0],eax
  439db5:	lea    rcx,[r13+0x8]
  439db9:	lea    rdx,[rip+0x17988]        # 0x451748
  439dc0:	call   0x402be4
  439dc5:	mov    ebx,DWORD PTR [r13+0x0]
  439dc9:	cmp    ebx,r15d
  439dcc:	jne    0x439dd5
  439dce:	mov    ebx,0x80004005
  439dd3:	jmp    0x439de3
  439dd5:	cmp    ebx,r15d
  439dd8:	jle    0x439de3
  439dda:	movzx  ebx,bx
  439ddd:	or     ebx,0x80070000
  439de3:	lea    rcx,[rsp+0xb8]
  439deb:	call   0x40670c
  439df0:	nop
  439df1:	mov    rcx,r12
  439df4:	call   0x40215c
  439df9:	nop
  439dfa:	movsxd rdi,DWORD PTR [rsp+0x80]
  439e02:	mov    r12,rdi
  439e05:	cmp    edi,r15d
  439e08:	je     0x439e38
  439e0a:	shl    r12,0x3
  439e0e:	add    edi,esi
  439e10:	sub    r12,0x8
  439e14:	mov    rax,QWORD PTR [rsp+0x78]
  439e19:	mov    r13,QWORD PTR [r12+rax*1]
  439e1d:	cmp    r13,r15
  439e20:	je     0x439e33
  439e22:	mov    rcx,QWORD PTR [r13+0x10]
  439e26:	call   0x40215c
  439e2b:	mov    rcx,r13
  439e2e:	call   0x40215c
  439e33:	cmp    edi,r15d
  439e36:	jne    0x439e0e
  439e38:	mov    rcx,QWORD PTR [rsp+0x78]
  439e3d:	call   0x40215c
  439e42:	nop
  439e43:	lea    rcx,[rsp+0xf8]
  439e4b:	call   0x4351e0
  439e50:	nop
  439e51:	lea    rcx,[rsp+0xd0]
  439e59:	call   0x407aa4
  439e5e:	nop
  439e5f:	mov    rcx,QWORD PTR [rsp+0xd8]
  439e67:	call   0x40215c
  439e6c:	nop
  439e6d:	mov    rcx,QWORD PTR [rsp+0x108]
  439e75:	call   0x40215c
  439e7a:	nop
  439e7b:	mov    rcx,QWORD PTR [rsp+0x170]
  439e83:	call   0x40215c
  439e88:	mov    rcx,QWORD PTR [rsp+0x160]
  439e90:	call   0x40215c
  439e95:	mov    rcx,QWORD PTR [rsp+0x150]
  439e9d:	call   0x40215c
  439ea2:	nop
  439ea3:	lea    rcx,[rsp+0x390]
  439eab:	call   0x410fc0
  439eb0:	nop
  439eb1:	mov    rcx,QWORD PTR [rsp+0x98]
  439eb9:	call   0x40215c
  439ebe:	nop
  439ebf:	jmp    0x43a843
  439ec4:	mov    r14,r15
  439ec7:	mov    QWORD PTR [rsp+0xa8],r15
  439ecf:	mov    ebx,r15d
  439ed2:	mov    DWORD PTR [rsp+0xb0],r15d
  439eda:	mov    DWORD PTR [rsp+0xb4],r15d
  439ee2:	cmp    DWORD PTR [rdi+0x40],0x0
  439ee6:	jbe    0x43a10d
  439eec:	xor    ebx,ebx
  439eee:	mov    rax,QWORD PTR [rdi+0x38]
  439ef2:	mov    rcx,QWORD PTR [rbx+rax*1]
  439ef6:	add    rcx,0x10
  439efa:	lea    rdx,[rsp+0x1b0]
  439f02:	call   0x434818
  439f07:	nop
  439f08:	lea    rcx,[rsp+0x118]
  439f10:	call   0x403150
  439f15:	nop
  439f16:	lea    rdx,[rsp+0x118]
  439f1e:	mov    rcx,QWORD PTR [rsp+0x1b0]
  439f26:	call   0x4070b4
  439f2b:	test   al,al
  439f2d:	je     0x439fab
  439f2f:	mov    ecx,0x10
  439f34:	call   0x402130
  439f39:	mov    QWORD PTR [rsp+0x1a0],rax
  439f41:	test   rax,rax
  439f44:	je     0x439f58
  439f46:	lea    rdx,[rsp+0x118]
  439f4e:	mov    rcx,rax
  439f51:	call   0x403208
  439f56:	jmp    0x439f5a
  439f58:	xor    eax,eax
  439f5a:	mov    rdx,rax
  439f5d:	lea    rcx,[rsp+0xa8]
  439f65:	call   0x4010c8
  439f6a:	nop
  439f6b:	mov    rcx,QWORD PTR [rsp+0x118]
  439f73:	call   0x40215c
  439f78:	nop
  439f79:	mov    rcx,QWORD PTR [rsp+0x1b0]
  439f81:	call   0x40215c
  439f86:	inc    r15d
  439f89:	add    rbx,0x8
  439f8d:	cmp    r15d,DWORD PTR [rdi+0x40]
  439f91:	jb     0x439eee
  439f97:	mov    ebx,DWORD PTR [rsp+0xb0]
  439f9e:	mov    r14,QWORD PTR [rsp+0xa8]
  439fa6:	jmp    0x43a10d
  439fab:	lea    r8,[rsp+0x1b0]
  439fb3:	lea    rdx,[rip+0x17776]        # 0x451730
  439fba:	mov    rcx,r13
  439fbd:	call   0x43579c
  439fc2:	mov    ebx,eax
  439fc4:	mov    rcx,QWORD PTR [rsp+0x118]
  439fcc:	call   0x40215c
  439fd1:	nop
  439fd2:	mov    rcx,QWORD PTR [rsp+0x1b0]
  439fda:	call   0x40215c
  439fdf:	nop
  439fe0:	movsxd rdi,DWORD PTR [rsp+0xb0]
  439fe8:	test   edi,edi
  439fea:	je     0x43a01d
  439fec:	mov    r15,QWORD PTR [rsp+0xa8]
  439ff4:	lea    r13,[r15+rdi*8]
  439ff8:	add    edi,esi
  439ffa:	sub    r13,0x8
  439ffe:	mov    r14,QWORD PTR [r13+0x0]
  43a002:	test   r14,r14
  43a005:	je     0x43a017
  43a007:	mov    rcx,QWORD PTR [r14]
  43a00a:	call   0x40215c
  43a00f:	mov    rcx,r14
  43a012:	call   0x40215c
  43a017:	test   edi,edi
  43a019:	jne    0x439ff8
  43a01b:	jmp    0x43a025
  43a01d:	mov    r15,QWORD PTR [rsp+0xa8]
  43a025:	mov    rcx,r15
  43a028:	call   0x40215c
  43a02d:	nop
  43a02e:	lea    rcx,[rsp+0xb8]
  43a036:	call   0x40670c
  43a03b:	nop
  43a03c:	mov    rcx,r12
  43a03f:	call   0x40215c
  43a044:	nop
  43a045:	movsxd rdi,DWORD PTR [rsp+0x80]
  43a04d:	mov    r12,rdi
  43a050:	test   edi,edi
  43a052:	je     0x43a081
  43a054:	shl    r12,0x3
  43a058:	add    edi,esi
  43a05a:	sub    r12,0x8
  43a05e:	mov    rax,QWORD PTR [rsp+0x78]
  43a063:	mov    r13,QWORD PTR [r12+rax*1]
  43a067:	test   r13,r13
  43a06a:	je     0x43a07d
  43a06c:	mov    rcx,QWORD PTR [r13+0x10]
  43a070:	call   0x40215c
  43a075:	mov    rcx,r13
  43a078:	call   0x40215c
  43a07d:	test   edi,edi
  43a07f:	jne    0x43a058
  43a081:	mov    rcx,QWORD PTR [rsp+0x78]
  43a086:	call   0x40215c
  43a08b:	nop
  43a08c:	lea    rcx,[rsp+0xf8]
  43a094:	call   0x4351e0
  43a099:	nop
  43a09a:	lea    rcx,[rsp+0xd0]
  43a0a2:	call   0x407aa4
  43a0a7:	nop
  43a0a8:	mov    rcx,QWORD PTR [rsp+0xd8]
  43a0b0:	call   0x40215c
  43a0b5:	nop
  43a0b6:	mov    rcx,QWORD PTR [rsp+0x108]
  43a0be:	call   0x40215c
  43a0c3:	nop
  43a0c4:	mov    rcx,QWORD PTR [rsp+0x170]
  43a0cc:	call   0x40215c
  43a0d1:	mov    rcx,QWORD PTR [rsp+0x160]
  43a0d9:	call   0x40215c
  43a0de:	mov    rcx,QWORD PTR [rsp+0x150]
  43a0e6:	call   0x40215c
  43a0eb:	nop
  43a0ec:	lea    rcx,[rsp+0x390]
  43a0f4:	call   0x410fc0
  43a0f9:	nop
  43a0fa:	mov    rcx,QWORD PTR [rsp+0x98]
  43a102:	call   0x40215c
  43a107:	nop
  43a108:	jmp    0x43a843
  43a10d:	lea    rcx,[rsp+0x1d8]
  43a115:	call   0x403150
  43a11a:	nop
  43a11b:	mov    eax,0x1
  43a120:	mov    BYTE PTR [rsp+0x1e8],al
  43a127:	lea    rcx,[rsp+0x1d8]
  43a12f:	call   0x40a210
  43a134:	nop
  43a135:	xor    r15d,r15d
  43a138:	cmp    ebx,r15d
  43a13b:	jbe    0x43a2fd
  43a141:	lea    rax,[rdi+0x100]
  43a148:	mov    r13,r14
  43a14b:	mov    r15d,ebx
  43a14e:	mov    rdi,QWORD PTR [rsp+0xe8]
  43a156:	mov    r14,rax
  43a159:	mov    r12d,0x1
  43a15f:	mov    rdx,QWORD PTR [r13+0x0]
  43a163:	lea    rcx,[rsp+0x88]
  43a16b:	call   0x403208
  43a170:	nop
  43a171:	lea    rdx,[rsp+0x88]
  43a179:	lea    rcx,[rsp+0x230]
  43a181:	call   0x4044c0
  43a186:	nop
  43a187:	lea    rdx,[rsp+0x88]
  43a18f:	lea    rcx,[rsp+0x1a0]
  43a197:	call   0x434584
  43a19c:	nop
  43a19d:	lea    rdx,[rsp+0x230]
  43a1a5:	lea    rcx,[rsp+0xe8]
  43a1ad:	call   0x434584
  43a1b2:	nop
  43a1b3:	xor    edx,edx
  43a1b5:	lea    r8d,[rdx+0x28]
  43a1b9:	lea    rcx,[rsp+0x240]
  43a1c1:	call   0x44b780
  43a1c6:	mov    DWORD PTR [rsp+0x248],esi
  43a1cd:	mov    rax,QWORD PTR [rsp+0x1a0]
  43a1d5:	mov    QWORD PTR [rsp+0x250],rax
  43a1dd:	mov    rax,QWORD PTR [rsp+0xe8]
  43a1e5:	mov    QWORD PTR [rsp+0x258],rax
  43a1ed:	xor    edx,edx
  43a1ef:	lea    r8d,[rdx+0x60]
  43a1f3:	lea    rcx,[rsp+0x280]
  43a1fb:	call   0x44b780
  43a200:	mov    DWORD PTR [rsp+0x2d0],r12d
  43a208:	lea    rax,[rsp+0x240]
  43a210:	mov    QWORD PTR [rsp+0x2d8],rax
  43a218:	mov    rdx,r14
  43a21b:	lea    rcx,[rsp+0xc0]
  43a223:	call   0x434584
  43a228:	nop
  43a229:	cmp    DWORD PTR [rsp+0xc8],0x0
  43a231:	je     0x43a276
  43a233:	xor    edx,edx
  43a235:	lea    r8d,[rdx+0x28]
  43a239:	lea    rcx,[rsp+0x1f8]
  43a241:	call   0x44b780
  43a246:	mov    DWORD PTR [rsp+0x1fc],r12d
  43a24e:	mov    rax,QWORD PTR [rsp+0xc0]
  43a256:	mov    QWORD PTR [rsp+0x208],rax
  43a25e:	mov    DWORD PTR [rsp+0x2c0],r12d
  43a266:	lea    rax,[rsp+0x1f8]
  43a26e:	mov    QWORD PTR [rsp+0x2c8],rax
  43a276:	mov    DWORD PTR [rsp+0x20],0x0
  43a27e:	mov    r9d,0x8
  43a284:	lea    r8,[rsp+0x280]
  43a28c:	xor    edx,edx
  43a28e:	xor    ecx,ecx
  43a290:	call   rdi
  43a292:	nop
  43a293:	mov    rcx,QWORD PTR [rsp+0xc0]
  43a29b:	call   0x40215c
  43a2a0:	nop
  43a2a1:	mov    rcx,QWORD PTR [rsp+0xe8]
  43a2a9:	call   0x40215c
  43a2ae:	nop
  43a2af:	mov    rcx,QWORD PTR [rsp+0x1a0]
  43a2b7:	call   0x40215c
  43a2bc:	nop
  43a2bd:	mov    rcx,QWORD PTR [rsp+0x230]
  43a2c5:	call   0x40215c
  43a2ca:	nop
  43a2cb:	mov    rcx,QWORD PTR [rsp+0x88]
  43a2d3:	call   0x40215c
  43a2d8:	add    r13,0x8
  43a2dc:	sub    r15,r12
  43a2df:	jne    0x43a15f
  43a2e5:	mov    rdi,QWORD PTR [rsp+0x550]
  43a2ed:	mov    r12,QWORD PTR [rsp+0x1c8]
  43a2f5:	mov    r14,QWORD PTR [rsp+0xa8]
  43a2fd:	lea    rcx,[rsp+0x1d8]
  43a305:	call   0x4345f4
  43a30a:	nop
  43a30b:	movsxd rax,ebx
  43a30e:	cmp    ebx,r15d
  43a311:	je     0x43a33e
  43a313:	lea    r13,[r14+rax*8]
  43a317:	add    ebx,esi
  43a319:	sub    r13,0x8
  43a31d:	mov    r15,QWORD PTR [r13+0x0]
  43a321:	test   r15,r15
  43a324:	je     0x43a336
  43a326:	mov    rcx,QWORD PTR [r15]
  43a329:	call   0x40215c
  43a32e:	mov    rcx,r15
  43a331:	call   0x40215c
  43a336:	xor    r15d,r15d
  43a339:	cmp    ebx,r15d
  43a33c:	jne    0x43a317
  43a33e:	mov    rcx,r14
  43a341:	call   0x40215c
  43a346:	nop
  43a347:	lea    rcx,[rsp+0xb8]
  43a34f:	call   0x40670c
  43a354:	cmp    BYTE PTR [rdi+0x140],r15b
  43a35b:	je     0x43a868
  43a361:	mov    rdi,r15
  43a364:	mov    QWORD PTR [rsp+0xc0],r15
  43a36c:	mov    r13d,r15d
  43a36f:	mov    DWORD PTR [rsp+0xc8],r15d
  43a377:	mov    DWORD PTR [rsp+0xcc],r15d
  43a37f:	mov    QWORD PTR [rsp+0xe8],r15
  43a387:	mov    DWORD PTR [rsp+0xf0],r15d
  43a38f:	mov    DWORD PTR [rsp+0xf4],r15d
  43a397:	mov    r14d,r15d
  43a39a:	cmp    DWORD PTR [rsp+0x3c8],r15d
  43a3a2:	jbe    0x43a5b0
  43a3a8:	mov    rdi,r12
  43a3ab:	mov    r13,r15
  43a3ae:	mov    rax,QWORD PTR [rsp+0x3c0]
  43a3b6:	mov    rbx,QWORD PTR [r13+rax*1+0x0]
  43a3bb:	mov    r8d,r14d
  43a3be:	lea    rdx,[rsp+0xa8]
  43a3c6:	lea    rcx,[rsp+0x390]
  43a3ce:	call   0x41fd04
  43a3d3:	nop
  43a3d4:	mov    eax,DWORD PTR [rbx+0x50]
  43a3d7:	shr    eax,0x4
  43a3da:	mov    r8d,0x1
  43a3e0:	test   r8b,al
  43a3e3:	je     0x43a43f
  43a3e5:	mov    DWORD PTR [rsp+0x554],r14d
  43a3ed:	mov    edx,r15d
  43a3f0:	mov    rax,QWORD PTR [rsp+0xa8]
  43a3f8:	movzx  ecx,WORD PTR [rax]
  43a3fb:	add    rax,0x2
  43a3ff:	cmp    cx,r15w
  43a403:	je     0x43a421
  43a405:	cmp    cx,0x5c
  43a409:	je     0x43a411
  43a40b:	cmp    cx,0x2f
  43a40f:	jne    0x43a414
  43a411:	add    edx,r8d
  43a414:	mov    cx,WORD PTR [rax]
  43a417:	add    rax,0x2
  43a41b:	cmp    cx,r15w
  43a41f:	jne    0x43a405
  43a421:	mov    DWORD PTR [rsp+0x550],edx
  43a428:	mov    rdx,QWORD PTR [rsp+0x550]
  43a430:	lea    rcx,[rsp+0xc0]
  43a438:	call   0x434fb4
  43a43d:	jmp    0x43a47a
  43a43f:	cmp    BYTE PTR [rdi],r15b
  43a442:	jne    0x43a449
  43a444:	cmp    QWORD PTR [rbx],r15
  43a447:	jne    0x43a47a
  43a449:	mov    rcx,QWORD PTR [rsp+0x568]
  43a451:	mov    rax,QWORD PTR [rcx]
  43a454:	xor    r8d,r8d
  43a457:	lea    rdx,[rsp+0xa8]
  43a45f:	call   QWORD PTR [rax+0xa8]
  43a465:	mov    ebx,eax
  43a467:	cmp    eax,r15d
  43a46a:	jne    0x43a4b9
  43a46c:	mov    rcx,QWORD PTR [rsp+0xa8]
  43a474:	call   0x406fec
  43a479:	nop
  43a47a:	mov    rcx,QWORD PTR [rsp+0xa8]
  43a482:	call   0x40215c
  43a487:	mov    ebx,0x1
  43a48c:	add    r14d,ebx
  43a48f:	add    r13,0x8
  43a493:	add    rdi,rbx
  43a496:	cmp    r14d,DWORD PTR [rsp+0x3c8]
  43a49e:	jb     0x43a3ae
  43a4a4:	mov    r13d,DWORD PTR [rsp+0xc8]
  43a4ac:	mov    rdi,QWORD PTR [rsp+0xc0]
  43a4b4:	jmp    0x43a5b5
  43a4b9:	mov    rcx,QWORD PTR [rsp+0xa8]
  43a4c1:	call   0x40215c
  43a4c6:	nop
  43a4c7:	xor    ecx,ecx
  43a4c9:	call   0x40215c
  43a4ce:	nop
  43a4cf:	mov    rcx,QWORD PTR [rsp+0xc0]
  43a4d7:	call   0x40215c
  43a4dc:	nop
  43a4dd:	mov    rcx,r12
  43a4e0:	call   0x40215c
  43a4e5:	nop
  43a4e6:	movsxd rdi,DWORD PTR [rsp+0x80]
  43a4ee:	mov    r12,rdi
  43a4f1:	cmp    edi,r15d
  43a4f4:	je     0x43a524
  43a4f6:	shl    r12,0x3
  43a4fa:	add    edi,esi
  43a4fc:	sub    r12,0x8
  43a500:	mov    rax,QWORD PTR [rsp+0x78]
  43a505:	mov    r13,QWORD PTR [r12+rax*1]
  43a509:	cmp    r13,r15
  43a50c:	je     0x43a51f
  43a50e:	mov    rcx,QWORD PTR [r13+0x10]
  43a512:	call   0x40215c
  43a517:	mov    rcx,r13
  43a51a:	call   0x40215c
  43a51f:	cmp    edi,r15d
  43a522:	jne    0x43a4fa
  43a524:	mov    rcx,QWORD PTR [rsp+0x78]
  43a529:	call   0x40215c
  43a52e:	nop
  43a52f:	lea    rcx,[rsp+0xf8]
  43a537:	call   0x4351e0
  43a53c:	nop
  43a53d:	lea    rcx,[rsp+0xd0]
  43a545:	call   0x407aa4
  43a54a:	nop
  43a54b:	mov    rcx,QWORD PTR [rsp+0xd8]
  43a553:	call   0x40215c
  43a558:	nop
  43a559:	mov    rcx,QWORD PTR [rsp+0x108]
  43a561:	call   0x40215c
  43a566:	nop
  43a567:	mov    rcx,QWORD PTR [rsp+0x170]
  43a56f:	call   0x40215c
  43a574:	mov    rcx,QWORD PTR [rsp+0x160]
  43a57c:	call   0x40215c
  43a581:	mov    rcx,QWORD PTR [rsp+0x150]
  43a589:	call   0x40215c
  43a58e:	nop
  43a58f:	lea    rcx,[rsp+0x390]
  43a597:	call   0x410fc0
  43a59c:	nop
  43a59d:	mov    rcx,QWORD PTR [rsp+0x98]
  43a5a5:	call   0x40215c
  43a5aa:	nop
  43a5ab:	jmp    0x43a843
  43a5b0:	mov    ebx,0x1
  43a5b5:	xor    r8d,r8d
  43a5b8:	lea    rdx,[rip+0xfffffffffffd8bed]        # 0x4131ac
  43a5bf:	lea    rcx,[rsp+0xc0]
  43a5c7:	call   0x435028
  43a5cc:	test   r13d,r13d
  43a5cf:	je     0x43a745
  43a5d5:	lea    r14,[rdi+0x4]
  43a5d9:	mov    r8d,DWORD PTR [r14]
  43a5dc:	lea    rdx,[rsp+0x88]
  43a5e4:	lea    rcx,[rsp+0x390]
  43a5ec:	call   0x41fd04
  43a5f1:	nop
  43a5f2:	mov    rcx,QWORD PTR [rsp+0x88]
  43a5fa:	call   0x408984
  43a5ff:	test   al,al
  43a601:	je     0x43a637
  43a603:	mov    rcx,QWORD PTR [rsp+0x568]
  43a60b:	mov    rax,QWORD PTR [rcx]
  43a60e:	mov    r8b,bl
  43a611:	lea    rdx,[rsp+0x88]
  43a619:	call   QWORD PTR [rax+0xa8]
  43a61f:	mov    ebx,eax
  43a621:	test   eax,eax
  43a623:	jne    0x43a655
  43a625:	mov    rcx,QWORD PTR [rsp+0x88]
  43a62d:	call   0x406c00
  43a632:	mov    ebx,0x1
  43a637:	mov    rcx,QWORD PTR [rsp+0x88]
  43a63f:	call   0x40215c
  43a644:	add    r15d,ebx
  43a647:	add    r14,0x8
  43a64b:	cmp    r15d,r13d
  43a64e:	jb     0x43a5d9
  43a650:	jmp    0x43a745
  43a655:	mov    rcx,QWORD PTR [rsp+0x88]
  43a65d:	call   0x40215c
  43a662:	nop
  43a663:	xor    ecx,ecx
  43a665:	call   0x40215c
  43a66a:	nop
  43a66b:	mov    rcx,rdi
  43a66e:	call   0x40215c
  43a673:	nop
  43a674:	mov    rcx,r12
  43a677:	call   0x40215c
  43a67c:	nop
  43a67d:	movsxd rdi,DWORD PTR [rsp+0x80]
  43a685:	mov    r12,rdi
  43a688:	test   edi,edi
  43a68a:	je     0x43a6b9
  43a68c:	shl    r12,0x3
  43a690:	add    edi,esi
  43a692:	sub    r12,0x8
  43a696:	mov    rax,QWORD PTR [rsp+0x78]
  43a69b:	mov    r13,QWORD PTR [r12+rax*1]
  43a69f:	test   r13,r13
  43a6a2:	je     0x43a6b5
  43a6a4:	mov    rcx,QWORD PTR [r13+0x10]
  43a6a8:	call   0x40215c
  43a6ad:	mov    rcx,r13
  43a6b0:	call   0x40215c
  43a6b5:	test   edi,edi
  43a6b7:	jne    0x43a690
  43a6b9:	mov    rcx,QWORD PTR [rsp+0x78]
  43a6be:	call   0x40215c
  43a6c3:	nop
  43a6c4:	lea    rcx,[rsp+0xf8]
  43a6cc:	call   0x4351e0
  43a6d1:	nop
  43a6d2:	lea    rcx,[rsp+0xd0]
  43a6da:	call   0x407aa4
  43a6df:	nop
  43a6e0:	mov    rcx,QWORD PTR [rsp+0xd8]
  43a6e8:	call   0x40215c
  43a6ed:	nop
  43a6ee:	mov    rcx,QWORD PTR [rsp+0x108]
  43a6f6:	call   0x40215c
  43a6fb:	nop
  43a6fc:	mov    rcx,QWORD PTR [rsp+0x170]
  43a704:	call   0x40215c
  43a709:	mov    rcx,QWORD PTR [rsp+0x160]
  43a711:	call   0x40215c
  43a716:	mov    rcx,QWORD PTR [rsp+0x150]
  43a71e:	call   0x40215c
  43a723:	nop
  43a724:	lea    rcx,[rsp+0x390]
  43a72c:	call   0x410fc0
  43a731:	nop
  43a732:	mov    rcx,QWORD PTR [rsp+0x98]
  43a73a:	call   0x40215c
  43a73f:	nop
  43a740:	jmp    0x43a843
  43a745:	mov    rcx,QWORD PTR [rsp+0x568]
  43a74d:	mov    rax,QWORD PTR [rcx]
  43a750:	call   QWORD PTR [rax+0xb0]
  43a756:	mov    ebx,eax
  43a758:	xor    r15d,r15d
  43a75b:	cmp    eax,r15d
  43a75e:	je     0x43a857
  43a764:	xor    ecx,ecx
  43a766:	call   0x40215c
  43a76b:	nop
  43a76c:	mov    rcx,rdi
  43a76f:	call   0x40215c
  43a774:	nop
  43a775:	mov    rcx,r12
  43a778:	call   0x40215c
  43a77d:	nop
  43a77e:	movsxd rdi,DWORD PTR [rsp+0x80]
  43a786:	mov    r12,rdi
  43a789:	cmp    edi,r15d
  43a78c:	je     0x43a7bc
  43a78e:	shl    r12,0x3
  43a792:	add    edi,esi
  43a794:	sub    r12,0x8
  43a798:	mov    rax,QWORD PTR [rsp+0x78]
  43a79d:	mov    r13,QWORD PTR [r12+rax*1]
  43a7a1:	cmp    r13,r15
  43a7a4:	je     0x43a7b7
  43a7a6:	mov    rcx,QWORD PTR [r13+0x10]
  43a7aa:	call   0x40215c
  43a7af:	mov    rcx,r13
  43a7b2:	call   0x40215c
  43a7b7:	cmp    edi,r15d
  43a7ba:	jne    0x43a792
  43a7bc:	mov    rcx,QWORD PTR [rsp+0x78]
  43a7c1:	call   0x40215c
  43a7c6:	nop
  43a7c7:	lea    rcx,[rsp+0xf8]
  43a7cf:	call   0x4351e0
  43a7d4:	nop
  43a7d5:	lea    rcx,[rsp+0xd0]
  43a7dd:	call   0x407aa4
  43a7e2:	nop
  43a7e3:	mov    rcx,QWORD PTR [rsp+0xd8]
  43a7eb:	call   0x40215c
  43a7f0:	nop
  43a7f1:	mov    rcx,QWORD PTR [rsp+0x108]
  43a7f9:	call   0x40215c
  43a7fe:	nop
  43a7ff:	mov    rcx,QWORD PTR [rsp+0x170]
  43a807:	call   0x40215c
  43a80c:	mov    rcx,QWORD PTR [rsp+0x160]
  43a814:	call   0x40215c
  43a819:	mov    rcx,QWORD PTR [rsp+0x150]
  43a821:	call   0x40215c
  43a826:	nop
  43a827:	lea    rcx,[rsp+0x390]
  43a82f:	call   0x410fc0
  43a834:	nop
  43a835:	mov    rcx,QWORD PTR [rsp+0x98]
  43a83d:	call   0x40215c
  43a842:	nop
  43a843:	lea    rcx,[rsp+0x310]
  43a84b:	call   0x422f10
  43a850:	mov    eax,ebx
  43a852:	jmp    0x43a946
  43a857:	xor    ecx,ecx
  43a859:	call   0x40215c
  43a85e:	nop
  43a85f:	mov    rcx,rdi
  43a862:	call   0x40215c
  43a867:	nop
  43a868:	mov    rcx,r12
  43a86b:	call   0x40215c
  43a870:	nop
  43a871:	movsxd rbx,DWORD PTR [rsp+0x80]
  43a879:	mov    rdi,rbx
  43a87c:	cmp    ebx,r15d
  43a87f:	je     0x43a8b0
  43a881:	shl    rdi,0x3
  43a885:	add    ebx,esi
  43a887:	sub    rdi,0x8
  43a88b:	mov    rax,QWORD PTR [rsp+0x78]
  43a890:	mov    r12,QWORD PTR [rdi+rax*1]
  43a894:	cmp    r12,r15
  43a897:	je     0x43a8ab
  43a899:	mov    rcx,QWORD PTR [r12+0x10]
  43a89e:	call   0x40215c
  43a8a3:	mov    rcx,r12
  43a8a6:	call   0x40215c
  43a8ab:	cmp    ebx,r15d
  43a8ae:	jne    0x43a885
  43a8b0:	mov    rcx,QWORD PTR [rsp+0x78]
  43a8b5:	call   0x40215c
  43a8ba:	nop
  43a8bb:	lea    rcx,[rsp+0xf8]
  43a8c3:	call   0x4351e0
  43a8c8:	nop
  43a8c9:	lea    rcx,[rsp+0xd0]
  43a8d1:	call   0x407aa4
  43a8d6:	nop
  43a8d7:	mov    rcx,QWORD PTR [rsp+0xd8]
  43a8df:	call   0x40215c
  43a8e4:	nop
  43a8e5:	mov    rcx,QWORD PTR [rsp+0x108]
  43a8ed:	call   0x40215c
  43a8f2:	nop
  43a8f3:	mov    rcx,QWORD PTR [rsp+0x170]
  43a8fb:	call   0x40215c
  43a900:	mov    rcx,QWORD PTR [rsp+0x160]
  43a908:	call   0x40215c
  43a90d:	mov    rcx,QWORD PTR [rsp+0x150]
  43a915:	call   0x40215c
  43a91a:	nop
  43a91b:	lea    rcx,[rsp+0x390]
  43a923:	call   0x410fc0
  43a928:	nop
  43a929:	mov    rcx,QWORD PTR [rsp+0x98]
  43a931:	call   0x40215c
  43a936:	nop
  43a937:	lea    rcx,[rsp+0x310]
  43a93f:	call   0x422f10
  43a944:	xor    eax,eax
  43a946:	add    rsp,0x4f0
  43a94d:	pop    r15
  43a94f:	pop    r14
  43a951:	pop    r13
  43a953:	pop    r12
  43a955:	pop    rdi
  43a956:	pop    rsi
  43a957:	pop    rbx
  43a958:	ret    
  43a959:	int3   
  43a95a:	int3   
  43a95b:	int3   
  43a95c:	int3   
  43a95d:	int3   
  43a95e:	int3   
  43a95f:	int3   
  43a960:	int3   
  43a961:	int3   
  43a962:	int3   
  43a963:	int3   
  43a964:	rex.W push rbp
  43a966:	sub    rsp,0x20
  43a96a:	mov    rbp,rdx
  43a96d:	lea    rcx,[rbp+0x1d8]
  43a974:	call   0x401000
  43a979:	add    rsp,0x20
  43a97d:	pop    rbp
  43a97e:	ret    
  43a97f:	int3   
  43a980:	int3   
  43a981:	int3   
  43a982:	int3   
  43a983:	int3   
  43a984:	rex.W push rbp
  43a986:	sub    rsp,0x20
  43a98a:	mov    rbp,rdx
  43a98d:	lea    rcx,[rbp+0x1d8]
  43a994:	call   0x40ef24
  43a999:	add    rsp,0x20
  43a99d:	pop    rbp
  43a99e:	ret    
  43a99f:	int3   
  43a9a0:	int3   
  43a9a1:	int3   
  43a9a2:	int3   
  43a9a3:	int3   
  43a9a4:	rex.W push rbp
  43a9a6:	sub    rsp,0x20
  43a9aa:	mov    rbp,rdx
  43a9ad:	mov    rcx,QWORD PTR [rbp+0xe8]
  43a9b4:	call   0x40215c
  43a9b9:	add    rsp,0x20
  43a9bd:	pop    rbp
  43a9be:	ret    
  43a9bf:	int3   
  43a9c0:	int3   
  43a9c1:	int3   
  43a9c2:	int3   
  43a9c3:	int3   
  43a9c4:	rex.W push rbp
  43a9c6:	sub    rsp,0x20
  43a9ca:	mov    rbp,rdx
  43a9cd:	mov    rcx,QWORD PTR [rbp+0xe8]
  43a9d4:	call   0x401000
  43a9d9:	add    rsp,0x20
  43a9dd:	pop    rbp
  43a9de:	ret    
  43a9df:	int3   
  43a9e0:	int3   
  43a9e1:	int3   
  43a9e2:	int3   
  43a9e3:	int3   
  43a9e4:	rex.W push rbp
  43a9e6:	sub    rsp,0x20
  43a9ea:	mov    rbp,rdx
  43a9ed:	lea    rcx,[rbp+0x1c8]
  43a9f4:	call   0x401000
  43a9f9:	add    rsp,0x20
  43a9fd:	pop    rbp
  43a9fe:	ret    
  43a9ff:	int3   
  43aa00:	int3   
  43aa01:	int3   
  43aa02:	int3   
  43aa03:	int3   
  43aa04:	rex.W push rbp
  43aa06:	sub    rsp,0x20
  43aa0a:	mov    rbp,rdx
  43aa0d:	lea    rcx,[rbp+0x118]
  43aa14:	call   0x401000
  43aa19:	add    rsp,0x20
  43aa1d:	pop    rbp
  43aa1e:	ret    
  43aa1f:	int3   
  43aa20:	int3   
  43aa21:	int3   
  43aa22:	int3   
  43aa23:	int3   
  43aa24:	rex.W push rbp
  43aa26:	sub    rsp,0x20
  43aa2a:	mov    rbp,rdx
  43aa2d:	lea    rcx,[rbp+0x310]
  43aa34:	call   0x422f10
  43aa39:	add    rsp,0x20
  43aa3d:	pop    rbp
  43aa3e:	ret    
  43aa3f:	int3   
  43aa40:	int3   
  43aa41:	int3   
  43aa42:	int3   
  43aa43:	int3   
  43aa44:	rex.W push rbp
  43aa46:	sub    rsp,0x20
  43aa4a:	mov    rbp,rdx
  43aa4d:	lea    rcx,[rbp+0x98]
  43aa54:	call   0x401000
  43aa59:	add    rsp,0x20
  43aa5d:	pop    rbp
  43aa5e:	ret    
  43aa5f:	int3   
  43aa60:	int3   
  43aa61:	int3   
  43aa62:	int3   
  43aa63:	int3   
  43aa64:	rex.W push rbp
  43aa66:	sub    rsp,0x20
  43aa6a:	mov    rbp,rdx
  43aa6d:	lea    rcx,[rbp+0x1f8]
  43aa74:	call   0x406fe0
  43aa79:	add    rsp,0x20
  43aa7d:	pop    rbp
  43aa7e:	ret    
  43aa7f:	int3   
  43aa80:	int3   
  43aa81:	int3   
  43aa82:	int3   
  43aa83:	int3   
  43aa84:	rex.W push rbp
  43aa86:	sub    rsp,0x20
  43aa8a:	mov    rbp,rdx
  43aa8d:	lea    rcx,[rbp+0x88]
  43aa94:	call   0x422c70
  43aa99:	add    rsp,0x20
  43aa9d:	pop    rbp
  43aa9e:	ret    
  43aa9f:	int3   
  43aaa0:	int3   
  43aaa1:	int3   
  43aaa2:	int3   
  43aaa3:	int3   
  43aaa4:	rex.W push rbp
  43aaa6:	sub    rsp,0x20
  43aaaa:	mov    rbp,rdx
  43aaad:	lea    rcx,[rbp+0xa8]
  43aab4:	call   0x401000
  43aab9:	add    rsp,0x20
  43aabd:	pop    rbp
  43aabe:	ret    
  43aabf:	int3   
  43aac0:	int3   
  43aac1:	int3   
  43aac2:	int3   
  43aac3:	int3   
  43aac4:	rex.W push rbp
  43aac6:	sub    rsp,0x20
  43aaca:	mov    rbp,rdx
  43aacd:	lea    rcx,[rbp+0x460]
  43aad4:	call   0x422a4c
  43aad9:	add    rsp,0x20
  43aadd:	pop    rbp
  43aade:	ret    
  43aadf:	int3   
  43aae0:	int3   
  43aae1:	int3   
  43aae2:	int3   
  43aae3:	int3   
  43aae4:	rex.W push rbp
  43aae6:	sub    rsp,0x20
  43aaea:	mov    rbp,rdx
  43aaed:	lea    rcx,[rbp+0x118]
  43aaf4:	call   0x401000
  43aaf9:	add    rsp,0x20
  43aafd:	pop    rbp
  43aafe:	ret    
  43aaff:	int3   
  43ab00:	int3   
  43ab01:	int3   
  43ab02:	int3   
  43ab03:	int3   
  43ab04:	rex.W push rbp
  43ab06:	sub    rsp,0x20
  43ab0a:	mov    rbp,rdx
  43ab0d:	lea    rcx,[rbp+0x390]
  43ab14:	call   0x410fc0
  43ab19:	add    rsp,0x20
  43ab1d:	pop    rbp
  43ab1e:	ret    
  43ab1f:	int3   
  43ab20:	int3   
  43ab21:	int3   
  43ab22:	int3   
  43ab23:	int3   
  43ab24:	rex.W push rbp
  43ab26:	sub    rsp,0x20
  43ab2a:	mov    rbp,rdx
  43ab2d:	lea    rcx,[rbp+0x130]
  43ab34:	call   0x40ef60
  43ab39:	add    rsp,0x20
  43ab3d:	pop    rbp
  43ab3e:	ret    
  43ab3f:	int3   
  43ab40:	int3   
  43ab41:	int3   
  43ab42:	int3   
  43ab43:	int3   
  43ab44:	rex.W push rbp
  43ab46:	sub    rsp,0x20
  43ab4a:	mov    rbp,rdx
  43ab4d:	lea    rcx,[rbp+0x280]
  43ab54:	call   0x40ef60
  43ab59:	add    rsp,0x20
  43ab5d:	pop    rbp
  43ab5e:	ret    
  43ab5f:	int3   
  43ab60:	int3   
  43ab61:	int3   
  43ab62:	int3   
  43ab63:	int3   
  43ab64:	rex.W push rbp
  43ab66:	sub    rsp,0x20
  43ab6a:	mov    rbp,rdx
  43ab6d:	mov    rcx,QWORD PTR [rbp+0xe8]
  43ab74:	call   0x40215c
  43ab79:	add    rsp,0x20
  43ab7d:	pop    rbp
  43ab7e:	ret    
  43ab7f:	int3   
  43ab80:	int3   
  43ab81:	int3   
  43ab82:	int3   
  43ab83:	int3   
  43ab84:	rex.W push rbp
  43ab86:	sub    rsp,0x20
  43ab8a:	mov    rbp,rdx
  43ab8d:	lea    rcx,[rbp+0x240]
  43ab94:	call   0x406fe0
  43ab99:	add    rsp,0x20
  43ab9d:	pop    rbp
  43ab9e:	ret    
  43ab9f:	int3   
  43aba0:	int3   
  43aba1:	int3   
  43aba2:	int3   
  43aba3:	int3   
  43aba4:	rex.W push rbp
  43aba6:	sub    rsp,0x20
  43abaa:	mov    rbp,rdx
  43abad:	lea    rcx,[rbp+0xe8]
  43abb4:	call   0x401000
  43abb9:	add    rsp,0x20
  43abbd:	pop    rbp
  43abbe:	ret    
  43abbf:	int3   
  43abc0:	int3   
  43abc1:	int3   
  43abc2:	int3   
  43abc3:	int3   
  43abc4:	rex.W push rbp
  43abc6:	sub    rsp,0x20
  43abca:	mov    rbp,rdx
  43abcd:	lea    rcx,[rbp+0x108]
  43abd4:	call   0x401000
  43abd9:	add    rsp,0x20
  43abdd:	pop    rbp
  43abde:	ret    
  43abdf:	int3   
  43abe0:	int3   
  43abe1:	int3   
  43abe2:	int3   
  43abe3:	int3   
  43abe4:	rex.W push rbp
  43abe6:	sub    rsp,0x20
  43abea:	mov    rbp,rdx
  43abed:	lea    rcx,[rbp+0xd0]
  43abf4:	call   0x4345a8
  43abf9:	add    rsp,0x20
  43abfd:	pop    rbp
  43abfe:	ret    
  43abff:	int3   
  43ac00:	int3   
  43ac01:	int3   
  43ac02:	int3   
  43ac03:	int3   
  43ac04:	rex.W push rbp
  43ac06:	sub    rsp,0x20
  43ac0a:	mov    rbp,rdx
  43ac0d:	lea    rcx,[rbp+0xf8]
  43ac14:	call   0x4351e0
  43ac19:	add    rsp,0x20
  43ac1d:	pop    rbp
  43ac1e:	ret    
  43ac1f:	int3   
  43ac20:	int3   
  43ac21:	int3   
  43ac22:	int3   
  43ac23:	int3   
  43ac24:	rex.W push rbp
  43ac26:	sub    rsp,0x20
  43ac2a:	mov    rbp,rdx
  43ac2d:	lea    rcx,[rbp+0x118]
  43ac34:	call   0x401000
  43ac39:	add    rsp,0x20
  43ac3d:	pop    rbp
  43ac3e:	ret    
  43ac3f:	int3   
  43ac40:	int3   
  43ac41:	int3   
  43ac42:	int3   
  43ac43:	int3   
  43ac44:	rex.W push rbp
  43ac46:	sub    rsp,0x20
  43ac4a:	mov    rbp,rdx
  43ac4d:	mov    rcx,QWORD PTR [rbp+0x550]
  43ac54:	call   0x40215c
  43ac59:	add    rsp,0x20
  43ac5d:	pop    rbp
  43ac5e:	ret    
  43ac5f:	int3   
  43ac60:	int3   
  43ac61:	int3   
  43ac62:	int3   
  43ac63:	int3   
  43ac64:	rex.W push rbp
  43ac66:	sub    rsp,0x20
  43ac6a:	mov    rbp,rdx
  43ac6d:	lea    rcx,[rbp+0xd0]
  43ac74:	add    rcx,0x8
  43ac78:	call   0x401000
  43ac7d:	add    rsp,0x20
  43ac81:	pop    rbp
  43ac82:	ret    
  43ac83:	int3   
  43ac84:	rex.W push rbp
  43ac86:	sub    rsp,0x20
  43ac8a:	mov    rbp,rdx
  43ac8d:	lea    rcx,[rbp+0x78]
  43ac91:	call   0x434f60
  43ac96:	add    rsp,0x20
  43ac9a:	pop    rbp
  43ac9b:	ret    
  43ac9c:	int3   
  43ac9d:	int3   
  43ac9e:	int3   
  43ac9f:	int3   
  43aca0:	int3   
  43aca1:	int3   
  43aca2:	int3   
  43aca3:	int3   
  43aca4:	rex.W push rbp
  43aca6:	sub    rsp,0x20
  43acaa:	mov    rbp,rdx
  43acad:	lea    rcx,[rbp+0xd0]
  43acb4:	add    rcx,0x8
  43acb8:	call   0x401000
  43acbd:	add    rsp,0x20
  43acc1:	pop    rbp
  43acc2:	ret    
  43acc3:	int3   
  43acc4:	rex.W push rbp
  43acc6:	sub    rsp,0x20
  43acca:	mov    rbp,rdx
  43accd:	lea    rcx,[rbp+0x1c8]
  43acd4:	call   0x401000
  43acd9:	add    rsp,0x20
  43acdd:	pop    rbp
  43acde:	ret    
  43acdf:	int3   
  43ace0:	int3   
  43ace1:	int3   
  43ace2:	int3   
  43ace3:	int3   
  43ace4:	rex.W push rbp
  43ace6:	sub    rsp,0x20
  43acea:	mov    rbp,rdx
  43aced:	lea    rcx,[rbp+0xc0]
  43acf4:	call   0x401000
  43acf9:	add    rsp,0x20
  43acfd:	pop    rbp
  43acfe:	ret    
  43acff:	int3   
  43ad00:	int3   
  43ad01:	int3   
  43ad02:	int3   
  43ad03:	int3   
  43ad04:	rex.W push rbp
  43ad06:	sub    rsp,0x20
  43ad0a:	mov    rbp,rdx
  43ad0d:	lea    rcx,[rbp+0x1d8]
  43ad14:	call   0x401000
  43ad19:	add    rsp,0x20
  43ad1d:	pop    rbp
  43ad1e:	ret    
  43ad1f:	int3   
  43ad20:	int3   
  43ad21:	int3   
  43ad22:	int3   
  43ad23:	int3   
  43ad24:	rex.W push rbp
  43ad26:	sub    rsp,0x20
  43ad2a:	mov    rbp,rdx
  43ad2d:	lea    rcx,[rbp+0xd0]
  43ad34:	add    rcx,0x8
  43ad38:	call   0x401000
  43ad3d:	add    rsp,0x20
  43ad41:	pop    rbp
  43ad42:	ret    
  43ad43:	int3   
  43ad44:	rex.W push rbp
  43ad46:	sub    rsp,0x20
  43ad4a:	mov    rbp,rdx
  43ad4d:	lea    rcx,[rbp+0xd0]
  43ad54:	add    rcx,0x8
  43ad58:	call   0x401000
  43ad5d:	add    rsp,0x20
  43ad61:	pop    rbp
  43ad62:	ret    
  43ad63:	int3   
  43ad64:	rex.W push rbp
  43ad66:	sub    rsp,0x20
  43ad6a:	mov    rbp,rdx
  43ad6d:	lea    rcx,[rbp+0xd0]
  43ad74:	add    rcx,0x8
  43ad78:	call   0x401000
  43ad7d:	add    rsp,0x20
  43ad81:	pop    rbp
  43ad82:	ret    
  43ad83:	int3   
  43ad84:	rex.W push rbp
  43ad86:	sub    rsp,0x20
  43ad8a:	mov    rbp,rdx
  43ad8d:	lea    rcx,[rbp+0xd0]
  43ad94:	add    rcx,0x8
  43ad98:	call   0x401000
  43ad9d:	add    rsp,0x20
  43ada1:	pop    rbp
  43ada2:	ret    
  43ada3:	int3   
  43ada4:	rex.W push rbp
  43ada6:	sub    rsp,0x20
  43adaa:	mov    rbp,rdx
  43adad:	lea    rcx,[rbp+0xc0]
  43adb4:	call   0x401000
  43adb9:	add    rsp,0x20
  43adbd:	pop    rbp
  43adbe:	ret    
  43adbf:	int3   
  43adc0:	int3   
  43adc1:	int3   
  43adc2:	int3   
  43adc3:	int3   
  43adc4:	rex.W push rbp
  43adc6:	sub    rsp,0x20
  43adca:	mov    rbp,rdx
  43adcd:	lea    rcx,[rbp+0xd0]
  43add4:	add    rcx,0x8
  43add8:	call   0x401000
  43addd:	add    rsp,0x20
  43ade1:	pop    rbp
  43ade2:	ret    
  43ade3:	int3   
  43ade4:	rex.W push rbp
  43ade6:	sub    rsp,0x20
  43adea:	mov    rbp,rdx
  43aded:	mov    rcx,QWORD PTR [rbp+0x550]
  43adf4:	call   0x40215c
  43adf9:	add    rsp,0x20
  43adfd:	pop    rbp
  43adfe:	ret    
  43adff:	int3   
  43ae00:	int3   
  43ae01:	int3   
  43ae02:	int3   
  43ae03:	int3   
  43ae04:	rex.W push rbp
  43ae06:	sub    rsp,0x20
  43ae0a:	mov    rbp,rdx
  43ae0d:	lea    rcx,[rbp+0xd0]
  43ae14:	add    rcx,0x8
  43ae18:	call   0x401000
  43ae1d:	add    rsp,0x20
  43ae21:	pop    rbp
  43ae22:	ret    
  43ae23:	int3   
  43ae24:	mov    QWORD PTR [rsp+0x10],rdx
  43ae29:	push   rbp
  43ae2a:	sub    rsp,0x70
  43ae2e:	mov    rbp,rdx
  43ae31:	xor    edx,edx
  43ae33:	xor    ecx,ecx
  43ae35:	call   0x44b71e
  43ae3a:	nop
  43ae3b:	add    rsp,0x70
  43ae3f:	pop    rbp
  43ae40:	ret    
  43ae41:	int3   
  43ae42:	int3   
  43ae43:	int3   
  43ae44:	rex.W push rbp
  43ae46:	sub    rsp,0x20
  43ae4a:	mov    rbp,rdx
  43ae4d:	lea    rcx,[rbp+0xb8]
  43ae54:	call   0x4268e4
  43ae59:	add    rsp,0x20
  43ae5d:	pop    rbp
  43ae5e:	ret    
  43ae5f:	int3   
  43ae60:	int3   
  43ae61:	int3   
  43ae62:	int3   
  43ae63:	int3   
  43ae64:	rex.W push rbp
  43ae66:	sub    rsp,0x20
  43ae6a:	mov    rbp,rdx
  43ae6d:	lea    rcx,[rbp+0xd0]
  43ae74:	add    rcx,0x8
  43ae78:	call   0x401000
  43ae7d:	add    rsp,0x20
  43ae81:	pop    rbp
  43ae82:	ret    
  43ae83:	int3   
  43ae84:	rex.W push rbp
  43ae86:	sub    rsp,0x20
  43ae8a:	mov    rbp,rdx
  43ae8d:	lea    rcx,[rbp+0xd0]
  43ae94:	add    rcx,0x8
  43ae98:	call   0x401000
  43ae9d:	add    rsp,0x20
  43aea1:	pop    rbp
  43aea2:	ret    
  43aea3:	int3   
  43aea4:	rex.W push rbp
  43aea6:	sub    rsp,0x20
  43aeaa:	mov    rbp,rdx
  43aead:	lea    rcx,[rbp+0xa8]
  43aeb4:	call   0x4047cc
  43aeb9:	add    rsp,0x20
  43aebd:	pop    rbp
  43aebe:	ret    
  43aebf:	int3   
  43aec0:	int3   
  43aec1:	int3   
  43aec2:	int3   
  43aec3:	int3   
  43aec4:	rex.W push rbp
  43aec6:	sub    rsp,0x20
  43aeca:	mov    rbp,rdx
  43aecd:	lea    rcx,[rbp+0x1b0]
  43aed4:	call   0x401000
  43aed9:	add    rsp,0x20
  43aedd:	pop    rbp
  43aede:	ret    
  43aedf:	int3   
  43aee0:	int3   
  43aee1:	int3   
  43aee2:	int3   
  43aee3:	int3   
  43aee4:	rex.W push rbp
  43aee6:	sub    rsp,0x20
  43aeea:	mov    rbp,rdx
  43aeed:	lea    rcx,[rbp+0x118]
  43aef4:	call   0x401000
  43aef9:	add    rsp,0x20
  43aefd:	pop    rbp
  43aefe:	ret    
  43aeff:	int3   
  43af00:	int3   
  43af01:	int3   
  43af02:	int3   
  43af03:	int3   
  43af04:	rex.W push rbp
  43af06:	sub    rsp,0x20
  43af0a:	mov    rbp,rdx
  43af0d:	lea    rcx,[rbp+0xd0]
  43af14:	add    rcx,0x8
  43af18:	call   0x401000
  43af1d:	add    rsp,0x20
  43af21:	pop    rbp
  43af22:	ret    
  43af23:	int3   
  43af24:	rex.W push rbp
  43af26:	sub    rsp,0x20
  43af2a:	mov    rbp,rdx
  43af2d:	mov    rcx,QWORD PTR [rbp+0x1a0]
  43af34:	call   0x40215c
  43af39:	add    rsp,0x20
  43af3d:	pop    rbp
  43af3e:	ret    
  43af3f:	int3   
  43af40:	int3   
  43af41:	int3   
  43af42:	int3   
  43af43:	int3   
  43af44:	rex.W push rbp
  43af46:	sub    rsp,0x20
  43af4a:	mov    rbp,rdx
  43af4d:	lea    rcx,[rbp+0x1d8]
  43af54:	call   0x401000
  43af59:	add    rsp,0x20
  43af5d:	pop    rbp
  43af5e:	ret    
  43af5f:	int3   
  43af60:	int3   
  43af61:	int3   
  43af62:	int3   
  43af63:	int3   
  43af64:	rex.W push rbp
  43af66:	sub    rsp,0x20
  43af6a:	mov    rbp,rdx
  43af6d:	lea    rcx,[rbp+0x1d8]
  43af74:	call   0x4345f4
  43af79:	add    rsp,0x20
  43af7d:	pop    rbp
  43af7e:	ret    
  43af7f:	int3   
  43af80:	int3   
  43af81:	int3   
  43af82:	int3   
  43af83:	int3   
  43af84:	rex.W push rbp
  43af86:	sub    rsp,0x20
  43af8a:	mov    rbp,rdx
  43af8d:	lea    rcx,[rbp+0x88]
  43af94:	call   0x401000
  43af99:	add    rsp,0x20
  43af9d:	pop    rbp
  43af9e:	ret    
  43af9f:	int3   
  43afa0:	int3   
  43afa1:	int3   
  43afa2:	int3   
  43afa3:	int3   
  43afa4:	rex.W push rbp
  43afa6:	sub    rsp,0x20
  43afaa:	mov    rbp,rdx
  43afad:	lea    rcx,[rbp+0x230]
  43afb4:	call   0x401000
  43afb9:	add    rsp,0x20
  43afbd:	pop    rbp
  43afbe:	ret    
  43afbf:	int3   
  43afc0:	int3   
  43afc1:	int3   
  43afc2:	int3   
  43afc3:	int3   
  43afc4:	rex.W push rbp
  43afc6:	sub    rsp,0x20
  43afca:	mov    rbp,rdx
  43afcd:	lea    rcx,[rbp+0x1a0]
  43afd4:	call   0x401000
  43afd9:	add    rsp,0x20
  43afdd:	pop    rbp
  43afde:	ret    
  43afdf:	int3   
  43afe0:	int3   
  43afe1:	int3   
  43afe2:	int3   
  43afe3:	int3   
  43afe4:	rex.W push rbp
  43afe6:	sub    rsp,0x20
  43afea:	mov    rbp,rdx
  43afed:	lea    rcx,[rbp+0xe8]
  43aff4:	call   0x401000
  43aff9:	add    rsp,0x20
  43affd:	pop    rbp
  43affe:	ret    
  43afff:	int3   
  43b000:	int3   
  43b001:	int3   
  43b002:	int3   
  43b003:	int3   
  43b004:	rex.W push rbp
  43b006:	sub    rsp,0x20
  43b00a:	mov    rbp,rdx
  43b00d:	lea    rcx,[rbp+0xc0]
  43b014:	call   0x401000
  43b019:	add    rsp,0x20
  43b01d:	pop    rbp
  43b01e:	ret    
  43b01f:	int3   
  43b020:	int3   
  43b021:	int3   
  43b022:	int3   
  43b023:	int3   
  43b024:	rex.W push rbp
  43b026:	sub    rsp,0x20
  43b02a:	mov    rbp,rdx
  43b02d:	lea    rcx,[rbp+0xc0]
  43b034:	call   0x401000
  43b039:	add    rsp,0x20
  43b03d:	pop    rbp
  43b03e:	ret    
  43b03f:	int3   
  43b040:	int3   
  43b041:	int3   
  43b042:	int3   
  43b043:	int3   
  43b044:	rex.W push rbp
  43b046:	sub    rsp,0x20
  43b04a:	mov    rbp,rdx
  43b04d:	lea    rcx,[rbp+0xe8]
  43b054:	call   0x4047cc
  43b059:	add    rsp,0x20
  43b05d:	pop    rbp
  43b05e:	ret    
  43b05f:	int3   
  43b060:	int3   
  43b061:	int3   
  43b062:	int3   
  43b063:	int3   
  43b064:	rex.W push rbp
  43b066:	sub    rsp,0x20
  43b06a:	mov    rbp,rdx
  43b06d:	lea    rcx,[rbp+0xa8]
  43b074:	call   0x401000
  43b079:	add    rsp,0x20
  43b07d:	pop    rbp
  43b07e:	ret    
  43b07f:	int3   
  43b080:	int3   
  43b081:	int3   
  43b082:	int3   
  43b083:	int3   
  43b084:	rex.W push rbp
  43b086:	sub    rsp,0x20
  43b08a:	mov    rbp,rdx
  43b08d:	lea    rcx,[rbp+0xd0]
  43b094:	add    rcx,0x8
  43b098:	call   0x401000
  43b09d:	add    rsp,0x20
  43b0a1:	pop    rbp
  43b0a2:	ret    
  43b0a3:	int3   
  43b0a4:	rex.W push rbp
  43b0a6:	sub    rsp,0x20
  43b0aa:	mov    rbp,rdx
  43b0ad:	lea    rcx,[rbp+0x88]
  43b0b4:	call   0x401000
  43b0b9:	add    rsp,0x20
  43b0bd:	pop    rbp
  43b0be:	ret    
  43b0bf:	int3   
  43b0c0:	int3   
  43b0c1:	int3   
  43b0c2:	int3   
  43b0c3:	int3   
  43b0c4:	rex.W push rbp
  43b0c6:	sub    rsp,0x20
  43b0ca:	mov    rbp,rdx
  43b0cd:	lea    rcx,[rbp+0xd0]
  43b0d4:	add    rcx,0x8
  43b0d8:	call   0x401000
  43b0dd:	add    rsp,0x20
  43b0e1:	pop    rbp
  43b0e2:	ret    
  43b0e3:	int3   
  43b0e4:	rex.W push rbp
  43b0e6:	sub    rsp,0x20
  43b0ea:	mov    rbp,rdx
  43b0ed:	lea    rcx,[rbp+0xd0]
  43b0f4:	add    rcx,0x8
  43b0f8:	call   0x401000
  43b0fd:	add    rsp,0x20
  43b101:	pop    rbp
  43b102:	ret    
  43b103:	int3   
  43b104:	rex.W push rbp
  43b106:	sub    rsp,0x20
  43b10a:	mov    rbp,rdx
  43b10d:	lea    rcx,[rbp+0xd0]
  43b114:	add    rcx,0x8
  43b118:	call   0x401000
  43b11d:	add    rsp,0x20
  43b121:	pop    rbp
  43b122:	ret    
  43b123:	int3   
  43b124:	rex.W push rbx
  43b126:	sub    rsp,0x20
  43b12a:	add    DWORD PTR [rcx+0x8],0xffffffff
  43b12e:	mov    eax,DWORD PTR [rcx+0x8]
  43b131:	mov    rbx,rcx
  43b134:	jne    0x43b15b
  43b136:	mov    rcx,QWORD PTR [rcx+0x48]
  43b13a:	call   0x40215c
  43b13f:	mov    rcx,QWORD PTR [rbx+0x38]
  43b143:	call   0x40215c
  43b148:	lea    rcx,[rbx+0x28]
  43b14c:	call   0x435714
  43b151:	mov    rcx,rbx
  43b154:	call   0x40215c
  43b159:	xor    eax,eax
  43b15b:	add    rsp,0x20
  43b15f:	pop    rbx
  43b160:	ret    
  43b161:	int3   
  43b162:	int3   
  43b163:	int3   
  43b164:	sub    rsp,0x38
  43b168:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b171:	mov    rcx,QWORD PTR [rcx+0xb8]
  43b178:	mov    rax,QWORD PTR [rcx]
  43b17b:	call   QWORD PTR [rax+0x8]
  43b17e:	jmp    0x43b185
  43b180:	mov    eax,0x8007000e
  43b185:	add    rsp,0x38
  43b189:	ret    
  43b18a:	int3   
  43b18b:	int3   
  43b18c:	int3   
  43b18d:	int3   
  43b18e:	int3   
  43b18f:	int3   
  43b190:	int3   
  43b191:	int3   
  43b192:	int3   
  43b193:	int3   
  43b194:	mov    QWORD PTR [rsp+0x10],rdx
  43b199:	push   rbp
  43b19a:	sub    rsp,0x20
  43b19e:	mov    rbp,rdx
  43b1a1:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b180
  43b1a8:	jmp    0x43b1aa
  43b1aa:	add    rsp,0x20
  43b1ae:	pop    rbp
  43b1af:	ret    
  43b1b0:	int3   
  43b1b1:	int3   
  43b1b2:	int3   
  43b1b3:	int3   
  43b1b4:	sub    rsp,0x38
  43b1b8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b1c1:	mov    rcx,QWORD PTR [rcx+0xb8]
  43b1c8:	mov    rax,QWORD PTR [rcx]
  43b1cb:	call   QWORD PTR [rax+0x10]
  43b1ce:	jmp    0x43b1d5
  43b1d0:	mov    eax,0x8007000e
  43b1d5:	add    rsp,0x38
  43b1d9:	ret    
  43b1da:	int3   
  43b1db:	int3   
  43b1dc:	int3   
  43b1dd:	int3   
  43b1de:	int3   
  43b1df:	int3   
  43b1e0:	int3   
  43b1e1:	int3   
  43b1e2:	int3   
  43b1e3:	int3   
  43b1e4:	mov    QWORD PTR [rsp+0x10],rdx
  43b1e9:	push   rbp
  43b1ea:	sub    rsp,0x20
  43b1ee:	mov    rbp,rdx
  43b1f1:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b1d0
  43b1f8:	jmp    0x43b1fa
  43b1fa:	add    rsp,0x20
  43b1fe:	pop    rbp
  43b1ff:	ret    
  43b200:	int3   
  43b201:	int3   
  43b202:	int3   
  43b203:	int3   
  43b204:	sub    rsp,0x38
  43b208:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b211:	mov    rcx,QWORD PTR [rcx+0x80]
  43b218:	mov    rax,QWORD PTR [rcx]
  43b21b:	call   QWORD PTR [rax+0x18]
  43b21e:	jmp    0x43b225
  43b220:	mov    eax,0x8007000e
  43b225:	add    rsp,0x38
  43b229:	ret    
  43b22a:	int3   
  43b22b:	int3   
  43b22c:	int3   
  43b22d:	int3   
  43b22e:	int3   
  43b22f:	int3   
  43b230:	int3   
  43b231:	int3   
  43b232:	int3   
  43b233:	int3   
  43b234:	mov    QWORD PTR [rsp+0x10],rdx
  43b239:	push   rbp
  43b23a:	sub    rsp,0x20
  43b23e:	mov    rbp,rdx
  43b241:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b220
  43b248:	jmp    0x43b24a
  43b24a:	add    rsp,0x20
  43b24e:	pop    rbp
  43b24f:	ret    
  43b250:	int3   
  43b251:	int3   
  43b252:	int3   
  43b253:	int3   
  43b254:	rex.W push rbx
  43b256:	sub    rsp,0x40
  43b25a:	mov    rbx,r8
  43b25d:	xor    r8d,r8d
  43b260:	sub    edx,0x6
  43b263:	mov    WORD PTR [rsp+0x20],r8w
  43b269:	mov    WORD PTR [rsp+0x22],r8w
  43b26f:	mov    QWORD PTR [rsp+0x28],r8
  43b274:	je     0x43b2e2
  43b276:	sub    edx,0x3
  43b279:	je     0x43b2c7
  43b27b:	dec    edx
  43b27d:	je     0x43b2b5
  43b27f:	dec    edx
  43b281:	je     0x43b2a3
  43b283:	dec    edx
  43b285:	jne    0x43b2ee
  43b287:	mov    rdx,QWORD PTR [rcx+0xa8]
  43b28e:	cmp    rdx,r8
  43b291:	je     0x43b2ee
  43b293:	add    rdx,0x18
  43b297:	lea    rcx,[rsp+0x20]
  43b29c:	call   0x40b2e0
  43b2a1:	jmp    0x43b2ee
  43b2a3:	mov    rdx,QWORD PTR [rcx+0xa8]
  43b2aa:	cmp    rdx,r8
  43b2ad:	je     0x43b2ee
  43b2af:	add    rdx,0x10
  43b2b3:	jmp    0x43b297
  43b2b5:	mov    rdx,QWORD PTR [rcx+0xa8]
  43b2bc:	cmp    rdx,r8
  43b2bf:	je     0x43b2ee
  43b2c1:	add    rdx,0x8
  43b2c5:	jmp    0x43b297
  43b2c7:	mov    rax,QWORD PTR [rcx+0xa8]
  43b2ce:	cmp    rax,r8
  43b2d1:	je     0x43b2ee
  43b2d3:	mov    edx,DWORD PTR [rax+0x50]
  43b2d6:	lea    rcx,[rsp+0x20]
  43b2db:	call   0x40b288
  43b2e0:	jmp    0x43b2ee
  43b2e2:	lea    rcx,[rsp+0x20]
  43b2e7:	mov    dl,0x1
  43b2e9:	call   0x40b254
  43b2ee:	lea    rcx,[rsp+0x20]
  43b2f3:	mov    rdx,rbx
  43b2f6:	call   0x40b0b8
  43b2fb:	lea    rcx,[rsp+0x20]
  43b300:	call   0x40b028
  43b305:	xor    eax,eax
  43b307:	add    rsp,0x40
  43b30b:	pop    rbx
  43b30c:	ret    
  43b30d:	int3   
  43b30e:	int3   
  43b30f:	int3   
  43b310:	mov    DWORD PTR [r9],0x0
  43b317:	xor    eax,eax
  43b319:	mov    DWORD PTR [r8],0xffffffff
  43b320:	ret    
  43b321:	int3   
  43b322:	int3   
  43b323:	int3   
  43b324:	mov    DWORD PTR [rdx],0x0
  43b32a:	cmp    BYTE PTR [rcx+0xe3],0x0
  43b331:	je     0x43b339
  43b333:	mov    DWORD PTR [rdx],0x1
  43b339:	xor    eax,eax
  43b33b:	ret    
  43b33c:	mov    QWORD PTR [r8],0x0
  43b343:	xor    eax,eax
  43b345:	mov    DWORD PTR [r9],0x3e
  43b34c:	ret    
  43b34d:	int3   
  43b34e:	int3   
  43b34f:	int3   
  43b350:	sub    rsp,0x38
  43b354:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b35d:	mov    rcx,QWORD PTR [rcx+0xb8]
  43b364:	mov    rax,QWORD PTR [rcx]
  43b367:	call   QWORD PTR [rax+0x48]
  43b36a:	jmp    0x43b371
  43b36c:	mov    eax,0x8007000e
  43b371:	add    rsp,0x38
  43b375:	ret    
  43b376:	int3   
  43b377:	int3   
  43b378:	int3   
  43b379:	int3   
  43b37a:	int3   
  43b37b:	int3   
  43b37c:	int3   
  43b37d:	int3   
  43b37e:	int3   
  43b37f:	int3   
  43b380:	mov    QWORD PTR [rsp+0x10],rdx
  43b385:	push   rbp
  43b386:	sub    rsp,0x20
  43b38a:	mov    rbp,rdx
  43b38d:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b36c
  43b394:	jmp    0x43b396
  43b396:	add    rsp,0x20
  43b39a:	pop    rbp
  43b39b:	ret    
  43b39c:	int3   
  43b39d:	int3   
  43b39e:	int3   
  43b39f:	int3   
  43b3a0:	sub    rsp,0x38
  43b3a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b3ad:	mov    rcx,QWORD PTR [rcx+0x90]
  43b3b4:	mov    rax,QWORD PTR [rcx]
  43b3b7:	call   QWORD PTR [rax+0x60]
  43b3ba:	jmp    0x43b3c1
  43b3bc:	mov    eax,0x8007000e
  43b3c1:	add    rsp,0x38
  43b3c5:	ret    
  43b3c6:	int3   
  43b3c7:	int3   
  43b3c8:	int3   
  43b3c9:	int3   
  43b3ca:	int3   
  43b3cb:	int3   
  43b3cc:	int3   
  43b3cd:	int3   
  43b3ce:	int3   
  43b3cf:	int3   
  43b3d0:	mov    QWORD PTR [rsp+0x10],rdx
  43b3d5:	push   rbp
  43b3d6:	sub    rsp,0x20
  43b3da:	mov    rbp,rdx
  43b3dd:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b3bc
  43b3e4:	jmp    0x43b3e6
  43b3e6:	add    rsp,0x20
  43b3ea:	pop    rbp
  43b3eb:	ret    
  43b3ec:	int3   
  43b3ed:	int3   
  43b3ee:	int3   
  43b3ef:	int3   
  43b3f0:	sub    rsp,0x38
  43b3f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b3fd:	mov    rcx,QWORD PTR [rcx+0x88]
  43b404:	mov    rax,QWORD PTR [rcx]
  43b407:	call   QWORD PTR [rax+0x68]
  43b40a:	jmp    0x43b411
  43b40c:	mov    eax,0x8007000e
  43b411:	add    rsp,0x38
  43b415:	ret    
  43b416:	int3   
  43b417:	int3   
  43b418:	int3   
  43b419:	int3   
  43b41a:	int3   
  43b41b:	int3   
  43b41c:	int3   
  43b41d:	int3   
  43b41e:	int3   
  43b41f:	int3   
  43b420:	mov    QWORD PTR [rsp+0x10],rdx
  43b425:	push   rbp
  43b426:	sub    rsp,0x20
  43b42a:	mov    rbp,rdx
  43b42d:	lea    rax,[rip+0xffffffffffffffd8]        # 0x43b40c
  43b434:	jmp    0x43b436
  43b436:	add    rsp,0x20
  43b43a:	pop    rbp
  43b43b:	ret    
  43b43c:	int3   
  43b43d:	int3   
  43b43e:	int3   
  43b43f:	int3   
  43b440:	sub    rsp,0x38
  43b444:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b44d:	mov    r9,QWORD PTR [rcx+0xe8]
  43b454:	mov    eax,edx
  43b456:	lea    r10,[rax+rax*4]
  43b45a:	mov    rax,QWORD PTR [r9]
  43b45d:	add    rcx,0x8
  43b461:	mov    r11,QWORD PTR [rcx]
  43b464:	xor    r9d,r9d
  43b467:	cmp    DWORD PTR [rax+r10*4+0x8],r9d
  43b46c:	setge  r9b
  43b470:	call   QWORD PTR [r11+0x18]
  43b474:	jmp    0x43b47b
  43b476:	mov    eax,0x8007000e
  43b47b:	add    rsp,0x38
  43b47f:	ret    
  43b480:	int3   
  43b481:	int3   
  43b482:	int3   
  43b483:	int3   
  43b484:	int3   
  43b485:	int3   
  43b486:	int3   
  43b487:	int3   
  43b488:	int3   
  43b489:	int3   
  43b48a:	int3   
  43b48b:	int3   
  43b48c:	int3   
  43b48d:	int3   
  43b48e:	int3   
  43b48f:	int3   
  43b490:	mov    QWORD PTR [rsp+0x10],rdx
  43b495:	push   rbp
  43b496:	sub    rsp,0x20
  43b49a:	mov    rbp,rdx
  43b49d:	lea    rax,[rip+0xffffffffffffffd2]        # 0x43b476
  43b4a4:	jmp    0x43b4a6
  43b4a6:	add    rsp,0x20
  43b4aa:	pop    rbp
  43b4ab:	ret    
  43b4ac:	int3   
  43b4ad:	int3   
  43b4ae:	int3   
  43b4af:	int3   
  43b4b0:	mov    eax,DWORD PTR [rcx+0x90]
  43b4b6:	mov    r9,rcx
  43b4b9:	test   eax,eax
  43b4bb:	jne    0x43b4c3
  43b4bd:	mov    eax,0x1
  43b4c2:	ret    
  43b4c3:	cmp    edx,eax
  43b4c5:	jb     0x43b4ca
  43b4c7:	lea    edx,[rax-0x1]
  43b4ca:	mov    rax,QWORD PTR [r9+0x88]
  43b4d1:	mov    ecx,edx
  43b4d3:	mov    rcx,QWORD PTR [rax+rcx*8]
  43b4d7:	xor    eax,eax
  43b4d9:	mov    QWORD PTR [r8],rcx
  43b4dc:	ret    
  43b4dd:	int3   
  43b4de:	int3   
  43b4df:	int3   
  43b4e0:	rex.W push rbx
  43b4e2:	push   rbp
  43b4e3:	push   rsi
  43b4e4:	push   rdi
  43b4e5:	push   r12
  43b4e7:	sub    rsp,0x20
  43b4eb:	mov    rdi,rcx
  43b4ee:	mov    ecx,DWORD PTR [rcx+0xc]
  43b4f1:	mov    rbp,r8
  43b4f4:	cmp    DWORD PTR [rdi+0x8],ecx
  43b4f7:	mov    r12d,edx
  43b4fa:	jne    0x43b53f
  43b4fc:	mov    eax,ecx
  43b4fe:	shr    eax,0x2
  43b501:	lea    esi,[rax+rcx*1+0x1]
  43b505:	lea    rcx,[rsi+rsi*2]
  43b509:	shl    rcx,0x3
  43b50d:	call   0x402130
  43b512:	cmp    DWORD PTR [rdi+0x8],0x0
  43b516:	mov    rbx,rax
  43b519:	je     0x43b531
  43b51b:	mov    ecx,DWORD PTR [rdi+0x8]
  43b51e:	mov    rdx,QWORD PTR [rdi]
  43b521:	lea    r8,[rcx+rcx*2]
  43b525:	mov    rcx,rax
  43b528:	shl    r8,0x3
  43b52c:	call   0x44b480
  43b531:	mov    rcx,QWORD PTR [rdi]
  43b534:	call   0x40215c
  43b539:	mov    QWORD PTR [rdi],rbx
  43b53c:	mov    DWORD PTR [rdi+0xc],esi
  43b53f:	mov    eax,DWORD PTR [rdi+0x8]
  43b542:	mov    r9,QWORD PTR [rdi]
  43b545:	lea    rbx,[r12+r12*2]
  43b549:	sub    eax,r12d
  43b54c:	lea    rdx,[r9+rbx*8]
  43b550:	lea    r8,[rax+rax*2]
  43b554:	lea    eax,[r12+0x1]
  43b559:	lea    rax,[rax+rax*2]
  43b55d:	shl    r8,0x3
  43b561:	lea    rcx,[r9+rax*8]
  43b565:	call   0x44b774
  43b56a:	mov    r11,QWORD PTR [rdi]
  43b56d:	mov    rax,QWORD PTR [rbp+0x0]
  43b571:	mov    QWORD PTR [r11+rbx*8],rax
  43b575:	mov    rax,QWORD PTR [rbp+0x8]
  43b579:	mov    QWORD PTR [r11+rbx*8+0x8],rax
  43b57e:	mov    rax,QWORD PTR [rbp+0x10]
  43b582:	mov    QWORD PTR [r11+rbx*8+0x10],rax
  43b587:	inc    DWORD PTR [rdi+0x8]
  43b58a:	add    rsp,0x20
  43b58e:	pop    r12
  43b590:	pop    rdi
  43b591:	pop    rsi
  43b592:	pop    rbp
  43b593:	pop    rbx
  43b594:	ret    
  43b595:	int3   
  43b596:	int3   
  43b597:	int3   
  43b598:	rex.W push rbx
  43b59a:	push   rsi
  43b59b:	push   rdi
  43b59c:	push   r12
  43b59e:	sub    rsp,0x38
  43b5a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b5ab:	mov    rbx,r9
  43b5ae:	mov    rsi,r8
  43b5b1:	mov    r12d,edx
  43b5b4:	mov    rdi,rcx
  43b5b7:	mov    rcx,QWORD PTR [rcx+0xb8]
  43b5be:	mov    rax,QWORD PTR [rcx]
  43b5c1:	call   QWORD PTR [rax+0x20]
  43b5c4:	test   eax,eax
  43b5c6:	jne    0x43b638
  43b5c8:	mov    rcx,QWORD PTR [rdi+0xe8]
  43b5cf:	lea    r8,[r12+r12*4]
  43b5d3:	mov    r9,QWORD PTR [rcx]
  43b5d6:	test   rsi,rsi
  43b5d9:	je     0x43b5e6
  43b5db:	xor    eax,eax
  43b5dd:	cmp    BYTE PTR [r9+r8*4],al
  43b5e1:	setne  al
  43b5e4:	mov    DWORD PTR [rsi],eax
  43b5e6:	test   rbx,rbx
  43b5e9:	je     0x43b5f7
  43b5eb:	xor    eax,eax
  43b5ed:	cmp    BYTE PTR [r9+r8*4+0x1],al
  43b5f2:	setne  al
  43b5f5:	mov    DWORD PTR [rbx],eax
  43b5f7:	mov    rdx,QWORD PTR [rsp+0x80]
  43b5ff:	test   rdx,rdx
  43b602:	je     0x43b62f
  43b604:	mov    DWORD PTR [rdx],0xffffffff
  43b60a:	mov    eax,DWORD PTR [r9+r8*4+0x8]
  43b60f:	cmp    eax,0xffffffff
  43b612:	je     0x43b62f
  43b614:	mov    r8,QWORD PTR [rdi+0xe0]
  43b61b:	test   r8,r8
  43b61e:	je     0x43b62d
  43b620:	mov    rcx,rax
  43b623:	mov    rax,QWORD PTR [r8]
  43b626:	mov    rcx,QWORD PTR [rax+rcx*8]
  43b62a:	mov    eax,DWORD PTR [rcx+0x28]
  43b62d:	mov    DWORD PTR [rdx],eax
  43b62f:	xor    eax,eax
  43b631:	jmp    0x43b638
  43b633:	mov    eax,0x8007000e
  43b638:	add    rsp,0x38
  43b63c:	pop    r12
  43b63e:	pop    rdi
  43b63f:	pop    rsi
  43b640:	pop    rbx
  43b641:	ret    
  43b642:	int3   
  43b643:	int3   
  43b644:	int3   
  43b645:	int3   
  43b646:	int3   
  43b647:	int3   
  43b648:	mov    QWORD PTR [rsp+0x10],rdx
  43b64d:	push   rbp
  43b64e:	sub    rsp,0x20
  43b652:	mov    rbp,rdx
  43b655:	lea    rax,[rip+0xffffffffffffffd7]        # 0x43b633
  43b65c:	jmp    0x43b65e
  43b65e:	add    rsp,0x20
  43b662:	pop    rbp
  43b663:	ret    
  43b664:	int3   
  43b665:	int3   
  43b666:	int3   
  43b667:	int3   
  43b668:	sub    rsp,0x38
  43b66c:	mov    r11,QWORD PTR [rsp+0x60]
  43b671:	mov    r10,r8
  43b674:	xor    r8d,r8d
  43b677:	mov    QWORD PTR [r10],r8
  43b67a:	mov    DWORD PTR [r9],r8d
  43b67d:	mov    DWORD PTR [r11],r8d
  43b680:	cmp    BYTE PTR [rcx+0xdb],r8b
  43b687:	je     0x43b6ce
  43b689:	cmp    edx,0x3e
  43b68c:	jne    0x43b6ce
  43b68e:	cmp    BYTE PTR [rcx+0xd9],r8b
  43b695:	jne    0x43b6ce
  43b697:	mov    rax,QWORD PTR [rcx+0xa8]
  43b69e:	cmp    rax,r8
  43b6a1:	je     0x43b6d5
  43b6a3:	mov    edx,DWORD PTR [rax+0x5c]
  43b6a6:	cmp    edx,r8d
  43b6a9:	jl     0x43b6ce
  43b6ab:	mov    rax,QWORD PTR [rcx+0xa0]
  43b6b2:	mov    rcx,QWORD PTR [rax+0x78]
  43b6b6:	mov    r8,QWORD PTR [rcx+rdx*8]
  43b6ba:	mov    rax,QWORD PTR [r8]
  43b6bd:	mov    QWORD PTR [r10],rax
  43b6c0:	mov    eax,DWORD PTR [r8+0x8]
  43b6c4:	mov    DWORD PTR [r9],eax
  43b6c7:	mov    DWORD PTR [r11],0x1
  43b6ce:	xor    eax,eax
  43b6d0:	add    rsp,0x38
  43b6d4:	ret    
  43b6d5:	mov    rax,QWORD PTR [rcx+0xb0]
  43b6dc:	cmp    rax,r8
  43b6df:	je     0x43b6ce
  43b6e1:	mov    rcx,QWORD PTR [rax+0x18]
  43b6e5:	cmp    rcx,r8
  43b6e8:	je     0x43b6ce
  43b6ea:	mov    rax,QWORD PTR [rcx]
  43b6ed:	mov    r8,r10
  43b6f0:	mov    edx,0x3e
  43b6f5:	mov    QWORD PTR [rsp+0x20],r11
  43b6fa:	call   QWORD PTR [rax+0x20]
  43b6fd:	jmp    0x43b6d0
  43b6ff:	int3   
  43b700:	rex.W push rbx
  43b702:	push   rbp
  43b703:	push   rsi
  43b704:	push   rdi
  43b705:	sub    rsp,0x38
  43b709:	cmp    r8d,0x3e
  43b70d:	mov    rsi,QWORD PTR [rsp+0x80]
  43b715:	mov    rbp,QWORD PTR [rsp+0x88]
  43b71d:	mov    QWORD PTR [r9],0x0
  43b724:	mov    DWORD PTR [rsi],0x0
  43b72a:	mov    rdi,r9
  43b72d:	mov    DWORD PTR [rbp+0x0],0x0
  43b734:	mov    ebx,r8d
  43b737:	mov    r10,rcx
  43b73a:	je     0x43b746
  43b73c:	cmp    r8d,0x59
  43b740:	jne    0x43b82e
  43b746:	cmp    BYTE PTR [rcx+0xe1],0x0
  43b74d:	jne    0x43b82e
  43b753:	mov    rcx,QWORD PTR [rcx+0xd0]
  43b75a:	mov    eax,edx
  43b75c:	mov    r8,QWORD PTR [rcx]
  43b75f:	lea    rdx,[rax+rax*4]
  43b763:	cmp    BYTE PTR [r8+rdx*4+0x2],0x0
  43b769:	je     0x43b7b5
  43b76b:	mov    ecx,DWORD PTR [r8+rdx*4+0x8]
  43b770:	cmp    ecx,0xffffffff
  43b773:	je     0x43b7b5
  43b775:	mov    rax,QWORD PTR [r10+0xb8]
  43b77c:	mov    r11,QWORD PTR [rax+0x10]
  43b780:	test   r11,r11
  43b783:	je     0x43b7b5
  43b785:	mov    rax,QWORD PTR [r10+0xc8]
  43b78c:	test   rax,rax
  43b78f:	je     0x43b79b
  43b791:	mov    rax,QWORD PTR [rax]
  43b794:	mov    rcx,QWORD PTR [rax+rcx*8]
  43b798:	mov    ecx,DWORD PTR [rcx+0x28]
  43b79b:	mov    rax,QWORD PTR [r11]
  43b79e:	mov    edx,ecx
  43b7a0:	mov    r8d,ebx
  43b7a3:	mov    rcx,r11
  43b7a6:	mov    QWORD PTR [rsp+0x28],rbp
  43b7ab:	mov    QWORD PTR [rsp+0x20],rsi
  43b7b0:	call   QWORD PTR [rax+0x20]
  43b7b3:	jmp    0x43b830
  43b7b5:	cmp    BYTE PTR [r8+rdx*4+0x3],0x0
  43b7bb:	jne    0x43b82e
  43b7bd:	cmp    ebx,0x3e
  43b7c0:	mov    r9,QWORD PTR [r10+0xa8]
  43b7c7:	mov    ecx,DWORD PTR [r8+rdx*4+0x4]
  43b7cc:	mov    rax,QWORD PTR [r9+0x30]
  43b7d0:	mov    rdx,QWORD PTR [rax+rcx*8]
  43b7d4:	jne    0x43b7fc
  43b7d6:	cmp    BYTE PTR [r10+0xe3],0x0
  43b7de:	je     0x43b82e
  43b7e0:	cmp    DWORD PTR [rdx+0x5c],0x0
  43b7e4:	jl     0x43b82e
  43b7e6:	mov    rax,QWORD PTR [r9+0x78]
  43b7ea:	mov    ecx,DWORD PTR [rdx+0x5c]
  43b7ed:	mov    rdx,QWORD PTR [rax+rcx*8]
  43b7f1:	mov    rax,QWORD PTR [rdx]
  43b7f4:	mov    QWORD PTR [rdi],rax
  43b7f7:	mov    eax,DWORD PTR [rdx+0x8]
  43b7fa:	jmp    0x43b825
  43b7fc:	cmp    BYTE PTR [r10+0xe5],0x0
  43b804:	je     0x43b82e
  43b806:	lea    rcx,[rdx+0x40]
  43b80a:	cmp    QWORD PTR [rcx+0x8],0x0
  43b80f:	jne    0x43b81c
  43b811:	lea    rcx,[rdx+0x30]
  43b815:	cmp    QWORD PTR [rcx+0x8],0x0
  43b81a:	je     0x43b82e
  43b81c:	mov    rax,QWORD PTR [rcx]
  43b81f:	mov    QWORD PTR [rdi],rax
  43b822:	mov    eax,DWORD PTR [rcx+0x8]
  43b825:	mov    DWORD PTR [rsi],eax
  43b827:	mov    DWORD PTR [rbp+0x0],0x1
  43b82e:	xor    eax,eax
  43b830:	add    rsp,0x38
  43b834:	pop    rdi
  43b835:	pop    rsi
  43b836:	pop    rbp
  43b837:	pop    rbx
  43b838:	ret    
  43b839:	int3   
  43b83a:	int3   
  43b83b:	int3   
  43b83c:	rex.W push rbx
  43b83e:	push   rbp
  43b83f:	push   rsi
  43b840:	push   rdi
  43b841:	push   r12
  43b843:	push   r13
  43b845:	mov    rax,rsp
  43b848:	sub    rsp,0x68
  43b84c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43b855:	mov    r13,r8
  43b858:	mov    rbp,rdx
  43b85b:	mov    r12,rcx
  43b85e:	mov    DWORD PTR [rsp+0xb8],0x0
  43b869:	mov    QWORD PTR [rax-0x30],0x0
  43b871:	mov    DWORD PTR [rax-0x28],0x0
  43b878:	mov    DWORD PTR [rax-0x24],0x0
  43b87f:	mov    QWORD PTR [rax-0x40],0x0
  43b887:	mov    DWORD PTR [rax-0x38],0x0
  43b88e:	mov    DWORD PTR [rax-0x34],0x0
  43b895:	lea    rdx,[rax-0x30]
  43b899:	mov    rcx,rbp
  43b89c:	call   0x405010
  43b8a1:	lea    rdx,[rsp+0x28]
  43b8a6:	mov    rcx,r13
  43b8a9:	call   0x405010
  43b8ae:	xor    ebx,ebx
  43b8b0:	cmp    DWORD PTR [rsp+0x30],0x1
  43b8b5:	jbe    0x43b8f9
  43b8b7:	lea    edi,[rbx+0x1]
  43b8ba:	xor    esi,esi
  43b8bc:	cmp    edi,DWORD PTR [rsp+0x40]
  43b8c0:	jae    0x43b8f1
  43b8c2:	mov    rax,QWORD PTR [rsp+0x38]
  43b8c7:	mov    rcx,QWORD PTR [rsi+rax*1]
  43b8cb:	mov    rdx,QWORD PTR [rcx]
  43b8ce:	mov    rax,QWORD PTR [rsp+0x28]
  43b8d3:	mov    rcx,QWORD PTR [rsi+rax*1]
  43b8d7:	mov    rcx,QWORD PTR [rcx]
  43b8da:	call   0x4042ec
  43b8df:	test   eax,eax
  43b8e1:	jne    0x43b8f1
  43b8e3:	inc    ebx
  43b8e5:	inc    edi
  43b8e7:	add    rsi,0x8
  43b8eb:	cmp    edi,DWORD PTR [rsp+0x30]
  43b8ef:	jb     0x43b8bc
  43b8f1:	test   ebx,ebx
  43b8f3:	jne    0x43b9b7
  43b8f9:	mov    rcx,QWORD PTR [rbp+0x0]
  43b8fd:	call   0x409dbc
  43b902:	test   al,al
  43b904:	jne    0x43b917
  43b906:	mov    rcx,QWORD PTR [r13+0x0]
  43b90a:	call   0x409dbc
  43b90f:	test   al,al
  43b911:	je     0x43b9b7
  43b917:	mov    rdx,rbp
  43b91a:	mov    rcx,r12
  43b91d:	call   0x403208
  43b922:	nop
  43b923:	movsxd rbx,DWORD PTR [rsp+0x30]
  43b928:	mov    rsi,rbx
  43b92b:	mov    edi,0xffffffff
  43b930:	test   ebx,ebx
  43b932:	je     0x43b961
  43b934:	shl    rsi,0x3
  43b938:	add    ebx,edi
  43b93a:	sub    rsi,0x8
  43b93e:	mov    rax,QWORD PTR [rsp+0x28]
  43b943:	mov    rbp,QWORD PTR [rsi+rax*1]
  43b947:	test   rbp,rbp
  43b94a:	je     0x43b95d
  43b94c:	mov    rcx,QWORD PTR [rbp+0x0]
  43b950:	call   0x40215c
  43b955:	mov    rcx,rbp
  43b958:	call   0x40215c
  43b95d:	test   ebx,ebx
  43b95f:	jne    0x43b938
  43b961:	mov    rcx,QWORD PTR [rsp+0x28]
  43b966:	call   0x40215c
  43b96b:	nop
  43b96c:	movsxd rbx,DWORD PTR [rsp+0x40]
  43b971:	mov    rsi,rbx
  43b974:	test   ebx,ebx
  43b976:	je     0x43b9a5
  43b978:	shl    rsi,0x3
  43b97c:	add    ebx,edi
  43b97e:	sub    rsi,0x8
  43b982:	mov    rax,QWORD PTR [rsp+0x38]
  43b987:	mov    rbp,QWORD PTR [rsi+rax*1]
  43b98b:	test   rbp,rbp
  43b98e:	je     0x43b9a1
  43b990:	mov    rcx,QWORD PTR [rbp+0x0]
  43b994:	call   0x40215c
  43b999:	mov    rcx,rbp
  43b99c:	call   0x40215c
  43b9a1:	test   ebx,ebx
  43b9a3:	jne    0x43b97c
  43b9a5:	mov    rcx,QWORD PTR [rsp+0x38]
  43b9aa:	call   0x40215c
  43b9af:	mov    rax,r12
  43b9b2:	jmp    0x43baef
  43b9b7:	lea    rcx,[rsp+0x48]
  43b9bc:	call   0x403150
  43b9c1:	nop
  43b9c2:	lea    edi,[rbx+0x1]
  43b9c5:	cmp    edi,DWORD PTR [rsp+0x30]
  43b9c9:	jae    0x43b9e4
  43b9cb:	lea    rdx,[rip+0x160ee]        # 0x451ac0
  43b9d2:	lea    rcx,[rsp+0x48]
  43b9d7:	call   0x4033f0
  43b9dc:	inc    edi
  43b9de:	cmp    edi,DWORD PTR [rsp+0x30]
  43b9e2:	jb     0x43b9cb
  43b9e4:	mov    edi,ebx
  43b9e6:	movsxd rsi,ebx
  43b9e9:	cmp    ebx,DWORD PTR [rsp+0x40]
  43b9ed:	jae    0x43ba47
  43b9ef:	shl    rsi,0x3
  43b9f3:	cmp    edi,ebx
  43b9f5:	je     0x43ba28
  43b9f7:	mov    edx,DWORD PTR [rsp+0x50]
  43b9fb:	cmp    DWORD PTR [rsp+0x54],edx
  43b9ff:	jne    0x43ba0f
  43ba01:	lea    rcx,[rsp+0x48]
  43ba06:	call   0x402f2c
  43ba0b:	mov    edx,DWORD PTR [rsp+0x50]
  43ba0f:	mov    rcx,QWORD PTR [rsp+0x48]
  43ba14:	mov    eax,edx
  43ba16:	mov    WORD PTR [rcx+rax*2],0x5c
  43ba1c:	inc    edx
  43ba1e:	mov    WORD PTR [rcx+rdx*2],0x0
  43ba24:	mov    DWORD PTR [rsp+0x50],edx
  43ba28:	mov    rax,QWORD PTR [rsp+0x38]
  43ba2d:	mov    rdx,QWORD PTR [rsi+rax*1]
  43ba31:	lea    rcx,[rsp+0x48]
  43ba36:	call   0x403444
  43ba3b:	inc    edi
  43ba3d:	add    rsi,0x8
  43ba41:	cmp    edi,DWORD PTR [rsp+0x40]
  43ba45:	jb     0x43b9f3
  43ba47:	lea    rdx,[rsp+0x48]
  43ba4c:	mov    rcx,r12
  43ba4f:	call   0x403208
  43ba54:	nop
  43ba55:	mov    rcx,QWORD PTR [rsp+0x48]
  43ba5a:	call   0x40215c
  43ba5f:	nop
  43ba60:	movsxd rbx,DWORD PTR [rsp+0x30]
  43ba65:	mov    rsi,rbx
  43ba68:	mov    edi,0xffffffff
  43ba6d:	test   ebx,ebx
  43ba6f:	je     0x43ba9e
  43ba71:	shl    rsi,0x3
  43ba75:	add    ebx,edi
  43ba77:	sub    rsi,0x8
  43ba7b:	mov    rax,QWORD PTR [rsp+0x28]
  43ba80:	mov    rbp,QWORD PTR [rsi+rax*1]
  43ba84:	test   rbp,rbp
  43ba87:	je     0x43ba9a
  43ba89:	mov    rcx,QWORD PTR [rbp+0x0]
  43ba8d:	call   0x40215c
  43ba92:	mov    rcx,rbp
  43ba95:	call   0x40215c
  43ba9a:	test   ebx,ebx
  43ba9c:	jne    0x43ba75
  43ba9e:	mov    rcx,QWORD PTR [rsp+0x28]
  43baa3:	call   0x40215c
  43baa8:	nop
  43baa9:	movsxd rbx,DWORD PTR [rsp+0x40]
  43baae:	mov    rsi,rbx
  43bab1:	test   ebx,ebx
  43bab3:	je     0x43bae2
  43bab5:	shl    rsi,0x3
  43bab9:	add    ebx,edi
  43babb:	sub    rsi,0x8
  43babf:	mov    rax,QWORD PTR [rsp+0x38]
  43bac4:	mov    rbp,QWORD PTR [rsi+rax*1]
  43bac8:	test   rbp,rbp
  43bacb:	je     0x43bade
  43bacd:	mov    rcx,QWORD PTR [rbp+0x0]
  43bad1:	call   0x40215c
  43bad6:	mov    rcx,rbp
  43bad9:	call   0x40215c
  43bade:	test   ebx,ebx
  43bae0:	jne    0x43bab9
  43bae2:	mov    rcx,QWORD PTR [rsp+0x38]
  43bae7:	call   0x40215c
  43baec:	mov    rax,r12
  43baef:	add    rsp,0x68
  43baf3:	pop    r13
  43baf5:	pop    r12
  43baf7:	pop    rdi
  43baf8:	pop    rsi
  43baf9:	pop    rbp
  43bafa:	pop    rbx
  43bafb:	ret    
  43bafc:	rex.W push rbp
  43bafe:	sub    rsp,0x20
  43bb02:	mov    rbp,rdx
  43bb05:	lea    rcx,[rbp+0x38]
  43bb09:	call   0x4047cc
  43bb0e:	add    rsp,0x20
  43bb12:	pop    rbp
  43bb13:	ret    
  43bb14:	int3   
  43bb15:	int3   
  43bb16:	int3   
  43bb17:	int3   
  43bb18:	int3   
  43bb19:	int3   
  43bb1a:	int3   
  43bb1b:	int3   
  43bb1c:	rex.W push rbp
  43bb1e:	sub    rsp,0x20
  43bb22:	mov    rbp,rdx
  43bb25:	lea    rcx,[rbp+0x28]
  43bb29:	call   0x4047cc
  43bb2e:	add    rsp,0x20
  43bb32:	pop    rbp
  43bb33:	ret    
  43bb34:	int3   
  43bb35:	int3   
  43bb36:	int3   
  43bb37:	int3   
  43bb38:	int3   
  43bb39:	int3   
  43bb3a:	int3   
  43bb3b:	int3   
  43bb3c:	rex.W push rbp
  43bb3e:	sub    rsp,0x20
  43bb42:	mov    rbp,rdx
  43bb45:	lea    rcx,[rbp+0x48]
  43bb49:	call   0x401000
  43bb4e:	add    rsp,0x20
  43bb52:	pop    rbp
  43bb53:	ret    
  43bb54:	rex.W push rbx
  43bb56:	push   rsi
  43bb57:	push   rdi
  43bb58:	push   r12
  43bb5a:	push   r13
  43bb5c:	push   r14
  43bb5e:	push   r15
  43bb60:	sub    rsp,0xb0
  43bb67:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
  43bb73:	mov    r14,r9
  43bb76:	mov    ebx,r8d
  43bb79:	mov    r13,rcx
  43bb7c:	mov    r8,QWORD PTR [rcx+0xe8]
  43bb83:	mov    eax,edx
  43bb85:	lea    rsi,[rax+rax*4]
  43bb89:	mov    r12,QWORD PTR [r8]
  43bb8c:	xor    edi,edi
  43bb8e:	mov    WORD PTR [rsp+0x20],di
  43bb93:	mov    WORD PTR [rsp+0x22],di
  43bb98:	mov    QWORD PTR [rsp+0x28],rdi
  43bb9d:	cmp    BYTE PTR [r12+rsi*4],dil
  43bba1:	je     0x43bdd5
  43bba7:	cmp    ebx,0x36
  43bbaa:	jne    0x43bd3d
  43bbb0:	cmp    edx,DWORD PTR [rcx+0x60]
  43bbb3:	jne    0x43bbd4
  43bbb5:	mov    rdx,r9
  43bbb8:	lea    rcx,[rsp+0x20]
  43bbbd:	call   0x40b0b8
  43bbc2:	nop
  43bbc3:	lea    rcx,[rsp+0x20]
  43bbc8:	call   0x40b028
  43bbcd:	xor    eax,eax
  43bbcf:	jmp    0x43bfe2
  43bbd4:	cmp    DWORD PTR [r12+rsi*4+0x4],edi
  43bbd9:	jl     0x43bdd5
  43bbdf:	mov    edx,DWORD PTR [r12+rsi*4+0x4]
  43bbe4:	mov    rax,QWORD PTR [rcx+0xc0]
  43bbeb:	mov    rcx,QWORD PTR [rax+0x30]
  43bbef:	mov    r15,QWORD PTR [rcx+rdx*8]
  43bbf3:	mov    DWORD PTR [rsp+0x48],edi
  43bbf7:	mov    DWORD PTR [rsp+0x4c],edi
  43bbfb:	lea    rcx,[rsp+0x50]
  43bc00:	call   0x403150
  43bc05:	nop
  43bc06:	lea    rcx,[rsp+0x60]
  43bc0b:	call   0x403150
  43bc10:	nop
  43bc11:	mov    r8,QWORD PTR [r15+0x38]
  43bc15:	mov    rdx,QWORD PTR [r15+0x30]
  43bc19:	lea    rcx,[rsp+0x48]
  43bc1e:	call   0x409564
  43bc23:	cmp    al,dil
  43bc26:	je     0x43bd24
  43bc2c:	lea    rdx,[rsp+0x70]
  43bc31:	lea    rcx,[rsp+0x48]
  43bc36:	call   0x4096c8
  43bc3b:	nop
  43bc3c:	cmp    DWORD PTR [rsp+0x4c],0x1
  43bc41:	jne    0x43bc57
  43bc43:	lea    rdx,[rsp+0x70]
  43bc48:	lea    rcx,[rsp+0x20]
  43bc4d:	call   0x40b1a0
  43bc52:	jmp    0x43bce5
  43bc57:	mov    r8d,DWORD PTR [r12+rsi*4+0x4]
  43bc5c:	lea    rdx,[rsp+0x90]
  43bc64:	mov    rcx,QWORD PTR [r13+0xc0]
  43bc6b:	call   0x41fd04
  43bc70:	nop
  43bc71:	lea    rcx,[rsp+0x80]
  43bc79:	call   0x403150
  43bc7e:	nop
  43bc7f:	lea    rdx,[rsp+0x80]
  43bc87:	mov    rcx,QWORD PTR [rsp+0x90]
  43bc8f:	call   0x4070b4
  43bc94:	cmp    al,dil
  43bc97:	je     0x43bcca
  43bc99:	lea    r8,[rsp+0x80]
  43bca1:	lea    rdx,[rsp+0x70]
  43bca6:	lea    rcx,[rsp+0x38]
  43bcab:	call   0x43b83c
  43bcb0:	nop
  43bcb1:	mov    rdx,rax
  43bcb4:	lea    rcx,[rsp+0x20]
  43bcb9:	call   0x40b1a0
  43bcbe:	nop
  43bcbf:	mov    rcx,QWORD PTR [rsp+0x38]
  43bcc4:	call   0x40215c
  43bcc9:	nop
  43bcca:	mov    rcx,QWORD PTR [rsp+0x80]
  43bcd2:	call   0x40215c
  43bcd7:	nop
  43bcd8:	mov    rcx,QWORD PTR [rsp+0x90]
  43bce0:	call   0x40215c
  43bce5:	mov    rdx,r14
  43bce8:	lea    rcx,[rsp+0x20]
  43bced:	call   0x40b0b8
  43bcf2:	nop
  43bcf3:	mov    rcx,QWORD PTR [rsp+0x70]
  43bcf8:	call   0x40215c
  43bcfd:	nop
  43bcfe:	mov    rcx,QWORD PTR [rsp+0x60]
  43bd03:	call   0x40215c
  43bd08:	mov    rcx,QWORD PTR [rsp+0x50]
  43bd0d:	call   0x40215c
  43bd12:	nop
  43bd13:	lea    rcx,[rsp+0x20]
  43bd18:	call   0x40b028
  43bd1d:	xor    eax,eax
  43bd1f:	jmp    0x43bfe2
  43bd24:	mov    rcx,QWORD PTR [rsp+0x60]
  43bd29:	call   0x40215c
  43bd2e:	mov    rcx,QWORD PTR [rsp+0x50]
  43bd33:	call   0x40215c
  43bd38:	jmp    0x43bdd5
  43bd3d:	cmp    ebx,0x5a
  43bd40:	jne    0x43bdd5
  43bd46:	cmp    edx,DWORD PTR [rcx+0x60]
  43bd49:	jne    0x43bdaf
  43bd4b:	mov    eax,DWORD PTR [rcx+0x64]
  43bd4e:	lea    rcx,[rax+rax*2]
  43bd52:	mov    rax,QWORD PTR [r13+0x50]
  43bd56:	mov    eax,DWORD PTR [rax+rcx*8+0x10]
  43bd5a:	lea    rcx,[rax+rax*4]
  43bd5e:	mov    rax,QWORD PTR [r8]
  43bd61:	mov    r8d,DWORD PTR [rax+rcx*4+0x4]
  43bd66:	lea    rdx,[rsp+0x38]
  43bd6b:	mov    rcx,QWORD PTR [r13+0xc0]
  43bd72:	call   0x41fd40
  43bd77:	nop
  43bd78:	mov    rdx,rax
  43bd7b:	lea    rcx,[rsp+0x20]
  43bd80:	call   0x40b1a0
  43bd85:	nop
  43bd86:	mov    rcx,QWORD PTR [rsp+0x38]
  43bd8b:	call   0x40215c
  43bd90:	mov    rdx,r14
  43bd93:	lea    rcx,[rsp+0x20]
  43bd98:	call   0x40b0b8
  43bd9d:	nop
  43bd9e:	lea    rcx,[rsp+0x20]
  43bda3:	call   0x40b028
  43bda8:	xor    eax,eax
  43bdaa:	jmp    0x43bfe2
  43bdaf:	cmp    DWORD PTR [r12+rsi*4+0x4],edi
  43bdb4:	jl     0x43bdd5
  43bdb6:	mov    rdx,r9
  43bdb9:	lea    rcx,[rsp+0x20]
  43bdbe:	call   0x40b0b8
  43bdc3:	nop
  43bdc4:	lea    rcx,[rsp+0x20]
  43bdc9:	call   0x40b028
  43bdce:	xor    eax,eax
  43bdd0:	jmp    0x43bfe2
  43bdd5:	cmp    BYTE PTR [r12+rsi*4+0x3],dil
  43bdda:	je     0x43be1b
  43bddc:	cmp    ebx,0x6
  43bddf:	je     0x43be1b
  43bde1:	cmp    ebx,0x3
  43bde4:	je     0x43be20
  43bde6:	cmp    ebx,0x3f
  43bde9:	je     0x43be1b
  43bdeb:	cmp    ebx,0x7
  43bdee:	je     0x43be0a
  43bdf0:	cmp    ebx,0x15
  43bdf3:	jne    0x43bfc1
  43bdf9:	mov    dl,0x1
  43bdfb:	lea    rcx,[rsp+0x20]
  43be00:	call   0x40b254
  43be05:	jmp    0x43bfc1
  43be0a:	xor    edx,edx
  43be0c:	lea    rcx,[rsp+0x20]
  43be11:	call   0x40b2b4
  43be16:	jmp    0x43bfc1
  43be1b:	cmp    ebx,0x3
  43be1e:	jne    0x43be49
  43be20:	mov    eax,DWORD PTR [r12+rsi*4+0xc]
  43be25:	cmp    eax,edi
  43be27:	jl     0x43be49
  43be29:	mov    rdx,rax
  43be2c:	mov    rax,QWORD PTR [r13+0xf0]
  43be33:	mov    rcx,QWORD PTR [rax]
  43be36:	mov    rdx,QWORD PTR [rcx+rdx*8]
  43be3a:	lea    rcx,[rsp+0x20]
  43be3f:	call   0x40b1a0
  43be44:	jmp    0x43bfc1
  43be49:	cmp    ebx,0x32
  43be4c:	jne    0x43be60
  43be4e:	cmp    DWORD PTR [r12+rsi*4+0xc],edi
  43be53:	jl     0x43be60
  43be55:	cmp    BYTE PTR [r12+rsi*4+0x10],dil
  43be5a:	jne    0x43bfc1
  43be60:	cmp    BYTE PTR [r12+rsi*4+0x2],dil
  43be65:	jne    0x43be7a
  43be67:	cmp    BYTE PTR [r13+0xfa],dil
  43be6e:	je     0x43bec8
  43be70:	cmp    ebx,0x3
  43be73:	je     0x43be7a
  43be75:	cmp    ebx,0x3f
  43be78:	jne    0x43bec8
  43be7a:	mov    edx,DWORD PTR [r12+rsi*4+0x8]
  43be7f:	cmp    edx,0xffffffff
  43be82:	je     0x43bec8
  43be84:	mov    r10,QWORD PTR [r13+0xd8]
  43be8b:	cmp    r10,rdi
  43be8e:	je     0x43bec8
  43be90:	mov    rax,QWORD PTR [r13+0xe0]
  43be97:	cmp    rax,rdi
  43be9a:	je     0x43bea6
  43be9c:	mov    rax,QWORD PTR [rax]
  43be9f:	mov    rcx,QWORD PTR [rax+rdx*8]
  43bea3:	mov    edx,DWORD PTR [rcx+0x28]
  43bea6:	mov    rax,QWORD PTR [r10]
  43bea9:	mov    r9,r14
  43beac:	mov    r8d,ebx
  43beaf:	mov    rcx,r10
  43beb2:	call   QWORD PTR [rax+0x30]
  43beb5:	mov    ebx,eax
  43beb7:	lea    rcx,[rsp+0x20]
  43bebc:	call   0x40b028
  43bec1:	mov    eax,ebx
  43bec3:	jmp    0x43bfe2
  43bec8:	mov    r8d,DWORD PTR [r12+rsi*4+0x4]
  43becd:	cmp    r8d,0xffffffff
  43bed1:	je     0x43bfc1
  43bed7:	mov    r9,QWORD PTR [r13+0xc0]
  43bede:	mov    rax,QWORD PTR [r9+0x30]
  43bee2:	mov    rdx,QWORD PTR [rax+r8*8]
  43bee6:	sub    ebx,0x3
  43bee9:	je     0x43bf9b
  43beef:	sub    ebx,0x3
  43bef2:	je     0x43bf86
  43bef8:	dec    ebx
  43befa:	je     0x43bf6a
  43befc:	sub    ebx,0x2
  43beff:	je     0x43bf5b
  43bf01:	dec    ebx
  43bf03:	je     0x43bf4b
  43bf05:	dec    ebx
  43bf07:	je     0x43bf3b
  43bf09:	dec    ebx
  43bf0b:	je     0x43bf28
  43bf0d:	cmp    ebx,0x33
  43bf10:	jne    0x43bfc1
  43bf16:	mov    dl,BYTE PTR [rdx+0x60]
  43bf19:	lea    rcx,[rsp+0x20]
  43bf1e:	call   0x40b254
  43bf23:	jmp    0x43bfc1
  43bf28:	add    rdx,0x18
  43bf2c:	lea    rcx,[rsp+0x20]
  43bf31:	call   0x40b2e0
  43bf36:	jmp    0x43bfc1
  43bf3b:	add    rdx,0x10
  43bf3f:	lea    rcx,[rsp+0x20]
  43bf44:	call   0x40b2e0
  43bf49:	jmp    0x43bfc1
  43bf4b:	add    rdx,0x8
  43bf4f:	lea    rcx,[rsp+0x20]
  43bf54:	call   0x40b2e0
  43bf59:	jmp    0x43bfc1
  43bf5b:	mov    edx,DWORD PTR [rdx+0x50]
  43bf5e:	lea    rcx,[rsp+0x20]
  43bf63:	call   0x40b288
  43bf68:	jmp    0x43bfc1
  43bf6a:	mov    eax,DWORD PTR [rdx+0x50]
  43bf6d:	shr    eax,0x4
  43bf70:	test   al,0x1
  43bf72:	jne    0x43bf77
  43bf74:	mov    rdi,QWORD PTR [rdx]
  43bf77:	mov    rdx,rdi
  43bf7a:	lea    rcx,[rsp+0x20]
  43bf7f:	call   0x40b2b4
  43bf84:	jmp    0x43bfc1
  43bf86:	mov    edx,DWORD PTR [rdx+0x50]
  43bf89:	shr    edx,0x4
  43bf8c:	and    dl,0x1
  43bf8f:	lea    rcx,[rsp+0x20]
  43bf94:	call   0x40b254
  43bf99:	jmp    0x43bfc1
  43bf9b:	lea    rdx,[rsp+0x38]
  43bfa0:	mov    rcx,r9
  43bfa3:	call   0x41fd40
  43bfa8:	nop
  43bfa9:	mov    rdx,rax
  43bfac:	lea    rcx,[rsp+0x20]
  43bfb1:	call   0x40b1a0
  43bfb6:	nop
  43bfb7:	mov    rcx,QWORD PTR [rsp+0x38]
  43bfbc:	call   0x40215c
  43bfc1:	mov    rdx,r14
  43bfc4:	lea    rcx,[rsp+0x20]
  43bfc9:	call   0x40b0b8
  43bfce:	nop
  43bfcf:	lea    rcx,[rsp+0x20]
  43bfd4:	call   0x40b028
  43bfd9:	xor    eax,eax
  43bfdb:	jmp    0x43bfe2
  43bfdd:	mov    eax,0x8007000e
  43bfe2:	add    rsp,0xb0
  43bfe9:	pop    r15
  43bfeb:	pop    r14
  43bfed:	pop    r13
  43bfef:	pop    r12
  43bff1:	pop    rdi
  43bff2:	pop    rsi
  43bff3:	pop    rbx
  43bff4:	ret    
  43bff5:	int3   
  43bff6:	int3   
  43bff7:	int3   
  43bff8:	int3   
  43bff9:	int3   
  43bffa:	int3   
  43bffb:	int3   
  43bffc:	int3   
  43bffd:	int3   
  43bffe:	int3   
  43bfff:	int3   
  43c000:	int3   
  43c001:	int3   
  43c002:	int3   
  43c003:	int3   
  43c004:	rex.W push rbp
  43c006:	sub    rsp,0x20
  43c00a:	mov    rbp,rdx
  43c00d:	lea    rcx,[rbp+0x20]
  43c011:	call   0x40b830
  43c016:	add    rsp,0x20
  43c01a:	pop    rbp
  43c01b:	ret    
  43c01c:	int3   
  43c01d:	int3   
  43c01e:	int3   
  43c01f:	int3   
  43c020:	int3   
  43c021:	int3   
  43c022:	int3   
  43c023:	int3   
  43c024:	rex.W push rbp
  43c026:	sub    rsp,0x20
  43c02a:	mov    rbp,rdx
  43c02d:	lea    rcx,[rbp+0x48]
  43c031:	add    rcx,0x8
  43c035:	call   0x401000
  43c03a:	add    rsp,0x20
  43c03e:	pop    rbp
  43c03f:	ret    
  43c040:	int3   
  43c041:	int3   
  43c042:	int3   
  43c043:	int3   
  43c044:	rex.W push rbp
  43c046:	sub    rsp,0x20
  43c04a:	mov    rbp,rdx
  43c04d:	lea    rcx,[rbp+0x48]
  43c051:	call   0x412650
  43c056:	add    rsp,0x20
  43c05a:	pop    rbp
  43c05b:	ret    
  43c05c:	int3   
  43c05d:	int3   
  43c05e:	int3   
  43c05f:	int3   
  43c060:	int3   
  43c061:	int3   
  43c062:	int3   
  43c063:	int3   
  43c064:	rex.W push rbp
  43c066:	sub    rsp,0x20
  43c06a:	mov    rbp,rdx
  43c06d:	lea    rcx,[rbp+0x70]
  43c071:	call   0x401000
  43c076:	add    rsp,0x20
  43c07a:	pop    rbp
  43c07b:	ret    
  43c07c:	int3   
  43c07d:	int3   
  43c07e:	int3   
  43c07f:	int3   
  43c080:	int3   
  43c081:	int3   
  43c082:	int3   
  43c083:	int3   
  43c084:	rex.W push rbp
  43c086:	sub    rsp,0x20
  43c08a:	mov    rbp,rdx
  43c08d:	lea    rcx,[rbp+0x90]
  43c094:	call   0x401000
  43c099:	add    rsp,0x20
  43c09d:	pop    rbp
  43c09e:	ret    
  43c09f:	int3   
  43c0a0:	int3   
  43c0a1:	int3   
  43c0a2:	int3   
  43c0a3:	int3   
  43c0a4:	rex.W push rbp
  43c0a6:	sub    rsp,0x20
  43c0aa:	mov    rbp,rdx
  43c0ad:	lea    rcx,[rbp+0x80]
  43c0b4:	call   0x401000
  43c0b9:	add    rsp,0x20
  43c0bd:	pop    rbp
  43c0be:	ret    
  43c0bf:	int3   
  43c0c0:	int3   
  43c0c1:	int3   
  43c0c2:	int3   
  43c0c3:	int3   
  43c0c4:	rex.W push rbp
  43c0c6:	sub    rsp,0x20
  43c0ca:	mov    rbp,rdx
  43c0cd:	lea    rcx,[rbp+0x38]
  43c0d1:	call   0x401000
  43c0d6:	add    rsp,0x20
  43c0da:	pop    rbp
  43c0db:	ret    
  43c0dc:	int3   
  43c0dd:	int3   
  43c0de:	int3   
  43c0df:	int3   
  43c0e0:	int3   
  43c0e1:	int3   
  43c0e2:	int3   
  43c0e3:	int3   
  43c0e4:	rex.W push rbp
  43c0e6:	sub    rsp,0x20
  43c0ea:	mov    rbp,rdx
  43c0ed:	lea    rcx,[rbp+0x38]
  43c0f1:	call   0x401000
  43c0f6:	add    rsp,0x20
  43c0fa:	pop    rbp
  43c0fb:	ret    
  43c0fc:	int3   
  43c0fd:	int3   
  43c0fe:	int3   
  43c0ff:	int3   
  43c100:	int3   
  43c101:	int3   
  43c102:	int3   
  43c103:	int3   
  43c104:	rex.W push rbp
  43c106:	sub    rsp,0x20
  43c10a:	mov    rbp,rdx
  43c10d:	lea    rcx,[rbp+0x38]
  43c111:	call   0x401000
  43c116:	add    rsp,0x20
  43c11a:	pop    rbp
  43c11b:	ret    
  43c11c:	int3   
  43c11d:	int3   
  43c11e:	int3   
  43c11f:	int3   
  43c120:	int3   
  43c121:	int3   
  43c122:	int3   
  43c123:	int3   
  43c124:	mov    QWORD PTR [rsp+0x10],rdx
  43c129:	push   rbp
  43c12a:	sub    rsp,0x20
  43c12e:	mov    rbp,rdx
  43c131:	lea    rax,[rip+0xfffffffffffffea5]        # 0x43bfdd
  43c138:	jmp    0x43c13a
  43c13a:	add    rsp,0x20
  43c13e:	pop    rbp
  43c13f:	ret    
  43c140:	int3   
  43c141:	int3   
  43c142:	int3   
  43c143:	int3   
  43c144:	rex.W push rbx
  43c146:	push   rsi
  43c147:	push   rdi
  43c148:	push   r12
  43c14a:	mov    rax,rsp
  43c14d:	sub    rsp,0x88
  43c154:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
  43c15d:	mov    r12d,r9d
  43c160:	mov    edi,r8d
  43c163:	mov    ebx,edx
  43c165:	mov    rsi,rcx
  43c168:	mov    BYTE PTR [rax+0x30],0x0
  43c16c:	cmp    edx,0x3
  43c16f:	jne    0x43c228
  43c175:	lea    rcx,[rax-0x48]
  43c179:	call   0x403150
  43c17e:	nop
  43c17f:	cmp    edi,0xffffffff
  43c182:	je     0x43c1ed
  43c184:	mov    rcx,QWORD PTR [rsi+0xe0]
  43c18b:	lea    rbx,[rdi+rdi*4]
  43c18f:	mov    rdi,QWORD PTR [rcx]
  43c192:	mov    r8d,DWORD PTR [rdi+rbx*4+0x4]
  43c197:	cmp    r8d,0xffffffff
  43c19b:	je     0x43c1ed
  43c19d:	lea    rdx,[rsp+0x50]
  43c1a2:	mov    rcx,QWORD PTR [rsi+0xb8]
  43c1a9:	call   0x41fd40
  43c1ae:	nop
  43c1af:	mov    rdx,rax
  43c1b2:	lea    rcx,[rsp+0x40]
  43c1b7:	call   0x4032f8
  43c1bc:	nop
  43c1bd:	mov    rcx,QWORD PTR [rsp+0x50]
  43c1c2:	call   0x40215c
  43c1c7:	mov    r11d,DWORD PTR [rdi+rbx*4+0x4]
  43c1cc:	mov    rax,QWORD PTR [rsi+0xb8]
  43c1d3:	mov    rcx,QWORD PTR [rax+0x30]
  43c1d7:	mov    rax,QWORD PTR [rcx+r11*8]
  43c1db:	mov    edx,DWORD PTR [rax+0x50]
  43c1de:	shr    edx,0x4
  43c1e1:	and    dl,0x1
  43c1e4:	mov    BYTE PTR [rsp+0xb8],dl
  43c1eb:	jmp    0x43c1f4
  43c1ed:	mov    dl,BYTE PTR [rsp+0xb8]
  43c1f4:	mov    eax,DWORD PTR [rsp+0x48]
  43c1f8:	neg    eax
  43c1fa:	sbb    r8,r8
  43c1fd:	and    r8,QWORD PTR [rsp+0x40]
  43c202:	mov    rcx,QWORD PTR [rsi+0xb0]
  43c209:	mov    rax,QWORD PTR [rcx]
  43c20c:	mov    r9b,dl
  43c20f:	mov    edx,r12d
  43c212:	call   QWORD PTR [rax+0x58]
  43c215:	mov    ebx,eax
  43c217:	mov    rcx,QWORD PTR [rsp+0x40]
  43c21c:	call   0x40215c
  43c221:	mov    eax,ebx
  43c223:	jmp    0x43c346
  43c228:	lea    rcx,[rsp+0x30]
  43c22d:	call   0x403150
  43c232:	nop
  43c233:	mov    QWORD PTR [rsp+0x20],0x0
  43c23c:	cmp    ebx,0x1
  43c23f:	jne    0x43c2e3
  43c245:	cmp    edi,0xffffffff
  43c248:	je     0x43c30a
  43c24e:	mov    rax,QWORD PTR [rsi+0xd8]
  43c255:	test   rax,rax
  43c258:	je     0x43c279
  43c25a:	mov    rax,QWORD PTR [rax]
  43c25d:	mov    rdx,QWORD PTR [rax+rdi*8]
  43c261:	mov    rbx,QWORD PTR [rdx+0x10]
  43c265:	mov    QWORD PTR [rsp+0x20],rbx
  43c26a:	mov    al,BYTE PTR [rdx+0x20]
  43c26d:	mov    BYTE PTR [rsp+0xb8],al
  43c274:	jmp    0x43c305
  43c279:	mov    rcx,QWORD PTR [rsi+0xc8]
  43c280:	test   rcx,rcx
  43c283:	je     0x43c30a
  43c289:	lea    r8,[rsp+0x30]
  43c28e:	mov    edx,edi
  43c290:	call   0x42c2bc
  43c295:	mov    ebx,eax
  43c297:	test   eax,eax
  43c299:	je     0x43c2ac
  43c29b:	mov    rcx,QWORD PTR [rsp+0x30]
  43c2a0:	call   0x40215c
  43c2a5:	mov    eax,ebx
  43c2a7:	jmp    0x43c346
  43c2ac:	mov    rbx,QWORD PTR [rsp+0x30]
  43c2b1:	mov    QWORD PTR [rsp+0x20],rbx
  43c2b6:	mov    rax,QWORD PTR [rsi+0xc8]
  43c2bd:	lea    r8,[rsp+0xb8]
  43c2c5:	mov    edx,edi
  43c2c7:	mov    rcx,QWORD PTR [rax]
  43c2ca:	call   0x429804
  43c2cf:	mov    edi,eax
  43c2d1:	test   eax,eax
  43c2d3:	je     0x43c305
  43c2d5:	mov    rcx,QWORD PTR [rsp+0x30]
  43c2da:	call   0x40215c
  43c2df:	mov    eax,edi
  43c2e1:	jmp    0x43c346
  43c2e3:	cmp    ebx,0x2
  43c2e6:	jne    0x43c30a
  43c2e8:	mov    WORD PTR [rsp+0x60],0x23
  43c2ef:	lea    rdx,[rsp+0x62]
  43c2f4:	mov    ecx,edi
  43c2f6:	call   0x401b10
  43c2fb:	lea    rbx,[rsp+0x60]
  43c300:	mov    QWORD PTR [rsp+0x20],rbx
  43c305:	test   rbx,rbx
  43c308:	jne    0x43c316
  43c30a:	lea    rbx,[rip+0x13613]        # 0x44f924
  43c311:	mov    QWORD PTR [rsp+0x20],rbx
  43c316:	mov    rcx,QWORD PTR [rsi+0xb0]
  43c31d:	mov    rax,QWORD PTR [rcx]
  43c320:	mov    r9b,BYTE PTR [rsp+0xb8]
  43c328:	mov    r8,rbx
  43c32b:	mov    edx,r12d
  43c32e:	call   QWORD PTR [rax+0x58]
  43c331:	mov    ebx,eax
  43c333:	mov    rcx,QWORD PTR [rsp+0x30]
  43c338:	call   0x40215c
  43c33d:	mov    eax,ebx
  43c33f:	jmp    0x43c346
  43c341:	mov    eax,0x8007000e
  43c346:	add    rsp,0x88
  43c34d:	pop    r12
  43c34f:	pop    rdi
  43c350:	pop    rsi
  43c351:	pop    rbx
  43c352:	ret    
  43c353:	int3   
  43c354:	rex.W push rbp
  43c356:	sub    rsp,0x20
  43c35a:	mov    rbp,rdx
  43c35d:	lea    rcx,[rbp+0x40]
  43c361:	call   0x401000
  43c366:	add    rsp,0x20
  43c36a:	pop    rbp
  43c36b:	ret    
  43c36c:	int3   
  43c36d:	int3   
  43c36e:	int3   
  43c36f:	int3   
  43c370:	int3   
  43c371:	int3   
  43c372:	int3   
  43c373:	int3   
  43c374:	rex.W push rbp
  43c376:	sub    rsp,0x20
  43c37a:	mov    rbp,rdx
  43c37d:	lea    rcx,[rbp+0x50]
  43c381:	call   0x401000
  43c386:	add    rsp,0x20
  43c38a:	pop    rbp
  43c38b:	ret    
  43c38c:	int3   
  43c38d:	int3   
  43c38e:	int3   
  43c38f:	int3   
  43c390:	int3   
  43c391:	int3   
  43c392:	int3   
  43c393:	int3   
  43c394:	rex.W push rbp
  43c396:	sub    rsp,0x20
  43c39a:	mov    rbp,rdx
  43c39d:	lea    rcx,[rbp+0x30]
  43c3a1:	call   0x401000
  43c3a6:	add    rsp,0x20
  43c3aa:	pop    rbp
  43c3ab:	ret    
  43c3ac:	int3   
  43c3ad:	int3   
  43c3ae:	int3   
  43c3af:	int3   
  43c3b0:	int3   
  43c3b1:	int3   
  43c3b2:	int3   
  43c3b3:	int3   
  43c3b4:	mov    QWORD PTR [rsp+0x10],rdx
  43c3b9:	push   rbp
  43c3ba:	sub    rsp,0x20
  43c3be:	mov    rbp,rdx
  43c3c1:	lea    rax,[rip+0xffffffffffffff79]        # 0x43c341
  43c3c8:	jmp    0x43c3ca
  43c3ca:	add    rsp,0x20
  43c3ce:	pop    rbp
  43c3cf:	ret    
  43c3d0:	int3   
  43c3d1:	int3   
  43c3d2:	int3   
  43c3d3:	int3   
  43c3d4:	rex.W push rbx
  43c3d6:	push   rsi
  43c3d7:	push   rdi
  43c3d8:	push   r12
  43c3da:	push   r13
  43c3dc:	push   r14
  43c3de:	sub    rsp,0x78
  43c3e2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  43c3eb:	mov    r14d,r9d
  43c3ee:	mov    r12d,r8d
  43c3f1:	mov    esi,edx
  43c3f3:	mov    r13,rcx
  43c3f6:	xor    ebx,ebx
  43c3f8:	mov    BYTE PTR [rsp+0x20],bl
  43c3fc:	lea    rcx,[rsp+0x38]
  43c401:	call   0x403150
  43c406:	nop
  43c407:	mov    rdi,rbx
  43c40a:	mov    QWORD PTR [rsp+0x28],rbx
  43c40f:	cmp    esi,0x3
  43c412:	jne    0x43c428
  43c414:	mov    rcx,QWORD PTR [rsp+0x38]
  43c419:	call   0x40215c
  43c41e:	mov    eax,0x80004005
  43c423:	jmp    0x43c51b
  43c428:	cmp    esi,0x1
  43c42b:	jne    0x43c4c6
  43c431:	cmp    r12d,0xffffffff
  43c435:	je     0x43c4e9
  43c43b:	mov    rax,QWORD PTR [r13+0xd0]
  43c442:	cmp    rax,rbx
  43c445:	je     0x43c459
  43c447:	mov    rax,QWORD PTR [rax]
  43c44a:	mov    rcx,QWORD PTR [rax+r12*8]
  43c44e:	mov    rdi,QWORD PTR [rcx+0x10]
  43c452:	mov    QWORD PTR [rsp+0x28],rdi
  43c457:	jmp    0x43c493
  43c459:	mov    rcx,QWORD PTR [r13+0xc0]
  43c460:	cmp    rcx,rbx
  43c463:	je     0x43c493
  43c465:	lea    r8,[rsp+0x38]
  43c46a:	mov    edx,r12d
  43c46d:	call   0x42c2bc
  43c472:	mov    edi,eax
  43c474:	cmp    eax,ebx
  43c476:	je     0x43c489
  43c478:	mov    rcx,QWORD PTR [rsp+0x38]
  43c47d:	call   0x40215c
  43c482:	mov    eax,edi
  43c484:	jmp    0x43c51b
  43c489:	mov    rdi,QWORD PTR [rsp+0x38]
  43c48e:	mov    QWORD PTR [rsp+0x28],rdi
  43c493:	mov    rcx,QWORD PTR [r13+0xc8]
  43c49a:	cmp    rcx,rbx
  43c49d:	je     0x43c4e9
  43c49f:	lea    r9,[rsp+0x20]
  43c4a4:	mov    r8d,0xf
  43c4aa:	mov    edx,r12d
  43c4ad:	call   0x429798
  43c4b2:	mov    esi,eax
  43c4b4:	cmp    eax,ebx
  43c4b6:	je     0x43c4e9
  43c4b8:	mov    rcx,QWORD PTR [rsp+0x38]
  43c4bd:	call   0x40215c
  43c4c2:	mov    eax,esi
  43c4c4:	jmp    0x43c51b
  43c4c6:	cmp    esi,0x2
  43c4c9:	jne    0x43c4e9
  43c4cb:	mov    WORD PTR [rsp+0x48],0x23
  43c4d2:	lea    rdx,[rsp+0x4a]
  43c4d7:	mov    ecx,r12d
  43c4da:	call   0x401b10
  43c4df:	lea    rdi,[rsp+0x48]
  43c4e4:	mov    QWORD PTR [rsp+0x28],rdi
  43c4e9:	cmp    BYTE PTR [rsp+0x20],bl
  43c4ed:	setne  bl
  43c4f0:	mov    rcx,QWORD PTR [r13+0xa8]
  43c4f7:	mov    rax,QWORD PTR [rcx]
  43c4fa:	mov    r9,rdi
  43c4fd:	mov    r8d,ebx
  43c500:	mov    edx,r14d
  43c503:	call   QWORD PTR [rax+0x50]
  43c506:	mov    ebx,eax
  43c508:	mov    rcx,QWORD PTR [rsp+0x38]
  43c50d:	call   0x40215c
  43c512:	mov    eax,ebx
  43c514:	jmp    0x43c51b
  43c516:	mov    eax,0x8007000e
  43c51b:	add    rsp,0x78
  43c51f:	pop    r14
  43c521:	pop    r13
  43c523:	pop    r12
  43c525:	pop    rdi
  43c526:	pop    rsi
  43c527:	pop    rbx
  43c528:	ret    
  43c529:	int3   
  43c52a:	int3   
  43c52b:	int3   
  43c52c:	int3   
  43c52d:	int3   
  43c52e:	int3   
  43c52f:	int3   
  43c530:	int3   
  43c531:	int3   
  43c532:	int3   
  43c533:	int3   
  43c534:	rex.W push rbp
  43c536:	sub    rsp,0x20
  43c53a:	mov    rbp,rdx
  43c53d:	lea    rcx,[rbp+0x38]
  43c541:	call   0x401000
  43c546:	add    rsp,0x20
  43c54a:	pop    rbp
  43c54b:	ret    
  43c54c:	int3   
  43c54d:	int3   
  43c54e:	int3   
  43c54f:	int3   
  43c550:	int3   
  43c551:	int3   
  43c552:	int3   
  43c553:	int3   
  43c554:	mov    QWORD PTR [rsp+0x10],rdx
  43c559:	push   rbp
  43c55a:	sub    rsp,0x20
  43c55e:	mov    rbp,rdx
  43c561:	lea    rax,[rip+0xffffffffffffffae]        # 0x43c516
  43c568:	jmp    0x43c56a
  43c56a:	add    rsp,0x20
  43c56e:	pop    rbp
  43c56f:	ret    
  43c570:	int3   
  43c571:	int3   
  43c572:	int3   
  43c573:	int3   
  43c574:	rex.W push rbx
  43c576:	push   rbp
  43c577:	push   rsi
  43c578:	push   rdi
  43c579:	sub    rsp,0x38
  43c57d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43c586:	mov    ebx,r8d
  43c589:	mov    rsi,rdx
  43c58c:	mov    rdi,rcx
  43c58f:	cmp    r8d,0x21
  43c593:	jne    0x43c603
  43c595:	lea    rbp,[rip+0x2c91c]        # 0x468eb8
  43c59c:	mov    QWORD PTR [rsp+0x78],rbp
  43c5a1:	mov    rcx,rbp
  43c5a4:	call   QWORD PTR [rip+0x10b16]        # 0x44d0c0
  43c5aa:	nop
  43c5ab:	xor    r8d,r8d
  43c5ae:	cmp    DWORD PTR [rdi+0x30],r8d
  43c5b2:	jbe    0x43c5fa
  43c5b4:	mov    rax,QWORD PTR [rdi+0x28]
  43c5b8:	cmp    DWORD PTR [rax],esi
  43c5ba:	je     0x43c5cb
  43c5bc:	inc    r8d
  43c5bf:	add    rax,0x4
  43c5c3:	cmp    r8d,DWORD PTR [rdi+0x30]
  43c5c7:	jb     0x43c5b8
  43c5c9:	jmp    0x43c5fa
  43c5cb:	mov    edx,r8d
  43c5ce:	mov    rax,QWORD PTR [rdi+0x38]
  43c5d2:	mov    rcx,QWORD PTR [rdi+0x78]
  43c5d6:	mov    r9,QWORD PTR [rcx]
  43c5d9:	mov    r8d,0x21
  43c5df:	mov    rdx,QWORD PTR [rax+rdx*8]
  43c5e3:	call   QWORD PTR [r9+0x40]
  43c5e7:	mov    edi,eax
  43c5e9:	test   eax,eax
  43c5eb:	je     0x43c5fa
  43c5ed:	mov    rcx,rbp
  43c5f0:	call   QWORD PTR [rip+0x10ac2]        # 0x44d0b8
  43c5f6:	mov    eax,edi
  43c5f8:	jmp    0x43c610
  43c5fa:	mov    rcx,rbp
  43c5fd:	call   QWORD PTR [rip+0x10ab5]        # 0x44d0b8
  43c603:	movzx  eax,bx
  43c606:	or     eax,0x80070000
  43c60b:	test   ebx,ebx
  43c60d:	cmovle eax,ebx
  43c610:	add    rsp,0x38
  43c614:	pop    rdi
  43c615:	pop    rsi
  43c616:	pop    rbp
  43c617:	pop    rbx
  43c618:	ret    
  43c619:	int3   
  43c61a:	int3   
  43c61b:	int3   
  43c61c:	int3   
  43c61d:	int3   
  43c61e:	int3   
  43c61f:	int3   
  43c620:	int3   
  43c621:	int3   
  43c622:	int3   
  43c623:	int3   
  43c624:	rex.W push rbp
  43c626:	sub    rsp,0x20
  43c62a:	mov    rbp,rdx
  43c62d:	lea    rcx,[rbp+0x78]
  43c631:	call   0x417d58
  43c636:	add    rsp,0x20
  43c63a:	pop    rbp
  43c63b:	ret    
  43c63c:	rex.W push rbx
  43c63e:	push   rbp
  43c63f:	push   rsi
  43c640:	push   rdi
  43c641:	sub    rsp,0x48
  43c645:	mov    r9,rcx
  43c648:	xor    ebp,ebp
  43c64a:	mov    ebx,DWORD PTR [r9+0x8]
  43c64e:	mov    ecx,ebp
  43c650:	cmp    ebx,ebp
  43c652:	je     0x43c69d
  43c654:	mov    rdi,QWORD PTR [r9]
  43c657:	mov    r10,QWORD PTR [rdx]
  43c65a:	lea    r8d,[rbx+rcx*1]
  43c65e:	shr    r8d,1
  43c661:	lea    rsi,[r8+r8*2]
  43c665:	cmp    r10,QWORD PTR [rdi+rsi*8]
  43c669:	jb     0x43c690
  43c66b:	ja     0x43c695
  43c66d:	mov    rax,QWORD PTR [rdx+0x8]
  43c671:	cmp    rax,QWORD PTR [rdi+rsi*8+0x8]
  43c676:	sbb    r11d,r11d
  43c679:	and    r11d,0xfffffffe
  43c67d:	inc    r11d
  43c680:	cmp    rax,QWORD PTR [rdi+rsi*8+0x8]
  43c685:	cmove  r11d,ebp
  43c689:	cmp    r11d,ebp
  43c68c:	je     0x43c6d2
  43c68e:	jge    0x43c695
  43c690:	mov    ebx,r8d
  43c693:	jmp    0x43c699
  43c695:	lea    ecx,[r8+0x1]
  43c699:	cmp    ecx,ebx
  43c69b:	jne    0x43c65a
  43c69d:	mov    rcx,QWORD PTR [rdx]
  43c6a0:	lea    rax,[rsp+0x20]
  43c6a5:	lea    r8,[rsp+0x20]
  43c6aa:	mov    QWORD PTR [rax],rcx
  43c6ad:	mov    rcx,QWORD PTR [rdx+0x8]
  43c6b1:	mov    QWORD PTR [rax+0x8],rcx
  43c6b5:	mov    rcx,QWORD PTR [rdx+0x10]
  43c6b9:	mov    edx,ebx
  43c6bb:	mov    QWORD PTR [rax+0x10],rcx
  43c6bf:	mov    rcx,r9
  43c6c2:	call   0x43b4e0
  43c6c7:	mov    eax,ebx
  43c6c9:	add    rsp,0x48
  43c6cd:	pop    rdi
  43c6ce:	pop    rsi
  43c6cf:	pop    rbp
  43c6d0:	pop    rbx
  43c6d1:	ret    
  43c6d2:	mov    eax,r8d
  43c6d5:	jmp    0x43c6c9
  43c6d7:	int3   
  43c6d8:	mov    QWORD PTR [rsp+0x8],rcx
  43c6dd:	push   rbx
  43c6de:	push   rdi
  43c6df:	sub    rsp,0x38
  43c6e3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43c6ec:	mov    rbx,rcx
  43c6ef:	xor    edi,edi
  43c6f1:	mov    DWORD PTR [rcx+0x48],edi
  43c6f4:	lea    rax,[rip+0x15595]        # 0x451c90
  43c6fb:	mov    QWORD PTR [rcx],rax
  43c6fe:	lea    rax,[rip+0x15563]        # 0x451c68
  43c705:	mov    QWORD PTR [rcx+0x8],rax
  43c709:	lea    rax,[rip+0x15528]        # 0x451c38
  43c710:	mov    QWORD PTR [rcx+0x10],rax
  43c714:	lea    rax,[rip+0x154e5]        # 0x451c00
  43c71b:	mov    QWORD PTR [rcx+0x18],rax
  43c71f:	lea    rax,[rip+0x154b2]        # 0x451bd8
  43c726:	mov    QWORD PTR [rcx+0x20],rax
  43c72a:	lea    rax,[rip+0x15487]        # 0x451bb8
  43c731:	mov    QWORD PTR [rcx+0x28],rax
  43c735:	lea    rax,[rip+0x1545c]        # 0x451b98
  43c73c:	mov    QWORD PTR [rcx+0x30],rax
  43c740:	lea    rax,[rip+0x15431]        # 0x451b78
  43c747:	mov    QWORD PTR [rcx+0x38],rax
  43c74b:	lea    rax,[rip+0x15416]        # 0x451b68
  43c752:	mov    QWORD PTR [rcx+0x40],rax
  43c756:	mov    QWORD PTR [rcx+0x50],rdi
  43c75a:	mov    DWORD PTR [rcx+0x58],edi
  43c75d:	mov    DWORD PTR [rcx+0x5c],edi
  43c760:	mov    DWORD PTR [rcx+0x60],0xffffffff
  43c767:	mov    QWORD PTR [rcx+0x68],rdi
  43c76b:	mov    DWORD PTR [rcx+0x70],edi
  43c76e:	mov    DWORD PTR [rcx+0x74],edi
  43c771:	mov    QWORD PTR [rcx+0x78],rdi
  43c775:	mov    DWORD PTR [rcx+0x80],edi
  43c77b:	mov    DWORD PTR [rcx+0x84],edi
  43c781:	mov    QWORD PTR [rcx+0x88],rdi
  43c788:	mov    DWORD PTR [rcx+0x90],edi
  43c78e:	mov    DWORD PTR [rcx+0x94],edi
  43c794:	add    rcx,0x98
  43c79b:	call   0x403150
  43c7a0:	nop
  43c7a1:	lea    rcx,[rbx+0xa8]
  43c7a8:	call   0x403150
  43c7ad:	nop
  43c7ae:	mov    QWORD PTR [rbx+0xb8],rdi
  43c7b5:	mov    QWORD PTR [rbx+0xc0],rdi
  43c7bc:	mov    QWORD PTR [rbx+0xc8],rdi
  43c7c3:	mov    QWORD PTR [rbx+0xd0],rdi
  43c7ca:	mov    QWORD PTR [rbx+0xd8],rdi
  43c7d1:	mov    QWORD PTR [rbx+0xe0],rdi
  43c7d8:	mov    QWORD PTR [rbx+0xe8],rdi
  43c7df:	mov    QWORD PTR [rbx+0xf0],rdi
  43c7e6:	mov    BYTE PTR [rbx+0xf8],dil
  43c7ed:	mov    BYTE PTR [rbx+0xf9],dil
  43c7f4:	mov    BYTE PTR [rbx+0xfa],dil
  43c7fb:	mov    BYTE PTR [rbx+0xfb],dil
  43c802:	mov    BYTE PTR [rbx+0xfc],dil
  43c809:	mov    BYTE PTR [rbx+0xfd],dil
  43c810:	mov    QWORD PTR [rbx+0x100],rdi
  43c817:	call   0x4126d8
  43c81c:	mov    BYTE PTR [rbx+0x4c],al
  43c81f:	mov    rax,rbx
  43c822:	add    rsp,0x38
  43c826:	pop    rdi
  43c827:	pop    rbx
  43c828:	ret    
  43c829:	int3   
  43c82a:	int3   
  43c82b:	int3   
  43c82c:	int3   
  43c82d:	int3   
  43c82e:	int3   
  43c82f:	int3   
  43c830:	int3   
  43c831:	int3   
  43c832:	int3   
  43c833:	int3   
  43c834:	int3   
  43c835:	int3   
  43c836:	int3   
  43c837:	int3   
  43c838:	rex.W push rbp
  43c83a:	sub    rsp,0x20
  43c83e:	mov    rbp,rdx
  43c841:	mov    rcx,QWORD PTR [rbp+0x50]
  43c845:	add    rcx,0x50
  43c849:	call   0x401000
  43c84e:	add    rsp,0x20
  43c852:	pop    rbp
  43c853:	ret    
  43c854:	int3   
  43c855:	int3   
  43c856:	int3   
  43c857:	int3   
  43c858:	rex.W push rbp
  43c85a:	sub    rsp,0x20
  43c85e:	mov    rbp,rdx
  43c861:	mov    rcx,QWORD PTR [rbp+0x50]
  43c865:	add    rcx,0x68
  43c869:	call   0x401000
  43c86e:	add    rsp,0x20
  43c872:	pop    rbp
  43c873:	ret    
  43c874:	int3   
  43c875:	int3   
  43c876:	int3   
  43c877:	int3   
  43c878:	rex.W push rbp
  43c87a:	sub    rsp,0x20
  43c87e:	mov    rbp,rdx
  43c881:	mov    rcx,QWORD PTR [rbp+0x50]
  43c885:	add    rcx,0x78
  43c889:	call   0x4047cc
  43c88e:	add    rsp,0x20
  43c892:	pop    rbp
  43c893:	ret    
  43c894:	int3   
  43c895:	int3   
  43c896:	int3   
  43c897:	int3   
  43c898:	rex.W push rbp
  43c89a:	sub    rsp,0x20
  43c89e:	mov    rbp,rdx
  43c8a1:	mov    rcx,QWORD PTR [rbp+0x50]
  43c8a5:	add    rcx,0x88
  43c8ac:	call   0x401000
  43c8b1:	add    rsp,0x20
  43c8b5:	pop    rbp
  43c8b6:	ret    
  43c8b7:	int3   
  43c8b8:	rex.W push rbp
  43c8ba:	sub    rsp,0x20
  43c8be:	mov    rbp,rdx
  43c8c1:	mov    rcx,QWORD PTR [rbp+0x50]
  43c8c5:	add    rcx,0x98
  43c8cc:	call   0x401000
  43c8d1:	add    rsp,0x20
  43c8d5:	pop    rbp
  43c8d6:	ret    
  43c8d7:	int3   
  43c8d8:	rex.W push rbp
  43c8da:	sub    rsp,0x20
  43c8de:	mov    rbp,rdx
  43c8e1:	mov    rcx,QWORD PTR [rbp+0x50]
  43c8e5:	add    rcx,0xa8
  43c8ec:	call   0x401000
  43c8f1:	add    rsp,0x20
  43c8f5:	pop    rbp
  43c8f6:	ret    
  43c8f7:	int3   
  43c8f8:	rex.W push rbp
  43c8fa:	sub    rsp,0x20
  43c8fe:	mov    rbp,rdx
  43c901:	mov    rcx,QWORD PTR [rbp+0x50]
  43c905:	add    rcx,0xd8
  43c90c:	call   0x4176b4
  43c911:	add    rsp,0x20
  43c915:	pop    rbp
  43c916:	ret    
  43c917:	int3   
  43c918:	rex.W push rbx
  43c91a:	push   rbp
  43c91b:	push   rsi
  43c91c:	push   rdi
  43c91d:	sub    rsp,0x28
  43c921:	mov    rsi,rdx
  43c924:	mov    rdi,r8
  43c927:	mov    rbx,rcx
  43c92a:	mov    QWORD PTR [r8],0x0
  43c931:	mov    ebp,0x10
  43c936:	lea    rdx,[rip+0x184b3]        # 0x454df0
  43c93d:	mov    r8,rbp
  43c940:	mov    rcx,rsi
  43c943:	call   0x44b786
  43c948:	test   eax,eax
  43c94a:	jne    0x43c954
  43c94c:	mov    QWORD PTR [rdi],rbx
  43c94f:	jmp    0x43ca41
  43c954:	lea    rdx,[rip+0x174bd]        # 0x453e18
  43c95b:	mov    r8,rbp
  43c95e:	mov    rcx,rsi
  43c961:	call   0x44b786
  43c966:	test   eax,eax
  43c968:	je     0x43c94c
  43c96a:	lea    rdx,[rip+0x17497]        # 0x453e08
  43c971:	mov    r8,rbp
  43c974:	mov    rcx,rsi
  43c977:	call   0x44b786
  43c97c:	test   eax,eax
  43c97e:	jne    0x43c989
  43c980:	lea    rdx,[rbx+0x8]
  43c984:	jmp    0x43ca32
  43c989:	lea    rdx,[rip+0x17508]        # 0x453e98
  43c990:	mov    r8,rbp
  43c993:	mov    rcx,rsi
  43c996:	call   0x44b786
  43c99b:	test   eax,eax
  43c99d:	jne    0x43c9a8
  43c99f:	lea    rdx,[rbx+0x10]
  43c9a3:	jmp    0x43ca32
  43c9a8:	lea    rdx,[rip+0x17499]        # 0x453e48
  43c9af:	mov    r8,rbp
  43c9b2:	mov    rcx,rsi
  43c9b5:	call   0x44b786
  43c9ba:	test   eax,eax
  43c9bc:	jne    0x43c9c4
  43c9be:	lea    rdx,[rbx+0x18]
  43c9c2:	jmp    0x43ca32
  43c9c4:	lea    rdx,[rip+0x1746d]        # 0x453e38
  43c9cb:	mov    r8,rbp
  43c9ce:	mov    rcx,rsi
  43c9d1:	call   0x44b786
  43c9d6:	test   eax,eax
  43c9d8:	jne    0x43c9e0
  43c9da:	lea    rdx,[rbx+0x20]
  43c9de:	jmp    0x43ca32
  43c9e0:	lea    rdx,[rip+0x173d1]        # 0x453db8
  43c9e7:	mov    r8,rbp
  43c9ea:	mov    rcx,rsi
  43c9ed:	call   0x44b786
  43c9f2:	test   eax,eax
  43c9f4:	jne    0x43c9fc
  43c9f6:	lea    rdx,[rbx+0x28]
  43c9fa:	jmp    0x43ca32
  43c9fc:	lea    rdx,[rip+0x173c5]        # 0x453dc8
  43ca03:	mov    r8,rbp
  43ca06:	mov    rcx,rsi
  43ca09:	call   0x44b786
  43ca0e:	test   eax,eax
  43ca10:	jne    0x43ca18
  43ca12:	lea    rdx,[rbx+0x30]
  43ca16:	jmp    0x43ca32
  43ca18:	lea    rdx,[rip+0x17389]        # 0x453da8
  43ca1f:	mov    r8,rbp
  43ca22:	mov    rcx,rsi
  43ca25:	call   0x44b786
  43ca2a:	test   eax,eax
  43ca2c:	jne    0x43ca48
  43ca2e:	lea    rdx,[rbx+0x38]
  43ca32:	mov    rax,rbx
  43ca35:	neg    rax
  43ca38:	sbb    rcx,rcx
  43ca3b:	and    rcx,rdx
  43ca3e:	mov    QWORD PTR [rdi],rcx
  43ca41:	inc    DWORD PTR [rbx+0x48]
  43ca44:	xor    eax,eax
  43ca46:	jmp    0x43ca4d
  43ca48:	mov    eax,0x80004002
  43ca4d:	add    rsp,0x28
  43ca51:	pop    rdi
  43ca52:	pop    rsi
  43ca53:	pop    rbp
  43ca54:	pop    rbx
  43ca55:	ret    
  43ca56:	int3   
  43ca57:	int3   
  43ca58:	inc    DWORD PTR [rcx+0x48]
  43ca5b:	mov    eax,DWORD PTR [rcx+0x48]
  43ca5e:	ret    
  43ca5f:	int3   
  43ca60:	sub    rcx,0x8
  43ca64:	jmp    0x43c918
  43ca69:	int3   
  43ca6a:	int3   
  43ca6b:	int3   
  43ca6c:	sub    rcx,0x8
  43ca70:	jmp    0x43ca58
  43ca75:	int3   
  43ca76:	int3   
  43ca77:	int3   
  43ca78:	sub    rcx,0x10
  43ca7c:	jmp    0x43c918
  43ca81:	int3   
  43ca82:	int3   
  43ca83:	int3   
  43ca84:	sub    rcx,0x10
  43ca88:	jmp    0x43ca58
  43ca8d:	int3   
  43ca8e:	int3   
  43ca8f:	int3   
  43ca90:	sub    rcx,0x10
  43ca94:	jmp    0x43b164
  43ca99:	int3   
  43ca9a:	int3   
  43ca9b:	int3   
  43ca9c:	sub    rcx,0x10
  43caa0:	jmp    0x43b1b4
  43caa5:	int3   
  43caa6:	int3   
  43caa7:	int3   
  43caa8:	sub    rcx,0x18
  43caac:	jmp    0x43c918
  43cab1:	int3   
  43cab2:	int3   
  43cab3:	int3   
  43cab4:	sub    rcx,0x18
  43cab8:	jmp    0x43ca58
  43cabd:	int3   
  43cabe:	int3   
  43cabf:	int3   
  43cac0:	sub    rcx,0x20
  43cac4:	jmp    0x43c918
  43cac9:	int3   
  43caca:	int3   
  43cacb:	int3   
  43cacc:	sub    rcx,0x20
  43cad0:	jmp    0x43ca58
  43cad5:	int3   
  43cad6:	int3   
  43cad7:	int3   
  43cad8:	sub    rcx,0x28
  43cadc:	jmp    0x43c918
  43cae1:	int3   
  43cae2:	int3   
  43cae3:	int3   
  43cae4:	sub    rcx,0x28
  43cae8:	jmp    0x43ca58
  43caed:	int3   
  43caee:	int3   
  43caef:	int3   
  43caf0:	sub    rcx,0x30
  43caf4:	jmp    0x43c918
  43caf9:	int3   
  43cafa:	int3   
  43cafb:	int3   
  43cafc:	sub    rcx,0x30
  43cb00:	jmp    0x43ca58
  43cb05:	int3   
  43cb06:	int3   
  43cb07:	int3   
  43cb08:	sub    rcx,0x38
  43cb0c:	jmp    0x43c918
  43cb11:	int3   
  43cb12:	int3   
  43cb13:	int3   
  43cb14:	sub    rcx,0x38
  43cb18:	jmp    0x43ca58
  43cb1d:	int3   
  43cb1e:	int3   
  43cb1f:	int3   
  43cb20:	mov    QWORD PTR [rsp+0x8],rcx
  43cb25:	push   rbx
  43cb26:	push   rbp
  43cb27:	push   rsi
  43cb28:	push   rdi
  43cb29:	sub    rsp,0x38
  43cb2d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43cb36:	mov    rbx,rcx
  43cb39:	mov    rcx,QWORD PTR [rcx+0xd8]
  43cb40:	test   rcx,rcx
  43cb43:	je     0x43cb4c
  43cb45:	mov    rax,QWORD PTR [rcx]
  43cb48:	call   QWORD PTR [rax+0x10]
  43cb4b:	nop
  43cb4c:	mov    rcx,QWORD PTR [rbx+0xa8]
  43cb53:	call   0x40215c
  43cb58:	nop
  43cb59:	mov    rcx,QWORD PTR [rbx+0x98]
  43cb60:	call   0x40215c
  43cb65:	nop
  43cb66:	mov    rcx,QWORD PTR [rbx+0x88]
  43cb6d:	call   0x40215c
  43cb72:	nop
  43cb73:	movsxd rsi,DWORD PTR [rbx+0x80]
  43cb7a:	mov    rdi,rsi
  43cb7d:	test   esi,esi
  43cb7f:	je     0x43cbae
  43cb81:	shl    rdi,0x3
  43cb85:	add    esi,0xffffffff
  43cb88:	sub    rdi,0x8
  43cb8c:	mov    rax,QWORD PTR [rbx+0x78]
  43cb90:	mov    rbp,QWORD PTR [rdi+rax*1]
  43cb94:	test   rbp,rbp
  43cb97:	je     0x43cbaa
  43cb99:	mov    rcx,QWORD PTR [rbp+0x0]
  43cb9d:	call   0x40215c
  43cba2:	mov    rcx,rbp
  43cba5:	call   0x40215c
  43cbaa:	test   esi,esi
  43cbac:	jne    0x43cb85
  43cbae:	mov    rcx,QWORD PTR [rbx+0x78]
  43cbb2:	call   0x40215c
  43cbb7:	nop
  43cbb8:	mov    rcx,QWORD PTR [rbx+0x68]
  43cbbc:	call   0x40215c
  43cbc1:	nop
  43cbc2:	mov    rcx,QWORD PTR [rbx+0x50]
  43cbc6:	add    rsp,0x38
  43cbca:	pop    rdi
  43cbcb:	pop    rsi
  43cbcc:	pop    rbp
  43cbcd:	pop    rbx
  43cbce:	jmp    0x40215c
  43cbd3:	int3   
  43cbd4:	int3   
  43cbd5:	int3   
  43cbd6:	int3   
  43cbd7:	int3   
  43cbd8:	int3   
  43cbd9:	int3   
  43cbda:	int3   
  43cbdb:	int3   
  43cbdc:	int3   
  43cbdd:	int3   
  43cbde:	int3   
  43cbdf:	int3   
  43cbe0:	rex.W push rbp
  43cbe2:	sub    rsp,0x20
  43cbe6:	mov    rbp,rdx
  43cbe9:	mov    rcx,QWORD PTR [rbp+0x60]
  43cbed:	add    rcx,0x50
  43cbf1:	call   0x401000
  43cbf6:	add    rsp,0x20
  43cbfa:	pop    rbp
  43cbfb:	ret    
  43cbfc:	int3   
  43cbfd:	int3   
  43cbfe:	int3   
  43cbff:	int3   
  43cc00:	rex.W push rbp
  43cc02:	sub    rsp,0x20
  43cc06:	mov    rbp,rdx
  43cc09:	mov    rcx,QWORD PTR [rbp+0x60]
  43cc0d:	add    rcx,0x68
  43cc11:	call   0x401000
  43cc16:	add    rsp,0x20
  43cc1a:	pop    rbp
  43cc1b:	ret    
  43cc1c:	int3   
  43cc1d:	int3   
  43cc1e:	int3   
  43cc1f:	int3   
  43cc20:	rex.W push rbp
  43cc22:	sub    rsp,0x20
  43cc26:	mov    rbp,rdx
  43cc29:	mov    rcx,QWORD PTR [rbp+0x60]
  43cc2d:	add    rcx,0x78
  43cc31:	call   0x4047cc
  43cc36:	add    rsp,0x20
  43cc3a:	pop    rbp
  43cc3b:	ret    
  43cc3c:	int3   
  43cc3d:	int3   
  43cc3e:	int3   
  43cc3f:	int3   
  43cc40:	rex.W push rbp
  43cc42:	sub    rsp,0x20
  43cc46:	mov    rbp,rdx
  43cc49:	mov    rcx,QWORD PTR [rbp+0x60]
  43cc4d:	add    rcx,0x88
  43cc54:	call   0x401000
  43cc59:	add    rsp,0x20
  43cc5d:	pop    rbp
  43cc5e:	ret    
  43cc5f:	int3   
  43cc60:	rex.W push rbp
  43cc62:	sub    rsp,0x20
  43cc66:	mov    rbp,rdx
  43cc69:	mov    rcx,QWORD PTR [rbp+0x60]
  43cc6d:	add    rcx,0x98
  43cc74:	call   0x401000
  43cc79:	add    rsp,0x20
  43cc7d:	pop    rbp
  43cc7e:	ret    
  43cc7f:	int3   
  43cc80:	rex.W push rbp
  43cc82:	sub    rsp,0x20
  43cc86:	mov    rbp,rdx
  43cc89:	mov    rcx,QWORD PTR [rbp+0x60]
  43cc8d:	add    rcx,0xa8
  43cc94:	call   0x401000
  43cc99:	add    rsp,0x20
  43cc9d:	pop    rbp
  43cc9e:	ret    
  43cc9f:	int3   
  43cca0:	mov    QWORD PTR [rsp+0x18],r8
  43cca5:	mov    DWORD PTR [rsp+0x10],edx
  43cca9:	push   rbx
  43ccaa:	push   rsi
  43ccab:	push   rdi
  43ccac:	push   r12
  43ccae:	push   r13
  43ccb0:	push   r14
  43ccb2:	push   r15
  43ccb4:	sub    rsp,0xa0
  43ccbb:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
  43ccc4:	mov    esi,r9d
  43ccc7:	mov    r14,r8
  43ccca:	mov    eax,edx
  43cccc:	mov    rdi,rcx
  43cccf:	mov    QWORD PTR [r8],0x0
  43ccd6:	mov    r15,rax
  43ccd9:	mov    rax,QWORD PTR [rcx+0xe0]
  43cce0:	lea    r12,[r15+r15*4]
  43cce4:	mov    r13,QWORD PTR [rax]
  43cce7:	cmp    BYTE PTR [r13+r12*4+0x0],0x0
  43cced:	jne    0x43ccf9
  43ccef:	mov    eax,0x80004005
  43ccf4:	jmp    0x43d175
  43ccf9:	mov    rcx,QWORD PTR [rcx+0xb0]
  43cd00:	mov    rax,QWORD PTR [rcx]
  43cd03:	call   QWORD PTR [rax+0x20]
  43cd06:	test   eax,eax
  43cd08:	jne    0x43d175
  43cd0e:	mov    r8d,DWORD PTR [r13+r12*4+0x4]
  43cd13:	test   r8d,r8d
  43cd16:	js     0x43cd32
  43cd18:	mov    rax,QWORD PTR [rdi+0xb8]
  43cd1f:	mov    rcx,QWORD PTR [rax+0x30]
  43cd23:	mov    rax,QWORD PTR [rcx+r8*8]
  43cd27:	mov    ebx,DWORD PTR [rax+0x50]
  43cd2a:	shr    ebx,0x4
  43cd2d:	and    bl,0x1
  43cd30:	jmp    0x43cd53
  43cd32:	mov    eax,DWORD PTR [r13+r12*4+0x8]
  43cd37:	test   eax,eax
  43cd39:	js     0x43cd51
  43cd3b:	mov    rdx,rax
  43cd3e:	mov    rax,QWORD PTR [rdi+0xd8]
  43cd45:	mov    rcx,QWORD PTR [rax]
  43cd48:	mov    rax,QWORD PTR [rcx+rdx*8]
  43cd4c:	mov    bl,BYTE PTR [rax+0x20]
  43cd4f:	jmp    0x43cd53
  43cd51:	xor    bl,bl
  43cd53:	cmp    BYTE PTR [r13+r12*4+0x3],0x0
  43cd59:	je     0x43ce78
  43cd5f:	lea    rcx,[rsp+0x30]
  43cd64:	call   0x403150
  43cd69:	nop
  43cd6a:	mov    eax,DWORD PTR [r13+r12*4+0x8]
  43cd6f:	xor    r15d,r15d
  43cd72:	cmp    eax,r15d
  43cd75:	jl     0x43cd98
  43cd77:	mov    rdx,rax
  43cd7a:	mov    rax,QWORD PTR [rdi+0xd8]
  43cd81:	mov    rcx,QWORD PTR [rax]
  43cd84:	mov    rdx,QWORD PTR [rcx+rdx*8]
  43cd88:	add    rdx,0x10
  43cd8c:	lea    rcx,[rsp+0x30]
  43cd91:	call   0x4032f8
  43cd96:	jmp    0x43cdcc
  43cd98:	mov    r8d,DWORD PTR [r13+r12*4+0x4]
  43cd9d:	cmp    r8d,r15d
  43cda0:	jl     0x43cdcc
  43cda2:	lea    rdx,[rsp+0x40]
  43cda7:	mov    rcx,QWORD PTR [rdi+0xb8]
  43cdae:	call   0x41fd40
  43cdb3:	nop
  43cdb4:	mov    rdx,rax
  43cdb7:	lea    rcx,[rsp+0x30]
  43cdbc:	call   0x4032f8
  43cdc1:	nop
  43cdc2:	mov    rcx,QWORD PTR [rsp+0x40]
  43cdc7:	call   0x40215c
  43cdcc:	mov    rcx,QWORD PTR [rdi+0xb0]
  43cdd3:	mov    rax,QWORD PTR [rcx]
  43cdd6:	mov    DWORD PTR [rsp+0x20],esi
  43cdda:	mov    r9b,0x1
  43cddd:	mov    r8b,bl
  43cde0:	mov    rdx,QWORD PTR [rsp+0x30]
  43cde5:	call   QWORD PTR [rax+0x30]
  43cde8:	mov    edi,eax
  43cdea:	cmp    eax,r15d
  43cded:	je     0x43ce00
  43cdef:	mov    rcx,QWORD PTR [rsp+0x30]
  43cdf4:	call   0x40215c
  43cdf9:	mov    eax,edi
  43cdfb:	jmp    0x43d175
  43ce00:	cmp    bl,r15b
  43ce03:	jne    0x43ce67
  43ce05:	mov    ecx,0x30
  43ce0a:	call   0x402130
  43ce0f:	mov    rbx,rax
  43ce12:	cmp    rax,r15
  43ce15:	je     0x43ce2b
  43ce17:	mov    DWORD PTR [rax+0x8],r15d
  43ce1b:	lea    rax,[rip+0x1145e]        # 0x44e280
  43ce22:	mov    QWORD PTR [rbx],rax
  43ce25:	mov    QWORD PTR [rbx+0x28],r15
  43ce29:	jmp    0x43ce2e
  43ce2b:	mov    rbx,r15
  43ce2e:	mov    QWORD PTR [rsp+0xf0],rbx
  43ce36:	cmp    rbx,r15
  43ce39:	je     0x43ce45
  43ce3b:	mov    rax,QWORD PTR [rbx]
  43ce3e:	mov    rcx,rbx
  43ce41:	call   QWORD PTR [rax+0x8]
  43ce44:	nop
  43ce45:	mov    QWORD PTR [rbx+0x10],r15
  43ce49:	mov    QWORD PTR [rbx+0x20],r15
  43ce4d:	mov    QWORD PTR [rbx+0x18],r15
  43ce51:	mov    rcx,QWORD PTR [rbx+0x28]
  43ce55:	cmp    rcx,r15
  43ce58:	je     0x43ce60
  43ce5a:	mov    rax,QWORD PTR [rcx]
  43ce5d:	call   QWORD PTR [rax+0x10]
  43ce60:	mov    QWORD PTR [rbx+0x28],r15
  43ce64:	mov    QWORD PTR [r14],rbx
  43ce67:	mov    rcx,QWORD PTR [rsp+0x30]
  43ce6c:	call   0x40215c
  43ce71:	xor    eax,eax
  43ce73:	jmp    0x43d175
  43ce78:	lea    rdx,[rsp+0x30]
  43ce7d:	mov    rcx,QWORD PTR [rdi+0xb8]
  43ce84:	call   0x41fd40
  43ce89:	mov    rdx,rax
  43ce8c:	mov    rcx,QWORD PTR [rdi+0xb0]
  43ce93:	mov    rax,QWORD PTR [rcx]
  43ce96:	mov    DWORD PTR [rsp+0x20],esi
  43ce9a:	xor    r9d,r9d
  43ce9d:	mov    r8b,bl
  43cea0:	mov    rdx,QWORD PTR [rdx]
  43cea3:	call   QWORD PTR [rax+0x30]
  43cea6:	mov    r14d,eax
  43cea9:	mov    rcx,QWORD PTR [rsp+0x30]
  43ceae:	call   0x40215c
  43ceb3:	test   r14d,r14d
  43ceb6:	je     0x43cec0
  43ceb8:	mov    eax,r14d
  43cebb:	jmp    0x43d175
  43cec0:	test   bl,bl
  43cec2:	je     0x43cecb
  43cec4:	xor    eax,eax
  43cec6:	jmp    0x43d175
  43cecb:	cmp    BYTE PTR [rdi+0xf1],0x0
  43ced2:	je     0x43cf29
  43ced4:	test   esi,esi
  43ced6:	je     0x43cee4
  43ced8:	cmp    esi,0x1
  43cedb:	je     0x43cee4
  43cedd:	xor    eax,eax
  43cedf:	jmp    0x43d175
  43cee4:	mov    ecx,0x10
  43cee9:	call   0x402130
  43ceee:	mov    rbx,rax
  43cef1:	test   rax,rax
  43cef4:	je     0x43cf09
  43cef6:	mov    DWORD PTR [rax+0x8],0x0
  43cefd:	lea    rax,[rip+0x12e1c]        # 0x44fd20
  43cf04:	mov    QWORD PTR [rbx],rax
  43cf07:	jmp    0x43cf0b
  43cf09:	xor    ebx,ebx
  43cf0b:	test   rbx,rbx
  43cf0e:	je     0x43cf19
  43cf10:	mov    rax,QWORD PTR [rbx]
  43cf13:	mov    rcx,rbx
  43cf16:	call   QWORD PTR [rax+0x8]
  43cf19:	mov    rax,QWORD PTR [rsp+0xf0]
  43cf21:	mov    QWORD PTR [rax],rbx
  43cf24:	jmp    0x43d16c
  43cf29:	mov    ecx,0x78
  43cf2e:	call   0x402130
  43cf33:	mov    QWORD PTR [rsp+0xe0],rax
  43cf3b:	test   rax,rax
  43cf3e:	je     0x43cf4d
  43cf40:	mov    rcx,rax
  43cf43:	call   0x40d02c
  43cf48:	mov    rsi,rax
  43cf4b:	jmp    0x43cf4f
  43cf4d:	xor    esi,esi
  43cf4f:	mov    QWORD PTR [rsp+0xe0],rsi
  43cf57:	test   rsi,rsi
  43cf5a:	je     0x43cf66
  43cf5c:	mov    rax,QWORD PTR [rsi]
  43cf5f:	mov    rcx,rsi
  43cf62:	call   QWORD PTR [rax+0x8]
  43cf65:	nop
  43cf66:	mov    al,BYTE PTR [rdi+0xf4]
  43cf6c:	mov    BYTE PTR [rsi+0x64],al
  43cf6f:	lea    rcx,[rdi+0x38]
  43cf73:	lea    rax,[rdi-0x8]
  43cf77:	neg    rax
  43cf7a:	sbb    rax,rax
  43cf7d:	and    rax,rcx
  43cf80:	mov    QWORD PTR [rsi+0x68],rax
  43cf84:	mov    QWORD PTR [rsi+0x70],r15
  43cf88:	mov    r8d,DWORD PTR [r13+r12*4+0x4]
  43cf8d:	lea    rdx,[rsp+0x30]
  43cf92:	mov    rcx,QWORD PTR [rdi+0xb8]
  43cf99:	call   0x41fd04
  43cf9e:	nop
  43cf9f:	lea    rcx,[rdi+0x60]
  43cfa3:	mov    r14d,DWORD PTR [rsp+0xe8]
  43cfab:	mov    edx,r14d
  43cfae:	call   0x4131dc
  43cfb3:	mov    ecx,0x10
  43cfb8:	call   0x402130
  43cfbd:	mov    QWORD PTR [rsp+0x40],rax
  43cfc2:	test   rax,rax
  43cfc5:	je     0x43cfd6
  43cfc7:	lea    rdx,[rsp+0x30]
  43cfcc:	mov    rcx,rax
  43cfcf:	call   0x403208
  43cfd4:	jmp    0x43cfd8
  43cfd6:	xor    eax,eax
  43cfd8:	lea    rcx,[rdi+0x70]
  43cfdc:	mov    rdx,rax
  43cfdf:	call   0x4010c8
  43cfe4:	mov    edx,DWORD PTR [r13+r12*4+0x4]
  43cfe9:	mov    rax,QWORD PTR [rdi+0xb8]
  43cff0:	mov    rcx,QWORD PTR [rax+0x30]
  43cff4:	mov    rax,QWORD PTR [rcx+rdx*8]
  43cff8:	cmp    QWORD PTR [rax+0x38],0x0
  43cffd:	jne    0x43d006
  43cfff:	cmp    QWORD PTR [rax+0x48],0x0
  43d004:	je     0x43d06d
  43d006:	lea    rcx,[rsi+0x28]
  43d00a:	mov    DWORD PTR [rsp+0x20],0x2200000
  43d012:	mov    r9d,0x3
  43d018:	lea    r8d,[r9-0x2]
  43d01c:	mov    rdx,QWORD PTR [rsp+0x30]
  43d021:	call   0x4093f4
  43d026:	test   al,al
  43d028:	jne    0x43d0c5
  43d02e:	mov    rax,QWORD PTR [rdi+0xb0]
  43d035:	mov    rbx,QWORD PTR [rax]
  43d038:	call   QWORD PTR [rip+0x10162]        # 0x44d1a0
  43d03e:	mov    r8d,eax
  43d041:	lea    rdx,[rsp+0x30]
  43d046:	mov    rcx,QWORD PTR [rdi+0xb0]
  43d04d:	call   QWORD PTR [rbx+0x38]
  43d050:	mov    ebx,eax
  43d052:	mov    rcx,QWORD PTR [rsp+0x30]
  43d057:	call   0x40215c
  43d05c:	nop
  43d05d:	mov    rdx,QWORD PTR [rsi]
  43d060:	mov    rcx,rsi
  43d063:	call   QWORD PTR [rdx+0x10]
  43d066:	mov    eax,ebx
  43d068:	jmp    0x43d175
  43d06d:	lea    rcx,[rsi+0x28]
  43d071:	mov    r8b,BYTE PTR [rdi+0xf0]
  43d078:	mov    rdx,QWORD PTR [rsp+0x30]
  43d07d:	call   0x409440
  43d082:	test   al,al
  43d084:	jne    0x43d0c5
  43d086:	mov    rax,QWORD PTR [rdi+0xb0]
  43d08d:	mov    rbx,QWORD PTR [rax]
  43d090:	call   QWORD PTR [rip+0x1010a]        # 0x44d1a0
  43d096:	mov    r8d,eax
  43d099:	lea    rdx,[rsp+0x30]
  43d09e:	mov    rcx,QWORD PTR [rdi+0xb0]
  43d0a5:	call   QWORD PTR [rbx+0x38]
  43d0a8:	mov    ebx,eax
  43d0aa:	mov    rcx,QWORD PTR [rsp+0x30]
  43d0af:	call   0x40215c
  43d0b4:	nop
  43d0b5:	mov    rdx,QWORD PTR [rsi]
  43d0b8:	mov    rcx,rsi
  43d0bb:	call   QWORD PTR [rdx+0x10]
  43d0be:	mov    eax,ebx
  43d0c0:	jmp    0x43d175
  43d0c5:	cmp    BYTE PTR [rdi+0xf4],0x0
  43d0cc:	je     0x43d121
  43d0ce:	lea    rcx,[rsi+0x18]
  43d0d2:	mov    rax,QWORD PTR [rcx]
  43d0d5:	lea    rdx,[rsp+0x60]
  43d0da:	call   QWORD PTR [rax+0x18]
  43d0dd:	test   eax,eax
  43d0df:	jne    0x43d121
  43d0e1:	cmp    DWORD PTR [rsp+0x80],0x1
  43d0e9:	jbe    0x43d121
  43d0eb:	mov    rax,QWORD PTR [rsp+0x68]
  43d0f0:	mov    QWORD PTR [rsp+0x40],rax
  43d0f5:	mov    rax,QWORD PTR [rsp+0x70]
  43d0fa:	mov    QWORD PTR [rsp+0x48],rax
  43d0ff:	mov    DWORD PTR [rsp+0x50],r14d
  43d104:	mov    ebx,DWORD PTR [rdi+0x50]
  43d107:	lea    rcx,[rdi+0x48]
  43d10b:	lea    rdx,[rsp+0x40]
  43d110:	call   0x43c63c
  43d115:	cmp    ebx,DWORD PTR [rdi+0x50]
  43d118:	jne    0x43d121
  43d11a:	mov    DWORD PTR [rdi+0x58],r14d
  43d11e:	mov    DWORD PTR [rdi+0x5c],eax
  43d121:	cmp    QWORD PTR [rdi+0xf8],0x0
  43d129:	je     0x43d156
  43d12b:	lea    rcx,[rip+0x2bdae]        # 0x468ee0
  43d132:	call   QWORD PTR [rip+0xff88]        # 0x44d0c0
  43d138:	mov    r11d,DWORD PTR [r13+r12*4+0x4]
  43d13d:	mov    rax,QWORD PTR [rdi+0xf8]
  43d144:	mov    BYTE PTR [r11+rax*1],0x1
  43d149:	lea    rcx,[rip+0x2bd90]        # 0x468ee0
  43d150:	call   QWORD PTR [rip+0xff62]        # 0x44d0b8
  43d156:	mov    rax,QWORD PTR [rsp+0xf0]
  43d15e:	mov    QWORD PTR [rax],rsi
  43d161:	mov    rcx,QWORD PTR [rsp+0x30]
  43d166:	call   0x40215c
  43d16b:	nop
  43d16c:	xor    eax,eax
  43d16e:	jmp    0x43d175
  43d170:	mov    eax,0x8007000e
  43d175:	add    rsp,0xa0
  43d17c:	pop    r15
  43d17e:	pop    r14
  43d180:	pop    r13
  43d182:	pop    r12
  43d184:	pop    rdi
  43d185:	pop    rsi
  43d186:	pop    rbx
  43d187:	ret    
  43d188:	int3   
  43d189:	int3   
  43d18a:	int3   
  43d18b:	int3   
  43d18c:	int3   
  43d18d:	int3   
  43d18e:	int3   
  43d18f:	int3   
  43d190:	rex.W push rbp
  43d192:	sub    rsp,0x20
  43d196:	mov    rbp,rdx
  43d199:	lea    rcx,[rbp+0x30]
  43d19d:	call   0x401000
  43d1a2:	add    rsp,0x20
  43d1a6:	pop    rbp
  43d1a7:	ret    
  43d1a8:	int3   
  43d1a9:	int3   
  43d1aa:	int3   
  43d1ab:	int3   
  43d1ac:	int3   
  43d1ad:	int3   
  43d1ae:	int3   
  43d1af:	int3   
  43d1b0:	rex.W push rbp
  43d1b2:	sub    rsp,0x20
  43d1b6:	mov    rbp,rdx
  43d1b9:	lea    rcx,[rbp+0x40]
  43d1bd:	call   0x401000
  43d1c2:	add    rsp,0x20
  43d1c6:	pop    rbp
  43d1c7:	ret    
  43d1c8:	int3   
  43d1c9:	int3   
  43d1ca:	int3   
  43d1cb:	int3   
  43d1cc:	int3   
  43d1cd:	int3   
  43d1ce:	int3   
  43d1cf:	int3   
  43d1d0:	rex.W push rbp
  43d1d2:	sub    rsp,0x20
  43d1d6:	mov    rbp,rdx
  43d1d9:	lea    rcx,[rbp+0xf0]
  43d1e0:	call   0x4176b4
  43d1e5:	add    rsp,0x20
  43d1e9:	pop    rbp
  43d1ea:	ret    
  43d1eb:	int3   
  43d1ec:	int3   
  43d1ed:	int3   
  43d1ee:	int3   
  43d1ef:	int3   
  43d1f0:	rex.W push rbp
  43d1f2:	sub    rsp,0x20
  43d1f6:	mov    rbp,rdx
  43d1f9:	lea    rcx,[rbp+0x30]
  43d1fd:	call   0x401000
  43d202:	add    rsp,0x20
  43d206:	pop    rbp
  43d207:	ret    
  43d208:	int3   
  43d209:	int3   
  43d20a:	int3   
  43d20b:	int3   
  43d20c:	int3   
  43d20d:	int3   
  43d20e:	int3   
  43d20f:	int3   
  43d210:	rex.W push rbp
  43d212:	sub    rsp,0x20
  43d216:	mov    rbp,rdx
  43d219:	mov    rcx,QWORD PTR [rbp+0xe0]
  43d220:	call   0x40215c
  43d225:	add    rsp,0x20
  43d229:	pop    rbp
  43d22a:	ret    
  43d22b:	int3   
  43d22c:	int3   
  43d22d:	int3   
  43d22e:	int3   
  43d22f:	int3   
  43d230:	rex.W push rbp
  43d232:	sub    rsp,0x20
  43d236:	mov    rbp,rdx
  43d239:	lea    rcx,[rbp+0xe0]
  43d240:	call   0x4176b4
  43d245:	add    rsp,0x20
  43d249:	pop    rbp
  43d24a:	ret    
  43d24b:	int3   
  43d24c:	int3   
  43d24d:	int3   
  43d24e:	int3   
  43d24f:	int3   
  43d250:	rex.W push rbp
  43d252:	sub    rsp,0x20
  43d256:	mov    rbp,rdx
  43d259:	lea    rcx,[rbp+0x30]
  43d25d:	call   0x401000
  43d262:	add    rsp,0x20
  43d266:	pop    rbp
  43d267:	ret    
  43d268:	int3   
  43d269:	int3   
  43d26a:	int3   
  43d26b:	int3   
  43d26c:	int3   
  43d26d:	int3   
  43d26e:	int3   
  43d26f:	int3   
  43d270:	rex.W push rbp
  43d272:	sub    rsp,0x20
  43d276:	mov    rbp,rdx
  43d279:	mov    rcx,QWORD PTR [rbp+0x40]
  43d27d:	call   0x40215c
  43d282:	add    rsp,0x20
  43d286:	pop    rbp
  43d287:	ret    
  43d288:	int3   
  43d289:	int3   
  43d28a:	int3   
  43d28b:	int3   
  43d28c:	int3   
  43d28d:	int3   
  43d28e:	int3   
  43d28f:	int3   
  43d290:	mov    QWORD PTR [rsp+0x10],rdx
  43d295:	push   rbp
  43d296:	sub    rsp,0x30
  43d29a:	mov    rbp,rdx
  43d29d:	lea    rax,[rip+0xfffffffffffffecc]        # 0x43d170
  43d2a4:	jmp    0x43d2a6
  43d2a6:	add    rsp,0x30
  43d2aa:	pop    rbp
  43d2ab:	ret    
  43d2ac:	int3   
  43d2ad:	int3   
  43d2ae:	int3   
  43d2af:	int3   
  43d2b0:	rex.W push rbx
  43d2b2:	push   rdi
  43d2b3:	sub    rsp,0x78
  43d2b7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43d2c0:	mov    rdi,r8
  43d2c3:	mov    rbx,rcx
  43d2c6:	lea    ecx,[rdx+0x1]
  43d2c9:	lea    rdx,[rsp+0x48]
  43d2ce:	call   0x401b10
  43d2d3:	lea    rdx,[rsp+0x48]
  43d2d8:	lea    rcx,[rsp+0x38]
  43d2dd:	call   0x4031c0
  43d2e2:	nop
  43d2e3:	cmp    DWORD PTR [rsp+0x40],0x2
  43d2e8:	jae    0x43d2fa
  43d2ea:	mov    dx,0x30
  43d2ee:	lea    rcx,[rsp+0x38]
  43d2f3:	call   0x4036fc
  43d2f8:	jmp    0x43d2e3
  43d2fa:	lea    rdx,[rbx+0x98]
  43d301:	lea    rcx,[rsp+0x28]
  43d306:	call   0x403208
  43d30b:	nop
  43d30c:	mov    ecx,DWORD PTR [rsp+0x30]
  43d310:	cmp    DWORD PTR [rsp+0x34],ecx
  43d314:	jne    0x43d324
  43d316:	lea    rcx,[rsp+0x28]
  43d31b:	call   0x402f2c
  43d320:	mov    ecx,DWORD PTR [rsp+0x30]
  43d324:	mov    rdx,QWORD PTR [rsp+0x28]
  43d329:	mov    eax,ecx
  43d32b:	mov    WORD PTR [rdx+rax*2],0x2e
  43d331:	inc    ecx
  43d333:	mov    WORD PTR [rdx+rcx*2],0x0
  43d339:	mov    DWORD PTR [rsp+0x30],ecx
  43d33d:	lea    rdx,[rsp+0x38]
  43d342:	lea    rcx,[rsp+0x28]
  43d347:	call   0x403444
  43d34c:	lea    rdx,[rbx+0xa8]
  43d353:	lea    rcx,[rsp+0x28]
  43d358:	call   0x403444
  43d35d:	mov    ecx,0x30
  43d362:	call   0x402130
  43d367:	mov    rbx,rax
  43d36a:	test   rax,rax
  43d36d:	je     0x43d38a
  43d36f:	mov    DWORD PTR [rax+0x8],0x0
  43d376:	lea    rax,[rip+0x11a23]        # 0x44eda0
  43d37d:	mov    QWORD PTR [rbx],rax
  43d380:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  43d388:	jmp    0x43d38c
  43d38a:	xor    ebx,ebx
  43d38c:	mov    QWORD PTR [rsp+0xa8],rbx
  43d394:	test   rbx,rbx
  43d397:	je     0x43d3a3
  43d399:	mov    rax,QWORD PTR [rbx]
  43d39c:	mov    rcx,rbx
  43d39f:	call   QWORD PTR [rax+0x8]
  43d3a2:	nop
  43d3a3:	mov    rdx,QWORD PTR [rsp+0x28]
  43d3a8:	mov    QWORD PTR [rbx+0x28],0x0
  43d3b0:	lea    rcx,[rbx+0x10]
  43d3b4:	xor    r8d,r8d
  43d3b7:	call   0x4094d8
  43d3bc:	test   al,al
  43d3be:	jne    0x43d3eb
  43d3c0:	call   QWORD PTR [rip+0xfdda]        # 0x44d1a0
  43d3c6:	mov    edi,eax
  43d3c8:	mov    rdx,QWORD PTR [rbx]
  43d3cb:	mov    rcx,rbx
  43d3ce:	call   QWORD PTR [rdx+0x10]
  43d3d1:	nop
  43d3d2:	mov    rcx,QWORD PTR [rsp+0x28]
  43d3d7:	call   0x40215c
  43d3dc:	nop
  43d3dd:	mov    rcx,QWORD PTR [rsp+0x38]
  43d3e2:	call   0x40215c
  43d3e7:	mov    eax,edi
  43d3e9:	jmp    0x43d40c
  43d3eb:	mov    QWORD PTR [rdi],rbx
  43d3ee:	mov    rcx,QWORD PTR [rsp+0x28]
  43d3f3:	call   0x40215c
  43d3f8:	nop
  43d3f9:	mov    rcx,QWORD PTR [rsp+0x38]
  43d3fe:	call   0x40215c
  43d403:	xor    eax,eax
  43d405:	jmp    0x43d40c
  43d407:	mov    eax,0x8007000e
  43d40c:	add    rsp,0x78
  43d410:	pop    rdi
  43d411:	pop    rbx
  43d412:	ret    
  43d413:	int3   
  43d414:	int3   
  43d415:	int3   
  43d416:	int3   
  43d417:	int3   
  43d418:	int3   
  43d419:	int3   
  43d41a:	int3   
  43d41b:	int3   
  43d41c:	int3   
  43d41d:	int3   
  43d41e:	int3   
  43d41f:	int3   
  43d420:	rex.W push rbp
  43d422:	sub    rsp,0x20
  43d426:	mov    rbp,rdx
  43d429:	lea    rcx,[rbp+0x38]
  43d42d:	call   0x401000
  43d432:	add    rsp,0x20
  43d436:	pop    rbp
  43d437:	ret    
  43d438:	int3   
  43d439:	int3   
  43d43a:	int3   
  43d43b:	int3   
  43d43c:	int3   
  43d43d:	int3   
  43d43e:	int3   
  43d43f:	int3   
  43d440:	rex.W push rbp
  43d442:	sub    rsp,0x20
  43d446:	mov    rbp,rdx
  43d449:	lea    rcx,[rbp+0x28]
  43d44d:	call   0x401000
  43d452:	add    rsp,0x20
  43d456:	pop    rbp
  43d457:	ret    
  43d458:	int3   
  43d459:	int3   
  43d45a:	int3   
  43d45b:	int3   
  43d45c:	int3   
  43d45d:	int3   
  43d45e:	int3   
  43d45f:	int3   
  43d460:	rex.W push rbp
  43d462:	sub    rsp,0x20
  43d466:	mov    rbp,rdx
  43d469:	lea    rcx,[rbp+0xa8]
  43d470:	call   0x4176b4
  43d475:	add    rsp,0x20
  43d479:	pop    rbp
  43d47a:	ret    
  43d47b:	int3   
  43d47c:	int3   
  43d47d:	int3   
  43d47e:	int3   
  43d47f:	int3   
  43d480:	mov    QWORD PTR [rsp+0x10],rdx
  43d485:	push   rbp
  43d486:	sub    rsp,0x20
  43d48a:	mov    rbp,rdx
  43d48d:	lea    rax,[rip+0xffffffffffffff73]        # 0x43d407
  43d494:	jmp    0x43d496
  43d496:	add    rsp,0x20
  43d49a:	pop    rbp
  43d49b:	ret    
  43d49c:	int3   
  43d49d:	int3   
  43d49e:	int3   
  43d49f:	int3   
  43d4a0:	rex.W push rbx
  43d4a2:	push   rbp
  43d4a3:	push   rsi
  43d4a4:	push   rdi
  43d4a5:	push   r12
  43d4a7:	sub    rsp,0x30
  43d4ab:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43d4b4:	mov    rdi,rdx
  43d4b7:	mov    rbx,rcx
  43d4ba:	lea    r12,[rip+0x2b9f7]        # 0x468eb8
  43d4c1:	mov    QWORD PTR [rsp+0x68],r12
  43d4c6:	mov    rcx,r12
  43d4c9:	call   QWORD PTR [rip+0xfbf1]        # 0x44d0c0
  43d4cf:	nop
  43d4d0:	xor    r8d,r8d
  43d4d3:	cmp    DWORD PTR [rbx+0x30],r8d
  43d4d7:	jbe    0x43d563
  43d4dd:	mov    rax,QWORD PTR [rbx+0x28]
  43d4e1:	cmp    DWORD PTR [rax],edi
  43d4e3:	je     0x43d4f4
  43d4e5:	inc    r8d
  43d4e8:	add    rax,0x4
  43d4ec:	cmp    r8d,DWORD PTR [rbx+0x30]
  43d4f0:	jb     0x43d4e1
  43d4f2:	jmp    0x43d563
  43d4f4:	lea    esi,[r8+0x1]
  43d4f8:	mov    rcx,QWORD PTR [rbx+0x28]
  43d4fc:	mov    ebp,r8d
  43d4ff:	mov    r8d,DWORD PTR [rbx+0x30]
  43d503:	sub    r8d,esi
  43d506:	shl    r8,0x2
  43d50a:	lea    rdx,[rcx+rsi*4]
  43d50e:	lea    rcx,[rcx+rbp*4]
  43d512:	call   0x44b774
  43d517:	add    DWORD PTR [rbx+0x30],0xffffffff
  43d51b:	mov    rax,QWORD PTR [rbx+0x38]
  43d51f:	mov    rdi,QWORD PTR [rax+rbp*8]
  43d523:	test   rdi,rdi
  43d526:	je     0x43d538
  43d528:	mov    rcx,QWORD PTR [rdi]
  43d52b:	call   0x40215c
  43d530:	mov    rcx,rdi
  43d533:	call   0x40215c
  43d538:	mov    r9,QWORD PTR [rbx+0x38]
  43d53c:	mov    r8d,DWORD PTR [rbx+0x40]
  43d540:	sub    r8d,esi
  43d543:	shl    r8,0x3
  43d547:	lea    rdx,[r9+rsi*8]
  43d54b:	lea    rcx,[r9+rbp*8]
  43d54f:	call   0x44b774
  43d554:	add    DWORD PTR [rbx+0x40],0xffffffff
  43d558:	mov    rcx,r12
  43d55b:	call   QWORD PTR [rip+0xfb57]        # 0x44d0b8
  43d561:	jmp    0x43d57d
  43d563:	mov    DWORD PTR [rsp+0x60],0x1335445
  43d56b:	lea    rdx,[rip+0x29b5e]        # 0x4670d0
  43d572:	lea    rcx,[rsp+0x60]
  43d577:	call   0x44b71e
  43d57c:	nop
  43d57d:	add    rsp,0x30
  43d581:	pop    r12
  43d583:	pop    rdi
  43d584:	pop    rsi
  43d585:	pop    rbp
  43d586:	pop    rbx
  43d587:	ret    
  43d588:	int3   
  43d589:	int3   
  43d58a:	int3   
  43d58b:	int3   
  43d58c:	int3   
  43d58d:	int3   
  43d58e:	int3   
  43d58f:	int3   
  43d590:	rex.W push rbp
  43d592:	sub    rsp,0x20
  43d596:	mov    rbp,rdx
  43d599:	lea    rcx,[rbp+0x68]
  43d59d:	call   0x417d58
  43d5a2:	add    rsp,0x20
  43d5a6:	pop    rbp
  43d5a7:	ret    
  43d5a8:	rex.W push rbx
  43d5aa:	sub    rsp,0x20
  43d5ae:	add    DWORD PTR [rcx+0x48],0xffffffff
  43d5b2:	mov    eax,DWORD PTR [rcx+0x48]
  43d5b5:	mov    rbx,rcx
  43d5b8:	jne    0x43d5c9
  43d5ba:	call   0x43cb20
  43d5bf:	mov    rcx,rbx
  43d5c2:	call   0x40215c
  43d5c7:	xor    eax,eax
  43d5c9:	add    rsp,0x20
  43d5cd:	pop    rbx
  43d5ce:	ret    
  43d5cf:	int3   
  43d5d0:	sub    rcx,0x8
  43d5d4:	jmp    0x43d5a8
  43d5d9:	int3   
  43d5da:	int3   
  43d5db:	int3   
  43d5dc:	sub    rcx,0x10
  43d5e0:	jmp    0x43d5a8
  43d5e5:	int3   
  43d5e6:	int3   
  43d5e7:	int3   
  43d5e8:	sub    rcx,0x18
  43d5ec:	jmp    0x43d5a8
  43d5f1:	int3   
  43d5f2:	int3   
  43d5f3:	int3   
  43d5f4:	sub    rcx,0x20
  43d5f8:	jmp    0x43d5a8
  43d5fd:	int3   
  43d5fe:	int3   
  43d5ff:	int3   
  43d600:	sub    rcx,0x28
  43d604:	jmp    0x43d5a8
  43d609:	int3   
  43d60a:	int3   
  43d60b:	int3   
  43d60c:	sub    rcx,0x30
  43d610:	jmp    0x43d5a8
  43d615:	int3   
  43d616:	int3   
  43d617:	int3   
  43d618:	sub    rcx,0x38
  43d61c:	jmp    0x43d5a8
  43d621:	int3   
  43d622:	int3   
  43d623:	int3   
  43d624:	rex.W push rbx
  43d626:	push   rsi
  43d627:	push   rdi
  43d628:	sub    rsp,0x50
  43d62c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43d635:	mov    rsi,r8
  43d638:	mov    rdi,rdx
  43d63b:	mov    rbx,rcx
  43d63e:	lea    rcx,[rsp+0x28]
  43d643:	call   0x403150
  43d648:	nop
  43d649:	mov    rdx,rbx
  43d64c:	lea    rcx,[rsp+0x28]
  43d651:	call   0x4034e8
  43d656:	lea    rcx,[rsp+0x28]
  43d65b:	call   0x4033ac
  43d660:	mov    rdx,rdi
  43d663:	lea    rcx,[rsp+0x28]
  43d668:	call   0x403444
  43d66d:	lea    rcx,[rsp+0x28]
  43d672:	call   0x4033ac
  43d677:	mov    rdx,rsi
  43d67a:	lea    rcx,[rsp+0x28]
  43d67f:	call   0x403444
  43d684:	lea    rdx,[rsp+0x28]
  43d689:	lea    rcx,[rsp+0x38]
  43d68e:	call   0x403208
  43d693:	lea    rdx,[rip+0x29b0e]        # 0x4671a8
  43d69a:	lea    rcx,[rsp+0x38]
  43d69f:	call   0x44b71e
  43d6a4:	int3   
  43d6a5:	int3   
  43d6a6:	int3   
  43d6a7:	int3   
  43d6a8:	int3   
  43d6a9:	int3   
  43d6aa:	int3   
  43d6ab:	int3   
  43d6ac:	int3   
  43d6ad:	int3   
  43d6ae:	int3   
  43d6af:	int3   
  43d6b0:	int3   
  43d6b1:	int3   
  43d6b2:	int3   
  43d6b3:	int3   
  43d6b4:	rex.W push rbp
  43d6b6:	sub    rsp,0x20
  43d6ba:	mov    rbp,rdx
  43d6bd:	lea    rcx,[rbp+0x28]
  43d6c1:	call   0x401000
  43d6c6:	add    rsp,0x20
  43d6ca:	pop    rbp
  43d6cb:	ret    
  43d6cc:	rex.W push rbx
  43d6ce:	push   rsi
  43d6cf:	push   rdi
  43d6d0:	sub    rsp,0x20
  43d6d4:	mov    rbx,rcx
  43d6d7:	mov    ecx,DWORD PTR [rcx+0xc]
  43d6da:	cmp    DWORD PTR [rbx+0x8],ecx
  43d6dd:	jne    0x43d745
  43d6df:	mov    eax,ecx
  43d6e1:	shr    eax,0x2
  43d6e4:	lea    esi,[rax+rcx*1+0x1]
  43d6e8:	mov    ecx,esi
  43d6ea:	shl    ecx,0x4
  43d6ed:	call   0x402130
  43d6f2:	test   rax,rax
  43d6f5:	mov    rdi,rax
  43d6f8:	je     0x43d71c
  43d6fa:	lea    eax,[rsi-0x1]
  43d6fd:	test   eax,eax
  43d6ff:	js     0x43d71e
  43d701:	lea    rcx,[rdi+0x8]
  43d705:	mov    edx,0xffffffff
  43d70a:	mov    DWORD PTR [rcx-0x4],edx
  43d70d:	mov    DWORD PTR [rcx],edx
  43d70f:	mov    DWORD PTR [rcx+0x4],edx
  43d712:	add    rcx,0x10
  43d716:	dec    eax
  43d718:	jns    0x43d70a
  43d71a:	jmp    0x43d71e
  43d71c:	xor    edi,edi
  43d71e:	cmp    DWORD PTR [rbx+0x8],0x0
  43d722:	je     0x43d737
  43d724:	mov    r8d,DWORD PTR [rbx+0x8]
  43d728:	mov    rdx,QWORD PTR [rbx]
  43d72b:	mov    rcx,rdi
  43d72e:	shl    r8,0x4
  43d732:	call   0x44b480
  43d737:	mov    rcx,QWORD PTR [rbx]
  43d73a:	call   0x40215c
  43d73f:	mov    QWORD PTR [rbx],rdi
  43d742:	mov    DWORD PTR [rbx+0xc],esi
  43d745:	add    rsp,0x20
  43d749:	pop    rdi
  43d74a:	pop    rsi
  43d74b:	pop    rbx
  43d74c:	ret    
  43d74d:	int3   
  43d74e:	int3   
  43d74f:	int3   
  43d750:	rex.W push rbx
  43d752:	push   rsi
  43d753:	push   rdi
  43d754:	sub    rsp,0x20
  43d758:	mov    esi,DWORD PTR [rcx+0x8]
  43d75b:	mov    rdi,rcx
  43d75e:	cmp    esi,DWORD PTR [rcx+0xc]
  43d761:	je     0x43d7bc
  43d763:	xor    ebx,ebx
  43d765:	cmp    esi,ebx
  43d767:	je     0x43d7ab
  43d769:	mov    ecx,esi
  43d76b:	shl    ecx,0x4
  43d76e:	call   0x402130
  43d773:	cmp    rax,rbx
  43d776:	je     0x43d798
  43d778:	dec    esi
  43d77a:	cmp    esi,ebx
  43d77c:	jl     0x43d795
  43d77e:	lea    rcx,[rax+0x8]
  43d782:	lea    edx,[rbx-0x1]
  43d785:	mov    DWORD PTR [rcx-0x4],edx
  43d788:	mov    DWORD PTR [rcx],edx
  43d78a:	mov    DWORD PTR [rcx+0x4],edx
  43d78d:	add    rcx,0x10
  43d791:	dec    esi
  43d793:	jns    0x43d785
  43d795:	mov    rbx,rax
  43d798:	mov    r8d,DWORD PTR [rdi+0x8]
  43d79c:	mov    rdx,QWORD PTR [rdi]
  43d79f:	mov    rcx,rbx
  43d7a2:	shl    r8,0x4
  43d7a6:	call   0x44b480
  43d7ab:	mov    rcx,QWORD PTR [rdi]
  43d7ae:	call   0x40215c
  43d7b3:	mov    eax,DWORD PTR [rdi+0x8]
  43d7b6:	mov    QWORD PTR [rdi],rbx
  43d7b9:	mov    DWORD PTR [rdi+0xc],eax
  43d7bc:	add    rsp,0x20
  43d7c0:	pop    rdi
  43d7c1:	pop    rsi
  43d7c2:	pop    rbx
  43d7c3:	ret    
  43d7c4:	rex.W push rbx
  43d7c6:	push   rbp
  43d7c7:	push   rsi
  43d7c8:	push   rdi
  43d7c9:	sub    rsp,0x28
  43d7cd:	mov    ebx,DWORD PTR [rcx]
  43d7cf:	mov    rcx,QWORD PTR [r8]
  43d7d2:	mov    edi,DWORD PTR [rdx]
  43d7d4:	mov    rsi,QWORD PTR [rcx+rdi*8]
  43d7d8:	mov    rbp,QWORD PTR [rcx+rbx*8]
  43d7dc:	mov    rdx,QWORD PTR [rsi+0x10]
  43d7e0:	mov    rcx,QWORD PTR [rbp+0x10]
  43d7e4:	call   0x4042ec
  43d7e9:	xor    ecx,ecx
  43d7eb:	cmp    eax,ecx
  43d7ed:	jne    0x43d816
  43d7ef:	mov    al,BYTE PTR [rbp+0x20]
  43d7f2:	cmp    al,BYTE PTR [rsi+0x20]
  43d7f5:	je     0x43d802
  43d7f7:	neg    al
  43d7f9:	sbb    eax,eax
  43d7fb:	and    eax,0xfffffffe
  43d7fe:	inc    eax
  43d800:	jmp    0x43d804
  43d802:	mov    eax,ecx
  43d804:	cmp    eax,ecx
  43d806:	jne    0x43d816
  43d808:	cmp    ebx,edi
  43d80a:	sbb    eax,eax
  43d80c:	and    eax,0xfffffffe
  43d80f:	inc    eax
  43d811:	cmp    ebx,edi
  43d813:	cmove  eax,ecx
  43d816:	add    rsp,0x28
  43d81a:	pop    rdi
  43d81b:	pop    rsi
  43d81c:	pop    rbp
  43d81d:	pop    rbx
  43d81e:	ret    
  43d81f:	int3   
  43d820:	mov    QWORD PTR [rsp+0x20],r9
  43d825:	mov    DWORD PTR [rsp+0x18],r8d
  43d82a:	mov    QWORD PTR [rsp+0x10],rdx
  43d82f:	mov    QWORD PTR [rsp+0x8],rcx
  43d834:	push   rbx
  43d835:	push   rbp
  43d836:	push   rsi
  43d837:	push   rdi
  43d838:	push   r12
  43d83a:	push   r13
  43d83c:	push   r14
  43d83e:	push   r15
  43d840:	mov    r11,rsp
  43d843:	sub    rsp,0xd8
  43d84a:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
  43d856:	mov    rbp,rdx
  43d859:	mov    r14,rcx
  43d85c:	xor    eax,eax
  43d85e:	mov    DWORD PTR [rsp+0x28],eax
  43d862:	xor    r15d,r15d
  43d865:	mov    QWORD PTR [r11-0x38],r15
  43d869:	mov    DWORD PTR [r11-0x30],r15d
  43d86d:	mov    DWORD PTR [r11-0x2c],r15d
  43d871:	mov    r13,r15
  43d874:	mov    QWORD PTR [r11-0x58],r15
  43d878:	mov    DWORD PTR [r11-0x50],r15d
  43d87c:	mov    DWORD PTR [r11-0x4c],r15d
  43d880:	mov    r12d,DWORD PTR [rcx+0x38]
  43d884:	mov    DWORD PTR [rsp+0x48],r12d
  43d889:	mov    esi,DWORD PTR [rdx+0x8]
  43d88c:	mov    rbx,r15
  43d88f:	mov    QWORD PTR [r11-0x28],r15
  43d893:	cmp    rsi,r15
  43d896:	je     0x43d8af
  43d898:	mov    rcx,rsi
  43d89b:	shl    rcx,0x2
  43d89f:	call   0x402130
  43d8a4:	mov    rbx,rax
  43d8a7:	mov    QWORD PTR [rsp+0xb0],rax
  43d8af:	cmp    esi,r15d
  43d8b2:	jbe    0x43d8c5
  43d8b4:	mov    r8,rsi
  43d8b7:	shl    r8,0x2
  43d8bb:	xor    edx,edx
  43d8bd:	mov    rcx,rbx
  43d8c0:	call   0x44b780
  43d8c5:	mov    DWORD PTR [rsp+0x88],r15d
  43d8cd:	cmp    esi,r15d
  43d8d0:	jbe    0x43d907
  43d8d2:	xor    ecx,ecx
  43d8d4:	call   0x40215c
  43d8d9:	mov    QWORD PTR [rsp+0x80],r15
  43d8e1:	mov    DWORD PTR [rsp+0x8c],r15d
  43d8e9:	mov    rcx,rsi
  43d8ec:	shl    rcx,0x2
  43d8f0:	call   0x402130
  43d8f5:	mov    r13,rax
  43d8f8:	mov    QWORD PTR [rsp+0x80],rax
  43d900:	mov    DWORD PTR [rsp+0x8c],esi
  43d907:	mov    DWORD PTR [rsp+0x88],esi
  43d90e:	cmp    esi,r15d
  43d911:	je     0x43d92a
  43d913:	mov    ecx,r15d
  43d916:	cmp    esi,r15d
  43d919:	jbe    0x43d92a
  43d91b:	mov    rax,r13
  43d91e:	mov    DWORD PTR [rax],ecx
  43d920:	inc    ecx
  43d922:	add    rax,0x4
  43d926:	cmp    ecx,esi
  43d928:	jb     0x43d91e
  43d92a:	mov    r8,rbp
  43d92d:	lea    rdx,[rip+0xfffffffffffffe90]        # 0x43d7c4
  43d934:	lea    rcx,[rsp+0x80]
  43d93c:	call   0x4343f4
  43d941:	cmp    esi,0x1
  43d944:	jbe    0x43d9e0
  43d94a:	mov    ebp,0x1
  43d94f:	mov    r12,r13
  43d952:	lea    rdi,[rbx+0x4]
  43d956:	sub    r13,rbx
  43d959:	mov    rbx,QWORD PTR [rsp+0x128]
  43d961:	mov    rcx,QWORD PTR [rbx]
  43d964:	mov    eax,DWORD PTR [r13+rdi*1+0x0]
  43d969:	mov    r14,QWORD PTR [rcx+rax*8]
  43d96d:	mov    eax,DWORD PTR [r12]
  43d971:	mov    r15,QWORD PTR [rcx+rax*8]
  43d975:	mov    rdx,QWORD PTR [r14+0x10]
  43d979:	mov    rcx,QWORD PTR [r15+0x10]
  43d97d:	call   0x4042ec
  43d982:	xor    ecx,ecx
  43d984:	cmp    eax,ecx
  43d986:	je     0x43d98d
  43d988:	xor    r15d,r15d
  43d98b:	jmp    0x43d9ab
  43d98d:	mov    al,BYTE PTR [r15+0x20]
  43d991:	cmp    al,BYTE PTR [r14+0x20]
  43d995:	je     0x43d9a5
  43d997:	neg    al
  43d999:	sbb    eax,eax
  43d99b:	and    eax,0xfffffffe
  43d99e:	inc    eax
  43d9a0:	xor    r15d,r15d
  43d9a3:	jmp    0x43d9ab
  43d9a5:	xor    r15d,r15d
  43d9a8:	mov    eax,r15d
  43d9ab:	cmp    eax,r15d
  43d9ae:	jne    0x43d9bd
  43d9b0:	mov    DWORD PTR [rdi-0x4],0x1
  43d9b7:	mov    DWORD PTR [rdi],0xffffffff
  43d9bd:	inc    ebp
  43d9bf:	add    r12,0x4
  43d9c3:	add    rdi,0x4
  43d9c7:	cmp    ebp,esi
  43d9c9:	jb     0x43d961
  43d9cb:	mov    rbx,QWORD PTR [rsp+0xb0]
  43d9d3:	mov    r12d,DWORD PTR [rsp+0x48]
  43d9d8:	mov    r14,QWORD PTR [rsp+0x120]
  43d9e0:	mov    QWORD PTR [rsp+0x50],r15
  43d9e5:	mov    DWORD PTR [rsp+0x58],r15d
  43d9ea:	mov    DWORD PTR [rsp+0x5c],r15d
  43d9ef:	mov    edx,r12d
  43d9f2:	lea    rcx,[rsp+0x50]
  43d9f7:	call   0x40fe04
  43d9fc:	mov    edi,r15d
  43d9ff:	cmp    r12d,r15d
  43da02:	jbe    0x43da63
  43da04:	mov    r8d,edi
  43da07:	lea    rdx,[rsp+0x38]
  43da0c:	mov    rcx,r14
  43da0f:	call   0x41fd40
  43da14:	mov    rbp,rax
  43da17:	mov    ecx,0x10
  43da1c:	call   0x402130
  43da21:	mov    QWORD PTR [rsp+0x90],rax
  43da29:	cmp    rax,r15
  43da2c:	je     0x43da3e
  43da2e:	mov    rdx,rbp
  43da31:	mov    rcx,rax
  43da34:	call   0x403208
  43da39:	mov    r11,rax
  43da3c:	jmp    0x43da41
  43da3e:	mov    r11,r15
  43da41:	mov    ecx,DWORD PTR [rsp+0x58]
  43da45:	mov    rax,QWORD PTR [rsp+0x50]
  43da4a:	mov    QWORD PTR [rax+rcx*8],r11
  43da4e:	inc    DWORD PTR [rsp+0x58]
  43da52:	mov    rcx,QWORD PTR [rsp+0x38]
  43da57:	call   0x40215c
  43da5c:	inc    edi
  43da5e:	cmp    edi,r12d
  43da61:	jb     0x43da04
  43da63:	lea    rdx,[rsp+0xa0]
  43da6b:	lea    rcx,[rsp+0x50]
  43da70:	call   0x434490
  43da75:	cmp    r12d,0x1
  43da79:	jbe    0x43dad5
  43da7b:	mov    edi,0x1
  43da80:	mov    rbp,r15
  43da83:	mov    rdx,QWORD PTR [rsp+0xa0]
  43da8b:	mov    eax,DWORD PTR [rdx+rbp*1]
  43da8e:	mov    rcx,QWORD PTR [rsp+0x50]
  43da93:	mov    r12,QWORD PTR [rcx+rax*8]
  43da97:	add    rbp,0x4
  43da9b:	mov    eax,DWORD PTR [rdx+rbp*1]
  43da9e:	mov    r13,QWORD PTR [rcx+rax*8]
  43daa2:	mov    rdx,QWORD PTR [r13+0x0]
  43daa6:	mov    rcx,QWORD PTR [r12]
  43daaa:	call   0x4042ec
  43daaf:	cmp    eax,r15d
  43dab2:	je     0x43dac2
  43dab4:	inc    edi
  43dab6:	mov    r12d,DWORD PTR [rsp+0x48]
  43dabb:	cmp    edi,r12d
  43dabe:	jb     0x43da83
  43dac0:	jmp    0x43dad5
  43dac2:	mov    r8,r13
  43dac5:	mov    rdx,r12
  43dac8:	mov    rcx,QWORD PTR [rip+0x2ac11]        # 0x4686e0
  43dacf:	call   0x43d624
  43dad4:	int3   
  43dad5:	mov    r8d,r15d
  43dad8:	mov    DWORD PTR [rsp+0x24],r15d
  43dadd:	mov    edx,r15d
  43dae0:	mov    DWORD PTR [rsp+0x20],r15d
  43dae5:	mov    eax,0xffffffff
  43daea:	mov    DWORD PTR [rsp+0x74],eax
  43daee:	mov    QWORD PTR [rsp+0x90],r15
  43daf6:	mov    r11,r15
  43daf9:	mov    QWORD PTR [rsp+0x60],r15
  43dafe:	mov    r9,rbx
  43db01:	mov    QWORD PTR [rsp+0x30],rbx
  43db06:	mov    r14,QWORD PTR [rsp+0x80]
  43db0e:	mov    r10,r14
  43db11:	mov    QWORD PTR [rsp+0x68],r14
  43db16:	cmp    r8d,r12d
  43db19:	jb     0x43db23
  43db1b:	cmp    edx,esi
  43db1d:	jae    0x43dec6
  43db23:	mov    DWORD PTR [rsp+0x3c],eax
  43db27:	mov    DWORD PTR [rsp+0x40],eax
  43db2b:	mov    DWORD PTR [rsp+0x44],eax
  43db2f:	mov    ebp,eax
  43db31:	xor    ecx,ecx
  43db33:	mov    rdi,rcx
  43db36:	cmp    r8d,r12d
  43db39:	jae    0x43db57
  43db3b:	mov    rax,QWORD PTR [rsp+0xa0]
  43db43:	mov    ebp,DWORD PTR [r11+rax*1]
  43db47:	mov    rax,QWORD PTR [rsp+0x120]
  43db4f:	mov    rax,QWORD PTR [rax+0x30]
  43db53:	mov    r15,QWORD PTR [rax+rbp*8]
  43db57:	cmp    edx,esi
  43db59:	jae    0x43dbc2
  43db5b:	mov    r13d,DWORD PTR [r10]
  43db5e:	mov    rax,QWORD PTR [rsp+0x128]
  43db66:	mov    rax,QWORD PTR [rax]
  43db69:	mov    rdi,QWORD PTR [rax+r13*8]
  43db6d:	cmp    r8d,r12d
  43db70:	jae    0x43dc04
  43db76:	mov    r12d,ebp
  43db79:	mov    rax,QWORD PTR [rsp+0x50]
  43db7e:	mov    rcx,QWORD PTR [rax+r12*8]
  43db82:	mov    rdx,QWORD PTR [rdi+0x10]
  43db86:	mov    rcx,QWORD PTR [rcx]
  43db89:	call   0x4042ec
  43db8e:	xor    r8d,r8d
  43db91:	cmp    eax,r8d
  43db94:	jne    0x43dbb3
  43db96:	mov    cl,BYTE PTR [rdi+0x20]
  43db99:	mov    eax,DWORD PTR [r15+0x50]
  43db9d:	shr    eax,0x4
  43dba0:	and    al,0x1
  43dba2:	cmp    al,cl
  43dba4:	je     0x43dc3b
  43dbaa:	neg    cl
  43dbac:	sbb    eax,eax
  43dbae:	and    eax,0x2
  43dbb1:	dec    eax
  43dbb3:	cmp    eax,r8d
  43dbb6:	jge    0x43dbef
  43dbb8:	mov    r8d,DWORD PTR [rsp+0x24]
  43dbbd:	mov    r11,QWORD PTR [rsp+0x60]
  43dbc2:	mov    ecx,ebp
  43dbc4:	mov    rax,QWORD PTR [rsp+0x50]
  43dbc9:	mov    r12,QWORD PTR [rax+rcx*8]
  43dbcd:	mov    DWORD PTR [rsp+0x38],0x2
  43dbd5:	mov    DWORD PTR [rsp+0x40],ebp
  43dbd9:	inc    r8d
  43dbdc:	mov    DWORD PTR [rsp+0x24],r8d
  43dbe1:	add    r11,0x4
  43dbe5:	mov    QWORD PTR [rsp+0x60],r11
  43dbea:	jmp    0x43dd9c
  43dbef:	cmp    eax,r8d
  43dbf2:	jle    0x43dc3b
  43dbf4:	mov    edx,DWORD PTR [rsp+0x20]
  43dbf8:	mov    r9,QWORD PTR [rsp+0x30]
  43dbfd:	mov    r10,QWORD PTR [rsp+0x68]
  43dc02:	jmp    0x43dc07
  43dc04:	xor    r8d,r8d
  43dc07:	lea    r12,[rdi+0x10]
  43dc0b:	mov    eax,r8d
  43dc0e:	cmp    BYTE PTR [rdi+0x24],r8b
  43dc12:	setne  al
  43dc15:	mov    DWORD PTR [rsp+0x38],eax
  43dc19:	mov    DWORD PTR [rsp+0x3c],r13d
  43dc1e:	inc    edx
  43dc20:	mov    DWORD PTR [rsp+0x20],edx
  43dc24:	add    r10,0x4
  43dc28:	mov    QWORD PTR [rsp+0x68],r10
  43dc2d:	add    r9,0x4
  43dc31:	mov    QWORD PTR [rsp+0x30],r9
  43dc36:	jmp    0x43dd9c
  43dc3b:	mov    r9,QWORD PTR [rsp+0x30]
  43dc40:	mov    eax,DWORD PTR [r9]
  43dc43:	cmp    eax,r8d
  43dc46:	jne    0x43df3c
  43dc4c:	mov    rax,QWORD PTR [rsp+0x50]
  43dc51:	mov    r12,QWORD PTR [rax+r12*8]
  43dc55:	cmp    BYTE PTR [rdi+0x24],r8b
  43dc59:	je     0x43df6a
  43dc5f:	mov    DWORD PTR [rsp+0x40],ebp
  43dc63:	mov    DWORD PTR [rsp+0x3c],r13d
  43dc68:	cmp    BYTE PTR [rdi+0x23],r8b
  43dc6c:	je     0x43dd38
  43dc72:	mov    edx,DWORD PTR [rsp+0x130]
  43dc79:	cmp    DWORD PTR [rdi+0x2c],0xffffffff
  43dc7d:	cmovne edx,DWORD PTR [rdi+0x2c]
  43dc81:	lea    rcx,[r15+0x18]
  43dc85:	cmp    edx,r8d
  43dc88:	je     0x43dd24
  43dc8e:	dec    edx
  43dc90:	je     0x43dcdf
  43dc92:	dec    edx
  43dc94:	jne    0x43df7e
  43dc9a:	lea    rdx,[rsp+0x98]
  43dca2:	call   0x40b76c
  43dca7:	lea    rdx,[rsp+0x78]
  43dcac:	lea    rcx,[rdi+0x8]
  43dcb0:	call   0x40b76c
  43dcb5:	mov    r11d,DWORD PTR [rsp+0x98]
  43dcbd:	cmp    r11d,DWORD PTR [rsp+0x78]
  43dcc2:	sbb    eax,eax
  43dcc4:	and    eax,0xfffffffe
  43dcc7:	inc    eax
  43dcc9:	cmp    r11d,DWORD PTR [rsp+0x78]
  43dcce:	mov    r8d,0x0
  43dcd4:	cmove  eax,r8d
  43dcd8:	mov    r9,QWORD PTR [rsp+0x30]
  43dcdd:	jmp    0x43dd3b
  43dcdf:	lea    rdx,[rsp+0x9c]
  43dce7:	call   0x40b7c0
  43dcec:	lea    rdx,[rsp+0x70]
  43dcf1:	lea    rcx,[rdi+0x8]
  43dcf5:	call   0x40b7c0
  43dcfa:	mov    r11d,DWORD PTR [rsp+0x9c]
  43dd02:	cmp    r11d,DWORD PTR [rsp+0x70]
  43dd07:	sbb    eax,eax
  43dd09:	and    eax,0xfffffffe
  43dd0c:	inc    eax
  43dd0e:	cmp    r11d,DWORD PTR [rsp+0x70]
  43dd13:	mov    r8d,0x0
  43dd19:	cmove  eax,r8d
  43dd1d:	mov    r9,QWORD PTR [rsp+0x30]
  43dd22:	jmp    0x43dd3b
  43dd24:	lea    rdx,[rdi+0x8]
  43dd28:	call   QWORD PTR [rip+0xf3fa]        # 0x44d128
  43dd2e:	mov    r9,QWORD PTR [rsp+0x30]
  43dd33:	xor    r8d,r8d
  43dd36:	jmp    0x43dd3b
  43dd38:	mov    eax,r8d
  43dd3b:	cmp    eax,0xffffffff
  43dd3e:	je     0x43dd71
  43dd40:	cmp    eax,0x1
  43dd43:	je     0x43dd67
  43dd45:	cmp    BYTE PTR [rdi+0x22],r8b
  43dd49:	je     0x43dd5d
  43dd4b:	mov    rax,QWORD PTR [rdi]
  43dd4e:	cmp    QWORD PTR [r15],rax
  43dd51:	jne    0x43dd5d
  43dd53:	mov    DWORD PTR [rsp+0x38],0x5
  43dd5b:	jmp    0x43dd79
  43dd5d:	mov    DWORD PTR [rsp+0x38],0x6
  43dd65:	jmp    0x43dd79
  43dd67:	mov    DWORD PTR [rsp+0x38],0x4
  43dd6f:	jmp    0x43dd79
  43dd71:	mov    DWORD PTR [rsp+0x38],0x3
  43dd79:	inc    DWORD PTR [rsp+0x24]
  43dd7d:	add    QWORD PTR [rsp+0x60],0x4
  43dd83:	mov    ecx,DWORD PTR [rsp+0x20]
  43dd87:	inc    ecx
  43dd89:	mov    DWORD PTR [rsp+0x20],ecx
  43dd8d:	add    QWORD PTR [rsp+0x68],0x4
  43dd93:	add    r9,0x4
  43dd97:	mov    QWORD PTR [rsp+0x30],r9
  43dd9c:	xor    eax,eax
  43dd9e:	cmp    r15,rax
  43dda1:	je     0x43dda9
  43dda3:	cmp    BYTE PTR [r15+0x60],al
  43dda7:	jne    0x43ddc1
  43dda9:	xor    r15d,r15d
  43ddac:	cmp    rdi,r15
  43ddaf:	je     0x43de5c
  43ddb5:	cmp    BYTE PTR [rdi+0x21],r15b
  43ddb9:	je     0x43de5c
  43ddbf:	jmp    0x43ddc4
  43ddc1:	xor    r15d,r15d
  43ddc4:	mov    rdi,QWORD PTR [rsp+0x90]
  43ddcc:	cmp    rdi,r15
  43ddcf:	je     0x43de73
  43ddd5:	mov    r8d,DWORD PTR [rdi+0x8]
  43ddd9:	cmp    DWORD PTR [r12+0x8],r8d
  43ddde:	jbe    0x43de73
  43dde4:	mov    rax,QWORD PTR [r12]
  43dde8:	cmp    WORD PTR [rax+r8*2],0x3a
  43ddee:	jne    0x43de24
  43ddf0:	lea    rdx,[rsp+0xc0]
  43ddf8:	mov    rcx,r12
  43ddfb:	call   0x4042a0
  43de00:	mov    r15d,DWORD PTR [rsp+0x28]
  43de05:	or     r15d,0x1
  43de09:	mov    DWORD PTR [rsp+0x28],r15d
  43de0e:	mov    rdx,QWORD PTR [rax]
  43de11:	mov    rcx,QWORD PTR [rdi]
  43de14:	call   0x4042ec
  43de19:	xor    ecx,ecx
  43de1b:	cmp    eax,ecx
  43de1d:	jne    0x43de2b
  43de1f:	mov    dil,0x1
  43de22:	jmp    0x43de2e
  43de24:	mov    r15d,DWORD PTR [rsp+0x28]
  43de29:	xor    ecx,ecx
  43de2b:	mov    dil,cl
  43de2e:	test   r15b,0x1
  43de32:	je     0x43de4a
  43de34:	and    r15d,0xfffffffe
  43de38:	mov    DWORD PTR [rsp+0x28],r15d
  43de3d:	mov    rcx,QWORD PTR [rsp+0xc0]
  43de45:	call   0x40215c
  43de4a:	xor    r15d,r15d
  43de4d:	cmp    dil,r15b
  43de50:	je     0x43de73
  43de52:	mov    eax,DWORD PTR [rsp+0x74]
  43de56:	mov    DWORD PTR [rsp+0x44],eax
  43de5a:	jmp    0x43de73
  43de5c:	mov    rcx,QWORD PTR [rsp+0x138]
  43de64:	mov    eax,DWORD PTR [rcx+0x8]
  43de67:	mov    DWORD PTR [rsp+0x74],eax
  43de6b:	mov    QWORD PTR [rsp+0x90],r12
  43de73:	mov    r12,QWORD PTR [rsp+0x138]
  43de7b:	mov    rcx,r12
  43de7e:	call   0x43d6cc
  43de83:	mov    ecx,DWORD PTR [r12+0x8]
  43de88:	add    rcx,rcx
  43de8b:	mov    rax,QWORD PTR [r12]
  43de8f:	movdqu xmm0,XMMWORD PTR [rsp+0x38]
  43de95:	movdqu XMMWORD PTR [rax+rcx*8],xmm0
  43de9a:	inc    DWORD PTR [r12+0x8]
  43de9f:	mov    edx,DWORD PTR [rsp+0x20]
  43dea3:	mov    r8d,DWORD PTR [rsp+0x24]
  43dea8:	mov    r12d,DWORD PTR [rsp+0x48]
  43dead:	mov    r9,QWORD PTR [rsp+0x30]
  43deb2:	mov    r10,QWORD PTR [rsp+0x68]
  43deb7:	mov    r11,QWORD PTR [rsp+0x60]
  43debc:	mov    eax,0xffffffff
  43dec1:	jmp    0x43db16
  43dec6:	mov    rcx,QWORD PTR [rsp+0x138]
  43dece:	call   0x43d750
  43ded3:	nop
  43ded4:	movsxd rdi,DWORD PTR [rsp+0x58]
  43ded9:	mov    rsi,rdi
  43dedc:	cmp    edi,r15d
  43dedf:	je     0x43df10
  43dee1:	shl    rsi,0x3
  43dee5:	add    edi,0xffffffff
  43dee8:	sub    rsi,0x8
  43deec:	mov    rax,QWORD PTR [rsp+0x50]
  43def1:	mov    rbp,QWORD PTR [rsi+rax*1]
  43def5:	cmp    rbp,r15
  43def8:	je     0x43df0b
  43defa:	mov    rcx,QWORD PTR [rbp+0x0]
  43defe:	call   0x40215c
  43df03:	mov    rcx,rbp
  43df06:	call   0x40215c
  43df0b:	cmp    edi,r15d
  43df0e:	jne    0x43dee5
  43df10:	mov    rcx,QWORD PTR [rsp+0x50]
  43df15:	call   0x40215c
  43df1a:	nop
  43df1b:	mov    rcx,rbx
  43df1e:	call   0x40215c
  43df23:	nop
  43df24:	mov    rcx,r14
  43df27:	call   0x40215c
  43df2c:	nop
  43df2d:	mov    rcx,QWORD PTR [rsp+0xa0]
  43df35:	call   0x40215c
  43df3a:	jmp    0x43df9e
  43df3c:	mov    ecx,DWORD PTR [rsp+0x20]
  43df40:	add    eax,ecx
  43df42:	mov    edx,DWORD PTR [r14+rax*4]
  43df46:	mov    rax,QWORD PTR [rsp+0x128]
  43df4e:	mov    rax,QWORD PTR [rax]
  43df51:	mov    r8,QWORD PTR [rax+rdx*8]
  43df55:	add    r8,0x10
  43df59:	lea    rdx,[rdi+0x10]
  43df5d:	mov    rcx,QWORD PTR [rip+0x2a774]        # 0x4686d8
  43df64:	call   0x43d624
  43df69:	int3   
  43df6a:	lea    r8,[rdi+0x10]
  43df6e:	mov    rdx,r12
  43df71:	mov    rcx,QWORD PTR [rip+0x2a770]        # 0x4686e8
  43df78:	call   0x43d624
  43df7d:	int3   
  43df7e:	mov    DWORD PTR [rsp+0x128],0x3ff582
  43df89:	lea    rdx,[rip+0x29140]        # 0x4670d0
  43df90:	lea    rcx,[rsp+0x128]
  43df98:	call   0x44b71e
  43df9d:	nop
  43df9e:	add    rsp,0xd8
  43dfa5:	pop    r15
  43dfa7:	pop    r14
  43dfa9:	pop    r13
  43dfab:	pop    r12
  43dfad:	pop    rdi
  43dfae:	pop    rsi
  43dfaf:	pop    rbp
  43dfb0:	pop    rbx
  43dfb1:	ret    
  43dfb2:	int3   
  43dfb3:	int3   
  43dfb4:	int3   
  43dfb5:	int3   
  43dfb6:	int3   
  43dfb7:	int3   
  43dfb8:	int3   
  43dfb9:	int3   
  43dfba:	int3   
  43dfbb:	int3   
  43dfbc:	int3   
  43dfbd:	int3   
  43dfbe:	int3   
  43dfbf:	int3   
  43dfc0:	rex.W push rbp
  43dfc2:	sub    rsp,0x20
  43dfc6:	mov    rbp,rdx
  43dfc9:	lea    rcx,[rbp+0xa0]
  43dfd0:	call   0x401000
  43dfd5:	add    rsp,0x20
  43dfd9:	pop    rbp
  43dfda:	ret    
  43dfdb:	int3   
  43dfdc:	int3   
  43dfdd:	int3   
  43dfde:	int3   
  43dfdf:	int3   
  43dfe0:	rex.W push rbp
  43dfe2:	sub    rsp,0x20
  43dfe6:	mov    rbp,rdx
  43dfe9:	lea    rcx,[rbp+0x80]
  43dff0:	call   0x401000
  43dff5:	add    rsp,0x20
  43dff9:	pop    rbp
  43dffa:	ret    
  43dffb:	int3   
  43dffc:	int3   
  43dffd:	int3   
  43dffe:	int3   
  43dfff:	int3   
  43e000:	rex.W push rbp
  43e002:	sub    rsp,0x20
  43e006:	mov    rbp,rdx
  43e009:	lea    rcx,[rbp+0xb0]
  43e010:	call   0x401000
  43e015:	add    rsp,0x20
  43e019:	pop    rbp
  43e01a:	ret    
  43e01b:	int3   
  43e01c:	int3   
  43e01d:	int3   
  43e01e:	int3   
  43e01f:	int3   
  43e020:	rex.W push rbp
  43e022:	sub    rsp,0x20
  43e026:	mov    rbp,rdx
  43e029:	lea    rcx,[rbp+0x50]
  43e02d:	call   0x4047cc
  43e032:	add    rsp,0x20
  43e036:	pop    rbp
  43e037:	ret    
  43e038:	int3   
  43e039:	int3   
  43e03a:	int3   
  43e03b:	int3   
  43e03c:	int3   
  43e03d:	int3   
  43e03e:	int3   
  43e03f:	int3   
  43e040:	rex.W push rbp
  43e042:	sub    rsp,0x20
  43e046:	mov    rbp,rdx
  43e049:	lea    rcx,[rbp+0x38]
  43e04d:	call   0x401000
  43e052:	add    rsp,0x20
  43e056:	pop    rbp
  43e057:	ret    
  43e058:	int3   
  43e059:	int3   
  43e05a:	int3   
  43e05b:	int3   
  43e05c:	int3   
  43e05d:	int3   
  43e05e:	int3   
  43e05f:	int3   
  43e060:	rex.W push rbp
  43e062:	sub    rsp,0x20
  43e066:	mov    rbp,rdx
  43e069:	mov    rcx,QWORD PTR [rbp+0x90]
  43e070:	call   0x40215c
  43e075:	add    rsp,0x20
  43e079:	pop    rbp
  43e07a:	ret    
  43e07b:	int3   
  43e07c:	rex.W push rbx
  43e07e:	push   rsi
  43e07f:	push   rdi
  43e080:	sub    rsp,0x20
  43e084:	mov    esi,DWORD PTR [rcx+0x8]
  43e087:	mov    rdi,rcx
  43e08a:	cmp    esi,DWORD PTR [rcx+0xc]
  43e08d:	je     0x43e0fb
  43e08f:	xor    ebx,ebx
  43e091:	cmp    esi,ebx
  43e093:	je     0x43e0ea
  43e095:	lea    ecx,[rsi+rsi*4]
  43e098:	shl    ecx,0x2
  43e09b:	call   0x402130
  43e0a0:	cmp    rax,rbx
  43e0a3:	je     0x43e0d4
  43e0a5:	dec    esi
  43e0a7:	cmp    esi,ebx
  43e0a9:	jl     0x43e0d1
  43e0ab:	lea    rcx,[rax+0x2]
  43e0af:	lea    edx,[rbx-0x1]
  43e0b2:	mov    BYTE PTR [rcx-0x2],bl
  43e0b5:	mov    BYTE PTR [rcx-0x1],bl
  43e0b8:	mov    BYTE PTR [rcx],bl
  43e0ba:	mov    BYTE PTR [rcx+0x1],bl
  43e0bd:	mov    DWORD PTR [rcx+0x2],edx
  43e0c0:	mov    DWORD PTR [rcx+0x6],edx
  43e0c3:	mov    DWORD PTR [rcx+0xa],edx
  43e0c6:	mov    BYTE PTR [rcx+0xe],bl
  43e0c9:	add    rcx,0x14
  43e0cd:	dec    esi
  43e0cf:	jns    0x43e0b2
  43e0d1:	mov    rbx,rax
  43e0d4:	mov    eax,DWORD PTR [rdi+0x8]
  43e0d7:	mov    rdx,QWORD PTR [rdi]
  43e0da:	mov    rcx,rbx
  43e0dd:	lea    r8,[rax+rax*4]
  43e0e1:	shl    r8,0x2
  43e0e5:	call   0x44b480
  43e0ea:	mov    rcx,QWORD PTR [rdi]
  43e0ed:	call   0x40215c
  43e0f2:	mov    eax,DWORD PTR [rdi+0x8]
  43e0f5:	mov    QWORD PTR [rdi],rbx
  43e0f8:	mov    DWORD PTR [rdi+0xc],eax
  43e0fb:	add    rsp,0x20
  43e0ff:	pop    rdi
  43e100:	pop    rsi
  43e101:	pop    rbx
  43e102:	ret    
  43e103:	int3   
  43e104:	rex.W push rbx
  43e106:	push   rbp
  43e107:	push   rsi
  43e108:	push   rdi
  43e109:	push   r12
  43e10b:	push   r13
  43e10d:	sub    rsp,0x48
  43e111:	xor    edi,edi
  43e113:	mov    r12,r9
  43e116:	mov    rsi,r8
  43e119:	cmp    DWORD PTR [rcx+0x8],edi
  43e11c:	mov    r13,rdx
  43e11f:	mov    rbp,rcx
  43e122:	jbe    0x43e23c
  43e128:	xor    ebx,ebx
  43e12a:	mov    r9,QWORD PTR [rbp+0x0]
  43e12e:	mov    BYTE PTR [rsp+0x2b],0x0
  43e133:	mov    DWORD PTR [rsp+0x34],0xffffffff
  43e13b:	mov    edx,DWORD PTR [rbx+r9*1]
  43e13f:	mov    eax,DWORD PTR [rbx+r9*1+0x8]
  43e144:	mov    r8d,DWORD PTR [rbx+r9*1+0x4]
  43e149:	mov    ecx,DWORD PTR [r13+rdx*4+0x0]
  43e14e:	mov    BYTE PTR [rsp+0x38],0x0
  43e153:	mov    DWORD PTR [rsp+0x2c],eax
  43e157:	test   ecx,ecx
  43e159:	mov    DWORD PTR [rsp+0x30],r8d
  43e15e:	mov    BYTE PTR [rsp+0x29],0x1
  43e163:	mov    BYTE PTR [rsp+0x28],0x1
  43e168:	mov    BYTE PTR [rsp+0x2a],0x0
  43e16d:	je     0x43e217
  43e173:	dec    ecx
  43e175:	je     0x43e1bb
  43e177:	dec    ecx
  43e179:	je     0x43e18e
  43e17b:	dec    ecx
  43e17d:	jne    0x43e1ec
  43e17f:	test   r8d,r8d
  43e182:	mov    BYTE PTR [rsp+0x2b],0x1
  43e187:	setns  BYTE PTR [rsp+0x2a]
  43e18c:	jmp    0x43e1ec
  43e18e:	cmp    edx,0x1
  43e191:	je     0x43e197
  43e193:	test   edx,edx
  43e195:	jne    0x43e1ec
  43e197:	mov    rax,QWORD PTR [rip+0x2a552]        # 0x4686f0
  43e19e:	lea    rdx,[rip+0x28ed3]        # 0x467078
  43e1a5:	lea    rcx,[rsp+0x80]
  43e1ad:	mov    QWORD PTR [rsp+0x80],rax
  43e1b5:	call   0x44b71e
  43e1ba:	int3   
  43e1bb:	cmp    edx,0x2
  43e1be:	je     0x43e250
  43e1c4:	cmp    edx,0x1
  43e1c7:	jne    0x43e1dd
  43e1c9:	mov    eax,DWORD PTR [rbx+r9*1+0xc]
  43e1ce:	test   eax,eax
  43e1d0:	js     0x43e1dd
  43e1d2:	add    rax,rax
  43e1d5:	cmp    DWORD PTR [r9+rax*8+0x8],0x0
  43e1db:	jge    0x43e22d
  43e1dd:	mov    BYTE PTR [rsp+0x29],0x0
  43e1e2:	mov    BYTE PTR [rsp+0x28],0x0
  43e1e7:	mov    BYTE PTR [rsp+0x2a],0x1
  43e1ec:	mov    rcx,rsi
  43e1ef:	call   0x4350a8
  43e1f4:	mov    eax,DWORD PTR [rsi+0x8]
  43e1f7:	lea    rdx,[rsp+0x28]
  43e1fc:	lea    rcx,[rax+rax*4]
  43e200:	mov    rax,QWORD PTR [rsi]
  43e203:	mov    r8d,0x14
  43e209:	lea    rcx,[rax+rcx*4]
  43e20d:	call   0x44b480
  43e212:	inc    DWORD PTR [rsi+0x8]
  43e215:	jmp    0x43e22d
  43e217:	test   r8d,r8d
  43e21a:	js     0x43e22d
  43e21c:	test   r12,r12
  43e21f:	je     0x43e22d
  43e221:	mov    rax,QWORD PTR [r12]
  43e225:	mov    edx,r8d
  43e228:	mov    rcx,r12
  43e22b:	call   QWORD PTR [rax]
  43e22d:	inc    edi
  43e22f:	add    rbx,0x10
  43e233:	cmp    edi,DWORD PTR [rbp+0x8]
  43e236:	jb     0x43e12a
  43e23c:	mov    rcx,rsi
  43e23f:	add    rsp,0x48
  43e243:	pop    r13
  43e245:	pop    r12
  43e247:	pop    rdi
  43e248:	pop    rsi
  43e249:	pop    rbp
  43e24a:	pop    rbx
  43e24b:	jmp    0x43e07c
  43e250:	mov    rax,QWORD PTR [rip+0x2a499]        # 0x4686f0
  43e257:	lea    rdx,[rip+0x28e1a]        # 0x467078
  43e25e:	lea    rcx,[rsp+0x20]
  43e263:	mov    QWORD PTR [rsp+0x20],rax
  43e268:	call   0x44b71e
  43e26d:	int3   
  43e26e:	int3   
  43e26f:	int3   
  43e270:	mov    rax,rdx
  43e273:	mov    rdx,QWORD PTR [rcx+0x8]
  43e277:	mov    rcx,rax
  43e27a:	rex.W jmp QWORD PTR [rip+0xf0ef]        # 0x44d370
  43e281:	int3   
  43e282:	int3   
  43e283:	int3   
  43e284:	mov    rdx,QWORD PTR [rcx+0x8]
  43e288:	mov    ecx,0xa
  43e28d:	rex.W jmp QWORD PTR [rip+0xf0d4]        # 0x44d368
  43e294:	mov    r11,rsp
  43e297:	sub    rsp,0x48
  43e29b:	mov    QWORD PTR [r11-0x10],r9
  43e29f:	lea    rax,[rip+0x13baa]        # 0x451e50
  43e2a6:	mov    r9,rdx
  43e2a9:	lea    rdx,[r11-0x18]
  43e2ad:	mov    BYTE PTR [rsp+0x28],0x1
  43e2b2:	mov    DWORD PTR [r11-0x28],r8d
  43e2b6:	xor    r8d,r8d
  43e2b9:	mov    QWORD PTR [r11-0x18],rax
  43e2bd:	call   0x41d3e0
  43e2c2:	add    rsp,0x48
  43e2c6:	ret    
  43e2c7:	int3   
  43e2c8:	cmp    ecx,0x5
  43e2cb:	jne    0x43e2d1
  43e2cd:	lea    eax,[rcx-0x4]
  43e2d0:	ret    
  43e2d1:	mov    ecx,DWORD PTR [rip+0x2ac31]        # 0x468f08
  43e2d7:	xor    eax,eax
  43e2d9:	inc    ecx
  43e2db:	cmp    ecx,0x2
  43e2de:	mov    DWORD PTR [rip+0x2ac24],ecx        # 0x468f08
  43e2e4:	setb   al
  43e2e7:	ret    
  43e2e8:	rex.W push rbx
  43e2ea:	sub    rsp,0x20
  43e2ee:	lea    rax,[rip+0x13b93]        # 0x451e88
  43e2f5:	mov    rbx,rcx
  43e2f8:	mov    edx,0x1
  43e2fd:	mov    QWORD PTR [rcx],rax
  43e300:	lea    rcx,[rip+0xffffffffffffffc1]        # 0x43e2c8
  43e307:	call   QWORD PTR [rip+0xed93]        # 0x44d0a0
  43e30d:	test   eax,eax
  43e30f:	jne    0x43e32f
  43e311:	lea    rax,[rip+0x13b50]        # 0x451e68
  43e318:	lea    rdx,[rip+0x28dd1]        # 0x4670f0
  43e31f:	lea    rcx,[rsp+0x30]
  43e324:	mov    QWORD PTR [rsp+0x30],rax
  43e329:	call   0x44b71e
  43e32e:	int3   
  43e32f:	mov    rax,rbx
  43e332:	add    rsp,0x20
  43e336:	pop    rbx
  43e337:	ret    
  43e338:	lea    rax,[rip+0x13b49]        # 0x451e88
  43e33f:	xor    edx,edx
  43e341:	mov    QWORD PTR [rcx],rax
  43e344:	lea    rcx,[rip+0xffffffffffffff7d]        # 0x43e2c8
  43e34b:	rex.W jmp QWORD PTR [rip+0xed4e]        # 0x44d0a0
  43e352:	int3   
  43e353:	int3   
  43e354:	rex.W push rbx
  43e356:	push   rdi
  43e357:	sub    rsp,0x28
  43e35b:	lea    rax,[rip+0x13b26]        # 0x451e88
  43e362:	mov    rdi,rcx
  43e365:	mov    ebx,edx
  43e367:	mov    QWORD PTR [rcx],rax
  43e36a:	lea    rcx,[rip+0xffffffffffffff57]        # 0x43e2c8
  43e371:	xor    edx,edx
  43e373:	call   QWORD PTR [rip+0xed27]        # 0x44d0a0
  43e379:	test   bl,0x1
  43e37c:	je     0x43e386
  43e37e:	mov    rcx,rdi
  43e381:	call   0x40215c
  43e386:	mov    rax,rdi
  43e389:	add    rsp,0x28
  43e38d:	pop    rdi
  43e38e:	pop    rbx
  43e38f:	ret    
  43e390:	sub    rsp,0x28
  43e394:	cmp    QWORD PTR [rcx+0xe0],0x0
  43e39c:	je     0x43e3ae
  43e39e:	lea    rdx,[rip+0x13e13]        # 0x4521b8
  43e3a5:	add    rcx,0x30
  43e3a9:	call   0x402be4
  43e3ae:	add    rsp,0x28
  43e3b2:	ret    
  43e3b3:	int3   
  43e3b4:	rex.W push rbx
  43e3b6:	sub    rsp,0x20
  43e3ba:	cmp    QWORD PTR [rcx+0xe0],0x0
  43e3c2:	je     0x43e3f2
  43e3c4:	mov    rax,QWORD PTR [rdx+0x8]
  43e3c8:	lea    rbx,[rcx+0x18]
  43e3cc:	add    rcx,0x40
  43e3d0:	add    rax,QWORD PTR [rdx]
  43e3d3:	mov    QWORD PTR [rcx-0x18],rax
  43e3d7:	mov    rax,QWORD PTR [rdx+0x20]
  43e3db:	add    rax,QWORD PTR [rdx+0x18]
  43e3df:	mov    rdx,r8
  43e3e2:	mov    QWORD PTR [rbx],rax
  43e3e5:	call   0x4032f8
  43e3ea:	mov    rcx,rbx
  43e3ed:	call   0x448f00
  43e3f2:	mov    eax,DWORD PTR [rip+0x2ab10]        # 0x468f08
  43e3f8:	neg    eax
  43e3fa:	sbb    eax,eax
  43e3fc:	and    eax,0x80004004
  43e401:	add    rsp,0x20
  43e405:	pop    rbx
  43e406:	ret    
  43e407:	int3   
  43e408:	rex.W push rbx
  43e40a:	push   rbp
  43e40b:	push   rsi
  43e40c:	push   rdi
  43e40d:	push   r12
  43e40f:	sub    rsp,0x40
  43e413:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e41c:	mov    r12d,r8d
  43e41f:	mov    rsi,rdx
  43e422:	mov    rbp,rcx
  43e425:	cmp    QWORD PTR [rcx+0xe0],0x0
  43e42d:	je     0x43e43a
  43e42f:	add    rcx,0x18
  43e433:	mov    dl,0x1
  43e435:	call   0x448c48
  43e43a:	mov    rcx,QWORD PTR [rbp+0x8]
  43e43e:	test   rcx,rcx
  43e441:	je     0x43e448
  43e443:	call   0x402438
  43e448:	cmp    QWORD PTR [rbp+0x10],0x0
  43e44d:	je     0x43e4c7
  43e44f:	mov    edx,r12d
  43e452:	lea    rcx,[rsp+0x28]
  43e457:	call   0x4068d0
  43e45c:	nop
  43e45d:	mov    rsi,QWORD PTR [rsi]
  43e460:	mov    rbx,QWORD PTR [rax]
  43e463:	mov    rdi,QWORD PTR [rbp+0x10]
  43e467:	mov    rcx,rdi
  43e46a:	call   0x402454
  43e46f:	mov    rdx,QWORD PTR [rdi]
  43e472:	mov    rcx,QWORD PTR [rip+0x2a27f]        # 0x4686f8
  43e479:	call   QWORD PTR [rip+0xeef1]        # 0x44d370
  43e47f:	mov    rdx,rbx
  43e482:	mov    rcx,rdi
  43e485:	call   0x402474
  43e48a:	mov    rbx,rax
  43e48d:	mov    rcx,rax
  43e490:	call   0x402454
  43e495:	mov    rdx,rsi
  43e498:	mov    rcx,rbx
  43e49b:	call   0x402474
  43e4a0:	mov    rbx,rax
  43e4a3:	mov    rcx,rax
  43e4a6:	call   0x402454
  43e4ab:	mov    rcx,rbx
  43e4ae:	call   0x402454
  43e4b3:	nop
  43e4b4:	mov    rcx,QWORD PTR [rsp+0x28]
  43e4b9:	call   0x40215c
  43e4be:	mov    rcx,QWORD PTR [rbp+0x10]
  43e4c2:	call   0x402438
  43e4c7:	movzx  eax,r12w
  43e4cb:	or     eax,0x80070000
  43e4d0:	test   r12d,r12d
  43e4d3:	cmovle eax,r12d
  43e4d7:	add    rsp,0x40
  43e4db:	pop    r12
  43e4dd:	pop    rdi
  43e4de:	pop    rsi
  43e4df:	pop    rbp
  43e4e0:	pop    rbx
  43e4e1:	ret    
  43e4e2:	int3   
  43e4e3:	int3   
  43e4e4:	int3   
  43e4e5:	int3   
  43e4e6:	int3   
  43e4e7:	int3   
  43e4e8:	rex.W push rbp
  43e4ea:	sub    rsp,0x20
  43e4ee:	mov    rbp,rdx
  43e4f1:	lea    rcx,[rbp+0x28]
  43e4f5:	call   0x401000
  43e4fa:	add    rsp,0x20
  43e4fe:	pop    rbp
  43e4ff:	ret    
  43e500:	rex.W push rbx
  43e502:	push   rdi
  43e503:	sub    rsp,0x48
  43e507:	mov    rax,rdx
  43e50a:	mov    rbx,rcx
  43e50d:	lea    rdx,[rsp+0x20]
  43e512:	mov    rcx,rax
  43e515:	mov    rdi,r8
  43e518:	call   0x4019a4
  43e51d:	lea    rdx,[rsp+0x20]
  43e522:	mov    rcx,rbx
  43e525:	call   0x402d24
  43e52a:	mov    rcx,rbx
  43e52d:	call   0x40380c
  43e532:	mov    rdx,rdi
  43e535:	mov    rcx,rbx
  43e538:	call   0x402d24
  43e53d:	add    rsp,0x48
  43e541:	pop    rdi
  43e542:	pop    rbx
  43e543:	ret    
  43e544:	rex.W push rbx
  43e546:	push   rsi
  43e547:	push   rdi
  43e548:	sub    rsp,0x20
  43e54c:	lea    r8,[rip+0x13c91]        # 0x4521e4
  43e553:	mov    rdi,rdx
  43e556:	mov    rbx,rcx
  43e559:	call   0x43e500
  43e55e:	test   rdi,rdi
  43e561:	je     0x43e5fa
  43e567:	movabs rcx,0x280000000
  43e571:	mov    esi,0xa
  43e576:	mov    al,0x4b
  43e578:	cmp    rdi,rcx
  43e57b:	mov    BYTE PTR [rsp+0x49],0x69
  43e580:	mov    BYTE PTR [rsp+0x4a],0x42
  43e585:	mov    BYTE PTR [rsp+0x4b],0x0
  43e58a:	jb     0x43e595
  43e58c:	mov    esi,0x1e
  43e591:	mov    al,0x47
  43e593:	jmp    0x43e5a5
  43e595:	cmp    rdi,0xa00000
  43e59c:	jb     0x43e5a5
  43e59e:	mov    esi,0x14
  43e5a3:	mov    al,0x4d
  43e5a5:	lea    rdx,[rip+0x13c34]        # 0x4521e0
  43e5ac:	mov    rcx,rbx
  43e5af:	mov    BYTE PTR [rsp+0x48],al
  43e5b3:	call   0x402d24
  43e5b8:	mov    ecx,esi
  43e5ba:	mov    eax,0x1
  43e5bf:	shl    rax,cl
  43e5c2:	lea    r8,[rsp+0x48]
  43e5c7:	lea    rdx,[rax+rdi*1-0x1]
  43e5cc:	shr    rdx,cl
  43e5cf:	mov    rcx,rbx
  43e5d2:	call   0x43e500
  43e5d7:	mov    eax,DWORD PTR [rbx+0x8]
  43e5da:	cmp    DWORD PTR [rbx+0xc],eax
  43e5dd:	jne    0x43e5e7
  43e5df:	mov    rcx,rbx
  43e5e2:	call   0x402af0
  43e5e7:	mov    edx,DWORD PTR [rbx+0x8]
  43e5ea:	mov    rcx,QWORD PTR [rbx]
  43e5ed:	mov    BYTE PTR [rdx+rcx*1],0x29
  43e5f1:	inc    edx
  43e5f3:	mov    BYTE PTR [rdx+rcx*1],0x0
  43e5f7:	mov    DWORD PTR [rbx+0x8],edx
  43e5fa:	add    rsp,0x20
  43e5fe:	pop    rdi
  43e5ff:	pop    rsi
  43e600:	pop    rbx
  43e601:	ret    
  43e602:	int3   
  43e603:	int3   
  43e604:	rex.W push rbx
  43e606:	push   rdi
  43e607:	sub    rsp,0x28
  43e60b:	mov    rdi,rdx
  43e60e:	mov    rdx,QWORD PTR [rdx]
  43e611:	mov    rbx,rcx
  43e614:	test   rdx,rdx
  43e617:	je     0x43e643
  43e619:	lea    rax,[rip+0x13bf8]        # 0x452218
  43e620:	cmp    rdx,0x1
  43e624:	lea    r8,[rip+0x13be5]        # 0x452210
  43e62b:	cmove  r8,rax
  43e62f:	call   0x43e500
  43e634:	lea    rdx,[rip+0x13bd1]        # 0x45220c
  43e63b:	mov    rcx,rbx
  43e63e:	call   0x402d24
  43e643:	mov    rdx,QWORD PTR [rdi+0x8]
  43e647:	lea    rax,[rip+0x112ee]        # 0x44f93c
  43e64e:	lea    r8,[rip+0x13baf]        # 0x452204
  43e655:	cmp    rdx,0x1
  43e659:	mov    rcx,rbx
  43e65c:	cmove  r8,rax
  43e660:	call   0x43e500
  43e665:	lea    rdx,[rip+0x13ba0]        # 0x45220c
  43e66c:	mov    rcx,rbx
  43e66f:	call   0x402d24
  43e674:	mov    rdx,QWORD PTR [rdi+0x18]
  43e678:	mov    rcx,rbx
  43e67b:	call   0x43e544
  43e680:	cmp    QWORD PTR [rdi+0x10],0x0
  43e685:	je     0x43e6bd
  43e687:	mov    rcx,rbx
  43e68a:	call   0x403860
  43e68f:	mov    rdx,QWORD PTR [rdi+0x10]
  43e693:	lea    r8,[rip+0x13b56]        # 0x4521f0
  43e69a:	mov    rcx,rbx
  43e69d:	call   0x43e500
  43e6a2:	lea    rdx,[rip+0x13b63]        # 0x45220c
  43e6a9:	mov    rcx,rbx
  43e6ac:	call   0x402d24
  43e6b1:	mov    rdx,QWORD PTR [rdi+0x20]
  43e6b5:	mov    rcx,rbx
  43e6b8:	call   0x43e544
  43e6bd:	add    rsp,0x28
  43e6c1:	pop    rdi
  43e6c2:	pop    rbx
  43e6c3:	ret    
  43e6c4:	rex.W push rbx
  43e6c6:	push   rdi
  43e6c7:	sub    rsp,0x48
  43e6cb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e6d4:	mov    rdi,rdx
  43e6d7:	mov    rbx,rcx
  43e6da:	cmp    QWORD PTR [rcx+0x8],0x0
  43e6df:	je     0x43e71e
  43e6e1:	lea    rcx,[rsp+0x28]
  43e6e6:	call   0x402b34
  43e6eb:	nop
  43e6ec:	mov    rdx,rdi
  43e6ef:	lea    rcx,[rsp+0x28]
  43e6f4:	call   0x43e604
  43e6f9:	mov    rbx,QWORD PTR [rbx+0x8]
  43e6fd:	mov    rdx,QWORD PTR [rbx]
  43e700:	mov    rcx,QWORD PTR [rsp+0x28]
  43e705:	call   QWORD PTR [rip+0xec65]        # 0x44d370
  43e70b:	mov    rcx,rbx
  43e70e:	call   0x402454
  43e713:	nop
  43e714:	mov    rcx,QWORD PTR [rsp+0x28]
  43e719:	call   0x40215c
  43e71e:	add    rsp,0x48
  43e722:	pop    rdi
  43e723:	pop    rbx
  43e724:	ret    
  43e725:	int3   
  43e726:	int3   
  43e727:	int3   
  43e728:	int3   
  43e729:	int3   
  43e72a:	int3   
  43e72b:	int3   
  43e72c:	int3   
  43e72d:	int3   
  43e72e:	int3   
  43e72f:	int3   
  43e730:	int3   
  43e731:	int3   
  43e732:	int3   
  43e733:	int3   
  43e734:	rex.W push rbp
  43e736:	sub    rsp,0x20
  43e73a:	mov    rbp,rdx
  43e73d:	lea    rcx,[rbp+0x28]
  43e741:	call   0x401000
  43e746:	add    rsp,0x20
  43e74a:	pop    rbp
  43e74b:	ret    
  43e74c:	rex.W push rbx
  43e74e:	push   rsi
  43e74f:	push   rdi
  43e750:	sub    rsp,0x30
  43e754:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e75d:	mov    rdi,rdx
  43e760:	mov    rbx,rcx
  43e763:	lea    rsi,[rip+0x2a7a6]        # 0x468f10
  43e76a:	mov    QWORD PTR [rsp+0x50],rsi
  43e76f:	mov    rcx,rsi
  43e772:	call   QWORD PTR [rip+0xe948]        # 0x44d0c0
  43e778:	nop
  43e779:	cmp    QWORD PTR [rbx+0xe8],0x0
  43e781:	je     0x43e790
  43e783:	mov    QWORD PTR [rbx+0x28],rdi
  43e787:	lea    rcx,[rbx+0x20]
  43e78b:	call   0x448f00
  43e790:	mov    eax,DWORD PTR [rip+0x2a772]        # 0x468f08
  43e796:	neg    eax
  43e798:	sbb    ebx,ebx
  43e79a:	and    ebx,0x80004004
  43e7a0:	mov    rcx,rsi
  43e7a3:	call   QWORD PTR [rip+0xe90f]        # 0x44d0b8
  43e7a9:	mov    eax,ebx
  43e7ab:	add    rsp,0x30
  43e7af:	pop    rdi
  43e7b0:	pop    rsi
  43e7b1:	pop    rbx
  43e7b2:	ret    
  43e7b3:	int3   
  43e7b4:	int3   
  43e7b5:	int3   
  43e7b6:	int3   
  43e7b7:	int3   
  43e7b8:	int3   
  43e7b9:	int3   
  43e7ba:	int3   
  43e7bb:	int3   
  43e7bc:	rex.W push rbp
  43e7be:	sub    rsp,0x20
  43e7c2:	mov    rbp,rdx
  43e7c5:	lea    rcx,[rbp+0x50]
  43e7c9:	call   0x417d58
  43e7ce:	add    rsp,0x20
  43e7d2:	pop    rbp
  43e7d3:	ret    
  43e7d4:	rex.W push rbx
  43e7d6:	push   rsi
  43e7d7:	push   rdi
  43e7d8:	sub    rsp,0x30
  43e7dc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e7e5:	mov    rdi,rdx
  43e7e8:	mov    rbx,rcx
  43e7eb:	lea    rsi,[rip+0x2a71e]        # 0x468f10
  43e7f2:	mov    QWORD PTR [rsp+0x50],rsi
  43e7f7:	mov    rcx,rsi
  43e7fa:	call   QWORD PTR [rip+0xe8c0]        # 0x44d0c0
  43e800:	nop
  43e801:	cmp    QWORD PTR [rbx+0xe8],0x0
  43e809:	je     0x43e820
  43e80b:	test   rdi,rdi
  43e80e:	je     0x43e817
  43e810:	mov    rax,QWORD PTR [rdi]
  43e813:	mov    QWORD PTR [rbx+0x20],rax
  43e817:	lea    rcx,[rbx+0x20]
  43e81b:	call   0x448f00
  43e820:	mov    eax,DWORD PTR [rip+0x2a6e2]        # 0x468f08
  43e826:	neg    eax
  43e828:	sbb    ebx,ebx
  43e82a:	and    ebx,0x80004004
  43e830:	mov    rcx,rsi
  43e833:	call   QWORD PTR [rip+0xe87f]        # 0x44d0b8
  43e839:	mov    eax,ebx
  43e83b:	add    rsp,0x30
  43e83f:	pop    rdi
  43e840:	pop    rsi
  43e841:	pop    rbx
  43e842:	ret    
  43e843:	int3   
  43e844:	rex.W push rbp
  43e846:	sub    rsp,0x20
  43e84a:	mov    rbp,rdx
  43e84d:	lea    rcx,[rbp+0x50]
  43e851:	call   0x417d58
  43e856:	add    rsp,0x20
  43e85a:	pop    rbp
  43e85b:	ret    
  43e85c:	rex.W push rbx
  43e85e:	push   rbp
  43e85f:	push   rsi
  43e860:	push   rdi
  43e861:	sub    rsp,0x88
  43e868:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e871:	mov    rbp,r9
  43e874:	mov    rsi,r8
  43e877:	mov    rbx,rdx
  43e87a:	mov    rdi,rcx
  43e87d:	mov    rdx,QWORD PTR [rcx]
  43e880:	mov    rcx,QWORD PTR [rip+0x29f11]        # 0x468798
  43e887:	call   QWORD PTR [rip+0xeae3]        # 0x44d370
  43e88d:	mov    rdx,QWORD PTR [rdi]
  43e890:	lea    rcx,[rip+0x13a29]        # 0x4522c0
  43e897:	call   QWORD PTR [rip+0xead3]        # 0x44d370
  43e89d:	mov    rdx,rbx
  43e8a0:	mov    rcx,rdi
  43e8a3:	call   0x402474
  43e8a8:	mov    rcx,rax
  43e8ab:	call   0x402454
  43e8b0:	test   rbp,rbp
  43e8b3:	je     0x43e912
  43e8b5:	lea    rcx,[rsp+0x28]
  43e8ba:	call   0x402b34
  43e8bf:	nop
  43e8c0:	mov    rdx,QWORD PTR [rbp+0x0]
  43e8c4:	lea    rcx,[rsp+0x28]
  43e8c9:	call   0x43e544
  43e8ce:	mov    rbx,QWORD PTR [rsp+0x28]
  43e8d3:	mov    rdx,QWORD PTR [rdi]
  43e8d6:	mov    rcx,QWORD PTR [rip+0x29ebb]        # 0x468798
  43e8dd:	call   QWORD PTR [rip+0xea8d]        # 0x44d370
  43e8e3:	mov    rdx,QWORD PTR [rdi]
  43e8e6:	lea    rcx,[rip+0x139c3]        # 0x4522b0
  43e8ed:	call   QWORD PTR [rip+0xea7d]        # 0x44d370
  43e8f3:	mov    rdx,QWORD PTR [rdi]
  43e8f6:	mov    rcx,rbx
  43e8f9:	call   QWORD PTR [rip+0xea71]        # 0x44d370
  43e8ff:	mov    rcx,rdi
  43e902:	call   0x402454
  43e907:	nop
  43e908:	mov    rcx,QWORD PTR [rsp+0x28]
  43e90d:	call   0x40215c
  43e912:	test   rsi,rsi
  43e915:	je     0x43e97e
  43e917:	lea    rdx,[rsp+0xc0]
  43e91f:	mov    rcx,rsi
  43e922:	call   QWORD PTR [rip+0xe780]        # 0x44d0a8
  43e928:	test   eax,eax
  43e92a:	je     0x43e97e
  43e92c:	mov    r9b,0x1
  43e92f:	mov    r8b,r9b
  43e932:	lea    rdx,[rsp+0x40]
  43e937:	lea    rcx,[rsp+0xc0]
  43e93f:	call   0x40b310
  43e944:	test   al,al
  43e946:	je     0x43e97e
  43e948:	mov    rdx,QWORD PTR [rdi]
  43e94b:	mov    rcx,QWORD PTR [rip+0x29e46]        # 0x468798
  43e952:	call   QWORD PTR [rip+0xea18]        # 0x44d370
  43e958:	mov    rdx,QWORD PTR [rdi]
  43e95b:	lea    rcx,[rip+0x1393e]        # 0x4522a0
  43e962:	call   QWORD PTR [rip+0xea08]        # 0x44d370
  43e968:	mov    rdx,QWORD PTR [rdi]
  43e96b:	lea    rcx,[rsp+0x40]
  43e970:	call   QWORD PTR [rip+0xe9fa]        # 0x44d370
  43e976:	mov    rcx,rdi
  43e979:	call   0x402454
  43e97e:	add    rsp,0x88
  43e985:	pop    rdi
  43e986:	pop    rsi
  43e987:	pop    rbp
  43e988:	pop    rbx
  43e989:	ret    
  43e98a:	int3   
  43e98b:	int3   
  43e98c:	rex.W push rbp
  43e98e:	sub    rsp,0x20
  43e992:	mov    rbp,rdx
  43e995:	lea    rcx,[rbp+0x28]
  43e999:	call   0x401000
  43e99e:	add    rsp,0x20
  43e9a2:	pop    rbp
  43e9a3:	ret    
  43e9a4:	rex.W push rbx
  43e9a6:	push   rbp
  43e9a7:	push   rsi
  43e9a8:	push   rdi
  43e9a9:	push   r12
  43e9ab:	push   r15
  43e9ad:	sub    rsp,0x38
  43e9b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43e9ba:	mov    rsi,r9
  43e9bd:	mov    rbp,r8
  43e9c0:	mov    r12,rdx
  43e9c3:	mov    rbx,rcx
  43e9c6:	lea    r15,[rip+0x2a543]        # 0x468f10
  43e9cd:	mov    QWORD PTR [rsp+0x28],r15
  43e9d2:	mov    rcx,r15
  43e9d5:	call   QWORD PTR [rip+0xe6e5]        # 0x44d0c0
  43e9db:	nop
  43e9dc:	mov    eax,DWORD PTR [rip+0x2a526]        # 0x468f08
  43e9e2:	neg    eax
  43e9e4:	sbb    edi,edi
  43e9e6:	and    edi,0x80004004
  43e9ec:	je     0x43e9f3
  43e9ee:	jmp    0x43eb53
  43e9f3:	cmp    QWORD PTR [rbx+0xe8],0x0
  43e9fb:	je     0x43ea08
  43e9fd:	lea    rcx,[rbx+0x20]
  43ea01:	mov    dl,0x1
  43ea03:	call   0x448c48
  43ea08:	mov    rcx,QWORD PTR [rbx+0xf8]
  43ea0f:	test   rcx,rcx
  43ea12:	je     0x43ea19
  43ea14:	call   0x402438
  43ea19:	mov    rdi,QWORD PTR [rbx+0xf8]
  43ea20:	test   rdi,rdi
  43ea23:	je     0x43ea8d
  43ea25:	mov    rcx,rdi
  43ea28:	call   0x402454
  43ea2d:	mov    rdx,QWORD PTR [rdi]
  43ea30:	lea    rcx,[rip+0x138d9]        # 0x452310
  43ea37:	call   QWORD PTR [rip+0xe933]        # 0x44d370
  43ea3d:	mov    r9,rsi
  43ea40:	mov    r8,rbp
  43ea43:	mov    rdx,r12
  43ea46:	mov    rcx,QWORD PTR [rbx+0xf8]
  43ea4d:	call   0x43e85c
  43ea52:	mov    rdx,QWORD PTR [rbx+0xf8]
  43ea59:	mov    rdx,QWORD PTR [rdx]
  43ea5c:	lea    rcx,[rip+0x1388d]        # 0x4522f0
  43ea63:	call   QWORD PTR [rip+0xe907]        # 0x44d370
  43ea69:	mov    r9,QWORD PTR [rsp+0xa0]
  43ea71:	mov    r8,QWORD PTR [rsp+0x98]
  43ea79:	mov    rdx,QWORD PTR [rsp+0x90]
  43ea81:	mov    rcx,QWORD PTR [rbx+0xf8]
  43ea88:	call   0x43e85c
  43ea8d:	mov    rcx,QWORD PTR [rbx+0xf8]
  43ea94:	call   0x44a648
  43ea99:	mov    r11d,eax
  43ea9c:	test   eax,eax
  43ea9e:	je     0x43eb0d
  43eaa0:	dec    r11d
  43eaa3:	je     0x43eafd
  43eaa5:	dec    r11d
  43eaa8:	je     0x43eaed
  43eaaa:	dec    r11d
  43eaad:	je     0x43eadd
  43eaaf:	dec    r11d
  43eab2:	je     0x43eacd
  43eab4:	dec    r11d
  43eab7:	je     0x43eac3
  43eab9:	mov    edi,0x80004005
  43eabe:	jmp    0x43eb53
  43eac3:	mov    edi,0x80004004
  43eac8:	jmp    0x43eb53
  43eacd:	mov    rax,QWORD PTR [rsp+0xa8]
  43ead5:	mov    DWORD PTR [rax],0x4
  43eadb:	jmp    0x43eb1b
  43eadd:	mov    rax,QWORD PTR [rsp+0xa8]
  43eae5:	mov    DWORD PTR [rax],0x3
  43eaeb:	jmp    0x43eb1b
  43eaed:	mov    rax,QWORD PTR [rsp+0xa8]
  43eaf5:	mov    DWORD PTR [rax],0x1
  43eafb:	jmp    0x43eb1b
  43eafd:	mov    rax,QWORD PTR [rsp+0xa8]
  43eb05:	mov    DWORD PTR [rax],0x2
  43eb0b:	jmp    0x43eb1b
  43eb0d:	mov    rax,QWORD PTR [rsp+0xa8]
  43eb15:	mov    DWORD PTR [rax],0x0
  43eb1b:	mov    rcx,QWORD PTR [rbx+0xf8]
  43eb22:	test   rcx,rcx
  43eb25:	je     0x43eb41
  43eb27:	call   0x402454
  43eb2c:	cmp    BYTE PTR [rbx+0x1a8],0x0
  43eb33:	je     0x43eb41
  43eb35:	mov    rcx,QWORD PTR [rbx+0xf8]
  43eb3c:	call   0x402438
  43eb41:	mov    eax,DWORD PTR [rip+0x2a3c1]        # 0x468f08
  43eb47:	neg    eax
  43eb49:	sbb    edx,edx
  43eb4b:	and    edx,0x80004004
  43eb51:	mov    edi,edx
  43eb53:	mov    rcx,r15
  43eb56:	call   QWORD PTR [rip+0xe55c]        # 0x44d0b8
  43eb5c:	mov    eax,edi
  43eb5e:	add    rsp,0x38
  43eb62:	pop    r15
  43eb64:	pop    r12
  43eb66:	pop    rdi
  43eb67:	pop    rsi
  43eb68:	pop    rbp
  43eb69:	pop    rbx
  43eb6a:	ret    
  43eb6b:	int3   
  43eb6c:	int3   
  43eb6d:	int3   
  43eb6e:	int3   
  43eb6f:	int3   
  43eb70:	int3   
  43eb71:	int3   
  43eb72:	int3   
  43eb73:	int3   
  43eb74:	rex.W push rbp
  43eb76:	sub    rsp,0x20
  43eb7a:	mov    rbp,rdx
  43eb7d:	lea    rcx,[rbp+0x28]
  43eb81:	call   0x417d58
  43eb86:	add    rsp,0x20
  43eb8a:	pop    rbp
  43eb8b:	ret    
  43eb8c:	rex.W push rbx
  43eb8e:	push   rbp
  43eb8f:	push   rsi
  43eb90:	push   rdi
  43eb91:	push   r12
  43eb93:	push   r13
  43eb95:	push   r15
  43eb97:	sub    rsp,0x30
  43eb9b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43eba4:	mov    ebx,r9d
  43eba7:	mov    rbp,rdx
  43ebaa:	mov    rdi,rcx
  43ebad:	lea    r15,[rip+0x2a35c]        # 0x468f10
  43ebb4:	mov    QWORD PTR [rsp+0x70],r15
  43ebb9:	mov    rcx,r15
  43ebbc:	call   QWORD PTR [rip+0xe4fe]        # 0x44d0c0
  43ebc2:	nop
  43ebc3:	lea    rcx,[rdi+0x148]
  43ebca:	mov    rdx,rbp
  43ebcd:	call   0x403290
  43ebd2:	mov    ecx,0x1
  43ebd7:	test   ebx,ebx
  43ebd9:	je     0x43ec08
  43ebdb:	dec    ebx
  43ebdd:	je     0x43ebff
  43ebdf:	dec    ebx
  43ebe1:	je     0x43ebf1
  43ebe3:	lea    rsi,[rip+0x1377e]        # 0x452368
  43ebea:	mov    ecx,0x2
  43ebef:	jmp    0x43ec0f
  43ebf1:	mov    rsi,QWORD PTR [rip+0x29b18]        # 0x468710
  43ebf8:	mov    ecx,0x2
  43ebfd:	jmp    0x43ec0f
  43ebff:	mov    rsi,QWORD PTR [rip+0x29afa]        # 0x468700
  43ec06:	jmp    0x43ec0f
  43ec08:	mov    rsi,QWORD PTR [rip+0x29af9]        # 0x468708
  43ec0f:	cmp    DWORD PTR [rdi+0x1b0],ecx
  43ec15:	jb     0x43ec28
  43ec17:	mov    rax,QWORD PTR [rdi+0xf8]
  43ec1e:	test   rax,rax
  43ec21:	je     0x43ec28
  43ec23:	mov    r13b,0x1
  43ec26:	jmp    0x43ec30
  43ec28:	xor    r13b,r13b
  43ec2b:	jmp    0x43ed28
  43ec30:	mov    rcx,QWORD PTR [rdi+0xe8]
  43ec37:	test   rcx,rcx
  43ec3a:	je     0x43ec4c
  43ec3c:	cmp    rax,rcx
  43ec3f:	jne    0x43ec4c
  43ec41:	lea    rcx,[rdi+0x20]
  43ec45:	xor    edx,edx
  43ec47:	call   0x448c48
  43ec4c:	mov    rdx,rsi
  43ec4f:	lea    rcx,[rdi+0x128]
  43ec56:	call   0x402be4
  43ec5b:	test   rbp,rbp
  43ec5e:	je     0x43ec6c
  43ec60:	lea    rcx,[rdi+0x128]
  43ec67:	call   0x40380c
  43ec6c:	mov    rdx,QWORD PTR [rdi+0xf8]
  43ec73:	mov    rdx,QWORD PTR [rdx]
  43ec76:	mov    rcx,QWORD PTR [rdi+0x128]
  43ec7d:	call   QWORD PTR [rip+0xe6ed]        # 0x44d370
  43ec83:	mov    DWORD PTR [rdi+0x140],0x0
  43ec8d:	mov    rax,QWORD PTR [rdi+0x138]
  43ec94:	mov    WORD PTR [rax],0x0
  43ec99:	test   rbp,rbp
  43ec9c:	je     0x43ecad
  43ec9e:	mov    rdx,rbp
  43eca1:	lea    rcx,[rdi+0x138]
  43eca8:	call   0x403290
  43ecad:	lea    r8,[rdi+0x128]
  43ecb4:	lea    rdx,[rdi+0x138]
  43ecbb:	mov    rcx,QWORD PTR [rdi+0xf8]
  43ecc2:	call   0x4025cc
  43ecc7:	mov    r12,QWORD PTR [rsp+0x90]
  43eccf:	test   r12,r12
  43ecd2:	je     0x43ed07
  43ecd4:	mov    rbx,QWORD PTR [rdi+0xf8]
  43ecdb:	mov    rdx,QWORD PTR [rbx]
  43ecde:	lea    rcx,[rip+0x1367f]        # 0x452364
  43ece5:	call   QWORD PTR [rip+0xe685]        # 0x44d370
  43eceb:	mov    rdx,QWORD PTR [r12]
  43ecef:	mov    rcx,rbx
  43ecf2:	call   0x40268c
  43ecf7:	mov    rdx,QWORD PTR [rax]
  43ecfa:	lea    rcx,[rip+0x1365f]        # 0x452360
  43ed01:	call   QWORD PTR [rip+0xe669]        # 0x44d370
  43ed07:	mov    rcx,QWORD PTR [rdi+0xf8]
  43ed0e:	call   0x402454
  43ed13:	cmp    BYTE PTR [rdi+0x1a8],0x0
  43ed1a:	je     0x43ed28
  43ed1c:	mov    rcx,QWORD PTR [rdi+0xf8]
  43ed23:	call   0x402438
  43ed28:	cmp    QWORD PTR [rdi+0xe8],0x0
  43ed30:	je     0x43ed8c
  43ed32:	cmp    DWORD PTR [rdi+0x1ac],0x1
  43ed39:	jb     0x43ed83
  43ed3b:	mov    DWORD PTR [rdi+0x50],0x0
  43ed42:	mov    rax,QWORD PTR [rdi+0x48]
  43ed46:	mov    WORD PTR [rax],0x0
  43ed4b:	lea    rcx,[rdi+0x38]
  43ed4f:	mov    DWORD PTR [rcx+0x8],0x0
  43ed56:	mov    rax,QWORD PTR [rcx]
  43ed59:	mov    BYTE PTR [rax],0x0
  43ed5c:	cmp    DWORD PTR [rdi+0x1ac],0x1
  43ed63:	ja     0x43ed6a
  43ed65:	test   r13b,r13b
  43ed68:	jne    0x43ed83
  43ed6a:	mov    rdx,rsi
  43ed6d:	call   0x402be4
  43ed72:	test   rbp,rbp
  43ed75:	je     0x43ed83
  43ed77:	mov    rdx,rbp
  43ed7a:	lea    rcx,[rdi+0x48]
  43ed7e:	call   0x403290
  43ed83:	lea    rcx,[rdi+0x20]
  43ed87:	call   0x448f00
  43ed8c:	mov    eax,DWORD PTR [rip+0x2a176]        # 0x468f08
  43ed92:	neg    eax
  43ed94:	sbb    ebx,ebx
  43ed96:	and    ebx,0x80004004
  43ed9c:	mov    rcx,r15
  43ed9f:	call   QWORD PTR [rip+0xe313]        # 0x44d0b8
  43eda5:	mov    eax,ebx
  43eda7:	add    rsp,0x30
  43edab:	pop    r15
  43edad:	pop    r13
  43edaf:	pop    r12
  43edb1:	pop    rdi
  43edb2:	pop    rsi
  43edb3:	pop    rbp
  43edb4:	pop    rbx
  43edb5:	ret    
  43edb6:	int3   
  43edb7:	int3   
  43edb8:	int3   
  43edb9:	int3   
  43edba:	int3   
  43edbb:	int3   
  43edbc:	rex.W push rbp
  43edbe:	sub    rsp,0x20
  43edc2:	mov    rbp,rdx
  43edc5:	lea    rcx,[rbp+0x70]
  43edc9:	call   0x417d58
  43edce:	add    rsp,0x20
  43edd2:	pop    rbp
  43edd3:	ret    
  43edd4:	rex.W push rbx
  43edd6:	push   rbp
  43edd7:	push   rsi
  43edd8:	push   rdi
  43edd9:	sub    rsp,0x38
  43eddd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43ede6:	mov    rsi,rdx
  43ede9:	mov    rbx,rcx
  43edec:	lea    rbp,[rip+0x2a11d]        # 0x468f10
  43edf3:	mov    QWORD PTR [rsp+0x70],rbp
  43edf8:	mov    rcx,rbp
  43edfb:	call   QWORD PTR [rip+0xe2bf]        # 0x44d0c0
  43ee01:	nop
  43ee02:	mov    eax,DWORD PTR [rip+0x2a100]        # 0x468f08
  43ee08:	neg    eax
  43ee0a:	sbb    edi,edi
  43ee0c:	and    edi,0x80004004
  43ee12:	je     0x43ee19
  43ee14:	jmp    0x43ee9a
  43ee19:	inc    QWORD PTR [rbx+0x1a0]
  43ee20:	inc    QWORD PTR [rbx+0x198]
  43ee27:	cmp    QWORD PTR [rbx+0xe8],0x0
  43ee2f:	je     0x43ee3c
  43ee31:	lea    rcx,[rbx+0x20]
  43ee35:	mov    dl,0x1
  43ee37:	call   0x448c48
  43ee3c:	mov    rcx,QWORD PTR [rbx+0xf8]
  43ee43:	test   rcx,rcx
  43ee46:	je     0x43ee4d
  43ee48:	call   0x402438
  43ee4d:	mov    rdi,QWORD PTR [rbx+0x100]
  43ee54:	test   rdi,rdi
  43ee57:	je     0x43ee88
  43ee59:	mov    rdx,QWORD PTR [rdi]
  43ee5c:	mov    rcx,QWORD PTR [rip+0x29895]        # 0x4686f8
  43ee63:	call   QWORD PTR [rip+0xe507]        # 0x44d370
  43ee69:	mov    rdx,rsi
  43ee6c:	mov    rcx,rdi
  43ee6f:	call   0x402474
  43ee74:	mov    rcx,rax
  43ee77:	call   0x402454
  43ee7c:	mov    rcx,QWORD PTR [rbx+0x100]
  43ee83:	call   0x402438
  43ee88:	mov    eax,DWORD PTR [rip+0x2a07a]        # 0x468f08
  43ee8e:	neg    eax
  43ee90:	sbb    edx,edx
  43ee92:	and    edx,0x80004004
  43ee98:	mov    edi,edx
  43ee9a:	mov    rcx,rbp
  43ee9d:	call   QWORD PTR [rip+0xe215]        # 0x44d0b8
  43eea3:	mov    eax,edi
  43eea5:	add    rsp,0x38
  43eea9:	pop    rdi
  43eeaa:	pop    rsi
  43eeab:	pop    rbp
  43eeac:	pop    rbx
  43eead:	ret    
  43eeae:	int3   
  43eeaf:	int3   
  43eeb0:	int3   
  43eeb1:	int3   
  43eeb2:	int3   
  43eeb3:	int3   
  43eeb4:	rex.W push rbp
  43eeb6:	sub    rsp,0x20
  43eeba:	mov    rbp,rdx
  43eebd:	lea    rcx,[rbp+0x70]
  43eec1:	call   0x417d58
  43eec6:	add    rsp,0x20
  43eeca:	pop    rbp
  43eecb:	ret    
  43eecc:	rex.W push rbx
  43eece:	push   rsi
  43eecf:	push   rdi
  43eed0:	sub    rsp,0x30
  43eed4:	mov    rax,QWORD PTR [r8]
  43eed7:	mov    r9d,ecx
  43eeda:	xor    ebx,ebx
  43eedc:	dec    r9d
  43eedf:	mov    DWORD PTR [r8+0x8],0x0
  43eee7:	mov    rdi,r8
  43eeea:	mov    BYTE PTR [rax],0x0
  43eeed:	mov    esi,ecx
  43eeef:	je     0x43ef79
  43eef5:	dec    r9d
  43eef8:	je     0x43ef66
  43eefa:	dec    r9d
  43eefd:	je     0x43ef53
  43eeff:	dec    r9d
  43ef02:	je     0x43ef4a
  43ef04:	dec    r9d
  43ef07:	je     0x43ef41
  43ef09:	dec    r9d
  43ef0c:	je     0x43ef38
  43ef0e:	dec    r9d
  43ef11:	je     0x43ef2f
  43ef13:	dec    r9d
  43ef16:	je     0x43ef26
  43ef18:	dec    r9d
  43ef1b:	jne    0x43ef80
  43ef1d:	mov    rbx,QWORD PTR [rip+0x2986c]        # 0x468790
  43ef24:	jmp    0x43ef80
  43ef26:	mov    rbx,QWORD PTR [rip+0x2985b]        # 0x468788
  43ef2d:	jmp    0x43ef80
  43ef2f:	mov    rbx,QWORD PTR [rip+0x2984a]        # 0x468780
  43ef36:	jmp    0x43ef80
  43ef38:	mov    rbx,QWORD PTR [rip+0x29839]        # 0x468778
  43ef3f:	jmp    0x43ef80
  43ef41:	mov    rbx,QWORD PTR [rip+0x29828]        # 0x468770
  43ef48:	jmp    0x43ef80
  43ef4a:	mov    rbx,QWORD PTR [rip+0x29817]        # 0x468768
  43ef51:	jmp    0x43ef80
  43ef53:	mov    rbx,QWORD PTR [rip+0x297ee]        # 0x468748
  43ef5a:	test   edx,edx
  43ef5c:	cmovne rbx,QWORD PTR [rip+0x297ec]        # 0x468750
  43ef64:	jmp    0x43ef80
  43ef66:	mov    rbx,QWORD PTR [rip+0x297eb]        # 0x468758
  43ef6d:	test   edx,edx
  43ef6f:	cmovne rbx,QWORD PTR [rip+0x297e9]        # 0x468760
  43ef77:	jmp    0x43ef80
  43ef79:	mov    rbx,QWORD PTR [rip+0x297c0]        # 0x468740
  43ef80:	mov    rdx,QWORD PTR [rip+0x29771]        # 0x4686f8
  43ef87:	mov    rcx,r8
  43ef8a:	call   0x402d24
  43ef8f:	test   rbx,rbx
  43ef92:	je     0x43ef99
  43ef94:	mov    rdx,rbx
  43ef97:	jmp    0x43efb9
  43ef99:	lea    rdx,[rsp+0x20]
  43ef9e:	mov    ecx,esi
  43efa0:	call   0x401930
  43efa5:	lea    rdx,[rip+0xe9f4]        # 0x44d9a0
  43efac:	mov    rcx,rdi
  43efaf:	call   0x402d24
  43efb4:	lea    rdx,[rsp+0x20]
  43efb9:	mov    rcx,rdi
  43efbc:	call   0x402d24
  43efc1:	add    rsp,0x30
  43efc5:	pop    rdi
  43efc6:	pop    rsi
  43efc7:	pop    rbx
  43efc8:	ret    
  43efc9:	int3   
  43efca:	int3   
  43efcb:	int3   
  43efcc:	rex.W push rbx
  43efce:	push   rsi
  43efcf:	push   rdi
  43efd0:	push   r12
  43efd2:	mov    rax,rsp
  43efd5:	sub    rsp,0x48
  43efd9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43efe2:	mov    edi,r8d
  43efe5:	mov    ebx,edx
  43efe7:	mov    rsi,rcx
  43efea:	lea    r12,[rip+0x29f1f]        # 0x468f10
  43eff1:	mov    QWORD PTR [rax+0x40],r12
  43eff5:	mov    rcx,r12
  43eff8:	call   QWORD PTR [rip+0xe0c2]        # 0x44d0c0
  43effe:	nop
  43efff:	test   ebx,ebx
  43f001:	jne    0x43f02d
  43f003:	cmp    QWORD PTR [rsi+0xe8],0x0
  43f00b:	je     0x43f0f2
  43f011:	mov    DWORD PTR [rsi+0x40],ebx
  43f014:	mov    rax,QWORD PTR [rsi+0x38]
  43f018:	mov    BYTE PTR [rax],bl
  43f01a:	mov    DWORD PTR [rsi+0x50],ebx
  43f01d:	mov    rax,QWORD PTR [rsi+0x48]
  43f021:	mov    WORD PTR [rax],bx
  43f024:	inc    QWORD PTR [rsi+0x30]
  43f028:	jmp    0x43f0f2
  43f02d:	inc    QWORD PTR [rsi+0x1a0]
  43f034:	inc    QWORD PTR [rsi+0x198]
  43f03b:	cmp    QWORD PTR [rsi+0x100],0x0
  43f043:	je     0x43f0f2
  43f049:	cmp    QWORD PTR [rsi+0xe8],0x0
  43f051:	je     0x43f05e
  43f053:	lea    rcx,[rsi+0x20]
  43f057:	mov    dl,0x1
  43f059:	call   0x448c48
  43f05e:	mov    rcx,QWORD PTR [rsi+0xf8]
  43f065:	test   rcx,rcx
  43f068:	je     0x43f06f
  43f06a:	call   0x402438
  43f06f:	lea    rcx,[rsp+0x28]
  43f074:	call   0x402b34
  43f079:	nop
  43f07a:	lea    r8,[rsp+0x28]
  43f07f:	mov    edx,edi
  43f081:	mov    ecx,ebx
  43f083:	call   0x43eecc
  43f088:	mov    rdx,QWORD PTR [rsi+0x100]
  43f08f:	mov    rdx,QWORD PTR [rdx]
  43f092:	mov    rcx,QWORD PTR [rsp+0x28]
  43f097:	call   QWORD PTR [rip+0xe2d3]        # 0x44d370
  43f09d:	cmp    DWORD PTR [rsi+0x150],0x0
  43f0a4:	je     0x43f0cf
  43f0a6:	mov    rbx,QWORD PTR [rsi+0x148]
  43f0ad:	mov    rdi,QWORD PTR [rsi+0x100]
  43f0b4:	mov    rdx,QWORD PTR [rdi]
  43f0b7:	lea    rcx,[rip+0xfaea]        # 0x44eba8
  43f0be:	call   QWORD PTR [rip+0xe2ac]        # 0x44d370
  43f0c4:	mov    rdx,rbx
  43f0c7:	mov    rcx,rdi
  43f0ca:	call   0x402474
  43f0cf:	mov    rcx,QWORD PTR [rsi+0x100]
  43f0d6:	call   0x402454
  43f0db:	mov    rcx,QWORD PTR [rsi+0x100]
  43f0e2:	call   0x402438
  43f0e7:	nop
  43f0e8:	mov    rcx,QWORD PTR [rsp+0x28]
  43f0ed:	call   0x40215c
  43f0f2:	mov    eax,DWORD PTR [rip+0x29e10]        # 0x468f08
  43f0f8:	neg    eax
  43f0fa:	sbb    ebx,ebx
  43f0fc:	and    ebx,0x80004004
  43f102:	mov    rcx,r12
  43f105:	call   QWORD PTR [rip+0xdfad]        # 0x44d0b8
  43f10b:	mov    eax,ebx
  43f10d:	add    rsp,0x48
  43f111:	pop    r12
  43f113:	pop    rdi
  43f114:	pop    rsi
  43f115:	pop    rbx
  43f116:	ret    
  43f117:	int3   
  43f118:	int3   
  43f119:	int3   
  43f11a:	int3   
  43f11b:	int3   
  43f11c:	rex.W push rbp
  43f11e:	sub    rsp,0x20
  43f122:	mov    rbp,rdx
  43f125:	lea    rcx,[rbp+0x88]
  43f12c:	call   0x417d58
  43f131:	add    rsp,0x20
  43f135:	pop    rbp
  43f136:	ret    
  43f137:	int3   
  43f138:	int3   
  43f139:	int3   
  43f13a:	int3   
  43f13b:	int3   
  43f13c:	rex.W push rbp
  43f13e:	sub    rsp,0x20
  43f142:	mov    rbp,rdx
  43f145:	lea    rcx,[rbp+0x28]
  43f149:	call   0x401000
  43f14e:	add    rsp,0x20
  43f152:	pop    rbp
  43f153:	ret    
  43f154:	rex.W push rbx
  43f156:	push   rsi
  43f157:	push   rdi
  43f158:	sub    rsp,0x20
  43f15c:	test   edx,edx
  43f15e:	mov    esi,r8d
  43f161:	mov    ebx,edx
  43f163:	mov    rdi,rcx
  43f166:	je     0x43f188
  43f168:	add    rcx,0x140
  43f16f:	mov    rdx,r9
  43f172:	call   0x403290
  43f177:	lea    rcx,[rdi-0x8]
  43f17b:	mov    r8d,esi
  43f17e:	mov    rax,QWORD PTR [rcx]
  43f181:	mov    edx,ebx
  43f183:	call   QWORD PTR [rax+0x40]
  43f186:	jmp    0x43f197
  43f188:	mov    eax,DWORD PTR [rip+0x29d7a]        # 0x468f08
  43f18e:	neg    eax
  43f190:	sbb    eax,eax
  43f192:	and    eax,0x80004004
  43f197:	add    rsp,0x20
  43f19b:	pop    rdi
  43f19c:	pop    rsi
  43f19d:	pop    rbx
  43f19e:	ret    
  43f19f:	int3   
  43f1a0:	sub    rsp,0x28
  43f1a4:	mov    BYTE PTR [rcx+0x10b],0x1
  43f1ab:	add    rcx,0x110
  43f1b2:	call   0x4032f8
  43f1b7:	xor    eax,eax
  43f1b9:	add    rsp,0x28
  43f1bd:	ret    
  43f1be:	int3   
  43f1bf:	int3   
  43f1c0:	rex.W push rbx
  43f1c2:	push   rsi
  43f1c3:	push   rdi
  43f1c4:	sub    rsp,0x30
  43f1c8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43f1d1:	mov    rbx,rdx
  43f1d4:	mov    rdi,rcx
  43f1d7:	lea    rsi,[rip+0x29d32]        # 0x468f10
  43f1de:	mov    QWORD PTR [rsp+0x50],rsi
  43f1e3:	mov    rcx,rsi
  43f1e6:	call   QWORD PTR [rip+0xded4]        # 0x44d0c0
  43f1ec:	nop
  43f1ed:	lea    rcx,[rdi+0x8]
  43f1f1:	mov    rax,QWORD PTR [rcx]
  43f1f4:	mov    rdx,rbx
  43f1f7:	call   QWORD PTR [rax+0x20]
  43f1fa:	mov    ebx,eax
  43f1fc:	mov    rcx,rsi
  43f1ff:	call   QWORD PTR [rip+0xdeb3]        # 0x44d0b8
  43f205:	mov    eax,ebx
  43f207:	jmp    0x43f20e
  43f209:	mov    eax,0x8007000e
  43f20e:	add    rsp,0x30
  43f212:	pop    rdi
  43f213:	pop    rsi
  43f214:	pop    rbx
  43f215:	ret    
  43f216:	int3   
  43f217:	int3   
  43f218:	int3   
  43f219:	int3   
  43f21a:	int3   
  43f21b:	int3   
  43f21c:	int3   
  43f21d:	int3   
  43f21e:	int3   
  43f21f:	int3   
  43f220:	rex.W push rbp
  43f222:	sub    rsp,0x20
  43f226:	mov    rbp,rdx
  43f229:	lea    rcx,[rbp+0x50]
  43f22d:	call   0x417d58
  43f232:	add    rsp,0x20
  43f236:	pop    rbp
  43f237:	ret    
  43f238:	int3   
  43f239:	int3   
  43f23a:	int3   
  43f23b:	int3   
  43f23c:	int3   
  43f23d:	int3   
  43f23e:	int3   
  43f23f:	int3   
  43f240:	mov    QWORD PTR [rsp+0x10],rdx
  43f245:	push   rbp
  43f246:	sub    rsp,0x20
  43f24a:	mov    rbp,rdx
  43f24d:	lea    rax,[rip+0xffffffffffffffb5]        # 0x43f209
  43f254:	jmp    0x43f256
  43f256:	add    rsp,0x20
  43f25a:	pop    rbp
  43f25b:	ret    
  43f25c:	int3   
  43f25d:	int3   
  43f25e:	int3   
  43f25f:	int3   
  43f260:	rex.W push rbx
  43f262:	push   rbp
  43f263:	push   rsi
  43f264:	push   rdi
  43f265:	sub    rsp,0x28
  43f269:	mov    eax,DWORD PTR [rip+0x29c99]        # 0x468f08
  43f26f:	mov    sil,r8b
  43f272:	mov    rbp,rdx
  43f275:	neg    eax
  43f277:	mov    rbx,rcx
  43f27a:	sbb    eax,eax
  43f27c:	and    eax,0x80004004
  43f281:	jne    0x43f323
  43f287:	inc    QWORD PTR [rcx+0x158]
  43f28e:	mov    BYTE PTR [rcx+0x160],al
  43f294:	mov    BYTE PTR [rcx+0x161],al
  43f29a:	mov    rax,QWORD PTR [rcx+0xe8]
  43f2a1:	mov    QWORD PTR [rcx+0x1a0],0x0
  43f2ac:	test   rax,rax
  43f2af:	je     0x43f2c5
  43f2b1:	cmp    QWORD PTR [rcx+0xf8],rax
  43f2b8:	jne    0x43f2c5
  43f2ba:	add    rcx,0x20
  43f2be:	xor    edx,edx
  43f2c0:	call   0x448c48
  43f2c5:	mov    rdi,QWORD PTR [rbx+0xf8]
  43f2cc:	test   rdi,rdi
  43f2cf:	je     0x43f307
  43f2d1:	mov    rcx,rdi
  43f2d4:	call   0x402454
  43f2d9:	mov    rcx,QWORD PTR [rip+0x29440]        # 0x468720
  43f2e0:	mov    rdx,QWORD PTR [rdi]
  43f2e3:	test   sil,sil
  43f2e6:	cmovne rcx,QWORD PTR [rip+0x2943a]        # 0x468728
  43f2ee:	call   QWORD PTR [rip+0xe07c]        # 0x44d370
  43f2f4:	mov    rdx,rbp
  43f2f7:	mov    rcx,rdi
  43f2fa:	call   0x402474
  43f2ff:	mov    rcx,rax
  43f302:	call   0x402454
  43f307:	cmp    QWORD PTR [rbx+0xe8],0x0
  43f30f:	je     0x43f321
  43f311:	lea    rcx,[rbx+0x38]
  43f315:	lea    rdx,[rip+0x130b4]        # 0x4523d0
  43f31c:	call   0x402be4
  43f321:	xor    eax,eax
  43f323:	add    rsp,0x28
  43f327:	pop    rdi
  43f328:	pop    rsi
  43f329:	pop    rbp
  43f32a:	pop    rbx
  43f32b:	ret    
  43f32c:	mov    QWORD PTR [rsp+0x8],rcx
  43f331:	push   rbx
  43f332:	push   rbp
  43f333:	push   rsi
  43f334:	push   rdi
  43f335:	push   r12
  43f337:	push   r13
  43f339:	mov    rax,rsp
  43f33c:	sub    rsp,0x48
  43f340:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43f349:	mov    edi,edx
  43f34b:	mov    rbx,rcx
  43f34e:	mov    DWORD PTR [rax+0x40],0x0
  43f355:	call   0x402b34
  43f35a:	mov    DWORD PTR [rsp+0x88],0x1
  43f365:	xor    esi,esi
  43f367:	lea    rbp,[rip+0x12b32]        # 0x451ea0
  43f36e:	mov    ecx,esi
  43f370:	mov    r12d,0x1
  43f376:	shl    r12d,cl
  43f379:	test   edi,r12d
  43f37c:	je     0x43f3a1
  43f37e:	mov    r13,QWORD PTR [rbp+0x0]
  43f382:	cmp    DWORD PTR [rbx+0x8],0x0
  43f386:	je     0x43f390
  43f388:	mov    rcx,rbx
  43f38b:	call   0x403860
  43f390:	mov    rdx,r13
  43f393:	mov    rcx,rbx
  43f396:	call   0x402d24
  43f39b:	not    r12d
  43f39e:	and    edi,r12d
  43f3a1:	inc    esi
  43f3a3:	add    rbp,0x8
  43f3a7:	cmp    esi,0xb
  43f3aa:	jb     0x43f36e
  43f3ac:	test   edi,edi
  43f3ae:	je     0x43f3e1
  43f3b0:	mov    BYTE PTR [rsp+0x28],0x30
  43f3b5:	mov    BYTE PTR [rsp+0x29],0x78
  43f3ba:	lea    rdx,[rsp+0x2a]
  43f3bf:	mov    ecx,edi
  43f3c1:	call   0x401a34
  43f3c6:	cmp    DWORD PTR [rbx+0x8],0x0
  43f3ca:	je     0x43f3d4
  43f3cc:	mov    rcx,rbx
  43f3cf:	call   0x403860
  43f3d4:	lea    rdx,[rsp+0x28]
  43f3d9:	mov    rcx,rbx
  43f3dc:	call   0x402d24
  43f3e1:	mov    rax,rbx
  43f3e4:	add    rsp,0x48
  43f3e8:	pop    r13
  43f3ea:	pop    r12
  43f3ec:	pop    rdi
  43f3ed:	pop    rsi
  43f3ee:	pop    rbp
  43f3ef:	pop    rbx
  43f3f0:	ret    
  43f3f1:	int3   
  43f3f2:	int3   
  43f3f3:	int3   
  43f3f4:	int3   
  43f3f5:	int3   
  43f3f6:	int3   
  43f3f7:	int3   
  43f3f8:	int3   
  43f3f9:	int3   
  43f3fa:	int3   
  43f3fb:	int3   
  43f3fc:	rex.W push rbp
  43f3fe:	sub    rsp,0x20
  43f402:	mov    rbp,rdx
  43f405:	mov    eax,DWORD PTR [rbp+0x88]
  43f40b:	and    eax,0x1
  43f40e:	test   eax,eax
  43f410:	je     0x43f425
  43f412:	and    DWORD PTR [rbp+0x88],0xfffffffe
  43f419:	mov    rcx,QWORD PTR [rbp+0x80]
  43f420:	call   0x401000
  43f425:	add    rsp,0x20
  43f429:	pop    rbp
  43f42a:	ret    
  43f42b:	int3   
  43f42c:	test   r8d,r8d
  43f42f:	je     0x43f487
  43f431:	push   rbx
  43f432:	push   rsi
  43f433:	push   rdi
  43f434:	sub    rsp,0x30
  43f438:	mov    rdi,rcx
  43f43b:	mov    rsi,rdx
  43f43e:	lea    rcx,[rsp+0x20]
  43f443:	mov    edx,r8d
  43f446:	call   0x43f32c
  43f44b:	mov    rdx,QWORD PTR [rdi]
  43f44e:	mov    rcx,rsi
  43f451:	mov    rbx,QWORD PTR [rax]
  43f454:	call   QWORD PTR [rip+0xdf16]        # 0x44d370
  43f45a:	mov    rcx,rdi
  43f45d:	call   0x402454
  43f462:	mov    rdx,QWORD PTR [rdi]
  43f465:	mov    rcx,rbx
  43f468:	call   QWORD PTR [rip+0xdf02]        # 0x44d370
  43f46e:	mov    rcx,rdi
  43f471:	call   0x402454
  43f476:	mov    rcx,QWORD PTR [rsp+0x20]
  43f47b:	call   0x40215c
  43f480:	add    rsp,0x30
  43f484:	pop    rdi
  43f485:	pop    rsi
  43f486:	pop    rbx
  43f487:	ret    
  43f488:	rex.W push rbx
  43f48a:	push   rsi
  43f48b:	push   rdi
  43f48c:	sub    rsp,0x20
  43f490:	mov    rdi,r8
  43f493:	mov    rbx,rdx
  43f496:	mov    rsi,rcx
  43f499:	call   0x4033ac
  43f49e:	mov    rdx,rbx
  43f4a1:	mov    rcx,rsi
  43f4a4:	call   0x403560
  43f4a9:	lea    rdx,[rip+0x12f5c]        # 0x45240c
  43f4b0:	mov    rcx,rsi
  43f4b3:	call   0x403560
  43f4b8:	mov    rdx,rdi
  43f4bb:	mov    rcx,rsi
  43f4be:	call   0x4033f0
  43f4c3:	lea    rdx,[rip+0x12f36]        # 0x452400
  43f4ca:	mov    rcx,rsi
  43f4cd:	add    rsp,0x20
  43f4d1:	pop    rdi
  43f4d2:	pop    rsi
  43f4d3:	pop    rbx
  43f4d4:	jmp    0x403560
  43f4d9:	int3   
  43f4da:	int3   
  43f4db:	int3   
  43f4dc:	rex.W push rbx
  43f4de:	push   rdi
  43f4df:	sub    rsp,0x28
  43f4e3:	mov    rax,QWORD PTR [rcx+0xe8]
  43f4ea:	mov    rbx,rcx
  43f4ed:	test   rax,rax
  43f4f0:	je     0x43f506
  43f4f2:	cmp    QWORD PTR [rcx+0xf8],rax
  43f4f9:	jne    0x43f506
  43f4fb:	add    rcx,0x20
  43f4ff:	xor    edx,edx
  43f501:	call   0x448c48
  43f506:	mov    rdi,QWORD PTR [rbx+0xf8]
  43f50d:	test   rdi,rdi
  43f510:	je     0x43f547
  43f512:	mov    rcx,rdi
  43f515:	call   0x402454
  43f51a:	mov    rdx,QWORD PTR [rdi]
  43f51d:	mov    rcx,QWORD PTR [rip+0x29214]        # 0x468738
  43f524:	call   QWORD PTR [rip+0xde46]        # 0x44d370
  43f52a:	mov    rcx,rdi
  43f52d:	call   0x402454
  43f532:	cmp    BYTE PTR [rbx+0x1a8],0x0
  43f539:	je     0x43f547
  43f53b:	mov    rcx,QWORD PTR [rbx+0xf8]
  43f542:	call   0x402438
  43f547:	mov    eax,DWORD PTR [rip+0x299bb]        # 0x468f08
  43f54d:	neg    eax
  43f54f:	sbb    eax,eax
  43f551:	and    eax,0x80004004
  43f556:	add    rsp,0x28
  43f55a:	pop    rdi
  43f55b:	pop    rbx
  43f55c:	ret    
  43f55d:	int3   
  43f55e:	int3   
  43f55f:	int3   
  43f560:	rex.W push rbx
  43f562:	push   rsi
  43f563:	push   rdi
  43f564:	push   r12
  43f566:	sub    rsp,0x48
  43f56a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43f573:	mov    ebx,edx
  43f575:	mov    rdi,rcx
  43f578:	lea    r12,[rip+0x29991]        # 0x468f10
  43f57f:	mov    QWORD PTR [rsp+0x70],r12
  43f584:	mov    rcx,r12
  43f587:	call   QWORD PTR [rip+0xdb33]        # 0x44d0c0
  43f58d:	nop
  43f58e:	cmp    QWORD PTR [rdi+0xe8],0x0
  43f596:	je     0x43f5c1
  43f598:	lea    rcx,[rdi+0x20]
  43f59c:	mov    dl,0x1
  43f59e:	call   0x448c48
  43f5a3:	mov    DWORD PTR [rdi+0x40],0x0
  43f5aa:	mov    rax,QWORD PTR [rdi+0x38]
  43f5ae:	mov    BYTE PTR [rax],0x0
  43f5b1:	mov    DWORD PTR [rdi+0x50],0x0
  43f5b8:	mov    rax,QWORD PTR [rdi+0x48]
  43f5bc:	mov    WORD PTR [rax],0x0
  43f5c1:	mov    rcx,QWORD PTR [rdi+0xf8]
  43f5c8:	test   rcx,rcx
  43f5cb:	je     0x43f5d2
  43f5cd:	call   0x402438
  43f5d2:	test   ebx,ebx
  43f5d4:	jne    0x43f6a1
  43f5da:	cmp    QWORD PTR [rdi+0x1a0],0x0
  43f5e2:	jne    0x43f62a
  43f5e4:	cmp    BYTE PTR [rdi+0x160],bl
  43f5ea:	jne    0x43f62a
  43f5ec:	cmp    BYTE PTR [rdi+0x161],bl
  43f5f2:	je     0x43f5fd
  43f5f4:	inc    QWORD PTR [rdi+0x180]
  43f5fb:	jmp    0x43f604
  43f5fd:	inc    QWORD PTR [rdi+0x168]
  43f604:	mov    rbx,QWORD PTR [rdi+0xf8]
  43f60b:	test   rbx,rbx
  43f60e:	je     0x43f67a
  43f610:	mov    rdx,QWORD PTR [rbx]
  43f613:	mov    rcx,QWORD PTR [rip+0x29116]        # 0x468730
  43f61a:	call   QWORD PTR [rip+0xdd50]        # 0x44d370
  43f620:	mov    rcx,rbx
  43f623:	call   0x402454
  43f628:	jmp    0x43f67a
  43f62a:	inc    QWORD PTR [rdi+0x178]
  43f631:	mov    rcx,QWORD PTR [rdi+0xf8]
  43f638:	test   rcx,rcx
  43f63b:	je     0x43f67a
  43f63d:	call   0x402454
  43f642:	cmp    QWORD PTR [rdi+0x1a0],0x0
  43f64a:	je     0x43f67a
  43f64c:	mov    rbx,QWORD PTR [rdi+0xf8]
  43f653:	mov    rdx,QWORD PTR [rbx]
  43f656:	lea    rcx,[rip+0x12de3]        # 0x452440
  43f65d:	call   QWORD PTR [rip+0xdd0d]        # 0x44d370
  43f663:	mov    rdx,QWORD PTR [rdi+0x1a0]
  43f66a:	mov    rcx,rbx
  43f66d:	call   0x40268c
  43f672:	mov    rcx,rax
  43f675:	call   0x402454
  43f67a:	mov    rcx,QWORD PTR [rdi+0xf8]
  43f681:	test   rcx,rcx
  43f684:	je     0x43f741
  43f68a:	cmp    BYTE PTR [rdi+0x1a8],0x0
  43f691:	je     0x43f741
  43f697:	call   0x402438
  43f69c:	jmp    0x43f741
  43f6a1:	inc    QWORD PTR [rdi+0x178]
  43f6a8:	cmp    ebx,0x80004004
  43f6ae:	je     0x43f75e
  43f6b4:	cmp    ebx,0x70
  43f6b7:	je     0x43f75e
  43f6bd:	mov    rsi,QWORD PTR [rdi+0x100]
  43f6c4:	test   rsi,rsi
  43f6c7:	je     0x43f741
  43f6c9:	mov    rcx,rsi
  43f6cc:	call   0x402454
  43f6d1:	mov    rdx,QWORD PTR [rsi]
  43f6d4:	mov    rcx,QWORD PTR [rip+0x2901d]        # 0x4686f8
  43f6db:	call   QWORD PTR [rip+0xdc8f]        # 0x44d370
  43f6e1:	cmp    ebx,0x8007000e
  43f6e7:	jne    0x43f702
  43f6e9:	mov    rdx,QWORD PTR [rdi+0x100]
  43f6f0:	mov    rdx,QWORD PTR [rdx]
  43f6f3:	mov    rcx,QWORD PTR [rip+0x2901e]        # 0x468718
  43f6fa:	call   QWORD PTR [rip+0xdc70]        # 0x44d370
  43f700:	jmp    0x43f729
  43f702:	mov    edx,ebx
  43f704:	lea    rcx,[rsp+0x28]
  43f709:	call   0x4068d0
  43f70e:	nop
  43f70f:	mov    rdx,QWORD PTR [rax]
  43f712:	mov    rcx,QWORD PTR [rdi+0x100]
  43f719:	call   0x402474
  43f71e:	nop
  43f71f:	mov    rcx,QWORD PTR [rsp+0x28]
  43f724:	call   0x40215c
  43f729:	mov    rcx,QWORD PTR [rdi+0x100]
  43f730:	call   0x402454
  43f735:	mov    rcx,QWORD PTR [rdi+0x100]
  43f73c:	call   0x402438
  43f741:	mov    eax,DWORD PTR [rip+0x297c1]        # 0x468f08
  43f747:	neg    eax
  43f749:	sbb    ebx,ebx
  43f74b:	and    ebx,0x80004004
  43f751:	mov    rcx,r12
  43f754:	call   QWORD PTR [rip+0xd95e]        # 0x44d0b8
  43f75a:	mov    eax,ebx
  43f75c:	jmp    0x43f769
  43f75e:	mov    rcx,r12
  43f761:	call   QWORD PTR [rip+0xd951]        # 0x44d0b8
  43f767:	mov    eax,ebx
  43f769:	add    rsp,0x48
  43f76d:	pop    r12
  43f76f:	pop    rdi
  43f770:	pop    rsi
  43f771:	pop    rbx
  43f772:	ret    
  43f773:	int3   
  43f774:	int3   
  43f775:	int3   
  43f776:	int3   
  43f777:	int3   
  43f778:	int3   
  43f779:	int3   
  43f77a:	int3   
  43f77b:	int3   
  43f77c:	int3   
  43f77d:	int3   
  43f77e:	int3   
  43f77f:	int3   
  43f780:	rex.W push rbp
  43f782:	sub    rsp,0x20
  43f786:	mov    rbp,rdx
  43f789:	lea    rcx,[rbp+0x70]
  43f78d:	call   0x417d58
  43f792:	add    rsp,0x20
  43f796:	pop    rbp
  43f797:	ret    
  43f798:	int3   
  43f799:	int3   
  43f79a:	int3   
  43f79b:	int3   
  43f79c:	int3   
  43f79d:	int3   
  43f79e:	int3   
  43f79f:	int3   
  43f7a0:	rex.W push rbp
  43f7a2:	sub    rsp,0x20
  43f7a6:	mov    rbp,rdx
  43f7a9:	lea    rcx,[rbp+0x28]
  43f7ad:	call   0x401000
  43f7b2:	add    rsp,0x20
  43f7b6:	pop    rbp
  43f7b7:	ret    
  43f7b8:	rex.W push rbx
  43f7ba:	push   rbp
  43f7bb:	push   rsi
  43f7bc:	push   rdi
  43f7bd:	sub    rsp,0x48
  43f7c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43f7ca:	mov    rsi,r8
  43f7cd:	mov    rdi,rdx
  43f7d0:	mov    rbp,rcx
  43f7d3:	lea    rdx,[rip+0x12cf6]        # 0x4524d0
  43f7da:	lea    rcx,[rsp+0x28]
  43f7df:	call   0x4031c0
  43f7e4:	nop
  43f7e5:	lea    rdx,[rsi+0x90]
  43f7ec:	lea    rcx,[rsp+0x28]
  43f7f1:	call   0x403444
  43f7f6:	mov    eax,DWORD PTR [rsi+0x2c]
  43f7f9:	cmp    DWORD PTR [rsi+0xc0],eax
  43f7ff:	jne    0x43f81e
  43f801:	lea    rcx,[rsp+0x28]
  43f806:	call   0x4033ac
  43f80b:	lea    rdx,[rip+0x12c9e]        # 0x4524b0
  43f812:	lea    rcx,[rsp+0x28]
  43f817:	call   0x403560
  43f81c:	jmp    0x43f87a
  43f81e:	lea    rbx,[rip+0x12c2f]        # 0x452454
  43f825:	test   eax,eax
  43f827:	jns    0x43f82e
  43f829:	mov    r8,rbx
  43f82c:	jmp    0x43f83d
  43f82e:	mov    rcx,rax
  43f831:	mov    rax,QWORD PTR [rdi+0x40]
  43f835:	mov    rcx,QWORD PTR [rax+rcx*8]
  43f839:	mov    r8,QWORD PTR [rcx+0x18]
  43f83d:	lea    rdx,[rip+0x12c54]        # 0x452498
  43f844:	lea    rcx,[rsp+0x28]
  43f849:	call   0x43f488
  43f84e:	mov    r11d,DWORD PTR [rsi+0xc0]
  43f855:	test   r11d,r11d
  43f858:	js     0x43f866
  43f85a:	mov    rax,QWORD PTR [rdi+0x40]
  43f85e:	mov    rcx,QWORD PTR [rax+r11*8]
  43f862:	mov    rbx,QWORD PTR [rcx+0x18]
  43f866:	mov    r8,rbx
  43f869:	lea    rdx,[rip+0x12c10]        # 0x452480
  43f870:	lea    rcx,[rsp+0x28]
  43f875:	call   0x43f488
  43f87a:	mov    rdx,QWORD PTR [rsp+0x28]
  43f87f:	mov    rcx,rbp
  43f882:	call   0x402474
  43f887:	mov    rbx,rax
  43f88a:	mov    rcx,rax
  43f88d:	call   0x402454
  43f892:	mov    rcx,rbx
  43f895:	call   0x402454
  43f89a:	nop
  43f89b:	mov    rcx,QWORD PTR [rsp+0x28]
  43f8a0:	call   0x40215c
  43f8a5:	add    rsp,0x48
  43f8a9:	pop    rdi
  43f8aa:	pop    rsi
  43f8ab:	pop    rbp
  43f8ac:	pop    rbx
  43f8ad:	ret    
  43f8ae:	int3   
  43f8af:	int3   
  43f8b0:	int3   
  43f8b1:	int3   
  43f8b2:	int3   
  43f8b3:	int3   
  43f8b4:	int3   
  43f8b5:	int3   
  43f8b6:	int3   
  43f8b7:	int3   
  43f8b8:	rex.W push rbp
  43f8ba:	sub    rsp,0x20
  43f8be:	mov    rbp,rdx
  43f8c1:	lea    rcx,[rbp+0x28]
  43f8c5:	call   0x401000
  43f8ca:	add    rsp,0x20
  43f8ce:	pop    rbp
  43f8cf:	ret    
  43f8d0:	mov    QWORD PTR [rsp+0x20],r9
  43f8d5:	push   rbx
  43f8d6:	push   rbp
  43f8d7:	push   rsi
  43f8d8:	push   rdi
  43f8d9:	push   r12
  43f8db:	push   r13
  43f8dd:	push   r14
  43f8df:	push   r15
  43f8e1:	sub    rsp,0x48
  43f8e5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  43f8ee:	mov    rbp,r9
  43f8f1:	mov    r13,r8
  43f8f4:	mov    r15,rdx
  43f8f7:	mov    rdi,rcx
  43f8fa:	cmp    QWORD PTR [rcx+0xe8],0x0
  43f902:	je     0x43f90f
  43f904:	add    rcx,0x20
  43f908:	mov    dl,0x1
  43f90a:	call   0x448c48
  43f90f:	cmp    QWORD PTR [rdi+0xe8],0x0
  43f917:	je     0x43f93f
  43f919:	mov    QWORD PTR [rdi+0x30],0x0
  43f921:	mov    DWORD PTR [rdi+0x40],0x0
  43f928:	mov    rax,QWORD PTR [rdi+0x38]
  43f92c:	mov    BYTE PTR [rax],0x0
  43f92f:	mov    DWORD PTR [rdi+0x50],0x0
  43f936:	mov    rax,QWORD PTR [rdi+0x48]
  43f93a:	mov    WORD PTR [rax],0x0
  43f93f:	cmp    QWORD PTR [rdi+0xe8],0x0
  43f947:	je     0x43f954
  43f949:	lea    rcx,[rdi+0x20]
  43f94d:	mov    dl,0x1
  43f94f:	call   0x448c48
  43f954:	mov    rcx,QWORD PTR [rdi+0xf8]
  43f95b:	test   rcx,rcx
  43f95e:	je     0x43f965
  43f960:	call   0x402438
  43f965:	xor    r12d,r12d
  43f968:	cmp    DWORD PTR [r13+0x8],r12d
  43f96c:	jbe    0x43fbac
  43f972:	xor    r14d,r14d
  43f975:	mov    rax,QWORD PTR [r13+0x0]
  43f979:	mov    rsi,QWORD PTR [r14+rax*1]
  43f97d:	mov    ebx,DWORD PTR [rsi+0x24]
  43f980:	cmp    BYTE PTR [rsi+0x21],0x0
  43f984:	je     0x43f989
  43f986:	or     ebx,0x20
  43f989:	test   ebx,ebx
  43f98b:	jne    0x43f996
  43f98d:	cmp    DWORD PTR [rsi+0x40],ebx
  43f990:	je     0x43fa61
  43f996:	mov    rcx,QWORD PTR [rdi+0x100]
  43f99d:	test   rcx,rcx
  43f9a0:	je     0x43f9c7
  43f9a2:	call   0x402454
  43f9a7:	test   r12d,r12d
  43f9aa:	je     0x43f9c7
  43f9ac:	mov    rdx,QWORD PTR [rsi+0x90]
  43f9b3:	mov    rcx,QWORD PTR [rdi+0x100]
  43f9ba:	call   0x402474
  43f9bf:	mov    rcx,rax
  43f9c2:	call   0x402454
  43f9c7:	test   ebx,ebx
  43f9c9:	je     0x43f9f4
  43f9cb:	mov    rcx,QWORD PTR [rdi+0x100]
  43f9d2:	test   rcx,rcx
  43f9d5:	je     0x43f9e6
  43f9d7:	mov    r8d,ebx
  43f9da:	lea    rdx,[rip+0x12b5f]        # 0x452540
  43f9e1:	call   0x43f42c
  43f9e6:	inc    QWORD PTR [rdi+0x188]
  43f9ed:	mov    BYTE PTR [rdi+0x160],0x1
  43f9f4:	cmp    DWORD PTR [rsi+0x40],0x0
  43f9f8:	je     0x43fa44
  43f9fa:	mov    rbp,QWORD PTR [rdi+0x100]
  43fa01:	test   rbp,rbp
  43fa04:	je     0x43fa36
  43fa06:	mov    rbx,QWORD PTR [rsi+0x38]
  43fa0a:	mov    rdx,QWORD PTR [rbp+0x0]
  43fa0e:	lea    rcx,[rip+0x12b2b]        # 0x452540
  43fa15:	call   QWORD PTR [rip+0xd955]        # 0x44d370
  43fa1b:	mov    rcx,rbp
  43fa1e:	call   0x402454
  43fa23:	mov    rdx,rbx
  43fa26:	mov    rcx,rbp
  43fa29:	call   0x402474
  43fa2e:	mov    rcx,rax
  43fa31:	call   0x402454
  43fa36:	inc    QWORD PTR [rdi+0x188]
  43fa3d:	mov    BYTE PTR [rdi+0x160],0x1
  43fa44:	mov    rcx,QWORD PTR [rdi+0x100]
  43fa4b:	test   rcx,rcx
  43fa4e:	je     0x43fa61
  43fa50:	call   0x402454
  43fa55:	mov    rcx,QWORD PTR [rdi+0x100]
  43fa5c:	call   0x402438
  43fa61:	mov    ebx,DWORD PTR [rsi+0x28]
  43fa64:	cmp    BYTE PTR [rsi+0x22],0x0
  43fa68:	jne    0x43fa79
  43fa6a:	cmp    BYTE PTR [rsi+0x20],0x0
  43fa6e:	je     0x43fa79
  43fa70:	test   BYTE PTR [rsi+0x24],0x40
  43fa74:	jne    0x43fa79
  43fa76:	or     ebx,0x40
  43fa79:	test   ebx,ebx
  43fa7b:	jne    0x43fa86
  43fa7d:	cmp    DWORD PTR [rsi+0x50],ebx
  43fa80:	je     0x43fb5a
  43fa86:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fa8d:	test   rcx,rcx
  43fa90:	je     0x43fab7
  43fa92:	call   0x402454
  43fa97:	test   r12d,r12d
  43fa9a:	je     0x43fab7
  43fa9c:	mov    rdx,QWORD PTR [rsi+0x90]
  43faa3:	mov    rcx,QWORD PTR [rdi+0xf8]
  43faaa:	call   0x402474
  43faaf:	mov    rcx,rax
  43fab2:	call   0x402454
  43fab7:	test   ebx,ebx
  43fab9:	je     0x43fae4
  43fabb:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fac2:	test   rcx,rcx
  43fac5:	je     0x43fad6
  43fac7:	mov    r8d,ebx
  43faca:	lea    rdx,[rip+0x12a5f]        # 0x452530
  43fad1:	call   0x43f42c
  43fad6:	inc    QWORD PTR [rdi+0x190]
  43fadd:	mov    BYTE PTR [rdi+0x161],0x1
  43fae4:	cmp    DWORD PTR [rsi+0x50],0x0
  43fae8:	je     0x43fb34
  43faea:	mov    rbp,QWORD PTR [rdi+0xf8]
  43faf1:	test   rbp,rbp
  43faf4:	je     0x43fb26
  43faf6:	mov    rbx,QWORD PTR [rsi+0x48]
  43fafa:	mov    rdx,QWORD PTR [rbp+0x0]
  43fafe:	lea    rcx,[rip+0x12a2b]        # 0x452530
  43fb05:	call   QWORD PTR [rip+0xd865]        # 0x44d370
  43fb0b:	mov    rcx,rbp
  43fb0e:	call   0x402454
  43fb13:	mov    rdx,rbx
  43fb16:	mov    rcx,rbp
  43fb19:	call   0x402474
  43fb1e:	mov    rcx,rax
  43fb21:	call   0x402454
  43fb26:	inc    QWORD PTR [rdi+0x190]
  43fb2d:	mov    BYTE PTR [rdi+0x161],0x1
  43fb34:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fb3b:	test   rcx,rcx
  43fb3e:	je     0x43fb5a
  43fb40:	call   0x402454
  43fb45:	cmp    BYTE PTR [rdi+0x1a8],0x0
  43fb4c:	je     0x43fb5a
  43fb4e:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fb55:	call   0x402438
  43fb5a:	cmp    DWORD PTR [rsi+0x2c],0x0
  43fb5e:	jl     0x43fb93
  43fb60:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fb67:	test   rcx,rcx
  43fb6a:	je     0x43fb8c
  43fb6c:	mov    r8,rsi
  43fb6f:	mov    rdx,r15
  43fb72:	call   0x43f7b8
  43fb77:	cmp    BYTE PTR [rdi+0x1a8],0x0
  43fb7e:	je     0x43fb8c
  43fb80:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fb87:	call   0x402438
  43fb8c:	mov    BYTE PTR [rdi+0x161],0x1
  43fb93:	inc    r12d
  43fb96:	add    r14,0x8
  43fb9a:	cmp    r12d,DWORD PTR [r13+0x8]
  43fb9e:	jb     0x43f975
  43fba4:	mov    rbp,QWORD PTR [rsp+0xa8]
  43fbac:	mov    ebx,DWORD PTR [rsp+0xb0]
  43fbb3:	test   ebx,ebx
  43fbb5:	jne    0x43fbeb
  43fbb7:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fbbe:	test   rcx,rcx
  43fbc1:	je     0x43fcb1
  43fbc7:	mov    r8,r13
  43fbca:	mov    rdx,r15
  43fbcd:	call   0x441a08
  43fbd2:	test   eax,eax
  43fbd4:	jne    0x43fcc0
  43fbda:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fbe1:	call   0x402454
  43fbe6:	jmp    0x43fcb1
  43fbeb:	inc    QWORD PTR [rdi+0x170]
  43fbf2:	mov    rcx,QWORD PTR [rdi+0xf8]
  43fbf9:	test   rcx,rcx
  43fbfc:	je     0x43fc03
  43fbfe:	call   0x402438
  43fc03:	mov    rsi,QWORD PTR [rdi+0x100]
  43fc0a:	test   rsi,rsi
  43fc0d:	je     0x43fcb1
  43fc13:	mov    rdx,QWORD PTR [rsi]
  43fc16:	mov    rcx,QWORD PTR [rip+0x28adb]        # 0x4686f8
  43fc1d:	call   QWORD PTR [rip+0xd74d]        # 0x44d370
  43fc23:	mov    rdx,rbp
  43fc26:	mov    rcx,rsi
  43fc29:	call   0x402474
  43fc2e:	mov    rcx,rax
  43fc31:	call   0x402454
  43fc36:	mov    r8,r13
  43fc39:	mov    rdx,r15
  43fc3c:	mov    rcx,QWORD PTR [rdi+0x100]
  43fc43:	call   0x441e00
  43fc48:	test   eax,eax
  43fc4a:	jne    0x43fcc0
  43fc4c:	cmp    ebx,0x1
  43fc4f:	je     0x43fca5
  43fc51:	cmp    ebx,0x8007000e
  43fc57:	jne    0x43fc72
  43fc59:	mov    rdx,QWORD PTR [rdi+0x100]
  43fc60:	mov    rdx,QWORD PTR [rdx]
  43fc63:	lea    rcx,[rip+0x128a6]        # 0x452510
  43fc6a:	call   QWORD PTR [rip+0xd700]        # 0x44d370
  43fc70:	jmp    0x43fc99
  43fc72:	mov    edx,ebx
  43fc74:	lea    rcx,[rsp+0x28]
  43fc79:	call   0x4068d0
  43fc7e:	nop
  43fc7f:	mov    rdx,QWORD PTR [rax]
  43fc82:	mov    rcx,QWORD PTR [rdi+0x100]
  43fc89:	call   0x402474
  43fc8e:	nop
  43fc8f:	mov    rcx,QWORD PTR [rsp+0x28]
  43fc94:	call   0x40215c
  43fc99:	mov    rcx,QWORD PTR [rdi+0x100]
  43fca0:	call   0x402454
  43fca5:	mov    rcx,QWORD PTR [rdi+0x100]
  43fcac:	call   0x402438
  43fcb1:	mov    eax,DWORD PTR [rip+0x29251]        # 0x468f08
  43fcb7:	neg    eax
  43fcb9:	sbb    eax,eax
  43fcbb:	and    eax,0x80004004
  43fcc0:	add    rsp,0x48
  43fcc4:	pop    r15
  43fcc6:	pop    r14
  43fcc8:	pop    r13
  43fcca:	pop    r12
  43fccc:	pop    rdi
  43fccd:	pop    rsi
  43fcce:	pop    rbp
  43fccf:	pop    rbx
  43fcd0:	ret    
  43fcd1:	int3   
  43fcd2:	int3   
  43fcd3:	int3   
  43fcd4:	int3   
  43fcd5:	int3   
  43fcd6:	int3   
  43fcd7:	int3   
  43fcd8:	int3   
  43fcd9:	int3   
  43fcda:	int3   
  43fcdb:	int3   
  43fcdc:	int3   
  43fcdd:	int3   
  43fcde:	int3   
  43fcdf:	int3   
  43fce0:	rex.W push rbp
  43fce2:	sub    rsp,0x20
  43fce6:	mov    rbp,rdx
  43fce9:	lea    rcx,[rbp+0x28]
  43fced:	call   0x401000
  43fcf2:	add    rsp,0x20
  43fcf6:	pop    rbp
  43fcf7:	ret    
  43fcf8:	rex.W push rbx
  43fcfa:	push   rdi
  43fcfb:	sub    rsp,0x28
  43fcff:	cmp    BYTE PTR [rcx+0x181],0x0
  43fd06:	mov    rbx,rcx
  43fd09:	je     0x43fd2f
  43fd0b:	mov    rdi,QWORD PTR [rcx+0xe0]
  43fd12:	test   rdi,rdi
  43fd15:	je     0x43fd2f
  43fd17:	mov    rdx,QWORD PTR [rdi]
  43fd1a:	mov    rcx,QWORD PTR [rip+0x28a87]        # 0x4687a8
  43fd21:	call   QWORD PTR [rip+0xd649]        # 0x44d370
  43fd27:	mov    rcx,rdi
  43fd2a:	call   0x402454
  43fd2f:	cmp    QWORD PTR [rbx+0xd0],0x0
  43fd37:	je     0x43fd52
  43fd39:	lea    rcx,[rbx+0x8]
  43fd3d:	call   0x448c20
  43fd42:	lea    rcx,[rbx+0x20]
  43fd46:	lea    rdx,[rip+0x1246b]        # 0x4521b8
  43fd4d:	call   0x402be4
  43fd52:	mov    eax,DWORD PTR [rip+0x291b0]        # 0x468f08
  43fd58:	neg    eax
  43fd5a:	sbb    eax,eax
  43fd5c:	and    eax,0x80004004
  43fd61:	add    rsp,0x28
  43fd65:	pop    rdi
  43fd66:	pop    rbx
  43fd67:	ret    
  43fd68:	rex.W push rbx
  43fd6a:	sub    rsp,0x20
  43fd6e:	cmp    QWORD PTR [rcx+0xd0],0x0
  43fd76:	je     0x43fdaa
  43fd78:	mov    rax,QWORD PTR [rdx+0x10]
  43fd7c:	lea    rbx,[rcx+0x8]
  43fd80:	add    rcx,0x30
  43fd84:	add    rax,QWORD PTR [rdx+0x8]
  43fd88:	add    rax,QWORD PTR [rdx]
  43fd8b:	mov    QWORD PTR [rcx-0x18],rax
  43fd8f:	mov    rax,QWORD PTR [rdx+0x20]
  43fd93:	add    rax,QWORD PTR [rdx+0x18]
  43fd97:	mov    rdx,r8
  43fd9a:	mov    QWORD PTR [rbx],rax
  43fd9d:	call   0x4032f8
  43fda2:	mov    rcx,rbx
  43fda5:	call   0x448f00
  43fdaa:	mov    eax,DWORD PTR [rip+0x29158]        # 0x468f08
  43fdb0:	neg    eax
  43fdb2:	sbb    eax,eax
  43fdb4:	and    eax,0x80004004
  43fdb9:	add    rsp,0x20
  43fdbd:	pop    rbx
  43fdbe:	ret    
  43fdbf:	int3   
  43fdc0:	add    rcx,0x8
  43fdc4:	jmp    0x44a48c
  43fdc9:	int3   
  43fdca:	int3   
  43fdcb:	int3   
  43fdcc:	rex.W push rbx
  43fdce:	push   rsi
  43fdcf:	push   rdi
  43fdd0:	sub    rsp,0x20
  43fdd4:	cmp    QWORD PTR [rcx+0xd0],0x0
  43fddc:	mov    rsi,rdx
  43fddf:	mov    rdi,rcx
  43fde2:	je     0x43fdf8
  43fde4:	mov    dl,0x1
  43fde6:	add    rcx,0x8
  43fdea:	call   0x448c48
  43fdef:	lea    rcx,[rdi+0x8]
  43fdf3:	call   0x448c20
  43fdf8:	cmp    BYTE PTR [rdi+0x181],0x0
  43fdff:	je     0x43fe40
  43fe01:	cmp    QWORD PTR [rdi+0xe0],0x0
  43fe09:	je     0x43fe40
  43fe0b:	lea    rbx,[rdi+0x170]
  43fe12:	mov    rdx,rsi
  43fe15:	mov    rcx,rbx
  43fe18:	call   0x43e604
  43fe1d:	mov    rdi,QWORD PTR [rdi+0xe0]
  43fe24:	mov    rcx,QWORD PTR [rbx]
  43fe27:	mov    rdx,QWORD PTR [rdi]
  43fe2a:	call   QWORD PTR [rip+0xd540]        # 0x44d370
  43fe30:	mov    rcx,rdi
  43fe33:	call   0x402454
  43fe38:	mov    rcx,rdi
  43fe3b:	call   0x402454
  43fe40:	mov    eax,DWORD PTR [rip+0x290c2]        # 0x468f08
  43fe46:	neg    eax
  43fe48:	sbb    eax,eax
  43fe4a:	and    eax,0x80004004
  43fe4f:	add    rsp,0x20
  43fe53:	pop    rdi
  43fe54:	pop    rsi
  43fe55:	pop    rbx
  43fe56:	ret    
  43fe57:	int3   
  43fe58:	mov    eax,DWORD PTR [rip+0x290aa]        # 0x468f08
  43fe5e:	neg    eax
  43fe60:	sbb    eax,eax
  43fe62:	and    eax,0x80004004
  43fe67:	ret    
  43fe68:	sub    rsp,0x28
  43fe6c:	cmp    QWORD PTR [rcx+0xd0],0x0
  43fe74:	je     0x43fe83
  43fe76:	mov    QWORD PTR [rcx+0x10],rdx
  43fe7a:	add    rcx,0x8
  43fe7e:	call   0x448f00
  43fe83:	mov    eax,DWORD PTR [rip+0x2907f]        # 0x468f08
  43fe89:	neg    eax
  43fe8b:	sbb    eax,eax
  43fe8d:	and    eax,0x80004004
  43fe92:	add    rsp,0x28
  43fe96:	ret    
  43fe97:	int3   
  43fe98:	sub    rsp,0x28
  43fe9c:	test   rdx,rdx
  43fe9f:	je     0x43feba
  43fea1:	cmp    QWORD PTR [rcx+0xd0],0x0
  43fea9:	je     0x43feba
  43feab:	mov    rax,QWORD PTR [rdx]
  43feae:	add    rcx,0x8
  43feb2:	mov    QWORD PTR [rcx],rax
  43feb5:	call   0x448f00
  43feba:	mov    eax,DWORD PTR [rip+0x29048]        # 0x468f08
  43fec0:	neg    eax
  43fec2:	sbb    eax,eax
  43fec4:	and    eax,0x80004004
  43fec9:	add    rsp,0x28
  43fecd:	ret    
  43fece:	int3   
  43fecf:	int3   
  43fed0:	test   edx,edx
  43fed2:	je     0x43ff0d
  43fed4:	push   rbx
  43fed5:	push   rdi
  43fed6:	sub    rsp,0x28
  43feda:	mov    rbx,rcx
  43fedd:	mov    edi,edx
  43fedf:	mov    eax,DWORD PTR [rbx+0x8]
  43fee2:	cmp    DWORD PTR [rbx+0xc],eax
  43fee5:	jne    0x43feef
  43fee7:	mov    rcx,rbx
  43feea:	call   0x402af0
  43feef:	mov    edx,DWORD PTR [rbx+0x8]
  43fef2:	mov    rcx,QWORD PTR [rbx]
  43fef5:	mov    BYTE PTR [rdx+rcx*1],0x2d
  43fef9:	inc    edx
  43fefb:	dec    rdi
  43fefe:	mov    BYTE PTR [rdx+rcx*1],0x0
  43ff02:	mov    DWORD PTR [rbx+0x8],edx
  43ff05:	jne    0x43fedf
  43ff07:	add    rsp,0x28
  43ff0b:	pop    rdi
  43ff0c:	pop    rbx
  43ff0d:	ret    
  43ff0e:	int3   
  43ff0f:	int3   
  43ff10:	add    rcx,0x8
  43ff14:	jmp    0x44a564
  43ff19:	int3   
  43ff1a:	int3   
  43ff1b:	int3   
  43ff1c:	rex.W push rbx
  43ff1e:	push   rdi
  43ff1f:	sub    rsp,0x28
  43ff23:	mov    rbx,rcx
  43ff26:	add    rcx,0x160
  43ff2d:	mov    rdi,rdx
  43ff30:	call   0x403290
  43ff35:	xor    r11d,r11d
  43ff38:	cmp    QWORD PTR [rbx+0xd0],r11
  43ff3f:	je     0x43ff6f
  43ff41:	cmp    BYTE PTR [rbx+0x180],r11b
  43ff48:	je     0x43ff66
  43ff4a:	cmp    rdi,r11
  43ff4d:	lea    rcx,[rbx+0x30]
  43ff51:	mov    rax,QWORD PTR [rcx]
  43ff54:	mov    DWORD PTR [rcx+0x8],r11d
  43ff58:	mov    WORD PTR [rax],r11w
  43ff5c:	je     0x43ff66
  43ff5e:	mov    rdx,rdi
  43ff61:	call   0x403290
  43ff66:	lea    rcx,[rbx+0x8]
  43ff6a:	call   0x448f00
  43ff6f:	mov    eax,DWORD PTR [rip+0x28f93]        # 0x468f08
  43ff75:	neg    eax
  43ff77:	sbb    eax,eax
  43ff79:	and    eax,0x80004004
  43ff7e:	add    rsp,0x28
  43ff82:	pop    rdi
  43ff83:	pop    rbx
  43ff84:	ret    
  43ff85:	int3   
  43ff86:	int3   
  43ff87:	int3   
  43ff88:	rex.W push rbx
  43ff8a:	push   rbp
  43ff8b:	push   rsi
  43ff8c:	push   rdi
  43ff8d:	sub    rsp,0x108
  43ff94:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  43ff9d:	mov    ebp,r8d
  43ffa0:	mov    rdi,rdx
  43ffa3:	mov    rsi,rcx
  43ffa6:	mov    rdx,QWORD PTR [rcx]
  43ffa9:	mov    rcx,QWORD PTR [rdi+0x8]
  43ffad:	call   QWORD PTR [rip+0xd3bd]        # 0x44d370
  43ffb3:	lea    rcx,[rsp+0x20]
  43ffb8:	call   0x402b34
  43ffbd:	nop
  43ffbe:	mov    eax,0x6
  43ffc3:	sub    eax,DWORD PTR [rdi+0x10]
  43ffc6:	test   eax,eax
  43ffc8:	jle    0x43ffdb
  43ffca:	mov    ebx,eax
  43ffcc:	lea    rcx,[rsp+0x20]
  43ffd1:	call   0x40380c
  43ffd6:	dec    rbx
  43ffd9:	jne    0x43ffcc
  43ffdb:	mov    rdx,QWORD PTR [rsi]
  43ffde:	mov    rcx,QWORD PTR [rsp+0x20]
  43ffe3:	call   QWORD PTR [rip+0xd387]        # 0x44d370
  43ffe9:	nop
  43ffea:	mov    rcx,QWORD PTR [rsp+0x20]
  43ffef:	call   0x40215c
  43fff4:	mov    rbx,rbp
  43fff7:	lea    rcx,[rip+0x287b2]        # 0x4687b0
  43fffe:	mov    rdx,QWORD PTR [rsi]
  440001:	mov    rcx,QWORD PTR [rcx+rbp*8]
  440005:	call   QWORD PTR [rip+0xd365]        # 0x44d370
  44000b:	mov    BYTE PTR [rsp+0x40],0x0
  440010:	shl    rbx,0x6
  440014:	lea    rdx,[rbx+rdi*1+0x1c]
  440019:	mov    r8d,DWORD PTR [rdi+0x18]
  44001d:	lea    rcx,[rsp+0x40]
  440022:	call   0x42500c
  440027:	mov    rdx,QWORD PTR [rsi]
  44002a:	lea    rcx,[rsp+0x40]
  44002f:	call   QWORD PTR [rip+0xd33b]        # 0x44d370
  440035:	mov    rcx,rsi
  440038:	call   0x402454
  44003d:	add    rsp,0x108
  440044:	pop    rdi
  440045:	pop    rsi
  440046:	pop    rbp
  440047:	pop    rbx
  440048:	ret    
  440049:	int3   
  44004a:	int3   
  44004b:	int3   
  44004c:	int3   
  44004d:	int3   
  44004e:	int3   
  44004f:	int3   
  440050:	int3   
  440051:	int3   
  440052:	int3   
  440053:	int3   
  440054:	int3   
  440055:	int3   
  440056:	int3   
  440057:	int3   
  440058:	rex.W push rbp
  44005a:	sub    rsp,0x20
  44005e:	mov    rbp,rdx
  440061:	lea    rcx,[rbp+0x20]
  440065:	call   0x401000
  44006a:	add    rsp,0x20
  44006e:	pop    rbp
  44006f:	ret    
  440070:	rex.W push rbx
  440072:	push   rdi
  440073:	sub    rsp,0x48
  440077:	mov    rdi,rdx
  44007a:	mov    rbx,rcx
  44007d:	lea    rdx,[rsp+0x22]
  440082:	mov    rcx,r8
  440085:	mov    BYTE PTR [rsp+0x20],0x3a
  44008a:	mov    BYTE PTR [rsp+0x21],0x20
  44008f:	call   0x4019a4
  440094:	mov    rbx,QWORD PTR [rbx+0xe0]
  44009b:	mov    rcx,rdi
  44009e:	mov    rdx,QWORD PTR [rbx]
  4400a1:	call   QWORD PTR [rip+0xd2c9]        # 0x44d370
  4400a7:	mov    rdx,QWORD PTR [rbx]
  4400aa:	lea    rcx,[rsp+0x20]
  4400af:	call   QWORD PTR [rip+0xd2bb]        # 0x44d370
  4400b5:	mov    rcx,rbx
  4400b8:	call   0x402454
  4400bd:	add    rsp,0x48
  4400c1:	pop    rdi
  4400c2:	pop    rbx
  4400c3:	ret    
  4400c4:	rex.W push rbx
  4400c6:	push   rbp
  4400c7:	push   rsi
  4400c8:	push   rdi
  4400c9:	push   r12
  4400cb:	push   r14
  4400cd:	sub    rsp,0x28
  4400d1:	lea    rdi,[rcx+0x170]
  4400d8:	xor    esi,esi
  4400da:	mov    rbp,rdx
  4400dd:	mov    rax,QWORD PTR [rdi]
  4400e0:	mov    DWORD PTR [rdi+0x8],0x0
  4400e7:	mov    rbx,rcx
  4400ea:	mov    BYTE PTR [rax],0x0
  4400ed:	cmp    DWORD PTR [rdx+0x8],esi
  4400f0:	jbe    0x44012b
  4400f2:	xor    r12d,r12d
  4400f5:	lea    r14d,[rsi+0x8]
  4400f9:	test   esi,esi
  4400fb:	je     0x440105
  4400fd:	mov    rcx,rdi
  440100:	call   0x40380c
  440105:	mov    rax,QWORD PTR [rbp+0x0]
  440109:	mov    rcx,QWORD PTR [r12+rax*1]
  44010d:	mov    edx,DWORD PTR [rcx+0x18]
  440110:	mov    rcx,rdi
  440113:	add    edx,edx
  440115:	cmp    edx,r14d
  440118:	cmovb  edx,r14d
  44011c:	call   0x43fed0
  440121:	inc    esi
  440123:	add    r12,r14
  440126:	cmp    esi,DWORD PTR [rbp+0x8]
  440129:	jb     0x4400f9
  44012b:	cmp    BYTE PTR [rbx+0x182],0x0
  440132:	je     0x440169
  440134:	mov    rcx,rdi
  440137:	call   0x40380c
  44013c:	mov    esi,0xd
  440141:	mov    eax,DWORD PTR [rdi+0x8]
  440144:	cmp    DWORD PTR [rdi+0xc],eax
  440147:	jne    0x440151
  440149:	mov    rcx,rdi
  44014c:	call   0x402af0
  440151:	mov    edx,DWORD PTR [rdi+0x8]
  440154:	mov    rcx,QWORD PTR [rdi]
  440157:	mov    BYTE PTR [rdx+rcx*1],0x2d
  44015b:	inc    edx
  44015d:	dec    rsi
  440160:	mov    BYTE PTR [rdx+rcx*1],0x0
  440164:	mov    DWORD PTR [rdi+0x8],edx
  440167:	jne    0x440141
  440169:	cmp    BYTE PTR [rbx+0x183],0x0
  440170:	je     0x4401b4
  440172:	mov    rcx,rdi
  440175:	call   0x40380c
  44017a:	mov    rcx,rdi
  44017d:	call   0x40380c
  440182:	mov    esi,0xc
  440187:	mov    eax,DWORD PTR [rdi+0x8]
  44018a:	cmp    DWORD PTR [rdi+0xc],eax
  44018d:	jne    0x440197
  44018f:	mov    rcx,rdi
  440192:	call   0x402af0
  440197:	mov    r8d,DWORD PTR [rdi+0x8]
  44019b:	mov    rdx,QWORD PTR [rdi]
  44019e:	mov    BYTE PTR [r8+rdx*1],0x2d
  4401a3:	inc    r8d
  4401a6:	dec    rsi
  4401a9:	mov    BYTE PTR [r8+rdx*1],0x0
  4401ae:	mov    DWORD PTR [rdi+0x8],r8d
  4401b2:	jne    0x440187
  4401b4:	mov    rbx,QWORD PTR [rbx+0xe0]
  4401bb:	mov    rcx,QWORD PTR [rdi]
  4401be:	mov    rdx,QWORD PTR [rbx]
  4401c1:	call   QWORD PTR [rip+0xd1a9]        # 0x44d370
  4401c7:	mov    rcx,rbx
  4401ca:	add    rsp,0x28
  4401ce:	pop    r14
  4401d0:	pop    r12
  4401d2:	pop    rdi
  4401d3:	pop    rsi
  4401d4:	pop    rbp
  4401d5:	pop    rbx
  4401d6:	jmp    0x402454
  4401db:	int3   
  4401dc:	rex.W push rbx
  4401de:	push   rbp
  4401df:	push   rsi
  4401e0:	push   rdi
  4401e1:	push   r12
  4401e3:	push   r13
  4401e5:	push   r15
  4401e7:	sub    rsp,0x40
  4401eb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4401f4:	mov    r12,rdx
  4401f7:	mov    rsi,rcx
  4401fa:	cmp    BYTE PTR [rcx+0x181],0x0
  440201:	je     0x44037d
  440207:	cmp    QWORD PTR [rcx+0xe0],0x0
  44020f:	je     0x44037d
  440215:	mov    DWORD PTR [rcx+0x178],0x0
  44021f:	mov    rax,QWORD PTR [rcx+0x170]
  440226:	mov    BYTE PTR [rax],0x0
  440229:	add    rcx,0x8
  44022d:	mov    rax,QWORD PTR [rcx+0xc8]
  440234:	test   rax,rax
  440237:	je     0x440249
  440239:	cmp    QWORD PTR [rcx+0xd8],rax
  440240:	jne    0x440249
  440242:	xor    edx,edx
  440244:	call   0x448c48
  440249:	xor    ebp,ebp
  44024b:	cmp    DWORD PTR [r12+0x10],ebp
  440250:	jbe    0x4402ba
  440252:	xor    r13d,r13d
  440255:	lea    r15d,[rbp+0x8]
  440259:	test   ebp,ebp
  44025b:	je     0x440269
  44025d:	lea    rcx,[rsi+0x170]
  440264:	call   0x40380c
  440269:	mov    rax,QWORD PTR [r12+0x8]
  44026e:	mov    rbx,QWORD PTR [r13+rax*1+0x0]
  440273:	lea    rdx,[rbx+0x8]
  440277:	lea    rcx,[rsi+0x170]
  44027e:	call   0x402d70
  440283:	mov    r11d,DWORD PTR [rbx+0x18]
  440287:	add    r11d,r11d
  44028a:	cmp    r11d,r15d
  44028d:	cmovb  r11d,r15d
  440291:	sub    r11d,DWORD PTR [rbx+0x10]
  440295:	test   r11d,r11d
  440298:	jle    0x4402ae
  44029a:	mov    ebx,r11d
  44029d:	lea    rcx,[rsi+0x170]
  4402a4:	call   0x40380c
  4402a9:	dec    rbx
  4402ac:	jne    0x44029d
  4402ae:	inc    ebp
  4402b0:	add    r13,r15
  4402b3:	cmp    ebp,DWORD PTR [r12+0x10]
  4402b8:	jb     0x440259
  4402ba:	cmp    BYTE PTR [rsi+0x182],0x0
  4402c1:	je     0x44031d
  4402c3:	lea    rcx,[rsi+0x170]
  4402ca:	call   0x40380c
  4402cf:	lea    rdx,[rip+0xf5ee]        # 0x44f8c4
  4402d6:	lea    rcx,[rsp+0x28]
  4402db:	call   0x402b6c
  4402e0:	nop
  4402e1:	mov    eax,0xd
  4402e6:	sub    eax,DWORD PTR [rsp+0x30]
  4402ea:	test   eax,eax
  4402ec:	jle    0x440301
  4402ee:	mov    ebx,eax
  4402f0:	lea    rcx,[rsi+0x170]
  4402f7:	call   0x40380c
  4402fc:	dec    rbx
  4402ff:	jne    0x4402f0
  440301:	lea    rdx,[rsp+0x28]
  440306:	lea    rcx,[rsi+0x170]
  44030d:	call   0x402d70
  440312:	nop
  440313:	mov    rcx,QWORD PTR [rsp+0x28]
  440318:	call   0x40215c
  44031d:	cmp    BYTE PTR [rsi+0x183],0x0
  440324:	je     0x440351
  440326:	lea    rcx,[rsi+0x170]
  44032d:	call   0x40380c
  440332:	lea    rcx,[rsi+0x170]
  440339:	call   0x40380c
  44033e:	lea    rdx,[rip+0x122cb]        # 0x452610
  440345:	lea    rcx,[rsi+0x170]
  44034c:	call   0x402d24
  440351:	mov    rbx,QWORD PTR [rsi+0xe0]
  440358:	mov    rdx,QWORD PTR [rbx]
  44035b:	mov    rcx,QWORD PTR [rsi+0x170]
  440362:	call   QWORD PTR [rip+0xd008]        # 0x44d370
  440368:	mov    rcx,rbx
  44036b:	call   0x402454
  440370:	lea    rdx,[r12+0x8]
  440375:	mov    rcx,rsi
  440378:	call   0x4400c4
  44037d:	mov    eax,DWORD PTR [rip+0x28b85]        # 0x468f08
  440383:	neg    eax
  440385:	sbb    eax,eax
  440387:	and    eax,0x80004004
  44038c:	add    rsp,0x40
  440390:	pop    r15
  440392:	pop    r13
  440394:	pop    r12
  440396:	pop    rdi
  440397:	pop    rsi
  440398:	pop    rbp
  440399:	pop    rbx
  44039a:	ret    
  44039b:	int3   
  44039c:	rex.W push rbp
  44039e:	sub    rsp,0x20
  4403a2:	mov    rbp,rdx
  4403a5:	lea    rcx,[rbp+0x28]
  4403a9:	call   0x401000
  4403ae:	add    rsp,0x20
  4403b2:	pop    rbp
  4403b3:	ret    
  4403b4:	mov    DWORD PTR [rsp+0x20],r9d
  4403b9:	mov    QWORD PTR [rsp+0x10],rdx
  4403be:	mov    QWORD PTR [rsp+0x8],rcx
  4403c3:	push   rbx
  4403c4:	push   rbp
  4403c5:	push   rsi
  4403c6:	push   rdi
  4403c7:	push   r12
  4403c9:	push   r13
  4403cb:	push   r15
  4403cd:	sub    rsp,0x110
  4403d4:	mov    rax,QWORD PTR [rcx+0xd0]
  4403db:	mov    rsi,rcx
  4403de:	add    rcx,0x8
  4403e2:	xor    r15d,r15d
  4403e5:	mov    r12,r8
  4403e8:	mov    rbp,rdx
  4403eb:	cmp    rax,r15
  4403ee:	je     0x440400
  4403f0:	cmp    QWORD PTR [rcx+0xd8],rax
  4403f7:	jne    0x440400
  4403f9:	xor    edx,edx
  4403fb:	call   0x448c48
  440400:	lea    rbx,[rsi+0x170]
  440407:	mov    edi,r15d
  44040a:	mov    rax,QWORD PTR [rbx]
  44040d:	mov    DWORD PTR [rbx+0x8],r15d
  440411:	mov    BYTE PTR [rax],r15b
  440414:	cmp    DWORD PTR [r12+0x8],r15d
  440419:	jbe    0x4404dc
  44041f:	mov    esi,DWORD PTR [rsp+0x168]
  440426:	mov    rbp,r15
  440429:	cmp    BYTE PTR [rsp+0x170],r15b
  440431:	mov    rax,QWORD PTR [r12]
  440435:	mov    r13,QWORD PTR [rax+rbp*1]
  440439:	mov    BYTE PTR [rsp+0x50],r15b
  44043e:	je     0x44045a
  440440:	mov    r8d,DWORD PTR [r13+0x18]
  440444:	mov    rax,rsi
  440447:	lea    rcx,[rsp+0x50]
  44044c:	shl    rax,0x6
  440450:	lea    rdx,[rax+r13*1+0x1c]
  440455:	call   0x42500c
  44045a:	mov    r13d,DWORD PTR [r13+0x18]
  44045e:	lea    rcx,[rsp+0x50]
  440463:	add    r13d,r13d
  440466:	call   0x44b78c
  44046b:	lea    rcx,[rsp+0x50]
  440470:	lea    r15,[rsp+rax*1+0x50]
  440475:	call   0x44b78c
  44047a:	mov    ecx,0x8
  44047f:	cmp    r13d,ecx
  440482:	cmovb  r13d,ecx
  440486:	sub    r13d,eax
  440489:	je     0x440498
  44048b:	mov    r8d,r13d
  44048e:	mov    dl,0x20
  440490:	mov    rcx,r15
  440493:	call   0x44b780
  440498:	mov    BYTE PTR [r13+r15*1+0x0],0x0
  44049e:	xor    r15d,r15d
  4404a1:	cmp    edi,r15d
  4404a4:	je     0x4404ae
  4404a6:	mov    rcx,rbx
  4404a9:	call   0x40380c
  4404ae:	lea    rdx,[rsp+0x50]
  4404b3:	mov    rcx,rbx
  4404b6:	call   0x402d24
  4404bb:	inc    edi
  4404bd:	add    rbp,0x8
  4404c1:	cmp    edi,DWORD PTR [r12+0x8]
  4404c6:	jb     0x440429
  4404cc:	mov    rsi,QWORD PTR [rsp+0x150]
  4404d4:	mov    rbp,QWORD PTR [rsp+0x158]
  4404dc:	cmp    BYTE PTR [rsi+0x182],r15b
  4404e3:	je     0x44056b
  4404e9:	mov    rcx,rbx
  4404ec:	call   0x40380c
  4404f1:	cmp    BYTE PTR [rsp+0x170],r15b
  4404f9:	lea    rdi,[rsp+0x20]
  4404fe:	je     0x440544
  440500:	lea    rdx,[rsp+0x2d]
  440505:	mov    rcx,rbp
  440508:	lea    rdi,[rsp+0x2d]
  44050d:	call   0x4019a4
  440512:	lea    rcx,[rsp+0x2d]
  440517:	call   0x44b78c
  44051c:	mov    ecx,0xd
  440521:	sub    ecx,eax
  440523:	cmp    ecx,r15d
  440526:	jle    0x440560
  440528:	lea    rdi,[rsp+0x2d]
  44052d:	mov    r8d,ecx
  440530:	sub    rdi,r8
  440533:	cmp    ecx,r15d
  440536:	jbe    0x440560
  440538:	mov    dl,0x20
  44053a:	mov    rcx,rdi
  44053d:	call   0x44b780
  440542:	jmp    0x440560
  440544:	movabs rax,0x2020202020202020
  44054e:	mov    BYTE PTR [rsp+0x2d],r15b
  440553:	mov    QWORD PTR [rsp+0x20],rax
  440558:	mov    DWORD PTR [rsp+0x28],eax
  44055c:	mov    BYTE PTR [rsp+0x2c],al
  440560:	mov    rdx,rdi
  440563:	mov    rcx,rbx
  440566:	call   0x402d24
  44056b:	cmp    BYTE PTR [rsi+0x183],r15b
  440572:	je     0x440584
  440574:	mov    rcx,rbx
  440577:	call   0x40380c
  44057c:	mov    rcx,rbx
  44057f:	call   0x40380c
  440584:	mov    rdx,QWORD PTR [rsi+0xe0]
  44058b:	mov    rcx,QWORD PTR [rbx]
  44058e:	mov    rdx,QWORD PTR [rdx]
  440591:	add    rsp,0x110
  440598:	pop    r15
  44059a:	pop    r13
  44059c:	pop    r12
  44059e:	pop    rdi
  44059f:	pop    rsi
  4405a0:	pop    rbp
  4405a1:	pop    rbx
  4405a2:	rex.W jmp QWORD PTR [rip+0xcdc7]        # 0x44d370
  4405a9:	int3   
  4405aa:	int3   
  4405ab:	int3   
  4405ac:	rex.W push rbx
  4405ae:	sub    rsp,0x30
  4405b2:	cmp    QWORD PTR [rcx+0xe0],0x0
  4405ba:	mov    rbx,rcx
  4405bd:	je     0x440608
  4405bf:	mov    BYTE PTR [rsp+0x20],r9b
  4405c4:	add    r8,0x8
  4405c8:	xor    r9d,r9d
  4405cb:	call   0x4403b4
  4405d0:	cmp    BYTE PTR [rbx+0x183],0x0
  4405d7:	je     0x4405fc
  4405d9:	cmp    DWORD PTR [rbx+0x168],0x0
  4405e0:	mov    rcx,QWORD PTR [rbx+0xe0]
  4405e7:	mov    rdx,QWORD PTR [rip+0x281b2]        # 0x4687a0
  4405ee:	je     0x4405f7
  4405f0:	mov    rdx,QWORD PTR [rbx+0x160]
  4405f7:	call   0x402474
  4405fc:	mov    rcx,QWORD PTR [rbx+0xe0]
  440603:	call   0x402454
  440608:	cmp    QWORD PTR [rbx+0xd0],0x0
  440610:	je     0x44061f
  440612:	inc    QWORD PTR [rbx+0x18]
  440616:	lea    rcx,[rbx+0x8]
  44061a:	call   0x448f00
  44061f:	mov    eax,DWORD PTR [rip+0x288e3]        # 0x468f08
  440625:	neg    eax
  440627:	sbb    eax,eax
  440629:	and    eax,0x80004004
  44062e:	add    rsp,0x30
  440632:	pop    rbx
  440633:	ret    
  440634:	rex.W push rbx
  440636:	push   rbp
  440637:	push   rsi
  440638:	push   rdi
  440639:	push   r12
  44063b:	sub    rsp,0x20
  44063f:	xor    esi,esi
  440641:	mov    rbx,rdx
  440644:	mov    rdi,rcx
  440647:	cmp    DWORD PTR [rdx+0x10],esi
  44064a:	jbe    0x4406b1
  44064c:	xor    ebp,ebp
  44064e:	mov    rax,QWORD PTR [rbx+0x8]
  440652:	mov    r8d,0x1
  440658:	mov    rcx,rdi
  44065b:	mov    r12,QWORD PTR [rax+rbp*1]
  44065f:	mov    rdx,r12
  440662:	call   0x43ff88
  440667:	cmp    QWORD PTR [rbx+0x20],0x1
  44066c:	jne    0x440675
  44066e:	cmp    QWORD PTR [rbx+0x18],0x0
  440673:	je     0x440686
  440675:	mov    r8d,0x2
  44067b:	mov    rdx,r12
  44067e:	mov    rcx,rdi
  440681:	call   0x43ff88
  440686:	cmp    QWORD PTR [rbx+0x28],0x0
  44068b:	je     0x44069e
  44068d:	mov    r8d,0x3
  440693:	mov    rdx,r12
  440696:	mov    rcx,rdi
  440699:	call   0x43ff88
  44069e:	mov    rcx,rdi
  4406a1:	call   0x402454
  4406a6:	inc    esi
  4406a8:	add    rbp,0x8
  4406ac:	cmp    esi,DWORD PTR [rbx+0x10]
  4406af:	jb     0x44064e
  4406b1:	add    rsp,0x20
  4406b5:	pop    r12
  4406b7:	pop    rdi
  4406b8:	pop    rsi
  4406b9:	pop    rbp
  4406ba:	pop    rbx
  4406bb:	ret    
  4406bc:	rex.W push rbx
  4406be:	push   rsi
  4406bf:	push   rdi
  4406c0:	sub    rsp,0x30
  4406c4:	mov    rdi,rcx
  4406c7:	add    rcx,0x8
  4406cb:	mov    rsi,rdx
  4406ce:	cmp    QWORD PTR [rcx+0xc8],0x0
  4406d6:	je     0x4406df
  4406d8:	mov    dl,0x1
  4406da:	call   0x448c48
  4406df:	cmp    BYTE PTR [rdi+0x181],0x0
  4406e6:	je     0x4407ca
  4406ec:	cmp    QWORD PTR [rdi+0xe0],0x0
  4406f4:	je     0x4407ca
  4406fa:	lea    rdx,[rsi+0x8]
  4406fe:	mov    rcx,rdi
  440701:	call   0x4400c4
  440706:	mov    rdx,QWORD PTR [rsi+0x30]
  44070a:	lea    r8,[rsi+0x8]
  44070e:	mov    r9d,0x1
  440714:	mov    rcx,rdi
  440717:	mov    BYTE PTR [rsp+0x20],0x1
  44071c:	call   0x4403b4
  440721:	mov    rbx,QWORD PTR [rdi+0xe0]
  440728:	mov    rcx,rbx
  44072b:	call   0x402454
  440730:	mov    rcx,rbx
  440733:	call   0x402454
  440738:	cmp    QWORD PTR [rsi+0x20],0x1
  44073d:	jne    0x440746
  44073f:	cmp    QWORD PTR [rsi+0x18],0x0
  440744:	je     0x440771
  440746:	mov    r8,QWORD PTR [rsi+0x18]
  44074a:	test   r8,r8
  44074d:	je     0x44075e
  44074f:	lea    rdx,[rip+0x11efa]        # 0x452650
  440756:	mov    rcx,rdi
  440759:	call   0x440070
  44075e:	mov    r8,QWORD PTR [rsi+0x20]
  440762:	lea    rdx,[rip+0x11edb]        # 0x452644
  440769:	mov    rcx,rdi
  44076c:	call   0x440070
  440771:	mov    r8,QWORD PTR [rsi+0x30]
  440775:	lea    rdx,[rip+0xf148]        # 0x44f8c4
  44077c:	mov    rcx,rdi
  44077f:	call   0x440070
  440784:	mov    r8,QWORD PTR [rsi+0x28]
  440788:	test   r8,r8
  44078b:	je     0x4407af
  44078d:	lea    rdx,[rip+0x11e9c]        # 0x452630
  440794:	mov    rcx,rdi
  440797:	call   0x440070
  44079c:	mov    r8,QWORD PTR [rsi+0x38]
  4407a0:	lea    rdx,[rip+0x11e71]        # 0x452618
  4407a7:	mov    rcx,rdi
  4407aa:	call   0x440070
  4407af:	mov    rcx,QWORD PTR [rdi+0xe0]
  4407b6:	call   0x402454
  4407bb:	mov    rcx,QWORD PTR [rdi+0xe0]
  4407c2:	mov    rdx,rsi
  4407c5:	call   0x440634
  4407ca:	xor    eax,eax
  4407cc:	add    rsp,0x30
  4407d0:	pop    rdi
  4407d1:	pop    rsi
  4407d2:	pop    rbx
  4407d3:	ret    
  4407d4:	mov    rcx,QWORD PTR [rcx]
  4407d7:	rex.W jmp QWORD PTR [rip+0xcac2]        # 0x44d2a0
  4407de:	int3   
  4407df:	int3   
  4407e0:	sub    rsp,0x28
  4407e4:	lea    eax,[rcx-0x1]
  4407e7:	cmp    eax,0x1f
  4407ea:	ja     0x440809
  4407ec:	mov    rdx,QWORD PTR [rip+0x281e5]        # 0x4689d8
  4407f3:	mov    eax,0x20
  4407f8:	sub    eax,ecx
  4407fa:	mov    ecx,eax
  4407fc:	add    rcx,QWORD PTR [rip+0x27ffd]        # 0x468800
  440803:	call   QWORD PTR [rip+0xcb67]        # 0x44d370
  440809:	add    rsp,0x28
  44080d:	ret    
  44080e:	int3   
  44080f:	int3   
  440810:	rex.W push rbx
  440812:	push   rbp
  440813:	push   rsi
  440814:	push   rdi
  440815:	push   r12
  440817:	sub    rsp,0x20
  44081b:	mov    esi,ecx
  44081d:	xor    ebx,ebx
  44081f:	mov    rcx,r8
  440822:	mov    rbp,r8
  440825:	mov    r12d,edx
  440828:	mov    edi,ebx
  44082a:	call   0x44b78c
  44082f:	cmp    r12d,eax
  440832:	jbe    0x440856
  440834:	mov    edi,r12d
  440837:	sub    edi,eax
  440839:	cmp    esi,ebx
  44083b:	je     0x44084d
  44083d:	dec    esi
  44083f:	je     0x440849
  440841:	dec    esi
  440843:	jne    0x44084d
  440845:	mov    ebx,edi
  440847:	jmp    0x44084d
  440849:	mov    ebx,edi
  44084b:	shr    ebx,1
  44084d:	mov    ecx,ebx
  44084f:	call   0x4407e0
  440854:	sub    edi,ebx
  440856:	mov    rdx,QWORD PTR [rip+0x2817b]        # 0x4689d8
  44085d:	mov    rcx,rbp
  440860:	call   QWORD PTR [rip+0xcb0a]        # 0x44d370
  440866:	mov    ecx,edi
  440868:	add    rsp,0x20
  44086c:	pop    r12
  44086e:	pop    rdi
  44086f:	pop    rsi
  440870:	pop    rbp
  440871:	pop    rbx
  440872:	jmp    0x4407e0
  440877:	int3   
  440878:	rex.W push rbx
  44087a:	push   rbp
  44087b:	push   rsi
  44087c:	push   rdi
  44087d:	sub    rsp,0x28
  440881:	cmp    BYTE PTR [rdx+0x8],0x0
  440885:	mov    rdi,rdx
  440888:	mov    rbx,rcx
  44088b:	je     0x440897
  44088d:	mov    rax,QWORD PTR [rdx]
  440890:	mov    BYTE PTR [rcx+0x8],0x1
  440894:	add    QWORD PTR [rcx],rax
  440897:	cmp    BYTE PTR [rdx+0x18],0x0
  44089b:	je     0x4408a9
  44089d:	mov    rax,QWORD PTR [rdx+0x10]
  4408a1:	mov    BYTE PTR [rcx+0x18],0x1
  4408a5:	add    QWORD PTR [rcx+0x10],rax
  4408a9:	cmp    BYTE PTR [rdx+0x28],0x0
  4408ad:	je     0x4408d3
  4408af:	cmp    BYTE PTR [rcx+0x28],0x0
  4408b3:	je     0x4408c7
  4408b5:	add    rdx,0x20
  4408b9:	add    rcx,0x20
  4408bd:	call   QWORD PTR [rip+0xc865]        # 0x44d128
  4408c3:	test   eax,eax
  4408c5:	jns    0x4408d3
  4408c7:	mov    rax,QWORD PTR [rdi+0x20]
  4408cb:	mov    BYTE PTR [rbx+0x28],0x1
  4408cf:	mov    QWORD PTR [rbx+0x20],rax
  4408d3:	mov    rax,QWORD PTR [rdi+0x30]
  4408d7:	add    QWORD PTR [rbx+0x30],rax
  4408db:	add    rsp,0x28
  4408df:	pop    rdi
  4408e0:	pop    rsi
  4408e1:	pop    rbp
  4408e2:	pop    rbx
  4408e3:	ret    
  4408e4:	rex.W push rbx
  4408e6:	sub    rsp,0x20
  4408ea:	mov    BYTE PTR [rcx],0x0
  4408ed:	cmp    DWORD PTR [rdx],0x0
  4408f0:	mov    rax,rdx
  4408f3:	mov    rbx,rcx
  4408f6:	jne    0x4408fe
  4408f8:	cmp    DWORD PTR [rdx+0x4],0x0
  4408fc:	je     0x44093d
  4408fe:	lea    rdx,[rsp+0x38]
  440903:	mov    rcx,rax
  440906:	call   QWORD PTR [rip+0xc79c]        # 0x44d0a8
  44090c:	test   eax,eax
  44090e:	jne    0x44092a
  440910:	lea    rdx,[rip+0x267b9]        # 0x4670d0
  440917:	lea    rcx,[rsp+0x30]
  44091c:	mov    DWORD PTR [rsp+0x30],0x133067b
  440924:	call   0x44b71e
  440929:	int3   
  44092a:	mov    r9b,0x1
  44092d:	lea    rcx,[rsp+0x38]
  440932:	mov    rdx,rbx
  440935:	mov    r8b,r9b
  440938:	call   0x40b310
  44093d:	add    rsp,0x20
  440941:	pop    rbx
  440942:	ret    
  440943:	int3   
  440944:	rex.W push rbx
  440946:	push   rsi
  440947:	push   rdi
  440948:	sub    rsp,0x40
  44094c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  440955:	mov    rdi,r9
  440958:	xor    ebx,ebx
  44095a:	mov    QWORD PTR [r9],rbx
  44095d:	mov    BYTE PTR [r9+0x8],bl
  440961:	mov    WORD PTR [rsp+0x28],bx
  440966:	mov    WORD PTR [rsp+0x2a],bx
  44096b:	mov    QWORD PTR [rsp+0x30],rbx
  440970:	mov    rax,QWORD PTR [rcx]
  440973:	lea    r9,[rsp+0x28]
  440978:	call   QWORD PTR [rax+0x30]
  44097b:	mov    esi,eax
  44097d:	cmp    eax,ebx
  44097f:	je     0x44098f
  440981:	lea    rcx,[rsp+0x28]
  440986:	call   0x40b028
  44098b:	mov    eax,esi
  44098d:	jmp    0x440a00
  44098f:	movzx  ecx,WORD PTR [rsp+0x28]
  440994:	cmp    ecx,ebx
  440996:	je     0x4409f1
  440998:	sub    ecx,0x11
  44099b:	je     0x4409e7
  44099d:	dec    ecx
  44099f:	je     0x4409db
  4409a1:	dec    ecx
  4409a3:	je     0x4409d0
  4409a5:	cmp    ecx,0x2
  4409a8:	je     0x4409c4
  4409aa:	mov    DWORD PTR [rsp+0x60],0x24e9f
  4409b2:	lea    rdx,[rip+0x26717]        # 0x4670d0
  4409b9:	lea    rcx,[rsp+0x60]
  4409be:	call   0x44b71e
  4409c3:	int3   
  4409c4:	mov    rax,QWORD PTR [rsp+0x30]
  4409c9:	mov    QWORD PTR [rdi],rax
  4409cc:	mov    bl,0x1
  4409ce:	jmp    0x4409f1
  4409d0:	mov    eax,DWORD PTR [rsp+0x30]
  4409d4:	mov    QWORD PTR [rdi],rax
  4409d7:	mov    bl,0x1
  4409d9:	jmp    0x4409f1
  4409db:	movzx  eax,WORD PTR [rsp+0x30]
  4409e0:	mov    QWORD PTR [rdi],rax
  4409e3:	mov    bl,0x1
  4409e5:	jmp    0x4409f1
  4409e7:	movzx  eax,BYTE PTR [rsp+0x30]
  4409ec:	mov    QWORD PTR [rdi],rax
  4409ef:	mov    bl,0x1
  4409f1:	mov    BYTE PTR [rdi+0x8],bl
  4409f4:	lea    rcx,[rsp+0x28]
  4409f9:	call   0x40b028
  4409fe:	xor    eax,eax
  440a00:	add    rsp,0x40
  440a04:	pop    rdi
  440a05:	pop    rsi
  440a06:	pop    rbx
  440a07:	ret    
  440a08:	int3   
  440a09:	int3   
  440a0a:	int3   
  440a0b:	int3   
  440a0c:	int3   
  440a0d:	int3   
  440a0e:	int3   
  440a0f:	int3   
  440a10:	int3   
  440a11:	int3   
  440a12:	int3   
  440a13:	int3   
  440a14:	rex.W push rbp
  440a16:	sub    rsp,0x20
  440a1a:	mov    rbp,rdx
  440a1d:	lea    rcx,[rbp+0x28]
  440a21:	call   0x40b830
  440a26:	add    rsp,0x20
  440a2a:	pop    rbp
  440a2b:	ret    
  440a2c:	rex.W push rbx
  440a2e:	push   rdi
  440a2f:	sub    rsp,0x28
  440a33:	mov    rax,rdx
  440a36:	mov    rdx,QWORD PTR [rcx]
  440a39:	mov    rbx,rcx
  440a3c:	mov    rcx,rax
  440a3f:	mov    rdi,r8
  440a42:	call   QWORD PTR [rip+0xc928]        # 0x44d370
  440a48:	mov    rdx,QWORD PTR [rbx]
  440a4b:	lea    rcx,[rip+0x124de]        # 0x452f30
  440a52:	call   QWORD PTR [rip+0xc918]        # 0x44d370
  440a58:	mov    rdx,rdi
  440a5b:	mov    rcx,rbx
  440a5e:	call   0x40268c
  440a63:	mov    rcx,rax
  440a66:	add    rsp,0x28
  440a6a:	pop    rdi
  440a6b:	pop    rbx
  440a6c:	jmp    0x402454
  440a71:	int3   
  440a72:	int3   
  440a73:	int3   
  440a74:	rex.W push rbx
  440a76:	push   rdi
  440a77:	sub    rsp,0x28
  440a7b:	mov    rax,rdx
  440a7e:	mov    rdx,QWORD PTR [rcx]
  440a81:	mov    rbx,rcx
  440a84:	mov    rcx,rax
  440a87:	mov    rdi,r8
  440a8a:	call   QWORD PTR [rip+0xc8e0]        # 0x44d370
  440a90:	mov    rdx,QWORD PTR [rbx]
  440a93:	lea    rcx,[rip+0x1249a]        # 0x452f34
  440a9a:	call   QWORD PTR [rip+0xc8d0]        # 0x44d370
  440aa0:	mov    rdx,rdi
  440aa3:	mov    rcx,rbx
  440aa6:	call   0x402474
  440aab:	mov    rcx,rax
  440aae:	add    rsp,0x28
  440ab2:	pop    rdi
  440ab3:	pop    rbx
  440ab4:	jmp    0x402454
  440ab9:	int3   
  440aba:	int3   
  440abb:	int3   
  440abc:	rex.W push rbx
  440abe:	push   rbp
  440abf:	push   rsi
  440ac0:	push   rdi
  440ac1:	sub    rsp,0x78
  440ac5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  440ace:	mov    rbx,r9
  440ad1:	mov    rsi,r8
  440ad4:	mov    edi,edx
  440ad6:	mov    rbp,rcx
  440ad9:	lea    rcx,[rsp+0x38]
  440ade:	call   0x403150
  440ae3:	nop
  440ae4:	mov    r9b,0x1
  440ae7:	mov    r8d,edi
  440aea:	mov    rdx,rbx
  440aed:	lea    rcx,[rsp+0x38]
  440af2:	call   0x4336a8
  440af7:	cmp    DWORD PTR [rsp+0x40],0x0
  440afc:	je     0x440bcd
  440b02:	lea    rcx,[rsp+0x28]
  440b07:	call   0x402b34
  440b0c:	nop
  440b0d:	lea    rcx,[rsp+0x48]
  440b12:	call   0x403150
  440b17:	nop
  440b18:	cmp    edi,0x60
  440b1b:	jae    0x440b34
  440b1d:	lea    rax,[rip+0x11b5c]        # 0x452680
  440b24:	mov    rdx,QWORD PTR [rax+rdi*8]
  440b28:	lea    rcx,[rsp+0x28]
  440b2d:	call   0x402be4
  440b32:	jmp    0x440b63
  440b34:	test   rsi,rsi
  440b37:	je     0x440b48
  440b39:	mov    rdx,rsi
  440b3c:	lea    rcx,[rsp+0x48]
  440b41:	call   0x403290
  440b46:	jmp    0x440b63
  440b48:	lea    rdx,[rsp+0x58]
  440b4d:	mov    ecx,edi
  440b4f:	call   0x401930
  440b54:	lea    rdx,[rsp+0x58]
  440b59:	lea    rcx,[rsp+0x28]
  440b5e:	call   0x402be4
  440b63:	cmp    DWORD PTR [rsp+0x30],0x0
  440b68:	je     0x440b7e
  440b6a:	mov    r8,QWORD PTR [rsp+0x38]
  440b6f:	mov    rdx,QWORD PTR [rsp+0x28]
  440b74:	mov    rcx,rbp
  440b77:	call   0x440a74
  440b7c:	jmp    0x440bb7
  440b7e:	mov    rdi,QWORD PTR [rsp+0x38]
  440b83:	mov    rdx,QWORD PTR [rsp+0x48]
  440b88:	mov    rcx,rbp
  440b8b:	call   0x402474
  440b90:	mov    rbx,rax
  440b93:	mov    rdx,QWORD PTR [rax]
  440b96:	lea    rcx,[rip+0x12397]        # 0x452f34
  440b9d:	call   QWORD PTR [rip+0xc7cd]        # 0x44d370
  440ba3:	mov    rdx,rdi
  440ba6:	mov    rcx,rbx
  440ba9:	call   0x402474
  440bae:	mov    rcx,rax
  440bb1:	call   0x402454
  440bb6:	nop
  440bb7:	mov    rcx,QWORD PTR [rsp+0x48]
  440bbc:	call   0x40215c
  440bc1:	nop
  440bc2:	mov    rcx,QWORD PTR [rsp+0x28]
  440bc7:	call   0x40215c
  440bcc:	nop
  440bcd:	mov    rcx,QWORD PTR [rsp+0x38]
  440bd2:	call   0x40215c
  440bd7:	add    rsp,0x78
  440bdb:	pop    rdi
  440bdc:	pop    rsi
  440bdd:	pop    rbp
  440bde:	pop    rbx
  440bdf:	ret    
  440be0:	int3   
  440be1:	int3   
  440be2:	int3   
  440be3:	int3   
  440be4:	int3   
  440be5:	int3   
  440be6:	int3   
  440be7:	int3   
  440be8:	int3   
  440be9:	int3   
  440bea:	int3   
  440beb:	int3   
  440bec:	rex.W push rbp
  440bee:	sub    rsp,0x20
  440bf2:	mov    rbp,rdx
  440bf5:	lea    rcx,[rbp+0x38]
  440bf9:	call   0x401000
  440bfe:	add    rsp,0x20
  440c02:	pop    rbp
  440c03:	ret    
  440c04:	int3   
  440c05:	int3   
  440c06:	int3   
  440c07:	int3   
  440c08:	int3   
  440c09:	int3   
  440c0a:	int3   
  440c0b:	int3   
  440c0c:	rex.W push rbp
  440c0e:	sub    rsp,0x20
  440c12:	mov    rbp,rdx
  440c15:	lea    rcx,[rbp+0x28]
  440c19:	call   0x401000
  440c1e:	add    rsp,0x20
  440c22:	pop    rbp
  440c23:	ret    
  440c24:	int3   
  440c25:	int3   
  440c26:	int3   
  440c27:	int3   
  440c28:	int3   
  440c29:	int3   
  440c2a:	int3   
  440c2b:	int3   
  440c2c:	rex.W push rbp
  440c2e:	sub    rsp,0x20
  440c32:	mov    rbp,rdx
  440c35:	lea    rcx,[rbp+0x48]
  440c39:	call   0x401000
  440c3e:	add    rsp,0x20
  440c42:	pop    rbp
  440c43:	ret    
  440c44:	rex.W push rbx
  440c46:	push   rbp
  440c47:	push   rsi
  440c48:	push   rdi
  440c49:	sub    rsp,0x48
  440c4d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  440c56:	mov    rsi,r9
  440c59:	mov    edi,r8d
  440c5c:	mov    r10,rdx
  440c5f:	mov    rbp,rcx
  440c62:	mov    WORD PTR [rsp+0x28],0x0
  440c69:	mov    WORD PTR [rsp+0x2a],0x0
  440c70:	mov    QWORD PTR [rsp+0x30],0x0
  440c79:	mov    rax,QWORD PTR [rdx]
  440c7c:	lea    r8,[rsp+0x28]
  440c81:	mov    edx,edi
  440c83:	mov    rcx,r10
  440c86:	call   QWORD PTR [rax+0x40]
  440c89:	mov    ebx,eax
  440c8b:	test   eax,eax
  440c8d:	je     0x440c91
  440c8f:	jmp    0x440ca6
  440c91:	lea    r9,[rsp+0x28]
  440c96:	mov    r8,rsi
  440c99:	mov    edx,edi
  440c9b:	mov    rcx,rbp
  440c9e:	call   0x440abc
  440ca3:	nop
  440ca4:	xor    ebx,ebx
  440ca6:	lea    rcx,[rsp+0x28]
  440cab:	call   0x40b028
  440cb0:	mov    eax,ebx
  440cb2:	add    rsp,0x48
  440cb6:	pop    rdi
  440cb7:	pop    rsi
  440cb8:	pop    rbp
  440cb9:	pop    rbx
  440cba:	ret    
  440cbb:	int3   
  440cbc:	int3   
  440cbd:	int3   
  440cbe:	int3   
  440cbf:	int3   
  440cc0:	int3   
  440cc1:	int3   
  440cc2:	int3   
  440cc3:	int3   
  440cc4:	rex.W push rbp
  440cc6:	sub    rsp,0x20
  440cca:	mov    rbp,rdx
  440ccd:	lea    rcx,[rbp+0x28]
  440cd1:	call   0x40b830
  440cd6:	add    rsp,0x20
  440cda:	pop    rbp
  440cdb:	ret    
  440cdc:	rex.W push rbx
  440cde:	push   rsi
  440cdf:	push   rdi
  440ce0:	sub    rsp,0x20
  440ce4:	mov    rdi,QWORD PTR [rdx]
  440ce7:	mov    rdx,QWORD PTR [rcx]
  440cea:	mov    rsi,rcx
  440ced:	lea    rcx,[rip+0x122b4]        # 0x452fa8
  440cf4:	mov    bl,r8b
  440cf7:	call   QWORD PTR [rip+0xc673]        # 0x44d370
  440cfd:	mov    rdx,QWORD PTR [rsi]
  440d00:	lea    rax,[rip+0x12299]        # 0x452fa0
  440d07:	lea    rcx,[rip+0x1066e]        # 0x45137c
  440d0e:	test   bl,bl
  440d10:	cmovne rcx,rax
  440d14:	call   QWORD PTR [rip+0xc656]        # 0x44d370
  440d1a:	mov    rdx,QWORD PTR [rsi]
  440d1d:	lea    rcx,[rip+0x1225c]        # 0x452f80
  440d24:	call   QWORD PTR [rip+0xc646]        # 0x44d370
  440d2a:	mov    rdx,rdi
  440d2d:	mov    rcx,rsi
  440d30:	call   0x402474
  440d35:	lea    rcx,[rip+0x116c4]        # 0x452400
  440d3c:	mov    rdx,QWORD PTR [rax]
  440d3f:	mov    rbx,rax
  440d42:	call   QWORD PTR [rip+0xc628]        # 0x44d370
  440d48:	mov    rcx,rbx
  440d4b:	add    rsp,0x20
  440d4f:	pop    rdi
  440d50:	pop    rsi
  440d51:	pop    rbx
  440d52:	jmp    0x402454
  440d57:	int3   
  440d58:	rex.W push rbx
  440d5a:	push   rdi
  440d5b:	sub    rsp,0x28
  440d5f:	cmp    BYTE PTR [rdx+0x1],0x0
  440d63:	mov    r8d,DWORD PTR [rdx+0x4]
  440d67:	mov    rbx,rdx
  440d6a:	mov    rdi,rcx
  440d6d:	je     0x440d73
  440d6f:	or     r8d,0x20
  440d73:	lea    rdx,[rip+0x117c6]        # 0x452540
  440d7a:	call   0x43f42c
  440d7f:	cmp    DWORD PTR [rbx+0x20],0x0
  440d83:	je     0x440d98
  440d85:	mov    r8,QWORD PTR [rbx+0x18]
  440d89:	lea    rdx,[rip+0x105ec]        # 0x45137c
  440d90:	mov    rcx,rdi
  440d93:	call   0x440a74
  440d98:	cmp    BYTE PTR [rbx+0x2],0x0
  440d9c:	mov    r8d,DWORD PTR [rbx+0x8]
  440da0:	jne    0x440db1
  440da2:	cmp    BYTE PTR [rbx],0x0
  440da5:	je     0x440db1
  440da7:	test   BYTE PTR [rbx+0x4],0x40
  440dab:	jne    0x440db1
  440dad:	or     r8d,0x40
  440db1:	lea    rdx,[rip+0x11778]        # 0x452530
  440db8:	mov    rcx,rdi
  440dbb:	call   0x43f42c
  440dc0:	cmp    DWORD PTR [rbx+0x30],0x0
  440dc4:	je     0x440dd9
  440dc6:	mov    r8,QWORD PTR [rbx+0x28]
  440dca:	lea    rdx,[rip+0x121cf]        # 0x452fa0
  440dd1:	mov    rcx,rdi
  440dd4:	call   0x440a74
  440dd9:	add    rsp,0x28
  440ddd:	pop    rdi
  440dde:	pop    rbx
  440ddf:	ret    
  440de0:	rex.W push rbx
  440de2:	sub    rsp,0x20
  440de6:	mov    rbx,rcx
  440de9:	mov    rcx,QWORD PTR [rcx+0xf8]
  440df0:	call   0x40215c
  440df5:	lea    rcx,[rbx+0x8]
  440df9:	add    rsp,0x20
  440dfd:	pop    rbx
  440dfe:	jmp    0x448d90
  440e03:	int3   
  440e04:	mov    QWORD PTR [rsp+0x8],rcx
  440e09:	push   rbx
  440e0a:	push   rdi
  440e0b:	sub    rsp,0x38
  440e0f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  440e18:	mov    ebx,edx
  440e1a:	mov    rdi,rcx
  440e1d:	mov    QWORD PTR [rcx],0x0
  440e24:	mov    QWORD PTR [rcx+0x8],0xffffffffffffffff
  440e2c:	mov    QWORD PTR [rcx+0x10],0x0
  440e34:	add    rcx,0x18
  440e38:	call   0x402b34
  440e3d:	nop
  440e3e:	lea    rcx,[rdi+0x28]
  440e42:	call   0x403150
  440e47:	nop
  440e48:	mov    DWORD PTR [rdi+0x38],ebx
  440e4b:	mov    DWORD PTR [rdi+0x3c],0x0
  440e52:	lea    rcx,[rdi+0x40]
  440e56:	call   0x402b34
  440e5b:	nop
  440e5c:	lea    rcx,[rdi+0x50]
  440e60:	call   0x402b34
  440e65:	nop
  440e66:	lea    rcx,[rdi+0x60]
  440e6a:	call   0x402b34
  440e6f:	nop
  440e70:	lea    rcx,[rdi+0x70]
  440e74:	call   0x403150
  440e79:	nop
  440e7a:	lea    rbx,[rdi+0x80]
  440e81:	mov    QWORD PTR [rsp+0x60],rbx
  440e86:	mov    QWORD PTR [rbx],0x0
  440e8d:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
  440e95:	mov    QWORD PTR [rbx+0x10],0x0
  440e9d:	lea    rcx,[rbx+0x18]
  440ea1:	call   0x402b34
  440ea6:	nop
  440ea7:	lea    rcx,[rbx+0x28]
  440eab:	call   0x403150
  440eb0:	nop
  440eb1:	lea    rcx,[rdi+0xb8]
  440eb8:	call   0x402b34
  440ebd:	mov    BYTE PTR [rdi+0xd0],0x1
  440ec4:	mov    DWORD PTR [rdi+0xd4],0x4f
  440ece:	mov    rax,rdi
  440ed1:	add    rsp,0x38
  440ed5:	pop    rdi
  440ed6:	pop    rbx
  440ed7:	ret    
  440ed8:	int3   
  440ed9:	int3   
  440eda:	int3   
  440edb:	int3   
  440edc:	int3   
  440edd:	int3   
  440ede:	int3   
  440edf:	int3   
  440ee0:	int3   
  440ee1:	int3   
  440ee2:	int3   
  440ee3:	int3   
  440ee4:	rex.W push rbp
  440ee6:	sub    rsp,0x20
  440eea:	mov    rbp,rdx
  440eed:	mov    rcx,QWORD PTR [rbp+0x50]
  440ef1:	add    rcx,0x18
  440ef5:	call   0x401000
  440efa:	add    rsp,0x20
  440efe:	pop    rbp
  440eff:	ret    
  440f00:	int3   
  440f01:	int3   
  440f02:	int3   
  440f03:	int3   
  440f04:	rex.W push rbp
  440f06:	sub    rsp,0x20
  440f0a:	mov    rbp,rdx
  440f0d:	mov    rcx,QWORD PTR [rbp+0x50]
  440f11:	call   0x422a2c
  440f16:	add    rsp,0x20
  440f1a:	pop    rbp
  440f1b:	ret    
  440f1c:	int3   
  440f1d:	int3   
  440f1e:	int3   
  440f1f:	int3   
  440f20:	int3   
  440f21:	int3   
  440f22:	int3   
  440f23:	int3   
  440f24:	rex.W push rbp
  440f26:	sub    rsp,0x20
  440f2a:	mov    rbp,rdx
  440f2d:	mov    rcx,QWORD PTR [rbp+0x50]
  440f31:	add    rcx,0x40
  440f35:	call   0x401000
  440f3a:	add    rsp,0x20
  440f3e:	pop    rbp
  440f3f:	ret    
  440f40:	int3   
  440f41:	int3   
  440f42:	int3   
  440f43:	int3   
  440f44:	rex.W push rbp
  440f46:	sub    rsp,0x20
  440f4a:	mov    rbp,rdx
  440f4d:	mov    rcx,QWORD PTR [rbp+0x50]
  440f51:	add    rcx,0x50
  440f55:	call   0x401000
  440f5a:	add    rsp,0x20
  440f5e:	pop    rbp
  440f5f:	ret    
  440f60:	int3   
  440f61:	int3   
  440f62:	int3   
  440f63:	int3   
  440f64:	rex.W push rbp
  440f66:	sub    rsp,0x20
  440f6a:	mov    rbp,rdx
  440f6d:	mov    rcx,QWORD PTR [rbp+0x50]
  440f71:	add    rcx,0x60
  440f75:	call   0x401000
  440f7a:	add    rsp,0x20
  440f7e:	pop    rbp
  440f7f:	ret    
  440f80:	int3   
  440f81:	int3   
  440f82:	int3   
  440f83:	int3   
  440f84:	rex.W push rbp
  440f86:	sub    rsp,0x20
  440f8a:	mov    rbp,rdx
  440f8d:	mov    rcx,QWORD PTR [rbp+0x50]
  440f91:	add    rcx,0x70
  440f95:	call   0x401000
  440f9a:	add    rsp,0x20
  440f9e:	pop    rbp
  440f9f:	ret    
  440fa0:	int3   
  440fa1:	int3   
  440fa2:	int3   
  440fa3:	int3   
  440fa4:	rex.W push rbp
  440fa6:	sub    rsp,0x20
  440faa:	mov    rbp,rdx
  440fad:	mov    rcx,QWORD PTR [rbp+0x60]
  440fb1:	add    rcx,0x18
  440fb5:	call   0x401000
  440fba:	add    rsp,0x20
  440fbe:	pop    rbp
  440fbf:	ret    
  440fc0:	int3   
  440fc1:	int3   
  440fc2:	int3   
  440fc3:	int3   
  440fc4:	rex.W push rbp
  440fc6:	sub    rsp,0x20
  440fca:	mov    rbp,rdx
  440fcd:	mov    rcx,QWORD PTR [rbp+0x50]
  440fd1:	add    rcx,0x80
  440fd8:	call   0x422a2c
  440fdd:	add    rsp,0x20
  440fe1:	pop    rbp
  440fe2:	ret    
  440fe3:	int3   
  440fe4:	rex.W push rbx
  440fe6:	push   rbp
  440fe7:	push   rsi
  440fe8:	push   rdi
  440fe9:	sub    rsp,0x28
  440fed:	movsxd rbx,DWORD PTR [rcx+0x8]
  440ff1:	mov    rdi,rcx
  440ff4:	test   ebx,ebx
  440ff6:	mov    rsi,rbx
  440ff9:	je     0x441030
  440ffb:	shl    rsi,0x3
  440fff:	mov    rax,QWORD PTR [rdi]
  441002:	sub    rsi,0x8
  441006:	add    ebx,0xffffffff
  441009:	mov    rbp,QWORD PTR [rsi+rax*1]
  44100d:	test   rbp,rbp
  441010:	je     0x44102c
  441012:	mov    rcx,QWORD PTR [rbp+0x18]
  441016:	call   0x40215c
  44101b:	mov    rcx,QWORD PTR [rbp+0x8]
  44101f:	call   0x40215c
  441024:	mov    rcx,rbp
  441027:	call   0x40215c
  44102c:	test   ebx,ebx
  44102e:	jne    0x440fff
  441030:	mov    rcx,QWORD PTR [rdi]
  441033:	add    rsp,0x28
  441037:	pop    rdi
  441038:	pop    rsi
  441039:	pop    rbp
  44103a:	pop    rbx
  44103b:	jmp    0x40215c
  441040:	rex.W push rbx
  441042:	push   rbp
  441043:	push   rsi
  441044:	push   rdi
  441045:	sub    rsp,0x28
  441049:	movsxd rdi,DWORD PTR [rcx+0x8]
  44104d:	mov    rbx,rcx
  441050:	test   edi,edi
  441052:	mov    rsi,rdi
  441055:	je     0x44108c
  441057:	shl    rsi,0x3
  44105b:	mov    rax,QWORD PTR [rbx]
  44105e:	sub    rsi,0x8
  441062:	add    edi,0xffffffff
  441065:	mov    rbp,QWORD PTR [rsi+rax*1]
  441069:	test   rbp,rbp
  44106c:	je     0x441088
  44106e:	mov    rcx,QWORD PTR [rbp+0x18]
  441072:	call   0x40215c
  441077:	mov    rcx,QWORD PTR [rbp+0x8]
  44107b:	call   0x40215c
  441080:	mov    rcx,rbp
  441083:	call   0x40215c
  441088:	test   edi,edi
  44108a:	jne    0x44105b
  44108c:	mov    DWORD PTR [rbx+0x8],0x0
  441093:	mov    rax,QWORD PTR [rbx+0x58]
  441097:	mov    DWORD PTR [rbx+0x60],0x0
  44109e:	mov    BYTE PTR [rax],0x0
  4410a1:	add    rsp,0x28
  4410a5:	pop    rdi
  4410a6:	pop    rsi
  4410a7:	pop    rbp
  4410a8:	pop    rbx
  4410a9:	ret    
  4410aa:	int3   
  4410ab:	int3   
  4410ac:	rex.W push rbx
  4410ae:	push   rbp
  4410af:	push   rsi
  4410b0:	push   rdi
  4410b1:	sub    rsp,0x28
  4410b5:	xor    ebp,ebp
  4410b7:	mov    rdi,rcx
  4410ba:	cmp    DWORD PTR [rcx+0x8],ebp
  4410bd:	jbe    0x4410f3
  4410bf:	xor    esi,esi
  4410c1:	mov    rax,QWORD PTR [rdi]
  4410c4:	mov    rbx,QWORD PTR [rsi+rax*1]
  4410c8:	mov    ecx,DWORD PTR [rbx+0x30]
  4410cb:	call   0x4407e0
  4410d0:	cmp    DWORD PTR [rbx],0x3
  4410d3:	jne    0x4410d9
  4410d5:	xor    edx,edx
  4410d7:	jmp    0x4410dc
  4410d9:	mov    edx,DWORD PTR [rbx+0x34]
  4410dc:	mov    r8,QWORD PTR [rbx+0x18]
  4410e0:	mov    ecx,DWORD PTR [rbx+0x28]
  4410e3:	call   0x440810
  4410e8:	inc    ebp
  4410ea:	add    rsi,0x8
  4410ee:	cmp    ebp,DWORD PTR [rdi+0x8]
  4410f1:	jb     0x4410c1
  4410f3:	add    rsp,0x28
  4410f7:	pop    rdi
  4410f8:	pop    rsi
  4410f9:	pop    rbp
  4410fa:	pop    rbx
  4410fb:	ret    
  4410fc:	mov    QWORD PTR [rsp+0x18],r8
  441101:	mov    DWORD PTR [rsp+0x10],edx
  441105:	mov    QWORD PTR [rsp+0x8],rcx
  44110a:	push   rbx
  44110b:	push   rbp
  44110c:	push   rsi
  44110d:	push   rdi
  44110e:	push   r12
  441110:	push   r13
  441112:	push   r14
  441114:	push   r15
  441116:	sub    rsp,0x1d8
  44111d:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
  441126:	mov    rdi,r8
  441129:	mov    esi,edx
  44112b:	mov    rbp,rcx
  44112e:	xor    r14d,r14d
  441131:	mov    r13b,BYTE PTR [rcx+0x18]
  441135:	mov    BYTE PTR [rsp+0x238],r13b
  44113d:	mov    DWORD PTR [rsp+0x38],r14d
  441142:	xor    r15d,r15d
  441145:	mov    QWORD PTR [rsp+0x60],r15
  44114a:	cmp    DWORD PTR [rcx+0x8],r14d
  44114e:	jbe    0x441786
  441154:	mov    rax,QWORD PTR [rbp+0x0]
  441158:	mov    rbx,QWORD PTR [rax+r15*8]
  44115c:	test   r13b,r13b
  44115f:	jne    0x44119b
  441161:	lea    rsi,[rsp+r14*1+0xc0]
  441169:	xor    edi,edi
  44116b:	cmp    DWORD PTR [rbx+0x30],edi
  44116e:	jbe    0x441180
  441170:	mov    edi,DWORD PTR [rbx+0x30]
  441173:	mov    r8,rdi
  441176:	mov    dl,0x20
  441178:	mov    rcx,rsi
  44117b:	call   0x44b780
  441180:	mov    BYTE PTR [rdi+rsi*1],0x0
  441184:	mov    eax,DWORD PTR [rbx+0x30]
  441187:	add    r14,rax
  44118a:	mov    rdi,QWORD PTR [rsp+0x230]
  441192:	mov    esi,DWORD PTR [rsp+0x228]
  441199:	jmp    0x4411c4
  44119b:	cmp    DWORD PTR [rbx+0x20],0x0
  44119f:	je     0x4411b4
  4411a1:	mov    rdx,QWORD PTR [rip+0x27830]        # 0x4689d8
  4411a8:	mov    rcx,QWORD PTR [rbx+0x18]
  4411ac:	call   QWORD PTR [rip+0xc1be]        # 0x44d370
  4411b2:	jmp    0x4411c4
  4411b4:	mov    rdx,QWORD PTR [rbx+0x8]
  4411b8:	lea    rcx,[rip+0x27819]        # 0x4689d8
  4411bf:	call   0x402474
  4411c4:	cmp    DWORD PTR [rbx],0x3
  4411c7:	jne    0x441211
  4411c9:	test   r13b,r13b
  4411cc:	jne    0x4411e3
  4411ce:	mov    rdx,QWORD PTR [rip+0x27803]        # 0x4689d8
  4411d5:	lea    rcx,[rsp+0xc0]
  4411dd:	call   QWORD PTR [rip+0xc18d]        # 0x44d370
  4411e3:	lea    r8,[rbp+0x30]
  4411e7:	lea    rdx,[rbp+0x20]
  4411eb:	lea    rcx,[rip+0x277e6]        # 0x4689d8
  4411f2:	call   0x4025cc
  4411f7:	test   r13b,r13b
  4411fa:	je     0x441745
  441200:	lea    rcx,[rip+0x277d1]        # 0x4689d8
  441207:	call   0x402454
  44120c:	jmp    0x441745
  441211:	mov    r12d,DWORD PTR [rbx+0x34]
  441215:	cmp    BYTE PTR [rbx+0x4],0x0
  441219:	je     0x4413a6
  44121f:	mov    rax,QWORD PTR [rbp+0x10]
  441223:	mov    rcx,QWORD PTR [rax+0x10]
  441227:	mov    rax,QWORD PTR [rcx]
  44122a:	lea    rdx,[rsp+0x34]
  44122f:	mov    QWORD PTR [rsp+0x28],rdx
  441234:	lea    rdx,[rsp+0x30]
  441239:	mov    QWORD PTR [rsp+0x20],rdx
  44123e:	lea    r9,[rsp+0x58]
  441243:	mov    r8d,DWORD PTR [rbx]
  441246:	mov    edx,esi
  441248:	call   QWORD PTR [rax+0x20]
  44124b:	test   eax,eax
  44124d:	jne    0x441794
  441253:	mov    eax,DWORD PTR [rsp+0x30]
  441257:	test   eax,eax
  441259:	je     0x441734
  44125f:	mov    dil,0x1
  441262:	mov    ecx,DWORD PTR [rbx]
  441264:	cmp    ecx,0x3e
  441267:	jne    0x44129a
  441269:	cmp    DWORD PTR [rsp+0x34],0x1
  44126e:	jne    0x44176a
  441274:	lea    r8,[rbp+0x30]
  441278:	mov    edx,eax
  44127a:	mov    rcx,QWORD PTR [rsp+0x58]
  44127f:	call   0x433a18
  441284:	mov    rdx,QWORD PTR [rip+0x2774d]        # 0x4689d8
  44128b:	mov    rcx,QWORD PTR [rbp+0x30]
  44128f:	call   QWORD PTR [rip+0xc0db]        # 0x44d370
  441295:	jmp    0x441734
  44129a:	cmp    ecx,0x59
  44129d:	jne    0x4412f1
  44129f:	lea    rcx,[rsp+0x68]
  4412a4:	call   0x403150
  4412a9:	nop
  4412aa:	lea    r8,[rsp+0x68]
  4412af:	mov    edx,DWORD PTR [rsp+0x30]
  4412b3:	mov    rcx,QWORD PTR [rsp+0x58]
  4412b8:	call   0x433c74
  4412bd:	test   al,al
  4412bf:	je     0x4412da
  4412c1:	xor    dil,dil
  4412c4:	lea    r8,[rbp+0x30]
  4412c8:	lea    rdx,[rsp+0x68]
  4412cd:	lea    rcx,[rip+0x27704]        # 0x4689d8
  4412d4:	call   0x4025cc
  4412d9:	nop
  4412da:	mov    rcx,QWORD PTR [rsp+0x68]
  4412df:	call   0x40215c
  4412e4:	test   dil,dil
  4412e7:	je     0x441734
  4412ed:	mov    eax,DWORD PTR [rsp+0x30]
  4412f1:	cmp    DWORD PTR [rsp+0x34],0x1
  4412f6:	jne    0x441771
  4412fc:	cmp    eax,0x40
  4412ff:	jbe    0x44132a
  441301:	mov    rdx,QWORD PTR [rip+0x276d0]        # 0x4689d8
  441308:	lea    rcx,[rip+0x11ce1]        # 0x452ff0
  44130f:	call   QWORD PTR [rip+0xc05b]        # 0x44d370
  441315:	mov    edx,DWORD PTR [rsp+0x30]
  441319:	lea    rcx,[rip+0x276b8]        # 0x4689d8
  441320:	call   0x40265c
  441325:	jmp    0x441734
  44132a:	lea    r10,[rsp+0x140]
  441332:	test   eax,eax
  441334:	je     0x441388
  441336:	mov    r11,QWORD PTR [rsp+0x58]
  44133b:	mov    ebx,eax
  44133d:	mov    r9b,BYTE PTR [r11]
  441340:	mov    r8b,r9b
  441343:	shr    r8b,0x4
  441347:	lea    edx,[r8+0x30]
  44134b:	lea    eax,[r8+0x37]
  44134f:	movzx  ecx,al
  441352:	movzx  eax,dl
  441355:	cmp    r8b,0xa
  441359:	cmovb  ecx,eax
  44135c:	mov    BYTE PTR [r10],cl
  44135f:	and    r9b,0xf
  441363:	lea    edx,[r9+0x30]
  441367:	lea    eax,[r9+0x37]
  44136b:	movzx  ecx,al
  44136e:	movzx  eax,dl
  441371:	cmp    r9b,0xa
  441375:	cmovb  ecx,eax
  441378:	mov    BYTE PTR [r10+0x1],cl
  44137c:	add    r10,0x2
  441380:	inc    r11
  441383:	dec    rbx
  441386:	jne    0x44133d
  441388:	mov    BYTE PTR [r10],0x0
  44138c:	mov    rdx,QWORD PTR [rip+0x27645]        # 0x4689d8
  441393:	lea    rcx,[rsp+0x140]
  44139b:	call   QWORD PTR [rip+0xbfcf]        # 0x44d370
  4413a1:	jmp    0x441734
  4413a6:	xor    ax,ax
  4413a9:	mov    WORD PTR [rsp+0x40],ax
  4413ae:	mov    WORD PTR [rsp+0x42],ax
  4413b3:	mov    QWORD PTR [rsp+0x48],0x0
  4413bc:	mov    ecx,DWORD PTR [rbx]
  4413be:	sub    ecx,0x7
  4413c1:	je     0x44142a
  4413c3:	dec    ecx
  4413c5:	je     0x44140f
  4413c7:	cmp    ecx,0x4
  4413ca:	je     0x4413f4
  4413cc:	mov    rax,QWORD PTR [rbp+0x10]
  4413d0:	mov    rcx,QWORD PTR [rax]
  4413d3:	mov    rax,QWORD PTR [rcx]
  4413d6:	lea    r9,[rsp+0x40]
  4413db:	mov    r8d,DWORD PTR [rbx]
  4413de:	mov    edx,esi
  4413e0:	call   QWORD PTR [rax+0x30]
  4413e3:	mov    edi,eax
  4413e5:	test   eax,eax
  4413e7:	jne    0x441778
  4413ed:	movzx  eax,WORD PTR [rsp+0x40]
  4413f2:	jmp    0x441442
  4413f4:	cmp    BYTE PTR [rdi+0x28],0x0
  4413f8:	je     0x441442
  4413fa:	lea    rdx,[rdi+0x20]
  4413fe:	lea    rcx,[rsp+0x40]
  441403:	call   0x40b2e0
  441408:	mov    ax,WORD PTR [rsp+0x40]
  44140d:	jmp    0x441442
  44140f:	cmp    BYTE PTR [rdi+0x18],0x0
  441413:	je     0x441442
  441415:	mov    rdx,QWORD PTR [rdi+0x10]
  441419:	lea    rcx,[rsp+0x40]
  44141e:	call   0x40b2b4
  441423:	mov    ax,WORD PTR [rsp+0x40]
  441428:	jmp    0x441442
  44142a:	cmp    BYTE PTR [rdi+0x8],0x0
  44142e:	je     0x441442
  441430:	mov    rdx,QWORD PTR [rdi]
  441433:	lea    rcx,[rsp+0x40]
  441438:	call   0x40b2b4
  44143d:	mov    ax,WORD PTR [rsp+0x40]
  441442:	cmp    DWORD PTR [rbx],0x9
  441445:	jne    0x441506
  44144b:	test   ax,ax
  44144e:	je     0x44145a
  441450:	cmp    ax,0x13
  441454:	jne    0x441506
  44145a:	neg    ax
  44145d:	sbb    edx,edx
  44145f:	and    edx,DWORD PTR [rsp+0x48]
  441463:	lea    rbx,[rsp+r14*1+0xc0]
  44146b:	cmp    BYTE PTR [rbp+0x50],0x0
  44146f:	je     0x441474
  441471:	or     edx,0x10
  441474:	test   r13b,r13b
  441477:	je     0x441483
  441479:	mov    rcx,rbx
  44147c:	call   0x433530
  441481:	jmp    0x4414dc
  441483:	mov    eax,edx
  441485:	and    al,0x10
  441487:	neg    al
  441489:	sbb    cl,cl
  44148b:	and    cl,0x16
  44148e:	mov    r8b,0x2e
  441491:	add    cl,r8b
  441494:	mov    BYTE PTR [rbx],cl
  441496:	mov    eax,edx
  441498:	and    al,0x1
  44149a:	neg    al
  44149c:	sbb    cl,cl
  44149e:	and    cl,0x24
  4414a1:	add    cl,r8b
  4414a4:	mov    BYTE PTR [rbx+0x1],cl
  4414a7:	mov    eax,edx
  4414a9:	and    al,0x2
  4414ab:	neg    al
  4414ad:	sbb    cl,cl
  4414af:	and    cl,0x1a
  4414b2:	add    cl,r8b
  4414b5:	mov    BYTE PTR [rbx+0x2],cl
  4414b8:	mov    eax,edx
  4414ba:	and    al,0x4
  4414bc:	neg    al
  4414be:	sbb    cl,cl
  4414c0:	and    cl,0x25
  4414c3:	add    cl,r8b
  4414c6:	mov    BYTE PTR [rbx+0x3],cl
  4414c9:	and    dl,0x20
  4414cc:	neg    dl
  4414ce:	sbb    al,al
  4414d0:	and    al,0x13
  4414d2:	add    al,r8b
  4414d5:	mov    BYTE PTR [rbx+0x4],al
  4414d8:	mov    BYTE PTR [rbx+0x5],0x0
  4414dc:	test   r13b,r13b
  4414df:	je     0x4414f6
  4414e1:	mov    rdx,QWORD PTR [rip+0x274f0]        # 0x4689d8
  4414e8:	mov    rcx,rbx
  4414eb:	call   QWORD PTR [rip+0xbe7f]        # 0x44d370
  4414f1:	jmp    0x441723
  4414f6:	mov    rcx,rbx
  4414f9:	call   0x44b78c
  4414fe:	add    r14,rax
  441501:	jmp    0x441723
  441506:	test   ax,ax
  441509:	jne    0x44153f
  44150b:	test   r13b,r13b
  44150e:	jne    0x441723
  441514:	lea    rdi,[rsp+r14*1+0xc0]
  44151c:	xor    ebx,ebx
  44151e:	test   r12d,r12d
  441521:	je     0x441533
  441523:	mov    rbx,r12
  441526:	mov    r8,r12
  441529:	mov    dl,0x20
  44152b:	mov    rcx,rdi
  44152e:	call   0x44b780
  441533:	mov    BYTE PTR [rbx+rdi*1],0x0
  441537:	add    r14,r12
  44153a:	jmp    0x441723
  44153f:	cmp    ax,0x40
  441543:	jne    0x4415b7
  441545:	lea    rdi,[rsp+r14*1+0xc0]
  44154d:	lea    rdx,[rsp+0x48]
  441552:	mov    rcx,rdi
  441555:	call   0x4408e4
  44155a:	test   r13b,r13b
  44155d:	je     0x441574
  44155f:	mov    rdx,QWORD PTR [rip+0x27472]        # 0x4689d8
  441566:	mov    rcx,rdi
  441569:	call   QWORD PTR [rip+0xbe01]        # 0x44d370
  44156f:	jmp    0x441723
  441574:	mov    rcx,rdi
  441577:	call   0x44b78c
  44157c:	add    r14,rax
  44157f:	mov    ebx,DWORD PTR [rbx+0x34]
  441582:	cmp    rax,rbx
  441585:	jae    0x441723
  44158b:	sub    rbx,rax
  44158e:	lea    rsi,[rsp+r14*1+0xc0]
  441596:	xor    edi,edi
  441598:	test   ebx,ebx
  44159a:	je     0x4415ab
  44159c:	mov    edi,ebx
  44159e:	mov    r8d,ebx
  4415a1:	mov    dl,0x20
  4415a3:	mov    rcx,rsi
  4415a6:	call   0x44b780
  4415ab:	mov    BYTE PTR [rdi+rsi*1],0x0
  4415af:	add    r14,rbx
  4415b2:	jmp    0x441723
  4415b7:	cmp    ax,0x8
  4415bb:	jne    0x441639
  4415bd:	mov    rdx,QWORD PTR [rsp+0x48]
  4415c2:	lea    rcx,[rbp+0x40]
  4415c6:	call   0x403354
  4415cb:	test   r13b,r13b
  4415ce:	je     0x4415e9
  4415d0:	lea    r8,[rbp+0x30]
  4415d4:	lea    rdx,[rbp+0x40]
  4415d8:	lea    rcx,[rip+0x273f9]        # 0x4689d8
  4415df:	call   0x4025cc
  4415e4:	jmp    0x441723
  4415e9:	mov    ecx,DWORD PTR [rbx+0x2c]
  4415ec:	xor    edi,edi
  4415ee:	cmp    r12d,DWORD PTR [rbp+0x48]
  4415f2:	jbe    0x441619
  4415f4:	mov    edi,r12d
  4415f7:	sub    edi,DWORD PTR [rbp+0x48]
  4415fa:	xor    ebx,ebx
  4415fc:	test   ecx,ecx
  4415fe:	je     0x441610
  441600:	dec    ecx
  441602:	je     0x44160c
  441604:	dec    ecx
  441606:	jne    0x441610
  441608:	mov    ebx,edi
  44160a:	jmp    0x441610
  44160c:	mov    ebx,edi
  44160e:	shr    ebx,1
  441610:	mov    ecx,ebx
  441612:	call   0x4407e0
  441617:	sub    edi,ebx
  441619:	lea    r8,[rbp+0x30]
  44161d:	lea    rdx,[rbp+0x40]
  441621:	lea    rcx,[rip+0x273b0]        # 0x4689d8
  441628:	call   0x4025cc
  44162d:	mov    ecx,edi
  44162f:	call   0x4407e0
  441634:	jmp    0x441723
  441639:	mov    r9b,0x1
  44163c:	mov    r8d,DWORD PTR [rbx]
  44163f:	lea    rdx,[rsp+0x40]
  441644:	lea    rcx,[rsp+0x80]
  44164c:	call   0x433578
  441651:	test   r13b,r13b
  441654:	je     0x441670
  441656:	mov    rdx,QWORD PTR [rip+0x2737b]        # 0x4689d8
  44165d:	lea    rcx,[rsp+0x80]
  441665:	call   QWORD PTR [rip+0xbd05]        # 0x44d370
  44166b:	jmp    0x441723
  441670:	lea    r15,[rsp+r14*1+0xc0]
  441678:	mov    rsi,r15
  44167b:	mov    ebp,DWORD PTR [rbx+0x2c]
  44167e:	xor    edi,edi
  441680:	lea    rcx,[rsp+0x80]
  441688:	call   0x44b78c
  44168d:	mov    r13,rax
  441690:	cmp    r12d,eax
  441693:	jbe    0x4416d1
  441695:	mov    edi,r12d
  441698:	sub    edi,eax
  44169a:	xor    ebx,ebx
  44169c:	test   ebp,ebp
  44169e:	je     0x4416b0
  4416a0:	dec    ebp
  4416a2:	je     0x4416ac
  4416a4:	dec    ebp
  4416a6:	jne    0x4416b0
  4416a8:	mov    ebx,edi
  4416aa:	jmp    0x4416b0
  4416ac:	mov    ebx,edi
  4416ae:	shr    ebx,1
  4416b0:	xor    ebp,ebp
  4416b2:	test   ebx,ebx
  4416b4:	je     0x4416c5
  4416b6:	mov    ebp,ebx
  4416b8:	mov    r8d,ebx
  4416bb:	mov    dl,0x20
  4416bd:	mov    rcx,r15
  4416c0:	call   0x44b780
  4416c5:	mov    BYTE PTR [r15+rbp*1],0x0
  4416ca:	mov    eax,ebx
  4416cc:	add    rsi,rax
  4416cf:	sub    edi,ebx
  4416d1:	mov    ebx,r13d
  4416d4:	mov    r8d,r13d
  4416d7:	lea    rdx,[rsp+0x80]
  4416df:	mov    rcx,rsi
  4416e2:	call   0x44b480
  4416e7:	add    rsi,rbx
  4416ea:	xor    ebx,ebx
  4416ec:	test   edi,edi
  4416ee:	je     0x4416ff
  4416f0:	mov    ebx,edi
  4416f2:	mov    r8d,edi
  4416f5:	mov    dl,0x20
  4416f7:	mov    rcx,rsi
  4416fa:	call   0x44b780
  4416ff:	mov    BYTE PTR [rbx+rsi*1],0x0
  441703:	mov    rcx,r15
  441706:	call   0x44b78c
  44170b:	add    r14,rax
  44170e:	mov    rbp,QWORD PTR [rsp+0x220]
  441716:	mov    r13b,BYTE PTR [rsp+0x238]
  44171e:	mov    r15,QWORD PTR [rsp+0x60]
  441723:	lea    rcx,[rsp+0x40]
  441728:	call   0x40b028
  44172d:	mov    esi,DWORD PTR [rsp+0x228]
  441734:	test   r13b,r13b
  441737:	je     0x441745
  441739:	lea    rcx,[rip+0x27298]        # 0x4689d8
  441740:	call   0x402454
  441745:	mov    ecx,DWORD PTR [rsp+0x38]
  441749:	inc    ecx
  44174b:	mov    DWORD PTR [rsp+0x38],ecx
  44174f:	inc    r15
  441752:	mov    QWORD PTR [rsp+0x60],r15
  441757:	cmp    ecx,DWORD PTR [rbp+0x8]
  44175a:	mov    rdi,QWORD PTR [rsp+0x230]
  441762:	jb     0x441154
  441768:	jmp    0x441786
  44176a:	mov    eax,0x80004005
  44176f:	jmp    0x441794
  441771:	mov    eax,0x80004005
  441776:	jmp    0x441794
  441778:	lea    rcx,[rsp+0x40]
  44177d:	call   0x40b028
  441782:	mov    eax,edi
  441784:	jmp    0x441794
  441786:	lea    rcx,[rip+0x2724b]        # 0x4689d8
  44178d:	call   0x402454
  441792:	xor    eax,eax
  441794:	add    rsp,0x1d8
  44179b:	pop    r15
  44179d:	pop    r14
  44179f:	pop    r13
  4417a1:	pop    r12
  4417a3:	pop    rdi
  4417a4:	pop    rsi
  4417a5:	pop    rbp
  4417a6:	pop    rbx
  4417a7:	ret    
  4417a8:	int3   
  4417a9:	int3   
  4417aa:	int3   
  4417ab:	int3   
  4417ac:	rex.W push rbp
  4417ae:	sub    rsp,0x20
  4417b2:	mov    rbp,rdx
  4417b5:	lea    rcx,[rbp+0x68]
  4417b9:	call   0x401000
  4417be:	add    rsp,0x20
  4417c2:	pop    rbp
  4417c3:	ret    
  4417c4:	int3   
  4417c5:	int3   
  4417c6:	int3   
  4417c7:	int3   
  4417c8:	int3   
  4417c9:	int3   
  4417ca:	int3   
  4417cb:	int3   
  4417cc:	rex.W push rbp
  4417ce:	sub    rsp,0x20
  4417d2:	mov    rbp,rdx
  4417d5:	lea    rcx,[rbp+0x40]
  4417d9:	call   0x40b830
  4417de:	add    rsp,0x20
  4417e2:	pop    rbp
  4417e3:	ret    
  4417e4:	rex.W push rbx
  4417e6:	push   rbp
  4417e7:	push   rsi
  4417e8:	push   rdi
  4417e9:	push   r12
  4417eb:	push   r13
  4417ed:	push   r14
  4417ef:	push   r15
  4417f1:	sub    rsp,0x88
  4417f8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  441801:	mov    r15,r9
  441804:	mov    r14,r8
  441807:	mov    rdi,rdx
  44180a:	mov    r13,rcx
  44180d:	xor    r12d,r12d
  441810:	cmp    DWORD PTR [rcx+0x8],r12d
  441814:	jbe    0x441953
  44181a:	xor    ebp,ebp
  44181c:	mov    rax,QWORD PTR [r13+0x0]
  441820:	mov    rbx,QWORD PTR [rax+rbp*1]
  441824:	mov    ecx,DWORD PTR [rbx+0x30]
  441827:	call   0x4407e0
  44182c:	cmp    DWORD PTR [rbx],0x7
  44182f:	jne    0x441862
  441831:	mov    esi,DWORD PTR [rbx+0x2c]
  441834:	mov    ebx,DWORD PTR [rbx+0x34]
  441837:	mov    BYTE PTR [rsp+0x40],0x0
  44183c:	cmp    BYTE PTR [rdi+0x8],0x0
  441840:	je     0x44184f
  441842:	lea    rdx,[rsp+0x40]
  441847:	mov    rcx,QWORD PTR [rdi]
  44184a:	call   0x4019a4
  44184f:	lea    r8,[rsp+0x40]
  441854:	mov    edx,ebx
  441856:	mov    ecx,esi
  441858:	call   0x440810
  44185d:	jmp    0x441942
  441862:	cmp    DWORD PTR [rbx],0x8
  441865:	jne    0x441899
  441867:	mov    esi,DWORD PTR [rbx+0x2c]
  44186a:	mov    ebx,DWORD PTR [rbx+0x34]
  44186d:	mov    BYTE PTR [rsp+0x40],0x0
  441872:	cmp    BYTE PTR [rdi+0x18],0x0
  441876:	je     0x441886
  441878:	lea    rdx,[rsp+0x40]
  44187d:	mov    rcx,QWORD PTR [rdi+0x10]
  441881:	call   0x4019a4
  441886:	lea    r8,[rsp+0x40]
  44188b:	mov    edx,ebx
  44188d:	mov    ecx,esi
  44188f:	call   0x440810
  441894:	jmp    0x441942
  441899:	cmp    DWORD PTR [rbx],0xc
  44189c:	jne    0x4418c9
  44189e:	mov    BYTE PTR [rsp+0x40],0x0
  4418a3:	cmp    BYTE PTR [rdi+0x28],0x0
  4418a7:	je     0x4418b7
  4418a9:	lea    rdx,[rdi+0x20]
  4418ad:	lea    rcx,[rsp+0x40]
  4418b2:	call   0x4408e4
  4418b7:	lea    r8,[rsp+0x40]
  4418bc:	mov    edx,DWORD PTR [rbx+0x34]
  4418bf:	mov    ecx,DWORD PTR [rbx+0x2c]
  4418c2:	call   0x440810
  4418c7:	jmp    0x441942
  4418c9:	cmp    DWORD PTR [rbx],0x3
  4418cc:	jne    0x441930
  4418ce:	lea    rcx,[rsp+0x28]
  4418d3:	call   0x402b34
  4418d8:	nop
  4418d9:	mov    r8,r15
  4418dc:	mov    rdx,QWORD PTR [rdi+0x30]
  4418e0:	lea    rcx,[rsp+0x28]
  4418e5:	call   0x43e500
  4418ea:	test   r14,r14
  4418ed:	je     0x441914
  4418ef:	lea    rdx,[rip+0x10916]        # 0x45220c
  4418f6:	lea    rcx,[rsp+0x28]
  4418fb:	call   0x402d24
  441900:	mov    r8,QWORD PTR [rip+0x26ed9]        # 0x4687e0
  441907:	mov    rdx,r14
  44190a:	lea    rcx,[rsp+0x28]
  44190f:	call   0x43e500
  441914:	mov    r8,QWORD PTR [rsp+0x28]
  441919:	xor    edx,edx
  44191b:	mov    ecx,DWORD PTR [rbx+0x2c]
  44191e:	call   0x440810
  441923:	nop
  441924:	mov    rcx,QWORD PTR [rsp+0x28]
  441929:	call   0x40215c
  44192e:	jmp    0x441942
  441930:	lea    r8,[rip+0xc7a3]        # 0x44e0da
  441937:	mov    edx,DWORD PTR [rbx+0x34]
  44193a:	mov    ecx,DWORD PTR [rbx+0x2c]
  44193d:	call   0x440810
  441942:	inc    r12d
  441945:	add    rbp,0x8
  441949:	cmp    r12d,DWORD PTR [r13+0x8]
  44194d:	jb     0x44181c
  441953:	lea    rcx,[rip+0x2707e]        # 0x4689d8
  44195a:	add    rsp,0x88
  441961:	pop    r15
  441963:	pop    r14
  441965:	pop    r13
  441967:	pop    r12
  441969:	pop    rdi
  44196a:	pop    rsi
  44196b:	pop    rbp
  44196c:	pop    rbx
  44196d:	jmp    0x402454
  441972:	int3   
  441973:	int3   
  441974:	rex.W push rbp
  441976:	sub    rsp,0x20
  44197a:	mov    rbp,rdx
  44197d:	lea    rcx,[rbp+0x28]
  441981:	call   0x401000
  441986:	add    rsp,0x20
  44198a:	pop    rbp
  44198b:	ret    
  44198c:	rex.W push rbx
  44198e:	push   rsi
  44198f:	push   rdi
  441990:	sub    rsp,0x60
  441994:	mov    r9,QWORD PTR [rip+0x26e3d]        # 0x4687d8
  44199b:	mov    r8,QWORD PTR [rdx+0x70]
  44199f:	mov    rdi,rdx
  4419a2:	mov    rsi,rcx
  4419a5:	call   0x4417e4
  4419aa:	cmp    QWORD PTR [rdi+0x68],0x0
  4419af:	je     0x4419ff
  4419b1:	mov    r9,QWORD PTR [rip+0x26e30]        # 0x4687e8
  4419b8:	lea    rdx,[rdi+0x38]
  4419bc:	xor    r8d,r8d
  4419bf:	mov    rcx,rsi
  4419c2:	call   0x4417e4
  4419c7:	lea    rcx,[rsp+0x20]
  4419cc:	mov    rdx,rdi
  4419cf:	mov    r8d,0x38
  4419d5:	call   0x44b480
  4419da:	lea    rdx,[rdi+0x38]
  4419de:	lea    rcx,[rsp+0x20]
  4419e3:	call   0x440878
  4419e8:	mov    r9,QWORD PTR [rip+0x26e01]        # 0x4687f0
  4419ef:	lea    rdx,[rsp+0x20]
  4419f4:	xor    r8d,r8d
  4419f7:	mov    rcx,rsi
  4419fa:	call   0x4417e4
  4419ff:	add    rsp,0x60
  441a03:	pop    rdi
  441a04:	pop    rsi
  441a05:	pop    rbx
  441a06:	ret    
  441a07:	int3   
  441a08:	mov    QWORD PTR [rsp+0x10],rdx
  441a0d:	push   rbx
  441a0e:	push   rbp
  441a0f:	push   rsi
  441a10:	push   rdi
  441a11:	push   r12
  441a13:	push   r13
  441a15:	push   r14
  441a17:	push   r15
  441a19:	sub    rsp,0x88
  441a20:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
  441a29:	mov    r12,r8
  441a2c:	mov    rsi,rdx
  441a2f:	mov    rbx,rcx
  441a32:	xor    r13d,r13d
  441a35:	cmp    DWORD PTR [r8+0x8],r13d
  441a39:	jbe    0x441d66
  441a3f:	xor    r14d,r14d
  441a42:	mov    rax,QWORD PTR [r12]
  441a46:	mov    rdi,QWORD PTR [r14+rax*1]
  441a4a:	lea    rbp,[rdi+0x20]
  441a4e:	mov    rdx,QWORD PTR [rbx]
  441a51:	lea    rcx,[rip+0x1161c]        # 0x453074
  441a58:	call   QWORD PTR [rip+0xb912]        # 0x44d370
  441a5e:	mov    r8,QWORD PTR [rdi+0x90]
  441a65:	lea    rdx,[rip+0x11488]        # 0x452ef4
  441a6c:	mov    rcx,rbx
  441a6f:	call   0x440a74
  441a74:	mov    r11d,DWORD PTR [rbp+0xc]
  441a78:	test   r11d,r11d
  441a7b:	js     0x441ad2
  441a7d:	cmp    r11d,DWORD PTR [rdi+0xc0]
  441a84:	jne    0x441aa0
  441a86:	mov    rdx,QWORD PTR [rbx]
  441a89:	lea    rcx,[rip+0x115b8]        # 0x453048
  441a90:	call   QWORD PTR [rip+0xb8da]        # 0x44d370
  441a96:	mov    rcx,rbx
  441a99:	call   0x402454
  441a9e:	jmp    0x441ad2
  441aa0:	mov    rax,QWORD PTR [rsi+0x40]
  441aa4:	mov    rcx,QWORD PTR [rax+r11*8]
  441aa8:	mov    rdx,QWORD PTR [rcx+0x18]
  441aac:	lea    rcx,[rsp+0x60]
  441ab1:	call   0x4031c0
  441ab6:	nop
  441ab7:	mov    r8b,0x1
  441aba:	lea    rdx,[rsp+0x60]
  441abf:	mov    rcx,rbx
  441ac2:	call   0x440cdc
  441ac7:	nop
  441ac8:	mov    rcx,QWORD PTR [rsp+0x60]
  441acd:	call   0x40215c
  441ad2:	mov    eax,DWORD PTR [rdi+0xc0]
  441ad8:	test   eax,eax
  441ada:	jns    0x441ae5
  441adc:	lea    r8,[rip+0x10971]        # 0x452454
  441ae3:	jmp    0x441af4
  441ae5:	mov    rcx,rax
  441ae8:	mov    rax,QWORD PTR [rsi+0x40]
  441aec:	mov    rcx,QWORD PTR [rax+rcx*8]
  441af0:	mov    r8,QWORD PTR [rcx+0x18]
  441af4:	lea    rdx,[rip+0x1133d]        # 0x452e38
  441afb:	mov    rcx,rbx
  441afe:	call   0x440a74
  441b03:	mov    rdx,rbp
  441b06:	mov    rcx,rbx
  441b09:	call   0x440d58
  441b0e:	mov    rsi,QWORD PTR [rdi+0x100]
  441b15:	add    rsi,QWORD PTR [rdi+0xd8]
  441b1c:	je     0x441b51
  441b1e:	mov    rdx,QWORD PTR [rbx]
  441b21:	mov    rcx,QWORD PTR [rip+0x10c78]        # 0x4527a0
  441b28:	call   QWORD PTR [rip+0xb842]        # 0x44d370
  441b2e:	mov    rdx,QWORD PTR [rbx]
  441b31:	lea    rcx,[rip+0x113fc]        # 0x452f34
  441b38:	call   QWORD PTR [rip+0xb832]        # 0x44d370
  441b3e:	mov    rdx,rsi
  441b41:	mov    rcx,rbx
  441b44:	call   0x40262c
  441b49:	mov    rcx,rax
  441b4c:	call   0x402454
  441b51:	mov    rdi,QWORD PTR [rdi]
  441b54:	xor    r9d,r9d
  441b57:	lea    r8d,[r9+0x2c]
  441b5b:	mov    rdx,rdi
  441b5e:	mov    rcx,rbx
  441b61:	call   0x440c44
  441b66:	test   eax,eax
  441b68:	jne    0x441d68
  441b6e:	mov    rsi,QWORD PTR [rbp+0x10]
  441b72:	test   rsi,rsi
  441b75:	je     0x441baa
  441b77:	mov    rdx,QWORD PTR [rbx]
  441b7a:	mov    rcx,QWORD PTR [rip+0x10db7]        # 0x452938
  441b81:	call   QWORD PTR [rip+0xb7e9]        # 0x44d370
  441b87:	mov    rdx,QWORD PTR [rbx]
  441b8a:	lea    rcx,[rip+0x113a3]        # 0x452f34
  441b91:	call   QWORD PTR [rip+0xb7d9]        # 0x44d370
  441b97:	mov    rdx,rsi
  441b9a:	mov    rcx,rbx
  441b9d:	call   0x40268c
  441ba2:	mov    rcx,rax
  441ba5:	call   0x402454
  441baa:	mov    rax,QWORD PTR [rdi]
  441bad:	lea    rdx,[rsp+0x40]
  441bb2:	mov    rcx,rdi
  441bb5:	call   QWORD PTR [rax+0x58]
  441bb8:	test   eax,eax
  441bba:	jne    0x441d68
  441bc0:	xor    ebp,ebp
  441bc2:	cmp    DWORD PTR [rsp+0x40],ebp
  441bc6:	jbe    0x441c2d
  441bc8:	mov    QWORD PTR [rsp+0x30],0x0
  441bd1:	mov    rax,QWORD PTR [rdi]
  441bd4:	lea    rcx,[rsp+0xe0]
  441bdc:	mov    QWORD PTR [rsp+0x20],rcx
  441be1:	lea    r9,[rsp+0x44]
  441be6:	lea    r8,[rsp+0x30]
  441beb:	mov    edx,ebp
  441bed:	mov    rcx,rdi
  441bf0:	call   QWORD PTR [rax+0x60]
  441bf3:	mov    esi,eax
  441bf5:	test   eax,eax
  441bf7:	jne    0x441d37
  441bfd:	mov    r9,QWORD PTR [rsp+0x30]
  441c02:	mov    r8d,DWORD PTR [rsp+0x44]
  441c07:	mov    rdx,rdi
  441c0a:	mov    rcx,rbx
  441c0d:	call   0x440c44
  441c12:	test   eax,eax
  441c14:	jne    0x441d39
  441c1a:	mov    rcx,QWORD PTR [rsp+0x30]
  441c1f:	call   QWORD PTR [rip+0xb67b]        # 0x44d2a0
  441c25:	inc    ebp
  441c27:	cmp    ebp,DWORD PTR [rsp+0x40]
  441c2b:	jb     0x441bc8
  441c2d:	mov    eax,DWORD PTR [r12+0x8]
  441c32:	dec    eax
  441c34:	cmp    r13d,eax
  441c37:	je     0x441d1b
  441c3d:	mov    rdx,QWORD PTR [rbx]
  441c40:	lea    rcx,[rip+0x113f9]        # 0x453040
  441c47:	call   QWORD PTR [rip+0xb723]        # 0x44d370
  441c4d:	mov    r11,QWORD PTR [rdi]
  441c50:	lea    rdx,[rsp+0x3c]
  441c55:	mov    rcx,rdi
  441c58:	call   QWORD PTR [r11+0x48]
  441c5c:	test   eax,eax
  441c5e:	jne    0x441d1b
  441c64:	mov    rax,QWORD PTR [r12]
  441c68:	mov    rcx,QWORD PTR [r14+rax*1+0x8]
  441c6d:	mov    r15d,DWORD PTR [rcx+0xc4]
  441c74:	xor    ebp,ebp
  441c76:	cmp    DWORD PTR [rsp+0x3c],ebp
  441c7a:	jbe    0x441d1b
  441c80:	mov    QWORD PTR [rsp+0x30],0x0
  441c89:	mov    rax,QWORD PTR [rdi]
  441c8c:	lea    rcx,[rsp+0xe8]
  441c94:	mov    QWORD PTR [rsp+0x20],rcx
  441c99:	lea    r9,[rsp+0x38]
  441c9e:	lea    r8,[rsp+0x30]
  441ca3:	mov    edx,ebp
  441ca5:	mov    rcx,rdi
  441ca8:	call   QWORD PTR [rax+0x50]
  441cab:	mov    esi,eax
  441cad:	xor    eax,eax
  441caf:	cmp    esi,eax
  441cb1:	jne    0x441d4a
  441cb7:	mov    WORD PTR [rsp+0x48],ax
  441cbc:	mov    WORD PTR [rsp+0x4a],ax
  441cc1:	mov    QWORD PTR [rsp+0x50],rax
  441cc6:	mov    rax,QWORD PTR [rdi]
  441cc9:	lea    r9,[rsp+0x48]
  441cce:	mov    r8d,DWORD PTR [rsp+0x38]
  441cd3:	mov    edx,r15d
  441cd6:	mov    rcx,rdi
  441cd9:	call   QWORD PTR [rax+0x30]
  441cdc:	mov    esi,eax
  441cde:	test   eax,eax
  441ce0:	jne    0x441d4c
  441ce2:	lea    r9,[rsp+0x48]
  441ce7:	mov    r8,QWORD PTR [rsp+0x30]
  441cec:	mov    edx,DWORD PTR [rsp+0x38]
  441cf0:	mov    rcx,rbx
  441cf3:	call   0x440abc
  441cf8:	nop
  441cf9:	lea    rcx,[rsp+0x48]
  441cfe:	call   0x40b028
  441d03:	nop
  441d04:	mov    rcx,QWORD PTR [rsp+0x30]
  441d09:	call   QWORD PTR [rip+0xb591]        # 0x44d2a0
  441d0f:	inc    ebp
  441d11:	cmp    ebp,DWORD PTR [rsp+0x3c]
  441d15:	jb     0x441c80
  441d1b:	inc    r13d
  441d1e:	add    r14,0x8
  441d22:	cmp    r13d,DWORD PTR [r12+0x8]
  441d27:	mov    rsi,QWORD PTR [rsp+0xd8]
  441d2f:	jb     0x441a42
  441d35:	jmp    0x441d66
  441d37:	jmp    0x441d3b
  441d39:	mov    esi,eax
  441d3b:	mov    rcx,QWORD PTR [rsp+0x30]
  441d40:	call   QWORD PTR [rip+0xb55a]        # 0x44d2a0
  441d46:	mov    eax,esi
  441d48:	jmp    0x441d68
  441d4a:	jmp    0x441d57
  441d4c:	lea    rcx,[rsp+0x48]
  441d51:	call   0x40b028
  441d56:	nop
  441d57:	mov    rcx,QWORD PTR [rsp+0x30]
  441d5c:	call   QWORD PTR [rip+0xb53e]        # 0x44d2a0
  441d62:	mov    eax,esi
  441d64:	jmp    0x441d68
  441d66:	xor    eax,eax
  441d68:	add    rsp,0x88
  441d6f:	pop    r15
  441d71:	pop    r14
  441d73:	pop    r13
  441d75:	pop    r12
  441d77:	pop    rdi
  441d78:	pop    rsi
  441d79:	pop    rbp
  441d7a:	pop    rbx
  441d7b:	ret    
  441d7c:	int3   
  441d7d:	int3   
  441d7e:	int3   
  441d7f:	int3   
  441d80:	int3   
  441d81:	int3   
  441d82:	int3   
  441d83:	int3   
  441d84:	int3   
  441d85:	int3   
  441d86:	int3   
  441d87:	int3   
  441d88:	rex.W push rbp
  441d8a:	sub    rsp,0x20
  441d8e:	mov    rbp,rdx
  441d91:	lea    rcx,[rbp+0x60]
  441d95:	call   0x401000
  441d9a:	add    rsp,0x20
  441d9e:	pop    rbp
  441d9f:	ret    
  441da0:	int3   
  441da1:	int3   
  441da2:	int3   
  441da3:	int3   
  441da4:	int3   
  441da5:	int3   
  441da6:	int3   
  441da7:	int3   
  441da8:	rex.W push rbp
  441daa:	sub    rsp,0x20
  441dae:	mov    rbp,rdx
  441db1:	lea    rcx,[rbp+0x30]
  441db5:	call   0x4407d4
  441dba:	add    rsp,0x20
  441dbe:	pop    rbp
  441dbf:	ret    
  441dc0:	int3   
  441dc1:	int3   
  441dc2:	int3   
  441dc3:	int3   
  441dc4:	int3   
  441dc5:	int3   
  441dc6:	int3   
  441dc7:	int3   
  441dc8:	rex.W push rbp
  441dca:	sub    rsp,0x20
  441dce:	mov    rbp,rdx
  441dd1:	lea    rcx,[rbp+0x30]
  441dd5:	call   0x4407d4
  441dda:	add    rsp,0x20
  441dde:	pop    rbp
  441ddf:	ret    
  441de0:	int3   
  441de1:	int3   
  441de2:	int3   
  441de3:	int3   
  441de4:	int3   
  441de5:	int3   
  441de6:	int3   
  441de7:	int3   
  441de8:	rex.W push rbp
  441dea:	sub    rsp,0x20
  441dee:	mov    rbp,rdx
  441df1:	lea    rcx,[rbp+0x48]
  441df5:	call   0x40b830
  441dfa:	add    rsp,0x20
  441dfe:	pop    rbp
  441dff:	ret    
  441e00:	rex.W push rbx
  441e02:	push   rsi
  441e03:	push   rdi
  441e04:	sub    rsp,0x20
  441e08:	cmp    BYTE PTR [r8+0x29],0x0
  441e0d:	mov    rdi,r8
  441e10:	mov    rsi,rdx
  441e13:	mov    rbx,rcx
  441e16:	je     0x441e24
  441e18:	mov    rdx,QWORD PTR [rcx]
  441e1b:	lea    rcx,[rip+0x1127e]        # 0x4530a0
  441e22:	jmp    0x441e63
  441e24:	cmp    DWORD PTR [r8+0x4c],0x0
  441e29:	jl     0x441e59
  441e2b:	mov    rdx,QWORD PTR [r8+0x30]
  441e2f:	call   0x402474
  441e34:	mov    rcx,rax
  441e37:	call   0x402454
  441e3c:	mov    r11d,DWORD PTR [rdi+0x4c]
  441e40:	mov    rax,QWORD PTR [rsi+0x40]
  441e44:	mov    rdx,QWORD PTR [rax+r11*8]
  441e48:	xor    r8d,r8d
  441e4b:	mov    rcx,rbx
  441e4e:	add    rdx,0x18
  441e52:	call   0x440cdc
  441e57:	jmp    0x441e69
  441e59:	mov    rdx,QWORD PTR [rcx]
  441e5c:	lea    rcx,[rip+0x11215]        # 0x453078
  441e63:	call   QWORD PTR [rip+0xb507]        # 0x44d370
  441e69:	mov    rcx,rbx
  441e6c:	call   0x402454
  441e71:	mov    rcx,rbx
  441e74:	call   0x402454
  441e79:	lea    rdx,[rdi+0x40]
  441e7d:	mov    rcx,rbx
  441e80:	call   0x440d58
  441e85:	xor    eax,eax
  441e87:	add    rsp,0x20
  441e8b:	pop    rdi
  441e8c:	pop    rsi
  441e8d:	pop    rbx
  441e8e:	ret    
  441e8f:	int3   
  441e90:	rex.W push rbx
  441e92:	push   rbp
  441e93:	push   rsi
  441e94:	push   rdi
  441e95:	sub    rsp,0x28
  441e99:	mov    rbx,rcx
  441e9c:	mov    rcx,QWORD PTR [rcx+0x58]
  441ea0:	call   0x40215c
  441ea5:	mov    rcx,QWORD PTR [rbx+0x40]
  441ea9:	call   0x40215c
  441eae:	mov    rcx,QWORD PTR [rbx+0x30]
  441eb2:	call   0x40215c
  441eb7:	mov    rcx,QWORD PTR [rbx+0x20]
  441ebb:	call   0x40215c
  441ec0:	movsxd rsi,DWORD PTR [rbx+0x8]
  441ec4:	test   esi,esi
  441ec6:	mov    rdi,rsi
  441ec9:	je     0x441f00
  441ecb:	shl    rdi,0x3
  441ecf:	mov    rax,QWORD PTR [rbx]
  441ed2:	sub    rdi,0x8
  441ed6:	add    esi,0xffffffff
  441ed9:	mov    rbp,QWORD PTR [rdi+rax*1]
  441edd:	test   rbp,rbp
  441ee0:	je     0x441efc
  441ee2:	mov    rcx,QWORD PTR [rbp+0x18]
  441ee6:	call   0x40215c
  441eeb:	mov    rcx,QWORD PTR [rbp+0x8]
  441eef:	call   0x40215c
  441ef4:	mov    rcx,rbp
  441ef7:	call   0x40215c
  441efc:	test   esi,esi
  441efe:	jne    0x441ecf
  441f00:	mov    rcx,QWORD PTR [rbx]
  441f03:	add    rsp,0x28
  441f07:	pop    rdi
  441f08:	pop    rsi
  441f09:	pop    rbp
  441f0a:	pop    rbx
  441f0b:	jmp    0x40215c
  441f10:	rex.W push rbx
  441f12:	push   rsi
  441f13:	push   rdi
  441f14:	sub    rsp,0x30
  441f18:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  441f21:	mov    rdi,rdx
  441f24:	mov    rsi,rcx
  441f27:	mov    ecx,0x38
  441f2c:	call   0x402130
  441f31:	mov    rbx,rax
  441f34:	mov    QWORD PTR [rsp+0x60],rax
  441f39:	test   rax,rax
  441f3c:	je     0x441f7f
  441f3e:	mov    eax,DWORD PTR [rdi]
  441f40:	mov    DWORD PTR [rbx],eax
  441f42:	mov    al,BYTE PTR [rdi+0x4]
  441f45:	mov    BYTE PTR [rbx+0x4],al
  441f48:	lea    rdx,[rdi+0x8]
  441f4c:	lea    rcx,[rbx+0x8]
  441f50:	call   0x403208
  441f55:	nop
  441f56:	lea    rdx,[rdi+0x18]
  441f5a:	lea    rcx,[rbx+0x18]
  441f5e:	call   0x402bb0
  441f63:	mov    r11d,DWORD PTR [rdi+0x28]
  441f67:	mov    DWORD PTR [rbx+0x28],r11d
  441f6b:	mov    eax,DWORD PTR [rdi+0x2c]
  441f6e:	mov    DWORD PTR [rbx+0x2c],eax
  441f71:	mov    eax,DWORD PTR [rdi+0x30]
  441f74:	mov    DWORD PTR [rbx+0x30],eax
  441f77:	mov    eax,DWORD PTR [rdi+0x34]
  441f7a:	mov    DWORD PTR [rbx+0x34],eax
  441f7d:	jmp    0x441f81
  441f7f:	xor    ebx,ebx
  441f81:	mov    rdx,rbx
  441f84:	mov    rcx,rsi
  441f87:	add    rsp,0x30
  441f8b:	pop    rdi
  441f8c:	pop    rsi
  441f8d:	pop    rbx
  441f8e:	jmp    0x4010c8
  441f93:	int3   
  441f94:	int3   
  441f95:	int3   
  441f96:	int3   
  441f97:	int3   
  441f98:	int3   
  441f99:	int3   
  441f9a:	int3   
  441f9b:	int3   
  441f9c:	int3   
  441f9d:	int3   
  441f9e:	int3   
  441f9f:	int3   
  441fa0:	rex.W push rbp
  441fa2:	sub    rsp,0x20
  441fa6:	mov    rbp,rdx
  441fa9:	mov    rcx,QWORD PTR [rbp+0x60]
  441fad:	call   0x40215c
  441fb2:	add    rsp,0x20
  441fb6:	pop    rbp
  441fb7:	ret    
  441fb8:	int3   
  441fb9:	int3   
  441fba:	int3   
  441fbb:	int3   
  441fbc:	int3   
  441fbd:	int3   
  441fbe:	int3   
  441fbf:	int3   
  441fc0:	rex.W push rbp
  441fc2:	sub    rsp,0x20
  441fc6:	mov    rbp,rdx
  441fc9:	mov    rcx,QWORD PTR [rbp+0x60]
  441fcd:	add    rcx,0x8
  441fd1:	call   0x401000
  441fd6:	add    rsp,0x20
  441fda:	pop    rbp
  441fdb:	ret    
  441fdc:	rex.W push rbx
  441fde:	push   rbp
  441fdf:	push   rsi
  441fe0:	push   rdi
  441fe1:	push   r12
  441fe3:	sub    rsp,0x30
  441fe7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  441ff0:	mov    ebx,r8d
  441ff3:	mov    rdi,rdx
  441ff6:	mov    rsi,rcx
  441ff9:	call   0x441040
  441ffe:	test   ebx,ebx
  442000:	je     0x4420cd
  442006:	add    rdi,0x10
  44200a:	mov    r12,rbx
  44200d:	mov    ecx,0x38
  442012:	call   0x402130
  442017:	mov    rbx,rax
  44201a:	mov    QWORD PTR [rsp+0x78],rax
  44201f:	test   rax,rax
  442022:	je     0x44203a
  442024:	lea    rcx,[rax+0x8]
  442028:	call   0x403150
  44202d:	nop
  44202e:	lea    rcx,[rbx+0x18]
  442032:	call   0x402b34
  442037:	nop
  442038:	jmp    0x44203c
  44203a:	xor    ebx,ebx
  44203c:	mov    rdx,rbx
  44203f:	mov    rcx,rsi
  442042:	call   0x4010c8
  442047:	mov    eax,DWORD PTR [rdi-0x10]
  44204a:	mov    DWORD PTR [rbx],eax
  44204c:	mov    BYTE PTR [rbx+0x4],0x0
  442050:	lea    rcx,[rbx+0x18]
  442054:	mov    rdx,QWORD PTR [rdi-0x8]
  442058:	call   0x402be4
  44205d:	mov    r11d,DWORD PTR [rdi]
  442060:	mov    DWORD PTR [rbx+0x28],r11d
  442064:	mov    eax,DWORD PTR [rdi+0x4]
  442067:	mov    DWORD PTR [rbx+0x2c],eax
  44206a:	mov    eax,DWORD PTR [rdi+0x8]
  44206d:	mov    DWORD PTR [rbx+0x30],eax
  442070:	mov    eax,DWORD PTR [rdi+0xc]
  442073:	mov    DWORD PTR [rbx+0x34],eax
  442076:	xor    ebx,ebx
  442078:	cmp    DWORD PTR [rdi+0x8],ebx
  44207b:	jbe    0x44208d
  44207d:	lea    rcx,[rsi+0x58]
  442081:	call   0x40380c
  442086:	inc    ebx
  442088:	cmp    ebx,DWORD PTR [rdi+0x8]
  44208b:	jb     0x44207d
  44208d:	xor    ebp,ebp
  44208f:	cmp    DWORD PTR [rdi+0xc],ebp
  442092:	jbe    0x4420c0
  442094:	mov    eax,DWORD PTR [rsi+0x60]
  442097:	cmp    DWORD PTR [rsi+0x64],eax
  44209a:	jne    0x4420a5
  44209c:	lea    rcx,[rsi+0x58]
  4420a0:	call   0x402af0
  4420a5:	mov    edx,DWORD PTR [rsi+0x60]
  4420a8:	mov    rcx,QWORD PTR [rsi+0x58]
  4420ac:	mov    BYTE PTR [rdx+rcx*1],0x2d
  4420b0:	inc    edx
  4420b2:	mov    BYTE PTR [rdx+rcx*1],0x0
  4420b6:	mov    DWORD PTR [rsi+0x60],edx
  4420b9:	inc    ebp
  4420bb:	cmp    ebp,DWORD PTR [rdi+0xc]
  4420be:	jb     0x442094
  4420c0:	add    rdi,0x20
  4420c4:	dec    r12
  4420c7:	jne    0x44200d
  4420cd:	add    rsp,0x30
  4420d1:	pop    r12
  4420d3:	pop    rdi
  4420d4:	pop    rsi
  4420d5:	pop    rbp
  4420d6:	pop    rbx
  4420d7:	ret    
  4420d8:	int3   
  4420d9:	int3   
  4420da:	int3   
  4420db:	int3   
  4420dc:	rex.W push rbp
  4420de:	sub    rsp,0x20
  4420e2:	mov    rbp,rdx
  4420e5:	mov    rcx,QWORD PTR [rbp+0x78]
  4420e9:	call   0x40215c
  4420ee:	add    rsp,0x20
  4420f2:	pop    rbp
  4420f3:	ret    
  4420f4:	int3   
  4420f5:	int3   
  4420f6:	int3   
  4420f7:	int3   
  4420f8:	int3   
  4420f9:	int3   
  4420fa:	int3   
  4420fb:	int3   
  4420fc:	rex.W push rbp
  4420fe:	sub    rsp,0x20
  442102:	mov    rbp,rdx
  442105:	mov    rcx,QWORD PTR [rbp+0x78]
  442109:	add    rcx,0x8
  44210d:	call   0x401000
  442112:	add    rsp,0x20
  442116:	pop    rbp
  442117:	ret    
  442118:	rex.W push rbx
  44211a:	push   rbp
  44211b:	push   rsi
  44211c:	push   rdi
  44211d:	sub    rsp,0x78
  442121:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44212a:	mov    bl,r9b
  44212d:	mov    edi,r8d
  442130:	mov    rsi,rdx
  442133:	mov    rbp,rcx
  442136:	lea    rcx,[rsp+0x40]
  44213b:	call   0x403150
  442140:	nop
  442141:	lea    rcx,[rsp+0x50]
  442146:	call   0x402b34
  44214b:	nop
  44214c:	mov    DWORD PTR [rsp+0x38],edi
  442150:	mov    BYTE PTR [rsp+0x3c],bl
  442154:	cmp    edi,0x60
  442157:	jae    0x442170
  442159:	lea    rax,[rip+0x10520]        # 0x452680
  442160:	mov    rdx,QWORD PTR [rax+rdi*8]
  442164:	lea    rcx,[rsp+0x50]
  442169:	call   0x402be4
  44216e:	jmp    0x44219f
  442170:	test   rsi,rsi
  442173:	je     0x442184
  442175:	mov    rdx,rsi
  442178:	lea    rcx,[rsp+0x40]
  44217d:	call   0x403290
  442182:	jmp    0x44219f
  442184:	lea    rdx,[rsp+0x28]
  442189:	mov    ecx,edi
  44218b:	call   0x401930
  442190:	lea    rdx,[rsp+0x28]
  442195:	lea    rcx,[rsp+0x50]
  44219a:	call   0x402be4
  44219f:	lea    rdx,[rip+0x10d8e]        # 0x452f34
  4421a6:	lea    rcx,[rsp+0x40]
  4421ab:	call   0x403560
  4421b0:	cmp    DWORD PTR [rsp+0x58],0x0
  4421b5:	je     0x4421cd
  4421b7:	lea    rdx,[rip+0x10d76]        # 0x452f34
  4421be:	lea    rcx,[rsp+0x50]
  4421c3:	call   0x402d24
  4421c8:	jmp    0x44224d
  4421cd:	lea    rcx,[rsp+0x28]
  4421d2:	call   0x402b34
  4421d7:	nop
  4421d8:	xor    ebx,ebx
  4421da:	mov    ecx,DWORD PTR [rsp+0x48]
  4421de:	test   ecx,ecx
  4421e0:	je     0x44222f
  4421e2:	xor    edi,edi
  4421e4:	mov    edx,DWORD PTR [rsp+0x30]
  4421e8:	mov    rax,QWORD PTR [rsp+0x40]
  4421ed:	movzx  esi,WORD PTR [rdi+rax*1]
  4421f1:	cmp    si,0x80
  4421f6:	jae    0x44222f
  4421f8:	cmp    DWORD PTR [rsp+0x34],edx
  4421fc:	jne    0x44220c
  4421fe:	lea    rcx,[rsp+0x28]
  442203:	call   0x402af0
  442208:	mov    edx,DWORD PTR [rsp+0x30]
  44220c:	mov    rcx,QWORD PTR [rsp+0x28]
  442211:	mov    eax,edx
  442213:	mov    BYTE PTR [rax+rcx*1],sil
  442217:	inc    edx
  442219:	mov    BYTE PTR [rdx+rcx*1],0x0
  44221d:	mov    DWORD PTR [rsp+0x30],edx
  442221:	inc    ebx
  442223:	add    rdi,0x2
  442227:	mov    ecx,DWORD PTR [rsp+0x48]
  44222b:	cmp    ebx,ecx
  44222d:	jb     0x4421e8
  44222f:	cmp    ebx,ecx
  442231:	jne    0x442243
  442233:	lea    rdx,[rsp+0x28]
  442238:	lea    rcx,[rsp+0x50]
  44223d:	call   0x402c48
  442242:	nop
  442243:	mov    rcx,QWORD PTR [rsp+0x28]
  442248:	call   0x40215c
  44224d:	lea    rdx,[rsp+0x38]
  442252:	mov    rcx,rbp
  442255:	call   0x441f10
  44225a:	nop
  44225b:	mov    rcx,QWORD PTR [rsp+0x50]
  442260:	call   0x40215c
  442265:	mov    rcx,QWORD PTR [rsp+0x40]
  44226a:	call   0x40215c
  44226f:	add    rsp,0x78
  442273:	pop    rdi
  442274:	pop    rsi
  442275:	pop    rbp
  442276:	pop    rbx
  442277:	ret    
  442278:	rex.W push rbp
  44227a:	sub    rsp,0x20
  44227e:	mov    rbp,rdx
  442281:	lea    rcx,[rbp+0x38]
  442285:	add    rcx,0x8
  442289:	call   0x401000
  44228e:	add    rsp,0x20
  442292:	pop    rbp
  442293:	ret    
  442294:	int3   
  442295:	int3   
  442296:	int3   
  442297:	int3   
  442298:	rex.W push rbp
  44229a:	sub    rsp,0x20
  44229e:	mov    rbp,rdx
  4422a1:	lea    rcx,[rbp+0x38]
  4422a5:	call   0x412650
  4422aa:	add    rsp,0x20
  4422ae:	pop    rbp
  4422af:	ret    
  4422b0:	int3   
  4422b1:	int3   
  4422b2:	int3   
  4422b3:	int3   
  4422b4:	int3   
  4422b5:	int3   
  4422b6:	int3   
  4422b7:	int3   
  4422b8:	rex.W push rbp
  4422ba:	sub    rsp,0x20
  4422be:	mov    rbp,rdx
  4422c1:	lea    rcx,[rbp+0x28]
  4422c5:	call   0x401000
  4422ca:	add    rsp,0x20
  4422ce:	pop    rbp
  4422cf:	ret    
  4422d0:	rex.W push rbx
  4422d2:	push   rbp
  4422d3:	push   rsi
  4422d4:	push   rdi
  4422d5:	mov    r11,rsp
  4422d8:	sub    rsp,0x48
  4422dc:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
  4422e5:	mov    rsi,rdx
  4422e8:	mov    rbp,rcx
  4422eb:	mov    rax,QWORD PTR [rdx]
  4422ee:	lea    rdx,[r11+0x38]
  4422f2:	mov    rcx,rsi
  4422f5:	call   QWORD PTR [rax+0x48]
  4422f8:	test   eax,eax
  4422fa:	jne    0x44237a
  4422fc:	xor    ebx,ebx
  4422fe:	cmp    DWORD PTR [rsp+0x80],ebx
  442305:	jbe    0x442378
  442307:	mov    QWORD PTR [rsp+0x30],0x0
  442310:	mov    rax,QWORD PTR [rsi]
  442313:	lea    rcx,[rsp+0x78]
  442318:	mov    QWORD PTR [rsp+0x20],rcx
  44231d:	lea    r9,[rsp+0x88]
  442325:	lea    r8,[rsp+0x30]
  44232a:	mov    edx,ebx
  44232c:	mov    rcx,rsi
  44232f:	call   QWORD PTR [rax+0x50]
  442332:	mov    edi,eax
  442334:	test   eax,eax
  442336:	jne    0x442369
  442338:	xor    r9d,r9d
  44233b:	mov    r8d,DWORD PTR [rsp+0x88]
  442343:	mov    rdx,QWORD PTR [rsp+0x30]
  442348:	mov    rcx,rbp
  44234b:	call   0x442118
  442350:	nop
  442351:	mov    rcx,QWORD PTR [rsp+0x30]
  442356:	call   QWORD PTR [rip+0xaf44]        # 0x44d2a0
  44235c:	inc    ebx
  44235e:	cmp    ebx,DWORD PTR [rsp+0x80]
  442365:	jb     0x442307
  442367:	jmp    0x442378
  442369:	mov    rcx,QWORD PTR [rsp+0x30]
  44236e:	call   QWORD PTR [rip+0xaf2c]        # 0x44d2a0
  442374:	mov    eax,edi
  442376:	jmp    0x44237a
  442378:	xor    eax,eax
  44237a:	add    rsp,0x48
  44237e:	pop    rdi
  44237f:	pop    rsi
  442380:	pop    rbp
  442381:	pop    rbx
  442382:	ret    
  442383:	int3   
  442384:	int3   
  442385:	int3   
  442386:	int3   
  442387:	int3   
  442388:	int3   
  442389:	int3   
  44238a:	int3   
  44238b:	int3   
  44238c:	int3   
  44238d:	int3   
  44238e:	int3   
  44238f:	int3   
  442390:	rex.W push rbp
  442392:	sub    rsp,0x20
  442396:	mov    rbp,rdx
  442399:	lea    rcx,[rbp+0x30]
  44239d:	call   0x4407d4
  4423a2:	add    rsp,0x20
  4423a6:	pop    rbp
  4423a7:	ret    
  4423a8:	rex.W push rbx
  4423aa:	push   rbp
  4423ab:	push   rsi
  4423ac:	push   rdi
  4423ad:	sub    rsp,0x38
  4423b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4423ba:	mov    rsi,rdx
  4423bd:	mov    rbp,rcx
  4423c0:	mov    rax,QWORD PTR [rdx]
  4423c3:	lea    rdx,[rsp+0x68]
  4423c8:	mov    rcx,rsi
  4423cb:	call   QWORD PTR [rax+0x28]
  4423ce:	test   eax,eax
  4423d0:	jne    0x44243a
  4423d2:	xor    ebx,ebx
  4423d4:	cmp    DWORD PTR [rsp+0x68],ebx
  4423d8:	jbe    0x442438
  4423da:	mov    QWORD PTR [rsp+0x78],0x0
  4423e3:	mov    rax,QWORD PTR [rsi]
  4423e6:	lea    r9,[rsp+0x70]
  4423eb:	lea    r8,[rsp+0x78]
  4423f0:	mov    edx,ebx
  4423f2:	mov    rcx,rsi
  4423f5:	call   QWORD PTR [rax+0x30]
  4423f8:	mov    edi,eax
  4423fa:	test   eax,eax
  4423fc:	jne    0x442429
  4423fe:	mov    r9b,0x1
  442401:	mov    r8d,DWORD PTR [rsp+0x70]
  442406:	mov    rdx,QWORD PTR [rsp+0x78]
  44240b:	mov    rcx,rbp
  44240e:	call   0x442118
  442413:	nop
  442414:	mov    rcx,QWORD PTR [rsp+0x78]
  442419:	call   QWORD PTR [rip+0xae81]        # 0x44d2a0
  44241f:	inc    ebx
  442421:	cmp    ebx,DWORD PTR [rsp+0x68]
  442425:	jb     0x4423da
  442427:	jmp    0x442438
  442429:	mov    rcx,QWORD PTR [rsp+0x78]
  44242e:	call   QWORD PTR [rip+0xae6c]        # 0x44d2a0
  442434:	mov    eax,edi
  442436:	jmp    0x44243a
  442438:	xor    eax,eax
  44243a:	add    rsp,0x38
  44243e:	pop    rdi
  44243f:	pop    rsi
  442440:	pop    rbp
  442441:	pop    rbx
  442442:	ret    
  442443:	int3   
  442444:	int3   
  442445:	int3   
  442446:	int3   
  442447:	int3   
  442448:	rex.W push rbp
  44244a:	sub    rsp,0x20
  44244e:	mov    rbp,rdx
  442451:	lea    rcx,[rbp+0x78]
  442455:	call   0x4407d4
  44245a:	add    rsp,0x20
  44245e:	pop    rbp
  44245f:	ret    
  442460:	mov    BYTE PTR [rsp+0x20],r9b
  442465:	mov    QWORD PTR [rsp+0x18],r8
  44246a:	mov    QWORD PTR [rsp+0x10],rdx
  44246f:	mov    QWORD PTR [rsp+0x8],rcx
  442474:	push   rbx
  442475:	push   rbp
  442476:	push   rsi
  442477:	push   rdi
  442478:	push   r12
  44247a:	push   r13
  44247c:	push   r14
  44247e:	push   r15
  442480:	sub    rsp,0x508
  442487:	mov    QWORD PTR [rsp+0x4e8],0xfffffffffffffffe
  442493:	mov    rcx,QWORD PTR [rsp+0x590]
  44249b:	call   0x404740
  4424a0:	mov    BYTE PTR [rsp+0x30],al
  4424a4:	xor    eax,eax
  4424a6:	mov    r14,QWORD PTR [rsp+0x5c0]
  4424ae:	mov    QWORD PTR [r14],rax
  4424b1:	mov    r13,QWORD PTR [rsp+0x5c8]
  4424b9:	mov    QWORD PTR [r13+0x0],rax
  4424bd:	mov    QWORD PTR [rsp+0x210],rax
  4424c5:	mov    DWORD PTR [rsp+0x218],eax
  4424cc:	mov    DWORD PTR [rsp+0x21c],eax
  4424d3:	lea    rcx,[rsp+0x230]
  4424db:	call   0x403150
  4424e0:	nop
  4424e1:	lea    rcx,[rsp+0x240]
  4424e9:	call   0x402b34
  4424ee:	nop
  4424ef:	lea    rcx,[rsp+0x250]
  4424f7:	call   0x403150
  4424fc:	nop
  4424fd:	lea    rcx,[rsp+0x268]
  442505:	call   0x402b34
  44250a:	nop
  44250b:	mov    sil,BYTE PTR [rsp+0x5a0]
  442513:	xor    edx,edx
  442515:	cmp    sil,dl
  442518:	jne    0x442534
  44251a:	lea    r8d,[rdx+0x5]
  44251e:	lea    rdx,[rip+0x1045b]        # 0x452980
  442525:	lea    rcx,[rsp+0x210]
  44252d:	call   0x441fdc
  442532:	xor    edx,edx
  442534:	mov    QWORD PTR [rsp+0x310],rdx
  44253c:	mov    BYTE PTR [rsp+0x318],dl
  442543:	mov    QWORD PTR [rsp+0x320],rdx
  44254b:	mov    BYTE PTR [rsp+0x328],dl
  442552:	mov    BYTE PTR [rsp+0x338],dl
  442559:	mov    DWORD PTR [rsp+0x330],edx
  442560:	mov    DWORD PTR [rsp+0x334],edx
  442567:	mov    QWORD PTR [rsp+0x340],rdx
  44256f:	mov    QWORD PTR [rsp+0x348],rdx
  442577:	mov    BYTE PTR [rsp+0x350],dl
  44257e:	mov    QWORD PTR [rsp+0x358],rdx
  442586:	mov    BYTE PTR [rsp+0x360],dl
  44258d:	mov    BYTE PTR [rsp+0x370],dl
  442594:	mov    DWORD PTR [rsp+0x368],edx
  44259b:	mov    DWORD PTR [rsp+0x36c],edx
  4425a2:	mov    QWORD PTR [rsp+0x378],rdx
  4425aa:	mov    QWORD PTR [rsp+0x380],rdx
  4425b2:	mov    r15,QWORD PTR [rsp+0x570]
  4425ba:	mov    ecx,DWORD PTR [r15+0x8]
  4425be:	mov    rbx,rdx
  4425c1:	mov    QWORD PTR [rsp+0x280],rdx
  4425c9:	cmp    rcx,rdx
  4425cc:	je     0x4425e0
  4425ce:	call   0x402130
  4425d3:	mov    rbx,rax
  4425d6:	mov    QWORD PTR [rsp+0x280],rax
  4425de:	xor    edx,edx
  4425e0:	mov    ecx,edx
  4425e2:	mov    r8d,0x1
  4425e8:	cmp    DWORD PTR [r15+0x8],edx
  4425ec:	jbe    0x4425fc
  4425ee:	mov    eax,ecx
  4425f0:	mov    BYTE PTR [rax+rbx*1],dl
  4425f3:	add    ecx,r8d
  4425f6:	cmp    ecx,DWORD PTR [r15+0x8]
  4425fa:	jb     0x4425ee
  4425fc:	mov    rdi,rdx
  4425ff:	mov    QWORD PTR [rsp+0x58],rdx
  442604:	mov    QWORD PTR [rsp+0x60],rdx
  442609:	mov    rbp,rdx
  44260c:	mov    QWORD PTR [rsp+0x48],rdx
  442611:	mov    r12d,edx
  442614:	mov    DWORD PTR [rsp+0x34],edx
  442618:	mov    eax,edx
  44261a:	mov    DWORD PTR [rsp+0x38],eax
  44261e:	mov    QWORD PTR [rsp+0x40],rdx
  442623:	cmp    DWORD PTR [r15+0x8],edx
  442627:	jbe    0x443b72
  44262d:	mov    r12d,0x80004004
  442633:	mov    rcx,r8
  442636:	cmp    BYTE PTR [rax+rbx*1],dl
  442639:	jne    0x443398
  44263f:	mov    rax,QWORD PTR [r15]
  442642:	mov    rsi,QWORD PTR [rax+rdi*8]
  442646:	mov    QWORD PTR [rsp+0x68],rdx
  44264b:	mov    dil,BYTE PTR [rsp+0x568]
  442653:	cmp    dil,dl
  442656:	jne    0x442810
  44265c:	lea    rcx,[rsp+0x4a0]
  442664:	call   0x407fc0
  442669:	lea    rcx,[rsp+0x4c8]
  442671:	call   0x403150
  442676:	nop
  442677:	mov    rdx,QWORD PTR [rsi]
  44267a:	lea    rcx,[rsp+0x4a0]
  442682:	call   0x408134
  442687:	test   al,al
  442689:	jne    0x44275d
  44268f:	call   QWORD PTR [rip+0xab0b]        # 0x44d1a0
  442695:	mov    edi,eax
  442697:	mov    eax,0x2
  44269c:	test   edi,edi
  44269e:	cmove  edi,eax
  4426a1:	mov    ecx,DWORD PTR [rsp+0x34]
  4426a5:	movzx  eax,cx
  4426a8:	or     eax,0x80070000
  4426ad:	test   ecx,ecx
  4426af:	cmovle eax,ecx
  4426b2:	mov    DWORD PTR [rsp+0x34],eax
  4426b6:	lea    rcx,[rip+0x2631b]        # 0x4689d8
  4426bd:	call   0x402438
  4426c2:	mov    edx,edi
  4426c4:	lea    rcx,[rsp+0x4d8]
  4426cc:	call   0x4068d0
  4426d1:	nop
  4426d2:	mov    rbp,QWORD PTR [rsi]
  4426d5:	mov    rdi,QWORD PTR [rax]
  4426d8:	mov    rsi,QWORD PTR [rip+0x26869]        # 0x468f48
  4426df:	mov    rcx,rsi
  4426e2:	call   0x402454
  4426e7:	mov    rdx,QWORD PTR [rsi]
  4426ea:	mov    rcx,QWORD PTR [rip+0x26107]        # 0x4687f8
  4426f1:	call   QWORD PTR [rip+0xac79]        # 0x44d370
  4426f7:	mov    rdx,rdi
  4426fa:	mov    rcx,rsi
  4426fd:	call   0x402474
  442702:	mov    rdi,rax
  442705:	mov    rcx,rax
  442708:	call   0x402454
  44270d:	mov    rdx,rbp
  442710:	mov    rcx,rdi
  442713:	call   0x402474
  442718:	mov    rdi,rax
  44271b:	mov    rcx,rax
  44271e:	call   0x402454
  442723:	mov    rcx,rdi
  442726:	call   0x402454
  44272b:	nop
  44272c:	mov    rcx,QWORD PTR [rsp+0x4d8]
  442734:	call   0x40215c
  442739:	inc    QWORD PTR [r14]
  44273c:	mov    rcx,QWORD PTR [rsp+0x4c8]
  442744:	call   0x40215c
  442749:	mov    rbp,QWORD PTR [rsp+0x48]
  44274e:	mov    rdi,QWORD PTR [rsp+0x40]
  442753:	xor    edx,edx
  442755:	lea    ecx,[rdx+0x1]
  442758:	jmp    0x443398
  44275d:	mov    eax,DWORD PTR [rsp+0x4c0]
  442764:	shr    eax,0x4
  442767:	test   al,0x1
  442769:	je     0x4427e6
  44276b:	lea    rcx,[rip+0x26266]        # 0x4689d8
  442772:	call   0x402438
  442777:	mov    rdi,QWORD PTR [rsi]
  44277a:	mov    rsi,QWORD PTR [rip+0x267c7]        # 0x468f48
  442781:	mov    rcx,rsi
  442784:	call   0x402454
  442789:	mov    rdx,QWORD PTR [rsi]
  44278c:	mov    rcx,QWORD PTR [rip+0x26065]        # 0x4687f8
  442793:	call   QWORD PTR [rip+0xabd7]        # 0x44d370
  442799:	mov    rdx,rdi
  44279c:	mov    rcx,rsi
  44279f:	call   0x402474
  4427a4:	mov    rdi,rax
  4427a7:	mov    rdx,QWORD PTR [rax]
  4427aa:	lea    rcx,[rip+0x10a27]        # 0x4531d8
  4427b1:	call   QWORD PTR [rip+0xabb9]        # 0x44d370
  4427b7:	mov    rcx,rdi
  4427ba:	call   0x402454
  4427bf:	mov    rcx,rdi
  4427c2:	call   0x402454
  4427c7:	inc    QWORD PTR [r14]
  4427ca:	mov    rcx,QWORD PTR [rsp+0x4c8]
  4427d2:	call   0x40215c
  4427d7:	mov    rdi,QWORD PTR [rsp+0x40]
  4427dc:	xor    edx,edx
  4427de:	lea    ecx,[rdx+0x1]
  4427e1:	jmp    0x443398
  4427e6:	mov    rdi,QWORD PTR [rsp+0x4a0]
  4427ee:	mov    QWORD PTR [rsp+0x68],rdi
  4427f3:	add    rbp,rdi
  4427f6:	mov    QWORD PTR [rsp+0x48],rbp
  4427fb:	mov    rcx,QWORD PTR [rsp+0x4c8]
  442803:	call   0x40215c
  442808:	mov    dil,BYTE PTR [rsp+0x568]
  442810:	lea    rcx,[rsp+0x140]
  442818:	call   0x422e04
  44281d:	nop
  44281e:	lea    rax,[rip+0x11be3]        # 0x454408
  442825:	mov    QWORD PTR [rsp+0x390],rax
  44282d:	mov    edx,0xc8
  442832:	lea    rcx,[rsp+0x398]
  44283a:	call   0x440e04
  44283f:	nop
  442840:	xor    ebp,ebp
  442842:	mov    BYTE PTR [rsp+0x480],bpl
  44284a:	mov    BYTE PTR [rsp+0x481],bpl
  442852:	mov    BYTE PTR [rsp+0x482],bpl
  44285a:	mov    BYTE PTR [rsp+0x483],bpl
  442862:	lea    rcx,[rsp+0x488]
  44286a:	call   0x403150
  44286f:	nop
  442870:	lea    rax,[rip+0x26161]        # 0x4689d8
  442877:	mov    QWORD PTR [rsp+0x470],rax
  44287f:	mov    rax,QWORD PTR [rip+0x266c2]        # 0x468f48
  442886:	mov    QWORD PTR [rsp+0x478],rax
  44288e:	mov    QWORD PTR [rsp+0x460],rbp
  442896:	mov    rax,QWORD PTR [rsp+0x5a8]
  44289e:	mov    al,BYTE PTR [rax]
  4428a0:	mov    BYTE PTR [rsp+0x483],al
  4428a7:	mov    rdx,QWORD PTR [rsp+0x5b0]
  4428af:	lea    rcx,[rsp+0x488]
  4428b7:	call   0x4032f8
  4428bc:	lea    rcx,[rsp+0x290]
  4428c4:	call   0x4229a4
  4428c9:	nop
  4428ca:	mov    rax,QWORD PTR [rsp+0x5b8]
  4428d2:	mov    QWORD PTR [rsp+0x2e8],rax
  4428da:	mov    rax,QWORD PTR [rsp+0x550]
  4428e2:	mov    QWORD PTR [rsp+0x290],rax
  4428ea:	mov    rax,QWORD PTR [rsp+0x558]
  4428f2:	mov    QWORD PTR [rsp+0x2b8],rax
  4428fa:	mov    rax,QWORD PTR [rsp+0x560]
  442902:	mov    QWORD PTR [rsp+0x2c0],rax
  44290a:	mov    BYTE PTR [rsp+0x2f0],dil
  442912:	mov    QWORD PTR [rsp+0x2c8],rbp
  44291a:	mov    rdx,rsi
  44291d:	lea    rcx,[rsp+0x2f8]
  442925:	call   0x4032f8
  44292a:	cmp    BYTE PTR [rsp+0x598],bpl
  442932:	je     0x442980
  442934:	mov    rdi,QWORD PTR [rsi]
  442937:	lea    rbp,[rip+0x2609a]        # 0x4689d8
  44293e:	mov    rcx,rbp
  442941:	call   0x402454
  442946:	mov    rdx,QWORD PTR [rip+0x2608b]        # 0x4689d8
  44294d:	mov    rcx,QWORD PTR [rip+0x25e7c]        # 0x4687d0
  442954:	call   QWORD PTR [rip+0xaa16]        # 0x44d370
  44295a:	mov    rdx,rdi
  44295d:	mov    rcx,rbp
  442960:	call   0x402474
  442965:	mov    rdi,rax
  442968:	mov    rcx,rax
  44296b:	call   0x402454
  442970:	mov    rcx,rdi
  442973:	call   0x402454
  442978:	mov    dil,BYTE PTR [rsp+0x568]
  442980:	lea    r8,[rsp+0x390]
  442988:	lea    rdx,[rsp+0x290]
  442990:	lea    rcx,[rsp+0x140]
  442998:	call   0x433188
  44299d:	mov    ebp,eax
  44299f:	xor    r8d,r8d
  4429a2:	cmp    eax,r8d
  4429a5:	je     0x442ae6
  4429ab:	cmp    eax,r12d
  4429ae:	je     0x4433ce
  4429b4:	lea    rcx,[rip+0x2601d]        # 0x4689d8
  4429bb:	call   0x402438
  4429c0:	mov    rdi,QWORD PTR [rsi]
  4429c3:	mov    rsi,QWORD PTR [rip+0x2657e]        # 0x468f48
  4429ca:	mov    rcx,rsi
  4429cd:	call   0x402454
  4429d2:	mov    rdx,QWORD PTR [rsi]
  4429d5:	mov    rcx,QWORD PTR [rip+0x25e1c]        # 0x4687f8
  4429dc:	call   QWORD PTR [rip+0xa98e]        # 0x44d370
  4429e2:	mov    rdx,rdi
  4429e5:	mov    rcx,rsi
  4429e8:	call   0x402474
  4429ed:	mov    rdx,QWORD PTR [rax]
  4429f0:	lea    rcx,[rip+0xc1b1]        # 0x44eba8
  4429f7:	call   QWORD PTR [rip+0xa973]        # 0x44d370
  4429fd:	mov    edi,0x1
  442a02:	cmp    ebp,edi
  442a04:	jne    0x442a24
  442a06:	lea    r8,[rsp+0x140]
  442a0e:	mov    rdx,QWORD PTR [rsp+0x550]
  442a16:	mov    rcx,QWORD PTR [rip+0x2652b]        # 0x468f48
  442a1d:	call   0x441e00
  442a22:	jmp    0x442a8d
  442a24:	mov    DWORD PTR [rsp+0x34],ebp
  442a28:	mov    rdx,QWORD PTR [rip+0x26519]        # 0x468f48
  442a2f:	mov    rdx,QWORD PTR [rdx]
  442a32:	lea    rcx,[rip+0x1078f]        # 0x4531c8
  442a39:	call   QWORD PTR [rip+0xa931]        # 0x44d370
  442a3f:	cmp    ebp,0x8007000e
  442a45:	jne    0x442a60
  442a47:	mov    rdx,QWORD PTR [rip+0x264fa]        # 0x468f48
  442a4e:	mov    rdx,QWORD PTR [rdx]
  442a51:	lea    rcx,[rip+0xfab8]        # 0x452510
  442a58:	call   QWORD PTR [rip+0xa912]        # 0x44d370
  442a5e:	jmp    0x442a8d
  442a60:	mov    edx,ebp
  442a62:	lea    rcx,[rsp+0x4f0]
  442a6a:	call   0x4068d0
  442a6f:	nop
  442a70:	mov    rdx,QWORD PTR [rax]
  442a73:	mov    rcx,QWORD PTR [rip+0x264ce]        # 0x468f48
  442a7a:	call   0x402474
  442a7f:	nop
  442a80:	mov    rcx,QWORD PTR [rsp+0x4f0]
  442a88:	call   0x40215c
  442a8d:	mov    rcx,QWORD PTR [rip+0x264b4]        # 0x468f48
  442a94:	call   0x402454
  442a99:	add    QWORD PTR [r14],rdi
  442a9c:	mov    rcx,QWORD PTR [rsp+0x2f8]
  442aa4:	call   0x40215c
  442aa9:	nop
  442aaa:	mov    rcx,QWORD PTR [rsp+0x488]
  442ab2:	call   0x40215c
  442ab7:	lea    rcx,[rsp+0x398]
  442abf:	call   0x448d90
  442ac4:	nop
  442ac5:	lea    rcx,[rsp+0x140]
  442acd:	call   0x422f10
  442ad2:	mov    rbp,QWORD PTR [rsp+0x48]
  442ad7:	mov    rdi,QWORD PTR [rsp+0x40]
  442adc:	xor    edx,edx
  442ade:	lea    ecx,[rdx+0x1]
  442ae1:	jmp    0x443398
  442ae6:	cmp    DWORD PTR [rsp+0x18c],r8d
  442aee:	jl     0x442afa
  442af0:	mov    esi,0x1
  442af5:	add    QWORD PTR [r14],rsi
  442af8:	jmp    0x442aff
  442afa:	mov    esi,0x1
  442aff:	mov    eax,DWORD PTR [rsp+0x148]
  442b06:	cmp    eax,r8d
  442b09:	jbe    0x442b64
  442b0b:	mov    rcx,QWORD PTR [rsp+0x140]
  442b13:	mov    rdx,rax
  442b16:	mov    rax,QWORD PTR [rcx]
  442b19:	cmp    DWORD PTR [rax+0x50],r8d
  442b1d:	je     0x442b23
  442b1f:	add    QWORD PTR [r13+0x0],rsi
  442b23:	cmp    DWORD PTR [rax+0x28],r8d
  442b27:	jne    0x442b35
  442b29:	cmp    BYTE PTR [rax+0x22],r8b
  442b2d:	jne    0x442b39
  442b2f:	cmp    BYTE PTR [rax+0x20],r8b
  442b33:	je     0x442b39
  442b35:	add    QWORD PTR [r13+0x0],rsi
  442b39:	cmp    DWORD PTR [rax+0x2c],r8d
  442b3d:	jl     0x442b43
  442b3f:	add    QWORD PTR [r13+0x0],rsi
  442b43:	cmp    DWORD PTR [rax+0x24],r8d
  442b47:	jne    0x442b4f
  442b49:	cmp    BYTE PTR [rax+0x21],r8b
  442b4d:	je     0x442b52
  442b4f:	add    QWORD PTR [r14],rsi
  442b52:	cmp    DWORD PTR [rax+0x40],r8d
  442b56:	je     0x442b5b
  442b58:	add    QWORD PTR [r14],rsi
  442b5b:	add    rcx,0x8
  442b5f:	sub    rdx,rsi
  442b62:	jne    0x442b16
  442b64:	add    QWORD PTR [rsp+0x60],rsi
  442b69:	mov    rdx,QWORD PTR [rsp+0x58]
  442b6e:	add    rdx,rsi
  442b71:	mov    QWORD PTR [rsp+0x58],rdx
  442b76:	cmp    dil,r8b
  442b79:	jne    0x442be5
  442b7b:	mov    ecx,DWORD PTR [rsp+0x158]
  442b82:	add    rdx,rcx
  442b85:	mov    QWORD PTR [rsp+0x58],rdx
  442b8a:	mov    rax,QWORD PTR [rsp+0x48]
  442b8f:	add    rax,QWORD PTR [rsp+0x160]
  442b97:	mov    QWORD PTR [rsp+0x48],rax
  442b9c:	mov    esi,r8d
  442b9f:	cmp    ecx,r8d
  442ba2:	jbe    0x442be5
  442ba4:	mov    rdi,r8
  442ba7:	mov    ebp,DWORD PTR [rsp+0x38]
  442bab:	mov    rax,QWORD PTR [rsp+0x150]
  442bb3:	mov    rdx,QWORD PTR [rdi+rax*1]
  442bb7:	mov    rcx,QWORD PTR [rsp+0x578]
  442bbf:	call   0x422d34
  442bc4:	xor    r8d,r8d
  442bc7:	cmp    eax,r8d
  442bca:	jl     0x442bd6
  442bcc:	cmp    eax,ebp
  442bce:	jbe    0x442bd6
  442bd0:	mov    eax,eax
  442bd2:	mov    BYTE PTR [rax+rbx*1],0x1
  442bd6:	inc    esi
  442bd8:	add    rdi,0x8
  442bdc:	cmp    esi,DWORD PTR [rsp+0x158]
  442be3:	jb     0x442bab
  442be5:	cmp    BYTE PTR [rsp+0x598],r8b
  442bed:	je     0x442c7c
  442bf3:	lea    r8,[rsp+0x140]
  442bfb:	mov    rdx,QWORD PTR [rsp+0x550]
  442c03:	lea    rsi,[rip+0x25dce]        # 0x4689d8
  442c0a:	mov    rcx,rsi
  442c0d:	call   0x441a08
  442c12:	mov    edi,eax
  442c14:	test   eax,eax
  442c16:	jne    0x443413
  442c1c:	mov    rcx,rsi
  442c1f:	call   0x402454
  442c24:	cmp    BYTE PTR [rsp+0x5a0],dil
  442c2c:	je     0x442c47
  442c2e:	mov    rdx,QWORD PTR [rip+0x25da3]        # 0x4689d8
  442c35:	lea    rcx,[rip+0x1057c]        # 0x4531b8
  442c3c:	call   QWORD PTR [rip+0xa72e]        # 0x44d370
  442c42:	xor    r8d,r8d
  442c45:	jmp    0x442c7c
  442c47:	lea    rcx,[rsp+0x210]
  442c4f:	call   0x4410ac
  442c54:	mov    rcx,rsi
  442c57:	call   0x402454
  442c5c:	mov    rdx,QWORD PTR [rip+0x25d75]        # 0x4689d8
  442c63:	mov    rcx,QWORD PTR [rsp+0x268]
  442c6b:	call   QWORD PTR [rip+0xa6ff]        # 0x44d370
  442c71:	mov    rcx,rsi
  442c74:	call   0x402454
  442c79:	xor    r8d,r8d
  442c7c:	mov    ecx,DWORD PTR [rsp+0x148]
  442c83:	dec    ecx
  442c85:	mov    rax,QWORD PTR [rsp+0x140]
  442c8d:	mov    rbp,QWORD PTR [rax+rcx*8]
  442c91:	mov    QWORD PTR [rsp+0x220],rbp
  442c99:	mov    al,BYTE PTR [rsp+0x5a0]
  442ca0:	mov    BYTE PTR [rsp+0x228],al
  442ca7:	mov    rsi,QWORD PTR [rbp+0x0]
  442cab:	cmp    al,r8b
  442cae:	je     0x442cff
  442cb0:	lea    rcx,[rsp+0x210]
  442cb8:	call   0x441040
  442cbd:	mov    rdx,rsi
  442cc0:	lea    rcx,[rsp+0x210]
  442cc8:	call   0x4422d0
  442ccd:	mov    edi,eax
  442ccf:	xor    r8d,r8d
  442cd2:	cmp    eax,r8d
  442cd5:	jne    0x44345b
  442cdb:	mov    rdx,QWORD PTR [rbp+0x10]
  442cdf:	cmp    rdx,r8
  442ce2:	je     0x442cff
  442ce4:	lea    rcx,[rsp+0x210]
  442cec:	call   0x4423a8
  442cf1:	mov    edi,eax
  442cf3:	xor    r8d,r8d
  442cf6:	cmp    eax,r8d
  442cf9:	jne    0x4434a3
  442cff:	mov    QWORD PTR [rsp+0xc0],r8
  442d07:	mov    BYTE PTR [rsp+0xc8],r8b
  442d0f:	mov    QWORD PTR [rsp+0xd0],r8
  442d17:	mov    BYTE PTR [rsp+0xd8],r8b
  442d1f:	mov    BYTE PTR [rsp+0xe8],r8b
  442d27:	mov    DWORD PTR [rsp+0xe0],r8d
  442d2f:	mov    DWORD PTR [rsp+0xe4],r8d
  442d37:	mov    QWORD PTR [rsp+0xf0],r8
  442d3f:	mov    QWORD PTR [rsp+0xf8],r8
  442d47:	mov    BYTE PTR [rsp+0x100],r8b
  442d4f:	mov    QWORD PTR [rsp+0x108],r8
  442d57:	mov    BYTE PTR [rsp+0x110],r8b
  442d5f:	mov    BYTE PTR [rsp+0x120],r8b
  442d67:	mov    DWORD PTR [rsp+0x118],r8d
  442d6f:	mov    DWORD PTR [rsp+0x11c],r8d
  442d77:	mov    QWORD PTR [rsp+0x128],r8
  442d7f:	mov    QWORD PTR [rsp+0x130],r8
  442d87:	mov    rax,QWORD PTR [rsi]
  442d8a:	lea    rdx,[rsp+0x50]
  442d8f:	mov    rcx,rsi
  442d92:	call   QWORD PTR [rax+0x28]
  442d95:	mov    edi,eax
  442d97:	test   eax,eax
  442d99:	jne    0x4434eb
  442d9f:	lea    rcx,[rsp+0x1c0]
  442da7:	call   0x403150
  442dac:	nop
  442dad:	xor    eax,eax
  442daf:	mov    QWORD PTR [rsp+0x1d0],rax
  442db7:	mov    DWORD PTR [rsp+0x1d8],eax
  442dbe:	mov    DWORD PTR [rsp+0x1dc],eax
  442dc5:	lea    rcx,[rsp+0x1e0]
  442dcd:	call   0x403150
  442dd2:	nop
  442dd3:	lea    rcx,[rsp+0x1f0]
  442ddb:	call   0x403150
  442de0:	xor    r9d,r9d
  442de3:	mov    BYTE PTR [rsp+0x201],r9b
  442deb:	mov    BYTE PTR [rsp+0x208],r9b
  442df3:	mov    DWORD PTR [rsp+0x20c],0xffffffff
  442dfe:	mov    QWORD PTR [rsp+0x20],r9
  442e03:	mov    DWORD PTR [rsp+0x28],r9d
  442e08:	mov    DWORD PTR [rsp+0x2c],r9d
  442e0d:	mov    edi,r9d
  442e10:	cmp    DWORD PTR [rsp+0x50],r9d
  442e15:	jbe    0x443167
  442e1b:	cmp    DWORD PTR [rip+0x260e6],r9d        # 0x468f08
  442e22:	jne    0x443533
  442e28:	lea    r8,[rsp+0x230]
  442e30:	mov    edx,edi
  442e32:	mov    rcx,rbp
  442e35:	call   0x42c454
  442e3a:	mov    r13d,eax
  442e3d:	xor    r9d,r9d
  442e40:	cmp    BYTE PTR [rsp+0x568],r9b
  442e48:	je     0x442e55
  442e4a:	cmp    eax,0x80070057
  442e4f:	je     0x443157
  442e55:	cmp    eax,r9d
  442e58:	jne    0x4435d0
  442e5e:	cmp    BYTE PTR [rbp+0x10d],r9b
  442e65:	je     0x442e96
  442e67:	lea    r8,[rsp+0x570]
  442e6f:	mov    edx,edi
  442e71:	mov    rcx,rsi
  442e74:	call   0x429814
  442e79:	mov    r13d,eax
  442e7c:	xor    r9d,r9d
  442e7f:	cmp    eax,r9d
  442e82:	jne    0x443670
  442e88:	cmp    BYTE PTR [rsp+0x570],r9b
  442e90:	jne    0x44313a
  442e96:	mov    BYTE PTR [rsp+0x5c0],r9b
  442e9e:	cmp    BYTE PTR [rbp+0x10c],r9b
  442ea5:	je     0x442ee0
  442ea7:	lea    r8,[rsp+0x5c0]
  442eaf:	mov    edx,edi
  442eb1:	mov    rcx,rsi
  442eb4:	call   0x429824
  442eb9:	mov    r13d,eax
  442ebc:	xor    r9d,r9d
  442ebf:	cmp    eax,r9d
  442ec2:	jne    0x443710
  442ec8:	cmp    BYTE PTR [rsp+0x5c0],r9b
  442ed0:	je     0x442ee0
  442ed2:	cmp    BYTE PTR [rsp+0x580],r9b
  442eda:	je     0x44313a
  442ee0:	lea    r8,[rsp+0x260]
  442ee8:	mov    edx,edi
  442eea:	mov    rcx,rsi
  442eed:	call   0x429804
  442ef2:	mov    r13d,eax
  442ef5:	xor    r9d,r9d
  442ef8:	cmp    eax,r9d
  442efb:	jne    0x4437b0
  442f01:	cmp    BYTE PTR [rsp+0x30],r9b
  442f06:	jne    0x442fa2
  442f0c:	cmp    BYTE PTR [rsp+0x5c0],r9b
  442f14:	je     0x442f56
  442f16:	lea    r8,[rsp+0x1c0]
  442f1e:	mov    edx,edi
  442f20:	mov    rcx,rbp
  442f23:	call   0x42d1f4
  442f28:	mov    r13d,eax
  442f2b:	test   eax,eax
  442f2d:	jne    0x443850
  442f33:	lea    rdx,[rsp+0x1c0]
  442f3b:	mov    rcx,QWORD PTR [rsp+0x590]
  442f43:	call   0x414d24
  442f48:	xor    r9d,r9d
  442f4b:	cmp    al,r9b
  442f4e:	je     0x44313a
  442f54:	jmp    0x442fa2
  442f56:	lea    rdx,[rsp+0x20]
  442f5b:	lea    rcx,[rsp+0x230]
  442f63:	call   0x405010
  442f68:	cmp    BYTE PTR [rsp+0x260],0x0
  442f70:	sete   r8b
  442f74:	lea    r9,[rsp+0x31]
  442f79:	lea    rdx,[rsp+0x20]
  442f7e:	mov    rcx,QWORD PTR [rsp+0x590]
  442f86:	call   0x4051bc
  442f8b:	xor    r9d,r9d
  442f8e:	cmp    al,r9b
  442f91:	je     0x44313a
  442f97:	cmp    BYTE PTR [rsp+0x31],r9b
  442f9c:	je     0x44313a
  442fa2:	mov    QWORD PTR [rsp+0x88],r9
  442faa:	mov    BYTE PTR [rsp+0x90],r9b
  442fb2:	mov    QWORD PTR [rsp+0x98],r9
  442fba:	mov    BYTE PTR [rsp+0xa0],r9b
  442fc2:	mov    BYTE PTR [rsp+0xb0],r9b
  442fca:	mov    DWORD PTR [rsp+0xa8],r9d
  442fd2:	mov    DWORD PTR [rsp+0xac],r9d
  442fda:	mov    QWORD PTR [rsp+0xb8],r9
  442fe2:	lea    r9,[rsp+0x88]
  442fea:	mov    r8d,0x7
  442ff0:	mov    edx,edi
  442ff2:	mov    rcx,rsi
  442ff5:	call   0x440944
  442ffa:	mov    r13d,eax
  442ffd:	test   eax,eax
  442fff:	jne    0x4438eb
  443005:	lea    r9,[rsp+0x98]
  44300d:	lea    r8d,[rax+0x8]
  443011:	mov    edx,edi
  443013:	mov    rcx,rsi
  443016:	call   0x440944
  44301b:	mov    r13d,eax
  44301e:	xor    ecx,ecx
  443020:	cmp    eax,ecx
  443022:	jne    0x443986
  443028:	mov    DWORD PTR [rsp+0xa8],ecx
  44302f:	mov    DWORD PTR [rsp+0xac],ecx
  443036:	mov    BYTE PTR [rsp+0xb0],cl
  44303d:	mov    WORD PTR [rsp+0x70],cx
  443042:	mov    WORD PTR [rsp+0x72],cx
  443047:	mov    QWORD PTR [rsp+0x78],rcx
  44304c:	mov    rax,QWORD PTR [rsi]
  44304f:	lea    r9,[rsp+0x70]
  443054:	lea    r8d,[rcx+0xc]
  443058:	mov    edx,edi
  44305a:	mov    rcx,rsi
  44305d:	call   QWORD PTR [rax+0x30]
  443060:	mov    r13d,eax
  443063:	test   eax,eax
  443065:	je     0x443073
  443067:	lea    rcx,[rsp+0x70]
  44306c:	call   0x40b028
  443071:	jmp    0x4430ab
  443073:	movzx  eax,WORD PTR [rsp+0x70]
  443078:	cmp    ax,0x40
  44307c:	jne    0x443095
  44307e:	mov    rax,QWORD PTR [rsp+0x78]
  443083:	mov    QWORD PTR [rsp+0xa8],rax
  44308b:	mov    BYTE PTR [rsp+0xb0],0x1
  443093:	jmp    0x44309e
  443095:	test   ax,ax
  443098:	jne    0x4433b9
  44309e:	lea    rcx,[rsp+0x70]
  4430a3:	call   0x40b028
  4430a8:	xor    r13d,r13d
  4430ab:	test   r13d,r13d
  4430ae:	jne    0x443a23
  4430b4:	cmp    BYTE PTR [rsp+0x260],r13b
  4430bc:	je     0x4430c8
  4430be:	inc    QWORD PTR [rsp+0x130]
  4430c6:	jmp    0x4430d4
  4430c8:	mov    QWORD PTR [rsp+0xb8],0x1
  4430d4:	lea    rcx,[rsp+0xf8]
  4430dc:	lea    rax,[rsp+0xc0]
  4430e4:	cmp    BYTE PTR [rsp+0x5c0],0x0
  4430ec:	cmove  rcx,rax
  4430f0:	lea    rdx,[rsp+0x88]
  4430f8:	call   0x440878
  4430fd:	xor    r9d,r9d
  443100:	cmp    BYTE PTR [rsp+0x5c0],r9b
  443108:	je     0x443114
  44310a:	cmp    BYTE PTR [rsp+0x588],r9b
  443112:	je     0x44313a
  443114:	lea    r8,[rsp+0x88]
  44311c:	mov    edx,edi
  44311e:	lea    rcx,[rsp+0x210]
  443126:	call   0x4410fc
  44312b:	mov    r13d,eax
  44312e:	xor    r9d,r9d
  443131:	cmp    eax,r9d
  443134:	jne    0x443abe
  44313a:	mov    r10d,0x1
  443140:	add    edi,r10d
  443143:	cmp    edi,DWORD PTR [rsp+0x50]
  443147:	jb     0x442e1b
  44314d:	mov    r13,QWORD PTR [rsp+0x5c8]
  443155:	jmp    0x44316d
  443157:	mov    r13,QWORD PTR [rsp+0x5c8]
  44315f:	mov    r10d,0x1
  443165:	jmp    0x44316d
  443167:	mov    r10d,0x1
  44316d:	mov    rcx,QWORD PTR [rsp+0x128]
  443175:	mov    rdx,QWORD PTR [rsp+0xf0]
  44317d:	lea    rax,[rcx+rdx*1]
  443181:	cmp    BYTE PTR [rsp+0x568],r9b
  443189:	jne    0x4431d6
  44318b:	cmp    BYTE PTR [rsp+0xd8],r9b
  443193:	jne    0x4431d6
  443195:	cmp    BYTE PTR [rsp+0x110],r9b
  44319d:	jne    0x4431d6
  44319f:	cmp    DWORD PTR [rsp+0x158],r9d
  4431a7:	je     0x4431b8
  4431a9:	mov    r8,QWORD PTR [rsp+0x68]
  4431ae:	add    r8,QWORD PTR [rsp+0x160]
  4431b6:	jmp    0x4431bd
  4431b8:	mov    r8,QWORD PTR [rsp+0x68]
  4431bd:	neg    rax
  4431c0:	sbb    rax,rax
  4431c3:	and    rax,r8
  4431c6:	add    QWORD PTR [rsp+0xd0],rax
  4431ce:	mov    BYTE PTR [rsp+0xd8],r10b
  4431d6:	movzx  eax,BYTE PTR [rsp+0xc8]
  4431de:	cmp    rdx,r9
  4431e1:	cmove  eax,r10d
  4431e5:	mov    BYTE PTR [rsp+0xc8],al
  4431ec:	movzx  eax,BYTE PTR [rsp+0x100]
  4431f4:	cmp    rcx,r9
  4431f7:	cmove  eax,r10d
  4431fb:	mov    BYTE PTR [rsp+0x100],al
  443202:	cmp    BYTE PTR [rsp+0x598],r9b
  44320a:	je     0x4432ba
  443210:	cmp    BYTE PTR [rsp+0x5a0],r9b
  443218:	jne    0x443258
  44321a:	mov    rdx,QWORD PTR [rip+0x257b7]        # 0x4689d8
  443221:	mov    rcx,QWORD PTR [rsp+0x268]
  443229:	call   QWORD PTR [rip+0xa141]        # 0x44d370
  44322f:	lea    rdi,[rip+0x257a2]        # 0x4689d8
  443236:	mov    rcx,rdi
  443239:	call   0x402454
  44323e:	lea    rdx,[rsp+0xc0]
  443246:	lea    rcx,[rsp+0x210]
  44324e:	call   0x44198c
  443253:	xor    r9d,r9d
  443256:	jmp    0x44325f
  443258:	lea    rdi,[rip+0x25779]        # 0x4689d8
  44325f:	cmp    DWORD PTR [rsp+0x18c],r9d
  443267:	jl     0x4432ba
  443269:	mov    rdx,QWORD PTR [rip+0x25768]        # 0x4689d8
  443270:	lea    rcx,[rip+0xff41]        # 0x4531b8
  443277:	call   QWORD PTR [rip+0xa0f3]        # 0x44d370
  44327d:	mov    r8,QWORD PTR [rsp+0x170]
  443285:	lea    rdx,[rip+0xfc68]        # 0x452ef4
  44328c:	mov    rcx,rdi
  44328f:	call   0x440a74
  443294:	mov    edx,DWORD PTR [rsp+0x18c]
  44329b:	mov    rax,QWORD PTR [rsp+0x550]
  4432a3:	mov    rax,QWORD PTR [rax+0x40]
  4432a7:	mov    rdx,QWORD PTR [rax+rdx*8]
  4432ab:	add    rdx,0x18
  4432af:	xor    r8d,r8d
  4432b2:	mov    rcx,rdi
  4432b5:	call   0x440cdc
  4432ba:	lea    rdx,[rsp+0xc0]
  4432c2:	lea    rcx,[rsp+0x310]
  4432ca:	call   0x440878
  4432cf:	lea    rdx,[rsp+0xf8]
  4432d7:	lea    rcx,[rsp+0x348]
  4432df:	call   0x440878
  4432e4:	mov    r11,QWORD PTR [rsp+0x130]
  4432ec:	add    QWORD PTR [rsp+0x380],r11
  4432f4:	lea    rcx,[rip+0x256dd]        # 0x4689d8
  4432fb:	call   0x402438
  443300:	nop
  443301:	movsxd rdi,DWORD PTR [rsp+0x28]
  443306:	mov    rbp,rdi
  443309:	test   edi,edi
  44330b:	je     0x44333a
  44330d:	shl    rbp,0x3
  443311:	add    edi,0xffffffff
  443314:	sub    rbp,0x8
  443318:	mov    rax,QWORD PTR [rsp+0x20]
  44331d:	mov    rsi,QWORD PTR [rax+rbp*1]
  443321:	test   rsi,rsi
  443324:	je     0x443336
  443326:	mov    rcx,QWORD PTR [rsi]
  443329:	call   0x40215c
  44332e:	mov    rcx,rsi
  443331:	call   0x40215c
  443336:	test   edi,edi
  443338:	jne    0x443311
  44333a:	mov    rcx,QWORD PTR [rsp+0x20]
  44333f:	call   0x40215c
  443344:	nop
  443345:	lea    rcx,[rsp+0x1c0]
  44334d:	call   0x413404
  443352:	nop
  443353:	mov    rcx,QWORD PTR [rsp+0x2f8]
  44335b:	call   0x40215c
  443360:	nop
  443361:	mov    rcx,QWORD PTR [rsp+0x488]
  443369:	call   0x40215c
  44336e:	lea    rcx,[rsp+0x398]
  443376:	call   0x448d90
  44337b:	nop
  44337c:	lea    rcx,[rsp+0x140]
  443384:	call   0x422f10
  443389:	mov    rbp,QWORD PTR [rsp+0x48]
  44338e:	mov    rdi,QWORD PTR [rsp+0x40]
  443393:	xor    edx,edx
  443395:	lea    ecx,[rdx+0x1]
  443398:	mov    eax,DWORD PTR [rsp+0x38]
  44339c:	add    eax,ecx
  44339e:	mov    DWORD PTR [rsp+0x38],eax
  4433a2:	add    rdi,rcx
  4433a5:	mov    QWORD PTR [rsp+0x40],rdi
  4433aa:	cmp    eax,DWORD PTR [r15+0x8]
  4433ae:	jae    0x443b5e
  4433b4:	jmp    0x442636
  4433b9:	lea    rcx,[rsp+0x70]
  4433be:	call   0x40b028
  4433c3:	mov    r13d,0x80004005
  4433c9:	jmp    0x443a23
  4433ce:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4433d6:	call   0x40215c
  4433db:	nop
  4433dc:	mov    rcx,QWORD PTR [rsp+0x488]
  4433e4:	call   0x40215c
  4433e9:	lea    rcx,[rsp+0x398]
  4433f1:	call   0x448d90
  4433f6:	nop
  4433f7:	lea    rcx,[rsp+0x140]
  4433ff:	call   0x422f10
  443404:	nop
  443405:	mov    rcx,rbx
  443408:	call   0x40215c
  44340d:	nop
  44340e:	jmp    0x443c43
  443413:	mov    rcx,QWORD PTR [rsp+0x2f8]
  44341b:	call   0x40215c
  443420:	nop
  443421:	mov    rcx,QWORD PTR [rsp+0x488]
  443429:	call   0x40215c
  44342e:	lea    rcx,[rsp+0x398]
  443436:	call   0x448d90
  44343b:	nop
  44343c:	lea    rcx,[rsp+0x140]
  443444:	call   0x422f10
  443449:	nop
  44344a:	mov    rcx,rbx
  44344d:	call   0x40215c
  443452:	nop
  443453:	mov    r12d,edi
  443456:	jmp    0x443c43
  44345b:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443463:	call   0x40215c
  443468:	nop
  443469:	mov    rcx,QWORD PTR [rsp+0x488]
  443471:	call   0x40215c
  443476:	lea    rcx,[rsp+0x398]
  44347e:	call   0x448d90
  443483:	nop
  443484:	lea    rcx,[rsp+0x140]
  44348c:	call   0x422f10
  443491:	nop
  443492:	mov    rcx,rbx
  443495:	call   0x40215c
  44349a:	nop
  44349b:	mov    r12d,edi
  44349e:	jmp    0x443c43
  4434a3:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4434ab:	call   0x40215c
  4434b0:	nop
  4434b1:	mov    rcx,QWORD PTR [rsp+0x488]
  4434b9:	call   0x40215c
  4434be:	lea    rcx,[rsp+0x398]
  4434c6:	call   0x448d90
  4434cb:	nop
  4434cc:	lea    rcx,[rsp+0x140]
  4434d4:	call   0x422f10
  4434d9:	nop
  4434da:	mov    rcx,rbx
  4434dd:	call   0x40215c
  4434e2:	nop
  4434e3:	mov    r12d,edi
  4434e6:	jmp    0x443c43
  4434eb:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4434f3:	call   0x40215c
  4434f8:	nop
  4434f9:	mov    rcx,QWORD PTR [rsp+0x488]
  443501:	call   0x40215c
  443506:	lea    rcx,[rsp+0x398]
  44350e:	call   0x448d90
  443513:	nop
  443514:	lea    rcx,[rsp+0x140]
  44351c:	call   0x422f10
  443521:	nop
  443522:	mov    rcx,rbx
  443525:	call   0x40215c
  44352a:	nop
  44352b:	mov    r12d,edi
  44352e:	jmp    0x443c43
  443533:	movsxd rdi,DWORD PTR [rsp+0x28]
  443538:	mov    rsi,rdi
  44353b:	cmp    edi,r9d
  44353e:	je     0x443572
  443540:	shl    rsi,0x3
  443544:	add    edi,0xffffffff
  443547:	sub    rsi,0x8
  44354b:	mov    rax,QWORD PTR [rsp+0x20]
  443550:	mov    rbp,QWORD PTR [rsi+rax*1]
  443554:	cmp    rbp,r9
  443557:	je     0x44356d
  443559:	mov    rcx,QWORD PTR [rbp+0x0]
  44355d:	call   0x40215c
  443562:	mov    rcx,rbp
  443565:	call   0x40215c
  44356a:	xor    r9d,r9d
  44356d:	cmp    edi,r9d
  443570:	jne    0x443544
  443572:	mov    rcx,QWORD PTR [rsp+0x20]
  443577:	call   0x40215c
  44357c:	nop
  44357d:	lea    rcx,[rsp+0x1c0]
  443585:	call   0x413404
  44358a:	nop
  44358b:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443593:	call   0x40215c
  443598:	nop
  443599:	mov    rcx,QWORD PTR [rsp+0x488]
  4435a1:	call   0x40215c
  4435a6:	lea    rcx,[rsp+0x398]
  4435ae:	call   0x448d90
  4435b3:	nop
  4435b4:	lea    rcx,[rsp+0x140]
  4435bc:	call   0x422f10
  4435c1:	nop
  4435c2:	mov    rcx,rbx
  4435c5:	call   0x40215c
  4435ca:	nop
  4435cb:	jmp    0x443c43
  4435d0:	movsxd rdi,DWORD PTR [rsp+0x28]
  4435d5:	mov    rsi,rdi
  4435d8:	cmp    edi,r9d
  4435db:	je     0x44360f
  4435dd:	shl    rsi,0x3
  4435e1:	add    edi,0xffffffff
  4435e4:	sub    rsi,0x8
  4435e8:	mov    rax,QWORD PTR [rsp+0x20]
  4435ed:	mov    rbp,QWORD PTR [rsi+rax*1]
  4435f1:	cmp    rbp,r9
  4435f4:	je     0x44360a
  4435f6:	mov    rcx,QWORD PTR [rbp+0x0]
  4435fa:	call   0x40215c
  4435ff:	mov    rcx,rbp
  443602:	call   0x40215c
  443607:	xor    r9d,r9d
  44360a:	cmp    edi,r9d
  44360d:	jne    0x4435e1
  44360f:	mov    rcx,QWORD PTR [rsp+0x20]
  443614:	call   0x40215c
  443619:	nop
  44361a:	lea    rcx,[rsp+0x1c0]
  443622:	call   0x413404
  443627:	nop
  443628:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443630:	call   0x40215c
  443635:	nop
  443636:	mov    rcx,QWORD PTR [rsp+0x488]
  44363e:	call   0x40215c
  443643:	lea    rcx,[rsp+0x398]
  44364b:	call   0x448d90
  443650:	nop
  443651:	lea    rcx,[rsp+0x140]
  443659:	call   0x422f10
  44365e:	nop
  44365f:	mov    rcx,rbx
  443662:	call   0x40215c
  443667:	nop
  443668:	mov    r12d,r13d
  44366b:	jmp    0x443c43
  443670:	movsxd rdi,DWORD PTR [rsp+0x28]
  443675:	mov    rsi,rdi
  443678:	cmp    edi,r9d
  44367b:	je     0x4436af
  44367d:	shl    rsi,0x3
  443681:	add    edi,0xffffffff
  443684:	sub    rsi,0x8
  443688:	mov    rax,QWORD PTR [rsp+0x20]
  44368d:	mov    rbp,QWORD PTR [rsi+rax*1]
  443691:	cmp    rbp,r9
  443694:	je     0x4436aa
  443696:	mov    rcx,QWORD PTR [rbp+0x0]
  44369a:	call   0x40215c
  44369f:	mov    rcx,rbp
  4436a2:	call   0x40215c
  4436a7:	xor    r9d,r9d
  4436aa:	cmp    edi,r9d
  4436ad:	jne    0x443681
  4436af:	mov    rcx,QWORD PTR [rsp+0x20]
  4436b4:	call   0x40215c
  4436b9:	nop
  4436ba:	lea    rcx,[rsp+0x1c0]
  4436c2:	call   0x413404
  4436c7:	nop
  4436c8:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4436d0:	call   0x40215c
  4436d5:	nop
  4436d6:	mov    rcx,QWORD PTR [rsp+0x488]
  4436de:	call   0x40215c
  4436e3:	lea    rcx,[rsp+0x398]
  4436eb:	call   0x448d90
  4436f0:	nop
  4436f1:	lea    rcx,[rsp+0x140]
  4436f9:	call   0x422f10
  4436fe:	nop
  4436ff:	mov    rcx,rbx
  443702:	call   0x40215c
  443707:	nop
  443708:	mov    r12d,r13d
  44370b:	jmp    0x443c43
  443710:	movsxd rdi,DWORD PTR [rsp+0x28]
  443715:	mov    rsi,rdi
  443718:	cmp    edi,r9d
  44371b:	je     0x44374f
  44371d:	shl    rsi,0x3
  443721:	add    edi,0xffffffff
  443724:	sub    rsi,0x8
  443728:	mov    rax,QWORD PTR [rsp+0x20]
  44372d:	mov    rbp,QWORD PTR [rsi+rax*1]
  443731:	cmp    rbp,r9
  443734:	je     0x44374a
  443736:	mov    rcx,QWORD PTR [rbp+0x0]
  44373a:	call   0x40215c
  44373f:	mov    rcx,rbp
  443742:	call   0x40215c
  443747:	xor    r9d,r9d
  44374a:	cmp    edi,r9d
  44374d:	jne    0x443721
  44374f:	mov    rcx,QWORD PTR [rsp+0x20]
  443754:	call   0x40215c
  443759:	nop
  44375a:	lea    rcx,[rsp+0x1c0]
  443762:	call   0x413404
  443767:	nop
  443768:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443770:	call   0x40215c
  443775:	nop
  443776:	mov    rcx,QWORD PTR [rsp+0x488]
  44377e:	call   0x40215c
  443783:	lea    rcx,[rsp+0x398]
  44378b:	call   0x448d90
  443790:	nop
  443791:	lea    rcx,[rsp+0x140]
  443799:	call   0x422f10
  44379e:	nop
  44379f:	mov    rcx,rbx
  4437a2:	call   0x40215c
  4437a7:	nop
  4437a8:	mov    r12d,r13d
  4437ab:	jmp    0x443c43
  4437b0:	movsxd rdi,DWORD PTR [rsp+0x28]
  4437b5:	mov    rsi,rdi
  4437b8:	cmp    edi,r9d
  4437bb:	je     0x4437ef
  4437bd:	shl    rsi,0x3
  4437c1:	add    edi,0xffffffff
  4437c4:	sub    rsi,0x8
  4437c8:	mov    rax,QWORD PTR [rsp+0x20]
  4437cd:	mov    rbp,QWORD PTR [rsi+rax*1]
  4437d1:	cmp    rbp,r9
  4437d4:	je     0x4437ea
  4437d6:	mov    rcx,QWORD PTR [rbp+0x0]
  4437da:	call   0x40215c
  4437df:	mov    rcx,rbp
  4437e2:	call   0x40215c
  4437e7:	xor    r9d,r9d
  4437ea:	cmp    edi,r9d
  4437ed:	jne    0x4437c1
  4437ef:	mov    rcx,QWORD PTR [rsp+0x20]
  4437f4:	call   0x40215c
  4437f9:	nop
  4437fa:	lea    rcx,[rsp+0x1c0]
  443802:	call   0x413404
  443807:	nop
  443808:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443810:	call   0x40215c
  443815:	nop
  443816:	mov    rcx,QWORD PTR [rsp+0x488]
  44381e:	call   0x40215c
  443823:	lea    rcx,[rsp+0x398]
  44382b:	call   0x448d90
  443830:	nop
  443831:	lea    rcx,[rsp+0x140]
  443839:	call   0x422f10
  44383e:	nop
  44383f:	mov    rcx,rbx
  443842:	call   0x40215c
  443847:	nop
  443848:	mov    r12d,r13d
  44384b:	jmp    0x443c43
  443850:	movsxd rdi,DWORD PTR [rsp+0x28]
  443855:	mov    rsi,rdi
  443858:	test   edi,edi
  44385a:	je     0x44388a
  44385c:	shl    rsi,0x3
  443860:	add    edi,0xffffffff
  443863:	sub    rsi,0x8
  443867:	mov    rax,QWORD PTR [rsp+0x20]
  44386c:	mov    rbp,QWORD PTR [rsi+rax*1]
  443870:	test   rbp,rbp
  443873:	je     0x443886
  443875:	mov    rcx,QWORD PTR [rbp+0x0]
  443879:	call   0x40215c
  44387e:	mov    rcx,rbp
  443881:	call   0x40215c
  443886:	test   edi,edi
  443888:	jne    0x443860
  44388a:	mov    rcx,QWORD PTR [rsp+0x20]
  44388f:	call   0x40215c
  443894:	nop
  443895:	lea    rcx,[rsp+0x1c0]
  44389d:	call   0x413404
  4438a2:	nop
  4438a3:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4438ab:	call   0x40215c
  4438b0:	nop
  4438b1:	mov    rcx,QWORD PTR [rsp+0x488]
  4438b9:	call   0x40215c
  4438be:	lea    rcx,[rsp+0x398]
  4438c6:	call   0x448d90
  4438cb:	nop
  4438cc:	lea    rcx,[rsp+0x140]
  4438d4:	call   0x422f10
  4438d9:	nop
  4438da:	mov    rcx,rbx
  4438dd:	call   0x40215c
  4438e2:	nop
  4438e3:	mov    r12d,r13d
  4438e6:	jmp    0x443c43
  4438eb:	movsxd rdi,DWORD PTR [rsp+0x28]
  4438f0:	mov    rsi,rdi
  4438f3:	test   edi,edi
  4438f5:	je     0x443925
  4438f7:	shl    rsi,0x3
  4438fb:	add    edi,0xffffffff
  4438fe:	sub    rsi,0x8
  443902:	mov    rax,QWORD PTR [rsp+0x20]
  443907:	mov    rbp,QWORD PTR [rsi+rax*1]
  44390b:	test   rbp,rbp
  44390e:	je     0x443921
  443910:	mov    rcx,QWORD PTR [rbp+0x0]
  443914:	call   0x40215c
  443919:	mov    rcx,rbp
  44391c:	call   0x40215c
  443921:	test   edi,edi
  443923:	jne    0x4438fb
  443925:	mov    rcx,QWORD PTR [rsp+0x20]
  44392a:	call   0x40215c
  44392f:	nop
  443930:	lea    rcx,[rsp+0x1c0]
  443938:	call   0x413404
  44393d:	nop
  44393e:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443946:	call   0x40215c
  44394b:	nop
  44394c:	mov    rcx,QWORD PTR [rsp+0x488]
  443954:	call   0x40215c
  443959:	lea    rcx,[rsp+0x398]
  443961:	call   0x448d90
  443966:	nop
  443967:	lea    rcx,[rsp+0x140]
  44396f:	call   0x422f10
  443974:	nop
  443975:	mov    rcx,rbx
  443978:	call   0x40215c
  44397d:	nop
  44397e:	mov    r12d,r13d
  443981:	jmp    0x443c43
  443986:	movsxd rdi,DWORD PTR [rsp+0x28]
  44398b:	mov    rsi,rdi
  44398e:	cmp    edi,ecx
  443990:	je     0x4439c2
  443992:	shl    rsi,0x3
  443996:	add    edi,0xffffffff
  443999:	sub    rsi,0x8
  44399d:	mov    rax,QWORD PTR [rsp+0x20]
  4439a2:	mov    rbp,QWORD PTR [rsi+rax*1]
  4439a6:	cmp    rbp,rcx
  4439a9:	je     0x4439be
  4439ab:	mov    rcx,QWORD PTR [rbp+0x0]
  4439af:	call   0x40215c
  4439b4:	mov    rcx,rbp
  4439b7:	call   0x40215c
  4439bc:	xor    ecx,ecx
  4439be:	cmp    edi,ecx
  4439c0:	jne    0x443996
  4439c2:	mov    rcx,QWORD PTR [rsp+0x20]
  4439c7:	call   0x40215c
  4439cc:	nop
  4439cd:	lea    rcx,[rsp+0x1c0]
  4439d5:	call   0x413404
  4439da:	nop
  4439db:	mov    rcx,QWORD PTR [rsp+0x2f8]
  4439e3:	call   0x40215c
  4439e8:	nop
  4439e9:	mov    rcx,QWORD PTR [rsp+0x488]
  4439f1:	call   0x40215c
  4439f6:	lea    rcx,[rsp+0x398]
  4439fe:	call   0x448d90
  443a03:	nop
  443a04:	lea    rcx,[rsp+0x140]
  443a0c:	call   0x422f10
  443a11:	nop
  443a12:	mov    rcx,rbx
  443a15:	call   0x40215c
  443a1a:	nop
  443a1b:	mov    r12d,r13d
  443a1e:	jmp    0x443c43
  443a23:	movsxd rdi,DWORD PTR [rsp+0x28]
  443a28:	mov    rsi,rdi
  443a2b:	test   edi,edi
  443a2d:	je     0x443a5d
  443a2f:	shl    rsi,0x3
  443a33:	add    edi,0xffffffff
  443a36:	sub    rsi,0x8
  443a3a:	mov    rax,QWORD PTR [rsp+0x20]
  443a3f:	mov    rbp,QWORD PTR [rsi+rax*1]
  443a43:	test   rbp,rbp
  443a46:	je     0x443a59
  443a48:	mov    rcx,QWORD PTR [rbp+0x0]
  443a4c:	call   0x40215c
  443a51:	mov    rcx,rbp
  443a54:	call   0x40215c
  443a59:	test   edi,edi
  443a5b:	jne    0x443a33
  443a5d:	mov    rcx,QWORD PTR [rsp+0x20]
  443a62:	call   0x40215c
  443a67:	nop
  443a68:	lea    rcx,[rsp+0x1c0]
  443a70:	call   0x413404
  443a75:	nop
  443a76:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443a7e:	call   0x40215c
  443a83:	nop
  443a84:	mov    rcx,QWORD PTR [rsp+0x488]
  443a8c:	call   0x40215c
  443a91:	lea    rcx,[rsp+0x398]
  443a99:	call   0x448d90
  443a9e:	nop
  443a9f:	lea    rcx,[rsp+0x140]
  443aa7:	call   0x422f10
  443aac:	nop
  443aad:	mov    rcx,rbx
  443ab0:	call   0x40215c
  443ab5:	nop
  443ab6:	mov    r12d,r13d
  443ab9:	jmp    0x443c43
  443abe:	movsxd rdi,DWORD PTR [rsp+0x28]
  443ac3:	mov    rsi,rdi
  443ac6:	cmp    edi,r9d
  443ac9:	je     0x443afd
  443acb:	shl    rsi,0x3
  443acf:	add    edi,0xffffffff
  443ad2:	sub    rsi,0x8
  443ad6:	mov    rax,QWORD PTR [rsp+0x20]
  443adb:	mov    rbp,QWORD PTR [rsi+rax*1]
  443adf:	cmp    rbp,r9
  443ae2:	je     0x443af8
  443ae4:	mov    rcx,QWORD PTR [rbp+0x0]
  443ae8:	call   0x40215c
  443aed:	mov    rcx,rbp
  443af0:	call   0x40215c
  443af5:	xor    r9d,r9d
  443af8:	cmp    edi,r9d
  443afb:	jne    0x443acf
  443afd:	mov    rcx,QWORD PTR [rsp+0x20]
  443b02:	call   0x40215c
  443b07:	nop
  443b08:	lea    rcx,[rsp+0x1c0]
  443b10:	call   0x413404
  443b15:	nop
  443b16:	mov    rcx,QWORD PTR [rsp+0x2f8]
  443b1e:	call   0x40215c
  443b23:	nop
  443b24:	mov    rcx,QWORD PTR [rsp+0x488]
  443b2c:	call   0x40215c
  443b31:	lea    rcx,[rsp+0x398]
  443b39:	call   0x448d90
  443b3e:	nop
  443b3f:	lea    rcx,[rsp+0x140]
  443b47:	call   0x422f10
  443b4c:	nop
  443b4d:	mov    rcx,rbx
  443b50:	call   0x40215c
  443b55:	nop
  443b56:	mov    r12d,r13d
  443b59:	jmp    0x443c43
  443b5e:	mov    rdi,QWORD PTR [rsp+0x58]
  443b63:	mov    sil,BYTE PTR [rsp+0x5a0]
  443b6b:	mov    r12d,DWORD PTR [rsp+0x34]
  443b70:	jmp    0x443b75
  443b72:	mov    rcx,r8
  443b75:	cmp    BYTE PTR [rsp+0x598],dl
  443b7c:	je     0x443c1d
  443b82:	cmp    sil,dl
  443b85:	jne    0x443c1d
  443b8b:	cmp    DWORD PTR [r15+0x8],ecx
  443b8f:	ja     0x443b9a
  443b91:	cmp    rdi,rcx
  443b94:	jbe    0x443c1d
  443b9a:	lea    rsi,[rip+0x24e37]        # 0x4689d8
  443ba1:	mov    rcx,rsi
  443ba4:	call   0x402454
  443ba9:	mov    rdx,QWORD PTR [rip+0x24e28]        # 0x4689d8
  443bb0:	mov    rcx,QWORD PTR [rsp+0x268]
  443bb8:	call   QWORD PTR [rip+0x97b2]        # 0x44d370
  443bbe:	mov    rcx,rsi
  443bc1:	call   0x402454
  443bc6:	lea    rdx,[rsp+0x310]
  443bce:	lea    rcx,[rsp+0x210]
  443bd6:	call   0x44198c
  443bdb:	mov    rcx,rsi
  443bde:	call   0x402454
  443be3:	mov    r8,QWORD PTR [rsp+0x60]
  443be8:	lea    rdx,[rip+0xf5b9]        # 0x4531a8
  443bef:	mov    rcx,rsi
  443bf2:	call   0x440a2c
  443bf7:	mov    r8,rdi
  443bfa:	lea    rdx,[rip+0xf197]        # 0x452d98
  443c01:	mov    rcx,rsi
  443c04:	call   0x440a2c
  443c09:	mov    r8,rbp
  443c0c:	lea    rdx,[rip+0xf57d]        # 0x453190
  443c13:	mov    rcx,rsi
  443c16:	call   0x440a2c
  443c1b:	xor    edx,edx
  443c1d:	mov    eax,0x1
  443c22:	cmp    QWORD PTR [r14],rax
  443c25:	jne    0x443c37
  443c27:	cmp    r12d,edx
  443c2a:	je     0x443c37
  443c2c:	mov    rcx,rbx
  443c2f:	call   0x40215c
  443c34:	nop
  443c35:	jmp    0x443c43
  443c37:	mov    rcx,rbx
  443c3a:	call   0x40215c
  443c3f:	nop
  443c40:	xor    r12d,r12d
  443c43:	lea    rcx,[rsp+0x210]
  443c4b:	call   0x441e90
  443c50:	mov    eax,r12d
  443c53:	add    rsp,0x508
  443c5a:	pop    r15
  443c5c:	pop    r14
  443c5e:	pop    r13
  443c60:	pop    r12
  443c62:	pop    rdi
  443c63:	pop    rsi
  443c64:	pop    rbp
  443c65:	pop    rbx
  443c66:	ret    
  443c67:	int3   
  443c68:	int3   
  443c69:	int3   
  443c6a:	int3   
  443c6b:	int3   
  443c6c:	int3   
  443c6d:	int3   
  443c6e:	int3   
  443c6f:	int3   
  443c70:	rex.W push rbp
  443c72:	sub    rsp,0x20
  443c76:	mov    rbp,rdx
  443c79:	lea    rcx,[rbp+0x210]
  443c80:	call   0x440fe4
  443c85:	add    rsp,0x20
  443c89:	pop    rbp
  443c8a:	ret    
  443c8b:	int3   
  443c8c:	int3   
  443c8d:	int3   
  443c8e:	int3   
  443c8f:	int3   
  443c90:	rex.W push rbp
  443c92:	sub    rsp,0x20
  443c96:	mov    rbp,rdx
  443c99:	lea    rcx,[rbp+0x210]
  443ca0:	add    rcx,0x20
  443ca4:	call   0x401000
  443ca9:	add    rsp,0x20
  443cad:	pop    rbp
  443cae:	ret    
  443caf:	int3   
  443cb0:	rex.W push rbp
  443cb2:	sub    rsp,0x20
  443cb6:	mov    rbp,rdx
  443cb9:	lea    rcx,[rbp+0x210]
  443cc0:	add    rcx,0x30
  443cc4:	call   0x401000
  443cc9:	add    rsp,0x20
  443ccd:	pop    rbp
  443cce:	ret    
  443ccf:	int3   
  443cd0:	rex.W push rbp
  443cd2:	sub    rsp,0x20
  443cd6:	mov    rbp,rdx
  443cd9:	lea    rcx,[rbp+0x210]
  443ce0:	add    rcx,0x40
  443ce4:	call   0x401000
  443ce9:	add    rsp,0x20
  443ced:	pop    rbp
  443cee:	ret    
  443cef:	int3   
  443cf0:	rex.W push rbp
  443cf2:	sub    rsp,0x20
  443cf6:	mov    rbp,rdx
  443cf9:	lea    rcx,[rbp+0x210]
  443d00:	call   0x441e90
  443d05:	add    rsp,0x20
  443d09:	pop    rbp
  443d0a:	ret    
  443d0b:	int3   
  443d0c:	int3   
  443d0d:	int3   
  443d0e:	int3   
  443d0f:	int3   
  443d10:	rex.W push rbp
  443d12:	sub    rsp,0x20
  443d16:	mov    rbp,rdx
  443d19:	lea    rcx,[rbp+0x280]
  443d20:	call   0x401000
  443d25:	add    rsp,0x20
  443d29:	pop    rbp
  443d2a:	ret    
  443d2b:	int3   
  443d2c:	int3   
  443d2d:	int3   
  443d2e:	int3   
  443d2f:	int3   
  443d30:	rex.W push rbp
  443d32:	sub    rsp,0x20
  443d36:	mov    rbp,rdx
  443d39:	lea    rcx,[rbp+0x4a0]
  443d40:	call   0x406fe0
  443d45:	add    rsp,0x20
  443d49:	pop    rbp
  443d4a:	ret    
  443d4b:	int3   
  443d4c:	int3   
  443d4d:	int3   
  443d4e:	int3   
  443d4f:	int3   
  443d50:	rex.W push rbp
  443d52:	sub    rsp,0x20
  443d56:	mov    rbp,rdx
  443d59:	lea    rcx,[rbp+0x4d8]
  443d60:	call   0x401000
  443d65:	add    rsp,0x20
  443d69:	pop    rbp
  443d6a:	ret    
  443d6b:	int3   
  443d6c:	int3   
  443d6d:	int3   
  443d6e:	int3   
  443d6f:	int3   
  443d70:	rex.W push rbp
  443d72:	sub    rsp,0x20
  443d76:	mov    rbp,rdx
  443d79:	lea    rcx,[rbp+0x140]
  443d80:	call   0x422f10
  443d85:	add    rsp,0x20
  443d89:	pop    rbp
  443d8a:	ret    
  443d8b:	int3   
  443d8c:	int3   
  443d8d:	int3   
  443d8e:	int3   
  443d8f:	int3   
  443d90:	rex.W push rbp
  443d92:	sub    rsp,0x20
  443d96:	mov    rbp,rdx
  443d99:	lea    rcx,[rbp+0x390]
  443da0:	add    rcx,0x8
  443da4:	call   0x448d90
  443da9:	add    rsp,0x20
  443dad:	pop    rbp
  443dae:	ret    
  443daf:	int3   
  443db0:	rex.W push rbp
  443db2:	sub    rsp,0x20
  443db6:	mov    rbp,rdx
  443db9:	lea    rcx,[rbp+0x390]
  443dc0:	call   0x440de0
  443dc5:	add    rsp,0x20
  443dc9:	pop    rbp
  443dca:	ret    
  443dcb:	int3   
  443dcc:	int3   
  443dcd:	int3   
  443dce:	int3   
  443dcf:	int3   
  443dd0:	rex.W push rbp
  443dd2:	sub    rsp,0x20
  443dd6:	mov    rbp,rdx
  443dd9:	lea    rcx,[rbp+0x290]
  443de0:	call   0x422a4c
  443de5:	add    rsp,0x20
  443de9:	pop    rbp
  443dea:	ret    
  443deb:	int3   
  443dec:	int3   
  443ded:	int3   
  443dee:	int3   
  443def:	int3   
  443df0:	rex.W push rbp
  443df2:	sub    rsp,0x20
  443df6:	mov    rbp,rdx
  443df9:	lea    rcx,[rbp+0x4f0]
  443e00:	call   0x401000
  443e05:	add    rsp,0x20
  443e09:	pop    rbp
  443e0a:	ret    
  443e0b:	int3   
  443e0c:	int3   
  443e0d:	int3   
  443e0e:	int3   
  443e0f:	int3   
  443e10:	rex.W push rbp
  443e12:	sub    rsp,0x20
  443e16:	mov    rbp,rdx
  443e19:	lea    rcx,[rbp+0x1c0]
  443e20:	call   0x401000
  443e25:	add    rsp,0x20
  443e29:	pop    rbp
  443e2a:	ret    
  443e2b:	int3   
  443e2c:	int3   
  443e2d:	int3   
  443e2e:	int3   
  443e2f:	int3   
  443e30:	rex.W push rbp
  443e32:	sub    rsp,0x20
  443e36:	mov    rbp,rdx
  443e39:	lea    rcx,[rbp+0x1c0]
  443e40:	add    rcx,0x10
  443e44:	call   0x4047cc
  443e49:	add    rsp,0x20
  443e4d:	pop    rbp
  443e4e:	ret    
  443e4f:	int3   
  443e50:	rex.W push rbp
  443e52:	sub    rsp,0x20
  443e56:	mov    rbp,rdx
  443e59:	lea    rcx,[rbp+0x1c0]
  443e60:	add    rcx,0x20
  443e64:	call   0x401000
  443e69:	add    rsp,0x20
  443e6d:	pop    rbp
  443e6e:	ret    
  443e6f:	int3   
  443e70:	rex.W push rbp
  443e72:	sub    rsp,0x20
  443e76:	mov    rbp,rdx
  443e79:	lea    rcx,[rbp+0x1c0]
  443e80:	call   0x413404
  443e85:	add    rsp,0x20
  443e89:	pop    rbp
  443e8a:	ret    
  443e8b:	int3   
  443e8c:	int3   
  443e8d:	int3   
  443e8e:	int3   
  443e8f:	int3   
  443e90:	rex.W push rbp
  443e92:	sub    rsp,0x20
  443e96:	mov    rbp,rdx
  443e99:	lea    rcx,[rbp+0x20]
  443e9d:	call   0x4047cc
  443ea2:	add    rsp,0x20
  443ea6:	pop    rbp
  443ea7:	ret    
  443ea8:	int3   
  443ea9:	int3   
  443eaa:	int3   
  443eab:	int3   
  443eac:	int3   
  443ead:	int3   
  443eae:	int3   
  443eaf:	int3   
  443eb0:	rex.W push rbp
  443eb2:	sub    rsp,0x20
  443eb6:	mov    rbp,rdx
  443eb9:	lea    rcx,[rbp+0x70]
  443ebd:	call   0x40b830
  443ec2:	add    rsp,0x20
  443ec6:	pop    rbp
  443ec7:	ret    
  443ec8:	sub    rsp,0x28
  443ecc:	mov    rcx,QWORD PTR [rcx]
  443ecf:	test   rcx,rcx
  443ed2:	je     0x443ed9
  443ed4:	call   0x4286b0
  443ed9:	add    rsp,0x28
  443edd:	ret    
  443ede:	int3   
  443edf:	int3   
  443ee0:	rex.W push rbx
  443ee2:	push   rdi
  443ee3:	sub    rsp,0x48
  443ee7:	mov    eax,edx
  443ee9:	mov    rdi,rcx
  443eec:	lea    rdx,[rsp+0x30]
  443ef1:	mov    ecx,eax
  443ef3:	mov    ebx,r8d
  443ef6:	call   0x401930
  443efb:	lea    rdx,[rsp+0x30]
  443f00:	lea    rcx,[rsp+0x20]
  443f05:	call   0x402b6c
  443f0a:	cmp    DWORD PTR [rsp+0x28],ebx
  443f0e:	jae    0x443f27
  443f10:	sub    ebx,DWORD PTR [rsp+0x28]
  443f14:	mov    rdx,QWORD PTR [rdi]
  443f17:	mov    ecx,0x20
  443f1c:	call   QWORD PTR [rip+0x9446]        # 0x44d368
  443f22:	dec    rbx
  443f25:	jne    0x443f14
  443f27:	mov    rdx,QWORD PTR [rdi]
  443f2a:	mov    rcx,QWORD PTR [rsp+0x20]
  443f2f:	call   QWORD PTR [rip+0x943b]        # 0x44d370
  443f35:	mov    rcx,QWORD PTR [rsp+0x20]
  443f3a:	call   0x40215c
  443f3f:	add    rsp,0x48
  443f43:	pop    rdi
  443f44:	pop    rbx
  443f45:	ret    
  443f46:	int3   
  443f47:	int3   
  443f48:	rex.W push rbx
  443f4a:	sub    rsp,0x20
  443f4e:	test   edx,edx
  443f50:	mov    rbx,rcx
  443f53:	js     0x443f62
  443f55:	mov    r8d,0x2
  443f5b:	call   0x443ee0
  443f60:	jmp    0x443f72
  443f62:	mov    rdx,QWORD PTR [rcx]
  443f65:	lea    rcx,[rip+0xdf24]        # 0x451e90
  443f6c:	call   QWORD PTR [rip+0x93fe]        # 0x44d370
  443f72:	mov    rdx,QWORD PTR [rbx]
  443f75:	mov    ecx,0x20
  443f7a:	add    rsp,0x20
  443f7e:	pop    rbx
  443f7f:	rex.W jmp QWORD PTR [rip+0x93e2]        # 0x44d368
  443f86:	int3   
  443f87:	int3   
  443f88:	rex.W push rbx
  443f8a:	push   rsi
  443f8b:	push   rdi
  443f8c:	sub    rsp,0x60
  443f90:	mov    edi,edx
  443f92:	lea    rdx,[rsp+0x40]
  443f97:	mov    sil,r8b
  443f9a:	lea    rbx,[rsp+0x40]
  443f9f:	call   0x4019a4
  443fa4:	xor    eax,eax
  443fa6:	cmp    BYTE PTR [rsp+0x40],al
  443faa:	je     0x443fbb
  443fac:	lea    rcx,[rsp+0x40]
  443fb1:	inc    rcx
  443fb4:	inc    eax
  443fb6:	cmp    BYTE PTR [rcx],0x0
  443fb9:	jne    0x443fb1
  443fbb:	cmp    eax,edi
  443fbd:	jae    0x443fce
  443fbf:	sub    edi,eax
  443fc1:	mov    eax,edi
  443fc3:	dec    rbx
  443fc6:	dec    rax
  443fc9:	mov    BYTE PTR [rbx],sil
  443fcc:	jne    0x443fc3
  443fce:	mov    rdx,QWORD PTR [rip+0x24f6b]        # 0x468f40
  443fd5:	mov    rcx,rbx
  443fd8:	mov    rdx,QWORD PTR [rdx]
  443fdb:	call   QWORD PTR [rip+0x938f]        # 0x44d370
  443fe1:	add    rsp,0x60
  443fe5:	pop    rdi
  443fe6:	pop    rsi
  443fe7:	pop    rbx
  443fe8:	ret    
  443fe9:	int3   
  443fea:	int3   
  443feb:	int3   
  443fec:	rex.W push rbx
  443fee:	push   rbp
  443fef:	push   rsi
  443ff0:	push   rdi
  443ff1:	sub    rsp,0x28
  443ff5:	mov    rdi,QWORD PTR [rip+0x24f44]        # 0x468f40
  443ffc:	mov    rbx,rcx
  443fff:	mov    rbp,r8
  444002:	mov    rcx,rdi
  444005:	mov    rsi,rdx
  444008:	call   0x402454
  44400d:	mov    rdx,QWORD PTR [rdi]
  444010:	mov    rcx,rbx
  444013:	call   QWORD PTR [rip+0x9357]        # 0x44d370
  444019:	mov    rdx,QWORD PTR [rdi]
  44401c:	lea    rcx,[rip+0x1003d]        # 0x454060
  444023:	call   QWORD PTR [rip+0x9347]        # 0x44d370
  444029:	movabs rax,0xd6bf94d5e57a42bd
  444033:	mov    r8b,0x20
  444036:	mul    rsi
  444039:	mov    rbx,rdx
  44403c:	mov    edx,0x6
  444041:	shr    rbx,0x17
  444045:	mov    rcx,rbx
  444048:	call   0x443f88
  44404d:	mov    rdx,QWORD PTR [rip+0x24eec]        # 0x468f40
  444054:	mov    ecx,0x2e
  444059:	mov    rdx,QWORD PTR [rdx]
  44405c:	call   QWORD PTR [rip+0x9306]        # 0x44d368
  444062:	mov    ecx,esi
  444064:	mov    eax,0xd1b71759
  444069:	imul   ebx,ebx,0x989680
  44406f:	sub    ecx,ebx
  444071:	mov    r8b,0x30
  444074:	mul    ecx
  444076:	shr    edx,0xd
  444079:	mov    ecx,edx
  44407b:	mov    edx,0x3
  444080:	call   0x443f88
  444085:	movabs r11,0x100000000000000
  44408f:	jmp    0x444097
  444091:	shr    rsi,1
  444094:	shr    rbp,1
  444097:	cmp    rsi,r11
  44409a:	ja     0x444091
  44409c:	xor    ebx,ebx
  44409e:	cmp    rbp,rbx
  4440a1:	je     0x4440b2
  4440a3:	imul   rsi,rsi,0x64
  4440a7:	xor    edx,edx
  4440a9:	mov    rax,rsi
  4440ac:	div    rbp
  4440af:	mov    rbx,rax
  4440b2:	mov    rdx,QWORD PTR [rip+0x24e87]        # 0x468f40
  4440b9:	lea    rcx,[rip+0xff98]        # 0x454058
  4440c0:	mov    rdx,QWORD PTR [rdx]
  4440c3:	call   QWORD PTR [rip+0x92a7]        # 0x44d370
  4440c9:	mov    r8b,0x20
  4440cc:	mov    edx,0x5
  4440d1:	mov    rcx,rbx
  4440d4:	call   0x443f88
  4440d9:	mov    rdx,QWORD PTR [rip+0x24e60]        # 0x468f40
  4440e0:	mov    ecx,0x25
  4440e5:	mov    rdx,QWORD PTR [rdx]
  4440e8:	add    rsp,0x28
  4440ec:	pop    rdi
  4440ed:	pop    rsi
  4440ee:	pop    rbp
  4440ef:	pop    rbx
  4440f0:	rex.W jmp QWORD PTR [rip+0x9271]        # 0x44d368
  4440f7:	int3   
  4440f8:	rex.W push rbx
  4440fa:	push   rsi
  4440fb:	push   rdi
  4440fc:	sub    rsp,0x20
  444100:	mov    rdi,QWORD PTR [rip+0x24e39]        # 0x468f40
  444107:	mov    rsi,rdx
  44410a:	mov    rbx,rcx
  44410d:	mov    rdx,QWORD PTR [rdi]
  444110:	lea    rcx,[rip+0xff65]        # 0x45407c
  444117:	call   QWORD PTR [rip+0x9253]        # 0x44d370
  44411d:	mov    rdx,QWORD PTR [rdi]
  444120:	mov    rcx,rbx
  444123:	call   QWORD PTR [rip+0x9247]        # 0x44d370
  444129:	mov    rdx,QWORD PTR [rdi]
  44412c:	lea    rcx,[rip+0xff3d]        # 0x454070
  444133:	call   QWORD PTR [rip+0x9237]        # 0x44d370
  444139:	lea    rcx,[rsi+0xfffff]
  444140:	mov    r8b,0x20
  444143:	shr    rcx,0x14
  444147:	mov    edx,0x7
  44414c:	call   0x443f88
  444151:	mov    rdx,QWORD PTR [rip+0x24de8]        # 0x468f40
  444158:	lea    rcx,[rip+0xff09]        # 0x454068
  44415f:	mov    rdx,QWORD PTR [rdx]
  444162:	add    rsp,0x20
  444166:	pop    rdi
  444167:	pop    rsi
  444168:	pop    rbx
  444169:	rex.W jmp QWORD PTR [rip+0x9200]        # 0x44d370
  444170:	rex.W push rbx
  444172:	push   rbp
  444173:	push   rsi
  444174:	push   rdi
  444175:	sub    rsp,0x98
  44417c:	call   QWORD PTR [rip+0x8fae]        # 0x44d130
  444182:	lea    r9,[rsp+0xc0]
  44418a:	lea    r8,[rsp+0x30]
  44418f:	mov    rcx,rax
  444192:	lea    rax,[rsp+0xc8]
  44419a:	lea    rdx,[rsp+0xd0]
  4441a2:	mov    QWORD PTR [rsp+0x20],rax
  4441a7:	call   QWORD PTR [rip+0x8f03]        # 0x44d0b0
  4441ad:	test   eax,eax
  4441af:	je     0x444315
  4441b5:	lea    rcx,[rsp+0xd8]
  4441bd:	call   0x40b814
  4441c2:	mov    edi,0x48
  4441c7:	lea    rcx,[rsp+0x40]
  4441cc:	mov    r8,rdi
  4441cf:	xor    edx,edx
  4441d1:	call   0x44b780
  4441d6:	lea    rcx,[rip+0x987b]        # 0x44da58
  4441dd:	xor    esi,esi
  4441df:	call   QWORD PTR [rip+0x9033]        # 0x44d218
  4441e5:	lea    rdx,[rip+0xff0c]        # 0x4540f8
  4441ec:	mov    rcx,rax
  4441ef:	call   QWORD PTR [rip+0x901b]        # 0x44d210
  4441f5:	test   rax,rax
  4441f8:	mov    rbx,rax
  4441fb:	jne    0x444227
  4441fd:	lea    rcx,[rip+0xfedc]        # 0x4540e0
  444204:	call   QWORD PTR [rip+0x8fbe]        # 0x44d1c8
  44420a:	test   rax,rax
  44420d:	je     0x44423c
  44420f:	lea    rdx,[rip+0xfeb2]        # 0x4540c8
  444216:	mov    rcx,rax
  444219:	call   QWORD PTR [rip+0x8ff1]        # 0x44d210
  44421f:	test   rax,rax
  444222:	mov    rbx,rax
  444225:	je     0x44423c
  444227:	call   QWORD PTR [rip+0x8f03]        # 0x44d130
  44422d:	lea    rdx,[rsp+0x40]
  444232:	mov    r8d,edi
  444235:	mov    rcx,rax
  444238:	call   rbx
  44423a:	mov    esi,eax
  44423c:	mov    ecx,DWORD PTR [rsp+0xc0]
  444243:	mov    eax,DWORD PTR [rsp+0xd0]
  44424a:	mov    edi,DWORD PTR [rsp+0xc4]
  444251:	mov    ebx,DWORD PTR [rsp+0xcc]
  444258:	mov    ebp,DWORD PTR [rsp+0xdc]
  44425f:	shl    rdi,0x20
  444263:	or     rdi,rcx
  444266:	mov    ecx,DWORD PTR [rsp+0xc8]
  44426d:	shl    rbp,0x20
  444271:	shl    rbx,0x20
  444275:	mov    rdx,rdi
  444278:	or     rbx,rcx
  44427b:	mov    ecx,DWORD PTR [rsp+0xd4]
  444282:	shl    rcx,0x20
  444286:	or     rcx,rax
  444289:	mov    eax,DWORD PTR [rsp+0xd8]
  444290:	or     rbp,rax
  444293:	sub    rbp,rcx
  444296:	lea    rcx,[rip+0xfe23]        # 0x4540c0
  44429d:	mov    r8,rbp
  4442a0:	call   0x443fec
  4442a5:	lea    rcx,[rip+0xfe0c]        # 0x4540b8
  4442ac:	mov    r8,rbp
  4442af:	mov    rdx,rbx
  4442b2:	call   0x443fec
  4442b7:	lea    rdx,[rbx+rdi*1]
  4442bb:	lea    rcx,[rip+0xfdee]        # 0x4540b0
  4442c2:	mov    r8,rbp
  4442c5:	call   0x443fec
  4442ca:	test   esi,esi
  4442cc:	je     0x4442e2
  4442ce:	mov    rdx,QWORD PTR [rsp+0x80]
  4442d6:	lea    rcx,[rip+0xfdc3]        # 0x4540a0
  4442dd:	call   0x4440f8
  4442e2:	lea    rcx,[rip+0xfdaf]        # 0x454098
  4442e9:	mov    r8,rbp
  4442ec:	mov    rdx,rbp
  4442ef:	call   0x443fec
  4442f4:	test   esi,esi
  4442f6:	je     0x444309
  4442f8:	mov    rdx,QWORD PTR [rsp+0x48]
  4442fd:	lea    rcx,[rip+0xfd84]        # 0x454088
  444304:	call   0x4440f8
  444309:	mov    rcx,QWORD PTR [rip+0x24c30]        # 0x468f40
  444310:	call   0x402454
  444315:	add    rsp,0x98
  44431c:	pop    rdi
  44431d:	pop    rsi
  44431e:	pop    rbp
  44431f:	pop    rbx
  444320:	ret    
  444321:	int3   
  444322:	int3   
  444323:	int3   
  444324:	rex.W push rbx
  444326:	push   rdi
  444327:	sub    rsp,0x58
  44432b:	mov    rax,rdx
  44432e:	mov    rdi,rcx
  444331:	lea    rdx,[rsp+0x30]
  444336:	mov    rcx,rax
  444339:	call   0x401a84
  44433e:	lea    rdx,[rsp+0x30]
  444343:	lea    rcx,[rsp+0x20]
  444348:	call   0x402b6c
  44434d:	mov    eax,0x8
  444352:	cmp    DWORD PTR [rsp+0x28],eax
  444356:	jae    0x444371
  444358:	sub    eax,DWORD PTR [rsp+0x28]
  44435c:	mov    ebx,eax
  44435e:	mov    rdx,QWORD PTR [rdi]
  444361:	mov    ecx,0x20
  444366:	call   QWORD PTR [rip+0x8ffc]        # 0x44d368
  44436c:	dec    rbx
  44436f:	jne    0x44435e
  444371:	mov    rdx,QWORD PTR [rdi]
  444374:	mov    rcx,QWORD PTR [rsp+0x20]
  444379:	call   QWORD PTR [rip+0x8ff1]        # 0x44d370
  44437f:	mov    rcx,QWORD PTR [rsp+0x20]
  444384:	call   0x40215c
  444389:	add    rsp,0x58
  44438d:	pop    rdi
  44438e:	pop    rbx
  44438f:	ret    
  444390:	jmp    0x40146c
  444395:	int3   
  444396:	int3   
  444397:	int3   
  444398:	add    rcx,0x18
  44439c:	jmp    0x448d90
  4443a1:	int3   
  4443a2:	int3   
  4443a3:	int3   
  4443a4:	rex.W push rbx
  4443a6:	push   rbp
  4443a7:	push   rsi
  4443a8:	push   rdi
  4443a9:	sub    rsp,0x28
  4443ad:	movsxd rbx,DWORD PTR [rcx+0x8]
  4443b1:	mov    rdi,rcx
  4443b4:	test   ebx,ebx
  4443b6:	mov    rsi,rbx
  4443b9:	je     0x444426
  4443bb:	shl    rsi,0x3
  4443bf:	mov    rax,QWORD PTR [rdi]
  4443c2:	sub    rsi,0x8
  4443c6:	add    ebx,0xffffffff
  4443c9:	mov    rbp,QWORD PTR [rsi+rax*1]
  4443cd:	test   rbp,rbp
  4443d0:	je     0x444422
  4443d2:	mov    rcx,QWORD PTR [rbp+0x78]
  4443d6:	call   0x40215c
  4443db:	mov    rcx,QWORD PTR [rbp+0x68]
  4443df:	call   0x40215c
  4443e4:	mov    rcx,QWORD PTR [rbp+0x50]
  4443e8:	call   0x40215c
  4443ed:	mov    rcx,QWORD PTR [rbp+0x40]
  4443f1:	call   0x40215c
  4443f6:	mov    rcx,QWORD PTR [rbp+0x30]
  4443fa:	call   0x40215c
  4443ff:	mov    rcx,QWORD PTR [rbp+0x20]
  444403:	call   0x40215c
  444408:	mov    rcx,QWORD PTR [rbp+0x10]
  44440c:	call   0x40215c
  444411:	mov    rcx,QWORD PTR [rbp+0x0]
  444415:	call   0x40215c
  44441a:	mov    rcx,rbp
  44441d:	call   0x40215c
  444422:	test   ebx,ebx
  444424:	jne    0x4443bf
  444426:	mov    rcx,QWORD PTR [rdi]
  444429:	add    rsp,0x28
  44442d:	pop    rdi
  44442e:	pop    rsi
  44442f:	pop    rbp
  444430:	pop    rbx
  444431:	jmp    0x40215c
  444436:	int3   
  444437:	int3   
  444438:	rex.W push rbx
  44443a:	push   rbp
  44443b:	push   rsi
  44443c:	push   rdi
  44443d:	push   r12
  44443f:	push   r13
  444441:	push   r14
  444443:	sub    rsp,0x20
  444447:	movsxd rdi,DWORD PTR [rcx+0x120]
  44444e:	mov    r12,r9
  444451:	mov    r13,r8
  444454:	test   edi,edi
  444456:	mov    r14,rdx
  444459:	mov    rbx,rcx
  44445c:	mov    rbp,rdi
  44445f:	je     0x444490
  444461:	shl    rbp,0x3
  444465:	mov    rax,QWORD PTR [rbx+0x118]
  44446c:	sub    rbp,0x8
  444470:	add    edi,0xffffffff
  444473:	mov    rsi,QWORD PTR [rax+rbp*1]
  444477:	test   rsi,rsi
  44447a:	je     0x44448c
  44447c:	mov    rcx,QWORD PTR [rsi]
  44447f:	call   0x40215c
  444484:	mov    rcx,rsi
  444487:	call   0x40215c
  44448c:	test   edi,edi
  44448e:	jne    0x444465
  444490:	mov    DWORD PTR [rbx+0x120],0x0
  44449a:	mov    DWORD PTR [rbx+0x130],0x0
  4444a4:	mov    QWORD PTR [rbx+0xd8],r14
  4444ab:	mov    QWORD PTR [rbx+0xe0],r13
  4444b2:	mov    QWORD PTR [rbx+0xc8],r12
  4444b9:	add    rsp,0x20
  4444bd:	pop    r14
  4444bf:	pop    r13
  4444c1:	pop    r12
  4444c3:	pop    rdi
  4444c4:	pop    rsi
  4444c5:	pop    rbp
  4444c6:	pop    rbx
  4444c7:	ret    
  4444c8:	rex.W push rbx
  4444ca:	push   rbp
  4444cb:	push   rsi
  4444cc:	push   rdi
  4444cd:	sub    rsp,0x28
  4444d1:	mov    rbx,rcx
  4444d4:	mov    rcx,QWORD PTR [rcx+0x148]
  4444db:	call   0x40215c
  4444e0:	movsxd rdi,DWORD PTR [rbx+0x140]
  4444e7:	test   edi,edi
  4444e9:	mov    rsi,rdi
  4444ec:	je     0x44451e
  4444ee:	shl    rsi,0x3
  4444f2:	mov    rax,QWORD PTR [rbx+0x138]
  4444f9:	sub    rsi,0x8
  4444fd:	add    edi,0xffffffff
  444500:	mov    rbp,QWORD PTR [rsi+rax*1]
  444504:	test   rbp,rbp
  444507:	je     0x44451a
  444509:	mov    rcx,QWORD PTR [rbp+0x0]
  44450d:	call   0x40215c
  444512:	mov    rcx,rbp
  444515:	call   0x40215c
  44451a:	test   edi,edi
  44451c:	jne    0x4444f2
  44451e:	mov    rcx,QWORD PTR [rbx+0x138]
  444525:	call   0x40215c
  44452a:	mov    rcx,QWORD PTR [rbx+0x128]
  444531:	call   0x40215c
  444536:	movsxd rdi,DWORD PTR [rbx+0x120]
  44453d:	test   edi,edi
  44453f:	mov    rsi,rdi
  444542:	je     0x444574
  444544:	shl    rsi,0x3
  444548:	mov    rax,QWORD PTR [rbx+0x118]
  44454f:	sub    rsi,0x8
  444553:	add    edi,0xffffffff
  444556:	mov    rbp,QWORD PTR [rsi+rax*1]
  44455a:	test   rbp,rbp
  44455d:	je     0x444570
  44455f:	mov    rcx,QWORD PTR [rbp+0x0]
  444563:	call   0x40215c
  444568:	mov    rcx,rbp
  44456b:	call   0x40215c
  444570:	test   edi,edi
  444572:	jne    0x444548
  444574:	mov    rcx,QWORD PTR [rbx+0x118]
  44457b:	call   0x40215c
  444580:	mov    rcx,QWORD PTR [rbx+0x108]
  444587:	call   0x40215c
  44458c:	mov    rcx,QWORD PTR [rbx+0xf8]
  444593:	call   0x40215c
  444598:	mov    rcx,rbx
  44459b:	add    rsp,0x28
  44459f:	pop    rdi
  4445a0:	pop    rsi
  4445a1:	pop    rbp
  4445a2:	pop    rbx
  4445a3:	jmp    0x448d90
  4445a8:	rex.W push rbx
  4445aa:	sub    rsp,0x20
  4445ae:	lea    rax,[rip+0xfcab]        # 0x454260
  4445b5:	mov    rbx,rcx
  4445b8:	mov    QWORD PTR [rcx],rax
  4445bb:	mov    rcx,QWORD PTR [rcx+0x170]
  4445c2:	call   0x40215c
  4445c7:	mov    rcx,QWORD PTR [rbx+0x160]
  4445ce:	call   0x40215c
  4445d3:	lea    rcx,[rbx+0x8]
  4445d7:	add    rsp,0x20
  4445db:	pop    rbx
  4445dc:	jmp    0x4444c8
  4445e1:	int3   
  4445e2:	int3   
  4445e3:	int3   
  4445e4:	rex.W push rbx
  4445e6:	push   rbp
  4445e7:	push   rsi
  4445e8:	push   rdi
  4445e9:	push   r12
  4445eb:	sub    rsp,0x40
  4445ef:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4445f8:	mov    rdi,rdx
  4445fb:	mov    rsi,rcx
  4445fe:	xor    ebx,ebx
  444600:	cmp    DWORD PTR [rcx+0x8],ebx
  444603:	jbe    0x44466d
  444605:	mov    rbp,rbx
  444608:	mov    r12,rbx
  44460b:	mov    rax,QWORD PTR [rsi]
  44460e:	mov    rcx,QWORD PTR [r12+rax*1]
  444612:	mov    rdx,QWORD PTR [rcx]
  444615:	mov    rcx,rdi
  444618:	call   0x402474
  44461d:	mov    rdx,QWORD PTR [rax]
  444620:	lea    rcx,[rip+0xa581]        # 0x44eba8
  444627:	call   QWORD PTR [rip+0x8d43]        # 0x44d370
  44462d:	mov    r11,QWORD PTR [rsi+0x10]
  444631:	mov    edx,DWORD PTR [r11+rbp*1]
  444635:	lea    rcx,[rsp+0x28]
  44463a:	call   0x4068d0
  44463f:	nop
  444640:	mov    rdx,QWORD PTR [rax]
  444643:	mov    rcx,rdi
  444646:	call   0x402474
  44464b:	mov    rcx,rax
  44464e:	call   0x402454
  444653:	nop
  444654:	mov    rcx,QWORD PTR [rsp+0x28]
  444659:	call   0x40215c
  44465e:	inc    ebx
  444660:	add    r12,0x8
  444664:	add    rbp,0x4
  444668:	cmp    ebx,DWORD PTR [rsi+0x8]
  44466b:	jb     0x44460b
  44466d:	mov    rdx,QWORD PTR [rdi]
  444670:	lea    rcx,[rip+0xfc71]        # 0x4542e8
  444677:	call   QWORD PTR [rip+0x8cf3]        # 0x44d370
  44467d:	mov    rcx,rdi
  444680:	add    rsp,0x40
  444684:	pop    r12
  444686:	pop    rdi
  444687:	pop    rsi
  444688:	pop    rbp
  444689:	pop    rbx
  44468a:	jmp    0x402454
  44468f:	int3   
  444690:	int3   
  444691:	int3   
  444692:	int3   
  444693:	int3   
  444694:	rex.W push rbp
  444696:	sub    rsp,0x20
  44469a:	mov    rbp,rdx
  44469d:	lea    rcx,[rbp+0x28]
  4446a1:	call   0x401000
  4446a6:	add    rsp,0x20
  4446aa:	pop    rbp
  4446ab:	ret    
  4446ac:	rex.W push rbx
  4446ae:	push   rbp
  4446af:	push   rsi
  4446b0:	push   rdi
  4446b1:	push   r12
  4446b3:	push   r13
  4446b5:	sub    rsp,0x58
  4446b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4446c2:	mov    rbp,r9
  4446c5:	mov    rsi,r8
  4446c8:	mov    r12,rdx
  4446cb:	mov    r13d,ecx
  4446ce:	xor    ebx,ebx
  4446d0:	mov    rdi,QWORD PTR [rsp+0xb0]
  4446d8:	cmp    DWORD PTR [rdx+0x140],ebx
  4446de:	je     0x44474c
  4446e0:	test   rdi,rdi
  4446e3:	je     0x444747
  4446e5:	mov    rcx,rdi
  4446e8:	call   0x402454
  4446ed:	mov    rdx,QWORD PTR [rdi]
  4446f0:	lea    rcx,[rip+0xfc89]        # 0x454380
  4446f7:	call   QWORD PTR [rip+0x8c73]        # 0x44d370
  4446fd:	mov    rcx,rdi
  444700:	call   0x402454
  444705:	mov    rcx,rdi
  444708:	call   0x402454
  44470d:	lea    rcx,[r12+0x138]
  444715:	mov    rdx,rdi
  444718:	call   0x4445e4
  44471d:	mov    ebx,DWORD PTR [r12+0x140]
  444725:	mov    rdx,QWORD PTR [rdi]
  444728:	lea    rcx,[rip+0xfc41]        # 0x454370
  44472f:	call   QWORD PTR [rip+0x8c3b]        # 0x44d370
  444735:	mov    edx,ebx
  444737:	mov    rcx,rdi
  44473a:	call   0x40265c
  44473f:	mov    rcx,rdi
  444742:	call   0x402454
  444747:	mov    ebx,0x1
  44474c:	test   r13d,r13d
  44474f:	jne    0x44485c
  444755:	cmp    DWORD PTR [rsi],r13d
  444758:	jne    0x44485c
  44475e:	cmp    DWORD PTR [rsi+0x10],r13d
  444762:	jne    0x44485c
  444768:	cmp    DWORD PTR [rsi+0x20],r13d
  44476c:	jne    0x44485c
  444772:	mov    esi,DWORD PTR [r12+0x120]
  44477a:	test   esi,esi
  44477c:	jne    0x4447ce
  44477e:	cmp    BYTE PTR [rsp+0xb8],sil
  444786:	je     0x444855
  44478c:	cmp    DWORD PTR [r12+0x140],esi
  444794:	jne    0x444855
  44479a:	test   rbp,rbp
  44479d:	je     0x444855
  4447a3:	test   rdi,rdi
  4447a6:	je     0x4447b0
  4447a8:	mov    rcx,rdi
  4447ab:	call   0x402438
  4447b0:	mov    rdx,QWORD PTR [rbp+0x0]
  4447b4:	mov    rcx,QWORD PTR [rip+0x2405d]        # 0x468818
  4447bb:	call   QWORD PTR [rip+0x8baf]        # 0x44d370
  4447c1:	mov    rcx,rbp
  4447c4:	call   0x402454
  4447c9:	jmp    0x444855
  4447ce:	test   rdi,rdi
  4447d1:	je     0x444850
  4447d3:	mov    rcx,rdi
  4447d6:	call   0x402454
  4447db:	mov    rdx,QWORD PTR [rdi]
  4447de:	lea    rcx,[rip+0xfb73]        # 0x454358
  4447e5:	call   QWORD PTR [rip+0x8b85]        # 0x44d370
  4447eb:	mov    rcx,rdi
  4447ee:	call   0x402454
  4447f3:	mov    rcx,rdi
  4447f6:	call   0x402454
  4447fb:	lea    rcx,[r12+0x118]
  444803:	mov    rdx,rdi
  444806:	call   0x4445e4
  44480b:	mov    rdx,QWORD PTR [rdi]
  44480e:	lea    rcx,[rip+0xfb2b]        # 0x454340
  444815:	call   QWORD PTR [rip+0x8b55]        # 0x44d370
  44481b:	mov    edx,esi
  44481d:	mov    rcx,rdi
  444820:	call   0x40265c
  444825:	mov    rdx,QWORD PTR [rax]
  444828:	lea    rcx,[rip+0xfb05]        # 0x454334
  44482f:	call   QWORD PTR [rip+0x8b3b]        # 0x44d370
  444835:	cmp    esi,0x1
  444838:	jbe    0x444848
  44483a:	mov    rdx,QWORD PTR [rdi]
  44483d:	mov    ecx,0x73
  444842:	call   QWORD PTR [rip+0x8b20]        # 0x44d368
  444848:	mov    rcx,rdi
  44484b:	call   0x402454
  444850:	mov    ebx,0x1
  444855:	mov    eax,ebx
  444857:	jmp    0x444924
  44485c:	test   rdi,rdi
  44485f:	je     0x44491f
  444865:	lea    rcx,[rsp+0x28]
  44486a:	call   0x403150
  44486f:	nop
  444870:	cmp    DWORD PTR [rsi+0x10],0x0
  444874:	je     0x44488e
  444876:	mov    rdx,QWORD PTR [rsi+0x8]
  44487a:	lea    rcx,[rsp+0x28]
  44487f:	call   0x403560
  444884:	lea    rcx,[rsp+0x28]
  444889:	call   0x4033ac
  44488e:	xor    ebx,ebx
  444890:	cmp    DWORD PTR [rsi+0x20],ebx
  444893:	jbe    0x4448be
  444895:	xor    ebp,ebp
  444897:	mov    rax,QWORD PTR [rsi+0x18]
  44489b:	mov    rdx,QWORD PTR [rax+rbp*1]
  44489f:	lea    rcx,[rsp+0x28]
  4448a4:	call   0x403444
  4448a9:	lea    rcx,[rsp+0x28]
  4448ae:	call   0x4033ac
  4448b3:	inc    ebx
  4448b5:	add    rbp,0x8
  4448b9:	cmp    ebx,DWORD PTR [rsi+0x20]
  4448bc:	jb     0x444897
  4448be:	mov    edx,DWORD PTR [rsi]
  4448c0:	test   edx,edx
  4448c2:	je     0x4448f1
  4448c4:	lea    rcx,[rsp+0x38]
  4448c9:	call   0x4068d0
  4448ce:	nop
  4448cf:	mov    rdx,rax
  4448d2:	lea    rcx,[rsp+0x28]
  4448d7:	call   0x403444
  4448dc:	nop
  4448dd:	mov    rcx,QWORD PTR [rsp+0x38]
  4448e2:	call   0x40215c
  4448e7:	lea    rcx,[rsp+0x28]
  4448ec:	call   0x4033ac
  4448f1:	cmp    DWORD PTR [rsp+0x30],0x0
  4448f6:	je     0x444915
  4448f8:	lea    rdx,[rip+0xfa21]        # 0x454320
  4448ff:	mov    rcx,rdi
  444902:	call   0x402474
  444907:	mov    rcx,rax
  44490a:	mov    rdx,QWORD PTR [rsp+0x28]
  44490f:	call   0x402474
  444914:	nop
  444915:	mov    rcx,QWORD PTR [rsp+0x28]
  44491a:	call   0x40215c
  44491f:	mov    eax,0x2
  444924:	add    rsp,0x58
  444928:	pop    r13
  44492a:	pop    r12
  44492c:	pop    rdi
  44492d:	pop    rsi
  44492e:	pop    rbp
  44492f:	pop    rbx
  444930:	ret    
  444931:	int3   
  444932:	int3   
  444933:	int3   
  444934:	int3   
  444935:	int3   
  444936:	int3   
  444937:	int3   
  444938:	int3   
  444939:	int3   
  44493a:	int3   
  44493b:	int3   
  44493c:	rex.W push rbp
  44493e:	sub    rsp,0x20
  444942:	mov    rbp,rdx
  444945:	lea    rcx,[rbp+0x28]
  444949:	call   0x401000
  44494e:	add    rsp,0x20
  444952:	pop    rbp
  444953:	ret    
  444954:	int3   
  444955:	int3   
  444956:	int3   
  444957:	int3   
  444958:	int3   
  444959:	int3   
  44495a:	int3   
  44495b:	int3   
  44495c:	rex.W push rbp
  44495e:	sub    rsp,0x20
  444962:	mov    rbp,rdx
  444965:	lea    rcx,[rbp+0x38]
  444969:	call   0x401000
  44496e:	add    rsp,0x20
  444972:	pop    rbp
  444973:	ret    
  444974:	rex.W push rbx
  444976:	sub    rsp,0x20
  44497a:	mov    rbx,rcx
  44497d:	mov    rcx,QWORD PTR [rcx+0x170]
  444984:	call   0x40215c
  444989:	lea    rcx,[rbx+0x10]
  44498d:	add    rsp,0x20
  444991:	pop    rbx
  444992:	jmp    0x4444c8
  444997:	int3   
  444998:	rex.W push rbx
  44499a:	push   rbp
  44499b:	push   rsi
  44499c:	push   rdi
  44499d:	sub    rsp,0x28
  4449a1:	movsxd rdi,DWORD PTR [rcx+0x20]
  4449a5:	mov    rbx,rcx
  4449a8:	test   edi,edi
  4449aa:	mov    rsi,rdi
  4449ad:	je     0x4449dc
  4449af:	shl    rsi,0x3
  4449b3:	mov    rax,QWORD PTR [rbx+0x18]
  4449b7:	sub    rsi,0x8
  4449bb:	add    edi,0xffffffff
  4449be:	mov    rbp,QWORD PTR [rsi+rax*1]
  4449c2:	test   rbp,rbp
  4449c5:	je     0x4449d8
  4449c7:	mov    rcx,QWORD PTR [rbp+0x0]
  4449cb:	call   0x40215c
  4449d0:	mov    rcx,rbp
  4449d3:	call   0x40215c
  4449d8:	test   edi,edi
  4449da:	jne    0x4449b3
  4449dc:	mov    rcx,QWORD PTR [rbx+0x18]
  4449e0:	call   0x40215c
  4449e5:	mov    rcx,QWORD PTR [rbx+0x8]
  4449e9:	add    rsp,0x28
  4449ed:	pop    rdi
  4449ee:	pop    rsi
  4449ef:	pop    rbp
  4449f0:	pop    rbx
  4449f1:	jmp    0x40215c
  4449f6:	int3   
  4449f7:	int3   
  4449f8:	mov    QWORD PTR [rsp+0x8],rcx
  4449fd:	push   rbx
  4449fe:	push   rbp
  4449ff:	push   rsi
  444a00:	push   rdi
  444a01:	sub    rsp,0x38
  444a05:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  444a0e:	mov    rdi,rcx
  444a11:	movsxd rbx,DWORD PTR [rcx+0x8]
  444a15:	mov    rbp,rbx
  444a18:	test   ebx,ebx
  444a1a:	je     0x444a66
  444a1c:	shl    rbp,0x3
  444a20:	add    ebx,0xffffffff
  444a23:	sub    rbp,0x8
  444a27:	mov    rax,QWORD PTR [rdi]
  444a2a:	mov    rsi,QWORD PTR [rax+rbp*1]
  444a2e:	mov    QWORD PTR [rsp+0x68],rsi
  444a33:	test   rsi,rsi
  444a36:	je     0x444a62
  444a38:	mov    rcx,QWORD PTR [rsi+0x40]
  444a3c:	test   rcx,rcx
  444a3f:	je     0x444a48
  444a41:	mov    rax,QWORD PTR [rcx]
  444a44:	call   QWORD PTR [rax+0x10]
  444a47:	nop
  444a48:	mov    rcx,QWORD PTR [rsi+0x8]
  444a4c:	call   0x40215c
  444a51:	nop
  444a52:	mov    rcx,rsi
  444a55:	call   0x40670c
  444a5a:	mov    rcx,rsi
  444a5d:	call   0x40215c
  444a62:	test   ebx,ebx
  444a64:	jne    0x444a20
  444a66:	mov    rcx,QWORD PTR [rdi]
  444a69:	add    rsp,0x38
  444a6d:	pop    rdi
  444a6e:	pop    rsi
  444a6f:	pop    rbp
  444a70:	pop    rbx
  444a71:	jmp    0x40215c
  444a76:	int3   
  444a77:	int3   
  444a78:	rex.W push rbp
  444a7a:	sub    rsp,0x20
  444a7e:	mov    rbp,rdx
  444a81:	mov    rcx,QWORD PTR [rbp+0x60]
  444a85:	call   0x401000
  444a8a:	add    rsp,0x20
  444a8e:	pop    rbp
  444a8f:	ret    
  444a90:	int3   
  444a91:	int3   
  444a92:	int3   
  444a93:	int3   
  444a94:	int3   
  444a95:	int3   
  444a96:	int3   
  444a97:	int3   
  444a98:	rex.W push rbp
  444a9a:	sub    rsp,0x20
  444a9e:	mov    rbp,rdx
  444aa1:	mov    rcx,QWORD PTR [rbp+0x68]
  444aa5:	call   0x4268e4
  444aaa:	add    rsp,0x20
  444aae:	pop    rbp
  444aaf:	ret    
  444ab0:	int3   
  444ab1:	int3   
  444ab2:	int3   
  444ab3:	int3   
  444ab4:	int3   
  444ab5:	int3   
  444ab6:	int3   
  444ab7:	int3   
  444ab8:	rex.W push rbp
  444aba:	sub    rsp,0x20
  444abe:	mov    rbp,rdx
  444ac1:	mov    rcx,QWORD PTR [rbp+0x68]
  444ac5:	add    rcx,0x8
  444ac9:	call   0x401000
  444ace:	add    rsp,0x20
  444ad2:	pop    rbp
  444ad3:	ret    
  444ad4:	rex.W push rbx
  444ad6:	push   rbp
  444ad7:	push   rsi
  444ad8:	push   rdi
  444ad9:	sub    rsp,0x28
  444add:	movsxd rbx,DWORD PTR [rcx+0x8]
  444ae1:	mov    rdi,rcx
  444ae4:	test   ebx,ebx
  444ae6:	mov    rsi,rbx
  444ae9:	je     0x444b17
  444aeb:	shl    rsi,0x3
  444aef:	mov    rax,QWORD PTR [rdi]
  444af2:	sub    rsi,0x8
  444af6:	add    ebx,0xffffffff
  444af9:	mov    rbp,QWORD PTR [rsi+rax*1]
  444afd:	test   rbp,rbp
  444b00:	je     0x444b13
  444b02:	mov    rcx,QWORD PTR [rbp+0x8]
  444b06:	call   0x40215c
  444b0b:	mov    rcx,rbp
  444b0e:	call   0x40215c
  444b13:	test   ebx,ebx
  444b15:	jne    0x444aef
  444b17:	mov    rcx,QWORD PTR [rdi]
  444b1a:	add    rsp,0x28
  444b1e:	pop    rdi
  444b1f:	pop    rsi
  444b20:	pop    rbp
  444b21:	pop    rbx
  444b22:	jmp    0x40215c
  444b27:	int3   
  444b28:	rex.W push rbx
  444b2a:	push   rbp
  444b2b:	push   rsi
  444b2c:	push   rdi
  444b2d:	sub    rsp,0x28
  444b31:	movsxd rbx,DWORD PTR [rcx+0x8]
  444b35:	mov    rdi,rcx
  444b38:	test   ebx,ebx
  444b3a:	mov    rsi,rbx
  444b3d:	je     0x444b74
  444b3f:	shl    rsi,0x3
  444b43:	mov    rax,QWORD PTR [rdi]
  444b46:	sub    rsi,0x8
  444b4a:	add    ebx,0xffffffff
  444b4d:	mov    rbp,QWORD PTR [rsi+rax*1]
  444b51:	test   rbp,rbp
  444b54:	je     0x444b70
  444b56:	mov    rcx,QWORD PTR [rbp+0x10]
  444b5a:	call   0x40215c
  444b5f:	mov    rcx,QWORD PTR [rbp+0x0]
  444b63:	call   0x40215c
  444b68:	mov    rcx,rbp
  444b6b:	call   0x40215c
  444b70:	test   ebx,ebx
  444b72:	jne    0x444b43
  444b74:	mov    rcx,QWORD PTR [rdi]
  444b77:	add    rsp,0x28
  444b7b:	pop    rdi
  444b7c:	pop    rsi
  444b7d:	pop    rbp
  444b7e:	pop    rbx
  444b7f:	jmp    0x40215c
  444b84:	mov    QWORD PTR [rsp+0x8],rcx
  444b89:	push   rbx
  444b8a:	push   rbp
  444b8b:	push   rsi
  444b8c:	push   rdi
  444b8d:	sub    rsp,0x38
  444b91:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  444b9a:	mov    rbx,rcx
  444b9d:	mov    rcx,QWORD PTR [rcx+0x8]
  444ba1:	test   rcx,rcx
  444ba4:	je     0x444bb4
  444ba6:	mov    rax,QWORD PTR [rcx]
  444ba9:	call   QWORD PTR [rax+0x10]
  444bac:	mov    QWORD PTR [rbx+0x8],0x0
  444bb4:	mov    rcx,QWORD PTR [rbx]
  444bb7:	test   rcx,rcx
  444bba:	je     0x444bc9
  444bbc:	mov    rax,QWORD PTR [rcx]
  444bbf:	call   QWORD PTR [rax+0x10]
  444bc2:	mov    QWORD PTR [rbx],0x0
  444bc9:	movsxd rdi,DWORD PTR [rbx+0x28]
  444bcd:	mov    rsi,rdi
  444bd0:	test   edi,edi
  444bd2:	je     0x444c01
  444bd4:	shl    rsi,0x3
  444bd8:	add    edi,0xffffffff
  444bdb:	sub    rsi,0x8
  444bdf:	mov    rax,QWORD PTR [rbx+0x20]
  444be3:	mov    rbp,QWORD PTR [rsi+rax*1]
  444be7:	test   rbp,rbp
  444bea:	je     0x444bfd
  444bec:	mov    rcx,QWORD PTR [rbp+0x8]
  444bf0:	call   0x40215c
  444bf5:	mov    rcx,rbp
  444bf8:	call   0x40215c
  444bfd:	test   edi,edi
  444bff:	jne    0x444bd8
  444c01:	mov    rcx,QWORD PTR [rbx+0x20]
  444c05:	call   0x40215c
  444c0a:	nop
  444c0b:	movsxd rdi,DWORD PTR [rbx+0x18]
  444c0f:	mov    rsi,rdi
  444c12:	test   edi,edi
  444c14:	je     0x444c43
  444c16:	shl    rsi,0x3
  444c1a:	add    edi,0xffffffff
  444c1d:	sub    rsi,0x8
  444c21:	mov    rax,QWORD PTR [rbx+0x10]
  444c25:	mov    rbp,QWORD PTR [rsi+rax*1]
  444c29:	test   rbp,rbp
  444c2c:	je     0x444c3f
  444c2e:	mov    rcx,QWORD PTR [rbp+0x8]
  444c32:	call   0x40215c
  444c37:	mov    rcx,rbp
  444c3a:	call   0x40215c
  444c3f:	test   edi,edi
  444c41:	jne    0x444c1a
  444c43:	mov    rcx,QWORD PTR [rbx+0x10]
  444c47:	call   0x40215c
  444c4c:	nop
  444c4d:	mov    rcx,QWORD PTR [rbx+0x8]
  444c51:	test   rcx,rcx
  444c54:	je     0x444c5d
  444c56:	mov    rax,QWORD PTR [rcx]
  444c59:	call   QWORD PTR [rax+0x10]
  444c5c:	nop
  444c5d:	mov    rcx,QWORD PTR [rbx]
  444c60:	test   rcx,rcx
  444c63:	je     0x444c6b
  444c65:	mov    rax,QWORD PTR [rcx]
  444c68:	call   QWORD PTR [rax+0x10]
  444c6b:	add    rsp,0x38
  444c6f:	pop    rdi
  444c70:	pop    rsi
  444c71:	pop    rbp
  444c72:	pop    rbx
  444c73:	ret    
  444c74:	rex.W push rbp
  444c76:	sub    rsp,0x20
  444c7a:	mov    rbp,rdx
  444c7d:	mov    rcx,QWORD PTR [rbp+0x60]
  444c81:	call   0x4176b4
  444c86:	add    rsp,0x20
  444c8a:	pop    rbp
  444c8b:	ret    
  444c8c:	int3   
  444c8d:	int3   
  444c8e:	int3   
  444c8f:	int3   
  444c90:	int3   
  444c91:	int3   
  444c92:	int3   
  444c93:	int3   
  444c94:	rex.W push rbp
  444c96:	sub    rsp,0x20
  444c9a:	mov    rbp,rdx
  444c9d:	mov    rcx,QWORD PTR [rbp+0x60]
  444ca1:	add    rcx,0x8
  444ca5:	call   0x4176b4
  444caa:	add    rsp,0x20
  444cae:	pop    rbp
  444caf:	ret    
  444cb0:	int3   
  444cb1:	int3   
  444cb2:	int3   
  444cb3:	int3   
  444cb4:	rex.W push rbp
  444cb6:	sub    rsp,0x20
  444cba:	mov    rbp,rdx
  444cbd:	mov    rcx,QWORD PTR [rbp+0x60]
  444cc1:	add    rcx,0x10
  444cc5:	call   0x444ad4
  444cca:	add    rsp,0x20
  444cce:	pop    rbp
  444ccf:	ret    
  444cd0:	int3   
  444cd1:	int3   
  444cd2:	int3   
  444cd3:	int3   
  444cd4:	rex.W push rbp
  444cd6:	sub    rsp,0x20
  444cda:	mov    rbp,rdx
  444cdd:	mov    rcx,QWORD PTR [rbp+0x60]
  444ce1:	add    rcx,0x20
  444ce5:	call   0x444ad4
  444cea:	add    rsp,0x20
  444cee:	pop    rbp
  444cef:	ret    
  444cf0:	rex.W push rbx
  444cf2:	push   rdi
  444cf3:	sub    rsp,0x28
  444cf7:	xor    edi,edi
  444cf9:	mov    rbx,rcx
  444cfc:	mov    BYTE PTR [rcx],dil
  444cff:	mov    BYTE PTR [rcx+0x1],dil
  444d03:	mov    BYTE PTR [rcx+0x2],dil
  444d07:	mov    BYTE PTR [rcx+0x3],dil
  444d0b:	mov    DWORD PTR [rcx+0x4],edi
  444d0e:	mov    DWORD PTR [rcx+0x8],edi
  444d11:	add    rcx,0x10
  444d15:	call   0x403150
  444d1a:	mov    BYTE PTR [rbx+0x20],dil
  444d1e:	mov    BYTE PTR [rbx+0x21],dil
  444d22:	mov    BYTE PTR [rbx+0x23],dil
  444d26:	mov    BYTE PTR [rbx+0x25],dil
  444d2a:	mov    BYTE PTR [rbx+0x27],dil
  444d2e:	mov    BYTE PTR [rbx+0x28],dil
  444d32:	mov    BYTE PTR [rbx+0x29],dil
  444d36:	mov    BYTE PTR [rbx+0x22],0x1
  444d3a:	mov    BYTE PTR [rbx+0x24],0x1
  444d3e:	mov    BYTE PTR [rbx+0x26],0x1
  444d42:	mov    BYTE PTR [rbx+0x30],dil
  444d46:	mov    BYTE PTR [rbx+0x31],dil
  444d4a:	mov    BYTE PTR [rbx+0x32],dil
  444d4e:	mov    BYTE PTR [rbx+0x33],dil
  444d52:	mov    QWORD PTR [rbx+0x38],rdi
  444d56:	mov    DWORD PTR [rbx+0x40],edi
  444d59:	mov    DWORD PTR [rbx+0x44],edi
  444d5c:	mov    rax,rbx
  444d5f:	add    rsp,0x28
  444d63:	pop    rdi
  444d64:	pop    rbx
  444d65:	ret    
  444d66:	int3   
  444d67:	int3   
  444d68:	rex.W push rbx
  444d6a:	push   rbp
  444d6b:	push   rsi
  444d6c:	push   rdi
  444d6d:	sub    rsp,0x28
  444d71:	movsxd rbx,DWORD PTR [rcx+0x30]
  444d75:	mov    rdi,rcx
  444d78:	test   ebx,ebx
  444d7a:	mov    rsi,rbx
  444d7d:	je     0x444db5
  444d7f:	shl    rsi,0x3
  444d83:	mov    rax,QWORD PTR [rdi+0x28]
  444d87:	sub    rsi,0x8
  444d8b:	add    ebx,0xffffffff
  444d8e:	mov    rbp,QWORD PTR [rsi+rax*1]
  444d92:	test   rbp,rbp
  444d95:	je     0x444db1
  444d97:	mov    rcx,QWORD PTR [rbp+0x10]
  444d9b:	call   0x40215c
  444da0:	mov    rcx,QWORD PTR [rbp+0x0]
  444da4:	call   0x40215c
  444da9:	mov    rcx,rbp
  444dac:	call   0x40215c
  444db1:	test   ebx,ebx
  444db3:	jne    0x444d83
  444db5:	mov    rcx,QWORD PTR [rdi+0x28]
  444db9:	add    rsp,0x28
  444dbd:	pop    rdi
  444dbe:	pop    rsi
  444dbf:	pop    rbp
  444dc0:	pop    rbx
  444dc1:	jmp    0x40215c
  444dc6:	int3   
  444dc7:	int3   
  444dc8:	rex.W push rbx
  444dca:	push   rbp
  444dcb:	push   rsi
  444dcc:	push   rdi
  444dcd:	sub    rsp,0x28
  444dd1:	mov    rbx,rcx
  444dd4:	mov    rcx,QWORD PTR [rcx+0x158]
  444ddb:	call   0x40215c
  444de0:	movsxd rdi,DWORD PTR [rbx+0x150]
  444de7:	test   edi,edi
  444de9:	mov    rbp,rdi
  444dec:	je     0x444e26
  444dee:	shl    rbp,0x3
  444df2:	mov    rax,QWORD PTR [rbx+0x148]
  444df9:	sub    rbp,0x8
  444dfd:	add    edi,0xffffffff
  444e00:	mov    rsi,QWORD PTR [rax+rbp*1]
  444e04:	test   rsi,rsi
  444e07:	je     0x444e22
  444e09:	mov    rcx,QWORD PTR [rsi+0x10]
  444e0d:	call   0x40215c
  444e12:	mov    rcx,QWORD PTR [rsi]
  444e15:	call   0x40215c
  444e1a:	mov    rcx,rsi
  444e1d:	call   0x40215c
  444e22:	test   edi,edi
  444e24:	jne    0x444df2
  444e26:	mov    rcx,QWORD PTR [rbx+0x148]
  444e2d:	call   0x40215c
  444e32:	mov    rcx,QWORD PTR [rbx+0x128]
  444e39:	call   0x40215c
  444e3e:	mov    rcx,QWORD PTR [rbx+0x110]
  444e45:	call   0x40215c
  444e4a:	mov    rcx,QWORD PTR [rbx+0x100]
  444e51:	call   0x40215c
  444e56:	mov    rcx,QWORD PTR [rbx+0xe8]
  444e5d:	call   0x40215c
  444e62:	mov    rcx,QWORD PTR [rbx+0xd0]
  444e69:	call   0x40215c
  444e6e:	mov    rcx,QWORD PTR [rbx+0xb8]
  444e75:	call   0x40215c
  444e7a:	mov    rcx,QWORD PTR [rbx+0xa8]
  444e81:	call   0x40215c
  444e86:	mov    rcx,QWORD PTR [rbx+0x90]
  444e8d:	call   0x40215c
  444e92:	mov    rcx,QWORD PTR [rbx+0x80]
  444e99:	call   0x40215c
  444e9e:	mov    rcx,QWORD PTR [rbx+0x70]
  444ea2:	call   0x40215c
  444ea7:	mov    rcx,QWORD PTR [rbx+0x60]
  444eab:	call   0x40215c
  444eb0:	mov    rcx,QWORD PTR [rbx+0x50]
  444eb4:	call   0x40215c
  444eb9:	lea    rcx,[rbx+0x38]
  444ebd:	call   0x4443a4
  444ec2:	movsxd rbp,DWORD PTR [rbx+0x30]
  444ec6:	test   ebp,ebp
  444ec8:	mov    rsi,rbp
  444ecb:	je     0x444f02
  444ecd:	shl    rsi,0x3
  444ed1:	mov    rax,QWORD PTR [rbx+0x28]
  444ed5:	sub    rsi,0x8
  444ed9:	add    ebp,0xffffffff
  444edc:	mov    rdi,QWORD PTR [rsi+rax*1]
  444ee0:	test   rdi,rdi
  444ee3:	je     0x444efe
  444ee5:	mov    rcx,QWORD PTR [rdi+0x10]
  444ee9:	call   0x40215c
  444eee:	mov    rcx,QWORD PTR [rdi]
  444ef1:	call   0x40215c
  444ef6:	mov    rcx,rdi
  444ef9:	call   0x40215c
  444efe:	test   ebp,ebp
  444f00:	jne    0x444ed1
  444f02:	mov    rcx,QWORD PTR [rbx+0x28]
  444f06:	add    rsp,0x28
  444f0a:	pop    rdi
  444f0b:	pop    rsi
  444f0c:	pop    rbp
  444f0d:	pop    rbx
  444f0e:	jmp    0x40215c
  444f13:	int3   
  444f14:	mov    QWORD PTR [rsp+0x8],rcx
  444f19:	push   rbx
  444f1a:	push   rdi
  444f1b:	sub    rsp,0x38
  444f1f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  444f28:	mov    rdi,rcx
  444f2b:	lea    rax,[rip+0xf2be]        # 0x4541f0
  444f32:	mov    QWORD PTR [rcx],rax
  444f35:	lea    rax,[rip+0xf094]        # 0x453fd0
  444f3c:	mov    QWORD PTR [rcx+0x8],rax
  444f40:	lea    rax,[rip+0xf089]        # 0x453fd0
  444f47:	mov    QWORD PTR [rcx+0x10],rax
  444f4b:	lea    rbx,[rcx+0x18]
  444f4f:	mov    QWORD PTR [rsp+0x58],rbx
  444f54:	lea    rax,[rip+0xf4ad]        # 0x454408
  444f5b:	mov    QWORD PTR [rbx],rax
  444f5e:	lea    rcx,[rbx+0x8]
  444f62:	mov    edx,0xc8
  444f67:	call   0x440e04
  444f6c:	nop
  444f6d:	mov    BYTE PTR [rbx+0xf0],0x0
  444f74:	mov    BYTE PTR [rbx+0xf1],0x0
  444f7b:	mov    BYTE PTR [rbx+0xf2],0x0
  444f82:	mov    BYTE PTR [rbx+0xf3],0x0
  444f89:	lea    rcx,[rbx+0xf8]
  444f90:	call   0x403150
  444f95:	nop
  444f96:	mov    DWORD PTR [rdi+0x120],0x0
  444fa0:	lea    rax,[rip+0xf4c9]        # 0x454470
  444fa7:	mov    QWORD PTR [rdi],rax
  444faa:	lea    rax,[rip+0xf49f]        # 0x454450
  444fb1:	mov    QWORD PTR [rdi+0x8],rax
  444fb5:	lea    rax,[rip+0xf474]        # 0x454430
  444fbc:	mov    QWORD PTR [rdi+0x10],rax
  444fc0:	lea    rax,[rip+0xf441]        # 0x454408
  444fc7:	mov    QWORD PTR [rbx],rax
  444fca:	lea    rcx,[rdi+0x128]
  444fd1:	call   0x402b34
  444fd6:	nop
  444fd7:	lea    rcx,[rdi+0x138]
  444fde:	call   0x403150
  444fe3:	nop
  444fe4:	lea    rcx,[rdi+0x148]
  444feb:	call   0x403150
  444ff0:	mov    BYTE PTR [rdi+0x1a8],0x0
  444ff7:	mov    DWORD PTR [rdi+0x1ac],0x1
  445001:	mov    DWORD PTR [rdi+0x1b0],0x0
  44500b:	mov    rax,rdi
  44500e:	add    rsp,0x38
  445012:	pop    rdi
  445013:	pop    rbx
  445014:	ret    
  445015:	int3   
  445016:	int3   
  445017:	int3   
  445018:	int3   
  445019:	int3   
  44501a:	int3   
  44501b:	int3   
  44501c:	int3   
  44501d:	int3   
  44501e:	int3   
  44501f:	int3   
  445020:	int3   
  445021:	int3   
  445022:	int3   
  445023:	int3   
  445024:	rex.W push rbp
  445026:	sub    rsp,0x20
  44502a:	mov    rbp,rdx
  44502d:	mov    rcx,QWORD PTR [rbp+0x58]
  445031:	add    rcx,0x8
  445035:	call   0x448d90
  44503a:	add    rsp,0x20
  44503e:	pop    rbp
  44503f:	ret    
  445040:	int3   
  445041:	int3   
  445042:	int3   
  445043:	int3   
  445044:	rex.W push rbp
  445046:	sub    rsp,0x20
  44504a:	mov    rbp,rdx
  44504d:	mov    rcx,QWORD PTR [rbp+0x50]
  445051:	add    rcx,0x18
  445055:	call   0x440de0
  44505a:	add    rsp,0x20
  44505e:	pop    rbp
  44505f:	ret    
  445060:	int3   
  445061:	int3   
  445062:	int3   
  445063:	int3   
  445064:	rex.W push rbp
  445066:	sub    rsp,0x20
  44506a:	mov    rbp,rdx
  44506d:	mov    rcx,QWORD PTR [rbp+0x50]
  445071:	add    rcx,0x128
  445078:	call   0x401000
  44507d:	add    rsp,0x20
  445081:	pop    rbp
  445082:	ret    
  445083:	int3   
  445084:	rex.W push rbp
  445086:	sub    rsp,0x20
  44508a:	mov    rbp,rdx
  44508d:	mov    rcx,QWORD PTR [rbp+0x50]
  445091:	add    rcx,0x138
  445098:	call   0x401000
  44509d:	add    rsp,0x20
  4450a1:	pop    rbp
  4450a2:	ret    
  4450a3:	int3   
  4450a4:	rex.W push rbx
  4450a6:	push   rbp
  4450a7:	push   rsi
  4450a8:	push   rdi
  4450a9:	sub    rsp,0x28
  4450ad:	mov    rsi,rdx
  4450b0:	mov    rdi,r8
  4450b3:	mov    rbx,rcx
  4450b6:	mov    QWORD PTR [r8],0x0
  4450bd:	mov    ebp,0x10
  4450c2:	lea    rdx,[rip+0xfd27]        # 0x454df0
  4450c9:	mov    r8,rbp
  4450cc:	mov    rcx,rsi
  4450cf:	call   0x44b786
  4450d4:	test   eax,eax
  4450d6:	jne    0x4450dd
  4450d8:	mov    QWORD PTR [rdi],rbx
  4450db:	jmp    0x445138
  4450dd:	lea    rdx,[rip+0xebd4]        # 0x453cb8
  4450e4:	mov    r8,rbp
  4450e7:	mov    rcx,rsi
  4450ea:	call   0x44b786
  4450ef:	test   eax,eax
  4450f1:	je     0x4450d8
  4450f3:	lea    rdx,[rip+0xebae]        # 0x453ca8
  4450fa:	mov    r8,rbp
  4450fd:	mov    rcx,rsi
  445100:	call   0x44b786
  445105:	test   eax,eax
  445107:	jne    0x44510f
  445109:	lea    rdx,[rbx+0x8]
  44510d:	jmp    0x445129
  44510f:	lea    rdx,[rip+0xecb2]        # 0x453dc8
  445116:	mov    r8,rbp
  445119:	mov    rcx,rsi
  44511c:	call   0x44b786
  445121:	test   eax,eax
  445123:	jne    0x445142
  445125:	lea    rdx,[rbx+0x10]
  445129:	mov    rax,rbx
  44512c:	neg    rax
  44512f:	sbb    rcx,rcx
  445132:	and    rcx,rdx
  445135:	mov    QWORD PTR [rdi],rcx
  445138:	inc    DWORD PTR [rbx+0x120]
  44513e:	xor    eax,eax
  445140:	jmp    0x445147
  445142:	mov    eax,0x80004002
  445147:	add    rsp,0x28
  44514b:	pop    rdi
  44514c:	pop    rsi
  44514d:	pop    rbp
  44514e:	pop    rbx
  44514f:	ret    
  445150:	inc    DWORD PTR [rcx+0x120]
  445156:	mov    eax,DWORD PTR [rcx+0x120]
  44515c:	ret    
  44515d:	int3   
  44515e:	int3   
  44515f:	int3   
  445160:	sub    rcx,0x8
  445164:	jmp    0x4450a4
  445169:	int3   
  44516a:	int3   
  44516b:	int3   
  44516c:	sub    rcx,0x8
  445170:	jmp    0x445150
  445175:	int3   
  445176:	int3   
  445177:	int3   
  445178:	sub    rcx,0x10
  44517c:	jmp    0x4450a4
  445181:	int3   
  445182:	int3   
  445183:	int3   
  445184:	sub    rcx,0x10
  445188:	jmp    0x445150
  44518d:	int3   
  44518e:	int3   
  44518f:	int3   
  445190:	rex.W push rbx
  445192:	sub    rsp,0x20
  445196:	add    DWORD PTR [rcx+0x120],0xffffffff
  44519d:	mov    eax,DWORD PTR [rcx+0x120]
  4451a3:	mov    rbx,rcx
  4451a6:	jne    0x4451eb
  4451a8:	mov    rcx,QWORD PTR [rcx+0x148]
  4451af:	call   0x40215c
  4451b4:	mov    rcx,QWORD PTR [rbx+0x138]
  4451bb:	call   0x40215c
  4451c0:	mov    rcx,QWORD PTR [rbx+0x128]
  4451c7:	call   0x40215c
  4451cc:	mov    rcx,QWORD PTR [rbx+0x110]
  4451d3:	call   0x40215c
  4451d8:	lea    rcx,[rbx+0x20]
  4451dc:	call   0x448d90
  4451e1:	mov    rcx,rbx
  4451e4:	call   0x40215c
  4451e9:	xor    eax,eax
  4451eb:	add    rsp,0x20
  4451ef:	pop    rbx
  4451f0:	ret    
  4451f1:	int3   
  4451f2:	int3   
  4451f3:	int3   
  4451f4:	sub    rcx,0x8
  4451f8:	jmp    0x445190
  4451fd:	int3   
  4451fe:	int3   
  4451ff:	int3   
  445200:	sub    rcx,0x10
  445204:	jmp    0x445190
  445209:	int3   
  44520a:	int3   
  44520b:	int3   
  44520c:	mov    QWORD PTR [rsp+0x8],rcx
  445211:	push   rbx
  445212:	push   rdi
  445213:	sub    rsp,0x38
  445217:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  445220:	mov    rbx,rcx
  445223:	mov    edx,0xc8
  445228:	call   0x440e04
  44522d:	nop
  44522e:	xor    edi,edi
  445230:	mov    BYTE PTR [rbx+0xe8],dil
  445237:	mov    BYTE PTR [rbx+0xe9],dil
  44523e:	mov    DWORD PTR [rbx+0xec],0x1
  445248:	mov    DWORD PTR [rbx+0xf0],edi
  44524e:	lea    rcx,[rbx+0xf8]
  445255:	call   0x402b34
  44525a:	nop
  44525b:	lea    rcx,[rbx+0x108]
  445262:	call   0x403150
  445267:	mov    QWORD PTR [rbx+0x118],rdi
  44526e:	mov    DWORD PTR [rbx+0x120],edi
  445274:	mov    DWORD PTR [rbx+0x124],edi
  44527a:	mov    QWORD PTR [rbx+0x128],rdi
  445281:	mov    DWORD PTR [rbx+0x130],edi
  445287:	mov    DWORD PTR [rbx+0x134],edi
  44528d:	mov    QWORD PTR [rbx+0x138],rdi
  445294:	mov    DWORD PTR [rbx+0x140],edi
  44529a:	mov    DWORD PTR [rbx+0x144],edi
  4452a0:	mov    QWORD PTR [rbx+0x148],rdi
  4452a7:	mov    DWORD PTR [rbx+0x150],edi
  4452ad:	mov    DWORD PTR [rbx+0x154],edi
  4452b3:	mov    rax,rbx
  4452b6:	add    rsp,0x38
  4452ba:	pop    rdi
  4452bb:	pop    rbx
  4452bc:	ret    
  4452bd:	int3   
  4452be:	int3   
  4452bf:	int3   
  4452c0:	int3   
  4452c1:	int3   
  4452c2:	int3   
  4452c3:	int3   
  4452c4:	int3   
  4452c5:	int3   
  4452c6:	int3   
  4452c7:	int3   
  4452c8:	int3   
  4452c9:	int3   
  4452ca:	int3   
  4452cb:	int3   
  4452cc:	rex.W push rbp
  4452ce:	sub    rsp,0x20
  4452d2:	mov    rbp,rdx
  4452d5:	mov    rcx,QWORD PTR [rbp+0x50]
  4452d9:	call   0x448d90
  4452de:	add    rsp,0x20
  4452e2:	pop    rbp
  4452e3:	ret    
  4452e4:	int3   
  4452e5:	int3   
  4452e6:	int3   
  4452e7:	int3   
  4452e8:	int3   
  4452e9:	int3   
  4452ea:	int3   
  4452eb:	int3   
  4452ec:	rex.W push rbp
  4452ee:	sub    rsp,0x20
  4452f2:	mov    rbp,rdx
  4452f5:	mov    rcx,QWORD PTR [rbp+0x50]
  4452f9:	add    rcx,0xf8
  445300:	call   0x401000
  445305:	add    rsp,0x20
  445309:	pop    rbp
  44530a:	ret    
  44530b:	int3   
  44530c:	mov    QWORD PTR [rsp+0x8],rcx
  445311:	push   rbx
  445312:	sub    rsp,0x30
  445316:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44531f:	mov    rbx,rcx
  445322:	lea    rax,[rip+0xedf7]        # 0x454120
  445329:	mov    QWORD PTR [rcx],rax
  44532c:	lea    rax,[rip+0xeddd]        # 0x454110
  445333:	mov    QWORD PTR [rcx+0x8],rax
  445337:	add    rcx,0x10
  44533b:	call   0x44520c
  445340:	nop
  445341:	lea    rax,[rip+0xf1e8]        # 0x454530
  445348:	mov    QWORD PTR [rbx],rax
  44534b:	lea    rax,[rip+0xf1ce]        # 0x454520
  445352:	mov    QWORD PTR [rbx+0x8],rax
  445356:	mov    BYTE PTR [rbx+0x168],0x0
  44535d:	lea    rcx,[rbx+0x170]
  445364:	call   0x403150
  445369:	mov    BYTE PTR [rbx+0x180],0x0
  445370:	mov    BYTE PTR [rbx+0x181],0x0
  445377:	mov    rax,rbx
  44537a:	add    rsp,0x30
  44537e:	pop    rbx
  44537f:	ret    
  445380:	int3   
  445381:	int3   
  445382:	int3   
  445383:	int3   
  445384:	int3   
  445385:	int3   
  445386:	int3   
  445387:	int3   
  445388:	int3   
  445389:	int3   
  44538a:	int3   
  44538b:	int3   
  44538c:	rex.W push rbp
  44538e:	sub    rsp,0x20
  445392:	mov    rbp,rdx
  445395:	mov    rcx,QWORD PTR [rbp+0x40]
  445399:	add    rcx,0x10
  44539d:	call   0x4444c8
  4453a2:	add    rsp,0x20
  4453a6:	pop    rbp
  4453a7:	ret    
  4453a8:	mov    QWORD PTR [rsp+0x8],rcx
  4453ad:	push   rbx
  4453ae:	sub    rsp,0x30
  4453b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4453bb:	mov    rbx,rcx
  4453be:	lea    rax,[rip+0xec2b]        # 0x453ff0
  4453c5:	mov    QWORD PTR [rcx],rax
  4453c8:	add    rcx,0x8
  4453cc:	call   0x44520c
  4453d1:	nop
  4453d2:	lea    rax,[rip+0xee87]        # 0x454260
  4453d9:	mov    QWORD PTR [rbx],rax
  4453dc:	lea    rcx,[rbx+0x160]
  4453e3:	call   0x403150
  4453e8:	nop
  4453e9:	lea    rcx,[rbx+0x170]
  4453f0:	call   0x402b34
  4453f5:	mov    BYTE PTR [rbx+0x180],0x1
  4453fc:	mov    BYTE PTR [rbx+0x181],0x0
  445403:	mov    BYTE PTR [rbx+0x182],0x1
  44540a:	mov    BYTE PTR [rbx+0x183],0x1
  445411:	mov    rax,rbx
  445414:	add    rsp,0x30
  445418:	pop    rbx
  445419:	ret    
  44541a:	int3   
  44541b:	int3   
  44541c:	int3   
  44541d:	int3   
  44541e:	int3   
  44541f:	int3   
  445420:	int3   
  445421:	int3   
  445422:	int3   
  445423:	int3   
  445424:	int3   
  445425:	int3   
  445426:	int3   
  445427:	int3   
  445428:	rex.W push rbp
  44542a:	sub    rsp,0x20
  44542e:	mov    rbp,rdx
  445431:	mov    rcx,QWORD PTR [rbp+0x40]
  445435:	add    rcx,0x8
  445439:	call   0x4444c8
  44543e:	add    rsp,0x20
  445442:	pop    rbp
  445443:	ret    
  445444:	int3   
  445445:	int3   
  445446:	int3   
  445447:	int3   
  445448:	rex.W push rbp
  44544a:	sub    rsp,0x20
  44544e:	mov    rbp,rdx
  445451:	mov    rcx,QWORD PTR [rbp+0x40]
  445455:	add    rcx,0x160
  44545c:	call   0x401000
  445461:	add    rsp,0x20
  445465:	pop    rbp
  445466:	ret    
  445467:	int3   
  445468:	rex.W push rbx
  44546a:	push   rbp
  44546b:	push   rsi
  44546c:	push   rdi
  44546d:	sub    rsp,0x28
  445471:	movsxd rbx,DWORD PTR [rcx+0x40]
  445475:	mov    rdi,rcx
  445478:	test   ebx,ebx
  44547a:	mov    rsi,rbx
  44547d:	je     0x4454b5
  44547f:	shl    rsi,0x3
  445483:	mov    rax,QWORD PTR [rdi+0x38]
  445487:	sub    rsi,0x8
  44548b:	add    ebx,0xffffffff
  44548e:	mov    rbp,QWORD PTR [rsi+rax*1]
  445492:	test   rbp,rbp
  445495:	je     0x4454b1
  445497:	mov    rcx,QWORD PTR [rbp+0x10]
  44549b:	call   0x40215c
  4454a0:	mov    rcx,QWORD PTR [rbp+0x0]
  4454a4:	call   0x40215c
  4454a9:	mov    rcx,rbp
  4454ac:	call   0x40215c
  4454b1:	test   ebx,ebx
  4454b3:	jne    0x445483
  4454b5:	mov    rcx,QWORD PTR [rdi+0x38]
  4454b9:	call   0x40215c
  4454be:	mov    rcx,QWORD PTR [rdi+0x10]
  4454c2:	add    rsp,0x28
  4454c6:	pop    rdi
  4454c7:	pop    rsi
  4454c8:	pop    rbp
  4454c9:	pop    rbx
  4454ca:	jmp    0x40215c
  4454cf:	int3   
  4454d0:	mov    QWORD PTR [rsp+0x8],rcx
  4454d5:	push   rbx
  4454d6:	push   rdi
  4454d7:	sub    rsp,0x38
  4454db:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4454e4:	mov    rbx,rcx
  4454e7:	xor    edi,edi
  4454e9:	mov    BYTE PTR [rcx],dil
  4454ec:	mov    DWORD PTR [rcx+0x8],0xffffffff
  4454f3:	mov    BYTE PTR [rcx+0x10],dil
  4454f7:	mov    BYTE PTR [rcx+0x11],dil
  4454fb:	mov    BYTE PTR [rcx+0x12],dil
  4454ff:	mov    BYTE PTR [rcx+0x13],dil
  445503:	mov    BYTE PTR [rcx+0x14],dil
  445507:	mov    BYTE PTR [rcx+0x18],0x1
  44550b:	mov    BYTE PTR [rcx+0x19],0x1
  44550f:	mov    BYTE PTR [rcx+0x1a],dil
  445513:	mov    BYTE PTR [rcx+0x1b],dil
  445517:	mov    BYTE PTR [rcx+0x1c],dil
  44551b:	mov    BYTE PTR [rcx+0x1d],dil
  44551f:	mov    QWORD PTR [rcx+0x20],rdi
  445523:	mov    BYTE PTR [rcx+0xc],0x1
  445527:	mov    BYTE PTR [rcx+0xd],0x1
  44552b:	mov    BYTE PTR [rcx+0xe],0x1
  44552f:	mov    BYTE PTR [rcx+0xf],0x1
  445533:	mov    BYTE PTR [rcx+0x16],0x1
  445537:	mov    BYTE PTR [rcx+0x17],0x1
  44553b:	mov    BYTE PTR [rcx+0x15],0x1
  44553f:	mov    QWORD PTR [rcx+0x28],rdi
  445543:	mov    DWORD PTR [rcx+0x30],edi
  445546:	mov    DWORD PTR [rcx+0x34],edi
  445549:	mov    QWORD PTR [rcx+0x38],rdi
  44554d:	mov    DWORD PTR [rcx+0x40],edi
  445550:	mov    DWORD PTR [rcx+0x44],edi
  445553:	mov    BYTE PTR [rcx+0x48],0x1
  445557:	add    rcx,0x50
  44555b:	call   0x40eb00
  445560:	nop
  445561:	mov    DWORD PTR [rbx+0xc8],edi
  445567:	mov    BYTE PTR [rbx+0xcc],dil
  44556e:	lea    rcx,[rbx+0xd0]
  445575:	call   0x403150
  44557a:	nop
  44557b:	mov    BYTE PTR [rbx+0xe0],dil
  445582:	mov    BYTE PTR [rbx+0xe1],dil
  445589:	lea    rcx,[rbx+0xe8]
  445590:	call   0x403150
  445595:	nop
  445596:	mov    BYTE PTR [rbx+0xf8],dil
  44559d:	mov    BYTE PTR [rbx+0xf9],dil
  4455a4:	mov    BYTE PTR [rbx+0xfa],dil
  4455ab:	lea    rcx,[rbx+0x100]
  4455b2:	call   0x403150
  4455b7:	nop
  4455b8:	lea    rcx,[rbx+0x110]
  4455bf:	call   0x403150
  4455c4:	nop
  4455c5:	mov    DWORD PTR [rbx+0x120],edi
  4455cb:	lea    rcx,[rbx+0x128]
  4455d2:	call   0x403150
  4455d7:	mov    BYTE PTR [rbx+0x138],dil
  4455de:	mov    BYTE PTR [rbx+0x139],dil
  4455e5:	mov    BYTE PTR [rbx+0x13a],dil
  4455ec:	mov    BYTE PTR [rbx+0x13b],dil
  4455f3:	mov    BYTE PTR [rbx+0x13c],dil
  4455fa:	mov    BYTE PTR [rbx+0x13d],dil
  445601:	mov    BYTE PTR [rbx+0x13e],dil
  445608:	mov    BYTE PTR [rbx+0x13f],dil
  44560f:	mov    BYTE PTR [rbx+0x140],dil
  445616:	mov    BYTE PTR [rbx+0x141],dil
  44561d:	mov    QWORD PTR [rbx+0x148],rdi
  445624:	mov    DWORD PTR [rbx+0x150],edi
  44562a:	mov    DWORD PTR [rbx+0x154],edi
  445630:	mov    QWORD PTR [rbx+0x158],rdi
  445637:	mov    DWORD PTR [rbx+0x160],edi
  44563d:	mov    DWORD PTR [rbx+0x164],edi
  445643:	mov    rax,rbx
  445646:	add    rsp,0x38
  44564a:	pop    rdi
  44564b:	pop    rbx
  44564c:	ret    
  44564d:	int3   
  44564e:	int3   
  44564f:	int3   
  445650:	rex.W push rbp
  445652:	sub    rsp,0x20
  445656:	mov    rbp,rdx
  445659:	mov    rcx,QWORD PTR [rbp+0x50]
  44565d:	call   0x444d68
  445662:	add    rsp,0x20
  445666:	pop    rbp
  445667:	ret    
  445668:	int3   
  445669:	int3   
  44566a:	int3   
  44566b:	int3   
  44566c:	int3   
  44566d:	int3   
  44566e:	int3   
  44566f:	int3   
  445670:	rex.W push rbp
  445672:	sub    rsp,0x20
  445676:	mov    rbp,rdx
  445679:	mov    rcx,QWORD PTR [rbp+0x50]
  44567d:	add    rcx,0x38
  445681:	call   0x4443a4
  445686:	add    rsp,0x20
  44568a:	pop    rbp
  44568b:	ret    
  44568c:	int3   
  44568d:	int3   
  44568e:	int3   
  44568f:	int3   
  445690:	rex.W push rbp
  445692:	sub    rsp,0x20
  445696:	mov    rbp,rdx
  445699:	mov    rcx,QWORD PTR [rbp+0x50]
  44569d:	add    rcx,0x50
  4456a1:	call   0x40ec2c
  4456a6:	add    rsp,0x20
  4456aa:	pop    rbp
  4456ab:	ret    
  4456ac:	int3   
  4456ad:	int3   
  4456ae:	int3   
  4456af:	int3   
  4456b0:	rex.W push rbp
  4456b2:	sub    rsp,0x20
  4456b6:	mov    rbp,rdx
  4456b9:	mov    rcx,QWORD PTR [rbp+0x50]
  4456bd:	add    rcx,0xd0
  4456c4:	call   0x401000
  4456c9:	add    rsp,0x20
  4456cd:	pop    rbp
  4456ce:	ret    
  4456cf:	int3   
  4456d0:	rex.W push rbp
  4456d2:	sub    rsp,0x20
  4456d6:	mov    rbp,rdx
  4456d9:	mov    rcx,QWORD PTR [rbp+0x50]
  4456dd:	add    rcx,0xe8
  4456e4:	call   0x401000
  4456e9:	add    rsp,0x20
  4456ed:	pop    rbp
  4456ee:	ret    
  4456ef:	int3   
  4456f0:	rex.W push rbp
  4456f2:	sub    rsp,0x20
  4456f6:	mov    rbp,rdx
  4456f9:	mov    rcx,QWORD PTR [rbp+0x50]
  4456fd:	add    rcx,0x100
  445704:	call   0x401000
  445709:	add    rsp,0x20
  44570d:	pop    rbp
  44570e:	ret    
  44570f:	int3   
  445710:	rex.W push rbp
  445712:	sub    rsp,0x20
  445716:	mov    rbp,rdx
  445719:	mov    rcx,QWORD PTR [rbp+0x50]
  44571d:	add    rcx,0x110
  445724:	call   0x401000
  445729:	add    rsp,0x20
  44572d:	pop    rbp
  44572e:	ret    
  44572f:	int3   
  445730:	mov    QWORD PTR [rsp+0x8],rcx
  445735:	push   rbx
  445736:	push   rdi
  445737:	sub    rsp,0x38
  44573b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  445744:	mov    rbx,rcx
  445747:	xor    edi,edi
  445749:	mov    DWORD PTR [rcx+0x10],edi
  44574c:	lea    rax,[rip+0xef25]        # 0x454678
  445753:	mov    QWORD PTR [rcx],rax
  445756:	lea    rax,[rip+0xeeeb]        # 0x454648
  44575d:	mov    QWORD PTR [rcx+0x8],rax
  445761:	mov    QWORD PTR [rcx+0x18],rdi
  445765:	mov    DWORD PTR [rcx+0x20],edi
  445768:	mov    DWORD PTR [rcx+0x24],edi
  44576b:	add    rcx,0x28
  44576f:	call   0x403150
  445774:	mov    BYTE PTR [rbx+0x38],0x1
  445778:	mov    QWORD PTR [rbx+0x40],rdi
  44577c:	mov    DWORD PTR [rbx+0x48],edi
  44577f:	mov    DWORD PTR [rbx+0x4c],edi
  445782:	mov    QWORD PTR [rbx+0x50],rdi
  445786:	mov    DWORD PTR [rbx+0x58],edi
  445789:	mov    DWORD PTR [rbx+0x5c],edi
  44578c:	mov    QWORD PTR [rbx+0x60],rdi
  445790:	mov    DWORD PTR [rbx+0x68],edi
  445793:	mov    DWORD PTR [rbx+0x6c],edi
  445796:	mov    BYTE PTR [rbx+0x70],dil
  44579a:	mov    BYTE PTR [rbx+0x71],dil
  44579e:	mov    rax,rbx
  4457a1:	add    rsp,0x38
  4457a5:	pop    rdi
  4457a6:	pop    rbx
  4457a7:	ret    
  4457a8:	int3   
  4457a9:	int3   
  4457aa:	int3   
  4457ab:	int3   
  4457ac:	int3   
  4457ad:	int3   
  4457ae:	int3   
  4457af:	int3   
  4457b0:	rex.W push rbp
  4457b2:	sub    rsp,0x20
  4457b6:	mov    rbp,rdx
  4457b9:	mov    rcx,QWORD PTR [rbp+0x50]
  4457bd:	add    rcx,0x18
  4457c1:	call   0x4449f8
  4457c6:	add    rsp,0x20
  4457ca:	pop    rbp
  4457cb:	ret    
  4457cc:	rex.W push rbx
  4457ce:	push   rbp
  4457cf:	push   rsi
  4457d0:	push   rdi
  4457d1:	sub    rsp,0x28
  4457d5:	mov    rsi,rdx
  4457d8:	mov    rdi,r8
  4457db:	mov    rbx,rcx
  4457de:	mov    QWORD PTR [r8],0x0
  4457e5:	mov    ebp,0x10
  4457ea:	lea    rdx,[rip+0xf5ff]        # 0x454df0
  4457f1:	mov    r8,rbp
  4457f4:	mov    rcx,rsi
  4457f7:	call   0x44b786
  4457fc:	test   eax,eax
  4457fe:	jne    0x445805
  445800:	mov    QWORD PTR [rdi],rbx
  445803:	jmp    0x445844
  445805:	lea    rdx,[rip+0xe4fc]        # 0x453d08
  44580c:	mov    r8,rbp
  44580f:	mov    rcx,rsi
  445812:	call   0x44b786
  445817:	test   eax,eax
  445819:	je     0x445800
  44581b:	lea    rdx,[rip+0xe4a6]        # 0x453cc8
  445822:	mov    r8,rbp
  445825:	mov    rcx,rsi
  445828:	call   0x44b786
  44582d:	test   eax,eax
  44582f:	jne    0x44584b
  445831:	mov    rax,rbx
  445834:	lea    rdx,[rbx+0x8]
  445838:	neg    rax
  44583b:	sbb    rcx,rcx
  44583e:	and    rcx,rdx
  445841:	mov    QWORD PTR [rdi],rcx
  445844:	inc    DWORD PTR [rbx+0x10]
  445847:	xor    eax,eax
  445849:	jmp    0x445850
  44584b:	mov    eax,0x80004002
  445850:	add    rsp,0x28
  445854:	pop    rdi
  445855:	pop    rsi
  445856:	pop    rbp
  445857:	pop    rbx
  445858:	ret    
  445859:	int3   
  44585a:	int3   
  44585b:	int3   
  44585c:	sub    rcx,0x8
  445860:	jmp    0x4457cc
  445865:	int3   
  445866:	int3   
  445867:	int3   
  445868:	rex.W push rbx
  44586a:	push   rbp
  44586b:	push   rsi
  44586c:	push   rdi
  44586d:	sub    rsp,0x28
  445871:	lea    rax,[rip+0xee00]        # 0x454678
  445878:	mov    rbx,rcx
  44587b:	mov    QWORD PTR [rcx],rax
  44587e:	lea    rax,[rip+0xedc3]        # 0x454648
  445885:	mov    QWORD PTR [rcx+0x8],rax
  445889:	mov    rcx,QWORD PTR [rcx+0x60]
  44588d:	call   0x40215c
  445892:	mov    rcx,QWORD PTR [rbx+0x50]
  445896:	call   0x40215c
  44589b:	movsxd rsi,DWORD PTR [rbx+0x48]
  44589f:	test   esi,esi
  4458a1:	mov    rdi,rsi
  4458a4:	je     0x4458d2
  4458a6:	shl    rdi,0x3
  4458aa:	mov    rax,QWORD PTR [rbx+0x40]
  4458ae:	sub    rdi,0x8
  4458b2:	add    esi,0xffffffff
  4458b5:	mov    rbp,QWORD PTR [rdi+rax*1]
  4458b9:	test   rbp,rbp
  4458bc:	je     0x4458ce
  4458be:	mov    rcx,rbp
  4458c1:	call   0x427a34
  4458c6:	mov    rcx,rbp
  4458c9:	call   0x40215c
  4458ce:	test   esi,esi
  4458d0:	jne    0x4458aa
  4458d2:	mov    rcx,QWORD PTR [rbx+0x40]
  4458d6:	call   0x40215c
  4458db:	mov    rcx,QWORD PTR [rbx+0x28]
  4458df:	call   0x40215c
  4458e4:	lea    rcx,[rbx+0x18]
  4458e8:	add    rsp,0x28
  4458ec:	pop    rdi
  4458ed:	pop    rsi
  4458ee:	pop    rbp
  4458ef:	pop    rbx
  4458f0:	jmp    0x4449f8
  4458f5:	int3   
  4458f6:	int3   
  4458f7:	int3   
  4458f8:	rex.W push rbx
  4458fa:	sub    rsp,0x20
  4458fe:	add    DWORD PTR [rcx+0x10],0xffffffff
  445902:	mov    eax,DWORD PTR [rcx+0x10]
  445905:	mov    rbx,rcx
  445908:	jne    0x445919
  44590a:	call   0x445868
  44590f:	mov    rcx,rbx
  445912:	call   0x40215c
  445917:	xor    eax,eax
  445919:	add    rsp,0x20
  44591d:	pop    rbx
  44591e:	ret    
  44591f:	int3   
  445920:	mov    QWORD PTR [rsp+0x8],rcx
  445925:	push   rbx
  445926:	push   rbp
  445927:	push   rsi
  445928:	push   rdi
  445929:	sub    rsp,0x38
  44592d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  445936:	mov    rdi,rcx
  445939:	movsxd rbx,DWORD PTR [rcx+0x8]
  44593d:	mov    rbp,rbx
  445940:	test   ebx,ebx
  445942:	je     0x44597e
  445944:	shl    rbp,0x3
  445948:	add    ebx,0xffffffff
  44594b:	sub    rbp,0x8
  44594f:	mov    rax,QWORD PTR [rdi]
  445952:	mov    rsi,QWORD PTR [rax+rbp*1]
  445956:	mov    QWORD PTR [rsp+0x68],rsi
  44595b:	test   rsi,rsi
  44595e:	je     0x44597a
  445960:	lea    rcx,[rsi+0x10]
  445964:	call   0x4056bc
  445969:	nop
  44596a:	mov    rcx,QWORD PTR [rsi]
  44596d:	call   0x40215c
  445972:	mov    rcx,rsi
  445975:	call   0x40215c
  44597a:	test   ebx,ebx
  44597c:	jne    0x445948
  44597e:	mov    rcx,QWORD PTR [rdi]
  445981:	add    rsp,0x38
  445985:	pop    rdi
  445986:	pop    rsi
  445987:	pop    rbp
  445988:	pop    rbx
  445989:	jmp    0x40215c
  44598e:	int3   
  44598f:	int3   
  445990:	rex.W push rbp
  445992:	sub    rsp,0x20
  445996:	mov    rbp,rdx
  445999:	mov    rcx,QWORD PTR [rbp+0x60]
  44599d:	call   0x401000
  4459a2:	add    rsp,0x20
  4459a6:	pop    rbp
  4459a7:	ret    
  4459a8:	int3   
  4459a9:	int3   
  4459aa:	int3   
  4459ab:	int3   
  4459ac:	int3   
  4459ad:	int3   
  4459ae:	int3   
  4459af:	int3   
  4459b0:	rex.W push rbp
  4459b2:	sub    rsp,0x20
  4459b6:	mov    rbp,rdx
  4459b9:	mov    rcx,QWORD PTR [rbp+0x68]
  4459bd:	call   0x401000
  4459c2:	add    rsp,0x20
  4459c6:	pop    rbp
  4459c7:	ret    
  4459c8:	sub    rcx,0x8
  4459cc:	jmp    0x4458f8
  4459d1:	int3   
  4459d2:	int3   
  4459d3:	int3   
  4459d4:	rex.W push rbx
  4459d6:	push   rbp
  4459d7:	push   rsi
  4459d8:	push   rdi
  4459d9:	sub    rsp,0x28
  4459dd:	movsxd rdi,DWORD PTR [rcx+0x18]
  4459e1:	mov    rbx,rcx
  4459e4:	test   edi,edi
  4459e6:	mov    rsi,rdi
  4459e9:	je     0x445a18
  4459eb:	shl    rsi,0x3
  4459ef:	mov    rax,QWORD PTR [rbx+0x10]
  4459f3:	sub    rsi,0x8
  4459f7:	add    edi,0xffffffff
  4459fa:	mov    rbp,QWORD PTR [rsi+rax*1]
  4459fe:	test   rbp,rbp
  445a01:	je     0x445a14
  445a03:	mov    rcx,QWORD PTR [rbp+0x0]
  445a07:	call   0x40215c
  445a0c:	mov    rcx,rbp
  445a0f:	call   0x40215c
  445a14:	test   edi,edi
  445a16:	jne    0x4459ef
  445a18:	mov    rcx,QWORD PTR [rbx+0x10]
  445a1c:	call   0x40215c
  445a21:	mov    rcx,rbx
  445a24:	add    rsp,0x28
  445a28:	pop    rdi
  445a29:	pop    rsi
  445a2a:	pop    rbp
  445a2b:	pop    rbx
  445a2c:	jmp    0x445920
  445a31:	int3   
  445a32:	int3   
  445a33:	int3   
  445a34:	mov    QWORD PTR [rsp+0x8],rcx
  445a39:	push   rbx
  445a3a:	push   rbp
  445a3b:	push   rsi
  445a3c:	push   rdi
  445a3d:	push   r12
  445a3f:	push   r13
  445a41:	sub    rsp,0x38
  445a45:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  445a4e:	mov    rbx,rcx
  445a51:	movsxd rdi,DWORD PTR [rcx+0x290]
  445a58:	mov    rsi,rdi
  445a5b:	mov    r13d,0xffffffff
  445a61:	test   edi,edi
  445a63:	je     0x445a95
  445a65:	shl    rsi,0x3
  445a69:	add    edi,r13d
  445a6c:	sub    rsi,0x8
  445a70:	mov    rax,QWORD PTR [rbx+0x288]
  445a77:	mov    rbp,QWORD PTR [rsi+rax*1]
  445a7b:	test   rbp,rbp
  445a7e:	je     0x445a91
  445a80:	mov    rcx,QWORD PTR [rbp+0x0]
  445a84:	call   0x40215c
  445a89:	mov    rcx,rbp
  445a8c:	call   0x40215c
  445a91:	test   edi,edi
  445a93:	jne    0x445a69
  445a95:	mov    rcx,QWORD PTR [rbx+0x288]
  445a9c:	call   0x40215c
  445aa1:	mov    rcx,QWORD PTR [rbx+0x278]
  445aa8:	call   0x40215c
  445aad:	movsxd rdi,DWORD PTR [rbx+0x268]
  445ab4:	mov    rsi,rdi
  445ab7:	test   edi,edi
  445ab9:	je     0x445aeb
  445abb:	shl    rsi,0x3
  445abf:	add    edi,r13d
  445ac2:	sub    rsi,0x8
  445ac6:	mov    rax,QWORD PTR [rbx+0x260]
  445acd:	mov    rbp,QWORD PTR [rsi+rax*1]
  445ad1:	test   rbp,rbp
  445ad4:	je     0x445ae7
  445ad6:	mov    rcx,QWORD PTR [rbp+0x0]
  445ada:	call   0x40215c
  445adf:	mov    rcx,rbp
  445ae2:	call   0x40215c
  445ae7:	test   edi,edi
  445ae9:	jne    0x445abf
  445aeb:	mov    rcx,QWORD PTR [rbx+0x260]
  445af2:	call   0x40215c
  445af7:	lea    rcx,[rbx+0xf8]
  445afe:	call   0x444dc8
  445b03:	mov    rcx,QWORD PTR [rbx+0xd0]
  445b0a:	call   0x40215c
  445b0f:	movsxd rdi,DWORD PTR [rbx+0xb8]
  445b16:	mov    rsi,rdi
  445b19:	test   edi,edi
  445b1b:	je     0x445b56
  445b1d:	shl    rsi,0x3
  445b21:	add    edi,r13d
  445b24:	sub    rsi,0x8
  445b28:	mov    rax,QWORD PTR [rbx+0xb0]
  445b2f:	mov    rbp,QWORD PTR [rsi+rax*1]
  445b33:	test   rbp,rbp
  445b36:	je     0x445b52
  445b38:	mov    rcx,QWORD PTR [rbp+0x10]
  445b3c:	call   0x40215c
  445b41:	mov    rcx,QWORD PTR [rbp+0x0]
  445b45:	call   0x40215c
  445b4a:	mov    rcx,rbp
  445b4d:	call   0x40215c
  445b52:	test   edi,edi
  445b54:	jne    0x445b21
  445b56:	mov    rcx,QWORD PTR [rbx+0xb0]
  445b5d:	call   0x40215c
  445b62:	mov    rcx,QWORD PTR [rbx+0xa0]
  445b69:	call   0x40215c
  445b6e:	movsxd rdi,DWORD PTR [rbx+0x98]
  445b75:	mov    rsi,rdi
  445b78:	test   edi,edi
  445b7a:	je     0x445bac
  445b7c:	shl    rsi,0x3
  445b80:	add    edi,r13d
  445b83:	sub    rsi,0x8
  445b87:	mov    rax,QWORD PTR [rbx+0x90]
  445b8e:	mov    rbp,QWORD PTR [rsi+rax*1]
  445b92:	test   rbp,rbp
  445b95:	je     0x445ba8
  445b97:	mov    rcx,QWORD PTR [rbp+0x0]
  445b9b:	call   0x40215c
  445ba0:	mov    rcx,rbp
  445ba3:	call   0x40215c
  445ba8:	test   edi,edi
  445baa:	jne    0x445b80
  445bac:	mov    rcx,QWORD PTR [rbx+0x90]
  445bb3:	call   0x40215c
  445bb8:	lea    rcx,[rbx+0x80]
  445bbf:	call   0x445920
  445bc4:	nop
  445bc5:	movsxd rdi,DWORD PTR [rbx+0x70]
  445bc9:	mov    rsi,rdi
  445bcc:	test   edi,edi
  445bce:	je     0x445bfd
  445bd0:	shl    rsi,0x3
  445bd4:	add    edi,r13d
  445bd7:	sub    rsi,0x8
  445bdb:	mov    rax,QWORD PTR [rbx+0x68]
  445bdf:	mov    rbp,QWORD PTR [rsi+rax*1]
  445be3:	test   rbp,rbp
  445be6:	je     0x445bf9
  445be8:	mov    rcx,QWORD PTR [rbp+0x0]
  445bec:	call   0x40215c
  445bf1:	mov    rcx,rbp
  445bf4:	call   0x40215c
  445bf9:	test   edi,edi
  445bfb:	jne    0x445bd4
  445bfd:	mov    rcx,QWORD PTR [rbx+0x68]
  445c01:	call   0x40215c
  445c06:	nop
  445c07:	mov    rcx,QWORD PTR [rbx+0x50]
  445c0b:	call   0x40215c
  445c10:	nop
  445c11:	mov    rcx,QWORD PTR [rbx+0x38]
  445c15:	call   0x40215c
  445c1a:	nop
  445c1b:	movsxd rbp,DWORD PTR [rbx+0x28]
  445c1f:	mov    rdi,rbp
  445c22:	test   ebp,ebp
  445c24:	je     0x445c52
  445c26:	shl    rdi,0x3
  445c2a:	add    ebp,r13d
  445c2d:	sub    rdi,0x8
  445c31:	mov    rax,QWORD PTR [rbx+0x20]
  445c35:	mov    rsi,QWORD PTR [rdi+rax*1]
  445c39:	test   rsi,rsi
  445c3c:	je     0x445c4e
  445c3e:	mov    rcx,QWORD PTR [rsi]
  445c41:	call   0x40215c
  445c46:	mov    rcx,rsi
  445c49:	call   0x40215c
  445c4e:	test   ebp,ebp
  445c50:	jne    0x445c2a
  445c52:	mov    rcx,QWORD PTR [rbx+0x20]
  445c56:	call   0x40215c
  445c5b:	lea    rcx,[rbx+0x10]
  445c5f:	add    rsp,0x38
  445c63:	pop    r13
  445c65:	pop    r12
  445c67:	pop    rdi
  445c68:	pop    rsi
  445c69:	pop    rbp
  445c6a:	pop    rbx
  445c6b:	jmp    0x445920
  445c70:	int3   
  445c71:	int3   
  445c72:	int3   
  445c73:	int3   
  445c74:	rex.W push rbp
  445c76:	sub    rsp,0x20
  445c7a:	mov    rbp,rdx
  445c7d:	mov    rcx,QWORD PTR [rbp+0x70]
  445c81:	add    rcx,0x10
  445c85:	call   0x4459d4
  445c8a:	add    rsp,0x20
  445c8e:	pop    rbp
  445c8f:	ret    
  445c90:	int3   
  445c91:	int3   
  445c92:	int3   
  445c93:	int3   
  445c94:	rex.W push rbp
  445c96:	sub    rsp,0x20
  445c9a:	mov    rbp,rdx
  445c9d:	mov    rcx,QWORD PTR [rbp+0x70]
  445ca1:	add    rcx,0x38
  445ca5:	call   0x401000
  445caa:	add    rsp,0x20
  445cae:	pop    rbp
  445caf:	ret    
  445cb0:	int3   
  445cb1:	int3   
  445cb2:	int3   
  445cb3:	int3   
  445cb4:	rex.W push rbp
  445cb6:	sub    rsp,0x20
  445cba:	mov    rbp,rdx
  445cbd:	mov    rcx,QWORD PTR [rbp+0x70]
  445cc1:	add    rcx,0x50
  445cc5:	call   0x401000
  445cca:	add    rsp,0x20
  445cce:	pop    rbp
  445ccf:	ret    
  445cd0:	int3   
  445cd1:	int3   
  445cd2:	int3   
  445cd3:	int3   
  445cd4:	rex.W push rbp
  445cd6:	sub    rsp,0x20
  445cda:	mov    rbp,rdx
  445cdd:	mov    rcx,QWORD PTR [rbp+0x70]
  445ce1:	add    rcx,0x68
  445ce5:	call   0x4047cc
  445cea:	add    rsp,0x20
  445cee:	pop    rbp
  445cef:	ret    
  445cf0:	mov    QWORD PTR [rsp+0x8],rcx
  445cf5:	push   rbx
  445cf6:	push   rsi
  445cf7:	sub    rsp,0x38
  445cfb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  445d04:	mov    rbx,rcx
  445d07:	xor    esi,esi
  445d09:	mov    BYTE PTR [rcx+0x1],sil
  445d0d:	mov    BYTE PTR [rcx+0x2],sil
  445d11:	mov    BYTE PTR [rcx+0x3],sil
  445d15:	mov    BYTE PTR [rcx+0x7],sil
  445d19:	mov    BYTE PTR [rcx+0x8],sil
  445d1d:	mov    QWORD PTR [rcx+0x10],rsi
  445d21:	mov    DWORD PTR [rcx+0x18],esi
  445d24:	mov    DWORD PTR [rcx+0x1c],esi
  445d27:	mov    QWORD PTR [rcx+0x20],rsi
  445d2b:	mov    DWORD PTR [rcx+0x28],esi
  445d2e:	mov    DWORD PTR [rcx+0x2c],esi
  445d31:	add    rcx,0x38
  445d35:	call   0x403150
  445d3a:	nop
  445d3b:	lea    rcx,[rbx+0x50]
  445d3f:	call   0x403150
  445d44:	nop
  445d45:	mov    QWORD PTR [rbx+0x68],rsi
  445d49:	mov    DWORD PTR [rbx+0x70],esi
  445d4c:	mov    DWORD PTR [rbx+0x74],esi
  445d4f:	mov    QWORD PTR [rbx+0x80],rsi
  445d56:	mov    DWORD PTR [rbx+0x88],esi
  445d5c:	mov    DWORD PTR [rbx+0x8c],esi
  445d62:	mov    QWORD PTR [rbx+0x90],rsi
  445d69:	mov    DWORD PTR [rbx+0x98],esi
  445d6f:	mov    DWORD PTR [rbx+0x9c],esi
  445d75:	lea    rcx,[rbx+0xa0]
  445d7c:	call   0x403150
  445d81:	nop
  445d82:	mov    QWORD PTR [rbx+0xb0],rsi
  445d89:	mov    DWORD PTR [rbx+0xb8],esi
  445d8f:	mov    DWORD PTR [rbx+0xbc],esi
  445d95:	mov    BYTE PTR [rbx+0xc0],sil
  445d9c:	mov    BYTE PTR [rbx+0xc1],sil
  445da3:	mov    BYTE PTR [rbx+0xc2],sil
  445daa:	mov    BYTE PTR [rbx+0xc3],sil
  445db1:	mov    DWORD PTR [rbx+0xc4],esi
  445db7:	mov    DWORD PTR [rbx+0xc8],esi
  445dbd:	lea    rcx,[rbx+0xd0]
  445dc4:	call   0x403150
  445dc9:	mov    BYTE PTR [rbx+0xe0],sil
  445dd0:	mov    BYTE PTR [rbx+0xe1],sil
  445dd7:	mov    BYTE PTR [rbx+0xe3],sil
  445dde:	mov    BYTE PTR [rbx+0xe5],sil
  445de5:	mov    BYTE PTR [rbx+0xe7],sil
  445dec:	mov    BYTE PTR [rbx+0xe8],sil
  445df3:	mov    BYTE PTR [rbx+0xe9],sil
  445dfa:	mov    BYTE PTR [rbx+0xe2],0x1
  445e01:	mov    BYTE PTR [rbx+0xe4],0x1
  445e08:	mov    BYTE PTR [rbx+0xe6],0x1
  445e0f:	mov    BYTE PTR [rbx+0xf0],sil
  445e16:	mov    BYTE PTR [rbx+0xf1],sil
  445e1d:	mov    BYTE PTR [rbx+0xf2],sil
  445e24:	mov    BYTE PTR [rbx+0xf3],sil
  445e2b:	mov    BYTE PTR [rbx+0xf4],sil
  445e32:	mov    BYTE PTR [rbx+0xf5],sil
  445e39:	mov    BYTE PTR [rbx+0xf6],sil
  445e40:	mov    BYTE PTR [rbx+0xf7],sil
  445e47:	lea    rcx,[rbx+0xf8]
  445e4e:	call   0x4454d0
  445e53:	nop
  445e54:	mov    QWORD PTR [rbx+0x260],rsi
  445e5b:	mov    DWORD PTR [rbx+0x268],esi
  445e61:	mov    DWORD PTR [rbx+0x26c],esi
  445e67:	mov    BYTE PTR [rbx+0x270],sil
  445e6e:	mov    BYTE PTR [rbx+0x271],sil
  445e75:	mov    BYTE PTR [rbx+0x272],sil
  445e7c:	mov    DWORD PTR [rbx+0x274],esi
  445e82:	lea    rcx,[rbx+0x278]
  445e89:	call   0x403150
  445e8e:	mov    QWORD PTR [rbx+0x288],rsi
  445e95:	mov    DWORD PTR [rbx+0x290],esi
  445e9b:	mov    DWORD PTR [rbx+0x294],esi
  445ea1:	mov    DWORD PTR [rbx+0x298],0x1
  445eab:	mov    DWORD PTR [rbx+0x29c],0x2
  445eb5:	mov    DWORD PTR [rbx+0x2a0],0x1
  445ebf:	mov    DWORD PTR [rbx+0x2a4],esi
  445ec5:	mov    rax,rbx
  445ec8:	add    rsp,0x38
  445ecc:	pop    rsi
  445ecd:	pop    rbx
  445ece:	ret    
  445ecf:	int3   
  445ed0:	rex.W push rbp
  445ed2:	sub    rsp,0x20
  445ed6:	mov    rbp,rdx
  445ed9:	mov    rcx,QWORD PTR [rbp+0x50]
  445edd:	add    rcx,0x10
  445ee1:	call   0x4459d4
  445ee6:	add    rsp,0x20
  445eea:	pop    rbp
  445eeb:	ret    
  445eec:	int3   
  445eed:	int3   
  445eee:	int3   
  445eef:	int3   
  445ef0:	rex.W push rbp
  445ef2:	sub    rsp,0x20
  445ef6:	mov    rbp,rdx
  445ef9:	mov    rcx,QWORD PTR [rbp+0x50]
  445efd:	add    rcx,0x38
  445f01:	call   0x401000
  445f06:	add    rsp,0x20
  445f0a:	pop    rbp
  445f0b:	ret    
  445f0c:	int3   
  445f0d:	int3   
  445f0e:	int3   
  445f0f:	int3   
  445f10:	rex.W push rbp
  445f12:	sub    rsp,0x20
  445f16:	mov    rbp,rdx
  445f19:	mov    rcx,QWORD PTR [rbp+0x50]
  445f1d:	add    rcx,0x50
  445f21:	call   0x401000
  445f26:	add    rsp,0x20
  445f2a:	pop    rbp
  445f2b:	ret    
  445f2c:	int3   
  445f2d:	int3   
  445f2e:	int3   
  445f2f:	int3   
  445f30:	rex.W push rbp
  445f32:	sub    rsp,0x20
  445f36:	mov    rbp,rdx
  445f39:	mov    rcx,QWORD PTR [rbp+0x50]
  445f3d:	add    rcx,0x68
  445f41:	call   0x4047cc
  445f46:	add    rsp,0x20
  445f4a:	pop    rbp
  445f4b:	ret    
  445f4c:	int3   
  445f4d:	int3   
  445f4e:	int3   
  445f4f:	int3   
  445f50:	rex.W push rbp
  445f52:	sub    rsp,0x20
  445f56:	mov    rbp,rdx
  445f59:	mov    rcx,QWORD PTR [rbp+0x50]
  445f5d:	add    rcx,0x80
  445f64:	call   0x4459d4
  445f69:	add    rsp,0x20
  445f6d:	pop    rbp
  445f6e:	ret    
  445f6f:	int3   
  445f70:	rex.W push rbp
  445f72:	sub    rsp,0x20
  445f76:	mov    rbp,rdx
  445f79:	mov    rcx,QWORD PTR [rbp+0x50]
  445f7d:	add    rcx,0xa0
  445f84:	call   0x401000
  445f89:	add    rsp,0x20
  445f8d:	pop    rbp
  445f8e:	ret    
  445f8f:	int3   
  445f90:	rex.W push rbp
  445f92:	sub    rsp,0x20
  445f96:	mov    rbp,rdx
  445f99:	mov    rcx,QWORD PTR [rbp+0x50]
  445f9d:	add    rcx,0xb0
  445fa4:	call   0x444b28
  445fa9:	add    rsp,0x20
  445fad:	pop    rbp
  445fae:	ret    
  445faf:	int3   
  445fb0:	rex.W push rbp
  445fb2:	sub    rsp,0x20
  445fb6:	mov    rbp,rdx
  445fb9:	mov    rcx,QWORD PTR [rbp+0x50]
  445fbd:	add    rcx,0xc0
  445fc4:	call   0x434c34
  445fc9:	add    rsp,0x20
  445fcd:	pop    rbp
  445fce:	ret    
  445fcf:	int3   
  445fd0:	rex.W push rbp
  445fd2:	sub    rsp,0x20
  445fd6:	mov    rbp,rdx
  445fd9:	mov    rcx,QWORD PTR [rbp+0x50]
  445fdd:	add    rcx,0xf8
  445fe4:	call   0x444dc8
  445fe9:	add    rsp,0x20
  445fed:	pop    rbp
  445fee:	ret    
  445fef:	int3   
  445ff0:	rex.W push rbp
  445ff2:	sub    rsp,0x20
  445ff6:	mov    rbp,rdx
  445ff9:	mov    rcx,QWORD PTR [rbp+0x50]
  445ffd:	add    rcx,0x260
  446004:	call   0x4047cc
  446009:	add    rsp,0x20
  44600d:	pop    rbp
  44600e:	ret    
  44600f:	int3   
  446010:	rex.W push rbx
  446012:	push   rbp
  446013:	push   rsi
  446014:	push   rdi
  446015:	push   r12
  446017:	push   r13
  446019:	push   r14
  44601b:	push   r15
  44601d:	sub    rsp,0x7a8
  446024:	mov    QWORD PTR [rsp+0x200],0xfffffffffffffffe
  446030:	call   QWORD PTR [rip+0x7052]        # 0x44d088
  446036:	xor    r12d,r12d
  446039:	mov    QWORD PTR [rsp+0xa8],r12
  446041:	mov    DWORD PTR [rsp+0xb0],r12d
  446049:	mov    DWORD PTR [rsp+0xb4],r12d
  446051:	call   QWORD PTR [rip+0x7039]        # 0x44d090
  446057:	mov    rdx,rax
  44605a:	lea    rcx,[rsp+0x80]
  446062:	call   0x4031c0
  446067:	nop
  446068:	lea    rdx,[rsp+0xa8]
  446070:	lea    rcx,[rsp+0x80]
  446078:	call   0x4011a8
  44607d:	nop
  44607e:	mov    rcx,QWORD PTR [rsp+0x80]
  446086:	call   0x40215c
  44608b:	mov    ebx,DWORD PTR [rsp+0xb0]
  446092:	cmp    ebx,0x1
  446095:	jne    0x44611b
  44609b:	mov    rdi,QWORD PTR [rip+0x22e9e]        # 0x468f40
  4460a2:	cmp    rdi,r12
  4460a5:	je     0x4460ce
  4460a7:	mov    rdx,QWORD PTR [rdi]
  4460aa:	mov    rcx,QWORD PTR [rip+0x22757]        # 0x468808
  4460b1:	call   QWORD PTR [rip+0x72b9]        # 0x44d370
  4460b7:	mov    rdx,QWORD PTR [rdi]
  4460ba:	mov    rcx,QWORD PTR [rip+0x2274f]        # 0x468810
  4460c1:	call   QWORD PTR [rip+0x72a9]        # 0x44d370
  4460c7:	mov    ebx,DWORD PTR [rsp+0xb0]
  4460ce:	movsxd rdi,ebx
  4460d1:	cmp    ebx,r12d
  4460d4:	je     0x446107
  4460d6:	shl    rdi,0x3
  4460da:	add    ebx,0xffffffff
  4460dd:	sub    rdi,0x8
  4460e1:	mov    rax,QWORD PTR [rsp+0xa8]
  4460e9:	mov    rsi,QWORD PTR [rdi+rax*1]
  4460ed:	cmp    rsi,r12
  4460f0:	je     0x446102
  4460f2:	mov    rcx,QWORD PTR [rsi]
  4460f5:	call   0x40215c
  4460fa:	mov    rcx,rsi
  4460fd:	call   0x40215c
  446102:	cmp    ebx,r12d
  446105:	jne    0x4460da
  446107:	mov    rcx,QWORD PTR [rsp+0xa8]
  44610f:	call   0x40215c
  446114:	xor    eax,eax
  446116:	jmp    0x448110
  44611b:	mov    rcx,QWORD PTR [rsp+0xa8]
  446123:	mov    rdi,QWORD PTR [rcx]
  446126:	cmp    rdi,r12
  446129:	je     0x44614a
  44612b:	mov    rcx,QWORD PTR [rdi]
  44612e:	call   0x40215c
  446133:	mov    rcx,rdi
  446136:	call   0x40215c
  44613b:	mov    ebx,DWORD PTR [rsp+0xb0]
  446142:	mov    rcx,QWORD PTR [rsp+0xa8]
  44614a:	lea    r8d,[rbx-0x1]
  44614e:	shl    r8,0x3
  446152:	lea    rdx,[rcx+0x8]
  446156:	call   0x44b774
  44615b:	mov    ebp,0xffffffff
  446160:	add    DWORD PTR [rsp+0xb0],ebp
  446167:	lea    rcx,[rsp+0x210]
  44616f:	call   0x445cf0
  446174:	nop
  446175:	lea    rcx,[rsp+0x5d0]
  44617d:	call   0x40ef44
  446182:	nop
  446183:	lea    r8,[rsp+0x210]
  44618b:	lea    rdx,[rsp+0xa8]
  446193:	lea    rcx,[rsp+0x5d0]
  44619b:	call   0x40f954
  4461a0:	lea    r11,[rip+0x22841]        # 0x4689e8
  4461a7:	mov    r13d,0x2
  4461ad:	cmp    DWORD PTR [rsp+0x4a8],0x1
  4461b5:	je     0x4461cf
  4461b7:	mov    rbx,r12
  4461ba:	cmp    DWORD PTR [rsp+0x4a8],r13d
  4461c2:	cmove  rbx,r11
  4461c6:	mov    QWORD PTR [rip+0x22d73],rbx        # 0x468f40
  4461cd:	jmp    0x4461d6
  4461cf:	mov    rbx,QWORD PTR [rip+0x22d6a]        # 0x468f40
  4461d6:	lea    rdi,[rip+0x227fb]        # 0x4689d8
  4461dd:	cmp    DWORD PTR [rsp+0x4ac],r13d
  4461e5:	je     0x4461fd
  4461e7:	mov    rax,r12
  4461ea:	cmp    DWORD PTR [rsp+0x4ac],0x1
  4461f2:	cmove  rax,rdi
  4461f6:	mov    QWORD PTR [rip+0x22d4b],rax        # 0x468f48
  4461fd:	mov    rsi,r12
  446200:	mov    eax,DWORD PTR [rsp+0x4b0]
  446207:	cmp    eax,r12d
  44620a:	je     0x446216
  44620c:	mov    rsi,rdi
  44620f:	cmp    eax,r13d
  446212:	cmove  rsi,r11
  446216:	cmp    BYTE PTR [rsp+0x210],r12b
  44621e:	je     0x4462ba
  446224:	cmp    rbx,r12
  446227:	je     0x44624a
  446229:	mov    rdx,QWORD PTR [rbx]
  44622c:	mov    rcx,QWORD PTR [rip+0x225d5]        # 0x468808
  446233:	call   QWORD PTR [rip+0x7137]        # 0x44d370
  446239:	mov    rdx,QWORD PTR [rbx]
  44623c:	mov    rcx,QWORD PTR [rip+0x225cd]        # 0x468810
  446243:	call   QWORD PTR [rip+0x7127]        # 0x44d370
  446249:	nop
  44624a:	lea    rcx,[rsp+0x5d0]
  446252:	call   0x40146c
  446257:	nop
  446258:	lea    rcx,[rsp+0x210]
  446260:	call   0x445a34
  446265:	nop
  446266:	movsxd rbx,DWORD PTR [rsp+0xb0]
  44626e:	mov    rdi,rbx
  446271:	cmp    ebx,r12d
  446274:	je     0x4462a6
  446276:	shl    rdi,0x3
  44627a:	add    ebx,ebp
  44627c:	sub    rdi,0x8
  446280:	mov    rax,QWORD PTR [rsp+0xa8]
  446288:	mov    rsi,QWORD PTR [rdi+rax*1]
  44628c:	cmp    rsi,r12
  44628f:	je     0x4462a1
  446291:	mov    rcx,QWORD PTR [rsi]
  446294:	call   0x40215c
  446299:	mov    rcx,rsi
  44629c:	call   0x40215c
  4462a1:	cmp    ebx,r12d
  4462a4:	jne    0x44627a
  4462a6:	mov    rcx,QWORD PTR [rsp+0xa8]
  4462ae:	call   0x40215c
  4462b3:	xor    eax,eax
  4462b5:	jmp    0x448110
  4462ba:	mov    dl,0x1
  4462bc:	lea    rcx,[rip+0xdce5]        # 0x453fa8
  4462c3:	call   0x40aee8
  4462c8:	mov    dl,0x1
  4462ca:	lea    rcx,[rip+0xdc97]        # 0x453f68
  4462d1:	call   0x40aee8
  4462d6:	cmp    BYTE PTR [rsp+0x211],r12b
  4462de:	je     0x4462f3
  4462e0:	call   0x44ad40
  4462e5:	mov    dl,0x1
  4462e7:	lea    rcx,[rip+0xdc4a]        # 0x453f38
  4462ee:	call   0x40aee8
  4462f3:	cmp    BYTE PTR [rsp+0x219],r12b
  4462fb:	je     0x446319
  4462fd:	mov    rdx,QWORD PTR [rip+0x22c3c]        # 0x468f40
  446304:	cmp    rdx,r12
  446307:	je     0x446319
  446309:	mov    rdx,QWORD PTR [rdx]
  44630c:	mov    rcx,QWORD PTR [rip+0x224f5]        # 0x468808
  446313:	call   QWORD PTR [rip+0x7057]        # 0x44d370
  446319:	lea    rdx,[rsp+0x210]
  446321:	lea    rcx,[rsp+0x5d0]
  446329:	call   0x411820
  44632e:	mov    r15d,0x1
  446334:	cmp    DWORD PTR [rsp+0x4b4],r12d
  44633c:	je     0x44634e
  44633e:	mov    eax,DWORD PTR [rsp+0x4a8]
  446345:	cmp    DWORD PTR [rsp+0x4b0],eax
  44634c:	je     0x446351
  44634e:	mov    r15d,r13d
  446351:	mov    r13d,0x50
  446357:	cmp    rsi,r12
  44635a:	je     0x446386
  44635c:	mov    ecx,0xfffffff5
  446361:	call   QWORD PTR [rip+0x6d91]        # 0x44d0f8
  446367:	mov    rcx,rax
  44636a:	lea    rdx,[rsp+0x80]
  446372:	call   QWORD PTR [rip+0x6d20]        # 0x44d098
  446378:	cmp    eax,r12d
  44637b:	je     0x446386
  44637d:	movsx  r13d,WORD PTR [rsp+0x80]
  446386:	mov    ecx,0x78
  44638b:	call   0x402130
  446390:	mov    QWORD PTR [rsp+0x7f0],rax
  446398:	cmp    rax,r12
  44639b:	je     0x4463aa
  44639d:	mov    rcx,rax
  4463a0:	call   0x445730
  4463a5:	mov    rbp,rax
  4463a8:	jmp    0x4463ad
  4463aa:	mov    rbp,r12
  4463ad:	mov    QWORD PTR [rsp+0x130],r12
  4463b5:	mov    rcx,r12
  4463b8:	mov    QWORD PTR [rsp+0x138],r12
  4463c0:	mov    QWORD PTR [rsp+0x140],r12
  4463c8:	mov    DWORD PTR [rsp+0x148],r12d
  4463d0:	mov    DWORD PTR [rsp+0x14c],r12d
  4463d8:	mov    QWORD PTR [rsp+0x150],r12
  4463e0:	mov    DWORD PTR [rsp+0x158],r12d
  4463e8:	mov    DWORD PTR [rsp+0x15c],r12d
  4463f0:	cmp    rbp,r12
  4463f3:	je     0x446424
  4463f5:	mov    rax,QWORD PTR [rbp+0x0]
  4463f9:	mov    rcx,rbp
  4463fc:	call   QWORD PTR [rax+0x8]
  4463ff:	mov    rcx,QWORD PTR [rsp+0x130]
  446407:	cmp    rcx,r12
  44640a:	je     0x44641c
  44640c:	mov    rax,QWORD PTR [rcx]
  44640f:	call   QWORD PTR [rax+0x10]
  446412:	mov    rcx,QWORD PTR [rsp+0x138]
  44641a:	jmp    0x446424
  44641c:	mov    rcx,QWORD PTR [rsp+0x138]
  446424:	mov    QWORD PTR [rsp+0x130],rbp
  44642c:	lea    rdx,[rbp+0x8]
  446430:	mov    rax,rbp
  446433:	neg    rax
  446436:	sbb    rbx,rbx
  446439:	and    rbx,rdx
  44643c:	je     0x44644f
  44643e:	mov    rax,QWORD PTR [rbx]
  446441:	mov    rcx,rbx
  446444:	call   QWORD PTR [rax+0x8]
  446447:	mov    rcx,QWORD PTR [rsp+0x138]
  44644f:	cmp    rcx,r12
  446452:	je     0x44645a
  446454:	mov    rax,QWORD PTR [rcx]
  446457:	call   QWORD PTR [rax+0x10]
  44645a:	mov    QWORD PTR [rsp+0x138],rbx
  446462:	mov    QWORD PTR [rsp+0x208],rbp
  44646a:	mov    al,BYTE PTR [rsp+0x212]
  446471:	mov    BYTE PTR [rbp+0x70],al
  446474:	mov    al,BYTE PTR [rsp+0x213]
  44647b:	mov    BYTE PTR [rbp+0x71],al
  44647e:	mov    rcx,rbp
  446481:	call   0x429108
  446486:	cmp    eax,r12d
  446489:	je     0x4464a7
  44648b:	mov    DWORD PTR [rsp+0x7f0],eax
  446492:	lea    rdx,[rip+0x20dbf]        # 0x467258
  446499:	lea    rcx,[rsp+0x7f0]
  4464a1:	call   0x44b71e
  4464a6:	int3   
  4464a7:	lea    rcx,[rsp+0x240]
  4464af:	call   0x40edb8
  4464b4:	mov    r14b,al
  4464b7:	cmp    DWORD PTR [rbp+0x48],r12d
  4464bb:	jne    0x44655c
  4464c1:	cmp    al,r12b
  4464c4:	jne    0x4464e2
  4464c6:	cmp    DWORD PTR [rsp+0x240],0x6
  4464ce:	je     0x4464e2
  4464d0:	lea    rcx,[rsp+0x240]
  4464d8:	call   0x40edc4
  4464dd:	cmp    al,r12b
  4464e0:	je     0x44655c
  4464e2:	cmp    DWORD PTR [rbp+0x30],r12d
  4464e6:	je     0x446538
  4464e8:	lea    rdx,[rip+0xe3f1]        # 0x4548e0
  4464ef:	lea    rcx,[rsp+0x80]
  4464f7:	call   0x4031c0
  4464fc:	nop
  4464fd:	lea    rdx,[rbp+0x28]
  446501:	lea    rcx,[rsp+0x80]
  446509:	call   0x403444
  44650e:	lea    rdx,[rsp+0x80]
  446516:	lea    rcx,[rsp+0xb8]
  44651e:	call   0x403208
  446523:	lea    rdx,[rip+0x20c7e]        # 0x4671a8
  44652a:	lea    rcx,[rsp+0xb8]
  446532:	call   0x44b71e
  446537:	nop
  446538:	mov    rax,QWORD PTR [rip+0x222e9]        # 0x468828
  44653f:	mov    QWORD PTR [rsp+0x7f0],rax
  446547:	lea    rdx,[rip+0x20b2a]        # 0x467078
  44654e:	lea    rcx,[rsp+0x7f0]
  446556:	call   0x44b71e
  44655b:	int3   
  44655c:	mov    QWORD PTR [rsp+0xd8],r12
  446564:	mov    DWORD PTR [rsp+0xe0],r12d
  44656c:	mov    DWORD PTR [rsp+0xe4],r12d
  446574:	lea    r8,[rsp+0xd8]
  44657c:	lea    rdx,[rsp+0x488]
  446584:	mov    rcx,rbp
  446587:	call   0x4331b4
  44658c:	cmp    al,r12b
  44658f:	jne    0x4465b5
  446591:	mov    rax,QWORD PTR [rip+0x22298]        # 0x468830
  446598:	mov    QWORD PTR [rsp+0x7f0],rax
  4465a0:	lea    rdx,[rip+0x20ad1]        # 0x467078
  4465a7:	lea    rcx,[rsp+0x7f0]
  4465af:	call   0x44b71e
  4465b4:	int3   
  4465b5:	mov    QWORD PTR [rsp+0xe8],r12
  4465bd:	mov    DWORD PTR [rsp+0xf0],r12d
  4465c5:	mov    DWORD PTR [rsp+0xf4],r12d
  4465cd:	mov    ebx,r12d
  4465d0:	cmp    DWORD PTR [rsp+0x4a0],r12d
  4465d8:	jbe    0x4466c0
  4465de:	xor    eax,eax
  4465e0:	mov    QWORD PTR [rsp+0x80],rax
  4465e8:	mov    DWORD PTR [rsp+0x88],eax
  4465ef:	mov    DWORD PTR [rsp+0x8c],eax
  4465f6:	mov    rax,QWORD PTR [rsp+0x498]
  4465fe:	lea    r8,[rsp+0x80]
  446606:	mov    rdx,QWORD PTR [r12+rax*1]
  44660a:	mov    rcx,rbp
  44660d:	call   0x427bd0
  446612:	test   al,al
  446614:	je     0x44669c
  44661a:	cmp    DWORD PTR [rsp+0x88],0x1
  446622:	jne    0x44669c
  446624:	mov    r9,QWORD PTR [rsp+0x80]
  44662c:	mov    r10d,DWORD PTR [r9]
  44662f:	xor    r8d,r8d
  446632:	mov    edx,DWORD PTR [rsp+0xf0]
  446639:	test   edx,edx
  44663b:	je     0x446664
  44663d:	mov    r11,QWORD PTR [rsp+0xe8]
  446645:	lea    ecx,[rdx+r8*1]
  446649:	shr    ecx,1
  44664b:	cmp    r10d,DWORD PTR [r11+rcx*4]
  44664f:	je     0x44667c
  446651:	cmp    r10d,DWORD PTR [r11+rcx*4]
  446655:	jge    0x44665b
  446657:	mov    edx,ecx
  446659:	jmp    0x44665f
  44665b:	lea    r8d,[rcx+0x1]
  44665f:	cmp    r8d,edx
  446662:	jne    0x446645
  446664:	mov    r8d,r10d
  446667:	lea    rcx,[rsp+0xe8]
  44666f:	call   0x40e964
  446674:	mov    r9,QWORD PTR [rsp+0x80]
  44667c:	mov    rcx,r9
  44667f:	call   0x40215c
  446684:	inc    ebx
  446686:	add    r12,0x8
  44668a:	cmp    ebx,DWORD PTR [rsp+0x4a0]
  446691:	jb     0x4465de
  446697:	xor    r12d,r12d
  44669a:	jmp    0x4466c0
  44669c:	mov    rax,QWORD PTR [rip+0x2218d]        # 0x468830
  4466a3:	mov    QWORD PTR [rsp+0x7f0],rax
  4466ab:	lea    rdx,[rip+0x209c6]        # 0x467078
  4466b2:	lea    rcx,[rsp+0x7f0]
  4466ba:	call   0x44b71e
  4466bf:	nop
  4466c0:	cmp    r14b,r12b
  4466c3:	jne    0x4466d7
  4466c5:	mov    rax,QWORD PTR [rsp+0x240]
  4466cd:	cmp    eax,0x9
  4466d0:	je     0x4466d7
  4466d2:	cmp    eax,0x7
  4466d5:	jne    0x44670d
  4466d7:	lea    rcx,[rsp+0x130]
  4466df:	call   0x40bec8
  4466e4:	cmp    eax,r12d
  4466e7:	je     0x446705
  4466e9:	mov    DWORD PTR [rsp+0x7f0],eax
  4466f0:	lea    rdx,[rip+0x20b61]        # 0x467258
  4466f7:	lea    rcx,[rsp+0x7f0]
  4466ff:	call   0x44b71e
  446704:	int3   
  446705:	mov    rax,QWORD PTR [rsp+0x240]
  44670d:	mov    DWORD PTR [rsp+0x7f0],r12d
  446715:	mov    DWORD PTR [rsp+0x808],r12d
  44671d:	cmp    eax,0x8
  446720:	jne    0x446ecf
  446726:	mov    rax,QWORD PTR [rip+0x22813]        # 0x468f40
  44672d:	xor    r15d,r15d
  446730:	cmp    rax,r15
  446733:	cmovne rdi,rax
  446737:	mov    rcx,rdi
  44673a:	call   0x402454
  44673f:	mov    rdx,QWORD PTR [rdi]
  446742:	lea    rcx,[rip+0xe18b]        # 0x4548d4
  446749:	call   QWORD PTR [rip+0x6c21]        # 0x44d370
  44674f:	mov    rcx,rdi
  446752:	call   0x402454
  446757:	mov    esi,r15d
  44675a:	cmp    DWORD PTR [rbp+0x20],r15d
  44675e:	jbe    0x4467a6
  446760:	mov    r13,r15
  446763:	mov    edx,esi
  446765:	mov    rcx,rdi
  446768:	call   0x443f48
  44676d:	mov    r11,QWORD PTR [rbp+0x18]
  446771:	mov    rax,QWORD PTR [r13+r11*1+0x0]
  446776:	mov    rbx,QWORD PTR [rax+0x8]
  44677a:	mov    rdx,QWORD PTR [rdi]
  44677d:	mov    ecx,0x20
  446782:	call   QWORD PTR [rip+0x6be0]        # 0x44d368
  446788:	mov    rdx,rbx
  44678b:	mov    rcx,rdi
  44678e:	call   0x402474
  446793:	mov    rcx,rax
  446796:	call   0x402454
  44679b:	inc    esi
  44679d:	add    r13,0x8
  4467a1:	cmp    esi,DWORD PTR [rbp+0x20]
  4467a4:	jb     0x446763
  4467a6:	mov    rcx,rdi
  4467a9:	call   0x402454
  4467ae:	mov    rdx,QWORD PTR [rdi]
  4467b1:	lea    rcx,[rip+0xe110]        # 0x4548c8
  4467b8:	call   QWORD PTR [rip+0x6bb2]        # 0x44d370
  4467be:	mov    rcx,rdi
  4467c1:	call   0x402454
  4467c6:	lea    rcx,[rip+0xe0eb]        # 0x4548b8
  4467cd:	call   0x44b78c
  4467d2:	mov    r14,rax
  4467d5:	mov    QWORD PTR [rsp+0xb8],rax
  4467dd:	mov    DWORD PTR [rsp+0x800],r15d
  4467e5:	cmp    DWORD PTR [rbp+0x48],r15d
  4467e9:	jbe    0x446b13
  4467ef:	mov    r12,r15
  4467f2:	mov    rax,QWORD PTR [rbp+0x40]
  4467f6:	mov    rsi,QWORD PTR [r12+rax*1]
  4467fa:	mov    edx,DWORD PTR [rsi+0x58]
  4467fd:	mov    rcx,rdi
  446800:	call   0x443f48
  446805:	mov    r11b,BYTE PTR [rsi+0x40]
  446809:	neg    r11b
  44680c:	sbb    al,al
  44680e:	and    al,0x23
  446810:	add    al,0x20
  446812:	movzx  ecx,al
  446815:	mov    rdx,QWORD PTR [rdi]
  446818:	call   QWORD PTR [rip+0x6b4a]        # 0x44d368
  44681e:	mov    ebx,r15d
  446821:	cmp    r14d,r15d
  446824:	jbe    0x446850
  446826:	lea    r13,[rip+0xe08b]        # 0x4548b8
  44682d:	bt     DWORD PTR [rsi],ebx
  446830:	jae    0x446838
  446832:	mov    al,BYTE PTR [r13+0x0]
  446836:	jmp    0x44683a
  446838:	mov    al,0x20
  44683a:	movzx  ecx,al
  44683d:	mov    rdx,QWORD PTR [rdi]
  446840:	call   QWORD PTR [rip+0x6b22]        # 0x44d368
  446846:	inc    ebx
  446848:	inc    r13
  44684b:	cmp    ebx,r14d
  44684e:	jb     0x44682d
  446850:	mov    rdx,QWORD PTR [rdi]
  446853:	mov    ecx,0x20
  446858:	call   QWORD PTR [rip+0x6b0a]        # 0x44d368
  44685e:	mov    ebx,DWORD PTR [rsi+0x20]
  446861:	mov    rdx,QWORD PTR [rsi+0x18]
  446865:	mov    rcx,rdi
  446868:	call   0x402474
  44686d:	cmp    ebx,0x8
  446870:	jae    0x44688e
  446872:	mov    eax,0x8
  446877:	sub    eax,ebx
  446879:	mov    ebx,eax
  44687b:	mov    rdx,QWORD PTR [rdi]
  44687e:	mov    ecx,0x20
  446883:	call   QWORD PTR [rip+0x6adf]        # 0x44d368
  446889:	dec    rbx
  44688c:	jne    0x44687b
  44688e:	mov    rdx,QWORD PTR [rdi]
  446891:	mov    ecx,0x20
  446896:	call   QWORD PTR [rip+0x6acc]        # 0x44d368
  44689c:	lea    rcx,[rsp+0x80]
  4468a4:	call   0x403150
  4468a9:	nop
  4468aa:	mov    ebx,r15d
  4468ad:	cmp    DWORD PTR [rsi+0x30],r15d
  4468b1:	jbe    0x446966
  4468b7:	mov    r14,r15
  4468ba:	cmp    ebx,r15d
  4468bd:	je     0x4468cc
  4468bf:	lea    rcx,[rsp+0x80]
  4468c7:	call   0x40393c
  4468cc:	mov    rax,QWORD PTR [rsi+0x28]
  4468d0:	mov    r13,QWORD PTR [r14+rax*1]
  4468d4:	mov    rdx,r13
  4468d7:	lea    rcx,[rsp+0x80]
  4468df:	call   0x403444
  4468e4:	cmp    DWORD PTR [r13+0x18],r15d
  4468e8:	je     0x446957
  4468ea:	lea    rdx,[rip+0xdfbf]        # 0x4548b0
  4468f1:	lea    rcx,[rsp+0x80]
  4468f9:	call   0x4033f0
  4468fe:	lea    rdx,[r13+0x10]
  446902:	lea    rcx,[rsp+0x80]
  44690a:	call   0x403444
  44690f:	mov    r11d,DWORD PTR [rsp+0x88]
  446917:	cmp    DWORD PTR [rsp+0x8c],r11d
  44691f:	jne    0x446936
  446921:	lea    rcx,[rsp+0x80]
  446929:	call   0x402f2c
  44692e:	mov    r11d,DWORD PTR [rsp+0x88]
  446936:	mov    rcx,QWORD PTR [rsp+0x80]
  44693e:	mov    eax,r11d
  446941:	mov    WORD PTR [rcx+rax*2],0x29
  446947:	inc    r11d
  44694a:	mov    WORD PTR [rcx+r11*2],r15w
  44694f:	mov    DWORD PTR [rsp+0x88],r11d
  446957:	inc    ebx
  446959:	add    r14,0x8
  44695d:	cmp    ebx,DWORD PTR [rsi+0x30]
  446960:	jb     0x4468ba
  446966:	mov    ebx,DWORD PTR [rsp+0x88]
  44696d:	mov    rdx,QWORD PTR [rsp+0x80]
  446975:	mov    rcx,rdi
  446978:	call   0x402474
  44697d:	cmp    ebx,0xd
  446980:	jae    0x44699e
  446982:	mov    eax,0xd
  446987:	sub    eax,ebx
  446989:	mov    ebx,eax
  44698b:	mov    rdx,QWORD PTR [rdi]
  44698e:	mov    ecx,0x20
  446993:	call   QWORD PTR [rip+0x69cf]        # 0x44d368
  446999:	dec    rbx
  44699c:	jne    0x44698b
  44699e:	mov    rdx,QWORD PTR [rdi]
  4469a1:	mov    ecx,0x20
  4469a6:	call   QWORD PTR [rip+0x69bc]        # 0x44d368
  4469ac:	cmp    DWORD PTR [rsi+0x44],r15d
  4469b0:	je     0x4469db
  4469b2:	mov    rdx,QWORD PTR [rdi]
  4469b5:	lea    rcx,[rip+0xdeec]        # 0x4548a8
  4469bc:	call   QWORD PTR [rip+0x69ae]        # 0x44d370
  4469c2:	mov    edx,DWORD PTR [rsi+0x44]
  4469c5:	mov    rcx,rdi
  4469c8:	call   0x40265c
  4469cd:	mov    rdx,QWORD PTR [rax]
  4469d0:	mov    ecx,0x20
  4469d5:	call   QWORD PTR [rip+0x698d]        # 0x44d368
  4469db:	mov    r14d,r15d
  4469de:	cmp    DWORD PTR [rsi+0x50],r15d
  4469e2:	jbe    0x446acc
  4469e8:	mov    rbx,r15
  4469eb:	mov    QWORD PTR [rsp+0xc8],r15
  4469f3:	cmp    r14d,r15d
  4469f6:	je     0x446a08
  4469f8:	mov    rdx,QWORD PTR [rdi]
  4469fb:	lea    rcx,[rip+0xde9e]        # 0x4548a0
  446a02:	call   QWORD PTR [rip+0x6968]        # 0x44d370
  446a08:	mov    rax,QWORD PTR [rsi+0x48]
  446a0c:	mov    r15,QWORD PTR [rbx+rax*1]
  446a10:	xor    r13d,r13d
  446a13:	cmp    QWORD PTR [r15+0x8],r13
  446a17:	jbe    0x446aad
  446a1d:	test   r13,r13
  446a20:	je     0x446a30
  446a22:	mov    rdx,QWORD PTR [rdi]
  446a25:	mov    ecx,0x20
  446a2a:	call   QWORD PTR [rip+0x6938]        # 0x44d368
  446a30:	mov    rax,QWORD PTR [r15]
  446a33:	mov    cl,BYTE PTR [rax+r13*1]
  446a37:	lea    eax,[rcx-0x21]
  446a3a:	cmp    al,0x5e
  446a3c:	ja     0x446a4c
  446a3e:	movzx  ecx,cl
  446a41:	mov    rdx,QWORD PTR [rdi]
  446a44:	call   QWORD PTR [rip+0x691e]        # 0x44d368
  446a4a:	jmp    0x446a98
  446a4c:	movzx  ebx,cl
  446a4f:	mov    r8d,ebx
  446a52:	shr    r8d,0x4
  446a56:	lea    edx,[r8+0x30]
  446a5a:	lea    eax,[r8+0x37]
  446a5e:	movzx  ecx,al
  446a61:	movzx  eax,dl
  446a64:	cmp    r8d,0xa
  446a68:	cmovb  ecx,eax
  446a6b:	movzx  ecx,cl
  446a6e:	mov    rdx,QWORD PTR [rdi]
  446a71:	call   QWORD PTR [rip+0x68f1]        # 0x44d368
  446a77:	and    ebx,0xf
  446a7a:	lea    edx,[rbx+0x30]
  446a7d:	lea    eax,[rbx+0x37]
  446a80:	movzx  ecx,al
  446a83:	movzx  eax,dl
  446a86:	cmp    ebx,0xa
  446a89:	cmovb  ecx,eax
  446a8c:	movzx  ecx,cl
  446a8f:	mov    rdx,QWORD PTR [rdi]
  446a92:	call   QWORD PTR [rip+0x68d0]        # 0x44d368
  446a98:	inc    r13
  446a9b:	cmp    r13,QWORD PTR [r15+0x8]
  446a9f:	jb     0x446a1d
  446aa5:	mov    rbx,QWORD PTR [rsp+0xc8]
  446aad:	inc    r14d
  446ab0:	add    rbx,0x8
  446ab4:	mov    QWORD PTR [rsp+0xc8],rbx
  446abc:	cmp    r14d,DWORD PTR [rsi+0x50]
  446ac0:	mov    r15d,0x0
  446ac6:	jb     0x4469f3
  446acc:	mov    rcx,rdi
  446acf:	call   0x402454
  446ad4:	nop
  446ad5:	mov    rcx,QWORD PTR [rsp+0x80]
  446add:	call   0x40215c
  446ae2:	mov    r13d,DWORD PTR [rsp+0x800]
  446aea:	inc    r13d
  446aed:	mov    DWORD PTR [rsp+0x800],r13d
  446af5:	add    r12,0x8
  446af9:	cmp    r13d,DWORD PTR [rbp+0x48]
  446afd:	mov    r14,QWORD PTR [rsp+0xb8]
  446b05:	jb     0x4467f2
  446b0b:	mov    r12d,DWORD PTR [rsp+0x808]
  446b13:	mov    rcx,rdi
  446b16:	call   0x402454
  446b1b:	mov    rdx,QWORD PTR [rdi]
  446b1e:	lea    rcx,[rip+0xdd73]        # 0x454898
  446b25:	call   QWORD PTR [rip+0x6845]        # 0x44d370
  446b2b:	mov    rcx,rdi
  446b2e:	call   0x402454
  446b33:	xor    r14d,r14d
  446b36:	mov    r13d,r14d
  446b39:	cmp    DWORD PTR [rip+0x22160],r14d        # 0x468ca0
  446b40:	jbe    0x446c11
  446b46:	lea    rsi,[rip+0x21f53]        # 0x468aa0
  446b4d:	lea    r15d,[r14+0x20]
  446b51:	mov    rbx,QWORD PTR [rsi]
  446b54:	mov    rdx,QWORD PTR [rdi]
  446b57:	lea    rcx,[rip+0xb332]        # 0x451e90
  446b5e:	call   QWORD PTR [rip+0x680c]        # 0x44d370
  446b64:	mov    rdx,QWORD PTR [rdi]
  446b67:	mov    ecx,r15d
  446b6a:	call   QWORD PTR [rip+0x67f8]        # 0x44d368
  446b70:	mov    edx,DWORD PTR [rbx+0x20]
  446b73:	cmp    edx,0x1
  446b76:	jne    0x446b86
  446b78:	mov    rdx,QWORD PTR [rdi]
  446b7b:	mov    ecx,r15d
  446b7e:	call   QWORD PTR [rip+0x67e4]        # 0x44d368
  446b84:	jmp    0x446b8e
  446b86:	mov    rcx,rdi
  446b89:	call   0x40265c
  446b8e:	mov    rax,QWORD PTR [rbx+0x8]
  446b92:	neg    rax
  446b95:	sbb    cl,cl
  446b97:	and    cl,0x25
  446b9a:	add    cl,r15b
  446b9d:	movzx  ecx,cl
  446ba0:	mov    rdx,QWORD PTR [rdi]
  446ba3:	call   QWORD PTR [rip+0x67bf]        # 0x44d368
  446ba9:	mov    r11,QWORD PTR [rbx]
  446bac:	neg    r11
  446baf:	sbb    al,al
  446bb1:	and    al,0x24
  446bb3:	add    al,r15b
  446bb6:	movzx  ecx,al
  446bb9:	mov    rdx,QWORD PTR [rdi]
  446bbc:	call   QWORD PTR [rip+0x67a6]        # 0x44d368
  446bc2:	mov    rdx,QWORD PTR [rdi]
  446bc5:	mov    ecx,r15d
  446bc8:	call   QWORD PTR [rip+0x679a]        # 0x44d368
  446bce:	mov    rdx,QWORD PTR [rbx+0x10]
  446bd2:	mov    rcx,rdi
  446bd5:	call   0x444324
  446bda:	mov    rdx,QWORD PTR [rdi]
  446bdd:	mov    ecx,r15d
  446be0:	call   QWORD PTR [rip+0x6782]        # 0x44d368
  446be6:	mov    rdx,QWORD PTR [rdi]
  446be9:	mov    rcx,QWORD PTR [rbx+0x18]
  446bed:	call   QWORD PTR [rip+0x677d]        # 0x44d370
  446bf3:	mov    rcx,rdi
  446bf6:	call   0x402454
  446bfb:	inc    r13d
  446bfe:	add    rsi,0x8
  446c02:	cmp    r13d,DWORD PTR [rip+0x22097]        # 0x468ca0
  446c09:	jb     0x446b51
  446c0f:	jmp    0x446c17
  446c11:	mov    r15d,0x20
  446c17:	mov    rax,QWORD PTR [rbp+0x0]
  446c1b:	lea    rdx,[rsp+0x7f8]
  446c23:	mov    rcx,rbp
  446c26:	call   QWORD PTR [rax+0x18]
  446c29:	cmp    eax,r14d
  446c2c:	jne    0x446d54
  446c32:	mov    esi,r14d
  446c35:	cmp    DWORD PTR [rsp+0x7f8],r14d
  446c3d:	jbe    0x446d54
  446c43:	mov    edx,esi
  446c45:	mov    rcx,rbp
  446c48:	call   0x427428
  446c4d:	mov    edx,eax
  446c4f:	mov    rcx,rdi
  446c52:	call   0x443f48
  446c57:	mov    edx,esi
  446c59:	mov    rcx,rbp
  446c5c:	call   0x42704c
  446c61:	cmp    eax,0x1
  446c64:	jne    0x446c74
  446c66:	mov    rdx,QWORD PTR [rdi]
  446c69:	mov    ecx,r15d
  446c6c:	call   QWORD PTR [rip+0x66f6]        # 0x44d368
  446c72:	jmp    0x446c7e
  446c74:	mov    edx,eax
  446c76:	mov    rcx,rdi
  446c79:	call   0x40265c
  446c7e:	mov    edx,esi
  446c80:	mov    rcx,rbp
  446c83:	call   0x427458
  446c88:	neg    al
  446c8a:	sbb    cl,cl
  446c8c:	and    cl,0x25
  446c8f:	add    cl,r15b
  446c92:	movzx  ecx,cl
  446c95:	mov    rdx,QWORD PTR [rdi]
  446c98:	call   QWORD PTR [rip+0x66ca]        # 0x44d368
  446c9e:	mov    edx,esi
  446ca0:	mov    rcx,rbp
  446ca3:	call   0x427444
  446ca8:	neg    al
  446caa:	sbb    cl,cl
  446cac:	and    cl,0x24
  446caf:	add    cl,r15b
  446cb2:	movzx  ecx,cl
  446cb5:	mov    rdx,QWORD PTR [rdi]
  446cb8:	call   QWORD PTR [rip+0x66aa]        # 0x44d368
  446cbe:	mov    rdx,QWORD PTR [rdi]
  446cc1:	mov    ecx,r15d
  446cc4:	call   QWORD PTR [rip+0x669e]        # 0x44d368
  446cca:	lea    r8,[rsp+0x800]
  446cd2:	mov    edx,esi
  446cd4:	mov    rcx,rbp
  446cd7:	call   0x4270d4
  446cdc:	mov    rdx,QWORD PTR [rsp+0x800]
  446ce4:	mov    rcx,0xffffffffffffffff
  446ceb:	cmp    eax,r14d
  446cee:	cmovne rdx,rcx
  446cf2:	mov    QWORD PTR [rsp+0x800],rdx
  446cfa:	mov    rcx,rdi
  446cfd:	call   0x444324
  446d02:	mov    r8d,esi
  446d05:	lea    rdx,[rsp+0x80]
  446d0d:	mov    rcx,rbp
  446d10:	call   0x42715c
  446d15:	mov    rbx,QWORD PTR [rax]
  446d18:	mov    rdx,QWORD PTR [rdi]
  446d1b:	mov    ecx,r15d
  446d1e:	call   QWORD PTR [rip+0x6644]        # 0x44d368
  446d24:	mov    rdx,QWORD PTR [rdi]
  446d27:	mov    rcx,rbx
  446d2a:	call   QWORD PTR [rip+0x6640]        # 0x44d370
  446d30:	mov    rcx,rdi
  446d33:	call   0x402454
  446d38:	mov    rcx,QWORD PTR [rsp+0x80]
  446d40:	call   0x40215c
  446d45:	inc    esi
  446d47:	cmp    esi,DWORD PTR [rsp+0x7f8]
  446d4e:	jb     0x446c43
  446d54:	mov    rcx,rdi
  446d57:	call   0x402454
  446d5c:	mov    rdx,QWORD PTR [rdi]
  446d5f:	lea    rcx,[rip+0xdb22]        # 0x454888
  446d66:	call   QWORD PTR [rip+0x6604]        # 0x44d370
  446d6c:	mov    rcx,rdi
  446d6f:	call   0x402454
  446d74:	mov    r13d,r14d
  446d77:	cmp    DWORD PTR [rip+0x21f26],r14d        # 0x468ca4
  446d7e:	jbe    0x446e04
  446d84:	lea    rsi,[rip+0x21c95]        # 0x468a20
  446d8b:	mov    rbx,QWORD PTR [rsi]
  446d8e:	mov    rdx,QWORD PTR [rdi]
  446d91:	lea    rcx,[rip+0xb0f8]        # 0x451e90
  446d98:	call   QWORD PTR [rip+0x65d2]        # 0x44d370
  446d9e:	mov    rdx,QWORD PTR [rdi]
  446da1:	mov    ecx,r15d
  446da4:	call   QWORD PTR [rip+0x65be]        # 0x44d368
  446daa:	mov    r8d,0x4
  446db0:	mov    edx,DWORD PTR [rbx+0x18]
  446db3:	mov    rcx,rdi
  446db6:	call   0x443ee0
  446dbb:	mov    rdx,QWORD PTR [rdi]
  446dbe:	mov    ecx,r15d
  446dc1:	call   QWORD PTR [rip+0x65a1]        # 0x44d368
  446dc7:	mov    rdx,QWORD PTR [rbx+0x8]
  446dcb:	mov    rcx,rdi
  446dce:	call   0x444324
  446dd3:	mov    rdx,QWORD PTR [rdi]
  446dd6:	mov    ecx,r15d
  446dd9:	call   QWORD PTR [rip+0x6589]        # 0x44d368
  446ddf:	mov    rdx,QWORD PTR [rdi]
  446de2:	mov    rcx,QWORD PTR [rbx+0x10]
  446de6:	call   QWORD PTR [rip+0x6584]        # 0x44d370
  446dec:	mov    rcx,rdi
  446def:	call   0x402454
  446df4:	inc    r13d
  446df7:	add    rsi,0x8
  446dfb:	cmp    r13d,DWORD PTR [rip+0x21ea2]        # 0x468ca4
  446e02:	jb     0x446d8b
  446e04:	lea    rcx,[rbp+0x8]
  446e08:	mov    rax,QWORD PTR [rcx]
  446e0b:	call   QWORD PTR [rax+0x18]
  446e0e:	mov    DWORD PTR [rsp+0x7f8],eax
  446e15:	mov    esi,r14d
  446e18:	cmp    eax,r14d
  446e1b:	jbe    0x447ffd
  446e21:	mov    edx,esi
  446e23:	mov    rcx,rbp
  446e26:	call   0x427438
  446e2b:	mov    edx,eax
  446e2d:	mov    rcx,rdi
  446e30:	call   0x443f48
  446e35:	mov    edx,esi
  446e37:	mov    rcx,rbp
  446e3a:	call   0x427394
  446e3f:	mov    edx,eax
  446e41:	mov    r8d,0x4
  446e47:	mov    rcx,rdi
  446e4a:	call   0x443ee0
  446e4f:	mov    rdx,QWORD PTR [rdi]
  446e52:	mov    ecx,r15d
  446e55:	call   QWORD PTR [rip+0x650d]        # 0x44d368
  446e5b:	mov    edx,esi
  446e5d:	mov    rcx,rbp
  446e60:	call   0x427234
  446e65:	mov    rdx,rax
  446e68:	mov    rcx,rdi
  446e6b:	call   0x444324
  446e70:	mov    r8d,esi
  446e73:	lea    rdx,[rsp+0x80]
  446e7b:	mov    rcx,rbp
  446e7e:	call   0x4272ac
  446e83:	mov    rbx,QWORD PTR [rax]
  446e86:	mov    rdx,QWORD PTR [rdi]
  446e89:	mov    ecx,r15d
  446e8c:	call   QWORD PTR [rip+0x64d6]        # 0x44d368
  446e92:	mov    rdx,QWORD PTR [rdi]
  446e95:	mov    rcx,rbx
  446e98:	call   QWORD PTR [rip+0x64d2]        # 0x44d370
  446e9e:	mov    rcx,rdi
  446ea1:	call   0x402454
  446ea6:	mov    rcx,QWORD PTR [rsp+0x80]
  446eae:	call   0x40215c
  446eb3:	inc    esi
  446eb5:	cmp    esi,DWORD PTR [rsp+0x7f8]
  446ebc:	jb     0x446e21
  446ec2:	mov    r13d,DWORD PTR [rsp+0x7f0]
  446eca:	jmp    0x448005
  446ecf:	cmp    eax,0x7
  446ed2:	jne    0x446f3b
  446ed4:	mov    rax,QWORD PTR [rip+0x22065]        # 0x468f40
  446edb:	xor    r14d,r14d
  446ede:	cmp    rax,r14
  446ee1:	cmovne rdi,rax
  446ee5:	mov    r9,QWORD PTR [rdi]
  446ee8:	mov    r8d,DWORD PTR [rsp+0x4b8]
  446ef0:	lea    rdx,[rsp+0x2c0]
  446ef8:	lea    rcx,[rsp+0x130]
  446f00:	call   0x43e294
  446f05:	mov    r12d,eax
  446f08:	cmp    eax,0x1
  446f0b:	jne    0x447ff3
  446f11:	mov    rdx,QWORD PTR [rip+0x22030]        # 0x468f48
  446f18:	cmp    rdx,r14
  446f1b:	je     0x446f2d
  446f1d:	mov    rdx,QWORD PTR [rdx]
  446f20:	lea    rcx,[rip+0xd949]        # 0x454870
  446f27:	call   QWORD PTR [rip+0x6443]        # 0x44d370
  446f2d:	mov    r13d,0x2
  446f33:	mov    r12d,r14d
  446f36:	jmp    0x448005
  446f3b:	xor    ebx,ebx
  446f3d:	cmp    r14b,bl
  446f40:	jne    0x447476
  446f46:	cmp    eax,0x6
  446f49:	je     0x447476
  446f4f:	lea    rcx,[rsp+0x240]
  446f57:	call   0x40edc4
  446f5c:	xor    r14d,r14d
  446f5f:	cmp    al,r14b
  446f62:	je     0x447253
  446f68:	cmp    BYTE PTR [rsp+0x3d4],r14b
  446f70:	je     0x446f90
  446f72:	cmp    DWORD PTR [rsp+0x3e0],r14d
  446f7a:	jne    0x446f90
  446f7c:	mov    rdx,QWORD PTR [rip+0x218b5]        # 0x468838
  446f83:	lea    rcx,[rsp+0x3d8]
  446f8b:	call   0x403290
  446f90:	lea    rax,[rip+0xd471]        # 0x454408
  446f97:	mov    QWORD PTR [rsp+0x4c0],rax
  446f9f:	mov    edx,0xc8
  446fa4:	lea    rcx,[rsp+0x4c8]
  446fac:	call   0x440e04
  446fb1:	nop
  446fb2:	mov    BYTE PTR [rsp+0x5b0],r14b
  446fba:	mov    BYTE PTR [rsp+0x5b1],r14b
  446fc2:	mov    BYTE PTR [rsp+0x5b2],r14b
  446fca:	mov    BYTE PTR [rsp+0x5b3],r14b
  446fd2:	lea    rcx,[rsp+0x5b8]
  446fda:	call   0x403150
  446fdf:	nop
  446fe0:	mov    rax,QWORD PTR [rip+0x21f59]        # 0x468f40
  446fe7:	mov    QWORD PTR [rsp+0x5a0],rax
  446fef:	mov    rax,QWORD PTR [rip+0x21f52]        # 0x468f48
  446ff6:	mov    QWORD PTR [rsp+0x5a8],rax
  446ffe:	mov    QWORD PTR [rsp+0x590],rsi
  447006:	cmp    BYTE PTR [rsp+0x258],r14b
  44700e:	je     0x44701e
  447010:	cmp    DWORD PTR [rsp+0x268],r14d
  447018:	je     0x44701e
  44701a:	mov    bl,0x1
  44701c:	jmp    0x447021
  44701e:	mov    bl,r14b
  447021:	mov    BYTE PTR [rsp+0x5b3],bl
  447028:	lea    rdx,[rsp+0x260]
  447030:	lea    rcx,[rsp+0x5b8]
  447038:	call   0x4032f8
  44703d:	lea    rcx,[rsp+0x610]
  447045:	call   0x44530c
  44704a:	nop
  44704b:	mov    eax,DWORD PTR [rsp+0x4b4]
  447052:	mov    DWORD PTR [rsp+0x710],eax
  447059:	mov    DWORD PTR [rsp+0x70c],r15d
  447061:	cmp    rsi,r14
  447064:	je     0x447071
  447066:	lea    eax,[r13-0x1]
  44706a:	mov    DWORD PTR [rsp+0x6f4],eax
  447071:	mov    BYTE PTR [rsp+0x778],bl
  447078:	cmp    BYTE PTR [rsp+0x258],r14b
  447080:	je     0x447096
  447082:	cmp    DWORD PTR [rsp+0x268],r14d
  44708a:	jne    0x447096
  44708c:	mov    BYTE PTR [rsp+0x790],0x1
  447094:	jmp    0x44709e
  447096:	mov    BYTE PTR [rsp+0x790],r14b
  44709e:	lea    rdx,[rsp+0x260]
  4470a6:	lea    rcx,[rsp+0x780]
  4470ae:	call   0x4032f8
  4470b3:	mov    r11b,BYTE PTR [rsp+0x400]
  4470bb:	mov    BYTE PTR [rsp+0x708],r11b
  4470c3:	mov    r9,rsi
  4470c6:	mov    r8,QWORD PTR [rip+0x21e7b]        # 0x468f48
  4470cd:	mov    rdx,QWORD PTR [rip+0x21e6c]        # 0x468f40
  4470d4:	lea    rcx,[rsp+0x620]
  4470dc:	call   0x444438
  4470e1:	mov    DWORD PTR [rsp+0x80],r14d
  4470e9:	lea    rcx,[rsp+0x88]
  4470f1:	call   0x402b34
  4470f6:	mov    QWORD PTR [rsp+0x98],r14
  4470fe:	mov    DWORD PTR [rsp+0xa0],r14d
  447106:	mov    DWORD PTR [rsp+0xa4],r14d
  44710e:	mov    BYTE PTR [rsp+0x40],0x1
  447113:	lea    rax,[rsp+0x610]
  44711b:	mov    QWORD PTR [rsp+0x38],rax
  447120:	lea    rax,[rsp+0x4c0]
  447128:	mov    QWORD PTR [rsp+0x30],rax
  44712d:	lea    rax,[rsp+0x80]
  447135:	mov    QWORD PTR [rsp+0x28],rax
  44713a:	lea    rax,[rsp+0x308]
  447142:	mov    QWORD PTR [rsp+0x20],rax
  447147:	lea    r9,[rsp+0x220]
  44714f:	lea    r8,[rsp+0x248]
  447157:	lea    rdx,[rsp+0xd8]
  44715f:	mov    rcx,rbp
  447162:	call   0x437e94
  447167:	mov    r12d,eax
  44716a:	cmp    QWORD PTR [rsp+0x6e8],r14
  447172:	je     0x447183
  447174:	mov    dl,0x1
  447176:	lea    rcx,[rsp+0x620]
  44717e:	call   0x448c48
  447183:	mov    r9,QWORD PTR [rip+0x21db6]        # 0x468f40
  44718a:	mov    rax,r9
  44718d:	cmp    r9,r14
  447190:	cmove  rax,QWORD PTR [rip+0x21db0]        # 0x468f48
  447198:	mov    BYTE PTR [rsp+0x28],0x1
  44719d:	mov    QWORD PTR [rsp+0x20],rax
  4471a2:	lea    r8,[rsp+0x80]
  4471aa:	lea    rdx,[rsp+0x620]
  4471b2:	mov    ecx,r12d
  4471b5:	call   0x4446ac
  4471ba:	mov    r13d,eax
  4471bd:	movsxd rbx,DWORD PTR [rsp+0xa0]
  4471c5:	mov    rdi,rbx
  4471c8:	cmp    ebx,r14d
  4471cb:	je     0x4471fe
  4471cd:	shl    rdi,0x3
  4471d1:	add    ebx,0xffffffff
  4471d4:	sub    rdi,0x8
  4471d8:	mov    rcx,QWORD PTR [rsp+0x98]
  4471e0:	mov    rsi,QWORD PTR [rdi+rcx*1]
  4471e4:	cmp    rsi,r14
  4471e7:	je     0x4471f9
  4471e9:	mov    rcx,QWORD PTR [rsi]
  4471ec:	call   0x40215c
  4471f1:	mov    rcx,rsi
  4471f4:	call   0x40215c
  4471f9:	cmp    ebx,r14d
  4471fc:	jne    0x4471d1
  4471fe:	mov    rcx,QWORD PTR [rsp+0x98]
  447206:	call   0x40215c
  44720b:	mov    rcx,QWORD PTR [rsp+0x88]
  447213:	call   0x40215c
  447218:	nop
  447219:	mov    rcx,QWORD PTR [rsp+0x780]
  447221:	call   0x40215c
  447226:	lea    rcx,[rsp+0x620]
  44722e:	call   0x4444c8
  447233:	nop
  447234:	mov    rcx,QWORD PTR [rsp+0x5b8]
  44723c:	call   0x40215c
  447241:	lea    rcx,[rsp+0x4c8]
  447249:	call   0x448d90
  44724e:	jmp    0x448005
  447253:	cmp    DWORD PTR [rsp+0x240],0x9
  44725b:	jne    0x447417
  447261:	lea    rcx,[rsp+0x610]
  447269:	call   0x4453a8
  44726e:	nop
  44726f:	cmp    rsi,r14
  447272:	je     0x44727f
  447274:	lea    eax,[r13-0x1]
  447278:	mov    DWORD PTR [rsp+0x6ec],eax
  44727f:	mov    r9,rsi
  447282:	mov    r8,QWORD PTR [rip+0x21cbf]        # 0x468f48
  447289:	mov    rdx,QWORD PTR [rip+0x21cb0]        # 0x468f40
  447290:	lea    rcx,[rsp+0x618]
  447298:	call   0x444438
  44729d:	mov    r11b,BYTE PTR [rsp+0x219]
  4472a5:	mov    BYTE PTR [rsp+0x791],r11b
  4472ad:	lea    rcx,[rsp+0x80]
  4472b5:	call   0x402b34
  4472ba:	nop
  4472bb:	lea    rax,[rsp+0x610]
  4472c3:	mov    QWORD PTR [rsp+0x20],rax
  4472c8:	lea    r9,[rsp+0x80]
  4472d0:	lea    r8,[rsp+0x470]
  4472d8:	lea    rdx,[rsp+0x220]
  4472e0:	lea    rcx,[rsp+0x130]
  4472e8:	call   0x425fec
  4472ed:	mov    r12d,eax
  4472f0:	mov    DWORD PTR [rsp+0xf8],r14d
  4472f8:	lea    rcx,[rsp+0x100]
  447300:	call   0x402b34
  447305:	mov    QWORD PTR [rsp+0x110],r14
  44730d:	mov    DWORD PTR [rsp+0x118],r14d
  447315:	mov    DWORD PTR [rsp+0x11c],r14d
  44731d:	lea    rdx,[rsp+0x80]
  447325:	lea    rcx,[rsp+0x100]
  44732d:	call   0x402c48
  447332:	mov    r9,QWORD PTR [rip+0x21c07]        # 0x468f40
  447339:	mov    rcx,r9
  44733c:	cmp    r9,r14
  44733f:	cmove  rcx,QWORD PTR [rip+0x21c01]        # 0x468f48
  447347:	mov    al,BYTE PTR [rsp+0x219]
  44734e:	mov    BYTE PTR [rsp+0x28],al
  447352:	mov    QWORD PTR [rsp+0x20],rcx
  447357:	lea    r8,[rsp+0xf8]
  44735f:	lea    rdx,[rsp+0x618]
  447367:	mov    ecx,r12d
  44736a:	call   0x4446ac
  44736f:	mov    r13d,eax
  447372:	movsxd rbx,DWORD PTR [rsp+0x118]
  44737a:	mov    rdi,rbx
  44737d:	cmp    ebx,r14d
  447380:	je     0x4473b3
  447382:	shl    rdi,0x3
  447386:	add    ebx,0xffffffff
  447389:	sub    rdi,0x8
  44738d:	mov    rax,QWORD PTR [rsp+0x110]
  447395:	mov    rsi,QWORD PTR [rdi+rax*1]
  447399:	cmp    rsi,r14
  44739c:	je     0x4473ae
  44739e:	mov    rcx,QWORD PTR [rsi]
  4473a1:	call   0x40215c
  4473a6:	mov    rcx,rsi
  4473a9:	call   0x40215c
  4473ae:	cmp    ebx,r14d
  4473b1:	jne    0x447386
  4473b3:	mov    rcx,QWORD PTR [rsp+0x110]
  4473bb:	call   0x40215c
  4473c0:	mov    rcx,QWORD PTR [rsp+0x100]
  4473c8:	call   0x40215c
  4473cd:	nop
  4473ce:	mov    rcx,QWORD PTR [rsp+0x80]
  4473d6:	call   0x40215c
  4473db:	nop
  4473dc:	lea    rax,[rip+0xce7d]        # 0x454260
  4473e3:	mov    QWORD PTR [rsp+0x610],rax
  4473eb:	mov    rcx,QWORD PTR [rsp+0x780]
  4473f3:	call   0x40215c
  4473f8:	mov    rcx,QWORD PTR [rsp+0x770]
  447400:	call   0x40215c
  447405:	lea    rcx,[rsp+0x618]
  44740d:	call   0x4444c8
  447412:	jmp    0x448005
  447417:	mov    rdi,QWORD PTR [rip+0x21402]        # 0x468820
  44741e:	mov    rbx,QWORD PTR [rip+0x21b23]        # 0x468f48
  447425:	cmp    rbx,r14
  447428:	je     0x447456
  44742a:	mov    rcx,rbx
  44742d:	call   0x402454
  447432:	mov    rdx,QWORD PTR [rbx]
  447435:	lea    rcx,[rip+0xad74]        # 0x4521b0
  44743c:	call   QWORD PTR [rip+0x5f2e]        # 0x44d370
  447442:	mov    rdx,QWORD PTR [rbx]
  447445:	mov    rcx,rdi
  447448:	call   QWORD PTR [rip+0x5f22]        # 0x44d370
  44744e:	mov    rcx,rbx
  447451:	call   0x402454
  447456:	mov    DWORD PTR [rsp+0x7f0],0x7
  447461:	lea    rdx,[rip+0x1fd98]        # 0x467200
  447468:	lea    rcx,[rsp+0x7f0]
  447470:	call   0x44b71e
  447475:	int3   
  447476:	mov    QWORD PTR [rsp+0x80],rbx
  44747e:	mov    DWORD PTR [rsp+0x88],ebx
  447485:	mov    DWORD PTR [rsp+0x8c],ebx
  44748c:	mov    QWORD PTR [rsp+0xb8],rbx
  447494:	mov    DWORD PTR [rsp+0xc0],ebx
  44749b:	mov    DWORD PTR [rsp+0xc4],ebx
  4474a2:	cmp    BYTE PTR [rsp+0x217],bl
  4474a9:	je     0x44752a
  4474ab:	mov    r12d,0x10
  4474b1:	mov    rcx,r12
  4474b4:	call   0x402130
  4474b9:	mov    QWORD PTR [rsp+0x7f8],rax
  4474c1:	cmp    rax,rbx
  4474c4:	je     0x4474d8
  4474c6:	lea    rdx,[rsp+0x2b0]
  4474ce:	mov    rcx,rax
  4474d1:	call   0x403208
  4474d6:	jmp    0x4474db
  4474d8:	mov    rax,rbx
  4474db:	mov    rdx,rax
  4474de:	lea    rcx,[rsp+0x80]
  4474e6:	call   0x4010c8
  4474eb:	mov    rcx,r12
  4474ee:	call   0x402130
  4474f3:	mov    QWORD PTR [rsp+0x7f8],rax
  4474fb:	cmp    rax,rbx
  4474fe:	je     0x447512
  447500:	lea    rdx,[rsp+0x2b0]
  447508:	mov    rcx,rax
  44750b:	call   0x403208
  447510:	jmp    0x447515
  447512:	mov    rax,rbx
  447515:	mov    rdx,rax
  447518:	lea    rcx,[rsp+0xb8]
  447520:	call   0x4010c8
  447525:	jmp    0x4476a0
  44752a:	lea    rax,[rip+0xcca7]        # 0x4541d8
  447531:	mov    QWORD PTR [rsp+0x4c0],rax
  447539:	mov    edx,0xc8
  44753e:	lea    rcx,[rsp+0x4d8]
  447546:	call   0x440e04
  44754b:	nop
  44754c:	mov    dl,BYTE PTR [rsp+0x219]
  447553:	mov    al,dl
  447555:	neg    al
  447557:	sbb    rcx,rcx
  44755a:	mov    rbx,QWORD PTR [rip+0x219df]        # 0x468f40
  447561:	and    rcx,rbx
  447564:	mov    QWORD PTR [rsp+0x4c8],rcx
  44756c:	mov    rax,QWORD PTR [rip+0x219d5]        # 0x468f48
  447573:	mov    QWORD PTR [rsp+0x4d0],rax
  44757b:	mov    QWORD PTR [rsp+0x5a0],rsi
  447583:	lea    eax,[r13-0x1]
  447587:	mov    DWORD PTR [rsp+0x5ac],eax
  44758e:	test   rbx,rbx
  447591:	je     0x4475af
  447593:	test   dl,dl
  447595:	je     0x4475af
  447597:	mov    rdx,QWORD PTR [rbx]
  44759a:	lea    rcx,[rip+0xd2a7]        # 0x454848
  4475a1:	call   QWORD PTR [rip+0x5dc9]        # 0x44d370
  4475a7:	mov    rcx,rbx
  4475aa:	call   0x402454
  4475af:	xor    ebx,ebx
  4475b1:	mov    QWORD PTR [rsp+0xf8],rbx
  4475b9:	mov    QWORD PTR [rsp+0x100],rbx
  4475c1:	mov    QWORD PTR [rsp+0x108],rbx
  4475c9:	mov    QWORD PTR [rsp+0x110],rbx
  4475d1:	mov    QWORD PTR [rsp+0x118],rbx
  4475d9:	mov    QWORD PTR [rsp+0x120],rbx
  4475e1:	lea    rcx,[rsp+0x4c0]
  4475e9:	call   0x43e390
  4475ee:	lea    rcx,[rsp+0xc8]
  4475f6:	call   0x403150
  4475fb:	nop
  4475fc:	lea    rcx,[rsp+0x4c0]
  447604:	mov    QWORD PTR [rsp+0x30],rcx
  447609:	lea    rcx,[rsp+0xf8]
  447611:	mov    QWORD PTR [rsp+0x28],rcx
  447616:	lea    rcx,[rsp+0xb8]
  44761e:	mov    QWORD PTR [rsp+0x20],rcx
  447623:	lea    r9,[rsp+0x80]
  44762b:	mov    r8,rax
  44762e:	xor    edx,edx
  447630:	lea    rcx,[rsp+0x290]
  447638:	call   0x4112f4
  44763d:	mov    r12d,eax
  447640:	mov    rcx,QWORD PTR [rsp+0xc8]
  447648:	call   0x40215c
  44764d:	cmp    QWORD PTR [rsp+0x5a0],rbx
  447655:	je     0x447666
  447657:	mov    dl,0x1
  447659:	lea    rcx,[rsp+0x4d8]
  447661:	call   0x448c48
  447666:	cmp    r12d,ebx
  447669:	jne    0x44768a
  44766b:	cmp    BYTE PTR [rsp+0x219],bl
  447672:	je     0x44768a
  447674:	lea    rdx,[rsp+0xf8]
  44767c:	lea    rcx,[rsp+0x4c0]
  447684:	call   0x43e6c4
  447689:	nop
  44768a:	lea    rcx,[rsp+0x4d8]
  447692:	call   0x448d90
  447697:	cmp    r12d,ebx
  44769a:	jne    0x447f3f
  4476a0:	cmp    r14b,bl
  4476a3:	je     0x447dd2
  4476a9:	mov    ecx,0x1b8
  4476ae:	call   0x402130
  4476b3:	mov    QWORD PTR [rsp+0x7f8],rax
  4476bb:	xor    r14d,r14d
  4476be:	cmp    rax,r14
  4476c1:	je     0x4476d0
  4476c3:	mov    rcx,rax
  4476c6:	call   0x444f14
  4476cb:	mov    rdi,rax
  4476ce:	jmp    0x4476d3
  4476d0:	mov    rdi,r14
  4476d3:	mov    QWORD PTR [rsp+0x7f8],rdi
  4476db:	cmp    rdi,r14
  4476de:	je     0x4476ea
  4476e0:	mov    rax,QWORD PTR [rdi]
  4476e3:	mov    rcx,rdi
  4476e6:	call   QWORD PTR [rax+0x8]
  4476e9:	nop
  4476ea:	mov    al,BYTE PTR [rsp+0x258]
  4476f1:	mov    BYTE PTR [rdi+0x10b],al
  4476f7:	lea    rcx,[rdi+0x110]
  4476fe:	lea    rdx,[rsp+0x260]
  447706:	call   0x4032f8
  44770b:	mov    r11,QWORD PTR [rip+0x21836]        # 0x468f48
  447712:	lea    rbx,[rdi+0x18]
  447716:	mov    rax,QWORD PTR [rip+0x21823]        # 0x468f40
  44771d:	mov    QWORD PTR [rbx+0xe0],rax
  447724:	mov    QWORD PTR [rbx+0xe8],r11
  44772b:	mov    QWORD PTR [rbx+0xd0],rsi
  447732:	mov    QWORD PTR [rdi+0x158],r14
  447739:	mov    BYTE PTR [rdi+0x160],r14b
  447740:	mov    BYTE PTR [rdi+0x161],r14b
  447747:	mov    QWORD PTR [rdi+0x168],r14
  44774e:	mov    QWORD PTR [rdi+0x170],r14
  447755:	mov    QWORD PTR [rdi+0x178],r14
  44775c:	mov    QWORD PTR [rdi+0x180],r14
  447763:	mov    QWORD PTR [rdi+0x188],r14
  44776a:	mov    QWORD PTR [rdi+0x190],r14
  447771:	mov    QWORD PTR [rdi+0x198],r14
  447778:	mov    QWORD PTR [rdi+0x1a0],r14
  44777f:	cmp    DWORD PTR [rsp+0x88],0x1
  447787:	seta   al
  44778a:	mov    BYTE PTR [rdi+0x10a],al
  447790:	mov    eax,DWORD PTR [rsp+0x4b4]
  447797:	mov    DWORD PTR [rdi+0x1b0],eax
  44779d:	mov    DWORD PTR [rdi+0x1ac],r15d
  4477a4:	cmp    rsi,r14
  4477a7:	je     0x4477b3
  4477a9:	lea    eax,[r13-0x1]
  4477ad:	mov    DWORD PTR [rdi+0xf4],eax
  4477b3:	lea    rcx,[rsp+0x160]
  4477bb:	call   0x444cf0
  4477c0:	nop
  4477c1:	movzx  eax,WORD PTR [rsp+0x2d0]
  4477c9:	mov    WORD PTR [rsp+0x160],ax
  4477d1:	mov    al,BYTE PTR [rsp+0x2d2]
  4477d8:	mov    BYTE PTR [rsp+0x162],al
  4477df:	mov    al,BYTE PTR [rsp+0x2d3]
  4477e6:	mov    BYTE PTR [rsp+0x163],al
  4477ed:	mov    eax,DWORD PTR [rsp+0x2d4]
  4477f4:	mov    DWORD PTR [rsp+0x164],eax
  4477fb:	mov    eax,DWORD PTR [rsp+0x2d8]
  447802:	mov    DWORD PTR [rsp+0x168],eax
  447809:	lea    rdx,[rsp+0x2e0]
  447811:	lea    rcx,[rsp+0x170]
  447819:	call   0x4032f8
  44781e:	lea    r11,[rsp+0x180]
  447826:	lea    rcx,[rsp+0x2f0]
  44782e:	mov    rax,QWORD PTR [rcx]
  447831:	mov    QWORD PTR [r11],rax
  447834:	movzx  eax,WORD PTR [rcx+0x8]
  447838:	mov    WORD PTR [r11+0x8],ax
  44783d:	mov    al,BYTE PTR [rsp+0x217]
  447844:	mov    BYTE PTR [rsp+0x190],al
  44784b:	mov    al,BYTE PTR [rsp+0x218]
  447852:	mov    BYTE PTR [rsp+0x191],al
  447859:	mov    al,BYTE PTR [rsp+0x21a]
  447860:	mov    BYTE PTR [rsp+0x192],al
  447867:	cmp    DWORD PTR [rsp+0x240],0x3
  44786f:	sete   BYTE PTR [rsp+0x193]
  447877:	lea    rdx,[rsp+0x2c0]
  44787f:	lea    rcx,[rsp+0x198]
  447887:	call   0x40f120
  44788c:	lea    rcx,[rsp+0xc8]
  447894:	call   0x403150
  447899:	nop
  44789a:	lea    rax,[rip+0x84c7]        # 0x44fd68
  4478a1:	mov    QWORD PTR [rsp+0x1b0],rax
  4478a9:	mov    QWORD PTR [rsp+0x1b8],r14
  4478b1:	mov    DWORD PTR [rsp+0x1c0],r14d
  4478b9:	mov    DWORD PTR [rsp+0x1c4],r14d
  4478c1:	mov    r13,r14
  4478c4:	cmp    DWORD PTR [rsp+0x280],r14d
  4478cc:	je     0x447944
  4478ce:	lea    r13,[rsp+0x1b0]
  4478d6:	lea    r8,[rsp+0x278]
  4478de:	lea    rdx,[rsp+0x130]
  4478e6:	lea    rcx,[rsp+0x1b0]
  4478ee:	call   0x425574
  4478f3:	cmp    eax,r14d
  4478f6:	je     0x447914
  4478f8:	mov    DWORD PTR [rsp+0x7f0],eax
  4478ff:	lea    rdx,[rip+0x1f952]        # 0x467258
  447906:	lea    rcx,[rsp+0x7f0]
  44790e:	call   0x44b71e
  447913:	int3   
  447914:	mov    QWORD PTR [rsp+0x1f0],r14
  44791c:	mov    QWORD PTR [rsp+0x1e8],r14
  447924:	mov    QWORD PTR [rsp+0x1e0],r14
  44792c:	mov    QWORD PTR [rsp+0x1d8],r14
  447934:	mov    QWORD PTR [rsp+0x1d0],r14
  44793c:	mov    QWORD PTR [rsp+0x1c8],r14
  447944:	mov    rax,QWORD PTR [rsp+0x220]
  44794c:	mov    rcx,QWORD PTR [rax]
  44794f:	add    rcx,0x10
  447953:	lea    rax,[rsp+0xf8]
  44795b:	mov    QWORD PTR [rsp+0x58],rax
  447960:	lea    rax,[rsp+0xc8]
  447968:	mov    QWORD PTR [rsp+0x50],rax
  44796d:	mov    QWORD PTR [rsp+0x48],r13
  447972:	mov    QWORD PTR [rsp+0x40],rdi
  447977:	mov    QWORD PTR [rsp+0x38],rbx
  44797c:	lea    rax,[rsp+0x160]
  447984:	mov    QWORD PTR [rsp+0x30],rax
  447989:	mov    QWORD PTR [rsp+0x28],rcx
  44798e:	lea    rax,[rsp+0xb8]
  447996:	mov    QWORD PTR [rsp+0x20],rax
  44799b:	lea    r9,[rsp+0x80]
  4479a3:	lea    r8,[rsp+0xe8]
  4479ab:	lea    rdx,[rsp+0xd8]
  4479b3:	mov    rcx,rbp
  4479b6:	call   0x423d08
  4479bb:	mov    r12d,eax
  4479be:	cmp    QWORD PTR [rbx+0xd0],r14
  4479c5:	je     0x4479d2
  4479c7:	lea    rcx,[rbx+0x8]
  4479cb:	mov    dl,0x1
  4479cd:	call   0x448c48
  4479d2:	cmp    DWORD PTR [rsp+0xd0],r14d
  4479da:	je     0x447a2f
  4479dc:	mov    rsi,QWORD PTR [rip+0x21565]        # 0x468f48
  4479e3:	cmp    rsi,r14
  4479e6:	je     0x447a23
  4479e8:	mov    rbx,QWORD PTR [rsp+0xc8]
  4479f0:	mov    rcx,rsi
  4479f3:	call   0x402454
  4479f8:	mov    rdx,QWORD PTR [rsi]
  4479fb:	lea    rcx,[rip+0xce3a]        # 0x45483c
  447a02:	call   QWORD PTR [rip+0x5968]        # 0x44d370
  447a08:	mov    rcx,rsi
  447a0b:	call   0x402454
  447a10:	mov    rdx,rbx
  447a13:	mov    rcx,rsi
  447a16:	call   0x402474
  447a1b:	mov    rcx,rax
  447a1e:	call   0x402454
  447a23:	mov    eax,0x80004005
  447a28:	cmp    r12d,r14d
  447a2b:	cmove  r12d,eax
  447a2f:	mov    rsi,QWORD PTR [rip+0x2150a]        # 0x468f40
  447a36:	mov    bl,r14b
  447a39:	cmp    rsi,r14
  447a3c:	je     0x447a9e
  447a3e:	mov    rcx,rsi
  447a41:	call   0x402454
  447a46:	cmp    QWORD PTR [rdi+0x158],0x1
  447a4e:	jbe    0x447a9e
  447a50:	mov    rdx,QWORD PTR [rsi]
  447a53:	lea    rcx,[rip+0xcdd6]        # 0x454830
  447a5a:	call   QWORD PTR [rip+0x5910]        # 0x44d370
  447a60:	mov    rdx,QWORD PTR [rdi+0x158]
  447a67:	mov    rcx,rsi
  447a6a:	call   0x40268c
  447a6f:	mov    rcx,rax
  447a72:	call   0x402454
  447a77:	mov    rdx,QWORD PTR [rsi]
  447a7a:	lea    rcx,[rip+0xcd9f]        # 0x454820
  447a81:	call   QWORD PTR [rip+0x58e9]        # 0x44d370
  447a87:	mov    rdx,QWORD PTR [rdi+0x168]
  447a8e:	mov    rcx,rsi
  447a91:	call   0x40268c
  447a96:	mov    rcx,rax
  447a99:	call   0x402454
  447a9e:	cmp    QWORD PTR [rdi+0x170],r14
  447aa5:	je     0x447ad5
  447aa7:	mov    bl,0x1
  447aa9:	cmp    rsi,r14
  447aac:	je     0x447ad5
  447aae:	mov    rdx,QWORD PTR [rsi]
  447ab1:	lea    rcx,[rip+0xcd50]        # 0x454808
  447ab8:	call   QWORD PTR [rip+0x58b2]        # 0x44d370
  447abe:	mov    rdx,QWORD PTR [rdi+0x170]
  447ac5:	mov    rcx,rsi
  447ac8:	call   0x40268c
  447acd:	mov    rcx,rax
  447ad0:	call   0x402454
  447ad5:	cmp    QWORD PTR [rdi+0x178],r14
  447adc:	je     0x447b10
  447ade:	mov    bl,0x1
  447ae0:	cmp    rsi,r14
  447ae3:	je     0x447b86
  447ae9:	mov    rdx,QWORD PTR [rsi]
  447aec:	lea    rcx,[rip+0xccfd]        # 0x4547f0
  447af3:	call   QWORD PTR [rip+0x5877]        # 0x44d370
  447af9:	mov    rdx,QWORD PTR [rdi+0x178]
  447b00:	mov    rcx,rsi
  447b03:	call   0x40268c
  447b08:	mov    rcx,rax
  447b0b:	call   0x402454
  447b10:	cmp    rsi,r14
  447b13:	je     0x447b86
  447b15:	cmp    QWORD PTR [rdi+0x180],r14
  447b1c:	je     0x447b45
  447b1e:	mov    rdx,QWORD PTR [rsi]
  447b21:	lea    rcx,[rip+0xcca8]        # 0x4547d0
  447b28:	call   QWORD PTR [rip+0x5842]        # 0x44d370
  447b2e:	mov    rdx,QWORD PTR [rdi+0x180]
  447b35:	mov    rcx,rsi
  447b38:	call   0x40268c
  447b3d:	mov    rcx,rax
  447b40:	call   0x402454
  447b45:	cmp    QWORD PTR [rdi+0x190],r14
  447b4c:	je     0x447b86
  447b4e:	mov    rcx,rsi
  447b51:	call   0x402454
  447b56:	cmp    QWORD PTR [rdi+0x190],r14
  447b5d:	je     0x447b86
  447b5f:	mov    rdx,QWORD PTR [rsi]
  447b62:	lea    rcx,[rip+0xcc57]        # 0x4547c0
  447b69:	call   QWORD PTR [rip+0x5801]        # 0x44d370
  447b6f:	mov    rdx,QWORD PTR [rdi+0x190]
  447b76:	mov    rcx,rsi
  447b79:	call   0x40268c
  447b7e:	mov    rcx,rax
  447b81:	call   0x402454
  447b86:	cmp    QWORD PTR [rdi+0x188],r14
  447b8d:	je     0x447bce
  447b8f:	mov    bl,0x1
  447b91:	cmp    rsi,r14
  447b94:	je     0x447bd3
  447b96:	mov    rcx,rsi
  447b99:	call   0x402454
  447b9e:	cmp    QWORD PTR [rdi+0x188],r14
  447ba5:	je     0x447bd3
  447ba7:	mov    rdx,QWORD PTR [rsi]
  447baa:	lea    rcx,[rip+0xcbff]        # 0x4547b0
  447bb1:	call   QWORD PTR [rip+0x57b9]        # 0x44d370
  447bb7:	mov    rdx,QWORD PTR [rdi+0x188]
  447bbe:	mov    rcx,rsi
  447bc1:	call   0x40268c
  447bc6:	mov    rcx,rax
  447bc9:	call   0x402454
  447bce:	cmp    bl,r14b
  447bd1:	je     0x447bde
  447bd3:	mov    DWORD PTR [rsp+0x7f0],0x2
  447bde:	cmp    rsi,r14
  447be1:	je     0x447d92
  447be7:	cmp    QWORD PTR [rdi+0x178],r14
  447bee:	jne    0x447d59
  447bf4:	cmp    QWORD PTR [rdi+0x198],r14
  447bfb:	jne    0x447d59
  447c01:	cmp    r12d,r14d
  447c04:	jne    0x447d92
  447c0a:	mov    rax,QWORD PTR [rsp+0x118]
  447c12:	cmp    rax,r14
  447c15:	je     0x447c47
  447c17:	mov    rdx,QWORD PTR [rsi]
  447c1a:	lea    rcx,[rip+0xcb7f]        # 0x4547a0
  447c21:	call   QWORD PTR [rip+0x5749]        # 0x44d370
  447c27:	mov    rdx,QWORD PTR [rsp+0x118]
  447c2f:	mov    rcx,rsi
  447c32:	call   0x40268c
  447c37:	mov    rcx,rax
  447c3a:	call   0x402454
  447c3f:	mov    rax,QWORD PTR [rsp+0x118]
  447c47:	cmp    QWORD PTR [rsp+0x120],0x1
  447c50:	jne    0x447c65
  447c52:	cmp    rax,r14
  447c55:	jne    0x447c65
  447c57:	cmp    QWORD PTR [rsp+0x128],r14
  447c5f:	je     0x447ce7
  447c65:	mov    rdx,QWORD PTR [rsi]
  447c68:	lea    rcx,[rip+0xcb29]        # 0x454798
  447c6f:	call   QWORD PTR [rip+0x56fb]        # 0x44d370
  447c75:	mov    rdx,QWORD PTR [rsp+0x120]
  447c7d:	mov    rcx,rsi
  447c80:	call   0x40268c
  447c85:	mov    rcx,rax
  447c88:	call   0x402454
  447c8d:	cmp    QWORD PTR [rsp+0x128],r14
  447c95:	je     0x447ce7
  447c97:	mov    rdx,QWORD PTR [rsi]
  447c9a:	lea    rcx,[rip+0xcadf]        # 0x454780
  447ca1:	call   QWORD PTR [rip+0x56c9]        # 0x44d370
  447ca7:	mov    rdx,QWORD PTR [rsp+0x128]
  447caf:	mov    rcx,rsi
  447cb2:	call   0x40268c
  447cb7:	mov    rcx,rax
  447cba:	call   0x402454
  447cbf:	mov    rdx,QWORD PTR [rsi]
  447cc2:	lea    rcx,[rip+0xca97]        # 0x454760
  447cc9:	call   QWORD PTR [rip+0x56a1]        # 0x44d370
  447ccf:	mov    rdx,QWORD PTR [rsp+0x108]
  447cd7:	mov    rcx,rsi
  447cda:	call   0x40268c
  447cdf:	mov    rcx,rax
  447ce2:	call   0x402454
  447ce7:	mov    rdx,QWORD PTR [rsi]
  447cea:	lea    rcx,[rip+0xca5f]        # 0x454750
  447cf1:	call   QWORD PTR [rip+0x5679]        # 0x44d370
  447cf7:	mov    rdx,QWORD PTR [rsp+0x100]
  447cff:	mov    rcx,rsi
  447d02:	call   0x40268c
  447d07:	mov    rbx,rax
  447d0a:	mov    rcx,rax
  447d0d:	call   0x402454
  447d12:	mov    rdx,QWORD PTR [rbx]
  447d15:	lea    rcx,[rip+0xca24]        # 0x454740
  447d1c:	call   QWORD PTR [rip+0x564e]        # 0x44d370
  447d22:	mov    rdx,QWORD PTR [rsp+0x110]
  447d2a:	mov    rcx,rbx
  447d2d:	call   0x40268c
  447d32:	mov    rcx,rax
  447d35:	call   0x402454
  447d3a:	cmp    r13,r14
  447d3d:	je     0x447d92
  447d3f:	mov    rcx,rsi
  447d42:	call   0x402454
  447d47:	lea    rdx,[rsp+0x1b0]
  447d4f:	mov    rcx,rsi
  447d52:	call   0x440634
  447d57:	jmp    0x447d92
  447d59:	mov    rcx,rsi
  447d5c:	call   0x402454
  447d61:	cmp    QWORD PTR [rdi+0x198],r14
  447d68:	je     0x447d92
  447d6a:	mov    rdx,QWORD PTR [rsi]
  447d6d:	lea    rcx,[rip+0xa6cc]        # 0x452440
  447d74:	call   QWORD PTR [rip+0x55f6]        # 0x44d370
  447d7a:	mov    rdx,QWORD PTR [rdi+0x198]
  447d81:	mov    rcx,rsi
  447d84:	call   0x40268c
  447d89:	mov    rcx,rax
  447d8c:	call   0x402454
  447d91:	nop
  447d92:	lea    rcx,[rsp+0x1b8]
  447d9a:	call   0x4253b0
  447d9f:	nop
  447da0:	mov    rcx,QWORD PTR [rsp+0xc8]
  447da8:	call   0x40215c
  447dad:	nop
  447dae:	lea    rcx,[rsp+0x160]
  447db6:	call   0x445468
  447dbb:	nop
  447dbc:	mov    rax,QWORD PTR [rdi]
  447dbf:	mov    rcx,rdi
  447dc2:	call   QWORD PTR [rax+0x10]
  447dc5:	mov    r13d,DWORD PTR [rsp+0x7f0]
  447dcd:	jmp    0x447f54
  447dd2:	xor    r14d,r14d
  447dd5:	mov    QWORD PTR [rsp+0x800],r14
  447ddd:	mov    QWORD PTR [rsp+0x7f8],r14
  447de5:	mov    rax,QWORD PTR [rsp+0x220]
  447ded:	mov    rcx,QWORD PTR [rax]
  447df0:	add    rcx,0x10
  447df4:	lea    rax,[rsp+0x7f8]
  447dfc:	mov    QWORD PTR [rsp+0x78],rax
  447e01:	lea    rax,[rsp+0x800]
  447e09:	mov    QWORD PTR [rsp+0x70],rax
  447e0e:	lea    rax,[rsp+0x2c0]
  447e16:	mov    QWORD PTR [rsp+0x68],rax
  447e1b:	lea    rax,[rsp+0x260]
  447e23:	mov    QWORD PTR [rsp+0x60],rax
  447e28:	lea    rax,[rsp+0x258]
  447e30:	mov    QWORD PTR [rsp+0x58],rax
  447e35:	mov    al,BYTE PTR [rsp+0x270]
  447e3c:	mov    BYTE PTR [rsp+0x50],al
  447e40:	mov    al,BYTE PTR [rsp+0x219]
  447e47:	mov    BYTE PTR [rsp+0x48],al
  447e4b:	mov    QWORD PTR [rsp+0x40],rcx
  447e50:	mov    al,BYTE PTR [rsp+0x302]
  447e57:	mov    BYTE PTR [rsp+0x38],al
  447e5b:	mov    al,BYTE PTR [rsp+0x2f6]
  447e62:	mov    BYTE PTR [rsp+0x30],al
  447e66:	lea    rax,[rsp+0xb8]
  447e6e:	mov    QWORD PTR [rsp+0x28],rax
  447e73:	lea    rax,[rsp+0x80]
  447e7b:	mov    QWORD PTR [rsp+0x20],rax
  447e80:	mov    r9b,BYTE PTR [rsp+0x217]
  447e88:	lea    r8,[rsp+0xe8]
  447e90:	lea    rdx,[rsp+0xd8]
  447e98:	mov    rcx,rbp
  447e9b:	call   0x442460
  447ea0:	mov    r12d,eax
  447ea3:	mov    al,BYTE PTR [rsp+0x219]
  447eaa:	cmp    al,r14b
  447ead:	je     0x447ef4
  447eaf:	cmp    QWORD PTR [rsp+0x7f8],r14
  447eb7:	jbe    0x447ef4
  447eb9:	mov    rcx,rdi
  447ebc:	call   0x402454
  447ec1:	mov    rdx,QWORD PTR [rip+0x20b10]        # 0x4689d8
  447ec8:	lea    rcx,[rip+0xc8f1]        # 0x4547c0
  447ecf:	call   QWORD PTR [rip+0x549b]        # 0x44d370
  447ed5:	mov    rdx,QWORD PTR [rsp+0x7f8]
  447edd:	mov    rcx,rdi
  447ee0:	call   0x40268c
  447ee5:	mov    rcx,rax
  447ee8:	call   0x402454
  447eed:	mov    al,BYTE PTR [rsp+0x219]
  447ef4:	cmp    QWORD PTR [rsp+0x800],r14
  447efc:	jbe    0x447f4c
  447efe:	cmp    al,r14b
  447f01:	je     0x447f37
  447f03:	mov    rcx,rdi
  447f06:	call   0x402454
  447f0b:	mov    rdx,QWORD PTR [rip+0x20ac6]        # 0x4689d8
  447f12:	lea    rcx,[rip+0xc817]        # 0x454730
  447f19:	call   QWORD PTR [rip+0x5451]        # 0x44d370
  447f1f:	mov    rdx,QWORD PTR [rsp+0x800]
  447f27:	mov    rcx,rdi
  447f2a:	call   0x40268c
  447f2f:	mov    rcx,rax
  447f32:	call   0x402454
  447f37:	mov    r13d,0x2
  447f3d:	jmp    0x447f54
  447f3f:	mov    r13d,DWORD PTR [rsp+0x7f0]
  447f47:	xor    r14d,r14d
  447f4a:	jmp    0x447f54
  447f4c:	mov    r13d,DWORD PTR [rsp+0x7f0]
  447f54:	movsxd rbx,DWORD PTR [rsp+0xc0]
  447f5c:	mov    rdi,rbx
  447f5f:	cmp    ebx,r14d
  447f62:	je     0x447f95
  447f64:	shl    rdi,0x3
  447f68:	add    ebx,0xffffffff
  447f6b:	sub    rdi,0x8
  447f6f:	mov    rax,QWORD PTR [rsp+0xb8]
  447f77:	mov    rsi,QWORD PTR [rdi+rax*1]
  447f7b:	cmp    rsi,r14
  447f7e:	je     0x447f90
  447f80:	mov    rcx,QWORD PTR [rsi]
  447f83:	call   0x40215c
  447f88:	mov    rcx,rsi
  447f8b:	call   0x40215c
  447f90:	cmp    ebx,r14d
  447f93:	jne    0x447f68
  447f95:	mov    rcx,QWORD PTR [rsp+0xb8]
  447f9d:	call   0x40215c
  447fa2:	nop
  447fa3:	movsxd rbx,DWORD PTR [rsp+0x88]
  447fab:	mov    rdi,rbx
  447fae:	cmp    ebx,r14d
  447fb1:	je     0x447fe4
  447fb3:	shl    rdi,0x3
  447fb7:	add    ebx,0xffffffff
  447fba:	sub    rdi,0x8
  447fbe:	mov    rax,QWORD PTR [rsp+0x80]
  447fc6:	mov    rsi,QWORD PTR [rdi+rax*1]
  447fca:	cmp    rsi,r14
  447fcd:	je     0x447fdf
  447fcf:	mov    rcx,QWORD PTR [rsi]
  447fd2:	call   0x40215c
  447fd7:	mov    rcx,rsi
  447fda:	call   0x40215c
  447fdf:	cmp    ebx,r14d
  447fe2:	jne    0x447fb7
  447fe4:	mov    rcx,QWORD PTR [rsp+0x80]
  447fec:	call   0x40215c
  447ff1:	jmp    0x448005
  447ff3:	mov    r13d,DWORD PTR [rsp+0x7f0]
  447ffb:	jmp    0x448005
  447ffd:	mov    r13d,DWORD PTR [rsp+0x7f0]
  448005:	cmp    BYTE PTR [rsp+0x271],r14b
  44800d:	je     0x44801d
  44800f:	cmp    QWORD PTR [rip+0x20f2a],r14        # 0x468f40
  448016:	je     0x44801d
  448018:	call   0x444170
  44801d:	cmp    r12d,r14d
  448020:	je     0x44803f
  448022:	mov    DWORD PTR [rsp+0x7f0],r12d
  44802a:	lea    rdx,[rip+0x1f227]        # 0x467258
  448031:	lea    rcx,[rsp+0x7f0]
  448039:	call   0x44b71e
  44803e:	nop
  44803f:	mov    rcx,QWORD PTR [rsp+0xe8]
  448047:	call   0x40215c
  44804c:	nop
  44804d:	movsxd rbx,DWORD PTR [rsp+0xe0]
  448055:	mov    rdi,rbx
  448058:	cmp    ebx,r14d
  44805b:	je     0x44807e
  44805d:	shl    rdi,0x3
  448061:	add    ebx,0xffffffff
  448064:	sub    rdi,0x8
  448068:	mov    rax,QWORD PTR [rsp+0xd8]
  448070:	mov    rcx,QWORD PTR [rdi+rax*1]
  448074:	call   0x40215c
  448079:	cmp    ebx,r14d
  44807c:	jne    0x448061
  44807e:	mov    rcx,QWORD PTR [rsp+0xd8]
  448086:	call   0x40215c
  44808b:	nop
  44808c:	mov    rcx,rbp
  44808f:	call   0x4286b0
  448094:	nop
  448095:	lea    rcx,[rsp+0x130]
  44809d:	call   0x444b84
  4480a2:	nop
  4480a3:	lea    rcx,[rsp+0x5d0]
  4480ab:	call   0x40146c
  4480b0:	nop
  4480b1:	lea    rcx,[rsp+0x210]
  4480b9:	call   0x445a34
  4480be:	nop
  4480bf:	movsxd rbx,DWORD PTR [rsp+0xb0]
  4480c7:	mov    rdi,rbx
  4480ca:	cmp    ebx,r14d
  4480cd:	je     0x448100
  4480cf:	shl    rdi,0x3
  4480d3:	add    ebx,0xffffffff
  4480d6:	sub    rdi,0x8
  4480da:	mov    rax,QWORD PTR [rsp+0xa8]
  4480e2:	mov    rsi,QWORD PTR [rdi+rax*1]
  4480e6:	cmp    rsi,r14
  4480e9:	je     0x4480fb
  4480eb:	mov    rcx,QWORD PTR [rsi]
  4480ee:	call   0x40215c
  4480f3:	mov    rcx,rsi
  4480f6:	call   0x40215c
  4480fb:	cmp    ebx,r14d
  4480fe:	jne    0x4480d3
  448100:	mov    rcx,QWORD PTR [rsp+0xa8]
  448108:	call   0x40215c
  44810d:	mov    eax,r13d
  448110:	add    rsp,0x7a8
  448117:	pop    r15
  448119:	pop    r14
  44811b:	pop    r13
  44811d:	pop    r12
  44811f:	pop    rdi
  448120:	pop    rsi
  448121:	pop    rbp
  448122:	pop    rbx
  448123:	ret    
  448124:	int3   
  448125:	int3   
  448126:	int3   
  448127:	int3   
  448128:	int3   
  448129:	int3   
  44812a:	int3   
  44812b:	int3   
  44812c:	int3   
  44812d:	int3   
  44812e:	int3   
  44812f:	int3   
  448130:	rex.W push rbp
  448132:	sub    rsp,0x20
  448136:	mov    rbp,rdx
  448139:	lea    rcx,[rbp+0xa8]
  448140:	call   0x4047cc
  448145:	add    rsp,0x20
  448149:	pop    rbp
  44814a:	ret    
  44814b:	int3   
  44814c:	int3   
  44814d:	int3   
  44814e:	int3   
  44814f:	int3   
  448150:	rex.W push rbp
  448152:	sub    rsp,0x20
  448156:	mov    rbp,rdx
  448159:	lea    rcx,[rbp+0x80]
  448160:	call   0x401000
  448165:	add    rsp,0x20
  448169:	pop    rbp
  44816a:	ret    
  44816b:	int3   
  44816c:	int3   
  44816d:	int3   
  44816e:	int3   
  44816f:	int3   
  448170:	rex.W push rbp
  448172:	sub    rsp,0x20
  448176:	mov    rbp,rdx
  448179:	lea    rcx,[rbp+0x210]
  448180:	call   0x445a34
  448185:	add    rsp,0x20
  448189:	pop    rbp
  44818a:	ret    
  44818b:	int3   
  44818c:	int3   
  44818d:	int3   
  44818e:	int3   
  44818f:	int3   
  448190:	rex.W push rbp
  448192:	sub    rsp,0x20
  448196:	mov    rbp,rdx
  448199:	lea    rcx,[rbp+0x5d0]
  4481a0:	call   0x444390
  4481a5:	add    rsp,0x20
  4481a9:	pop    rbp
  4481aa:	ret    
  4481ab:	int3   
  4481ac:	int3   
  4481ad:	int3   
  4481ae:	int3   
  4481af:	int3   
  4481b0:	rex.W push rbp
  4481b2:	sub    rsp,0x20
  4481b6:	mov    rbp,rdx
  4481b9:	mov    rcx,QWORD PTR [rbp+0x7f0]
  4481c0:	call   0x40215c
  4481c5:	add    rsp,0x20
  4481c9:	pop    rbp
  4481ca:	ret    
  4481cb:	int3   
  4481cc:	int3   
  4481cd:	int3   
  4481ce:	int3   
  4481cf:	int3   
  4481d0:	rex.W push rbp
  4481d2:	sub    rsp,0x20
  4481d6:	mov    rbp,rdx
  4481d9:	lea    rcx,[rbp+0x130]
  4481e0:	call   0x444b84
  4481e5:	add    rsp,0x20
  4481e9:	pop    rbp
  4481ea:	ret    
  4481eb:	int3   
  4481ec:	int3   
  4481ed:	int3   
  4481ee:	int3   
  4481ef:	int3   
  4481f0:	rex.W push rbp
  4481f2:	sub    rsp,0x20
  4481f6:	mov    rbp,rdx
  4481f9:	lea    rcx,[rbp+0x208]
  448200:	call   0x443ec8
  448205:	add    rsp,0x20
  448209:	pop    rbp
  44820a:	ret    
  44820b:	int3   
  44820c:	int3   
  44820d:	int3   
  44820e:	int3   
  44820f:	int3   
  448210:	rex.W push rbp
  448212:	sub    rsp,0x20
  448216:	mov    rbp,rdx
  448219:	lea    rcx,[rbp+0x80]
  448220:	call   0x401000
  448225:	add    rsp,0x20
  448229:	pop    rbp
  44822a:	ret    
  44822b:	int3   
  44822c:	int3   
  44822d:	int3   
  44822e:	int3   
  44822f:	int3   
  448230:	rex.W push rbp
  448232:	sub    rsp,0x20
  448236:	mov    rbp,rdx
  448239:	lea    rcx,[rbp+0xd8]
  448240:	call   0x422c70
  448245:	add    rsp,0x20
  448249:	pop    rbp
  44824a:	ret    
  44824b:	int3   
  44824c:	int3   
  44824d:	int3   
  44824e:	int3   
  44824f:	int3   
  448250:	rex.W push rbp
  448252:	sub    rsp,0x20
  448256:	mov    rbp,rdx
  448259:	lea    rcx,[rbp+0xe8]
  448260:	call   0x401000
  448265:	add    rsp,0x20
  448269:	pop    rbp
  44826a:	ret    
  44826b:	int3   
  44826c:	int3   
  44826d:	int3   
  44826e:	int3   
  44826f:	int3   
  448270:	rex.W push rbp
  448272:	sub    rsp,0x20
  448276:	mov    rbp,rdx
  448279:	lea    rcx,[rbp+0x80]
  448280:	call   0x401000
  448285:	add    rsp,0x20
  448289:	pop    rbp
  44828a:	ret    
  44828b:	int3   
  44828c:	int3   
  44828d:	int3   
  44828e:	int3   
  44828f:	int3   
  448290:	rex.W push rbp
  448292:	sub    rsp,0x20
  448296:	mov    rbp,rdx
  448299:	lea    rcx,[rbp+0x80]
  4482a0:	call   0x401000
  4482a5:	add    rsp,0x20
  4482a9:	pop    rbp
  4482aa:	ret    
  4482ab:	int3   
  4482ac:	int3   
  4482ad:	int3   
  4482ae:	int3   
  4482af:	int3   
  4482b0:	rex.W push rbp
  4482b2:	sub    rsp,0x20
  4482b6:	mov    rbp,rdx
  4482b9:	lea    rcx,[rbp+0x80]
  4482c0:	call   0x4047cc
  4482c5:	add    rsp,0x20
  4482c9:	pop    rbp
  4482ca:	ret    
  4482cb:	int3   
  4482cc:	int3   
  4482cd:	int3   
  4482ce:	int3   
  4482cf:	int3   
  4482d0:	rex.W push rbp
  4482d2:	sub    rsp,0x20
  4482d6:	mov    rbp,rdx
  4482d9:	lea    rcx,[rbp+0xb8]
  4482e0:	call   0x4047cc
  4482e5:	add    rsp,0x20
  4482e9:	pop    rbp
  4482ea:	ret    
  4482eb:	int3   
  4482ec:	int3   
  4482ed:	int3   
  4482ee:	int3   
  4482ef:	int3   
  4482f0:	rex.W push rbp
  4482f2:	sub    rsp,0x20
  4482f6:	mov    rbp,rdx
  4482f9:	mov    rcx,QWORD PTR [rbp+0x7f8]
  448300:	call   0x40215c
  448305:	add    rsp,0x20
  448309:	pop    rbp
  44830a:	ret    
  44830b:	int3   
  44830c:	int3   
  44830d:	int3   
  44830e:	int3   
  44830f:	int3   
  448310:	rex.W push rbp
  448312:	sub    rsp,0x20
  448316:	mov    rbp,rdx
  448319:	mov    rcx,QWORD PTR [rbp+0x7f8]
  448320:	call   0x40215c
  448325:	add    rsp,0x20
  448329:	pop    rbp
  44832a:	ret    
  44832b:	int3   
  44832c:	int3   
  44832d:	int3   
  44832e:	int3   
  44832f:	int3   
  448330:	rex.W push rbp
  448332:	sub    rsp,0x20
  448336:	mov    rbp,rdx
  448339:	lea    rcx,[rbp+0x4c0]
  448340:	call   0x444398
  448345:	add    rsp,0x20
  448349:	pop    rbp
  44834a:	ret    
  44834b:	int3   
  44834c:	int3   
  44834d:	int3   
  44834e:	int3   
  44834f:	int3   
  448350:	rex.W push rbp
  448352:	sub    rsp,0x20
  448356:	mov    rbp,rdx
  448359:	lea    rcx,[rbp+0xc8]
  448360:	call   0x401000
  448365:	add    rsp,0x20
  448369:	pop    rbp
  44836a:	ret    
  44836b:	int3   
  44836c:	int3   
  44836d:	int3   
  44836e:	int3   
  44836f:	int3   
  448370:	rex.W push rbp
  448372:	sub    rsp,0x20
  448376:	mov    rbp,rdx
  448379:	mov    rcx,QWORD PTR [rbp+0x7f8]
  448380:	call   0x40215c
  448385:	add    rsp,0x20
  448389:	pop    rbp
  44838a:	ret    
  44838b:	int3   
  44838c:	int3   
  44838d:	int3   
  44838e:	int3   
  44838f:	int3   
  448390:	rex.W push rbp
  448392:	sub    rsp,0x20
  448396:	mov    rbp,rdx
  448399:	lea    rcx,[rbp+0x7f8]
  4483a0:	call   0x4176b4
  4483a5:	add    rsp,0x20
  4483a9:	pop    rbp
  4483aa:	ret    
  4483ab:	int3   
  4483ac:	int3   
  4483ad:	int3   
  4483ae:	int3   
  4483af:	int3   
  4483b0:	rex.W push rbp
  4483b2:	sub    rsp,0x20
  4483b6:	mov    rbp,rdx
  4483b9:	lea    rcx,[rbp+0x160]
  4483c0:	call   0x445468
  4483c5:	add    rsp,0x20
  4483c9:	pop    rbp
  4483ca:	ret    
  4483cb:	int3   
  4483cc:	int3   
  4483cd:	int3   
  4483ce:	int3   
  4483cf:	int3   
  4483d0:	rex.W push rbp
  4483d2:	sub    rsp,0x20
  4483d6:	mov    rbp,rdx
  4483d9:	lea    rcx,[rbp+0xc8]
  4483e0:	call   0x401000
  4483e5:	add    rsp,0x20
  4483e9:	pop    rbp
  4483ea:	ret    
  4483eb:	int3   
  4483ec:	int3   
  4483ed:	int3   
  4483ee:	int3   
  4483ef:	int3   
  4483f0:	rex.W push rbp
  4483f2:	sub    rsp,0x20
  4483f6:	mov    rbp,rdx
  4483f9:	lea    rcx,[rbp+0x1b0]
  448400:	call   0x425438
  448405:	add    rsp,0x20
  448409:	pop    rbp
  44840a:	ret    
  44840b:	int3   
  44840c:	int3   
  44840d:	int3   
  44840e:	int3   
  44840f:	int3   
  448410:	rex.W push rbp
  448412:	sub    rsp,0x20
  448416:	mov    rbp,rdx
  448419:	lea    rcx,[rbp+0x4c0]
  448420:	add    rcx,0x8
  448424:	call   0x448d90
  448429:	add    rsp,0x20
  44842d:	pop    rbp
  44842e:	ret    
  44842f:	int3   
  448430:	rex.W push rbp
  448432:	sub    rsp,0x20
  448436:	mov    rbp,rdx
  448439:	lea    rcx,[rbp+0x4c0]
  448440:	call   0x440de0
  448445:	add    rsp,0x20
  448449:	pop    rbp
  44844a:	ret    
  44844b:	int3   
  44844c:	int3   
  44844d:	int3   
  44844e:	int3   
  44844f:	int3   
  448450:	rex.W push rbp
  448452:	sub    rsp,0x20
  448456:	mov    rbp,rdx
  448459:	lea    rcx,[rbp+0x610]
  448460:	call   0x444974
  448465:	add    rsp,0x20
  448469:	pop    rbp
  44846a:	ret    
  44846b:	int3   
  44846c:	int3   
  44846d:	int3   
  44846e:	int3   
  44846f:	int3   
  448470:	rex.W push rbp
  448472:	sub    rsp,0x20
  448476:	mov    rbp,rdx
  448479:	lea    rcx,[rbp+0x80]
  448480:	call   0x444998
  448485:	add    rsp,0x20
  448489:	pop    rbp
  44848a:	ret    
  44848b:	int3   
  44848c:	int3   
  44848d:	int3   
  44848e:	int3   
  44848f:	int3   
  448490:	rex.W push rbp
  448492:	sub    rsp,0x20
  448496:	mov    rbp,rdx
  448499:	lea    rcx,[rbp+0x610]
  4484a0:	call   0x4445a8
  4484a5:	add    rsp,0x20
  4484a9:	pop    rbp
  4484aa:	ret    
  4484ab:	int3   
  4484ac:	int3   
  4484ad:	int3   
  4484ae:	int3   
  4484af:	int3   
  4484b0:	rex.W push rbp
  4484b2:	sub    rsp,0x20
  4484b6:	mov    rbp,rdx
  4484b9:	lea    rcx,[rbp+0x80]
  4484c0:	call   0x401000
  4484c5:	add    rsp,0x20
  4484c9:	pop    rbp
  4484ca:	ret    
  4484cb:	int3   
  4484cc:	int3   
  4484cd:	int3   
  4484ce:	int3   
  4484cf:	int3   
  4484d0:	rex.W push rbp
  4484d2:	sub    rsp,0x20
  4484d6:	mov    rbp,rdx
  4484d9:	lea    rcx,[rbp+0xf8]
  4484e0:	call   0x444998
  4484e5:	add    rsp,0x20
  4484e9:	pop    rbp
  4484ea:	ret    
  4484eb:	int3   
  4484ec:	rex.W push rbx
  4484ee:	push   rdi
  4484ef:	sub    rsp,0x28
  4484f3:	mov    rdi,rcx
  4484f6:	mov    rcx,QWORD PTR [rip+0x20a43]        # 0x468f40
  4484fd:	test   rcx,rcx
  448500:	je     0x448507
  448502:	call   0x402438
  448507:	mov    rbx,QWORD PTR [rip+0x20a3a]        # 0x468f48
  44850e:	test   rbx,rbx
  448511:	je     0x448537
  448513:	mov    rdx,QWORD PTR [rbx]
  448516:	lea    rcx,[rip+0xc45f]        # 0x45497c
  44851d:	call   QWORD PTR [rip+0x4e4d]        # 0x44d370
  448523:	mov    rdx,QWORD PTR [rbx]
  448526:	mov    rcx,rdi
  448529:	call   QWORD PTR [rip+0x4e41]        # 0x44d370
  44852f:	mov    rcx,rbx
  448532:	call   0x402454
  448537:	add    rsp,0x28
  44853b:	pop    rdi
  44853c:	pop    rbx
  44853d:	ret    
  44853e:	int3   
  44853f:	int3   
  448540:	rex.W push rbx
  448542:	mov    r11,rsp
  448545:	sub    rsp,0x80
  44854c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
  448555:	lea    rax,[rip+0x2048c]        # 0x4689e8
  44855c:	mov    QWORD PTR [rip+0x209e5],rax        # 0x468f48
  448563:	lea    rax,[rip+0x2046e]        # 0x4689d8
  44856a:	mov    QWORD PTR [rip+0x209cf],rax        # 0x468f40
  448571:	lea    rcx,[r11+0x18]
  448575:	call   0x43e2e8
  44857a:	nop
  44857b:	mov    DWORD PTR [rsp+0x20],0x0
  448583:	call   0x446010
  448588:	mov    ebx,eax
  44858a:	mov    DWORD PTR [rsp+0x20],eax
  44858e:	jmp    0x448630
  448593:	mov    ebx,0x8
  448598:	jmp    0x4485cb
  44859a:	mov    ebx,0xff
  44859f:	jmp    0x4485cb
  4485a1:	mov    ebx,0x7
  4485a6:	jmp    0x4485cb
  4485a8:	mov    ebx,0x8
  4485ad:	jmp    0x4485cb
  4485af:	mov    ebx,0xff
  4485b4:	jmp    0x4485cb
  4485b6:	mov    ebx,0x2
  4485bb:	jmp    0x4485cb
  4485bd:	mov    ebx,DWORD PTR [rsp+0x90]
  4485c4:	jmp    0x4485cb
  4485c6:	mov    ebx,0x2
  4485cb:	lea    rcx,[rsp+0x98]
  4485d3:	call   0x43e338
  4485d8:	mov    eax,ebx
  4485da:	jmp    0x448653
  4485dc:	lea    rcx,[rsp+0x98]
  4485e4:	call   0x43e338
  4485e9:	mov    eax,0x2
  4485ee:	jmp    0x448653
  4485f0:	lea    rcx,[rsp+0x98]
  4485f8:	call   0x43e338
  4485fd:	mov    eax,0x2
  448602:	jmp    0x448653
  448604:	lea    rcx,[rsp+0x98]
  44860c:	call   0x43e338
  448611:	mov    eax,0x2
  448616:	jmp    0x448653
  448618:	lea    rcx,[rsp+0x98]
  448620:	call   0x43e338
  448625:	mov    eax,0x2
  44862a:	jmp    0x448653
  44862c:	mov    ebx,DWORD PTR [rsp+0x20]
  448630:	lea    rcx,[rsp+0x98]
  448638:	call   0x43e338
  44863d:	mov    eax,ebx
  44863f:	jmp    0x448653
  448641:	lea    rcx,[rsp+0x98]
  448649:	call   0x43e338
  44864e:	mov    eax,0x2
  448653:	add    rsp,0x80
  44865a:	pop    rbx
  44865b:	ret    
  44865c:	int3   
  44865d:	int3   
  44865e:	int3   
  44865f:	int3   
  448660:	rex.W push rbp
  448662:	sub    rsp,0x20
  448666:	mov    rbp,rdx
  448669:	lea    rcx,[rbp+0x98]
  448670:	call   0x43e338
  448675:	add    rsp,0x20
  448679:	pop    rbp
  44867a:	ret    
  44867b:	int3   
  44867c:	int3   
  44867d:	int3   
  44867e:	int3   
  44867f:	int3   
  448680:	mov    QWORD PTR [rsp+0x10],rdx
  448685:	push   rbp
  448686:	sub    rsp,0x20
  44868a:	mov    rbp,rdx
  44868d:	mov    rcx,QWORD PTR [rip+0x20214]        # 0x4688a8
  448694:	call   0x4484ec
  448699:	nop
  44869a:	lea    rax,[rip+0xfffffffffffffef2]        # 0x448593
  4486a1:	jmp    0x4486a3
  4486a3:	add    rsp,0x20
  4486a7:	pop    rbp
  4486a8:	ret    
  4486a9:	int3   
  4486aa:	int3   
  4486ab:	int3   
  4486ac:	int3   
  4486ad:	int3   
  4486ae:	int3   
  4486af:	int3   
  4486b0:	mov    QWORD PTR [rsp+0x10],rdx
  4486b5:	push   rbp
  4486b6:	sub    rsp,0x20
  4486ba:	mov    rbp,rdx
  4486bd:	mov    rcx,QWORD PTR [rip+0x201dc]        # 0x4688a0
  4486c4:	call   0x4484ec
  4486c9:	nop
  4486ca:	lea    rax,[rip+0xfffffffffffffec9]        # 0x44859a
  4486d1:	jmp    0x4486d3
  4486d3:	add    rsp,0x20
  4486d7:	pop    rbp
  4486d8:	ret    
  4486d9:	int3   
  4486da:	int3   
  4486db:	int3   
  4486dc:	int3   
  4486dd:	int3   
  4486de:	int3   
  4486df:	int3   
  4486e0:	mov    QWORD PTR [rsp+0x10],rdx
  4486e5:	push   rbp
  4486e6:	sub    rsp,0x20
  4486ea:	mov    rbp,rdx
  4486ed:	mov    rcx,QWORD PTR [rip+0x2019c]        # 0x468890
  4486f4:	call   0x4484ec
  4486f9:	mov    rcx,QWORD PTR [rip+0x20848]        # 0x468f48
  448700:	test   rcx,rcx
  448703:	je     0x44871a
  448705:	mov    rax,QWORD PTR [rbp+0x40]
  448709:	mov    rdx,QWORD PTR [rax]
  44870c:	call   0x402474
  448711:	mov    rcx,rax
  448714:	call   0x402454
  448719:	nop
  44871a:	lea    rax,[rip+0xfffffffffffffe80]        # 0x4485a1
  448721:	jmp    0x448723
  448723:	add    rsp,0x20
  448727:	pop    rbp
  448728:	ret    
  448729:	int3   
  44872a:	int3   
  44872b:	int3   
  44872c:	int3   
  44872d:	int3   
  44872e:	int3   
  44872f:	int3   
  448730:	mov    QWORD PTR [rsp+0x10],rdx
  448735:	push   rbx
  448736:	push   rbp
  448737:	sub    rsp,0x28
  44873b:	mov    rbp,rdx
  44873e:	mov    rbx,QWORD PTR [rbp+0x30]
  448742:	cmp    DWORD PTR [rbx],0x8007000e
  448748:	jne    0x448760
  44874a:	mov    rcx,QWORD PTR [rip+0x20157]        # 0x4688a8
  448751:	call   0x4484ec
  448756:	nop
  448757:	lea    rax,[rip+0xfffffffffffffe4a]        # 0x4485a8
  44875e:	jmp    0x4487cb
  448760:	cmp    DWORD PTR [rbx],0x80004004
  448766:	jne    0x44877e
  448768:	mov    rcx,QWORD PTR [rip+0x20131]        # 0x4688a0
  44876f:	call   0x4484ec
  448774:	nop
  448775:	lea    rax,[rip+0xfffffffffffffe33]        # 0x4485af
  44877c:	jmp    0x4487cb
  44877e:	cmp    QWORD PTR [rip+0x207c2],0x0        # 0x468f48
  448786:	je     0x4487c2
  448788:	lea    rcx,[rip+0xc211]        # 0x4549a0
  44878f:	call   0x4484ec
  448794:	mov    edx,DWORD PTR [rbx]
  448796:	lea    rcx,[rbp+0x68]
  44879a:	call   0x4068d0
  44879f:	nop
  4487a0:	mov    rdx,QWORD PTR [rax]
  4487a3:	mov    rcx,QWORD PTR [rip+0x2079e]        # 0x468f48
  4487aa:	call   0x402474
  4487af:	mov    rcx,rax
  4487b2:	call   0x402454
  4487b7:	nop
  4487b8:	mov    rcx,QWORD PTR [rbp+0x68]
  4487bc:	call   0x40215c
  4487c1:	nop
  4487c2:	lea    rax,[rip+0xfffffffffffffded]        # 0x4485b6
  4487c9:	jmp    0x4487cb
  4487cb:	add    rsp,0x28
  4487cf:	pop    rbp
  4487d0:	pop    rbx
  4487d1:	ret    
  4487d2:	int3   
  4487d3:	int3   
  4487d4:	int3   
  4487d5:	int3   
  4487d6:	int3   
  4487d7:	int3   
  4487d8:	int3   
  4487d9:	int3   
  4487da:	int3   
  4487db:	int3   
  4487dc:	int3   
  4487dd:	int3   
  4487de:	int3   
  4487df:	int3   
  4487e0:	rex.W push rbp
  4487e2:	sub    rsp,0x20
  4487e6:	mov    rbp,rdx
  4487e9:	lea    rcx,[rbp+0x68]
  4487ed:	call   0x401000
  4487f2:	add    rsp,0x20
  4487f6:	pop    rbp
  4487f7:	ret    
  4487f8:	int3   
  4487f9:	int3   
  4487fa:	int3   
  4487fb:	int3   
  4487fc:	int3   
  4487fd:	int3   
  4487fe:	int3   
  4487ff:	int3   
  448800:	mov    QWORD PTR [rsp+0x10],rdx
  448805:	push   rbx
  448806:	push   rbp
  448807:	push   rdi
  448808:	sub    rsp,0x20
  44880c:	mov    rbp,rdx
  44880f:	mov    rcx,QWORD PTR [rip+0x2072a]        # 0x468f40
  448816:	test   rcx,rcx
  448819:	je     0x448820
  44881b:	call   0x402438
  448820:	mov    rdi,QWORD PTR [rip+0x20721]        # 0x468f48
  448827:	test   rdi,rdi
  44882a:	je     0x448854
  44882c:	mov    rdx,QWORD PTR [rdi]
  44882f:	mov    rcx,QWORD PTR [rip+0x20082]        # 0x4688b8
  448836:	call   QWORD PTR [rip+0x4b34]        # 0x44d370
  44883c:	mov    rbx,QWORD PTR [rbp+0x28]
  448840:	mov    edx,DWORD PTR [rbx]
  448842:	mov    rcx,rdi
  448845:	call   0x4025fc
  44884a:	mov    rcx,rax
  44884d:	call   0x402454
  448852:	jmp    0x448858
  448854:	mov    rbx,QWORD PTR [rbp+0x28]
  448858:	mov    eax,DWORD PTR [rbx]
  44885a:	mov    DWORD PTR [rbp+0x90],eax
  448860:	lea    rax,[rip+0xfffffffffffffd56]        # 0x4485bd
  448867:	jmp    0x448869
  448869:	add    rsp,0x20
  44886d:	pop    rdi
  44886e:	pop    rbp
  44886f:	pop    rbx
  448870:	ret    
  448871:	int3   
  448872:	int3   
  448873:	int3   
  448874:	int3   
  448875:	int3   
  448876:	int3   
  448877:	int3   
  448878:	int3   
  448879:	int3   
  44887a:	int3   
  44887b:	int3   
  44887c:	int3   
  44887d:	int3   
  44887e:	int3   
  44887f:	int3   
  448880:	mov    QWORD PTR [rsp+0x10],rdx
  448885:	push   rbp
  448886:	sub    rsp,0x20
  44888a:	mov    rbp,rdx
  44888d:	cmp    QWORD PTR [rip+0x206b3],0x0        # 0x468f48
  448895:	je     0x4488bf
  448897:	mov    rcx,QWORD PTR [rip+0x1fffa]        # 0x468898
  44889e:	call   0x4484ec
  4488a3:	mov    r11,QWORD PTR [rbp+0x50]
  4488a7:	mov    rdx,QWORD PTR [r11]
  4488aa:	mov    rcx,QWORD PTR [rip+0x20697]        # 0x468f48
  4488b1:	call   0x402474
  4488b6:	mov    rcx,rax
  4488b9:	call   0x402454
  4488be:	nop
  4488bf:	lea    rax,[rip+0xfffffffffffffd00]        # 0x4485c6
  4488c6:	jmp    0x4488c8
  4488c8:	add    rsp,0x20
  4488cc:	pop    rbp
  4488cd:	ret    
  4488ce:	int3   
  4488cf:	int3   
  4488d0:	mov    QWORD PTR [rsp+0x10],rdx
  4488d5:	push   rbx
  4488d6:	push   rbp
  4488d7:	sub    rsp,0x28
  4488db:	mov    rbp,rdx
  4488de:	cmp    QWORD PTR [rip+0x20662],0x0        # 0x468f48
  4488e6:	je     0x448914
  4488e8:	mov    rcx,QWORD PTR [rip+0x1ffa9]        # 0x468898
  4488ef:	call   0x4484ec
  4488f4:	mov    r11,QWORD PTR [rbp+0x38]
  4488f8:	mov    rbx,QWORD PTR [rip+0x20649]        # 0x468f48
  4488ff:	mov    rdx,QWORD PTR [rbx]
  448902:	mov    rcx,QWORD PTR [r11]
  448905:	call   QWORD PTR [rip+0x4a65]        # 0x44d370
  44890b:	mov    rcx,rbx
  44890e:	call   0x402454
  448913:	nop
  448914:	lea    rax,[rip+0xfffffffffffffcc1]        # 0x4485dc
  44891b:	jmp    0x44891d
  44891d:	add    rsp,0x28
  448921:	pop    rbp
  448922:	pop    rbx
  448923:	ret    
  448924:	int3   
  448925:	int3   
  448926:	int3   
  448927:	int3   
  448928:	int3   
  448929:	int3   
  44892a:	int3   
  44892b:	int3   
  44892c:	int3   
  44892d:	int3   
  44892e:	int3   
  44892f:	int3   
  448930:	mov    QWORD PTR [rsp+0x10],rdx
  448935:	push   rbx
  448936:	push   rbp
  448937:	sub    rsp,0x28
  44893b:	mov    rbp,rdx
  44893e:	cmp    QWORD PTR [rip+0x20602],0x0        # 0x468f48
  448946:	je     0x448971
  448948:	mov    rcx,QWORD PTR [rip+0x1ff49]        # 0x468898
  44894f:	call   0x4484ec
  448954:	mov    rbx,QWORD PTR [rip+0x205ed]        # 0x468f48
  44895b:	mov    rdx,QWORD PTR [rbx]
  44895e:	mov    rcx,QWORD PTR [rbp+0x48]
  448962:	call   QWORD PTR [rip+0x4a08]        # 0x44d370
  448968:	mov    rcx,rbx
  44896b:	call   0x402454
  448970:	nop
  448971:	lea    rax,[rip+0xfffffffffffffc78]        # 0x4485f0
  448978:	jmp    0x44897a
  44897a:	add    rsp,0x28
  44897e:	pop    rbp
  44897f:	pop    rbx
  448980:	ret    
  448981:	int3   
  448982:	int3   
  448983:	int3   
  448984:	int3   
  448985:	int3   
  448986:	int3   
  448987:	int3   
  448988:	int3   
  448989:	int3   
  44898a:	int3   
  44898b:	int3   
  44898c:	int3   
  44898d:	int3   
  44898e:	int3   
  44898f:	int3   
  448990:	mov    QWORD PTR [rsp+0x10],rdx
  448995:	push   rbp
  448996:	sub    rsp,0x20
  44899a:	mov    rbp,rdx
  44899d:	cmp    QWORD PTR [rip+0x205a3],0x0        # 0x468f48
  4489a5:	je     0x4489cc
  4489a7:	mov    rcx,QWORD PTR [rip+0x1feea]        # 0x468898
  4489ae:	call   0x4484ec
  4489b3:	mov    rdx,QWORD PTR [rbp+0x58]
  4489b7:	mov    rcx,QWORD PTR [rip+0x2058a]        # 0x468f48
  4489be:	call   0x402474
  4489c3:	mov    rcx,rax
  4489c6:	call   0x402454
  4489cb:	nop
  4489cc:	lea    rax,[rip+0xfffffffffffffc31]        # 0x448604
  4489d3:	jmp    0x4489d5
  4489d5:	add    rsp,0x20
  4489d9:	pop    rbp
  4489da:	ret    
  4489db:	int3   
  4489dc:	int3   
  4489dd:	int3   
  4489de:	int3   
  4489df:	int3   
  4489e0:	mov    QWORD PTR [rsp+0x10],rdx
  4489e5:	push   rbx
  4489e6:	push   rbp
  4489e7:	sub    rsp,0x28
  4489eb:	mov    rbp,rdx
  4489ee:	mov    rbx,QWORD PTR [rip+0x20553]        # 0x468f48
  4489f5:	test   rbx,rbx
  4489f8:	je     0x448a3f
  4489fa:	mov    rcx,QWORD PTR [rip+0x2053f]        # 0x468f40
  448a01:	test   rcx,rcx
  448a04:	je     0x448a12
  448a06:	call   0x402438
  448a0b:	mov    rbx,QWORD PTR [rip+0x20536]        # 0x468f48
  448a12:	mov    rdx,QWORD PTR [rbx]
  448a15:	mov    rcx,QWORD PTR [rip+0x1fe9c]        # 0x4688b8
  448a1c:	call   QWORD PTR [rip+0x494e]        # 0x44d370
  448a22:	mov    edx,DWORD PTR [rbp+0x24]
  448a25:	mov    rcx,rbx
  448a28:	call   0x4025fc
  448a2d:	mov    rcx,rax
  448a30:	call   0x402454
  448a35:	nop
  448a36:	lea    rax,[rip+0xfffffffffffffbdb]        # 0x448618
  448a3d:	jmp    0x448a48
  448a3f:	lea    rax,[rip+0xfffffffffffffbe6]        # 0x44862c
  448a46:	jmp    0x448a48
  448a48:	add    rsp,0x28
  448a4c:	pop    rbp
  448a4d:	pop    rbx
  448a4e:	ret    
  448a4f:	int3   
  448a50:	mov    QWORD PTR [rsp+0x10],rdx
  448a55:	push   rbp
  448a56:	sub    rsp,0x20
  448a5a:	mov    rbp,rdx
  448a5d:	mov    rcx,QWORD PTR [rip+0x1fe4c]        # 0x4688b0
  448a64:	call   0x4484ec
  448a69:	nop
  448a6a:	lea    rax,[rip+0xfffffffffffffbd0]        # 0x448641
  448a71:	jmp    0x448a73
  448a73:	add    rsp,0x20
  448a77:	pop    rbp
  448a78:	ret    
  448a79:	int3   
  448a7a:	int3   
  448a7b:	int3   
  448a7c:	xor    r9d,r9d
  448a7f:	cmp    BYTE PTR [rcx+0xf2],r9b
  448a86:	jne    0x448ace
  448a88:	cmp    QWORD PTR [rcx+0xd0],r9
  448a8f:	je     0x448ace
  448a91:	cmp    rdx,r9
  448a94:	je     0x448aa6
  448a96:	mov    BYTE PTR [rcx+0xf0],0x1
  448a9d:	mov    rax,QWORD PTR [rdx]
  448aa0:	mov    QWORD PTR [rcx+0x10],rax
  448aa4:	jmp    0x448aad
  448aa6:	mov    BYTE PTR [rcx+0xf0],r9b
  448aad:	cmp    r8,r9
  448ab0:	je     0x448ac7
  448ab2:	cmp    rdx,r9
  448ab5:	mov    BYTE PTR [rcx+0xf1],0x1
  448abc:	jne    0x448ace
  448abe:	mov    rax,QWORD PTR [r8]
  448ac1:	mov    QWORD PTR [rcx+0x10],rax
  448ac5:	jmp    0x448ace
  448ac7:	mov    BYTE PTR [rcx+0xf1],r9b
  448ace:	mov    eax,DWORD PTR [rip+0x20434]        # 0x468f08
  448ad4:	neg    eax
  448ad6:	sbb    eax,eax
  448ad8:	and    eax,0x80004004
  448add:	ret    
  448ade:	int3   
  448adf:	int3   
  448ae0:	sub    rsp,0x28
  448ae4:	xor    r9d,r9d
  448ae7:	cmp    BYTE PTR [rcx+0xf2],r9b
  448aee:	jne    0x448b33
  448af0:	cmp    QWORD PTR [rcx+0xd0],r9
  448af7:	je     0x448b33
  448af9:	cmp    rdx,r9
  448afc:	je     0x448b15
  448afe:	cmp    BYTE PTR [rcx+0xf0],r9b
  448b05:	mov    rax,QWORD PTR [rdx]
  448b08:	mov    QWORD PTR [rcx+0x18],rax
  448b0c:	je     0x448b15
  448b0e:	mov    rax,QWORD PTR [rdx]
  448b11:	mov    QWORD PTR [rcx+0x8],rax
  448b15:	cmp    r8,r9
  448b18:	je     0x448b2a
  448b1a:	cmp    BYTE PTR [rcx+0xf0],r9b
  448b21:	jne    0x448b2a
  448b23:	mov    rax,QWORD PTR [r8]
  448b26:	mov    QWORD PTR [rcx+0x8],rax
  448b2a:	add    rcx,0x8
  448b2e:	call   0x448f00
  448b33:	mov    eax,DWORD PTR [rip+0x203cf]        # 0x468f08
  448b39:	neg    eax
  448b3b:	sbb    eax,eax
  448b3d:	and    eax,0x80004004
  448b42:	add    rsp,0x28
  448b46:	ret    
  448b47:	int3   
  448b48:	sub    rsp,0x28
  448b4c:	cmp    QWORD PTR [rcx+0xd0],0x0
  448b54:	je     0x448b61
  448b56:	add    rcx,0x8
  448b5a:	mov    dl,0x1
  448b5c:	call   0x448c48
  448b61:	xor    eax,eax
  448b63:	add    rsp,0x28
  448b67:	ret    
  448b68:	rex.W push rbx
  448b6a:	push   rdi
  448b6b:	sub    rsp,0x48
  448b6f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  448b78:	mov    rdi,rdx
  448b7b:	mov    rbx,rcx
  448b7e:	xor    ecx,ecx
  448b80:	mov    QWORD PTR [rdx],rcx
  448b83:	mov    eax,DWORD PTR [rip+0x2037f]        # 0x468f08
  448b89:	neg    eax
  448b8b:	sbb    eax,eax
  448b8d:	and    eax,0x80004004
  448b92:	jne    0x448bff
  448b94:	cmp    BYTE PTR [rbx+0xf3],cl
  448b9a:	jne    0x448be3
  448b9c:	cmp    QWORD PTR [rbx+0xd0],rcx
  448ba3:	je     0x448bb0
  448ba5:	lea    rcx,[rbx+0x8]
  448ba9:	mov    dl,0x1
  448bab:	call   0x448c48
  448bb0:	mov    rdx,QWORD PTR [rbx+0xe0]
  448bb7:	lea    rcx,[rsp+0x28]
  448bbc:	call   0x44a724
  448bc1:	nop
  448bc2:	lea    rcx,[rbx+0xf8]
  448bc9:	mov    rdx,rax
  448bcc:	call   0x4032f8
  448bd1:	nop
  448bd2:	mov    rcx,QWORD PTR [rsp+0x28]
  448bd7:	call   0x40215c
  448bdc:	mov    BYTE PTR [rbx+0xf3],0x1
  448be3:	mov    rcx,QWORD PTR [rbx+0xf8]
  448bea:	call   QWORD PTR [rip+0x46a0]        # 0x44d290
  448bf0:	mov    QWORD PTR [rdi],rax
  448bf3:	neg    rax
  448bf6:	sbb    eax,eax
  448bf8:	not    eax
  448bfa:	and    eax,0x8007000e
  448bff:	add    rsp,0x48
  448c03:	pop    rdi
  448c04:	pop    rbx
  448c05:	ret    
  448c06:	int3   
  448c07:	int3   
  448c08:	rex.W push rbp
  448c0a:	sub    rsp,0x20
  448c0e:	mov    rbp,rdx
  448c11:	lea    rcx,[rbp+0x28]
  448c15:	call   0x401000
  448c1a:	add    rsp,0x20
  448c1e:	pop    rbp
  448c1f:	ret    
  448c20:	xor    edx,edx
  448c22:	mov    QWORD PTR [rcx+0x8],0xffffffffffffffff
  448c2a:	mov    QWORD PTR [rcx],rdx
  448c2d:	mov    QWORD PTR [rcx+0x10],rdx
  448c31:	mov    rax,QWORD PTR [rcx+0x18]
  448c35:	mov    DWORD PTR [rcx+0x20],edx
  448c38:	mov    BYTE PTR [rax],dl
  448c3a:	mov    rax,QWORD PTR [rcx+0x28]
  448c3e:	mov    DWORD PTR [rcx+0x30],edx
  448c41:	mov    WORD PTR [rax],dx
  448c44:	ret    
  448c45:	int3   
  448c46:	int3   
  448c47:	int3   
  448c48:	rex.W push rbx
  448c4a:	push   rbp
  448c4b:	push   rsi
  448c4c:	push   rdi
  448c4d:	push   r12
  448c4f:	push   r13
  448c51:	sub    rsp,0x28
  448c55:	mov    ebx,DWORD PTR [rcx+0x58]
  448c58:	mov    r13b,dl
  448c5b:	mov    rdi,rcx
  448c5e:	test   ebx,ebx
  448c60:	je     0x448cb8
  448c62:	lea    edx,[rbx+0x2]
  448c65:	cmp    edx,DWORD PTR [rcx+0x6c]
  448c68:	jbe    0x448c73
  448c6a:	add    rcx,0x60
  448c6e:	call   0x402a70
  448c73:	test   ebx,ebx
  448c75:	mov    r12,QWORD PTR [rdi+0x60]
  448c79:	mov    BYTE PTR [r12],0xd
  448c7e:	lea    rsi,[r12+0x1]
  448c83:	je     0x448c95
  448c85:	mov    r8,rbx
  448c88:	mov    dl,0x20
  448c8a:	mov    rcx,rsi
  448c8d:	call   0x44b780
  448c92:	add    rsi,rbx
  448c95:	mov    BYTE PTR [rsi],0xd
  448c98:	inc    rsi
  448c9b:	mov    BYTE PTR [rsi],0x0
  448c9e:	mov    rdx,QWORD PTR [rdi+0xc8]
  448ca5:	mov    rcx,QWORD PTR [rdi+0x60]
  448ca9:	sub    esi,r12d
  448cac:	mov    DWORD PTR [rdi+0x68],esi
  448caf:	mov    rdx,QWORD PTR [rdx]
  448cb2:	call   QWORD PTR [rip+0x46b8]        # 0x44d370
  448cb8:	test   r13b,r13b
  448cbb:	je     0x448cc9
  448cbd:	mov    rcx,QWORD PTR [rdi+0xc8]
  448cc4:	call   0x402438
  448cc9:	mov    rax,QWORD PTR [rdi+0x50]
  448ccd:	mov    DWORD PTR [rdi+0x58],0x0
  448cd4:	mov    BYTE PTR [rax],0x0
  448cd7:	add    rsp,0x28
  448cdb:	pop    r13
  448cdd:	pop    r12
  448cdf:	pop    rdi
  448ce0:	pop    rsi
  448ce1:	pop    rbp
  448ce2:	pop    rbx
  448ce3:	ret    
  448ce4:	rex.W push rbx
  448ce6:	push   rsi
  448ce7:	push   rdi
  448ce8:	sub    rsp,0x40
  448cec:	mov    rbx,rcx
  448cef:	mov    rcx,QWORD PTR [rcx+0x8]
  448cf3:	xor    eax,eax
  448cf5:	cmp    rcx,0xffffffffffffffff
  448cf9:	mov    dil,0x25
  448cfc:	jne    0x448d0a
  448cfe:	mov    rax,QWORD PTR [rbx]
  448d01:	mov    dil,0x4d
  448d04:	shr    rax,0x14
  448d08:	jmp    0x448d1b
  448d0a:	test   rcx,rcx
  448d0d:	je     0x448d1b
  448d0f:	mov    rax,QWORD PTR [rbx]
  448d12:	xor    edx,edx
  448d14:	imul   rax,rax,0x64
  448d18:	div    rcx
  448d1b:	lea    rdx,[rsp+0x20]
  448d20:	mov    rcx,rax
  448d23:	call   0x4019a4
  448d28:	lea    rcx,[rsp+0x20]
  448d2d:	call   0x44b78c
  448d32:	mov    ecx,eax
  448d34:	inc    eax
  448d36:	mov    BYTE PTR [rsp+rcx*1+0x20],dil
  448d3b:	mov    ecx,0x4
  448d40:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  448d45:	cmp    eax,ecx
  448d47:	jae    0x448d77
  448d49:	sub    ecx,eax
  448d4b:	mov    esi,ecx
  448d4d:	mov    eax,DWORD PTR [rbx+0x48]
  448d50:	cmp    DWORD PTR [rbx+0x4c],eax
  448d53:	jne    0x448d5e
  448d55:	lea    rcx,[rbx+0x40]
  448d59:	call   0x402af0
  448d5e:	mov    edx,DWORD PTR [rbx+0x48]
  448d61:	mov    rcx,QWORD PTR [rbx+0x40]
  448d65:	mov    BYTE PTR [rdx+rcx*1],0x20
  448d69:	inc    edx
  448d6b:	dec    rsi
  448d6e:	mov    BYTE PTR [rdx+rcx*1],0x0
  448d72:	mov    DWORD PTR [rbx+0x48],edx
  448d75:	jne    0x448d4d
  448d77:	lea    rcx,[rbx+0x40]
  448d7b:	lea    rdx,[rsp+0x20]
  448d80:	call   0x402d24
  448d85:	add    rsp,0x40
  448d89:	pop    rdi
  448d8a:	pop    rsi
  448d8b:	pop    rbx
  448d8c:	ret    
  448d8d:	int3   
  448d8e:	int3   
  448d8f:	int3   
  448d90:	mov    QWORD PTR [rsp+0x8],rcx
  448d95:	push   rbx
  448d96:	sub    rsp,0x30
  448d9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  448da3:	mov    rbx,rcx
  448da6:	xor    edx,edx
  448da8:	call   0x448c48
  448dad:	nop
  448dae:	mov    rcx,QWORD PTR [rbx+0xb8]
  448db5:	call   0x40215c
  448dba:	nop
  448dbb:	mov    rcx,QWORD PTR [rbx+0xa8]
  448dc2:	call   0x40215c
  448dc7:	mov    rcx,QWORD PTR [rbx+0x98]
  448dce:	call   0x40215c
  448dd3:	nop
  448dd4:	mov    rcx,QWORD PTR [rbx+0x70]
  448dd8:	call   0x40215c
  448ddd:	nop
  448dde:	mov    rcx,QWORD PTR [rbx+0x60]
  448de2:	call   0x40215c
  448de7:	nop
  448de8:	mov    rcx,QWORD PTR [rbx+0x50]
  448dec:	call   0x40215c
  448df1:	nop
  448df2:	mov    rcx,QWORD PTR [rbx+0x40]
  448df6:	call   0x40215c
  448dfb:	nop
  448dfc:	mov    rcx,QWORD PTR [rbx+0x28]
  448e00:	call   0x40215c
  448e05:	mov    rcx,QWORD PTR [rbx+0x18]
  448e09:	add    rsp,0x30
  448e0d:	pop    rbx
  448e0e:	jmp    0x40215c
  448e13:	int3   
  448e14:	int3   
  448e15:	int3   
  448e16:	int3   
  448e17:	int3   
  448e18:	int3   
  448e19:	int3   
  448e1a:	int3   
  448e1b:	int3   
  448e1c:	int3   
  448e1d:	int3   
  448e1e:	int3   
  448e1f:	int3   
  448e20:	rex.W push rbp
  448e22:	sub    rsp,0x20
  448e26:	mov    rbp,rdx
  448e29:	mov    rcx,QWORD PTR [rbp+0x40]
  448e2d:	call   0x422a2c
  448e32:	add    rsp,0x20
  448e36:	pop    rbp
  448e37:	ret    
  448e38:	int3   
  448e39:	int3   
  448e3a:	int3   
  448e3b:	int3   
  448e3c:	int3   
  448e3d:	int3   
  448e3e:	int3   
  448e3f:	int3   
  448e40:	rex.W push rbp
  448e42:	sub    rsp,0x20
  448e46:	mov    rbp,rdx
  448e49:	mov    rcx,QWORD PTR [rbp+0x40]
  448e4d:	add    rcx,0x40
  448e51:	call   0x401000
  448e56:	add    rsp,0x20
  448e5a:	pop    rbp
  448e5b:	ret    
  448e5c:	int3   
  448e5d:	int3   
  448e5e:	int3   
  448e5f:	int3   
  448e60:	rex.W push rbp
  448e62:	sub    rsp,0x20
  448e66:	mov    rbp,rdx
  448e69:	mov    rcx,QWORD PTR [rbp+0x40]
  448e6d:	add    rcx,0x50
  448e71:	call   0x401000
  448e76:	add    rsp,0x20
  448e7a:	pop    rbp
  448e7b:	ret    
  448e7c:	int3   
  448e7d:	int3   
  448e7e:	int3   
  448e7f:	int3   
  448e80:	rex.W push rbp
  448e82:	sub    rsp,0x20
  448e86:	mov    rbp,rdx
  448e89:	mov    rcx,QWORD PTR [rbp+0x40]
  448e8d:	add    rcx,0x60
  448e91:	call   0x401000
  448e96:	add    rsp,0x20
  448e9a:	pop    rbp
  448e9b:	ret    
  448e9c:	int3   
  448e9d:	int3   
  448e9e:	int3   
  448e9f:	int3   
  448ea0:	rex.W push rbp
  448ea2:	sub    rsp,0x20
  448ea6:	mov    rbp,rdx
  448ea9:	mov    rcx,QWORD PTR [rbp+0x40]
  448ead:	add    rcx,0x70
  448eb1:	call   0x401000
  448eb6:	add    rsp,0x20
  448eba:	pop    rbp
  448ebb:	ret    
  448ebc:	int3   
  448ebd:	int3   
  448ebe:	int3   
  448ebf:	int3   
  448ec0:	rex.W push rbp
  448ec2:	sub    rsp,0x20
  448ec6:	mov    rbp,rdx
  448ec9:	mov    rcx,QWORD PTR [rbp+0x40]
  448ecd:	add    rcx,0x80
  448ed4:	call   0x422a2c
  448ed9:	add    rsp,0x20
  448edd:	pop    rbp
  448ede:	ret    
  448edf:	int3   
  448ee0:	rex.W push rbp
  448ee2:	sub    rsp,0x20
  448ee6:	mov    rbp,rdx
  448ee9:	mov    rcx,QWORD PTR [rbp+0x40]
  448eed:	add    rcx,0xb8
  448ef4:	call   0x401000
  448ef9:	add    rsp,0x20
  448efd:	pop    rbp
  448efe:	ret    
  448eff:	int3   
  448f00:	rex.W push rbx
  448f02:	push   rbp
  448f03:	push   rsi
  448f04:	push   rdi
  448f05:	push   r12
  448f07:	push   r13
  448f09:	push   r14
  448f0b:	push   r15
  448f0d:	sub    rsp,0x48
  448f11:	xor    r14d,r14d
  448f14:	mov    rdi,rcx
  448f17:	cmp    DWORD PTR [rcx+0x38],r14d
  448f1b:	mov    r13d,r14d
  448f1e:	je     0x448f29
  448f20:	call   QWORD PTR [rip+0x4332]        # 0x44d258
  448f26:	mov    r13d,eax
  448f29:	cmp    DWORD PTR [rdi+0x58],r14d
  448f2d:	mov    bl,r14b
  448f30:	mov    ebp,0x1
  448f35:	je     0x448fbe
  448f3b:	cmp    DWORD PTR [rdi+0x38],r14d
  448f3f:	je     0x448f50
  448f41:	mov    ecx,r13d
  448f44:	sub    ecx,DWORD PTR [rdi+0x3c]
  448f47:	cmp    ecx,DWORD PTR [rdi+0x38]
  448f4a:	jb     0x44921d
  448f50:	mov    eax,DWORD PTR [rdi+0x20]
  448f53:	cmp    DWORD PTR [rdi+0xa0],eax
  448f59:	jne    0x448fbe
  448f5b:	mov    rdx,QWORD PTR [rdi+0x18]
  448f5f:	mov    rcx,QWORD PTR [rdi+0x98]
  448f66:	call   0x44b77a
  448f6b:	cmp    eax,r14d
  448f6e:	jne    0x448fbe
  448f70:	mov    eax,DWORD PTR [rdi+0x30]
  448f73:	cmp    DWORD PTR [rdi+0xb0],eax
  448f79:	jne    0x448fbe
  448f7b:	mov    rdx,QWORD PTR [rdi+0x28]
  448f7f:	mov    rcx,QWORD PTR [rdi+0xa8]
  448f86:	call   QWORD PTR [rip+0x43bc]        # 0x44d348
  448f8c:	cmp    eax,r14d
  448f8f:	jne    0x448fbe
  448f91:	mov    rax,QWORD PTR [rdi+0x10]
  448f95:	cmp    QWORD PTR [rdi+0x90],rax
  448f9c:	jne    0x448fbe
  448f9e:	mov    rax,QWORD PTR [rdi+0x8]
  448fa2:	cmp    QWORD PTR [rdi+0x88],rax
  448fa9:	jne    0x448fbb
  448fab:	mov    rax,QWORD PTR [rdi]
  448fae:	cmp    QWORD PTR [rdi+0x80],rax
  448fb5:	je     0x44921d
  448fbb:	mov    bl,bpl
  448fbe:	lea    rsi,[rdi+0x40]
  448fc2:	mov    rcx,rdi
  448fc5:	mov    rax,QWORD PTR [rsi]
  448fc8:	mov    DWORD PTR [rsi+0x8],r14d
  448fcc:	mov    BYTE PTR [rax],r14b
  448fcf:	call   0x448ce4
  448fd4:	cmp    bl,r14b
  448fd7:	je     0x448ffc
  448fd9:	mov    eax,DWORD PTR [rdi+0xc0]
  448fdf:	cmp    DWORD PTR [rsi+0x8],eax
  448fe2:	jne    0x448ffc
  448fe4:	mov    rdx,QWORD PTR [rdi+0xb8]
  448feb:	mov    rcx,QWORD PTR [rsi]
  448fee:	call   0x44b77a
  448ff3:	cmp    eax,r14d
  448ff6:	je     0x44921d
  448ffc:	lea    rcx,[rdi+0xb8]
  449003:	mov    rdx,rsi
  449006:	call   0x402c48
  44900b:	mov    rcx,QWORD PTR [rdi+0x10]
  44900f:	cmp    rcx,r14
  449012:	je     0x44904e
  449014:	lea    rdx,[rsp+0x20]
  449019:	call   0x4019a4
  44901e:	mov    eax,DWORD PTR [rsi+0x8]
  449021:	cmp    DWORD PTR [rsi+0xc],eax
  449024:	jne    0x44902e
  449026:	mov    rcx,rsi
  449029:	call   0x402af0
  44902e:	mov    edx,DWORD PTR [rsi+0x8]
  449031:	mov    rcx,QWORD PTR [rsi]
  449034:	mov    BYTE PTR [rdx+rcx*1],0x20
  449038:	add    edx,ebp
  44903a:	mov    BYTE PTR [rdx+rcx*1],r14b
  44903e:	mov    DWORD PTR [rsi+0x8],edx
  449041:	lea    rdx,[rsp+0x20]
  449046:	mov    rcx,rsi
  449049:	call   0x402d24
  44904e:	cmp    DWORD PTR [rdi+0x20],r14d
  449052:	je     0x449083
  449054:	mov    eax,DWORD PTR [rsi+0x8]
  449057:	cmp    DWORD PTR [rsi+0xc],eax
  44905a:	jne    0x449064
  44905c:	mov    rcx,rsi
  44905f:	call   0x402af0
  449064:	mov    edx,DWORD PTR [rsi+0x8]
  449067:	mov    rcx,QWORD PTR [rsi]
  44906a:	mov    BYTE PTR [rdx+rcx*1],0x20
  44906e:	add    edx,ebp
  449070:	mov    BYTE PTR [rdx+rcx*1],r14b
  449074:	mov    DWORD PTR [rsi+0x8],edx
  449077:	lea    rdx,[rdi+0x18]
  44907b:	mov    rcx,rsi
  44907e:	call   0x402d70
  449083:	cmp    DWORD PTR [rdi+0x30],r14d
  449087:	je     0x44917c
  44908d:	mov    eax,DWORD PTR [rdi+0xd4]
  449093:	cmp    DWORD PTR [rdi+0x48],eax
  449096:	jae    0x44917c
  44909c:	mov    eax,DWORD PTR [rsi+0x8]
  44909f:	cmp    DWORD PTR [rsi+0xc],eax
  4490a2:	jne    0x4490ac
  4490a4:	mov    rcx,rsi
  4490a7:	call   0x402af0
  4490ac:	mov    edx,DWORD PTR [rsi+0x8]
  4490af:	mov    rcx,QWORD PTR [rsi]
  4490b2:	mov    BYTE PTR [rdx+rcx*1],0x20
  4490b6:	add    edx,ebp
  4490b8:	mov    BYTE PTR [rdx+rcx*1],r14b
  4490bc:	mov    DWORD PTR [rsi+0x8],edx
  4490bf:	lea    rdx,[rdi+0x60]
  4490c3:	lea    rcx,[rdi+0x28]
  4490c7:	call   0x40258c
  4490cc:	lea    rcx,[rdi+0x60]
  4490d0:	mov    r8b,0x20
  4490d3:	mov    dl,0xa
  4490d5:	call   0x4038a0
  4490da:	mov    eax,DWORD PTR [rdi+0x68]
  4490dd:	add    eax,DWORD PTR [rdi+0x48]
  4490e0:	cmp    eax,DWORD PTR [rdi+0xd4]
  4490e6:	jbe    0x449170
  4490ec:	mov    r12d,DWORD PTR [rdi+0x30]
  4490f0:	cmp    r12d,r14d
  4490f3:	je     0x449165
  4490f5:	mov    esi,ebp
  4490f7:	mov    eax,r12d
  4490fa:	lea    rdx,[rdi+0x28]
  4490fe:	lea    rcx,[rdi+0x70]
  449102:	shr    eax,0x3
  449105:	cmove  eax,esi
  449108:	sub    r12d,eax
  44910b:	call   0x4032f8
  449110:	mov    r8d,DWORD PTR [rdi+0x30]
  449114:	mov    ebx,r12d
  449117:	lea    rcx,[rdi+0x70]
  44911b:	sub    r8d,r12d
  44911e:	shr    ebx,1
  449120:	mov    edx,ebx
  449122:	call   0x403788
  449127:	lea    r8,[rip+0xb8c2]        # 0x4549f0
  44912e:	lea    rcx,[rdi+0x70]
  449132:	mov    edx,ebx
  449134:	call   0x403980
  449139:	lea    rdx,[rdi+0x60]
  44913d:	lea    rcx,[rdi+0x70]
  449141:	call   0x40258c
  449146:	mov    r11d,DWORD PTR [rdi+0x68]
  44914a:	add    r11d,DWORD PTR [rdi+0x48]
  44914e:	cmp    r11d,DWORD PTR [rdi+0xd4]
  449155:	jbe    0x44915c
  449157:	test   r12d,r12d
  44915a:	jne    0x4490f7
  44915c:	cmp    r12d,r14d
  44915f:	lea    rsi,[rdi+0x40]
  449163:	jne    0x449170
  449165:	mov    rax,QWORD PTR [rdi+0x60]
  449169:	mov    DWORD PTR [rdi+0x68],r14d
  44916d:	mov    BYTE PTR [rax],r14b
  449170:	lea    rdx,[rdi+0x60]
  449174:	mov    rcx,rsi
  449177:	call   0x402d70
  44917c:	mov    eax,DWORD PTR [rsi+0x8]
  44917f:	cmp    DWORD PTR [rdi+0x58],eax
  449182:	jne    0x449195
  449184:	mov    rdx,QWORD PTR [rsi]
  449187:	mov    rcx,QWORD PTR [rdi+0x50]
  44918b:	call   0x44b77a
  449190:	cmp    eax,r14d
  449193:	je     0x4491d3
  449195:	xor    edx,edx
  449197:	mov    rcx,rdi
  44919a:	call   0x448c48
  44919f:	mov    rdx,QWORD PTR [rdi+0xc8]
  4491a6:	mov    rcx,QWORD PTR [rsi]
  4491a9:	mov    rdx,QWORD PTR [rdx]
  4491ac:	call   QWORD PTR [rip+0x41be]        # 0x44d370
  4491b2:	cmp    BYTE PTR [rdi+0xd0],r14b
  4491b9:	je     0x4491c7
  4491bb:	mov    rcx,QWORD PTR [rdi+0xc8]
  4491c2:	call   0x402438
  4491c7:	lea    rcx,[rdi+0x50]
  4491cb:	mov    rdx,rsi
  4491ce:	call   0x402c48
  4491d3:	mov    rax,QWORD PTR [rdi]
  4491d6:	lea    rdx,[rdi+0x18]
  4491da:	lea    rcx,[rdi+0x98]
  4491e1:	mov    QWORD PTR [rdi+0x80],rax
  4491e8:	mov    rax,QWORD PTR [rdi+0x8]
  4491ec:	mov    QWORD PTR [rdi+0x88],rax
  4491f3:	mov    rax,QWORD PTR [rdi+0x10]
  4491f7:	mov    QWORD PTR [rdi+0x90],rax
  4491fe:	call   0x402c48
  449203:	lea    rdx,[rdi+0x28]
  449207:	lea    rcx,[rdi+0xa8]
  44920e:	call   0x4032f8
  449213:	cmp    DWORD PTR [rdi+0x38],r14d
  449217:	je     0x44921d
  449219:	mov    DWORD PTR [rdi+0x3c],r13d
  44921d:	add    rsp,0x48
  449221:	pop    r15
  449223:	pop    r14
  449225:	pop    r13
  449227:	pop    r12
  449229:	pop    rdi
  44922a:	pop    rsi
  44922b:	pop    rbp
  44922c:	pop    rbx
  44922d:	ret    
  44922e:	int3   
  44922f:	int3   
  449230:	rex.W push rbx
  449232:	push   rdi
  449233:	sub    rsp,0x28
  449237:	mov    rdi,QWORD PTR [rcx+0xe8]
  44923e:	mov    rbx,rcx
  449241:	test   rdi,rdi
  449244:	je     0x44925e
  449246:	mov    rdx,QWORD PTR [rdi]
  449249:	mov    rcx,QWORD PTR [rip+0x1f700]        # 0x468950
  449250:	call   QWORD PTR [rip+0x411a]        # 0x44d370
  449256:	mov    rcx,rdi
  449259:	call   0x402454
  44925e:	lea    rcx,[rbx+0x28]
  449262:	lea    rdx,[rip+0xb7ff]        # 0x454a68
  449269:	call   0x402be4
  44926e:	xor    eax,eax
  449270:	add    rsp,0x28
  449274:	pop    rdi
  449275:	pop    rbx
  449276:	ret    
  449277:	int3   
  449278:	rex.W push rbx
  44927a:	push   rdi
  44927b:	sub    rsp,0x28
  44927f:	cmp    QWORD PTR [rcx+0xd0],0x0
  449287:	mov    rdi,rcx
  44928a:	je     0x4492bc
  44928c:	mov    rax,QWORD PTR [rdx+0x10]
  449290:	add    rcx,0x30
  449294:	add    rax,QWORD PTR [rdx+0x8]
  449298:	add    rax,QWORD PTR [rdx]
  44929b:	mov    QWORD PTR [rcx-0x18],rax
  44929f:	mov    rax,QWORD PTR [rdx+0x20]
  4492a3:	add    rax,QWORD PTR [rdx+0x18]
  4492a7:	mov    rdx,r8
  4492aa:	mov    QWORD PTR [rcx-0x28],rax
  4492ae:	call   0x4032f8
  4492b3:	lea    rcx,[rdi+0x8]
  4492b7:	call   0x448f00
  4492bc:	lea    rcx,[rdi-0x8]
  4492c0:	mov    rax,QWORD PTR [rcx]
  4492c3:	add    rsp,0x28
  4492c7:	pop    rdi
  4492c8:	pop    rbx
  4492c9:	rex.W jmp QWORD PTR [rax+0x20]
  4492cd:	int3   
  4492ce:	int3   
  4492cf:	int3   
  4492d0:	rex.W push rbx
  4492d2:	push   rbp
  4492d3:	push   rsi
  4492d4:	push   rdi
  4492d5:	push   r12
  4492d7:	sub    rsp,0x40
  4492db:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4492e4:	mov    r12b,r9b
  4492e7:	mov    ebx,r8d
  4492ea:	mov    rsi,rdx
  4492ed:	mov    rbp,rcx
  4492f0:	cmp    QWORD PTR [rcx+0xc8],0x0
  4492f8:	je     0x449301
  4492fa:	mov    dl,0x1
  4492fc:	call   0x448c48
  449301:	cmp    QWORD PTR [rbp+0xe0],0x0
  449309:	je     0x4493a8
  44930f:	mov    rcx,QWORD PTR [rbp+0xd8]
  449316:	test   rcx,rcx
  449319:	je     0x449320
  44931b:	call   0x402438
  449320:	mov    edx,ebx
  449322:	lea    rcx,[rsp+0x28]
  449327:	call   0x4068d0
  44932c:	nop
  44932d:	mov    rsi,QWORD PTR [rsi]
  449330:	mov    rbx,QWORD PTR [rax]
  449333:	mov    rdi,QWORD PTR [rbp+0xe0]
  44933a:	mov    rcx,rdi
  44933d:	call   0x402454
  449342:	mov    rcx,QWORD PTR [rip+0x1f60f]        # 0x468958
  449349:	test   r12b,r12b
  44934c:	cmovne rcx,QWORD PTR [rip+0x1f60c]        # 0x468960
  449354:	mov    rdx,QWORD PTR [rdi]
  449357:	call   QWORD PTR [rip+0x4013]        # 0x44d370
  44935d:	mov    rdx,rbx
  449360:	mov    rcx,rdi
  449363:	call   0x402474
  449368:	mov    rbx,rax
  44936b:	mov    rcx,rax
  44936e:	call   0x402454
  449373:	mov    rdx,rsi
  449376:	mov    rcx,rbx
  449379:	call   0x402474
  44937e:	mov    rbx,rax
  449381:	mov    rcx,rax
  449384:	call   0x402454
  449389:	mov    rcx,rbx
  44938c:	call   0x402454
  449391:	nop
  449392:	mov    rcx,QWORD PTR [rsp+0x28]
  449397:	call   0x40215c
  44939c:	mov    rcx,QWORD PTR [rbp+0xe0]
  4493a3:	call   0x402438
  4493a8:	add    rsp,0x40
  4493ac:	pop    r12
  4493ae:	pop    rdi
  4493af:	pop    rsi
  4493b0:	pop    rbp
  4493b1:	pop    rbx
  4493b2:	ret    
  4493b3:	int3   
  4493b4:	int3   
  4493b5:	int3   
  4493b6:	int3   
  4493b7:	int3   
  4493b8:	int3   
  4493b9:	int3   
  4493ba:	int3   
  4493bb:	int3   
  4493bc:	int3   
  4493bd:	int3   
  4493be:	int3   
  4493bf:	int3   
  4493c0:	rex.W push rbp
  4493c2:	sub    rsp,0x20
  4493c6:	mov    rbp,rdx
  4493c9:	lea    rcx,[rbp+0x28]
  4493cd:	call   0x401000
  4493d2:	add    rsp,0x20
  4493d6:	pop    rbp
  4493d7:	ret    
  4493d8:	rex.W push rbx
  4493da:	push   rbp
  4493db:	push   rsi
  4493dc:	push   rdi
  4493dd:	sub    rsp,0x38
  4493e1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  4493ea:	mov    esi,r8d
  4493ed:	mov    rbx,rdx
  4493f0:	mov    rdi,rcx
  4493f3:	lea    rbp,[rip+0x1fb56]        # 0x468f50
  4493fa:	mov    QWORD PTR [rsp+0x78],rbp
  4493ff:	mov    rcx,rbp
  449402:	call   QWORD PTR [rip+0x3cb8]        # 0x44d0c0
  449408:	nop
  449409:	xor    r9d,r9d
  44940c:	mov    r8d,esi
  44940f:	mov    rdx,rbx
  449412:	mov    rcx,rdi
  449415:	call   0x4492d0
  44941a:	movzx  ebx,si
  44941d:	or     ebx,0x80070000
  449423:	test   esi,esi
  449425:	cmovle ebx,esi
  449428:	mov    rcx,rbp
  44942b:	call   QWORD PTR [rip+0x3c87]        # 0x44d0b8
  449431:	mov    eax,ebx
  449433:	add    rsp,0x38
  449437:	pop    rdi
  449438:	pop    rsi
  449439:	pop    rbp
  44943a:	pop    rbx
  44943b:	ret    
  44943c:	int3   
  44943d:	int3   
  44943e:	int3   
  44943f:	int3   
  449440:	int3   
  449441:	int3   
  449442:	int3   
  449443:	int3   
  449444:	int3   
  449445:	int3   
  449446:	int3   
  449447:	int3   
  449448:	rex.W push rbp
  44944a:	sub    rsp,0x20
  44944e:	mov    rbp,rdx
  449451:	lea    rcx,[rbp+0x78]
  449455:	call   0x417d58
  44945a:	add    rsp,0x20
  44945e:	pop    rbp
  44945f:	ret    
  449460:	rex.W push rbx
  449462:	push   rsi
  449463:	push   rdi
  449464:	sub    rsp,0x40
  449468:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449471:	mov    rsi,rdx
  449474:	mov    rdi,rcx
  449477:	cmp    QWORD PTR [rcx+0xd8],0x0
  44947f:	je     0x449495
  449481:	mov    dl,0x1
  449483:	add    rcx,0x10
  449487:	call   0x448c48
  44948c:	lea    rcx,[rdi+0x10]
  449490:	call   0x448c20
  449495:	cmp    QWORD PTR [rdi+0xe8],0x0
  44949d:	je     0x4494e7
  44949f:	lea    rcx,[rsp+0x28]
  4494a4:	call   0x402b34
  4494a9:	nop
  4494aa:	mov    rdx,rsi
  4494ad:	lea    rcx,[rsp+0x28]
  4494b2:	call   0x43e604
  4494b7:	mov    rbx,QWORD PTR [rdi+0xe8]
  4494be:	mov    rdx,QWORD PTR [rbx]
  4494c1:	mov    rcx,QWORD PTR [rsp+0x28]
  4494c6:	call   QWORD PTR [rip+0x3ea4]        # 0x44d370
  4494cc:	mov    rcx,rbx
  4494cf:	call   0x402454
  4494d4:	mov    rcx,rbx
  4494d7:	call   0x402454
  4494dc:	nop
  4494dd:	mov    rcx,QWORD PTR [rsp+0x28]
  4494e2:	call   0x40215c
  4494e7:	xor    eax,eax
  4494e9:	add    rsp,0x40
  4494ed:	pop    rdi
  4494ee:	pop    rsi
  4494ef:	pop    rbx
  4494f0:	ret    
  4494f1:	int3   
  4494f2:	int3   
  4494f3:	int3   
  4494f4:	int3   
  4494f5:	int3   
  4494f6:	int3   
  4494f7:	int3   
  4494f8:	int3   
  4494f9:	int3   
  4494fa:	int3   
  4494fb:	int3   
  4494fc:	int3   
  4494fd:	int3   
  4494fe:	int3   
  4494ff:	int3   
  449500:	rex.W push rbp
  449502:	sub    rsp,0x20
  449506:	mov    rbp,rdx
  449509:	lea    rcx,[rbp+0x28]
  44950d:	call   0x401000
  449512:	add    rsp,0x20
  449516:	pop    rbp
  449517:	ret    
  449518:	rex.W push rbx
  44951a:	push   rdi
  44951b:	sub    rsp,0x28
  44951f:	mov    rdi,rdx
  449522:	mov    rdx,QWORD PTR [rcx+0xe8]
  449529:	mov    rbx,rcx
  44952c:	test   rdx,rdx
  44952f:	je     0x44957a
  449531:	mov    rdx,QWORD PTR [rdx]
  449534:	mov    rcx,QWORD PTR [rip+0x1f3fd]        # 0x468938
  44953b:	call   QWORD PTR [rip+0x3e2f]        # 0x44d370
  449541:	test   rdi,rdi
  449544:	je     0x449557
  449546:	mov    rcx,QWORD PTR [rbx+0xe8]
  44954d:	mov    rdx,rdi
  449550:	call   0x402474
  449555:	jmp    0x44956e
  449557:	mov    rdx,QWORD PTR [rbx+0xe8]
  44955e:	mov    rcx,QWORD PTR [rip+0x1f403]        # 0x468968
  449565:	mov    rdx,QWORD PTR [rdx]
  449568:	call   QWORD PTR [rip+0x3e02]        # 0x44d370
  44956e:	mov    rcx,QWORD PTR [rbx+0xe8]
  449575:	call   0x402454
  44957a:	xor    eax,eax
  44957c:	add    rsp,0x28
  449580:	pop    rdi
  449581:	pop    rbx
  449582:	ret    
  449583:	int3   
  449584:	rex.W push rbx
  449586:	push   rdi
  449587:	sub    rsp,0x28
  44958b:	mov    rdi,rdx
  44958e:	mov    rdx,QWORD PTR [rcx+0xe8]
  449595:	mov    rbx,rcx
  449598:	test   rdx,rdx
  44959b:	je     0x4495fc
  44959d:	mov    rcx,QWORD PTR [rip+0x1f39c]        # 0x468940
  4495a4:	mov    rdx,QWORD PTR [rdx]
  4495a7:	test   r8b,r8b
  4495aa:	cmovne rcx,QWORD PTR [rip+0x1f396]        # 0x468948
  4495b2:	call   QWORD PTR [rip+0x3db8]        # 0x44d370
  4495b8:	test   rdi,rdi
  4495bb:	je     0x4495ce
  4495bd:	mov    rcx,QWORD PTR [rbx+0xe8]
  4495c4:	mov    rdx,rdi
  4495c7:	call   0x402474
  4495cc:	jmp    0x4495e5
  4495ce:	mov    rdx,QWORD PTR [rbx+0xe8]
  4495d5:	mov    rcx,QWORD PTR [rip+0x1f38c]        # 0x468968
  4495dc:	mov    rdx,QWORD PTR [rdx]
  4495df:	call   QWORD PTR [rip+0x3d8b]        # 0x44d370
  4495e5:	mov    rbx,QWORD PTR [rbx+0xe8]
  4495ec:	mov    rcx,rbx
  4495ef:	call   0x402454
  4495f4:	mov    rcx,rbx
  4495f7:	call   0x402454
  4495fc:	xor    eax,eax
  4495fe:	add    rsp,0x28
  449602:	pop    rdi
  449603:	pop    rbx
  449604:	ret    
  449605:	int3   
  449606:	int3   
  449607:	int3   
  449608:	rex.W push rbx
  44960a:	push   rdi
  44960b:	sub    rsp,0x68
  44960f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449618:	mov    rdi,rdx
  44961b:	mov    rbx,rcx
  44961e:	add    rcx,0x10
  449622:	cmp    QWORD PTR [rcx+0xc8],0x0
  44962a:	je     0x449633
  44962c:	mov    dl,0x1
  44962e:	call   0x448c48
  449633:	cmp    QWORD PTR [rbx+0xe8],0x0
  44963b:	je     0x4496e9
  449641:	lea    rcx,[rsp+0x28]
  449646:	call   0x402b34
  44964b:	nop
  44964c:	lea    rdx,[rsp+0x38]
  449651:	mov    rcx,QWORD PTR [rbx+0x20]
  449655:	call   0x4019a4
  44965a:	lea    rdx,[rip+0xb49f]        # 0x454b00
  449661:	lea    rcx,[rsp+0x28]
  449666:	call   0x402d24
  44966b:	lea    rdx,[rip+0x98be]        # 0x452f30
  449672:	lea    rcx,[rsp+0x28]
  449677:	call   0x402d24
  44967c:	lea    rdx,[rsp+0x38]
  449681:	lea    rcx,[rsp+0x28]
  449686:	call   0x402d24
  44968b:	lea    rcx,[rsp+0x28]
  449690:	call   0x403860
  449695:	lea    rdx,[rip+0xb454]        # 0x454af0
  44969c:	lea    rcx,[rsp+0x28]
  4496a1:	call   0x402d24
  4496a6:	mov    rdx,QWORD PTR [rdi]
  4496a9:	lea    rcx,[rsp+0x28]
  4496ae:	call   0x43e544
  4496b3:	lea    rcx,[rsp+0x28]
  4496b8:	call   0x403860
  4496bd:	mov    rcx,QWORD PTR [rbx+0xe8]
  4496c4:	call   0x402454
  4496c9:	mov    rdx,QWORD PTR [rbx+0xe8]
  4496d0:	mov    rdx,QWORD PTR [rdx]
  4496d3:	mov    rcx,QWORD PTR [rsp+0x28]
  4496d8:	call   QWORD PTR [rip+0x3c92]        # 0x44d370
  4496de:	nop
  4496df:	mov    rcx,QWORD PTR [rsp+0x28]
  4496e4:	call   0x40215c
  4496e9:	xor    eax,eax
  4496eb:	add    rsp,0x68
  4496ef:	pop    rdi
  4496f0:	pop    rbx
  4496f1:	ret    
  4496f2:	int3   
  4496f3:	int3   
  4496f4:	int3   
  4496f5:	int3   
  4496f6:	int3   
  4496f7:	int3   
  4496f8:	rex.W push rbp
  4496fa:	sub    rsp,0x20
  4496fe:	mov    rbp,rdx
  449701:	lea    rcx,[rbp+0x28]
  449705:	call   0x401000
  44970a:	add    rsp,0x20
  44970e:	pop    rbp
  44970f:	ret    
  449710:	rex.W push rbx
  449712:	push   rsi
  449713:	push   rdi
  449714:	sub    rsp,0x40
  449718:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449721:	mov    rdi,r8
  449724:	mov    rsi,rdx
  449727:	mov    rbx,rcx
  44972a:	mov    rdx,QWORD PTR [rcx+0xe8]
  449731:	test   rdx,rdx
  449734:	je     0x44979c
  449736:	mov    rdx,QWORD PTR [rdx]
  449739:	lea    rcx,[rip+0xb3f8]        # 0x454b38
  449740:	call   QWORD PTR [rip+0x3c2a]        # 0x44d370
  449746:	mov    rdx,rsi
  449749:	mov    rcx,QWORD PTR [rbx+0xe8]
  449750:	call   0x402474
  449755:	lea    rdx,[rip+0x544c]        # 0x44eba8
  44975c:	lea    rcx,[rsp+0x28]
  449761:	call   0x402b6c
  449766:	nop
  449767:	mov    rdx,rdi
  44976a:	lea    rcx,[rsp+0x28]
  44976f:	call   0x43e544
  449774:	mov    rbx,QWORD PTR [rbx+0xe8]
  44977b:	mov    rdx,QWORD PTR [rbx]
  44977e:	mov    rcx,QWORD PTR [rsp+0x28]
  449783:	call   QWORD PTR [rip+0x3be7]        # 0x44d370
  449789:	mov    rcx,rbx
  44978c:	call   0x402454
  449791:	nop
  449792:	mov    rcx,QWORD PTR [rsp+0x28]
  449797:	call   0x40215c
  44979c:	xor    eax,eax
  44979e:	add    rsp,0x40
  4497a2:	pop    rdi
  4497a3:	pop    rsi
  4497a4:	pop    rbx
  4497a5:	ret    
  4497a6:	int3   
  4497a7:	int3   
  4497a8:	int3   
  4497a9:	int3   
  4497aa:	int3   
  4497ab:	int3   
  4497ac:	int3   
  4497ad:	int3   
  4497ae:	int3   
  4497af:	int3   
  4497b0:	rex.W push rbp
  4497b2:	sub    rsp,0x20
  4497b6:	mov    rbp,rdx
  4497b9:	lea    rcx,[rbp+0x28]
  4497bd:	call   0x401000
  4497c2:	add    rsp,0x20
  4497c6:	pop    rbp
  4497c7:	ret    
  4497c8:	rex.W push rbx
  4497ca:	push   rbp
  4497cb:	push   rsi
  4497cc:	push   rdi
  4497cd:	sub    rsp,0x28
  4497d1:	cmp    DWORD PTR [rcx+0x100],0x0
  4497d8:	mov    rbp,rdx
  4497db:	mov    rsi,rcx
  4497de:	jbe    0x4498c7
  4497e4:	cmp    QWORD PTR [rcx+0xe8],0x0
  4497ec:	je     0x4498c7
  4497f2:	mov    rax,QWORD PTR [rcx+0xd8]
  4497f9:	add    rcx,0x10
  4497fd:	test   rax,rax
  449800:	je     0x449812
  449802:	cmp    QWORD PTR [rcx+0xd8],rax
  449809:	jne    0x449812
  44980b:	xor    edx,edx
  44980d:	call   0x448c48
  449812:	cmp    BYTE PTR [rsi+0x181],0x0
  449819:	jne    0x449847
  44981b:	mov    rbx,QWORD PTR [rsi+0xe8]
  449822:	test   rbx,rbx
  449825:	je     0x449847
  449827:	mov    rcx,rbx
  44982a:	call   0x402454
  44982f:	mov    rdx,QWORD PTR [rbx]
  449832:	lea    rcx,[rip+0xb31f]        # 0x454b58
  449839:	call   QWORD PTR [rip+0x3b31]        # 0x44d370
  44983f:	mov    rcx,rbx
  449842:	call   0x402454
  449847:	lea    rdx,[rip+0xb2fa]        # 0x454b48
  44984e:	lea    rcx,[rsi+0x108]
  449855:	call   0x402be4
  44985a:	lea    rcx,[rsi+0x108]
  449861:	call   0x40380c
  449866:	mov    rdx,QWORD PTR [rsi+0xe8]
  44986d:	mov    rcx,QWORD PTR [rsi+0x108]
  449874:	mov    rdx,QWORD PTR [rdx]
  449877:	call   QWORD PTR [rip+0x3af3]        # 0x44d370
  44987d:	lea    rcx,[rsi+0x118]
  449884:	mov    rdx,rbp
  449887:	call   0x4032f8
  44988c:	mov    rcx,QWORD PTR [rsi+0xe8]
  449893:	lea    r8,[rsi+0x108]
  44989a:	lea    rdx,[rsi+0x118]
  4498a1:	call   0x4025cc
  4498a6:	mov    rcx,QWORD PTR [rsi+0xe8]
  4498ad:	call   0x402454
  4498b2:	cmp    BYTE PTR [rsi+0xf9],0x0
  4498b9:	je     0x4498c7
  4498bb:	mov    rcx,QWORD PTR [rsi+0xe8]
  4498c2:	call   0x402438
  4498c7:	cmp    BYTE PTR [rsi+0x181],0x0
  4498ce:	jne    0x4498ec
  4498d0:	cmp    QWORD PTR [rsi+0xd8],0x0
  4498d8:	je     0x4498e3
  4498da:	lea    rcx,[rsi+0x10]
  4498de:	call   0x448c20
  4498e3:	mov    BYTE PTR [rsi+0x181],0x1
  4498ea:	jmp    0x4498f0
  4498ec:	inc    QWORD PTR [rsi+0x20]
  4498f0:	cmp    QWORD PTR [rsi+0xd8],0x0
  4498f8:	je     0x44991f
  4498fa:	lea    rcx,[rsi+0x28]
  4498fe:	lea    rdx,[rip+0xb243]        # 0x454b48
  449905:	call   0x402be4
  44990a:	lea    rcx,[rsi+0x38]
  44990e:	mov    rdx,rbp
  449911:	call   0x4032f8
  449916:	lea    rcx,[rsi+0x10]
  44991a:	call   0x448f00
  44991f:	xor    eax,eax
  449921:	add    rsp,0x28
  449925:	pop    rdi
  449926:	pop    rsi
  449927:	pop    rbp
  449928:	pop    rbx
  449929:	ret    
  44992a:	int3   
  44992b:	int3   
  44992c:	rex.W push rbx
  44992e:	sub    rsp,0x20
  449932:	mov    rbx,rcx
  449935:	add    rcx,0x10
  449939:	cmp    QWORD PTR [rcx+0xc8],0x0
  449941:	je     0x44994a
  449943:	mov    dl,0x1
  449945:	call   0x448c48
  44994a:	mov    rcx,QWORD PTR [rbx+0xe8]
  449951:	test   rcx,rcx
  449954:	je     0x449964
  449956:	cmp    BYTE PTR [rbx+0x181],0x0
  44995d:	je     0x449964
  44995f:	call   0x402454
  449964:	xor    eax,eax
  449966:	add    rsp,0x20
  44996a:	pop    rbx
  44996b:	ret    
  44996c:	rex.W push rbx
  44996e:	push   rdi
  44996f:	sub    rsp,0x68
  449973:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44997c:	mov    rdi,rdx
  44997f:	mov    rbx,rcx
  449982:	cmp    QWORD PTR [rcx+0xe8],0x0
  44998a:	je     0x449a29
  449990:	add    rcx,0x10
  449994:	mov    rax,QWORD PTR [rcx+0xc8]
  44999b:	test   rax,rax
  44999e:	je     0x4499b0
  4499a0:	cmp    QWORD PTR [rcx+0xd8],rax
  4499a7:	jne    0x4499b0
  4499a9:	xor    edx,edx
  4499ab:	call   0x448c48
  4499b0:	lea    rcx,[rsp+0x28]
  4499b5:	call   0x402b34
  4499ba:	nop
  4499bb:	lea    rdx,[rsp+0x38]
  4499c0:	mov    rcx,rdi
  4499c3:	call   0x4019a4
  4499c8:	lea    rdx,[rip+0xb1d9]        # 0x454ba8
  4499cf:	lea    rcx,[rsp+0x28]
  4499d4:	call   0x402d24
  4499d9:	lea    rdx,[rip+0x9550]        # 0x452f30
  4499e0:	lea    rcx,[rsp+0x28]
  4499e5:	call   0x402d24
  4499ea:	lea    rdx,[rsp+0x38]
  4499ef:	lea    rcx,[rsp+0x28]
  4499f4:	call   0x402d24
  4499f9:	mov    rbx,QWORD PTR [rbx+0xe8]
  449a00:	mov    rdx,QWORD PTR [rbx]
  449a03:	mov    rcx,QWORD PTR [rsp+0x28]
  449a08:	call   QWORD PTR [rip+0x3962]        # 0x44d370
  449a0e:	mov    rcx,rbx
  449a11:	call   0x402454
  449a16:	mov    rcx,rbx
  449a19:	call   0x402454
  449a1e:	nop
  449a1f:	mov    rcx,QWORD PTR [rsp+0x28]
  449a24:	call   0x40215c
  449a29:	xor    eax,eax
  449a2b:	add    rsp,0x68
  449a2f:	pop    rdi
  449a30:	pop    rbx
  449a31:	ret    
  449a32:	int3   
  449a33:	int3   
  449a34:	int3   
  449a35:	int3   
  449a36:	int3   
  449a37:	int3   
  449a38:	int3   
  449a39:	int3   
  449a3a:	int3   
  449a3b:	int3   
  449a3c:	rex.W push rbp
  449a3e:	sub    rsp,0x20
  449a42:	mov    rbp,rdx
  449a45:	lea    rcx,[rbp+0x28]
  449a49:	call   0x401000
  449a4e:	add    rsp,0x20
  449a52:	pop    rbp
  449a53:	ret    
  449a54:	rex.W push rbx
  449a56:	push   rsi
  449a57:	push   rdi
  449a58:	sub    rsp,0x30
  449a5c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449a65:	mov    rdi,rdx
  449a68:	mov    rbx,rcx
  449a6b:	lea    rsi,[rip+0x1f4de]        # 0x468f50
  449a72:	mov    QWORD PTR [rsp+0x50],rsi
  449a77:	mov    rcx,rsi
  449a7a:	call   QWORD PTR [rip+0x3640]        # 0x44d0c0
  449a80:	nop
  449a81:	cmp    QWORD PTR [rbx+0xd8],0x0
  449a89:	je     0x449a99
  449a8b:	mov    QWORD PTR [rbx+0x18],rdi
  449a8f:	lea    rcx,[rbx+0x10]
  449a93:	call   0x448f00
  449a98:	nop
  449a99:	mov    rcx,rsi
  449a9c:	call   QWORD PTR [rip+0x3616]        # 0x44d0b8
  449aa2:	xor    eax,eax
  449aa4:	add    rsp,0x30
  449aa8:	pop    rdi
  449aa9:	pop    rsi
  449aaa:	pop    rbx
  449aab:	ret    
  449aac:	int3   
  449aad:	int3   
  449aae:	int3   
  449aaf:	int3   
  449ab0:	int3   
  449ab1:	int3   
  449ab2:	int3   
  449ab3:	int3   
  449ab4:	rex.W push rbp
  449ab6:	sub    rsp,0x20
  449aba:	mov    rbp,rdx
  449abd:	lea    rcx,[rbp+0x50]
  449ac1:	call   0x417d58
  449ac6:	add    rsp,0x20
  449aca:	pop    rbp
  449acb:	ret    
  449acc:	rex.W push rbx
  449ace:	push   rsi
  449acf:	push   rdi
  449ad0:	sub    rsp,0x30
  449ad4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449add:	mov    rdi,rdx
  449ae0:	mov    rbx,rcx
  449ae3:	lea    rsi,[rip+0x1f466]        # 0x468f50
  449aea:	mov    QWORD PTR [rsp+0x58],rsi
  449aef:	mov    rcx,rsi
  449af2:	call   QWORD PTR [rip+0x35c8]        # 0x44d0c0
  449af8:	nop
  449af9:	test   rdi,rdi
  449afc:	je     0x449b17
  449afe:	cmp    QWORD PTR [rbx+0xd8],0x0
  449b06:	je     0x449b17
  449b08:	lea    rcx,[rbx+0x10]
  449b0c:	mov    rax,QWORD PTR [rdi]
  449b0f:	mov    QWORD PTR [rcx],rax
  449b12:	call   0x448f00
  449b17:	mov    eax,DWORD PTR [rip+0x1f3eb]        # 0x468f08
  449b1d:	neg    eax
  449b1f:	sbb    ebx,ebx
  449b21:	and    ebx,0x80004004
  449b27:	mov    rcx,rsi
  449b2a:	call   QWORD PTR [rip+0x3588]        # 0x44d0b8
  449b30:	mov    eax,ebx
  449b32:	add    rsp,0x30
  449b36:	pop    rdi
  449b37:	pop    rsi
  449b38:	pop    rbx
  449b39:	ret    
  449b3a:	int3   
  449b3b:	int3   
  449b3c:	rex.W push rbp
  449b3e:	sub    rsp,0x20
  449b42:	mov    rbp,rdx
  449b45:	lea    rcx,[rbp+0x58]
  449b49:	call   0x417d58
  449b4e:	add    rsp,0x20
  449b52:	pop    rbp
  449b53:	ret    
  449b54:	rex.W push rbx
  449b56:	push   rbp
  449b57:	push   rsi
  449b58:	push   rdi
  449b59:	push   r12
  449b5b:	push   r13
  449b5d:	push   r15
  449b5f:	sub    rsp,0x30
  449b63:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449b6c:	mov    bl,r9b
  449b6f:	mov    r13,r8
  449b72:	mov    rsi,rdx
  449b75:	mov    rdi,rcx
  449b78:	lea    r15,[rip+0x1f3d1]        # 0x468f50
  449b7f:	mov    QWORD PTR [rsp+0x70],r15
  449b84:	mov    rcx,r15
  449b87:	call   QWORD PTR [rip+0x3533]        # 0x44d0c0
  449b8d:	nop
  449b8e:	test   bl,bl
  449b90:	je     0x449ba3
  449b92:	mov    rax,QWORD PTR [rdi+0xd8]
  449b99:	test   rax,rax
  449b9c:	je     0x449ba3
  449b9e:	mov    bpl,0x1
  449ba1:	jmp    0x449bab
  449ba3:	xor    bpl,bpl
  449ba6:	jmp    0x449c62
  449bab:	mov    rcx,QWORD PTR [rdi+0xc8]
  449bb2:	test   rcx,rcx
  449bb5:	je     0x449bc6
  449bb7:	cmp    rax,rcx
  449bba:	jne    0x449bc6
  449bbc:	xor    edx,edx
  449bbe:	mov    rcx,rdi
  449bc1:	call   0x448c48
  449bc6:	mov    rdx,r13
  449bc9:	lea    rcx,[rdi+0xf8]
  449bd0:	call   0x402be4
  449bd5:	test   rsi,rsi
  449bd8:	je     0x449be6
  449bda:	lea    rcx,[rdi+0xf8]
  449be1:	call   0x40380c
  449be6:	mov    rdx,QWORD PTR [rdi+0xd8]
  449bed:	mov    rdx,QWORD PTR [rdx]
  449bf0:	mov    rcx,QWORD PTR [rdi+0xf8]
  449bf7:	call   QWORD PTR [rip+0x3773]        # 0x44d370
  449bfd:	mov    DWORD PTR [rdi+0x110],0x0
  449c07:	mov    rax,QWORD PTR [rdi+0x108]
  449c0e:	mov    WORD PTR [rax],0x0
  449c13:	test   rsi,rsi
  449c16:	je     0x449c27
  449c18:	mov    rdx,rsi
  449c1b:	lea    rcx,[rdi+0x108]
  449c22:	call   0x403290
  449c27:	lea    r8,[rdi+0xf8]
  449c2e:	lea    rdx,[rdi+0x108]
  449c35:	mov    rcx,QWORD PTR [rdi+0xd8]
  449c3c:	call   0x4025cc
  449c41:	mov    rcx,QWORD PTR [rdi+0xd8]
  449c48:	call   0x402454
  449c4d:	cmp    BYTE PTR [rdi+0xe9],0x0
  449c54:	je     0x449c62
  449c56:	mov    rcx,QWORD PTR [rdi+0xd8]
  449c5d:	call   0x402438
  449c62:	cmp    QWORD PTR [rdi+0xc8],0x0
  449c6a:	je     0x449cc5
  449c6c:	cmp    DWORD PTR [rdi+0xec],0x1
  449c73:	jb     0x449cbd
  449c75:	mov    DWORD PTR [rdi+0x30],0x0
  449c7c:	mov    rax,QWORD PTR [rdi+0x28]
  449c80:	mov    WORD PTR [rax],0x0
  449c85:	lea    rcx,[rdi+0x18]
  449c89:	mov    DWORD PTR [rcx+0x8],0x0
  449c90:	mov    rax,QWORD PTR [rcx]
  449c93:	mov    BYTE PTR [rax],0x0
  449c96:	cmp    DWORD PTR [rdi+0xec],0x1
  449c9d:	ja     0x449ca4
  449c9f:	test   bpl,bpl
  449ca2:	jne    0x449cbd
  449ca4:	mov    rdx,r13
  449ca7:	call   0x402be4
  449cac:	test   rsi,rsi
  449caf:	je     0x449cbd
  449cb1:	mov    rdx,rsi
  449cb4:	lea    rcx,[rdi+0x28]
  449cb8:	call   0x403290
  449cbd:	mov    rcx,rdi
  449cc0:	call   0x448f00
  449cc5:	mov    eax,DWORD PTR [rip+0x1f23d]        # 0x468f08
  449ccb:	neg    eax
  449ccd:	sbb    ebx,ebx
  449ccf:	and    ebx,0x80004004
  449cd5:	mov    rcx,r15
  449cd8:	call   QWORD PTR [rip+0x33da]        # 0x44d0b8
  449cde:	mov    eax,ebx
  449ce0:	add    rsp,0x30
  449ce4:	pop    r15
  449ce6:	pop    r13
  449ce8:	pop    r12
  449cea:	pop    rdi
  449ceb:	pop    rsi
  449cec:	pop    rbp
  449ced:	pop    rbx
  449cee:	ret    
  449cef:	int3   
  449cf0:	int3   
  449cf1:	int3   
  449cf2:	int3   
  449cf3:	int3   
  449cf4:	rex.W push rbp
  449cf6:	sub    rsp,0x20
  449cfa:	mov    rbp,rdx
  449cfd:	lea    rcx,[rbp+0x70]
  449d01:	call   0x417d58
  449d06:	add    rsp,0x20
  449d0a:	pop    rbp
  449d0b:	ret    
  449d0c:	sub    rsp,0x28
  449d10:	cmp    BYTE PTR [rcx+0xf8],0x0
  449d17:	mov    r10,rcx
  449d1a:	je     0x449d20
  449d1c:	xor    eax,eax
  449d1e:	jmp    0x449d91
  449d20:	test   rdx,rdx
  449d23:	je     0x449d2b
  449d25:	cmp    WORD PTR [rdx],0x0
  449d29:	jne    0x449d32
  449d2b:	mov    rdx,QWORD PTR [rip+0x1ebfe]        # 0x468930
  449d32:	mov    eax,DWORD PTR [rsp+0x50]
  449d36:	mov    ecx,0x1
  449d3b:	test   eax,eax
  449d3d:	je     0x449d5b
  449d3f:	cmp    eax,ecx
  449d41:	je     0x449d5b
  449d43:	mov    ecx,0x3
  449d48:	lea    r8,[rip+0xaee1]        # 0x454c30
  449d4f:	lea    r9,[rip+0xaed2]        # 0x454c28
  449d56:	cmp    eax,0x2
  449d59:	jmp    0x449d79
  449d5b:	test   r9b,r9b
  449d5e:	je     0x449d69
  449d60:	lea    r8,[rip+0x90c9]        # 0x452e30
  449d67:	jmp    0x449d7d
  449d69:	lea    r8,[rip+0xaeb4]        # 0x454c24
  449d70:	lea    r9,[rip+0xaea9]        # 0x454c20
  449d77:	test   eax,eax
  449d79:	cmovne r8,r9
  449d7d:	cmp    DWORD PTR [r10+0x100],ecx
  449d84:	lea    rcx,[r10+0x10]
  449d88:	setae  r9b
  449d8c:	call   0x449b54
  449d91:	add    rsp,0x28
  449d95:	ret    
  449d96:	int3   
  449d97:	int3   
  449d98:	add    rcx,0x10
  449d9c:	jmp    0x4493d8
  449da1:	int3   
  449da2:	int3   
  449da3:	int3   
  449da4:	rex.W push rbx
  449da6:	sub    rsp,0x20
  449daa:	mov    rbx,rcx
  449dad:	lea    rcx,[rip+0x1f19c]        # 0x468f50
  449db4:	call   QWORD PTR [rip+0x3306]        # 0x44d0c0
  449dba:	inc    QWORD PTR [rbx+0x20]
  449dbe:	lea    rcx,[rip+0x1f18b]        # 0x468f50
  449dc5:	call   QWORD PTR [rip+0x32ed]        # 0x44d0b8
  449dcb:	xor    eax,eax
  449dcd:	add    rsp,0x20
  449dd1:	pop    rbx
  449dd2:	ret    
  449dd3:	int3   
  449dd4:	rex.W push rbx
  449dd6:	push   rbp
  449dd7:	push   rsi
  449dd8:	push   rdi
  449dd9:	sub    rsp,0x48
  449ddd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449de6:	mov    rsi,r9
  449de9:	mov    ebp,r8d
  449dec:	mov    ebx,edx
  449dee:	mov    rdi,rcx
  449df1:	test   edx,edx
  449df3:	je     0x449eac
  449df9:	add    rcx,0x10
  449dfd:	cmp    QWORD PTR [rcx+0xc8],0x0
  449e05:	je     0x449e0e
  449e07:	mov    dl,0x1
  449e09:	call   0x448c48
  449e0e:	cmp    QWORD PTR [rdi+0xf0],0x0
  449e16:	je     0x449ea8
  449e1c:	mov    rcx,QWORD PTR [rdi+0xe8]
  449e23:	test   rcx,rcx
  449e26:	je     0x449e2d
  449e28:	call   0x402438
  449e2d:	lea    rcx,[rsp+0x28]
  449e32:	call   0x402b34
  449e37:	nop
  449e38:	lea    r8,[rsp+0x28]
  449e3d:	mov    edx,ebp
  449e3f:	mov    ecx,ebx
  449e41:	call   0x43eecc
  449e46:	mov    rbx,QWORD PTR [rdi+0xf0]
  449e4d:	mov    rdx,QWORD PTR [rbx]
  449e50:	mov    rcx,QWORD PTR [rsp+0x28]
  449e55:	call   QWORD PTR [rip+0x3515]        # 0x44d370
  449e5b:	mov    rdx,QWORD PTR [rbx]
  449e5e:	lea    rcx,[rip+0x4d43]        # 0x44eba8
  449e65:	call   QWORD PTR [rip+0x3505]        # 0x44d370
  449e6b:	mov    rcx,rbx
  449e6e:	call   0x402454
  449e73:	mov    rdx,rsi
  449e76:	mov    rcx,rbx
  449e79:	call   0x402474
  449e7e:	mov    rbx,rax
  449e81:	mov    rcx,rax
  449e84:	call   0x402454
  449e89:	mov    rcx,rbx
  449e8c:	call   0x402454
  449e91:	mov    rcx,QWORD PTR [rdi+0xf0]
  449e98:	call   0x402438
  449e9d:	nop
  449e9e:	mov    rcx,QWORD PTR [rsp+0x28]
  449ea3:	call   0x40215c
  449ea8:	xor    eax,eax
  449eaa:	jmp    0x449eae
  449eac:	xor    eax,eax
  449eae:	add    rsp,0x48
  449eb2:	pop    rdi
  449eb3:	pop    rsi
  449eb4:	pop    rbp
  449eb5:	pop    rbx
  449eb6:	ret    
  449eb7:	int3   
  449eb8:	int3   
  449eb9:	int3   
  449eba:	int3   
  449ebb:	int3   
  449ebc:	int3   
  449ebd:	int3   
  449ebe:	int3   
  449ebf:	int3   
  449ec0:	int3   
  449ec1:	int3   
  449ec2:	int3   
  449ec3:	int3   
  449ec4:	rex.W push rbp
  449ec6:	sub    rsp,0x20
  449eca:	mov    rbp,rdx
  449ecd:	lea    rcx,[rbp+0x28]
  449ed1:	call   0x401000
  449ed6:	add    rsp,0x20
  449eda:	pop    rbp
  449edb:	ret    
  449edc:	rex.W push rbx
  449ede:	push   rsi
  449edf:	push   rdi
  449ee0:	sub    rsp,0x30
  449ee4:	test   edx,edx
  449ee6:	mov    rsi,r8
  449ee9:	mov    rdi,rcx
  449eec:	mov    ebx,0x1
  449ef1:	mov    eax,edx
  449ef3:	je     0x449f80
  449ef9:	dec    eax
  449efb:	je     0x449f77
  449efd:	dec    eax
  449eff:	je     0x449f6e
  449f01:	dec    eax
  449f03:	je     0x449f65
  449f05:	dec    eax
  449f07:	je     0x449f5c
  449f09:	dec    eax
  449f0b:	je     0x449f4e
  449f0d:	dec    eax
  449f0f:	je     0x449f40
  449f11:	dec    eax
  449f13:	je     0x449f32
  449f15:	mov    ecx,edx
  449f17:	lea    rdx,[rsp+0x22]
  449f1c:	mov    BYTE PTR [rsp+0x20],0x6f
  449f21:	mov    BYTE PTR [rsp+0x21],0x70
  449f26:	call   0x4019a4
  449f2b:	lea    r8,[rsp+0x20]
  449f30:	jmp    0x449f87
  449f32:	lea    r8,[rip+0xad2f]        # 0x454c68
  449f39:	mov    ebx,0x64
  449f3e:	jmp    0x449f87
  449f40:	lea    r8,[rip+0xad19]        # 0x454c60
  449f47:	mov    ebx,0x3
  449f4c:	jmp    0x449f87
  449f4e:	lea    r8,[rip+0x8253]        # 0x4521a8
  449f55:	mov    ebx,0x2
  449f5a:	jmp    0x449f87
  449f5c:	lea    r8,[rip+0xacf9]        # 0x454c5c
  449f63:	jmp    0x449f55
  449f65:	lea    r8,[rip+0xacec]        # 0x454c58
  449f6c:	jmp    0x449f47
  449f6e:	lea    r8,[rip+0xacbb]        # 0x454c30
  449f75:	jmp    0x449f47
  449f77:	lea    r8,[rip+0xaca2]        # 0x454c20
  449f7e:	jmp    0x449f87
  449f80:	lea    r8,[rip+0xac9d]        # 0x454c24
  449f87:	cmp    DWORD PTR [rdi+0x100],ebx
  449f8d:	lea    rcx,[rdi+0x10]
  449f91:	mov    rdx,rsi
  449f94:	setae  r9b
  449f98:	call   0x449b54
  449f9d:	add    rsp,0x30
  449fa1:	pop    rdi
  449fa2:	pop    rsi
  449fa3:	pop    rbx
  449fa4:	ret    
  449fa5:	int3   
  449fa6:	int3   
  449fa7:	int3   
  449fa8:	rex.W push rbx
  449faa:	push   rsi
  449fab:	push   rdi
  449fac:	push   r12
  449fae:	sub    rsp,0x48
  449fb2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  449fbb:	mov    rsi,r8
  449fbe:	mov    r12,rdx
  449fc1:	mov    rbx,rcx
  449fc4:	xor    edi,edi
  449fc6:	mov    QWORD PTR [r8],rdi
  449fc9:	cmp    BYTE PTR [rcx+0x168],dil
  449fd0:	jne    0x44a00e
  449fd2:	cmp    BYTE PTR [rcx+0x180],dil
  449fd9:	je     0x44a00e
  449fdb:	mov    rdx,QWORD PTR [rcx+0xe8]
  449fe2:	lea    rcx,[rsp+0x28]
  449fe7:	call   0x44a724
  449fec:	nop
  449fed:	lea    rcx,[rbx+0x170]
  449ff4:	mov    rdx,rax
  449ff7:	call   0x4032f8
  449ffc:	nop
  449ffd:	mov    rcx,QWORD PTR [rsp+0x28]
  44a002:	call   0x40215c
  44a007:	mov    BYTE PTR [rbx+0x168],0x1
  44a00e:	cmp    BYTE PTR [rbx+0x168],dil
  44a015:	setne  dil
  44a019:	mov    DWORD PTR [r12],edi
  44a01d:	mov    rcx,QWORD PTR [rbx+0x170]
  44a024:	call   QWORD PTR [rip+0x3266]        # 0x44d290
  44a02a:	mov    QWORD PTR [rsi],rax
  44a02d:	neg    rax
  44a030:	sbb    eax,eax
  44a032:	not    eax
  44a034:	and    eax,0x8007000e
  44a039:	jmp    0x44a040
  44a03b:	mov    eax,0x8007000e
  44a040:	add    rsp,0x48
  44a044:	pop    r12
  44a046:	pop    rdi
  44a047:	pop    rsi
  44a048:	pop    rbx
  44a049:	ret    
  44a04a:	int3   
  44a04b:	int3   
  44a04c:	int3   
  44a04d:	int3   
  44a04e:	int3   
  44a04f:	int3   
  44a050:	int3   
  44a051:	int3   
  44a052:	int3   
  44a053:	int3   
  44a054:	int3   
  44a055:	int3   
  44a056:	int3   
  44a057:	int3   
  44a058:	rex.W push rbp
  44a05a:	sub    rsp,0x20
  44a05e:	mov    rbp,rdx
  44a061:	lea    rcx,[rbp+0x28]
  44a065:	call   0x401000
  44a06a:	add    rsp,0x20
  44a06e:	pop    rbp
  44a06f:	ret    
  44a070:	int3   
  44a071:	int3   
  44a072:	int3   
  44a073:	int3   
  44a074:	int3   
  44a075:	int3   
  44a076:	int3   
  44a077:	int3   
  44a078:	mov    QWORD PTR [rsp+0x10],rdx
  44a07d:	push   rbp
  44a07e:	sub    rsp,0x20
  44a082:	mov    rbp,rdx
  44a085:	lea    rax,[rip+0xffffffffffffffaf]        # 0x44a03b
  44a08c:	jmp    0x44a08e
  44a08e:	add    rsp,0x20
  44a092:	pop    rbp
  44a093:	ret    
  44a094:	int3   
  44a095:	int3   
  44a096:	int3   
  44a097:	int3   
  44a098:	rex.W push rbx
  44a09a:	push   rdi
  44a09b:	sub    rsp,0x48
  44a09f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44a0a8:	mov    rdi,rdx
  44a0ab:	mov    rbx,rcx
  44a0ae:	mov    QWORD PTR [rdx],0x0
  44a0b5:	cmp    BYTE PTR [rcx+0x168],0x0
  44a0bc:	jne    0x44a0f1
  44a0be:	mov    rdx,QWORD PTR [rcx+0xe8]
  44a0c5:	lea    rcx,[rsp+0x28]
  44a0ca:	call   0x44a724
  44a0cf:	nop
  44a0d0:	lea    rcx,[rbx+0x170]
  44a0d7:	mov    rdx,rax
  44a0da:	call   0x4032f8
  44a0df:	nop
  44a0e0:	mov    rcx,QWORD PTR [rsp+0x28]
  44a0e5:	call   0x40215c
  44a0ea:	mov    BYTE PTR [rbx+0x168],0x1
  44a0f1:	mov    rcx,QWORD PTR [rbx+0x170]
  44a0f8:	call   QWORD PTR [rip+0x3192]        # 0x44d290
  44a0fe:	mov    QWORD PTR [rdi],rax
  44a101:	neg    rax
  44a104:	sbb    eax,eax
  44a106:	not    eax
  44a108:	and    eax,0x8007000e
  44a10d:	jmp    0x44a114
  44a10f:	mov    eax,0x8007000e
  44a114:	add    rsp,0x48
  44a118:	pop    rdi
  44a119:	pop    rbx
  44a11a:	ret    
  44a11b:	int3   
  44a11c:	int3   
  44a11d:	int3   
  44a11e:	int3   
  44a11f:	int3   
  44a120:	int3   
  44a121:	int3   
  44a122:	int3   
  44a123:	int3   
  44a124:	int3   
  44a125:	int3   
  44a126:	int3   
  44a127:	int3   
  44a128:	rex.W push rbp
  44a12a:	sub    rsp,0x20
  44a12e:	mov    rbp,rdx
  44a131:	lea    rcx,[rbp+0x28]
  44a135:	call   0x401000
  44a13a:	add    rsp,0x20
  44a13e:	pop    rbp
  44a13f:	ret    
  44a140:	int3   
  44a141:	int3   
  44a142:	int3   
  44a143:	int3   
  44a144:	int3   
  44a145:	int3   
  44a146:	int3   
  44a147:	int3   
  44a148:	mov    QWORD PTR [rsp+0x10],rdx
  44a14d:	push   rbp
  44a14e:	sub    rsp,0x20
  44a152:	mov    rbp,rdx
  44a155:	lea    rax,[rip+0xffffffffffffffb3]        # 0x44a10f
  44a15c:	jmp    0x44a15e
  44a15e:	add    rsp,0x20
  44a162:	pop    rbp
  44a163:	ret    
  44a164:	int3   
  44a165:	int3   
  44a166:	int3   
  44a167:	int3   
  44a168:	sub    rsp,0x28
  44a16c:	cmp    BYTE PTR [rcx+0xf8],0x0
  44a173:	jne    0x44a1a5
  44a175:	cmp    DWORD PTR [rcx+0x100],0x7
  44a17c:	jbe    0x44a1a5
  44a17e:	test   rdx,rdx
  44a181:	je     0x44a189
  44a183:	cmp    WORD PTR [rdx],0x0
  44a187:	jne    0x44a190
  44a189:	mov    rdx,QWORD PTR [rip+0x1e7a0]        # 0x468930
  44a190:	lea    r8,[rip+0xaac9]        # 0x454c60
  44a197:	add    rcx,0x10
  44a19b:	mov    r9b,0x1
  44a19e:	call   0x449b54
  44a1a3:	jmp    0x44a1a7
  44a1a5:	xor    eax,eax
  44a1a7:	add    rsp,0x28
  44a1ab:	ret    
  44a1ac:	mov    QWORD PTR [rsp+0x20],r9
  44a1b1:	push   rbx
  44a1b2:	push   rbp
  44a1b3:	push   rsi
  44a1b4:	push   rdi
  44a1b5:	push   r12
  44a1b7:	push   r13
  44a1b9:	push   r14
  44a1bb:	push   r15
  44a1bd:	sub    rsp,0x28
  44a1c1:	mov    rdi,rcx
  44a1c4:	add    rcx,0x10
  44a1c8:	xor    ebp,ebp
  44a1ca:	cmp    QWORD PTR [rcx+0xc8],rbp
  44a1d1:	mov    rsi,r9
  44a1d4:	mov    r13,r8
  44a1d7:	mov    r15,rdx
  44a1da:	je     0x44a1e3
  44a1dc:	mov    dl,0x1
  44a1de:	call   0x448c48
  44a1e3:	cmp    DWORD PTR [r13+0x8],ebp
  44a1e7:	mov    r12d,ebp
  44a1ea:	jbe    0x44a3ec
  44a1f0:	mov    r14,rbp
  44a1f3:	mov    rax,QWORD PTR [r13+0x0]
  44a1f7:	mov    rsi,QWORD PTR [r14+rax*1]
  44a1fb:	cmp    BYTE PTR [rsi+0x21],bpl
  44a1ff:	mov    ebx,DWORD PTR [rsi+0x24]
  44a202:	je     0x44a207
  44a204:	or     ebx,0x20
  44a207:	cmp    ebx,ebp
  44a209:	jne    0x44a214
  44a20b:	cmp    DWORD PTR [rsi+0x40],ebp
  44a20e:	je     0x44a2c4
  44a214:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a21b:	cmp    rcx,rbp
  44a21e:	je     0x44a245
  44a220:	call   0x402454
  44a225:	cmp    r12d,ebp
  44a228:	je     0x44a245
  44a22a:	mov    rdx,QWORD PTR [rsi+0x90]
  44a231:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a238:	call   0x402474
  44a23d:	mov    rcx,rax
  44a240:	call   0x402454
  44a245:	cmp    ebx,ebp
  44a247:	je     0x44a264
  44a249:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a250:	cmp    rcx,rbp
  44a253:	je     0x44a264
  44a255:	lea    rdx,[rip+0x82e4]        # 0x452540
  44a25c:	mov    r8d,ebx
  44a25f:	call   0x43f42c
  44a264:	cmp    DWORD PTR [rsi+0x40],ebp
  44a267:	je     0x44a2a7
  44a269:	mov    rbp,QWORD PTR [rdi+0xf0]
  44a270:	test   rbp,rbp
  44a273:	je     0x44a2a5
  44a275:	mov    rdx,QWORD PTR [rbp+0x0]
  44a279:	mov    rbx,QWORD PTR [rsi+0x38]
  44a27d:	lea    rcx,[rip+0x82bc]        # 0x452540
  44a284:	call   QWORD PTR [rip+0x30e6]        # 0x44d370
  44a28a:	mov    rcx,rbp
  44a28d:	call   0x402454
  44a292:	mov    rdx,rbx
  44a295:	mov    rcx,rbp
  44a298:	call   0x402474
  44a29d:	mov    rcx,rax
  44a2a0:	call   0x402454
  44a2a5:	xor    ebp,ebp
  44a2a7:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a2ae:	cmp    rcx,rbp
  44a2b1:	je     0x44a2c4
  44a2b3:	call   0x402454
  44a2b8:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a2bf:	call   0x402438
  44a2c4:	cmp    BYTE PTR [rsi+0x22],bpl
  44a2c8:	mov    ebx,DWORD PTR [rsi+0x28]
  44a2cb:	jne    0x44a2dc
  44a2cd:	cmp    BYTE PTR [rsi+0x20],bpl
  44a2d1:	je     0x44a2dc
  44a2d3:	test   BYTE PTR [rsi+0x24],0x40
  44a2d7:	jne    0x44a2dc
  44a2d9:	or     ebx,0x40
  44a2dc:	cmp    ebx,ebp
  44a2de:	jne    0x44a2e9
  44a2e0:	cmp    DWORD PTR [rsi+0x50],ebp
  44a2e3:	je     0x44a3a2
  44a2e9:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a2f0:	cmp    rcx,rbp
  44a2f3:	je     0x44a31a
  44a2f5:	call   0x402454
  44a2fa:	cmp    r12d,ebp
  44a2fd:	je     0x44a31a
  44a2ff:	mov    rdx,QWORD PTR [rsi+0x90]
  44a306:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a30d:	call   0x402474
  44a312:	mov    rcx,rax
  44a315:	call   0x402454
  44a31a:	cmp    ebx,ebp
  44a31c:	je     0x44a339
  44a31e:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a325:	cmp    rcx,rbp
  44a328:	je     0x44a339
  44a32a:	lea    rdx,[rip+0x81ff]        # 0x452530
  44a331:	mov    r8d,ebx
  44a334:	call   0x43f42c
  44a339:	cmp    DWORD PTR [rsi+0x50],ebp
  44a33c:	je     0x44a37c
  44a33e:	mov    rbp,QWORD PTR [rdi+0xe8]
  44a345:	test   rbp,rbp
  44a348:	je     0x44a37a
  44a34a:	mov    rdx,QWORD PTR [rbp+0x0]
  44a34e:	mov    rbx,QWORD PTR [rsi+0x48]
  44a352:	lea    rcx,[rip+0x81d7]        # 0x452530
  44a359:	call   QWORD PTR [rip+0x3011]        # 0x44d370
  44a35f:	mov    rcx,rbp
  44a362:	call   0x402454
  44a367:	mov    rdx,rbx
  44a36a:	mov    rcx,rbp
  44a36d:	call   0x402474
  44a372:	mov    rcx,rax
  44a375:	call   0x402454
  44a37a:	xor    ebp,ebp
  44a37c:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a383:	cmp    rcx,rbp
  44a386:	je     0x44a3a2
  44a388:	call   0x402454
  44a38d:	cmp    BYTE PTR [rdi+0xf9],bpl
  44a394:	je     0x44a3a2
  44a396:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a39d:	call   0x402438
  44a3a2:	cmp    DWORD PTR [rsi+0x2c],ebp
  44a3a5:	jl     0x44a3d3
  44a3a7:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a3ae:	cmp    rcx,rbp
  44a3b1:	je     0x44a3d3
  44a3b3:	mov    r8,rsi
  44a3b6:	mov    rdx,r15
  44a3b9:	call   0x43f7b8
  44a3be:	cmp    BYTE PTR [rdi+0xf9],bpl
  44a3c5:	je     0x44a3d3
  44a3c7:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a3ce:	call   0x402438
  44a3d3:	inc    r12d
  44a3d6:	add    r14,0x8
  44a3da:	cmp    r12d,DWORD PTR [r13+0x8]
  44a3de:	jb     0x44a1f3
  44a3e4:	mov    rsi,QWORD PTR [rsp+0x88]
  44a3ec:	cmp    DWORD PTR [rsp+0x90],ebp
  44a3f3:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a3fa:	jne    0x44a41e
  44a3fc:	cmp    rcx,rbp
  44a3ff:	je     0x44a479
  44a401:	mov    r8,r13
  44a404:	mov    rdx,r15
  44a407:	call   0x441a08
  44a40c:	cmp    eax,ebp
  44a40e:	jne    0x44a47b
  44a410:	mov    rcx,QWORD PTR [rdi+0xe8]
  44a417:	call   0x402454
  44a41c:	jmp    0x44a479
  44a41e:	cmp    rcx,rbp
  44a421:	je     0x44a428
  44a423:	call   0x402438
  44a428:	mov    rbx,QWORD PTR [rdi+0xf0]
  44a42f:	cmp    rbx,rbp
  44a432:	je     0x44a479
  44a434:	mov    rdx,QWORD PTR [rbx]
  44a437:	mov    rcx,QWORD PTR [rip+0x1e51a]        # 0x468958
  44a43e:	call   QWORD PTR [rip+0x2f2c]        # 0x44d370
  44a444:	mov    rdx,rsi
  44a447:	mov    rcx,rbx
  44a44a:	call   0x402474
  44a44f:	mov    rcx,rax
  44a452:	call   0x402454
  44a457:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a45e:	mov    r8,r13
  44a461:	mov    rdx,r15
  44a464:	call   0x441e00
  44a469:	cmp    eax,ebp
  44a46b:	jne    0x44a47b
  44a46d:	mov    rcx,QWORD PTR [rdi+0xf0]
  44a474:	call   0x402438
  44a479:	xor    eax,eax
  44a47b:	add    rsp,0x28
  44a47f:	pop    r15
  44a481:	pop    r14
  44a483:	pop    r13
  44a485:	pop    r12
  44a487:	pop    rdi
  44a488:	pop    rsi
  44a489:	pop    rbp
  44a48a:	pop    rbx
  44a48b:	ret    
  44a48c:	rex.W push rbx
  44a48e:	push   rbp
  44a48f:	push   rsi
  44a490:	push   rdi
  44a491:	push   r12
  44a493:	sub    rsp,0x30
  44a497:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44a4a0:	mov    esi,r8d
  44a4a3:	mov    rbx,rdx
  44a4a6:	mov    rdi,rcx
  44a4a9:	lea    r12,[rip+0x1eaa0]        # 0x468f50
  44a4b0:	mov    QWORD PTR [rsp+0x60],r12
  44a4b5:	mov    rcx,r12
  44a4b8:	call   QWORD PTR [rip+0x2c02]        # 0x44d0c0
  44a4be:	nop
  44a4bf:	mov    ecx,0x10
  44a4c4:	call   0x402130
  44a4c9:	mov    QWORD PTR [rsp+0x78],rax
  44a4ce:	xor    edx,edx
  44a4d0:	cmp    rax,rdx
  44a4d3:	je     0x44a4e3
  44a4d5:	mov    rdx,rbx
  44a4d8:	mov    rcx,rax
  44a4db:	call   0x403208
  44a4e0:	mov    rdx,rax
  44a4e3:	lea    rcx,[rdi+0x138]
  44a4ea:	call   0x4010c8
  44a4ef:	lea    rcx,[rdi+0x148]
  44a4f6:	mov    edx,esi
  44a4f8:	call   0x4131dc
  44a4fd:	mov    r9b,0x1
  44a500:	mov    r8d,esi
  44a503:	mov    rdx,rbx
  44a506:	mov    rcx,rdi
  44a509:	call   0x4492d0
  44a50e:	nop
  44a50f:	mov    rcx,r12
  44a512:	call   QWORD PTR [rip+0x2ba0]        # 0x44d0b8
  44a518:	xor    eax,eax
  44a51a:	add    rsp,0x30
  44a51e:	pop    r12
  44a520:	pop    rdi
  44a521:	pop    rsi
  44a522:	pop    rbp
  44a523:	pop    rbx
  44a524:	ret    
  44a525:	int3   
  44a526:	int3   
  44a527:	int3   
  44a528:	int3   
  44a529:	int3   
  44a52a:	int3   
  44a52b:	int3   
  44a52c:	rex.W push rbp
  44a52e:	sub    rsp,0x20
  44a532:	mov    rbp,rdx
  44a535:	lea    rcx,[rbp+0x60]
  44a539:	call   0x417d58
  44a53e:	add    rsp,0x20
  44a542:	pop    rbp
  44a543:	ret    
  44a544:	int3   
  44a545:	int3   
  44a546:	int3   
  44a547:	int3   
  44a548:	int3   
  44a549:	int3   
  44a54a:	int3   
  44a54b:	int3   
  44a54c:	rex.W push rbp
  44a54e:	sub    rsp,0x20
  44a552:	mov    rbp,rdx
  44a555:	mov    rcx,QWORD PTR [rbp+0x78]
  44a559:	call   0x40215c
  44a55e:	add    rsp,0x20
  44a562:	pop    rbp
  44a563:	ret    
  44a564:	rex.W push rbx
  44a566:	push   rbp
  44a567:	push   rsi
  44a568:	push   rdi
  44a569:	push   r12
  44a56b:	sub    rsp,0x30
  44a56f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
  44a578:	mov    esi,r8d
  44a57b:	mov    rbx,rdx
  44a57e:	mov    rdi,rcx
  44a581:	lea    r12,[rip+0x1e9c8]        # 0x468f50
  44a588:	mov    QWORD PTR [rsp+0x60],r12
  44a58d:	mov    rcx,r12
  44a590:	call   QWORD PTR [rip+0x2b2a]        # 0x44d0c0
  44a596:	nop
  44a597:	mov    ecx,0x10
  44a59c:	call   0x402130
  44a5a1:	mov    QWORD PTR [rsp+0x78],rax
  44a5a6:	xor    edx,edx
  44a5a8:	cmp    rax,rdx
  44a5ab:	je     0x44a5bb
  44a5ad:	mov    rdx,rbx
  44a5b0:	mov    rcx,rax
  44a5b3:	call   0x403208
  44a5b8:	mov    rdx,rax
  44a5bb:	lea    rcx,[rdi+0x118]
  44a5c2:	call   0x4010c8
  44a5c7:	lea    rcx,[rdi+0x128]
  44a5ce:	mov    edx,esi
  44a5d0:	call   0x4131dc
  44a5d5:	mov    r9b,0x1
  44a5d8:	mov    r8d,esi
  44a5db:	mov    rdx,rbx
  44a5de:	mov    rcx,rdi
  44a5e1:	call   0x4492d0
  44a5e6:	nop
  44a5e7:	mov    rcx,r12
  44a5ea:	call   QWORD PTR [rip+0x2ac8]        # 0x44d0b8
  44a5f0:	mov    eax,0x1
  44a5f5:	add    rsp,0x30
  44a5f9:	pop    r12
  44a5fb:	pop    rdi
  44a5fc:	pop    rsi
  44a5fd:	pop    rbp
  44a5fe:	pop    rbx
  44a5ff:	ret    
  44a600:	int3   
  44a601:	int3   
  44a602:	int3   
  44a603:	int3   
  44a604:	rex.W push rbp
  44a606:	sub    rsp,0x20
  44a60a:	mov    rbp,rdx
  44a60d:	lea    rcx,[rbp+0x60]
  44a611:	call   0x417d58
  44a616:	add    rsp,0x20
  44a61a:	pop    rbp
  44a61b:	ret    
  44a61c:	int3   
  44a61d:	int3   
  44a61e:	int3   
  44a61f:	int3   
  44a620:	int3   
  44a621:	int3   
  44a622:	int3   
  44a623:	int3   
  44a624:	rex.W push rbp
  44a626:	sub    rsp,0x20
  44a62a:	mov    rbp,rdx
  44a62d:	mov    rcx,QWORD PTR [rbp+0x78]
  44a631:	call   0x40215c
  44a636:	add    rsp,0x20
  44a63a:	pop    rbp
  44a63b:	ret    
  44a63c:	add    rcx,0x10
  44a640:	jmp    0x44a564
  44a645:	int3   
  44a646:	int3   
  44a647:	int3   
  44a648:	rex.W push rbx
  44a64a:	push   rdi
  44a64b:	sub    rsp,0x38
  44a64f:	xor    ebx,ebx
  44a651:	mov    rdi,rcx
  44a654:	cmp    rcx,rbx
  44a657:	je     0x44a669
  44a659:	mov    rdx,QWORD PTR [rcx]
  44a65c:	mov    rcx,QWORD PTR [rip+0x1e30d]        # 0x468970
  44a663:	call   QWORD PTR [rip+0x2d07]        # 0x44d370
  44a669:	cmp    rdi,rbx
  44a66c:	je     0x44a686
  44a66e:	mov    rdx,QWORD PTR [rdi]
  44a671:	mov    rcx,QWORD PTR [rip+0x1e300]        # 0x468978
  44a678:	call   QWORD PTR [rip+0x2cf2]        # 0x44d370
  44a67e:	mov    rcx,rdi
  44a681:	call   0x402438
  44a686:	lea    rdx,[rsp+0x20]
  44a68b:	lea    rcx,[rip+0x1e336]        # 0x4689c8
  44a692:	xor    r8d,r8d
  44a695:	call   0x4021e4
  44a69a:	lea    rcx,[rsp+0x20]
  44a69f:	call   0x402df8
  44a6a4:	lea    rcx,[rsp+0x20]
  44a6a9:	call   0x402db0
  44a6ae:	cmp    DWORD PTR [rsp+0x28],ebx
  44a6b2:	mov    r11,QWORD PTR [rsp+0x20]
  44a6b7:	je     0x44a6e4
  44a6b9:	mov    cl,BYTE PTR [r11]
  44a6bc:	lea    eax,[rcx-0x41]
  44a6bf:	cmp    al,0x19
  44a6c1:	ja     0x44a6c6
  44a6c3:	add    cl,0x20
  44a6c6:	cmp    cl,0x61
  44a6c9:	je     0x44a70d
  44a6cb:	cmp    cl,0x6e
  44a6ce:	je     0x44a706
  44a6d0:	cmp    cl,0x71
  44a6d3:	je     0x44a6ff
  44a6d5:	cmp    cl,0x73
  44a6d8:	je     0x44a6f8
  44a6da:	cmp    cl,0x75
  44a6dd:	je     0x44a6f1
  44a6df:	cmp    cl,0x79
  44a6e2:	je     0x44a712
  44a6e4:	mov    rcx,r11
  44a6e7:	call   0x40215c
  44a6ec:	jmp    0x44a669
  44a6f1:	mov    ebx,0x4
  44a6f6:	jmp    0x44a712
  44a6f8:	mov    ebx,0x3
  44a6fd:	jmp    0x44a712
  44a6ff:	mov    ebx,0x5
  44a704:	jmp    0x44a712
  44a706:	mov    ebx,0x1
  44a70b:	jmp    0x44a712
  44a70d:	mov    ebx,0x2
  44a712:	mov    rcx,r11
  44a715:	call   0x40215c
  44a71a:	mov    eax,ebx
  44a71c:	add    rsp,0x38
  44a720:	pop    rdi
  44a721:	pop    rbx
  44a722:	ret    
  44a723:	int3   
  44a724:	rex.W push rbx
  44a726:	push   rbp
  44a727:	push   rsi
  44a728:	push   rdi
  44a729:	sub    rsp,0x28
  44a72d:	test   rdx,rdx
  44a730:	mov    rbx,rdx
  44a733:	mov    rsi,rcx
  44a736:	mov    DWORD PTR [rsp+0x50],0x0
  44a73e:	je     0x44a758
  44a740:	mov    rdx,QWORD PTR [rdx]
  44a743:	lea    rcx,[rip+0xa5fe]        # 0x454d48
  44a74a:	call   QWORD PTR [rip+0x2c20]        # 0x44d370
  44a750:	mov    rcx,rbx
  44a753:	call   0x402438
  44a758:	mov    ecx,0xfffffff6
  44a75d:	call   QWORD PTR [rip+0x2995]        # 0x44d0f8
  44a763:	xor    bpl,bpl
  44a766:	mov    DWORD PTR [rsp+0x50],0x0
  44a76e:	cmp    rax,0xffffffffffffffff
  44a772:	mov    rdi,rax
  44a775:	je     0x44a7a4
  44a777:	test   rax,rax
  44a77a:	je     0x44a7a4
  44a77c:	lea    rdx,[rsp+0x50]
  44a781:	mov    rcx,rax
  44a784:	call   QWORD PTR [rip+0x28ee]        # 0x44d078
  44a78a:	test   eax,eax
  44a78c:	je     0x44a7a4
  44a78e:	mov    edx,DWORD PTR [rsp+0x50]
  44a792:	mov    rcx,rdi
  44a795:	and    edx,0xfffffffb
  44a798:	call   QWORD PTR [rip+0x28e2]        # 0x44d080
  44a79e:	test   eax,eax
  44a7a0:	setne  bpl
  44a7a4:	lea    rcx,[rip+0x1e21d]        # 0x4689c8
  44a7ab:	mov    rdx,rsi
  44a7ae:	call   0x4022ec
  44a7b3:	test   bpl,bpl
  44a7b6:	je     0x44a7c5
  44a7b8:	mov    edx,DWORD PTR [rsp+0x50]
  44a7bc:	mov    rcx,rdi
  44a7bf:	call   QWORD PTR [rip+0x28bb]        # 0x44d080
  44a7c5:	test   rbx,rbx
  44a7c8:	je     0x44a7da
  44a7ca:	mov    rcx,rbx
  44a7cd:	call   0x402454
  44a7d2:	mov    rcx,rbx
  44a7d5:	call   0x402438
  44a7da:	mov    rax,rsi
  44a7dd:	add    rsp,0x28
  44a7e1:	pop    rdi
  44a7e2:	pop    rsi
  44a7e3:	pop    rbp
  44a7e4:	pop    rbx
  44a7e5:	ret    
  44a7e6:	int3   
  44a7e7:	int3   
  44a7e8:	int3   
  44a7e9:	int3   
  44a7ea:	int3   
  44a7eb:	int3   
  44a7ec:	int3   
  44a7ed:	int3   
  44a7ee:	int3   
  44a7ef:	int3   
  44a7f0:	sub    rsp,0x78
  44a7f4:	cmp    QWORD PTR [rcx+0x28],0x0
  44a7f9:	mov    QWORD PTR [rsp+0x48],r13
  44a7fe:	mov    QWORD PTR [rsp+0x40],r14
  44a803:	mov    QWORD PTR [rsp+0x38],r15
  44a808:	mov    r14,r8
  44a80b:	mov    r13,rcx
  44a80e:	mov    r15,rdx
  44a811:	jne    0x44a83f
  44a813:	mov    ecx,0x20000
  44a818:	call   0x44ad00
  44a81d:	test   rax,rax
  44a820:	mov    QWORD PTR [r13+0x28],rax
  44a824:	jne    0x44a83f
  44a826:	mov    eax,0x8007000e
  44a82b:	mov    r15,QWORD PTR [rsp+0x38]
  44a830:	mov    r14,QWORD PTR [rsp+0x40]
  44a835:	mov    r13,QWORD PTR [rsp+0x48]
  44a83a:	add    rsp,0x78
  44a83e:	ret    
  44a83f:	mov    QWORD PTR [rsp+0x60],rsi
  44a844:	mov    rsi,QWORD PTR [rsp+0xa0]
  44a84c:	mov    QWORD PTR [rsp+0x58],rdi
  44a851:	mov    QWORD PTR [rsp+0x50],r12
  44a856:	mov    r12,QWORD PTR [rsp+0xa8]
  44a85e:	mov    QWORD PTR [rsp+0x70],rbx
  44a863:	mov    QWORD PTR [rsp+0x68],rbp
  44a868:	mov    QWORD PTR [r13+0x38],0x0
  44a870:	test   rsi,rsi
  44a873:	mov    r8d,0x20000
  44a879:	mov    DWORD PTR [rsp+0x80],r8d
  44a881:	je     0x44a8a4
  44a883:	mov    rax,QWORD PTR [rsi]
  44a886:	sub    rax,QWORD PTR [r13+0x38]
  44a88a:	cmp    rax,r8
  44a88d:	jae    0x44a8a4
  44a88f:	mov    r8d,DWORD PTR [rsi]
  44a892:	sub    r8d,DWORD PTR [r13+0x38]
  44a896:	mov    DWORD PTR [rsp+0x80],r8d
  44a89e:	je     0x44a93a
  44a8a4:	mov    rax,QWORD PTR [r15]
  44a8a7:	mov    rdx,QWORD PTR [r13+0x28]
  44a8ab:	lea    r9,[rsp+0x80]
  44a8b3:	mov    rcx,r15
  44a8b6:	call   QWORD PTR [rax+0x18]
  44a8b9:	mov    ecx,DWORD PTR [rsp+0x80]
  44a8c0:	test   ecx,ecx
  44a8c2:	mov    ebp,eax
  44a8c4:	je     0x44a947
  44a8ca:	test   r14,r14
  44a8cd:	je     0x44a90d
  44a8cf:	xor    ebx,ebx
  44a8d1:	mov    rax,QWORD PTR [r14]
  44a8d4:	sub    ecx,ebx
  44a8d6:	mov    edx,ebx
  44a8d8:	add    rdx,QWORD PTR [r13+0x28]
  44a8dc:	mov    DWORD PTR [rsp+0x20],ecx
  44a8e0:	mov    r8d,ecx
  44a8e3:	lea    r9,[rsp+0x20]
  44a8e8:	mov    rcx,r14
  44a8eb:	call   QWORD PTR [rax+0x18]
  44a8ee:	mov    edx,DWORD PTR [rsp+0x20]
  44a8f2:	add    QWORD PTR [r13+0x38],rdx
  44a8f6:	add    ebx,edx
  44a8f8:	test   eax,eax
  44a8fa:	jne    0x44a947
  44a8fc:	test   edx,edx
  44a8fe:	je     0x44a93e
  44a900:	mov    ecx,DWORD PTR [rsp+0x80]
  44a907:	cmp    ebx,ecx
  44a909:	jb     0x44a8d1
  44a90b:	jmp    0x44a911
  44a90d:	add    QWORD PTR [r13+0x38],rcx
  44a911:	test   ebp,ebp
  44a913:	jne    0x44a945
  44a915:	test   r12,r12
  44a918:	je     0x44a870
  44a91e:	mov    rax,QWORD PTR [r12]
  44a922:	lea    r8,[r13+0x38]
  44a926:	lea    rdx,[r13+0x38]
  44a92a:	mov    rcx,r12
  44a92d:	call   QWORD PTR [rax+0x18]
  44a930:	test   eax,eax
  44a932:	je     0x44a870
  44a938:	jmp    0x44a947
  44a93a:	xor    eax,eax
  44a93c:	jmp    0x44a947
  44a93e:	mov    eax,0x80004005
  44a943:	jmp    0x44a947
  44a945:	mov    eax,ebp
  44a947:	mov    rbp,QWORD PTR [rsp+0x68]
  44a94c:	mov    rbx,QWORD PTR [rsp+0x70]
  44a951:	mov    rsi,QWORD PTR [rsp+0x60]
  44a956:	mov    rdi,QWORD PTR [rsp+0x58]
  44a95b:	mov    r12,QWORD PTR [rsp+0x50]
  44a960:	mov    r15,QWORD PTR [rsp+0x38]
  44a965:	mov    r14,QWORD PTR [rsp+0x40]
  44a96a:	mov    r13,QWORD PTR [rsp+0x48]
  44a96f:	add    rsp,0x78
  44a973:	ret    
  44a974:	int3   
  44a975:	int3   
  44a976:	int3   
  44a977:	int3   
  44a978:	int3   
  44a979:	int3   
  44a97a:	int3   
  44a97b:	int3   
  44a97c:	int3   
  44a97d:	int3   
  44a97e:	int3   
  44a97f:	int3   
  44a980:	mov    rax,QWORD PTR [rcx+0x20]
  44a984:	mov    QWORD PTR [rdx],rax
  44a987:	xor    eax,eax
  44a989:	ret    
  44a98a:	int3   
  44a98b:	int3   
  44a98c:	int3   
  44a98d:	int3   
  44a98e:	int3   
  44a98f:	int3   
  44a990:	rex.W push rbx
  44a992:	sub    rsp,0x20
  44a996:	lea    rax,[rip+0x5bcb]        # 0x450568
  44a99d:	mov    rbx,rcx
  44a9a0:	mov    QWORD PTR [rcx],rax
  44a9a3:	lea    rax,[rip+0x5b96]        # 0x450540
  44a9aa:	mov    QWORD PTR [rcx+0x8],rax
  44a9ae:	lea    rax,[rip+0x5b6b]        # 0x450520
  44a9b5:	mov    QWORD PTR [rcx+0x10],rax
  44a9b9:	lea    rax,[rip+0x5b40]        # 0x450500
  44a9c0:	mov    QWORD PTR [rcx+0x18],rax
  44a9c4:	mov    rcx,QWORD PTR [rcx+0x28]
  44a9c8:	call   0x44ad20
  44a9cd:	mov    rcx,QWORD PTR [rbx+0x30]
  44a9d1:	test   rcx,rcx
  44a9d4:	je     0x44a9dc
  44a9d6:	mov    rax,QWORD PTR [rcx]
  44a9d9:	call   QWORD PTR [rax+0x10]
  44a9dc:	add    rsp,0x20
  44a9e0:	pop    rbx
  44a9e1:	ret    
  44a9e2:	int3   
  44a9e3:	int3   
  44a9e4:	int3   
  44a9e5:	int3   
  44a9e6:	int3   
  44a9e7:	int3   
  44a9e8:	int3   
  44a9e9:	int3   
  44a9ea:	int3   
  44a9eb:	int3   
  44a9ec:	int3   
  44a9ed:	int3   
  44a9ee:	int3   
  44a9ef:	int3   
  44a9f0:	sub    rsp,0x28
  44a9f4:	test   rdx,rdx
  44a9f7:	mov    QWORD PTR [rsp+0x40],rbx
  44a9fc:	mov    QWORD PTR [rsp+0x48],rdi
  44aa01:	mov    rdi,rdx
  44aa04:	mov    rbx,rcx
  44aa07:	je     0x44aa12
  44aa09:	mov    rax,QWORD PTR [rdx]
  44aa0c:	mov    rcx,rdx
  44aa0f:	call   QWORD PTR [rax+0x8]
  44aa12:	mov    rcx,QWORD PTR [rbx+0x28]
  44aa16:	test   rcx,rcx
  44aa19:	je     0x44aa21
  44aa1b:	mov    rax,QWORD PTR [rcx]
  44aa1e:	call   QWORD PTR [rax+0x10]
  44aa21:	mov    QWORD PTR [rbx+0x28],rdi
  44aa25:	mov    rdi,QWORD PTR [rsp+0x48]
  44aa2a:	mov    QWORD PTR [rbx+0x30],0x0
  44aa32:	mov    rbx,QWORD PTR [rsp+0x40]
  44aa37:	xor    eax,eax
  44aa39:	add    rsp,0x28
  44aa3d:	ret    
  44aa3e:	int3   
  44aa3f:	int3   
  44aa40:	rex.W push rbx
  44aa42:	sub    rsp,0x20
  44aa46:	mov    rbx,rcx
  44aa49:	mov    rcx,QWORD PTR [rcx+0x28]
  44aa4d:	test   rcx,rcx
  44aa50:	je     0x44aa60
  44aa52:	mov    rax,QWORD PTR [rcx]
  44aa55:	call   QWORD PTR [rax+0x10]
  44aa58:	mov    QWORD PTR [rbx+0x28],0x0
  44aa60:	xor    eax,eax
  44aa62:	add    rsp,0x20
  44aa66:	pop    rbx
  44aa67:	ret    
  44aa68:	int3   
  44aa69:	int3   
  44aa6a:	int3   
  44aa6b:	int3   
  44aa6c:	int3   
  44aa6d:	int3   
  44aa6e:	int3   
  44aa6f:	int3   
  44aa70:	sub    rsp,0x38
  44aa74:	mov    QWORD PTR [rsp+0x50],rbx
  44aa79:	mov    rbx,rcx
  44aa7c:	mov    rcx,QWORD PTR [rcx+0x20]
  44aa80:	mov    DWORD PTR [rsp+0x20],0x0
  44aa88:	mov    rax,QWORD PTR [rcx]
  44aa8b:	mov    QWORD PTR [rsp+0x58],rdi
  44aa90:	mov    rdi,r9
  44aa93:	lea    r9,[rsp+0x20]
  44aa98:	call   QWORD PTR [rax+0x18]
  44aa9b:	mov    ecx,DWORD PTR [rsp+0x20]
  44aa9f:	add    QWORD PTR [rbx+0x28],rcx
  44aaa3:	test   rdi,rdi
  44aaa6:	mov    rbx,QWORD PTR [rsp+0x50]
  44aaab:	je     0x44aaaf
  44aaad:	mov    DWORD PTR [rdi],ecx
  44aaaf:	mov    rdi,QWORD PTR [rsp+0x58]
  44aab4:	add    rsp,0x38
  44aab8:	ret    
  44aab9:	int3   
  44aaba:	int3   
  44aabb:	int3   
  44aabc:	int3   
  44aabd:	int3   
  44aabe:	int3   
  44aabf:	int3   
  44aac0:	sub    rsp,0x48
  44aac4:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  44aacd:	mov    QWORD PTR [rsp+0x50],rbx
  44aad2:	mov    QWORD PTR [rsp+0x58],rbp
  44aad7:	mov    QWORD PTR [rsp+0x60],rsi
  44aadc:	mov    QWORD PTR [rsp+0x68],rdi
  44aae1:	mov    QWORD PTR [rsp+0x40],r12
  44aae6:	mov    rsi,r8
  44aae9:	mov    rbp,rdx
  44aaec:	mov    r12,rcx
  44aaef:	mov    ecx,0x40
  44aaf4:	call   0x402130
  44aaf9:	mov    rdi,rax
  44aafc:	test   rax,rax
  44aaff:	je     0x44ab3f
  44ab01:	xor    ebx,ebx
  44ab03:	mov    DWORD PTR [rax+0x20],ebx
  44ab06:	lea    rax,[rip+0x5a5b]        # 0x450568
  44ab0d:	mov    QWORD PTR [rdi],rax
  44ab10:	lea    rax,[rip+0x5a29]        # 0x450540
  44ab17:	mov    QWORD PTR [rdi+0x8],rax
  44ab1b:	lea    rax,[rip+0x59fe]        # 0x450520
  44ab22:	mov    QWORD PTR [rdi+0x10],rax
  44ab26:	lea    rax,[rip+0x59d3]        # 0x450500
  44ab2d:	mov    QWORD PTR [rdi+0x18],rax
  44ab31:	mov    QWORD PTR [rdi+0x28],rbx
  44ab35:	mov    QWORD PTR [rdi+0x30],rbx
  44ab39:	mov    QWORD PTR [rdi+0x38],rbx
  44ab3d:	jmp    0x44ab44
  44ab3f:	xor    ebx,ebx
  44ab41:	mov    rdi,rbx
  44ab44:	mov    QWORD PTR [rsp+0x38],rdi
  44ab49:	test   rdi,rdi
  44ab4c:	je     0x44ab58
  44ab4e:	mov    rax,QWORD PTR [rdi]
  44ab51:	mov    rcx,rdi
  44ab54:	call   QWORD PTR [rax+0x8]
  44ab57:	nop
  44ab58:	mov    rax,QWORD PTR [rdi]
  44ab5b:	mov    QWORD PTR [rsp+0x28],rsi
  44ab60:	mov    QWORD PTR [rsp+0x20],rbx
  44ab65:	xor    r9d,r9d
  44ab68:	mov    r8,rbp
  44ab6b:	mov    rdx,r12
  44ab6e:	mov    rcx,rdi
  44ab71:	call   QWORD PTR [rax+0x18]
  44ab74:	mov    ebx,eax
  44ab76:	mov    rdx,QWORD PTR [rdi]
  44ab79:	mov    rcx,rdi
  44ab7c:	call   QWORD PTR [rdx+0x10]
  44ab7f:	mov    eax,ebx
  44ab81:	mov    rbx,QWORD PTR [rsp+0x50]
  44ab86:	mov    rbp,QWORD PTR [rsp+0x58]
  44ab8b:	mov    rsi,QWORD PTR [rsp+0x60]
  44ab90:	mov    rdi,QWORD PTR [rsp+0x68]
  44ab95:	mov    r12,QWORD PTR [rsp+0x40]
  44ab9a:	add    rsp,0x48
  44ab9e:	ret    
  44ab9f:	int3   
  44aba0:	rex.W push rbp
  44aba2:	sub    rsp,0x20
  44aba6:	mov    rbp,rdx
  44aba9:	lea    rcx,[rbp+0x38]
  44abad:	call   0x4176b4
  44abb2:	add    rsp,0x20
  44abb6:	pop    rbp
  44abb7:	ret    
  44abb8:	int3   
  44abb9:	int3   
  44abba:	int3   
  44abbb:	int3   
  44abbc:	int3   
  44abbd:	int3   
  44abbe:	int3   
  44abbf:	int3   
  44abc0:	mov    QWORD PTR [rsp+0x18],r8
  44abc5:	sub    rsp,0x68
  44abc9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
  44abd2:	mov    QWORD PTR [rsp+0x60],rbx
  44abd7:	mov    QWORD PTR [rsp+0x58],rbp
  44abdc:	mov    QWORD PTR [rsp+0x50],rsi
  44abe1:	mov    QWORD PTR [rsp+0x48],rdi
  44abe6:	mov    QWORD PTR [rsp+0x40],r12
  44abeb:	mov    rbx,r9
  44abee:	mov    rbp,rdx
  44abf1:	mov    r12,rcx
  44abf4:	mov    ecx,0x40
  44abf9:	call   0x402130
  44abfe:	mov    rdi,rax
  44ac01:	test   rax,rax
  44ac04:	je     0x44ac44
  44ac06:	xor    esi,esi
  44ac08:	mov    DWORD PTR [rax+0x20],esi
  44ac0b:	lea    rax,[rip+0x5956]        # 0x450568
  44ac12:	mov    QWORD PTR [rdi],rax
  44ac15:	lea    rax,[rip+0x5924]        # 0x450540
  44ac1c:	mov    QWORD PTR [rdi+0x8],rax
  44ac20:	lea    rax,[rip+0x58f9]        # 0x450520
  44ac27:	mov    QWORD PTR [rdi+0x10],rax
  44ac2b:	lea    rax,[rip+0x58ce]        # 0x450500
  44ac32:	mov    QWORD PTR [rdi+0x18],rax
  44ac36:	mov    QWORD PTR [rdi+0x28],rsi
  44ac3a:	mov    QWORD PTR [rdi+0x30],rsi
  44ac3e:	mov    QWORD PTR [rdi+0x38],rsi
  44ac42:	jmp    0x44ac49
  44ac44:	xor    esi,esi
  44ac46:	mov    rdi,rsi
  44ac49:	mov    QWORD PTR [rsp+0x38],rdi
  44ac4e:	test   rdi,rdi
  44ac51:	je     0x44ac5d
  44ac53:	mov    rax,QWORD PTR [rdi]
  44ac56:	mov    rcx,rdi
  44ac59:	call   QWORD PTR [rax+0x8]
  44ac5c:	nop
  44ac5d:	mov    rax,QWORD PTR [rdi]
  44ac60:	mov    QWORD PTR [rsp+0x28],rbx
  44ac65:	lea    rcx,[rsp+0x80]
  44ac6d:	mov    QWORD PTR [rsp+0x20],rcx
  44ac72:	xor    r9d,r9d
  44ac75:	mov    r8,rbp
  44ac78:	mov    rdx,r12
  44ac7b:	mov    rcx,rdi
  44ac7e:	call   QWORD PTR [rax+0x18]
  44ac81:	mov    ebx,eax
  44ac83:	test   eax,eax
  44ac85:	je     0x44ac94
  44ac87:	mov    rdx,QWORD PTR [rdi]
  44ac8a:	mov    rcx,rdi
  44ac8d:	call   QWORD PTR [rdx+0x10]
  44ac90:	mov    eax,ebx
  44ac92:	jmp    0x44acb3
  44ac94:	mov    ebx,0x80004005
  44ac99:	mov    rcx,QWORD PTR [rsp+0x80]
  44aca1:	cmp    QWORD PTR [rdi+0x38],rcx
  44aca5:	cmove  ebx,esi
  44aca8:	mov    rdx,QWORD PTR [rdi]
  44acab:	mov    rcx,rdi
  44acae:	call   QWORD PTR [rdx+0x10]
  44acb1:	mov    eax,ebx
  44acb3:	mov    rbx,QWORD PTR [rsp+0x60]
  44acb8:	mov    rbp,QWORD PTR [rsp+0x58]
  44acbd:	mov    rsi,QWORD PTR [rsp+0x50]
  44acc2:	mov    rdi,QWORD PTR [rsp+0x48]
  44acc7:	mov    r12,QWORD PTR [rsp+0x40]
  44accc:	add    rsp,0x68
  44acd0:	ret    
  44acd1:	int3   
  44acd2:	int3   
  44acd3:	int3   
  44acd4:	int3   
  44acd5:	int3   
  44acd6:	int3   
  44acd7:	int3   
  44acd8:	int3   
  44acd9:	int3   
  44acda:	int3   
  44acdb:	int3   
  44acdc:	int3   
  44acdd:	int3   
  44acde:	int3   
  44acdf:	int3   
  44ace0:	rex.W push rbp
  44ace2:	sub    rsp,0x20
  44ace6:	mov    rbp,rdx
  44ace9:	lea    rcx,[rbp+0x38]
  44aced:	call   0x4176b4
  44acf2:	add    rsp,0x20
  44acf6:	pop    rbp
  44acf7:	ret    
  44acf8:	int3   
  44acf9:	int3   
  44acfa:	int3   
  44acfb:	int3   
  44acfc:	int3   
  44acfd:	int3   
  44acfe:	int3   
  44acff:	int3   
  44ad00:	test   rcx,rcx
  44ad03:	jne    0x44ad08
  44ad05:	xor    eax,eax
  44ad07:	ret    
  44ad08:	mov    rdx,rcx
  44ad0b:	mov    r9d,0x4
  44ad11:	mov    r8d,0x1000
  44ad17:	xor    ecx,ecx
  44ad19:	rex.W jmp QWORD PTR [rip+0x2328]        # 0x44d048
  44ad20:	sub    rsp,0x28
  44ad24:	test   rcx,rcx
  44ad27:	je     0x44ad37
  44ad29:	xor    edx,edx
  44ad2b:	mov    r8d,0x8000
  44ad31:	call   QWORD PTR [rip+0x2319]        # 0x44d050
  44ad37:	add    rsp,0x28
  44ad3b:	ret    
  44ad3c:	int3   
  44ad3d:	int3   
  44ad3e:	int3   
  44ad3f:	int3   
  44ad40:	sub    rsp,0x28
  44ad44:	lea    rcx,[rip+0x2d0d]        # 0x44da58
  44ad4b:	call   QWORD PTR [rip+0x24c7]        # 0x44d218
  44ad51:	lea    rdx,[rip+0xa058]        # 0x454db0
  44ad58:	mov    rcx,rax
  44ad5b:	call   QWORD PTR [rip+0x24af]        # 0x44d210
  44ad61:	test   rax,rax
  44ad64:	je     0x44ad86
  44ad66:	call   rax
  44ad68:	test   rax,rax
  44ad6b:	je     0x44ad86
  44ad6d:	lea    rcx,[rax-0x1]
  44ad71:	test   rax,rcx
  44ad74:	mov    rcx,QWORD PTR [rip+0x1e1fd]        # 0x468f78
  44ad7b:	cmove  rcx,rax
  44ad7f:	mov    QWORD PTR [rip+0x1e1f2],rcx        # 0x468f78
  44ad86:	add    rsp,0x28
  44ad8a:	ret    
  44ad8b:	int3   
  44ad8c:	int3   
  44ad8d:	int3   
  44ad8e:	int3   
  44ad8f:	int3   
  44ad90:	test   rdx,rdx
  44ad93:	jne    0x44ad98
  44ad95:	xor    eax,eax
  44ad97:	ret    
  44ad98:	mov    rcx,rdx
  44ad9b:	rex.W jmp QWORD PTR [rip+0x25fe]        # 0x44d3a0
  44ada2:	int3   
  44ada3:	int3   
  44ada4:	int3   
  44ada5:	int3   
  44ada6:	int3   
  44ada7:	int3   
  44ada8:	int3   
  44ada9:	int3   
  44adaa:	int3   
  44adab:	int3   
  44adac:	int3   
  44adad:	int3   
  44adae:	int3   
  44adaf:	int3   
  44adb0:	mov    rcx,rdx
  44adb3:	rex.W jmp QWORD PTR [rip+0x25d6]        # 0x44d390
  44adba:	int3   
  44adbb:	int3   
  44adbc:	int3   
  44adbd:	int3   
  44adbe:	int3   
  44adbf:	int3   
  44adc0:	rex.W push rbx
  44adc2:	sub    rsp,0x20
  44adc6:	test   rdx,rdx
  44adc9:	mov    rbx,rdx
  44adcc:	jne    0x44add6
  44adce:	xor    eax,eax
  44add0:	add    rsp,0x20
  44add4:	pop    rbx
  44add5:	ret    
  44add6:	mov    rax,QWORD PTR [rip+0x1e19b]        # 0x468f78
  44addd:	test   rax,rax
  44ade0:	je     0x44ae18
  44ade2:	cmp    rax,0x40000000
  44ade8:	ja     0x44ae18
  44adea:	cmp    rdx,0x40000
  44adf1:	jb     0x44ae18
  44adf3:	lea    rdx,[rax+rdx*1-0x1]
  44adf8:	xor    ecx,ecx
  44adfa:	dec    rax
  44adfd:	not    rax
  44ae00:	lea    r9d,[rcx+0x4]
  44ae04:	mov    r8d,0x20001000
  44ae0a:	and    rdx,rax
  44ae0d:	call   QWORD PTR [rip+0x2235]        # 0x44d048
  44ae13:	test   rax,rax
  44ae16:	jne    0x44ae2f
  44ae18:	mov    r9d,0x4
  44ae1e:	mov    r8d,0x1000
  44ae24:	mov    rdx,rbx
  44ae27:	xor    ecx,ecx
  44ae29:	call   QWORD PTR [rip+0x2219]        # 0x44d048
  44ae2f:	add    rsp,0x20
  44ae33:	pop    rbx
  44ae34:	ret    
  44ae35:	int3   
  44ae36:	int3   
  44ae37:	int3   
  44ae38:	int3   
  44ae39:	int3   
  44ae3a:	int3   
  44ae3b:	int3   
  44ae3c:	int3   
  44ae3d:	int3   
  44ae3e:	int3   
  44ae3f:	int3   
  44ae40:	sub    rsp,0x28
  44ae44:	test   rdx,rdx
  44ae47:	mov    rax,rdx
  44ae4a:	je     0x44ae5d
  44ae4c:	xor    edx,edx
  44ae4e:	mov    r8d,0x8000
  44ae54:	mov    rcx,rax
  44ae57:	call   QWORD PTR [rip+0x21f3]        # 0x44d050
  44ae5d:	add    rsp,0x28
  44ae61:	ret    
  44ae62:	int3   
  44ae63:	int3   
  44ae64:	int3   
  44ae65:	int3   
  44ae66:	int3   
  44ae67:	int3   
  44ae68:	int3   
  44ae69:	int3   
  44ae6a:	int3   
  44ae6b:	int3   
  44ae6c:	int3   
  44ae6d:	int3   
  44ae6e:	int3   
  44ae6f:	int3   
  44ae70:	rex.W push rbx
  44ae72:	mov    eax,ecx
  44ae74:	mov    r10,rdx
  44ae77:	cpuid  
  44ae79:	mov    DWORD PTR [r10],eax
  44ae7c:	mov    rax,QWORD PTR [rsp+0x30]
  44ae81:	mov    DWORD PTR [r8],ebx
  44ae84:	mov    DWORD PTR [r9],ecx
  44ae87:	mov    DWORD PTR [rax],edx
  44ae89:	pop    rbx
  44ae8a:	ret    
  44ae8b:	int3   
  44ae8c:	int3   
  44ae8d:	int3   
  44ae8e:	int3   
  44ae8f:	int3   
  44ae90:	rex.W push rbx
  44ae92:	mov    r8,rcx
  44ae95:	xor    eax,eax
  44ae97:	cpuid  
  44ae99:	mov    DWORD PTR [r8],eax
  44ae9c:	mov    eax,0x1
  44aea1:	mov    DWORD PTR [r8+0x4],ebx
  44aea5:	mov    DWORD PTR [r8+0xc],ecx
  44aea9:	mov    DWORD PTR [r8+0x8],edx
  44aead:	cpuid  
  44aeaf:	mov    DWORD PTR [r8+0x10],eax
  44aeb3:	mov    eax,0x1
  44aeb8:	mov    DWORD PTR [r8+0x14],ebx
  44aebc:	mov    DWORD PTR [r8+0x18],ecx
  44aec0:	mov    DWORD PTR [r8+0x1c],edx
  44aec4:	pop    rbx
  44aec5:	ret    
  44aec6:	int3   
  44aec7:	int3   
  44aec8:	int3   
  44aec9:	int3   
  44aeca:	int3   
  44aecb:	int3   
  44aecc:	int3   
  44aecd:	int3   
  44aece:	int3   
  44aecf:	int3   
  44aed0:	sub    rsp,0x18
  44aed4:	mov    QWORD PTR [rsp+0x30],rbx
  44aed9:	xor    eax,eax
  44aedb:	mov    QWORD PTR [rsp+0x38],rdi
  44aee0:	cpuid  
  44aee2:	mov    r10d,ebx
  44aee5:	mov    DWORD PTR [rsp],eax
  44aee8:	mov    r11d,ecx
  44aeeb:	mov    eax,0x1
  44aef0:	mov    edi,edx
  44aef2:	cpuid  
  44aef4:	mov    DWORD PTR [rsp+0x4],ebx
  44aef8:	mov    ebx,eax
  44aefa:	mov    DWORD PTR [rsp+0x8],ecx
  44aefe:	shr    ebx,0x8
  44af01:	mov    ecx,eax
  44af03:	and    eax,0xf0
  44af08:	mov    r9d,ebx
  44af0b:	and    ebx,0xf00
  44af11:	and    ecx,0xf00
  44af17:	and    r9d,0xff000
  44af1e:	or     ebx,eax
  44af20:	mov    DWORD PTR [rsp+0xc],edx
  44af24:	or     r9d,ecx
  44af27:	shr    ebx,0x4
  44af2a:	lea    rax,[rip+0x9e9f]        # 0x454dd0
  44af31:	shr    r9d,0x8
  44af35:	xor    r8d,r8d
  44af38:	mov    edx,r8d
  44af3b:	xchg   ax,ax
  44af3d:	data16 xchg ax,ax
  44af40:	cmp    DWORD PTR [rax-0x8],r10d
  44af44:	jne    0x44af50
  44af46:	cmp    DWORD PTR [rax-0x4],edi
  44af49:	jne    0x44af50
  44af4b:	cmp    DWORD PTR [rax],r11d
  44af4e:	je     0x44af60
  44af50:	inc    edx
  44af52:	add    rax,0xc
  44af56:	cmp    edx,0x3
  44af59:	jb     0x44af40
  44af5b:	mov    edx,0xffffffff
  44af60:	test   edx,edx
  44af62:	mov    rdi,QWORD PTR [rsp+0x38]
  44af67:	je     0x44afba
  44af69:	dec    edx
  44af6b:	je     0x44afa4
  44af6d:	dec    edx
  44af6f:	je     0x44af80
  44af71:	mov    eax,0x1
  44af76:	mov    rbx,QWORD PTR [rsp+0x30]
  44af7b:	add    rsp,0x18
  44af7f:	ret    
  44af80:	cmp    r9d,0x6
  44af84:	jb     0x44afdf
  44af86:	cmp    r9d,0x6
  44af8a:	jne    0x44afe5
  44af8c:	cmp    ebx,0xf
  44af8f:	jae    0x44afe5
  44af91:	mov    r8d,0x1
  44af97:	mov    eax,r8d
  44af9a:	mov    rbx,QWORD PTR [rsp+0x30]
  44af9f:	add    rsp,0x18
  44afa3:	ret    
  44afa4:	cmp    r9d,0x5
  44afa8:	jb     0x44afdf
  44afaa:	cmp    r9d,0x5
  44afae:	jne    0x44afe5
  44afb0:	cmp    ebx,0x6
  44afb3:	jb     0x44afdf
  44afb5:	cmp    ebx,0xa
  44afb8:	jmp    0x44afdd
  44afba:	cmp    r9d,0x6
  44afbe:	jb     0x44afdf
  44afc0:	cmp    r9d,0x6
  44afc4:	jne    0x44afe5
  44afc6:	cmp    ebx,0x1c
  44afc9:	je     0x44afdf
  44afcb:	cmp    ebx,0x26
  44afce:	je     0x44afdf
  44afd0:	cmp    ebx,0x27
  44afd3:	je     0x44afdf
  44afd5:	cmp    ebx,0x35
  44afd8:	je     0x44afdf
  44afda:	cmp    ebx,0x36
  44afdd:	jne    0x44afe5
  44afdf:	mov    r8d,0x1
  44afe5:	mov    eax,r8d
  44afe8:	mov    rbx,QWORD PTR [rsp+0x30]
  44afed:	add    rsp,0x18
  44aff1:	ret    
  44aff2:	int3   
  44aff3:	int3   
  44aff4:	int3   
  44aff5:	int3   
  44aff6:	int3   
  44aff7:	int3   
  44aff8:	int3   
  44aff9:	int3   
  44affa:	int3   
  44affb:	int3   
  44affc:	int3   
  44affd:	int3   
  44affe:	int3   
  44afff:	int3   
  44b000:	rex.W push rbx
  44b002:	sub    rsp,0x20
  44b006:	mov    rbx,rcx
  44b009:	mov    rcx,QWORD PTR [rcx]
  44b00c:	test   rcx,rcx
  44b00f:	je     0x44b033
  44b011:	call   QWORD PTR [rip+0x21c9]        # 0x44d1e0
  44b017:	test   eax,eax
  44b019:	jne    0x44b033
  44b01b:	call   QWORD PTR [rip+0x217f]        # 0x44d1a0
  44b021:	mov    ecx,0x1
  44b026:	test   eax,eax
  44b028:	cmovne ecx,eax
  44b02b:	mov    eax,ecx
  44b02d:	add    rsp,0x20
  44b031:	pop    rbx
  44b032:	ret    
  44b033:	mov    QWORD PTR [rbx],0x0
  44b03a:	xor    eax,eax
  44b03c:	add    rsp,0x20
  44b040:	pop    rbx
  44b041:	ret    
  44b042:	int3   
  44b043:	int3   
  44b044:	int3   
  44b045:	int3   
  44b046:	int3   
  44b047:	int3   
  44b048:	int3   
  44b049:	int3   
  44b04a:	int3   
  44b04b:	int3   
  44b04c:	int3   
  44b04d:	int3   
  44b04e:	int3   
  44b04f:	int3   
  44b050:	mov    edx,0xffffffff
  44b055:	rex.W jmp QWORD PTR [rip+0x1ffc]        # 0x44d058
  44b05c:	int3   
  44b05d:	int3   
  44b05e:	int3   
  44b05f:	int3   
  44b060:	rex.W push rbx
  44b062:	sub    rsp,0x30
  44b066:	lea    rax,[rsp+0x40]
  44b06b:	mov    r9,r8
  44b06e:	mov    rbx,rcx
  44b071:	mov    r8,rdx
  44b074:	mov    QWORD PTR [rsp+0x28],rax
  44b079:	xor    ecx,ecx
  44b07b:	xor    edx,edx
  44b07d:	mov    DWORD PTR [rsp+0x20],0x0
  44b085:	call   QWORD PTR [rip+0x227d]        # 0x44d308
  44b08b:	test   rax,rax
  44b08e:	mov    QWORD PTR [rbx],rax
  44b091:	je     0x44b09b
  44b093:	xor    eax,eax
  44b095:	add    rsp,0x30
  44b099:	pop    rbx
  44b09a:	ret    
  44b09b:	call   QWORD PTR [rip+0x20ff]        # 0x44d1a0
  44b0a1:	mov    ecx,0x1
  44b0a6:	test   eax,eax
  44b0a8:	cmovne ecx,eax
  44b0ab:	mov    eax,ecx
  44b0ad:	add    rsp,0x30
  44b0b1:	pop    rbx
  44b0b2:	ret    
  44b0b3:	int3   
  44b0b4:	int3   
  44b0b5:	int3   
  44b0b6:	int3   
  44b0b7:	int3   
  44b0b8:	int3   
  44b0b9:	int3   
  44b0ba:	int3   
  44b0bb:	int3   
  44b0bc:	int3   
  44b0bd:	int3   
  44b0be:	int3   
  44b0bf:	int3   
  44b0c0:	sub    rsp,0x28
  44b0c4:	mov    rcx,QWORD PTR [rcx]
  44b0c7:	call   QWORD PTR [rip+0x1f93]        # 0x44d060
  44b0cd:	test   eax,eax
  44b0cf:	je     0x44b0d8
  44b0d1:	xor    eax,eax
  44b0d3:	add    rsp,0x28
  44b0d7:	ret    
  44b0d8:	call   QWORD PTR [rip+0x20c2]        # 0x44d1a0
  44b0de:	mov    ecx,0x1
  44b0e3:	test   eax,eax
  44b0e5:	cmovne ecx,eax
  44b0e8:	mov    eax,ecx
  44b0ea:	add    rsp,0x28
  44b0ee:	ret    
  44b0ef:	int3   
  44b0f0:	sub    rsp,0x28
  44b0f4:	call   QWORD PTR [rip+0x1f6e]        # 0x44d068
  44b0fa:	nop
  44b0fb:	xor    eax,eax
  44b0fd:	jmp    0x44b104
  44b0ff:	mov    eax,0x1
  44b104:	add    rsp,0x28
  44b108:	ret    
  44b109:	int3   
  44b10a:	int3   
  44b10b:	int3   
  44b10c:	int3   
  44b10d:	int3   
  44b10e:	int3   
  44b10f:	int3   
  44b110:	lea    r9,[rip+0x1de89]        # 0x468fa0
  44b117:	rex.W jmp QWORD PTR [rip+0x1fe82]        # 0x46afa0
  44b11e:	int3   
  44b11f:	int3   
  44b120:	sub    rsp,0x28
  44b124:	mov    r8,rdx
  44b127:	mov    rdx,rcx
  44b12a:	lea    r9,[rip+0x1de6f]        # 0x468fa0
  44b131:	mov    ecx,0xffffffff
  44b136:	call   QWORD PTR [rip+0x1fe64]        # 0x46afa0
  44b13c:	not    eax
  44b13e:	add    rsp,0x28
  44b142:	ret    
  44b143:	int3   
  44b144:	int3   
  44b145:	int3   
  44b146:	int3   
  44b147:	int3   
  44b148:	int3   
  44b149:	int3   
  44b14a:	int3   
  44b14b:	int3   
  44b14c:	int3   
  44b14d:	int3   
  44b14e:	int3   
  44b14f:	int3   
  44b150:	rex.W push rbx
  44b152:	sub    rsp,0x20
  44b156:	lea    r10,[rip+0x1de43]        # 0x468fa0
  44b15d:	xor    edx,edx
  44b15f:	mov    r8,r10
  44b162:	mov    ecx,edx
  44b164:	mov    eax,edx
  44b166:	inc    edx
  44b168:	shr    eax,1
  44b16a:	and    ecx,0x1
  44b16d:	add    r8,0x4
  44b171:	dec    ecx
  44b173:	not    ecx
  44b175:	and    ecx,0xedb88320
  44b17b:	xor    ecx,eax
  44b17d:	mov    eax,ecx
  44b17f:	shr    ecx,1
  44b181:	and    eax,0x1
  44b184:	dec    eax
  44b186:	not    eax
  44b188:	and    eax,0xedb88320
  44b18d:	xor    eax,ecx
  44b18f:	mov    ecx,eax
  44b191:	shr    eax,1
  44b193:	and    ecx,0x1
  44b196:	dec    ecx
  44b198:	not    ecx
  44b19a:	and    ecx,0xedb88320
  44b1a0:	xor    ecx,eax
  44b1a2:	mov    eax,ecx
  44b1a4:	shr    ecx,1
  44b1a6:	and    eax,0x1
  44b1a9:	dec    eax
  44b1ab:	not    eax
  44b1ad:	and    eax,0xedb88320
  44b1b2:	xor    eax,ecx
  44b1b4:	mov    ecx,eax
  44b1b6:	shr    eax,1
  44b1b8:	and    ecx,0x1
  44b1bb:	dec    ecx
  44b1bd:	not    ecx
  44b1bf:	and    ecx,0xedb88320
  44b1c5:	xor    ecx,eax
  44b1c7:	mov    eax,ecx
  44b1c9:	shr    ecx,1
  44b1cb:	and    eax,0x1
  44b1ce:	dec    eax
  44b1d0:	not    eax
  44b1d2:	and    eax,0xedb88320
  44b1d7:	xor    eax,ecx
  44b1d9:	mov    ecx,eax
  44b1db:	shr    eax,1
  44b1dd:	and    ecx,0x1
  44b1e0:	dec    ecx
  44b1e2:	not    ecx
  44b1e4:	and    ecx,0xedb88320
  44b1ea:	xor    ecx,eax
  44b1ec:	mov    eax,ecx
  44b1ee:	shr    ecx,1
  44b1f0:	and    eax,0x1
  44b1f3:	dec    eax
  44b1f5:	not    eax
  44b1f7:	and    eax,0xedb88320
  44b1fc:	xor    eax,ecx
  44b1fe:	cmp    edx,0x100
  44b204:	mov    DWORD PTR [r8-0x4],eax
  44b208:	jb     0x44b162
  44b20e:	mov    eax,0x800
  44b213:	movsxd rcx,edx
  44b216:	cmp    edx,eax
  44b218:	jae    0x44b250
  44b21a:	sub    eax,edx
  44b21c:	lea    r8,[r10+rcx*4]
  44b220:	mov    r9d,eax
  44b223:	nop
  44b224:	data16 data16 xchg ax,ax
  44b228:	data16 data16 xchg ax,ax
  44b22c:	data16 data16 xchg ax,ax
  44b230:	mov    edx,DWORD PTR [r8-0x400]
  44b237:	add    r8,0x4
  44b23b:	movzx  ecx,dl
  44b23e:	shr    edx,0x8
  44b241:	mov    eax,DWORD PTR [r10+rcx*4]
  44b245:	xor    eax,edx
  44b247:	dec    r9
  44b24a:	mov    DWORD PTR [r8-0x4],eax
  44b24e:	jne    0x44b230
  44b250:	lea    rax,[rip+0x139]        # 0x44b390
  44b257:	lea    rbx,[rip+0x42]        # 0x44b2a0
  44b25e:	mov    QWORD PTR [rip+0x1dd33],rax        # 0x468f98
  44b265:	mov    QWORD PTR [rip+0x1fd34],rax        # 0x46afa0
  44b26c:	mov    QWORD PTR [rip+0x1dd1d],rbx        # 0x468f90
  44b273:	call   0x44aed0
  44b278:	mov    rcx,QWORD PTR [rip+0x1fd21]        # 0x46afa0
  44b27f:	test   eax,eax
  44b281:	cmove  rcx,rbx
  44b285:	mov    QWORD PTR [rip+0x1fd14],rcx        # 0x46afa0
  44b28c:	add    rsp,0x20
  44b290:	pop    rbx
  44b291:	ret    
  44b292:	int3   
  44b293:	int3   
  44b294:	int3   
  44b295:	int3   
  44b296:	int3   
  44b297:	int3   
  44b298:	int3   
  44b299:	int3   
  44b29a:	int3   
  44b29b:	int3   
  44b29c:	int3   
  44b29d:	int3   
  44b29e:	int3   
  44b29f:	int3   
  44b2a0:	push   rbx
  44b2a1:	push   rbp
  44b2a2:	push   rsi
  44b2a3:	push   rdi
  44b2a4:	mov    eax,ecx
  44b2a6:	mov    rdi,r8
  44b2a9:	mov    rbp,r9
  44b2ac:	test   rdi,rdi
  44b2af:	je     0x44b36f
  44b2b5:	test   rdx,0x7
  44b2bc:	je     0x44b2d5
  44b2be:	movzx  esi,BYTE PTR [rdx]
  44b2c1:	inc    rdx
  44b2c4:	movzx  ebx,al
  44b2c7:	xor    esi,ebx
  44b2c9:	shr    eax,0x8
  44b2cc:	xor    eax,DWORD PTR [rbp+rsi*4+0x0]
  44b2d0:	dec    rdi
  44b2d3:	jne    0x44b2b5
  44b2d5:	cmp    rdi,0x10
  44b2d9:	jb     0x44b36f
  44b2df:	add    rdi,rdx
  44b2e2:	mov    r8,rdi
  44b2e5:	sub    rdi,0x8
  44b2e9:	and    rdi,0xfffffffffffffff8
  44b2ed:	sub    rdx,rdi
  44b2f0:	xor    eax,DWORD PTR [rdx+rdi*1]
  44b2f3:	mov    ecx,DWORD PTR [rdx+rdi*1+0x4]
  44b2f7:	nop    WORD PTR [rax+rax*1+0x0]
  44b300:	mov    esi,DWORD PTR [rdx+rdi*1+0x8]
  44b304:	movzx  ebx,cl
  44b307:	xor    esi,DWORD PTR [rbp+rbx*4+0xc00]
  44b30e:	movzx  ebx,ch
  44b311:	xor    esi,DWORD PTR [rbp+rbx*4+0x800]
  44b318:	shr    ecx,0x10
  44b31b:	movzx  ebx,cl
  44b31e:	movzx  ecx,ch
  44b321:	xor    esi,DWORD PTR [rbp+rbx*4+0x400]
  44b328:	movzx  ebx,al
  44b32b:	xor    esi,DWORD PTR [rbp+rcx*4+0x0]
  44b32f:	mov    ecx,DWORD PTR [rdx+rdi*1+0xc]
  44b333:	xor    esi,DWORD PTR [rbp+rbx*4+0x1c00]
  44b33a:	movzx  ebx,ah
  44b33d:	shr    eax,0x10
  44b340:	xor    esi,DWORD PTR [rbp+rbx*4+0x1800]
  44b347:	movzx  ebx,al
  44b34a:	xor    esi,DWORD PTR [rbp+rbx*4+0x1400]
  44b351:	movzx  ebx,ah
  44b354:	mov    eax,DWORD PTR [rbp+rbx*4+0x1000]
  44b35b:	xor    eax,esi
  44b35d:	add    rdx,0x8
  44b361:	jne    0x44b300
  44b363:	xor    eax,DWORD PTR [rdx+rdi*1]
  44b366:	mov    rdx,rdi
  44b369:	mov    rdi,r8
  44b36c:	sub    rdi,rdx
  44b36f:	test   rdi,rdi
  44b372:	je     0x44b38b
  44b374:	movzx  esi,BYTE PTR [rdx]
  44b377:	inc    rdx
  44b37a:	movzx  ebx,al
  44b37d:	xor    esi,ebx
  44b37f:	shr    eax,0x8
  44b382:	xor    eax,DWORD PTR [rbp+rsi*4+0x0]
  44b386:	dec    rdi
  44b389:	jmp    0x44b36f
  44b38b:	pop    rdi
  44b38c:	pop    rsi
  44b38d:	pop    rbp
  44b38e:	pop    rbx
  44b38f:	ret    
  44b390:	push   rbx
  44b391:	push   rbp
  44b392:	push   rsi
  44b393:	push   rdi
  44b394:	mov    eax,ecx
  44b396:	mov    rdi,r8
  44b399:	mov    rbp,r9
  44b39c:	test   rdi,rdi
  44b39f:	je     0x44b45f
  44b3a5:	test   rdx,0x7
  44b3ac:	je     0x44b3c5
  44b3ae:	movzx  esi,BYTE PTR [rdx]
  44b3b1:	inc    rdx
  44b3b4:	movzx  ebx,al
  44b3b7:	xor    esi,ebx
  44b3b9:	shr    eax,0x8
  44b3bc:	xor    eax,DWORD PTR [rbp+rsi*4+0x0]
  44b3c0:	dec    rdi
  44b3c3:	jne    0x44b3a5
  44b3c5:	cmp    rdi,0x10
  44b3c9:	jb     0x44b45f
  44b3cf:	add    rdi,rdx
  44b3d2:	mov    r8,rdi
  44b3d5:	sub    rdi,0x8
  44b3d9:	and    rdi,0xfffffffffffffff8
  44b3dd:	sub    rdx,rdi
  44b3e0:	xor    eax,DWORD PTR [rdx+rdi*1]
  44b3e3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
  44b3f0:	movzx  ecx,al
  44b3f3:	movzx  ebx,ah
  44b3f6:	shr    eax,0x10
  44b3f9:	movzx  esi,ah
  44b3fc:	and    eax,0xff
  44b401:	mov    ecx,DWORD PTR [rbp+rcx*4+0xc00]
  44b408:	xor    ecx,DWORD PTR [rdx+rdi*1+0x4]
  44b40c:	xor    ecx,DWORD PTR [rbp+rbx*4+0x800]
  44b413:	xor    ecx,DWORD PTR [rbp+rsi*4+0x0]
  44b417:	xor    ecx,DWORD PTR [rbp+rax*4+0x400]
  44b41e:	movzx  eax,cl
  44b421:	movzx  ebx,ch
  44b424:	shr    ecx,0x10
  44b427:	movzx  esi,ch
  44b42a:	and    ecx,0xff
  44b430:	mov    eax,DWORD PTR [rbp+rax*4+0xc00]
  44b437:	xor    eax,DWORD PTR [rdx+rdi*1+0x8]
  44b43b:	xor    eax,DWORD PTR [rbp+rbx*4+0x800]
  44b442:	xor    eax,DWORD PTR [rbp+rsi*4+0x0]
  44b446:	xor    eax,DWORD PTR [rbp+rcx*4+0x400]
  44b44d:	add    rdx,0x8
  44b451:	jne    0x44b3f0
  44b453:	xor    eax,DWORD PTR [rdx+rdi*1]
  44b456:	mov    rdx,rdi
  44b459:	mov    rdi,r8
  44b45c:	sub    rdi,rdx
  44b45f:	test   rdi,rdi
  44b462:	je     0x44b47b
  44b464:	movzx  esi,BYTE PTR [rdx]
  44b467:	inc    rdx
  44b46a:	movzx  ebx,al
  44b46d:	xor    esi,ebx
  44b46f:	shr    eax,0x8
  44b472:	xor    eax,DWORD PTR [rbp+rsi*4+0x0]
  44b476:	dec    rdi
  44b479:	jmp    0x44b45f
  44b47b:	pop    rdi
  44b47c:	pop    rsi
  44b47d:	pop    rbp
  44b47e:	pop    rbx
  44b47f:	ret    
  44b480:	jmp    QWORD PTR [rip+0x1f2a]        # 0x44d3b0
  44b486:	jmp    QWORD PTR [rip+0x1f1c]        # 0x44d3a8
  44b48c:	int3   
  44b48d:	int3   
  44b48e:	int3   
  44b48f:	int3   
  44b490:	mov    QWORD PTR [rsp+0x10],rdx
  44b495:	mov    QWORD PTR [rsp+0x8],rcx
  44b49a:	mov    rax,rsp
  44b49d:	sub    rsp,0x58
  44b4a1:	mov    QWORD PTR [rax-0x8],rbx
  44b4a5:	mov    QWORD PTR [rax-0x10],rsi
  44b4a9:	mov    QWORD PTR [rax-0x18],rdi
  44b4ad:	mov    QWORD PTR [rax-0x20],r12
  44b4b1:	mov    QWORD PTR [rax-0x28],r13
  44b4b5:	mov    r13,r9
  44b4b8:	mov    esi,r8d
  44b4bb:	mov    r12,rdx
  44b4be:	mov    rdi,rcx
  44b4c1:	xor    ebx,ebx
  44b4c3:	mov    DWORD PTR [rax-0x38],ebx
  44b4c6:	mov    DWORD PTR [rax-0x34],ebx
  44b4c9:	data16 xchg ax,ax
  44b4cc:	data16 data16 xchg ax,ax
  44b4d0:	cmp    ebx,esi
  44b4d2:	jge    0x44b4ea
  44b4d4:	mov    rcx,rdi
  44b4d7:	call   r13
  44b4da:	add    rdi,r12
  44b4dd:	mov    QWORD PTR [rsp+0x60],rdi
  44b4e2:	inc    ebx
  44b4e4:	mov    DWORD PTR [rsp+0x24],ebx
  44b4e8:	jmp    0x44b4d0
  44b4ea:	mov    DWORD PTR [rsp+0x20],0x1
  44b4f2:	mov    rbx,QWORD PTR [rsp+0x50]
  44b4f7:	mov    rsi,QWORD PTR [rsp+0x48]
  44b4fc:	mov    rdi,QWORD PTR [rsp+0x40]
  44b501:	mov    r12,QWORD PTR [rsp+0x38]
  44b506:	mov    r13,QWORD PTR [rsp+0x30]
  44b50b:	add    rsp,0x58
  44b50f:	ret    
  44b510:	rex.W push rbp
  44b512:	sub    rsp,0x20
  44b516:	mov    rbp,rdx
  44b519:	cmp    DWORD PTR [rbp+0x20],0x0
  44b51d:	jne    0x44b537
  44b51f:	mov    r9,QWORD PTR [rbp+0x80]
  44b526:	mov    r8d,DWORD PTR [rbp+0x24]
  44b52a:	mov    rdx,QWORD PTR [rbp+0x68]
  44b52e:	mov    rcx,QWORD PTR [rbp+0x60]
  44b532:	call   0x44b540
  44b537:	add    rsp,0x20
  44b53b:	pop    rbp
  44b53c:	ret    
  44b53d:	int3   
  44b53e:	int3   
  44b53f:	int3   
  44b540:	mov    DWORD PTR [rsp+0x18],r8d
  44b545:	mov    QWORD PTR [rsp+0x8],rcx
  44b54a:	sub    rsp,0x68
  44b54e:	mov    QWORD PTR [rsp+0x60],rbx
  44b553:	mov    QWORD PTR [rsp+0x58],rsi
  44b558:	mov    QWORD PTR [rsp+0x50],rdi
  44b55d:	mov    QWORD PTR [rsp+0x48],r12
  44b562:	mov    rsi,r9
  44b565:	mov    edi,r8d
  44b568:	mov    r12,rdx
  44b56b:	mov    rbx,rcx
  44b56e:	xchg   ax,ax
  44b570:	dec    edi
  44b572:	mov    DWORD PTR [rsp+0x80],edi
  44b579:	js     0x44b58a
  44b57b:	sub    rbx,r12
  44b57e:	mov    QWORD PTR [rsp+0x70],rbx
  44b583:	mov    rcx,rbx
  44b586:	call   rsi
  44b588:	jmp    0x44b570
  44b58a:	jmp    0x44b58c
  44b58c:	mov    rbx,QWORD PTR [rsp+0x60]
  44b591:	mov    rsi,QWORD PTR [rsp+0x58]
  44b596:	mov    rdi,QWORD PTR [rsp+0x50]
  44b59b:	mov    r12,QWORD PTR [rsp+0x48]
  44b5a0:	add    rsp,0x68
  44b5a4:	ret    
  44b5a5:	int3   
  44b5a6:	int3   
  44b5a7:	int3   
  44b5a8:	int3   
  44b5a9:	int3   
  44b5aa:	int3   
  44b5ab:	int3   
  44b5ac:	int3   
  44b5ad:	int3   
  44b5ae:	int3   
  44b5af:	int3   
  44b5b0:	rex.W push rbp
  44b5b2:	sub    rsp,0x20
  44b5b6:	mov    rbp,rdx
  44b5b9:	mov    QWORD PTR [rbp+0x38],rcx
  44b5bd:	mov    QWORD PTR [rbp+0x28],rcx
  44b5c1:	mov    rax,QWORD PTR [rbp+0x28]
  44b5c5:	mov    rcx,QWORD PTR [rax]
  44b5c8:	mov    QWORD PTR [rbp+0x30],rcx
  44b5cc:	mov    rax,QWORD PTR [rbp+0x30]
  44b5d0:	cmp    DWORD PTR [rax],0xe06d7363
  44b5d6:	je     0x44b5e4
  44b5d8:	mov    DWORD PTR [rbp+0x20],0x0
  44b5df:	mov    eax,DWORD PTR [rbp+0x20]
  44b5e2:	jmp    0x44b5e9
  44b5e4:	call   0x44b98c
  44b5e9:	add    rsp,0x20
  44b5ed:	pop    rbp
  44b5ee:	ret    
  44b5ef:	int3   
  44b5f0:	mov    QWORD PTR [rsp+0x20],r9
  44b5f5:	mov    DWORD PTR [rsp+0x18],r8d
  44b5fa:	mov    QWORD PTR [rsp+0x10],rdx
  44b5ff:	sub    rsp,0x58
  44b603:	mov    QWORD PTR [rsp+0x50],rbx
  44b608:	mov    QWORD PTR [rsp+0x48],rsi
  44b60d:	mov    QWORD PTR [rsp+0x40],rdi
  44b612:	mov    QWORD PTR [rsp+0x38],r12
  44b617:	mov    r12,r9
  44b61a:	movsxd rdi,r8d
  44b61d:	mov    rsi,rdx
  44b620:	mov    DWORD PTR [rsp+0x20],0x0
  44b628:	mov    rbx,rdi
  44b62b:	imul   rbx,rdx
  44b62f:	add    rbx,rcx
  44b632:	mov    QWORD PTR [rsp+0x60],rbx
  44b637:	dec    edi
  44b639:	mov    DWORD PTR [rsp+0x70],edi
  44b63d:	js     0x44b64f
  44b63f:	sub    rbx,rsi
  44b642:	mov    QWORD PTR [rsp+0x60],rbx
  44b647:	mov    rcx,rbx
  44b64a:	call   r12
  44b64d:	jmp    0x44b637
  44b64f:	mov    DWORD PTR [rsp+0x20],0x1
  44b657:	mov    rbx,QWORD PTR [rsp+0x50]
  44b65c:	mov    rsi,QWORD PTR [rsp+0x48]
  44b661:	mov    rdi,QWORD PTR [rsp+0x40]
  44b666:	mov    r12,QWORD PTR [rsp+0x38]
  44b66b:	add    rsp,0x58
  44b66f:	ret    
  44b670:	rex.W push rbp
  44b672:	sub    rsp,0x20
  44b676:	mov    rbp,rdx
  44b679:	cmp    DWORD PTR [rbp+0x20],0x0
  44b67d:	jne    0x44b694
  44b67f:	mov    r9,QWORD PTR [rbp+0x78]
  44b683:	mov    r8d,DWORD PTR [rbp+0x70]
  44b687:	mov    rdx,QWORD PTR [rbp+0x68]
  44b68b:	mov    rcx,QWORD PTR [rbp+0x60]
  44b68f:	call   0x44b540
  44b694:	add    rsp,0x20
  44b698:	pop    rbp
  44b699:	ret    
  44b69a:	int3   
  44b69b:	int3   
  44b69c:	int3   
  44b69d:	int3   
  44b69e:	int3   
  44b69f:	int3   
  44b6a0:	sub    rsp,0x28
  44b6a4:	test   dl,0x2
  44b6a7:	mov    QWORD PTR [rsp+0x38],rbx
  44b6ac:	mov    QWORD PTR [rsp+0x40],rsi
  44b6b1:	mov    esi,edx
  44b6b3:	mov    rbx,rcx
  44b6b6:	je     0x44b6f9
  44b6b8:	mov    r8d,DWORD PTR [rcx-0x8]
  44b6bc:	lea    r9,[rip+0x2cf]        # 0x44b992
  44b6c3:	mov    edx,0x18
  44b6c8:	mov    QWORD PTR [rsp+0x48],rdi
  44b6cd:	call   0x44b5f0
  44b6d2:	test   sil,0x1
  44b6d6:	je     0x44b6e1
  44b6d8:	lea    rcx,[rbx-0x8]
  44b6dc:	call   0x40215c
  44b6e1:	lea    rax,[rbx-0x8]
  44b6e5:	mov    rdi,QWORD PTR [rsp+0x48]
  44b6ea:	mov    rsi,QWORD PTR [rsp+0x40]
  44b6ef:	mov    rbx,QWORD PTR [rsp+0x38]
  44b6f4:	add    rsp,0x28
  44b6f8:	ret    
  44b6f9:	call   0x44b992
  44b6fe:	test   sil,0x1
  44b702:	je     0x44b70c
  44b704:	mov    rcx,rbx
  44b707:	call   0x40215c
  44b70c:	mov    rsi,QWORD PTR [rsp+0x40]
  44b711:	mov    rax,rbx
  44b714:	mov    rbx,QWORD PTR [rsp+0x38]
  44b719:	add    rsp,0x28
  44b71d:	ret    
  44b71e:	jmp    QWORD PTR [rip+0x1c74]        # 0x44d398
  44b724:	int3   
  44b725:	int3   
  44b726:	int3   
  44b727:	int3   
  44b728:	int3   
  44b729:	int3   
  44b72a:	int3   
  44b72b:	int3   
  44b72c:	int3   
  44b72d:	int3   
  44b72e:	int3   
  44b72f:	int3   
  44b730:	sub    rsp,0x28
  44b734:	cmp    QWORD PTR [rip+0x1f874],0xffffffffffffffff        # 0x46afb0
  44b73c:	jne    0x44b752
  44b73e:	call   QWORD PTR [rip+0x1b9c]        # 0x44d2e0
  44b744:	neg    rax
  44b747:	sbb    eax,eax
  44b749:	neg    eax
  44b74b:	dec    eax
  44b74d:	add    rsp,0x28
  44b751:	ret    
  44b752:	lea    r8,[rip+0x1f84f]        # 0x46afa8
  44b759:	lea    rdx,[rip+0x1f850]        # 0x46afb0
  44b760:	call   0x44b998
  44b765:	neg    rax
  44b768:	sbb    eax,eax
  44b76a:	neg    eax
  44b76c:	dec    eax
  44b76e:	add    rsp,0x28
  44b772:	ret    
  44b773:	int3   
  44b774:	jmp    QWORD PTR [rip+0x1bde]        # 0x44d358
  44b77a:	jmp    QWORD PTR [rip+0x1bd0]        # 0x44d350
  44b780:	jmp    QWORD PTR [rip+0x1baa]        # 0x44d330
  44b786:	jmp    QWORD PTR [rip+0x1b9c]        # 0x44d328
  44b78c:	jmp    QWORD PTR [rip+0x1b8e]        # 0x44d320
  44b792:	jmp    QWORD PTR [rip+0x1b80]        # 0x44d318
  44b798:	int3   
  44b799:	int3   
  44b79a:	int3   
  44b79b:	int3   
  44b79c:	int3   
  44b79d:	int3   
  44b79e:	int3   
  44b79f:	int3   
  44b7a0:	jmp    QWORD PTR [rip+0x1b5a]        # 0x44d300
  44b7a6:	int3   
  44b7a7:	int3   
  44b7a8:	int3   
  44b7a9:	int3   
  44b7aa:	int3   
  44b7ab:	int3   
  44b7ac:	int3   
  44b7ad:	int3   
  44b7ae:	int3   
  44b7af:	int3   
  44b7b0:	sub    rsp,0x58
  44b7b4:	mov    QWORD PTR [rsp+0x70],rbx
  44b7b9:	mov    QWORD PTR [rsp+0x78],rdi
  44b7be:	cmp    WORD PTR [rip+0xfffffffffffb4839],0x5a4d        # 0x400000
  44b7c7:	je     0x44b7d1
  44b7c9:	xor    ebx,ebx
  44b7cb:	mov    DWORD PTR [rsp+0x60],ebx
  44b7cf:	jmp    0x44b84d
  44b7d1:	movsxd rax,DWORD PTR [rip+0xfffffffffffb4864]        # 0x40003c
  44b7d8:	lea    rcx,[rip+0xfffffffffffb4821]        # 0x400000
  44b7df:	add    rax,rcx
  44b7e2:	cmp    DWORD PTR [rax],0x4550
  44b7e8:	je     0x44b7f2
  44b7ea:	xor    ebx,ebx
  44b7ec:	mov    DWORD PTR [rsp+0x60],ebx
  44b7f0:	jmp    0x44b84d
  44b7f2:	movzx  ecx,WORD PTR [rax+0x18]
  44b7f6:	cmp    ecx,0x10b
  44b7fc:	je     0x44b830
  44b7fe:	cmp    ecx,0x20b
  44b804:	je     0x44b80e
  44b806:	xor    ebx,ebx
  44b808:	mov    DWORD PTR [rsp+0x60],ebx
  44b80c:	jmp    0x44b84d
  44b80e:	cmp    DWORD PTR [rax+0x84],0xe
  44b815:	ja     0x44b81f
  44b817:	xor    ebx,ebx
  44b819:	mov    DWORD PTR [rsp+0x60],ebx
  44b81d:	jmp    0x44b84d
  44b81f:	xor    ebx,ebx
  44b821:	cmp    DWORD PTR [rax+0xf8],ebx
  44b827:	setne  bl
  44b82a:	mov    DWORD PTR [rsp+0x60],ebx
  44b82e:	jmp    0x44b84d
  44b830:	cmp    DWORD PTR [rax+0x74],0xe
  44b834:	ja     0x44b83e
  44b836:	xor    ebx,ebx
  44b838:	mov    DWORD PTR [rsp+0x60],ebx
  44b83c:	jmp    0x44b84d
  44b83e:	xor    ebx,ebx
  44b840:	cmp    DWORD PTR [rax+0xe8],ebx
  44b846:	setne  bl
  44b849:	mov    DWORD PTR [rsp+0x60],ebx
  44b84d:	mov    ecx,0x1
  44b852:	call   QWORD PTR [rip+0x1b98]        # 0x44d3f0
  44b858:	mov    QWORD PTR [rip+0x1f745],0xffffffffffffffff        # 0x46afa8
  44b863:	mov    QWORD PTR [rip+0x1f742],0xffffffffffffffff        # 0x46afb0
  44b86e:	mov    rcx,QWORD PTR [rip+0x1b73]        # 0x44d3e8
  44b875:	mov    eax,DWORD PTR [rip+0x1d711]        # 0x468f8c
  44b87b:	mov    DWORD PTR [rcx],eax
  44b87d:	mov    rcx,QWORD PTR [rip+0x1b5c]        # 0x44d3e0
  44b884:	mov    eax,DWORD PTR [rip+0x1d6fe]        # 0x468f88
  44b88a:	mov    DWORD PTR [rcx],eax
  44b88c:	call   0x44b9b0
  44b891:	cmp    DWORD PTR [rip+0x1d108],0x0        # 0x4689a0
  44b898:	jne    0x44b8a7
  44b89a:	lea    rcx,[rip+0x10f]        # 0x44b9b0
  44b8a1:	call   QWORD PTR [rip+0x1b31]        # 0x44d3d8
  44b8a7:	lea    rdx,[rip+0x1bba]        # 0x44d468
  44b8ae:	lea    rcx,[rip+0x1bab]        # 0x44d460
  44b8b5:	call   0x44b9a4
  44b8ba:	mov    r11d,DWORD PTR [rip+0x1d6c3]        # 0x468f84
  44b8c1:	mov    DWORD PTR [rsp+0x68],r11d
  44b8c6:	lea    rax,[rsp+0x68]
  44b8cb:	mov    QWORD PTR [rsp+0x20],rax
  44b8d0:	mov    r9d,DWORD PTR [rip+0x1d6a9]        # 0x468f80
  44b8d7:	lea    r8,[rsp+0x38]
  44b8dc:	lea    rdx,[rsp+0x40]
  44b8e1:	lea    rcx,[rsp+0x30]
  44b8e6:	call   QWORD PTR [rip+0x1adc]        # 0x44d3c8
  44b8ec:	lea    rdx,[rip+0x1b65]        # 0x44d458
  44b8f3:	lea    rcx,[rip+0x1b06]        # 0x44d400
  44b8fa:	call   0x44b9a4
  44b8ff:	mov    r11,QWORD PTR [rsp+0x38]
  44b904:	mov    rax,QWORD PTR [rip+0x1aad]        # 0x44d3b8
  44b90b:	mov    QWORD PTR [rax],r11
  44b90e:	mov    r8,QWORD PTR [rsp+0x38]
  44b913:	mov    rdx,QWORD PTR [rsp+0x40]
  44b918:	mov    ecx,DWORD PTR [rsp+0x30]
  44b91c:	call   0x448540
  44b921:	mov    edi,eax
  44b923:	mov    DWORD PTR [rsp+0x34],eax
  44b927:	test   ebx,ebx
  44b929:	jne    0x44b933
  44b92b:	mov    ecx,eax
  44b92d:	call   QWORD PTR [rip+0x1a8d]        # 0x44d3c0
  44b933:	call   QWORD PTR [rip+0x1a07]        # 0x44d340
  44b939:	jmp    0x44b954
  44b93b:	mov    edi,eax
  44b93d:	cmp    DWORD PTR [rsp+0x60],0x0
  44b942:	jne    0x44b94d
  44b944:	mov    ecx,eax
  44b946:	call   QWORD PTR [rip+0x197c]        # 0x44d2c8
  44b94c:	int3   
  44b94d:	call   QWORD PTR [rip+0x197d]        # 0x44d2d0
  44b953:	nop
  44b954:	mov    eax,edi
  44b956:	mov    rbx,QWORD PTR [rsp+0x70]
  44b95b:	mov    rdi,QWORD PTR [rsp+0x78]
  44b960:	add    rsp,0x58
  44b964:	ret    
  44b965:	int3   
  44b966:	int3   
  44b967:	int3   
  44b968:	int3   
  44b969:	int3   
  44b96a:	int3   
  44b96b:	int3   
  44b96c:	int3   
  44b96d:	int3   
  44b96e:	int3   
  44b96f:	int3   
  44b970:	rex.W push rbp
  44b972:	sub    rsp,0x30
  44b976:	mov    rbp,rdx
  44b979:	mov    rax,QWORD PTR [rcx]
  44b97c:	mov    rdx,rcx
  44b97f:	mov    ecx,DWORD PTR [rax]
  44b981:	call   0x44b99e
  44b986:	add    rsp,0x30
  44b98a:	pop    rbp
  44b98b:	ret    
  44b98c:	jmp    QWORD PTR [rip+0x1966]        # 0x44d2f8
  44b992:	jmp    QWORD PTR [rip+0x1958]        # 0x44d2f0
  44b998:	jmp    QWORD PTR [rip+0x194a]        # 0x44d2e8
  44b99e:	jmp    QWORD PTR [rip+0x1934]        # 0x44d2d8
  44b9a4:	jmp    QWORD PTR [rip+0x1a26]        # 0x44d3d0
  44b9aa:	int3   
  44b9ab:	int3   
  44b9ac:	int3   
  44b9ad:	int3   
  44b9ae:	int3   
  44b9af:	int3   
  44b9b0:	xor    eax,eax
  44b9b2:	ret    
  44b9b3:	int3   
  44b9b4:	int3   
  44b9b5:	int3   
  44b9b6:	int3   
  44b9b7:	int3   
  44b9b8:	int3   
  44b9b9:	int3   
  44b9ba:	int3   
  44b9bb:	int3   
  44b9bc:	int3   
  44b9bd:	int3   
  44b9be:	int3   
  44b9bf:	int3   
  44b9c0:	int3   
  44b9c1:	int3   
  44b9c2:	int3   
  44b9c3:	int3   
  44b9c4:	int3   
  44b9c5:	int3   
  44b9c6:	data16 data16 xchg ax,ax
  44b9ca:	data16 data16 xchg ax,ax
  44b9ce:	xchg   ax,ax
  44b9d0:	sub    rsp,0x10
  44b9d4:	mov    QWORD PTR [rsp],r10
  44b9d8:	mov    QWORD PTR [rsp+0x8],r11
  44b9dd:	xor    r11,r11
  44b9e0:	lea    r10,[rsp+0x18]
  44b9e5:	sub    r10,rax
  44b9e8:	cmovb  r10,r11
  44b9ec:	mov    r11,QWORD PTR gs:0x10
  44b9f5:	cmp    r10,r11
  44b9f8:	jae    0x44ba10
  44b9fa:	and    r10w,0xf000
  44ba00:	lea    r11,[r11-0x1000]
  44ba07:	mov    BYTE PTR [r11],0x0
  44ba0b:	cmp    r10,r11
  44ba0e:	jne    0x44ba00
  44ba10:	mov    r10,QWORD PTR [rsp]
  44ba14:	mov    r11,QWORD PTR [rsp+0x8]
  44ba19:	add    rsp,0x10
  44ba1d:	ret    
  44ba1e:	int3   
  44ba1f:	int3   
  44ba20:	jmp    0x44b150
  44ba25:	int3   
  44ba26:	int3   
  44ba27:	int3   
  44ba28:	mov    rax,QWORD PTR [rip+0x1949]        # 0x44d378
  44ba2f:	lea    rcx,[rip+0x7de]        # 0x44c214
  44ba36:	mov    QWORD PTR [rip+0x1cf8b],rax        # 0x4689c8
  44ba3d:	jmp    0x44b730
  44ba42:	int3   
  44ba43:	int3   
  44ba44:	mov    rax,QWORD PTR [rip+0x192d]        # 0x44d378
  44ba4b:	lea    rcx,[rip+0x7ce]        # 0x44c220
  44ba52:	add    rax,0x30
  44ba56:	mov    QWORD PTR [rip+0x1cf7b],rax        # 0x4689d8
  44ba5d:	jmp    0x44b730
  44ba62:	int3   
  44ba63:	int3   
  44ba64:	mov    rax,QWORD PTR [rip+0x190d]        # 0x44d378
  44ba6b:	lea    rcx,[rip+0x7ba]        # 0x44c22c
  44ba72:	add    rax,0x60
  44ba76:	mov    QWORD PTR [rip+0x1cf6b],rax        # 0x4689e8
  44ba7d:	jmp    0x44b730
  44ba82:	int3   
  44ba83:	int3   
  44ba84:	sub    rsp,0x28
  44ba88:	lea    rcx,[rip+0x2101]        # 0x44db90
  44ba8f:	call   QWORD PTR [rip+0x16f3]        # 0x44d188
  44ba95:	lea    rdx,[rip+0x20dc]        # 0x44db78
  44ba9c:	mov    rcx,rax
  44ba9f:	call   QWORD PTR [rip+0x176b]        # 0x44d210
  44baa5:	lea    rcx,[rip+0x20e4]        # 0x44db90
  44baac:	mov    QWORD PTR [rip+0x1cf55],rax        # 0x468a08
  44bab3:	call   QWORD PTR [rip+0x16cf]        # 0x44d188
  44bab9:	lea    rdx,[rip+0x20a8]        # 0x44db68
  44bac0:	mov    rcx,rax
  44bac3:	call   QWORD PTR [rip+0x1747]        # 0x44d210
  44bac9:	mov    QWORD PTR [rip+0x1cf30],rax        # 0x468a00
  44bad0:	add    rsp,0x28
  44bad4:	ret    
  44bad5:	int3   
  44bad6:	int3   
  44bad7:	int3   
  44bad8:	mov    rax,QWORD PTR [rip+0x1c5f9]        # 0x4680d8
  44badf:	xor    ecx,ecx
  44bae1:	mov    BYTE PTR [rip+0x1c780],0x3        # 0x468268
  44bae8:	mov    QWORD PTR [rip+0x1c709],rax        # 0x4681f8
  44baef:	mov    QWORD PTR [rip+0x1c71a],rax        # 0x468210
  44baf6:	mov    QWORD PTR [rip+0x1c72b],rax        # 0x468228
  44bafd:	xor    eax,eax
  44baff:	mov    BYTE PTR [rip+0x1c764],cl        # 0x468269
  44bb05:	mov    BYTE PTR [rip+0x1c75e],0x1        # 0x46826a
  44bb0c:	mov    QWORD PTR [rip+0x1c725],rax        # 0x468238
  44bb13:	mov    QWORD PTR [rip+0x1c726],rax        # 0x468240
  44bb1a:	lea    rax,[rip+0x2fcb]        # 0x44eaec
  44bb21:	mov    QWORD PTR [rip+0x1c720],rax        # 0x468248
  44bb28:	xor    eax,eax
  44bb2a:	mov    BYTE PTR [rip+0x1c74f],0x2        # 0x468280
  44bb31:	mov    QWORD PTR [rip+0x1c718],rax        # 0x468250
  44bb38:	mov    QWORD PTR [rip+0x1c719],rax        # 0x468258
  44bb3f:	lea    rax,[rip+0x2fa2]        # 0x44eae8
  44bb46:	mov    QWORD PTR [rip+0x1c713],rax        # 0x468260
  44bb4d:	mov    rax,QWORD PTR [rip+0x1c58c]        # 0x4680e0
  44bb54:	mov    BYTE PTR [rip+0x1c727],cl        # 0x468281
  44bb5a:	mov    QWORD PTR [rip+0x1c70f],rax        # 0x468270
  44bb61:	lea    rax,[rip+0x2f7c]        # 0x44eae4
  44bb68:	mov    BYTE PTR [rip+0x1c713],0x1        # 0x468282
  44bb6f:	mov    QWORD PTR [rip+0x1c702],rax        # 0x468278
  44bb76:	xor    eax,eax
  44bb78:	mov    BYTE PTR [rip+0x1c719],0x2        # 0x468298
  44bb7f:	mov    QWORD PTR [rip+0x1c702],rax        # 0x468288
  44bb86:	lea    rax,[rip+0x2f53]        # 0x44eae0
  44bb8d:	mov    BYTE PTR [rip+0x1c705],0x1        # 0x468299
  44bb94:	mov    QWORD PTR [rip+0x1c6f5],rax        # 0x468290
  44bb9b:	xor    eax,eax
  44bb9d:	mov    BYTE PTR [rip+0x1c6f6],0x1        # 0x46829a
  44bba4:	mov    QWORD PTR [rip+0x1c6f5],rax        # 0x4682a0
  44bbab:	lea    rax,[rip+0x261e]        # 0x44e1d0
  44bbb2:	mov    BYTE PTR [rip+0x1c6f7],0x2        # 0x4682b0
  44bbb9:	mov    QWORD PTR [rip+0x1c6e8],rax        # 0x4682a8
  44bbc0:	xor    eax,eax
  44bbc2:	mov    BYTE PTR [rip+0x1c6e8],0x1        # 0x4682b1
  44bbc9:	mov    QWORD PTR [rip+0x1c6e8],rax        # 0x4682b8
  44bbd0:	lea    rax,[rip+0x24f9]        # 0x44e0d0
  44bbd7:	mov    BYTE PTR [rip+0x1c6d4],0x1        # 0x4682b2
  44bbde:	mov    QWORD PTR [rip+0x1c6db],rax        # 0x4682c0
  44bbe5:	xor    eax,eax
  44bbe7:	mov    BYTE PTR [rip+0x1c6da],0x2        # 0x4682c8
  44bbee:	mov    QWORD PTR [rip+0x1c6db],rax        # 0x4682d0
  44bbf5:	lea    rax,[rip+0x2ee0]        # 0x44eadc
  44bbfc:	mov    BYTE PTR [rip+0x1c6c7],cl        # 0x4682c9
  44bc02:	mov    QWORD PTR [rip+0x1c6cf],rax        # 0x4682d8
  44bc09:	xor    eax,eax
  44bc0b:	mov    BYTE PTR [rip+0x1c6b8],0x1        # 0x4682ca
  44bc12:	mov    QWORD PTR [rip+0x1c6c8],rax        # 0x4682e1
  44bc19:	mov    DWORD PTR [rip+0x1c6ca],eax        # 0x4682e9
  44bc1f:	mov    WORD PTR [rip+0x1c6c7],ax        # 0x4682ed
  44bc26:	mov    BYTE PTR [rip+0x1c6c3],al        # 0x4682ef
  44bc2c:	lea    rax,[rip+0x2ea5]        # 0x44ead8
  44bc33:	mov    BYTE PTR [rip+0x1c6a6],0x2        # 0x4682e0
  44bc3a:	mov    QWORD PTR [rip+0x1c6af],rax        # 0x4682f0
  44bc41:	xor    eax,eax
  44bc43:	mov    BYTE PTR [rip+0x1c6ae],0x2        # 0x4682f8
  44bc4a:	mov    QWORD PTR [rip+0x1c6af],rax        # 0x468300
  44bc51:	lea    rax,[rip+0x2444]        # 0x44e09c
  44bc58:	mov    BYTE PTR [rip+0x1c69a],0x1        # 0x4682f9
  44bc5f:	mov    QWORD PTR [rip+0x1c6a2],rax        # 0x468308
  44bc66:	xor    eax,eax
  44bc68:	mov    BYTE PTR [rip+0x1c68b],0x2        # 0x4682fa
  44bc6f:	mov    QWORD PTR [rip+0x1c6a2],rax        # 0x468318
  44bc76:	lea    rax,[rip+0x2e57]        # 0x44ead4
  44bc7d:	mov    BYTE PTR [rip+0x1c68c],0x2        # 0x468310
  44bc84:	mov    QWORD PTR [rip+0x1c695],rax        # 0x468320
  44bc8b:	xor    eax,eax
  44bc8d:	mov    BYTE PTR [rip+0x1c67d],0x1        # 0x468311
  44bc94:	mov    QWORD PTR [rip+0x1c695],rax        # 0x468330
  44bc9b:	lea    rax,[rip+0x2e2e]        # 0x44ead0
  44bca2:	mov    BYTE PTR [rip+0x1c669],0x2        # 0x468312
  44bca9:	mov    BYTE PTR [rip+0x1c678],0x2        # 0x468328
  44bcb0:	mov    BYTE PTR [rip+0x1c672],0x1        # 0x468329
  44bcb7:	mov    BYTE PTR [rip+0x1c66c],0x2        # 0x46832a
  44bcbe:	mov    QWORD PTR [rip+0x1c673],rax        # 0x468338
  44bcc5:	mov    BYTE PTR [rip+0x1c674],0x2        # 0x468340
  44bccc:	mov    BYTE PTR [rip+0x1c66e],0x1        # 0x468341
  44bcd3:	xor    eax,eax
  44bcd5:	mov    BYTE PTR [rip+0x1c666],0x2        # 0x468342
  44bcdc:	mov    BYTE PTR [rip+0x1c68d],0x2        # 0x468370
  44bce3:	mov    QWORD PTR [rip+0x1c65e],rax        # 0x468348
  44bcea:	lea    rax,[rip+0x2ddb]        # 0x44eacc
  44bcf1:	mov    BYTE PTR [rip+0x1c679],0x1        # 0x468371
  44bcf8:	mov    QWORD PTR [rip+0x1c651],rax        # 0x468350
  44bcff:	xor    eax,eax
  44bd01:	mov    BYTE PTR [rip+0x1c66a],0x1        # 0x468372
  44bd08:	mov    QWORD PTR [rip+0x1c649],rax        # 0x468358
  44bd0f:	mov    QWORD PTR [rip+0x1c64a],rax        # 0x468360
  44bd16:	lea    rax,[rip+0x2dab]        # 0x44eac8
  44bd1d:	mov    QWORD PTR [rip+0x1c644],rax        # 0x468368
  44bd24:	xor    eax,eax
  44bd26:	mov    BYTE PTR [rip+0x1c65b],0x2        # 0x468388
  44bd2d:	mov    QWORD PTR [rip+0x1c644],rax        # 0x468378
  44bd34:	lea    rax,[rip+0x2d89]        # 0x44eac4
  44bd3b:	mov    BYTE PTR [rip+0x1c647],0x1        # 0x468389
  44bd42:	mov    QWORD PTR [rip+0x1c637],rax        # 0x468380
  44bd49:	xor    eax,eax
  44bd4b:	mov    BYTE PTR [rip+0x1c638],0x1        # 0x46838a
  44bd52:	mov    QWORD PTR [rip+0x1c637],rax        # 0x468390
  44bd59:	lea    rax,[rip+0x2d60]        # 0x44eac0
  44bd60:	mov    BYTE PTR [rip+0x1c639],0x3        # 0x4683a0
  44bd67:	mov    QWORD PTR [rip+0x1c62a],rax        # 0x468398
  44bd6e:	mov    rax,QWORD PTR [rip+0x1c353]        # 0x4680c8
  44bd75:	mov    BYTE PTR [rip+0x1c626],cl        # 0x4683a1
  44bd7b:	mov    QWORD PTR [rip+0x1c626],rax        # 0x4683a8
  44bd82:	lea    rax,[rip+0x2d33]        # 0x44eabc
  44bd89:	mov    BYTE PTR [rip+0x1c613],cl        # 0x4683a2
  44bd8f:	mov    QWORD PTR [rip+0x1c61a],rax        # 0x4683b0
  44bd96:	xor    eax,eax
  44bd98:	mov    BYTE PTR [rip+0x1c619],0x2        # 0x4683b8
  44bd9f:	mov    QWORD PTR [rip+0x1c613],rax        # 0x4683b9
  44bda6:	mov    DWORD PTR [rip+0x1c615],eax        # 0x4683c1
  44bdac:	mov    WORD PTR [rip+0x1c612],ax        # 0x4683c5
  44bdb3:	mov    BYTE PTR [rip+0x1c60e],al        # 0x4683c7
  44bdb9:	lea    rax,[rip+0x2cf8]        # 0x44eab8
  44bdc0:	mov    BYTE PTR [rip+0x1c609],0x2        # 0x4683d0
  44bdc7:	mov    QWORD PTR [rip+0x1c5fa],rax        # 0x4683c8
  44bdce:	xor    eax,eax
  44bdd0:	mov    BYTE PTR [rip+0x1c611],0x2        # 0x4683e8
  44bdd7:	mov    QWORD PTR [rip+0x1c5f3],rax        # 0x4683d1
  44bdde:	mov    DWORD PTR [rip+0x1c5f5],eax        # 0x4683d9
  44bde4:	mov    WORD PTR [rip+0x1c5f2],ax        # 0x4683dd
  44bdeb:	mov    BYTE PTR [rip+0x1c5ee],al        # 0x4683df
  44bdf1:	lea    rax,[rip+0x2cb8]        # 0x44eab0
  44bdf8:	mov    BYTE PTR [rip+0x1c5eb],cl        # 0x4683e9
  44bdfe:	mov    QWORD PTR [rip+0x1c5db],rax        # 0x4683e0
  44be05:	xor    eax,eax
  44be07:	mov    BYTE PTR [rip+0x1c5dd],cl        # 0x4683ea
  44be0d:	mov    QWORD PTR [rip+0x1c5dc],rax        # 0x4683f0
  44be14:	lea    rax,[rip+0x2c8d]        # 0x44eaa8
  44be1b:	mov    BYTE PTR [rip+0x1c5de],0x2        # 0x468400
  44be22:	mov    QWORD PTR [rip+0x1c5cf],rax        # 0x4683f8
  44be29:	xor    eax,eax
  44be2b:	mov    BYTE PTR [rip+0x1c5cf],0x1        # 0x468401
  44be32:	mov    QWORD PTR [rip+0x1c5cf],rax        # 0x468408
  44be39:	lea    rax,[rip+0x2c64]        # 0x44eaa4
  44be40:	mov    BYTE PTR [rip+0x1c5bc],cl        # 0x468402
  44be46:	mov    QWORD PTR [rip+0x1c5c3],rax        # 0x468410
  44be4d:	xor    eax,eax
  44be4f:	mov    BYTE PTR [rip+0x1c5c2],0x2        # 0x468418
  44be56:	mov    QWORD PTR [rip+0x1c5bc],rax        # 0x468419
  44be5d:	mov    DWORD PTR [rip+0x1c5be],eax        # 0x468421
  44be63:	mov    WORD PTR [rip+0x1c5bb],ax        # 0x468425
  44be6a:	mov    BYTE PTR [rip+0x1c5b7],al        # 0x468427
  44be70:	lea    rax,[rip+0x2c29]        # 0x44eaa0
  44be77:	mov    BYTE PTR [rip+0x1c5ca],0x1        # 0x468448
  44be7e:	mov    QWORD PTR [rip+0x1c5a3],rax        # 0x468428
  44be85:	xor    eax,eax
  44be87:	mov    QWORD PTR [rip+0x1c5a2],rax        # 0x468430
  44be8e:	mov    QWORD PTR [rip+0x1c5a3],rax        # 0x468438
  44be95:	lea    rax,[rip+0x2c00]        # 0x44ea9c
  44be9c:	mov    QWORD PTR [rip+0x1c59d],rax        # 0x468440
  44bea3:	xor    eax,eax
  44bea5:	mov    QWORD PTR [rip+0x1c59d],rax        # 0x468449
  44beac:	mov    DWORD PTR [rip+0x1c59f],eax        # 0x468451
  44beb2:	mov    WORD PTR [rip+0x1c59c],ax        # 0x468455
  44beb9:	mov    BYTE PTR [rip+0x1c598],al        # 0x468457
  44bebf:	lea    rax,[rip+0x2bd2]        # 0x44ea98
  44bec6:	mov    QWORD PTR [rip+0x1c58b],rax        # 0x468458
  44becd:	xor    eax,eax
  44becf:	mov    BYTE PTR [rip+0x1c58a],0x2        # 0x468460
  44bed6:	mov    QWORD PTR [rip+0x1c584],rax        # 0x468461
  44bedd:	mov    DWORD PTR [rip+0x1c586],eax        # 0x468469
  44bee3:	mov    WORD PTR [rip+0x1c583],ax        # 0x46846d
  44beea:	mov    BYTE PTR [rip+0x1c57f],al        # 0x46846f
  44bef0:	lea    rax,[rip+0x2b9d]        # 0x44ea94
  44bef7:	mov    BYTE PTR [rip+0x1c57a],0x2        # 0x468478
  44befe:	mov    QWORD PTR [rip+0x1c56b],rax        # 0x468470
  44bf05:	xor    eax,eax
  44bf07:	mov    BYTE PTR [rip+0x1c5b2],0x1        # 0x4684c0
  44bf0e:	mov    QWORD PTR [rip+0x1c564],rax        # 0x468479
  44bf15:	mov    DWORD PTR [rip+0x1c566],eax        # 0x468481
  44bf1b:	mov    WORD PTR [rip+0x1c563],ax        # 0x468485
  44bf22:	mov    BYTE PTR [rip+0x1c55f],al        # 0x468487
  44bf28:	lea    rax,[rip+0x2b61]        # 0x44ea90
  44bf2f:	mov    BYTE PTR [rip+0x1c5a2],0x3        # 0x4684d8
  44bf36:	mov    QWORD PTR [rip+0x1c54b],rax        # 0x468488
  44bf3d:	xor    eax,eax
  44bf3f:	mov    BYTE PTR [rip+0x1c594],cl        # 0x4684d9
  44bf45:	mov    QWORD PTR [rip+0x1c544],rax        # 0x468490
  44bf4c:	mov    QWORD PTR [rip+0x1c545],rax        # 0x468498
  44bf53:	lea    rax,[rip+0x2b32]        # 0x44ea8c
  44bf5a:	mov    QWORD PTR [rip+0x1c53f],rax        # 0x4684a0
  44bf61:	xor    eax,eax
  44bf63:	mov    BYTE PTR [rip+0x1c570],0x1        # 0x4684da
  44bf6a:	mov    QWORD PTR [rip+0x1c537],rax        # 0x4684a8
  44bf71:	mov    QWORD PTR [rip+0x1c538],rax        # 0x4684b0
  44bf78:	lea    rax,[rip+0x2b09]        # 0x44ea88
  44bf7f:	mov    QWORD PTR [rip+0x1c532],rax        # 0x4684b8
  44bf86:	xor    eax,eax
  44bf88:	mov    BYTE PTR [rip+0x1c579],0x1        # 0x468508
  44bf8f:	mov    QWORD PTR [rip+0x1c52b],rax        # 0x4684c1
  44bf96:	mov    DWORD PTR [rip+0x1c52d],eax        # 0x4684c9
  44bf9c:	mov    WORD PTR [rip+0x1c52a],ax        # 0x4684cd
  44bfa3:	mov    BYTE PTR [rip+0x1c526],al        # 0x4684cf
  44bfa9:	lea    rax,[rip+0x2ad4]        # 0x44ea84
  44bfb0:	mov    BYTE PTR [rip+0x1c569],0x2        # 0x468520
  44bfb7:	mov    QWORD PTR [rip+0x1c512],rax        # 0x4684d0
  44bfbe:	mov    rax,QWORD PTR [rip+0x1c10b]        # 0x4680d0
  44bfc5:	mov    BYTE PTR [rip+0x1c556],cl        # 0x468521
  44bfcb:	mov    QWORD PTR [rip+0x1c50e],rax        # 0x4684e0
  44bfd2:	lea    rax,[rip+0x2aa7]        # 0x44ea80
  44bfd9:	mov    BYTE PTR [rip+0x1c543],cl        # 0x468522
  44bfdf:	mov    QWORD PTR [rip+0x1c502],rax        # 0x4684e8
  44bfe6:	xor    eax,eax
  44bfe8:	mov    BYTE PTR [rip+0x1c549],0x1        # 0x468538
  44bfef:	mov    QWORD PTR [rip+0x1c4fa],rax        # 0x4684f0
  44bff6:	mov    QWORD PTR [rip+0x1c4fb],rax        # 0x4684f8
  44bffd:	lea    rax,[rip+0x2a78]        # 0x44ea7c
  44c004:	mov    QWORD PTR [rip+0x1c4f5],rax        # 0x468500
  44c00b:	xor    eax,eax
  44c00d:	mov    BYTE PTR [rip+0x1c53c],0x1        # 0x468550
  44c014:	mov    QWORD PTR [rip+0x1c4ee],rax        # 0x468509
  44c01b:	mov    DWORD PTR [rip+0x1c4f0],eax        # 0x468511
  44c021:	mov    WORD PTR [rip+0x1c4ed],ax        # 0x468515
  44c028:	mov    BYTE PTR [rip+0x1c4e9],al        # 0x468517
  44c02e:	lea    rax,[rip+0x2a43]        # 0x44ea78
  44c035:	mov    QWORD PTR [rip+0x1c4dc],rax        # 0x468518
  44c03c:	xor    eax,eax
  44c03e:	mov    QWORD PTR [rip+0x1c4e3],rax        # 0x468528
  44c045:	lea    rax,[rip+0x2a28]        # 0x44ea74
  44c04c:	mov    QWORD PTR [rip+0x1c4dd],rax        # 0x468530
  44c053:	xor    eax,eax
  44c055:	mov    QWORD PTR [rip+0x1c4dd],rax        # 0x468539
  44c05c:	mov    DWORD PTR [rip+0x1c4df],eax        # 0x468541
  44c062:	mov    WORD PTR [rip+0x1c4dc],ax        # 0x468545
  44c069:	mov    BYTE PTR [rip+0x1c4d8],al        # 0x468547
  44c06f:	lea    rax,[rip+0x29fa]        # 0x44ea70
  44c076:	mov    QWORD PTR [rip+0x1c4cb],rax        # 0x468548
  44c07d:	xor    eax,eax
  44c07f:	mov    QWORD PTR [rip+0x1c4cb],rax        # 0x468551
  44c086:	mov    DWORD PTR [rip+0x1c4cd],eax        # 0x468559
  44c08c:	mov    WORD PTR [rip+0x1c4ca],ax        # 0x46855d
  44c093:	mov    BYTE PTR [rip+0x1c4c6],al        # 0x46855f
  44c099:	lea    rax,[rip+0x29cc]        # 0x44ea6c
  44c0a0:	mov    QWORD PTR [rip+0x1c4b9],rax        # 0x468560
  44c0a7:	xor    eax,eax
  44c0a9:	mov    QWORD PTR [rip+0x1c4b8],rax        # 0x468568
  44c0b0:	mov    QWORD PTR [rip+0x1c4b9],rax        # 0x468570
  44c0b7:	lea    rax,[rip+0x29aa]        # 0x44ea68
  44c0be:	mov    BYTE PTR [rip+0x1c4bb],0x1        # 0x468580
  44c0c5:	mov    BYTE PTR [rip+0x1c52c],0x2        # 0x4685f8
  44c0cc:	mov    QWORD PTR [rip+0x1c4a5],rax        # 0x468578
  44c0d3:	xor    eax,eax
  44c0d5:	mov    QWORD PTR [rip+0x1c4a5],rax        # 0x468581
  44c0dc:	mov    DWORD PTR [rip+0x1c4a7],eax        # 0x468589
  44c0e2:	mov    WORD PTR [rip+0x1c4a4],ax        # 0x46858d
  44c0e9:	mov    BYTE PTR [rip+0x1c4a0],al        # 0x46858f
  44c0ef:	lea    rax,[rip+0x296e]        # 0x44ea64
  44c0f6:	mov    QWORD PTR [rip+0x1c493],rax        # 0x468590
  44c0fd:	xor    eax,eax
  44c0ff:	mov    QWORD PTR [rip+0x1c492],rax        # 0x468598
  44c106:	mov    QWORD PTR [rip+0x1c493],rax        # 0x4685a0
  44c10d:	lea    rax,[rip+0x294c]        # 0x44ea60
  44c114:	mov    QWORD PTR [rip+0x1c48d],rax        # 0x4685a8
  44c11b:	xor    eax,eax
  44c11d:	mov    QWORD PTR [rip+0x1c48c],rax        # 0x4685b0
  44c124:	mov    QWORD PTR [rip+0x1c48d],rax        # 0x4685b8
  44c12b:	lea    rax,[rip+0x2926]        # 0x44ea58
  44c132:	mov    QWORD PTR [rip+0x1c487],rax        # 0x4685c0
  44c139:	xor    eax,eax
  44c13b:	mov    QWORD PTR [rip+0x1c486],rax        # 0x4685c8
  44c142:	mov    QWORD PTR [rip+0x1c487],rax        # 0x4685d0
  44c149:	lea    rax,[rip+0x2904]        # 0x44ea54
  44c150:	mov    QWORD PTR [rip+0x1c481],rax        # 0x4685d8
  44c157:	xor    eax,eax
  44c159:	mov    QWORD PTR [rip+0x1c480],rax        # 0x4685e0
  44c160:	mov    QWORD PTR [rip+0x1c481],rax        # 0x4685e8
  44c167:	lea    rax,[rip+0x28e2]        # 0x44ea50
  44c16e:	mov    QWORD PTR [rip+0x1c47b],rax        # 0x4685f0
  44c175:	xor    eax,eax
  44c177:	mov    QWORD PTR [rip+0x1c47b],rax        # 0x4685f9
  44c17e:	mov    DWORD PTR [rip+0x1c47d],eax        # 0x468601
  44c184:	mov    WORD PTR [rip+0x1c47a],ax        # 0x468605
  44c18b:	mov    BYTE PTR [rip+0x1c476],al        # 0x468607
  44c191:	ret    
  44c192:	int3   
  44c193:	int3   
  44c194:	sub    rsp,0x28
  44c198:	lea    rcx,[rip+0x1cd19]        # 0x468eb8
  44c19f:	call   0x44b0f0
  44c1a4:	lea    rcx,[rip+0x8d]        # 0x44c238
  44c1ab:	add    rsp,0x28
  44c1af:	jmp    0x44b730
  44c1b4:	sub    rsp,0x28
  44c1b8:	lea    rcx,[rip+0x1cd21]        # 0x468ee0
  44c1bf:	call   0x44b0f0
  44c1c4:	lea    rcx,[rip+0x7d]        # 0x44c248
  44c1cb:	add    rsp,0x28
  44c1cf:	jmp    0x44b730
  44c1d4:	sub    rsp,0x28
  44c1d8:	lea    rcx,[rip+0x1cd31]        # 0x468f10
  44c1df:	call   0x44b0f0
  44c1e4:	lea    rcx,[rip+0x6d]        # 0x44c258
  44c1eb:	add    rsp,0x28
  44c1ef:	jmp    0x44b730
  44c1f4:	sub    rsp,0x28
  44c1f8:	lea    rcx,[rip+0x1cd51]        # 0x468f50
  44c1ff:	call   0x44b0f0
  44c204:	lea    rcx,[rip+0x5d]        # 0x44c268
  44c20b:	add    rsp,0x28
  44c20f:	jmp    0x44b730
  44c214:	lea    rcx,[rip+0x1c7ad]        # 0x4689c8
  44c21b:	jmp    0x402164
  44c220:	lea    rcx,[rip+0x1c7b1]        # 0x4689d8
  44c227:	jmp    0x402404
  44c22c:	lea    rcx,[rip+0x1c7b5]        # 0x4689e8
  44c233:	jmp    0x402404
  44c238:	lea    rcx,[rip+0x1cc79]        # 0x468eb8
  44c23f:	rex.W jmp QWORD PTR [rip+0xe82]        # 0x44d0c8
  44c246:	int3   
  44c247:	int3   
  44c248:	lea    rcx,[rip+0x1cc91]        # 0x468ee0
  44c24f:	rex.W jmp QWORD PTR [rip+0xe72]        # 0x44d0c8
  44c256:	int3   
  44c257:	int3   
  44c258:	lea    rcx,[rip+0x1ccb1]        # 0x468f10
  44c25f:	rex.W jmp QWORD PTR [rip+0xe62]        # 0x44d0c8
  44c266:	int3   
  44c267:	int3   
  44c268:	lea    rcx,[rip+0x1cce1]        # 0x468f50
  44c26f:	rex.W jmp QWORD PTR [rip+0xe52]        # 0x44d0c8
