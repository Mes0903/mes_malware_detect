
f7bc0e7b1a3f57977fec35320a0662fc081ef25084cc2c5eee4462a488efda97.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x454f5]        # 0x446510
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x454f6]        # 0x446520
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x454f9]        # 0x446530
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x454bc]        # 0x446500
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x4524f]        # 0x4462a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x45491]        # 0x4464f0
  40105f:	mov    DWORD PTR [rip+0x4bfa3],edx        # 0x44d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42a778
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4247c0
  401081:	mov    rdx,QWORD PTR [rip+0x452b8]        # 0x446340
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x4529e]        # 0x446330
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x45314]        # 0x4463b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x4523b]        # 0x4462e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4243a0
  4010af:	mov    rax,QWORD PTR [rip+0x4516a]        # 0x446220
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42a778
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x23579]        # 0x4246a0
  401127:	call   0x424690
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x45275]        # 0x4463e0
  40116b:	lea    r8,[rip+0x4bea6]        # 0x44d018
  401172:	lea    rdx,[rip+0x4bea7]        # 0x44d020
  401179:	lea    rcx,[rip+0x4bea8]        # 0x44d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x4be78],eax        # 0x44d000
  401188:	lea    rax,[rip+0x4be71]        # 0x44d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x45205]        # 0x4463a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42a790
  4011a3:	mov    DWORD PTR [rip+0x4be67],eax        # 0x44d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x4532a]        # 0x4464f0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x4511b]        # 0x446310
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x504c6]        # 0x4516c8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x450f7]        # 0x446320
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x4bdba],0x1        # 0x44d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x4502c]        # 0x446290
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4249b0
  40127d:	lea    rcx,[rip+0x23ccc]        # 0x424f50
  401284:	call   QWORD PTR [rip+0x50436]        # 0x4516c0
  40128a:	mov    rdx,QWORD PTR [rip+0x4506f]        # 0x446300
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x424e60
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42a7c0
  4012a5:	call   0x4247a0
  4012aa:	mov    rax,QWORD PTR [rip+0x44fef]        # 0x4462a0
  4012b1:	mov    QWORD PTR [rip+0x4f980],rax        # 0x450c38
  4012b8:	mov    rax,QWORD PTR [rip+0x45011]        # 0x4462d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x4f919],rax        # 0x450c30
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2acca],eax        # 0x42c000
  401336:	mov    r12d,DWORD PTR [rip+0x4bceb]        # 0x44d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42a678
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x4bcc2]        # 0x44d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42a610
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42a678
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42a668
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x4bc6a],rbp        # 0x44d020
  4013b6:	call   0x424370
  4013bb:	mov    rax,QWORD PTR [rip+0x44eee]        # 0x4462b0
  4013c2:	mov    rdx,QWORD PTR [rip+0x4bc4f]        # 0x44d018
  4013c9:	mov    ecx,DWORD PTR [rip+0x4bc59]        # 0x44d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x4bc3c]        # 0x44d018
  4013dc:	mov    rdx,QWORD PTR [rip+0x4bc3d]        # 0x44d020
  4013e3:	call   0x42aae0
  4013e8:	mov    ecx,DWORD PTR [rip+0x4bc1a]        # 0x44d008
  4013ee:	mov    DWORD PTR [rip+0x4bc18],eax        # 0x44d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x4bc02]        # 0x44d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42a760
  40140b:	mov    eax,DWORD PTR [rip+0x4bbfb]        # 0x44d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x44ee9]        # 0x446320
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42a768
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x44f0d]        # 0x446370
  401463:	mov    rcx,QWORD PTR [rip+0x44ef6]        # 0x446360
  40146a:	call   0x42a748
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x5016f]        # 0x451608
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x44ee9]        # 0x446390
  4014a7:	mov    rcx,QWORD PTR [rip+0x44ed2]        # 0x446380
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42a748
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42a708
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x45015]        # 0x4464f0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4243b0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x44fe5]        # 0x4464f0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4243b0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    eax,DWORD PTR [rip+0x4bafa]        # 0x44d034
  40153a:	mov    QWORD PTR [rsp+0x48],rdx
  40153f:	mov    QWORD PTR [rsp+0x50],r8
  401544:	mov    QWORD PTR [rsp+0x58],r9
  401549:	test   eax,eax
  40154b:	jne    0x401552
  40154d:	add    rsp,0x38
  401551:	ret    
  401552:	lea    rdx,[rsp+0x48]
  401557:	mov    QWORD PTR [rsp+0x28],rdx
  40155c:	call   0x40e970
  401561:	nop
  401562:	add    rsp,0x38
  401566:	ret    
  401567:	nop    WORD PTR [rax+rax*1+0x0]
  401570:	mov    eax,DWORD PTR [rip+0x4bac6]        # 0x44d03c
  401576:	ret    
  401577:	nop    WORD PTR [rax+rax*1+0x0]
  401580:	push   r12
  401582:	push   rbp
  401583:	push   rdi
  401584:	push   rsi
  401585:	push   rbx
  401586:	sub    rsp,0x20
  40158a:	lea    rbx,[rip+0x2eb4f]        # 0x4300e0
  401591:	lea    r12,[rip+0x2eb78]        # 0x430110
  401598:	lea    rdi,[rip+0x4baa1]        # 0x44d040
  40159f:	mov    rbp,rcx
  4015a2:	mov    DWORD PTR [rip+0x4ba90],0x0        # 0x44d03c
  4015ac:	movsxd rax,DWORD PTR [rbx+0x8]
  4015b0:	mov    rsi,QWORD PTR [rbx]
  4015b3:	mov    r8,rbp
  4015b6:	mov    rcx,rsi
  4015b9:	lea    rdx,[rdi+rax*1]
  4015bd:	call   0x41d9e0
  4015c2:	test   eax,eax
  4015c4:	jne    0x4015e4
  4015c6:	add    rbx,0x10
  4015ca:	cmp    rbx,r12
  4015cd:	jne    0x4015ac
  4015cf:	mov    DWORD PTR [rip+0x4ba63],0x1        # 0x44d03c
  4015d9:	add    rsp,0x20
  4015dd:	pop    rbx
  4015de:	pop    rsi
  4015df:	pop    rdi
  4015e0:	pop    rbp
  4015e1:	pop    r12
  4015e3:	ret    
  4015e4:	lea    rcx,[rip+0x2ea15]        # 0x430000
  4015eb:	mov    rdx,rsi
  4015ee:	call   0x401530
  4015f3:	mov    eax,0xffffffff
  4015f8:	add    rsp,0x20
  4015fc:	pop    rbx
  4015fd:	pop    rsi
  4015fe:	pop    rdi
  4015ff:	pop    rbp
  401600:	pop    r12
  401602:	ret    
  401603:	nop    DWORD PTR [rax]
  401606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401610:	push   rdi
  401611:	push   rsi
  401612:	push   rbx
  401613:	sub    rsp,0x40
  401617:	mov    esi,r8d
  40161a:	mov    r8d,DWORD PTR [rip+0x4ba37]        # 0x44d058
  401621:	mov    edi,ecx
  401623:	mov    rbx,rdx
  401626:	test   r8d,r8d
  401629:	je     0x4016a0
  40162b:	lea    rcx,[rsp+0x30]
  401630:	xor    r9d,r9d
  401633:	mov    edx,edi
  401635:	call   0x41acf0
  40163a:	mov    rcx,QWORD PTR [rip+0x4ba07]        # 0x44d048
  401641:	movsxd r8,esi
  401644:	mov    rdx,rbx
  401647:	call   0x40dfe0
  40164c:	test   eax,eax
  40164e:	jne    0x401685
  401650:	lea    rcx,[rip+0x2e9f9]        # 0x430050
  401657:	call   0x401530
  40165c:	mov    rax,QWORD PTR [rsp+0x30]
  401661:	lea    rcx,[rsp+0x20]
  401666:	mov    QWORD PTR [rsp+0x20],rax
  40166b:	mov    eax,DWORD PTR [rsp+0x38]
  40166f:	mov    DWORD PTR [rsp+0x28],eax
  401673:	call   0x40e170
  401678:	mov    eax,0xffffffff
  40167d:	add    rsp,0x40
  401681:	pop    rbx
  401682:	pop    rsi
  401683:	pop    rdi
  401684:	ret    
  401685:	lea    rcx,[rip+0x2e9b4]        # 0x430040
  40168c:	call   0x41d110
  401691:	mov    eax,0xffffffff
  401696:	add    rsp,0x40
  40169a:	pop    rbx
  40169b:	pop    rsi
  40169c:	pop    rdi
  40169d:	ret    
  40169e:	xchg   ax,ax
  4016a0:	mov    rcx,QWORD PTR [rip+0x4b999]        # 0x44d040
  4016a7:	lea    rdx,[rip+0x4b9aa]        # 0x44d058
  4016ae:	call   0x40df40
  4016b3:	test   eax,eax
  4016b5:	je     0x4016c3
  4016b7:	lea    rcx,[rip+0x2e95a]        # 0x430018
  4016be:	call   0x41d110
  4016c3:	mov    r8d,DWORD PTR [rip+0x4b98e]        # 0x44d058
  4016ca:	jmp    0x40162b
  4016cf:	nop
  4016d0:	push   rbx
  4016d1:	sub    rsp,0x20
  4016d5:	mov    eax,DWORD PTR [rip+0x4b95d]        # 0x44d038
  4016db:	mov    ebx,ecx
  4016dd:	test   eax,eax
  4016df:	je     0x4016f0
  4016e1:	and    eax,ebx
  4016e3:	add    rsp,0x20
  4016e7:	pop    rbx
  4016e8:	ret    
  4016e9:	nop    DWORD PTR [rax+0x0]
  4016f0:	mov    rcx,QWORD PTR [rip+0x4b959]        # 0x44d050
  4016f7:	lea    rdx,[rip+0x4b93a]        # 0x44d038
  4016fe:	call   0x40df40
  401703:	test   eax,eax
  401705:	je     0x401713
  401707:	lea    rcx,[rip+0x2e962]        # 0x430070
  40170e:	call   0x41d110
  401713:	mov    eax,DWORD PTR [rip+0x4b91f]        # 0x44d038
  401719:	and    eax,ebx
  40171b:	add    rsp,0x20
  40171f:	pop    rbx
  401720:	ret    
  401721:	nop    DWORD PTR [rax+rax*1+0x0]
  401726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401730:	mov    DWORD PTR [rip+0x4b8fe],0x0        # 0x44d038
  40173a:	ret    
  40173b:	nop
  40173c:	nop
  40173d:	nop
  40173e:	nop
  40173f:	nop
  401740:	push   rbx
  401741:	test   ecx,ecx
  401743:	jle    0x401795
  401745:	mov    r11,QWORD PTR [rdx]
  401748:	xor    edx,edx
  40174a:	jmp    0x401764
  40174c:	nop    DWORD PTR [rax+0x0]
  401750:	lea    r9,[rip+0x2f049]        # 0x4307a0
  401757:	movzx  eax,BYTE PTR [r9+rax*1]
  40175c:	lea    edx,[rdx+rax*1+0x1]
  401760:	cmp    edx,ecx
  401762:	jge    0x401795
  401764:	movsxd r9,edx
  401767:	movzx  eax,BYTE PTR [r11+r9*1]
  40176c:	lea    r10d,[rax-0x20]
  401770:	cmp    r10b,0x1
  401774:	ja     0x401750
  401776:	movzx  ebx,BYTE PTR [r11+r9*1+0x1]
  40177c:	movzx  r10d,BYTE PTR [r11+r9*1+0x2]
  401782:	shl    ebx,0x8
  401785:	lea    r9d,[rbx+r10*1]
  401789:	cmp    r9d,r8d
  40178c:	jne    0x401750
  40178e:	mov    eax,0x1
  401793:	pop    rbx
  401794:	ret    
  401795:	xor    eax,eax
  401797:	pop    rbx
  401798:	ret    
  401799:	nop    DWORD PTR [rax+0x0]
  4017a0:	push   rbx
  4017a1:	sub    rsp,0x430
  4017a8:	lea    rbx,[rsp+0x30]
  4017ad:	mov    QWORD PTR [rsp+0x450],r8
  4017b5:	lea    r8,[rsp+0x448]
  4017bd:	mov    QWORD PTR [rsp+0x448],rdx
  4017c5:	mov    rdx,rcx
  4017c8:	mov    QWORD PTR [rsp+0x458],r9
  4017d0:	mov    rcx,rbx
  4017d3:	mov    QWORD PTR [rsp+0x28],r8
  4017d8:	call   0x4259a0
  4017dd:	call   QWORD PTR [rip+0x4ff6d]        # 0x451750
  4017e3:	lea    rdx,[rip+0x2e956]        # 0x430140
  4017ea:	lea    rcx,[rax+0x60]
  4017ee:	mov    r8,rbx
  4017f1:	call   0x42aa80
  4017f6:	nop
  4017f7:	add    rsp,0x430
  4017fe:	pop    rbx
  4017ff:	ret    
  401800:	push   rbp
  401801:	push   r15
  401803:	push   r14
  401805:	push   r13
  401807:	push   r12
  401809:	push   rdi
  40180a:	push   rsi
  40180b:	push   rbx
  40180c:	sub    rsp,0x58
  401810:	lea    rbp,[rsp+0x80]
  401818:	mov    rax,QWORD PTR [rip+0x44c51]        # 0x446470
  40181f:	mov    ebx,edx
  401821:	mov    QWORD PTR [rbp+0x30],r8
  401825:	mov    QWORD PTR [rbp-0x38],rcx
  401829:	mov    edx,DWORD PTR [rax]
  40182b:	test   edx,edx
  40182d:	jle    0x401841
  40182f:	mov    rdx,rcx
  401832:	lea    rcx,[rip+0x2e919]        # 0x430152
  401839:	mov    r8d,ebx
  40183c:	call   0x4017a0
  401841:	lea    rcx,[rbp-0x38]
  401845:	call   0x41b420
  40184a:	mov    rsi,QWORD PTR [rax]
  40184d:	mov    QWORD PTR [rbp-0x50],rax
  401851:	test   rsi,rsi
  401854:	je     0x4019ca
  40185a:	add    rax,0x10
  40185e:	xor    ecx,ecx
  401860:	cmp    DWORD PTR [rax-0x8],0x1
  401864:	sbb    ecx,0xffffffff
  401867:	add    rax,0x10
  40186b:	cmp    QWORD PTR [rax-0x10],0x0
  401870:	jne    0x401860
  401872:	cmp    ebx,ecx
  401874:	jne    0x4019d2
  40187a:	mov    rax,QWORD PTR [rbp-0x50]
  40187e:	lea    r14,[rip+0x2e9ab]        # 0x430230
  401885:	lea    r13,[rbp-0x39]
  401889:	mov    DWORD PTR [rbp-0x44],0x0
  401890:	lea    rbx,[rax+0x8]
  401894:	mov    rax,QWORD PTR [rip+0x44bd5]        # 0x446470
  40189b:	mov    eax,DWORD PTR [rax]
  40189d:	test   eax,eax
  40189f:	jle    0x4018b3
  4018a1:	mov    r8d,DWORD PTR [rbx]
  4018a4:	lea    rcx,[rip+0x2e8fd]        # 0x4301a8
  4018ab:	mov    rdx,rsi
  4018ae:	call   0x4017a0
  4018b3:	cmp    DWORD PTR [rbx],0x5
  4018b6:	ja     0x4019a3
  4018bc:	mov    eax,DWORD PTR [rbx]
  4018be:	movsxd rax,DWORD PTR [r14+rax*4]
  4018c2:	add    rax,r14
  4018c5:	jmp    rax
  4018c7:	nop    WORD PTR [rax+rax*1+0x0]
  4018d0:	movsxd rax,DWORD PTR [rbp-0x44]
  4018d4:	mov    rdi,QWORD PTR [rbp+0x30]
  4018d8:	mov    rcx,rsi
  4018db:	mov    rdx,QWORD PTR [rdi+rax*8]
  4018df:	call   0x42aa50
  4018e4:	cmp    DWORD PTR [rbx],0x1
  4018e7:	sbb    DWORD PTR [rbp-0x44],0xffffffff
  4018eb:	add    rbx,0x10
  4018ef:	mov    rsi,QWORD PTR [rbx-0x8]
  4018f3:	test   rsi,rsi
  4018f6:	jne    0x401894
  4018f8:	mov    rcx,QWORD PTR [rbp-0x50]
  4018fc:	call   0x41bb50
  401901:	call   QWORD PTR [rip+0x4fe49]        # 0x451750
  401907:	lea    rcx,[rax+0x30]
  40190b:	call   0x42a6f0
  401910:	nop
  401911:	lea    rsp,[rbp-0x28]
  401915:	pop    rbx
  401916:	pop    rsi
  401917:	pop    rdi
  401918:	pop    r12
  40191a:	pop    r13
  40191c:	pop    r14
  40191e:	pop    r15
  401920:	pop    rbp
  401921:	ret    
  401922:	lea    rcx,[rip+0x2e8a7]        # 0x4301d0
  401929:	call   0x41d140
  40192e:	xchg   ax,ax
  401930:	movsxd rax,DWORD PTR [rbp-0x44]
  401934:	mov    rdi,QWORD PTR [rbp+0x30]
  401938:	mov    r12,QWORD PTR [rdi+rax*8]
  40193c:	xor    eax,eax
  40193e:	xchg   ax,ax
  401940:	mov    r15,rax
  401943:	mov    r8d,0x1
  401949:	mov    rdx,r13
  40194c:	lea    rcx,[r15+r12*1]
  401950:	mov    edi,eax
  401952:	call   0x40def0
  401957:	cmp    BYTE PTR [rbp-0x39],0x0
  40195b:	lea    rax,[r15+0x1]
  40195f:	jne    0x401940
  401961:	lea    eax,[rdi+0x1]
  401964:	cdqe   
  401966:	add    rax,0x1e
  40196a:	and    rax,0xfffffffffffffff0
  40196e:	call   0x425730
  401973:	sub    rsp,rax
  401976:	test   edi,edi
  401978:	lea    r10,[rsp+0x20]
  40197d:	jne    0x4019b2
  40197f:	mov    BYTE PTR [r10+r15*1],0x0
  401984:	mov    rdx,r10
  401987:	mov    rcx,rsi
  40198a:	call   0x42aa50
  40198f:	jmp    0x4018e4
  401994:	xor    edx,edx
  401996:	mov    rcx,rsi
  401999:	call   0x42aa50
  40199e:	jmp    0x4018e4
  4019a3:	lea    rcx,[rip+0x2e84e]        # 0x4301f8
  4019aa:	mov    rdx,rsi
  4019ad:	call   0x41d140
  4019b2:	mov    rdx,r10
  4019b5:	mov    r8d,edi
  4019b8:	mov    rcx,r12
  4019bb:	mov    QWORD PTR [rbp-0x58],r10
  4019bf:	call   0x40def0
  4019c4:	mov    r10,QWORD PTR [rbp-0x58]
  4019c8:	jmp    0x40197f
  4019ca:	test   ebx,ebx
  4019cc:	je     0x4018f8
  4019d2:	lea    rcx,[rip+0x2e797]        # 0x430170
  4019d9:	call   0x41d140
  4019de:	nop
  4019df:	nop
  4019e0:	push   rdi
  4019e1:	push   rsi
  4019e2:	push   rbx
  4019e3:	sub    rsp,0x30
  4019e7:	mov    rax,QWORD PTR [rcx]
  4019ea:	lea    rdx,[rsp+0x28]
  4019ef:	mov    rdi,rcx
  4019f2:	lea    rcx,[rax+0x1]
  4019f6:	call   0x41ce20
  4019fb:	mov    ecx,0x10
  401a00:	lea    rbx,[rax+0x1]
  401a04:	call   0x41a6e0
  401a09:	mov    rcx,QWORD PTR [rsp+0x28]
  401a0e:	mov    rsi,rax
  401a11:	mov    DWORD PTR [rax],ecx
  401a13:	call   0x41a6e0
  401a18:	mov    r8d,DWORD PTR [rsp+0x28]
  401a1d:	mov    rdx,rax
  401a20:	mov    rcx,rbx
  401a23:	mov    QWORD PTR [rsi+0x8],rax
  401a27:	call   0x41ce70
  401a2c:	mov    rax,QWORD PTR [rsp+0x28]
  401a31:	lea    rax,[rbx+rax*2]
  401a35:	mov    QWORD PTR [rdi],rax
  401a38:	mov    rax,rsi
  401a3b:	add    rsp,0x30
  401a3f:	pop    rbx
  401a40:	pop    rsi
  401a41:	pop    rdi
  401a42:	ret    
  401a43:	nop    DWORD PTR [rax]
  401a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a50:	push   rbx
  401a51:	sub    rsp,0x20
  401a55:	test   rcx,rcx
  401a58:	je     0x401a73
  401a5a:	mov    rbx,rcx
  401a5d:	mov    rcx,QWORD PTR [rcx+0x8]
  401a61:	call   0x42a6c8
  401a66:	mov    rcx,rbx
  401a69:	add    rsp,0x20
  401a6d:	pop    rbx
  401a6e:	jmp    0x42a6c8
  401a73:	add    rsp,0x20
  401a77:	pop    rbx
  401a78:	ret    
  401a79:	nop    DWORD PTR [rax+0x0]
  401a80:	push   rsi
  401a81:	push   rbx
  401a82:	sub    rsp,0x28
  401a86:	mov    eax,DWORD PTR [rcx]
  401a88:	mov    rbx,rcx
  401a8b:	lea    ecx,[rax+rax*1+0x1]
  401a8f:	movsxd rcx,ecx
  401a92:	call   0x41a6e0
  401a97:	mov    rcx,QWORD PTR [rbx+0x8]
  401a9b:	mov    r8d,DWORD PTR [rbx]
  401a9e:	mov    rsi,rax
  401aa1:	mov    rdx,rax
  401aa4:	call   0x41cef0
  401aa9:	mov    rax,rsi
  401aac:	add    rsp,0x28
  401ab0:	pop    rbx
  401ab1:	pop    rsi
  401ab2:	ret    
  401ab3:	nop    DWORD PTR [rax]
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	sub    rsp,0x28
  401ac4:	mov    rax,QWORD PTR [rip+0x44b95]        # 0x446660
  401acb:	mov    rax,QWORD PTR [rax]
  401ace:	mov    rax,QWORD PTR [rax+0x1c0]
  401ad5:	test   rax,rax
  401ad8:	je     0x401af0
  401ada:	call   rax
  401adc:	mov    rax,QWORD PTR [rax]
  401adf:	add    rsp,0x28
  401ae3:	rex.W jmp rax
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	mov    rax,QWORD PTR ds:0x0
  401af8:	ud2    
  401afa:	nop    WORD PTR [rax+rax*1+0x0]
  401b00:	sub    rsp,0x28
  401b04:	mov    rax,QWORD PTR [rip+0x44b55]        # 0x446660
  401b0b:	mov    rax,QWORD PTR [rax]
  401b0e:	mov    rax,QWORD PTR [rax+0x1c0]
  401b15:	test   rax,rax
  401b18:	je     0x401b30
  401b1a:	call   rax
  401b1c:	mov    rax,QWORD PTR [rax+0x8]
  401b20:	add    rsp,0x28
  401b24:	rex.W jmp rax
  401b27:	nop    WORD PTR [rax+rax*1+0x0]
  401b30:	mov    rax,QWORD PTR ds:0x8
  401b38:	ud2    
  401b3a:	nop    WORD PTR [rax+rax*1+0x0]
  401b40:	push   r15
  401b42:	push   r14
  401b44:	push   r13
  401b46:	push   r12
  401b48:	push   rbp
  401b49:	push   rdi
  401b4a:	push   rsi
  401b4b:	push   rbx
  401b4c:	sub    rsp,0x68
  401b50:	mov    r12,rcx
  401b53:	mov    ecx,DWORD PTR [rcx]
  401b55:	test   ecx,ecx
  401b57:	jne    0x401b90
  401b59:	mov    rdx,QWORD PTR [rip+0x44910]        # 0x446470
  401b60:	mov    eax,0x1
  401b65:	mov    edx,DWORD PTR [rdx]
  401b67:	test   edx,edx
  401b69:	jle    0x401b7f
  401b6b:	lea    rcx,[rip+0x2e6de]        # 0x430250
  401b72:	mov    DWORD PTR [rsp+0x20],eax
  401b76:	call   0x4017a0
  401b7b:	mov    eax,DWORD PTR [rsp+0x20]
  401b7f:	add    rsp,0x68
  401b83:	pop    rbx
  401b84:	pop    rsi
  401b85:	pop    rdi
  401b86:	pop    rbp
  401b87:	pop    r12
  401b89:	pop    r13
  401b8b:	pop    r14
  401b8d:	pop    r15
  401b8f:	ret    
  401b90:	mov    r13,QWORD PTR [rip+0x44ac9]        # 0x446660
  401b97:	mov    rbp,QWORD PTR [rip+0x448d2]        # 0x446470
  401b9e:	xor    edi,edi
  401ba0:	mov    r9,QWORD PTR [r12+0x8]
  401ba5:	mov    QWORD PTR [rip+0x4b4b0],0x0        # 0x44d060
  401bb0:	mov    QWORD PTR [rsp+0x20],r13
  401bb5:	mov    QWORD PTR [rsp+0x28],r13
  401bba:	mov    QWORD PTR [rsp+0x40],r13
  401bbf:	mov    QWORD PTR [rsp+0x30],r13
  401bc4:	mov    QWORD PTR [rsp+0x38],r13
  401bc9:	movsxd rax,edi
  401bcc:	movzx  esi,BYTE PTR [r9+rax*1]
  401bd1:	mov    eax,DWORD PTR [rbp+0x0]
  401bd4:	test   eax,eax
  401bd6:	jle    0x401beb
  401bd8:	lea    rcx,[rip+0x2e689]        # 0x430268
  401bdf:	movzx  edx,sil
  401be3:	mov    r8d,edi
  401be6:	call   0x4017a0
  401beb:	mov    ecx,0x28
  401bf0:	lea    r15d,[rdi+0x1]
  401bf4:	call   0x41a6e0
  401bf9:	mov    rbx,rax
  401bfc:	mov    DWORD PTR [rax],edi
  401bfe:	mov    rax,QWORD PTR [rip+0x4b46b]        # 0x44d070
  401c05:	cmp    sil,0x30
  401c09:	mov    DWORD PTR [rbx+0x10],0xffffffff
  401c10:	mov    DWORD PTR [rbx+0x18],0x0
  401c17:	mov    DWORD PTR [rbx+0x14],0x0
  401c1e:	mov    DWORD PTR [rip+0x4b440],0x0        # 0x44d068
  401c28:	mov    QWORD PTR [rbx+0x8],rax
  401c2c:	mov    rax,QWORD PTR [rip+0x4b42d]        # 0x44d060
  401c33:	mov    QWORD PTR [rip+0x4b426],rbx        # 0x44d060
  401c3a:	mov    QWORD PTR [rbx+0x20],rax
  401c3e:	ja     0x402700
  401c44:	lea    rax,[rip+0x2e809]        # 0x430454
  401c4b:	movzx  edx,sil
  401c4f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c53:	add    rax,rdx
  401c56:	jmp    rax
  401c58:	nop    DWORD PTR [rax+rax*1+0x0]
  401c60:	mov    r12d,DWORD PTR [rbp+0x0]
  401c64:	test   r12d,r12d
  401c67:	jle    0x402600
  401c6d:	lea    rcx,[rip+0x2e615]        # 0x430289
  401c74:	mov    edx,0x2e
  401c79:	call   0x4017a0
  401c7e:	mov    eax,0x5
  401c83:	jmp    0x401b7f
  401c88:	nop    DWORD PTR [rax+rax*1+0x0]
  401c90:	mov    rdx,QWORD PTR [r12+0x8]
  401c95:	lea    eax,[rdi+0x2]
  401c98:	movsxd r10,r15d
  401c9b:	cdqe   
  401c9d:	movzx  r14d,BYTE PTR [rdx+r10*1]
  401ca2:	movzx  ebx,BYTE PTR [rdx+rax*1]
  401ca6:	call   0x41a3c0
  401cab:	mov    r15,rax
  401cae:	mov    rax,QWORD PTR [r13+0x0]
  401cb2:	mov    rdx,QWORD PTR [rax+0x1c0]
  401cb9:	test   rdx,rdx
  401cbc:	je     0x4027b4
  401cc2:	shl    r14d,0x8
  401cc6:	add    edi,0x3
  401cc9:	call   rdx
  401ccb:	lea    edx,[r14+rbx*1]
  401ccf:	xor    ebx,ebx
  401cd1:	mov    rcx,r15
  401cd4:	call   QWORD PTR [rax+0xf0]
  401cda:	nop    WORD PTR [rax+rax*1+0x0]
  401ce0:	mov    edx,DWORD PTR [rip+0x4b382]        # 0x44d068
  401ce6:	test   edx,edx
  401ce8:	jne    0x40291a
  401cee:	mov    r11d,DWORD PTR [rbp+0x0]
  401cf2:	test   r11d,r11d
  401cf5:	jle    0x401d29
  401cf7:	cmp    sil,0x34
  401cfb:	lea    rdx,[rip+0x2e546]        # 0x430248
  401d02:	ja     0x401d1d
  401d04:	lea    rax,[rip+0x2ec75]        # 0x430980
  401d0b:	mov    rdx,QWORD PTR [rax+rsi*8]
  401d0f:	lea    rax,[rip+0x2e532]        # 0x430248
  401d16:	test   rdx,rdx
  401d19:	cmove  rdx,rax
  401d1d:	lea    rcx,[rip+0x2e6d9]        # 0x4303fd
  401d24:	call   0x4017a0
  401d29:	test   ebx,ebx
  401d2b:	jne    0x402822
  401d31:	mov    r9,QWORD PTR [r12+0x8]
  401d36:	jmp    0x401bc9
  401d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d40:	mov    r14,QWORD PTR [rip+0x44919]        # 0x446660
  401d47:	mov    rax,QWORD PTR [r14]
  401d4a:	mov    rax,QWORD PTR [rax+0x1c0]
  401d51:	test   rax,rax
  401d54:	je     0x4027fa
  401d5a:	call   rax
  401d5c:	mov    edi,r15d
  401d5f:	xor    ebx,ebx
  401d61:	call   QWORD PTR [rax+0xc0]
  401d67:	jmp    0x401ce0
  401d6c:	nop    DWORD PTR [rax+0x0]
  401d70:	mov    r9,QWORD PTR [r12+0x8]
  401d75:	movsxd r14,r15d
  401d78:	cmp    BYTE PTR [r9+r14*1],0x14
  401d7d:	je     0x402a3f
  401d83:	mov    rax,QWORD PTR [rsp+0x28]
  401d88:	mov    rax,QWORD PTR [rax]
  401d8b:	mov    rax,QWORD PTR [rax+0x1c0]
  401d92:	test   rax,rax
  401d95:	je     0x402989
  401d9b:	call   rax
  401d9d:	mov    edi,r15d
  401da0:	xor    ebx,ebx
  401da2:	call   QWORD PTR [rax+0xd8]
  401da8:	jmp    0x401ce0
  401dad:	nop    DWORD PTR [rax]
  401db0:	mov    r14d,DWORD PTR [rbp+0x0]
  401db4:	test   r14d,r14d
  401db7:	jle    0x401dc5
  401db9:	lea    rcx,[rip+0x2e572]        # 0x430332
  401dc0:	call   0x4017a0
  401dc5:	mov    r14,QWORD PTR [rip+0x44894]        # 0x446660
  401dcc:	mov    rax,QWORD PTR [r14]
  401dcf:	mov    rax,QWORD PTR [rax+0x1c0]
  401dd6:	test   rax,rax
  401dd9:	je     0x4027aa
  401ddf:	call   rax
  401de1:	mov    edi,r15d
  401de4:	mov    ecx,0x1
  401de9:	mov    ebx,0x1
  401dee:	call   QWORD PTR [rax+0xe0]
  401df4:	jmp    0x401ce0
  401df9:	nop    DWORD PTR [rax+0x0]
  401e00:	mov    r14,QWORD PTR [rip+0x44859]        # 0x446660
  401e07:	mov    rax,QWORD PTR [r14]
  401e0a:	mov    rax,QWORD PTR [rax+0x1c0]
  401e11:	test   rax,rax
  401e14:	je     0x402730
  401e1a:	call   rax
  401e1c:	call   QWORD PTR [rax+0xc8]
  401e22:	mov    rcx,QWORD PTR [r12+0x8]
  401e27:	movsxd r10,r15d
  401e2a:	lea    edx,[rdi+0x2]
  401e2d:	add    edi,0x3
  401e30:	movsxd rdx,edx
  401e33:	movzx  ebx,BYTE PTR [rcx+r10*1]
  401e38:	mov    eax,ebx
  401e3a:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  401e3e:	shl    eax,0x8
  401e41:	add    ebx,eax
  401e43:	mov    rax,QWORD PTR [r14]
  401e46:	mov    rax,QWORD PTR [rax+0x1c0]
  401e4d:	test   rax,rax
  401e50:	je     0x40274a
  401e56:	call   rax
  401e58:	mov    ecx,ebx
  401e5a:	xor    ebx,ebx
  401e5c:	call   QWORD PTR [rax+0xb8]
  401e62:	jmp    0x401ce0
  401e67:	nop    WORD PTR [rax+rax*1+0x0]
  401e70:	mov    rax,QWORD PTR [rsp+0x20]
  401e75:	mov    rax,QWORD PTR [rax]
  401e78:	mov    rax,QWORD PTR [rax+0x1c0]
  401e7f:	test   rax,rax
  401e82:	je     0x402730
  401e88:	call   rax
  401e8a:	call   QWORD PTR [rax+0xc8]
  401e90:	mov    rcx,QWORD PTR [r12+0x8]
  401e95:	movsxd r10,r15d
  401e98:	lea    edx,[rdi+0x2]
  401e9b:	add    edi,0x3
  401e9e:	movsxd rdx,edx
  401ea1:	movzx  ebx,BYTE PTR [rcx+r10*1]
  401ea6:	shl    ebx,0x8
  401ea9:	mov    eax,ebx
  401eab:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  401eaf:	add    ebx,eax
  401eb1:	call   0x41a370
  401eb6:	mov    r14,rax
  401eb9:	mov    rax,QWORD PTR [rsp+0x20]
  401ebe:	mov    rax,QWORD PTR [rax]
  401ec1:	mov    rdx,QWORD PTR [rax+0x1c0]
  401ec8:	test   rdx,rdx
  401ecb:	je     0x402818
  401ed1:	call   rdx
  401ed3:	mov    edx,ebx
  401ed5:	mov    rcx,r14
  401ed8:	xor    ebx,ebx
  401eda:	call   QWORD PTR [rax+0xe8]
  401ee0:	jmp    0x401ce0
  401ee5:	mov    r14,QWORD PTR [rip+0x44774]        # 0x446660
  401eec:	mov    rax,QWORD PTR [r14]
  401eef:	mov    rax,QWORD PTR [rax+0x1c0]
  401ef6:	test   rax,rax
  401ef9:	je     0x402730
  401eff:	call   rax
  401f01:	mov    edi,r15d
  401f04:	xor    ebx,ebx
  401f06:	call   QWORD PTR [rax+0xc8]
  401f0c:	jmp    0x401ce0
  401f11:	mov    r9,QWORD PTR [r12+0x8]
  401f16:	movsxd r10,r15d
  401f19:	add    edi,0x2
  401f1c:	movzx  ebx,BYTE PTR [r9+r10*1]
  401f21:	cmp    bl,0x3f
  401f24:	ja     0x402770
  401f2a:	mov    rax,QWORD PTR [rsp+0x38]
  401f2f:	mov    rax,QWORD PTR [rax]
  401f32:	mov    rax,QWORD PTR [rax+0x1c0]
  401f39:	test   rax,rax
  401f3c:	je     0x40296b
  401f42:	call   rax
  401f44:	movzx  ecx,bl
  401f47:	xor    ebx,ebx
  401f49:	call   QWORD PTR [rax+0xd0]
  401f4f:	jmp    0x401ce0
  401f54:	mov    r14,QWORD PTR [rip+0x44705]        # 0x446660
  401f5b:	mov    rax,QWORD PTR [r14]
  401f5e:	mov    rax,QWORD PTR [rax+0x1c0]
  401f65:	test   rax,rax
  401f68:	je     0x402730
  401f6e:	call   rax
  401f70:	call   QWORD PTR [rax+0xc8]
  401f76:	mov    rax,QWORD PTR [r12+0x8]
  401f7b:	movsxd r10,r15d
  401f7e:	lea    r8d,[rdi+0x8]
  401f82:	movzx  edx,BYTE PTR [rax+r10*1]
  401f87:	mov    rcx,rdx
  401f8a:	lea    edx,[rdi+0x2]
  401f8d:	shl    rcx,0x8
  401f91:	movsxd rdx,edx
  401f94:	movzx  edx,BYTE PTR [rax+rdx*1]
  401f98:	add    rdx,rcx
  401f9b:	mov    rcx,rdx
  401f9e:	lea    edx,[rdi+0x3]
  401fa1:	shl    rcx,0x8
  401fa5:	movsxd rdx,edx
  401fa8:	movzx  edx,BYTE PTR [rax+rdx*1]
  401fac:	add    rdx,rcx
  401faf:	mov    rcx,rdx
  401fb2:	lea    edx,[rdi+0x4]
  401fb5:	shl    rcx,0x8
  401fb9:	movsxd rdx,edx
  401fbc:	movzx  edx,BYTE PTR [rax+rdx*1]
  401fc0:	add    rdx,rcx
  401fc3:	mov    rcx,rdx
  401fc6:	lea    edx,[rdi+0x5]
  401fc9:	shl    rcx,0x8
  401fcd:	movsxd rdx,edx
  401fd0:	movzx  edx,BYTE PTR [rax+rdx*1]
  401fd4:	add    rdx,rcx
  401fd7:	mov    rcx,rdx
  401fda:	lea    edx,[rdi+0x6]
  401fdd:	shl    rcx,0x8
  401fe1:	movsxd rdx,edx
  401fe4:	movzx  edx,BYTE PTR [rax+rdx*1]
  401fe8:	add    rdx,rcx
  401feb:	mov    rcx,rdx
  401fee:	lea    edx,[rdi+0x7]
  401ff1:	add    edi,0x9
  401ff4:	shl    rcx,0x8
  401ff8:	movsxd rdx,edx
  401ffb:	movzx  edx,BYTE PTR [rax+rdx*1]
  401fff:	add    rdx,rcx
  402002:	movsxd rcx,r8d
  402005:	movzx  ebx,BYTE PTR [rax+rcx*1]
  402009:	mov    rax,QWORD PTR [r14]
  40200c:	shl    rdx,0x8
  402010:	mov    rax,QWORD PTR [rax+0x1c0]
  402017:	add    rbx,rdx
  40201a:	test   rax,rax
  40201d:	je     0x4020b2
  402023:	call   rax
  402025:	mov    rcx,rbx
  402028:	xor    ebx,ebx
  40202a:	call   QWORD PTR [rax+0xa8]
  402030:	jmp    0x401ce0
  402035:	mov    r14,QWORD PTR [rip+0x44624]        # 0x446660
  40203c:	mov    rax,QWORD PTR [r14]
  40203f:	mov    rax,QWORD PTR [rax+0x1c0]
  402046:	test   rax,rax
  402049:	je     0x402730
  40204f:	call   rax
  402051:	call   QWORD PTR [rax+0xc8]
  402057:	mov    rcx,QWORD PTR [r12+0x8]
  40205c:	movsxd r10,r15d
  40205f:	lea    r8d,[rdi+0x4]
  402063:	movzx  eax,BYTE PTR [rcx+r10*1]
  402068:	shl    rax,0x8
  40206c:	mov    rdx,rax
  40206f:	lea    eax,[rdi+0x2]
  402072:	cdqe   
  402074:	movzx  eax,BYTE PTR [rcx+rax*1]
  402078:	add    rax,rdx
  40207b:	shl    rax,0x8
  40207f:	mov    rdx,rax
  402082:	lea    eax,[rdi+0x3]
  402085:	add    edi,0x5
  402088:	cdqe   
  40208a:	movzx  eax,BYTE PTR [rcx+rax*1]
  40208e:	add    rax,rdx
  402091:	movsxd rdx,r8d
  402094:	shl    rax,0x8
  402098:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  40209c:	add    rbx,rax
  40209f:	mov    rax,QWORD PTR [r14]
  4020a2:	mov    rax,QWORD PTR [rax+0x1c0]
  4020a9:	test   rax,rax
  4020ac:	jne    0x402023
  4020b2:	mov    rax,QWORD PTR ds:0xa8
  4020ba:	ud2    
  4020bc:	nop    DWORD PTR [rax+0x0]
  4020c0:	mov    r14,QWORD PTR [rip+0x44599]        # 0x446660
  4020c7:	mov    rax,QWORD PTR [r14]
  4020ca:	mov    rax,QWORD PTR [rax+0x1c0]
  4020d1:	test   rax,rax
  4020d4:	je     0x4027c8
  4020da:	call   rax
  4020dc:	mov    edi,r15d
  4020df:	xor    ebx,ebx
  4020e1:	call   QWORD PTR [rax+0x58]
  4020e4:	jmp    0x401ce0
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	mov    r14,QWORD PTR [rip+0x44569]        # 0x446660
  4020f7:	mov    rax,QWORD PTR [r14]
  4020fa:	mov    rax,QWORD PTR [rax+0x1c0]
  402101:	test   rax,rax
  402104:	je     0x402782
  40210a:	call   rax
  40210c:	mov    edi,r15d
  40210f:	xor    ebx,ebx
  402111:	call   QWORD PTR [rax+0x50]
  402114:	jmp    0x401ce0
  402119:	nop    DWORD PTR [rax+0x0]
  402120:	mov    r14,QWORD PTR [rip+0x44539]        # 0x446660
  402127:	mov    rax,QWORD PTR [r14]
  40212a:	mov    rax,QWORD PTR [rax+0x1c0]
  402131:	test   rax,rax
  402134:	je     0x40278c
  40213a:	call   rax
  40213c:	mov    edi,r15d
  40213f:	xor    ebx,ebx
  402141:	call   QWORD PTR [rax+0x48]
  402144:	jmp    0x401ce0
  402149:	nop    DWORD PTR [rax+0x0]
  402150:	mov    r15d,DWORD PTR [rbp+0x0]
  402154:	test   r15d,r15d
  402157:	jle    0x402600
  40215d:	lea    rcx,[rip+0x2e125]        # 0x430289
  402164:	mov    edx,0xd
  402169:	call   0x4017a0
  40216e:	mov    eax,0x5
  402173:	jmp    0x401b7f
  402178:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	mov    eax,DWORD PTR [rbp+0x0]
  402183:	test   eax,eax
  402185:	jle    0x402600
  40218b:	lea    rcx,[rip+0x2e0f7]        # 0x430289
  402192:	mov    edx,0xc
  402197:	call   0x4017a0
  40219c:	mov    eax,0x5
  4021a1:	jmp    0x401b7f
  4021a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021b0:	mov    r14,QWORD PTR [rip+0x444a9]        # 0x446660
  4021b7:	mov    rax,QWORD PTR [r14]
  4021ba:	mov    rax,QWORD PTR [rax+0x1c0]
  4021c1:	test   rax,rax
  4021c4:	je     0x402796
  4021ca:	call   rax
  4021cc:	mov    edi,r15d
  4021cf:	xor    ebx,ebx
  4021d1:	call   QWORD PTR [rax+0x38]
  4021d4:	jmp    0x401ce0
  4021d9:	nop    DWORD PTR [rax+0x0]
  4021e0:	mov    r14,QWORD PTR [rip+0x44479]        # 0x446660
  4021e7:	mov    rax,QWORD PTR [r14]
  4021ea:	mov    rax,QWORD PTR [rax+0x1c0]
  4021f1:	test   rax,rax
  4021f4:	je     0x4027dc
  4021fa:	call   rax
  4021fc:	mov    edi,r15d
  4021ff:	xor    ebx,ebx
  402201:	call   QWORD PTR [rax+0x30]
  402204:	jmp    0x401ce0
  402209:	nop    DWORD PTR [rax+0x0]
  402210:	mov    r14,QWORD PTR [rip+0x44449]        # 0x446660
  402217:	mov    rax,QWORD PTR [r14]
  40221a:	mov    rax,QWORD PTR [rax+0x1c0]
  402221:	test   rax,rax
  402224:	je     0x402740
  40222a:	call   rax
  40222c:	mov    edi,r15d
  40222f:	mov    ecx,0x2
  402234:	xor    ebx,ebx
  402236:	call   QWORD PTR [rax+0x88]
  40223c:	jmp    0x401ce0
  402241:	mov    eax,DWORD PTR [rbp+0x0]
  402244:	test   eax,eax
  402246:	jle    0x402600
  40224c:	lea    rcx,[rip+0x2e036]        # 0x430289
  402253:	mov    edx,0x8
  402258:	call   0x4017a0
  40225d:	mov    eax,0x5
  402262:	jmp    0x401b7f
  402267:	nop    WORD PTR [rax+rax*1+0x0]
  402270:	mov    rcx,QWORD PTR [r12+0x8]
  402275:	movsxd r10,r15d
  402278:	mov    r14,QWORD PTR [rip+0x443e1]        # 0x446660
  40227f:	movzx  eax,BYTE PTR [rcx+r10*1]
  402284:	shl    eax,0x8
  402287:	mov    edx,eax
  402289:	lea    eax,[rdi+0x2]
  40228c:	cdqe   
  40228e:	movzx  eax,BYTE PTR [rcx+rax*1]
  402292:	add    eax,edx
  402294:	mov    DWORD PTR [rbx+0x10],eax
  402297:	mov    rax,QWORD PTR [r14]
  40229a:	mov    rax,QWORD PTR [rax+0x1c0]
  4022a1:	test   rax,rax
  4022a4:	je     0x4027d2
  4022aa:	call   rax
  4022ac:	add    edi,0x3
  4022af:	lea    rdx,[rbx+0x18]
  4022b3:	lea    rcx,[rbx+0x14]
  4022b7:	xor    ebx,ebx
  4022b9:	call   QWORD PTR [rax+0x98]
  4022bf:	jmp    0x401ce0
  4022c4:	mov    rcx,QWORD PTR [r12+0x8]
  4022c9:	movsxd r10,r15d
  4022cc:	mov    r14,QWORD PTR [rip+0x4438d]        # 0x446660
  4022d3:	movzx  eax,BYTE PTR [rcx+r10*1]
  4022d8:	shl    eax,0x8
  4022db:	mov    edx,eax
  4022dd:	lea    eax,[rdi+0x2]
  4022e0:	cdqe   
  4022e2:	movzx  eax,BYTE PTR [rcx+rax*1]
  4022e6:	add    eax,edx
  4022e8:	mov    DWORD PTR [rbx+0x10],eax
  4022eb:	mov    rax,QWORD PTR [r14]
  4022ee:	mov    rax,QWORD PTR [rax+0x1c0]
  4022f5:	test   rax,rax
  4022f8:	je     0x4027a0
  4022fe:	call   rax
  402300:	add    edi,0x3
  402303:	lea    rdx,[rbx+0x18]
  402307:	lea    rcx,[rbx+0x14]
  40230b:	xor    ebx,ebx
  40230d:	call   QWORD PTR [rax+0x90]
  402313:	jmp    0x401ce0
  402318:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	mov    r14,QWORD PTR [rip+0x44339]        # 0x446660
  402327:	mov    rax,QWORD PTR [r14]
  40232a:	mov    rax,QWORD PTR [rax+0x1c0]
  402331:	test   rax,rax
  402334:	je     0x402804
  40233a:	call   rax
  40233c:	mov    edi,r15d
  40233f:	xor    ebx,ebx
  402341:	call   QWORD PTR [rax+0x28]
  402344:	jmp    0x401ce0
  402349:	nop    DWORD PTR [rax+0x0]
  402350:	mov    r14,QWORD PTR [r12+0x8]
  402355:	movsxd r10,r15d
  402358:	movzx  eax,BYTE PTR [r14+r10*1]
  40235d:	mov    r9,r14
  402360:	cmp    al,0x20
  402362:	je     0x402bf0
  402368:	cmp    al,0xe
  40236a:	je     0x402c7d
  402370:	mov    r14,QWORD PTR [rip+0x442e9]        # 0x446660
  402377:	mov    rax,QWORD PTR [r14]
  40237a:	mov    rax,QWORD PTR [rax+0x1c0]
  402381:	test   rax,rax
  402384:	je     0x40297f
  40238a:	call   rax
  40238c:	mov    edi,r15d
  40238f:	xor    ebx,ebx
  402391:	call   QWORD PTR [rax+0x78]
  402394:	jmp    0x401ce0
  402399:	nop    DWORD PTR [rax+0x0]
  4023a0:	mov    r14,QWORD PTR [rip+0x442b9]        # 0x446660
  4023a7:	mov    rax,QWORD PTR [r14]
  4023aa:	mov    rax,QWORD PTR [rax+0x1c0]
  4023b1:	test   rax,rax
  4023b4:	je     0x402754
  4023ba:	call   rax
  4023bc:	mov    edi,r15d
  4023bf:	xor    ebx,ebx
  4023c1:	call   QWORD PTR [rax+0x20]
  4023c4:	jmp    0x401ce0
  4023c9:	nop    DWORD PTR [rax+0x0]
  4023d0:	mov    r14,QWORD PTR [rip+0x44289]        # 0x446660
  4023d7:	mov    rax,QWORD PTR [r14]
  4023da:	mov    rax,QWORD PTR [rax+0x1c0]
  4023e1:	test   rax,rax
  4023e4:	je     0x40275e
  4023ea:	call   rax
  4023ec:	mov    edi,r15d
  4023ef:	xor    ebx,ebx
  4023f1:	call   QWORD PTR [rax+0x10]
  4023f4:	jmp    0x401ce0
  4023f9:	nop    DWORD PTR [rax+0x0]
  402400:	mov    ebp,DWORD PTR [rbp+0x0]
  402403:	test   ebp,ebp
  402405:	jle    0x402600
  40240b:	lea    rcx,[rip+0x2de77]        # 0x430289
  402412:	movzx  edx,sil
  402416:	call   0x4017a0
  40241b:	mov    eax,0x5
  402420:	jmp    0x401b7f
  402425:	mov    r14,QWORD PTR [rip+0x44234]        # 0x446660
  40242c:	mov    rax,QWORD PTR [r14]
  40242f:	mov    rax,QWORD PTR [rax+0x1c0]
  402436:	test   rax,rax
  402439:	je     0x402730
  40243f:	call   rax
  402441:	call   QWORD PTR [rax+0xc8]
  402447:	mov    rcx,QWORD PTR [r12+0x8]
  40244c:	movsxd r10,r15d
  40244f:	lea    edx,[rdi+0x2]
  402452:	add    edi,0x3
  402455:	movsxd rdx,edx
  402458:	movzx  ebx,BYTE PTR [rcx+r10*1]
  40245d:	mov    rax,rbx
  402460:	shl    rax,0x8
  402464:	jmp    0x402098
  402469:	nop    DWORD PTR [rax+0x0]
  402470:	mov    r14,QWORD PTR [rip+0x441e9]        # 0x446660
  402477:	mov    rax,QWORD PTR [r14]
  40247a:	mov    rax,QWORD PTR [rax+0x1c0]
  402481:	test   rax,rax
  402484:	je     0x402730
  40248a:	call   rax
  40248c:	call   QWORD PTR [rax+0xc8]
  402492:	mov    rax,QWORD PTR [r12+0x8]
  402497:	movsxd r10,r15d
  40249a:	add    edi,0x2
  40249d:	movzx  ebx,BYTE PTR [rax+r10*1]
  4024a2:	mov    rax,QWORD PTR [r14]
  4024a5:	mov    rax,QWORD PTR [rax+0x1c0]
  4024ac:	test   rax,rax
  4024af:	jne    0x402023
  4024b5:	jmp    0x4020b2
  4024ba:	nop    WORD PTR [rax+rax*1+0x0]
  4024c0:	mov    r14,QWORD PTR [rip+0x44199]        # 0x446660
  4024c7:	mov    rax,QWORD PTR [r14]
  4024ca:	mov    rax,QWORD PTR [rax+0x1c0]
  4024d1:	test   rax,rax
  4024d4:	je     0x402740
  4024da:	call   rax
  4024dc:	mov    edi,r15d
  4024df:	mov    ecx,0x8
  4024e4:	xor    ebx,ebx
  4024e6:	call   QWORD PTR [rax+0x88]
  4024ec:	jmp    0x401ce0
  4024f1:	mov    r14,QWORD PTR [rip+0x44168]        # 0x446660
  4024f8:	mov    rax,QWORD PTR [r14]
  4024fb:	mov    rax,QWORD PTR [rax+0x1c0]
  402502:	test   rax,rax
  402505:	je     0x402740
  40250b:	call   rax
  40250d:	mov    edi,r15d
  402510:	mov    ecx,0x4
  402515:	xor    ebx,ebx
  402517:	call   QWORD PTR [rax+0x88]
  40251d:	jmp    0x401ce0
  402522:	mov    r9,QWORD PTR [r12+0x8]
  402527:	movsxd r10,r15d
  40252a:	add    edi,0x2
  40252d:	movzx  ebx,BYTE PTR [r9+r10*1]
  402532:	cmp    bl,0x3f
  402535:	ja     0x402770
  40253b:	mov    r14,QWORD PTR [rip+0x4411e]        # 0x446660
  402542:	mov    rax,QWORD PTR [r14]
  402545:	mov    rax,QWORD PTR [rax+0x1c0]
  40254c:	test   rax,rax
  40254f:	je     0x402961
  402555:	call   rax
  402557:	movzx  ecx,bl
  40255a:	xor    ebx,ebx
  40255c:	call   QWORD PTR [rax+0x40]
  40255f:	jmp    0x401ce0
  402564:	mov    r14,QWORD PTR [rip+0x440f5]        # 0x446660
  40256b:	mov    rax,QWORD PTR [r14]
  40256e:	mov    rax,QWORD PTR [rax+0x1c0]
  402575:	test   rax,rax
  402578:	je     0x4027e6
  40257e:	call   rax
  402580:	mov    edi,r15d
  402583:	xor    ebx,ebx
  402585:	call   QWORD PTR [rax+0x80]
  40258b:	jmp    0x401ce0
  402590:	mov    r14,QWORD PTR [rip+0x440c9]        # 0x446660
  402597:	mov    rax,QWORD PTR [r14]
  40259a:	mov    rax,QWORD PTR [rax+0x1c0]
  4025a1:	test   rax,rax
  4025a4:	je     0x402740
  4025aa:	call   rax
  4025ac:	mov    edi,r15d
  4025af:	mov    ecx,0x1
  4025b4:	xor    ebx,ebx
  4025b6:	call   QWORD PTR [rax+0x88]
  4025bc:	jmp    0x401ce0
  4025c1:	mov    eax,DWORD PTR [rbp+0x0]
  4025c4:	test   eax,eax
  4025c6:	jle    0x402600
  4025c8:	lea    rcx,[rip+0x2dcba]        # 0x430289
  4025cf:	mov    edx,0x6
  4025d4:	call   0x4017a0
  4025d9:	mov    eax,0x5
  4025de:	jmp    0x401b7f
  4025e3:	mov    eax,DWORD PTR [rbp+0x0]
  4025e6:	test   eax,eax
  4025e8:	jle    0x402600
  4025ea:	lea    rcx,[rip+0x2dc98]        # 0x430289
  4025f1:	mov    edx,0x5
  4025f6:	call   0x4017a0
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402600:	mov    eax,0x5
  402605:	jmp    0x401b7f
  40260a:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	mov    eax,DWORD PTR [rbp+0x0]
  402613:	test   eax,eax
  402615:	jle    0x402600
  402617:	lea    rcx,[rip+0x2dc6b]        # 0x430289
  40261e:	mov    edx,0x7
  402623:	call   0x4017a0
  402628:	mov    eax,0x5
  40262d:	jmp    0x401b7f
  402632:	mov    r14,QWORD PTR [rip+0x44027]        # 0x446660
  402639:	mov    rax,QWORD PTR [r14]
  40263c:	mov    rax,QWORD PTR [rax+0x1c0]
  402643:	test   rax,rax
  402646:	je     0x4027f0
  40264c:	call   rax
  40264e:	mov    edi,r15d
  402651:	xor    ebx,ebx
  402653:	call   QWORD PTR [rax+0x18]
  402656:	jmp    0x401ce0
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]
  402660:	mov    r14,QWORD PTR [rip+0x43ff9]        # 0x446660
  402667:	mov    rax,QWORD PTR [r14]
  40266a:	mov    rax,QWORD PTR [rax+0x1c0]
  402671:	test   rax,rax
  402674:	je     0x40280e
  40267a:	call   rax
  40267c:	mov    edi,r15d
  40267f:	xor    ebx,ebx
  402681:	call   QWORD PTR [rax+0x68]
  402684:	jmp    0x401ce0
  402689:	nop    DWORD PTR [rax+0x0]
  402690:	mov    rdx,QWORD PTR [r12+0x8]
  402695:	movsxd rcx,r15d
  402698:	movzx  eax,BYTE PTR [rdx+rcx*1]
  40269c:	cmp    al,0x20
  40269e:	je     0x402b46
  4026a4:	cmp    al,0xe
  4026a6:	mov    r14,QWORD PTR [rip+0x43fb3]        # 0x446660
  4026ad:	je     0x402993
  4026b3:	mov    rax,QWORD PTR [r14]
  4026b6:	mov    rax,QWORD PTR [rax+0x1c0]
  4026bd:	test   rax,rax
  4026c0:	je     0x402975
  4026c6:	call   rax
  4026c8:	mov    edi,r15d
  4026cb:	xor    ebx,ebx
  4026cd:	call   QWORD PTR [rax+0x70]
  4026d0:	jmp    0x401ce0
  4026d5:	mov    r14,QWORD PTR [rip+0x43f84]        # 0x446660
  4026dc:	mov    rax,QWORD PTR [r14]
  4026df:	mov    rax,QWORD PTR [rax+0x1c0]
  4026e6:	test   rax,rax
  4026e9:	je     0x4027be
  4026ef:	call   rax
  4026f1:	mov    edi,r15d
  4026f4:	xor    ebx,ebx
  4026f6:	call   QWORD PTR [rax+0x60]
  4026f9:	jmp    0x401ce0
  4026fe:	xchg   ax,ax
  402700:	mov    edi,DWORD PTR [rbp+0x0]
  402703:	mov    eax,0x6
  402708:	test   edi,edi
  40270a:	jle    0x401b7f
  402710:	lea    rcx,[rip+0x2dc91]        # 0x4303a8
  402717:	movzx  edx,sil
  40271b:	mov    DWORD PTR [rsp+0x20],eax
  40271f:	call   0x4017a0
  402724:	mov    eax,DWORD PTR [rsp+0x20]
  402728:	jmp    0x401b7f
  40272d:	nop    DWORD PTR [rax]
  402730:	mov    rax,QWORD PTR ds:0xc8
  402738:	ud2    
  40273a:	nop    WORD PTR [rax+rax*1+0x0]
  402740:	mov    rax,QWORD PTR ds:0x88
  402748:	ud2    
  40274a:	mov    rax,QWORD PTR ds:0xb8
  402752:	ud2    
  402754:	mov    rax,QWORD PTR ds:0x20
  40275c:	ud2    
  40275e:	mov    rax,QWORD PTR ds:0x10
  402766:	ud2    
  402768:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	mov    eax,DWORD PTR [rbp+0x0]
  402773:	xor    ebx,ebx
  402775:	test   eax,eax
  402777:	jg     0x401cf7
  40277d:	jmp    0x401bc9
  402782:	mov    rax,QWORD PTR ds:0x50
  40278a:	ud2    
  40278c:	mov    rax,QWORD PTR ds:0x48
  402794:	ud2    
  402796:	mov    rax,QWORD PTR ds:0x38
  40279e:	ud2    
  4027a0:	mov    rax,QWORD PTR ds:0x90
  4027a8:	ud2    
  4027aa:	mov    rax,QWORD PTR ds:0xe0
  4027b2:	ud2    
  4027b4:	mov    rax,QWORD PTR ds:0xf0
  4027bc:	ud2    
  4027be:	mov    rax,QWORD PTR ds:0x60
  4027c6:	ud2    
  4027c8:	mov    rax,QWORD PTR ds:0x58
  4027d0:	ud2    
  4027d2:	mov    rax,QWORD PTR ds:0x98
  4027da:	ud2    
  4027dc:	mov    rax,QWORD PTR ds:0x30
  4027e4:	ud2    
  4027e6:	mov    rax,QWORD PTR ds:0x80
  4027ee:	ud2    
  4027f0:	mov    rax,QWORD PTR ds:0x18
  4027f8:	ud2    
  4027fa:	mov    rax,QWORD PTR ds:0xc0
  402802:	ud2    
  402804:	mov    rax,QWORD PTR ds:0x28
  40280c:	ud2    
  40280e:	mov    rax,QWORD PTR ds:0x68
  402816:	ud2    
  402818:	mov    rax,QWORD PTR ds:0xe8
  402820:	ud2    
  402822:	mov    rsi,QWORD PTR [rip+0x4a837]        # 0x44d060
  402829:	mov    r12,QWORD PTR [rip+0x43e30]        # 0x446660
  402830:	test   rsi,rsi
  402833:	je     0x4028dd
  402839:	nop    DWORD PTR [rax+0x0]
  402840:	mov    edx,DWORD PTR [rsi+0x10]
  402843:	test   edx,edx
  402845:	js     0x4028d0
  40284b:	mov    rbx,QWORD PTR [rip+0x4a80e]        # 0x44d060
  402852:	test   rbx,rbx
  402855:	jne    0x402869
  402857:	jmp    0x4028e4
  40285c:	nop    DWORD PTR [rax+0x0]
  402860:	mov    rbx,QWORD PTR [rbx+0x20]
  402864:	test   rbx,rbx
  402867:	je     0x4028e4
  402869:	cmp    edx,DWORD PTR [rbx]
  40286b:	jne    0x402860
  40286d:	mov    r10d,DWORD PTR [rbp+0x0]
  402871:	test   r10d,r10d
  402874:	jle    0x40289d
  402876:	mov    rcx,QWORD PTR [rbx+0x8]
  40287a:	call   0x40e950
  40287f:	mov    rcx,QWORD PTR [rsi+0x8]
  402883:	mov    rdi,rax
  402886:	call   0x40e950
  40288b:	lea    rcx,[rip+0x2db7b]        # 0x43040d
  402892:	mov    rdx,rax
  402895:	mov    r8,rdi
  402898:	call   0x4017a0
  40289d:	mov    rax,QWORD PTR [r12]
  4028a1:	mov    r13,QWORD PTR [rbx+0x8]
  4028a5:	mov    r14d,DWORD PTR [rsi+0x18]
  4028a9:	mov    rbx,QWORD PTR [rsi+0x8]
  4028ad:	mov    edi,DWORD PTR [rsi+0x14]
  4028b0:	mov    rax,QWORD PTR [rax+0x1c0]
  4028b7:	test   rax,rax
  4028ba:	je     0x402910
  4028bc:	call   rax
  4028be:	movsxd rcx,edi
  4028c1:	mov    r8d,r14d
  4028c4:	mov    rdx,r13
  4028c7:	add    rcx,rbx
  4028ca:	call   QWORD PTR [rax+0xa0]
  4028d0:	mov    rsi,QWORD PTR [rsi+0x20]
  4028d4:	test   rsi,rsi
  4028d7:	jne    0x402840
  4028dd:	xor    eax,eax
  4028df:	jmp    0x401b7f
  4028e4:	mov    ecx,DWORD PTR [rbp+0x0]
  4028e7:	mov    eax,0x8
  4028ec:	test   ecx,ecx
  4028ee:	jle    0x401b7f
  4028f4:	lea    rcx,[rip+0x2db35]        # 0x430430
  4028fb:	call   0x4017a0
  402900:	mov    eax,0x8
  402905:	jmp    0x401b7f
  40290a:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	mov    rax,QWORD PTR ds:0xa0
  402918:	ud2    
  40291a:	mov    ebx,DWORD PTR [rbp+0x0]
  40291d:	test   ebx,ebx
  40291f:	jle    0x402600
  402925:	cmp    sil,0x34
  402929:	lea    r8,[rip+0x2d918]        # 0x430248
  402930:	ja     0x40294b
  402932:	lea    rax,[rip+0x2e047]        # 0x430980
  402939:	mov    r8,QWORD PTR [rax+rsi*8]
  40293d:	lea    rax,[rip+0x2d904]        # 0x430248
  402944:	test   r8,r8
  402947:	cmove  r8,rax
  40294b:	lea    rcx,[rip+0x2da86]        # 0x4303d8
  402952:	call   0x4017a0
  402957:	mov    eax,0x5
  40295c:	jmp    0x401b7f
  402961:	mov    rax,QWORD PTR ds:0x40
  402969:	ud2    
  40296b:	mov    rax,QWORD PTR ds:0xd0
  402973:	ud2    
  402975:	mov    rax,QWORD PTR ds:0x70
  40297d:	ud2    
  40297f:	mov    rax,QWORD PTR ds:0x78
  402987:	ud2    
  402989:	mov    rax,QWORD PTR ds:0xd8
  402991:	ud2    
  402993:	cmp    BYTE PTR [rdx+rcx*1+0x1],0x20
  402998:	jne    0x4026b3
  40299e:	mov    ecx,DWORD PTR [r12]
  4029a2:	lea    rdx,[r12+0x8]
  4029a7:	lea    r8d,[rdi+0x2]
  4029ab:	call   0x401740
  4029b0:	test   eax,eax
  4029b2:	jne    0x4026b3
  4029b8:	mov    rax,QWORD PTR [r14]
  4029bb:	mov    rax,QWORD PTR [rax+0x1c0]
  4029c2:	test   rax,rax
  4029c5:	je     0x402a35
  4029c7:	call   rax
  4029c9:	cmp    QWORD PTR [rax+0x100],0x0
  4029d1:	je     0x4026b3
  4029d7:	cmp    DWORD PTR [rbp+0x0],0x0
  4029db:	jle    0x4029e9
  4029dd:	lea    rcx,[rip+0x2d8dc]        # 0x4302c0
  4029e4:	call   0x4017a0
  4029e9:	lea    eax,[rdi+0x3]
  4029ec:	mov    rcx,QWORD PTR [r12+0x8]
  4029f1:	mov    DWORD PTR [rbx],eax
  4029f3:	cdqe   
  4029f5:	movzx  eax,BYTE PTR [rcx+rax*1]
  4029f9:	shl    eax,0x8
  4029fc:	mov    edx,eax
  4029fe:	lea    eax,[rdi+0x4]
  402a01:	cdqe   
  402a03:	movzx  eax,BYTE PTR [rcx+rax*1]
  402a07:	add    eax,edx
  402a09:	mov    DWORD PTR [rbx+0x10],eax
  402a0c:	mov    rax,QWORD PTR [r14]
  402a0f:	mov    rax,QWORD PTR [rax+0x1c0]
  402a16:	test   rax,rax
  402a19:	je     0x402a35
  402a1b:	call   rax
  402a1d:	add    edi,0x5
  402a20:	lea    rdx,[rbx+0x18]
  402a24:	lea    rcx,[rbx+0x14]
  402a28:	xor    ebx,ebx
  402a2a:	call   QWORD PTR [rax+0x100]
  402a30:	jmp    0x401ce0
  402a35:	mov    rax,QWORD PTR ds:0x100
  402a3d:	ud2    
  402a3f:	mov    eax,DWORD PTR [r12]
  402a43:	lea    rcx,[r12+0x8]
  402a48:	mov    r8d,r15d
  402a4b:	mov    QWORD PTR [rsp+0x58],r9
  402a50:	mov    QWORD PTR [rsp+0x50],rcx
  402a55:	mov    rdx,rcx
  402a58:	mov    ecx,eax
  402a5a:	mov    DWORD PTR [rsp+0x48],eax
  402a5e:	call   0x401740
  402a63:	test   eax,eax
  402a65:	mov    r9,QWORD PTR [rsp+0x58]
  402a6a:	jne    0x401d83
  402a70:	cmp    BYTE PTR [r9+r14*1+0x1],0x20
  402a76:	je     0x402d58
  402a7c:	cmp    BYTE PTR [r9+r14*1+0x1],0xe
  402a82:	jne    0x401d83
  402a88:	mov    rdx,QWORD PTR [rsp+0x50]
  402a8d:	mov    ecx,DWORD PTR [rsp+0x48]
  402a91:	lea    r8d,[rdi+0x2]
  402a95:	mov    QWORD PTR [rsp+0x58],r9
  402a9a:	call   0x401740
  402a9f:	test   eax,eax
  402aa1:	mov    r9,QWORD PTR [rsp+0x58]
  402aa6:	jne    0x401d83
  402aac:	cmp    BYTE PTR [r9+r14*1+0x2],0x20
  402ab2:	jne    0x401d83
  402ab8:	mov    rdx,QWORD PTR [rsp+0x50]
  402abd:	mov    ecx,DWORD PTR [rsp+0x48]
  402ac1:	lea    r8d,[rdi+0x3]
  402ac5:	call   0x401740
  402aca:	test   eax,eax
  402acc:	mov    r9,QWORD PTR [rsp+0x58]
  402ad1:	jne    0x401d83
  402ad7:	cmp    DWORD PTR [rbp+0x0],0x0
  402adb:	jle    0x402aee
  402add:	lea    rcx,[rip+0x2d88c]        # 0x430370
  402ae4:	call   0x4017a0
  402ae9:	mov    r9,QWORD PTR [r12+0x8]
  402aee:	lea    eax,[rdi+0x4]
  402af1:	mov    DWORD PTR [rbx],eax
  402af3:	cdqe   
  402af5:	movzx  eax,BYTE PTR [r9+rax*1]
  402afa:	shl    eax,0x8
  402afd:	mov    edx,eax
  402aff:	lea    eax,[rdi+0x5]
  402b02:	cdqe   
  402b04:	movzx  eax,BYTE PTR [r9+rax*1]
  402b09:	add    eax,edx
  402b0b:	mov    DWORD PTR [rbx+0x10],eax
  402b0e:	mov    rax,QWORD PTR [rsp+0x40]
  402b13:	mov    rax,QWORD PTR [rax]
  402b16:	mov    rax,QWORD PTR [rax+0x1c0]
  402b1d:	test   rax,rax
  402b20:	je     0x402b3c
  402b22:	call   rax
  402b24:	add    edi,0x6
  402b27:	lea    rdx,[rbx+0x18]
  402b2b:	lea    rcx,[rbx+0x14]
  402b2f:	xor    ebx,ebx
  402b31:	call   QWORD PTR [rax+0x110]
  402b37:	jmp    0x401ce0
  402b3c:	mov    rax,QWORD PTR ds:0x110
  402b44:	ud2    
  402b46:	mov    ecx,DWORD PTR [r12]
  402b4a:	lea    rdx,[r12+0x8]
  402b4f:	mov    r8d,r15d
  402b52:	call   0x401740
  402b57:	test   eax,eax
  402b59:	mov    r14,QWORD PTR [rip+0x43b00]        # 0x446660
  402b60:	jne    0x4026b3
  402b66:	mov    rax,QWORD PTR [r14]
  402b69:	mov    rax,QWORD PTR [rax+0x1c0]
  402b70:	test   rax,rax
  402b73:	je     0x402be6
  402b75:	call   rax
  402b77:	cmp    QWORD PTR [rax+0xf8],0x0
  402b7f:	je     0x4026b3
  402b85:	mov    r9d,DWORD PTR [rbp+0x0]
  402b89:	test   r9d,r9d
  402b8c:	jle    0x402b9a
  402b8e:	lea    rcx,[rip+0x2d70c]        # 0x4302a1
  402b95:	call   0x4017a0
  402b9a:	lea    eax,[rdi+0x2]
  402b9d:	mov    rcx,QWORD PTR [r12+0x8]
  402ba2:	mov    DWORD PTR [rbx],eax
  402ba4:	cdqe   
  402ba6:	movzx  eax,BYTE PTR [rcx+rax*1]
  402baa:	shl    eax,0x8
  402bad:	mov    edx,eax
  402baf:	lea    eax,[rdi+0x3]
  402bb2:	cdqe   
  402bb4:	movzx  eax,BYTE PTR [rcx+rax*1]
  402bb8:	add    eax,edx
  402bba:	mov    DWORD PTR [rbx+0x10],eax
  402bbd:	mov    rax,QWORD PTR [r14]
  402bc0:	mov    rax,QWORD PTR [rax+0x1c0]
  402bc7:	test   rax,rax
  402bca:	je     0x402be6
  402bcc:	call   rax
  402bce:	add    edi,0x4
  402bd1:	lea    rdx,[rbx+0x18]
  402bd5:	lea    rcx,[rbx+0x14]
  402bd9:	xor    ebx,ebx
  402bdb:	call   QWORD PTR [rax+0xf8]
  402be1:	jmp    0x401ce0
  402be6:	mov    rax,QWORD PTR ds:0xf8
  402bee:	ud2    
  402bf0:	mov    ecx,DWORD PTR [r12]
  402bf4:	lea    rdx,[r12+0x8]
  402bf9:	mov    r8d,r15d
  402bfc:	call   0x401740
  402c01:	test   eax,eax
  402c03:	jne    0x402370
  402c09:	mov    r8d,DWORD PTR [rbp+0x0]
  402c0d:	test   r8d,r8d
  402c10:	jle    0x402c23
  402c12:	lea    rcx,[rip+0x2d6cf]        # 0x4302e8
  402c19:	call   0x4017a0
  402c1e:	mov    r14,QWORD PTR [r12+0x8]
  402c23:	lea    eax,[rdi+0x2]
  402c26:	mov    DWORD PTR [rbx],eax
  402c28:	cdqe   
  402c2a:	movzx  eax,BYTE PTR [r14+rax*1]
  402c2f:	shl    eax,0x8
  402c32:	mov    edx,eax
  402c34:	lea    eax,[rdi+0x3]
  402c37:	cdqe   
  402c39:	movzx  eax,BYTE PTR [r14+rax*1]
  402c3e:	mov    r14,QWORD PTR [rip+0x43a1b]        # 0x446660
  402c45:	add    eax,edx
  402c47:	mov    DWORD PTR [rbx+0x10],eax
  402c4a:	mov    rax,QWORD PTR [r14]
  402c4d:	mov    rax,QWORD PTR [rax+0x1c0]
  402c54:	test   rax,rax
  402c57:	je     0x402c73
  402c59:	call   rax
  402c5b:	add    edi,0x4
  402c5e:	lea    rdx,[rbx+0x18]
  402c62:	lea    rcx,[rbx+0x14]
  402c66:	xor    ebx,ebx
  402c68:	call   QWORD PTR [rax+0x108]
  402c6e:	jmp    0x401ce0
  402c73:	mov    rax,QWORD PTR ds:0x108
  402c7b:	ud2    
  402c7d:	mov    r14d,DWORD PTR [r12]
  402c81:	lea    r11,[r12+0x8]
  402c86:	mov    r8d,r15d
  402c89:	mov    QWORD PTR [rsp+0x58],r9
  402c8e:	mov    QWORD PTR [rsp+0x50],r10
  402c93:	mov    rdx,r11
  402c96:	mov    QWORD PTR [rsp+0x48],r11
  402c9b:	mov    ecx,r14d
  402c9e:	call   0x401740
  402ca3:	test   eax,eax
  402ca5:	mov    r11,QWORD PTR [rsp+0x48]
  402caa:	mov    r10,QWORD PTR [rsp+0x50]
  402caf:	mov    r9,QWORD PTR [rsp+0x58]
  402cb4:	jne    0x402370
  402cba:	cmp    BYTE PTR [r9+r10*1+0x1],0x20
  402cc0:	jne    0x402370
  402cc6:	lea    r8d,[rdi+0x2]
  402cca:	mov    rdx,r11
  402ccd:	mov    ecx,r14d
  402cd0:	mov    QWORD PTR [rsp+0x48],r9
  402cd5:	call   0x401740
  402cda:	test   eax,eax
  402cdc:	mov    r9,QWORD PTR [rsp+0x48]
  402ce1:	jne    0x402370
  402ce7:	cmp    DWORD PTR [rbp+0x0],0x0
  402ceb:	jle    0x402cfe
  402ced:	lea    rcx,[rip+0x2d614]        # 0x430308
  402cf4:	call   0x4017a0
  402cf9:	mov    r9,QWORD PTR [r12+0x8]
  402cfe:	lea    eax,[rdi+0x3]
  402d01:	mov    r14,QWORD PTR [rip+0x43958]        # 0x446660
  402d08:	mov    DWORD PTR [rbx],eax
  402d0a:	cdqe   
  402d0c:	movzx  eax,BYTE PTR [r9+rax*1]
  402d11:	shl    eax,0x8
  402d14:	mov    edx,eax
  402d16:	lea    eax,[rdi+0x4]
  402d19:	cdqe   
  402d1b:	movzx  eax,BYTE PTR [r9+rax*1]
  402d20:	add    eax,edx
  402d22:	mov    DWORD PTR [rbx+0x10],eax
  402d25:	mov    rax,QWORD PTR [r14]
  402d28:	mov    rax,QWORD PTR [rax+0x1c0]
  402d2f:	test   rax,rax
  402d32:	je     0x402d4e
  402d34:	call   rax
  402d36:	add    edi,0x5
  402d39:	lea    rdx,[rbx+0x18]
  402d3d:	lea    rcx,[rbx+0x14]
  402d41:	xor    ebx,ebx
  402d43:	call   QWORD PTR [rax+0x120]
  402d49:	jmp    0x401ce0
  402d4e:	mov    rax,QWORD PTR ds:0x120
  402d56:	ud2    
  402d58:	mov    rdx,QWORD PTR [rsp+0x50]
  402d5d:	mov    ecx,DWORD PTR [rsp+0x48]
  402d61:	lea    r8d,[rdi+0x2]
  402d65:	call   0x401740
  402d6a:	test   eax,eax
  402d6c:	mov    r9,QWORD PTR [rsp+0x58]
  402d71:	jne    0x402a7c
  402d77:	cmp    DWORD PTR [rbp+0x0],0x0
  402d7b:	jle    0x402d8e
  402d7d:	lea    rcx,[rip+0x2d5c4]        # 0x430348
  402d84:	call   0x4017a0
  402d89:	mov    r9,QWORD PTR [r12+0x8]
  402d8e:	lea    eax,[rdi+0x3]
  402d91:	mov    DWORD PTR [rbx],eax
  402d93:	cdqe   
  402d95:	movzx  eax,BYTE PTR [r9+rax*1]
  402d9a:	shl    eax,0x8
  402d9d:	mov    edx,eax
  402d9f:	lea    eax,[rdi+0x4]
  402da2:	cdqe   
  402da4:	movzx  eax,BYTE PTR [r9+rax*1]
  402da9:	add    eax,edx
  402dab:	mov    DWORD PTR [rbx+0x10],eax
  402dae:	mov    rax,QWORD PTR [rsp+0x30]
  402db3:	mov    rax,QWORD PTR [rax]
  402db6:	mov    rax,QWORD PTR [rax+0x1c0]
  402dbd:	test   rax,rax
  402dc0:	je     0x402ddc
  402dc2:	call   rax
  402dc4:	add    edi,0x5
  402dc7:	lea    rdx,[rbx+0x18]
  402dcb:	lea    rcx,[rbx+0x14]
  402dcf:	xor    ebx,ebx
  402dd1:	call   QWORD PTR [rax+0x118]
  402dd7:	jmp    0x401ce0
  402ddc:	mov    rax,QWORD PTR ds:0x118
  402de4:	ud2    
  402de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402df0:	push   r15
  402df2:	push   r14
  402df4:	push   r13
  402df6:	push   r12
  402df8:	push   rbp
  402df9:	push   rdi
  402dfa:	push   rsi
  402dfb:	push   rbx
  402dfc:	sub    rsp,0x698
  402e03:	mov    edi,DWORD PTR [rdx]
  402e05:	mov    QWORD PTR [rsp+0x6e0],rcx
  402e0d:	mov    r13,rdx
  402e10:	mov    QWORD PTR [rsp+0x6f0],r8
  402e18:	test   edi,edi
  402e1a:	je     0x402e90
  402e1c:	mov    r14,QWORD PTR [rip+0x4364d]        # 0x446470
  402e23:	lea    rax,[rsp+0x370]
  402e2b:	lea    r12,[rip+0x2d88e]        # 0x4306c0
  402e32:	xor    esi,esi
  402e34:	xor    ebx,ebx
  402e36:	xor    ebp,ebp
  402e38:	mov    QWORD PTR [rsp+0x30],rax
  402e3d:	lea    rax,[rsp+0x40]
  402e42:	mov    edx,DWORD PTR [r14]
  402e45:	mov    QWORD PTR [rsp+0x28],rax
  402e4a:	nop    WORD PTR [rax+rax*1+0x0]
  402e50:	mov    rcx,QWORD PTR [r13+0x8]
  402e54:	movsxd rax,ebp
  402e57:	test   edx,edx
  402e59:	lea    r15d,[rbp+0x1]
  402e5d:	movzx  edi,BYTE PTR [rcx+rax*1]
  402e61:	jle    0x402e73
  402e63:	lea    rcx,[rip+0x2d6c5]        # 0x43052f
  402e6a:	movzx  edx,dil
  402e6e:	call   0x4017a0
  402e73:	cmp    dil,0x34
  402e77:	ja     0x4037c0
  402e7d:	movzx  eax,dil
  402e81:	movsxd rax,DWORD PTR [r12+rax*4]
  402e85:	add    rax,r12
  402e88:	jmp    rax
  402e8a:	nop    WORD PTR [rax+rax*1+0x0]
  402e90:	mov    rax,QWORD PTR [rip+0x435d9]        # 0x446470
  402e97:	mov    ebx,0x1
  402e9c:	mov    esi,DWORD PTR [rax]
  402e9e:	test   esi,esi
  402ea0:	jle    0x402eae
  402ea2:	lea    rcx,[rip+0x2d66f]        # 0x430518
  402ea9:	call   0x4017a0
  402eae:	mov    eax,ebx
  402eb0:	add    rsp,0x698
  402eb7:	pop    rbx
  402eb8:	pop    rsi
  402eb9:	pop    rdi
  402eba:	pop    rbp
  402ebb:	pop    r12
  402ebd:	pop    r13
  402ebf:	pop    r14
  402ec1:	pop    r15
  402ec3:	ret    
  402ec4:	mov    rax,QWORD PTR [r13+0x8]
  402ec8:	lea    ecx,[rbp+0x2]
  402ecb:	lea    r8d,[rbp+0x3]
  402ecf:	movsxd r10,r15d
  402ed2:	movsxd rcx,ecx
  402ed5:	movsxd r8,r8d
  402ed8:	movzx  r9d,BYTE PTR [rax+rcx*1]
  402edd:	movzx  edx,BYTE PTR [rax+r10*1]
  402ee2:	lea    r10d,[rbp+0x4]
  402ee6:	mov    ecx,r9d
  402ee9:	movzx  r9d,BYTE PTR [rax+r8*1]
  402eee:	shl    ecx,0x8
  402ef1:	add    r9d,ecx
  402ef4:	movsxd rcx,r10d
  402ef7:	add    rcx,rax
  402efa:	lea    eax,[rsi-0x1]
  402efd:	lea    ebp,[r10+r9*1]
  402f01:	cmp    eax,0xffffffff
  402f04:	je     0x402f0d
  402f06:	cdqe   
  402f08:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  402f0d:	sub    esi,0x2
  402f10:	js     0x402f1a
  402f12:	movsxd rax,esi
  402f15:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  402f1a:	test   edx,edx
  402f1c:	je     0x402f4c
  402f1e:	mov    r11,QWORD PTR [rsp+0x30]
  402f23:	mov    r8d,esi
  402f26:	mov    r10d,esi
  402f29:	sub    r8d,edx
  402f2c:	nop    DWORD PTR [rax+0x0]
  402f30:	sub    r10d,0x1
  402f34:	mov    QWORD PTR [r11],rbx
  402f37:	js     0x402f41
  402f39:	movsxd rax,r10d
  402f3c:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  402f41:	add    r11,0x8
  402f45:	cmp    r10d,r8d
  402f48:	jne    0x402f30
  402f4a:	sub    esi,edx
  402f4c:	movsxd r9,r9d
  402f4f:	cmp    BYTE PTR [rcx+r9*1-0x1],0x0
  402f55:	jne    0x4038a9
  402f5b:	mov    r8,QWORD PTR [rsp+0x30]
  402f60:	call   0x401800
  402f65:	jmp    0x402fb4
  402f67:	nop    WORD PTR [rax+rax*1+0x0]
  402f70:	mov    r8d,DWORD PTR [r14]
  402f73:	mov    ebx,0x5
  402f78:	test   r8d,r8d
  402f7b:	jle    0x402eae
  402f81:	lea    rcx,[rip+0x2d690]        # 0x430618
  402f88:	movzx  edx,dil
  402f8c:	call   0x4017a0
  402f91:	jmp    0x402eae
  402f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fa0:	sub    esi,0x1
  402fa3:	mov    ebp,r15d
  402fa6:	movsxd rax,esi
  402fa9:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  402fae:	sub    rax,rbx
  402fb1:	mov    rbx,rax
  402fb4:	cmp    esi,0x62
  402fb7:	jg     0x403179
  402fbd:	test   esi,esi
  402fbf:	js     0x40340f
  402fc5:	mov    edx,DWORD PTR [r14]
  402fc8:	test   edx,edx
  402fca:	jle    0x402e50
  402fd0:	xor    edx,edx
  402fd2:	mov    rcx,rbx
  402fd5:	call   0x41c6e0
  402fda:	cmp    dil,0x34
  402fde:	mov    r9,rax
  402fe1:	lea    rdx,[rip+0x2d260]        # 0x430248
  402fe8:	ja     0x403003
  402fea:	lea    rax,[rip+0x2d98f]        # 0x430980
  402ff1:	mov    rdx,QWORD PTR [rax+rdi*8]
  402ff5:	lea    rax,[rip+0x2d24c]        # 0x430248
  402ffc:	test   rdx,rdx
  402fff:	cmove  rdx,rax
  403003:	lea    rcx,[rip+0x2d69b]        # 0x4306a5
  40300a:	mov    r8d,esi
  40300d:	call   0x4017a0
  403012:	mov    edx,DWORD PTR [r14]
  403015:	jmp    0x402e50
  40301a:	nop    WORD PTR [rax+rax*1+0x0]
  403020:	sub    esi,0x1
  403023:	mov    ebp,r15d
  403026:	movsxd rax,esi
  403029:	imul   rbx,QWORD PTR [rsp+rax*8+0x50]
  40302f:	jmp    0x402fb4
  403031:	sub    esi,0x1
  403034:	mov    ebp,r15d
  403037:	movsxd rax,esi
  40303a:	add    rbx,QWORD PTR [rsp+rax*8+0x50]
  40303f:	jmp    0x402fb4
  403044:	test   rbx,rbx
  403047:	je     0x403881
  40304d:	sub    esi,0x1
  403050:	mov    ebp,r15d
  403053:	movsxd rax,esi
  403056:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  40305b:	cqo    
  40305d:	idiv   rbx
  403060:	mov    rbx,rax
  403063:	jmp    0x402fb4
  403068:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	test   rbx,rbx
  403073:	je     0x403881
  403079:	sub    esi,0x1
  40307c:	xor    edx,edx
  40307e:	mov    ebp,r15d
  403081:	movsxd rax,esi
  403084:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  403089:	div    rbx
  40308c:	mov    rbx,rax
  40308f:	jmp    0x402fb4
  403094:	test   rbx,rbx
  403097:	je     0x403881
  40309d:	sub    esi,0x1
  4030a0:	mov    ebp,r15d
  4030a3:	movsxd rax,esi
  4030a6:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  4030ab:	cqo    
  4030ad:	idiv   rbx
  4030b0:	mov    rbx,rdx
  4030b3:	jmp    0x402fb4
  4030b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030c0:	test   rbx,rbx
  4030c3:	je     0x403881
  4030c9:	sub    esi,0x1
  4030cc:	xor    edx,edx
  4030ce:	mov    ebp,r15d
  4030d1:	movsxd rax,esi
  4030d4:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  4030d9:	div    rbx
  4030dc:	mov    rbx,rdx
  4030df:	jmp    0x402fb4
  4030e4:	sub    esi,0x1
  4030e7:	mov    ecx,ebx
  4030e9:	mov    ebp,r15d
  4030ec:	movsxd rax,esi
  4030ef:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  4030f4:	shl    rax,cl
  4030f7:	mov    rbx,rax
  4030fa:	jmp    0x402fb4
  4030ff:	nop
  403100:	sub    esi,0x1
  403103:	mov    ecx,ebx
  403105:	mov    ebp,r15d
  403108:	movsxd rax,esi
  40310b:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  403110:	sar    rax,cl
  403113:	mov    rbx,rax
  403116:	jmp    0x402fb4
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]
  403120:	sub    esi,0x1
  403123:	mov    ecx,ebx
  403125:	mov    ebp,r15d
  403128:	movsxd rax,esi
  40312b:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  403130:	shr    rax,cl
  403133:	mov    rbx,rax
  403136:	jmp    0x402fb4
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]
  403140:	lea    eax,[rsi-0x1]
  403143:	mov    rcx,QWORD PTR [rsp+0x6e0]
  40314b:	xor    edx,edx
  40314d:	mov    r9,rbx
  403150:	cdqe   
  403152:	mov    r8,QWORD PTR [rsp+rax*8+0x50]
  403157:	call   0x419710
  40315c:	sub    esi,0x2
  40315f:	js     0x40340f
  403165:	movsxd rax,esi
  403168:	mov    ebp,r15d
  40316b:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  403170:	cmp    esi,0x62
  403173:	jle    0x402fc5
  403179:	mov    edx,DWORD PTR [r14]
  40317c:	mov    ebx,0x3
  403181:	test   edx,edx
  403183:	jle    0x402eae
  403189:	lea    rcx,[rip+0x2d4e0]        # 0x430670
  403190:	call   0x4017a0
  403195:	jmp    0x402eae
  40319a:	nop    WORD PTR [rax+rax*1+0x0]
  4031a0:	mov    rax,QWORD PTR [r13+0x8]
  4031a4:	movsxd r10,r15d
  4031a7:	mov    rcx,QWORD PTR [rsp+0x6e0]
  4031af:	mov    r8,rbx
  4031b2:	xor    edx,edx
  4031b4:	add    ebp,0x2
  4031b7:	movzx  r9d,BYTE PTR [rax+r10*1]
  4031bc:	call   0x419710
  4031c1:	jmp    0x403170
  4031c3:	test   rbx,rbx
  4031c6:	mov    ebp,r15d
  4031c9:	sete   bl
  4031cc:	movzx  ebx,bl
  4031cf:	jmp    0x403170
  4031d1:	movsxd rax,esi
  4031d4:	movsxd r10,r15d
  4031d7:	add    ebp,0x2
  4031da:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  4031df:	mov    rax,QWORD PTR [r13+0x8]
  4031e3:	add    esi,0x1
  4031e6:	movzx  ebx,BYTE PTR [rax+r10*1]
  4031eb:	jmp    0x403170
  4031ed:	nop    DWORD PTR [rax]
  4031f0:	mov    rcx,QWORD PTR [r13+0x8]
  4031f4:	movsxd rax,esi
  4031f7:	movsxd r10,r15d
  4031fa:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  4031ff:	lea    edx,[rbp+0x2]
  403202:	add    esi,0x1
  403205:	add    ebp,0x3
  403208:	movzx  ebx,BYTE PTR [rcx+r10*1]
  40320d:	movsxd rdx,edx
  403210:	mov    rax,rbx
  403213:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  403217:	shl    rax,0x8
  40321b:	add    rbx,rax
  40321e:	jmp    0x403170
  403223:	mov    rdx,QWORD PTR [r13+0x8]
  403227:	movsxd rax,esi
  40322a:	movsxd r10,r15d
  40322d:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  403232:	lea    eax,[rbp+0x2]
  403235:	lea    ecx,[rbp+0x4]
  403238:	add    esi,0x1
  40323b:	movzx  ebx,BYTE PTR [rdx+r10*1]
  403240:	cdqe   
  403242:	movsxd rcx,ecx
  403245:	movzx  eax,BYTE PTR [rdx+rax*1]
  403249:	shl    rbx,0x8
  40324d:	add    rbx,rax
  403250:	lea    eax,[rbp+0x3]
  403253:	add    ebp,0x5
  403256:	shl    rbx,0x8
  40325a:	cdqe   
  40325c:	movzx  eax,BYTE PTR [rdx+rax*1]
  403260:	add    rbx,rax
  403263:	mov    rax,rbx
  403266:	movzx  ebx,BYTE PTR [rdx+rcx*1]
  40326a:	shl    rax,0x8
  40326e:	add    rbx,rax
  403271:	jmp    0x403170
  403276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403280:	movsxd rax,esi
  403283:	lea    edx,[rbp+0x2]
  403286:	movsxd r10,r15d
  403289:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  40328e:	mov    rax,QWORD PTR [r13+0x8]
  403292:	lea    ecx,[rbp+0x8]
  403295:	movsxd rdx,edx
  403298:	add    esi,0x1
  40329b:	movsxd rcx,ecx
  40329e:	movzx  ebx,BYTE PTR [rax+r10*1]
  4032a3:	movzx  edx,BYTE PTR [rax+rdx*1]
  4032a7:	shl    rbx,0x8
  4032ab:	add    rbx,rdx
  4032ae:	lea    edx,[rbp+0x3]
  4032b1:	shl    rbx,0x8
  4032b5:	movsxd rdx,edx
  4032b8:	movzx  edx,BYTE PTR [rax+rdx*1]
  4032bc:	add    rbx,rdx
  4032bf:	lea    edx,[rbp+0x4]
  4032c2:	shl    rbx,0x8
  4032c6:	movsxd rdx,edx
  4032c9:	movzx  edx,BYTE PTR [rax+rdx*1]
  4032cd:	add    rbx,rdx
  4032d0:	lea    edx,[rbp+0x5]
  4032d3:	shl    rbx,0x8
  4032d7:	movsxd rdx,edx
  4032da:	movzx  edx,BYTE PTR [rax+rdx*1]
  4032de:	add    rbx,rdx
  4032e1:	lea    edx,[rbp+0x6]
  4032e4:	shl    rbx,0x8
  4032e8:	movsxd rdx,edx
  4032eb:	movzx  edx,BYTE PTR [rax+rdx*1]
  4032ef:	add    rbx,rdx
  4032f2:	lea    edx,[rbp+0x7]
  4032f5:	add    ebp,0x9
  4032f8:	shl    rbx,0x8
  4032fc:	movsxd rdx,edx
  4032ff:	movzx  edx,BYTE PTR [rax+rdx*1]
  403303:	add    rbx,rdx
  403306:	shl    rbx,0x8
  40330a:	mov    rdx,rbx
  40330d:	movzx  ebx,BYTE PTR [rax+rcx*1]
  403311:	add    rbx,rdx
  403314:	jmp    0x403170
  403319:	nop    DWORD PTR [rax+0x0]
  403320:	lea    eax,[rsi+0x1]
  403323:	mov    rdx,QWORD PTR [r13+0x8]
  403327:	movsxd rsi,esi
  40332a:	movsxd r10,r15d
  40332d:	mov    QWORD PTR [rsp+rsi*8+0x50],rbx
  403332:	mov    DWORD PTR [rsp+0x3c],eax
  403336:	lea    eax,[rbp+0x2]
  403339:	add    ebp,0x3
  40333c:	movzx  ebx,BYTE PTR [rdx+r10*1]
  403341:	cdqe   
  403343:	movzx  eax,BYTE PTR [rdx+rax*1]
  403347:	shl    ebx,0x8
  40334a:	add    ebx,eax
  40334c:	mov    rax,QWORD PTR [rsp+0x6e0]
  403354:	mov    edx,ebx
  403356:	mov    rsi,QWORD PTR [rax]
  403359:	mov    rcx,QWORD PTR [rsi]
  40335c:	call   0x404710
  403361:	cmp    eax,0x2
  403364:	je     0x40385d
  40336a:	jle    0x403823
  403370:	cmp    eax,0x4
  403373:	je     0x4037e5
  403379:	cmp    eax,0x8
  40337c:	jne    0x403845
  403382:	mov    r8,QWORD PTR [rsp+0x28]
  403387:	mov    edx,ebx
  403389:	mov    rcx,rsi
  40338c:	call   0x404930
  403391:	mov    rbx,QWORD PTR [rsp+0x40]
  403396:	mov    esi,DWORD PTR [rsp+0x3c]
  40339a:	jmp    0x403170
  40339f:	nop
  4033a0:	mov    r10d,DWORD PTR [r14]
  4033a3:	test   r10d,r10d
  4033a6:	jle    0x4033c1
  4033a8:	mov    rcx,rbx
  4033ab:	call   0x41c550
  4033b0:	lea    rcx,[rip+0x2d1d1]        # 0x430588
  4033b7:	mov    r8,rax
  4033ba:	mov    edx,esi
  4033bc:	call   0x4017a0
  4033c1:	cmp    QWORD PTR [rsp+0x6f0],0x0
  4033ca:	je     0x40387a
  4033d0:	test   esi,esi
  4033d2:	je     0x403801
  4033d8:	mov    rax,QWORD PTR [rsp+0x6f0]
  4033e0:	mov    QWORD PTR [rax],rbx
  4033e3:	xor    ebx,ebx
  4033e5:	jmp    0x402eae
  4033ea:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	movsxd rax,esi
  4033f3:	mov    ebp,r15d
  4033f6:	add    esi,0x1
  4033f9:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  4033fe:	jmp    0x403170
  403403:	sub    esi,0x1
  403406:	cmp    esi,0xffffffff
  403409:	jne    0x403165
  40340f:	mov    eax,DWORD PTR [r14]
  403412:	mov    ebx,0x4
  403417:	test   eax,eax
  403419:	jle    0x402eae
  40341f:	lea    rcx,[rip+0x2d264]        # 0x43068a
  403426:	call   0x4017a0
  40342b:	jmp    0x402eae
  403430:	mov    rax,QWORD PTR [r13+0x8]
  403434:	movsxd r10,r15d
  403437:	add    ebp,0x2
  40343a:	movzx  ecx,BYTE PTR [rax+r10*1]
  40343f:	cmp    cl,0x3f
  403442:	ja     0x403170
  403448:	mov    eax,0x1
  40344d:	shl    rax,cl
  403450:	sub    rax,0x1
  403454:	and    rbx,rax
  403457:	jmp    0x403170
  40345c:	nop    DWORD PTR [rax+0x0]
  403460:	movsxd rax,esi
  403463:	mov    ebp,r15d
  403466:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  40346b:	lea    eax,[rsi-0x1]
  40346e:	cdqe   
  403470:	mov    rdx,QWORD PTR [rsp+rax*8+0x50]
  403475:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  40347a:	mov    rbx,rdx
  40347d:	jmp    0x403170
  403482:	lea    eax,[rsi+0x1]
  403485:	mov    rdx,QWORD PTR [r13+0x8]
  403489:	movsxd r10,r15d
  40348c:	movsxd rsi,esi
  40348f:	mov    DWORD PTR [rsp+0x3c],eax
  403493:	lea    eax,[rbp+0x2]
  403496:	mov    QWORD PTR [rsp+rsi*8+0x50],rbx
  40349b:	movzx  ecx,BYTE PTR [rdx+r10*1]
  4034a0:	add    ebp,0x3
  4034a3:	cdqe   
  4034a5:	movzx  eax,BYTE PTR [rdx+rax*1]
  4034a9:	shl    ecx,0x8
  4034ac:	add    ecx,eax
  4034ae:	call   0x414fc0
  4034b3:	mov    esi,DWORD PTR [rsp+0x3c]
  4034b7:	mov    rbx,rax
  4034ba:	jmp    0x403170
  4034bf:	nop
  4034c0:	mov    rdx,QWORD PTR [r13+0x8]
  4034c4:	lea    eax,[rbp+0x2]
  4034c7:	movsxd r10,r15d
  4034ca:	add    ebp,0x3
  4034cd:	cdqe   
  4034cf:	movzx  ecx,BYTE PTR [rdx+r10*1]
  4034d4:	movzx  eax,BYTE PTR [rdx+rax*1]
  4034d8:	mov    rdx,rbx
  4034db:	shl    ecx,0x8
  4034de:	add    ecx,eax
  4034e0:	call   0x414fd0
  4034e5:	jmp    0x403170
  4034ea:	nop    WORD PTR [rax+rax*1+0x0]
  4034f0:	mov    rcx,QWORD PTR [r13+0x8]
  4034f4:	lea    eax,[rbp+0x2]
  4034f7:	movsxd r10,r15d
  4034fa:	add    ebp,0x3
  4034fd:	cdqe   
  4034ff:	movzx  edx,BYTE PTR [rcx+r10*1]
  403504:	movzx  eax,BYTE PTR [rcx+rax*1]
  403508:	mov    rcx,QWORD PTR [rsp+0x6e0]
  403510:	shl    edx,0x8
  403513:	add    edx,eax
  403515:	call   0x419840
  40351a:	jmp    0x403170
  40351f:	nop
  403520:	lea    eax,[rsi-0x1]
  403523:	mov    rcx,QWORD PTR [rsp+0x6e0]
  40352b:	xor    edx,edx
  40352d:	mov    r9,rbx
  403530:	cdqe   
  403532:	mov    r8,QWORD PTR [rsp+rax*8+0x50]
  403537:	call   0x419740
  40353c:	sub    esi,0x2
  40353f:	jns    0x403165
  403545:	jmp    0x40340f
  40354a:	nop    WORD PTR [rax+rax*1+0x0]
  403550:	mov    rax,QWORD PTR [r13+0x8]
  403554:	movsxd r10,r15d
  403557:	mov    ecx,esi
  403559:	movsxd rdx,esi
  40355c:	add    ebp,0x2
  40355f:	add    esi,0x1
  403562:	mov    QWORD PTR [rsp+rdx*8+0x50],rbx
  403567:	movzx  eax,BYTE PTR [rax+r10*1]
  40356c:	sub    ecx,eax
  40356e:	movsxd rax,ecx
  403571:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  403576:	jmp    0x403170
  40357b:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	lea    edx,[rsi-0x1]
  403583:	lea    eax,[rsi-0x2]
  403586:	mov    ebp,r15d
  403589:	movsxd rdx,edx
  40358c:	cdqe   
  40358e:	mov    rcx,QWORD PTR [rsp+rdx*8+0x50]
  403593:	mov    r8,QWORD PTR [rsp+rax*8+0x50]
  403598:	mov    QWORD PTR [rsp+rdx*8+0x50],r8
  40359d:	mov    QWORD PTR [rsp+rax*8+0x50],rbx
  4035a2:	mov    rbx,rcx
  4035a5:	jmp    0x403170
  4035aa:	nop    WORD PTR [rax+rax*1+0x0]
  4035b0:	sub    esi,0x1
  4035b3:	mov    ebp,r15d
  4035b6:	movsxd rax,esi
  4035b9:	cmp    QWORD PTR [rsp+rax*8+0x50],rbx
  4035be:	setb   bl
  4035c1:	movzx  ebx,bl
  4035c4:	jmp    0x402fb4
  4035c9:	nop    DWORD PTR [rax+0x0]
  4035d0:	mov    rax,QWORD PTR [r13+0x8]
  4035d4:	movsxd r10,r15d
  4035d7:	add    ebp,0x2
  4035da:	movzx  r8d,BYTE PTR [rax+r10*1]
  4035df:	cmp    r8b,0x3f
  4035e3:	ja     0x403170
  4035e9:	lea    ecx,[r8-0x1]
  4035ed:	mov    edx,0x1
  4035f2:	mov    eax,0x1
  4035f7:	shl    edx,cl
  4035f9:	mov    ecx,r8d
  4035fc:	shl    rax,cl
  4035ff:	movsxd rdx,edx
  403602:	sub    rax,0x1
  403606:	and    rbx,rax
  403609:	xor    rbx,rdx
  40360c:	sub    rbx,rdx
  40360f:	jmp    0x403170
  403614:	mov    rdx,QWORD PTR [rsp+0x28]
  403619:	mov    rcx,QWORD PTR [rsp+0x6e0]
  403621:	mov    r8,rbx
  403624:	mov    r9d,0x1
  40362a:	mov    ebp,r15d
  40362d:	call   0x419710
  403632:	movzx  ebx,BYTE PTR [rsp+0x40]
  403637:	jmp    0x403170
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	mov    rdx,QWORD PTR [rsp+0x28]
  403645:	mov    rcx,QWORD PTR [rsp+0x6e0]
  40364d:	mov    r8,rbx
  403650:	mov    r9d,0x2
  403656:	mov    ebp,r15d
  403659:	call   0x419710
  40365e:	movzx  ebx,WORD PTR [rsp+0x40]
  403663:	jmp    0x403170
  403668:	nop    DWORD PTR [rax+rax*1+0x0]
  403670:	mov    rdx,QWORD PTR [rsp+0x28]
  403675:	mov    rcx,QWORD PTR [rsp+0x6e0]
  40367d:	mov    r8,rbx
  403680:	mov    r9d,0x4
  403686:	mov    ebp,r15d
  403689:	call   0x419710
  40368e:	mov    ebx,DWORD PTR [rsp+0x40]
  403692:	jmp    0x403170
  403697:	nop    WORD PTR [rax+rax*1+0x0]
  4036a0:	mov    rdx,QWORD PTR [rsp+0x28]
  4036a5:	mov    rcx,QWORD PTR [rsp+0x6e0]
  4036ad:	mov    r8,rbx
  4036b0:	mov    r9d,0x8
  4036b6:	mov    ebp,r15d
  4036b9:	call   0x419710
  4036be:	mov    rbx,QWORD PTR [rsp+0x40]
  4036c3:	jmp    0x403170
  4036c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036d0:	add    ebp,0x3
  4036d3:	test   rbx,rbx
  4036d6:	je     0x4036f1
  4036d8:	mov    rdx,QWORD PTR [r13+0x8]
  4036dc:	movsxd r10,r15d
  4036df:	movzx  ebp,BYTE PTR [rdx+r10*1]
  4036e4:	mov    eax,ebp
  4036e6:	movzx  ebp,BYTE PTR [rdx+r10*1+0x1]
  4036ec:	shl    eax,0x8
  4036ef:	add    ebp,eax
  4036f1:	sub    esi,0x1
  4036f4:	cmp    esi,0xffffffff
  4036f7:	je     0x40340f
  4036fd:	movsxd rax,esi
  403700:	mov    rbx,QWORD PTR [rsp+rax*8+0x50]
  403705:	jmp    0x403170
  40370a:	nop    WORD PTR [rax+rax*1+0x0]
  403710:	mov    rdx,QWORD PTR [r13+0x8]
  403714:	movsxd r10,r15d
  403717:	movzx  ebp,BYTE PTR [rdx+r10*1]
  40371c:	mov    eax,ebp
  40371e:	movzx  ebp,BYTE PTR [rdx+r10*1+0x1]
  403724:	shl    eax,0x8
  403727:	add    ebp,eax
  403729:	jmp    0x403170
  40372e:	xchg   ax,ax
  403730:	sub    esi,0x1
  403733:	mov    ebp,r15d
  403736:	movsxd rax,esi
  403739:	xor    rbx,QWORD PTR [rsp+rax*8+0x50]
  40373e:	jmp    0x402fb4
  403743:	not    rbx
  403746:	mov    ebp,r15d
  403749:	jmp    0x403170
  40374e:	xchg   ax,ax
  403750:	sub    esi,0x1
  403753:	mov    ebp,r15d
  403756:	movsxd rax,esi
  403759:	cmp    QWORD PTR [rsp+rax*8+0x50],rbx
  40375e:	sete   bl
  403761:	movzx  ebx,bl
  403764:	jmp    0x402fb4
  403769:	nop    DWORD PTR [rax+0x0]
  403770:	sub    esi,0x1
  403773:	mov    ebp,r15d
  403776:	movsxd rax,esi
  403779:	cmp    QWORD PTR [rsp+rax*8+0x50],rbx
  40377e:	setl   bl
  403781:	movzx  ebx,bl
  403784:	jmp    0x402fb4
  403789:	nop    DWORD PTR [rax+0x0]
  403790:	sub    esi,0x1
  403793:	mov    ebp,r15d
  403796:	movsxd rax,esi
  403799:	and    rbx,QWORD PTR [rsp+rax*8+0x50]
  40379e:	jmp    0x402fb4
  4037a3:	sub    esi,0x1
  4037a6:	mov    ebp,r15d
  4037a9:	movsxd rax,esi
  4037ac:	or     rbx,QWORD PTR [rsp+rax*8+0x50]
  4037b1:	jmp    0x402fb4
  4037b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037c0:	mov    ecx,DWORD PTR [r14]
  4037c3:	mov    ebx,0x6
  4037c8:	test   ecx,ecx
  4037ca:	jle    0x402eae
  4037d0:	lea    rcx,[rip+0x2ce71]        # 0x430648
  4037d7:	movzx  edx,dil
  4037db:	call   0x4017a0
  4037e0:	jmp    0x402eae
  4037e5:	mov    r8,QWORD PTR [rsp+0x28]
  4037ea:	mov    edx,ebx
  4037ec:	mov    rcx,rsi
  4037ef:	call   0x404930
  4037f4:	mov    ebx,DWORD PTR [rsp+0x40]
  4037f8:	mov    esi,DWORD PTR [rsp+0x3c]
  4037fc:	jmp    0x403170
  403801:	mov    r9d,DWORD PTR [r14]
  403804:	mov    ebx,0x2
  403809:	test   r9d,r9d
  40380c:	jle    0x402eae
  403812:	lea    rcx,[rip+0x2cda7]        # 0x4305c0
  403819:	call   0x4017a0
  40381e:	jmp    0x402eae
  403823:	cmp    eax,0x1
  403826:	jne    0x403845
  403828:	mov    r8,QWORD PTR [rsp+0x28]
  40382d:	mov    edx,ebx
  40382f:	mov    rcx,rsi
  403832:	call   0x404930
  403837:	movzx  ebx,BYTE PTR [rsp+0x40]
  40383c:	mov    esi,DWORD PTR [rsp+0x3c]
  403840:	jmp    0x403170
  403845:	lea    r8,[rip+0x2cd1c]        # 0x430568
  40384c:	lea    rcx,[rip+0x2cd2d]        # 0x430580
  403853:	mov    edx,0x4ae
  403858:	call   0x41d170
  40385d:	mov    r8,QWORD PTR [rsp+0x28]
  403862:	mov    edx,ebx
  403864:	mov    rcx,rsi
  403867:	call   0x404930
  40386c:	movzx  ebx,WORD PTR [rsp+0x40]
  403871:	mov    esi,DWORD PTR [rsp+0x3c]
  403875:	jmp    0x403170
  40387a:	xor    ebx,ebx
  40387c:	jmp    0x402eae
  403881:	mov    r11d,DWORD PTR [r14]
  403884:	test   r11d,r11d
  403887:	jg     0x403893
  403889:	mov    ebx,0x7
  40388e:	jmp    0x402eae
  403893:	lea    rcx,[rip+0x2ccb2]        # 0x43054c
  40389a:	mov    ebx,0x7
  40389f:	call   0x4017a0
  4038a4:	jmp    0x402eae
  4038a9:	lea    rcx,[rip+0x2cd38]        # 0x4305e8
  4038b0:	call   0x41d140
  4038b5:	nop
  4038b6:	nop
  4038b7:	nop
  4038b8:	nop
  4038b9:	nop
  4038ba:	nop
  4038bb:	nop
  4038bc:	nop
  4038bd:	nop
  4038be:	nop
  4038bf:	nop
  4038c0:	mov    QWORD PTR [rip+0x497b9],rcx        # 0x44d080
  4038c7:	ret    
  4038c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038d0:	mov    rax,QWORD PTR [rcx+0x8]
  4038d4:	mov    QWORD PTR [rdx+0x10],0x0
  4038dc:	test   rax,rax
  4038df:	je     0x4038f0
  4038e1:	mov    QWORD PTR [rax+0x10],rdx
  4038e5:	mov    QWORD PTR [rcx+0x8],rdx
  4038e9:	ret    
  4038ea:	nop    WORD PTR [rax+rax*1+0x0]
  4038f0:	mov    QWORD PTR [rcx],rdx
  4038f3:	mov    QWORD PTR [rcx+0x8],rdx
  4038f7:	ret    
  4038f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403900:	push   rsi
  403901:	push   rbx
  403902:	sub    rsp,0x28
  403906:	mov    rcx,QWORD PTR [rcx]
  403909:	mov    rsi,rdx
  40390c:	test   rcx,rcx
  40390f:	je     0x40391f
  403911:	mov    rbx,QWORD PTR [rcx+0x10]
  403915:	call   rsi
  403917:	test   rbx,rbx
  40391a:	mov    rcx,rbx
  40391d:	jne    0x403911
  40391f:	add    rsp,0x28
  403923:	pop    rbx
  403924:	pop    rsi
  403925:	ret    
  403926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403930:	push   rdi
  403931:	push   rsi
  403932:	push   rbx
  403933:	sub    rsp,0x20
  403937:	mov    rcx,QWORD PTR [rcx]
  40393a:	mov    rdi,rdx
  40393d:	mov    rsi,r8
  403940:	test   rcx,rcx
  403943:	je     0x403956
  403945:	mov    rbx,QWORD PTR [rcx+0x10]
  403949:	mov    rdx,rsi
  40394c:	call   rdi
  40394e:	test   rbx,rbx
  403951:	mov    rcx,rbx
  403954:	jne    0x403945
  403956:	add    rsp,0x20
  40395a:	pop    rbx
  40395b:	pop    rsi
  40395c:	pop    rdi
  40395d:	ret    
  40395e:	xchg   ax,ax
  403960:	mov    r9,QWORD PTR [rcx]
  403963:	cmp    r9,rdx
  403966:	je     0x4039c0
  403968:	test   r9,r9
  40396b:	je     0x403994
  40396d:	mov    rax,QWORD PTR [r9+0x10]
  403971:	cmp    rax,rdx
  403974:	jne    0x40398f
  403976:	jmp    0x4039cf
  403978:	nop    DWORD PTR [rax+rax*1+0x0]
  403980:	mov    r8,QWORD PTR [rax+0x10]
  403984:	cmp    r8,rdx
  403987:	je     0x4039a0
  403989:	mov    r9,rax
  40398c:	mov    rax,r8
  40398f:	test   rax,rax
  403992:	jne    0x403980
  403994:	repz ret 
  403996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039a0:	lea    r10,[r9+0x10]
  4039a4:	cmp    QWORD PTR [rcx+0x8],rdx
  4039a8:	mov    r8,QWORD PTR [rdx+0x10]
  4039ac:	mov    QWORD PTR [rax+0x10],r8
  4039b0:	jne    0x403994
  4039b2:	mov    rax,QWORD PTR [r10]
  4039b5:	mov    QWORD PTR [rcx+0x8],rax
  4039b9:	ret    
  4039ba:	nop    WORD PTR [rax+rax*1+0x0]
  4039c0:	cmp    r9,QWORD PTR [rcx+0x8]
  4039c4:	mov    rax,QWORD PTR [r9+0x10]
  4039c8:	mov    QWORD PTR [rcx],rax
  4039cb:	je     0x4039b5
  4039cd:	repz ret 
  4039cf:	mov    r10,rcx
  4039d2:	mov    rax,r9
  4039d5:	jmp    0x4039a4
  4039d7:	nop    WORD PTR [rax+rax*1+0x0]
  4039e0:	push   rsi
  4039e1:	push   rbx
  4039e2:	sub    rsp,0x28
  4039e6:	mov    rbx,rcx
  4039e9:	mov    rsi,rdx
  4039ec:	mov    ecx,0x1
  4039f1:	mov    edx,0x60
  4039f6:	call   0x41a760
  4039fb:	mov    rdx,QWORD PTR [rbx]
  4039fe:	mov    rcx,QWORD PTR [rip+0x49693]        # 0x44d098
  403a05:	mov    DWORD PTR [rax+0x28],0x0
  403a0c:	mov    DWORD PTR [rax+0x30],0xb
  403a13:	mov    QWORD PTR [rax+0x10],0x0
  403a1b:	mov    QWORD PTR [rax],rdx
  403a1e:	mov    edx,DWORD PTR [rbx+0x8]
  403a21:	test   rcx,rcx
  403a24:	mov    DWORD PTR [rax+0x8],edx
  403a27:	je     0x403a62
  403a29:	mov    QWORD PTR [rcx+0x10],rax
  403a2d:	cmp    QWORD PTR [rip+0x4964b],0x0        # 0x44d080
  403a35:	mov    QWORD PTR [rip+0x4965c],rax        # 0x44d098
  403a3c:	je     0x403a50
  403a3e:	mov    QWORD PTR [rax+0x18],rsi
  403a42:	add    rsp,0x28
  403a46:	pop    rbx
  403a47:	pop    rsi
  403a48:	ret    
  403a49:	nop    DWORD PTR [rax+0x0]
  403a50:	mov    QWORD PTR [rip+0x49629],rax        # 0x44d080
  403a57:	mov    QWORD PTR [rax+0x18],rsi
  403a5b:	add    rsp,0x28
  403a5f:	pop    rbx
  403a60:	pop    rsi
  403a61:	ret    
  403a62:	mov    QWORD PTR [rip+0x49627],rax        # 0x44d090
  403a69:	jmp    0x403a2d
  403a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a70:	mov    rax,rcx
  403a73:	mov    rcx,QWORD PTR [rdx]
  403a76:	mov    edx,DWORD PTR [rdx+0x8]
  403a79:	mov    QWORD PTR [rax],rcx
  403a7c:	mov    DWORD PTR [rax+0x8],edx
  403a7f:	ret    
  403a80:	mov    rax,QWORD PTR [rip+0x49609]        # 0x44d090
  403a87:	ret    
  403a88:	nop    DWORD PTR [rax+rax*1+0x0]
  403a90:	push   rbp
  403a91:	push   rdi
  403a92:	push   rsi
  403a93:	push   rbx
  403a94:	sub    rsp,0x38
  403a98:	mov    rbx,QWORD PTR [rip+0x495f1]        # 0x44d090
  403a9f:	mov    ebp,ecx
  403aa1:	lea    rdi,[rsp+0x20]
  403aa6:	test   rbx,rbx
  403aa9:	jne    0x403ab8
  403aab:	jmp    0x403ae3
  403aad:	nop    DWORD PTR [rax]
  403ab0:	test   rsi,rsi
  403ab3:	mov    rbx,rsi
  403ab6:	je     0x403ae3
  403ab8:	mov    rax,QWORD PTR [rbx]
  403abb:	mov    rsi,QWORD PTR [rbx+0x10]
  403abf:	mov    rcx,rdi
  403ac2:	mov    QWORD PTR [rsp+0x20],rax
  403ac7:	mov    eax,DWORD PTR [rbx+0x8]
  403aca:	mov    DWORD PTR [rsp+0x28],eax
  403ace:	call   0x41ad20
  403ad3:	cmp    eax,ebp
  403ad5:	jne    0x403ab0
  403ad7:	mov    rax,rbx
  403ada:	add    rsp,0x38
  403ade:	pop    rbx
  403adf:	pop    rsi
  403ae0:	pop    rdi
  403ae1:	pop    rbp
  403ae2:	ret    
  403ae3:	xor    eax,eax
  403ae5:	add    rsp,0x38
  403ae9:	pop    rbx
  403aea:	pop    rsi
  403aeb:	pop    rdi
  403aec:	pop    rbp
  403aed:	ret    
  403aee:	xchg   ax,ax
  403af0:	push   rbx
  403af1:	sub    rsp,0x30
  403af5:	mov    rbx,rcx
  403af8:	mov    rcx,QWORD PTR [rcx+0x58]
  403afc:	test   rcx,rcx
  403aff:	je     0x403b11
  403b01:	mov    rax,QWORD PTR [rip+0x42b58]        # 0x446660
  403b08:	mov    rax,QWORD PTR [rax]
  403b0b:	call   QWORD PTR [rax+0x1f8]
  403b11:	mov    rax,QWORD PTR [rbx]
  403b14:	lea    rcx,[rsp+0x20]
  403b19:	mov    QWORD PTR [rsp+0x20],rax
  403b1e:	mov    eax,DWORD PTR [rbx+0x8]
  403b21:	mov    DWORD PTR [rsp+0x28],eax
  403b25:	call   0x40b370
  403b2a:	lea    rcx,[rip+0x4955f]        # 0x44d090
  403b31:	mov    rdx,rbx
  403b34:	call   0x403960
  403b39:	mov    rcx,QWORD PTR [rbx+0x20]
  403b3d:	call   0x4043a0
  403b42:	mov    rcx,rbx
  403b45:	call   0x42a6c8
  403b4a:	cmp    QWORD PTR [rip+0x4952f],rbx        # 0x44d080
  403b51:	je     0x403b60
  403b53:	add    rsp,0x30
  403b57:	pop    rbx
  403b58:	ret    
  403b59:	nop    DWORD PTR [rax+0x0]
  403b60:	mov    QWORD PTR [rip+0x49515],0x0        # 0x44d080
  403b6b:	add    rsp,0x30
  403b6f:	pop    rbx
  403b70:	ret    
  403b71:	nop    DWORD PTR [rax+rax*1+0x0]
  403b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b80:	mov    rax,QWORD PTR [rcx]
  403b83:	ret    
  403b84:	xchg   ax,ax
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b90:	push   rbp
  403b91:	push   rdi
  403b92:	push   rsi
  403b93:	push   rbx
  403b94:	sub    rsp,0x28
  403b98:	mov    rbx,QWORD PTR [rcx]
  403b9b:	mov    rbp,rdx
  403b9e:	mov    rdi,r8
  403ba1:	test   rbx,rbx
  403ba4:	jne    0x403bb8
  403ba6:	jmp    0x403bd4
  403ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bb0:	test   rsi,rsi
  403bb3:	mov    rbx,rsi
  403bb6:	je     0x403bd4
  403bb8:	mov    rsi,QWORD PTR [rbx+0x10]
  403bbc:	mov    rdx,rdi
  403bbf:	mov    rcx,rbx
  403bc2:	call   rbp
  403bc4:	test   eax,eax
  403bc6:	je     0x403bb0
  403bc8:	mov    rax,rbx
  403bcb:	add    rsp,0x28
  403bcf:	pop    rbx
  403bd0:	pop    rsi
  403bd1:	pop    rdi
  403bd2:	pop    rbp
  403bd3:	ret    
  403bd4:	xor    eax,eax
  403bd6:	add    rsp,0x28
  403bda:	pop    rbx
  403bdb:	pop    rsi
  403bdc:	pop    rdi
  403bdd:	pop    rbp
  403bde:	ret    
  403bdf:	nop
  403be0:	push   rbp
  403be1:	push   rdi
  403be2:	push   rsi
  403be3:	push   rbx
  403be4:	sub    rsp,0x48
  403be8:	mov    rbx,QWORD PTR [rcx]
  403beb:	mov    rsi,rdx
  403bee:	lea    rbp,[rsp+0x20]
  403bf3:	lea    rdi,[rsp+0x30]
  403bf8:	test   rbx,rbx
  403bfb:	jne    0x403c09
  403bfd:	jmp    0x403c42
  403bff:	nop
  403c00:	mov    rbx,QWORD PTR [rbx+0x10]
  403c04:	test   rbx,rbx
  403c07:	je     0x403c42
  403c09:	mov    rax,QWORD PTR [rbx]
  403c0c:	mov    rdx,rbp
  403c0f:	mov    rcx,rdi
  403c12:	mov    QWORD PTR [rsp+0x30],rax
  403c17:	mov    eax,DWORD PTR [rbx+0x8]
  403c1a:	mov    DWORD PTR [rsp+0x38],eax
  403c1e:	mov    rax,QWORD PTR [rsi]
  403c21:	mov    QWORD PTR [rsp+0x20],rax
  403c26:	mov    eax,DWORD PTR [rsi+0x8]
  403c29:	mov    DWORD PTR [rsp+0x28],eax
  403c2d:	call   0x41ad50
  403c32:	test   eax,eax
  403c34:	je     0x403c00
  403c36:	mov    rax,rbx
  403c39:	add    rsp,0x48
  403c3d:	pop    rbx
  403c3e:	pop    rsi
  403c3f:	pop    rdi
  403c40:	pop    rbp
  403c41:	ret    
  403c42:	xor    eax,eax
  403c44:	add    rsp,0x48
  403c48:	pop    rbx
  403c49:	pop    rsi
  403c4a:	pop    rdi
  403c4b:	pop    rbp
  403c4c:	ret    
  403c4d:	nop    DWORD PTR [rax]
  403c50:	sub    rsp,0x38
  403c54:	mov    rax,QWORD PTR [rcx]
  403c57:	lea    rdx,[rsp+0x20]
  403c5c:	mov    QWORD PTR [rsp+0x20],rax
  403c61:	mov    eax,DWORD PTR [rcx+0x8]
  403c64:	lea    rcx,[rip+0x49425]        # 0x44d090
  403c6b:	mov    DWORD PTR [rsp+0x28],eax
  403c6f:	call   0x403be0
  403c74:	add    rsp,0x38
  403c78:	ret    
  403c79:	nop    DWORD PTR [rax+0x0]
  403c80:	push   rbx
  403c81:	sub    rsp,0x40
  403c85:	mov    eax,DWORD PTR [rdx+0x8]
  403c88:	mov    rbx,rcx
  403c8b:	mov    rcx,QWORD PTR [rdx]
  403c8e:	lea    rdx,[rsp+0x20]
  403c93:	mov    DWORD PTR [rsp+0x38],eax
  403c97:	mov    DWORD PTR [rsp+0x28],eax
  403c9b:	mov    QWORD PTR [rsp+0x30],rcx
  403ca0:	mov    QWORD PTR [rsp+0x20],rcx
  403ca5:	lea    rcx,[rip+0x493e4]        # 0x44d090
  403cac:	call   0x403be0
  403cb1:	test   rax,rax
  403cb4:	cmove  rax,QWORD PTR [rip+0x428d4]        # 0x446590
  403cbc:	mov    rdx,rax
  403cbf:	mov    rax,QWORD PTR [rax]
  403cc2:	mov    QWORD PTR [rbx],rax
  403cc5:	mov    eax,DWORD PTR [rdx+0x8]
  403cc8:	mov    DWORD PTR [rbx+0x8],eax
  403ccb:	mov    rax,rbx
  403cce:	add    rsp,0x40
  403cd2:	pop    rbx
  403cd3:	ret    
  403cd4:	xchg   ax,ax
  403cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ce0:	mov    rax,QWORD PTR [rcx+0x18]
  403ce4:	ret    
  403ce5:	nop
  403ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cf0:	mov    QWORD PTR [rcx+0x18],rdx
  403cf4:	ret    
  403cf5:	nop
  403cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d00:	mov    rax,QWORD PTR [rcx+0x20]
  403d04:	ret    
  403d05:	nop
  403d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d10:	mov    QWORD PTR [rcx+0x20],rdx
  403d14:	ret    
  403d15:	nop
  403d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d20:	mov    rax,QWORD PTR [rcx]
  403d23:	test   rax,rax
  403d26:	je     0x403d33
  403d28:	cmp    rax,QWORD PTR [rcx+0x8]
  403d2c:	sete   al
  403d2f:	movzx  eax,al
  403d32:	ret    
  403d33:	xor    eax,eax
  403d35:	ret    
  403d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d40:	mov    QWORD PTR [rcx],0x0
  403d47:	mov    QWORD PTR [rcx+0x8],0x0
  403d4f:	ret    
  403d50:	push   rsi
  403d51:	push   rbx
  403d52:	sub    rsp,0x28
  403d56:	mov    rbx,QWORD PTR [rip+0x49333]        # 0x44d090
  403d5d:	test   rbx,rbx
  403d60:	je     0x403d7f
  403d62:	mov    rcx,QWORD PTR [rbx+0x20]
  403d66:	mov    rsi,QWORD PTR [rbx+0x10]
  403d6a:	call   0x4043a0
  403d6f:	mov    rcx,rbx
  403d72:	mov    rbx,rsi
  403d75:	call   0x42a6c8
  403d7a:	test   rsi,rsi
  403d7d:	jne    0x403d62
  403d7f:	mov    QWORD PTR [rip+0x49306],0x0        # 0x44d090
  403d8a:	mov    QWORD PTR [rip+0x49303],0x0        # 0x44d098
  403d95:	call   0x41bff0
  403d9a:	mov    QWORD PTR [rip+0x492db],0x0        # 0x44d080
  403da5:	add    rsp,0x28
  403da9:	pop    rbx
  403daa:	pop    rsi
  403dab:	ret    
  403dac:	nop    DWORD PTR [rax+0x0]
  403db0:	push   rdi
  403db1:	push   rsi
  403db2:	push   rbx
  403db3:	sub    rsp,0x30
  403db7:	mov    edi,ecx
  403db9:	mov    esi,edx
  403dbb:	mov    ecx,0x1
  403dc0:	mov    edx,0x58
  403dc5:	call   0x41a760
  403dca:	lea    rcx,[rsp+0x20]
  403dcf:	mov    edx,edi
  403dd1:	mov    rbx,rax
  403dd4:	call   0x41ad00
  403dd9:	mov    rax,QWORD PTR [rsp+0x20]
  403dde:	mov    DWORD PTR [rbx+0x18],esi
  403de1:	mov    QWORD PTR [rbx+0x10],0x0
  403de9:	mov    QWORD PTR [rbx],rax
  403dec:	mov    eax,DWORD PTR [rsp+0x28]
  403df0:	mov    DWORD PTR [rbx+0x8],eax
  403df3:	mov    rax,QWORD PTR [rip+0x492ae]        # 0x44d0a8
  403dfa:	test   rax,rax
  403dfd:	je     0x403e15
  403dff:	mov    QWORD PTR [rax+0x10],rbx
  403e03:	mov    rax,rbx
  403e06:	mov    QWORD PTR [rip+0x4929b],rbx        # 0x44d0a8
  403e0d:	add    rsp,0x30
  403e11:	pop    rbx
  403e12:	pop    rsi
  403e13:	pop    rdi
  403e14:	ret    
  403e15:	mov    QWORD PTR [rip+0x49284],rbx        # 0x44d0a0
  403e1c:	jmp    0x403e03
  403e1e:	xchg   ax,ax
  403e20:	push   rbp
  403e21:	push   rdi
  403e22:	push   rsi
  403e23:	push   rbx
  403e24:	sub    rsp,0x48
  403e28:	mov    rbp,rcx
  403e2b:	lea    rcx,[rcx+0x20]
  403e2f:	lea    rsi,[rsp+0x30]
  403e34:	call   0x4066e0
  403e39:	mov    rcx,rbp
  403e3c:	call   0x411280
  403e41:	mov    rax,QWORD PTR [rbp+0x0]
  403e45:	mov    rcx,rsi
  403e48:	mov    QWORD PTR [rsp+0x30],rax
  403e4d:	mov    eax,DWORD PTR [rbp+0x8]
  403e50:	mov    DWORD PTR [rsp+0x38],eax
  403e54:	call   0x41ad20
  403e59:	mov    r8,QWORD PTR [rip+0x49230]        # 0x44d090
  403e60:	mov    edi,eax
  403e62:	test   r8,r8
  403e65:	jne    0x403e78
  403e67:	jmp    0x403ec4
  403e69:	nop    DWORD PTR [rax+0x0]
  403e70:	test   rbx,rbx
  403e73:	mov    r8,rbx
  403e76:	je     0x403ec4
  403e78:	mov    r9,QWORD PTR [r8]
  403e7b:	mov    rbx,QWORD PTR [r8+0x10]
  403e7f:	mov    rcx,rsi
  403e82:	mov    QWORD PTR [rsp+0x30],r9
  403e87:	mov    r8d,DWORD PTR [r8+0x8]
  403e8b:	mov    DWORD PTR [rsp+0x38],r8d
  403e90:	call   0x41ad20
  403e95:	cmp    eax,edi
  403e97:	jne    0x403e70
  403e99:	lea    rax,[rip+0x2ccc8]        # 0x430b68
  403ea0:	lea    r9,[rip+0x2cd39]        # 0x430be0
  403ea7:	lea    r8,[rip+0x2cc92]        # 0x430b40
  403eae:	lea    rcx,[rip+0x2cca6]        # 0x430b5b
  403eb5:	mov    edx,0x154
  403eba:	mov    QWORD PTR [rsp+0x20],rax
  403ebf:	call   0x41d170
  403ec4:	lea    rcx,[rip+0x491d5]        # 0x44d0a0
  403ecb:	mov    rdx,rbp
  403ece:	call   0x403960
  403ed3:	mov    rcx,QWORD PTR [rbp+0x40]
  403ed7:	test   rcx,rcx
  403eda:	je     0x403ee1
  403edc:	call   0x41a7c0
  403ee1:	mov    rcx,rbp
  403ee4:	add    rsp,0x48
  403ee8:	pop    rbx
  403ee9:	pop    rsi
  403eea:	pop    rdi
  403eeb:	pop    rbp
  403eec:	jmp    0x42a6c8
  403ef1:	nop    DWORD PTR [rax+rax*1+0x0]
  403ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f00:	sub    rsp,0x48
  403f04:	mov    edx,ecx
  403f06:	lea    rcx,[rsp+0x30]
  403f0b:	call   0x41ad00
  403f10:	mov    rax,QWORD PTR [rsp+0x30]
  403f15:	lea    rdx,[rsp+0x20]
  403f1a:	lea    rcx,[rip+0x4917f]        # 0x44d0a0
  403f21:	mov    QWORD PTR [rsp+0x20],rax
  403f26:	mov    eax,DWORD PTR [rsp+0x38]
  403f2a:	mov    DWORD PTR [rsp+0x28],eax
  403f2e:	call   0x403be0
  403f33:	add    rsp,0x48
  403f37:	ret    
  403f38:	nop    DWORD PTR [rax+rax*1+0x0]
  403f40:	mov    rax,QWORD PTR [rip+0x49159]        # 0x44d0a0
  403f47:	ret    
  403f48:	nop    DWORD PTR [rax+rax*1+0x0]
  403f50:	mov    rdx,QWORD PTR [rip+0x49149]        # 0x44d0a0
  403f57:	test   rdx,rdx
  403f5a:	je     0x403f8b
  403f5c:	mov    rax,QWORD PTR [rdx+0x10]
  403f60:	mov    edx,DWORD PTR [rdx+0x18]
  403f63:	test   edx,edx
  403f65:	jne    0x403f7e
  403f67:	jmp    0x403f85
  403f69:	nop    DWORD PTR [rax+0x0]
  403f70:	mov    rdx,QWORD PTR [rax+0x10]
  403f74:	mov    eax,DWORD PTR [rax+0x18]
  403f77:	test   eax,eax
  403f79:	je     0x403f85
  403f7b:	mov    rax,rdx
  403f7e:	test   rax,rax
  403f81:	jne    0x403f70
  403f83:	repz ret 
  403f85:	mov    eax,0x1
  403f8a:	ret    
  403f8b:	xor    eax,eax
  403f8d:	ret    
  403f8e:	xchg   ax,ax
  403f90:	mov    rax,QWORD PTR [rip+0x49109]        # 0x44d0a0
  403f97:	test   rax,rax
  403f9a:	je     0x403fcb
  403f9c:	mov    rdx,QWORD PTR [rax+0x10]
  403fa0:	mov    eax,DWORD PTR [rax+0x18]
  403fa3:	test   eax,eax
  403fa5:	je     0x403fbe
  403fa7:	jmp    0x403fc5
  403fa9:	nop    DWORD PTR [rax+0x0]
  403fb0:	mov    rcx,QWORD PTR [rdx+0x10]
  403fb4:	mov    edx,DWORD PTR [rdx+0x18]
  403fb7:	test   edx,edx
  403fb9:	jne    0x403fc5
  403fbb:	mov    rdx,rcx
  403fbe:	test   rdx,rdx
  403fc1:	jne    0x403fb0
  403fc3:	repz ret 
  403fc5:	mov    eax,0x1
  403fca:	ret    
  403fcb:	xor    eax,eax
  403fcd:	ret    
  403fce:	xchg   ax,ax
  403fd0:	sub    rsp,0x38
  403fd4:	mov    rax,QWORD PTR [rcx]
  403fd7:	mov    QWORD PTR [rsp+0x20],rax
  403fdc:	mov    eax,DWORD PTR [rcx+0x8]
  403fdf:	lea    rcx,[rsp+0x20]
  403fe4:	mov    DWORD PTR [rsp+0x28],eax
  403fe8:	call   0x41ad20
  403fed:	mov    ecx,eax
  403fef:	add    rsp,0x38
  403ff3:	jmp    0x403f00
  403ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  404000:	sub    rsp,0x38
  404004:	mov    rcx,QWORD PTR [rip+0x49075]        # 0x44d080
  40400b:	test   rcx,rcx
  40400e:	je     0x404016
  404010:	add    rsp,0x38
  404014:	jmp    0x403fd0
  404016:	lea    rax,[rip+0x2cb71]        # 0x430b8e
  40401d:	lea    r9,[rip+0x2cb9c]        # 0x430bc0
  404024:	lea    r8,[rip+0x2cb15]        # 0x430b40
  40402b:	lea    rcx,[rip+0x2cb29]        # 0x430b5b
  404032:	mov    edx,0x19b
  404037:	mov    QWORD PTR [rsp+0x20],rax
  40403c:	call   0x41d170
  404041:	nop
  404042:	nop    DWORD PTR [rax+0x0]
  404046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404050:	mov    rdx,QWORD PTR [rip+0x49029]        # 0x44d080
  404057:	lea    rcx,[rip+0xfffffffffffff862]        # 0x4038c0
  40405e:	jmp    0x41d280
  404063:	nop
  404064:	nop
  404065:	nop
  404066:	nop
  404067:	nop
  404068:	nop
  404069:	nop
  40406a:	nop
  40406b:	nop
  40406c:	nop
  40406d:	nop
  40406e:	nop
  40406f:	nop
  404070:	push   rdi
  404071:	push   rsi
  404072:	push   rbx
  404073:	sub    rsp,0x30
  404077:	mov    rbx,rcx
  40407a:	call   0x403d00
  40407f:	test   rax,rax
  404082:	je     0x404092
  404084:	mov    edx,DWORD PTR [rax+0x8]
  404087:	test   edx,edx
  404089:	jne    0x4040a0
  40408b:	mov    DWORD PTR [rax+0x8],0x0
  404092:	add    rsp,0x30
  404096:	pop    rbx
  404097:	pop    rsi
  404098:	pop    rdi
  404099:	ret    
  40409a:	nop    WORD PTR [rax+rax*1+0x0]
  4040a0:	mov    rsi,QWORD PTR [rip+0x423a9]        # 0x446450
  4040a7:	mov    rdx,QWORD PTR [rip+0x425b2]        # 0x446660
  4040ae:	mov    rcx,rax
  4040b1:	mov    QWORD PTR [rsp+0x28],rax
  4040b6:	mov    rdi,QWORD PTR [rsi]
  4040b9:	mov    r8,QWORD PTR [rdx]
  4040bc:	mov    edx,0xffffffff
  4040c1:	mov    QWORD PTR [rsi],rbx
  4040c4:	call   QWORD PTR [r8+0x58]
  4040c8:	mov    QWORD PTR [rsi],rdi
  4040cb:	mov    rax,QWORD PTR [rsp+0x28]
  4040d0:	jmp    0x40408b
  4040d2:	nop    DWORD PTR [rax+0x0]
  4040d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040e0:	push   rsi
  4040e1:	push   rbx
  4040e2:	sub    rsp,0x38
  4040e6:	mov    rax,QWORD PTR [rcx]
  4040e9:	mov    esi,DWORD PTR [rdx]
  4040eb:	mov    rbx,rcx
  4040ee:	mov    QWORD PTR [rsp+0x20],rax
  4040f3:	mov    eax,DWORD PTR [rcx+0x8]
  4040f6:	lea    rcx,[rsp+0x20]
  4040fb:	mov    DWORD PTR [rsp+0x28],eax
  4040ff:	call   0x41ad20
  404104:	cmp    esi,eax
  404106:	je     0x404111
  404108:	xor    eax,eax
  40410a:	add    rsp,0x38
  40410e:	pop    rbx
  40410f:	pop    rsi
  404110:	ret    
  404111:	mov    rcx,rbx
  404114:	call   0x404070
  404119:	xor    eax,eax
  40411b:	add    rsp,0x38
  40411f:	pop    rbx
  404120:	pop    rsi
  404121:	ret    
  404122:	nop    DWORD PTR [rax+0x0]
  404126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404130:	sub    rsp,0x28
  404134:	lea    rdx,[rip+0xffffffffffffffa5]        # 0x4040e0
  40413b:	mov    DWORD PTR [rsp+0x30],ecx
  40413f:	mov    rcx,QWORD PTR [rip+0x422da]        # 0x446420
  404146:	lea    r8,[rsp+0x30]
  40414b:	call   0x403b90
  404150:	nop
  404151:	add    rsp,0x28
  404155:	ret    
  404156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404160:	sub    rsp,0x48
  404164:	mov    rax,QWORD PTR [rip+0x422e5]        # 0x446450
  40416b:	lea    rcx,[rsp+0x20]
  404170:	mov    rax,QWORD PTR [rax]
  404173:	mov    rdx,QWORD PTR [rax]
  404176:	mov    QWORD PTR [rsp+0x20],rdx
  40417b:	mov    eax,DWORD PTR [rax+0x8]
  40417e:	mov    DWORD PTR [rsp+0x28],eax
  404182:	call   0x41ad20
  404187:	mov    rcx,QWORD PTR [rip+0x42292]        # 0x446420
  40418e:	lea    r8,[rsp+0x3c]
  404193:	lea    rdx,[rip+0xffffffffffffff46]        # 0x4040e0
  40419a:	mov    DWORD PTR [rsp+0x3c],eax
  40419e:	call   0x403b90
  4041a3:	nop
  4041a4:	add    rsp,0x48
  4041a8:	ret    
  4041a9:	nop    DWORD PTR [rax+0x0]
  4041b0:	push   rsi
  4041b1:	push   rbx
  4041b2:	sub    rsp,0x28
  4041b6:	mov    rbx,rcx
  4041b9:	test   r8,r8
  4041bc:	mov    rsi,rdx
  4041bf:	mov    QWORD PTR [rbx],rdx
  4041c2:	je     0x4041f0
  4041c4:	mov    QWORD PTR [rcx+0x10],r8
  4041c8:	mov    DWORD PTR [rcx+0xc],0x0
  4041cf:	mov    QWORD PTR [rcx+0x18],0x0
  4041d7:	mov    rax,rbx
  4041da:	mov    DWORD PTR [rbx+0x8],0x0
  4041e1:	add    rsp,0x28
  4041e5:	pop    rbx
  4041e6:	pop    rsi
  4041e7:	ret    
  4041e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4041f0:	movsxd rdx,DWORD PTR [rdx+0xc]
  4041f4:	mov    ecx,0x1
  4041f9:	call   0x41a760
  4041fe:	movsxd rcx,DWORD PTR [rsi+0x8]
  404202:	mov    QWORD PTR [rbx+0x10],rax
  404206:	mov    DWORD PTR [rbx+0xc],0x1
  40420d:	call   0x41a6e0
  404212:	movsxd r8,DWORD PTR [rsi+0x8]
  404216:	mov    QWORD PTR [rbx+0x18],rax
  40421a:	mov    edx,0xffffffff
  40421f:	mov    rcx,rax
  404222:	call   0x42a658
  404227:	jmp    0x4041d7
  404229:	nop    DWORD PTR [rax+0x0]
  404230:	push   rbx
  404231:	sub    rsp,0x30
  404235:	mov    edx,0x20
  40423a:	mov    rbx,rcx
  40423d:	mov    ecx,0x1
  404242:	call   0x41a760
  404247:	mov    edx,DWORD PTR [rbx+0xc]
  40424a:	test   edx,edx
  40424c:	je     0x404261
  40424e:	xor    r8d,r8d
  404251:	mov    rdx,rbx
  404254:	mov    rcx,rax
  404257:	add    rsp,0x30
  40425b:	pop    rbx
  40425c:	jmp    0x4041b0
  404261:	lea    rax,[rip+0x2c9fe]        # 0x430c66
  404268:	lea    r9,[rip+0x2cc71]        # 0x430ee0
  40426f:	lea    r8,[rip+0x2c9ca]        # 0x430c40
  404276:	lea    rcx,[rip+0x2c9de]        # 0x430c5b
  40427d:	mov    edx,0xb1
  404282:	mov    QWORD PTR [rsp+0x20],rax
  404287:	call   0x41d170
  40428c:	nop
  40428d:	nop    DWORD PTR [rax]
  404290:	push   rbp
  404291:	push   rdi
  404292:	push   rsi
  404293:	push   rbx
  404294:	sub    rsp,0x38
  404298:	mov    rsi,rcx
  40429b:	mov    edi,edx
  40429d:	call   0x403d00
  4042a2:	test   rax,rax
  4042a5:	mov    rbx,rax
  4042a8:	je     0x404310
  4042aa:	test   edi,edi
  4042ac:	je     0x4042b5
  4042ae:	mov    eax,DWORD PTR [rbx+0x8]
  4042b1:	test   eax,eax
  4042b3:	je     0x4042c1
  4042b5:	mov    rax,rbx
  4042b8:	add    rsp,0x38
  4042bc:	pop    rbx
  4042bd:	pop    rsi
  4042be:	pop    rdi
  4042bf:	pop    rbp
  4042c0:	ret    
  4042c1:	mov    rax,QWORD PTR [rbx]
  4042c4:	mov    rdi,QWORD PTR [rip+0x42185]        # 0x446450
  4042cb:	mov    edx,0xffffffff
  4042d0:	mov    rcx,QWORD PTR [rbx+0x18]
  4042d4:	movsxd r8,DWORD PTR [rax+0x8]
  4042d8:	mov    rbp,QWORD PTR [rdi]
  4042db:	mov    QWORD PTR [rdi],rsi
  4042de:	call   0x42a658
  4042e3:	mov    rax,QWORD PTR [rip+0x42376]        # 0x446660
  4042ea:	mov    edx,0xffffffff
  4042ef:	mov    rcx,rbx
  4042f2:	mov    rax,QWORD PTR [rax]
  4042f5:	call   QWORD PTR [rax+0x50]
  4042f8:	mov    rax,rbx
  4042fb:	mov    QWORD PTR [rdi],rbp
  4042fe:	mov    DWORD PTR [rbx+0x8],0x1
  404305:	add    rsp,0x38
  404309:	pop    rbx
  40430a:	pop    rsi
  40430b:	pop    rdi
  40430c:	pop    rbp
  40430d:	ret    
  40430e:	xchg   ax,ax
  404310:	mov    rcx,rsi
  404313:	call   0x403fd0
  404318:	mov    rcx,QWORD PTR [rax+0x48]
  40431c:	test   rcx,rcx
  40431f:	je     0x404339
  404321:	call   0x404230
  404326:	mov    rcx,rsi
  404329:	mov    rdx,rax
  40432c:	mov    rbx,rax
  40432f:	call   0x403d10
  404334:	jmp    0x4042aa
  404339:	lea    rax,[rip+0x2c941]        # 0x430c81
  404340:	lea    r9,[rip+0x2cbd9]        # 0x430f20
  404347:	lea    r8,[rip+0x2c8f2]        # 0x430c40
  40434e:	lea    rcx,[rip+0x2c906]        # 0x430c5b
  404355:	mov    edx,0x2c
  40435a:	mov    QWORD PTR [rsp+0x20],rax
  40435f:	call   0x41d170
  404364:	nop
  404365:	nop
  404366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404370:	sub    rsp,0x38
  404374:	mov    rax,QWORD PTR [rcx]
  404377:	mov    QWORD PTR [rsp+0x20],rax
  40437c:	mov    eax,DWORD PTR [rcx+0x8]
  40437f:	lea    rcx,[rsp+0x20]
  404384:	mov    DWORD PTR [rsp+0x28],eax
  404388:	call   0x403c50
  40438d:	mov    edx,0x1
  404392:	mov    rcx,rax
  404395:	add    rsp,0x38
  404399:	jmp    0x404290
  40439e:	xchg   ax,ax
  4043a0:	push   rbx
  4043a1:	sub    rsp,0x20
  4043a5:	test   rcx,rcx
  4043a8:	je     0x4043e0
  4043aa:	mov    eax,DWORD PTR [rcx+0xc]
  4043ad:	mov    rbx,rcx
  4043b0:	test   eax,eax
  4043b2:	jne    0x4043d0
  4043b4:	mov    rcx,QWORD PTR [rbx+0x18]
  4043b8:	call   0x42a6c8
  4043bd:	mov    rcx,rbx
  4043c0:	add    rsp,0x20
  4043c4:	pop    rbx
  4043c5:	jmp    0x42a6c8
  4043ca:	nop    WORD PTR [rax+rax*1+0x0]
  4043d0:	mov    rcx,QWORD PTR [rcx+0x10]
  4043d4:	call   0x42a6c8
  4043d9:	jmp    0x4043b4
  4043db:	nop    DWORD PTR [rax+rax*1+0x0]
  4043e0:	add    rsp,0x20
  4043e4:	pop    rbx
  4043e5:	ret    
  4043e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043f0:	push   rsi
  4043f1:	push   rbx
  4043f2:	sub    rsp,0x28
  4043f6:	mov    rbx,rcx
  4043f9:	call   0x403d00
  4043fe:	test   rax,rax
  404401:	mov    rsi,rax
  404404:	je     0x404430
  404406:	mov    rcx,rbx
  404409:	call   0x404070
  40440e:	mov    rcx,rsi
  404411:	call   0x4043a0
  404416:	xor    edx,edx
  404418:	mov    rcx,rbx
  40441b:	add    rsp,0x28
  40441f:	pop    rbx
  404420:	pop    rsi
  404421:	jmp    0x403d10
  404426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404430:	add    rsp,0x28
  404434:	pop    rbx
  404435:	pop    rsi
  404436:	ret    
  404437:	nop    WORD PTR [rax+rax*1+0x0]
  404440:	push   rsi
  404441:	push   rbx
  404442:	sub    rsp,0x38
  404446:	test   rdx,rdx
  404449:	mov    rsi,rcx
  40444c:	mov    rbx,rdx
  40444f:	je     0x4044a3
  404451:	test   rcx,rcx
  404454:	je     0x4044a3
  404456:	mov    rax,QWORD PTR [rdx]
  404459:	cmp    rax,QWORD PTR [rcx]
  40445c:	jne    0x4044f9
  404462:	cmp    rdx,rcx
  404465:	je     0x4044ce
  404467:	movsxd r8,DWORD PTR [rax+0xc]
  40446b:	mov    rcx,QWORD PTR [rcx+0x10]
  40446f:	mov    rdx,QWORD PTR [rdx+0x10]
  404473:	call   0x42a668
  404478:	mov    rcx,QWORD PTR [rsi+0x18]
  40447c:	test   rcx,rcx
  40447f:	je     0x404496
  404481:	mov    rdx,QWORD PTR [rbx+0x18]
  404485:	test   rdx,rdx
  404488:	je     0x404496
  40448a:	mov    rax,QWORD PTR [rbx]
  40448d:	movsxd r8,DWORD PTR [rax+0x8]
  404491:	call   0x42a668
  404496:	mov    eax,DWORD PTR [rbx+0x8]
  404499:	mov    DWORD PTR [rsi+0x8],eax
  40449c:	add    rsp,0x38
  4044a0:	pop    rbx
  4044a1:	pop    rsi
  4044a2:	ret    
  4044a3:	lea    rax,[rip+0x2c7eb]        # 0x430c95
  4044aa:	lea    r9,[rip+0x2c9ef]        # 0x430ea0
  4044b1:	lea    r8,[rip+0x2c788]        # 0x430c40
  4044b8:	lea    rcx,[rip+0x2c79c]        # 0x430c5b
  4044bf:	mov    edx,0xc7
  4044c4:	mov    QWORD PTR [rsp+0x20],rax
  4044c9:	call   0x41d170
  4044ce:	lea    rax,[rip+0x2c7f4]        # 0x430cc9
  4044d5:	lea    r9,[rip+0x2c9c4]        # 0x430ea0
  4044dc:	lea    r8,[rip+0x2c75d]        # 0x430c40
  4044e3:	lea    rcx,[rip+0x2c771]        # 0x430c5b
  4044ea:	mov    edx,0xc9
  4044ef:	mov    QWORD PTR [rsp+0x20],rax
  4044f4:	call   0x41d170
  4044f9:	lea    rax,[rip+0x2c7b0]        # 0x430cb0
  404500:	lea    r9,[rip+0x2c999]        # 0x430ea0
  404507:	lea    r8,[rip+0x2c732]        # 0x430c40
  40450e:	lea    rcx,[rip+0x2c746]        # 0x430c5b
  404515:	mov    edx,0xc8
  40451a:	mov    QWORD PTR [rsp+0x20],rax
  40451f:	call   0x41d170
  404524:	nop
  404525:	nop
  404526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404530:	push   r13
  404532:	push   r12
  404534:	push   rbp
  404535:	push   rdi
  404536:	push   rsi
  404537:	push   rbx
  404538:	sub    rsp,0x28
  40453c:	mov    rbp,QWORD PTR [rcx]
  40453f:	mov    rsi,QWORD PTR [rcx+0x10]
  404543:	mov    r12,rcx
  404546:	mov    rdi,rdx
  404549:	mov    eax,DWORD PTR [rbp+0x8]
  40454c:	test   eax,eax
  40454e:	jle    0x4045e0
  404554:	mov    rdx,QWORD PTR [rbp+0x0]
  404558:	xor    ebx,ebx
  40455a:	jmp    0x4045ac
  40455c:	nop    DWORD PTR [rax+0x0]
  404560:	test   r8d,r8d
  404563:	mov    edx,0x78
  404568:	mov    rcx,rdi
  40456b:	cmovs  r8d,eax
  40456f:	sar    r8d,0x3
  404573:	add    r8d,r8d
  404576:	movsxd r8,r8d
  404579:	call   0x42a658
  40457e:	mov    rdx,QWORD PTR [rbp+0x0]
  404582:	mov    ecx,DWORD PTR [rdx+r13*1+0xc]
  404587:	lea    eax,[rcx+0x7]
  40458a:	test   ecx,ecx
  40458c:	cmovns eax,ecx
  40458f:	sar    eax,0x3
  404592:	lea    ecx,[rax+rax*1]
  404595:	cdqe   
  404597:	add    rsi,rax
  40459a:	lea    eax,[rbx+0x1]
  40459d:	add    rbx,0x1
  4045a1:	movsxd rcx,ecx
  4045a4:	add    rdi,rcx
  4045a7:	cmp    DWORD PTR [rbp+0x8],eax
  4045aa:	jle    0x4045e0
  4045ac:	mov    rax,QWORD PTR [r12+0x18]
  4045b1:	mov    r13,rbx
  4045b4:	shl    r13,0x4
  4045b8:	mov    r8d,DWORD PTR [rdx+r13*1+0xc]
  4045bd:	cmp    BYTE PTR [rax+rbx*1],0x1
  4045c1:	lea    eax,[r8+0x7]
  4045c5:	jne    0x404560
  4045c7:	test   r8d,r8d
  4045ca:	mov    rdx,rdi
  4045cd:	mov    rcx,rsi
  4045d0:	cmovs  r8d,eax
  4045d4:	sar    r8d,0x3
  4045d8:	call   0x41cef0
  4045dd:	jmp    0x40457e
  4045df:	nop
  4045e0:	mov    BYTE PTR [rdi],0x0
  4045e3:	add    rsp,0x28
  4045e7:	pop    rbx
  4045e8:	pop    rsi
  4045e9:	pop    rdi
  4045ea:	pop    rbp
  4045eb:	pop    r12
  4045ed:	pop    r13
  4045ef:	ret    
  4045f0:	push   rbp
  4045f1:	push   rdi
  4045f2:	push   rsi
  4045f3:	push   rbx
  4045f4:	sub    rsp,0x28
  4045f8:	mov    rdi,rcx
  4045fb:	mov    rcx,rdx
  4045fe:	mov    rsi,rdx
  404601:	call   0x42a610
  404606:	mov    rbp,QWORD PTR [rdi+0x10]
  40460a:	mov    rdi,QWORD PTR [rdi]
  40460d:	mov    rbx,rax
  404610:	mov    r8d,eax
  404613:	mov    eax,DWORD PTR [rdi+0xc]
  404616:	lea    edx,[rax+rax*1]
  404619:	cmp    edx,ebx
  40461b:	je     0x404637
  40461d:	lea    rcx,[rip+0x2c6b4]        # 0x430cd8
  404624:	call   0x41d110
  404629:	mov    r8d,DWORD PTR [rdi+0xc]
  40462d:	add    r8d,r8d
  404630:	cmp    ebx,r8d
  404633:	cmovle r8d,ebx
  404637:	mov    eax,r8d
  40463a:	mov    rdx,rbp
  40463d:	mov    rcx,rsi
  404640:	shr    eax,0x1f
  404643:	add    r8d,eax
  404646:	sar    r8d,1
  404649:	add    rsp,0x28
  40464d:	pop    rbx
  40464e:	pop    rsi
  40464f:	pop    rdi
  404650:	pop    rbp
  404651:	jmp    0x41ce70
  404656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404660:	push   rbp
  404661:	push   rdi
  404662:	push   rsi
  404663:	push   rbx
  404664:	sub    rsp,0x28
  404668:	mov    ebp,DWORD PTR [rcx+0x8]
  40466b:	mov    rdi,rdx
  40466e:	test   ebp,ebp
  404670:	jle    0x4046a5
  404672:	mov    rsi,QWORD PTR [rcx]
  404675:	xor    ebx,ebx
  404677:	jmp    0x40468b
  404679:	nop    DWORD PTR [rax+0x0]
  404680:	add    ebx,0x1
  404683:	add    rsi,0x10
  404687:	cmp    ebx,ebp
  404689:	je     0x4046a5
  40468b:	mov    rdx,QWORD PTR [rsi]
  40468e:	mov    rcx,rdi
  404691:	call   0x42a628
  404696:	test   eax,eax
  404698:	jne    0x404680
  40469a:	mov    eax,ebx
  40469c:	add    rsp,0x28
  4046a0:	pop    rbx
  4046a1:	pop    rsi
  4046a2:	pop    rdi
  4046a3:	pop    rbp
  4046a4:	ret    
  4046a5:	lea    r8,[rip+0x2c664]        # 0x430d10
  4046ac:	lea    rcx,[rip+0x2c5a8]        # 0x430c5b
  4046b3:	mov    r9,rdi
  4046b6:	mov    edx,0x108
  4046bb:	call   0x41d170
  4046c0:	nop
  4046c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4046c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046d0:	movsxd rax,edx
  4046d3:	shl    rax,0x4
  4046d7:	add    rax,QWORD PTR [rcx]
  4046da:	ret    
  4046db:	nop    DWORD PTR [rax+rax*1+0x0]
  4046e0:	mov    rcx,QWORD PTR [rip+0x41d39]        # 0x446420
  4046e7:	lea    rdx,[rip+0xfffffffffffffd02]        # 0x4043f0
  4046ee:	jmp    0x403900
  4046f3:	nop    DWORD PTR [rax]
  4046f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404700:	mov    eax,DWORD PTR [rcx+0xc]
  404703:	ret    
  404704:	xchg   ax,ax
  404706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404710:	movsxd rdx,edx
  404713:	shl    rdx,0x4
  404717:	add    rdx,QWORD PTR [rcx]
  40471a:	mov    edx,DWORD PTR [rdx+0xc]
  40471d:	lea    eax,[rdx+0x7]
  404720:	test   edx,edx
  404722:	cmovns eax,edx
  404725:	sar    eax,0x3
  404728:	ret    
  404729:	nop    DWORD PTR [rax+0x0]
  404730:	mov    rax,QWORD PTR [rcx]
  404733:	movsxd rdx,edx
  404736:	shl    rdx,0x4
  40473a:	add    rdx,QWORD PTR [rax]
  40473d:	mov    edx,DWORD PTR [rdx+0xc]
  404740:	lea    eax,[rdx+0x7]
  404743:	test   edx,edx
  404745:	cmovns eax,edx
  404748:	sar    eax,0x3
  40474b:	ret    
  40474c:	nop    DWORD PTR [rax+0x0]
  404750:	push   rsi
  404751:	push   rbx
  404752:	sub    rsp,0x28
  404756:	mov    rax,QWORD PTR [rcx]
  404759:	test   r8,r8
  40475c:	movsxd rbx,edx
  40475f:	mov    rsi,rcx
  404762:	mov    rdx,r8
  404765:	je     0x4047c0
  404767:	mov    r9,rbx
  40476a:	shl    r9,0x4
  40476e:	add    r9,QWORD PTR [rax]
  404771:	mov    ecx,DWORD PTR [r9+0x8]
  404775:	mov    r8d,DWORD PTR [r9+0xc]
  404779:	lea    eax,[rcx+0x7]
  40477c:	test   ecx,ecx
  40477e:	lea    r9d,[r8+0x7]
  404782:	cmovns eax,ecx
  404785:	sar    eax,0x3
  404788:	cdqe   
  40478a:	add    rax,QWORD PTR [rsi+0x10]
  40478e:	test   r8d,r8d
  404791:	cmovns r9d,r8d
  404795:	mov    r8d,r9d
  404798:	sar    r8d,0x3
  40479c:	mov    rcx,rax
  40479f:	movsxd r8,r8d
  4047a2:	call   0x42a668
  4047a7:	mov    rax,QWORD PTR [rsi+0x18]
  4047ab:	test   rax,rax
  4047ae:	je     0x4047b4
  4047b0:	mov    BYTE PTR [rax+rbx*1],0x1
  4047b4:	add    rsp,0x28
  4047b8:	pop    rbx
  4047b9:	pop    rsi
  4047ba:	ret    
  4047bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4047c0:	mov    rdx,rbx
  4047c3:	shl    rdx,0x4
  4047c7:	add    rdx,QWORD PTR [rax]
  4047ca:	mov    r8d,DWORD PTR [rdx+0xc]
  4047ce:	mov    ecx,DWORD PTR [rdx+0x8]
  4047d1:	lea    eax,[r8+0x7]
  4047d5:	test   r8d,r8d
  4047d8:	cmovs  r8d,eax
  4047dc:	lea    eax,[rcx+0x7]
  4047df:	sar    r8d,0x3
  4047e3:	test   ecx,ecx
  4047e5:	cmovs  ecx,eax
  4047e8:	movsxd r8,r8d
  4047eb:	xor    edx,edx
  4047ed:	sar    ecx,0x3
  4047f0:	movsxd rcx,ecx
  4047f3:	add    rcx,QWORD PTR [rsi+0x10]
  4047f7:	call   0x42a658
  4047fc:	mov    rax,QWORD PTR [rsi+0x18]
  404800:	test   rax,rax
  404803:	je     0x4047b4
  404805:	mov    BYTE PTR [rax+rbx*1],0xff
  404809:	add    rsp,0x28
  40480d:	pop    rbx
  40480e:	pop    rsi
  40480f:	ret    
  404810:	push   rsi
  404811:	push   rbx
  404812:	sub    rsp,0x28
  404816:	mov    rax,QWORD PTR [rcx]
  404819:	movsxd rbx,edx
  40481c:	mov    rsi,rcx
  40481f:	mov    r9,rbx
  404822:	shl    r9,0x4
  404826:	add    r9,QWORD PTR [rax]
  404829:	mov    r8d,DWORD PTR [r9+0xc]
  40482d:	mov    ecx,DWORD PTR [r9+0x8]
  404831:	lea    eax,[r8+0x7]
  404835:	test   r8d,r8d
  404838:	cmovs  r8d,eax
  40483c:	lea    eax,[rcx+0x7]
  40483f:	sar    r8d,0x3
  404843:	test   ecx,ecx
  404845:	cmovns eax,ecx
  404848:	movsxd r8,r8d
  40484b:	xor    edx,edx
  40484d:	sar    eax,0x3
  404850:	cdqe   
  404852:	add    rax,QWORD PTR [rsi+0x10]
  404856:	mov    rcx,rax
  404859:	call   0x42a658
  40485e:	mov    rax,QWORD PTR [rsi+0x18]
  404862:	test   rax,rax
  404865:	je     0x40486b
  404867:	mov    BYTE PTR [rax+rbx*1],0x1
  40486b:	add    rsp,0x28
  40486f:	pop    rbx
  404870:	pop    rsi
  404871:	ret    
  404872:	nop    DWORD PTR [rax+0x0]
  404876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404880:	push   rsi
  404881:	push   rbx
  404882:	sub    rsp,0x28
  404886:	mov    rsi,QWORD PTR [rcx]
  404889:	test   rdx,rdx
  40488c:	mov    rbx,rcx
  40488f:	mov    rcx,QWORD PTR [rcx+0x10]
  404893:	movsxd r8,DWORD PTR [rsi+0xc]
  404897:	je     0x4048d0
  404899:	call   0x42a668
  40489e:	mov    edx,DWORD PTR [rsi+0x8]
  4048a1:	xor    eax,eax
  4048a3:	test   edx,edx
  4048a5:	jle    0x4048c4
  4048a7:	nop    WORD PTR [rax+rax*1+0x0]
  4048b0:	mov    rdx,QWORD PTR [rbx+0x18]
  4048b4:	mov    BYTE PTR [rdx+rax*1],0x1
  4048b8:	lea    edx,[rax+0x1]
  4048bb:	add    rax,0x1
  4048bf:	cmp    edx,DWORD PTR [rsi+0x8]
  4048c2:	jl     0x4048b0
  4048c4:	add    rsp,0x28
  4048c8:	pop    rbx
  4048c9:	pop    rsi
  4048ca:	ret    
  4048cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4048d0:	xor    edx,edx
  4048d2:	call   0x42a658
  4048d7:	mov    eax,DWORD PTR [rsi+0x8]
  4048da:	test   eax,eax
  4048dc:	jle    0x4048c4
  4048de:	xor    eax,eax
  4048e0:	mov    rdx,QWORD PTR [rbx+0x18]
  4048e4:	mov    BYTE PTR [rdx+rax*1],0xff
  4048e8:	lea    edx,[rax+0x1]
  4048eb:	add    rax,0x1
  4048ef:	cmp    DWORD PTR [rsi+0x8],edx
  4048f2:	jg     0x4048e0
  4048f4:	add    rsp,0x28
  4048f8:	pop    rbx
  4048f9:	pop    rsi
  4048fa:	ret    
  4048fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404900:	push   rbx
  404901:	sub    rsp,0x30
  404905:	mov    rbx,rcx
  404908:	mov    rcx,QWORD PTR [rcx]
  40490b:	mov    QWORD PTR [rsp+0x28],r8
  404910:	call   0x404660
  404915:	mov    r8,QWORD PTR [rsp+0x28]
  40491a:	mov    edx,eax
  40491c:	mov    rcx,rbx
  40491f:	add    rsp,0x30
  404923:	pop    rbx
  404924:	jmp    0x404750
  404929:	nop    DWORD PTR [rax+0x0]
  404930:	mov    rax,QWORD PTR [rcx]
  404933:	movsxd rdx,edx
  404936:	mov    r10,r8
  404939:	shl    rdx,0x4
  40493d:	add    rdx,QWORD PTR [rax]
  404940:	mov    r9d,DWORD PTR [rdx+0xc]
  404944:	mov    edx,DWORD PTR [rdx+0x8]
  404947:	lea    eax,[r9+0x7]
  40494b:	test   r9d,r9d
  40494e:	cmovs  r9d,eax
  404952:	lea    eax,[rdx+0x7]
  404955:	mov    r8d,r9d
  404958:	sar    r8d,0x3
  40495c:	test   edx,edx
  40495e:	cmovs  edx,eax
  404961:	movsxd r8,r8d
  404964:	sar    edx,0x3
  404967:	movsxd rdx,edx
  40496a:	add    rdx,QWORD PTR [rcx+0x10]
  40496e:	mov    rcx,r10
  404971:	jmp    0x42a668
  404976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404980:	sub    rsp,0x38
  404984:	test   rcx,rcx
  404987:	je     0x4049e7
  404989:	test   edx,edx
  40498b:	js     0x4049bc
  40498d:	mov    r9,QWORD PTR [rcx]
  404990:	cmp    edx,DWORD PTR [r9+0x8]
  404994:	jge    0x4049bc
  404996:	movsxd rax,edx
  404999:	shl    rax,0x4
  40499d:	add    rax,QWORD PTR [r9]
  4049a0:	cmp    DWORD PTR [rax+0xc],0x47
  4049a4:	jg     0x404a12
  4049a6:	mov    QWORD PTR [r8],0x0
  4049ad:	call   0x404930
  4049b2:	mov    eax,0x1
  4049b7:	add    rsp,0x38
  4049bb:	ret    
  4049bc:	lea    rax,[rip+0x2c37d]        # 0x430d40
  4049c3:	lea    r9,[rip+0x2c476]        # 0x430e40
  4049ca:	lea    r8,[rip+0x2c26f]        # 0x430c40
  4049d1:	lea    rcx,[rip+0x2c283]        # 0x430c5b
  4049d8:	mov    edx,0x1b2
  4049dd:	mov    QWORD PTR [rsp+0x20],rax
  4049e2:	call   0x41d170
  4049e7:	lea    rax,[rip+0x2c340]        # 0x430d2e
  4049ee:	lea    r9,[rip+0x2c44b]        # 0x430e40
  4049f5:	lea    r8,[rip+0x2c244]        # 0x430c40
  4049fc:	lea    rcx,[rip+0x2c258]        # 0x430c5b
  404a03:	mov    edx,0x1b1
  404a08:	mov    QWORD PTR [rsp+0x20],rax
  404a0d:	call   0x41d170
  404a12:	lea    rcx,[rip+0x2c35f]        # 0x430d78
  404a19:	mov    edx,0x8
  404a1e:	call   0x41d140
  404a23:	nop
  404a24:	xchg   ax,ax
  404a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a30:	movsxd rax,edx
  404a33:	mov    rdx,r8
  404a36:	mov    r8,QWORD PTR [rcx]
  404a39:	shl    rax,0x4
  404a3d:	add    rax,QWORD PTR [r8]
  404a40:	mov    r8d,DWORD PTR [rax+0xc]
  404a44:	mov    r10d,DWORD PTR [rax+0x8]
  404a48:	lea    r9d,[r8+0x7]
  404a4c:	test   r8d,r8d
  404a4f:	lea    eax,[r10+0x7]
  404a53:	cmovs  r8d,r9d
  404a57:	test   r10d,r10d
  404a5a:	cmovns eax,r10d
  404a5e:	sar    r8d,0x3
  404a62:	sar    eax,0x3
  404a65:	cdqe   
  404a67:	add    rax,QWORD PTR [rcx+0x10]
  404a6b:	mov    rcx,rax
  404a6e:	jmp    0x41cef0
  404a73:	nop    DWORD PTR [rax]
  404a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a80:	push   rbx
  404a81:	sub    rsp,0x30
  404a85:	mov    rbx,rcx
  404a88:	mov    rcx,QWORD PTR [rcx]
  404a8b:	mov    QWORD PTR [rsp+0x28],r8
  404a90:	call   0x404660
  404a95:	mov    r8,QWORD PTR [rsp+0x28]
  404a9a:	mov    edx,eax
  404a9c:	mov    rcx,rbx
  404a9f:	add    rsp,0x30
  404aa3:	pop    rbx
  404aa4:	jmp    0x404930
  404aa9:	nop    DWORD PTR [rax+0x0]
  404ab0:	sub    rsp,0x28
  404ab4:	mov    rax,QWORD PTR [rip+0x41ba5]        # 0x446660
  404abb:	mov    rax,QWORD PTR [rax]
  404abe:	mov    rax,QWORD PTR [rax+0x180]
  404ac5:	test   rax,rax
  404ac8:	je     0x404ad1
  404aca:	add    rsp,0x28
  404ace:	rex.W jmp rax
  404ad1:	lea    r8,[rip+0x2c2e8]        # 0x430dc0
  404ad8:	lea    rcx,[rip+0x2c17c]        # 0x430c5b
  404adf:	mov    edx,0x1db
  404ae4:	call   0x41d170
  404ae9:	nop
  404aea:	nop    WORD PTR [rax+rax*1+0x0]
  404af0:	sub    rsp,0x28
  404af4:	mov    rax,QWORD PTR [rip+0x41b65]        # 0x446660
  404afb:	mov    rax,QWORD PTR [rax]
  404afe:	mov    rax,QWORD PTR [rax+0x188]
  404b05:	test   rax,rax
  404b08:	je     0x404b11
  404b0a:	add    rsp,0x28
  404b0e:	rex.W jmp rax
  404b11:	lea    r8,[rip+0x2c2d0]        # 0x430de8
  404b18:	lea    rcx,[rip+0x2c13c]        # 0x430c5b
  404b1f:	mov    edx,0x1e7
  404b24:	call   0x41d170
  404b29:	nop
  404b2a:	nop
  404b2b:	nop
  404b2c:	nop
  404b2d:	nop
  404b2e:	nop
  404b2f:	nop
  404b30:	mov    eax,DWORD PTR [rip+0x485aa]        # 0x44d0e0
  404b36:	mov    DWORD PTR [rip+0x274e0],0xffffffff        # 0x42c020
  404b40:	test   eax,eax
  404b42:	jle    0x404b50
  404b44:	xor    edx,edx
  404b46:	xor    ecx,ecx
  404b48:	jmp    0x40bcc0
  404b4d:	nop    DWORD PTR [rax]
  404b50:	xor    eax,eax
  404b52:	ret    
  404b53:	nop    DWORD PTR [rax]
  404b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b60:	push   rsi
  404b61:	push   rbx
  404b62:	sub    rsp,0x28
  404b66:	mov    eax,DWORD PTR [rip+0x48798]        # 0x44d304
  404b6c:	test   eax,eax
  404b6e:	jne    0x404b90
  404b70:	mov    r8d,edx
  404b73:	mov    rax,QWORD PTR [rip+0x4ce76]        # 0x4519f0
  404b7a:	mov    rdx,rcx
  404b7d:	mov    rcx,QWORD PTR [rip+0x27494]        # 0x42c018
  404b84:	xor    r9d,r9d
  404b87:	add    rsp,0x28
  404b8b:	pop    rbx
  404b8c:	pop    rsi
  404b8d:	rex.W jmp rax
  404b90:	mov    esi,edx
  404b92:	mov    rbx,rcx
  404b95:	call   QWORD PTR [rip+0x4cbb5]        # 0x451750
  404b9b:	lea    rcx,[rax+0x30]
  404b9f:	call   0x42a588
  404ba4:	movsxd rcx,eax
  404ba7:	mov    rax,QWORD PTR [rip+0x4ce42]        # 0x4519f0
  404bae:	xor    r9d,r9d
  404bb1:	mov    r8d,esi
  404bb4:	mov    rdx,rbx
  404bb7:	add    rsp,0x28
  404bbb:	pop    rbx
  404bbc:	pop    rsi
  404bbd:	rex.W jmp rax
  404bc0:	push   rsi
  404bc1:	push   rbx
  404bc2:	sub    rsp,0x28
  404bc6:	mov    eax,DWORD PTR [rip+0x48738]        # 0x44d304
  404bcc:	test   eax,eax
  404bce:	jne    0x404bf0
  404bd0:	mov    r8d,edx
  404bd3:	mov    rax,QWORD PTR [rip+0x4ce06]        # 0x4519e0
  404bda:	mov    rdx,rcx
  404bdd:	mov    rcx,QWORD PTR [rip+0x27434]        # 0x42c018
  404be4:	xor    r9d,r9d
  404be7:	add    rsp,0x28
  404beb:	pop    rbx
  404bec:	pop    rsi
  404bed:	rex.W jmp rax
  404bf0:	mov    esi,edx
  404bf2:	mov    rbx,rcx
  404bf5:	call   QWORD PTR [rip+0x4cb55]        # 0x451750
  404bfb:	mov    rcx,rax
  404bfe:	call   0x42a588
  404c03:	movsxd rcx,eax
  404c06:	mov    rax,QWORD PTR [rip+0x4cdd3]        # 0x4519e0
  404c0d:	xor    r9d,r9d
  404c10:	mov    r8d,esi
  404c13:	mov    rdx,rbx
  404c16:	add    rsp,0x28
  404c1a:	pop    rbx
  404c1b:	pop    rsi
  404c1c:	rex.W jmp rax
  404c1f:	nop
  404c20:	push   rdi
  404c21:	push   rsi
  404c22:	push   rbx
  404c23:	sub    rsp,0x30
  404c27:	lea    rdi,[rip+0x2c352]        # 0x430f80
  404c2e:	mov    rax,rcx
  404c31:	mov    ecx,0x2
  404c36:	mov    rbx,rdx
  404c39:	mov    rsi,rax
  404c3c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c3e:	jne    0x404c60
  404c40:	lea    rcx,[rax+0x2]
  404c44:	mov    rax,0xffffffffffffffff
  404c4b:	test   rbx,rbx
  404c4e:	je     0x404c53
  404c50:	mov    QWORD PTR [rbx],rcx
  404c53:	add    rsp,0x30
  404c57:	pop    rbx
  404c58:	pop    rsi
  404c59:	pop    rdi
  404c5a:	ret    
  404c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c60:	lea    rdx,[rsp+0x28]
  404c65:	mov    rcx,rax
  404c68:	call   0x41ce20
  404c6d:	mov    rcx,rax
  404c70:	mov    rax,QWORD PTR [rsp+0x28]
  404c75:	jmp    0x404c4b
  404c77:	nop    WORD PTR [rax+rax*1+0x0]
  404c80:	push   rsi
  404c81:	push   rbx
  404c82:	sub    rsp,0x58
  404c86:	mov    rax,QWORD PTR [rip+0x417e3]        # 0x446470
  404c8d:	mov    edx,DWORD PTR [rax]
  404c8f:	test   edx,edx
  404c91:	jne    0x404d93
  404c97:	lea    rbx,[rsp+0x3c]
  404c9c:	mov    DWORD PTR [rsp+0x3c],0x10
  404ca4:	lea    rdx,[rsp+0x40]
  404ca9:	mov    rcx,QWORD PTR [rip+0x27360]        # 0x42c010
  404cb0:	mov    r8,rbx
  404cb3:	call   QWORD PTR [rip+0x4cce7]        # 0x4519a0
  404cb9:	cmp    rax,0xffffffffffffffff
  404cbd:	mov    QWORD PTR [rip+0x27354],rax        # 0x42c018
  404cc4:	je     0x404db6
  404cca:	mov    r9,rbx
  404ccd:	mov    r8d,0x8
  404cd3:	mov    edx,0xffff
  404cd8:	mov    rcx,rax
  404cdb:	mov    rsi,QWORD PTR [rip+0x4cd16]        # 0x4519f8
  404ce2:	mov    DWORD PTR [rsp+0x3c],0x1
  404cea:	mov    DWORD PTR [rsp+0x20],0x4
  404cf2:	call   rsi
  404cf4:	mov    DWORD PTR [rsp+0x3c],0x1
  404cfc:	mov    DWORD PTR [rsp+0x20],0x4
  404d04:	mov    r9,rbx
  404d07:	mov    r8d,0x1
  404d0d:	mov    edx,0x6
  404d12:	mov    rcx,QWORD PTR [rip+0x272ff]        # 0x42c018
  404d19:	call   rsi
  404d1b:	mov    rax,QWORD PTR [rip+0x418de]        # 0x446600
  404d22:	mov    eax,DWORD PTR [rax]
  404d24:	test   eax,eax
  404d26:	jne    0x404da4
  404d28:	mov    rcx,QWORD PTR [rip+0x272e1]        # 0x42c010
  404d2f:	call   0x4128b0
  404d34:	mov    ecx,DWORD PTR [rsp+0x44]
  404d38:	call   QWORD PTR [rip+0x4cc8a]        # 0x4519c8
  404d3e:	mov    rbx,rax
  404d41:	call   QWORD PTR [rip+0x4ca09]        # 0x451750
  404d47:	lea    rdx,[rip+0x2c26a]        # 0x430fb8
  404d4e:	lea    rcx,[rax+0x60]
  404d52:	mov    r8,rbx
  404d55:	call   0x42aa80
  404d5a:	mov    rcx,QWORD PTR [rip+0x272b7]        # 0x42c018
  404d61:	lea    rdx,[rip+0x6f58]        # 0x40bcc0
  404d68:	xor    r8d,r8d
  404d6b:	call   0x4126f0
  404d70:	mov    rax,QWORD PTR [rip+0x418e9]        # 0x446660
  404d77:	mov    rax,QWORD PTR [rax]
  404d7a:	mov    rax,QWORD PTR [rax+0x120]
  404d81:	test   rax,rax
  404d84:	je     0x404d8a
  404d86:	xor    ecx,ecx
  404d88:	call   rax
  404d8a:	xor    eax,eax
  404d8c:	add    rsp,0x58
  404d90:	pop    rbx
  404d91:	pop    rsi
  404d92:	ret    
  404d93:	lea    rcx,[rip+0x2c1ee]        # 0x430f88
  404d9a:	call   0x41d1b0
  404d9f:	jmp    0x404c97
  404da4:	mov    rcx,QWORD PTR [rip+0x27265]        # 0x42c010
  404dab:	call   QWORD PTR [rip+0x4cbff]        # 0x4519b0
  404db1:	jmp    0x404d28
  404db6:	lea    rcx,[rip+0x2c1eb]        # 0x430fa8
  404dbd:	call   0x40e760
  404dc2:	nop
  404dc3:	nop    DWORD PTR [rax]
  404dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dd0:	push   rbx
  404dd1:	sub    rsp,0x20
  404dd5:	mov    eax,DWORD PTR [rip+0x48305]        # 0x44d0e0
  404ddb:	mov    rcx,QWORD PTR [rip+0x482f6]        # 0x44d0d8
  404de2:	test   eax,eax
  404de4:	jne    0x404e09
  404de6:	lea    rcx,[rip+0x48313]        # 0x44d100
  404ded:	mov    edx,0x200
  404df2:	call   0x404bc0
  404df7:	cmp    eax,0x0
  404dfa:	mov    DWORD PTR [rip+0x482e0],eax        # 0x44d0e0
  404e00:	lea    rcx,[rip+0x482f9]        # 0x44d100
  404e07:	jle    0x404e35
  404e09:	lea    edx,[rax-0x1]
  404e0c:	lea    rax,[rcx+0x1]
  404e10:	movzx  ebx,BYTE PTR [rcx]
  404e13:	test   edx,edx
  404e15:	mov    DWORD PTR [rip+0x482c5],edx        # 0x44d0e0
  404e1b:	mov    QWORD PTR [rip+0x482b6],rax        # 0x44d0d8
  404e22:	jle    0x404e2d
  404e24:	cmp    DWORD PTR [rip+0x271f5],0xffffffff        # 0x42c020
  404e2b:	je     0x404e60
  404e2d:	mov    eax,ebx
  404e2f:	add    rsp,0x20
  404e33:	pop    rbx
  404e34:	ret    
  404e35:	jne    0x404e7c
  404e37:	mov    eax,DWORD PTR [rip+0x48293]        # 0x44d0d0
  404e3d:	mov    ebx,0xffffffff
  404e42:	test   eax,eax
  404e44:	je     0x404e2d
  404e46:	call   QWORD PTR [rip+0x4c904]        # 0x451750
  404e4c:	lea    rdx,[rip+0x2c184]        # 0x430fd7
  404e53:	lea    rcx,[rax+0x60]
  404e57:	call   0x42aa80
  404e5c:	jmp    0x404e2d
  404e5e:	xchg   ax,ax
  404e60:	lea    rcx,[rip+0xfffffffffffffcc9]        # 0x404b30
  404e67:	xor    edx,edx
  404e69:	call   0x412620
  404e6e:	mov    DWORD PTR [rip+0x271ac],eax        # 0x42c020
  404e74:	mov    eax,ebx
  404e76:	add    rsp,0x20
  404e7a:	pop    rbx
  404e7b:	ret    
  404e7c:	lea    rcx,[rip+0x2c167]        # 0x430fea
  404e83:	mov    ebx,0xffffffff
  404e88:	call   0x42a650
  404e8d:	jmp    0x404e2d
  404e8f:	nop
  404e90:	push   r15
  404e92:	push   r14
  404e94:	push   r13
  404e96:	push   r12
  404e98:	push   rbp
  404e99:	push   rdi
  404e9a:	push   rsi
  404e9b:	push   rbx
  404e9c:	sub    rsp,0x28
  404ea0:	mov    rbp,rcx
  404ea3:	movsxd rcx,edx
  404ea6:	mov    esi,r8d
  404ea9:	mov    r12,rcx
  404eac:	add    rcx,0x5
  404eb0:	call   0x41a6e0
  404eb5:	test   esi,esi
  404eb7:	mov    rbx,rax
  404eba:	lea    rdi,[rax+0x1]
  404ebe:	je     0x4050ce
  404ec4:	test   r12d,r12d
  404ec7:	mov    BYTE PTR [rax],0x25
  404eca:	jle    0x4050da
  404ed0:	xor    r8d,r8d
  404ed3:	xor    edx,edx
  404ed5:	mov    ecx,0x61
  404eda:	nop    WORD PTR [rax+rax*1+0x0]
  404ee0:	movsxd r10,edx
  404ee3:	mov    eax,r12d
  404ee6:	lea    r14,[rdi+0x1]
  404eea:	add    r10,rbp
  404eed:	sub    eax,edx
  404eef:	movzx  r13d,BYTE PTR [r10]
  404ef3:	add    r8d,r13d
  404ef6:	cmp    eax,0x61
  404ef9:	mov    BYTE PTR [rdi],r13b
  404efc:	cmovg  eax,ecx
  404eff:	cmp    eax,0x1
  404f02:	jle    0x40506d
  404f08:	cmp    r13b,BYTE PTR [r10+0x1]
  404f0c:	jne    0x40506d
  404f12:	add    r10,0x2
  404f16:	mov    r9d,0x1
  404f1c:	jmp    0x404f31
  404f1e:	xchg   ax,ax
  404f20:	add    r10,0x1
  404f24:	cmp    r13b,BYTE PTR [r10-0x1]
  404f28:	jne    0x405060
  404f2e:	mov    r9d,r11d
  404f31:	lea    r11d,[r9+0x1]
  404f35:	cmp    r11d,eax
  404f38:	jne    0x404f20
  404f3a:	cmp    r9d,0x2
  404f3e:	jle    0x40506d
  404f44:	lea    r10d,[r9-0x6]
  404f48:	cmp    r10d,0x1
  404f4c:	ja     0x404f61
  404f4e:	xchg   ax,ax
  404f50:	sub    r9d,0x1
  404f54:	lea    eax,[r9-0x6]
  404f58:	cmp    eax,0x1
  404f5b:	jbe    0x404f50
  404f5d:	lea    eax,[r9+0x1]
  404f61:	lea    r8d,[r8+r9*1+0x47]
  404f66:	add    r9d,0x1d
  404f6a:	mov    BYTE PTR [rdi+0x1],0x2a
  404f6e:	mov    BYTE PTR [rdi+0x2],r9b
  404f72:	add    rdi,0x3
  404f76:	add    edx,eax
  404f78:	cmp    r12d,edx
  404f7b:	jg     0x404ee0
  404f81:	mov    ecx,r8d
  404f84:	mov    ebp,r8d
  404f87:	shr    cl,0x4
  404f8a:	and    ebp,0xf
  404f8d:	movzx  ecx,cl
  404f90:	mov    BYTE PTR [rdi],0x23
  404f93:	add    rdi,0x3
  404f97:	call   0x41cdc0
  404f9c:	mov    ecx,ebp
  404f9e:	mov    BYTE PTR [rdi-0x2],al
  404fa1:	call   0x41cdc0
  404fa6:	mov    r12,QWORD PTR [rip+0x4c7a3]        # 0x451750
  404fad:	mov    BYTE PTR [rdi-0x1],al
  404fb0:	mov    BYTE PTR [rdi],0x0
  404fb3:	sub    rdi,rbx
  404fb6:	mov    r15,QWORD PTR [rip+0x416a3]        # 0x446660
  404fbd:	mov    ebp,edi
  404fbf:	mov    r13,r12
  404fc2:	jmp    0x404ff2
  404fc4:	call   0x404dd0
  404fc9:	test   eax,eax
  404fcb:	mov    r14d,eax
  404fce:	js     0x40504d
  404fd0:	mov    eax,DWORD PTR [rip+0x480fa]        # 0x44d0d0
  404fd6:	test   eax,eax
  404fd8:	jne    0x405080
  404fde:	cmp    r14d,0x3
  404fe2:	je     0x4050af
  404fe8:	cmp    r14d,0x2b
  404fec:	je     0x405118
  404ff2:	mov    edx,ebp
  404ff4:	mov    rcx,rbx
  404ff7:	call   0x404b60
  404ffc:	cdqe   
  404ffe:	cmp    rax,rdi
  405001:	jne    0x405136
  405007:	mov    eax,esi
  405009:	or     eax,DWORD PTR [rip+0x480b5]        # 0x44d0c4
  40500f:	jne    0x4050e3
  405015:	mov    edx,DWORD PTR [rip+0x480b5]        # 0x44d0d0
  40501b:	test   edx,edx
  40501d:	je     0x404fc4
  40501f:	call   r12
  405022:	lea    rdx,[rip+0x2c00f]        # 0x431038
  405029:	lea    rcx,[rax+0x60]
  40502d:	mov    r8,rbx
  405030:	call   0x42aa80
  405035:	call   r12
  405038:	lea    rcx,[rax+0x60]
  40503c:	call   0x42a6f0
  405041:	call   0x404dd0
  405046:	test   eax,eax
  405048:	mov    r14d,eax
  40504b:	jns    0x404fd0
  40504d:	mov    rcx,rbx
  405050:	call   0x42a6c8
  405055:	mov    eax,0xffffffff
  40505a:	jmp    0x405125
  40505f:	nop
  405060:	cmp    r9d,0x2
  405064:	mov    eax,r11d
  405067:	jg     0x404f44
  40506d:	mov    rdi,r14
  405070:	mov    eax,0x1
  405075:	jmp    0x404f76
  40507a:	nop    WORD PTR [rax+rax*1+0x0]
  405080:	call   r13
  405083:	lea    rdx,[rip+0x2bfd0]        # 0x43105a
  40508a:	lea    rcx,[rax+0x60]
  40508e:	mov    r9d,r14d
  405091:	mov    r8d,r14d
  405094:	call   0x42aa80
  405099:	call   r13
  40509c:	lea    rcx,[rax+0x60]
  4050a0:	call   0x42a6f0
  4050a5:	cmp    r14d,0x3
  4050a9:	jne    0x404fe8
  4050af:	mov    rax,QWORD PTR [rip+0x4139a]        # 0x446450
  4050b6:	cmp    QWORD PTR [rax],0x0
  4050ba:	je     0x404ff2
  4050c0:	mov    rax,QWORD PTR [r15]
  4050c3:	call   QWORD PTR [rax+0x88]
  4050c9:	jmp    0x404ff2
  4050ce:	test   r12d,r12d
  4050d1:	mov    BYTE PTR [rax],0x24
  4050d4:	jg     0x404ed0
  4050da:	xor    ebp,ebp
  4050dc:	xor    ecx,ecx
  4050de:	jmp    0x404f90
  4050e3:	mov    ecx,DWORD PTR [rip+0x47fe7]        # 0x44d0d0
  4050e9:	test   ecx,ecx
  4050eb:	je     0x405118
  4050ed:	test   esi,esi
  4050ef:	mov    rsi,QWORD PTR [rip+0x4c65a]        # 0x451750
  4050f6:	je     0x405151
  4050f8:	call   rsi
  4050fa:	lea    rdx,[rip+0x2bf00]        # 0x431001
  405101:	lea    rcx,[rax+0x60]
  405105:	mov    r8,rbx
  405108:	call   0x42aa80
  40510d:	call   rsi
  40510f:	lea    rcx,[rax+0x60]
  405113:	call   0x42a6f0
  405118:	mov    rcx,rbx
  40511b:	call   0x42a6c8
  405120:	mov    eax,0x1
  405125:	add    rsp,0x28
  405129:	pop    rbx
  40512a:	pop    rsi
  40512b:	pop    rdi
  40512c:	pop    rbp
  40512d:	pop    r12
  40512f:	pop    r13
  405131:	pop    r14
  405133:	pop    r15
  405135:	ret    
  405136:	lea    rcx,[rip+0x2beb6]        # 0x430ff3
  40513d:	call   0x42a650
  405142:	mov    rcx,rbx
  405145:	call   0x42a6c8
  40514a:	mov    eax,0xffffffff
  40514f:	jmp    0x405125
  405151:	call   rsi
  405153:	lea    rdx,[rip+0x2bebf]        # 0x431019
  40515a:	lea    rcx,[rax+0x60]
  40515e:	mov    r8,rbx
  405161:	call   0x42aa80
  405166:	jmp    0x40510d
  405168:	nop    DWORD PTR [rax+rax*1+0x0]
  405170:	push   rdi
  405171:	push   rsi
  405172:	push   rbx
  405173:	sub    rsp,0x260
  40517a:	mov    rcx,QWORD PTR [rip+0x26e97]        # 0x42c018
  405181:	xor    r9d,r9d
  405184:	xor    r8d,r8d
  405187:	lea    rax,[rsp+0x40]
  40518c:	mov    DWORD PTR [rsp+0x40],0x0
  405194:	mov    DWORD PTR [rsp+0x44],0x0
  40519c:	mov    DWORD PTR [rsp+0x50],0x1
  4051a4:	lea    rdx,[rsp+0x50]
  4051a9:	mov    QWORD PTR [rsp+0x58],rcx
  4051ae:	mov    QWORD PTR [rsp+0x20],rax
  4051b3:	add    ecx,0x1
  4051b6:	call   QWORD PTR [rip+0x4c82c]        # 0x4519e8
  4051bc:	test   eax,eax
  4051be:	jle    0x40522f
  4051c0:	lea    rcx,[rsp+0x3f]
  4051c5:	mov    edx,0x1
  4051ca:	mov    BYTE PTR [rsp+0x3f],0x0
  4051cf:	call   0x404bc0
  4051d4:	test   eax,eax
  4051d6:	mov    ebx,eax
  4051d8:	je     0x405282
  4051de:	cmp    eax,0x1
  4051e1:	movzx  edi,BYTE PTR [rsp+0x3f]
  4051e6:	je     0x405240
  4051e8:	mov    rsi,QWORD PTR [rip+0x4c561]        # 0x451750
  4051ef:	call   rsi
  4051f1:	lea    rdx,[rip+0x2be98]        # 0x431090
  4051f8:	lea    rcx,[rax+0x60]
  4051fc:	mov    r8d,ebx
  4051ff:	movsx  r9d,dil
  405203:	call   0x42aa80
  405208:	movsx  ebx,BYTE PTR [rsp+0x3f]
  40520d:	mov    ecx,ebx
  40520f:	call   QWORD PTR [rip+0x4c64b]        # 0x451860
  405215:	test   eax,eax
  405217:	je     0x405260
  405219:	call   rsi
  40521b:	lea    rdx,[rip+0x2be92]        # 0x4310b4
  405222:	lea    rcx,[rax+0x60]
  405226:	mov    r8d,ebx
  405229:	call   0x42aa80
  40522e:	nop
  40522f:	add    rsp,0x260
  405236:	pop    rbx
  405237:	pop    rsi
  405238:	pop    rdi
  405239:	ret    
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	cmp    dil,0x3
  405244:	jne    0x4051e8
  405246:	mov    rax,QWORD PTR [rip+0x41413]        # 0x446660
  40524d:	mov    rax,QWORD PTR [rax]
  405250:	call   QWORD PTR [rax+0x88]
  405256:	jmp    0x40522f
  405258:	nop    DWORD PTR [rax+rax*1+0x0]
  405260:	call   rsi
  405262:	lea    rdx,[rip+0x2be53]        # 0x4310bc
  405269:	lea    rcx,[rax+0x60]
  40526d:	movzx  r8d,bl
  405271:	call   0x42aa80
  405276:	nop
  405277:	add    rsp,0x260
  40527e:	pop    rbx
  40527f:	pop    rsi
  405280:	pop    rdi
  405281:	ret    
  405282:	call   QWORD PTR [rip+0x4c4c8]        # 0x451750
  405288:	lea    rdx,[rip+0x2bde3]        # 0x431072
  40528f:	lea    rcx,[rax+0x60]
  405293:	call   0x42aa80
  405298:	nop
  405299:	add    rsp,0x260
  4052a0:	pop    rbx
  4052a1:	pop    rsi
  4052a2:	pop    rdi
  4052a3:	ret    
  4052a4:	xchg   ax,ax
  4052a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052b0:	xor    eax,eax
  4052b2:	cmp    QWORD PTR [rip+0x26d5e],0xffffffffffffffff        # 0x42c018
  4052ba:	setne  al
  4052bd:	ret    
  4052be:	xchg   ax,ax
  4052c0:	mov    eax,DWORD PTR [rip+0x4803e]        # 0x44d304
  4052c6:	ret    
  4052c7:	nop    WORD PTR [rax+rax*1+0x0]
  4052d0:	push   rdi
  4052d1:	push   rsi
  4052d2:	push   rbx
  4052d3:	sub    rsp,0x1e0
  4052da:	lea    rdi,[rip+0x2bde7]        # 0x4310c8
  4052e1:	mov    DWORD PTR [rip+0x48019],0x0        # 0x44d304
  4052eb:	mov    rdx,rcx
  4052ee:	mov    ecx,0x6
  4052f3:	mov    rsi,rdx
  4052f6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4052f8:	jne    0x405320
  4052fa:	mov    DWORD PTR [rip+0x48000],0x1        # 0x44d304
  405304:	mov    DWORD PTR [rip+0x47db2],0x1        # 0x44d0c0
  40530e:	add    rsp,0x1e0
  405315:	pop    rbx
  405316:	pop    rsi
  405317:	pop    rdi
  405318:	ret    
  405319:	nop    DWORD PTR [rax+0x0]
  405320:	mov    rbx,rdx
  405323:	mov    edx,0x3a
  405328:	mov    rcx,rbx
  40532b:	call   0x42a630
  405330:	test   rax,rax
  405333:	mov    rdi,rax
  405336:	je     0x405410
  40533c:	lea    rdx,[rsp+0x38]
  405341:	lea    rcx,[rax+0x1]
  405345:	mov    r8d,0xa
  40534b:	call   0x42a5e0
  405350:	cmp    BYTE PTR [rdi+0x1],0x0
  405354:	mov    esi,eax
  405356:	je     0x405469
  40535c:	mov    rax,QWORD PTR [rsp+0x38]
  405361:	cmp    BYTE PTR [rax],0x0
  405364:	jne    0x405469
  40536a:	mov    edx,DWORD PTR [rip+0x47d64]        # 0x44d0d4
  405370:	test   edx,edx
  405372:	je     0x405425
  405378:	mov    r8d,0x6
  40537e:	mov    edx,0x1
  405383:	mov    ecx,0x2
  405388:	call   QWORD PTR [rip+0x4c672]        # 0x451a00
  40538e:	cmp    rax,0xffffffffffffffff
  405392:	mov    QWORD PTR [rip+0x26c77],rax        # 0x42c010
  405399:	je     0x405478
  40539f:	lea    r9,[rsp+0x34]
  4053a4:	mov    r8d,0x4
  4053aa:	mov    edx,0xffff
  4053af:	mov    rcx,rax
  4053b2:	mov    DWORD PTR [rsp+0x34],0x1
  4053ba:	mov    DWORD PTR [rsp+0x20],0x4
  4053c2:	call   QWORD PTR [rip+0x4c630]        # 0x4519f8
  4053c8:	mov    eax,0x2
  4053cd:	movzx  ecx,si
  4053d0:	mov    WORD PTR [rsp+0x40],ax
  4053d5:	call   QWORD PTR [rip+0x4c5e5]        # 0x4519c0
  4053db:	mov    DWORD PTR [rsp+0x44],0x0
  4053e3:	mov    WORD PTR [rsp+0x42],ax
  4053e8:	lea    rdx,[rsp+0x40]
  4053ed:	mov    r8d,0x10
  4053f3:	mov    rcx,QWORD PTR [rip+0x26c16]        # 0x42c010
  4053fa:	call   QWORD PTR [rip+0x4c5a8]        # 0x4519a8
  405400:	test   eax,eax
  405402:	je     0x405444
  405404:	lea    rcx,[rip+0x2bceb]        # 0x4310f6
  40540b:	call   0x40e760
  405410:	mov    DWORD PTR [rip+0x47ca6],0x0        # 0x44d0c0
  40541a:	add    rsp,0x1e0
  405421:	pop    rbx
  405422:	pop    rsi
  405423:	pop    rdi
  405424:	ret    
  405425:	lea    rdx,[rsp+0x40]
  40542a:	mov    ecx,0x1
  40542f:	call   QWORD PTR [rip+0x4c55b]        # 0x451990
  405435:	mov    DWORD PTR [rip+0x47c95],0x1        # 0x44d0d4
  40543f:	jmp    0x405378
  405444:	mov    edx,0x1
  405449:	mov    rcx,QWORD PTR [rip+0x26bc0]        # 0x42c010
  405450:	call   QWORD PTR [rip+0x4c57a]        # 0x4519d0
  405456:	test   eax,eax
  405458:	jne    0x405404
  40545a:	mov    DWORD PTR [rip+0x47c5c],0x1        # 0x44d0c0
  405464:	jmp    0x40530e
  405469:	lea    rcx,[rip+0x2bc5e]        # 0x4310ce
  405470:	mov    rdx,rbx
  405473:	call   0x41d140
  405478:	lea    rcx,[rip+0x2bc65]        # 0x4310e4
  40547f:	call   0x40e760
  405484:	nop
  405485:	nop
  405486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405490:	push   rdi
  405491:	push   rsi
  405492:	sub    rsp,0x48
  405496:	mov    edx,0x3a
  40549b:	mov    rsi,rcx
  40549e:	call   0x42a630
  4054a3:	test   rax,rax
  4054a6:	je     0x405594
  4054ac:	lea    rdi,[rip+0x2bc15]        # 0x4310c8
  4054b3:	mov    ecx,0x6
  4054b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4054ba:	je     0x405550
  4054c0:	mov    DWORD PTR [rsp+0x2c],0x10
  4054c8:	lea    rdx,[rsp+0x30]
  4054cd:	lea    r8,[rsp+0x2c]
  4054d2:	mov    rcx,QWORD PTR [rip+0x26b37]        # 0x42c010
  4054d9:	call   QWORD PTR [rip+0x4c4d9]        # 0x4519b8
  4054df:	test   eax,eax
  4054e1:	js     0x405541
  4054e3:	movsxd rax,DWORD PTR [rsp+0x2c]
  4054e8:	cmp    rax,0x10
  4054ec:	jb     0x405541
  4054ee:	movzx  ecx,WORD PTR [rsp+0x32]
  4054f3:	call   QWORD PTR [rip+0x4c4df]        # 0x4519d8
  4054f9:	mov    rsi,QWORD PTR [rip+0x4c250]        # 0x451750
  405500:	mov    edi,eax
  405502:	call   rsi
  405504:	lea    rdx,[rip+0x2bc6a]        # 0x431175
  40550b:	lea    rcx,[rax+0x60]
  40550f:	movzx  r8d,di
  405513:	call   0x42aa80
  405518:	call   rsi
  40551a:	lea    rcx,[rax+0x60]
  40551e:	call   0x42a6f0
  405523:	mov    rcx,QWORD PTR [rip+0x26ae6]        # 0x42c010
  40552a:	lea    rdx,[rip+0xfffffffffffff74f]        # 0x404c80
  405531:	xor    r8d,r8d
  405534:	call   0x4126f0
  405539:	nop
  40553a:	add    rsp,0x48
  40553e:	pop    rsi
  40553f:	pop    rdi
  405540:	ret    
  405541:	lea    rcx,[rip+0x2bc18]        # 0x431160
  405548:	call   0x40e760
  40554d:	nop    DWORD PTR [rax]
  405550:	mov    rsi,QWORD PTR [rip+0x4c1f9]        # 0x451750
  405557:	call   rsi
  405559:	lea    rdx,[rip+0x2bbe2]        # 0x431142
  405560:	lea    rcx,[rax+0x60]
  405564:	call   0x42aa80
  405569:	call   rsi
  40556b:	mov    rcx,rax
  40556e:	call   0x42a588
  405573:	lea    rdx,[rip+0x6746]        # 0x40bcc0
  40557a:	movsxd rcx,eax
  40557d:	xor    r8d,r8d
  405580:	mov    QWORD PTR [rip+0x26a91],rcx        # 0x42c018
  405587:	call   0x4126f0
  40558c:	nop
  40558d:	add    rsp,0x48
  405591:	pop    rsi
  405592:	pop    rdi
  405593:	ret    
  405594:	lea    rcx,[rip+0x2bb75]        # 0x431110
  40559b:	call   0x41d140
  4055a0:	nop
  4055a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4055a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055b0:	sub    rsp,0x28
  4055b4:	mov    rcx,QWORD PTR [rip+0x26a5d]        # 0x42c018
  4055bb:	call   0x4128b0
  4055c0:	mov    rcx,QWORD PTR [rip+0x26a51]        # 0x42c018
  4055c7:	call   QWORD PTR [rip+0x4c3e3]        # 0x4519b0
  4055cd:	mov    ecx,DWORD PTR [rip+0x26a4d]        # 0x42c020
  4055d3:	mov    QWORD PTR [rip+0x26a3a],0xffffffffffffffff        # 0x42c018
  4055de:	mov    DWORD PTR [rip+0x47af8],0x0        # 0x44d0e0
  4055e8:	cmp    ecx,0xffffffff
  4055eb:	je     0x4055fc
  4055ed:	call   0x412690
  4055f2:	mov    DWORD PTR [rip+0x26a24],0xffffffff        # 0x42c020
  4055fc:	add    rsp,0x28
  405600:	ret    
  405601:	nop    DWORD PTR [rax+rax*1+0x0]
  405606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405610:	push   rbp
  405611:	push   rdi
  405612:	push   rsi
  405613:	push   rbx
  405614:	sub    rsp,0x28
  405618:	test   r8d,r8d
  40561b:	mov    rdi,rcx
  40561e:	jle    0x40565a
  405620:	lea    eax,[r8-0x1]
  405624:	mov    rbx,rdx
  405627:	lea    rbp,[rdx+rax*1+0x1]
  40562c:	xor    eax,eax
  40562e:	xchg   ax,ax
  405630:	movsx  ecx,BYTE PTR [rbx]
  405633:	shl    rax,0x4
  405637:	add    rbx,0x1
  40563b:	mov    rsi,rax
  40563e:	call   0x41cd80
  405643:	and    eax,0xf
  405646:	or     rax,rsi
  405649:	cmp    rbx,rbp
  40564c:	jne    0x405630
  40564e:	mov    QWORD PTR [rdi],rax
  405651:	add    rsp,0x28
  405655:	pop    rbx
  405656:	pop    rsi
  405657:	pop    rdi
  405658:	pop    rbp
  405659:	ret    
  40565a:	xor    eax,eax
  40565c:	jmp    0x40564e
  40565e:	xchg   ax,ax
  405660:	push   rbx
  405661:	sub    rsp,0x20
  405665:	movzx  eax,BYTE PTR [rdx]
  405668:	cmp    al,0x3b
  40566a:	je     0x4056aa
  40566c:	test   al,al
  40566e:	je     0x4056aa
  405670:	mov    rax,rdx
  405673:	jmp    0x40567a
  405675:	test   r8b,r8b
  405678:	je     0x405688
  40567a:	add    rax,0x1
  40567e:	movzx  r8d,BYTE PTR [rax]
  405682:	cmp    r8b,0x3b
  405686:	jne    0x405675
  405688:	mov    r8d,eax
  40568b:	mov    rbx,rax
  40568e:	sub    r8d,edx
  405691:	call   0x405610
  405696:	xor    eax,eax
  405698:	cmp    BYTE PTR [rbx],0x3b
  40569b:	sete   al
  40569e:	add    rbx,rax
  4056a1:	mov    rax,rbx
  4056a4:	add    rsp,0x20
  4056a8:	pop    rbx
  4056a9:	ret    
  4056aa:	mov    rbx,rdx
  4056ad:	xor    r8d,r8d
  4056b0:	jmp    0x405691
  4056b2:	nop    DWORD PTR [rax+0x0]
  4056b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056c0:	push   rdi
  4056c1:	push   rsi
  4056c2:	push   rbx
  4056c3:	sub    rsp,0x30
  4056c7:	mov    rax,QWORD PTR [rip+0x40e82]        # 0x446550
  4056ce:	mov    rbx,rcx
  4056d1:	mov    rsi,rdx
  4056d4:	lea    rdi,[rsp+0x20]
  4056d9:	mov    eax,DWORD PTR [rax]
  4056db:	test   eax,eax
  4056dd:	jne    0x405720
  4056df:	mov    rax,QWORD PTR [rsi]
  4056e2:	mov    rcx,rdi
  4056e5:	mov    QWORD PTR [rsp+0x20],rax
  4056ea:	mov    eax,DWORD PTR [rsi+0x8]
  4056ed:	mov    DWORD PTR [rsp+0x28],eax
  4056f1:	call   0x41ad30
  4056f6:	test   eax,eax
  4056f8:	mov    r8d,eax
  4056fb:	js     0x405754
  4056fd:	lea    rdx,[rip+0x2ba96]        # 0x43119a
  405704:	mov    rcx,rbx
  405707:	call   0x42aab0
  40570c:	cdqe   
  40570e:	add    rax,rbx
  405711:	add    rsp,0x30
  405715:	pop    rbx
  405716:	pop    rsi
  405717:	pop    rdi
  405718:	ret    
  405719:	nop    DWORD PTR [rax+0x0]
  405720:	mov    rax,QWORD PTR [rdx]
  405723:	mov    rcx,rdi
  405726:	mov    QWORD PTR [rsp+0x20],rax
  40572b:	mov    eax,DWORD PTR [rdx+0x8]
  40572e:	mov    DWORD PTR [rsp+0x28],eax
  405732:	call   0x41ad20
  405737:	test   eax,eax
  405739:	mov    r8d,eax
  40573c:	js     0x405773
  40573e:	lea    rdx,[rip+0x2ba4c]        # 0x431191
  405745:	mov    rcx,rbx
  405748:	call   0x42aab0
  40574d:	cdqe   
  40574f:	add    rbx,rax
  405752:	jmp    0x4056df
  405754:	lea    rdx,[rip+0x2ba3b]        # 0x431196
  40575b:	neg    r8d
  40575e:	mov    rcx,rbx
  405761:	call   0x42aab0
  405766:	cdqe   
  405768:	add    rax,rbx
  40576b:	add    rsp,0x30
  40576f:	pop    rbx
  405770:	pop    rsi
  405771:	pop    rdi
  405772:	ret    
  405773:	lea    rdx,[rip+0x2ba11]        # 0x43118b
  40577a:	mov    rcx,rbx
  40577d:	neg    r8d
  405780:	call   0x42aab0
  405785:	cdqe   
  405787:	add    rbx,rax
  40578a:	jmp    0x4056df
  40578f:	nop
  405790:	push   rdi
  405791:	push   rsi
  405792:	push   rbx
  405793:	sub    rsp,0x40
  405797:	cmp    BYTE PTR [rdx],0x70
  40579a:	mov    rsi,rcx
  40579d:	mov    rbx,rdx
  4057a0:	mov    rdi,r8
  4057a3:	mov    QWORD PTR [rsp+0x38],0x0
  4057ac:	je     0x405810
  4057ae:	lea    rdx,[rsp+0x30]
  4057b3:	mov    rcx,rbx
  4057b6:	call   0x404c20
  4057bb:	mov    rbx,rax
  4057be:	call   0x403f40
  4057c3:	mov    rdx,QWORD PTR [rax]
  4057c6:	lea    rcx,[rsp+0x20]
  4057cb:	mov    QWORD PTR [rsp+0x20],rdx
  4057d0:	mov    eax,DWORD PTR [rax+0x8]
  4057d3:	mov    DWORD PTR [rsp+0x28],eax
  4057d7:	call   0x41ad20
  4057dc:	test   rdi,rdi
  4057df:	cdqe   
  4057e1:	mov    rdx,rax
  4057e4:	mov    QWORD PTR [rsp+0x38],rax
  4057e9:	je     0x4057f3
  4057eb:	mov    rax,QWORD PTR [rsp+0x30]
  4057f0:	mov    QWORD PTR [rdi],rax
  4057f3:	xor    r9d,r9d
  4057f6:	mov    r8d,ebx
  4057f9:	mov    rcx,rsi
  4057fc:	call   0x41acf0
  405801:	mov    rax,rsi
  405804:	add    rsp,0x40
  405808:	pop    rbx
  405809:	pop    rsi
  40580a:	pop    rdi
  40580b:	ret    
  40580c:	nop    DWORD PTR [rax+0x0]
  405810:	lea    rdx,[rsp+0x38]
  405815:	lea    rcx,[rbx+0x1]
  405819:	call   0x41ce20
  40581e:	mov    QWORD PTR [rsp+0x30],rax
  405823:	cmp    BYTE PTR [rax],0x2e
  405826:	jne    0x405860
  405828:	lea    rdx,[rsp+0x30]
  40582d:	lea    rcx,[rax+0x1]
  405831:	call   0x404c20
  405836:	test   rdi,rdi
  405839:	je     0x405843
  40583b:	mov    rdx,QWORD PTR [rsp+0x30]
  405840:	mov    QWORD PTR [rdi],rdx
  405843:	mov    edx,DWORD PTR [rsp+0x38]
  405847:	mov    r8d,eax
  40584a:	xor    r9d,r9d
  40584d:	mov    rcx,rsi
  405850:	call   0x41acf0
  405855:	mov    rax,rsi
  405858:	add    rsp,0x40
  40585c:	pop    rbx
  40585d:	pop    rsi
  40585e:	pop    rdi
  40585f:	ret    
  405860:	lea    rcx,[rip+0x2b936]        # 0x43119d
  405867:	mov    rdx,rbx
  40586a:	call   0x41d140
  40586f:	nop
  405870:	xor    r8d,r8d
  405873:	jmp    0x404e90
  405878:	nop    DWORD PTR [rax+rax*1+0x0]
  405880:	push   rbx
  405881:	sub    rsp,0x20
  405885:	mov    rbx,rcx
  405888:	call   0x42a610
  40588d:	xor    r8d,r8d
  405890:	mov    edx,eax
  405892:	mov    rcx,rbx
  405895:	add    rsp,0x20
  405899:	pop    rbx
  40589a:	jmp    0x404e90
  40589f:	nop
  4058a0:	push   rbx
  4058a1:	sub    rsp,0x20
  4058a5:	mov    rbx,rcx
  4058a8:	call   0x42a610
  4058ad:	mov    r8d,0x1
  4058b3:	mov    edx,eax
  4058b5:	mov    rcx,rbx
  4058b8:	add    rsp,0x20
  4058bc:	pop    rbx
  4058bd:	jmp    0x404e90
  4058c2:	nop    DWORD PTR [rax+0x0]
  4058c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058d0:	cmp    QWORD PTR [rip+0x26740],0xffffffffffffffff        # 0x42c018
  4058d8:	je     0x4058e0
  4058da:	jmp    0x405170
  4058df:	nop
  4058e0:	repz ret 
  4058e2:	nop    DWORD PTR [rax+0x0]
  4058e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058f0:	mov    eax,DWORD PTR [rip+0x47a0a]        # 0x44d300
  4058f6:	test   eax,eax
  4058f8:	jne    0x405904
  4058fa:	mov    DWORD PTR [rip+0x479fc],0x1        # 0x44d300
  405904:	repz ret 
  405906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405910:	mov    eax,DWORD PTR [rip+0x479ea]        # 0x44d300
  405916:	test   eax,eax
  405918:	je     0x405924
  40591a:	mov    DWORD PTR [rip+0x479dc],0x0        # 0x44d300
  405924:	repz ret 
  405926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405930:	mov    DWORD PTR [rip+0x479c6],0x0        # 0x44d300
  40593a:	ret    
  40593b:	nop    DWORD PTR [rax+rax*1+0x0]
  405940:	push   r15
  405942:	push   r14
  405944:	push   r13
  405946:	push   r12
  405948:	push   rbp
  405949:	push   rdi
  40594a:	push   rsi
  40594b:	push   rbx
  40594c:	sub    rsp,0x38
  405950:	mov    rsi,QWORD PTR [rip+0x4bdf9]        # 0x451750
  405957:	mov    rdi,QWORD PTR [rip+0x40d02]        # 0x446660
  40595e:	mov    rbp,rcx
  405961:	mov    r12,rsi
  405964:	call   0x404dd0
  405969:	cmp    eax,0x3
  40596c:	mov    ebx,eax
  40596e:	je     0x4059c2
  405970:	cmp    eax,0x24
  405973:	je     0x4059d0
  405975:	mov    r13d,DWORD PTR [rip+0x47754]        # 0x44d0d0
  40597c:	test   r13d,r13d
  40597f:	jne    0x4059a0
  405981:	test   ebx,ebx
  405983:	jns    0x405964
  405985:	mov    eax,0xffffffff
  40598a:	add    rsp,0x38
  40598e:	pop    rbx
  40598f:	pop    rsi
  405990:	pop    rdi
  405991:	pop    rbp
  405992:	pop    r12
  405994:	pop    r13
  405996:	pop    r14
  405998:	pop    r15
  40599a:	ret    
  40599b:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	call   rsi
  4059a2:	lea    rdx,[rip+0x2b80f]        # 0x4311b8
  4059a9:	lea    rcx,[rax+0x60]
  4059ad:	mov    r8d,ebx
  4059b0:	call   0x42aa80
  4059b5:	call   rsi
  4059b7:	lea    rcx,[rax+0x60]
  4059bb:	call   0x42a6f0
  4059c0:	jmp    0x405981
  4059c2:	mov    rax,QWORD PTR [rdi]
  4059c5:	call   QWORD PTR [rax+0x88]
  4059cb:	jmp    0x405964
  4059cd:	nop    DWORD PTR [rax]
  4059d0:	mov    rbx,rbp
  4059d3:	xor    r13d,r13d
  4059d6:	jmp    0x4059ef
  4059d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e0:	cmp    eax,0x23
  4059e3:	je     0x405a00
  4059e5:	add    rbx,0x1
  4059e9:	mov    BYTE PTR [rbx-0x1],al
  4059ec:	add    r13d,eax
  4059ef:	call   0x404dd0
  4059f4:	test   eax,eax
  4059f6:	jns    0x4059e0
  4059f8:	jmp    0x405985
  4059fa:	nop    WORD PTR [rax+rax*1+0x0]
  405a00:	mov    BYTE PTR [rbx],0x0
  405a03:	movzx  r15d,r13b
  405a07:	call   0x404dd0
  405a0c:	mov    ecx,eax
  405a0e:	call   0x41cd80
  405a13:	mov    r14d,eax
  405a16:	movzx  r14d,r14b
  405a1a:	call   0x404dd0
  405a1f:	mov    ecx,eax
  405a21:	shl    r14d,0x4
  405a25:	call   0x41cd80
  405a2a:	movzx  eax,al
  405a2d:	lea    r13d,[r14+rax*1]
  405a31:	cmp    r15d,r13d
  405a34:	je     0x405aa0
  405a36:	mov    r11d,DWORD PTR [rip+0x47687]        # 0x44d0c4
  405a3d:	test   r11d,r11d
  405a40:	jne    0x405a7f
  405a42:	call   r12
  405a45:	lea    rdx,[rip+0x2b7dc]        # 0x431228
  405a4c:	lea    rcx,[rax+0x60]
  405a50:	mov    r9d,r15d
  405a53:	mov    r8d,r13d
  405a56:	mov    QWORD PTR [rsp+0x20],rbp
  405a5b:	call   0x42aa80
  405a60:	lea    rcx,[rip+0x2b7f0]        # 0x431257
  405a67:	mov    edx,0x1
  405a6c:	call   0x404b60
  405a71:	cmp    eax,0x1
  405a74:	je     0x405964
  405a7a:	jmp    0x405985
  405a7f:	call   QWORD PTR [rip+0x4bccb]        # 0x451750
  405a85:	lea    rdx,[rip+0x2b74c]        # 0x4311d8
  405a8c:	lea    rcx,[rax+0x60]
  405a90:	mov    QWORD PTR [rsp+0x20],rbp
  405a95:	mov    r9d,r15d
  405a98:	mov    r8d,r13d
  405a9b:	call   0x42aa80
  405aa0:	mov    r10d,DWORD PTR [rip+0x4761d]        # 0x44d0c4
  405aa7:	test   r10d,r10d
  405aaa:	jne    0x405b5d
  405ab0:	mov    r9d,DWORD PTR [rip+0x47619]        # 0x44d0d0
  405ab7:	test   r9d,r9d
  405aba:	jne    0x405b93
  405ac0:	lea    rcx,[rip+0x2b7b9]        # 0x431280
  405ac7:	mov    edx,0x1
  405acc:	call   0x404b60
  405ad1:	cmp    eax,0x1
  405ad4:	jne    0x405985
  405ada:	mov    r8d,DWORD PTR [rip+0x475ef]        # 0x44d0d0
  405ae1:	test   r8d,r8d
  405ae4:	je     0x405b0a
  405ae6:	mov    rsi,QWORD PTR [rip+0x4bc63]        # 0x451750
  405aed:	call   rsi
  405aef:	lea    rdx,[rip+0x2b78c]        # 0x431282
  405af6:	lea    rcx,[rax+0x60]
  405afa:	call   0x42aa80
  405aff:	call   rsi
  405b01:	lea    rcx,[rax+0x60]
  405b05:	call   0x42a6f0
  405b0a:	mov    ecx,DWORD PTR [rip+0x475d0]        # 0x44d0e0
  405b10:	test   ecx,ecx
  405b12:	jle    0x405b54
  405b14:	mov    rax,QWORD PTR [rip+0x475bd]        # 0x44d0d8
  405b1b:	mov    rsi,QWORD PTR [rip+0x40b3e]        # 0x446660
  405b22:	cmp    BYTE PTR [rax],0x3
  405b25:	je     0x405b3c
  405b27:	jmp    0x405b54
  405b29:	nop    DWORD PTR [rax+0x0]
  405b30:	mov    rax,QWORD PTR [rip+0x475a1]        # 0x44d0d8
  405b37:	cmp    BYTE PTR [rax],0x3
  405b3a:	jne    0x405b54
  405b3c:	call   0x404dd0
  405b41:	mov    rax,QWORD PTR [rsi]
  405b44:	call   QWORD PTR [rax+0x88]
  405b4a:	mov    eax,DWORD PTR [rip+0x47590]        # 0x44d0e0
  405b50:	test   eax,eax
  405b52:	jg     0x405b30
  405b54:	mov    eax,ebx
  405b56:	sub    eax,ebp
  405b58:	jmp    0x40598a
  405b5d:	mov    edx,DWORD PTR [rip+0x4756d]        # 0x44d0d0
  405b63:	test   edx,edx
  405b65:	je     0x405b0a
  405b67:	mov    rsi,QWORD PTR [rip+0x4bbe2]        # 0x451750
  405b6e:	call   rsi
  405b70:	lea    rdx,[rip+0x2b719]        # 0x431290
  405b77:	lea    rcx,[rax+0x60]
  405b7b:	mov    r8,rbp
  405b7e:	call   0x42aa80
  405b83:	call   rsi
  405b85:	lea    rcx,[rax+0x60]
  405b89:	call   0x42a6f0
  405b8e:	jmp    0x405b0a
  405b93:	mov    rsi,QWORD PTR [rip+0x4bbb6]        # 0x451750
  405b9a:	call   rsi
  405b9c:	lea    rdx,[rip+0x2b6bd]        # 0x431260
  405ba3:	lea    rcx,[rax+0x60]
  405ba7:	mov    r8,rbp
  405baa:	call   0x42aa80
  405baf:	call   rsi
  405bb1:	lea    rcx,[rax+0x60]
  405bb5:	call   0x42a6f0
  405bba:	jmp    0x405ac0
  405bbf:	nop
  405bc0:	mov    BYTE PTR [rcx],0x4f
  405bc3:	mov    BYTE PTR [rcx+0x1],0x4b
  405bc7:	mov    BYTE PTR [rcx+0x2],0x0
  405bcb:	ret    
  405bcc:	nop    DWORD PTR [rax+0x0]
  405bd0:	mov    BYTE PTR [rcx],0x45
  405bd3:	mov    BYTE PTR [rcx+0x1],0x30
  405bd7:	mov    BYTE PTR [rcx+0x2],0x31
  405bdb:	mov    BYTE PTR [rcx+0x3],0x0
  405bdf:	ret    
  405be0:	push   r15
  405be2:	push   r14
  405be4:	push   r13
  405be6:	push   r12
  405be8:	push   rbp
  405be9:	push   rdi
  405bea:	push   rsi
  405beb:	push   rbx
  405bec:	sub    rsp,0x268
  405bf3:	mov    rax,QWORD PTR [rip+0x40876]        # 0x446470
  405bfa:	mov    rsi,rcx
  405bfd:	mov    r12,rdx
  405c00:	mov    rdi,r8
  405c03:	mov    r9d,DWORD PTR [rax]
  405c06:	test   r9d,r9d
  405c09:	jne    0x405c30
  405c0b:	mov    r10d,DWORD PTR [rdi]
  405c0e:	cmp    r10d,0xf
  405c12:	ja     0x405f54
  405c18:	lea    rdx,[rip+0x2b785]        # 0x4313a4
  405c1f:	mov    r9d,r10d
  405c22:	movsxd rax,DWORD PTR [rdx+r9*4]
  405c26:	add    rdx,rax
  405c29:	jmp    rdx
  405c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c30:	mov    rax,QWORD PTR [rdx]
  405c33:	mov    ebx,DWORD PTR [r8]
  405c36:	lea    r14,[rsp+0x40]
  405c3b:	mov    rcx,r14
  405c3e:	mov    QWORD PTR [rsp+0x40],rax
  405c43:	mov    eax,DWORD PTR [rdx+0x8]
  405c46:	mov    DWORD PTR [rsp+0x48],eax
  405c4a:	call   0x40e230
  405c4f:	lea    rcx,[rip+0x2b682]        # 0x4312d8
  405c56:	mov    r8d,ebx
  405c59:	mov    rdx,rax
  405c5c:	call   0x41d1b0
  405c61:	jmp    0x405c0b
  405c63:	mov    r8d,DWORD PTR [rdi+0x8]
  405c67:	lea    rdx,[rip+0x2b705]        # 0x431373
  405c6e:	mov    rcx,rsi
  405c71:	call   0x42aab0
  405c76:	mov    rcx,rsi
  405c79:	call   0x42a610
  405c7e:	mov    rdx,QWORD PTR [r12]
  405c82:	lea    rcx,[rsi+rax*1]
  405c86:	mov    QWORD PTR [rsp+0x40],rdx
  405c8b:	mov    edx,DWORD PTR [r12+0x8]
  405c90:	mov    DWORD PTR [rsp+0x48],edx
  405c94:	lea    rdx,[rsp+0x40]
  405c99:	call   0x4056c0
  405c9e:	nop
  405c9f:	add    rsp,0x268
  405ca6:	pop    rbx
  405ca7:	pop    rsi
  405ca8:	pop    rdi
  405ca9:	pop    rbp
  405caa:	pop    r12
  405cac:	pop    r13
  405cae:	pop    r14
  405cb0:	pop    r15
  405cb2:	ret    
  405cb3:	mov    rax,QWORD PTR [rip+0x40896]        # 0x446550
  405cba:	mov    r9d,DWORD PTR [rax]
  405cbd:	test   r9d,r9d
  405cc0:	je     0x405f80
  405cc6:	mov    rax,QWORD PTR [r12]
  405cca:	lea    rcx,[rsp+0x40]
  405ccf:	mov    QWORD PTR [rsp+0x40],rax
  405cd4:	mov    eax,DWORD PTR [r12+0x8]
  405cd9:	mov    DWORD PTR [rsp+0x48],eax
  405cdd:	call   0x41ad20
  405ce2:	mov    r8d,DWORD PTR [rdi+0x8]
  405ce6:	lea    rdx,[rip+0x2b65c]        # 0x431349
  405ced:	mov    r9d,eax
  405cf0:	mov    rcx,rsi
  405cf3:	call   0x42aab0
  405cf8:	jmp    0x405c9f
  405cfa:	nop    WORD PTR [rax+rax*1+0x0]
  405d00:	cmp    r10d,0x4
  405d04:	je     0x4061c0
  405d0a:	cmp    r10d,0x5
  405d0e:	je     0x406231
  405d14:	cmp    r10d,0x7
  405d18:	je     0x406250
  405d1e:	cmp    r10d,0x6
  405d22:	je     0x406280
  405d28:	cmp    r10d,0xe
  405d2c:	jne    0x405f98
  405d32:	mov    rax,QWORD PTR [rip+0x408a7]        # 0x4465e0
  405d39:	mov    eax,DWORD PTR [rax]
  405d3b:	test   eax,eax
  405d3d:	jne    0x406311
  405d43:	mov    r8d,DWORD PTR [rdi+0x8]
  405d47:	lea    rdx,[rip+0x2b5e7]        # 0x431335
  405d4e:	lea    r14,[rsp+0x40]
  405d53:	mov    rcx,rsi
  405d56:	call   0x42aab0
  405d5b:	mov    rcx,rsi
  405d5e:	call   0x42a610
  405d63:	lea    rbx,[rsi+rax*1]
  405d67:	mov    rax,QWORD PTR [rip+0x406e2]        # 0x446450
  405d6e:	mov    rcx,r14
  405d71:	mov    rax,QWORD PTR [rax]
  405d74:	mov    QWORD PTR [rsp+0x38],rax
  405d79:	mov    rax,QWORD PTR [r12]
  405d7d:	mov    QWORD PTR [rsp+0x40],rax
  405d82:	mov    eax,DWORD PTR [r12+0x8]
  405d87:	mov    DWORD PTR [rsp+0x48],eax
  405d8b:	call   0x403c50
  405d90:	mov    rdi,QWORD PTR [rip+0x406b9]        # 0x446450
  405d97:	mov    QWORD PTR [rdi],rax
  405d9a:	call   0x41c370
  405d9f:	mov    rdi,QWORD PTR [rax+0x10]
  405da3:	mov    rax,QWORD PTR [rip+0x406a6]        # 0x446450
  405daa:	mov    edx,0x1
  405daf:	mov    rcx,QWORD PTR [rax]
  405db2:	call   0x404290
  405db7:	mov    rbp,rax
  405dba:	mov    rax,QWORD PTR [rip+0x4089f]        # 0x446660
  405dc1:	mov    rax,QWORD PTR [rax]
  405dc4:	mov    rax,QWORD PTR [rax+0xd8]
  405dcb:	test   rax,rax
  405dce:	je     0x406132
  405dd4:	call   rax
  405dd6:	test   eax,eax
  405dd8:	je     0x406132
  405dde:	mov    rax,QWORD PTR [rip+0x4087b]        # 0x446660
  405de5:	mov    ecx,0x3a68
  405dea:	mov    DWORD PTR [rbx],0x63746177
  405df0:	mov    WORD PTR [rbx+0x4],cx
  405df4:	lea    rsi,[rbx+0x6]
  405df8:	mov    r15d,0x3c
  405dfe:	mov    rax,QWORD PTR [rax]
  405e01:	call   QWORD PTR [rax+0xe0]
  405e07:	mov    r13,rax
  405e0a:	lea    rax,[rbx+0x16]
  405e0e:	mov    QWORD PTR [rsp+0x30],rax
  405e13:	mov    ecx,r15d
  405e16:	mov    rax,r13
  405e19:	add    rsi,0x1
  405e1d:	shr    rax,cl
  405e20:	sub    r15d,0x4
  405e24:	mov    ecx,eax
  405e26:	and    ecx,0xf
  405e29:	call   0x41cdc0
  405e2e:	cmp    rsi,QWORD PTR [rsp+0x30]
  405e33:	mov    BYTE PTR [rsi-0x1],al
  405e36:	jne    0x405e13
  405e38:	mov    BYTE PTR [rbx+0x16],0x3b
  405e3c:	add    rbx,0x17
  405e40:	jmp    0x405ead
  405e42:	mov    ecx,esi
  405e44:	sar    ecx,0x8
  405e47:	test   ecx,ecx
  405e49:	je     0x405e5c
  405e4b:	lea    r13,[rbx+0x1]
  405e4f:	and    ecx,0xf
  405e52:	call   0x41cdc0
  405e57:	mov    BYTE PTR [rbx],al
  405e59:	mov    rbx,r13
  405e5c:	mov    ecx,esi
  405e5e:	lea    r13,[rbx+0x3]
  405e62:	add    rdi,0x8
  405e66:	sar    ecx,0x4
  405e69:	and    ecx,0xf
  405e6c:	call   0x41cdc0
  405e71:	mov    ecx,esi
  405e73:	mov    BYTE PTR [rbx],al
  405e75:	and    ecx,0xf
  405e78:	call   0x41cdc0
  405e7d:	mov    r8,r13
  405e80:	mov    BYTE PTR [rbx+0x1],al
  405e83:	mov    BYTE PTR [rbx+0x2],0x3a
  405e87:	mov    edx,esi
  405e89:	mov    rcx,rbp
  405e8c:	call   0x404a30
  405e91:	mov    rcx,QWORD PTR [rbp+0x0]
  405e95:	mov    edx,esi
  405e97:	call   0x404710
  405e9c:	add    eax,eax
  405e9e:	cdqe   
  405ea0:	lea    r8,[r13+rax*1+0x0]
  405ea5:	lea    rbx,[r8+0x1]
  405ea9:	mov    BYTE PTR [r8],0x3b
  405ead:	mov    rdx,QWORD PTR [rdi]
  405eb0:	test   rdx,rdx
  405eb3:	je     0x405fe1
  405eb9:	mov    rcx,QWORD PTR [rbp+0x0]
  405ebd:	call   0x404660
  405ec2:	mov    ecx,eax
  405ec4:	mov    esi,eax
  405ec6:	sar    ecx,0xc
  405ec9:	test   ecx,ecx
  405ecb:	je     0x405e42
  405ed1:	lea    r13,[rbx+0x1]
  405ed5:	and    ecx,0xf
  405ed8:	call   0x41cdc0
  405edd:	mov    BYTE PTR [rbx],al
  405edf:	mov    rbx,r13
  405ee2:	jmp    0x405e42
  405ee7:	nop    WORD PTR [rax+rax*1+0x0]
  405ef0:	mov    rax,QWORD PTR [rip+0x40659]        # 0x446550
  405ef7:	mov    r8d,DWORD PTR [rax]
  405efa:	test   r8d,r8d
  405efd:	je     0x405f60
  405eff:	mov    rax,QWORD PTR [r12]
  405f03:	lea    rcx,[rsp+0x40]
  405f08:	mov    QWORD PTR [rsp+0x40],rax
  405f0d:	mov    eax,DWORD PTR [r12+0x8]
  405f12:	mov    DWORD PTR [rsp+0x48],eax
  405f16:	call   0x41ad20
  405f1b:	mov    r8d,DWORD PTR [rdi+0x8]
  405f1f:	lea    rdx,[rip+0x2b438]        # 0x43135e
  405f26:	mov    r9d,eax
  405f29:	mov    rcx,rsi
  405f2c:	call   0x42aab0
  405f31:	jmp    0x405c9f
  405f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f40:	lea    rdx,[rip+0x2b431]        # 0x431378
  405f47:	mov    rcx,rsi
  405f4a:	call   0x42aab0
  405f4f:	jmp    0x405c9f
  405f54:	lea    rcx,[rip+0x2b41f]        # 0x43137a
  405f5b:	call   0x41d140
  405f60:	mov    r8d,DWORD PTR [rdi+0x8]
  405f64:	lea    rdx,[rip+0x2b402]        # 0x43136d
  405f6b:	mov    rcx,rsi
  405f6e:	call   0x42aab0
  405f73:	jmp    0x405c9f
  405f78:	nop    DWORD PTR [rax+rax*1+0x0]
  405f80:	mov    r8d,DWORD PTR [rdi+0x8]
  405f84:	lea    rdx,[rip+0x2b3cd]        # 0x431358
  405f8b:	mov    rcx,rsi
  405f8e:	call   0x42aab0
  405f93:	jmp    0x405c9f
  405f98:	lea    eax,[r10-0x8]
  405f9c:	cmp    eax,0x1
  405f9f:	ja     0x405d43
  405fa5:	mov    eax,DWORD PTR [rdi+0x8]
  405fa8:	lea    r9,[rip+0x2b30c]        # 0x4312bb
  405faf:	cmp    r10d,0x8
  405fb3:	lea    rdx,[rip+0x2b36f]        # 0x431329
  405fba:	mov    r8d,0x5
  405fc0:	mov    rcx,rsi
  405fc3:	lea    r14,[rsp+0x40]
  405fc8:	mov    DWORD PTR [rsp+0x20],eax
  405fcc:	lea    rax,[rip+0x2b2f6]        # 0x4312c9
  405fd3:	cmovne r9,rax
  405fd7:	call   0x42aab0
  405fdc:	jmp    0x405d5b
  405fe1:	mov    rax,QWORD PTR [rip+0x406b8]        # 0x4466a0
  405fe8:	mov    BYTE PTR [rbx],0x0
  405feb:	mov    r15d,DWORD PTR [rax]
  405fee:	test   r15d,r15d
  405ff1:	je     0x4060f1
  405ff7:	mov    rax,QWORD PTR [rip+0x40492]        # 0x446490
  405ffe:	mov    r13d,DWORD PTR [rax]
  406001:	test   r13d,r13d
  406004:	jne    0x4060f1
  40600a:	mov    rax,QWORD PTR [rip+0x4055f]        # 0x446570
  406011:	mov    ebp,DWORD PTR [rax]
  406013:	test   ebp,ebp
  406015:	jne    0x40602d
  406017:	mov    rax,QWORD PTR [rip+0x404a2]        # 0x4464c0
  40601e:	mov    rdx,QWORD PTR [r12]
  406022:	mov    QWORD PTR [rax],rdx
  406025:	mov    edx,DWORD PTR [r12+0x8]
  40602a:	mov    DWORD PTR [rax+0x8],edx
  40602d:	lea    rdx,[rip+0x2b307]        # 0x43133b
  406034:	mov    rcx,rbx
  406037:	mov    edi,0x3b
  40603c:	call   0x42aab0
  406041:	mov    rcx,rbx
  406044:	call   0x42a610
  406049:	lea    rcx,[rbx+rax*1]
  40604d:	mov    rax,QWORD PTR [r12]
  406051:	mov    rdx,r14
  406054:	mov    QWORD PTR [rsp+0x40],rax
  406059:	mov    eax,DWORD PTR [r12+0x8]
  40605e:	mov    DWORD PTR [rsp+0x48],eax
  406062:	call   0x4056c0
  406067:	mov    rbx,rax
  40606a:	mov    rcx,rax
  40606d:	call   0x42a610
  406072:	mov    WORD PTR [rbx+rax*1],di
  406076:	lea    rbx,[rbx+rax*1+0x1]
  40607b:	mov    rax,QWORD PTR [rip+0x405de]        # 0x446660
  406082:	mov    rax,QWORD PTR [rax]
  406085:	mov    rax,QWORD PTR [rax+0x160]
  40608c:	test   rax,rax
  40608f:	je     0x4060f1
  406091:	mov    rdx,QWORD PTR [r12]
  406095:	mov    rcx,r14
  406098:	mov    QWORD PTR [rsp+0x40],rdx
  40609d:	mov    edx,DWORD PTR [r12+0x8]
  4060a2:	mov    DWORD PTR [rsp+0x48],edx
  4060a6:	call   rax
  4060a8:	cmp    eax,0xffffffff
  4060ab:	mov    esi,eax
  4060ad:	je     0x4060f1
  4060af:	lea    rdx,[rip+0x2b28d]        # 0x431343
  4060b6:	mov    rcx,rbx
  4060b9:	call   0x42aab0
  4060be:	mov    rcx,rbx
  4060c1:	call   0x42a610
  4060c6:	lea    rdx,[rip+0x2b0cd]        # 0x43119a
  4060cd:	add    rbx,rax
  4060d0:	mov    r8d,esi
  4060d3:	mov    rcx,rbx
  4060d6:	mov    esi,0x3b
  4060db:	call   0x42aab0
  4060e0:	mov    rcx,rbx
  4060e3:	call   0x42a610
  4060e8:	mov    WORD PTR [rbx+rax*1],si
  4060ec:	lea    rbx,[rbx+rax*1+0x1]
  4060f1:	mov    rax,QWORD PTR [rip+0x403b8]        # 0x4464b0
  4060f8:	mov    r11d,DWORD PTR [rax]
  4060fb:	test   r11d,r11d
  4060fe:	je     0x40611e
  406100:	movabs rdi,0x3a7972617262696c
  40610a:	mov    r10d,0x3b
  406110:	mov    QWORD PTR [rbx],rdi
  406113:	mov    WORD PTR [rbx+0x8],r10w
  406118:	mov    DWORD PTR [rax],0x0
  40611e:	mov    rax,QWORD PTR [rip+0x4032b]        # 0x446450
  406125:	mov    rdi,QWORD PTR [rsp+0x38]
  40612a:	mov    QWORD PTR [rax],rdi
  40612d:	jmp    0x405c9f
  406132:	mov    rax,QWORD PTR [rip+0x404f7]        # 0x446630
  406139:	mov    edx,DWORD PTR [rax]
  40613b:	test   edx,edx
  40613d:	je     0x406180
  40613f:	mov    rax,QWORD PTR [rip+0x4051a]        # 0x446660
  406146:	mov    rax,QWORD PTR [rax]
  406149:	mov    rax,QWORD PTR [rax+0xb0]
  406150:	test   rax,rax
  406153:	je     0x406180
  406155:	call   rax
  406157:	test   eax,eax
  406159:	je     0x406180
  40615b:	lea    rdx,[rip+0x2b22b]        # 0x43138d
  406162:	mov    rcx,rbx
  406165:	call   0x42aab0
  40616a:	mov    rcx,rbx
  40616d:	call   0x42a610
  406172:	add    rbx,rax
  406175:	jmp    0x405ead
  40617a:	nop    WORD PTR [rax+rax*1+0x0]
  406180:	mov    rax,QWORD PTR [rip+0x40359]        # 0x4464e0
  406187:	mov    eax,DWORD PTR [rax]
  406189:	test   eax,eax
  40618b:	je     0x405ead
  406191:	mov    rax,QWORD PTR [rip+0x404c8]        # 0x446660
  406198:	mov    rax,QWORD PTR [rax]
  40619b:	mov    rax,QWORD PTR [rax+0xc0]
  4061a2:	test   rax,rax
  4061a5:	je     0x405ead
  4061ab:	call   rax
  4061ad:	test   eax,eax
  4061af:	je     0x405ead
  4061b5:	lea    rdx,[rip+0x2b1db]        # 0x431397
  4061bc:	jmp    0x406162
  4061be:	xchg   ax,ax
  4061c0:	mov    rax,QWORD PTR [rip+0x40409]        # 0x4465d0
  4061c7:	mov    r8d,DWORD PTR [rax]
  4061ca:	test   r8d,r8d
  4061cd:	je     0x405d43
  4061d3:	lea    r9,[rip+0x2b0dc]        # 0x4312b6
  4061da:	lea    rdx,[rip+0x2b117]        # 0x4312f8
  4061e1:	mov    r8d,0x5
  4061e7:	mov    rcx,rsi
  4061ea:	lea    r14,[rsp+0x40]
  4061ef:	call   0x42aab0
  4061f4:	mov    rcx,rsi
  4061f7:	call   0x42a610
  4061fc:	lea    rcx,[rsi+rax*1]
  406200:	mov    rax,QWORD PTR [rdi+0x8]
  406204:	mov    rdx,r14
  406207:	mov    QWORD PTR [rsp+0x40],rax
  40620c:	mov    eax,DWORD PTR [rdi+0x10]
  40620f:	mov    DWORD PTR [rsp+0x48],eax
  406213:	call   0x4056c0
  406218:	mov    rcx,rax
  40621b:	mov    rsi,rax
  40621e:	call   0x42a610
  406223:	mov    edx,0x3b
  406228:	mov    WORD PTR [rsi+rax*1],dx
  40622c:	jmp    0x405d5b
  406231:	mov    rax,QWORD PTR [rip+0x403b8]        # 0x4465f0
  406238:	lea    r9,[rip+0x2b071]        # 0x4312b0
  40623f:	mov    ecx,DWORD PTR [rax]
  406241:	test   ecx,ecx
  406243:	jne    0x4061da
  406245:	jmp    0x405d43
  40624a:	nop    WORD PTR [rax+rax*1+0x0]
  406250:	mov    rax,QWORD PTR [rip+0x40399]        # 0x4465f0
  406257:	mov    eax,DWORD PTR [rax]
  406259:	test   eax,eax
  40625b:	je     0x405d43
  406261:	lea    rdx,[rip+0x2b099]        # 0x431301
  406268:	mov    r8d,0x5
  40626e:	mov    rcx,rsi
  406271:	lea    r14,[rsp+0x40]
  406276:	call   0x42aab0
  40627b:	jmp    0x405d5b
  406280:	mov    rax,QWORD PTR [rip+0x40339]        # 0x4465c0
  406287:	mov    eax,DWORD PTR [rax]
  406289:	test   eax,eax
  40628b:	je     0x405d43
  406291:	lea    r9,[rip+0x2b07a]        # 0x431312
  406298:	lea    rdx,[rip+0x2b059]        # 0x4312f8
  40629f:	mov    r8d,0x5
  4062a5:	mov    rcx,rsi
  4062a8:	lea    r14,[rsp+0x40]
  4062ad:	call   0x42aab0
  4062b2:	mov    rcx,rsi
  4062b5:	call   0x42a610
  4062ba:	mov    rbp,QWORD PTR [rdi+0x8]
  4062be:	lea    rbx,[rsi+rax*1]
  4062c2:	lea    rsi,[rsp+0x50]
  4062c7:	mov    rcx,rbp
  4062ca:	call   0x42a610
  4062cf:	mov    rdx,rsi
  4062d2:	mov    r8d,eax
  4062d5:	mov    rcx,rbp
  4062d8:	call   0x41cef0
  4062dd:	lea    rdx,[rip+0x2b033]        # 0x431317
  4062e4:	mov    r8,rsi
  4062e7:	mov    rcx,rbx
  4062ea:	call   0x42aab0
  4062ef:	mov    rcx,QWORD PTR [rdi+0x8]
  4062f3:	call   0x41a7c0
  4062f8:	mov    QWORD PTR [rdi+0x8],0x0
  406300:	mov    rcx,rbx
  406303:	call   0x42a610
  406308:	lea    rsi,[rbx+rax*1]
  40630c:	jmp    0x405d5b
  406311:	lea    rdx,[rip+0x2b003]        # 0x43131b
  406318:	mov    r8d,0x5
  40631e:	mov    rcx,rsi
  406321:	lea    r14,[rsp+0x40]
  406326:	call   0x42aab0
  40632b:	jmp    0x405d5b
  406330:	push   r12
  406332:	push   rbp
  406333:	push   rdi
  406334:	push   rsi
  406335:	push   rbx
  406336:	sub    rsp,0x20
  40633a:	mov    DWORD PTR [r8],0x0
  406341:	mov    QWORD PTR [rdx],0x0
  406348:	mov    rdi,rcx
  40634b:	movzx  r9d,BYTE PTR [rcx]
  40634f:	mov    r12,rdx
  406352:	mov    rbx,r8
  406355:	cmp    r9b,0x2c
  406359:	je     0x4063d2
  40635b:	mov    esi,0x2
  406360:	mov    rbp,rcx
  406363:	xor    eax,eax
  406365:	sub    esi,ecx
  406367:	nop    WORD PTR [rax+rax*1+0x0]
  406370:	shl    rax,0x4
  406374:	movsx  ecx,r9b
  406378:	mov    QWORD PTR [r12],rax
  40637c:	call   0x41cd80
  406381:	and    eax,0xf
  406384:	or     rax,QWORD PTR [r12]
  406388:	lea    edx,[rsi+rbp*1]
  40638b:	add    rbp,0x1
  40638f:	mov    QWORD PTR [r12],rax
  406393:	movzx  r9d,BYTE PTR [rbp+0x0]
  406398:	cmp    r9b,0x2c
  40639c:	jne    0x406370
  40639e:	movsxd rdx,edx
  4063a1:	lea    rsi,[rdi+rdx*1]
  4063a5:	lea    rdi,[rdi+rdx*1+0x4]
  4063aa:	movsx  ecx,BYTE PTR [rsi]
  4063ad:	test   cl,cl
  4063af:	je     0x4063c7
  4063b1:	shl    DWORD PTR [rbx],0x4
  4063b4:	add    rsi,0x1
  4063b8:	call   0x41cd80
  4063bd:	and    eax,0xf
  4063c0:	or     DWORD PTR [rbx],eax
  4063c2:	cmp    rsi,rdi
  4063c5:	jne    0x4063aa
  4063c7:	add    rsp,0x20
  4063cb:	pop    rbx
  4063cc:	pop    rsi
  4063cd:	pop    rdi
  4063ce:	pop    rbp
  4063cf:	pop    r12
  4063d1:	ret    
  4063d2:	mov    edx,0x1
  4063d7:	jmp    0x40639e
  4063d9:	nop    DWORD PTR [rax+0x0]
  4063e0:	push   r13
  4063e2:	push   r12
  4063e4:	push   rbp
  4063e5:	push   rdi
  4063e6:	push   rsi
  4063e7:	push   rbx
  4063e8:	sub    rsp,0x28
  4063ec:	mov    DWORD PTR [r8],0x0
  4063f3:	mov    rsi,rcx
  4063f6:	mov    QWORD PTR [rdx],0x0
  4063fd:	movsx  ecx,BYTE PTR [rcx]
  406400:	mov    r12,rdx
  406403:	mov    rbx,r8
  406406:	mov    rdi,r9
  406409:	cmp    cl,0x2c
  40640c:	je     0x4064cc
  406412:	mov    ebp,0x2
  406417:	mov    r13,rsi
  40641a:	xor    eax,eax
  40641c:	sub    ebp,esi
  40641e:	xchg   ax,ax
  406420:	shl    rax,0x4
  406424:	mov    QWORD PTR [r12],rax
  406428:	call   0x41cd80
  40642d:	and    eax,0xf
  406430:	or     rax,QWORD PTR [r12]
  406434:	lea    edx,[rbp+r13*1+0x0]
  406439:	add    r13,0x1
  40643d:	mov    QWORD PTR [r12],rax
  406441:	movsx  ecx,BYTE PTR [r13+0x0]
  406446:	cmp    cl,0x2c
  406449:	jne    0x406420
  40644b:	lea    ebp,[rdx+0x1]
  40644e:	mov    r8d,DWORD PTR [rbx]
  406451:	movsxd rcx,edx
  406454:	movsxd r12,ebp
  406457:	movsx  ecx,BYTE PTR [rsi+rcx*1]
  40645b:	cmp    cl,0x3a
  40645e:	je     0x40649c
  406460:	movsxd r12,ebp
  406463:	add    r12,rsi
  406466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406470:	mov    eax,r8d
  406473:	add    r12,0x1
  406477:	add    ebp,0x1
  40647a:	shl    eax,0x4
  40647d:	mov    DWORD PTR [rbx],eax
  40647f:	call   0x41cd80
  406484:	and    eax,0xf
  406487:	or     eax,DWORD PTR [rbx]
  406489:	mov    DWORD PTR [rbx],eax
  40648b:	movsx  ecx,BYTE PTR [r12-0x1]
  406491:	mov    r8d,eax
  406494:	cmp    cl,0x3a
  406497:	jne    0x406470
  406499:	movsxd r12,ebp
  40649c:	mov    rdx,QWORD PTR [rdi]
  40649f:	test   rdx,rdx
  4064a2:	je     0x4064b9
  4064a4:	lea    rcx,[rsi+r12*1]
  4064a8:	add    rsp,0x28
  4064ac:	pop    rbx
  4064ad:	pop    rsi
  4064ae:	pop    rdi
  4064af:	pop    rbp
  4064b0:	pop    r12
  4064b2:	pop    r13
  4064b4:	jmp    0x41ce70
  4064b9:	mov    ecx,r8d
  4064bc:	call   0x41a6e0
  4064c1:	mov    r8d,DWORD PTR [rbx]
  4064c4:	mov    QWORD PTR [rdi],rax
  4064c7:	mov    rdx,rax
  4064ca:	jmp    0x4064a4
  4064cc:	mov    r12d,0x2
  4064d2:	xor    r8d,r8d
  4064d5:	mov    ebp,0x2
  4064da:	mov    ecx,0x1
  4064df:	jmp    0x406457
  4064e4:	xchg   ax,ax
  4064e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064f0:	push   r14
  4064f2:	push   r13
  4064f4:	push   r12
  4064f6:	push   rbp
  4064f7:	push   rdi
  4064f8:	push   rsi
  4064f9:	push   rbx
  4064fa:	sub    rsp,0x20
  4064fe:	mov    rbp,QWORD PTR [rsp+0x80]
  406506:	mov    DWORD PTR [r9],0x0
  40650d:	mov    rsi,rcx
  406510:	mov    QWORD PTR [r8],0x0
  406517:	movsx  ecx,BYTE PTR [rcx]
  40651a:	mov    edi,edx
  40651c:	mov    r13,r8
  40651f:	mov    rbx,r9
  406522:	cmp    cl,0x2c
  406525:	je     0x4065e1
  40652b:	mov    r12d,0x2
  406531:	mov    r14,rsi
  406534:	xor    eax,eax
  406536:	sub    r12d,esi
  406539:	nop    DWORD PTR [rax+0x0]
  406540:	shl    rax,0x4
  406544:	mov    QWORD PTR [r13+0x0],rax
  406548:	call   0x41cd80
  40654d:	and    eax,0xf
  406550:	or     rax,QWORD PTR [r13+0x0]
  406554:	lea    edx,[r12+r14*1]
  406558:	add    r14,0x1
  40655c:	mov    QWORD PTR [r13+0x0],rax
  406560:	movsx  ecx,BYTE PTR [r14]
  406564:	cmp    cl,0x2c
  406567:	jne    0x406540
  406569:	lea    r12d,[rdx+0x1]
  40656d:	mov    r9d,DWORD PTR [rbx]
  406570:	movsxd rcx,edx
  406573:	movsxd r13,r12d
  406576:	movsx  ecx,BYTE PTR [rsi+rcx*1]
  40657a:	cmp    cl,0x3a
  40657d:	je     0x4065b1
  40657f:	movsxd r13,r12d
  406582:	add    r13,rsi
  406585:	mov    eax,r9d
  406588:	add    r13,0x1
  40658c:	add    r12d,0x1
  406590:	shl    eax,0x4
  406593:	mov    DWORD PTR [rbx],eax
  406595:	call   0x41cd80
  40659a:	and    eax,0xf
  40659d:	or     eax,DWORD PTR [rbx]
  40659f:	mov    DWORD PTR [rbx],eax
  4065a1:	movsx  ecx,BYTE PTR [r13-0x1]
  4065a6:	mov    r9d,eax
  4065a9:	cmp    cl,0x3a
  4065ac:	jne    0x406585
  4065ae:	movsxd r13,r12d
  4065b1:	mov    r8,QWORD PTR [rbp+0x0]
  4065b5:	test   r8,r8
  4065b8:	je     0x4065fa
  4065ba:	sub    edi,r12d
  4065bd:	lea    rcx,[rsi+r13*1]
  4065c1:	mov    edx,edi
  4065c3:	call   0x41d080
  4065c8:	cmp    eax,DWORD PTR [rbx]
  4065ca:	setne  al
  4065cd:	movzx  eax,al
  4065d0:	neg    eax
  4065d2:	add    rsp,0x20
  4065d6:	pop    rbx
  4065d7:	pop    rsi
  4065d8:	pop    rdi
  4065d9:	pop    rbp
  4065da:	pop    r12
  4065dc:	pop    r13
  4065de:	pop    r14
  4065e0:	ret    
  4065e1:	mov    r13d,0x2
  4065e7:	xor    r9d,r9d
  4065ea:	mov    r12d,0x2
  4065f0:	mov    ecx,0x1
  4065f5:	jmp    0x406576
  4065fa:	mov    ecx,r9d
  4065fd:	call   0x41a6e0
  406602:	mov    r9d,DWORD PTR [rbx]
  406605:	mov    QWORD PTR [rbp+0x0],rax
  406609:	mov    r8,rax
  40660c:	jmp    0x4065ba
  40660e:	xchg   ax,ax
  406610:	push   r12
  406612:	push   rbp
  406613:	push   rdi
  406614:	push   rsi
  406615:	push   rbx
  406616:	sub    rsp,0x20
  40661a:	mov    QWORD PTR [r8],0x0
  406621:	movzx  r10d,BYTE PTR [rcx]
  406625:	mov    rbx,rcx
  406628:	mov    edi,edx
  40662a:	mov    r12,r8
  40662d:	mov    rsi,r9
  406630:	lea    rbp,[rcx+0x1]
  406634:	cmp    r10b,0x3a
  406638:	je     0x40666b
  40663a:	xor    eax,eax
  40663c:	nop    DWORD PTR [rax+0x0]
  406640:	shl    rax,0x4
  406644:	movsx  ecx,r10b
  406648:	add    rbp,0x1
  40664c:	mov    QWORD PTR [r12],rax
  406650:	call   0x41cd80
  406655:	and    eax,0xf
  406658:	or     rax,QWORD PTR [r12]
  40665c:	mov    QWORD PTR [r12],rax
  406660:	movzx  r10d,BYTE PTR [rbp-0x1]
  406665:	cmp    r10b,0x3a
  406669:	jne    0x406640
  40666b:	sub    rbx,rbp
  40666e:	mov    r8,QWORD PTR [rsp+0x70]
  406673:	mov    rcx,rbp
  406676:	lea    edx,[rdi+rbx*1]
  406679:	mov    r9d,edx
  40667c:	call   0x41d080
  406681:	mov    DWORD PTR [rsi],eax
  406683:	xor    eax,eax
  406685:	add    rsp,0x20
  406689:	pop    rbx
  40668a:	pop    rsi
  40668b:	pop    rdi
  40668c:	pop    rbp
  40668d:	pop    r12
  40668f:	ret    
  406690:	push   rdi
  406691:	push   rsi
  406692:	push   rbx
  406693:	sub    rsp,0x20
  406697:	mov    rdi,r9
  40669a:	mov    esi,edx
  40669c:	mov    rbx,rcx
  40669f:	mov    rdx,rcx
  4066a2:	mov    rcx,r8
  4066a5:	call   0x405660
  4066aa:	mov    rcx,rdi
  4066ad:	mov    rdx,rax
  4066b0:	call   0x405660
  4066b5:	sub    rbx,rax
  4066b8:	mov    r8,QWORD PTR [rsp+0x60]
  4066bd:	mov    rcx,rax
  4066c0:	lea    edx,[rsi+rbx*1]
  4066c3:	mov    r9d,edx
  4066c6:	call   0x41d080
  4066cb:	mov    rdx,QWORD PTR [rsp+0x68]
  4066d0:	mov    DWORD PTR [rdx],eax
  4066d2:	xor    eax,eax
  4066d4:	add    rsp,0x20
  4066d8:	pop    rbx
  4066d9:	pop    rsi
  4066da:	pop    rdi
  4066db:	ret    
  4066dc:	nop    DWORD PTR [rax+0x0]
  4066e0:	push   rdi
  4066e1:	push   rsi
  4066e2:	push   rbx
  4066e3:	sub    rsp,0x20
  4066e7:	mov    rbx,QWORD PTR [rcx]
  4066ea:	mov    rdi,rcx
  4066ed:	test   rbx,rbx
  4066f0:	je     0x40670e
  4066f2:	mov    rcx,QWORD PTR [rbx]
  4066f5:	mov    rsi,QWORD PTR [rbx+0x10]
  4066f9:	call   0x42a6c8
  4066fe:	mov    rcx,rbx
  406701:	mov    rbx,rsi
  406704:	call   0x42a6c8
  406709:	test   rsi,rsi
  40670c:	jne    0x4066f2
  40670e:	mov    QWORD PTR [rdi],0x0
  406715:	add    rsp,0x20
  406719:	pop    rbx
  40671a:	pop    rsi
  40671b:	pop    rdi
  40671c:	ret    
  40671d:	nop    DWORD PTR [rax]
  406720:	push   r14
  406722:	push   r13
  406724:	push   r12
  406726:	push   rbp
  406727:	push   rdi
  406728:	push   rsi
  406729:	push   rbx
  40672a:	sub    rsp,0x30
  40672e:	mov    rbp,rcx
  406731:	mov    r13,rdx
  406734:	mov    esi,r8d
  406737:	call   0x404000
  40673c:	mov    rbx,QWORD PTR [rax+0x20]
  406740:	mov    r12,rax
  406743:	test   rbx,rbx
  406746:	jne    0x406759
  406748:	jmp    0x406784
  40674a:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	mov    rbx,QWORD PTR [rbx+0x10]
  406754:	test   rbx,rbx
  406757:	je     0x406784
  406759:	mov    rdx,QWORD PTR [rbx]
  40675c:	mov    rcx,rbp
  40675f:	call   0x42a628
  406764:	test   eax,eax
  406766:	jne    0x406750
  406768:	mov    rax,QWORD PTR [rbx+0x8]
  40676c:	mov    QWORD PTR [r13+0x0],rax
  406770:	mov    eax,0x1
  406775:	add    rsp,0x30
  406779:	pop    rbx
  40677a:	pop    rsi
  40677b:	pop    rdi
  40677c:	pop    rbp
  40677d:	pop    r12
  40677f:	pop    r13
  406781:	pop    r14
  406783:	ret    
  406784:	test   esi,esi
  406786:	jne    0x4067a0
  406788:	xor    eax,eax
  40678a:	add    rsp,0x30
  40678e:	pop    rbx
  40678f:	pop    rsi
  406790:	pop    rdi
  406791:	pop    rbp
  406792:	pop    r12
  406794:	pop    r13
  406796:	pop    r14
  406798:	ret    
  406799:	nop    DWORD PTR [rax+0x0]
  4067a0:	mov    rbx,QWORD PTR [rip+0x3fdf9]        # 0x4465a0
  4067a7:	movabs rdi,0x3a6c6f626d795371
  4067b1:	mov    rcx,rbp
  4067b4:	mov    rax,QWORD PTR [rbx]
  4067b7:	mov    QWORD PTR [rax],rdi
  4067ba:	mov    BYTE PTR [rax+0x8],0x0
  4067be:	call   0x42a610
  4067c3:	mov    rdi,QWORD PTR [rbx]
  4067c6:	mov    r8d,eax
  4067c9:	mov    rcx,rbp
  4067cc:	lea    rdx,[rdi+0x8]
  4067d0:	call   0x41cef0
  4067d5:	mov    rcx,QWORD PTR [rbx]
  4067d8:	call   0x405880
  4067dd:	test   eax,eax
  4067df:	js     0x4068c0
  4067e5:	mov    rcx,QWORD PTR [rbx]
  4067e8:	call   0x405940
  4067ed:	test   eax,eax
  4067ef:	js     0x4068c0
  4067f5:	lea    rsi,[rsp+0x28]
  4067fa:	lea    rdi,[rsp+0x24]
  4067ff:	jmp    0x40681c
  406801:	mov    rcx,QWORD PTR [rbx]
  406804:	xor    r8d,r8d
  406807:	call   0x404e90
  40680c:	mov    rcx,QWORD PTR [rbx]
  40680f:	call   0x405940
  406814:	test   eax,eax
  406816:	js     0x4068c0
  40681c:	mov    r9,QWORD PTR [rbx]
  40681f:	movzx  edx,BYTE PTR [r9]
  406823:	cmp    dl,0x6d
  406826:	je     0x406860
  406828:	cmp    dl,0x76
  40682b:	jne    0x4068e6
  406831:	mov    edx,eax
  406833:	mov    r8,rsi
  406836:	mov    rcx,r9
  406839:	mov    DWORD PTR [rsp+0x28],0xffffffff
  406841:	call   0x40b390
  406846:	mov    edx,DWORD PTR [rsp+0x28]
  40684a:	cmp    edx,0xffffffff
  40684d:	jne    0x406801
  40684f:	mov    rcx,QWORD PTR [rbx]
  406852:	call   0x405880
  406857:	jmp    0x40680c
  406859:	nop    DWORD PTR [rax+0x0]
  406860:	lea    rcx,[r9+0x1]
  406864:	mov    r8,rdi
  406867:	mov    rdx,rsi
  40686a:	call   0x406330
  40686f:	mov    ecx,DWORD PTR [rsp+0x24]
  406873:	call   0x41a6e0
  406878:	mov    r8d,DWORD PTR [rsp+0x24]
  40687d:	mov    rcx,QWORD PTR [rsp+0x28]
  406882:	mov    rdx,rax
  406885:	mov    r14,rax
  406888:	call   0x40def0
  40688d:	test   eax,eax
  40688f:	je     0x4068d4
  406891:	mov    r8,QWORD PTR [rbx]
  406894:	mov    BYTE PTR [r8],0x45
  406898:	mov    BYTE PTR [r8+0x1],0x30
  40689d:	mov    BYTE PTR [r8+0x2],0x31
  4068a2:	mov    BYTE PTR [r8+0x3],0x0
  4068a7:	mov    rcx,r14
  4068aa:	call   0x42a6c8
  4068af:	mov    rcx,QWORD PTR [rbx]
  4068b2:	call   0x405880
  4068b7:	test   eax,eax
  4068b9:	jns    0x40680c
  4068bf:	nop
  4068c0:	mov    eax,0xffffffff
  4068c5:	add    rsp,0x30
  4068c9:	pop    rbx
  4068ca:	pop    rsi
  4068cb:	pop    rdi
  4068cc:	pop    rbp
  4068cd:	pop    r12
  4068cf:	pop    r13
  4068d1:	pop    r14
  4068d3:	ret    
  4068d4:	mov    r8d,DWORD PTR [rsp+0x24]
  4068d9:	mov    rdx,QWORD PTR [rbx]
  4068dc:	mov    rcx,r14
  4068df:	call   0x41cef0
  4068e4:	jmp    0x4068a7
  4068e6:	lea    rdi,[rip+0x2aaf7]        # 0x4313e4
  4068ed:	mov    ecx,0x8
  4068f2:	mov    rsi,r9
  4068f5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4068f7:	jne    0x406984
  4068fd:	movzx  eax,BYTE PTR [r9+0x8]
  406902:	lea    rdx,[r9+0x8]
  406906:	cmp    al,0x3a
  406908:	je     0x406788
  40690e:	test   al,al
  406910:	je     0x406788
  406916:	mov    r8,rdx
  406919:	jmp    0x406924
  40691b:	nop    DWORD PTR [rax+rax*1+0x0]
  406920:	test   al,al
  406922:	je     0x406930
  406924:	add    r8,0x1
  406928:	movzx  eax,BYTE PTR [r8]
  40692c:	cmp    al,0x3a
  40692e:	jne    0x406920
  406930:	cmp    rdx,r8
  406933:	je     0x406788
  406939:	test   al,al
  40693b:	je     0x406788
  406941:	sub    r8d,edx
  406944:	mov    rcx,r13
  406947:	call   0x405610
  40694c:	mov    ecx,0x18
  406951:	call   0x41a6e0
  406956:	mov    rcx,rbp
  406959:	mov    rbx,rax
  40695c:	call   0x40e730
  406961:	mov    QWORD PTR [rbx],rax
  406964:	mov    rax,QWORD PTR [r13+0x0]
  406968:	mov    QWORD PTR [rbx+0x8],rax
  40696c:	mov    rax,QWORD PTR [r12+0x20]
  406971:	mov    QWORD PTR [rbx+0x10],rax
  406975:	mov    QWORD PTR [r12+0x20],rbx
  40697a:	mov    eax,0x1
  40697f:	jmp    0x406775
  406984:	lea    rcx,[rip+0x2aa65]        # 0x4313f0
  40698b:	mov    rdx,r9
  40698e:	call   0x41d110
  406993:	jmp    0x4068c0
  406998:	nop    DWORD PTR [rax+rax*1+0x0]
  4069a0:	push   r12
  4069a2:	push   rbp
  4069a3:	push   rdi
  4069a4:	push   rsi
  4069a5:	push   rbx
  4069a6:	sub    rsp,0x50
  4069aa:	mov    rbx,QWORD PTR [rip+0x3fbef]        # 0x4465a0
  4069b1:	movabs rsi,0x6e49636f6c655271
  4069bb:	mov    QWORD PTR [rsp+0x38],0x0
  4069c4:	mov    rbp,rcx
  4069c7:	mov    rdi,rdx
  4069ca:	mov    rax,QWORD PTR [rbx]
  4069cd:	mov    QWORD PTR [rax],rsi
  4069d0:	mov    DWORD PTR [rax+0x8],0x3a6e73
  4069d7:	mov    rcx,QWORD PTR [rcx]
  4069da:	call   0x40e950
  4069df:	mov    rcx,rdi
  4069e2:	mov    rsi,rax
  4069e5:	call   0x40e950
  4069ea:	mov    rcx,QWORD PTR [rbx]
  4069ed:	lea    rdx,[rip+0x2aa29]        # 0x43141d
  4069f4:	mov    r8,rax
  4069f7:	mov    r9,rsi
  4069fa:	call   0x42aab0
  4069ff:	mov    rcx,QWORD PTR [rbx]
  406a02:	call   0x405880
  406a07:	test   eax,eax
  406a09:	js     0x406c00
  406a0f:	mov    rcx,QWORD PTR [rbx]
  406a12:	call   0x405940
  406a17:	test   eax,eax
  406a19:	js     0x406c00
  406a1f:	mov    r10,QWORD PTR [rbx]
  406a22:	movzx  r11d,BYTE PTR [r10]
  406a26:	mov    edx,r11d
  406a29:	and    edx,0xffffffdf
  406a2c:	cmp    dl,0x4d
  406a2f:	je     0x406a92
  406a31:	cmp    r11b,0x58
  406a35:	je     0x406a92
  406a37:	nop    WORD PTR [rax+rax*1+0x0]
  406a40:	cmp    r11b,0x45
  406a44:	je     0x406c29
  406a4a:	lea    rdi,[rip+0x2aa16]        # 0x431467
  406a51:	mov    ecx,0xb
  406a56:	mov    rsi,r10
  406a59:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406a5b:	seta   bl
  406a5e:	setb   al
  406a61:	sub    ebx,eax
  406a63:	movsx  ebx,bl
  406a66:	test   ebx,ebx
  406a68:	jne    0x406bea
  406a6e:	lea    rdx,[rsp+0x38]
  406a73:	lea    rcx,[r10+0xb]
  406a77:	call   0x41ce20
  406a7c:	mov    rax,QWORD PTR [rsp+0x38]
  406a81:	add    QWORD PTR [rbp+0x0],rax
  406a85:	mov    eax,ebx
  406a87:	add    rsp,0x50
  406a8b:	pop    rbx
  406a8c:	pop    rsi
  406a8d:	pop    rdi
  406a8e:	pop    rbp
  406a8f:	pop    r12
  406a91:	ret    
  406a92:	lea    rdi,[rsp+0x34]
  406a97:	lea    rsi,[rsp+0x40]
  406a9c:	lea    r12,[rsp+0x48]
  406aa1:	mov    QWORD PTR [rsp+0x48],0x0
  406aaa:	movzx  edx,BYTE PTR [r10]
  406aae:	cmp    dl,0x6d
  406ab1:	je     0x406ba0
  406ab7:	cmp    dl,0x58
  406aba:	je     0x406b50
  406ac0:	lea    rcx,[r10+0x1]
  406ac4:	mov    r9,r12
  406ac7:	mov    r8,rdi
  406aca:	mov    rdx,rsi
  406acd:	call   0x4063e0
  406ad2:	mov    r8d,DWORD PTR [rsp+0x34]
  406ad7:	mov    rdx,QWORD PTR [rsp+0x48]
  406adc:	mov    rcx,QWORD PTR [rsp+0x40]
  406ae1:	call   0x40df50
  406ae6:	test   eax,eax
  406ae8:	mov    rax,QWORD PTR [rbx]
  406aeb:	je     0x406b90
  406af1:	mov    BYTE PTR [rax],0x45
  406af4:	mov    BYTE PTR [rax+0x1],0x30
  406af8:	mov    BYTE PTR [rax+0x2],0x31
  406afc:	mov    BYTE PTR [rax+0x3],0x0
  406b00:	mov    rcx,QWORD PTR [rsp+0x48]
  406b05:	call   0x42a6c8
  406b0a:	mov    rcx,QWORD PTR [rbx]
  406b0d:	call   0x405880
  406b12:	test   eax,eax
  406b14:	js     0x406c00
  406b1a:	mov    rcx,QWORD PTR [rbx]
  406b1d:	call   0x405940
  406b22:	test   eax,eax
  406b24:	js     0x406c00
  406b2a:	mov    r10,QWORD PTR [rbx]
  406b2d:	movzx  r11d,BYTE PTR [r10]
  406b31:	mov    edx,r11d
  406b34:	and    edx,0xffffffdf
  406b37:	cmp    dl,0x4d
  406b3a:	je     0x406aa1
  406b40:	cmp    r11b,0x58
  406b44:	jne    0x406a40
  406b4a:	jmp    0x406aa1
  406b4f:	nop
  406b50:	lea    edx,[rax-0x1]
  406b53:	lea    rcx,[r10+0x1]
  406b57:	mov    QWORD PTR [rsp+0x20],r12
  406b5c:	mov    r9,rdi
  406b5f:	mov    r8,rsi
  406b62:	call   0x4064f0
  406b67:	test   eax,eax
  406b69:	js     0x406bd3
  406b6b:	mov    r8d,DWORD PTR [rsp+0x34]
  406b70:	mov    rdx,QWORD PTR [rsp+0x48]
  406b75:	mov    rcx,QWORD PTR [rsp+0x40]
  406b7a:	call   0x40df50
  406b7f:	test   eax,eax
  406b81:	jne    0x406bd3
  406b83:	mov    rax,QWORD PTR [rbx]
  406b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b90:	mov    BYTE PTR [rax],0x4f
  406b93:	mov    BYTE PTR [rax+0x1],0x4b
  406b97:	mov    BYTE PTR [rax+0x2],0x0
  406b9b:	jmp    0x406b00
  406ba0:	lea    rcx,[r10+0x1]
  406ba4:	mov    r8,rdi
  406ba7:	mov    rdx,rsi
  406baa:	call   0x406330
  406baf:	mov    ecx,DWORD PTR [rsp+0x34]
  406bb3:	call   0x41a6e0
  406bb8:	mov    r8d,DWORD PTR [rsp+0x34]
  406bbd:	mov    rcx,QWORD PTR [rsp+0x40]
  406bc2:	mov    rdx,rax
  406bc5:	mov    QWORD PTR [rsp+0x48],rax
  406bca:	call   0x40def0
  406bcf:	test   eax,eax
  406bd1:	je     0x406c12
  406bd3:	mov    rax,QWORD PTR [rbx]
  406bd6:	mov    BYTE PTR [rax],0x45
  406bd9:	mov    BYTE PTR [rax+0x1],0x30
  406bdd:	mov    BYTE PTR [rax+0x2],0x31
  406be1:	mov    BYTE PTR [rax+0x3],0x0
  406be5:	jmp    0x406b00
  406bea:	lea    rcx,[rip+0x2a887]        # 0x431478
  406bf1:	mov    rdx,r10
  406bf4:	call   0x41d110
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	mov    ebx,0xffffffff
  406c05:	mov    eax,ebx
  406c07:	add    rsp,0x50
  406c0b:	pop    rbx
  406c0c:	pop    rsi
  406c0d:	pop    rdi
  406c0e:	pop    rbp
  406c0f:	pop    r12
  406c11:	ret    
  406c12:	mov    r8d,DWORD PTR [rsp+0x34]
  406c17:	mov    rdx,QWORD PTR [rbx]
  406c1a:	mov    rcx,QWORD PTR [rsp+0x48]
  406c1f:	call   0x41cef0
  406c24:	jmp    0x406b00
  406c29:	lea    rcx,[rip+0x2a800]        # 0x431430
  406c30:	mov    rdx,r10
  406c33:	mov    ebx,0xffffffff
  406c38:	call   0x41d110
  406c3d:	jmp    0x406c05
  406c3f:	nop
  406c40:	push   rdi
  406c41:	push   rsi
  406c42:	push   rbx
  406c43:	sub    rsp,0x20
  406c47:	mov    rsi,rcx
  406c4a:	call   0x42a610
  406c4f:	lea    edx,[rax+rax*1+0x2]
  406c53:	mov    rdi,rax
  406c56:	movsxd rcx,edx
  406c59:	call   0x41a6e0
  406c5e:	lea    rdx,[rax+0x1]
  406c62:	mov    rbx,rax
  406c65:	mov    r8d,edi
  406c68:	mov    rcx,rsi
  406c6b:	mov    BYTE PTR [rax],0x4f
  406c6e:	call   0x41cef0
  406c73:	mov    rcx,rbx
  406c76:	call   0x405880
  406c7b:	mov    rcx,rbx
  406c7e:	add    rsp,0x20
  406c82:	pop    rbx
  406c83:	pop    rsi
  406c84:	pop    rdi
  406c85:	jmp    0x42a6c8
  406c8a:	nop
  406c8b:	nop
  406c8c:	nop
  406c8d:	nop
  406c8e:	nop
  406c8f:	nop
  406c90:	mov    rax,QWORD PTR [rip+0x3f9c9]        # 0x446660
  406c97:	test   r8,r8
  406c9a:	mov    r10,rcx
  406c9d:	mov    rcx,QWORD PTR [rsp+0x28]
  406ca2:	mov    rax,QWORD PTR [rax]
  406ca5:	mov    rax,QWORD PTR [rax+0x90]
  406cac:	jne    0x406cd0
  406cae:	test   rax,rax
  406cb1:	je     0x406cd0
  406cb3:	cmp    BYTE PTR [r10],0x0
  406cb7:	jne    0x406ce0
  406cb9:	mov    r8,QWORD PTR [rip+0x3f790]        # 0x446450
  406cc0:	cmp    QWORD PTR [r8],0x0
  406cc4:	je     0x406ce0
  406cc6:	mov    r8d,ecx
  406cc9:	mov    rcx,r9
  406ccc:	rex.W jmp rax
  406ccf:	nop
  406cd0:	mov    eax,0xfffffffe
  406cd5:	ret    
  406cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ce0:	mov    eax,0xffffffff
  406ce5:	ret    
  406ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cf0:	mov    r10,QWORD PTR [rsp+0x28]
  406cf5:	test   r8,r8
  406cf8:	jne    0x406d25
  406cfa:	mov    rax,QWORD PTR [rip+0x3f74f]        # 0x446450
  406d01:	cmp    QWORD PTR [rax],0x0
  406d05:	je     0x406d30
  406d07:	mov    rax,QWORD PTR [rip+0x3f952]        # 0x446660
  406d0e:	mov    rax,QWORD PTR [rax]
  406d11:	mov    rax,QWORD PTR [rax+0x1d8]
  406d18:	test   rax,rax
  406d1b:	je     0x406d30
  406d1d:	mov    DWORD PTR [rsp+0x28],r10d
  406d22:	rex.W jmp rax
  406d25:	mov    eax,0xfffffffe
  406d2a:	ret    
  406d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d30:	mov    eax,0xffffffff
  406d35:	ret    
  406d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d40:	mov    rax,QWORD PTR [rip+0x3f919]        # 0x446660
  406d47:	mov    r10,QWORD PTR [rsp+0x28]
  406d4c:	test   r8,r8
  406d4f:	mov    rax,QWORD PTR [rax]
  406d52:	mov    rax,QWORD PTR [rax+0x108]
  406d59:	jne    0x406d70
  406d5b:	test   rax,rax
  406d5e:	je     0x406d70
  406d60:	mov    DWORD PTR [rsp+0x28],r10d
  406d65:	rex.W jmp rax
  406d68:	nop    DWORD PTR [rax+rax*1+0x0]
  406d70:	mov    eax,0xfffffffe
  406d75:	ret    
  406d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d80:	mov    rax,QWORD PTR [rip+0x3f8d9]        # 0x446660
  406d87:	mov    r10,QWORD PTR [rsp+0x28]
  406d8c:	mov    rax,QWORD PTR [rax]
  406d8f:	mov    rax,QWORD PTR [rax+0x110]
  406d96:	test   rax,rax
  406d99:	je     0x406dbb
  406d9b:	cmp    BYTE PTR [rcx],0x0
  406d9e:	jne    0x406db5
  406da0:	mov    r11,QWORD PTR [rip+0x3f6a9]        # 0x446450
  406da7:	cmp    QWORD PTR [r11],0x0
  406dab:	je     0x406db5
  406dad:	mov    DWORD PTR [rsp+0x28],r10d
  406db2:	rex.W jmp rax
  406db5:	mov    eax,0xffffffff
  406dba:	ret    
  406dbb:	mov    eax,0xfffffffe
  406dc0:	ret    
  406dc1:	nop    DWORD PTR [rax+rax*1+0x0]
  406dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dd0:	mov    rax,QWORD PTR [rip+0x3f889]        # 0x446660
  406dd7:	mov    r11,QWORD PTR [rsp+0x28]
  406ddc:	mov    rax,QWORD PTR [rax]
  406ddf:	mov    rax,QWORD PTR [rax+0xf8]
  406de6:	test   rax,rax
  406de9:	je     0x406e06
  406deb:	mov    r10,QWORD PTR [rip+0x3f65e]        # 0x446450
  406df2:	cmp    QWORD PTR [r10],0x0
  406df6:	je     0x406e00
  406df8:	mov    DWORD PTR [rsp+0x28],r11d
  406dfd:	rex.W jmp rax
  406e00:	mov    eax,0xffffffff
  406e05:	ret    
  406e06:	mov    eax,0xfffffffe
  406e0b:	ret    
  406e0c:	nop    DWORD PTR [rax+0x0]
  406e10:	mov    rax,QWORD PTR [rip+0x3f849]        # 0x446660
  406e17:	mov    r8,rdx
  406e1a:	mov    rdx,r9
  406e1d:	mov    r9,QWORD PTR [rsp+0x28]
  406e22:	mov    rax,QWORD PTR [rax]
  406e25:	mov    rax,QWORD PTR [rax+0x168]
  406e2c:	test   rax,rax
  406e2f:	je     0x406e47
  406e31:	mov    r10,QWORD PTR [rip+0x3f618]        # 0x446450
  406e38:	cmp    QWORD PTR [r10],0x0
  406e3c:	je     0x406e41
  406e3e:	rex.W jmp rax
  406e41:	mov    eax,0xffffffff
  406e46:	ret    
  406e47:	mov    eax,0xfffffffe
  406e4c:	ret    
  406e4d:	nop    DWORD PTR [rax]
  406e50:	cmp    DWORD PTR [rcx+0x30],0xb
  406e54:	mov    DWORD PTR [rcx+0x28],0x2
  406e5b:	je     0x406e60
  406e5d:	repz ret 
  406e5f:	nop
  406e60:	mov    DWORD PTR [rcx+0x30],0x1
  406e67:	mov    DWORD PTR [rcx+0x38],0x0
  406e6e:	ret    
  406e6f:	nop
  406e70:	mov    DWORD PTR [rcx+0x1c],0x0
  406e77:	ret    
  406e78:	nop    DWORD PTR [rax+rax*1+0x0]
  406e80:	mov    DWORD PTR [rcx+0x48],0x0
  406e87:	ret    
  406e88:	nop    DWORD PTR [rax+rax*1+0x0]
  406e90:	cmp    DWORD PTR [rcx+0x30],0x1
  406e94:	je     0x406ea0
  406e96:	mov    DWORD PTR [rcx+0x48],0x1
  406e9d:	repz ret 
  406e9f:	nop
  406ea0:	mov    eax,DWORD PTR [rcx+0x38]
  406ea3:	cmp    eax,0x5
  406ea6:	je     0x406e9d
  406ea8:	test   eax,eax
  406eaa:	jne    0x406e96
  406eac:	repz ret 
  406eae:	xchg   ax,ax
  406eb0:	mov    eax,DWORD PTR [rcx+0x48]
  406eb3:	ret    
  406eb4:	xchg   ax,ax
  406eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ec0:	sub    rsp,0x38
  406ec4:	mov    rax,rdx
  406ec7:	mov    rdx,QWORD PTR [rcx+0x4]
  406ecb:	lea    r8,[rcx+0x10]
  406ecf:	mov    QWORD PTR [rsp+0x20],rdx
  406ed4:	mov    edx,DWORD PTR [rcx+0xc]
  406ed7:	mov    rcx,rax
  406eda:	mov    DWORD PTR [rsp+0x28],edx
  406ede:	lea    rdx,[rsp+0x20]
  406ee3:	call   0x405be0
  406ee8:	nop
  406ee9:	add    rsp,0x38
  406eed:	ret    
  406eee:	xchg   ax,ax
  406ef0:	push   rbx
  406ef1:	sub    rsp,0x20
  406ef5:	mov    rcx,QWORD PTR [rcx+0x18]
  406ef9:	mov    rbx,rdx
  406efc:	call   0x42a610
  406f01:	mov    edx,DWORD PTR [rbx]
  406f03:	lea    eax,[rax+rax*2]
  406f06:	lea    eax,[rdx+rax*2+0x80]
  406f0d:	mov    DWORD PTR [rbx],eax
  406f0f:	add    rsp,0x20
  406f13:	pop    rbx
  406f14:	ret    
  406f15:	nop
  406f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f20:	push   rbx
  406f21:	sub    rsp,0x30
  406f25:	mov    rax,QWORD PTR [rcx]
  406f28:	mov    ebx,DWORD PTR [rdx]
  406f2a:	mov    QWORD PTR [rsp+0x20],rax
  406f2f:	mov    eax,DWORD PTR [rcx+0x8]
  406f32:	lea    rcx,[rsp+0x20]
  406f37:	mov    DWORD PTR [rsp+0x28],eax
  406f3b:	call   0x41ad20
  406f40:	cmp    ebx,eax
  406f42:	sete   al
  406f45:	movzx  eax,al
  406f48:	add    rsp,0x30
  406f4c:	pop    rbx
  406f4d:	ret    
  406f4e:	xchg   ax,ax
  406f50:	push   r15
  406f52:	push   r14
  406f54:	push   r13
  406f56:	push   r12
  406f58:	push   rbp
  406f59:	push   rdi
  406f5a:	push   rsi
  406f5b:	push   rbx
  406f5c:	sub    rsp,0x58
  406f60:	mov    r13,QWORD PTR [rdx+0x8]
  406f64:	mov    r8,QWORD PTR [rdx]
  406f67:	mov    r14,QWORD PTR [rdx+0x10]
  406f6b:	test   r13,r13
  406f6e:	je     0x407080
  406f74:	mov    rdi,rcx
  406f77:	mov    r15,r8
  406f7a:	xor    ebx,ebx
  406f7c:	mov    rsi,QWORD PTR [rip+0x3f5bd]        # 0x446540
  406f83:	lea    r12,[rsp+0x30]
  406f88:	lea    rbp,[rsp+0x40]
  406f8d:	jmp    0x406fb2
  406f8f:	nop
  406f90:	mov    rdx,rdi
  406f93:	mov    rcx,r15
  406f96:	call   r14
  406f99:	test   eax,eax
  406f9b:	jne    0x407093
  406fa1:	add    rbx,0x1
  406fa5:	add    r15,0x28
  406fa9:	cmp    rbx,r13
  406fac:	je     0x407080
  406fb2:	mov    rax,QWORD PTR [r15]
  406fb5:	mov    rdx,r12
  406fb8:	mov    rcx,rbp
  406fbb:	mov    QWORD PTR [rsp+0x40],rax
  406fc0:	mov    eax,DWORD PTR [r15+0x8]
  406fc4:	mov    DWORD PTR [rsp+0x48],eax
  406fc8:	mov    rax,QWORD PTR [rsi]
  406fcb:	mov    QWORD PTR [rsp+0x30],rax
  406fd0:	mov    eax,DWORD PTR [rsi+0x8]
  406fd3:	mov    DWORD PTR [rsp+0x38],eax
  406fd7:	call   0x41ad50
  406fdc:	test   eax,eax
  406fde:	jne    0x406f90
  406fe0:	mov    rax,QWORD PTR [r15]
  406fe3:	mov    rdx,r12
  406fe6:	mov    rcx,rbp
  406fe9:	mov    QWORD PTR [rsp+0x40],rax
  406fee:	mov    eax,DWORD PTR [r15+0x8]
  406ff2:	mov    DWORD PTR [rsp+0x48],eax
  406ff6:	mov    rax,QWORD PTR [rdi]
  406ff9:	mov    QWORD PTR [rsp+0x30],rax
  406ffe:	mov    eax,DWORD PTR [rdi+0x8]
  407001:	mov    DWORD PTR [rsp+0x38],eax
  407005:	call   0x41ad50
  40700a:	test   eax,eax
  40700c:	jne    0x406f90
  40700e:	mov    rax,QWORD PTR [r15]
  407011:	mov    rcx,rbp
  407014:	mov    QWORD PTR [rsp+0x40],rax
  407019:	mov    eax,DWORD PTR [r15+0x8]
  40701d:	mov    DWORD PTR [rsp+0x48],eax
  407021:	call   0x41ad20
  407026:	mov    DWORD PTR [rsp+0x2c],eax
  40702a:	mov    rax,QWORD PTR [rdi]
  40702d:	mov    rcx,rbp
  407030:	mov    QWORD PTR [rsp+0x40],rax
  407035:	mov    eax,DWORD PTR [rdi+0x8]
  407038:	mov    DWORD PTR [rsp+0x48],eax
  40703c:	call   0x41ad20
  407041:	cmp    DWORD PTR [rsp+0x2c],eax
  407045:	jne    0x406fa1
  40704b:	mov    rax,QWORD PTR [r15]
  40704e:	mov    rcx,rbp
  407051:	mov    QWORD PTR [rsp+0x40],rax
  407056:	mov    eax,DWORD PTR [r15+0x8]
  40705a:	mov    DWORD PTR [rsp+0x48],eax
  40705e:	call   0x41ad30
  407063:	cmp    eax,0xffffffff
  407066:	je     0x406f90
  40706c:	add    rbx,0x1
  407070:	add    r15,0x28
  407074:	cmp    rbx,r13
  407077:	jne    0x406fb2
  40707d:	nop    DWORD PTR [rax]
  407080:	xor    eax,eax
  407082:	add    rsp,0x58
  407086:	pop    rbx
  407087:	pop    rsi
  407088:	pop    rdi
  407089:	pop    rbp
  40708a:	pop    r12
  40708c:	pop    r13
  40708e:	pop    r14
  407090:	pop    r15
  407092:	ret    
  407093:	mov    eax,0x1
  407098:	jmp    0x407082
  40709a:	nop    WORD PTR [rax+rax*1+0x0]
  4070a0:	sub    rsp,0x28
  4070a4:	lea    rcx,[rip+0x2a415]        # 0x4314c0
  4070ab:	call   0x406c40
  4070b0:	lea    rcx,[rip+0x2a438]        # 0x4314ef
  4070b7:	call   0x406c40
  4070bc:	lea    rcx,[rip+0x2a445]        # 0x431508
  4070c3:	call   0x406c40
  4070c8:	lea    rcx,[rip+0x2a460]        # 0x43152f
  4070cf:	call   0x406c40
  4070d4:	lea    rcx,[rip+0x2a475]        # 0x431550
  4070db:	call   0x406c40
  4070e0:	lea    rcx,[rip+0x2a4a2]        # 0x431589
  4070e7:	call   0x406c40
  4070ec:	lea    rcx,[rip+0x2a4b5]        # 0x4315a8
  4070f3:	call   0x406c40
  4070f8:	lea    rcx,[rip+0x2a4d9]        # 0x4315d8
  4070ff:	call   0x406c40
  407104:	lea    rcx,[rip+0x2a4fd]        # 0x431608
  40710b:	call   0x406c40
  407110:	lea    rcx,[rip+0x2a527]        # 0x43163e
  407117:	call   0x406c40
  40711c:	lea    rcx,[rip+0x2a532]        # 0x431655
  407123:	call   0x406c40
  407128:	lea    rcx,[rip+0x2a532]        # 0x431661
  40712f:	call   0x406c40
  407134:	lea    rcx,[rip+0x2a528]        # 0x431663
  40713b:	call   0x406c40
  407140:	lea    rcx,[rip+0x2a524]        # 0x43166b
  407147:	add    rsp,0x28
  40714b:	jmp    0x406c40
  407150:	push   r15
  407152:	push   r14
  407154:	push   r13
  407156:	push   r12
  407158:	push   rbp
  407159:	push   rdi
  40715a:	push   rsi
  40715b:	push   rbx
  40715c:	sub    rsp,0x28
  407160:	mov    rbx,QWORD PTR [rip+0x3f319]        # 0x446480
  407167:	mov    rsi,QWORD PTR [rip+0x4a6fa]        # 0x451868
  40716e:	mov    r12,rcx
  407171:	mov    ebp,edx
  407173:	mov    DWORD PTR [rbx],0x0
  407179:	jmp    0x407184
  40717b:	nop    DWORD PTR [rax+rax*1+0x0]
  407180:	add    r12,0x1
  407184:	movsx  ecx,BYTE PTR [r12]
  407189:	call   rsi
  40718b:	test   eax,eax
  40718d:	jne    0x407180
  40718f:	mov    edx,0x2c
  407194:	mov    rcx,r12
  407197:	call   0x40ecf0
  40719c:	test   rax,rax
  40719f:	mov    r15,rax
  4071a2:	je     0x407224
  4071a8:	mov    eax,DWORD PTR [rax]
  4071aa:	test   eax,eax
  4071ac:	je     0x407224
  4071ae:	lea    r12,[r15+0x8]
  4071b2:	xor    r14d,r14d
  4071b5:	lea    r13,[rip+0x2a581]        # 0x43173d
  4071bc:	jmp    0x4071db
  4071be:	xchg   ax,ax
  4071c0:	test   ebp,ebp
  4071c2:	mov    DWORD PTR [rbx],0x1
  4071c8:	jne    0x407272
  4071ce:	add    r14d,0x1
  4071d2:	add    r12,0x8
  4071d6:	cmp    DWORD PTR [r15],r14d
  4071d9:	jbe    0x407224
  4071db:	mov    rdx,QWORD PTR [r12]
  4071df:	mov    rdi,r13
  4071e2:	mov    ecx,0x4
  4071e7:	mov    rsi,rdx
  4071ea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071ec:	je     0x4071c0
  4071ee:	lea    rdi,[rip+0x2a4b4]        # 0x4316a9
  4071f5:	mov    rsi,rdx
  4071f8:	mov    ecx,0x5
  4071fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071ff:	jne    0x407240
  407201:	test   ebp,ebp
  407203:	mov    DWORD PTR [rbx],0x0
  407209:	je     0x4071ce
  40720b:	lea    rcx,[rip+0x2a49e]        # 0x4316b0
  407212:	add    r14d,0x1
  407216:	add    r12,0x8
  40721a:	call   0x406c40
  40721f:	cmp    DWORD PTR [r15],r14d
  407222:	ja     0x4071db
  407224:	mov    rcx,r15
  407227:	call   0x40ec90
  40722c:	xor    eax,eax
  40722e:	add    rsp,0x28
  407232:	pop    rbx
  407233:	pop    rsi
  407234:	pop    rdi
  407235:	pop    rbp
  407236:	pop    r12
  407238:	pop    r13
  40723a:	pop    r14
  40723c:	pop    r15
  40723e:	ret    
  40723f:	nop
  407240:	lea    rdi,[rip+0x2a493]        # 0x4316da
  407247:	mov    rsi,rdx
  40724a:	mov    ecx,0xa
  40724f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407251:	jne    0x407283
  407253:	test   ebp,ebp
  407255:	mov    DWORD PTR [rbx],0x1
  40725b:	je     0x4071ce
  407261:	lea    rcx,[rip+0x2a480]        # 0x4316e8
  407268:	call   0x406c40
  40726d:	jmp    0x4071ce
  407272:	lea    rcx,[rip+0x2a407]        # 0x431680
  407279:	call   0x406c40
  40727e:	jmp    0x4071ce
  407283:	cmp    BYTE PTR [rdx],0x0
  407286:	je     0x4071ce
  40728c:	lea    rcx,[rip+0x2a485]        # 0x431718
  407293:	call   0x41a850
  407298:	mov    rcx,r15
  40729b:	mov    rbx,rax
  40729e:	call   0x40ec90
  4072a3:	mov    rax,rbx
  4072a6:	jmp    0x40722e
  4072a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	push   rbp
  4072b1:	push   r13
  4072b3:	push   r12
  4072b5:	push   rdi
  4072b6:	push   rsi
  4072b7:	push   rbx
  4072b8:	sub    rsp,0x48
  4072bc:	lea    rbp,[rsp+0x80]
  4072c4:	mov    rsi,QWORD PTR [rbp+0x20]
  4072c8:	test   r8,r8
  4072cb:	jne    0x4073e3
  4072d1:	mov    r13,QWORD PTR [rip+0x3f388]        # 0x446660
  4072d8:	mov    rax,QWORD PTR [r13+0x0]
  4072dc:	cmp    QWORD PTR [rax+0x218],0x0
  4072e4:	je     0x4073e3
  4072ea:	cmp    BYTE PTR [rcx],0x0
  4072ed:	mov    rbx,r9
  4072f0:	mov    r12,rdx
  4072f3:	mov    rdi,rcx
  4072f6:	jne    0x4073a0
  4072fc:	mov    rax,QWORD PTR [rip+0x3f14d]        # 0x446450
  407303:	mov    rax,QWORD PTR [rax]
  407306:	test   rax,rax
  407309:	je     0x4073f5
  40730f:	mov    rdx,QWORD PTR [rax]
  407312:	lea    rcx,[rbp-0x60]
  407316:	mov    QWORD PTR [rbp-0x60],rdx
  40731a:	mov    eax,DWORD PTR [rax+0x8]
  40731d:	mov    DWORD PTR [rbp-0x58],eax
  407320:	call   0x41ad20
  407325:	movsxd rcx,eax
  407328:	mov    QWORD PTR [rbp-0x48],rcx
  40732c:	test   rcx,rcx
  40732f:	je     0x4073f5
  407335:	mov    rdx,QWORD PTR [r13+0x0]
  407339:	call   QWORD PTR [rdx+0x218]
  40733f:	test   rax,rax
  407342:	mov    rdi,rax
  407345:	je     0x4073f5
  40734b:	mov    rcx,rax
  40734e:	call   0x42a610
  407353:	movsxd r10,eax
  407356:	cmp    r10,rbx
  407359:	jb     0x4073f5
  40735f:	lea    rax,[rsi+rbx*1]
  407363:	mov    r8,rsi
  407366:	cmp    r10,rax
  407369:	jb     0x407390
  40736b:	lea    rdx,[rdi+rbx*1]
  40736f:	mov    rcx,r12
  407372:	call   0x42a668
  407377:	mov    eax,esi
  407379:	lea    rsp,[rbp-0x38]
  40737d:	pop    rbx
  40737e:	pop    rsi
  40737f:	pop    rdi
  407380:	pop    r12
  407382:	pop    r13
  407384:	pop    rbp
  407385:	ret    
  407386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407390:	sub    r10,rbx
  407393:	mov    r8,r10
  407396:	mov    rsi,r10
  407399:	jmp    0x40736b
  40739b:	nop    DWORD PTR [rax+rax*1+0x0]
  4073a0:	call   0x42a610
  4073a5:	lea    r8,[rax+0x1]
  4073a9:	add    rax,0x1f
  4073ad:	and    rax,0xfffffffffffffff0
  4073b1:	call   0x425730
  4073b6:	sub    rsp,rax
  4073b9:	mov    rdx,rdi
  4073bc:	lea    r9,[rsp+0x20]
  4073c1:	mov    rcx,r9
  4073c4:	call   0x42a668
  4073c9:	lea    rdx,[rbp-0x48]
  4073cd:	mov    rcx,rax
  4073d0:	call   0x41ce20
  4073d5:	cmp    BYTE PTR [rax],0x0
  4073d8:	jne    0x4073f5
  4073da:	mov    rcx,QWORD PTR [rbp-0x48]
  4073de:	jmp    0x40732c
  4073e3:	mov    eax,0xfffffffe
  4073e8:	lea    rsp,[rbp-0x38]
  4073ec:	pop    rbx
  4073ed:	pop    rsi
  4073ee:	pop    rdi
  4073ef:	pop    r12
  4073f1:	pop    r13
  4073f3:	pop    rbp
  4073f4:	ret    
  4073f5:	mov    eax,0xffffffff
  4073fa:	lea    rsp,[rbp-0x38]
  4073fe:	pop    rbx
  4073ff:	pop    rsi
  407400:	pop    rdi
  407401:	pop    r12
  407403:	pop    r13
  407405:	pop    rbp
  407406:	ret    
  407407:	nop    WORD PTR [rax+rax*1+0x0]
  407410:	push   rbp
  407411:	push   rdi
  407412:	push   rsi
  407413:	push   rbx
  407414:	sub    rsp,0x48
  407418:	mov    eax,0xfffffffe
  40741d:	mov    rsi,QWORD PTR [rsp+0x90]
  407425:	test   r8,r8
  407428:	jne    0x4074f3
  40742e:	cmp    BYTE PTR [rcx],0x0
  407431:	jne    0x407540
  407437:	test   r9,r9
  40743a:	mov    rbx,r9
  40743d:	mov    rbp,rdx
  407440:	jne    0x4074c9
  407446:	mov    rcx,QWORD PTR [rip+0x46493]        # 0x44d8e0
  40744d:	test   rcx,rcx
  407450:	je     0x407457
  407452:	call   0x42a6c8
  407457:	lea    rdi,[rsp+0x20]
  40745c:	mov    rcx,rdi
  40745f:	call   0x41b020
  407464:	lea    rdx,[rip+0x2a2d6]        # 0x431741
  40746b:	mov    r8d,0xa
  407471:	mov    rcx,rdi
  407474:	call   0x41afc0
  407479:	mov    rcx,QWORD PTR [rip+0x3efa0]        # 0x446420
  407480:	lea    rdx,[rip+0x3689]        # 0x40ab10
  407487:	mov    r8,rdi
  40748a:	call   0x403930
  40748f:	lea    rdx,[rip+0x2a2b6]        # 0x43174c
  407496:	mov    r8d,0xc
  40749c:	mov    rcx,rdi
  40749f:	call   0x41afc0
  4074a4:	mov    rcx,rdi
  4074a7:	call   0x41b040
  4074ac:	mov    rcx,rax
  4074af:	mov    QWORD PTR [rip+0x4642a],rax        # 0x44d8e0
  4074b6:	call   0x42a610
  4074bb:	mov    rcx,rdi
  4074be:	mov    DWORD PTR [rip+0x46414],eax        # 0x44d8d8
  4074c4:	call   0x41afe0
  4074c9:	mov    eax,DWORD PTR [rip+0x46409]        # 0x44d8d8
  4074cf:	cmp    rbx,rax
  4074d2:	jae    0x407510
  4074d4:	sub    rax,rbx
  4074d7:	mov    r8,rsi
  4074da:	cmp    rsi,rax
  4074dd:	ja     0x407500
  4074df:	add    rbx,QWORD PTR [rip+0x463fa]        # 0x44d8e0
  4074e6:	mov    rcx,rbp
  4074e9:	mov    rdx,rbx
  4074ec:	call   0x42a668
  4074f1:	mov    eax,esi
  4074f3:	add    rsp,0x48
  4074f7:	pop    rbx
  4074f8:	pop    rsi
  4074f9:	pop    rdi
  4074fa:	pop    rbp
  4074fb:	ret    
  4074fc:	nop    DWORD PTR [rax+0x0]
  407500:	mov    rsi,rax
  407503:	mov    r8,rax
  407506:	jmp    0x4074df
  407508:	nop    DWORD PTR [rax+rax*1+0x0]
  407510:	mov    rcx,QWORD PTR [rip+0x463c9]        # 0x44d8e0
  407517:	call   0x42a6c8
  40751c:	xor    eax,eax
  40751e:	mov    QWORD PTR [rip+0x463b7],0x0        # 0x44d8e0
  407529:	mov    DWORD PTR [rip+0x463a5],0x0        # 0x44d8d8
  407533:	add    rsp,0x48
  407537:	pop    rbx
  407538:	pop    rsi
  407539:	pop    rdi
  40753a:	pop    rbp
  40753b:	ret    
  40753c:	nop    DWORD PTR [rax+0x0]
  407540:	mov    eax,0xffffffff
  407545:	jmp    0x4074f3
  407547:	nop    WORD PTR [rax+rax*1+0x0]
  407550:	push   rbp
  407551:	push   rdi
  407552:	push   rsi
  407553:	push   rbx
  407554:	sub    rsp,0x38
  407558:	mov    eax,0xfffffffe
  40755d:	mov    rdi,QWORD PTR [rsp+0x80]
  407565:	test   r8,r8
  407568:	jne    0x407676
  40756e:	cmp    BYTE PTR [rcx],0x0
  407571:	jne    0x4076a0
  407577:	mov    rax,QWORD PTR [rip+0x3eed2]        # 0x446450
  40757e:	cmp    QWORD PTR [rax],0x0
  407582:	je     0x4076a0
  407588:	mov    rcx,QWORD PTR [rip+0x3ee71]        # 0x446400
  40758f:	lea    r8,[rsp+0x24]
  407594:	mov    rbp,rdx
  407597:	lea    rdx,[rip+0xfffffffffffff952]        # 0x406ef0
  40759e:	mov    rsi,r9
  4075a1:	mov    DWORD PTR [rsp+0x24],0x40
  4075a9:	call   0x403930
  4075ae:	mov    ecx,DWORD PTR [rsp+0x24]
  4075b2:	call   0x423010
  4075b7:	test   rax,rax
  4075ba:	mov    rbx,rax
  4075bd:	je     0x4076a0
  4075c3:	movabs rax,0x7972617262696c3c
  4075cd:	mov    rcx,QWORD PTR [rip+0x3ee2c]        # 0x446400
  4075d4:	lea    r8,[rsp+0x28]
  4075d9:	mov    QWORD PTR [rbx],rax
  4075dc:	movabs rax,0x6576207473696c2d
  4075e6:	lea    rdx,[rip+0x3723]        # 0x40ad10
  4075ed:	mov    QWORD PTR [rbx+0x8],rax
  4075f1:	movabs rax,0x31223d6e6f697372
  4075fb:	mov    DWORD PTR [rbx+0x18],0x3e22302e
  407602:	mov    QWORD PTR [rbx+0x10],rax
  407606:	mov    eax,0xa
  40760b:	mov    WORD PTR [rbx+0x1c],ax
  40760f:	lea    rax,[rbx+0x1d]
  407613:	mov    QWORD PTR [rsp+0x28],rax
  407618:	call   0x403930
  40761d:	mov    rax,QWORD PTR [rsp+0x28]
  407622:	movabs rdx,0x72617262696c2f3c
  40762c:	movabs rcx,0xa3e7473696c2d79
  407636:	mov    QWORD PTR [rax+0x8],rcx
  40763a:	mov    QWORD PTR [rax],rdx
  40763d:	mov    rcx,rbx
  407640:	mov    BYTE PTR [rax+0x10],0x0
  407644:	call   0x42a610
  407649:	mov    DWORD PTR [rsp+0x24],eax
  40764d:	mov    eax,eax
  40764f:	cmp    rax,rsi
  407652:	jb     0x407690
  407654:	lea    rdx,[rdi+rsi*1]
  407658:	mov    r8,rdi
  40765b:	cmp    rax,rdx
  40765e:	jb     0x407680
  407660:	lea    rdx,[rbx+rsi*1]
  407664:	mov    rcx,rbp
  407667:	call   0x42a668
  40766c:	mov    rcx,rbx
  40766f:	call   0x42a6c8
  407674:	mov    eax,edi
  407676:	add    rsp,0x38
  40767a:	pop    rbx
  40767b:	pop    rsi
  40767c:	pop    rdi
  40767d:	pop    rbp
  40767e:	ret    
  40767f:	nop
  407680:	sub    rax,rsi
  407683:	mov    r8,rax
  407686:	mov    rdi,rax
  407689:	jmp    0x407660
  40768b:	nop    DWORD PTR [rax+rax*1+0x0]
  407690:	mov    rcx,rbx
  407693:	call   0x42a6c8
  407698:	nop    DWORD PTR [rax+rax*1+0x0]
  4076a0:	mov    eax,0xffffffff
  4076a5:	jmp    0x407676
  4076a7:	nop    WORD PTR [rax+rax*1+0x0]
  4076b0:	sub    rsp,0x48
  4076b4:	mov    eax,0xfffffffe
  4076b9:	test   r8,r8
  4076bc:	jne    0x407703
  4076be:	cmp    BYTE PTR [rcx],0x0
  4076c1:	jne    0x407710
  4076c3:	mov    rax,QWORD PTR [rip+0x3ed86]        # 0x446450
  4076ca:	cmp    QWORD PTR [rax],0x0
  4076ce:	je     0x407710
  4076d0:	mov    rax,QWORD PTR [rip+0x3ed89]        # 0x446460
  4076d7:	mov    ecx,DWORD PTR [rax]
  4076d9:	cmp    ecx,0xffffffff
  4076dc:	je     0x407710
  4076de:	mov    rax,r9
  4076e1:	mov    r8,rdx
  4076e4:	mov    r9,QWORD PTR [rsp+0x70]
  4076e9:	lea    rdx,[rsp+0x38]
  4076ee:	mov    QWORD PTR [rsp+0x20],rdx
  4076f3:	mov    rdx,rax
  4076f6:	call   0x419b40
  4076fb:	test   eax,eax
  4076fd:	jne    0x407710
  4076ff:	mov    eax,DWORD PTR [rsp+0x38]
  407703:	add    rsp,0x48
  407707:	ret    
  407708:	nop    DWORD PTR [rax+rax*1+0x0]
  407710:	mov    eax,0xffffffff
  407715:	jmp    0x407703
  407717:	nop    WORD PTR [rax+rax*1+0x0]
  407720:	sub    rsp,0x38
  407724:	mov    eax,DWORD PTR [rdx+0x48]
  407727:	test   eax,eax
  407729:	je     0x40778c
  40772b:	mov    rax,QWORD PTR [rdx+0x30]
  40772f:	mov    rcx,QWORD PTR [rdx]
  407732:	lea    r8,[rip+0x461f7]        # 0x44d930
  407739:	mov    DWORD PTR [rdx+0x48],0x0
  407740:	mov    QWORD PTR [rip+0x461e9],rax        # 0x44d930
  407747:	mov    rax,QWORD PTR [rdx+0x38]
  40774b:	mov    QWORD PTR [rip+0x461c6],rcx        # 0x44d918
  407752:	mov    QWORD PTR [rip+0x461df],rax        # 0x44d938
  407759:	mov    rax,QWORD PTR [rdx+0x40]
  40775d:	mov    QWORD PTR [rip+0x461dc],rax        # 0x44d940
  407764:	mov    eax,DWORD PTR [rdx+0x8]
  407767:	lea    rdx,[rsp+0x20]
  40776c:	mov    QWORD PTR [rsp+0x20],rcx
  407771:	mov    rcx,QWORD PTR [rip+0x45bc8]        # 0x44d340
  407778:	mov    DWORD PTR [rip+0x461a2],eax        # 0x44d920
  40777e:	mov    DWORD PTR [rsp+0x28],eax
  407782:	call   0x405be0
  407787:	mov    eax,0x1
  40778c:	add    rsp,0x38
  407790:	ret    
  407791:	nop    DWORD PTR [rax+rax*1+0x0]
  407796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077a0:	push   r13
  4077a2:	push   r12
  4077a4:	push   rbp
  4077a5:	push   rdi
  4077a6:	push   rsi
  4077a7:	push   rbx
  4077a8:	sub    rsp,0x28
  4077ac:	mov    eax,0xfffffffe
  4077b1:	mov    r12,QWORD PTR [rsp+0x80]
  4077b9:	test   r8,r8
  4077bc:	mov    rbx,rcx
  4077bf:	mov    r13,rdx
  4077c2:	mov    rbp,r9
  4077c5:	jne    0x407876
  4077cb:	call   0x403a80
  4077d0:	test   rax,rax
  4077d3:	je     0x407895
  4077d9:	call   0x41c370
  4077de:	mov    rax,QWORD PTR [rax+0x18]
  4077e2:	test   rax,rax
  4077e5:	je     0x4077fe
  4077e7:	lea    rdi,[rip+0x29f6a]        # 0x431758
  4077ee:	mov    ecx,0xb
  4077f3:	mov    rsi,rbx
  4077f6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4077f8:	je     0x407883
  4077fe:	mov    rdi,QWORD PTR [rip+0x3eedb]        # 0x4466e0
  407805:	mov    rdx,QWORD PTR [rdi]
  407808:	test   rdx,rdx
  40780b:	je     0x407895
  407811:	xor    esi,esi
  407813:	jmp    0x407828
  407815:	add    esi,0x1
  407818:	movsxd rax,esi
  40781b:	shl    rax,0x4
  40781f:	mov    rdx,QWORD PTR [rdi+rax*1]
  407823:	test   rdx,rdx
  407826:	je     0x407895
  407828:	mov    rcx,rbx
  40782b:	call   0x42a628
  407830:	test   eax,eax
  407832:	jne    0x407815
  407834:	movsxd rsi,esi
  407837:	shl    rsi,0x4
  40783b:	mov    rbx,QWORD PTR [rdi+rsi*1+0x8]
  407840:	test   rbx,rbx
  407843:	je     0x407895
  407845:	mov    rcx,rbx
  407848:	call   0x42a610
  40784d:	cmp    rbp,rax
  407850:	ja     0x407895
  407852:	lea    rdx,[r12+rbp*1]
  407856:	mov    r8,r12
  407859:	cmp    rax,rdx
  40785c:	jae    0x407867
  40785e:	sub    rax,rbp
  407861:	mov    r8,rax
  407864:	mov    r12,rax
  407867:	lea    rdx,[rbx+rbp*1]
  40786b:	mov    rcx,r13
  40786e:	call   0x42a668
  407873:	mov    eax,r12d
  407876:	add    rsp,0x28
  40787a:	pop    rbx
  40787b:	pop    rsi
  40787c:	pop    rdi
  40787d:	pop    rbp
  40787e:	pop    r12
  407880:	pop    r13
  407882:	ret    
  407883:	cmp    BYTE PTR [rax],0x40
  407886:	mov    rbx,rax
  407889:	jne    0x4077fe
  40788f:	lea    rbx,[rax+0x1]
  407893:	jmp    0x407840
  407895:	mov    eax,0xffffffff
  40789a:	add    rsp,0x28
  40789e:	pop    rbx
  40789f:	pop    rsi
  4078a0:	pop    rdi
  4078a1:	pop    rbp
  4078a2:	pop    r12
  4078a4:	pop    r13
  4078a6:	ret    
  4078a7:	nop    WORD PTR [rax+rax*1+0x0]
  4078b0:	push   r12
  4078b2:	push   rbp
  4078b3:	push   rdi
  4078b4:	push   rsi
  4078b5:	push   rbx
  4078b6:	sub    rsp,0x40
  4078ba:	mov    r10d,0xfffffffe
  4078c0:	mov    rsi,QWORD PTR [rsp+0x90]
  4078c8:	test   r8,r8
  4078cb:	jne    0x4078eb
  4078cd:	mov    rbx,r9
  4078d0:	mov    rbp,rdx
  4078d3:	mov    rdi,rcx
  4078d6:	call   0x403a80
  4078db:	test   rax,rax
  4078de:	mov    r10d,0xffffffff
  4078e4:	je     0x4078eb
  4078e6:	cmp    BYTE PTR [rdi],0x0
  4078e9:	je     0x407900
  4078eb:	mov    eax,r10d
  4078ee:	add    rsp,0x40
  4078f2:	pop    rbx
  4078f3:	pop    rsi
  4078f4:	pop    rdi
  4078f5:	pop    rbp
  4078f6:	pop    r12
  4078f8:	ret    
  4078f9:	nop    DWORD PTR [rax+0x0]
  407900:	mov    r12,QWORD PTR [rip+0x3eb59]        # 0x446460
  407907:	mov    r10d,DWORD PTR [r12]
  40790b:	cmp    r10d,0xffffffff
  40790f:	je     0x4078eb
  407911:	test   rbx,rbx
  407914:	jne    0x407960
  407916:	mov    rcx,QWORD PTR [rip+0x45fd3]        # 0x44d8f0
  40791d:	lea    rdi,[rsp+0x20]
  407922:	call   0x42a6c8
  407927:	mov    rcx,rdi
  40792a:	call   0x41b020
  40792f:	mov    ecx,DWORD PTR [r12]
  407933:	mov    rdx,rdi
  407936:	call   0x419c90
  40793b:	mov    rcx,rdi
  40793e:	call   0x41b040
  407943:	mov    rcx,rax
  407946:	mov    QWORD PTR [rip+0x45fa3],rax        # 0x44d8f0
  40794d:	call   0x42a610
  407952:	mov    rcx,rdi
  407955:	mov    DWORD PTR [rip+0x45f8d],eax        # 0x44d8e8
  40795b:	call   0x41afe0
  407960:	mov    eax,DWORD PTR [rip+0x45f82]        # 0x44d8e8
  407966:	cmp    rbx,rax
  407969:	jae    0x4079a0
  40796b:	sub    rax,rbx
  40796e:	mov    r8,rsi
  407971:	cmp    rsi,rax
  407974:	jbe    0x40797c
  407976:	mov    rsi,rax
  407979:	mov    r8,rax
  40797c:	add    rbx,QWORD PTR [rip+0x45f6d]        # 0x44d8f0
  407983:	mov    rcx,rbp
  407986:	mov    rdx,rbx
  407989:	call   0x42a668
  40798e:	mov    r10d,esi
  407991:	mov    eax,r10d
  407994:	add    rsp,0x40
  407998:	pop    rbx
  407999:	pop    rsi
  40799a:	pop    rdi
  40799b:	pop    rbp
  40799c:	pop    r12
  40799e:	ret    
  40799f:	nop
  4079a0:	mov    rcx,QWORD PTR [rip+0x45f49]        # 0x44d8f0
  4079a7:	call   0x42a6c8
  4079ac:	xor    r10d,r10d
  4079af:	mov    QWORD PTR [rip+0x45f36],0x0        # 0x44d8f0
  4079ba:	mov    DWORD PTR [rip+0x45f24],0x0        # 0x44d8e8
  4079c4:	mov    eax,r10d
  4079c7:	add    rsp,0x40
  4079cb:	pop    rbx
  4079cc:	pop    rsi
  4079cd:	pop    rdi
  4079ce:	pop    rbp
  4079cf:	pop    r12
  4079d1:	ret    
  4079d2:	nop    DWORD PTR [rax+0x0]
  4079d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079e0:	push   r13
  4079e2:	push   r12
  4079e4:	push   rbp
  4079e5:	push   rdi
  4079e6:	push   rsi
  4079e7:	push   rbx
  4079e8:	sub    rsp,0x48
  4079ec:	mov    rsi,QWORD PTR [rsp+0xa0]
  4079f4:	test   r8,r8
  4079f7:	jne    0x407bb0
  4079fd:	mov    rdi,QWORD PTR [rip+0x3ec5c]        # 0x446660
  407a04:	mov    rax,QWORD PTR [rdi]
  407a07:	cmp    QWORD PTR [rax+0x208],0x0
  407a0f:	je     0x407bb0
  407a15:	cmp    BYTE PTR [rcx],0x0
  407a18:	mov    eax,0xffffffff
  407a1d:	jne    0x407ab7
  407a23:	mov    rax,QWORD PTR [rip+0x45e5e]        # 0x44d888
  407a2a:	mov    r12,rdx
  407a2d:	lea    r13,[rsp+0x20]
  407a32:	lea    rbp,[rsp+0x30]
  407a37:	mov    rbx,r9
  407a3a:	mov    QWORD PTR [rsp+0x30],rax
  407a3f:	mov    eax,DWORD PTR [rip+0x45e4b]        # 0x44d890
  407a45:	mov    rcx,rbp
  407a48:	mov    DWORD PTR [rsp+0x38],eax
  407a4c:	mov    rax,QWORD PTR [rip+0x3eb3d]        # 0x446590
  407a53:	mov    rdx,QWORD PTR [rax]
  407a56:	mov    QWORD PTR [rsp+0x20],rdx
  407a5b:	mov    eax,DWORD PTR [rax+0x8]
  407a5e:	mov    rdx,r13
  407a61:	mov    DWORD PTR [rsp+0x28],eax
  407a65:	call   0x41ad50
  407a6a:	test   eax,eax
  407a6c:	je     0x407ac4
  407a6e:	mov    rax,QWORD PTR [rip+0x458cb]        # 0x44d340
  407a75:	movabs rdi,0x73207473754d2e45
  407a7f:	movabs rsi,0x7420656c676e6973
  407a89:	mov    edx,0x2e64
  407a8e:	mov    QWORD PTR [rax],rdi
  407a91:	movabs rdi,0x2061207463656c65
  407a9b:	mov    QWORD PTR [rax+0x10],rsi
  407a9f:	mov    QWORD PTR [rax+0x8],rdi
  407aa3:	mov    DWORD PTR [rax+0x18],0x61657268
  407aaa:	mov    WORD PTR [rax+0x1c],dx
  407aae:	mov    BYTE PTR [rax+0x1e],0x0
  407ab2:	mov    eax,0xfffffffd
  407ab7:	add    rsp,0x48
  407abb:	pop    rbx
  407abc:	pop    rsi
  407abd:	pop    rdi
  407abe:	pop    rbp
  407abf:	pop    r12
  407ac1:	pop    r13
  407ac3:	ret    
  407ac4:	mov    rax,QWORD PTR [rip+0x45dbd]        # 0x44d888
  407acb:	mov    rcx,rbp
  407ace:	mov    QWORD PTR [rsp+0x30],rax
  407ad3:	mov    eax,DWORD PTR [rip+0x45db7]        # 0x44d890
  407ad9:	mov    DWORD PTR [rsp+0x38],eax
  407add:	mov    rax,QWORD PTR [rip+0x3ea5c]        # 0x446540
  407ae4:	mov    rdx,QWORD PTR [rax]
  407ae7:	mov    QWORD PTR [rsp+0x20],rdx
  407aec:	mov    eax,DWORD PTR [rax+0x8]
  407aef:	mov    rdx,r13
  407af2:	mov    DWORD PTR [rsp+0x28],eax
  407af6:	call   0x41ad50
  407afb:	test   eax,eax
  407afd:	jne    0x407a6e
  407b03:	mov    rax,QWORD PTR [rip+0x45d7e]        # 0x44d888
  407b0a:	mov    rcx,rbp
  407b0d:	mov    QWORD PTR [rsp+0x30],rax
  407b12:	mov    eax,DWORD PTR [rip+0x45d78]        # 0x44d890
  407b18:	mov    DWORD PTR [rsp+0x38],eax
  407b1c:	call   0x403c50
  407b21:	test   rax,rax
  407b24:	mov    rbp,rax
  407b27:	je     0x407c38
  407b2d:	cmp    QWORD PTR [rbp+0x58],0x0
  407b32:	je     0x407bfc
  407b38:	test   rbx,rbx
  407b3b:	je     0x407b80
  407b3d:	mov    rax,QWORD PTR [rip+0x45d8c]        # 0x44d8d0
  407b44:	cmp    rbx,rax
  407b47:	ja     0x407bc2
  407b49:	sub    rax,rbx
  407b4c:	mov    r8,rsi
  407b4f:	cmp    rsi,rax
  407b52:	jbe    0x407b5a
  407b54:	mov    rsi,rax
  407b57:	mov    r8,rax
  407b5a:	add    rbx,QWORD PTR [rip+0x45d5f]        # 0x44d8c0
  407b61:	mov    rcx,r12
  407b64:	mov    rdx,rbx
  407b67:	call   0x42a668
  407b6c:	mov    eax,esi
  407b6e:	add    rsp,0x48
  407b72:	pop    rbx
  407b73:	pop    rsi
  407b74:	pop    rdi
  407b75:	pop    rbp
  407b76:	pop    r12
  407b78:	pop    r13
  407b7a:	ret    
  407b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b80:	lea    rcx,[rip+0x45d39]        # 0x44d8c0
  407b87:	call   0x41afe0
  407b8c:	mov    rax,QWORD PTR [rdi]
  407b8f:	mov    rcx,QWORD PTR [rbp+0x58]
  407b93:	lea    rdx,[rip+0x45d26]        # 0x44d8c0
  407b9a:	call   QWORD PTR [rax+0x208]
  407ba0:	test   eax,eax
  407ba2:	jne    0x407bd8
  407ba4:	mov    rax,QWORD PTR [rip+0x45d25]        # 0x44d8d0
  407bab:	jmp    0x407b49
  407bad:	nop    DWORD PTR [rax]
  407bb0:	mov    eax,0xfffffffe
  407bb5:	add    rsp,0x48
  407bb9:	pop    rbx
  407bba:	pop    rsi
  407bbb:	pop    rdi
  407bbc:	pop    rbp
  407bbd:	pop    r12
  407bbf:	pop    r13
  407bc1:	ret    
  407bc2:	lea    rcx,[rip+0x45cf7]        # 0x44d8c0
  407bc9:	call   0x41afe0
  407bce:	mov    eax,0xfffffffd
  407bd3:	jmp    0x407ab7
  407bd8:	mov    r8,QWORD PTR [rip+0x45cf1]        # 0x44d8d0
  407bdf:	mov    rdx,QWORD PTR [rip+0x45cda]        # 0x44d8c0
  407be6:	mov    rcx,QWORD PTR [rip+0x45753]        # 0x44d340
  407bed:	call   0x42a668
  407bf2:	mov    eax,0xfffffffd
  407bf7:	jmp    0x407ab7
  407bfc:	mov    rax,QWORD PTR [rip+0x4573d]        # 0x44d340
  407c03:	movabs rdi,0x6563617274422e45
  407c0d:	mov    ecx,0x2e
  407c12:	mov    QWORD PTR [rax],rdi
  407c15:	movabs rdi,0x616e6520746f6e20
  407c1f:	mov    DWORD PTR [rax+0x10],0x64656c62
  407c26:	mov    QWORD PTR [rax+0x8],rdi
  407c2a:	mov    WORD PTR [rax+0x14],cx
  407c2e:	mov    eax,0xfffffffd
  407c33:	jmp    0x407ab7
  407c38:	mov    rax,QWORD PTR [rip+0x45701]        # 0x44d340
  407c3f:	movabs rdi,0x637573206f4e2e45
  407c49:	mov    r8d,0x2e
  407c4f:	mov    QWORD PTR [rax],rdi
  407c52:	movabs rdi,0x6461657268742068
  407c5c:	mov    WORD PTR [rax+0x10],r8w
  407c61:	mov    QWORD PTR [rax+0x8],rdi
  407c65:	mov    eax,0xfffffffd
  407c6a:	jmp    0x407ab7
  407c6f:	nop
  407c70:	push   r15
  407c72:	push   r14
  407c74:	push   r13
  407c76:	push   r12
  407c78:	push   rbp
  407c79:	push   rdi
  407c7a:	push   rsi
  407c7b:	push   rbx
  407c7c:	sub    rsp,0x48
  407c80:	mov    rbx,QWORD PTR [rsp+0xb0]
  407c88:	test   r8,r8
  407c8b:	jne    0x407d51
  407c91:	mov    r14,QWORD PTR [rip+0x3e9c8]        # 0x446660
  407c98:	mov    rax,QWORD PTR [r14]
  407c9b:	cmp    QWORD PTR [rax+0x200],0x0
  407ca3:	je     0x407d51
  407ca9:	mov    rax,QWORD PTR [rip+0x45bd8]        # 0x44d888
  407cb0:	mov    r13,rdx
  407cb3:	lea    rsi,[rsp+0x20]
  407cb8:	lea    rdi,[rsp+0x30]
  407cbd:	mov    r12,rcx
  407cc0:	mov    rbp,r9
  407cc3:	mov    QWORD PTR [rsp+0x30],rax
  407cc8:	mov    eax,DWORD PTR [rip+0x45bc2]        # 0x44d890
  407cce:	mov    rcx,rdi
  407cd1:	mov    DWORD PTR [rsp+0x38],eax
  407cd5:	mov    rax,QWORD PTR [rip+0x3e8b4]        # 0x446590
  407cdc:	mov    rdx,QWORD PTR [rax]
  407cdf:	mov    QWORD PTR [rsp+0x20],rdx
  407ce4:	mov    eax,DWORD PTR [rax+0x8]
  407ce7:	mov    rdx,rsi
  407cea:	mov    DWORD PTR [rsp+0x28],eax
  407cee:	call   0x41ad50
  407cf3:	test   eax,eax
  407cf5:	je     0x407d60
  407cf7:	mov    rax,QWORD PTR [rip+0x45642]        # 0x44d340
  407cfe:	movabs rbx,0x73207473754d2e45
  407d08:	movabs rsi,0x2061207463656c65
  407d12:	mov    edx,0x2e64
  407d17:	mov    QWORD PTR [rax],rbx
  407d1a:	movabs rbx,0x7420656c676e6973
  407d24:	mov    QWORD PTR [rax+0x8],rsi
  407d28:	mov    QWORD PTR [rax+0x10],rbx
  407d2c:	mov    DWORD PTR [rax+0x18],0x61657268
  407d33:	mov    WORD PTR [rax+0x1c],dx
  407d37:	mov    BYTE PTR [rax+0x1e],0x0
  407d3b:	mov    eax,0xfffffffd
  407d40:	add    rsp,0x48
  407d44:	pop    rbx
  407d45:	pop    rsi
  407d46:	pop    rdi
  407d47:	pop    rbp
  407d48:	pop    r12
  407d4a:	pop    r13
  407d4c:	pop    r14
  407d4e:	pop    r15
  407d50:	ret    
  407d51:	mov    eax,0xfffffffe
  407d56:	jmp    0x407d40
  407d58:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	mov    rax,QWORD PTR [rip+0x45b21]        # 0x44d888
  407d67:	mov    rcx,rdi
  407d6a:	mov    QWORD PTR [rsp+0x30],rax
  407d6f:	mov    eax,DWORD PTR [rip+0x45b1b]        # 0x44d890
  407d75:	mov    DWORD PTR [rsp+0x38],eax
  407d79:	mov    rax,QWORD PTR [rip+0x3e7c0]        # 0x446540
  407d80:	mov    rdx,QWORD PTR [rax]
  407d83:	mov    QWORD PTR [rsp+0x20],rdx
  407d88:	mov    eax,DWORD PTR [rax+0x8]
  407d8b:	mov    rdx,rsi
  407d8e:	mov    DWORD PTR [rsp+0x28],eax
  407d92:	call   0x41ad50
  407d97:	test   eax,eax
  407d99:	jne    0x407cf7
  407d9f:	mov    rax,QWORD PTR [rip+0x45ae2]        # 0x44d888
  407da6:	mov    rcx,rdi
  407da9:	mov    QWORD PTR [rsp+0x30],rax
  407dae:	mov    eax,DWORD PTR [rip+0x45adc]        # 0x44d890
  407db4:	mov    DWORD PTR [rsp+0x38],eax
  407db8:	call   0x403c50
  407dbd:	test   rax,rax
  407dc0:	mov    r15,rax
  407dc3:	je     0x407efd
  407dc9:	cmp    QWORD PTR [r15+0x58],0x0
  407dce:	je     0x407f34
  407dd4:	lea    rdi,[rip+0x29962]        # 0x43173d
  407ddb:	mov    ecx,0x4
  407de0:	mov    rsi,r12
  407de3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407de5:	je     0x407e55
  407de7:	lea    rdi,[rip+0x29975]        # 0x431763
  407dee:	mov    ecx,0x4
  407df3:	mov    rsi,r12
  407df6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407df8:	je     0x407e90
  407dfe:	lea    rdi,[rip+0x29962]        # 0x431767
  407e05:	mov    ecx,0x6
  407e0a:	mov    rsi,r12
  407e0d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407e0f:	jne    0x407ed4
  407e15:	mov    esi,0x2
  407e1a:	test   rbp,rbp
  407e1d:	je     0x407e5c
  407e1f:	mov    rax,QWORD PTR [rip+0x45a8a]        # 0x44d8b0
  407e26:	cmp    rbp,rax
  407e29:	ja     0x407e9a
  407e2b:	sub    rax,rbp
  407e2e:	mov    r8,rbx
  407e31:	cmp    rbx,rax
  407e34:	jbe    0x407e3c
  407e36:	mov    rbx,rax
  407e39:	mov    r8,rax
  407e3c:	mov    rdx,rbp
  407e3f:	add    rdx,QWORD PTR [rip+0x45a5a]        # 0x44d8a0
  407e46:	mov    rcx,r13
  407e49:	call   0x42a668
  407e4e:	mov    eax,ebx
  407e50:	jmp    0x407d40
  407e55:	xor    esi,esi
  407e57:	test   rbp,rbp
  407e5a:	jne    0x407e1f
  407e5c:	lea    rcx,[rip+0x45a3d]        # 0x44d8a0
  407e63:	call   0x41afe0
  407e68:	mov    rax,QWORD PTR [r14]
  407e6b:	mov    rcx,QWORD PTR [r15+0x58]
  407e6f:	mov    r8d,esi
  407e72:	lea    rdx,[rip+0x45a27]        # 0x44d8a0
  407e79:	call   QWORD PTR [rax+0x200]
  407e7f:	test   eax,eax
  407e81:	jne    0x407eb0
  407e83:	mov    rax,QWORD PTR [rip+0x45a26]        # 0x44d8b0
  407e8a:	jmp    0x407e2b
  407e8c:	nop    DWORD PTR [rax+0x0]
  407e90:	mov    esi,0x1
  407e95:	jmp    0x407e1a
  407e9a:	lea    rcx,[rip+0x459ff]        # 0x44d8a0
  407ea1:	call   0x41afe0
  407ea6:	mov    eax,0xfffffffd
  407eab:	jmp    0x407d40
  407eb0:	mov    r8,QWORD PTR [rip+0x459f9]        # 0x44d8b0
  407eb7:	mov    rdx,QWORD PTR [rip+0x459e2]        # 0x44d8a0
  407ebe:	mov    rcx,QWORD PTR [rip+0x4547b]        # 0x44d340
  407ec5:	call   0x42a668
  407eca:	mov    eax,0xfffffffd
  407ecf:	jmp    0x407d40
  407ed4:	mov    rax,QWORD PTR [rip+0x45465]        # 0x44d340
  407edb:	movabs rdi,0x6e61206461422e45
  407ee5:	mov    QWORD PTR [rax],rdi
  407ee8:	mov    DWORD PTR [rax+0x8],0x2e78656e
  407eef:	mov    BYTE PTR [rax+0xc],0x0
  407ef3:	mov    eax,0xfffffffd
  407ef8:	jmp    0x407d40
  407efd:	mov    rax,QWORD PTR [rip+0x4543c]        # 0x44d340
  407f04:	movabs rdi,0x637573206f4e2e45
  407f0e:	mov    r8d,0x2e
  407f14:	mov    QWORD PTR [rax],rdi
  407f17:	movabs rdi,0x6461657268742068
  407f21:	mov    WORD PTR [rax+0x10],r8w
  407f26:	mov    QWORD PTR [rax+0x8],rdi
  407f2a:	mov    eax,0xfffffffd
  407f2f:	jmp    0x407d40
  407f34:	mov    rax,QWORD PTR [rip+0x45405]        # 0x44d340
  407f3b:	movabs rdi,0x6563617274422e45
  407f45:	mov    ecx,0x2e
  407f4a:	mov    QWORD PTR [rax],rdi
  407f4d:	movabs rdi,0x616e6520746f6e20
  407f57:	mov    DWORD PTR [rax+0x10],0x64656c62
  407f5e:	mov    QWORD PTR [rax+0x8],rdi
  407f62:	mov    WORD PTR [rax+0x14],cx
  407f66:	mov    eax,0xfffffffd
  407f6b:	jmp    0x407d40
  407f70:	push   rbp
  407f71:	push   rdi
  407f72:	push   rsi
  407f73:	push   rbx
  407f74:	sub    rsp,0x48
  407f78:	mov    rax,QWORD PTR [rip+0x3e6e1]        # 0x446660
  407f7f:	mov    rbx,rcx
  407f82:	mov    rax,QWORD PTR [rax]
  407f85:	mov    rax,QWORD PTR [rax+0x190]
  407f8c:	test   rax,rax
  407f8f:	je     0x408044
  407f95:	call   rax
  407f97:	test   eax,eax
  407f99:	je     0x407ff4
  407f9b:	mov    rax,QWORD PTR [rip+0x3e4ce]        # 0x446470
  407fa2:	mov    eax,DWORD PTR [rax]
  407fa4:	test   eax,eax
  407fa6:	jne    0x408000
  407fa8:	cmp    DWORD PTR [rbx+0x30],0xb
  407fac:	je     0x408060
  407fb2:	mov    ebp,DWORD PTR [rbx]
  407fb4:	mov    edi,DWORD PTR [rbx+0x4]
  407fb7:	mov    ecx,0x28
  407fbc:	mov    esi,DWORD PTR [rbx+0x8]
  407fbf:	call   0x41a6e0
  407fc4:	mov    DWORD PTR [rax+0x4],ebp
  407fc7:	mov    DWORD PTR [rax+0x8],edi
  407fca:	mov    DWORD PTR [rax+0xc],esi
  407fcd:	mov    rdx,QWORD PTR [rbx+0x30]
  407fd1:	lea    rcx,[rip+0x24068]        # 0x42c040
  407fd8:	mov    QWORD PTR [rax+0x10],rdx
  407fdc:	mov    rdx,QWORD PTR [rbx+0x38]
  407fe0:	mov    QWORD PTR [rax+0x18],rdx
  407fe4:	mov    rdx,QWORD PTR [rbx+0x40]
  407fe8:	mov    QWORD PTR [rax+0x20],rdx
  407fec:	mov    rdx,rax
  407fef:	call   0x41c170
  407ff4:	xor    eax,eax
  407ff6:	add    rsp,0x48
  407ffa:	pop    rbx
  407ffb:	pop    rsi
  407ffc:	pop    rdi
  407ffd:	pop    rbp
  407ffe:	ret    
  407fff:	nop
  408000:	lea    rcx,[rbx+0x30]
  408004:	call   0x40e4c0
  408009:	mov    rsi,rax
  40800c:	mov    rax,QWORD PTR [rbx]
  40800f:	lea    rcx,[rsp+0x30]
  408014:	mov    QWORD PTR [rsp+0x30],rax
  408019:	mov    eax,DWORD PTR [rbx+0x8]
  40801c:	mov    DWORD PTR [rsp+0x38],eax
  408020:	call   0x40e230
  408025:	lea    rcx,[rip+0x29744]        # 0x431770
  40802c:	mov    r8,rsi
  40802f:	mov    rdx,rax
  408032:	call   0x41d1b0
  408037:	mov    rcx,rsi
  40803a:	call   0x41a7c0
  40803f:	jmp    0x407fa8
  408044:	mov    ecx,0x28
  408049:	call   0x41a6e0
  40804e:	mov    rdx,QWORD PTR [rbx]
  408051:	mov    QWORD PTR [rax+0x4],rdx
  408055:	mov    edx,DWORD PTR [rbx+0x8]
  408058:	mov    DWORD PTR [rax+0xc],edx
  40805b:	jmp    0x407fcd
  408060:	lea    rax,[rip+0x29761]        # 0x4317c8
  408067:	lea    r9,[rip+0x2af12]        # 0x432f80
  40806e:	lea    r8,[rip+0x2972b]        # 0x4317a0
  408075:	lea    rcx,[rip+0x2973f]        # 0x4317bb
  40807c:	mov    edx,0xc20
  408081:	mov    QWORD PTR [rsp+0x20],rax
  408086:	call   0x41d170
  40808b:	nop
  40808c:	nop    DWORD PTR [rax+0x0]
  408090:	push   rbp
  408091:	push   rdi
  408092:	push   rsi
  408093:	push   rbx
  408094:	sub    rsp,0x48
  408098:	mov    r9,QWORD PTR [rip+0x3e3c1]        # 0x446460
  40809f:	mov    rbx,rcx
  4080a2:	mov    rdi,rdx
  4080a5:	mov    esi,r8d
  4080a8:	mov    ecx,DWORD PTR [r9]
  4080ab:	test   ecx,ecx
  4080ad:	js     0x4080e7
  4080af:	lea    rax,[rsp+0x38]
  4080b4:	movsxd rbp,r8d
  4080b7:	mov    r8,rdx
  4080ba:	mov    r9,rbp
  4080bd:	mov    rdx,rbx
  4080c0:	mov    QWORD PTR [rsp+0x20],rax
  4080c5:	call   0x419990
  4080ca:	test   eax,eax
  4080cc:	jne    0x408103
  4080ce:	mov    rax,QWORD PTR [rsp+0x38]
  4080d3:	test   rax,rax
  4080d6:	jne    0x408108
  4080d8:	mov    rdx,rbp
  4080db:	mov    rcx,rbx
  4080de:	call   0x414fe0
  4080e3:	test   eax,eax
  4080e5:	je     0x408103
  4080e7:	call   0x40de20
  4080ec:	test   eax,eax
  4080ee:	jne    0x408103
  4080f0:	mov    ecx,0x1
  4080f5:	call   0x40dd70
  4080fa:	test   eax,eax
  4080fc:	jne    0x408111
  4080fe:	call   0x40ddc0
  408103:	mov    eax,0xffffffff
  408108:	add    rsp,0x48
  40810c:	pop    rbx
  40810d:	pop    rsi
  40810e:	pop    rdi
  40810f:	pop    rbp
  408110:	ret    
  408111:	mov    rcx,rbx
  408114:	mov    r8d,esi
  408117:	mov    rdx,rdi
  40811a:	call   0x40def0
  40811f:	mov    ebx,eax
  408121:	call   0x40ddc0
  408126:	test   ebx,ebx
  408128:	jne    0x408103
  40812a:	mov    eax,esi
  40812c:	jmp    0x408108
  40812e:	xchg   ax,ax
  408130:	push   rdi
  408131:	push   rsi
  408132:	push   rbx
  408133:	sub    rsp,0x30
  408137:	mov    rbx,rcx
  40813a:	mov    rsi,rdx
  40813d:	mov    edi,r8d
  408140:	call   0x40de20
  408145:	test   eax,eax
  408147:	je     0x408151
  408149:	add    rsp,0x30
  40814d:	pop    rbx
  40814e:	pop    rsi
  40814f:	pop    rdi
  408150:	ret    
  408151:	mov    ecx,0x1
  408156:	call   0x40dd70
  40815b:	mov    edx,eax
  40815d:	mov    eax,0x5
  408162:	test   edx,edx
  408164:	jne    0x408180
  408166:	mov    DWORD PTR [rsp+0x2c],eax
  40816a:	call   0x40ddc0
  40816f:	mov    eax,DWORD PTR [rsp+0x2c]
  408173:	add    rsp,0x30
  408177:	pop    rbx
  408178:	pop    rsi
  408179:	pop    rdi
  40817a:	ret    
  40817b:	nop    DWORD PTR [rax+rax*1+0x0]
  408180:	mov    r8d,edi
  408183:	mov    rdx,rsi
  408186:	mov    rcx,rbx
  408189:	call   0x40df50
  40818e:	jmp    0x408166
  408190:	push   rbx
  408191:	sub    rsp,0x20
  408195:	mov    rbx,rcx
  408198:	mov    ecx,0x28
  40819d:	call   0x41a6e0
  4081a2:	mov    rdx,QWORD PTR [rip+0x45787]        # 0x44d930
  4081a9:	lea    rcx,[rip+0x23e90]        # 0x42c040
  4081b0:	mov    QWORD PTR [rax+0x10],rdx
  4081b4:	mov    rdx,QWORD PTR [rip+0x4577d]        # 0x44d938
  4081bb:	mov    QWORD PTR [rax+0x18],rdx
  4081bf:	mov    rdx,QWORD PTR [rip+0x4577a]        # 0x44d940
  4081c6:	mov    QWORD PTR [rax+0x20],rdx
  4081ca:	mov    rdx,QWORD PTR [rbx]
  4081cd:	mov    QWORD PTR [rax+0x4],rdx
  4081d1:	mov    edx,DWORD PTR [rbx+0x8]
  4081d4:	mov    DWORD PTR [rax+0xc],edx
  4081d7:	mov    rdx,rax
  4081da:	add    rsp,0x20
  4081de:	pop    rbx
  4081df:	jmp    0x41c1e0
  4081e4:	xchg   ax,ax
  4081e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081f0:	push   rdi
  4081f1:	push   rsi
  4081f2:	push   rbx
  4081f3:	sub    rsp,0x60
  4081f7:	mov    rax,QWORD PTR [rip+0x3e462]        # 0x446660
  4081fe:	mov    ebx,ecx
  408200:	mov    rax,QWORD PTR [rax]
  408203:	call   QWORD PTR [rax+0x10]
  408206:	test   eax,eax
  408208:	mov    esi,eax
  40820a:	jne    0x408305
  408210:	mov    rdi,QWORD PTR [rip+0x49539]        # 0x451750
  408217:	call   rdi
  408219:	lea    rdx,[rip+0x295db]        # 0x4317fb
  408220:	lea    rcx,[rax+0x60]
  408224:	mov    r8d,ebx
  408227:	call   0x42aa80
  40822c:	call   rdi
  40822e:	lea    rcx,[rax+0x60]
  408232:	call   0x42a6f0
  408237:	mov    eax,DWORD PTR [rip+0x4562b]        # 0x44d868
  40823d:	mov    DWORD PTR [rip+0x45115],ebx        # 0x44d358
  408243:	test   eax,eax
  408245:	je     0x408251
  408247:	mov    eax,esi
  408249:	add    rsp,0x60
  40824d:	pop    rbx
  40824e:	pop    rsi
  40824f:	pop    rdi
  408250:	ret    
  408251:	lea    rcx,[rsp+0x50]
  408256:	mov    edx,ebx
  408258:	call   0x41ad00
  40825d:	mov    rax,QWORD PTR [rsp+0x50]
  408262:	lea    rcx,[rsp+0x40]
  408267:	lea    rdx,[rsp+0x30]
  40826c:	lea    r8,[rip+0x456bd]        # 0x44d930
  408273:	xor    r9d,r9d
  408276:	mov    DWORD PTR [rsp+0x20],0x0
  40827e:	mov    QWORD PTR [rsp+0x30],rax
  408283:	mov    eax,DWORD PTR [rsp+0x58]
  408287:	mov    DWORD PTR [rsp+0x38],eax
  40828b:	call   0x40dff0
  408290:	mov    rax,QWORD PTR [rsp+0x40]
  408295:	cmp    DWORD PTR [rip+0x45694],0x1        # 0x44d930
  40829c:	mov    QWORD PTR [rip+0x45675],rax        # 0x44d918
  4082a3:	mov    eax,DWORD PTR [rsp+0x48]
  4082a7:	mov    DWORD PTR [rip+0x45673],eax        # 0x44d920
  4082ad:	je     0x4082f0
  4082af:	mov    rax,QWORD PTR [rip+0x3e19a]        # 0x446450
  4082b6:	mov    rdx,QWORD PTR [rip+0x45673]        # 0x44d930
  4082bd:	xor    esi,esi
  4082bf:	mov    rax,QWORD PTR [rax]
  4082c2:	mov    QWORD PTR [rax+0x30],rdx
  4082c6:	mov    rdx,QWORD PTR [rip+0x4566b]        # 0x44d938
  4082cd:	mov    DWORD PTR [rax+0x28],0x2
  4082d4:	mov    QWORD PTR [rax+0x38],rdx
  4082d8:	mov    rdx,QWORD PTR [rip+0x45661]        # 0x44d940
  4082df:	mov    QWORD PTR [rax+0x40],rdx
  4082e3:	mov    eax,esi
  4082e5:	add    rsp,0x60
  4082e9:	pop    rbx
  4082ea:	pop    rsi
  4082eb:	pop    rdi
  4082ec:	ret    
  4082ed:	nop    DWORD PTR [rax]
  4082f0:	cmp    DWORD PTR [rip+0x45641],0x11        # 0x44d938
  4082f7:	jne    0x4082af
  4082f9:	mov    DWORD PTR [rip+0x45635],0x5        # 0x44d938
  408303:	jmp    0x4082af
  408305:	mov    esi,0xffffffff
  40830a:	jmp    0x408247
  40830f:	nop
  408310:	push   rbp
  408311:	push   r14
  408313:	push   r13
  408315:	push   r12
  408317:	push   rdi
  408318:	push   rsi
  408319:	push   rbx
  40831a:	mov    rbp,rsp
  40831d:	sub    rsp,0xa0
  408324:	mov    r10,QWORD PTR [rip+0x4561d]        # 0x44d948
  40832b:	mov    rbx,rcx
  40832e:	test   r10,r10
  408331:	je     0x4086d0
  408337:	mov    r9,QWORD PTR [r10]
  40833a:	test   r9,r9
  40833d:	je     0x408558
  408343:	lea    rdx,[r10+0x8]
  408347:	mov    eax,0x1
  40834c:	nop    DWORD PTR [rax+0x0]
  408350:	add    rdx,0x8
  408354:	add    eax,0x1
  408357:	cmp    QWORD PTR [rdx-0x8],0x0
  40835c:	jne    0x408350
  40835e:	mov    rcx,QWORD PTR [rbx]
  408361:	test   rcx,rcx
  408364:	je     0x40871c
  40836a:	lea    rdx,[rbx+0x8]
  40836e:	xchg   ax,ax
  408370:	add    rdx,0x8
  408374:	add    eax,0x1
  408377:	cmp    QWORD PTR [rdx-0x8],0x0
  40837c:	jne    0x408370
  40837e:	cdqe   
  408380:	lea    rax,[rax*8+0x1e]
  408388:	and    rax,0xfffffffffffffff0
  40838c:	call   0x425730
  408391:	xor    r8d,r8d
  408394:	sub    rsp,rax
  408397:	test   r9,r9
  40839a:	lea    rdi,[rsp+0x30]
  40839f:	je     0x4083c4
  4083a1:	xor    eax,eax
  4083a3:	mov    QWORD PTR [rdi+rax*8],r9
  4083a7:	lea    r8d,[rax+0x1]
  4083ab:	add    rax,0x1
  4083af:	mov    r9,QWORD PTR [r10+rax*8]
  4083b3:	test   r9,r9
  4083b6:	jne    0x4083a3
  4083b8:	movsxd rax,r8d
  4083bb:	shl    rax,0x3
  4083bf:	test   rcx,rcx
  4083c2:	je     0x4083f0
  4083c4:	movsxd rax,r8d
  4083c7:	lea    rdx,[rdi+rax*8]
  4083cb:	xor    eax,eax
  4083cd:	nop    DWORD PTR [rax]
  4083d0:	mov    QWORD PTR [rdx+rax*1],rcx
  4083d4:	add    rax,0x8
  4083d8:	add    r8d,0x1
  4083dc:	mov    rcx,QWORD PTR [rbx+rax*1]
  4083e0:	test   rcx,rcx
  4083e3:	jne    0x4083d0
  4083e5:	movsxd r8,r8d
  4083e8:	lea    rax,[r8*8+0x0]
  4083f0:	mov    QWORD PTR [rdi+rax*1],0x0
  4083f8:	mov    rax,QWORD PTR [rip+0x3e071]        # 0x446470
  4083ff:	mov    eax,DWORD PTR [rax]
  408401:	test   eax,eax
  408403:	je     0x408430
  408405:	mov    r8,QWORD PTR [rdi]
  408408:	xor    esi,esi
  40840a:	test   r8,r8
  40840d:	je     0x40842b
  40840f:	nop
  408410:	lea    rcx,[rip+0x293f8]        # 0x43180f
  408417:	mov    edx,esi
  408419:	add    rsi,0x1
  40841d:	call   0x41d1b0
  408422:	mov    r8,QWORD PTR [rdi+rsi*8]
  408426:	test   r8,r8
  408429:	jne    0x408410
  40842b:	call   0x40ea10
  408430:	mov    rsi,QWORD PTR [rip+0x3e229]        # 0x446660
  408437:	mov    rdx,rdi
  40843a:	mov    rcx,QWORD PTR [rdi]
  40843d:	mov    rax,QWORD PTR [rsi]
  408440:	call   QWORD PTR [rax]
  408442:	mov    r12,QWORD PTR [rbx]
  408445:	mov    edi,eax
  408447:	mov    rbx,QWORD PTR [rip+0x49302]        # 0x451750
  40844e:	mov    DWORD PTR [rip+0x44f04],eax        # 0x44d358
  408454:	call   rbx
  408456:	lea    rdx,[rip+0x293cb]        # 0x431828
  40845d:	lea    rcx,[rax+0x60]
  408461:	mov    r9d,edi
  408464:	mov    r8,r12
  408467:	call   0x42aa80
  40846c:	call   rbx
  40846e:	lea    rcx,[rax+0x60]
  408472:	call   0x42a6f0
  408477:	cmp    QWORD PTR [rip+0x454c9],0x0        # 0x44d948
  40847f:	je     0x408622
  408485:	lea    rbx,[rbp-0x60]
  408489:	mov    edx,DWORD PTR [rip+0x44ec9]        # 0x44d358
  40848f:	mov    QWORD PTR [rbp-0x30],0x0
  408497:	mov    QWORD PTR [rbp-0x28],0x0
  40849f:	mov    QWORD PTR [rbp-0x20],0x0
  4084a7:	lea    rdi,[rbp-0x70]
  4084ab:	mov    rcx,rbx
  4084ae:	mov    QWORD PTR [rbp-0x18],0x0
  4084b6:	mov    QWORD PTR [rbp-0x10],0x0
  4084be:	call   0x41ad00
  4084c3:	mov    rax,QWORD PTR [rbp-0x60]
  4084c7:	mov    edx,DWORD PTR [rip+0x44e8b]        # 0x44d358
  4084cd:	lea    rcx,[rbp-0x50]
  4084d1:	mov    DWORD PTR [rbp-0x24],0x0
  4084d8:	mov    DWORD PTR [rbp-0x20],0x0
  4084df:	mov    QWORD PTR [rbp-0x30],rax
  4084e3:	mov    eax,DWORD PTR [rbp-0x58]
  4084e6:	mov    DWORD PTR [rbp-0x28],eax
  4084e9:	call   0x41ad00
  4084ee:	mov    rax,QWORD PTR [rbp-0x50]
  4084f2:	lea    r8,[rip+0x45437]        # 0x44d930
  4084f9:	xor    r9d,r9d
  4084fc:	mov    DWORD PTR [rsp+0x20],0x0
  408504:	mov    rdx,rdi
  408507:	mov    rcx,rbx
  40850a:	mov    QWORD PTR [rbp-0x70],rax
  40850e:	mov    eax,DWORD PTR [rbp-0x48]
  408511:	mov    DWORD PTR [rbp-0x68],eax
  408514:	call   0x40dff0
  408519:	mov    rax,QWORD PTR [rbp-0x60]
  40851d:	cmp    DWORD PTR [rip+0x4540c],0x1        # 0x44d930
  408524:	mov    QWORD PTR [rip+0x453ed],rax        # 0x44d918
  40852b:	mov    eax,DWORD PTR [rbp-0x58]
  40852e:	mov    DWORD PTR [rip+0x453ec],eax        # 0x44d920
  408534:	je     0x408570
  408536:	mov    rax,QWORD PTR [rsi]
  408539:	mov    rax,QWORD PTR [rax+0x8]
  40853d:	test   rax,rax
  408540:	je     0x408544
  408542:	call   rax
  408544:	mov    eax,DWORD PTR [rip+0x44e0e]        # 0x44d358
  40854a:	mov    rsp,rbp
  40854d:	pop    rbx
  40854e:	pop    rsi
  40854f:	pop    rdi
  408550:	pop    r12
  408552:	pop    r13
  408554:	pop    r14
  408556:	pop    rbp
  408557:	ret    
  408558:	mov    rcx,QWORD PTR [rcx]
  40855b:	test   rcx,rcx
  40855e:	je     0x4086d8
  408564:	mov    eax,0x1
  408569:	jmp    0x40836a
  40856e:	xchg   ax,ax
  408570:	lea    r13,[rbp-0x30]
  408574:	lea    r12,[rbp-0x40]
  408578:	mov    r14,QWORD PTR [rip+0x3ded1]        # 0x446450
  40857f:	jmp    0x4085b5
  408581:	mov    rax,QWORD PTR [r14]
  408584:	mov    rdx,QWORD PTR [rip+0x453a5]        # 0x44d930
  40858b:	cmp    DWORD PTR [rip+0x453a6],0x5        # 0x44d938
  408592:	mov    QWORD PTR [rax+0x30],rdx
  408596:	mov    rdx,QWORD PTR [rip+0x4539b]        # 0x44d938
  40859d:	mov    DWORD PTR [rax+0x28],0x2
  4085a4:	mov    QWORD PTR [rax+0x38],rdx
  4085a8:	mov    rdx,QWORD PTR [rip+0x45391]        # 0x44d940
  4085af:	mov    QWORD PTR [rax+0x40],rdx
  4085b3:	je     0x408536
  4085b5:	mov    rax,QWORD PTR [rsi]
  4085b8:	mov    edx,0x1
  4085bd:	mov    rcx,r13
  4085c0:	call   QWORD PTR [rax+0x40]
  4085c3:	mov    edx,DWORD PTR [rip+0x44d8f]        # 0x44d358
  4085c9:	mov    rcx,r12
  4085cc:	call   0x41ad00
  4085d1:	mov    rax,QWORD PTR [rbp-0x40]
  4085d5:	lea    r8,[rip+0x45354]        # 0x44d930
  4085dc:	xor    r9d,r9d
  4085df:	mov    DWORD PTR [rsp+0x20],0x0
  4085e7:	mov    rdx,rdi
  4085ea:	mov    rcx,rbx
  4085ed:	mov    QWORD PTR [rbp-0x70],rax
  4085f1:	mov    eax,DWORD PTR [rbp-0x38]
  4085f4:	mov    DWORD PTR [rbp-0x68],eax
  4085f7:	call   0x40dff0
  4085fc:	mov    rax,QWORD PTR [rbp-0x60]
  408600:	cmp    DWORD PTR [rip+0x45329],0x1        # 0x44d930
  408607:	mov    QWORD PTR [rip+0x4530a],rax        # 0x44d918
  40860e:	mov    eax,DWORD PTR [rbp-0x58]
  408611:	mov    DWORD PTR [rip+0x45309],eax        # 0x44d920
  408617:	je     0x408581
  40861d:	jmp    0x408536
  408622:	mov    edx,DWORD PTR [rip+0x44d30]        # 0x44d358
  408628:	lea    rcx,[rbp-0x30]
  40862c:	lea    rbx,[rbp-0x60]
  408630:	call   0x41ad00
  408635:	mov    rax,QWORD PTR [rbp-0x30]
  408639:	lea    rdx,[rbp-0x70]
  40863d:	lea    r8,[rip+0x452ec]        # 0x44d930
  408644:	xor    r9d,r9d
  408647:	mov    DWORD PTR [rsp+0x20],0x0
  40864f:	mov    rcx,rbx
  408652:	mov    QWORD PTR [rbp-0x70],rax
  408656:	mov    eax,DWORD PTR [rbp-0x28]
  408659:	mov    DWORD PTR [rbp-0x68],eax
  40865c:	call   0x40dff0
  408661:	mov    rax,QWORD PTR [rbp-0x60]
  408665:	mov    QWORD PTR [rip+0x452ac],rax        # 0x44d918
  40866c:	mov    eax,DWORD PTR [rbp-0x58]
  40866f:	mov    DWORD PTR [rip+0x452ab],eax        # 0x44d920
  408675:	mov    rax,QWORD PTR [rsi]
  408678:	mov    rax,QWORD PTR [rax+0x8]
  40867c:	test   rax,rax
  40867f:	je     0x408683
  408681:	call   rax
  408683:	test   DWORD PTR [rip+0x452a3],0xfffffffd        # 0x44d930
  40868d:	je     0x4086e8
  40868f:	mov    rax,QWORD PTR [rip+0x3ddba]        # 0x446450
  408696:	mov    rdx,QWORD PTR [rip+0x45293]        # 0x44d930
  40869d:	mov    rax,QWORD PTR [rax]
  4086a0:	mov    QWORD PTR [rax+0x30],rdx
  4086a4:	mov    rdx,QWORD PTR [rip+0x4528d]        # 0x44d938
  4086ab:	mov    DWORD PTR [rax+0x28],0x2
  4086b2:	mov    QWORD PTR [rax+0x38],rdx
  4086b6:	mov    rdx,QWORD PTR [rip+0x45283]        # 0x44d940
  4086bd:	mov    QWORD PTR [rax+0x40],rdx
  4086c1:	jmp    0x408544
  4086c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086d0:	mov    rdi,rcx
  4086d3:	jmp    0x4083f8
  4086d8:	sub    rsp,0x20
  4086dc:	xor    eax,eax
  4086de:	lea    rdi,[rsp+0x30]
  4086e3:	jmp    0x4083f0
  4086e8:	mov    rax,QWORD PTR [rsi]
  4086eb:	mov    rcx,rbx
  4086ee:	mov    rsi,QWORD PTR [rax+0x28]
  4086f2:	mov    rax,QWORD PTR [rip+0x4521f]        # 0x44d918
  4086f9:	mov    QWORD PTR [rbp-0x60],rax
  4086fd:	mov    eax,DWORD PTR [rip+0x4521d]        # 0x44d920
  408703:	mov    DWORD PTR [rbp-0x58],eax
  408706:	call   0x41ad20
  40870b:	mov    ecx,eax
  40870d:	call   0x403f00
  408712:	mov    rcx,rax
  408715:	call   rsi
  408717:	jmp    0x408544
  40871c:	cdqe   
  40871e:	lea    rax,[rax*8+0x1e]
  408726:	and    rax,0xfffffffffffffff0
  40872a:	call   0x425730
  40872f:	sub    rsp,rax
  408732:	lea    rdi,[rsp+0x30]
  408737:	jmp    0x4083a1
  40873c:	nop    DWORD PTR [rax+0x0]
  408740:	push   rbx
  408741:	sub    rsp,0x30
  408745:	mov    eax,DWORD PTR [rcx+0x18]
  408748:	test   eax,eax
  40874a:	jne    0x408752
  40874c:	add    rsp,0x30
  408750:	pop    rbx
  408751:	ret    
  408752:	mov    rax,QWORD PTR [rcx]
  408755:	mov    QWORD PTR [rsp+0x20],rax
  40875a:	mov    eax,DWORD PTR [rcx+0x8]
  40875d:	lea    rcx,[rsp+0x20]
  408762:	mov    DWORD PTR [rsp+0x28],eax
  408766:	call   0x41ad20
  40876b:	mov    ebx,eax
  40876d:	call   QWORD PTR [rip+0x48fdd]        # 0x451750
  408773:	lea    rdx,[rip+0x290cd]        # 0x431847
  40877a:	lea    rcx,[rax+0x60]
  40877e:	mov    r8d,ebx
  408781:	add    rsp,0x30
  408785:	pop    rbx
  408786:	jmp    0x42aa80
  40878b:	nop    DWORD PTR [rax+rax*1+0x0]
  408790:	push   rbx
  408791:	sub    rsp,0x30
  408795:	mov    eax,DWORD PTR [rcx+0x18]
  408798:	test   eax,eax
  40879a:	je     0x4087a2
  40879c:	add    rsp,0x30
  4087a0:	pop    rbx
  4087a1:	ret    
  4087a2:	mov    rax,QWORD PTR [rcx]
  4087a5:	mov    QWORD PTR [rsp+0x20],rax
  4087aa:	mov    eax,DWORD PTR [rcx+0x8]
  4087ad:	lea    rcx,[rsp+0x20]
  4087b2:	mov    DWORD PTR [rsp+0x28],eax
  4087b6:	call   0x41ad20
  4087bb:	mov    ebx,eax
  4087bd:	call   QWORD PTR [rip+0x48f8d]        # 0x451750
  4087c3:	lea    rdx,[rip+0x2907d]        # 0x431847
  4087ca:	lea    rcx,[rax+0x60]
  4087ce:	mov    r8d,ebx
  4087d1:	add    rsp,0x30
  4087d5:	pop    rbx
  4087d6:	jmp    0x42aa80
  4087db:	nop    DWORD PTR [rax+rax*1+0x0]
  4087e0:	push   rbx
  4087e1:	sub    rsp,0x20
  4087e5:	lea    rdx,[rip+0x29064]        # 0x431850
  4087ec:	mov    rbx,rcx
  4087ef:	call   0x42aa80
  4087f4:	call   QWORD PTR [rip+0x48f56]        # 0x451750
  4087fa:	lea    rcx,[rax+0x30]
  4087fe:	cmp    rcx,rbx
  408801:	je     0x408809
  408803:	add    rsp,0x20
  408807:	pop    rbx
  408808:	ret    
  408809:	lea    r8,[rip+0x29790]        # 0x431fa0
  408810:	lea    rdx,[rip+0x297b1]        # 0x431fc8
  408817:	add    rsp,0x20
  40881b:	pop    rbx
  40881c:	jmp    0x42aa80
  408821:	nop    DWORD PTR [rax+rax*1+0x0]
  408826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408830:	push   rdi
  408831:	push   rsi
  408832:	push   rbx
  408833:	sub    rsp,0x20
  408837:	call   0x41d7f0
  40883c:	mov    rsi,rax
  40883f:	call   0x403f50
  408844:	test   eax,eax
  408846:	jne    0x4088b5
  408848:	call   0x403f90
  40884d:	test   eax,eax
  40884f:	jne    0x408875
  408851:	mov    rcx,QWORD PTR [rip+0x3dbb8]        # 0x446410
  408858:	lea    rdx,[rip+0x2911]        # 0x40b170
  40885f:	call   0x403900
  408864:	mov    rcx,rsi
  408867:	call   0x41d800
  40886c:	nop
  40886d:	add    rsp,0x20
  408871:	pop    rbx
  408872:	pop    rsi
  408873:	pop    rdi
  408874:	ret    
  408875:	mov    rbx,QWORD PTR [rip+0x48ed4]        # 0x451750
  40887c:	call   rbx
  40887e:	lea    rcx,[rax+0x60]
  408882:	lea    rdx,[rip+0x2976a]        # 0x431ff3
  408889:	call   0x42aa80
  40888e:	mov    rcx,QWORD PTR [rip+0x3db7b]        # 0x446410
  408895:	lea    rdx,[rip+0xfffffffffffffea4]        # 0x408740
  40889c:	call   0x403900
  4088a1:	call   rbx
  4088a3:	lea    rcx,[rax+0x60]
  4088a7:	lea    rdx,[rip+0x28db3]        # 0x431661
  4088ae:	call   0x42aa80
  4088b3:	jmp    0x408851
  4088b5:	mov    rbx,QWORD PTR [rip+0x48e94]        # 0x451750
  4088bc:	call   rbx
  4088be:	lea    rcx,[rax+0x60]
  4088c2:	lea    rdx,[rip+0x29715]        # 0x431fde
  4088c9:	call   0x42aa80
  4088ce:	mov    rcx,QWORD PTR [rip+0x3db3b]        # 0x446410
  4088d5:	lea    rdx,[rip+0xfffffffffffffeb4]        # 0x408790
  4088dc:	call   0x403900
  4088e1:	call   rbx
  4088e3:	lea    rcx,[rax+0x60]
  4088e7:	lea    rdx,[rip+0x28d73]        # 0x431661
  4088ee:	call   0x42aa80
  4088f3:	jmp    0x408848
  4088f8:	mov    rbx,rax
  4088fb:	mov    rdi,rdx
  4088fe:	mov    rcx,rsi
  408901:	call   0x41d800
  408906:	mov    rcx,rbx
  408909:	mov    rdx,rdi
  40890c:	sub    rdx,0x1
  408910:	jne    0x408970
  408912:	call   0x4241f0
  408917:	mov    rbx,QWORD PTR [rip+0x48e32]        # 0x451750
  40891e:	mov    rsi,rax
  408921:	call   rbx
  408923:	lea    rcx,[rax+0x30]
  408927:	call   0x42a6f0
  40892c:	mov    rsi,QWORD PTR [rsi+0x8]
  408930:	call   rbx
  408932:	lea    rcx,[rax+0x60]
  408936:	lea    rdx,[rip+0x296cd]        # 0x43200a
  40893d:	mov    r8,rsi
  408940:	call   0x42aa80
  408945:	mov    DWORD PTR [rip+0x44fb1],0x1        # 0x44d900
  40894f:	add    rsp,0x20
  408953:	pop    rbx
  408954:	pop    rsi
  408955:	pop    rdi
  408956:	jmp    0x4241e8
  40895b:	mov    rcx,rax
  40895e:	jmp    0x40890c
  408960:	mov    rbx,rax
  408963:	call   0x4241e8
  408968:	mov    rcx,rbx
  40896b:	call   0x425720
  408970:	call   0x4241f0
  408975:	call   0x41d820
  40897a:	nop
  40897b:	add    rsp,0x20
  40897f:	pop    rbx
  408980:	pop    rsi
  408981:	pop    rdi
  408982:	jmp    0x4241e8
  408987:	mov    rbx,rax
  40898a:	call   0x4241e8
  40898f:	mov    rcx,rbx
  408992:	call   0x425720
  408997:	nop
  408998:	nop    DWORD PTR [rax+rax*1+0x0]
  4089a0:	push   rdi
  4089a1:	push   rsi
  4089a2:	push   rbx
  4089a3:	sub    rsp,0x70
  4089a7:	mov    rbx,rcx
  4089aa:	mov    ecx,DWORD PTR [rip+0x44eb8]        # 0x44d868
  4089b0:	mov    rsi,rdx
  4089b3:	test   ecx,ecx
  4089b5:	jne    0x408a00
  4089b7:	mov    rcx,QWORD PTR [rip+0x3da62]        # 0x446420
  4089be:	mov    QWORD PTR [rsp+0x58],rdx
  4089c3:	lea    rax,[rip+0xffffffffffffed56]        # 0x407720
  4089ca:	lea    r8,[rsp+0x50]
  4089cf:	lea    rdx,[rip+0xffffffffffffe57a]        # 0x406f50
  4089d6:	mov    QWORD PTR [rsp+0x50],rbx
  4089db:	mov    QWORD PTR [rsp+0x60],rax
  4089e0:	call   0x403b90
  4089e5:	test   rax,rax
  4089e8:	je     0x4089f2
  4089ea:	add    rsp,0x70
  4089ee:	pop    rbx
  4089ef:	pop    rsi
  4089f0:	pop    rdi
  4089f1:	ret    
  4089f2:	call   0x4058f0
  4089f7:	nop    WORD PTR [rax+rax*1+0x0]
  408a00:	mov    rdi,QWORD PTR [rip+0x3dc59]        # 0x446660
  408a07:	mov    rdx,rsi
  408a0a:	mov    rcx,rbx
  408a0d:	mov    rax,QWORD PTR [rdi]
  408a10:	call   QWORD PTR [rax+0x40]
  408a13:	mov    edx,DWORD PTR [rip+0x44e4f]        # 0x44d868
  408a19:	test   edx,edx
  408a1b:	jne    0x408b40
  408a21:	mov    rax,QWORD PTR [rip+0x3db18]        # 0x446540
  408a28:	lea    rbx,[rsp+0x40]
  408a2d:	lea    r8,[rip+0x44efc]        # 0x44d930
  408a34:	xor    r9d,r9d
  408a37:	mov    rcx,rbx
  408a3a:	mov    rdx,QWORD PTR [rax]
  408a3d:	mov    QWORD PTR [rsp+0x30],rdx
  408a42:	mov    eax,DWORD PTR [rax+0x8]
  408a45:	lea    rdx,[rsp+0x30]
  408a4a:	mov    DWORD PTR [rsp+0x20],0x1
  408a52:	mov    DWORD PTR [rsp+0x38],eax
  408a56:	call   0x40dff0
  408a5b:	mov    rax,QWORD PTR [rsp+0x40]
  408a60:	mov    QWORD PTR [rip+0x44eb1],rax        # 0x44d918
  408a67:	mov    eax,DWORD PTR [rsp+0x48]
  408a6b:	mov    DWORD PTR [rip+0x44eaf],eax        # 0x44d920
  408a71:	mov    eax,DWORD PTR [rip+0x44eb9]        # 0x44d930
  408a77:	cmp    eax,0xd
  408a7a:	je     0x408b55
  408a80:	and    eax,0xfffffffd
  408a83:	je     0x408ab0
  408a85:	mov    rax,QWORD PTR [rip+0x3d9c4]        # 0x446450
  408a8c:	mov    rdx,QWORD PTR [rip+0x44e9d]        # 0x44d930
  408a93:	mov    rax,QWORD PTR [rax]
  408a96:	mov    QWORD PTR [rax+0x30],rdx
  408a9a:	mov    rdx,QWORD PTR [rip+0x44e97]        # 0x44d938
  408aa1:	mov    QWORD PTR [rax+0x38],rdx
  408aa5:	mov    rdx,QWORD PTR [rip+0x44e94]        # 0x44d940
  408aac:	mov    QWORD PTR [rax+0x40],rdx
  408ab0:	mov    rcx,QWORD PTR [rip+0x3d969]        # 0x446420
  408ab7:	lea    rdx,[rip+0xffffffffffffe392]        # 0x406e50
  408abe:	call   0x403900
  408ac3:	mov    rax,QWORD PTR [rip+0x44e4e]        # 0x44d918
  408aca:	mov    rcx,QWORD PTR [rip+0x4486f]        # 0x44d340
  408ad1:	lea    r8,[rip+0x44e58]        # 0x44d930
  408ad8:	mov    rdx,rbx
  408adb:	mov    QWORD PTR [rsp+0x40],rax
  408ae0:	mov    eax,DWORD PTR [rip+0x44e3a]        # 0x44d920
  408ae6:	mov    DWORD PTR [rsp+0x48],eax
  408aea:	call   0x405be0
  408aef:	call   0x405910
  408af4:	test   DWORD PTR [rip+0x44e32],0xfffffffd        # 0x44d930
  408afe:	jne    0x4089ea
  408b04:	mov    rax,QWORD PTR [rdi]
  408b07:	mov    rcx,rbx
  408b0a:	mov    rsi,QWORD PTR [rax+0x28]
  408b0e:	mov    rax,QWORD PTR [rip+0x44e03]        # 0x44d918
  408b15:	mov    QWORD PTR [rsp+0x40],rax
  408b1a:	mov    eax,DWORD PTR [rip+0x44e00]        # 0x44d920
  408b20:	mov    DWORD PTR [rsp+0x48],eax
  408b24:	call   0x41ad20
  408b29:	mov    ecx,eax
  408b2b:	call   0x403f00
  408b30:	mov    rcx,rax
  408b33:	call   rsi
  408b35:	nop
  408b36:	add    rsp,0x70
  408b3a:	pop    rbx
  408b3b:	pop    rsi
  408b3c:	pop    rdi
  408b3d:	ret    
  408b3e:	xchg   ax,ax
  408b40:	mov    rcx,QWORD PTR [rip+0x447f9]        # 0x44d340
  408b47:	call   0x405bc0
  408b4c:	nop
  408b4d:	add    rsp,0x70
  408b51:	pop    rbx
  408b52:	pop    rsi
  408b53:	pop    rdi
  408b54:	ret    
  408b55:	mov    eax,DWORD PTR [rip+0x44e01]        # 0x44d95c
  408b5b:	test   eax,eax
  408b5d:	jne    0x408ab0
  408b63:	mov    rcx,QWORD PTR [rip+0x447d6]        # 0x44d340
  408b6a:	lea    rdx,[rip+0x294b7]        # 0x432028
  408b71:	call   0x42aab0
  408b76:	call   0x405910
  408b7b:	jmp    0x4089ea
  408b80:	push   r12
  408b82:	push   rbp
  408b83:	push   rdi
  408b84:	push   rsi
  408b85:	push   rbx
  408b86:	sub    rsp,0x90
  408b8d:	mov    rax,QWORD PTR [rip+0x44d00]        # 0x44d894
  408b94:	mov    esi,edx
  408b96:	lea    r12,[rsp+0x20]
  408b9b:	lea    rbp,[rsp+0x30]
  408ba0:	mov    edi,ecx
  408ba2:	mov    QWORD PTR [rsp+0x30],rax
  408ba7:	mov    eax,DWORD PTR [rip+0x44cef]        # 0x44d89c
  408bad:	mov    rcx,rbp
  408bb0:	mov    DWORD PTR [rsp+0x38],eax
  408bb4:	mov    rax,QWORD PTR [rip+0x3d9d5]        # 0x446590
  408bbb:	mov    rdx,QWORD PTR [rax]
  408bbe:	mov    QWORD PTR [rsp+0x20],rdx
  408bc3:	mov    eax,DWORD PTR [rax+0x8]
  408bc6:	mov    rdx,r12
  408bc9:	mov    DWORD PTR [rsp+0x28],eax
  408bcd:	call   0x41ad50
  408bd2:	test   eax,eax
  408bd4:	je     0x408c90
  408bda:	mov    eax,edi
  408bdc:	or     eax,esi
  408bde:	je     0x408c22
  408be0:	xor    edx,edx
  408be2:	mov    rax,QWORD PTR [rip+0x3d867]        # 0x446450
  408be9:	mov    rax,QWORD PTR [rax]
  408bec:	mov    rcx,QWORD PTR [rax]
  408bef:	mov    eax,DWORD PTR [rax+0x8]
  408bf2:	mov    DWORD PTR [rsp+0x50],esi
  408bf6:	mov    DWORD PTR [rsp+0x48],eax
  408bfa:	xor    eax,eax
  408bfc:	test   edi,edi
  408bfe:	setne  al
  408c01:	test   dl,dl
  408c03:	mov    QWORD PTR [rsp+0x40],rcx
  408c08:	mov    DWORD PTR [rsp+0x4c],eax
  408c0c:	jne    0x408c80
  408c0e:	mov    rbx,QWORD PTR [rip+0x3d92b]        # 0x446540
  408c15:	mov    eax,0x1
  408c1a:	lea    edx,[rax+0x1]
  408c1d:	movsxd rdx,edx
  408c20:	jmp    0x408c30
  408c22:	mov    rbx,QWORD PTR [rip+0x3d917]        # 0x446540
  408c29:	mov    edx,0x1
  408c2e:	xor    eax,eax
  408c30:	lea    rcx,[rax*4+0x0]
  408c38:	add    rax,rcx
  408c3b:	mov    rcx,QWORD PTR [rbx]
  408c3e:	shl    rax,0x3
  408c42:	mov    DWORD PTR [rsp+rax*1+0x4c],0x0
  408c4a:	mov    DWORD PTR [rsp+rax*1+0x50],0x0
  408c52:	mov    QWORD PTR [rsp+rax*1+0x40],rcx
  408c57:	mov    ecx,DWORD PTR [rbx+0x8]
  408c5a:	mov    DWORD PTR [rsp+rax*1+0x48],ecx
  408c5e:	lea    rcx,[rsp+0x40]
  408c63:	call   0x4089a0
  408c68:	nop
  408c69:	add    rsp,0x90
  408c70:	pop    rbx
  408c71:	pop    rsi
  408c72:	pop    rdi
  408c73:	pop    rbp
  408c74:	pop    r12
  408c76:	ret    
  408c77:	nop    WORD PTR [rax+rax*1+0x0]
  408c80:	mov    edx,0x1
  408c85:	jmp    0x408c5e
  408c87:	nop    WORD PTR [rax+rax*1+0x0]
  408c90:	mov    rax,QWORD PTR [rip+0x44bfd]        # 0x44d894
  408c97:	mov    rbx,QWORD PTR [rip+0x3d8a2]        # 0x446540
  408c9e:	mov    rdx,r12
  408ca1:	mov    rcx,rbp
  408ca4:	mov    QWORD PTR [rsp+0x30],rax
  408ca9:	mov    eax,DWORD PTR [rip+0x44bed]        # 0x44d89c
  408caf:	mov    DWORD PTR [rsp+0x38],eax
  408cb3:	mov    rax,QWORD PTR [rbx]
  408cb6:	mov    QWORD PTR [rsp+0x20],rax
  408cbb:	mov    eax,DWORD PTR [rbx+0x8]
  408cbe:	mov    DWORD PTR [rsp+0x28],eax
  408cc2:	call   0x41ad50
  408cc7:	test   eax,eax
  408cc9:	mov    ecx,edi
  408ccb:	sete   dl
  408cce:	or     ecx,esi
  408cd0:	movzx  eax,dl
  408cd3:	or     ecx,eax
  408cd5:	jne    0x408be2
  408cdb:	xor    eax,eax
  408cdd:	jmp    0x408c1a
  408ce2:	nop    DWORD PTR [rax+0x0]
  408ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cf0:	push   r15
  408cf2:	push   r14
  408cf4:	push   r13
  408cf6:	push   r12
  408cf8:	push   rbp
  408cf9:	push   rdi
  408cfa:	push   rsi
  408cfb:	push   rbx
  408cfc:	sub    rsp,0xa8
  408d03:	lea    rsi,[rip+0x29343]        # 0x43204d
  408d0a:	mov    rbx,rcx
  408d0d:	mov    ecx,0x3
  408d12:	mov    r15d,edx
  408d15:	mov    rdi,rbx
  408d18:	mov    r12,r8
  408d1b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408d1d:	jne    0x408d2f
  408d1f:	mov    r10d,DWORD PTR [rip+0x44626]        # 0x44d34c
  408d26:	test   r10d,r10d
  408d29:	je     0x408f20
  408d2f:	lea    rsi,[rip+0x2931d]        # 0x432053
  408d36:	mov    ecx,0xa
  408d3b:	mov    rdi,rbx
  408d3e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408d40:	jne    0x408dc0
  408d42:	mov    rsi,QWORD PTR [rip+0x3d707]        # 0x446450
  408d49:	mov    rdi,QWORD PTR [rsi]
  408d4c:	test   rdi,rdi
  408d4f:	je     0x409394
  408d55:	call   0x410b70
  408d5a:	mov    rbp,QWORD PTR [rip+0x3d8ff]        # 0x446660
  408d61:	mov    rax,QWORD PTR [rbp+0x0]
  408d65:	mov    rax,QWORD PTR [rax+0x178]
  408d6c:	test   rax,rax
  408d6f:	je     0x408d7b
  408d71:	call   rax
  408d73:	test   eax,eax
  408d75:	jne    0x408f10
  408d7b:	cmp    QWORD PTR [rsi],0x0
  408d7f:	je     0x408d93
  408d81:	mov    rax,QWORD PTR [rbp+0x0]
  408d85:	mov    rax,QWORD PTR [rax+0x80]
  408d8c:	test   rax,rax
  408d8f:	je     0x408d93
  408d91:	call   rax
  408d93:	mov    r9d,0x4b4f
  408d99:	mov    QWORD PTR [rsi],rdi
  408d9c:	mov    BYTE PTR [rbx+0x2],0x0
  408da0:	mov    WORD PTR [rbx],r9w
  408da4:	add    rsp,0xa8
  408dab:	pop    rbx
  408dac:	pop    rsi
  408dad:	pop    rdi
  408dae:	pop    rbp
  408daf:	pop    r12
  408db1:	pop    r13
  408db3:	pop    r14
  408db5:	pop    r15
  408db7:	ret    
  408db8:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	mov    r8d,DWORD PTR [rip+0x44581]        # 0x44d348
  408dc7:	test   r8d,r8d
  408dca:	jne    0x408dfa
  408dcc:	lea    rsi,[rip+0x2928a]        # 0x43205d
  408dd3:	mov    ecx,0xd
  408dd8:	mov    rdi,rbx
  408ddb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408ddd:	je     0x409170
  408de3:	lea    rsi,[rip+0x29280]        # 0x43206a
  408dea:	mov    ecx,0xd
  408def:	mov    rdi,rbx
  408df2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408df4:	je     0x4093e0
  408dfa:	mov    rbp,QWORD PTR [rip+0x3d85f]        # 0x446660
  408e01:	mov    rax,QWORD PTR [rbp+0x0]
  408e05:	cmp    QWORD PTR [rax+0xe8],0x0
  408e0d:	je     0x408e26
  408e0f:	lea    rsi,[rip+0x29263]        # 0x432079
  408e16:	mov    ecx,0x9
  408e1b:	mov    rdi,rbx
  408e1e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408e20:	je     0x409113
  408e26:	lea    rdi,[rip+0x2926f]        # 0x43209c
  408e2d:	mov    ecx,0xa
  408e32:	mov    rsi,rbx
  408e35:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408e37:	je     0x408fd2
  408e3d:	cmp    QWORD PTR [rax+0xf0],0x0
  408e45:	je     0x409200
  408e4b:	lea    rdi,[rip+0x29303]        # 0x432155
  408e52:	mov    ecx,0xc
  408e57:	mov    rsi,rbx
  408e5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408e5c:	jne    0x409200
  408e62:	mov    rax,QWORD PTR [rip+0x3d727]        # 0x446590
  408e69:	mov    QWORD PTR [rsp+0x78],0x0
  408e72:	mov    rdx,QWORD PTR [rax]
  408e75:	mov    eax,DWORD PTR [rax+0x8]
  408e78:	mov    QWORD PTR [rsp+0x80],rdx
  408e80:	mov    DWORD PTR [rsp+0x88],eax
  408e87:	call   0x403a80
  408e8c:	test   rax,rax
  408e8f:	je     0x4091e5
  408e95:	mov    r14,rbx
  408e98:	add    r14,0xc
  408e9c:	je     0x4091e5
  408ea2:	lea    rax,[rsp+0x80]
  408eaa:	lea    rdi,[rsp+0x88]
  408eb2:	mov    esi,0x1
  408eb7:	mov    QWORD PTR [rsp+0x30],rax
  408ebc:	mov    edx,0x2c
  408ec1:	mov    rcx,r14
  408ec4:	call   0x42a630
  408ec9:	test   rax,rax
  408ecc:	je     0x40a340
  408ed2:	mov    r8d,eax
  408ed5:	lea    r13,[rax+0x1]
  408ed9:	sub    r8d,r14d
  408edc:	cmp    esi,0x1
  408edf:	je     0x40aabc
  408ee5:	mov    rdx,r14
  408ee8:	mov    rcx,rdi
  408eeb:	call   0x405610
  408ef0:	cmp    esi,0x3
  408ef3:	je     0x409fb3
  408ef9:	add    esi,0x1
  408efc:	add    rdi,0x8
  408f00:	test   r13,r13
  408f03:	je     0x4091e5
  408f09:	mov    r14,r13
  408f0c:	jmp    0x408ebc
  408f0e:	xchg   ax,ax
  408f10:	call   0x414df0
  408f15:	jmp    0x408d7b
  408f1a:	nop    WORD PTR [rax+rax*1+0x0]
  408f20:	call   0x403a80
  408f25:	test   rax,rax
  408f28:	je     0x4091e5
  408f2e:	mov    rax,QWORD PTR [rip+0x44953]        # 0x44d888
  408f35:	lea    rdi,[rsp+0x50]
  408f3a:	lea    rsi,[rsp+0x60]
  408f3f:	mov    rcx,rsi
  408f42:	mov    QWORD PTR [rsp+0x60],rax
  408f47:	mov    eax,DWORD PTR [rip+0x44943]        # 0x44d890
  408f4d:	mov    DWORD PTR [rsp+0x68],eax
  408f51:	mov    rax,QWORD PTR [rip+0x3d638]        # 0x446590
  408f58:	mov    rdx,QWORD PTR [rax]
  408f5b:	mov    QWORD PTR [rsp+0x50],rdx
  408f60:	mov    eax,DWORD PTR [rax+0x8]
  408f63:	mov    rdx,rdi
  408f66:	mov    DWORD PTR [rsp+0x58],eax
  408f6a:	call   0x41ad50
  408f6f:	test   eax,eax
  408f71:	je     0x409460
  408f77:	mov    rcx,QWORD PTR [rip+0x3d4a2]        # 0x446420
  408f7e:	call   0x403b80
  408f83:	lea    rcx,[rsp+0x90]
  408f8b:	mov    rdx,rax
  408f8e:	mov    QWORD PTR [rip+0x44963],rax        # 0x44d8f8
  408f95:	call   0x403a70
  408f9a:	lea    rdx,[rip+0x290af]        # 0x432050
  408fa1:	mov    rcx,rbx
  408fa4:	call   0x42aab0
  408fa9:	mov    rax,QWORD PTR [rsp+0x90]
  408fb1:	lea    rcx,[rbx+0x2]
  408fb5:	mov    rdx,rsi
  408fb8:	mov    QWORD PTR [rsp+0x60],rax
  408fbd:	mov    eax,DWORD PTR [rsp+0x98]
  408fc4:	mov    DWORD PTR [rsp+0x68],eax
  408fc8:	call   0x4056c0
  408fcd:	jmp    0x408da4
  408fd2:	movzx  edx,BYTE PTR [rbx+0xa]
  408fd6:	cmp    dl,0x3a
  408fd9:	sete   cl
  408fdc:	test   dl,dl
  408fde:	je     0x4094c0
  408fe4:	test   cl,cl
  408fe6:	je     0x408e3d
  408fec:	lea    rcx,[rbx+0xb]
  408ff0:	lea    rdx,[rip+0x290b0]        # 0x4320a7
  408ff7:	call   0x42a5f0
  408ffc:	test   rax,rax
  408fff:	mov    rdi,rax
  409002:	je     0x40a130
  409008:	xor    esi,esi
  40900a:	xor    r13d,r13d
  40900d:	xor    r12d,r12d
  409010:	lea    r14,[rsi+0x8]
  409014:	mov    rcx,r12
  409017:	add    r13d,0x1
  40901b:	mov    rdx,r14
  40901e:	call   0x41a710
  409023:	mov    rcx,rdi
  409026:	add    rsi,rax
  409029:	mov    r12,rax
  40902c:	call   0x40e730
  409031:	lea    rdx,[rip+0x2906f]        # 0x4320a7
  409038:	mov    QWORD PTR [rsi],rax
  40903b:	xor    ecx,ecx
  40903d:	mov    rsi,r14
  409040:	call   0x42a5f0
  409045:	test   rax,rax
  409048:	mov    rdi,rax
  40904b:	jne    0x409010
  40904d:	lea    eax,[r13-0x1]
  409051:	mov    QWORD PTR [rsp+0xf0],rbx
  409059:	mov    QWORD PTR [rsp+0x30],r12
  40905e:	mov    r14,r12
  409061:	mov    DWORD PTR [rsp+0x38],0x0
  409069:	xor    r15d,r15d
  40906c:	lea    rax,[r12+rax*8+0x8]
  409071:	mov    rbx,rax
  409074:	jmp    0x4090ad
  409076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409080:	mov    rax,QWORD PTR [rbp+0x0]
  409084:	mov    rax,QWORD PTR [rax+0x130]
  40908b:	test   rax,rax
  40908e:	je     0x4090a0
  409090:	call   rax
  409092:	test   eax,eax
  409094:	je     0x4090a0
  409096:	mov    DWORD PTR [rip+0x447dc],0x1        # 0x44d87c
  4090a0:	add    r14,0x8
  4090a4:	cmp    r14,rbx
  4090a7:	je     0x40a161
  4090ad:	mov    r8,QWORD PTR [r14]
  4090b0:	lea    rdi,[rip+0x28ff2]        # 0x4320a9
  4090b7:	mov    ecx,0xe
  4090bc:	mov    rsi,r8
  4090bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4090c1:	je     0x409080
  4090c3:	lea    rdi,[rip+0x28fed]        # 0x4320b7
  4090ca:	mov    rsi,r8
  4090cd:	mov    ecx,0xc
  4090d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4090d4:	je     0x409450
  4090da:	lea    rdi,[rip+0x28fe2]        # 0x4320c3
  4090e1:	mov    rsi,r8
  4090e4:	mov    ecx,0x9
  4090e9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4090eb:	jne    0x40a0b0
  4090f1:	mov    rax,QWORD PTR [rbp+0x0]
  4090f5:	mov    rax,QWORD PTR [rax+0xb8]
  4090fc:	test   rax,rax
  4090ff:	je     0x4090a0
  409101:	call   rax
  409103:	test   eax,eax
  409105:	je     0x4090a0
  409107:	mov    DWORD PTR [rip+0x44753],0x1        # 0x44d864
  409111:	jmp    0x4090a0
  409113:	call   0x403a80
  409118:	test   rax,rax
  40911b:	je     0x4091e5
  409121:	mov    rax,QWORD PTR [rbp+0x0]
  409125:	lea    rdx,[rsp+0x90]
  40912d:	lea    rcx,[rsp+0x80]
  409135:	call   QWORD PTR [rax+0xe8]
  40913b:	test   eax,eax
  40913d:	je     0x4091e5
  409143:	mov    r9,QWORD PTR [rsp+0x90]
  40914b:	mov    r8d,DWORD PTR [rsp+0x80]
  409153:	lea    rdx,[rip+0x28f28]        # 0x432082
  40915a:	mov    rcx,rbx
  40915d:	mov    DWORD PTR [rsp+0x20],r9d
  409162:	call   0x42aab0
  409167:	jmp    0x408da4
  40916c:	nop    DWORD PTR [rax+0x0]
  409170:	call   0x403a80
  409175:	test   rax,rax
  409178:	je     0x4091e5
  40917a:	mov    rcx,QWORD PTR [rip+0x3d29f]        # 0x446420
  409181:	call   0x403b80
  409186:	lea    rcx,[rsp+0x90]
  40918e:	mov    QWORD PTR [rip+0x44763],rax        # 0x44d8f8
  409195:	mov    BYTE PTR [rbx],0x6d
  409198:	mov    rdx,rax
  40919b:	call   0x403a70
  4091a0:	mov    rax,QWORD PTR [rsp+0x90]
  4091a8:	lea    rdx,[rsp+0x60]
  4091ad:	lea    rcx,[rbx+0x1]
  4091b1:	mov    QWORD PTR [rsp+0x60],rax
  4091b6:	mov    eax,DWORD PTR [rsp+0x98]
  4091bd:	mov    DWORD PTR [rsp+0x68],eax
  4091c1:	call   0x4056c0
  4091c6:	mov    rax,QWORD PTR [rip+0x4472b]        # 0x44d8f8
  4091cd:	mov    rax,QWORD PTR [rax+0x10]
  4091d1:	mov    QWORD PTR [rip+0x44720],rax        # 0x44d8f8
  4091d8:	jmp    0x408da4
  4091dd:	mov    rcx,rsi
  4091e0:	call   0x42a6c8
  4091e5:	mov    rcx,rbx
  4091e8:	call   0x405bd0
  4091ed:	jmp    0x408da4
  4091f2:	jg     0x4091e5
  4091f4:	mov    rax,QWORD PTR [rbp+0x0]
  4091f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409200:	cmp    QWORD PTR [rax+0x198],0x0
  409208:	je     0x409280
  40920a:	lea    rdi,[rip+0x28f51]        # 0x432162
  409211:	mov    ecx,0xc
  409216:	mov    rsi,rbx
  409219:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40921b:	jne    0x409280
  40921d:	lea    rcx,[rsp+0x90]
  409225:	lea    rdx,[rbx+0xc]
  409229:	lea    r8,[rsp+0x78]
  40922e:	call   0x405790
  409233:	mov    rax,QWORD PTR [rsp+0x90]
  40923b:	lea    rdx,[rsp+0x80]
  409243:	lea    rcx,[rsp+0x60]
  409248:	mov    QWORD PTR [rsp+0x60],rax
  40924d:	mov    eax,DWORD PTR [rsp+0x98]
  409254:	mov    DWORD PTR [rsp+0x68],eax
  409258:	mov    rax,QWORD PTR [rbp+0x0]
  40925c:	call   QWORD PTR [rax+0x198]
  409262:	cmp    eax,0x1
  409265:	je     0x40a59c
  40926b:	test   eax,eax
  40926d:	jne    0x408da4
  409273:	jmp    0x4091e5
  409278:	nop    DWORD PTR [rax+rax*1+0x0]
  409280:	lea    rdi,[rip+0x2912c]        # 0x4323b3
  409287:	mov    ecx,0x6
  40928c:	mov    rsi,rbx
  40928f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409291:	je     0x409410
  409297:	lea    rdi,[rip+0x29032]        # 0x4322d0
  40929e:	mov    ecx,0xf
  4092a3:	mov    rsi,rbx
  4092a6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4092a8:	je     0x40a1a0
  4092ae:	lea    rdi,[rip+0x290cf]        # 0x432384
  4092b5:	mov    ecx,0xa
  4092ba:	mov    rsi,rbx
  4092bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4092bf:	je     0x40a030
  4092c5:	lea    rdi,[rip+0x290c2]        # 0x43238e
  4092cc:	mov    ecx,0xa
  4092d1:	mov    rsi,rbx
  4092d4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4092d6:	je     0x40a030
  4092dc:	lea    rdi,[rip+0x290e3]        # 0x4323c6
  4092e3:	mov    ecx,0x5
  4092e8:	mov    rsi,rbx
  4092eb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4092ed:	jne    0x40a3b8
  4092f3:	call   0x403a80
  4092f8:	test   rax,rax
  4092fb:	je     0x4091e5
  409301:	lea    rdx,[rsp+0x90]
  409309:	lea    rcx,[rbx+0x5]
  40930d:	call   0x41ce20
  409312:	cmp    BYTE PTR [rax],0x2c
  409315:	jne    0x4091e5
  40931b:	lea    rcx,[rax+0x1]
  40931f:	xor    edx,edx
  409321:	mov    r8d,0x10
  409327:	call   0x42a5e0
  40932c:	test   eax,eax
  40932e:	mov    rsi,QWORD PTR [rsp+0x90]
  409336:	je     0x40a7f4
  40933c:	sub    eax,0x1
  40933f:	mov    edi,0xffffffff
  409344:	lea    rbp,[rsp+0x80]
  40934c:	lea    r12,[rsi+rax*1+0x1]
  409351:	jmp    0x409372
  409353:	mov    r8d,edi
  409356:	mov    edx,0x1
  40935b:	mov    rcx,rbp
  40935e:	add    rsi,0x1
  409362:	call   0x4240f0
  409367:	cmp    rsi,r12
  40936a:	mov    edi,eax
  40936c:	je     0x40a7f7
  409372:	mov    r8d,0x1
  409378:	mov    rdx,rbp
  40937b:	mov    rcx,rsi
  40937e:	mov    BYTE PTR [rsp+0x80],0x0
  409386:	call   0x40def0
  40938b:	test   eax,eax
  40938d:	je     0x409353
  40938f:	jmp    0x4091e5
  409394:	mov    rax,QWORD PTR [rip+0x444ed]        # 0x44d888
  40939b:	lea    rcx,[rsp+0x60]
  4093a0:	mov    QWORD PTR [rsp+0x60],rax
  4093a5:	mov    eax,DWORD PTR [rip+0x444e5]        # 0x44d890
  4093ab:	mov    DWORD PTR [rsp+0x68],eax
  4093af:	call   0x41ad20
  4093b4:	mov    ecx,eax
  4093b6:	call   0x403a90
  4093bb:	test   rax,rax
  4093be:	mov    QWORD PTR [rsi],rax
  4093c1:	jne    0x408d55
  4093c7:	mov    rcx,rbx
  4093ca:	call   0x405bd0
  4093cf:	mov    QWORD PTR [rsi],0x0
  4093d6:	jmp    0x408da4
  4093db:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e0:	call   0x403a80
  4093e5:	test   rax,rax
  4093e8:	je     0x4091e5
  4093ee:	mov    rdx,QWORD PTR [rip+0x44503]        # 0x44d8f8
  4093f5:	test   rdx,rdx
  4093f8:	je     0x40a3ed
  4093fe:	mov    BYTE PTR [rbx],0x6d
  409401:	lea    rcx,[rsp+0x90]
  409409:	jmp    0x40919b
  40940e:	xchg   ax,ax
  409410:	lea    rdi,[rbx+0x6]
  409414:	mov    ecx,0x4000
  409419:	call   0x423010
  40941e:	mov    rcx,rdi
  409421:	mov    r12,rax
  409424:	call   0x42a610
  409429:	test   r12,r12
  40942c:	je     0x4091e5
  409432:	test   al,0x1
  409434:	je     0x40a401
  40943a:	mov    rcx,rbx
  40943d:	call   0x405bd0
  409442:	mov    rcx,r12
  409445:	call   0x42a6c8
  40944a:	jmp    0x408da4
  40944f:	nop
  409450:	mov    r15d,0x1
  409456:	jmp    0x4090a0
  40945b:	nop    DWORD PTR [rax+rax*1+0x0]
  409460:	mov    rax,QWORD PTR [rip+0x44421]        # 0x44d888
  409467:	mov    rcx,rsi
  40946a:	mov    QWORD PTR [rsp+0x60],rax
  40946f:	mov    eax,DWORD PTR [rip+0x4441b]        # 0x44d890
  409475:	mov    DWORD PTR [rsp+0x68],eax
  409479:	mov    rax,QWORD PTR [rip+0x3d0c0]        # 0x446540
  409480:	mov    rdx,QWORD PTR [rax]
  409483:	mov    QWORD PTR [rsp+0x50],rdx
  409488:	mov    eax,DWORD PTR [rax+0x8]
  40948b:	mov    rdx,rdi
  40948e:	mov    DWORD PTR [rsp+0x58],eax
  409492:	call   0x41ad50
  409497:	test   eax,eax
  409499:	jne    0x408f77
  40949f:	mov    rax,QWORD PTR [rip+0x443e2]        # 0x44d888
  4094a6:	mov    QWORD PTR [rsp+0x90],rax
  4094ae:	mov    eax,DWORD PTR [rip+0x443dc]        # 0x44d890
  4094b4:	mov    DWORD PTR [rsp+0x98],eax
  4094bb:	jmp    0x408f9a
  4094c0:	test   cl,cl
  4094c2:	jne    0x408fec
  4094c8:	xor    r15d,r15d
  4094cb:	lea    rdx,[rip+0x28c56]        # 0x432128
  4094d2:	mov    r8d,0x3fff
  4094d8:	mov    rcx,rbx
  4094db:	call   0x42aab0
  4094e0:	mov    rax,QWORD PTR [rbp+0x0]
  4094e4:	mov    rdx,QWORD PTR [rax+0x260]
  4094eb:	test   rdx,rdx
  4094ee:	je     0x4094fe
  4094f0:	call   rdx
  4094f2:	test   eax,eax
  4094f4:	jne    0x409f50
  4094fa:	mov    rax,QWORD PTR [rbp+0x0]
  4094fe:	cmp    QWORD PTR [rax+0x1d8],0x0
  409506:	mov    rcx,rbx
  409509:	je     0x40a0f4
  40950f:	call   0x42a610
  409514:	movabs rdi,0x6c3a72656658713b
  40951e:	add    rax,rbx
  409521:	movabs rsi,0x6165722d34727673
  40952b:	mov    QWORD PTR [rax],rdi
  40952e:	movabs rdi,0x7365697261726269
  409538:	mov    ecx,0x2b64
  40953d:	mov    QWORD PTR [rax+0x8],rdi
  409541:	movabs rdi,0x65723a347276732d
  40954b:	mov    QWORD PTR [rax+0x30],rsi
  40954f:	mov    QWORD PTR [rax+0x10],rdi
  409553:	movabs rdi,0x6d6775613b2b6461
  40955d:	mov    WORD PTR [rax+0x38],cx
  409561:	mov    QWORD PTR [rax+0x18],rdi
  409565:	movabs rdi,0x696c2d6465746e65
  40956f:	mov    BYTE PTR [rax+0x3a],0x0
  409573:	mov    QWORD PTR [rax+0x20],rdi
  409577:	movabs rdi,0x2d73656972617262
  409581:	mov    QWORD PTR [rax+0x28],rdi
  409585:	mov    rax,QWORD PTR [rbp+0x0]
  409589:	cmp    QWORD PTR [rax+0x90],0x0
  409591:	je     0x4095c8
  409593:	mov    rcx,rbx
  409596:	movabs rdi,0x613a72656658713b
  4095a0:	movabs rsi,0x646165723a767875
  4095aa:	call   0x42a610
  4095af:	mov    r14d,0x2b
  4095b5:	add    rax,rbx
  4095b8:	mov    QWORD PTR [rax],rdi
  4095bb:	mov    QWORD PTR [rax+0x8],rsi
  4095bf:	mov    WORD PTR [rax+0x10],r14w
  4095c4:	mov    rax,QWORD PTR [rbp+0x0]
  4095c8:	cmp    QWORD PTR [rax+0xf8],0x0
  4095d0:	je     0x409619
  4095d2:	mov    rcx,rbx
  4095d5:	movabs rsi,0x2b646165723a7570
  4095df:	movabs rdi,0x733a72656658713b
  4095e9:	call   0x42a610
  4095ee:	add    rax,rbx
  4095f1:	mov    r13d,0x2b
  4095f7:	mov    QWORD PTR [rax+0x8],rsi
  4095fb:	movabs rsi,0x65746972773a7570
  409605:	mov    QWORD PTR [rax],rdi
  409608:	mov    QWORD PTR [rax+0x10],rdi
  40960c:	mov    QWORD PTR [rax+0x18],rsi
  409610:	mov    WORD PTR [rax+0x20],r13w
  409615:	mov    rax,QWORD PTR [rbp+0x0]
  409619:	cmp    QWORD PTR [rax+0x110],0x0
  409621:	je     0x409682
  409623:	mov    rcx,rbx
  409626:	movabs rdi,0x733a72656658713b
  409630:	movabs rsi,0x723a6f666e696769
  40963a:	call   0x42a610
  40963f:	add    rax,rbx
  409642:	mov    r12d,0x2b
  409648:	mov    QWORD PTR [rax],rdi
  40964b:	movabs rdi,0x6658713b2b646165
  409655:	mov    QWORD PTR [rax+0x8],rsi
  409659:	mov    QWORD PTR [rax+0x10],rdi
  40965d:	movabs rsi,0x6e696769733a7265
  409667:	movabs rdi,0x65746972773a6f66
  409671:	mov    QWORD PTR [rax+0x18],rsi
  409675:	mov    QWORD PTR [rax+0x20],rdi
  409679:	mov    WORD PTR [rax+0x28],r12w
  40967e:	mov    rax,QWORD PTR [rbp+0x0]
  409682:	cmp    QWORD PTR [rax+0x168],0x0
  40968a:	je     0x4096bf
  40968c:	mov    rcx,rbx
  40968f:	movabs rdi,0x6165723a63697064
  409699:	movabs rsi,0x663a72656658713b
  4096a3:	call   0x42a610
  4096a8:	add    rax,rbx
  4096ab:	mov    QWORD PTR [rax+0x8],rdi
  4096af:	mov    edi,0x2b64
  4096b4:	mov    QWORD PTR [rax],rsi
  4096b7:	mov    WORD PTR [rax+0x10],di
  4096bb:	mov    BYTE PTR [rax+0x12],0x0
  4096bf:	mov    rcx,rbx
  4096c2:	movabs rdi,0x663a72656658713b
  4096cc:	call   0x42a610
  4096d1:	lea    rdx,[rbx+rax*1]
  4096d5:	mov    r11d,0x2b
  4096db:	mov    QWORD PTR [rdx],rdi
  4096de:	movabs rdi,0x3a73657275746165
  4096e8:	mov    DWORD PTR [rdx+0x10],0x64616572
  4096ef:	mov    QWORD PTR [rdx+0x8],rdi
  4096f3:	mov    WORD PTR [rdx+0x14],r11w
  4096f8:	mov    rdx,QWORD PTR [rip+0x3cf81]        # 0x446680
  4096ff:	mov    esi,DWORD PTR [rdx]
  409701:	test   esi,esi
  409703:	jne    0x409f83
  409709:	mov    rax,QWORD PTR [rbp+0x0]
  40970d:	cmp    QWORD PTR [rax+0x108],0x0
  409715:	je     0x409748
  409717:	mov    rcx,rbx
  40971a:	movabs rsi,0x6f3a72656658713b
  409724:	movabs rdi,0x65723a6174616473
  40972e:	call   0x42a610
  409733:	add    rax,rbx
  409736:	mov    QWORD PTR [rax],rsi
  409739:	mov    QWORD PTR [rax+0x8],rdi
  40973d:	mov    DWORD PTR [rax+0x10],0x2b6461
  409744:	mov    rax,QWORD PTR [rbp+0x0]
  409748:	mov    rdx,QWORD PTR [rax+0x130]
  40974f:	test   rdx,rdx
  409752:	je     0x409762
  409754:	call   rdx
  409756:	test   eax,eax
  409758:	jne    0x409ea0
  40975e:	mov    rax,QWORD PTR [rbp+0x0]
  409762:	mov    rdx,QWORD PTR [rax+0x138]
  409769:	test   rdx,rdx
  40976c:	je     0x40977c
  40976e:	call   rdx
  409770:	test   eax,eax
  409772:	jne    0x409ee0
  409778:	mov    rax,QWORD PTR [rbp+0x0]
  40977c:	mov    rdx,QWORD PTR [rax+0x140]
  409783:	test   rdx,rdx
  409786:	je     0x409796
  409788:	call   rdx
  40978a:	test   eax,eax
  40978c:	jne    0x409f13
  409792:	mov    rax,QWORD PTR [rbp+0x0]
  409796:	mov    rdx,QWORD PTR [rax+0x148]
  40979d:	test   rdx,rdx
  4097a0:	je     0x4097b0
  4097a2:	call   rdx
  4097a4:	test   eax,eax
  4097a6:	jne    0x409e35
  4097ac:	mov    rax,QWORD PTR [rbp+0x0]
  4097b0:	mov    rdx,QWORD PTR [rax+0x118]
  4097b7:	test   rdx,rdx
  4097ba:	je     0x4097ca
  4097bc:	call   rdx
  4097be:	test   eax,eax
  4097c0:	jne    0x409e70
  4097c6:	mov    rax,QWORD PTR [rbp+0x0]
  4097ca:	mov    rax,QWORD PTR [rax+0x1c8]
  4097d1:	test   rax,rax
  4097d4:	je     0x409810
  4097d6:	call   rax
  4097d8:	test   eax,eax
  4097da:	je     0x409810
  4097dc:	mov    rcx,rbx
  4097df:	movabs rdi,0x6c6261736944513b
  4097e9:	movabs rsi,0x696d6f646e615265
  4097f3:	call   0x42a610
  4097f8:	add    rax,rbx
  4097fb:	mov    QWORD PTR [rax],rdi
  4097fe:	movabs rdi,0x2b6e6f6974617a
  409808:	mov    QWORD PTR [rax+0x8],rsi
  40980c:	mov    QWORD PTR [rax+0x10],rdi
  409810:	mov    rcx,rbx
  409813:	movabs rdi,0x743a72656658713b
  40981d:	call   0x42a610
  409822:	add    rax,rbx
  409825:	mov    QWORD PTR [rax],rdi
  409828:	movabs rdi,0x723a736461657268
  409832:	mov    DWORD PTR [rax+0x10],0x2b646165
  409839:	mov    QWORD PTR [rax+0x8],rdi
  40983d:	mov    BYTE PTR [rax+0x14],0x0
  409841:	mov    rax,QWORD PTR [rbp+0x0]
  409845:	mov    rdx,QWORD PTR [rax+0x178]
  40984c:	test   rdx,rdx
  40984f:	je     0x409a86
  409855:	call   rdx
  409857:	test   eax,eax
  409859:	je     0x409a82
  40985f:	mov    rcx,rbx
  409862:	movabs rsi,0x697469646e6f433b
  40986c:	movabs rdi,0x636172546c616e6f
  409876:	call   0x42a610
  40987b:	lea    rdx,[rbx+rax*1]
  40987f:	mov    r9d,0x2b65
  409885:	mov    r10d,0x2b
  40988b:	test   r15d,r15d
  40988e:	mov    QWORD PTR [rdx],rsi
  409891:	movabs rsi,0x2b73746e696f7065
  40989b:	mov    QWORD PTR [rdx+0x8],rdi
  40989f:	mov    QWORD PTR [rdx+0x10],rsi
  4098a3:	lea    rdx,[rbx+rax*1+0x18]
  4098a8:	movabs rdi,0x745365636172543b
  4098b2:	movabs rsi,0x6169726156657461
  4098bc:	mov    QWORD PTR [rdx],rdi
  4098bf:	mov    QWORD PTR [rdx+0x8],rsi
  4098c3:	movabs rdi,0x6f7065636172543b
  4098cd:	mov    DWORD PTR [rdx+0x10],0x73656c62
  4098d4:	mov    BYTE PTR [rdx+0x14],0x2b
  4098d8:	lea    rdx,[rbx+rax*1+0x2d]
  4098dd:	movabs rsi,0x6372756f53746e69
  4098e7:	mov    QWORD PTR [rdx],rdi
  4098ea:	mov    QWORD PTR [rdx+0x8],rsi
  4098ee:	movabs rdi,0x6e6e6f637369443b
  4098f8:	mov    WORD PTR [rdx+0x10],r9w
  4098fd:	lea    rdx,[rbx+rax*1+0x3f]
  409902:	movabs rsi,0x6172546465746365
  40990c:	mov    QWORD PTR [rdx],rdi
  40990f:	mov    QWORD PTR [rdx+0x8],rsi
  409913:	mov    DWORD PTR [rdx+0x10],0x676e6963
  40991a:	mov    WORD PTR [rdx+0x14],r10w
  40991f:	je     0x40995a
  409921:	mov    rdx,QWORD PTR [rbp+0x0]
  409925:	cmp    QWORD PTR [rdx+0x1b8],0x0
  40992d:	je     0x40995a
  40992f:	lea    rax,[rbx+rax*1+0x54]
  409934:	movabs rdi,0x617254747361463b
  40993e:	movabs rsi,0x73746e696f706563
  409948:	mov    r9d,0x2b
  40994e:	mov    QWORD PTR [rax],rdi
  409951:	mov    QWORD PTR [rax+0x8],rsi
  409955:	mov    WORD PTR [rax+0x10],r9w
  40995a:	mov    rcx,rbx
  40995d:	movabs rsi,0x546369746174533b
  409967:	movabs rdi,0x6e696f7065636172
  409971:	call   0x42a610
  409976:	lea    rdx,[rbx+rax*1]
  40997a:	mov    ecx,0x2b73
  40997f:	mov    r8d,0x2b
  409985:	mov    QWORD PTR [rdx],rsi
  409988:	mov    QWORD PTR [rdx+0x8],rdi
  40998c:	movabs rsi,0x6c6c6174736e493b
  409996:	mov    DWORD PTR [rdx+0x10],0x2b7374
  40999d:	lea    rdx,[rbx+rax*1+0x13]
  4099a2:	movabs rdi,0x2b65636172546e49
  4099ac:	mov    QWORD PTR [rdx],rsi
  4099af:	mov    QWORD PTR [rdx+0x8],rdi
  4099b3:	lea    rdx,[rbx+rax*1+0x23]
  4099b8:	movabs rsi,0x733a72656658713b
  4099c2:	movabs rdi,0x6172746369746174
  4099cc:	mov    QWORD PTR [rdx],rsi
  4099cf:	movabs rsi,0x2b646165723a6563
  4099d9:	mov    QWORD PTR [rdx+0x8],rdi
  4099dd:	mov    QWORD PTR [rdx+0x10],rsi
  4099e1:	lea    rdx,[rbx+rax*1+0x3b]
  4099e6:	movabs rdi,0x743a72656658713b
  4099f0:	movabs rsi,0x6d61726665636172
  4099fa:	mov    QWORD PTR [rdx],rdi
  4099fd:	movabs rdi,0x723a6f666e692d65
  409a07:	mov    QWORD PTR [rdx+0x8],rsi
  409a0b:	mov    QWORD PTR [rdx+0x10],rdi
  409a0f:	mov    DWORD PTR [rdx+0x18],0x2b646165
  409a16:	lea    rdx,[rbx+rax*1+0x57]
  409a1b:	movabs rsi,0x44656c62616e453b
  409a25:	movabs rdi,0x7254656c62617369
  409a2f:	mov    QWORD PTR [rdx],rsi
  409a32:	movabs rsi,0x746e696f70656361
  409a3c:	mov    QWORD PTR [rdx+0x8],rdi
  409a40:	mov    QWORD PTR [rdx+0x10],rsi
  409a44:	mov    WORD PTR [rdx+0x18],cx
  409a48:	lea    rdx,[rbx+rax*1+0x71]
  409a4d:	movabs rdi,0x656666754254513b
  409a57:	lea    rax,[rbx+rax*1+0x80]
  409a5f:	movabs rsi,0x2b657a69733a72
  409a69:	mov    QWORD PTR [rdx],rdi
  409a6c:	movabs rdi,0x7a6e65636172743b
  409a76:	mov    QWORD PTR [rdx+0x8],rsi
  409a7a:	mov    QWORD PTR [rax],rdi
  409a7d:	mov    WORD PTR [rax+0x8],r8w
  409a82:	mov    rax,QWORD PTR [rbp+0x0]
  409a86:	mov    rdx,QWORD PTR [rax+0xd0]
  409a8d:	test   rdx,rdx
  409a90:	je     0x409a9c
  409a92:	call   rdx
  409a94:	test   eax,eax
  409a96:	jne    0x409aae
  409a98:	mov    rax,QWORD PTR [rbp+0x0]
  409a9c:	mov    rax,QWORD PTR [rax+0x258]
  409aa3:	test   rax,rax
  409aa6:	je     0x409ae6
  409aa8:	call   rax
  409aaa:	test   eax,eax
  409aac:	je     0x409ae6
  409aae:	mov    rcx,rbx
  409ab1:	movabs rsi,0x697469646e6f433b
  409abb:	movabs rdi,0x2b73746e696f706b
  409ac5:	call   0x42a610
  409aca:	add    rax,rbx
  409acd:	mov    QWORD PTR [rax],rsi
  409ad0:	movabs rsi,0x616572426c616e6f
  409ada:	mov    QWORD PTR [rax+0x10],rdi
  409ade:	mov    QWORD PTR [rax+0x8],rsi
  409ae2:	mov    BYTE PTR [rax+0x18],0x0
  409ae6:	mov    rcx,rbx
  409ae9:	movabs rdi,0x6f706b616572423b
  409af3:	call   0x42a610
  409af8:	add    rax,rbx
  409afb:	mov    QWORD PTR [rax],rdi
  409afe:	mov    rcx,QWORD PTR [rbp+0x0]
  409b02:	movabs rdi,0x616d6d6f43746e69
  409b0c:	mov    QWORD PTR [rax+0x8],rdi
  409b10:	mov    DWORD PTR [rax+0x10],0x2b73646e
  409b17:	mov    BYTE PTR [rax+0x14],0x0
  409b1b:	mov    rax,QWORD PTR [rcx+0x1e0]
  409b22:	test   rax,rax
  409b25:	je     0x409b35
  409b27:	call   rax
  409b29:	test   eax,eax
  409b2b:	jne    0x409e10
  409b31:	mov    rcx,QWORD PTR [rbp+0x0]
  409b35:	mov    rax,QWORD PTR [rcx+0x1e8]
  409b3c:	test   rax,rax
  409b3f:	je     0x409c3a
  409b45:	mov    edx,0x1
  409b4a:	call   rax
  409b4c:	test   eax,eax
  409b4e:	jne    0x409da0
  409b54:	mov    rcx,QWORD PTR [rbp+0x0]
  409b58:	mov    rax,QWORD PTR [rcx+0x1e8]
  409b5f:	test   rax,rax
  409b62:	je     0x409c3a
  409b68:	mov    edx,0x2
  409b6d:	call   rax
  409b6f:	test   eax,eax
  409b71:	je     0x409c36
  409b77:	mov    rcx,rbx
  409b7a:	movabs rsi,0x656361727462513b
  409b84:	call   0x42a610
  409b89:	lea    rdx,[rbx+rax*1]
  409b8d:	lea    rax,[rbx+rax*1+0xc]
  409b92:	mov    r8d,0x2b65
  409b98:	mov    QWORD PTR [rdx],rsi
  409b9b:	mov    DWORD PTR [rdx+0x8],0x2b74703a
  409ba2:	mov    QWORD PTR [rax],rsi
  409ba5:	movabs rsi,0x74703a666e6f632d
  409baf:	mov    DWORD PTR [rax+0x10],0x7a69733a
  409bb6:	mov    QWORD PTR [rax+0x8],rsi
  409bba:	mov    WORD PTR [rax+0x14],r8w
  409bbf:	mov    BYTE PTR [rax+0x16],0x0
  409bc3:	mov    rcx,rbx
  409bc6:	movabs rsi,0x656361727462513b
  409bd0:	movabs rdi,0x623a72656658713b
  409bda:	call   0x42a610
  409bdf:	lea    rdx,[rbx+rax*1]
  409be3:	mov    QWORD PTR [rdx],rsi
  409be6:	mov    DWORD PTR [rdx+0x8],0x66666f3a
  409bed:	movabs rsi,0x65723a6563617274
  409bf7:	mov    BYTE PTR [rdx+0xc],0x2b
  409bfb:	lea    rdx,[rbx+rax*1+0xd]
  409c00:	lea    rax,[rbx+rax*1+0x20]
  409c05:	mov    QWORD PTR [rdx],rdi
  409c08:	mov    QWORD PTR [rdx+0x8],rsi
  409c0c:	movabs rsi,0x6f632d6563617274
  409c16:	mov    DWORD PTR [rdx+0x10],0x2b6461
  409c1d:	mov    QWORD PTR [rax],rdi
  409c20:	movabs rdi,0x2b646165723a666e
  409c2a:	mov    QWORD PTR [rax+0x8],rsi
  409c2e:	mov    QWORD PTR [rax+0x10],rdi
  409c32:	mov    BYTE PTR [rax+0x18],0x0
  409c36:	mov    rcx,QWORD PTR [rbp+0x0]
  409c3a:	mov    rax,QWORD PTR [rcx+0xb8]
  409c41:	test   rax,rax
  409c44:	je     0x409c54
  409c46:	call   rax
  409c48:	test   eax,eax
  409c4a:	jne    0x409d40
  409c50:	mov    rcx,QWORD PTR [rbp+0x0]
  409c54:	mov    rax,QWORD PTR [rcx+0xc8]
  409c5b:	test   rax,rax
  409c5e:	je     0x409c6e
  409c60:	call   rax
  409c62:	test   eax,eax
  409c64:	jne    0x409d70
  409c6a:	mov    rcx,QWORD PTR [rbp+0x0]
  409c6e:	cmp    QWORD PTR [rcx+0x218],0x0
  409c76:	je     0x409cb4
  409c78:	mov    rcx,rbx
  409c7b:	movabs rsi,0x653a72656658713b
  409c85:	movabs rdi,0x656c69662d636578
  409c8f:	call   0x42a610
  409c94:	mov    r15d,0x2b64
  409c9a:	add    rax,rbx
  409c9d:	mov    QWORD PTR [rax],rsi
  409ca0:	mov    QWORD PTR [rax+0x8],rdi
  409ca4:	mov    DWORD PTR [rax+0x10],0x6165723a
  409cab:	mov    WORD PTR [rax+0x14],r15w
  409cb0:	mov    BYTE PTR [rax+0x16],0x0
  409cb4:	mov    rcx,rbx
  409cb7:	movabs rdi,0x7553746e6f43763b
  409cc1:	call   0x42a610
  409cc6:	lea    rdx,[rbx+rax*1]
  409cca:	mov    QWORD PTR [rdx],rdi
  409ccd:	movabs rdi,0x2b646574726f7070
  409cd7:	mov    QWORD PTR [rdx+0x8],rdi
  409cdb:	lea    rdx,[rbx+rax*1+0x10]
  409ce0:	movabs rdi,0x646165726854513b
  409cea:	lea    rax,[rbx+rax*1+0x1f]
  409cef:	movabs rbx,0x757365722d6f6e3b
  409cf9:	mov    QWORD PTR [rdx],rdi
  409cfc:	movabs rdi,0x2b73746e657645
  409d06:	mov    QWORD PTR [rdx+0x8],rdi
  409d0a:	mov    QWORD PTR [rax],rbx
  409d0d:	mov    DWORD PTR [rax+0x8],0x2b64656d
  409d14:	mov    BYTE PTR [rax+0xc],0x0
  409d18:	call   0x411ae0
  409d1d:	mov    rax,QWORD PTR [rbp+0x0]
  409d21:	mov    rax,QWORD PTR [rax+0x150]
  409d28:	test   rax,rax
  409d2b:	je     0x408da4
  409d31:	call   rax
  409d33:	jmp    0x408da4
  409d38:	nop    DWORD PTR [rax+rax*1+0x0]
  409d40:	mov    rcx,rbx
  409d43:	movabs rdi,0x6b6165726277733b
  409d4d:	call   0x42a610
  409d52:	mov    ecx,0x2b
  409d57:	add    rax,rbx
  409d5a:	mov    QWORD PTR [rax],rdi
  409d5d:	mov    WORD PTR [rax+0x8],cx
  409d61:	mov    rcx,QWORD PTR [rbp+0x0]
  409d65:	jmp    0x409c54
  409d6a:	nop    WORD PTR [rax+rax*1+0x0]
  409d70:	mov    rcx,rbx
  409d73:	movabs rsi,0x6b6165726277683b
  409d7d:	call   0x42a610
  409d82:	mov    edx,0x2b
  409d87:	add    rax,rbx
  409d8a:	mov    QWORD PTR [rax],rsi
  409d8d:	mov    WORD PTR [rax+0x8],dx
  409d91:	mov    rcx,QWORD PTR [rbp+0x0]
  409d95:	jmp    0x409c6e
  409d9a:	nop    WORD PTR [rax+rax*1+0x0]
  409da0:	mov    rcx,rbx
  409da3:	movabs rsi,0x656361727462513b
  409dad:	movabs rdi,0x2b657a69733a73
  409db7:	call   0x42a610
  409dbc:	lea    rdx,[rbx+rax*1]
  409dc0:	lea    rax,[rbx+rax*1+0xd]
  409dc5:	mov    QWORD PTR [rdx],rsi
  409dc8:	mov    DWORD PTR [rdx+0x8],0x7374623a
  409dcf:	mov    BYTE PTR [rdx+0xc],0x2b
  409dd3:	mov    QWORD PTR [rax],rsi
  409dd6:	movabs rsi,0x74623a666e6f632d
  409de0:	mov    rcx,QWORD PTR [rbp+0x0]
  409de4:	mov    QWORD PTR [rax+0x8],rsi
  409de8:	mov    QWORD PTR [rax+0x10],rdi
  409dec:	mov    rax,QWORD PTR [rcx+0x1e8]
  409df3:	test   rax,rax
  409df6:	je     0x409bc3
  409dfc:	mov    edx,0x2
  409e01:	call   rax
  409e03:	test   eax,eax
  409e05:	jne    0x409b77
  409e0b:	jmp    0x409bc3
  409e10:	mov    rcx,rbx
  409e13:	movabs rdi,0x2b746e656741513b
  409e1d:	call   0x42a610
  409e22:	add    rax,rbx
  409e25:	mov    QWORD PTR [rax],rdi
  409e28:	mov    BYTE PTR [rax+0x8],0x0
  409e2c:	mov    rcx,QWORD PTR [rbp+0x0]
  409e30:	jmp    0x409b35
  409e35:	mov    rcx,rbx
  409e38:	movabs rdi,0x76652d636578653b
  409e42:	mov    esi,0x2b
  409e47:	call   0x42a610
  409e4c:	add    rax,rbx
  409e4f:	mov    QWORD PTR [rax],rdi
  409e52:	mov    DWORD PTR [rax+0x8],0x73746e65
  409e59:	mov    WORD PTR [rax+0xc],si
  409e5d:	mov    rax,QWORD PTR [rbp+0x0]
  409e61:	jmp    0x4097b0
  409e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e70:	mov    rcx,rbx
  409e73:	movabs rsi,0x6f74536e6f4e513b
  409e7d:	call   0x42a610
  409e82:	mov    r11d,0x2b70
  409e88:	add    rax,rbx
  409e8b:	mov    QWORD PTR [rax],rsi
  409e8e:	mov    WORD PTR [rax+0x8],r11w
  409e93:	mov    BYTE PTR [rax+0xa],0x0
  409e97:	mov    rax,QWORD PTR [rbp+0x0]
  409e9b:	jmp    0x4097ca
  409ea0:	mov    rcx,rbx
  409ea3:	movabs rsi,0x727069746c756d3b
  409ead:	mov    r13d,0x2b73
  409eb3:	call   0x42a610
  409eb8:	add    rax,rbx
  409ebb:	mov    QWORD PTR [rax],rsi
  409ebe:	mov    DWORD PTR [rax+0x8],0x7365636f
  409ec5:	mov    WORD PTR [rax+0xc],r13w
  409eca:	mov    BYTE PTR [rax+0xe],0x0
  409ece:	mov    rax,QWORD PTR [rbp+0x0]
  409ed2:	jmp    0x409762
  409ed7:	nop    WORD PTR [rax+rax*1+0x0]
  409ee0:	mov    rcx,rbx
  409ee3:	movabs rdi,0x76652d6b726f663b
  409eed:	mov    r12d,0x2b
  409ef3:	call   0x42a610
  409ef8:	add    rax,rbx
  409efb:	mov    QWORD PTR [rax],rdi
  409efe:	mov    DWORD PTR [rax+0x8],0x73746e65
  409f05:	mov    WORD PTR [rax+0xc],r12w
  409f0a:	mov    rax,QWORD PTR [rbp+0x0]
  409f0e:	jmp    0x40977c
  409f13:	mov    rcx,rbx
  409f16:	movabs rsi,0x652d6b726f66763b
  409f20:	mov    edi,0x2b73
  409f25:	call   0x42a610
  409f2a:	add    rax,rbx
  409f2d:	mov    QWORD PTR [rax],rsi
  409f30:	mov    DWORD PTR [rax+0x8],0x746e6576
  409f37:	mov    WORD PTR [rax+0xc],di
  409f3b:	mov    BYTE PTR [rax+0xe],0x0
  409f3f:	mov    rax,QWORD PTR [rbp+0x0]
  409f43:	jmp    0x409796
  409f48:	nop    DWORD PTR [rax+rax*1+0x0]
  409f50:	mov    rcx,rbx
  409f53:	movabs rsi,0x536863746143513b
  409f5d:	movabs rdi,0x2b736c6c61637379
  409f67:	call   0x42a610
  409f6c:	add    rax,rbx
  409f6f:	mov    QWORD PTR [rax],rsi
  409f72:	mov    QWORD PTR [rax+0x8],rdi
  409f76:	mov    BYTE PTR [rax+0x10],0x0
  409f7a:	mov    rax,QWORD PTR [rbp+0x0]
  409f7e:	jmp    0x4094fe
  409f83:	lea    rax,[rbx+rax*1+0x15]
  409f88:	movabs rdi,0x4e7472617453513b
  409f92:	mov    r10d,0x2b
  409f98:	mov    QWORD PTR [rax],rdi
  409f9b:	movabs rdi,0x65646f4d6b63416f
  409fa5:	mov    WORD PTR [rax+0x10],r10w
  409faa:	mov    QWORD PTR [rax+0x8],rdi
  409fae:	jmp    0x409709
  409fb3:	test   r13,r13
  409fb6:	jne    0x4091e5
  409fbc:	mov    rax,QWORD PTR [rsp+0x80]
  409fc4:	lea    rcx,[rsp+0x60]
  409fc9:	mov    QWORD PTR [rsp+0x60],rax
  409fce:	mov    eax,DWORD PTR [rsp+0x88]
  409fd5:	mov    DWORD PTR [rsp+0x68],eax
  409fd9:	call   0x403c50
  409fde:	test   rax,rax
  409fe1:	je     0x4091e5
  409fe7:	mov    rsi,QWORD PTR [rbp+0x0]
  409feb:	lea    r9,[rsp+0x78]
  409ff0:	mov    r8,QWORD PTR [rsp+0x98]
  409ff8:	mov    rdx,QWORD PTR [rsp+0x90]
  40a000:	mov    rcx,rax
  40a003:	call   QWORD PTR [rsi+0xf0]
  40a009:	cmp    eax,0x0
  40a00c:	jne    0x4091f2
  40a012:	mov    rcx,QWORD PTR [rsp+0x78]
  40a017:	call   0x40e950
  40a01c:	mov    rcx,rbx
  40a01f:	mov    rdx,rax
  40a022:	call   0x42a620
  40a027:	jmp    0x408da4
  40a02c:	nop    DWORD PTR [rax+0x0]
  40a030:	cmp    BYTE PTR [rbx+0x9],0x0
  40a034:	je     0x40a3a0
  40a03a:	lea    rcx,[rbx+0xa]
  40a03e:	mov    r8d,0x10
  40a044:	xor    edx,edx
  40a046:	call   0x42a5e0
  40a04b:	lea    rcx,[rsp+0x90]
  40a053:	mov    edx,eax
  40a055:	call   0x41ad00
  40a05a:	mov    rax,QWORD PTR [rsp+0x90]
  40a062:	mov    rcx,QWORD PTR [rip+0x3c3a7]        # 0x446410
  40a069:	lea    rdx,[rsp+0x60]
  40a06e:	mov    QWORD PTR [rsp+0x60],rax
  40a073:	mov    eax,DWORD PTR [rsp+0x98]
  40a07a:	mov    DWORD PTR [rsp+0x68],eax
  40a07e:	call   0x403be0
  40a083:	test   rax,rax
  40a086:	je     0x4091e5
  40a08c:	mov    r14d,DWORD PTR [rax+0x18]
  40a090:	lea    rdx,[rip+0x27fb4]        # 0x43204b
  40a097:	lea    rax,[rip+0x27fab]        # 0x432049
  40a09e:	test   r14d,r14d
  40a0a1:	cmove  rax,rdx
  40a0a5:	movzx  eax,WORD PTR [rax]
  40a0a8:	mov    WORD PTR [rbx],ax
  40a0ab:	jmp    0x408da4
  40a0b0:	lea    rdi,[rip+0x28015]        # 0x4320cc
  40a0b7:	mov    rsi,r8
  40a0ba:	mov    ecx,0x9
  40a0bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0c1:	jne    0x40a353
  40a0c7:	mov    rax,QWORD PTR [rbp+0x0]
  40a0cb:	mov    rax,QWORD PTR [rax+0xc8]
  40a0d2:	test   rax,rax
  40a0d5:	je     0x4090a0
  40a0db:	call   rax
  40a0dd:	test   eax,eax
  40a0df:	je     0x4090a0
  40a0e5:	mov    DWORD PTR [rip+0x43771],0x1        # 0x44d860
  40a0ef:	jmp    0x4090a0
  40a0f4:	call   0x42a610
  40a0f9:	movabs rsi,0x6c3a72656658713b
  40a103:	add    rax,rbx
  40a106:	mov    edx,0x2b64
  40a10b:	mov    QWORD PTR [rax],rsi
  40a10e:	movabs rsi,0x7365697261726269
  40a118:	mov    DWORD PTR [rax+0x10],0x6165723a
  40a11f:	mov    QWORD PTR [rax+0x8],rsi
  40a123:	mov    WORD PTR [rax+0x14],dx
  40a127:	mov    BYTE PTR [rax+0x16],0x0
  40a12b:	jmp    0x409585
  40a130:	mov    rax,QWORD PTR [rbp+0x0]
  40a134:	xor    r15d,r15d
  40a137:	mov    QWORD PTR [rsp+0x30],0x0
  40a140:	mov    rax,QWORD PTR [rax+0x170]
  40a147:	test   rax,rax
  40a14a:	je     0x40a152
  40a14c:	xor    edx,edx
  40a14e:	xor    ecx,ecx
  40a150:	call   rax
  40a152:	mov    rcx,QWORD PTR [rsp+0x30]
  40a157:	call   0x42a6c8
  40a15c:	jmp    0x4094cb
  40a161:	mov    rax,QWORD PTR [rbp+0x0]
  40a165:	mov    rbx,QWORD PTR [rsp+0xf0]
  40a16d:	mov    rax,QWORD PTR [rax+0x170]
  40a174:	test   rax,rax
  40a177:	je     0x40a182
  40a179:	mov    edx,DWORD PTR [rsp+0x38]
  40a17d:	mov    rcx,r12
  40a180:	call   rax
  40a182:	xor    esi,esi
  40a184:	mov    rcx,QWORD PTR [r12+rsi*8]
  40a188:	add    rsi,0x1
  40a18c:	call   0x42a6c8
  40a191:	cmp    r13d,esi
  40a194:	jg     0x40a184
  40a196:	jmp    0x40a152
  40a198:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	call   0x403a80
  40a1a5:	test   rax,rax
  40a1a8:	je     0x4091e5
  40a1ae:	movsxd rcx,r15d
  40a1b1:	call   0x423010
  40a1b6:	test   rax,rax
  40a1b9:	mov    r12,rax
  40a1bc:	je     0x40aae6
  40a1c2:	lea    rax,[rsp+0x78]
  40a1c7:	lea    edx,[r15-0xf]
  40a1cb:	lea    rcx,[rbx+0xf]
  40a1cf:	lea    r9,[rsp+0x90]
  40a1d7:	lea    r8,[rsp+0x80]
  40a1df:	mov    QWORD PTR [rsp+0x20],r12
  40a1e4:	mov    QWORD PTR [rsp+0x28],rax
  40a1e9:	call   0x406690
  40a1ee:	test   eax,eax
  40a1f0:	js     0x40aaf2
  40a1f6:	mov    eax,DWORD PTR [rsp+0x78]
  40a1fa:	lea    edi,[rax+0x3e7f]
  40a200:	mov    rax,QWORD PTR [rsp+0x90]
  40a208:	mov    DWORD PTR [rsp+0x38],edi
  40a20c:	cmp    rdi,rax
  40a20f:	jbe    0x40a217
  40a211:	mov    DWORD PTR [rsp+0x38],eax
  40a215:	mov    edi,eax
  40a217:	mov    rcx,rdi
  40a21a:	call   0x423010
  40a21f:	test   rax,rax
  40a222:	mov    rbp,rax
  40a225:	je     0x40aade
  40a22b:	mov    r15d,DWORD PTR [rsp+0x38]
  40a230:	mov    r13,QWORD PTR [rsp+0x80]
  40a238:	mov    rdx,rax
  40a23b:	mov    esi,DWORD PTR [rsp+0x78]
  40a23f:	mov    r14,QWORD PTR [rsp+0x90]
  40a247:	mov    r8d,r15d
  40a24a:	mov    rcx,r13
  40a24d:	call   0x408090
  40a252:	cmp    r15d,eax
  40a255:	jne    0x40a8b4
  40a25b:	lea    eax,[r15-0x3e80]
  40a262:	mov    QWORD PTR [rsp+0x40],rax
  40a267:	add    rax,rbp
  40a26a:	mov    QWORD PTR [rsp+0x48],rax
  40a26f:	nop
  40a270:	cmp    rsi,r14
  40a273:	ja     0x40a574
  40a279:	cmp    r14,rdi
  40a27c:	mov    rdx,rdi
  40a27f:	mov    r9,rsi
  40a282:	cmovbe rdx,r14
  40a286:	mov    r8,r12
  40a289:	mov    rcx,rbp
  40a28c:	call   0x423430
  40a291:	test   rax,rax
  40a294:	mov    rdx,rax
  40a297:	jne    0x40a581
  40a29d:	lea    rax,[r14-0x3e80]
  40a2a4:	cmp    r14,0x3e80
  40a2ab:	cmovae rdx,rax
  40a2af:	cmp    rsi,rdx
  40a2b2:	mov    r14,rdx
  40a2b5:	ja     0x40a270
  40a2b7:	mov    r15,QWORD PTR [rsp+0x40]
  40a2bc:	add    r13,0x3e80
  40a2c3:	lea    rdx,[rbp+0x3e80]
  40a2ca:	lea    rcx,[r13+r15*1+0x0]
  40a2cf:	mov    r8,r15
  40a2d2:	mov    QWORD PTR [rsp+0x30],rcx
  40a2d7:	mov    rcx,rbp
  40a2da:	call   0x42a668
  40a2df:	mov    rdx,r14
  40a2e2:	mov    eax,0x3e80
  40a2e7:	mov    rcx,QWORD PTR [rsp+0x30]
  40a2ec:	sub    rdx,r15
  40a2ef:	cmp    rdx,0x3e80
  40a2f6:	mov    r15,rdx
  40a2f9:	mov    rdx,QWORD PTR [rsp+0x48]
  40a2fe:	cmova  r15,rax
  40a302:	mov    r8d,r15d
  40a305:	call   0x408090
  40a30a:	cmp    DWORD PTR [rsp+0x38],eax
  40a30e:	je     0x40a270
  40a314:	mov    r8d,DWORD PTR [rsp+0x30]
  40a319:	lea    rcx,[rip+0x28018]        # 0x432338
  40a320:	mov    edx,r15d
  40a323:	call   0x41d110
  40a328:	mov    DWORD PTR [rbx],0x303045
  40a32e:	xchg   ax,ax
  40a330:	mov    rcx,rbp
  40a333:	call   0x42a6c8
  40a338:	jmp    0x409442
  40a33d:	nop    DWORD PTR [rax]
  40a340:	mov    rcx,r14
  40a343:	xor    r13d,r13d
  40a346:	call   0x42a610
  40a34b:	mov    r8d,eax
  40a34e:	jmp    0x408edc
  40a353:	lea    rdi,[rip+0x27d7b]        # 0x4320d5
  40a35a:	mov    ecx,0xd
  40a35f:	mov    rsi,r8
  40a362:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a364:	jne    0x40a530
  40a36a:	mov    rax,QWORD PTR [rbp+0x0]
  40a36e:	mov    rax,QWORD PTR [rax+0x138]
  40a375:	test   rax,rax
  40a378:	je     0x4090a0
  40a37e:	call   rax
  40a380:	test   eax,eax
  40a382:	je     0x4090a0
  40a388:	mov    DWORD PTR [rip+0x434e6],0x1        # 0x44d878
  40a392:	jmp    0x4090a0
  40a397:	nop    WORD PTR [rax+rax*1+0x0]
  40a3a0:	call   0x403a80
  40a3a5:	test   rax,rax
  40a3a8:	je     0x4091e5
  40a3ae:	call   0x404000
  40a3b3:	jmp    0x40a083
  40a3b8:	lea    rdi,[rip+0x27fdf]        # 0x43239e
  40a3bf:	mov    ecx,0x6
  40a3c4:	mov    rsi,rbx
  40a3c7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a3c9:	je     0x40a5b9
  40a3cf:	mov    rax,QWORD PTR [rax+0x178]
  40a3d6:	test   rax,rax
  40a3d9:	je     0x40a3e5
  40a3db:	call   rax
  40a3dd:	test   eax,eax
  40a3df:	jne    0x40a7df
  40a3e5:	mov    BYTE PTR [rbx],0x0
  40a3e8:	jmp    0x408da4
  40a3ed:	lea    rdx,[rip+0x27c83]        # 0x432077
  40a3f4:	mov    rcx,rbx
  40a3f7:	call   0x42aab0
  40a3fc:	jmp    0x408da4
  40a401:	mov    esi,eax
  40a403:	mov    rdx,r12
  40a406:	mov    rcx,rdi
  40a409:	shr    esi,0x1f
  40a40c:	add    esi,eax
  40a40e:	sar    esi,1
  40a410:	mov    r8d,esi
  40a413:	call   0x41ce70
  40a418:	cmp    esi,eax
  40a41a:	jne    0x40943a
  40a420:	movsxd rsi,esi
  40a423:	mov    rcx,rbx
  40a426:	mov    BYTE PTR [r12+rsi*1],0x0
  40a42b:	call   0x405bc0
  40a430:	mov    rax,QWORD PTR [rbp+0x0]
  40a434:	mov    rax,QWORD PTR [rax+0x158]
  40a43b:	test   rax,rax
  40a43e:	je     0x40a44d
  40a440:	mov    rcx,r12
  40a443:	call   rax
  40a445:	test   eax,eax
  40a447:	jne    0x409442
  40a44d:	lea    rdi,[rip+0x27f66]        # 0x4323ba
  40a454:	mov    ecx,0xc
  40a459:	mov    rsi,r12
  40a45c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a45e:	je     0x40a80e
  40a464:	lea    rdi,[rip+0x27d1b]        # 0x432186
  40a46b:	mov    ecx,0xc
  40a470:	mov    rsi,r12
  40a473:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a475:	je     0x40a82c
  40a47b:	lea    rdi,[rip+0x27d28]        # 0x4321aa
  40a482:	mov    ecx,0x16
  40a487:	mov    rsi,r12
  40a48a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a48c:	je     0x40a896
  40a492:	lea    rdi,[rip+0x27d4c]        # 0x4321e5
  40a499:	mov    ecx,0x16
  40a49e:	mov    rsi,r12
  40a4a1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4a3:	je     0x40a8cc
  40a4a9:	lea    rdi,[rip+0x27d76]        # 0x432226
  40a4b0:	mov    ecx,0x13
  40a4b5:	mov    rsi,r12
  40a4b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4ba:	je     0x40a8ea
  40a4c0:	lea    rdi,[rip+0x27d99]        # 0x432260
  40a4c7:	mov    ecx,0x13
  40a4cc:	mov    rsi,r12
  40a4cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4d1:	je     0x40a908
  40a4d7:	lea    rdi,[rip+0x27dbb]        # 0x432299
  40a4de:	mov    ecx,0x11
  40a4e3:	mov    rsi,r12
  40a4e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4e8:	je     0x40a926
  40a4ee:	lea    rdx,[rip+0x27db6]        # 0x4322ab
  40a4f5:	mov    rcx,r12
  40a4f8:	call   0x42a628
  40a4fd:	test   eax,eax
  40a4ff:	je     0x40aa57
  40a505:	lea    rdx,[rip+0x27da4]        # 0x4322b0
  40a50c:	mov    rcx,r12
  40a50f:	call   0x42a628
  40a514:	test   eax,eax
  40a516:	jne    0x40aa61
  40a51c:	mov    DWORD PTR [rip+0x4343a],0x1        # 0x44d960
  40a526:	jmp    0x409442
  40a52b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a530:	lea    rdi,[rip+0x27bab]        # 0x4320e2
  40a537:	mov    rsi,r8
  40a53a:	mov    ecx,0xe
  40a53f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a541:	jne    0x40a696
  40a547:	mov    rax,QWORD PTR [rbp+0x0]
  40a54b:	mov    rax,QWORD PTR [rax+0x140]
  40a552:	test   rax,rax
  40a555:	je     0x4090a0
  40a55b:	call   rax
  40a55d:	test   eax,eax
  40a55f:	je     0x4090a0
  40a565:	mov    DWORD PTR [rip+0x43305],0x1        # 0x44d874
  40a56f:	jmp    0x4090a0
  40a574:	mov    eax,0x30
  40a579:	mov    WORD PTR [rbx],ax
  40a57c:	jmp    0x40a330
  40a581:	sub    rax,rbp
  40a584:	lea    rdx,[rip+0x27df3]        # 0x43237e
  40a58b:	mov    rcx,rbx
  40a58e:	lea    r8d,[rax+r13*1]
  40a592:	call   0x42aab0
  40a597:	jmp    0x40a330
  40a59c:	mov    rcx,QWORD PTR [rsp+0x80]
  40a5a4:	call   0x40e950
  40a5a9:	mov    rcx,rbx
  40a5ac:	mov    rdx,rax
  40a5af:	call   0x42a620
  40a5b4:	jmp    0x408da4
  40a5b9:	movzx  edx,BYTE PTR [rbx+0x6]
  40a5bd:	lea    rsi,[rbx+0x6]
  40a5c1:	mov    rax,rsi
  40a5c4:	cmp    dl,0x3a
  40a5c7:	jne    0x40a5dc
  40a5c9:	jmp    0x40a5e0
  40a5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5d0:	add    rax,0x1
  40a5d4:	movzx  edx,BYTE PTR [rax]
  40a5d7:	cmp    dl,0x3a
  40a5da:	je     0x40a5e0
  40a5dc:	test   dl,dl
  40a5de:	jne    0x40a5d0
  40a5e0:	test   dl,dl
  40a5e2:	je     0x4091e5
  40a5e8:	movzx  edx,BYTE PTR [rax+0x1]
  40a5ec:	lea    r13,[rax+0x1]
  40a5f0:	mov    BYTE PTR [rax],0x0
  40a5f3:	mov    rax,r13
  40a5f6:	cmp    dl,0x3a
  40a5f9:	jne    0x40a60c
  40a5fb:	jmp    0x40a610
  40a5fd:	nop    DWORD PTR [rax]
  40a600:	add    rax,0x1
  40a604:	movzx  edx,BYTE PTR [rax]
  40a607:	cmp    dl,0x3a
  40a60a:	je     0x40a610
  40a60c:	test   dl,dl
  40a60e:	jne    0x40a600
  40a610:	test   dl,dl
  40a612:	je     0x4091e5
  40a618:	lea    rdi,[rax+0x1]
  40a61c:	mov    BYTE PTR [rax],0x0
  40a61f:	movzx  eax,BYTE PTR [rax+0x1]
  40a623:	mov    QWORD PTR [rsp+0x30],rdi
  40a628:	cmp    al,0x3a
  40a62a:	je     0x40a963
  40a630:	test   al,al
  40a632:	je     0x40a963
  40a638:	mov    rdx,rdi
  40a63b:	jmp    0x40a644
  40a63d:	nop    DWORD PTR [rax]
  40a640:	test   al,al
  40a642:	je     0x40a64f
  40a644:	add    rdx,0x1
  40a648:	movzx  eax,BYTE PTR [rdx]
  40a64b:	cmp    al,0x3a
  40a64d:	jne    0x40a640
  40a64f:	test   al,al
  40a651:	je     0x4091e5
  40a657:	lea    rax,[rdx+0x1]
  40a65b:	lea    rdi,[rip+0x28d9e]        # 0x433400
  40a662:	mov    BYTE PTR [rdx],0x0
  40a665:	xor    r14d,r14d
  40a668:	mov    QWORD PTR [rsp+0x38],rax
  40a66d:	nop    DWORD PTR [rax]
  40a670:	mov    rdx,QWORD PTR [rdi]
  40a673:	mov    rcx,rsi
  40a676:	call   0x42a628
  40a67b:	test   eax,eax
  40a67d:	je     0x40a6fc
  40a67f:	add    r14d,0x1
  40a683:	add    rdi,0x10
  40a687:	cmp    r14d,0xe
  40a68b:	jne    0x40a670
  40a68d:	mov    rax,QWORD PTR [rbp+0x0]
  40a691:	jmp    0x40a3cf
  40a696:	lea    rdi,[rip+0x27a53]        # 0x4320f0
  40a69d:	mov    ecx,0xd
  40a6a2:	mov    rsi,r8
  40a6a5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a6a7:	jne    0x40a6d6
  40a6a9:	mov    rax,QWORD PTR [rbp+0x0]
  40a6ad:	mov    rax,QWORD PTR [rax+0x148]
  40a6b4:	test   rax,rax
  40a6b7:	je     0x4090a0
  40a6bd:	call   rax
  40a6bf:	test   eax,eax
  40a6c1:	je     0x4090a0
  40a6c7:	mov    DWORD PTR [rip+0x4319f],0x1        # 0x44d870
  40a6d1:	jmp    0x4090a0
  40a6d6:	lea    rdi,[rip+0x27a20]        # 0x4320fd
  40a6dd:	mov    ecx,0x10
  40a6e2:	mov    rsi,r8
  40a6e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a6e7:	jne    0x40a84a
  40a6ed:	mov    DWORD PTR [rip+0x43261],0x1        # 0x44d958
  40a6f7:	jmp    0x4090a0
  40a6fc:	lea    rdi,[rip+0x27ca2]        # 0x4323a5
  40a703:	mov    ecx,0x5
  40a708:	mov    rsi,r13
  40a70b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a70d:	je     0x40a96d
  40a713:	lea    rdx,[rip+0x27c90]        # 0x4323aa
  40a71a:	mov    rcx,r13
  40a71d:	call   0x42a628
  40a722:	test   eax,eax
  40a724:	jne    0x40a68d
  40a72a:	mov    rdi,rbx
  40a72d:	sub    rdi,QWORD PTR [rsp+0x38]
  40a732:	movsxd rcx,r15d
  40a735:	mov    DWORD PTR [rbx],0x303045
  40a73b:	add    rcx,rdi
  40a73e:	call   0x423010
  40a743:	test   rax,rax
  40a746:	mov    rsi,rax
  40a749:	je     0x4091e5
  40a74f:	mov    rcx,QWORD PTR [rsp+0x38]
  40a754:	lea    edx,[r15+rdi*1]
  40a758:	lea    r9,[rsp+0x80]
  40a760:	lea    r8,[rsp+0x90]
  40a768:	mov    QWORD PTR [rsp+0x20],rax
  40a76d:	call   0x406610
  40a772:	test   eax,eax
  40a774:	js     0x4091dd
  40a77a:	mov    edi,DWORD PTR [rsp+0x80]
  40a781:	movsxd rax,r14d
  40a784:	mov    r8,rsi
  40a787:	shl    rax,0x4
  40a78b:	xor    edx,edx
  40a78d:	mov    r9,QWORD PTR [rsp+0x90]
  40a795:	mov    rcx,QWORD PTR [rsp+0x30]
  40a79a:	mov    QWORD PTR [rsp+0x20],rdi
  40a79f:	lea    rdi,[rip+0x28c5a]        # 0x433400
  40a7a6:	call   QWORD PTR [rdi+rax*1+0x8]
  40a7aa:	cmp    eax,0xfffffffe
  40a7ad:	mov    r8d,eax
  40a7b0:	je     0x40aaaf
  40a7b6:	cmp    eax,0xfffffffd
  40a7b9:	je     0x40a7d2
  40a7bb:	test   eax,eax
  40a7bd:	js     0x40aad1
  40a7c3:	lea    rdx,[rip+0x27be6]        # 0x4323b0
  40a7ca:	mov    rcx,rbx
  40a7cd:	call   0x42aab0
  40a7d2:	mov    rcx,rsi
  40a7d5:	call   0x42a6c8
  40a7da:	jmp    0x408da4
  40a7df:	mov    rcx,rbx
  40a7e2:	call   0x4183a0
  40a7e7:	test   eax,eax
  40a7e9:	jne    0x408da4
  40a7ef:	jmp    0x40a3e5
  40a7f4:	or     edi,0xffffffff
  40a7f7:	lea    rdx,[rip+0x27b9b]        # 0x432399
  40a7fe:	mov    r8d,edi
  40a801:	mov    rcx,rbx
  40a804:	call   0x42aab0
  40a809:	jmp    0x408da4
  40a80e:	mov    rax,QWORD PTR [rip+0x3bc5b]        # 0x446470
  40a815:	lea    rcx,[rip+0x27953]        # 0x43216f
  40a81c:	mov    DWORD PTR [rax],0x1
  40a822:	call   0x406c40
  40a827:	jmp    0x409442
  40a82c:	mov    rax,QWORD PTR [rip+0x3bc3d]        # 0x446470
  40a833:	lea    rcx,[rip+0x27958]        # 0x432192
  40a83a:	mov    DWORD PTR [rax],0x0
  40a840:	call   0x406c40
  40a845:	jmp    0x409442
  40a84a:	lea    rdx,[rip+0x278bc]        # 0x43210d
  40a851:	mov    rcx,r8
  40a854:	mov    QWORD PTR [rsp+0x40],r8
  40a859:	call   0x42a628
  40a85e:	test   eax,eax
  40a860:	mov    r8,QWORD PTR [rsp+0x40]
  40a865:	je     0x4090a0
  40a86b:	lea    rdx,[rip+0x278aa]        # 0x43211c
  40a872:	mov    rcx,r8
  40a875:	call   0x42a628
  40a87a:	test   eax,eax
  40a87c:	mov    r8,QWORD PTR [rsp+0x40]
  40a881:	jne    0x40aa37
  40a887:	mov    DWORD PTR [rip+0x430cb],0x1        # 0x44d95c
  40a891:	jmp    0x4090a0
  40a896:	mov    rax,QWORD PTR [rip+0x3bd83]        # 0x446620
  40a89d:	lea    rcx,[rip+0x2791c]        # 0x4321c0
  40a8a4:	mov    DWORD PTR [rax],0x1
  40a8aa:	call   0x406c40
  40a8af:	jmp    0x409442
  40a8b4:	mov    edx,DWORD PTR [rsp+0x38]
  40a8b8:	lea    rcx,[rip+0x27a79]        # 0x432338
  40a8bf:	mov    r8d,r13d
  40a8c2:	call   0x41d110
  40a8c7:	jmp    0x40a328
  40a8cc:	mov    rax,QWORD PTR [rip+0x3bd4d]        # 0x446620
  40a8d3:	lea    rcx,[rip+0x27926]        # 0x432200
  40a8da:	mov    DWORD PTR [rax],0x0
  40a8e0:	call   0x406c40
  40a8e5:	jmp    0x409442
  40a8ea:	mov    rax,QWORD PTR [rip+0x3bcbf]        # 0x4465b0
  40a8f1:	lea    rcx,[rip+0x27948]        # 0x432240
  40a8f8:	mov    DWORD PTR [rax],0x1
  40a8fe:	call   0x406c40
  40a903:	jmp    0x409442
  40a908:	mov    rax,QWORD PTR [rip+0x3bca1]        # 0x4465b0
  40a90f:	lea    rcx,[rip+0x27962]        # 0x432278
  40a916:	mov    DWORD PTR [rax],0x0
  40a91c:	call   0x406c40
  40a921:	jmp    0x409442
  40a926:	lea    rcx,[r12+0x11]
  40a92b:	mov    edx,0x1
  40a930:	call   0x407150
  40a935:	test   rax,rax
  40a938:	mov    rsi,rax
  40a93b:	je     0x409442
  40a941:	mov    rcx,rax
  40a944:	call   0x406c40
  40a949:	call   0x4070a0
  40a94e:	mov    rcx,rbx
  40a951:	call   0x405bd0
  40a956:	mov    rcx,rsi
  40a959:	call   0x41a7c0
  40a95e:	jmp    0x409442
  40a963:	mov    rdx,QWORD PTR [rsp+0x30]
  40a968:	jmp    0x40a64f
  40a96d:	mov    rcx,QWORD PTR [rsp+0x38]
  40a972:	lea    rdx,[rsp+0x90]
  40a97a:	lea    r8,[rsp+0x78]
  40a97f:	call   0x406330
  40a984:	cmp    DWORD PTR [rsp+0x78],0x3ffe
  40a98c:	jbe    0x40a996
  40a98e:	mov    DWORD PTR [rsp+0x78],0x3ffe
  40a996:	mov    eax,DWORD PTR [rsp+0x78]
  40a99a:	lea    ecx,[rax+0x1]
  40a99d:	call   0x423010
  40a9a2:	test   rax,rax
  40a9a5:	mov    rsi,rax
  40a9a8:	je     0x4091e5
  40a9ae:	mov    edi,DWORD PTR [rsp+0x78]
  40a9b2:	movsxd rax,r14d
  40a9b5:	xor    r8d,r8d
  40a9b8:	shl    rax,0x4
  40a9bc:	mov    r9,QWORD PTR [rsp+0x90]
  40a9c4:	mov    rdx,rsi
  40a9c7:	mov    rcx,QWORD PTR [rsp+0x30]
  40a9cc:	add    edi,0x1
  40a9cf:	mov    QWORD PTR [rsp+0x20],rdi
  40a9d4:	lea    rdi,[rip+0x28a25]        # 0x433400
  40a9db:	call   QWORD PTR [rdi+rax*1+0x8]
  40a9df:	cmp    eax,0xfffffffe
  40a9e2:	je     0x40aaaf
  40a9e8:	cmp    eax,0xfffffffd
  40a9eb:	je     0x40a7d2
  40a9f1:	test   eax,eax
  40a9f3:	js     0x40aad1
  40a9f9:	mov    edx,DWORD PTR [rsp+0x78]
  40a9fd:	cmp    eax,edx
  40a9ff:	jbe    0x40aa77
  40aa01:	lea    rax,[rsp+0x80]
  40aa09:	lea    r9,[rbx+0x1]
  40aa0d:	mov    BYTE PTR [rbx],0x6d
  40aa10:	mov    r8d,0x1
  40aa16:	mov    DWORD PTR [rsp+0x28],0x3ffe
  40aa1e:	mov    rcx,rsi
  40aa21:	mov    QWORD PTR [rsp+0x20],rax
  40aa26:	call   0x41cf60
  40aa2b:	add    eax,0x1
  40aa2e:	mov    DWORD PTR [r12],eax
  40aa32:	jmp    0x40a7d2
  40aa37:	mov    edi,DWORD PTR [rsp+0x38]
  40aa3b:	mov    QWORD PTR [r14],0x0
  40aa42:	movsxd rax,edi
  40aa45:	mov    QWORD PTR [r12+rax*8],r8
  40aa49:	mov    eax,edi
  40aa4b:	add    eax,0x1
  40aa4e:	mov    DWORD PTR [rsp+0x38],eax
  40aa52:	jmp    0x4090a0
  40aa57:	call   0x4070a0
  40aa5c:	jmp    0x409442
  40aa61:	lea    rcx,[rip+0x2784d]        # 0x4322b5
  40aa68:	call   0x406c40
  40aa6d:	call   0x4070a0
  40aa72:	jmp    0x40943a
  40aa77:	lea    rdx,[rsp+0x80]
  40aa7f:	lea    r9,[rbx+0x1]
  40aa83:	mov    BYTE PTR [rbx],0x6c
  40aa86:	mov    r8d,0x1
  40aa8c:	mov    DWORD PTR [rsp+0x28],0x3ffe
  40aa94:	mov    rcx,rsi
  40aa97:	mov    QWORD PTR [rsp+0x20],rdx
  40aa9c:	mov    edx,eax
  40aa9e:	call   0x41cf60
  40aaa3:	add    eax,0x1
  40aaa6:	mov    DWORD PTR [r12],eax
  40aaaa:	jmp    0x40a7d2
  40aaaf:	mov    rcx,rsi
  40aab2:	call   0x42a6c8
  40aab7:	jmp    0x40a68d
  40aabc:	mov    rcx,QWORD PTR [rsp+0x30]
  40aac1:	xor    r8d,r8d
  40aac4:	mov    rdx,r14
  40aac7:	call   0x405790
  40aacc:	jmp    0x408ef9
  40aad1:	mov    rcx,rbx
  40aad4:	call   0x405bd0
  40aad9:	jmp    0x40a7d2
  40aade:	mov    rcx,r12
  40aae1:	call   0x42a6c8
  40aae6:	lea    rcx,[rip+0x277f3]        # 0x4322e0
  40aaed:	call   0x41d140
  40aaf2:	mov    rcx,r12
  40aaf5:	call   0x42a6c8
  40aafa:	lea    rcx,[rip+0x2780f]        # 0x432310
  40ab01:	call   0x41d140
  40ab06:	nop
  40ab07:	nop    WORD PTR [rax+rax*1+0x0]
  40ab10:	push   r12
  40ab12:	push   rbp
  40ab13:	push   rdi
  40ab14:	push   rsi
  40ab15:	push   rbx
  40ab16:	sub    rsp,0xd0
  40ab1d:	mov    rax,rcx
  40ab20:	lea    rcx,[rsp+0x30]
  40ab25:	mov    rbx,rdx
  40ab28:	mov    rdx,rax
  40ab2b:	call   0x403a70
  40ab30:	mov    rsi,QWORD PTR [rip+0x3bb29]        # 0x446660
  40ab37:	mov    rdx,QWORD PTR [rsi]
  40ab3a:	mov    rax,QWORD PTR [rdx+0x160]
  40ab41:	test   rax,rax
  40ab44:	je     0x40ac71
  40ab4a:	mov    rdx,QWORD PTR [rsp+0x30]
  40ab4f:	lea    rdi,[rsp+0x20]
  40ab54:	mov    rcx,rdi
  40ab57:	mov    QWORD PTR [rsp+0x20],rdx
  40ab5c:	mov    edx,DWORD PTR [rsp+0x38]
  40ab60:	mov    DWORD PTR [rsp+0x28],edx
  40ab64:	call   rax
  40ab66:	mov    ebp,eax
  40ab68:	mov    rax,QWORD PTR [rsi]
  40ab6b:	mov    rax,QWORD PTR [rax+0x248]
  40ab72:	test   rax,rax
  40ab75:	je     0x40ac30
  40ab7b:	mov    rdx,QWORD PTR [rsp+0x30]
  40ab80:	mov    rcx,rdi
  40ab83:	lea    r12,[rsp+0x60]
  40ab88:	mov    QWORD PTR [rsp+0x20],rdx
  40ab8d:	mov    edx,DWORD PTR [rsp+0x38]
  40ab91:	mov    DWORD PTR [rsp+0x28],edx
  40ab95:	call   rax
  40ab97:	mov    rsi,rax
  40ab9a:	mov    rax,QWORD PTR [rsp+0x30]
  40ab9f:	mov    rdx,rdi
  40aba2:	mov    rcx,r12
  40aba5:	mov    QWORD PTR [rsp+0x20],rax
  40abaa:	mov    eax,DWORD PTR [rsp+0x38]
  40abae:	mov    DWORD PTR [rsp+0x28],eax
  40abb2:	call   0x4056c0
  40abb7:	lea    rdx,[rip+0x2780e]        # 0x4323cc
  40abbe:	mov    r8,r12
  40abc1:	mov    rcx,rbx
  40abc4:	call   0x41b060
  40abc9:	cmp    ebp,0xffffffff
  40abcc:	je     0x40abf7
  40abce:	lea    rdi,[rsp+0x40]
  40abd3:	lea    rdx,[rip+0x27802]        # 0x4323dc
  40abda:	mov    r8d,ebp
  40abdd:	mov    rcx,rdi
  40abe0:	call   0x42aab0
  40abe5:	lea    rdx,[rip+0x277f3]        # 0x4323df
  40abec:	mov    r8,rdi
  40abef:	mov    rcx,rbx
  40abf2:	call   0x41b060
  40abf7:	test   rsi,rsi
  40abfa:	je     0x40ac0e
  40abfc:	lea    rdx,[rip+0x277e7]        # 0x4323ea
  40ac03:	mov    r8,rsi
  40ac06:	mov    rcx,rbx
  40ac09:	call   0x41b060
  40ac0e:	lea    rdx,[rip+0x277e0]        # 0x4323f5
  40ac15:	mov    rcx,rbx
  40ac18:	call   0x41b060
  40ac1d:	nop
  40ac1e:	add    rsp,0xd0
  40ac25:	pop    rbx
  40ac26:	pop    rsi
  40ac27:	pop    rdi
  40ac28:	pop    rbp
  40ac29:	pop    r12
  40ac2b:	ret    
  40ac2c:	nop    DWORD PTR [rax+0x0]
  40ac30:	mov    rax,QWORD PTR [rsp+0x30]
  40ac35:	lea    rsi,[rsp+0x60]
  40ac3a:	mov    rdx,rdi
  40ac3d:	mov    rcx,rsi
  40ac40:	mov    QWORD PTR [rsp+0x20],rax
  40ac45:	mov    eax,DWORD PTR [rsp+0x38]
  40ac49:	mov    DWORD PTR [rsp+0x28],eax
  40ac4d:	call   0x4056c0
  40ac52:	lea    rdx,[rip+0x27773]        # 0x4323cc
  40ac59:	mov    r8,rsi
  40ac5c:	mov    rcx,rbx
  40ac5f:	xor    esi,esi
  40ac61:	call   0x41b060
  40ac66:	cmp    ebp,0xffffffff
  40ac69:	jne    0x40abce
  40ac6f:	jmp    0x40ac0e
  40ac71:	mov    rax,QWORD PTR [rdx+0x248]
  40ac78:	test   rax,rax
  40ac7b:	je     0x40acd5
  40ac7d:	mov    rdx,QWORD PTR [rsp+0x30]
  40ac82:	lea    rbp,[rsp+0x20]
  40ac87:	lea    rdi,[rsp+0x60]
  40ac8c:	mov    rcx,rbp
  40ac8f:	mov    QWORD PTR [rsp+0x20],rdx
  40ac94:	mov    edx,DWORD PTR [rsp+0x38]
  40ac98:	mov    DWORD PTR [rsp+0x28],edx
  40ac9c:	call   rax
  40ac9e:	mov    rsi,rax
  40aca1:	mov    rax,QWORD PTR [rsp+0x30]
  40aca6:	mov    rdx,rbp
  40aca9:	mov    rcx,rdi
  40acac:	mov    QWORD PTR [rsp+0x20],rax
  40acb1:	mov    eax,DWORD PTR [rsp+0x38]
  40acb5:	mov    DWORD PTR [rsp+0x28],eax
  40acb9:	call   0x4056c0
  40acbe:	lea    rdx,[rip+0x27707]        # 0x4323cc
  40acc5:	mov    r8,rdi
  40acc8:	mov    rcx,rbx
  40accb:	call   0x41b060
  40acd0:	jmp    0x40abf7
  40acd5:	mov    rax,QWORD PTR [rsp+0x30]
  40acda:	lea    rsi,[rsp+0x60]
  40acdf:	lea    rdx,[rsp+0x20]
  40ace4:	mov    rcx,rsi
  40ace7:	mov    QWORD PTR [rsp+0x20],rax
  40acec:	mov    eax,DWORD PTR [rsp+0x38]
  40acf0:	mov    DWORD PTR [rsp+0x28],eax
  40acf4:	call   0x4056c0
  40acf9:	lea    rdx,[rip+0x276cc]        # 0x4323cc
  40ad00:	mov    r8,rsi
  40ad03:	mov    rcx,rbx
  40ad06:	call   0x41b060
  40ad0b:	jmp    0x40ac0e
  40ad10:	push   rbp
  40ad11:	push   rdi
  40ad12:	push   rsi
  40ad13:	push   rbx
  40ad14:	sub    rsp,0x28
  40ad18:	mov    rax,QWORD PTR [rdx]
  40ad1b:	mov    rsi,rdx
  40ad1e:	movabs rdx,0x617262696c3c2020
  40ad28:	mov    rdi,rcx
  40ad2b:	mov    QWORD PTR [rax],rdx
  40ad2e:	movabs rdx,0x3d656d616e207972
  40ad38:	lea    rbx,[rax+0x11]
  40ad3c:	mov    QWORD PTR [rax+0x8],rdx
  40ad40:	mov    edx,0x22
  40ad45:	mov    WORD PTR [rax+0x10],dx
  40ad49:	mov    rcx,QWORD PTR [rcx+0x18]
  40ad4d:	call   0x41a520
  40ad52:	mov    rcx,rbx
  40ad55:	mov    rdx,rax
  40ad58:	mov    rbp,rax
  40ad5b:	call   0x42a620
  40ad60:	mov    rcx,rbp
  40ad63:	call   0x42a6c8
  40ad68:	mov    rcx,rbx
  40ad6b:	call   0x42a610
  40ad70:	movabs rdx,0x656d6765733c3e22
  40ad7a:	add    rax,rbx
  40ad7d:	movabs rbx,0x657264646120746e
  40ad87:	mov    QWORD PTR [rax],rdx
  40ad8a:	mov    QWORD PTR [rax+0x8],rbx
  40ad8e:	lea    rbx,[rax+0x14]
  40ad92:	mov    DWORD PTR [rax+0x10],0x223d7373
  40ad99:	mov    BYTE PTR [rax+0x14],0x0
  40ad9d:	lea    rdx,[rip+0x27655]        # 0x4323f9
  40ada4:	mov    r8d,DWORD PTR [rdi+0x20]
  40ada8:	mov    rcx,rbx
  40adab:	movabs rdi,0x62696c2f3c3e2f22
  40adb5:	call   0x42aab0
  40adba:	mov    rcx,rbx
  40adbd:	call   0x42a610
  40adc2:	mov    ecx,0xa3e
  40adc7:	add    rax,rbx
  40adca:	mov    QWORD PTR [rax],rdi
  40adcd:	mov    DWORD PTR [rax+0x8],0x79726172
  40add4:	add    rax,0xe
  40add8:	mov    WORD PTR [rax-0x2],cx
  40addc:	mov    BYTE PTR [rax],0x0
  40addf:	mov    QWORD PTR [rsi],rax
  40ade2:	add    rsp,0x28
  40ade6:	pop    rbx
  40ade7:	pop    rsi
  40ade8:	pop    rdi
  40ade9:	pop    rbp
  40adea:	ret    
  40adeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	push   rsi
  40adf1:	push   rbx
  40adf2:	sub    rsp,0x38
  40adf6:	mov    rbx,rcx
  40adf9:	mov    ecx,0x10
  40adfe:	mov    rsi,rdx
  40ae01:	call   0x41a6e0
  40ae06:	test   rbx,rbx
  40ae09:	je     0x40ae3e
  40ae0b:	mov    rdx,QWORD PTR [rbx+0x8]
  40ae0f:	mov    QWORD PTR [rax+0x8],rsi
  40ae13:	mov    QWORD PTR [rax],0x0
  40ae1a:	test   rdx,rdx
  40ae1d:	je     0x40ae30
  40ae1f:	mov    QWORD PTR [rdx],rax
  40ae22:	mov    QWORD PTR [rbx+0x8],rax
  40ae26:	add    rsp,0x38
  40ae2a:	pop    rbx
  40ae2b:	pop    rsi
  40ae2c:	ret    
  40ae2d:	nop    DWORD PTR [rax]
  40ae30:	mov    QWORD PTR [rbx+0x8],rax
  40ae34:	mov    QWORD PTR [rbx],rax
  40ae37:	add    rsp,0x38
  40ae3b:	pop    rbx
  40ae3c:	pop    rsi
  40ae3d:	ret    
  40ae3e:	lea    rax,[rip+0x275ba]        # 0x4323ff
  40ae45:	lea    r9,[rip+0x284f4]        # 0x433340
  40ae4c:	lea    r8,[rip+0x2694d]        # 0x4317a0
  40ae53:	lea    rcx,[rip+0x26961]        # 0x4317bb
  40ae5a:	mov    edx,0x90
  40ae5f:	mov    QWORD PTR [rsp+0x20],rax
  40ae64:	call   0x41d170
  40ae69:	nop
  40ae6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae70:	push   rbx
  40ae71:	sub    rsp,0x30
  40ae75:	test   rcx,rcx
  40ae78:	je     0x40aeb4
  40ae7a:	mov    rdx,QWORD PTR [rcx]
  40ae7d:	test   rdx,rdx
  40ae80:	je     0x40aedf
  40ae82:	cmp    rdx,QWORD PTR [rcx+0x8]
  40ae86:	je     0x40aea3
  40ae88:	mov    rax,QWORD PTR [rdx]
  40ae8b:	mov    QWORD PTR [rcx],rax
  40ae8e:	mov    rbx,QWORD PTR [rdx+0x8]
  40ae92:	mov    rcx,rdx
  40ae95:	call   0x41a7c0
  40ae9a:	mov    rax,rbx
  40ae9d:	add    rsp,0x30
  40aea1:	pop    rbx
  40aea2:	ret    
  40aea3:	mov    QWORD PTR [rcx],0x0
  40aeaa:	mov    QWORD PTR [rcx+0x8],0x0
  40aeb2:	jmp    0x40ae8e
  40aeb4:	lea    rax,[rip+0x27544]        # 0x4323ff
  40aebb:	lea    r9,[rip+0x2841e]        # 0x4332e0
  40aec2:	lea    r8,[rip+0x268d7]        # 0x4317a0
  40aec9:	lea    rcx,[rip+0x268eb]        # 0x4317bb
  40aed0:	mov    edx,0x90
  40aed5:	mov    QWORD PTR [rsp+0x20],rax
  40aeda:	call   0x41d170
  40aedf:	lea    rax,[rip+0x27523]        # 0x432409
  40aee6:	lea    r9,[rip+0x283f3]        # 0x4332e0
  40aeed:	lea    r8,[rip+0x268ac]        # 0x4317a0
  40aef4:	lea    rcx,[rip+0x268c0]        # 0x4317bb
  40aefb:	mov    dl,0x90
  40aefd:	mov    QWORD PTR [rsp+0x20],rax
  40af02:	call   0x41d170
  40af07:	nop
  40af08:	nop    DWORD PTR [rax+rax*1+0x0]
  40af10:	sub    rsp,0x38
  40af14:	test   rcx,rcx
  40af17:	je     0x40af2a
  40af19:	mov    rax,QWORD PTR [rcx]
  40af1c:	test   rax,rax
  40af1f:	je     0x40af55
  40af21:	mov    rax,QWORD PTR [rax+0x8]
  40af25:	add    rsp,0x38
  40af29:	ret    
  40af2a:	lea    rax,[rip+0x274ce]        # 0x4323ff
  40af31:	lea    r9,[rip+0x28368]        # 0x4332a0
  40af38:	lea    r8,[rip+0x26861]        # 0x4317a0
  40af3f:	lea    rcx,[rip+0x26875]        # 0x4317bb
  40af46:	mov    QWORD PTR [rsp+0x20],rax
  40af4b:	mov    edx,0x90
  40af50:	call   0x41d170
  40af55:	lea    rax,[rip+0x274b7]        # 0x432413
  40af5c:	jmp    0x40af31
  40af5e:	xchg   ax,ax
  40af60:	sub    rsp,0x38
  40af64:	test   rcx,rcx
  40af67:	je     0x40af77
  40af69:	xor    eax,eax
  40af6b:	cmp    QWORD PTR [rcx],0x0
  40af6f:	sete   al
  40af72:	add    rsp,0x38
  40af76:	ret    
  40af77:	lea    rax,[rip+0x27481]        # 0x4323ff
  40af7e:	lea    r9,[rip+0x282db]        # 0x433260
  40af85:	lea    r8,[rip+0x26814]        # 0x4317a0
  40af8c:	lea    rcx,[rip+0x26828]        # 0x4317bb
  40af93:	mov    edx,0x90
  40af98:	mov    QWORD PTR [rsp+0x20],rax
  40af9d:	call   0x41d170
  40afa2:	nop
  40afa3:	nop    DWORD PTR [rax]
  40afa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afb0:	push   rbx
  40afb1:	sub    rsp,0x30
  40afb5:	test   rcx,rcx
  40afb8:	mov    rbx,rdx
  40afbb:	je     0x40b035
  40afbd:	test   rdx,rdx
  40afc0:	je     0x40b00a
  40afc2:	mov    rax,QWORD PTR [rdx]
  40afc5:	test   rax,rax
  40afc8:	je     0x40b00a
  40afca:	cmp    rax,QWORD PTR [rcx]
  40afcd:	je     0x40aff4
  40afcf:	cmp    rax,QWORD PTR [rcx+0x8]
  40afd3:	je     0x40b000
  40afd5:	mov    rcx,QWORD PTR [rax]
  40afd8:	mov    rdx,QWORD PTR [rdx+0x8]
  40afdc:	mov    QWORD PTR [rdx],rcx
  40afdf:	mov    rcx,rax
  40afe2:	call   0x41a7c0
  40afe7:	mov    QWORD PTR [rbx],0x0
  40afee:	add    rsp,0x30
  40aff2:	pop    rbx
  40aff3:	ret    
  40aff4:	cmp    rax,QWORD PTR [rcx+0x8]
  40aff8:	mov    rdx,QWORD PTR [rax]
  40affb:	mov    QWORD PTR [rcx],rdx
  40affe:	jne    0x40afdf
  40b000:	mov    rdx,QWORD PTR [rbx+0x8]
  40b004:	mov    QWORD PTR [rcx+0x8],rdx
  40b008:	jmp    0x40afdf
  40b00a:	lea    rax,[rip+0x27417]        # 0x432428
  40b011:	lea    r9,[rip+0x281e8]        # 0x433200
  40b018:	lea    r8,[rip+0x26781]        # 0x4317a0
  40b01f:	lea    rcx,[rip+0x26795]        # 0x4317bb
  40b026:	mov    QWORD PTR [rsp+0x20],rax
  40b02b:	mov    edx,0x90
  40b030:	call   0x41d170
  40b035:	lea    rax,[rip+0x273c3]        # 0x4323ff
  40b03c:	jmp    0x40b011
  40b03e:	xchg   ax,ax
  40b040:	push   rdi
  40b041:	push   rsi
  40b042:	push   rbx
  40b043:	sub    rsp,0x50
  40b047:	mov    eax,DWORD PTR [r9+0x8]
  40b04b:	mov    rsi,rcx
  40b04e:	mov    rcx,QWORD PTR [r8+0x4]
  40b052:	mov    rdi,rdx
  40b055:	mov    rdx,QWORD PTR [r9]
  40b058:	mov    rbx,r8
  40b05b:	mov    DWORD PTR [rsp+0x28],eax
  40b05f:	mov    QWORD PTR [rsp+0x30],rcx
  40b064:	mov    ecx,DWORD PTR [r8+0xc]
  40b068:	mov    QWORD PTR [rsp+0x20],rdx
  40b06d:	lea    rdx,[rsp+0x20]
  40b072:	mov    DWORD PTR [rsp+0x38],ecx
  40b076:	lea    rcx,[rsp+0x30]
  40b07b:	call   0x41aec0
  40b080:	test   eax,eax
  40b082:	je     0x40b09d
  40b084:	mov    rax,QWORD PTR [rsi+0x10]
  40b088:	test   rax,rax
  40b08b:	je     0x40b092
  40b08d:	mov    rcx,rbx
  40b090:	call   rax
  40b092:	mov    rdx,rdi
  40b095:	mov    rcx,rsi
  40b098:	call   0x40afb0
  40b09d:	mov    eax,0x1
  40b0a2:	add    rsp,0x50
  40b0a6:	pop    rbx
  40b0a7:	pop    rsi
  40b0a8:	pop    rdi
  40b0a9:	ret    
  40b0aa:	nop    WORD PTR [rax+rax*1+0x0]
  40b0b0:	push   r12
  40b0b2:	push   rbp
  40b0b3:	push   rdi
  40b0b4:	push   rsi
  40b0b5:	push   rbx
  40b0b6:	sub    rsp,0x40
  40b0ba:	test   rcx,rcx
  40b0bd:	mov    rsi,rcx
  40b0c0:	mov    rbp,rdx
  40b0c3:	mov    r12,r8
  40b0c6:	mov    QWORD PTR [rsp+0x30],0x0
  40b0cf:	mov    QWORD PTR [rsp+0x38],0x0
  40b0d8:	je     0x40b140
  40b0da:	mov    rax,QWORD PTR [rcx]
  40b0dd:	lea    rdi,[rsp+0x30]
  40b0e2:	test   rax,rax
  40b0e5:	mov    QWORD PTR [rsp+0x30],rax
  40b0ea:	jne    0x40b10c
  40b0ec:	jmp    0x40b130
  40b0ee:	xchg   ax,ax
  40b0f0:	mov    rax,QWORD PTR [rsp+0x30]
  40b0f5:	test   rax,rax
  40b0f8:	je     0x40b0ff
  40b0fa:	mov    QWORD PTR [rsp+0x38],rax
  40b0ff:	test   rbx,rbx
  40b102:	mov    QWORD PTR [rsp+0x30],rbx
  40b107:	mov    rax,rbx
  40b10a:	je     0x40b130
  40b10c:	mov    rbx,QWORD PTR [rax]
  40b10f:	mov    r9,r12
  40b112:	mov    r8,QWORD PTR [rax+0x8]
  40b116:	mov    rdx,rdi
  40b119:	mov    rcx,rsi
  40b11c:	call   rbp
  40b11e:	test   eax,eax
  40b120:	jne    0x40b0f0
  40b122:	add    rsp,0x40
  40b126:	pop    rbx
  40b127:	pop    rsi
  40b128:	pop    rdi
  40b129:	pop    rbp
  40b12a:	pop    r12
  40b12c:	ret    
  40b12d:	nop    DWORD PTR [rax]
  40b130:	mov    eax,0x1
  40b135:	add    rsp,0x40
  40b139:	pop    rbx
  40b13a:	pop    rsi
  40b13b:	pop    rdi
  40b13c:	pop    rbp
  40b13d:	pop    r12
  40b13f:	ret    
  40b140:	lea    rax,[rip+0x272b8]        # 0x4323ff
  40b147:	lea    r9,[rip+0x27ff2]        # 0x433140
  40b14e:	lea    r8,[rip+0x2664b]        # 0x4317a0
  40b155:	lea    rcx,[rip+0x2665f]        # 0x4317bb
  40b15c:	mov    edx,0x90
  40b161:	mov    QWORD PTR [rsp+0x20],rax
  40b166:	call   0x41d170
  40b16b:	nop
  40b16c:	nop    DWORD PTR [rax+0x0]
  40b170:	push   rsi
  40b171:	push   rbx
  40b172:	sub    rsp,0x58
  40b176:	mov    rax,QWORD PTR [rcx]
  40b179:	mov    rbx,rcx
  40b17c:	mov    QWORD PTR [rsp+0x20],rax
  40b181:	mov    eax,DWORD PTR [rcx+0x8]
  40b184:	lea    rcx,[rsp+0x20]
  40b189:	mov    DWORD PTR [rsp+0x28],eax
  40b18d:	call   0x41ad20
  40b192:	mov    esi,eax
  40b194:	mov    eax,DWORD PTR [rbx+0x18]
  40b197:	test   eax,eax
  40b199:	jne    0x40b1e0
  40b19b:	mov    ecx,esi
  40b19d:	call   0x40e420
  40b1a2:	lea    rcx,[rsp+0x30]
  40b1a7:	mov    edx,esi
  40b1a9:	call   0x41ad00
  40b1ae:	mov    rax,QWORD PTR [rsp+0x30]
  40b1b3:	mov    rcx,QWORD PTR [rip+0x20e96]        # 0x42c050
  40b1ba:	lea    r8,[rsp+0x40]
  40b1bf:	lea    rdx,[rip+0xfffffffffffffe7a]        # 0x40b040
  40b1c6:	mov    QWORD PTR [rsp+0x40],rax
  40b1cb:	mov    eax,DWORD PTR [rsp+0x38]
  40b1cf:	mov    DWORD PTR [rsp+0x48],eax
  40b1d3:	call   0x40b0b0
  40b1d8:	nop
  40b1d9:	add    rsp,0x58
  40b1dd:	pop    rbx
  40b1de:	pop    rsi
  40b1df:	ret    
  40b1e0:	mov    rax,QWORD PTR [rip+0x3b479]        # 0x446660
  40b1e7:	mov    ecx,esi
  40b1e9:	mov    rax,QWORD PTR [rax]
  40b1ec:	call   QWORD PTR [rax+0x20]
  40b1ef:	jmp    0x40b1a2
  40b1f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b200:	push   rbx
  40b201:	sub    rsp,0x50
  40b205:	mov    rax,QWORD PTR [rcx]
  40b208:	mov    QWORD PTR [rsp+0x20],rax
  40b20d:	mov    eax,DWORD PTR [rcx+0x8]
  40b210:	lea    rcx,[rsp+0x20]
  40b215:	mov    DWORD PTR [rsp+0x28],eax
  40b219:	call   0x41ad20
  40b21e:	mov    ecx,eax
  40b220:	mov    ebx,eax
  40b222:	call   0x40e420
  40b227:	lea    rcx,[rsp+0x30]
  40b22c:	mov    edx,ebx
  40b22e:	call   0x41ad00
  40b233:	mov    rax,QWORD PTR [rsp+0x30]
  40b238:	mov    rcx,QWORD PTR [rip+0x20e11]        # 0x42c050
  40b23f:	lea    r8,[rsp+0x40]
  40b244:	lea    rdx,[rip+0xfffffffffffffdf5]        # 0x40b040
  40b24b:	mov    QWORD PTR [rsp+0x40],rax
  40b250:	mov    eax,DWORD PTR [rsp+0x38]
  40b254:	mov    DWORD PTR [rsp+0x48],eax
  40b258:	call   0x40b0b0
  40b25d:	nop
  40b25e:	add    rsp,0x50
  40b262:	pop    rbx
  40b263:	ret    
  40b264:	xchg   ax,ax
  40b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b270:	push   rbx
  40b271:	sub    rsp,0x20
  40b275:	mov    rbx,rcx
  40b278:	mov    ecx,0x18
  40b27d:	call   0x41a6e0
  40b282:	mov    QWORD PTR [rax],0x0
  40b289:	mov    QWORD PTR [rax+0x8],0x0
  40b291:	mov    QWORD PTR [rax+0x10],rbx
  40b295:	add    rsp,0x20
  40b299:	pop    rbx
  40b29a:	ret    
  40b29b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2a0:	sub    rsp,0x38
  40b2a4:	test   rcx,rcx
  40b2a7:	je     0x40b2c3
  40b2a9:	mov    rdx,QWORD PTR [rcx]
  40b2ac:	xor    eax,eax
  40b2ae:	test   rdx,rdx
  40b2b1:	je     0x40b2be
  40b2b3:	mov    rdx,QWORD PTR [rdx]
  40b2b6:	add    eax,0x1
  40b2b9:	test   rdx,rdx
  40b2bc:	jne    0x40b2b3
  40b2be:	add    rsp,0x38
  40b2c2:	ret    
  40b2c3:	lea    rax,[rip+0x27135]        # 0x4323ff
  40b2ca:	lea    r9,[rip+0x27e0f]        # 0x4330e0
  40b2d1:	lea    r8,[rip+0x264c8]        # 0x4317a0
  40b2d8:	lea    rcx,[rip+0x264dc]        # 0x4317bb
  40b2df:	mov    edx,0x90
  40b2e4:	mov    QWORD PTR [rsp+0x20],rax
  40b2e9:	call   0x41d170
  40b2ee:	nop
  40b2ef:	nop
  40b2f0:	push   rdi
  40b2f1:	push   rsi
  40b2f2:	push   rbx
  40b2f3:	sub    rsp,0x30
  40b2f7:	test   rcx,rcx
  40b2fa:	mov    rdi,rcx
  40b2fd:	je     0x40b341
  40b2ff:	mov    rbx,QWORD PTR [rcx]
  40b302:	test   rbx,rbx
  40b305:	je     0x40b332
  40b307:	nop    WORD PTR [rax+rax*1+0x0]
  40b310:	mov    rax,QWORD PTR [rdi+0x10]
  40b314:	mov    rsi,QWORD PTR [rbx]
  40b317:	test   rax,rax
  40b31a:	je     0x40b322
  40b31c:	mov    rcx,QWORD PTR [rbx+0x8]
  40b320:	call   rax
  40b322:	mov    rcx,rbx
  40b325:	mov    rbx,rsi
  40b328:	call   0x41a7c0
  40b32d:	test   rsi,rsi
  40b330:	jne    0x40b310
  40b332:	mov    rcx,rdi
  40b335:	add    rsp,0x30
  40b339:	pop    rbx
  40b33a:	pop    rsi
  40b33b:	pop    rdi
  40b33c:	jmp    0x41a7c0
  40b341:	lea    rax,[rip+0x270b7]        # 0x4323ff
  40b348:	lea    r9,[rip+0x27d51]        # 0x4330a0
  40b34f:	lea    r8,[rip+0x2644a]        # 0x4317a0
  40b356:	lea    rcx,[rip+0x2645e]        # 0x4317bb
  40b35d:	mov    edx,0x90
  40b362:	mov    QWORD PTR [rsp+0x20],rax
  40b367:	call   0x41d170
  40b36c:	nop
  40b36d:	nop    DWORD PTR [rax]
  40b370:	sub    rsp,0x28
  40b374:	lea    rdx,[rip+0xfffffffffffffcc5]        # 0x40b040
  40b37b:	mov    r8,rcx
  40b37e:	mov    rcx,QWORD PTR [rip+0x20ccb]        # 0x42c050
  40b385:	call   0x40b0b0
  40b38a:	nop
  40b38b:	add    rsp,0x28
  40b38f:	ret    
  40b390:	push   r15
  40b392:	push   r14
  40b394:	push   r13
  40b396:	push   r12
  40b398:	push   rbp
  40b399:	push   rdi
  40b39a:	push   rsi
  40b39b:	push   rbx
  40b39c:	sub    rsp,0x98
  40b3a3:	mov    r12d,DWORD PTR [rip+0x41faa]        # 0x44d354
  40b3aa:	mov    rbx,rcx
  40b3ad:	mov    ebp,edx
  40b3af:	test   r12d,r12d
  40b3b2:	jne    0x40b3f9
  40b3b4:	lea    rdi,[rip+0x2708d]        # 0x432448
  40b3bb:	mov    ecx,0x7
  40b3c0:	mov    rsi,rbx
  40b3c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b3c5:	je     0x40b6f0
  40b3cb:	lea    rdi,[rip+0x2707d]        # 0x43244f
  40b3d2:	mov    ecx,0x6
  40b3d7:	mov    rsi,rbx
  40b3da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b3dc:	je     0x40b7e0
  40b3e2:	lea    rdi,[rip+0x2706d]        # 0x432456
  40b3e9:	mov    ecx,0x6
  40b3ee:	mov    rsi,rbx
  40b3f1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b3f3:	je     0x40b710
  40b3f9:	lea    rdi,[rip+0x2705d]        # 0x43245d
  40b400:	mov    ecx,0x6
  40b405:	mov    rsi,rbx
  40b408:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b40a:	je     0x40b610
  40b410:	lea    rdi,[rip+0x2706e]        # 0x432485
  40b417:	mov    ecx,0x8
  40b41c:	mov    rsi,rbx
  40b41f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b421:	jne    0x40b480
  40b423:	mov    esi,DWORD PTR [rip+0x4253f]        # 0x44d968
  40b429:	test   esi,esi
  40b42b:	je     0x40b7a0
  40b431:	mov    r11d,DWORD PTR [rip+0x42444]        # 0x44d87c
  40b438:	test   r11d,r11d
  40b43b:	je     0x40b7a0
  40b441:	lea    rcx,[rbx+0x8]
  40b445:	xor    edx,edx
  40b447:	mov    r8d,0x10
  40b44d:	call   0x42a5e8
  40b452:	test   eax,eax
  40b454:	jne    0x40bbf1
  40b45a:	mov    rcx,rbx
  40b45d:	call   0x405bd0
  40b462:	nop
  40b463:	add    rsp,0x98
  40b46a:	pop    rbx
  40b46b:	pop    rsi
  40b46c:	pop    rdi
  40b46d:	pop    rbp
  40b46e:	pop    r12
  40b470:	pop    r13
  40b472:	pop    r14
  40b474:	pop    r15
  40b476:	ret    
  40b477:	nop    WORD PTR [rax+rax*1+0x0]
  40b480:	lea    rdi,[rip+0x26fdd]        # 0x432464
  40b487:	mov    ecx,0x5
  40b48c:	mov    rsi,rbx
  40b48f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b491:	jne    0x40b630
  40b497:	mov    r10d,DWORD PTR [rip+0x424ca]        # 0x44d968
  40b49e:	test   r10d,r10d
  40b4a1:	je     0x40b7d1
  40b4a7:	mov    r9d,DWORD PTR [rip+0x423ce]        # 0x44d87c
  40b4ae:	test   r9d,r9d
  40b4b1:	je     0x40b7d1
  40b4b7:	mov    r12,rbx
  40b4ba:	add    r12,0x5
  40b4be:	je     0x40bcb0
  40b4c4:	xor    esi,esi
  40b4c6:	cmp    BYTE PTR [rbx+0x5],0x0
  40b4ca:	mov    rax,r12
  40b4cd:	jne    0x40b4d9
  40b4cf:	jmp    0x40bcb0
  40b4d4:	cmp    BYTE PTR [rax],0x0
  40b4d7:	je     0x40b4ef
  40b4d9:	lea    rcx,[rax+0x1]
  40b4dd:	mov    edx,0x3b
  40b4e2:	add    esi,0x1
  40b4e5:	call   0x42a630
  40b4ea:	test   rax,rax
  40b4ed:	jne    0x40b4d4
  40b4ef:	lea    ecx,[rsi+0x2]
  40b4f2:	movsxd rcx,ecx
  40b4f5:	mov    edx,0x8
  40b4fa:	call   0x42a710
  40b4ff:	test   rax,rax
  40b502:	mov    rbp,rax
  40b505:	je     0x40b45a
  40b50b:	cmp    BYTE PTR [rbx+0x5],0x0
  40b50f:	je     0x40bca9
  40b515:	mov    r14,rax
  40b518:	xor    edi,edi
  40b51a:	nop    WORD PTR [rax+rax*1+0x0]
  40b520:	mov    edx,0x3b
  40b525:	mov    rcx,r12
  40b528:	call   0x42a630
  40b52d:	test   rax,rax
  40b530:	mov    rsi,rax
  40b533:	je     0x40bbe0
  40b539:	cmp    r12,rsi
  40b53c:	jne    0x40bba0
  40b542:	test   edi,edi
  40b544:	jne    0x40bba0
  40b54a:	mov    QWORD PTR [rbp+0x0],0x0
  40b552:	cmp    BYTE PTR [rsi],0x0
  40b555:	je     0x40bb90
  40b55b:	add    edi,0x1
  40b55e:	add    r14,0x8
  40b562:	cmp    BYTE PTR [rsi+0x1],0x0
  40b566:	lea    r12,[rsi+0x1]
  40b56a:	jne    0x40b520
  40b56c:	nop    DWORD PTR [rax+0x0]
  40b570:	movsxd rdi,edi
  40b573:	shl    rdi,0x3
  40b577:	mov    QWORD PTR [rbp+rdi*1+0x0],0x0
  40b580:	cmp    QWORD PTR [rbp+0x0],0x0
  40b585:	mov    rsi,QWORD PTR [rip+0x423c4]        # 0x44d950
  40b58c:	je     0x40bc4a
  40b592:	mov    rcx,rsi
  40b595:	call   0x423ae0
  40b59a:	mov    rcx,rbp
  40b59d:	mov    QWORD PTR [rip+0x423ac],rbp        # 0x44d950
  40b5a4:	call   0x408310
  40b5a9:	cmp    DWORD PTR [rip+0x42380],0x1        # 0x44d930
  40b5b0:	jne    0x40b45a
  40b5b6:	mov    rax,QWORD PTR [rip+0x4235b]        # 0x44d918
  40b5bd:	lea    r8,[rip+0x4236c]        # 0x44d930
  40b5c4:	lea    rdx,[rsp+0x60]
  40b5c9:	mov    rcx,rbx
  40b5cc:	mov    QWORD PTR [rsp+0x60],rax
  40b5d1:	mov    eax,DWORD PTR [rip+0x42349]        # 0x44d920
  40b5d7:	mov    DWORD PTR [rsp+0x68],eax
  40b5db:	call   0x405be0
  40b5e0:	mov    r8d,DWORD PTR [rip+0x42281]        # 0x44d868
  40b5e7:	test   r8d,r8d
  40b5ea:	je     0x40b463
  40b5f0:	mov    rax,QWORD PTR [rip+0x42321]        # 0x44d918
  40b5f7:	mov    QWORD PTR [rip+0x4228a],rax        # 0x44d888
  40b5fe:	mov    eax,DWORD PTR [rip+0x4231c]        # 0x44d920
  40b604:	mov    DWORD PTR [rip+0x42286],eax        # 0x44d890
  40b60a:	jmp    0x40b463
  40b60f:	nop
  40b610:	mov    edx,ebp
  40b612:	mov    rcx,rbx
  40b615:	call   0x411af0
  40b61a:	test   eax,eax
  40b61c:	je     0x40b410
  40b622:	jmp    0x40b463
  40b627:	nop    WORD PTR [rax+rax*1+0x0]
  40b630:	lea    rdi,[rip+0x26e33]        # 0x43246a
  40b637:	mov    ecx,0x6
  40b63c:	mov    rsi,rbx
  40b63f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b641:	jne    0x40bb10
  40b647:	call   0x403a80
  40b64c:	test   rax,rax
  40b64f:	je     0x40bb75
  40b655:	mov    ecx,DWORD PTR [rip+0x42221]        # 0x44d87c
  40b65b:	mov    esi,DWORD PTR [rip+0x41cf7]        # 0x44d358
  40b661:	test   ecx,ecx
  40b663:	jne    0x40bc79
  40b669:	test   esi,esi
  40b66b:	je     0x40b45a
  40b671:	mov    ecx,esi
  40b673:	call   0x40e420
  40b678:	test   eax,eax
  40b67a:	jne    0x40b45a
  40b680:	lea    rcx,[rsp+0x60]
  40b685:	mov    edx,esi
  40b687:	mov    DWORD PTR [rip+0x4229f],0x2        # 0x44d930
  40b691:	mov    DWORD PTR [rip+0x4229d],0x9        # 0x44d938
  40b69b:	call   0x41ad00
  40b6a0:	mov    rdx,QWORD PTR [rsp+0x60]
  40b6a5:	mov    eax,DWORD PTR [rsp+0x68]
  40b6a9:	lea    r8,[rsp+0x80]
  40b6b1:	mov    rcx,QWORD PTR [rip+0x20998]        # 0x42c050
  40b6b8:	mov    QWORD PTR [rip+0x42259],rdx        # 0x44d918
  40b6bf:	mov    QWORD PTR [rsp+0x80],rdx
  40b6c7:	lea    rdx,[rip+0xfffffffffffff972]        # 0x40b040
  40b6ce:	mov    DWORD PTR [rip+0x4224c],eax        # 0x44d920
  40b6d4:	mov    DWORD PTR [rsp+0x88],eax
  40b6db:	call   0x40b0b0
  40b6e0:	mov    rcx,rbx
  40b6e3:	call   0x405bc0
  40b6e8:	jmp    0x40b463
  40b6ed:	nop    DWORD PTR [rax]
  40b6f0:	mov    rax,QWORD PTR [rip+0x3af69]        # 0x446660
  40b6f7:	mov    rax,QWORD PTR [rax]
  40b6fa:	call   QWORD PTR [rax+0x88]
  40b700:	mov    rcx,rbx
  40b703:	call   0x405bc0
  40b708:	jmp    0x40b463
  40b70d:	nop    DWORD PTR [rax]
  40b710:	mov    rsi,QWORD PTR [rip+0x3af49]        # 0x446660
  40b717:	movabs rax,0x3b633b746e6f4376
  40b721:	mov    DWORD PTR [rbx+0x8],0x743b43
  40b728:	mov    QWORD PTR [rbx],rax
  40b72b:	mov    rax,QWORD PTR [rsi]
  40b72e:	mov    rdx,QWORD PTR [rax+0xd0]
  40b735:	test   rdx,rdx
  40b738:	je     0x40bb33
  40b73e:	call   rdx
  40b740:	test   eax,eax
  40b742:	je     0x40bb30
  40b748:	mov    rcx,rbx
  40b74b:	call   0x42a610
  40b750:	add    rbx,rax
  40b753:	mov    DWORD PTR [rbx],0x533b733b
  40b759:	mov    BYTE PTR [rbx+0x4],0x0
  40b75d:	mov    rax,QWORD PTR [rsi]
  40b760:	mov    rax,QWORD PTR [rax+0x210]
  40b767:	test   rax,rax
  40b76a:	je     0x40b463
  40b770:	call   rax
  40b772:	test   eax,eax
  40b774:	je     0x40b463
  40b77a:	mov    rcx,rbx
  40b77d:	call   0x42a610
  40b782:	mov    edx,0x723b
  40b787:	add    rbx,rax
  40b78a:	mov    WORD PTR [rbx],dx
  40b78d:	mov    BYTE PTR [rbx+0x2],0x0
  40b791:	jmp    0x40b463
  40b796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7a0:	call   0x403a80
  40b7a5:	test   rax,rax
  40b7a8:	je     0x40b441
  40b7ae:	call   QWORD PTR [rip+0x45f9c]        # 0x451750
  40b7b4:	lea    rdx,[rip+0x26cd3]        # 0x43248e
  40b7bb:	lea    rcx,[rax+0x60]
  40b7bf:	call   0x42aa80
  40b7c4:	mov    rcx,rbx
  40b7c7:	call   0x405bd0
  40b7cc:	jmp    0x40b463
  40b7d1:	call   0x403a80
  40b7d6:	test   rax,rax
  40b7d9:	jne    0x40b7ae
  40b7db:	jmp    0x40b4b7
  40b7e0:	call   0x403a80
  40b7e5:	test   rax,rax
  40b7e8:	je     0x40b45a
  40b7ee:	mov    r14,rbx
  40b7f1:	add    r14,0x5
  40b7f5:	je     0x40bc91
  40b7fb:	mov    rax,r14
  40b7fe:	xor    esi,esi
  40b800:	lea    rcx,[rax+0x1]
  40b804:	mov    edx,0x3b
  40b809:	add    esi,0x1
  40b80c:	call   0x42a630
  40b811:	test   rax,rax
  40b814:	jne    0x40b800
  40b816:	movsxd rax,esi
  40b819:	lea    rcx,[rax+rax*4]
  40b81d:	mov    DWORD PTR [rsp+0x5c],eax
  40b821:	mov    QWORD PTR [rsp+0x50],rax
  40b826:	shl    rcx,0x3
  40b82a:	call   0x423010
  40b82f:	test   rax,rax
  40b832:	mov    rbp,rax
  40b835:	je     0x40bb60
  40b83b:	lea    rcx,[rsp+0x80]
  40b843:	movzx  eax,BYTE PTR [rbx+0x5]
  40b847:	mov    r12,QWORD PTR [rip+0x3acf2]        # 0x446540
  40b84e:	mov    QWORD PTR [rsp+0x38],0x0
  40b857:	mov    QWORD PTR [rsp+0x30],0x0
  40b860:	xor    edi,edi
  40b862:	mov    QWORD PTR [rsp+0x48],rcx
  40b867:	lea    rcx,[rsp+0x78]
  40b86c:	mov    DWORD PTR [rsp+0x58],0x0
  40b874:	mov    DWORD PTR [rsp+0x2c],0x0
  40b87c:	mov    DWORD PTR [rsp+0x28],0x0
  40b884:	mov    DWORD PTR [rsp+0x24],0x0
  40b88c:	mov    DWORD PTR [rsp+0x20],0x0
  40b894:	mov    QWORD PTR [rsp+0x40],rcx
  40b899:	nop    DWORD PTR [rax+0x0]
  40b8a0:	test   al,al
  40b8a2:	je     0x40b97d
  40b8a8:	movsxd rax,edi
  40b8ab:	lea    rax,[rax+rax*4]
  40b8af:	lea    rsi,[rbp+rax*8+0x0]
  40b8b4:	mov    QWORD PTR [rsi],0x0
  40b8bb:	mov    QWORD PTR [rsi+0x8],0x0
  40b8c3:	mov    QWORD PTR [rsi+0x10],0x0
  40b8cb:	mov    QWORD PTR [rsi+0x18],0x0
  40b8d3:	mov    QWORD PTR [rsi+0x20],0x0
  40b8db:	movzx  eax,BYTE PTR [r14+0x1]
  40b8e0:	mov    edx,eax
  40b8e2:	and    edx,0xffffffdf
  40b8e5:	cmp    dl,0x53
  40b8e8:	je     0x40b9e0
  40b8ee:	cmp    al,0x72
  40b8f0:	je     0x40b9e0
  40b8f6:	cmp    dl,0x43
  40b8f9:	jne    0x40bab0
  40b8ff:	mov    DWORD PTR [rsi+0xc],0x0
  40b906:	movzx  eax,BYTE PTR [r14+0x1]
  40b90b:	mov    edx,eax
  40b90d:	and    edx,0xffffffef
  40b910:	cmp    dl,0x43
  40b913:	je     0x40b9fa
  40b919:	cmp    al,0x72
  40b91b:	je     0x40bac4
  40b921:	add    r14,0x2
  40b925:	movzx  eax,BYTE PTR [r14]
  40b929:	test   al,al
  40b92b:	jne    0x40ba4c
  40b931:	mov    rax,QWORD PTR [r12]
  40b935:	mov    QWORD PTR [rsi],rax
  40b938:	mov    eax,DWORD PTR [r12+0x8]
  40b93d:	mov    ecx,DWORD PTR [rsi]
  40b93f:	mov    DWORD PTR [rsi+0x8],eax
  40b942:	mov    DWORD PTR [rsp+0x28],eax
  40b946:	mov    eax,DWORD PTR [rsi+0xc]
  40b949:	mov    DWORD PTR [rsp+0x20],ecx
  40b94d:	mov    ecx,DWORD PTR [rsi+0x4]
  40b950:	mov    DWORD PTR [rsp+0x2c],eax
  40b954:	mov    eax,DWORD PTR [rsi+0x10]
  40b957:	mov    DWORD PTR [rsp+0x24],ecx
  40b95b:	mov    DWORD PTR [rsp+0x58],eax
  40b95f:	mov    rax,QWORD PTR [rsi+0x18]
  40b963:	mov    QWORD PTR [rsp+0x30],rax
  40b968:	mov    rax,QWORD PTR [rsi+0x20]
  40b96c:	mov    QWORD PTR [rsp+0x38],rax
  40b971:	movzx  eax,BYTE PTR [r14]
  40b975:	test   al,al
  40b977:	jne    0x40b8a8
  40b97d:	cmp    DWORD PTR [rsp+0x5c],edi
  40b981:	jle    0x40b9c3
  40b983:	movsxd rdi,edi
  40b986:	mov    ebx,DWORD PTR [rsp+0x20]
  40b98a:	lea    rax,[rdi+rdi*4]
  40b98e:	lea    rax,[rbp+rax*8+0x0]
  40b993:	mov    DWORD PTR [rax],ebx
  40b995:	mov    ebx,DWORD PTR [rsp+0x24]
  40b999:	mov    DWORD PTR [rax+0x4],ebx
  40b99c:	mov    ebx,DWORD PTR [rsp+0x28]
  40b9a0:	mov    DWORD PTR [rax+0x8],ebx
  40b9a3:	mov    ebx,DWORD PTR [rsp+0x2c]
  40b9a7:	mov    DWORD PTR [rax+0xc],ebx
  40b9aa:	mov    ebx,DWORD PTR [rsp+0x58]
  40b9ae:	mov    DWORD PTR [rax+0x10],ebx
  40b9b1:	mov    rbx,QWORD PTR [rsp+0x30]
  40b9b6:	mov    QWORD PTR [rax+0x18],rbx
  40b9ba:	mov    rbx,QWORD PTR [rsp+0x38]
  40b9bf:	mov    QWORD PTR [rax+0x20],rbx
  40b9c3:	mov    rdx,QWORD PTR [rsp+0x50]
  40b9c8:	mov    rcx,rbp
  40b9cb:	call   0x4089a0
  40b9d0:	mov    rcx,rbp
  40b9d3:	call   0x42a6c8
  40b9d8:	jmp    0x40b463
  40b9dd:	nop    DWORD PTR [rax]
  40b9e0:	mov    DWORD PTR [rsi+0xc],0x1
  40b9e7:	movzx  eax,BYTE PTR [r14+0x1]
  40b9ec:	mov    edx,eax
  40b9ee:	and    edx,0xffffffef
  40b9f1:	cmp    dl,0x43
  40b9f4:	jne    0x40b919
  40b9fa:	mov    rdx,QWORD PTR [rsp+0x40]
  40b9ff:	lea    rcx,[r14+0x2]
  40ba03:	mov    r8d,0x10
  40ba09:	add    r14,0x1
  40ba0d:	call   0x42a5e8
  40ba12:	mov    r13,QWORD PTR [rsp+0x78]
  40ba17:	mov    r15d,eax
  40ba1a:	cmp    r13,r14
  40ba1d:	je     0x40bb60
  40ba23:	mov    ecx,eax
  40ba25:	call   0x40dbf0
  40ba2a:	test   eax,eax
  40ba2c:	je     0x40bb60
  40ba32:	mov    ecx,r15d
  40ba35:	mov    r14,r13
  40ba38:	call   0x40dc10
  40ba3d:	mov    DWORD PTR [rsi+0x10],eax
  40ba40:	movzx  eax,BYTE PTR [r14]
  40ba44:	test   al,al
  40ba46:	je     0x40b931
  40ba4c:	cmp    al,0x3a
  40ba4e:	jne    0x40b8a0
  40ba54:	mov    r8,QWORD PTR [rsp+0x40]
  40ba59:	mov    rcx,QWORD PTR [rsp+0x48]
  40ba5e:	lea    rdx,[r14+0x1]
  40ba62:	call   0x405790
  40ba67:	mov    rdx,QWORD PTR [rsp+0x78]
  40ba6c:	cmp    r14,rdx
  40ba6f:	je     0x40bb60
  40ba75:	movzx  eax,BYTE PTR [rdx]
  40ba78:	test   al,al
  40ba7a:	je     0x40ba84
  40ba7c:	cmp    al,0x3b
  40ba7e:	jne    0x40bb60
  40ba84:	mov    rax,QWORD PTR [rsp+0x80]
  40ba8c:	add    edi,0x1
  40ba8f:	mov    r14,rdx
  40ba92:	mov    QWORD PTR [rsi],rax
  40ba95:	mov    eax,DWORD PTR [rsp+0x88]
  40ba9c:	mov    DWORD PTR [rsi+0x8],eax
  40ba9f:	movzx  eax,BYTE PTR [rdx]
  40baa2:	jmp    0x40b8a0
  40baa7:	nop    WORD PTR [rax+rax*1+0x0]
  40bab0:	cmp    al,0x74
  40bab2:	jne    0x40bb60
  40bab8:	mov    DWORD PTR [rsi+0xc],0x2
  40babf:	jmp    0x40b906
  40bac4:	mov    r15,QWORD PTR [rsp+0x48]
  40bac9:	lea    rcx,[r14+0x2]
  40bacd:	mov    rdx,r15
  40bad0:	call   0x41ce20
  40bad5:	mov    rdx,QWORD PTR [rsp+0x80]
  40badd:	mov    QWORD PTR [rsi+0x18],rdx
  40bae1:	cmp    BYTE PTR [rax],0x2c
  40bae4:	jne    0x40bb60
  40bae6:	lea    rcx,[rax+0x1]
  40baea:	mov    rdx,r15
  40baed:	call   0x41ce20
  40baf2:	mov    r14,rax
  40baf5:	mov    rax,QWORD PTR [rsp+0x80]
  40bafd:	mov    QWORD PTR [rsi+0x20],rax
  40bb01:	jmp    0x40b925
  40bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb10:	mov    edx,ebp
  40bb12:	mov    rcx,rbx
  40bb15:	call   0x41c080
  40bb1a:	test   eax,eax
  40bb1c:	jne    0x40b463
  40bb22:	mov    BYTE PTR [rbx],0x0
  40bb25:	jmp    0x40b463
  40bb2a:	nop    WORD PTR [rax+rax*1+0x0]
  40bb30:	mov    rax,QWORD PTR [rsi]
  40bb33:	mov    rax,QWORD PTR [rax+0x258]
  40bb3a:	test   rax,rax
  40bb3d:	je     0x40bb49
  40bb3f:	call   rax
  40bb41:	test   eax,eax
  40bb43:	jne    0x40b748
  40bb49:	mov    edi,DWORD PTR [rip+0x41e09]        # 0x44d958
  40bb4f:	test   edi,edi
  40bb51:	je     0x40b748
  40bb57:	jmp    0x40b75d
  40bb5c:	nop    DWORD PTR [rax+0x0]
  40bb60:	mov    rcx,rbx
  40bb63:	call   0x405bd0
  40bb68:	mov    rcx,rbp
  40bb6b:	call   0x42a6c8
  40bb70:	jmp    0x40b463
  40bb75:	call   QWORD PTR [rip+0x45bd5]        # 0x451750
  40bb7b:	lea    rdx,[rip+0x268ef]        # 0x432471
  40bb82:	lea    rcx,[rax+0x60]
  40bb86:	call   0x42aa80
  40bb8b:	jmp    0x40b45a
  40bb90:	add    edi,0x1
  40bb93:	jmp    0x40b570
  40bb98:	nop    DWORD PTR [rax+rax*1+0x0]
  40bba0:	mov    rax,rsi
  40bba3:	sub    rax,r12
  40bba6:	mov    r13,rax
  40bba9:	shr    r13,0x3f
  40bbad:	add    r13,rax
  40bbb0:	sar    r13,1
  40bbb3:	lea    rcx,[r13+0x1]
  40bbb7:	call   0x41a6e0
  40bbbc:	mov    r8d,r13d
  40bbbf:	mov    QWORD PTR [r14],rax
  40bbc2:	mov    rdx,rax
  40bbc5:	mov    rcx,r12
  40bbc8:	call   0x41ce70
  40bbcd:	mov    rax,QWORD PTR [r14]
  40bbd0:	mov    BYTE PTR [rax+r13*1],0x0
  40bbd5:	jmp    0x40b552
  40bbda:	nop    WORD PTR [rax+rax*1+0x0]
  40bbe0:	mov    rcx,r12
  40bbe3:	call   0x42a610
  40bbe8:	lea    rsi,[r12+rax*1]
  40bbec:	jmp    0x40b539
  40bbf1:	mov    ecx,eax
  40bbf3:	call   0x4081f0
  40bbf8:	test   eax,eax
  40bbfa:	jne    0x40b45a
  40bc00:	mov    rax,QWORD PTR [rip+0x3a8a9]        # 0x4464b0
  40bc07:	mov    DWORD PTR [rax],0x0
  40bc0d:	mov    eax,DWORD PTR [rip+0x41c55]        # 0x44d868
  40bc13:	test   eax,eax
  40bc15:	jne    0x40b6e0
  40bc1b:	mov    rax,QWORD PTR [rip+0x41cf6]        # 0x44d918
  40bc22:	lea    rdx,[rsp+0x60]
  40bc27:	lea    r8,[rip+0x41d02]        # 0x44d930
  40bc2e:	mov    rcx,rbx
  40bc31:	mov    QWORD PTR [rsp+0x60],rax
  40bc36:	mov    eax,DWORD PTR [rip+0x41ce4]        # 0x44d920
  40bc3c:	mov    DWORD PTR [rsp+0x68],eax
  40bc40:	call   0x405be0
  40bc45:	jmp    0x40b463
  40bc4a:	test   rsi,rsi
  40bc4d:	je     0x40bc64
  40bc4f:	mov    rcx,QWORD PTR [rsi]
  40bc52:	call   0x42a5a0
  40bc57:	test   rax,rax
  40bc5a:	mov    QWORD PTR [rbp+0x0],rax
  40bc5e:	jne    0x40b592
  40bc64:	mov    rcx,rbx
  40bc67:	call   0x405bd0
  40bc6c:	mov    rcx,rbp
  40bc6f:	call   0x423ae0
  40bc74:	jmp    0x40b463
  40bc79:	lea    rcx,[rbx+0x6]
  40bc7d:	mov    r8d,0x10
  40bc83:	xor    edx,edx
  40bc85:	call   0x42a5e8
  40bc8a:	mov    esi,eax
  40bc8c:	jmp    0x40b669
  40bc91:	xor    ecx,ecx
  40bc93:	mov    QWORD PTR [rsp+0x50],0x0
  40bc9c:	mov    DWORD PTR [rsp+0x5c],0x0
  40bca4:	jmp    0x40b82a
  40bca9:	xor    edi,edi
  40bcab:	jmp    0x40b577
  40bcb0:	mov    ecx,0x2
  40bcb5:	jmp    0x40b4f5
  40bcba:	nop    WORD PTR [rax+rax*1+0x0]
  40bcc0:	push   r15
  40bcc2:	push   r14
  40bcc4:	push   r13
  40bcc6:	push   r12
  40bcc8:	push   rbp
  40bcc9:	push   rdi
  40bcca:	push   rsi
  40bccb:	push   rbx
  40bccc:	sub    rsp,0xc8
  40bcd3:	mov    rbx,QWORD PTR [rip+0x3a796]        # 0x446470
  40bcda:	mov    r10d,DWORD PTR [rbx]
  40bcdd:	test   r10d,r10d
  40bce0:	jne    0x40bd43
  40bce2:	mov    DWORD PTR [rsp+0x64],0xffffffff
  40bcea:	call   0x405910
  40bcef:	mov    rcx,QWORD PTR [rip+0x4164a]        # 0x44d340
  40bcf6:	mov    DWORD PTR [rip+0x41c64],0x0        # 0x44d964
  40bd00:	call   0x405940
  40bd05:	test   eax,eax
  40bd07:	mov    esi,eax
  40bd09:	jle    0x40c6e7
  40bd0f:	mov    rbp,QWORD PTR [rip+0x4162a]        # 0x44d340
  40bd16:	mov    DWORD PTR [rip+0x41c44],0x1        # 0x44d964
  40bd20:	movzx  edi,BYTE PTR [rbp+0x0]
  40bd24:	lea    r9d,[rdi-0x21]
  40bd28:	cmp    r9b,0x59
  40bd2c:	ja     0x40bd51
  40bd2e:	lea    r10,[rip+0x2706f]        # 0x432da4
  40bd35:	movzx  r9d,r9b
  40bd39:	movsxd rax,DWORD PTR [r10+r9*4]
  40bd3d:	add    r10,rax
  40bd40:	jmp    r10
  40bd43:	lea    rcx,[rip+0x26c0e]        # 0x432958
  40bd4a:	call   0x41d1b0
  40bd4f:	jmp    0x40bce2
  40bd51:	mov    BYTE PTR [rbp+0x0],0x0
  40bd55:	mov    edx,DWORD PTR [rsp+0x64]
  40bd59:	mov    rcx,QWORD PTR [rip+0x415e0]        # 0x44d340
  40bd60:	cmp    edx,0xffffffff
  40bd63:	je     0x40bda2
  40bd65:	call   0x405870
  40bd6a:	mov    eax,DWORD PTR [rip+0x41bf0]        # 0x44d960
  40bd70:	mov    DWORD PTR [rip+0x41bea],0x0        # 0x44d964
  40bd7a:	test   eax,eax
  40bd7c:	jne    0x40c6f0
  40bd82:	mov    ecx,0x1
  40bd87:	call   0x40dd70
  40bd8c:	xor    eax,eax
  40bd8e:	add    rsp,0xc8
  40bd95:	pop    rbx
  40bd96:	pop    rsi
  40bd97:	pop    rdi
  40bd98:	pop    rbp
  40bd99:	pop    r12
  40bd9b:	pop    r13
  40bd9d:	pop    r14
  40bd9f:	pop    r15
  40bda1:	ret    
  40bda2:	call   0x405880
  40bda7:	jmp    0x40bd6a
  40bda9:	nop    DWORD PTR [rax+0x0]
  40bdb0:	lea    r8,[rsp+0x64]
  40bdb5:	mov    edx,esi
  40bdb7:	mov    rcx,rbp
  40bdba:	call   0x40b390
  40bdbf:	jmp    0x40bd55
  40bdc1:	call   0x403a80
  40bdc6:	xor    edx,edx
  40bdc8:	test   rax,rax
  40bdcb:	je     0x40c01f
  40bdd1:	mov    ecx,0x1
  40bdd6:	call   0x408b80
  40bddb:	jmp    0x40bd55
  40bde0:	lea    r8,[rsp+0x64]
  40bde5:	mov    edx,esi
  40bde7:	mov    rcx,rbp
  40bdea:	call   0x408cf0
  40bdef:	jmp    0x40bd55
  40bdf4:	call   0x403a80
  40bdf9:	test   rax,rax
  40bdfc:	je     0x40c01f
  40be02:	mov    rax,QWORD PTR [rip+0x41537]        # 0x44d340
  40be09:	lea    rdx,[rsp+0x68]
  40be0e:	lea    r8,[rsp+0x60]
  40be13:	lea    rcx,[rax+0x1]
  40be17:	call   0x406330
  40be1c:	mov    r8d,DWORD PTR [rsp+0x60]
  40be21:	mov    rdx,QWORD PTR [rip+0x41ae8]        # 0x44d910
  40be28:	mov    rcx,QWORD PTR [rsp+0x68]
  40be2d:	call   0x408090
  40be32:	test   eax,eax
  40be34:	js     0x40c01f
  40be3a:	mov    rdx,QWORD PTR [rip+0x414ff]        # 0x44d340
  40be41:	mov    rcx,QWORD PTR [rip+0x41ac8]        # 0x44d910
  40be48:	mov    r8d,eax
  40be4b:	call   0x41cef0
  40be50:	jmp    0x40bd55
  40be55:	mov    DWORD PTR [rip+0x41b05],0x0        # 0x44d964
  40be5f:	call   0x403a80
  40be64:	test   rax,rax
  40be67:	je     0x40bd82
  40be6d:	call   QWORD PTR [rip+0x458dd]        # 0x451750
  40be73:	lea    rdx,[rip+0x26e82]        # 0x432cfc
  40be7a:	lea    rcx,[rax+0x60]
  40be7e:	call   0x42aa80
  40be83:	mov    rcx,QWORD PTR [rip+0x3a586]        # 0x446410
  40be8a:	lea    rdx,[rip+0xfffffffffffff36f]        # 0x40b200
  40be91:	call   0x403900
  40be96:	mov    ecx,DWORD PTR [rip+0x41acc]        # 0x44d968
  40be9c:	test   ecx,ecx
  40be9e:	je     0x40ce1a
  40bea4:	mov    DWORD PTR [rip+0x41a82],0x0        # 0x44d930
  40beae:	mov    DWORD PTR [rip+0x41a80],0x9        # 0x44d938
  40beb8:	jmp    0x40bd82
  40bebd:	nop    DWORD PTR [rax]
  40bec0:	call   0x403a80
  40bec5:	test   rax,rax
  40bec8:	je     0x40c01f
  40bece:	mov    rbx,QWORD PTR [rip+0x3a58b]        # 0x446460
  40bed5:	mov    esi,DWORD PTR [rbx]
  40bed7:	test   esi,esi
  40bed9:	js     0x40c9c3
  40bedf:	call   0x41c370
  40bee4:	mov    rcx,rax
  40bee7:	call   0x404230
  40beec:	mov    ecx,DWORD PTR [rbx]
  40beee:	mov    r8d,0xffffffff
  40bef4:	mov    rdx,rax
  40bef7:	mov    rsi,rax
  40befa:	call   0x4198c0
  40beff:	test   eax,eax
  40bf01:	jne    0x40c800
  40bf07:	mov    rdx,QWORD PTR [rip+0x41432]        # 0x44d340
  40bf0e:	mov    rcx,rsi
  40bf11:	call   0x404530
  40bf16:	mov    rcx,rsi
  40bf19:	call   0x4043a0
  40bf1e:	jmp    0x40bd55
  40bf23:	lea    rdi,[rip+0x26a4e]        # 0x432978
  40bf2a:	mov    ecx,0xd
  40bf2f:	mov    rsi,rbp
  40bf32:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bf34:	je     0x40c811
  40bf3a:	lea    rdi,[rip+0x26a45]        # 0x432986
  40bf41:	mov    ecx,0x10
  40bf46:	mov    rsi,rbp
  40bf49:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bf4b:	je     0x40ca6d
  40bf51:	lea    rdi,[rip+0x26a3f]        # 0x432997
  40bf58:	mov    ecx,0xf
  40bf5d:	mov    rsi,rbp
  40bf60:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bf62:	je     0x40cbca
  40bf68:	lea    rdi,[rip+0x26a6f]        # 0x4329de
  40bf6f:	mov    ecx,0x10
  40bf74:	mov    rsi,rbp
  40bf77:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bf79:	jne    0x40caed
  40bf7f:	mov    rax,QWORD PTR [rip+0x3a62a]        # 0x4465b0
  40bf86:	mov    r8d,DWORD PTR [rax]
  40bf89:	test   r8d,r8d
  40bf8c:	je     0x40bfb2
  40bf8e:	mov    rbx,QWORD PTR [rip+0x457bb]        # 0x451750
  40bf95:	call   rbx
  40bf97:	lea    rdx,[rip+0x26a50]        # 0x4329ee
  40bf9e:	lea    rcx,[rax+0x60]
  40bfa2:	call   0x42aa80
  40bfa7:	call   rbx
  40bfa9:	lea    rcx,[rax+0x60]
  40bfad:	call   0x42a6f0
  40bfb2:	mov    rax,QWORD PTR [rip+0x3a5a7]        # 0x446560
  40bfb9:	mov    rcx,rbp
  40bfbc:	mov    DWORD PTR [rax],0x1
  40bfc2:	call   0x405bc0
  40bfc7:	jmp    0x40bd55
  40bfcc:	nop    DWORD PTR [rax+0x0]
  40bfd0:	call   0x403a80
  40bfd5:	test   rax,rax
  40bfd8:	je     0x40c01f
  40bfda:	mov    rax,QWORD PTR [rip+0x4135f]        # 0x44d340
  40bfe1:	lea    rdx,[rsp+0x68]
  40bfe6:	lea    r9,[rip+0x41923]        # 0x44d910
  40bfed:	lea    r8,[rsp+0x60]
  40bff2:	lea    rcx,[rax+0x1]
  40bff6:	call   0x4063e0
  40bffb:	mov    rax,QWORD PTR [rip+0x3a45e]        # 0x446460
  40c002:	mov    r8d,DWORD PTR [rsp+0x60]
  40c007:	mov    rdx,QWORD PTR [rip+0x41902]        # 0x44d910
  40c00e:	mov    rcx,QWORD PTR [rsp+0x68]
  40c013:	mov    r10d,DWORD PTR [rax]
  40c016:	test   r10d,r10d
  40c019:	js     0x40c6c9
  40c01f:	mov    rcx,QWORD PTR [rip+0x4131a]        # 0x44d340
  40c026:	call   0x405bd0
  40c02b:	jmp    0x40bd55
  40c030:	call   0x403a80
  40c035:	test   rax,rax
  40c038:	je     0x40c01f
  40c03a:	mov    rax,QWORD PTR [rip+0x412ff]        # 0x44d340
  40c041:	lea    edx,[rsi-0x1]
  40c044:	lea    r9,[rsp+0x60]
  40c049:	lea    r8,[rsp+0x68]
  40c04e:	lea    rcx,[rax+0x1]
  40c052:	lea    rax,[rip+0x418b7]        # 0x44d910
  40c059:	mov    QWORD PTR [rsp+0x20],rax
  40c05e:	call   0x4064f0
  40c063:	test   eax,eax
  40c065:	jns    0x40bffb
  40c067:	jmp    0x40c01f
  40c069:	nop    DWORD PTR [rax+0x0]
  40c070:	call   0x403a80
  40c075:	test   rax,rax
  40c078:	je     0x40c01f
  40c07a:	mov    rax,QWORD PTR [rip+0x412bf]        # 0x44d340
  40c081:	lea    rcx,[rsp+0x80]
  40c089:	xor    r8d,r8d
  40c08c:	lea    rbx,[rsp+0x40]
  40c091:	lea    rdx,[rax+0x1]
  40c095:	call   0x405790
  40c09a:	mov    rax,QWORD PTR [rsp+0x80]
  40c0a2:	lea    rcx,[rsp+0x90]
  40c0aa:	mov    rdx,rbx
  40c0ad:	mov    QWORD PTR [rsp+0x40],rax
  40c0b2:	mov    eax,DWORD PTR [rsp+0x88]
  40c0b9:	mov    DWORD PTR [rsp+0x48],eax
  40c0bd:	call   0x403c80
  40c0c2:	mov    rax,QWORD PTR [rsp+0x90]
  40c0ca:	mov    rcx,rbx
  40c0cd:	mov    QWORD PTR [rsp+0x40],rax
  40c0d2:	mov    eax,DWORD PTR [rsp+0x98]
  40c0d9:	mov    DWORD PTR [rsp+0x48],eax
  40c0dd:	mov    rax,QWORD PTR [rip+0x3a4ac]        # 0x446590
  40c0e4:	mov    rdx,QWORD PTR [rax]
  40c0e7:	mov    QWORD PTR [rsp+0x30],rdx
  40c0ec:	mov    eax,DWORD PTR [rax+0x8]
  40c0ef:	lea    rdx,[rsp+0x30]
  40c0f4:	mov    DWORD PTR [rsp+0x38],eax
  40c0f8:	call   0x41ad50
  40c0fd:	test   eax,eax
  40c0ff:	jne    0x40c01f
  40c105:	mov    rax,QWORD PTR [rsp+0x90]
  40c10d:	mov    rcx,rbx
  40c110:	mov    QWORD PTR [rsp+0x40],rax
  40c115:	mov    eax,DWORD PTR [rsp+0x98]
  40c11c:	mov    DWORD PTR [rsp+0x48],eax
  40c120:	mov    rax,QWORD PTR [rip+0x3a539]        # 0x446660
  40c127:	mov    rax,QWORD PTR [rax]
  40c12a:	call   QWORD PTR [rax+0x38]
  40c12d:	test   eax,eax
  40c12f:	mov    rcx,QWORD PTR [rip+0x4120a]        # 0x44d340
  40c136:	jne    0x40c524
  40c13c:	call   0x405bd0
  40c141:	jmp    0x40bd55
  40c146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c150:	call   0x403a80
  40c155:	xor    edx,edx
  40c157:	test   rax,rax
  40c15a:	je     0x40c01f
  40c160:	xor    ecx,ecx
  40c162:	call   0x408b80
  40c167:	jmp    0x40bd55
  40c16c:	nop    DWORD PTR [rax+0x0]
  40c170:	call   0x403a80
  40c175:	test   rax,rax
  40c178:	je     0x40c01f
  40c17e:	mov    rax,QWORD PTR [rip+0x411bb]        # 0x44d340
  40c185:	lea    rdx,[rsp+0x5f]
  40c18a:	mov    r8d,0x1
  40c190:	lea    rcx,[rax+0x1]
  40c194:	call   0x41ce70
  40c199:	movzx  ecx,BYTE PTR [rsp+0x5f]
  40c19e:	call   0x40dbf0
  40c1a3:	xor    edx,edx
  40c1a5:	test   eax,eax
  40c1a7:	je     0x40bdd1
  40c1ad:	movzx  ecx,BYTE PTR [rsp+0x5f]
  40c1b2:	call   0x40dc10
  40c1b7:	mov    edx,eax
  40c1b9:	jmp    0x40bdd1
  40c1be:	xchg   ax,ax
  40c1c0:	mov    edx,DWORD PTR [rip+0x417a2]        # 0x44d968
  40c1c6:	mov    DWORD PTR [rip+0x41794],0x0        # 0x44d964
  40c1d0:	test   edx,edx
  40c1d2:	je     0x40bd51
  40c1d8:	call   0x403a80
  40c1dd:	test   rax,rax
  40c1e0:	je     0x40c1f5
  40c1e2:	mov    rcx,QWORD PTR [rip+0x3a227]        # 0x446410
  40c1e9:	lea    rdx,[rip+0xfffffffffffff010]        # 0x40b200
  40c1f0:	call   0x403900
  40c1f5:	call   QWORD PTR [rip+0x45555]        # 0x451750
  40c1fb:	lea    rdx,[rip+0x26b11]        # 0x432d13
  40c202:	lea    rcx,[rax+0x60]
  40c206:	call   0x42aa80
  40c20b:	mov    rcx,QWORD PTR [rip+0x4173e]        # 0x44d950
  40c212:	test   rcx,rcx
  40c215:	je     0x40bea4
  40c21b:	call   0x408310
  40c220:	cmp    DWORD PTR [rip+0x41709],0x1        # 0x44d930
  40c227:	je     0x40ce21
  40c22d:	mov    rax,QWORD PTR [rip+0x3a35c]        # 0x446590
  40c234:	mov    rdx,QWORD PTR [rax]
  40c237:	mov    eax,DWORD PTR [rax+0x8]
  40c23a:	mov    QWORD PTR [rip+0x41647],rdx        # 0x44d888
  40c241:	mov    DWORD PTR [rip+0x41649],eax        # 0x44d890
  40c247:	jmp    0x40bd82
  40c24c:	nop    DWORD PTR [rax+0x0]
  40c250:	lea    rcx,[rbp+0x3]
  40c254:	lea    rdx,[rsp+0x80]
  40c25c:	movzx  esi,BYTE PTR [rbp+0x1]
  40c260:	call   0x41ce20
  40c265:	lea    rdx,[rsp+0x70]
  40c26a:	lea    rcx,[rax+0x1]
  40c26e:	mov    r8d,0x10
  40c274:	call   0x42a5e8
  40c279:	cmp    dil,0x5a
  40c27d:	mov    r8d,eax
  40c280:	movsx  ecx,sil
  40c284:	je     0x40c894
  40c28a:	mov    rdx,QWORD PTR [rsp+0x80]
  40c292:	call   0x4100d0
  40c297:	mov    DWORD PTR [rsp+0x68],eax
  40c29b:	test   eax,eax
  40c29d:	je     0x40c6d6
  40c2a3:	cmp    eax,0x1
  40c2a6:	jne    0x40c01f
  40c2ac:	mov    rax,QWORD PTR [rip+0x4108d]        # 0x44d340
  40c2b3:	mov    BYTE PTR [rax],0x0
  40c2b6:	jmp    0x40bd55
  40c2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2c0:	call   0x403a80
  40c2c5:	test   rax,rax
  40c2c8:	je     0x40c01f
  40c2ce:	mov    eax,DWORD PTR [rip+0x415a8]        # 0x44d87c
  40c2d4:	test   eax,eax
  40c2d6:	je     0x40c7d0
  40c2dc:	mov    rax,QWORD PTR [rip+0x4105d]        # 0x44d340
  40c2e3:	mov    r8d,0x10
  40c2e9:	xor    edx,edx
  40c2eb:	lea    rcx,[rax+0x2]
  40c2ef:	call   0x42a5e8
  40c2f4:	mov    edi,eax
  40c2f6:	mov    rsi,QWORD PTR [rip+0x3a373]        # 0x446670
  40c2fd:	mov    eax,DWORD PTR [rsi]
  40c2ff:	test   eax,eax
  40c301:	je     0x40c314
  40c303:	mov    rax,QWORD PTR [rip+0x3a196]        # 0x4464a0
  40c30a:	mov    eax,DWORD PTR [rax]
  40c30c:	test   eax,eax
  40c30e:	jne    0x40c700
  40c314:	call   0x40f9d0
  40c319:	test   eax,eax
  40c31b:	jne    0x40c700
  40c321:	call   QWORD PTR [rip+0x45429]        # 0x451750
  40c327:	lea    rdx,[rip+0x26a58]        # 0x432d86
  40c32e:	lea    rcx,[rax+0x60]
  40c332:	mov    r8d,edi
  40c335:	call   0x42aa80
  40c33a:	call   0x415270
  40c33f:	mov    rbx,QWORD PTR [rip+0x3a31a]        # 0x446660
  40c346:	mov    ecx,edi
  40c348:	mov    rax,QWORD PTR [rbx]
  40c34b:	call   QWORD PTR [rax+0x20]
  40c34e:	test   eax,eax
  40c350:	jne    0x40c01f
  40c356:	lea    rcx,[rsp+0x90]
  40c35e:	mov    edx,edi
  40c360:	call   0x41ad00
  40c365:	mov    rax,QWORD PTR [rsp+0x90]
  40c36d:	mov    rcx,QWORD PTR [rip+0x1fcdc]        # 0x42c050
  40c374:	lea    r8,[rsp+0x70]
  40c379:	lea    rdx,[rip+0xffffffffffffecc0]        # 0x40b040
  40c380:	mov    QWORD PTR [rsp+0x70],rax
  40c385:	mov    eax,DWORD PTR [rsp+0x98]
  40c38c:	mov    DWORD PTR [rsp+0x78],eax
  40c390:	call   0x40b0b0
  40c395:	mov    rcx,QWORD PTR [rip+0x40fa4]        # 0x44d340
  40c39c:	call   0x405bc0
  40c3a1:	mov    ebp,DWORD PTR [rip+0x415c1]        # 0x44d968
  40c3a7:	test   ebp,ebp
  40c3a9:	je     0x40cdf3
  40c3af:	lea    rcx,[rsp+0x40]
  40c3b4:	mov    edx,edi
  40c3b6:	mov    DWORD PTR [rip+0x41570],0x0        # 0x44d930
  40c3c0:	mov    DWORD PTR [rip+0x4156e],0x0        # 0x44d938
  40c3ca:	call   0x41ad00
  40c3cf:	mov    rax,QWORD PTR [rsp+0x40]
  40c3d4:	mov    QWORD PTR [rip+0x4153d],rax        # 0x44d918
  40c3db:	mov    eax,DWORD PTR [rsp+0x48]
  40c3df:	mov    DWORD PTR [rip+0x4153b],eax        # 0x44d920
  40c3e5:	mov    rax,QWORD PTR [rip+0x3a064]        # 0x446450
  40c3ec:	mov    QWORD PTR [rax],0x0
  40c3f3:	jmp    0x40bd55
  40c3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c400:	call   0x403a80
  40c405:	test   rax,rax
  40c408:	je     0x40c01f
  40c40e:	mov    rax,QWORD PTR [rip+0x40f2b]        # 0x44d340
  40c415:	lea    rdx,[rsp+0x5f]
  40c41a:	mov    r8d,0x1
  40c420:	lea    rcx,[rax+0x1]
  40c424:	call   0x41ce70
  40c429:	movzx  ecx,BYTE PTR [rsp+0x5f]
  40c42e:	call   0x40dbf0
  40c433:	xor    edx,edx
  40c435:	test   eax,eax
  40c437:	je     0x40c160
  40c43d:	movzx  ecx,BYTE PTR [rsp+0x5f]
  40c442:	call   0x40dc10
  40c447:	mov    edx,eax
  40c449:	jmp    0x40c160
  40c44e:	xchg   ax,ax
  40c450:	movzx  eax,BYTE PTR [rbp+0x1]
  40c454:	mov    edx,eax
  40c456:	and    edx,0xfffffffb
  40c459:	cmp    dl,0x63
  40c45c:	je     0x40c466
  40c45e:	cmp    al,0x73
  40c460:	jne    0x40bd51
  40c466:	call   0x403a80
  40c46b:	test   rax,rax
  40c46e:	je     0x40c01f
  40c474:	mov    rax,QWORD PTR [rip+0x40ec5]        # 0x44d340
  40c47b:	lea    rcx,[rsp+0x70]
  40c480:	xor    r8d,r8d
  40c483:	lea    rdi,[rsp+0x40]
  40c488:	lea    rsi,[rsp+0x30]
  40c48d:	lea    rdx,[rax+0x2]
  40c491:	call   0x405790
  40c496:	mov    rax,QWORD PTR [rsp+0x70]
  40c49b:	mov    rcx,rdi
  40c49e:	mov    QWORD PTR [rsp+0x40],rax
  40c4a3:	mov    eax,DWORD PTR [rsp+0x78]
  40c4a7:	mov    DWORD PTR [rsp+0x48],eax
  40c4ab:	call   0x41ad20
  40c4b0:	mov    DWORD PTR [rsp+0x68],eax
  40c4b4:	mov    rax,QWORD PTR [rsp+0x70]
  40c4b9:	mov    rdx,rsi
  40c4bc:	mov    rbx,QWORD PTR [rip+0x3a0cd]        # 0x446590
  40c4c3:	mov    rcx,rdi
  40c4c6:	mov    QWORD PTR [rsp+0x40],rax
  40c4cb:	mov    eax,DWORD PTR [rsp+0x78]
  40c4cf:	mov    DWORD PTR [rsp+0x48],eax
  40c4d3:	mov    rax,QWORD PTR [rbx]
  40c4d6:	mov    QWORD PTR [rsp+0x30],rax
  40c4db:	mov    eax,DWORD PTR [rbx+0x8]
  40c4de:	mov    DWORD PTR [rsp+0x38],eax
  40c4e2:	call   0x41ad50
  40c4e7:	test   eax,eax
  40c4e9:	je     0x40cd4b
  40c4ef:	mov    rax,QWORD PTR [rbx]
  40c4f2:	mov    QWORD PTR [rsp+0x90],rax
  40c4fa:	mov    eax,DWORD PTR [rbx+0x8]
  40c4fd:	mov    DWORD PTR [rsp+0x98],eax
  40c504:	mov    rcx,QWORD PTR [rip+0x40e35]        # 0x44d340
  40c50b:	movzx  r8d,BYTE PTR [rcx+0x1]
  40c510:	cmp    r8b,0x67
  40c514:	je     0x40cf31
  40c51a:	cmp    r8b,0x63
  40c51e:	je     0x40ce6c
  40c524:	call   0x405bc0
  40c529:	jmp    0x40bd55
  40c52e:	xchg   ax,ax
  40c530:	call   0x403a80
  40c535:	test   rax,rax
  40c538:	je     0x40c01f
  40c53e:	mov    rax,QWORD PTR [rip+0x39f1b]        # 0x446460
  40c545:	mov    r11d,DWORD PTR [rax]
  40c548:	test   r11d,r11d
  40c54b:	jns    0x40c01f
  40c551:	mov    ecx,0x1
  40c556:	call   0x40dd70
  40c55b:	test   eax,eax
  40c55d:	je     0x40c01f
  40c563:	mov    rax,QWORD PTR [rip+0x39ee6]        # 0x446450
  40c56a:	mov    edx,0x1
  40c56f:	mov    rcx,QWORD PTR [rax]
  40c572:	call   0x404290
  40c577:	mov    rdi,QWORD PTR [rip+0x40dc2]        # 0x44d340
  40c57e:	mov    rcx,rax
  40c581:	lea    rdx,[rdi+0x1]
  40c585:	call   0x4045f0
  40c58a:	mov    rcx,QWORD PTR [rip+0x40daf]        # 0x44d340
  40c591:	call   0x405bc0
  40c596:	jmp    0x40bd55
  40c59b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5a0:	mov    rcx,QWORD PTR [rip+0x39e69]        # 0x446410
  40c5a7:	lea    rdx,[rip+0xffffffffffffa8c2]        # 0x406e70
  40c5ae:	call   0x403900
  40c5b3:	mov    edi,DWORD PTR [rip+0x412af]        # 0x44d868
  40c5b9:	test   edi,edi
  40c5bb:	jne    0x40ca43
  40c5c1:	mov    rbx,QWORD PTR [rip+0x3a098]        # 0x446660
  40c5c8:	mov    rax,QWORD PTR [rbx]
  40c5cb:	mov    rdx,QWORD PTR [rax+0x1a0]
  40c5d2:	test   rdx,rdx
  40c5d5:	je     0x40c5de
  40c5d7:	xor    ecx,ecx
  40c5d9:	call   rdx
  40c5db:	mov    rax,QWORD PTR [rbx]
  40c5de:	mov    rax,QWORD PTR [rax+0x1b0]
  40c5e5:	test   rax,rax
  40c5e8:	je     0x40c5ec
  40c5ea:	call   rax
  40c5ec:	mov    rcx,QWORD PTR [rip+0x39e2d]        # 0x446420
  40c5f3:	lea    rdx,[rip+0xffffffffffffa856]        # 0x406e50
  40c5fa:	call   0x403900
  40c5ff:	mov    rcx,QWORD PTR [rip+0x39e1a]        # 0x446420
  40c606:	lea    rdx,[rip+0xffffffffffffa883]        # 0x406e90
  40c60d:	call   0x403900
  40c612:	mov    eax,DWORD PTR [rip+0x41318]        # 0x44d930
  40c618:	test   eax,0xfffffffd
  40c61d:	je     0x40c9fd
  40c623:	cmp    eax,0xb
  40c626:	je     0x40c9fd
  40c62c:	mov    rax,QWORD PTR [rip+0x412e5]        # 0x44d918
  40c633:	mov    rcx,QWORD PTR [rip+0x39de6]        # 0x446420
  40c63a:	lea    rdx,[rsp+0x40]
  40c63f:	mov    QWORD PTR [rsp+0x40],rax
  40c644:	mov    eax,DWORD PTR [rip+0x412d6]        # 0x44d920
  40c64a:	mov    DWORD PTR [rsp+0x48],eax
  40c64e:	call   0x403be0
  40c653:	test   rax,rax
  40c656:	mov    rbx,rax
  40c659:	je     0x40c9fd
  40c65f:	mov    rax,QWORD PTR [rbx]
  40c662:	mov    DWORD PTR [rbx+0x48],0x0
  40c669:	mov    ecx,0x1
  40c66e:	mov    QWORD PTR [rip+0x41213],rax        # 0x44d888
  40c675:	mov    eax,DWORD PTR [rbx+0x8]
  40c678:	mov    DWORD PTR [rip+0x41212],eax        # 0x44d890
  40c67e:	call   0x40dd70
  40c683:	cmp    DWORD PTR [rbx+0x30],0xb
  40c687:	je     0x40d500
  40c68d:	mov    rax,QWORD PTR [rbx]
  40c690:	lea    rdx,[rsp+0x40]
  40c695:	lea    r8,[rbx+0x30]
  40c699:	mov    rcx,rbp
  40c69c:	mov    QWORD PTR [rsp+0x40],rax
  40c6a1:	mov    eax,DWORD PTR [rbx+0x8]
  40c6a4:	mov    DWORD PTR [rsp+0x48],eax
  40c6a8:	call   0x405be0
  40c6ad:	jmp    0x40bd55
  40c6b2:	mov    rcx,rbp
  40c6b5:	mov    DWORD PTR [rip+0x412a9],0x1        # 0x44d968
  40c6bf:	call   0x405bc0
  40c6c4:	jmp    0x40bd55
  40c6c9:	call   0x408130
  40c6ce:	test   eax,eax
  40c6d0:	jne    0x40c01f
  40c6d6:	mov    rcx,QWORD PTR [rip+0x40c63]        # 0x44d340
  40c6dd:	call   0x405bc0
  40c6e2:	jmp    0x40bd55
  40c6e7:	call   0x4055b0
  40c6ec:	nop    DWORD PTR [rax+0x0]
  40c6f0:	mov    eax,0xffffffff
  40c6f5:	jmp    0x40bd8e
  40c6fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c700:	mov    ecx,edi
  40c702:	call   0x403f00
  40c707:	test   rax,rax
  40c70a:	mov    rdi,rax
  40c70d:	je     0x40c01f
  40c713:	mov    r15d,DWORD PTR [rsi]
  40c716:	test   r15d,r15d
  40c719:	je     0x40c72e
  40c71b:	mov    rax,QWORD PTR [rip+0x39d7e]        # 0x4464a0
  40c722:	mov    r14d,DWORD PTR [rax]
  40c725:	test   r14d,r14d
  40c728:	jne    0x40ce40
  40c72e:	call   0x40f9d0
  40c733:	test   eax,eax
  40c735:	jne    0x40cc4c
  40c73b:	mov    r13d,DWORD PTR [rip+0x41126]        # 0x44d868
  40c742:	test   r13d,r13d
  40c745:	jne    0x40c767
  40c747:	mov    r12d,DWORD PTR [rbx]
  40c74a:	test   r12d,r12d
  40c74d:	jne    0x40ce5b
  40c753:	mov    ecx,0x1
  40c758:	mov    DWORD PTR [rip+0x41106],0x1        # 0x44d868
  40c762:	call   0x40e1b0
  40c767:	mov    rax,QWORD PTR [rip+0x39dd2]        # 0x446540
  40c76e:	mov    DWORD PTR [rdi+0x1c],0x1
  40c775:	lea    rcx,[rsp+0x90]
  40c77d:	mov    DWORD PTR [rsp+0x9c],0x0
  40c788:	mov    DWORD PTR [rsp+0xa0],0x0
  40c793:	mov    rdx,QWORD PTR [rax]
  40c796:	mov    eax,DWORD PTR [rax+0x8]
  40c799:	mov    DWORD PTR [rsp+0x98],eax
  40c7a0:	mov    rax,QWORD PTR [rip+0x39eb9]        # 0x446660
  40c7a7:	mov    QWORD PTR [rsp+0x90],rdx
  40c7af:	mov    edx,0x1
  40c7b4:	mov    rax,QWORD PTR [rax]
  40c7b7:	call   QWORD PTR [rax+0x40]
  40c7ba:	mov    rcx,QWORD PTR [rip+0x40b7f]        # 0x44d340
  40c7c1:	call   0x405bc0
  40c7c6:	jmp    0x40bd55
  40c7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7d0:	mov    rax,QWORD PTR [rip+0x39c79]        # 0x446450
  40c7d7:	lea    rcx,[rsp+0x40]
  40c7dc:	mov    rax,QWORD PTR [rax]
  40c7df:	mov    rdx,QWORD PTR [rax]
  40c7e2:	mov    QWORD PTR [rsp+0x40],rdx
  40c7e7:	mov    eax,DWORD PTR [rax+0x8]
  40c7ea:	mov    DWORD PTR [rsp+0x48],eax
  40c7ee:	call   0x41ad20
  40c7f3:	mov    edi,eax
  40c7f5:	jmp    0x40c2f6
  40c7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c800:	mov    rcx,QWORD PTR [rip+0x40b39]        # 0x44d340
  40c807:	call   0x405bd0
  40c80c:	jmp    0x40bf16
  40c811:	lea    rdi,[rsp+0x90]
  40c819:	lea    rdx,[rbp+0xd]
  40c81d:	xor    ebx,ebx
  40c81f:	lea    rsi,[rip+0x40dda]        # 0x44d600
  40c826:	mov    rcx,rdi
  40c829:	call   0x405660
  40c82e:	jmp    0x40c844
  40c830:	mov    DWORD PTR [rsi+rbx*4],0x0
  40c837:	add    rbx,0x1
  40c83b:	cmp    rbx,0x98
  40c842:	je     0x40c880
  40c844:	cmp    rbx,QWORD PTR [rsp+0x90]
  40c84c:	jne    0x40c830
  40c84e:	mov    DWORD PTR [rsi+rbx*4],0x1
  40c855:	cmp    BYTE PTR [rax],0x0
  40c858:	jne    0x40c870
  40c85a:	mov    QWORD PTR [rsp+0x90],0xffffffffffffffff
  40c866:	jmp    0x40c837
  40c868:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	mov    rdx,rax
  40c873:	mov    rcx,rdi
  40c876:	call   0x405660
  40c87b:	jmp    0x40c837
  40c87d:	nop    DWORD PTR [rax]
  40c880:	mov    r9d,0x4b4f
  40c886:	mov    BYTE PTR [rbp+0x2],0x0
  40c88a:	mov    WORD PTR [rbp+0x0],r9w
  40c88f:	jmp    0x40bd55
  40c894:	mov    rdx,QWORD PTR [rsp+0x80]
  40c89c:	lea    r9,[rsp+0x68]
  40c8a1:	call   0x410bb0
  40c8a6:	test   rax,rax
  40c8a9:	mov    rbp,rax
  40c8ac:	je     0x40c981
  40c8b2:	mov    rcx,rax
  40c8b5:	mov    DWORD PTR [rsp+0x68],0x0
  40c8bd:	call   0x4101d0
  40c8c2:	mov    r9,QWORD PTR [rsp+0x70]
  40c8c7:	mov    eax,DWORD PTR [rsp+0x68]
  40c8cb:	mov    QWORD PTR [rsp+0x90],r9
  40c8d3:	cmp    BYTE PTR [r9],0x3b
  40c8d7:	jne    0x40c29b
  40c8dd:	mov    r14,QWORD PTR [rip+0x44e6c]        # 0x451750
  40c8e4:	add    r9,0x1
  40c8e8:	lea    r12,[rsp+0x90]
  40c8f0:	mov    QWORD PTR [rsp+0x90],r9
  40c8f8:	mov    r13d,0x5
  40c8fe:	xchg   ax,ax
  40c900:	movzx  r15d,BYTE PTR [r9]
  40c904:	test   r15b,r15b
  40c907:	je     0x40c97c
  40c909:	cmp    r15b,0x3b
  40c90d:	je     0x40cbb1
  40c913:	cmp    r15b,0x58
  40c917:	je     0x40cb8d
  40c91d:	lea    rdi,[rip+0x2638f]        # 0x432cb3
  40c924:	mov    rsi,r9
  40c927:	mov    rcx,r13
  40c92a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c92c:	jne    0x40c98a
  40c92e:	mov    r8d,DWORD PTR [rbx]
  40c931:	lea    rdx,[r9+0x5]
  40c935:	mov    QWORD PTR [rsp+0x90],rdx
  40c93d:	test   r8d,r8d
  40c940:	jne    0x40cd32
  40c946:	xor    r8d,r8d
  40c949:	cmp    BYTE PTR [rdx],0x31
  40c94c:	mov    rcx,rbp
  40c94f:	sete   r8b
  40c953:	add    rdx,0x2
  40c957:	mov    QWORD PTR [rsp+0x90],rdx
  40c95f:	mov    rdx,r12
  40c962:	call   0x4102b0
  40c967:	test   eax,eax
  40c969:	jne    0x40c9a1
  40c96b:	mov    r9,QWORD PTR [rsp+0x90]
  40c973:	movzx  r15d,BYTE PTR [r9]
  40c977:	test   r15b,r15b
  40c97a:	jne    0x40c909
  40c97c:	mov    QWORD PTR [rsp+0x70],r9
  40c981:	mov    eax,DWORD PTR [rsp+0x68]
  40c985:	jmp    0x40c29b
  40c98a:	call   r14
  40c98d:	lea    rdx,[rip+0x2634b]        # 0x432cdf
  40c994:	lea    rcx,[rax+0x60]
  40c998:	movsx  r8d,r15b
  40c99c:	call   0x42aa80
  40c9a1:	mov    rcx,QWORD PTR [rsp+0x90]
  40c9a9:	mov    edx,0x3b
  40c9ae:	call   0x423860
  40c9b3:	mov    r9,rax
  40c9b6:	mov    QWORD PTR [rsp+0x90],rax
  40c9be:	jmp    0x40c900
  40c9c3:	mov    ecx,0x1
  40c9c8:	call   0x40dd70
  40c9cd:	test   eax,eax
  40c9cf:	je     0x40c01f
  40c9d5:	mov    rax,QWORD PTR [rip+0x39a74]        # 0x446450
  40c9dc:	mov    edx,0x1
  40c9e1:	mov    rcx,QWORD PTR [rax]
  40c9e4:	call   0x404290
  40c9e9:	mov    rdx,QWORD PTR [rip+0x40950]        # 0x44d340
  40c9f0:	mov    rcx,rax
  40c9f3:	call   0x404530
  40c9f8:	jmp    0x40bd55
  40c9fd:	mov    rcx,QWORD PTR [rip+0x39a1c]        # 0x446420
  40ca04:	lea    rdx,[rip+0xffffffffffffa4a5]        # 0x406eb0
  40ca0b:	xor    r8d,r8d
  40ca0e:	call   0x403b90
  40ca13:	test   rax,rax
  40ca16:	mov    rbx,rax
  40ca19:	jne    0x40c65f
  40ca1f:	mov    rcx,QWORD PTR [rip+0x399fa]        # 0x446420
  40ca26:	call   0x403b80
  40ca2b:	test   rax,rax
  40ca2e:	mov    rbx,rax
  40ca31:	jne    0x40c65f
  40ca37:	mov    DWORD PTR [rbp+0x0],0x303057
  40ca3e:	jmp    0x40bd55
  40ca43:	mov    rcx,QWORD PTR [rip+0x399d6]        # 0x446420
  40ca4a:	lea    rdx,[rip+0xffffffffffffb51f]        # 0x407f70
  40ca51:	xor    r8d,r8d
  40ca54:	call   0x403b90
  40ca59:	lea    rcx,[rip+0x1f5e0]        # 0x42c040
  40ca60:	mov    rdx,rbp
  40ca63:	call   0x41c030
  40ca68:	jmp    0x40bd55
  40ca6d:	lea    rdi,[rsp+0x90]
  40ca75:	lea    rdx,[rbp+0x10]
  40ca79:	mov    DWORD PTR [rip+0x408d9],0x1        # 0x44d35c
  40ca83:	xor    ebx,ebx
  40ca85:	lea    rsi,[rip+0x408f4]        # 0x44d380
  40ca8c:	mov    rcx,rdi
  40ca8f:	call   0x405660
  40ca94:	jmp    0x40cab8
  40ca96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40caa0:	mov    DWORD PTR [rsi+rbx*4],0x0
  40caa7:	add    rbx,0x1
  40caab:	cmp    rbx,0x98
  40cab2:	je     0x40c880
  40cab8:	cmp    rbx,QWORD PTR [rsp+0x90]
  40cac0:	jne    0x40caa0
  40cac2:	mov    DWORD PTR [rsi+rbx*4],0x1
  40cac9:	cmp    BYTE PTR [rax],0x0
  40cacc:	jne    0x40cae0
  40cace:	mov    QWORD PTR [rsp+0x90],0xffffffffffffffff
  40cada:	jmp    0x40caa7
  40cadc:	nop    DWORD PTR [rax+0x0]
  40cae0:	mov    rdx,rax
  40cae3:	mov    rcx,rdi
  40cae6:	call   0x405660
  40caeb:	jmp    0x40caa7
  40caed:	lea    rdi,[rip+0x25f10]        # 0x432a04
  40caf4:	mov    ecx,0x9
  40caf9:	mov    rsi,rbp
  40cafc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cafe:	jne    0x40cc6f
  40cb04:	lea    rax,[rbp+0x9]
  40cb08:	lea    rdi,[rip+0x2553c]        # 0x43204b
  40cb0f:	mov    ecx,0x2
  40cb14:	mov    rsi,rax
  40cb17:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cb19:	je     0x40ce8d
  40cb1f:	lea    rdi,[rip+0x25523]        # 0x432049
  40cb26:	mov    rsi,rax
  40cb29:	mov    ecx,0x2
  40cb2e:	mov    ebx,0x1
  40cb33:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cb35:	lea    rsi,[rip+0x25d3e]        # 0x43287a
  40cb3c:	seta   dl
  40cb3f:	setb   al
  40cb42:	cmp    dl,al
  40cb44:	jne    0x40d270
  40cb4a:	mov    ecx,ebx
  40cb4c:	call   0x40e1b0
  40cb51:	test   eax,eax
  40cb53:	jne    0x40d001
  40cb59:	mov    rax,QWORD PTR [rip+0x39a50]        # 0x4465b0
  40cb60:	mov    DWORD PTR [rip+0x40d02],ebx        # 0x44d868
  40cb66:	mov    ecx,DWORD PTR [rax]
  40cb68:	test   ecx,ecx
  40cb6a:	je     0x40cb85
  40cb6c:	call   QWORD PTR [rip+0x44bde]        # 0x451750
  40cb72:	lea    rdx,[rip+0x25ed4]        # 0x432a4d
  40cb79:	lea    rcx,[rax+0x60]
  40cb7d:	mov    r8,rsi
  40cb80:	call   0x42aa80
  40cb85:	mov    rcx,rbp
  40cb88:	jmp    0x40c524
  40cb8d:	mov    r9d,DWORD PTR [rbx]
  40cb90:	test   r9d,r9d
  40cb93:	jne    0x40ce9b
  40cb99:	mov    rdx,r12
  40cb9c:	mov    rcx,rbp
  40cb9f:	call   0x4101f0
  40cba4:	test   eax,eax
  40cba6:	je     0x40c9a1
  40cbac:	jmp    0x40c96b
  40cbb1:	lea    rax,[r9+0x1]
  40cbb5:	mov    QWORD PTR [rsp+0x90],rax
  40cbbd:	movzx  r15d,BYTE PTR [r9+0x1]
  40cbc2:	mov    r9,rax
  40cbc5:	jmp    0x40c913
  40cbca:	call   0x403a80
  40cbcf:	test   rax,rax
  40cbd2:	je     0x40cc67
  40cbd8:	mov    rax,QWORD PTR [rip+0x39a81]        # 0x446660
  40cbdf:	mov    rax,QWORD PTR [rax]
  40cbe2:	mov    rax,QWORD PTR [rax+0x260]
  40cbe9:	test   rax,rax
  40cbec:	je     0x40cc67
  40cbee:	call   rax
  40cbf0:	test   eax,eax
  40cbf2:	je     0x40cc67
  40cbf4:	lea    rsi,[rbp+0xf]
  40cbf8:	lea    rdi,[rip+0x2544c]        # 0x43204b
  40cbff:	mov    ecx,0x2
  40cc04:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cc06:	je     0x40d20b
  40cc0c:	cmp    BYTE PTR [rbp+0xf],0x31
  40cc10:	jne    0x40cc26
  40cc12:	movzx  eax,BYTE PTR [rbp+0x10]
  40cc16:	test   al,al
  40cc18:	je     0x40d027
  40cc1e:	cmp    al,0x3b
  40cc20:	je     0x40d027
  40cc26:	call   QWORD PTR [rip+0x44b24]        # 0x451750
  40cc2c:	lea    rdx,[rip+0x25d75]        # 0x4329a8
  40cc33:	lea    rcx,[rax+0x60]
  40cc37:	mov    r8,rbp
  40cc3a:	call   0x42aa80
  40cc3f:	mov    rcx,rbp
  40cc42:	call   0x405bd0
  40cc47:	jmp    0x40bd55
  40cc4c:	call   QWORD PTR [rip+0x44afe]        # 0x451750
  40cc52:	lea    rdx,[rip+0x25f8f]        # 0x432be8
  40cc59:	lea    rcx,[rax+0x60]
  40cc5d:	call   0x42aa80
  40cc62:	jmp    0x40c73b
  40cc67:	mov    rcx,rbp
  40cc6a:	jmp    0x40c13c
  40cc6f:	lea    rdi,[rip+0x25dea]        # 0x432a60
  40cc76:	mov    ecx,0x16
  40cc7b:	mov    rsi,rbp
  40cc7e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cc80:	je     0x40cfae
  40cc86:	mov    r12,QWORD PTR [rip+0x399d3]        # 0x446660
  40cc8d:	mov    rax,QWORD PTR [r12]
  40cc91:	mov    rax,QWORD PTR [rax+0x178]
  40cc98:	test   rax,rax
  40cc9b:	je     0x40cca7
  40cc9d:	call   rax
  40cc9f:	test   eax,eax
  40cca1:	jne    0x40d1f6
  40cca7:	lea    rdi,[rip+0x2607b]        # 0x432d29
  40ccae:	mov    ecx,0x7
  40ccb3:	mov    rsi,rbp
  40ccb6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ccb8:	jne    0x40d0a0
  40ccbe:	lea    rax,[rbp+0x7]
  40ccc2:	lea    rdi,[rip+0x25382]        # 0x43204b
  40ccc9:	mov    ecx,0x2
  40ccce:	mov    rsi,rax
  40ccd1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ccd3:	je     0x40d077
  40ccd9:	lea    rdx,[rip+0x25369]        # 0x432049
  40cce0:	mov    rcx,rax
  40cce3:	call   0x42a628
  40cce8:	test   eax,eax
  40ccea:	jne    0x40d474
  40ccf0:	mov    rax,QWORD PTR [rip+0x39999]        # 0x446690
  40ccf7:	lea    rbx,[rip+0x25b96]        # 0x432894
  40ccfe:	mov    DWORD PTR [rax],0x1
  40cd04:	mov    rax,QWORD PTR [rip+0x398a5]        # 0x4465b0
  40cd0b:	cmp    DWORD PTR [rax],0x0
  40cd0e:	je     0x40cb85
  40cd14:	call   QWORD PTR [rip+0x44a36]        # 0x451750
  40cd1a:	lea    rdx,[rip+0x25dbd]        # 0x432ade
  40cd21:	lea    rcx,[rax+0x60]
  40cd25:	mov    r8,rbx
  40cd28:	call   0x42aa80
  40cd2d:	jmp    0x40cb85
  40cd32:	lea    rcx,[rip+0x25f87]        # 0x432cc0
  40cd39:	call   0x41d1b0
  40cd3e:	mov    rdx,QWORD PTR [rsp+0x90]
  40cd46:	jmp    0x40c946
  40cd4b:	mov    rax,QWORD PTR [rsp+0x70]
  40cd50:	mov    rcx,rdi
  40cd53:	mov    QWORD PTR [rsp+0x40],rax
  40cd58:	mov    eax,DWORD PTR [rsp+0x78]
  40cd5c:	mov    DWORD PTR [rsp+0x48],eax
  40cd60:	mov    rax,QWORD PTR [rip+0x397d9]        # 0x446540
  40cd67:	mov    rdx,QWORD PTR [rax]
  40cd6a:	mov    QWORD PTR [rsp+0x30],rdx
  40cd6f:	mov    eax,DWORD PTR [rax+0x8]
  40cd72:	mov    rdx,rsi
  40cd75:	mov    DWORD PTR [rsp+0x38],eax
  40cd79:	call   0x41ad50
  40cd7e:	test   eax,eax
  40cd80:	jne    0x40c4ef
  40cd86:	mov    edx,DWORD PTR [rsp+0x68]
  40cd8a:	test   edx,edx
  40cd8c:	jne    0x40ceac
  40cd92:	mov    rax,QWORD PTR [rsp+0x70]
  40cd97:	lea    rcx,[rsp+0x90]
  40cd9f:	mov    rdx,rdi
  40cda2:	mov    QWORD PTR [rsp+0x40],rax
  40cda7:	mov    eax,DWORD PTR [rsp+0x78]
  40cdab:	mov    DWORD PTR [rsp+0x48],eax
  40cdaf:	call   0x403c80
  40cdb4:	mov    rax,QWORD PTR [rsp+0x90]
  40cdbc:	mov    rdx,rsi
  40cdbf:	mov    rcx,rdi
  40cdc2:	mov    QWORD PTR [rsp+0x40],rax
  40cdc7:	mov    eax,DWORD PTR [rsp+0x98]
  40cdce:	mov    DWORD PTR [rsp+0x48],eax
  40cdd2:	mov    rax,QWORD PTR [rbx]
  40cdd5:	mov    QWORD PTR [rsp+0x30],rax
  40cdda:	mov    eax,DWORD PTR [rbx+0x8]
  40cddd:	mov    DWORD PTR [rsp+0x38],eax
  40cde1:	call   0x41ad50
  40cde6:	test   eax,eax
  40cde8:	je     0x40c504
  40cdee:	jmp    0x40c01f
  40cdf3:	call   0x403a80
  40cdf8:	test   rax,rax
  40cdfb:	jne    0x40c3af
  40ce01:	mov    rcx,QWORD PTR [rip+0x40538]        # 0x44d340
  40ce08:	call   0x405880
  40ce0d:	call   0x4055b0
  40ce12:	mov    rax,QWORD PTR [rbx]
  40ce15:	mov    ecx,edi
  40ce17:	call   QWORD PTR [rax+0x30]
  40ce1a:	xor    ecx,ecx
  40ce1c:	call   0x42a708
  40ce21:	mov    rax,QWORD PTR [rip+0x40af0]        # 0x44d918
  40ce28:	mov    QWORD PTR [rip+0x40a59],rax        # 0x44d888
  40ce2f:	mov    eax,DWORD PTR [rip+0x40aeb]        # 0x44d920
  40ce35:	mov    DWORD PTR [rip+0x40a55],eax        # 0x44d890
  40ce3b:	jmp    0x40bd82
  40ce40:	call   QWORD PTR [rip+0x4490a]        # 0x451750
  40ce46:	lea    rdx,[rip+0x25d4b]        # 0x432b98
  40ce4d:	lea    rcx,[rax+0x60]
  40ce51:	call   0x42aa80
  40ce56:	jmp    0x40c72e
  40ce5b:	lea    rcx,[rip+0x25dd2]        # 0x432c34
  40ce62:	call   0x41d1b0
  40ce67:	jmp    0x40c753
  40ce6c:	mov    rdx,QWORD PTR [rsp+0x90]
  40ce74:	mov    QWORD PTR [rip+0x40a19],rdx        # 0x44d894
  40ce7b:	mov    edx,DWORD PTR [rsp+0x98]
  40ce82:	mov    DWORD PTR [rip+0x40a14],edx        # 0x44d89c
  40ce88:	jmp    0x40c524
  40ce8d:	xor    ebx,ebx
  40ce8f:	lea    rsi,[rip+0x259ed]        # 0x432883
  40ce96:	jmp    0x40cb4a
  40ce9b:	lea    rcx,[rip+0x25df4]        # 0x432c96
  40cea2:	call   0x41d1b0
  40cea7:	jmp    0x40cb99
  40ceac:	lea    rcx,[rsp+0x80]
  40ceb4:	call   0x41ad00
  40ceb9:	mov    rax,QWORD PTR [rsp+0x80]
  40cec1:	mov    rdx,rsi
  40cec4:	mov    rcx,rdi
  40cec7:	mov    QWORD PTR [rsp+0x40],rax
  40cecc:	mov    eax,DWORD PTR [rsp+0x88]
  40ced3:	mov    DWORD PTR [rsp+0x48],eax
  40ced7:	mov    rax,QWORD PTR [rsp+0x70]
  40cedc:	mov    QWORD PTR [rsp+0x30],rax
  40cee1:	mov    eax,DWORD PTR [rsp+0x78]
  40cee5:	mov    DWORD PTR [rsp+0x38],eax
  40cee9:	call   0x41ad50
  40ceee:	test   eax,eax
  40cef0:	je     0x40cd92
  40cef6:	mov    rcx,QWORD PTR [rip+0x39523]        # 0x446420
  40cefd:	lea    r8,[rsp+0x68]
  40cf02:	lea    rdx,[rip+0xffffffffffffa017]        # 0x406f20
  40cf09:	call   0x403b90
  40cf0e:	test   rax,rax
  40cf11:	je     0x40c01f
  40cf17:	mov    rdx,QWORD PTR [rax]
  40cf1a:	mov    QWORD PTR [rsp+0x90],rdx
  40cf22:	mov    eax,DWORD PTR [rax+0x8]
  40cf25:	mov    DWORD PTR [rsp+0x98],eax
  40cf2c:	jmp    0x40c504
  40cf31:	mov    rax,QWORD PTR [rsp+0x90]
  40cf39:	mov    rdx,rsi
  40cf3c:	mov    rcx,rdi
  40cf3f:	mov    QWORD PTR [rsp+0x40],rax
  40cf44:	mov    eax,DWORD PTR [rsp+0x98]
  40cf4b:	mov    DWORD PTR [rsp+0x48],eax
  40cf4f:	mov    rax,QWORD PTR [rbx]
  40cf52:	mov    QWORD PTR [rsp+0x30],rax
  40cf57:	mov    eax,DWORD PTR [rbx+0x8]
  40cf5a:	mov    DWORD PTR [rsp+0x38],eax
  40cf5e:	call   0x41ad50
  40cf63:	test   eax,eax
  40cf65:	jne    0x40d228
  40cf6b:	mov    rax,QWORD PTR [rsp+0x90]
  40cf73:	mov    ecx,0x1
  40cf78:	mov    QWORD PTR [rip+0x40909],rax        # 0x44d888
  40cf7f:	mov    eax,DWORD PTR [rsp+0x98]
  40cf86:	mov    DWORD PTR [rip+0x40904],eax        # 0x44d890
  40cf8c:	call   0x40dd70
  40cf91:	mov    rax,QWORD PTR [rip+0x394b8]        # 0x446450
  40cf98:	cmp    QWORD PTR [rax],0x0
  40cf9c:	je     0x40d764
  40cfa2:	mov    rcx,QWORD PTR [rip+0x40397]        # 0x44d340
  40cfa9:	jmp    0x40c524
  40cfae:	lea    rdx,[rsp+0x90]
  40cfb6:	lea    rcx,[rbp+0x16]
  40cfba:	call   0x41ce20
  40cfbf:	mov    rdx,QWORD PTR [rip+0x395ea]        # 0x4465b0
  40cfc6:	mov    rax,QWORD PTR [rsp+0x90]
  40cfce:	mov    edx,DWORD PTR [rdx]
  40cfd0:	mov    DWORD PTR [rip+0x1f08a],eax        # 0x42c060
  40cfd6:	test   edx,edx
  40cfd8:	je     0x40cb85
  40cfde:	test   eax,eax
  40cfe0:	je     0x40d296
  40cfe6:	call   QWORD PTR [rip+0x44764]        # 0x451750
  40cfec:	lea    rdx,[rip+0x25a85]        # 0x432a78
  40cff3:	lea    rcx,[rax+0x60]
  40cff7:	call   0x42aa80
  40cffc:	jmp    0x40cb85
  40d001:	call   QWORD PTR [rip+0x44749]        # 0x451750
  40d007:	lea    rdx,[rip+0x25a27]        # 0x432a35
  40d00e:	lea    rcx,[rax+0x60]
  40d012:	mov    r8,rsi
  40d015:	call   0x42aa80
  40d01a:	mov    rcx,rbp
  40d01d:	call   0x405bd0
  40d022:	jmp    0x40bd55
  40d027:	call   0x404000
  40d02c:	mov    rcx,QWORD PTR [rax+0x40]
  40d030:	mov    rsi,rax
  40d033:	test   rcx,rcx
  40d036:	je     0x40d168
  40d03c:	mov    DWORD PTR [rcx],0x0
  40d042:	cmp    BYTE PTR [rbp+0x10],0x3b
  40d046:	je     0x40d172
  40d04c:	cmp    DWORD PTR [rcx+0x4],0x0
  40d050:	je     0x40d310
  40d056:	mov    rdx,QWORD PTR [rsi+0x40]
  40d05a:	mov    eax,DWORD PTR [rdx]
  40d05c:	cmp    eax,DWORD PTR [rdx+0x4]
  40d05f:	jae    0x40d556
  40d065:	lea    ecx,[rax+0x1]
  40d068:	mov    DWORD PTR [rdx],ecx
  40d06a:	mov    DWORD PTR [rdx+rax*4+0x8],0xfffffffe
  40d072:	jmp    0x40cb85
  40d077:	mov    rax,QWORD PTR [rip+0x39612]        # 0x446690
  40d07e:	lea    rbx,[rip+0x25807]        # 0x43288c
  40d085:	mov    DWORD PTR [rax],0x0
  40d08b:	mov    rax,QWORD PTR [rip+0x3951e]        # 0x4465b0
  40d092:	cmp    DWORD PTR [rax],0x0
  40d095:	jne    0x40cd14
  40d09b:	jmp    0x40cb85
  40d0a0:	lea    rdx,[rip+0x25a43]        # 0x432aea
  40d0a7:	mov    r8d,0x8
  40d0ad:	mov    rcx,rbp
  40d0b0:	call   0x42a608
  40d0b5:	test   eax,eax
  40d0b7:	je     0x40d2b1
  40d0bd:	lea    rdx,[rip+0x25c93]        # 0x432d57
  40d0c4:	mov    r8d,0xd
  40d0ca:	mov    rcx,rbp
  40d0cd:	call   0x42a608
  40d0d2:	test   eax,eax
  40d0d4:	je     0x40d32f
  40d0da:	lea    rdx,[rip+0x25c96]        # 0x432d77
  40d0e1:	mov    r8d,0xe
  40d0e7:	mov    rcx,rbp
  40d0ea:	call   0x42a608
  40d0ef:	test   eax,eax
  40d0f1:	jne    0x40bd51
  40d0f7:	lea    rbx,[rbp+0xe]
  40d0fb:	lea    rdx,[rip+0x24f49]        # 0x43204b
  40d102:	mov    rcx,rbx
  40d105:	call   0x42a628
  40d10a:	test   eax,eax
  40d10c:	je     0x40d4da
  40d112:	lea    rdx,[rip+0x24f30]        # 0x432049
  40d119:	mov    rcx,rbx
  40d11c:	call   0x42a628
  40d121:	test   eax,eax
  40d123:	jne    0x40d4b0
  40d129:	mov    rax,QWORD PTR [rip+0x39480]        # 0x4465b0
  40d130:	mov    DWORD PTR [rip+0x40732],0x1        # 0x44d86c
  40d13a:	lea    rbx,[rip+0x2575a]        # 0x43289b
  40d141:	cmp    DWORD PTR [rax],0x0
  40d144:	je     0x40cb85
  40d14a:	call   QWORD PTR [rip+0x44600]        # 0x451750
  40d150:	lea    rdx,[rip+0x25a25]        # 0x432b7c
  40d157:	lea    rcx,[rax+0x60]
  40d15b:	mov    r8,rbx
  40d15e:	call   0x42aa80
  40d163:	jmp    0x40cb85
  40d168:	cmp    BYTE PTR [rbp+0x10],0x3b
  40d16c:	jne    0x40d310
  40d172:	cmp    BYTE PTR [rbp+0x11],0x0
  40d176:	lea    rbx,[rbp+0x11]
  40d17a:	je     0x40cb85
  40d180:	lea    rdi,[rsp+0x90]
  40d188:	jmp    0x40d1b2
  40d18a:	mov    r8d,DWORD PTR [rcx]
  40d18d:	mov    eax,DWORD PTR [rcx+0x4]
  40d190:	cmp    eax,r8d
  40d193:	je     0x40d1d1
  40d195:	cmp    eax,r8d
  40d198:	jbe    0x40d52b
  40d19e:	lea    eax,[r8+0x1]
  40d1a2:	mov    DWORD PTR [rcx],eax
  40d1a4:	mov    DWORD PTR [rcx+r8*4+0x8],r12d
  40d1a9:	cmp    BYTE PTR [rbx],0x0
  40d1ac:	je     0x40cb85
  40d1b2:	mov    rdx,rbx
  40d1b5:	mov    rcx,rdi
  40d1b8:	call   0x405660
  40d1bd:	mov    rcx,QWORD PTR [rsi+0x40]
  40d1c1:	mov    rbx,rax
  40d1c4:	mov    r12,QWORD PTR [rsp+0x90]
  40d1cc:	test   rcx,rcx
  40d1cf:	jne    0x40d18a
  40d1d1:	mov    r8d,0x8
  40d1d7:	mov    r9d,0x4
  40d1dd:	mov    edx,0x1
  40d1e2:	call   0x40ea70
  40d1e7:	mov    rcx,rax
  40d1ea:	mov    QWORD PTR [rsi+0x40],rax
  40d1ee:	mov    r8d,DWORD PTR [rax]
  40d1f1:	mov    eax,DWORD PTR [rax+0x4]
  40d1f4:	jmp    0x40d195
  40d1f6:	mov    rcx,rbp
  40d1f9:	call   0x416000
  40d1fe:	test   eax,eax
  40d200:	jne    0x40bd55
  40d206:	jmp    0x40cca7
  40d20b:	call   0x404000
  40d210:	mov    rax,QWORD PTR [rax+0x40]
  40d214:	test   rax,rax
  40d217:	je     0x40cb85
  40d21d:	mov    DWORD PTR [rax],0x0
  40d223:	jmp    0x40cb85
  40d228:	mov    rax,QWORD PTR [rip+0x40659]        # 0x44d888
  40d22f:	mov    rcx,QWORD PTR [rip+0x391ea]        # 0x446420
  40d236:	mov    rdx,rdi
  40d239:	mov    QWORD PTR [rsp+0x40],rax
  40d23e:	mov    eax,DWORD PTR [rip+0x4064c]        # 0x44d890
  40d244:	mov    DWORD PTR [rsp+0x48],eax
  40d248:	call   0x403be0
  40d24d:	test   rax,rax
  40d250:	je     0x40d78f
  40d256:	mov    rdx,QWORD PTR [rax]
  40d259:	mov    QWORD PTR [rsp+0x90],rdx
  40d261:	mov    eax,DWORD PTR [rax+0x8]
  40d264:	mov    DWORD PTR [rsp+0x98],eax
  40d26b:	jmp    0x40cf6b
  40d270:	call   QWORD PTR [rip+0x444da]        # 0x451750
  40d276:	lea    rdx,[rip+0x25793]        # 0x432a10
  40d27d:	lea    rcx,[rax+0x60]
  40d281:	mov    r8,rbp
  40d284:	call   0x42aa80
  40d289:	mov    rcx,rbp
  40d28c:	call   0x405bd0
  40d291:	jmp    0x40bd55
  40d296:	call   QWORD PTR [rip+0x444b4]        # 0x451750
  40d29c:	lea    rdx,[rip+0x257fd]        # 0x432aa0
  40d2a3:	lea    rcx,[rax+0x60]
  40d2a7:	call   0x42aa80
  40d2ac:	jmp    0x40cb85
  40d2b1:	mov    rax,QWORD PTR [rip+0x405d0]        # 0x44d888
  40d2b8:	lea    rbx,[rsp+0x30]
  40d2bd:	lea    rsi,[rsp+0x40]
  40d2c2:	mov    rcx,rsi
  40d2c5:	mov    QWORD PTR [rsp+0x40],rax
  40d2ca:	mov    eax,DWORD PTR [rip+0x405c0]        # 0x44d890
  40d2d0:	mov    DWORD PTR [rsp+0x48],eax
  40d2d4:	mov    rax,QWORD PTR [rip+0x392b5]        # 0x446590
  40d2db:	mov    rdx,QWORD PTR [rax]
  40d2de:	mov    QWORD PTR [rsp+0x30],rdx
  40d2e3:	mov    eax,DWORD PTR [rax+0x8]
  40d2e6:	mov    rdx,rbx
  40d2e9:	mov    DWORD PTR [rsp+0x38],eax
  40d2ed:	call   0x41ad50
  40d2f2:	test   eax,eax
  40d2f4:	je     0x40d581
  40d2fa:	lea    rsi,[rip+0x25a37]        # 0x432d38
  40d301:	mov    ecx,0x1f
  40d306:	mov    rdi,rbp
  40d309:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d30b:	jmp    0x40bd55
  40d310:	mov    r9d,0x4
  40d316:	mov    r8d,0x8
  40d31c:	mov    edx,0x1
  40d321:	call   0x40ea70
  40d326:	mov    QWORD PTR [rsi+0x40],rax
  40d32a:	jmp    0x40d056
  40d32f:	mov    rax,QWORD PTR [rip+0x40552]        # 0x44d888
  40d336:	lea    rdi,[rsp+0x30]
  40d33b:	lea    rbx,[rsp+0x40]
  40d340:	lea    rsi,[rbp+0xd]
  40d344:	mov    rcx,rbx
  40d347:	mov    QWORD PTR [rsp+0x40],rax
  40d34c:	mov    eax,DWORD PTR [rip+0x4053e]        # 0x44d890
  40d352:	mov    DWORD PTR [rsp+0x48],eax
  40d356:	mov    rax,QWORD PTR [rip+0x39233]        # 0x446590
  40d35d:	mov    rdx,QWORD PTR [rax]
  40d360:	mov    QWORD PTR [rsp+0x30],rdx
  40d365:	mov    eax,DWORD PTR [rax+0x8]
  40d368:	mov    rdx,rdi
  40d36b:	mov    DWORD PTR [rsp+0x38],eax
  40d36f:	call   0x41ad50
  40d374:	test   eax,eax
  40d376:	jne    0x40d2fa
  40d378:	mov    rax,QWORD PTR [rip+0x40509]        # 0x44d888
  40d37f:	mov    rcx,rbx
  40d382:	mov    QWORD PTR [rsp+0x40],rax
  40d387:	mov    eax,DWORD PTR [rip+0x40503]        # 0x44d890
  40d38d:	mov    DWORD PTR [rsp+0x48],eax
  40d391:	mov    rax,QWORD PTR [rip+0x391a8]        # 0x446540
  40d398:	mov    rdx,QWORD PTR [rax]
  40d39b:	mov    QWORD PTR [rsp+0x30],rdx
  40d3a0:	mov    eax,DWORD PTR [rax+0x8]
  40d3a3:	mov    rdx,rdi
  40d3a6:	mov    DWORD PTR [rsp+0x38],eax
  40d3aa:	call   0x41ad50
  40d3af:	test   eax,eax
  40d3b1:	jne    0x40d2fa
  40d3b7:	mov    rax,QWORD PTR [rip+0x404ca]        # 0x44d888
  40d3be:	mov    rcx,rbx
  40d3c1:	mov    QWORD PTR [rsp+0x40],rax
  40d3c6:	mov    eax,DWORD PTR [rip+0x404c4]        # 0x44d890
  40d3cc:	mov    DWORD PTR [rsp+0x48],eax
  40d3d0:	call   0x403c50
  40d3d5:	test   rax,rax
  40d3d8:	je     0x40d488
  40d3de:	lea    rdx,[rip+0x2572b]        # 0x432b10
  40d3e5:	mov    r8d,0x9
  40d3eb:	mov    rcx,rsi
  40d3ee:	call   0x42a608
  40d3f3:	test   eax,eax
  40d3f5:	je     0x40d700
  40d3fb:	lea    rdx,[rip+0x25718]        # 0x432b1a
  40d402:	mov    r8d,0x8
  40d408:	mov    rcx,rsi
  40d40b:	call   0x42a608
  40d410:	test   eax,eax
  40d412:	jne    0x40d6ea
  40d418:	mov    QWORD PTR [rsp+0x90],0x0
  40d424:	mov    rbx,QWORD PTR [rip+0x44365]        # 0x451790
  40d42b:	call   rbx
  40d42d:	lea    rdx,[rsp+0x90]
  40d435:	lea    rcx,[rbp+0x15]
  40d439:	mov    DWORD PTR [rax],0x0
  40d43f:	mov    r8d,0x10
  40d445:	call   0x42a5e0
  40d44a:	mov    rdx,QWORD PTR [rsp+0x90]
  40d452:	mov    esi,eax
  40d454:	test   rdx,rdx
  40d457:	je     0x40d45e
  40d459:	cmp    BYTE PTR [rdx],0x0
  40d45c:	je     0x40d49e
  40d45e:	lea    rsi,[rip+0x25900]        # 0x432d65
  40d465:	mov    ecx,0x12
  40d46a:	mov    rdi,rbp
  40d46d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d46f:	jmp    0x40bd55
  40d474:	lea    rdx,[rip+0x2564c]        # 0x432ac7
  40d47b:	mov    rcx,rbp
  40d47e:	call   0x42aab0
  40d483:	jmp    0x40bd55
  40d488:	lea    rsi,[rip+0x25664]        # 0x432af3
  40d48f:	mov    ecx,0x12
  40d494:	mov    rdi,rbp
  40d497:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d499:	jmp    0x40bd55
  40d49e:	call   rbx
  40d4a0:	cmp    DWORD PTR [rax],0x0
  40d4a3:	jne    0x40d45e
  40d4a5:	mov    DWORD PTR [rip+0x40461],esi        # 0x44d90c
  40d4ab:	jmp    0x40cb85
  40d4b0:	mov    rcx,rbx
  40d4b3:	call   0x40e730
  40d4b8:	lea    rdx,[rip+0x25691]        # 0x432b50
  40d4bf:	mov    rbx,rax
  40d4c2:	mov    rcx,rbp
  40d4c5:	mov    r8,rax
  40d4c8:	call   0x42aab0
  40d4cd:	mov    rcx,rbx
  40d4d0:	call   0x41a7c0
  40d4d5:	jmp    0x40bd55
  40d4da:	mov    rax,QWORD PTR [rip+0x390cf]        # 0x4465b0
  40d4e1:	mov    DWORD PTR [rip+0x40381],0x0        # 0x44d86c
  40d4eb:	lea    rbx,[rip+0x253b1]        # 0x4328a3
  40d4f2:	cmp    DWORD PTR [rax],0x0
  40d4f5:	jne    0x40d14a
  40d4fb:	jmp    0x40cb85
  40d500:	lea    rax,[rip+0x25749]        # 0x432c50
  40d507:	lea    r9,[rip+0x25ab2]        # 0x432fc0
  40d50e:	lea    r8,[rip+0x2428b]        # 0x4317a0
  40d515:	lea    rcx,[rip+0x2429f]        # 0x4317bb
  40d51c:	mov    edx,0xcbf
  40d521:	mov    QWORD PTR [rsp+0x20],rax
  40d526:	call   0x41d170
  40d52b:	lea    rax,[rip+0x254a1]        # 0x4329d3
  40d532:	lea    r9,[rip+0x25ac7]        # 0x433000
  40d539:	lea    r8,[rip+0x24260]        # 0x4317a0
  40d540:	lea    rcx,[rip+0x24274]        # 0x4317bb
  40d547:	mov    edx,0x298
  40d54c:	mov    QWORD PTR [rsp+0x20],rax
  40d551:	call   0x41d170
  40d556:	lea    rax,[rip+0x25476]        # 0x4329d3
  40d55d:	lea    r9,[rip+0x25a9c]        # 0x433000
  40d564:	lea    r8,[rip+0x24235]        # 0x4317a0
  40d56b:	lea    rcx,[rip+0x24249]        # 0x4317bb
  40d572:	mov    edx,0x29c
  40d577:	mov    QWORD PTR [rsp+0x20],rax
  40d57c:	call   0x41d170
  40d581:	mov    rax,QWORD PTR [rip+0x40300]        # 0x44d888
  40d588:	mov    rcx,rsi
  40d58b:	mov    QWORD PTR [rsp+0x40],rax
  40d590:	mov    eax,DWORD PTR [rip+0x402fa]        # 0x44d890
  40d596:	mov    DWORD PTR [rsp+0x48],eax
  40d59a:	mov    rax,QWORD PTR [rip+0x38f9f]        # 0x446540
  40d5a1:	mov    rdx,QWORD PTR [rax]
  40d5a4:	mov    QWORD PTR [rsp+0x30],rdx
  40d5a9:	mov    eax,DWORD PTR [rax+0x8]
  40d5ac:	mov    rdx,rbx
  40d5af:	mov    DWORD PTR [rsp+0x38],eax
  40d5b3:	call   0x41ad50
  40d5b8:	test   eax,eax
  40d5ba:	jne    0x40d2fa
  40d5c0:	mov    rax,QWORD PTR [rip+0x402c1]        # 0x44d888
  40d5c7:	mov    rcx,rsi
  40d5ca:	mov    QWORD PTR [rsp+0x40],rax
  40d5cf:	mov    eax,DWORD PTR [rip+0x402bb]        # 0x44d890
  40d5d5:	mov    DWORD PTR [rsp+0x48],eax
  40d5d9:	call   0x403c50
  40d5de:	test   rax,rax
  40d5e1:	mov    rbx,rax
  40d5e4:	je     0x40d488
  40d5ea:	lea    rdi,[rbp+0x8]
  40d5ee:	lea    rdx,[rip+0x25510]        # 0x432b05
  40d5f5:	mov    rcx,rdi
  40d5f8:	call   0x42a628
  40d5fd:	test   eax,eax
  40d5ff:	je     0x40d6bb
  40d605:	lea    rdx,[rip+0x254fd]        # 0x432b09
  40d60c:	mov    rcx,rdi
  40d60f:	call   0x42a628
  40d614:	test   eax,eax
  40d616:	je     0x40d66b
  40d618:	lea    rdx,[rip+0x254ed]        # 0x432b0c
  40d61f:	mov    rcx,rdi
  40d622:	call   0x42a628
  40d627:	test   eax,eax
  40d629:	jne    0x40d657
  40d62b:	mov    rcx,QWORD PTR [rbx+0x58]
  40d62f:	test   rcx,rcx
  40d632:	je     0x40d6de
  40d638:	mov    rax,QWORD PTR [r12]
  40d63c:	call   QWORD PTR [rax+0x1f8]
  40d642:	test   eax,eax
  40d644:	jne    0x40d6d5
  40d64a:	mov    QWORD PTR [rbx+0x58],0x0
  40d652:	jmp    0x40cb85
  40d657:	lea    rdx,[rip+0x252ca]        # 0x432928
  40d65e:	mov    rcx,rbp
  40d661:	call   0x42a620
  40d666:	jmp    0x40bd55
  40d66b:	cmp    QWORD PTR [rbx+0x58],0x0
  40d670:	lea    rdx,[rip+0x25235]        # 0x4328ac
  40d677:	jne    0x40d65e
  40d679:	mov    DWORD PTR [rip+0x40281],0x2        # 0x44d904
  40d683:	mov    rax,QWORD PTR [rbx]
  40d686:	lea    rdx,[rip+0x40277]        # 0x44d904
  40d68d:	mov    rcx,rsi
  40d690:	mov    QWORD PTR [rsp+0x40],rax
  40d695:	mov    eax,DWORD PTR [rbx+0x8]
  40d698:	mov    DWORD PTR [rsp+0x48],eax
  40d69c:	mov    rax,QWORD PTR [r12]
  40d6a0:	call   QWORD PTR [rax+0x1f0]
  40d6a6:	test   rax,rax
  40d6a9:	mov    QWORD PTR [rbx+0x58],rax
  40d6ad:	lea    rdx,[rip+0x25212]        # 0x4328c6
  40d6b4:	je     0x40d65e
  40d6b6:	jmp    0x40cb85
  40d6bb:	cmp    QWORD PTR [rbx+0x58],0x0
  40d6c0:	lea    rdx,[rip+0x251e5]        # 0x4328ac
  40d6c7:	jne    0x40d65e
  40d6c9:	mov    DWORD PTR [rip+0x40231],0x1        # 0x44d904
  40d6d3:	jmp    0x40d683
  40d6d5:	lea    rdx,[rip+0x25224]        # 0x432900
  40d6dc:	jmp    0x40d65e
  40d6de:	lea    rdx,[rip+0x251fc]        # 0x4328e1
  40d6e5:	jmp    0x40d65e
  40d6ea:	lea    rsi,[rip+0x25437]        # 0x432b28
  40d6f1:	mov    ecx,0x9
  40d6f6:	mov    rdi,rbp
  40d6f9:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40d6fb:	jmp    0x40bd55
  40d700:	mov    QWORD PTR [rsp+0x90],0x0
  40d70c:	mov    rbx,QWORD PTR [rip+0x4407d]        # 0x451790
  40d713:	call   rbx
  40d715:	lea    rdx,[rsp+0x90]
  40d71d:	lea    rcx,[rbp+0x16]
  40d721:	mov    DWORD PTR [rax],0x0
  40d727:	mov    r8d,0x10
  40d72d:	call   0x42a5e0
  40d732:	mov    rdx,QWORD PTR [rsp+0x90]
  40d73a:	mov    esi,eax
  40d73c:	test   rdx,rdx
  40d73f:	je     0x40d45e
  40d745:	cmp    BYTE PTR [rdx],0x0
  40d748:	jne    0x40d45e
  40d74e:	call   rbx
  40d750:	cmp    DWORD PTR [rax],0x0
  40d753:	jne    0x40d45e
  40d759:	mov    DWORD PTR [rip+0x401a9],esi        # 0x44d908
  40d75f:	jmp    0x40cb85
  40d764:	lea    rax,[rip+0x25514]        # 0x432c7f
  40d76b:	lea    r9,[rip+0x258de]        # 0x433050
  40d772:	lea    r8,[rip+0x24027]        # 0x4317a0
  40d779:	lea    rcx,[rip+0x2403b]        # 0x4317bb
  40d780:	mov    edx,0xfeb
  40d785:	mov    QWORD PTR [rsp+0x20],rax
  40d78a:	call   0x41d170
  40d78f:	call   0x403a80
  40d794:	jmp    0x40d256
  40d799:	nop    DWORD PTR [rax+0x0]
  40d7a0:	push   rbp
  40d7a1:	push   rdi
  40d7a2:	push   rsi
  40d7a3:	push   rbx
  40d7a4:	sub    rsp,0x88
  40d7ab:	mov    rsi,QWORD PTR [rip+0x38cbe]        # 0x446470
  40d7b2:	mov    r9d,DWORD PTR [rsi]
  40d7b5:	test   r9d,r9d
  40d7b8:	jne    0x40d990
  40d7be:	mov    rax,QWORD PTR [rip+0x38d7b]        # 0x446540
  40d7c5:	lea    rbx,[rsp+0x40]
  40d7ca:	lea    r8,[rip+0x4015f]        # 0x44d930
  40d7d1:	mov    r9d,0x1
  40d7d7:	mov    rcx,rbx
  40d7da:	mov    rdx,QWORD PTR [rax]
  40d7dd:	mov    QWORD PTR [rsp+0x30],rdx
  40d7e2:	mov    eax,DWORD PTR [rax+0x8]
  40d7e5:	lea    rdx,[rsp+0x30]
  40d7ea:	mov    DWORD PTR [rsp+0x20],0x1
  40d7f2:	mov    DWORD PTR [rsp+0x38],eax
  40d7f6:	call   0x40dff0
  40d7fb:	mov    eax,DWORD PTR [rip+0x4012f]        # 0x44d930
  40d801:	mov    rcx,QWORD PTR [rsp+0x40]
  40d806:	mov    edx,DWORD PTR [rsp+0x48]
  40d80a:	cmp    eax,0xd
  40d80d:	mov    QWORD PTR [rip+0x40104],rcx        # 0x44d918
  40d814:	mov    DWORD PTR [rip+0x40106],edx        # 0x44d920
  40d81a:	je     0x40d9e0
  40d820:	cmp    eax,0xb
  40d823:	je     0x40d955
  40d829:	mov    QWORD PTR [rsp+0x40],rcx
  40d82e:	mov    rcx,rbx
  40d831:	mov    DWORD PTR [rsp+0x48],edx
  40d835:	call   0x41ad20
  40d83a:	mov    ecx,eax
  40d83c:	mov    edi,0x1
  40d841:	call   0x403f00
  40d846:	mov    rbp,rax
  40d849:	call   0x4052b0
  40d84e:	test   eax,eax
  40d850:	jne    0x40d970
  40d856:	mov    edx,DWORD PTR [rip+0x400d4]        # 0x44d930
  40d85c:	test   edx,0xfffffffd
  40d862:	je     0x40d9c1
  40d868:	cmp    edx,0xf
  40d86b:	je     0x40d89f
  40d86d:	mov    rax,QWORD PTR [rip+0x38bdc]        # 0x446450
  40d874:	mov    rdx,QWORD PTR [rip+0x400b5]        # 0x44d930
  40d87b:	mov    rax,QWORD PTR [rax]
  40d87e:	mov    QWORD PTR [rax+0x30],rdx
  40d882:	mov    rdx,QWORD PTR [rip+0x400af]        # 0x44d938
  40d889:	mov    DWORD PTR [rax+0x28],0x2
  40d890:	mov    QWORD PTR [rax+0x38],rdx
  40d894:	mov    rdx,QWORD PTR [rip+0x400a5]        # 0x44d940
  40d89b:	mov    QWORD PTR [rax+0x40],rdx
  40d89f:	test   dil,dil
  40d8a2:	je     0x40d9a1
  40d8a8:	call   0x403a80
  40d8ad:	test   rax,rax
  40d8b0:	je     0x40da34
  40d8b6:	mov    eax,DWORD PTR [rip+0x40074]        # 0x44d930
  40d8bc:	test   eax,0xfffffffd
  40d8c1:	je     0x40d955
  40d8c7:	cmp    eax,0xf
  40d8ca:	je     0x40d955
  40d8d0:	mov    edx,DWORD PTR [rsi]
  40d8d2:	test   edx,edx
  40d8d4:	je     0x40d90f
  40d8d6:	mov    rax,QWORD PTR [rip+0x4003b]        # 0x44d918
  40d8dd:	mov    rcx,rbx
  40d8e0:	mov    QWORD PTR [rsp+0x40],rax
  40d8e5:	mov    eax,DWORD PTR [rip+0x40035]        # 0x44d920
  40d8eb:	mov    DWORD PTR [rsp+0x48],eax
  40d8ef:	call   0x40e230
  40d8f4:	mov    edx,DWORD PTR [rip+0x40036]        # 0x44d930
  40d8fa:	lea    rcx,[rip+0x2562f]        # 0x432f30
  40d901:	mov    r8,rax
  40d904:	call   0x41d1b0
  40d909:	mov    eax,DWORD PTR [rip+0x40021]        # 0x44d930
  40d90f:	mov    rdx,QWORD PTR [rip+0x40002]        # 0x44d918
  40d916:	cmp    eax,0x1
  40d919:	mov    DWORD PTR [rsp+0x5c],0x0
  40d921:	mov    QWORD PTR [rsp+0x50],rdx
  40d926:	mov    edx,DWORD PTR [rip+0x3fff4]        # 0x44d920
  40d92c:	mov    DWORD PTR [rsp+0x58],edx
  40d930:	je     0x40da20
  40d936:	mov    DWORD PTR [rsp+0x60],0x0
  40d93e:	mov    rax,QWORD PTR [rip+0x38d1b]        # 0x446660
  40d945:	lea    rcx,[rsp+0x50]
  40d94a:	mov    edx,0x1
  40d94f:	mov    rax,QWORD PTR [rax]
  40d952:	call   QWORD PTR [rax+0x40]
  40d955:	mov    ecx,0x1
  40d95a:	call   0x40dd70
  40d95f:	xor    eax,eax
  40d961:	add    rsp,0x88
  40d968:	pop    rbx
  40d969:	pop    rsi
  40d96a:	pop    rdi
  40d96b:	pop    rbp
  40d96c:	ret    
  40d96d:	nop    DWORD PTR [rax]
  40d970:	mov    ecx,DWORD PTR [rbp+0x1c]
  40d973:	mov    edx,DWORD PTR [rip+0x3ffb7]        # 0x44d930
  40d979:	test   ecx,ecx
  40d97b:	setne  dil
  40d97f:	test   edx,0xfffffffd
  40d985:	jne    0x40d868
  40d98b:	jmp    0x40d9c1
  40d98d:	nop    DWORD PTR [rax]
  40d990:	lea    rcx,[rip+0x25579]        # 0x432f10
  40d997:	call   0x41d1b0
  40d99c:	jmp    0x40d7be
  40d9a1:	mov    rax,QWORD PTR [rip+0x3ff70]        # 0x44d918
  40d9a8:	mov    rcx,rbx
  40d9ab:	mov    QWORD PTR [rsp+0x40],rax
  40d9b0:	mov    eax,DWORD PTR [rip+0x3ff6a]        # 0x44d920
  40d9b6:	mov    DWORD PTR [rsp+0x48],eax
  40d9ba:	call   0x408190
  40d9bf:	jmp    0x40d955
  40d9c1:	mov    rcx,rbp
  40d9c4:	call   0x411250
  40d9c9:	mov    rax,QWORD PTR [rip+0x38c90]        # 0x446660
  40d9d0:	mov    rcx,rbp
  40d9d3:	mov    rax,QWORD PTR [rax]
  40d9d6:	call   QWORD PTR [rax+0x28]
  40d9d9:	jmp    0x40d89f
  40d9de:	xchg   ax,ax
  40d9e0:	call   0x4052b0
  40d9e5:	test   eax,eax
  40d9e7:	je     0x40d955
  40d9ed:	mov    r8d,DWORD PTR [rip+0x3ff68]        # 0x44d95c
  40d9f4:	test   r8d,r8d
  40d9f7:	je     0x40d955
  40d9fd:	mov    rax,QWORD PTR [rip+0x38b8c]        # 0x446590
  40da04:	mov    rcx,rbx
  40da07:	mov    rdx,QWORD PTR [rax]
  40da0a:	mov    QWORD PTR [rsp+0x40],rdx
  40da0f:	mov    eax,DWORD PTR [rax+0x8]
  40da12:	mov    DWORD PTR [rsp+0x48],eax
  40da16:	call   0x408190
  40da1b:	jmp    0x40d955
  40da20:	mov    ecx,DWORD PTR [rip+0x3ff12]        # 0x44d938
  40da26:	call   0x40dc10
  40da2b:	mov    DWORD PTR [rsp+0x60],eax
  40da2f:	jmp    0x40d93e
  40da34:	xor    ecx,ecx
  40da36:	call   0x42a708
  40da3b:	nop
  40da3c:	nop
  40da3d:	nop
  40da3e:	nop
  40da3f:	nop
  40da40:	cmp    ecx,0xf
  40da43:	mov    DWORD PTR [rdx],0x1
  40da49:	mov    eax,ecx
  40da4b:	ja     0x40da60
  40da4d:	mov    r8d,ecx
  40da50:	lea    rcx,[rip+0x25aa9]        # 0x433500
  40da57:	movsxd r8,DWORD PTR [rcx+r8*4]
  40da5b:	add    rcx,r8
  40da5e:	jmp    rcx
  40da60:	mov    DWORD PTR [rdx],0x0
  40da66:	xor    eax,eax
  40da68:	nop    DWORD PTR [rax+rax*1+0x0]
  40da70:	repz ret 
  40da72:	mov    eax,0x16
  40da77:	ret    
  40da78:	nop    DWORD PTR [rax+rax*1+0x0]
  40da80:	sub    rsp,0x38
  40da84:	cmp    ecx,0x98
  40da8a:	ja     0x40daa3
  40da8c:	movsxd rcx,ecx
  40da8f:	lea    rax,[rip+0x2776a]        # 0x435200
  40da96:	lea    rdx,[rcx+rcx*2]
  40da9a:	mov    rax,QWORD PTR [rax+rdx*8]
  40da9e:	add    rsp,0x38
  40daa2:	ret    
  40daa3:	lea    rax,[rip+0x25ac6]        # 0x433570
  40daaa:	lea    r9,[rip+0x25b4f]        # 0x433600
  40dab1:	lea    r8,[rip+0x25a88]        # 0x433540
  40dab8:	lea    rcx,[rip+0x25a9c]        # 0x43355b
  40dabf:	mov    edx,0x3d
  40dac4:	mov    QWORD PTR [rsp+0x20],rax
  40dac9:	call   0x41d170
  40dace:	nop
  40dacf:	nop
  40dad0:	lea    rax,[rip+0x25ad7]        # 0x4335ae
  40dad7:	cmp    ecx,0x98
  40dadd:	ja     0x40daf2
  40dadf:	movsxd rcx,ecx
  40dae2:	lea    rax,[rip+0x27717]        # 0x435200
  40dae9:	lea    rdx,[rcx+rcx*2]
  40daed:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40daf2:	repz ret 
  40daf4:	xchg   ax,ax
  40daf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db00:	lea    rax,[rip+0x25ab6]        # 0x4335bd
  40db07:	cmp    ecx,0x98
  40db0d:	ja     0x40db30
  40db0f:	movsxd rcx,ecx
  40db12:	lea    rax,[rip+0x276e7]        # 0x435200
  40db19:	lea    rdx,[rcx+rcx*2]
  40db1d:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40db22:	lea    rdx,[rip+0x25a94]        # 0x4335bd
  40db29:	test   rax,rax
  40db2c:	cmove  rax,rdx
  40db30:	repz ret 
  40db32:	nop    DWORD PTR [rax+0x0]
  40db36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db40:	push   rdi
  40db41:	push   rsi
  40db42:	push   rbx
  40db43:	sub    rsp,0x20
  40db47:	lea    rsi,[rip+0x276d2]        # 0x435220
  40db4e:	mov    ebx,0x1
  40db53:	mov    rdi,rcx
  40db56:	jmp    0x40db6f
  40db58:	nop    DWORD PTR [rax+rax*1+0x0]
  40db60:	add    ebx,0x1
  40db63:	add    rsi,0x18
  40db67:	cmp    ebx,0x98
  40db6d:	je     0x40db8d
  40db6f:	mov    rdx,QWORD PTR [rsi]
  40db72:	test   rdx,rdx
  40db75:	je     0x40db60
  40db77:	mov    rcx,rdi
  40db7a:	call   0x42a628
  40db7f:	test   eax,eax
  40db81:	jne    0x40db60
  40db83:	mov    eax,ebx
  40db85:	add    rsp,0x20
  40db89:	pop    rbx
  40db8a:	pop    rsi
  40db8b:	pop    rdi
  40db8c:	ret    
  40db8d:	mov    eax,0x8f
  40db92:	add    rsp,0x20
  40db96:	pop    rbx
  40db97:	pop    rsi
  40db98:	pop    rdi
  40db99:	ret    
  40db9a:	nop    WORD PTR [rax+rax*1+0x0]
  40dba0:	xor    eax,eax
  40dba2:	test   ecx,ecx
  40dba4:	je     0x40dbe0
  40dba6:	cmp    ecx,0x2
  40dba9:	mov    al,0x2
  40dbab:	je     0x40dbe0
  40dbad:	cmp    ecx,0x4
  40dbb0:	mov    al,0x4
  40dbb2:	je     0x40dbe0
  40dbb4:	cmp    ecx,0x16
  40dbb7:	mov    al,0x6
  40dbb9:	je     0x40dbe0
  40dbbb:	cmp    ecx,0x8
  40dbbe:	mov    al,0x8
  40dbc0:	je     0x40dbe0
  40dbc2:	cmp    ecx,0xb
  40dbc5:	mov    al,0xb
  40dbc7:	je     0x40dbe0
  40dbc9:	cmp    ecx,0xf
  40dbcc:	mov    edx,0x8f
  40dbd1:	mov    al,0xf
  40dbd3:	cmovne eax,edx
  40dbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbe0:	repz ret 
  40dbe2:	nop    DWORD PTR [rax+0x0]
  40dbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbf0:	sub    rsp,0x38
  40dbf4:	lea    rdx,[rsp+0x2c]
  40dbf9:	call   0x40da40
  40dbfe:	mov    eax,DWORD PTR [rsp+0x2c]
  40dc02:	add    rsp,0x38
  40dc06:	ret    
  40dc07:	nop    WORD PTR [rax+rax*1+0x0]
  40dc10:	push   rsi
  40dc11:	push   rbx
  40dc12:	sub    rsp,0x38
  40dc16:	movsxd rbx,ecx
  40dc19:	lea    rdx,[rsp+0x2c]
  40dc1e:	mov    ecx,ebx
  40dc20:	call   0x40da40
  40dc25:	mov    esi,DWORD PTR [rsp+0x2c]
  40dc29:	test   esi,esi
  40dc2b:	jne    0x40dc71
  40dc2d:	cmp    ebx,0x98
  40dc33:	lea    rdx,[rip+0x25983]        # 0x4335bd
  40dc3a:	jbe    0x40dc51
  40dc3c:	lea    rcx,[rip+0x2597d]        # 0x4335c0
  40dc43:	call   0x41d110
  40dc48:	mov    eax,esi
  40dc4a:	add    rsp,0x38
  40dc4e:	pop    rbx
  40dc4f:	pop    rsi
  40dc50:	ret    
  40dc51:	lea    rax,[rip+0x275a8]        # 0x435200
  40dc58:	lea    rdx,[rbx+rbx*2]
  40dc5c:	mov    rdx,QWORD PTR [rax+rdx*8+0x8]
  40dc61:	lea    rax,[rip+0x25955]        # 0x4335bd
  40dc68:	test   rdx,rdx
  40dc6b:	cmove  rdx,rax
  40dc6f:	jmp    0x40dc3c
  40dc71:	mov    esi,eax
  40dc73:	mov    eax,esi
  40dc75:	add    rsp,0x38
  40dc79:	pop    rbx
  40dc7a:	pop    rsi
  40dc7b:	ret    
  40dc7c:	nop
  40dc7d:	nop
  40dc7e:	nop
  40dc7f:	nop
  40dc80:	push   rbp
  40dc81:	push   rdi
  40dc82:	push   rsi
  40dc83:	push   rbx
  40dc84:	sub    rsp,0x48
  40dc88:	mov    rax,QWORD PTR [rcx]
  40dc8b:	lea    rdi,[rsp+0x30]
  40dc90:	mov    rbx,rdx
  40dc93:	mov    rsi,rcx
  40dc96:	mov    QWORD PTR [rsp+0x30],rax
  40dc9b:	mov    eax,DWORD PTR [rcx+0x8]
  40dc9e:	mov    rcx,rdi
  40dca1:	mov    DWORD PTR [rsp+0x38],eax
  40dca5:	call   0x41ad20
  40dcaa:	mov    ebp,eax
  40dcac:	mov    rax,QWORD PTR [rbx]
  40dcaf:	mov    rcx,rdi
  40dcb2:	mov    QWORD PTR [rsp+0x30],rax
  40dcb7:	mov    eax,DWORD PTR [rbx+0x8]
  40dcba:	mov    DWORD PTR [rsp+0x38],eax
  40dcbe:	call   0x41ad20
  40dcc3:	cmp    ebp,eax
  40dcc5:	je     0x40dcd2
  40dcc7:	xor    eax,eax
  40dcc9:	add    rsp,0x48
  40dccd:	pop    rbx
  40dcce:	pop    rsi
  40dccf:	pop    rdi
  40dcd0:	pop    rbp
  40dcd1:	ret    
  40dcd2:	mov    rax,QWORD PTR [rsi]
  40dcd5:	mov    rcx,rdi
  40dcd8:	mov    QWORD PTR [rsp+0x30],rax
  40dcdd:	mov    eax,DWORD PTR [rsi+0x8]
  40dce0:	mov    DWORD PTR [rsp+0x38],eax
  40dce4:	mov    rax,QWORD PTR [rip+0x3fc95]        # 0x44d980
  40dceb:	call   QWORD PTR [rax+0x38]
  40dcee:	test   eax,eax
  40dcf0:	je     0x40dcc7
  40dcf2:	cmp    QWORD PTR [rbx+0x18],0x0
  40dcf7:	je     0x40dd40
  40dcf9:	cmp    QWORD PTR [rbx+0x10],0x0
  40dcfe:	je     0x40dd62
  40dd00:	cmp    QWORD PTR [rbx+0x20],0x0
  40dd05:	jne    0x40dcc7
  40dd07:	mov    rax,QWORD PTR [rbx]
  40dd0a:	lea    rdx,[rsp+0x20]
  40dd0f:	mov    rcx,rdi
  40dd12:	mov    QWORD PTR [rsp+0x30],rax
  40dd17:	mov    eax,DWORD PTR [rbx+0x8]
  40dd1a:	mov    DWORD PTR [rsp+0x38],eax
  40dd1e:	mov    rax,QWORD PTR [rsi]
  40dd21:	mov    QWORD PTR [rsp+0x20],rax
  40dd26:	mov    eax,DWORD PTR [rsi+0x8]
  40dd29:	mov    DWORD PTR [rsp+0x28],eax
  40dd2d:	call   0x41ad50
  40dd32:	test   eax,eax
  40dd34:	je     0x40dcc7
  40dd36:	mov    QWORD PTR [rbx+0x20],rsi
  40dd3a:	jmp    0x40dcc7
  40dd3c:	nop    DWORD PTR [rax+0x0]
  40dd40:	mov    rax,QWORD PTR [rip+0x3fc39]        # 0x44d980
  40dd47:	mov    rax,QWORD PTR [rax+0x190]
  40dd4e:	test   rax,rax
  40dd51:	je     0x40dcf9
  40dd53:	mov    rcx,rsi
  40dd56:	call   rax
  40dd58:	test   eax,eax
  40dd5a:	je     0x40dcf9
  40dd5c:	mov    QWORD PTR [rbx+0x18],rsi
  40dd60:	jmp    0x40dcf9
  40dd62:	mov    QWORD PTR [rbx+0x10],rsi
  40dd66:	jmp    0x40dd00
  40dd68:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd70:	sub    rsp,0x38
  40dd74:	mov    rax,QWORD PTR [rip+0x38745]        # 0x4464c0
  40dd7b:	cmp    ecx,0x1
  40dd7e:	je     0x40dd87
  40dd80:	mov    rax,QWORD PTR [rip+0x386a9]        # 0x446430
  40dd87:	mov    rdx,QWORD PTR [rax]
  40dd8a:	lea    rcx,[rsp+0x20]
  40dd8f:	mov    QWORD PTR [rsp+0x20],rdx
  40dd94:	mov    eax,DWORD PTR [rax+0x8]
  40dd97:	mov    DWORD PTR [rsp+0x28],eax
  40dd9b:	call   0x403c50
  40dda0:	mov    rdx,QWORD PTR [rip+0x386a9]        # 0x446450
  40dda7:	test   rax,rax
  40ddaa:	mov    QWORD PTR [rdx],rax
  40ddad:	setne  al
  40ddb0:	movzx  eax,al
  40ddb3:	add    rsp,0x38
  40ddb7:	ret    
  40ddb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ddc0:	sub    rsp,0x38
  40ddc4:	mov    rax,QWORD PTR [rip+0x3fbb5]        # 0x44d980
  40ddcb:	mov    rax,QWORD PTR [rax+0x68]
  40ddcf:	test   rax,rax
  40ddd2:	je     0x40ddd6
  40ddd4:	call   rax
  40ddd6:	mov    rax,QWORD PTR [rip+0x386e3]        # 0x4464c0
  40dddd:	mov    rdx,QWORD PTR [rip+0x3fc34]        # 0x44da18
  40dde4:	mov    ecx,DWORD PTR [rip+0x3fc36]        # 0x44da20
  40ddea:	mov    QWORD PTR [rax],rdx
  40dded:	mov    DWORD PTR [rax+0x8],ecx
  40ddf0:	mov    QWORD PTR [rsp+0x20],rdx
  40ddf5:	lea    rcx,[rsp+0x20]
  40ddfa:	mov    eax,DWORD PTR [rax+0x8]
  40ddfd:	mov    DWORD PTR [rsp+0x28],eax
  40de01:	call   0x403c50
  40de06:	mov    rdx,QWORD PTR [rip+0x38643]        # 0x446450
  40de0d:	mov    QWORD PTR [rdx],rax
  40de10:	add    rsp,0x38
  40de14:	ret    
  40de15:	nop
  40de16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de20:	push   rbx
  40de21:	sub    rsp,0x50
  40de25:	mov    rbx,QWORD PTR [rip+0x38694]        # 0x4464c0
  40de2c:	mov    QWORD PTR [rsp+0x28],0x0
  40de35:	mov    QWORD PTR [rsp+0x30],0x0
  40de3e:	mov    QWORD PTR [rsp+0x38],0x0
  40de47:	mov    QWORD PTR [rsp+0x40],0x0
  40de50:	mov    eax,DWORD PTR [rbx+0x8]
  40de53:	mov    rdx,QWORD PTR [rbx]
  40de56:	mov    DWORD PTR [rsp+0x28],eax
  40de5a:	mov    DWORD PTR [rip+0x3fbc0],eax        # 0x44da20
  40de60:	mov    rax,QWORD PTR [rip+0x3fb19]        # 0x44d980
  40de67:	mov    QWORD PTR [rsp+0x20],rdx
  40de6c:	mov    QWORD PTR [rip+0x3fba5],rdx        # 0x44da18
  40de73:	mov    rax,QWORD PTR [rax+0x60]
  40de77:	test   rax,rax
  40de7a:	je     0x40de82
  40de7c:	call   rax
  40de7e:	test   eax,eax
  40de80:	jne    0x40debc
  40de82:	mov    rcx,QWORD PTR [rip+0x38597]        # 0x446420
  40de89:	lea    r8,[rsp+0x20]
  40de8e:	lea    rdx,[rip+0xfffffffffffffdeb]        # 0x40dc80
  40de95:	call   0x403b90
  40de9a:	mov    rax,QWORD PTR [rsp+0x38]
  40de9f:	test   rax,rax
  40dea2:	je     0x40dec2
  40dea4:	mov    rdx,QWORD PTR [rip+0x385a5]        # 0x446450
  40deab:	mov    QWORD PTR [rdx],rax
  40deae:	mov    rdx,QWORD PTR [rax]
  40deb1:	mov    eax,DWORD PTR [rax+0x8]
  40deb4:	mov    QWORD PTR [rbx],rdx
  40deb7:	mov    DWORD PTR [rbx+0x8],eax
  40deba:	xor    eax,eax
  40debc:	add    rsp,0x50
  40dec0:	pop    rbx
  40dec1:	ret    
  40dec2:	mov    rax,QWORD PTR [rsp+0x40]
  40dec7:	test   rax,rax
  40deca:	jne    0x40dea4
  40decc:	mov    rax,QWORD PTR [rsp+0x30]
  40ded1:	test   rax,rax
  40ded4:	jne    0x40dea4
  40ded6:	call   0x40ddc0
  40dedb:	mov    eax,0x1
  40dee0:	jmp    0x40debc
  40dee2:	nop    DWORD PTR [rax+0x0]
  40dee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40def0:	push   rbp
  40def1:	push   rdi
  40def2:	push   rsi
  40def3:	push   rbx
  40def4:	sub    rsp,0x28
  40def8:	mov    rax,QWORD PTR [rip+0x3fa81]        # 0x44d980
  40deff:	mov    rbx,rcx
  40df02:	mov    rsi,rdx
  40df05:	mov    edi,r8d
  40df08:	call   QWORD PTR [rax+0x70]
  40df0b:	mov    r8d,edi
  40df0e:	mov    ebp,eax
  40df10:	mov    rdx,rsi
  40df13:	mov    rcx,rbx
  40df16:	call   0x410d00
  40df1b:	mov    eax,ebp
  40df1d:	add    rsp,0x28
  40df21:	pop    rbx
  40df22:	pop    rsi
  40df23:	pop    rdi
  40df24:	pop    rbp
  40df25:	ret    
  40df26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df30:	jmp    0x40def0
  40df32:	nop    DWORD PTR [rax+0x0]
  40df36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df40:	mov    r8d,0x4
  40df46:	jmp    0x40def0
  40df48:	nop    DWORD PTR [rax+rax*1+0x0]
  40df50:	push   rbp
  40df51:	push   rdi
  40df52:	push   rsi
  40df53:	push   rbx
  40df54:	sub    rsp,0x28
  40df58:	mov    rsi,rcx
  40df5b:	mov    rcx,QWORD PTR [rip+0x3faae]        # 0x44da10
  40df62:	mov    rdi,rdx
  40df65:	mov    ebx,r8d
  40df68:	test   rcx,rcx
  40df6b:	je     0x40df72
  40df6d:	call   0x42a6c8
  40df72:	movsxd rbp,ebx
  40df75:	mov    rcx,rbp
  40df78:	call   0x41a6e0
  40df7d:	mov    r8,rbp
  40df80:	mov    rdx,rdi
  40df83:	mov    rcx,rax
  40df86:	mov    QWORD PTR [rip+0x3fa83],rax        # 0x44da10
  40df8d:	call   0x42a668
  40df92:	mov    r9d,ebx
  40df95:	mov    r8,rdi
  40df98:	mov    rdx,rax
  40df9b:	mov    rcx,rsi
  40df9e:	call   0x410f10
  40dfa3:	mov    rax,QWORD PTR [rip+0x3f9d6]        # 0x44d980
  40dfaa:	mov    r8d,ebx
  40dfad:	mov    rdx,QWORD PTR [rip+0x3fa5c]        # 0x44da10
  40dfb4:	mov    rcx,rsi
  40dfb7:	call   QWORD PTR [rax+0x78]
  40dfba:	mov    rcx,QWORD PTR [rip+0x3fa4f]        # 0x44da10
  40dfc1:	mov    ebx,eax
  40dfc3:	call   0x42a6c8
  40dfc8:	mov    eax,ebx
  40dfca:	mov    QWORD PTR [rip+0x3fa3b],0x0        # 0x44da10
  40dfd5:	add    rsp,0x28
  40dfd9:	pop    rbx
  40dfda:	pop    rsi
  40dfdb:	pop    rdi
  40dfdc:	pop    rbp
  40dfdd:	ret    
  40dfde:	xchg   ax,ax
  40dfe0:	jmp    0x40df50
  40dfe5:	nop
  40dfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dff0:	push   rbp
  40dff1:	push   rdi
  40dff2:	push   rsi
  40dff3:	push   rbx
  40dff4:	sub    rsp,0x38
  40dff8:	mov    edi,DWORD PTR [rsp+0x80]
  40dfff:	mov    rsi,rcx
  40e002:	mov    rbx,r8
  40e005:	test   edi,edi
  40e007:	je     0x40e016
  40e009:	mov    rax,QWORD PTR [rip+0x38600]        # 0x446610
  40e010:	mov    DWORD PTR [rax],0x1
  40e016:	mov    rax,QWORD PTR [rdx]
  40e019:	mov    r8,rbx
  40e01c:	mov    rcx,rsi
  40e01f:	mov    QWORD PTR [rsp+0x20],rax
  40e024:	mov    eax,DWORD PTR [rdx+0x8]
  40e027:	lea    rdx,[rsp+0x20]
  40e02c:	mov    DWORD PTR [rsp+0x28],eax
  40e030:	mov    rax,QWORD PTR [rip+0x3f949]        # 0x44d980
  40e037:	call   QWORD PTR [rax+0x48]
  40e03a:	cmp    DWORD PTR [rbx],0x3
  40e03d:	je     0x40e070
  40e03f:	call   0x4052c0
  40e044:	test   eax,eax
  40e046:	jne    0x40e053
  40e048:	mov    eax,DWORD PTR [rbx]
  40e04a:	test   eax,eax
  40e04c:	je     0x40e080
  40e04e:	cmp    eax,0x2
  40e051:	je     0x40e0a0
  40e053:	test   edi,edi
  40e055:	je     0x40e064
  40e057:	mov    rax,QWORD PTR [rip+0x385b2]        # 0x446610
  40e05e:	mov    DWORD PTR [rax],0x0
  40e064:	mov    rax,rsi
  40e067:	add    rsp,0x38
  40e06b:	pop    rbx
  40e06c:	pop    rsi
  40e06d:	pop    rdi
  40e06e:	pop    rbp
  40e06f:	ret    
  40e070:	mov    DWORD PTR [rbx],0x1
  40e076:	jmp    0x40e03f
  40e078:	nop    DWORD PTR [rax+rax*1+0x0]
  40e080:	mov    ebx,DWORD PTR [rbx+0x8]
  40e083:	call   QWORD PTR [rip+0x436c7]        # 0x451750
  40e089:	lea    rdx,[rip+0x27ff0]        # 0x436080
  40e090:	lea    rcx,[rax+0x60]
  40e094:	mov    r8d,ebx
  40e097:	call   0x42aa80
  40e09c:	jmp    0x40e053
  40e09e:	xchg   ax,ax
  40e0a0:	mov    ecx,DWORD PTR [rbx+0x8]
  40e0a3:	call   0x40db00
  40e0a8:	mov    ecx,DWORD PTR [rbx+0x8]
  40e0ab:	mov    rbp,rax
  40e0ae:	call   0x40dc10
  40e0b3:	mov    ebx,eax
  40e0b5:	call   QWORD PTR [rip+0x43695]        # 0x451750
  40e0bb:	lea    rdx,[rip+0x27fde]        # 0x4360a0
  40e0c2:	lea    rcx,[rax+0x60]
  40e0c6:	mov    r9,rbp
  40e0c9:	mov    r8d,ebx
  40e0cc:	call   0x42aa80
  40e0d1:	jmp    0x40e053
  40e0d3:	nop    DWORD PTR [rax]
  40e0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0e0:	push   rdi
  40e0e1:	push   rsi
  40e0e2:	push   rbx
  40e0e3:	sub    rsp,0xa0
  40e0ea:	mov    rax,QWORD PTR [rcx]
  40e0ed:	mov    rsi,QWORD PTR [rip+0x3847c]        # 0x446570
  40e0f4:	mov    edx,0x1
  40e0f9:	mov    rbx,rcx
  40e0fc:	mov    DWORD PTR [rsp+0x7c],0x2
  40e104:	mov    DWORD PTR [rsp+0x80],0x0
  40e10f:	mov    QWORD PTR [rsp+0x70],rax
  40e114:	mov    eax,DWORD PTR [rcx+0x8]
  40e117:	lea    rcx,[rsp+0x70]
  40e11c:	mov    edi,DWORD PTR [rsi]
  40e11e:	mov    DWORD PTR [rsp+0x78],eax
  40e122:	mov    rax,QWORD PTR [rip+0x3f857]        # 0x44d980
  40e129:	call   QWORD PTR [rax+0x40]
  40e12c:	mov    rax,QWORD PTR [rbx]
  40e12f:	mov    DWORD PTR [rsi],0x1
  40e135:	lea    rcx,[rsp+0x40]
  40e13a:	lea    rdx,[rsp+0x30]
  40e13f:	lea    r8,[rsp+0x50]
  40e144:	mov    DWORD PTR [rsp+0x20],0x0
  40e14c:	xor    r9d,r9d
  40e14f:	mov    QWORD PTR [rsp+0x30],rax
  40e154:	mov    eax,DWORD PTR [rbx+0x8]
  40e157:	mov    DWORD PTR [rsp+0x38],eax
  40e15b:	call   0x40dff0
  40e160:	mov    DWORD PTR [rsi],edi
  40e162:	add    rsp,0xa0
  40e169:	pop    rbx
  40e16a:	pop    rsi
  40e16b:	pop    rdi
  40e16c:	ret    
  40e16d:	nop    DWORD PTR [rax]
  40e170:	sub    rsp,0x58
  40e174:	mov    rax,QWORD PTR [rcx]
  40e177:	mov    edx,0x1
  40e17c:	mov    DWORD PTR [rsp+0x2c],0x0
  40e184:	mov    DWORD PTR [rsp+0x30],0x0
  40e18c:	mov    QWORD PTR [rsp+0x20],rax
  40e191:	mov    eax,DWORD PTR [rcx+0x8]
  40e194:	lea    rcx,[rsp+0x20]
  40e199:	mov    DWORD PTR [rsp+0x28],eax
  40e19d:	mov    rax,QWORD PTR [rip+0x3f7dc]        # 0x44d980
  40e1a4:	call   QWORD PTR [rax+0x40]
  40e1a7:	nop
  40e1a8:	add    rsp,0x58
  40e1ac:	ret    
  40e1ad:	nop    DWORD PTR [rax]
  40e1b0:	mov    rax,QWORD PTR [rip+0x3f7c9]        # 0x44d980
  40e1b7:	mov    rax,QWORD PTR [rax+0x128]
  40e1be:	test   rax,rax
  40e1c1:	je     0x40e1d0
  40e1c3:	rex.W jmp rax
  40e1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1d0:	xor    eax,eax
  40e1d2:	test   ecx,ecx
  40e1d4:	setne  al
  40e1d7:	neg    eax
  40e1d9:	ret    
  40e1da:	nop    WORD PTR [rax+rax*1+0x0]
  40e1e0:	push   rdi
  40e1e1:	push   rsi
  40e1e2:	sub    rsp,0x28
  40e1e6:	mov    rsi,rcx
  40e1e9:	mov    ecx,0x270
  40e1ee:	call   0x41a6e0
  40e1f3:	mov    QWORD PTR [rip+0x3f786],rax        # 0x44d980
  40e1fa:	mov    rdx,QWORD PTR [rsi]
  40e1fd:	lea    rdi,[rax+0x8]
  40e201:	and    rdi,0xfffffffffffffff8
  40e205:	mov    QWORD PTR [rax],rdx
  40e208:	mov    rdx,QWORD PTR [rsi+0x268]
  40e20f:	mov    QWORD PTR [rax+0x268],rdx
  40e216:	sub    rax,rdi
  40e219:	sub    rsi,rax
  40e21c:	add    eax,0x270
  40e221:	shr    eax,0x3
  40e224:	mov    ecx,eax
  40e226:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40e229:	add    rsp,0x28
  40e22d:	pop    rsi
  40e22e:	pop    rdi
  40e22f:	ret    
  40e230:	push   rdi
  40e231:	push   rsi
  40e232:	push   rbx
  40e233:	sub    rsp,0x50
  40e237:	mov    rax,QWORD PTR [rcx]
  40e23a:	lea    rdi,[rsp+0x30]
  40e23f:	lea    rsi,[rsp+0x40]
  40e244:	mov    rbx,rcx
  40e247:	mov    QWORD PTR [rsp+0x40],rax
  40e24c:	mov    eax,DWORD PTR [rcx+0x8]
  40e24f:	mov    rcx,rsi
  40e252:	mov    DWORD PTR [rsp+0x48],eax
  40e256:	mov    rax,QWORD PTR [rip+0x382e3]        # 0x446540
  40e25d:	mov    rdx,QWORD PTR [rax]
  40e260:	mov    QWORD PTR [rsp+0x30],rdx
  40e265:	mov    eax,DWORD PTR [rax+0x8]
  40e268:	mov    rdx,rdi
  40e26b:	mov    DWORD PTR [rsp+0x38],eax
  40e26f:	call   0x41ad50
  40e274:	test   eax,eax
  40e276:	jne    0x40e360
  40e27c:	mov    rax,QWORD PTR [rbx]
  40e27f:	mov    rcx,rsi
  40e282:	mov    QWORD PTR [rsp+0x40],rax
  40e287:	mov    eax,DWORD PTR [rbx+0x8]
  40e28a:	mov    DWORD PTR [rsp+0x48],eax
  40e28e:	mov    rax,QWORD PTR [rip+0x382fb]        # 0x446590
  40e295:	mov    rdx,QWORD PTR [rax]
  40e298:	mov    QWORD PTR [rsp+0x30],rdx
  40e29d:	mov    eax,DWORD PTR [rax+0x8]
  40e2a0:	mov    rdx,rdi
  40e2a3:	mov    DWORD PTR [rsp+0x38],eax
  40e2a7:	call   0x41ad50
  40e2ac:	test   eax,eax
  40e2ae:	jne    0x40e333
  40e2b4:	mov    rax,QWORD PTR [rbx]
  40e2b7:	mov    rcx,rsi
  40e2ba:	mov    QWORD PTR [rsp+0x40],rax
  40e2bf:	mov    eax,DWORD PTR [rbx+0x8]
  40e2c2:	mov    DWORD PTR [rsp+0x48],eax
  40e2c6:	call   0x41ad40
  40e2cb:	test   eax,eax
  40e2cd:	mov    rax,QWORD PTR [rbx]
  40e2d0:	mov    rcx,rsi
  40e2d3:	mov    QWORD PTR [rsp+0x40],rax
  40e2d8:	mov    eax,DWORD PTR [rbx+0x8]
  40e2db:	mov    DWORD PTR [rsp+0x48],eax
  40e2df:	jne    0x40e3d2
  40e2e5:	call   0x41ad30
  40e2ea:	test   eax,eax
  40e2ec:	mov    rax,QWORD PTR [rbx]
  40e2ef:	mov    rcx,rsi
  40e2f2:	mov    QWORD PTR [rsp+0x40],rax
  40e2f7:	mov    eax,DWORD PTR [rbx+0x8]
  40e2fa:	mov    DWORD PTR [rsp+0x48],eax
  40e2fe:	jne    0x40e390
  40e304:	call   0x41ad20
  40e309:	lea    r8,[rip+0x27df2]        # 0x436102
  40e310:	lea    rcx,[rip+0x3f6a9]        # 0x44d9c0
  40e317:	mov    r9d,eax
  40e31a:	mov    edx,0x50
  40e31f:	call   0x41a880
  40e324:	lea    rax,[rip+0x3f695]        # 0x44d9c0
  40e32b:	add    rsp,0x50
  40e32f:	pop    rbx
  40e330:	pop    rsi
  40e331:	pop    rdi
  40e332:	ret    
  40e333:	lea    r8,[rip+0x27d9f]        # 0x4360d9
  40e33a:	lea    rcx,[rip+0x3f67f]        # 0x44d9c0
  40e341:	mov    edx,0x50
  40e346:	call   0x41a880
  40e34b:	lea    rax,[rip+0x3f66e]        # 0x44d9c0
  40e352:	add    rsp,0x50
  40e356:	pop    rbx
  40e357:	pop    rsi
  40e358:	pop    rdi
  40e359:	ret    
  40e35a:	nop    WORD PTR [rax+rax*1+0x0]
  40e360:	lea    r8,[rip+0x27d64]        # 0x4360cb
  40e367:	lea    rcx,[rip+0x3f652]        # 0x44d9c0
  40e36e:	mov    edx,0x50
  40e373:	call   0x41a880
  40e378:	lea    rax,[rip+0x3f641]        # 0x44d9c0
  40e37f:	add    rsp,0x50
  40e383:	pop    rbx
  40e384:	pop    rsi
  40e385:	pop    rdi
  40e386:	ret    
  40e387:	nop    WORD PTR [rax+rax*1+0x0]
  40e390:	call   0x41ad30
  40e395:	mov    edi,eax
  40e397:	mov    rax,QWORD PTR [rbx]
  40e39a:	mov    rcx,rsi
  40e39d:	mov    QWORD PTR [rsp+0x40],rax
  40e3a2:	mov    eax,DWORD PTR [rbx+0x8]
  40e3a5:	mov    DWORD PTR [rsp+0x48],eax
  40e3a9:	call   0x41ad20
  40e3ae:	lea    r8,[rip+0x27d42]        # 0x4360f7
  40e3b5:	lea    rcx,[rip+0x3f604]        # 0x44d9c0
  40e3bc:	mov    r9d,eax
  40e3bf:	mov    DWORD PTR [rsp+0x20],edi
  40e3c3:	mov    edx,0x50
  40e3c8:	call   0x41a880
  40e3cd:	jmp    0x40e34b
  40e3d2:	call   0x41ad40
  40e3d7:	mov    edi,eax
  40e3d9:	mov    rax,QWORD PTR [rbx]
  40e3dc:	mov    rcx,rsi
  40e3df:	mov    QWORD PTR [rsp+0x40],rax
  40e3e4:	mov    eax,DWORD PTR [rbx+0x8]
  40e3e7:	mov    DWORD PTR [rsp+0x48],eax
  40e3eb:	call   0x41ad20
  40e3f0:	lea    r8,[rip+0x27cf0]        # 0x4360e7
  40e3f7:	lea    rcx,[rip+0x3f5c2]        # 0x44d9c0
  40e3fe:	mov    r9d,eax
  40e401:	mov    DWORD PTR [rsp+0x20],edi
  40e405:	mov    edx,0x50
  40e40a:	call   0x41a880
  40e40f:	lea    rax,[rip+0x3f5aa]        # 0x44d9c0
  40e416:	add    rsp,0x50
  40e41a:	pop    rbx
  40e41b:	pop    rsi
  40e41c:	pop    rdi
  40e41d:	ret    
  40e41e:	xchg   ax,ax
  40e420:	push   rbx
  40e421:	sub    rsp,0x20
  40e425:	mov    ebx,ecx
  40e427:	call   0x415f70
  40e42c:	mov    rax,QWORD PTR [rip+0x3f54d]        # 0x44d980
  40e433:	mov    ecx,ebx
  40e435:	mov    rax,QWORD PTR [rax+0x18]
  40e439:	add    rsp,0x20
  40e43d:	pop    rbx
  40e43e:	rex.W jmp rax
  40e441:	nop    DWORD PTR [rax+rax*1+0x0]
  40e446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e450:	mov    eax,0x1
  40e455:	ret    
  40e456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e460:	sub    rsp,0x48
  40e464:	mov    rax,QWORD PTR [rip+0x3f515]        # 0x44d980
  40e46b:	mov    DWORD PTR [rsp+0x3c],0x0
  40e473:	mov    rax,QWORD PTR [rax+0x240]
  40e47a:	test   rax,rax
  40e47d:	je     0x40e491
  40e47f:	lea    rdx,[rsp+0x3c]
  40e484:	xor    ecx,ecx
  40e486:	call   rax
  40e488:	mov    eax,DWORD PTR [rsp+0x3c]
  40e48c:	add    rsp,0x48
  40e490:	ret    
  40e491:	lea    rax,[rip+0x27ca0]        # 0x436138
  40e498:	lea    r9,[rip+0x27ce1]        # 0x436180
  40e49f:	lea    r8,[rip+0x27c67]        # 0x43610d
  40e4a6:	lea    rcx,[rip+0x27c7b]        # 0x436128
  40e4ad:	mov    edx,0x15b
  40e4b2:	mov    QWORD PTR [rsp+0x20],rax
  40e4b7:	call   0x41d170
  40e4bc:	nop
  40e4bd:	nop
  40e4be:	nop
  40e4bf:	nop
  40e4c0:	sub    rsp,0x28
  40e4c4:	cmp    DWORD PTR [rcx],0xf
  40e4c7:	ja     0x40e6e0
  40e4cd:	mov    edx,DWORD PTR [rcx]
  40e4cf:	lea    rax,[rip+0x27dfe]        # 0x4362d4
  40e4d6:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40e4da:	add    rax,rdx
  40e4dd:	jmp    rax
  40e4df:	nop
  40e4e0:	lea    rdx,[rip+0x27cd9]        # 0x4361c0
  40e4e7:	lea    rcx,[rip+0x27daa]        # 0x436298
  40e4ee:	add    rsp,0x28
  40e4f2:	jmp    0x41a850
  40e4f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e500:	mov    r8d,DWORD PTR [rcx+0x8]
  40e504:	lea    rdx,[rip+0x27cb5]        # 0x4361c0
  40e50b:	lea    rcx,[rip+0x27d97]        # 0x4362a9
  40e512:	add    rsp,0x28
  40e516:	jmp    0x41a850
  40e51b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e520:	mov    r8d,DWORD PTR [rcx+0x8]
  40e524:	lea    rdx,[rip+0x27c95]        # 0x4361c0
  40e52b:	lea    rcx,[rip+0x27c9e]        # 0x4361d0
  40e532:	add    rsp,0x28
  40e536:	jmp    0x41a850
  40e53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e540:	mov    ecx,DWORD PTR [rcx+0x8]
  40e543:	call   0x40da80
  40e548:	lea    rdx,[rip+0x27c71]        # 0x4361c0
  40e54f:	lea    rcx,[rip+0x27c90]        # 0x4361e6
  40e556:	mov    r8,rax
  40e559:	add    rsp,0x28
  40e55d:	jmp    0x41a850
  40e562:	mov    ecx,DWORD PTR [rcx+0x8]
  40e565:	call   0x40da80
  40e56a:	lea    rdx,[rip+0x27c4f]        # 0x4361c0
  40e571:	lea    rcx,[rip+0x27c85]        # 0x4361fd
  40e578:	mov    r8,rax
  40e57b:	add    rsp,0x28
  40e57f:	jmp    0x41a850
  40e584:	lea    rdx,[rip+0x27c35]        # 0x4361c0
  40e58b:	lea    rcx,[rip+0x27c84]        # 0x436216
  40e592:	add    rsp,0x28
  40e596:	jmp    0x41a850
  40e59b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5a0:	lea    rdx,[rip+0x27c19]        # 0x4361c0
  40e5a7:	lea    rcx,[rip+0x27c71]        # 0x43621f
  40e5ae:	add    rsp,0x28
  40e5b2:	jmp    0x41a850
  40e5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e5c0:	lea    rdx,[rip+0x27bf9]        # 0x4361c0
  40e5c7:	lea    rcx,[rip+0x27c5a]        # 0x436228
  40e5ce:	add    rsp,0x28
  40e5d2:	jmp    0x41a850
  40e5d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e5e0:	lea    rdx,[rip+0x27bd9]        # 0x4361c0
  40e5e7:	lea    rcx,[rip+0x27c44]        # 0x436232
  40e5ee:	add    rsp,0x28
  40e5f2:	jmp    0x41a850
  40e5f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e600:	lea    rdx,[rip+0x27bb9]        # 0x4361c0
  40e607:	lea    rcx,[rip+0x27c2c]        # 0x43623a
  40e60e:	add    rsp,0x28
  40e612:	jmp    0x41a850
  40e617:	nop    WORD PTR [rax+rax*1+0x0]
  40e620:	lea    rdx,[rip+0x27b99]        # 0x4361c0
  40e627:	lea    rcx,[rip+0x27c19]        # 0x436247
  40e62e:	add    rsp,0x28
  40e632:	jmp    0x41a850
  40e637:	nop    WORD PTR [rax+rax*1+0x0]
  40e640:	lea    rdx,[rip+0x27b79]        # 0x4361c0
  40e647:	lea    rcx,[rip+0x27c0b]        # 0x436259
  40e64e:	add    rsp,0x28
  40e652:	jmp    0x41a850
  40e657:	nop    WORD PTR [rax+rax*1+0x0]
  40e660:	lea    rdx,[rip+0x27b59]        # 0x4361c0
  40e667:	lea    rcx,[rip+0x27bfc]        # 0x43626a
  40e66e:	add    rsp,0x28
  40e672:	jmp    0x41a850
  40e677:	nop    WORD PTR [rax+rax*1+0x0]
  40e680:	lea    rdx,[rip+0x27b39]        # 0x4361c0
  40e687:	lea    rcx,[rip+0x27be7]        # 0x436275
  40e68e:	add    rsp,0x28
  40e692:	jmp    0x41a850
  40e697:	nop    WORD PTR [rax+rax*1+0x0]
  40e6a0:	lea    rdx,[rip+0x27b19]        # 0x4361c0
  40e6a7:	lea    rcx,[rip+0x27bd0]        # 0x43627e
  40e6ae:	add    rsp,0x28
  40e6b2:	jmp    0x41a850
  40e6b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e6c0:	lea    rdx,[rip+0x27af9]        # 0x4361c0
  40e6c7:	lea    rcx,[rip+0x27bbd]        # 0x43628b
  40e6ce:	add    rsp,0x28
  40e6d2:	jmp    0x41a850
  40e6d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e6e0:	lea    rdx,[rip+0x27ad9]        # 0x4361c0
  40e6e7:	lea    rcx,[rip+0x27bd8]        # 0x4362c6
  40e6ee:	add    rsp,0x28
  40e6f2:	jmp    0x41a850
  40e6f7:	nop
  40e6f8:	nop
  40e6f9:	nop
  40e6fa:	nop
  40e6fb:	nop
  40e6fc:	nop
  40e6fd:	nop
  40e6fe:	nop
  40e6ff:	nop
  40e700:	push   rbx
  40e701:	sub    rsp,0x20
  40e705:	mov    ebx,ecx
  40e707:	call   QWORD PTR [rip+0x43043]        # 0x451750
  40e70d:	lea    rdx,[rip+0x27c0c]        # 0x436320
  40e714:	lea    rcx,[rax+0x60]
  40e718:	mov    r8d,ebx
  40e71b:	call   0x42aa80
  40e720:	mov    ecx,0x1
  40e725:	call   0x42a708
  40e72a:	nop
  40e72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e730:	push   rdi
  40e731:	sub    rsp,0x20
  40e735:	mov    rdi,rcx
  40e738:	call   0x42a5a0
  40e73d:	test   rax,rax
  40e740:	je     0x40e748
  40e742:	add    rsp,0x20
  40e746:	pop    rdi
  40e747:	ret    
  40e748:	or     rcx,0xffffffffffffffff
  40e74c:	repnz scas al,BYTE PTR es:[rdi]
  40e74e:	not    ecx
  40e750:	call   0x40e700
  40e755:	nop
  40e756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e760:	push   rbp
  40e761:	push   r12
  40e763:	push   rdi
  40e764:	push   rsi
  40e765:	push   rbx
  40e766:	mov    rbp,rsp
  40e769:	sub    rsp,0x20
  40e76d:	mov    r12,rcx
  40e770:	call   QWORD PTR [rip+0x4301a]        # 0x451790
  40e776:	mov    ecx,DWORD PTR [rax]
  40e778:	call   0x42a618
  40e77d:	test   rax,rax
  40e780:	mov    rbx,rax
  40e783:	lea    rax,[rip+0x27bd7]        # 0x436361
  40e78a:	cmove  rbx,rax
  40e78e:	mov    rcx,rbx
  40e791:	call   0x42a610
  40e796:	mov    rcx,r12
  40e799:	mov    rsi,rax
  40e79c:	call   0x42a610
  40e7a1:	lea    r9,[rsi+rax*1+0x21]
  40e7a6:	mov    rdi,rax
  40e7a9:	mov    rax,r9
  40e7ac:	and    rax,0xfffffffffffffff0
  40e7b0:	call   0x425730
  40e7b5:	sub    rsp,rax
  40e7b8:	mov    r8,rdi
  40e7bb:	mov    rdx,r12
  40e7be:	lea    rsi,[rsp+0x20]
  40e7c3:	mov    rcx,rsi
  40e7c6:	call   0x42a668
  40e7cb:	mov    eax,0x203a
  40e7d0:	lea    rcx,[rsi+rdi*1+0x2]
  40e7d5:	mov    rdx,rbx
  40e7d8:	mov    WORD PTR [rsi+rdi*1],ax
  40e7dc:	call   0x42a620
  40e7e1:	lea    rcx,[rip+0x27b87]        # 0x43636f
  40e7e8:	mov    rdx,rsi
  40e7eb:	call   0x41d140
  40e7f0:	nop
  40e7f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e800:	sub    rsp,0x28
  40e804:	mov    r8,rdx
  40e807:	mov    rdx,rcx
  40e80a:	mov    ecx,0x1
  40e80f:	call   0x41d950
  40e814:	nop
  40e815:	nop
  40e816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e820:	push   rdi
  40e821:	push   rsi
  40e822:	push   rbx
  40e823:	sub    rsp,0x20
  40e827:	mov    rbx,QWORD PTR [rip+0x42f22]        # 0x451750
  40e82e:	mov    rsi,rcx
  40e831:	mov    rdi,rdx
  40e834:	call   rbx
  40e836:	lea    rdx,[rip+0x27b36]        # 0x436373
  40e83d:	lea    rcx,[rax+0x60]
  40e841:	call   0x42aa80
  40e846:	call   rbx
  40e848:	lea    rcx,[rax+0x60]
  40e84c:	mov    rdx,rsi
  40e84f:	mov    r8,rdi
  40e852:	call   0x4258d0
  40e857:	call   rbx
  40e859:	lea    rdx,[rip+0x27b1f]        # 0x43637f
  40e860:	lea    rcx,[rax+0x60]
  40e864:	add    rsp,0x20
  40e868:	pop    rbx
  40e869:	pop    rsi
  40e86a:	pop    rdi
  40e86b:	jmp    0x42aa80
  40e870:	push   r12
  40e872:	push   rbp
  40e873:	push   rdi
  40e874:	push   rsi
  40e875:	push   rbx
  40e876:	sub    rsp,0x20
  40e87a:	mov    rbx,QWORD PTR [rip+0x42ecf]        # 0x451750
  40e881:	mov    rbp,rcx
  40e884:	mov    r12d,edx
  40e887:	mov    rsi,r8
  40e88a:	mov    rdi,r9
  40e88d:	call   rbx
  40e88f:	lea    rdx,[rip+0x27af2]        # 0x436388
  40e896:	lea    rcx,[rax+0x60]
  40e89a:	mov    r9d,r12d
  40e89d:	mov    r8,rbp
  40e8a0:	call   0x42aa80
  40e8a5:	call   rbx
  40e8a7:	lea    rcx,[rax+0x60]
  40e8ab:	mov    r8,rdi
  40e8ae:	mov    rdx,rsi
  40e8b1:	call   0x4258d0
  40e8b6:	call   rbx
  40e8b8:	lea    rdx,[rip+0x27ac0]        # 0x43637f
  40e8bf:	lea    rcx,[rax+0x60]
  40e8c3:	call   0x42aa80
  40e8c8:	mov    ecx,0x1
  40e8cd:	call   0x42a708
  40e8d2:	nop
  40e8d3:	nop    DWORD PTR [rax]
  40e8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8e0:	push   r12
  40e8e2:	push   rbp
  40e8e3:	push   rdi
  40e8e4:	push   rsi
  40e8e5:	push   rbx
  40e8e6:	sub    rsp,0x20
  40e8ea:	mov    rbx,QWORD PTR [rip+0x42e5f]        # 0x451750
  40e8f1:	mov    rbp,rcx
  40e8f4:	mov    r12d,edx
  40e8f7:	mov    rsi,r8
  40e8fa:	mov    rdi,r9
  40e8fd:	call   rbx
  40e8ff:	lea    rdx,[rip+0x27a82]        # 0x436388
  40e906:	lea    rcx,[rax+0x60]
  40e90a:	mov    r9d,r12d
  40e90d:	mov    r8,rbp
  40e910:	call   0x42aa80
  40e915:	call   rbx
  40e917:	lea    rcx,[rax+0x60]
  40e91b:	mov    rdx,rsi
  40e91e:	mov    r8,rdi
  40e921:	call   0x4258d0
  40e926:	call   rbx
  40e928:	lea    rdx,[rip+0x27a50]        # 0x43637f
  40e92f:	lea    rcx,[rax+0x60]
  40e933:	add    rsp,0x20
  40e937:	pop    rbx
  40e938:	pop    rsi
  40e939:	pop    rdi
  40e93a:	pop    rbp
  40e93b:	pop    r12
  40e93d:	jmp    0x42aa80
  40e942:	nop    DWORD PTR [rax+0x0]
  40e946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e950:	mov    edx,0x8
  40e955:	jmp    0x41c6e0
  40e95a:	nop    WORD PTR [rax+rax*1+0x0]
  40e960:	mov    edx,0x8
  40e965:	jmp    0x41c6e0
  40e96a:	nop
  40e96b:	nop
  40e96c:	nop
  40e96d:	nop
  40e96e:	nop
  40e96f:	nop
  40e970:	push   r12
  40e972:	push   rbp
  40e973:	push   rdi
  40e974:	push   rsi
  40e975:	push   rbx
  40e976:	sub    rsp,0x30
  40e97a:	mov    rsi,QWORD PTR [rip+0x42dcf]        # 0x451750
  40e981:	mov    rdi,rdx
  40e984:	mov    edx,DWORD PTR [rip+0x3f0b6]        # 0x44da40
  40e98a:	mov    rbx,rcx
  40e98d:	test   edx,edx
  40e98f:	je     0x40e99b
  40e991:	mov    eax,DWORD PTR [rip+0x1d6e9]        # 0x42c080
  40e997:	test   eax,eax
  40e999:	jne    0x40e9d5
  40e99b:	call   rsi
  40e99d:	lea    rcx,[rax+0x60]
  40e9a1:	mov    r8,rdi
  40e9a4:	mov    rdx,rbx
  40e9a7:	call   0x4258d0
  40e9ac:	cmp    BYTE PTR [rbx],0x0
  40e9af:	je     0x40e9ca
  40e9b1:	mov    rcx,rbx
  40e9b4:	call   0x42a610
  40e9b9:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
  40e9be:	sete   al
  40e9c1:	movzx  eax,al
  40e9c4:	mov    DWORD PTR [rip+0x1d6b6],eax        # 0x42c080
  40e9ca:	add    rsp,0x30
  40e9ce:	pop    rbx
  40e9cf:	pop    rsi
  40e9d0:	pop    rdi
  40e9d1:	pop    rbp
  40e9d2:	pop    r12
  40e9d4:	ret    
  40e9d5:	lea    rcx,[rsp+0x20]
  40e9da:	xor    edx,edx
  40e9dc:	call   0x425820
  40e9e1:	mov    r12d,DWORD PTR [rsp+0x24]
  40e9e6:	mov    ebp,DWORD PTR [rsp+0x20]
  40e9ea:	call   rsi
  40e9ec:	lea    rdx,[rip+0x279dd]        # 0x4363d0
  40e9f3:	lea    rcx,[rax+0x60]
  40e9f7:	mov    r9d,r12d
  40e9fa:	mov    r8d,ebp
  40e9fd:	call   0x42aa80
  40ea02:	jmp    0x40e99b
  40ea04:	xchg   ax,ax
  40ea06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea10:	sub    rsp,0x28
  40ea14:	call   QWORD PTR [rip+0x42d36]        # 0x451750
  40ea1a:	lea    rcx,[rax+0x60]
  40ea1e:	add    rsp,0x28
  40ea22:	jmp    0x42a6f0
  40ea27:	nop    WORD PTR [rax+rax*1+0x0]
  40ea30:	test   rcx,rcx
  40ea33:	je     0x40ea44
  40ea35:	mov    rdx,rcx
  40ea38:	lea    rcx,[rip+0x2799c]        # 0x4363db
  40ea3f:	jmp    0x41d1b0
  40ea44:	repz ret 
  40ea46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea50:	test   rcx,rcx
  40ea53:	je     0x40ea64
  40ea55:	mov    rdx,rcx
  40ea58:	lea    rcx,[rip+0x2798e]        # 0x4363ed
  40ea5f:	jmp    0x41d1b0
  40ea64:	repz ret 
  40ea66:	nop
  40ea67:	nop
  40ea68:	nop
  40ea69:	nop
  40ea6a:	nop
  40ea6b:	nop
  40ea6c:	nop
  40ea6d:	nop
  40ea6e:	nop
  40ea6f:	nop
  40ea70:	push   rsi
  40ea71:	push   rbx
  40ea72:	sub    rsp,0x38
  40ea76:	test   rcx,rcx
  40ea79:	je     0x40eb14
  40ea7f:	mov    ebx,DWORD PTR [rcx+0x4]
  40ea82:	mov    eax,DWORD PTR [rcx]
  40ea84:	mov    r11d,ebx
  40ea87:	sub    r11d,eax
  40ea8a:	mov    rsi,rcx
  40ea8d:	mov    ecx,edx
  40ea8f:	sar    ecx,0x1f
  40ea92:	mov    r10d,ecx
  40ea95:	xor    r10d,edx
  40ea98:	sub    r10d,ecx
  40ea9b:	cmp    r11d,r10d
  40ea9e:	jae    0x40eb35
  40eaa4:	test   edx,edx
  40eaa6:	js     0x40eaf2
  40eaa8:	test   ebx,ebx
  40eaaa:	jne    0x40eae0
  40eaac:	add    eax,edx
  40eaae:	cmp    eax,0x4
  40eab1:	jbe    0x40eb00
  40eab3:	mov    ecx,eax
  40eab5:	mov    ebx,eax
  40eab7:	imul   rcx,r9
  40eabb:	lea    rdx,[rcx+r8*1]
  40eabf:	mov    rcx,rsi
  40eac2:	call   0x41a710
  40eac7:	test   rsi,rsi
  40eaca:	mov    DWORD PTR [rax+0x4],ebx
  40eacd:	je     0x40eb24
  40eacf:	add    rsp,0x38
  40ead3:	pop    rbx
  40ead4:	pop    rsi
  40ead5:	ret    
  40ead6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eae0:	cmp    ebx,0xf
  40eae3:	jbe    0x40eb10
  40eae5:	lea    ebx,[rbx+rbx*2]
  40eae8:	shr    ebx,1
  40eaea:	add    eax,edx
  40eaec:	cmp    eax,ebx
  40eaee:	ja     0x40eab3
  40eaf0:	jmp    0x40eaf6
  40eaf2:	sub    eax,edx
  40eaf4:	mov    ebx,eax
  40eaf6:	xor    eax,eax
  40eaf8:	test   ebx,ebx
  40eafa:	je     0x40eacf
  40eafc:	mov    ecx,ebx
  40eafe:	jmp    0x40eab7
  40eb00:	mov    ecx,0x4
  40eb05:	mov    ebx,0x4
  40eb0a:	jmp    0x40eab7
  40eb0c:	nop    DWORD PTR [rax+0x0]
  40eb10:	add    ebx,ebx
  40eb12:	jmp    0x40eaea
  40eb14:	test   edx,edx
  40eb16:	je     0x40eb31
  40eb18:	xor    r11d,r11d
  40eb1b:	xor    eax,eax
  40eb1d:	xor    ebx,ebx
  40eb1f:	jmp    0x40ea8a
  40eb24:	mov    DWORD PTR [rax],0x0
  40eb2a:	add    rsp,0x38
  40eb2e:	pop    rbx
  40eb2f:	pop    rsi
  40eb30:	ret    
  40eb31:	xor    eax,eax
  40eb33:	jmp    0x40eacf
  40eb35:	lea    rax,[rip+0x27934]        # 0x436470
  40eb3c:	lea    r9,[rip+0x2797d]        # 0x4364c0
  40eb43:	lea    r8,[rip+0x278f6]        # 0x436440
  40eb4a:	lea    rcx,[rip+0x2790a]        # 0x43645b
  40eb51:	mov    edx,0x33
  40eb56:	mov    QWORD PTR [rsp+0x20],rax
  40eb5b:	call   0x41d170
  40eb60:	nop
  40eb61:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb70:	mov    r9d,0x8
  40eb76:	mov    r8d,0x8
  40eb7c:	jmp    0x40ea70
  40eb81:	nop
  40eb82:	nop
  40eb83:	nop
  40eb84:	nop
  40eb85:	nop
  40eb86:	nop
  40eb87:	nop
  40eb88:	nop
  40eb89:	nop
  40eb8a:	nop
  40eb8b:	nop
  40eb8c:	nop
  40eb8d:	nop
  40eb8e:	nop
  40eb8f:	nop
  40eb90:	push   r13
  40eb92:	push   r12
  40eb94:	push   rbp
  40eb95:	push   rdi
  40eb96:	push   rsi
  40eb97:	push   rbx
  40eb98:	sub    rsp,0x38
  40eb9c:	mov    rdi,rcx
  40eb9f:	mov    r12,rdx
  40eba2:	movsx  ebp,r8b
  40eba6:	jmp    0x40ebd7
  40eba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebb0:	mov    r10d,DWORD PTR [rcx]
  40ebb3:	mov    eax,DWORD PTR [rcx+0x4]
  40ebb6:	cmp    eax,r10d
  40ebb9:	je     0x40ec1b
  40ebbb:	cmp    r10d,eax
  40ebbe:	jae    0x40ec5d
  40ebc4:	lea    eax,[r10+0x1]
  40ebc8:	test   rbx,rbx
  40ebcb:	mov    DWORD PTR [rcx],eax
  40ebcd:	mov    QWORD PTR [rcx+r10*8+0x8],r13
  40ebd2:	je     0x40ec50
  40ebd4:	mov    r12,rbx
  40ebd7:	mov    edx,ebp
  40ebd9:	mov    rcx,r12
  40ebdc:	call   0x42a630
  40ebe1:	test   rax,rax
  40ebe4:	mov    rbx,rax
  40ebe7:	je     0x40ec40
  40ebe9:	mov    rsi,rax
  40ebec:	add    rbx,0x1
  40ebf0:	sub    rsi,r12
  40ebf3:	lea    rcx,[rsi+0x1]
  40ebf7:	call   0x41a6e0
  40ebfc:	mov    r8,rsi
  40ebff:	mov    rcx,rax
  40ec02:	mov    rdx,r12
  40ec05:	mov    r13,rax
  40ec08:	call   0x42a668
  40ec0d:	mov    rcx,QWORD PTR [rdi]
  40ec10:	mov    BYTE PTR [r13+rsi*1+0x0],0x0
  40ec16:	test   rcx,rcx
  40ec19:	jne    0x40ebb0
  40ec1b:	mov    edx,0x1
  40ec20:	call   0x40eb70
  40ec25:	mov    r9,rax
  40ec28:	mov    QWORD PTR [rdi],rax
  40ec2b:	mov    r10d,DWORD PTR [rax]
  40ec2e:	mov    rcx,r9
  40ec31:	mov    eax,DWORD PTR [rax+0x4]
  40ec34:	jmp    0x40ebbb
  40ec36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec40:	mov    rcx,r12
  40ec43:	call   0x42a610
  40ec48:	mov    rsi,rax
  40ec4b:	jmp    0x40ebf3
  40ec4d:	nop    DWORD PTR [rax]
  40ec50:	add    rsp,0x38
  40ec54:	pop    rbx
  40ec55:	pop    rsi
  40ec56:	pop    rdi
  40ec57:	pop    rbp
  40ec58:	pop    r12
  40ec5a:	pop    r13
  40ec5c:	ret    
  40ec5d:	lea    rax,[rip+0x278cc]        # 0x436530
  40ec64:	lea    r9,[rip+0x278d5]        # 0x436540
  40ec6b:	lea    r8,[rip+0x2788e]        # 0x436500
  40ec72:	lea    rcx,[rip+0x278a2]        # 0x43651b
  40ec79:	mov    edx,0x43
  40ec7e:	mov    QWORD PTR [rsp+0x20],rax
  40ec83:	call   0x41d170
  40ec88:	nop
  40ec89:	nop    DWORD PTR [rax+0x0]
  40ec90:	push   rdi
  40ec91:	push   rsi
  40ec92:	push   rbx
  40ec93:	sub    rsp,0x20
  40ec97:	test   rcx,rcx
  40ec9a:	je     0x40ece2
  40ec9c:	mov    eax,DWORD PTR [rcx]
  40ec9e:	mov    rdi,rcx
  40eca1:	test   eax,eax
  40eca3:	je     0x40ecd3
  40eca5:	mov    rcx,QWORD PTR [rcx+0x8]
  40eca9:	lea    rsi,[rdi+0x10]
  40ecad:	mov    ebx,0x1
  40ecb2:	call   0x41a7c0
  40ecb7:	jmp    0x40eccf
  40ecb9:	nop    DWORD PTR [rax+0x0]
  40ecc0:	mov    rcx,QWORD PTR [rsi]
  40ecc3:	add    ebx,0x1
  40ecc6:	add    rsi,0x8
  40ecca:	call   0x41a7c0
  40eccf:	cmp    DWORD PTR [rdi],ebx
  40ecd1:	ja     0x40ecc0
  40ecd3:	mov    rcx,rdi
  40ecd6:	add    rsp,0x20
  40ecda:	pop    rbx
  40ecdb:	pop    rsi
  40ecdc:	pop    rdi
  40ecdd:	jmp    0x41a7c0
  40ece2:	add    rsp,0x20
  40ece6:	pop    rbx
  40ece7:	pop    rsi
  40ece8:	pop    rdi
  40ece9:	ret    
  40ecea:	nop    WORD PTR [rax+rax*1+0x0]
  40ecf0:	sub    rsp,0x38
  40ecf4:	mov    rax,rcx
  40ecf7:	lea    rcx,[rsp+0x28]
  40ecfc:	movsx  r8d,dl
  40ed00:	mov    rdx,rax
  40ed03:	mov    QWORD PTR [rsp+0x28],0x0
  40ed0c:	call   0x40eb90
  40ed11:	mov    rax,QWORD PTR [rsp+0x28]
  40ed16:	add    rsp,0x38
  40ed1a:	ret    
  40ed1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed20:	mov    r8d,0x3b
  40ed26:	jmp    0x40eb90
  40ed2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed30:	sub    rsp,0x38
  40ed34:	mov    r8d,0x3b
  40ed3a:	mov    rdx,rcx
  40ed3d:	lea    rcx,[rsp+0x28]
  40ed42:	mov    QWORD PTR [rsp+0x28],0x0
  40ed4b:	call   0x40eb90
  40ed50:	mov    rax,QWORD PTR [rsp+0x28]
  40ed55:	add    rsp,0x38
  40ed59:	ret    
  40ed5a:	nop
  40ed5b:	nop
  40ed5c:	nop
  40ed5d:	nop
  40ed5e:	nop
  40ed5f:	nop
  40ed60:	sub    rsp,0x38
  40ed64:	lea    eax,[rcx-0x30]
  40ed67:	cmp    al,0x4
  40ed69:	ja     0x40ed94
  40ed6b:	mov    rax,QWORD PTR [rip+0x378ee]        # 0x446660
  40ed72:	mov    rax,QWORD PTR [rax]
  40ed75:	mov    rax,QWORD PTR [rax+0x98]
  40ed7c:	test   rax,rax
  40ed7f:	je     0x40ed94
  40ed81:	mov    QWORD PTR [rsp+0x28],rdx
  40ed86:	movsx  ecx,cl
  40ed89:	call   rax
  40ed8b:	test   eax,eax
  40ed8d:	mov    rdx,QWORD PTR [rsp+0x28]
  40ed92:	jne    0x40eda1
  40ed94:	xor    eax,eax
  40ed96:	mov    DWORD PTR [rdx],0x1
  40ed9c:	add    rsp,0x38
  40eda0:	ret    
  40eda1:	mov    eax,0x1
  40eda6:	add    rsp,0x38
  40edaa:	ret    
  40edab:	nop    DWORD PTR [rax+rax*1+0x0]
  40edb0:	push   rbx
  40edb1:	sub    rsp,0x20
  40edb5:	mov    rbx,rcx
  40edb8:	call   0x404000
  40edbd:	mov    rax,QWORD PTR [rax+0x38]
  40edc1:	test   rax,rax
  40edc4:	jne    0x40edd8
  40edc6:	jmp    0x40ede4
  40edc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40edd0:	mov    rax,QWORD PTR [rax]
  40edd3:	test   rax,rax
  40edd6:	je     0x40edde
  40edd8:	cmp    QWORD PTR [rax+0x10],rbx
  40eddc:	jne    0x40edd0
  40edde:	add    rsp,0x20
  40ede2:	pop    rbx
  40ede3:	ret    
  40ede4:	xor    eax,eax
  40ede6:	jmp    0x40edde
  40ede8:	nop    DWORD PTR [rax+rax*1+0x0]
  40edf0:	push   rbp
  40edf1:	push   rdi
  40edf2:	push   rsi
  40edf3:	push   rbx
  40edf4:	sub    rsp,0x28
  40edf8:	mov    r8,QWORD PTR [rdx+0x10]
  40edfc:	mov    rdi,rdx
  40edff:	mov    r9d,DWORD PTR [r8+0xc]
  40ee03:	sub    r9d,0x1
  40ee07:	je     0x40ee22
  40ee09:	mov    DWORD PTR [r8+0xc],r9d
  40ee0d:	mov    rcx,rdi
  40ee10:	xor    esi,esi
  40ee12:	call   0x42a6c8
  40ee17:	mov    eax,esi
  40ee19:	add    rsp,0x28
  40ee1d:	pop    rbx
  40ee1e:	pop    rsi
  40ee1f:	pop    rdi
  40ee20:	pop    rbp
  40ee21:	ret    
  40ee22:	mov    rax,QWORD PTR [rcx+0x30]
  40ee26:	test   rax,rax
  40ee29:	je     0x40ee50
  40ee2b:	cmp    r8,rax
  40ee2e:	lea    rsi,[rcx+0x30]
  40ee32:	mov    rbx,r8
  40ee35:	jne    0x40ee48
  40ee37:	jmp    0x40ee73
  40ee39:	nop    DWORD PTR [rax+0x0]
  40ee40:	cmp    r8,rbx
  40ee43:	je     0x40ee70
  40ee45:	mov    rax,rbx
  40ee48:	mov    rbx,QWORD PTR [rax]
  40ee4b:	test   rbx,rbx
  40ee4e:	jne    0x40ee40
  40ee50:	lea    rcx,[rip+0x277a9]        # 0x436600
  40ee57:	mov    esi,0x2
  40ee5c:	call   0x41d110
  40ee61:	mov    eax,esi
  40ee63:	add    rsp,0x28
  40ee67:	pop    rbx
  40ee68:	pop    rsi
  40ee69:	pop    rdi
  40ee6a:	pop    rbp
  40ee6b:	ret    
  40ee6c:	nop    DWORD PTR [rax+0x0]
  40ee70:	mov    rsi,rax
  40ee73:	mov    edx,DWORD PTR [rbx+0x24]
  40ee76:	test   edx,edx
  40ee78:	jle    0x40eee0
  40ee7a:	mov    rax,QWORD PTR [rbx]
  40ee7d:	mov    rbp,QWORD PTR [rsi]
  40ee80:	mov    r9,rbx
  40ee83:	mov    rdx,QWORD PTR [rbx+0x10]
  40ee87:	mov    ecx,DWORD PTR [rbx+0x8]
  40ee8a:	mov    r8d,DWORD PTR [rbx+0x18]
  40ee8e:	mov    QWORD PTR [rsi],rax
  40ee91:	mov    rax,QWORD PTR [rip+0x377c8]        # 0x446660
  40ee98:	mov    rax,QWORD PTR [rax]
  40ee9b:	call   QWORD PTR [rax+0xa8]
  40eea1:	test   eax,eax
  40eea3:	je     0x40eee6
  40eea5:	mov    QWORD PTR [rsi],rbp
  40eea8:	mov    esi,eax
  40eeaa:	mov    rax,QWORD PTR [rip+0x375bf]        # 0x446470
  40eeb1:	mov    eax,DWORD PTR [rax]
  40eeb3:	test   eax,eax
  40eeb5:	je     0x40ee17
  40eebb:	mov    rcx,QWORD PTR [rbx+0x10]
  40eebf:	call   0x40e950
  40eec4:	lea    rcx,[rip+0x276f5]        # 0x4365c0
  40eecb:	mov    rdx,rax
  40eece:	call   0x41d1b0
  40eed3:	jmp    0x40ee17
  40eed8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eee0:	mov    rax,QWORD PTR [rbx]
  40eee3:	mov    QWORD PTR [rsi],rax
  40eee6:	mov    rcx,rbx
  40eee9:	call   0x42a6c8
  40eeee:	jmp    0x40ee0d
  40eef3:	nop    DWORD PTR [rax]
  40eef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef00:	sub    rsp,0x28
  40ef04:	mov    r8,QWORD PTR [rcx+0x28]
  40ef08:	test   r8,r8
  40ef0b:	je     0x40ef30
  40ef0d:	cmp    r8,rdx
  40ef10:	lea    r9,[rcx+0x28]
  40ef14:	mov    rax,r8
  40ef17:	jne    0x40ef28
  40ef19:	jmp    0x40ef53
  40ef1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef20:	cmp    rdx,rax
  40ef23:	je     0x40ef50
  40ef25:	mov    r8,rax
  40ef28:	mov    rax,QWORD PTR [r8]
  40ef2b:	test   rax,rax
  40ef2e:	jne    0x40ef20
  40ef30:	lea    rcx,[rip+0x276f1]        # 0x436628
  40ef37:	call   0x41d110
  40ef3c:	mov    eax,0x2
  40ef41:	add    rsp,0x28
  40ef45:	ret    
  40ef46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef50:	mov    r9,r8
  40ef53:	mov    rdx,QWORD PTR [rax]
  40ef56:	mov    QWORD PTR [r9],rdx
  40ef59:	mov    rdx,rax
  40ef5c:	add    rsp,0x28
  40ef60:	jmp    0x40edf0
  40ef65:	nop
  40ef66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef70:	push   rsi
  40ef71:	push   rbx
  40ef72:	sub    rsp,0x28
  40ef76:	mov    edx,0x10
  40ef7b:	mov    rsi,rcx
  40ef7e:	mov    ecx,0x1
  40ef83:	call   0x41a760
  40ef88:	movsxd rcx,DWORD PTR [rsi]
  40ef8b:	mov    rbx,rax
  40ef8e:	mov    edx,0x1
  40ef93:	mov    DWORD PTR [rbx],ecx
  40ef95:	call   0x41a760
  40ef9a:	movsxd r8,DWORD PTR [rbx]
  40ef9d:	mov    rdx,QWORD PTR [rsi+0x8]
  40efa1:	mov    rcx,rax
  40efa4:	mov    QWORD PTR [rbx+0x8],rax
  40efa8:	call   0x42a668
  40efad:	mov    rax,rbx
  40efb0:	add    rsp,0x28
  40efb4:	pop    rbx
  40efb5:	pop    rsi
  40efb6:	ret    
  40efb7:	nop    WORD PTR [rax+rax*1+0x0]
  40efc0:	push   r15
  40efc2:	push   r14
  40efc4:	push   r13
  40efc6:	push   r12
  40efc8:	push   rbp
  40efc9:	push   rdi
  40efca:	push   rsi
  40efcb:	push   rbx
  40efcc:	sub    rsp,0x48
  40efd0:	mov    r14d,edx
  40efd3:	mov    ebp,ecx
  40efd5:	mov    rdi,r8
  40efd8:	mov    r12d,r9d
  40efdb:	call   0x404000
  40efe0:	mov    r13,rax
  40efe3:	call   0x404000
  40efe8:	lea    rcx,[rip+0xe491]        # 0x41d480
  40efef:	xor    edx,edx
  40eff1:	mov    r15,rax
  40eff4:	call   0x41d280
  40eff9:	cmp    r14d,0x1
  40effd:	mov    QWORD PTR [rsp+0x38],rax
  40f002:	jbe    0x40f0f0
  40f008:	call   0x404000
  40f00d:	mov    rbx,QWORD PTR [rax+0x30]
  40f011:	test   rbx,rbx
  40f014:	jne    0x40f02c
  40f016:	jmp    0x40f144
  40f01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f020:	mov    rbx,QWORD PTR [rbx]
  40f023:	test   rbx,rbx
  40f026:	je     0x40f144
  40f02c:	cmp    rdi,QWORD PTR [rbx+0x10]
  40f030:	jne    0x40f020
  40f032:	cmp    r14d,DWORD PTR [rbx+0x8]
  40f036:	jne    0x40f020
  40f038:	cmp    r12d,DWORD PTR [rbx+0x18]
  40f03c:	jne    0x40f020
  40f03e:	xchg   ax,ax
  40f040:	mov    edx,DWORD PTR [rbx+0x24]
  40f043:	test   edx,edx
  40f045:	jne    0x40f080
  40f047:	mov    rax,QWORD PTR [rip+0x37612]        # 0x446660
  40f04e:	mov    rdx,QWORD PTR [rbx+0x10]
  40f052:	mov    r9,rbx
  40f055:	mov    ecx,DWORD PTR [rbx+0x8]
  40f058:	mov    r8d,DWORD PTR [rbx+0x18]
  40f05c:	mov    rax,QWORD PTR [rax]
  40f05f:	call   QWORD PTR [rax+0xa0]
  40f065:	mov    esi,eax
  40f067:	mov    rax,QWORD PTR [rsp+0xb8]
  40f06f:	test   esi,esi
  40f071:	mov    DWORD PTR [rax],esi
  40f073:	jne    0x40f1e0
  40f079:	mov    DWORD PTR [rbx+0x24],0x1
  40f080:	mov    rcx,QWORD PTR [rsp+0x38]
  40f085:	call   0x41d3a0
  40f08a:	mov    eax,DWORD PTR [rbx+0xc]
  40f08d:	add    eax,0x1
  40f090:	cmp    eax,0x1
  40f093:	mov    DWORD PTR [rbx+0xc],eax
  40f096:	je     0x40f1d0
  40f09c:	cmp    ebp,0x4
  40f09f:	jbe    0x40f180
  40f0a5:	cmp    ebp,0x6
  40f0a8:	je     0x40f1fe
  40f0ae:	cmp    ebp,0x5
  40f0b1:	jne    0x40f24e
  40f0b7:	mov    edx,0x28
  40f0bc:	mov    ecx,0x1
  40f0c1:	call   0x41a760
  40f0c6:	mov    rdx,QWORD PTR [r13+0x28]
  40f0ca:	mov    DWORD PTR [rax+0x8],ebp
  40f0cd:	mov    QWORD PTR [rax+0x10],rbx
  40f0d1:	mov    QWORD PTR [rax],rdx
  40f0d4:	mov    QWORD PTR [r13+0x28],rax
  40f0d8:	add    rsp,0x48
  40f0dc:	pop    rbx
  40f0dd:	pop    rsi
  40f0de:	pop    rdi
  40f0df:	pop    rbp
  40f0e0:	pop    r12
  40f0e2:	pop    r13
  40f0e4:	pop    r14
  40f0e6:	pop    r15
  40f0e8:	ret    
  40f0e9:	nop    DWORD PTR [rax+0x0]
  40f0f0:	call   0x404000
  40f0f5:	mov    rsi,QWORD PTR [rax+0x30]
  40f0f9:	test   rsi,rsi
  40f0fc:	jne    0x40f108
  40f0fe:	jmp    0x40f144
  40f100:	mov    rsi,QWORD PTR [rsi]
  40f103:	test   rsi,rsi
  40f106:	je     0x40f144
  40f108:	cmp    rdi,QWORD PTR [rsi+0x10]
  40f10c:	jne    0x40f100
  40f10e:	cmp    r14d,DWORD PTR [rsi+0x8]
  40f112:	jne    0x40f100
  40f114:	mov    r8d,DWORD PTR [rsi+0x24]
  40f118:	test   r8d,r8d
  40f11b:	js     0x40f100
  40f11d:	mov    edx,DWORD PTR [rsi+0x18]
  40f120:	mov    rbx,rsi
  40f123:	cmp    r12d,edx
  40f126:	je     0x40f040
  40f12c:	mov    rax,QWORD PTR [rip+0x3733d]        # 0x446470
  40f133:	mov    ecx,DWORD PTR [rax]
  40f135:	test   ecx,ecx
  40f137:	jne    0x40f23a
  40f13d:	mov    DWORD PTR [rsi+0x24],0xffffffff
  40f144:	mov    edx,0x28
  40f149:	mov    ecx,0x1
  40f14e:	call   0x41a760
  40f153:	lea    rcx,[rip+0xb666]        # 0x41a7c0
  40f15a:	mov    QWORD PTR [rax+0x10],rdi
  40f15e:	mov    DWORD PTR [rax+0x18],r12d
  40f162:	mov    DWORD PTR [rax+0x8],r14d
  40f166:	mov    rdx,rax
  40f169:	mov    rbx,rax
  40f16c:	call   0x41d280
  40f171:	jmp    0x40f040
  40f176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f180:	mov    edx,0x28
  40f185:	mov    ecx,0x1
  40f18a:	call   0x41a760
  40f18f:	cmp    QWORD PTR [rsp+0xb0],0x0
  40f198:	je     0x40f0c6
  40f19e:	lea    rax,[rip+0x2752d]        # 0x4366d2
  40f1a5:	lea    r9,[rip+0x27f94]        # 0x437140
  40f1ac:	lea    r8,[rip+0x274f8]        # 0x4366ab
  40f1b3:	lea    rcx,[rip+0x2750c]        # 0x4366c6
  40f1ba:	mov    edx,0x336
  40f1bf:	mov    QWORD PTR [rsp+0x20],rax
  40f1c4:	call   0x41d170
  40f1c9:	nop    DWORD PTR [rax+0x0]
  40f1d0:	mov    rax,QWORD PTR [r15+0x30]
  40f1d4:	mov    QWORD PTR [rbx],rax
  40f1d7:	mov    QWORD PTR [r15+0x30],rbx
  40f1db:	jmp    0x40f09c
  40f1e0:	mov    rax,QWORD PTR [rip+0x37289]        # 0x446470
  40f1e7:	mov    eax,DWORD PTR [rax]
  40f1e9:	test   eax,eax
  40f1eb:	jne    0x40f21e
  40f1ed:	mov    rcx,QWORD PTR [rsp+0x38]
  40f1f2:	call   0x41d380
  40f1f7:	xor    eax,eax
  40f1f9:	jmp    0x40f0d8
  40f1fe:	mov    ecx,0x1
  40f203:	mov    edx,0x20
  40f208:	call   0x41a760
  40f20d:	mov    rcx,QWORD PTR [rsp+0xb0]
  40f215:	mov    QWORD PTR [rax+0x18],rcx
  40f219:	jmp    0x40f0c6
  40f21e:	mov    rcx,rdi
  40f221:	call   0x40e950
  40f226:	lea    rcx,[rip+0x27453]        # 0x436680
  40f22d:	mov    r8d,esi
  40f230:	mov    rdx,rax
  40f233:	call   0x41d1b0
  40f238:	jmp    0x40f1ed
  40f23a:	lea    rcx,[rip+0x2740f]        # 0x436650
  40f241:	mov    r8d,r12d
  40f244:	call   0x41d1b0
  40f249:	jmp    0x40f13d
  40f24e:	lea    rax,[rip+0x27494]        # 0x4366e9
  40f255:	lea    r9,[rip+0x27ee4]        # 0x437140
  40f25c:	lea    r8,[rip+0x2747f]        # 0x4366e2
  40f263:	lea    rcx,[rip+0x2745c]        # 0x4366c6
  40f26a:	mov    edx,0x347
  40f26f:	mov    QWORD PTR [rsp+0x20],rax
  40f274:	call   0x41d170
  40f279:	nop
  40f27a:	nop    WORD PTR [rax+rax*1+0x0]
  40f280:	push   rsi
  40f281:	push   rbx
  40f282:	sub    rsp,0x48
  40f286:	mov    rax,QWORD PTR [rip+0x373d3]        # 0x446660
  40f28d:	mov    ebx,ecx
  40f28f:	mov    rsi,r8
  40f292:	mov    QWORD PTR [rsp+0x38],rdx
  40f297:	lea    rcx,[rsp+0x38]
  40f29c:	mov    rax,QWORD PTR [rax]
  40f29f:	mov    rax,QWORD PTR [rax+0x238]
  40f2a6:	test   rax,rax
  40f2a9:	je     0x40f2d4
  40f2ab:	call   rax
  40f2ad:	mov    r9d,eax
  40f2b0:	lea    rdx,[rsp+0x34]
  40f2b5:	mov    r8,QWORD PTR [rsp+0x38]
  40f2ba:	mov    QWORD PTR [rsp+0x20],rsi
  40f2bf:	mov    ecx,ebx
  40f2c1:	mov    QWORD PTR [rsp+0x28],rdx
  40f2c6:	xor    edx,edx
  40f2c8:	call   0x40efc0
  40f2cd:	add    rsp,0x48
  40f2d1:	pop    rbx
  40f2d2:	pop    rsi
  40f2d3:	ret    
  40f2d4:	call   0x40e460
  40f2d9:	mov    r9d,eax
  40f2dc:	jmp    0x40f2b0
  40f2de:	xchg   ax,ax
  40f2e0:	push   rbp
  40f2e1:	push   r13
  40f2e3:	push   r12
  40f2e5:	push   rdi
  40f2e6:	push   rsi
  40f2e7:	push   rbx
  40f2e8:	sub    rsp,0x48
  40f2ec:	lea    rbp,[rsp+0x80]
  40f2f4:	mov    edx,DWORD PTR [rcx+0x24]
  40f2f7:	mov    rbx,rcx
  40f2fa:	test   edx,edx
  40f2fc:	je     0x40f3e1
  40f302:	mov    eax,DWORD PTR [rcx+0x8]
  40f305:	test   eax,eax
  40f307:	jne    0x40f40c
  40f30d:	mov    rdi,QWORD PTR [rip+0x3734c]        # 0x446660
  40f314:	lea    rsi,[rbp-0x44]
  40f318:	mov    ecx,DWORD PTR [rcx+0x18]
  40f31b:	mov    DWORD PTR [rbp-0x44],0x0
  40f322:	mov    rdx,rsi
  40f325:	mov    rax,QWORD PTR [rdi]
  40f328:	call   QWORD PTR [rax+0x240]
  40f32e:	movsxd rax,DWORD PTR [rbp-0x44]
  40f332:	add    rax,0x1e
  40f336:	and    rax,0xfffffffffffffff0
  40f33a:	call   0x425730
  40f33f:	mov    ecx,DWORD PTR [rbx+0x18]
  40f342:	sub    rsp,rax
  40f345:	mov    rax,QWORD PTR [rdi]
  40f348:	mov    rdx,rsi
  40f34b:	lea    r12,[rsp+0x30]
  40f350:	mov    r13,QWORD PTR [rax+0x70]
  40f354:	mov    DWORD PTR [rbp-0x44],0x0
  40f35b:	call   QWORD PTR [rax+0x240]
  40f361:	mov    rcx,QWORD PTR [rbx+0x10]
  40f365:	mov    r8d,DWORD PTR [rbp-0x44]
  40f369:	mov    rdx,r12
  40f36c:	call   r13
  40f36f:	test   eax,eax
  40f371:	je     0x40f390
  40f373:	xor    eax,eax
  40f375:	mov    DWORD PTR [rbx+0x24],0xffffffff
  40f37c:	lea    rsp,[rbp-0x38]
  40f380:	pop    rbx
  40f381:	pop    rsi
  40f382:	pop    rdi
  40f383:	pop    r12
  40f385:	pop    r13
  40f387:	pop    rbp
  40f388:	ret    
  40f389:	nop    DWORD PTR [rax+0x0]
  40f390:	mov    rax,QWORD PTR [rdi]
  40f393:	mov    ecx,DWORD PTR [rbx+0x18]
  40f396:	mov    rdx,rsi
  40f399:	mov    DWORD PTR [rbp-0x44],0x0
  40f3a0:	call   QWORD PTR [rax+0x240]
  40f3a6:	mov    r13d,DWORD PTR [rbp-0x44]
  40f3aa:	mov    rax,QWORD PTR [rdi]
  40f3ad:	mov    rdx,rsi
  40f3b0:	mov    ecx,DWORD PTR [rbx+0x18]
  40f3b3:	mov    DWORD PTR [rbp-0x44],0x0
  40f3ba:	call   QWORD PTR [rax+0x240]
  40f3c0:	movsxd r8,r13d
  40f3c3:	mov    rdx,rax
  40f3c6:	mov    rcx,r12
  40f3c9:	call   0x42a670
  40f3ce:	test   eax,eax
  40f3d0:	jne    0x40f373
  40f3d2:	mov    al,0x1
  40f3d4:	lea    rsp,[rbp-0x38]
  40f3d8:	pop    rbx
  40f3d9:	pop    rsi
  40f3da:	pop    rdi
  40f3db:	pop    r12
  40f3dd:	pop    r13
  40f3df:	pop    rbp
  40f3e0:	ret    
  40f3e1:	lea    rax,[rip+0x2731b]        # 0x436703
  40f3e8:	lea    r9,[rip+0x27bf1]        # 0x436fe0
  40f3ef:	lea    r8,[rip+0x272b5]        # 0x4366ab
  40f3f6:	lea    rcx,[rip+0x272c9]        # 0x4366c6
  40f3fd:	mov    edx,0x746
  40f402:	mov    QWORD PTR [rsp+0x20],rax
  40f407:	call   0x41d170
  40f40c:	lea    rax,[rip+0x272fd]        # 0x436710
  40f413:	lea    r9,[rip+0x27bc6]        # 0x436fe0
  40f41a:	lea    r8,[rip+0x2728a]        # 0x4366ab
  40f421:	lea    rcx,[rip+0x2729e]        # 0x4366c6
  40f428:	mov    edx,0x747
  40f42d:	mov    QWORD PTR [rsp+0x20],rax
  40f432:	call   0x41d170
  40f437:	nop
  40f438:	nop    DWORD PTR [rax+rax*1+0x0]
  40f440:	push   rdi
  40f441:	push   rsi
  40f442:	push   rbx
  40f443:	sub    rsp,0x20
  40f447:	mov    ebx,ecx
  40f449:	mov    rsi,rdx
  40f44c:	mov    edi,r8d
  40f44f:	call   0x404000
  40f454:	lea    edx,[rbx-0x30]
  40f457:	cmp    dl,0x4
  40f45a:	ja     0x40f49e
  40f45c:	mov    rax,QWORD PTR [rax+0x28]
  40f460:	movsx  ecx,bl
  40f463:	sub    ecx,0x30
  40f466:	test   rax,rax
  40f469:	jne    0x40f478
  40f46b:	jmp    0x40f49a
  40f46d:	nop    DWORD PTR [rax]
  40f470:	mov    rax,QWORD PTR [rax]
  40f473:	test   rax,rax
  40f476:	je     0x40f492
  40f478:	cmp    DWORD PTR [rax+0x8],ecx
  40f47b:	jne    0x40f470
  40f47d:	mov    r9,QWORD PTR [rax+0x10]
  40f481:	cmp    QWORD PTR [r9+0x10],rsi
  40f485:	jne    0x40f470
  40f487:	cmp    edi,0xffffffff
  40f48a:	je     0x40f492
  40f48c:	cmp    DWORD PTR [r9+0x18],edi
  40f490:	jne    0x40f470
  40f492:	add    rsp,0x20
  40f496:	pop    rbx
  40f497:	pop    rsi
  40f498:	pop    rdi
  40f499:	ret    
  40f49a:	xor    eax,eax
  40f49c:	jmp    0x40f492
  40f49e:	call   0x42b520
  40f4a3:	nop
  40f4a4:	xchg   ax,ax
  40f4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f4b0:	push   rdi
  40f4b1:	push   rsi
  40f4b2:	push   rbx
  40f4b3:	sub    rsp,0x50
  40f4b7:	mov    r8d,0xffffffff
  40f4bd:	movsx  ecx,cl
  40f4c0:	call   0x40f440
  40f4c5:	test   rax,rax
  40f4c8:	mov    rbx,rax
  40f4cb:	mov    QWORD PTR [rsp+0x28],0x0
  40f4d4:	je     0x40f580
  40f4da:	cmp    QWORD PTR [rax+0x18],0x0
  40f4df:	je     0x40f555
  40f4e1:	mov    rax,QWORD PTR [rip+0x36f68]        # 0x446450
  40f4e8:	mov    edx,0x1
  40f4ed:	mov    rcx,QWORD PTR [rax]
  40f4f0:	call   0x404290
  40f4f5:	mov    rdx,QWORD PTR [rsp+0x28]
  40f4fa:	mov    QWORD PTR [rsp+0x30],rax
  40f4ff:	mov    QWORD PTR [rsp+0x38],0x0
  40f508:	mov    QWORD PTR [rsp+0x40],0x0
  40f511:	mov    rbx,QWORD PTR [rbx+0x18]
  40f515:	test   rdx,rdx
  40f518:	jne    0x40f566
  40f51a:	test   rbx,rbx
  40f51d:	je     0x40f566
  40f51f:	lea    rdi,[rsp+0x28]
  40f524:	lea    rsi,[rsp+0x30]
  40f529:	nop    DWORD PTR [rax+0x0]
  40f530:	mov    rdx,QWORD PTR [rbx]
  40f533:	mov    r8,rdi
  40f536:	mov    rcx,rsi
  40f539:	call   0x402df0
  40f53e:	mov    rdx,QWORD PTR [rsp+0x28]
  40f543:	mov    rbx,QWORD PTR [rbx+0x8]
  40f547:	test   rdx,rdx
  40f54a:	jne    0x40f562
  40f54c:	test   rbx,rbx
  40f54f:	je     0x40f562
  40f551:	test   eax,eax
  40f553:	je     0x40f530
  40f555:	mov    eax,0x1
  40f55a:	add    rsp,0x50
  40f55e:	pop    rbx
  40f55f:	pop    rsi
  40f560:	pop    rdi
  40f561:	ret    
  40f562:	test   eax,eax
  40f564:	jne    0x40f555
  40f566:	xor    eax,eax
  40f568:	test   rdx,rdx
  40f56b:	setne  al
  40f56e:	add    rsp,0x50
  40f572:	pop    rbx
  40f573:	pop    rsi
  40f574:	pop    rdi
  40f575:	ret    
  40f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f580:	xor    eax,eax
  40f582:	add    rsp,0x50
  40f586:	pop    rbx
  40f587:	pop    rsi
  40f588:	pop    rdi
  40f589:	ret    
  40f58a:	nop    WORD PTR [rax+rax*1+0x0]
  40f590:	push   rdi
  40f591:	push   rsi
  40f592:	push   rbx
  40f593:	sub    rsp,0x50
  40f597:	mov    r8d,0xffffffff
  40f59d:	movsx  ecx,cl
  40f5a0:	call   0x40f440
  40f5a5:	test   rax,rax
  40f5a8:	mov    rbx,rax
  40f5ab:	mov    QWORD PTR [rsp+0x28],0x0
  40f5b4:	je     0x40f630
  40f5b6:	mov    rax,QWORD PTR [rip+0x36e93]        # 0x446450
  40f5bd:	mov    edx,0x1
  40f5c2:	mov    rcx,QWORD PTR [rax]
  40f5c5:	call   0x404290
  40f5ca:	cmp    QWORD PTR [rsp+0x28],0x0
  40f5d0:	mov    QWORD PTR [rsp+0x30],rax
  40f5d5:	mov    QWORD PTR [rsp+0x38],0x0
  40f5de:	mov    QWORD PTR [rsp+0x40],0x0
  40f5e7:	mov    rbx,QWORD PTR [rbx+0x20]
  40f5eb:	jne    0x40f630
  40f5ed:	test   rbx,rbx
  40f5f0:	je     0x40f630
  40f5f2:	lea    rdi,[rsp+0x28]
  40f5f7:	lea    rsi,[rsp+0x30]
  40f5fc:	jmp    0x40f611
  40f5fe:	xchg   ax,ax
  40f600:	cmp    QWORD PTR [rsp+0x28],0x0
  40f606:	mov    rbx,QWORD PTR [rbx+0x10]
  40f60a:	jne    0x40f630
  40f60c:	test   rbx,rbx
  40f60f:	je     0x40f630
  40f611:	mov    rdx,QWORD PTR [rbx]
  40f614:	mov    r8,rdi
  40f617:	mov    rcx,rsi
  40f61a:	call   0x402df0
  40f61f:	test   eax,eax
  40f621:	je     0x40f600
  40f623:	xor    eax,eax
  40f625:	add    rsp,0x50
  40f629:	pop    rbx
  40f62a:	pop    rsi
  40f62b:	pop    rdi
  40f62c:	ret    
  40f62d:	nop    DWORD PTR [rax]
  40f630:	mov    eax,0x1
  40f635:	add    rsp,0x50
  40f639:	pop    rbx
  40f63a:	pop    rsi
  40f63b:	pop    rdi
  40f63c:	ret    
  40f63d:	nop    DWORD PTR [rax]
  40f640:	push   rbp
  40f641:	push   rdi
  40f642:	push   rsi
  40f643:	push   rbx
  40f644:	sub    rsp,0x28
  40f648:	mov    r8d,0xffffffff
  40f64e:	movsx  ebx,cl
  40f651:	mov    rdi,rdx
  40f654:	mov    ecx,ebx
  40f656:	call   0x40f440
  40f65b:	test   rax,rax
  40f65e:	mov    rsi,rax
  40f661:	je     0x40f6b0
  40f663:	mov    rax,QWORD PTR [rip+0x36e06]        # 0x446470
  40f66a:	mov    eax,DWORD PTR [rax]
  40f66c:	test   eax,eax
  40f66e:	jne    0x40f683
  40f670:	xor    eax,eax
  40f672:	cmp    QWORD PTR [rsi+0x20],0x0
  40f677:	sete   al
  40f67a:	add    rsp,0x28
  40f67e:	pop    rbx
  40f67f:	pop    rsi
  40f680:	pop    rdi
  40f681:	pop    rbp
  40f682:	ret    
  40f683:	mov    rcx,QWORD PTR [rsi+0x20]
  40f687:	xor    edx,edx
  40f689:	call   0x41c6e0
  40f68e:	mov    rcx,rdi
  40f691:	mov    rbp,rax
  40f694:	call   0x40e950
  40f699:	lea    rcx,[rip+0x270b8]        # 0x436758
  40f6a0:	mov    rdx,rax
  40f6a3:	mov    r9,rbp
  40f6a6:	mov    r8d,ebx
  40f6a9:	call   0x41d1b0
  40f6ae:	jmp    0x40f670
  40f6b0:	mov    eax,0x1
  40f6b5:	add    rsp,0x28
  40f6b9:	pop    rbx
  40f6ba:	pop    rsi
  40f6bb:	pop    rdi
  40f6bc:	pop    rbp
  40f6bd:	ret    
  40f6be:	xchg   ax,ax
  40f6c0:	push   rbx
  40f6c1:	sub    rsp,0x20
  40f6c5:	mov    rbx,rcx
  40f6c8:	mov    ecx,DWORD PTR [rcx+0x24]
  40f6cb:	test   ecx,ecx
  40f6cd:	js     0x40f714
  40f6cf:	je     0x40f70e
  40f6d1:	mov    rax,QWORD PTR [rip+0x36f88]        # 0x446660
  40f6d8:	mov    DWORD PTR [rbx+0x24],0x0
  40f6df:	mov    r9,rbx
  40f6e2:	mov    rdx,QWORD PTR [rbx+0x10]
  40f6e6:	mov    ecx,DWORD PTR [rbx+0x8]
  40f6e9:	mov    r8d,DWORD PTR [rbx+0x18]
  40f6ed:	mov    rax,QWORD PTR [rax]
  40f6f0:	call   QWORD PTR [rax+0xa8]
  40f6f6:	test   eax,eax
  40f6f8:	je     0x40f70e
  40f6fa:	mov    rax,QWORD PTR [rip+0x36d6f]        # 0x446470
  40f701:	mov    DWORD PTR [rbx+0x24],0x1
  40f708:	mov    eax,DWORD PTR [rax]
  40f70a:	test   eax,eax
  40f70c:	jne    0x40f740
  40f70e:	add    rsp,0x20
  40f712:	pop    rbx
  40f713:	ret    
  40f714:	mov    rax,QWORD PTR [rip+0x36d55]        # 0x446470
  40f71b:	mov    edx,DWORD PTR [rax]
  40f71d:	test   edx,edx
  40f71f:	je     0x40f70e
  40f721:	mov    rcx,QWORD PTR [rbx+0x10]
  40f725:	call   0x40e950
  40f72a:	lea    rcx,[rip+0x27057]        # 0x436788
  40f731:	mov    rdx,rax
  40f734:	add    rsp,0x20
  40f738:	pop    rbx
  40f739:	jmp    0x41d1b0
  40f73e:	xchg   ax,ax
  40f740:	mov    rcx,QWORD PTR [rbx+0x10]
  40f744:	call   0x40e950
  40f749:	lea    rcx,[rip+0x27068]        # 0x4367b8
  40f750:	mov    rdx,rax
  40f753:	add    rsp,0x20
  40f757:	pop    rbx
  40f758:	jmp    0x41d1b0
  40f75d:	nop    DWORD PTR [rax]
  40f760:	push   rsi
  40f761:	push   rbx
  40f762:	sub    rsp,0x28
  40f766:	mov    rax,QWORD PTR [rip+0x36ef3]        # 0x446660
  40f76d:	mov    rdx,QWORD PTR [rcx+0x10]
  40f771:	mov    rbx,rcx
  40f774:	mov    ecx,DWORD PTR [rcx+0x8]
  40f777:	mov    r9,rbx
  40f77a:	mov    r8d,DWORD PTR [rbx+0x18]
  40f77e:	mov    rax,QWORD PTR [rax]
  40f781:	call   QWORD PTR [rax+0xa0]
  40f787:	test   eax,eax
  40f789:	mov    esi,eax
  40f78b:	je     0x40f7c2
  40f78d:	mov    rax,QWORD PTR [rip+0x36cdc]        # 0x446470
  40f794:	mov    eax,DWORD PTR [rax]
  40f796:	test   eax,eax
  40f798:	jne    0x40f7a1
  40f79a:	add    rsp,0x28
  40f79e:	pop    rbx
  40f79f:	pop    rsi
  40f7a0:	ret    
  40f7a1:	mov    rcx,QWORD PTR [rbx+0x10]
  40f7a5:	call   0x40e950
  40f7aa:	lea    rcx,[rip+0x27037]        # 0x4367e8
  40f7b1:	mov    r8d,esi
  40f7b4:	mov    rdx,rax
  40f7b7:	add    rsp,0x28
  40f7bb:	pop    rbx
  40f7bc:	pop    rsi
  40f7bd:	jmp    0x41d1b0
  40f7c2:	mov    DWORD PTR [rbx+0x24],0x1
  40f7c9:	add    rsp,0x28
  40f7cd:	pop    rbx
  40f7ce:	pop    rsi
  40f7cf:	ret    
  40f7d0:	push   rsi
  40f7d1:	push   rbx
  40f7d2:	sub    rsp,0x38
  40f7d6:	call   0x404000
  40f7db:	mov    rdx,QWORD PTR [rax+0x28]
  40f7df:	mov    rsi,rax
  40f7e2:	test   rdx,rdx
  40f7e5:	jne    0x40f7f8
  40f7e7:	jmp    0x40f81d
  40f7e9:	nop    DWORD PTR [rax+0x0]
  40f7f0:	test   rbx,rbx
  40f7f3:	mov    rdx,rbx
  40f7f6:	je     0x40f81d
  40f7f8:	mov    r8,QWORD PTR [rdx+0x10]
  40f7fc:	mov    rbx,QWORD PTR [rdx]
  40f7ff:	mov    eax,DWORD PTR [r8+0x24]
  40f803:	test   eax,eax
  40f805:	jns    0x40f7f0
  40f807:	cmp    DWORD PTR [rdx+0x8],0x5
  40f80b:	je     0x40f824
  40f80d:	mov    rcx,rsi
  40f810:	call   0x40ef00
  40f815:	test   rbx,rbx
  40f818:	mov    rdx,rbx
  40f81b:	jne    0x40f7f8
  40f81d:	add    rsp,0x38
  40f821:	pop    rbx
  40f822:	pop    rsi
  40f823:	ret    
  40f824:	lea    rax,[rip+0x26fed]        # 0x436818
  40f82b:	lea    r9,[rip+0x2776e]        # 0x436fa0
  40f832:	lea    r8,[rip+0x26e72]        # 0x4366ab
  40f839:	lea    rcx,[rip+0x26e86]        # 0x4366c6
  40f840:	mov    edx,0x762
  40f845:	mov    QWORD PTR [rsp+0x20],rax
  40f84a:	call   0x41d170
  40f84f:	nop
  40f850:	push   rdi
  40f851:	push   rsi
  40f852:	push   rbx
  40f853:	sub    rsp,0x20
  40f857:	mov    rbx,QWORD PTR [rcx]
  40f85a:	mov    rdi,rcx
  40f85d:	test   rbx,rbx
  40f860:	je     0x40f885
  40f862:	mov    rcx,QWORD PTR [rbx]
  40f865:	mov    rsi,QWORD PTR [rbx+0x8]
  40f869:	call   0x401a50
  40f86e:	mov    rcx,rbx
  40f871:	mov    rbx,rsi
  40f874:	call   0x42a6c8
  40f879:	test   rsi,rsi
  40f87c:	jne    0x40f862
  40f87e:	mov    QWORD PTR [rdi],0x0
  40f885:	add    rsp,0x20
  40f889:	pop    rbx
  40f88a:	pop    rsi
  40f88b:	pop    rdi
  40f88c:	ret    
  40f88d:	nop    DWORD PTR [rax]
  40f890:	push   rdi
  40f891:	push   rsi
  40f892:	push   rbx
  40f893:	sub    rsp,0x20
  40f897:	mov    rbx,QWORD PTR [rcx]
  40f89a:	mov    rdi,rcx
  40f89d:	test   rbx,rbx
  40f8a0:	je     0x40f8c5
  40f8a2:	mov    rcx,QWORD PTR [rbx]
  40f8a5:	mov    rsi,QWORD PTR [rbx+0x10]
  40f8a9:	call   0x401a50
  40f8ae:	mov    rcx,rbx
  40f8b1:	mov    rbx,rsi
  40f8b4:	call   0x42a6c8
  40f8b9:	test   rsi,rsi
  40f8bc:	jne    0x40f8a2
  40f8be:	mov    QWORD PTR [rdi],0x0
  40f8c5:	add    rsp,0x20
  40f8c9:	pop    rbx
  40f8ca:	pop    rsi
  40f8cb:	pop    rdi
  40f8cc:	ret    
  40f8cd:	nop    DWORD PTR [rax]
  40f8d0:	sub    rsp,0x28
  40f8d4:	cmp    ecx,0x2
  40f8d7:	je     0x40f925
  40f8d9:	jle    0x40f900
  40f8db:	cmp    ecx,0x3
  40f8de:	je     0x40f8f0
  40f8e0:	cmp    ecx,0x4
  40f8e3:	mov    eax,0x2
  40f8e8:	jne    0x40f90a
  40f8ea:	add    rsp,0x28
  40f8ee:	ret    
  40f8ef:	nop
  40f8f0:	mov    eax,0x1
  40f8f5:	add    rsp,0x28
  40f8f9:	ret    
  40f8fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f900:	cmp    ecx,0x1
  40f903:	mov    eax,0x3
  40f908:	je     0x40f8ea
  40f90a:	mov    r9d,ecx
  40f90d:	lea    r8,[rip+0x26f24]        # 0x436838
  40f914:	lea    rcx,[rip+0x26dab]        # 0x4366c6
  40f91b:	mov    edx,0x100
  40f920:	call   0x41d170
  40f925:	xor    eax,eax
  40f927:	add    rsp,0x28
  40f92b:	ret    
  40f92c:	nop    DWORD PTR [rax+0x0]
  40f930:	sub    rsp,0x38
  40f934:	sub    ecx,0x30
  40f937:	cmp    cl,0x4
  40f93a:	ja     0x40f9a0
  40f93c:	lea    rax,[rip+0x26f29]        # 0x43686c
  40f943:	movzx  ecx,cl
  40f946:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40f94a:	add    rax,rdx
  40f94d:	jmp    rax
  40f94f:	nop
  40f950:	mov    eax,0x2
  40f955:	add    rsp,0x38
  40f959:	ret    
  40f95a:	nop    WORD PTR [rax+rax*1+0x0]
  40f960:	mov    eax,0x1
  40f965:	add    rsp,0x38
  40f969:	ret    
  40f96a:	nop    WORD PTR [rax+rax*1+0x0]
  40f970:	mov    eax,0x3
  40f975:	add    rsp,0x38
  40f979:	ret    
  40f97a:	nop    WORD PTR [rax+rax*1+0x0]
  40f980:	mov    eax,0x4
  40f985:	add    rsp,0x38
  40f989:	ret    
  40f98a:	nop    WORD PTR [rax+rax*1+0x0]
  40f990:	xor    eax,eax
  40f992:	add    rsp,0x38
  40f996:	ret    
  40f997:	nop    WORD PTR [rax+rax*1+0x0]
  40f9a0:	lea    rax,[rip+0x26eac]        # 0x436853
  40f9a7:	lea    r9,[rip+0x277f2]        # 0x4371a0
  40f9ae:	lea    r8,[rip+0x26d2d]        # 0x4366e2
  40f9b5:	lea    rcx,[rip+0x26d0a]        # 0x4366c6
  40f9bc:	mov    edx,0x121
  40f9c1:	mov    QWORD PTR [rsp+0x20],rax
  40f9c6:	call   0x41d170
  40f9cb:	nop
  40f9cc:	nop    DWORD PTR [rax+0x0]
  40f9d0:	sub    rsp,0x28
  40f9d4:	call   0x404000
  40f9d9:	mov    rdx,QWORD PTR [rax+0x28]
  40f9dd:	test   rdx,rdx
  40f9e0:	je     0x40fa18
  40f9e2:	cmp    DWORD PTR [rdx+0x8],0x4
  40f9e6:	ja     0x40fa10
  40f9e8:	mov    rax,QWORD PTR [rdx+0x20]
  40f9ec:	test   rax,rax
  40f9ef:	jne    0x40f9fc
  40f9f1:	jmp    0x40fa10
  40f9f3:	mov    rax,QWORD PTR [rax+0x10]
  40f9f7:	test   rax,rax
  40f9fa:	je     0x40fa10
  40f9fc:	mov    ecx,DWORD PTR [rax+0x8]
  40f9ff:	test   ecx,ecx
  40fa01:	je     0x40f9f3
  40fa03:	mov    eax,0x1
  40fa08:	add    rsp,0x28
  40fa0c:	ret    
  40fa0d:	nop    DWORD PTR [rax]
  40fa10:	mov    rdx,QWORD PTR [rdx]
  40fa13:	test   rdx,rdx
  40fa16:	jne    0x40f9e2
  40fa18:	xor    eax,eax
  40fa1a:	add    rsp,0x28
  40fa1e:	ret    
  40fa1f:	nop
  40fa20:	push   r12
  40fa22:	push   rbp
  40fa23:	push   rdi
  40fa24:	push   rsi
  40fa25:	push   rbx
  40fa26:	sub    rsp,0x40
  40fa2a:	mov    rdi,QWORD PTR [rip+0x36c2f]        # 0x446660
  40fa31:	lea    rsi,[rsp+0x30]
  40fa36:	mov    rbx,rcx
  40fa39:	mov    DWORD PTR [rsp+0x30],0x0
  40fa41:	mov    ecx,DWORD PTR [rcx+0x18]
  40fa44:	mov    rax,QWORD PTR [rdi]
  40fa47:	mov    rdx,rsi
  40fa4a:	call   QWORD PTR [rax+0x240]
  40fa50:	mov    rcx,QWORD PTR [rbx+0x10]
  40fa54:	mov    r8d,DWORD PTR [rsp+0x30]
  40fa59:	mov    rdx,rsi
  40fa5c:	call   0x40def0
  40fa61:	test   eax,eax
  40fa63:	je     0x40fa90
  40fa65:	mov    rdx,QWORD PTR [rip+0x36a04]        # 0x446470
  40fa6c:	mov    edx,DWORD PTR [rdx]
  40fa6e:	test   edx,edx
  40fa70:	jne    0x40fb45
  40fa76:	mov    eax,0xffffffff
  40fa7b:	add    rsp,0x40
  40fa7f:	pop    rbx
  40fa80:	pop    rsi
  40fa81:	pop    rdi
  40fa82:	pop    rbp
  40fa83:	pop    r12
  40fa85:	ret    
  40fa86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa90:	mov    rax,QWORD PTR [rdi]
  40fa93:	lea    rbp,[rsp+0x2c]
  40fa98:	mov    ecx,DWORD PTR [rbx+0x18]
  40fa9b:	mov    DWORD PTR [rsp+0x2c],0x0
  40faa3:	mov    rdx,rbp
  40faa6:	call   QWORD PTR [rax+0x240]
  40faac:	movsxd r8,DWORD PTR [rsp+0x2c]
  40fab1:	lea    rcx,[rbx+0x1c]
  40fab5:	mov    rdx,rsi
  40fab8:	call   0x42a668
  40fabd:	mov    rax,QWORD PTR [rdi]
  40fac0:	mov    ecx,DWORD PTR [rbx+0x18]
  40fac3:	mov    rdx,rbp
  40fac6:	mov    rsi,QWORD PTR [rax+0x78]
  40faca:	mov    DWORD PTR [rsp+0x2c],0x0
  40fad2:	call   QWORD PTR [rax+0x240]
  40fad8:	mov    r12d,DWORD PTR [rsp+0x2c]
  40fadd:	mov    rax,QWORD PTR [rdi]
  40fae0:	mov    rdx,rbp
  40fae3:	mov    ecx,DWORD PTR [rbx+0x18]
  40fae6:	mov    DWORD PTR [rsp+0x2c],0x0
  40faee:	call   QWORD PTR [rax+0x240]
  40faf4:	mov    rcx,QWORD PTR [rbx+0x10]
  40faf8:	mov    r8d,r12d
  40fafb:	mov    rdx,rax
  40fafe:	call   rsi
  40fb00:	mov    ecx,eax
  40fb02:	xor    eax,eax
  40fb04:	test   ecx,ecx
  40fb06:	je     0x40fa7b
  40fb0c:	mov    rax,QWORD PTR [rip+0x3695d]        # 0x446470
  40fb13:	mov    eax,DWORD PTR [rax]
  40fb15:	test   eax,eax
  40fb17:	je     0x40fa76
  40fb1d:	call   0x42a618
  40fb22:	mov    rcx,QWORD PTR [rbx+0x10]
  40fb26:	mov    rsi,rax
  40fb29:	call   0x40e950
  40fb2e:	lea    rcx,[rip+0x26d8b]        # 0x4368c0
  40fb35:	mov    rdx,rax
  40fb38:	mov    r8,rsi
  40fb3b:	call   0x41d1b0
  40fb40:	jmp    0x40fa76
  40fb45:	mov    ecx,eax
  40fb47:	call   0x42a618
  40fb4c:	mov    rcx,QWORD PTR [rbx+0x10]
  40fb50:	mov    rsi,rax
  40fb53:	call   0x40e950
  40fb58:	lea    rcx,[rip+0x26d21]        # 0x436880
  40fb5f:	mov    rdx,rax
  40fb62:	mov    r8,rsi
  40fb65:	call   0x41d1b0
  40fb6a:	jmp    0x40fa76
  40fb6f:	nop
  40fb70:	push   rdi
  40fb71:	push   rsi
  40fb72:	push   rbx
  40fb73:	sub    rsp,0x40
  40fb77:	mov    rdi,QWORD PTR [rip+0x36ae2]        # 0x446660
  40fb7e:	lea    rsi,[rsp+0x30]
  40fb83:	mov    rbx,rcx
  40fb86:	mov    DWORD PTR [rsp+0x30],0x0
  40fb8e:	mov    ecx,DWORD PTR [rcx+0x18]
  40fb91:	mov    rax,QWORD PTR [rdi]
  40fb94:	mov    rdx,rsi
  40fb97:	call   QWORD PTR [rax+0x240]
  40fb9d:	movsxd r8,DWORD PTR [rsp+0x30]
  40fba2:	lea    rdx,[rbx+0x1c]
  40fba6:	mov    rcx,rsi
  40fba9:	call   0x42a668
  40fbae:	mov    rax,QWORD PTR [rdi]
  40fbb1:	mov    ecx,DWORD PTR [rbx+0x18]
  40fbb4:	lea    rdx,[rsp+0x2c]
  40fbb9:	mov    DWORD PTR [rsp+0x2c],0x0
  40fbc1:	call   QWORD PTR [rax+0x240]
  40fbc7:	mov    rcx,QWORD PTR [rbx+0x10]
  40fbcb:	mov    r8d,DWORD PTR [rsp+0x2c]
  40fbd0:	mov    rdx,rsi
  40fbd3:	call   0x40df50
  40fbd8:	xor    edx,edx
  40fbda:	test   eax,eax
  40fbdc:	je     0x40fbf0
  40fbde:	mov    rdx,QWORD PTR [rip+0x3688b]        # 0x446470
  40fbe5:	mov    edx,DWORD PTR [rdx]
  40fbe7:	test   edx,edx
  40fbe9:	jne    0x40fc00
  40fbeb:	mov    edx,0xffffffff
  40fbf0:	mov    eax,edx
  40fbf2:	add    rsp,0x40
  40fbf6:	pop    rbx
  40fbf7:	pop    rsi
  40fbf8:	pop    rdi
  40fbf9:	ret    
  40fbfa:	nop    WORD PTR [rax+rax*1+0x0]
  40fc00:	mov    ecx,eax
  40fc02:	call   0x42a618
  40fc07:	mov    rcx,QWORD PTR [rbx+0x10]
  40fc0b:	mov    rsi,rax
  40fc0e:	call   0x40e950
  40fc13:	lea    rcx,[rip+0x26cd6]        # 0x4368f0
  40fc1a:	mov    rdx,rax
  40fc1d:	mov    r8,rsi
  40fc20:	call   0x41d1b0
  40fc25:	jmp    0x40fbeb
  40fc27:	nop    WORD PTR [rax+rax*1+0x0]
  40fc30:	sub    rsp,0x28
  40fc34:	call   0x40edb0
  40fc39:	test   rax,rax
  40fc3c:	setne  al
  40fc3f:	movzx  eax,al
  40fc42:	add    rsp,0x28
  40fc46:	ret    
  40fc47:	nop    WORD PTR [rax+rax*1+0x0]
  40fc50:	push   rbp
  40fc51:	push   r12
  40fc53:	push   rdi
  40fc54:	push   rsi
  40fc55:	push   rbx
  40fc56:	mov    rbp,rsp
  40fc59:	sub    rsp,0x20
  40fc5d:	mov    rsi,rcx
  40fc60:	call   0x404000
  40fc65:	mov    rdx,QWORD PTR [rax+0x38]
  40fc69:	test   rdx,rdx
  40fc6c:	je     0x40fc90
  40fc6e:	cmp    rdx,rsi
  40fc71:	lea    rdi,[rax+0x38]
  40fc75:	mov    rbx,rdx
  40fc78:	jne    0x40fc88
  40fc7a:	jmp    0x40fcb3
  40fc7c:	nop    DWORD PTR [rax+0x0]
  40fc80:	cmp    rsi,rbx
  40fc83:	je     0x40fcb0
  40fc85:	mov    rdx,rbx
  40fc88:	mov    rbx,QWORD PTR [rdx]
  40fc8b:	test   rbx,rbx
  40fc8e:	jne    0x40fc80
  40fc90:	lea    rcx,[rip+0x26cf1]        # 0x436988
  40fc97:	mov    esi,0x2
  40fc9c:	call   0x41d110
  40fca1:	mov    eax,esi
  40fca3:	mov    rsp,rbp
  40fca6:	pop    rbx
  40fca7:	pop    rsi
  40fca8:	pop    rdi
  40fca9:	pop    r12
  40fcab:	pop    rbp
  40fcac:	ret    
  40fcad:	nop    DWORD PTR [rax]
  40fcb0:	mov    rdi,rdx
  40fcb3:	mov    eax,DWORD PTR [rbx+0x8]
  40fcb6:	lea    esi,[rax-0x1]
  40fcb9:	test   esi,esi
  40fcbb:	mov    DWORD PTR [rbx+0x8],esi
  40fcbe:	je     0x40fcd0
  40fcc0:	xor    esi,esi
  40fcc2:	mov    eax,esi
  40fcc4:	mov    rsp,rbp
  40fcc7:	pop    rbx
  40fcc8:	pop    rsi
  40fcc9:	pop    rdi
  40fcca:	pop    r12
  40fccc:	pop    rbp
  40fccd:	ret    
  40fcce:	xchg   ax,ax
  40fcd0:	movsxd r8,DWORD PTR [rbx+0x1c]
  40fcd4:	mov    rax,QWORD PTR [rbx]
  40fcd7:	mov    r12,QWORD PTR [rdi]
  40fcda:	mov    QWORD PTR [rdi],rax
  40fcdd:	lea    rax,[r8+0x1e]
  40fce1:	and    rax,0xfffffffffffffff0
  40fce5:	call   0x425730
  40fcea:	sub    rsp,rax
  40fced:	lea    rdx,[rbx+r8*1+0x20]
  40fcf2:	lea    r9,[rsp+0x20]
  40fcf7:	mov    rcx,r9
  40fcfa:	call   0x42a668
  40fcff:	mov    rcx,QWORD PTR [rbx+0x10]
  40fd03:	mov    r8d,DWORD PTR [rbx+0x1c]
  40fd07:	mov    rdx,rax
  40fd0a:	call   0x40df50
  40fd0f:	test   eax,eax
  40fd11:	je     0x40fd53
  40fd13:	mov    esi,eax
  40fd15:	mov    rax,QWORD PTR [rip+0x36754]        # 0x446470
  40fd1c:	mov    QWORD PTR [rdi],r12
  40fd1f:	mov    eax,DWORD PTR [rax]
  40fd21:	test   eax,eax
  40fd23:	je     0x40fca1
  40fd29:	mov    ecx,esi
  40fd2b:	call   0x42a618
  40fd30:	mov    rcx,QWORD PTR [rbx+0x10]
  40fd34:	mov    rdi,rax
  40fd37:	call   0x40e950
  40fd3c:	lea    rcx,[rip+0x26bf5]        # 0x436938
  40fd43:	mov    rdx,rax
  40fd46:	mov    r8,rdi
  40fd49:	call   0x41d1b0
  40fd4e:	jmp    0x40fca1
  40fd53:	mov    rcx,rbx
  40fd56:	call   0x42a6c8
  40fd5b:	jmp    0x40fca1
  40fd60:	add    DWORD PTR [rcx+0x8],0x1
  40fd64:	ret    
  40fd65:	nop
  40fd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd70:	push   rbp
  40fd71:	push   r13
  40fd73:	push   r12
  40fd75:	push   rdi
  40fd76:	push   rsi
  40fd77:	push   rbx
  40fd78:	sub    rsp,0x28
  40fd7c:	lea    rbp,[rsp+0x80]
  40fd84:	mov    rbx,rcx
  40fd87:	mov    r12,rdx
  40fd8a:	mov    rsi,r8
  40fd8d:	call   0x404000
  40fd92:	mov    rcx,rbx
  40fd95:	mov    rdi,rax
  40fd98:	call   0x40edb0
  40fd9d:	test   rax,rax
  40fda0:	je     0x40fdb3
  40fda2:	add    DWORD PTR [rax+0x8],0x1
  40fda6:	lea    rsp,[rbp-0x58]
  40fdaa:	pop    rbx
  40fdab:	pop    rsi
  40fdac:	pop    rdi
  40fdad:	pop    r12
  40fdaf:	pop    r13
  40fdb1:	pop    rbp
  40fdb2:	ret    
  40fdb3:	lea    rdx,[rsi+rsi*1+0x20]
  40fdb8:	mov    ecx,0x1
  40fdbd:	call   0x41a760
  40fdc2:	lea    rcx,[rax+0x20]
  40fdc6:	mov    QWORD PTR [rax+0x10],rbx
  40fdca:	mov    DWORD PTR [rax+0x1c],esi
  40fdcd:	mov    r8,rsi
  40fdd0:	mov    rdx,r12
  40fdd3:	mov    r13,rax
  40fdd6:	call   0x42a668
  40fddb:	lea    rax,[rsi+0x1e]
  40fddf:	mov    DWORD PTR [r13+0x8],0x1
  40fde7:	and    rax,0xfffffffffffffff0
  40fdeb:	call   0x425730
  40fdf0:	sub    rsp,rax
  40fdf3:	mov    r8d,esi
  40fdf6:	mov    rcx,rbx
  40fdf9:	lea    r12,[rsp+0x20]
  40fdfe:	mov    rdx,r12
  40fe01:	call   0x40def0
  40fe06:	test   eax,eax
  40fe08:	jne    0x40fe71
  40fe0a:	movsxd rax,DWORD PTR [r13+0x1c]
  40fe0e:	mov    r8,rsi
  40fe11:	mov    rdx,r12
  40fe14:	lea    rcx,[r13+rax*1+0x20]
  40fe19:	call   0x42a668
  40fe1e:	mov    rax,QWORD PTR [rdi+0x38]
  40fe22:	mov    DWORD PTR [r13+0x18],0x1
  40fe2a:	mov    rcx,rbx
  40fe2d:	mov    r8d,esi
  40fe30:	mov    rdx,r12
  40fe33:	mov    QWORD PTR [r13+0x0],rax
  40fe37:	mov    QWORD PTR [rdi+0x38],r13
  40fe3b:	call   0x40df50
  40fe40:	mov    ecx,eax
  40fe42:	mov    rax,r13
  40fe45:	test   ecx,ecx
  40fe47:	je     0x40fda6
  40fe4d:	mov    rdx,QWORD PTR [rip+0x3661c]        # 0x446470
  40fe54:	mov    eax,DWORD PTR [rdx]
  40fe56:	test   eax,eax
  40fe58:	jne    0x40fea4
  40fe5a:	mov    rax,QWORD PTR [r13+0x0]
  40fe5e:	mov    QWORD PTR [rdi+0x38],rax
  40fe62:	mov    rcx,r13
  40fe65:	call   0x42a6c8
  40fe6a:	xor    eax,eax
  40fe6c:	jmp    0x40fda6
  40fe71:	mov    rdx,QWORD PTR [rip+0x365f8]        # 0x446470
  40fe78:	mov    edx,DWORD PTR [rdx]
  40fe7a:	test   edx,edx
  40fe7c:	je     0x40fe62
  40fe7e:	mov    ecx,eax
  40fe80:	call   0x42a618
  40fe85:	mov    rcx,rbx
  40fe88:	mov    rsi,rax
  40fe8b:	call   0x40e950
  40fe90:	lea    rcx,[rip+0x26b21]        # 0x4369b8
  40fe97:	mov    rdx,rax
  40fe9a:	mov    r8,rsi
  40fe9d:	call   0x41d1b0
  40fea2:	jmp    0x40fe62
  40fea4:	call   0x42a618
  40fea9:	mov    rcx,rbx
  40feac:	mov    rsi,rax
  40feaf:	call   0x40e950
  40feb4:	lea    rcx,[rip+0x26b3d]        # 0x4369f8
  40febb:	mov    rdx,rax
  40febe:	mov    r8,rsi
  40fec1:	call   0x41d1b0
  40fec6:	jmp    0x40fe5a
  40fec8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fed0:	push   rbp
  40fed1:	push   rsi
  40fed2:	push   rbx
  40fed3:	mov    rbp,rsp
  40fed6:	sub    rsp,0x20
  40feda:	mov    rsi,rcx
  40fedd:	call   0x40edb0
  40fee2:	test   rax,rax
  40fee5:	mov    rbx,rax
  40fee8:	je     0x40ff80
  40feee:	mov    ecx,DWORD PTR [rax+0x18]
  40fef1:	test   ecx,ecx
  40fef3:	jne    0x40ff00
  40fef5:	mov    rsp,rbp
  40fef8:	pop    rbx
  40fef9:	pop    rsi
  40fefa:	pop    rbp
  40fefb:	ret    
  40fefc:	nop    DWORD PTR [rax+0x0]
  40ff00:	movsxd r8,DWORD PTR [rax+0x1c]
  40ff04:	mov    DWORD PTR [rax+0x18],0x0
  40ff0b:	lea    rax,[r8+0x1e]
  40ff0f:	and    rax,0xfffffffffffffff0
  40ff13:	call   0x425730
  40ff18:	sub    rsp,rax
  40ff1b:	lea    rdx,[rbx+r8*1+0x20]
  40ff20:	lea    r9,[rsp+0x20]
  40ff25:	mov    rcx,r9
  40ff28:	call   0x42a668
  40ff2d:	mov    rcx,QWORD PTR [rbx+0x10]
  40ff31:	mov    r8d,DWORD PTR [rbx+0x1c]
  40ff35:	mov    rdx,rax
  40ff38:	call   0x40df50
  40ff3d:	test   eax,eax
  40ff3f:	je     0x40fef5
  40ff41:	mov    rdx,QWORD PTR [rip+0x36528]        # 0x446470
  40ff48:	mov    DWORD PTR [rbx+0x18],0x1
  40ff4f:	mov    edx,DWORD PTR [rdx]
  40ff51:	test   edx,edx
  40ff53:	je     0x40fef5
  40ff55:	mov    ecx,eax
  40ff57:	call   0x42a618
  40ff5c:	mov    rcx,rsi
  40ff5f:	mov    rbx,rax
  40ff62:	call   0x40e950
  40ff67:	lea    rcx,[rip+0x26b0a]        # 0x436a78
  40ff6e:	mov    rdx,rax
  40ff71:	mov    r8,rbx
  40ff74:	call   0x41d1b0
  40ff79:	jmp    0x40fef5
  40ff7e:	xchg   ax,ax
  40ff80:	mov    rax,QWORD PTR [rip+0x364e9]        # 0x446470
  40ff87:	mov    r8d,DWORD PTR [rax]
  40ff8a:	test   r8d,r8d
  40ff8d:	je     0x40fef5
  40ff93:	mov    rcx,rsi
  40ff96:	call   0x40e950
  40ff9b:	lea    rcx,[rip+0x26a8e]        # 0x436a30
  40ffa2:	mov    rdx,rax
  40ffa5:	call   0x41d1b0
  40ffaa:	jmp    0x40fef5
  40ffaf:	nop
  40ffb0:	push   rbp
  40ffb1:	push   rsi
  40ffb2:	push   rbx
  40ffb3:	mov    rbp,rsp
  40ffb6:	sub    rsp,0x20
  40ffba:	mov    rsi,rcx
  40ffbd:	call   0x40edb0
  40ffc2:	test   rax,rax
  40ffc5:	mov    rbx,rax
  40ffc8:	je     0x410060
  40ffce:	mov    ecx,DWORD PTR [rax+0x18]
  40ffd1:	test   ecx,ecx
  40ffd3:	jne    0x410088
  40ffd9:	movsxd r8,DWORD PTR [rax+0x1c]
  40ffdd:	mov    DWORD PTR [rax+0x18],0x1
  40ffe4:	lea    rax,[r8+0x1e]
  40ffe8:	and    rax,0xfffffffffffffff0
  40ffec:	call   0x425730
  40fff1:	sub    rsp,rax
  40fff4:	lea    rdx,[rbx+r8*1+0x20]
  40fff9:	lea    r9,[rsp+0x20]
  40fffe:	mov    rcx,r9
  410001:	call   0x42a668
  410006:	mov    r8d,DWORD PTR [rbx+0x1c]
  41000a:	mov    rdx,rax
  41000d:	mov    rcx,rsi
  410010:	call   0x40df50
  410015:	test   eax,eax
  410017:	je     0x41002d
  410019:	mov    rdx,QWORD PTR [rip+0x36450]        # 0x446470
  410020:	mov    DWORD PTR [rbx+0x18],0x0
  410027:	mov    edx,DWORD PTR [rdx]
  410029:	test   edx,edx
  41002b:	jne    0x410034
  41002d:	mov    rsp,rbp
  410030:	pop    rbx
  410031:	pop    rsi
  410032:	pop    rbp
  410033:	ret    
  410034:	mov    ecx,eax
  410036:	call   0x42a618
  41003b:	mov    rcx,rsi
  41003e:	mov    rbx,rax
  410041:	call   0x40e950
  410046:	lea    rcx,[rip+0x26ad3]        # 0x436b20
  41004d:	mov    rdx,rax
  410050:	mov    r8,rbx
  410053:	call   0x41d1b0
  410058:	nop
  410059:	mov    rsp,rbp
  41005c:	pop    rbx
  41005d:	pop    rsi
  41005e:	pop    rbp
  41005f:	ret    
  410060:	mov    rax,QWORD PTR [rip+0x36409]        # 0x446470
  410067:	mov    r8d,DWORD PTR [rax]
  41006a:	test   r8d,r8d
  41006d:	je     0x41002d
  41006f:	mov    rcx,rsi
  410072:	call   0x40e950
  410077:	lea    rcx,[rip+0x26a32]        # 0x436ab0
  41007e:	mov    rdx,rax
  410081:	call   0x41d1b0
  410086:	jmp    0x41002d
  410088:	lea    rcx,[rip+0x26a69]        # 0x436af8
  41008f:	call   0x41d140
  410094:	nop
  410095:	nop
  410096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100a0:	mov    r8,rdx
  4100a3:	mov    rdx,rcx
  4100a6:	mov    ecx,0x6
  4100ab:	jmp    0x40f280
  4100b0:	push   rbx
  4100b1:	sub    rsp,0x20
  4100b5:	mov    rbx,rcx
  4100b8:	call   0x404000
  4100bd:	mov    rdx,rbx
  4100c0:	mov    rcx,rax
  4100c3:	add    rsp,0x20
  4100c7:	pop    rbx
  4100c8:	jmp    0x40ef00
  4100cd:	nop    DWORD PTR [rax]
  4100d0:	push   rbp
  4100d1:	push   rdi
  4100d2:	push   rsi
  4100d3:	push   rbx
  4100d4:	sub    rsp,0x38
  4100d8:	mov    rdi,rdx
  4100db:	movsx  esi,cl
  4100de:	lea    rdx,[rsp+0x2c]
  4100e3:	mov    ebx,ecx
  4100e5:	mov    ecx,esi
  4100e7:	mov    ebp,r8d
  4100ea:	call   0x40ed60
  4100ef:	test   eax,eax
  4100f1:	je     0x4101a3
  4100f7:	cmp    bl,0x30
  4100fa:	je     0x410150
  4100fc:	mov    r8d,ebp
  4100ff:	mov    rdx,rdi
  410102:	mov    ecx,esi
  410104:	call   0x40f440
  410109:	test   rax,rax
  41010c:	mov    rbx,rax
  41010f:	je     0x4101b0
  410115:	lea    rcx,[rax+0x18]
  410119:	call   0x40f850
  41011e:	lea    rcx,[rbx+0x20]
  410122:	call   0x40f890
  410127:	call   0x404000
  41012c:	mov    rdx,rbx
  41012f:	mov    rcx,rax
  410132:	call   0x40ef00
  410137:	test   eax,eax
  410139:	setne  al
  41013c:	movzx  eax,al
  41013f:	neg    eax
  410141:	add    rsp,0x38
  410145:	pop    rbx
  410146:	pop    rsi
  410147:	pop    rdi
  410148:	pop    rbp
  410149:	ret    
  41014a:	nop    WORD PTR [rax+rax*1+0x0]
  410150:	call   0x40de20
  410155:	test   eax,eax
  410157:	jne    0x4101b0
  410159:	mov    r8d,ebp
  41015c:	mov    rdx,rdi
  41015f:	mov    ecx,esi
  410161:	call   0x40f440
  410166:	test   rax,rax
  410169:	mov    rbx,rax
  41016c:	je     0x4101b7
  41016e:	lea    rcx,[rax+0x18]
  410172:	call   0x40f850
  410177:	lea    rcx,[rbx+0x20]
  41017b:	call   0x40f890
  410180:	call   0x404000
  410185:	mov    rdx,rbx
  410188:	mov    rcx,rax
  41018b:	call   0x40ef00
  410190:	test   eax,eax
  410192:	setne  al
  410195:	movzx  eax,al
  410198:	neg    eax
  41019a:	mov    DWORD PTR [rsp+0x2c],eax
  41019e:	call   0x40ddc0
  4101a3:	mov    eax,DWORD PTR [rsp+0x2c]
  4101a7:	add    rsp,0x38
  4101ab:	pop    rbx
  4101ac:	pop    rsi
  4101ad:	pop    rdi
  4101ae:	pop    rbp
  4101af:	ret    
  4101b0:	mov    eax,0xffffffff
  4101b5:	jmp    0x410141
  4101b7:	mov    DWORD PTR [rsp+0x2c],0xffffffff
  4101bf:	jmp    0x41019e
  4101c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4101c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101d0:	push   rbx
  4101d1:	sub    rsp,0x20
  4101d5:	mov    rbx,rcx
  4101d8:	lea    rcx,[rcx+0x18]
  4101dc:	call   0x40f850
  4101e1:	lea    rcx,[rbx+0x20]
  4101e5:	add    rsp,0x20
  4101e9:	pop    rbx
  4101ea:	jmp    0x40f890
  4101ef:	nop
  4101f0:	push   rbp
  4101f1:	push   rdi
  4101f2:	push   rsi
  4101f3:	push   rbx
  4101f4:	sub    rsp,0x38
  4101f8:	mov    rax,QWORD PTR [rdx]
  4101fb:	xor    edi,edi
  4101fd:	test   rcx,rcx
  410200:	mov    QWORD PTR [rsp+0x28],rax
  410205:	je     0x41024a
  410207:	mov    rbx,rcx
  41020a:	lea    rcx,[rsp+0x28]
  41020f:	mov    rsi,rdx
  410212:	call   0x4019e0
  410217:	test   rax,rax
  41021a:	mov    rbp,rax
  41021d:	je     0x410255
  41021f:	mov    edx,0x10
  410224:	mov    ecx,0x1
  410229:	mov    edi,0x1
  41022e:	call   0x41a760
  410233:	mov    rdx,QWORD PTR [rbx+0x18]
  410237:	mov    QWORD PTR [rax],rbp
  41023a:	mov    QWORD PTR [rbx+0x18],rax
  41023e:	mov    QWORD PTR [rax+0x8],rdx
  410242:	mov    rax,QWORD PTR [rsp+0x28]
  410247:	mov    QWORD PTR [rsi],rax
  41024a:	mov    eax,edi
  41024c:	add    rsp,0x38
  410250:	pop    rbx
  410251:	pop    rsi
  410252:	pop    rdi
  410253:	pop    rbp
  410254:	ret    
  410255:	call   QWORD PTR [rip+0x414f5]        # 0x451750
  41025b:	lea    rdx,[rip+0x268f6]        # 0x436b58
  410262:	lea    rcx,[rax+0x60]
  410266:	call   0x42aa80
  41026b:	jmp    0x41024a
  41026d:	nop    DWORD PTR [rax]
  410270:	push   rbx
  410271:	sub    rsp,0x20
  410275:	mov    rdx,rcx
  410278:	mov    rbx,rcx
  41027b:	mov    ecx,0x30
  410280:	call   0x40f4b0
  410285:	test   eax,eax
  410287:	mov    r8d,0x1
  41028d:	jne    0x4102a5
  41028f:	mov    rdx,rbx
  410292:	mov    ecx,0x31
  410297:	call   0x40f4b0
  41029c:	xor    r8d,r8d
  41029f:	test   eax,eax
  4102a1:	setne  r8b
  4102a5:	mov    eax,r8d
  4102a8:	add    rsp,0x20
  4102ac:	pop    rbx
  4102ad:	ret    
  4102ae:	xchg   ax,ax
  4102b0:	push   r12
  4102b2:	push   rbp
  4102b3:	push   rdi
  4102b4:	push   rsi
  4102b5:	push   rbx
  4102b6:	sub    rsp,0x30
  4102ba:	mov    rax,QWORD PTR [rdx]
  4102bd:	xor    edi,edi
  4102bf:	test   rcx,rcx
  4102c2:	mov    QWORD PTR [rsp+0x28],rax
  4102c7:	je     0x410313
  4102c9:	mov    rbx,rcx
  4102cc:	lea    rcx,[rsp+0x28]
  4102d1:	mov    r12d,r8d
  4102d4:	mov    rsi,rdx
  4102d7:	call   0x4019e0
  4102dc:	test   rax,rax
  4102df:	mov    rbp,rax
  4102e2:	je     0x410320
  4102e4:	mov    edx,0x18
  4102e9:	mov    ecx,0x1
  4102ee:	mov    edi,0x1
  4102f3:	call   0x41a760
  4102f8:	mov    rdx,QWORD PTR [rbx+0x20]
  4102fc:	mov    QWORD PTR [rax],rbp
  4102ff:	mov    QWORD PTR [rbx+0x20],rax
  410303:	mov    DWORD PTR [rax+0x8],r12d
  410307:	mov    QWORD PTR [rax+0x10],rdx
  41030b:	mov    rax,QWORD PTR [rsp+0x28]
  410310:	mov    QWORD PTR [rsi],rax
  410313:	mov    eax,edi
  410315:	add    rsp,0x30
  410319:	pop    rbx
  41031a:	pop    rsi
  41031b:	pop    rdi
  41031c:	pop    rbp
  41031d:	pop    r12
  41031f:	ret    
  410320:	call   QWORD PTR [rip+0x4142a]        # 0x451750
  410326:	lea    rdx,[rip+0x26863]        # 0x436b90
  41032d:	lea    rcx,[rax+0x60]
  410331:	call   0x42aa80
  410336:	jmp    0x410313
  410338:	nop    DWORD PTR [rax+rax*1+0x0]
  410340:	push   rbx
  410341:	sub    rsp,0x20
  410345:	mov    rdx,rcx
  410348:	mov    rbx,rcx
  41034b:	mov    ecx,0x30
  410350:	call   0x40f640
  410355:	test   eax,eax
  410357:	je     0x41036e
  410359:	mov    rdx,rbx
  41035c:	mov    ecx,0x31
  410361:	call   0x40f640
  410366:	test   eax,eax
  410368:	setne  al
  41036b:	movzx  eax,al
  41036e:	add    rsp,0x20
  410372:	pop    rbx
  410373:	ret    
  410374:	xchg   ax,ax
  410376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410380:	push   rbx
  410381:	sub    rsp,0x20
  410385:	mov    rdx,rcx
  410388:	mov    rbx,rcx
  41038b:	mov    ecx,0x30
  410390:	call   0x40f590
  410395:	test   eax,eax
  410397:	jne    0x4103a0
  410399:	add    rsp,0x20
  41039d:	pop    rbx
  41039e:	ret    
  41039f:	nop
  4103a0:	mov    rdx,rbx
  4103a3:	mov    ecx,0x31
  4103a8:	add    rsp,0x20
  4103ac:	pop    rbx
  4103ad:	jmp    0x40f590
  4103b2:	nop    DWORD PTR [rax+0x0]
  4103b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4103c0:	push   rbx
  4103c1:	sub    rsp,0x20
  4103c5:	mov    r8d,0xffffffff
  4103cb:	mov    rdx,rcx
  4103ce:	mov    rbx,rcx
  4103d1:	mov    ecx,0x30
  4103d6:	call   0x40f440
  4103db:	test   rax,rax
  4103de:	mov    r8d,0x1
  4103e4:	je     0x4103f0
  4103e6:	mov    eax,r8d
  4103e9:	add    rsp,0x20
  4103ed:	pop    rbx
  4103ee:	ret    
  4103ef:	nop
  4103f0:	mov    r8d,0xffffffff
  4103f6:	mov    rdx,rbx
  4103f9:	mov    ecx,0x31
  4103fe:	call   0x40f440
  410403:	xor    r8d,r8d
  410406:	test   rax,rax
  410409:	setne  r8b
  41040d:	mov    eax,r8d
  410410:	add    rsp,0x20
  410414:	pop    rbx
  410415:	ret    
  410416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410420:	push   rbp
  410421:	push   rdi
  410422:	push   rsi
  410423:	push   rbx
  410424:	sub    rsp,0x48
  410428:	mov    rax,QWORD PTR [rip+0x36021]        # 0x446450
  41042f:	mov    rbx,rdx
  410432:	lea    rsi,[rsp+0x30]
  410437:	mov    rbp,rcx
  41043a:	mov    rax,QWORD PTR [rax]
  41043d:	mov    rcx,rsi
  410440:	mov    rdx,QWORD PTR [rax]
  410443:	mov    QWORD PTR [rsp+0x30],rdx
  410448:	mov    eax,DWORD PTR [rax+0x8]
  41044b:	mov    DWORD PTR [rsp+0x38],eax
  41044f:	call   0x41ad20
  410454:	mov    edi,eax
  410456:	mov    rax,QWORD PTR [rbx]
  410459:	mov    rcx,rsi
  41045c:	mov    QWORD PTR [rsp+0x30],rax
  410461:	mov    eax,DWORD PTR [rbx+0x8]
  410464:	mov    DWORD PTR [rsp+0x38],eax
  410468:	call   0x41ad20
  41046d:	cmp    edi,eax
  41046f:	jne    0x410497
  410471:	mov    rdx,rbp
  410474:	xor    r8d,r8d
  410477:	mov    ecx,0x5
  41047c:	call   0x40f280
  410481:	mov    rdx,QWORD PTR [rbx]
  410484:	mov    QWORD PTR [rax+0x18],rdx
  410488:	mov    edx,DWORD PTR [rbx+0x8]
  41048b:	mov    DWORD PTR [rax+0x20],edx
  41048e:	add    rsp,0x48
  410492:	pop    rbx
  410493:	pop    rsi
  410494:	pop    rdi
  410495:	pop    rbp
  410496:	ret    
  410497:	lea    rax,[rip+0x2671a]        # 0x436bb8
  41049e:	lea    r9,[rip+0x26bfb]        # 0x4370a0
  4104a5:	lea    r8,[rip+0x261ff]        # 0x4366ab
  4104ac:	lea    rcx,[rip+0x26213]        # 0x4366c6
  4104b3:	mov    edx,0x5ce
  4104b8:	mov    QWORD PTR [rsp+0x20],rax
  4104bd:	call   0x41d170
  4104c2:	nop
  4104c3:	nop    DWORD PTR [rax]
  4104c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104d0:	push   r15
  4104d2:	push   r14
  4104d4:	push   r13
  4104d6:	push   r12
  4104d8:	push   rbp
  4104d9:	push   rdi
  4104da:	push   rsi
  4104db:	push   rbx
  4104dc:	sub    rsp,0x48
  4104e0:	mov    rdi,rcx
  4104e3:	call   0x403fd0
  4104e8:	mov    rbx,QWORD PTR [rax+0x28]
  4104ec:	mov    rbp,rax
  4104ef:	lea    rsi,[rax+0x28]
  4104f3:	test   rbx,rbx
  4104f6:	je     0x410574
  4104f8:	lea    r14,[rsp+0x20]
  4104fd:	lea    r13,[rsp+0x30]
  410502:	mov    r12,QWORD PTR [rip+0x35f47]        # 0x446450
  410509:	jmp    0x41051b
  41050b:	nop    DWORD PTR [rax+rax*1+0x0]
  410510:	mov    rsi,rbx
  410513:	mov    rbx,QWORD PTR [rbx]
  410516:	test   rbx,rbx
  410519:	je     0x410574
  41051b:	cmp    DWORD PTR [rbx+0x8],0x5
  41051f:	jne    0x410510
  410521:	mov    rax,QWORD PTR [rbx+0x18]
  410525:	mov    rdx,r14
  410528:	mov    rcx,r13
  41052b:	mov    QWORD PTR [rsp+0x30],rax
  410530:	mov    eax,DWORD PTR [rbx+0x20]
  410533:	mov    DWORD PTR [rsp+0x38],eax
  410537:	mov    rax,QWORD PTR [rdi]
  41053a:	mov    QWORD PTR [rsp+0x20],rax
  41053f:	mov    eax,DWORD PTR [rdi+0x8]
  410542:	mov    DWORD PTR [rsp+0x28],eax
  410546:	call   0x41ad50
  41054b:	test   eax,eax
  41054d:	je     0x410510
  41054f:	mov    rax,QWORD PTR [rbx]
  410552:	mov    r15,QWORD PTR [r12]
  410556:	mov    rdx,rbx
  410559:	mov    QWORD PTR [r12],rdi
  41055d:	mov    rcx,rbp
  410560:	mov    QWORD PTR [rsi],rax
  410563:	call   0x40edf0
  410568:	mov    rbx,QWORD PTR [rsi]
  41056b:	mov    QWORD PTR [r12],r15
  41056f:	test   rbx,rbx
  410572:	jne    0x41051b
  410574:	add    rsp,0x48
  410578:	pop    rbx
  410579:	pop    rsi
  41057a:	pop    rdi
  41057b:	pop    rbp
  41057c:	pop    r12
  41057e:	pop    r13
  410580:	pop    r14
  410582:	pop    r15
  410584:	ret    
  410585:	nop
  410586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410590:	push   rdi
  410591:	push   rsi
  410592:	push   rbx
  410593:	sub    rsp,0x20
  410597:	xor    edi,edi
  410599:	mov    rsi,rcx
  41059c:	call   0x404000
  4105a1:	mov    rbx,QWORD PTR [rax+0x30]
  4105a5:	test   rbx,rbx
  4105a8:	jne    0x4105b8
  4105aa:	jmp    0x4105e4
  4105ac:	nop    DWORD PTR [rax+0x0]
  4105b0:	mov    rbx,QWORD PTR [rbx]
  4105b3:	test   rbx,rbx
  4105b6:	je     0x4105e0
  4105b8:	cmp    DWORD PTR [rbx+0x8],0x1
  4105bc:	ja     0x4105b0
  4105be:	cmp    QWORD PTR [rbx+0x10],rsi
  4105c2:	jne    0x4105b0
  4105c4:	mov    eax,DWORD PTR [rbx+0x24]
  4105c7:	mov    edi,0x1
  4105cc:	test   eax,eax
  4105ce:	je     0x4105b0
  4105d0:	mov    rcx,rbx
  4105d3:	call   0x40f6c0
  4105d8:	mov    rbx,QWORD PTR [rbx]
  4105db:	test   rbx,rbx
  4105de:	jne    0x4105b8
  4105e0:	test   edi,edi
  4105e2:	jne    0x4105f1
  4105e4:	mov    rax,QWORD PTR [rip+0x35e85]        # 0x446470
  4105eb:	mov    edx,DWORD PTR [rax]
  4105ed:	test   edx,edx
  4105ef:	jne    0x410600
  4105f1:	add    rsp,0x20
  4105f5:	pop    rbx
  4105f6:	pop    rsi
  4105f7:	pop    rdi
  4105f8:	ret    
  4105f9:	nop    DWORD PTR [rax+0x0]
  410600:	mov    rcx,rsi
  410603:	call   0x40e950
  410608:	lea    rcx,[rip+0x265e1]        # 0x436bf0
  41060f:	mov    rdx,rax
  410612:	add    rsp,0x20
  410616:	pop    rbx
  410617:	pop    rsi
  410618:	pop    rdi
  410619:	jmp    0x41d1b0
  41061e:	xchg   ax,ax
  410620:	push   rbx
  410621:	sub    rsp,0x20
  410625:	call   0x404000
  41062a:	mov    rbx,QWORD PTR [rax+0x30]
  41062e:	test   rbx,rbx
  410631:	jne    0x41063d
  410633:	jmp    0x410660
  410635:	mov    rbx,QWORD PTR [rbx]
  410638:	test   rbx,rbx
  41063b:	je     0x410660
  41063d:	cmp    DWORD PTR [rbx+0x8],0x1
  410641:	ja     0x410635
  410643:	mov    eax,DWORD PTR [rbx+0x24]
  410646:	test   eax,eax
  410648:	je     0x410635
  41064a:	mov    rcx,rbx
  41064d:	call   0x40f6c0
  410652:	mov    rbx,QWORD PTR [rbx]
  410655:	test   rbx,rbx
  410658:	jne    0x41063d
  41065a:	nop    WORD PTR [rax+rax*1+0x0]
  410660:	add    rsp,0x20
  410664:	pop    rbx
  410665:	ret    
  410666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410670:	push   r13
  410672:	push   r12
  410674:	push   rbp
  410675:	push   rdi
  410676:	push   rsi
  410677:	push   rbx
  410678:	sub    rsp,0x58
  41067c:	mov    rsi,rcx
  41067f:	call   0x403fd0
  410684:	mov    rbx,QWORD PTR [rax+0x28]
  410688:	test   rbx,rbx
  41068b:	je     0x410703
  41068d:	lea    r12,[rsp+0x30]
  410692:	lea    rbp,[rsp+0x40]
  410697:	mov    rdi,QWORD PTR [rip+0x35db2]        # 0x446450
  41069e:	jmp    0x4106a8
  4106a0:	mov    rbx,QWORD PTR [rbx]
  4106a3:	test   rbx,rbx
  4106a6:	je     0x410703
  4106a8:	cmp    DWORD PTR [rbx+0x8],0x5
  4106ac:	jne    0x4106a0
  4106ae:	mov    rax,QWORD PTR [rbx+0x18]
  4106b2:	mov    rdx,r12
  4106b5:	mov    rcx,rbp
  4106b8:	mov    QWORD PTR [rsp+0x40],rax
  4106bd:	mov    eax,DWORD PTR [rbx+0x20]
  4106c0:	mov    DWORD PTR [rsp+0x48],eax
  4106c4:	mov    rax,QWORD PTR [rsi]
  4106c7:	mov    QWORD PTR [rsp+0x30],rax
  4106cc:	mov    eax,DWORD PTR [rsi+0x8]
  4106cf:	mov    DWORD PTR [rsp+0x38],eax
  4106d3:	call   0x41ad50
  4106d8:	test   eax,eax
  4106da:	je     0x4106a0
  4106dc:	mov    rcx,QWORD PTR [rbx+0x10]
  4106e0:	mov    eax,DWORD PTR [rcx+0x24]
  4106e3:	test   eax,eax
  4106e5:	jle    0x410710
  4106e7:	cmp    DWORD PTR [rcx+0xc],0x1
  4106eb:	jne    0x4106a0
  4106ed:	mov    r13,QWORD PTR [rdi]
  4106f0:	mov    QWORD PTR [rdi],rsi
  4106f3:	call   0x40f6c0
  4106f8:	mov    rbx,QWORD PTR [rbx]
  4106fb:	mov    QWORD PTR [rdi],r13
  4106fe:	test   rbx,rbx
  410701:	jne    0x4106a8
  410703:	add    rsp,0x58
  410707:	pop    rbx
  410708:	pop    rsi
  410709:	pop    rdi
  41070a:	pop    rbp
  41070b:	pop    r12
  41070d:	pop    r13
  41070f:	ret    
  410710:	lea    rax,[rip+0x26513]        # 0x436c2a
  410717:	lea    r9,[rip+0x26942]        # 0x437060
  41071e:	lea    r8,[rip+0x25f86]        # 0x4366ab
  410725:	lea    rcx,[rip+0x25f9a]        # 0x4366c6
  41072c:	mov    edx,0x645
  410731:	mov    QWORD PTR [rsp+0x20],rax
  410736:	call   0x41d170
  41073b:	nop
  41073c:	nop    DWORD PTR [rax+0x0]
  410740:	push   rdi
  410741:	push   rsi
  410742:	push   rbx
  410743:	sub    rsp,0x20
  410747:	xor    edi,edi
  410749:	mov    rsi,rcx
  41074c:	call   0x404000
  410751:	mov    rbx,QWORD PTR [rax+0x30]
  410755:	test   rbx,rbx
  410758:	jne    0x410768
  41075a:	jmp    0x410794
  41075c:	nop    DWORD PTR [rax+0x0]
  410760:	mov    rbx,QWORD PTR [rbx]
  410763:	test   rbx,rbx
  410766:	je     0x410790
  410768:	cmp    DWORD PTR [rbx+0x8],0x1
  41076c:	ja     0x410760
  41076e:	cmp    QWORD PTR [rbx+0x10],rsi
  410772:	jne    0x410760
  410774:	mov    eax,DWORD PTR [rbx+0x24]
  410777:	mov    edi,0x1
  41077c:	test   eax,eax
  41077e:	jne    0x410760
  410780:	mov    rcx,rbx
  410783:	call   0x40f760
  410788:	mov    rbx,QWORD PTR [rbx]
  41078b:	test   rbx,rbx
  41078e:	jne    0x410768
  410790:	test   edi,edi
  410792:	jne    0x4107a1
  410794:	mov    rax,QWORD PTR [rip+0x35cd5]        # 0x446470
  41079b:	mov    edx,DWORD PTR [rax]
  41079d:	test   edx,edx
  41079f:	jne    0x4107b0
  4107a1:	add    rsp,0x20
  4107a5:	pop    rbx
  4107a6:	pop    rsi
  4107a7:	pop    rdi
  4107a8:	ret    
  4107a9:	nop    DWORD PTR [rax+0x0]
  4107b0:	mov    rcx,rsi
  4107b3:	call   0x40e950
  4107b8:	lea    rcx,[rip+0x26481]        # 0x436c40
  4107bf:	mov    rdx,rax
  4107c2:	add    rsp,0x20
  4107c6:	pop    rbx
  4107c7:	pop    rsi
  4107c8:	pop    rdi
  4107c9:	jmp    0x41d1b0
  4107ce:	xchg   ax,ax
  4107d0:	push   rbp
  4107d1:	push   rdi
  4107d2:	push   rsi
  4107d3:	push   rbx
  4107d4:	sub    rsp,0x48
  4107d8:	mov    rsi,rcx
  4107db:	lea    rbp,[rsp+0x20]
  4107e0:	lea    rdi,[rsp+0x30]
  4107e5:	call   0x403fd0
  4107ea:	mov    rbx,QWORD PTR [rax+0x28]
  4107ee:	test   rbx,rbx
  4107f1:	jne    0x4107fd
  4107f3:	jmp    0x410840
  4107f5:	mov    rbx,QWORD PTR [rbx]
  4107f8:	test   rbx,rbx
  4107fb:	je     0x410840
  4107fd:	cmp    DWORD PTR [rbx+0x8],0x5
  410801:	jne    0x4107f5
  410803:	mov    rax,QWORD PTR [rbx+0x18]
  410807:	mov    rdx,rbp
  41080a:	mov    rcx,rdi
  41080d:	mov    QWORD PTR [rsp+0x30],rax
  410812:	mov    eax,DWORD PTR [rbx+0x20]
  410815:	mov    DWORD PTR [rsp+0x38],eax
  410819:	mov    rax,QWORD PTR [rsi]
  41081c:	mov    QWORD PTR [rsp+0x20],rax
  410821:	mov    eax,DWORD PTR [rsi+0x8]
  410824:	mov    DWORD PTR [rsp+0x28],eax
  410828:	call   0x41ad50
  41082d:	test   eax,eax
  41082f:	je     0x4107f5
  410831:	mov    eax,0x1
  410836:	add    rsp,0x48
  41083a:	pop    rbx
  41083b:	pop    rsi
  41083c:	pop    rdi
  41083d:	pop    rbp
  41083e:	ret    
  41083f:	nop
  410840:	xor    eax,eax
  410842:	add    rsp,0x48
  410846:	pop    rbx
  410847:	pop    rsi
  410848:	pop    rdi
  410849:	pop    rbp
  41084a:	ret    
  41084b:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	push   rbx
  410851:	sub    rsp,0x20
  410855:	call   0x404000
  41085a:	mov    rbx,QWORD PTR [rax+0x30]
  41085e:	test   rbx,rbx
  410861:	jne    0x41086d
  410863:	jmp    0x410890
  410865:	mov    rbx,QWORD PTR [rbx]
  410868:	test   rbx,rbx
  41086b:	je     0x410890
  41086d:	cmp    DWORD PTR [rbx+0x8],0x1
  410871:	ja     0x410865
  410873:	mov    eax,DWORD PTR [rbx+0x24]
  410876:	test   eax,eax
  410878:	jne    0x410865
  41087a:	mov    rcx,rbx
  41087d:	call   0x40f760
  410882:	mov    rbx,QWORD PTR [rbx]
  410885:	test   rbx,rbx
  410888:	jne    0x41086d
  41088a:	nop    WORD PTR [rax+rax*1+0x0]
  410890:	add    rsp,0x20
  410894:	pop    rbx
  410895:	ret    
  410896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108a0:	push   rbp
  4108a1:	push   rdi
  4108a2:	push   rsi
  4108a3:	push   rbx
  4108a4:	sub    rsp,0x58
  4108a8:	mov    rsi,rcx
  4108ab:	lea    rbp,[rsp+0x30]
  4108b0:	lea    rdi,[rsp+0x40]
  4108b5:	call   0x403fd0
  4108ba:	mov    rbx,QWORD PTR [rax+0x28]
  4108be:	test   rbx,rbx
  4108c1:	jne    0x4108cd
  4108c3:	jmp    0x410940
  4108c5:	mov    rbx,QWORD PTR [rbx]
  4108c8:	test   rbx,rbx
  4108cb:	je     0x410940
  4108cd:	cmp    DWORD PTR [rbx+0x8],0x5
  4108d1:	jne    0x4108c5
  4108d3:	mov    rax,QWORD PTR [rbx+0x18]
  4108d7:	mov    rdx,rbp
  4108da:	mov    rcx,rdi
  4108dd:	mov    QWORD PTR [rsp+0x40],rax
  4108e2:	mov    eax,DWORD PTR [rbx+0x20]
  4108e5:	mov    DWORD PTR [rsp+0x48],eax
  4108e9:	mov    rax,QWORD PTR [rsi]
  4108ec:	mov    QWORD PTR [rsp+0x30],rax
  4108f1:	mov    eax,DWORD PTR [rsi+0x8]
  4108f4:	mov    DWORD PTR [rsp+0x38],eax
  4108f8:	call   0x41ad50
  4108fd:	test   eax,eax
  4108ff:	je     0x4108c5
  410901:	mov    rax,QWORD PTR [rbx+0x10]
  410905:	mov    eax,DWORD PTR [rax+0x24]
  410908:	test   eax,eax
  41090a:	jg     0x4108c5
  41090c:	lea    rax,[rip+0x26317]        # 0x436c2a
  410913:	lea    r9,[rip+0x26706]        # 0x437020
  41091a:	lea    r8,[rip+0x25d8a]        # 0x4366ab
  410921:	lea    rcx,[rip+0x25d9e]        # 0x4366c6
  410928:	mov    edx,0x6b3
  41092d:	mov    QWORD PTR [rsp+0x20],rax
  410932:	call   0x41d170
  410937:	nop
  410938:	nop    DWORD PTR [rax+rax*1+0x0]
  410940:	add    rsp,0x58
  410944:	pop    rbx
  410945:	pop    rsi
  410946:	pop    rdi
  410947:	pop    rbp
  410948:	ret    
  410949:	nop    DWORD PTR [rax+0x0]
  410950:	push   rbp
  410951:	push   rdi
  410952:	push   rsi
  410953:	push   rbx
  410954:	sub    rsp,0x28
  410958:	mov    rdi,rcx
  41095b:	call   0x404000
  410960:	mov    rbp,rax
  410963:	mov    rbx,QWORD PTR [rax+0x28]
  410967:	lea    rsi,[rax+0x28]
  41096b:	jmp    0x410976
  41096d:	nop    DWORD PTR [rax]
  410970:	mov    rsi,rbx
  410973:	mov    rbx,QWORD PTR [rbx]
  410976:	test   rbx,rbx
  410979:	je     0x4109c3
  41097b:	mov    rdx,QWORD PTR [rbx+0x10]
  41097f:	cmp    DWORD PTR [rdx+0x8],0x1
  410983:	ja     0x410970
  410985:	cmp    QWORD PTR [rdx+0x10],rdi
  410989:	jne    0x410970
  41098b:	mov    eax,DWORD PTR [rdx+0x24]
  41098e:	test   eax,eax
  410990:	je     0x4109cc
  410992:	cmp    DWORD PTR [rbx+0x8],0x6
  410996:	jne    0x410970
  410998:	mov    rax,QWORD PTR [rbx+0x18]
  41099c:	test   rax,rax
  41099f:	je     0x410970
  4109a1:	mov    rcx,rdi
  4109a4:	call   rax
  4109a6:	test   eax,eax
  4109a8:	je     0x410970
  4109aa:	mov    rax,QWORD PTR [rbx]
  4109ad:	mov    rdx,rbx
  4109b0:	mov    rcx,rbp
  4109b3:	mov    QWORD PTR [rsi],rax
  4109b6:	call   0x40edf0
  4109bb:	mov    rbx,QWORD PTR [rsi]
  4109be:	test   rbx,rbx
  4109c1:	jne    0x41097b
  4109c3:	add    rsp,0x28
  4109c7:	pop    rbx
  4109c8:	pop    rsi
  4109c9:	pop    rdi
  4109ca:	pop    rbp
  4109cb:	ret    
  4109cc:	lea    rcx,[rip+0x262ab]        # 0x436c7e
  4109d3:	add    rsp,0x28
  4109d7:	pop    rbx
  4109d8:	pop    rsi
  4109d9:	pop    rdi
  4109da:	pop    rbp
  4109db:	jmp    0x41d110
  4109e0:	push   rbx
  4109e1:	sub    rsp,0x20
  4109e5:	mov    rbx,rcx
  4109e8:	call   0x404000
  4109ed:	mov    rax,QWORD PTR [rax+0x30]
  4109f1:	test   rax,rax
  4109f4:	jne    0x410a08
  4109f6:	jmp    0x410a1f
  4109f8:	nop    DWORD PTR [rax+rax*1+0x0]
  410a00:	mov    rax,QWORD PTR [rax]
  410a03:	test   rax,rax
  410a06:	je     0x410a19
  410a08:	cmp    DWORD PTR [rax+0x8],0x1
  410a0c:	ja     0x410a00
  410a0e:	cmp    QWORD PTR [rax+0x10],rbx
  410a12:	jne    0x410a00
  410a14:	mov    eax,0x1
  410a19:	add    rsp,0x20
  410a1d:	pop    rbx
  410a1e:	ret    
  410a1f:	xor    eax,eax
  410a21:	jmp    0x410a19
  410a23:	nop    DWORD PTR [rax]
  410a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a30:	push   rbx
  410a31:	sub    rsp,0x20
  410a35:	mov    rbx,rcx
  410a38:	call   0x404000
  410a3d:	mov    rax,QWORD PTR [rax+0x30]
  410a41:	test   rax,rax
  410a44:	jne    0x410a58
  410a46:	jmp    0x410a76
  410a48:	nop    DWORD PTR [rax+rax*1+0x0]
  410a50:	mov    rax,QWORD PTR [rax]
  410a53:	test   rax,rax
  410a56:	je     0x410a70
  410a58:	cmp    DWORD PTR [rax+0x8],0x1
  410a5c:	ja     0x410a50
  410a5e:	cmp    QWORD PTR [rax+0x10],rbx
  410a62:	jne    0x410a50
  410a64:	mov    edx,DWORD PTR [rax+0x24]
  410a67:	test   edx,edx
  410a69:	je     0x410a50
  410a6b:	mov    eax,0x1
  410a70:	add    rsp,0x20
  410a74:	pop    rbx
  410a75:	ret    
  410a76:	xor    eax,eax
  410a78:	jmp    0x410a70
  410a7a:	nop    WORD PTR [rax+rax*1+0x0]
  410a80:	push   rbx
  410a81:	sub    rsp,0x20
  410a85:	mov    rbx,rcx
  410a88:	call   0x404000
  410a8d:	mov    rax,QWORD PTR [rax+0x30]
  410a91:	test   rax,rax
  410a94:	jne    0x410aa8
  410a96:	jmp    0x410ac7
  410a98:	nop    DWORD PTR [rax+rax*1+0x0]
  410aa0:	mov    rax,QWORD PTR [rax]
  410aa3:	test   rax,rax
  410aa6:	je     0x410ac1
  410aa8:	mov    ecx,DWORD PTR [rax+0x8]
  410aab:	test   ecx,ecx
  410aad:	jne    0x410aa0
  410aaf:	cmp    QWORD PTR [rax+0x10],rbx
  410ab3:	jne    0x410aa0
  410ab5:	mov    edx,DWORD PTR [rax+0x24]
  410ab8:	test   edx,edx
  410aba:	je     0x410aa0
  410abc:	mov    eax,0x1
  410ac1:	add    rsp,0x20
  410ac5:	pop    rbx
  410ac6:	ret    
  410ac7:	xor    eax,eax
  410ac9:	jmp    0x410ac1
  410acb:	nop    DWORD PTR [rax+rax*1+0x0]
  410ad0:	push   rbx
  410ad1:	sub    rsp,0x20
  410ad5:	mov    rbx,rcx
  410ad8:	call   0x404000
  410add:	mov    rax,QWORD PTR [rax+0x30]
  410ae1:	test   rax,rax
  410ae4:	jne    0x410af8
  410ae6:	jmp    0x410b16
  410ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  410af0:	mov    rax,QWORD PTR [rax]
  410af3:	test   rax,rax
  410af6:	je     0x410b10
  410af8:	cmp    DWORD PTR [rax+0x8],0x1
  410afc:	jne    0x410af0
  410afe:	cmp    QWORD PTR [rax+0x10],rbx
  410b02:	jne    0x410af0
  410b04:	mov    edx,DWORD PTR [rax+0x24]
  410b07:	test   edx,edx
  410b09:	je     0x410af0
  410b0b:	mov    eax,0x1
  410b10:	add    rsp,0x20
  410b14:	pop    rbx
  410b15:	ret    
  410b16:	xor    eax,eax
  410b18:	jmp    0x410b10
  410b1a:	nop    WORD PTR [rax+rax*1+0x0]
  410b20:	push   rbx
  410b21:	sub    rsp,0x20
  410b25:	mov    rbx,rcx
  410b28:	call   0x404000
  410b2d:	mov    rax,QWORD PTR [rax+0x28]
  410b31:	test   rax,rax
  410b34:	jne    0x410b48
  410b36:	jmp    0x410b6a
  410b38:	nop    DWORD PTR [rax+rax*1+0x0]
  410b40:	mov    rax,QWORD PTR [rax]
  410b43:	test   rax,rax
  410b46:	je     0x410b64
  410b48:	cmp    DWORD PTR [rax+0x8],0x5
  410b4c:	jne    0x410b40
  410b4e:	mov    rdx,QWORD PTR [rax+0x10]
  410b52:	cmp    QWORD PTR [rdx+0x10],rbx
  410b56:	jne    0x410b40
  410b58:	mov    edx,DWORD PTR [rdx+0x24]
  410b5b:	test   edx,edx
  410b5d:	je     0x410b40
  410b5f:	mov    eax,0x1
  410b64:	add    rsp,0x20
  410b68:	pop    rbx
  410b69:	ret    
  410b6a:	xor    eax,eax
  410b6c:	jmp    0x410b64
  410b6e:	xchg   ax,ax
  410b70:	push   rbx
  410b71:	sub    rsp,0x20
  410b75:	call   0x404000
  410b7a:	mov    rbx,QWORD PTR [rax+0x28]
  410b7e:	test   rbx,rbx
  410b81:	je     0x410ba2
  410b83:	mov    rcx,QWORD PTR [rbx+0x10]
  410b87:	mov    edx,DWORD PTR [rcx+0x8]
  410b8a:	test   edx,edx
  410b8c:	jne    0x410b9a
  410b8e:	mov    eax,DWORD PTR [rcx+0x24]
  410b91:	test   eax,eax
  410b93:	jle    0x410b9a
  410b95:	call   0x40f2e0
  410b9a:	mov    rbx,QWORD PTR [rbx]
  410b9d:	test   rbx,rbx
  410ba0:	jne    0x410b83
  410ba2:	add    rsp,0x20
  410ba6:	pop    rbx
  410ba7:	jmp    0x40f7d0
  410bac:	nop    DWORD PTR [rax+0x0]
  410bb0:	push   r13
  410bb2:	push   r12
  410bb4:	push   rbp
  410bb5:	push   rdi
  410bb6:	push   rsi
  410bb7:	push   rbx
  410bb8:	sub    rsp,0x48
  410bbc:	movsx  esi,cl
  410bbf:	mov    ebx,ecx
  410bc1:	mov    rbp,rdx
  410bc4:	mov    ecx,esi
  410bc6:	mov    rdx,r9
  410bc9:	mov    r12d,r8d
  410bcc:	mov    rdi,r9
  410bcf:	call   0x40ed60
  410bd4:	test   eax,eax
  410bd6:	je     0x410cc0
  410bdc:	cmp    bl,0x30
  410bdf:	je     0x410c10
  410be1:	lea    r13d,[rbx-0x30]
  410be5:	cmp    r13b,0x1
  410be9:	je     0x410c1d
  410beb:	mov    r8d,r12d
  410bee:	mov    rdx,rbp
  410bf1:	mov    ecx,esi
  410bf3:	call   0x40f440
  410bf8:	test   rax,rax
  410bfb:	je     0x410cdd
  410c01:	add    rsp,0x48
  410c05:	pop    rbx
  410c06:	pop    rsi
  410c07:	pop    rdi
  410c08:	pop    rbp
  410c09:	pop    r12
  410c0b:	pop    r13
  410c0d:	ret    
  410c0e:	xchg   ax,ax
  410c10:	call   0x40de20
  410c15:	test   eax,eax
  410c17:	jne    0x410cd0
  410c1d:	mov    r8d,0xffffffff
  410c23:	mov    rdx,rbp
  410c26:	mov    ecx,esi
  410c28:	call   0x40f440
  410c2d:	test   rax,rax
  410c30:	je     0x410c4b
  410c32:	mov    rdx,QWORD PTR [rax+0x10]
  410c36:	cmp    r12d,DWORD PTR [rdx+0x18]
  410c3a:	je     0x410c91
  410c3c:	mov    DWORD PTR [rdx+0x24],0xffffffff
  410c43:	mov    rcx,rax
  410c46:	call   0x4100b0
  410c4b:	mov    ecx,esi
  410c4d:	call   0x40f930
  410c52:	lea    ecx,[rsi-0x30]
  410c55:	mov    QWORD PTR [rsp+0x28],rdi
  410c5a:	mov    QWORD PTR [rsp+0x20],0x0
  410c63:	mov    r9d,r12d
  410c66:	mov    r8,rbp
  410c69:	mov    edx,eax
  410c6b:	call   0x40efc0
  410c70:	cmp    bl,0x30
  410c73:	jne    0x410c01
  410c75:	mov    QWORD PTR [rsp+0x38],rax
  410c7a:	call   0x40ddc0
  410c7f:	mov    rax,QWORD PTR [rsp+0x38]
  410c84:	add    rsp,0x48
  410c88:	pop    rbx
  410c89:	pop    rsi
  410c8a:	pop    rdi
  410c8b:	pop    rbp
  410c8c:	pop    r12
  410c8e:	pop    r13
  410c90:	ret    
  410c91:	cmp    bl,0x30
  410c94:	jne    0x410c01
  410c9a:	call   0x410b70
  410c9f:	mov    r8d,0xffffffff
  410ca5:	mov    rdx,rbp
  410ca8:	mov    ecx,esi
  410caa:	call   0x40f440
  410caf:	test   rax,rax
  410cb2:	jne    0x410c75
  410cb4:	jmp    0x410c4b
  410cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410cc0:	xor    eax,eax
  410cc2:	add    rsp,0x48
  410cc6:	pop    rbx
  410cc7:	pop    rsi
  410cc8:	pop    rdi
  410cc9:	pop    rbp
  410cca:	pop    r12
  410ccc:	pop    r13
  410cce:	ret    
  410ccf:	nop
  410cd0:	mov    DWORD PTR [rdi],0xffffffff
  410cd6:	xor    eax,eax
  410cd8:	jmp    0x410c01
  410cdd:	mov    ecx,esi
  410cdf:	call   0x40f930
  410ce4:	cmp    r13b,0x4
  410ce8:	jbe    0x410c52
  410cee:	call   0x42b520
  410cf3:	nop
  410cf4:	xchg   ax,ax
  410cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d00:	push   r15
  410d02:	push   r14
  410d04:	push   r13
  410d06:	push   r12
  410d08:	push   rbp
  410d09:	push   rdi
  410d0a:	push   rsi
  410d0b:	push   rbx
  410d0c:	sub    rsp,0x58
  410d10:	movsxd r14,r8d
  410d13:	mov    rsi,rcx
  410d16:	mov    r12,rdx
  410d19:	call   0x404000
  410d1e:	mov    rbx,QWORD PTR [rax+0x38]
  410d22:	mov    r15,QWORD PTR [rax+0x30]
  410d26:	lea    r13,[r14+rsi*1]
  410d2a:	lea    rdi,[r12+r14*1]
  410d2e:	test   rbx,rbx
  410d31:	jne    0x410d3d
  410d33:	jmp    0x410db4
  410d35:	mov    rbx,QWORD PTR [rbx]
  410d38:	test   rbx,rbx
  410d3b:	je     0x410db4
  410d3d:	movsxd rdx,DWORD PTR [rbx+0x1c]
  410d41:	mov    r10,QWORD PTR [rbx+0x10]
  410d45:	lea    rax,[rbx+rdx*1+0x20]
  410d4a:	cmp    rdi,rax
  410d4d:	jbe    0x410d5d
  410d4f:	lea    rax,[rbx+rdx*2+0x20]
  410d54:	cmp    r12,rax
  410d57:	jb     0x410eb4
  410d5d:	cmp    r13,r10
  410d60:	lea    rax,[rdx+r10*1]
  410d64:	jbe    0x410d35
  410d66:	cmp    rsi,rax
  410d69:	jae    0x410d35
  410d6b:	mov    r8d,DWORD PTR [rbx+0x18]
  410d6f:	test   r8d,r8d
  410d72:	je     0x410d35
  410d74:	cmp    rsi,r10
  410d77:	mov    r11,r10
  410d7a:	cmovae r11,rsi
  410d7e:	mov    ecx,r11d
  410d81:	sub    ecx,esi
  410d83:	movsxd rcx,ecx
  410d86:	add    rcx,r12
  410d89:	cmp    r13,rax
  410d8c:	cmovbe rax,r13
  410d90:	mov    r8,rax
  410d93:	sub    r8d,r11d
  410d96:	sub    r11d,r10d
  410d99:	movsxd r11,r11d
  410d9c:	movsxd r8,r8d
  410d9f:	lea    rdx,[rdx+r11*1+0x20]
  410da4:	add    rdx,rbx
  410da7:	call   0x42a668
  410dac:	mov    rbx,QWORD PTR [rbx]
  410daf:	test   rbx,rbx
  410db2:	jne    0x410d3d
  410db4:	test   r15,r15
  410db7:	je     0x410e6a
  410dbd:	mov    rdi,QWORD PTR [rip+0x3589c]        # 0x446660
  410dc4:	lea    rbp,[rsp+0x4c]
  410dc9:	mov    DWORD PTR [rsp+0x3c],0x0
  410dd1:	add    r14,r12
  410dd4:	mov    rax,QWORD PTR [rdi]
  410dd7:	mov    ecx,DWORD PTR [r15+0x18]
  410ddb:	mov    rdx,rbp
  410dde:	mov    rbx,QWORD PTR [r15+0x10]
  410de2:	mov    DWORD PTR [rsp+0x4c],0x0
  410dea:	call   QWORD PTR [rax+0x240]
  410df0:	mov    ecx,DWORD PTR [r15+0x8]
  410df4:	movsxd rax,DWORD PTR [rsp+0x4c]
  410df9:	test   ecx,ecx
  410dfb:	jne    0x410e50
  410dfd:	lea    rdx,[r15+0x1c]
  410e01:	cmp    rdx,r14
  410e04:	jae    0x410e13
  410e06:	lea    rdx,[r15+0x24]
  410e0a:	cmp    r12,rdx
  410e0d:	jb     0x410edf
  410e13:	add    rbx,rax
  410e16:	cmp    rsi,rbx
  410e19:	jae    0x410e50
  410e1b:	mov    rdx,QWORD PTR [r15+0x10]
  410e1f:	cmp    r13,rdx
  410e22:	jbe    0x410e50
  410e24:	mov    QWORD PTR [rsp+0x30],rdx
  410e29:	mov    edx,DWORD PTR [r15+0x24]
  410e2d:	test   edx,edx
  410e2f:	jle    0x410e50
  410e31:	mov    rcx,r15
  410e34:	call   0x40f2e0
  410e39:	test   eax,eax
  410e3b:	mov    rdx,QWORD PTR [rsp+0x30]
  410e40:	jne    0x410e80
  410e42:	mov    DWORD PTR [rsp+0x3c],0x1
  410e4a:	nop    WORD PTR [rax+rax*1+0x0]
  410e50:	mov    r15,QWORD PTR [r15]
  410e53:	test   r15,r15
  410e56:	jne    0x410dd4
  410e5c:	mov    eax,DWORD PTR [rsp+0x3c]
  410e60:	test   eax,eax
  410e62:	je     0x410e6a
  410e64:	call   0x40f7d0
  410e69:	nop
  410e6a:	add    rsp,0x58
  410e6e:	pop    rbx
  410e6f:	pop    rsi
  410e70:	pop    rdi
  410e71:	pop    rbp
  410e72:	pop    r12
  410e74:	pop    r13
  410e76:	pop    r14
  410e78:	pop    r15
  410e7a:	ret    
  410e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  410e80:	cmp    rsi,rdx
  410e83:	mov    rax,rdx
  410e86:	cmovae rax,rsi
  410e8a:	mov    ecx,eax
  410e8c:	sub    ecx,esi
  410e8e:	movsxd rcx,ecx
  410e91:	add    rcx,r12
  410e94:	cmp    r13,rbx
  410e97:	cmovbe rbx,r13
  410e9b:	mov    r8d,ebx
  410e9e:	sub    r8d,eax
  410ea1:	sub    eax,edx
  410ea3:	cdqe   
  410ea5:	movsxd r8,r8d
  410ea8:	lea    rdx,[r15+rax*1+0x1c]
  410ead:	call   0x42a668
  410eb2:	jmp    0x410e50
  410eb4:	lea    rax,[rip+0x25ddd]        # 0x436c98
  410ebb:	lea    r9,[rip+0x2609e]        # 0x436f60
  410ec2:	lea    r8,[rip+0x257e2]        # 0x4366ab
  410ec9:	lea    rcx,[rip+0x257f6]        # 0x4366c6
  410ed0:	mov    edx,0x790
  410ed5:	mov    QWORD PTR [rsp+0x20],rax
  410eda:	call   0x41d170
  410edf:	lea    rax,[rip+0x25e22]        # 0x436d08
  410ee6:	lea    r9,[rip+0x26073]        # 0x436f60
  410eed:	lea    r8,[rip+0x257b7]        # 0x4366ab
  410ef4:	lea    rcx,[rip+0x257cb]        # 0x4366c6
  410efb:	mov    edx,0x7b3
  410f00:	mov    QWORD PTR [rsp+0x20],rax
  410f05:	call   0x41d170
  410f0a:	nop
  410f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f10:	push   r15
  410f12:	push   r14
  410f14:	push   r13
  410f16:	push   r12
  410f18:	push   rbp
  410f19:	push   rdi
  410f1a:	push   rsi
  410f1b:	push   rbx
  410f1c:	sub    rsp,0x68
  410f20:	mov    r15d,r9d
  410f23:	mov    rsi,rcx
  410f26:	mov    rbp,r8
  410f29:	mov    QWORD PTR [rsp+0xb8],rdx
  410f31:	call   0x404000
  410f36:	mov    rbx,QWORD PTR [rax+0x38]
  410f3a:	mov    r14,QWORD PTR [rax+0x30]
  410f3e:	movsxd rax,r15d
  410f41:	mov    r11,rax
  410f44:	add    r11,QWORD PTR [rsp+0xb8]
  410f4c:	mov    QWORD PTR [rsp+0x48],rax
  410f51:	lea    rdi,[rax+rsi*1]
  410f55:	lea    r9,[rbp+rax*1+0x0]
  410f5a:	test   rbx,rbx
  410f5d:	jne    0x410f70
  410f5f:	jmp    0x411040
  410f64:	mov    rbx,QWORD PTR [rbx]
  410f67:	test   rbx,rbx
  410f6a:	je     0x411040
  410f70:	movsxd rax,DWORD PTR [rbx+0x1c]
  410f74:	mov    rdx,QWORD PTR [rbx+0x10]
  410f78:	lea    rcx,[rbx+rax*1+0x20]
  410f7d:	cmp    rcx,r9
  410f80:	jae    0x410f90
  410f82:	lea    r8,[rbx+rax*2+0x20]
  410f87:	cmp    rbp,r8
  410f8a:	jb     0x4111b1
  410f90:	lea    r8,[rbx+0x20]
  410f94:	cmp    r8,r11
  410f97:	jae    0x410fa7
  410f99:	cmp    rcx,QWORD PTR [rsp+0xb8]
  410fa1:	ja     0x411186
  410fa7:	cmp    rdi,rdx
  410faa:	lea    r12,[rax+rdx*1]
  410fae:	jbe    0x410f64
  410fb0:	cmp    rsi,r12
  410fb3:	jae    0x410f64
  410fb5:	cmp    rsi,rdx
  410fb8:	mov    r13,rdx
  410fbb:	mov    QWORD PTR [rsp+0x38],r11
  410fc0:	cmovae r13,rsi
  410fc4:	cmp    rdi,r12
  410fc7:	mov    QWORD PTR [rsp+0x30],r9
  410fcc:	cmovbe r12,rdi
  410fd0:	mov    r15d,r13d
  410fd3:	sub    r12d,r13d
  410fd6:	sub    r13d,edx
  410fd9:	sub    r15d,esi
  410fdc:	movsxd r13,r13d
  410fdf:	movsxd r15,r15d
  410fe2:	movsxd r12,r12d
  410fe5:	lea    rcx,[rax+r13*1+0x20]
  410fea:	lea    rdx,[rbp+r15*1+0x0]
  410fef:	mov    r8,r12
  410ff2:	add    rcx,rbx
  410ff5:	call   0x42a668
  410ffa:	mov    r8d,DWORD PTR [rbx+0x18]
  410ffe:	mov    r9,QWORD PTR [rsp+0x30]
  411003:	mov    r11,QWORD PTR [rsp+0x38]
  411008:	test   r8d,r8d
  41100b:	je     0x410f64
  411011:	mov    rcx,r15
  411014:	add    rcx,QWORD PTR [rsp+0xb8]
  41101c:	lea    rdx,[rbx+r13*1+0x20]
  411021:	mov    r8,r12
  411024:	call   0x42a668
  411029:	mov    rbx,QWORD PTR [rbx]
  41102c:	mov    r11,QWORD PTR [rsp+0x38]
  411031:	mov    r9,QWORD PTR [rsp+0x30]
  411036:	test   rbx,rbx
  411039:	jne    0x410f70
  41103f:	nop
  411040:	test   r14,r14
  411043:	je     0x41113a
  411049:	mov    r15,QWORD PTR [rsp+0x48]
  41104e:	mov    r12,QWORD PTR [rip+0x3560b]        # 0x446660
  411055:	lea    r13,[rsp+0x5c]
  41105a:	mov    DWORD PTR [rsp+0x44],0x0
  411062:	add    r15,rbp
  411065:	mov    rax,QWORD PTR [r12]
  411069:	mov    ecx,DWORD PTR [r14+0x18]
  41106d:	mov    rdx,r13
  411070:	mov    rbx,QWORD PTR [r14+0x10]
  411074:	mov    DWORD PTR [rsp+0x5c],0x0
  41107c:	call   QWORD PTR [rax+0x240]
  411082:	mov    ecx,DWORD PTR [r14+0x8]
  411086:	movsxd rax,DWORD PTR [rsp+0x5c]
  41108b:	test   ecx,ecx
  41108d:	jne    0x411120
  411093:	lea    rdx,[r14+0x1c]
  411097:	cmp    rdx,r15
  41109a:	jae    0x4110a9
  41109c:	lea    rdx,[r14+0x24]
  4110a0:	cmp    rbp,rdx
  4110a3:	jb     0x4111dc
  4110a9:	add    rbx,rax
  4110ac:	cmp    rsi,rbx
  4110af:	jae    0x411120
  4110b1:	mov    rax,QWORD PTR [r14+0x10]
  4110b5:	cmp    rdi,rax
  4110b8:	jbe    0x411120
  4110ba:	cmp    rsi,rax
  4110bd:	mov    rdx,rax
  4110c0:	cmovae rdx,rsi
  4110c4:	cmp    rdi,rbx
  4110c7:	cmovbe rbx,rdi
  4110cb:	sub    ebx,edx
  4110cd:	movsxd rcx,ebx
  4110d0:	mov    r8,rcx
  4110d3:	mov    QWORD PTR [rsp+0x30],rcx
  4110d8:	mov    ecx,edx
  4110da:	sub    ecx,esi
  4110dc:	sub    edx,eax
  4110de:	movsxd rcx,ecx
  4110e1:	movsxd rbx,edx
  4110e4:	mov    r10,rcx
  4110e7:	mov    QWORD PTR [rsp+0x38],rcx
  4110ec:	lea    rcx,[r14+rbx*1+0x1c]
  4110f1:	lea    rdx,[rbp+r10*1+0x0]
  4110f6:	call   0x42a668
  4110fb:	mov    edx,DWORD PTR [r14+0x24]
  4110ff:	test   edx,edx
  411101:	jle    0x411120
  411103:	mov    rcx,r14
  411106:	call   0x40f2e0
  41110b:	test   eax,eax
  41110d:	jne    0x411150
  41110f:	mov    DWORD PTR [rsp+0x44],0x1
  411117:	nop    WORD PTR [rax+rax*1+0x0]
  411120:	mov    r14,QWORD PTR [r14]
  411123:	test   r14,r14
  411126:	jne    0x411065
  41112c:	mov    eax,DWORD PTR [rsp+0x44]
  411130:	test   eax,eax
  411132:	je     0x41113a
  411134:	call   0x40f7d0
  411139:	nop
  41113a:	add    rsp,0x68
  41113e:	pop    rbx
  41113f:	pop    rsi
  411140:	pop    rdi
  411141:	pop    rbp
  411142:	pop    r12
  411144:	pop    r13
  411146:	pop    r14
  411148:	pop    r15
  41114a:	ret    
  41114b:	nop    DWORD PTR [rax+rax*1+0x0]
  411150:	mov    rax,QWORD PTR [r12]
  411154:	mov    ecx,DWORD PTR [r14+0x18]
  411158:	mov    rdx,r13
  41115b:	mov    DWORD PTR [rsp+0x5c],0x0
  411163:	call   QWORD PTR [rax+0x240]
  411169:	mov    rcx,QWORD PTR [rsp+0x38]
  41116e:	add    rcx,QWORD PTR [rsp+0xb8]
  411176:	lea    rdx,[rax+rbx*1]
  41117a:	mov    r8,QWORD PTR [rsp+0x30]
  41117f:	call   0x42a668
  411184:	jmp    0x411120
  411186:	lea    rax,[rip+0x25c43]        # 0x436dd0
  41118d:	lea    r9,[rip+0x25d6c]        # 0x436f00
  411194:	lea    r8,[rip+0x25510]        # 0x4366ab
  41119b:	lea    rcx,[rip+0x25524]        # 0x4366c6
  4111a2:	mov    edx,0x7e8
  4111a7:	mov    QWORD PTR [rsp+0x20],rax
  4111ac:	call   0x41d170
  4111b1:	lea    rax,[rip+0x25ba0]        # 0x436d58
  4111b8:	lea    r9,[rip+0x25d41]        # 0x436f00
  4111bf:	lea    r8,[rip+0x254e5]        # 0x4366ab
  4111c6:	lea    rcx,[rip+0x254f9]        # 0x4366c6
  4111cd:	mov    edx,0x7e6
  4111d2:	mov    QWORD PTR [rsp+0x20],rax
  4111d7:	call   0x41d170
  4111dc:	lea    rax,[rip+0x25c55]        # 0x436e38
  4111e3:	lea    r9,[rip+0x25d16]        # 0x436f00
  4111ea:	lea    r8,[rip+0x254ba]        # 0x4366ab
  4111f1:	lea    rcx,[rip+0x254ce]        # 0x4366c6
  4111f8:	mov    edx,0x80c
  4111fd:	mov    QWORD PTR [rsp+0x20],rax
  411202:	call   0x41d170
  411207:	nop
  411208:	nop    DWORD PTR [rax+rax*1+0x0]
  411210:	push   rbx
  411211:	sub    rsp,0x20
  411215:	call   0x404000
  41121a:	mov    rdx,QWORD PTR [rax+0x28]
  41121e:	mov    rbx,rax
  411221:	test   rdx,rdx
  411224:	je     0x411241
  411226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411230:	mov    rcx,rbx
  411233:	call   0x40ef00
  411238:	mov    rdx,QWORD PTR [rbx+0x28]
  41123c:	test   rdx,rdx
  41123f:	jne    0x411230
  411241:	add    rsp,0x20
  411245:	pop    rbx
  411246:	ret    
  411247:	nop    WORD PTR [rax+rax*1+0x0]
  411250:	mov    rax,QWORD PTR [rcx+0x30]
  411254:	test   rax,rax
  411257:	je     0x41126f
  411259:	nop    DWORD PTR [rax+0x0]
  411260:	mov    DWORD PTR [rax+0x24],0x0
  411267:	mov    rax,QWORD PTR [rax]
  41126a:	test   rax,rax
  41126d:	jne    0x411260
  41126f:	repz ret 
  411271:	nop    DWORD PTR [rax+rax*1+0x0]
  411276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411280:	push   rbx
  411281:	sub    rsp,0x20
  411285:	mov    rax,QWORD PTR [rcx+0x30]
  411289:	mov    rbx,rcx
  41128c:	test   rax,rax
  41128f:	je     0x4112b8
  411291:	mov    DWORD PTR [rax+0x24],0x0
  411298:	mov    rax,QWORD PTR [rax]
  41129b:	test   rax,rax
  41129e:	jne    0x411291
  4112a0:	mov    rdx,QWORD PTR [rbx+0x28]
  4112a4:	test   rdx,rdx
  4112a7:	je     0x4112c1
  4112a9:	nop    DWORD PTR [rax+0x0]
  4112b0:	mov    rcx,rbx
  4112b3:	call   0x40ef00
  4112b8:	mov    rdx,QWORD PTR [rbx+0x28]
  4112bc:	test   rdx,rdx
  4112bf:	jne    0x4112b0
  4112c1:	add    rsp,0x20
  4112c5:	pop    rbx
  4112c6:	ret    
  4112c7:	nop    WORD PTR [rax+rax*1+0x0]
  4112d0:	push   r15
  4112d2:	push   r14
  4112d4:	push   r13
  4112d6:	push   r12
  4112d8:	push   rbp
  4112d9:	push   rdi
  4112da:	push   rsi
  4112db:	push   rbx
  4112dc:	sub    rsp,0x48
  4112e0:	xor    r12d,r12d
  4112e3:	mov    rbx,rdx
  4112e6:	mov    rbp,rcx
  4112e9:	call   0x403fd0
  4112ee:	mov    rcx,rbx
  4112f1:	mov    QWORD PTR [rsp+0x38],rax
  4112f6:	call   0x403fd0
  4112fb:	mov    rdi,QWORD PTR [rax+0x28]
  4112ff:	mov    QWORD PTR [rsp+0x30],0x0
  411308:	test   rdi,rdi
  41130b:	jne    0x411382
  41130d:	jmp    0x4114c0
  411312:	cmp    eax,0x6
  411315:	je     0x4114e3
  41131b:	cmp    eax,0x5
  41131e:	jne    0x411502
  411324:	mov    edx,0x28
  411329:	mov    ecx,0x1
  41132e:	call   0x41a760
  411333:	mov    rsi,rax
  411336:	mov    DWORD PTR [rax+0x18],r15d
  41133a:	mov    DWORD PTR [rax+0x1c],r14d
  41133e:	mov    DWORD PTR [rsi+0x20],r13d
  411342:	cmp    QWORD PTR [rsp+0x30],0x0
  411348:	mov    eax,DWORD PTR [rdi+0x8]
  41134b:	mov    QWORD PTR [rsi+0x10],rbx
  41134f:	mov    DWORD PTR [rsi+0x8],eax
  411352:	je     0x4114d1
  411358:	mov    rax,QWORD PTR [rsp+0x30]
  41135d:	mov    QWORD PTR [rax],rsi
  411360:	test   r12,r12
  411363:	je     0x4114a0
  411369:	mov    rdi,QWORD PTR [rdi]
  41136c:	mov    QWORD PTR [r12],rbx
  411370:	mov    r12,QWORD PTR [rsi+0x10]
  411374:	test   rdi,rdi
  411377:	je     0x4114c0
  41137d:	mov    QWORD PTR [rsp+0x30],rsi
  411382:	mov    eax,DWORD PTR [rbp+0x8]
  411385:	mov    edx,0x28
  41138a:	mov    ecx,0x1
  41138f:	mov    r15d,DWORD PTR [rbp+0x0]
  411393:	mov    r14d,DWORD PTR [rbp+0x4]
  411397:	mov    r13d,eax
  41139a:	call   0x41a760
  41139f:	mov    rbx,rax
  4113a2:	mov    rax,QWORD PTR [rdi+0x10]
  4113a6:	mov    edx,DWORD PTR [rax+0x8]
  4113a9:	mov    DWORD PTR [rbx+0x8],edx
  4113ac:	mov    edx,DWORD PTR [rax+0xc]
  4113af:	mov    DWORD PTR [rbx+0xc],edx
  4113b2:	mov    rdx,QWORD PTR [rax+0x10]
  4113b6:	mov    QWORD PTR [rbx+0x10],rdx
  4113ba:	mov    edx,DWORD PTR [rax+0x18]
  4113bd:	mov    DWORD PTR [rbx+0x18],edx
  4113c0:	mov    rdx,QWORD PTR [rax+0x1c]
  4113c4:	mov    QWORD PTR [rbx+0x1c],rdx
  4113c8:	mov    eax,DWORD PTR [rax+0x24]
  4113cb:	mov    DWORD PTR [rbx+0x24],eax
  4113ce:	mov    eax,DWORD PTR [rdi+0x8]
  4113d1:	cmp    eax,0x4
  4113d4:	ja     0x411312
  4113da:	mov    edx,0x28
  4113df:	mov    ecx,0x1
  4113e4:	xor    r13d,r13d
  4113e7:	call   0x41a760
  4113ec:	mov    r14,QWORD PTR [rdi+0x18]
  4113f0:	mov    rsi,rax
  4113f3:	test   r14,r14
  4113f6:	jne    0x411410
  4113f8:	jmp    0x411442
  4113fa:	nop    WORD PTR [rax+rax*1+0x0]
  411400:	mov    QWORD PTR [r13+0x8],r15
  411404:	mov    r14,QWORD PTR [r14+0x8]
  411408:	mov    r13,r15
  41140b:	test   r14,r14
  41140e:	je     0x411442
  411410:	mov    edx,0x10
  411415:	mov    ecx,0x1
  41141a:	call   0x41a760
  41141f:	mov    rcx,QWORD PTR [r14]
  411422:	mov    r15,rax
  411425:	call   0x40ef70
  41142a:	test   r13,r13
  41142d:	mov    QWORD PTR [r15],rax
  411430:	jne    0x411400
  411432:	mov    r14,QWORD PTR [r14+0x8]
  411436:	mov    QWORD PTR [rsi+0x18],r15
  41143a:	mov    r13,r15
  41143d:	test   r14,r14
  411440:	jne    0x411410
  411442:	mov    r14,QWORD PTR [rdi+0x20]
  411446:	xor    r13d,r13d
  411449:	test   r14,r14
  41144c:	jne    0x411467
  41144e:	jmp    0x411342
  411453:	mov    QWORD PTR [r13+0x10],r15
  411457:	mov    r14,QWORD PTR [r14+0x10]
  41145b:	mov    r13,r15
  41145e:	test   r14,r14
  411461:	je     0x411342
  411467:	mov    edx,0x18
  41146c:	mov    ecx,0x1
  411471:	call   0x41a760
  411476:	mov    rcx,QWORD PTR [r14]
  411479:	mov    r15,rax
  41147c:	call   0x40ef70
  411481:	mov    QWORD PTR [r15],rax
  411484:	mov    eax,DWORD PTR [r14+0x8]
  411488:	test   r13,r13
  41148b:	mov    DWORD PTR [r15+0x8],eax
  41148f:	jne    0x411453
  411491:	mov    QWORD PTR [rsi+0x20],r15
  411495:	jmp    0x411457
  411497:	nop    WORD PTR [rax+rax*1+0x0]
  4114a0:	mov    rax,QWORD PTR [rsp+0x38]
  4114a5:	mov    QWORD PTR [rax+0x30],rbx
  4114a9:	mov    rdi,QWORD PTR [rdi]
  4114ac:	mov    r12,QWORD PTR [rsi+0x10]
  4114b0:	test   rdi,rdi
  4114b3:	jne    0x41137d
  4114b9:	nop    DWORD PTR [rax+0x0]
  4114c0:	add    rsp,0x48
  4114c4:	pop    rbx
  4114c5:	pop    rsi
  4114c6:	pop    rdi
  4114c7:	pop    rbp
  4114c8:	pop    r12
  4114ca:	pop    r13
  4114cc:	pop    r14
  4114ce:	pop    r15
  4114d0:	ret    
  4114d1:	mov    rax,QWORD PTR [rsp+0x38]
  4114d6:	mov    QWORD PTR [rax+0x28],rsi
  4114da:	mov    rbx,QWORD PTR [rsi+0x10]
  4114de:	jmp    0x411360
  4114e3:	mov    edx,0x20
  4114e8:	mov    ecx,0x1
  4114ed:	call   0x41a760
  4114f2:	mov    rsi,rax
  4114f5:	mov    rax,QWORD PTR [rdi+0x18]
  4114f9:	mov    QWORD PTR [rsi+0x18],rax
  4114fd:	jmp    0x411342
  411502:	lea    rax,[rip+0x251e0]        # 0x4366e9
  411509:	lea    r9,[rip+0x25990]        # 0x436ea0
  411510:	lea    r8,[rip+0x251cb]        # 0x4366e2
  411517:	lea    rcx,[rip+0x251a8]        # 0x4366c6
  41151e:	mov    edx,0x8a6
  411523:	mov    QWORD PTR [rsp+0x20],rax
  411528:	call   0x41d170
  41152d:	nop
  41152e:	nop
  41152f:	nop
  411530:	push   rbx
  411531:	mov    r10,QWORD PTR [rcx]
  411534:	movsx  eax,BYTE PTR [r10]
  411538:	cmp    al,0x2c
  41153a:	je     0x411601
  411540:	test   al,al
  411542:	je     0x411601
  411548:	mov    r9,rdx
  41154b:	xor    r11d,r11d
  41154e:	jmp    0x41158f
  411550:	sub    eax,0x30
  411553:	movsx  r8d,BYTE PTR [r10+0x1]
  411558:	lea    ebx,[r8-0x30]
  41155c:	cmp    bl,0x9
  41155f:	ja     0x4115b4
  411561:	sub    r8d,0x30
  411565:	shl    eax,0x4
  411568:	add    r10,0x2
  41156c:	add    r11d,0x1
  411570:	add    eax,r8d
  411573:	mov    BYTE PTR [r9],al
  411576:	movsx  eax,BYTE PTR [r10]
  41157a:	cmp    al,0x2c
  41157c:	je     0x4115f2
  41157e:	test   al,al
  411580:	je     0x4115f2
  411582:	add    r9,0x1
  411586:	cmp    r11d,0x103
  41158d:	je     0x4115d2
  41158f:	lea    r8d,[rax-0x30]
  411593:	cmp    r8b,0x9
  411597:	jbe    0x411550
  411599:	lea    r8d,[rax-0x61]
  41159d:	cmp    r8b,0x5
  4115a1:	ja     0x4115c3
  4115a3:	movsx  r8d,BYTE PTR [r10+0x1]
  4115a8:	sub    eax,0x57
  4115ab:	lea    ebx,[r8-0x30]
  4115af:	cmp    bl,0x9
  4115b2:	jbe    0x411561
  4115b4:	lea    ebx,[r8-0x61]
  4115b8:	cmp    bl,0x5
  4115bb:	ja     0x4115e0
  4115bd:	sub    r8d,0x57
  4115c1:	jmp    0x411565
  4115c3:	lea    r8d,[rax-0x41]
  4115c7:	cmp    r8b,0x5
  4115cb:	ja     0x4115d2
  4115cd:	sub    eax,0x37
  4115d0:	jmp    0x411553
  4115d2:	mov    eax,0xffffffff
  4115d7:	pop    rbx
  4115d8:	ret    
  4115d9:	nop    DWORD PTR [rax+0x0]
  4115e0:	lea    ebx,[r8-0x41]
  4115e4:	cmp    bl,0x5
  4115e7:	ja     0x4115d2
  4115e9:	sub    r8d,0x37
  4115ed:	jmp    0x411565
  4115f2:	movsxd r11,r11d
  4115f5:	xor    eax,eax
  4115f7:	mov    BYTE PTR [rdx+r11*1],0x0
  4115fc:	mov    QWORD PTR [rcx],r10
  4115ff:	pop    rbx
  411600:	ret    
  411601:	xor    r11d,r11d
  411604:	jmp    0x4115f5
  411606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411610:	mov    r8,QWORD PTR [rcx]
  411613:	mov    DWORD PTR [rdx],0x0
  411619:	movsx  eax,BYTE PTR [r8]
  41161d:	cmp    al,0x2c
  41161f:	je     0x411690
  411621:	test   al,al
  411623:	je     0x411690
  411625:	lea    r10,[r8+0x7]
  411629:	jmp    0x411654
  41162b:	nop    DWORD PTR [rax+rax*1+0x0]
  411630:	sub    eax,0x30
  411633:	mov    r9d,DWORD PTR [rdx]
  411636:	add    r8,0x1
  41163a:	shl    r9d,0x4
  41163e:	add    eax,r9d
  411641:	mov    DWORD PTR [rdx],eax
  411643:	movsx  eax,BYTE PTR [r8]
  411647:	cmp    al,0x2c
  411649:	je     0x411690
  41164b:	test   al,al
  41164d:	je     0x411690
  41164f:	cmp    r8,r10
  411652:	je     0x411680
  411654:	lea    r9d,[rax-0x30]
  411658:	cmp    r9b,0x9
  41165c:	jbe    0x411630
  41165e:	lea    r9d,[rax-0x61]
  411662:	cmp    r9b,0x5
  411666:	ja     0x411670
  411668:	sub    eax,0x57
  41166b:	jmp    0x411633
  41166d:	nop    DWORD PTR [rax]
  411670:	lea    r9d,[rax-0x41]
  411674:	cmp    r9b,0x5
  411678:	ja     0x411680
  41167a:	sub    eax,0x37
  41167d:	jmp    0x411633
  41167f:	nop
  411680:	mov    eax,0xffffffff
  411685:	ret    
  411686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411690:	mov    QWORD PTR [rcx],r8
  411693:	xor    eax,eax
  411695:	ret    
  411696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116a0:	push   rdi
  4116a1:	push   rsi
  4116a2:	push   rbx
  4116a3:	sub    rsp,0x150
  4116aa:	lea    rsi,[rsp+0x40]
  4116af:	lea    rdi,[rsp+0x38]
  4116b4:	lea    rax,[rcx+0xb]
  4116b8:	mov    rbx,rcx
  4116bb:	mov    rdx,rsi
  4116be:	mov    rcx,rdi
  4116c1:	mov    QWORD PTR [rsp+0x38],rax
  4116c6:	call   0x411530
  4116cb:	test   eax,eax
  4116cd:	jne    0x4116d9
  4116cf:	mov    rax,QWORD PTR [rsp+0x38]
  4116d4:	cmp    BYTE PTR [rax],0x2c
  4116d7:	je     0x411700
  4116d9:	lea    rdx,[rip+0x25b20]        # 0x437200
  4116e0:	mov    r8d,0x16
  4116e6:	mov    rcx,rbx
  4116e9:	call   0x42aab0
  4116ee:	nop
  4116ef:	add    rsp,0x150
  4116f6:	pop    rbx
  4116f7:	pop    rsi
  4116f8:	pop    rdi
  4116f9:	ret    
  4116fa:	nop    WORD PTR [rax+rax*1+0x0]
  411700:	lea    rdx,[rsp+0x2c]
  411705:	add    rax,0x1
  411709:	mov    rcx,rdi
  41170c:	mov    QWORD PTR [rsp+0x38],rax
  411711:	call   0x411610
  411716:	test   eax,eax
  411718:	jne    0x4116d9
  41171a:	mov    rax,QWORD PTR [rsp+0x38]
  41171f:	cmp    BYTE PTR [rax],0x2c
  411722:	jne    0x4116d9
  411724:	lea    rdx,[rsp+0x30]
  411729:	add    rax,0x1
  41172d:	mov    rcx,rdi
  411730:	mov    QWORD PTR [rsp+0x38],rax
  411735:	call   0x411610
  41173a:	test   eax,eax
  41173c:	jne    0x4116d9
  41173e:	mov    rax,QWORD PTR [rsp+0x38]
  411743:	cmp    BYTE PTR [rax],0x0
  411746:	jne    0x4116d9
  411748:	mov    ecx,DWORD PTR [rsp+0x2c]
  41174c:	lea    rdx,[rsp+0x34]
  411751:	call   0x41de10
  411756:	test   eax,eax
  411758:	jne    0x4116d9
  41175e:	mov    ecx,DWORD PTR [rsp+0x30]
  411762:	lea    rdx,[rsp+0x2a]
  411767:	call   0x41de90
  41176c:	test   eax,eax
  41176e:	jne    0x4116d9
  411774:	mov    ecx,DWORD PTR [rip+0x3c2d6]        # 0x44da50
  41177a:	test   ecx,ecx
  41177c:	je     0x4117f0
  41177e:	mov    rax,QWORD PTR [rip+0x34edb]        # 0x446660
  411785:	mov    rax,QWORD PTR [rax]
  411788:	mov    rax,QWORD PTR [rax+0x220]
  41178f:	test   rax,rax
  411792:	je     0x4117f0
  411794:	movzx  r9d,WORD PTR [rsp+0x2a]
  41179a:	mov    rdx,rsi
  41179d:	mov    r8d,DWORD PTR [rsp+0x34]
  4117a2:	call   rax
  4117a4:	mov    esi,eax
  4117a6:	cmp    esi,0xffffffff
  4117a9:	je     0x411809
  4117ab:	mov    ecx,0x10
  4117b0:	call   0x41a6e0
  4117b5:	mov    rdx,QWORD PTR [rip+0x3c29c]        # 0x44da58
  4117bc:	mov    DWORD PTR [rax],esi
  4117be:	mov    r8d,esi
  4117c1:	mov    rcx,rbx
  4117c4:	mov    QWORD PTR [rip+0x3c28d],rax        # 0x44da58
  4117cb:	mov    QWORD PTR [rax+0x8],rdx
  4117cf:	lea    rdx,[rip+0x25a31]        # 0x437207
  4117d6:	call   0x42aab0
  4117db:	nop
  4117dc:	add    rsp,0x150
  4117e3:	pop    rbx
  4117e4:	pop    rsi
  4117e5:	pop    rdi
  4117e6:	ret    
  4117e7:	nop    WORD PTR [rax+rax*1+0x0]
  4117f0:	movzx  r8d,WORD PTR [rsp+0x2a]
  4117f6:	mov    edx,DWORD PTR [rsp+0x34]
  4117fa:	mov    rcx,rsi
  4117fd:	call   0x42a590
  411802:	mov    esi,eax
  411804:	cmp    esi,0xffffffff
  411807:	jne    0x4117ab
  411809:	mov    rax,QWORD PTR [rip+0x34e50]        # 0x446660
  411810:	mov    rcx,rbx
  411813:	mov    rax,QWORD PTR [rax]
  411816:	call   QWORD PTR [rax+0x100]
  41181c:	nop
  41181d:	add    rsp,0x150
  411824:	pop    rbx
  411825:	pop    rsi
  411826:	pop    rdi
  411827:	ret    
  411828:	nop    DWORD PTR [rax+rax*1+0x0]
  411830:	push   rsi
  411831:	push   rbx
  411832:	sub    rsp,0x148
  411839:	lea    rsi,[rsp+0x30]
  41183e:	lea    rax,[rcx+0xd]
  411842:	mov    rbx,rcx
  411845:	lea    rcx,[rsp+0x28]
  41184a:	mov    rdx,rsi
  41184d:	mov    QWORD PTR [rsp+0x28],rax
  411852:	call   0x411530
  411857:	test   eax,eax
  411859:	je     0x411880
  41185b:	lea    rdx,[rip+0x2599e]        # 0x437200
  411862:	mov    r8d,0x16
  411868:	mov    rcx,rbx
  41186b:	call   0x42aab0
  411870:	nop
  411871:	add    rsp,0x148
  411878:	pop    rbx
  411879:	pop    rsi
  41187a:	ret    
  41187b:	nop    DWORD PTR [rax+rax*1+0x0]
  411880:	mov    rax,QWORD PTR [rsp+0x28]
  411885:	cmp    BYTE PTR [rax],0x0
  411888:	jne    0x41185b
  41188a:	mov    ecx,DWORD PTR [rip+0x3c1c0]        # 0x44da50
  411890:	test   ecx,ecx
  411892:	je     0x4118d1
  411894:	mov    rax,QWORD PTR [rip+0x34dc5]        # 0x446660
  41189b:	mov    rax,QWORD PTR [rax]
  41189e:	mov    rax,QWORD PTR [rax+0x228]
  4118a5:	test   rax,rax
  4118a8:	je     0x4118d1
  4118aa:	mov    rdx,rsi
  4118ad:	call   rax
  4118af:	cmp    eax,0xffffffff
  4118b2:	je     0x4118de
  4118b4:	lea    rdx,[rip+0x2594c]        # 0x437207
  4118bb:	mov    r8d,eax
  4118be:	mov    rcx,rbx
  4118c1:	call   0x42aab0
  4118c6:	nop
  4118c7:	add    rsp,0x148
  4118ce:	pop    rbx
  4118cf:	pop    rsi
  4118d0:	ret    
  4118d1:	mov    rcx,rsi
  4118d4:	call   0x42a5a8
  4118d9:	cmp    eax,0xffffffff
  4118dc:	jne    0x4118b4
  4118de:	mov    rax,QWORD PTR [rip+0x34d7b]        # 0x446660
  4118e5:	mov    rcx,rbx
  4118e8:	mov    rax,QWORD PTR [rax]
  4118eb:	call   QWORD PTR [rax+0x100]
  4118f1:	nop
  4118f2:	add    rsp,0x148
  4118f9:	pop    rbx
  4118fa:	pop    rsi
  4118fb:	ret    
  4118fc:	nop    DWORD PTR [rax+0x0]
  411900:	push   r12
  411902:	push   rbp
  411903:	push   rdi
  411904:	push   rsi
  411905:	push   rbx
  411906:	sub    rsp,0x20
  41190a:	mov    rbp,rdx
  41190d:	lea    rdx,[rip+0x258f7]        # 0x43720b
  411914:	mov    rsi,rcx
  411917:	mov    edi,r8d
  41191a:	mov    r12,r9
  41191d:	call   0x42aab0
  411922:	mov    rcx,rsi
  411925:	call   0x42a610
  41192a:	test   edi,edi
  41192c:	mov    ebx,eax
  41192e:	jle    0x4119be
  411934:	xor    r11d,r11d
  411937:	jmp    0x411968
  411939:	nop    DWORD PTR [rax+0x0]
  411940:	lea    edx,[r10-0x23]
  411944:	cmp    dl,0x1
  411947:	jbe    0x411983
  411949:	cmp    ebx,0x3fff
  41194f:	jg     0x4119af
  411951:	movsxd rax,ebx
  411954:	add    ebx,0x1
  411957:	mov    BYTE PTR [rsi+rax*1],r10b
  41195b:	lea    eax,[r11+0x1]
  41195f:	add    r11,0x1
  411963:	cmp    edi,r11d
  411966:	jle    0x4119af
  411968:	movzx  r10d,BYTE PTR [rbp+r11*1+0x0]
  41196e:	mov    eax,r11d
  411971:	cmp    r10b,0x2a
  411975:	sete   cl
  411978:	cmp    r10b,0x7d
  41197c:	sete   dl
  41197f:	or     cl,dl
  411981:	je     0x411940
  411983:	cmp    ebx,0x3ffe
  411989:	jg     0x4119af
  41198b:	lea    eax,[rbx+0x1]
  41198e:	movsxd rdx,ebx
  411991:	xor    r10d,0x20
  411995:	mov    BYTE PTR [rsi+rdx*1],0x7d
  411999:	add    ebx,0x2
  41199c:	cdqe   
  41199e:	mov    BYTE PTR [rsi+rax*1],r10b
  4119a2:	lea    eax,[r11+0x1]
  4119a6:	add    r11,0x1
  4119aa:	cmp    edi,r11d
  4119ad:	jg     0x411968
  4119af:	mov    DWORD PTR [r12],ebx
  4119b3:	add    rsp,0x20
  4119b7:	pop    rbx
  4119b8:	pop    rsi
  4119b9:	pop    rdi
  4119ba:	pop    rbp
  4119bb:	pop    r12
  4119bd:	ret    
  4119be:	xor    eax,eax
  4119c0:	jmp    0x4119af
  4119c2:	nop    DWORD PTR [rax+0x0]
  4119c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119d0:	push   rbp
  4119d1:	push   rdi
  4119d2:	push   rsi
  4119d3:	push   rbx
  4119d4:	sub    rsp,0x258
  4119db:	lea    rbx,[rsp+0x30]
  4119e0:	lea    rax,[rcx+0xf]
  4119e4:	mov    rsi,rcx
  4119e7:	lea    rcx,[rsp+0x28]
  4119ec:	mov    rdi,rdx
  4119ef:	mov    rdx,rbx
  4119f2:	mov    QWORD PTR [rsp+0x28],rax
  4119f7:	call   0x411530
  4119fc:	test   eax,eax
  4119fe:	je     0x411a22
  411a00:	lea    rdx,[rip+0x257f9]        # 0x437200
  411a07:	mov    r8d,0x16
  411a0d:	mov    rcx,rsi
  411a10:	call   0x42aab0
  411a15:	nop
  411a16:	add    rsp,0x258
  411a1d:	pop    rbx
  411a1e:	pop    rsi
  411a1f:	pop    rdi
  411a20:	pop    rbp
  411a21:	ret    
  411a22:	mov    rax,QWORD PTR [rsp+0x28]
  411a27:	cmp    BYTE PTR [rax],0x0
  411a2a:	jne    0x411a00
  411a2c:	mov    ecx,DWORD PTR [rip+0x3c01e]        # 0x44da50
  411a32:	lea    rbp,[rsp+0x140]
  411a3a:	test   ecx,ecx
  411a3c:	je     0x411aa0
  411a3e:	mov    rax,QWORD PTR [rip+0x34c1b]        # 0x446660
  411a45:	mov    rax,QWORD PTR [rax]
  411a48:	mov    rax,QWORD PTR [rax+0x230]
  411a4f:	test   rax,rax
  411a52:	je     0x411aa0
  411a54:	mov    rdx,rbx
  411a57:	mov    r9d,0x103
  411a5d:	mov    r8,rbp
  411a60:	call   rax
  411a62:	mov    ebx,eax
  411a64:	cmp    ebx,0xffffffff
  411a67:	je     0x411ab8
  411a69:	mov    r9,rdi
  411a6c:	mov    r8d,ebx
  411a6f:	mov    rdx,rbp
  411a72:	mov    rcx,rsi
  411a75:	call   0x411900
  411a7a:	cmp    ebx,eax
  411a7c:	jle    0x411a16
  411a7e:	lea    rdx,[rip+0x2577b]        # 0x437200
  411a85:	mov    r8d,0x5b
  411a8b:	mov    rcx,rsi
  411a8e:	call   0x42aab0
  411a93:	nop
  411a94:	add    rsp,0x258
  411a9b:	pop    rbx
  411a9c:	pop    rsi
  411a9d:	pop    rdi
  411a9e:	pop    rbp
  411a9f:	ret    
  411aa0:	mov    rcx,rbx
  411aa3:	mov    r8d,0x103
  411aa9:	mov    rdx,rbp
  411aac:	call   0x4236d0
  411ab1:	mov    ebx,eax
  411ab3:	cmp    ebx,0xffffffff
  411ab6:	jne    0x411a69
  411ab8:	mov    rax,QWORD PTR [rip+0x34ba1]        # 0x446660
  411abf:	mov    rcx,rsi
  411ac2:	mov    rax,QWORD PTR [rax]
  411ac5:	call   QWORD PTR [rax+0x100]
  411acb:	nop
  411acc:	add    rsp,0x258
  411ad3:	pop    rbx
  411ad4:	pop    rsi
  411ad5:	pop    rdi
  411ad6:	pop    rbp
  411ad7:	ret    
  411ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ae0:	mov    DWORD PTR [rip+0x3bf66],0x0        # 0x44da50
  411aea:	ret    
  411aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  411af0:	push   r12
  411af2:	push   rbp
  411af3:	push   rdi
  411af4:	push   rsi
  411af5:	push   rbx
  411af6:	sub    rsp,0xb0
  411afd:	lea    rdi,[rip+0x2570c]        # 0x437210
  411b04:	mov    rbx,rcx
  411b07:	mov    ecx,0xb
  411b0c:	mov    r12d,edx
  411b0f:	mov    rsi,rbx
  411b12:	mov    rbp,r8
  411b15:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b17:	je     0x411c24
  411b1d:	lea    rdi,[rip+0x256f8]        # 0x43721c
  411b24:	mov    ecx,0xc
  411b29:	mov    rsi,rbx
  411b2c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b2e:	je     0x411cb5
  411b34:	lea    rdi,[rip+0x256ee]        # 0x437229
  411b3b:	mov    ecx,0xd
  411b40:	mov    rsi,rbx
  411b43:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b45:	je     0x411c40
  411b4b:	lea    rdi,[rip+0x256e5]        # 0x437237
  411b52:	mov    ecx,0xc
  411b57:	mov    rsi,rbx
  411b5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b5c:	je     0x411df0
  411b62:	lea    rdi,[rip+0x256db]        # 0x437244
  411b69:	mov    ecx,0xc
  411b6e:	mov    rsi,rbx
  411b71:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b73:	je     0x411ea0
  411b79:	lea    rdi,[rip+0x256d1]        # 0x437251
  411b80:	mov    ecx,0xd
  411b85:	mov    rsi,rbx
  411b88:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411b8a:	je     0x411f60
  411b90:	lea    rdi,[rip+0x256c8]        # 0x43725f
  411b97:	mov    ecx,0xf
  411b9c:	mov    rsi,rbx
  411b9f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411ba1:	je     0x411ca0
  411ba7:	lea    rdi,[rip+0x256c1]        # 0x43726f
  411bae:	mov    ecx,0xc
  411bb3:	mov    rsi,rbx
  411bb6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411bb8:	seta   cl
  411bbb:	setb   dl
  411bbe:	xor    eax,eax
  411bc0:	cmp    cl,dl
  411bc2:	jne    0x411c31
  411bc4:	mov    rax,QWORD PTR [rip+0x34a95]        # 0x446660
  411bcb:	mov    rax,QWORD PTR [rax]
  411bce:	cmp    QWORD PTR [rax+0x220],0x0
  411bd6:	je     0x412055
  411bdc:	lea    rax,[rbx+0xc]
  411be0:	lea    rdx,[rsp+0x30]
  411be5:	lea    rcx,[rsp+0x70]
  411bea:	mov    QWORD PTR [rsp+0x70],rax
  411bef:	call   0x411610
  411bf4:	test   eax,eax
  411bf6:	jne    0x411c70
  411bf8:	mov    eax,DWORD PTR [rsp+0x30]
  411bfc:	test   eax,eax
  411bfe:	js     0x411c70
  411c00:	mov    rdx,QWORD PTR [rsp+0x70]
  411c05:	cmp    BYTE PTR [rdx],0x0
  411c08:	jne    0x411c70
  411c0a:	lea    rdx,[rip+0x255f6]        # 0x437207
  411c11:	xor    r8d,r8d
  411c14:	mov    rcx,rbx
  411c17:	mov    DWORD PTR [rip+0x3be33],eax        # 0x44da50
  411c1d:	call   0x42aab0
  411c22:	jmp    0x411c85
  411c24:	mov    rcx,rbx
  411c27:	call   0x4116a0
  411c2c:	mov    eax,0x1
  411c31:	add    rsp,0xb0
  411c38:	pop    rbx
  411c39:	pop    rsi
  411c3a:	pop    rdi
  411c3b:	pop    rbp
  411c3c:	pop    r12
  411c3e:	ret    
  411c3f:	nop
  411c40:	lea    rsi,[rsp+0x70]
  411c45:	lea    rax,[rbx+0xd]
  411c49:	lea    rdx,[rsp+0x28]
  411c4e:	mov    rcx,rsi
  411c51:	mov    QWORD PTR [rsp+0x70],rax
  411c56:	call   0x411610
  411c5b:	test   eax,eax
  411c5d:	jne    0x411c70
  411c5f:	mov    rax,QWORD PTR [rsp+0x70]
  411c64:	cmp    BYTE PTR [rax],0x2c
  411c67:	je     0x411f72
  411c6d:	nop    DWORD PTR [rax]
  411c70:	lea    rdx,[rip+0x25589]        # 0x437200
  411c77:	mov    r8d,0x16
  411c7d:	mov    rcx,rbx
  411c80:	call   0x42aab0
  411c85:	mov    eax,0x1
  411c8a:	add    rsp,0xb0
  411c91:	pop    rbx
  411c92:	pop    rsi
  411c93:	pop    rdi
  411c94:	pop    rbp
  411c95:	pop    r12
  411c97:	ret    
  411c98:	nop    DWORD PTR [rax+rax*1+0x0]
  411ca0:	mov    rdx,r8
  411ca3:	mov    rcx,rbx
  411ca6:	call   0x4119d0
  411cab:	mov    eax,0x1
  411cb0:	jmp    0x411c31
  411cb5:	lea    rsi,[rsp+0x70]
  411cba:	lea    rax,[rbx+0xc]
  411cbe:	lea    rdx,[rsp+0x24]
  411cc3:	mov    rcx,rsi
  411cc6:	mov    QWORD PTR [rsp+0x70],rax
  411ccb:	call   0x411610
  411cd0:	test   eax,eax
  411cd2:	jne    0x411c70
  411cd4:	mov    rax,QWORD PTR [rsp+0x70]
  411cd9:	cmp    BYTE PTR [rax],0x2c
  411cdc:	jne    0x411c70
  411cde:	add    rax,0x1
  411ce2:	mov    edx,DWORD PTR [rsp+0x24]
  411ce6:	mov    QWORD PTR [rsp+0x70],rax
  411ceb:	mov    rax,QWORD PTR [rip+0x3bd66]        # 0x44da58
  411cf2:	test   rax,rax
  411cf5:	jne    0x411d0d
  411cf7:	jmp    0x411c70
  411cfc:	nop    DWORD PTR [rax+0x0]
  411d00:	mov    rax,QWORD PTR [rax+0x8]
  411d04:	test   rax,rax
  411d07:	je     0x411c70
  411d0d:	cmp    edx,DWORD PTR [rax]
  411d0f:	jne    0x411d00
  411d11:	lea    rdx,[rsp+0x28]
  411d16:	mov    rcx,rsi
  411d19:	call   0x411610
  411d1e:	test   eax,eax
  411d20:	jne    0x411c70
  411d26:	mov    rax,QWORD PTR [rsp+0x70]
  411d2b:	cmp    BYTE PTR [rax],0x2c
  411d2e:	jne    0x411c70
  411d34:	lea    rdx,[rsp+0x30]
  411d39:	add    rax,0x1
  411d3d:	mov    rcx,rsi
  411d40:	mov    QWORD PTR [rsp+0x70],rax
  411d45:	call   0x411610
  411d4a:	test   eax,eax
  411d4c:	jne    0x411c70
  411d52:	mov    rax,QWORD PTR [rsp+0x70]
  411d57:	cmp    BYTE PTR [rax],0x0
  411d5a:	jne    0x411c70
  411d60:	mov    eax,DWORD PTR [rip+0x1a32a]        # 0x42c090
  411d66:	cmp    eax,0xffffffff
  411d69:	je     0x4120a0
  411d6f:	movsxd rcx,DWORD PTR [rsp+0x28]
  411d74:	cmp    ecx,eax
  411d76:	jle    0x411d7f
  411d78:	mov    DWORD PTR [rsp+0x28],eax
  411d7c:	movsxd rcx,eax
  411d7f:	call   0x41a6e0
  411d84:	movsxd rdx,DWORD PTR [rsp+0x30]
  411d89:	mov    ecx,DWORD PTR [rsp+0x24]
  411d8d:	xor    r8d,r8d
  411d90:	mov    rsi,rax
  411d93:	call   0x4258c0
  411d98:	cmp    eax,0xffffffff
  411d9b:	je     0x412035
  411da1:	mov    r8d,DWORD PTR [rsp+0x28]
  411da6:	mov    ecx,DWORD PTR [rsp+0x24]
  411daa:	mov    rdx,rsi
  411dad:	call   0x42a598
  411db2:	cmp    eax,0xffffffff
  411db5:	mov    edi,eax
  411db7:	je     0x412035
  411dbd:	mov    r9,rbp
  411dc0:	mov    r8d,eax
  411dc3:	mov    rdx,rsi
  411dc6:	mov    rcx,rbx
  411dc9:	call   0x411900
  411dce:	cmp    edi,eax
  411dd0:	jle    0x411de3
  411dd2:	mov    r9,rbp
  411dd5:	mov    r8d,eax
  411dd8:	mov    rdx,rsi
  411ddb:	mov    rcx,rbx
  411dde:	call   0x411900
  411de3:	mov    rcx,rsi
  411de6:	call   0x42a6c8
  411deb:	jmp    0x411c85
  411df0:	lea    rax,[rbx+0xc]
  411df4:	lea    rdx,[rsp+0x24]
  411df9:	lea    rcx,[rsp+0x28]
  411dfe:	mov    QWORD PTR [rsp+0x28],rax
  411e03:	call   0x411610
  411e08:	test   eax,eax
  411e0a:	jne    0x411c70
  411e10:	mov    rax,QWORD PTR [rip+0x3bc41]        # 0x44da58
  411e17:	mov    ecx,DWORD PTR [rsp+0x24]
  411e1b:	test   rax,rax
  411e1e:	jne    0x411e32
  411e20:	jmp    0x411c70
  411e25:	mov    rax,QWORD PTR [rax+0x8]
  411e29:	test   rax,rax
  411e2c:	je     0x411c70
  411e32:	cmp    ecx,DWORD PTR [rax]
  411e34:	jne    0x411e25
  411e36:	mov    rax,QWORD PTR [rsp+0x28]
  411e3b:	cmp    BYTE PTR [rax],0x0
  411e3e:	jne    0x411c70
  411e44:	lea    rsi,[rsp+0x30]
  411e49:	mov    rdx,rsi
  411e4c:	call   QWORD PTR [rip+0x3f94e]        # 0x4517a0
  411e52:	cmp    eax,0xffffffff
  411e55:	je     0x412080
  411e5b:	lea    rdi,[rsp+0x70]
  411e60:	mov    rcx,rsi
  411e63:	mov    rdx,rdi
  411e66:	call   0x41df60
  411e6b:	mov    r9,rbp
  411e6e:	mov    r8d,0x40
  411e74:	mov    rdx,rdi
  411e77:	mov    rcx,rbx
  411e7a:	call   0x411900
  411e7f:	cdqe   
  411e81:	cmp    rax,0x3f
  411e85:	ja     0x411c85
  411e8b:	mov    rcx,rbx
  411e8e:	call   0x405bd0
  411e93:	jmp    0x411c85
  411e98:	nop    DWORD PTR [rax+rax*1+0x0]
  411ea0:	lea    rax,[rbx+0xc]
  411ea4:	lea    rdx,[rsp+0x30]
  411ea9:	lea    rcx,[rsp+0x70]
  411eae:	mov    QWORD PTR [rsp+0x70],rax
  411eb3:	call   0x411610
  411eb8:	test   eax,eax
  411eba:	jne    0x411c70
  411ec0:	mov    rax,QWORD PTR [rip+0x3bb91]        # 0x44da58
  411ec7:	mov    ecx,DWORD PTR [rsp+0x30]
  411ecb:	test   rax,rax
  411ece:	jne    0x411ee2
  411ed0:	jmp    0x411c70
  411ed5:	mov    rax,QWORD PTR [rax+0x8]
  411ed9:	test   rax,rax
  411edc:	je     0x411c70
  411ee2:	cmp    ecx,DWORD PTR [rax]
  411ee4:	jne    0x411ed5
  411ee6:	mov    rax,QWORD PTR [rsp+0x70]
  411eeb:	cmp    BYTE PTR [rax],0x0
  411eee:	jne    0x411c70
  411ef4:	call   0x42a580
  411ef9:	cmp    eax,0xffffffff
  411efc:	mov    esi,eax
  411efe:	je     0x412080
  411f04:	mov    rdx,QWORD PTR [rip+0x3bb4d]        # 0x44da58
  411f0b:	mov    r9d,DWORD PTR [rsp+0x30]
  411f10:	cmp    DWORD PTR [rdx],r9d
  411f13:	jne    0x411f23
  411f15:	jmp    0x4120d1
  411f1a:	nop    WORD PTR [rax+rax*1+0x0]
  411f20:	mov    rdx,rcx
  411f23:	mov    rcx,QWORD PTR [rdx+0x8]
  411f27:	cmp    r9d,DWORD PTR [rcx]
  411f2a:	jne    0x411f20
  411f2c:	add    rdx,0x8
  411f30:	mov    rax,QWORD PTR [rcx+0x8]
  411f34:	mov    QWORD PTR [rdx],rax
  411f37:	call   0x42a6c8
  411f3c:	lea    rdx,[rip+0x252c4]        # 0x437207
  411f43:	mov    r8d,esi
  411f46:	mov    rcx,rbx
  411f49:	call   0x42aab0
  411f4e:	mov    eax,0x1
  411f53:	jmp    0x411c31
  411f58:	nop    DWORD PTR [rax+rax*1+0x0]
  411f60:	mov    rcx,rbx
  411f63:	call   0x411830
  411f68:	mov    eax,0x1
  411f6d:	jmp    0x411c31
  411f72:	add    rax,0x1
  411f76:	mov    edx,DWORD PTR [rsp+0x28]
  411f7a:	mov    QWORD PTR [rsp+0x70],rax
  411f7f:	mov    rax,QWORD PTR [rip+0x3bad2]        # 0x44da58
  411f86:	test   rax,rax
  411f89:	jne    0x411f9d
  411f8b:	jmp    0x411c70
  411f90:	mov    rax,QWORD PTR [rax+0x8]
  411f94:	test   rax,rax
  411f97:	je     0x411c70
  411f9d:	cmp    edx,DWORD PTR [rax]
  411f9f:	jne    0x411f90
  411fa1:	lea    rdx,[rsp+0x30]
  411fa6:	mov    rcx,rsi
  411fa9:	call   0x411610
  411fae:	test   eax,eax
  411fb0:	jne    0x411c70
  411fb6:	mov    rbp,QWORD PTR [rsp+0x70]
  411fbb:	cmp    BYTE PTR [rbp+0x0],0x2c
  411fbf:	jne    0x411c70
  411fc5:	lea    rdi,[rbp+0x1]
  411fc9:	mov    rax,rbx
  411fcc:	sub    rax,rdi
  411fcf:	mov    QWORD PTR [rsp+0x70],rdi
  411fd4:	add    r12d,eax
  411fd7:	movsxd rcx,r12d
  411fda:	call   0x41a6e0
  411fdf:	test   r12d,r12d
  411fe2:	mov    rsi,rax
  411fe5:	jle    0x412137
  411feb:	lea    edx,[r12-0x1]
  411ff0:	mov    rax,rdi
  411ff3:	xor    ecx,ecx
  411ff5:	xor    edi,edi
  411ff7:	lea    r8,[rbp+rdx*1+0x2]
  411ffc:	jmp    0x412019
  411ffe:	movsxd rcx,edi
  412001:	xor    edx,0x20
  412004:	add    edi,0x1
  412007:	mov    BYTE PTR [rsi+rcx*1],dl
  41200a:	xor    ecx,ecx
  41200c:	add    rax,0x1
  412010:	cmp    rax,r8
  412013:	je     0x4120ea
  412019:	test   ecx,ecx
  41201b:	movzx  edx,BYTE PTR [rax]
  41201e:	jne    0x411ffe
  412020:	cmp    dl,0x7d
  412023:	je     0x4120e0
  412029:	movsxd r9,edi
  41202c:	add    edi,0x1
  41202f:	mov    BYTE PTR [rsi+r9*1],dl
  412033:	jmp    0x41200c
  412035:	mov    rax,QWORD PTR [rip+0x34624]        # 0x446660
  41203c:	mov    rcx,rbx
  41203f:	mov    rax,QWORD PTR [rax]
  412042:	call   QWORD PTR [rax+0x100]
  412048:	mov    rcx,rsi
  41204b:	call   0x42a6c8
  412050:	jmp    0x411c85
  412055:	cmp    QWORD PTR [rax+0x228],0x0
  41205d:	jne    0x411bdc
  412063:	cmp    QWORD PTR [rax+0x230],0x0
  41206b:	jne    0x411bdc
  412071:	mov    BYTE PTR [rbx],0x0
  412074:	jmp    0x411c85
  412079:	nop    DWORD PTR [rax+0x0]
  412080:	mov    rax,QWORD PTR [rip+0x345d9]        # 0x446660
  412087:	mov    rcx,rbx
  41208a:	mov    rax,QWORD PTR [rax]
  41208d:	call   QWORD PTR [rax+0x100]
  412093:	jmp    0x411c85
  412098:	nop    DWORD PTR [rax+rax*1+0x0]
  4120a0:	lea    rdx,[rip+0x25164]        # 0x43720b
  4120a7:	mov    r8d,0x4000
  4120ad:	mov    rcx,rbx
  4120b0:	call   0x42aab0
  4120b5:	mov    rcx,rbx
  4120b8:	call   0x42a610
  4120bd:	mov    edx,0x4000
  4120c2:	sub    edx,eax
  4120c4:	mov    eax,edx
  4120c6:	mov    DWORD PTR [rip+0x19fc4],edx        # 0x42c090
  4120cc:	jmp    0x411d6f
  4120d1:	mov    rcx,rdx
  4120d4:	lea    rdx,[rip+0x3b97d]        # 0x44da58
  4120db:	jmp    0x411f30
  4120e0:	mov    ecx,0x1
  4120e5:	jmp    0x41200c
  4120ea:	test   ecx,ecx
  4120ec:	jne    0x41213b
  4120ee:	movsxd rdx,DWORD PTR [rsp+0x30]
  4120f3:	mov    ecx,DWORD PTR [rsp+0x28]
  4120f7:	xor    r8d,r8d
  4120fa:	call   0x4258c0
  4120ff:	cmp    eax,0xffffffff
  412102:	je     0x412035
  412108:	mov    ecx,DWORD PTR [rsp+0x28]
  41210c:	mov    r8d,edi
  41210f:	mov    rdx,rsi
  412112:	call   0x42a5b0
  412117:	cmp    eax,0xffffffff
  41211a:	mov    r8d,eax
  41211d:	je     0x412035
  412123:	lea    rdx,[rip+0x250dd]        # 0x437207
  41212a:	mov    rcx,rbx
  41212d:	call   0x42aab0
  412132:	jmp    0x411de3
  412137:	xor    edi,edi
  412139:	jmp    0x4120ee
  41213b:	mov    rcx,rsi
  41213e:	call   0x42a6c8
  412143:	jmp    0x411c70
  412148:	nop
  412149:	nop
  41214a:	nop
  41214b:	nop
  41214c:	nop
  41214d:	nop
  41214e:	nop
  41214f:	nop
  412150:	jmp    0x41a7c0
  412155:	nop
  412156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412160:	push   rsi
  412161:	push   rbx
  412162:	sub    rsp,0x28
  412166:	mov    rbx,QWORD PTR [rip+0x3b953]        # 0x44dac0
  41216d:	test   rbx,rbx
  412170:	jne    0x41217d
  412172:	jmp    0x41219e
  412174:	mov    rbx,QWORD PTR [rbx+0x28]
  412178:	test   rbx,rbx
  41217b:	je     0x41219e
  41217d:	cmp    QWORD PTR [rbx],rcx
  412180:	jne    0x412174
  412182:	mov    eax,DWORD PTR [rbx+0xc]
  412185:	test   al,0x8
  412187:	jne    0x4121c4
  412189:	mov    DWORD PTR [rbx+0x20],0x0
  412190:	and    eax,DWORD PTR [rbx+0x8]
  412193:	mov    DWORD PTR [rbx+0xc],0x0
  41219a:	test   eax,eax
  41219c:	jne    0x4121b0
  41219e:	xor    eax,eax
  4121a0:	add    rsp,0x28
  4121a4:	pop    rbx
  4121a5:	pop    rsi
  4121a6:	ret    
  4121a7:	nop    WORD PTR [rax+rax*1+0x0]
  4121b0:	mov    rdx,QWORD PTR [rbx+0x18]
  4121b4:	mov    ecx,DWORD PTR [rbx+0x20]
  4121b7:	call   QWORD PTR [rbx+0x10]
  4121ba:	sar    eax,0x1f
  4121bd:	add    rsp,0x28
  4121c1:	pop    rbx
  4121c2:	pop    rsi
  4121c3:	ret    
  4121c4:	call   0x40e960
  4121c9:	mov    rsi,rax
  4121cc:	call   QWORD PTR [rip+0x3f57e]        # 0x451750
  4121d2:	lea    rdx,[rip+0x250df]        # 0x4372b8
  4121d9:	lea    rcx,[rax+0x60]
  4121dd:	mov    r8,rsi
  4121e0:	call   0x42aa80
  4121e5:	mov    DWORD PTR [rbx+0x20],0x1
  4121ec:	mov    eax,DWORD PTR [rbx+0xc]
  4121ef:	jmp    0x412190
  4121f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4121f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412200:	push   rsi
  412201:	push   rbx
  412202:	sub    rsp,0x38
  412206:	mov    rbx,rcx
  412209:	mov    ecx,0x10
  41220e:	mov    rsi,rdx
  412211:	call   0x41a6e0
  412216:	test   rbx,rbx
  412219:	je     0x41224e
  41221b:	mov    rdx,QWORD PTR [rbx+0x8]
  41221f:	mov    QWORD PTR [rax+0x8],rsi
  412223:	mov    QWORD PTR [rax],0x0
  41222a:	test   rdx,rdx
  41222d:	je     0x412240
  41222f:	mov    QWORD PTR [rdx],rax
  412232:	mov    QWORD PTR [rbx+0x8],rax
  412236:	add    rsp,0x38
  41223a:	pop    rbx
  41223b:	pop    rsi
  41223c:	ret    
  41223d:	nop    DWORD PTR [rax]
  412240:	mov    QWORD PTR [rbx+0x8],rax
  412244:	mov    QWORD PTR [rbx],rax
  412247:	add    rsp,0x38
  41224b:	pop    rbx
  41224c:	pop    rsi
  41224d:	ret    
  41224e:	lea    rax,[rip+0x25053]        # 0x4372a8
  412255:	lea    r9,[rip+0x25344]        # 0x4375a0
  41225c:	lea    r8,[rip+0x2501d]        # 0x437280
  412263:	lea    rcx,[rip+0x25031]        # 0x43729b
  41226a:	mov    edx,0x5e
  41226f:	mov    QWORD PTR [rsp+0x20],rax
  412274:	call   0x41d170
  412279:	nop
  41227a:	nop    WORD PTR [rax+rax*1+0x0]
  412280:	push   rbx
  412281:	sub    rsp,0x30
  412285:	test   rcx,rcx
  412288:	je     0x4122c4
  41228a:	mov    rdx,QWORD PTR [rcx]
  41228d:	test   rdx,rdx
  412290:	je     0x4122ef
  412292:	cmp    rdx,QWORD PTR [rcx+0x8]
  412296:	je     0x4122b3
  412298:	mov    rax,QWORD PTR [rdx]
  41229b:	mov    QWORD PTR [rcx],rax
  41229e:	mov    rbx,QWORD PTR [rdx+0x8]
  4122a2:	mov    rcx,rdx
  4122a5:	call   0x41a7c0
  4122aa:	mov    rax,rbx
  4122ad:	add    rsp,0x30
  4122b1:	pop    rbx
  4122b2:	ret    
  4122b3:	mov    QWORD PTR [rcx],0x0
  4122ba:	mov    QWORD PTR [rcx+0x8],0x0
  4122c2:	jmp    0x41229e
  4122c4:	lea    rax,[rip+0x24fdd]        # 0x4372a8
  4122cb:	lea    r9,[rip+0x2528e]        # 0x437560
  4122d2:	lea    r8,[rip+0x24fa7]        # 0x437280
  4122d9:	lea    rcx,[rip+0x24fbb]        # 0x43729b
  4122e0:	mov    edx,0x5e
  4122e5:	mov    QWORD PTR [rsp+0x20],rax
  4122ea:	call   0x41d170
  4122ef:	lea    rax,[rip+0x24fe9]        # 0x4372df
  4122f6:	lea    r9,[rip+0x25263]        # 0x437560
  4122fd:	lea    r8,[rip+0x24f7c]        # 0x437280
  412304:	lea    rcx,[rip+0x24f90]        # 0x43729b
  41230b:	mov    dl,0x5e
  41230d:	mov    QWORD PTR [rsp+0x20],rax
  412312:	call   0x41d170
  412317:	nop
  412318:	nop    DWORD PTR [rax+rax*1+0x0]
  412320:	sub    rsp,0x38
  412324:	test   rcx,rcx
  412327:	je     0x41233a
  412329:	mov    rax,QWORD PTR [rcx]
  41232c:	test   rax,rax
  41232f:	je     0x412365
  412331:	mov    rax,QWORD PTR [rax+0x8]
  412335:	add    rsp,0x38
  412339:	ret    
  41233a:	lea    rax,[rip+0x24f67]        # 0x4372a8
  412341:	lea    r9,[rip+0x251d8]        # 0x437520
  412348:	lea    r8,[rip+0x24f31]        # 0x437280
  41234f:	lea    rcx,[rip+0x24f45]        # 0x43729b
  412356:	mov    QWORD PTR [rsp+0x20],rax
  41235b:	mov    edx,0x5e
  412360:	call   0x41d170
  412365:	lea    rax,[rip+0x24f7d]        # 0x4372e9
  41236c:	jmp    0x412341
  41236e:	xchg   ax,ax
  412370:	sub    rsp,0x28
  412374:	test   rcx,rcx
  412377:	je     0x412387
  412379:	xor    eax,eax
  41237b:	cmp    QWORD PTR [rcx],0x0
  41237f:	sete   al
  412382:	add    rsp,0x28
  412386:	ret    
  412387:	call   0x42b550
  41238c:	nop
  41238d:	nop    DWORD PTR [rax]
  412390:	push   rbx
  412391:	sub    rsp,0x30
  412395:	test   rcx,rcx
  412398:	mov    rbx,rdx
  41239b:	je     0x412415
  41239d:	test   rdx,rdx
  4123a0:	je     0x4123ea
  4123a2:	mov    rax,QWORD PTR [rdx]
  4123a5:	test   rax,rax
  4123a8:	je     0x4123ea
  4123aa:	cmp    rax,QWORD PTR [rcx]
  4123ad:	je     0x4123d4
  4123af:	cmp    rax,QWORD PTR [rcx+0x8]
  4123b3:	je     0x4123e0
  4123b5:	mov    rcx,QWORD PTR [rax]
  4123b8:	mov    rdx,QWORD PTR [rdx+0x8]
  4123bc:	mov    QWORD PTR [rdx],rcx
  4123bf:	mov    rcx,rax
  4123c2:	call   0x41a7c0
  4123c7:	mov    QWORD PTR [rbx],0x0
  4123ce:	add    rsp,0x30
  4123d2:	pop    rbx
  4123d3:	ret    
  4123d4:	cmp    rax,QWORD PTR [rcx+0x8]
  4123d8:	mov    rdx,QWORD PTR [rax]
  4123db:	mov    QWORD PTR [rcx],rdx
  4123de:	jne    0x4123bf
  4123e0:	mov    rdx,QWORD PTR [rbx+0x8]
  4123e4:	mov    QWORD PTR [rcx+0x8],rdx
  4123e8:	jmp    0x4123bf
  4123ea:	lea    rax,[rip+0x24f0f]        # 0x437300
  4123f1:	lea    r9,[rip+0x25088]        # 0x437480
  4123f8:	lea    r8,[rip+0x24e81]        # 0x437280
  4123ff:	lea    rcx,[rip+0x24e95]        # 0x43729b
  412406:	mov    QWORD PTR [rsp+0x20],rax
  41240b:	mov    edx,0x5e
  412410:	call   0x41d170
  412415:	lea    rax,[rip+0x24e8c]        # 0x4372a8
  41241c:	jmp    0x4123f1
  41241e:	xchg   ax,ax
  412420:	push   r12
  412422:	push   rbp
  412423:	push   rdi
  412424:	push   rsi
  412425:	push   rbx
  412426:	sub    rsp,0x40
  41242a:	test   rcx,rcx
  41242d:	mov    rsi,rcx
  412430:	mov    rbp,rdx
  412433:	mov    r12,r8
  412436:	mov    QWORD PTR [rsp+0x30],0x0
  41243f:	mov    QWORD PTR [rsp+0x38],0x0
  412448:	je     0x4124b0
  41244a:	mov    rax,QWORD PTR [rcx]
  41244d:	lea    rdi,[rsp+0x30]
  412452:	test   rax,rax
  412455:	mov    QWORD PTR [rsp+0x30],rax
  41245a:	jne    0x41247c
  41245c:	jmp    0x4124a0
  41245e:	xchg   ax,ax
  412460:	mov    rax,QWORD PTR [rsp+0x30]
  412465:	test   rax,rax
  412468:	je     0x41246f
  41246a:	mov    QWORD PTR [rsp+0x38],rax
  41246f:	test   rbx,rbx
  412472:	mov    QWORD PTR [rsp+0x30],rbx
  412477:	mov    rax,rbx
  41247a:	je     0x4124a0
  41247c:	mov    rbx,QWORD PTR [rax]
  41247f:	mov    r9,r12
  412482:	mov    r8,QWORD PTR [rax+0x8]
  412486:	mov    rdx,rdi
  412489:	mov    rcx,rsi
  41248c:	call   rbp
  41248e:	test   eax,eax
  412490:	jne    0x412460
  412492:	add    rsp,0x40
  412496:	pop    rbx
  412497:	pop    rsi
  412498:	pop    rdi
  412499:	pop    rbp
  41249a:	pop    r12
  41249c:	ret    
  41249d:	nop    DWORD PTR [rax]
  4124a0:	mov    eax,0x1
  4124a5:	add    rsp,0x40
  4124a9:	pop    rbx
  4124aa:	pop    rsi
  4124ab:	pop    rdi
  4124ac:	pop    rbp
  4124ad:	pop    r12
  4124af:	ret    
  4124b0:	lea    rax,[rip+0x24df1]        # 0x4372a8
  4124b7:	lea    r9,[rip+0x24f02]        # 0x4373c0
  4124be:	lea    r8,[rip+0x24dbb]        # 0x437280
  4124c5:	lea    rcx,[rip+0x24dcf]        # 0x43729b
  4124cc:	mov    edx,0x5e
  4124d1:	mov    QWORD PTR [rsp+0x20],rax
  4124d6:	call   0x41d170
  4124db:	nop
  4124dc:	nop    DWORD PTR [rax+0x0]
  4124e0:	push   rbx
  4124e1:	sub    rsp,0x20
  4124e5:	mov    rbx,rcx
  4124e8:	mov    ecx,0x18
  4124ed:	call   0x41a6e0
  4124f2:	mov    QWORD PTR [rax],0x0
  4124f9:	mov    QWORD PTR [rax+0x8],0x0
  412501:	mov    QWORD PTR [rax+0x10],rbx
  412505:	add    rsp,0x20
  412509:	pop    rbx
  41250a:	ret    
  41250b:	nop    DWORD PTR [rax+rax*1+0x0]
  412510:	sub    rsp,0x38
  412514:	test   rcx,rcx
  412517:	je     0x412533
  412519:	mov    rdx,QWORD PTR [rcx]
  41251c:	xor    eax,eax
  41251e:	test   rdx,rdx
  412521:	je     0x41252e
  412523:	mov    rdx,QWORD PTR [rdx]
  412526:	add    eax,0x1
  412529:	test   rdx,rdx
  41252c:	jne    0x412523
  41252e:	add    rsp,0x38
  412532:	ret    
  412533:	lea    rax,[rip+0x24d6e]        # 0x4372a8
  41253a:	lea    r9,[rip+0x24e3f]        # 0x437380
  412541:	lea    r8,[rip+0x24d38]        # 0x437280
  412548:	lea    rcx,[rip+0x24d4c]        # 0x43729b
  41254f:	mov    edx,0x5e
  412554:	mov    QWORD PTR [rsp+0x20],rax
  412559:	call   0x41d170
  41255e:	nop
  41255f:	nop
  412560:	push   rdi
  412561:	push   rsi
  412562:	push   rbx
  412563:	sub    rsp,0x30
  412567:	test   rcx,rcx
  41256a:	mov    rdi,rcx
  41256d:	je     0x4125b1
  41256f:	mov    rbx,QWORD PTR [rcx]
  412572:	test   rbx,rbx
  412575:	je     0x4125a2
  412577:	nop    WORD PTR [rax+rax*1+0x0]
  412580:	mov    rax,QWORD PTR [rdi+0x10]
  412584:	mov    rsi,QWORD PTR [rbx]
  412587:	test   rax,rax
  41258a:	je     0x412592
  41258c:	mov    rcx,QWORD PTR [rbx+0x8]
  412590:	call   rax
  412592:	mov    rcx,rbx
  412595:	mov    rbx,rsi
  412598:	call   0x41a7c0
  41259d:	test   rsi,rsi
  4125a0:	jne    0x412580
  4125a2:	mov    rcx,rdi
  4125a5:	add    rsp,0x30
  4125a9:	pop    rbx
  4125aa:	pop    rsi
  4125ab:	pop    rdi
  4125ac:	jmp    0x41a7c0
  4125b1:	lea    rax,[rip+0x24cf0]        # 0x4372a8
  4125b8:	lea    r9,[rip+0x24d81]        # 0x437340
  4125bf:	lea    r8,[rip+0x24cba]        # 0x437280
  4125c6:	lea    rcx,[rip+0x24cce]        # 0x43729b
  4125cd:	mov    edx,0x5e
  4125d2:	mov    QWORD PTR [rsp+0x20],rax
  4125d7:	call   0x41d170
  4125dc:	nop
  4125dd:	nop    DWORD PTR [rax]
  4125e0:	sub    rsp,0x28
  4125e4:	mov    ecx,0x18
  4125e9:	call   0x41a6e0
  4125ee:	lea    rdx,[rip+0xfffffffffffffb5b]        # 0x412150
  4125f5:	mov    QWORD PTR [rax],0x0
  4125fc:	mov    QWORD PTR [rax+0x8],0x0
  412604:	mov    QWORD PTR [rip+0x3c0f5],rax        # 0x44e700
  41260b:	mov    QWORD PTR [rax+0x10],rdx
  41260f:	add    rsp,0x28
  412613:	ret    
  412614:	xchg   ax,ax
  412616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412620:	push   rsi
  412621:	push   rbx
  412622:	sub    rsp,0x28
  412626:	mov    rsi,rcx
  412629:	mov    ecx,0x20
  41262e:	mov    rbx,rdx
  412631:	call   0x41a6e0
  412636:	mov    r8,rax
  412639:	mov    eax,DWORD PTR [rip+0x3b451]        # 0x44da90
  41263f:	cmp    QWORD PTR [rip+0x3b439],0x0        # 0x44da80
  412647:	mov    QWORD PTR [r8+0x8],rsi
  41264b:	mov    QWORD PTR [r8+0x10],rbx
  41264f:	mov    QWORD PTR [r8+0x18],0x0
  412657:	lea    edx,[rax+0x1]
  41265a:	mov    DWORD PTR [r8],eax
  41265d:	mov    DWORD PTR [rip+0x3b42d],edx        # 0x44da90
  412663:	je     0x412683
  412665:	mov    rdx,QWORD PTR [rip+0x3b41c]        # 0x44da88
  41266c:	test   rdx,rdx
  41266f:	je     0x412675
  412671:	mov    QWORD PTR [rdx+0x18],r8
  412675:	mov    QWORD PTR [rip+0x3b40c],r8        # 0x44da88
  41267c:	add    rsp,0x28
  412680:	pop    rbx
  412681:	pop    rsi
  412682:	ret    
  412683:	mov    QWORD PTR [rip+0x3b3f6],r8        # 0x44da80
  41268a:	jmp    0x412665
  41268c:	nop    DWORD PTR [rax+0x0]
  412690:	mov    rdx,QWORD PTR [rip+0x3b3e9]        # 0x44da80
  412697:	test   rdx,rdx
  41269a:	je     0x4126b2
  41269c:	cmp    DWORD PTR [rdx],ecx
  41269e:	jne    0x4126a9
  4126a0:	jmp    0x4126e3
  4126a2:	cmp    DWORD PTR [rax],ecx
  4126a4:	je     0x4126b4
  4126a6:	mov    rdx,rax
  4126a9:	mov    rax,QWORD PTR [rdx+0x18]
  4126ad:	test   rax,rax
  4126b0:	jne    0x4126a2
  4126b2:	repz ret 
  4126b4:	add    rdx,0x18
  4126b8:	mov    rcx,QWORD PTR [rax+0x18]
  4126bc:	mov    QWORD PTR [rdx],rcx
  4126bf:	cmp    rax,QWORD PTR [rip+0x3b3c2]        # 0x44da88
  4126c6:	je     0x4126d0
  4126c8:	mov    rcx,rax
  4126cb:	jmp    0x42a6c8
  4126d0:	mov    rcx,rax
  4126d3:	mov    QWORD PTR [rip+0x3b3aa],0x0        # 0x44da88
  4126de:	jmp    0x42a6c8
  4126e3:	mov    rax,rdx
  4126e6:	lea    rdx,[rip+0x3b393]        # 0x44da80
  4126ed:	jmp    0x4126b8
  4126ef:	nop
  4126f0:	push   rbp
  4126f1:	push   rdi
  4126f2:	push   rsi
  4126f3:	push   rbx
  4126f4:	sub    rsp,0x28
  4126f8:	mov    rax,QWORD PTR [rip+0x3b3c1]        # 0x44dac0
  4126ff:	mov    rbx,rcx
  412702:	mov    rdi,rdx
  412705:	mov    rbp,r8
  412708:	test   rax,rax
  41270b:	jne    0x412719
  41270d:	jmp    0x412740
  41270f:	nop
  412710:	mov    rax,QWORD PTR [rax+0x28]
  412714:	test   rax,rax
  412717:	je     0x412740
  412719:	cmp    rbx,QWORD PTR [rax]
  41271c:	jne    0x412710
  41271e:	mov    QWORD PTR [rax+0x10],rdi
  412722:	mov    QWORD PTR [rax+0x18],rbp
  412726:	mov    DWORD PTR [rax+0x8],0xa
  41272d:	add    rsp,0x28
  412731:	pop    rbx
  412732:	pop    rsi
  412733:	pop    rdi
  412734:	pop    rbp
  412735:	ret    
  412736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412740:	mov    ecx,0x30
  412745:	call   0x41a6e0
  41274a:	mov    rdx,QWORD PTR [rip+0x3b36f]        # 0x44dac0
  412751:	mov    QWORD PTR [rax],rbx
  412754:	mov    DWORD PTR [rax+0xc],0x0
  41275b:	mov    QWORD PTR [rip+0x3b35e],rax        # 0x44dac0
  412762:	mov    QWORD PTR [rax+0x28],rdx
  412766:	mov    edx,DWORD PTR [rip+0x3b35c]        # 0x44dac8
  41276c:	test   edx,edx
  41276e:	je     0x412851
  412774:	cmp    rbx,QWORD PTR [rip+0x3b355]        # 0x44dad0
  41277b:	je     0x41279b
  41277d:	lea    r8,[rip+0x3b354]        # 0x44dad8
  412784:	xor    ecx,ecx
  412786:	add    ecx,0x1
  412789:	cmp    ecx,edx
  41278b:	je     0x412848
  412791:	add    r8,0x8
  412795:	cmp    rbx,QWORD PTR [r8-0x8]
  412799:	jne    0x412786
  41279b:	mov    esi,DWORD PTR [rip+0x3b52f]        # 0x44dcd0
  4127a1:	test   esi,esi
  4127a3:	je     0x4127d5
  4127a5:	xor    ecx,ecx
  4127a7:	cmp    rbx,QWORD PTR [rip+0x3b52a]        # 0x44dcd8
  4127ae:	lea    rdx,[rip+0x3b52b]        # 0x44dce0
  4127b5:	jne    0x4127ce
  4127b7:	jmp    0x41286d
  4127bc:	nop    DWORD PTR [rax+0x0]
  4127c0:	add    rdx,0x8
  4127c4:	cmp    rbx,QWORD PTR [rdx-0x8]
  4127c8:	je     0x41286f
  4127ce:	add    ecx,0x1
  4127d1:	cmp    ecx,esi
  4127d3:	jne    0x4127c0
  4127d5:	mov    r8d,DWORD PTR [rip+0x3b6fc]        # 0x44ded8
  4127dc:	test   r8d,r8d
  4127df:	je     0x41280d
  4127e1:	cmp    rbx,QWORD PTR [rip+0x3b6f8]        # 0x44dee0
  4127e8:	je     0x41282a
  4127ea:	lea    rcx,[rip+0x3b6f7]        # 0x44dee8
  4127f1:	xor    edx,edx
  4127f3:	jmp    0x4127ff
  4127f5:	add    rcx,0x8
  4127f9:	cmp    rbx,QWORD PTR [rcx-0x8]
  4127fd:	je     0x41282a
  4127ff:	add    edx,0x1
  412802:	cmp    edx,r8d
  412805:	jne    0x4127f5
  412807:	cmp    r8d,0x3f
  41280b:	ja     0x41282a
  41280d:	lea    rdx,[rip+0x3b2ac]        # 0x44dac0
  412814:	mov    ecx,r8d
  412817:	add    r8d,0x1
  41281b:	mov    DWORD PTR [rip+0x3b6b6],r8d        # 0x44ded8
  412822:	mov    QWORD PTR [rdx+rcx*8+0x420],rbx
  41282a:	movsxd rdx,DWORD PTR [rip+0x3bec7]        # 0x44e6f8
  412831:	cmp    rbx,rdx
  412834:	jb     0x41271e
  41283a:	add    ebx,0x1
  41283d:	mov    DWORD PTR [rip+0x3beb5],ebx        # 0x44e6f8
  412843:	jmp    0x41271e
  412848:	cmp    edx,0x3f
  41284b:	ja     0x41279b
  412851:	lea    r10,[rip+0x3b268]        # 0x44dac0
  412858:	mov    ecx,edx
  41285a:	add    edx,0x1
  41285d:	mov    DWORD PTR [rip+0x3b265],edx        # 0x44dac8
  412863:	mov    QWORD PTR [r10+rcx*8+0x10],rbx
  412868:	jmp    0x41279b
  41286d:	xor    ecx,ecx
  41286f:	sub    esi,0x1
  412872:	cmp    esi,ecx
  412874:	jbe    0x41289e
  412876:	lea    r10,[rip+0x3b243]        # 0x44dac0
  41287d:	nop    DWORD PTR [rax]
  412880:	lea    r11d,[rcx+0x1]
  412884:	mov    r9,r11
  412887:	mov    r11,QWORD PTR [r10+r11*8+0x218]
  41288f:	mov    QWORD PTR [r10+rcx*8+0x218],r11
  412897:	mov    ecx,r9d
  41289a:	cmp    esi,ecx
  41289c:	jne    0x412880
  41289e:	mov    DWORD PTR [rip+0x3b42c],esi        # 0x44dcd0
  4128a4:	jmp    0x4127d5
  4128a9:	nop    DWORD PTR [rax+0x0]
  4128b0:	push   rbp
  4128b1:	push   rdi
  4128b2:	push   rsi
  4128b3:	push   rbx
  4128b4:	sub    rsp,0x28
  4128b8:	mov    r10,QWORD PTR [rip+0x3b201]        # 0x44dac0
  4128bf:	test   r10,r10
  4128c2:	je     0x4128de
  4128c4:	cmp    QWORD PTR [r10],rcx
  4128c7:	mov    rbx,r10
  4128ca:	jne    0x4128d5
  4128cc:	jmp    0x4128f0
  4128ce:	xchg   ax,ax
  4128d0:	cmp    QWORD PTR [rbx],rcx
  4128d3:	je     0x4128f0
  4128d5:	mov    rbx,QWORD PTR [rbx+0x28]
  4128d9:	test   rbx,rbx
  4128dc:	jne    0x4128d0
  4128de:	add    rsp,0x28
  4128e2:	pop    rbx
  4128e3:	pop    rsi
  4128e4:	pop    rdi
  4128e5:	pop    rbp
  4128e6:	ret    
  4128e7:	nop    WORD PTR [rax+rax*1+0x0]
  4128f0:	mov    r11d,DWORD PTR [rbx+0x8]
  4128f4:	test   r11b,0x2
  4128f8:	je     0x412935
  4128fa:	mov    esi,DWORD PTR [rip+0x3b1c8]        # 0x44dac8
  412900:	test   esi,esi
  412902:	je     0x412935
  412904:	cmp    QWORD PTR [rip+0x3b1c5],rcx        # 0x44dad0
  41290b:	je     0x412adc
  412911:	lea    rdx,[rip+0x3b1c0]        # 0x44dad8
  412918:	xor    eax,eax
  41291a:	jmp    0x41292e
  41291c:	nop    DWORD PTR [rax+0x0]
  412920:	add    rdx,0x8
  412924:	cmp    QWORD PTR [rdx-0x8],rcx
  412928:	je     0x412ae0
  41292e:	add    eax,0x1
  412931:	cmp    eax,esi
  412933:	jne    0x412920
  412935:	test   r11b,0x4
  412939:	je     0x412975
  41293b:	mov    esi,DWORD PTR [rip+0x3b38f]        # 0x44dcd0
  412941:	test   esi,esi
  412943:	je     0x412975
  412945:	xor    eax,eax
  412947:	cmp    QWORD PTR [rip+0x3b38a],rcx        # 0x44dcd8
  41294e:	lea    rdx,[rip+0x3b38b]        # 0x44dce0
  412955:	jne    0x41296e
  412957:	jmp    0x412b13
  41295c:	nop    DWORD PTR [rax+0x0]
  412960:	add    rdx,0x8
  412964:	cmp    QWORD PTR [rdx-0x8],rcx
  412968:	je     0x412b15
  41296e:	add    eax,0x1
  412971:	cmp    eax,esi
  412973:	jne    0x412960
  412975:	and    r11d,0x8
  412979:	je     0x4129b6
  41297b:	mov    r11d,DWORD PTR [rip+0x3b556]        # 0x44ded8
  412982:	test   r11d,r11d
  412985:	je     0x4129b6
  412987:	xor    eax,eax
  412989:	cmp    QWORD PTR [rip+0x3b550],rcx        # 0x44dee0
  412990:	lea    rdx,[rip+0x3b551]        # 0x44dee8
  412997:	jne    0x4129ae
  412999:	jmp    0x412a9f
  41299e:	xchg   ax,ax
  4129a0:	add    rdx,0x8
  4129a4:	cmp    QWORD PTR [rdx-0x8],rcx
  4129a8:	je     0x412aa1
  4129ae:	add    eax,0x1
  4129b1:	cmp    eax,r11d
  4129b4:	jne    0x4129a0
  4129b6:	movsxd rax,DWORD PTR [rip+0x3bd3b]        # 0x44e6f8
  4129bd:	add    rcx,0x1
  4129c1:	mov    rdx,r10
  4129c4:	cmp    rcx,rax
  4129c7:	mov    rdi,rax
  4129ca:	je     0x412a04
  4129cc:	cmp    rdx,rbx
  4129cf:	mov    DWORD PTR [rbx+0x8],0x0
  4129d6:	jne    0x4129e3
  4129d8:	jmp    0x412a62
  4129dd:	nop    DWORD PTR [rax]
  4129e0:	mov    rdx,rax
  4129e3:	mov    rax,QWORD PTR [rdx+0x28]
  4129e7:	cmp    rax,rbx
  4129ea:	jne    0x4129e0
  4129ec:	mov    rax,QWORD PTR [rbx+0x28]
  4129f0:	mov    rcx,rbx
  4129f3:	mov    QWORD PTR [rdx+0x28],rax
  4129f7:	add    rsp,0x28
  4129fb:	pop    rbx
  4129fc:	pop    rsi
  4129fd:	pop    rdi
  4129fe:	pop    rbp
  4129ff:	jmp    0x42a6c8
  412a04:	sub    edi,0x1
  412a07:	test   edi,edi
  412a09:	mov    DWORD PTR [rip+0x3bce9],edi        # 0x44e6f8
  412a0f:	je     0x412b4c
  412a15:	movsxd rsi,edi
  412a18:	sub    rsi,0x1
  412a1c:	nop    DWORD PTR [rax+0x0]
  412a20:	lea    rdx,[rip+0x3b0a1]        # 0x44dac8
  412a27:	mov    rcx,rsi
  412a2a:	lea    ebp,[rdi-0x1]
  412a2d:	call   0x4241b8
  412a32:	test   eax,eax
  412a34:	jne    0x412a49
  412a36:	lea    rdx,[rip+0x3b293]        # 0x44dcd0
  412a3d:	mov    rcx,rsi
  412a40:	call   0x4241b8
  412a45:	test   eax,eax
  412a47:	je     0x412a80
  412a49:	mov    rdx,QWORD PTR [rip+0x3b070]        # 0x44dac0
  412a50:	cmp    rdx,rbx
  412a53:	mov    DWORD PTR [rip+0x3bc9f],edi        # 0x44e6f8
  412a59:	mov    DWORD PTR [rbx+0x8],0x0
  412a60:	jne    0x4129e3
  412a62:	mov    rax,QWORD PTR [rbx+0x28]
  412a66:	mov    rcx,rbx
  412a69:	mov    QWORD PTR [rip+0x3b050],rax        # 0x44dac0
  412a70:	add    rsp,0x28
  412a74:	pop    rbx
  412a75:	pop    rsi
  412a76:	pop    rdi
  412a77:	pop    rbp
  412a78:	jmp    0x42a6c8
  412a7d:	nop    DWORD PTR [rax]
  412a80:	lea    rdx,[rip+0x3b451]        # 0x44ded8
  412a87:	mov    rcx,rsi
  412a8a:	call   0x4241b8
  412a8f:	test   eax,eax
  412a91:	jne    0x412a49
  412a93:	sub    rsi,0x1
  412a97:	test   ebp,ebp
  412a99:	mov    edi,ebp
  412a9b:	jne    0x412a20
  412a9d:	jmp    0x412a49
  412a9f:	xor    eax,eax
  412aa1:	sub    r11d,0x1
  412aa5:	cmp    r11d,eax
  412aa8:	jbe    0x412ad0
  412aaa:	lea    rdx,[rip+0x3b00f]        # 0x44dac0
  412ab1:	lea    r9d,[rax+0x1]
  412ab5:	mov    r8,r9
  412ab8:	mov    r9,QWORD PTR [rdx+r9*8+0x420]
  412ac0:	mov    QWORD PTR [rdx+rax*8+0x420],r9
  412ac8:	mov    eax,r8d
  412acb:	cmp    eax,r11d
  412ace:	jne    0x412ab1
  412ad0:	mov    DWORD PTR [rip+0x3b401],r11d        # 0x44ded8
  412ad7:	jmp    0x4129b6
  412adc:	xor    eax,eax
  412ade:	xchg   ax,ax
  412ae0:	sub    esi,0x1
  412ae3:	cmp    eax,esi
  412ae5:	jae    0x412b08
  412ae7:	lea    rdx,[rip+0x3afd2]        # 0x44dac0
  412aee:	xchg   ax,ax
  412af0:	lea    r9d,[rax+0x1]
  412af4:	mov    r8,r9
  412af7:	mov    r9,QWORD PTR [rdx+r9*8+0x10]
  412afc:	mov    QWORD PTR [rdx+rax*8+0x10],r9
  412b01:	mov    eax,r8d
  412b04:	cmp    eax,esi
  412b06:	jne    0x412af0
  412b08:	mov    DWORD PTR [rip+0x3afba],esi        # 0x44dac8
  412b0e:	jmp    0x412935
  412b13:	xor    eax,eax
  412b15:	sub    esi,0x1
  412b18:	cmp    eax,esi
  412b1a:	jae    0x412b41
  412b1c:	lea    rdx,[rip+0x3af9d]        # 0x44dac0
  412b23:	lea    r9d,[rax+0x1]
  412b27:	mov    r8,r9
  412b2a:	mov    r9,QWORD PTR [rdx+r9*8+0x218]
  412b32:	mov    QWORD PTR [rdx+rax*8+0x218],r9
  412b3a:	mov    eax,r8d
  412b3d:	cmp    eax,esi
  412b3f:	jne    0x412b23
  412b41:	mov    DWORD PTR [rip+0x3b189],esi        # 0x44dcd0
  412b47:	jmp    0x412975
  412b4c:	mov    rdx,r10
  412b4f:	jmp    0x412a50
  412b54:	xchg   ax,ax
  412b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b60:	push   rbp
  412b61:	push   rdi
  412b62:	push   rsi
  412b63:	push   rbx
  412b64:	sub    rsp,0x38
  412b68:	nop    DWORD PTR [rax+rax*1+0x0]
  412b70:	mov    rcx,QWORD PTR [rip+0x3bb89]        # 0x44e700
  412b77:	test   rcx,rcx
  412b7a:	je     0x412d5f
  412b80:	cmp    QWORD PTR [rcx],0x0
  412b84:	je     0x412bb0
  412b86:	call   0x412280
  412b8b:	mov    rsi,QWORD PTR [rax+0x8]
  412b8f:	mov    rcx,rax
  412b92:	mov    rbx,QWORD PTR [rax]
  412b95:	call   0x41a7c0
  412b9a:	mov    rcx,rsi
  412b9d:	call   rbx
  412b9f:	test   eax,eax
  412ba1:	je     0x412b70
  412ba3:	add    rsp,0x38
  412ba7:	pop    rbx
  412ba8:	pop    rsi
  412ba9:	pop    rdi
  412baa:	pop    rbp
  412bab:	ret    
  412bac:	nop    DWORD PTR [rax+0x0]
  412bb0:	mov    rcx,QWORD PTR [rip+0x3aec9]        # 0x44da80
  412bb7:	test   rcx,rcx
  412bba:	je     0x412bf1
  412bbc:	mov    rdx,QWORD PTR [rcx+0x18]
  412bc0:	mov    rbx,QWORD PTR [rcx+0x8]
  412bc4:	mov    rsi,QWORD PTR [rcx+0x10]
  412bc8:	test   rdx,rdx
  412bcb:	mov    QWORD PTR [rip+0x3aeae],rdx        # 0x44da80
  412bd2:	je     0x412be4
  412bd4:	call   0x42a6c8
  412bd9:	mov    rcx,rsi
  412bdc:	call   rbx
  412bde:	test   eax,eax
  412be0:	je     0x412b70
  412be2:	jmp    0x412ba3
  412be4:	mov    QWORD PTR [rip+0x3ae99],0x0        # 0x44da88
  412bef:	jmp    0x412bd4
  412bf1:	call   QWORD PTR [rip+0x3eb59]        # 0x451750
  412bf7:	lea    rcx,[rax+0x30]
  412bfb:	call   0x42a6f0
  412c00:	call   QWORD PTR [rip+0x3eb4a]        # 0x451750
  412c06:	lea    rcx,[rax+0x60]
  412c0a:	call   0x42a6f0
  412c0f:	mov    eax,DWORD PTR [rip+0x3bae3]        # 0x44e6f8
  412c15:	test   eax,eax
  412c17:	je     0x412ba3
  412c19:	lea    rdx,[rip+0x3b4c0]        # 0x44e0e0
  412c20:	lea    rsi,[rip+0x3aea1]        # 0x44dac8
  412c27:	mov    ecx,0x41
  412c2c:	mov    rdi,rdx
  412c2f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  412c32:	mov    r8,rdi
  412c35:	mov    cl,0x41
  412c37:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  412c3a:	mov    r9,rdi
  412c3d:	mov    cl,0x41
  412c3f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  412c42:	mov    QWORD PTR [rsp+0x20],0x0
  412c4b:	mov    ecx,eax
  412c4d:	call   QWORD PTR [rip+0x3ed95]        # 0x4519e8
  412c53:	cmp    eax,0xffffffff
  412c56:	mov    edi,eax
  412c58:	je     0x412cf4
  412c5e:	test   eax,eax
  412c60:	mov    rsi,QWORD PTR [rip+0x3ae59]        # 0x44dac0
  412c67:	jg     0x412ca6
  412c69:	jmp    0x412b70
  412c6e:	xchg   ax,ax
  412c70:	mov    rcx,QWORD PTR [rsi]
  412c73:	lea    rdx,[rip+0x3b876]        # 0x44e4f0
  412c7a:	or     ebx,0x4
  412c7d:	call   0x4241b8
  412c82:	test   eax,eax
  412c84:	je     0x412c89
  412c86:	or     ebx,0x8
  412c89:	mov    eax,DWORD PTR [rsi+0xc]
  412c8c:	sub    edi,0x1
  412c8f:	test   eax,eax
  412c91:	je     0x412d30
  412c97:	mov    DWORD PTR [rsi+0xc],ebx
  412c9a:	test   edi,edi
  412c9c:	mov    rsi,QWORD PTR [rsi+0x28]
  412ca0:	jle    0x412b70
  412ca6:	test   rsi,rsi
  412ca9:	je     0x412b70
  412caf:	mov    rcx,QWORD PTR [rsi]
  412cb2:	lea    rdx,[rip+0x3b427]        # 0x44e0e0
  412cb9:	call   0x4241b8
  412cbe:	mov    rcx,QWORD PTR [rsi]
  412cc1:	cmp    eax,0x1
  412cc4:	lea    rdx,[rip+0x3b61d]        # 0x44e2e8
  412ccb:	sbb    ebx,ebx
  412ccd:	not    ebx
  412ccf:	and    ebx,0x2
  412cd2:	call   0x4241b8
  412cd7:	test   eax,eax
  412cd9:	jne    0x412c70
  412cdb:	mov    rcx,QWORD PTR [rsi]
  412cde:	lea    rdx,[rip+0x3b80b]        # 0x44e4f0
  412ce5:	call   0x4241b8
  412cea:	test   eax,eax
  412cec:	jne    0x412c86
  412cee:	test   ebx,ebx
  412cf0:	je     0x412c9a
  412cf2:	jmp    0x412c89
  412cf4:	mov    DWORD PTR [rip+0x3b3e2],0x0        # 0x44e0e0
  412cfe:	mov    DWORD PTR [rip+0x3b5e0],0x0        # 0x44e2e8
  412d08:	mov    DWORD PTR [rip+0x3b7de],0x0        # 0x44e4f0
  412d12:	call   QWORD PTR [rip+0x3ea78]        # 0x451790
  412d18:	cmp    DWORD PTR [rax],0x4
  412d1b:	je     0x412b70
  412d21:	lea    rcx,[rip+0x245f8]        # 0x437320
  412d28:	call   0x40e760
  412d2d:	nop    DWORD PTR [rax]
  412d30:	mov    rbp,QWORD PTR [rsi]
  412d33:	mov    ecx,0x10
  412d38:	call   0x41a6e0
  412d3d:	lea    rdx,[rip+0xfffffffffffff41c]        # 0x412160
  412d44:	mov    rcx,QWORD PTR [rip+0x3b9b5]        # 0x44e700
  412d4b:	mov    QWORD PTR [rax+0x8],rbp
  412d4f:	mov    QWORD PTR [rax],rdx
  412d52:	mov    rdx,rax
  412d55:	call   0x412200
  412d5a:	jmp    0x412c97
  412d5f:	call   0x42b550
  412d64:	nop
  412d65:	nop
  412d66:	nop
  412d67:	nop
  412d68:	nop
  412d69:	nop
  412d6a:	nop
  412d6b:	nop
  412d6c:	nop
  412d6d:	nop
  412d6e:	nop
  412d6f:	nop
  412d70:	push   rbx
  412d71:	mov    rax,QWORD PTR [rip+0x3ba08]        # 0x44e780
  412d78:	cmp    WORD PTR [rax],0x0
  412d7c:	je     0x412dca
  412d7e:	test   ecx,ecx
  412d80:	je     0x412dcc
  412d82:	mov    r11,QWORD PTR [rip+0x3ba0f]        # 0x44e798
  412d89:	xor    r8d,r8d
  412d8c:	xor    ebx,ebx
  412d8e:	mov    r10,r11
  412d91:	sub    r10,QWORD PTR [rip+0x3ba10]        # 0x44e7a8
  412d98:	neg    r10
  412d9b:	jmp    0x412da5
  412d9d:	nop    DWORD PTR [rax]
  412da0:	cmp    ecx,r8d
  412da3:	je     0x412dcc
  412da5:	mov    edx,DWORD PTR [rax+0x4]
  412da8:	add    r8d,0x1
  412dac:	add    rdx,0x8
  412db0:	lea    r9,[rax+rdx*1]
  412db4:	cmp    r11,r9
  412db7:	mov    r9,rbx
  412dba:	cmovbe r9,r10
  412dbe:	add    rdx,r9
  412dc1:	add    rax,rdx
  412dc4:	cmp    WORD PTR [rax],0x0
  412dc8:	jne    0x412da0
  412dca:	xor    eax,eax
  412dcc:	pop    rbx
  412dcd:	ret    
  412dce:	xchg   ax,ax
  412dd0:	xor    eax,eax
  412dd2:	cmp    BYTE PTR [r8],cl
  412dd5:	sete   al
  412dd8:	ret    
  412dd9:	nop    DWORD PTR [rax+0x0]
  412de0:	push   rbp
  412de1:	push   rdi
  412de2:	push   rsi
  412de3:	push   rbx
  412de4:	sub    rsp,0x48
  412de8:	mov    rdi,QWORD PTR [rip+0x33681]        # 0x446470
  412def:	mov    rbp,rcx
  412df2:	lea    rsi,[rcx+0x8]
  412df6:	mov    edx,DWORD PTR [rdi]
  412df8:	test   edx,edx
  412dfa:	jle    0x412e87
  412e00:	mov    edx,ecx
  412e02:	lea    rcx,[rip+0x247f7]        # 0x437600
  412e09:	mov    r8d,0x8
  412e0f:	call   0x41d1b0
  412e14:	lea    rcx,[rip+0x24814]        # 0x43762f
  412e1b:	call   0x41d1b0
  412e20:	mov    edx,DWORD PTR [rdi]
  412e22:	test   edx,edx
  412e24:	jle    0x412e87
  412e26:	mov    rax,QWORD PTR [rip+0x3b97b]        # 0x44e7a8
  412e2d:	mov    rdx,QWORD PTR [rip+0x3b96c]        # 0x44e7a0
  412e34:	lea    rcx,[rip+0x247fd]        # 0x437638
  412e3b:	mov    r9d,DWORD PTR [rip+0x3b946]        # 0x44e788
  412e42:	mov    r8d,DWORD PTR [rip+0x3b937]        # 0x44e780
  412e49:	sub    rdx,rax
  412e4c:	mov    DWORD PTR [rsp+0x30],edx
  412e50:	mov    rdx,QWORD PTR [rip+0x3b941]        # 0x44e798
  412e57:	sub    r9d,eax
  412e5a:	sub    r8d,eax
  412e5d:	sub    rdx,rax
  412e60:	mov    DWORD PTR [rsp+0x28],edx
  412e64:	mov    rdx,QWORD PTR [rip+0x3b925]        # 0x44e790
  412e6b:	sub    rdx,rax
  412e6e:	mov    DWORD PTR [rsp+0x20],edx
  412e72:	xor    edx,edx
  412e74:	call   0x41d1b0
  412e79:	lea    rcx,[rip+0x247af]        # 0x43762f
  412e80:	call   0x41d1b0
  412e85:	mov    edx,DWORD PTR [rdi]
  412e87:	mov    rax,QWORD PTR [rip+0x3b902]        # 0x44e790
  412e8e:	jmp    0x412f4a
  412e93:	mov    ecx,DWORD PTR [rip+0x3b9a7]        # 0x44e840
  412e99:	test   ecx,ecx
  412e9b:	je     0x413071
  412ea1:	test   edx,edx
  412ea3:	jle    0x412ebf
  412ea5:	lea    rcx,[rip+0x24824]        # 0x4376d0
  412eac:	call   0x41d1b0
  412eb1:	lea    rcx,[rip+0x24777]        # 0x43762f
  412eb8:	call   0x41d1b0
  412ebd:	mov    edx,DWORD PTR [rdi]
  412ebf:	mov    rbx,QWORD PTR [rip+0x3b8ba]        # 0x44e780
  412ec6:	cmp    WORD PTR [rbx],0x0
  412eca:	je     0x4130a0
  412ed0:	mov    eax,DWORD PTR [rbx+0x4]
  412ed3:	mov    rcx,QWORD PTR [rip+0x3b8be]        # 0x44e798
  412eda:	sub    DWORD PTR [rip+0x3b897],0x1        # 0x44e778
  412ee1:	lea    r9,[rax+0x8]
  412ee5:	xor    eax,eax
  412ee7:	lea    r8,[rbx+r9*1]
  412eeb:	cmp    rcx,r8
  412eee:	ja     0x412efd
  412ef0:	sub    rcx,QWORD PTR [rip+0x3b8b1]        # 0x44e7a8
  412ef7:	mov    rax,rcx
  412efa:	neg    rax
  412efd:	add    rax,r9
  412f00:	add    rbx,rax
  412f03:	jae    0x412f31
  412f05:	test   edx,edx
  412f07:	jle    0x412f23
  412f09:	lea    rcx,[rip+0x24800]        # 0x437710
  412f10:	call   0x41d1b0
  412f15:	lea    rcx,[rip+0x24713]        # 0x43762f
  412f1c:	call   0x41d1b0
  412f21:	mov    edx,DWORD PTR [rdi]
  412f23:	mov    rax,QWORD PTR [rip+0x3b876]        # 0x44e7a0
  412f2a:	mov    QWORD PTR [rip+0x3b867],rax        # 0x44e798
  412f31:	test   edx,edx
  412f33:	mov    QWORD PTR [rip+0x3b846],rbx        # 0x44e780
  412f3a:	mov    QWORD PTR [rip+0x3b84f],rbx        # 0x44e790
  412f41:	mov    rax,rbx
  412f44:	jg     0x4130d0
  412f4a:	mov    rbx,QWORD PTR [rip+0x3b837]        # 0x44e788
  412f51:	cmp    rbx,rax
  412f54:	jbe    0x412fa4
  412f56:	lea    rcx,[rbx+rsi*1]
  412f5a:	cmp    QWORD PTR [rip+0x3b83f],rcx        # 0x44e7a0
  412f61:	jae    0x412fb1
  412f63:	test   edx,edx
  412f65:	jle    0x412f8f
  412f67:	lea    rcx,[rip+0x2470a]        # 0x437678
  412f6e:	call   0x41d1b0
  412f73:	lea    rcx,[rip+0x246b5]        # 0x43762f
  412f7a:	call   0x41d1b0
  412f7f:	mov    rbx,QWORD PTR [rip+0x3b802]        # 0x44e788
  412f86:	mov    rax,QWORD PTR [rip+0x3b803]        # 0x44e790
  412f8d:	mov    edx,DWORD PTR [rdi]
  412f8f:	mov    QWORD PTR [rip+0x3b802],rbx        # 0x44e798
  412f96:	mov    rbx,QWORD PTR [rip+0x3b80b]        # 0x44e7a8
  412f9d:	mov    QWORD PTR [rip+0x3b7e4],rbx        # 0x44e788
  412fa4:	lea    rcx,[rbx+rsi*1]
  412fa8:	cmp    rax,rcx
  412fab:	jb     0x412e93
  412fb1:	lea    rax,[rbx+rbp*1]
  412fb5:	test   edx,edx
  412fb7:	mov    QWORD PTR [rip+0x3b7ca],rax        # 0x44e788
  412fbe:	mov    BYTE PTR [rax],0x0
  412fc1:	mov    BYTE PTR [rax+0x1],0x0
  412fc5:	mov    rax,QWORD PTR [rip+0x3b7bc]        # 0x44e788
  412fcc:	mov    BYTE PTR [rax+0x4],0x0
  412fd0:	mov    BYTE PTR [rax+0x5],0x0
  412fd4:	mov    BYTE PTR [rax+0x6],0x0
  412fd8:	mov    BYTE PTR [rax+0x7],0x0
  412fdc:	jle    0x413130
  412fe2:	lea    rcx,[rip+0x2479b]        # 0x437784
  412fe9:	mov    edx,ebp
  412feb:	call   0x41d1b0
  412ff0:	lea    rcx,[rip+0x24638]        # 0x43762f
  412ff7:	call   0x41d1b0
  412ffc:	mov    eax,DWORD PTR [rdi]
  412ffe:	test   eax,eax
  413000:	jle    0x413130
  413006:	mov    rax,QWORD PTR [rip+0x3b79b]        # 0x44e7a8
  41300d:	mov    rdx,QWORD PTR [rip+0x3b78c]        # 0x44e7a0
  413014:	lea    rcx,[rip+0x2461d]        # 0x437638
  41301b:	mov    r9d,DWORD PTR [rip+0x3b766]        # 0x44e788
  413022:	mov    r8d,DWORD PTR [rip+0x3b757]        # 0x44e780
  413029:	sub    rdx,rax
  41302c:	mov    DWORD PTR [rsp+0x30],edx
  413030:	mov    rdx,QWORD PTR [rip+0x3b761]        # 0x44e798
  413037:	sub    r9d,eax
  41303a:	sub    r8d,eax
  41303d:	sub    rdx,rax
  413040:	mov    DWORD PTR [rsp+0x28],edx
  413044:	mov    rdx,QWORD PTR [rip+0x3b745]        # 0x44e790
  41304b:	sub    rdx,rax
  41304e:	mov    DWORD PTR [rsp+0x20],edx
  413052:	xor    edx,edx
  413054:	call   0x41d1b0
  413059:	lea    rcx,[rip+0x245cf]        # 0x43762f
  413060:	call   0x41d1b0
  413065:	mov    rax,rbx
  413068:	add    rsp,0x48
  41306c:	pop    rbx
  41306d:	pop    rsi
  41306e:	pop    rdi
  41306f:	pop    rbp
  413070:	ret    
  413071:	test   edx,edx
  413073:	jle    0x41308d
  413075:	lea    rcx,[rip+0x2462c]        # 0x4376a8
  41307c:	call   0x41d1b0
  413081:	lea    rcx,[rip+0x245a7]        # 0x43762f
  413088:	call   0x41d1b0
  41308d:	xor    eax,eax
  41308f:	add    rsp,0x48
  413093:	pop    rbx
  413094:	pop    rsi
  413095:	pop    rdi
  413096:	pop    rbp
  413097:	ret    
  413098:	nop    DWORD PTR [rax+rax*1+0x0]
  4130a0:	test   edx,edx
  4130a2:	jle    0x41308d
  4130a4:	lea    rcx,[rip+0x24649]        # 0x4376f4
  4130ab:	call   0x41d1b0
  4130b0:	lea    rcx,[rip+0x24578]        # 0x43762f
  4130b7:	call   0x41d1b0
  4130bc:	xor    eax,eax
  4130be:	add    rsp,0x48
  4130c2:	pop    rbx
  4130c3:	pop    rsi
  4130c4:	pop    rdi
  4130c5:	pop    rbp
  4130c6:	ret    
  4130c7:	nop    WORD PTR [rax+rax*1+0x0]
  4130d0:	mov    rax,QWORD PTR [rip+0x3b6d1]        # 0x44e7a8
  4130d7:	mov    rdx,QWORD PTR [rip+0x3b6c2]        # 0x44e7a0
  4130de:	lea    rcx,[rip+0x2464b]        # 0x437730
  4130e5:	mov    r9d,DWORD PTR [rip+0x3b69c]        # 0x44e788
  4130ec:	sub    rdx,rax
  4130ef:	sub    rbx,rax
  4130f2:	mov    DWORD PTR [rsp+0x30],edx
  4130f6:	mov    rdx,QWORD PTR [rip+0x3b69b]        # 0x44e798
  4130fd:	mov    r8,rbx
  413100:	sub    r9d,eax
  413103:	mov    DWORD PTR [rsp+0x20],ebx
  413107:	sub    rdx,rax
  41310a:	mov    DWORD PTR [rsp+0x28],edx
  41310e:	xor    edx,edx
  413110:	call   0x41d1b0
  413115:	lea    rcx,[rip+0x24513]        # 0x43762f
  41311c:	call   0x41d1b0
  413121:	mov    edx,DWORD PTR [rdi]
  413123:	jmp    0x412e87
  413128:	nop    DWORD PTR [rax+rax*1+0x0]
  413130:	mov    rax,rbx
  413133:	add    rsp,0x48
  413137:	pop    rbx
  413138:	pop    rsi
  413139:	pop    rdi
  41313a:	pop    rbp
  41313b:	ret    
  41313c:	nop    DWORD PTR [rax+0x0]
  413140:	push   rsi
  413141:	push   rbx
  413142:	sub    rsp,0x28
  413146:	mov    rax,QWORD PTR [rip+0x33323]        # 0x446470
  41314d:	mov    rbx,rcx
  413150:	mov    eax,DWORD PTR [rax]
  413152:	test   eax,eax
  413154:	jle    0x41318b
  413156:	mov    rcx,QWORD PTR [rip+0x3b6c3]        # 0x44e820
  41315d:	call   0x40e950
  413162:	mov    rcx,rbx
  413165:	mov    rsi,rax
  413168:	call   0x41c550
  41316d:	lea    rcx,[rip+0x24624]        # 0x437798
  413174:	mov    rdx,rax
  413177:	mov    r8,rsi
  41317a:	call   0x41d1b0
  41317f:	lea    rcx,[rip+0x244a9]        # 0x43762f
  413186:	call   0x41d1b0
  41318b:	add    QWORD PTR [rip+0x3b68e],rbx        # 0x44e820
  413192:	add    rsp,0x28
  413196:	pop    rbx
  413197:	pop    rsi
  413198:	ret    
  413199:	nop    DWORD PTR [rax+0x0]
  4131a0:	push   rdi
  4131a1:	push   rsi
  4131a2:	push   rbx
  4131a3:	sub    rsp,0x30
  4131a7:	mov    rax,QWORD PTR [rip+0x332c2]        # 0x446470
  4131ae:	mov    rsi,rdx
  4131b1:	mov    rbx,rcx
  4131b4:	mov    edi,r8d
  4131b7:	mov    edx,DWORD PTR [rax]
  4131b9:	test   edx,edx
  4131bb:	jle    0x4131ea
  4131bd:	mov    rcx,QWORD PTR [rcx+0x8]
  4131c1:	call   0x40e950
  4131c6:	mov    edx,DWORD PTR [rbx]
  4131c8:	lea    rcx,[rip+0x245f9]        # 0x4377c8
  4131cf:	mov    r8,rax
  4131d2:	mov    DWORD PTR [rsp+0x20],edi
  4131d6:	mov    r9,rsi
  4131d9:	call   0x41d1b0
  4131de:	lea    rcx,[rip+0x2444a]        # 0x43762f
  4131e5:	call   0x41d1b0
  4131ea:	mov    eax,DWORD PTR [rip+0x3b5d0]        # 0x44e7c0
  4131f0:	test   eax,eax
  4131f2:	jne    0x4131fb
  4131f4:	mov    QWORD PTR [rip+0x3b5bd],rbx        # 0x44e7b8
  4131fb:	add    rsp,0x30
  4131ff:	pop    rbx
  413200:	pop    rsi
  413201:	pop    rdi
  413202:	ret    
  413203:	nop    DWORD PTR [rax]
  413206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413210:	sub    rsp,0x38
  413214:	xor    edx,edx
  413216:	lea    rcx,[rsp+0x20]
  41321b:	call   0x425820
  413220:	test   eax,eax
  413222:	jne    0x413240
  413224:	movsxd rax,DWORD PTR [rsp+0x20]
  413229:	movsxd rdx,DWORD PTR [rsp+0x24]
  41322e:	imul   rax,rax,0xf4240
  413235:	add    rax,rdx
  413238:	add    rsp,0x38
  41323c:	ret    
  41323d:	nop    DWORD PTR [rax]
  413240:	mov    rax,0xffffffffffffffff
  413247:	jmp    0x413238
  413249:	nop    DWORD PTR [rax+0x0]
  413250:	push   rbx
  413251:	sub    rsp,0x30
  413255:	mov    rax,QWORD PTR [rcx]
  413258:	mov    rbx,rdx
  41325b:	mov    QWORD PTR [rsp+0x20],rax
  413260:	mov    eax,DWORD PTR [rcx+0x8]
  413263:	lea    rcx,[rsp+0x20]
  413268:	mov    DWORD PTR [rsp+0x28],eax
  41326c:	call   0x41ad20
  413271:	cmp    eax,DWORD PTR [rbx]
  413273:	sete   al
  413276:	movzx  eax,al
  413279:	add    rsp,0x30
  41327d:	pop    rbx
  41327e:	ret    
  41327f:	nop
  413280:	push   rbp
  413281:	push   rdi
  413282:	push   rsi
  413283:	push   rbx
  413284:	sub    rsp,0x38
  413288:	mov    rax,QWORD PTR [rip+0x331c1]        # 0x446450
  41328f:	mov    ebp,edx
  413291:	mov    rsi,rcx
  413294:	lea    rcx,[rsp+0x20]
  413299:	mov    rax,QWORD PTR [rax]
  41329c:	mov    rdx,QWORD PTR [rax]
  41329f:	mov    QWORD PTR [rsp+0x20],rdx
  4132a4:	mov    eax,DWORD PTR [rax+0x8]
  4132a7:	mov    DWORD PTR [rsp+0x28],eax
  4132ab:	call   0x41ad20
  4132b0:	mov    edi,eax
  4132b2:	mov    rax,QWORD PTR [rip+0x331b7]        # 0x446470
  4132b9:	mov    eax,DWORD PTR [rax]
  4132bb:	test   eax,eax
  4132bd:	jle    0x4132da
  4132bf:	lea    rcx,[rip+0x24532]        # 0x4377f8
  4132c6:	mov    rdx,rsi
  4132c9:	call   0x41d1b0
  4132ce:	lea    rcx,[rip+0x2435a]        # 0x43762f
  4132d5:	call   0x41d1b0
  4132da:	mov    rbx,QWORD PTR [rip+0x3337f]        # 0x446660
  4132e1:	mov    rax,QWORD PTR [rbx]
  4132e4:	mov    r9,QWORD PTR [rax+0x1a0]
  4132eb:	test   r9,r9
  4132ee:	je     0x4132f5
  4132f0:	xor    ecx,ecx
  4132f2:	call   r9
  4132f5:	call   0x410620
  4132fa:	mov    rdx,rsi
  4132fd:	mov    r8d,ebp
  413300:	mov    ecx,edi
  413302:	call   0x401610
  413307:	mov    esi,eax
  413309:	call   0x410850
  41330e:	mov    rax,QWORD PTR [rbx]
  413311:	mov    rdx,QWORD PTR [rax+0x1a8]
  413318:	test   rdx,rdx
  41331b:	je     0x413321
  41331d:	xor    ecx,ecx
  41331f:	call   rdx
  413321:	mov    eax,esi
  413323:	add    rsp,0x38
  413327:	pop    rbx
  413328:	pop    rsi
  413329:	pop    rdi
  41332a:	pop    rbp
  41332b:	ret    
  41332c:	nop    DWORD PTR [rax+0x0]
  413330:	push   rbx
  413331:	sub    rsp,0x20
  413335:	mov    rcx,QWORD PTR [rip+0x3b4f4]        # 0x44e830
  41333c:	test   rcx,rcx
  41333f:	je     0x413359
  413341:	mov    rbx,QWORD PTR [rcx+0x10]
  413345:	mov    QWORD PTR [rip+0x3b4e4],rbx        # 0x44e830
  41334c:	call   0x42a6c8
  413351:	test   rbx,rbx
  413354:	mov    rcx,rbx
  413357:	jne    0x413341
  413359:	add    rsp,0x20
  41335d:	pop    rbx
  41335e:	ret    
  41335f:	nop
  413360:	sub    rsp,0x28
  413364:	mov    edx,0x8
  413369:	cmp    rcx,0x8
  41336d:	mov    QWORD PTR [rip+0x3b4c4],rcx        # 0x44e838
  413374:	cmovae rdx,rcx
  413378:	mov    rcx,QWORD PTR [rip+0x3b429]        # 0x44e7a8
  41337f:	call   0x41a710
  413384:	mov    rdx,rax
  413387:	add    rdx,QWORD PTR [rip+0x3b4aa]        # 0x44e838
  41338e:	mov    QWORD PTR [rip+0x3b413],rax        # 0x44e7a8
  413395:	mov    QWORD PTR [rip+0x3b3e4],rax        # 0x44e780
  41339c:	mov    QWORD PTR [rip+0x3b3e5],rax        # 0x44e788
  4133a3:	mov    QWORD PTR [rip+0x3b3f6],rdx        # 0x44e7a0
  4133aa:	mov    QWORD PTR [rip+0x3b3df],rdx        # 0x44e790
  4133b1:	mov    QWORD PTR [rip+0x3b3e0],rdx        # 0x44e798
  4133b8:	mov    BYTE PTR [rax],0x0
  4133bb:	mov    BYTE PTR [rax+0x1],0x0
  4133bf:	mov    BYTE PTR [rax+0x4],0x0
  4133c3:	mov    BYTE PTR [rax+0x5],0x0
  4133c7:	mov    BYTE PTR [rax+0x6],0x0
  4133cb:	mov    BYTE PTR [rax+0x7],0x0
  4133cf:	mov    DWORD PTR [rip+0x3b39f],0x0        # 0x44e778
  4133d9:	mov    DWORD PTR [rip+0x3b391],0x0        # 0x44e774
  4133e3:	mov    DWORD PTR [rip+0x3b383],0x0        # 0x44e770
  4133ed:	add    rsp,0x28
  4133f1:	ret    
  4133f2:	nop    DWORD PTR [rax+0x0]
  4133f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413400:	sub    rsp,0x48
  413404:	mov    DWORD PTR [rsp+0x3c],0x0
  41340c:	call   0x401570
  413411:	test   eax,eax
  413413:	je     0x413461
  413415:	mov    ecx,0x2
  41341a:	call   0x4016d0
  41341f:	test   eax,eax
  413421:	jne    0x413430
  413423:	add    rsp,0x48
  413427:	ret    
  413428:	nop    DWORD PTR [rax+rax*1+0x0]
  413430:	mov    rcx,QWORD PTR [rip+0x3b529]        # 0x44e960
  413437:	lea    rdx,[rsp+0x3c]
  41343c:	mov    r8d,0x4
  413442:	call   0x40def0
  413447:	mov    edx,eax
  413449:	mov    eax,DWORD PTR [rsp+0x3c]
  41344d:	test   edx,edx
  41344f:	je     0x413423
  413451:	lea    rcx,[rip+0x243e0]        # 0x437838
  413458:	call   0x41d110
  41345d:	xor    eax,eax
  41345f:	jmp    0x413423
  413461:	lea    rcx,[rip+0x243b2]        # 0x43781a
  413468:	mov    DWORD PTR [rsp+0x2c],eax
  41346c:	call   0x41d110
  413471:	mov    eax,DWORD PTR [rsp+0x2c]
  413475:	add    rsp,0x48
  413479:	ret    
  41347a:	nop    WORD PTR [rax+rax*1+0x0]
  413480:	mov    rdx,QWORD PTR [rip+0x3b349]        # 0x44e7d0
  413487:	test   rdx,rdx
  41348a:	setne  al
  41348d:	cmp    rdx,rcx
  413490:	je     0x4134d3
  413492:	test   al,al
  413494:	jne    0x4134a3
  413496:	jmp    0x4134d1
  413498:	nop    DWORD PTR [rax+rax*1+0x0]
  4134a0:	mov    rdx,rax
  4134a3:	mov    rax,QWORD PTR [rdx+0x58]
  4134a7:	cmp    rcx,rax
  4134aa:	setne  r9b
  4134ae:	test   rax,rax
  4134b1:	setne  r8b
  4134b5:	test   r9b,r8b
  4134b8:	jne    0x4134a0
  4134ba:	test   rax,rax
  4134bd:	je     0x4134cf
  4134bf:	mov    rcx,QWORD PTR [rax+0x58]
  4134c3:	mov    QWORD PTR [rdx+0x58],rcx
  4134c7:	mov    rcx,rax
  4134ca:	jmp    0x41a7c0
  4134cf:	repz ret 
  4134d1:	repz ret 
  4134d3:	test   al,al
  4134d5:	je     0x4134cf
  4134d7:	mov    rax,rdx
  4134da:	mov    rdx,QWORD PTR [rdx+0x58]
  4134de:	mov    rcx,rax
  4134e1:	mov    QWORD PTR [rip+0x3b2e8],rdx        # 0x44e7d0
  4134e8:	jmp    0x41a7c0
  4134ed:	nop    DWORD PTR [rax]
  4134f0:	push   rbp
  4134f1:	push   rdi
  4134f2:	push   rsi
  4134f3:	push   rbx
  4134f4:	sub    rsp,0x48
  4134f8:	cmp    edx,0x1
  4134fb:	mov    rsi,rcx
  4134fe:	mov    edi,edx
  413500:	sbb    rax,rax
  413503:	lea    rdx,[rsp+0x30]
  413508:	not    rax
  41350b:	lea    rcx,[rcx+rax*1+0xa]
  413510:	call   0x41ce20
  413515:	lea    rdx,[rsp+0x38]
  41351a:	lea    rcx,[rax+0x1]
  41351e:	call   0x41ce20
  413523:	mov    rbx,QWORD PTR [rip+0x3b2a6]        # 0x44e7d0
  41352a:	mov    rcx,QWORD PTR [rsp+0x38]
  41352f:	mov    rax,QWORD PTR [rsp+0x30]
  413534:	test   rbx,rbx
  413537:	jne    0x413549
  413539:	jmp    0x4135b4
  41353b:	nop    DWORD PTR [rax+rax*1+0x0]
  413540:	mov    rbx,QWORD PTR [rbx+0x58]
  413544:	test   rbx,rbx
  413547:	je     0x4135b4
  413549:	cmp    eax,DWORD PTR [rbx]
  41354b:	jne    0x413540
  41354d:	cmp    rcx,QWORD PTR [rbx+0x8]
  413551:	jne    0x413540
  413553:	test   edi,edi
  413555:	je     0x413602
  41355b:	cmp    BYTE PTR [rbx+0x14],0x0
  41355f:	je     0x413690
  413565:	mov    rax,QWORD PTR [rip+0x32f04]        # 0x446470
  41356c:	lea    rbx,[rip+0x242ee]        # 0x437861
  413573:	mov    r9d,DWORD PTR [rax]
  413576:	test   r9d,r9d
  413579:	jle    0x4135a2
  41357b:	call   0x40e950
  413580:	mov    edx,DWORD PTR [rsp+0x30]
  413584:	lea    rcx,[rip+0x242f5]        # 0x437880
  41358b:	mov    r8,rax
  41358e:	mov    r9,rbx
  413591:	call   0x41d1b0
  413596:	lea    rcx,[rip+0x24092]        # 0x43762f
  41359d:	call   0x41d1b0
  4135a2:	mov    rcx,rsi
  4135a5:	call   0x405bc0
  4135aa:	nop
  4135ab:	add    rsp,0x48
  4135af:	pop    rbx
  4135b0:	pop    rsi
  4135b1:	pop    rdi
  4135b2:	pop    rbp
  4135b3:	ret    
  4135b4:	mov    rax,QWORD PTR [rip+0x32eb5]        # 0x446470
  4135bb:	mov    r10d,DWORD PTR [rax]
  4135be:	test   r10d,r10d
  4135c1:	jle    0x4135f0
  4135c3:	call   0x40e950
  4135c8:	mov    edx,DWORD PTR [rsp+0x30]
  4135cc:	lea    rcx,[rip+0x24355]        # 0x437928
  4135d3:	mov    r8,rax
  4135d6:	call   0x41d1b0
  4135db:	lea    rcx,[rip+0x2404d]        # 0x43762f
  4135e2:	call   0x41d1b0
  4135e7:	nop    WORD PTR [rax+rax*1+0x0]
  4135f0:	mov    rcx,rsi
  4135f3:	call   0x405bd0
  4135f8:	nop
  4135f9:	add    rsp,0x48
  4135fd:	pop    rbx
  4135fe:	pop    rsi
  4135ff:	pop    rdi
  413600:	pop    rbp
  413601:	ret    
  413602:	cmp    BYTE PTR [rbx+0x14],0x0
  413606:	je     0x4136c0
  41360c:	mov    rbp,QWORD PTR [rip+0x32e5d]        # 0x446470
  413613:	mov    edx,DWORD PTR [rbp+0x0]
  413616:	test   edx,edx
  413618:	jle    0x413646
  41361a:	call   0x40e950
  41361f:	mov    r8d,DWORD PTR [rsp+0x30]
  413624:	lea    rdx,[rip+0x2423e]        # 0x437869
  41362b:	mov    r9,rax
  41362e:	lea    rcx,[rip+0x2426f]        # 0x4378a4
  413635:	call   0x41d1b0
  41363a:	lea    rcx,[rip+0x23fee]        # 0x43762f
  413641:	call   0x41d1b0
  413646:	mov    eax,DWORD PTR [rbx+0x10]
  413649:	mov    BYTE PTR [rbx+0x14],dil
  41364d:	sub    eax,0x1
  413650:	cmp    eax,0x1
  413653:	ja     0x4135a2
  413659:	mov    rbx,QWORD PTR [rbx+0x78]
  41365d:	call   0x40de20
  413662:	test   eax,eax
  413664:	je     0x4136df
  413666:	mov    ebx,DWORD PTR [rbp+0x0]
  413669:	test   ebx,ebx
  41366b:	jle    0x4135f0
  41366d:	lea    rcx,[rip+0x2424c]        # 0x4378c0
  413674:	call   0x41d1b0
  413679:	lea    rcx,[rip+0x23faf]        # 0x43762f
  413680:	call   0x41d1b0
  413685:	jmp    0x4135f0
  41368a:	nop    WORD PTR [rax+rax*1+0x0]
  413690:	mov    rbp,QWORD PTR [rip+0x32dd9]        # 0x446470
  413697:	mov    eax,DWORD PTR [rbp+0x0]
  41369a:	test   eax,eax
  41369c:	jle    0x413646
  41369e:	call   0x40e950
  4136a3:	mov    r8d,DWORD PTR [rsp+0x30]
  4136a8:	mov    r9,rax
  4136ab:	lea    rdx,[rip+0x241c1]        # 0x437873
  4136b2:	jmp    0x41362e
  4136b7:	nop    WORD PTR [rax+rax*1+0x0]
  4136c0:	mov    rax,QWORD PTR [rip+0x32da9]        # 0x446470
  4136c7:	lea    rbx,[rip+0x2418a]        # 0x437858
  4136ce:	mov    r8d,DWORD PTR [rax]
  4136d1:	test   r8d,r8d
  4136d4:	jg     0x41357b
  4136da:	jmp    0x4135a2
  4136df:	lea    rcx,[rbx+0x14]
  4136e3:	lea    rdx,[rsp+0x2f]
  4136e8:	mov    r8d,0x1
  4136ee:	mov    BYTE PTR [rsp+0x2f],dil
  4136f3:	call   0x40df50
  4136f8:	mov    ebx,eax
  4136fa:	call   0x40ddc0
  4136ff:	test   ebx,ebx
  413701:	je     0x4135a2
  413707:	mov    r11d,DWORD PTR [rbp+0x0]
  41370b:	test   r11d,r11d
  41370e:	jle    0x4135f0
  413714:	lea    rcx,[rip+0x241d5]        # 0x4378f0
  41371b:	call   0x41d1b0
  413720:	lea    rcx,[rip+0x23f08]        # 0x43762f
  413727:	call   0x41d1b0
  41372c:	jmp    0x4135f0
  413731:	nop    DWORD PTR [rax+rax*1+0x0]
  413736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413740:	sub    rsp,0x28
  413744:	mov    rax,QWORD PTR [rip+0x32d25]        # 0x446470
  41374b:	mov    eax,DWORD PTR [rax]
  41374d:	test   eax,eax
  41374f:	jle    0x413769
  413751:	lea    rcx,[rip+0x241f0]        # 0x437948
  413758:	call   0x41d1b0
  41375d:	lea    rcx,[rip+0x23ecb]        # 0x43762f
  413764:	call   0x41d1b0
  413769:	xor    eax,eax
  41376b:	add    rsp,0x28
  41376f:	ret    
  413770:	sub    rsp,0x28
  413774:	mov    rax,QWORD PTR [rip+0x32cf5]        # 0x446470
  41377b:	mov    eax,DWORD PTR [rax]
  41377d:	test   eax,eax
  41377f:	jle    0x413799
  413781:	lea    rcx,[rip+0x241db]        # 0x437963
  413788:	call   0x41d1b0
  41378d:	lea    rcx,[rip+0x23e9b]        # 0x43762f
  413794:	call   0x41d1b0
  413799:	xor    eax,eax
  41379b:	add    rsp,0x28
  41379f:	ret    
  4137a0:	push   r12
  4137a2:	push   rbp
  4137a3:	push   rdi
  4137a4:	push   rsi
  4137a5:	push   rbx
  4137a6:	sub    rsp,0x30
  4137aa:	test   rcx,rcx
  4137ad:	je     0x413800
  4137af:	movsxd r12,r9d
  4137b2:	mov    rsi,rcx
  4137b5:	mov    rdi,r8
  4137b8:	mov    rcx,r12
  4137bb:	mov    rbp,rdx
  4137be:	mov    rbx,r12
  4137c1:	call   0x412de0
  4137c6:	test   rax,rax
  4137c9:	je     0x413800
  4137cb:	movsx  edx,WORD PTR [rsi]
  4137ce:	cmp    edx,DWORD PTR [rbp+0x0]
  4137d1:	jne    0x413804
  4137d3:	add    ebx,DWORD PTR [rsi+0x4]
  4137d6:	mov    edx,ebx
  4137d8:	mov    BYTE PTR [rsi+0x4],bl
  4137db:	movzx  ecx,dh
  4137de:	shr    edx,0x18
  4137e1:	mov    BYTE PTR [rsi+0x5],cl
  4137e4:	mov    ecx,ebx
  4137e6:	mov    BYTE PTR [rsi+0x7],dl
  4137e9:	shr    ecx,0x10
  4137ec:	mov    BYTE PTR [rsi+0x6],cl
  4137ef:	add    QWORD PTR [rdi],r12
  4137f2:	add    rsp,0x30
  4137f6:	pop    rbx
  4137f7:	pop    rsi
  4137f8:	pop    rdi
  4137f9:	pop    rbp
  4137fa:	pop    r12
  4137fc:	ret    
  4137fd:	nop    DWORD PTR [rax]
  413800:	xor    eax,eax
  413802:	jmp    0x4137f2
  413804:	lea    rax,[rip+0x24195]        # 0x4379a0
  41380b:	lea    r9,[rip+0x260ee]        # 0x439900
  413812:	lea    r8,[rip+0x2415f]        # 0x437978
  413819:	lea    rcx,[rip+0x24173]        # 0x437993
  413820:	mov    edx,0x8aa
  413825:	mov    QWORD PTR [rsp+0x20],rax
  41382a:	call   0x41d170
  41382f:	nop
  413830:	sub    rsp,0x28
  413834:	mov    rax,QWORD PTR [rip+0x32c35]        # 0x446470
  41383b:	mov    eax,DWORD PTR [rax]
  41383d:	test   eax,eax
  41383f:	jle    0x413861
  413841:	call   0x40e950
  413846:	lea    rcx,[rip+0x2418b]        # 0x4379d8
  41384d:	mov    rdx,rax
  413850:	call   0x41d1b0
  413855:	lea    rcx,[rip+0x23dd3]        # 0x43762f
  41385c:	call   0x41d1b0
  413861:	xor    eax,eax
  413863:	add    rsp,0x28
  413867:	ret    
  413868:	nop    DWORD PTR [rax+rax*1+0x0]
  413870:	sub    rsp,0x38
  413874:	mov    rax,QWORD PTR [rip+0x3afa5]        # 0x44e820
  41387b:	test   rax,rax
  41387e:	je     0x413885
  413880:	add    rsp,0x38
  413884:	ret    
  413885:	mov    rcx,QWORD PTR [rip+0x3affc]        # 0x44e888
  41388c:	lea    rax,[rip+0x3af8d]        # 0x44e820
  413893:	lea    rdx,[rsp+0x28]
  413898:	mov    r8d,0x8
  41389e:	mov    QWORD PTR [rsp+0x28],rax
  4138a3:	call   0x40def0
  4138a8:	mov    edx,eax
  4138aa:	mov    rax,QWORD PTR [rsp+0x28]
  4138af:	test   edx,edx
  4138b1:	mov    QWORD PTR [rip+0x3af68],rax        # 0x44e820
  4138b8:	je     0x413880
  4138ba:	lea    r8,[rip+0x24147]        # 0x437a08
  4138c1:	lea    rcx,[rip+0x240cb]        # 0x437993
  4138c8:	mov    edx,0xb70
  4138cd:	call   0x41d170
  4138d2:	nop
  4138d3:	nop    DWORD PTR [rax]
  4138d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4138e0:	push   rbx
  4138e1:	sub    rsp,0x30
  4138e5:	mov    rax,QWORD PTR [rip+0x3aefc]        # 0x44e7e8
  4138ec:	mov    rbx,rcx
  4138ef:	test   rax,rax
  4138f2:	je     0x413910
  4138f4:	lea    rdx,[rax+rbx*1+0x7]
  4138f9:	and    rdx,0xfffffffffffffff8
  4138fd:	mov    QWORD PTR [rip+0x3aee4],rdx        # 0x44e7e8
  413904:	add    rsp,0x30
  413908:	pop    rbx
  413909:	ret    
  41390a:	nop    WORD PTR [rax+rax*1+0x0]
  413910:	mov    rcx,QWORD PTR [rip+0x3af69]        # 0x44e880
  413917:	lea    rax,[rip+0x3aeca]        # 0x44e7e8
  41391e:	lea    rdx,[rsp+0x28]
  413923:	mov    r8d,0x8
  413929:	mov    QWORD PTR [rsp+0x28],rax
  41392e:	call   0x40def0
  413933:	mov    edx,eax
  413935:	mov    rax,QWORD PTR [rsp+0x28]
  41393a:	test   edx,edx
  41393c:	mov    QWORD PTR [rip+0x3aea5],rax        # 0x44e7e8
  413943:	je     0x4138f4
  413945:	lea    r8,[rip+0x240e4]        # 0x437a30
  41394c:	lea    rcx,[rip+0x24040]        # 0x437993
  413953:	mov    edx,0x1772
  413958:	call   0x41d170
  41395d:	nop
  41395e:	xchg   ax,ax
  413960:	push   rdi
  413961:	push   rsi
  413962:	push   rbx
  413963:	sub    rsp,0x30
  413967:	mov    rbx,rcx
  41396a:	mov    ecx,0x10
  41396f:	call   0x4138e0
  413974:	mov    rdx,rbx
  413977:	mov    r8d,0x10
  41397d:	mov    rcx,rax
  413980:	mov    rsi,rax
  413983:	call   0x40df50
  413988:	movsxd rcx,DWORD PTR [rbx]
  41398b:	call   0x4138e0
  413990:	lea    rdx,[rsp+0x28]
  413995:	lea    rcx,[rsi+0x8]
  413999:	mov    r8d,0x8
  41399f:	mov    rdi,rax
  4139a2:	mov    QWORD PTR [rsp+0x28],rax
  4139a7:	call   0x40df50
  4139ac:	mov    rdx,QWORD PTR [rbx+0x8]
  4139b0:	mov    r8d,DWORD PTR [rbx]
  4139b3:	mov    rcx,rdi
  4139b6:	call   0x40df50
  4139bb:	mov    rax,rsi
  4139be:	add    rsp,0x30
  4139c2:	pop    rbx
  4139c3:	pop    rsi
  4139c4:	pop    rdi
  4139c5:	ret    
  4139c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139d0:	push   r14
  4139d2:	push   r13
  4139d4:	push   r12
  4139d6:	push   rbp
  4139d7:	push   rdi
  4139d8:	push   rsi
  4139d9:	push   rbx
  4139da:	sub    rsp,0x110
  4139e1:	mov    eax,DWORD PTR [rcx+0x10]
  4139e4:	mov    rbx,rcx
  4139e7:	sub    eax,0x1
  4139ea:	cmp    eax,0x1
  4139ed:	ja     0x413cd4
  4139f3:	cmp    QWORD PTR [rcx+0x28],0x0
  4139f8:	je     0x413ad1
  4139fe:	mov    rax,QWORD PTR [rip+0x32c5b]        # 0x446660
  413a05:	mov    rax,QWORD PTR [rax]
  413a08:	mov    rax,QWORD PTR [rax+0x1c0]
  413a0f:	test   rax,rax
  413a12:	je     0x413ad1
  413a18:	call   rax
  413a1a:	test   rax,rax
  413a1d:	je     0x413ad1
  413a23:	call   0x413870
  413a28:	cmp    QWORD PTR [rbx+0x28],0x0
  413a2d:	mov    rsi,rax
  413a30:	mov    rdx,rax
  413a33:	je     0x413ac1
  413a39:	mov    r12,QWORD PTR [rip+0x32a30]        # 0x446470
  413a40:	lea    rdi,[rsi+0x7]
  413a44:	and    rdi,0xfffffffffffffff8
  413a48:	mov    r8d,DWORD PTR [r12]
  413a4c:	test   r8d,r8d
  413a4f:	jle    0x413a6b
  413a51:	mov    edx,DWORD PTR [rbx]
  413a53:	lea    rcx,[rip+0x24046]        # 0x437aa0
  413a5a:	call   0x41d1b0
  413a5f:	lea    rcx,[rip+0x23bc9]        # 0x43762f
  413a66:	call   0x41d1b0
  413a6b:	mov    rbp,QWORD PTR [rip+0x329ce]        # 0x446440
  413a72:	mov    QWORD PTR [rbp+0x0],rdi
  413a76:	call   0x401ac0
  413a7b:	mov    rcx,QWORD PTR [rbx+0x28]
  413a7f:	call   0x401b40
  413a84:	test   eax,eax
  413a86:	je     0x413ca0
  413a8c:	mov    edx,DWORD PTR [r12]
  413a90:	mov    QWORD PTR [rbx+0x50],0x0
  413a98:	test   edx,edx
  413a9a:	jle    0x413ab9
  413a9c:	mov    edx,DWORD PTR [rbx]
  413a9e:	lea    rcx,[rip+0x2406b]        # 0x437b10
  413aa5:	mov    r8d,eax
  413aa8:	call   0x41d1b0
  413aad:	lea    rcx,[rip+0x23b7b]        # 0x43762f
  413ab4:	call   0x41d1b0
  413ab9:	mov    rdx,QWORD PTR [rbp+0x0]
  413abd:	add    rdx,0x10
  413ac1:	lea    rcx,[rdx+0x7]
  413ac5:	and    rcx,0xfffffffffffffff8
  413ac9:	sub    rcx,rsi
  413acc:	call   0x413140
  413ad1:	lea    rdi,[rsp+0x40]
  413ad6:	mov    ecx,0x1a
  413adb:	mov    rsi,rbx
  413ade:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  413ae1:	mov    cl,0xd0
  413ae3:	call   0x4138e0
  413ae8:	lea    rdx,[rsp+0x40]
  413aed:	mov    rcx,rax
  413af0:	mov    QWORD PTR [rbx+0x78],rax
  413af4:	mov    r8d,0xd0
  413afa:	mov    rsi,rax
  413afd:	mov    QWORD PTR [rsp+0x98],0x0
  413b09:	mov    QWORD PTR [rsp+0x80],0x0
  413b15:	call   0x40df50
  413b1a:	mov    rcx,QWORD PTR [rbx+0x28]
  413b1e:	test   rcx,rcx
  413b21:	je     0x413b41
  413b23:	call   0x413960
  413b28:	lea    rdx,[rsp+0x38]
  413b2d:	lea    rcx,[rsi+0x28]
  413b31:	mov    r8d,0x8
  413b37:	mov    QWORD PTR [rsp+0x38],rax
  413b3c:	call   0x40df50
  413b41:	mov    ecx,DWORD PTR [rbx+0x30]
  413b44:	test   ecx,ecx
  413b46:	jne    0x413b60
  413b48:	add    rsp,0x110
  413b4f:	pop    rbx
  413b50:	pop    rsi
  413b51:	pop    rdi
  413b52:	pop    rbp
  413b53:	pop    r12
  413b55:	pop    r13
  413b57:	pop    r14
  413b59:	ret    
  413b5a:	nop    WORD PTR [rax+rax*1+0x0]
  413b60:	shl    rcx,0x3
  413b64:	lea    rdi,[rsp+0x38]
  413b69:	call   0x4138e0
  413b6e:	lea    rcx,[rsi+0x38]
  413b72:	mov    r8d,0x8
  413b78:	mov    rdx,rdi
  413b7b:	mov    rbp,rax
  413b7e:	mov    QWORD PTR [rsp+0x38],rax
  413b83:	call   0x40df50
  413b88:	mov    eax,DWORD PTR [rbx+0x30]
  413b8b:	test   eax,eax
  413b8d:	je     0x413b48
  413b8f:	mov    rax,QWORD PTR [rbx+0x38]
  413b93:	xor    r12d,r12d
  413b96:	xor    r13d,r13d
  413b99:	mov    r14,QWORD PTR [rax+r12*1]
  413b9d:	movzx  eax,BYTE PTR [r14]
  413ba1:	cmp    al,0x4d
  413ba3:	je     0x413c23
  413ba5:	jle    0x413c62
  413bab:	cmp    al,0x52
  413bad:	je     0x413c66
  413bb3:	cmp    al,0x58
  413bb5:	jne    0x413c90
  413bbb:	mov    ecx,0x10
  413bc0:	call   0x4138e0
  413bc5:	mov    r8d,0x10
  413bcb:	mov    rdx,r14
  413bce:	mov    rcx,rax
  413bd1:	mov    rsi,rax
  413bd4:	call   0x40df50
  413bd9:	mov    rcx,QWORD PTR [r14+0x8]
  413bdd:	call   0x413960
  413be2:	lea    rcx,[rsi+0x8]
  413be6:	mov    r8d,0x8
  413bec:	mov    rdx,rdi
  413bef:	mov    QWORD PTR [rsp+0x38],rax
  413bf4:	call   0x40df50
  413bf9:	mov    rcx,rsi
  413bfc:	test   rcx,rcx
  413bff:	jne    0x413c49
  413c01:	add    r13d,0x1
  413c05:	add    r12,0x8
  413c09:	cmp    r13d,DWORD PTR [rbx+0x30]
  413c0d:	jae    0x413b48
  413c13:	mov    rax,QWORD PTR [rbx+0x38]
  413c17:	mov    r14,QWORD PTR [rax+r12*1]
  413c1b:	movzx  eax,BYTE PTR [r14]
  413c1f:	cmp    al,0x4d
  413c21:	jne    0x413ba5
  413c23:	mov    ecx,0x20
  413c28:	call   0x4138e0
  413c2d:	mov    r8d,0x20
  413c33:	mov    rsi,rax
  413c36:	mov    rcx,rax
  413c39:	mov    rdx,r14
  413c3c:	call   0x40df50
  413c41:	mov    rcx,rsi
  413c44:	test   rcx,rcx
  413c47:	je     0x413c01
  413c49:	mov    QWORD PTR [rsp+0x38],rcx
  413c4e:	lea    rcx,[r12+rbp*1]
  413c52:	mov    r8d,0x8
  413c58:	mov    rdx,rdi
  413c5b:	call   0x40df50
  413c60:	jmp    0x413c01
  413c62:	cmp    al,0x4c
  413c64:	jne    0x413c90
  413c66:	mov    ecx,0x1
  413c6b:	call   0x4138e0
  413c70:	mov    r8d,0x1
  413c76:	mov    rsi,rax
  413c79:	mov    rcx,rax
  413c7c:	mov    rdx,r14
  413c7f:	call   0x40df50
  413c84:	mov    rcx,rsi
  413c87:	jmp    0x413bfc
  413c8c:	nop    DWORD PTR [rax+0x0]
  413c90:	lea    rcx,[rip+0x23eb7]        # 0x437b4e
  413c97:	movsx  edx,al
  413c9a:	call   0x41d140
  413c9f:	nop
  413ca0:	call   0x401b00
  413ca5:	mov    ecx,DWORD PTR [r12]
  413ca9:	mov    QWORD PTR [rbx+0x50],rdi
  413cad:	test   ecx,ecx
  413caf:	jle    0x413ab9
  413cb5:	mov    edx,DWORD PTR [rbx]
  413cb7:	lea    rcx,[rip+0x23e1a]        # 0x437ad8
  413cbe:	call   0x41d1b0
  413cc3:	lea    rcx,[rip+0x23965]        # 0x43762f
  413cca:	call   0x41d1b0
  413ccf:	jmp    0x413ab9
  413cd4:	lea    rax,[rip+0x23d7d]        # 0x437a58
  413cdb:	lea    r9,[rip+0x25b9e]        # 0x439880
  413ce2:	lea    r8,[rip+0x23c8f]        # 0x437978
  413ce9:	lea    rcx,[rip+0x23ca3]        # 0x437993
  413cf0:	mov    edx,0x179d
  413cf5:	mov    QWORD PTR [rsp+0x20],rax
  413cfa:	call   0x41d170
  413cff:	nop
  413d00:	push   rbx
  413d01:	sub    rsp,0x20
  413d05:	mov    rax,QWORD PTR [rip+0x3aaa4]        # 0x44e7b0
  413d0c:	test   rax,rax
  413d0f:	jne    0x413d1c
  413d11:	jmp    0x413d30
  413d13:	mov    rax,QWORD PTR [rax+0x28]
  413d17:	test   rax,rax
  413d1a:	je     0x413d30
  413d1c:	cmp    DWORD PTR [rax+0x8],ecx
  413d1f:	jne    0x413d13
  413d21:	add    rsp,0x20
  413d25:	pop    rbx
  413d26:	ret    
  413d27:	nop    WORD PTR [rax+rax*1+0x0]
  413d30:	mov    ebx,ecx
  413d32:	mov    ecx,0x30
  413d37:	call   0x41a6e0
  413d3c:	mov    rdx,QWORD PTR [rip+0x3aa6d]        # 0x44e7b0
  413d43:	mov    DWORD PTR [rax+0x8],ebx
  413d46:	mov    QWORD PTR [rax+0x10],0x0
  413d4e:	mov    QWORD PTR [rax+0x18],0x0
  413d56:	mov    QWORD PTR [rax+0x20],0x0
  413d5e:	mov    QWORD PTR [rax],0x0
  413d65:	mov    QWORD PTR [rax+0x28],rdx
  413d69:	mov    QWORD PTR [rip+0x3aa40],rax        # 0x44e7b0
  413d70:	add    rsp,0x20
  413d74:	pop    rbx
  413d75:	ret    
  413d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d80:	push   r12
  413d82:	push   rbp
  413d83:	push   rdi
  413d84:	push   rsi
  413d85:	push   rbx
  413d86:	sub    rsp,0xc0
  413d8d:	mov    rsi,QWORD PTR [rip+0x328cc]        # 0x446660
  413d94:	mov    edi,DWORD PTR [rcx+0x70]
  413d97:	mov    rbx,rcx
  413d9a:	mov    rbp,rdx
  413d9d:	mov    rax,QWORD PTR [rsi]
  413da0:	mov    rax,QWORD PTR [rax+0x1d0]
  413da7:	test   rax,rax
  413daa:	je     0x413df0
  413dac:	call   rax
  413dae:	cmp    edi,eax
  413db0:	jae    0x413df0
  413db2:	mov    rax,QWORD PTR [rip+0x326b7]        # 0x446470
  413db9:	xor    esi,esi
  413dbb:	mov    eax,DWORD PTR [rax]
  413dbd:	test   eax,eax
  413dbf:	jle    0x413dd9
  413dc1:	lea    rcx,[rip+0x23db0]        # 0x437b78
  413dc8:	call   0x41d1b0
  413dcd:	lea    rcx,[rip+0x2385b]        # 0x43762f
  413dd4:	call   0x41d1b0
  413dd9:	mov    eax,esi
  413ddb:	add    rsp,0xc0
  413de2:	pop    rbx
  413de3:	pop    rsi
  413de4:	pop    rdi
  413de5:	pop    rbp
  413de6:	pop    r12
  413de8:	ret    
  413de9:	nop    DWORD PTR [rax+0x0]
  413df0:	lea    rdi,[rsp+0xa0]
  413df8:	mov    rcx,QWORD PTR [rip+0x3aab9]        # 0x44e8b8
  413dff:	lea    rax,[rsp+0x88]
  413e07:	mov    r8d,0x8
  413e0d:	mov    rdx,rdi
  413e10:	mov    QWORD PTR [rsp+0xa0],rax
  413e18:	call   0x40def0
  413e1d:	mov    rdx,QWORD PTR [rsp+0xa0]
  413e25:	test   eax,eax
  413e27:	mov    QWORD PTR [rsp+0x88],rdx
  413e2f:	jne    0x413f54
  413e35:	call   0x413870
  413e3a:	lea    r8,[rbx+0x88]
  413e41:	mov    QWORD PTR [rsp+0x78],rax
  413e46:	mov    r12,rax
  413e49:	mov    rax,QWORD PTR [rsi]
  413e4c:	mov    esi,DWORD PTR [rbx+0x70]
  413e4f:	mov    QWORD PTR [rsp+0x58],r8
  413e54:	lea    r8,[rbx+0x80]
  413e5b:	mov    QWORD PTR [rsp+0x80],0x0
  413e67:	mov    QWORD PTR [rsp+0x90],0x0
  413e73:	mov    rdx,QWORD PTR [rbx+0x8]
  413e77:	mov    QWORD PTR [rsp+0x50],r8
  413e7c:	lea    r8,[rsp+0x98]
  413e84:	mov    rcx,QWORD PTR [rbx+0x78]
  413e88:	mov    QWORD PTR [rsp+0x20],rsi
  413e8d:	mov    QWORD PTR [rsp+0x60],rbp
  413e92:	mov    esi,0x1
  413e97:	mov    QWORD PTR [rsp+0x48],r8
  413e9c:	lea    r8,[rsp+0x90]
  413ea4:	mov    QWORD PTR [rsp+0x40],rdi
  413ea9:	mov    r9,QWORD PTR [rip+0x3aa00]        # 0x44e8b0
  413eb0:	mov    QWORD PTR [rsp+0x38],r8
  413eb5:	lea    r8,[rsp+0x80]
  413ebd:	mov    QWORD PTR [rsp+0x30],r8
  413ec2:	lea    r8,[rsp+0x78]
  413ec7:	mov    QWORD PTR [rsp+0x28],r8
  413ecc:	mov    r8,QWORD PTR [rsp+0x88]
  413ed4:	call   QWORD PTR [rax+0x1b8]
  413eda:	test   eax,eax
  413edc:	jne    0x413dd9
  413ee2:	mov    rcx,QWORD PTR [rbx+0x8]
  413ee6:	mov    r8,QWORD PTR [rsp+0x98]
  413eee:	mov    rdx,rdi
  413ef1:	xor    sil,sil
  413ef4:	call   0x40fd70
  413ef9:	test   rax,rax
  413efc:	mov    QWORD PTR [rbx+0xc8],rax
  413f03:	je     0x413dd9
  413f09:	mov    rax,QWORD PTR [rsp+0x80]
  413f11:	mov    rcx,QWORD PTR [rsp+0x78]
  413f16:	mov    QWORD PTR [rbx+0x90],r12
  413f1d:	mov    QWORD PTR [rbx+0xa0],rax
  413f24:	add    rax,QWORD PTR [rsp+0x90]
  413f2c:	mov    QWORD PTR [rbx+0x98],rcx
  413f33:	add    rcx,0x7
  413f37:	and    rcx,0xfffffffffffffff8
  413f3b:	mov    QWORD PTR [rsp+0x78],rcx
  413f40:	sub    rcx,r12
  413f43:	mov    QWORD PTR [rbx+0xa8],rax
  413f4a:	call   0x413140
  413f4f:	jmp    0x413dd9
  413f54:	lea    rcx,[rip+0x23c75]        # 0x437bd0
  413f5b:	call   0x41d140
  413f60:	nop
  413f61:	nop    DWORD PTR [rax+rax*1+0x0]
  413f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f70:	push   rbx
  413f71:	sub    rsp,0x20
  413f75:	test   rdx,rdx
  413f78:	je     0x413fa1
  413f7a:	mov    eax,DWORD PTR [rdx]
  413f7c:	mov    rbx,rdx
  413f7f:	lea    r9,[rcx+0x4]
  413f83:	mov    DWORD PTR [rcx],eax
  413f85:	movsxd r8,DWORD PTR [rbx]
  413f88:	mov    rcx,r9
  413f8b:	mov    rdx,QWORD PTR [rdx+0x8]
  413f8f:	call   0x42a668
  413f94:	movsxd rcx,DWORD PTR [rbx]
  413f97:	lea    rax,[rax+rcx*1]
  413f9b:	add    rsp,0x20
  413f9f:	pop    rbx
  413fa0:	ret    
  413fa1:	lea    rax,[rcx+0x4]
  413fa5:	mov    DWORD PTR [rcx],0x0
  413fab:	add    rsp,0x20
  413faf:	pop    rbx
  413fb0:	ret    
  413fb1:	nop    DWORD PTR [rax+rax*1+0x0]
  413fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fc0:	push   r15
  413fc2:	push   r14
  413fc4:	push   r13
  413fc6:	push   r12
  413fc8:	push   rbp
  413fc9:	push   rdi
  413fca:	push   rsi
  413fcb:	push   rbx
  413fcc:	sub    rsp,0x28
  413fd0:	test   edx,edx
  413fd2:	mov    rbx,rcx
  413fd5:	mov    esi,edx
  413fd7:	mov    r13d,r8d
  413fda:	mov    rbp,r9
  413fdd:	mov    rdi,rcx
  413fe0:	jne    0x414021
  413fe2:	mov    rax,QWORD PTR [rip+0x32487]        # 0x446470
  413fe9:	mov    eax,DWORD PTR [rax]
  413feb:	test   eax,eax
  413fed:	jle    0x4140a3
  413ff3:	lea    rcx,[rip+0x23c28]        # 0x437c22
  413ffa:	mov    edx,r8d
  413ffd:	call   0x41d1b0
  414002:	lea    rcx,[rip+0x23626]        # 0x43762f
  414009:	call   0x41d1b0
  41400e:	xor    eax,eax
  414010:	jmp    0x4140a5
  414015:	call   0x41c370
  41401a:	movsxd rbx,DWORD PTR [rax+0xc]
  41401e:	add    rbx,r14
  414021:	mov    eax,esi
  414023:	add    rax,rdi
  414026:	cmp    rbx,rax
  414029:	jae    0x4140a3
  41402b:	cmp    QWORD PTR [rip+0x3a766],rbx        # 0x44e798
  414032:	je     0x4140e0
  414038:	movsx  r15d,BYTE PTR [rbx]
  41403c:	lea    r14,[rbx+0x1]
  414040:	mov    r8,QWORD PTR [rsp+0x90]
  414048:	mov    rdx,r14
  41404b:	mov    ecx,r15d
  41404e:	call   rbp
  414050:	test   eax,eax
  414052:	jne    0x4140f3
  414058:	cmp    r15b,0x52
  41405c:	je     0x414015
  41405e:	jle    0x414072
  414060:	cmp    r15b,0x53
  414064:	je     0x4140d0
  414066:	cmp    r15b,0x56
  41406a:	jne    0x414078
  41406c:	add    rbx,0xd
  414070:	jmp    0x414021
  414072:	cmp    r15b,0x4d
  414076:	je     0x4140c0
  414078:	mov    rax,QWORD PTR [rip+0x323f1]        # 0x446470
  41407f:	mov    edx,DWORD PTR [rax]
  414081:	test   edx,edx
  414083:	jle    0x4140a3
  414085:	lea    rcx,[rip+0x23b6c]        # 0x437bf8
  41408c:	mov    r8d,r15d
  41408f:	mov    edx,r13d
  414092:	call   0x41d1b0
  414097:	lea    rcx,[rip+0x23591]        # 0x43762f
  41409e:	call   0x41d1b0
  4140a3:	xor    eax,eax
  4140a5:	add    rsp,0x28
  4140a9:	pop    rbx
  4140aa:	pop    rsi
  4140ab:	pop    rdi
  4140ac:	pop    rbp
  4140ad:	pop    r12
  4140af:	pop    r13
  4140b1:	pop    r14
  4140b3:	pop    r15
  4140b5:	ret    
  4140b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4140c0:	movzx  eax,WORD PTR [rbx+0x9]
  4140c4:	lea    rbx,[rbx+rax*1+0xb]
  4140c9:	jmp    0x414021
  4140ce:	xchg   ax,ax
  4140d0:	movzx  eax,WORD PTR [rbx+0x1]
  4140d4:	lea    rbx,[r14+rax*1+0x2]
  4140d9:	jmp    0x414021
  4140de:	xchg   ax,ax
  4140e0:	mov    esi,ebx
  4140e2:	mov    rbx,QWORD PTR [rip+0x3a6bf]        # 0x44e7a8
  4140e9:	sub    esi,edi
  4140eb:	mov    rdi,rbx
  4140ee:	jmp    0x414038
  4140f3:	mov    rax,r14
  4140f6:	jmp    0x4140a5
  4140f8:	nop    DWORD PTR [rax+rax*1+0x0]
  414100:	push   rbx
  414101:	sub    rsp,0x50
  414105:	lea    r9,[rip+0xffffffffffffecc4]        # 0x412dd0
  41410c:	mov    ebx,edx
  41410e:	lea    rax,[rsp+0x4f]
  414113:	mov    edx,DWORD PTR [rcx+0x4]
  414116:	mov    r8d,ebx
  414119:	add    rcx,0x8
  41411d:	mov    BYTE PTR [rsp+0x4f],0x52
  414122:	mov    QWORD PTR [rsp+0x20],rax
  414127:	call   0x413fc0
  41412c:	test   rax,rax
  41412f:	je     0x414140
  414131:	add    rsp,0x50
  414135:	pop    rbx
  414136:	ret    
  414137:	nop    WORD PTR [rax+rax*1+0x0]
  414140:	mov    rdx,QWORD PTR [rip+0x32329]        # 0x446470
  414147:	mov    edx,DWORD PTR [rdx]
  414149:	test   edx,edx
  41414b:	jle    0x414131
  41414d:	lea    rcx,[rip+0x23aec]        # 0x437c40
  414154:	mov    edx,ebx
  414156:	mov    QWORD PTR [rsp+0x38],rax
  41415b:	call   0x41d1b0
  414160:	lea    rcx,[rip+0x234c8]        # 0x43762f
  414167:	call   0x41d1b0
  41416c:	mov    rax,QWORD PTR [rsp+0x38]
  414171:	add    rsp,0x50
  414175:	pop    rbx
  414176:	ret    
  414177:	nop    WORD PTR [rax+rax*1+0x0]
  414180:	push   r14
  414182:	push   r13
  414184:	push   r12
  414186:	push   rbp
  414187:	push   rdi
  414188:	push   rsi
  414189:	push   rbx
  41418a:	sub    rsp,0x40
  41418e:	mov    eax,DWORD PTR [rip+0x17f14]        # 0x42c0a8
  414194:	mov    rdi,rcx
  414197:	mov    rbp,rdx
  41419a:	mov    r12d,r8d
  41419d:	mov    rbx,r9
  4141a0:	lea    ecx,[rax+0x1]
  4141a3:	mov    DWORD PTR [r9],ecx
  4141a6:	call   0x412d70
  4141ab:	test   rax,rax
  4141ae:	mov    r13,rax
  4141b1:	je     0x414286
  4141b7:	cmp    WORD PTR [rax],0x0
  4141bb:	lea    rsi,[rsp+0x20]
  4141c0:	je     0x414286
  4141c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4141d0:	call   0x41c370
  4141d5:	mov    edx,0xffffffff
  4141da:	mov    rcx,r13
  4141dd:	mov    r14,rax
  4141e0:	call   0x414100
  4141e5:	test   rax,rax
  4141e8:	mov    r8,rax
  4141eb:	je     0x414205
  4141ed:	mov    rdx,r14
  4141f0:	mov    rcx,rsi
  4141f3:	call   0x4041b0
  4141f8:	mov    rcx,rsi
  4141fb:	call   0x404ab0
  414200:	test   rax,rax
  414203:	jne    0x414232
  414205:	mov    r10,QWORD PTR [rip+0x3a5c4]        # 0x44e7d0
  41420c:	movsx  r11d,WORD PTR [r13+0x0]
  414211:	test   r10,r10
  414214:	jne    0x414229
  414216:	jmp    0x4142a0
  41421b:	nop    DWORD PTR [rax+rax*1+0x0]
  414220:	mov    r10,QWORD PTR [r10+0x58]
  414224:	test   r10,r10
  414227:	je     0x4142a0
  414229:	cmp    DWORD PTR [r10],r11d
  41422c:	jne    0x414220
  41422e:	mov    rax,QWORD PTR [r10+0x8]
  414232:	test   r12d,r12d
  414235:	je     0x4142b0
  414237:	cmp    rbp,rax
  41423a:	setae  dl
  41423d:	cmp    rdi,rax
  414240:	setbe  al
  414243:	and    eax,edx
  414245:	test   al,al
  414247:	jne    0x4142c2
  414249:	add    DWORD PTR [rbx],0x1
  41424c:	mov    rdx,QWORD PTR [rip+0x3a545]        # 0x44e798
  414253:	xor    ecx,ecx
  414255:	mov    eax,DWORD PTR [r13+0x4]
  414259:	add    rax,0x8
  41425d:	lea    r8,[r13+rax*1+0x0]
  414262:	cmp    rdx,r8
  414265:	ja     0x414274
  414267:	sub    rdx,QWORD PTR [rip+0x3a53a]        # 0x44e7a8
  41426e:	mov    rcx,rdx
  414271:	neg    rcx
  414274:	add    rax,rcx
  414277:	add    r13,rax
  41427a:	cmp    WORD PTR [r13+0x0],0x0
  414280:	jne    0x4141d0
  414286:	xor    eax,eax
  414288:	mov    DWORD PTR [rbx],0xffffffff
  41428e:	add    rsp,0x40
  414292:	pop    rbx
  414293:	pop    rsi
  414294:	pop    rdi
  414295:	pop    rbp
  414296:	pop    r12
  414298:	pop    r13
  41429a:	pop    r14
  41429c:	ret    
  41429d:	nop    DWORD PTR [rax]
  4142a0:	mov    rax,QWORD PTR ds:0x8
  4142a8:	ud2    
  4142aa:	nop    WORD PTR [rax+rax*1+0x0]
  4142b0:	cmp    rbp,rax
  4142b3:	setb   dl
  4142b6:	cmp    rdi,rax
  4142b9:	seta   al
  4142bc:	or     eax,edx
  4142be:	test   al,al
  4142c0:	je     0x414249
  4142c2:	mov    rax,r13
  4142c5:	add    rsp,0x40
  4142c9:	pop    rbx
  4142ca:	pop    rsi
  4142cb:	pop    rdi
  4142cc:	pop    rbp
  4142cd:	pop    r12
  4142cf:	pop    r13
  4142d1:	pop    r14
  4142d3:	ret    
  4142d4:	xchg   ax,ax
  4142d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142e0:	push   rdi
  4142e1:	push   rsi
  4142e2:	push   rbx
  4142e3:	sub    rsp,0x20
  4142e7:	cmp    cl,0x53
  4142ea:	mov    rbx,r8
  4142ed:	jg     0x414334
  4142ef:	cmp    cl,0x52
  4142f2:	jge    0x41432a
  4142f4:	cmp    cl,0x4d
  4142f7:	jne    0x414355
  4142f9:	movzx  ecx,WORD PTR [rdx+0x8]
  4142fd:	mov    rdi,QWORD PTR [rdx]
  414300:	mov    edx,0x2
  414305:	call   0x41c6e0
  41430a:	mov    rcx,rdi
  41430d:	mov    rsi,rax
  414310:	call   0x40e950
  414315:	lea    rdx,[rip+0x2394c]        # 0x437c68
  41431c:	mov    r8,rax
  41431f:	mov    r9,rsi
  414322:	mov    rcx,rbx
  414325:	call   0x41b060
  41432a:	xor    eax,eax
  41432c:	add    rsp,0x20
  414330:	pop    rbx
  414331:	pop    rsi
  414332:	pop    rdi
  414333:	ret    
  414334:	cmp    cl,0x56
  414337:	jne    0x414355
  414339:	mov    r8d,DWORD PTR [rdx]
  41433c:	lea    rdx,[rip+0x2394b]        # 0x437c8e
  414343:	mov    rcx,rbx
  414346:	call   0x41b060
  41434b:	xor    eax,eax
  41434d:	add    rsp,0x20
  414351:	pop    rbx
  414352:	pop    rsi
  414353:	pop    rdi
  414354:	ret    
  414355:	movsx  edx,cl
  414358:	lea    rcx,[rip+0x23941]        # 0x437ca0
  41435f:	mov    r8d,edx
  414362:	call   0x41d110
  414367:	xor    eax,eax
  414369:	add    rsp,0x20
  41436d:	pop    rbx
  41436e:	pop    rsi
  41436f:	pop    rdi
  414370:	ret    
  414371:	nop    DWORD PTR [rax+rax*1+0x0]
  414376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414380:	push   r13
  414382:	push   r12
  414384:	push   rbp
  414385:	push   rdi
  414386:	push   rsi
  414387:	push   rbx
  414388:	sub    rsp,0x28
  41438c:	mov    r12d,0xffff
  414392:	mov    r13,QWORD PTR [rip+0x320d7]        # 0x446470
  414399:	test   r8,r8
  41439c:	mov    rbp,rcx
  41439f:	mov    rdi,rdx
  4143a2:	mov    rsi,r8
  4143a5:	jne    0x4143f4
  4143a7:	jmp    0x414430
  4143ac:	nop    DWORD PTR [rax+0x0]
  4143b0:	lea    rdx,[rax+0xb]
  4143b4:	mov    BYTE PTR [rax],0x4d
  4143b7:	mov    QWORD PTR [rax+0x1],rdi
  4143bb:	mov    WORD PTR [rax+0x9],bx
  4143bf:	mov    r8d,ebx
  4143c2:	mov    rcx,rdi
  4143c5:	call   0x40def0
  4143ca:	mov    eax,DWORD PTR [r13+0x0]
  4143ce:	test   eax,eax
  4143d0:	jle    0x4143ec
  4143d2:	lea    rcx,[rip+0x2390e]        # 0x437ce7
  4143d9:	mov    edx,ebx
  4143db:	call   0x41d1b0
  4143e0:	lea    rcx,[rip+0x23248]        # 0x43762f
  4143e7:	call   0x41d1b0
  4143ec:	add    rdi,rbx
  4143ef:	sub    rsi,rbx
  4143f2:	je     0x414430
  4143f4:	mov    rdx,QWORD PTR [rbp+0x10]
  4143f8:	cmp    rsi,0xffff
  4143ff:	mov    rbx,r12
  414402:	cmovbe rbx,rsi
  414406:	mov    rcx,QWORD PTR [rbp+0x8]
  41440a:	lea    r9d,[rbx+0xb]
  41440e:	lea    r8,[rdx+0x48]
  414412:	call   0x4137a0
  414417:	test   rax,rax
  41441a:	jne    0x4143b0
  41441c:	mov    eax,0x1
  414421:	add    rsp,0x28
  414425:	pop    rbx
  414426:	pop    rsi
  414427:	pop    rdi
  414428:	pop    rbp
  414429:	pop    r12
  41442b:	pop    r13
  41442d:	ret    
  41442e:	xchg   ax,ax
  414430:	xor    eax,eax
  414432:	add    rsp,0x28
  414436:	pop    rbx
  414437:	pop    rsi
  414438:	pop    rdi
  414439:	pop    rbp
  41443a:	pop    r12
  41443c:	pop    r13
  41443e:	ret    
  41443f:	nop
  414440:	push   r13
  414442:	push   r12
  414444:	push   rbp
  414445:	push   rdi
  414446:	push   rsi
  414447:	push   rbx
  414448:	sub    rsp,0x48
  41444c:	mov    rbx,QWORD PTR [rsp+0xa0]
  414454:	mov    rdi,rcx
  414457:	mov    r12,rdx
  41445a:	mov    rsi,r8
  41445d:	mov    rbp,r9
  414460:	movzx  eax,BYTE PTR [rbx]
  414463:	cmp    al,0x4d
  414465:	je     0x414660
  41446b:	jle    0x4145e5
  414471:	cmp    al,0x52
  414473:	je     0x414510
  414479:	cmp    al,0x58
  41447b:	jne    0x414620
  414481:	mov    r9d,DWORD PTR [rcx]
  414484:	test   r9d,r9d
  414487:	jne    0x4145e0
  41448d:	mov    rax,QWORD PTR [rcx+0x8]
  414491:	test   rax,rax
  414494:	je     0x4145e0
  41449a:	mov    QWORD PTR [rsp+0x20],rax
  41449f:	mov    rax,QWORD PTR [rip+0x31fca]        # 0x446470
  4144a6:	mov    QWORD PTR [rsp+0x30],r8
  4144ab:	mov    QWORD PTR [rsp+0x28],rbp
  4144b0:	mov    r8d,DWORD PTR [rax]
  4144b3:	test   r8d,r8d
  4144b6:	jle    0x4144d0
  4144b8:	lea    rcx,[rip+0x238dc]        # 0x437d9b
  4144bf:	call   0x41d1b0
  4144c4:	lea    rcx,[rip+0x23164]        # 0x43762f
  4144cb:	call   0x41d1b0
  4144d0:	mov    rdx,QWORD PTR [rbx+0x8]
  4144d4:	lea    rcx,[rsp+0x20]
  4144d9:	xor    r8d,r8d
  4144dc:	call   0x402df0
  4144e1:	test   eax,eax
  4144e3:	je     0x414500
  4144e5:	lea    rdx,[rip+0x238cb]        # 0x437db7
  4144ec:	mov    r8d,eax
  4144ef:	mov    rcx,rsi
  4144f2:	call   0x4131a0
  4144f7:	nop
  4144f8:	nop    DWORD PTR [rax+rax*1+0x0]
  414500:	add    rsp,0x48
  414504:	pop    rbx
  414505:	pop    rsi
  414506:	pop    rdi
  414507:	pop    rbp
  414508:	pop    r12
  41450a:	pop    r13
  41450c:	ret    
  41450d:	nop    DWORD PTR [rax]
  414510:	mov    r13,QWORD PTR [rip+0x31f59]        # 0x446470
  414517:	mov    eax,DWORD PTR [r13+0x0]
  41451b:	test   eax,eax
  41451d:	jle    0x414537
  41451f:	lea    rcx,[rip+0x23808]        # 0x437d2e
  414526:	call   0x41d1b0
  41452b:	lea    rcx,[rip+0x230fd]        # 0x43762f
  414532:	call   0x41d1b0
  414537:	mov    ebx,DWORD PTR [rdi]
  414539:	test   ebx,ebx
  41453b:	jne    0x4145e0
  414541:	mov    rbx,QWORD PTR [rdi+0x8]
  414545:	test   rbx,rbx
  414548:	je     0x4145e0
  41454e:	mov    rcx,QWORD PTR [rbx]
  414551:	call   0x404700
  414556:	lea    r8,[rsi+0x48]
  41455a:	lea    r9d,[rax+0x1]
  41455e:	mov    rdx,rsi
  414561:	mov    rcx,rbp
  414564:	call   0x4137a0
  414569:	test   rax,rax
  41456c:	je     0x4146e0
  414572:	mov    BYTE PTR [rax],0x52
  414575:	lea    rsi,[rsp+0x20]
  41457a:	mov    rdx,QWORD PTR [rbx]
  41457d:	lea    r8,[rax+0x1]
  414581:	mov    rcx,rsi
  414584:	call   0x4041b0
  414589:	mov    rdx,rbx
  41458c:	mov    rcx,rsi
  41458f:	call   0x404440
  414594:	mov    r10d,DWORD PTR [r13+0x0]
  414598:	test   r10d,r10d
  41459b:	jle    0x4145c0
  41459d:	mov    rcx,r12
  4145a0:	call   0x40e950
  4145a5:	lea    rcx,[rip+0x237cc]        # 0x437d78
  4145ac:	mov    rdx,rax
  4145af:	call   0x41d1b0
  4145b4:	lea    rcx,[rip+0x23074]        # 0x43762f
  4145bb:	call   0x41d1b0
  4145c0:	mov    rdx,r12
  4145c3:	mov    rcx,rsi
  4145c6:	call   0x404af0
  4145cb:	nop
  4145cc:	add    rsp,0x48
  4145d0:	pop    rbx
  4145d1:	pop    rsi
  4145d2:	pop    rdi
  4145d3:	pop    rbp
  4145d4:	pop    r12
  4145d6:	pop    r13
  4145d8:	ret    
  4145d9:	nop    DWORD PTR [rax+0x0]
  4145e0:	call   0x42b580
  4145e5:	cmp    al,0x4c
  4145e7:	jne    0x414620
  4145e9:	mov    rax,QWORD PTR [rip+0x31e80]        # 0x446470
  4145f0:	mov    ecx,DWORD PTR [rax]
  4145f2:	test   ecx,ecx
  4145f4:	jle    0x414500
  4145fa:	lea    rcx,[rip+0x237cf]        # 0x437dd0
  414601:	call   0x41d1b0
  414606:	lea    rcx,[rip+0x23022]        # 0x43762f
  41460d:	call   0x41d1b0
  414612:	nop
  414613:	add    rsp,0x48
  414617:	pop    rbx
  414618:	pop    rsi
  414619:	pop    rdi
  41461a:	pop    rbp
  41461b:	pop    r12
  41461d:	pop    r13
  41461f:	ret    
  414620:	mov    rdx,QWORD PTR [rip+0x31e49]        # 0x446470
  414627:	mov    edx,DWORD PTR [rdx]
  414629:	test   edx,edx
  41462b:	jle    0x414500
  414631:	lea    rcx,[rip+0x237e8]        # 0x437e20
  414638:	movsx  edx,al
  41463b:	call   0x41d1b0
  414640:	lea    rcx,[rip+0x22fe8]        # 0x43762f
  414647:	call   0x41d1b0
  41464c:	nop
  41464d:	add    rsp,0x48
  414651:	pop    rbx
  414652:	pop    rsi
  414653:	pop    rdi
  414654:	pop    rbp
  414655:	pop    r12
  414657:	pop    r13
  414659:	ret    
  41465a:	nop    WORD PTR [rax+rax*1+0x0]
  414660:	mov    rax,QWORD PTR [rip+0x31e09]        # 0x446470
  414667:	mov    QWORD PTR [rsp+0x20],0x0
  414670:	mov    QWORD PTR [rsp+0x28],r9
  414675:	mov    QWORD PTR [rsp+0x30],r8
  41467a:	mov    eax,DWORD PTR [rax]
  41467c:	test   eax,eax
  41467e:	jle    0x4146b9
  414680:	mov    rcx,QWORD PTR [rbx+0x8]
  414684:	mov    edi,DWORD PTR [rbx+0x18]
  414687:	call   0x40e950
  41468c:	mov    rcx,QWORD PTR [rbx+0x10]
  414690:	mov    rsi,rax
  414693:	call   0x41c550
  414698:	lea    rcx,[rip+0x23661]        # 0x437d00
  41469f:	mov    rdx,rax
  4146a2:	mov    r9d,edi
  4146a5:	mov    r8,rsi
  4146a8:	call   0x41d1b0
  4146ad:	lea    rcx,[rip+0x22f7b]        # 0x43762f
  4146b4:	call   0x41d1b0
  4146b9:	mov    rdx,QWORD PTR [rbx+0x8]
  4146bd:	mov    r8,QWORD PTR [rbx+0x10]
  4146c1:	lea    rcx,[rsp+0x20]
  4146c6:	call   0x414380
  4146cb:	nop
  4146cc:	add    rsp,0x48
  4146d0:	pop    rbx
  4146d1:	pop    rsi
  4146d2:	pop    rdi
  4146d3:	pop    rbp
  4146d4:	pop    r12
  4146d6:	pop    r13
  4146d8:	ret    
  4146d9:	nop    DWORD PTR [rax+0x0]
  4146e0:	mov    r11d,DWORD PTR [r13+0x0]
  4146e4:	test   r11d,r11d
  4146e7:	jle    0x414500
  4146ed:	lea    rcx,[rip+0x23654]        # 0x437d48
  4146f4:	call   0x41d1b0
  4146f9:	lea    rcx,[rip+0x22f2f]        # 0x43762f
  414700:	call   0x41d1b0
  414705:	jmp    0x414500
  41470a:	nop    WORD PTR [rax+rax*1+0x0]
  414710:	push   r12
  414712:	push   rbp
  414713:	push   rdi
  414714:	push   rsi
  414715:	push   rbx
  414716:	sub    rsp,0x420
  41471d:	movabs rax,0x6361725474736146
  414727:	mov    edx,0x3a65
  41472c:	mov    QWORD PTR [rsp+0x20],rax
  414731:	mov    eax,DWORD PTR [rcx]
  414733:	lea    rbp,[rsp+0x20]
  414738:	mov    WORD PTR [rsp+0x28],dx
  41473d:	mov    rdx,QWORD PTR [rcx+0x28]
  414741:	mov    rbx,rcx
  414744:	mov    DWORD PTR [rsp+0x2a],eax
  414748:	mov    rax,QWORD PTR [rcx+0x8]
  41474c:	mov    QWORD PTR [rsp+0x2e],rax
  414751:	mov    eax,DWORD PTR [rcx+0x10]
  414754:	mov    DWORD PTR [rsp+0x36],eax
  414758:	movzx  eax,BYTE PTR [rcx+0x14]
  41475c:	mov    BYTE PTR [rsp+0x3a],al
  414760:	mov    rax,QWORD PTR [rcx+0x18]
  414764:	mov    QWORD PTR [rsp+0x3b],rax
  414769:	mov    rax,QWORD PTR [rcx+0x20]
  41476d:	mov    QWORD PTR [rsp+0x43],rax
  414772:	mov    eax,DWORD PTR [rcx+0x30]
  414775:	mov    DWORD PTR [rsp+0x4b],eax
  414779:	mov    rax,QWORD PTR [rcx+0x40]
  41477d:	mov    QWORD PTR [rsp+0x4f],rax
  414782:	mov    rax,QWORD PTR [rcx+0x48]
  414786:	mov    QWORD PTR [rsp+0x57],rax
  41478b:	mov    rax,QWORD PTR [rcx+0x50]
  41478f:	mov    QWORD PTR [rsp+0x5f],rax
  414794:	mov    eax,DWORD PTR [rcx+0x70]
  414797:	lea    rcx,[rbp+0x4b]
  41479b:	mov    DWORD PTR [rsp+0x67],eax
  41479f:	call   0x413f70
  4147a4:	mov    ecx,DWORD PTR [rbx+0x30]
  4147a7:	mov    rdi,rax
  4147aa:	test   ecx,ecx
  4147ac:	je     0x414802
  4147ae:	xor    esi,esi
  4147b0:	xor    r12d,r12d
  4147b3:	mov    rax,QWORD PTR [rbx+0x38]
  4147b7:	lea    rcx,[rdi+0x1]
  4147bb:	mov    rax,QWORD PTR [rax+rsi*1]
  4147bf:	movzx  edx,BYTE PTR [rax]
  4147c2:	mov    BYTE PTR [rdi],dl
  4147c4:	movsx  edx,BYTE PTR [rax]
  4147c7:	cmp    dl,0x4d
  4147ca:	je     0x414860
  4147d0:	jle    0x414880
  4147d6:	cmp    dl,0x52
  4147d9:	je     0x414891
  4147df:	cmp    dl,0x58
  4147e2:	jne    0x414885
  4147e8:	mov    rdx,QWORD PTR [rax+0x8]
  4147ec:	call   0x413f70
  4147f1:	mov    rdi,rax
  4147f4:	add    r12d,0x1
  4147f8:	add    rsi,0x8
  4147fc:	cmp    r12d,DWORD PTR [rbx+0x30]
  414800:	jb     0x4147b3
  414802:	call   0x413870
  414807:	cmp    DWORD PTR [rbx+0x10],0x1
  41480b:	je     0x4148a0
  414811:	sub    rdi,rbp
  414814:	mov    rcx,rbp
  414817:	mov    rdx,rdi
  41481a:	call   0x413280
  41481f:	test   eax,eax
  414821:	mov    esi,eax
  414823:	jne    0x41484c
  414825:	lea    rdi,[rip+0x23618]        # 0x437e44
  41482c:	mov    rsi,rbp
  41482f:	mov    ecx,0x2
  414834:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414836:	seta   sil
  41483a:	setb   al
  41483d:	sub    esi,eax
  41483f:	movsx  esi,sil
  414843:	test   esi,esi
  414845:	je     0x4148b4
  414847:	mov    esi,0x1
  41484c:	mov    eax,esi
  41484e:	add    rsp,0x420
  414855:	pop    rbx
  414856:	pop    rsi
  414857:	pop    rdi
  414858:	pop    rbp
  414859:	pop    r12
  41485b:	ret    
  41485c:	nop    DWORD PTR [rax+0x0]
  414860:	mov    rdx,QWORD PTR [rax+0x8]
  414864:	add    rdi,0x15
  414868:	mov    QWORD PTR [rdi-0x14],rdx
  41486c:	mov    rdx,QWORD PTR [rax+0x10]
  414870:	mov    QWORD PTR [rdi-0xc],rdx
  414874:	mov    eax,DWORD PTR [rax+0x18]
  414877:	mov    DWORD PTR [rdi-0x4],eax
  41487a:	jmp    0x4147f4
  41487f:	nop
  414880:	cmp    dl,0x4c
  414883:	je     0x414891
  414885:	lea    rcx,[rip+0x232c2]        # 0x437b4e
  41488c:	call   0x41d140
  414891:	mov    rdi,rcx
  414894:	jmp    0x4147f4
  414899:	nop    DWORD PTR [rax+0x0]
  4148a0:	mov    rax,QWORD PTR [rip+0x39f79]        # 0x44e820
  4148a7:	add    rdi,0x8
  4148ab:	mov    QWORD PTR [rdi-0x8],rax
  4148af:	jmp    0x414811
  4148b4:	cmp    DWORD PTR [rbx+0x10],0x1
  4148b8:	mov    rdx,QWORD PTR [rbp+0x2]
  4148bc:	mov    QWORD PTR [rbx+0x78],rdx
  4148c0:	jne    0x41484c
  4148c2:	mov    rax,QWORD PTR [rip+0x31ba7]        # 0x446470
  4148c9:	mov    eax,DWORD PTR [rax]
  4148cb:	test   eax,eax
  4148cd:	jle    0x4148ee
  4148cf:	mov    r8d,DWORD PTR [rip+0x39f4a]        # 0x44e820
  4148d6:	lea    rcx,[rip+0x2356b]        # 0x437e48
  4148dd:	call   0x41d1b0
  4148e2:	lea    rcx,[rip+0x22d46]        # 0x43762f
  4148e9:	call   0x41d1b0
  4148ee:	movsxd r8,DWORD PTR [rsp+0x32]
  4148f3:	mov    rax,QWORD PTR [rsp+0x2a]
  4148f8:	lea    rdx,[rbp+0x16]
  4148fc:	mov    rcx,QWORD PTR [rbx+0x8]
  414900:	mov    QWORD PTR [rip+0x39f19],rax        # 0x44e820
  414907:	call   0x40fd70
  41490c:	mov    QWORD PTR [rbx+0xc8],rax
  414913:	jmp    0x41484c
  414918:	nop    DWORD PTR [rax+rax*1+0x0]
  414920:	push   rbx
  414921:	sub    rsp,0x420
  414928:	lea    rbx,[rsp+0x20]
  41492d:	call   0x40e950
  414932:	lea    rdx,[rip+0x23533]        # 0x437e6c
  414939:	mov    r8,rax
  41493c:	mov    rcx,rbx
  41493f:	call   0x42aab0
  414944:	mov    rdx,rbx
  414947:	mov    r8d,DWORD PTR [rdx]
  41494a:	add    rdx,0x4
  41494e:	lea    eax,[r8-0x1010101]
  414955:	not    r8d
  414958:	and    eax,r8d
  41495b:	and    eax,0x80808080
  414960:	je     0x414947
  414962:	mov    ecx,eax
  414964:	shr    ecx,0x10
  414967:	test   eax,0x8080
  41496c:	cmove  eax,ecx
  41496f:	lea    rcx,[rdx+0x2]
  414973:	cmove  rdx,rcx
  414977:	add    al,al
  414979:	mov    rcx,rbx
  41497c:	sbb    rdx,0x3
  414980:	sub    rdx,rbx
  414983:	add    edx,0x1
  414986:	call   0x413280
  41498b:	nop
  41498c:	add    rsp,0x420
  414993:	pop    rbx
  414994:	ret    
  414995:	nop
  414996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149a0:	push   rbp
  4149a1:	push   rdi
  4149a2:	push   rsi
  4149a3:	push   rbx
  4149a4:	sub    rsp,0x28
  4149a8:	mov    rdi,QWORD PTR [rip+0x31cb1]        # 0x446660
  4149af:	mov    rax,QWORD PTR [rdi]
  4149b2:	mov    rax,QWORD PTR [rax+0x1a0]
  4149b9:	test   rax,rax
  4149bc:	je     0x4149c5
  4149be:	mov    ecx,0x1
  4149c3:	call   rax
  4149c5:	mov    rbx,QWORD PTR [rip+0x39e04]        # 0x44e7d0
  4149cc:	xor    esi,esi
  4149ce:	mov    rbp,QWORD PTR [rip+0x31a9b]        # 0x446470
  4149d5:	test   rbx,rbx
  4149d8:	jne    0x414a02
  4149da:	jmp    0x414a80
  4149df:	nop
  4149e0:	cmp    eax,0x2
  4149e3:	je     0x414a20
  4149e5:	test   eax,eax
  4149e7:	jne    0x4149ee
  4149e9:	call   0x4100b0
  4149ee:	mov    QWORD PTR [rbx+0xc8],0x0
  4149f9:	mov    rbx,QWORD PTR [rbx+0x58]
  4149fd:	test   rbx,rbx
  414a00:	je     0x414a80
  414a02:	mov    rcx,QWORD PTR [rbx+0xc8]
  414a09:	test   rcx,rcx
  414a0c:	je     0x414a40
  414a0e:	mov    eax,DWORD PTR [rbx+0x10]
  414a11:	cmp    eax,0x1
  414a14:	jne    0x4149e0
  414a16:	call   0x40fc50
  414a1b:	jmp    0x4149ee
  414a1d:	nop    DWORD PTR [rax]
  414a20:	test   rsi,rsi
  414a23:	mov    rcx,QWORD PTR [rbx+0x8]
  414a27:	je     0x414a2f
  414a29:	cmp    QWORD PTR [rsi+0x8],rcx
  414a2d:	je     0x4149ee
  414a2f:	call   0x414920
  414a34:	mov    rsi,rbx
  414a37:	jmp    0x4149ee
  414a39:	nop    DWORD PTR [rax+0x0]
  414a40:	mov    eax,DWORD PTR [rbp+0x0]
  414a43:	test   eax,eax
  414a45:	jle    0x4149f9
  414a47:	mov    rcx,QWORD PTR [rbx+0x8]
  414a4b:	call   0x40e950
  414a50:	mov    edx,DWORD PTR [rbx]
  414a52:	lea    rcx,[rip+0x2342f]        # 0x437e88
  414a59:	mov    r8,rax
  414a5c:	call   0x41d1b0
  414a61:	lea    rcx,[rip+0x22bc7]        # 0x43762f
  414a68:	call   0x41d1b0
  414a6d:	mov    rbx,QWORD PTR [rbx+0x58]
  414a71:	test   rbx,rbx
  414a74:	jne    0x414a02
  414a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a80:	mov    rax,QWORD PTR [rdi]
  414a83:	mov    rax,QWORD PTR [rax+0x1a8]
  414a8a:	test   rax,rax
  414a8d:	je     0x414aa0
  414a8f:	mov    ecx,0x1
  414a94:	add    rsp,0x28
  414a98:	pop    rbx
  414a99:	pop    rsi
  414a9a:	pop    rdi
  414a9b:	pop    rbp
  414a9c:	rex.W jmp rax
  414a9f:	nop
  414aa0:	add    rsp,0x28
  414aa4:	pop    rbx
  414aa5:	pop    rsi
  414aa6:	pop    rdi
  414aa7:	pop    rbp
  414aa8:	ret    
  414aa9:	nop    DWORD PTR [rax+0x0]
  414ab0:	push   rbx
  414ab1:	sub    rsp,0x20
  414ab5:	mov    rbx,rcx
  414ab8:	call   0x401570
  414abd:	test   eax,eax
  414abf:	je     0x414af0
  414ac1:	call   0x413400
  414ac6:	xor    edx,edx
  414ac8:	test   eax,eax
  414aca:	je     0x414ad4
  414acc:	mov    eax,edx
  414ace:	add    rsp,0x20
  414ad2:	pop    rbx
  414ad3:	ret    
  414ad4:	lea    rdx,[rip+0x2344d]        # 0x437f28
  414adb:	mov    rcx,rbx
  414ade:	call   0x42aab0
  414ae3:	mov    edx,0x1
  414ae8:	mov    eax,edx
  414aea:	add    rsp,0x20
  414aee:	pop    rbx
  414aef:	ret    
  414af0:	lea    rdx,[rip+0x233d1]        # 0x437ec8
  414af7:	mov    rcx,rbx
  414afa:	call   0x42aab0
  414aff:	mov    edx,0x1
  414b04:	mov    eax,edx
  414b06:	add    rsp,0x20
  414b0a:	pop    rbx
  414b0b:	ret    
  414b0c:	nop    DWORD PTR [rax+0x0]
  414b10:	push   rsi
  414b11:	push   rbx
  414b12:	sub    rsp,0x428
  414b19:	lea    rbx,[rsp+0x20]
  414b1e:	mov    rsi,rdx
  414b21:	call   0x40e950
  414b26:	lea    rdx,[rip+0x23434]        # 0x437f61
  414b2d:	mov    r8,rax
  414b30:	mov    rcx,rbx
  414b33:	call   0x42aab0
  414b38:	mov    r8,rbx
  414b3b:	mov    r9d,DWORD PTR [r8]
  414b3e:	add    r8,0x4
  414b42:	lea    eax,[r9-0x1010101]
  414b49:	not    r9d
  414b4c:	and    eax,r9d
  414b4f:	and    eax,0x80808080
  414b54:	je     0x414b3b
  414b56:	mov    edx,eax
  414b58:	mov    rcx,rbx
  414b5b:	shr    edx,0x10
  414b5e:	test   eax,0x8080
  414b63:	cmove  eax,edx
  414b66:	lea    rdx,[r8+0x2]
  414b6a:	cmove  r8,rdx
  414b6e:	add    al,al
  414b70:	sbb    r8,0x3
  414b74:	sub    r8,rbx
  414b77:	lea    edx,[r8+0x1]
  414b7b:	call   0x413280
  414b80:	test   eax,eax
  414b82:	jne    0x414b8b
  414b84:	cmp    BYTE PTR [rsp+0x20],0x45
  414b89:	je     0x414b95
  414b8b:	add    rsp,0x428
  414b92:	pop    rbx
  414b93:	pop    rsi
  414b94:	ret    
  414b95:	mov    rdx,rbx
  414b98:	mov    rcx,rsi
  414b9b:	call   0x42a620
  414ba0:	mov    eax,0xffffffff
  414ba5:	jmp    0x414b8b
  414ba7:	nop    WORD PTR [rax+rax*1+0x0]
  414bb0:	push   r12
  414bb2:	push   rbp
  414bb3:	push   rdi
  414bb4:	push   rsi
  414bb5:	push   rbx
  414bb6:	sub    rsp,0x40
  414bba:	cmp    BYTE PTR [rdx+0x14],0x1
  414bbe:	mov    r12,QWORD PTR [rdx+0x20]
  414bc2:	mov    rsi,rcx
  414bc5:	mov    rcx,QWORD PTR [rdx+0x8]
  414bc9:	mov    rbx,rdx
  414bcc:	mov    rbp,QWORD PTR [rdx+0x18]
  414bd0:	sbb    edi,edi
  414bd2:	call   0x40e950
  414bd7:	mov    r8d,DWORD PTR [rbx]
  414bda:	add    edi,0x45
  414bdd:	lea    rdx,[rip+0x23390]        # 0x437f74
  414be4:	mov    r9,rax
  414be7:	mov    QWORD PTR [rsp+0x30],r12
  414bec:	mov    QWORD PTR [rsp+0x28],rbp
  414bf1:	mov    DWORD PTR [rsp+0x20],edi
  414bf5:	mov    rcx,rsi
  414bf8:	call   0x42aab0
  414bfd:	mov    eax,DWORD PTR [rbx+0x10]
  414c00:	cmp    eax,0x1
  414c03:	je     0x414c60
  414c05:	cmp    eax,0x2
  414c08:	je     0x414c80
  414c0a:	mov    rcx,QWORD PTR [rbx+0x28]
  414c0e:	test   rcx,rcx
  414c11:	je     0x414c52
  414c13:	call   0x401a80
  414c18:	mov    rcx,rsi
  414c1b:	mov    rdi,rax
  414c1e:	call   0x42a610
  414c23:	mov    rdx,rax
  414c26:	mov    rax,QWORD PTR [rbx+0x28]
  414c2a:	mov    r9,rdi
  414c2d:	lea    rcx,[rsi+rdx*1]
  414c31:	lea    rdx,[rip+0x23358]        # 0x437f90
  414c38:	mov    r8d,DWORD PTR [rax]
  414c3b:	call   0x42aab0
  414c40:	mov    rcx,rdi
  414c43:	add    rsp,0x40
  414c47:	pop    rbx
  414c48:	pop    rsi
  414c49:	pop    rdi
  414c4a:	pop    rbp
  414c4b:	pop    r12
  414c4d:	jmp    0x42a6c8
  414c52:	add    rsp,0x40
  414c56:	pop    rbx
  414c57:	pop    rsi
  414c58:	pop    rdi
  414c59:	pop    rbp
  414c5a:	pop    r12
  414c5c:	ret    
  414c5d:	nop    DWORD PTR [rax]
  414c60:	mov    rcx,rsi
  414c63:	call   0x42a610
  414c68:	mov    r8d,DWORD PTR [rbx+0x70]
  414c6c:	lea    rcx,[rsi+rax*1]
  414c70:	lea    rdx,[rip+0x23311]        # 0x437f88
  414c77:	call   0x42aab0
  414c7c:	jmp    0x414c0a
  414c7e:	xchg   ax,ax
  414c80:	mov    rcx,rsi
  414c83:	call   0x42a610
  414c88:	lea    rdx,[rip+0x232fe]        # 0x437f8d
  414c8f:	lea    rcx,[rsi+rax*1]
  414c93:	call   0x42aab0
  414c98:	jmp    0x414c0a
  414c9d:	nop    DWORD PTR [rax]
  414ca0:	push   rbp
  414ca1:	push   r15
  414ca3:	push   r14
  414ca5:	push   r13
  414ca7:	push   r12
  414ca9:	push   rdi
  414caa:	push   rsi
  414cab:	push   rbx
  414cac:	sub    rsp,0x48
  414cb0:	lea    rbp,[rsp+0x80]
  414cb8:	mov    rsi,QWORD PTR [rbp+0x30]
  414cbc:	mov    rdi,rcx
  414cbf:	mov    r12,rdx
  414cc2:	mov    r13,r8
  414cc5:	mov    r14,r9
  414cc8:	mov    rcx,rsi
  414ccb:	call   0x42a610
  414cd0:	lea    r10d,[rax+rax*1+0x1]
  414cd5:	mov    rbx,rax
  414cd8:	movsxd r10,r10d
  414cdb:	add    r10,0x1e
  414cdf:	mov    rax,r10
  414ce2:	and    rax,0xfffffffffffffff0
  414ce6:	call   0x425730
  414ceb:	sub    rsp,rax
  414cee:	mov    r8d,ebx
  414cf1:	mov    rcx,rsi
  414cf4:	lea    r15,[rsp+0x40]
  414cf9:	mov    rdx,r15
  414cfc:	call   0x41cef0
  414d01:	mov    rcx,QWORD PTR [r13+0x0]
  414d05:	mov    rsi,QWORD PTR [r14]
  414d08:	call   0x40e950
  414d0d:	mov    r8d,DWORD PTR [r12]
  414d11:	lea    rdx,[rip+0x23280]        # 0x437f98
  414d18:	mov    r9,rax
  414d1b:	mov    QWORD PTR [rsp+0x38],r15
  414d20:	mov    DWORD PTR [rsp+0x30],ebx
  414d24:	mov    rcx,rdi
  414d27:	mov    DWORD PTR [rsp+0x28],0x0
  414d2f:	mov    QWORD PTR [rsp+0x20],rsi
  414d34:	call   0x42aab0
  414d39:	nop
  414d3a:	lea    rsp,[rbp-0x38]
  414d3e:	pop    rbx
  414d3f:	pop    rsi
  414d40:	pop    rdi
  414d41:	pop    r12
  414d43:	pop    r13
  414d45:	pop    r14
  414d47:	pop    r15
  414d49:	pop    rbp
  414d4a:	ret    
  414d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  414d50:	push   rbp
  414d51:	push   r12
  414d53:	push   rdi
  414d54:	push   rsi
  414d55:	push   rbx
  414d56:	mov    rbp,rsp
  414d59:	sub    rsp,0x30
  414d5d:	mov    r12,QWORD PTR [rdx]
  414d60:	lea    rdi,[rip+0x23244]        # 0x437fab
  414d67:	mov    rsi,rcx
  414d6a:	mov    rbx,rdx
  414d6d:	test   r12,r12
  414d70:	je     0x414da8
  414d72:	mov    rcx,r12
  414d75:	call   0x42a610
  414d7a:	lea    r9d,[rax+rax*1+0x1]
  414d7f:	mov    r8,rax
  414d82:	movsxd r9,r9d
  414d85:	add    r9,0x1e
  414d89:	mov    rax,r9
  414d8c:	and    rax,0xfffffffffffffff0
  414d90:	call   0x425730
  414d95:	sub    rsp,rax
  414d98:	mov    rcx,r12
  414d9b:	lea    rdi,[rsp+0x30]
  414da0:	mov    rdx,rdi
  414da3:	call   0x41cef0
  414da8:	xor    r12d,r12d
  414dab:	cmp    QWORD PTR [rbx+0x20],0x0
  414db0:	mov    rcx,QWORD PTR [rbx+0x10]
  414db4:	setne  r12b
  414db8:	xor    edx,edx
  414dba:	call   0x41c6e0
  414dbf:	mov    r8d,DWORD PTR [rbx+0x8]
  414dc3:	lea    rdx,[rip+0x231e2]        # 0x437fac
  414dca:	mov    r9,rax
  414dcd:	mov    QWORD PTR [rsp+0x28],rdi
  414dd2:	mov    DWORD PTR [rsp+0x20],r12d
  414dd7:	mov    rcx,rsi
  414dda:	call   0x42aab0
  414ddf:	nop
  414de0:	mov    rsp,rbp
  414de3:	pop    rbx
  414de4:	pop    rsi
  414de5:	pop    rdi
  414de6:	pop    r12
  414de8:	pop    rbp
  414de9:	ret    
  414dea:	nop    WORD PTR [rax+rax*1+0x0]
  414df0:	push   rbp
  414df1:	push   rdi
  414df2:	push   rsi
  414df3:	push   rbx
  414df4:	sub    rsp,0x28
  414df8:	call   0x401570
  414dfd:	test   eax,eax
  414dff:	jne    0x414e53
  414e01:	lea    rbx,[rip+0x25000]        # 0x439e08
  414e08:	lea    rbp,[rip+0x251d9]        # 0x439fe8
  414e0f:	lea    rdi,[rip+0x39a6a]        # 0x44e880
  414e16:	jmp    0x414e29
  414e18:	nop    DWORD PTR [rax+rax*1+0x0]
  414e20:	add    rbx,0x10
  414e24:	cmp    rbx,rbp
  414e27:	je     0x414e60
  414e29:	movsxd rax,DWORD PTR [rbx]
  414e2c:	mov    rsi,QWORD PTR [rbx-0x8]
  414e30:	mov    r8d,0x1
  414e36:	mov    rcx,rsi
  414e39:	lea    rdx,[rdi+rax*1]
  414e3d:	call   0x406720
  414e42:	test   eax,eax
  414e44:	jne    0x414e20
  414e46:	mov    rax,QWORD PTR [rip+0x31623]        # 0x446470
  414e4d:	mov    eax,DWORD PTR [rax]
  414e4f:	test   eax,eax
  414e51:	jne    0x414e70
  414e53:	add    rsp,0x28
  414e57:	pop    rbx
  414e58:	pop    rsi
  414e59:	pop    rdi
  414e5a:	pop    rbp
  414e5b:	ret    
  414e5c:	nop    DWORD PTR [rax+0x0]
  414e60:	xor    ecx,ecx
  414e62:	add    rsp,0x28
  414e66:	pop    rbx
  414e67:	pop    rsi
  414e68:	pop    rdi
  414e69:	pop    rbp
  414e6a:	jmp    0x401580
  414e6f:	nop
  414e70:	lea    rcx,[rip+0x23141]        # 0x437fb8
  414e77:	mov    rdx,rsi
  414e7a:	add    rsp,0x28
  414e7e:	pop    rbx
  414e7f:	pop    rsi
  414e80:	pop    rdi
  414e81:	pop    rbp
  414e82:	jmp    0x41d1b0
  414e87:	nop    WORD PTR [rax+rax*1+0x0]
  414e90:	push   rsi
  414e91:	push   rbx
  414e92:	sub    rsp,0x28
  414e96:	mov    rbx,QWORD PTR [rip+0x39913]        # 0x44e7b0
  414e9d:	mov    esi,ecx
  414e9f:	test   rbx,rbx
  414ea2:	jne    0x414eb9
  414ea4:	jmp    0x414f10
  414ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414eb0:	mov    rbx,QWORD PTR [rbx+0x28]
  414eb4:	test   rbx,rbx
  414eb7:	je     0x414f10
  414eb9:	cmp    esi,DWORD PTR [rbx+0x8]
  414ebc:	jne    0x414eb0
  414ebe:	mov    rax,QWORD PTR [rbx+0x20]
  414ec2:	test   rax,rax
  414ec5:	je     0x414f50
  414ecb:	call   rax
  414ecd:	mov    QWORD PTR [rbx+0x18],rax
  414ed1:	mov    rdx,QWORD PTR [rip+0x31598]        # 0x446470
  414ed8:	mov    edx,DWORD PTR [rdx]
  414eda:	test   edx,edx
  414edc:	jle    0x414f07
  414ede:	mov    rcx,rax
  414ee1:	call   0x41c570
  414ee6:	lea    rcx,[rip+0x23113]        # 0x438000
  414eed:	mov    r8,rax
  414ef0:	mov    edx,esi
  414ef2:	call   0x41d1b0
  414ef7:	lea    rcx,[rip+0x22731]        # 0x43762f
  414efe:	call   0x41d1b0
  414f03:	mov    rax,QWORD PTR [rbx+0x18]
  414f07:	add    rsp,0x28
  414f0b:	pop    rbx
  414f0c:	pop    rsi
  414f0d:	ret    
  414f0e:	xchg   ax,ax
  414f10:	mov    rax,QWORD PTR [rip+0x31559]        # 0x446470
  414f17:	mov    eax,DWORD PTR [rax]
  414f19:	test   eax,eax
  414f1b:	jle    0x414f40
  414f1d:	lea    rcx,[rip+0x230ac]        # 0x437fd0
  414f24:	mov    edx,esi
  414f26:	call   0x41d1b0
  414f2b:	lea    rcx,[rip+0x226fd]        # 0x43762f
  414f32:	call   0x41d1b0
  414f37:	xor    eax,eax
  414f39:	jmp    0x414f07
  414f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  414f40:	xor    eax,eax
  414f42:	add    rsp,0x28
  414f46:	pop    rbx
  414f47:	pop    rsi
  414f48:	ret    
  414f49:	nop    DWORD PTR [rax+0x0]
  414f50:	mov    rax,QWORD PTR [rbx+0x18]
  414f54:	jmp    0x414ed1
  414f59:	nop    DWORD PTR [rax+0x0]
  414f60:	sub    rsp,0x28
  414f64:	mov    rax,QWORD PTR [rip+0x39845]        # 0x44e7b0
  414f6b:	test   rax,rax
  414f6e:	jne    0x414f7b
  414f70:	jmp    0x414f90
  414f72:	mov    rax,QWORD PTR [rax+0x28]
  414f76:	test   rax,rax
  414f79:	je     0x414f90
  414f7b:	cmp    ecx,DWORD PTR [rax+0x8]
  414f7e:	jne    0x414f72
  414f80:	mov    QWORD PTR [rax+0x18],rdx
  414f84:	add    rsp,0x28
  414f88:	ret    
  414f89:	nop    DWORD PTR [rax+0x0]
  414f90:	mov    rax,QWORD PTR [rip+0x314d9]        # 0x446470
  414f97:	mov    eax,DWORD PTR [rax]
  414f99:	test   eax,eax
  414f9b:	jle    0x414f84
  414f9d:	mov    edx,ecx
  414f9f:	lea    rcx,[rip+0x2308a]        # 0x438030
  414fa6:	call   0x41d1b0
  414fab:	lea    rcx,[rip+0x2267d]        # 0x43762f
  414fb2:	add    rsp,0x28
  414fb6:	jmp    0x41d1b0
  414fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414fc0:	jmp    0x414e90
  414fc5:	nop
  414fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fd0:	jmp    0x414f60
  414fd2:	nop    DWORD PTR [rax+0x0]
  414fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fe0:	mov    rax,QWORD PTR [rip+0x39849]        # 0x44e830
  414fe7:	test   rax,rax
  414fea:	je     0x415016
  414fec:	lea    rdx,[rcx+rdx*1-0x1]
  414ff1:	cmp    QWORD PTR [rax],rcx
  414ff4:	ja     0x414ffc
  414ff6:	cmp    rdx,QWORD PTR [rax+0x8]
  414ffa:	jbe    0x415010
  414ffc:	mov    rax,QWORD PTR [rax+0x10]
  415000:	test   rax,rax
  415003:	jne    0x414ff1
  415005:	repz ret 
  415007:	nop    WORD PTR [rax+rax*1+0x0]
  415010:	mov    eax,0x1
  415015:	ret    
  415016:	xor    eax,eax
  415018:	ret    
  415019:	nop    DWORD PTR [rax+0x0]
  415020:	push   rdi
  415021:	push   rsi
  415022:	push   rbx
  415023:	sub    rsp,0x30
  415027:	mov    r8,QWORD PTR [rip+0x397ea]        # 0x44e818
  41502e:	mov    rbx,rcx
  415031:	mov    rsi,rdx
  415034:	test   r8,r8
  415037:	je     0x4150f0
  41503d:	mov    rax,r8
  415040:	sub    rax,QWORD PTR [rip+0x397c9]        # 0x44e810
  415047:	cmp    rax,rbx
  41504a:	jb     0x4150b0
  41504c:	mov    rax,QWORD PTR [rip+0x3141d]        # 0x446470
  415053:	mov    rcx,r8
  415056:	sub    rcx,rbx
  415059:	mov    QWORD PTR [rip+0x397b8],rcx        # 0x44e818
  415060:	mov    eax,DWORD PTR [rax]
  415062:	test   eax,eax
  415064:	jle    0x41509b
  415066:	call   0x40e950
  41506b:	mov    rcx,rbx
  41506e:	mov    rdi,rax
  415071:	call   0x41c550
  415076:	lea    rcx,[rip+0x2306b]        # 0x4380e8
  41507d:	mov    rdx,rax
  415080:	mov    r8,rdi
  415083:	call   0x41d1b0
  415088:	lea    rcx,[rip+0x225a0]        # 0x43762f
  41508f:	call   0x41d1b0
  415094:	mov    rcx,QWORD PTR [rip+0x3977d]        # 0x44e818
  41509b:	mov    QWORD PTR [rsi],rcx
  41509e:	mov    esi,0x1
  4150a3:	mov    eax,esi
  4150a5:	add    rsp,0x30
  4150a9:	pop    rbx
  4150aa:	pop    rsi
  4150ab:	pop    rdi
  4150ac:	ret    
  4150ad:	nop    DWORD PTR [rax]
  4150b0:	mov    rax,QWORD PTR [rip+0x313b9]        # 0x446470
  4150b7:	xor    esi,esi
  4150b9:	mov    edx,DWORD PTR [rax]
  4150bb:	test   edx,edx
  4150bd:	jle    0x4150a3
  4150bf:	mov    rcx,rbx
  4150c2:	call   0x41c550
  4150c7:	lea    rcx,[rip+0x22fe2]        # 0x4380b0
  4150ce:	mov    rdx,rax
  4150d1:	call   0x41d1b0
  4150d6:	lea    rcx,[rip+0x22552]        # 0x43762f
  4150dd:	call   0x41d1b0
  4150e2:	mov    eax,esi
  4150e4:	add    rsp,0x30
  4150e8:	pop    rbx
  4150e9:	pop    rsi
  4150ea:	pop    rdi
  4150eb:	ret    
  4150ec:	nop    DWORD PTR [rax+0x0]
  4150f0:	lea    rdi,[rsp+0x28]
  4150f5:	mov    rcx,QWORD PTR [rip+0x3979c]        # 0x44e898
  4150fc:	lea    rax,[rip+0x3970d]        # 0x44e810
  415103:	mov    r8b,0x8
  415106:	mov    rdx,rdi
  415109:	mov    QWORD PTR [rsp+0x28],rax
  41510e:	call   0x40def0
  415113:	mov    rdx,QWORD PTR [rsp+0x28]
  415118:	test   eax,eax
  41511a:	mov    QWORD PTR [rip+0x396ef],rdx        # 0x44e810
  415121:	jne    0x415170
  415123:	mov    rcx,QWORD PTR [rip+0x39776]        # 0x44e8a0
  41512a:	lea    rax,[rip+0x396e7]        # 0x44e818
  415131:	mov    r8d,0x8
  415137:	mov    rdx,rdi
  41513a:	mov    QWORD PTR [rsp+0x28],rax
  41513f:	call   0x40def0
  415144:	mov    r8,QWORD PTR [rsp+0x28]
  415149:	test   eax,eax
  41514b:	mov    QWORD PTR [rip+0x396c6],r8        # 0x44e818
  415152:	je     0x41503d
  415158:	lea    r8,[rip+0x22f29]        # 0x438088
  41515f:	lea    rcx,[rip+0x2282d]        # 0x437993
  415166:	mov    edx,0xb98
  41516b:	call   0x41d170
  415170:	lea    r8,[rip+0x22ee9]        # 0x438060
  415177:	lea    rcx,[rip+0x22815]        # 0x437993
  41517e:	mov    edx,0xb91
  415183:	call   0x41d170
  415188:	nop
  415189:	nop    DWORD PTR [rax+0x0]
  415190:	push   rsi
  415191:	push   rbx
  415192:	sub    rsp,0x48
  415196:	mov    r8d,0x8
  41519c:	mov    rbx,rcx
  41519f:	lea    rsi,[rsp+0x38]
  4151a4:	mov    rcx,QWORD PTR [rip+0x396f5]        # 0x44e8a0
  4151ab:	lea    rax,[rsp+0x28]
  4151b0:	mov    rdx,rsi
  4151b3:	mov    QWORD PTR [rsp+0x38],rax
  4151b8:	call   0x40def0
  4151bd:	mov    rcx,QWORD PTR [rsp+0x38]
  4151c2:	test   eax,eax
  4151c4:	mov    QWORD PTR [rsp+0x28],rcx
  4151c9:	jne    0x415237
  4151cb:	test   rbx,rbx
  4151ce:	je     0x415228
  4151d0:	movabs rax,0x69616c6320736177
  4151da:	mov    DWORD PTR [rbx+0x8],0x676e696d
  4151e1:	mov    BYTE PTR [rbx+0xc],0x0
  4151e5:	mov    QWORD PTR [rbx],rax
  4151e8:	mov    rcx,QWORD PTR [rip+0x396b9]        # 0x44e8a8
  4151ef:	lea    rax,[rsp+0x30]
  4151f4:	mov    r8d,0x8
  4151fa:	mov    rdx,rsi
  4151fd:	mov    QWORD PTR [rsp+0x38],rax
  415202:	call   0x40def0
  415207:	mov    rcx,QWORD PTR [rsp+0x38]
  41520c:	test   eax,eax
  41520e:	mov    QWORD PTR [rsp+0x30],rcx
  415213:	jne    0x41524f
  415215:	mov    r8d,0x64
  41521b:	mov    rdx,rbx
  41521e:	call   0x40def0
  415223:	mov    rcx,QWORD PTR [rsp+0x28]
  415228:	xor    eax,eax
  41522a:	test   rcx,rcx
  41522d:	setne  al
  415230:	add    rsp,0x48
  415234:	pop    rbx
  415235:	pop    rsi
  415236:	ret    
  415237:	lea    r8,[rip+0x22e4a]        # 0x438088
  41523e:	lea    rcx,[rip+0x2274e]        # 0x437993
  415245:	mov    edx,0xbbc
  41524a:	call   0x41d170
  41524f:	lea    r8,[rip+0x22ec1]        # 0x438117
  415256:	lea    rcx,[rip+0x22736]        # 0x437993
  41525d:	mov    edx,0xbc7
  415262:	call   0x41d170
  415267:	nop
  415268:	nop    DWORD PTR [rax+rax*1+0x0]
  415270:	push   rsi
  415271:	push   rbx
  415272:	sub    rsp,0x38
  415276:	mov    esi,DWORD PTR [rip+0x394f0]        # 0x44e76c
  41527c:	test   esi,esi
  41527e:	jne    0x4152b0
  415280:	mov    rax,QWORD PTR [rip+0x311e9]        # 0x446470
  415287:	mov    ebx,DWORD PTR [rax]
  415289:	test   ebx,ebx
  41528b:	jle    0x4152a6
  41528d:	lea    rcx,[rip+0x22e9c]        # 0x438130
  415294:	call   0x41d1b0
  415299:	lea    rcx,[rip+0x2238f]        # 0x43762f
  4152a0:	call   0x41d1b0
  4152a5:	nop
  4152a6:	add    rsp,0x38
  4152aa:	pop    rbx
  4152ab:	pop    rsi
  4152ac:	ret    
  4152ad:	nop    DWORD PTR [rax]
  4152b0:	mov    rsi,QWORD PTR [rip+0x311b9]        # 0x446470
  4152b7:	mov    r11d,DWORD PTR [rsi]
  4152ba:	test   r11d,r11d
  4152bd:	jle    0x4152d7
  4152bf:	lea    rcx,[rip+0x22e8b]        # 0x438151
  4152c6:	call   0x41d1b0
  4152cb:	lea    rcx,[rip+0x2235d]        # 0x43762f
  4152d2:	call   0x41d1b0
  4152d7:	mov    rbx,QWORD PTR [rip+0x31382]        # 0x446660
  4152de:	mov    rax,QWORD PTR [rbx]
  4152e1:	mov    rax,QWORD PTR [rax+0x1a0]
  4152e8:	test   rax,rax
  4152eb:	je     0x4152f4
  4152ed:	mov    ecx,0x1
  4152f2:	call   rax
  4152f4:	mov    DWORD PTR [rip+0x3946e],0x0        # 0x44e76c
  4152fe:	call   0x401570
  415303:	test   eax,eax
  415305:	jne    0x415404
  41530b:	call   0x413210
  415310:	mov    QWORD PTR [rip+0x39441],rax        # 0x44e758
  415317:	lea    rax,[rip+0x22e71]        # 0x43818f
  41531e:	mov    DWORD PTR [rip+0x39504],0x0        # 0x44e82c
  415328:	mov    QWORD PTR [rip+0x16d71],rax        # 0x42c0a0
  41532f:	mov    rax,QWORD PTR [rip+0x39492]        # 0x44e7c8
  415336:	test   rax,rax
  415339:	je     0x415450
  41533f:	mov    r10d,DWORD PTR [rsi]
  415342:	test   r10d,r10d
  415345:	jle    0x41536c
  415347:	mov    r8,QWORD PTR [rax+0x20]
  41534b:	mov    edx,DWORD PTR [rax]
  41534d:	lea    rcx,[rip+0x22e44]        # 0x438198
  415354:	call   0x41d1b0
  415359:	lea    rcx,[rip+0x222cf]        # 0x43762f
  415360:	call   0x41d1b0
  415365:	mov    rax,QWORD PTR [rip+0x3945c]        # 0x44e7c8
  41536c:	mov    eax,DWORD PTR [rax]
  41536e:	lea    rdx,[rip+0x22e5f]        # 0x4381d4
  415375:	mov    QWORD PTR [rip+0x16d24],rdx        # 0x42c0a0
  41537c:	mov    DWORD PTR [rip+0x394aa],eax        # 0x44e82c
  415382:	mov    QWORD PTR [rip+0x3943b],0x0        # 0x44e7c8
  41538d:	mov    QWORD PTR [rip+0x39420],0x0        # 0x44e7b8
  415398:	call   0x4149a0
  41539d:	call   0x401570
  4153a2:	test   eax,eax
  4153a4:	jne    0x415443
  4153aa:	mov    rcx,QWORD PTR [rip+0x3942f]        # 0x44e7e0
  4153b1:	test   rcx,rcx
  4153b4:	je     0x4153c6
  4153b6:	call   0x4100b0
  4153bb:	mov    QWORD PTR [rip+0x3941a],0x0        # 0x44e7e0
  4153c6:	mov    rcx,QWORD PTR [rip+0x3940b]        # 0x44e7d8
  4153cd:	test   rcx,rcx
  4153d0:	je     0x4153e2
  4153d2:	call   0x4100b0
  4153d7:	mov    QWORD PTR [rip+0x393f6],0x0        # 0x44e7d8
  4153e2:	mov    rax,QWORD PTR [rbx]
  4153e5:	mov    rax,QWORD PTR [rax+0x1a8]
  4153ec:	test   rax,rax
  4153ef:	je     0x4152a6
  4153f5:	mov    ecx,0x1
  4153fa:	call   rax
  4153fc:	nop
  4153fd:	add    rsp,0x38
  415401:	pop    rbx
  415402:	pop    rsi
  415403:	ret    
  415404:	mov    rcx,QWORD PTR [rip+0x394f5]        # 0x44e900
  41540b:	lea    rdx,[rsp+0x2c]
  415410:	mov    r8d,0x4
  415416:	mov    DWORD PTR [rsp+0x2c],0x0
  41541e:	call   0x40df50
  415423:	test   eax,eax
  415425:	je     0x41530b
  41542b:	lea    r8,[rip+0x22d36]        # 0x438168
  415432:	lea    rcx,[rip+0x2255a]        # 0x437993
  415439:	mov    edx,0xd72
  41543e:	call   0x41d170
  415443:	call   0x415550
  415448:	jmp    0x4153aa
  41544d:	nop    DWORD PTR [rax]
  415450:	mov    r9d,DWORD PTR [rip+0x3936d]        # 0x44e7c4
  415457:	test   r9d,r9d
  41545a:	jne    0x4154b2
  41545c:	movsxd rax,DWORD PTR [rip+0x3935d]        # 0x44e7c0
  415463:	test   eax,eax
  415465:	je     0x4154e5
  415467:	mov    ecx,DWORD PTR [rsi]
  415469:	test   ecx,ecx
  41546b:	jle    0x41548c
  41546d:	lea    rcx,[rip+0x22dac]        # 0x438220
  415474:	call   0x41d1b0
  415479:	lea    rcx,[rip+0x221af]        # 0x43762f
  415480:	call   0x41d1b0
  415485:	movsxd rax,DWORD PTR [rip+0x39334]        # 0x44e7c0
  41548c:	lea    rdx,[rip+0x2456d]        # 0x439a00
  415493:	mov    rax,QWORD PTR [rdx+rax*8]
  415497:	mov    QWORD PTR [rip+0x16c02],rax        # 0x42c0a0
  41549e:	mov    rax,QWORD PTR [rip+0x39313]        # 0x44e7b8
  4154a5:	mov    eax,DWORD PTR [rax]
  4154a7:	mov    DWORD PTR [rip+0x3937f],eax        # 0x44e82c
  4154ad:	jmp    0x415382
  4154b2:	mov    r8d,DWORD PTR [rsi]
  4154b5:	test   r8d,r8d
  4154b8:	jle    0x4154d2
  4154ba:	lea    rcx,[rip+0x22d1f]        # 0x4381e0
  4154c1:	call   0x41d1b0
  4154c6:	lea    rcx,[rip+0x22162]        # 0x43762f
  4154cd:	call   0x41d1b0
  4154d2:	lea    rax,[rip+0x22d3b]        # 0x438214
  4154d9:	mov    QWORD PTR [rip+0x16bc0],rax        # 0x42c0a0
  4154e0:	jmp    0x415382
  4154e5:	call   0x4052b0
  4154ea:	test   eax,eax
  4154ec:	jne    0x41551f
  4154ee:	mov    edx,DWORD PTR [rsi]
  4154f0:	test   edx,edx
  4154f2:	jle    0x41550c
  4154f4:	lea    rcx,[rip+0x22d5d]        # 0x438258
  4154fb:	call   0x41d1b0
  415500:	lea    rcx,[rip+0x22128]        # 0x43762f
  415507:	call   0x41d1b0
  41550c:	lea    rax,[rip+0x22d71]        # 0x438284
  415513:	mov    QWORD PTR [rip+0x16b86],rax        # 0x42c0a0
  41551a:	jmp    0x415382
  41551f:	mov    eax,DWORD PTR [rsi]
  415521:	test   eax,eax
  415523:	jle    0x41553d
  415525:	lea    rcx,[rip+0x22d6c]        # 0x438298
  41552c:	call   0x41d1b0
  415531:	lea    rcx,[rip+0x220f7]        # 0x43762f
  415538:	call   0x41d1b0
  41553d:	lea    rax,[rip+0x22d82]        # 0x4382c6
  415544:	mov    QWORD PTR [rip+0x16b55],rax        # 0x42c0a0
  41554b:	jmp    0x415382
  415550:	push   r15
  415552:	push   r14
  415554:	push   r13
  415556:	push   r12
  415558:	push   rbp
  415559:	push   rdi
  41555a:	push   rsi
  41555b:	push   rbx
  41555c:	sub    rsp,0xa8
  415563:	mov    rcx,QWORD PTR [rip+0x393be]        # 0x44e928
  41556a:	mov    r8d,0x4
  415570:	lea    rdx,[rsp+0x50]
  415575:	call   0x40def0
  41557a:	test   eax,eax
  41557c:	je     0x415592
  41557e:	add    rsp,0xa8
  415585:	pop    rbx
  415586:	pop    rsi
  415587:	pop    rdi
  415588:	pop    rbp
  415589:	pop    r12
  41558b:	pop    r13
  41558d:	pop    r14
  41558f:	pop    r15
  415591:	ret    
  415592:	mov    rcx,QWORD PTR [rip+0x39397]        # 0x44e930
  415599:	lea    rdx,[rsp+0x54]
  41559e:	mov    r8d,0x4
  4155a4:	call   0x40def0
  4155a9:	test   eax,eax
  4155ab:	jne    0x41557e
  4155ad:	mov    rbx,QWORD PTR [rip+0x30ebc]        # 0x446470
  4155b4:	mov    r9d,DWORD PTR [rbx]
  4155b7:	test   r9d,r9d
  4155ba:	jle    0x4155e4
  4155bc:	mov    r8d,DWORD PTR [rsp+0x54]
  4155c1:	mov    r9d,DWORD PTR [rsp+0x50]
  4155c6:	lea    rcx,[rip+0x22d03]        # 0x4382d0
  4155cd:	mov    edx,r8d
  4155d0:	sub    edx,r9d
  4155d3:	call   0x41d1b0
  4155d8:	lea    rcx,[rip+0x22050]        # 0x43762f
  4155df:	call   0x41d1b0
  4155e4:	mov    eax,DWORD PTR [rsp+0x50]
  4155e8:	cmp    DWORD PTR [rsp+0x54],eax
  4155ec:	je     0x41557e
  4155ee:	mov    rcx,QWORD PTR [rip+0x392db]        # 0x44e8d0
  4155f5:	xor    edx,edx
  4155f7:	call   0x4100a0
  4155fc:	mov    rcx,QWORD PTR [rip+0x3930d]        # 0x44e910
  415603:	lea    rdx,[rsp+0x58]
  415608:	mov    r8d,0x4
  41560e:	mov    rsi,rax
  415611:	call   0x40def0
  415616:	test   eax,eax
  415618:	jne    0x41557e
  41561e:	mov    ebp,DWORD PTR [rsp+0x58]
  415622:	mov    rcx,QWORD PTR [rip+0x392e7]        # 0x44e910
  415629:	lea    rdx,[rsp+0x5c]
  41562e:	mov    edi,ebp
  415630:	mov    r9d,ebp
  415633:	and    r9d,0x7ff00
  41563a:	and    edi,0xf
  41563d:	mov    eax,r9d
  415640:	mov    r8d,edi
  415643:	add    r9d,0x100
  41564a:	shl    eax,0xc
  41564d:	or     r8d,0x80000000
  415654:	and    r9d,0x7ff00
  41565b:	or     r8d,eax
  41565e:	or     r8d,r9d
  415661:	mov    DWORD PTR [rsp+0x58],r8d
  415666:	mov    DWORD PTR [rsp+0x5c],r8d
  41566b:	mov    r8d,0x4
  415671:	call   0x40df50
  415676:	test   eax,eax
  415678:	jne    0x41557e
  41567e:	mov    r8d,DWORD PTR [rbx]
  415681:	test   r8d,r8d
  415684:	jle    0x4156a5
  415686:	mov    r8d,DWORD PTR [rsp+0x58]
  41568b:	lea    rcx,[rip+0x22c70]        # 0x438302
  415692:	mov    edx,ebp
  415694:	call   0x41d1b0
  415699:	lea    rcx,[rip+0x21f8f]        # 0x43762f
  4156a0:	call   0x41d1b0
  4156a5:	mov    rcx,QWORD PTR [rip+0x3927c]        # 0x44e928
  4156ac:	lea    rdx,[rsp+0x48]
  4156b1:	mov    r8d,0x4
  4156b7:	call   0x40def0
  4156bc:	test   eax,eax
  4156be:	jne    0x41557e
  4156c4:	mov    rcx,QWORD PTR [rip+0x39265]        # 0x44e930
  4156cb:	lea    rdx,[rsp+0x4c]
  4156d0:	mov    r8d,0x4
  4156d6:	call   0x40def0
  4156db:	test   eax,eax
  4156dd:	jne    0x41557e
  4156e3:	cmp    DWORD PTR [rbx],0x0
  4156e6:	je     0x415741
  4156e8:	jle    0x415a98
  4156ee:	mov    r8d,DWORD PTR [rsp+0x4c]
  4156f3:	mov    r9d,DWORD PTR [rsp+0x48]
  4156f8:	lea    rcx,[rip+0x22c21]        # 0x438320
  4156ff:	mov    edx,r8d
  415702:	sub    edx,r9d
  415705:	call   0x41d1b0
  41570a:	lea    rcx,[rip+0x21f1e]        # 0x43762f
  415711:	call   0x41d1b0
  415716:	mov    eax,DWORD PTR [rsp+0x54]
  41571a:	cmp    DWORD PTR [rsp+0x4c],eax
  41571e:	je     0x415aa6
  415724:	cmp    DWORD PTR [rbx],0x0
  415727:	jle    0x415741
  415729:	lea    rcx,[rip+0x22c28]        # 0x438358
  415730:	call   0x41d1b0
  415735:	lea    rcx,[rip+0x21ef3]        # 0x43762f
  41573c:	call   0x41d1b0
  415741:	mov    r12d,edi
  415744:	lea    r14,[rsp+0x80]
  41574c:	mov    r8d,0x20
  415752:	shl    r12,0x5
  415756:	add    r12,QWORD PTR [rip+0x391ab]        # 0x44e908
  41575d:	mov    rdx,r14
  415760:	mov    rcx,r12
  415763:	call   0x40def0
  415768:	test   eax,eax
  41576a:	jne    0x41557e
  415770:	lea    r13,[rsp+0x70]
  415775:	mov    rcx,QWORD PTR [rip+0x3919c]        # 0x44e918
  41577c:	lea    rax,[rsp+0x60]
  415781:	mov    r8d,0x8
  415787:	mov    rdx,r13
  41578a:	mov    QWORD PTR [rsp+0x70],rax
  41578f:	call   0x40def0
  415794:	mov    rdx,QWORD PTR [rsp+0x70]
  415799:	test   eax,eax
  41579b:	mov    QWORD PTR [rsp+0x60],rdx
  4157a0:	jne    0x41557e
  4157a6:	mov    rcx,QWORD PTR [rip+0x39173]        # 0x44e920
  4157ad:	lea    rax,[rsp+0x68]
  4157b2:	mov    rdx,r13
  4157b5:	mov    r8d,0x8
  4157bb:	mov    QWORD PTR [rsp+0x70],rax
  4157c0:	call   0x40def0
  4157c5:	mov    rdx,QWORD PTR [rsp+0x70]
  4157ca:	test   eax,eax
  4157cc:	mov    QWORD PTR [rsp+0x68],rdx
  4157d1:	jne    0x41557e
  4157d7:	cmp    DWORD PTR [rbx],0x0
  4157da:	jle    0x415831
  4157dc:	mov    rax,QWORD PTR [rsp+0x60]
  4157e1:	mov    r9d,DWORD PTR [rsp+0x88]
  4157e9:	lea    rcx,[rip+0x22b98]        # 0x438388
  4157f0:	mov    r8d,DWORD PTR [rsp+0x80]
  4157f8:	sub    edx,eax
  4157fa:	sub    r9d,eax
  4157fd:	mov    DWORD PTR [rsp+0x30],edx
  415801:	mov    edx,DWORD PTR [rsp+0x98]
  415808:	sub    r8d,eax
  41580b:	sub    edx,eax
  41580d:	mov    DWORD PTR [rsp+0x28],edx
  415811:	mov    edx,DWORD PTR [rsp+0x90]
  415818:	sub    edx,eax
  41581a:	mov    DWORD PTR [rsp+0x20],edx
  41581e:	mov    edx,edi
  415820:	call   0x41d1b0
  415825:	lea    rcx,[rip+0x21e03]        # 0x43762f
  41582c:	call   0x41d1b0
  415831:	mov    rbp,QWORD PTR [rsp+0x80]
  415839:	mov    eax,DWORD PTR [rsp+0x48]
  41583d:	cmp    DWORD PTR [rsp+0x4c],eax
  415841:	je     0x415ab9
  415847:	mov    r8d,0x8
  41584d:	mov    rdx,r13
  415850:	mov    rcx,rbp
  415853:	call   0x40def0
  415858:	test   eax,eax
  41585a:	jne    0x415b60
  415860:	movsx  edx,WORD PTR [rsp+0x70]
  415865:	test   dx,dx
  415868:	je     0x415b77
  41586e:	mov    rax,QWORD PTR [rip+0x38f5b]        # 0x44e7d0
  415875:	test   rax,rax
  415878:	jne    0x41588d
  41587a:	jmp    0x415a02
  41587f:	nop
  415880:	mov    rax,QWORD PTR [rax+0x58]
  415884:	test   rax,rax
  415887:	je     0x415a02
  41588d:	cmp    DWORD PTR [rax],edx
  41588f:	jne    0x415880
  415891:	mov    r15,rax
  415894:	mov    ecx,0x8
  415899:	call   0x412de0
  41589e:	test   rax,rax
  4158a1:	je     0x415a68
  4158a7:	mov    edx,DWORD PTR [r15]
  4158aa:	mov    BYTE PTR [rax+0x4],0x0
  4158ae:	lea    r8,[r15+0x48]
  4158b2:	mov    BYTE PTR [rax+0x5],0x0
  4158b6:	mov    BYTE PTR [rax+0x6],0x0
  4158ba:	mov    rcx,rax
  4158bd:	mov    BYTE PTR [rax+0x7],0x0
  4158c1:	mov    BYTE PTR [rax],dl
  4158c3:	movzx  edx,dh
  4158c6:	mov    BYTE PTR [rax+0x1],dl
  4158c9:	mov    r9d,DWORD PTR [rsp+0x74]
  4158ce:	mov    rdx,r15
  4158d1:	call   0x4137a0
  4158d6:	test   rax,rax
  4158d9:	je     0x4158f7
  4158db:	lea    r15,[rbp+0x8]
  4158df:	mov    r8d,DWORD PTR [rsp+0x74]
  4158e4:	mov    rdx,rax
  4158e7:	mov    rcx,r15
  4158ea:	call   0x40def0
  4158ef:	test   eax,eax
  4158f1:	jne    0x415b99
  4158f7:	mov    ecx,DWORD PTR [rbx]
  4158f9:	test   ecx,ecx
  4158fb:	jle    0x415915
  4158fd:	lea    rcx,[rip+0x22b9c]        # 0x4384a0
  415904:	call   0x41d1b0
  415909:	lea    rcx,[rip+0x21d1f]        # 0x43762f
  415910:	call   0x41d1b0
  415915:	add    DWORD PTR [rip+0x38e5c],0x1        # 0x44e778
  41591c:	add    DWORD PTR [rip+0x38e4d],0x1        # 0x44e770
  415923:	mov    eax,DWORD PTR [rsp+0x74]
  415927:	mov    rdx,QWORD PTR [rsp+0x98]
  41592f:	lea    rbp,[rbp+rax*1+0x8]
  415934:	xor    eax,eax
  415936:	cmp    rbp,rdx
  415939:	jb     0x415943
  41593b:	mov    rax,rdx
  41593e:	sub    rax,QWORD PTR [rsp+0x60]
  415943:	sub    rbp,rax
  415946:	cmp    rbp,QWORD PTR [rsp+0x80]
  41594e:	jae    0x41597b
  415950:	mov    edx,DWORD PTR [rbx]
  415952:	test   edx,edx
  415954:	jle    0x41596e
  415956:	lea    rcx,[rip+0x22b6b]        # 0x4384c8
  41595d:	call   0x41d1b0
  415962:	lea    rcx,[rip+0x21cc6]        # 0x43762f
  415969:	call   0x41d1b0
  41596e:	mov    rax,QWORD PTR [rsp+0x68]
  415973:	mov    QWORD PTR [rsp+0x98],rax
  41597b:	add    DWORD PTR [rsp+0x48],0x1
  415980:	cmp    rbp,QWORD PTR [rsp+0x88]
  415988:	mov    QWORD PTR [rsp+0x80],rbp
  415990:	mov    QWORD PTR [rsp+0x90],rbp
  415998:	je     0x415a0a
  41599a:	mov    eax,DWORD PTR [rbx]
  41599c:	test   eax,eax
  41599e:	jle    0x415839
  4159a4:	mov    rax,QWORD PTR [rsp+0x60]
  4159a9:	mov    edx,DWORD PTR [rsp+0x68]
  4159ad:	lea    rcx,[rip+0x22b8c]        # 0x438540
  4159b4:	mov    r9d,DWORD PTR [rsp+0x88]
  4159bc:	mov    r8d,DWORD PTR [rsp+0x80]
  4159c4:	sub    edx,eax
  4159c6:	mov    DWORD PTR [rsp+0x30],edx
  4159ca:	mov    edx,DWORD PTR [rsp+0x98]
  4159d1:	sub    r9d,eax
  4159d4:	sub    r8d,eax
  4159d7:	sub    edx,eax
  4159d9:	mov    DWORD PTR [rsp+0x28],edx
  4159dd:	mov    edx,DWORD PTR [rsp+0x90]
  4159e4:	sub    edx,eax
  4159e6:	mov    DWORD PTR [rsp+0x20],edx
  4159ea:	mov    edx,edi
  4159ec:	call   0x41d1b0
  4159f1:	lea    rcx,[rip+0x21c37]        # 0x43762f
  4159f8:	call   0x41d1b0
  4159fd:	jmp    0x415839
  415a02:	xor    r15d,r15d
  415a05:	jmp    0x415894
  415a0a:	cmp    DWORD PTR [rbx],0x0
  415a0d:	jle    0x415a39
  415a0f:	mov    r8d,ebp
  415a12:	sub    r8d,DWORD PTR [rsp+0x60]
  415a17:	lea    rcx,[rip+0x22ad2]        # 0x4384f0
  415a1e:	mov    edx,edi
  415a20:	mov    DWORD PTR [rsp+0x20],r8d
  415a25:	mov    r9d,r8d
  415a28:	call   0x41d1b0
  415a2d:	lea    rcx,[rip+0x21bfb]        # 0x43762f
  415a34:	call   0x41d1b0
  415a39:	mov    rax,QWORD PTR [rsp+0x60]
  415a3e:	mov    QWORD PTR [rsp+0x80],rax
  415a46:	mov    QWORD PTR [rsp+0x88],rax
  415a4e:	mov    rax,QWORD PTR [rsp+0x68]
  415a53:	mov    QWORD PTR [rsp+0x90],rax
  415a5b:	mov    QWORD PTR [rsp+0x98],rax
  415a63:	jmp    0x41599a
  415a68:	cmp    DWORD PTR [rbx],0x0
  415a6b:	mov    DWORD PTR [rip+0x38d4f],0x1        # 0x44e7c4
  415a75:	jle    0x415923
  415a7b:	lea    rcx,[rip+0x229ce]        # 0x438450
  415a82:	call   0x41d1b0
  415a87:	lea    rcx,[rip+0x21ba1]        # 0x43762f
  415a8e:	call   0x41d1b0
  415a93:	jmp    0x415923
  415a98:	mov    eax,DWORD PTR [rsp+0x54]
  415a9c:	cmp    DWORD PTR [rsp+0x4c],eax
  415aa0:	jne    0x415741
  415aa6:	mov    eax,DWORD PTR [rsp+0x50]
  415aaa:	cmp    DWORD PTR [rsp+0x48],eax
  415aae:	jne    0x415724
  415ab4:	jmp    0x415741
  415ab9:	mov    r8d,0x20
  415abf:	mov    rdx,r14
  415ac2:	mov    rcx,r12
  415ac5:	call   0x40df50
  415aca:	test   eax,eax
  415acc:	jne    0x41557e
  415ad2:	mov    eax,DWORD PTR [rsp+0x48]
  415ad6:	mov    rcx,QWORD PTR [rip+0x38e4b]        # 0x44e928
  415add:	mov    r8d,0x4
  415ae3:	mov    rdx,r13
  415ae6:	mov    DWORD PTR [rsp+0x70],eax
  415aea:	call   0x40df50
  415aef:	cmp    DWORD PTR [rbx],0x0
  415af2:	jle    0x415b0e
  415af4:	lea    rcx,[rip+0x22a9d]        # 0x438598
  415afb:	mov    edx,edi
  415afd:	call   0x41d1b0
  415b02:	lea    rcx,[rip+0x21b26]        # 0x43762f
  415b09:	call   0x41d1b0
  415b0e:	mov    rbx,QWORD PTR [rip+0x30b4b]        # 0x446660
  415b15:	mov    rax,QWORD PTR [rbx]
  415b18:	mov    rax,QWORD PTR [rax+0x1a0]
  415b1f:	test   rax,rax
  415b22:	je     0x415b2b
  415b24:	mov    ecx,0x1
  415b29:	call   rax
  415b2b:	mov    rcx,rsi
  415b2e:	call   0x4100b0
  415b33:	mov    rax,QWORD PTR [rbx]
  415b36:	mov    rax,QWORD PTR [rax+0x1a8]
  415b3d:	test   rax,rax
  415b40:	je     0x415b49
  415b42:	mov    ecx,0x1
  415b47:	call   rax
  415b49:	cmp    DWORD PTR [rip+0x38c74],0x0        # 0x44e7c4
  415b50:	je     0x41557e
  415b56:	call   0x415270
  415b5b:	jmp    0x41557e
  415b60:	mov    rcx,rbp
  415b63:	call   0x40e950
  415b68:	lea    rcx,[rip+0x22861]        # 0x4383d0
  415b6f:	mov    rdx,rax
  415b72:	call   0x41d140
  415b77:	mov    r9d,DWORD PTR [rsp+0x4c]
  415b7c:	sub    r9d,DWORD PTR [rsp+0x48]
  415b81:	lea    r8,[rip+0x22878]        # 0x438400
  415b88:	lea    rcx,[rip+0x21e04]        # 0x437993
  415b8f:	mov    edx,0x1952
  415b94:	call   0x41d170
  415b99:	mov    rcx,r15
  415b9c:	call   0x40e950
  415ba1:	lea    rcx,[rip+0x228c8]        # 0x438470
  415ba8:	mov    rdx,rax
  415bab:	call   0x41d140
  415bb0:	nop
  415bb1:	nop    DWORD PTR [rax+rax*1+0x0]
  415bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bc0:	push   rbp
  415bc1:	push   r15
  415bc3:	push   r14
  415bc5:	push   r13
  415bc7:	push   r12
  415bc9:	push   rdi
  415bca:	push   rsi
  415bcb:	push   rbx
  415bcc:	sub    rsp,0x88
  415bd3:	lea    rbp,[rsp+0x80]
  415bdb:	mov    rsi,QWORD PTR [rip+0x38b6e]        # 0x44e750
  415be2:	mov    QWORD PTR [rbp+0x50],rcx
  415be6:	test   rsi,rsi
  415be9:	je     0x415f21
  415bef:	mov    rcx,rsi
  415bf2:	call   0x42a610
  415bf7:	mov    r8d,eax
  415bfa:	lea    eax,[rax+rax*1+0x1]
  415bfe:	cdqe   
  415c00:	add    rax,0x1e
  415c04:	and    rax,0xfffffffffffffff0
  415c08:	call   0x425730
  415c0d:	sub    rsp,rax
  415c10:	mov    rcx,rsi
  415c13:	lea    rbx,[rsp+0x80]
  415c1b:	mov    rdx,rbx
  415c1e:	call   0x41cef0
  415c23:	mov    rsi,QWORD PTR [rip+0x38b1e]        # 0x44e748
  415c2a:	test   rsi,rsi
  415c2d:	je     0x415f35
  415c33:	mov    rcx,rsi
  415c36:	call   0x42a610
  415c3b:	mov    r8d,eax
  415c3e:	lea    eax,[rax+rax*1+0x1]
  415c42:	cdqe   
  415c44:	add    rax,0x1e
  415c48:	and    rax,0xfffffffffffffff0
  415c4c:	call   0x425730
  415c51:	sub    rsp,rax
  415c54:	mov    rcx,rsi
  415c57:	lea    r12,[rsp+0x80]
  415c5f:	mov    rdx,r12
  415c62:	call   0x41cef0
  415c67:	mov    rsi,QWORD PTR [rip+0x38ad2]        # 0x44e740
  415c6e:	test   rsi,rsi
  415c71:	je     0x415f50
  415c77:	mov    rcx,rsi
  415c7a:	call   0x42a610
  415c7f:	mov    r8d,eax
  415c82:	lea    eax,[rax+rax*1+0x1]
  415c86:	cdqe   
  415c88:	add    rax,0x1e
  415c8c:	and    rax,0xfffffffffffffff0
  415c90:	call   0x425730
  415c95:	sub    rsp,rax
  415c98:	mov    rcx,rsi
  415c9b:	lea    r15,[rsp+0x80]
  415ca3:	mov    rdx,r15
  415ca6:	call   0x41cef0
  415cab:	mov    rax,QWORD PTR [rip+0x307be]        # 0x446470
  415cb2:	mov    r10d,DWORD PTR [rax]
  415cb5:	test   r10d,r10d
  415cb8:	jle    0x415cdf
  415cba:	mov    r8,QWORD PTR [rip+0x163df]        # 0x42c0a0
  415cc1:	mov    edx,DWORD PTR [rip+0x38aa5]        # 0x44e76c
  415cc7:	lea    rcx,[rip+0x228f2]        # 0x4385c0
  415cce:	call   0x41d1b0
  415cd3:	lea    rcx,[rip+0x21955]        # 0x43762f
  415cda:	call   0x41d1b0
  415cdf:	call   0x401570
  415ce4:	test   eax,eax
  415ce6:	je     0x415d20
  415ce8:	mov    rsi,QWORD PTR [rip+0x30971]        # 0x446660
  415cef:	mov    rax,QWORD PTR [rsi]
  415cf2:	mov    rax,QWORD PTR [rax+0x1a0]
  415cf9:	test   rax,rax
  415cfc:	je     0x415d05
  415cfe:	mov    ecx,0x1
  415d03:	call   rax
  415d05:	call   0x415550
  415d0a:	mov    rax,QWORD PTR [rsi]
  415d0d:	mov    rax,QWORD PTR [rax+0x1a8]
  415d14:	test   rax,rax
  415d17:	je     0x415d20
  415d19:	mov    ecx,0x1
  415d1e:	call   rax
  415d20:	mov    r14,QWORD PTR [rip+0x16379]        # 0x42c0a0
  415d27:	lea    rdi,[rip+0x228bf]        # 0x4385ed
  415d2e:	mov    ecx,0x7
  415d33:	mov    rsi,r14
  415d36:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415d38:	je     0x415ed0
  415d3e:	lea    rdi,[rip+0x22581]        # 0x4382c6
  415d45:	mov    ecx,0x6
  415d4a:	mov    rsi,r14
  415d4d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415d4f:	je     0x415e50
  415d55:	mov    rcx,QWORD PTR [rip+0x389fc]        # 0x44e758
  415d5c:	mov    edx,0x8
  415d61:	call   0x41c6e0
  415d66:	mov    rcx,QWORD PTR [rip+0x389f3]        # 0x44e760
  415d6d:	mov    edx,0x8
  415d72:	mov    r13,rax
  415d75:	call   0x41c6e0
  415d7a:	mov    rcx,QWORD PTR [rip+0x38a1f]        # 0x44e7a0
  415d81:	sub    rcx,QWORD PTR [rip+0x38a20]        # 0x44e7a8
  415d88:	xor    edx,edx
  415d8a:	mov    r15,rax
  415d8d:	mov    edi,DWORD PTR [rip+0x389d5]        # 0x44e768
  415d93:	mov    esi,DWORD PTR [rip+0x38aa7]        # 0x44e840
  415d99:	call   0x41c6e0
  415d9e:	mov    rcx,QWORD PTR [rip+0x389e3]        # 0x44e788
  415da5:	mov    rdx,QWORD PTR [rip+0x389e4]        # 0x44e790
  415dac:	cmp    rcx,rdx
  415daf:	ja     0x415e30
  415db1:	sub    edx,ecx
  415db3:	mov    ecx,DWORD PTR [rip+0x389b3]        # 0x44e76c
  415db9:	mov    QWORD PTR [rsp+0x40],rax
  415dbe:	xor    r8d,r8d
  415dc1:	mov    eax,DWORD PTR [rip+0x389a9]        # 0x44e770
  415dc7:	mov    DWORD PTR [rsp+0x38],edx
  415dcb:	lea    rdx,[rip+0x22826]        # 0x4385f8
  415dd2:	mov    QWORD PTR [rsp+0x70],r12
  415dd7:	mov    QWORD PTR [rsp+0x68],rbx
  415ddc:	mov    r9,r14
  415ddf:	test   ecx,ecx
  415de1:	mov    rcx,QWORD PTR [rbp+0x50]
  415de5:	mov    QWORD PTR [rsp+0x60],r13
  415dea:	setne  r8b
  415dee:	mov    DWORD PTR [rsp+0x30],eax
  415df2:	mov    eax,DWORD PTR [rip+0x38980]        # 0x44e778
  415df8:	sub    eax,DWORD PTR [rip+0x38976]        # 0x44e774
  415dfe:	mov    QWORD PTR [rsp+0x58],r15
  415e03:	mov    DWORD PTR [rsp+0x50],edi
  415e07:	mov    DWORD PTR [rsp+0x48],esi
  415e0b:	mov    DWORD PTR [rsp+0x28],eax
  415e0f:	mov    eax,DWORD PTR [rip+0x38a17]        # 0x44e82c
  415e15:	mov    DWORD PTR [rsp+0x20],eax
  415e19:	call   0x42aab0
  415e1e:	nop
  415e1f:	lea    rsp,[rbp+0x8]
  415e23:	pop    rbx
  415e24:	pop    rsi
  415e25:	pop    rdi
  415e26:	pop    r12
  415e28:	pop    r13
  415e2a:	pop    r14
  415e2c:	pop    r15
  415e2e:	pop    rbp
  415e2f:	ret    
  415e30:	mov    r10,QWORD PTR [rip+0x38969]        # 0x44e7a0
  415e37:	sub    rdx,QWORD PTR [rip+0x3896a]        # 0x44e7a8
  415e3e:	sub    r10,rcx
  415e41:	add    edx,r10d
  415e44:	jmp    0x415db3
  415e49:	nop    DWORD PTR [rax+0x0]
  415e50:	mov    r8,r15
  415e53:	mov    edx,DWORD PTR [r8]
  415e56:	add    r8,0x4
  415e5a:	lea    eax,[rdx-0x1010101]
  415e60:	not    edx
  415e62:	and    eax,edx
  415e64:	and    eax,0x80808080
  415e69:	je     0x415e53
  415e6b:	mov    edx,eax
  415e6d:	shr    edx,0x10
  415e70:	test   eax,0x8080
  415e75:	cmove  eax,edx
  415e78:	lea    rdx,[r8+0x2]
  415e7c:	cmove  r8,rdx
  415e80:	add    al,al
  415e82:	sbb    r8,0x3
  415e86:	sub    r8,r15
  415e89:	lea    rax,[r8+0x25]
  415e8d:	and    rax,0xfffffffffffffff0
  415e91:	call   0x425730
  415e96:	mov    r9d,0x3a70
  415e9c:	sub    rsp,rax
  415e9f:	add    r8,0x1
  415ea3:	mov    rdx,r15
  415ea6:	lea    r14,[rsp+0x80]
  415eae:	mov    DWORD PTR [r14],0x6f747374
  415eb5:	mov    WORD PTR [r14+0x4],r9w
  415eba:	lea    rcx,[r14+0x6]
  415ebe:	call   0x42a668
  415ec3:	jmp    0x415d55
  415ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  415ed0:	lea    rsi,[r14+0x7]
  415ed4:	mov    rcx,rsi
  415ed7:	call   0x42a610
  415edc:	add    eax,eax
  415ede:	cdqe   
  415ee0:	add    rax,0x26
  415ee4:	and    rax,0xfffffffffffffff0
  415ee8:	call   0x425730
  415eed:	sub    rsp,rax
  415ef0:	movabs rax,0x3a726f72726574
  415efa:	mov    rcx,rsi
  415efd:	lea    r14,[rsp+0x80]
  415f05:	mov    QWORD PTR [r14],rax
  415f08:	call   0x42a610
  415f0d:	lea    rdx,[r14+0x7]
  415f11:	mov    r8d,eax
  415f14:	mov    rcx,rsi
  415f17:	call   0x41cef0
  415f1c:	jmp    0x415d3e
  415f21:	mov    eax,0x1
  415f26:	xor    r8d,r8d
  415f29:	lea    rsi,[rip+0x2207b]        # 0x437fab
  415f30:	jmp    0x415c00
  415f35:	mov    eax,0x1
  415f3a:	xor    r8d,r8d
  415f3d:	lea    rsi,[rip+0x22067]        # 0x437fab
  415f44:	jmp    0x415c44
  415f49:	nop    DWORD PTR [rax+0x0]
  415f50:	mov    eax,0x1
  415f55:	xor    r8d,r8d
  415f58:	lea    rsi,[rip+0x2204c]        # 0x437fab
  415f5f:	jmp    0x415c88
  415f64:	xchg   ax,ax
  415f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f70:	push   rsi
  415f71:	push   rbx
  415f72:	sub    rsp,0x428
  415f79:	mov    DWORD PTR [rsp+0x440],ecx
  415f80:	call   0x401570
  415f85:	test   eax,eax
  415f87:	je     0x415fe0
  415f89:	mov    rbx,QWORD PTR [rip+0x304c0]        # 0x446450
  415f90:	mov    rcx,QWORD PTR [rip+0x30489]        # 0x446420
  415f97:	lea    r8,[rsp+0x440]
  415f9f:	lea    rdx,[rip+0xffffffffffffd2aa]        # 0x413250
  415fa6:	mov    rsi,QWORD PTR [rbx]
  415fa9:	call   0x403b90
  415fae:	lea    rcx,[rsp+0x20]
  415fb3:	mov    QWORD PTR [rbx],rax
  415fb6:	mov    edx,0x6
  415fbb:	mov    eax,0x65
  415fc0:	mov    DWORD PTR [rsp+0x20],0x736f6c63
  415fc8:	mov    WORD PTR [rsp+0x24],ax
  415fcd:	call   0x413280
  415fd2:	mov    QWORD PTR [rbx],rsi
  415fd5:	add    rsp,0x428
  415fdc:	pop    rbx
  415fdd:	pop    rsi
  415fde:	ret    
  415fdf:	nop
  415fe0:	lea    rcx,[rsp+0x20]
  415fe5:	lea    rdx,[rip+0x21edc]        # 0x437ec8
  415fec:	call   0x42aab0
  415ff1:	nop
  415ff2:	add    rsp,0x428
  415ff9:	pop    rbx
  415ffa:	pop    rsi
  415ffb:	ret    
  415ffc:	nop    DWORD PTR [rax+0x0]
  416000:	push   r15
  416002:	push   r14
  416004:	push   r13
  416006:	push   r12
  416008:	push   rbp
  416009:	push   rdi
  41600a:	push   rsi
  41600b:	push   rbx
  41600c:	sub    rsp,0xe8
  416013:	lea    rsi,[rip+0x22681]        # 0x43869b
  41601a:	mov    rbx,rcx
  41601d:	mov    ecx,0x7
  416022:	mov    rdi,rbx
  416025:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416027:	je     0x416272
  41602d:	lea    rdi,[rip+0x226a7]        # 0x4386db
  416034:	mov    ecx,0x5
  416039:	mov    rsi,rbx
  41603c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41603e:	je     0x4167b4
  416044:	lea    rdi,[rip+0x228be]        # 0x438909
  41604b:	mov    ecx,0x8
  416050:	mov    rsi,rbx
  416053:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416055:	je     0x416504
  41605b:	lea    rdi,[rip+0x228b0]        # 0x438912
  416062:	mov    ecx,0x9
  416067:	mov    rsi,rbx
  41606a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41606c:	je     0x416af0
  416072:	lea    rdi,[rip+0x228a3]        # 0x43891c
  416079:	mov    ecx,0xa
  41607e:	mov    rsi,rbx
  416081:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416083:	je     0x416b10
  416089:	lea    rdi,[rip+0x22897]        # 0x438927
  416090:	mov    ecx,0x5
  416095:	mov    rsi,rbx
  416098:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41609a:	je     0x416b24
  4160a0:	lea    rdi,[rip+0x22886]        # 0x43892d
  4160a7:	mov    ecx,0x5
  4160ac:	mov    rsi,rbx
  4160af:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4160b1:	je     0x416640
  4160b7:	lea    rsi,[rip+0x228c2]        # 0x438980
  4160be:	mov    ecx,0x8
  4160c3:	mov    rdi,rbx
  4160c6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4160c8:	seta   sil
  4160cc:	setb   al
  4160cf:	sub    esi,eax
  4160d1:	movsx  esi,sil
  4160d5:	test   esi,esi
  4160d7:	je     0x417250
  4160dd:	lea    rsi,[rip+0x229e8]        # 0x438acc
  4160e4:	mov    ecx,0x7
  4160e9:	mov    rdi,rbx
  4160ec:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4160ee:	je     0x417485
  4160f4:	lea    rdi,[rip+0x229d8]        # 0x438ad3
  4160fb:	mov    ecx,0xf
  416100:	mov    rsi,rbx
  416103:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416105:	je     0x4175df
  41610b:	lea    rdi,[rip+0x229d1]        # 0x438ae3
  416112:	mov    ecx,0x8
  416117:	mov    rsi,rbx
  41611a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41611c:	je     0x4176d0
  416122:	lea    rdi,[rip+0x22afc]        # 0x438c25
  416129:	mov    ecx,0x12
  41612e:	mov    rsi,rbx
  416131:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416133:	je     0x417890
  416139:	lea    rdi,[rip+0x22b0f]        # 0x438c4f
  416140:	mov    ecx,0xe
  416145:	mov    rsi,rbx
  416148:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41614a:	je     0x416fb4
  416150:	lea    rdi,[rip+0x22b27]        # 0x438c7e
  416157:	mov    ecx,0x8
  41615c:	mov    rsi,rbx
  41615f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416161:	seta   cl
  416164:	setb   dl
  416167:	xor    eax,eax
  416169:	cmp    cl,dl
  41616b:	jne    0x4164f0
  416171:	mov    r12,QWORD PTR [rip+0x302f8]        # 0x446470
  416178:	lea    rbp,[rbx+0x8]
  41617c:	mov    r14,r12
  41617f:	mov    r13,r12
  416182:	cmp    BYTE PTR [rbp+0x0],0x0
  416186:	je     0x416260
  41618c:	lea    rdi,[rip+0x22af4]        # 0x438c87
  416193:	mov    ecx,0x5
  416198:	mov    rsi,rbp
  41619b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41619d:	je     0x417090
  4161a3:	lea    rdi,[rip+0x22af0]        # 0x438c9a
  4161aa:	mov    ecx,0x6
  4161af:	mov    rsi,rbp
  4161b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4161b4:	je     0x417160
  4161ba:	lea    rdi,[rip+0x22aee]        # 0x438caf
  4161c1:	mov    ecx,0x6
  4161c6:	mov    rsi,rbp
  4161c9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4161cb:	jne    0x416260
  4161d1:	lea    rdi,[rbp+0x6]
  4161d5:	mov    edx,0x3b
  4161da:	mov    rcx,rdi
  4161dd:	call   0x42a630
  4161e2:	mov    rdx,rax
  4161e5:	mov    rbp,rax
  4161e8:	sub    rdx,rdi
  4161eb:	add    rbp,0x1
  4161ef:	mov    rsi,rdx
  4161f2:	shr    rsi,0x3f
  4161f6:	add    rsi,rdx
  4161f9:	sar    rsi,1
  4161fc:	lea    rcx,[rsi+0x1]
  416200:	call   0x41a6e0
  416205:	mov    rcx,rdi
  416208:	mov    rdx,rax
  41620b:	mov    r8d,esi
  41620e:	mov    r15,rax
  416211:	call   0x41ce70
  416216:	mov    ecx,DWORD PTR [r12]
  41621a:	movsxd rdx,eax
  41621d:	mov    BYTE PTR [r15+rdx*1],0x0
  416222:	test   ecx,ecx
  416224:	jle    0x416241
  416226:	lea    rcx,[rip+0x22a89]        # 0x438cb6
  41622d:	mov    rdx,r15
  416230:	call   0x41d1b0
  416235:	lea    rcx,[rip+0x213f3]        # 0x43762f
  41623c:	call   0x41d1b0
  416241:	mov    rcx,QWORD PTR [rip+0x384f8]        # 0x44e740
  416248:	call   0x41a7c0
  41624d:	mov    QWORD PTR [rip+0x384ec],r15        # 0x44e740
  416254:	cmp    BYTE PTR [rbp+0x0],0x0
  416258:	jne    0x41618c
  41625e:	xchg   ax,ax
  416260:	mov    rcx,rbx
  416263:	call   0x405bc0
  416268:	mov    eax,0x1
  41626d:	jmp    0x4164f0
  416272:	mov    rax,QWORD PTR [rip+0x301d7]        # 0x446450
  416279:	cmp    QWORD PTR [rax],0x0
  41627d:	je     0x416754
  416283:	mov    DWORD PTR [rip+0x15e1b],0xffffffff        # 0x42c0a8
  41628d:	call   0x415270
  416292:	mov    rdi,QWORD PTR [rip+0x301d7]        # 0x446470
  416299:	mov    r11d,DWORD PTR [rdi]
  41629c:	test   r11d,r11d
  41629f:	jle    0x4162b9
  4162a1:	lea    rcx,[rip+0x223fa]        # 0x4386a2
  4162a8:	call   0x41d1b0
  4162ad:	lea    rcx,[rip+0x2137b]        # 0x43762f
  4162b4:	call   0x41d1b0
  4162b9:	call   0x4149a0
  4162be:	call   0x413330
  4162c3:	mov    rsi,QWORD PTR [rip+0x384e6]        # 0x44e7b0
  4162ca:	mov    QWORD PTR [rip+0x384fb],0x0        # 0x44e7d0
  4162d5:	xor    ebp,ebp
  4162d7:	mov    QWORD PTR [rip+0x38566],0x0        # 0x44e848
  4162e2:	test   rsi,rsi
  4162e5:	je     0x416321
  4162e7:	mov    r10d,DWORD PTR [rdi]
  4162ea:	test   r10d,r10d
  4162ed:	jle    0x41630a
  4162ef:	mov    edx,DWORD PTR [rsi+0x8]
  4162f2:	lea    rcx,[rip+0x223c0]        # 0x4386b9
  4162f9:	call   0x41d1b0
  4162fe:	lea    rcx,[rip+0x2132a]        # 0x43762f
  416305:	call   0x41d1b0
  41630a:	cmp    QWORD PTR [rsi+0x20],0x0
  41630f:	je     0x416770
  416315:	mov    rbp,rsi
  416318:	mov    rsi,QWORD PTR [rsi+0x28]
  41631c:	test   rsi,rsi
  41631f:	jne    0x4162e7
  416321:	mov    rax,QWORD PTR [rip+0x38480]        # 0x44e7a8
  416328:	mov    rdx,QWORD PTR [rip+0x38471]        # 0x44e7a0
  41632f:	lea    rsi,[rsp+0xb0]
  416337:	mov    rcx,QWORD PTR [rip+0x385da]        # 0x44e918
  41633e:	mov    r8d,0x8
  416344:	mov    QWORD PTR [rip+0x38435],rax        # 0x44e780
  41634b:	mov    QWORD PTR [rip+0x38436],rax        # 0x44e788
  416352:	mov    QWORD PTR [rip+0x38437],rdx        # 0x44e790
  416359:	mov    QWORD PTR [rip+0x38438],rdx        # 0x44e798
  416360:	mov    rdx,rsi
  416363:	mov    BYTE PTR [rax],0x0
  416366:	mov    BYTE PTR [rax+0x1],0x0
  41636a:	mov    BYTE PTR [rax+0x4],0x0
  41636e:	mov    BYTE PTR [rax+0x5],0x0
  416372:	mov    BYTE PTR [rax+0x6],0x0
  416376:	mov    BYTE PTR [rax+0x7],0x0
  41637a:	lea    rax,[rsp+0xa0]
  416382:	mov    DWORD PTR [rip+0x383ec],0x0        # 0x44e778
  41638c:	mov    DWORD PTR [rip+0x383de],0x0        # 0x44e774
  416396:	mov    DWORD PTR [rip+0x383d0],0x0        # 0x44e770
  4163a0:	mov    QWORD PTR [rsp+0x90],0x0
  4163ac:	mov    QWORD PTR [rsp+0xb0],rax
  4163b4:	call   0x40def0
  4163b9:	mov    rax,QWORD PTR [rsp+0xb0]
  4163c1:	mov    rcx,QWORD PTR [rip+0x38558]        # 0x44e920
  4163c8:	mov    r8d,0x8
  4163ce:	mov    rdx,rsi
  4163d1:	mov    QWORD PTR [rsp+0xa0],rax
  4163d9:	lea    rax,[rsp+0xa8]
  4163e1:	mov    QWORD PTR [rsp+0xb0],rax
  4163e9:	call   0x40def0
  4163ee:	mov    rdx,QWORD PTR [rsp+0xa0]
  4163f6:	mov    rax,QWORD PTR [rsp+0xb0]
  4163fe:	mov    r8d,0x20
  416404:	mov    rcx,QWORD PTR [rip+0x384fd]        # 0x44e908
  41640b:	mov    QWORD PTR [rsp+0xb0],rdx
  416413:	mov    QWORD PTR [rsp+0xb8],rdx
  41641b:	mov    rdx,rsi
  41641e:	mov    QWORD PTR [rsp+0xa8],rax
  416426:	mov    QWORD PTR [rsp+0xc0],rax
  41642e:	mov    QWORD PTR [rsp+0xc8],rax
  416436:	call   0x40df50
  41643b:	mov    rcx,QWORD PTR [rip+0x384ce]        # 0x44e910
  416442:	lea    rdx,[rsp+0x88]
  41644a:	mov    r8d,0x4
  416450:	mov    DWORD PTR [rsp+0x88],0x0
  41645b:	call   0x40df50
  416460:	mov    rcx,QWORD PTR [rsp+0xa0]
  416468:	lea    rdx,[rsp+0x90]
  416470:	mov    r8d,0x8
  416476:	call   0x40df50
  41647b:	mov    rcx,QWORD PTR [rip+0x384ae]        # 0x44e930
  416482:	lea    rdx,[rsp+0x80]
  41648a:	mov    r8d,0x4
  416490:	mov    DWORD PTR [rsp+0x80],0x0
  41649b:	call   0x40df50
  4164a0:	mov    rcx,QWORD PTR [rip+0x38481]        # 0x44e928
  4164a7:	lea    rdx,[rsp+0x7c]
  4164ac:	mov    r8d,0x4
  4164b2:	mov    DWORD PTR [rsp+0x7c],0x0
  4164ba:	call   0x40df50
  4164bf:	mov    rcx,QWORD PTR [rip+0x38472]        # 0x44e938
  4164c6:	lea    rdx,[rsp+0x78]
  4164cb:	mov    r8d,0x4
  4164d1:	mov    DWORD PTR [rsp+0x78],0x0
  4164d9:	call   0x40df50
  4164de:	mov    rcx,rbx
  4164e1:	call   0x405bc0
  4164e6:	mov    eax,0x1
  4164eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4164f0:	add    rsp,0xe8
  4164f7:	pop    rbx
  4164f8:	pop    rsi
  4164f9:	pop    rdi
  4164fa:	pop    rbp
  4164fb:	pop    r12
  4164fd:	pop    r13
  4164ff:	pop    r14
  416501:	pop    r15
  416503:	ret    
  416504:	lea    rcx,[rbx+0x8]
  416508:	lea    rdx,[rsp+0x90]
  416510:	call   0x41ce20
  416515:	lea    rdx,[rsp+0xa0]
  41651d:	lea    rcx,[rax+0x1]
  416521:	call   0x41ce20
  416526:	mov    rsi,QWORD PTR [rip+0x382a3]        # 0x44e7d0
  41652d:	mov    rcx,QWORD PTR [rsp+0xa0]
  416535:	mov    r8,QWORD PTR [rsp+0x90]
  41653d:	test   rsi,rsi
  416540:	jne    0x41655d
  416542:	jmp    0x416720
  416547:	nop    WORD PTR [rax+rax*1+0x0]
  416550:	mov    rsi,QWORD PTR [rsi+0x58]
  416554:	test   rsi,rsi
  416557:	je     0x416720
  41655d:	cmp    DWORD PTR [rsi],r8d
  416560:	jne    0x416550
  416562:	cmp    rcx,QWORD PTR [rsi+0x8]
  416566:	jne    0x416550
  416568:	lea    rdi,[rax+0x1]
  41656c:	mov    edx,0x3a
  416571:	mov    rcx,rdi
  416574:	call   0x42a630
  416579:	mov    r13,rax
  41657c:	mov    rbp,rax
  41657f:	sub    r13,rdi
  416582:	lea    rcx,[r13+0x1]
  416586:	call   0x41a6e0
  41658b:	mov    r8,r13
  41658e:	mov    rdx,rdi
  416591:	mov    rcx,rax
  416594:	mov    r12,rax
  416597:	call   0x42a668
  41659c:	lea    rcx,[rbp+0x1]
  4165a0:	lea    rdx,[rsp+0xa8]
  4165a8:	mov    BYTE PTR [r12+r13*1],0x0
  4165ad:	call   0x41ce20
  4165b2:	lea    rdx,[rsp+0xb0]
  4165ba:	lea    rcx,[rax+0x1]
  4165be:	call   0x41ce20
  4165c3:	lea    rdi,[rax+0x1]
  4165c7:	mov    rax,QWORD PTR [rsp+0xb0]
  4165cf:	lea    rcx,[rax+0x1]
  4165d3:	call   0x41a6e0
  4165d8:	mov    rcx,rdi
  4165db:	mov    rbp,rax
  4165de:	call   0x42a610
  4165e3:	shr    rax,1
  4165e6:	mov    rdx,rbp
  4165e9:	mov    rcx,rdi
  4165ec:	mov    r8,rax
  4165ef:	call   0x41ce70
  4165f4:	cdqe   
  4165f6:	mov    ecx,0x18
  4165fb:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  416600:	call   0x41a6e0
  416605:	mov    rcx,QWORD PTR [rsi+0x68]
  416609:	mov    QWORD PTR [rax],r12
  41660c:	mov    QWORD PTR [rax+0x8],rbp
  416610:	mov    QWORD PTR [rax+0x10],0x0
  416618:	test   rcx,rcx
  41661b:	jne    0x416625
  41661d:	jmp    0x4178f8
  416622:	mov    rcx,rdx
  416625:	mov    rdx,QWORD PTR [rcx+0x10]
  416629:	test   rdx,rdx
  41662c:	jne    0x416622
  41662e:	mov    QWORD PTR [rcx+0x10],rax
  416632:	jmp    0x416260
  416637:	nop    WORD PTR [rax+rax*1+0x0]
  416640:	mov    rdi,QWORD PTR [rip+0x2fe29]        # 0x446470
  416647:	mov    eax,DWORD PTR [rdi]
  416649:	test   eax,eax
  41664b:	jle    0x416665
  41664d:	lea    rcx,[rip+0x222df]        # 0x438933
  416654:	call   0x41d1b0
  416659:	lea    rcx,[rip+0x20fcf]        # 0x43762f
  416660:	call   0x41d1b0
  416665:	lea    rbp,[rbx+0x4]
  416669:	lea    r13,[rsp+0xa8]
  416671:	lea    r12,[rsp+0xb0]
  416679:	call   0x413330
  41667e:	xchg   ax,ax
  416680:	cmp    BYTE PTR [rbp+0x0],0x3a
  416684:	jne    0x416260
  41668a:	lea    rcx,[rbp+0x1]
  41668e:	mov    rdx,r13
  416691:	call   0x41ce20
  416696:	lea    rcx,[rax+0x1]
  41669a:	mov    rdx,r12
  41669d:	call   0x41ce20
  4166a2:	mov    ecx,0x18
  4166a7:	mov    rbp,rax
  4166aa:	call   0x41a6e0
  4166af:	mov    rsi,rax
  4166b2:	mov    rax,QWORD PTR [rsp+0xa8]
  4166ba:	mov    rcx,QWORD PTR [rsp+0xb0]
  4166c2:	mov    QWORD PTR [rsi],rax
  4166c5:	mov    rax,QWORD PTR [rip+0x38164]        # 0x44e830
  4166cc:	mov    QWORD PTR [rsi+0x8],rcx
  4166d0:	mov    QWORD PTR [rip+0x38159],rsi        # 0x44e830
  4166d7:	mov    QWORD PTR [rsi+0x10],rax
  4166db:	mov    eax,DWORD PTR [rdi]
  4166dd:	test   eax,eax
  4166df:	jle    0x416680
  4166e1:	call   0x40e950
  4166e6:	mov    rcx,QWORD PTR [rsi]
  4166e9:	mov    r14,rax
  4166ec:	call   0x40e950
  4166f1:	lea    rcx,[rip+0x22260]        # 0x438958
  4166f8:	mov    rdx,rax
  4166fb:	mov    r8,r14
  4166fe:	call   0x41d1b0
  416703:	lea    rcx,[rip+0x20f25]        # 0x43762f
  41670a:	call   0x41d1b0
  41670f:	cmp    BYTE PTR [rbp+0x0],0x3a
  416713:	je     0x41668a
  416719:	jmp    0x416260
  41671e:	xchg   ax,ax
  416720:	mov    rax,QWORD PTR [rip+0x2fd49]        # 0x446470
  416727:	mov    eax,DWORD PTR [rax]
  416729:	test   eax,eax
  41672b:	jle    0x416754
  41672d:	call   0x40e950
  416732:	mov    edx,DWORD PTR [rsp+0x90]
  416739:	lea    rcx,[rip+0x220d0]        # 0x438810
  416740:	mov    r8,rax
  416743:	call   0x41d1b0
  416748:	lea    rcx,[rip+0x20ee0]        # 0x43762f
  41674f:	call   0x41d1b0
  416754:	mov    rcx,rbx
  416757:	call   0x405bd0
  41675c:	mov    eax,0x1
  416761:	jmp    0x4164f0
  416766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416770:	test   rbp,rbp
  416773:	mov    r12,QWORD PTR [rsi+0x28]
  416777:	je     0x417240
  41677d:	mov    QWORD PTR [rbp+0x28],r12
  416781:	mov    r9d,DWORD PTR [rdi]
  416784:	test   r9d,r9d
  416787:	jle    0x4167a4
  416789:	mov    edx,DWORD PTR [rsi+0x8]
  41678c:	lea    rcx,[rip+0x21f38]        # 0x4386cb
  416793:	call   0x41d1b0
  416798:	lea    rcx,[rip+0x20e90]        # 0x43762f
  41679f:	call   0x41d1b0
  4167a4:	mov    rcx,rsi
  4167a7:	mov    rsi,r12
  4167aa:	call   0x42a6c8
  4167af:	jmp    0x4162e2
  4167b4:	cmp    BYTE PTR [rbx+0x5],0x2d
  4167b8:	je     0x4171f0
  4167be:	lea    rcx,[rbx+0x5]
  4167c2:	lea    rdx,[rsp+0x80]
  4167ca:	call   0x41ce20
  4167cf:	lea    rdx,[rsp+0x88]
  4167d7:	lea    rcx,[rax+0x1]
  4167db:	call   0x41ce20
  4167e0:	mov    r14,QWORD PTR [rip+0x37fe9]        # 0x44e7d0
  4167e7:	mov    rbp,rax
  4167ea:	lea    rsi,[rax+0x1]
  4167ee:	mov    rdi,QWORD PTR [rsp+0x88]
  4167f6:	mov    r13,QWORD PTR [rsp+0x80]
  4167fe:	mov    eax,0x1
  416803:	test   r14,r14
  416806:	je     0x4168a8
  41680c:	mov    edx,r13d
  41680f:	jmp    0x41681e
  416811:	mov    r14,QWORD PTR [r14+0x58]
  416815:	test   r14,r14
  416818:	je     0x4168a0
  41681e:	cmp    DWORD PTR [r14],edx
  416821:	jne    0x416811
  416823:	cmp    rdi,QWORD PTR [r14+0x8]
  416827:	jne    0x416811
  416829:	test   eax,eax
  41682b:	mov    r12,r14
  41682e:	jne    0x417119
  416834:	cmp    BYTE PTR [rbp+0x1],0x53
  416838:	je     0x41787d
  41683e:	mov    r13,QWORD PTR [rip+0x2fc2b]        # 0x446470
  416845:	lea    rax,[rsp+0xa8]
  41684d:	mov    rbp,QWORD PTR [rip+0x3b01c]        # 0x451870
  416854:	mov    QWORD PTR [rsp+0xa8],rsi
  41685c:	mov    QWORD PTR [rsp+0x40],rax
  416861:	mov    QWORD PTR [rsp+0x48],r13
  416866:	mov    QWORD PTR [rsp+0x50],r13
  41686b:	mov    QWORD PTR [rsp+0x58],r13
  416870:	movsx  edx,BYTE PTR [rsi]
  416873:	test   dl,dl
  416875:	je     0x416cd5
  41687b:	lea    eax,[rdx-0x2d]
  41687e:	cmp    al,0x2b
  416880:	ja     0x416f84
  416886:	lea    rcx,[rip+0x2243f]        # 0x438ccc
  41688d:	movzx  eax,al
  416890:	movsxd rax,DWORD PTR [rcx+rax*4]
  416894:	add    rcx,rax
  416897:	jmp    rcx
  416899:	nop    DWORD PTR [rax+0x0]
  4168a0:	test   eax,eax
  4168a2:	je     0x417670
  4168a8:	mov    ecx,0xd0
  4168ad:	call   0x41a6e0
  4168b2:	mov    r12,rax
  4168b5:	mov    DWORD PTR [rax],r13d
  4168b8:	mov    QWORD PTR [rax+0x8],rdi
  4168bc:	mov    DWORD PTR [rax+0x30],0x0
  4168c3:	mov    QWORD PTR [rax+0x38],0x0
  4168cb:	mov    QWORD PTR [rax+0x60],0x0
  4168d3:	mov    QWORD PTR [rax+0x28],0x0
  4168db:	mov    DWORD PTR [rax+0xb0],0x0
  4168e5:	mov    QWORD PTR [rax+0xb8],0x0
  4168f0:	mov    QWORD PTR [rax+0xc0],0x0
  4168fb:	mov    DWORD PTR [rax+0x10],0x0
  416902:	mov    DWORD PTR [rax+0x70],0xffffffff
  416909:	mov    QWORD PTR [rax+0x68],0x0
  416911:	mov    QWORD PTR [rax+0x50],0x0
  416919:	mov    QWORD PTR [rax+0xc8],0x0
  416924:	mov    QWORD PTR [rax+0x58],0x0
  41692c:	mov    rax,QWORD PTR [rip+0x37e9d]        # 0x44e7d0
  416933:	test   rax,rax
  416936:	je     0x417032
  41693c:	cmp    rdi,QWORD PTR [rax+0x8]
  416940:	jae    0x416956
  416942:	jmp    0x417032
  416947:	nop    WORD PTR [rax+rax*1+0x0]
  416950:	cmp    QWORD PTR [rax+0x8],rdi
  416954:	ja     0x416963
  416956:	lea    rdx,[rax+0x58]
  41695a:	mov    rax,QWORD PTR [rax+0x58]
  41695e:	test   rax,rax
  416961:	jne    0x416950
  416963:	mov    QWORD PTR [r12+0x58],rax
  416968:	mov    QWORD PTR [rdx],r12
  41696b:	lea    rcx,[rbp+0x3]
  41696f:	cmp    BYTE PTR [rbp+0x1],0x45
  416973:	lea    rbp,[rsp+0x90]
  41697b:	mov    QWORD PTR [rip+0x37ec6],r12        # 0x44e848
  416982:	mov    DWORD PTR [rip+0x37e9c],0x0        # 0x44e828
  41698c:	lea    r13,[rsp+0xa0]
  416994:	mov    rdx,rbp
  416997:	sete   BYTE PTR [r12+0x14]
  41699d:	call   0x41ce20
  4169a2:	mov    rdx,QWORD PTR [rsp+0x90]
  4169aa:	lea    rcx,[rax+0x1]
  4169ae:	mov    QWORD PTR [r12+0x18],rdx
  4169b3:	mov    rdx,rbp
  4169b6:	call   0x41ce20
  4169bb:	mov    rsi,rax
  4169be:	mov    rax,QWORD PTR [rsp+0x90]
  4169c6:	mov    rdi,QWORD PTR [rip+0x2faa3]        # 0x446470
  4169cd:	mov    QWORD PTR [r12+0x20],rax
  4169d2:	movzx  r8d,BYTE PTR [rsi]
  4169d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169e0:	cmp    r8b,0x3a
  4169e4:	jne    0x416a48
  4169e6:	movzx  r8d,BYTE PTR [rsi+0x1]
  4169eb:	cmp    r8b,0x46
  4169ef:	je     0x417916
  4169f5:	cmp    r8b,0x53
  4169f9:	je     0x4176b2
  4169ff:	cmp    r8b,0x58
  416a03:	lea    r14,[rsi+0x1]
  416a07:	je     0x417cb6
  416a0d:	cmp    r8b,0x2d
  416a11:	je     0x416a48
  416a13:	test   r8b,r8b
  416a16:	je     0x416a48
  416a18:	mov    ecx,DWORD PTR [rdi]
  416a1a:	test   ecx,ecx
  416a1c:	jle    0x4176c8
  416a22:	lea    rcx,[rip+0x21cf7]        # 0x438720
  416a29:	call   0x41d1b0
  416a2e:	lea    rcx,[rip+0x20bfa]        # 0x43762f
  416a35:	call   0x41d1b0
  416a3a:	movzx  r8d,BYTE PTR [rsi+0x1]
  416a3f:	mov    rsi,r14
  416a42:	cmp    r8b,0x3a
  416a46:	je     0x4169e6
  416a48:	cmp    r8b,0x2d
  416a4c:	mov    esi,0x1
  416a51:	je     0x418180
  416a57:	mov    eax,DWORD PTR [rdi]
  416a59:	test   eax,eax
  416a5b:	jle    0x416aca
  416a5d:	mov    rcx,QWORD PTR [r12+0x8]
  416a62:	mov    r13,QWORD PTR [r12+0x20]
  416a67:	mov    rbp,QWORD PTR [r12+0x18]
  416a6c:	movsx  edi,BYTE PTR [r12+0x14]
  416a72:	call   0x40e950
  416a77:	mov    ecx,DWORD PTR [r12+0x10]
  416a7c:	mov    r9,rax
  416a7f:	mov    r8d,DWORD PTR [r12]
  416a83:	lea    rdx,[rip+0x21be7]        # 0x438671
  416a8a:	cmp    ecx,0x1
  416a8d:	je     0x416aa4
  416a8f:	lea    rax,[rip+0x21515]        # 0x437fab
  416a96:	lea    rdx,[rip+0x21bda]        # 0x438677
  416a9d:	cmp    ecx,0x2
  416aa0:	cmovne rdx,rax
  416aa4:	lea    rcx,[rip+0x21cad]        # 0x438758
  416aab:	mov    QWORD PTR [rsp+0x30],r13
  416ab0:	mov    QWORD PTR [rsp+0x28],rbp
  416ab5:	mov    DWORD PTR [rsp+0x20],edi
  416ab9:	call   0x41d1b0
  416abe:	lea    rcx,[rip+0x20b6a]        # 0x43762f
  416ac5:	call   0x41d1b0
  416aca:	mov    r8d,DWORD PTR [rip+0x37c9b]        # 0x44e76c
  416ad1:	test   r8d,r8d
  416ad4:	je     0x416260
  416ada:	test   sil,sil
  416add:	jne    0x416ce5
  416ae3:	jmp    0x416260
  416ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  416af0:	mov    edx,0x1
  416af5:	mov    rcx,rbx
  416af8:	call   0x4134f0
  416afd:	mov    eax,0x1
  416b02:	jmp    0x4164f0
  416b07:	nop    WORD PTR [rax+rax*1+0x0]
  416b10:	xor    edx,edx
  416b12:	mov    rcx,rbx
  416b15:	call   0x4134f0
  416b1a:	mov    eax,0x1
  416b1f:	jmp    0x4164f0
  416b24:	lea    rcx,[rbx+0x5]
  416b28:	lea    rdx,[rsp+0xa0]
  416b30:	call   0x41ce20
  416b35:	lea    rdx,[rsp+0xa8]
  416b3d:	lea    rcx,[rax+0x1]
  416b41:	call   0x41ce20
  416b46:	lea    rdx,[rsp+0xb0]
  416b4e:	lea    rcx,[rax+0x1]
  416b52:	call   0x41ce20
  416b57:	lea    rsi,[rax+0x1]
  416b5b:	mov    rcx,rsi
  416b5e:	call   0x42a610
  416b63:	shr    rax,1
  416b66:	lea    rcx,[rax+0x1]
  416b6a:	mov    rdi,rax
  416b6d:	call   0x41a6e0
  416b72:	mov    r8d,edi
  416b75:	mov    rdx,rax
  416b78:	mov    rcx,rsi
  416b7b:	mov    rbp,rax
  416b7e:	call   0x41ce70
  416b83:	mov    ecx,DWORD PTR [rsp+0xa0]
  416b8a:	cdqe   
  416b8c:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  416b91:	call   0x413d00
  416b96:	mov    rdx,QWORD PTR [rsp+0xa8]
  416b9e:	mov    QWORD PTR [rax],rbp
  416ba1:	mov    QWORD PTR [rax+0x10],rdx
  416ba5:	mov    ecx,DWORD PTR [rsp+0xa0]
  416bac:	call   0x414f60
  416bb1:	mov    rcx,rbx
  416bb4:	call   0x405bc0
  416bb9:	mov    eax,0x1
  416bbe:	jmp    0x4164f0
  416bc3:	mov    ecx,0x10
  416bc8:	call   0x41a6e0
  416bcd:	mov    r15,rax
  416bd0:	mov    rax,QWORD PTR [rsp+0xa8]
  416bd8:	mov    rdi,r15
  416bdb:	movzx  eax,BYTE PTR [rax]
  416bde:	mov    BYTE PTR [r15],al
  416be1:	mov    eax,DWORD PTR [r13+0x0]
  416be5:	test   eax,eax
  416be7:	jle    0x416c01
  416be9:	lea    rcx,[rip+0x211ab]        # 0x437d9b
  416bf0:	call   0x41d1b0
  416bf5:	lea    rcx,[rip+0x20a33]        # 0x43762f
  416bfc:	call   0x41d1b0
  416c01:	mov    rcx,QWORD PTR [rsp+0x40]
  416c06:	call   0x4019e0
  416c0b:	mov    QWORD PTR [r15+0x8],rax
  416c0f:	mov    edx,DWORD PTR [rip+0x37c13]        # 0x44e828
  416c15:	test   edx,edx
  416c17:	je     0x417040
  416c1d:	mov    eax,DWORD PTR [r14+0xb0]
  416c24:	mov    rcx,QWORD PTR [r14+0xb8]
  416c2b:	lea    edx,[rax+0x1]
  416c2e:	mov    DWORD PTR [r14+0xb0],edx
  416c35:	movsxd rdx,edx
  416c38:	shl    rdx,0x3
  416c3c:	call   0x41a710
  416c41:	movsxd rdx,DWORD PTR [r14+0xb0]
  416c48:	mov    rcx,QWORD PTR [r14+0xc0]
  416c4f:	mov    QWORD PTR [r14+0xb8],rax
  416c56:	shl    rdx,0x3
  416c5a:	call   0x41a710
  416c5f:	mov    QWORD PTR [r14+0xc0],rax
  416c66:	movsxd rax,DWORD PTR [r14+0xb0]
  416c6d:	mov    rdx,QWORD PTR [r14+0xb8]
  416c74:	shl    rax,0x3
  416c78:	mov    QWORD PTR [rdx+rax*1-0x8],rdi
  416c7d:	mov    rdx,QWORD PTR [r14+0xc0]
  416c84:	lea    rdi,[rdx+rax*1-0x8]
  416c89:	mov    rdx,QWORD PTR [rsp+0xa8]
  416c91:	mov    rcx,rsi
  416c94:	sub    rdx,rsi
  416c97:	call   0x41a8e0
  416c9c:	mov    QWORD PTR [rdi],rax
  416c9f:	mov    rsi,QWORD PTR [rsp+0xa8]
  416ca7:	jmp    0x416870
  416cac:	nop    DWORD PTR [rax+0x0]
  416cb0:	mov    rax,QWORD PTR [rip+0x2f7b9]        # 0x446470
  416cb7:	mov    eax,DWORD PTR [rax]
  416cb9:	test   eax,eax
  416cbb:	jle    0x416cd5
  416cbd:	lea    rcx,[rip+0x21afc]        # 0x4387c0
  416cc4:	call   0x41d1b0
  416cc9:	lea    rcx,[rip+0x2095f]        # 0x43762f
  416cd0:	call   0x41d1b0
  416cd5:	mov    r10d,DWORD PTR [rip+0x37a90]        # 0x44e76c
  416cdc:	test   r10d,r10d
  416cdf:	je     0x416260
  416ce5:	mov    rbp,QWORD PTR [rip+0x2f974]        # 0x446660
  416cec:	mov    rdx,QWORD PTR [rbp+0x0]
  416cf0:	mov    rax,QWORD PTR [rdx+0x1a0]
  416cf7:	test   rax,rax
  416cfa:	je     0x417b70
  416d00:	xor    ecx,ecx
  416d02:	call   rax
  416d04:	mov    rax,QWORD PTR [rbp+0x0]
  416d08:	mov    rdx,QWORD PTR [rax+0x1b0]
  416d0f:	test   rdx,rdx
  416d12:	je     0x416d1a
  416d14:	call   rdx
  416d16:	mov    rax,QWORD PTR [rbp+0x0]
  416d1a:	mov    rax,QWORD PTR [rax+0x1a0]
  416d21:	test   rax,rax
  416d24:	je     0x416d2d
  416d26:	mov    ecx,0x1
  416d2b:	call   rax
  416d2d:	mov    edx,DWORD PTR [r12+0x10]
  416d32:	test   edx,edx
  416d34:	je     0x4178f1
  416d3a:	mov    rsi,QWORD PTR [rip+0x37a8f]        # 0x44e7d0
  416d41:	test   rsi,rsi
  416d44:	je     0x41751f
  416d4a:	mov    rax,QWORD PTR [r12+0x8]
  416d4f:	jmp    0x416d5e
  416d51:	mov    rsi,QWORD PTR [rsi+0x58]
  416d55:	test   rsi,rsi
  416d58:	je     0x41751f
  416d5e:	cmp    QWORD PTR [rsi+0x8],rax
  416d62:	jne    0x416d51
  416d64:	cmp    edx,DWORD PTR [rsi+0x10]
  416d67:	jne    0x416d51
  416d69:	mov    edi,DWORD PTR [r12]
  416d6d:	cmp    DWORD PTR [rsi],edi
  416d6f:	je     0x416d51
  416d71:	cmp    edx,0x1
  416d74:	je     0x41749c
  416d7a:	cmp    edx,0x2
  416d7d:	je     0x417e73
  416d83:	lea    eax,[rdx-0x1]
  416d86:	cmp    eax,0x1
  416d89:	jbe    0x417e7f
  416d8f:	test   edx,edx
  416d91:	je     0x417c11
  416d97:	test   rsi,rsi
  416d9a:	je     0x417c11
  416da0:	mov    rcx,rbx
  416da3:	call   0x405bc0
  416da8:	mov    rax,QWORD PTR [rbp+0x0]
  416dac:	mov    rax,QWORD PTR [rax+0x1a8]
  416db3:	test   rax,rax
  416db6:	je     0x416268
  416dbc:	mov    ecx,0x1
  416dc1:	call   rax
  416dc3:	jmp    0x416268
  416dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  416dd0:	mov    ecx,0x1
  416dd5:	call   0x41a6e0
  416dda:	mov    rdx,QWORD PTR [rsp+0xa8]
  416de2:	mov    rdi,rax
  416de5:	movzx  ecx,BYTE PTR [rdx]
  416de8:	mov    BYTE PTR [rax],cl
  416dea:	mov    rax,QWORD PTR [rsp+0x48]
  416def:	mov    eax,DWORD PTR [rax]
  416df1:	test   eax,eax
  416df3:	jle    0x416e15
  416df5:	lea    rcx,[rip+0x2199c]        # 0x438798
  416dfc:	call   0x41d1b0
  416e01:	lea    rcx,[rip+0x20827]        # 0x43762f
  416e08:	call   0x41d1b0
  416e0d:	mov    rdx,QWORD PTR [rsp+0xa8]
  416e15:	add    rdx,0x1
  416e19:	mov    QWORD PTR [rsp+0xa8],rdx
  416e21:	jmp    0x416c0f
  416e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e30:	mov    ecx,0x1
  416e35:	call   0x41a6e0
  416e3a:	mov    rdx,QWORD PTR [rsp+0xa8]
  416e42:	mov    rdi,rax
  416e45:	movzx  ecx,BYTE PTR [rdx]
  416e48:	mov    BYTE PTR [rax],cl
  416e4a:	mov    rax,QWORD PTR [rsp+0x50]
  416e4f:	mov    eax,DWORD PTR [rax]
  416e51:	test   eax,eax
  416e53:	jle    0x416e75
  416e55:	lea    rcx,[rip+0x20ed2]        # 0x437d2e
  416e5c:	call   0x41d1b0
  416e61:	lea    rcx,[rip+0x207c7]        # 0x43762f
  416e68:	call   0x41d1b0
  416e6d:	mov    rdx,QWORD PTR [rsp+0xa8]
  416e75:	add    rdx,0x1
  416e79:	mov    QWORD PTR [rsp+0xa8],rdx
  416e81:	mov    r15,rdx
  416e84:	jmp    0x416e98
  416e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e90:	mov    QWORD PTR [rsp+0xa8],r15
  416e98:	movsx  ecx,BYTE PTR [r15]
  416e9c:	add    r15,0x1
  416ea0:	call   rbp
  416ea2:	test   eax,eax
  416ea4:	jne    0x416e90
  416ea6:	jmp    0x416c0f
  416eab:	nop    DWORD PTR [rax+rax*1+0x0]
  416eb0:	mov    ecx,0x20
  416eb5:	call   0x41a6e0
  416eba:	mov    r15,rax
  416ebd:	mov    rax,QWORD PTR [rsp+0xa8]
  416ec5:	mov    rdi,r15
  416ec8:	movzx  edx,BYTE PTR [rax]
  416ecb:	lea    rcx,[rax+0x1]
  416ecf:	mov    QWORD PTR [rsp+0xa8],rcx
  416ed7:	mov    BYTE PTR [r15],dl
  416eda:	cmp    BYTE PTR [rax+0x1],0x2d
  416ede:	je     0x417610
  416ee4:	lea    rdx,[rsp+0xb0]
  416eec:	call   0x41ce20
  416ef1:	lea    rdx,[r15+0x8]
  416ef5:	lea    rcx,[rax+0x1]
  416ef9:	mov    QWORD PTR [rsp+0xa8],rcx
  416f01:	call   0x41ce20
  416f06:	lea    rdx,[r15+0x10]
  416f0a:	lea    rcx,[rax+0x1]
  416f0e:	mov    QWORD PTR [rsp+0xa8],rcx
  416f16:	call   0x41ce20
  416f1b:	mov    r9d,DWORD PTR [rsp+0xb0]
  416f23:	mov    QWORD PTR [rsp+0xa8],rax
  416f2b:	mov    rax,QWORD PTR [rsp+0x58]
  416f30:	mov    DWORD PTR [r15+0x18],r9d
  416f34:	mov    DWORD PTR [rsp+0x64],r9d
  416f39:	mov    eax,DWORD PTR [rax]
  416f3b:	test   eax,eax
  416f3d:	jle    0x416c0f
  416f43:	mov    rcx,QWORD PTR [r15+0x8]
  416f47:	call   0x40e950
  416f4c:	mov    rcx,QWORD PTR [r15+0x10]
  416f50:	mov    QWORD PTR [rsp+0x68],rax
  416f55:	call   0x41c550
  416f5a:	mov    r9d,DWORD PTR [rsp+0x64]
  416f5f:	mov    r8,QWORD PTR [rsp+0x68]
  416f64:	lea    rcx,[rip+0x20d95]        # 0x437d00
  416f6b:	mov    rdx,rax
  416f6e:	call   0x41d1b0
  416f73:	lea    rcx,[rip+0x206b5]        # 0x43762f
  416f7a:	call   0x41d1b0
  416f7f:	jmp    0x416c0f
  416f84:	mov    rax,QWORD PTR [rip+0x2f4e5]        # 0x446470
  416f8b:	mov    r11d,DWORD PTR [rax]
  416f8e:	test   r11d,r11d
  416f91:	jle    0x416cd5
  416f97:	lea    rcx,[rip+0x2184a]        # 0x4387e8
  416f9e:	call   0x41d1b0
  416fa3:	lea    rcx,[rip+0x20685]        # 0x43762f
  416faa:	call   0x41d1b0
  416faf:	jmp    0x416cd5
  416fb4:	mov    r11d,DWORD PTR [rip+0x377b1]        # 0x44e76c
  416fbb:	test   r11d,r11d
  416fbe:	jne    0x416754
  416fc4:	lea    rax,[rbx+0xe]
  416fc8:	lea    rdi,[rip+0x21c8f]        # 0x438c5e
  416fcf:	mov    ecx,0x3
  416fd4:	mov    rsi,rax
  416fd7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416fd9:	mov    ecx,0x500000
  416fde:	seta   r8b
  416fe2:	setb   dl
  416fe5:	cmp    r8b,dl
  416fe8:	jne    0x417f51
  416fee:	call   0x413360
  416ff3:	mov    rax,QWORD PTR [rip+0x2f476]        # 0x446470
  416ffa:	mov    r10d,DWORD PTR [rax]
  416ffd:	test   r10d,r10d
  417000:	jle    0x416260
  417006:	mov    rcx,QWORD PTR [rip+0x3782b]        # 0x44e838
  41700d:	call   0x41c570
  417012:	lea    rcx,[rip+0x21c48]        # 0x438c61
  417019:	mov    rdx,rax
  41701c:	call   0x41d1b0
  417021:	lea    rcx,[rip+0x20607]        # 0x43762f
  417028:	call   0x41d1b0
  41702d:	jmp    0x416260
  417032:	lea    rdx,[rip+0x37797]        # 0x44e7d0
  417039:	jmp    0x416963
  41703e:	xchg   ax,ax
  417040:	mov    eax,DWORD PTR [r14+0x30]
  417044:	mov    rcx,QWORD PTR [r14+0x38]
  417048:	lea    edx,[rax+0x1]
  41704b:	mov    DWORD PTR [r14+0x30],edx
  41704f:	shl    rdx,0x3
  417053:	call   0x41a710
  417058:	mov    edx,DWORD PTR [r14+0x30]
  41705c:	mov    rcx,QWORD PTR [r14+0x60]
  417060:	mov    QWORD PTR [r14+0x38],rax
  417064:	shl    rdx,0x3
  417068:	call   0x41a710
  41706d:	mov    QWORD PTR [r14+0x60],rax
  417071:	mov    eax,DWORD PTR [r14+0x30]
  417075:	mov    rdx,QWORD PTR [r14+0x38]
  417079:	sub    eax,0x1
  41707c:	mov    QWORD PTR [rdx+rax*8],rdi
  417080:	mov    rdx,QWORD PTR [r14+0x60]
  417084:	lea    rdi,[rdx+rax*8]
  417088:	jmp    0x416c89
  41708d:	nop    DWORD PTR [rax]
  417090:	lea    rdi,[rbp+0x5]
  417094:	mov    edx,0x3b
  417099:	mov    rcx,rdi
  41709c:	call   0x42a630
  4170a1:	mov    rdx,rax
  4170a4:	mov    rbp,rax
  4170a7:	sub    rdx,rdi
  4170aa:	add    rbp,0x1
  4170ae:	mov    rsi,rdx
  4170b1:	shr    rsi,0x3f
  4170b5:	add    rsi,rdx
  4170b8:	sar    rsi,1
  4170bb:	lea    rcx,[rsi+0x1]
  4170bf:	call   0x41a6e0
  4170c4:	mov    r8d,esi
  4170c7:	mov    rdx,rax
  4170ca:	mov    rcx,rdi
  4170cd:	mov    r15,rax
  4170d0:	call   0x41ce70
  4170d5:	mov    r9d,DWORD PTR [r13+0x0]
  4170d9:	movsxd rdx,eax
  4170dc:	mov    BYTE PTR [r15+rdx*1],0x0
  4170e1:	test   r9d,r9d
  4170e4:	jle    0x417101
  4170e6:	lea    rcx,[rip+0x21ba0]        # 0x438c8d
  4170ed:	mov    rdx,r15
  4170f0:	call   0x41d1b0
  4170f5:	lea    rcx,[rip+0x20533]        # 0x43762f
  4170fc:	call   0x41d1b0
  417101:	mov    rcx,QWORD PTR [rip+0x37648]        # 0x44e750
  417108:	call   0x41a7c0
  41710d:	mov    QWORD PTR [rip+0x3763c],r15        # 0x44e750
  417114:	jmp    0x416182
  417119:	mov    rax,QWORD PTR [rip+0x2f350]        # 0x446470
  417120:	mov    r8d,DWORD PTR [rax]
  417123:	test   r8d,r8d
  417126:	jle    0x417152
  417128:	mov    rcx,rdi
  41712b:	call   0x40e950
  417130:	mov    edx,DWORD PTR [rsp+0x80]
  417137:	lea    rcx,[rip+0x215aa]        # 0x4386e8
  41713e:	mov    r8,rax
  417141:	call   0x41d1b0
  417146:	lea    rcx,[rip+0x204e2]        # 0x43762f
  41714d:	call   0x41d1b0
  417152:	mov    rcx,rbx
  417155:	call   0x405bd0
  41715a:	jmp    0x416268
  41715f:	nop
  417160:	lea    rdi,[rbp+0x6]
  417164:	mov    edx,0x3b
  417169:	mov    rcx,rdi
  41716c:	call   0x42a630
  417171:	mov    rdx,rax
  417174:	mov    rbp,rax
  417177:	sub    rdx,rdi
  41717a:	add    rbp,0x1
  41717e:	mov    rsi,rdx
  417181:	shr    rsi,0x3f
  417185:	add    rsi,rdx
  417188:	sar    rsi,1
  41718b:	lea    rcx,[rsi+0x1]
  41718f:	call   0x41a6e0
  417194:	mov    r8d,esi
  417197:	mov    rdx,rax
  41719a:	mov    rcx,rdi
  41719d:	mov    r15,rax
  4171a0:	call   0x41ce70
  4171a5:	mov    r8d,DWORD PTR [r14]
  4171a8:	movsxd rdx,eax
  4171ab:	mov    BYTE PTR [r15+rdx*1],0x0
  4171b0:	test   r8d,r8d
  4171b3:	jle    0x4171d0
  4171b5:	lea    rcx,[rip+0x21ae5]        # 0x438ca1
  4171bc:	mov    rdx,r15
  4171bf:	call   0x41d1b0
  4171c4:	lea    rcx,[rip+0x20464]        # 0x43762f
  4171cb:	call   0x41d1b0
  4171d0:	mov    rcx,QWORD PTR [rip+0x37571]        # 0x44e748
  4171d7:	call   0x41a7c0
  4171dc:	mov    QWORD PTR [rip+0x37565],r15        # 0x44e748
  4171e3:	jmp    0x416182
  4171e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4171f0:	lea    rcx,[rbx+0x6]
  4171f4:	lea    rdx,[rsp+0x80]
  4171fc:	call   0x41ce20
  417201:	lea    rdx,[rsp+0x88]
  417209:	lea    rcx,[rax+0x1]
  41720d:	call   0x41ce20
  417212:	mov    r14,QWORD PTR [rip+0x375b7]        # 0x44e7d0
  417219:	mov    rbp,rax
  41721c:	lea    rsi,[rax+0x1]
  417220:	mov    rdi,QWORD PTR [rsp+0x88]
  417228:	mov    r13,QWORD PTR [rsp+0x80]
  417230:	test   r14,r14
  417233:	je     0x417670
  417239:	xor    eax,eax
  41723b:	jmp    0x41680c
  417240:	mov    QWORD PTR [rip+0x37569],r12        # 0x44e7b0
  417247:	jmp    0x416781
  41724c:	nop    DWORD PTR [rax+0x0]
  417250:	mov    rdi,QWORD PTR [rip+0x2f219]        # 0x446470
  417257:	mov    eax,DWORD PTR [rdi]
  417259:	test   eax,eax
  41725b:	jle    0x417275
  41725d:	lea    rcx,[rip+0x21724]        # 0x438988
  417264:	call   0x41d1b0
  417269:	lea    rcx,[rip+0x203bf]        # 0x43762f
  417270:	call   0x41d1b0
  417275:	mov    rbp,QWORD PTR [rip+0x2f3e4]        # 0x446660
  41727c:	mov    rdx,QWORD PTR [rbp+0x0]
  417280:	mov    rax,QWORD PTR [rdx+0x1a0]
  417287:	test   rax,rax
  41728a:	je     0x417901
  417290:	xor    ecx,ecx
  417292:	call   rax
  417294:	mov    rax,QWORD PTR [rbp+0x0]
  417298:	mov    rdx,QWORD PTR [rax+0x1b0]
  41729f:	test   rdx,rdx
  4172a2:	je     0x4172aa
  4172a4:	call   rdx
  4172a6:	mov    rax,QWORD PTR [rbp+0x0]
  4172aa:	mov    rax,QWORD PTR [rax+0x1a0]
  4172b1:	test   rax,rax
  4172b4:	je     0x4172bd
  4172b6:	mov    ecx,0x1
  4172bb:	call   rax
  4172bd:	call   0x401570
  4172c2:	test   eax,eax
  4172c4:	jne    0x417944
  4172ca:	mov    BYTE PTR [rbx],0x0
  4172cd:	call   0x401570
  4172d2:	test   eax,eax
  4172d4:	je     0x417313
  4172d6:	mov    rax,QWORD PTR [rbp+0x0]
  4172da:	mov    rax,QWORD PTR [rax+0x268]
  4172e1:	test   rax,rax
  4172e4:	je     0x4172ea
  4172e6:	call   rax
  4172e8:	mov    esi,eax
  4172ea:	mov    rcx,QWORD PTR [rip+0x37677]        # 0x44e968
  4172f1:	lea    rdx,[rsp+0xa8]
  4172f9:	mov    r8d,0x4
  4172ff:	mov    DWORD PTR [rsp+0xa8],esi
  417306:	call   0x40df50
  41730b:	test   eax,eax
  41730d:	jne    0x4182d5
  417313:	call   0x401570
  417318:	test   eax,eax
  41731a:	jne    0x417aa8
  417320:	mov    rsi,QWORD PTR [rip+0x374a9]        # 0x44e7d0
  417327:	test   rsi,rsi
  41732a:	je     0x417810
  417330:	lea    rax,[rsp+0xb0]
  417338:	xor    r12d,r12d
  41733b:	xor    r14d,r14d
  41733e:	xor    r13d,r13d
  417341:	mov    QWORD PTR [rsp+0x40],rax
  417346:	jmp    0x417375
  417348:	nop    DWORD PTR [rax+rax*1+0x0]
  417350:	sub    eax,0x1
  417353:	cmp    eax,0x1
  417356:	jbe    0x4173a5
  417358:	mov    rax,QWORD PTR [rsi+0xc8]
  41735f:	test   rax,rax
  417362:	je     0x4175a0
  417368:	mov    rsi,QWORD PTR [rsi+0x58]
  41736c:	test   rsi,rsi
  41736f:	je     0x417810
  417375:	mov    eax,DWORD PTR [rsi+0x10]
  417378:	mov    QWORD PTR [rsi+0x40],0x0
  417380:	mov    QWORD PTR [rsi+0x48],0x0
  417388:	test   eax,eax
  41738a:	jne    0x417350
  41738c:	mov    rcx,QWORD PTR [rsi+0x8]
  417390:	lea    rdx,[rip+0xffffffffffffc499]        # 0x413830
  417397:	call   0x4100a0
  41739c:	mov    QWORD PTR [rsi+0xc8],rax
  4173a3:	jmp    0x41735f
  4173a5:	call   0x401570
  4173aa:	test   eax,eax
  4173ac:	je     0x417555
  4173b2:	cmp    DWORD PTR [rsi+0x10],0x1
  4173b6:	jne    0x41743e
  4173bc:	mov    rax,QWORD PTR [rip+0x2f2cd]        # 0x446690
  4173c3:	mov    eax,DWORD PTR [rax]
  4173c5:	test   eax,eax
  4173c7:	jne    0x417b25
  4173cd:	test   r13,r13
  4173d0:	je     0x4173e0
  4173d2:	mov    rax,QWORD PTR [rsi+0x8]
  4173d6:	cmp    QWORD PTR [r13+0x8],rax
  4173da:	je     0x417e06
  4173e0:	mov    rcx,rsi
  4173e3:	call   0x4139d0
  4173e8:	mov    rdx,rbx
  4173eb:	mov    rcx,rsi
  4173ee:	call   0x413d80
  4173f3:	test   eax,eax
  4173f5:	sete   al
  4173f8:	movzx  eax,al
  4173fb:	test   eax,eax
  4173fd:	cmovne r13,rsi
  417401:	cmp    rsi,QWORD PTR [rip+0x373c8]        # 0x44e7d0
  417408:	mov    r15,QWORD PTR [rsi+0x78]
  41740c:	mov    QWORD PTR [rsp+0xb0],r15
  417414:	je     0x417aff
  41741a:	mov    rdx,QWORD PTR [rsp+0x40]
  41741f:	lea    rcx,[r12+0x58]
  417424:	mov    r8d,0x8
  41742a:	mov    r12,r15
  41742d:	call   0x40df50
  417432:	mov    rax,QWORD PTR [rsi+0xc8]
  417439:	jmp    0x41735f
  41743e:	call   0x413400
  417443:	test   eax,eax
  417445:	je     0x418208
  41744b:	mov    rcx,rsi
  41744e:	call   0x4139d0
  417453:	test   r14,r14
  417456:	mov    rcx,QWORD PTR [rsi+0x8]
  41745a:	je     0x417466
  41745c:	cmp    QWORD PTR [r14+0x8],rcx
  417460:	je     0x417b60
  417466:	mov    rdx,rbx
  417469:	call   0x414b10
  41746e:	test   eax,eax
  417470:	jne    0x417401
  417472:	mov    QWORD PTR [rsi+0xc8],0xffffffffffffffff
  41747d:	mov    r14,rsi
  417480:	jmp    0x417401
  417485:	call   0x415270
  41748a:	mov    rcx,rbx
  41748d:	call   0x405bc0
  417492:	mov    eax,0x1
  417497:	jmp    0x4164f0
  41749c:	mov    rax,QWORD PTR [rsi+0x90]
  4174a3:	mov    QWORD PTR [r12+0x90],rax
  4174ab:	mov    rax,QWORD PTR [rsi+0x98]
  4174b2:	mov    QWORD PTR [r12+0x98],rax
  4174ba:	mov    rax,QWORD PTR [rsi+0xa0]
  4174c1:	mov    QWORD PTR [r12+0xa0],rax
  4174c9:	mov    rax,QWORD PTR [rsi+0xa8]
  4174d0:	mov    QWORD PTR [r12+0xa8],rax
  4174d8:	mov    rax,QWORD PTR [rsi+0x80]
  4174df:	mov    QWORD PTR [r12+0x80],rax
  4174e7:	mov    rax,QWORD PTR [rsi+0x88]
  4174ee:	mov    QWORD PTR [r12+0x88],rax
  4174f6:	mov    rax,QWORD PTR [rsi+0xc8]
  4174fd:	mov    QWORD PTR [r12+0xc8],rax
  417505:	mov    rcx,QWORD PTR [rsi+0xc8]
  41750c:	test   rcx,rcx
  41750f:	je     0x4182d0
  417515:	call   0x40fd60
  41751a:	mov    edx,DWORD PTR [r12+0x10]
  41751f:	mov    rax,QWORD PTR [rip+0x2f16a]        # 0x446690
  417526:	mov    ecx,DWORD PTR [rax]
  417528:	test   ecx,ecx
  41752a:	je     0x416d83
  417530:	cmp    edx,0x1
  417533:	jne    0x416d83
  417539:	mov    ecx,0x1
  41753e:	call   0x4016d0
  417543:	test   eax,eax
  417545:	jne    0x4181a9
  41754b:	mov    edx,DWORD PTR [r12+0x10]
  417550:	jmp    0x416d83
  417555:	lea    rdx,[rip+0x2096c]        # 0x437ec8
  41755c:	mov    rcx,rbx
  41755f:	call   0x42aab0
  417564:	mov    eax,DWORD PTR [rdi]
  417566:	test   eax,eax
  417568:	jle    0x4175a0
  41756a:	cmp    DWORD PTR [rsi+0x10],0x2
  41756e:	lea    rax,[rip+0x2110a]        # 0x43867f
  417575:	lea    rdx,[rip+0x2110a]        # 0x438686
  41757c:	lea    rcx,[rip+0x212dd]        # 0x438860
  417583:	cmove  rdx,rax
  417587:	call   0x41d1b0
  41758c:	lea    rcx,[rip+0x2009c]        # 0x43762f
  417593:	call   0x41d1b0
  417598:	nop    DWORD PTR [rax+rax*1+0x0]
  4175a0:	call   0x4149a0
  4175a5:	cmp    BYTE PTR [rbx],0x0
  4175a8:	jne    0x4175b2
  4175aa:	mov    rcx,rbx
  4175ad:	call   0x405bd0
  4175b2:	mov    rax,QWORD PTR [rbp+0x0]
  4175b6:	mov    rdx,QWORD PTR [rax+0x1a8]
  4175bd:	mov    eax,0x1
  4175c2:	test   rdx,rdx
  4175c5:	je     0x4164f0
  4175cb:	mov    DWORD PTR [rsp+0x40],eax
  4175cf:	mov    ecx,0x1
  4175d4:	call   rdx
  4175d6:	mov    eax,DWORD PTR [rsp+0x40]
  4175da:	jmp    0x4164f0
  4175df:	lea    rdx,[rsp+0xb0]
  4175e7:	lea    rcx,[rbx+0xf]
  4175eb:	call   0x41ce20
  4175f0:	mov    rcx,rbx
  4175f3:	call   0x405bc0
  4175f8:	mov    rax,QWORD PTR [rsp+0xb0]
  417600:	mov    DWORD PTR [rip+0x37162],eax        # 0x44e768
  417606:	mov    eax,0x1
  41760b:	jmp    0x4164f0
  417610:	lea    rcx,[rax+0x2]
  417614:	lea    rdx,[rsp+0xb0]
  41761c:	mov    QWORD PTR [rsp+0xa8],rcx
  417624:	call   0x41ce20
  417629:	lea    rdx,[r15+0x8]
  41762d:	lea    rcx,[rax+0x1]
  417631:	mov    QWORD PTR [rsp+0xa8],rcx
  417639:	call   0x41ce20
  41763e:	lea    rdx,[r15+0x10]
  417642:	lea    rcx,[rax+0x1]
  417646:	mov    QWORD PTR [rsp+0xa8],rcx
  41764e:	call   0x41ce20
  417653:	mov    r9d,DWORD PTR [rsp+0xb0]
  41765b:	mov    QWORD PTR [rsp+0xa8],rax
  417663:	neg    r9d
  417666:	jmp    0x416f2b
  41766b:	nop    DWORD PTR [rax+rax*1+0x0]
  417670:	mov    rax,QWORD PTR [rip+0x2edf9]        # 0x446470
  417677:	mov    r9d,DWORD PTR [rax]
  41767a:	test   r9d,r9d
  41767d:	jle    0x417152
  417683:	mov    rcx,rdi
  417686:	call   0x40e950
  41768b:	mov    edx,DWORD PTR [rsp+0x80]
  417692:	lea    rcx,[rip+0x21177]        # 0x438810
  417699:	mov    r8,rax
  41769c:	call   0x41d1b0
  4176a1:	lea    rcx,[rip+0x1ff87]        # 0x43762f
  4176a8:	call   0x41d1b0
  4176ad:	jmp    0x417152
  4176b2:	mov    DWORD PTR [r12+0x10],0x2
  4176bb:	add    rsi,0x2
  4176bf:	movzx  r8d,BYTE PTR [rsi]
  4176c3:	jmp    0x4169e0
  4176c8:	mov    rsi,r14
  4176cb:	jmp    0x4169e0
  4176d0:	lea    rax,[rbx+0x8]
  4176d4:	lea    rdi,[rip+0x21411]        # 0x438aec
  4176db:	mov    ecx,0x3
  4176e0:	mov    rsi,rax
  4176e3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4176e5:	je     0x417cdc
  4176eb:	lea    rdi,[rip+0x21426]        # 0x438b18
  4176f2:	mov    ecx,0x6
  4176f7:	mov    rsi,rax
  4176fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4176fc:	je     0x417d72
  417702:	lea    rdi,[rip+0x2144e]        # 0x438b57
  417709:	mov    ecx,0x8
  41770e:	mov    rsi,rax
  417711:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417713:	je     0x417f6e
  417719:	lea    rdi,[rip+0x2147c]        # 0x438b9c
  417720:	mov    ecx,0x4
  417725:	mov    rsi,rax
  417728:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41772a:	jne    0x417e13
  417730:	lea    rdx,[rsp+0xb0]
  417738:	lea    rcx,[rbx+0xc]
  41773c:	call   0x41ce20
  417741:	mov    rax,QWORD PTR [rip+0x2ed28]        # 0x446470
  417748:	mov    rbp,QWORD PTR [rsp+0xb0]
  417750:	mov    r12d,DWORD PTR [rax]
  417753:	mov    edi,ebp
  417755:	test   r12d,r12d
  417758:	jle    0x417774
  41775a:	lea    rcx,[rip+0x21447]        # 0x438ba8
  417761:	mov    edx,ebp
  417763:	call   0x41d1b0
  417768:	lea    rcx,[rip+0x1fec0]        # 0x43762f
  41776f:	call   0x41d1b0
  417774:	mov    eax,DWORD PTR [rip+0x1492e]        # 0x42c0a8
  41777a:	lea    esi,[rax+0x1]
  41777d:	mov    ecx,esi
  41777f:	mov    DWORD PTR [rsp+0x80],esi
  417786:	call   0x412d70
  41778b:	test   rax,rax
  41778e:	je     0x4177f1
  417790:	movsx  r9d,WORD PTR [rax]
  417794:	test   r9w,r9w
  417798:	je     0x4177f1
  41779a:	cmp    ebp,r9d
  41779d:	je     0x41833c
  4177a3:	mov    r10,QWORD PTR [rip+0x36fee]        # 0x44e798
  4177aa:	xor    r11d,r11d
  4177ad:	mov    r8,r10
  4177b0:	sub    r8,QWORD PTR [rip+0x36ff1]        # 0x44e7a8
  4177b7:	neg    r8
  4177ba:	jmp    0x4177c9
  4177bc:	nop    DWORD PTR [rax+0x0]
  4177c0:	cmp    edi,r9d
  4177c3:	je     0x418094
  4177c9:	mov    edx,DWORD PTR [rax+0x4]
  4177cc:	add    esi,0x1
  4177cf:	add    rdx,0x8
  4177d3:	lea    rcx,[rax+rdx*1]
  4177d7:	cmp    r10,rcx
  4177da:	mov    rcx,r11
  4177dd:	cmovbe rcx,r8
  4177e1:	add    rdx,rcx
  4177e4:	add    rax,rdx
  4177e7:	movsx  r9d,WORD PTR [rax]
  4177eb:	test   r9w,r9w
  4177ef:	jne    0x4177c0
  4177f1:	mov    DWORD PTR [rsp+0x80],0xffffffff
  4177fc:	lea    rdx,[rip+0x2141e]        # 0x438c21
  417803:	mov    rcx,rbx
  417806:	call   0x42aab0
  41780b:	jmp    0x416268
  417810:	mov    QWORD PTR [rip+0x36fad],0x0        # 0x44e7c8
  41781b:	mov    DWORD PTR [rip+0x36f9f],0x0        # 0x44e7c4
  417825:	mov    DWORD PTR [rip+0x36f91],0x0        # 0x44e7c0
  41782f:	mov    QWORD PTR [rip+0x36f7e],0x0        # 0x44e7b8
  41783a:	call   0x413210
  41783f:	mov    DWORD PTR [rip+0x36f23],0x1        # 0x44e76c
  417849:	mov    QWORD PTR [rip+0x36f10],rax        # 0x44e760
  417850:	call   0x401570
  417855:	test   eax,eax
  417857:	jne    0x4180a3
  41785d:	mov    rax,QWORD PTR [rbp+0x0]
  417861:	mov    rax,QWORD PTR [rax+0x1a8]
  417868:	test   rax,rax
  41786b:	je     0x416260
  417871:	mov    ecx,0x1
  417876:	call   rax
  417878:	jmp    0x416260
  41787d:	mov    DWORD PTR [rip+0x36fa1],0x1        # 0x44e828
  417887:	lea    rsi,[rbp+0x2]
  41788b:	jmp    0x41683e
  417890:	lea    rdx,[rsp+0xb0]
  417898:	lea    rcx,[rbx+0x12]
  41789c:	call   0x41ce20
  4178a1:	mov    rdx,QWORD PTR [rip+0x2ebc8]        # 0x446470
  4178a8:	mov    rax,QWORD PTR [rsp+0xb0]
  4178b0:	mov    esi,DWORD PTR [rdx]
  4178b2:	mov    DWORD PTR [rip+0x36f88],eax        # 0x44e840
  4178b8:	test   esi,esi
  4178ba:	jle    0x416260
  4178c0:	test   eax,eax
  4178c2:	lea    rdx,[rip+0x20dcb]        # 0x438694
  4178c9:	lea    rax,[rip+0x20dbb]        # 0x43868b
  4178d0:	lea    rcx,[rip+0x21361]        # 0x438c38
  4178d7:	cmovne rdx,rax
  4178db:	call   0x41d1b0
  4178e0:	lea    rcx,[rip+0x1fd48]        # 0x43762f
  4178e7:	call   0x41d1b0
  4178ec:	jmp    0x416260
  4178f1:	xor    esi,esi
  4178f3:	jmp    0x416d83
  4178f8:	mov    QWORD PTR [rsi+0x68],rax
  4178fc:	jmp    0x416260
  417901:	mov    rdx,QWORD PTR [rdx+0x1b0]
  417908:	test   rdx,rdx
  41790b:	jne    0x4172a4
  417911:	jmp    0x4172bd
  417916:	lea    rcx,[rsi+0x2]
  41791a:	mov    DWORD PTR [r12+0x10],0x1
  417923:	mov    rdx,rbp
  417926:	call   0x41ce20
  41792b:	mov    rsi,rax
  41792e:	mov    rax,QWORD PTR [rsp+0x90]
  417936:	mov    DWORD PTR [r12+0x70],eax
  41793b:	movzx  r8d,BYTE PTR [rsi]
  41793f:	jmp    0x4169e0
  417944:	lea    r14,[rsp+0xb0]
  41794c:	mov    rcx,QWORD PTR [rip+0x36fed]        # 0x44e940
  417953:	mov    r8d,0x8
  417959:	mov    QWORD PTR [rsp+0xb0],0x0
  417965:	mov    rdx,r14
  417968:	call   0x40df50
  41796d:	mov    r15,QWORD PTR [rip+0x36e3c]        # 0x44e7b0
  417974:	test   r15,r15
  417977:	je     0x4172ca
  41797d:	lea    rcx,[rsp+0xa8]
  417985:	xor    eax,eax
  417987:	xor    r13d,r13d
  41798a:	mov    QWORD PTR [rsp+0x40],rcx
  41798f:	jmp    0x41799e
  417991:	mov    r15,QWORD PTR [r15+0x28]
  417995:	test   r15,r15
  417998:	je     0x417ad3
  41799e:	cmp    QWORD PTR [r15+0x20],0x0
  4179a3:	jne    0x417991
  4179a5:	mov    rax,QWORD PTR [r15]
  4179a8:	mov    ecx,0x30
  4179ad:	mov    QWORD PTR [rsp+0xb0],rax
  4179b5:	mov    rax,QWORD PTR [r15+0x8]
  4179b9:	mov    QWORD PTR [rsp+0xb8],rax
  4179c1:	mov    rax,QWORD PTR [r15+0x10]
  4179c5:	mov    QWORD PTR [rsp+0xc0],rax
  4179cd:	mov    rax,QWORD PTR [r15+0x18]
  4179d1:	mov    QWORD PTR [rsp+0xc8],rax
  4179d9:	mov    rax,QWORD PTR [r15+0x20]
  4179dd:	mov    QWORD PTR [rsp+0xd0],rax
  4179e5:	mov    rax,QWORD PTR [r15+0x28]
  4179e9:	mov    QWORD PTR [rsp+0xd8],rax
  4179f1:	call   0x4138e0
  4179f6:	cmp    r15,QWORD PTR [rip+0x36db3]        # 0x44e7b0
  4179fd:	mov    r12,rax
  417a00:	mov    QWORD PTR [rsp+0xa8],rax
  417a08:	je     0x418044
  417a0e:	mov    rdx,QWORD PTR [rsp+0x40]
  417a13:	lea    rcx,[r13+0x28]
  417a17:	mov    r8d,0x8
  417a1d:	call   0x40df50
  417a22:	mov    rcx,r12
  417a25:	mov    r8d,0x30
  417a2b:	mov    rdx,r14
  417a2e:	mov    QWORD PTR [rsp+0xd8],0x0
  417a3a:	call   0x40df50
  417a3f:	mov    rcx,QWORD PTR [r15]
  417a42:	test   rcx,rcx
  417a45:	je     0x417a92
  417a47:	call   0x42a610
  417a4c:	lea    r8,[rax+0x1]
  417a50:	mov    rcx,r8
  417a53:	mov    QWORD PTR [rsp+0x48],r8
  417a58:	call   0x4138e0
  417a5d:	mov    r8,QWORD PTR [rsp+0x48]
  417a62:	mov    rdx,QWORD PTR [r15]
  417a65:	mov    rcx,rax
  417a68:	mov    QWORD PTR [rsp+0x48],rax
  417a6d:	call   0x40df50
  417a72:	mov    r10,QWORD PTR [rsp+0x48]
  417a77:	mov    rdx,QWORD PTR [rsp+0x40]
  417a7c:	mov    r8d,0x8
  417a82:	mov    rcx,r12
  417a85:	mov    QWORD PTR [rsp+0xa8],r10
  417a8d:	call   0x40df50
  417a92:	cmp    QWORD PTR [r15+0x20],0x0
  417a97:	jne    0x4182e1
  417a9d:	mov    rax,r13
  417aa0:	mov    r13,r12
  417aa3:	jmp    0x417991
  417aa8:	mov    rcx,QWORD PTR [rip+0x36e49]        # 0x44e8f8
  417aaf:	lea    rdx,[rsp+0xb0]
  417ab7:	mov    r8d,0x8
  417abd:	mov    QWORD PTR [rsp+0xb0],0x0
  417ac9:	call   0x40df50
  417ace:	jmp    0x417320
  417ad3:	test   rax,rax
  417ad6:	je     0x4172ca
  417adc:	lea    rcx,[rax+0x28]
  417ae0:	mov    r8d,0x8
  417ae6:	mov    rdx,r14
  417ae9:	mov    QWORD PTR [rsp+0xb0],0x0
  417af5:	call   0x40df50
  417afa:	jmp    0x4172ca
  417aff:	mov    rdx,QWORD PTR [rsp+0x40]
  417b04:	mov    rcx,QWORD PTR [rip+0x36ded]        # 0x44e8f8
  417b0b:	mov    r8d,0x8
  417b11:	mov    r12,r15
  417b14:	call   0x40df50
  417b19:	mov    rax,QWORD PTR [rsi+0xc8]
  417b20:	jmp    0x41735f
  417b25:	mov    ecx,0x1
  417b2a:	call   0x4016d0
  417b2f:	test   eax,eax
  417b31:	setne  al
  417b34:	test   r13,r13
  417b37:	je     0x417b43
  417b39:	mov    rcx,QWORD PTR [rsi+0x8]
  417b3d:	cmp    QWORD PTR [r13+0x8],rcx
  417b41:	je     0x417b85
  417b43:	test   al,al
  417b45:	je     0x4173e0
  417b4b:	mov    rcx,rsi
  417b4e:	call   0x414710
  417b53:	test   eax,eax
  417b55:	sete   al
  417b58:	movzx  eax,al
  417b5b:	jmp    0x4173fb
  417b60:	mov    QWORD PTR [rsi+0xc8],0xffffffffffffffff
  417b6b:	jmp    0x417401
  417b70:	mov    rdx,QWORD PTR [rdx+0x1b0]
  417b77:	test   rdx,rdx
  417b7a:	jne    0x416d14
  417b80:	jmp    0x416d2d
  417b85:	test   al,al
  417b87:	je     0x417e06
  417b8d:	mov    rcx,rsi
  417b90:	call   0x414710
  417b95:	mov    rax,QWORD PTR [r13+0x90]
  417b9c:	mov    QWORD PTR [rsi+0x90],rax
  417ba3:	mov    rax,QWORD PTR [r13+0x98]
  417baa:	mov    QWORD PTR [rsi+0x98],rax
  417bb1:	mov    rax,QWORD PTR [r13+0xa0]
  417bb8:	mov    QWORD PTR [rsi+0xa0],rax
  417bbf:	mov    rax,QWORD PTR [r13+0xa8]
  417bc6:	mov    QWORD PTR [rsi+0xa8],rax
  417bcd:	mov    rax,QWORD PTR [r13+0x80]
  417bd4:	mov    QWORD PTR [rsi+0x80],rax
  417bdb:	mov    rax,QWORD PTR [r13+0x88]
  417be2:	mov    QWORD PTR [rsi+0x88],rax
  417be9:	mov    rax,QWORD PTR [r13+0xc8]
  417bf0:	mov    QWORD PTR [rsi+0xc8],rax
  417bf7:	mov    rcx,QWORD PTR [r13+0xc8]
  417bfe:	test   rcx,rcx
  417c01:	je     0x4182d0
  417c07:	call   0x40fd60
  417c0c:	jmp    0x417401
  417c11:	mov    QWORD PTR [r12+0xc8],0x0
  417c1d:	mov    BYTE PTR [rbx],0x0
  417c20:	mov    eax,DWORD PTR [r12+0x10]
  417c25:	test   eax,eax
  417c27:	je     0x418060
  417c2d:	sub    eax,0x1
  417c30:	cmp    eax,0x1
  417c33:	ja     0x418324
  417c39:	call   0x401570
  417c3e:	test   eax,eax
  417c40:	jne    0x417fff
  417c46:	mov    rax,QWORD PTR [rip+0x2e823]        # 0x446470
  417c4d:	mov    edx,DWORD PTR [rax]
  417c4f:	test   edx,edx
  417c51:	jle    0x417c83
  417c53:	cmp    DWORD PTR [r12+0x10],0x2
  417c59:	lea    rax,[rip+0x20a1f]        # 0x43867f
  417c60:	lea    rdx,[rip+0x20a1f]        # 0x438686
  417c67:	lea    rcx,[rip+0x20bf2]        # 0x438860
  417c6e:	cmove  rdx,rax
  417c72:	call   0x41d1b0
  417c77:	lea    rcx,[rip+0x1f9b1]        # 0x43762f
  417c7e:	call   0x41d1b0
  417c83:	lea    rdx,[rip+0x2023e]        # 0x437ec8
  417c8a:	mov    rcx,rbx
  417c8d:	call   0x42aab0
  417c92:	lea    rdi,[rip+0x201ab]        # 0x437e44
  417c99:	mov    ecx,0x3
  417c9e:	mov    rsi,rbx
  417ca1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417ca3:	je     0x416da8
  417ca9:	mov    rcx,r12
  417cac:	call   0x413480
  417cb1:	jmp    0x416da8
  417cb6:	mov    rcx,r13
  417cb9:	mov    QWORD PTR [rsp+0xa0],r14
  417cc1:	call   0x4019e0
  417cc6:	mov    rsi,QWORD PTR [rsp+0xa0]
  417cce:	mov    QWORD PTR [r12+0x28],rax
  417cd3:	movzx  r8d,BYTE PTR [rsi]
  417cd7:	jmp    0x4169e0
  417cdc:	lea    rdx,[rsp+0x90]
  417ce4:	lea    rcx,[rbx+0xb]
  417ce8:	call   0x41ce20
  417ced:	mov    rax,QWORD PTR [rip+0x2e77c]        # 0x446470
  417cf4:	mov    r15d,DWORD PTR [rax]
  417cf7:	test   r15d,r15d
  417cfa:	jle    0x417d24
  417cfc:	mov    rcx,QWORD PTR [rsp+0x90]
  417d04:	call   0x40e950
  417d09:	lea    rcx,[rip+0x20de0]        # 0x438af0
  417d10:	mov    rdx,rax
  417d13:	call   0x41d1b0
  417d18:	lea    rcx,[rip+0x1f910]        # 0x43762f
  417d1f:	call   0x41d1b0
  417d24:	mov    rcx,QWORD PTR [rsp+0x90]
  417d2c:	lea    r9,[rsp+0x80]
  417d34:	mov    r8d,0x1
  417d3a:	mov    rdx,rcx
  417d3d:	call   0x414180
  417d42:	test   rax,rax
  417d45:	je     0x4177fc
  417d4b:	movsx  r9d,WORD PTR [rax]
  417d4f:	mov    r8d,DWORD PTR [rsp+0x80]
  417d57:	lea    rdx,[rip+0x20ebc]        # 0x438c1a
  417d5e:	mov    rcx,rbx
  417d61:	mov    DWORD PTR [rip+0x14340],r8d        # 0x42c0a8
  417d68:	call   0x42aab0
  417d6d:	jmp    0x416268
  417d72:	lea    rcx,[rbx+0xe]
  417d76:	lea    rdx,[rsp+0xa0]
  417d7e:	call   0x41ce20
  417d83:	lea    rdx,[rsp+0xa8]
  417d8b:	lea    rcx,[rax+0x1]
  417d8f:	call   0x41ce20
  417d94:	mov    rax,QWORD PTR [rip+0x2e6d5]        # 0x446470
  417d9b:	mov    r14d,DWORD PTR [rax]
  417d9e:	test   r14d,r14d
  417da1:	jle    0x417dde
  417da3:	mov    rcx,QWORD PTR [rsp+0xa8]
  417dab:	call   0x40e950
  417db0:	mov    rcx,QWORD PTR [rsp+0xa0]
  417db8:	mov    rsi,rax
  417dbb:	call   0x40e950
  417dc0:	lea    rcx,[rip+0x20d59]        # 0x438b20
  417dc7:	mov    rdx,rax
  417dca:	mov    r8,rsi
  417dcd:	call   0x41d1b0
  417dd2:	lea    rcx,[rip+0x1f856]        # 0x43762f
  417dd9:	call   0x41d1b0
  417dde:	mov    rdx,QWORD PTR [rsp+0xa8]
  417de6:	mov    rcx,QWORD PTR [rsp+0xa0]
  417dee:	lea    r9,[rsp+0x80]
  417df6:	mov    r8d,0x1
  417dfc:	call   0x414180
  417e01:	jmp    0x417d42
  417e06:	mov    rcx,rsi
  417e09:	call   0x4139d0
  417e0e:	jmp    0x417b95
  417e13:	lea    rdx,[rsp+0x88]
  417e1b:	mov    rcx,rax
  417e1e:	call   0x41ce20
  417e23:	mov    rdx,QWORD PTR [rsp+0x88]
  417e2b:	mov    rax,QWORD PTR [rip+0x2e63e]        # 0x446470
  417e32:	cmp    edx,0xffffffff
  417e35:	mov    ecx,edx
  417e37:	mov    DWORD PTR [rsp+0x80],edx
  417e3e:	je     0x4181ce
  417e44:	mov    edi,DWORD PTR [rax]
  417e46:	test   edi,edi
  417e48:	jle    0x417e69
  417e4a:	lea    rcx,[rip+0x20dab]        # 0x438bfc
  417e51:	call   0x41d1b0
  417e56:	lea    rcx,[rip+0x1f7d2]        # 0x43762f
  417e5d:	call   0x41d1b0
  417e62:	mov    ecx,DWORD PTR [rsp+0x80]
  417e69:	call   0x412d70
  417e6e:	jmp    0x417d42
  417e73:	mov    QWORD PTR [r12+0xc8],0xffffffffffffffff
  417e7f:	mov    rcx,r12
  417e82:	call   0x4139d0
  417e87:	mov    rax,QWORD PTR [rip+0x36942]        # 0x44e7d0
  417e8e:	cmp    r12,rax
  417e91:	je     0x41822f
  417e97:	xor    edi,edi
  417e99:	nop    DWORD PTR [rax+0x0]
  417ea0:	mov    ecx,DWORD PTR [rax+0x10]
  417ea3:	lea    edx,[rcx-0x1]
  417ea6:	cmp    edx,0x1
  417ea9:	cmovbe rdi,rax
  417ead:	mov    rax,QWORD PTR [rax+0x58]
  417eb1:	cmp    r12,rax
  417eb4:	jne    0x417ea0
  417eb6:	test   rdi,rdi
  417eb9:	je     0x41822f
  417ebf:	mov    rax,QWORD PTR [rdi+0x78]
  417ec3:	lea    r13,[rsp+0xb0]
  417ecb:	mov    r8d,0x8
  417ed1:	mov    rdx,r13
  417ed4:	lea    rcx,[rax+0x58]
  417ed8:	lea    rax,[rsp+0xa8]
  417ee0:	mov    QWORD PTR [rsp+0xb0],rax
  417ee8:	call   0x40def0
  417eed:	mov    rdx,QWORD PTR [rsp+0xb0]
  417ef5:	test   eax,eax
  417ef7:	mov    QWORD PTR [rsp+0xa8],rdx
  417eff:	jne    0x41830c
  417f05:	mov    rax,QWORD PTR [r12+0x78]
  417f0a:	mov    r8d,0x8
  417f10:	mov    QWORD PTR [rsp+0xb0],rdx
  417f18:	mov    rdx,r13
  417f1b:	lea    rcx,[rax+0x58]
  417f1f:	call   0x40df50
  417f24:	mov    rcx,QWORD PTR [rdi+0x78]
  417f28:	mov    rax,QWORD PTR [r12+0x78]
  417f2d:	mov    rdx,r13
  417f30:	mov    r8d,0x8
  417f36:	add    rcx,0x58
  417f3a:	mov    QWORD PTR [rsp+0xb0],rax
  417f42:	call   0x40df50
  417f47:	mov    edx,DWORD PTR [r12+0x10]
  417f4c:	jmp    0x416d8f
  417f51:	lea    rdx,[rsp+0xb0]
  417f59:	mov    rcx,rax
  417f5c:	call   0x41ce20
  417f61:	mov    rcx,QWORD PTR [rsp+0xb0]
  417f69:	jmp    0x416fee
  417f6e:	lea    rcx,[rbx+0x10]
  417f72:	lea    rdx,[rsp+0xa0]
  417f7a:	call   0x41ce20
  417f7f:	lea    rdx,[rsp+0xa8]
  417f87:	lea    rcx,[rax+0x1]
  417f8b:	call   0x41ce20
  417f90:	mov    rax,QWORD PTR [rip+0x2e4d9]        # 0x446470
  417f97:	mov    r13d,DWORD PTR [rax]
  417f9a:	test   r13d,r13d
  417f9d:	jle    0x417fda
  417f9f:	mov    rcx,QWORD PTR [rsp+0xa8]
  417fa7:	call   0x40e950
  417fac:	mov    rcx,QWORD PTR [rsp+0xa0]
  417fb4:	mov    rsi,rax
  417fb7:	call   0x40e950
  417fbc:	lea    rcx,[rip+0x20b9d]        # 0x438b60
  417fc3:	mov    rdx,rax
  417fc6:	mov    r8,rsi
  417fc9:	call   0x41d1b0
  417fce:	lea    rcx,[rip+0x1f65a]        # 0x43762f
  417fd5:	call   0x41d1b0
  417fda:	mov    rdx,QWORD PTR [rsp+0xa8]
  417fe2:	mov    rcx,QWORD PTR [rsp+0xa0]
  417fea:	lea    r9,[rsp+0x80]
  417ff2:	xor    r8d,r8d
  417ff5:	call   0x414180
  417ffa:	jmp    0x417d42
  417fff:	mov    eax,DWORD PTR [r12+0x10]
  418004:	cmp    eax,0x2
  418007:	je     0x418285
  41800d:	cmp    eax,0x1
  418010:	je     0x41826d
  418016:	mov    rcx,QWORD PTR [r12+0x8]
  41801b:	mov    rdx,rbx
  41801e:	call   0x414b10
  418023:	test   eax,eax
  418025:	jne    0x418260
  41802b:	mov    QWORD PTR [r12+0xc8],0xffffffffffffffff
  418037:	mov    rcx,rbx
  41803a:	call   0x405bc0
  41803f:	jmp    0x417c92
  418044:	mov    rdx,QWORD PTR [rsp+0x40]
  418049:	mov    rcx,QWORD PTR [rip+0x368f0]        # 0x44e940
  418050:	mov    r8d,0x8
  418056:	call   0x40df50
  41805b:	jmp    0x417a22
  418060:	mov    rcx,QWORD PTR [r12+0x8]
  418065:	lea    rdx,[rip+0xffffffffffffb7c4]        # 0x413830
  41806c:	call   0x4100a0
  418071:	mov    QWORD PTR [r12+0xc8],rax
  418079:	test   rax,rax
  41807c:	jne    0x418037
  41807e:	cmp    BYTE PTR [rbx],0x0
  418081:	jne    0x417c92
  418087:	mov    rcx,rbx
  41808a:	call   0x405bd0
  41808f:	jmp    0x417c92
  418094:	mov    r8d,esi
  418097:	mov    DWORD PTR [rsp+0x80],esi
  41809e:	jmp    0x417d57
  4180a3:	mov    rcx,QWORD PTR [rip+0x36856]        # 0x44e900
  4180aa:	lea    rdx,[rsp+0xa0]
  4180b2:	mov    r8d,0x4
  4180b8:	mov    DWORD PTR [rsp+0xa0],0x1
  4180c3:	call   0x40df50
  4180c8:	test   eax,eax
  4180ca:	jne    0x418380
  4180d0:	lea    rsi,[rsp+0xb0]
  4180d8:	mov    rcx,QWORD PTR [rip+0x36801]        # 0x44e8e0
  4180df:	mov    r8d,0x8
  4180e5:	mov    QWORD PTR [rsp+0xb0],0x0
  4180f1:	mov    rdx,rsi
  4180f4:	call   0x40df50
  4180f9:	test   eax,eax
  4180fb:	jne    0x418368
  418101:	mov    rcx,QWORD PTR [rip+0x367d0]        # 0x44e8d8
  418108:	mov    r8d,0x4
  41810e:	mov    rdx,rsi
  418111:	mov    DWORD PTR [rsp+0xb0],0x0
  41811c:	call   0x40df50
  418121:	test   eax,eax
  418123:	jne    0x418350
  418129:	mov    rcx,QWORD PTR [rip+0x36790]        # 0x44e8c0
  418130:	lea    rdx,[rip+0xffffffffffffb639]        # 0x413770
  418137:	call   0x4100a0
  41813c:	test   rax,rax
  41813f:	mov    QWORD PTR [rip+0x3669a],rax        # 0x44e7e0
  418146:	je     0x418344
  41814c:	mov    rcx,QWORD PTR [rip+0x36775]        # 0x44e8c8
  418153:	lea    rdx,[rip+0xffffffffffffb5e6]        # 0x413740
  41815a:	call   0x4100a0
  41815f:	test   rax,rax
  418162:	mov    QWORD PTR [rip+0x3666f],rax        # 0x44e7d8
  418169:	jne    0x41785d
  41816f:	lea    rcx,[rip+0x2092a]        # 0x438aa0
  418176:	call   0x41d140
  41817b:	nop    DWORD PTR [rax+rax*1+0x0]
  418180:	mov    edx,DWORD PTR [rdi]
  418182:	test   edx,edx
  418184:	jle    0x416260
  41818a:	lea    rcx,[rip+0x205b1]        # 0x438742
  418191:	xor    esi,esi
  418193:	call   0x41d1b0
  418198:	lea    rcx,[rip+0x1f490]        # 0x43762f
  41819f:	call   0x41d1b0
  4181a4:	jmp    0x416a57
  4181a9:	mov    rcx,r12
  4181ac:	call   0x414710
  4181b1:	test   eax,eax
  4181b3:	je     0x416da0
  4181b9:	mov    rcx,rbx
  4181bc:	call   0x405bd0
  4181c1:	mov    rcx,r12
  4181c4:	call   0x413480
  4181c9:	jmp    0x416da8
  4181ce:	mov    ebp,DWORD PTR [rax]
  4181d0:	test   ebp,ebp
  4181d2:	jle    0x4181ec
  4181d4:	lea    rcx,[rip+0x209fd]        # 0x438bd8
  4181db:	call   0x41d1b0
  4181e0:	lea    rcx,[rip+0x1f448]        # 0x43762f
  4181e7:	call   0x41d1b0
  4181ec:	mov    rcx,rbx
  4181ef:	mov    DWORD PTR [rip+0x13eaf],0xffffffff        # 0x42c0a8
  4181f9:	call   0x405bc0
  4181fe:	mov    eax,0x1
  418203:	jmp    0x4164f0
  418208:	mov    eax,DWORD PTR [rdi]
  41820a:	test   eax,eax
  41820c:	jle    0x4175a0
  418212:	lea    rcx,[rip+0x2068f]        # 0x4388a8
  418219:	call   0x41d1b0
  41821e:	lea    rcx,[rip+0x1f40a]        # 0x43762f
  418225:	call   0x41d1b0
  41822a:	jmp    0x4175a0
  41822f:	mov    rax,QWORD PTR [r12+0x78]
  418234:	mov    rcx,QWORD PTR [rip+0x366bd]        # 0x44e8f8
  41823b:	lea    rdx,[rsp+0xb0]
  418243:	mov    r8d,0x8
  418249:	mov    QWORD PTR [rsp+0xb0],rax
  418251:	call   0x40df50
  418256:	mov    edx,DWORD PTR [r12+0x10]
  41825b:	jmp    0x416d8f
  418260:	mov    rax,QWORD PTR [r12+0xc8]
  418268:	jmp    0x418079
  41826d:	mov    rdx,rbx
  418270:	mov    rcx,r12
  418273:	call   0x413d80
  418278:	mov    rax,QWORD PTR [r12+0xc8]
  418280:	jmp    0x418079
  418285:	call   0x413400
  41828a:	test   eax,eax
  41828c:	je     0x418298
  41828e:	mov    eax,DWORD PTR [r12+0x10]
  418293:	jmp    0x41800d
  418298:	mov    rax,QWORD PTR [rip+0x2e1d1]        # 0x446470
  41829f:	cmp    DWORD PTR [rax],0x0
  4182a2:	jle    0x4182bc
  4182a4:	lea    rcx,[rip+0x205fd]        # 0x4388a8
  4182ab:	call   0x41d1b0
  4182b0:	lea    rcx,[rip+0x1f378]        # 0x43762f
  4182b7:	call   0x41d1b0
  4182bc:	lea    rdx,[rip+0x1fc65]        # 0x437f28
  4182c3:	mov    rcx,rbx
  4182c6:	call   0x42aab0
  4182cb:	jmp    0x417c92
  4182d0:	call   0x42b5b0
  4182d5:	lea    rcx,[rip+0x206d4]        # 0x4389b0
  4182dc:	call   0x41d140
  4182e1:	lea    rax,[rip+0x206b3]        # 0x43899b
  4182e8:	lea    r9,[rip+0x21551]        # 0x439840
  4182ef:	lea    r8,[rip+0x1f682]        # 0x437978
  4182f6:	lea    rcx,[rip+0x1f696]        # 0x437993
  4182fd:	mov    edx,0x18a4
  418302:	mov    QWORD PTR [rsp+0x20],rax
  418307:	call   0x41d170
  41830c:	lea    r8,[rip+0x2052f]        # 0x438842
  418313:	lea    rcx,[rip+0x1f679]        # 0x437993
  41831a:	mov    edx,0x1855
  41831f:	call   0x41d170
  418324:	lea    r8,[rip+0x205c6]        # 0x4388f1
  41832b:	lea    rcx,[rip+0x1f661]        # 0x437993
  418332:	mov    edx,0xc72
  418337:	call   0x41d170
  41833c:	mov    r8d,esi
  41833f:	jmp    0x417d57
  418344:	lea    rcx,[rip+0x2072d]        # 0x438a78
  41834b:	call   0x41d140
  418350:	lea    r8,[rip+0x206e9]        # 0x438a40
  418357:	lea    rcx,[rip+0x1f635]        # 0x437993
  41835e:	mov    edx,0xd3d
  418363:	call   0x41d170
  418368:	lea    r8,[rip+0x20699]        # 0x438a08
  41836f:	lea    rcx,[rip+0x1f61d]        # 0x437993
  418376:	mov    edx,0xd36
  41837b:	call   0x41d170
  418380:	lea    r8,[rip+0x20659]        # 0x4389e0
  418387:	lea    rcx,[rip+0x1f605]        # 0x437993
  41838e:	mov    edx,0xd2f
  418393:	call   0x41d170
  418398:	nop
  418399:	nop    DWORD PTR [rax+0x0]
  4183a0:	push   r15
  4183a2:	push   r14
  4183a4:	push   r13
  4183a6:	push   r12
  4183a8:	push   rbp
  4183a9:	push   rdi
  4183aa:	push   rsi
  4183ab:	push   rbx
  4183ac:	sub    rsp,0x68
  4183b0:	lea    rsi,[rip+0x209c5]        # 0x438d7c
  4183b7:	mov    rbx,rcx
  4183ba:	mov    ecx,0x9
  4183bf:	mov    rdi,rbx
  4183c2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4183c4:	je     0x418520
  4183ca:	lea    rdi,[rip+0x209b4]        # 0x438d85
  4183d1:	mov    ecx,0x4
  4183d6:	mov    rsi,rbx
  4183d9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4183db:	je     0x418643
  4183e1:	lea    rsi,[rip+0x209ad]        # 0x438d95
  4183e8:	mov    ecx,0x5
  4183ed:	mov    rdi,rbx
  4183f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4183f2:	je     0x418540
  4183f8:	lea    rsi,[rip+0x209cd]        # 0x438dcc
  4183ff:	mov    ecx,0x5
  418404:	mov    rdi,rbx
  418407:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418409:	je     0x418700
  41840f:	lea    rsi,[rip+0x209fe]        # 0x438e14
  418416:	mov    ecx,0x5
  41841b:	mov    rdi,rbx
  41841e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418420:	je     0x4187a0
  418426:	lea    rsi,[rip+0x20a23]        # 0x438e50
  41842d:	mov    ecx,0x5
  418432:	mov    rdi,rbx
  418435:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418437:	je     0x418810
  41843d:	lea    rdi,[rip+0x20a49]        # 0x438e8d
  418444:	mov    ecx,0x4
  418449:	mov    rsi,rbx
  41844c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41844e:	je     0x4185b0
  418454:	lea    rdi,[rip+0x20ad3]        # 0x438f2e
  41845b:	mov    ecx,0x9
  418460:	mov    rsi,rbx
  418463:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418465:	je     0x418900
  41846b:	lea    rsi,[rip+0x20af8]        # 0x438f6a
  418472:	mov    ecx,0x7
  418477:	mov    rdi,rbx
  41847a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41847c:	je     0x4187f0
  418482:	lea    rsi,[rip+0x20ae8]        # 0x438f71
  418489:	mov    ecx,0x7
  41848e:	mov    rdi,rbx
  418491:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418493:	je     0x4187f0
  418499:	lea    rdi,[rip+0x20ad8]        # 0x438f78
  4184a0:	mov    ecx,0x8
  4184a5:	mov    rsi,rbx
  4184a8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4184aa:	je     0x4187f0
  4184b0:	lea    rsi,[rip+0x20aca]        # 0x438f81
  4184b7:	mov    ecx,0xd
  4184bc:	mov    rdi,rbx
  4184bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4184c1:	seta   r8b
  4184c5:	setb   al
  4184c8:	sub    r8d,eax
  4184cb:	xor    eax,eax
  4184cd:	movsx  r8d,r8b
  4184d1:	test   r8d,r8d
  4184d4:	jne    0x41852d
  4184d6:	mov    rax,QWORD PTR [rip+0x2df73]        # 0x446450
  4184dd:	cmp    QWORD PTR [rax],0x0
  4184e1:	je     0x418bce
  4184e7:	mov    rax,QWORD PTR [rip+0x2e172]        # 0x446660
  4184ee:	mov    rax,QWORD PTR [rax]
  4184f1:	mov    rax,QWORD PTR [rax+0x1d0]
  4184f8:	test   rax,rax
  4184fb:	je     0x418502
  4184fd:	call   rax
  4184ff:	mov    r8d,eax
  418502:	lea    rdx,[rip+0x20a85]        # 0x438f8e
  418509:	mov    rcx,rbx
  41850c:	call   0x42aab0
  418511:	mov    eax,0x1
  418516:	jmp    0x41852d
  418518:	nop    DWORD PTR [rax+rax*1+0x0]
  418520:	mov    rcx,rbx
  418523:	call   0x415bc0
  418528:	mov    eax,0x1
  41852d:	add    rsp,0x68
  418531:	pop    rbx
  418532:	pop    rsi
  418533:	pop    rdi
  418534:	pop    rbp
  418535:	pop    r12
  418537:	pop    r13
  418539:	pop    r14
  41853b:	pop    r15
  41853d:	ret    
  41853e:	xchg   ax,ax
  418540:	mov    rax,QWORD PTR [rip+0x2df29]        # 0x446470
  418547:	mov    ebp,DWORD PTR [rax]
  418549:	test   ebp,ebp
  41854b:	jle    0x418565
  41854d:	lea    rcx,[rip+0x2084c]        # 0x438da0
  418554:	call   0x41d1b0
  418559:	lea    rcx,[rip+0x1f0cf]        # 0x43762f
  418560:	call   0x41d1b0
  418565:	mov    rdx,QWORD PTR [rip+0x36264]        # 0x44e7d0
  41856c:	test   rdx,rdx
  41856f:	mov    QWORD PTR [rip+0x36292],rdx        # 0x44e808
  418576:	mov    DWORD PTR [rip+0x36280],0x0        # 0x44e800
  418580:	mov    DWORD PTR [rip+0x3627a],0x0        # 0x44e804
  41858a:	mov    QWORD PTR [rip+0x36263],0x0        # 0x44e7f8
  418595:	je     0x418853
  41859b:	mov    rcx,rbx
  41859e:	call   0x414bb0
  4185a3:	mov    eax,0x1
  4185a8:	jmp    0x41852d
  4185aa:	nop    WORD PTR [rax+rax*1+0x0]
  4185b0:	lea    rdx,[rsp+0x58]
  4185b5:	lea    rcx,[rbx+0x4]
  4185b9:	call   0x41ce20
  4185be:	mov    esi,DWORD PTR [rip+0x13ae4]        # 0x42c0a8
  4185c4:	test   esi,esi
  4185c6:	js     0x418899
  4185cc:	mov    rdi,QWORD PTR [rip+0x2de9d]        # 0x446470
  4185d3:	mov    rax,QWORD PTR [rsp+0x58]
  4185d8:	mov    r9d,DWORD PTR [rdi]
  4185db:	mov    QWORD PTR [rsp+0x48],rax
  4185e0:	test   r9d,r9d
  4185e3:	jle    0x418b76
  4185e9:	lea    rcx,[rip+0x208a2]        # 0x438e92
  4185f0:	call   0x41d1b0
  4185f5:	lea    rcx,[rip+0x1f033]        # 0x43762f
  4185fc:	call   0x41d1b0
  418601:	mov    esi,DWORD PTR [rip+0x13aa1]        # 0x42c0a8
  418607:	test   esi,esi
  418609:	jns    0x418a48
  41860f:	mov    r8d,DWORD PTR [rdi]
  418612:	test   r8d,r8d
  418615:	jle    0x41862f
  418617:	lea    rcx,[rip+0x20888]        # 0x438ea6
  41861e:	call   0x41d1b0
  418623:	lea    rcx,[rip+0x1f005]        # 0x43762f
  41862a:	call   0x41d1b0
  41862f:	mov    r10d,0x55
  418635:	mov    eax,0x1
  41863a:	mov    WORD PTR [rbx],r10w
  41863e:	jmp    0x41852d
  418643:	lea    rcx,[rbx+0x4]
  418647:	lea    rdx,[rsp+0x50]
  41864c:	call   0x41ce20
  418651:	lea    rdx,[rsp+0x58]
  418656:	lea    rcx,[rax+0x1]
  41865a:	call   0x41ce20
  41865f:	mov    rax,QWORD PTR [rip+0x3616a]        # 0x44e7d0
  418666:	mov    rcx,QWORD PTR [rsp+0x58]
  41866b:	mov    rdx,QWORD PTR [rsp+0x50]
  418670:	test   rax,rax
  418673:	jne    0x418689
  418675:	jmp    0x4186b4
  418677:	nop    WORD PTR [rax+rax*1+0x0]
  418680:	mov    rax,QWORD PTR [rax+0x58]
  418684:	test   rax,rax
  418687:	je     0x4186b4
  418689:	cmp    edx,DWORD PTR [rax]
  41868b:	jne    0x418680
  41868d:	cmp    rcx,QWORD PTR [rax+0x8]
  418691:	jne    0x418680
  418693:	mov    r9,QWORD PTR [rax+0x48]
  418697:	mov    r8,QWORD PTR [rax+0x40]
  41869b:	lea    rdx,[rip+0x206e8]        # 0x438d8a
  4186a2:	mov    rcx,rbx
  4186a5:	call   0x42aab0
  4186aa:	mov    eax,0x1
  4186af:	jmp    0x41852d
  4186b4:	mov    rax,QWORD PTR [rip+0x2ddb5]        # 0x446470
  4186bb:	mov    eax,DWORD PTR [rax]
  4186bd:	test   eax,eax
  4186bf:	jle    0x4186e5
  4186c1:	call   0x40e950
  4186c6:	mov    edx,DWORD PTR [rsp+0x50]
  4186ca:	lea    rcx,[rip+0x2013f]        # 0x438810
  4186d1:	mov    r8,rax
  4186d4:	call   0x41d1b0
  4186d9:	lea    rcx,[rip+0x1ef4f]        # 0x43762f
  4186e0:	call   0x41d1b0
  4186e5:	mov    rcx,rbx
  4186e8:	call   0x405bd0
  4186ed:	mov    eax,0x1
  4186f2:	jmp    0x41852d
  4186f7:	nop    WORD PTR [rax+rax*1+0x0]
  418700:	mov    rax,QWORD PTR [rip+0x2dd69]        # 0x446470
  418707:	mov    esi,DWORD PTR [rax]
  418709:	test   esi,esi
  41870b:	jle    0x418725
  41870d:	lea    rcx,[rip+0x206c4]        # 0x438dd8
  418714:	call   0x41d1b0
  418719:	lea    rcx,[rip+0x1ef0f]        # 0x43762f
  418720:	call   0x41d1b0
  418725:	mov    rsi,QWORD PTR [rip+0x360dc]        # 0x44e808
  41872c:	test   rsi,rsi
  41872f:	je     0x418853
  418735:	mov    eax,DWORD PTR [rip+0x360c9]        # 0x44e804
  41873b:	cmp    DWORD PTR [rsi+0x30],eax
  41873e:	ja     0x418a04
  418744:	mov    eax,DWORD PTR [rip+0x360b6]        # 0x44e800
  41874a:	cmp    DWORD PTR [rsi+0xb0],eax
  418750:	ja     0x418b2f
  418756:	mov    rax,QWORD PTR [rip+0x3609b]        # 0x44e7f8
  41875d:	test   rax,rax
  418760:	je     0x418882
  418766:	mov    r9,QWORD PTR [rax+0x10]
  41876a:	test   r9,r9
  41876d:	je     0x418890
  418773:	mov    rax,QWORD PTR [r9+0x8]
  418777:	lea    r8,[rsi+0x8]
  41877b:	mov    rdx,rsi
  41877e:	mov    rcx,rbx
  418781:	mov    QWORD PTR [rip+0x36070],r9        # 0x44e7f8
  418788:	mov    QWORD PTR [rsp+0x20],rax
  41878d:	call   0x414ca0
  418792:	mov    eax,0x1
  418797:	jmp    0x41852d
  41879c:	nop    DWORD PTR [rax+0x0]
  4187a0:	mov    rax,QWORD PTR [rip+0x2dcc9]        # 0x446470
  4187a7:	mov    r11d,DWORD PTR [rax]
  4187aa:	test   r11d,r11d
  4187ad:	jle    0x4187c7
  4187af:	lea    rcx,[rip+0x2066a]        # 0x438e20
  4187b6:	call   0x41d1b0
  4187bb:	lea    rcx,[rip+0x1ee6d]        # 0x43762f
  4187c2:	call   0x41d1b0
  4187c7:	mov    rdx,QWORD PTR [rip+0x35fe2]        # 0x44e7b0
  4187ce:	test   rdx,rdx
  4187d1:	mov    QWORD PTR [rip+0x36018],rdx        # 0x44e7f0
  4187d8:	je     0x418853
  4187da:	mov    rcx,rbx
  4187dd:	call   0x414d50
  4187e2:	mov    eax,0x1
  4187e7:	jmp    0x41852d
  4187ec:	nop    DWORD PTR [rax+0x0]
  4187f0:	mov    rcx,rbx
  4187f3:	call   0x414ab0
  4187f8:	test   eax,eax
  4187fa:	je     0x418865
  4187fc:	mov    eax,0x1
  418801:	jmp    0x41852d
  418806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418810:	mov    rax,QWORD PTR [rip+0x2dc59]        # 0x446470
  418817:	mov    r10d,DWORD PTR [rax]
  41881a:	test   r10d,r10d
  41881d:	jle    0x418837
  41881f:	lea    rcx,[rip+0x20632]        # 0x438e58
  418826:	call   0x41d1b0
  41882b:	lea    rcx,[rip+0x1edfd]        # 0x43762f
  418832:	call   0x41d1b0
  418837:	mov    rax,QWORD PTR [rip+0x35fb2]        # 0x44e7f0
  41883e:	test   rax,rax
  418841:	je     0x418853
  418843:	mov    rdx,QWORD PTR [rax+0x28]
  418847:	test   rdx,rdx
  41884a:	mov    QWORD PTR [rip+0x35f9f],rdx        # 0x44e7f0
  418851:	jne    0x4187da
  418853:	mov    edi,0x6c
  418858:	mov    eax,0x1
  41885d:	mov    WORD PTR [rbx],di
  418860:	jmp    0x41852d
  418865:	mov    rcx,rbx
  418868:	call   0x42a610
  41886d:	lea    edx,[rax+0x1]
  418870:	mov    rcx,rbx
  418873:	call   0x413280
  418878:	mov    eax,0x1
  41887d:	jmp    0x41852d
  418882:	mov    r9,QWORD PTR [rsi+0x68]
  418886:	test   r9,r9
  418889:	jne    0x418773
  41888f:	nop
  418890:	mov    rdx,QWORD PTR [rsi+0x58]
  418894:	jmp    0x41856c
  418899:	mov    r9d,DWORD PTR [rip+0x35ecc]        # 0x44e76c
  4188a0:	test   r9d,r9d
  4188a3:	jne    0x4188c0
  4188a5:	mov    rsi,QWORD PTR [rip+0x137f4]        # 0x42c0a0
  4188ac:	lea    rdi,[rip+0x2066f]        # 0x438f22
  4188b3:	mov    ecx,0x8
  4188b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4188ba:	je     0x41862f
  4188c0:	mov    ecx,DWORD PTR [rsp+0x58]
  4188c4:	call   0x414e90
  4188c9:	mov    QWORD PTR [rsp+0x38],rax
  4188ce:	mov    rcx,QWORD PTR [rsp+0x38]
  4188d3:	xor    edx,edx
  4188d5:	call   0x41c6e0
  4188da:	lea    rdx,[rip+0x20649]        # 0x438f2a
  4188e1:	mov    r8,rax
  4188e4:	mov    rcx,rbx
  4188e7:	call   0x42aab0
  4188ec:	mov    eax,0x1
  4188f1:	jmp    0x41852d
  4188f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418900:	lea    rcx,[rbx+0x9]
  418904:	lea    rdx,[rsp+0x50]
  418909:	call   0x41ce20
  41890e:	lea    rdx,[rsp+0x58]
  418913:	lea    rcx,[rax+0x1]
  418917:	call   0x41ce20
  41891c:	mov    rax,QWORD PTR [rip+0x2db4d]        # 0x446470
  418923:	mov    r8d,DWORD PTR [rax]
  418926:	test   r8d,r8d
  418929:	jle    0x418956
  41892b:	mov    rcx,QWORD PTR [rsp+0x50]
  418930:	xor    edx,edx
  418932:	call   0x41c6e0
  418937:	mov    edx,DWORD PTR [rsp+0x58]
  41893b:	lea    rcx,[rip+0x205f6]        # 0x438f38
  418942:	mov    r8,rax
  418945:	call   0x41d1b0
  41894a:	lea    rcx,[rip+0x1ecde]        # 0x43762f
  418951:	call   0x41d1b0
  418956:	mov    rcx,QWORD PTR [rip+0x35e43]        # 0x44e7a0
  41895d:	mov    r9,QWORD PTR [rip+0x35e44]        # 0x44e7a8
  418964:	mov    r8,QWORD PTR [rip+0x35e1d]        # 0x44e788
  41896b:	mov    rax,QWORD PTR [rip+0x35e1e]        # 0x44e790
  418972:	mov    rdx,rcx
  418975:	sub    rdx,r9
  418978:	cmp    r8,rax
  41897b:	ja     0x4189f7
  41897d:	sub    eax,r8d
  418980:	cdqe   
  418982:	sub    rdx,rax
  418985:	mov    rax,rdx
  418988:	mov    rdx,QWORD PTR [rsp+0x50]
  41898d:	cmp    rax,rdx
  418990:	je     0x418b98
  418996:	jb     0x418b8b
  41899c:	mov    rcx,rdx
  41899f:	add    rcx,QWORD PTR [rip+0x35dda]        # 0x44e780
  4189a6:	mov    r8,QWORD PTR [rip+0x35deb]        # 0x44e798
  4189ad:	cmp    rcx,r8
  4189b0:	jb     0x4189b8
  4189b2:	sub    r8,r9
  4189b5:	sub    rcx,r8
  4189b8:	mov    r8,QWORD PTR [rsp+0x58]
  4189bd:	sub    rax,rdx
  4189c0:	cmp    rax,r8
  4189c3:	jae    0x4189cd
  4189c5:	mov    QWORD PTR [rsp+0x58],rax
  4189ca:	mov    r8,rax
  4189cd:	cmp    r8,0x1ff7
  4189d4:	jbe    0x4189e5
  4189d6:	mov    QWORD PTR [rsp+0x58],0x1ff8
  4189df:	mov    r8d,0x1ff8
  4189e5:	mov    rdx,rbx
  4189e8:	call   0x41cef0
  4189ed:	mov    eax,0x1
  4189f2:	jmp    0x41852d
  4189f7:	sub    rcx,r8
  4189fa:	sub    rax,r9
  4189fd:	add    eax,ecx
  4189ff:	jmp    0x418980
  418a04:	mov    rdx,QWORD PTR [rsi+0x60]
  418a08:	mov    rcx,QWORD PTR [rsi+0x8]
  418a0c:	mov    rdi,QWORD PTR [rdx+rax*8]
  418a10:	call   0x40e950
  418a15:	mov    QWORD PTR [rsp+0x20],rax
  418a1a:	lea    rdx,[rip+0x203e8]        # 0x438e09
  418a21:	mov    r8d,0x41
  418a27:	mov    QWORD PTR [rsp+0x28],rdi
  418a2c:	mov    r9d,DWORD PTR [rsi]
  418a2f:	mov    rcx,rbx
  418a32:	call   0x42aab0
  418a37:	add    DWORD PTR [rip+0x35dc6],0x1        # 0x44e804
  418a3e:	mov    eax,0x1
  418a43:	jmp    0x41852d
  418a48:	mov    ecx,esi
  418a4a:	call   0x412d70
  418a4f:	test   rax,rax
  418a52:	je     0x418ba5
  418a58:	lea    rcx,[rax+0x8]
  418a5c:	mov    r14d,DWORD PTR [rsp+0x48]
  418a61:	mov    r13d,DWORD PTR [rax+0x4]
  418a65:	mov    QWORD PTR [rsp+0x38],0x0
  418a6e:	mov    DWORD PTR [rsp+0x44],0x0
  418a76:	lea    rbp,[rsp+0x50]
  418a7b:	mov    r12,rcx
  418a7e:	jmp    0x418a84
  418a80:	lea    rcx,[rax+0xc]
  418a84:	mov    rdx,r12
  418a87:	lea    r9,[rip+0xffffffffffffa342]        # 0x412dd0
  418a8e:	mov    QWORD PTR [rsp+0x20],rbp
  418a93:	sub    rdx,rcx
  418a96:	mov    r8d,esi
  418a99:	mov    BYTE PTR [rsp+0x50],0x56
  418a9e:	add    edx,r13d
  418aa1:	call   0x413fc0
  418aa6:	test   rax,rax
  418aa9:	je     0x418af3
  418aab:	mov    edx,DWORD PTR [rdi]
  418aad:	mov    r15d,DWORD PTR [rax]
  418ab0:	test   edx,edx
  418ab2:	jle    0x418adb
  418ab4:	lea    rcx,[rip+0x20419]        # 0x438ed4
  418abb:	mov    r8d,r15d
  418abe:	mov    edx,esi
  418ac0:	mov    QWORD PTR [rsp+0x30],rax
  418ac5:	call   0x41d1b0
  418aca:	lea    rcx,[rip+0x1eb5e]        # 0x43762f
  418ad1:	call   0x41d1b0
  418ad6:	mov    rax,QWORD PTR [rsp+0x30]
  418adb:	cmp    r14d,r15d
  418ade:	jne    0x418a80
  418ae0:	mov    rcx,QWORD PTR [rax+0x4]
  418ae4:	mov    DWORD PTR [rsp+0x44],0x1
  418aec:	mov    QWORD PTR [rsp+0x38],rcx
  418af1:	jmp    0x418a80
  418af3:	mov    ebp,DWORD PTR [rsp+0x44]
  418af7:	test   ebp,ebp
  418af9:	jne    0x4188ce
  418aff:	mov    r11d,DWORD PTR [rdi]
  418b02:	test   r11d,r11d
  418b05:	jle    0x41862f
  418b0b:	mov    r8d,DWORD PTR [rsp+0x48]
  418b10:	lea    rcx,[rip+0x203e1]        # 0x438ef8
  418b17:	mov    edx,esi
  418b19:	call   0x41d1b0
  418b1e:	lea    rcx,[rip+0x1eb0a]        # 0x43762f
  418b25:	call   0x41d1b0
  418b2a:	jmp    0x41862f
  418b2f:	mov    rdx,QWORD PTR [rsi+0xc0]
  418b36:	mov    rcx,QWORD PTR [rsi+0x8]
  418b3a:	mov    rdi,QWORD PTR [rdx+rax*8]
  418b3e:	call   0x40e950
  418b43:	mov    QWORD PTR [rsp+0x20],rax
  418b48:	lea    rdx,[rip+0x202ba]        # 0x438e09
  418b4f:	mov    r8d,0x53
  418b55:	mov    QWORD PTR [rsp+0x28],rdi
  418b5a:	mov    r9d,DWORD PTR [rsi]
  418b5d:	mov    rcx,rbx
  418b60:	call   0x42aab0
  418b65:	add    DWORD PTR [rip+0x35c94],0x1        # 0x44e800
  418b6c:	mov    eax,0x1
  418b71:	jmp    0x41852d
  418b76:	mov    ecx,esi
  418b78:	call   0x412d70
  418b7d:	test   rax,rax
  418b80:	jne    0x418a58
  418b86:	jmp    0x41862f
  418b8b:	mov    rcx,rbx
  418b8e:	call   0x405bd0
  418b93:	jmp    0x4187fc
  418b98:	mov    ecx,0x6c
  418b9d:	mov    WORD PTR [rbx],cx
  418ba0:	jmp    0x4187fc
  418ba5:	mov    ecx,DWORD PTR [rdi]
  418ba7:	test   ecx,ecx
  418ba9:	jle    0x41862f
  418baf:	lea    rcx,[rip+0x20306]        # 0x438ebc
  418bb6:	mov    edx,esi
  418bb8:	call   0x41d1b0
  418bbd:	lea    rcx,[rip+0x1ea6b]        # 0x43762f
  418bc4:	call   0x41d1b0
  418bc9:	jmp    0x41862f
  418bce:	mov    edx,0x30
  418bd3:	mov    WORD PTR [rbx],dx
  418bd6:	jmp    0x4187fc
  418bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  418be0:	push   rbx
  418be1:	sub    rsp,0x20
  418be5:	mov    rbx,rcx
  418be8:	mov    rcx,QWORD PTR [rcx+0x50]
  418bec:	test   rcx,rcx
  418bef:	je     0x418c06
  418bf1:	mov    rdx,QWORD PTR [rcx]
  418bf4:	mov    QWORD PTR [rbx+0x50],rdx
  418bf8:	call   0x42a6c8
  418bfd:	mov    rcx,QWORD PTR [rbx+0x50]
  418c01:	test   rcx,rcx
  418c04:	jne    0x418bf1
  418c06:	add    rsp,0x20
  418c0a:	pop    rbx
  418c0b:	ret    
  418c0c:	nop    DWORD PTR [rax+0x0]
  418c10:	push   r15
  418c12:	push   r14
  418c14:	push   r13
  418c16:	push   r12
  418c18:	push   rbp
  418c19:	push   rdi
  418c1a:	push   rsi
  418c1b:	push   rbx
  418c1c:	sub    rsp,0x78
  418c20:	mov    QWORD PTR [rsp+0xc0],rcx
  418c28:	mov    r12,rdx
  418c2b:	call   0x401570
  418c30:	test   eax,eax
  418c32:	jne    0x419015
  418c38:	mov    rax,QWORD PTR [rsp+0xc0]
  418c40:	mov    rdi,QWORD PTR [rax+0x50]
  418c44:	test   rdi,rdi
  418c47:	je     0x41901f
  418c4d:	mov    r14d,DWORD PTR [rip+0x35b18]        # 0x44e76c
  418c54:	test   r14d,r14d
  418c57:	je     0x418f0c
  418c5d:	mov    rbp,QWORD PTR [rip+0x2d80c]        # 0x446470
  418c64:	mov    rax,QWORD PTR [rsp+0xc0]
  418c6c:	mov    r13d,DWORD PTR [rbp+0x0]
  418c70:	add    rax,0x50
  418c74:	mov    QWORD PTR [rsp+0x40],rax
  418c79:	test   r13d,r13d
  418c7c:	jle    0x418cd7
  418c7e:	mov    rcx,QWORD PTR [rdi+0x10]
  418c82:	call   0x40e950
  418c87:	mov    rsi,rax
  418c8a:	mov    rax,QWORD PTR [rsp+0xc0]
  418c92:	mov    ebx,DWORD PTR [rdi+0x8]
  418c95:	lea    rcx,[rsp+0x50]
  418c9a:	mov    rax,QWORD PTR [rax]
  418c9d:	mov    QWORD PTR [rsp+0x50],rax
  418ca2:	mov    rax,QWORD PTR [rsp+0xc0]
  418caa:	mov    eax,DWORD PTR [rax+0x8]
  418cad:	mov    DWORD PTR [rsp+0x58],eax
  418cb1:	call   0x40e230
  418cb6:	lea    rcx,[rip+0x202db]        # 0x438f98
  418cbd:	mov    rdx,rax
  418cc0:	mov    r9,rsi
  418cc3:	mov    r8d,ebx
  418cc6:	call   0x41d1b0
  418ccb:	lea    rcx,[rip+0x1e95d]        # 0x43762f
  418cd2:	call   0x41d1b0
  418cd7:	mov    rcx,QWORD PTR [rsp+0xc0]
  418cdf:	mov    edx,0x1
  418ce4:	mov    DWORD PTR [rsp+0x60],0x0
  418cec:	lea    r13,[rsp+0x60]
  418cf1:	call   0x404290
  418cf6:	mov    QWORD PTR [rsp+0x68],rax
  418cfb:	lea    rax,[rsp+0x50]
  418d00:	mov    QWORD PTR [rsp+0x48],rax
  418d05:	mov    r15,QWORD PTR [rip+0x35ac4]        # 0x44e7d0
  418d0c:	mov    rcx,QWORD PTR [rdi+0x10]
  418d10:	mov    eax,DWORD PTR [rdi+0x8]
  418d13:	test   r15,r15
  418d16:	jne    0x418d2d
  418d18:	jmp    0x418f40
  418d1d:	nop    DWORD PTR [rax]
  418d20:	mov    r15,QWORD PTR [r15+0x58]
  418d24:	test   r15,r15
  418d27:	je     0x418f40
  418d2d:	cmp    DWORD PTR [r15],eax
  418d30:	jne    0x418d20
  418d32:	cmp    rcx,QWORD PTR [r15+0x8]
  418d36:	jne    0x418d20
  418d38:	mov    eax,DWORD PTR [rdi+0x18]
  418d3b:	mov    esi,DWORD PTR [rbp+0x0]
  418d3e:	lea    ebx,[rax+0x1]
  418d41:	test   esi,esi
  418d43:	mov    DWORD PTR [rdi+0x18],ebx
  418d46:	jle    0x418d80
  418d48:	mov    r14,QWORD PTR [r15+0x40]
  418d4c:	mov    rsi,QWORD PTR [r15+0x18]
  418d50:	call   0x40e950
  418d55:	lea    rcx,[rip+0x202a4]        # 0x439000
  418d5c:	mov    r8,rax
  418d5f:	mov    r9d,ebx
  418d62:	mov    QWORD PTR [rsp+0x28],r14
  418d67:	mov    QWORD PTR [rsp+0x20],rsi
  418d6c:	mov    edx,DWORD PTR [r15]
  418d6f:	call   0x41d1b0
  418d74:	lea    rcx,[rip+0x1e8b4]        # 0x43762f
  418d7b:	call   0x41d1b0
  418d80:	mov    ecx,0x8
  418d85:	call   0x412de0
  418d8a:	test   rax,rax
  418d8d:	mov    rsi,rax
  418d90:	je     0x418ff8
  418d96:	mov    eax,DWORD PTR [r15]
  418d99:	mov    BYTE PTR [rsi+0x4],0x0
  418d9d:	xor    r14d,r14d
  418da0:	mov    BYTE PTR [rsi+0x5],0x0
  418da4:	mov    BYTE PTR [rsi+0x6],0x0
  418da8:	xor    ebx,ebx
  418daa:	mov    BYTE PTR [rsi+0x7],0x0
  418dae:	mov    BYTE PTR [rsi],al
  418db0:	movzx  eax,ah
  418db3:	mov    BYTE PTR [rsi+0x1],al
  418db6:	mov    r11d,DWORD PTR [r15+0xb0]
  418dbd:	test   r11d,r11d
  418dc0:	jle    0x418e38
  418dc2:	mov    r10d,DWORD PTR [rbp+0x0]
  418dc6:	test   r10d,r10d
  418dc9:	jle    0x418e07
  418dcb:	mov    rax,QWORD PTR [r15+0xc0]
  418dd2:	mov    rcx,QWORD PTR [r15+0x8]
  418dd6:	mov    r9,QWORD PTR [rax+r14*1]
  418dda:	mov    QWORD PTR [rsp+0x38],r9
  418ddf:	call   0x40e950
  418de4:	mov    r9,QWORD PTR [rsp+0x38]
  418de9:	mov    edx,DWORD PTR [r15]
  418dec:	lea    rcx,[rip+0x2025d]        # 0x439050
  418df3:	mov    r8,rax
  418df6:	call   0x41d1b0
  418dfb:	lea    rcx,[rip+0x1e82d]        # 0x43762f
  418e02:	call   0x41d1b0
  418e07:	mov    rax,QWORD PTR [r15+0xb8]
  418e0e:	mov    r9,rsi
  418e11:	mov    r8,r15
  418e14:	mov    rdx,r12
  418e17:	mov    rcx,r13
  418e1a:	add    ebx,0x1
  418e1d:	mov    rax,QWORD PTR [rax+r14*1]
  418e21:	add    r14,0x8
  418e25:	mov    QWORD PTR [rsp+0x20],rax
  418e2a:	call   0x414440
  418e2f:	cmp    ebx,DWORD PTR [r15+0xb0]
  418e36:	jl     0x418dc2
  418e38:	add    DWORD PTR [rip+0x35939],0x1        # 0x44e778
  418e3f:	add    DWORD PTR [rip+0x3592a],0x1        # 0x44e770
  418e46:	movsxd rax,DWORD PTR [rdi+0x18]
  418e4a:	cmp    rax,QWORD PTR [r15+0x18]
  418e4e:	jb     0x418fc1
  418e54:	mov    r9d,DWORD PTR [rbp+0x0]
  418e58:	test   r9d,r9d
  418e5b:	jle    0x418eb6
  418e5d:	mov    rcx,QWORD PTR [rdi+0x10]
  418e61:	call   0x40e950
  418e66:	mov    rsi,rax
  418e69:	mov    rax,QWORD PTR [rsp+0xc0]
  418e71:	mov    ebx,DWORD PTR [rdi+0x8]
  418e74:	mov    rcx,QWORD PTR [rsp+0x48]
  418e79:	mov    rax,QWORD PTR [rax]
  418e7c:	mov    QWORD PTR [rsp+0x50],rax
  418e81:	mov    rax,QWORD PTR [rsp+0xc0]
  418e89:	mov    eax,DWORD PTR [rax+0x8]
  418e8c:	mov    DWORD PTR [rsp+0x58],eax
  418e90:	call   0x40e230
  418e95:	lea    rcx,[rip+0x201ec]        # 0x439088
  418e9c:	mov    rdx,rax
  418e9f:	mov    r9,rsi
  418ea2:	mov    r8d,ebx
  418ea5:	call   0x41d1b0
  418eaa:	lea    rcx,[rip+0x1e77e]        # 0x43762f
  418eb1:	call   0x41d1b0
  418eb6:	mov    rax,QWORD PTR [rdi]
  418eb9:	mov    rsi,QWORD PTR [rsp+0x40]
  418ebe:	mov    rcx,rdi
  418ec1:	mov    QWORD PTR [rsi],rax
  418ec4:	call   0x42a6c8
  418ec9:	mov    rax,QWORD PTR [r15+0x20]
  418ecd:	mov    rdi,QWORD PTR [rsi]
  418ed0:	test   rax,rax
  418ed3:	je     0x418fc9
  418ed9:	cmp    rax,QWORD PTR [r15+0x40]
  418edd:	ja     0x418fc9
  418ee3:	cmp    QWORD PTR [rip+0x358dd],0x0        # 0x44e7c8
  418eeb:	je     0x419026
  418ef1:	call   0x415270
  418ef6:	mov    eax,0x1
  418efb:	add    rsp,0x78
  418eff:	pop    rbx
  418f00:	pop    rsi
  418f01:	pop    rdi
  418f02:	pop    rbp
  418f03:	pop    r12
  418f05:	pop    r13
  418f07:	pop    r14
  418f09:	pop    r15
  418f0b:	ret    
  418f0c:	mov    rcx,rdi
  418f0f:	nop
  418f10:	mov    rax,QWORD PTR [rcx]
  418f13:	mov    rdi,QWORD PTR [rsp+0xc0]
  418f1b:	mov    QWORD PTR [rdi+0x50],rax
  418f1f:	call   0x42a6c8
  418f24:	mov    rax,QWORD PTR [rsp+0xc0]
  418f2c:	mov    rcx,QWORD PTR [rax+0x50]
  418f30:	test   rcx,rcx
  418f33:	jne    0x418f10
  418f35:	jmp    0x418ef6
  418f37:	nop    WORD PTR [rax+rax*1+0x0]
  418f40:	mov    edx,DWORD PTR [rbp+0x0]
  418f43:	test   edx,edx
  418f45:	jle    0x418f9d
  418f47:	mov    rax,QWORD PTR [rsp+0xc0]
  418f4f:	mov    rcx,QWORD PTR [rsp+0x48]
  418f54:	mov    rax,QWORD PTR [rax]
  418f57:	mov    QWORD PTR [rsp+0x50],rax
  418f5c:	mov    rax,QWORD PTR [rsp+0xc0]
  418f64:	mov    eax,DWORD PTR [rax+0x8]
  418f67:	mov    DWORD PTR [rsp+0x58],eax
  418f6b:	call   0x40e230
  418f70:	mov    rcx,QWORD PTR [rdi+0x10]
  418f74:	mov    rbx,rax
  418f77:	call   0x40e950
  418f7c:	mov    edx,DWORD PTR [rdi+0x8]
  418f7f:	lea    rcx,[rip+0x20052]        # 0x438fd8
  418f86:	mov    r8,rax
  418f89:	mov    r9,rbx
  418f8c:	call   0x41d1b0
  418f91:	lea    rcx,[rip+0x1e697]        # 0x43762f
  418f98:	call   0x41d1b0
  418f9d:	mov    rax,QWORD PTR [rdi]
  418fa0:	mov    rsi,QWORD PTR [rsp+0x40]
  418fa5:	mov    rcx,rdi
  418fa8:	mov    QWORD PTR [rsi],rax
  418fab:	call   0x42a6c8
  418fb0:	mov    rdi,QWORD PTR [rsi]
  418fb3:	test   rdi,rdi
  418fb6:	jne    0x418d05
  418fbc:	jmp    0x418ef6
  418fc1:	mov    QWORD PTR [rsp+0x40],rdi
  418fc6:	mov    rdi,QWORD PTR [rdi]
  418fc9:	mov    rax,QWORD PTR [rip+0x357f8]        # 0x44e7c8
  418fd0:	test   rax,rax
  418fd3:	jne    0x418ef1
  418fd9:	mov    r8d,DWORD PTR [rip+0x357e4]        # 0x44e7c4
  418fe0:	test   r8d,r8d
  418fe3:	jne    0x418ef1
  418fe9:	mov    ecx,DWORD PTR [rip+0x357d1]        # 0x44e7c0
  418fef:	test   ecx,ecx
  418ff1:	je     0x418fb3
  418ff3:	jmp    0x418ef1
  418ff8:	mov    eax,DWORD PTR [rip+0x3576e]        # 0x44e76c
  418ffe:	test   eax,eax
  419000:	je     0x418e46
  419006:	mov    DWORD PTR [rip+0x357b4],0x1        # 0x44e7c4
  419010:	jmp    0x418e46
  419015:	call   0x415550
  41901a:	jmp    0x418c38
  41901f:	xor    eax,eax
  419021:	jmp    0x418efb
  419026:	mov    QWORD PTR [rip+0x3579b],r15        # 0x44e7c8
  41902d:	jmp    0x418ef1
  419032:	nop    DWORD PTR [rax+0x0]
  419036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419040:	push   rdi
  419041:	push   rsi
  419042:	push   rbx
  419043:	sub    rsp,0x60
  419047:	mov    rbx,rdx
  41904a:	call   0x401570
  41904f:	test   eax,eax
  419051:	jne    0x419060
  419053:	xor    eax,eax
  419055:	add    rsp,0x60
  419059:	pop    rbx
  41905a:	pop    rsi
  41905b:	pop    rdi
  41905c:	ret    
  41905d:	nop    DWORD PTR [rax]
  419060:	call   0x415550
  419065:	cmp    QWORD PTR [rip+0x35854],rbx        # 0x44e8c0
  41906c:	je     0x4190b0
  41906e:	cmp    QWORD PTR [rip+0x35853],rbx        # 0x44e8c8
  419075:	jne    0x419053
  419077:	mov    rdx,QWORD PTR [rip+0x2d3f2]        # 0x446470
  41907e:	mov    eax,0x1
  419083:	mov    edx,DWORD PTR [rdx]
  419085:	test   edx,edx
  419087:	jle    0x419055
  419089:	lea    rcx,[rip+0x20110]        # 0x4391a0
  419090:	mov    DWORD PTR [rsp+0x3c],eax
  419094:	call   0x41d1b0
  419099:	lea    rcx,[rip+0x1e58f]        # 0x43762f
  4190a0:	call   0x41d1b0
  4190a5:	mov    eax,DWORD PTR [rsp+0x3c]
  4190a9:	jmp    0x419055
  4190ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4190b0:	mov    rsi,QWORD PTR [rip+0x2d3b9]        # 0x446470
  4190b7:	mov    r10d,DWORD PTR [rsi]
  4190ba:	test   r10d,r10d
  4190bd:	jle    0x4190d7
  4190bf:	lea    rcx,[rip+0x1fff4]        # 0x4390ba
  4190c6:	call   0x41d1b0
  4190cb:	lea    rcx,[rip+0x1e55d]        # 0x43762f
  4190d2:	call   0x41d1b0
  4190d7:	mov    rcx,QWORD PTR [rip+0x357fa]        # 0x44e8d8
  4190de:	lea    rdx,[rsp+0x40]
  4190e3:	mov    r8d,0x4
  4190e9:	lea    rbx,[rsp+0x58]
  4190ee:	call   0x40def0
  4190f3:	mov    rcx,QWORD PTR [rip+0x357e6]        # 0x44e8e0
  4190fa:	lea    rax,[rsp+0x48]
  4190ff:	mov    r8d,0x8
  419105:	mov    rdx,rbx
  419108:	mov    QWORD PTR [rsp+0x58],rax
  41910d:	call   0x40def0
  419112:	mov    rax,QWORD PTR [rsp+0x58]
  419117:	mov    rcx,QWORD PTR [rip+0x357c2]        # 0x44e8e0
  41911e:	mov    r8d,0x8
  419124:	mov    rdx,rbx
  419127:	mov    QWORD PTR [rsp+0x58],0x0
  419130:	mov    QWORD PTR [rsp+0x48],rax
  419135:	call   0x40df50
  41913a:	mov    rcx,QWORD PTR [rip+0x357af]        # 0x44e8f0
  419141:	lea    rax,[rsp+0x50]
  419146:	mov    r8d,0x8
  41914c:	mov    rdx,rbx
  41914f:	mov    QWORD PTR [rsp+0x58],rax
  419154:	call   0x40def0
  419159:	mov    rax,QWORD PTR [rsp+0x58]
  41915e:	mov    rcx,QWORD PTR [rip+0x3578b]        # 0x44e8f0
  419165:	mov    r8d,0x8
  41916b:	mov    rdx,rbx
  41916e:	mov    QWORD PTR [rsp+0x58],0x0
  419177:	mov    QWORD PTR [rsp+0x50],rax
  41917c:	call   0x40df50
  419181:	mov    rcx,QWORD PTR [rip+0x35760]        # 0x44e8e8
  419188:	lea    rdx,[rsp+0x44]
  41918d:	mov    r8d,0x4
  419193:	call   0x40def0
  419198:	mov    rcx,QWORD PTR [rip+0x35749]        # 0x44e8e8
  41919f:	mov    r8d,0x4
  4191a5:	mov    rdx,rbx
  4191a8:	mov    DWORD PTR [rsp+0x58],0x0
  4191b0:	call   0x40df50
  4191b5:	cmp    DWORD PTR [rsi],0x0
  4191b8:	jle    0x419312
  4191be:	mov    rcx,QWORD PTR [rsp+0x50]
  4191c3:	call   0x40e950
  4191c8:	mov    rcx,QWORD PTR [rsp+0x48]
  4191cd:	mov    ebx,DWORD PTR [rsp+0x44]
  4191d1:	mov    rdi,rax
  4191d4:	call   0x40e950
  4191d9:	mov    edx,DWORD PTR [rsp+0x40]
  4191dd:	lea    rcx,[rip+0x1fef4]        # 0x4390d8
  4191e4:	mov    r8,rax
  4191e7:	mov    r9d,ebx
  4191ea:	mov    QWORD PTR [rsp+0x20],rdi
  4191ef:	call   0x41d1b0
  4191f4:	lea    rcx,[rip+0x1e434]        # 0x43762f
  4191fb:	call   0x41d1b0
  419200:	mov    eax,DWORD PTR [rsi]
  419202:	test   eax,eax
  419204:	je     0x41928a
  41920a:	mov    r9d,DWORD PTR [rsp+0x40]
  41920f:	test   r9d,r9d
  419212:	je     0x419230
  419214:	test   eax,eax
  419216:	jle    0x419230
  419218:	lea    rcx,[rip+0x1ff29]        # 0x439148
  41921f:	call   0x41d1b0
  419224:	lea    rcx,[rip+0x1e404]        # 0x43762f
  41922b:	call   0x41d1b0
  419230:	cmp    QWORD PTR [rsp+0x48],0x0
  419236:	je     0x4192d3
  41923c:	mov    r8d,DWORD PTR [rsi]
  41923f:	test   r8d,r8d
  419242:	jle    0x419320
  419248:	lea    rcx,[rip+0x1ff19]        # 0x439168
  41924f:	call   0x41d1b0
  419254:	lea    rcx,[rip+0x1e3d4]        # 0x43762f
  41925b:	call   0x41d1b0
  419260:	cmp    QWORD PTR [rsp+0x48],0x0
  419266:	je     0x4192d3
  419268:	mov    ecx,DWORD PTR [rsi]
  41926a:	test   ecx,ecx
  41926c:	jle    0x419320
  419272:	lea    rcx,[rip+0x1ff09]        # 0x439182
  419279:	call   0x41d1b0
  41927e:	lea    rcx,[rip+0x1e3aa]        # 0x43762f
  419285:	call   0x41d1b0
  41928a:	mov    rdx,QWORD PTR [rsp+0x48]
  41928f:	test   rdx,rdx
  419292:	je     0x4192d3
  419294:	mov    rax,QWORD PTR [rip+0x35535]        # 0x44e7d0
  41929b:	test   rax,rax
  41929e:	jne    0x4192ae
  4192a0:	jmp    0x41932a
  4192a5:	mov    rax,QWORD PTR [rax+0x58]
  4192a9:	test   rax,rax
  4192ac:	je     0x4192ba
  4192ae:	cmp    DWORD PTR [rax+0x10],0x1
  4192b2:	jne    0x4192a5
  4192b4:	cmp    rdx,QWORD PTR [rax+0x78]
  4192b8:	jne    0x4192a5
  4192ba:	mov    QWORD PTR [rip+0x35507],rax        # 0x44e7c8
  4192c1:	call   0x415270
  4192c6:	mov    eax,0x1
  4192cb:	add    rsp,0x60
  4192cf:	pop    rbx
  4192d0:	pop    rsi
  4192d1:	pop    rdi
  4192d2:	ret    
  4192d3:	mov    eax,DWORD PTR [rsp+0x44]
  4192d7:	test   eax,eax
  4192d9:	je     0x4192c1
  4192db:	mov    DWORD PTR [rip+0x354df],eax        # 0x44e7c0
  4192e1:	mov    rax,QWORD PTR [rip+0x354e8]        # 0x44e7d0
  4192e8:	mov    rdx,QWORD PTR [rsp+0x50]
  4192ed:	test   rax,rax
  4192f0:	jne    0x4192fd
  4192f2:	jmp    0x41932e
  4192f4:	mov    rax,QWORD PTR [rax+0x58]
  4192f8:	test   rax,rax
  4192fb:	je     0x419309
  4192fd:	cmp    DWORD PTR [rax+0x10],0x1
  419301:	jne    0x4192f4
  419303:	cmp    rdx,QWORD PTR [rax+0x78]
  419307:	jne    0x4192f4
  419309:	mov    QWORD PTR [rip+0x354a8],rax        # 0x44e7b8
  419310:	jmp    0x4192c1
  419312:	jne    0x419230
  419318:	jmp    0x41928a
  41931d:	nop    DWORD PTR [rax]
  419320:	mov    rdx,QWORD PTR [rsp+0x48]
  419325:	jmp    0x419294
  41932a:	xor    eax,eax
  41932c:	jmp    0x4192ba
  41932e:	xor    eax,eax
  419330:	jmp    0x419309
  419332:	nop    DWORD PTR [rax+0x0]
  419336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419340:	push   r15
  419342:	push   r14
  419344:	push   r13
  419346:	push   r12
  419348:	push   rbp
  419349:	push   rdi
  41934a:	push   rsi
  41934b:	push   rbx
  41934c:	sub    rsp,0xa8
  419353:	mov    eax,DWORD PTR [rip+0x35413]        # 0x44e76c
  419359:	test   eax,eax
  41935b:	jne    0x419371
  41935d:	add    rsp,0xa8
  419364:	pop    rbx
  419365:	pop    rsi
  419366:	pop    rdi
  419367:	pop    rbp
  419368:	pop    r12
  41936a:	pop    r13
  41936c:	pop    r14
  41936e:	pop    r15
  419370:	ret    
  419371:	mov    rbx,rdx
  419374:	mov    edx,0x1
  419379:	mov    rdi,rcx
  41937c:	mov    DWORD PTR [rsp+0x70],0x0
  419384:	xor    esi,esi
  419386:	call   0x404290
  41938b:	mov    r14,QWORD PTR [rip+0x3543e]        # 0x44e7d0
  419392:	mov    QWORD PTR [rsp+0x78],rax
  419397:	test   r14,r14
  41939a:	je     0x419640
  4193a0:	lea    rax,[rsp+0x68]
  4193a5:	mov    rbp,QWORD PTR [rip+0x2d0c4]        # 0x446470
  4193ac:	lea    r13,[rsp+0x70]
  4193b1:	mov    QWORD PTR [rsp+0x38],rax
  4193b6:	lea    rax,[rsp+0x80]
  4193be:	mov    QWORD PTR [rsp+0x40],rax
  4193c3:	lea    rax,[rsp+0x50]
  4193c8:	mov    QWORD PTR [rsp+0x48],rax
  4193cd:	jmp    0x4193dd
  4193cf:	nop
  4193d0:	mov    r14,QWORD PTR [r14+0x58]
  4193d4:	test   r14,r14
  4193d7:	je     0x419640
  4193dd:	cmp    BYTE PTR [r14+0x14],0x0
  4193e2:	je     0x4193d0
  4193e4:	cmp    QWORD PTR [r14+0x8],rbx
  4193e8:	jne    0x4193d0
  4193ea:	cmp    DWORD PTR [r14+0x10],0x2
  4193ef:	je     0x4193d0
  4193f1:	mov    r12d,DWORD PTR [rbp+0x0]
  4193f5:	test   r12d,r12d
  4193f8:	jle    0x419442
  4193fa:	mov    rcx,rbx
  4193fd:	call   0x40e950
  419402:	mov    r12,rax
  419405:	mov    rax,QWORD PTR [rdi]
  419408:	mov    esi,DWORD PTR [r14]
  41940b:	mov    rcx,QWORD PTR [rsp+0x48]
  419410:	mov    QWORD PTR [rsp+0x50],rax
  419415:	mov    eax,DWORD PTR [rdi+0x8]
  419418:	mov    DWORD PTR [rsp+0x58],eax
  41941c:	call   0x40e230
  419421:	lea    rcx,[rip+0x1fda0]        # 0x4391c8
  419428:	mov    r9,r12
  41942b:	mov    r8d,esi
  41942e:	mov    rdx,rax
  419431:	call   0x41d1b0
  419436:	lea    rcx,[rip+0x1e1f2]        # 0x43762f
  41943d:	call   0x41d1b0
  419442:	mov    rdx,QWORD PTR [r14+0x28]
  419446:	test   rdx,rdx
  419449:	je     0x4194f1
  41944f:	mov    esi,DWORD PTR [rsp+0x70]
  419453:	mov    QWORD PTR [rsp+0x68],0x0
  41945c:	test   esi,esi
  41945e:	jne    0x4196c7
  419464:	mov    rax,QWORD PTR [rsp+0x78]
  419469:	test   rax,rax
  41946c:	je     0x4196c7
  419472:	mov    r8,QWORD PTR [rsp+0x38]
  419477:	mov    rcx,QWORD PTR [rsp+0x40]
  41947c:	mov    QWORD PTR [rsp+0x80],rax
  419484:	mov    QWORD PTR [rsp+0x88],0x0
  419490:	mov    QWORD PTR [rsp+0x90],r14
  419498:	call   0x402df0
  41949d:	test   eax,eax
  41949f:	jne    0x4196b0
  4194a5:	mov    r11d,DWORD PTR [rbp+0x0]
  4194a9:	test   r11d,r11d
  4194ac:	jle    0x4194e5
  4194ae:	mov    rcx,QWORD PTR [rsp+0x68]
  4194b3:	call   0x41c550
  4194b8:	mov    rcx,QWORD PTR [r14+0x8]
  4194bc:	mov    rsi,rax
  4194bf:	call   0x40e950
  4194c4:	mov    edx,DWORD PTR [r14]
  4194c7:	lea    rcx,[rip+0x1fd32]        # 0x439200
  4194ce:	mov    r8,rax
  4194d1:	mov    r9,rsi
  4194d4:	call   0x41d1b0
  4194d9:	lea    rcx,[rip+0x1e14f]        # 0x43762f
  4194e0:	call   0x41d1b0
  4194e5:	cmp    QWORD PTR [rsp+0x68],0x0
  4194eb:	je     0x41961b
  4194f1:	mov    rax,QWORD PTR [r14+0x40]
  4194f5:	lea    rsi,[rax+0x1]
  4194f9:	mov    rax,QWORD PTR [r14+0x20]
  4194fd:	mov    QWORD PTR [r14+0x40],rsi
  419501:	cmp    rsi,rax
  419504:	jb     0x419520
  419506:	test   rax,rax
  419509:	je     0x419520
  41950b:	cmp    QWORD PTR [r14+0x18],0x0
  419510:	je     0x4196d0
  419516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419520:	mov    r10d,DWORD PTR [rbp+0x0]
  419524:	test   r10d,r10d
  419527:	jle    0x419553
  419529:	mov    rcx,QWORD PTR [r14+0x8]
  41952d:	call   0x40e950
  419532:	mov    edx,DWORD PTR [r14]
  419535:	lea    rcx,[rip+0x1fcf4]        # 0x439230
  41953c:	mov    r8,rax
  41953f:	mov    r9,rsi
  419542:	call   0x41d1b0
  419547:	lea    rcx,[rip+0x1e0e1]        # 0x43762f
  41954e:	call   0x41d1b0
  419553:	mov    ecx,0x8
  419558:	call   0x412de0
  41955d:	test   rax,rax
  419560:	mov    r12,rax
  419563:	je     0x4196ea
  419569:	mov    eax,DWORD PTR [r14]
  41956c:	mov    BYTE PTR [r12+0x4],0x0
  419572:	xor    r15d,r15d
  419575:	mov    BYTE PTR [r12+0x5],0x0
  41957b:	mov    BYTE PTR [r12+0x6],0x0
  419581:	xor    esi,esi
  419583:	mov    BYTE PTR [r12+0x7],0x0
  419589:	mov    BYTE PTR [r12],al
  41958d:	movzx  eax,ah
  419590:	mov    BYTE PTR [r12+0x1],al
  419595:	mov    r9d,DWORD PTR [r14+0x30]
  419599:	test   r9d,r9d
  41959c:	je     0x41960d
  41959e:	xchg   ax,ax
  4195a0:	mov    r8d,DWORD PTR [rbp+0x0]
  4195a4:	test   r8d,r8d
  4195a7:	jle    0x4195e2
  4195a9:	mov    rax,QWORD PTR [r14+0x60]
  4195ad:	mov    rcx,QWORD PTR [r14+0x8]
  4195b1:	mov    r9,QWORD PTR [rax+r15*1]
  4195b5:	mov    QWORD PTR [rsp+0x30],r9
  4195ba:	call   0x40e950
  4195bf:	mov    r9,QWORD PTR [rsp+0x30]
  4195c4:	mov    edx,DWORD PTR [r14]
  4195c7:	lea    rcx,[rip+0x1fca2]        # 0x439270
  4195ce:	mov    r8,rax
  4195d1:	call   0x41d1b0
  4195d6:	lea    rcx,[rip+0x1e052]        # 0x43762f
  4195dd:	call   0x41d1b0
  4195e2:	mov    rax,QWORD PTR [r14+0x38]
  4195e6:	mov    r9,r12
  4195e9:	mov    r8,r14
  4195ec:	mov    rdx,rbx
  4195ef:	mov    rcx,r13
  4195f2:	add    esi,0x1
  4195f5:	mov    rax,QWORD PTR [rax+r15*1]
  4195f9:	add    r15,0x8
  4195fd:	mov    QWORD PTR [rsp+0x20],rax
  419602:	call   0x414440
  419607:	cmp    esi,DWORD PTR [r14+0x30]
  41960b:	jb     0x4195a0
  41960d:	add    DWORD PTR [rip+0x35164],0x1        # 0x44e778
  419614:	add    DWORD PTR [rip+0x35155],0x1        # 0x44e770
  41961b:	cmp    QWORD PTR [rip+0x351a5],0x0        # 0x44e7c8
  419623:	je     0x419650
  419625:	call   0x415270
  41962a:	mov    r14,QWORD PTR [r14+0x58]
  41962e:	mov    esi,0x1
  419633:	test   r14,r14
  419636:	jne    0x4193dd
  41963c:	nop    DWORD PTR [rax+0x0]
  419640:	mov    eax,esi
  419642:	jmp    0x41935d
  419647:	nop    WORD PTR [rax+rax*1+0x0]
  419650:	mov    ecx,DWORD PTR [rip+0x3516e]        # 0x44e7c4
  419656:	test   ecx,ecx
  419658:	jne    0x419625
  41965a:	mov    edx,DWORD PTR [rip+0x35160]        # 0x44e7c0
  419660:	test   edx,edx
  419662:	jne    0x419625
  419664:	cmp    QWORD PTR [r14+0x18],0x0
  419669:	mov    esi,0x1
  41966e:	je     0x4193d0
  419674:	mov    edx,DWORD PTR [r14]
  419677:	mov    ecx,0x20
  41967c:	mov    r12,QWORD PTR [r14+0x8]
  419680:	mov    DWORD PTR [rsp+0x30],edx
  419684:	call   0x41a6e0
  419689:	mov    rcx,QWORD PTR [rdi+0x50]
  41968d:	mov    edx,DWORD PTR [rsp+0x30]
  419691:	mov    QWORD PTR [rax+0x10],r12
  419695:	mov    DWORD PTR [rax+0x18],0x0
  41969c:	mov    QWORD PTR [rdi+0x50],rax
  4196a0:	mov    QWORD PTR [rax],rcx
  4196a3:	mov    DWORD PTR [rax+0x8],edx
  4196a6:	jmp    0x4193d0
  4196ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4196b0:	lea    rdx,[rip+0x1fb3f]        # 0x4391f6
  4196b7:	mov    r8d,eax
  4196ba:	mov    rcx,r14
  4196bd:	call   0x4131a0
  4196c2:	jmp    0x41961b
  4196c7:	call   0x42b580
  4196cc:	nop    DWORD PTR [rax+0x0]
  4196d0:	cmp    QWORD PTR [rip+0x350f0],0x0        # 0x44e7c8
  4196d8:	jne    0x419520
  4196de:	mov    QWORD PTR [rip+0x350e3],r14        # 0x44e7c8
  4196e5:	jmp    0x419520
  4196ea:	mov    eax,DWORD PTR [rip+0x3507c]        # 0x44e76c
  4196f0:	test   eax,eax
  4196f2:	je     0x41961b
  4196f8:	mov    DWORD PTR [rip+0x350c2],0x1        # 0x44e7c4
  419702:	jmp    0x419625
  419707:	nop    WORD PTR [rax+rax*1+0x0]
  419710:	sub    rsp,0x28
  419714:	test   rdx,rdx
  419717:	mov    rax,r8
  41971a:	je     0x419730
  41971c:	mov    r8d,r9d
  41971f:	mov    rcx,rax
  419722:	call   0x40def0
  419727:	xor    eax,eax
  419729:	add    rsp,0x28
  41972d:	ret    
  41972e:	xchg   ax,ax
  419730:	mov    r8,r9
  419733:	mov    rdx,rax
  419736:	add    rsp,0x28
  41973a:	jmp    0x414380
  41973f:	nop
  419740:	push   r15
  419742:	push   r14
  419744:	push   r13
  419746:	push   r12
  419748:	push   rbp
  419749:	push   rdi
  41974a:	push   rsi
  41974b:	push   rbx
  41974c:	sub    rsp,0x38
  419750:	test   r9,r9
  419753:	mov    r14,rcx
  419756:	mov    r13,r8
  419759:	mov    rbp,r9
  41975c:	je     0x419808
  419762:	cmp    rbp,0xffff
  419769:	mov    eax,0xffff
  41976e:	mov    rsi,r13
  419771:	cmovbe rax,rbp
  419775:	xor    r15d,r15d
  419778:	lea    ecx,[rax+0x1]
  41977b:	mov    QWORD PTR [rsp+0x28],rax
  419780:	mov    ebx,eax
  419782:	movsxd rcx,ecx
  419785:	call   0x41a6e0
  41978a:	mov    r12,rax
  41978d:	mov    rdi,rax
  419790:	sub    rsi,rax
  419793:	lea    rcx,[rsi+rdi*1]
  419797:	mov    r8d,0x1
  41979d:	mov    rdx,rdi
  4197a0:	call   0x40def0
  4197a5:	cmp    BYTE PTR [rdi],0x0
  4197a8:	je     0x419820
  4197aa:	add    r15d,0x1
  4197ae:	add    rdi,0x1
  4197b2:	cmp    bx,r15w
  4197b6:	ja     0x419793
  4197b8:	movzx  edi,WORD PTR [rsp+0x28]
  4197bd:	mov    rdx,QWORD PTR [r14+0x10]
  4197c1:	mov    rcx,QWORD PTR [r14+0x8]
  4197c5:	lea    r9d,[rdi+0xb]
  4197c9:	lea    r8,[rdx+0x48]
  4197cd:	call   0x4137a0
  4197d2:	test   rax,rax
  4197d5:	je     0x41982c
  4197d7:	lea    rcx,[rax+0xb]
  4197db:	mov    QWORD PTR [rax+0x1],r13
  4197df:	mov    r8,rdi
  4197e2:	mov    rdx,r12
  4197e5:	mov    BYTE PTR [rax],0x4d
  4197e8:	mov    WORD PTR [rax+0x9],bx
  4197ec:	call   0x42a668
  4197f1:	sub    rbp,rdi
  4197f4:	mov    rcx,r12
  4197f7:	add    r13,rdi
  4197fa:	call   0x41a7c0
  4197ff:	test   rbp,rbp
  419802:	jne    0x419762
  419808:	xor    eax,eax
  41980a:	add    rsp,0x38
  41980e:	pop    rbx
  41980f:	pop    rsi
  419810:	pop    rdi
  419811:	pop    rbp
  419812:	pop    r12
  419814:	pop    r13
  419816:	pop    r14
  419818:	pop    r15
  41981a:	ret    
  41981b:	nop    DWORD PTR [rax+rax*1+0x0]
  419820:	lea    ebx,[r15+0x1]
  419824:	movzx  ebp,bx
  419827:	mov    rdi,rbp
  41982a:	jmp    0x4197bd
  41982c:	mov    rcx,r12
  41982f:	call   0x41a7c0
  419834:	mov    eax,0x1
  419839:	jmp    0x41980a
  41983b:	nop    DWORD PTR [rax+rax*1+0x0]
  419840:	push   rdi
  419841:	push   rsi
  419842:	push   rbx
  419843:	sub    rsp,0x20
  419847:	mov    r9d,0xd
  41984d:	mov    edi,0x1
  419852:	mov    esi,edx
  419854:	mov    rdx,QWORD PTR [rcx+0x10]
  419858:	mov    rcx,QWORD PTR [rcx+0x8]
  41985c:	lea    r8,[rdx+0x48]
  419860:	call   0x4137a0
  419865:	test   rax,rax
  419868:	mov    rbx,rax
  41986b:	je     0x4198a8
  41986d:	mov    BYTE PTR [rax],0x56
  419870:	mov    DWORD PTR [rax+0x1],esi
  419873:	mov    ecx,esi
  419875:	call   0x414e90
  41987a:	mov    QWORD PTR [rbx+0x5],rax
  41987e:	mov    rax,QWORD PTR [rip+0x2cbeb]        # 0x446470
  419885:	xor    dil,dil
  419888:	mov    eax,DWORD PTR [rax]
  41988a:	test   eax,eax
  41988c:	jle    0x4198a8
  41988e:	lea    rcx,[rip+0x1fa09]        # 0x43929e
  419895:	mov    edx,esi
  419897:	call   0x41d1b0
  41989c:	lea    rcx,[rip+0x1dd8c]        # 0x43762f
  4198a3:	call   0x41d1b0
  4198a8:	mov    eax,edi
  4198aa:	add    rsp,0x20
  4198ae:	pop    rbx
  4198af:	pop    rsi
  4198b0:	pop    rdi
  4198b1:	ret    
  4198b2:	nop    DWORD PTR [rax+0x0]
  4198b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4198c0:	push   rdi
  4198c1:	push   rsi
  4198c2:	push   rbx
  4198c3:	sub    rsp,0x30
  4198c7:	mov    ebx,ecx
  4198c9:	mov    rdi,rdx
  4198cc:	call   0x412d70
  4198d1:	test   rax,rax
  4198d4:	mov    rsi,rax
  4198d7:	je     0x419900
  4198d9:	mov    edx,ebx
  4198db:	mov    rcx,rax
  4198de:	call   0x414100
  4198e3:	test   rax,rax
  4198e6:	je     0x419940
  4198e8:	mov    rdx,rax
  4198eb:	mov    rcx,rdi
  4198ee:	call   0x404880
  4198f3:	xor    eax,eax
  4198f5:	add    rsp,0x30
  4198f9:	pop    rbx
  4198fa:	pop    rsi
  4198fb:	pop    rdi
  4198fc:	ret    
  4198fd:	nop    DWORD PTR [rax]
  419900:	mov    rdx,QWORD PTR [rip+0x2cb69]        # 0x446470
  419907:	mov    eax,0x1
  41990c:	mov    edx,DWORD PTR [rdx]
  41990e:	test   edx,edx
  419910:	jle    0x4198f5
  419912:	lea    rcx,[rip+0x1f5a3]        # 0x438ebc
  419919:	mov    edx,ebx
  41991b:	mov    DWORD PTR [rsp+0x2c],eax
  41991f:	call   0x41d1b0
  419924:	lea    rcx,[rip+0x1dd04]        # 0x43762f
  41992b:	call   0x41d1b0
  419930:	mov    eax,DWORD PTR [rsp+0x2c]
  419934:	add    rsp,0x30
  419938:	pop    rbx
  419939:	pop    rsi
  41993a:	pop    rdi
  41993b:	ret    
  41993c:	nop    DWORD PTR [rax+0x0]
  419940:	xor    edx,edx
  419942:	mov    rcx,rdi
  419945:	call   0x404880
  41994a:	mov    rax,QWORD PTR [rip+0x34e7f]        # 0x44e7d0
  419951:	movsx  edx,WORD PTR [rsi]
  419954:	test   rax,rax
  419957:	jne    0x419969
  419959:	jmp    0x419980
  41995b:	nop    DWORD PTR [rax+rax*1+0x0]
  419960:	mov    rax,QWORD PTR [rax+0x58]
  419964:	test   rax,rax
  419967:	je     0x4198f5
  419969:	cmp    DWORD PTR [rax],edx
  41996b:	jne    0x419960
  41996d:	mov    rdx,QWORD PTR [rax+0x8]
  419971:	mov    rcx,rdi
  419974:	call   0x404af0
  419979:	xor    eax,eax
  41997b:	jmp    0x4198f5
  419980:	xor    eax,eax
  419982:	jmp    0x4198f5
  419987:	nop    WORD PTR [rax+rax*1+0x0]
  419990:	push   r15
  419992:	push   r14
  419994:	push   r13
  419996:	push   r12
  419998:	push   rbp
  419999:	push   rdi
  41999a:	push   rsi
  41999b:	push   rbx
  41999c:	sub    rsp,0x58
  4199a0:	mov    rbp,QWORD PTR [rip+0x2cac9]        # 0x446470
  4199a7:	mov    QWORD PTR [rsp+0xb0],r8
  4199af:	mov    esi,ecx
  4199b1:	mov    rdi,rdx
  4199b4:	mov    QWORD PTR [rsp+0xb8],r9
  4199bc:	mov    r8d,DWORD PTR [rbp+0x0]
  4199c0:	test   r8d,r8d
  4199c3:	jle    0x419ac2
  4199c9:	lea    rcx,[rip+0x1f8e3]        # 0x4392b3
  4199d0:	call   0x41d1b0
  4199d5:	lea    rcx,[rip+0x1dc53]        # 0x43762f
  4199dc:	call   0x41d1b0
  4199e1:	mov    ecx,esi
  4199e3:	call   0x412d70
  4199e8:	test   rax,rax
  4199eb:	je     0x419b1d
  4199f1:	lea    rcx,[rax+0x8]
  4199f5:	mov    r14d,DWORD PTR [rax+0x4]
  4199f9:	lea    r12,[rsp+0x4f]
  4199fe:	mov    QWORD PTR [rsp+0x38],rcx
  419a03:	jmp    0x419a56
  419a05:	mov    edx,DWORD PTR [rbp+0x0]
  419a08:	mov    r13,QWORD PTR [rax]
  419a0b:	lea    r15,[rax+0xa]
  419a0f:	movzx  ebx,WORD PTR [rax+0x8]
  419a13:	test   edx,edx
  419a15:	jle    0x419a40
  419a17:	mov    rcx,r13
  419a1a:	call   0x40e950
  419a1f:	lea    rcx,[rip+0x1f8a2]        # 0x4392c8
  419a26:	mov    r9,rax
  419a29:	movzx  r8d,bx
  419a2d:	mov    edx,esi
  419a2f:	call   0x41d1b0
  419a34:	lea    rcx,[rip+0x1dbf4]        # 0x43762f
  419a3b:	call   0x41d1b0
  419a40:	cmp    r13,rdi
  419a43:	ja     0x419a52
  419a45:	lea    rax,[rbx+r13*1]
  419a49:	cmp    rdi,rax
  419a4c:	jb     0x419ae0
  419a52:	lea    rcx,[r15+rbx*1]
  419a56:	mov    rdx,QWORD PTR [rsp+0x38]
  419a5b:	lea    r9,[rip+0xffffffffffff936e]        # 0x412dd0
  419a62:	mov    QWORD PTR [rsp+0x20],r12
  419a67:	mov    r8d,esi
  419a6a:	mov    BYTE PTR [rsp+0x4f],0x4d
  419a6f:	sub    rdx,rcx
  419a72:	add    edx,r14d
  419a75:	call   0x413fc0
  419a7a:	test   rax,rax
  419a7d:	jne    0x419a05
  419a7f:	mov    eax,DWORD PTR [rbp+0x0]
  419a82:	test   eax,eax
  419a84:	jle    0x419aa0
  419a86:	lea    rcx,[rip+0x1f863]        # 0x4392f0
  419a8d:	mov    edx,esi
  419a8f:	call   0x41d1b0
  419a94:	lea    rcx,[rip+0x1db94]        # 0x43762f
  419a9b:	call   0x41d1b0
  419aa0:	mov    rax,QWORD PTR [rsp+0xc0]
  419aa8:	mov    QWORD PTR [rax],0x0
  419aaf:	xor    eax,eax
  419ab1:	add    rsp,0x58
  419ab5:	pop    rbx
  419ab6:	pop    rsi
  419ab7:	pop    rdi
  419ab8:	pop    rbp
  419ab9:	pop    r12
  419abb:	pop    r13
  419abd:	pop    r14
  419abf:	pop    r15
  419ac1:	ret    
  419ac2:	call   0x412d70
  419ac7:	test   rax,rax
  419aca:	jne    0x4199f1
  419ad0:	mov    eax,0x1
  419ad5:	jmp    0x419ab1
  419ad7:	nop    WORD PTR [rax+rax*1+0x0]
  419ae0:	sub    rax,rdi
  419ae3:	cmp    rax,QWORD PTR [rsp+0xb8]
  419aeb:	mov    rcx,QWORD PTR [rsp+0xb0]
  419af3:	cmova  rax,QWORD PTR [rsp+0xb8]
  419afc:	sub    rdi,r13
  419aff:	lea    rdx,[r15+rdi*1]
  419b03:	mov    r8,rax
  419b06:	mov    rbx,rax
  419b09:	call   0x42a668
  419b0e:	mov    rax,QWORD PTR [rsp+0xc0]
  419b16:	mov    QWORD PTR [rax],rbx
  419b19:	xor    eax,eax
  419b1b:	jmp    0x419ab1
  419b1d:	mov    ecx,DWORD PTR [rbp+0x0]
  419b20:	test   ecx,ecx
  419b22:	jle    0x419ad0
  419b24:	lea    rcx,[rip+0x1f391]        # 0x438ebc
  419b2b:	mov    edx,esi
  419b2d:	call   0x41d1b0
  419b32:	lea    rcx,[rip+0x1daf6]        # 0x43762f
  419b39:	call   0x41d1b0
  419b3e:	jmp    0x419ad0
  419b40:	push   r12
  419b42:	push   rbp
  419b43:	push   rdi
  419b44:	push   rsi
  419b45:	push   rbx
  419b46:	sub    rsp,0x40
  419b4a:	mov    rdi,QWORD PTR [rip+0x2c91f]        # 0x446470
  419b51:	mov    ebx,ecx
  419b53:	mov    r12,rdx
  419b56:	mov    rbp,r8
  419b59:	mov    rsi,r9
  419b5c:	mov    ecx,DWORD PTR [rdi]
  419b5e:	test   ecx,ecx
  419b60:	jle    0x419c70
  419b66:	lea    rcx,[rip+0x1f7bb]        # 0x439328
  419b6d:	call   0x41d1b0
  419b72:	lea    rcx,[rip+0x1dab6]        # 0x43762f
  419b79:	call   0x41d1b0
  419b7e:	mov    ecx,ebx
  419b80:	call   0x412d70
  419b85:	test   rax,rax
  419b88:	je     0x419c40
  419b8e:	mov    edx,DWORD PTR [rax+0x4]
  419b91:	lea    rcx,[rsp+0x3f]
  419b96:	add    rax,0x8
  419b9a:	lea    r9,[rip+0xffffffffffff922f]        # 0x412dd0
  419ba1:	mov    r8d,ebx
  419ba4:	mov    BYTE PTR [rsp+0x3f],0x53
  419ba9:	mov    QWORD PTR [rsp+0x20],rcx
  419bae:	mov    rcx,rax
  419bb1:	call   0x413fc0
  419bb6:	test   rax,rax
  419bb9:	je     0x419c00
  419bbb:	movzx  edx,WORD PTR [rax]
  419bbe:	cmp    rdx,r12
  419bc1:	jbe    0x419c20
  419bc3:	lea    r8,[r12+rsi*1]
  419bc7:	mov    rcx,rdx
  419bca:	sub    rcx,r12
  419bcd:	cmp    rdx,r8
  419bd0:	lea    rdx,[rax+0x2]
  419bd4:	cmovb  rsi,rcx
  419bd8:	mov    rcx,rbp
  419bdb:	mov    r8,rsi
  419bde:	call   0x42a668
  419be3:	mov    rax,QWORD PTR [rsp+0x90]
  419beb:	mov    QWORD PTR [rax],rsi
  419bee:	xor    eax,eax
  419bf0:	add    rsp,0x40
  419bf4:	pop    rbx
  419bf5:	pop    rsi
  419bf6:	pop    rdi
  419bf7:	pop    rbp
  419bf8:	pop    r12
  419bfa:	ret    
  419bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  419c00:	mov    eax,DWORD PTR [rdi]
  419c02:	test   eax,eax
  419c04:	jle    0x419c20
  419c06:	lea    rcx,[rip+0x1f733]        # 0x439340
  419c0d:	mov    edx,ebx
  419c0f:	call   0x41d1b0
  419c14:	lea    rcx,[rip+0x1da14]        # 0x43762f
  419c1b:	call   0x41d1b0
  419c20:	mov    rax,QWORD PTR [rsp+0x90]
  419c28:	mov    QWORD PTR [rax],0x0
  419c2f:	xor    eax,eax
  419c31:	add    rsp,0x40
  419c35:	pop    rbx
  419c36:	pop    rsi
  419c37:	pop    rdi
  419c38:	pop    rbp
  419c39:	pop    r12
  419c3b:	ret    
  419c3c:	nop    DWORD PTR [rax+0x0]
  419c40:	mov    edx,DWORD PTR [rdi]
  419c42:	test   edx,edx
  419c44:	jle    0x419c60
  419c46:	lea    rcx,[rip+0x1f26f]        # 0x438ebc
  419c4d:	mov    edx,ebx
  419c4f:	call   0x41d1b0
  419c54:	lea    rcx,[rip+0x1d9d4]        # 0x43762f
  419c5b:	call   0x41d1b0
  419c60:	mov    eax,0x1
  419c65:	add    rsp,0x40
  419c69:	pop    rbx
  419c6a:	pop    rsi
  419c6b:	pop    rdi
  419c6c:	pop    rbp
  419c6d:	pop    r12
  419c6f:	ret    
  419c70:	mov    ecx,ebx
  419c72:	call   0x412d70
  419c77:	test   rax,rax
  419c7a:	jne    0x419b8e
  419c80:	mov    eax,0x1
  419c85:	jmp    0x419c65
  419c87:	nop    WORD PTR [rax+rax*1+0x0]
  419c90:	push   rbp
  419c91:	push   rdi
  419c92:	push   rsi
  419c93:	push   rbx
  419c94:	sub    rsp,0x38
  419c98:	mov    rbp,QWORD PTR [rip+0x2c7d1]        # 0x446470
  419c9f:	mov    rsi,rdx
  419ca2:	mov    edi,ecx
  419ca4:	mov    edx,DWORD PTR [rbp+0x0]
  419ca7:	test   edx,edx
  419ca9:	jle    0x419d60
  419caf:	lea    rcx,[rip+0x1f6b1]        # 0x439367
  419cb6:	call   0x41d1b0
  419cbb:	lea    rcx,[rip+0x1d96d]        # 0x43762f
  419cc2:	call   0x41d1b0
  419cc7:	mov    ecx,edi
  419cc9:	call   0x412d70
  419cce:	test   rax,rax
  419cd1:	mov    rbx,rax
  419cd4:	je     0x419d30
  419cd6:	lea    rdx,[rip+0x1f69f]        # 0x43937c
  419cdd:	mov    rcx,rsi
  419ce0:	mov    r8d,0x12
  419ce6:	call   0x41afc0
  419ceb:	mov    edx,DWORD PTR [rbx+0x4]
  419cee:	lea    rcx,[rbx+0x8]
  419cf2:	lea    r9,[rip+0xffffffffffffa5e7]        # 0x4142e0
  419cf9:	mov    r8d,edi
  419cfc:	mov    QWORD PTR [rsp+0x20],rsi
  419d01:	call   0x413fc0
  419d06:	lea    rdx,[rip+0x1f682]        # 0x43938f
  419d0d:	mov    r8d,0x14
  419d13:	mov    rcx,rsi
  419d16:	call   0x41afc0
  419d1b:	xor    eax,eax
  419d1d:	add    rsp,0x38
  419d21:	pop    rbx
  419d22:	pop    rsi
  419d23:	pop    rdi
  419d24:	pop    rbp
  419d25:	ret    
  419d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d30:	mov    eax,DWORD PTR [rbp+0x0]
  419d33:	test   eax,eax
  419d35:	jle    0x419d51
  419d37:	lea    rcx,[rip+0x1f17e]        # 0x438ebc
  419d3e:	mov    edx,edi
  419d40:	call   0x41d1b0
  419d45:	lea    rcx,[rip+0x1d8e3]        # 0x43762f
  419d4c:	call   0x41d1b0
  419d51:	mov    eax,0x1
  419d56:	add    rsp,0x38
  419d5a:	pop    rbx
  419d5b:	pop    rsi
  419d5c:	pop    rdi
  419d5d:	pop    rbp
  419d5e:	ret    
  419d5f:	nop
  419d60:	call   0x412d70
  419d65:	test   rax,rax
  419d68:	mov    rbx,rax
  419d6b:	jne    0x419cd6
  419d71:	mov    eax,0x1
  419d76:	jmp    0x419d56
  419d78:	nop    DWORD PTR [rax+rax*1+0x0]
  419d80:	sub    rsp,0x38
  419d84:	mov    rcx,QWORD PTR [rip+0x34b25]        # 0x44e8b0
  419d8b:	mov    r8d,0x8
  419d91:	lea    rdx,[rsp+0x28]
  419d96:	mov    QWORD PTR [rsp+0x28],0x0
  419d9f:	call   0x40df50
  419da4:	nop
  419da5:	add    rsp,0x38
  419da9:	ret    
  419daa:	nop    WORD PTR [rax+rax*1+0x0]
  419db0:	push   r15
  419db2:	push   r14
  419db4:	push   r13
  419db6:	push   r12
  419db8:	push   rbp
  419db9:	push   rdi
  419dba:	push   rsi
  419dbb:	push   rbx
  419dbc:	sub    rsp,0x88
  419dc3:	mov    rdi,QWORD PTR [rip+0x2c6a6]        # 0x446470
  419dca:	mov    QWORD PTR [rsp+0xd0],rcx
  419dd2:	mov    rsi,rdx
  419dd5:	mov    QWORD PTR [rsp+0xe0],r8
  419ddd:	lea    rbp,[rsp+0x50]
  419de2:	lea    rbx,[rsp+0x70]
  419de7:	lea    r13,[rsp+0x58]
  419dec:	lea    r12,[rsp+0x60]
  419df1:	lea    r14,[rsp+0x68]
  419df6:	lea    r15,[rsp+0x48]
  419dfb:	jmp    0x419e4b
  419dfd:	nop    DWORD PTR [rax]
  419e00:	mov    rcx,QWORD PTR [rip+0x34aa9]        # 0x44e8b0
  419e07:	mov    r8d,0x8
  419e0d:	mov    rdx,rbx
  419e10:	mov    QWORD PTR [rsp+0x70],r15
  419e15:	call   0x40def0
  419e1a:	mov    rcx,QWORD PTR [rsp+0x70]
  419e1f:	test   eax,eax
  419e21:	mov    QWORD PTR [rsp+0x48],rcx
  419e26:	jne    0x419ff0
  419e2c:	test   rcx,rcx
  419e2f:	je     0x41a030
  419e35:	mov    r8d,0x10
  419e3b:	mov    rdx,rbx
  419e3e:	call   0x40def0
  419e43:	test   eax,eax
  419e45:	je     0x41a050
  419e4b:	mov    r8d,DWORD PTR [rdi]
  419e4e:	test   r8d,r8d
  419e51:	jle    0x419e6b
  419e53:	lea    rcx,[rip+0x1f549]        # 0x4393a3
  419e5a:	call   0x41d1b0
  419e5f:	lea    rcx,[rip+0x1d7c9]        # 0x43762f
  419e66:	call   0x41d1b0
  419e6b:	mov    rcx,QWORD PTR [rip+0x34a16]        # 0x44e888
  419e72:	mov    rdx,rbx
  419e75:	mov    r8d,0x8
  419e7b:	mov    QWORD PTR [rsp+0x70],rbp
  419e80:	call   0x40def0
  419e85:	mov    rdx,QWORD PTR [rsp+0x70]
  419e8a:	test   eax,eax
  419e8c:	mov    QWORD PTR [rsp+0x50],rdx
  419e91:	jne    0x41a2f2
  419e97:	mov    rcx,QWORD PTR [rip+0x349f2]        # 0x44e890
  419e9e:	mov    rdx,rbx
  419ea1:	mov    r8d,0x8
  419ea7:	mov    QWORD PTR [rsp+0x70],r13
  419eac:	call   0x40def0
  419eb1:	mov    rdx,QWORD PTR [rsp+0x70]
  419eb6:	test   eax,eax
  419eb8:	mov    QWORD PTR [rsp+0x58],rdx
  419ebd:	jne    0x41a2da
  419ec3:	mov    rcx,QWORD PTR [rip+0x349ce]        # 0x44e898
  419eca:	mov    rdx,rbx
  419ecd:	mov    r8d,0x8
  419ed3:	mov    QWORD PTR [rsp+0x70],r12
  419ed8:	call   0x40def0
  419edd:	mov    rdx,QWORD PTR [rsp+0x70]
  419ee2:	test   eax,eax
  419ee4:	mov    QWORD PTR [rsp+0x60],rdx
  419ee9:	jne    0x41a2c2
  419eef:	mov    rcx,QWORD PTR [rip+0x349aa]        # 0x44e8a0
  419ef6:	mov    rdx,rbx
  419ef9:	mov    r8d,0x8
  419eff:	mov    QWORD PTR [rsp+0x70],r14
  419f04:	call   0x40def0
  419f09:	mov    rdx,QWORD PTR [rsp+0x70]
  419f0e:	test   eax,eax
  419f10:	mov    QWORD PTR [rsp+0x68],rdx
  419f15:	jne    0x41a2aa
  419f1b:	cmp    QWORD PTR [rsp+0x50],rsi
  419f20:	ja     0x419f2d
  419f22:	cmp    rsi,QWORD PTR [rsp+0x58]
  419f27:	jb     0x41a0d7
  419f2d:	cmp    rsi,QWORD PTR [rsp+0x60]
  419f32:	jb     0x419e00
  419f38:	cmp    rsi,rdx
  419f3b:	jae    0x419e00
  419f41:	mov    rbx,QWORD PTR [rip+0x34888]        # 0x44e7d0
  419f48:	test   rbx,rbx
  419f4b:	jne    0x419f5f
  419f4d:	jmp    0x41a0c4
  419f52:	mov    rbx,QWORD PTR [rbx+0x58]
  419f56:	test   rbx,rbx
  419f59:	je     0x41a0c4
  419f5f:	cmp    DWORD PTR [rbx+0x10],0x1
  419f63:	jne    0x419f52
  419f65:	cmp    rsi,QWORD PTR [rbx+0xa0]
  419f6c:	jb     0x419f52
  419f6e:	mov    rcx,QWORD PTR [rbx+0xa8]
  419f75:	cmp    rsi,rcx
  419f78:	jae    0x419f52
  419f7a:	mov    eax,DWORD PTR [rdi]
  419f7c:	test   eax,eax
  419f7e:	jg     0x41a24c
  419f84:	cmp    QWORD PTR [rsp+0xe0],0x0
  419f8d:	je     0x41a30a
  419f93:	mov    edx,DWORD PTR [rbx]
  419f95:	mov    rdi,QWORD PTR [rsp+0xe0]
  419f9d:	mov    DWORD PTR [rdi],edx
  419f9f:	mov    rdx,QWORD PTR [rbx+0x8]
  419fa3:	mov    QWORD PTR [rdi+0x8],rdx
  419fa7:	mov    rdx,QWORD PTR [rbx+0x80]
  419fae:	mov    QWORD PTR [rdi+0x10],rdx
  419fb2:	mov    rdx,QWORD PTR [rbx+0x88]
  419fb9:	mov    QWORD PTR [rdi+0x18],rdx
  419fbd:	test   eax,eax
  419fbf:	mov    esi,0x1
  419fc4:	jle    0x41a012
  419fc6:	mov    rcx,QWORD PTR [rbx+0x80]
  419fcd:	call   0x40e950
  419fd2:	lea    rcx,[rip+0x1f5e7]        # 0x4395c0
  419fd9:	mov    rdx,rax
  419fdc:	call   0x41d1b0
  419fe1:	lea    rcx,[rip+0x1d647]        # 0x43762f
  419fe8:	call   0x41d1b0
  419fed:	jmp    0x41a012
  419fef:	nop
  419ff0:	mov    ecx,DWORD PTR [rdi]
  419ff2:	test   ecx,ecx
  419ff4:	jle    0x41a010
  419ff6:	lea    rcx,[rip+0x1f4fb]        # 0x4394f8
  419ffd:	call   0x41d1b0
  41a002:	lea    rcx,[rip+0x1d626]        # 0x43762f
  41a009:	call   0x41d1b0
  41a00e:	xchg   ax,ax
  41a010:	xor    esi,esi
  41a012:	mov    eax,esi
  41a014:	add    rsp,0x88
  41a01b:	pop    rbx
  41a01c:	pop    rsi
  41a01d:	pop    rdi
  41a01e:	pop    rbp
  41a01f:	pop    r12
  41a021:	pop    r13
  41a023:	pop    r14
  41a025:	pop    r15
  41a027:	ret    
  41a028:	nop    DWORD PTR [rax+rax*1+0x0]
  41a030:	mov    edx,DWORD PTR [rdi]
  41a032:	test   edx,edx
  41a034:	jle    0x41a010
  41a036:	lea    rcx,[rip+0x1f503]        # 0x439540
  41a03d:	call   0x41d1b0
  41a042:	lea    rcx,[rip+0x1d5e6]        # 0x43762f
  41a049:	call   0x41d1b0
  41a04e:	jmp    0x41a010
  41a050:	mov    rax,QWORD PTR [rsp+0xd0]
  41a058:	cmp    QWORD PTR [rsp+0x78],rax
  41a05d:	je     0x41a07f
  41a05f:	mov    eax,DWORD PTR [rdi]
  41a061:	test   eax,eax
  41a063:	jle    0x41a010
  41a065:	lea    rcx,[rip+0x1f514]        # 0x439580
  41a06c:	call   0x41d1b0
  41a071:	lea    rcx,[rip+0x1d5b7]        # 0x43762f
  41a078:	call   0x41d1b0
  41a07d:	jmp    0x41a010
  41a07f:	mov    rbx,QWORD PTR [rip+0x3474a]        # 0x44e7d0
  41a086:	mov    rcx,QWORD PTR [rsp+0x70]
  41a08b:	test   rbx,rbx
  41a08e:	jne    0x41a0a2
  41a090:	jmp    0x41a233
  41a095:	mov    rbx,QWORD PTR [rbx+0x58]
  41a099:	test   rbx,rbx
  41a09c:	je     0x41a233
  41a0a2:	cmp    DWORD PTR [rbx+0x10],0x1
  41a0a6:	jne    0x41a095
  41a0a8:	cmp    rcx,QWORD PTR [rbx+0x78]
  41a0ac:	jne    0x41a095
  41a0ae:	mov    eax,DWORD PTR [rdi]
  41a0b0:	cmp    QWORD PTR [rsp+0xe0],0x0
  41a0b9:	jne    0x419f93
  41a0bf:	jmp    0x419fbd
  41a0c4:	lea    rcx,[rip+0x1f5a5]        # 0x439670
  41a0cb:	xor    esi,esi
  41a0cd:	call   0x41d110
  41a0d2:	jmp    0x41a012
  41a0d7:	mov    rbx,QWORD PTR [rip+0x346f2]        # 0x44e7d0
  41a0de:	test   rbx,rbx
  41a0e1:	jne    0x41a0fd
  41a0e3:	jmp    0x41a222
  41a0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0f0:	mov    rbx,QWORD PTR [rbx+0x58]
  41a0f4:	test   rbx,rbx
  41a0f7:	je     0x41a222
  41a0fd:	cmp    DWORD PTR [rbx+0x10],0x1
  41a101:	jne    0x41a0f0
  41a103:	cmp    rsi,QWORD PTR [rbx+0x90]
  41a10a:	jb     0x41a0f0
  41a10c:	cmp    rsi,QWORD PTR [rbx+0x98]
  41a113:	jae    0x41a0f0
  41a115:	mov    eax,DWORD PTR [rdi]
  41a117:	test   eax,eax
  41a119:	jle    0x41a298
  41a11f:	mov    rcx,QWORD PTR [rbx+0x88]
  41a126:	call   0x40e950
  41a12b:	mov    rcx,QWORD PTR [rbx+0x80]
  41a132:	mov    r14,rax
  41a135:	call   0x40e950
  41a13a:	mov    rcx,QWORD PTR [rbx+0x98]
  41a141:	mov    r13,rax
  41a144:	call   0x40e950
  41a149:	mov    rcx,QWORD PTR [rbx+0x90]
  41a150:	mov    r12,rax
  41a153:	call   0x40e950
  41a158:	mov    rcx,QWORD PTR [rbx+0x8]
  41a15c:	mov    rbp,rax
  41a15f:	call   0x40e950
  41a164:	mov    QWORD PTR [rsp+0x30],r14
  41a169:	mov    QWORD PTR [rsp+0x28],r13
  41a16e:	lea    rcx,[rip+0x1f303]        # 0x439478
  41a175:	mov    QWORD PTR [rsp+0x20],r12
  41a17a:	mov    edx,DWORD PTR [rbx]
  41a17c:	mov    r8,rax
  41a17f:	mov    r9,rbp
  41a182:	call   0x41d1b0
  41a187:	lea    rcx,[rip+0x1d4a1]        # 0x43762f
  41a18e:	call   0x41d1b0
  41a193:	cmp    rsi,QWORD PTR [rbx+0x90]
  41a19a:	mov    eax,DWORD PTR [rdi]
  41a19c:	jae    0x41a298
  41a1a2:	cmp    QWORD PTR [rsp+0xe0],0x0
  41a1ab:	je     0x41a1d7
  41a1ad:	mov    edx,DWORD PTR [rbx]
  41a1af:	mov    rdi,QWORD PTR [rsp+0xe0]
  41a1b7:	mov    DWORD PTR [rdi],edx
  41a1b9:	mov    rdx,QWORD PTR [rbx+0x8]
  41a1bd:	mov    QWORD PTR [rdi+0x8],rdx
  41a1c1:	mov    rdx,QWORD PTR [rbx+0x80]
  41a1c8:	mov    QWORD PTR [rdi+0x10],rdx
  41a1cc:	mov    rdx,QWORD PTR [rbx+0x88]
  41a1d3:	mov    QWORD PTR [rdi+0x18],rdx
  41a1d7:	test   eax,eax
  41a1d9:	mov    esi,0x2
  41a1de:	jle    0x41a012
  41a1e4:	mov    rcx,QWORD PTR [rbx+0x88]
  41a1eb:	call   0x40e950
  41a1f0:	mov    rcx,QWORD PTR [rbx+0x80]
  41a1f7:	mov    rdi,rax
  41a1fa:	call   0x40e950
  41a1ff:	lea    rcx,[rip+0x1f402]        # 0x439608
  41a206:	mov    rdx,rax
  41a209:	mov    r8,rdi
  41a20c:	call   0x41d1b0
  41a211:	lea    rcx,[rip+0x1d417]        # 0x43762f
  41a218:	call   0x41d1b0
  41a21d:	jmp    0x41a012
  41a222:	lea    rcx,[rip+0x1f41f]        # 0x439648
  41a229:	call   0x41d110
  41a22e:	jmp    0x41a010
  41a233:	call   0x40e950
  41a238:	lea    rcx,[rip+0x1f459]        # 0x439698
  41a23f:	mov    rdx,rax
  41a242:	call   0x41d110
  41a247:	jmp    0x41a010
  41a24c:	call   0x40e950
  41a251:	mov    rcx,QWORD PTR [rbx+0xa0]
  41a258:	mov    rbp,rax
  41a25b:	call   0x40e950
  41a260:	mov    rcx,QWORD PTR [rbx+0x8]
  41a264:	mov    rsi,rax
  41a267:	call   0x40e950
  41a26c:	mov    QWORD PTR [rsp+0x20],rbp
  41a271:	mov    edx,DWORD PTR [rbx]
  41a273:	lea    rcx,[rip+0x1f246]        # 0x4394c0
  41a27a:	mov    r8,rax
  41a27d:	mov    r9,rsi
  41a280:	call   0x41d1b0
  41a285:	lea    rcx,[rip+0x1d3a3]        # 0x43762f
  41a28c:	call   0x41d1b0
  41a291:	mov    eax,DWORD PTR [rdi]
  41a293:	jmp    0x41a0b0
  41a298:	cmp    rsi,QWORD PTR [rbx+0x80]
  41a29f:	jb     0x41a0b0
  41a2a5:	jmp    0x41a1a2
  41a2aa:	lea    r8,[rip+0x1f197]        # 0x439448
  41a2b1:	lea    rcx,[rip+0x1d6db]        # 0x437993
  41a2b8:	mov    edx,0x160e
  41a2bd:	call   0x41d170
  41a2c2:	lea    r8,[rip+0x1f14f]        # 0x439418
  41a2c9:	lea    rcx,[rip+0x1d6c3]        # 0x437993
  41a2d0:	mov    edx,0x1608
  41a2d5:	call   0x41d170
  41a2da:	lea    r8,[rip+0x1f107]        # 0x4393e8
  41a2e1:	lea    rcx,[rip+0x1d6ab]        # 0x437993
  41a2e8:	mov    edx,0x1601
  41a2ed:	call   0x41d170
  41a2f2:	lea    r8,[rip+0x1f0c7]        # 0x4393c0
  41a2f9:	lea    rcx,[rip+0x1d693]        # 0x437993
  41a300:	mov    edx,0x15fb
  41a305:	call   0x41d170
  41a30a:	mov    esi,0x1
  41a30f:	jmp    0x41a012
  41a314:	xchg   ax,ax
  41a316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a320:	sub    rsp,0x38
  41a324:	mov    rcx,QWORD PTR [rip+0x3461d]        # 0x44e948
  41a32b:	mov    r8d,0x8
  41a331:	lea    rax,[rsp+0x20]
  41a336:	lea    rdx,[rsp+0x28]
  41a33b:	mov    QWORD PTR [rsp+0x28],rax
  41a340:	call   0x40def0
  41a345:	mov    rdx,QWORD PTR [rsp+0x28]
  41a34a:	test   eax,eax
  41a34c:	mov    QWORD PTR [rsp+0x20],rdx
  41a351:	jne    0x41a35b
  41a353:	mov    rax,rdx
  41a356:	add    rsp,0x38
  41a35a:	ret    
  41a35b:	lea    rcx,[rip+0x1f37e]        # 0x4396e0
  41a362:	call   0x41d140
  41a367:	nop
  41a368:	nop    DWORD PTR [rax+rax*1+0x0]
  41a370:	sub    rsp,0x38
  41a374:	mov    rcx,QWORD PTR [rip+0x345d5]        # 0x44e950
  41a37b:	mov    r8d,0x8
  41a381:	lea    rax,[rsp+0x20]
  41a386:	lea    rdx,[rsp+0x28]
  41a38b:	mov    QWORD PTR [rsp+0x28],rax
  41a390:	call   0x40def0
  41a395:	mov    rdx,QWORD PTR [rsp+0x28]
  41a39a:	test   eax,eax
  41a39c:	mov    QWORD PTR [rsp+0x20],rdx
  41a3a1:	jne    0x41a3ab
  41a3a3:	mov    rax,rdx
  41a3a6:	add    rsp,0x38
  41a3aa:	ret    
  41a3ab:	lea    rcx,[rip+0x1f356]        # 0x439708
  41a3b2:	call   0x41d140
  41a3b7:	nop
  41a3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3c0:	sub    rsp,0x38
  41a3c4:	mov    rcx,QWORD PTR [rip+0x3458d]        # 0x44e958
  41a3cb:	mov    r8d,0x8
  41a3d1:	lea    rax,[rsp+0x20]
  41a3d6:	lea    rdx,[rsp+0x28]
  41a3db:	mov    QWORD PTR [rsp+0x28],rax
  41a3e0:	call   0x40def0
  41a3e5:	mov    rdx,QWORD PTR [rsp+0x28]
  41a3ea:	test   eax,eax
  41a3ec:	mov    QWORD PTR [rsp+0x20],rdx
  41a3f1:	jne    0x41a3fb
  41a3f3:	mov    rax,rdx
  41a3f6:	add    rsp,0x38
  41a3fa:	ret    
  41a3fb:	lea    rcx,[rip+0x1f33e]        # 0x439740
  41a402:	call   0x41d140
  41a407:	nop
  41a408:	nop    DWORD PTR [rax+rax*1+0x0]
  41a410:	push   rbx
  41a411:	sub    rsp,0x20
  41a415:	mov    ecx,0x500000
  41a41a:	call   0x413360
  41a41f:	mov    ecx,0x1
  41a424:	call   0x413d00
  41a429:	mov    rax,QWORD PTR [rip+0x34380]        # 0x44e7b0
  41a430:	test   rax,rax
  41a433:	je     0x41a4c8
  41a439:	cmp    DWORD PTR [rax+0x8],0x1
  41a43d:	mov    rdx,rax
  41a440:	jne    0x41a45a
  41a442:	jmp    0x41a510
  41a447:	nop    WORD PTR [rax+rax*1+0x0]
  41a450:	cmp    DWORD PTR [rdx+0x8],0x1
  41a454:	je     0x41a510
  41a45a:	mov    rdx,QWORD PTR [rdx+0x28]
  41a45e:	test   rdx,rdx
  41a461:	jne    0x41a450
  41a463:	mov    rbx,QWORD PTR [rip+0x2c006]        # 0x446470
  41a46a:	mov    edx,DWORD PTR [rbx]
  41a46c:	test   edx,edx
  41a46e:	jle    0x41a4e0
  41a470:	lea    rcx,[rip+0x1f311]        # 0x439788
  41a477:	mov    edx,0x1
  41a47c:	call   0x41d1b0
  41a481:	lea    rcx,[rip+0x1d1a7]        # 0x43762f
  41a488:	call   0x41d1b0
  41a48d:	mov    rax,QWORD PTR [rip+0x3431c]        # 0x44e7b0
  41a494:	test   rax,rax
  41a497:	jne    0x41a4f0
  41a499:	nop    DWORD PTR [rax+0x0]
  41a4a0:	mov    ecx,DWORD PTR [rbx]
  41a4a2:	test   ecx,ecx
  41a4a4:	jle    0x41a4d7
  41a4a6:	lea    rcx,[rip+0x1f30b]        # 0x4397b8
  41a4ad:	mov    edx,0x1
  41a4b2:	call   0x41d1b0
  41a4b7:	lea    rcx,[rip+0x1d171]        # 0x43762f
  41a4be:	add    rsp,0x20
  41a4c2:	pop    rbx
  41a4c3:	jmp    0x41d1b0
  41a4c8:	mov    rbx,QWORD PTR [rip+0x2bfa1]        # 0x446470
  41a4cf:	mov    r8d,DWORD PTR [rbx]
  41a4d2:	test   r8d,r8d
  41a4d5:	jg     0x41a470
  41a4d7:	add    rsp,0x20
  41a4db:	pop    rbx
  41a4dc:	ret    
  41a4dd:	nop    DWORD PTR [rax]
  41a4e0:	mov    rax,QWORD PTR [rax+0x28]
  41a4e4:	mov    rbx,QWORD PTR [rip+0x2bf85]        # 0x446470
  41a4eb:	test   rax,rax
  41a4ee:	je     0x41a4a0
  41a4f0:	cmp    DWORD PTR [rax+0x8],0x1
  41a4f4:	jne    0x41a4e0
  41a4f6:	lea    rbx,[rip+0xffffffffffff8d13]        # 0x413210
  41a4fd:	mov    QWORD PTR [rax+0x20],rbx
  41a501:	add    rsp,0x20
  41a505:	pop    rbx
  41a506:	ret    
  41a507:	nop    WORD PTR [rax+rax*1+0x0]
  41a510:	lea    rcx,[rip+0x1f25d]        # 0x439774
  41a517:	mov    QWORD PTR [rdx],rcx
  41a51a:	jmp    0x41a4f0
  41a51c:	nop
  41a51d:	nop
  41a51e:	nop
  41a51f:	nop
  41a520:	push   rbx
  41a521:	sub    rsp,0x20
  41a525:	movzx  eax,BYTE PTR [rcx]
  41a528:	mov    rbx,rcx
  41a52b:	test   al,al
  41a52d:	je     0x41a6cf
  41a533:	lea    r8,[rip+0x1fac6]        # 0x43a000
  41a53a:	lea    rdx,[rcx+0x1]
  41a53e:	xor    r9d,r9d
  41a541:	xor    ecx,ecx
  41a543:	sub    eax,0x22
  41a546:	cmp    al,0x1c
  41a548:	ja     0x41a564
  41a54a:	movzx  eax,al
  41a54d:	movsxd rax,DWORD PTR [r8+rax*4]
  41a551:	add    rax,r8
  41a554:	jmp    rax
  41a556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a560:	add    r9d,0x3
  41a564:	add    rdx,0x1
  41a568:	movzx  eax,BYTE PTR [rdx-0x1]
  41a56c:	add    ecx,0x1
  41a56f:	test   al,al
  41a571:	jne    0x41a543
  41a573:	lea    ecx,[r9+rcx*1+0x1]
  41a578:	movsxd rcx,ecx
  41a57b:	call   0x41a6e0
  41a580:	movzx  r9d,BYTE PTR [rbx]
  41a584:	test   r9b,r9b
  41a587:	je     0x41a6d9
  41a58d:	lea    r10,[rip+0x1fae0]        # 0x43a074
  41a594:	xor    edx,edx
  41a596:	xor    ecx,ecx
  41a598:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5a0:	lea    r8d,[r9-0x22]
  41a5a4:	mov    r11d,edx
  41a5a7:	cmp    r8b,0x1c
  41a5ab:	ja     0x41a6c0
  41a5b1:	movzx  r8d,r8b
  41a5b5:	movsxd r8,DWORD PTR [r10+r8*4]
  41a5b9:	add    r8,r10
  41a5bc:	jmp    r8
  41a5bf:	nop
  41a5c0:	add    r9d,0x5
  41a5c4:	jmp    0x41a564
  41a5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5d0:	add    r9d,0x4
  41a5d4:	jmp    0x41a564
  41a5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5e0:	movsxd r8,ecx
  41a5e3:	add    ecx,0x3
  41a5e6:	add    r8,rdx
  41a5e9:	add    r8,rax
  41a5ec:	mov    DWORD PTR [r8],0x3b746726
  41a5f3:	mov    BYTE PTR [r8+0x4],0x0
  41a5f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a600:	lea    r8d,[rdx+0x1]
  41a604:	add    rdx,0x1
  41a608:	movzx  r9d,BYTE PTR [rbx+rdx*1]
  41a60d:	test   r9b,r9b
  41a610:	jne    0x41a5a0
  41a612:	add    ecx,r8d
  41a615:	movsxd rcx,ecx
  41a618:	mov    BYTE PTR [rax+rcx*1],0x0
  41a61c:	add    rsp,0x20
  41a620:	pop    rbx
  41a621:	ret    
  41a622:	movsxd r8,ecx
  41a625:	add    ecx,0x3
  41a628:	add    r8,rdx
  41a62b:	add    r8,rax
  41a62e:	mov    DWORD PTR [r8],0x3b746c26
  41a635:	mov    BYTE PTR [r8+0x4],0x0
  41a63a:	jmp    0x41a600
  41a63c:	nop    DWORD PTR [rax+0x0]
  41a640:	movsxd r8,ecx
  41a643:	mov    r9d,0x3b73
  41a649:	add    ecx,0x5
  41a64c:	add    r8,rdx
  41a64f:	add    r8,rax
  41a652:	mov    DWORD PTR [r8],0x6f706126
  41a659:	mov    WORD PTR [r8+0x4],r9w
  41a65e:	mov    BYTE PTR [r8+0x6],0x0
  41a663:	jmp    0x41a600
  41a665:	movsxd r8,ecx
  41a668:	mov    r9d,0x3b
  41a66e:	add    ecx,0x4
  41a671:	add    r8,rdx
  41a674:	add    r8,rax
  41a677:	mov    DWORD PTR [r8],0x706d6126
  41a67e:	mov    WORD PTR [r8+0x4],r9w
  41a683:	jmp    0x41a600
  41a688:	nop    DWORD PTR [rax+rax*1+0x0]
  41a690:	movsxd r8,ecx
  41a693:	mov    r11d,0x3b74
  41a699:	add    ecx,0x5
  41a69c:	add    r8,rdx
  41a69f:	add    r8,rax
  41a6a2:	mov    DWORD PTR [r8],0x6f757126
  41a6a9:	mov    WORD PTR [r8+0x4],r11w
  41a6ae:	mov    BYTE PTR [r8+0x6],0x0
  41a6b3:	jmp    0x41a600
  41a6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a6c0:	add    r11d,ecx
  41a6c3:	movsxd r11,r11d
  41a6c6:	mov    BYTE PTR [rax+r11*1],r9b
  41a6ca:	jmp    0x41a600
  41a6cf:	mov    ecx,0x1
  41a6d4:	jmp    0x41a57b
  41a6d9:	xor    ecx,ecx
  41a6db:	jmp    0x41a618
  41a6e0:	push   rbx
  41a6e1:	sub    rsp,0x20
  41a6e5:	mov    eax,0x1
  41a6ea:	test   rcx,rcx
  41a6ed:	mov    rbx,rcx
  41a6f0:	cmove  rbx,rax
  41a6f4:	mov    rcx,rbx
  41a6f7:	call   0x423010
  41a6fc:	test   rax,rax
  41a6ff:	je     0x41a707
  41a701:	add    rsp,0x20
  41a705:	pop    rbx
  41a706:	ret    
  41a707:	mov    ecx,ebx
  41a709:	call   0x40e700
  41a70e:	nop
  41a70f:	nop
  41a710:	push   rbx
  41a711:	sub    rsp,0x20
  41a715:	mov    eax,0x1
  41a71a:	test   rdx,rdx
  41a71d:	mov    rbx,rdx
  41a720:	cmove  rbx,rax
  41a724:	test   rcx,rcx
  41a727:	je     0x41a740
  41a729:	mov    rdx,rbx
  41a72c:	call   0x42a648
  41a731:	test   rax,rax
  41a734:	je     0x41a74a
  41a736:	add    rsp,0x20
  41a73a:	pop    rbx
  41a73b:	ret    
  41a73c:	nop    DWORD PTR [rax+0x0]
  41a740:	mov    rcx,rbx
  41a743:	call   0x423010
  41a748:	jmp    0x41a731
  41a74a:	mov    ecx,ebx
  41a74c:	call   0x40e700
  41a751:	nop
  41a752:	nop    DWORD PTR [rax+0x0]
  41a756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a760:	push   rsi
  41a761:	push   rbx
  41a762:	sub    rsp,0x28
  41a766:	test   rcx,rcx
  41a769:	mov    rbx,rcx
  41a76c:	mov    rsi,rdx
  41a76f:	je     0x41a790
  41a771:	test   rdx,rdx
  41a774:	je     0x41a790
  41a776:	mov    rdx,rsi
  41a779:	mov    rcx,rbx
  41a77c:	call   0x42a710
  41a781:	test   rax,rax
  41a784:	je     0x41a79c
  41a786:	add    rsp,0x28
  41a78a:	pop    rbx
  41a78b:	pop    rsi
  41a78c:	ret    
  41a78d:	nop    DWORD PTR [rax]
  41a790:	mov    esi,0x1
  41a795:	mov    ebx,0x1
  41a79a:	jmp    0x41a776
  41a79c:	mov    ecx,esi
  41a79e:	imul   ecx,ebx
  41a7a1:	call   0x40e700
  41a7a6:	nop
  41a7a7:	nop    WORD PTR [rax+rax*1+0x0]
  41a7b0:	mov    rdx,rcx
  41a7b3:	mov    ecx,0x1
  41a7b8:	jmp    0x41a760
  41a7ba:	nop    WORD PTR [rax+rax*1+0x0]
  41a7c0:	test   rcx,rcx
  41a7c3:	je     0x41a7d0
  41a7c5:	jmp    0x42a6c8
  41a7ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a7d0:	repz ret 
  41a7d2:	nop    DWORD PTR [rax+0x0]
  41a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7e0:	sub    rsp,0x28
  41a7e4:	call   0x40e700
  41a7e9:	nop
  41a7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a7f0:	sub    rsp,0x38
  41a7f4:	mov    rax,rcx
  41a7f7:	lea    rcx,[rsp+0x28]
  41a7fc:	mov    r8,rdx
  41a7ff:	mov    rdx,rax
  41a802:	mov    QWORD PTR [rsp+0x28],0x0
  41a80b:	call   0x4259d0
  41a810:	mov    edx,eax
  41a812:	mov    rax,QWORD PTR [rsp+0x28]
  41a817:	shr    edx,0x1f
  41a81a:	test   dl,dl
  41a81c:	jne    0x41a828
  41a81e:	test   rax,rax
  41a821:	je     0x41a828
  41a823:	add    rsp,0x38
  41a827:	ret    
  41a828:	lea    r8,[rip+0x1f8d1]        # 0x43a100
  41a82f:	lea    rcx,[rip+0x1f8e0]        # 0x43a116
  41a836:	mov    edx,0x87
  41a83b:	call   0x41d170
  41a840:	nop
  41a841:	nop    DWORD PTR [rax+rax*1+0x0]
  41a846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a850:	sub    rsp,0x38
  41a854:	mov    QWORD PTR [rsp+0x48],rdx
  41a859:	lea    rdx,[rsp+0x48]
  41a85e:	mov    QWORD PTR [rsp+0x50],r8
  41a863:	mov    QWORD PTR [rsp+0x58],r9
  41a868:	mov    QWORD PTR [rsp+0x28],rdx
  41a86d:	call   0x41a7f0
  41a872:	add    rsp,0x38
  41a876:	ret    
  41a877:	nop    WORD PTR [rax+rax*1+0x0]
  41a880:	push   rbx
  41a881:	sub    rsp,0x40
  41a885:	mov    QWORD PTR [rsp+0x68],r9
  41a88a:	lea    r9,[rsp+0x68]
  41a88f:	mov    rbx,rdx
  41a892:	mov    QWORD PTR [rsp+0x38],r9
  41a897:	call   0x425940
  41a89c:	movsxd rdx,eax
  41a89f:	cmp    rbx,rdx
  41a8a2:	jbe    0x41a8aa
  41a8a4:	add    rsp,0x40
  41a8a8:	pop    rbx
  41a8a9:	ret    
  41a8aa:	lea    rax,[rip+0x1f899]        # 0x43a14a
  41a8b1:	lea    r9,[rip+0x1f8a8]        # 0x43a160
  41a8b8:	lea    r8,[rip+0x1f870]        # 0x43a12f
  41a8bf:	lea    rcx,[rip+0x1f850]        # 0x43a116
  41a8c6:	mov    edx,0x93
  41a8cb:	mov    QWORD PTR [rsp+0x20],rax
  41a8d0:	call   0x41d170
  41a8d5:	nop
  41a8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8e0:	push   rsi
  41a8e1:	push   rbx
  41a8e2:	sub    rsp,0x28
  41a8e6:	mov    rsi,rcx
  41a8e9:	lea    rcx,[rdx+0x1]
  41a8ed:	mov    rbx,rdx
  41a8f0:	call   0x41a6e0
  41a8f5:	mov    r8,rbx
  41a8f8:	mov    rdx,rsi
  41a8fb:	mov    rcx,rax
  41a8fe:	call   0x42a668
  41a903:	mov    BYTE PTR [rax+rbx*1],0x0
  41a907:	add    rsp,0x28
  41a90b:	pop    rbx
  41a90c:	pop    rsi
  41a90d:	ret    
  41a90e:	xchg   ax,ax
  41a910:	push   r15
  41a912:	push   r14
  41a914:	push   r13
  41a916:	push   r12
  41a918:	push   rbp
  41a919:	push   rdi
  41a91a:	push   rsi
  41a91b:	push   rbx
  41a91c:	sub    rsp,0x48
  41a920:	mov    rbp,QWORD PTR [rip+0x36f41]        # 0x451868
  41a927:	xor    ebx,ebx
  41a929:	mov    r12,rcx
  41a92c:	mov    QWORD PTR [rsp+0x98],rdx
  41a934:	mov    r13d,r8d
  41a937:	nop    WORD PTR [rax+rax*1+0x0]
  41a940:	movsx  ecx,BYTE PTR [r12+rbx*1]
  41a945:	mov    edi,ebx
  41a947:	add    rbx,0x1
  41a94b:	mov    esi,ecx
  41a94d:	call   rbp
  41a94f:	test   eax,eax
  41a951:	jne    0x41a940
  41a953:	cmp    sil,0x2b
  41a957:	je     0x41ab93
  41a95d:	cmp    sil,0x2d
  41a961:	mov    DWORD PTR [rsp+0x3c],0x0
  41a969:	je     0x41aba3
  41a96f:	test   r13d,0xffffffef
  41a976:	jne    0x41aab0
  41a97c:	movsxd rax,edi
  41a97f:	test   r13d,r13d
  41a982:	movzx  r8d,BYTE PTR [r12+rax*1]
  41a987:	sete   dl
  41a98a:	cmp    r8b,0x30
  41a98e:	je     0x41aa90
  41a994:	test   dl,dl
  41a996:	je     0x41aab0
  41a99c:	mov    DWORD PTR [rsp+0x24],0xa
  41a9a4:	mov    r13d,0xa
  41a9aa:	lea    rbp,[r12+rax*1+0x1]
  41a9af:	lea    eax,[r13+0x56]
  41a9b3:	mov    rdx,QWORD PTR [rip+0x36f66]        # 0x451920
  41a9ba:	xor    ebx,ebx
  41a9bc:	xor    esi,esi
  41a9be:	mov    r15,QWORD PTR [rip+0x36e93]        # 0x451858
  41a9c5:	mov    DWORD PTR [rsp+0x34],eax
  41a9c9:	lea    eax,[r13+0x2f]
  41a9cd:	mov    DWORD PTR [rsp+0xa0],r13d
  41a9d5:	mov    QWORD PTR [rsp+0x28],rdx
  41a9da:	mov    DWORD PTR [rsp+0x38],eax
  41a9de:	movsxd rax,r13d
  41a9e1:	mov    r14,rax
  41a9e4:	jmp    0x41aa2a
  41a9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9f0:	mov    eax,edx
  41a9f2:	imul   esi,DWORD PTR [rsp+0x24]
  41a9f7:	cdqe   
  41a9f9:	add    rbx,rax
  41a9fc:	mov    rax,rbx
  41a9ff:	shr    rax,0x38
  41aa03:	add    esi,eax
  41aa05:	movabs rax,0xffffffffffffff
  41aa0f:	and    rbx,rax
  41aa12:	cmp    esi,0xff
  41aa18:	ja     0x41ab70
  41aa1e:	movzx  r8d,BYTE PTR [rbp+0x0]
  41aa23:	add    edi,0x1
  41aa26:	add    rbp,0x1
  41aa2a:	movzx  r13d,r8b
  41aa2e:	mov    ecx,r13d
  41aa31:	call   r15
  41aa34:	test   eax,eax
  41aa36:	je     0x41ab00
  41aa3c:	cmp    DWORD PTR [rsp+0xa0],0xa
  41aa44:	lea    edx,[r13-0x30]
  41aa48:	jg     0x41ab40
  41aa4e:	cmp    edx,0x9
  41aa51:	ja     0x41ab00
  41aa57:	xor    eax,eax
  41aa59:	cmp    r13d,DWORD PTR [rsp+0x38]
  41aa5e:	setle  al
  41aa61:	test   eax,eax
  41aa63:	je     0x41ab00
  41aa69:	lea    eax,[r13-0x30]
  41aa6d:	imul   rbx,r14
  41aa71:	cmp    eax,0x9
  41aa74:	jbe    0x41a9f0
  41aa7a:	mov    ecx,r13d
  41aa7d:	mov    rax,QWORD PTR [rsp+0x28]
  41aa82:	call   rax
  41aa84:	sub    eax,0x57
  41aa87:	jmp    0x41a9f2
  41aa8c:	nop    DWORD PTR [rax+0x0]
  41aa90:	movzx  ecx,BYTE PTR [r12+rax*1+0x1]
  41aa96:	and    ecx,0xffffffdf
  41aa99:	cmp    cl,0x58
  41aa9c:	jne    0x41abb3
  41aaa2:	add    edi,0x2
  41aaa5:	test   dl,dl
  41aaa7:	jne    0x41aae1
  41aaa9:	nop    DWORD PTR [rax+0x0]
  41aab0:	lea    eax,[r13-0x2]
  41aab4:	mov    DWORD PTR [rsp+0x24],r13d
  41aab9:	cmp    eax,0x22
  41aabc:	jbe    0x41aaf0
  41aabe:	call   QWORD PTR [rip+0x36ccc]        # 0x451790
  41aac4:	mov    DWORD PTR [rax],0x16
  41aaca:	xor    eax,eax
  41aacc:	nop    DWORD PTR [rax+0x0]
  41aad0:	add    rsp,0x48
  41aad4:	pop    rbx
  41aad5:	pop    rsi
  41aad6:	pop    rdi
  41aad7:	pop    rbp
  41aad8:	pop    r12
  41aada:	pop    r13
  41aadc:	pop    r14
  41aade:	pop    r15
  41aae0:	ret    
  41aae1:	mov    DWORD PTR [rsp+0x24],0x10
  41aae9:	mov    r13d,0x10
  41aaef:	nop
  41aaf0:	movsxd rax,edi
  41aaf3:	movzx  r8d,BYTE PTR [r12+rax*1]
  41aaf8:	jmp    0x41a9aa
  41aafd:	nop    DWORD PTR [rax]
  41ab00:	cmp    QWORD PTR [rsp+0x98],0x0
  41ab09:	je     0x41abd4
  41ab0f:	movsxd rdx,DWORD PTR [rsp+0x3c]
  41ab14:	shl    rsi,0x38
  41ab18:	add    rsi,rbx
  41ab1b:	mov    rax,rdx
  41ab1e:	neg    rax
  41ab21:	xor    rsi,rax
  41ab24:	lea    rax,[rsi+rdx*1]
  41ab28:	mov    rdx,QWORD PTR [rsp+0x98]
  41ab30:	movsxd rdi,edi
  41ab33:	add    r12,rdi
  41ab36:	mov    QWORD PTR [rdx],r12
  41ab39:	jmp    0x41aad0
  41ab3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ab40:	cmp    edx,0x9
  41ab43:	jbe    0x41aa69
  41ab49:	mov    DWORD PTR [rsp+0x30],edx
  41ab4d:	mov    ecx,r13d
  41ab50:	call   QWORD PTR [rip+0x36dca]        # 0x451920
  41ab56:	cmp    DWORD PTR [rsp+0x34],eax
  41ab5a:	mov    edx,DWORD PTR [rsp+0x30]
  41ab5e:	setge  al
  41ab61:	movzx  eax,al
  41ab64:	jmp    0x41aa61
  41ab69:	nop    DWORD PTR [rax+0x0]
  41ab70:	call   QWORD PTR [rip+0x36c1a]        # 0x451790
  41ab76:	cmp    QWORD PTR [rsp+0x98],0x0
  41ab7f:	mov    DWORD PTR [rax],0x22
  41ab85:	mov    rax,0xffffffffffffffff
  41ab8c:	jne    0x41ab28
  41ab8e:	jmp    0x41aad0
  41ab93:	add    edi,0x1
  41ab96:	mov    DWORD PTR [rsp+0x3c],0x0
  41ab9e:	jmp    0x41a96f
  41aba3:	add    edi,0x1
  41aba6:	mov    DWORD PTR [rsp+0x3c],0x1
  41abae:	jmp    0x41a96f
  41abb3:	test   dl,dl
  41abb5:	je     0x41aab0
  41abbb:	mov    r8d,0x30
  41abc1:	mov    DWORD PTR [rsp+0x24],0x8
  41abc9:	mov    r13d,0x8
  41abcf:	jmp    0x41a9aa
  41abd4:	movsxd rdx,DWORD PTR [rsp+0x3c]
  41abd9:	shl    rsi,0x38
  41abdd:	add    rbx,rsi
  41abe0:	mov    rax,rdx
  41abe3:	neg    rax
  41abe6:	xor    rbx,rax
  41abe9:	lea    rax,[rbx+rdx*1]
  41abed:	jmp    0x41aad0
  41abf2:	nop    DWORD PTR [rax+0x0]
  41abf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac00:	push   rsi
  41ac01:	push   rbx
  41ac02:	sub    rsp,0x28
  41ac06:	test   rcx,rcx
  41ac09:	mov    rbx,rcx
  41ac0c:	je     0x41ac3e
  41ac0e:	movzx  edx,BYTE PTR [rcx]
  41ac11:	mov    rsi,QWORD PTR [rip+0x36c50]        # 0x451868
  41ac18:	test   dl,dl
  41ac1a:	jne    0x41ac2b
  41ac1c:	jmp    0x41ac34
  41ac1e:	xchg   ax,ax
  41ac20:	add    rbx,0x1
  41ac24:	movzx  edx,BYTE PTR [rbx]
  41ac27:	test   dl,dl
  41ac29:	je     0x41ac34
  41ac2b:	movsx  ecx,dl
  41ac2e:	call   rsi
  41ac30:	test   eax,eax
  41ac32:	jne    0x41ac20
  41ac34:	mov    rax,rbx
  41ac37:	add    rsp,0x28
  41ac3b:	pop    rbx
  41ac3c:	pop    rsi
  41ac3d:	ret    
  41ac3e:	xor    eax,eax
  41ac40:	jmp    0x41ac37
  41ac42:	nop    DWORD PTR [rax+0x0]
  41ac46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac50:	push   rsi
  41ac51:	push   rbx
  41ac52:	sub    rsp,0x28
  41ac56:	test   rcx,rcx
  41ac59:	mov    rbx,rcx
  41ac5c:	je     0x41ac8e
  41ac5e:	movzx  edx,BYTE PTR [rcx]
  41ac61:	mov    rsi,QWORD PTR [rip+0x36c00]        # 0x451868
  41ac68:	test   dl,dl
  41ac6a:	jne    0x41ac7b
  41ac6c:	jmp    0x41ac84
  41ac6e:	xchg   ax,ax
  41ac70:	add    rbx,0x1
  41ac74:	movzx  edx,BYTE PTR [rbx]
  41ac77:	test   dl,dl
  41ac79:	je     0x41ac84
  41ac7b:	movsx  ecx,dl
  41ac7e:	call   rsi
  41ac80:	test   eax,eax
  41ac82:	jne    0x41ac70
  41ac84:	mov    rax,rbx
  41ac87:	add    rsp,0x28
  41ac8b:	pop    rbx
  41ac8c:	pop    rsi
  41ac8d:	ret    
  41ac8e:	xor    eax,eax
  41ac90:	jmp    0x41ac87
  41ac92:	nop    DWORD PTR [rax+0x0]
  41ac96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aca0:	push   rsi
  41aca1:	push   rbx
  41aca2:	sub    rsp,0x28
  41aca6:	test   rcx,rcx
  41aca9:	mov    rbx,rcx
  41acac:	je     0x41acde
  41acae:	movzx  edx,BYTE PTR [rcx]
  41acb1:	mov    rsi,QWORD PTR [rip+0x36bb0]        # 0x451868
  41acb8:	test   dl,dl
  41acba:	jne    0x41accb
  41acbc:	jmp    0x41acd4
  41acbe:	xchg   ax,ax
  41acc0:	add    rbx,0x1
  41acc4:	movzx  edx,BYTE PTR [rbx]
  41acc7:	test   dl,dl
  41acc9:	je     0x41acd4
  41accb:	movsx  ecx,dl
  41acce:	call   rsi
  41acd0:	test   eax,eax
  41acd2:	je     0x41acc0
  41acd4:	mov    rax,rbx
  41acd7:	add    rsp,0x28
  41acdb:	pop    rbx
  41acdc:	pop    rsi
  41acdd:	ret    
  41acde:	xor    eax,eax
  41ace0:	jmp    0x41acd7
  41ace2:	nop
  41ace3:	nop
  41ace4:	nop
  41ace5:	nop
  41ace6:	nop
  41ace7:	nop
  41ace8:	nop
  41ace9:	nop
  41acea:	nop
  41aceb:	nop
  41acec:	nop
  41aced:	nop
  41acee:	nop
  41acef:	nop
  41acf0:	mov    rax,rcx
  41acf3:	mov    DWORD PTR [rcx],edx
  41acf5:	mov    DWORD PTR [rcx+0x4],r8d
  41acf9:	mov    DWORD PTR [rcx+0x8],r9d
  41acfd:	ret    
  41acfe:	xchg   ax,ax
  41ad00:	mov    rax,rcx
  41ad03:	mov    DWORD PTR [rcx],edx
  41ad05:	mov    DWORD PTR [rcx+0x4],0x0
  41ad0c:	mov    DWORD PTR [rcx+0x8],0x0
  41ad13:	ret    
  41ad14:	xchg   ax,ax
  41ad16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad20:	mov    eax,DWORD PTR [rcx]
  41ad22:	ret    
  41ad23:	nop    DWORD PTR [rax]
  41ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad30:	mov    eax,DWORD PTR [rcx+0x4]
  41ad33:	ret    
  41ad34:	xchg   ax,ax
  41ad36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad40:	mov    eax,DWORD PTR [rcx+0x8]
  41ad43:	ret    
  41ad44:	xchg   ax,ax
  41ad46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad50:	xor    eax,eax
  41ad52:	mov    r8d,DWORD PTR [rdx]
  41ad55:	cmp    DWORD PTR [rcx],r8d
  41ad58:	je     0x41ad60
  41ad5a:	repz ret 
  41ad5c:	nop    DWORD PTR [rax+0x0]
  41ad60:	mov    r9d,DWORD PTR [rdx+0x4]
  41ad64:	cmp    DWORD PTR [rcx+0x4],r9d
  41ad68:	jne    0x41ad5a
  41ad6a:	mov    eax,DWORD PTR [rdx+0x8]
  41ad6d:	cmp    DWORD PTR [rcx+0x8],eax
  41ad70:	sete   al
  41ad73:	movzx  eax,al
  41ad76:	ret    
  41ad77:	nop    WORD PTR [rax+rax*1+0x0]
  41ad80:	mov    r8d,DWORD PTR [rcx]
  41ad83:	cmp    r8d,DWORD PTR [rip+0x11326]        # 0x42c0b0
  41ad8a:	mov    edx,DWORD PTR [rcx+0x4]
  41ad8d:	mov    ecx,DWORD PTR [rcx+0x8]
  41ad90:	sete   r9b
  41ad94:	cmp    edx,DWORD PTR [rip+0x1131a]        # 0x42c0b4
  41ad9a:	sete   al
  41ad9d:	test   r9b,al
  41ada0:	je     0x41adac
  41ada2:	xor    eax,eax
  41ada4:	cmp    ecx,DWORD PTR [rip+0x1130e]        # 0x42c0b8
  41adaa:	je     0x41add5
  41adac:	cmp    r8d,DWORD PTR [rip+0x33bcd]        # 0x44e980
  41adb3:	sete   r8b
  41adb7:	cmp    edx,DWORD PTR [rip+0x33bc7]        # 0x44e984
  41adbd:	sete   al
  41adc0:	test   r8b,al
  41adc3:	je     0x41adcd
  41adc5:	cmp    ecx,DWORD PTR [rip+0x33bbd]        # 0x44e988
  41adcb:	je     0x41add7
  41adcd:	xor    eax,eax
  41adcf:	or     ecx,edx
  41add1:	sete   al
  41add4:	ret    
  41add5:	repz ret 
  41add7:	xor    eax,eax
  41add9:	ret    
  41adda:	nop    WORD PTR [rax+rax*1+0x0]
  41ade0:	mov    r8d,DWORD PTR [rcx]
  41ade3:	cmp    r8d,DWORD PTR [rip+0x112c6]        # 0x42c0b0
  41adea:	mov    edx,DWORD PTR [rcx+0x4]
  41aded:	mov    ecx,DWORD PTR [rcx+0x8]
  41adf0:	sete   r9b
  41adf4:	cmp    edx,DWORD PTR [rip+0x112ba]        # 0x42c0b4
  41adfa:	sete   al
  41adfd:	test   r9b,al
  41ae00:	je     0x41ae0c
  41ae02:	xor    eax,eax
  41ae04:	cmp    ecx,DWORD PTR [rip+0x112ae]        # 0x42c0b8
  41ae0a:	je     0x41ae40
  41ae0c:	cmp    r8d,DWORD PTR [rip+0x33b6d]        # 0x44e980
  41ae13:	sete   r8b
  41ae17:	cmp    edx,DWORD PTR [rip+0x33b67]        # 0x44e984
  41ae1d:	sete   al
  41ae20:	test   r8b,al
  41ae23:	jne    0x41ae30
  41ae25:	xor    eax,eax
  41ae27:	test   edx,edx
  41ae29:	setne  al
  41ae2c:	ret    
  41ae2d:	nop    DWORD PTR [rax]
  41ae30:	cmp    ecx,DWORD PTR [rip+0x33b52]        # 0x44e988
  41ae36:	jne    0x41ae25
  41ae38:	xor    eax,eax
  41ae3a:	ret    
  41ae3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae40:	repz ret 
  41ae42:	nop    DWORD PTR [rax+0x0]
  41ae46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae50:	mov    r8d,DWORD PTR [rcx]
  41ae53:	cmp    r8d,DWORD PTR [rip+0x11256]        # 0x42c0b0
  41ae5a:	mov    edx,DWORD PTR [rcx+0x4]
  41ae5d:	mov    ecx,DWORD PTR [rcx+0x8]
  41ae60:	sete   r9b
  41ae64:	cmp    edx,DWORD PTR [rip+0x1124a]        # 0x42c0b4
  41ae6a:	sete   al
  41ae6d:	test   r9b,al
  41ae70:	je     0x41ae7c
  41ae72:	xor    eax,eax
  41ae74:	cmp    ecx,DWORD PTR [rip+0x1123e]        # 0x42c0b8
  41ae7a:	je     0x41aeb0
  41ae7c:	cmp    r8d,DWORD PTR [rip+0x33afd]        # 0x44e980
  41ae83:	sete   r8b
  41ae87:	cmp    edx,DWORD PTR [rip+0x33af7]        # 0x44e984
  41ae8d:	sete   al
  41ae90:	test   r8b,al
  41ae93:	jne    0x41aea0
  41ae95:	xor    eax,eax
  41ae97:	test   ecx,ecx
  41ae99:	setne  al
  41ae9c:	ret    
  41ae9d:	nop    DWORD PTR [rax]
  41aea0:	cmp    ecx,DWORD PTR [rip+0x33ae2]        # 0x44e988
  41aea6:	jne    0x41ae95
  41aea8:	xor    eax,eax
  41aeaa:	ret    
  41aeab:	nop    DWORD PTR [rax+rax*1+0x0]
  41aeb0:	repz ret 
  41aeb2:	nop    DWORD PTR [rax+0x0]
  41aeb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aec0:	push   r12
  41aec2:	push   rbp
  41aec3:	push   rdi
  41aec4:	push   rsi
  41aec5:	push   rbx
  41aec6:	sub    rsp,0x30
  41aeca:	mov    esi,DWORD PTR [rdx]
  41aecc:	cmp    DWORD PTR [rip+0x111de],esi        # 0x42c0b0
  41aed2:	mov    edi,DWORD PTR [rdx+0x4]
  41aed5:	mov    ebp,DWORD PTR [rcx]
  41aed7:	mov    r12d,DWORD PTR [rdx+0x8]
  41aedb:	sete   r8b
  41aedf:	cmp    DWORD PTR [rip+0x111cf],edi        # 0x42c0b4
  41aee5:	sete   al
  41aee8:	test   r8b,al
  41aeeb:	je     0x41aefb
  41aeed:	cmp    DWORD PTR [rip+0x111c4],r12d        # 0x42c0b8
  41aef4:	mov    eax,0x1
  41aef9:	je     0x41af33
  41aefb:	mov    rax,QWORD PTR [rdx]
  41aefe:	mov    rbx,rcx
  41af01:	lea    rcx,[rsp+0x20]
  41af06:	mov    QWORD PTR [rsp+0x20],rax
  41af0b:	mov    eax,DWORD PTR [rdx+0x8]
  41af0e:	mov    DWORD PTR [rsp+0x28],eax
  41af12:	call   0x41ad80
  41af17:	test   eax,eax
  41af19:	jne    0x41af40
  41af1b:	cmp    esi,ebp
  41af1d:	sete   dl
  41af20:	cmp    edi,DWORD PTR [rbx+0x4]
  41af23:	sete   al
  41af26:	and    eax,edx
  41af28:	xor    edx,edx
  41af2a:	cmp    r12d,DWORD PTR [rbx+0x8]
  41af2e:	sete   dl
  41af31:	and    eax,edx
  41af33:	add    rsp,0x30
  41af37:	pop    rbx
  41af38:	pop    rsi
  41af39:	pop    rdi
  41af3a:	pop    rbp
  41af3b:	pop    r12
  41af3d:	ret    
  41af3e:	xchg   ax,ax
  41af40:	cmp    esi,ebp
  41af42:	mov    eax,0x1
  41af47:	jne    0x41af1b
  41af49:	jmp    0x41af33
  41af4b:	nop
  41af4c:	nop
  41af4d:	nop
  41af4e:	nop
  41af4f:	nop
  41af50:	push   r12
  41af52:	push   rbp
  41af53:	push   rdi
  41af54:	push   rsi
  41af55:	push   rbx
  41af56:	sub    rsp,0x20
  41af5a:	mov    rbx,QWORD PTR [rcx+0x8]
  41af5e:	mov    eax,0x1
  41af63:	mov    rsi,rcx
  41af66:	mov    r12,rdx
  41af69:	mov    rdi,r8
  41af6c:	test   rbx,rbx
  41af6f:	cmove  rbx,rax
  41af73:	mov    rax,r8
  41af76:	add    rax,QWORD PTR [rcx+0x10]
  41af7a:	cmp    rbx,rax
  41af7d:	jae    0x41af88
  41af7f:	nop
  41af80:	add    rbx,rbx
  41af83:	cmp    rbx,rax
  41af86:	jb     0x41af80
  41af88:	mov    rcx,QWORD PTR [rsi]
  41af8b:	mov    rdx,rbx
  41af8e:	call   0x41a710
  41af93:	mov    rcx,rax
  41af96:	add    rcx,QWORD PTR [rsi+0x10]
  41af9a:	mov    r8,rdi
  41af9d:	mov    rdx,r12
  41afa0:	mov    rbp,rax
  41afa3:	call   0x42a668
  41afa8:	add    QWORD PTR [rsi+0x10],rdi
  41afac:	mov    QWORD PTR [rsi],rbp
  41afaf:	mov    QWORD PTR [rsi+0x8],rbx
  41afb3:	add    rsp,0x20
  41afb7:	pop    rbx
  41afb8:	pop    rsi
  41afb9:	pop    rdi
  41afba:	pop    rbp
  41afbb:	pop    r12
  41afbd:	ret    
  41afbe:	xchg   ax,ax
  41afc0:	test   r8,r8
  41afc3:	je     0x41afd0
  41afc5:	jmp    0x41af50
  41afc7:	nop    WORD PTR [rax+rax*1+0x0]
  41afd0:	repz ret 
  41afd2:	nop    DWORD PTR [rax+0x0]
  41afd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afe0:	push   rbx
  41afe1:	sub    rsp,0x20
  41afe5:	test   rcx,rcx
  41afe8:	je     0x41b00c
  41afea:	mov    rbx,rcx
  41afed:	mov    rcx,QWORD PTR [rcx]
  41aff0:	call   0x41a7c0
  41aff5:	mov    QWORD PTR [rbx],0x0
  41affc:	mov    QWORD PTR [rbx+0x8],0x0
  41b004:	mov    QWORD PTR [rbx+0x10],0x0
  41b00c:	add    rsp,0x20
  41b010:	pop    rbx
  41b011:	ret    
  41b012:	nop    DWORD PTR [rax+0x0]
  41b016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b020:	mov    QWORD PTR [rcx],0x0
  41b027:	mov    QWORD PTR [rcx+0x8],0x0
  41b02f:	mov    QWORD PTR [rcx+0x10],0x0
  41b037:	ret    
  41b038:	nop    DWORD PTR [rax+rax*1+0x0]
  41b040:	mov    rax,QWORD PTR [rcx]
  41b043:	mov    QWORD PTR [rcx+0x8],0x0
  41b04b:	mov    QWORD PTR [rcx],0x0
  41b052:	mov    QWORD PTR [rcx+0x10],0x0
  41b05a:	ret    
  41b05b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b060:	push   r15
  41b062:	push   r14
  41b064:	push   r13
  41b066:	push   r12
  41b068:	push   rbp
  41b069:	push   rdi
  41b06a:	push   rsi
  41b06b:	push   rbx
  41b06c:	sub    rsp,0x58
  41b070:	lea    rax,[rsp+0xb0]
  41b078:	mov    QWORD PTR [rsp+0xb0],r8
  41b080:	mov    QWORD PTR [rsp+0xb8],r9
  41b088:	mov    rbp,rcx
  41b08b:	mov    rbx,rdx
  41b08e:	mov    r14,rdx
  41b091:	mov    QWORD PTR [rsp+0x28],rax
  41b096:	movzx  eax,BYTE PTR [rdx]
  41b099:	test   al,al
  41b09b:	je     0x41b154
  41b0a1:	lea    rsi,[rip+0x1f128]        # 0x43a1d0
  41b0a8:	lea    r12,[rip+0x1f175]        # 0x43a224
  41b0af:	lea    rdi,[rsp+0x30]
  41b0b4:	xor    r8d,r8d
  41b0b7:	nop    WORD PTR [rax+rax*1+0x0]
  41b0c0:	test   r8d,r8d
  41b0c3:	je     0x41b280
  41b0c9:	sub    eax,0x64
  41b0cc:	cmp    al,0x14
  41b0ce:	ja     0x41b273
  41b0d4:	movzx  eax,al
  41b0d7:	movsxd rax,DWORD PTR [rsi+rax*4]
  41b0db:	add    rax,rsi
  41b0de:	jmp    rax
  41b0e0:	mov    rax,QWORD PTR [rsp+0x28]
  41b0e5:	mov    rcx,rdi
  41b0e8:	mov    r13,rbx
  41b0eb:	lea    rdx,[rax+0x8]
  41b0ef:	mov    r8d,DWORD PTR [rax]
  41b0f2:	mov    QWORD PTR [rsp+0x28],rdx
  41b0f7:	lea    rdx,[rip+0x1f0a8]        # 0x43a1a6
  41b0fe:	call   0x42aab0
  41b103:	sub    rbx,r14
  41b106:	mov    r15,rdi
  41b109:	sub    rbx,0x1
  41b10d:	mov    r8,rbx
  41b110:	jne    0x41b1e0
  41b116:	mov    rcx,r15
  41b119:	call   0x41a520
  41b11e:	mov    rcx,rax
  41b121:	mov    rbx,rax
  41b124:	call   0x42a610
  41b129:	test   rax,rax
  41b12c:	jne    0x41b295
  41b132:	lea    r14,[r13+0x1]
  41b136:	mov    rcx,rbx
  41b139:	call   0x41a7c0
  41b13e:	mov    rax,r14
  41b141:	mov    rbx,rax
  41b144:	xor    r8d,r8d
  41b147:	movzx  eax,BYTE PTR [r13+0x1]
  41b14c:	test   al,al
  41b14e:	jne    0x41b0c0
  41b154:	mov    rcx,r14
  41b157:	call   0x42a610
  41b15c:	test   rax,rax
  41b15f:	je     0x41b170
  41b161:	mov    r8,rax
  41b164:	mov    rdx,r14
  41b167:	mov    rcx,rbp
  41b16a:	call   0x41af50
  41b16f:	nop
  41b170:	add    rsp,0x58
  41b174:	pop    rbx
  41b175:	pop    rsi
  41b176:	pop    rdi
  41b177:	pop    rbp
  41b178:	pop    r12
  41b17a:	pop    r13
  41b17c:	pop    r14
  41b17e:	pop    r15
  41b180:	ret    
  41b181:	mov    rax,QWORD PTR [rsp+0x28]
  41b186:	mov    rcx,rdi
  41b189:	mov    r13,rbx
  41b18c:	lea    rdx,[rax+0x8]
  41b190:	mov    r8d,DWORD PTR [rax]
  41b193:	mov    QWORD PTR [rsp+0x28],rdx
  41b198:	lea    rdx,[rip+0x1f004]        # 0x43a1a3
  41b19f:	call   0x42aab0
  41b1a4:	jmp    0x41b103
  41b1a9:	nop    DWORD PTR [rax+0x0]
  41b1b0:	mov    rax,QWORD PTR [rsp+0x28]
  41b1b5:	mov    r15,QWORD PTR [rax]
  41b1b8:	lea    rdx,[rax+0x8]
  41b1bc:	mov    QWORD PTR [rsp+0x28],rdx
  41b1c1:	test   r15,r15
  41b1c4:	je     0x41b273
  41b1ca:	mov    r13,rbx
  41b1cd:	sub    rbx,r14
  41b1d0:	sub    rbx,0x1
  41b1d4:	mov    r8,rbx
  41b1d7:	je     0x41b116
  41b1dd:	nop    DWORD PTR [rax]
  41b1e0:	mov    rdx,r14
  41b1e3:	mov    rcx,rbp
  41b1e6:	call   0x41af50
  41b1eb:	jmp    0x41b116
  41b1f0:	mov    rax,QWORD PTR [rsp+0x28]
  41b1f5:	mov    rcx,rdi
  41b1f8:	mov    r13,rbx
  41b1fb:	lea    rdx,[rax+0x8]
  41b1ff:	mov    r8d,DWORD PTR [rax]
  41b202:	mov    QWORD PTR [rsp+0x28],rdx
  41b207:	lea    rdx,[rip+0x1ef9b]        # 0x43a1a9
  41b20e:	call   0x42aab0
  41b213:	jmp    0x41b103
  41b218:	nop    DWORD PTR [rax+rax*1+0x0]
  41b220:	movzx  eax,BYTE PTR [rbx+0x1]
  41b224:	lea    r13,[rbx+0x1]
  41b228:	sub    eax,0x64
  41b22b:	cmp    al,0x14
  41b22d:	ja     0x41b270
  41b22f:	movzx  eax,al
  41b232:	movsxd rax,DWORD PTR [r12+rax*4]
  41b236:	add    rax,r12
  41b239:	jmp    rax
  41b23b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b240:	mov    rax,QWORD PTR [rsp+0x28]
  41b245:	mov    rcx,rdi
  41b248:	mov    r13,rbx
  41b24b:	lea    rdx,[rax+0x8]
  41b24f:	mov    r8d,DWORD PTR [rax]
  41b252:	mov    QWORD PTR [rsp+0x28],rdx
  41b257:	lea    rdx,[rip+0x1ef42]        # 0x43a1a0
  41b25e:	call   0x42aab0
  41b263:	jmp    0x41b103
  41b268:	nop    DWORD PTR [rax+rax*1+0x0]
  41b270:	mov    rbx,r13
  41b273:	lea    rax,[rbx+0x1]
  41b277:	mov    r13,rbx
  41b27a:	jmp    0x41b141
  41b27f:	nop
  41b280:	xor    r8d,r8d
  41b283:	cmp    al,0x25
  41b285:	mov    r13,rbx
  41b288:	sete   r8b
  41b28c:	add    rbx,0x1
  41b290:	jmp    0x41b147
  41b295:	mov    r8,rax
  41b298:	mov    rdx,rbx
  41b29b:	mov    rcx,rbp
  41b29e:	call   0x41af50
  41b2a3:	jmp    0x41b132
  41b2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2b0:	mov    rax,QWORD PTR [rsp+0x28]
  41b2b5:	mov    rcx,rdi
  41b2b8:	lea    rdx,[rax+0x8]
  41b2bc:	mov    r8d,DWORD PTR [rax]
  41b2bf:	mov    QWORD PTR [rsp+0x28],rdx
  41b2c4:	lea    rdx,[rip+0x1eee9]        # 0x43a1b4
  41b2cb:	call   0x42aab0
  41b2d0:	jmp    0x41b103
  41b2d5:	mov    rax,QWORD PTR [rsp+0x28]
  41b2da:	mov    rcx,rdi
  41b2dd:	lea    rdx,[rax+0x8]
  41b2e1:	mov    r8d,DWORD PTR [rax]
  41b2e4:	mov    QWORD PTR [rsp+0x28],rdx
  41b2e9:	lea    rdx,[rip+0x1eebc]        # 0x43a1ac
  41b2f0:	call   0x42aab0
  41b2f5:	jmp    0x41b103
  41b2fa:	nop    WORD PTR [rax+rax*1+0x0]
  41b300:	movzx  eax,BYTE PTR [rbx+0x2]
  41b304:	lea    r13,[rbx+0x2]
  41b308:	cmp    al,0x6f
  41b30a:	je     0x41b3ec
  41b310:	jle    0x41b3bf
  41b316:	cmp    al,0x75
  41b318:	je     0x41b39a
  41b31e:	cmp    al,0x78
  41b320:	jne    0x41b270
  41b326:	mov    rax,QWORD PTR [rsp+0x28]
  41b32b:	mov    rcx,rdi
  41b32e:	lea    rdx,[rax+0x8]
  41b332:	mov    r8,QWORD PTR [rax]
  41b335:	mov    QWORD PTR [rsp+0x28],rdx
  41b33a:	lea    rdx,[rip+0x1ee85]        # 0x43a1c6
  41b341:	call   0x42aab0
  41b346:	jmp    0x41b103
  41b34b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b350:	mov    rax,QWORD PTR [rsp+0x28]
  41b355:	mov    rcx,rdi
  41b358:	lea    rdx,[rax+0x8]
  41b35c:	mov    r8d,DWORD PTR [rax]
  41b35f:	mov    QWORD PTR [rsp+0x28],rdx
  41b364:	lea    rdx,[rip+0x1ee4d]        # 0x43a1b8
  41b36b:	call   0x42aab0
  41b370:	jmp    0x41b103
  41b375:	mov    rax,QWORD PTR [rsp+0x28]
  41b37a:	mov    rcx,rdi
  41b37d:	lea    rdx,[rax+0x8]
  41b381:	mov    r8d,DWORD PTR [rax]
  41b384:	mov    QWORD PTR [rsp+0x28],rdx
  41b389:	lea    rdx,[rip+0x1ee20]        # 0x43a1b0
  41b390:	call   0x42aab0
  41b395:	jmp    0x41b103
  41b39a:	mov    rax,QWORD PTR [rsp+0x28]
  41b39f:	mov    rcx,rdi
  41b3a2:	lea    rdx,[rax+0x8]
  41b3a6:	mov    r8,QWORD PTR [rax]
  41b3a9:	mov    QWORD PTR [rsp+0x28],rdx
  41b3ae:	lea    rdx,[rip+0x1ee0c]        # 0x43a1c1
  41b3b5:	call   0x42aab0
  41b3ba:	jmp    0x41b103
  41b3bf:	cmp    al,0x64
  41b3c1:	jne    0x41b270
  41b3c7:	mov    rax,QWORD PTR [rsp+0x28]
  41b3cc:	mov    rcx,rdi
  41b3cf:	lea    rdx,[rax+0x8]
  41b3d3:	mov    r8,QWORD PTR [rax]
  41b3d6:	mov    QWORD PTR [rsp+0x28],rdx
  41b3db:	lea    rdx,[rip+0x1edda]        # 0x43a1bc
  41b3e2:	call   0x42aab0
  41b3e7:	jmp    0x41b103
  41b3ec:	mov    rax,QWORD PTR [rsp+0x28]
  41b3f1:	mov    rcx,rdi
  41b3f4:	lea    rdx,[rax+0x8]
  41b3f8:	mov    r8,QWORD PTR [rax]
  41b3fb:	mov    QWORD PTR [rsp+0x28],rdx
  41b400:	lea    rdx,[rip+0x1edc4]        # 0x43a1cb
  41b407:	call   0x42aab0
  41b40c:	jmp    0x41b103
  41b411:	nop
  41b412:	nop
  41b413:	nop
  41b414:	nop
  41b415:	nop
  41b416:	nop
  41b417:	nop
  41b418:	nop
  41b419:	nop
  41b41a:	nop
  41b41b:	nop
  41b41c:	nop
  41b41d:	nop
  41b41e:	nop
  41b41f:	nop
  41b420:	push   rbp
  41b421:	push   r15
  41b423:	push   r14
  41b425:	push   r13
  41b427:	push   r12
  41b429:	push   rdi
  41b42a:	push   rsi
  41b42b:	push   rbx
  41b42c:	sub    rsp,0x48
  41b430:	lea    rbp,[rsp+0x80]
  41b438:	mov    rsi,QWORD PTR [rcx]
  41b43b:	mov    rdi,rcx
  41b43e:	mov    rcx,rsi
  41b441:	call   0x42a610
  41b446:	add    rax,0x1f
  41b44a:	and    rax,0xfffffffffffffff0
  41b44e:	call   0x425730
  41b453:	lea    rcx,[rip+0x1ef7a]        # 0x43a3d4
  41b45a:	sub    rsp,rax
  41b45d:	movzx  eax,BYTE PTR [rsi]
  41b460:	lea    rbx,[rsp+0x20]
  41b465:	lea    r8,[rbx+0x1]
  41b469:	mov    r12,rbx
  41b46c:	test   al,al
  41b46e:	lea    r10,[r8-0x1]
  41b472:	je     0x41b4b7
  41b474:	cmp    al,0x22
  41b476:	je     0x41b4b7
  41b478:	cmp    al,0x5c
  41b47a:	jne    0x41b4a0
  41b47c:	movsx  edx,BYTE PTR [rsi+0x1]
  41b480:	lea    r9,[rsi+0x2]
  41b484:	lea    eax,[rdx-0x22]
  41b487:	cmp    al,0x54
  41b489:	ja     0x41b660
  41b48f:	movzx  eax,al
  41b492:	movsxd rax,DWORD PTR [rcx+rax*4]
  41b496:	add    rax,rcx
  41b499:	jmp    rax
  41b49b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b4a0:	add    rsi,0x1
  41b4a4:	mov    BYTE PTR [r8-0x1],al
  41b4a8:	movzx  eax,BYTE PTR [rsi]
  41b4ab:	add    r8,0x1
  41b4af:	lea    r10,[r8-0x1]
  41b4b3:	test   al,al
  41b4b5:	jne    0x41b474
  41b4b7:	mov    BYTE PTR [r10],0x0
  41b4bb:	mov    QWORD PTR [rdi],rsi
  41b4be:	mov    rdx,rbx
  41b4c1:	mov    ecx,DWORD PTR [rdx]
  41b4c3:	add    rdx,0x4
  41b4c7:	lea    eax,[rcx-0x1010101]
  41b4cd:	not    ecx
  41b4cf:	and    eax,ecx
  41b4d1:	and    eax,0x80808080
  41b4d6:	je     0x41b4c1
  41b4d8:	mov    ecx,eax
  41b4da:	shr    ecx,0x10
  41b4dd:	test   eax,0x8080
  41b4e2:	cmove  eax,ecx
  41b4e5:	lea    rcx,[rdx+0x2]
  41b4e9:	cmove  rdx,rcx
  41b4ed:	add    al,al
  41b4ef:	sbb    rdx,0x3
  41b4f3:	sub    rdx,rbx
  41b4f6:	lea    rcx,[rdx+rdx*1+0x3e8]
  41b4fe:	call   0x41a6e0
  41b503:	mov    rsi,rax
  41b506:	mov    rax,rbx
  41b509:	mov    ecx,DWORD PTR [rax]
  41b50b:	add    rax,0x4
  41b50f:	lea    edx,[rcx-0x1010101]
  41b515:	not    ecx
  41b517:	and    edx,ecx
  41b519:	and    edx,0x80808080
  41b51f:	je     0x41b509
  41b521:	mov    ecx,edx
  41b523:	mov    r14,r12
  41b526:	shr    ecx,0x10
  41b529:	test   edx,0x8080
  41b52f:	cmove  edx,ecx
  41b532:	lea    rcx,[rax+0x2]
  41b536:	cmove  rax,rcx
  41b53a:	add    dl,dl
  41b53c:	sbb    rax,0x3
  41b540:	sub    rax,rbx
  41b543:	lea    ecx,[rax+0x2]
  41b546:	movsxd rcx,ecx
  41b549:	shl    rcx,0x4
  41b54d:	call   0x41a6e0
  41b552:	mov    rdx,rbx
  41b555:	mov    r15,rax
  41b558:	mov    DWORD PTR [rbp-0x44],0x0
  41b55f:	jmp    0x41b572
  41b561:	cmp    r8b,0x25
  41b565:	lea    r12,[r14+0x1]
  41b569:	je     0x41b670
  41b56f:	mov    r14,r12
  41b572:	movzx  r8d,BYTE PTR [r14]
  41b576:	test   r8b,r8b
  41b579:	jne    0x41b561
  41b57b:	mov    rdi,r14
  41b57e:	mov    rcx,rsi
  41b581:	sub    rdi,rdx
  41b584:	mov    r8,rdi
  41b587:	call   0x42a600
  41b58c:	movsxd rax,DWORD PTR [rbp-0x44]
  41b590:	mov    BYTE PTR [rsi+rdi*1],0x0
  41b594:	shl    rax,0x4
  41b598:	lea    rdx,[r15+rax*1]
  41b59c:	lea    rax,[r15+rax*1+0x10]
  41b5a1:	mov    QWORD PTR [rdx],rsi
  41b5a4:	mov    DWORD PTR [rdx+0x8],0x0
  41b5ab:	mov    QWORD PTR [rax],0x0
  41b5b2:	mov    DWORD PTR [rax+0x8],0x0
  41b5b9:	mov    rax,r15
  41b5bc:	lea    rsp,[rbp-0x38]
  41b5c0:	pop    rbx
  41b5c1:	pop    rsi
  41b5c2:	pop    rdi
  41b5c3:	pop    r12
  41b5c5:	pop    r13
  41b5c7:	pop    r14
  41b5c9:	pop    r15
  41b5cb:	pop    rbp
  41b5cc:	ret    
  41b5cd:	nop    DWORD PTR [rax]
  41b5d0:	mov    BYTE PTR [r8-0x1],0xb
  41b5d5:	mov    rsi,r9
  41b5d8:	jmp    0x41b4a8
  41b5dd:	nop    DWORD PTR [rax]
  41b5e0:	mov    BYTE PTR [r8-0x1],0x9
  41b5e5:	mov    rsi,r9
  41b5e8:	jmp    0x41b4a8
  41b5ed:	nop    DWORD PTR [rax]
  41b5f0:	mov    BYTE PTR [r8-0x1],0xd
  41b5f5:	mov    rsi,r9
  41b5f8:	jmp    0x41b4a8
  41b5fd:	nop    DWORD PTR [rax]
  41b600:	mov    BYTE PTR [r8-0x1],0xa
  41b605:	mov    rsi,r9
  41b608:	jmp    0x41b4a8
  41b60d:	nop    DWORD PTR [rax]
  41b610:	mov    BYTE PTR [r8-0x1],0xc
  41b615:	mov    rsi,r9
  41b618:	jmp    0x41b4a8
  41b61d:	nop    DWORD PTR [rax]
  41b620:	mov    BYTE PTR [r8-0x1],0x8
  41b625:	mov    rsi,r9
  41b628:	jmp    0x41b4a8
  41b62d:	nop    DWORD PTR [rax]
  41b630:	mov    BYTE PTR [r8-0x1],0x7
  41b635:	mov    rsi,r9
  41b638:	jmp    0x41b4a8
  41b63d:	nop    DWORD PTR [rax]
  41b640:	mov    BYTE PTR [r8-0x1],0x5c
  41b645:	mov    rsi,r9
  41b648:	jmp    0x41b4a8
  41b64d:	nop    DWORD PTR [rax]
  41b650:	mov    BYTE PTR [r8-0x1],0x22
  41b655:	mov    rsi,r9
  41b658:	jmp    0x41b4a8
  41b65d:	nop    DWORD PTR [rax]
  41b660:	lea    rcx,[rip+0x1ec19]        # 0x43a280
  41b667:	call   0x41d140
  41b66c:	nop    DWORD PTR [rax+0x0]
  41b670:	movzx  edi,BYTE PTR [r14+0x1]
  41b675:	cmp    dil,0x25
  41b679:	jne    0x41b684
  41b67b:	add    r14,0x2
  41b67f:	jmp    0x41b572
  41b684:	mov    rbx,r14
  41b687:	mov    rcx,rsi
  41b68a:	sub    rbx,rdx
  41b68d:	mov    r8,rbx
  41b690:	call   0x42a600
  41b695:	movsxd r13,DWORD PTR [rbp-0x44]
  41b699:	lea    rax,[rsi+rbx*1]
  41b69d:	mov    BYTE PTR [rax],0x0
  41b6a0:	mov    QWORD PTR [rbp-0x50],rax
  41b6a4:	shl    r13,0x4
  41b6a8:	test   dil,dil
  41b6ab:	lea    rax,[r15+r13*1]
  41b6af:	mov    QWORD PTR [rbp-0x58],r13
  41b6b3:	mov    QWORD PTR [rax],rsi
  41b6b6:	mov    DWORD PTR [rax+0x8],0x0
  41b6bd:	je     0x41b730
  41b6bf:	xor    ebx,ebx
  41b6c1:	mov    DWORD PTR [rbp-0x48],0x0
  41b6c8:	xor    r13d,r13d
  41b6cb:	xor    esi,esi
  41b6cd:	jmp    0x41b6fe
  41b6cf:	nop
  41b6d0:	cmp    dil,0x30
  41b6d4:	je     0x41b7b0
  41b6da:	cmp    dil,0x20
  41b6de:	je     0x41b7c0
  41b6e4:	cmp    dil,0x2b
  41b6e8:	mov    eax,0x1
  41b6ed:	cmove  ebx,eax
  41b6f0:	add    r12,0x1
  41b6f4:	movzx  edi,BYTE PTR [r12]
  41b6f9:	test   dil,dil
  41b6fc:	je     0x41b730
  41b6fe:	lea    rcx,[rip+0x1ebaf]        # 0x43a2b4
  41b705:	movsx  edx,dil
  41b709:	call   0x42a630
  41b70e:	test   rax,rax
  41b711:	je     0x41b744
  41b713:	cmp    dil,0x23
  41b717:	jne    0x41b6d0
  41b719:	add    r12,0x1
  41b71d:	movzx  edi,BYTE PTR [r12]
  41b722:	mov    esi,0x1
  41b727:	test   dil,dil
  41b72a:	jne    0x41b6fe
  41b72c:	nop    DWORD PTR [rax+0x0]
  41b730:	lea    rcx,[rip+0x1ebf9]        # 0x43a330
  41b737:	call   0x41d140
  41b73c:	nop    DWORD PTR [rax+0x0]
  41b740:	add    r12,0x1
  41b744:	movzx  edi,BYTE PTR [r12]
  41b749:	test   dil,dil
  41b74c:	je     0x41b730
  41b74e:	lea    rcx,[rip+0x1eb65]        # 0x43a2ba
  41b755:	movsx  edx,dil
  41b759:	call   0x42a630
  41b75e:	test   rax,rax
  41b761:	jne    0x41b740
  41b763:	cmp    dil,0x2e
  41b767:	jne    0x41b7cc
  41b769:	movsx  edx,BYTE PTR [r12+0x1]
  41b76f:	lea    rdi,[r12+0x1]
  41b774:	test   dl,dl
  41b776:	jne    0x41b78b
  41b778:	jmp    0x41b730
  41b77a:	nop    WORD PTR [rax+rax*1+0x0]
  41b780:	add    rdi,0x1
  41b784:	movsx  edx,BYTE PTR [rdi]
  41b787:	test   dl,dl
  41b789:	je     0x41b730
  41b78b:	lea    rcx,[rip+0x1eb28]        # 0x43a2ba
  41b792:	call   0x42a630
  41b797:	test   rax,rax
  41b79a:	jne    0x41b780
  41b79c:	mov    r12,rdi
  41b79f:	movzx  r9d,BYTE PTR [rdi]
  41b7a3:	mov    DWORD PTR [rbp-0x60],0x1
  41b7aa:	jmp    0x41b7d8
  41b7ac:	nop    DWORD PTR [rax+0x0]
  41b7b0:	mov    r13d,0x1
  41b7b6:	jmp    0x41b6f0
  41b7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7c0:	mov    DWORD PTR [rbp-0x48],0x1
  41b7c7:	jmp    0x41b6f0
  41b7cc:	movzx  r9d,BYTE PTR [r12]
  41b7d1:	mov    DWORD PTR [rbp-0x60],0x0
  41b7d8:	cmp    r9b,0x68
  41b7dc:	je     0x41b830
  41b7de:	cmp    r9b,0x6c
  41b7e2:	je     0x41b852
  41b7e4:	cmp    r9b,0x4c
  41b7e8:	je     0x41bab5
  41b7ee:	cmp    r9b,0x48
  41b7f2:	je     0x41bada
  41b7f8:	xor    r10d,r10d
  41b7fb:	cmp    r9b,0x44
  41b7ff:	je     0x41b87a
  41b801:	xor    r11d,r11d
  41b804:	mov    DWORD PTR [rbp-0x5c],0x0
  41b80b:	xor    ecx,ecx
  41b80d:	xor    edx,edx
  41b80f:	xor    eax,eax
  41b811:	cmp    r9b,0x78
  41b815:	ja     0x41baa5
  41b81b:	lea    rdi,[rip+0x1ed06]        # 0x43a528
  41b822:	movzx  r8d,r9b
  41b826:	movsxd r8,DWORD PTR [rdi+r8*4]
  41b82a:	add    r8,rdi
  41b82d:	jmp    r8
  41b830:	movzx  r9d,BYTE PTR [r12+0x1]
  41b836:	xor    r10d,r10d
  41b839:	add    r12,0x1
  41b83d:	xor    r11d,r11d
  41b840:	mov    DWORD PTR [rbp-0x5c],0x0
  41b847:	mov    ecx,0x1
  41b84c:	xor    edx,edx
  41b84e:	xor    eax,eax
  41b850:	jmp    0x41b811
  41b852:	movzx  r9d,BYTE PTR [r12+0x1]
  41b858:	cmp    r9b,0x6c
  41b85c:	je     0x41b8a9
  41b85e:	add    r12,0x1
  41b862:	xor    r10d,r10d
  41b865:	xor    r11d,r11d
  41b868:	mov    DWORD PTR [rbp-0x5c],0x0
  41b86f:	xor    ecx,ecx
  41b871:	xor    edx,edx
  41b873:	mov    eax,0x1
  41b878:	jmp    0x41b811
  41b87a:	movzx  r9d,BYTE PTR [r12+0x1]
  41b880:	cmp    r9b,0x44
  41b884:	je     0x41bb34
  41b88a:	add    r12,0x1
  41b88e:	xor    r10d,r10d
  41b891:	mov    r11d,0x1
  41b897:	mov    DWORD PTR [rbp-0x5c],0x0
  41b89e:	xor    ecx,ecx
  41b8a0:	xor    edx,edx
  41b8a2:	xor    eax,eax
  41b8a4:	jmp    0x41b811
  41b8a9:	movzx  r9d,BYTE PTR [r12+0x2]
  41b8af:	xor    r10d,r10d
  41b8b2:	add    r12,0x2
  41b8b6:	xor    r11d,r11d
  41b8b9:	mov    DWORD PTR [rbp-0x5c],0x0
  41b8c0:	xor    ecx,ecx
  41b8c2:	xor    edx,edx
  41b8c4:	mov    eax,0x2
  41b8c9:	jmp    0x41b811
  41b8ce:	xor    esi,esi
  41b8d0:	mov    ecx,DWORD PTR [rbp-0x48]
  41b8d3:	or     ecx,ebx
  41b8d5:	mov    ecx,0x1
  41b8da:	cmovne esi,ecx
  41b8dd:	test   eax,eax
  41b8df:	mov    r11d,0x1
  41b8e5:	je     0x41b8f5
  41b8e7:	xor    r11d,r11d
  41b8ea:	cmp    eax,0x1
  41b8ed:	setne  r11b
  41b8f1:	add    r11d,0x2
  41b8f5:	test   edx,edx
  41b8f7:	je     0x41b9f8
  41b8fd:	movsx  edx,r9b
  41b901:	lea    rcx,[rip+0x1ea90]        # 0x43a398
  41b908:	call   0x41d140
  41b90d:	nop    DWORD PTR [rax]
  41b910:	mov    r8d,DWORD PTR [rbp-0x5c]
  41b914:	or     r8d,r11d
  41b917:	mov    r11d,0xa
  41b91d:	or     r8d,r10d
  41b920:	jne    0x41b92c
  41b922:	cmp    edx,0x1
  41b925:	sbb    r11d,r11d
  41b928:	add    r11d,0x9
  41b92c:	or     ecx,eax
  41b92e:	jne    0x41b8fd
  41b930:	mov    rdi,QWORD PTR [rbp-0x50]
  41b934:	add    r12,0x1
  41b938:	add    rdi,0x1
  41b93c:	lea    eax,[r11-0x6]
  41b940:	mov    rbx,r12
  41b943:	mov    DWORD PTR [rbp-0x48],r11d
  41b947:	sub    rbx,r14
  41b94a:	cmp    eax,0x1
  41b94d:	jbe    0x41bb06
  41b953:	mov    rdx,r14
  41b956:	mov    r8,rbx
  41b959:	mov    rcx,rdi
  41b95c:	call   0x42a600
  41b961:	mov    r11d,DWORD PTR [rbp-0x48]
  41b965:	lea    rax,[rdi+rbx*1]
  41b969:	mov    r14,r12
  41b96c:	mov    BYTE PTR [rax],0x0
  41b96f:	lea    rsi,[rax+0x1]
  41b973:	mov    rax,QWORD PTR [rbp-0x58]
  41b977:	add    DWORD PTR [rbp-0x44],0x2
  41b97b:	mov    rdx,r12
  41b97e:	lea    rax,[r15+rax*1+0x10]
  41b983:	mov    QWORD PTR [rax],rdi
  41b986:	mov    DWORD PTR [rax+0x8],r11d
  41b98a:	jmp    0x41b572
  41b98f:	lea    rcx,[rip+0x1e932]        # 0x43a2c8
  41b996:	call   0x41d140
  41b99b:	cmp    eax,0x1
  41b99e:	sbb    r11d,r11d
  41b9a1:	add    r11d,0x6
  41b9a5:	cmp    eax,0x1
  41b9a8:	setg   al
  41b9ab:	or     al,cl
  41b9ad:	jne    0x41b9c1
  41b9af:	test   edx,edx
  41b9b1:	jne    0x41b9c1
  41b9b3:	mov    eax,DWORD PTR [rbp-0x48]
  41b9b6:	or     ebx,r13d
  41b9b9:	or     eax,ebx
  41b9bb:	je     0x41b930
  41b9c1:	mov    edx,0x73
  41b9c6:	jmp    0x41b901
  41b9cb:	mov    r8d,DWORD PTR [rbp-0x60]
  41b9cf:	test   r8d,r8d
  41b9d2:	jne    0x41bafc
  41b9d8:	or     ebx,r13d
  41b9db:	or     esi,ebx
  41b9dd:	mov    ebx,DWORD PTR [rbp-0x48]
  41b9e0:	or     ebx,esi
  41b9e2:	jne    0x41bafc
  41b9e8:	or     edx,eax
  41b9ea:	xor    esi,esi
  41b9ec:	mov    r11d,0x4
  41b9f2:	or     edx,ecx
  41b9f4:	setne  sil
  41b9f8:	test   esi,esi
  41b9fa:	jne    0x41b8fd
  41ba00:	mov    rdi,QWORD PTR [rbp-0x50]
  41ba04:	add    r12,0x1
  41ba08:	add    rdi,0x1
  41ba0c:	cmp    eax,0x2
  41ba0f:	jne    0x41b93c
  41ba15:	mov    rbx,r12
  41ba18:	mov    rdx,r14
  41ba1b:	mov    rcx,rdi
  41ba1e:	sub    rbx,r14
  41ba21:	mov    DWORD PTR [rbp-0x48],r11d
  41ba25:	sub    ebx,0x3
  41ba28:	movsxd rsi,ebx
  41ba2b:	mov    r8,rsi
  41ba2e:	call   0x42a600
  41ba33:	lea    eax,[rbx+0x2]
  41ba36:	mov    DWORD PTR [rdi+rsi*1],0x343649
  41ba3d:	mov    r11d,DWORD PTR [rbp-0x48]
  41ba41:	cdqe   
  41ba43:	movzx  eax,BYTE PTR [r14+rax*1]
  41ba48:	mov    r14,r12
  41ba4b:	mov    BYTE PTR [rdi+rsi*1+0x3],al
  41ba4f:	lea    rax,[rdi+rsi*1+0x4]
  41ba54:	jmp    0x41b96c
  41ba59:	lea    rcx,[rip+0x1e8a0]        # 0x43a300
  41ba60:	call   0x41d140
  41ba65:	cmp    eax,0x1
  41ba68:	sbb    r11d,r11d
  41ba6b:	and    r11d,0xfffffffa
  41ba6f:	add    r11d,0x7
  41ba73:	cmp    eax,0x1
  41ba76:	setg   al
  41ba79:	or     al,cl
  41ba7b:	jne    0x41ba94
  41ba7d:	test   edx,edx
  41ba7f:	jne    0x41ba94
  41ba81:	mov    eax,r13d
  41ba84:	or     eax,ebx
  41ba86:	or     eax,DWORD PTR [rbp-0x60]
  41ba89:	mov    ebx,DWORD PTR [rbp-0x48]
  41ba8c:	or     ebx,eax
  41ba8e:	je     0x41b930
  41ba94:	mov    edx,0x63
  41ba99:	jmp    0x41b901
  41ba9e:	xor    esi,esi
  41baa0:	jmp    0x41b8dd
  41baa5:	lea    rcx,[rip+0x1e8bc]        # 0x43a368
  41baac:	movsx  edx,r9b
  41bab0:	call   0x41d140
  41bab5:	movzx  r9d,BYTE PTR [r12+0x1]
  41babb:	xor    r10d,r10d
  41babe:	add    r12,0x1
  41bac2:	xor    r11d,r11d
  41bac5:	mov    DWORD PTR [rbp-0x5c],0x0
  41bacc:	xor    ecx,ecx
  41bace:	mov    edx,0x1
  41bad3:	xor    eax,eax
  41bad5:	jmp    0x41b811
  41bada:	movzx  r9d,BYTE PTR [r12+0x1]
  41bae0:	xor    r10d,r10d
  41bae3:	add    r12,0x1
  41bae7:	xor    r11d,r11d
  41baea:	mov    DWORD PTR [rbp-0x5c],0x1
  41baf1:	xor    ecx,ecx
  41baf3:	xor    edx,edx
  41baf5:	xor    eax,eax
  41baf7:	jmp    0x41b811
  41bafc:	mov    edx,0x70
  41bb01:	jmp    0x41b901
  41bb06:	sub    ebx,0x2
  41bb09:	mov    rdx,r14
  41bb0c:	mov    rcx,rdi
  41bb0f:	movsxd rbx,ebx
  41bb12:	mov    r14,r12
  41bb15:	mov    r8,rbx
  41bb18:	call   0x42a600
  41bb1d:	mov    eax,0x73
  41bb22:	mov    r11d,DWORD PTR [rbp-0x48]
  41bb26:	mov    WORD PTR [rdi+rbx*1],ax
  41bb2a:	lea    rax,[rdi+rbx*1+0x2]
  41bb2f:	jmp    0x41b96c
  41bb34:	movzx  r9d,BYTE PTR [r12+0x2]
  41bb3a:	mov    r10d,0x1
  41bb40:	add    r12,0x2
  41bb44:	jmp    0x41b801
  41bb49:	nop    DWORD PTR [rax+0x0]
  41bb50:	push   rbx
  41bb51:	sub    rsp,0x20
  41bb55:	test   rcx,rcx
  41bb58:	je     0x41bb80
  41bb5a:	mov    rbx,rcx
  41bb5d:	mov    rcx,QWORD PTR [rcx]
  41bb60:	test   rcx,rcx
  41bb63:	je     0x41bb6a
  41bb65:	call   0x41a7c0
  41bb6a:	mov    rcx,rbx
  41bb6d:	add    rsp,0x20
  41bb71:	pop    rbx
  41bb72:	jmp    0x41a7c0
  41bb77:	nop    WORD PTR [rax+rax*1+0x0]
  41bb80:	add    rsp,0x20
  41bb84:	pop    rbx
  41bb85:	ret    
  41bb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb90:	push   rbx
  41bb91:	sub    rsp,0x20
  41bb95:	test   rcx,rcx
  41bb98:	mov    rax,rcx
  41bb9b:	je     0x41bbb4
  41bb9d:	mov    rcx,QWORD PTR [rcx]
  41bba0:	test   rcx,rcx
  41bba3:	je     0x41bbb4
  41bba5:	mov    rbx,rax
  41bba8:	call   0x41bb50
  41bbad:	mov    QWORD PTR [rbx],0x0
  41bbb4:	add    rsp,0x20
  41bbb8:	pop    rbx
  41bbb9:	ret    
  41bbba:	nop
  41bbbb:	nop
  41bbbc:	nop
  41bbbd:	nop
  41bbbe:	nop
  41bbbf:	nop
  41bbc0:	mov    ecx,DWORD PTR [rcx]
  41bbc2:	jmp    0x42a580
  41bbc7:	nop    WORD PTR [rax+rax*1+0x0]
  41bbd0:	ret    
  41bbd1:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bbe0:	push   rbx
  41bbe1:	sub    rsp,0x30
  41bbe5:	mov    rax,QWORD PTR [rip+0x32da4]        # 0x44e990
  41bbec:	mov    ebx,ecx
  41bbee:	test   rax,rax
  41bbf1:	je     0x41bc12
  41bbf3:	mov    edx,DWORD PTR [rax]
  41bbf5:	mov    r8d,DWORD PTR [rax+0x4]
  41bbf9:	cmp    r8d,edx
  41bbfc:	je     0x41bc12
  41bbfe:	cmp    r8d,edx
  41bc01:	jbe    0x41bc3a
  41bc03:	lea    ecx,[rdx+0x1]
  41bc06:	mov    DWORD PTR [rax],ecx
  41bc08:	mov    DWORD PTR [rax+rdx*4+0x8],ebx
  41bc0c:	add    rsp,0x30
  41bc10:	pop    rbx
  41bc11:	ret    
  41bc12:	mov    r8d,0x8
  41bc18:	mov    edx,0x1
  41bc1d:	mov    r9d,0x4
  41bc23:	mov    rcx,rax
  41bc26:	call   0x40ea70
  41bc2b:	mov    QWORD PTR [rip+0x32d5e],rax        # 0x44e990
  41bc32:	mov    edx,DWORD PTR [rax]
  41bc34:	mov    r8d,DWORD PTR [rax+0x4]
  41bc38:	jmp    0x41bbfe
  41bc3a:	lea    rax,[rip+0x1eb30]        # 0x43a771
  41bc41:	lea    r9,[rip+0x1ec38]        # 0x43a880
  41bc48:	lea    r8,[rip+0x1eaf1]        # 0x43a740
  41bc4f:	lea    rcx,[rip+0x1eb05]        # 0x43a75b
  41bc56:	mov    edx,0xa1
  41bc5b:	mov    QWORD PTR [rsp+0x20],rax
  41bc60:	call   0x41d170
  41bc65:	nop
  41bc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc70:	sub    rsp,0x38
  41bc74:	mov    r10,QWORD PTR [rip+0x32d15]        # 0x44e990
  41bc7b:	test   r10,r10
  41bc7e:	je     0x41bcb4
  41bc80:	mov    r8d,DWORD PTR [r10]
  41bc83:	test   r8d,r8d
  41bc86:	je     0x41bcb4
  41bc88:	cmp    ecx,DWORD PTR [r10+0x8]
  41bc8c:	lea    rdx,[r10+0xc]
  41bc90:	mov    eax,0x1
  41bc95:	mov    r9d,0x1
  41bc9b:	jne    0x41bcaf
  41bc9d:	jmp    0x41bcdf
  41bc9f:	nop
  41bca0:	add    rdx,0x4
  41bca4:	cmp    ecx,DWORD PTR [rdx-0x4]
  41bca7:	je     0x41bce2
  41bca9:	add    eax,0x1
  41bcac:	mov    r9d,eax
  41bcaf:	cmp    eax,r8d
  41bcb2:	jne    0x41bca0
  41bcb4:	lea    rax,[rip+0x1eac8]        # 0x43a783
  41bcbb:	lea    r9,[rip+0x1eb8e]        # 0x43a850
  41bcc2:	lea    r8,[rip+0x1eab3]        # 0x43a77c
  41bcc9:	lea    rcx,[rip+0x1ea8b]        # 0x43a75b
  41bcd0:	mov    edx,0xc5
  41bcd5:	mov    QWORD PTR [rsp+0x20],rax
  41bcda:	call   0x41d170
  41bcdf:	xor    r9b,r9b
  41bce2:	sub    r8d,0x1
  41bce6:	mov    r9d,r9d
  41bce9:	mov    eax,DWORD PTR [r10+r8*4+0x8]
  41bcee:	mov    DWORD PTR [r10],r8d
  41bcf1:	mov    DWORD PTR [r10+r9*4+0x8],eax
  41bcf6:	add    rsp,0x38
  41bcfa:	ret    
  41bcfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd00:	ret    
  41bd01:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd10:	jmp    0x42a590
  41bd15:	nop
  41bd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd20:	push   rbp
  41bd21:	push   rdi
  41bd22:	push   rsi
  41bd23:	push   rbx
  41bd24:	sub    rsp,0x28
  41bd28:	lea    rbp,[rsp+0x80]
  41bd30:	mov    rsi,rdx
  41bd33:	mov    edx,DWORD PTR [rip+0x10387]        # 0x42c0c0
  41bd39:	mov    rdi,rcx
  41bd3c:	test   edx,edx
  41bd3e:	jne    0x41bda5
  41bd40:	mov    rcx,rsi
  41bd43:	call   0x42a610
  41bd48:	lea    r9,[rax+0x20]
  41bd4c:	mov    rbx,rax
  41bd4f:	mov    rax,r9
  41bd52:	and    rax,0xfffffffffffffff0
  41bd56:	call   0x425730
  41bd5b:	sub    rsp,rax
  41bd5e:	mov    r8,rbx
  41bd61:	mov    rdx,rsi
  41bd64:	lea    r9,[rsp+0x20]
  41bd69:	mov    rcx,r9
  41bd6c:	call   0x42a668
  41bd71:	mov    r9,rax
  41bd74:	mov    eax,0x65
  41bd79:	mov    rcx,rdi
  41bd7c:	mov    WORD PTR [r9+rbx*1],ax
  41bd81:	mov    rdx,r9
  41bd84:	call   0x42a6e8
  41bd89:	test   rax,rax
  41bd8c:	mov    rbx,rax
  41bd8f:	je     0x41bdc3
  41bd91:	mov    rcx,rbx
  41bd94:	call   0x42a588
  41bd99:	mov    rax,rbx
  41bd9c:	lea    rsp,[rbp-0x58]
  41bda0:	pop    rbx
  41bda1:	pop    rsi
  41bda2:	pop    rdi
  41bda3:	pop    rbp
  41bda4:	ret    
  41bda5:	mov    rdx,rsi
  41bda8:	call   0x42a6e8
  41bdad:	test   rax,rax
  41bdb0:	mov    rbx,rax
  41bdb3:	jne    0x41bd91
  41bdb5:	xor    ebx,ebx
  41bdb7:	mov    rax,rbx
  41bdba:	lea    rsp,[rbp-0x58]
  41bdbe:	pop    rbx
  41bdbf:	pop    rsi
  41bdc0:	pop    rdi
  41bdc1:	pop    rbp
  41bdc2:	ret    
  41bdc3:	call   QWORD PTR [rip+0x359c7]        # 0x451790
  41bdc9:	cmp    DWORD PTR [rax],0x16
  41bdcc:	jne    0x41bdb5
  41bdce:	mov    rdx,rsi
  41bdd1:	mov    rcx,rdi
  41bdd4:	call   0x42a6e8
  41bdd9:	test   rax,rax
  41bddc:	mov    rbx,rax
  41bddf:	je     0x41bdb5
  41bde1:	mov    DWORD PTR [rip+0x102d5],0x1        # 0x42c0c0
  41bdeb:	jmp    0x41bd91
  41bded:	nop    DWORD PTR [rax]
  41bdf0:	sub    rsp,0x38
  41bdf4:	lea    rax,[rip+0x1e9a5]        # 0x43a7a0
  41bdfb:	lea    r9,[rip+0x1ea1e]        # 0x43a820
  41be02:	lea    r8,[rip+0x1e973]        # 0x43a77c
  41be09:	lea    rcx,[rip+0x1e94b]        # 0x43a75b
  41be10:	mov    edx,0x168
  41be15:	mov    QWORD PTR [rsp+0x20],rax
  41be1a:	call   0x41d170
  41be1f:	nop
  41be20:	sub    rsp,0x28
  41be24:	call   QWORD PTR [rip+0x35bd6]        # 0x451a00
  41be2a:	add    rsp,0x28
  41be2e:	ret    
  41be2f:	nop
  41be30:	sub    rsp,0x38
  41be34:	lea    rax,[rip+0x1e98d]        # 0x43a7c8
  41be3b:	lea    r9,[rip+0x1e9ae]        # 0x43a7f0
  41be42:	lea    r8,[rip+0x1e933]        # 0x43a77c
  41be49:	lea    rcx,[rip+0x1e90b]        # 0x43a75b
  41be50:	mov    edx,0x191
  41be55:	mov    QWORD PTR [rsp+0x20],rax
  41be5a:	call   0x41d170
  41be5f:	nop
  41be60:	push   rbx
  41be61:	sub    rsp,0x20
  41be65:	mov    ebx,ecx
  41be67:	mov    ecx,0x4
  41be6c:	call   0x41a6e0
  41be71:	lea    r8,[rip+0xffffffffffffe948]        # 0x41a7c0
  41be78:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x41bbc0
  41be7f:	mov    rdx,rax
  41be82:	mov    DWORD PTR [rax],ebx
  41be84:	add    rsp,0x20
  41be88:	pop    rbx
  41be89:	jmp    0x41d2d0
  41be8e:	nop
  41be8f:	nop
  41be90:	sub    rsp,0x28
  41be94:	mov    rax,QWORD PTR [rdx+0x20]
  41be98:	mov    r8,rcx
  41be9b:	cmp    rax,0xffffffffffffffff
  41be9f:	je     0x41bea7
  41bea1:	cmp    rax,QWORD PTR [rcx+0x20]
  41bea5:	je     0x41bee0
  41bea7:	mov    rcx,QWORD PTR [rdx+0x18]
  41beab:	test   rcx,rcx
  41beae:	je     0x41bed0
  41beb0:	mov    rdx,QWORD PTR [r8+0x18]
  41beb4:	test   rdx,rdx
  41beb7:	je     0x41bed0
  41beb9:	call   0x42a628
  41bebe:	test   eax,eax
  41bec0:	sete   al
  41bec3:	movzx  eax,al
  41bec6:	add    rsp,0x28
  41beca:	ret    
  41becb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bed0:	xor    eax,eax
  41bed2:	add    rsp,0x28
  41bed6:	ret    
  41bed7:	nop    WORD PTR [rax+rax*1+0x0]
  41bee0:	mov    eax,0x1
  41bee5:	add    rsp,0x28
  41bee9:	ret    
  41beea:	nop    WORD PTR [rax+rax*1+0x0]
  41bef0:	push   rbx
  41bef1:	sub    rsp,0x20
  41bef5:	mov    rbx,rcx
  41bef8:	mov    rcx,QWORD PTR [rcx+0x18]
  41befc:	test   rcx,rcx
  41beff:	je     0x41bf06
  41bf01:	call   0x42a6c8
  41bf06:	mov    rcx,rbx
  41bf09:	add    rsp,0x20
  41bf0d:	pop    rbx
  41bf0e:	jmp    0x42a6c8
  41bf13:	nop    DWORD PTR [rax]
  41bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf20:	push   rdi
  41bf21:	push   rsi
  41bf22:	push   rbx
  41bf23:	sub    rsp,0x20
  41bf27:	mov    rdi,rcx
  41bf2a:	mov    rsi,rdx
  41bf2d:	mov    ecx,0x1
  41bf32:	mov    edx,0x28
  41bf37:	call   0x41a760
  41bf3c:	mov    rbx,rax
  41bf3f:	mov    rax,QWORD PTR [rip+0x2a5fa]        # 0x446540
  41bf46:	mov    rcx,rdi
  41bf49:	mov    rdx,QWORD PTR [rax]
  41bf4c:	mov    eax,DWORD PTR [rax+0x8]
  41bf4f:	mov    QWORD PTR [rbx],rdx
  41bf52:	mov    DWORD PTR [rbx+0x8],eax
  41bf55:	call   0x40e730
  41bf5a:	lea    rcx,[rip+0x32a4f]        # 0x44e9b0
  41bf61:	mov    rdx,rbx
  41bf64:	mov    QWORD PTR [rbx+0x18],rax
  41bf68:	mov    QWORD PTR [rbx+0x20],rsi
  41bf6c:	call   0x4038d0
  41bf71:	mov    DWORD PTR [rip+0x32a25],0x1        # 0x44e9a0
  41bf7b:	add    rsp,0x20
  41bf7f:	pop    rbx
  41bf80:	pop    rsi
  41bf81:	pop    rdi
  41bf82:	ret    
  41bf83:	nop    DWORD PTR [rax]
  41bf86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf90:	push   rbx
  41bf91:	sub    rsp,0x50
  41bf95:	mov    QWORD PTR [rsp+0x38],rcx
  41bf9a:	mov    QWORD PTR [rsp+0x40],rdx
  41bf9f:	lea    r8,[rsp+0x20]
  41bfa4:	lea    rdx,[rip+0xfffffffffffffee5]        # 0x41be90
  41bfab:	lea    rcx,[rip+0x329fe]        # 0x44e9b0
  41bfb2:	call   0x403b90
  41bfb7:	test   rax,rax
  41bfba:	mov    rbx,rax
  41bfbd:	je     0x41bfe0
  41bfbf:	lea    rcx,[rip+0x329ea]        # 0x44e9b0
  41bfc6:	mov    rdx,rax
  41bfc9:	call   0x403960
  41bfce:	mov    rcx,rbx
  41bfd1:	call   0x41bef0
  41bfd6:	mov    DWORD PTR [rip+0x329c0],0x1        # 0x44e9a0
  41bfe0:	add    rsp,0x50
  41bfe4:	pop    rbx
  41bfe5:	ret    
  41bfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bff0:	sub    rsp,0x28
  41bff4:	lea    rdx,[rip+0xfffffffffffffef5]        # 0x41bef0
  41bffb:	lea    rcx,[rip+0x329ae]        # 0x44e9b0
  41c002:	call   0x403900
  41c007:	lea    rcx,[rip+0x329a2]        # 0x44e9b0
  41c00e:	add    rsp,0x28
  41c012:	jmp    0x403d40
  41c017:	nop
  41c018:	nop
  41c019:	nop
  41c01a:	nop
  41c01b:	nop
  41c01c:	nop
  41c01d:	nop
  41c01e:	nop
  41c01f:	nop
  41c020:	jmp    0x41a7c0
  41c025:	nop
  41c026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c030:	push   rsi
  41c031:	push   rbx
  41c032:	sub    rsp,0x28
  41c036:	mov    rbx,rcx
  41c039:	mov    rcx,QWORD PTR [rcx+0x10]
  41c03d:	mov    rsi,rdx
  41c040:	call   0x40af60
  41c045:	test   eax,eax
  41c047:	je     0x41c060
  41c049:	mov    rcx,rsi
  41c04c:	add    rsp,0x28
  41c050:	pop    rbx
  41c051:	pop    rsi
  41c052:	jmp    0x405bc0
  41c057:	nop    WORD PTR [rax+rax*1+0x0]
  41c060:	mov    rcx,QWORD PTR [rbx+0x10]
  41c064:	call   0x40af10
  41c069:	mov    r8,QWORD PTR [rbx+0x18]
  41c06d:	mov    rdx,rsi
  41c070:	mov    rcx,rax
  41c073:	add    rsp,0x28
  41c077:	pop    rbx
  41c078:	pop    rsi
  41c079:	rex.WB jmp r8
  41c07c:	nop    DWORD PTR [rax+0x0]
  41c080:	push   r12
  41c082:	push   rbp
  41c083:	push   rdi
  41c084:	push   rsi
  41c085:	push   rbx
  41c086:	sub    rsp,0x20
  41c08a:	mov    r12,QWORD PTR [rip+0x2a4ef]        # 0x446580
  41c091:	mov    rsi,rcx
  41c094:	movsxd rbp,edx
  41c097:	mov    rbx,QWORD PTR [r12]
  41c09b:	mov    rcx,rbx
  41c09e:	call   0x42a610
  41c0a3:	mov    rdx,rbx
  41c0a6:	mov    r8,rax
  41c0a9:	mov    rcx,rsi
  41c0ac:	mov    rdi,rax
  41c0af:	call   0x42a608
  41c0b4:	test   eax,eax
  41c0b6:	jne    0x41c0d0
  41c0b8:	cmp    rbp,rdi
  41c0bb:	je     0x41c0e0
  41c0bd:	add    rsp,0x20
  41c0c1:	pop    rbx
  41c0c2:	pop    rsi
  41c0c3:	pop    rdi
  41c0c4:	pop    rbp
  41c0c5:	pop    r12
  41c0c7:	ret    
  41c0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0d0:	xor    eax,eax
  41c0d2:	add    rsp,0x20
  41c0d6:	pop    rbx
  41c0d7:	pop    rsi
  41c0d8:	pop    rdi
  41c0d9:	pop    rbp
  41c0da:	pop    r12
  41c0dc:	ret    
  41c0dd:	nop    DWORD PTR [rax]
  41c0e0:	mov    rcx,QWORD PTR [r12+0x10]
  41c0e5:	call   0x40af60
  41c0ea:	test   eax,eax
  41c0ec:	je     0x41c110
  41c0ee:	xchg   ax,ax
  41c0f0:	mov    rcx,QWORD PTR [rip+0x2a489]        # 0x446580
  41c0f7:	mov    rdx,rsi
  41c0fa:	call   0x41c030
  41c0ff:	mov    eax,0x1
  41c104:	add    rsp,0x20
  41c108:	pop    rbx
  41c109:	pop    rsi
  41c10a:	pop    rdi
  41c10b:	pop    rbp
  41c10c:	pop    r12
  41c10e:	ret    
  41c10f:	nop
  41c110:	mov    rcx,QWORD PTR [r12+0x10]
  41c115:	call   0x40ae70
  41c11a:	mov    rbx,rax
  41c11d:	mov    rax,QWORD PTR [rip+0x2a48c]        # 0x4465b0
  41c124:	mov    eax,DWORD PTR [rax]
  41c126:	test   eax,eax
  41c128:	jne    0x41c134
  41c12a:	mov    rcx,rbx
  41c12d:	call   0x41a7c0
  41c132:	jmp    0x41c0f0
  41c134:	mov    rcx,QWORD PTR [r12+0x10]
  41c139:	call   0x40b2a0
  41c13e:	mov    rdi,QWORD PTR [r12]
  41c142:	mov    ebp,eax
  41c144:	call   QWORD PTR [rip+0x35606]        # 0x451750
  41c14a:	lea    rdx,[rip+0x1e7af]        # 0x43a900
  41c151:	lea    rcx,[rax+0x60]
  41c155:	mov    r9d,ebp
  41c158:	mov    r8,rdi
  41c15b:	call   0x42aa80
  41c160:	jmp    0x41c12a
  41c162:	nop    DWORD PTR [rax+0x0]
  41c166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c170:	push   rsi
  41c171:	push   rbx
  41c172:	sub    rsp,0x28
  41c176:	mov    rbx,rcx
  41c179:	mov    rcx,QWORD PTR [rcx+0x10]
  41c17d:	call   0x40adf0
  41c182:	mov    rax,QWORD PTR [rip+0x2a427]        # 0x4465b0
  41c189:	mov    eax,DWORD PTR [rax]
  41c18b:	test   eax,eax
  41c18d:	jne    0x41c1a0
  41c18f:	add    rsp,0x28
  41c193:	pop    rbx
  41c194:	pop    rsi
  41c195:	ret    
  41c196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1a0:	mov    rcx,QWORD PTR [rbx+0x10]
  41c1a4:	call   0x40b2a0
  41c1a9:	mov    rbx,QWORD PTR [rbx+0x8]
  41c1ad:	mov    esi,eax
  41c1af:	call   QWORD PTR [rip+0x3559b]        # 0x451750
  41c1b5:	lea    rdx,[rip+0x1e753]        # 0x43a90f
  41c1bc:	lea    rcx,[rax+0x60]
  41c1c0:	mov    r9d,esi
  41c1c3:	mov    r8,rbx
  41c1c6:	add    rsp,0x28
  41c1ca:	pop    rbx
  41c1cb:	pop    rsi
  41c1cc:	jmp    0x42aa80
  41c1d1:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1e0:	push   rdi
  41c1e1:	push   rsi
  41c1e2:	mov    eax,0x4020
  41c1e7:	push   rbx
  41c1e8:	call   0x425730
  41c1ed:	sub    rsp,rax
  41c1f0:	mov    rbx,rcx
  41c1f3:	mov    rcx,QWORD PTR [rcx+0x10]
  41c1f7:	mov    rsi,rdx
  41c1fa:	call   0x40af60
  41c1ff:	mov    rdx,rsi
  41c202:	mov    edi,eax
  41c204:	mov    rcx,rbx
  41c207:	call   0x41c170
  41c20c:	test   edi,edi
  41c20e:	jne    0x41c220
  41c210:	add    rsp,0x4020
  41c217:	pop    rbx
  41c218:	pop    rsi
  41c219:	pop    rdi
  41c21a:	ret    
  41c21b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c220:	lea    rdi,[rsp+0x20]
  41c225:	mov    r9,QWORD PTR [rbx+0x8]
  41c229:	lea    r8,[rip+0x1e6f6]        # 0x43a926
  41c230:	mov    edx,0x4000
  41c235:	mov    rcx,rdi
  41c238:	call   0x41a880
  41c23d:	mov    r8,rdi
  41c240:	mov    edx,DWORD PTR [r8]
  41c243:	add    r8,0x4
  41c247:	lea    eax,[rdx-0x1010101]
  41c24d:	not    edx
  41c24f:	and    eax,edx
  41c251:	and    eax,0x80808080
  41c256:	je     0x41c240
  41c258:	mov    edx,eax
  41c25a:	mov    rcx,rsi
  41c25d:	shr    edx,0x10
  41c260:	test   eax,0x8080
  41c265:	cmove  eax,edx
  41c268:	lea    rdx,[r8+0x2]
  41c26c:	cmove  r8,rdx
  41c270:	add    al,al
  41c272:	mov    rdx,r8
  41c275:	sbb    rdx,0x3
  41c279:	call   QWORD PTR [rbx+0x18]
  41c27c:	mov    rcx,rdi
  41c27f:	call   0x4058a0
  41c284:	nop
  41c285:	add    rsp,0x4020
  41c28c:	pop    rbx
  41c28d:	pop    rsi
  41c28e:	pop    rdi
  41c28f:	ret    
  41c290:	sub    rsp,0x28
  41c294:	lea    rcx,[rip+0xfffffffffffffd85]        # 0x41c020
  41c29b:	call   0x40b270
  41c2a0:	mov    rdx,QWORD PTR [rip+0x2a2d9]        # 0x446580
  41c2a7:	mov    QWORD PTR [rdx+0x10],rax
  41c2ab:	add    rsp,0x28
  41c2af:	ret    
  41c2b0:	sub    rsp,0x38
  41c2b4:	mov    edx,DWORD PTR [rcx+0x8]
  41c2b7:	test   edx,edx
  41c2b9:	jle    0x41c2fc
  41c2bb:	mov    r8,QWORD PTR [rcx]
  41c2be:	sub    edx,0x1
  41c2c1:	shl    rdx,0x4
  41c2c5:	lea    rax,[r8+0x8]
  41c2c9:	lea    r8,[r8+rdx*1+0x18]
  41c2ce:	xor    edx,edx
  41c2d0:	mov    DWORD PTR [rax],edx
  41c2d2:	add    edx,DWORD PTR [rax+0x4]
  41c2d5:	add    rax,0x10
  41c2d9:	cmp    rax,r8
  41c2dc:	jne    0x41c2d0
  41c2de:	lea    eax,[rdx+0x7]
  41c2e1:	test   edx,edx
  41c2e3:	cmovs  edx,eax
  41c2e6:	sar    edx,0x3
  41c2e9:	lea    eax,[rdx+rdx*1+0x20]
  41c2ed:	mov    DWORD PTR [rcx+0xc],edx
  41c2f0:	cmp    eax,0x4000
  41c2f5:	jg     0x41c305
  41c2f7:	add    rsp,0x38
  41c2fb:	ret    
  41c2fc:	mov    DWORD PTR [rcx+0xc],0x0
  41c303:	jmp    0x41c2f7
  41c305:	lea    rax,[rip+0x1e65c]        # 0x43a968
  41c30c:	lea    r9,[rip+0x1e68d]        # 0x43a9a0
  41c313:	lea    r8,[rip+0x1e626]        # 0x43a940
  41c31a:	lea    rcx,[rip+0x1e63a]        # 0x43a95b
  41c321:	mov    edx,0x26
  41c326:	mov    QWORD PTR [rsp+0x20],rax
  41c32b:	call   0x41d170
  41c330:	nop
  41c331:	nop    DWORD PTR [rax+rax*1+0x0]
  41c336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c340:	mov    rax,QWORD PTR [rdx]
  41c343:	mov    QWORD PTR [rcx],rax
  41c346:	mov    eax,DWORD PTR [rdx+0x8]
  41c349:	mov    DWORD PTR [rcx+0x8],eax
  41c34c:	mov    rax,QWORD PTR [rdx+0x10]
  41c350:	mov    QWORD PTR [rcx+0x10],rax
  41c354:	mov    eax,DWORD PTR [rdx+0xc]
  41c357:	mov    DWORD PTR [rcx+0xc],eax
  41c35a:	mov    rax,QWORD PTR [rdx+0x18]
  41c35e:	mov    QWORD PTR [rcx+0x18],rax
  41c362:	ret    
  41c363:	nop    DWORD PTR [rax]
  41c366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c370:	sub    rsp,0x28
  41c374:	mov    rdx,QWORD PTR [rip+0x2a0d5]        # 0x446450
  41c37b:	lea    rax,[rip+0x1e65e]        # 0x43a9e0
  41c382:	cmp    QWORD PTR [rdx],0x0
  41c386:	je     0x41c391
  41c388:	call   0x404000
  41c38d:	mov    rax,QWORD PTR [rax+0x48]
  41c391:	add    rsp,0x28
  41c395:	ret    
  41c396:	nop
  41c397:	nop
  41c398:	nop
  41c399:	nop
  41c39a:	nop
  41c39b:	nop
  41c39c:	nop
  41c39d:	nop
  41c39e:	nop
  41c39f:	nop
  41c3a0:	push   rdi
  41c3a1:	push   rsi
  41c3a2:	push   rbx
  41c3a3:	sub    rsp,0x50
  41c3a7:	mov    eax,DWORD PTR [rip+0x32933]        # 0x44ece0
  41c3ad:	mov    r11,rdx
  41c3b0:	add    eax,0x1
  41c3b3:	cmp    eax,0xf
  41c3b6:	jg     0x41c470
  41c3bc:	mov    DWORD PTR [rip+0x3291e],eax        # 0x44ece0
  41c3c2:	cdqe   
  41c3c4:	lea    rsi,[rsp+0x40]
  41c3c9:	xor    ebx,ebx
  41c3cb:	lea    rax,[rax+rax*4]
  41c3cf:	movabs r9,0x44b82fa09b5a53
  41c3d9:	lea    rdx,[rax+rax*4]
  41c3dd:	lea    rax,[rip+0x325dc]        # 0x44e9c0
  41c3e4:	lea    rdi,[rax+rdx*2]
  41c3e8:	mov    r10,r11
  41c3eb:	add    ebx,0x1
  41c3ee:	shr    r10,0x9
  41c3f2:	mov    rax,r10
  41c3f5:	mul    r9
  41c3f8:	shr    rdx,0xb
  41c3fc:	imul   rax,rdx,0x3b9aca00
  41c403:	sub    r11,rax
  41c406:	test   rdx,rdx
  41c409:	lea    eax,[r8-0x9]
  41c40d:	mov    DWORD PTR [rsi],r11d
  41c410:	mov    r11,rdx
  41c413:	je     0x41c481
  41c415:	add    rsi,0x4
  41c419:	cmp    ebx,0x3
  41c41c:	je     0x41c423
  41c41e:	mov    r8d,eax
  41c421:	jmp    0x41c3e8
  41c423:	test   r8d,r8d
  41c426:	mov    eax,0x0
  41c42b:	cmovs  r8d,eax
  41c42f:	mov    eax,DWORD PTR [rsp+0x40]
  41c433:	mov    DWORD PTR [rsp+0x20],r8d
  41c438:	lea    r8,[rip+0x1e5d6]        # 0x43aa15
  41c43f:	mov    r9,rcx
  41c442:	mov    edx,0x32
  41c447:	mov    rcx,rdi
  41c44a:	mov    DWORD PTR [rsp+0x38],eax
  41c44e:	mov    eax,DWORD PTR [rsp+0x44]
  41c452:	mov    DWORD PTR [rsp+0x30],eax
  41c456:	mov    eax,DWORD PTR [rsp+0x48]
  41c45a:	mov    DWORD PTR [rsp+0x28],eax
  41c45e:	call   0x41a880
  41c463:	mov    rax,rdi
  41c466:	add    rsp,0x50
  41c46a:	pop    rbx
  41c46b:	pop    rsi
  41c46c:	pop    rdi
  41c46d:	ret    
  41c46e:	xchg   ax,ax
  41c470:	mov    DWORD PTR [rip+0x32866],0x0        # 0x44ece0
  41c47a:	xor    eax,eax
  41c47c:	jmp    0x41c3c2
  41c481:	test   r8d,r8d
  41c484:	mov    eax,0x0
  41c489:	cmovs  r8d,eax
  41c48d:	cmp    ebx,0x2
  41c490:	jne    0x41c4c9
  41c492:	mov    eax,DWORD PTR [rsp+0x40]
  41c496:	mov    DWORD PTR [rsp+0x20],r8d
  41c49b:	lea    r8,[rip+0x1e566]        # 0x43aa08
  41c4a2:	mov    r9,rcx
  41c4a5:	mov    edx,0x32
  41c4aa:	mov    rcx,rdi
  41c4ad:	mov    DWORD PTR [rsp+0x30],eax
  41c4b1:	mov    eax,DWORD PTR [rsp+0x44]
  41c4b5:	mov    DWORD PTR [rsp+0x28],eax
  41c4b9:	call   0x41a880
  41c4be:	mov    rax,rdi
  41c4c1:	add    rsp,0x50
  41c4c5:	pop    rbx
  41c4c6:	pop    rsi
  41c4c7:	pop    rdi
  41c4c8:	ret    
  41c4c9:	cmp    ebx,0x3
  41c4cc:	je     0x41c42f
  41c4d2:	mov    eax,DWORD PTR [rsp+0x40]
  41c4d6:	mov    DWORD PTR [rsp+0x20],r8d
  41c4db:	lea    r8,[rip+0x1e51e]        # 0x43aa00
  41c4e2:	mov    r9,rcx
  41c4e5:	mov    edx,0x32
  41c4ea:	mov    rcx,rdi
  41c4ed:	mov    DWORD PTR [rsp+0x28],eax
  41c4f1:	call   0x41a880
  41c4f6:	mov    rax,rdi
  41c4f9:	add    rsp,0x50
  41c4fd:	pop    rbx
  41c4fe:	pop    rsi
  41c4ff:	pop    rdi
  41c500:	ret    
  41c501:	nop    DWORD PTR [rax+rax*1+0x0]
  41c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c510:	mov    eax,DWORD PTR [rip+0x327ca]        # 0x44ece0
  41c516:	add    eax,0x1
  41c519:	cmp    eax,0xf
  41c51c:	jle    0x41c540
  41c51e:	mov    DWORD PTR [rip+0x327b8],0x0        # 0x44ece0
  41c528:	xor    eax,eax
  41c52a:	cdqe   
  41c52c:	lea    rax,[rax+rax*4]
  41c530:	lea    rdx,[rax+rax*4]
  41c534:	lea    rax,[rip+0x32485]        # 0x44e9c0
  41c53b:	lea    rax,[rax+rdx*2]
  41c53f:	ret    
  41c540:	mov    DWORD PTR [rip+0x3279a],eax        # 0x44ece0
  41c546:	jmp    0x41c52a
  41c548:	nop    DWORD PTR [rax+rax*1+0x0]
  41c550:	xor    r8d,r8d
  41c553:	mov    rdx,rcx
  41c556:	lea    rcx,[rip+0x1e4ca]        # 0x43aa27
  41c55d:	jmp    0x41c3a0
  41c562:	nop    DWORD PTR [rax+0x0]
  41c566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c570:	test   rcx,rcx
  41c573:	js     0x41c590
  41c575:	mov    rdx,rcx
  41c578:	lea    rcx,[rip+0x1e4a8]        # 0x43aa27
  41c57f:	xor    r8d,r8d
  41c582:	jmp    0x41c3a0
  41c587:	nop    WORD PTR [rax+rax*1+0x0]
  41c590:	mov    rdx,rcx
  41c593:	lea    rcx,[rip+0x1e48e]        # 0x43aa28
  41c59a:	xor    r8d,r8d
  41c59d:	neg    rdx
  41c5a0:	jmp    0x41c3a0
  41c5a5:	nop
  41c5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5b0:	push   rbx
  41c5b1:	sub    rsp,0x30
  41c5b5:	mov    eax,DWORD PTR [rip+0x32725]        # 0x44ece0
  41c5bb:	add    eax,0x1
  41c5be:	cmp    edx,0x2
  41c5c1:	je     0x41c670
  41c5c7:	cmp    edx,0x4
  41c5ca:	je     0x41c620
  41c5cc:	cmp    eax,0xf
  41c5cf:	jle    0x41c6d0
  41c5d5:	mov    DWORD PTR [rip+0x32701],0x0        # 0x44ece0
  41c5df:	xor    eax,eax
  41c5e1:	cdqe   
  41c5e3:	mov    DWORD PTR [rsp+0x20],ecx
  41c5e7:	lea    r8,[rip+0x1e43c]        # 0x43aa2a
  41c5ee:	lea    rax,[rax+rax*4]
  41c5f2:	shr    rcx,0x20
  41c5f6:	mov    r9,rcx
  41c5f9:	lea    rdx,[rax+rax*4]
  41c5fd:	lea    rax,[rip+0x323bc]        # 0x44e9c0
  41c604:	lea    rbx,[rax+rdx*2]
  41c608:	mov    edx,0x32
  41c60d:	mov    rcx,rbx
  41c610:	call   0x41a880
  41c615:	mov    rax,rbx
  41c618:	add    rsp,0x30
  41c61c:	pop    rbx
  41c61d:	ret    
  41c61e:	xchg   ax,ax
  41c620:	cmp    eax,0xf
  41c623:	jle    0x41c6c0
  41c629:	mov    DWORD PTR [rip+0x326ad],0x0        # 0x44ece0
  41c633:	xor    eax,eax
  41c635:	cdqe   
  41c637:	lea    r8,[rip+0x1e3f7]        # 0x43aa35
  41c63e:	mov    r9d,ecx
  41c641:	lea    rax,[rax+rax*4]
  41c645:	lea    rdx,[rax+rax*4]
  41c649:	lea    rax,[rip+0x32370]        # 0x44e9c0
  41c650:	lea    rbx,[rax+rdx*2]
  41c654:	mov    edx,0x32
  41c659:	mov    rcx,rbx
  41c65c:	call   0x41a880
  41c661:	mov    rax,rbx
  41c664:	add    rsp,0x30
  41c668:	pop    rbx
  41c669:	ret    
  41c66a:	nop    WORD PTR [rax+rax*1+0x0]
  41c670:	cmp    eax,0xf
  41c673:	jg     0x41c6b1
  41c675:	mov    DWORD PTR [rip+0x32665],eax        # 0x44ece0
  41c67b:	cdqe   
  41c67d:	lea    r8,[rip+0x1e3b7]        # 0x43aa3b
  41c684:	movzx  r9d,cx
  41c688:	lea    rax,[rax+rax*4]
  41c68c:	lea    rdx,[rax+rax*4]
  41c690:	lea    rax,[rip+0x32329]        # 0x44e9c0
  41c697:	lea    rbx,[rax+rdx*2]
  41c69b:	mov    edx,0x32
  41c6a0:	mov    rcx,rbx
  41c6a3:	call   0x41a880
  41c6a8:	mov    rax,rbx
  41c6ab:	add    rsp,0x30
  41c6af:	pop    rbx
  41c6b0:	ret    
  41c6b1:	mov    DWORD PTR [rip+0x32625],0x0        # 0x44ece0
  41c6bb:	xor    eax,eax
  41c6bd:	jmp    0x41c67b
  41c6bf:	nop
  41c6c0:	mov    DWORD PTR [rip+0x3261a],eax        # 0x44ece0
  41c6c6:	jmp    0x41c635
  41c6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6d0:	mov    DWORD PTR [rip+0x3260a],eax        # 0x44ece0
  41c6d6:	jmp    0x41c5e1
  41c6db:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6e0:	push   rbx
  41c6e1:	sub    rsp,0x30
  41c6e5:	cmp    edx,0x2
  41c6e8:	je     0x41c7b0
  41c6ee:	cmp    edx,0x4
  41c6f1:	jne    0x41c750
  41c6f3:	mov    eax,DWORD PTR [rip+0x325e7]        # 0x44ece0
  41c6f9:	add    eax,0x1
  41c6fc:	cmp    eax,0xf
  41c6ff:	jle    0x41c821
  41c705:	mov    DWORD PTR [rip+0x325d1],0x0        # 0x44ece0
  41c70f:	xor    eax,eax
  41c711:	cdqe   
  41c713:	lea    rax,[rax+rax*4]
  41c717:	lea    rdx,[rax+rax*4]
  41c71b:	lea    rax,[rip+0x3229e]        # 0x44e9c0
  41c722:	lea    rbx,[rax+rdx*2]
  41c726:	lea    r8,[rip+0x1e313]        # 0x43aa40
  41c72d:	mov    r9d,ecx
  41c730:	mov    edx,0x32
  41c735:	mov    rcx,rbx
  41c738:	call   0x41a880
  41c73d:	mov    rax,rbx
  41c740:	add    rsp,0x30
  41c744:	pop    rbx
  41c745:	ret    
  41c746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c750:	mov    eax,DWORD PTR [rip+0x3258a]        # 0x44ece0
  41c756:	mov    r9,rcx
  41c759:	shr    r9,0x20
  41c75d:	add    eax,0x1
  41c760:	cmp    eax,0xf
  41c763:	jg     0x41c810
  41c769:	mov    DWORD PTR [rip+0x32571],eax        # 0x44ece0
  41c76f:	cdqe   
  41c771:	test   r9d,r9d
  41c774:	lea    rax,[rax+rax*4]
  41c778:	lea    rdx,[rax+rax*4]
  41c77c:	lea    rax,[rip+0x3223d]        # 0x44e9c0
  41c783:	lea    rbx,[rax+rdx*2]
  41c787:	je     0x41c726
  41c789:	lea    r8,[rip+0x1e2b4]        # 0x43aa44
  41c790:	mov    DWORD PTR [rsp+0x20],ecx
  41c794:	mov    edx,0x32
  41c799:	mov    rcx,rbx
  41c79c:	call   0x41a880
  41c7a1:	mov    rax,rbx
  41c7a4:	add    rsp,0x30
  41c7a8:	pop    rbx
  41c7a9:	ret    
  41c7aa:	nop    WORD PTR [rax+rax*1+0x0]
  41c7b0:	mov    eax,DWORD PTR [rip+0x3252a]        # 0x44ece0
  41c7b6:	add    eax,0x1
  41c7b9:	cmp    eax,0xf
  41c7bc:	jg     0x41c800
  41c7be:	mov    DWORD PTR [rip+0x3251c],eax        # 0x44ece0
  41c7c4:	cdqe   
  41c7c6:	lea    r8,[rip+0x1e280]        # 0x43aa4d
  41c7cd:	movzx  r9d,cx
  41c7d1:	lea    rax,[rax+rax*4]
  41c7d5:	lea    rdx,[rax+rax*4]
  41c7d9:	lea    rax,[rip+0x321e0]        # 0x44e9c0
  41c7e0:	lea    rbx,[rax+rdx*2]
  41c7e4:	mov    edx,0x32
  41c7e9:	mov    rcx,rbx
  41c7ec:	call   0x41a880
  41c7f1:	mov    rax,rbx
  41c7f4:	add    rsp,0x30
  41c7f8:	pop    rbx
  41c7f9:	ret    
  41c7fa:	nop    WORD PTR [rax+rax*1+0x0]
  41c800:	mov    DWORD PTR [rip+0x324d6],0x0        # 0x44ece0
  41c80a:	xor    eax,eax
  41c80c:	jmp    0x41c7c4
  41c80e:	xchg   ax,ax
  41c810:	mov    DWORD PTR [rip+0x324c6],0x0        # 0x44ece0
  41c81a:	xor    eax,eax
  41c81c:	jmp    0x41c76f
  41c821:	mov    DWORD PTR [rip+0x324b9],eax        # 0x44ece0
  41c827:	jmp    0x41c711
  41c82c:	nop    DWORD PTR [rax+0x0]
  41c830:	push   rbx
  41c831:	sub    rsp,0x20
  41c835:	mov    eax,DWORD PTR [rip+0x324a5]        # 0x44ece0
  41c83b:	add    eax,0x1
  41c83e:	cmp    eax,0xf
  41c841:	jle    0x41c890
  41c843:	mov    DWORD PTR [rip+0x32493],0x0        # 0x44ece0
  41c84d:	xor    eax,eax
  41c84f:	cdqe   
  41c851:	lea    rax,[rax+rax*4]
  41c855:	lea    rdx,[rax+rax*4]
  41c859:	lea    rax,[rip+0x32160]        # 0x44e9c0
  41c860:	lea    rbx,[rax+rdx*2]
  41c864:	mov    edx,0x8
  41c869:	call   0x41c6e0
  41c86e:	lea    r8,[rip+0x1e1db]        # 0x43aa50
  41c875:	mov    r9,rax
  41c878:	mov    edx,0x32
  41c87d:	mov    rcx,rbx
  41c880:	call   0x41a880
  41c885:	mov    rax,rbx
  41c888:	add    rsp,0x20
  41c88c:	pop    rbx
  41c88d:	ret    
  41c88e:	xchg   ax,ax
  41c890:	mov    DWORD PTR [rip+0x3244a],eax        # 0x44ece0
  41c896:	jmp    0x41c84f
  41c898:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8a0:	push   rdi
  41c8a1:	push   rsi
  41c8a2:	push   rbx
  41c8a3:	sub    rsp,0x20
  41c8a7:	mov    eax,DWORD PTR [rip+0x32433]        # 0x44ece0
  41c8ad:	mov    ebx,edx
  41c8af:	add    eax,0x1
  41c8b2:	cmp    eax,0xf
  41c8b5:	jg     0x41c960
  41c8bb:	mov    DWORD PTR [rip+0x3241f],eax        # 0x44ece0
  41c8c1:	cdqe   
  41c8c3:	lea    rax,[rax+rax*4]
  41c8c7:	lea    rdx,[rax+rax*4]
  41c8cb:	lea    rax,[rip+0x320ee]        # 0x44e9c0
  41c8d2:	lea    rsi,[rax+rdx*2+0x31]
  41c8d7:	mov    edx,0x8
  41c8dc:	call   0x41c6e0
  41c8e1:	mov    rcx,rax
  41c8e4:	mov    rdi,rax
  41c8e7:	call   0x42a610
  41c8ec:	cmp    eax,ebx
  41c8ee:	mov    r10,rax
  41c8f1:	cmovge ebx,eax
  41c8f4:	movsxd r8,ebx
  41c8f7:	cmp    r8d,0x2f
  41c8fb:	jg     0x41c9e0
  41c901:	mov    rax,rsi
  41c904:	mov    edx,0x7830
  41c909:	sub    rax,r8
  41c90c:	cmp    r8,0x8
  41c910:	lea    rbx,[rax-0x2]
  41c914:	mov    r9,rax
  41c917:	mov    WORD PTR [rbx],dx
  41c91a:	mov    BYTE PTR [rbx+0x2],0x0
  41c91e:	jae    0x41c971
  41c920:	test   r8b,0x4
  41c924:	jne    0x41c9c0
  41c92a:	test   r8,r8
  41c92d:	je     0x41c93c
  41c92f:	and    r8d,0x2
  41c933:	mov    BYTE PTR [rax],0x30
  41c936:	jne    0x41c9d2
  41c93c:	movsxd r10,r10d
  41c93f:	mov    rdx,rdi
  41c942:	sub    rsi,r10
  41c945:	mov    rcx,rsi
  41c948:	call   0x42a620
  41c94d:	mov    rax,rbx
  41c950:	add    rsp,0x20
  41c954:	pop    rbx
  41c955:	pop    rsi
  41c956:	pop    rdi
  41c957:	ret    
  41c958:	nop    DWORD PTR [rax+rax*1+0x0]
  41c960:	mov    DWORD PTR [rip+0x32376],0x0        # 0x44ece0
  41c96a:	xor    eax,eax
  41c96c:	jmp    0x41c8c1
  41c971:	movabs rax,0x3030303030303030
  41c97b:	mov    QWORD PTR [r9],rax
  41c97e:	mov    QWORD PTR [rsi-0x8],rax
  41c982:	lea    rax,[r9+0x8]
  41c986:	and    rax,0xfffffffffffffff8
  41c98a:	sub    r9,rax
  41c98d:	add    r8,r9
  41c990:	and    r8,0xfffffffffffffff8
  41c994:	cmp    r8,0x8
  41c998:	jb     0x41c93c
  41c99a:	and    r8,0xfffffffffffffff8
  41c99e:	xor    edx,edx
  41c9a0:	movabs rcx,0x3030303030303030
  41c9aa:	mov    QWORD PTR [rax+rdx*1],rcx
  41c9ae:	add    rdx,0x8
  41c9b2:	cmp    rdx,r8
  41c9b5:	jb     0x41c9a0
  41c9b7:	jmp    0x41c93c
  41c9b9:	nop    DWORD PTR [rax+0x0]
  41c9c0:	mov    DWORD PTR [rax],0x30303030
  41c9c6:	mov    DWORD PTR [rsi-0x4],0x30303030
  41c9cd:	jmp    0x41c93c
  41c9d2:	mov    eax,0x3030
  41c9d7:	mov    WORD PTR [rsi-0x2],ax
  41c9db:	jmp    0x41c93c
  41c9e0:	lea    r8,[rip+0x1e071]        # 0x43aa58
  41c9e7:	lea    rcx,[rip+0x1e0a0]        # 0x43aa8e
  41c9ee:	mov    edx,0xf1
  41c9f3:	call   0x41d170
  41c9f8:	nop
  41c9f9:	nop    DWORD PTR [rax+0x0]
  41ca00:	push   rdi
  41ca01:	push   rsi
  41ca02:	push   rbx
  41ca03:	sub    rsp,0x50
  41ca07:	mov    edi,DWORD PTR [rsp+0x90]
  41ca0e:	cmp    edx,0xa
  41ca11:	mov    rsi,rcx
  41ca14:	je     0x41cad5
  41ca1a:	cmp    edx,0x10
  41ca1d:	je     0x41cab0
  41ca23:	cmp    edx,0x8
  41ca26:	je     0x41ca40
  41ca28:	lea    r8,[rip+0x1e0a9]        # 0x43aad8
  41ca2f:	lea    rcx,[rip+0x1e058]        # 0x43aa8e
  41ca36:	mov    edx,0x11f
  41ca3b:	call   0x41d170
  41ca40:	mov    eax,DWORD PTR [rip+0x3229a]        # 0x44ece0
  41ca46:	mov    r8,rcx
  41ca49:	add    eax,0x1
  41ca4c:	cmp    eax,0xf
  41ca4f:	jg     0x41cb10
  41ca55:	mov    DWORD PTR [rip+0x32285],eax        # 0x44ece0
  41ca5b:	cdqe   
  41ca5d:	lea    rax,[rax+rax*4]
  41ca61:	lea    rdx,[rax+rax*4]
  41ca65:	lea    rax,[rip+0x31f54]        # 0x44e9c0
  41ca6c:	lea    rbx,[rax+rdx*2]
  41ca70:	lea    rdx,[rsp+0x40]
  41ca75:	xor    eax,eax
  41ca77:	mov    ecx,r8d
  41ca7a:	shr    r8,0x1e
  41ca7e:	add    eax,0x1
  41ca81:	and    ecx,0x3fffffff
  41ca87:	test   r8,r8
  41ca8a:	mov    DWORD PTR [rdx],ecx
  41ca8c:	lea    ecx,[r9-0xa]
  41ca90:	je     0x41cba0
  41ca96:	add    rdx,0x4
  41ca9a:	cmp    eax,0x3
  41ca9d:	je     0x41cb40
  41caa3:	mov    r9d,ecx
  41caa6:	jmp    0x41ca77
  41caa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cab0:	test   r9d,r9d
  41cab3:	je     0x41cb01
  41cab5:	mov    edx,r9d
  41cab8:	call   0x41c8a0
  41cabd:	mov    rbx,rax
  41cac0:	lea    rax,[rax+0x2]
  41cac4:	test   edi,edi
  41cac6:	cmove  rbx,rax
  41caca:	mov    rax,rbx
  41cacd:	add    rsp,0x50
  41cad1:	pop    rbx
  41cad2:	pop    rsi
  41cad3:	pop    rdi
  41cad4:	ret    
  41cad5:	mov    rax,rcx
  41cad8:	shr    rax,0x3f
  41cadc:	test   al,al
  41cade:	je     0x41cb21
  41cae0:	test   r8d,r8d
  41cae3:	je     0x41cb21
  41cae5:	neg    rsi
  41cae8:	lea    rcx,[rip+0x1df39]        # 0x43aa28
  41caef:	mov    r8d,r9d
  41caf2:	mov    rdx,rsi
  41caf5:	add    rsp,0x50
  41caf9:	pop    rbx
  41cafa:	pop    rsi
  41cafb:	pop    rdi
  41cafc:	jmp    0x41c3a0
  41cb01:	call   0x41c830
  41cb06:	jmp    0x41cabd
  41cb08:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb10:	mov    DWORD PTR [rip+0x321c6],0x0        # 0x44ece0
  41cb1a:	xor    eax,eax
  41cb1c:	jmp    0x41ca5b
  41cb21:	lea    rcx,[rip+0x1deff]        # 0x43aa27
  41cb28:	mov    r8d,r9d
  41cb2b:	mov    rdx,rsi
  41cb2e:	add    rsp,0x50
  41cb32:	pop    rbx
  41cb33:	pop    rsi
  41cb34:	pop    rdi
  41cb35:	jmp    0x41c3a0
  41cb3a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb40:	test   r9d,r9d
  41cb43:	mov    edx,0x0
  41cb48:	cmovs  r9d,edx
  41cb4c:	mov    eax,DWORD PTR [rsp+0x40]
  41cb50:	lea    r8,[rip+0x1df67]        # 0x43aabe
  41cb57:	mov    edx,0x32
  41cb5c:	mov    rcx,rbx
  41cb5f:	mov    DWORD PTR [rsp+0x30],eax
  41cb63:	mov    eax,DWORD PTR [rsp+0x44]
  41cb67:	mov    DWORD PTR [rsp+0x28],eax
  41cb6b:	mov    eax,DWORD PTR [rsp+0x48]
  41cb6f:	mov    DWORD PTR [rsp+0x20],eax
  41cb73:	call   0x41a880
  41cb78:	test   rsi,rsi
  41cb7b:	je     0x41caca
  41cb81:	test   edi,edi
  41cb83:	setne  al
  41cb86:	cmp    al,0x1
  41cb88:	adc    rbx,0x0
  41cb8c:	mov    rax,rbx
  41cb8f:	add    rsp,0x50
  41cb93:	pop    rbx
  41cb94:	pop    rsi
  41cb95:	pop    rdi
  41cb96:	ret    
  41cb97:	nop    WORD PTR [rax+rax*1+0x0]
  41cba0:	test   r9d,r9d
  41cba3:	mov    edx,0x0
  41cba8:	cmovs  r9d,edx
  41cbac:	cmp    eax,0x2
  41cbaf:	jne    0x41cbd7
  41cbb1:	mov    eax,DWORD PTR [rsp+0x40]
  41cbb5:	lea    r8,[rip+0x1def5]        # 0x43aab1
  41cbbc:	mov    edx,0x32
  41cbc1:	mov    rcx,rbx
  41cbc4:	mov    DWORD PTR [rsp+0x28],eax
  41cbc8:	mov    eax,DWORD PTR [rsp+0x44]
  41cbcc:	mov    DWORD PTR [rsp+0x20],eax
  41cbd0:	call   0x41a880
  41cbd5:	jmp    0x41cb78
  41cbd7:	cmp    eax,0x3
  41cbda:	je     0x41cb4c
  41cbe0:	mov    eax,DWORD PTR [rsp+0x40]
  41cbe4:	test   eax,eax
  41cbe6:	jne    0x41cc10
  41cbe8:	lea    r8,[rip+0x1deb7]        # 0x43aaa6
  41cbef:	mov    DWORD PTR [rsp+0x20],0x0
  41cbf7:	mov    edx,0x32
  41cbfc:	mov    rcx,rbx
  41cbff:	call   0x41a880
  41cc04:	jmp    0x41cb78
  41cc09:	nop    DWORD PTR [rax+0x0]
  41cc10:	lea    r8,[rip+0x1de93]        # 0x43aaaa
  41cc17:	mov    DWORD PTR [rsp+0x20],eax
  41cc1b:	mov    edx,0x32
  41cc20:	mov    rcx,rbx
  41cc23:	call   0x41a880
  41cc28:	jmp    0x41cb78
  41cc2d:	nop    DWORD PTR [rax]
  41cc30:	push   rbx
  41cc31:	sub    rsp,0x20
  41cc35:	mov    eax,DWORD PTR [rip+0x320a5]        # 0x44ece0
  41cc3b:	add    eax,0x1
  41cc3e:	cmp    eax,0xf
  41cc41:	jle    0x41cc90
  41cc43:	mov    DWORD PTR [rip+0x32093],0x0        # 0x44ece0
  41cc4d:	xor    eax,eax
  41cc4f:	cdqe   
  41cc51:	lea    rax,[rax+rax*4]
  41cc55:	lea    rdx,[rax+rax*4]
  41cc59:	lea    rax,[rip+0x31d60]        # 0x44e9c0
  41cc60:	lea    rbx,[rax+rdx*2]
  41cc64:	mov    eax,0x7830
  41cc69:	mov    edx,0x8
  41cc6e:	mov    WORD PTR [rbx],ax
  41cc71:	mov    BYTE PTR [rbx+0x2],0x0
  41cc75:	call   0x41c5b0
  41cc7a:	mov    rcx,rbx
  41cc7d:	mov    rdx,rax
  41cc80:	call   0x42a638
  41cc85:	mov    rax,rbx
  41cc88:	add    rsp,0x20
  41cc8c:	pop    rbx
  41cc8d:	ret    
  41cc8e:	xchg   ax,ax
  41cc90:	mov    DWORD PTR [rip+0x3204a],eax        # 0x44ece0
  41cc96:	jmp    0x41cc4f
  41cc98:	nop    DWORD PTR [rax+rax*1+0x0]
  41cca0:	push   rbx
  41cca1:	sub    rsp,0x20
  41cca5:	mov    eax,DWORD PTR [rip+0x32035]        # 0x44ece0
  41ccab:	add    eax,0x1
  41ccae:	cmp    eax,0xf
  41ccb1:	jle    0x41cd00
  41ccb3:	mov    DWORD PTR [rip+0x32023],0x0        # 0x44ece0
  41ccbd:	xor    eax,eax
  41ccbf:	cdqe   
  41ccc1:	lea    rax,[rax+rax*4]
  41ccc5:	lea    rdx,[rax+rax*4]
  41ccc9:	lea    rax,[rip+0x31cf0]        # 0x44e9c0
  41ccd0:	lea    rbx,[rax+rdx*2]
  41ccd4:	mov    eax,0x7830
  41ccd9:	mov    edx,0x8
  41ccde:	mov    WORD PTR [rbx],ax
  41cce1:	mov    BYTE PTR [rbx+0x2],0x0
  41cce5:	call   0x41c6e0
  41ccea:	mov    rcx,rbx
  41cced:	mov    rdx,rax
  41ccf0:	call   0x42a638
  41ccf5:	mov    rax,rbx
  41ccf8:	add    rsp,0x20
  41ccfc:	pop    rbx
  41ccfd:	ret    
  41ccfe:	xchg   ax,ax
  41cd00:	mov    DWORD PTR [rip+0x31fda],eax        # 0x44ece0
  41cd06:	jmp    0x41ccbf
  41cd08:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd10:	push   rbx
  41cd11:	sub    rsp,0x20
  41cd15:	mov    eax,DWORD PTR [rip+0x31fc5]        # 0x44ece0
  41cd1b:	add    eax,0x1
  41cd1e:	cmp    eax,0xf
  41cd21:	jle    0x41cd70
  41cd23:	mov    DWORD PTR [rip+0x31fb3],0x0        # 0x44ece0
  41cd2d:	xor    eax,eax
  41cd2f:	cdqe   
  41cd31:	lea    rax,[rax+rax*4]
  41cd35:	lea    rdx,[rax+rax*4]
  41cd39:	lea    rax,[rip+0x31c80]        # 0x44e9c0
  41cd40:	lea    rbx,[rax+rdx*2]
  41cd44:	mov    edx,0x8
  41cd49:	call   0x41c6e0
  41cd4e:	lea    r8,[rip+0x1dcfb]        # 0x43aa50
  41cd55:	mov    r9,rax
  41cd58:	mov    edx,0x32
  41cd5d:	mov    rcx,rbx
  41cd60:	call   0x41a880
  41cd65:	mov    rax,rbx
  41cd68:	add    rsp,0x20
  41cd6c:	pop    rbx
  41cd6d:	ret    
  41cd6e:	xchg   ax,ax
  41cd70:	mov    DWORD PTR [rip+0x31f6a],eax        # 0x44ece0
  41cd76:	jmp    0x41cd2f
  41cd78:	nop
  41cd79:	nop
  41cd7a:	nop
  41cd7b:	nop
  41cd7c:	nop
  41cd7d:	nop
  41cd7e:	nop
  41cd7f:	nop
  41cd80:	sub    rsp,0x28
  41cd84:	lea    eax,[rcx-0x30]
  41cd87:	cmp    eax,0x9
  41cd8a:	jbe    0x41cd9f
  41cd8c:	lea    eax,[rcx-0x61]
  41cd8f:	cmp    eax,0x5
  41cd92:	jbe    0x41cda4
  41cd94:	lea    eax,[rcx-0x41]
  41cd97:	cmp    eax,0x5
  41cd9a:	ja     0x41cdac
  41cd9c:	lea    eax,[rcx-0x37]
  41cd9f:	add    rsp,0x28
  41cda3:	ret    
  41cda4:	lea    eax,[rcx-0x57]
  41cda7:	add    rsp,0x28
  41cdab:	ret    
  41cdac:	mov    edx,ecx
  41cdae:	lea    rcx,[rip+0x1dd4b]        # 0x43ab00
  41cdb5:	call   0x41d140
  41cdba:	nop
  41cdbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cdc0:	lea    edx,[rcx+0x30]
  41cdc3:	lea    eax,[rcx+0x57]
  41cdc6:	cmp    ecx,0x9
  41cdc9:	cmovle eax,edx
  41cdcc:	ret    
  41cdcd:	nop    DWORD PTR [rax]
  41cdd0:	lea    rax,[rip+0x1dda9]        # 0x43ab80
  41cdd7:	and    edx,0xf
  41cdda:	movzx  eax,BYTE PTR [rax+rdx*1]
  41cdde:	mov    BYTE PTR [rcx],al
  41cde0:	lea    rax,[rcx+0x1]
  41cde4:	ret    
  41cde5:	nop
  41cde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdf0:	lea    r8,[rip+0x1dd89]        # 0x43ab80
  41cdf7:	mov    eax,edx
  41cdf9:	and    edx,0xf
  41cdfc:	sar    eax,0x4
  41cdff:	and    eax,0xf
  41ce02:	movzx  eax,BYTE PTR [r8+rax*1]
  41ce07:	mov    BYTE PTR [rcx],al
  41ce09:	movzx  eax,BYTE PTR [r8+rdx*1]
  41ce0e:	mov    BYTE PTR [rcx+0x1],al
  41ce11:	lea    rax,[rcx+0x2]
  41ce15:	ret    
  41ce16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce20:	xor    r10d,r10d
  41ce23:	jmp    0x41ce38
  41ce25:	sub    r8d,0x57
  41ce29:	shl    r10,0x4
  41ce2d:	and    r8d,0xf
  41ce31:	add    rcx,0x1
  41ce35:	or     r10,r8
  41ce38:	movsx  r8d,BYTE PTR [rcx]
  41ce3c:	lea    eax,[r8-0x61]
  41ce40:	cmp    eax,0x5
  41ce43:	jbe    0x41ce25
  41ce45:	lea    eax,[r8-0x41]
  41ce49:	cmp    eax,0x5
  41ce4c:	ja     0x41ce54
  41ce4e:	sub    r8d,0x37
  41ce52:	jmp    0x41ce29
  41ce54:	lea    r9d,[r8-0x30]
  41ce58:	cmp    r9d,0x9
  41ce5c:	ja     0x41ce63
  41ce5e:	mov    r8d,r9d
  41ce61:	jmp    0x41ce29
  41ce63:	mov    QWORD PTR [rdx],r10
  41ce66:	mov    rax,rcx
  41ce69:	ret    
  41ce6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ce70:	push   r12
  41ce72:	push   rbp
  41ce73:	push   rdi
  41ce74:	push   rsi
  41ce75:	push   rbx
  41ce76:	sub    rsp,0x20
  41ce7a:	test   r8d,r8d
  41ce7d:	mov    rbx,rcx
  41ce80:	mov    rdi,rdx
  41ce83:	jle    0x41cee4
  41ce85:	movsx  ecx,BYTE PTR [rcx]
  41ce88:	test   cl,cl
  41ce8a:	je     0x41cee4
  41ce8c:	cmp    BYTE PTR [rbx+0x1],0x0
  41ce90:	je     0x41cee4
  41ce92:	lea    eax,[r8-0x1]
  41ce96:	mov    rsi,rdx
  41ce99:	lea    rbp,[rbx+rax*2+0x2]
  41ce9e:	jmp    0x41cead
  41cea0:	movsx  ecx,BYTE PTR [rbx]
  41cea3:	test   cl,cl
  41cea5:	je     0x41ced9
  41cea7:	cmp    BYTE PTR [rbx+0x1],0x0
  41ceab:	je     0x41ced9
  41cead:	call   0x41cd80
  41ceb2:	movsx  ecx,BYTE PTR [rbx+0x1]
  41ceb6:	mov    r12d,eax
  41ceb9:	add    rsi,0x1
  41cebd:	shl    r12d,0x4
  41cec1:	add    rbx,0x2
  41cec5:	call   0x41cd80
  41ceca:	add    eax,r12d
  41cecd:	mov    BYTE PTR [rsi-0x1],al
  41ced0:	mov    eax,esi
  41ced2:	sub    eax,edi
  41ced4:	cmp    rbx,rbp
  41ced7:	jne    0x41cea0
  41ced9:	add    rsp,0x20
  41cedd:	pop    rbx
  41cede:	pop    rsi
  41cedf:	pop    rdi
  41cee0:	pop    rbp
  41cee1:	pop    r12
  41cee3:	ret    
  41cee4:	xor    eax,eax
  41cee6:	jmp    0x41ced9
  41cee8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cef0:	push   rbx
  41cef1:	test   r8d,r8d
  41cef4:	jle    0x41cf56
  41cef6:	lea    eax,[r8-0x1]
  41cefa:	lea    rbx,[rdx+rax*2+0x2]
  41ceff:	nop
  41cf00:	movzx  r10d,BYTE PTR [rcx]
  41cf04:	shr    r10b,0x4
  41cf08:	movzx  r9d,r10b
  41cf0c:	lea    r11d,[r9+0x30]
  41cf10:	add    r9d,0x57
  41cf14:	cmp    r10b,0x9
  41cf18:	cmovbe r9d,r11d
  41cf1c:	add    rcx,0x1
  41cf20:	add    rdx,0x2
  41cf24:	mov    BYTE PTR [rdx-0x2],r9b
  41cf28:	movzx  r10d,BYTE PTR [rcx-0x1]
  41cf2d:	and    r10d,0xf
  41cf31:	movzx  r9d,r10b
  41cf35:	lea    r11d,[r9+0x30]
  41cf39:	add    r9d,0x57
  41cf3d:	cmp    r10b,0x9
  41cf41:	cmovbe r9d,r11d
  41cf45:	cmp    rbx,rdx
  41cf48:	mov    BYTE PTR [rdx-0x1],r9b
  41cf4c:	jne    0x41cf00
  41cf4e:	mov    eax,r8d
  41cf51:	mov    BYTE PTR [rbx],0x0
  41cf54:	pop    rbx
  41cf55:	ret    
  41cf56:	mov    rbx,rdx
  41cf59:	xor    r8d,r8d
  41cf5c:	jmp    0x41cf4e
  41cf5e:	xchg   ax,ax
  41cf60:	push   r13
  41cf62:	push   r12
  41cf64:	push   rbp
  41cf65:	push   rdi
  41cf66:	push   rsi
  41cf67:	push   rbx
  41cf68:	mov    edi,DWORD PTR [rsp+0x60]
  41cf6c:	test   edx,edx
  41cf6e:	jle    0x41d06d
  41cf74:	movsxd rbp,r8d
  41cf77:	mov    rbx,rcx
  41cf7a:	xor    eax,eax
  41cf7c:	xor    esi,esi
  41cf7e:	xchg   ax,ax
  41cf80:	xor    r11d,r11d
  41cf83:	xor    r13d,r13d
  41cf86:	test   r8d,r8d
  41cf89:	jg     0x41cfa3
  41cf8b:	jmp    0x41d055
  41cf90:	sub    r10d,0x23
  41cf94:	cmp    r10b,0x1
  41cf98:	jbe    0x41cfbc
  41cf9a:	add    r11,0x1
  41cf9e:	cmp    r8d,r11d
  41cfa1:	jle    0x41cfc9
  41cfa3:	movzx  r10d,BYTE PTR [rbx+r11*1]
  41cfa8:	cmp    r10b,0x2a
  41cfac:	sete   r12b
  41cfb0:	cmp    r10b,0x7d
  41cfb4:	sete   cl
  41cfb7:	or     r12b,cl
  41cfba:	je     0x41cf90
  41cfbc:	add    r11,0x1
  41cfc0:	add    r13d,0x1
  41cfc4:	cmp    r8d,r11d
  41cfc7:	jg     0x41cfa3
  41cfc9:	lea    ecx,[rax+r8*1]
  41cfcd:	add    r13d,ecx
  41cfd0:	cmp    edi,r13d
  41cfd3:	jl     0x41d045
  41cfd5:	xor    r11d,r11d
  41cfd8:	jmp    0x41cffc
  41cfda:	nop    WORD PTR [rax+rax*1+0x0]
  41cfe0:	lea    ecx,[r10-0x23]
  41cfe4:	cmp    cl,0x1
  41cfe7:	jbe    0x41d015
  41cfe9:	add    r11,0x1
  41cfed:	movsxd rcx,eax
  41cff0:	add    eax,0x1
  41cff3:	cmp    r8d,r11d
  41cff6:	mov    BYTE PTR [r9+rcx*1],r10b
  41cffa:	jle    0x41d037
  41cffc:	movzx  r10d,BYTE PTR [rbx+r11*1]
  41d001:	cmp    r10b,0x2a
  41d005:	sete   r12b
  41d009:	cmp    r10b,0x7d
  41d00d:	sete   cl
  41d010:	or     r12b,cl
  41d013:	je     0x41cfe0
  41d015:	lea    ecx,[rax+0x1]
  41d018:	add    r11,0x1
  41d01c:	movsxd r12,eax
  41d01f:	xor    r10d,0x20
  41d023:	add    eax,0x2
  41d026:	cmp    r8d,r11d
  41d029:	movsxd rcx,ecx
  41d02c:	mov    BYTE PTR [r9+r12*1],0x7d
  41d031:	mov    BYTE PTR [r9+rcx*1],r10b
  41d035:	jg     0x41cffc
  41d037:	add    esi,0x1
  41d03a:	add    rbx,rbp
  41d03d:	cmp    esi,edx
  41d03f:	jne    0x41cf80
  41d045:	mov    rdx,QWORD PTR [rsp+0x58]
  41d04a:	mov    DWORD PTR [rdx],esi
  41d04c:	pop    rbx
  41d04d:	pop    rsi
  41d04e:	pop    rdi
  41d04f:	pop    rbp
  41d050:	pop    r12
  41d052:	pop    r13
  41d054:	ret    
  41d055:	lea    ecx,[rax+r8*1]
  41d059:	cmp    edi,ecx
  41d05b:	jl     0x41d045
  41d05d:	add    esi,0x1
  41d060:	add    rbx,rbp
  41d063:	cmp    esi,edx
  41d065:	jne    0x41cf80
  41d06b:	jmp    0x41d045
  41d06d:	xor    eax,eax
  41d06f:	xor    esi,esi
  41d071:	jmp    0x41d045
  41d073:	nop    DWORD PTR [rax]
  41d076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d080:	push   rbx
  41d081:	sub    rsp,0x20
  41d085:	test   edx,edx
  41d087:	jle    0x41d0ec
  41d089:	test   r9d,r9d
  41d08c:	movzx  r10d,BYTE PTR [rcx]
  41d090:	jle    0x41d0f0
  41d092:	lea    r11d,[rdx-0x1]
  41d096:	xor    eax,eax
  41d098:	xor    edx,edx
  41d09a:	add    r11,rcx
  41d09d:	jmp    0x41d0c2
  41d09f:	nop
  41d0a0:	movsxd rdx,eax
  41d0a3:	xor    r10d,0x20
  41d0a7:	add    eax,0x1
  41d0aa:	mov    BYTE PTR [r8+rdx*1],r10b
  41d0ae:	xor    edx,edx
  41d0b0:	cmp    rcx,r11
  41d0b3:	je     0x41d0db
  41d0b5:	add    rcx,0x1
  41d0b9:	cmp    eax,r9d
  41d0bc:	movzx  r10d,BYTE PTR [rcx]
  41d0c0:	jge    0x41d0f0
  41d0c2:	test   edx,edx
  41d0c4:	jne    0x41d0a0
  41d0c6:	cmp    r10b,0x7d
  41d0ca:	je     0x41d0e5
  41d0cc:	movsxd rbx,eax
  41d0cf:	add    eax,0x1
  41d0d2:	cmp    rcx,r11
  41d0d5:	mov    BYTE PTR [r8+rbx*1],r10b
  41d0d9:	jne    0x41d0b5
  41d0db:	test   edx,edx
  41d0dd:	jne    0x41d0fc
  41d0df:	add    rsp,0x20
  41d0e3:	pop    rbx
  41d0e4:	ret    
  41d0e5:	mov    edx,0x1
  41d0ea:	jmp    0x41d0b0
  41d0ec:	xor    eax,eax
  41d0ee:	jmp    0x41d0df
  41d0f0:	lea    rcx,[rip+0x1da31]        # 0x43ab28
  41d0f7:	call   0x41d140
  41d0fc:	lea    rcx,[rip+0x1da4d]        # 0x43ab50
  41d103:	call   0x41d140
  41d108:	nop
  41d109:	nop
  41d10a:	nop
  41d10b:	nop
  41d10c:	nop
  41d10d:	nop
  41d10e:	nop
  41d10f:	nop
  41d110:	sub    rsp,0x38
  41d114:	mov    QWORD PTR [rsp+0x48],rdx
  41d119:	lea    rdx,[rsp+0x48]
  41d11e:	mov    QWORD PTR [rsp+0x50],r8
  41d123:	mov    QWORD PTR [rsp+0x58],r9
  41d128:	mov    QWORD PTR [rsp+0x28],rdx
  41d12d:	call   0x40e820
  41d132:	nop
  41d133:	add    rsp,0x38
  41d137:	ret    
  41d138:	nop    DWORD PTR [rax+rax*1+0x0]
  41d140:	sub    rsp,0x38
  41d144:	mov    QWORD PTR [rsp+0x48],rdx
  41d149:	lea    rdx,[rsp+0x48]
  41d14e:	mov    QWORD PTR [rsp+0x50],r8
  41d153:	mov    QWORD PTR [rsp+0x58],r9
  41d158:	mov    QWORD PTR [rsp+0x28],rdx
  41d15d:	call   0x40e800
  41d162:	nop
  41d163:	nop    DWORD PTR [rax]
  41d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d170:	sub    rsp,0x38
  41d174:	mov    QWORD PTR [rsp+0x58],r9
  41d179:	lea    r9,[rsp+0x58]
  41d17e:	mov    QWORD PTR [rsp+0x28],r9
  41d183:	call   0x40e870
  41d188:	nop
  41d189:	nop    DWORD PTR [rax+0x0]
  41d190:	sub    rsp,0x38
  41d194:	mov    QWORD PTR [rsp+0x58],r9
  41d199:	lea    r9,[rsp+0x58]
  41d19e:	mov    QWORD PTR [rsp+0x28],r9
  41d1a3:	call   0x40e8e0
  41d1a8:	nop
  41d1a9:	add    rsp,0x38
  41d1ad:	ret    
  41d1ae:	nop
  41d1af:	nop
  41d1b0:	sub    rsp,0x38
  41d1b4:	mov    QWORD PTR [rsp+0x48],rdx
  41d1b9:	lea    rdx,[rsp+0x48]
  41d1be:	mov    QWORD PTR [rsp+0x50],r8
  41d1c3:	mov    QWORD PTR [rsp+0x58],r9
  41d1c8:	mov    QWORD PTR [rsp+0x28],rdx
  41d1cd:	call   0x40e970
  41d1d2:	nop
  41d1d3:	add    rsp,0x38
  41d1d7:	ret    
  41d1d8:	nop
  41d1d9:	nop
  41d1da:	nop
  41d1db:	nop
  41d1dc:	nop
  41d1dd:	nop
  41d1de:	nop
  41d1df:	nop
  41d1e0:	push   rdi
  41d1e1:	push   rsi
  41d1e2:	push   rbx
  41d1e3:	sub    rsp,0x20
  41d1e7:	mov    rbx,QWORD PTR [rcx]
  41d1ea:	mov    rsi,rcx
  41d1ed:	mov    rdi,rdx
  41d1f0:	cmp    rbx,rdx
  41d1f3:	je     0x41d221
  41d1f5:	mov    rax,QWORD PTR [rbx]
  41d1f8:	mov    QWORD PTR [rsi],rax
  41d1fb:	mov    rcx,QWORD PTR [rbx+0x18]
  41d1ff:	call   QWORD PTR [rbx+0x8]
  41d202:	mov    rax,QWORD PTR [rbx+0x10]
  41d206:	test   rax,rax
  41d209:	je     0x41d211
  41d20b:	mov    rcx,QWORD PTR [rbx+0x18]
  41d20f:	call   rax
  41d211:	mov    rcx,rbx
  41d214:	call   0x41a7c0
  41d219:	mov    rbx,QWORD PTR [rsi]
  41d21c:	cmp    rbx,rdi
  41d21f:	jne    0x41d1f5
  41d221:	add    rsp,0x20
  41d225:	pop    rbx
  41d226:	pop    rsi
  41d227:	pop    rdi
  41d228:	ret    
  41d229:	nop    DWORD PTR [rax+0x0]
  41d230:	push   rdi
  41d231:	push   rsi
  41d232:	push   rbx
  41d233:	sub    rsp,0x20
  41d237:	mov    rbx,QWORD PTR [rcx]
  41d23a:	mov    rsi,rcx
  41d23d:	mov    rdi,rdx
  41d240:	cmp    rbx,rdx
  41d243:	je     0x41d26a
  41d245:	mov    rax,QWORD PTR [rbx]
  41d248:	mov    QWORD PTR [rsi],rax
  41d24b:	mov    rax,QWORD PTR [rbx+0x10]
  41d24f:	test   rax,rax
  41d252:	je     0x41d25a
  41d254:	mov    rcx,QWORD PTR [rbx+0x18]
  41d258:	call   rax
  41d25a:	mov    rcx,rbx
  41d25d:	call   0x41a7c0
  41d262:	mov    rbx,QWORD PTR [rsi]
  41d265:	cmp    rbx,rdi
  41d268:	jne    0x41d245
  41d26a:	add    rsp,0x20
  41d26e:	pop    rbx
  41d26f:	pop    rsi
  41d270:	pop    rdi
  41d271:	ret    
  41d272:	nop    DWORD PTR [rax+0x0]
  41d276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d280:	push   rsi
  41d281:	push   rbx
  41d282:	sub    rsp,0x28
  41d286:	mov    rsi,rcx
  41d289:	mov    ecx,0x20
  41d28e:	mov    rbx,rdx
  41d291:	call   0x41a6e0
  41d296:	mov    r8,rax
  41d299:	mov    rax,QWORD PTR [rip+0xee38]        # 0x42c0d8
  41d2a0:	mov    QWORD PTR [r8+0x8],rsi
  41d2a4:	mov    QWORD PTR [r8+0x10],0x0
  41d2ac:	mov    QWORD PTR [r8+0x18],rbx
  41d2b0:	mov    QWORD PTR [rip+0xee21],r8        # 0x42c0d8
  41d2b7:	test   rax,rax
  41d2ba:	mov    QWORD PTR [r8],rax
  41d2bd:	je     0x41d2c6
  41d2bf:	add    rsp,0x28
  41d2c3:	pop    rbx
  41d2c4:	pop    rsi
  41d2c5:	ret    
  41d2c6:	call   0x42b5e0
  41d2cb:	nop
  41d2cc:	nop    DWORD PTR [rax+0x0]
  41d2d0:	push   rdi
  41d2d1:	push   rsi
  41d2d2:	push   rbx
  41d2d3:	sub    rsp,0x20
  41d2d7:	mov    rdi,rcx
  41d2da:	mov    ecx,0x20
  41d2df:	mov    rbx,rdx
  41d2e2:	mov    rsi,r8
  41d2e5:	call   0x41a6e0
  41d2ea:	mov    r9,rax
  41d2ed:	mov    rax,QWORD PTR [rip+0xede4]        # 0x42c0d8
  41d2f4:	mov    QWORD PTR [r9+0x8],rdi
  41d2f8:	mov    QWORD PTR [r9+0x10],rsi
  41d2fc:	mov    QWORD PTR [r9+0x18],rbx
  41d300:	mov    QWORD PTR [rip+0xedd1],r9        # 0x42c0d8
  41d307:	test   rax,rax
  41d30a:	mov    QWORD PTR [r9],rax
  41d30d:	je     0x41d317
  41d30f:	add    rsp,0x20
  41d313:	pop    rbx
  41d314:	pop    rsi
  41d315:	pop    rdi
  41d316:	ret    
  41d317:	call   0x42b5e0
  41d31c:	nop
  41d31d:	nop    DWORD PTR [rax]
  41d320:	push   rsi
  41d321:	push   rbx
  41d322:	sub    rsp,0x28
  41d326:	mov    rsi,rcx
  41d329:	mov    ecx,0x20
  41d32e:	mov    rbx,rdx
  41d331:	call   0x41a6e0
  41d336:	mov    r8,rax
  41d339:	mov    rax,QWORD PTR [rip+0xed90]        # 0x42c0d0
  41d340:	mov    QWORD PTR [r8+0x8],rsi
  41d344:	mov    QWORD PTR [r8+0x10],0x0
  41d34c:	mov    QWORD PTR [r8+0x18],rbx
  41d350:	mov    QWORD PTR [rip+0xed79],r8        # 0x42c0d0
  41d357:	test   rax,rax
  41d35a:	mov    QWORD PTR [r8],rax
  41d35d:	je     0x41d366
  41d35f:	add    rsp,0x28
  41d363:	pop    rbx
  41d364:	pop    rsi
  41d365:	ret    
  41d366:	call   0x42b5e0
  41d36b:	nop
  41d36c:	nop    DWORD PTR [rax+0x0]
  41d370:	lea    rax,[rip+0x1d929]        # 0x43aca0
  41d377:	ret    
  41d378:	nop    DWORD PTR [rax+rax*1+0x0]
  41d380:	mov    rdx,rcx
  41d383:	lea    rcx,[rip+0xed4e]        # 0x42c0d8
  41d38a:	jmp    0x41d1e0
  41d38f:	nop
  41d390:	mov    rdx,rcx
  41d393:	lea    rcx,[rip+0xed36]        # 0x42c0d0
  41d39a:	jmp    0x41d1e0
  41d39f:	nop
  41d3a0:	mov    rdx,rcx
  41d3a3:	lea    rcx,[rip+0xed2e]        # 0x42c0d8
  41d3aa:	jmp    0x41d230
  41d3af:	nop
  41d3b0:	mov    rdx,rcx
  41d3b3:	lea    rcx,[rip+0xed16]        # 0x42c0d0
  41d3ba:	jmp    0x41d230
  41d3bf:	nop
  41d3c0:	lea    rdx,[rip+0x1d8d9]        # 0x43aca0
  41d3c7:	mov    rax,QWORD PTR [rip+0xed0a]        # 0x42c0d8
  41d3ce:	mov    QWORD PTR [rip+0xed03],rdx        # 0x42c0d8
  41d3d5:	ret    
  41d3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3e0:	lea    rdx,[rip+0x1d8b9]        # 0x43aca0
  41d3e7:	mov    rax,QWORD PTR [rip+0xece2]        # 0x42c0d0
  41d3ee:	mov    QWORD PTR [rip+0xecdb],rdx        # 0x42c0d0
  41d3f5:	ret    
  41d3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d400:	push   rbx
  41d401:	sub    rsp,0x20
  41d405:	lea    rax,[rip+0x1d894]        # 0x43aca0
  41d40c:	cmp    QWORD PTR [rip+0xecc5],rax        # 0x42c0d8
  41d413:	mov    rbx,rcx
  41d416:	je     0x41d430
  41d418:	lea    r8,[rip+0x1d7e9]        # 0x43ac08
  41d41f:	lea    rcx,[rip+0x1d7b5]        # 0x43abdb
  41d426:	mov    edx,0x108
  41d42b:	call   0x41d190
  41d430:	mov    QWORD PTR [rip+0xeca1],rbx        # 0x42c0d8
  41d437:	add    rsp,0x20
  41d43b:	pop    rbx
  41d43c:	ret    
  41d43d:	nop    DWORD PTR [rax]
  41d440:	push   rbx
  41d441:	sub    rsp,0x20
  41d445:	lea    rax,[rip+0x1d854]        # 0x43aca0
  41d44c:	cmp    QWORD PTR [rip+0xec7d],rax        # 0x42c0d0
  41d453:	mov    rbx,rcx
  41d456:	je     0x41d470
  41d458:	lea    r8,[rip+0x1d7a9]        # 0x43ac08
  41d45f:	lea    rcx,[rip+0x1d775]        # 0x43abdb
  41d466:	mov    edx,0x108
  41d46b:	call   0x41d190
  41d470:	mov    QWORD PTR [rip+0xec59],rbx        # 0x42c0d0
  41d477:	add    rsp,0x20
  41d47b:	pop    rbx
  41d47c:	ret    
  41d47d:	nop    DWORD PTR [rax]
  41d480:	ret    
  41d481:	nop
  41d482:	nop
  41d483:	nop
  41d484:	nop
  41d485:	nop
  41d486:	nop
  41d487:	nop
  41d488:	nop
  41d489:	nop
  41d48a:	nop
  41d48b:	nop
  41d48c:	nop
  41d48d:	nop
  41d48e:	nop
  41d48f:	nop
  41d490:	sub    rsp,0x28
  41d494:	mov    rdx,QWORD PTR [rip+0x3188d]        # 0x44ed28
  41d49b:	mov    eax,DWORD PTR [rdx]
  41d49d:	cmp    eax,0x1
  41d4a0:	je     0x41d530
  41d4a6:	jle    0x41d4f1
  41d4a8:	cmp    eax,0x2
  41d4ab:	je     0x41d4c1
  41d4ad:	cmp    eax,0x3
  41d4b0:	jne    0x41d510
  41d4b2:	test   ecx,ecx
  41d4b4:	mov    eax,ecx
  41d4b6:	jne    0x41d5a8
  41d4bc:	add    rsp,0x28
  41d4c0:	ret    
  41d4c1:	cmp    ecx,0x1
  41d4c4:	mov    eax,ecx
  41d4c6:	je     0x41d560
  41d4cc:	cmp    ecx,0x2
  41d4cf:	je     0x41d580
  41d4d5:	test   ecx,ecx
  41d4d7:	je     0x41d4bc
  41d4d9:	lea    r8,[rip+0x1d808]        # 0x43ace8
  41d4e0:	lea    rcx,[rip+0x1d7e3]        # 0x43acca
  41d4e7:	mov    edx,0xa1
  41d4ec:	call   0x41d170
  41d4f1:	test   eax,eax
  41d4f3:	jne    0x41d510
  41d4f5:	test   ecx,ecx
  41d4f7:	jne    0x41d590
  41d4fd:	mov    eax,0x1
  41d502:	mov    DWORD PTR [rdx],0x1
  41d508:	add    rsp,0x28
  41d50c:	ret    
  41d50d:	nop    DWORD PTR [rax]
  41d510:	lea    r8,[rip+0x1d7d1]        # 0x43ace8
  41d517:	lea    rcx,[rip+0x1d7ac]        # 0x43acca
  41d51e:	mov    edx,0xb1
  41d523:	call   0x41d170
  41d528:	nop    DWORD PTR [rax+rax*1+0x0]
  41d530:	cmp    ecx,0x1
  41d533:	mov    eax,ecx
  41d535:	je     0x41d570
  41d537:	cmp    ecx,0x2
  41d53a:	je     0x41d580
  41d53c:	test   ecx,ecx
  41d53e:	je     0x41d4bc
  41d544:	lea    r8,[rip+0x1d79d]        # 0x43ace8
  41d54b:	lea    rcx,[rip+0x1d778]        # 0x43acca
  41d552:	mov    edx,0x91
  41d557:	call   0x41d170
  41d55c:	nop    DWORD PTR [rax+0x0]
  41d560:	mov    DWORD PTR [rdx],0x1
  41d566:	xor    eax,eax
  41d568:	jmp    0x41d4bc
  41d56d:	nop    DWORD PTR [rax]
  41d570:	mov    DWORD PTR [rdx],0x2
  41d576:	jmp    0x41d4bc
  41d57b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d580:	mov    eax,0x1
  41d585:	mov    DWORD PTR [rdx],0x3
  41d58b:	add    rsp,0x28
  41d58f:	ret    
  41d590:	lea    r8,[rip+0x1d729]        # 0x43acc0
  41d597:	lea    rcx,[rip+0x1d72c]        # 0x43acca
  41d59e:	mov    edx,0x81
  41d5a3:	call   0x41d170
  41d5a8:	lea    r8,[rip+0x1d711]        # 0x43acc0
  41d5af:	lea    rcx,[rip+0x1d714]        # 0x43acca
  41d5b6:	mov    edx,0xae
  41d5bb:	call   0x41d170
  41d5c0:	nop
  41d5c1:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d5d0:	push   rdi
  41d5d1:	push   rsi
  41d5d2:	push   rbx
  41d5d3:	sub    rsp,0x30
  41d5d7:	mov    rbx,QWORD PTR [rcx]
  41d5da:	mov    rsi,QWORD PTR [rcx+0x8]
  41d5de:	call   0x41d370
  41d5e3:	mov    rcx,rax
  41d5e6:	mov    rdi,rbx
  41d5e9:	shr    rdi,0x20
  41d5ed:	call   0x41d380
  41d5f2:	cmp    ebx,0xfffffffe
  41d5f5:	je     0x41d64c
  41d5f7:	cmp    ebx,0xffffffff
  41d5fa:	je     0x41d627
  41d5fc:	lea    rax,[rip+0x1d6f7]        # 0x43acfa
  41d603:	lea    r9,[rip+0x1d776]        # 0x43ad80
  41d60a:	lea    r8,[rip+0x1d6e2]        # 0x43acf3
  41d611:	lea    rcx,[rip+0x1d6b2]        # 0x43acca
  41d618:	mov    edx,0x132
  41d61d:	mov    QWORD PTR [rsp+0x20],rax
  41d622:	call   0x41d170
  41d627:	mov    ecx,0x10
  41d62c:	call   0x4241f8
  41d631:	lea    rdx,[rip+0x29108]        # 0x446740
  41d638:	mov    DWORD PTR [rax],ebx
  41d63a:	mov    DWORD PTR [rax+0x4],edi
  41d63d:	mov    QWORD PTR [rax+0x8],rsi
  41d641:	xor    r8d,r8d
  41d644:	mov    rcx,rax
  41d647:	call   0x4241d8
  41d64c:	mov    ecx,0x10
  41d651:	call   0x4241f8
  41d656:	lea    rdx,[rip+0x290c3]        # 0x446720
  41d65d:	mov    DWORD PTR [rax],ebx
  41d65f:	mov    DWORD PTR [rax+0x4],edi
  41d662:	mov    QWORD PTR [rax+0x8],rsi
  41d666:	xor    r8d,r8d
  41d669:	mov    rcx,rax
  41d66c:	call   0x4241d8
  41d671:	nop
  41d672:	nop    DWORD PTR [rax+0x0]
  41d676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d680:	push   r12
  41d682:	push   rbp
  41d683:	push   rdi
  41d684:	push   rsi
  41d685:	push   rbx
  41d686:	sub    rsp,0x40
  41d68a:	movsxd rbx,DWORD PTR [rip+0x3168f]        # 0x44ed20
  41d691:	mov    edi,ecx
  41d693:	mov    esi,edx
  41d695:	test   ebx,ebx
  41d697:	jle    0x41d6ee
  41d699:	mov    rdx,r9
  41d69c:	mov    rcx,r8
  41d69f:	call   0x41a7f0
  41d6a4:	movsxd rbp,DWORD PTR [rip+0x31665]        # 0x44ed10
  41d6ab:	mov    r12,rax
  41d6ae:	cmp    ebx,ebp
  41d6b0:	jg     0x41d719
  41d6b2:	mov    rax,QWORD PTR [rip+0x3165f]        # 0x44ed18
  41d6b9:	shl    rbx,0x3
  41d6bd:	shl    rsi,0x20
  41d6c1:	or     rsi,rdi
  41d6c4:	mov    rcx,QWORD PTR [rax+rbx*1-0x8]
  41d6c9:	call   0x41a7c0
  41d6ce:	mov    rax,QWORD PTR [rip+0x31643]        # 0x44ed18
  41d6d5:	lea    rcx,[rsp+0x30]
  41d6da:	mov    QWORD PTR [rax+rbx*1-0x8],r12
  41d6df:	mov    QWORD PTR [rsp+0x30],rsi
  41d6e4:	mov    QWORD PTR [rsp+0x38],r12
  41d6e9:	call   0x41d5d0
  41d6ee:	lea    rax,[rip+0x1d636]        # 0x43ad2b
  41d6f5:	lea    r9,[rip+0x1d644]        # 0x43ad40
  41d6fc:	lea    r8,[rip+0x1d60d]        # 0x43ad10
  41d703:	lea    rcx,[rip+0x1d5c0]        # 0x43acca
  41d70a:	mov    edx,0x15c
  41d70f:	mov    QWORD PTR [rsp+0x20],rax
  41d714:	call   0x41d170
  41d719:	lea    edx,[rbx+0xa]
  41d71c:	mov    rcx,QWORD PTR [rip+0x315f5]        # 0x44ed18
  41d723:	mov    DWORD PTR [rip+0x315e7],edx        # 0x44ed10
  41d729:	movsxd rdx,edx
  41d72c:	shl    rdx,0x3
  41d730:	call   0x41a710
  41d735:	mov    r8d,DWORD PTR [rip+0x315d4]        # 0x44ed10
  41d73c:	lea    rcx,[rax+rbp*8]
  41d740:	xor    edx,edx
  41d742:	mov    QWORD PTR [rip+0x315cf],rax        # 0x44ed18
  41d749:	sub    r8d,ebp
  41d74c:	movsxd r8,r8d
  41d74f:	shl    r8,0x3
  41d753:	call   0x42a658
  41d758:	jmp    0x41d6b2
  41d75d:	nop    DWORD PTR [rax]
  41d760:	push   rbx
  41d761:	sub    rsp,0x20
  41d765:	mov    edx,0x130
  41d76a:	mov    ecx,0x1
  41d76f:	call   0x41a760
  41d774:	mov    rbx,rax
  41d777:	mov    DWORD PTR [rax+0x110],0x0
  41d781:	mov    DWORD PTR [rax+0x114],0x0
  41d78b:	mov    QWORD PTR [rax+0x118],0x0
  41d796:	call   0x41d3c0
  41d79b:	mov    QWORD PTR [rbx+0x120],rax
  41d7a2:	mov    rax,QWORD PTR [rip+0x3157f]        # 0x44ed28
  41d7a9:	mov    DWORD PTR [rbx],0x0
  41d7af:	mov    QWORD PTR [rip+0x31572],rbx        # 0x44ed28
  41d7b6:	mov    QWORD PTR [rbx+0x128],rax
  41d7bd:	lea    rax,[rbx+0x10]
  41d7c1:	add    rsp,0x20
  41d7c5:	pop    rbx
  41d7c6:	ret    
  41d7c7:	nop    WORD PTR [rax+rax*1+0x0]
  41d7d0:	xor    ecx,ecx
  41d7d2:	jmp    0x41d490
  41d7d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d7e0:	mov    ecx,0x1
  41d7e5:	jmp    0x41d490
  41d7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41d7f0:	add    DWORD PTR [rip+0x31529],0x1        # 0x44ed20
  41d7f7:	jmp    0x41d3c0
  41d7fc:	nop    DWORD PTR [rax+0x0]
  41d800:	sub    rsp,0x28
  41d804:	call   0x41d400
  41d809:	sub    DWORD PTR [rip+0x31510],0x1        # 0x44ed20
  41d810:	add    rsp,0x28
  41d814:	ret    
  41d815:	nop
  41d816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d820:	sub    rsp,0x28
  41d824:	call   0x41d370
  41d829:	mov    rcx,rax
  41d82c:	call   0x41d380
  41d831:	call   0x4241e0
  41d836:	nop
  41d837:	nop    WORD PTR [rax+rax*1+0x0]
  41d840:	push   rsi
  41d841:	push   rbx
  41d842:	sub    rsp,0x28
  41d846:	mov    rbx,QWORD PTR [rcx]
  41d849:	mov    rsi,QWORD PTR [rcx+0x8]
  41d84d:	call   0x41d370
  41d852:	mov    rcx,rax
  41d855:	call   0x41d380
  41d85a:	mov    ecx,0x2
  41d85f:	call   0x41d490
  41d864:	mov    rcx,QWORD PTR [rip+0x314bd]        # 0x44ed28
  41d86b:	mov    edx,ebx
  41d86d:	mov    QWORD PTR [rcx+0x110],rbx
  41d874:	mov    QWORD PTR [rcx+0x118],rsi
  41d87b:	add    rcx,0x10
  41d87f:	call   0x425776
  41d884:	nop
  41d885:	nop
  41d886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d890:	push   rdi
  41d891:	push   rsi
  41d892:	push   rbx
  41d893:	sub    rsp,0x30
  41d897:	mov    rbx,QWORD PTR [rip+0x3148a]        # 0x44ed28
  41d89e:	mov    edi,edx
  41d8a0:	mov    rsi,rcx
  41d8a3:	mov    rax,QWORD PTR [rbx+0x110]
  41d8aa:	mov    rdx,QWORD PTR [rbx+0x118]
  41d8b1:	mov    QWORD PTR [rcx],rax
  41d8b4:	mov    QWORD PTR [rcx+0x8],rdx
  41d8b8:	mov    rax,QWORD PTR [rbx+0x128]
  41d8bf:	mov    rcx,QWORD PTR [rbx+0x120]
  41d8c6:	mov    QWORD PTR [rip+0x3145b],rax        # 0x44ed28
  41d8cd:	call   0x41d400
  41d8d2:	mov    rcx,rbx
  41d8d5:	call   0x41a7c0
  41d8da:	mov    r8d,DWORD PTR [rsi]
  41d8dd:	xor    eax,eax
  41d8df:	test   r8d,r8d
  41d8e2:	js     0x41d8f0
  41d8e4:	add    rsp,0x30
  41d8e8:	pop    rbx
  41d8e9:	pop    rsi
  41d8ea:	pop    rdi
  41d8eb:	ret    
  41d8ec:	nop    DWORD PTR [rax+0x0]
  41d8f0:	neg    r8d
  41d8f3:	bt     edi,r8d
  41d8f7:	jae    0x41d906
  41d8f9:	mov    eax,0x1
  41d8fe:	add    rsp,0x30
  41d902:	pop    rbx
  41d903:	pop    rsi
  41d904:	pop    rdi
  41d905:	ret    
  41d906:	mov    rax,QWORD PTR [rsi]
  41d909:	mov    rdx,QWORD PTR [rsi+0x8]
  41d90d:	lea    rcx,[rsp+0x20]
  41d912:	mov    QWORD PTR [rsp+0x20],rax
  41d917:	mov    QWORD PTR [rsp+0x28],rdx
  41d91c:	call   0x41d840
  41d921:	nop
  41d922:	nop    DWORD PTR [rax+0x0]
  41d926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d930:	sub    rsp,0x38
  41d934:	mov    rax,QWORD PTR [rcx]
  41d937:	mov    rdx,QWORD PTR [rcx+0x8]
  41d93b:	lea    rcx,[rsp+0x20]
  41d940:	mov    QWORD PTR [rsp+0x20],rax
  41d945:	mov    QWORD PTR [rsp+0x28],rdx
  41d94a:	call   0x41d5d0
  41d94f:	nop
  41d950:	sub    rsp,0x28
  41d954:	mov    r9,r8
  41d957:	mov    r8,rdx
  41d95a:	mov    edx,ecx
  41d95c:	mov    ecx,0xffffffff
  41d961:	call   0x41d680
  41d966:	nop
  41d967:	nop    WORD PTR [rax+rax*1+0x0]
  41d970:	sub    rsp,0x28
  41d974:	mov    r8,rcx
  41d977:	mov    r9,rdx
  41d97a:	mov    ecx,0xfffffffe
  41d97f:	xor    edx,edx
  41d981:	call   0x41d680
  41d986:	nop
  41d987:	nop    WORD PTR [rax+rax*1+0x0]
  41d990:	sub    rsp,0x38
  41d994:	mov    QWORD PTR [rsp+0x50],r8
  41d999:	lea    r8,[rsp+0x50]
  41d99e:	mov    QWORD PTR [rsp+0x58],r9
  41d9a3:	mov    QWORD PTR [rsp+0x28],r8
  41d9a8:	call   0x41d950
  41d9ad:	nop
  41d9ae:	xchg   ax,ax
  41d9b0:	sub    rsp,0x38
  41d9b4:	mov    QWORD PTR [rsp+0x48],rdx
  41d9b9:	lea    rdx,[rsp+0x48]
  41d9be:	mov    QWORD PTR [rsp+0x50],r8
  41d9c3:	mov    QWORD PTR [rsp+0x58],r9
  41d9c8:	mov    QWORD PTR [rsp+0x28],rdx
  41d9cd:	call   0x41d970
  41d9d2:	nop
  41d9d3:	nop
  41d9d4:	nop
  41d9d5:	nop
  41d9d6:	nop
  41d9d7:	nop
  41d9d8:	nop
  41d9d9:	nop
  41d9da:	nop
  41d9db:	nop
  41d9dc:	nop
  41d9dd:	nop
  41d9de:	nop
  41d9df:	nop
  41d9e0:	sub    rsp,0x38
  41d9e4:	test   r8,r8
  41d9e7:	jne    0x41da02
  41d9e9:	mov    r8d,0x1
  41d9ef:	call   0x406720
  41d9f4:	cmp    eax,0x1
  41d9f7:	setne  al
  41d9fa:	movzx  eax,al
  41d9fd:	add    rsp,0x38
  41da01:	ret    
  41da02:	lea    rax,[rip+0x1d3db]        # 0x43ade4
  41da09:	lea    r9,[rip+0x1d3f0]        # 0x43ae00
  41da10:	lea    r8,[rip+0x1d3a9]        # 0x43adc0
  41da17:	lea    rcx,[rip+0x1d3bd]        # 0x43addb
  41da1e:	mov    edx,0x1d
  41da23:	mov    QWORD PTR [rsp+0x20],rax
  41da28:	call   0x41d170
  41da2d:	nop
  41da2e:	nop
  41da2f:	nop
  41da30:	sub    rsp,0x28
  41da34:	cmp    ecx,0x1
  41da37:	je     0x41da80
  41da39:	cmp    ecx,0x2
  41da3c:	je     0x41da70
  41da3e:	test   ecx,ecx
  41da40:	je     0x41da60
  41da42:	lea    r8,[rip+0x1d475]        # 0x43aebe
  41da49:	lea    rcx,[rip+0x1d48a]        # 0x43aeda
  41da50:	mov    edx,0x29
  41da55:	call   0x41d170
  41da5a:	nop    WORD PTR [rax+rax*1+0x0]
  41da60:	lea    rax,[rip+0x1d419]        # 0x43ae80
  41da67:	add    rsp,0x28
  41da6b:	ret    
  41da6c:	nop    DWORD PTR [rax+0x0]
  41da70:	lea    rax,[rip+0x1d431]        # 0x43aea8
  41da77:	add    rsp,0x28
  41da7b:	ret    
  41da7c:	nop    DWORD PTR [rax+0x0]
  41da80:	lea    rax,[rip+0x1d40e]        # 0x43ae95
  41da87:	add    rsp,0x28
  41da8b:	ret    
  41da8c:	nop    DWORD PTR [rax+0x0]
  41da90:	sub    rsp,0x28
  41da94:	cmp    ecx,0x1
  41da97:	je     0x41dae0
  41da99:	cmp    ecx,0x2
  41da9c:	je     0x41dad0
  41da9e:	test   ecx,ecx
  41daa0:	je     0x41dac0
  41daa2:	lea    r8,[rip+0x1d415]        # 0x43aebe
  41daa9:	lea    rcx,[rip+0x1d42a]        # 0x43aeda
  41dab0:	mov    edx,0x3d
  41dab5:	call   0x41d170
  41daba:	nop    WORD PTR [rax+rax*1+0x0]
  41dac0:	lea    rax,[rip+0x1d42d]        # 0x43aef4
  41dac7:	add    rsp,0x28
  41dacb:	ret    
  41dacc:	nop    DWORD PTR [rax+0x0]
  41dad0:	lea    rax,[rip+0x1d429]        # 0x43af00
  41dad7:	add    rsp,0x28
  41dadb:	ret    
  41dadc:	nop    DWORD PTR [rax+0x0]
  41dae0:	lea    rax,[rip+0x1d415]        # 0x43aefc
  41dae7:	add    rsp,0x28
  41daeb:	ret    
  41daec:	nop    DWORD PTR [rax+0x0]
  41daf0:	mov    DWORD PTR [rcx],0x0
  41daf6:	ret    
  41daf7:	nop    WORD PTR [rax+rax*1+0x0]
  41db00:	push   rbx
  41db01:	sub    rsp,0x20
  41db05:	mov    eax,DWORD PTR [rcx]
  41db07:	mov    rbx,rcx
  41db0a:	cmp    eax,0x1
  41db0d:	je     0x41db30
  41db0f:	cmp    eax,0x2
  41db12:	je     0x41db50
  41db14:	test   eax,eax
  41db16:	je     0x41db46
  41db18:	lea    r8,[rip+0x1d3e4]        # 0x43af03
  41db1f:	lea    rcx,[rip+0x1d3b4]        # 0x43aeda
  41db26:	mov    edx,0x5c
  41db2b:	call   0x41d170
  41db30:	mov    rcx,QWORD PTR [rcx+0x8]
  41db34:	test   rcx,rcx
  41db37:	je     0x41db3e
  41db39:	call   0x41a7c0
  41db3e:	mov    QWORD PTR [rbx+0x8],0x0
  41db46:	add    rsp,0x20
  41db4a:	pop    rbx
  41db4b:	ret    
  41db4c:	nop    DWORD PTR [rax+0x0]
  41db50:	mov    rcx,QWORD PTR [rcx+0x10]
  41db54:	add    rsp,0x20
  41db58:	pop    rbx
  41db59:	jmp    0x41a7c0
  41db5e:	xchg   ax,ax
  41db60:	sub    rsp,0x28
  41db64:	mov    eax,DWORD PTR [rcx]
  41db66:	cmp    eax,0x1
  41db69:	je     0x41dbb0
  41db6b:	cmp    eax,0x2
  41db6e:	je     0x41dba0
  41db70:	test   eax,eax
  41db72:	je     0x41db90
  41db74:	lea    r8,[rip+0x1d388]        # 0x43af03
  41db7b:	lea    rcx,[rip+0x1d358]        # 0x43aeda
  41db82:	mov    edx,0x70
  41db87:	call   0x41d170
  41db8c:	nop    DWORD PTR [rax+0x0]
  41db90:	mov    eax,0x1
  41db95:	add    rsp,0x28
  41db99:	ret    
  41db9a:	nop    WORD PTR [rax+rax*1+0x0]
  41dba0:	xor    eax,eax
  41dba2:	cmp    QWORD PTR [rcx+0x18],0x0
  41dba7:	sete   al
  41dbaa:	add    rsp,0x28
  41dbae:	ret    
  41dbaf:	nop
  41dbb0:	mov    rdx,QWORD PTR [rcx+0x8]
  41dbb4:	test   rdx,rdx
  41dbb7:	je     0x41db95
  41dbb9:	mov    edx,DWORD PTR [rdx]
  41dbbb:	xor    eax,eax
  41dbbd:	test   edx,edx
  41dbbf:	sete   al
  41dbc2:	add    rsp,0x28
  41dbc6:	ret    
  41dbc7:	nop    WORD PTR [rax+rax*1+0x0]
  41dbd0:	push   rbx
  41dbd1:	sub    rsp,0x20
  41dbd5:	mov    rbx,rcx
  41dbd8:	call   0x41db00
  41dbdd:	mov    DWORD PTR [rbx],0x0
  41dbe3:	add    rsp,0x20
  41dbe7:	pop    rbx
  41dbe8:	ret    
  41dbe9:	nop    DWORD PTR [rax+0x0]
  41dbf0:	push   r13
  41dbf2:	push   r12
  41dbf4:	push   rbp
  41dbf5:	push   rdi
  41dbf6:	push   rsi
  41dbf7:	push   rbx
  41dbf8:	sub    rsp,0x38
  41dbfc:	mov    eax,DWORD PTR [rdx]
  41dbfe:	mov    rsi,rcx
  41dc01:	mov    rbp,rdx
  41dc04:	cmp    eax,0x1
  41dc07:	je     0x41dca0
  41dc0d:	cmp    eax,0x2
  41dc10:	je     0x41dc30
  41dc12:	test   eax,eax
  41dc14:	je     0x41dc8f
  41dc16:	lea    r8,[rip+0x1d2e6]        # 0x43af03
  41dc1d:	lea    rcx,[rip+0x1d2b6]        # 0x43aeda
  41dc24:	mov    edx,0xc7
  41dc29:	call   0x41d170
  41dc2e:	xchg   ax,ax
  41dc30:	mov    eax,DWORD PTR [rcx]
  41dc32:	test   eax,eax
  41dc34:	je     0x41dd63
  41dc3a:	cmp    eax,0x2
  41dc3d:	jne    0x41dd80
  41dc43:	mov    rdi,QWORD PTR [rcx+0x18]
  41dc47:	add    rdi,QWORD PTR [rbp+0x18]
  41dc4b:	mov    rcx,rdi
  41dc4e:	call   0x41a6e0
  41dc53:	mov    rbx,QWORD PTR [rsi+0x18]
  41dc57:	mov    r13,QWORD PTR [rsi+0x10]
  41dc5b:	mov    rcx,rax
  41dc5e:	mov    r12,rax
  41dc61:	mov    r8,rbx
  41dc64:	mov    rdx,r13
  41dc67:	call   0x42a668
  41dc6c:	mov    rdx,QWORD PTR [rbp+0x10]
  41dc70:	mov    r8,QWORD PTR [rbp+0x18]
  41dc74:	lea    rcx,[r12+rbx*1]
  41dc78:	call   0x42a668
  41dc7d:	mov    rcx,r13
  41dc80:	call   0x41a7c0
  41dc85:	mov    QWORD PTR [rsi+0x10],r12
  41dc89:	mov    QWORD PTR [rsi+0x18],rdi
  41dc8d:	xor    eax,eax
  41dc8f:	add    rsp,0x38
  41dc93:	pop    rbx
  41dc94:	pop    rsi
  41dc95:	pop    rdi
  41dc96:	pop    rbp
  41dc97:	pop    r12
  41dc99:	pop    r13
  41dc9b:	ret    
  41dc9c:	nop    DWORD PTR [rax+0x0]
  41dca0:	mov    eax,DWORD PTR [rcx]
  41dca2:	test   eax,eax
  41dca4:	je     0x41dd50
  41dcaa:	cmp    eax,0x1
  41dcad:	jne    0x41dd80
  41dcb3:	mov    rbx,QWORD PTR [rbp+0x8]
  41dcb7:	test   rbx,rbx
  41dcba:	je     0x41dc8d
  41dcbc:	mov    eax,DWORD PTR [rbx]
  41dcbe:	test   eax,eax
  41dcc0:	je     0x41dc8d
  41dcc2:	lea    edi,[rax-0x1]
  41dcc5:	cmp    eax,edi
  41dcc7:	jbe    0x41dd92
  41dccd:	mov    rcx,QWORD PTR [rsi+0x8]
  41dcd1:	jmp    0x41dd24
  41dcd3:	mov    r8d,DWORD PTR [rcx]
  41dcd6:	mov    r9d,DWORD PTR [rcx+0x4]
  41dcda:	cmp    r9d,r8d
  41dcdd:	je     0x41dd29
  41dcdf:	cmp    r9d,r8d
  41dce2:	jbe    0x41ddbd
  41dce8:	lea    edx,[r8+0x1]
  41dcec:	shl    r8,0x4
  41dcf0:	mov    DWORD PTR [rcx],edx
  41dcf2:	mov    edx,edi
  41dcf4:	shl    rdx,0x4
  41dcf8:	test   edi,edi
  41dcfa:	mov    rax,QWORD PTR [rbx+rdx*1+0x8]
  41dcff:	mov    rdx,QWORD PTR [rbx+rdx*1+0x10]
  41dd04:	mov    QWORD PTR [rcx+r8*1+0x8],rax
  41dd09:	mov    QWORD PTR [rcx+r8*1+0x10],rdx
  41dd0e:	je     0x41dc8d
  41dd14:	mov    rbx,QWORD PTR [rbp+0x8]
  41dd18:	sub    edi,0x1
  41dd1b:	test   rbx,rbx
  41dd1e:	je     0x41dd92
  41dd20:	cmp    edi,DWORD PTR [rbx]
  41dd22:	jae    0x41dd92
  41dd24:	test   rcx,rcx
  41dd27:	jne    0x41dcd3
  41dd29:	mov    r9d,0x10
  41dd2f:	mov    r8d,0x8
  41dd35:	mov    edx,0x1
  41dd3a:	call   0x40ea70
  41dd3f:	mov    QWORD PTR [rsi+0x8],rax
  41dd43:	mov    r8d,DWORD PTR [rax]
  41dd46:	mov    rcx,rax
  41dd49:	mov    r9d,DWORD PTR [rax+0x4]
  41dd4d:	jmp    0x41dcdf
  41dd4f:	nop
  41dd50:	mov    DWORD PTR [rcx],0x1
  41dd56:	mov    QWORD PTR [rcx+0x8],0x0
  41dd5e:	jmp    0x41dcb3
  41dd63:	mov    DWORD PTR [rcx],0x2
  41dd69:	mov    QWORD PTR [rcx+0x10],0x0
  41dd71:	xor    edi,edi
  41dd73:	mov    QWORD PTR [rcx+0x18],0x0
  41dd7b:	jmp    0x41dc47
  41dd80:	mov    eax,0xffffffff
  41dd85:	add    rsp,0x38
  41dd89:	pop    rbx
  41dd8a:	pop    rsi
  41dd8b:	pop    rdi
  41dd8c:	pop    rbp
  41dd8d:	pop    r12
  41dd8f:	pop    r13
  41dd91:	ret    
  41dd92:	lea    rax,[rip+0x1d1a1]        # 0x43af3a
  41dd99:	lea    r9,[rip+0x1d260]        # 0x43b000
  41dda0:	lea    r8,[rip+0x1d178]        # 0x43af1f
  41dda7:	lea    rcx,[rip+0x1d12c]        # 0x43aeda
  41ddae:	mov    edx,0x9e
  41ddb3:	mov    QWORD PTR [rsp+0x20],rax
  41ddb8:	call   0x41d170
  41ddbd:	lea    rax,[rip+0x1d17c]        # 0x43af40
  41ddc4:	lea    r9,[rip+0x1d1b5]        # 0x43af80
  41ddcb:	lea    r8,[rip+0x1d14d]        # 0x43af1f
  41ddd2:	lea    rcx,[rip+0x1d101]        # 0x43aeda
  41ddd9:	mov    edx,0xa0
  41ddde:	mov    QWORD PTR [rsp+0x20],rax
  41dde3:	call   0x41d170
  41dde8:	nop
  41dde9:	nop
  41ddea:	nop
  41ddeb:	nop
  41ddec:	nop
  41dded:	nop
  41ddee:	nop
  41ddef:	nop
  41ddf0:	mov    eax,0x270f
  41ddf5:	sub    ecx,0x1
  41ddf8:	cmp    ecx,0x27
  41ddfb:	ja     0x41de08
  41ddfd:	lea    rax,[rip+0x1d27c]        # 0x43b080
  41de04:	movsx  eax,WORD PTR [rax+rcx*2]
  41de08:	repz ret 
  41de0a:	nop    WORD PTR [rax+rax*1+0x0]
  41de10:	mov    eax,ecx
  41de12:	and    eax,0xfffff1f4
  41de17:	jne    0x41de80
  41de19:	mov    r8d,ecx
  41de1c:	shr    r8d,1
  41de1f:	and    r8d,0x100
  41de26:	mov    r9d,r8d
  41de29:	or     r9d,0x400
  41de30:	test   ch,0x8
  41de33:	cmovne r8d,r9d
  41de37:	mov    r9d,r8d
  41de3a:	or     r9d,0x200
  41de41:	test   ch,0x4
  41de44:	cmovne r8d,r9d
  41de48:	mov    r9d,r8d
  41de4b:	or     r9d,0x8
  41de4f:	test   cl,0x8
  41de52:	cmovne r8d,r9d
  41de56:	mov    r9d,r8d
  41de59:	or     r9d,0x1
  41de5d:	test   cl,0x1
  41de60:	cmovne r8d,r9d
  41de64:	mov    r9d,r8d
  41de67:	or     r9d,0x2
  41de6b:	and    ecx,0x2
  41de6e:	cmovne r8d,r9d
  41de72:	or     r8d,0x8000
  41de79:	mov    DWORD PTR [rdx],r8d
  41de7c:	ret    
  41de7d:	nop    DWORD PTR [rax]
  41de80:	mov    eax,0xffffffff
  41de85:	ret    
  41de86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de90:	mov    eax,ecx
  41de92:	and    eax,0xffff3e00
  41de97:	jne    0x41df50
  41de9d:	mov    r8d,ecx
  41dea0:	and    r8w,0x8000
  41dea6:	mov    r9d,r8d
  41dea9:	or     r9w,0x4000
  41deaf:	test   ch,0x40
  41deb2:	cmovne r8d,r9d
  41deb6:	mov    r9d,r8d
  41deb9:	or     r9w,0x2000
  41debf:	test   ch,0x20
  41dec2:	cmovne r8d,r9d
  41dec6:	mov    r9d,r8d
  41dec9:	or     r9w,0x100
  41decf:	test   ch,0x1
  41ded2:	cmovne r8d,r9d
  41ded6:	mov    r9d,r8d
  41ded9:	or     r9b,0x80
  41dedd:	test   cl,0x80
  41dee0:	cmovne r8d,r9d
  41dee4:	mov    r9d,r8d
  41dee7:	or     r9d,0x40
  41deeb:	test   cl,0x40
  41deee:	cmovne r8d,r9d
  41def2:	mov    r9d,r8d
  41def5:	or     r9d,0x20
  41def9:	test   cl,0x20
  41defc:	cmovne r8d,r9d
  41df00:	mov    r9d,r8d
  41df03:	or     r9d,0x10
  41df07:	test   cl,0x10
  41df0a:	cmovne r8d,r9d
  41df0e:	mov    r9d,r8d
  41df11:	or     r9d,0x8
  41df15:	test   cl,0x8
  41df18:	cmovne r8d,r9d
  41df1c:	mov    r9d,r8d
  41df1f:	or     r9d,0x4
  41df23:	test   cl,0x4
  41df26:	cmovne r8d,r9d
  41df2a:	mov    r9d,r8d
  41df2d:	or     r9d,0x2
  41df31:	test   cl,0x2
  41df34:	cmovne r8d,r9d
  41df38:	mov    r9d,r8d
  41df3b:	or     r9d,0x1
  41df3f:	and    ecx,0x1
  41df42:	cmovne r8d,r9d
  41df46:	mov    WORD PTR [rdx],r8w
  41df4a:	ret    
  41df4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41df50:	mov    eax,0xffffffff
  41df55:	ret    
  41df56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df60:	movsxd rax,DWORD PTR [rcx]
  41df63:	mov    r9,rcx
  41df66:	mov    r8,rax
  41df69:	mov    rcx,rax
  41df6c:	sar    r8,0x18
  41df70:	mov    BYTE PTR [rdx+0x3],cl
  41df73:	mov    BYTE PTR [rdx],r8b
  41df76:	mov    r8,rax
  41df79:	sar    rax,0x8
  41df7d:	sar    r8,0x10
  41df81:	mov    BYTE PTR [rdx+0x2],al
  41df84:	mov    BYTE PTR [rdx+0x1],r8b
  41df88:	movzx  eax,WORD PTR [r9+0x4]
  41df8d:	mov    BYTE PTR [rdx+0x4],0x0
  41df91:	mov    BYTE PTR [rdx+0x5],0x0
  41df95:	movzx  ecx,ah
  41df98:	mov    BYTE PTR [rdx+0x7],al
  41df9b:	mov    eax,0xffff8000
  41dfa0:	mov    BYTE PTR [rdx+0x6],cl
  41dfa3:	movzx  ecx,WORD PTR [r9+0x6]
  41dfa8:	mov    r8d,ecx
  41dfab:	and    r8w,0xf000
  41dfb1:	cmp    r8w,ax
  41dfb5:	je     0x41dfd9
  41dfb7:	cmp    r8w,0x4000
  41dfbd:	mov    eax,0x4000
  41dfc2:	je     0x41dfd9
  41dfc4:	cmp    r8w,0x2000
  41dfca:	mov    eax,0x2000
  41dfcf:	mov    r8d,0x0
  41dfd5:	cmovne eax,r8d
  41dfd9:	mov    r8d,eax
  41dfdc:	mov    BYTE PTR [rdx+0x8],0x0
  41dfe0:	mov    BYTE PTR [rdx+0x9],0x0
  41dfe4:	or     r8w,0x100
  41dfea:	test   ch,0x1
  41dfed:	cmovne eax,r8d
  41dff1:	mov    r8d,eax
  41dff4:	or     r8b,0x80
  41dff8:	test   cl,0x80
  41dffb:	cmovne eax,r8d
  41dfff:	mov    r8d,eax
  41e002:	or     r8d,0x40
  41e006:	test   cl,0x40
  41e009:	cmovne eax,r8d
  41e00d:	mov    r8d,eax
  41e010:	or     r8d,0x20
  41e014:	test   cl,0x20
  41e017:	cmovne eax,r8d
  41e01b:	mov    r8d,eax
  41e01e:	or     r8d,0x10
  41e022:	test   cl,0x10
  41e025:	cmovne eax,r8d
  41e029:	mov    r8d,eax
  41e02c:	or     r8d,0x8
  41e030:	test   cl,0x8
  41e033:	cmovne eax,r8d
  41e037:	mov    r8d,eax
  41e03a:	or     r8d,0x4
  41e03e:	test   cl,0x4
  41e041:	cmovne eax,r8d
  41e045:	mov    r8d,eax
  41e048:	or     r8d,0x2
  41e04c:	test   cl,0x2
  41e04f:	cmovne eax,r8d
  41e053:	mov    r8d,eax
  41e056:	or     r8d,0x1
  41e05a:	and    ecx,0x1
  41e05d:	cmovne eax,r8d
  41e061:	movzx  ecx,ah
  41e064:	mov    BYTE PTR [rdx+0xb],al
  41e067:	mov    BYTE PTR [rdx+0xa],cl
  41e06a:	movsx  rax,WORD PTR [r9+0x8]
  41e06f:	mov    r8,rax
  41e072:	mov    rcx,rax
  41e075:	sar    r8,0x18
  41e079:	mov    BYTE PTR [rdx+0xf],cl
  41e07c:	mov    BYTE PTR [rdx+0xc],r8b
  41e080:	mov    r8,rax
  41e083:	sar    rax,0x8
  41e087:	sar    r8,0x10
  41e08b:	mov    BYTE PTR [rdx+0xe],al
  41e08e:	mov    BYTE PTR [rdx+0xd],r8b
  41e092:	movsx  rax,WORD PTR [r9+0xa]
  41e097:	mov    r8,rax
  41e09a:	mov    rcx,rax
  41e09d:	sar    r8,0x18
  41e0a1:	mov    BYTE PTR [rdx+0x13],cl
  41e0a4:	mov    BYTE PTR [rdx+0x10],r8b
  41e0a8:	mov    r8,rax
  41e0ab:	sar    rax,0x8
  41e0af:	sar    r8,0x10
  41e0b3:	mov    BYTE PTR [rdx+0x12],al
  41e0b6:	mov    BYTE PTR [rdx+0x11],r8b
  41e0ba:	movsx  rax,WORD PTR [r9+0xc]
  41e0bf:	mov    r8,rax
  41e0c2:	mov    rcx,rax
  41e0c5:	sar    r8,0x18
  41e0c9:	mov    BYTE PTR [rdx+0x17],cl
  41e0cc:	mov    BYTE PTR [rdx+0x14],r8b
  41e0d0:	mov    r8,rax
  41e0d3:	sar    rax,0x8
  41e0d7:	sar    r8,0x10
  41e0db:	mov    BYTE PTR [rdx+0x16],al
  41e0de:	mov    BYTE PTR [rdx+0x15],r8b
  41e0e2:	movsxd rax,DWORD PTR [r9+0x10]
  41e0e6:	mov    r8,rax
  41e0e9:	mov    rcx,rax
  41e0ec:	sar    r8,0x18
  41e0f0:	mov    BYTE PTR [rdx+0x1b],cl
  41e0f3:	mov    ecx,0x38
  41e0f8:	mov    BYTE PTR [rdx+0x18],r8b
  41e0fc:	mov    r8,rax
  41e0ff:	sar    rax,0x8
  41e103:	sar    r8,0x10
  41e107:	mov    BYTE PTR [rdx+0x1a],al
  41e10a:	lea    rax,[rdx+0x1c]
  41e10e:	mov    BYTE PTR [rdx+0x19],r8b
  41e112:	mov    r10,QWORD PTR [r9+0x18]
  41e116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e120:	mov    r8,r10
  41e123:	add    rax,0x1
  41e127:	sar    r8,cl
  41e12a:	sub    ecx,0x8
  41e12d:	mov    BYTE PTR [rax-0x1],r8b
  41e131:	cmp    ecx,0xfffffff8
  41e134:	jne    0x41e120
  41e136:	lea    rax,[rdx+0x24]
  41e13a:	mov    ecx,0x38
  41e13f:	mov    r10d,0x200
  41e145:	mov    r8,r10
  41e148:	add    rax,0x1
  41e14c:	sar    r8,cl
  41e14f:	sub    ecx,0x8
  41e152:	mov    BYTE PTR [rax-0x1],r8b
  41e156:	cmp    ecx,0xfffffff8
  41e159:	jne    0x41e145
  41e15b:	mov    r10,QWORD PTR [r9+0x18]
  41e15f:	mov    ecx,0x38
  41e164:	lea    rax,[r10+0x3fe]
  41e16b:	add    r10,0x1ff
  41e172:	cmovs  r10,rax
  41e176:	lea    rax,[rdx+0x2c]
  41e17a:	sar    r10,0x9
  41e17e:	xchg   ax,ax
  41e180:	mov    r8,r10
  41e183:	add    rax,0x1
  41e187:	sar    r8,cl
  41e18a:	sub    ecx,0x8
  41e18d:	mov    BYTE PTR [rax-0x1],r8b
  41e191:	cmp    ecx,0xfffffff8
  41e194:	jne    0x41e180
  41e196:	mov    rax,QWORD PTR [r9+0x20]
  41e19a:	mov    rcx,rax
  41e19d:	mov    BYTE PTR [rdx+0x37],al
  41e1a0:	sar    rcx,0x18
  41e1a4:	mov    BYTE PTR [rdx+0x34],cl
  41e1a7:	mov    rcx,rax
  41e1aa:	sar    rcx,0x10
  41e1ae:	mov    BYTE PTR [rdx+0x35],cl
  41e1b1:	mov    rcx,rax
  41e1b4:	sar    rcx,0x8
  41e1b8:	mov    BYTE PTR [rdx+0x36],cl
  41e1bb:	mov    rax,QWORD PTR [r9+0x28]
  41e1bf:	mov    rcx,rax
  41e1c2:	mov    BYTE PTR [rdx+0x3b],al
  41e1c5:	sar    rcx,0x18
  41e1c9:	mov    BYTE PTR [rdx+0x38],cl
  41e1cc:	mov    rcx,rax
  41e1cf:	sar    rcx,0x10
  41e1d3:	mov    BYTE PTR [rdx+0x39],cl
  41e1d6:	mov    rcx,rax
  41e1d9:	sar    rcx,0x8
  41e1dd:	mov    BYTE PTR [rdx+0x3a],cl
  41e1e0:	mov    rax,QWORD PTR [r9+0x30]
  41e1e4:	mov    rcx,rax
  41e1e7:	mov    BYTE PTR [rdx+0x3f],al
  41e1ea:	sar    rcx,0x18
  41e1ee:	mov    BYTE PTR [rdx+0x3c],cl
  41e1f1:	mov    rcx,rax
  41e1f4:	sar    rcx,0x10
  41e1f8:	mov    BYTE PTR [rdx+0x3d],cl
  41e1fb:	mov    rcx,rax
  41e1fe:	sar    rcx,0x8
  41e202:	mov    BYTE PTR [rdx+0x3e],cl
  41e205:	ret    
  41e206:	nop
  41e207:	nop
  41e208:	nop
  41e209:	nop
  41e20a:	nop
  41e20b:	nop
  41e20c:	nop
  41e20d:	nop
  41e20e:	nop
  41e20f:	nop
  41e210:	push   rbx
  41e211:	sub    rsp,0x30
  41e215:	lea    r8,[rsp+0x28]
  41e21a:	mov    ebx,edx
  41e21c:	call   0x404980
  41e221:	cmp    eax,0xffffffff
  41e224:	je     0x41e231
  41e226:	mov    rax,QWORD PTR [rsp+0x28]
  41e22b:	add    rsp,0x30
  41e22f:	pop    rbx
  41e230:	ret    
  41e231:	lea    rdx,[rip+0x1cec8]        # 0x43b100
  41e238:	mov    r8d,ebx
  41e23b:	mov    ecx,0x9
  41e240:	call   0x41d990
  41e245:	nop
  41e246:	nop
  41e247:	nop
  41e248:	nop
  41e249:	nop
  41e24a:	nop
  41e24b:	nop
  41e24c:	nop
  41e24d:	nop
  41e24e:	nop
  41e24f:	nop
  41e250:	ret    
  41e251:	nop    DWORD PTR [rax+rax*1+0x0]
  41e256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e260:	ret    
  41e261:	nop
  41e262:	nop
  41e263:	nop
  41e264:	nop
  41e265:	nop
  41e266:	nop
  41e267:	nop
  41e268:	nop
  41e269:	nop
  41e26a:	nop
  41e26b:	nop
  41e26c:	nop
  41e26d:	nop
  41e26e:	nop
  41e26f:	nop
  41e270:	push   rbx
  41e271:	sub    rsp,0x20
  41e275:	lea    rax,[rip+0xdec4]        # 0x42c140
  41e27c:	lea    rbx,[rip+0x30add]        # 0x44ed60
  41e283:	mov    DWORD PTR [rip+0x30adb],0x39        # 0x44ed68
  41e28d:	mov    QWORD PTR [rip+0x30acc],rax        # 0x44ed60
  41e294:	lea    rax,[rip+0xde65]        # 0x42c100
  41e29b:	mov    rcx,rbx
  41e29e:	mov    QWORD PTR [rip+0x30acb],rax        # 0x44ed70
  41e2a5:	lea    rax,[rip+0x25114]        # 0x4433c0
  41e2ac:	mov    QWORD PTR [rip+0x30ac5],rax        # 0x44ed78
  41e2b3:	call   0x41c2b0
  41e2b8:	mov    QWORD PTR [rip+0x30a81],rbx        # 0x44ed40
  41e2bf:	add    rsp,0x20
  41e2c3:	pop    rbx
  41e2c4:	ret    
  41e2c5:	nop
  41e2c6:	nop
  41e2c7:	nop
  41e2c8:	nop
  41e2c9:	nop
  41e2ca:	nop
  41e2cb:	nop
  41e2cc:	nop
  41e2cd:	nop
  41e2ce:	nop
  41e2cf:	nop
  41e2d0:	push   rbx
  41e2d1:	sub    rsp,0x20
  41e2d5:	lea    rax,[rip+0xe264]        # 0x42c540
  41e2dc:	lea    rbx,[rip+0x30abd]        # 0x44eda0
  41e2e3:	mov    DWORD PTR [rip+0x30abb],0x49        # 0x44eda8
  41e2ed:	mov    QWORD PTR [rip+0x30aac],rax        # 0x44eda0
  41e2f4:	lea    rax,[rip+0xe205]        # 0x42c500
  41e2fb:	mov    rcx,rbx
  41e2fe:	mov    QWORD PTR [rip+0x30aab],rax        # 0x44edb0
  41e305:	lea    rax,[rip+0x251c4]        # 0x4434d0
  41e30c:	mov    QWORD PTR [rip+0x30aa5],rax        # 0x44edb8
  41e313:	call   0x41c2b0
  41e318:	mov    QWORD PTR [rip+0x30a61],rbx        # 0x44ed80
  41e31f:	add    rsp,0x20
  41e323:	pop    rbx
  41e324:	ret    
  41e325:	nop
  41e326:	nop
  41e327:	nop
  41e328:	nop
  41e329:	nop
  41e32a:	nop
  41e32b:	nop
  41e32c:	nop
  41e32d:	nop
  41e32e:	nop
  41e32f:	nop
  41e330:	push   rbx
  41e331:	sub    rsp,0x20
  41e335:	lea    rax,[rip+0xe704]        # 0x42ca40
  41e33c:	lea    rbx,[rip+0x30a9d]        # 0x44ede0
  41e343:	mov    DWORD PTR [rip+0x30a9b],0x97        # 0x44ede8
  41e34d:	mov    QWORD PTR [rip+0x30a8c],rax        # 0x44ede0
  41e354:	lea    rax,[rip+0xe6a5]        # 0x42ca00
  41e35b:	mov    rcx,rbx
  41e35e:	mov    QWORD PTR [rip+0x30a8b],rax        # 0x44edf0
  41e365:	lea    rax,[rip+0x252e4]        # 0x443650
  41e36c:	mov    QWORD PTR [rip+0x30a85],rax        # 0x44edf8
  41e373:	call   0x41c2b0
  41e378:	mov    QWORD PTR [rip+0x30a41],rbx        # 0x44edc0
  41e37f:	add    rsp,0x20
  41e383:	pop    rbx
  41e384:	ret    
  41e385:	nop
  41e386:	nop
  41e387:	nop
  41e388:	nop
  41e389:	nop
  41e38a:	nop
  41e38b:	nop
  41e38c:	nop
  41e38d:	nop
  41e38e:	nop
  41e38f:	nop
  41e390:	push   rbx
  41e391:	sub    rsp,0x20
  41e395:	lea    rax,[rip+0xf064]        # 0x42d400
  41e39c:	lea    rbx,[rip+0x30a7d]        # 0x44ee20
  41e3a3:	mov    DWORD PTR [rip+0x30a7b],0x3f        # 0x44ee28
  41e3ad:	mov    QWORD PTR [rip+0x30a6c],rax        # 0x44ee20
  41e3b4:	lea    rax,[rip+0xf005]        # 0x42d3c0
  41e3bb:	mov    rcx,rbx
  41e3be:	mov    QWORD PTR [rip+0x30a6b],rax        # 0x44ee30
  41e3c5:	lea    rax,[rip+0x255f4]        # 0x4439c0
  41e3cc:	mov    QWORD PTR [rip+0x30a65],rax        # 0x44ee38
  41e3d3:	call   0x41c2b0
  41e3d8:	mov    QWORD PTR [rip+0x30a21],rbx        # 0x44ee00
  41e3df:	add    rsp,0x20
  41e3e3:	pop    rbx
  41e3e4:	ret    
  41e3e5:	nop
  41e3e6:	nop
  41e3e7:	nop
  41e3e8:	nop
  41e3e9:	nop
  41e3ea:	nop
  41e3eb:	nop
  41e3ec:	nop
  41e3ed:	nop
  41e3ee:	nop
  41e3ef:	nop
  41e3f0:	push   rbx
  41e3f1:	sub    rsp,0x20
  41e3f5:	lea    rax,[rip+0xf444]        # 0x42d840
  41e3fc:	lea    rbx,[rip+0x30a5d]        # 0x44ee60
  41e403:	mov    DWORD PTR [rip+0x30a5b],0x4f        # 0x44ee68
  41e40d:	mov    QWORD PTR [rip+0x30a4c],rax        # 0x44ee60
  41e414:	lea    rax,[rip+0xf3e5]        # 0x42d800
  41e41b:	mov    rcx,rbx
  41e41e:	mov    QWORD PTR [rip+0x30a4b],rax        # 0x44ee70
  41e425:	lea    rax,[rip+0x256e4]        # 0x443b10
  41e42c:	mov    QWORD PTR [rip+0x30a45],rax        # 0x44ee78
  41e433:	call   0x41c2b0
  41e438:	mov    QWORD PTR [rip+0x30a01],rbx        # 0x44ee40
  41e43f:	add    rsp,0x20
  41e443:	pop    rbx
  41e444:	ret    
  41e445:	nop
  41e446:	nop
  41e447:	nop
  41e448:	nop
  41e449:	nop
  41e44a:	nop
  41e44b:	nop
  41e44c:	nop
  41e44d:	nop
  41e44e:	nop
  41e44f:	nop
  41e450:	push   rbx
  41e451:	sub    rsp,0x20
  41e455:	lea    rax,[rip+0xf924]        # 0x42dd80
  41e45c:	lea    rbx,[rip+0x30a3d]        # 0x44eea0
  41e463:	mov    DWORD PTR [rip+0x30a3b],0x39        # 0x44eea8
  41e46d:	mov    QWORD PTR [rip+0x30a2c],rax        # 0x44eea0
  41e474:	lea    rax,[rip+0xf8c5]        # 0x42dd40
  41e47b:	mov    rcx,rbx
  41e47e:	mov    QWORD PTR [rip+0x30a2b],rax        # 0x44eeb0
  41e485:	lea    rax,[rip+0x25834]        # 0x443cc0
  41e48c:	mov    QWORD PTR [rip+0x30a25],rax        # 0x44eeb8
  41e493:	call   0x41c2b0
  41e498:	mov    QWORD PTR [rip+0x309e1],rbx        # 0x44ee80
  41e49f:	add    rsp,0x20
  41e4a3:	pop    rbx
  41e4a4:	ret    
  41e4a5:	nop
  41e4a6:	nop
  41e4a7:	nop
  41e4a8:	nop
  41e4a9:	nop
  41e4aa:	nop
  41e4ab:	nop
  41e4ac:	nop
  41e4ad:	nop
  41e4ae:	nop
  41e4af:	nop
  41e4b0:	push   rbx
  41e4b1:	sub    rsp,0x20
  41e4b5:	lea    rax,[rip+0xfcc4]        # 0x42e180
  41e4bc:	lea    rbx,[rip+0x30a1d]        # 0x44eee0
  41e4c3:	mov    DWORD PTR [rip+0x30a1b],0x49        # 0x44eee8
  41e4cd:	mov    QWORD PTR [rip+0x30a0c],rax        # 0x44eee0
  41e4d4:	lea    rax,[rip+0xfc65]        # 0x42e140
  41e4db:	mov    rcx,rbx
  41e4de:	mov    QWORD PTR [rip+0x30a0b],rax        # 0x44eef0
  41e4e5:	lea    rax,[rip+0x258e4]        # 0x443dd0
  41e4ec:	mov    QWORD PTR [rip+0x30a05],rax        # 0x44eef8
  41e4f3:	call   0x41c2b0
  41e4f8:	mov    QWORD PTR [rip+0x309c1],rbx        # 0x44eec0
  41e4ff:	add    rsp,0x20
  41e503:	pop    rbx
  41e504:	ret    
  41e505:	nop
  41e506:	nop
  41e507:	nop
  41e508:	nop
  41e509:	nop
  41e50a:	nop
  41e50b:	nop
  41e50c:	nop
  41e50d:	nop
  41e50e:	nop
  41e50f:	nop
  41e510:	push   rbx
  41e511:	sub    rsp,0x20
  41e515:	lea    rax,[rip+0x10164]        # 0x42e680
  41e51c:	lea    rbx,[rip+0x309fd]        # 0x44ef20
  41e523:	mov    DWORD PTR [rip+0x309fb],0x97        # 0x44ef28
  41e52d:	mov    QWORD PTR [rip+0x309ec],rax        # 0x44ef20
  41e534:	lea    rax,[rip+0x10105]        # 0x42e640
  41e53b:	mov    rcx,rbx
  41e53e:	mov    QWORD PTR [rip+0x309eb],rax        # 0x44ef30
  41e545:	lea    rax,[rip+0x25a04]        # 0x443f50
  41e54c:	mov    QWORD PTR [rip+0x309e5],rax        # 0x44ef38
  41e553:	call   0x41c2b0
  41e558:	mov    QWORD PTR [rip+0x309a1],rbx        # 0x44ef00
  41e55f:	add    rsp,0x20
  41e563:	pop    rbx
  41e564:	ret    
  41e565:	nop
  41e566:	nop
  41e567:	nop
  41e568:	nop
  41e569:	nop
  41e56a:	nop
  41e56b:	nop
  41e56c:	nop
  41e56d:	nop
  41e56e:	nop
  41e56f:	nop
  41e570:	mov    QWORD PTR [rcx],0x0
  41e577:	mov    DWORD PTR [rcx+0x28],0x0
  41e57e:	mov    QWORD PTR [rcx+0x8],0x0
  41e586:	mov    DWORD PTR [rcx+0x2c],0x0
  41e58d:	mov    QWORD PTR [rcx+0x10],0x0
  41e595:	mov    DWORD PTR [rcx+0x30],0x0
  41e59c:	mov    QWORD PTR [rcx+0x18],0x0
  41e5a4:	mov    DWORD PTR [rcx+0x34],0x0
  41e5ab:	mov    DWORD PTR [rcx+0x24],0x0
  41e5b2:	mov    DWORD PTR [rcx+0x20],0x0
  41e5b9:	ret    
  41e5ba:	nop
  41e5bb:	nop
  41e5bc:	nop
  41e5bd:	nop
  41e5be:	nop
  41e5bf:	nop
  41e5c0:	push   rdi
  41e5c1:	push   rsi
  41e5c2:	push   rbx
  41e5c3:	mov    rsi,rcx
  41e5c6:	mov    rcx,QWORD PTR [rip+0x28103]        # 0x4466d0
  41e5cd:	cmp    QWORD PTR [rcx+0x8],0x0
  41e5d2:	je     0x41e634
  41e5d4:	cmp    QWORD PTR [rcx],0x0
  41e5d8:	je     0x41e634
  41e5da:	mov    r9d,DWORD PTR [rsi+0x24]
  41e5de:	mov    r10d,0x10
  41e5e4:	xor    eax,eax
  41e5e6:	mov    ebx,0x3
  41e5eb:	lea    ecx,[rax+rax*1]
  41e5ee:	mov    r11d,ebx
  41e5f1:	movsxd rdi,eax
  41e5f4:	shl    r11d,cl
  41e5f7:	test   r11d,r9d
  41e5fa:	je     0x41e602
  41e5fc:	cmp    QWORD PTR [rsi+rax*8],rdx
  41e600:	je     0x41e640
  41e602:	add    rax,0x1
  41e606:	add    r10d,0x4
  41e60a:	cmp    rax,0x4
  41e60e:	jne    0x41e5eb
  41e610:	test   r9b,0x3
  41e614:	je     0x41e660
  41e616:	test   r9b,0xc
  41e61a:	je     0x41e6b1
  41e620:	test   r9b,0x30
  41e624:	je     0x41e6c0
  41e62a:	test   r9b,0xc0
  41e62e:	je     0x41e6cd
  41e634:	mov    eax,0xffffffff
  41e639:	pop    rbx
  41e63a:	pop    rsi
  41e63b:	pop    rdi
  41e63c:	ret    
  41e63d:	nop    DWORD PTR [rax]
  41e640:	mov    ecx,r10d
  41e643:	mov    r11d,r9d
  41e646:	shr    r11d,cl
  41e649:	mov    ecx,r11d
  41e64c:	and    ecx,0xf
  41e64f:	cmp    ecx,r8d
  41e652:	jne    0x41e602
  41e654:	add    DWORD PTR [rsi+rdi*4+0x28],0x1
  41e659:	xor    eax,eax
  41e65b:	jmp    0x41e639
  41e65d:	nop    DWORD PTR [rax]
  41e660:	xor    eax,eax
  41e662:	xor    r11d,r11d
  41e665:	movsxd r10,eax
  41e668:	mov    QWORD PTR [rsi+r10*8],rdx
  41e66c:	lea    edx,[rax*4+0x10]
  41e673:	mov    eax,0x1
  41e678:	mov    DWORD PTR [rsi+r10*4+0x28],0x1
  41e681:	mov    ecx,edx
  41e683:	shl    r8d,cl
  41e686:	mov    ecx,r11d
  41e689:	shl    eax,cl
  41e68b:	mov    ecx,edx
  41e68d:	or     r8d,eax
  41e690:	mov    eax,0xf
  41e695:	shl    eax,cl
  41e697:	not    eax
  41e699:	and    r9d,eax
  41e69c:	mov    eax,r8d
  41e69f:	or     eax,r9d
  41e6a2:	and    ah,0x3
  41e6a5:	or     ah,0x1
  41e6a8:	mov    DWORD PTR [rsi+0x24],eax
  41e6ab:	xor    eax,eax
  41e6ad:	pop    rbx
  41e6ae:	pop    rsi
  41e6af:	pop    rdi
  41e6b0:	ret    
  41e6b1:	mov    eax,0x1
  41e6b6:	mov    r11d,0x2
  41e6bc:	jmp    0x41e665
  41e6be:	xchg   ax,ax
  41e6c0:	mov    eax,0x2
  41e6c5:	mov    r11d,0x4
  41e6cb:	jmp    0x41e665
  41e6cd:	mov    eax,0x3
  41e6d2:	mov    r11d,0x6
  41e6d8:	jmp    0x41e665
  41e6da:	nop    WORD PTR [rax+rax*1+0x0]
  41e6e0:	push   r14
  41e6e2:	push   r12
  41e6e4:	push   rbp
  41e6e5:	push   rdi
  41e6e6:	push   rsi
  41e6e7:	push   rbx
  41e6e8:	sub    rsp,0x38
  41e6ec:	mov    r11d,0x10
  41e6f2:	xor    r9d,r9d
  41e6f5:	mov    ebp,0x1
  41e6fa:	mov    rsi,rcx
  41e6fd:	mov    eax,0xffffffff
  41e702:	mov    edi,0x3
  41e707:	mov    r12d,0xf
  41e70d:	mov    r10d,DWORD PTR [rsi+0x24]
  41e711:	lea    ecx,[r9+r9*1]
  41e715:	mov    ebx,edi
  41e717:	shl    ebx,cl
  41e719:	test   ebx,r10d
  41e71c:	je     0x41e726
  41e71e:	cmp    QWORD PTR [rsi+r9*8],rdx
  41e722:	je     0x41e755
  41e724:	xor    ebp,ebp
  41e726:	add    r9,0x1
  41e72a:	add    r11d,0x4
  41e72e:	cmp    r9,0x4
  41e732:	jne    0x41e70d
  41e734:	test   ebp,ebp
  41e736:	je     0x41e748
  41e738:	and    r10d,0xfffffeff
  41e73f:	test   r10d,r10d
  41e742:	mov    DWORD PTR [rsi+0x24],r10d
  41e746:	jne    0x41e7a4
  41e748:	add    rsp,0x38
  41e74c:	pop    rbx
  41e74d:	pop    rsi
  41e74e:	pop    rdi
  41e74f:	pop    rbp
  41e750:	pop    r12
  41e752:	pop    r14
  41e754:	ret    
  41e755:	mov    ecx,r11d
  41e758:	mov    r14d,r10d
  41e75b:	shr    r14d,cl
  41e75e:	mov    ecx,r14d
  41e761:	and    ecx,0xf
  41e764:	cmp    ecx,r8d
  41e767:	jne    0x41e724
  41e769:	sub    DWORD PTR [rsi+r9*4+0x28],0x1
  41e76f:	jne    0x41e7a0
  41e771:	mov    eax,r12d
  41e774:	mov    ecx,r11d
  41e777:	mov    QWORD PTR [rsi+r9*8],0x0
  41e77f:	shl    eax,cl
  41e781:	not    eax
  41e783:	and    r10d,eax
  41e786:	mov    eax,ebx
  41e788:	not    eax
  41e78a:	and    r10d,eax
  41e78d:	xor    eax,eax
  41e78f:	test   r10d,ebx
  41e792:	mov    DWORD PTR [rsi+0x24],r10d
  41e796:	cmovne ebp,eax
  41e799:	jmp    0x41e726
  41e79b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e7a0:	xor    eax,eax
  41e7a2:	jmp    0x41e724
  41e7a4:	lea    rax,[rip+0x25b43]        # 0x4442ee
  41e7ab:	lea    r9,[rip+0x25e0e]        # 0x4445c0
  41e7b2:	lea    r8,[rip+0x25b07]        # 0x4442c0
  41e7b9:	lea    rcx,[rip+0x25b1b]        # 0x4442db
  41e7c0:	mov    edx,0x175
  41e7c5:	mov    QWORD PTR [rsp+0x20],rax
  41e7ca:	call   0x41d170
  41e7cf:	nop
  41e7d0:	push   r12
  41e7d2:	push   rbp
  41e7d3:	push   rdi
  41e7d4:	push   rsi
  41e7d5:	push   rbx
  41e7d6:	sub    rsp,0x30
  41e7da:	mov    r12,QWORD PTR [rip+0x27eef]        # 0x4466d0
  41e7e1:	mov    r8d,DWORD PTR [rcx+0x24]
  41e7e5:	xor    ebx,ebx
  41e7e7:	mov    rsi,rdx
  41e7ea:	mov    edx,DWORD PTR [rdx+0x24]
  41e7ed:	mov    rdi,rcx
  41e7f0:	mov    ebp,0x3
  41e7f5:	lea    ecx,[rbx+rbx*1]
  41e7f8:	mov    eax,ebp
  41e7fa:	shl    eax,cl
  41e7fc:	test   eax,edx
  41e7fe:	sete   cl
  41e801:	test   eax,r8d
  41e804:	sete   al
  41e807:	cmp    cl,al
  41e809:	je     0x41e880
  41e80b:	mov    rdx,QWORD PTR [rsi+rbx*8]
  41e80f:	mov    ecx,ebx
  41e811:	call   QWORD PTR [r12+0x8]
  41e816:	mov    edx,DWORD PTR [rsi+0x24]
  41e819:	mov    r8d,DWORD PTR [rdi+0x24]
  41e81d:	add    rbx,0x1
  41e821:	cmp    rbx,0x4
  41e825:	jne    0x41e7f5
  41e827:	cmp    r8d,edx
  41e82a:	je     0x41e837
  41e82c:	mov    rax,QWORD PTR [rip+0x27e9d]        # 0x4466d0
  41e833:	mov    ecx,edx
  41e835:	call   QWORD PTR [rax]
  41e837:	mov    rax,QWORD PTR [rsi]
  41e83a:	mov    QWORD PTR [rdi],rax
  41e83d:	mov    rax,QWORD PTR [rsi+0x8]
  41e841:	mov    QWORD PTR [rdi+0x8],rax
  41e845:	mov    rax,QWORD PTR [rsi+0x10]
  41e849:	mov    QWORD PTR [rdi+0x10],rax
  41e84d:	mov    rax,QWORD PTR [rsi+0x18]
  41e851:	mov    QWORD PTR [rdi+0x18],rax
  41e855:	mov    rax,QWORD PTR [rsi+0x20]
  41e859:	mov    QWORD PTR [rdi+0x20],rax
  41e85d:	mov    rax,QWORD PTR [rsi+0x28]
  41e861:	mov    QWORD PTR [rdi+0x28],rax
  41e865:	mov    rax,QWORD PTR [rsi+0x30]
  41e869:	mov    QWORD PTR [rdi+0x30],rax
  41e86d:	add    rsp,0x30
  41e871:	pop    rbx
  41e872:	pop    rsi
  41e873:	pop    rdi
  41e874:	pop    rbp
  41e875:	pop    r12
  41e877:	ret    
  41e878:	nop    DWORD PTR [rax+rax*1+0x0]
  41e880:	mov    rax,QWORD PTR [rdi+rbx*8]
  41e884:	cmp    QWORD PTR [rsi+rbx*8],rax
  41e888:	je     0x41e81d
  41e88a:	lea    rax,[rip+0x25a7f]        # 0x444310
  41e891:	lea    r9,[rip+0x25ca8]        # 0x444540
  41e898:	lea    r8,[rip+0x25a21]        # 0x4442c0
  41e89f:	lea    rcx,[rip+0x25a35]        # 0x4442db
  41e8a6:	mov    edx,0x1cc
  41e8ab:	mov    QWORD PTR [rsp+0x20],rax
  41e8b0:	call   0x41d170
  41e8b5:	nop
  41e8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8c0:	push   r14
  41e8c2:	push   r13
  41e8c4:	push   r12
  41e8c6:	push   rbp
  41e8c7:	push   rdi
  41e8c8:	push   rsi
  41e8c9:	push   rbx
  41e8ca:	sub    rsp,0x40
  41e8ce:	mov    rbx,rcx
  41e8d1:	lea    rcx,[rip+0x25aac]        # 0x444384
  41e8d8:	mov    rsi,r8
  41e8db:	mov    edi,r9d
  41e8de:	call   0x41d1b0
  41e8e3:	test   rsi,rsi
  41e8e6:	jne    0x41e9b0
  41e8ec:	test   edi,edi
  41e8ee:	jne    0x41e9b0
  41e8f4:	lea    rcx,[rip+0x25aa8]        # 0x4443a3
  41e8fb:	lea    rdi,[rbx+0x2c]
  41e8ff:	add    rbx,0x8
  41e903:	call   0x41d1b0
  41e908:	mov    ecx,DWORD PTR [rbx+0x18]
  41e90b:	mov    edx,0x8
  41e910:	call   0x41c5b0
  41e915:	mov    ecx,DWORD PTR [rbx+0x1c]
  41e918:	mov    edx,0x8
  41e91d:	mov    rsi,rax
  41e920:	call   0x41c5b0
  41e925:	lea    rcx,[rip+0x25a7c]        # 0x4443a8
  41e92c:	mov    r8,rsi
  41e92f:	mov    rdx,rax
  41e932:	xor    esi,esi
  41e934:	call   0x41d1b0
  41e939:	mov    rbp,QWORD PTR [rip+0x27d90]        # 0x4466d0
  41e940:	mov    rcx,QWORD PTR [rbx]
  41e943:	mov    edx,DWORD PTR [rbp+0x28]
  41e946:	add    rdi,0x8
  41e94a:	mov    r14d,DWORD PTR [rdi-0x8]
  41e94e:	add    rbx,0x10
  41e952:	call   0x41c5b0
  41e957:	mov    rcx,QWORD PTR [rbx-0x18]
  41e95b:	mov    edx,DWORD PTR [rbp+0x28]
  41e95e:	mov    r13,rax
  41e961:	mov    r12d,DWORD PTR [rdi-0xc]
  41e965:	call   0x41c5b0
  41e96a:	mov    r8,rax
  41e96d:	lea    eax,[rsi+0x1]
  41e970:	lea    rcx,[rip+0x25a61]        # 0x4443d8
  41e977:	mov    edx,esi
  41e979:	mov    DWORD PTR [rsp+0x30],r14d
  41e97e:	mov    QWORD PTR [rsp+0x28],r13
  41e983:	mov    DWORD PTR [rsp+0x20],eax
  41e987:	mov    r9d,r12d
  41e98a:	add    esi,0x2
  41e98d:	call   0x41d1b0
  41e992:	cmp    esi,0x4
  41e995:	jne    0x41e940
  41e997:	add    rsp,0x40
  41e99b:	pop    rbx
  41e99c:	pop    rsi
  41e99d:	pop    rdi
  41e99e:	pop    rbp
  41e99f:	pop    r12
  41e9a1:	pop    r13
  41e9a3:	pop    r14
  41e9a5:	ret    
  41e9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9b0:	mov    eax,DWORD PTR [rsp+0xa0]
  41e9b7:	lea    rbp,[rip+0x2598b]        # 0x444349
  41e9be:	test   eax,eax
  41e9c0:	je     0x41e9fe
  41e9c2:	cmp    DWORD PTR [rsp+0xa0],0x1
  41e9ca:	lea    rbp,[rip+0x2596e]        # 0x44433f
  41e9d1:	je     0x41e9fe
  41e9d3:	cmp    DWORD PTR [rsp+0xa0],0x2
  41e9db:	lea    rbp,[rip+0x25972]        # 0x444354
  41e9e2:	je     0x41e9fe
  41e9e4:	cmp    DWORD PTR [rsp+0xa0],0x3
  41e9ec:	lea    rbp,[rip+0x25971]        # 0x444364
  41e9f3:	lea    rax,[rip+0x25976]        # 0x444370
  41e9fa:	cmove  rbp,rax
  41e9fe:	mov    rcx,rsi
  41ea01:	mov    edx,0x8
  41ea06:	call   0x41c5b0
  41ea0b:	lea    rcx,[rip+0x25975]        # 0x444387
  41ea12:	mov    r9,rbp
  41ea15:	mov    r8d,edi
  41ea18:	mov    rdx,rax
  41ea1b:	call   0x41d1b0
  41ea20:	jmp    0x41e8f4
  41ea25:	nop
  41ea26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea30:	sub    rsp,0x28
  41ea34:	cmp    edx,0x1
  41ea37:	je     0x41eab4
  41ea39:	jle    0x41ea90
  41ea3b:	cmp    edx,0x2
  41ea3e:	je     0x41ea75
  41ea40:	xor    eax,eax
  41ea42:	cmp    edx,0x3
  41ea45:	jne    0x41ea99
  41ea47:	cmp    ecx,0x2
  41ea4a:	je     0x41ea7f
  41ea4c:	jle    0x41eae0
  41ea52:	cmp    ecx,0x4
  41ea55:	je     0x41ead0
  41ea57:	cmp    ecx,0x8
  41ea5a:	jne    0x41eae5
  41ea60:	mov    rdx,QWORD PTR [rip+0x27c69]        # 0x4466d0
  41ea67:	cmp    DWORD PTR [rdx+0x28],0x8
  41ea6b:	jne    0x41eae5
  41ea6d:	or     eax,0x8
  41ea70:	add    rsp,0x28
  41ea74:	ret    
  41ea75:	cmp    ecx,0x2
  41ea78:	mov    eax,0x3
  41ea7d:	jne    0x41ea4c
  41ea7f:	or     eax,0x4
  41ea82:	add    rsp,0x28
  41ea86:	ret    
  41ea87:	nop    WORD PTR [rax+rax*1+0x0]
  41ea90:	test   edx,edx
  41ea92:	mov    eax,0x1
  41ea97:	je     0x41ea47
  41ea99:	lea    r8,[rip+0x259b0]        # 0x444450
  41eaa0:	lea    rcx,[rip+0x25834]        # 0x4442db
  41eaa7:	mov    r9d,edx
  41eaaa:	mov    edx,0xf4
  41eaaf:	call   0x41d170
  41eab4:	lea    r8,[rip+0x2595d]        # 0x444418
  41eabb:	lea    rcx,[rip+0x25819]        # 0x4442db
  41eac2:	mov    edx,0xe7
  41eac7:	call   0x41d170
  41eacc:	nop    DWORD PTR [rax+0x0]
  41ead0:	or     eax,0xc
  41ead3:	add    rsp,0x28
  41ead7:	ret    
  41ead8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eae0:	cmp    ecx,0x1
  41eae3:	je     0x41ea70
  41eae5:	mov    r9d,ecx
  41eae8:	lea    r8,[rip+0x259a1]        # 0x444490
  41eaef:	lea    rcx,[rip+0x257e5]        # 0x4442db
  41eaf6:	mov    edx,0x106
  41eafb:	call   0x41d170
  41eb00:	nop
  41eb01:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb10:	push   r15
  41eb12:	push   r14
  41eb14:	push   r13
  41eb16:	push   r12
  41eb18:	push   rbp
  41eb19:	push   rdi
  41eb1a:	push   rsi
  41eb1b:	push   rbx
  41eb1c:	sub    rsp,0x98
  41eb23:	mov    rax,QWORD PTR [rcx]
  41eb26:	cmp    edx,0x1
  41eb29:	mov    QWORD PTR [rsp+0x50],rax
  41eb2e:	mov    rax,QWORD PTR [rcx+0x8]
  41eb32:	mov    QWORD PTR [rsp+0x58],rax
  41eb37:	mov    rax,QWORD PTR [rcx+0x10]
  41eb3b:	mov    QWORD PTR [rsp+0x60],rax
  41eb40:	mov    rax,QWORD PTR [rcx+0x18]
  41eb44:	mov    QWORD PTR [rsp+0x68],rax
  41eb49:	mov    rax,QWORD PTR [rcx+0x20]
  41eb4d:	mov    QWORD PTR [rsp+0x70],rax
  41eb52:	mov    rax,QWORD PTR [rcx+0x28]
  41eb56:	mov    QWORD PTR [rsp+0x78],rax
  41eb5b:	mov    rax,QWORD PTR [rcx+0x30]
  41eb5f:	mov    QWORD PTR [rsp+0x80],rax
  41eb67:	je     0x41ecf0
  41eb6d:	mov    eax,r9d
  41eb70:	mov    DWORD PTR [rsp+0x3c],r9d
  41eb75:	mov    QWORD PTR [rsp+0x40],r8
  41eb7a:	sub    eax,0x1
  41eb7d:	mov    edi,edx
  41eb7f:	mov    QWORD PTR [rsp+0x48],rcx
  41eb84:	cmp    eax,0x1
  41eb87:	jbe    0x41eba4
  41eb89:	cmp    r9d,0x4
  41eb8d:	je     0x41eba4
  41eb8f:	mov    rax,QWORD PTR [rip+0x27b3a]        # 0x4466d0
  41eb96:	cmp    r9d,0x8
  41eb9a:	mov    eax,DWORD PTR [rax+0x28]
  41eb9d:	jne    0x41ebc6
  41eb9f:	cmp    eax,0x8
  41eba2:	jne    0x41ebc6
  41eba4:	movsxd rcx,DWORD PTR [rsp+0x3c]
  41eba9:	mov    rax,QWORD PTR [rsp+0x40]
  41ebae:	xor    edx,edx
  41ebb0:	div    rcx
  41ebb3:	test   rdx,rdx
  41ebb6:	je     0x41ec80
  41ebbc:	mov    rax,QWORD PTR [rip+0x27b0d]        # 0x4466d0
  41ebc3:	mov    eax,DWORD PTR [rax+0x28]
  41ebc6:	mov    ecx,DWORD PTR [rsp+0x3c]
  41ebca:	xor    ebp,ebp
  41ebcc:	cmp    eax,0x8
  41ebcf:	sete   bpl
  41ebd3:	lea    r12,[rsp+0x50]
  41ebd8:	lea    ebp,[rbp*4+0x4]
  41ebdf:	test   ecx,ecx
  41ebe1:	jle    0x41eca4
  41ebe7:	movsxd rax,ebp
  41ebea:	mov    r15d,DWORD PTR [rsp+0x3c]
  41ebef:	mov    rbx,QWORD PTR [rsp+0x40]
  41ebf4:	mov    QWORD PTR [rsp+0x30],rax
  41ebf9:	lea    r14,[rip+0x25a40]        # 0x444640
  41ec00:	lea    r12,[rsp+0x50]
  41ec05:	lea    r13d,[rbp-0x1]
  41ec09:	jmp    0x41ec22
  41ec0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec10:	movsxd rax,esi
  41ec13:	sub    r15d,esi
  41ec16:	add    rbx,rax
  41ec19:	test   r15d,r15d
  41ec1c:	jle    0x41eca4
  41ec22:	xor    edx,edx
  41ec24:	mov    rax,rbx
  41ec27:	div    QWORD PTR [rsp+0x30]
  41ec2c:	lea    eax,[r15-0x1]
  41ec30:	cmp    ebp,r15d
  41ec33:	cmovl  eax,r13d
  41ec37:	cdqe   
  41ec39:	lea    rax,[rdx+rax*8]
  41ec3d:	mov    edx,edi
  41ec3f:	mov    esi,DWORD PTR [r14+rax*4]
  41ec43:	mov    ecx,esi
  41ec45:	call   0x41ea30
  41ec4a:	mov    rdx,rbx
  41ec4d:	mov    r8d,eax
  41ec50:	mov    rcx,r12
  41ec53:	call   0x41e5c0
  41ec58:	test   eax,eax
  41ec5a:	je     0x41ec10
  41ec5c:	mov    rdx,QWORD PTR [rip+0x279bd]        # 0x446620
  41ec63:	mov    edx,DWORD PTR [rdx]
  41ec65:	test   edx,edx
  41ec67:	jne    0x41ecc0
  41ec69:	add    rsp,0x98
  41ec70:	pop    rbx
  41ec71:	pop    rsi
  41ec72:	pop    rdi
  41ec73:	pop    rbp
  41ec74:	pop    r12
  41ec76:	pop    r13
  41ec78:	pop    r14
  41ec7a:	pop    r15
  41ec7c:	ret    
  41ec7d:	nop    DWORD PTR [rax]
  41ec80:	mov    ecx,DWORD PTR [rsp+0x3c]
  41ec84:	mov    edx,edi
  41ec86:	lea    r12,[rsp+0x50]
  41ec8b:	call   0x41ea30
  41ec90:	mov    rdx,QWORD PTR [rsp+0x40]
  41ec95:	mov    r8d,eax
  41ec98:	mov    rcx,r12
  41ec9b:	call   0x41e5c0
  41eca0:	test   eax,eax
  41eca2:	jne    0x41ec5c
  41eca4:	mov    rcx,QWORD PTR [rsp+0x48]
  41eca9:	mov    rdx,r12
  41ecac:	call   0x41e7d0
  41ecb1:	mov    rdx,QWORD PTR [rip+0x27968]        # 0x446620
  41ecb8:	xor    eax,eax
  41ecba:	mov    edx,DWORD PTR [rdx]
  41ecbc:	test   edx,edx
  41ecbe:	je     0x41ec69
  41ecc0:	mov    r9d,DWORD PTR [rsp+0x3c]
  41ecc5:	mov    r8,QWORD PTR [rsp+0x40]
  41ecca:	lea    rdx,[rip+0x25801]        # 0x4444d2
  41ecd1:	mov    rcx,QWORD PTR [rsp+0x48]
  41ecd6:	mov    DWORD PTR [rsp+0x20],edi
  41ecda:	mov    DWORD PTR [rsp+0x30],eax
  41ecde:	call   0x41e8c0
  41ece3:	mov    eax,DWORD PTR [rsp+0x30]
  41ece7:	jmp    0x41ec69
  41ecec:	nop    DWORD PTR [rax+0x0]
  41ecf0:	mov    eax,0x1
  41ecf5:	jmp    0x41ec69
  41ecfa:	nop    WORD PTR [rax+rax*1+0x0]
  41ed00:	push   r15
  41ed02:	push   r14
  41ed04:	push   r13
  41ed06:	push   r12
  41ed08:	push   rbp
  41ed09:	push   rdi
  41ed0a:	push   rsi
  41ed0b:	push   rbx
  41ed0c:	sub    rsp,0x88
  41ed13:	mov    rax,QWORD PTR [rcx]
  41ed16:	mov    r15,rcx
  41ed19:	mov    ebp,edx
  41ed1b:	mov    QWORD PTR [rsp+0xe0],r8
  41ed23:	mov    DWORD PTR [rsp+0xe8],r9d
  41ed2b:	mov    QWORD PTR [rsp+0x40],rax
  41ed30:	mov    rax,QWORD PTR [rcx+0x8]
  41ed34:	mov    QWORD PTR [rsp+0x48],rax
  41ed39:	mov    rax,QWORD PTR [rcx+0x10]
  41ed3d:	mov    QWORD PTR [rsp+0x50],rax
  41ed42:	mov    rax,QWORD PTR [rcx+0x18]
  41ed46:	mov    QWORD PTR [rsp+0x58],rax
  41ed4b:	mov    rax,QWORD PTR [rcx+0x20]
  41ed4f:	mov    QWORD PTR [rsp+0x60],rax
  41ed54:	mov    rax,QWORD PTR [rcx+0x28]
  41ed58:	mov    QWORD PTR [rsp+0x68],rax
  41ed5d:	mov    rax,QWORD PTR [rcx+0x30]
  41ed61:	mov    QWORD PTR [rsp+0x70],rax
  41ed66:	mov    eax,r9d
  41ed69:	sub    eax,0x1
  41ed6c:	cmp    eax,0x1
  41ed6f:	jbe    0x41ee90
  41ed75:	cmp    r9d,0x4
  41ed79:	je     0x41ee90
  41ed7f:	mov    rax,QWORD PTR [rip+0x2794a]        # 0x4466d0
  41ed86:	cmp    r9d,0x8
  41ed8a:	mov    eax,DWORD PTR [rax+0x28]
  41ed8d:	jne    0x41ed98
  41ed8f:	cmp    eax,0x8
  41ed92:	je     0x41ee90
  41ed98:	mov    ecx,DWORD PTR [rsp+0xe8]
  41ed9f:	xor    edi,edi
  41eda1:	cmp    eax,0x8
  41eda4:	sete   dil
  41eda8:	lea    r12,[rsp+0x40]
  41edad:	lea    edi,[rdi*4+0x4]
  41edb4:	test   ecx,ecx
  41edb6:	jle    0x41eef0
  41edbc:	movsxd rax,edi
  41edbf:	mov    esi,DWORD PTR [rsp+0xe8]
  41edc6:	mov    rbx,QWORD PTR [rsp+0xe0]
  41edce:	mov    QWORD PTR [rsp+0x30],rax
  41edd3:	lea    eax,[rdi-0x1]
  41edd6:	lea    r14,[rip+0x25863]        # 0x444640
  41eddd:	lea    r12,[rsp+0x40]
  41ede2:	mov    DWORD PTR [rsp+0x3c],eax
  41ede6:	jmp    0x41ee01
  41ede8:	nop    DWORD PTR [rax+rax*1+0x0]
  41edf0:	movsxd rax,r13d
  41edf3:	sub    esi,r13d
  41edf6:	add    rbx,rax
  41edf9:	test   esi,esi
  41edfb:	jle    0x41eef0
  41ee01:	xor    edx,edx
  41ee03:	mov    rax,rbx
  41ee06:	div    QWORD PTR [rsp+0x30]
  41ee0b:	cmp    edi,esi
  41ee0d:	lea    eax,[rsi-0x1]
  41ee10:	cmovl  eax,DWORD PTR [rsp+0x3c]
  41ee15:	cdqe   
  41ee17:	lea    rax,[rdx+rax*8]
  41ee1b:	mov    edx,ebp
  41ee1d:	mov    r13d,DWORD PTR [r14+rax*4]
  41ee21:	mov    ecx,r13d
  41ee24:	call   0x41ea30
  41ee29:	mov    rdx,rbx
  41ee2c:	mov    r8d,eax
  41ee2f:	mov    rcx,r12
  41ee32:	call   0x41e6e0
  41ee37:	test   eax,eax
  41ee39:	je     0x41edf0
  41ee3b:	mov    rdx,QWORD PTR [rip+0x277de]        # 0x446620
  41ee42:	mov    edx,DWORD PTR [rdx]
  41ee44:	test   edx,edx
  41ee46:	je     0x41ee73
  41ee48:	mov    r9d,DWORD PTR [rsp+0xe8]
  41ee50:	mov    r8,QWORD PTR [rsp+0xe0]
  41ee58:	lea    rdx,[rip+0x25685]        # 0x4444e4
  41ee5f:	mov    DWORD PTR [rsp+0x20],ebp
  41ee63:	mov    rcx,r15
  41ee66:	mov    DWORD PTR [rsp+0x30],eax
  41ee6a:	call   0x41e8c0
  41ee6f:	mov    eax,DWORD PTR [rsp+0x30]
  41ee73:	add    rsp,0x88
  41ee7a:	pop    rbx
  41ee7b:	pop    rsi
  41ee7c:	pop    rdi
  41ee7d:	pop    rbp
  41ee7e:	pop    r12
  41ee80:	pop    r13
  41ee82:	pop    r14
  41ee84:	pop    r15
  41ee86:	ret    
  41ee87:	nop    WORD PTR [rax+rax*1+0x0]
  41ee90:	movsxd rcx,DWORD PTR [rsp+0xe8]
  41ee98:	mov    rax,QWORD PTR [rsp+0xe0]
  41eea0:	xor    edx,edx
  41eea2:	div    rcx
  41eea5:	test   rdx,rdx
  41eea8:	je     0x41eec0
  41eeaa:	mov    rax,QWORD PTR [rip+0x2781f]        # 0x4466d0
  41eeb1:	mov    eax,DWORD PTR [rax+0x28]
  41eeb4:	jmp    0x41ed98
  41eeb9:	nop    DWORD PTR [rax+0x0]
  41eec0:	mov    ecx,DWORD PTR [rsp+0xe8]
  41eec7:	mov    edx,ebp
  41eec9:	lea    r12,[rsp+0x40]
  41eece:	call   0x41ea30
  41eed3:	mov    rdx,QWORD PTR [rsp+0xe0]
  41eedb:	mov    r8d,eax
  41eede:	mov    rcx,r12
  41eee1:	call   0x41e6e0
  41eee6:	test   eax,eax
  41eee8:	jne    0x41ee3b
  41eeee:	xchg   ax,ax
  41eef0:	mov    rdx,r12
  41eef3:	mov    rcx,r15
  41eef6:	call   0x41e7d0
  41eefb:	xor    eax,eax
  41eefd:	jmp    0x41ee3b
  41ef02:	nop    DWORD PTR [rax+0x0]
  41ef06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef10:	push   rdi
  41ef11:	push   rsi
  41ef12:	push   rbx
  41ef13:	mov    rax,QWORD PTR [rip+0x277b6]        # 0x4466d0
  41ef1a:	xor    ebx,ebx
  41ef1c:	mov    r9,rdx
  41ef1f:	cmp    DWORD PTR [rax+0x28],0x8
  41ef23:	sete   bl
  41ef26:	test   r8d,r8d
  41ef29:	lea    ebx,[rbx*4+0x4]
  41ef30:	jle    0x41ef7b
  41ef32:	lea    rdi,[rip+0x25707]        # 0x444640
  41ef39:	lea    esi,[rbx-0x1]
  41ef3c:	movsxd r11,ebx
  41ef3f:	xor    r10d,r10d
  41ef42:	mov    rax,r9
  41ef45:	xor    edx,edx
  41ef47:	lea    ecx,[r8-0x1]
  41ef4b:	div    r11
  41ef4e:	cmp    ebx,r8d
  41ef51:	cmovl  ecx,esi
  41ef54:	add    r10d,0x1
  41ef58:	movsxd rcx,ecx
  41ef5b:	lea    rax,[rdx+rcx*8]
  41ef5f:	movsxd rdx,DWORD PTR [rdi+rax*4]
  41ef63:	sub    r8d,edx
  41ef66:	add    r9,rdx
  41ef69:	test   r8d,r8d
  41ef6c:	jg     0x41ef42
  41ef6e:	xor    eax,eax
  41ef70:	cmp    r10d,0x4
  41ef74:	setle  al
  41ef77:	pop    rbx
  41ef78:	pop    rsi
  41ef79:	pop    rdi
  41ef7a:	ret    
  41ef7b:	mov    eax,0x1
  41ef80:	jmp    0x41ef77
  41ef82:	nop    DWORD PTR [rax+0x0]
  41ef86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef90:	push   r15
  41ef92:	push   r14
  41ef94:	push   r13
  41ef96:	push   r12
  41ef98:	push   rbp
  41ef99:	push   rdi
  41ef9a:	push   rsi
  41ef9b:	push   rbx
  41ef9c:	sub    rsp,0x48
  41efa0:	mov    rax,QWORD PTR [rip+0x27729]        # 0x4466d0
  41efa7:	xor    r15d,r15d
  41efaa:	xor    ebp,ebp
  41efac:	mov    r13,rdx
  41efaf:	mov    r14,rcx
  41efb2:	xor    ebx,ebx
  41efb4:	xor    r12d,r12d
  41efb7:	mov    esi,0x1
  41efbc:	call   QWORD PTR [rax+0x18]
  41efbf:	xor    edx,edx
  41efc1:	mov    edi,eax
  41efc3:	mov    r9d,esi
  41efc6:	mov    ecx,ebx
  41efc8:	shl    r9d,cl
  41efcb:	test   r9d,edi
  41efce:	je     0x41efed
  41efd0:	test   edx,edx
  41efd2:	je     0x41f072
  41efd8:	lea    ecx,[rbx*4+0x10]
  41efdf:	mov    eax,r15d
  41efe2:	mov    edx,0x1
  41efe7:	shr    eax,cl
  41efe9:	test   al,0xf
  41efeb:	jne    0x41f022
  41efed:	add    ebx,0x1
  41eff0:	cmp    ebx,0x4
  41eff3:	jne    0x41efc3
  41eff5:	test   r12,r12
  41eff8:	jne    0x41f007
  41effa:	mov    rax,QWORD PTR [rip+0x2761f]        # 0x446620
  41f001:	mov    eax,DWORD PTR [rax]
  41f003:	test   eax,eax
  41f005:	jne    0x41f084
  41f007:	test   ebp,ebp
  41f009:	je     0x41f00f
  41f00b:	mov    QWORD PTR [r13+0x0],r12
  41f00f:	mov    eax,ebp
  41f011:	add    rsp,0x48
  41f015:	pop    rbx
  41f016:	pop    rsi
  41f017:	pop    rdi
  41f018:	pop    rbp
  41f019:	pop    r12
  41f01b:	pop    r13
  41f01d:	pop    r14
  41f01f:	pop    r15
  41f021:	ret    
  41f022:	mov    rax,QWORD PTR [rip+0x276a7]        # 0x4466d0
  41f029:	mov    DWORD PTR [rsp+0x3c],edx
  41f02d:	mov    ecx,ebx
  41f02f:	mov    ebp,0x1
  41f034:	call   QWORD PTR [rax+0x10]
  41f037:	mov    r12,rax
  41f03a:	mov    rax,QWORD PTR [rip+0x275df]        # 0x446620
  41f041:	mov    edx,DWORD PTR [rax]
  41f043:	test   edx,edx
  41f045:	mov    edx,DWORD PTR [rsp+0x3c]
  41f049:	je     0x41efed
  41f04b:	lea    rdx,[rip+0x254a4]        # 0x4444f6
  41f052:	mov    DWORD PTR [rsp+0x20],0x0
  41f05a:	mov    r9d,0xffffffff
  41f060:	mov    r8,r12
  41f063:	mov    rcx,r14
  41f066:	call   0x41e8c0
  41f06b:	mov    edx,ebp
  41f06d:	jmp    0x41efed
  41f072:	mov    rax,QWORD PTR [rip+0x27657]        # 0x4466d0
  41f079:	call   QWORD PTR [rax+0x20]
  41f07c:	mov    r15d,eax
  41f07f:	jmp    0x41efd8
  41f084:	lea    rdx,[rip+0x2547a]        # 0x444505
  41f08b:	mov    DWORD PTR [rsp+0x20],0x0
  41f093:	xor    r9d,r9d
  41f096:	xor    r8d,r8d
  41f099:	mov    rcx,r14
  41f09c:	call   0x41e8c0
  41f0a1:	jmp    0x41f007
  41f0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0b0:	sub    rsp,0x38
  41f0b4:	lea    rdx,[rsp+0x28]
  41f0b9:	mov    QWORD PTR [rsp+0x28],0x0
  41f0c2:	call   0x41ef90
  41f0c7:	add    rsp,0x38
  41f0cb:	ret    
  41f0cc:	nop
  41f0cd:	nop
  41f0ce:	nop
  41f0cf:	nop
  41f0d0:	push   rdi
  41f0d1:	push   rsi
  41f0d2:	push   rbx
  41f0d3:	shl    edx,0x4
  41f0d6:	movsxd rdx,edx
  41f0d9:	lea    rax,[rcx+rdx*1+0x20]
  41f0de:	movzx  r8d,BYTE PTR [rax+0x9]
  41f0e3:	movzx  r9d,BYTE PTR [rax+0x8]
  41f0e8:	movzx  r10d,BYTE PTR [rax+0x7]
  41f0ed:	movzx  esi,BYTE PTR [rax+0x3]
  41f0f1:	movzx  edi,BYTE PTR [rax+0x2]
  41f0f5:	movzx  r11d,BYTE PTR [rax+0x1]
  41f0fa:	movzx  ebx,BYTE PTR [rax+0x4]
  41f0fe:	and    r8d,0x7f
  41f102:	shl    r8d,0x8
  41f106:	or     r8d,r9d
  41f109:	movzx  r9d,BYTE PTR [rcx+rdx*1+0x20]
  41f10f:	movzx  ecx,BYTE PTR [rax+0x6]
  41f113:	cmp    r8d,0x7fff
  41f11a:	movzx  edx,BYTE PTR [rax+0x5]
  41f11e:	mov    eax,0x2
  41f123:	je     0x41f170
  41f125:	mov    eax,r10d
  41f128:	and    eax,0xffffff80
  41f12b:	test   r8d,r8d
  41f12e:	jne    0x41f174
  41f130:	shl    edi,0x10
  41f133:	shl    esi,0x18
  41f136:	movzx  r8d,bl
  41f13a:	or     esi,edi
  41f13c:	shl    r11d,0x8
  41f140:	shl    ecx,0x10
  41f143:	mov    ebx,esi
  41f145:	shl    edx,0x8
  41f148:	and    r10d,0x7f
  41f14c:	or     ebx,r8d
  41f14f:	shl    r10d,0x18
  41f153:	or     r11d,ebx
  41f156:	or     ecx,r11d
  41f159:	or     edx,ecx
  41f15b:	or     r10d,edx
  41f15e:	or     r10d,r9d
  41f161:	jne    0x41f167
  41f163:	test   al,al
  41f165:	je     0x41f180
  41f167:	mov    eax,0x2
  41f16c:	nop    DWORD PTR [rax+0x0]
  41f170:	pop    rbx
  41f171:	pop    rsi
  41f172:	pop    rdi
  41f173:	ret    
  41f174:	cmp    al,0x1
  41f176:	sbb    eax,eax
  41f178:	and    eax,0x2
  41f17b:	pop    rbx
  41f17c:	pop    rsi
  41f17d:	pop    rdi
  41f17e:	ret    
  41f17f:	nop
  41f180:	mov    eax,0x1
  41f185:	jmp    0x41f170
  41f187:	nop    WORD PTR [rax+rax*1+0x0]
  41f190:	push   r12
  41f192:	push   rbp
  41f193:	push   rdi
  41f194:	push   rsi
  41f195:	push   rbx
  41f196:	sub    rsp,0x30
  41f19a:	mov    rdi,rcx
  41f19d:	mov    rcx,QWORD PTR [rcx]
  41f1a0:	mov    rbp,rdx
  41f1a3:	lea    rdx,[rip+0x25596]        # 0x444740
  41f1aa:	lea    rbx,[rbp+0x1c]
  41f1ae:	lea    r12,[rbp+0x6c]
  41f1b2:	call   0x404660
  41f1b7:	mov    esi,eax
  41f1b9:	nop    DWORD PTR [rax+0x0]
  41f1c0:	mov    r8,rbx
  41f1c3:	mov    edx,esi
  41f1c5:	mov    rcx,rdi
  41f1c8:	add    rbx,0xa
  41f1cc:	add    esi,0x1
  41f1cf:	call   0x404930
  41f1d4:	cmp    rbx,r12
  41f1d7:	jne    0x41f1c0
  41f1d9:	lea    r8,[rbp+0xc]
  41f1dd:	lea    rdx,[rip+0x25560]        # 0x444744
  41f1e4:	mov    rcx,rdi
  41f1e7:	lea    rbx,[rsp+0x28]
  41f1ec:	call   0x404a80
  41f1f1:	lea    r8,[rbp+0x14]
  41f1f5:	lea    rdx,[rip+0x2554e]        # 0x44474a
  41f1fc:	mov    rcx,rdi
  41f1ff:	call   0x404a80
  41f204:	lea    r8,[rsp+0x2c]
  41f209:	lea    rdx,[rip+0x25540]        # 0x444750
  41f210:	mov    rcx,rdi
  41f213:	call   0x404a80
  41f218:	movzx  eax,WORD PTR [rbp+0x12]
  41f21c:	movzx  edx,WORD PTR [rsp+0x2c]
  41f221:	mov    r8,rbx
  41f224:	mov    rcx,rdi
  41f227:	and    dx,0x7ff
  41f22c:	and    ax,0xf800
  41f230:	or     eax,edx
  41f232:	lea    rdx,[rip+0x2551b]        # 0x444754
  41f239:	mov    WORD PTR [rbp+0x12],ax
  41f23d:	call   0x404a80
  41f242:	mov    eax,DWORD PTR [rsp+0x28]
  41f246:	lea    rdx,[rip+0x2550d]        # 0x44475a
  41f24d:	mov    r8,rbx
  41f250:	mov    rcx,rdi
  41f253:	mov    WORD PTR [rbp+0x0],ax
  41f257:	call   0x404a80
  41f25c:	movzx  eax,WORD PTR [rsp+0x28]
  41f261:	lea    rdx,[rip+0x254f8]        # 0x444760
  41f268:	mov    r8,rbx
  41f26b:	mov    rcx,rdi
  41f26e:	mov    WORD PTR [rbp+0x4],ax
  41f272:	mov    DWORD PTR [rsp+0x28],eax
  41f276:	call   0x404a80
  41f27b:	movzx  eax,WORD PTR [rsp+0x28]
  41f280:	lea    rdx,[rip+0x254de]        # 0x444765
  41f287:	mov    r8,rbx
  41f28a:	mov    rcx,rdi
  41f28d:	mov    WORD PTR [rbp+0x8],ax
  41f291:	mov    DWORD PTR [rsp+0x28],eax
  41f295:	call   0x404a80
  41f29a:	movzx  eax,WORD PTR [rsp+0x28]
  41f29f:	lea    rdx,[rip+0x254c5]        # 0x44476b
  41f2a6:	mov    r8,rbx
  41f2a9:	mov    rcx,rdi
  41f2ac:	mov    WORD PTR [rbp+0x10],ax
  41f2b0:	mov    DWORD PTR [rsp+0x28],eax
  41f2b4:	call   0x404a80
  41f2b9:	mov    eax,DWORD PTR [rsp+0x28]
  41f2bd:	mov    WORD PTR [rbp+0x18],ax
  41f2c1:	add    rsp,0x30
  41f2c5:	pop    rbx
  41f2c6:	pop    rsi
  41f2c7:	pop    rdi
  41f2c8:	pop    rbp
  41f2c9:	pop    r12
  41f2cb:	ret    
  41f2cc:	nop    DWORD PTR [rax+0x0]
  41f2d0:	push   r12
  41f2d2:	push   rbp
  41f2d3:	push   rdi
  41f2d4:	push   rsi
  41f2d5:	push   rbx
  41f2d6:	sub    rsp,0x30
  41f2da:	mov    rdi,rcx
  41f2dd:	mov    rcx,QWORD PTR [rcx]
  41f2e0:	mov    rbp,rdx
  41f2e3:	lea    rdx,[rip+0x25456]        # 0x444740
  41f2ea:	lea    rbx,[rbp+0x1c]
  41f2ee:	lea    r12,[rbp+0x6c]
  41f2f2:	call   0x404660
  41f2f7:	mov    esi,eax
  41f2f9:	nop    DWORD PTR [rax+0x0]
  41f300:	mov    r8,rbx
  41f303:	mov    edx,esi
  41f305:	mov    rcx,rdi
  41f308:	add    rbx,0xa
  41f30c:	add    esi,0x1
  41f30f:	call   0x404750
  41f314:	cmp    rbx,r12
  41f317:	jne    0x41f300
  41f319:	lea    r8,[rbp+0xc]
  41f31d:	lea    rdx,[rip+0x25420]        # 0x444744
  41f324:	mov    rcx,rdi
  41f327:	lea    rbx,[rsp+0x2c]
  41f32c:	call   0x404900
  41f331:	lea    r8,[rbp+0x14]
  41f335:	lea    rdx,[rip+0x2540e]        # 0x44474a
  41f33c:	mov    rcx,rdi
  41f33f:	call   0x404900
  41f344:	movzx  eax,WORD PTR [rbp+0x0]
  41f348:	lea    rdx,[rip+0x25405]        # 0x444754
  41f34f:	mov    r8,rbx
  41f352:	mov    rcx,rdi
  41f355:	mov    DWORD PTR [rsp+0x2c],eax
  41f359:	call   0x404900
  41f35e:	movzx  eax,WORD PTR [rbp+0x4]
  41f362:	lea    rdx,[rip+0x253f1]        # 0x44475a
  41f369:	mov    r8,rbx
  41f36c:	mov    rcx,rdi
  41f36f:	mov    DWORD PTR [rsp+0x2c],eax
  41f373:	call   0x404900
  41f378:	movzx  eax,WORD PTR [rbp+0x8]
  41f37c:	lea    rdx,[rip+0x253dd]        # 0x444760
  41f383:	mov    r8,rbx
  41f386:	mov    rcx,rdi
  41f389:	mov    DWORD PTR [rsp+0x2c],eax
  41f38d:	call   0x404900
  41f392:	movzx  eax,WORD PTR [rbp+0x10]
  41f396:	lea    rdx,[rip+0x253c8]        # 0x444765
  41f39d:	mov    r8,rbx
  41f3a0:	mov    rcx,rdi
  41f3a3:	mov    DWORD PTR [rsp+0x2c],eax
  41f3a7:	call   0x404900
  41f3ac:	movzx  eax,WORD PTR [rbp+0x18]
  41f3b0:	lea    rdx,[rip+0x253b4]        # 0x44476b
  41f3b7:	mov    r8,rbx
  41f3ba:	mov    rcx,rdi
  41f3bd:	mov    DWORD PTR [rsp+0x2c],eax
  41f3c1:	call   0x404900
  41f3c6:	movzx  eax,WORD PTR [rbp+0x12]
  41f3ca:	lea    rdx,[rip+0x2537f]        # 0x444750
  41f3d1:	mov    r8,rbx
  41f3d4:	mov    rcx,rdi
  41f3d7:	and    eax,0x7ff
  41f3dc:	mov    DWORD PTR [rsp+0x2c],eax
  41f3e0:	call   0x404900
  41f3e5:	nop
  41f3e6:	add    rsp,0x30
  41f3ea:	pop    rbx
  41f3eb:	pop    rsi
  41f3ec:	pop    rdi
  41f3ed:	pop    rbp
  41f3ee:	pop    r12
  41f3f0:	ret    
  41f3f1:	nop    DWORD PTR [rax+rax*1+0x0]
  41f3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f400:	push   r14
  41f402:	push   r13
  41f404:	push   r12
  41f406:	push   rbp
  41f407:	push   rdi
  41f408:	push   rsi
  41f409:	push   rbx
  41f40a:	sub    rsp,0x30
  41f40e:	xor    r14d,r14d
  41f411:	mov    rbp,rcx
  41f414:	mov    rcx,QWORD PTR [rcx]
  41f417:	mov    r12,rdx
  41f41a:	lea    rdx,[rip+0x2531f]        # 0x444740
  41f421:	lea    rdi,[r12+0x20]
  41f426:	lea    rsi,[r12+0xa0]
  41f42e:	call   0x404660
  41f433:	mov    rcx,QWORD PTR [rbp+0x0]
  41f437:	lea    rdx,[rip+0x25333]        # 0x444771
  41f43e:	mov    r13d,eax
  41f441:	call   0x404660
  41f446:	mov    rcx,QWORD PTR [rbp+0x0]
  41f44a:	xor    edx,edx
  41f44c:	mov    ebx,eax
  41f44e:	call   0x404710
  41f453:	cmp    eax,0x8
  41f456:	sete   r14b
  41f45a:	lea    r14d,[r14*8+0x8]
  41f462:	mov    r8,rdi
  41f465:	mov    edx,r13d
  41f468:	mov    rcx,rbp
  41f46b:	add    rdi,0x10
  41f46f:	add    r13d,0x1
  41f473:	call   0x404930
  41f478:	cmp    rdi,rsi
  41f47b:	jne    0x41f462
  41f47d:	add    r14d,ebx
  41f480:	mov    r8,rsi
  41f483:	mov    edx,ebx
  41f485:	mov    rcx,rbp
  41f488:	add    ebx,0x1
  41f48b:	add    rsi,0x10
  41f48f:	call   0x404930
  41f494:	cmp    ebx,r14d
  41f497:	jne    0x41f480
  41f499:	lea    r8,[r12+0x8]
  41f49e:	lea    rdx,[rip+0x2529f]        # 0x444744
  41f4a5:	mov    rcx,rbp
  41f4a8:	lea    rbx,[rsp+0x28]
  41f4ad:	call   0x404a80
  41f4b2:	lea    r8,[r12+0x10]
  41f4b7:	lea    rdx,[rip+0x2528c]        # 0x44474a
  41f4be:	mov    rcx,rbp
  41f4c1:	call   0x404a80
  41f4c6:	lea    r8,[r12+0x18]
  41f4cb:	lea    rdx,[rip+0x252a4]        # 0x444776
  41f4d2:	mov    rcx,rbp
  41f4d5:	call   0x404a80
  41f4da:	lea    r8,[rsp+0x2c]
  41f4df:	lea    rdx,[rip+0x2526a]        # 0x444750
  41f4e6:	mov    rcx,rbp
  41f4e9:	call   0x404a80
  41f4ee:	movzx  eax,WORD PTR [r12+0x6]
  41f4f4:	movzx  edx,WORD PTR [rsp+0x2c]
  41f4f9:	mov    r8,rbx
  41f4fc:	mov    rcx,rbp
  41f4ff:	and    dx,0x7ff
  41f504:	and    ax,0xf800
  41f508:	or     eax,edx
  41f50a:	lea    rdx,[rip+0x25243]        # 0x444754
  41f511:	mov    WORD PTR [r12+0x6],ax
  41f517:	call   0x404a80
  41f51c:	mov    eax,DWORD PTR [rsp+0x28]
  41f520:	lea    rdx,[rip+0x25233]        # 0x44475a
  41f527:	mov    r8,rbx
  41f52a:	mov    rcx,rbp
  41f52d:	mov    WORD PTR [r12],ax
  41f532:	call   0x404a80
  41f537:	mov    eax,DWORD PTR [rsp+0x28]
  41f53b:	lea    rdx,[rip+0x2521e]        # 0x444760
  41f542:	mov    r8,rbx
  41f545:	mov    rcx,rbp
  41f548:	mov    WORD PTR [r12+0x2],ax
  41f54e:	call   0x404a80
  41f553:	movzx  r10d,WORD PTR [rsp+0x28]
  41f559:	xor    edx,edx
  41f55b:	xor    r8d,r8d
  41f55e:	mov    eax,0x7
  41f563:	mov    r11d,0x1
  41f569:	mov    DWORD PTR [rsp+0x28],r10d
  41f56e:	xchg   ax,ax
  41f570:	lea    ecx,[rax+rax*1]
  41f573:	mov    r9d,r10d
  41f576:	shr    r9d,cl
  41f579:	and    r9d,0x3
  41f57d:	cmp    r9d,0x3
  41f581:	je     0x41f590
  41f583:	mov    edx,r11d
  41f586:	mov    ecx,eax
  41f588:	shl    edx,cl
  41f58a:	or     edx,r8d
  41f58d:	mov    r8d,edx
  41f590:	sub    eax,0x1
  41f593:	cmp    eax,0xffffffff
  41f596:	jne    0x41f570
  41f598:	mov    DWORD PTR [rsp+0x2c],edx
  41f59c:	lea    rdx,[rip+0x251c2]        # 0x444765
  41f5a3:	mov    WORD PTR [r12+0x4],r8w
  41f5a9:	mov    rcx,rbp
  41f5ac:	mov    r8,rbx
  41f5af:	call   0x404a80
  41f5b4:	mov    eax,DWORD PTR [rsp+0x28]
  41f5b8:	lea    rdx,[rip+0x251ac]        # 0x44476b
  41f5bf:	mov    r8,rbx
  41f5c2:	mov    rcx,rbp
  41f5c5:	mov    WORD PTR [r12+0xc],ax
  41f5cb:	call   0x404a80
  41f5d0:	mov    eax,DWORD PTR [rsp+0x28]
  41f5d4:	mov    WORD PTR [r12+0x14],ax
  41f5da:	add    rsp,0x30
  41f5de:	pop    rbx
  41f5df:	pop    rsi
  41f5e0:	pop    rdi
  41f5e1:	pop    rbp
  41f5e2:	pop    r12
  41f5e4:	pop    r13
  41f5e6:	pop    r14
  41f5e8:	ret    
  41f5e9:	nop    DWORD PTR [rax+0x0]
  41f5f0:	push   r15
  41f5f2:	push   r14
  41f5f4:	push   r13
  41f5f6:	push   r12
  41f5f8:	push   rbp
  41f5f9:	push   rdi
  41f5fa:	push   rsi
  41f5fb:	push   rbx
  41f5fc:	sub    rsp,0x78
  41f600:	xor    ebp,ebp
  41f602:	mov    rsi,rcx
  41f605:	mov    rcx,QWORD PTR [rcx]
  41f608:	mov    rdi,rdx
  41f60b:	xor    edx,edx
  41f60d:	call   0x404710
  41f612:	mov    edx,DWORD PTR [rdi+0x200]
  41f618:	cmp    eax,0x8
  41f61b:	mov    rax,QWORD PTR [rip+0xf9de]        # 0x42f000
  41f622:	sete   bpl
  41f626:	lea    ebp,[rbp*8+0x8]
  41f62d:	not    edx
  41f62f:	and    edx,eax
  41f631:	je     0x41f78b
  41f637:	test   dl,0x1
  41f63a:	je     0x41f668
  41f63c:	lea    rax,[rdi+0x20]
  41f640:	lea    rcx,[rdi+0xa0]
  41f647:	nop    WORD PTR [rax+rax*1+0x0]
  41f650:	xor    r8d,r8d
  41f653:	mov    QWORD PTR [rax],0x0
  41f65a:	add    rax,0x10
  41f65e:	mov    WORD PTR [rax-0x8],r8w
  41f663:	cmp    rax,rcx
  41f666:	jne    0x41f650
  41f668:	test   dl,0x2
  41f66b:	je     0x41f69a
  41f66d:	lea    ecx,[rbp-0x1]
  41f670:	lea    rax,[rdi+0xa0]
  41f677:	add    rcx,0xb
  41f67b:	shl    rcx,0x4
  41f67f:	add    rcx,rdi
  41f682:	mov    QWORD PTR [rax],0x0
  41f689:	mov    QWORD PTR [rax+0x8],0x0
  41f691:	add    rax,0x10
  41f695:	cmp    rax,rcx
  41f698:	jne    0x41f682
  41f69a:	test   dl,0x4
  41f69d:	je     0x41f6cc
  41f69f:	lea    ecx,[rbp-0x1]
  41f6a2:	lea    rax,[rdi+0x240]
  41f6a9:	add    rcx,0x25
  41f6ad:	shl    rcx,0x4
  41f6b1:	add    rcx,rdi
  41f6b4:	mov    QWORD PTR [rax],0x0
  41f6bb:	mov    QWORD PTR [rax+0x8],0x0
  41f6c3:	add    rax,0x10
  41f6c7:	cmp    rax,rcx
  41f6ca:	jne    0x41f6b4
  41f6cc:	test   dl,0x8
  41f6cf:	je     0x41f6f7
  41f6d1:	lea    rax,[rdi+0x3c0]
  41f6d8:	lea    rcx,[rdi+0x400]
  41f6df:	mov    QWORD PTR [rax],0x0
  41f6e6:	mov    QWORD PTR [rax+0x8],0x0
  41f6ee:	add    rax,0x10
  41f6f2:	cmp    rax,rcx
  41f6f5:	jne    0x41f6df
  41f6f7:	test   dl,0x10
  41f6fa:	je     0x41f712
  41f6fc:	mov    QWORD PTR [rdi+0x400],0x0
  41f707:	mov    QWORD PTR [rdi+0x408],0x0
  41f712:	test   dl,0x20
  41f715:	je     0x41f735
  41f717:	lea    rax,[rdi+0x440]
  41f71e:	lea    rcx,[rdi+0x480]
  41f725:	mov    QWORD PTR [rax],0x0
  41f72c:	add    rax,0x8
  41f730:	cmp    rax,rcx
  41f733:	jne    0x41f725
  41f735:	test   dl,0x40
  41f738:	je     0x41f778
  41f73a:	lea    rax,[rdi+0x480]
  41f741:	lea    rcx,[rdi+0x680]
  41f748:	nop    DWORD PTR [rax+rax*1+0x0]
  41f750:	mov    QWORD PTR [rax],0x0
  41f757:	mov    QWORD PTR [rax+0x8],0x0
  41f75f:	add    rax,0x20
  41f763:	mov    QWORD PTR [rax-0x10],0x0
  41f76b:	mov    QWORD PTR [rax-0x8],0x0
  41f773:	cmp    rax,rcx
  41f776:	jne    0x41f750
  41f778:	and    edx,0x80
  41f77e:	jne    0x41f920
  41f784:	mov    rax,QWORD PTR [rip+0xf875]        # 0x42f000
  41f78b:	xor    r12d,r12d
  41f78e:	test   al,0x1
  41f790:	jne    0x41fe40
  41f796:	test   al,0x2
  41f798:	jne    0x41fdc0
  41f79e:	test   al,0x4
  41f7a0:	jne    0x41fd40
  41f7a6:	test   al,0x8
  41f7a8:	jne    0x41fb40
  41f7ae:	test   al,0x10
  41f7b0:	jne    0x41fba5
  41f7b6:	test   al,0x20
  41f7b8:	jne    0x41fc0b
  41f7be:	test   al,0x40
  41f7c0:	jne    0x41fc8a
  41f7c6:	test   al,0x80
  41f7c8:	jne    0x41f9c0
  41f7ce:	or     QWORD PTR [rdi+0x200],r12
  41f7d5:	lea    r8,[rdi+0x8]
  41f7d9:	lea    rdx,[rip+0x24f64]        # 0x444744
  41f7e0:	mov    rcx,rsi
  41f7e3:	lea    rbx,[rsp+0x28]
  41f7e8:	call   0x404a80
  41f7ed:	lea    r8,[rdi+0x10]
  41f7f1:	lea    rdx,[rip+0x24f52]        # 0x44474a
  41f7f8:	mov    rcx,rsi
  41f7fb:	call   0x404a80
  41f800:	lea    r8,[rdi+0x18]
  41f804:	lea    rdx,[rip+0x24f6b]        # 0x444776
  41f80b:	mov    rcx,rsi
  41f80e:	call   0x404a80
  41f813:	lea    r8,[rsp+0x2c]
  41f818:	lea    rdx,[rip+0x24f31]        # 0x444750
  41f81f:	mov    rcx,rsi
  41f822:	call   0x404a80
  41f827:	movzx  eax,WORD PTR [rdi+0x6]
  41f82b:	movzx  edx,WORD PTR [rsp+0x2c]
  41f830:	mov    r8,rbx
  41f833:	mov    rcx,rsi
  41f836:	and    dx,0x7ff
  41f83b:	and    ax,0xf800
  41f83f:	or     eax,edx
  41f841:	lea    rdx,[rip+0x24f0c]        # 0x444754
  41f848:	mov    WORD PTR [rdi+0x6],ax
  41f84c:	call   0x404a80
  41f851:	mov    eax,DWORD PTR [rsp+0x28]
  41f855:	lea    rdx,[rip+0x24efe]        # 0x44475a
  41f85c:	mov    r8,rbx
  41f85f:	mov    rcx,rsi
  41f862:	mov    WORD PTR [rdi],ax
  41f865:	call   0x404a80
  41f86a:	mov    eax,DWORD PTR [rsp+0x28]
  41f86e:	lea    rdx,[rip+0x24eeb]        # 0x444760
  41f875:	mov    r8,rbx
  41f878:	mov    rcx,rsi
  41f87b:	mov    WORD PTR [rdi+0x2],ax
  41f87f:	call   0x404a80
  41f884:	movzx  r8d,WORD PTR [rsp+0x28]
  41f88a:	xor    r9d,r9d
  41f88d:	xor    edx,edx
  41f88f:	mov    eax,0x7
  41f894:	mov    r10d,0x1
  41f89a:	mov    DWORD PTR [rsp+0x28],r8d
  41f89f:	nop
  41f8a0:	lea    ecx,[rax+rax*1]
  41f8a3:	mov    r11d,r8d
  41f8a6:	shr    r11d,cl
  41f8a9:	mov    ecx,r11d
  41f8ac:	and    ecx,0x3
  41f8af:	cmp    ecx,0x3
  41f8b2:	je     0x41f8c2
  41f8b4:	mov    r9d,r10d
  41f8b7:	mov    ecx,eax
  41f8b9:	shl    r9d,cl
  41f8bc:	or     edx,r9d
  41f8bf:	mov    r9d,edx
  41f8c2:	sub    eax,0x1
  41f8c5:	cmp    eax,0xffffffff
  41f8c8:	jne    0x41f8a0
  41f8ca:	mov    WORD PTR [rdi+0x4],dx
  41f8ce:	lea    rdx,[rip+0x24e90]        # 0x444765
  41f8d5:	mov    r8,rbx
  41f8d8:	mov    rcx,rsi
  41f8db:	mov    DWORD PTR [rsp+0x2c],r9d
  41f8e0:	call   0x404a80
  41f8e5:	mov    eax,DWORD PTR [rsp+0x28]
  41f8e9:	lea    rdx,[rip+0x24e7b]        # 0x44476b
  41f8f0:	mov    r8,rbx
  41f8f3:	mov    rcx,rsi
  41f8f6:	mov    WORD PTR [rdi+0xc],ax
  41f8fa:	call   0x404a80
  41f8ff:	mov    eax,DWORD PTR [rsp+0x28]
  41f903:	mov    WORD PTR [rdi+0x14],ax
  41f907:	add    rsp,0x78
  41f90b:	pop    rbx
  41f90c:	pop    rsi
  41f90d:	pop    rdi
  41f90e:	pop    rbp
  41f90f:	pop    r12
  41f911:	pop    r13
  41f913:	pop    r14
  41f915:	pop    r15
  41f917:	ret    
  41f918:	nop    DWORD PTR [rax+rax*1+0x0]
  41f920:	lea    rax,[rdi+0x4a0]
  41f927:	lea    rdx,[rdi+0x8a0]
  41f92e:	xchg   ax,ax
  41f930:	mov    QWORD PTR [rax],0x0
  41f937:	mov    QWORD PTR [rax+0x8],0x0
  41f93f:	add    rax,0x40
  41f943:	mov    QWORD PTR [rax-0x30],0x0
  41f94b:	mov    QWORD PTR [rax-0x28],0x0
  41f953:	cmp    rax,rdx
  41f956:	jne    0x41f930
  41f958:	lea    rax,[rdi+0x680]
  41f95f:	lea    rdx,[rdi+0xa80]
  41f966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f970:	mov    QWORD PTR [rax],0x0
  41f977:	mov    QWORD PTR [rax+0x8],0x0
  41f97f:	add    rax,0x40
  41f983:	cmp    rax,rdx
  41f986:	jne    0x41f970
  41f988:	lea    rax,[rdi+0x690]
  41f98f:	lea    rdx,[rdi+0xa90]
  41f996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9a0:	mov    QWORD PTR [rax],0x0
  41f9a7:	mov    QWORD PTR [rax+0x8],0x0
  41f9af:	add    rax,0x40
  41f9b3:	cmp    rax,rdx
  41f9b6:	jne    0x41f9a0
  41f9b8:	jmp    0x41f784
  41f9bd:	nop    DWORD PTR [rax]
  41f9c0:	mov    rcx,QWORD PTR [rsi]
  41f9c3:	lea    rdx,[rip+0x24dd1]        # 0x44479b
  41f9ca:	lea    rbp,[rdi+0x6a0]
  41f9d1:	xor    r13d,r13d
  41f9d4:	lea    rbx,[rsp+0x30]
  41f9d9:	call   0x404660
  41f9de:	mov    r14d,eax
  41f9e1:	jmp    0x41f9f1
  41f9e3:	add    r13,0x1
  41f9e7:	add    rbp,0x40
  41f9eb:	cmp    r13,0x10
  41f9ef:	je     0x41fa46
  41f9f1:	lea    edx,[r14+r13*1]
  41f9f5:	mov    r8,rbx
  41f9f8:	mov    rcx,rsi
  41f9fb:	call   0x404930
  41fa00:	mov    r8d,0x20
  41fa06:	mov    rdx,rbp
  41fa09:	mov    rcx,rbx
  41fa0c:	call   0x42a670
  41fa11:	test   eax,eax
  41fa13:	je     0x41f9e3
  41fa15:	mov    rax,QWORD PTR [rbx]
  41fa18:	add    r13,0x1
  41fa1c:	or     r12b,0x80
  41fa20:	add    rbp,0x40
  41fa24:	mov    QWORD PTR [rbp-0x40],rax
  41fa28:	mov    rax,QWORD PTR [rbx+0x8]
  41fa2c:	mov    QWORD PTR [rbp-0x38],rax
  41fa30:	mov    rax,QWORD PTR [rbx+0x10]
  41fa34:	mov    QWORD PTR [rbp-0x30],rax
  41fa38:	mov    rax,QWORD PTR [rbx+0x18]
  41fa3c:	mov    QWORD PTR [rbp-0x28],rax
  41fa40:	cmp    r13,0x10
  41fa44:	jne    0x41f9f1
  41fa46:	test   BYTE PTR [rip+0xf5b3],0x80        # 0x42f000
  41fa4d:	je     0x41f7ce
  41fa53:	mov    rcx,QWORD PTR [rsi]
  41fa56:	lea    rdx,[rip+0x24d45]        # 0x4447a2
  41fa5d:	lea    r13,[rdi+0x680]
  41fa64:	xor    ebp,ebp
  41fa66:	call   0x404660
  41fa6b:	mov    r14d,eax
  41fa6e:	jmp    0x41fa7e
  41fa70:	add    rbp,0x1
  41fa74:	add    r13,0x40
  41fa78:	cmp    rbp,0x10
  41fa7c:	je     0x41fac3
  41fa7e:	lea    edx,[r14+rbp*1]
  41fa82:	mov    r8,rbx
  41fa85:	mov    rcx,rsi
  41fa88:	call   0x404930
  41fa8d:	mov    r8d,0x10
  41fa93:	mov    rdx,r13
  41fa96:	mov    rcx,rbx
  41fa99:	call   0x42a670
  41fa9e:	test   eax,eax
  41faa0:	je     0x41fa70
  41faa2:	mov    rax,QWORD PTR [rbx]
  41faa5:	add    rbp,0x1
  41faa9:	or     r12b,0x80
  41faad:	add    r13,0x40
  41fab1:	mov    QWORD PTR [r13-0x40],rax
  41fab5:	mov    rax,QWORD PTR [rbx+0x8]
  41fab9:	mov    QWORD PTR [r13-0x38],rax
  41fabd:	cmp    rbp,0x10
  41fac1:	jne    0x41fa7e
  41fac3:	test   BYTE PTR [rip+0xf536],0x80        # 0x42f000
  41faca:	je     0x41f7ce
  41fad0:	mov    rcx,QWORD PTR [rsi]
  41fad3:	lea    rdx,[rip+0x24cce]        # 0x4447a8
  41fada:	lea    r13,[rdi+0x690]
  41fae1:	xor    bpl,bpl
  41fae4:	call   0x404660
  41fae9:	mov    r14d,eax
  41faec:	jmp    0x41fb02
  41faee:	xchg   ax,ax
  41faf0:	add    rbp,0x1
  41faf4:	add    r13,0x40
  41faf8:	cmp    rbp,0x10
  41fafc:	je     0x41f7ce
  41fb02:	lea    edx,[r14+rbp*1]
  41fb06:	mov    r8,rbx
  41fb09:	mov    rcx,rsi
  41fb0c:	call   0x404930
  41fb11:	mov    r8d,0x10
  41fb17:	mov    rdx,r13
  41fb1a:	mov    rcx,rbx
  41fb1d:	call   0x42a670
  41fb22:	test   eax,eax
  41fb24:	je     0x41faf0
  41fb26:	mov    rax,QWORD PTR [rbx]
  41fb29:	or     r12b,0x80
  41fb2d:	mov    QWORD PTR [r13+0x0],rax
  41fb31:	mov    rax,QWORD PTR [rbx+0x8]
  41fb35:	mov    QWORD PTR [r13+0x8],rax
  41fb39:	jmp    0x41faf0
  41fb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb40:	mov    rcx,QWORD PTR [rsi]
  41fb43:	lea    rdx,[rip+0x24c38]        # 0x444782
  41fb4a:	lea    r13,[rdi+0x3c0]
  41fb51:	lea    rbx,[rsp+0x30]
  41fb56:	xor    ebp,ebp
  41fb58:	call   0x404660
  41fb5d:	mov    r14d,eax
  41fb60:	lea    edx,[r14+rbp*1]
  41fb64:	mov    r8,rbx
  41fb67:	mov    rcx,rsi
  41fb6a:	call   0x404930
  41fb6f:	mov    r8d,0x10
  41fb75:	mov    rdx,r13
  41fb78:	mov    rcx,rbx
  41fb7b:	call   0x42a670
  41fb80:	test   eax,eax
  41fb82:	jne    0x41fd20
  41fb88:	add    rbp,0x1
  41fb8c:	add    r13,0x10
  41fb90:	cmp    rbp,0x4
  41fb94:	jne    0x41fb60
  41fb96:	mov    rax,QWORD PTR [rip+0xf463]        # 0x42f000
  41fb9d:	test   al,0x10
  41fb9f:	je     0x41f7b6
  41fba5:	mov    rcx,QWORD PTR [rsi]
  41fba8:	lea    rdx,[rip+0x24bdb]        # 0x44478a
  41fbaf:	lea    rbp,[rdi+0x400]
  41fbb6:	lea    rbx,[rsp+0x30]
  41fbbb:	xor    r13d,r13d
  41fbbe:	call   0x404660
  41fbc3:	mov    r14d,eax
  41fbc6:	lea    edx,[r14+r13*1]
  41fbca:	mov    r8,rbx
  41fbcd:	mov    rcx,rsi
  41fbd0:	call   0x404930
  41fbd5:	mov    r8d,0x8
  41fbdb:	mov    rdx,rbp
  41fbde:	mov    rcx,rbx
  41fbe1:	call   0x42a670
  41fbe6:	test   eax,eax
  41fbe8:	jne    0x41fed0
  41fbee:	add    rbp,0x8
  41fbf2:	cmp    r13,0x1
  41fbf6:	jne    0x41fec3
  41fbfc:	mov    rax,QWORD PTR [rip+0xf3fd]        # 0x42f000
  41fc03:	test   al,0x20
  41fc05:	je     0x41f7be
  41fc0b:	mov    rcx,QWORD PTR [rsi]
  41fc0e:	lea    rdx,[rip+0x24b7d]        # 0x444792
  41fc15:	lea    r13,[rdi+0x440]
  41fc1c:	xor    ebp,ebp
  41fc1e:	lea    rbx,[rsp+0x30]
  41fc23:	call   0x404660
  41fc28:	mov    r14d,eax
  41fc2b:	jmp    0x41fc3e
  41fc2d:	nop    DWORD PTR [rax]
  41fc30:	add    rbp,0x1
  41fc34:	add    r13,0x8
  41fc38:	cmp    rbp,0x8
  41fc3c:	je     0x41fc7b
  41fc3e:	lea    edx,[r14+rbp*1]
  41fc42:	mov    r8,rbx
  41fc45:	mov    rcx,rsi
  41fc48:	call   0x404930
  41fc4d:	mov    r8d,0x8
  41fc53:	mov    rdx,r13
  41fc56:	mov    rcx,rbx
  41fc59:	call   0x42a670
  41fc5e:	test   eax,eax
  41fc60:	je     0x41fc30
  41fc62:	mov    rax,QWORD PTR [rbx]
  41fc65:	add    rbp,0x1
  41fc69:	or     r12,0x20
  41fc6d:	add    r13,0x8
  41fc71:	mov    QWORD PTR [r13-0x8],rax
  41fc75:	cmp    rbp,0x8
  41fc79:	jne    0x41fc3e
  41fc7b:	mov    rax,QWORD PTR [rip+0xf37e]        # 0x42f000
  41fc82:	test   al,0x40
  41fc84:	je     0x41f7c6
  41fc8a:	mov    rcx,QWORD PTR [rsi]
  41fc8d:	lea    rdx,[rip+0x24b01]        # 0x444795
  41fc94:	lea    rbp,[rdi+0x480]
  41fc9b:	xor    r13d,r13d
  41fc9e:	lea    rbx,[rsp+0x30]
  41fca3:	call   0x404660
  41fca8:	mov    r14d,eax
  41fcab:	jmp    0x41fcbe
  41fcad:	nop    DWORD PTR [rax]
  41fcb0:	add    r13,0x1
  41fcb4:	add    rbp,0x20
  41fcb8:	cmp    r13,0x10
  41fcbc:	je     0x41fd13
  41fcbe:	lea    edx,[r14+r13*1]
  41fcc2:	mov    r8,rbx
  41fcc5:	mov    rcx,rsi
  41fcc8:	call   0x404930
  41fccd:	mov    r8d,0x20
  41fcd3:	mov    rdx,rbp
  41fcd6:	mov    rcx,rbx
  41fcd9:	call   0x42a670
  41fcde:	test   eax,eax
  41fce0:	je     0x41fcb0
  41fce2:	mov    rax,QWORD PTR [rbx]
  41fce5:	add    r13,0x1
  41fce9:	or     r12,0x40
  41fced:	add    rbp,0x20
  41fcf1:	mov    QWORD PTR [rbp-0x20],rax
  41fcf5:	mov    rax,QWORD PTR [rbx+0x8]
  41fcf9:	mov    QWORD PTR [rbp-0x18],rax
  41fcfd:	mov    rax,QWORD PTR [rbx+0x10]
  41fd01:	mov    QWORD PTR [rbp-0x10],rax
  41fd05:	mov    rax,QWORD PTR [rbx+0x18]
  41fd09:	mov    QWORD PTR [rbp-0x8],rax
  41fd0d:	cmp    r13,0x10
  41fd11:	jne    0x41fcbe
  41fd13:	mov    rax,QWORD PTR [rip+0xf2e6]        # 0x42f000
  41fd1a:	jmp    0x41f7c6
  41fd1f:	nop
  41fd20:	mov    rax,QWORD PTR [rbx]
  41fd23:	or     r12,0x8
  41fd27:	mov    QWORD PTR [r13+0x0],rax
  41fd2b:	mov    rax,QWORD PTR [rbx+0x8]
  41fd2f:	mov    QWORD PTR [r13+0x8],rax
  41fd33:	jmp    0x41fb88
  41fd38:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd40:	mov    rcx,QWORD PTR [rsi]
  41fd43:	lea    rdx,[rip+0x24a32]        # 0x44477c
  41fd4a:	lea    r14,[rdi+0x240]
  41fd51:	xor    r13d,r13d
  41fd54:	lea    rbx,[rsp+0x30]
  41fd59:	call   0x404660
  41fd5e:	mov    r15d,eax
  41fd61:	jmp    0x41fd70
  41fd63:	add    r13,0x1
  41fd67:	add    r14,0x10
  41fd6b:	cmp    ebp,r13d
  41fd6e:	jle    0x41fdb4
  41fd70:	lea    edx,[r15+r13*1]
  41fd74:	mov    r8,rbx
  41fd77:	mov    rcx,rsi
  41fd7a:	call   0x404930
  41fd7f:	mov    r8d,0x10
  41fd85:	mov    rdx,r14
  41fd88:	mov    rcx,rbx
  41fd8b:	call   0x42a670
  41fd90:	test   eax,eax
  41fd92:	je     0x41fd63
  41fd94:	mov    rax,QWORD PTR [rbx]
  41fd97:	add    r13,0x1
  41fd9b:	or     r12,0x4
  41fd9f:	add    r14,0x10
  41fda3:	mov    QWORD PTR [r14-0x10],rax
  41fda7:	mov    rax,QWORD PTR [rbx+0x8]
  41fdab:	mov    QWORD PTR [r14-0x8],rax
  41fdaf:	cmp    ebp,r13d
  41fdb2:	jg     0x41fd70
  41fdb4:	mov    rax,QWORD PTR [rip+0xf245]        # 0x42f000
  41fdbb:	jmp    0x41f7a6
  41fdc0:	mov    rcx,QWORD PTR [rsi]
  41fdc3:	lea    rdx,[rip+0x249a7]        # 0x444771
  41fdca:	lea    r14,[rdi+0xa0]
  41fdd1:	xor    r13d,r13d
  41fdd4:	lea    rbx,[rsp+0x30]
  41fdd9:	call   0x404660
  41fdde:	mov    r15d,eax
  41fde1:	jmp    0x41fdf0
  41fde3:	add    r13,0x1
  41fde7:	add    r14,0x10
  41fdeb:	cmp    ebp,r13d
  41fdee:	jle    0x41fe34
  41fdf0:	lea    edx,[r15+r13*1]
  41fdf4:	mov    r8,rbx
  41fdf7:	mov    rcx,rsi
  41fdfa:	call   0x404930
  41fdff:	mov    r8d,0x10
  41fe05:	mov    rdx,r14
  41fe08:	mov    rcx,rbx
  41fe0b:	call   0x42a670
  41fe10:	test   eax,eax
  41fe12:	je     0x41fde3
  41fe14:	mov    rax,QWORD PTR [rbx]
  41fe17:	add    r13,0x1
  41fe1b:	or     r12,0x2
  41fe1f:	add    r14,0x10
  41fe23:	mov    QWORD PTR [r14-0x10],rax
  41fe27:	mov    rax,QWORD PTR [rbx+0x8]
  41fe2b:	mov    QWORD PTR [r14-0x8],rax
  41fe2f:	cmp    ebp,r13d
  41fe32:	jg     0x41fdf0
  41fe34:	mov    rax,QWORD PTR [rip+0xf1c5]        # 0x42f000
  41fe3b:	jmp    0x41f79e
  41fe40:	mov    rcx,QWORD PTR [rsi]
  41fe43:	lea    rdx,[rip+0x248f6]        # 0x444740
  41fe4a:	lea    r13,[rdi+0x20]
  41fe4e:	lea    r15,[rdi+0xa0]
  41fe55:	lea    rbx,[rsp+0x30]
  41fe5a:	call   0x404660
  41fe5f:	mov    r14d,eax
  41fe62:	jmp    0x41fe71
  41fe64:	add    r13,0x10
  41fe68:	add    r14d,0x1
  41fe6c:	cmp    r13,r15
  41fe6f:	je     0x41feb7
  41fe71:	mov    r8,rbx
  41fe74:	mov    edx,r14d
  41fe77:	mov    rcx,rsi
  41fe7a:	call   0x404930
  41fe7f:	mov    r8d,0xa
  41fe85:	mov    rdx,r13
  41fe88:	mov    rcx,rbx
  41fe8b:	call   0x42a670
  41fe90:	test   eax,eax
  41fe92:	je     0x41fe64
  41fe94:	mov    rax,QWORD PTR [rbx]
  41fe97:	add    r13,0x10
  41fe9b:	add    r14d,0x1
  41fe9f:	mov    r12d,0x1
  41fea5:	mov    QWORD PTR [r13-0x10],rax
  41fea9:	movzx  eax,WORD PTR [rbx+0x8]
  41fead:	mov    WORD PTR [r13-0x8],ax
  41feb2:	cmp    r13,r15
  41feb5:	jne    0x41fe71
  41feb7:	mov    rax,QWORD PTR [rip+0xf142]        # 0x42f000
  41febe:	jmp    0x41f796
  41fec3:	mov    r13d,0x1
  41fec9:	jmp    0x41fbc6
  41fece:	xchg   ax,ax
  41fed0:	mov    rax,QWORD PTR [rbx]
  41fed3:	or     r12,0x10
  41fed7:	mov    QWORD PTR [rbp+0x0],rax
  41fedb:	jmp    0x41fbee
  41fee0:	push   r14
  41fee2:	push   r13
  41fee4:	push   r12
  41fee6:	push   rbp
  41fee7:	push   rdi
  41fee8:	push   rsi
  41fee9:	push   rbx
  41feea:	sub    rsp,0x30
  41feee:	xor    r14d,r14d
  41fef1:	mov    rdi,rcx
  41fef4:	mov    rcx,QWORD PTR [rcx]
  41fef7:	mov    rbp,rdx
  41fefa:	lea    rdx,[rip+0x2483f]        # 0x444740
  41ff01:	lea    r12,[rbp+0x20]
  41ff05:	lea    rsi,[rbp+0xa0]
  41ff0c:	call   0x404660
  41ff11:	mov    rcx,QWORD PTR [rdi]
  41ff14:	lea    rdx,[rip+0x24856]        # 0x444771
  41ff1b:	mov    r13d,eax
  41ff1e:	call   0x404660
  41ff23:	mov    rcx,QWORD PTR [rdi]
  41ff26:	xor    edx,edx
  41ff28:	mov    ebx,eax
  41ff2a:	call   0x404710
  41ff2f:	cmp    eax,0x8
  41ff32:	sete   r14b
  41ff36:	lea    r14d,[r14*8+0x8]
  41ff3e:	xchg   ax,ax
  41ff40:	mov    r8,r12
  41ff43:	mov    edx,r13d
  41ff46:	mov    rcx,rdi
  41ff49:	add    r12,0x10
  41ff4d:	add    r13d,0x1
  41ff51:	call   0x404750
  41ff56:	cmp    r12,rsi
  41ff59:	jne    0x41ff40
  41ff5b:	add    r14d,ebx
  41ff5e:	xchg   ax,ax
  41ff60:	mov    r8,rsi
  41ff63:	mov    edx,ebx
  41ff65:	mov    rcx,rdi
  41ff68:	add    ebx,0x1
  41ff6b:	add    rsi,0x10
  41ff6f:	call   0x404750
  41ff74:	cmp    ebx,r14d
  41ff77:	jne    0x41ff60
  41ff79:	lea    r8,[rbp+0x8]
  41ff7d:	lea    rdx,[rip+0x247c0]        # 0x444744
  41ff84:	mov    rcx,rdi
  41ff87:	lea    r12,[rsp+0x2c]
  41ff8c:	mov    r13d,0x8
  41ff92:	xor    esi,esi
  41ff94:	call   0x404900
  41ff99:	lea    r8,[rbp+0x10]
  41ff9d:	lea    rdx,[rip+0x247a6]        # 0x44474a
  41ffa4:	mov    rcx,rdi
  41ffa7:	mov    ebx,0x7
  41ffac:	call   0x404900
  41ffb1:	lea    r8,[rbp+0x18]
  41ffb5:	lea    rdx,[rip+0x247ba]        # 0x444776
  41ffbc:	mov    rcx,rdi
  41ffbf:	call   0x404900
  41ffc4:	movzx  eax,WORD PTR [rbp+0x0]
  41ffc8:	lea    rdx,[rip+0x24785]        # 0x444754
  41ffcf:	mov    r8,r12
  41ffd2:	mov    rcx,rdi
  41ffd5:	mov    DWORD PTR [rsp+0x2c],eax
  41ffd9:	call   0x404900
  41ffde:	movzx  eax,WORD PTR [rbp+0x2]
  41ffe2:	lea    rdx,[rip+0x24771]        # 0x44475a
  41ffe9:	mov    r8,r12
  41ffec:	mov    rcx,rdi
  41ffef:	mov    DWORD PTR [rsp+0x2c],eax
  41fff3:	call   0x404900
  41fff8:	movzx  eax,WORD PTR [rbp+0x2]
  41fffc:	movzx  r14d,WORD PTR [rbp+0x4]
  420001:	mov    DWORD PTR [rsp+0x2c],0x0
  420009:	sar    eax,0xb
  42000c:	and    eax,0x7
  42000f:	sub    r13d,eax
  420012:	bt     r14d,ebx
  420016:	mov    eax,0x3
  42001b:	jae    0x42002d
  42001d:	lea    edx,[r13+rbx*1+0x0]
  420022:	mov    rcx,rbp
  420025:	and    edx,0x7
  420028:	call   0x41f0d0
  42002d:	lea    ecx,[rbx+rbx*1]
  420030:	sub    ebx,0x1
  420033:	shl    eax,cl
  420035:	or     esi,eax
  420037:	cmp    ebx,0xffffffff
  42003a:	mov    DWORD PTR [rsp+0x2c],esi
  42003e:	jne    0x420012
  420040:	lea    rdx,[rip+0x24719]        # 0x444760
  420047:	mov    r8,r12
  42004a:	mov    rcx,rdi
  42004d:	call   0x404900
  420052:	movzx  eax,WORD PTR [rbp+0xc]
  420056:	lea    rdx,[rip+0x24708]        # 0x444765
  42005d:	mov    r8,r12
  420060:	mov    rcx,rdi
  420063:	mov    DWORD PTR [rsp+0x2c],eax
  420067:	call   0x404900
  42006c:	movzx  eax,WORD PTR [rbp+0x14]
  420070:	lea    rdx,[rip+0x246f4]        # 0x44476b
  420077:	mov    r8,r12
  42007a:	mov    rcx,rdi
  42007d:	mov    DWORD PTR [rsp+0x2c],eax
  420081:	call   0x404900
  420086:	movzx  eax,WORD PTR [rbp+0x6]
  42008a:	lea    rdx,[rip+0x246bf]        # 0x444750
  420091:	mov    r8,r12
  420094:	mov    rcx,rdi
  420097:	and    eax,0x7ff
  42009c:	mov    DWORD PTR [rsp+0x2c],eax
  4200a0:	call   0x404900
  4200a5:	nop
  4200a6:	add    rsp,0x30
  4200aa:	pop    rbx
  4200ab:	pop    rsi
  4200ac:	pop    rdi
  4200ad:	pop    rbp
  4200ae:	pop    r12
  4200b0:	pop    r13
  4200b2:	pop    r14
  4200b4:	ret    
  4200b5:	nop
  4200b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200c0:	push   r15
  4200c2:	push   r14
  4200c4:	push   r13
  4200c6:	push   r12
  4200c8:	push   rbp
  4200c9:	push   rdi
  4200ca:	push   rsi
  4200cb:	push   rbx
  4200cc:	sub    rsp,0x38
  4200d0:	xor    edi,edi
  4200d2:	mov    rsi,rcx
  4200d5:	mov    rcx,QWORD PTR [rcx]
  4200d8:	mov    rbp,rdx
  4200db:	xor    edx,edx
  4200dd:	call   0x404710
  4200e2:	mov    r13d,DWORD PTR [rbp+0x200]
  4200e9:	cmp    eax,0x8
  4200ec:	mov    rax,QWORD PTR [rip+0xef0d]        # 0x42f000
  4200f3:	sete   dil
  4200f7:	lea    edi,[rdi*8+0x8]
  4200fe:	not    r13d
  420101:	and    r13d,eax
  420104:	test   al,0x1
  420106:	jne    0x420285
  42010c:	test   al,0x2
  42010e:	jne    0x4202c5
  420114:	test   al,0x4
  420116:	jne    0x420305
  42011c:	test   al,0x8
  42011e:	jne    0x420342
  420124:	test   al,0x10
  420126:	jne    0x420380
  42012c:	test   al,0x20
  42012e:	jne    0x4203c0
  420134:	test   al,0x40
  420136:	jne    0x420400
  42013c:	test   al,0x80
  42013e:	jne    0x420440
  420144:	lea    r8,[rbp+0x8]
  420148:	lea    rdx,[rip+0x245f5]        # 0x444744
  42014f:	mov    rcx,rsi
  420152:	lea    r12,[rsp+0x2c]
  420157:	mov    r13d,0x8
  42015d:	xor    edi,edi
  42015f:	call   0x404900
  420164:	lea    r8,[rbp+0x10]
  420168:	lea    rdx,[rip+0x245db]        # 0x44474a
  42016f:	mov    rcx,rsi
  420172:	mov    ebx,0x7
  420177:	call   0x404900
  42017c:	lea    r8,[rbp+0x18]
  420180:	lea    rdx,[rip+0x245ef]        # 0x444776
  420187:	mov    rcx,rsi
  42018a:	call   0x404900
  42018f:	movzx  eax,WORD PTR [rbp+0x0]
  420193:	lea    rdx,[rip+0x245ba]        # 0x444754
  42019a:	mov    r8,r12
  42019d:	mov    rcx,rsi
  4201a0:	mov    DWORD PTR [rsp+0x2c],eax
  4201a4:	call   0x404900
  4201a9:	movzx  eax,WORD PTR [rbp+0x2]
  4201ad:	lea    rdx,[rip+0x245a6]        # 0x44475a
  4201b4:	mov    r8,r12
  4201b7:	mov    rcx,rsi
  4201ba:	mov    DWORD PTR [rsp+0x2c],eax
  4201be:	call   0x404900
  4201c3:	movzx  eax,WORD PTR [rbp+0x2]
  4201c7:	movzx  r14d,WORD PTR [rbp+0x4]
  4201cc:	mov    DWORD PTR [rsp+0x2c],0x0
  4201d4:	sar    eax,0xb
  4201d7:	and    eax,0x7
  4201da:	sub    r13d,eax
  4201dd:	nop    DWORD PTR [rax]
  4201e0:	bt     r14d,ebx
  4201e4:	mov    eax,0x3
  4201e9:	jae    0x4201fb
  4201eb:	lea    edx,[r13+rbx*1+0x0]
  4201f0:	mov    rcx,rbp
  4201f3:	and    edx,0x7
  4201f6:	call   0x41f0d0
  4201fb:	lea    ecx,[rbx+rbx*1]
  4201fe:	sub    ebx,0x1
  420201:	shl    eax,cl
  420203:	or     edi,eax
  420205:	cmp    ebx,0xffffffff
  420208:	mov    DWORD PTR [rsp+0x2c],edi
  42020c:	jne    0x4201e0
  42020e:	lea    rdx,[rip+0x2454b]        # 0x444760
  420215:	mov    r8,r12
  420218:	mov    rcx,rsi
  42021b:	call   0x404900
  420220:	movzx  eax,WORD PTR [rbp+0xc]
  420224:	lea    rdx,[rip+0x2453a]        # 0x444765
  42022b:	mov    r8,r12
  42022e:	mov    rcx,rsi
  420231:	mov    DWORD PTR [rsp+0x2c],eax
  420235:	call   0x404900
  42023a:	movzx  eax,WORD PTR [rbp+0x14]
  42023e:	lea    rdx,[rip+0x24526]        # 0x44476b
  420245:	mov    r8,r12
  420248:	mov    rcx,rsi
  42024b:	mov    DWORD PTR [rsp+0x2c],eax
  42024f:	call   0x404900
  420254:	movzx  eax,WORD PTR [rbp+0x6]
  420258:	lea    rdx,[rip+0x244f1]        # 0x444750
  42025f:	mov    r8,r12
  420262:	mov    rcx,rsi
  420265:	and    eax,0x7ff
  42026a:	mov    DWORD PTR [rsp+0x2c],eax
  42026e:	call   0x404900
  420273:	nop
  420274:	add    rsp,0x38
  420278:	pop    rbx
  420279:	pop    rsi
  42027a:	pop    rdi
  42027b:	pop    rbp
  42027c:	pop    r12
  42027e:	pop    r13
  420280:	pop    r14
  420282:	pop    r15
  420284:	ret    
  420285:	mov    rcx,QWORD PTR [rsi]
  420288:	lea    rdx,[rip+0x244b1]        # 0x444740
  42028f:	call   0x404660
  420294:	test   r13b,0x1
  420298:	mov    ebx,eax
  42029a:	je     0x4206a1
  4202a0:	lea    r12d,[rax+0x8]
  4202a4:	mov    edx,ebx
  4202a6:	mov    rcx,rsi
  4202a9:	add    ebx,0x1
  4202ac:	call   0x404810
  4202b1:	cmp    ebx,r12d
  4202b4:	jne    0x4202a4
  4202b6:	mov    rax,QWORD PTR [rip+0xed43]        # 0x42f000
  4202bd:	test   al,0x2
  4202bf:	je     0x420114
  4202c5:	mov    rcx,QWORD PTR [rsi]
  4202c8:	lea    rdx,[rip+0x244a2]        # 0x444771
  4202cf:	call   0x404660
  4202d4:	test   r13b,0x2
  4202d8:	mov    ebx,eax
  4202da:	je     0x4204e0
  4202e0:	lea    r12d,[rdi+rax*1]
  4202e4:	mov    edx,ebx
  4202e6:	mov    rcx,rsi
  4202e9:	add    ebx,0x1
  4202ec:	call   0x404810
  4202f1:	cmp    ebx,r12d
  4202f4:	jne    0x4202e4
  4202f6:	mov    rax,QWORD PTR [rip+0xed03]        # 0x42f000
  4202fd:	test   al,0x4
  4202ff:	je     0x42011c
  420305:	mov    rcx,QWORD PTR [rsi]
  420308:	lea    rdx,[rip+0x2446d]        # 0x44477c
  42030f:	call   0x404660
  420314:	test   r13b,0x4
  420318:	mov    ebx,eax
  42031a:	je     0x420515
  420320:	add    edi,eax
  420322:	mov    edx,ebx
  420324:	mov    rcx,rsi
  420327:	add    ebx,0x1
  42032a:	call   0x404810
  42032f:	cmp    ebx,edi
  420331:	jne    0x420322
  420333:	mov    rax,QWORD PTR [rip+0xecc6]        # 0x42f000
  42033a:	test   al,0x8
  42033c:	je     0x420124
  420342:	mov    rcx,QWORD PTR [rsi]
  420345:	lea    rdx,[rip+0x24436]        # 0x444782
  42034c:	call   0x404660
  420351:	test   r13b,0x8
  420355:	mov    ebx,eax
  420357:	je     0x420544
  42035d:	lea    edi,[rax+0x4]
  420360:	mov    edx,ebx
  420362:	mov    rcx,rsi
  420365:	add    ebx,0x1
  420368:	call   0x404810
  42036d:	cmp    ebx,edi
  42036f:	jne    0x420360
  420371:	mov    rax,QWORD PTR [rip+0xec88]        # 0x42f000
  420378:	test   al,0x10
  42037a:	je     0x42012c
  420380:	mov    rcx,QWORD PTR [rsi]
  420383:	lea    rdx,[rip+0x24400]        # 0x44478a
  42038a:	call   0x404660
  42038f:	test   r13b,0x10
  420393:	mov    ebx,eax
  420395:	je     0x420580
  42039b:	mov    edx,eax
  42039d:	mov    rcx,rsi
  4203a0:	call   0x404810
  4203a5:	lea    edx,[rbx+0x1]
  4203a8:	mov    rcx,rsi
  4203ab:	call   0x404810
  4203b0:	mov    rax,QWORD PTR [rip+0xec49]        # 0x42f000
  4203b7:	test   al,0x20
  4203b9:	je     0x420134
  4203bf:	nop
  4203c0:	mov    rcx,QWORD PTR [rsi]
  4203c3:	lea    rdx,[rip+0x243c8]        # 0x444792
  4203ca:	call   0x404660
  4203cf:	test   r13b,0x20
  4203d3:	mov    ebx,eax
  4203d5:	je     0x4205b0
  4203db:	lea    edi,[rax+0x8]
  4203de:	xchg   ax,ax
  4203e0:	mov    edx,ebx
  4203e2:	mov    rcx,rsi
  4203e5:	add    ebx,0x1
  4203e8:	call   0x404810
  4203ed:	cmp    ebx,edi
  4203ef:	jne    0x4203e0
  4203f1:	mov    rax,QWORD PTR [rip+0xec08]        # 0x42f000
  4203f8:	test   al,0x40
  4203fa:	je     0x42013c
  420400:	mov    rcx,QWORD PTR [rsi]
  420403:	lea    rdx,[rip+0x2438b]        # 0x444795
  42040a:	call   0x404660
  42040f:	test   r13b,0x40
  420413:	mov    ebx,eax
  420415:	je     0x4205e5
  42041b:	lea    edi,[rax+0x10]
  42041e:	xchg   ax,ax
  420420:	mov    edx,ebx
  420422:	mov    rcx,rsi
  420425:	add    ebx,0x1
  420428:	call   0x404810
  42042d:	cmp    ebx,edi
  42042f:	jne    0x420420
  420431:	mov    rax,QWORD PTR [rip+0xebc8]        # 0x42f000
  420438:	test   al,0x80
  42043a:	je     0x420144
  420440:	mov    rcx,QWORD PTR [rsi]
  420443:	lea    rdx,[rip+0x24351]        # 0x44479b
  42044a:	call   0x404660
  42044f:	mov    rcx,QWORD PTR [rsi]
  420452:	lea    rdx,[rip+0x2434f]        # 0x4447a8
  420459:	mov    r12d,eax
  42045c:	call   0x404660
  420461:	mov    rcx,QWORD PTR [rsi]
  420464:	lea    rdx,[rip+0x24337]        # 0x4447a2
  42046b:	mov    edi,eax
  42046d:	call   0x404660
  420472:	and    r13d,0x80
  420479:	mov    ebx,eax
  42047b:	je     0x420620
  420481:	lea    r13d,[r12+0x10]
  420486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420490:	mov    edx,r12d
  420493:	mov    rcx,rsi
  420496:	add    r12d,0x1
  42049a:	call   0x404810
  42049f:	cmp    r12d,r13d
  4204a2:	jne    0x420490
  4204a4:	lea    r12d,[rdi+0x10]
  4204a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4204b0:	mov    edx,edi
  4204b2:	mov    rcx,rsi
  4204b5:	add    edi,0x1
  4204b8:	call   0x404810
  4204bd:	cmp    edi,r12d
  4204c0:	jne    0x4204b0
  4204c2:	lea    edi,[rbx+0x10]
  4204c5:	mov    edx,ebx
  4204c7:	mov    rcx,rsi
  4204ca:	add    ebx,0x1
  4204cd:	call   0x404810
  4204d2:	cmp    ebx,edi
  4204d4:	jne    0x4204c5
  4204d6:	jmp    0x420144
  4204db:	nop    DWORD PTR [rax+rax*1+0x0]
  4204e0:	lea    r12,[rbp+0xa0]
  4204e7:	lea    r14d,[rdi+rax*1]
  4204eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4204f0:	mov    r8,r12
  4204f3:	mov    edx,ebx
  4204f5:	mov    rcx,rsi
  4204f8:	add    ebx,0x1
  4204fb:	add    r12,0x10
  4204ff:	call   0x404750
  420504:	cmp    ebx,r14d
  420507:	jne    0x4204f0
  420509:	mov    rax,QWORD PTR [rip+0xeaf0]        # 0x42f000
  420510:	jmp    0x4202fd
  420515:	lea    r12,[rbp+0x240]
  42051c:	add    edi,eax
  42051e:	xchg   ax,ax
  420520:	mov    r8,r12
  420523:	mov    edx,ebx
  420525:	mov    rcx,rsi
  420528:	add    ebx,0x1
  42052b:	add    r12,0x10
  42052f:	call   0x404750
  420534:	cmp    ebx,edi
  420536:	jne    0x420520
  420538:	mov    rax,QWORD PTR [rip+0xeac1]        # 0x42f000
  42053f:	jmp    0x42033a
  420544:	lea    rdi,[rbp+0x3c0]
  42054b:	lea    r12,[rbp+0x400]
  420552:	mov    r8,rdi
  420555:	mov    edx,ebx
  420557:	mov    rcx,rsi
  42055a:	add    rdi,0x10
  42055e:	add    ebx,0x1
  420561:	call   0x404750
  420566:	cmp    rdi,r12
  420569:	jne    0x420552
  42056b:	mov    rax,QWORD PTR [rip+0xea8e]        # 0x42f000
  420572:	jmp    0x420378
  420577:	nop    WORD PTR [rax+rax*1+0x0]
  420580:	lea    r8,[rbp+0x400]
  420587:	mov    edx,eax
  420589:	mov    rcx,rsi
  42058c:	call   0x404750
  420591:	lea    edx,[rbx+0x1]
  420594:	lea    r8,[rbp+0x408]
  42059b:	mov    rcx,rsi
  42059e:	call   0x404750
  4205a3:	mov    rax,QWORD PTR [rip+0xea56]        # 0x42f000
  4205aa:	jmp    0x42012c
  4205af:	nop
  4205b0:	lea    rdi,[rbp+0x440]
  4205b7:	lea    r12,[rbp+0x480]
  4205be:	xchg   ax,ax
  4205c0:	mov    r8,rdi
  4205c3:	mov    edx,ebx
  4205c5:	mov    rcx,rsi
  4205c8:	add    rdi,0x8
  4205cc:	add    ebx,0x1
  4205cf:	call   0x404750
  4205d4:	cmp    rdi,r12
  4205d7:	jne    0x4205c0
  4205d9:	mov    rax,QWORD PTR [rip+0xea20]        # 0x42f000
  4205e0:	jmp    0x4203f8
  4205e5:	lea    rdi,[rbp+0x480]
  4205ec:	lea    r12,[rbp+0x680]
  4205f3:	mov    r8,rdi
  4205f6:	mov    edx,ebx
  4205f8:	mov    rcx,rsi
  4205fb:	add    rdi,0x20
  4205ff:	add    ebx,0x1
  420602:	call   0x404750
  420607:	cmp    rdi,r12
  42060a:	jne    0x4205f3
  42060c:	mov    rax,QWORD PTR [rip+0xe9ed]        # 0x42f000
  420613:	jmp    0x420438
  420618:	nop    DWORD PTR [rax+rax*1+0x0]
  420620:	lea    r13,[rbp+0x680]
  420627:	lea    r14,[rbp+0x6a0]
  42062e:	lea    r15,[rbp+0xaa0]
  420635:	mov    r8,r14
  420638:	mov    edx,r12d
  42063b:	mov    rcx,rsi
  42063e:	add    r14,0x40
  420642:	add    r12d,0x1
  420646:	call   0x404750
  42064b:	cmp    r14,r15
  42064e:	jne    0x420635
  420650:	lea    r12,[rbp+0x690]
  420657:	lea    r14,[rbp+0xa90]
  42065e:	xchg   ax,ax
  420660:	mov    r8,r12
  420663:	mov    edx,edi
  420665:	mov    rcx,rsi
  420668:	add    r12,0x40
  42066c:	add    edi,0x1
  42066f:	call   0x404750
  420674:	cmp    r12,r14
  420677:	jne    0x420660
  420679:	lea    r12,[rbp+0xa80]
  420680:	mov    rdi,r13
  420683:	mov    r8,rdi
  420686:	mov    edx,ebx
  420688:	mov    rcx,rsi
  42068b:	add    rdi,0x40
  42068f:	add    ebx,0x1
  420692:	call   0x404750
  420697:	cmp    rdi,r12
  42069a:	jne    0x420683
  42069c:	jmp    0x420144
  4206a1:	lea    r12,[rbp+0x20]
  4206a5:	lea    r14,[rbp+0xa0]
  4206ac:	nop    DWORD PTR [rax+0x0]
  4206b0:	mov    r8,r12
  4206b3:	mov    edx,ebx
  4206b5:	mov    rcx,rsi
  4206b8:	add    r12,0x10
  4206bc:	add    ebx,0x1
  4206bf:	call   0x404750
  4206c4:	cmp    r12,r14
  4206c7:	jne    0x4206b0
  4206c9:	mov    rax,QWORD PTR [rip+0xe930]        # 0x42f000
  4206d0:	jmp    0x4202bd
  4206d5:	nop
  4206d6:	nop
  4206d7:	nop
  4206d8:	nop
  4206d9:	nop
  4206da:	nop
  4206db:	nop
  4206dc:	nop
  4206dd:	nop
  4206de:	nop
  4206df:	nop
  4206e0:	sub    rsp,0x28
  4206e4:	mov    rax,QWORD PTR [rip+0x25f65]        # 0x446650
  4206eb:	mov    rdx,QWORD PTR [rax+0x58]
  4206ef:	xor    eax,eax
  4206f1:	test   rdx,rdx
  4206f4:	je     0x420703
  4206f6:	movsx  ecx,cl
  4206f9:	call   rdx
  4206fb:	test   eax,eax
  4206fd:	setne  al
  420700:	movzx  eax,al
  420703:	add    rsp,0x28
  420707:	ret    
  420708:	nop    DWORD PTR [rax+rax*1+0x0]
  420710:	mov    rax,QWORD PTR [rip+0x25f39]        # 0x446650
  420717:	mov    rax,QWORD PTR [rax+0x60]
  42071b:	test   rax,rax
  42071e:	je     0x420723
  420720:	rex.W jmp rax
  420723:	mov    eax,0x1
  420728:	ret    
  420729:	nop    DWORD PTR [rax+0x0]
  420730:	mov    rax,QWORD PTR [rip+0x25f19]        # 0x446650
  420737:	mov    rax,QWORD PTR [rax+0x68]
  42073b:	test   rax,rax
  42073e:	je     0x420743
  420740:	rex.W jmp rax
  420743:	mov    eax,0x1
  420748:	ret    
  420749:	nop    DWORD PTR [rax+0x0]
  420750:	mov    rax,QWORD PTR [rip+0x25ef9]        # 0x446650
  420757:	mov    rax,QWORD PTR [rax+0x70]
  42075b:	test   rax,rax
  42075e:	je     0x420763
  420760:	rex.W jmp rax
  420763:	xor    eax,eax
  420765:	ret    
  420766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420770:	mov    rax,QWORD PTR [rip+0x25ed9]        # 0x446650
  420777:	mov    rax,QWORD PTR [rax+0x78]
  42077b:	test   rax,rax
  42077e:	je     0x420783
  420780:	rex.W jmp rax
  420783:	xor    eax,eax
  420785:	ret    
  420786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420790:	mov    rax,QWORD PTR [rip+0x25eb9]        # 0x446650
  420797:	mov    ecx,DWORD PTR [rax+0x50]
  42079a:	mov    rax,QWORD PTR [rax+0x48]
  42079e:	mov    DWORD PTR [rdx],ecx
  4207a0:	ret    
  4207a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4207a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4207b0:	sub    rsp,0x38
  4207b4:	mov    rax,QWORD PTR [rcx]
  4207b7:	lea    rdx,[rsp+0x20]
  4207bc:	mov    QWORD PTR [rsp+0x20],rax
  4207c1:	mov    eax,DWORD PTR [rcx+0x8]
  4207c4:	mov    rcx,QWORD PTR [rip+0x25c55]        # 0x446420
  4207cb:	mov    DWORD PTR [rsp+0x28],eax
  4207cf:	call   0x403be0
  4207d4:	test   rax,rax
  4207d7:	setne  al
  4207da:	movzx  eax,al
  4207dd:	add    rsp,0x38
  4207e1:	ret    
  4207e2:	nop    DWORD PTR [rax+0x0]
  4207e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4207f0:	push   rsi
  4207f1:	push   rbx
  4207f2:	sub    rsp,0x28
  4207f6:	lea    rcx,[rip+0x23fb3]        # 0x4447b0
  4207fd:	call   QWORD PTR [rip+0x30ded]        # 0x4515f0
  420803:	lea    rdx,[rip+0x23fb3]        # 0x4447bd
  42080a:	mov    rsi,rax
  42080d:	mov    rcx,rax
  420810:	mov    rbx,QWORD PTR [rip+0x30de9]        # 0x451600
  420817:	call   rbx
  420819:	test   rax,rax
  42081c:	je     0x420840
  42081e:	mov    edx,DWORD PTR [rip+0x2eed4]        # 0x44f6f8
  420824:	mov    ecx,0x1
  420829:	call   rax
  42082b:	test   eax,eax
  42082d:	je     0x420840
  42082f:	add    rsp,0x28
  420833:	pop    rbx
  420834:	pop    rsi
  420835:	ret    
  420836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420840:	lea    rdx,[rip+0x23f8f]        # 0x4447d6
  420847:	mov    rcx,rsi
  42084a:	call   rbx
  42084c:	test   rax,rax
  42084f:	je     0x42085e
  420851:	mov    rcx,QWORD PTR [rip+0x2eea8]        # 0x44f700
  420858:	call   rax
  42085a:	test   eax,eax
  42085c:	jne    0x42082f
  42085e:	mov    DWORD PTR [rip+0x2ed78],0x1        # 0x44f5e0
  420868:	add    rsp,0x28
  42086c:	pop    rbx
  42086d:	pop    rsi
  42086e:	ret    
  42086f:	nop
  420870:	push   rsi
  420871:	push   rbx
  420872:	sub    rsp,0x28
  420876:	mov    rsi,rcx
  420879:	call   0x403ce0
  42087e:	mov    rcx,rsi
  420881:	mov    rbx,rax
  420884:	call   0x403af0
  420889:	mov    rcx,QWORD PTR [rbx+0x8]
  42088d:	call   QWORD PTR [rip+0x30cdd]        # 0x451570
  420893:	mov    rcx,rbx
  420896:	add    rsp,0x28
  42089a:	pop    rbx
  42089b:	pop    rsi
  42089c:	jmp    0x42a6c8
  4208a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4208a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208b0:	push   rbp
  4208b1:	push   r15
  4208b3:	push   r14
  4208b5:	push   r13
  4208b7:	push   r12
  4208b9:	push   rdi
  4208ba:	push   rsi
  4208bb:	push   rbx
  4208bc:	sub    rsp,0x78
  4208c0:	lea    rbp,[rsp+0x80]
  4208c8:	cmp    r8d,0x1
  4208cc:	sbb    eax,eax
  4208ce:	add    eax,0x2
  4208d1:	test   rdx,rdx
  4208d4:	mov    DWORD PTR [rbp-0x40],eax
  4208d7:	je     0x420900
  4208d9:	lea    r14,[rbp-0x18]
  4208dd:	mov    r15d,r8d
  4208e0:	mov    r12,rcx
  4208e3:	mov    r9d,0x8
  4208e9:	lea    r8,[rbp-0x20]
  4208ed:	mov    r13,QWORD PTR [rip+0x30d84]        # 0x451678
  4208f4:	mov    QWORD PTR [rsp+0x20],r14
  4208f9:	call   r13
  4208fc:	test   eax,eax
  4208fe:	jne    0x420913
  420900:	xor    eax,eax
  420902:	lea    rsp,[rbp-0x8]
  420906:	pop    rbx
  420907:	pop    rsi
  420908:	pop    rdi
  420909:	pop    r12
  42090b:	pop    r13
  42090d:	pop    r14
  42090f:	pop    r15
  420911:	pop    rbp
  420912:	ret    
  420913:	cmp    QWORD PTR [rbp-0x18],0x8
  420918:	jne    0x420900
  42091a:	mov    rdx,QWORD PTR [rbp-0x20]
  42091e:	test   rdx,rdx
  420921:	je     0x420900
  420923:	mov    edi,DWORD PTR [rbp-0x40]
  420926:	lea    rcx,[rbp-0x30]
  42092a:	xor    esi,esi
  42092c:	xor    ebx,ebx
  42092e:	mov    QWORD PTR [rbp-0x38],rcx
  420932:	mov    rax,rdi
  420935:	sub    eax,0x1
  420938:	mov    DWORD PTR [rbp-0x3c],eax
  42093b:	nop    DWORD PTR [rax+rax*1+0x0]
  420940:	mov    eax,esi
  420942:	add    ebx,0x1
  420945:	mov    QWORD PTR [rsp+0x20],r14
  42094a:	add    rdx,rax
  42094d:	mov    r9,rdi
  420950:	mov    r8,QWORD PTR [rbp-0x38]
  420954:	mov    rcx,r12
  420957:	call   r13
  42095a:	test   eax,eax
  42095c:	je     0x420977
  42095e:	cmp    BYTE PTR [rbp-0x30],0x0
  420962:	jne    0x42096e
  420964:	mov    eax,DWORD PTR [rbp-0x3c]
  420967:	cmp    BYTE PTR [rbp+rax*1-0x30],0x0
  42096c:	je     0x420977
  42096e:	add    esi,DWORD PTR [rbp-0x40]
  420971:	cmp    rdi,QWORD PTR [rbp-0x18]
  420975:	je     0x4209f0
  420977:	test   r15d,r15d
  42097a:	je     0x420a00
  420980:	movsxd r9,ebx
  420983:	add    r9,r9
  420986:	lea    rax,[r9+0x1e]
  42098a:	and    rax,0xfffffffffffffff0
  42098e:	call   0x425730
  420993:	mov    rdx,QWORD PTR [rbp-0x20]
  420997:	sub    rsp,rax
  42099a:	mov    rcx,r12
  42099d:	lea    rsi,[rsp+0x40]
  4209a2:	mov    QWORD PTR [rsp+0x20],r14
  4209a7:	mov    r8,rsi
  4209aa:	call   r13
  4209ad:	lea    rax,[rip+0x2e5cc]        # 0x44ef80
  4209b4:	mov    QWORD PTR [rsp+0x38],0x0
  4209bd:	mov    QWORD PTR [rsp+0x30],0x0
  4209c6:	mov    DWORD PTR [rsp+0x28],ebx
  4209ca:	mov    r9d,ebx
  4209cd:	mov    r8,rsi
  4209d0:	mov    QWORD PTR [rsp+0x20],rax
  4209d5:	xor    edx,edx
  4209d7:	xor    ecx,ecx
  4209d9:	call   QWORD PTR [rip+0x30d31]        # 0x451710
  4209df:	lea    rax,[rip+0x2e59a]        # 0x44ef80
  4209e6:	jmp    0x420902
  4209eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4209f0:	mov    rdx,QWORD PTR [rbp-0x20]
  4209f4:	jmp    0x420940
  4209f9:	nop    DWORD PTR [rax+0x0]
  420a00:	mov    QWORD PTR [rsp+0x20],r14
  420a05:	movsxd r9,ebx
  420a08:	lea    r8,[rip+0x2e571]        # 0x44ef80
  420a0f:	mov    rdx,QWORD PTR [rbp-0x20]
  420a13:	mov    rcx,r12
  420a16:	call   r13
  420a19:	lea    rax,[rip+0x2e560]        # 0x44ef80
  420a20:	jmp    0x420902
  420a25:	nop
  420a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a30:	push   r12
  420a32:	push   rbp
  420a33:	push   rdi
  420a34:	push   rsi
  420a35:	push   rbx
  420a36:	sub    rsp,0x390
  420a3d:	lea    rbp,[rsp+0x250]
  420a45:	mov    rdi,rdx
  420a48:	mov    rsi,rcx
  420a4b:	add    rdi,0x1000
  420a52:	mov    rdx,rbp
  420a55:	call   QWORD PTR [rip+0x30b4d]        # 0x4515a8
  420a5b:	cmp    rax,0xffffffffffffffff
  420a5f:	je     0x420b82
  420a65:	lea    rbx,[rsp+0x30]
  420a6a:	mov    rcx,rax
  420a6d:	call   QWORD PTR [rip+0x30b2d]        # 0x4515a0
  420a73:	mov    rdx,rsi
  420a76:	lea    rsi,[rsp+0x140]
  420a7e:	mov    rcx,rbx
  420a81:	call   0x42a620
  420a86:	mov    rdx,rsi
  420a89:	mov    ecx,0x105
  420a8e:	call   QWORD PTR [rip+0x30b2c]        # 0x4515c0
  420a94:	test   eax,eax
  420a96:	je     0x420add
  420a98:	mov    edx,0x5c
  420a9d:	mov    rcx,rbx
  420aa0:	call   0x42a5f8
  420aa5:	test   rax,rax
  420aa8:	mov    QWORD PTR [rsp+0x28],rax
  420aad:	je     0x420ab3
  420aaf:	mov    BYTE PTR [rax+0x1],0x0
  420ab3:	mov    rcx,rbx
  420ab6:	mov    r12,QWORD PTR [rip+0x30beb]        # 0x4516a8
  420abd:	call   r12
  420ac0:	lea    rcx,[rbp+0x2c]
  420ac4:	lea    r9,[rsp+0x28]
  420ac9:	mov    r8,rbx
  420acc:	mov    edx,0x104
  420ad1:	call   QWORD PTR [rip+0x30b09]        # 0x4515e0
  420ad7:	mov    rcx,rsi
  420ada:	call   r12
  420add:	lea    rdx,[rip+0x23d04]        # 0x4447e8
  420ae4:	mov    rcx,rbx
  420ae7:	call   QWORD PTR [rip+0x30cdb]        # 0x4517c8
  420aed:	test   eax,eax
  420aef:	je     0x420b20
  420af1:	mov    rdx,rbx
  420af4:	mov    rcx,rsi
  420af7:	call   0x42a620
  420afc:	mov    rdx,rdi
  420aff:	mov    rcx,rsi
  420b02:	call   0x41bf20
  420b07:	nop
  420b08:	add    rsp,0x390
  420b0f:	pop    rbx
  420b10:	pop    rsi
  420b11:	pop    rdi
  420b12:	pop    rbp
  420b13:	pop    r12
  420b15:	ret    
  420b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b20:	mov    edx,0x105
  420b25:	mov    rcx,rbx
  420b28:	call   QWORD PTR [rip+0x30ae2]        # 0x451610
  420b2e:	mov    rdx,rbx
  420b31:	mov    ecx,DWORD PTR [rdx]
  420b33:	add    rdx,0x4
  420b37:	lea    eax,[rcx-0x1010101]
  420b3d:	not    ecx
  420b3f:	and    eax,ecx
  420b41:	and    eax,0x80808080
  420b46:	je     0x420b31
  420b48:	mov    ecx,eax
  420b4a:	shr    ecx,0x10
  420b4d:	test   eax,0x8080
  420b52:	cmove  eax,ecx
  420b55:	lea    rcx,[rdx+0x2]
  420b59:	cmove  rdx,rcx
  420b5d:	add    al,al
  420b5f:	movabs rax,0x642e6c6c64746e5c
  420b69:	sbb    rdx,0x3
  420b6d:	mov    QWORD PTR [rdx],rax
  420b70:	mov    eax,0x6c6c
  420b75:	mov    BYTE PTR [rdx+0xa],0x0
  420b79:	mov    WORD PTR [rdx+0x8],ax
  420b7d:	jmp    0x420af1
  420b82:	lea    rbx,[rsp+0x30]
  420b87:	mov    rdx,rsi
  420b8a:	lea    rsi,[rsp+0x140]
  420b92:	mov    rcx,rbx
  420b95:	call   0x42a620
  420b9a:	jmp    0x420add
  420b9f:	nop
  420ba0:	sub    rsp,0x28
  420ba4:	mov    rcx,QWORD PTR [rip+0x2eb55]        # 0x44f700
  420bab:	test   rcx,rcx
  420bae:	je     0x420bb6
  420bb0:	call   QWORD PTR [rip+0x309ba]        # 0x451570
  420bb6:	mov    rcx,QWORD PTR [rip+0x25863]        # 0x446420
  420bbd:	lea    rdx,[rip+0xfffffffffffffcac]        # 0x420870
  420bc4:	call   0x403900
  420bc9:	nop
  420bca:	add    rsp,0x28
  420bce:	jmp    0x403d50
  420bd3:	nop    DWORD PTR [rax]
  420bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420be0:	push   rbx
  420be1:	sub    rsp,0x20
  420be5:	mov    ebx,ecx
  420be7:	mov    rcx,QWORD PTR [rip+0x25832]        # 0x446420
  420bee:	mov    DWORD PTR [rsp+0x38],edx
  420bf2:	lea    r8,[rsp+0x38]
  420bf7:	lea    rdx,[rip+0x19c2]        # 0x4225c0
  420bfe:	call   0x403b90
  420c03:	mov    r8d,ebx
  420c06:	mov    edx,DWORD PTR [rip+0x2ea3c]        # 0x44f648
  420c0c:	mov    ecx,DWORD PTR [rip+0x2ea32]        # 0x44f644
  420c12:	mov    DWORD PTR [rip+0x2e9c0],0x0        # 0x44f5dc
  420c1c:	call   QWORD PTR [rip+0x30956]        # 0x451578
  420c22:	test   eax,eax
  420c24:	setne  al
  420c27:	movzx  eax,al
  420c2a:	add    rsp,0x20
  420c2e:	pop    rbx
  420c2f:	ret    
  420c30:	push   rbx
  420c31:	sub    rsp,0x20
  420c35:	xor    edx,edx
  420c37:	mov    r8d,ecx
  420c3a:	mov    ecx,0x1f0fff
  420c3f:	call   QWORD PTR [rip+0x30a23]        # 0x451668
  420c45:	test   rax,rax
  420c48:	mov    rbx,rax
  420c4b:	je     0x420c70
  420c4d:	mov    edx,0xffffffff
  420c52:	mov    rcx,rax
  420c55:	call   QWORD PTR [rip+0x30aad]        # 0x451708
  420c5b:	mov    rax,QWORD PTR [rip+0x3090e]        # 0x451570
  420c62:	mov    rcx,rbx
  420c65:	add    rsp,0x20
  420c69:	pop    rbx
  420c6a:	rex.W jmp rax
  420c6d:	nop    DWORD PTR [rax]
  420c70:	add    rsp,0x20
  420c74:	pop    rbx
  420c75:	ret    
  420c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c80:	jmp    0x403e20
  420c85:	nop
  420c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c90:	push   rbp
  420c91:	push   r12
  420c93:	push   rdi
  420c94:	push   rsi
  420c95:	push   rbx
  420c96:	sub    rsp,0x170
  420c9d:	lea    rbp,[rsp+0x80]
  420ca5:	mov    eax,DWORD PTR [rip+0x2e2a5]        # 0x44ef50
  420cab:	test   eax,eax
  420cad:	je     0x420d02
  420caf:	mov    rax,QWORD PTR [rip+0x2e91a]        # 0x44f5d0
  420cb6:	test   rax,rax
  420cb9:	je     0x420cf4
  420cbb:	cmp    QWORD PTR [rip+0x2e905],0x0        # 0x44f5c8
  420cc3:	je     0x420cf4
  420cc5:	cmp    QWORD PTR [rip+0x2e8f3],0x0        # 0x44f5c0
  420ccd:	je     0x420cf4
  420ccf:	lea    rbx,[rbp-0x54]
  420cd3:	mov    DWORD PTR [rbp-0x54],0x0
  420cda:	lea    rdx,[rbp-0x50]
  420cde:	mov    r8d,0x8
  420ce4:	mov    rcx,QWORD PTR [rip+0x2ea15]        # 0x44f700
  420ceb:	mov    r9,rbx
  420cee:	call   rax
  420cf0:	test   eax,eax
  420cf2:	jne    0x420d72
  420cf4:	lea    rsp,[rbp+0xf0]
  420cfb:	pop    rbx
  420cfc:	pop    rsi
  420cfd:	pop    rdi
  420cfe:	pop    r12
  420d00:	pop    rbp
  420d01:	ret    
  420d02:	mov    DWORD PTR [rip+0x2e244],0x1        # 0x44ef50
  420d0c:	lea    rcx,[rip+0x23adf]        # 0x4447f2
  420d13:	call   QWORD PTR [rip+0x30937]        # 0x451650
  420d19:	test   rax,rax
  420d1c:	mov    QWORD PTR [rip+0x2e225],rax        # 0x44ef48
  420d23:	je     0x420cf4
  420d25:	mov    rbx,QWORD PTR [rip+0x308d4]        # 0x451600
  420d2c:	lea    rdx,[rip+0x23ac9]        # 0x4447fc
  420d33:	mov    rcx,rax
  420d36:	call   rbx
  420d38:	lea    rdx,[rip+0x23ad0]        # 0x44480f
  420d3f:	mov    rcx,QWORD PTR [rip+0x2e202]        # 0x44ef48
  420d46:	mov    QWORD PTR [rip+0x2e883],rax        # 0x44f5d0
  420d4d:	call   rbx
  420d4f:	lea    rdx,[rip+0x23ace]        # 0x444824
  420d56:	mov    QWORD PTR [rip+0x2e86b],rax        # 0x44f5c8
  420d5d:	mov    rcx,QWORD PTR [rip+0x2e1e4]        # 0x44ef48
  420d64:	call   rbx
  420d66:	mov    QWORD PTR [rip+0x2e853],rax        # 0x44f5c0
  420d6d:	jmp    0x420caf
  420d72:	mov    r8d,DWORD PTR [rbp-0x54]
  420d76:	test   r8d,r8d
  420d79:	je     0x420cf4
  420d7f:	mov    eax,r8d
  420d82:	add    rax,0x1e
  420d86:	shr    rax,0x4
  420d8a:	shl    rax,0x4
  420d8e:	call   0x425730
  420d93:	mov    rcx,QWORD PTR [rip+0x2e966]        # 0x44f700
  420d9a:	sub    rsp,rax
  420d9d:	mov    r9,rbx
  420da0:	lea    rsi,[rsp+0x20]
  420da5:	mov    rdx,rsi
  420da8:	call   QWORD PTR [rip+0x2e822]        # 0x44f5d0
  420dae:	test   eax,eax
  420db0:	je     0x420cf4
  420db6:	cmp    DWORD PTR [rbp-0x54],0xf
  420dba:	mov    ebx,0x1
  420dbf:	lea    rdi,[rbp-0x40]
  420dc3:	lea    r12,[rbp-0x20]
  420dc7:	ja     0x420de4
  420dc9:	jmp    0x420cf4
  420dce:	xchg   ax,ax
  420dd0:	mov    eax,DWORD PTR [rbp-0x54]
  420dd3:	add    rbx,0x1
  420dd7:	shr    rax,0x3
  420ddb:	cmp    rax,rbx
  420dde:	jbe    0x420cf4
  420de4:	mov    rdx,QWORD PTR [rsi+rbx*8]
  420de8:	mov    r9d,0x18
  420dee:	mov    r8,rdi
  420df1:	mov    rcx,QWORD PTR [rip+0x2e908]        # 0x44f700
  420df8:	call   QWORD PTR [rip+0x2e7ca]        # 0x44f5c8
  420dfe:	test   eax,eax
  420e00:	je     0x420dd0
  420e02:	mov    rdx,QWORD PTR [rsi+rbx*8]
  420e06:	mov    r9d,0x104
  420e0c:	mov    r8,r12
  420e0f:	mov    rcx,QWORD PTR [rip+0x2e8ea]        # 0x44f700
  420e16:	call   QWORD PTR [rip+0x2e7a4]        # 0x44f5c0
  420e1c:	test   eax,eax
  420e1e:	je     0x420dd0
  420e20:	mov    rdx,QWORD PTR [rbp-0x40]
  420e24:	mov    rcx,r12
  420e27:	call   0x420a30
  420e2c:	jmp    0x420dd0
  420e2e:	xchg   ax,ax
  420e30:	push   rdi
  420e31:	sub    rsp,0xc0
  420e38:	xor    eax,eax
  420e3a:	xor    r9d,r9d
  420e3d:	lea    rdi,[rsp+0x50]
  420e42:	mov    r10,rcx
  420e45:	mov    ecx,0xd
  420e4a:	rep stos QWORD PTR es:[rdi],rax
  420e4d:	lea    rax,[rsp+0x50]
  420e52:	mov    QWORD PTR [rsp+0x48],r8
  420e57:	mov    rcx,r10
  420e5a:	xor    r8d,r8d
  420e5d:	mov    DWORD PTR [rsp+0x50],0x68
  420e65:	mov    QWORD PTR [rsp+0x38],0x0
  420e6e:	mov    QWORD PTR [rsp+0x40],rax
  420e73:	mov    QWORD PTR [rsp+0x30],0x0
  420e7c:	mov    DWORD PTR [rsp+0x28],0x203
  420e84:	mov    DWORD PTR [rsp+0x20],0x1
  420e8c:	call   QWORD PTR [rip+0x306ee]        # 0x451580
  420e92:	add    rsp,0xc0
  420e99:	pop    rdi
  420e9a:	ret    
  420e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  420ea0:	push   rbx
  420ea1:	sub    rsp,0x40
  420ea5:	lea    rax,[rsp+0x38]
  420eaa:	movsxd r9,r8d
  420ead:	mov    QWORD PTR [rsp+0x38],0x0
  420eb6:	mov    r8,rdx
  420eb9:	mov    rbx,r9
  420ebc:	mov    rdx,rcx
  420ebf:	mov    QWORD PTR [rsp+0x20],rax
  420ec4:	mov    rcx,QWORD PTR [rip+0x2e835]        # 0x44f700
  420ecb:	call   QWORD PTR [rip+0x307a7]        # 0x451678
  420ed1:	test   eax,eax
  420ed3:	mov    edx,DWORD PTR [rsp+0x38]
  420ed7:	je     0x420ef0
  420ed9:	xor    eax,eax
  420edb:	cmp    ebx,edx
  420edd:	setne  al
  420ee0:	add    rsp,0x40
  420ee4:	pop    rbx
  420ee5:	ret    
  420ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ef0:	call   QWORD PTR [rip+0x306f2]        # 0x4515e8
  420ef6:	cmp    eax,0x12b
  420efb:	jne    0x420f1a
  420efd:	mov    rax,QWORD PTR [rsp+0x38]
  420f02:	mov    edx,0xffffffff
  420f07:	test   rax,rax
  420f0a:	cmovne edx,eax
  420f0d:	xor    eax,eax
  420f0f:	cmp    ebx,edx
  420f11:	setne  al
  420f14:	add    rsp,0x40
  420f18:	pop    rbx
  420f19:	ret    
  420f1a:	or     edx,0xffffffff
  420f1d:	jmp    0x420ed9
  420f1f:	nop
  420f20:	push   rbp
  420f21:	push   rdi
  420f22:	push   rsi
  420f23:	push   rbx
  420f24:	sub    rsp,0x48
  420f28:	lea    rax,[rsp+0x38]
  420f2d:	movsxd rsi,r8d
  420f30:	mov    rbx,rcx
  420f33:	mov    r8,rdx
  420f36:	mov    QWORD PTR [rsp+0x38],0x0
  420f3f:	mov    rdx,rcx
  420f42:	mov    QWORD PTR [rsp+0x20],rax
  420f47:	mov    r9,rsi
  420f4a:	mov    rcx,QWORD PTR [rip+0x2e7af]        # 0x44f700
  420f51:	call   QWORD PTR [rip+0x307c1]        # 0x451718
  420f57:	test   eax,eax
  420f59:	mov    rdi,rsi
  420f5c:	je     0x420f90
  420f5e:	mov    r8,rsi
  420f61:	mov    rdx,rbx
  420f64:	mov    rcx,QWORD PTR [rip+0x2e795]        # 0x44f700
  420f6b:	call   QWORD PTR [rip+0x3063f]        # 0x4515b0
  420f71:	mov    eax,DWORD PTR [rsp+0x38]
  420f75:	cmp    edi,eax
  420f77:	setne  al
  420f7a:	movzx  eax,al
  420f7d:	add    rsp,0x48
  420f81:	pop    rbx
  420f82:	pop    rsi
  420f83:	pop    rdi
  420f84:	pop    rbp
  420f85:	ret    
  420f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f90:	call   QWORD PTR [rip+0x30652]        # 0x4515e8
  420f96:	mov    ebp,eax
  420f98:	mov    r8,rsi
  420f9b:	mov    rdx,rbx
  420f9e:	mov    rcx,QWORD PTR [rip+0x2e75b]        # 0x44f700
  420fa5:	call   QWORD PTR [rip+0x30605]        # 0x4515b0
  420fab:	cmp    ebp,0x12b
  420fb1:	jne    0x420fc5
  420fb3:	mov    rax,QWORD PTR [rsp+0x38]
  420fb8:	mov    edx,0xffffffff
  420fbd:	test   rax,rax
  420fc0:	cmove  eax,edx
  420fc3:	jmp    0x420f75
  420fc5:	or     eax,0xffffffff
  420fc8:	jmp    0x420f75
  420fca:	nop    WORD PTR [rax+rax*1+0x0]
  420fd0:	push   rbp
  420fd1:	push   rdi
  420fd2:	push   rsi
  420fd3:	push   rbx
  420fd4:	sub    rsp,0x838
  420fdb:	xor    eax,eax
  420fdd:	mov    ecx,0x80
  420fe2:	movzx  r8d,WORD PTR [rip+0x2e670]        # 0x44f65a
  420fea:	lea    rbp,[rsp+0x420]
  420ff2:	mov    rdi,rbp
  420ff5:	rep stos QWORD PTR es:[rdi],rax
  420ff8:	test   r8d,r8d
  420ffb:	mov    BYTE PTR [rdi],0x0
  420ffe:	je     0x421042
  421000:	cmp    r8d,0x400
  421007:	mov    ebx,0x400
  42100c:	mov    r9,QWORD PTR [rip+0x2e63d]        # 0x44f650
  421013:	cmovbe ebx,r8d
  421017:	cmp    WORD PTR [rip+0x2e639],0x0        # 0x44f658
  42101f:	je     0x421050
  421021:	lea    rdi,[rsp+0x20]
  421026:	mov    cl,0x80
  421028:	mov    r8d,ebx
  42102b:	rep stos QWORD PTR es:[rdi],rax
  42102e:	lea    rdi,[rsp+0x20]
  421033:	mov    rcx,r9
  421036:	mov    rdx,rdi
  421039:	call   0x40def0
  42103e:	test   eax,eax
  421040:	je     0x4210b0
  421042:	add    rsp,0x838
  421049:	pop    rbx
  42104a:	pop    rsi
  42104b:	pop    rdi
  42104c:	pop    rbp
  42104d:	ret    
  42104e:	xchg   ax,ax
  421050:	mov    r8d,ebx
  421053:	mov    rdx,rbp
  421056:	mov    rcx,r9
  421059:	call   0x40def0
  42105e:	test   eax,eax
  421060:	jne    0x421042
  421062:	lea    rdi,[rip+0x237d0]        # 0x444839
  421069:	mov    ecx,0x3
  42106e:	mov    rsi,rbp
  421071:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421073:	je     0x421042
  421075:	mov    rax,QWORD PTR [rip+0x25594]        # 0x446610
  42107c:	mov    edx,DWORD PTR [rax]
  42107e:	test   edx,edx
  421080:	jne    0x4210c4
  421082:	mov    rax,QWORD PTR [rip+0x253e7]        # 0x446470
  421089:	mov    eax,DWORD PTR [rax]
  42108b:	test   eax,eax
  42108d:	je     0x421042
  42108f:	lea    rcx,[rip+0x237a7]        # 0x44483d
  421096:	mov    rdx,rbp
  421099:	call   0x42aa50
  42109e:	call   QWORD PTR [rip+0x306ac]        # 0x451750
  4210a4:	lea    rcx,[rax+0x60]
  4210a8:	call   0x42a6f0
  4210ad:	jmp    0x421042
  4210af:	nop
  4210b0:	lea    r8d,[rbx+0x1]
  4210b4:	mov    rdx,rdi
  4210b7:	mov    rcx,rbp
  4210ba:	shr    r8,1
  4210bd:	call   0x42a5c0
  4210c2:	jmp    0x421062
  4210c4:	mov    rcx,rbp
  4210c7:	call   0x406c40
  4210cc:	jmp    0x421042
  4210d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4210d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210e0:	push   rsi
  4210e1:	push   rbx
  4210e2:	sub    rsp,0x28
  4210e6:	mov    rax,QWORD PTR [rip+0x2e613]        # 0x44f700
  4210ed:	test   rax,rax
  4210f0:	je     0x421169
  4210f2:	mov    esi,ecx
  4210f4:	xor    edx,edx
  4210f6:	mov    rcx,rax
  4210f9:	call   QWORD PTR [rip+0x305d9]        # 0x4516d8
  4210ff:	mov    rbx,QWORD PTR [rip+0x305fa]        # 0x451700
  421106:	jmp    0x421132
  421108:	nop    DWORD PTR [rax+rax*1+0x0]
  421110:	mov    edx,0xffffffff
  421115:	lea    rcx,[rip+0x2e524]        # 0x44f640
  42111c:	call   rbx
  42111e:	test   eax,eax
  421120:	je     0x421145
  421122:	mov    eax,DWORD PTR [rip+0x2e518]        # 0x44f640
  421128:	cmp    eax,0x5
  42112b:	je     0x421145
  42112d:	cmp    eax,0x8
  421130:	je     0x421162
  421132:	mov    edx,0xffffffff
  421137:	mov    ecx,0x10002
  42113c:	call   0x420be0
  421141:	test   eax,eax
  421143:	jne    0x421110
  421145:	call   0x420ba0
  42114a:	mov    ecx,esi
  42114c:	call   0x403f00
  421151:	mov    rcx,rax
  421154:	call   0x403e20
  421159:	xor    eax,eax
  42115b:	add    rsp,0x28
  42115f:	pop    rbx
  421160:	pop    rsi
  421161:	ret    
  421162:	call   0x420fd0
  421167:	jmp    0x421132
  421169:	mov    eax,0xffffffff
  42116e:	jmp    0x42115b
  421170:	push   rsi
  421171:	push   rbx
  421172:	sub    rsp,0x58
  421176:	mov    ebx,ecx
  421178:	call   QWORD PTR [rip+0x3046a]        # 0x4515e8
  42117e:	mov    esi,eax
  421180:	lea    rax,[rsp+0x48]
  421185:	xor    r9d,r9d
  421188:	xor    edx,edx
  42118a:	mov    QWORD PTR [rsp+0x30],0x0
  421193:	mov    DWORD PTR [rsp+0x28],0x0
  42119b:	mov    QWORD PTR [rsp+0x20],rax
  4211a0:	mov    r8d,ebx
  4211a3:	mov    ecx,0x1100
  4211a8:	call   QWORD PTR [rip+0x3040a]        # 0x4515b8
  4211ae:	test   eax,eax
  4211b0:	mov    r9d,eax
  4211b3:	je     0x421220
  4211b5:	cmp    eax,0x1
  4211b8:	mov    rbx,QWORD PTR [rsp+0x48]
  4211bd:	mov    r8d,0x2
  4211c3:	jbe    0x4211ed
  4211c5:	lea    edx,[rax-0x2]
  4211c8:	mov    rax,rdx
  4211cb:	add    rdx,rbx
  4211ce:	cmp    BYTE PTR [rdx],0xd
  4211d1:	je     0x421240
  4211d3:	cmp    r9d,0x3ff
  4211da:	lea    r8d,[r9+0x1]
  4211de:	jbe    0x4211ed
  4211e0:	mov    BYTE PTR [rbx+0x3ff],0x0
  4211e7:	mov    r8d,0x400
  4211ed:	lea    rcx,[rip+0x2dfcc]        # 0x44f1c0
  4211f4:	mov    rdx,rbx
  4211f7:	call   0x42a600
  4211fc:	mov    rcx,rbx
  4211ff:	call   QWORD PTR [rip+0x30453]        # 0x451658
  421205:	mov    ecx,esi
  421207:	call   QWORD PTR [rip+0x304a3]        # 0x4516b0
  42120d:	lea    rax,[rip+0x2dfac]        # 0x44f1c0
  421214:	add    rsp,0x58
  421218:	pop    rbx
  421219:	pop    rsi
  42121a:	ret    
  42121b:	nop    DWORD PTR [rax+rax*1+0x0]
  421220:	lea    rdx,[rip+0x23619]        # 0x444840
  421227:	lea    rcx,[rip+0x2df92]        # 0x44f1c0
  42122e:	mov    r8d,ebx
  421231:	call   0x42aab0
  421236:	jmp    0x421205
  421238:	nop    DWORD PTR [rax+rax*1+0x0]
  421240:	lea    ecx,[r9-0x1]
  421244:	cmp    BYTE PTR [rbx+rcx*1],0xa
  421248:	jne    0x4211d3
  42124a:	mov    BYTE PTR [rdx],0x0
  42124d:	mov    r9d,eax
  421250:	mov    rbx,QWORD PTR [rsp+0x48]
  421255:	jmp    0x4211d3
  42125a:	nop    WORD PTR [rax+rax*1+0x0]
  421260:	push   rdi
  421261:	push   rbx
  421262:	sub    rsp,0x28
  421266:	mov    eax,DWORD PTR [rcx+0x18]
  421269:	mov    rbx,rcx
  42126c:	test   eax,eax
  42126e:	je     0x4212c0
  421270:	lea    rdi,[rbx+0x28]
  421274:	mov    eax,ebx
  421276:	mov    QWORD PTR [rbx+0x20],0x0
  42127e:	mov    QWORD PTR [rbx+0x4e8],0x0
  421289:	and    rdi,0xfffffffffffffff8
  42128d:	sub    eax,edi
  42128f:	lea    edx,[rax+0x4f0]
  421295:	xor    eax,eax
  421297:	shr    edx,0x3
  42129a:	mov    ecx,edx
  42129c:	rep stos QWORD PTR es:[rdi],rax
  42129f:	mov    rax,QWORD PTR [rip+0x253aa]        # 0x446650
  4212a6:	mov    rcx,rbx
  4212a9:	mov    rax,QWORD PTR [rax+0x18]
  4212ad:	add    rsp,0x28
  4212b1:	pop    rbx
  4212b2:	pop    rdi
  4212b3:	rex.W jmp rax
  4212b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212c0:	mov    rcx,QWORD PTR [rcx+0x8]
  4212c4:	call   QWORD PTR [rip+0x30406]        # 0x4516d0
  4212ca:	cmp    eax,0xffffffff
  4212cd:	je     0x4212e0
  4212cf:	mov    DWORD PTR [rbx+0x18],0x1
  4212d6:	jmp    0x421270
  4212d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212e0:	call   QWORD PTR [rip+0x30302]        # 0x4515e8
  4212e6:	mov    ecx,eax
  4212e8:	mov    edi,eax
  4212ea:	call   0x421170
  4212ef:	lea    rcx,[rip+0x2356a]        # 0x444860
  4212f6:	mov    r8,rax
  4212f9:	mov    edx,edi
  4212fb:	call   0x42aa50
  421300:	call   QWORD PTR [rip+0x3044a]        # 0x451750
  421306:	lea    rcx,[rax+0x60]
  42130a:	call   0x42a6f0
  42130f:	jmp    0x421270
  421314:	xchg   ax,ax
  421316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421320:	mov    eax,DWORD PTR [rcx+0x50]
  421323:	test   eax,eax
  421325:	jne    0x421330
  421327:	jmp    0x421260
  42132c:	nop    DWORD PTR [rax+0x0]
  421330:	repz ret 
  421332:	nop    DWORD PTR [rax+0x0]
  421336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421340:	push   rbx
  421341:	sub    rsp,0x40
  421345:	mov    rax,QWORD PTR [rcx]
  421348:	mov    ebx,edx
  42134a:	lea    rdx,[rsp+0x30]
  42134f:	mov    QWORD PTR [rsp+0x30],rax
  421354:	mov    eax,DWORD PTR [rcx+0x8]
  421357:	mov    rcx,QWORD PTR [rip+0x250c2]        # 0x446420
  42135e:	mov    DWORD PTR [rsp+0x38],eax
  421362:	call   0x403be0
  421367:	test   rax,rax
  42136a:	je     0x4213a0
  42136c:	mov    rcx,rax
  42136f:	call   0x403ce0
  421374:	test   ebx,ebx
  421376:	je     0x42137f
  421378:	mov    edx,DWORD PTR [rax+0x50]
  42137b:	test   edx,edx
  42137d:	je     0x421385
  42137f:	add    rsp,0x40
  421383:	pop    rbx
  421384:	ret    
  421385:	mov    rcx,rax
  421388:	mov    QWORD PTR [rsp+0x28],rax
  42138d:	call   0x421260
  421392:	mov    rax,QWORD PTR [rsp+0x28]
  421397:	add    rsp,0x40
  42139b:	pop    rbx
  42139c:	ret    
  42139d:	nop    DWORD PTR [rax]
  4213a0:	xor    eax,eax
  4213a2:	jmp    0x42137f
  4213a4:	xchg   ax,ax
  4213a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4213b0:	push   rbx
  4213b1:	sub    rsp,0x30
  4213b5:	mov    rax,QWORD PTR [rcx]
  4213b8:	mov    rbx,rdx
  4213bb:	xor    edx,edx
  4213bd:	mov    QWORD PTR [rsp+0x20],rax
  4213c2:	mov    eax,DWORD PTR [rcx+0x8]
  4213c5:	lea    rcx,[rsp+0x20]
  4213ca:	mov    DWORD PTR [rsp+0x28],eax
  4213ce:	call   0x421340
  4213d3:	test   rax,rax
  4213d6:	je     0x4213f0
  4213d8:	test   rbx,rbx
  4213db:	je     0x421400
  4213dd:	mov    rax,QWORD PTR [rax+0x10]
  4213e1:	mov    QWORD PTR [rbx],rax
  4213e4:	mov    eax,0x1
  4213e9:	add    rsp,0x30
  4213ed:	pop    rbx
  4213ee:	ret    
  4213ef:	nop
  4213f0:	xor    eax,eax
  4213f2:	add    rsp,0x30
  4213f6:	pop    rbx
  4213f7:	ret    
  4213f8:	nop    DWORD PTR [rax+rax*1+0x0]
  421400:	mov    eax,0x1
  421405:	jmp    0x4213e9
  421407:	nop    WORD PTR [rax+rax*1+0x0]
  421410:	push   r13
  421412:	push   r12
  421414:	push   rbp
  421415:	push   rdi
  421416:	push   rsi
  421417:	push   rbx
  421418:	sub    rsp,0x48
  42141c:	mov    r12,QWORD PTR [rip+0x2502d]        # 0x446450
  421423:	mov    rdi,QWORD PTR [rip+0x25226]        # 0x446650
  42142a:	lea    rsi,[rsp+0x20]
  42142f:	mov    rbp,rcx
  421432:	mov    ebx,edx
  421434:	mov    rax,QWORD PTR [r12]
  421438:	mov    rcx,rsi
  42143b:	mov    rdx,QWORD PTR [rax]
  42143e:	mov    eax,DWORD PTR [rax+0x8]
  421441:	mov    QWORD PTR [rsp+0x30],rdx
  421446:	mov    QWORD PTR [rsp+0x20],rdx
  42144b:	mov    edx,0x1
  421450:	mov    DWORD PTR [rsp+0x38],eax
  421454:	mov    DWORD PTR [rsp+0x28],eax
  421458:	call   0x421340
  42145d:	lea    ecx,[rbx+0x1]
  421460:	mov    r13,rax
  421463:	cmp    ecx,0x1
  421466:	jbe    0x421473
  421468:	mov    ecx,DWORD PTR [rdi+0x8]
  42146b:	cmp    ebx,ecx
  42146d:	jle    0x421480
  42146f:	mov    ebx,ecx
  421471:	jmp    0x421434
  421473:	mov    ebx,DWORD PTR [rdi+0x8]
  421476:	jmp    0x421434
  421478:	nop    DWORD PTR [rax+rax*1+0x0]
  421480:	xor    esi,esi
  421482:	test   ebx,ebx
  421484:	jle    0x4214a3
  421486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421490:	mov    r8d,esi
  421493:	add    esi,0x1
  421496:	mov    rdx,r13
  421499:	mov    rcx,rbp
  42149c:	call   QWORD PTR [rdi+0x38]
  42149f:	cmp    esi,ebx
  4214a1:	jne    0x421490
  4214a3:	add    rsp,0x48
  4214a7:	pop    rbx
  4214a8:	pop    rsi
  4214a9:	pop    rdi
  4214aa:	pop    rbp
  4214ab:	pop    r12
  4214ad:	pop    r13
  4214af:	ret    
  4214b0:	push   r13
  4214b2:	push   r12
  4214b4:	push   rbp
  4214b5:	push   rdi
  4214b6:	push   rsi
  4214b7:	push   rbx
  4214b8:	sub    rsp,0x48
  4214bc:	mov    r12,QWORD PTR [rip+0x24f8d]        # 0x446450
  4214c3:	mov    rdi,QWORD PTR [rip+0x25186]        # 0x446650
  4214ca:	lea    rsi,[rsp+0x20]
  4214cf:	mov    rbp,rcx
  4214d2:	mov    ebx,edx
  4214d4:	mov    rax,QWORD PTR [r12]
  4214d8:	mov    rcx,rsi
  4214db:	mov    rdx,QWORD PTR [rax]
  4214de:	mov    eax,DWORD PTR [rax+0x8]
  4214e1:	mov    QWORD PTR [rsp+0x30],rdx
  4214e6:	mov    QWORD PTR [rsp+0x20],rdx
  4214eb:	mov    edx,0x1
  4214f0:	mov    DWORD PTR [rsp+0x38],eax
  4214f4:	mov    DWORD PTR [rsp+0x28],eax
  4214f8:	call   0x421340
  4214fd:	cmp    ebx,0xffffffff
  421500:	mov    r13,rax
  421503:	je     0x421510
  421505:	mov    ecx,DWORD PTR [rdi+0x8]
  421508:	cmp    ebx,ecx
  42150a:	jle    0x421515
  42150c:	mov    ebx,ecx
  42150e:	jmp    0x4214d4
  421510:	mov    ebx,DWORD PTR [rdi+0x8]
  421513:	jmp    0x4214d4
  421515:	xor    esi,esi
  421517:	test   ebx,ebx
  421519:	jle    0x421533
  42151b:	nop    DWORD PTR [rax+rax*1+0x0]
  421520:	mov    r8d,esi
  421523:	add    esi,0x1
  421526:	mov    rdx,r13
  421529:	mov    rcx,rbp
  42152c:	call   QWORD PTR [rdi+0x30]
  42152f:	cmp    esi,ebx
  421531:	jne    0x421520
  421533:	add    rsp,0x48
  421537:	pop    rbx
  421538:	pop    rsi
  421539:	pop    rdi
  42153a:	pop    rbp
  42153b:	pop    r12
  42153d:	pop    r13
  42153f:	ret    
  421540:	jmp    0x4214b0
  421545:	nop
  421546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421550:	push   r12
  421552:	push   rbp
  421553:	push   rdi
  421554:	push   rsi
  421555:	push   rbx
  421556:	sub    rsp,0x50
  42155a:	mov    eax,ecx
  42155c:	lea    rcx,[rsp+0x40]
  421561:	mov    edi,edx
  421563:	mov    r12,r8
  421566:	mov    rbp,r9
  421569:	mov    r8d,edx
  42156c:	xor    r9d,r9d
  42156f:	mov    edx,eax
  421571:	lea    rsi,[rsp+0x30]
  421576:	call   0x41acf0
  42157b:	mov    rax,QWORD PTR [rsp+0x40]
  421580:	xor    edx,edx
  421582:	mov    rcx,rsi
  421585:	mov    QWORD PTR [rsp+0x30],rax
  42158a:	mov    eax,DWORD PTR [rsp+0x48]
  42158e:	mov    DWORD PTR [rsp+0x38],eax
  421592:	call   0x421340
  421597:	test   rax,rax
  42159a:	je     0x4215b0
  42159c:	add    rsp,0x50
  4215a0:	pop    rbx
  4215a1:	pop    rsi
  4215a2:	pop    rdi
  4215a3:	pop    rbp
  4215a4:	pop    r12
  4215a6:	ret    
  4215a7:	nop    WORD PTR [rax+rax*1+0x0]
  4215b0:	mov    edx,0x500
  4215b5:	mov    ecx,0x1
  4215ba:	call   0x41a760
  4215bf:	mov    DWORD PTR [rax],edi
  4215c1:	mov    QWORD PTR [rax+0x8],r12
  4215c5:	mov    rbx,rax
  4215c8:	mov    QWORD PTR [rax+0x10],rbp
  4215cc:	mov    rax,QWORD PTR [rsp+0x40]
  4215d1:	mov    rdx,rbx
  4215d4:	mov    rcx,rsi
  4215d7:	mov    QWORD PTR [rsp+0x30],rax
  4215dc:	mov    eax,DWORD PTR [rsp+0x48]
  4215e0:	mov    DWORD PTR [rsp+0x38],eax
  4215e4:	call   0x4039e0
  4215e9:	mov    rax,QWORD PTR [rip+0x25060]        # 0x446650
  4215f0:	mov    rdx,QWORD PTR [rax+0x28]
  4215f4:	mov    rax,rbx
  4215f7:	test   rdx,rdx
  4215fa:	je     0x42159c
  4215fc:	mov    rcx,rbx
  4215ff:	mov    QWORD PTR [rsp+0x28],rbx
  421604:	call   rdx
  421606:	mov    rax,QWORD PTR [rsp+0x28]
  42160b:	jmp    0x42159c
  42160d:	nop    DWORD PTR [rax]
  421610:	push   r15
  421612:	push   r14
  421614:	push   r13
  421616:	push   r12
  421618:	push   rbp
  421619:	push   rdi
  42161a:	push   rsi
  42161b:	push   rbx
  42161c:	sub    rsp,0x78
  421620:	cmp    DWORD PTR [rip+0x2dfc9],0xb        # 0x44f5f0
  421627:	mov    r14,rcx
  42162a:	mov    rbx,r8
  42162d:	jne    0x421ca0
  421633:	mov    r13,QWORD PTR [rip+0x30116]        # 0x451750
  42163a:	mov    rbp,QWORD PTR [rip+0x24e2f]        # 0x446470
  421641:	mov    r12,QWORD PTR [rip+0x300b8]        # 0x451700
  421648:	mov    rsi,QWORD PTR [rip+0x24e01]        # 0x446450
  42164f:	mov    QWORD PTR [rsp+0x20],r13
  421654:	mov    QWORD PTR [rsp+0x28],r13
  421659:	mov    DWORD PTR [rbx],0xa
  42165f:	mov    DWORD PTR [rip+0x2e087],0x0        # 0x44f6f0
  421669:	call   0x4058d0
  42166e:	mov    edx,DWORD PTR [rip+0x2df6c]        # 0x44f5e0
  421674:	test   edx,edx
  421676:	je     0x421ad0
  42167c:	mov    eax,DWORD PTR [rbp+0x0]
  42167f:	mov    DWORD PTR [rip+0x2df57],0x0        # 0x44f5e0
  421689:	test   eax,eax
  42168b:	je     0x4216a5
  42168d:	lea    rcx,[rip+0x23209]        # 0x44489d
  421694:	call   0x42aa50
  421699:	call   r13
  42169c:	lea    rcx,[rax+0x60]
  4216a0:	call   0x42a6f0
  4216a5:	lea    rdx,[rip+0x2df94]        # 0x44f640
  4216ac:	xor    eax,eax
  4216ae:	mov    ecx,0x16
  4216b3:	mov    DWORD PTR [rip+0x2df1f],0x1        # 0x44f5dc
  4216bd:	mov    rdi,rdx
  4216c0:	lea    rdx,[rip+0xe79]        # 0x422540
  4216c7:	rep stos QWORD PTR es:[rdi],rax
  4216ca:	mov    eax,DWORD PTR [rip+0x2e024]        # 0x44f6f4
  4216d0:	mov    rcx,QWORD PTR [rip+0x24d49]        # 0x446420
  4216d7:	mov    DWORD PTR [rip+0x2df5f],0x1        # 0x44f640
  4216e1:	mov    DWORD PTR [rip+0x2df65],0x80000003        # 0x44f650
  4216eb:	mov    DWORD PTR [rip+0x2df57],eax        # 0x44f648
  4216f1:	call   0x403900
  4216f6:	mov    r9d,DWORD PTR [rip+0x2df43]        # 0x44f640
  4216fd:	cmp    r9d,0x8
  421701:	ja     0x421a91
  421707:	lea    rax,[rip+0x236ca]        # 0x444dd8
  42170e:	mov    edx,r9d
  421711:	movsxd rdx,DWORD PTR [rax+rdx*4]
  421715:	add    rax,rdx
  421718:	jmp    rax
  42171a:	nop    WORD PTR [rax+rax*1+0x0]
  421720:	mov    r8d,DWORD PTR [rbp+0x0]
  421724:	test   r8d,r8d
  421727:	jne    0x421cd0
  42172d:	call   0x420fd0
  421732:	mov    r8d,DWORD PTR [rip+0x2df0f]        # 0x44f648
  421739:	mov    edx,DWORD PTR [rip+0x2df05]        # 0x44f644
  42173f:	lea    rcx,[rsp+0x40]
  421744:	xor    r9d,r9d
  421747:	mov    rdi,rsi
  42174a:	call   0x41acf0
  42174f:	mov    rdx,QWORD PTR [rsp+0x40]
  421754:	mov    eax,DWORD PTR [rsp+0x48]
  421758:	mov    rcx,QWORD PTR [rip+0x24cc1]        # 0x446420
  42175f:	mov    QWORD PTR [rsp+0x60],rdx
  421764:	mov    QWORD PTR [rsp+0x30],rdx
  421769:	lea    rdx,[rsp+0x30]
  42176e:	mov    DWORD PTR [rsp+0x68],eax
  421772:	mov    DWORD PTR [rsp+0x38],eax
  421776:	call   0x403be0
  42177b:	mov    edx,DWORD PTR [rbx]
  42177d:	mov    QWORD PTR [rsi],rax
  421780:	cmp    edx,0xa
  421783:	ja     0x4217a0
  421785:	lea    rax,[rip+0x23670]        # 0x444dfc
  42178c:	mov    ecx,edx
  42178e:	movsxd rcx,DWORD PTR [rax+rcx*4]
  421792:	add    rax,rcx
  421795:	jmp    rax
  421797:	nop    WORD PTR [rax+rax*1+0x0]
  4217a0:	lea    rcx,[rip+0x23609]        # 0x444db0
  4217a7:	call   0x42aa50
  4217ac:	call   QWORD PTR [rip+0x2ff9e]        # 0x451750
  4217b2:	lea    rcx,[rax+0x60]
  4217b6:	call   0x42a6f0
  4217bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4217c0:	mov    edx,0xffffffff
  4217c5:	mov    ecx,0x10002
  4217ca:	call   0x420be0
  4217cf:	jmp    0x421659
  4217d4:	mov    edi,DWORD PTR [rbp+0x0]
  4217d7:	test   edi,edi
  4217d9:	jne    0x421d30
  4217df:	mov    r11d,DWORD PTR [rip+0x2ddf2]        # 0x44f5d8
  4217e6:	test   r11d,r11d
  4217e9:	je     0x421732
  4217ef:	mov    rax,QWORD PTR [rip+0x2de5a]        # 0x44f650
  4217f6:	xor    ecx,ecx
  4217f8:	lea    rdx,[rax+0x1000]
  4217ff:	call   0x41bf90
  421804:	jmp    0x421867
  421806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421810:	mov    eax,DWORD PTR [rbp+0x0]
  421813:	test   eax,eax
  421815:	jne    0x421d00
  42181b:	mov    rcx,QWORD PTR [rip+0x2de2e]        # 0x44f650
  421822:	call   QWORD PTR [rip+0x2fd48]        # 0x451570
  421828:	mov    r15d,DWORD PTR [rip+0x2dda9]        # 0x44f5d8
  42182f:	test   r15d,r15d
  421832:	je     0x421732
  421838:	movzx  r8d,WORD PTR [rip+0x2de30]        # 0x44f670
  421840:	mov    rdx,QWORD PTR [rip+0x2de21]        # 0x44f668
  421847:	mov    rcx,QWORD PTR [rip+0x2deb2]        # 0x44f700
  42184e:	call   0x4208b0
  421853:	test   rax,rax
  421856:	je     0x421867
  421858:	mov    rdx,QWORD PTR [rip+0x2ddf9]        # 0x44f658
  42185f:	mov    rcx,rax
  421862:	call   0x420a30
  421867:	mov    DWORD PTR [rbx],0x3
  42186d:	mov    DWORD PTR [rbx+0x8],0x5
  421874:	jmp    0x421732
  421879:	nop    DWORD PTR [rax+0x0]
  421880:	mov    eax,DWORD PTR [rbp+0x0]
  421883:	test   eax,eax
  421885:	jne    0x421e40
  42188b:	mov    DWORD PTR [rbx],0x0
  421891:	mov    eax,DWORD PTR [rip+0x2ddb9]        # 0x44f650
  421897:	mov    edx,0xffffffff
  42189c:	mov    ecx,0x10002
  4218a1:	mov    DWORD PTR [rbx+0x8],eax
  4218a4:	call   0x420be0
  4218a9:	mov    rcx,QWORD PTR [rip+0x2de50]        # 0x44f700
  4218b0:	call   QWORD PTR [rip+0x2fcba]        # 0x451570
  4218b6:	mov    QWORD PTR [rip+0x2de3f],0x0        # 0x44f700
  4218c1:	jmp    0x421732
  4218c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4218d0:	mov    eax,DWORD PTR [rbp+0x0]
  4218d3:	test   eax,eax
  4218d5:	je     0x4218ff
  4218d7:	mov    r8d,DWORD PTR [rip+0x2dd6a]        # 0x44f648
  4218de:	mov    edx,DWORD PTR [rip+0x2dd60]        # 0x44f644
  4218e4:	lea    rcx,[rip+0x23015]        # 0x444900
  4218eb:	call   0x42aa50
  4218f0:	call   QWORD PTR [rip+0x2fe5a]        # 0x451750
  4218f6:	lea    rcx,[rax+0x60]
  4218fa:	call   0x42a6f0
  4218ff:	mov    rcx,QWORD PTR [rip+0x24b1a]        # 0x446420
  421906:	mov    r15d,DWORD PTR [rip+0x2dd3b]        # 0x44f648
  42190d:	mov    edi,DWORD PTR [rip+0x2dd31]        # 0x44f644
  421913:	call   0x403d20
  421918:	test   eax,eax
  42191a:	je     0x421d60
  421920:	mov    rax,QWORD PTR [rip+0x24af9]        # 0x446420
  421927:	mov    rdi,QWORD PTR [rip+0x24b22]        # 0x446450
  42192e:	mov    edx,DWORD PTR [rbx]
  421930:	mov    rax,QWORD PTR [rax]
  421933:	mov    QWORD PTR [rdi],rax
  421936:	jmp    0x421780
  42193b:	nop    DWORD PTR [rax+rax*1+0x0]
  421940:	mov    eax,DWORD PTR [rbp+0x0]
  421943:	test   eax,eax
  421945:	jne    0x421de0
  42194b:	mov    rcx,QWORD PTR [rip+0x2dcfe]        # 0x44f650
  421952:	call   QWORD PTR [rip+0x2fc18]        # 0x451570
  421958:	mov    rax,QWORD PTR [rip+0x2dcf9]        # 0x44f658
  42195f:	mov    edx,DWORD PTR [rip+0x2dce3]        # 0x44f648
  421965:	mov    ecx,DWORD PTR [rip+0x2dcd9]        # 0x44f644
  42196b:	mov    DWORD PTR [rbx],0x6
  421971:	mov    QWORD PTR [rip+0x2dd88],rax        # 0x44f700
  421978:	lea    rax,[rip+0x2300f]        # 0x44498e
  42197f:	mov    DWORD PTR [rip+0x2dd6f],edx        # 0x44f6f4
  421985:	mov    QWORD PTR [rbx+0x8],rax
  421989:	mov    r9,QWORD PTR [rip+0x2dce8]        # 0x44f678
  421990:	mov    r8,QWORD PTR [rip+0x2dcc9]        # 0x44f660
  421997:	call   0x421550
  42199c:	mov    r8d,DWORD PTR [rip+0x2dca5]        # 0x44f648
  4219a3:	mov    edx,DWORD PTR [rip+0x2dc9b]        # 0x44f644
  4219a9:	lea    rcx,[rsp+0x50]
  4219ae:	xor    r9d,r9d
  4219b1:	call   0x41acf0
  4219b6:	mov    rax,QWORD PTR [rsp+0x50]
  4219bb:	mov    QWORD PTR [rbx+0x8],rax
  4219bf:	mov    eax,DWORD PTR [rsp+0x58]
  4219c3:	mov    DWORD PTR [rbx+0x10],eax
  4219c6:	jmp    0x421732
  4219cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4219d0:	mov    eax,DWORD PTR [rbp+0x0]
  4219d3:	test   eax,eax
  4219d5:	jne    0x421db0
  4219db:	mov    r9,QWORD PTR [rip+0x2dc76]        # 0x44f658
  4219e2:	mov    r8,QWORD PTR [rip+0x2dc67]        # 0x44f650
  4219e9:	mov    edx,DWORD PTR [rip+0x2dc59]        # 0x44f648
  4219ef:	mov    ecx,DWORD PTR [rip+0x2dc4f]        # 0x44f644
  4219f5:	call   0x421550
  4219fa:	jmp    0x421732
  4219ff:	nop
  421a00:	mov    r10d,DWORD PTR [rbp+0x0]
  421a04:	test   r10d,r10d
  421a07:	jne    0x421e10
  421a0d:	mov    eax,DWORD PTR [rip+0x2dc3d]        # 0x44f650
  421a13:	mov    DWORD PTR [rbx],0x1
  421a19:	cmp    eax,0xc000008e
  421a1e:	je     0x421f9e
  421a24:	ja     0x421b33
  421a2a:	cmp    eax,0xc0000005
  421a2f:	je     0x421f59
  421a35:	jbe    0x421c60
  421a3b:	cmp    eax,0xc0000025
  421a40:	je     0x421f2f
  421a46:	jbe    0x421eb3
  421a4c:	cmp    eax,0xc000008c
  421a51:	je     0x421fb5
  421a57:	cmp    eax,0xc000008d
  421a5c:	jne    0x421fcc
  421a62:	mov    eax,DWORD PTR [rbp+0x0]
  421a65:	lea    rcx,[rip+0x23076]        # 0x444ae2
  421a6c:	test   eax,eax
  421a6e:	jne    0x421c40
  421a74:	mov    DWORD PTR [rbx+0x8],0x8
  421a7b:	test   eax,eax
  421a7d:	jne    0x421b85
  421a83:	mov    eax,DWORD PTR [rbx+0x8]
  421a86:	mov    DWORD PTR [rip+0x2dc64],eax        # 0x44f6f0
  421a8c:	jmp    0x421732
  421a91:	mov    ecx,DWORD PTR [rbp+0x0]
  421a94:	test   ecx,ecx
  421a96:	je     0x421732
  421a9c:	mov    r8d,DWORD PTR [rip+0x2dba5]        # 0x44f648
  421aa3:	mov    edx,DWORD PTR [rip+0x2db9b]        # 0x44f644
  421aa9:	lea    rcx,[rip+0x23278]        # 0x444d28
  421ab0:	call   0x42aa50
  421ab5:	mov    rax,QWORD PTR [rsp+0x20]
  421aba:	call   rax
  421abc:	lea    rcx,[rax+0x60]
  421ac0:	call   0x42a6f0
  421ac5:	jmp    0x421732
  421aca:	nop    WORD PTR [rax+rax*1+0x0]
  421ad0:	mov    DWORD PTR [rip+0x2dc2e],0x0        # 0x44f708
  421ada:	mov    edx,0xfa
  421adf:	lea    rcx,[rip+0x2db5a]        # 0x44f640
  421ae6:	call   r12
  421ae9:	test   eax,eax
  421aeb:	jne    0x4216f6
  421af1:	call   QWORD PTR [rip+0x2faf1]        # 0x4515e8
  421af7:	cmp    eax,0xe9
  421afc:	jne    0x421659
  421b02:	mov    DWORD PTR [rbx],0x0
  421b08:	mov    DWORD PTR [rbx+0x8],0x1
  421b0f:	nop
  421b10:	mov    edx,DWORD PTR [rbp+0x0]
  421b13:	test   edx,edx
  421b15:	jne    0x421e6d
  421b1b:	call   0x420ba0
  421b20:	mov    edx,DWORD PTR [rip+0x2db1e]        # 0x44f644
  421b26:	mov    rcx,r14
  421b29:	call   0x41ad00
  421b2e:	jmp    0x421be2
  421b33:	cmp    eax,0xc0000093
  421b38:	je     0x421f87
  421b3e:	jbe    0x421c00
  421b44:	cmp    eax,0xc0000095
  421b49:	je     0x42207d
  421b4f:	jb     0x421f18
  421b55:	cmp    eax,0xc0000096
  421b5a:	je     0x421ff3
  421b60:	cmp    eax,0xc00000fd
  421b65:	jne    0x421fcc
  421b6b:	mov    eax,DWORD PTR [rbp+0x0]
  421b6e:	test   eax,eax
  421b70:	jne    0x4220c2
  421b76:	test   eax,eax
  421b78:	mov    DWORD PTR [rbx+0x8],0xb
  421b7f:	je     0x421a83
  421b85:	lea    rcx,[rip+0x2314f]        # 0x444cdb
  421b8c:	call   0x42aa50
  421b91:	call   QWORD PTR [rip+0x2fbb9]        # 0x451750
  421b97:	lea    rcx,[rax+0x60]
  421b9b:	call   0x42a6f0
  421ba0:	jmp    0x421a83
  421ba5:	mov    eax,DWORD PTR [rbp+0x0]
  421ba8:	test   eax,eax
  421baa:	jne    0x421e90
  421bb0:	mov    rcx,QWORD PTR [rdi]
  421bb3:	mov    edx,0x1
  421bb8:	call   0x404290
  421bbd:	mov    edx,0xffffffff
  421bc2:	mov    rcx,rax
  421bc5:	call   0x4214b0
  421bca:	mov    r8d,DWORD PTR [rip+0x2da77]        # 0x44f648
  421bd1:	mov    edx,DWORD PTR [rip+0x2da6d]        # 0x44f644
  421bd7:	xor    r9d,r9d
  421bda:	mov    rcx,r14
  421bdd:	call   0x41acf0
  421be2:	mov    rax,r14
  421be5:	add    rsp,0x78
  421be9:	pop    rbx
  421bea:	pop    rsi
  421beb:	pop    rdi
  421bec:	pop    rbp
  421bed:	pop    r12
  421bef:	pop    r13
  421bf1:	pop    r14
  421bf3:	pop    r15
  421bf5:	ret    
  421bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c00:	cmp    eax,0xc0000090
  421c05:	je     0x422038
  421c0b:	jb     0x421f01
  421c11:	cmp    eax,0xc0000091
  421c16:	je     0x422094
  421c1c:	cmp    eax,0xc0000092
  421c21:	jne    0x421fcc
  421c27:	mov    eax,DWORD PTR [rbp+0x0]
  421c2a:	lea    rcx,[rip+0x22f44]        # 0x444b75
  421c31:	test   eax,eax
  421c33:	je     0x421a74
  421c39:	nop    DWORD PTR [rax+0x0]
  421c40:	call   0x42aa50
  421c45:	call   QWORD PTR [rip+0x2fb05]        # 0x451750
  421c4b:	lea    rcx,[rax+0x60]
  421c4f:	call   0x42a6f0
  421c54:	mov    eax,DWORD PTR [rbp+0x0]
  421c57:	jmp    0x421a74
  421c5c:	nop    DWORD PTR [rax+0x0]
  421c60:	cmp    eax,0x40010008
  421c65:	je     0x42204f
  421c6b:	jbe    0x421ed8
  421c71:	cmp    eax,0x80000003
  421c76:	je     0x42200a
  421c7c:	cmp    eax,0x80000004
  421c81:	jne    0x421fcc
  421c87:	mov    eax,DWORD PTR [rbp+0x0]
  421c8a:	test   eax,eax
  421c8c:	jne    0x4220b6
  421c92:	mov    DWORD PTR [rbx+0x8],0x5
  421c99:	jmp    0x421a7b
  421c9e:	xchg   ax,ax
  421ca0:	mov    rax,QWORD PTR [rip+0x2d949]        # 0x44f5f0
  421ca7:	mov    DWORD PTR [rip+0x2d93f],0xb        # 0x44f5f0
  421cb1:	mov    QWORD PTR [r8],rax
  421cb4:	mov    rax,QWORD PTR [rip+0x2d93d]        # 0x44f5f8
  421cbb:	mov    QWORD PTR [r8+0x8],rax
  421cbf:	mov    rax,QWORD PTR [rip+0x2d93a]        # 0x44f600
  421cc6:	mov    QWORD PTR [r8+0x10],rax
  421cca:	jmp    0x421bca
  421ccf:	nop
  421cd0:	mov    r8d,DWORD PTR [rip+0x2d971]        # 0x44f648
  421cd7:	mov    edx,DWORD PTR [rip+0x2d967]        # 0x44f644
  421cdd:	lea    rcx,[rip+0x22ffc]        # 0x444ce0
  421ce4:	call   0x42aa50
  421ce9:	mov    rax,QWORD PTR [rsp+0x28]
  421cee:	call   rax
  421cf0:	lea    rcx,[rax+0x60]
  421cf4:	call   0x42a6f0
  421cf9:	jmp    0x42172d
  421cfe:	xchg   ax,ax
  421d00:	mov    r8d,DWORD PTR [rip+0x2d941]        # 0x44f648
  421d07:	mov    edx,DWORD PTR [rip+0x2d937]        # 0x44f644
  421d0d:	lea    rcx,[rip+0x22cd4]        # 0x4449e8
  421d14:	call   0x42aa50
  421d19:	call   QWORD PTR [rip+0x2fa31]        # 0x451750
  421d1f:	lea    rcx,[rax+0x60]
  421d23:	call   0x42a6f0
  421d28:	jmp    0x42181b
  421d2d:	nop    DWORD PTR [rax]
  421d30:	mov    r8d,DWORD PTR [rip+0x2d911]        # 0x44f648
  421d37:	mov    edx,DWORD PTR [rip+0x2d907]        # 0x44f644
  421d3d:	lea    rcx,[rip+0x22ce4]        # 0x444a28
  421d44:	call   0x42aa50
  421d49:	call   QWORD PTR [rip+0x2fa01]        # 0x451750
  421d4f:	lea    rcx,[rax+0x60]
  421d53:	call   0x42a6f0
  421d58:	jmp    0x4217df
  421d5d:	nop    DWORD PTR [rax]
  421d60:	lea    rcx,[rsp+0x60]
  421d65:	xor    r9d,r9d
  421d68:	mov    r8d,r15d
  421d6b:	mov    edx,edi
  421d6d:	call   0x41acf0
  421d72:	mov    rax,QWORD PTR [rsp+0x60]
  421d77:	mov    rcx,QWORD PTR [rip+0x246a2]        # 0x446420
  421d7e:	lea    rdx,[rsp+0x30]
  421d83:	mov    QWORD PTR [rsp+0x30],rax
  421d88:	mov    eax,DWORD PTR [rsp+0x68]
  421d8c:	mov    DWORD PTR [rsp+0x38],eax
  421d90:	call   0x403be0
  421d95:	test   rax,rax
  421d98:	je     0x421920
  421d9e:	mov    rcx,rax
  421da1:	call   0x420870
  421da6:	jmp    0x421920
  421dab:	nop    DWORD PTR [rax+rax*1+0x0]
  421db0:	mov    r8d,DWORD PTR [rip+0x2d891]        # 0x44f648
  421db7:	mov    edx,DWORD PTR [rip+0x2d887]        # 0x44f644
  421dbd:	lea    rcx,[rip+0x22af4]        # 0x4448b8
  421dc4:	call   0x42aa50
  421dc9:	call   QWORD PTR [rip+0x2f981]        # 0x451750
  421dcf:	lea    rcx,[rax+0x60]
  421dd3:	call   0x42a6f0
  421dd8:	jmp    0x4219db
  421ddd:	nop    DWORD PTR [rax]
  421de0:	mov    r8d,DWORD PTR [rip+0x2d861]        # 0x44f648
  421de7:	mov    edx,DWORD PTR [rip+0x2d857]        # 0x44f644
  421ded:	lea    rcx,[rip+0x22b54]        # 0x444948
  421df4:	call   0x42aa50
  421df9:	call   QWORD PTR [rip+0x2f951]        # 0x451750
  421dff:	lea    rcx,[rax+0x60]
  421e03:	call   0x42a6f0
  421e08:	jmp    0x42194b
  421e0d:	nop    DWORD PTR [rax]
  421e10:	mov    r8d,DWORD PTR [rip+0x2d831]        # 0x44f648
  421e17:	mov    edx,DWORD PTR [rip+0x2d827]        # 0x44f644
  421e1d:	lea    rcx,[rip+0x22c4c]        # 0x444a70
  421e24:	call   0x42aa50
  421e29:	call   QWORD PTR [rip+0x2f921]        # 0x451750
  421e2f:	lea    rcx,[rax+0x60]
  421e33:	call   0x42a6f0
  421e38:	jmp    0x421a0d
  421e3d:	nop    DWORD PTR [rax]
  421e40:	mov    r8d,DWORD PTR [rip+0x2d801]        # 0x44f648
  421e47:	mov    edx,DWORD PTR [rip+0x2d7f7]        # 0x44f644
  421e4d:	lea    rcx,[rip+0x22b4c]        # 0x4449a0
  421e54:	call   0x42aa50
  421e59:	call   QWORD PTR [rip+0x2f8f1]        # 0x451750
  421e5f:	lea    rcx,[rax+0x60]
  421e63:	call   0x42a6f0
  421e68:	jmp    0x42188b
  421e6d:	mov    edx,DWORD PTR [rbx+0x8]
  421e70:	lea    rcx,[rip+0x22ef1]        # 0x444d68
  421e77:	call   0x42aa50
  421e7c:	call   QWORD PTR [rip+0x2f8ce]        # 0x451750
  421e82:	lea    rcx,[rax+0x60]
  421e86:	call   0x42a6f0
  421e8b:	jmp    0x421b1b
  421e90:	mov    edx,DWORD PTR [rbx+0x8]
  421e93:	lea    rcx,[rip+0x22eee]        # 0x444d88
  421e9a:	call   0x42aa50
  421e9f:	call   QWORD PTR [rip+0x2f8ab]        # 0x451750
  421ea5:	lea    rcx,[rax+0x60]
  421ea9:	call   0x42a6f0
  421eae:	jmp    0x421bb0
  421eb3:	cmp    eax,0xc000001d
  421eb8:	jne    0x421fcc
  421ebe:	mov    eax,DWORD PTR [rbp+0x0]
  421ec1:	lea    rcx,[rip+0x22d7a]        # 0x444c42
  421ec8:	test   eax,eax
  421eca:	jne    0x421f3d
  421ecc:	mov    DWORD PTR [rbx+0x8],0x4
  421ed3:	jmp    0x421a7b
  421ed8:	cmp    eax,0x40010005
  421edd:	jne    0x421fcc
  421ee3:	mov    eax,DWORD PTR [rbp+0x0]
  421ee6:	lea    rcx,[rip+0x22d1f]        # 0x444c0c
  421eed:	test   eax,eax
  421eef:	jne    0x422061
  421ef5:	mov    DWORD PTR [rbx+0x8],0x2
  421efc:	jmp    0x421a7b
  421f01:	mov    eax,DWORD PTR [rbp+0x0]
  421f04:	lea    rcx,[rip+0x22c15]        # 0x444b20
  421f0b:	test   eax,eax
  421f0d:	je     0x421a74
  421f13:	jmp    0x421c40
  421f18:	mov    eax,DWORD PTR [rbp+0x0]
  421f1b:	lea    rcx,[rip+0x22c9f]        # 0x444bc1
  421f22:	test   eax,eax
  421f24:	je     0x421a74
  421f2a:	jmp    0x421c40
  421f2f:	mov    eax,DWORD PTR [rbp+0x0]
  421f32:	test   eax,eax
  421f34:	je     0x421ecc
  421f36:	lea    rcx,[rip+0x22d43]        # 0x444c80
  421f3d:	call   0x42aa50
  421f42:	call   QWORD PTR [rip+0x2f808]        # 0x451750
  421f48:	lea    rcx,[rax+0x60]
  421f4c:	call   0x42a6f0
  421f51:	mov    eax,DWORD PTR [rbp+0x0]
  421f54:	jmp    0x421ecc
  421f59:	mov    eax,DWORD PTR [rbp+0x0]
  421f5c:	lea    rcx,[rip+0x22b4e]        # 0x444ab1
  421f63:	test   eax,eax
  421f65:	je     0x421b76
  421f6b:	call   0x42aa50
  421f70:	call   QWORD PTR [rip+0x2f7da]        # 0x451750
  421f76:	lea    rcx,[rax+0x60]
  421f7a:	call   0x42a6f0
  421f7f:	mov    eax,DWORD PTR [rbp+0x0]
  421f82:	jmp    0x421b76
  421f87:	mov    eax,DWORD PTR [rbp+0x0]
  421f8a:	lea    rcx,[rip+0x22bfd]        # 0x444b8e
  421f91:	test   eax,eax
  421f93:	je     0x421a74
  421f99:	jmp    0x421c40
  421f9e:	mov    eax,DWORD PTR [rbp+0x0]
  421fa1:	lea    rcx,[rip+0x22bfd]        # 0x444ba5
  421fa8:	test   eax,eax
  421faa:	je     0x421a74
  421fb0:	jmp    0x421c40
  421fb5:	mov    eax,DWORD PTR [rbp+0x0]
  421fb8:	lea    rcx,[rip+0x22b41]        # 0x444b00
  421fbf:	test   eax,eax
  421fc1:	je     0x421a74
  421fc7:	jmp    0x421c40
  421fcc:	mov    r9d,DWORD PTR [rip+0x2d715]        # 0x44f6e8
  421fd3:	test   r9d,r9d
  421fd6:	jne    0x4220ab
  421fdc:	mov    eax,DWORD PTR [rbp+0x0]
  421fdf:	test   eax,eax
  421fe1:	jne    0x4220ce
  421fe7:	mov    DWORD PTR [rbx+0x8],0x8f
  421fee:	jmp    0x421a7b
  421ff3:	mov    eax,DWORD PTR [rbp+0x0]
  421ff6:	lea    rcx,[rip+0x22c63]        # 0x444c60
  421ffd:	test   eax,eax
  421fff:	je     0x421ecc
  422005:	jmp    0x421f3d
  42200a:	mov    eax,DWORD PTR [rbp+0x0]
  42200d:	lea    rcx,[rip+0x22be3]        # 0x444bf7
  422014:	test   eax,eax
  422016:	je     0x421c92
  42201c:	call   0x42aa50
  422021:	call   QWORD PTR [rip+0x2f729]        # 0x451750
  422027:	lea    rcx,[rax+0x60]
  42202b:	call   0x42a6f0
  422030:	mov    eax,DWORD PTR [rbp+0x0]
  422033:	jmp    0x421c92
  422038:	mov    eax,DWORD PTR [rbp+0x0]
  42203b:	lea    rcx,[rip+0x22afe]        # 0x444b40
  422042:	test   eax,eax
  422044:	je     0x421a74
  42204a:	jmp    0x421c40
  42204f:	mov    eax,DWORD PTR [rbp+0x0]
  422052:	test   eax,eax
  422054:	je     0x421ef5
  42205a:	lea    rcx,[rip+0x22bb9]        # 0x444c1a
  422061:	call   0x42aa50
  422066:	call   QWORD PTR [rip+0x2f6e4]        # 0x451750
  42206c:	lea    rcx,[rax+0x60]
  422070:	call   0x42a6f0
  422075:	mov    eax,DWORD PTR [rbp+0x0]
  422078:	jmp    0x421ef5
  42207d:	mov    eax,DWORD PTR [rbp+0x0]
  422080:	test   eax,eax
  422082:	je     0x421a74
  422088:	lea    rcx,[rip+0x22b50]        # 0x444bdf
  42208f:	jmp    0x421c40
  422094:	mov    eax,DWORD PTR [rbp+0x0]
  422097:	lea    rcx,[rip+0x22ac1]        # 0x444b5f
  42209e:	test   eax,eax
  4220a0:	je     0x421a74
  4220a6:	jmp    0x421c40
  4220ab:	mov    DWORD PTR [rbx],0xa
  4220b1:	jmp    0x421732
  4220b6:	lea    rcx,[rip+0x22b6f]        # 0x444c2c
  4220bd:	jmp    0x42201c
  4220c2:	lea    rcx,[rip+0x22a03]        # 0x444acc
  4220c9:	jmp    0x421f6b
  4220ce:	mov    rcx,QWORD PTR [rip+0x2d58b]        # 0x44f660
  4220d5:	mov    edx,0x8
  4220da:	call   0x41c6e0
  4220df:	mov    edx,DWORD PTR [rip+0x2d56b]        # 0x44f650
  4220e5:	lea    rcx,[rip+0x22bbc]        # 0x444ca8
  4220ec:	mov    r8,rax
  4220ef:	call   0x42aa50
  4220f4:	call   QWORD PTR [rip+0x2f656]        # 0x451750
  4220fa:	lea    rcx,[rax+0x60]
  4220fe:	call   0x42a6f0
  422103:	mov    eax,DWORD PTR [rbp+0x0]
  422106:	jmp    0x421fe7
  42210b:	nop    DWORD PTR [rax+rax*1+0x0]
  422110:	push   r12
  422112:	push   rbp
  422113:	push   rdi
  422114:	push   rsi
  422115:	push   rbx
  422116:	sub    rsp,0x60
  42211a:	cmp    rdx,0x1
  42211e:	mov    rbx,rcx
  422121:	je     0x422281
  422127:	mov    rsi,QWORD PTR [rip+0x24412]        # 0x446540
  42212e:	lea    r12,[rsp+0x20]
  422133:	lea    rdi,[rsp+0x30]
  422138:	jbe    0x4222c3
  42213e:	mov    ebp,0xffffffff
  422143:	mov    rax,QWORD PTR [rbx]
  422146:	mov    rdx,r12
  422149:	mov    rcx,rdi
  42214c:	xor    r12d,r12d
  42214f:	mov    QWORD PTR [rsp+0x30],rax
  422154:	mov    eax,DWORD PTR [rbx+0x8]
  422157:	mov    DWORD PTR [rsp+0x38],eax
  42215b:	mov    rax,QWORD PTR [rsi]
  42215e:	mov    QWORD PTR [rsp+0x20],rax
  422163:	mov    eax,DWORD PTR [rsi+0x8]
  422166:	mov    esi,0x10002
  42216b:	mov    DWORD PTR [rsp+0x28],eax
  42216f:	call   0x41ad50
  422174:	test   eax,eax
  422176:	je     0x422233
  42217c:	mov    r8d,DWORD PTR [rip+0x2d4c5]        # 0x44f648
  422183:	mov    edx,DWORD PTR [rip+0x2d4bb]        # 0x44f644
  422189:	lea    rcx,[rsp+0x50]
  42218e:	xor    r9d,r9d
  422191:	mov    DWORD PTR [rip+0x2d555],0x0        # 0x44f6f0
  42219b:	call   0x41acf0
  4221a0:	mov    r8,QWORD PTR [rsp+0x50]
  4221a5:	mov    eax,DWORD PTR [rsp+0x58]
  4221a9:	xor    edx,edx
  4221ab:	mov    rcx,rdi
  4221ae:	mov    QWORD PTR [rsp+0x40],r8
  4221b3:	mov    DWORD PTR [rsp+0x48],eax
  4221b7:	mov    QWORD PTR [rsp+0x30],r8
  4221bc:	mov    DWORD PTR [rsp+0x38],eax
  4221c0:	call   0x421340
  4221c5:	test   rax,rax
  4221c8:	mov    rbx,rax
  4221cb:	je     0x4221e9
  4221cd:	mov    rdi,QWORD PTR [rip+0x2447c]        # 0x446650
  4221d4:	mov    rax,QWORD PTR [rdi+0x20]
  4221d8:	test   rax,rax
  4221db:	je     0x4221e2
  4221dd:	mov    rcx,rbx
  4221e0:	call   rax
  4221e2:	mov    eax,DWORD PTR [rbx+0x50]
  4221e5:	test   eax,eax
  4221e7:	jne    0x422200
  4221e9:	mov    edx,ebp
  4221eb:	mov    ecx,esi
  4221ed:	add    rsp,0x60
  4221f1:	pop    rbx
  4221f2:	pop    rsi
  4221f3:	pop    rdi
  4221f4:	pop    rbp
  4221f5:	pop    r12
  4221f7:	jmp    0x420be0
  4221fc:	nop    DWORD PTR [rax+0x0]
  422200:	call   0x404160
  422205:	test   r12d,r12d
  422208:	je     0x42221c
  42220a:	mov    rax,QWORD PTR [rdi+0x40]
  42220e:	test   rax,rax
  422211:	je     0x422310
  422217:	mov    rcx,rbx
  42221a:	call   rax
  42221c:	lea    rdx,[rbx+0x20]
  422220:	mov    rcx,QWORD PTR [rbx+0x8]
  422224:	call   QWORD PTR [rip+0x2f48e]        # 0x4516b8
  42222a:	mov    DWORD PTR [rbx+0x50],0x0
  422231:	jmp    0x4221e9
  422233:	mov    ecx,DWORD PTR [rbx+0x10]
  422236:	xor    r12d,r12d
  422239:	call   0x40dba0
  42223e:	cmp    DWORD PTR [rbx+0xc],0x1
  422242:	sete   r12b
  422246:	test   eax,eax
  422248:	je     0x42217c
  42224e:	cmp    DWORD PTR [rip+0x2d3eb],0x1        # 0x44f640
  422255:	je     0x4222d0
  422257:	mov    ecx,eax
  422259:	call   0x40dad0
  42225e:	lea    rcx,[rip+0x22bc3]        # 0x444e28
  422265:	mov    rdx,rax
  422268:	call   0x42aa50
  42226d:	call   QWORD PTR [rip+0x2f4dd]        # 0x451750
  422273:	lea    rcx,[rax+0x60]
  422277:	call   0x42a6f0
  42227c:	jmp    0x42217c
  422281:	mov    rax,QWORD PTR [rcx]
  422284:	mov    rsi,QWORD PTR [rip+0x242b5]        # 0x446540
  42228b:	lea    r12,[rsp+0x20]
  422290:	lea    rdi,[rsp+0x30]
  422295:	mov    rdx,r12
  422298:	mov    QWORD PTR [rsp+0x30],rax
  42229d:	mov    eax,DWORD PTR [rcx+0x8]
  4222a0:	mov    rcx,rdi
  4222a3:	mov    DWORD PTR [rsp+0x38],eax
  4222a7:	mov    rax,QWORD PTR [rsi]
  4222aa:	mov    QWORD PTR [rsp+0x20],rax
  4222af:	mov    eax,DWORD PTR [rsi+0x8]
  4222b2:	mov    DWORD PTR [rsp+0x28],eax
  4222b6:	call   0x41ad50
  4222bb:	test   eax,eax
  4222bd:	jne    0x42213e
  4222c3:	mov    ebp,DWORD PTR [rip+0x2d37f]        # 0x44f648
  4222c9:	jmp    0x422143
  4222ce:	xchg   ax,ax
  4222d0:	mov    ecx,DWORD PTR [rip+0x2d41a]        # 0x44f6f0
  4222d6:	mov    esi,0x80010001
  4222db:	cmp    eax,ecx
  4222dd:	je     0x42217c
  4222e3:	call   0x40dad0
  4222e8:	lea    rcx,[rip+0x22b61]        # 0x444e50
  4222ef:	mov    rdx,rax
  4222f2:	mov    esi,0x10002
  4222f7:	call   0x42aa50
  4222fc:	call   QWORD PTR [rip+0x2f44e]        # 0x451750
  422302:	lea    rcx,[rax+0x60]
  422306:	call   0x42a6f0
  42230b:	jmp    0x42217c
  422310:	lea    rcx,[rip+0x22b69]        # 0x444e80
  422317:	call   0x41d140
  42231c:	nop
  42231d:	nop    DWORD PTR [rax]
  422320:	push   rbp
  422321:	push   rdi
  422322:	push   rsi
  422323:	push   rbx
  422324:	sub    rsp,0x58
  422328:	mov    ebp,ecx
  42232a:	lea    rcx,[rip+0x2247f]        # 0x4447b0
  422331:	call   QWORD PTR [rip+0x2f2b9]        # 0x4515f0
  422337:	mov    rbx,QWORD PTR [rip+0x2f2c2]        # 0x451600
  42233e:	mov    rsi,rax
  422341:	lea    rdx,[rip+0x22b71]        # 0x444eb9
  422348:	mov    rcx,rax
  42234b:	call   rbx
  42234d:	mov    rdi,rax
  422350:	lea    rdx,[rip+0x22b79]        # 0x444ed0
  422357:	mov    rcx,rsi
  42235a:	call   rbx
  42235c:	test   rdi,rdi
  42235f:	mov    rbx,rax
  422362:	je     0x4223d0
  422364:	test   rax,rax
  422367:	je     0x4223d0
  422369:	mov    rax,QWORD PTR [rip+0x241d0]        # 0x446540
  422370:	lea    rcx,[rsp+0x20]
  422375:	mov    DWORD PTR [rsp+0x2c],0x0
  42237d:	mov    DWORD PTR [rsp+0x30],0x0
  422385:	mov    rdx,QWORD PTR [rax]
  422388:	mov    eax,DWORD PTR [rax+0x8]
  42238b:	mov    QWORD PTR [rsp+0x20],rdx
  422390:	mov    edx,0x1
  422395:	mov    DWORD PTR [rsp+0x28],eax
  422399:	call   0x422110
  42239e:	mov    ecx,DWORD PTR [rip+0x2d354]        # 0x44f6f8
  4223a4:	call   rdi
  4223a6:	test   eax,eax
  4223a8:	je     0x4223d0
  4223aa:	xor    ecx,ecx
  4223ac:	call   rbx
  4223ae:	mov    ecx,ebp
  4223b0:	call   0x403f00
  4223b5:	mov    rcx,rax
  4223b8:	call   0x403e20
  4223bd:	call   0x420ba0
  4223c2:	xor    eax,eax
  4223c4:	add    rsp,0x58
  4223c8:	pop    rbx
  4223c9:	pop    rsi
  4223ca:	pop    rdi
  4223cb:	pop    rbp
  4223cc:	ret    
  4223cd:	nop    DWORD PTR [rax]
  4223d0:	mov    eax,0xffffffff
  4223d5:	add    rsp,0x58
  4223d9:	pop    rbx
  4223da:	pop    rsi
  4223db:	pop    rdi
  4223dc:	pop    rbp
  4223dd:	ret    
  4223de:	xchg   ax,ax
  4223e0:	push   rbp
  4223e1:	push   rdi
  4223e2:	push   rsi
  4223e3:	push   rbx
  4223e4:	sub    rsp,0x88
  4223eb:	lea    r10,[rip+0x2d24e]        # 0x44f640
  4223f2:	xor    eax,eax
  4223f4:	mov    DWORD PTR [rip+0x2d2f2],0x0        # 0x44f6f0
  4223fe:	mov    QWORD PTR [rip+0x2d2fb],rcx        # 0x44f700
  422405:	mov    ecx,0x16
  42240a:	mov    r9d,edx
  42240d:	mov    rdi,r10
  422410:	mov    DWORD PTR [rip+0x2d2e2],edx        # 0x44f6f8
  422416:	mov    edx,r8d
  422419:	rep stos QWORD PTR es:[rdi],rax
  42241c:	mov    ecx,r9d
  42241f:	mov    DWORD PTR [rip+0x2d2cb],0x0        # 0x44f6f4
  422429:	mov    DWORD PTR [rip+0x2d1ad],0x0        # 0x44f5e0
  422433:	mov    DWORD PTR [rip+0x2d19f],0x0        # 0x44f5dc
  42243d:	call   0x403db0
  422442:	mov    rdx,QWORD PTR [rip+0x2caf7]        # 0x44ef40
  422449:	mov    rcx,QWORD PTR [rip+0x23fd0]        # 0x446420
  422450:	mov    QWORD PTR [rax+0x48],rdx
  422454:	lea    rdx,[rip+0xffffffffffffe415]        # 0x420870
  42245b:	call   0x403900
  422460:	mov    rax,QWORD PTR [rip+0x241e9]        # 0x446650
  422467:	mov    DWORD PTR [rip+0x2d167],0x0        # 0x44f5d8
  422471:	mov    rax,QWORD PTR [rax+0x10]
  422475:	test   rax,rax
  422478:	je     0x42247c
  42247a:	call   rax
  42247c:	mov    DWORD PTR [rip+0x2d16a],0xb        # 0x44f5f0
  422486:	lea    rsi,[rsp+0x50]
  42248b:	mov    rbx,QWORD PTR [rip+0x240ae]        # 0x446540
  422492:	lea    rbp,[rsp+0x30]
  422497:	lea    rdi,[rsp+0x20]
  42249c:	jmp    0x4224cc
  42249e:	xchg   ax,ax
  4224a0:	mov    rax,QWORD PTR [rbx]
  4224a3:	mov    edx,0x1
  4224a8:	mov    rcx,rsi
  4224ab:	mov    DWORD PTR [rsp+0x5c],0x0
  4224b3:	mov    DWORD PTR [rsp+0x60],0x0
  4224bb:	mov    QWORD PTR [rsp+0x50],rax
  4224c0:	mov    eax,DWORD PTR [rbx+0x8]
  4224c3:	mov    DWORD PTR [rsp+0x58],eax
  4224c7:	call   0x422110
  4224cc:	mov    rax,QWORD PTR [rbx]
  4224cf:	xor    r9d,r9d
  4224d2:	mov    r8,rbp
  4224d5:	mov    rdx,rdi
  4224d8:	mov    rcx,rsi
  4224db:	mov    QWORD PTR [rsp+0x20],rax
  4224e0:	mov    eax,DWORD PTR [rbx+0x8]
  4224e3:	mov    DWORD PTR [rsp+0x28],eax
  4224e7:	call   0x421610
  4224ec:	cmp    DWORD PTR [rsp+0x30],0x3
  4224f1:	je     0x4224a0
  4224f3:	mov    rax,QWORD PTR [rsp+0x30]
  4224f8:	mov    QWORD PTR [rip+0x2d0f1],rax        # 0x44f5f0
  4224ff:	mov    rax,QWORD PTR [rsp+0x38]
  422504:	mov    QWORD PTR [rip+0x2d0ed],rax        # 0x44f5f8
  42250b:	mov    rax,QWORD PTR [rsp+0x40]
  422510:	mov    QWORD PTR [rip+0x2d0e9],rax        # 0x44f600
  422517:	call   0x420c90
  42251c:	mov    DWORD PTR [rip+0x2d0b2],0x1        # 0x44f5d8
  422526:	add    rsp,0x88
  42252d:	pop    rbx
  42252e:	pop    rsi
  42252f:	pop    rdi
  422530:	pop    rbp
  422531:	ret    
  422532:	nop    DWORD PTR [rax+0x0]
  422536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422540:	push   rbx
  422541:	sub    rsp,0x20
  422545:	call   0x403ce0
  42254a:	mov    rbx,rax
  42254d:	mov    eax,DWORD PTR [rax+0x18]
  422550:	test   eax,eax
  422552:	je     0x422560
  422554:	add    rsp,0x20
  422558:	pop    rbx
  422559:	ret    
  42255a:	nop    WORD PTR [rax+rax*1+0x0]
  422560:	mov    rcx,QWORD PTR [rbx+0x8]
  422564:	call   QWORD PTR [rip+0x2f166]        # 0x4516d0
  42256a:	cmp    eax,0xffffffff
  42256d:	je     0x422580
  42256f:	mov    DWORD PTR [rbx+0x18],0x1
  422576:	add    rsp,0x20
  42257a:	pop    rbx
  42257b:	ret    
  42257c:	nop    DWORD PTR [rax+0x0]
  422580:	call   QWORD PTR [rip+0x2f062]        # 0x4515e8
  422586:	mov    ecx,eax
  422588:	mov    ebx,eax
  42258a:	call   0x421170
  42258f:	lea    rcx,[rip+0x2295a]        # 0x444ef0
  422596:	mov    r8,rax
  422599:	mov    edx,ebx
  42259b:	call   0x42aa50
  4225a0:	call   QWORD PTR [rip+0x2f1aa]        # 0x451750
  4225a6:	lea    rcx,[rax+0x60]
  4225aa:	add    rsp,0x20
  4225ae:	pop    rbx
  4225af:	jmp    0x42a6f0
  4225b4:	xchg   ax,ax
  4225b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4225c0:	push   rsi
  4225c1:	push   rbx
  4225c2:	sub    rsp,0x28
  4225c6:	mov    esi,DWORD PTR [rdx]
  4225c8:	call   0x403ce0
  4225cd:	mov    rbx,rax
  4225d0:	cmp    esi,0xffffffff
  4225d3:	je     0x4225e2
  4225d5:	cmp    esi,DWORD PTR [rax]
  4225d7:	je     0x4225e2
  4225d9:	xor    eax,eax
  4225db:	add    rsp,0x28
  4225df:	pop    rbx
  4225e0:	pop    rsi
  4225e1:	ret    
  4225e2:	mov    rax,QWORD PTR [rip+0x24067]        # 0x446650
  4225e9:	mov    rax,QWORD PTR [rax+0x20]
  4225ed:	test   rax,rax
  4225f0:	je     0x4225f7
  4225f2:	mov    rcx,rbx
  4225f5:	call   rax
  4225f7:	mov    edx,DWORD PTR [rbx+0x18]
  4225fa:	test   edx,edx
  4225fc:	je     0x4225d9
  4225fe:	mov    eax,DWORD PTR [rbx+0x50]
  422601:	test   eax,eax
  422603:	jne    0x422624
  422605:	mov    rcx,QWORD PTR [rbx+0x8]
  422609:	call   QWORD PTR [rip+0x2f071]        # 0x451680
  42260f:	cmp    eax,0xffffffff
  422612:	je     0x422640
  422614:	xor    eax,eax
  422616:	mov    DWORD PTR [rbx+0x18],0x0
  42261d:	add    rsp,0x28
  422621:	pop    rbx
  422622:	pop    rsi
  422623:	ret    
  422624:	lea    rdx,[rbx+0x20]
  422628:	mov    rcx,QWORD PTR [rbx+0x8]
  42262c:	call   QWORD PTR [rip+0x2f086]        # 0x4516b8
  422632:	mov    DWORD PTR [rbx+0x50],0x0
  422639:	jmp    0x422605
  42263b:	nop    DWORD PTR [rax+rax*1+0x0]
  422640:	call   QWORD PTR [rip+0x2efa2]        # 0x4515e8
  422646:	mov    ecx,eax
  422648:	mov    esi,eax
  42264a:	call   0x421170
  42264f:	lea    rcx,[rip+0x228e2]        # 0x444f38
  422656:	mov    r8,rax
  422659:	mov    edx,esi
  42265b:	call   0x42aa50
  422660:	call   QWORD PTR [rip+0x2f0ea]        # 0x451750
  422666:	lea    rcx,[rax+0x60]
  42266a:	call   0x42a6f0
  42266f:	jmp    0x422614
  422671:	nop    DWORD PTR [rax+rax*1+0x0]
  422676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422680:	push   rdi
  422681:	push   rsi
  422682:	push   rbx
  422683:	sub    rsp,0x20
  422687:	mov    ebx,ecx
  422689:	lea    rcx,[rip+0x22120]        # 0x4447b0
  422690:	call   QWORD PTR [rip+0x2ef5a]        # 0x4515f0
  422696:	lea    rdx,[rip+0x22833]        # 0x444ed0
  42269d:	mov    rcx,rax
  4226a0:	call   QWORD PTR [rip+0x2ef5a]        # 0x451600
  4226a6:	xor    edx,edx
  4226a8:	mov    rdi,rax
  4226ab:	mov    r8d,ebx
  4226ae:	mov    ecx,0x1f0fff
  4226b3:	call   QWORD PTR [rip+0x2efaf]        # 0x451668
  4226b9:	test   rax,rax
  4226bc:	mov    rsi,rax
  4226bf:	je     0x422703
  4226c1:	mov    ecx,ebx
  4226c3:	call   QWORD PTR [rip+0x2eebf]        # 0x451588
  4226c9:	test   eax,eax
  4226cb:	je     0x4226fa
  4226cd:	test   rdi,rdi
  4226d0:	je     0x4226d6
  4226d2:	xor    ecx,ecx
  4226d4:	call   rdi
  4226d6:	mov    r8d,0x1
  4226dc:	mov    edx,ebx
  4226de:	mov    rcx,rsi
  4226e1:	mov    DWORD PTR [rip+0x2d01d],0x1        # 0x44f708
  4226eb:	call   0x4223e0
  4226f0:	xor    eax,eax
  4226f2:	add    rsp,0x20
  4226f6:	pop    rbx
  4226f7:	pop    rsi
  4226f8:	pop    rdi
  4226f9:	ret    
  4226fa:	mov    rcx,rsi
  4226fd:	call   QWORD PTR [rip+0x2ee6d]        # 0x451570
  422703:	call   QWORD PTR [rip+0x2eedf]        # 0x4515e8
  422709:	mov    ecx,eax
  42270b:	mov    ebx,eax
  42270d:	call   0x421170
  422712:	lea    rcx,[rip+0x22867]        # 0x444f80
  422719:	mov    r8,rax
  42271c:	mov    edx,ebx
  42271e:	call   0x41d140
  422723:	nop
  422724:	xchg   ax,ax
  422726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422730:	push   rbp
  422731:	push   r15
  422733:	push   r14
  422735:	push   r13
  422737:	push   r12
  422739:	push   rdi
  42273a:	push   rsi
  42273b:	push   rbx
  42273c:	sub    rsp,0x58
  422740:	lea    rbp,[rsp+0x80]
  422748:	mov    DWORD PTR [rip+0x2cfb6],0x0        # 0x44f708
  422752:	test   rcx,rcx
  422755:	mov    rdi,rcx
  422758:	je     0x422944
  42275e:	mov    r12,QWORD PTR [rdx+0x8]
  422762:	test   r12,r12
  422765:	je     0x422933
  42276b:	lea    r13,[rdx+0x10]
  42276f:	mov    rcx,r12
  422772:	mov    esi,0x1
  422777:	mov    rbx,r13
  42277a:	nop    WORD PTR [rax+rax*1+0x0]
  422780:	add    rbx,0x8
  422784:	call   0x42a610
  422789:	mov    rcx,QWORD PTR [rbx-0x8]
  42278d:	lea    esi,[rsi+rax*1+0x1]
  422791:	test   rcx,rcx
  422794:	jne    0x422780
  422796:	movsxd rax,esi
  422799:	add    rax,0x1e
  42279d:	and    rax,0xfffffffffffffff0
  4227a1:	call   0x425730
  4227a6:	sub    rsp,rax
  4227a9:	lea    rsi,[rsp+0x30]
  4227ae:	mov    BYTE PTR [rsi],0x0
  4227b1:	mov    rbx,rsi
  4227b4:	mov    r9,rsi
  4227b7:	mov    r10d,DWORD PTR [r9]
  4227ba:	add    r9,0x4
  4227be:	lea    eax,[r10-0x1010101]
  4227c5:	not    r10d
  4227c8:	and    eax,r10d
  4227cb:	and    eax,0x80808080
  4227d0:	je     0x4227b7
  4227d2:	mov    edx,eax
  4227d4:	shr    edx,0x10
  4227d7:	test   eax,0x8080
  4227dc:	cmove  eax,edx
  4227df:	lea    rdx,[r9+0x2]
  4227e3:	cmove  r9,rdx
  4227e7:	add    al,al
  4227e9:	mov    rdx,r12
  4227ec:	sbb    r9,0x3
  4227f0:	add    r13,0x8
  4227f4:	sub    r9,rsi
  4227f7:	lea    rcx,[rsi+r9*1+0x1]
  4227fc:	mov    BYTE PTR [rsi+r9*1],0x20
  422801:	call   0x42a620
  422806:	mov    r12,QWORD PTR [r13-0x8]
  42280a:	test   r12,r12
  42280d:	jne    0x4227b4
  42280f:	mov    rsi,QWORD PTR [rip+0x23c5a]        # 0x446470
  422816:	mov    edx,DWORD PTR [rsi]
  422818:	test   edx,edx
  42281a:	jne    0x422910
  422820:	lea    r15,[rbp-0x50]
  422824:	mov    rdx,rbx
  422827:	mov    rcx,rdi
  42282a:	mov    r8,r15
  42282d:	call   0x420e30
  422832:	mov    r14,QWORD PTR [rip+0x2edaf]        # 0x4515e8
  422839:	mov    r12d,eax
  42283c:	call   r14
  42283f:	cmp    eax,0x2
  422842:	mov    r13d,eax
  422845:	jne    0x42284c
  422847:	test   r12d,r12d
  42284a:	je     0x4228b0
  42284c:	test   r12d,r12d
  42284f:	je     0x422950
  422855:	mov    eax,DWORD PTR [rsi]
  422857:	test   eax,eax
  422859:	je     0x422879
  42285b:	lea    rcx,[rip+0x227cd]        # 0x44502f
  422862:	mov    rdx,rbx
  422865:	call   0x42aa50
  42286a:	call   QWORD PTR [rip+0x2eee0]        # 0x451750
  422870:	lea    rcx,[rax+0x60]
  422874:	call   0x42a6f0
  422879:	mov    rcx,QWORD PTR [rbp-0x48]
  42287d:	call   QWORD PTR [rip+0x2eced]        # 0x451570
  422883:	mov    edx,DWORD PTR [rbp-0x40]
  422886:	mov    rcx,QWORD PTR [rbp-0x50]
  42288a:	xor    r8d,r8d
  42288d:	call   0x4223e0
  422892:	mov    eax,DWORD PTR [rip+0x2ce60]        # 0x44f6f8
  422898:	lea    rsp,[rbp-0x28]
  42289c:	pop    rbx
  42289d:	pop    rsi
  42289e:	pop    rdi
  42289f:	pop    r12
  4228a1:	pop    r13
  4228a3:	pop    r14
  4228a5:	pop    r15
  4228a7:	pop    rbp
  4228a8:	ret    
  4228a9:	nop    DWORD PTR [rax+0x0]
  4228b0:	mov    rcx,rdi
  4228b3:	call   0x42a610
  4228b8:	mov    r12,rax
  4228bb:	lea    rax,[rax+0x23]
  4228bf:	and    rax,0xfffffffffffffff0
  4228c3:	call   0x425730
  4228c8:	sub    rsp,rax
  4228cb:	mov    r8,r12
  4228ce:	mov    rdx,rdi
  4228d1:	lea    r9,[rsp+0x30]
  4228d6:	mov    rcx,r9
  4228d9:	call   0x42a668
  4228de:	add    r12,rax
  4228e1:	mov    r8,r15
  4228e4:	mov    rdx,rbx
  4228e7:	mov    DWORD PTR [r12],0x6578652e
  4228ef:	mov    BYTE PTR [r12+0x4],0x0
  4228f5:	mov    rcx,rax
  4228f8:	call   0x420e30
  4228fd:	mov    r12d,eax
  422900:	call   r14
  422903:	mov    r13d,eax
  422906:	jmp    0x42284c
  42290b:	nop    DWORD PTR [rax+rax*1+0x0]
  422910:	lea    rcx,[rip+0x226d0]        # 0x444fe7
  422917:	mov    rdx,rbx
  42291a:	call   0x42aa50
  42291f:	call   QWORD PTR [rip+0x2ee2b]        # 0x451750
  422925:	lea    rcx,[rax+0x60]
  422929:	call   0x42a6f0
  42292e:	jmp    0x422820
  422933:	sub    rsp,0x10
  422937:	lea    rbx,[rsp+0x30]
  42293c:	mov    BYTE PTR [rbx],0x0
  42293f:	jmp    0x42280f
  422944:	lea    rcx,[rip+0x22665]        # 0x444fb0
  42294b:	call   0x41d140
  422950:	mov    ecx,r13d
  422953:	call   0x421170
  422958:	lea    rcx,[rip+0x226a1]        # 0x445000
  42295f:	mov    QWORD PTR [rsp+0x20],rax
  422964:	mov    r9d,r13d
  422967:	mov    r8,rbx
  42296a:	mov    rdx,rdi
  42296d:	call   0x41d140
  422972:	nop
  422973:	nop    DWORD PTR [rax]
  422976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422980:	sub    rsp,0x28
  422984:	lea    rcx,[rip+0xc6b5]        # 0x42f040
  42298b:	call   0x40e1e0
  422990:	mov    rax,QWORD PTR [rip+0x23cb9]        # 0x446650
  422997:	mov    rax,QWORD PTR [rax]
  42299a:	add    rsp,0x28
  42299e:	rex.W jmp rax
  4229a1:	nop
  4229a2:	nop
  4229a3:	nop
  4229a4:	nop
  4229a5:	nop
  4229a6:	nop
  4229a7:	nop
  4229a8:	nop
  4229a9:	nop
  4229aa:	nop
  4229ab:	nop
  4229ac:	nop
  4229ad:	nop
  4229ae:	nop
  4229af:	nop
  4229b0:	cmp    cl,0x32
  4229b3:	je     0x4229c0
  4229b5:	cmp    cl,0x34
  4229b8:	je     0x4229c0
  4229ba:	xor    eax,eax
  4229bc:	ret    
  4229bd:	nop    DWORD PTR [rax]
  4229c0:	mov    eax,0x1
  4229c5:	ret    
  4229c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229d0:	mov    DWORD PTR [rcx+0x4f0],0x1
  4229da:	ret    
  4229db:	nop    DWORD PTR [rax+rax*1+0x0]
  4229e0:	or     DWORD PTR [rcx+0x64],0x100
  4229e7:	ret    
  4229e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229f0:	push   rdi
  4229f1:	push   rsi
  4229f2:	push   rbx
  4229f3:	sub    rsp,0x30
  4229f7:	mov    rbx,rcx
  4229fa:	mov    rsi,rdx
  4229fd:	call   0x403ce0
  422a02:	mov    rdx,QWORD PTR [rbx]
  422a05:	mov    esi,DWORD PTR [rsi]
  422a07:	lea    rcx,[rsp+0x20]
  422a0c:	mov    rdi,rax
  422a0f:	mov    QWORD PTR [rsp+0x20],rdx
  422a14:	mov    edx,DWORD PTR [rbx+0x8]
  422a17:	mov    DWORD PTR [rsp+0x28],edx
  422a1b:	call   0x41ad20
  422a20:	cmp    esi,eax
  422a22:	jne    0x422a2e
  422a24:	mov    DWORD PTR [rdi+0x4f0],0x1
  422a2e:	xor    eax,eax
  422a30:	add    rsp,0x30
  422a34:	pop    rbx
  422a35:	pop    rsi
  422a36:	pop    rdi
  422a37:	ret    
  422a38:	nop    DWORD PTR [rax+rax*1+0x0]
  422a40:	sub    rsp,0x48
  422a44:	mov    rax,QWORD PTR [rip+0x23a05]        # 0x446450
  422a4b:	lea    rcx,[rsp+0x20]
  422a50:	mov    rax,QWORD PTR [rax]
  422a53:	mov    rdx,QWORD PTR [rax]
  422a56:	mov    QWORD PTR [rsp+0x20],rdx
  422a5b:	mov    eax,DWORD PTR [rax+0x8]
  422a5e:	mov    DWORD PTR [rsp+0x28],eax
  422a62:	call   0x41ad20
  422a67:	mov    rcx,QWORD PTR [rip+0x239b2]        # 0x446420
  422a6e:	lea    r8,[rsp+0x3c]
  422a73:	lea    rdx,[rip+0xffffffffffffff76]        # 0x4229f0
  422a7a:	mov    DWORD PTR [rsp+0x3c],eax
  422a7e:	call   0x403b90
  422a83:	nop
  422a84:	add    rsp,0x48
  422a88:	ret    
  422a89:	nop    DWORD PTR [rax+0x0]
  422a90:	sub    rsp,0x38
  422a94:	lea    rcx,[rip+0x2ccc5]        # 0x44f760
  422a9b:	lea    rdx,[rsp+0x28]
  422aa0:	call   0x41ef90
  422aa5:	xor    edx,edx
  422aa7:	test   eax,eax
  422aa9:	cmovne rdx,QWORD PTR [rsp+0x28]
  422aaf:	mov    rax,rdx
  422ab2:	add    rsp,0x38
  422ab6:	ret    
  422ab7:	nop    WORD PTR [rax+rax*1+0x0]
  422ac0:	lea    rcx,[rip+0x2cc99]        # 0x44f760
  422ac7:	jmp    0x41f0b0
  422acc:	nop    DWORD PTR [rax+0x0]
  422ad0:	movsxd r9,r8d
  422ad3:	lea    r8,[rip+0x22726]        # 0x445200
  422ada:	movsxd r8,DWORD PTR [r8+r9*4]
  422ade:	lea    r8,[rdx+r8*1+0x20]
  422ae3:	mov    edx,r9d
  422ae6:	jmp    0x404930
  422aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  422af0:	sub    rsp,0x38
  422af4:	movsxd r9,r8d
  422af7:	lea    r8,[rip+0x22702]        # 0x445200
  422afe:	cmp    r9d,0x1b
  422b02:	movsxd r8,DWORD PTR [r8+r9*4]
  422b06:	lea    r8,[rdx+r8*1+0x20]
  422b0b:	je     0x422b45
  422b0d:	cmp    r9d,0x1f
  422b11:	je     0x422b21
  422b13:	mov    edx,r9d
  422b16:	call   0x404750
  422b1b:	nop
  422b1c:	add    rsp,0x38
  422b20:	ret    
  422b21:	mov    eax,DWORD PTR [r8]
  422b24:	lea    r8,[rsp+0x2c]
  422b29:	mov    edx,0x1f
  422b2e:	sar    eax,0x10
  422b31:	and    eax,0x7ff
  422b36:	mov    DWORD PTR [rsp+0x2c],eax
  422b3a:	call   0x404750
  422b3f:	nop
  422b40:	add    rsp,0x38
  422b44:	ret    
  422b45:	movzx  eax,WORD PTR [r8]
  422b49:	lea    r8,[rsp+0x2c]
  422b4e:	mov    edx,0x1b
  422b53:	mov    DWORD PTR [rsp+0x2c],eax
  422b57:	call   0x404750
  422b5c:	jmp    0x422b1c
  422b5e:	xchg   ax,ax
  422b60:	push   rbp
  422b61:	push   rdi
  422b62:	push   rsi
  422b63:	push   rbx
  422b64:	sub    rsp,0x28
  422b68:	mov    eax,DWORD PTR [rip+0x2cbd2]        # 0x44f740
  422b6e:	mov    rsi,QWORD PTR [rip+0x2eaab]        # 0x451620
  422b75:	mov    rbx,rcx
  422b78:	lea    rdi,[rcx+0x20]
  422b7c:	mov    rbp,QWORD PTR [rip+0x2ea65]        # 0x4515e8
  422b83:	jmp    0x422ba2
  422b85:	call   rbp
  422b87:	cmp    eax,0x57
  422b8a:	jne    0x422bc0
  422b8c:	mov    edx,DWORD PTR [rip+0x2cbae]        # 0x44f740
  422b92:	test   edx,edx
  422b94:	je     0x422bc0
  422b96:	mov    DWORD PTR [rip+0x2cba0],0x0        # 0x44f740
  422ba0:	xor    al,al
  422ba2:	or     eax,0x10001b
  422ba7:	mov    rcx,QWORD PTR [rbx+0x8]
  422bab:	mov    rdx,rdi
  422bae:	mov    DWORD PTR [rbx+0x50],eax
  422bb1:	call   rsi
  422bb3:	test   eax,eax
  422bb5:	je     0x422b85
  422bb7:	add    rsp,0x28
  422bbb:	pop    rbx
  422bbc:	pop    rsi
  422bbd:	pop    rdi
  422bbe:	pop    rbp
  422bbf:	ret    
  422bc0:	lea    rcx,[rip+0x224b9]        # 0x445080
  422bc7:	mov    edx,eax
  422bc9:	call   0x41d140
  422bce:	nop
  422bcf:	nop
  422bd0:	lea    rcx,[rip+0x2cb89]        # 0x44f760
  422bd7:	jmp    0x41e570
  422bdc:	nop    DWORD PTR [rax+0x0]
  422be0:	sub    rsp,0x28
  422be4:	call   0x41e270
  422be9:	mov    rax,QWORD PTR [rip+0x23a50]        # 0x446640
  422bf0:	mov    rdx,QWORD PTR [rax]
  422bf3:	mov    rax,QWORD PTR [rip+0x23ac6]        # 0x4466c0
  422bfa:	mov    QWORD PTR [rax],rdx
  422bfd:	add    rsp,0x28
  422c01:	ret    
  422c02:	nop    DWORD PTR [rax+0x0]
  422c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422c10:	push   rbx
  422c11:	sub    rsp,0x20
  422c15:	mov    eax,DWORD PTR [rcx+0x4f0]
  422c1b:	test   eax,eax
  422c1d:	je     0x422c6d
  422c1f:	mov    rbx,rcx
  422c22:	call   0x421320
  422c27:	mov    rax,QWORD PTR [rip+0x2cb32]        # 0x44f760
  422c2e:	mov    DWORD PTR [rbx+0x4f0],0x0
  422c38:	mov    QWORD PTR [rbx+0x68],rax
  422c3c:	mov    rax,QWORD PTR [rip+0x2cb25]        # 0x44f768
  422c43:	mov    QWORD PTR [rbx+0x70],rax
  422c47:	mov    rax,QWORD PTR [rip+0x2cb22]        # 0x44f770
  422c4e:	mov    QWORD PTR [rbx+0x78],rax
  422c52:	mov    rax,QWORD PTR [rip+0x2cb1f]        # 0x44f778
  422c59:	mov    QWORD PTR [rbx+0x80],rax
  422c60:	mov    eax,DWORD PTR [rip+0x2cb1e]        # 0x44f784
  422c66:	mov    QWORD PTR [rbx+0x90],rax
  422c6d:	add    rsp,0x20
  422c71:	pop    rbx
  422c72:	ret    
  422c73:	nop    DWORD PTR [rax]
  422c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422c80:	push   rsi
  422c81:	push   rbx
  422c82:	sub    rsp,0x38
  422c86:	mov    rax,QWORD PTR [rip+0x237c3]        # 0x446450
  422c8d:	mov    ebx,ecx
  422c8f:	mov    rcx,QWORD PTR [rax]
  422c92:	call   0x403ce0
  422c97:	mov    rcx,rax
  422c9a:	mov    rsi,rax
  422c9d:	call   0x421320
  422ca2:	cmp    ebx,0x7
  422ca5:	ja     0x422d20
  422ca7:	lea    rdx,[rip+0x22416]        # 0x4450c4
  422cae:	movsxd rax,DWORD PTR [rdx+rbx*4]
  422cb2:	add    rdx,rax
  422cb5:	jmp    rdx
  422cb7:	nop    WORD PTR [rax+rax*1+0x0]
  422cc0:	mov    rax,QWORD PTR [rsi+0x90]
  422cc7:	add    rsp,0x38
  422ccb:	pop    rbx
  422ccc:	pop    rsi
  422ccd:	ret    
  422cce:	xchg   ax,ax
  422cd0:	mov    rax,QWORD PTR [rsi+0x68]
  422cd4:	add    rsp,0x38
  422cd8:	pop    rbx
  422cd9:	pop    rsi
  422cda:	ret    
  422cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  422ce0:	mov    rax,QWORD PTR [rsi+0x70]
  422ce4:	add    rsp,0x38
  422ce8:	pop    rbx
  422ce9:	pop    rsi
  422cea:	ret    
  422ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  422cf0:	mov    rax,QWORD PTR [rsi+0x78]
  422cf4:	add    rsp,0x38
  422cf8:	pop    rbx
  422cf9:	pop    rsi
  422cfa:	ret    
  422cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  422d00:	mov    rax,QWORD PTR [rsi+0x80]
  422d07:	add    rsp,0x38
  422d0b:	pop    rbx
  422d0c:	pop    rsi
  422d0d:	ret    
  422d0e:	xchg   ax,ax
  422d10:	mov    rax,QWORD PTR [rsi+0x88]
  422d17:	add    rsp,0x38
  422d1b:	pop    rbx
  422d1c:	pop    rsi
  422d1d:	ret    
  422d1e:	xchg   ax,ax
  422d20:	lea    rax,[rip+0x2238f]        # 0x4450b6
  422d27:	lea    r9,[rip+0x22492]        # 0x4451c0
  422d2e:	lea    r8,[rip+0x22369]        # 0x44509e
  422d35:	lea    rcx,[rip+0x22369]        # 0x4450a5
  422d3c:	mov    edx,0x71
  422d41:	mov    QWORD PTR [rsp+0x20],rax
  422d46:	call   0x41d170
  422d4b:	nop
  422d4c:	nop    DWORD PTR [rax+0x0]
  422d50:	sub    rsp,0x28
  422d54:	mov    ecx,0x7
  422d59:	call   0x422c80
  422d5e:	add    rsp,0x28
  422d62:	ret    
  422d63:	nop    DWORD PTR [rax]
  422d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d70:	sub    rsp,0x28
  422d74:	mov    ecx,0x6
  422d79:	call   0x422c80
  422d7e:	add    rsp,0x28
  422d82:	ret    
  422d83:	nop    DWORD PTR [rax]
  422d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d90:	sub    rsp,0x38
  422d94:	cmp    ecx,0x3
  422d97:	ja     0x422da2
  422d99:	add    rsp,0x38
  422d9d:	jmp    0x422c80
  422da2:	lea    rax,[rip+0x22357]        # 0x445100
  422da9:	lea    r9,[rip+0x223d0]        # 0x445180
  422db0:	lea    r8,[rip+0x2232d]        # 0x4450e4
  422db7:	lea    rcx,[rip+0x222e7]        # 0x4450a5
  422dbe:	mov    edx,0x77
  422dc3:	mov    QWORD PTR [rsp+0x20],rax
  422dc8:	call   0x41d170
  422dcd:	nop
  422dce:	xchg   ax,ax
  422dd0:	push   rbx
  422dd1:	sub    rsp,0x50
  422dd5:	mov    rax,QWORD PTR [rip+0x23674]        # 0x446450
  422ddc:	mov    ebx,ecx
  422dde:	lea    rcx,[rsp+0x30]
  422de3:	mov    rax,QWORD PTR [rax]
  422de6:	mov    rdx,QWORD PTR [rax]
  422de9:	mov    QWORD PTR [rsp+0x30],rdx
  422dee:	mov    eax,DWORD PTR [rax+0x8]
  422df1:	mov    DWORD PTR [rsp+0x38],eax
  422df5:	call   0x41ad20
  422dfa:	cmp    ebx,0x3
  422dfd:	mov    DWORD PTR [rsp+0x4c],eax
  422e01:	ja     0x422e22
  422e03:	mov    rcx,QWORD PTR [rip+0x23616]        # 0x446420
  422e0a:	lea    r8,[rsp+0x4c]
  422e0f:	lea    rdx,[rip+0xfffffffffffffbda]        # 0x4229f0
  422e16:	call   0x403b90
  422e1b:	nop
  422e1c:	add    rsp,0x50
  422e20:	pop    rbx
  422e21:	ret    
  422e22:	lea    rax,[rip+0x222d7]        # 0x445100
  422e29:	lea    r9,[rip+0x22310]        # 0x445140
  422e30:	lea    r8,[rip+0x222ad]        # 0x4450e4
  422e37:	lea    rcx,[rip+0x22267]        # 0x4450a5
  422e3e:	mov    edx,0x46
  422e43:	mov    QWORD PTR [rsp+0x20],rax
  422e48:	call   0x41d170
  422e4d:	nop
  422e4e:	xchg   ax,ax
  422e50:	push   rsi
  422e51:	push   rbx
  422e52:	sub    rsp,0x28
  422e56:	cmp    ecx,0x2
  422e59:	je     0x422e70
  422e5b:	cmp    ecx,0x4
  422e5e:	je     0x422e70
  422e60:	mov    eax,0x1
  422e65:	add    rsp,0x28
  422e69:	pop    rbx
  422e6a:	pop    rsi
  422e6b:	ret    
  422e6c:	nop    DWORD PTR [rax+0x0]
  422e70:	mov    esi,r8d
  422e73:	mov    rbx,rdx
  422e76:	call   0x40f8d0
  422e7b:	lea    rcx,[rip+0x2c8de]        # 0x44f760
  422e82:	mov    r9d,esi
  422e85:	mov    r8,rbx
  422e88:	mov    edx,eax
  422e8a:	add    rsp,0x28
  422e8e:	pop    rbx
  422e8f:	pop    rsi
  422e90:	jmp    0x41ed00
  422e95:	nop
  422e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ea0:	push   rsi
  422ea1:	push   rbx
  422ea2:	sub    rsp,0x28
  422ea6:	cmp    ecx,0x2
  422ea9:	je     0x422ec0
  422eab:	cmp    ecx,0x4
  422eae:	je     0x422ec0
  422eb0:	mov    eax,0x1
  422eb5:	add    rsp,0x28
  422eb9:	pop    rbx
  422eba:	pop    rsi
  422ebb:	ret    
  422ebc:	nop    DWORD PTR [rax+0x0]
  422ec0:	mov    esi,r8d
  422ec3:	mov    rbx,rdx
  422ec6:	call   0x40f8d0
  422ecb:	lea    rcx,[rip+0x2c88e]        # 0x44f760
  422ed2:	mov    r9d,esi
  422ed5:	mov    r8,rbx
  422ed8:	mov    edx,eax
  422eda:	add    rsp,0x28
  422ede:	pop    rbx
  422edf:	pop    rsi
  422ee0:	jmp    0x41eb10
  422ee5:	nop
  422ee6:	nop
  422ee7:	nop
  422ee8:	nop
  422ee9:	nop
  422eea:	nop
  422eeb:	nop
  422eec:	nop
  422eed:	nop
  422eee:	nop
  422eef:	nop
  422ef0:	push   rbx
  422ef1:	sub    rsp,0x20
  422ef5:	mov    rbx,rcx
  422ef8:	call   QWORD PTR [rip+0x2e892]        # 0x451790
  422efe:	mov    ecx,DWORD PTR [rax]
  422f00:	call   0x41ddf0
  422f05:	lea    rdx,[rip+0x223f4]        # 0x445300
  422f0c:	mov    r8d,eax
  422f0f:	mov    rcx,rbx
  422f12:	add    rsp,0x20
  422f16:	pop    rbx
  422f17:	jmp    0x42aab0
  422f1c:	nop
  422f1d:	nop
  422f1e:	nop
  422f1f:	nop
  422f20:	push   rdi
  422f21:	push   rsi
  422f22:	push   rbx
  422f23:	sub    rsp,0x40
  422f27:	test   ecx,ecx
  422f29:	js     0x422f3a
  422f2b:	mov    rax,QWORD PTR [rip+0x2e89e]        # 0x4517d0
  422f32:	cmp    ecx,DWORD PTR [rax]
  422f34:	jl     0x423000
  422f3a:	mov    ebx,ecx
  422f3c:	mov    rcx,QWORD PTR [rip+0x2c87d]        # 0x44f7c0
  422f43:	test   rcx,rcx
  422f46:	je     0x422f59
  422f48:	call   QWORD PTR [rip+0x2e70a]        # 0x451658
  422f4e:	mov    QWORD PTR [rip+0x2c867],0x0        # 0x44f7c0
  422f59:	lea    rax,[rip+0x2c860]        # 0x44f7c0
  422f60:	xor    edx,edx
  422f62:	mov    QWORD PTR [rsp+0x30],0x0
  422f6b:	mov    DWORD PTR [rsp+0x28],0x0
  422f73:	mov    r9d,0x400
  422f79:	mov    r8d,ebx
  422f7c:	mov    QWORD PTR [rsp+0x20],rax
  422f81:	mov    ecx,0x1100
  422f86:	call   QWORD PTR [rip+0x2e62c]        # 0x4515b8
  422f8c:	test   eax,eax
  422f8e:	je     0x422fd3
  422f90:	mov    rbx,QWORD PTR [rip+0x2c829]        # 0x44f7c0
  422f97:	mov    rcx,rbx
  422f9a:	call   0x42a610
  422f9f:	cmp    eax,0x3
  422fa2:	jle    0x422fc8
  422fa4:	cdqe   
  422fa6:	lea    rdi,[rip+0x2237b]        # 0x445328
  422fad:	mov    ecx,0x4
  422fb2:	lea    rax,[rbx+rax*1-0x3]
  422fb7:	mov    rsi,rax
  422fba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422fbc:	jne    0x422fc8
  422fbe:	mov    BYTE PTR [rax],0x0
  422fc1:	mov    rbx,QWORD PTR [rip+0x2c7f8]        # 0x44f7c0
  422fc8:	mov    rax,rbx
  422fcb:	add    rsp,0x40
  422fcf:	pop    rbx
  422fd0:	pop    rsi
  422fd1:	pop    rdi
  422fd2:	ret    
  422fd3:	mov    r9d,ebx
  422fd6:	lea    r8,[rip+0x22333]        # 0x445310
  422fdd:	lea    rcx,[rip+0x2c7bc]        # 0x44f7a0
  422fe4:	lea    rbx,[rip+0x2c7b5]        # 0x44f7a0
  422feb:	mov    edx,0x20
  422ff0:	call   0x41a880
  422ff5:	mov    rax,rbx
  422ff8:	add    rsp,0x40
  422ffc:	pop    rbx
  422ffd:	pop    rsi
  422ffe:	pop    rdi
  422fff:	ret    
  423000:	add    rsp,0x40
  423004:	pop    rbx
  423005:	pop    rsi
  423006:	pop    rdi
  423007:	jmp    0x42a618
  42300c:	nop
  42300d:	nop
  42300e:	nop
  42300f:	nop
  423010:	push   rbx
  423011:	sub    rsp,0x20
  423015:	call   0x42a678
  42301a:	test   rax,rax
  42301d:	mov    rbx,rax
  423020:	je     0x423030
  423022:	mov    rax,rbx
  423025:	add    rsp,0x20
  423029:	pop    rbx
  42302a:	ret    
  42302b:	nop    DWORD PTR [rax+rax*1+0x0]
  423030:	call   QWORD PTR [rip+0x2e75a]        # 0x451790
  423036:	mov    DWORD PTR [rax],0xc
  42303c:	mov    rax,rbx
  42303f:	add    rsp,0x20
  423043:	pop    rbx
  423044:	ret    
  423045:	nop
  423046:	nop
  423047:	nop
  423048:	nop
  423049:	nop
  42304a:	nop
  42304b:	nop
  42304c:	nop
  42304d:	nop
  42304e:	nop
  42304f:	nop
  423050:	push   rdi
  423051:	push   rsi
  423052:	push   rbx
  423053:	mov    esi,0x1
  423058:	mov    r10d,0x1
  42305e:	xor    r11d,r11d
  423061:	mov    rax,0xffffffffffffffff
  423068:	nop    DWORD PTR [rax+rax*1+0x0]
  423070:	lea    r9,[r11+r10*1]
  423074:	cmp    r9,rdx
  423077:	jae    0x4230a4
  423079:	lea    rbx,[rcx+rax*1]
  42307d:	movzx  edi,BYTE PTR [rbx+r10*1]
  423082:	cmp    BYTE PTR [rcx+r9*1],dil
  423086:	jae    0x423110
  42308c:	mov    r11,r9
  42308f:	mov    r10d,0x1
  423095:	mov    rsi,r9
  423098:	lea    r9,[r11+r10*1]
  42309c:	sub    rsi,rax
  42309f:	cmp    r9,rdx
  4230a2:	jb     0x423079
  4230a4:	mov    QWORD PTR [r8],rsi
  4230a7:	mov    edi,0x1
  4230ac:	mov    r10d,0x1
  4230b2:	xor    r11d,r11d
  4230b5:	mov    rbx,0xffffffffffffffff
  4230bc:	nop    DWORD PTR [rax+0x0]
  4230c0:	lea    r9,[r11+r10*1]
  4230c4:	cmp    rdx,r9
  4230c7:	jbe    0x4230f0
  4230c9:	lea    rsi,[rcx+rbx*1]
  4230cd:	movzx  esi,BYTE PTR [rsi+r10*1]
  4230d2:	cmp    BYTE PTR [rcx+r9*1],sil
  4230d6:	jbe    0x423130
  4230d8:	mov    r11,r9
  4230db:	mov    r10d,0x1
  4230e1:	mov    rdi,r9
  4230e4:	lea    r9,[r11+r10*1]
  4230e8:	sub    rdi,rbx
  4230eb:	cmp    rdx,r9
  4230ee:	ja     0x4230c9
  4230f0:	add    rbx,0x1
  4230f4:	add    rax,0x1
  4230f8:	cmp    rbx,rax
  4230fb:	jb     0x423103
  4230fd:	mov    QWORD PTR [r8],rdi
  423100:	mov    rax,rbx
  423103:	pop    rbx
  423104:	pop    rsi
  423105:	pop    rdi
  423106:	ret    
  423107:	nop    WORD PTR [rax+rax*1+0x0]
  423110:	je     0x423150
  423112:	mov    rax,r11
  423115:	mov    esi,0x1
  42311a:	add    r11,0x1
  42311e:	mov    r10d,0x1
  423124:	jmp    0x423070
  423129:	nop    DWORD PTR [rax+0x0]
  423130:	je     0x423160
  423132:	mov    rbx,r11
  423135:	mov    edi,0x1
  42313a:	add    r11,0x1
  42313e:	mov    r10d,0x1
  423144:	jmp    0x4230c0
  423149:	nop    DWORD PTR [rax+0x0]
  423150:	cmp    r10,rsi
  423153:	je     0x423170
  423155:	add    r10,0x1
  423159:	jmp    0x423070
  42315e:	xchg   ax,ax
  423160:	cmp    r10,rdi
  423163:	je     0x423181
  423165:	add    r10,0x1
  423169:	jmp    0x4230c0
  42316e:	xchg   ax,ax
  423170:	mov    rsi,r10
  423173:	mov    r11,r9
  423176:	mov    r10d,0x1
  42317c:	jmp    0x423070
  423181:	mov    rdi,r10
  423184:	mov    r11,r9
  423187:	mov    r10d,0x1
  42318d:	jmp    0x4230c0
  423192:	nop    DWORD PTR [rax+0x0]
  423196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231a0:	push   r15
  4231a2:	push   r14
  4231a4:	push   r13
  4231a6:	push   r12
  4231a8:	push   rbp
  4231a9:	push   rdi
  4231aa:	push   rsi
  4231ab:	push   rbx
  4231ac:	sub    rsp,0x848
  4231b3:	cmp    r9,0x2
  4231b7:	mov    rbp,rcx
  4231ba:	mov    r13,rdx
  4231bd:	mov    rbx,r8
  4231c0:	mov    rdi,r9
  4231c3:	ja     0x423405
  4231c9:	lea    r12,[r9-0x1]
  4231cd:	mov    QWORD PTR [rsp+0x38],0x1
  4231d6:	mov    r14d,0x1
  4231dc:	mov    rsi,r12
  4231df:	lea    r10,[rsp+0x40]
  4231e4:	lea    rax,[rsp+0x840]
  4231ec:	nop    DWORD PTR [rax+0x0]
  4231f0:	mov    QWORD PTR [r10],rdi
  4231f3:	add    r10,0x8
  4231f7:	cmp    r10,rax
  4231fa:	jne    0x4231f0
  4231fc:	xor    eax,eax
  4231fe:	test   rdi,rdi
  423201:	je     0x42321b
  423203:	movzx  edx,BYTE PTR [rbx+rax*1]
  423207:	mov    rcx,rsi
  42320a:	sub    rcx,rax
  42320d:	add    rax,0x1
  423211:	cmp    rax,rdi
  423214:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  423219:	jne    0x423203
  42321b:	lea    rdx,[rbx+r14*1]
  42321f:	mov    r8,r12
  423222:	mov    rcx,rbx
  423225:	call   0x42a670
  42322a:	test   eax,eax
  42322c:	jne    0x42332a
  423232:	lea    rcx,[r12-0x1]
  423237:	mov    r11d,0x1
  42323d:	mov    r8,rdi
  423240:	sub    r11,r12
  423243:	xor    eax,eax
  423245:	xor    edx,edx
  423247:	sub    r8,r14
  42324a:	lea    r15,[rbp+rcx*1+0x0]
  42324f:	mov    QWORD PTR [rsp+0x28],r11
  423254:	sub    r13,rdi
  423257:	jmp    0x42327a
  423259:	nop    DWORD PTR [rax+0x0]
  423260:	cmp    r14,r9
  423263:	jbe    0x42326c
  423265:	test   rax,rax
  423268:	cmovne r9,r8
  42326c:	add    rdx,r9
  42326f:	xor    eax,eax
  423271:	cmp    r13,rdx
  423274:	jb     0x423316
  42327a:	lea    r10,[rbp+rdx*1+0x0]
  42327f:	movzx  r9d,BYTE PTR [r10+rsi*1]
  423284:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  423289:	test   r9,r9
  42328c:	jne    0x423260
  42328e:	cmp    rax,r12
  423291:	mov    r9,r12
  423294:	cmovae r9,rax
  423298:	cmp    r9,rsi
  42329b:	jae    0x4232c4
  42329d:	lea    rdi,[rbp+r9*1+0x0]
  4232a2:	movzx  edi,BYTE PTR [rdi+rdx*1]
  4232a6:	cmp    BYTE PTR [rbx+r9*1],dil
  4232aa:	je     0x4232bb
  4232ac:	jmp    0x423320
  4232ae:	xchg   ax,ax
  4232b0:	movzx  edi,BYTE PTR [r10+r9*1]
  4232b5:	cmp    BYTE PTR [rbx+r9*1],dil
  4232b9:	jne    0x423320
  4232bb:	add    r9,0x1
  4232bf:	cmp    r9,rsi
  4232c2:	jb     0x4232b0
  4232c4:	cmp    r12,rax
  4232c7:	jbe    0x423426
  4232cd:	movzx  edi,BYTE PTR [r15+rdx*1]
  4232d2:	cmp    BYTE PTR [rbx+rcx*1],dil
  4232d6:	jne    0x423426
  4232dc:	mov    r9,rcx
  4232df:	jmp    0x4232f5
  4232e1:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  4232e7:	lea    rdi,[r9-0x1]
  4232eb:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  4232f0:	jne    0x4232fa
  4232f2:	mov    r9,rdi
  4232f5:	cmp    r9,rax
  4232f8:	jne    0x4232e1
  4232fa:	add    rax,0x1
  4232fe:	cmp    rax,r9
  423301:	ja     0x4233c5
  423307:	add    rdx,r14
  42330a:	mov    rax,r8
  42330d:	cmp    r13,rdx
  423310:	jae    0x42327a
  423316:	xor    eax,eax
  423318:	jmp    0x4233c8
  42331d:	nop    DWORD PTR [rax]
  423320:	add    rdx,QWORD PTR [rsp+0x28]
  423325:	jmp    0x42326c
  42332a:	mov    rax,rdi
  42332d:	lea    rcx,[r12-0x1]
  423332:	mov    r11d,0x1
  423338:	sub    rax,r12
  42333b:	cmp    rax,r12
  42333e:	lea    r14,[rbp+rcx*1+0x0]
  423343:	cmovb  rax,r12
  423347:	sub    r11,r12
  42334a:	sub    r13,rdi
  42334d:	lea    r8,[rax+0x1]
  423351:	xor    eax,eax
  423353:	lea    r10,[rbp+rax*1+0x0]
  423358:	movzx  edx,BYTE PTR [r10+rsi*1]
  42335d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  423362:	test   rdx,rdx
  423365:	jne    0x4233e0
  423367:	cmp    r12,rsi
  42336a:	jae    0x423394
  42336c:	movzx  edx,BYTE PTR [r10+r12*1]
  423371:	mov    r9,r12
  423374:	cmp    BYTE PTR [rbx+r12*1],dl
  423378:	je     0x42338b
  42337a:	jmp    0x4233f0
  42337c:	nop    DWORD PTR [rax+0x0]
  423380:	movzx  edx,BYTE PTR [r10+r9*1]
  423385:	cmp    BYTE PTR [rbx+r9*1],dl
  423389:	jne    0x4233f0
  42338b:	add    r9,0x1
  42338f:	cmp    r9,rsi
  423392:	jb     0x423380
  423394:	cmp    rcx,0xffffffffffffffff
  423398:	mov    r9,rcx
  42339b:	je     0x4233c5
  42339d:	movzx  edx,BYTE PTR [r14+rax*1]
  4233a2:	cmp    BYTE PTR [rbx+rcx*1],dl
  4233a5:	je     0x4233bb
  4233a7:	jmp    0x423400
  4233a9:	nop    DWORD PTR [rax+0x0]
  4233b0:	movzx  edx,BYTE PTR [r10+r9*1]
  4233b5:	cmp    BYTE PTR [rbx+r9*1],dl
  4233b9:	jne    0x423400
  4233bb:	sub    r9,0x1
  4233bf:	cmp    r9,0xffffffffffffffff
  4233c3:	jne    0x4233b0
  4233c5:	mov    rax,r10
  4233c8:	add    rsp,0x848
  4233cf:	pop    rbx
  4233d0:	pop    rsi
  4233d1:	pop    rdi
  4233d2:	pop    rbp
  4233d3:	pop    r12
  4233d5:	pop    r13
  4233d7:	pop    r14
  4233d9:	pop    r15
  4233db:	ret    
  4233dc:	nop    DWORD PTR [rax+0x0]
  4233e0:	add    rax,rdx
  4233e3:	cmp    r13,rax
  4233e6:	jae    0x423353
  4233ec:	xor    eax,eax
  4233ee:	jmp    0x4233c8
  4233f0:	add    rax,r11
  4233f3:	add    rax,r9
  4233f6:	jmp    0x4233e3
  4233f8:	nop    DWORD PTR [rax+rax*1+0x0]
  423400:	add    rax,r8
  423403:	jmp    0x4233e3
  423405:	lea    r8,[rsp+0x38]
  42340a:	mov    rdx,r9
  42340d:	mov    rcx,rbx
  423410:	lea    rsi,[rdi-0x1]
  423414:	call   0x423050
  423419:	mov    r14,QWORD PTR [rsp+0x38]
  42341e:	mov    r12,rax
  423421:	jmp    0x4231df
  423426:	mov    r9,r12
  423429:	jmp    0x4232fa
  42342e:	xchg   ax,ax
  423430:	push   r15
  423432:	push   r14
  423434:	push   r13
  423436:	push   r12
  423438:	push   rbp
  423439:	push   rdi
  42343a:	push   rsi
  42343b:	push   rbx
  42343c:	sub    rsp,0x48
  423440:	test   r9,r9
  423443:	mov    rax,rcx
  423446:	je     0x4235b0
  42344c:	cmp    r9,rdx
  42344f:	ja     0x4235a5
  423455:	cmp    r9,0x1f
  423459:	mov    rsi,r9
  42345c:	mov    rbx,r8
  42345f:	mov    rbp,rdx
  423462:	mov    r12,rcx
  423465:	ja     0x4235c1
  42346b:	movzx  edx,BYTE PTR [r8]
  42346f:	mov    r8,rbp
  423472:	call   0x423930
  423477:	test   rax,rax
  42347a:	mov    rdi,rax
  42347d:	je     0x4235e0
  423483:	cmp    rsi,0x1
  423487:	je     0x4235e0
  42348d:	mov    rcx,r12
  423490:	sub    rcx,rax
  423493:	xor    eax,eax
  423495:	lea    r12,[rcx+rbp*1]
  423499:	cmp    rsi,r12
  42349c:	ja     0x4235b0
  4234a2:	cmp    rsi,0x2
  4234a6:	ja     0x42369f
  4234ac:	lea    rbp,[rsi-0x1]
  4234b0:	mov    QWORD PTR [rsp+0x38],0x1
  4234b9:	mov    r13d,0x1
  4234bf:	lea    rdx,[rbx+r13*1]
  4234c3:	mov    r8,rbp
  4234c6:	mov    rcx,rbx
  4234c9:	call   0x42a670
  4234ce:	test   eax,eax
  4234d0:	jne    0x4235e5
  4234d6:	lea    r9,[rbp-0x1]
  4234da:	mov    r15,rsi
  4234dd:	mov    r11d,0x1
  4234e3:	xor    ecx,ecx
  4234e5:	xor    r8d,r8d
  4234e8:	sub    r15,r13
  4234eb:	lea    rax,[rdi+r9*1]
  4234ef:	sub    r11,rbp
  4234f2:	sub    r12,rsi
  4234f5:	mov    QWORD PTR [rsp+0x28],rax
  4234fa:	nop    WORD PTR [rax+rax*1+0x0]
  423500:	cmp    r8,rbp
  423503:	mov    r10,rbp
  423506:	cmovae r10,r8
  42350a:	cmp    rsi,r10
  42350d:	jbe    0x423548
  42350f:	lea    rax,[rdi+r10*1]
  423513:	movzx  eax,BYTE PTR [rax+rcx*1]
  423517:	cmp    BYTE PTR [rbx+r10*1],al
  42351b:	jne    0x4235d0
  423521:	lea    rax,[rdi+rcx*1]
  423525:	jmp    0x42353f
  423527:	nop    WORD PTR [rax+rax*1+0x0]
  423530:	movzx  edx,BYTE PTR [rax+r10*1]
  423535:	cmp    BYTE PTR [rbx+r10*1],dl
  423539:	jne    0x4235d0
  42353f:	add    r10,0x1
  423543:	cmp    rsi,r10
  423546:	ja     0x423530
  423548:	cmp    rbp,r8
  42354b:	jbe    0x423697
  423551:	mov    rax,QWORD PTR [rsp+0x28]
  423556:	movzx  eax,BYTE PTR [rax+rcx*1]
  42355a:	cmp    BYTE PTR [rbx+r9*1],al
  42355e:	jne    0x423697
  423564:	mov    rdx,r9
  423567:	lea    r10,[rdi+rcx*1]
  42356b:	jmp    0x423584
  42356d:	nop    DWORD PTR [rax]
  423570:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  423576:	lea    rax,[rdx-0x1]
  42357a:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  42357f:	jne    0x423589
  423581:	mov    rdx,rax
  423584:	cmp    rdx,r8
  423587:	jne    0x423570
  423589:	add    r8,0x1
  42358d:	cmp    r8,rdx
  423590:	ja     0x4236bc
  423596:	add    rcx,r13
  423599:	mov    r8,r15
  42359c:	cmp    r12,rcx
  42359f:	jae    0x423500
  4235a5:	xor    eax,eax
  4235a7:	nop    WORD PTR [rax+rax*1+0x0]
  4235b0:	add    rsp,0x48
  4235b4:	pop    rbx
  4235b5:	pop    rsi
  4235b6:	pop    rdi
  4235b7:	pop    rbp
  4235b8:	pop    r12
  4235ba:	pop    r13
  4235bc:	pop    r14
  4235be:	pop    r15
  4235c0:	ret    
  4235c1:	call   0x4231a0
  4235c6:	jmp    0x4235b0
  4235c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4235d0:	add    rcx,r11
  4235d3:	xor    r8d,r8d
  4235d6:	add    rcx,r10
  4235d9:	jmp    0x42359c
  4235db:	nop    DWORD PTR [rax+rax*1+0x0]
  4235e0:	mov    rax,rdi
  4235e3:	jmp    0x4235b0
  4235e5:	mov    rax,rsi
  4235e8:	lea    r8,[rbp-0x1]
  4235ec:	mov    r13d,0x1
  4235f2:	sub    rax,rbp
  4235f5:	lea    r9,[rdi+rbp*1]
  4235f9:	cmp    rax,rbp
  4235fc:	lea    r14,[rdi+r8*1]
  423600:	cmovb  rax,rbp
  423604:	sub    r13,rbp
  423607:	sub    r12,rsi
  42360a:	lea    r11,[rax+0x1]
  42360e:	xor    eax,eax
  423610:	mov    QWORD PTR [rsp+0x38],r11
  423615:	cmp    rsi,rbp
  423618:	jbe    0x423644
  42361a:	movzx  ecx,BYTE PTR [r9+rax*1]
  42361f:	mov    r10,rbp
  423622:	lea    rdx,[rdi+rax*1]
  423626:	cmp    BYTE PTR [rbx+rbp*1],cl
  423629:	je     0x42363b
  42362b:	jmp    0x423680
  42362d:	nop    DWORD PTR [rax]
  423630:	movzx  ecx,BYTE PTR [rdx+r10*1]
  423635:	cmp    BYTE PTR [rbx+r10*1],cl
  423639:	jne    0x423680
  42363b:	add    r10,0x1
  42363f:	cmp    rsi,r10
  423642:	ja     0x423630
  423644:	cmp    r8,0xffffffffffffffff
  423648:	mov    rdx,r8
  42364b:	je     0x4236c5
  42364d:	movzx  ecx,BYTE PTR [r14+rax*1]
  423652:	cmp    BYTE PTR [rbx+r8*1],cl
  423656:	jne    0x423692
  423658:	lea    rcx,[rdi+rax*1]
  42365c:	jmp    0x42366b
  42365e:	xchg   ax,ax
  423660:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  423665:	cmp    BYTE PTR [rbx+rdx*1],r15b
  423669:	jne    0x423692
  42366b:	sub    rdx,0x1
  42366f:	cmp    rdx,0xffffffffffffffff
  423673:	jne    0x423660
  423675:	mov    rax,rcx
  423678:	jmp    0x4235b0
  42367d:	nop    DWORD PTR [rax]
  423680:	add    rax,r13
  423683:	add    rax,r10
  423686:	cmp    r12,rax
  423689:	jae    0x423615
  42368b:	xor    eax,eax
  42368d:	jmp    0x4235b0
  423692:	add    rax,r11
  423695:	jmp    0x423686
  423697:	mov    rdx,rbp
  42369a:	jmp    0x423589
  42369f:	lea    r8,[rsp+0x38]
  4236a4:	mov    rdx,rsi
  4236a7:	mov    rcx,rbx
  4236aa:	call   0x423050
  4236af:	mov    r13,QWORD PTR [rsp+0x38]
  4236b4:	mov    rbp,rax
  4236b7:	jmp    0x4234bf
  4236bc:	lea    rax,[rdi+rcx*1]
  4236c0:	jmp    0x4235b0
  4236c5:	lea    rcx,[rdi+rax*1]
  4236c9:	jmp    0x423675
  4236cb:	nop
  4236cc:	nop
  4236cd:	nop
  4236ce:	nop
  4236cf:	nop
  4236d0:	sub    rsp,0x68
  4236d4:	lea    rdx,[rsp+0x20]
  4236d9:	call   0x423700
  4236de:	test   eax,eax
  4236e0:	js     0x4236ee
  4236e2:	call   QWORD PTR [rip+0x2e0a8]        # 0x451790
  4236e8:	mov    DWORD PTR [rax],0x16
  4236ee:	mov    rax,0xffffffffffffffff
  4236f5:	add    rsp,0x68
  4236f9:	ret    
  4236fa:	nop
  4236fb:	nop
  4236fc:	nop
  4236fd:	nop
  4236fe:	nop
  4236ff:	nop
  423700:	push   r14
  423702:	push   r13
  423704:	push   r12
  423706:	push   rbp
  423707:	push   rdi
  423708:	push   rsi
  423709:	push   rbx
  42370a:	sub    rsp,0x130
  423711:	mov    r12,QWORD PTR [rip+0x2e228]        # 0x451940
  423718:	mov    rsi,rcx
  42371b:	mov    rbp,rdx
  42371e:	call   r12
  423721:	cmp    eax,0xffffffff
  423724:	mov    ebx,eax
  423726:	je     0x423740
  423728:	mov    eax,ebx
  42372a:	add    rsp,0x130
  423731:	pop    rbx
  423732:	pop    rsi
  423733:	pop    rdi
  423734:	pop    rbp
  423735:	pop    r12
  423737:	pop    r13
  423739:	pop    r14
  42373b:	ret    
  42373c:	nop    DWORD PTR [rax+0x0]
  423740:	mov    r13,QWORD PTR [rip+0x2e049]        # 0x451790
  423747:	call   r13
  42374a:	cmp    DWORD PTR [rax],0x2
  42374d:	jne    0x423728
  42374f:	lea    r14,[rsp+0x20]
  423754:	xor    eax,eax
  423756:	mov    ecx,0x20
  42375b:	mov    rdi,r14
  42375e:	rep stos QWORD PTR es:[rdi],rax
  423761:	mov    rcx,rsi
  423764:	mov    DWORD PTR [rdi],0x0
  42376a:	mov    BYTE PTR [rdi+0x4],0x0
  42376e:	call   0x42a610
  423773:	cmp    rax,0x103
  423779:	ja     0x4237f0
  42377b:	test   rax,rax
  42377e:	je     0x423728
  423780:	lea    rdx,[rax+0x1]
  423784:	mov    rdi,r14
  423787:	cmp    edx,0x8
  42378a:	jb     0x423794
  42378c:	mov    ecx,edx
  42378e:	shr    ecx,0x3
  423791:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  423794:	xor    ecx,ecx
  423796:	test   dl,0x4
  423799:	je     0x4237a4
  42379b:	mov    ecx,DWORD PTR [rsi]
  42379d:	mov    DWORD PTR [rdi],ecx
  42379f:	mov    ecx,0x4
  4237a4:	test   dl,0x2
  4237a7:	je     0x4237b7
  4237a9:	movzx  r8d,WORD PTR [rsi+rcx*1]
  4237ae:	mov    WORD PTR [rdi+rcx*1],r8w
  4237b3:	add    rcx,0x2
  4237b7:	and    edx,0x1
  4237ba:	je     0x4237c3
  4237bc:	movzx  edx,BYTE PTR [rsi+rcx*1]
  4237c0:	mov    BYTE PTR [rdi+rcx*1],dl
  4237c3:	lea    rdx,[rax-0x1]
  4237c7:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
  4237cc:	cmp    cl,0x5c
  4237cf:	je     0x4237fe
  4237d1:	cmp    cl,0x2f
  4237d4:	je     0x4237fe
  4237d6:	mov    BYTE PTR [rsp+rax*1+0x20],0x2f
  4237db:	mov    rdx,rbp
  4237de:	mov    rcx,r14
  4237e1:	call   r12
  4237e4:	mov    ebx,eax
  4237e6:	jmp    0x423728
  4237eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4237f0:	call   r13
  4237f3:	mov    DWORD PTR [rax],0x26
  4237f9:	jmp    0x423728
  4237fe:	lea    rax,[r14+rdx*1]
  423802:	cmp    rax,r14
  423805:	mov    BYTE PTR [rax],0x0
  423808:	je     0x423845
  42380a:	movzx  edx,BYTE PTR [rax-0x1]
  42380e:	sub    rax,0x1
  423812:	cmp    dl,0x5c
  423815:	je     0x423802
  423817:	cmp    dl,0x2f
  42381a:	je     0x423802
  42381c:	mov    rdx,rbp
  42381f:	mov    rcx,r14
  423822:	call   r12
  423825:	test   eax,eax
  423827:	jne    0x423853
  423829:	movzx  eax,WORD PTR [rbp+0x6]
  42382d:	and    ax,0xf000
  423831:	cmp    ax,0x4000
  423835:	je     0x42384c
  423837:	call   r13
  42383a:	mov    DWORD PTR [rax],0x14
  423840:	jmp    0x423728
  423845:	mov    BYTE PTR [rsp+0x20],0x2f
  42384a:	jmp    0x42381c
  42384c:	xor    ebx,ebx
  42384e:	jmp    0x423728
  423853:	mov    ebx,eax
  423855:	jmp    0x423728
  42385a:	nop
  42385b:	nop
  42385c:	nop
  42385d:	nop
  42385e:	nop
  42385f:	nop
  423860:	push   rbx
  423861:	test   dl,dl
  423863:	mov    r10d,edx
  423866:	je     0x423925
  42386c:	test   cl,0x3
  42386f:	je     0x42389d
  423871:	movzx  eax,BYTE PTR [rcx]
  423874:	cmp    al,dl
  423876:	jne    0x42388c
  423878:	jmp    0x423920
  42387d:	nop    DWORD PTR [rax]
  423880:	movzx  eax,BYTE PTR [rcx]
  423883:	cmp    r10b,al
  423886:	je     0x423920
  42388c:	test   al,al
  42388e:	je     0x423920
  423894:	add    rcx,0x1
  423898:	test   cl,0x3
  42389b:	jne    0x423880
  42389d:	movzx  eax,dl
  4238a0:	mov    ebx,eax
  4238a2:	shl    ebx,0x8
  4238a5:	or     ebx,eax
  4238a7:	mov    eax,ebx
  4238a9:	shl    eax,0x10
  4238ac:	or     ebx,eax
  4238ae:	mov    eax,DWORD PTR [rcx]
  4238b0:	mov    r8d,eax
  4238b3:	xor    r8d,ebx
  4238b6:	jmp    0x4238cc
  4238b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4238c0:	add    rcx,0x4
  4238c4:	mov    eax,DWORD PTR [rcx]
  4238c6:	mov    r8d,ebx
  4238c9:	xor    r8d,eax
  4238cc:	mov    r9d,r8d
  4238cf:	mov    r11d,eax
  4238d2:	sub    r8d,0x1010101
  4238d9:	not    r9d
  4238dc:	not    r11d
  4238df:	and    r9d,r8d
  4238e2:	lea    r8d,[rax-0x1010101]
  4238e9:	mov    eax,r11d
  4238ec:	and    eax,r8d
  4238ef:	or     eax,r9d
  4238f2:	test   eax,0x80808080
  4238f7:	je     0x4238c0
  4238f9:	movzx  eax,BYTE PTR [rcx]
  4238fc:	test   al,al
  4238fe:	je     0x423920
  423900:	cmp    al,dl
  423902:	jne    0x423914
  423904:	jmp    0x423920
  423906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423910:	test   al,al
  423912:	je     0x423920
  423914:	add    rcx,0x1
  423918:	movzx  eax,BYTE PTR [rcx]
  42391b:	cmp    r10b,al
  42391e:	jne    0x423910
  423920:	mov    rax,rcx
  423923:	pop    rbx
  423924:	ret    
  423925:	xor    edx,edx
  423927:	pop    rbx
  423928:	jmp    0x4239e0
  42392d:	nop
  42392e:	nop
  42392f:	nop
  423930:	test   r8,r8
  423933:	mov    r9d,edx
  423936:	je     0x423957
  423938:	test   cl,0x3
  42393b:	je     0x423964
  42393d:	cmp    BYTE PTR [rcx],dl
  42393f:	jne    0x42394d
  423941:	jmp    0x423960
  423943:	test   cl,0x3
  423946:	je     0x423964
  423948:	cmp    BYTE PTR [rcx],r9b
  42394b:	je     0x423960
  42394d:	add    rcx,0x1
  423951:	sub    r8,0x1
  423955:	jne    0x423943
  423957:	xor    eax,eax
  423959:	ret    
  42395a:	nop    WORD PTR [rax+rax*1+0x0]
  423960:	mov    rax,rcx
  423963:	ret    
  423964:	movzx  eax,dl
  423967:	mov    r11d,eax
  42396a:	shl    r11d,0x8
  42396e:	or     r11d,eax
  423971:	mov    eax,r11d
  423974:	shl    eax,0x10
  423977:	or     r11d,eax
  42397a:	cmp    r8,0x3
  42397e:	ja     0x423990
  423980:	jmp    0x4239a8
  423982:	sub    r8,0x4
  423986:	add    rcx,0x4
  42398a:	cmp    r8,0x3
  42398e:	jbe    0x4239d0
  423990:	mov    eax,DWORD PTR [rcx]
  423992:	xor    eax,r11d
  423995:	lea    r10d,[rax-0x1010101]
  42399c:	not    eax
  42399e:	and    eax,r10d
  4239a1:	test   eax,0x80808080
  4239a6:	je     0x423982
  4239a8:	add    r8,rcx
  4239ab:	cmp    BYTE PTR [rcx],dl
  4239ad:	lea    rax,[rcx+0x1]
  4239b1:	jne    0x4239bf
  4239b3:	jmp    0x423960
  4239b5:	add    rax,0x1
  4239b9:	cmp    BYTE PTR [rax-0x1],r9b
  4239bd:	je     0x423960
  4239bf:	cmp    rax,r8
  4239c2:	mov    rcx,rax
  4239c5:	jne    0x4239b5
  4239c7:	xor    eax,eax
  4239c9:	ret    
  4239ca:	nop    WORD PTR [rax+rax*1+0x0]
  4239d0:	test   r8,r8
  4239d3:	jne    0x4239a8
  4239d5:	jmp    0x423957
  4239d7:	nop
  4239d8:	nop
  4239d9:	nop
  4239da:	nop
  4239db:	nop
  4239dc:	nop
  4239dd:	nop
  4239de:	nop
  4239df:	nop
  4239e0:	mov    rax,rcx
  4239e3:	mov    r8d,edx
  4239e6:	test   al,0x3
  4239e8:	je     0x4239fd
  4239ea:	cmp    BYTE PTR [rcx],dl
  4239ec:	jne    0x4239f5
  4239ee:	jmp    0x423a4b
  4239f0:	cmp    BYTE PTR [rax],r8b
  4239f3:	je     0x423a49
  4239f5:	add    rax,0x1
  4239f9:	test   al,0x3
  4239fb:	jne    0x4239f0
  4239fd:	movzx  ecx,dl
  423a00:	mov    r10d,ecx
  423a03:	shl    r10d,0x8
  423a07:	or     r10d,ecx
  423a0a:	mov    ecx,r10d
  423a0d:	shl    ecx,0x10
  423a10:	or     r10d,ecx
  423a13:	jmp    0x423a19
  423a15:	add    rax,0x4
  423a19:	mov    ecx,DWORD PTR [rax]
  423a1b:	xor    ecx,r10d
  423a1e:	lea    r9d,[rcx-0x1010101]
  423a25:	not    ecx
  423a27:	and    ecx,r9d
  423a2a:	and    ecx,0x80808080
  423a30:	je     0x423a15
  423a32:	cmp    BYTE PTR [rax],dl
  423a34:	je     0x423a49
  423a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a40:	add    rax,0x1
  423a44:	cmp    BYTE PTR [rax],r8b
  423a47:	jne    0x423a40
  423a49:	repz ret 
  423a4b:	repz ret 
  423a4d:	nop
  423a4e:	nop
  423a4f:	nop
  423a50:	push   rdi
  423a51:	push   rsi
  423a52:	push   rbx
  423a53:	sub    rsp,0x20
  423a57:	test   rcx,rcx
  423a5a:	je     0x423ad0
  423a5c:	cmp    QWORD PTR [rcx],0x0
  423a60:	je     0x423ac9
  423a62:	lea    rax,[rcx+0x8]
  423a66:	xor    edx,edx
  423a68:	nop    DWORD PTR [rax+rax*1+0x0]
  423a70:	add    rax,0x8
  423a74:	add    edx,0x1
  423a77:	cmp    QWORD PTR [rax-0x8],0x0
  423a7c:	jne    0x423a70
  423a7e:	add    edx,0x1
  423a81:	movsxd rdx,edx
  423a84:	shl    rdx,0x3
  423a88:	mov    rsi,rcx
  423a8b:	mov    rcx,rdx
  423a8e:	xor    ebx,ebx
  423a90:	call   0x41a6e0
  423a95:	mov    rcx,QWORD PTR [rsi]
  423a98:	mov    rdi,rax
  423a9b:	test   rcx,rcx
  423a9e:	je     0x423ab6
  423aa0:	call   0x40e730
  423aa5:	mov    QWORD PTR [rdi+rbx*1],rax
  423aa9:	add    rbx,0x8
  423aad:	mov    rcx,QWORD PTR [rsi+rbx*1]
  423ab1:	test   rcx,rcx
  423ab4:	jne    0x423aa0
  423ab6:	mov    QWORD PTR [rdi+rbx*1],0x0
  423abe:	mov    rax,rdi
  423ac1:	add    rsp,0x20
  423ac5:	pop    rbx
  423ac6:	pop    rsi
  423ac7:	pop    rdi
  423ac8:	ret    
  423ac9:	mov    edx,0x8
  423ace:	jmp    0x423a88
  423ad0:	xor    eax,eax
  423ad2:	jmp    0x423ac1
  423ad4:	xchg   ax,ax
  423ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ae0:	push   rsi
  423ae1:	push   rbx
  423ae2:	sub    rsp,0x28
  423ae6:	test   rcx,rcx
  423ae9:	je     0x423b20
  423aeb:	mov    rsi,rcx
  423aee:	mov    rcx,QWORD PTR [rcx]
  423af1:	mov    rbx,rsi
  423af4:	test   rcx,rcx
  423af7:	je     0x423b11
  423af9:	nop    DWORD PTR [rax+0x0]
  423b00:	add    rbx,0x8
  423b04:	call   0x42a6c8
  423b09:	mov    rcx,QWORD PTR [rbx]
  423b0c:	test   rcx,rcx
  423b0f:	jne    0x423b00
  423b11:	mov    rcx,rsi
  423b14:	add    rsp,0x28
  423b18:	pop    rbx
  423b19:	pop    rsi
  423b1a:	jmp    0x42a6c8
  423b1f:	nop
  423b20:	add    rsp,0x28
  423b24:	pop    rbx
  423b25:	pop    rsi
  423b26:	ret    
  423b27:	nop    WORD PTR [rax+rax*1+0x0]
  423b30:	push   r15
  423b32:	push   r14
  423b34:	push   r13
  423b36:	push   r12
  423b38:	push   rbp
  423b39:	push   rdi
  423b3a:	push   rsi
  423b3b:	push   rbx
  423b3c:	sub    rsp,0x38
  423b40:	test   rcx,rcx
  423b43:	mov    rbx,rcx
  423b46:	je     0x423d41
  423b4c:	call   0x42a610
  423b51:	lea    rcx,[rax+0x1]
  423b55:	xor    r15d,r15d
  423b58:	xor    r12d,r12d
  423b5b:	xor    ebp,ebp
  423b5d:	xor    edi,edi
  423b5f:	xor    r14d,r14d
  423b62:	call   0x41a6e0
  423b67:	mov    rsi,QWORD PTR [rip+0x22882]        # 0x4463f0
  423b6e:	mov    QWORD PTR [rsp+0x20],rax
  423b73:	xor    r13d,r13d
  423b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b80:	movzx  eax,BYTE PTR [rbx]
  423b83:	mov    edx,r15d
  423b86:	test   BYTE PTR [rsi+rax*2],0x40
  423b8a:	je     0x423b9d
  423b8c:	nop    DWORD PTR [rax+0x0]
  423b90:	add    rbx,0x1
  423b94:	movzx  eax,BYTE PTR [rbx]
  423b97:	test   BYTE PTR [rsi+rax*2],0x40
  423b9b:	jne    0x423b90
  423b9d:	test   ebp,ebp
  423b9f:	je     0x423bac
  423ba1:	lea    eax,[rbp-0x1]
  423ba4:	lea    r11,[r12+r15*8]
  423ba8:	cmp    edx,eax
  423baa:	jl     0x423bd4
  423bac:	test   r12,r12
  423baf:	je     0x423d2a
  423bb5:	add    ebp,ebp
  423bb7:	mov    rcx,r12
  423bba:	movsxd rdx,ebp
  423bbd:	shl    rdx,0x3
  423bc1:	call   0x41a710
  423bc6:	mov    r12,rax
  423bc9:	lea    r11,[r12+r15*8]
  423bcd:	mov    QWORD PTR [r11],0x0
  423bd4:	movzx  edx,BYTE PTR [rbx]
  423bd7:	mov    r8,QWORD PTR [rsp+0x20]
  423bdc:	test   dl,dl
  423bde:	jne    0x423bf6
  423be0:	jmp    0x423c40
  423be2:	mov    BYTE PTR [r8],dl
  423be5:	xor    edi,edi
  423be7:	add    r8,0x1
  423beb:	add    rbx,0x1
  423bef:	movzx  edx,BYTE PTR [rbx]
  423bf2:	test   dl,dl
  423bf4:	je     0x423c40
  423bf6:	movzx  r9d,dl
  423bfa:	test   BYTE PTR [rsi+r9*2],0x40
  423bff:	je     0x423c0f
  423c01:	mov    eax,edi
  423c03:	or     eax,r13d
  423c06:	or     eax,r14d
  423c09:	je     0x423d20
  423c0f:	test   edi,edi
  423c11:	jne    0x423be2
  423c13:	cmp    dl,0x5c
  423c16:	je     0x423cd0
  423c1c:	test   r13d,r13d
  423c1f:	je     0x423cb0
  423c25:	cmp    dl,0x27
  423c28:	je     0x423d00
  423c2e:	add    rbx,0x1
  423c32:	mov    BYTE PTR [r8],dl
  423c35:	add    r8,0x1
  423c39:	movzx  edx,BYTE PTR [rbx]
  423c3c:	test   dl,dl
  423c3e:	jne    0x423bf6
  423c40:	mov    rcx,QWORD PTR [rsp+0x20]
  423c45:	mov    BYTE PTR [r8],0x0
  423c49:	add    r15,0x1
  423c4d:	mov    QWORD PTR [rsp+0x28],r11
  423c52:	call   0x40e730
  423c57:	mov    r11,QWORD PTR [rsp+0x28]
  423c5c:	mov    QWORD PTR [r11],rax
  423c5f:	mov    QWORD PTR [r12+r15*8],0x0
  423c67:	movzx  edx,BYTE PTR [rbx]
  423c6a:	test   BYTE PTR [rsi+rdx*2],0x40
  423c6e:	mov    rax,rdx
  423c71:	je     0x423c83
  423c73:	add    rbx,0x1
  423c77:	movzx  edx,BYTE PTR [rbx]
  423c7a:	test   BYTE PTR [rsi+rdx*2],0x40
  423c7e:	mov    rax,rdx
  423c81:	jne    0x423c73
  423c83:	test   al,al
  423c85:	jne    0x423b80
  423c8b:	mov    rcx,QWORD PTR [rsp+0x20]
  423c90:	call   0x42a6c8
  423c95:	mov    rax,r12
  423c98:	add    rsp,0x38
  423c9c:	pop    rbx
  423c9d:	pop    rsi
  423c9e:	pop    rdi
  423c9f:	pop    rbp
  423ca0:	pop    r12
  423ca2:	pop    r13
  423ca4:	pop    r14
  423ca6:	pop    r15
  423ca8:	ret    
  423ca9:	nop    DWORD PTR [rax+0x0]
  423cb0:	test   r14d,r14d
  423cb3:	je     0x423ce0
  423cb5:	cmp    dl,0x22
  423cb8:	jne    0x423c2e
  423cbe:	xor    r14d,r14d
  423cc1:	jmp    0x423beb
  423cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cd0:	mov    edi,0x1
  423cd5:	jmp    0x423beb
  423cda:	nop    WORD PTR [rax+rax*1+0x0]
  423ce0:	cmp    dl,0x27
  423ce3:	je     0x423d10
  423ce5:	cmp    dl,0x22
  423ce8:	jne    0x423c2e
  423cee:	mov    r14d,0x1
  423cf4:	jmp    0x423beb
  423cf9:	nop    DWORD PTR [rax+0x0]
  423d00:	xor    r13d,r13d
  423d03:	jmp    0x423beb
  423d08:	nop    DWORD PTR [rax+rax*1+0x0]
  423d10:	mov    r13d,0x1
  423d16:	jmp    0x423beb
  423d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  423d20:	xor    edi,edi
  423d22:	xor    r14d,r14d
  423d25:	jmp    0x423c40
  423d2a:	mov    ecx,0x40
  423d2f:	mov    ebp,0x8
  423d34:	call   0x41a6e0
  423d39:	mov    r12,rax
  423d3c:	jmp    0x423bc9
  423d41:	xor    r12d,r12d
  423d44:	jmp    0x423c95
  423d49:	nop    DWORD PTR [rax+0x0]
  423d50:	push   r12
  423d52:	push   rbp
  423d53:	push   rdi
  423d54:	push   rsi
  423d55:	push   rbx
  423d56:	sub    rsp,0x20
  423d5a:	test   rdx,rdx
  423d5d:	mov    r12,rcx
  423d60:	mov    rdi,rdx
  423d63:	je     0x423dcd
  423d65:	mov    rbx,QWORD PTR [rcx]
  423d68:	mov    rbp,QWORD PTR [rip+0x22681]        # 0x4463f0
  423d6f:	test   rbx,rbx
  423d72:	jne    0x423da5
  423d74:	jmp    0x423dff
  423d79:	nop    DWORD PTR [rax+0x0]
  423d80:	cmp    al,0x22
  423d82:	je     0x423dbb
  423d84:	cmp    al,0x5c
  423d86:	sete   dl
  423d89:	cmp    al,0x27
  423d8b:	sete   al
  423d8e:	or     dl,al
  423d90:	jne    0x423dbb
  423d92:	mov    rdx,rdi
  423d95:	mov    ecx,esi
  423d97:	call   0x42a6d8
  423d9c:	cmp    eax,0xffffffff
  423d9f:	je     0x423dcd
  423da1:	add    rbx,0x1
  423da5:	movzx  eax,BYTE PTR [rbx]
  423da8:	test   al,al
  423daa:	je     0x423de0
  423dac:	movzx  r8d,al
  423db0:	movsx  esi,al
  423db3:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  423db9:	je     0x423d80
  423dbb:	mov    rdx,rdi
  423dbe:	mov    ecx,0x5c
  423dc3:	call   0x42a6d8
  423dc8:	cmp    eax,0xffffffff
  423dcb:	jne    0x423d92
  423dcd:	mov    eax,0x1
  423dd2:	add    rsp,0x20
  423dd6:	pop    rbx
  423dd7:	pop    rsi
  423dd8:	pop    rdi
  423dd9:	pop    rbp
  423dda:	pop    r12
  423ddc:	ret    
  423ddd:	nop    DWORD PTR [rax]
  423de0:	mov    rdx,rdi
  423de3:	mov    ecx,0xa
  423de8:	call   0x42a6d8
  423ded:	cmp    eax,0xffffffff
  423df0:	je     0x423dcd
  423df2:	add    r12,0x8
  423df6:	mov    rbx,QWORD PTR [r12]
  423dfa:	test   rbx,rbx
  423dfd:	jne    0x423da5
  423dff:	xor    eax,eax
  423e01:	jmp    0x423dd2
  423e03:	nop    DWORD PTR [rax]
  423e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e10:	push   r15
  423e12:	push   r14
  423e14:	push   r13
  423e16:	push   r12
  423e18:	push   rbp
  423e19:	push   rdi
  423e1a:	push   rsi
  423e1b:	push   rbx
  423e1c:	sub    rsp,0x48
  423e20:	xor    edi,edi
  423e22:	mov    rbp,rdx
  423e25:	mov    edx,DWORD PTR [rcx]
  423e27:	lea    ebx,[rdi+0x1]
  423e2a:	mov    r13,rcx
  423e2d:	mov    DWORD PTR [rsp+0x38],0x7d0
  423e35:	cmp    ebx,edx
  423e37:	jge    0x423e61
  423e39:	nop    DWORD PTR [rax+0x0]
  423e40:	mov    rax,QWORD PTR [rbp+0x0]
  423e44:	movsxd rsi,ebx
  423e47:	lea    r12,[rsi*8+0x0]
  423e4f:	mov    rcx,QWORD PTR [rax+rsi*8]
  423e53:	cmp    BYTE PTR [rcx],0x40
  423e56:	je     0x423e72
  423e58:	mov    edi,ebx
  423e5a:	lea    ebx,[rdi+0x1]
  423e5d:	cmp    ebx,edx
  423e5f:	jl     0x423e40
  423e61:	add    rsp,0x48
  423e65:	pop    rbx
  423e66:	pop    rsi
  423e67:	pop    rdi
  423e68:	pop    rbp
  423e69:	pop    r12
  423e6b:	pop    r13
  423e6d:	pop    r14
  423e6f:	pop    r15
  423e71:	ret    
  423e72:	sub    DWORD PTR [rsp+0x38],0x1
  423e77:	je     0x42407f
  423e7d:	lea    rdx,[rip+0x214d5]        # 0x445359
  423e84:	add    rcx,0x1
  423e88:	call   0x42a6e8
  423e8d:	test   rax,rax
  423e90:	mov    r14,rax
  423e93:	je     0x42402a
  423e99:	xor    edx,edx
  423e9b:	mov    r8d,0x2
  423ea1:	mov    rcx,rax
  423ea4:	call   0x42a6c0
  423ea9:	cmp    eax,0xffffffff
  423eac:	je     0x424022
  423eb2:	mov    rcx,r14
  423eb5:	call   0x42a6b8
  423eba:	movsxd r15,eax
  423ebd:	cmp    r15d,0xffffffff
  423ec1:	je     0x424022
  423ec7:	xor    r8d,r8d
  423eca:	xor    edx,edx
  423ecc:	mov    rcx,r14
  423ecf:	call   0x42a6c0
  423ed4:	cmp    eax,0xffffffff
  423ed7:	je     0x424022
  423edd:	lea    rcx,[r15+0x1]
  423ee1:	call   0x41a6e0
  423ee6:	mov    edx,0x1
  423eeb:	mov    r9,r14
  423eee:	mov    r8,r15
  423ef1:	mov    rcx,rax
  423ef4:	mov    QWORD PTR [rsp+0x20],rax
  423ef9:	call   0x42a6d0
  423efe:	cmp    r15,rax
  423f01:	mov    rdx,rax
  423f04:	je     0x423f20
  423f06:	mov    rcx,r14
  423f09:	mov    QWORD PTR [rsp+0x28],rax
  423f0e:	call   0x42a6f8
  423f13:	test   eax,eax
  423f15:	mov    rdx,QWORD PTR [rsp+0x28]
  423f1a:	jne    0x424022
  423f20:	mov    rax,QWORD PTR [rsp+0x20]
  423f25:	mov    BYTE PTR [rax+rdx*1],0x0
  423f29:	movzx  eax,BYTE PTR [rax]
  423f2c:	test   al,al
  423f2e:	je     0x423f6c
  423f30:	mov    rdx,QWORD PTR [rip+0x224b9]        # 0x4463f0
  423f37:	test   BYTE PTR [rdx+rax*2],0x40
  423f3b:	je     0x424035
  423f41:	mov    rdx,QWORD PTR [rsp+0x20]
  423f46:	jmp    0x423f61
  423f48:	nop    DWORD PTR [rax+rax*1+0x0]
  423f50:	mov    rcx,QWORD PTR [rip+0x22499]        # 0x4463f0
  423f57:	test   BYTE PTR [rcx+rax*2],0x40
  423f5b:	je     0x424035
  423f61:	add    rdx,0x1
  423f65:	movzx  eax,BYTE PTR [rdx]
  423f68:	test   al,al
  423f6a:	jne    0x423f50
  423f6c:	mov    ecx,0x8
  423f71:	call   0x41a6e0
  423f76:	mov    rcx,QWORD PTR [rbp+0x0]
  423f7a:	mov    QWORD PTR [rax],0x0
  423f81:	mov    r15,rax
  423f84:	call   0x423a50
  423f89:	xor    r10d,r10d
  423f8c:	mov    QWORD PTR [rbp+0x0],rax
  423f90:	xor    r9d,r9d
  423f93:	xor    r8d,r8d
  423f96:	movsxd rdx,DWORD PTR [r13+0x0]
  423f9a:	mov    rcx,rax
  423f9d:	mov    DWORD PTR [rsp+0x3c],r10d
  423fa2:	mov    QWORD PTR [rsp+0x30],r9
  423fa7:	mov    QWORD PTR [rsp+0x28],r8
  423fac:	lea    rdx,[r8+rdx*1+0x1]
  423fb1:	shl    rdx,0x3
  423fb5:	call   0x41a710
  423fba:	mov    edx,DWORD PTR [r13+0x0]
  423fbe:	mov    r8,QWORD PTR [rsp+0x28]
  423fc3:	mov    QWORD PTR [rbp+0x0],rax
  423fc7:	sub    edx,ebx
  423fc9:	add    rsi,r8
  423fcc:	movsxd rbx,edx
  423fcf:	lea    rcx,[rax+rsi*8]
  423fd3:	lea    rdx,[rax+r12*1+0x8]
  423fd8:	lea    r8,[rbx*8+0x0]
  423fe0:	mov    ebx,edi
  423fe2:	call   0x42a660
  423fe7:	mov    r9,QWORD PTR [rsp+0x30]
  423fec:	mov    rcx,r12
  423fef:	add    rcx,QWORD PTR [rbp+0x0]
  423ff3:	mov    rdx,r15
  423ff6:	mov    r8,r9
  423ff9:	call   0x42a668
  423ffe:	mov    eax,DWORD PTR [r13+0x0]
  424002:	mov    r10d,DWORD PTR [rsp+0x3c]
  424007:	mov    rcx,r15
  42400a:	lea    eax,[r10+rax*1-0x1]
  42400f:	mov    DWORD PTR [r13+0x0],eax
  424013:	call   0x42a6c8
  424018:	mov    rcx,QWORD PTR [rsp+0x20]
  42401d:	call   0x42a6c8
  424022:	mov    rcx,r14
  424025:	call   0x42a700
  42402a:	mov    edx,DWORD PTR [r13+0x0]
  42402e:	mov    edi,ebx
  424030:	jmp    0x423e5a
  424035:	mov    rcx,QWORD PTR [rsp+0x20]
  42403a:	call   0x423b30
  42403f:	mov    rcx,QWORD PTR [rbp+0x0]
  424043:	mov    rdx,QWORD PTR [rax]
  424046:	mov    r15,rax
  424049:	mov    QWORD PTR [rsp+0x28],rdx
  42404e:	call   0x423a50
  424053:	mov    rdx,QWORD PTR [rsp+0x28]
  424058:	mov    QWORD PTR [rbp+0x0],rax
  42405c:	test   rdx,rdx
  42405f:	je     0x4240a5
  424061:	xor    r8d,r8d
  424064:	add    r8,0x1
  424068:	cmp    QWORD PTR [r15+r8*8],0x0
  42406d:	lea    r9,[r8*8+0x0]
  424075:	jne    0x424064
  424077:	mov    r10d,r8d
  42407a:	jmp    0x423f96
  42407f:	mov    rbx,QWORD PTR [rax]
  424082:	call   QWORD PTR [rip+0x2d6c8]        # 0x451750
  424088:	lea    rdx,[rip+0x212a1]        # 0x445330
  42408f:	lea    rcx,[rax+0x60]
  424093:	mov    r8,rbx
  424096:	call   0x42a6e0
  42409b:	mov    ecx,0x1
  4240a0:	call   0x424130
  4240a5:	xor    r10d,r10d
  4240a8:	xor    r9d,r9d
  4240ab:	xor    r8d,r8d
  4240ae:	jmp    0x423f96
  4240b3:	nop    DWORD PTR [rax]
  4240b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4240c0:	test   rcx,rcx
  4240c3:	je     0x4240e1
  4240c5:	cmp    QWORD PTR [rcx],0x0
  4240c9:	je     0x4240e1
  4240cb:	add    rcx,0x8
  4240cf:	xor    eax,eax
  4240d1:	add    rcx,0x8
  4240d5:	add    eax,0x1
  4240d8:	cmp    QWORD PTR [rcx-0x8],0x0
  4240dd:	jne    0x4240d1
  4240df:	repz ret 
  4240e1:	xor    eax,eax
  4240e3:	ret    
  4240e4:	nop
  4240e5:	nop
  4240e6:	nop
  4240e7:	nop
  4240e8:	nop
  4240e9:	nop
  4240ea:	nop
  4240eb:	nop
  4240ec:	nop
  4240ed:	nop
  4240ee:	nop
  4240ef:	nop
  4240f0:	test   edx,edx
  4240f2:	je     0x424124
  4240f4:	lea    eax,[rdx-0x1]
  4240f7:	lea    rdx,[rip+0x21282]        # 0x445380
  4240fe:	lea    r9,[rcx+rax*1+0x1]
  424103:	mov    eax,r8d
  424106:	shr    r8d,0x18
  42410a:	xor    r8b,BYTE PTR [rcx]
  42410d:	shl    eax,0x8
  424110:	add    rcx,0x1
  424114:	movzx  r8d,r8b
  424118:	xor    eax,DWORD PTR [rdx+r8*4]
  42411c:	cmp    rcx,r9
  42411f:	mov    r8d,eax
  424122:	jne    0x424103
  424124:	mov    eax,r8d
  424127:	ret    
  424128:	nop
  424129:	nop
  42412a:	nop
  42412b:	nop
  42412c:	nop
  42412d:	nop
  42412e:	nop
  42412f:	nop
  424130:	sub    rsp,0x38
  424134:	mov    rax,QWORD PTR [rip+0x2cb05]        # 0x450c40
  42413b:	test   rax,rax
  42413e:	je     0x42414a
  424140:	mov    DWORD PTR [rsp+0x2c],ecx
  424144:	call   rax
  424146:	mov    ecx,DWORD PTR [rsp+0x2c]
  42414a:	call   0x42a708
  42414f:	nop
  424150:	jmp    QWORD PTR [rip+0x2d8aa]        # 0x451a00
  424156:	nop
  424157:	nop
  424158:	jmp    QWORD PTR [rip+0x2d89a]        # 0x4519f8
  42415e:	nop
  42415f:	nop
  424160:	jmp    QWORD PTR [rip+0x2d88a]        # 0x4519f0
  424166:	nop
  424167:	nop
  424168:	jmp    QWORD PTR [rip+0x2d87a]        # 0x4519e8
  42416e:	nop
  42416f:	nop
  424170:	jmp    QWORD PTR [rip+0x2d86a]        # 0x4519e0
  424176:	nop
  424177:	nop
  424178:	jmp    QWORD PTR [rip+0x2d85a]        # 0x4519d8
  42417e:	nop
  42417f:	nop
  424180:	jmp    QWORD PTR [rip+0x2d84a]        # 0x4519d0
  424186:	nop
  424187:	nop
  424188:	jmp    QWORD PTR [rip+0x2d83a]        # 0x4519c8
  42418e:	nop
  42418f:	nop
  424190:	jmp    QWORD PTR [rip+0x2d82a]        # 0x4519c0
  424196:	nop
  424197:	nop
  424198:	jmp    QWORD PTR [rip+0x2d81a]        # 0x4519b8
  42419e:	nop
  42419f:	nop
  4241a0:	jmp    QWORD PTR [rip+0x2d80a]        # 0x4519b0
  4241a6:	nop
  4241a7:	nop
  4241a8:	jmp    QWORD PTR [rip+0x2d7fa]        # 0x4519a8
  4241ae:	nop
  4241af:	nop
  4241b0:	jmp    QWORD PTR [rip+0x2d7ea]        # 0x4519a0
  4241b6:	nop
  4241b7:	nop
  4241b8:	jmp    QWORD PTR [rip+0x2d7da]        # 0x451998
  4241be:	nop
  4241bf:	nop
  4241c0:	jmp    QWORD PTR [rip+0x2d7ca]        # 0x451990
  4241c6:	nop
  4241c7:	nop
  4241c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4241d0:	jmp    QWORD PTR [rip+0x2d882]        # 0x451a58
  4241d6:	nop
  4241d7:	nop
  4241d8:	jmp    QWORD PTR [rip+0x2d872]        # 0x451a50
  4241de:	nop
  4241df:	nop
  4241e0:	jmp    QWORD PTR [rip+0x2d862]        # 0x451a48
  4241e6:	nop
  4241e7:	nop
  4241e8:	jmp    QWORD PTR [rip+0x2d852]        # 0x451a40
  4241ee:	nop
  4241ef:	nop
  4241f0:	jmp    QWORD PTR [rip+0x2d842]        # 0x451a38
  4241f6:	nop
  4241f7:	nop
  4241f8:	jmp    QWORD PTR [rip+0x2d832]        # 0x451a30
  4241fe:	nop
  4241ff:	nop
  424200:	push   rbx
  424201:	sub    rsp,0x30
  424205:	mov    rbx,rcx
  424208:	mov    rcx,QWORD PTR [rip+0x2ca39]        # 0x450c48
  42420f:	call   0x4247b0
  424214:	cmp    rax,0xffffffffffffffff
  424218:	mov    QWORD PTR [rsp+0x20],rax
  42421d:	je     0x424295
  42421f:	mov    ecx,0x8
  424224:	call   0x42a740
  424229:	mov    rcx,QWORD PTR [rip+0x2ca18]        # 0x450c48
  424230:	call   0x4247b0
  424235:	mov    rcx,QWORD PTR [rip+0x2ca14]        # 0x450c50
  42423c:	mov    QWORD PTR [rsp+0x20],rax
  424241:	call   0x4247b0
  424246:	lea    rdx,[rsp+0x20]
  42424b:	lea    r8,[rsp+0x28]
  424250:	mov    rcx,rbx
  424253:	mov    QWORD PTR [rsp+0x28],rax
  424258:	call   0x42a798
  42425d:	mov    rcx,QWORD PTR [rsp+0x20]
  424262:	mov    rbx,rax
  424265:	call   0x4247c0
  42426a:	mov    rcx,QWORD PTR [rsp+0x28]
  42426f:	mov    QWORD PTR [rip+0x2c9d2],rax        # 0x450c48
  424276:	call   0x4247c0
  42427b:	mov    ecx,0x8
  424280:	mov    QWORD PTR [rip+0x2c9c9],rax        # 0x450c50
  424287:	call   0x42a720
  42428c:	mov    rax,rbx
  42428f:	add    rsp,0x30
  424293:	pop    rbx
  424294:	ret    
  424295:	mov    rax,QWORD PTR [rip+0x22054]        # 0x4462f0
  42429c:	mov    rcx,rbx
  42429f:	call   QWORD PTR [rax]
  4242a1:	add    rsp,0x30
  4242a5:	pop    rbx
  4242a6:	ret    
  4242a7:	nop    WORD PTR [rax+rax*1+0x0]
  4242b0:	sub    rsp,0x28
  4242b4:	call   0x424200
  4242b9:	test   rax,rax
  4242bc:	sete   al
  4242bf:	movzx  eax,al
  4242c2:	neg    eax
  4242c4:	add    rsp,0x28
  4242c8:	ret    
  4242c9:	nop
  4242ca:	nop
  4242cb:	nop
  4242cc:	nop
  4242cd:	nop
  4242ce:	nop
  4242cf:	nop
  4242d0:	sub    rsp,0x28
  4242d4:	mov    rax,QWORD PTR [rip+0xb0a5]        # 0x42f380
  4242db:	mov    rax,QWORD PTR [rax]
  4242de:	test   rax,rax
  4242e1:	je     0x424300
  4242e3:	call   rax
  4242e5:	mov    rax,QWORD PTR [rip+0xb094]        # 0x42f380
  4242ec:	lea    rdx,[rax+0x8]
  4242f0:	mov    rax,QWORD PTR [rax+0x8]
  4242f4:	mov    QWORD PTR [rip+0xb085],rdx        # 0x42f380
  4242fb:	test   rax,rax
  4242fe:	jne    0x4242e3
  424300:	add    rsp,0x28
  424304:	ret    
  424305:	nop
  424306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424310:	push   rsi
  424311:	push   rbx
  424312:	sub    rsp,0x28
  424316:	mov    rsi,QWORD PTR [rip+0x21f43]        # 0x446260
  42431d:	mov    rax,QWORD PTR [rsi]
  424320:	cmp    eax,0xffffffff
  424323:	mov    ebx,eax
  424325:	je     0x424350
  424327:	test   ebx,ebx
  424329:	je     0x42433a
  42432b:	nop    DWORD PTR [rax+rax*1+0x0]
  424330:	mov    eax,ebx
  424332:	call   QWORD PTR [rsi+rax*8]
  424335:	sub    ebx,0x1
  424338:	jne    0x424330
  42433a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4242d0
  424341:	add    rsp,0x28
  424345:	pop    rbx
  424346:	pop    rsi
  424347:	jmp    0x4242b0
  42434c:	nop    DWORD PTR [rax+0x0]
  424350:	xor    ebx,ebx
  424352:	jmp    0x424356
  424354:	mov    ebx,eax
  424356:	lea    edx,[rbx+0x1]
  424359:	cmp    QWORD PTR [rsi+rdx*8],0x0
  42435e:	mov    rax,rdx
  424361:	jne    0x424354
  424363:	jmp    0x424327
  424365:	nop
  424366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424370:	mov    eax,DWORD PTR [rip+0x2b46a]        # 0x44f7e0
  424376:	test   eax,eax
  424378:	je     0x424380
  42437a:	repz ret 
  42437c:	nop    DWORD PTR [rax+0x0]
  424380:	mov    DWORD PTR [rip+0x2b456],0x1        # 0x44f7e0
  42438a:	jmp    0x424310
  42438c:	nop
  42438d:	nop
  42438e:	nop
  42438f:	nop
  424390:	mov    rax,QWORD PTR [rip+0x2d3c1]        # 0x451758
  424397:	rex.W jmp rax
  42439a:	nop
  42439b:	nop
  42439c:	nop
  42439d:	nop
  42439e:	nop
  42439f:	nop
  4243a0:	xor    eax,eax
  4243a2:	ret    
  4243a3:	nop
  4243a4:	nop
  4243a5:	nop
  4243a6:	nop
  4243a7:	nop
  4243a8:	nop
  4243a9:	nop
  4243aa:	nop
  4243ab:	nop
  4243ac:	nop
  4243ad:	nop
  4243ae:	nop
  4243af:	nop
  4243b0:	push   r12
  4243b2:	push   rbp
  4243b3:	push   rdi
  4243b4:	push   rsi
  4243b5:	push   rbx
  4243b6:	sub    rsp,0x40
  4243ba:	mov    rbx,QWORD PTR [rip+0xb05f]        # 0x42f420
  4243c1:	movabs rax,0x2b992ddfa232
  4243cb:	mov    QWORD PTR [rsp+0x20],0x0
  4243d4:	cmp    rbx,rax
  4243d7:	je     0x4243f0
  4243d9:	not    rbx
  4243dc:	mov    QWORD PTR [rip+0xb04d],rbx        # 0x42f430
  4243e3:	add    rsp,0x40
  4243e7:	pop    rbx
  4243e8:	pop    rsi
  4243e9:	pop    rdi
  4243ea:	pop    rbp
  4243eb:	pop    r12
  4243ed:	ret    
  4243ee:	xchg   ax,ax
  4243f0:	lea    rcx,[rsp+0x20]
  4243f5:	call   QWORD PTR [rip+0x2d21d]        # 0x451618
  4243fb:	mov    r12,QWORD PTR [rsp+0x20]
  424400:	call   QWORD PTR [rip+0x2d1ca]        # 0x4515d0
  424406:	mov    ebp,eax
  424408:	call   QWORD PTR [rip+0x2d1ca]        # 0x4515d8
  42440e:	mov    edi,eax
  424410:	call   QWORD PTR [rip+0x2d212]        # 0x451628
  424416:	lea    rcx,[rsp+0x30]
  42441b:	mov    esi,eax
  42441d:	call   QWORD PTR [rip+0x2d24d]        # 0x451670
  424423:	xor    r12,QWORD PTR [rsp+0x30]
  424428:	mov    edx,edi
  42442a:	movabs rax,0xffffffffffff
  424434:	xor    rbp,r12
  424437:	mov    rdi,rbp
  42443a:	xor    rdi,rdx
  42443d:	mov    edx,esi
  42443f:	xor    rdi,rdx
  424442:	mov    rsi,rdi
  424445:	and    rsi,rax
  424448:	cmp    rsi,rbx
  42444b:	je     0x424470
  42444d:	mov    rax,rsi
  424450:	not    rax
  424453:	mov    QWORD PTR [rip+0xafc6],rsi        # 0x42f420
  42445a:	mov    QWORD PTR [rip+0xafcf],rax        # 0x42f430
  424461:	add    rsp,0x40
  424465:	pop    rbx
  424466:	pop    rsi
  424467:	pop    rdi
  424468:	pop    rbp
  424469:	pop    r12
  42446b:	ret    
  42446c:	nop    DWORD PTR [rax+0x0]
  424470:	movabs rax,0xffffd466d2205dcc
  42447a:	movabs rsi,0x2b992ddfa233
  424484:	jmp    0x424453
  424486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424490:	push   rbp
  424491:	push   rsi
  424492:	push   rbx
  424493:	mov    rbp,rsp
  424496:	sub    rsp,0x70
  42449a:	mov    rsi,rcx
  42449d:	lea    rcx,[rip+0x2b39c]        # 0x44f840
  4244a4:	call   QWORD PTR [rip+0x2d1e6]        # 0x451690
  4244aa:	mov    rbx,QWORD PTR [rip+0x2b487]        # 0x44f938
  4244b1:	xor    r8d,r8d
  4244b4:	lea    rdx,[rbp-0x28]
  4244b8:	mov    rcx,rbx
  4244bb:	call   QWORD PTR [rip+0x2d1d7]        # 0x451698
  4244c1:	test   rax,rax
  4244c4:	mov    r9,rax
  4244c7:	je     0x424570
  4244cd:	lea    rax,[rbp-0x20]
  4244d1:	mov    QWORD PTR [rsp+0x38],0x0
  4244da:	mov    r8,rbx
  4244dd:	mov    rdx,QWORD PTR [rbp-0x28]
  4244e1:	xor    ecx,ecx
  4244e3:	mov    QWORD PTR [rsp+0x30],rax
  4244e8:	lea    rax,[rbp-0x18]
  4244ec:	mov    QWORD PTR [rsp+0x28],rax
  4244f1:	lea    rax,[rip+0x2b348]        # 0x44f840
  4244f8:	mov    QWORD PTR [rsp+0x20],rax
  4244fd:	call   QWORD PTR [rip+0x2d19d]        # 0x4516a0
  424503:	mov    rax,QWORD PTR [rip+0x2b42e]        # 0x44f938
  42450a:	xor    ecx,ecx
  42450c:	mov    QWORD PTR [rip+0x2b3ad],rsi        # 0x44f8c0
  424513:	mov    DWORD PTR [rip+0x2b823],0xc0000409        # 0x44fd40
  42451d:	mov    DWORD PTR [rip+0x2b81d],0x1        # 0x44fd44
  424527:	mov    QWORD PTR [rip+0x2b822],rax        # 0x44fd50
  42452e:	mov    rax,QWORD PTR [rip+0xaeeb]        # 0x42f420
  424535:	mov    QWORD PTR [rbp-0x10],rax
  424539:	mov    rax,QWORD PTR [rip+0xaef0]        # 0x42f430
  424540:	mov    QWORD PTR [rbp-0x8],rax
  424544:	call   QWORD PTR [rip+0x2d176]        # 0x4516c0
  42454a:	lea    rcx,[rip+0x2162f]        # 0x445b80
  424551:	call   QWORD PTR [rip+0x2d191]        # 0x4516e8
  424557:	call   QWORD PTR [rip+0x2d06b]        # 0x4515c8
  42455d:	mov    edx,0xc0000409
  424562:	mov    rcx,rax
  424565:	call   QWORD PTR [rip+0x2d16d]        # 0x4516d8
  42456b:	call   0x42a718
  424570:	mov    rax,QWORD PTR [rbp+0x18]
  424574:	mov    QWORD PTR [rip+0x2b3bd],rax        # 0x44f938
  42457b:	lea    rax,[rbp+0x8]
  42457f:	mov    QWORD PTR [rip+0x2b352],rax        # 0x44f8d8
  424586:	jmp    0x424503
  42458b:	nop
  42458c:	nop
  42458d:	nop
  42458e:	nop
  42458f:	nop
  424590:	sub    rsp,0x28
  424594:	test   edx,edx
  424596:	je     0x4245b0
  424598:	cmp    edx,0x3
  42459b:	je     0x4245b0
  42459d:	mov    eax,0x1
  4245a2:	add    rsp,0x28
  4245a6:	ret    
  4245a7:	nop    WORD PTR [rax+rax*1+0x0]
  4245b0:	call   0x4252a0
  4245b5:	mov    eax,0x1
  4245ba:	add    rsp,0x28
  4245be:	ret    
  4245bf:	nop
  4245c0:	push   rsi
  4245c1:	push   rbx
  4245c2:	sub    rsp,0x28
  4245c6:	mov    rax,QWORD PTR [rip+0x21c43]        # 0x446210
  4245cd:	cmp    DWORD PTR [rax],0x2
  4245d0:	je     0x4245d8
  4245d2:	mov    DWORD PTR [rax],0x2
  4245d8:	cmp    edx,0x2
  4245db:	je     0x4245f0
  4245dd:	cmp    edx,0x1
  4245e0:	je     0x424622
  4245e2:	mov    eax,0x1
  4245e7:	add    rsp,0x28
  4245eb:	pop    rbx
  4245ec:	pop    rsi
  4245ed:	ret    
  4245ee:	xchg   ax,ax
  4245f0:	lea    rbx,[rip+0x2ea69]        # 0x453060
  4245f7:	lea    rsi,[rip+0x2ea62]        # 0x453060
  4245fe:	cmp    rbx,rsi
  424601:	je     0x4245e2
  424603:	mov    rax,QWORD PTR [rbx]
  424606:	test   rax,rax
  424609:	je     0x42460d
  42460b:	call   rax
  42460d:	add    rbx,0x8
  424611:	cmp    rbx,rsi
  424614:	jne    0x424603
  424616:	mov    eax,0x1
  42461b:	add    rsp,0x28
  42461f:	pop    rbx
  424620:	pop    rsi
  424621:	ret    
  424622:	call   0x4252a0
  424627:	jmp    0x4245e2
  424629:	nop    DWORD PTR [rax+0x0]
  424630:	xor    eax,eax
  424632:	ret    
  424633:	nop
  424634:	nop
  424635:	nop
  424636:	nop
  424637:	nop
  424638:	nop
  424639:	nop
  42463a:	nop
  42463b:	nop
  42463c:	nop
  42463d:	nop
  42463e:	nop
  42463f:	nop
  424640:	sub    rsp,0x58
  424644:	mov    rax,QWORD PTR [rip+0x2b7d5]        # 0x44fe20
  42464b:	test   rax,rax
  42464e:	je     0x42467c
  424650:	movsd  xmm0,QWORD PTR [rsp+0x80]
  424659:	mov    DWORD PTR [rsp+0x20],ecx
  42465d:	lea    rcx,[rsp+0x20]
  424662:	mov    QWORD PTR [rsp+0x28],rdx
  424667:	movsd  QWORD PTR [rsp+0x30],xmm2
  42466d:	movsd  QWORD PTR [rsp+0x38],xmm3
  424673:	movsd  QWORD PTR [rsp+0x40],xmm0
  424679:	call   rax
  42467b:	nop
  42467c:	add    rsp,0x58
  424680:	ret    
  424681:	nop    DWORD PTR [rax+rax*1+0x0]
  424686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424690:	mov    QWORD PTR [rip+0x2b789],rcx        # 0x44fe20
  424697:	jmp    0x42a770
  42469c:	nop    DWORD PTR [rax+0x0]
  4246a0:	push   rsi
  4246a1:	push   rbx
  4246a2:	sub    rsp,0x78
  4246a6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4246ab:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4246b0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4246b6:	cmp    DWORD PTR [rcx],0x6
  4246b9:	ja     0x424790
  4246bf:	mov    edx,DWORD PTR [rcx]
  4246c1:	lea    rax,[rip+0x215fc]        # 0x445cc4
  4246c8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4246cc:	add    rax,rdx
  4246cf:	jmp    rax
  4246d1:	lea    rbx,[rip+0x214c8]        # 0x445ba0
  4246d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4246e0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4246e6:	mov    rsi,QWORD PTR [rcx+0x8]
  4246ea:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4246ef:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4246f4:	call   0x42a788
  4246f9:	movsd  QWORD PTR [rsp+0x30],xmm8
  424700:	lea    rcx,[rax+0x60]
  424704:	lea    rdx,[rip+0x2158d]        # 0x445c98
  42470b:	movsd  QWORD PTR [rsp+0x28],xmm7
  424711:	mov    r9,rsi
  424714:	mov    r8,rbx
  424717:	movsd  QWORD PTR [rsp+0x20],xmm6
  42471d:	call   0x42a6e0
  424722:	nop
  424723:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  424728:	xor    eax,eax
  42472a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  42472f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  424735:	add    rsp,0x78
  424739:	pop    rbx
  42473a:	pop    rsi
  42473b:	ret    
  42473c:	nop    DWORD PTR [rax+0x0]
  424740:	lea    rbx,[rip+0x21478]        # 0x445bbf
  424747:	jmp    0x4246e0
  424749:	nop    DWORD PTR [rax+0x0]
  424750:	lea    rbx,[rip+0x21489]        # 0x445be0
  424757:	jmp    0x4246e0
  424759:	nop    DWORD PTR [rax+0x0]
  424760:	lea    rbx,[rip+0x214e9]        # 0x445c50
  424767:	jmp    0x4246e0
  42476c:	nop    DWORD PTR [rax+0x0]
  424770:	lea    rbx,[rip+0x214b1]        # 0x445c28
  424777:	jmp    0x4246e0
  42477c:	nop    DWORD PTR [rax+0x0]
  424780:	lea    rbx,[rip+0x21479]        # 0x445c00
  424787:	jmp    0x4246e0
  42478c:	nop    DWORD PTR [rax+0x0]
  424790:	lea    rbx,[rip+0x214ef]        # 0x445c86
  424797:	jmp    0x4246e0
  42479c:	nop
  42479d:	nop
  42479e:	nop
  42479f:	nop
  4247a0:	fninit 
  4247a2:	ret    
  4247a3:	nop
  4247a4:	nop
  4247a5:	nop
  4247a6:	nop
  4247a7:	nop
  4247a8:	nop
  4247a9:	nop
  4247aa:	nop
  4247ab:	nop
  4247ac:	nop
  4247ad:	nop
  4247ae:	nop
  4247af:	nop
  4247b0:	mov    rax,rcx
  4247b3:	ret    
  4247b4:	xchg   ax,ax
  4247b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4247c0:	mov    rax,rcx
  4247c3:	ret    
  4247c4:	nop
  4247c5:	nop
  4247c6:	nop
  4247c7:	nop
  4247c8:	nop
  4247c9:	nop
  4247ca:	nop
  4247cb:	nop
  4247cc:	nop
  4247cd:	nop
  4247ce:	nop
  4247cf:	nop
  4247d0:	push   rsi
  4247d1:	push   rbx
  4247d2:	sub    rsp,0x38
  4247d6:	lea    rax,[rsp+0x58]
  4247db:	mov    rbx,rcx
  4247de:	mov    QWORD PTR [rsp+0x58],rdx
  4247e3:	mov    QWORD PTR [rsp+0x60],r8
  4247e8:	mov    QWORD PTR [rsp+0x68],r9
  4247ed:	mov    QWORD PTR [rsp+0x28],rax
  4247f2:	call   0x42a788
  4247f7:	lea    rcx,[rip+0x214e2]        # 0x445ce0
  4247fe:	lea    r9,[rax+0x60]
  424802:	mov    r8d,0x1b
  424808:	mov    edx,0x1
  42480d:	call   0x42a6b0
  424812:	mov    rsi,QWORD PTR [rsp+0x28]
  424817:	call   0x42a788
  42481c:	lea    rcx,[rax+0x60]
  424820:	mov    rdx,rbx
  424823:	mov    r8,rsi
  424826:	call   0x42a5d0
  42482b:	call   0x42a718
  424830:	nop
  424831:	nop    DWORD PTR [rax+rax*1+0x0]
  424836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424840:	push   r13
  424842:	push   r12
  424844:	push   rbp
  424845:	push   rdi
  424846:	push   rsi
  424847:	push   rbx
  424848:	sub    rsp,0x58
  42484c:	movsxd rbp,DWORD PTR [rip+0x2b5f1]        # 0x44fe44
  424853:	mov    rbx,rcx
  424856:	mov    rsi,rdx
  424859:	mov    rdi,r8
  42485c:	test   ebp,ebp
  42485e:	jle    0x42495a
  424864:	mov    rax,QWORD PTR [rip+0x2b5dd]        # 0x44fe48
  42486b:	xor    r9d,r9d
  42486e:	add    rax,0x8
  424872:	mov    r10,QWORD PTR [rax]
  424875:	cmp    rbx,r10
  424878:	jb     0x42488e
  42487a:	mov    rdx,QWORD PTR [rax+0x8]
  42487e:	mov    r11d,DWORD PTR [rdx+0x8]
  424882:	add    r10,r11
  424885:	cmp    rbx,r10
  424888:	jb     0x424940
  42488e:	add    r9d,0x1
  424892:	add    rax,0x18
  424896:	cmp    r9d,ebp
  424899:	jne    0x424872
  42489b:	mov    rcx,rbx
  42489e:	call   0x4254b0
  4248a3:	test   rax,rax
  4248a6:	mov    r12,rax
  4248a9:	je     0x424992
  4248af:	lea    rbp,[rbp+rbp*2+0x0]
  4248b4:	shl    rbp,0x3
  4248b8:	mov    r13,rbp
  4248bb:	add    r13,QWORD PTR [rip+0x2b586]        # 0x44fe48
  4248c2:	mov    QWORD PTR [r13+0x10],rax
  4248c6:	mov    DWORD PTR [r13+0x0],0x0
  4248ce:	call   0x4255d0
  4248d3:	mov    edx,DWORD PTR [r12+0xc]
  4248d8:	mov    r8d,0x30
  4248de:	add    rax,rdx
  4248e1:	lea    rdx,[rsp+0x20]
  4248e6:	mov    QWORD PTR [r13+0x8],rax
  4248ea:	mov    rax,QWORD PTR [rip+0x2b557]        # 0x44fe48
  4248f1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4248f6:	call   QWORD PTR [rip+0x2cdfc]        # 0x4516f8
  4248fc:	test   rax,rax
  4248ff:	je     0x424975
  424901:	mov    eax,DWORD PTR [rsp+0x44]
  424905:	lea    edx,[rax-0x4]
  424908:	and    edx,0xfffffffb
  42490b:	je     0x424939
  42490d:	sub    eax,0x40
  424910:	and    eax,0xffffffbf
  424913:	je     0x424939
  424915:	mov    r9,rbp
  424918:	add    r9,QWORD PTR [rip+0x2b529]        # 0x44fe48
  42491f:	mov    r8d,0x40
  424925:	mov    rdx,QWORD PTR [rsp+0x38]
  42492a:	mov    rcx,QWORD PTR [rsp+0x20]
  42492f:	call   QWORD PTR [rip+0x2cdbb]        # 0x4516f0
  424935:	test   eax,eax
  424937:	je     0x424961
  424939:	add    DWORD PTR [rip+0x2b504],0x1        # 0x44fe44
  424940:	mov    r8,rdi
  424943:	mov    rdx,rsi
  424946:	mov    rcx,rbx
  424949:	add    rsp,0x58
  42494d:	pop    rbx
  42494e:	pop    rsi
  42494f:	pop    rdi
  424950:	pop    rbp
  424951:	pop    r12
  424953:	pop    r13
  424955:	jmp    0x42a668
  42495a:	xor    ebp,ebp
  42495c:	jmp    0x42489b
  424961:	call   QWORD PTR [rip+0x2cc81]        # 0x4515e8
  424967:	lea    rcx,[rip+0x213ea]        # 0x445d58
  42496e:	mov    edx,eax
  424970:	call   0x4247d0
  424975:	mov    rax,QWORD PTR [rip+0x2b4cc]        # 0x44fe48
  42497c:	mov    edx,DWORD PTR [r12+0x8]
  424981:	lea    rcx,[rip+0x21398]        # 0x445d20
  424988:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42498d:	call   0x4247d0
  424992:	lea    rcx,[rip+0x21367]        # 0x445d00
  424999:	mov    rdx,rbx
  42499c:	call   0x4247d0
  4249a1:	nop
  4249a2:	nop    DWORD PTR [rax+0x0]
  4249a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249b0:	push   rbp
  4249b1:	push   r14
  4249b3:	push   r13
  4249b5:	push   r12
  4249b7:	push   rdi
  4249b8:	push   rsi
  4249b9:	push   rbx
  4249ba:	mov    rbp,rsp
  4249bd:	sub    rsp,0x60
  4249c1:	mov    ebx,DWORD PTR [rip+0x2b479]        # 0x44fe40
  4249c7:	test   ebx,ebx
  4249c9:	je     0x4249e0
  4249cb:	mov    rsp,rbp
  4249ce:	pop    rbx
  4249cf:	pop    rsi
  4249d0:	pop    rdi
  4249d1:	pop    r12
  4249d3:	pop    r13
  4249d5:	pop    r14
  4249d7:	pop    rbp
  4249d8:	ret    
  4249d9:	nop    DWORD PTR [rax+0x0]
  4249e0:	mov    DWORD PTR [rip+0x2b456],0x1        # 0x44fe40
  4249ea:	call   0x425500
  4249ef:	cdqe   
  4249f1:	lea    rax,[rax+rax*2]
  4249f5:	lea    rax,[rax*8+0x1e]
  4249fd:	and    rax,0xfffffffffffffff0
  424a01:	call   0x425730
  424a06:	mov    rsi,QWORD PTR [rip+0x21863]        # 0x446270
  424a0d:	mov    rbx,QWORD PTR [rip+0x2186c]        # 0x446280
  424a14:	sub    rsp,rax
  424a17:	mov    DWORD PTR [rip+0x2b423],0x0        # 0x44fe44
  424a21:	lea    rax,[rsp+0x20]
  424a26:	mov    QWORD PTR [rip+0x2b41b],rax        # 0x44fe48
  424a2d:	mov    rax,rsi
  424a30:	sub    rax,rbx
  424a33:	cmp    rax,0x7
  424a37:	jle    0x4249cb
  424a39:	cmp    rax,0xb
  424a3d:	jle    0x424a65
  424a3f:	mov    r11d,DWORD PTR [rbx]
  424a42:	test   r11d,r11d
  424a45:	jne    0x424b90
  424a4b:	mov    r10d,DWORD PTR [rbx+0x4]
  424a4f:	test   r10d,r10d
  424a52:	jne    0x424b90
  424a58:	mov    r9d,DWORD PTR [rbx+0x8]
  424a5c:	test   r9d,r9d
  424a5f:	jne    0x424a7c
  424a61:	add    rbx,0xc
  424a65:	mov    r8d,DWORD PTR [rbx]
  424a68:	test   r8d,r8d
  424a6b:	jne    0x424b90
  424a71:	mov    ecx,DWORD PTR [rbx+0x4]
  424a74:	test   ecx,ecx
  424a76:	jne    0x424b90
  424a7c:	mov    edx,DWORD PTR [rbx+0x8]
  424a7f:	cmp    edx,0x1
  424a82:	jne    0x424c9c
  424a88:	add    rbx,0xc
  424a8c:	cmp    rbx,rsi
  424a8f:	jae    0x4249cb
  424a95:	mov    r12,QWORD PTR [rip+0x21804]        # 0x4462a0
  424a9c:	lea    r13,[rbp-0x30]
  424aa0:	movabs r14,0xffffffff00000000
  424aaa:	mov    ecx,DWORD PTR [rbx+0x4]
  424aad:	mov    eax,DWORD PTR [rbx]
  424aaf:	movzx  edx,BYTE PTR [rbx+0x8]
  424ab3:	add    rax,r12
  424ab6:	add    rcx,r12
  424ab9:	cmp    edx,0x10
  424abc:	mov    r8,QWORD PTR [rax]
  424abf:	je     0x424c06
  424ac5:	jbe    0x424bcd
  424acb:	cmp    edx,0x20
  424ace:	je     0x424c4f
  424ad4:	cmp    edx,0x40
  424ad7:	jne    0x424c3b
  424add:	sub    r8,rax
  424ae0:	mov    rdx,r13
  424ae3:	mov    rdi,r13
  424ae6:	mov    rax,r8
  424ae9:	add    rax,QWORD PTR [rcx]
  424aec:	mov    r8d,0x8
  424af2:	mov    QWORD PTR [rbp-0x30],rax
  424af6:	call   0x424840
  424afb:	add    rbx,0xc
  424aff:	cmp    rbx,rsi
  424b02:	jb     0x424aaa
  424b04:	mov    eax,DWORD PTR [rip+0x2b33a]        # 0x44fe44
  424b0a:	xor    ebx,ebx
  424b0c:	xor    esi,esi
  424b0e:	test   eax,eax
  424b10:	jle    0x4249cb
  424b16:	mov    r14,QWORD PTR [rip+0x2cbdb]        # 0x4516f8
  424b1d:	lea    r13,[rbp-0x34]
  424b21:	mov    r12,QWORD PTR [rip+0x2cbc8]        # 0x4516f0
  424b28:	jmp    0x424b43
  424b2a:	nop    WORD PTR [rax+rax*1+0x0]
  424b30:	add    esi,0x1
  424b33:	add    rbx,0x18
  424b37:	cmp    esi,DWORD PTR [rip+0x2b307]        # 0x44fe44
  424b3d:	jge    0x4249cb
  424b43:	mov    rax,rbx
  424b46:	add    rax,QWORD PTR [rip+0x2b2fb]        # 0x44fe48
  424b4d:	mov    edx,DWORD PTR [rax]
  424b4f:	test   edx,edx
  424b51:	je     0x424b30
  424b53:	mov    rcx,QWORD PTR [rax+0x8]
  424b57:	mov    r8d,0x30
  424b5d:	mov    rdx,rdi
  424b60:	call   r14
  424b63:	test   rax,rax
  424b66:	je     0x424c7e
  424b6c:	mov    rax,QWORD PTR [rip+0x2b2d5]        # 0x44fe48
  424b73:	mov    r9,r13
  424b76:	mov    rdx,QWORD PTR [rbp-0x18]
  424b7a:	mov    rcx,QWORD PTR [rbp-0x30]
  424b7e:	mov    r8d,DWORD PTR [rax+rbx*1]
  424b82:	call   r12
  424b85:	jmp    0x424b30
  424b87:	nop    WORD PTR [rax+rax*1+0x0]
  424b90:	cmp    rbx,rsi
  424b93:	jae    0x4249cb
  424b99:	mov    r12,QWORD PTR [rip+0x21700]        # 0x4462a0
  424ba0:	lea    rdi,[rbp-0x30]
  424ba4:	mov    ecx,DWORD PTR [rbx+0x4]
  424ba7:	mov    eax,DWORD PTR [rbx]
  424ba9:	mov    r8d,0x4
  424baf:	mov    rdx,rdi
  424bb2:	add    rbx,0x8
  424bb6:	add    rcx,r12
  424bb9:	add    eax,DWORD PTR [rcx]
  424bbb:	mov    DWORD PTR [rbp-0x30],eax
  424bbe:	call   0x424840
  424bc3:	cmp    rbx,rsi
  424bc6:	jb     0x424ba4
  424bc8:	jmp    0x424b04
  424bcd:	cmp    edx,0x8
  424bd0:	jne    0x424c3b
  424bd2:	movzx  edx,BYTE PTR [rcx]
  424bd5:	mov    rdi,r13
  424bd8:	mov    r10,rdx
  424bdb:	or     r10,0xffffffffffffff00
  424be2:	test   dl,dl
  424be4:	cmovs  rdx,r10
  424be8:	sub    rdx,rax
  424beb:	lea    rax,[r8+rdx*1]
  424bef:	mov    r8d,0x1
  424bf5:	mov    rdx,r13
  424bf8:	mov    QWORD PTR [rbp-0x30],rax
  424bfc:	call   0x424840
  424c01:	jmp    0x424afb
  424c06:	movzx  edx,WORD PTR [rcx]
  424c09:	mov    rdi,r13
  424c0c:	mov    r10,rdx
  424c0f:	or     r10,0xffffffffffff0000
  424c16:	test   dx,dx
  424c19:	cmovs  rdx,r10
  424c1d:	sub    rdx,rax
  424c20:	lea    rax,[r8+rdx*1]
  424c24:	mov    r8d,0x2
  424c2a:	mov    rdx,r13
  424c2d:	mov    QWORD PTR [rbp-0x30],rax
  424c31:	call   0x424840
  424c36:	jmp    0x424afb
  424c3b:	lea    rcx,[rip+0x21176]        # 0x445db8
  424c42:	mov    QWORD PTR [rbp-0x30],0x0
  424c4a:	call   0x4247d0
  424c4f:	mov    edx,DWORD PTR [rcx]
  424c51:	mov    rdi,r13
  424c54:	mov    r10,rdx
  424c57:	or     r10,r14
  424c5a:	test   edx,edx
  424c5c:	cmovs  rdx,r10
  424c60:	sub    rdx,rax
  424c63:	lea    rax,[r8+rdx*1]
  424c67:	mov    r8d,0x4
  424c6d:	mov    rdx,r13
  424c70:	mov    QWORD PTR [rbp-0x30],rax
  424c74:	call   0x424840
  424c79:	jmp    0x424afb
  424c7e:	add    rbx,QWORD PTR [rip+0x2b1c3]        # 0x44fe48
  424c85:	lea    rcx,[rip+0x21094]        # 0x445d20
  424c8c:	mov    rax,QWORD PTR [rbx+0x10]
  424c90:	mov    r8,QWORD PTR [rbx+0x8]
  424c94:	mov    edx,DWORD PTR [rax+0x8]
  424c97:	call   0x4247d0
  424c9c:	lea    rcx,[rip+0x210dd]        # 0x445d80
  424ca3:	call   0x4247d0
  424ca8:	nop
  424ca9:	nop
  424caa:	nop
  424cab:	nop
  424cac:	nop
  424cad:	nop
  424cae:	nop
  424caf:	nop
  424cb0:	sub    rsp,0x28
  424cb4:	mov    eax,DWORD PTR [rcx]
  424cb6:	cmp    eax,0xc0000091
  424cbb:	ja     0x424d20
  424cbd:	cmp    eax,0xc000008d
  424cc2:	jae    0x424d3f
  424cc4:	cmp    eax,0xc0000008
  424cc9:	je     0x424de0
  424ccf:	ja     0x424db0
  424cd5:	cmp    eax,0x80000002
  424cda:	je     0x424de0
  424ce0:	cmp    eax,0xc0000005
  424ce5:	jne    0x424dbe
  424ceb:	xor    edx,edx
  424ced:	mov    ecx,0xb
  424cf2:	call   0x42a640
  424cf7:	cmp    rax,0x1
  424cfb:	je     0x424e40
  424d01:	test   rax,rax
  424d04:	je     0x424e20
  424d0a:	mov    ecx,0xb
  424d0f:	call   rax
  424d11:	xor    eax,eax
  424d13:	add    rsp,0x28
  424d17:	ret    
  424d18:	nop    DWORD PTR [rax+rax*1+0x0]
  424d20:	cmp    eax,0xc0000094
  424d25:	je     0x424df0
  424d2b:	ja     0x424d70
  424d2d:	cmp    eax,0xc0000092
  424d32:	je     0x424de0
  424d38:	cmp    eax,0xc0000093
  424d3d:	jne    0x424dbe
  424d3f:	xor    edx,edx
  424d41:	mov    ecx,0x8
  424d46:	call   0x42a640
  424d4b:	cmp    rax,0x1
  424d4f:	mov    rdx,rax
  424d52:	je     0x424dc8
  424d54:	test   rdx,rdx
  424d57:	mov    eax,0x1
  424d5c:	je     0x424d13
  424d5e:	mov    ecx,0x8
  424d63:	call   rdx
  424d65:	xor    eax,eax
  424d67:	add    rsp,0x28
  424d6b:	ret    
  424d6c:	nop    DWORD PTR [rax+0x0]
  424d70:	cmp    eax,0xc0000095
  424d75:	je     0x424de0
  424d77:	cmp    eax,0xc0000096
  424d7c:	jne    0x424dbe
  424d7e:	xor    edx,edx
  424d80:	mov    ecx,0x4
  424d85:	call   0x42a640
  424d8a:	cmp    rax,0x1
  424d8e:	je     0x424e2a
  424d94:	test   rax,rax
  424d97:	je     0x424e20
  424d9d:	mov    ecx,0x4
  424da2:	call   rax
  424da4:	xor    eax,eax
  424da6:	jmp    0x424d13
  424dab:	nop    DWORD PTR [rax+rax*1+0x0]
  424db0:	cmp    eax,0xc000001d
  424db5:	je     0x424d7e
  424db7:	cmp    eax,0xc000008c
  424dbc:	je     0x424de0
  424dbe:	mov    eax,0x1
  424dc3:	add    rsp,0x28
  424dc7:	ret    
  424dc8:	mov    edx,0x1
  424dcd:	mov    ecx,0x8
  424dd2:	call   0x42a640
  424dd7:	call   0x4247a0
  424ddc:	nop    DWORD PTR [rax+0x0]
  424de0:	xor    eax,eax
  424de2:	add    rsp,0x28
  424de6:	ret    
  424de7:	nop    WORD PTR [rax+rax*1+0x0]
  424df0:	xor    edx,edx
  424df2:	mov    ecx,0x8
  424df7:	call   0x42a640
  424dfc:	cmp    rax,0x1
  424e00:	mov    rdx,rax
  424e03:	jne    0x424d54
  424e09:	mov    edx,0x1
  424e0e:	mov    ecx,0x8
  424e13:	call   0x42a640
  424e18:	xor    eax,eax
  424e1a:	jmp    0x424d13
  424e1f:	nop
  424e20:	mov    eax,0x4
  424e25:	add    rsp,0x28
  424e29:	ret    
  424e2a:	mov    edx,0x1
  424e2f:	mov    ecx,0x4
  424e34:	call   0x42a640
  424e39:	xor    eax,eax
  424e3b:	jmp    0x424d13
  424e40:	mov    edx,0x1
  424e45:	mov    ecx,0xb
  424e4a:	call   0x42a640
  424e4f:	xor    eax,eax
  424e51:	jmp    0x424d13
  424e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e60:	push   r12
  424e62:	push   rbp
  424e63:	push   rdi
  424e64:	push   rsi
  424e65:	push   rbx
  424e66:	sub    rsp,0x20
  424e6a:	call   0x4255d0
  424e6f:	mov    rbp,rax
  424e72:	mov    eax,DWORD PTR [rip+0x2b010]        # 0x44fe88
  424e78:	test   eax,eax
  424e7a:	jne    0x424ea1
  424e7c:	test   rbp,rbp
  424e7f:	je     0x424ea1
  424e81:	lea    rcx,[rip+0x20f68]        # 0x445df0
  424e88:	mov    DWORD PTR [rip+0x2aff6],0x1        # 0x44fe88
  424e92:	call   0x425410
  424e97:	test   rax,rax
  424e9a:	je     0x424eb0
  424e9c:	mov    eax,0x1
  424ea1:	add    rsp,0x20
  424ea5:	pop    rbx
  424ea6:	pop    rsi
  424ea7:	pop    rdi
  424ea8:	pop    rbp
  424ea9:	pop    r12
  424eab:	ret    
  424eac:	nop    DWORD PTR [rax+0x0]
  424eb0:	lea    rbx,[rip+0x2b109]        # 0x44ffc0
  424eb7:	mov    ecx,0x30
  424ebc:	lea    rdx,[rip+0x2affd]        # 0x44fec0
  424ec3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x424cb0
  424eca:	xor    esi,esi
  424ecc:	mov    rdi,rbx
  424ecf:	rep stos QWORD PTR es:[rdi],rax
  424ed2:	mov    rdi,rdx
  424ed5:	sub    r12,rbp
  424ed8:	mov    cl,0x20
  424eda:	rep stos QWORD PTR es:[rdi],rax
  424edd:	mov    rdi,rdx
  424ee0:	jmp    0x424f10
  424ee2:	mov    BYTE PTR [rdi],0x9
  424ee5:	mov    DWORD PTR [rdi+0x4],r12d
  424ee9:	add    rsi,0x1
  424eed:	mov    edx,DWORD PTR [rax+0xc]
  424ef0:	add    rbx,0xc
  424ef4:	mov    DWORD PTR [rbx-0xc],edx
  424ef7:	add    edx,DWORD PTR [rax+0x8]
  424efa:	mov    rax,rdi
  424efd:	sub    rax,rbp
  424f00:	add    rdi,0x8
  424f04:	mov    DWORD PTR [rbx-0x4],eax
  424f07:	mov    DWORD PTR [rbx-0x8],edx
  424f0a:	cmp    rsi,0x20
  424f0e:	je     0x424f45
  424f10:	mov    rcx,rsi
  424f13:	call   0x425540
  424f18:	test   rax,rax
  424f1b:	jne    0x424ee2
  424f1d:	test   rsi,rsi
  424f20:	je     0x424e9c
  424f26:	mov    edx,esi
  424f28:	nop    DWORD PTR [rax+rax*1+0x0]
  424f30:	mov    r8,rbp
  424f33:	lea    rcx,[rip+0x2b086]        # 0x44ffc0
  424f3a:	call   QWORD PTR [rip+0x2c748]        # 0x451688
  424f40:	jmp    0x424e9c
  424f45:	mov    edx,0x20
  424f4a:	jmp    0x424f30
  424f4c:	nop    DWORD PTR [rax+0x0]
  424f50:	push   rbx
  424f51:	sub    rsp,0x20
  424f55:	mov    rdx,QWORD PTR [rcx]
  424f58:	mov    eax,DWORD PTR [rdx]
  424f5a:	mov    r8d,eax
  424f5d:	and    r8d,0x20ffffff
  424f64:	cmp    r8d,0x20474343
  424f6b:	je     0x425070
  424f71:	cmp    eax,0xc0000091
  424f76:	mov    rbx,rcx
  424f79:	ja     0x425000
  424f7f:	cmp    eax,0xc000008d
  424f84:	jae    0x425017
  424f8a:	cmp    eax,0xc0000008
  424f8f:	je     0x424fc3
  424f91:	ja     0x424fd0
  424f93:	cmp    eax,0x80000002
  424f98:	je     0x424fc3
  424f9a:	cmp    eax,0xc0000005
  424f9f:	jne    0x424fe2
  424fa1:	xor    edx,edx
  424fa3:	mov    ecx,0xb
  424fa8:	call   0x42a640
  424fad:	cmp    rax,0x1
  424fb1:	je     0x4250e0
  424fb7:	test   rax,rax
  424fba:	je     0x424fe2
  424fbc:	mov    ecx,0xb
  424fc1:	call   rax
  424fc3:	mov    eax,0xffffffff
  424fc8:	add    rsp,0x20
  424fcc:	pop    rbx
  424fcd:	ret    
  424fce:	xchg   ax,ax
  424fd0:	cmp    eax,0xc000001d
  424fd5:	je     0x425096
  424fdb:	cmp    eax,0xc000008c
  424fe0:	je     0x424fc3
  424fe2:	mov    rax,QWORD PTR [rip+0x2ae97]        # 0x44fe80
  424fe9:	test   rax,rax
  424fec:	je     0x424fc8
  424fee:	mov    rcx,rbx
  424ff1:	add    rsp,0x20
  424ff5:	pop    rbx
  424ff6:	rex.W jmp rax
  424ff9:	nop    DWORD PTR [rax+0x0]
  425000:	cmp    eax,0xc0000094
  425005:	je     0x425042
  425007:	ja     0x425080
  425009:	cmp    eax,0xc0000092
  42500e:	je     0x424fc3
  425010:	cmp    eax,0xc0000093
  425015:	jne    0x424fe2
  425017:	xor    edx,edx
  425019:	mov    ecx,0x8
  42501e:	call   0x42a640
  425023:	cmp    rax,0x1
  425027:	jne    0x425054
  425029:	mov    edx,0x1
  42502e:	mov    ecx,0x8
  425033:	call   0x42a640
  425038:	call   0x4247a0
  42503d:	jmp    0x424fc3
  425042:	xor    edx,edx
  425044:	mov    ecx,0x8
  425049:	call   0x42a640
  42504e:	cmp    rax,0x1
  425052:	je     0x4250c2
  425054:	test   rax,rax
  425057:	je     0x424fe2
  425059:	mov    ecx,0x8
  42505e:	call   rax
  425060:	mov    eax,0xffffffff
  425065:	jmp    0x424fc8
  42506a:	nop    WORD PTR [rax+rax*1+0x0]
  425070:	test   BYTE PTR [rdx+0x4],0x1
  425074:	jne    0x424f71
  42507a:	jmp    0x424fc3
  42507f:	nop
  425080:	cmp    eax,0xc0000095
  425085:	je     0x424fc3
  42508b:	cmp    eax,0xc0000096
  425090:	jne    0x424fe2
  425096:	xor    edx,edx
  425098:	mov    ecx,0x4
  42509d:	call   0x42a640
  4250a2:	cmp    rax,0x1
  4250a6:	je     0x4250f4
  4250a8:	test   rax,rax
  4250ab:	je     0x424fe2
  4250b1:	mov    ecx,0x4
  4250b6:	call   rax
  4250b8:	mov    eax,0xffffffff
  4250bd:	jmp    0x424fc8
  4250c2:	mov    edx,0x1
  4250c7:	mov    ecx,0x8
  4250cc:	call   0x42a640
  4250d1:	jmp    0x424fc3
  4250d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4250e0:	mov    edx,0x1
  4250e5:	mov    ecx,0xb
  4250ea:	call   0x42a640
  4250ef:	jmp    0x424fc3
  4250f4:	mov    edx,0x1
  4250f9:	mov    ecx,0x4
  4250fe:	call   0x42a640
  425103:	jmp    0x424fc3
  425108:	nop
  425109:	nop
  42510a:	nop
  42510b:	nop
  42510c:	nop
  42510d:	nop
  42510e:	nop
  42510f:	nop
  425110:	push   rbp
  425111:	push   rdi
  425112:	push   rsi
  425113:	push   rbx
  425114:	sub    rsp,0x28
  425118:	lea    rcx,[rip+0x2b041]        # 0x450160
  42511f:	call   QWORD PTR [rip+0x2c473]        # 0x451598
  425125:	mov    rbx,QWORD PTR [rip+0x2b014]        # 0x450140
  42512c:	test   rbx,rbx
  42512f:	je     0x425164
  425131:	mov    rbp,QWORD PTR [rip+0x2c5a8]        # 0x4516e0
  425138:	mov    rdi,QWORD PTR [rip+0x2c4a9]        # 0x4515e8
  42513f:	nop
  425140:	mov    ecx,DWORD PTR [rbx]
  425142:	call   rbp
  425144:	mov    rsi,rax
  425147:	call   rdi
  425149:	test   eax,eax
  42514b:	jne    0x42515b
  42514d:	test   rsi,rsi
  425150:	je     0x42515b
  425152:	mov    rax,QWORD PTR [rbx+0x8]
  425156:	mov    rcx,rsi
  425159:	call   rax
  42515b:	mov    rbx,QWORD PTR [rbx+0x10]
  42515f:	test   rbx,rbx
  425162:	jne    0x425140
  425164:	mov    rax,QWORD PTR [rip+0x2c4dd]        # 0x451648
  42516b:	lea    rcx,[rip+0x2afee]        # 0x450160
  425172:	add    rsp,0x28
  425176:	pop    rbx
  425177:	pop    rsi
  425178:	pop    rdi
  425179:	pop    rbp
  42517a:	rex.W jmp rax
  42517d:	nop    DWORD PTR [rax]
  425180:	push   rdi
  425181:	push   rsi
  425182:	push   rbx
  425183:	sub    rsp,0x20
  425187:	mov    eax,DWORD PTR [rip+0x2afbb]        # 0x450148
  42518d:	test   eax,eax
  42518f:	jne    0x4251a0
  425191:	add    rsp,0x20
  425195:	pop    rbx
  425196:	pop    rsi
  425197:	pop    rdi
  425198:	ret    
  425199:	nop    DWORD PTR [rax+0x0]
  4251a0:	mov    rsi,rdx
  4251a3:	mov    edi,ecx
  4251a5:	mov    edx,0x18
  4251aa:	mov    ecx,0x1
  4251af:	call   0x42a710
  4251b4:	test   rax,rax
  4251b7:	mov    rbx,rax
  4251ba:	je     0x4251f8
  4251bc:	mov    DWORD PTR [rax],edi
  4251be:	mov    QWORD PTR [rax+0x8],rsi
  4251c2:	lea    rcx,[rip+0x2af97]        # 0x450160
  4251c9:	call   QWORD PTR [rip+0x2c3c9]        # 0x451598
  4251cf:	mov    rax,QWORD PTR [rip+0x2af6a]        # 0x450140
  4251d6:	lea    rcx,[rip+0x2af83]        # 0x450160
  4251dd:	mov    QWORD PTR [rip+0x2af5c],rbx        # 0x450140
  4251e4:	mov    QWORD PTR [rbx+0x10],rax
  4251e8:	call   QWORD PTR [rip+0x2c45a]        # 0x451648
  4251ee:	xor    eax,eax
  4251f0:	add    rsp,0x20
  4251f4:	pop    rbx
  4251f5:	pop    rsi
  4251f6:	pop    rdi
  4251f7:	ret    
  4251f8:	mov    eax,0xffffffff
  4251fd:	jmp    0x425191
  4251ff:	nop
  425200:	push   rbx
  425201:	sub    rsp,0x20
  425205:	mov    eax,DWORD PTR [rip+0x2af3d]        # 0x450148
  42520b:	test   eax,eax
  42520d:	jne    0x425220
  42520f:	xor    eax,eax
  425211:	add    rsp,0x20
  425215:	pop    rbx
  425216:	ret    
  425217:	nop    WORD PTR [rax+rax*1+0x0]
  425220:	mov    ebx,ecx
  425222:	lea    rcx,[rip+0x2af37]        # 0x450160
  425229:	call   QWORD PTR [rip+0x2c369]        # 0x451598
  42522f:	mov    rdx,QWORD PTR [rip+0x2af0a]        # 0x450140
  425236:	test   rdx,rdx
  425239:	je     0x425257
  42523b:	mov    eax,DWORD PTR [rdx]
  42523d:	cmp    eax,ebx
  42523f:	jne    0x42524e
  425241:	jmp    0x42528f
  425243:	mov    r8d,DWORD PTR [rax]
  425246:	cmp    r8d,ebx
  425249:	je     0x425270
  42524b:	mov    rdx,rax
  42524e:	mov    rax,QWORD PTR [rdx+0x10]
  425252:	test   rax,rax
  425255:	jne    0x425243
  425257:	lea    rcx,[rip+0x2af02]        # 0x450160
  42525e:	call   QWORD PTR [rip+0x2c3e4]        # 0x451648
  425264:	xor    eax,eax
  425266:	add    rsp,0x20
  42526a:	pop    rbx
  42526b:	ret    
  42526c:	nop    DWORD PTR [rax+0x0]
  425270:	mov    rcx,rax
  425273:	mov    rax,QWORD PTR [rax+0x10]
  425277:	mov    QWORD PTR [rdx+0x10],rax
  42527b:	call   0x42a6c8
  425280:	lea    rcx,[rip+0x2aed9]        # 0x450160
  425287:	call   QWORD PTR [rip+0x2c3bb]        # 0x451648
  42528d:	jmp    0x425264
  42528f:	mov    rax,QWORD PTR [rdx+0x10]
  425293:	mov    rcx,rdx
  425296:	mov    QWORD PTR [rip+0x2aea3],rax        # 0x450140
  42529d:	jmp    0x42527b
  42529f:	nop
  4252a0:	push   rbx
  4252a1:	sub    rsp,0x20
  4252a5:	cmp    edx,0x1
  4252a8:	je     0x425340
  4252ae:	jb     0x4252e0
  4252b0:	cmp    edx,0x2
  4252b3:	je     0x4252d0
  4252b5:	cmp    edx,0x3
  4252b8:	jne    0x4252d5
  4252ba:	mov    eax,DWORD PTR [rip+0x2ae88]        # 0x450148
  4252c0:	test   eax,eax
  4252c2:	je     0x4252d5
  4252c4:	call   0x425110
  4252c9:	jmp    0x4252d5
  4252cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4252d0:	call   0x4247a0
  4252d5:	mov    eax,0x1
  4252da:	add    rsp,0x20
  4252de:	pop    rbx
  4252df:	ret    
  4252e0:	mov    eax,DWORD PTR [rip+0x2ae62]        # 0x450148
  4252e6:	test   eax,eax
  4252e8:	jne    0x425370
  4252ee:	mov    eax,DWORD PTR [rip+0x2ae54]        # 0x450148
  4252f4:	cmp    eax,0x1
  4252f7:	jne    0x4252d5
  4252f9:	mov    rcx,QWORD PTR [rip+0x2ae40]        # 0x450140
  425300:	test   rcx,rcx
  425303:	je     0x425316
  425305:	mov    rbx,QWORD PTR [rcx+0x10]
  425309:	call   0x42a6c8
  42530e:	test   rbx,rbx
  425311:	mov    rcx,rbx
  425314:	jne    0x425305
  425316:	lea    rcx,[rip+0x2ae43]        # 0x450160
  42531d:	mov    QWORD PTR [rip+0x2ae18],0x0        # 0x450140
  425328:	mov    DWORD PTR [rip+0x2ae16],0x0        # 0x450148
  425332:	call   QWORD PTR [rip+0x2c258]        # 0x451590
  425338:	jmp    0x4252d5
  42533a:	nop    WORD PTR [rax+rax*1+0x0]
  425340:	mov    eax,DWORD PTR [rip+0x2ae02]        # 0x450148
  425346:	test   eax,eax
  425348:	je     0x425360
  42534a:	mov    eax,0x1
  42534f:	mov    DWORD PTR [rip+0x2adef],0x1        # 0x450148
  425359:	add    rsp,0x20
  42535d:	pop    rbx
  42535e:	ret    
  42535f:	nop
  425360:	lea    rcx,[rip+0x2adf9]        # 0x450160
  425367:	call   QWORD PTR [rip+0x2c2cb]        # 0x451638
  42536d:	jmp    0x42534a
  42536f:	nop
  425370:	call   0x425110
  425375:	jmp    0x4252ee
  42537a:	nop
  42537b:	nop
  42537c:	nop
  42537d:	nop
  42537e:	nop
  42537f:	nop
  425380:	movsxd rax,DWORD PTR [rcx+0x3c]
  425384:	add    rcx,rax
  425387:	xor    eax,eax
  425389:	cmp    DWORD PTR [rcx],0x4550
  42538f:	je     0x425393
  425391:	repz ret 
  425393:	xor    eax,eax
  425395:	cmp    WORD PTR [rcx+0x18],0x20b
  42539b:	sete   al
  42539e:	ret    
  42539f:	nop
  4253a0:	cmp    WORD PTR [rcx],0x5a4d
  4253a5:	je     0x4253b0
  4253a7:	xor    eax,eax
  4253a9:	ret    
  4253aa:	nop    WORD PTR [rax+rax*1+0x0]
  4253b0:	jmp    0x425380
  4253b2:	nop    DWORD PTR [rax+0x0]
  4253b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253c0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4253c4:	add    rcx,rax
  4253c7:	movzx  eax,WORD PTR [rcx+0x14]
  4253cb:	lea    rax,[rcx+rax*1+0x18]
  4253d0:	movzx  ecx,WORD PTR [rcx+0x6]
  4253d4:	test   ecx,ecx
  4253d6:	je     0x425401
  4253d8:	sub    ecx,0x1
  4253db:	lea    rcx,[rcx+rcx*4]
  4253df:	lea    r9,[rax+rcx*8+0x28]
  4253e4:	mov    r8d,DWORD PTR [rax+0xc]
  4253e8:	cmp    r8,rdx
  4253eb:	mov    rcx,r8
  4253ee:	ja     0x4253f8
  4253f0:	add    ecx,DWORD PTR [rax+0x8]
  4253f3:	cmp    rdx,rcx
  4253f6:	jb     0x425403
  4253f8:	add    rax,0x28
  4253fc:	cmp    rax,r9
  4253ff:	jne    0x4253e4
  425401:	xor    eax,eax
  425403:	repz ret 
  425405:	nop
  425406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425410:	push   rdi
  425411:	push   rsi
  425412:	push   rbx
  425413:	sub    rsp,0x20
  425417:	mov    rsi,rcx
  42541a:	call   0x42a610
  42541f:	cmp    rax,0x8
  425423:	ja     0x425440
  425425:	mov    rbx,QWORD PTR [rip+0x20e74]        # 0x4462a0
  42542c:	xor    edi,edi
  42542e:	cmp    WORD PTR [rbx],0x5a4d
  425433:	je     0x425450
  425435:	mov    rax,rdi
  425438:	add    rsp,0x20
  42543c:	pop    rbx
  42543d:	pop    rsi
  42543e:	pop    rdi
  42543f:	ret    
  425440:	xor    edi,edi
  425442:	mov    rax,rdi
  425445:	add    rsp,0x20
  425449:	pop    rbx
  42544a:	pop    rsi
  42544b:	pop    rdi
  42544c:	ret    
  42544d:	nop    DWORD PTR [rax]
  425450:	mov    rcx,rbx
  425453:	call   0x425380
  425458:	test   eax,eax
  42545a:	je     0x425435
  42545c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  425460:	add    rdx,rbx
  425463:	movzx  eax,WORD PTR [rdx+0x14]
  425467:	lea    rbx,[rdx+rax*1+0x18]
  42546c:	movzx  eax,WORD PTR [rdx+0x6]
  425470:	test   eax,eax
  425472:	je     0x425435
  425474:	sub    eax,0x1
  425477:	lea    rax,[rax+rax*4]
  42547b:	lea    rdi,[rbx+rax*8+0x28]
  425480:	jmp    0x42548b
  425482:	add    rbx,0x28
  425486:	cmp    rbx,rdi
  425489:	je     0x425440
  42548b:	mov    r8d,0x8
  425491:	mov    rdx,rsi
  425494:	mov    rcx,rbx
  425497:	call   0x42a608
  42549c:	test   eax,eax
  42549e:	jne    0x425482
  4254a0:	mov    rdi,rbx
  4254a3:	mov    rax,rdi
  4254a6:	add    rsp,0x20
  4254aa:	pop    rbx
  4254ab:	pop    rsi
  4254ac:	pop    rdi
  4254ad:	ret    
  4254ae:	xchg   ax,ax
  4254b0:	push   rsi
  4254b1:	push   rbx
  4254b2:	sub    rsp,0x28
  4254b6:	mov    rbx,QWORD PTR [rip+0x20de3]        # 0x4462a0
  4254bd:	cmp    WORD PTR [rbx],0x5a4d
  4254c2:	je     0x4254d0
  4254c4:	xor    eax,eax
  4254c6:	add    rsp,0x28
  4254ca:	pop    rbx
  4254cb:	pop    rsi
  4254cc:	ret    
  4254cd:	nop    DWORD PTR [rax]
  4254d0:	mov    rsi,rcx
  4254d3:	mov    rcx,rbx
  4254d6:	call   0x425380
  4254db:	test   eax,eax
  4254dd:	je     0x4254c4
  4254df:	sub    rsi,rbx
  4254e2:	mov    rcx,rbx
  4254e5:	mov    rdx,rsi
  4254e8:	add    rsp,0x28
  4254ec:	pop    rbx
  4254ed:	pop    rsi
  4254ee:	jmp    0x4253c0
  4254f3:	nop    DWORD PTR [rax]
  4254f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425500:	push   rbx
  425501:	sub    rsp,0x20
  425505:	mov    rbx,QWORD PTR [rip+0x20d94]        # 0x4462a0
  42550c:	xor    eax,eax
  42550e:	cmp    WORD PTR [rbx],0x5a4d
  425513:	je     0x425520
  425515:	add    rsp,0x20
  425519:	pop    rbx
  42551a:	ret    
  42551b:	nop    DWORD PTR [rax+rax*1+0x0]
  425520:	mov    rcx,rbx
  425523:	call   0x425380
  425528:	test   eax,eax
  42552a:	je     0x425515
  42552c:	movsxd rax,DWORD PTR [rbx+0x3c]
  425530:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  425535:	add    rsp,0x20
  425539:	pop    rbx
  42553a:	ret    
  42553b:	nop    DWORD PTR [rax+rax*1+0x0]
  425540:	push   rdi
  425541:	push   rsi
  425542:	push   rbx
  425543:	sub    rsp,0x20
  425547:	mov    rsi,QWORD PTR [rip+0x20d52]        # 0x4462a0
  42554e:	xor    edi,edi
  425550:	mov    rbx,rcx
  425553:	cmp    WORD PTR [rsi],0x5a4d
  425558:	je     0x425565
  42555a:	mov    rax,rdi
  42555d:	add    rsp,0x20
  425561:	pop    rbx
  425562:	pop    rsi
  425563:	pop    rdi
  425564:	ret    
  425565:	mov    rcx,rsi
  425568:	call   0x425380
  42556d:	test   eax,eax
  42556f:	je     0x42555a
  425571:	movsxd rax,DWORD PTR [rsi+0x3c]
  425575:	add    rsi,rax
  425578:	movzx  eax,WORD PTR [rsi+0x14]
  42557c:	lea    rdx,[rsi+rax*1+0x18]
  425581:	movzx  eax,WORD PTR [rsi+0x6]
  425585:	test   eax,eax
  425587:	je     0x42555a
  425589:	sub    eax,0x1
  42558c:	lea    rax,[rax+rax*4]
  425590:	lea    rax,[rdx+rax*8+0x28]
  425595:	test   BYTE PTR [rdx+0x27],0x20
  425599:	je     0x4255a4
  42559b:	test   rbx,rbx
  42559e:	je     0x4255c0
  4255a0:	sub    rbx,0x1
  4255a4:	add    rdx,0x28
  4255a8:	cmp    rdx,rax
  4255ab:	jne    0x425595
  4255ad:	xor    edi,edi
  4255af:	mov    rax,rdi
  4255b2:	add    rsp,0x20
  4255b6:	pop    rbx
  4255b7:	pop    rsi
  4255b8:	pop    rdi
  4255b9:	ret    
  4255ba:	nop    WORD PTR [rax+rax*1+0x0]
  4255c0:	mov    rdi,rdx
  4255c3:	mov    rax,rdi
  4255c6:	add    rsp,0x20
  4255ca:	pop    rbx
  4255cb:	pop    rsi
  4255cc:	pop    rdi
  4255cd:	ret    
  4255ce:	xchg   ax,ax
  4255d0:	push   rsi
  4255d1:	push   rbx
  4255d2:	sub    rsp,0x28
  4255d6:	mov    rsi,QWORD PTR [rip+0x20cc3]        # 0x4462a0
  4255dd:	xor    ebx,ebx
  4255df:	cmp    WORD PTR [rsi],0x5a4d
  4255e4:	je     0x4255f0
  4255e6:	mov    rax,rbx
  4255e9:	add    rsp,0x28
  4255ed:	pop    rbx
  4255ee:	pop    rsi
  4255ef:	ret    
  4255f0:	mov    rcx,rsi
  4255f3:	call   0x425380
  4255f8:	test   eax,eax
  4255fa:	cmovne rbx,rsi
  4255fe:	mov    rax,rbx
  425601:	add    rsp,0x28
  425605:	pop    rbx
  425606:	pop    rsi
  425607:	ret    
  425608:	nop    DWORD PTR [rax+rax*1+0x0]
  425610:	push   rsi
  425611:	push   rbx
  425612:	sub    rsp,0x28
  425616:	mov    rbx,QWORD PTR [rip+0x20c83]        # 0x4462a0
  42561d:	xor    eax,eax
  42561f:	cmp    WORD PTR [rbx],0x5a4d
  425624:	je     0x425630
  425626:	add    rsp,0x28
  42562a:	pop    rbx
  42562b:	pop    rsi
  42562c:	ret    
  42562d:	nop    DWORD PTR [rax]
  425630:	mov    rsi,rcx
  425633:	mov    rcx,rbx
  425636:	call   0x425380
  42563b:	test   eax,eax
  42563d:	je     0x425626
  42563f:	sub    rsi,rbx
  425642:	mov    rcx,rbx
  425645:	mov    rdx,rsi
  425648:	call   0x4253c0
  42564d:	test   rax,rax
  425650:	je     0x425661
  425652:	mov    eax,DWORD PTR [rax+0x24]
  425655:	not    eax
  425657:	shr    eax,0x1f
  42565a:	add    rsp,0x28
  42565e:	pop    rbx
  42565f:	pop    rsi
  425660:	ret    
  425661:	xor    eax,eax
  425663:	jmp    0x425626
  425665:	nop
  425666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425670:	push   rbp
  425671:	push   rdi
  425672:	push   rsi
  425673:	push   rbx
  425674:	sub    rsp,0x28
  425678:	mov    rdi,QWORD PTR [rip+0x20c21]        # 0x4462a0
  42567f:	xor    ebp,ebp
  425681:	mov    esi,ecx
  425683:	cmp    WORD PTR [rdi],0x5a4d
  425688:	je     0x4256a0
  42568a:	mov    rax,rbp
  42568d:	add    rsp,0x28
  425691:	pop    rbx
  425692:	pop    rsi
  425693:	pop    rdi
  425694:	pop    rbp
  425695:	ret    
  425696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256a0:	mov    rcx,rdi
  4256a3:	call   0x425380
  4256a8:	test   eax,eax
  4256aa:	je     0x42568a
  4256ac:	movsxd rax,DWORD PTR [rdi+0x3c]
  4256b0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  4256b7:	test   edx,edx
  4256b9:	je     0x42568a
  4256bb:	mov    ebx,edx
  4256bd:	mov    rcx,rdi
  4256c0:	mov    rdx,rbx
  4256c3:	call   0x4253c0
  4256c8:	test   rax,rax
  4256cb:	je     0x42568a
  4256cd:	add    rbx,rdi
  4256d0:	mov    rdx,rbx
  4256d3:	jne    0x4256e7
  4256d5:	jmp    0x42568a
  4256d7:	nop    WORD PTR [rax+rax*1+0x0]
  4256e0:	sub    esi,0x1
  4256e3:	add    rdx,0x14
  4256e7:	mov    ecx,DWORD PTR [rdx+0x4]
  4256ea:	test   ecx,ecx
  4256ec:	jne    0x4256f5
  4256ee:	mov    eax,DWORD PTR [rdx+0xc]
  4256f1:	test   eax,eax
  4256f3:	je     0x425710
  4256f5:	test   esi,esi
  4256f7:	jg     0x4256e0
  4256f9:	mov    ebp,DWORD PTR [rdx+0xc]
  4256fc:	add    rbp,rdi
  4256ff:	mov    rax,rbp
  425702:	add    rsp,0x28
  425706:	pop    rbx
  425707:	pop    rsi
  425708:	pop    rdi
  425709:	pop    rbp
  42570a:	ret    
  42570b:	nop    DWORD PTR [rax+rax*1+0x0]
  425710:	xor    ebp,ebp
  425712:	mov    rax,rbp
  425715:	add    rsp,0x28
  425719:	pop    rbx
  42571a:	pop    rsi
  42571b:	pop    rdi
  42571c:	pop    rbp
  42571d:	ret    
  42571e:	nop
  42571f:	nop
  425720:	jmp    QWORD PTR [rip+0x2c2ea]        # 0x451a10
  425726:	nop
  425727:	nop
  425728:	nop    DWORD PTR [rax+rax*1+0x0]
  425730:	push   rcx
  425731:	push   rax
  425732:	cmp    rax,0x1000
  425738:	lea    rcx,[rsp+0x18]
  42573d:	jb     0x425758
  42573f:	sub    rcx,0x1000
  425746:	or     QWORD PTR [rcx],0x0
  42574a:	sub    rax,0x1000
  425750:	cmp    rax,0x1000
  425756:	ja     0x42573f
  425758:	sub    rcx,rax
  42575b:	or     QWORD PTR [rcx],0x0
  42575f:	pop    rax
  425760:	pop    rcx
  425761:	ret    
  425762:	nop
  425763:	nop
  425764:	nop
  425765:	nop
  425766:	nop
  425767:	nop
  425768:	nop
  425769:	nop
  42576a:	nop
  42576b:	nop
  42576c:	nop
  42576d:	nop
  42576e:	nop
  42576f:	nop
  425770:	lea    rax,[rsp+0x8]
  425775:	ret    
  425776:	lea    rax,[rip+0x2c1cb]        # 0x451948
  42577d:	jmp    QWORD PTR [rax]
  42577f:	nop
  425780:	push   rsi
  425781:	push   rbx
  425782:	sub    rsp,0xe8
  425789:	test   rdx,rdx
  42578c:	mov    rbx,rcx
  42578f:	mov    rsi,rdx
  425792:	je     0x4257b6
  425794:	lea    rcx,[rsp+0x30]
  425799:	call   QWORD PTR [rip+0x2be91]        # 0x451630
  42579f:	cmp    eax,0xffffffff
  4257a2:	je     0x425810
  4257a4:	mov    edx,DWORD PTR [rsp+0x30]
  4257a8:	cmp    eax,0x2
  4257ab:	sete   al
  4257ae:	movzx  eax,al
  4257b1:	mov    DWORD PTR [rsi],edx
  4257b3:	mov    DWORD PTR [rsi+0x4],eax
  4257b6:	test   rbx,rbx
  4257b9:	je     0x4257fe
  4257bb:	lea    rcx,[rsp+0x20]
  4257c0:	call   QWORD PTR [rip+0x2be52]        # 0x451618
  4257c6:	movabs r8,0xfe624e212ac18000
  4257d0:	add    r8,QWORD PTR [rsp+0x20]
  4257d5:	movabs rdx,0xd6bf94d5e57a42bd
  4257df:	mov    rax,r8
  4257e2:	mul    rdx
  4257e5:	shr    rdx,0x17
  4257e9:	mov    QWORD PTR [rbx],rdx
  4257ec:	imul   rdx,rdx,0x989680
  4257f3:	sub    r8,rdx
  4257f6:	imul   r8d,r8d,0x64
  4257fa:	mov    DWORD PTR [rbx+0x8],r8d
  4257fe:	xor    eax,eax
  425800:	add    rsp,0xe8
  425807:	pop    rbx
  425808:	pop    rsi
  425809:	ret    
  42580a:	nop    WORD PTR [rax+rax*1+0x0]
  425810:	mov    DWORD PTR [rsi],0x0
  425816:	mov    DWORD PTR [rsi+0x4],0x0
  42581d:	jmp    0x4257b6
  42581f:	nop
  425820:	push   rbx
  425821:	sub    rsp,0x30
  425825:	mov    rbx,rcx
  425828:	lea    rcx,[rsp+0x20]
  42582d:	call   0x425780
  425832:	test   eax,eax
  425834:	mov    r9d,eax
  425837:	jne    0x425865
  425839:	mov    rax,QWORD PTR [rsp+0x20]
  42583e:	mov    r8d,DWORD PTR [rsp+0x28]
  425843:	mov    edx,0x10624dd3
  425848:	mov    DWORD PTR [rbx],eax
  42584a:	mov    eax,r8d
  42584d:	sar    r8d,0x1f
  425851:	imul   edx
  425853:	sar    edx,0x6
  425856:	sub    edx,r8d
  425859:	mov    DWORD PTR [rbx+0x4],edx
  42585c:	mov    eax,r9d
  42585f:	add    rsp,0x30
  425863:	pop    rbx
  425864:	ret    
  425865:	mov    r9d,0xffffffff
  42586b:	jmp    0x42585c
  42586d:	nop    DWORD PTR [rax]
  425870:	push   rbx
  425871:	sub    rsp,0x30
  425875:	mov    rbx,rcx
  425878:	lea    rcx,[rsp+0x20]
  42587d:	call   0x425780
  425882:	test   eax,eax
  425884:	mov    r9d,eax
  425887:	jne    0x4258b5
  425889:	mov    rax,QWORD PTR [rsp+0x20]
  42588e:	mov    r8d,DWORD PTR [rsp+0x28]
  425893:	mov    edx,0x10624dd3
  425898:	mov    DWORD PTR [rbx],eax
  42589a:	mov    eax,r8d
  42589d:	sar    r8d,0x1f
  4258a1:	imul   edx
  4258a3:	sar    edx,0x6
  4258a6:	sub    edx,r8d
  4258a9:	mov    DWORD PTR [rbx+0x4],edx
  4258ac:	mov    eax,r9d
  4258af:	add    rsp,0x30
  4258b3:	pop    rbx
  4258b4:	ret    
  4258b5:	mov    r9d,0xffffffff
  4258bb:	jmp    0x4258ac
  4258bd:	nop
  4258be:	nop
  4258bf:	nop
  4258c0:	jmp    0x42a738
  4258c5:	nop
  4258c6:	nop
  4258c7:	nop
  4258c8:	nop
  4258c9:	nop
  4258ca:	nop
  4258cb:	nop
  4258cc:	nop
  4258cd:	nop
  4258ce:	nop
  4258cf:	nop
  4258d0:	sub    rsp,0x38
  4258d4:	mov    r9,rdx
  4258d7:	mov    QWORD PTR [rsp+0x20],r8
  4258dc:	mov    rdx,rcx
  4258df:	xor    r8d,r8d
  4258e2:	mov    ecx,0x6000
  4258e7:	call   0x427280
  4258ec:	add    rsp,0x38
  4258f0:	ret    
  4258f1:	nop
  4258f2:	nop
  4258f3:	nop
  4258f4:	nop
  4258f5:	nop
  4258f6:	nop
  4258f7:	nop
  4258f8:	nop
  4258f9:	nop
  4258fa:	nop
  4258fb:	nop
  4258fc:	nop
  4258fd:	nop
  4258fe:	nop
  4258ff:	nop
  425900:	push   rsi
  425901:	push   rbx
  425902:	sub    rsp,0x38
  425906:	mov    rbx,rcx
  425909:	mov    rsi,rdx
  42590c:	call   0x42a788
  425911:	lea    rdx,[rax+0x30]
  425915:	mov    QWORD PTR [rsp+0x20],rsi
  42591a:	mov    r9,rbx
  42591d:	xor    r8d,r8d
  425920:	mov    ecx,0x6000
  425925:	call   0x427280
  42592a:	add    rsp,0x38
  42592e:	pop    rbx
  42592f:	pop    rsi
  425930:	ret    
  425931:	nop
  425932:	nop
  425933:	nop
  425934:	nop
  425935:	nop
  425936:	nop
  425937:	nop
  425938:	nop
  425939:	nop
  42593a:	nop
  42593b:	nop
  42593c:	nop
  42593d:	nop
  42593e:	nop
  42593f:	nop
  425940:	push   rsi
  425941:	push   rbx
  425942:	sub    rsp,0x38
  425946:	test   rdx,rdx
  425949:	mov    rsi,rcx
  42594c:	je     0x425980
  42594e:	lea    rbx,[rdx-0x1]
  425952:	mov    QWORD PTR [rsp+0x20],r9
  425957:	mov    rdx,rcx
  42595a:	mov    r9,r8
  42595d:	xor    ecx,ecx
  42595f:	mov    r8d,ebx
  425962:	call   0x427280
  425967:	cmp    eax,ebx
  425969:	cmovle ebx,eax
  42596c:	movsxd rbx,ebx
  42596f:	mov    BYTE PTR [rsi+rbx*1],0x0
  425973:	add    rsp,0x38
  425977:	pop    rbx
  425978:	pop    rsi
  425979:	ret    
  42597a:	nop    WORD PTR [rax+rax*1+0x0]
  425980:	mov    QWORD PTR [rsp+0x20],r9
  425985:	mov    rdx,rcx
  425988:	mov    r9,r8
  42598b:	xor    ecx,ecx
  42598d:	xor    r8d,r8d
  425990:	call   0x427280
  425995:	add    rsp,0x38
  425999:	pop    rbx
  42599a:	pop    rsi
  42599b:	ret    
  42599c:	nop
  42599d:	nop
  42599e:	nop
  42599f:	nop
  4259a0:	push   rbx
  4259a1:	sub    rsp,0x30
  4259a5:	mov    rbx,rcx
  4259a8:	mov    r9,rdx
  4259ab:	mov    QWORD PTR [rsp+0x20],r8
  4259b0:	mov    rdx,rcx
  4259b3:	xor    r8d,r8d
  4259b6:	mov    ecx,0x4000
  4259bb:	call   0x427280
  4259c0:	movsxd rdx,eax
  4259c3:	mov    BYTE PTR [rbx+rdx*1],0x0
  4259c7:	add    rsp,0x30
  4259cb:	pop    rbx
  4259cc:	ret    
  4259cd:	nop
  4259ce:	nop
  4259cf:	nop
  4259d0:	push   r12
  4259d2:	push   rbp
  4259d3:	push   rdi
  4259d4:	push   rsi
  4259d5:	push   rbx
  4259d6:	sub    rsp,0x20
  4259da:	mov    r9,r8
  4259dd:	mov    r12,rcx
  4259e0:	mov    rdi,rdx
  4259e3:	xor    ecx,ecx
  4259e5:	mov    rbp,r8
  4259e8:	mov    r8,rdx
  4259eb:	xor    edx,edx
  4259ed:	call   0x425940
  4259f2:	test   eax,eax
  4259f4:	mov    ebx,eax
  4259f6:	js     0x425a40
  4259f8:	lea    esi,[rax+0x1]
  4259fb:	movsxd rsi,esi
  4259fe:	mov    rcx,rsi
  425a01:	call   0x42a678
  425a06:	test   rax,rax
  425a09:	mov    QWORD PTR [r12],rax
  425a0d:	je     0x425a40
  425a0f:	mov    rdx,rsi
  425a12:	mov    r9,rbp
  425a15:	mov    r8,rdi
  425a18:	mov    rcx,rax
  425a1b:	call   0x425940
  425a20:	mov    rdx,QWORD PTR [r12]
  425a24:	movsxd rax,ebx
  425a27:	mov    BYTE PTR [rdx+rax*1],0x0
  425a2b:	mov    eax,ebx
  425a2d:	add    rsp,0x20
  425a31:	pop    rbx
  425a32:	pop    rsi
  425a33:	pop    rdi
  425a34:	pop    rbp
  425a35:	pop    r12
  425a37:	ret    
  425a38:	nop    DWORD PTR [rax+rax*1+0x0]
  425a40:	mov    eax,0xffffffff
  425a45:	jmp    0x425a2d
  425a47:	nop
  425a48:	nop
  425a49:	nop
  425a4a:	nop
  425a4b:	nop
  425a4c:	nop
  425a4d:	nop
  425a4e:	nop
  425a4f:	nop
  425a50:	sub    rsp,0x58
  425a54:	mov    rax,QWORD PTR [rdx]
  425a57:	mov    r11,rdx
  425a5a:	mov    edx,DWORD PTR [rdx+0x8]
  425a5d:	mov    r10,rdx
  425a60:	and    r10w,0x7fff
  425a66:	jne    0x425a84
  425a68:	mov    rdx,rax
  425a6b:	shr    rdx,0x20
  425a6f:	or     eax,edx
  425a71:	jne    0x425af0
  425a73:	mov    DWORD PTR [rsp+0x44],0x0
  425a7b:	movzx  eax,WORD PTR [r11+0x8]
  425a80:	xor    edx,edx
  425a82:	jmp    0x425aab
  425a84:	cmp    r10w,0x7fff
  425a8a:	je     0x425b10
  425a90:	movzx  eax,WORD PTR [r11+0x8]
  425a95:	mov    DWORD PTR [rsp+0x44],0x1
  425a9d:	mov    edx,eax
  425a9f:	and    edx,0x7fff
  425aa5:	sub    edx,0x403e
  425aab:	and    eax,0x8000
  425ab0:	mov    r10,QWORD PTR [rsp+0x80]
  425ab8:	mov    DWORD PTR [r10],eax
  425abb:	lea    rax,[rsp+0x48]
  425ac0:	mov    QWORD PTR [rsp+0x30],r9
  425ac5:	mov    DWORD PTR [rsp+0x20],ecx
  425ac9:	lea    r9,[rsp+0x44]
  425ace:	lea    rcx,[rip+0x98fb]        # 0x42f3d0
  425ad5:	mov    DWORD PTR [rsp+0x28],r8d
  425ada:	mov    QWORD PTR [rsp+0x38],rax
  425adf:	mov    r8,r11
  425ae2:	call   0x427f00
  425ae7:	add    rsp,0x58
  425aeb:	ret    
  425aec:	nop    DWORD PTR [rax+0x0]
  425af0:	test   edx,edx
  425af2:	js     0x425a90
  425af4:	mov    DWORD PTR [rsp+0x44],0x2
  425afc:	movzx  eax,WORD PTR [r11+0x8]
  425b01:	mov    edx,0xffffbfc3
  425b06:	jmp    0x425aab
  425b08:	nop    DWORD PTR [rax+rax*1+0x0]
  425b10:	mov    rdx,rax
  425b13:	shr    rdx,0x20
  425b17:	and    edx,0x7fffffff
  425b1d:	or     edx,eax
  425b1f:	jne    0x425b35
  425b21:	mov    DWORD PTR [rsp+0x44],0x3
  425b29:	movzx  eax,WORD PTR [r11+0x8]
  425b2e:	xor    edx,edx
  425b30:	jmp    0x425aab
  425b35:	mov    DWORD PTR [rsp+0x44],0x4
  425b3d:	xor    edx,edx
  425b3f:	xor    eax,eax
  425b41:	jmp    0x425ab0
  425b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b50:	push   rbx
  425b51:	sub    rsp,0x20
  425b55:	mov    rbx,rdx
  425b58:	mov    edx,DWORD PTR [rdx+0x8]
  425b5b:	test   dh,0x40
  425b5e:	jne    0x425b68
  425b60:	mov    eax,DWORD PTR [rbx+0x24]
  425b63:	cmp    DWORD PTR [rbx+0x28],eax
  425b66:	jle    0x425b7a
  425b68:	and    dh,0x20
  425b6b:	jne    0x425b90
  425b6d:	movsxd rax,DWORD PTR [rbx+0x24]
  425b71:	mov    rdx,QWORD PTR [rbx]
  425b74:	mov    BYTE PTR [rdx+rax*1],cl
  425b77:	mov    eax,DWORD PTR [rbx+0x24]
  425b7a:	add    eax,0x1
  425b7d:	mov    DWORD PTR [rbx+0x24],eax
  425b80:	add    rsp,0x20
  425b84:	pop    rbx
  425b85:	ret    
  425b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b90:	mov    rdx,QWORD PTR [rbx]
  425b93:	call   0x42a6d8
  425b98:	mov    eax,DWORD PTR [rbx+0x24]
  425b9b:	add    eax,0x1
  425b9e:	mov    DWORD PTR [rbx+0x24],eax
  425ba1:	add    rsp,0x20
  425ba5:	pop    rbx
  425ba6:	ret    
  425ba7:	nop    WORD PTR [rax+rax*1+0x0]
  425bb0:	push   r14
  425bb2:	push   r13
  425bb4:	push   r12
  425bb6:	push   rbp
  425bb7:	push   rdi
  425bb8:	push   rsi
  425bb9:	push   rbx
  425bba:	sub    rsp,0x40
  425bbe:	lea    r14,[rsp+0x2c]
  425bc3:	lea    r13,[rsp+0x30]
  425bc8:	mov    ebx,edx
  425bca:	mov    rsi,r8
  425bcd:	xor    edx,edx
  425bcf:	mov    r12,rcx
  425bd2:	mov    r8,r14
  425bd5:	mov    rcx,r13
  425bd8:	call   0x42a3e0
  425bdd:	mov    ebp,DWORD PTR [rsi+0x10]
  425be0:	cmp    ebp,ebx
  425be2:	jge    0x425c89
  425be8:	test   ebp,ebp
  425bea:	js     0x425c89
  425bf0:	mov    eax,DWORD PTR [rsi+0xc]
  425bf3:	cmp    ebp,eax
  425bf5:	jge    0x425c96
  425bfb:	sub    eax,ebp
  425bfd:	test   eax,eax
  425bff:	mov    DWORD PTR [rsi+0xc],eax
  425c02:	jle    0x425c10
  425c04:	test   BYTE PTR [rsi+0x9],0x4
  425c08:	je     0x425ca2
  425c0e:	xchg   ax,ax
  425c10:	test   ebp,ebp
  425c12:	jle    0x425c6d
  425c14:	add    r12,0x2
  425c18:	movzx  edx,WORD PTR [r12-0x2]
  425c1e:	mov    r8,r14
  425c21:	mov    rcx,r13
  425c24:	call   0x42a3e0
  425c29:	test   eax,eax
  425c2b:	jle    0x425c6d
  425c2d:	sub    eax,0x1
  425c30:	mov    rbx,r13
  425c33:	lea    rdi,[r13+rax*1+0x1]
  425c38:	nop    DWORD PTR [rax+rax*1+0x0]
  425c40:	add    rbx,0x1
  425c44:	movsx  ecx,BYTE PTR [rbx-0x1]
  425c48:	mov    rdx,rsi
  425c4b:	call   0x425b50
  425c50:	cmp    rbx,rdi
  425c53:	jne    0x425c40
  425c55:	sub    ebp,0x1
  425c58:	jmp    0x425c10
  425c5a:	nop    WORD PTR [rax+rax*1+0x0]
  425c60:	mov    rdx,rsi
  425c63:	mov    ecx,0x20
  425c68:	call   0x425b50
  425c6d:	mov    eax,DWORD PTR [rsi+0xc]
  425c70:	lea    edx,[rax-0x1]
  425c73:	test   eax,eax
  425c75:	mov    DWORD PTR [rsi+0xc],edx
  425c78:	jg     0x425c60
  425c7a:	add    rsp,0x40
  425c7e:	pop    rbx
  425c7f:	pop    rsi
  425c80:	pop    rdi
  425c81:	pop    rbp
  425c82:	pop    r12
  425c84:	pop    r13
  425c86:	pop    r14
  425c88:	ret    
  425c89:	mov    eax,DWORD PTR [rsi+0xc]
  425c8c:	mov    ebp,ebx
  425c8e:	cmp    ebp,eax
  425c90:	jl     0x425bfb
  425c96:	mov    DWORD PTR [rsi+0xc],0xffffffff
  425c9d:	jmp    0x425c10
  425ca2:	sub    eax,0x1
  425ca5:	mov    DWORD PTR [rsi+0xc],eax
  425ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  425cb0:	mov    rdx,rsi
  425cb3:	mov    ecx,0x20
  425cb8:	call   0x425b50
  425cbd:	mov    eax,DWORD PTR [rsi+0xc]
  425cc0:	lea    edx,[rax-0x1]
  425cc3:	test   eax,eax
  425cc5:	mov    DWORD PTR [rsi+0xc],edx
  425cc8:	jne    0x425cb0
  425cca:	jmp    0x425c10
  425ccf:	nop
  425cd0:	push   rdi
  425cd1:	push   rsi
  425cd2:	push   rbx
  425cd3:	sub    rsp,0x20
  425cd7:	mov    edi,DWORD PTR [r8+0x10]
  425cdb:	mov    rsi,rcx
  425cde:	mov    rbx,r8
  425ce1:	cmp    edi,edx
  425ce3:	jge    0x425d60
  425ce5:	test   edi,edi
  425ce7:	js     0x425d60
  425ce9:	mov    eax,DWORD PTR [rbx+0xc]
  425cec:	cmp    edi,eax
  425cee:	jge    0x425d69
  425cf0:	sub    eax,edi
  425cf2:	test   eax,eax
  425cf4:	mov    DWORD PTR [rbx+0xc],eax
  425cf7:	jle    0x425dc2
  425cfd:	test   BYTE PTR [rbx+0x9],0x4
  425d01:	jne    0x425d90
  425d07:	sub    eax,0x1
  425d0a:	mov    DWORD PTR [rbx+0xc],eax
  425d0d:	nop    DWORD PTR [rax]
  425d10:	mov    rdx,rbx
  425d13:	mov    ecx,0x20
  425d18:	call   0x425b50
  425d1d:	mov    eax,DWORD PTR [rbx+0xc]
  425d20:	mov    edx,eax
  425d22:	sub    eax,0x1
  425d25:	test   edx,edx
  425d27:	mov    DWORD PTR [rbx+0xc],eax
  425d2a:	jne    0x425d10
  425d2c:	test   edi,edi
  425d2e:	lea    edx,[rdi-0x1]
  425d31:	je     0x425db0
  425d33:	lea    rdi,[rsi+rdx*1+0x1]
  425d38:	nop    DWORD PTR [rax+rax*1+0x0]
  425d40:	add    rsi,0x1
  425d44:	movsx  ecx,BYTE PTR [rsi-0x1]
  425d48:	mov    rdx,rbx
  425d4b:	call   0x425b50
  425d50:	cmp    rsi,rdi
  425d53:	jne    0x425d40
  425d55:	jmp    0x425dad
  425d57:	nop    WORD PTR [rax+rax*1+0x0]
  425d60:	mov    eax,DWORD PTR [rbx+0xc]
  425d63:	mov    edi,edx
  425d65:	cmp    edi,eax
  425d67:	jl     0x425cf0
  425d69:	test   edi,edi
  425d6b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  425d72:	lea    edx,[rdi-0x1]
  425d75:	jne    0x425d33
  425d77:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  425d7e:	add    rsp,0x20
  425d82:	pop    rbx
  425d83:	pop    rsi
  425d84:	pop    rdi
  425d85:	ret    
  425d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d90:	test   edi,edi
  425d92:	lea    edx,[rdi-0x1]
  425d95:	jne    0x425d33
  425d97:	sub    eax,0x1
  425d9a:	mov    DWORD PTR [rbx+0xc],eax
  425d9d:	nop    DWORD PTR [rax]
  425da0:	mov    rdx,rbx
  425da3:	mov    ecx,0x20
  425da8:	call   0x425b50
  425dad:	mov    eax,DWORD PTR [rbx+0xc]
  425db0:	lea    edx,[rax-0x1]
  425db3:	test   eax,eax
  425db5:	mov    DWORD PTR [rbx+0xc],edx
  425db8:	jg     0x425da0
  425dba:	add    rsp,0x20
  425dbe:	pop    rbx
  425dbf:	pop    rsi
  425dc0:	pop    rdi
  425dc1:	ret    
  425dc2:	test   edi,edi
  425dc4:	lea    edx,[rdi-0x1]
  425dc7:	jne    0x425d33
  425dcd:	sub    eax,0x1
  425dd0:	mov    DWORD PTR [rbx+0xc],eax
  425dd3:	jmp    0x425d7e
  425dd5:	nop
  425dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425de0:	sub    rsp,0x38
  425de4:	test   ecx,ecx
  425de6:	mov    DWORD PTR [r8+0x10],0xffffffff
  425dee:	je     0x425e34
  425df0:	lea    rcx,[rsp+0x20]
  425df5:	mov    r11d,DWORD PTR [r8+0x8]
  425df9:	mov    BYTE PTR [rsp+0x20],0x2d
  425dfe:	lea    r10,[rcx+0x1]
  425e02:	and    r11d,0x20
  425e06:	xor    r9d,r9d
  425e09:	movzx  eax,BYTE PTR [rdx+r9*1]
  425e0e:	and    eax,0xffffffdf
  425e11:	or     eax,r11d
  425e14:	mov    BYTE PTR [r10+r9*1],al
  425e18:	add    r9,0x1
  425e1c:	cmp    r9,0x3
  425e20:	jne    0x425e09
  425e22:	lea    rdx,[r10+0x3]
  425e26:	sub    rdx,rcx
  425e29:	call   0x425cd0
  425e2e:	nop
  425e2f:	add    rsp,0x38
  425e33:	ret    
  425e34:	mov    r11d,DWORD PTR [r8+0x8]
  425e38:	test   r11d,0x100
  425e3f:	je     0x425e51
  425e41:	lea    rcx,[rsp+0x20]
  425e46:	mov    BYTE PTR [rsp+0x20],0x2b
  425e4b:	lea    r10,[rcx+0x1]
  425e4f:	jmp    0x425e02
  425e51:	test   r11b,0x40
  425e55:	je     0x425e70
  425e57:	lea    rcx,[rsp+0x20]
  425e5c:	mov    BYTE PTR [rsp+0x20],0x20
  425e61:	lea    r10,[rcx+0x1]
  425e65:	jmp    0x425e02
  425e67:	nop    WORD PTR [rax+rax*1+0x0]
  425e70:	lea    rcx,[rsp+0x20]
  425e75:	mov    r10,rcx
  425e78:	jmp    0x425e02
  425e7a:	nop    WORD PTR [rax+rax*1+0x0]
  425e80:	push   rbp
  425e81:	push   r12
  425e83:	push   rdi
  425e84:	push   rsi
  425e85:	push   rbx
  425e86:	mov    rbp,rsp
  425e89:	sub    rsp,0x30
  425e8d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  425e91:	mov    rsi,rcx
  425e94:	je     0x425f30
  425e9a:	movzx  edx,WORD PTR [rcx+0x18]
  425e9e:	test   dx,dx
  425ea1:	je     0x425f02
  425ea3:	movsxd rax,DWORD PTR [rsi+0x14]
  425ea7:	mov    r12,rsp
  425eaa:	add    rax,0xf
  425eae:	and    rax,0xfffffffffffffff0
  425eb2:	call   0x425730
  425eb7:	sub    rsp,rax
  425eba:	lea    r8,[rbp-0x4]
  425ebe:	mov    DWORD PTR [rbp-0x4],0x0
  425ec5:	lea    rbx,[rsp+0x20]
  425eca:	mov    rcx,rbx
  425ecd:	call   0x42a3e0
  425ed2:	test   eax,eax
  425ed4:	jle    0x425f20
  425ed6:	sub    eax,0x1
  425ed9:	lea    rdi,[rbx+rax*1+0x1]
  425ede:	xchg   ax,ax
  425ee0:	add    rbx,0x1
  425ee4:	movsx  ecx,BYTE PTR [rbx-0x1]
  425ee8:	mov    rdx,rsi
  425eeb:	call   0x425b50
  425ef0:	cmp    rbx,rdi
  425ef3:	jne    0x425ee0
  425ef5:	mov    rsp,r12
  425ef8:	mov    rsp,rbp
  425efb:	pop    rbx
  425efc:	pop    rsi
  425efd:	pop    rdi
  425efe:	pop    r12
  425f00:	pop    rbp
  425f01:	ret    
  425f02:	mov    rdx,rsi
  425f05:	mov    ecx,0x2e
  425f0a:	call   0x425b50
  425f0f:	nop
  425f10:	mov    rsp,rbp
  425f13:	pop    rbx
  425f14:	pop    rsi
  425f15:	pop    rdi
  425f16:	pop    r12
  425f18:	pop    rbp
  425f19:	ret    
  425f1a:	nop    WORD PTR [rax+rax*1+0x0]
  425f20:	mov    rdx,rsi
  425f23:	mov    ecx,0x2e
  425f28:	call   0x425b50
  425f2d:	jmp    0x425ef5
  425f2f:	nop
  425f30:	mov    DWORD PTR [rbp-0x4],0x0
  425f37:	call   0x42a680
  425f3c:	mov    rdx,QWORD PTR [rax]
  425f3f:	lea    rcx,[rbp-0x6]
  425f43:	lea    r9,[rbp-0x4]
  425f47:	mov    r8d,0x10
  425f4d:	call   0x42a160
  425f52:	test   eax,eax
  425f54:	jle    0x425f66
  425f56:	movzx  edx,WORD PTR [rbp-0x6]
  425f5a:	mov    WORD PTR [rsi+0x18],dx
  425f5e:	mov    DWORD PTR [rsi+0x14],eax
  425f61:	jmp    0x425e9e
  425f66:	movzx  edx,WORD PTR [rsi+0x18]
  425f6a:	jmp    0x425f5e
  425f6c:	nop    DWORD PTR [rax+0x0]
  425f70:	push   r12
  425f72:	push   rbp
  425f73:	push   rdi
  425f74:	push   rsi
  425f75:	push   rbx
  425f76:	sub    rsp,0x20
  425f7a:	mov    esi,r8d
  425f7d:	mov    ebp,ecx
  425f7f:	mov    rdi,rdx
  425f82:	test   esi,esi
  425f84:	mov    rbx,r9
  425f87:	mov    r8d,DWORD PTR [r9+0xc]
  425f8b:	jle    0x426162
  425f91:	cmp    esi,r8d
  425f94:	jg     0x4260d0
  425f9a:	sub    r8d,esi
  425f9d:	mov    DWORD PTR [r9+0xc],r8d
  425fa1:	test   r8d,r8d
  425fa4:	js     0x4260d0
  425faa:	mov    eax,DWORD PTR [rbx+0x10]
  425fad:	cmp    eax,r8d
  425fb0:	jge    0x4260d0
  425fb6:	sub    r8d,eax
  425fb9:	test   r8d,r8d
  425fbc:	mov    DWORD PTR [rbx+0xc],r8d
  425fc0:	jle    0x4260dd
  425fc6:	test   eax,eax
  425fc8:	jle    0x426215
  425fce:	sub    r8d,0x1
  425fd2:	test   esi,esi
  425fd4:	mov    DWORD PTR [rbx+0xc],r8d
  425fd8:	jle    0x425fe4
  425fda:	test   BYTE PTR [rbx+0x9],0x10
  425fde:	jne    0x4260ef
  425fe4:	test   r8d,r8d
  425fe7:	jle    0x42602d
  425fe9:	test   ebp,ebp
  425feb:	jne    0x425ffb
  425fed:	mov    eax,DWORD PTR [rbx+0x8]
  425ff0:	test   eax,0x1c0
  425ff5:	je     0x4261f5
  425ffb:	sub    r8d,0x1
  425fff:	test   r8d,r8d
  426002:	mov    DWORD PTR [rbx+0xc],r8d
  426006:	jle    0x42602d
  426008:	test   DWORD PTR [rbx+0x8],0x600
  42600f:	jne    0x42602d
  426011:	jmp    0x426020
  426013:	mov    rdx,rbx
  426016:	mov    ecx,0x20
  42601b:	call   0x425b50
  426020:	mov    eax,DWORD PTR [rbx+0xc]
  426023:	lea    edx,[rax-0x1]
  426026:	test   eax,eax
  426028:	mov    DWORD PTR [rbx+0xc],edx
  42602b:	jg     0x426013
  42602d:	test   ebp,ebp
  42602f:	jne    0x426150
  426035:	mov    eax,DWORD PTR [rbx+0x8]
  426038:	test   ah,0x1
  42603b:	jne    0x426180
  426041:	test   al,0x40
  426043:	jne    0x426203
  426049:	mov    edx,DWORD PTR [rbx+0xc]
  42604c:	test   edx,edx
  42604e:	jle    0x426063
  426050:	mov    eax,DWORD PTR [rbx+0x8]
  426053:	and    eax,0x600
  426058:	cmp    eax,0x200
  42605d:	je     0x426192
  426063:	test   esi,esi
  426065:	jle    0x4261c2
  42606b:	lea    r12,[rbx+0x20]
  42606f:	mov    ebp,0x55555556
  426074:	movzx  eax,BYTE PTR [rdi]
  426077:	mov    ecx,0x30
  42607c:	test   al,al
  42607e:	je     0x426087
  426080:	add    rdi,0x1
  426084:	movsx  ecx,al
  426087:	mov    rdx,rbx
  42608a:	call   0x425b50
  42608f:	sub    esi,0x1
  426092:	je     0x4262b0
  426098:	test   BYTE PTR [rbx+0x9],0x10
  42609c:	je     0x426074
  42609e:	cmp    WORD PTR [rbx+0x20],0x0
  4260a3:	je     0x426074
  4260a5:	mov    eax,esi
  4260a7:	imul   ebp
  4260a9:	mov    eax,esi
  4260ab:	sar    eax,0x1f
  4260ae:	sub    edx,eax
  4260b0:	lea    eax,[rdx+rdx*2]
  4260b3:	cmp    esi,eax
  4260b5:	jne    0x426074
  4260b7:	mov    r8,rbx
  4260ba:	mov    edx,0x1
  4260bf:	mov    rcx,r12
  4260c2:	call   0x425bb0
  4260c7:	jmp    0x426074
  4260c9:	nop    DWORD PTR [rax+0x0]
  4260d0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4260d7:	mov    r8d,0xffffffff
  4260dd:	test   esi,esi
  4260df:	jle    0x42602d
  4260e5:	test   BYTE PTR [rbx+0x9],0x10
  4260e9:	je     0x42602d
  4260ef:	cmp    WORD PTR [rbx+0x20],0x0
  4260f4:	je     0x425fe4
  4260fa:	lea    ecx,[rsi+0x2]
  4260fd:	mov    edx,0x55555556
  426102:	mov    eax,ecx
  426104:	sar    ecx,0x1f
  426107:	imul   edx
  426109:	sub    edx,ecx
  42610b:	cmp    edx,0x1
  42610e:	jle    0x425fe4
  426114:	test   r8d,r8d
  426117:	jle    0x42602d
  42611d:	mov    eax,r8d
  426120:	sub    eax,edx
  426122:	add    eax,0x1
  426125:	jmp    0x426139
  426127:	nop    WORD PTR [rax+rax*1+0x0]
  426130:	test   r8d,r8d
  426133:	je     0x4262a4
  426139:	sub    r8d,0x1
  42613d:	cmp    r8d,eax
  426140:	jne    0x426130
  426142:	mov    DWORD PTR [rbx+0xc],r8d
  426146:	jmp    0x425fe4
  42614b:	nop    DWORD PTR [rax+rax*1+0x0]
  426150:	mov    rdx,rbx
  426153:	mov    ecx,0x2d
  426158:	call   0x425b50
  42615d:	jmp    0x426049
  426162:	test   r8d,r8d
  426165:	jle    0x425fa1
  42616b:	sub    r8d,0x1
  42616f:	mov    DWORD PTR [r9+0xc],r8d
  426173:	jmp    0x425faa
  426178:	nop    DWORD PTR [rax+rax*1+0x0]
  426180:	mov    rdx,rbx
  426183:	mov    ecx,0x2b
  426188:	call   0x425b50
  42618d:	jmp    0x426049
  426192:	sub    edx,0x1
  426195:	mov    DWORD PTR [rbx+0xc],edx
  426198:	nop    DWORD PTR [rax+rax*1+0x0]
  4261a0:	mov    rdx,rbx
  4261a3:	mov    ecx,0x30
  4261a8:	call   0x425b50
  4261ad:	mov    eax,DWORD PTR [rbx+0xc]
  4261b0:	lea    edx,[rax-0x1]
  4261b3:	test   eax,eax
  4261b5:	mov    DWORD PTR [rbx+0xc],edx
  4261b8:	jg     0x4261a0
  4261ba:	test   esi,esi
  4261bc:	jg     0x42606b
  4261c2:	mov    rdx,rbx
  4261c5:	mov    ecx,0x30
  4261ca:	call   0x425b50
  4261cf:	mov    eax,DWORD PTR [rbx+0x10]
  4261d2:	test   eax,eax
  4261d4:	jg     0x426242
  4261d6:	test   BYTE PTR [rbx+0x9],0x8
  4261da:	jne    0x426242
  4261dc:	test   esi,esi
  4261de:	jne    0x426286
  4261e4:	sub    eax,0x1
  4261e7:	mov    DWORD PTR [rbx+0x10],eax
  4261ea:	add    rsp,0x20
  4261ee:	pop    rbx
  4261ef:	pop    rsi
  4261f0:	pop    rdi
  4261f1:	pop    rbp
  4261f2:	pop    r12
  4261f4:	ret    
  4261f5:	test   ah,0x6
  4261f8:	je     0x426020
  4261fe:	jmp    0x426038
  426203:	mov    rdx,rbx
  426206:	mov    ecx,0x20
  42620b:	call   0x425b50
  426210:	jmp    0x426049
  426215:	mov    eax,DWORD PTR [rbx+0x8]
  426218:	test   ah,0x8
  42621b:	jne    0x425fce
  426221:	test   esi,esi
  426223:	jle    0x425fe9
  426229:	test   ah,0x10
  42622c:	je     0x425fe9
  426232:	cmp    WORD PTR [rbx+0x20],0x0
  426237:	jne    0x4260fa
  42623d:	jmp    0x425fe9
  426242:	mov    rcx,rbx
  426245:	call   0x425e80
  42624a:	test   esi,esi
  42624c:	je     0x42626b
  42624e:	jmp    0x426283
  426250:	movzx  eax,BYTE PTR [rdi]
  426253:	mov    ecx,0x30
  426258:	test   al,al
  42625a:	je     0x426263
  42625c:	add    rdi,0x1
  426260:	movsx  ecx,al
  426263:	mov    rdx,rbx
  426266:	call   0x425b50
  42626b:	mov    eax,DWORD PTR [rbx+0x10]
  42626e:	lea    edx,[rax-0x1]
  426271:	test   eax,eax
  426273:	mov    DWORD PTR [rbx+0x10],edx
  426276:	jg     0x426250
  426278:	add    rsp,0x20
  42627c:	pop    rbx
  42627d:	pop    rsi
  42627e:	pop    rdi
  42627f:	pop    rbp
  426280:	pop    r12
  426282:	ret    
  426283:	mov    eax,DWORD PTR [rbx+0x10]
  426286:	add    eax,esi
  426288:	mov    DWORD PTR [rbx+0x10],eax
  42628b:	nop    DWORD PTR [rax+rax*1+0x0]
  426290:	mov    rdx,rbx
  426293:	mov    ecx,0x30
  426298:	call   0x425b50
  42629d:	add    esi,0x1
  4262a0:	jne    0x426290
  4262a2:	jmp    0x42626b
  4262a4:	mov    DWORD PTR [rbx+0xc],0x0
  4262ab:	jmp    0x42602d
  4262b0:	mov    eax,DWORD PTR [rbx+0x10]
  4262b3:	test   eax,eax
  4262b5:	jle    0x4262c1
  4262b7:	mov    rcx,rbx
  4262ba:	call   0x425e80
  4262bf:	jmp    0x42626b
  4262c1:	test   BYTE PTR [rbx+0x9],0x8
  4262c5:	jne    0x4262b7
  4262c7:	jmp    0x4261e4
  4262cc:	nop    DWORD PTR [rax+0x0]
  4262d0:	push   rsi
  4262d1:	push   rbx
  4262d2:	sub    rsp,0x68
  4262d6:	mov    r8d,DWORD PTR [rdx+0x10]
  4262da:	fld    TBYTE PTR [rcx]
  4262dc:	mov    rbx,rdx
  4262df:	test   r8d,r8d
  4262e2:	js     0x426380
  4262e8:	lea    rdx,[rsp+0x30]
  4262ed:	lea    r9,[rsp+0x4c]
  4262f2:	mov    ecx,0x3
  4262f7:	fstp   TBYTE PTR [rsp+0x50]
  4262fb:	mov    rax,QWORD PTR [rsp+0x50]
  426300:	mov    QWORD PTR [rsp+0x30],rax
  426305:	mov    rax,QWORD PTR [rsp+0x58]
  42630a:	mov    QWORD PTR [rsp+0x38],rax
  42630f:	lea    rax,[rsp+0x48]
  426314:	mov    QWORD PTR [rsp+0x20],rax
  426319:	call   0x425a50
  42631e:	mov    r8d,DWORD PTR [rsp+0x4c]
  426323:	mov    rsi,rax
  426326:	cmp    r8d,0xffff8000
  42632d:	je     0x426392
  42632f:	mov    ecx,DWORD PTR [rsp+0x48]
  426333:	mov    rdx,rax
  426336:	mov    r9,rbx
  426339:	call   0x425f70
  42633e:	mov    eax,DWORD PTR [rbx+0xc]
  426341:	lea    edx,[rax-0x1]
  426344:	test   eax,eax
  426346:	mov    DWORD PTR [rbx+0xc],edx
  426349:	jle    0x42636e
  42634b:	nop    DWORD PTR [rax+rax*1+0x0]
  426350:	mov    rdx,rbx
  426353:	mov    ecx,0x20
  426358:	call   0x425b50
  42635d:	mov    r8d,DWORD PTR [rbx+0xc]
  426361:	lea    r9d,[r8-0x1]
  426365:	test   r8d,r8d
  426368:	mov    DWORD PTR [rbx+0xc],r9d
  42636c:	jg     0x426350
  42636e:	mov    rcx,rsi
  426371:	call   0x427d60
  426376:	nop
  426377:	add    rsp,0x68
  42637b:	pop    rbx
  42637c:	pop    rsi
  42637d:	ret    
  42637e:	xchg   ax,ax
  426380:	mov    DWORD PTR [rdx+0x10],0x6
  426387:	mov    r8d,0x6
  42638d:	jmp    0x4262e8
  426392:	mov    ecx,DWORD PTR [rsp+0x48]
  426396:	mov    r8,rbx
  426399:	mov    rdx,rax
  42639c:	call   0x425de0
  4263a1:	mov    rcx,rsi
  4263a4:	call   0x427d60
  4263a9:	nop
  4263aa:	add    rsp,0x68
  4263ae:	pop    rbx
  4263af:	pop    rsi
  4263b0:	ret    
  4263b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4263b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263c0:	push   rbp
  4263c1:	push   r13
  4263c3:	push   r12
  4263c5:	push   rdi
  4263c6:	push   rsi
  4263c7:	push   rbx
  4263c8:	sub    rsp,0x28
  4263cc:	lea    rbp,[rsp+0x80]
  4263d4:	mov    ebx,DWORD PTR [rdx+0x10]
  4263d7:	mov    r11d,DWORD PTR [rdx+0x8]
  4263db:	mov    r8d,0x0
  4263e1:	mov    rsi,rdx
  4263e4:	test   ebx,ebx
  4263e6:	cmovns r8d,ebx
  4263ea:	add    r8d,0x17
  4263ee:	test   r11d,0x1000
  4263f5:	je     0x426402
  4263f7:	cmp    WORD PTR [rdx+0x20],0x0
  4263fc:	jne    0x4265f2
  426402:	movsxd r13,DWORD PTR [rsi+0xc]
  426406:	movsxd rax,r8d
  426409:	cmp    r8d,r13d
  42640c:	cmovl  rax,r13
  426410:	add    rax,0x1e
  426414:	and    rax,0xfffffffffffffff0
  426418:	call   0x425730
  42641d:	sub    rsp,rax
  426420:	test   r11b,0x80
  426424:	lea    r12,[rsp+0x20]
  426429:	je     0x42643c
  42642b:	test   rcx,rcx
  42642e:	js     0x426680
  426434:	and    r11b,0x7f
  426438:	mov    DWORD PTR [rsi+0x8],r11d
  42643c:	test   rcx,rcx
  42643f:	je     0x426688
  426445:	mov    r10d,r11d
  426448:	mov    r8,r12
  42644b:	movabs r9,0xcccccccccccccccd
  426455:	and    r10d,0x1000
  42645c:	jmp    0x426493
  42645e:	xchg   ax,ax
  426460:	cmp    r12,rdi
  426463:	je     0x426490
  426465:	test   r10d,r10d
  426468:	je     0x426490
  42646a:	cmp    WORD PTR [rsi+0x20],0x0
  42646f:	je     0x426490
  426471:	mov    rax,rdi
  426474:	sub    rax,r12
  426477:	cqo    
  426479:	shr    rdx,0x3e
  42647d:	add    rax,rdx
  426480:	and    eax,0x3
  426483:	sub    rax,rdx
  426486:	cmp    rax,0x3
  42648a:	je     0x4265d0
  426490:	mov    r8,rdi
  426493:	mov    rax,rcx
  426496:	lea    rdi,[r8+0x1]
  42649a:	mul    r9
  42649d:	shr    rdx,0x3
  4264a1:	lea    rax,[rdx+rdx*4]
  4264a5:	add    rax,rax
  4264a8:	sub    rcx,rax
  4264ab:	add    ecx,0x30
  4264ae:	test   rdx,rdx
  4264b1:	mov    BYTE PTR [r8],cl
  4264b4:	mov    rcx,rdx
  4264b7:	jne    0x426460
  4264b9:	test   ebx,ebx
  4264bb:	jle    0x4264f5
  4264bd:	mov    rax,r12
  4264c0:	sub    rax,rdi
  4264c3:	add    eax,ebx
  4264c5:	test   eax,eax
  4264c7:	jle    0x4264f5
  4264c9:	sub    eax,0x1
  4264cc:	mov    rdx,rax
  4264cf:	lea    rcx,[rdi+rax*1+0x1]
  4264d4:	mov    rax,rdi
  4264d7:	nop    WORD PTR [rax+rax*1+0x0]
  4264e0:	add    rax,0x1
  4264e4:	mov    BYTE PTR [rax-0x1],0x30
  4264e8:	cmp    rax,rcx
  4264eb:	jne    0x4264e0
  4264ed:	movsxd rax,edx
  4264f0:	lea    rdi,[rdi+rax*1+0x1]
  4264f5:	cmp    r12,rdi
  4264f8:	jne    0x426505
  4264fa:	test   ebx,ebx
  4264fc:	je     0x426505
  4264fe:	mov    BYTE PTR [rdi],0x30
  426501:	add    rdi,0x1
  426505:	test   r13d,r13d
  426508:	jle    0x42656e
  42650a:	mov    rax,r12
  42650d:	sub    rax,rdi
  426510:	add    r13d,eax
  426513:	test   r13d,r13d
  426516:	mov    DWORD PTR [rsi+0xc],r13d
  42651a:	jle    0x42656e
  42651c:	test   r11d,0x1c0
  426523:	je     0x42652d
  426525:	sub    r13d,0x1
  426529:	mov    DWORD PTR [rsi+0xc],r13d
  42652d:	test   ebx,ebx
  42652f:	js     0x426630
  426535:	test   r11d,0x400
  42653c:	jne    0x42656e
  42653e:	mov    eax,DWORD PTR [rsi+0xc]
  426541:	lea    edx,[rax-0x1]
  426544:	test   eax,eax
  426546:	mov    DWORD PTR [rsi+0xc],edx
  426549:	jle    0x42656e
  42654b:	nop    DWORD PTR [rax+rax*1+0x0]
  426550:	mov    rdx,rsi
  426553:	mov    ecx,0x20
  426558:	call   0x425b50
  42655d:	mov    eax,DWORD PTR [rsi+0xc]
  426560:	lea    edx,[rax-0x1]
  426563:	test   eax,eax
  426565:	mov    DWORD PTR [rsi+0xc],edx
  426568:	jg     0x426550
  42656a:	mov    r11d,DWORD PTR [rsi+0x8]
  42656e:	test   r11b,0x80
  426572:	je     0x4265e0
  426574:	lea    rbx,[rdi+0x1]
  426578:	mov    BYTE PTR [rdi],0x2d
  42657b:	cmp    r12,rbx
  42657e:	jae    0x4265ae
  426580:	sub    rbx,0x1
  426584:	movsx  ecx,BYTE PTR [rbx]
  426587:	mov    rdx,rsi
  42658a:	call   0x425b50
  42658f:	cmp    rbx,r12
  426592:	jne    0x426580
  426594:	mov    eax,DWORD PTR [rsi+0xc]
  426597:	lea    edx,[rax-0x1]
  42659a:	test   eax,eax
  42659c:	mov    DWORD PTR [rsi+0xc],edx
  42659f:	jle    0x4265bb
  4265a1:	mov    rdx,rsi
  4265a4:	mov    ecx,0x20
  4265a9:	call   0x425b50
  4265ae:	mov    eax,DWORD PTR [rsi+0xc]
  4265b1:	lea    edx,[rax-0x1]
  4265b4:	test   eax,eax
  4265b6:	mov    DWORD PTR [rsi+0xc],edx
  4265b9:	jg     0x4265a1
  4265bb:	lea    rsp,[rbp-0x58]
  4265bf:	pop    rbx
  4265c0:	pop    rsi
  4265c1:	pop    rdi
  4265c2:	pop    r12
  4265c4:	pop    r13
  4265c6:	pop    rbp
  4265c7:	ret    
  4265c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4265d0:	lea    rdi,[r8+0x2]
  4265d4:	mov    BYTE PTR [r8+0x1],0x2c
  4265d9:	jmp    0x426490
  4265de:	xchg   ax,ax
  4265e0:	test   r11d,0x100
  4265e7:	je     0x426610
  4265e9:	lea    rbx,[rdi+0x1]
  4265ed:	mov    BYTE PTR [rdi],0x2b
  4265f0:	jmp    0x42657b
  4265f2:	mov    eax,r8d
  4265f5:	mov    edx,0x55555556
  4265fa:	imul   edx
  4265fc:	mov    eax,r8d
  4265ff:	sar    eax,0x1f
  426602:	sub    edx,eax
  426604:	add    r8d,edx
  426607:	jmp    0x426402
  42660c:	nop    DWORD PTR [rax+0x0]
  426610:	and    r11d,0x40
  426614:	mov    rbx,rdi
  426617:	je     0x42657b
  42661d:	add    rbx,0x1
  426621:	mov    BYTE PTR [rdi],0x20
  426624:	jmp    0x42657b
  426629:	nop    DWORD PTR [rax+0x0]
  426630:	mov    eax,r11d
  426633:	and    eax,0x600
  426638:	cmp    eax,0x200
  42663d:	jne    0x426535
  426643:	mov    eax,DWORD PTR [rsi+0xc]
  426646:	lea    ecx,[rax-0x1]
  426649:	test   eax,eax
  42664b:	mov    DWORD PTR [rsi+0xc],ecx
  42664e:	jle    0x42656e
  426654:	lea    rdx,[rdi+rcx*1+0x1]
  426659:	mov    rax,rdi
  42665c:	nop    DWORD PTR [rax+0x0]
  426660:	add    rax,0x1
  426664:	mov    BYTE PTR [rax-0x1],0x30
  426668:	cmp    rax,rdx
  42666b:	jne    0x426660
  42666d:	lea    rdi,[rdi+rcx*1+0x1]
  426672:	mov    DWORD PTR [rsi+0xc],0xffffffff
  426679:	jmp    0x42656e
  42667e:	xchg   ax,ax
  426680:	neg    rcx
  426683:	jmp    0x42643c
  426688:	mov    rdi,r12
  42668b:	jmp    0x4264b9
  426690:	push   rdi
  426691:	push   rsi
  426692:	push   rbx
  426693:	sub    rsp,0x20
  426697:	mov    rsi,r9
  42669a:	lea    r9d,[r8-0x1]
  42669e:	mov    r8d,0x66666667
  4266a4:	mov    r10,rdx
  4266a7:	mov    eax,r9d
  4266aa:	movsxd rbx,r9d
  4266ad:	sar    r9d,0x1f
  4266b1:	imul   r8d
  4266b4:	sar    edx,0x2
  4266b7:	mov    r8d,edx
  4266ba:	sub    r8d,r9d
  4266bd:	mov    r9d,0x1
  4266c3:	je     0x4266eb
  4266c5:	mov    r11d,0x66666667
  4266cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4266d0:	mov    eax,r8d
  4266d3:	sar    r8d,0x1f
  4266d7:	add    r9d,0x1
  4266db:	imul   r11d
  4266de:	mov    eax,edx
  4266e0:	sar    eax,0x2
  4266e3:	sub    eax,r8d
  4266e6:	mov    r8d,eax
  4266e9:	jne    0x4266d0
  4266eb:	mov    edi,DWORD PTR [rsi+0x2c]
  4266ee:	mov    eax,DWORD PTR [rsi+0xc]
  4266f1:	cmp    r9d,edi
  4266f4:	cmovge edi,r9d
  4266f8:	lea    edx,[rdi+0x2]
  4266fb:	cmp    eax,edx
  4266fd:	jg     0x426752
  4266ff:	mov    DWORD PTR [rsi+0xc],0xffffffff
  426706:	mov    r9,rsi
  426709:	mov    rdx,r10
  42670c:	mov    r8d,0x1
  426712:	call   0x425f70
  426717:	mov    ecx,DWORD PTR [rsi+0x8]
  42671a:	mov    eax,DWORD PTR [rsi+0x2c]
  42671d:	mov    rdx,rsi
  426720:	mov    DWORD PTR [rsi+0x10],eax
  426723:	mov    eax,ecx
  426725:	and    ecx,0x20
  426728:	or     eax,0x1c0
  42672d:	or     ecx,0x45
  426730:	mov    DWORD PTR [rsi+0x8],eax
  426733:	call   0x425b50
  426738:	lea    r9d,[rdi+0x1]
  42673c:	add    DWORD PTR [rsi+0xc],r9d
  426740:	mov    rdx,rsi
  426743:	mov    rcx,rbx
  426746:	add    rsp,0x20
  42674a:	pop    rbx
  42674b:	pop    rsi
  42674c:	pop    rdi
  42674d:	jmp    0x4263c0
  426752:	sub    eax,edx
  426754:	mov    DWORD PTR [rsi+0xc],eax
  426757:	jmp    0x426706
  426759:	nop    DWORD PTR [rax+0x0]
  426760:	push   rsi
  426761:	push   rbx
  426762:	sub    rsp,0x68
  426766:	mov    eax,DWORD PTR [rdx+0x10]
  426769:	fld    TBYTE PTR [rcx]
  42676b:	mov    rbx,rdx
  42676e:	test   eax,eax
  426770:	lea    r8d,[rax+0x1]
  426774:	js     0x4267e0
  426776:	lea    rdx,[rsp+0x30]
  42677b:	lea    r9,[rsp+0x4c]
  426780:	mov    ecx,0x2
  426785:	fstp   TBYTE PTR [rsp+0x50]
  426789:	mov    rax,QWORD PTR [rsp+0x50]
  42678e:	mov    QWORD PTR [rsp+0x30],rax
  426793:	mov    rax,QWORD PTR [rsp+0x58]
  426798:	mov    QWORD PTR [rsp+0x38],rax
  42679d:	lea    rax,[rsp+0x48]
  4267a2:	mov    QWORD PTR [rsp+0x20],rax
  4267a7:	call   0x425a50
  4267ac:	mov    r8d,DWORD PTR [rsp+0x4c]
  4267b1:	mov    rsi,rax
  4267b4:	cmp    r8d,0xffff8000
  4267bb:	je     0x4267f0
  4267bd:	mov    ecx,DWORD PTR [rsp+0x48]
  4267c1:	mov    r9,rbx
  4267c4:	mov    rdx,rax
  4267c7:	call   0x426690
  4267cc:	mov    rcx,rsi
  4267cf:	call   0x427d60
  4267d4:	nop
  4267d5:	add    rsp,0x68
  4267d9:	pop    rbx
  4267da:	pop    rsi
  4267db:	ret    
  4267dc:	nop    DWORD PTR [rax+0x0]
  4267e0:	mov    DWORD PTR [rdx+0x10],0x6
  4267e7:	mov    r8d,0x7
  4267ed:	jmp    0x426776
  4267ef:	nop
  4267f0:	mov    ecx,DWORD PTR [rsp+0x48]
  4267f4:	mov    r8,rbx
  4267f7:	mov    rdx,rax
  4267fa:	call   0x425de0
  4267ff:	mov    rcx,rsi
  426802:	call   0x427d60
  426807:	nop
  426808:	add    rsp,0x68
  42680c:	pop    rbx
  42680d:	pop    rsi
  42680e:	ret    
  42680f:	nop
  426810:	push   rsi
  426811:	push   rbx
  426812:	sub    rsp,0x78
  426816:	mov    r8d,DWORD PTR [rdx+0x10]
  42681a:	fld    TBYTE PTR [rcx]
  42681c:	mov    rbx,rdx
  42681f:	test   r8d,r8d
  426822:	js     0x426960
  426828:	je     0x426940
  42682e:	lea    rdx,[rsp+0x40]
  426833:	lea    r9,[rsp+0x5c]
  426838:	mov    ecx,0x2
  42683d:	fstp   TBYTE PTR [rsp+0x60]
  426841:	mov    rax,QWORD PTR [rsp+0x60]
  426846:	mov    QWORD PTR [rsp+0x40],rax
  42684b:	mov    rax,QWORD PTR [rsp+0x68]
  426850:	mov    QWORD PTR [rsp+0x48],rax
  426855:	lea    rax,[rsp+0x58]
  42685a:	mov    QWORD PTR [rsp+0x20],rax
  42685f:	call   0x425a50
  426864:	mov    r8d,DWORD PTR [rsp+0x5c]
  426869:	mov    rsi,rax
  42686c:	cmp    r8d,0xffff8000
  426873:	je     0x426980
  426879:	cmp    r8d,0xfffffffd
  42687d:	jl     0x426900
  426883:	mov    eax,DWORD PTR [rbx+0x10]
  426886:	cmp    r8d,eax
  426889:	jg     0x426900
  42688b:	test   BYTE PTR [rbx+0x9],0x8
  42688f:	jne    0x426972
  426895:	mov    rcx,rsi
  426898:	mov    DWORD PTR [rsp+0x3c],r8d
  42689d:	call   0x42a610
  4268a2:	mov    r8d,DWORD PTR [rsp+0x3c]
  4268a7:	sub    eax,r8d
  4268aa:	test   eax,eax
  4268ac:	mov    DWORD PTR [rbx+0x10],eax
  4268af:	js     0x426991
  4268b5:	mov    ecx,DWORD PTR [rsp+0x58]
  4268b9:	mov    rdx,rsi
  4268bc:	mov    r9,rbx
  4268bf:	call   0x425f70
  4268c4:	mov    eax,DWORD PTR [rbx+0xc]
  4268c7:	lea    edx,[rax-0x1]
  4268ca:	test   eax,eax
  4268cc:	mov    DWORD PTR [rbx+0xc],edx
  4268cf:	jle    0x42692d
  4268d1:	mov    rdx,rbx
  4268d4:	mov    ecx,0x20
  4268d9:	call   0x425b50
  4268de:	mov    r8d,DWORD PTR [rbx+0xc]
  4268e2:	lea    r9d,[r8-0x1]
  4268e6:	test   r8d,r8d
  4268e9:	mov    DWORD PTR [rbx+0xc],r9d
  4268ed:	jg     0x4268d1
  4268ef:	mov    rcx,rsi
  4268f2:	call   0x427d60
  4268f7:	nop
  4268f8:	add    rsp,0x78
  4268fc:	pop    rbx
  4268fd:	pop    rsi
  4268fe:	ret    
  4268ff:	nop
  426900:	test   BYTE PTR [rbx+0x9],0x8
  426904:	jne    0x426952
  426906:	mov    rcx,rsi
  426909:	mov    DWORD PTR [rsp+0x3c],r8d
  42690e:	call   0x42a610
  426913:	mov    r8d,DWORD PTR [rsp+0x3c]
  426918:	sub    eax,0x1
  42691b:	mov    DWORD PTR [rbx+0x10],eax
  42691e:	mov    ecx,DWORD PTR [rsp+0x58]
  426922:	mov    r9,rbx
  426925:	mov    rdx,rsi
  426928:	call   0x426690
  42692d:	mov    rcx,rsi
  426930:	call   0x427d60
  426935:	nop
  426936:	add    rsp,0x78
  42693a:	pop    rbx
  42693b:	pop    rsi
  42693c:	ret    
  42693d:	nop    DWORD PTR [rax]
  426940:	mov    DWORD PTR [rdx+0x10],0x1
  426947:	mov    r8d,0x1
  42694d:	jmp    0x42682e
  426952:	sub    DWORD PTR [rbx+0x10],0x1
  426956:	jmp    0x42691e
  426958:	nop    DWORD PTR [rax+rax*1+0x0]
  426960:	mov    DWORD PTR [rdx+0x10],0x6
  426967:	mov    r8d,0x6
  42696d:	jmp    0x42682e
  426972:	sub    eax,r8d
  426975:	mov    DWORD PTR [rbx+0x10],eax
  426978:	jmp    0x4268b5
  42697d:	nop    DWORD PTR [rax]
  426980:	mov    ecx,DWORD PTR [rsp+0x58]
  426984:	mov    r8,rbx
  426987:	mov    rdx,rax
  42698a:	call   0x425de0
  42698f:	jmp    0x42692d
  426991:	mov    edx,DWORD PTR [rbx+0xc]
  426994:	test   edx,edx
  426996:	jle    0x4268b5
  42699c:	add    eax,edx
  42699e:	mov    DWORD PTR [rbx+0xc],eax
  4269a1:	jmp    0x4268b5
  4269a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269b0:	push   rbp
  4269b1:	push   r14
  4269b3:	push   r13
  4269b5:	push   r12
  4269b7:	push   rdi
  4269b8:	push   rsi
  4269b9:	push   rbx
  4269ba:	mov    rbp,rsp
  4269bd:	sub    rsp,0x20
  4269c1:	mov    r10d,0x12
  4269c7:	mov    eax,0x18
  4269cc:	cmp    ecx,0x6f
  4269cf:	mov    rbx,r8
  4269d2:	mov    r8d,DWORD PTR [r8+0x10]
  4269d6:	mov    r11d,ecx
  4269d9:	setne  cl
  4269dc:	mov    edi,DWORD PTR [rbx+0x8]
  4269df:	movzx  ecx,cl
  4269e2:	cmovne eax,r10d
  4269e6:	mov    r10b,0x0
  4269e9:	add    ecx,0x3
  4269ec:	test   r8d,r8d
  4269ef:	mov    r9,rdx
  4269f2:	cmovns r10d,r8d
  4269f6:	add    r10d,eax
  4269f9:	test   edi,0x1000
  4269ff:	je     0x426a0c
  426a01:	cmp    WORD PTR [rbx+0x20],0x0
  426a06:	jne    0x426bd3
  426a0c:	movsxd r12,DWORD PTR [rbx+0xc]
  426a10:	movsxd rax,r10d
  426a13:	cmp    r10d,r12d
  426a16:	cmovl  rax,r12
  426a1a:	add    rax,0x1e
  426a1e:	and    rax,0xfffffffffffffff0
  426a22:	call   0x425730
  426a27:	xor    edx,edx
  426a29:	sub    rsp,rax
  426a2c:	cmp    r11d,0x6f
  426a30:	lea    rsi,[rsp+0x20]
  426a35:	setne  dl
  426a38:	test   r9,r9
  426a3b:	lea    edx,[rdx*8+0x7]
  426a42:	mov    r10,rsi
  426a45:	je     0x426cf2
  426a4b:	mov    r13d,r11d
  426a4e:	and    r13d,0x20
  426a52:	jmp    0x426a60
  426a54:	shr    r9,cl
  426a57:	mov    BYTE PTR [r10-0x1],r14b
  426a5b:	test   r9,r9
  426a5e:	je     0x426a85
  426a60:	mov    eax,edx
  426a62:	add    r10,0x1
  426a66:	and    eax,r9d
  426a69:	lea    r14d,[rax+0x30]
  426a6d:	cmp    r14b,0x39
  426a71:	jbe    0x426a54
  426a73:	add    eax,0x37
  426a76:	shr    r9,cl
  426a79:	or     eax,r13d
  426a7c:	test   r9,r9
  426a7f:	mov    BYTE PTR [r10-0x1],al
  426a83:	jne    0x426a60
  426a85:	cmp    rsi,r10
  426a88:	je     0x426cf2
  426a8e:	test   r8d,r8d
  426a91:	jle    0x426c52
  426a97:	mov    rax,rsi
  426a9a:	sub    rax,r10
  426a9d:	add    eax,r8d
  426aa0:	test   eax,eax
  426aa2:	jle    0x426c52
  426aa8:	sub    eax,0x1
  426aab:	mov    rdx,rax
  426aae:	lea    rcx,[r10+rax*1+0x1]
  426ab3:	mov    rax,r10
  426ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ac0:	add    rax,0x1
  426ac4:	mov    BYTE PTR [rax-0x1],0x30
  426ac8:	cmp    rax,rcx
  426acb:	jne    0x426ac0
  426acd:	movsxd rax,edx
  426ad0:	lea    r10,[r10+rax*1+0x1]
  426ad5:	cmp    rsi,r10
  426ad8:	jne    0x426af0
  426ada:	test   r8d,r8d
  426add:	je     0x426af0
  426adf:	mov    BYTE PTR [r10],0x30
  426ae3:	add    r10,0x1
  426ae7:	nop    WORD PTR [rax+rax*1+0x0]
  426af0:	mov    rax,r10
  426af3:	sub    rax,rsi
  426af6:	cmp    r12d,eax
  426af9:	jle    0x426c20
  426aff:	sub    r12d,eax
  426b02:	test   r12d,r12d
  426b05:	mov    DWORD PTR [rbx+0xc],r12d
  426b09:	jle    0x426d57
  426b0f:	cmp    r11d,0x6f
  426b13:	mov    edx,DWORD PTR [rbx+0x8]
  426b16:	je     0x426ce0
  426b1c:	test   dh,0x8
  426b1f:	je     0x426ca0
  426b25:	lea    r13d,[r12-0x2]
  426b2a:	test   r13d,r13d
  426b2d:	jle    0x426b38
  426b2f:	test   r8d,r8d
  426b32:	js     0x426bed
  426b38:	test   r13d,r13d
  426b3b:	mov    BYTE PTR [r10],r11b
  426b3e:	lea    rdi,[r10+0x2]
  426b42:	mov    BYTE PTR [r10+0x1],0x30
  426b47:	jle    0x426c48
  426b4d:	and    dh,0x4
  426b50:	jne    0x426c73
  426b56:	lea    r14d,[r13-0x1]
  426b5a:	mov    r12d,r14d
  426b5d:	nop    DWORD PTR [rax]
  426b60:	sub    r12d,0x1
  426b64:	mov    rdx,rbx
  426b67:	mov    ecx,0x20
  426b6c:	call   0x425b50
  426b71:	lea    eax,[r12+0x1]
  426b76:	test   eax,eax
  426b78:	jg     0x426b60
  426b7a:	test   r14d,r14d
  426b7d:	lea    r13d,[r14-0x1]
  426b81:	mov    r12d,0x0
  426b87:	cmovns r12d,r14d
  426b8b:	sub    r13d,r12d
  426b8e:	cmp    rsi,rdi
  426b91:	jb     0x426c80
  426b97:	nop    WORD PTR [rax+rax*1+0x0]
  426ba0:	test   r13d,r13d
  426ba3:	lea    esi,[r13-0x1]
  426ba7:	jle    0x426bc5
  426ba9:	nop    DWORD PTR [rax+0x0]
  426bb0:	mov    rdx,rbx
  426bb3:	mov    ecx,0x20
  426bb8:	sub    esi,0x1
  426bbb:	call   0x425b50
  426bc0:	cmp    esi,0xffffffff
  426bc3:	jne    0x426bb0
  426bc5:	mov    rsp,rbp
  426bc8:	pop    rbx
  426bc9:	pop    rsi
  426bca:	pop    rdi
  426bcb:	pop    r12
  426bcd:	pop    r13
  426bcf:	pop    r14
  426bd1:	pop    rbp
  426bd2:	ret    
  426bd3:	mov    eax,r10d
  426bd6:	mov    edx,0x55555556
  426bdb:	imul   edx
  426bdd:	mov    eax,r10d
  426be0:	sar    eax,0x1f
  426be3:	sub    edx,eax
  426be5:	add    r10d,edx
  426be8:	jmp    0x426a0c
  426bed:	mov    eax,edx
  426bef:	and    eax,0x600
  426bf4:	cmp    eax,0x200
  426bf9:	je     0x426d00
  426bff:	mov    r12d,r13d
  426c02:	test   dh,0x8
  426c05:	mov    r13d,r12d
  426c08:	mov    rdi,r10
  426c0b:	je     0x426b4d
  426c11:	mov    r13d,r12d
  426c14:	jmp    0x426b38
  426c19:	nop    DWORD PTR [rax+0x0]
  426c20:	mov    DWORD PTR [rbx+0xc],0xffffffff
  426c27:	mov    r13d,0xffffffff
  426c2d:	cmp    r11d,0x6f
  426c31:	je     0x426c45
  426c33:	mov    edx,DWORD PTR [rbx+0x8]
  426c36:	mov    eax,edx
  426c38:	and    eax,0x800
  426c3d:	test   eax,eax
  426c3f:	jne    0x426b38
  426c45:	mov    rdi,r10
  426c48:	cmp    rsi,rdi
  426c4b:	jb     0x426c80
  426c4d:	jmp    0x426bc5
  426c52:	cmp    r11d,0x6f
  426c56:	jne    0x426ad5
  426c5c:	test   BYTE PTR [rbx+0x9],0x8
  426c60:	je     0x426ad5
  426c66:	mov    BYTE PTR [r10],0x30
  426c6a:	add    r10,0x1
  426c6e:	jmp    0x426ad5
  426c73:	cmp    rsi,rdi
  426c76:	jae    0x426d5f
  426c7c:	nop    DWORD PTR [rax+0x0]
  426c80:	sub    rdi,0x1
  426c84:	movsx  ecx,BYTE PTR [rdi]
  426c87:	mov    rdx,rbx
  426c8a:	call   0x425b50
  426c8f:	cmp    rsi,rdi
  426c92:	jb     0x426c80
  426c94:	jmp    0x426ba0
  426c99:	nop    DWORD PTR [rax+0x0]
  426ca0:	test   r8d,r8d
  426ca3:	jns    0x426c02
  426ca9:	mov    eax,edx
  426cab:	and    eax,0x600
  426cb0:	cmp    eax,0x200
  426cb5:	je     0x426d4e
  426cbb:	cmp    r11d,0x6f
  426cbf:	jne    0x426c02
  426cc5:	and    dh,0x4
  426cc8:	jne    0x426cea
  426cca:	lea    r14d,[r12-0x1]
  426ccf:	mov    rdi,r10
  426cd2:	jmp    0x426b5a
  426cd7:	nop    WORD PTR [rax+rax*1+0x0]
  426ce0:	test   r8d,r8d
  426ce3:	js     0x426ca9
  426ce5:	and    dh,0x4
  426ce8:	je     0x426cca
  426cea:	mov    rdi,r10
  426ced:	mov    r13d,r12d
  426cf0:	jmp    0x426c8f
  426cf2:	and    edi,0xfffff7ff
  426cf8:	mov    DWORD PTR [rbx+0x8],edi
  426cfb:	jmp    0x426a8e
  426d00:	lea    r8d,[r12-0x3]
  426d05:	mov    r12d,r8d
  426d08:	mov    eax,r12d
  426d0b:	lea    rcx,[r10+rax*1+0x1]
  426d10:	mov    rax,r10
  426d13:	add    rax,0x1
  426d17:	mov    BYTE PTR [rax-0x1],0x30
  426d1b:	cmp    rax,rcx
  426d1e:	jne    0x426d13
  426d20:	movsxd rax,r8d
  426d23:	cmp    r11d,0x6f
  426d27:	lea    r10,[r10+rax*1+0x1]
  426d2c:	je     0x426d40
  426d2e:	mov    eax,edx
  426d30:	mov    r13d,0xffffffff
  426d36:	and    eax,0x800
  426d3b:	jmp    0x426c3d
  426d40:	mov    rdi,r10
  426d43:	mov    r13d,0xffffffff
  426d49:	jmp    0x426c48
  426d4e:	sub    r12d,0x1
  426d52:	mov    r8d,r12d
  426d55:	jmp    0x426d08
  426d57:	mov    r13d,r12d
  426d5a:	jmp    0x426c2d
  426d5f:	lea    esi,[r13-0x1]
  426d63:	jmp    0x426bb0
  426d68:	nop    DWORD PTR [rax+rax*1+0x0]
  426d70:	push   r13
  426d72:	push   r12
  426d74:	push   rbp
  426d75:	push   rdi
  426d76:	push   rsi
  426d77:	push   rbx
  426d78:	sub    rsp,0x68
  426d7c:	mov    r9,QWORD PTR [rcx]
  426d7f:	mov    r10d,DWORD PTR [rcx+0x8]
  426d83:	mov    rbx,rdx
  426d86:	mov    rax,r9
  426d89:	mov    QWORD PTR [rsp+0x30],r9
  426d8e:	mov    DWORD PTR [rsp+0x38],r10d
  426d93:	shr    rax,0x20
  426d97:	mov    r8,r10
  426d9a:	and    eax,0x7fffffff
  426d9f:	or     r9d,eax
  426da2:	lea    eax,[r10+r10*1]
  426da6:	mov    edx,r9d
  426da9:	neg    edx
  426dab:	and    eax,0xfffe
  426db0:	or     edx,r9d
  426db3:	shr    edx,0x1f
  426db6:	or     edx,eax
  426db8:	mov    eax,0xfffe
  426dbd:	sub    eax,edx
  426dbf:	sar    eax,0x10
  426dc2:	test   eax,eax
  426dc4:	jne    0x4271b0
  426dca:	movzx  esi,WORD PTR [rsp+0x38]
  426dcf:	mov    ecx,esi
  426dd1:	and    ecx,0x8000
  426dd7:	je     0x426de0
  426dd9:	or     DWORD PTR [rbx+0x8],0x80
  426de0:	and    r8w,0x7fff
  426de6:	cmp    r8w,0x7fff
  426dec:	jne    0x426e10
  426dee:	test   r9d,r9d
  426df1:	jne    0x426e10
  426df3:	lea    rdx,[rip+0x1f00a]        # 0x445e04
  426dfa:	mov    r8,rbx
  426dfd:	call   0x425de0
  426e02:	jmp    0x427185
  426e07:	nop    WORD PTR [rax+rax*1+0x0]
  426e10:	and    si,0x7fff
  426e15:	jne    0x426f40
  426e1b:	mov    rax,QWORD PTR [rsp+0x30]
  426e20:	test   rax,rax
  426e23:	jne    0x4271cf
  426e29:	mov    r9d,DWORD PTR [rbx+0x10]
  426e2d:	cmp    r9d,0xe
  426e31:	jbe    0x42724c
  426e37:	xor    esi,esi
  426e39:	mov    r8d,DWORD PTR [rbx+0x8]
  426e3d:	lea    rbp,[rsp+0x40]
  426e42:	test   r9d,r9d
  426e45:	jle    0x42725c
  426e4b:	lea    rax,[rbp+0x1]
  426e4f:	mov    BYTE PTR [rsp+0x40],0x2e
  426e54:	mov    r10d,DWORD PTR [rbx+0xc]
  426e58:	lea    rdi,[rax+0x1]
  426e5c:	mov    BYTE PTR [rax],0x30
  426e5f:	mov    r12d,0x2
  426e65:	test   r10d,r10d
  426e68:	jg     0x42706c
  426e6e:	xchg   ax,ax
  426e70:	test   r8b,0x80
  426e74:	jne    0x427130
  426e7a:	test   r8d,0x100
  426e81:	jne    0x427220
  426e87:	and    r8d,0x40
  426e8b:	jne    0x427232
  426e91:	mov    rdx,rbx
  426e94:	mov    ecx,0x30
  426e99:	call   0x425b50
  426e9e:	mov    ecx,DWORD PTR [rbx+0x8]
  426ea1:	mov    rdx,rbx
  426ea4:	and    ecx,0x20
  426ea7:	or     ecx,0x58
  426eaa:	call   0x425b50
  426eaf:	mov    eax,DWORD PTR [rbx+0xc]
  426eb2:	test   eax,eax
  426eb4:	jle    0x426edc
  426eb6:	test   BYTE PTR [rbx+0x9],0x2
  426eba:	je     0x426edc
  426ebc:	sub    eax,0x1
  426ebf:	mov    DWORD PTR [rbx+0xc],eax
  426ec2:	mov    rdx,rbx
  426ec5:	mov    ecx,0x30
  426eca:	call   0x425b50
  426ecf:	mov    eax,DWORD PTR [rbx+0xc]
  426ed2:	lea    edx,[rax-0x1]
  426ed5:	test   eax,eax
  426ed7:	mov    DWORD PTR [rbx+0xc],edx
  426eda:	jg     0x426ec2
  426edc:	cmp    rdi,rbp
  426edf:	lea    r13,[rsp+0x2e]
  426ee4:	ja     0x426f19
  426ee6:	jmp    0x42714f
  426eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  426ef0:	movzx  eax,WORD PTR [rbx+0x20]
  426ef4:	test   ax,ax
  426ef7:	mov    WORD PTR [rsp+0x2e],ax
  426efc:	je     0x426f10
  426efe:	mov    r8,rbx
  426f01:	mov    edx,0x1
  426f06:	mov    rcx,r13
  426f09:	call   0x425bb0
  426f0e:	xchg   ax,ax
  426f10:	cmp    rdi,rbp
  426f13:	je     0x42714f
  426f19:	sub    rdi,0x1
  426f1d:	movsx  ecx,BYTE PTR [rdi]
  426f20:	cmp    ecx,0x2e
  426f23:	je     0x427192
  426f29:	cmp    ecx,0x2c
  426f2c:	je     0x426ef0
  426f2e:	mov    rdx,rbx
  426f31:	call   0x425b50
  426f36:	jmp    0x426f10
  426f38:	nop    DWORD PTR [rax+rax*1+0x0]
  426f40:	mov    r9d,DWORD PTR [rbx+0x10]
  426f44:	sub    si,0x3fff
  426f49:	mov    rax,QWORD PTR [rsp+0x30]
  426f4e:	cmp    r9d,0xe
  426f52:	ja     0x4271fd
  426f58:	test   rax,rax
  426f5b:	js     0x426f65
  426f5d:	nop    DWORD PTR [rax]
  426f60:	add    rax,rax
  426f63:	jns    0x426f60
  426f65:	mov    ecx,0xe
  426f6a:	mov    edx,0x4
  426f6f:	shr    rax,1
  426f72:	sub    ecx,r9d
  426f75:	shl    ecx,0x2
  426f78:	shl    rdx,cl
  426f7b:	add    rax,rdx
  426f7e:	js     0x427244
  426f84:	add    rax,rax
  426f87:	mov    ecx,0xf
  426f8c:	sub    ecx,r9d
  426f8f:	shl    ecx,0x2
  426f92:	shr    rax,cl
  426f95:	mov    r8d,DWORD PTR [rbx+0x8]
  426f99:	lea    rbp,[rsp+0x40]
  426f9e:	mov    rdi,rbp
  426fa1:	mov    r11d,r8d
  426fa4:	mov    r10d,r8d
  426fa7:	and    r11d,0x800
  426fae:	and    r10d,0x20
  426fb2:	jmp    0x426fe3
  426fb4:	mov    ecx,DWORD PTR [rbx+0x10]
  426fb7:	test   ecx,ecx
  426fb9:	jle    0x426fc1
  426fbb:	sub    ecx,0x1
  426fbe:	mov    DWORD PTR [rbx+0x10],ecx
  426fc1:	shr    rax,0x4
  426fc5:	mov    r9,rdi
  426fc8:	test   edx,edx
  426fca:	je     0x427034
  426fcc:	cmp    edx,0x9
  426fcf:	lea    rdi,[r9+0x1]
  426fd3:	jle    0x427047
  426fd5:	add    edx,0x37
  426fd8:	or     edx,r10d
  426fdb:	mov    BYTE PTR [r9],dl
  426fde:	test   rax,rax
  426fe1:	je     0x427050
  426fe3:	mov    edx,eax
  426fe5:	and    edx,0xf
  426fe8:	cmp    edx,eax
  426fea:	jne    0x426fb4
  426fec:	cmp    rdi,rbp
  426fef:	ja     0x427002
  426ff1:	test   r11d,r11d
  426ff4:	jne    0x427002
  426ff6:	mov    r12d,DWORD PTR [rbx+0x10]
  426ffa:	mov    r9,rdi
  426ffd:	test   r12d,r12d
  427000:	jle    0x427009
  427002:	lea    r9,[rdi+0x1]
  427006:	mov    BYTE PTR [rdi],0x2e
  427009:	cmp    rax,0x1
  42700d:	jbe    0x427219
  427013:	lea    ecx,[rsi-0x1]
  427016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427020:	shr    rax,1
  427023:	mov    esi,ecx
  427025:	cmp    rax,0x1
  427029:	lea    ecx,[rsi-0x1]
  42702c:	jne    0x427020
  42702e:	xor    al,al
  427030:	test   edx,edx
  427032:	jne    0x426fcc
  427034:	cmp    r9,rbp
  427037:	ja     0x427043
  427039:	mov    ecx,DWORD PTR [rbx+0x10]
  42703c:	mov    rdi,r9
  42703f:	test   ecx,ecx
  427041:	js     0x426fde
  427043:	lea    rdi,[r9+0x1]
  427047:	add    edx,0x30
  42704a:	jmp    0x426fdb
  42704c:	nop    DWORD PTR [rax+0x0]
  427050:	cmp    rdi,rbp
  427053:	je     0x427253
  427059:	mov    r10d,DWORD PTR [rbx+0xc]
  42705d:	mov    r12d,0x2
  427063:	test   r10d,r10d
  427066:	jle    0x426e70
  42706c:	mov    edx,DWORD PTR [rbx+0x10]
  42706f:	mov    rax,rdi
  427072:	movsx  r11d,si
  427076:	sub    rax,rbp
  427079:	lea    ecx,[rdx+rax*1]
  42707c:	test   edx,edx
  42707e:	mov    edx,r8d
  427081:	cmovg  eax,ecx
  427084:	and    edx,0x1c0
  42708a:	mov    ecx,0x66666667
  42708f:	cmp    edx,0x1
  427092:	sbb    edx,edx
  427094:	lea    r9d,[rax+rdx*1+0x6]
  427099:	mov    eax,r11d
  42709c:	imul   ecx
  42709e:	mov    eax,r11d
  4270a1:	sar    eax,0x1f
  4270a4:	mov    ecx,edx
  4270a6:	sar    ecx,0x2
  4270a9:	sub    ecx,eax
  4270ab:	je     0x4270d0
  4270ad:	mov    r11d,0x66666667
  4270b3:	mov    eax,ecx
  4270b5:	sar    ecx,0x1f
  4270b8:	add    r9d,0x1
  4270bc:	imul   r11d
  4270bf:	add    r12d,0x1
  4270c3:	sar    edx,0x2
  4270c6:	sub    edx,ecx
  4270c8:	mov    ecx,edx
  4270ca:	jne    0x4270b3
  4270cc:	movsx  r12d,r12w
  4270d0:	cmp    r10d,r9d
  4270d3:	jle    0x4271a0
  4270d9:	sub    r10d,r9d
  4270dc:	test   r8d,0x600
  4270e3:	jne    0x427210
  4270e9:	lea    eax,[r10-0x1]
  4270ed:	test   r10d,r10d
  4270f0:	mov    DWORD PTR [rbx+0xc],eax
  4270f3:	jle    0x426e70
  4270f9:	nop    DWORD PTR [rax+0x0]
  427100:	mov    rdx,rbx
  427103:	mov    ecx,0x20
  427108:	call   0x425b50
  42710d:	mov    eax,DWORD PTR [rbx+0xc]
  427110:	lea    edx,[rax-0x1]
  427113:	test   eax,eax
  427115:	mov    DWORD PTR [rbx+0xc],edx
  427118:	jg     0x427100
  42711a:	mov    r8d,DWORD PTR [rbx+0x8]
  42711e:	test   r8b,0x80
  427122:	je     0x426e7a
  427128:	nop    DWORD PTR [rax+rax*1+0x0]
  427130:	mov    rdx,rbx
  427133:	mov    ecx,0x2d
  427138:	call   0x425b50
  42713d:	jmp    0x426e91
  427142:	mov    rdx,rbx
  427145:	mov    ecx,0x30
  42714a:	call   0x425b50
  42714f:	mov    eax,DWORD PTR [rbx+0x10]
  427152:	lea    edx,[rax-0x1]
  427155:	test   eax,eax
  427157:	mov    DWORD PTR [rbx+0x10],edx
  42715a:	jg     0x427142
  42715c:	mov    ecx,DWORD PTR [rbx+0x8]
  42715f:	mov    rdx,rbx
  427162:	and    ecx,0x20
  427165:	or     ecx,0x50
  427168:	call   0x425b50
  42716d:	add    DWORD PTR [rbx+0xc],r12d
  427171:	or     DWORD PTR [rbx+0x8],0x1c0
  427178:	movsx  rcx,si
  42717c:	mov    rdx,rbx
  42717f:	call   0x4263c0
  427184:	nop
  427185:	add    rsp,0x68
  427189:	pop    rbx
  42718a:	pop    rsi
  42718b:	pop    rdi
  42718c:	pop    rbp
  42718d:	pop    r12
  42718f:	pop    r13
  427191:	ret    
  427192:	mov    rcx,rbx
  427195:	call   0x425e80
  42719a:	jmp    0x426f10
  42719f:	nop
  4271a0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4271a7:	jmp    0x426e70
  4271ac:	nop    DWORD PTR [rax+0x0]
  4271b0:	lea    rdx,[rip+0x1ec49]        # 0x445e00
  4271b7:	mov    r8,rbx
  4271ba:	xor    ecx,ecx
  4271bc:	call   0x425de0
  4271c1:	nop
  4271c2:	add    rsp,0x68
  4271c6:	pop    rbx
  4271c7:	pop    rsi
  4271c8:	pop    rdi
  4271c9:	pop    rbp
  4271ca:	pop    r12
  4271cc:	pop    r13
  4271ce:	ret    
  4271cf:	js     0x427271
  4271d5:	mov    edx,0xffffc001
  4271da:	nop    WORD PTR [rax+rax*1+0x0]
  4271e0:	mov    esi,edx
  4271e2:	sub    edx,0x1
  4271e5:	add    rax,rax
  4271e8:	jns    0x4271e0
  4271ea:	mov    r9d,DWORD PTR [rbx+0x10]
  4271ee:	cmp    r9d,0xe
  4271f2:	jbe    0x426f65
  4271f8:	jmp    0x426f95
  4271fd:	test   rax,rax
  427200:	jne    0x426f95
  427206:	jmp    0x426e39
  42720b:	nop    DWORD PTR [rax+rax*1+0x0]
  427210:	mov    DWORD PTR [rbx+0xc],r10d
  427214:	jmp    0x426e70
  427219:	xor    eax,eax
  42721b:	jmp    0x426fc8
  427220:	mov    rdx,rbx
  427223:	mov    ecx,0x2b
  427228:	call   0x425b50
  42722d:	jmp    0x426e91
  427232:	mov    rdx,rbx
  427235:	mov    ecx,0x20
  42723a:	call   0x425b50
  42723f:	jmp    0x426e91
  427244:	add    esi,0x1
  427247:	jmp    0x426f87
  42724c:	xor    eax,eax
  42724e:	jmp    0x426f60
  427253:	mov    r9d,DWORD PTR [rbx+0x10]
  427257:	jmp    0x426e42
  42725c:	test   r8d,0x800
  427263:	mov    rax,rbp
  427266:	je     0x426e54
  42726c:	jmp    0x426e4b
  427271:	mov    esi,0xffffc002
  427276:	jmp    0x4271ea
  42727b:	nop    DWORD PTR [rax+rax*1+0x0]
  427280:	push   r15
  427282:	push   r14
  427284:	push   r13
  427286:	push   r12
  427288:	push   rbp
  427289:	push   rdi
  42728a:	push   rsi
  42728b:	push   rbx
  42728c:	sub    rsp,0xb8
  427293:	mov    r13,QWORD PTR [rsp+0x120]
  42729b:	mov    r15d,ecx
  42729e:	mov    rdi,rdx
  4272a1:	mov    esi,r8d
  4272a4:	mov    rbx,r9
  4272a7:	and    r15d,0x6000
  4272ae:	call   0x42a758
  4272b3:	mov    eax,DWORD PTR [rax]
  4272b5:	lea    rcx,[rip+0x1eb61]        # 0x445e1d
  4272bc:	xor    edx,edx
  4272be:	mov    QWORD PTR [rsp+0x80],rdi
  4272c6:	mov    DWORD PTR [rsp+0x88],r15d
  4272ce:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4272d9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4272e4:	mov    DWORD PTR [rsp+0x34],eax
  4272e8:	xor    eax,eax
  4272ea:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  4272f5:	mov    WORD PTR [rsp+0x98],ax
  4272fd:	mov    DWORD PTR [rsp+0x9c],0x0
  427308:	mov    WORD PTR [rsp+0xa0],dx
  427310:	mov    DWORD PTR [rsp+0xa4],0x0
  42731b:	mov    DWORD PTR [rsp+0xa8],esi
  427322:	call   0x42a6a8
  427327:	test   rax,rax
  42732a:	je     0x42733c
  42732c:	movsx  edx,BYTE PTR [rax]
  42732f:	mov    eax,0x2
  427334:	sub    edx,0x30
  427337:	cmp    edx,0x2
  42733a:	jbe    0x427349
  42733c:	call   0x42a890
  427341:	and    eax,0x1
  427344:	neg    eax
  427346:	add    eax,0x3
  427349:	lea    rdi,[rsp+0x70]
  42734e:	mov    DWORD PTR [rsp+0xac],eax
  427355:	movzx  eax,BYTE PTR [rbx]
  427358:	lea    rsi,[rsp+0x6e]
  42735d:	lea    r12,[rsp+0x80]
  427365:	lea    rbp,[rip+0x1eac8]        # 0x445e34
  42736c:	mov    QWORD PTR [rsp+0x28],rdi
  427371:	lea    rdi,[rsp+0x50]
  427376:	mov    QWORD PTR [rsp+0x38],rsi
  42737b:	mov    QWORD PTR [rsp+0x20],rdi
  427380:	mov    edi,r15d
  427383:	or     edi,0x200
  427389:	mov    DWORD PTR [rsp+0x48],edi
  42738d:	nop    DWORD PTR [rax]
  427390:	movsx  ecx,al
  427393:	lea    rsi,[rbx+0x1]
  427397:	test   ecx,ecx
  427399:	je     0x42741a
  42739b:	cmp    ecx,0x25
  42739e:	jne    0x427400
  4273a0:	movzx  eax,BYTE PTR [rbx+0x1]
  4273a4:	xor    r10d,r10d
  4273a7:	xor    r14d,r14d
  4273aa:	mov    DWORD PTR [rsp+0x88],r15d
  4273b2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4273bd:	mov    rdi,rsi
  4273c0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4273cb:	lea    r11,[r12+0xc]
  4273d0:	test   al,al
  4273d2:	je     0x42757b
  4273d8:	lea    edx,[rax-0x20]
  4273db:	lea    rbx,[rdi+0x1]
  4273df:	movsx  ecx,al
  4273e2:	cmp    dl,0x5a
  4273e5:	ja     0x4279f0
  4273eb:	movzx  edx,dl
  4273ee:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  4273f3:	add    rdx,rbp
  4273f6:	jmp    rdx
  4273f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427400:	mov    rdx,r12
  427403:	call   0x425b50
  427408:	movzx  eax,BYTE PTR [rbx+0x1]
  42740c:	mov    rbx,rsi
  42740f:	lea    rsi,[rbx+0x1]
  427413:	movsx  ecx,al
  427416:	test   ecx,ecx
  427418:	jne    0x42739b
  42741a:	mov    eax,DWORD PTR [rsp+0xa4]
  427421:	add    rsp,0xb8
  427428:	pop    rbx
  427429:	pop    rsi
  42742a:	pop    rdi
  42742b:	pop    rbp
  42742c:	pop    r12
  42742e:	pop    r13
  427430:	pop    r14
  427432:	pop    r15
  427434:	ret    
  427435:	sub    r10d,0x2
  427439:	mov    rax,r13
  42743c:	cmp    r10d,0x1
  427440:	jbe    0x427a33
  427446:	mov    rsi,QWORD PTR [rax]
  427449:	add    r13,0x8
  42744d:	test   rsi,rsi
  427450:	je     0x427515
  427456:	mov    rcx,rsi
  427459:	call   0x42a610
  42745e:	mov    edx,eax
  427460:	mov    r8,r12
  427463:	mov    rcx,rsi
  427466:	call   0x425cd0
  42746b:	nop    DWORD PTR [rax+rax*1+0x0]
  427470:	movzx  eax,BYTE PTR [rbx]
  427473:	jmp    0x427390
  427478:	nop    DWORD PTR [rax+rax*1+0x0]
  427480:	test   r14d,r14d
  427483:	jne    0x427493
  427485:	cmp    DWORD PTR [rsp+0x88],r15d
  42748d:	je     0x427bfb
  427493:	mov    rdx,QWORD PTR [r13+0x0]
  427497:	lea    rsi,[r13+0x8]
  42749b:	mov    r8,r12
  42749e:	mov    ecx,0x78
  4274a3:	mov    QWORD PTR [rsp+0x78],0x0
  4274ac:	mov    r13,rsi
  4274af:	mov    QWORD PTR [rsp+0x70],rdx
  4274b4:	call   0x4269b0
  4274b9:	jmp    0x427470
  4274bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4274c0:	cmp    r10d,0x5
  4274c4:	mov    rax,QWORD PTR [r13+0x0]
  4274c8:	je     0x427b3a
  4274ce:	cmp    r10d,0x1
  4274d2:	je     0x427bc4
  4274d8:	cmp    r10d,0x2
  4274dc:	je     0x4274e8
  4274de:	cmp    r10d,0x3
  4274e2:	je     0x427c6c
  4274e8:	mov    edx,DWORD PTR [rsp+0xa4]
  4274ef:	add    r13,0x8
  4274f3:	mov    DWORD PTR [rax],edx
  4274f5:	jmp    0x427470
  4274fa:	nop    WORD PTR [rax+rax*1+0x0]
  427500:	mov    ecx,DWORD PTR [rsp+0x34]
  427504:	call   0x42a618
  427509:	test   rax,rax
  42750c:	mov    rsi,rax
  42750f:	jne    0x427456
  427515:	mov    edx,0x6
  42751a:	lea    rsi,[rip+0x1e8f5]        # 0x445e16
  427521:	jmp    0x427460
  427526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427530:	movzx  eax,BYTE PTR [rdi+0x1]
  427534:	mov    r10d,0x2
  42753a:	mov    r14d,0x4
  427540:	cmp    al,0x6c
  427542:	jne    0x427570
  427544:	lea    rbx,[rdi+0x2]
  427548:	movzx  eax,BYTE PTR [rdi+0x2]
  42754c:	mov    r10d,0x3
  427552:	mov    r14d,0x4
  427558:	jmp    0x427570
  42755a:	nop    WORD PTR [rax+rax*1+0x0]
  427560:	movzx  eax,BYTE PTR [rdi+0x1]
  427564:	mov    r10d,0x3
  42756a:	mov    r14d,0x4
  427570:	test   al,al
  427572:	mov    rdi,rbx
  427575:	jne    0x4273d8
  42757b:	mov    rbx,rdi
  42757e:	jmp    0x427390
  427583:	mov    eax,DWORD PTR [rsp+0x88]
  42758a:	mov    rdx,r13
  42758d:	add    r13,0x8
  427591:	or     eax,0x20
  427594:	test   al,0x4
  427596:	mov    DWORD PTR [rsp+0x88],eax
  42759d:	je     0x4277fb
  4275a3:	mov    rax,QWORD PTR [rdx]
  4275a6:	mov    rcx,QWORD PTR [rsp+0x20]
  4275ab:	mov    rdx,r12
  4275ae:	fld    TBYTE PTR [rax]
  4275b0:	fstp   TBYTE PTR [rsp+0x50]
  4275b4:	call   0x426810
  4275b9:	jmp    0x427470
  4275be:	xchg   ax,ax
  4275c0:	movzx  eax,BYTE PTR [rdi+0x1]
  4275c4:	mov    r10d,0x1
  4275ca:	mov    r14d,0x4
  4275d0:	cmp    al,0x68
  4275d2:	jne    0x427570
  4275d4:	lea    rbx,[rdi+0x2]
  4275d8:	movzx  eax,BYTE PTR [rdi+0x2]
  4275dc:	mov    r10d,0x5
  4275e2:	mov    r14d,0x4
  4275e8:	jmp    0x427570
  4275ea:	nop    WORD PTR [rax+rax*1+0x0]
  4275f0:	mov    eax,DWORD PTR [rsp+0x88]
  4275f7:	mov    rdx,r13
  4275fa:	add    r13,0x8
  4275fe:	or     eax,0x20
  427601:	test   al,0x4
  427603:	mov    DWORD PTR [rsp+0x88],eax
  42760a:	je     0x427829
  427610:	mov    rax,QWORD PTR [rdx]
  427613:	mov    rcx,QWORD PTR [rsp+0x20]
  427618:	mov    rdx,r12
  42761b:	fld    TBYTE PTR [rax]
  42761d:	fstp   TBYTE PTR [rsp+0x50]
  427621:	call   0x4262d0
  427626:	jmp    0x427470
  42762b:	nop    DWORD PTR [rax+rax*1+0x0]
  427630:	mov    eax,DWORD PTR [rsp+0x88]
  427637:	mov    rdx,r13
  42763a:	add    r13,0x8
  42763e:	or     eax,0x20
  427641:	test   al,0x4
  427643:	mov    DWORD PTR [rsp+0x88],eax
  42764a:	je     0x427857
  427650:	mov    rax,QWORD PTR [rdx]
  427653:	mov    rcx,QWORD PTR [rsp+0x20]
  427658:	mov    rdx,r12
  42765b:	fld    TBYTE PTR [rax]
  42765d:	fstp   TBYTE PTR [rsp+0x50]
  427661:	call   0x426760
  427666:	jmp    0x427470
  42766b:	nop    DWORD PTR [rax+rax*1+0x0]
  427670:	cmp    r10d,0x3
  427674:	je     0x427b4c
  42767a:	cmp    r10d,0x2
  42767e:	je     0x427be9
  427684:	mov    eax,DWORD PTR [r13+0x0]
  427688:	cmp    r10d,0x1
  42768c:	lea    rdx,[r13+0x8]
  427690:	mov    QWORD PTR [rsp+0x70],rax
  427695:	je     0x427c2b
  42769b:	cmp    r10d,0x5
  42769f:	mov    r13,rdx
  4276a2:	je     0x427c80
  4276a8:	cmp    ecx,0x75
  4276ab:	je     0x427b8c
  4276b1:	mov    r8,r12
  4276b4:	mov    rdx,rax
  4276b7:	call   0x4269b0
  4276bc:	jmp    0x427470
  4276c1:	sub    r10d,0x2
  4276c5:	mov    rax,r13
  4276c8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4276d3:	cmp    r10d,0x1
  4276d7:	jbe    0x42787b
  4276dd:	mov    eax,DWORD PTR [rax]
  4276df:	mov    rcx,QWORD PTR [rsp+0x28]
  4276e4:	mov    r8,r12
  4276e7:	mov    edx,0x1
  4276ec:	add    r13,0x8
  4276f0:	mov    BYTE PTR [rsp+0x70],al
  4276f4:	call   0x425cd0
  4276f9:	jmp    0x427470
  4276fe:	xchg   ax,ax
  427700:	mov    eax,DWORD PTR [rsp+0x88]
  427707:	mov    rdx,r13
  42770a:	add    r13,0x8
  42770e:	or     eax,0x20
  427711:	test   al,0x4
  427713:	mov    DWORD PTR [rsp+0x88],eax
  42771a:	je     0x4278b8
  427720:	mov    rax,QWORD PTR [rdx]
  427723:	mov    rcx,QWORD PTR [rsp+0x20]
  427728:	mov    rdx,r12
  42772b:	fld    TBYTE PTR [rax]
  42772d:	fstp   TBYTE PTR [rsp+0x50]
  427731:	call   0x426d70
  427736:	jmp    0x427470
  42773b:	nop    DWORD PTR [rax+rax*1+0x0]
  427740:	or     DWORD PTR [rsp+0x88],0x80
  42774b:	cmp    r10d,0x3
  42774f:	je     0x427b28
  427755:	cmp    r10d,0x2
  427759:	je     0x427bd7
  42775f:	movsxd rcx,DWORD PTR [r13+0x0]
  427763:	cmp    r10d,0x1
  427767:	lea    rax,[r13+0x8]
  42776b:	mov    QWORD PTR [rsp+0x70],rcx
  427770:	je     0x427c3d
  427776:	cmp    r10d,0x5
  42777a:	mov    r13,rax
  42777d:	je     0x427c8f
  427783:	mov    rax,rcx
  427786:	mov    rdx,r12
  427789:	sar    rax,0x3f
  42778d:	mov    QWORD PTR [rsp+0x78],rax
  427792:	call   0x4263c0
  427797:	jmp    0x427470
  42779c:	nop    DWORD PTR [rax+0x0]
  4277a0:	or     DWORD PTR [rsp+0x88],0x4
  4277a8:	movzx  eax,BYTE PTR [rdi+0x1]
  4277ac:	mov    r14d,0x4
  4277b2:	jmp    0x427570
  4277b7:	nop    WORD PTR [rax+rax*1+0x0]
  4277c0:	movzx  eax,BYTE PTR [rdi+0x1]
  4277c4:	cmp    al,0x36
  4277c6:	je     0x427b08
  4277cc:	cmp    al,0x33
  4277ce:	je     0x427b9c
  4277d4:	mov    r10d,0x3
  4277da:	mov    r14d,0x4
  4277e0:	jmp    0x427570
  4277e5:	mov    eax,DWORD PTR [rsp+0x88]
  4277ec:	mov    rdx,r13
  4277ef:	add    r13,0x8
  4277f3:	test   al,0x4
  4277f5:	jne    0x4275a3
  4277fb:	mov    rcx,QWORD PTR [rsp+0x20]
  427800:	fld    QWORD PTR [rdx]
  427802:	mov    rdx,r12
  427805:	fstp   TBYTE PTR [rsp+0x50]
  427809:	call   0x426810
  42780e:	jmp    0x427470
  427813:	mov    eax,DWORD PTR [rsp+0x88]
  42781a:	mov    rdx,r13
  42781d:	add    r13,0x8
  427821:	test   al,0x4
  427823:	jne    0x427610
  427829:	mov    rcx,QWORD PTR [rsp+0x20]
  42782e:	fld    QWORD PTR [rdx]
  427830:	mov    rdx,r12
  427833:	fstp   TBYTE PTR [rsp+0x50]
  427837:	call   0x4262d0
  42783c:	jmp    0x427470
  427841:	mov    eax,DWORD PTR [rsp+0x88]
  427848:	mov    rdx,r13
  42784b:	add    r13,0x8
  42784f:	test   al,0x4
  427851:	jne    0x427650
  427857:	mov    rcx,QWORD PTR [rsp+0x20]
  42785c:	fld    QWORD PTR [rdx]
  42785e:	mov    rdx,r12
  427861:	fstp   TBYTE PTR [rsp+0x50]
  427865:	call   0x426760
  42786a:	jmp    0x427470
  42786f:	nop
  427870:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42787b:	mov    eax,DWORD PTR [r13+0x0]
  42787f:	mov    rcx,QWORD PTR [rsp+0x28]
  427884:	lea    rsi,[r13+0x8]
  427888:	mov    r8,r12
  42788b:	mov    edx,0x1
  427890:	mov    r13,rsi
  427893:	mov    WORD PTR [rsp+0x70],ax
  427898:	call   0x425bb0
  42789d:	jmp    0x427470
  4278a2:	mov    eax,DWORD PTR [rsp+0x88]
  4278a9:	mov    rdx,r13
  4278ac:	add    r13,0x8
  4278b0:	test   al,0x4
  4278b2:	jne    0x427720
  4278b8:	mov    rcx,QWORD PTR [rsp+0x20]
  4278bd:	fld    QWORD PTR [rdx]
  4278bf:	mov    rdx,r12
  4278c2:	fstp   TBYTE PTR [rsp+0x50]
  4278c6:	call   0x426d70
  4278cb:	jmp    0x427470
  4278d0:	test   r14d,r14d
  4278d3:	jne    0x427a70
  4278d9:	or     DWORD PTR [rsp+0x88],0x200
  4278e4:	movzx  eax,BYTE PTR [rdi+0x1]
  4278e8:	jmp    0x427570
  4278ed:	nop    DWORD PTR [rax]
  4278f0:	cmp    r14d,0x1
  4278f4:	jbe    0x427b5e
  4278fa:	movzx  eax,BYTE PTR [rdi+0x1]
  4278fe:	mov    r14d,0x4
  427904:	jmp    0x427570
  427909:	nop    DWORD PTR [rax+0x0]
  427910:	test   r14d,r14d
  427913:	jne    0x427999
  427919:	or     DWORD PTR [rsp+0x88],0x400
  427924:	movzx  eax,BYTE PTR [rdi+0x1]
  427928:	jmp    0x427570
  42792d:	nop    DWORD PTR [rax]
  427930:	test   r14d,r14d
  427933:	jne    0x427999
  427935:	or     DWORD PTR [rsp+0x88],0x100
  427940:	movzx  eax,BYTE PTR [rdi+0x1]
  427944:	jmp    0x427570
  427949:	nop    DWORD PTR [rax+0x0]
  427950:	test   r14d,r14d
  427953:	jne    0x427999
  427955:	or     DWORD PTR [rsp+0x88],0x800
  427960:	movzx  eax,BYTE PTR [rdi+0x1]
  427964:	jmp    0x427570
  427969:	nop    DWORD PTR [rax+0x0]
  427970:	test   r14d,r14d
  427973:	jne    0x427999
  427975:	or     DWORD PTR [rsp+0x88],0x40
  42797d:	movzx  eax,BYTE PTR [rdi+0x1]
  427981:	jmp    0x427570
  427986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427990:	test   r14d,r14d
  427993:	je     0x427aa2
  427999:	movzx  eax,BYTE PTR [rdi+0x1]
  42799d:	jmp    0x427570
  4279a2:	mov    rdx,r12
  4279a5:	call   0x425b50
  4279aa:	jmp    0x427470
  4279af:	nop
  4279b0:	test   r11,r11
  4279b3:	je     0x4278fa
  4279b9:	test   r14d,0xfffffffd
  4279c0:	jne    0x427a90
  4279c6:	mov    eax,DWORD PTR [r13+0x0]
  4279ca:	lea    rdx,[r13+0x8]
  4279ce:	test   eax,eax
  4279d0:	mov    DWORD PTR [r11],eax
  4279d3:	js     0x427c50
  4279d9:	movzx  eax,BYTE PTR [rdi+0x1]
  4279dd:	mov    r13,rdx
  4279e0:	xor    r11d,r11d
  4279e3:	jmp    0x427570
  4279e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279f0:	sub    eax,0x30
  4279f3:	cmp    al,0x9
  4279f5:	ja     0x427c16
  4279fb:	cmp    r14d,0x3
  4279ff:	ja     0x427c16
  427a05:	test   r14d,r14d
  427a08:	jne    0x427a7a
  427a0a:	mov    r14d,0x1
  427a10:	test   r11,r11
  427a13:	je     0x427999
  427a15:	mov    eax,DWORD PTR [r11]
  427a18:	test   eax,eax
  427a1a:	js     0x427b7d
  427a20:	lea    eax,[rax+rax*4]
  427a23:	lea    eax,[rcx+rax*2-0x30]
  427a27:	mov    DWORD PTR [r11],eax
  427a2a:	movzx  eax,BYTE PTR [rdi+0x1]
  427a2e:	jmp    0x427570
  427a33:	mov    rsi,QWORD PTR [r13+0x0]
  427a37:	lea    rax,[rip+0x1e3ca]        # 0x445e08
  427a3e:	lea    rdi,[r13+0x8]
  427a42:	mov    r13,rdi
  427a45:	test   rsi,rsi
  427a48:	cmove  rsi,rax
  427a4c:	mov    rcx,rsi
  427a4f:	call   0x42a5c8
  427a54:	mov    r8,r12
  427a57:	mov    edx,eax
  427a59:	mov    rcx,rsi
  427a5c:	call   0x425bb0
  427a61:	jmp    0x427470
  427a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a70:	cmp    r14d,0x3
  427a74:	ja     0x427c16
  427a7a:	cmp    r14d,0x2
  427a7e:	mov    eax,0x3
  427a83:	cmove  r14d,eax
  427a87:	jmp    0x427a10
  427a89:	nop    DWORD PTR [rax+0x0]
  427a90:	movzx  eax,BYTE PTR [rdi+0x1]
  427a94:	xor    r11d,r11d
  427a97:	mov    r14d,0x4
  427a9d:	jmp    0x427570
  427aa2:	mov    DWORD PTR [rsp+0x4c],r10d
  427aa7:	mov    QWORD PTR [rsp+0x40],r11
  427aac:	or     DWORD PTR [rsp+0x88],0x1000
  427ab7:	mov    DWORD PTR [rsp+0x70],0x0
  427abf:	call   0x42a680
  427ac4:	mov    r9,QWORD PTR [rsp+0x28]
  427ac9:	mov    rdx,QWORD PTR [rax+0x8]
  427acd:	mov    r8d,0x10
  427ad3:	mov    rcx,QWORD PTR [rsp+0x38]
  427ad8:	call   0x42a160
  427add:	test   eax,eax
  427adf:	mov    r11,QWORD PTR [rsp+0x40]
  427ae4:	mov    r10d,DWORD PTR [rsp+0x4c]
  427ae9:	jle    0x427af8
  427aeb:	movzx  edx,WORD PTR [rsp+0x6e]
  427af0:	mov    WORD PTR [rsp+0xa0],dx
  427af8:	mov    DWORD PTR [rsp+0x9c],eax
  427aff:	movzx  eax,BYTE PTR [rdi+0x1]
  427b03:	jmp    0x427570
  427b08:	cmp    BYTE PTR [rdi+0x2],0x34
  427b0c:	je     0x427c9f
  427b12:	mov    eax,0x36
  427b17:	mov    r10d,0x3
  427b1d:	mov    r14d,0x4
  427b23:	jmp    0x427570
  427b28:	mov    rcx,QWORD PTR [r13+0x0]
  427b2c:	add    r13,0x8
  427b30:	mov    QWORD PTR [rsp+0x70],rcx
  427b35:	jmp    0x427783
  427b3a:	mov    edx,DWORD PTR [rsp+0xa4]
  427b41:	add    r13,0x8
  427b45:	mov    BYTE PTR [rax],dl
  427b47:	jmp    0x427470
  427b4c:	mov    rax,QWORD PTR [r13+0x0]
  427b50:	add    r13,0x8
  427b54:	mov    QWORD PTR [rsp+0x70],rax
  427b59:	jmp    0x4276a8
  427b5e:	mov    DWORD PTR [rsp+0x90],0x0
  427b69:	movzx  eax,BYTE PTR [rdi+0x1]
  427b6d:	lea    r11,[r12+0x10]
  427b72:	mov    r14d,0x2
  427b78:	jmp    0x427570
  427b7d:	sub    ecx,0x30
  427b80:	movzx  eax,BYTE PTR [rdi+0x1]
  427b84:	mov    DWORD PTR [r11],ecx
  427b87:	jmp    0x427570
  427b8c:	mov    rdx,r12
  427b8f:	mov    rcx,rax
  427b92:	call   0x4263c0
  427b97:	jmp    0x427470
  427b9c:	cmp    BYTE PTR [rdi+0x2],0x32
  427ba0:	mov    eax,0x33
  427ba5:	jne    0x4277d4
  427bab:	lea    rbx,[rdi+0x3]
  427baf:	movzx  eax,BYTE PTR [rdi+0x3]
  427bb3:	mov    r10d,0x2
  427bb9:	mov    r14d,0x4
  427bbf:	jmp    0x427570
  427bc4:	mov    edx,DWORD PTR [rsp+0xa4]
  427bcb:	add    r13,0x8
  427bcf:	mov    WORD PTR [rax],dx
  427bd2:	jmp    0x427470
  427bd7:	movsxd rcx,DWORD PTR [r13+0x0]
  427bdb:	add    r13,0x8
  427bdf:	mov    QWORD PTR [rsp+0x70],rcx
  427be4:	jmp    0x427783
  427be9:	mov    eax,DWORD PTR [r13+0x0]
  427bed:	add    r13,0x8
  427bf1:	mov    QWORD PTR [rsp+0x70],rax
  427bf6:	jmp    0x4276a8
  427bfb:	mov    eax,DWORD PTR [rsp+0x48]
  427bff:	mov    DWORD PTR [rsp+0x90],0x10
  427c0a:	mov    DWORD PTR [rsp+0x88],eax
  427c11:	jmp    0x427493
  427c16:	mov    rdx,r12
  427c19:	mov    ecx,0x25
  427c1e:	mov    rbx,rsi
  427c21:	call   0x425b50
  427c26:	jmp    0x427470
  427c2b:	movzx  eax,WORD PTR [rsp+0x70]
  427c30:	mov    r13,rdx
  427c33:	mov    QWORD PTR [rsp+0x70],rax
  427c38:	jmp    0x4276a8
  427c3d:	movsx  rcx,WORD PTR [rsp+0x70]
  427c43:	mov    r13,rax
  427c46:	mov    QWORD PTR [rsp+0x70],rcx
  427c4b:	jmp    0x427783
  427c50:	test   r14d,r14d
  427c53:	jne    0x427cb8
  427c55:	or     DWORD PTR [rsp+0x88],0x400
  427c60:	neg    DWORD PTR [rsp+0x8c]
  427c67:	jmp    0x4279d9
  427c6c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  427c74:	add    r13,0x8
  427c78:	mov    QWORD PTR [rax],rdx
  427c7b:	jmp    0x427470
  427c80:	movzx  eax,BYTE PTR [rsp+0x70]
  427c85:	mov    QWORD PTR [rsp+0x70],rax
  427c8a:	jmp    0x4276a8
  427c8f:	movsx  rcx,BYTE PTR [rsp+0x70]
  427c95:	mov    QWORD PTR [rsp+0x70],rcx
  427c9a:	jmp    0x427783
  427c9f:	lea    rbx,[rdi+0x3]
  427ca3:	movzx  eax,BYTE PTR [rdi+0x3]
  427ca7:	mov    r10d,0x3
  427cad:	mov    r14d,0x4
  427cb3:	jmp    0x427570
  427cb8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  427cc3:	movzx  eax,BYTE PTR [rdi+0x1]
  427cc7:	mov    r13,rdx
  427cca:	xor    r11d,r11d
  427ccd:	jmp    0x427570
  427cd2:	nop
  427cd3:	nop
  427cd4:	nop
  427cd5:	nop
  427cd6:	nop
  427cd7:	nop
  427cd8:	nop
  427cd9:	nop
  427cda:	nop
  427cdb:	nop
  427cdc:	nop
  427cdd:	nop
  427cde:	nop
  427cdf:	nop
  427ce0:	push   rbx
  427ce1:	sub    rsp,0x20
  427ce5:	xor    ebx,ebx
  427ce7:	cmp    ecx,0x1b
  427cea:	jle    0x427cfd
  427cec:	mov    eax,0x4
  427cf1:	add    eax,eax
  427cf3:	add    ebx,0x1
  427cf6:	lea    edx,[rax+0x17]
  427cf9:	cmp    edx,ecx
  427cfb:	jl     0x427cf1
  427cfd:	mov    ecx,ebx
  427cff:	call   0x4295d0
  427d04:	mov    DWORD PTR [rax],ebx
  427d06:	add    rax,0x4
  427d0a:	add    rsp,0x20
  427d0e:	pop    rbx
  427d0f:	ret    
  427d10:	push   rsi
  427d11:	push   rbx
  427d12:	sub    rsp,0x28
  427d16:	mov    rbx,rcx
  427d19:	mov    ecx,r8d
  427d1c:	mov    rsi,rdx
  427d1f:	call   0x427ce0
  427d24:	movzx  ecx,BYTE PTR [rbx]
  427d27:	lea    r8,[rbx+0x1]
  427d2b:	test   cl,cl
  427d2d:	mov    BYTE PTR [rax],cl
  427d2f:	mov    rcx,rax
  427d32:	je     0x427d49
  427d34:	add    r8,0x1
  427d38:	movzx  r9d,BYTE PTR [r8-0x1]
  427d3d:	add    rcx,0x1
  427d41:	test   r9b,r9b
  427d44:	mov    BYTE PTR [rcx],r9b
  427d47:	jne    0x427d34
  427d49:	test   rsi,rsi
  427d4c:	je     0x427d51
  427d4e:	mov    QWORD PTR [rsi],rcx
  427d51:	add    rsp,0x28
  427d55:	pop    rbx
  427d56:	pop    rsi
  427d57:	ret    
  427d58:	nop    DWORD PTR [rax+rax*1+0x0]
  427d60:	mov    edx,0x1
  427d65:	mov    rax,rcx
  427d68:	mov    ecx,DWORD PTR [rcx-0x4]
  427d6b:	shl    edx,cl
  427d6d:	mov    DWORD PTR [rax+0x4],ecx
  427d70:	lea    rcx,[rax-0x4]
  427d74:	mov    DWORD PTR [rax+0x8],edx
  427d77:	jmp    0x4296e0
  427d7c:	nop    DWORD PTR [rax+0x0]
  427d80:	push   r15
  427d82:	push   r14
  427d84:	push   r13
  427d86:	push   r12
  427d88:	push   rbp
  427d89:	push   rdi
  427d8a:	push   rsi
  427d8b:	push   rbx
  427d8c:	sub    rsp,0x38
  427d90:	xor    eax,eax
  427d92:	mov    edi,DWORD PTR [rdx+0x14]
  427d95:	cmp    edi,DWORD PTR [rcx+0x14]
  427d98:	mov    r15,rdx
  427d9b:	jg     0x427ee9
  427da1:	sub    edi,0x1
  427da4:	lea    rbx,[rdx+0x18]
  427da8:	lea    r12,[rcx+0x18]
  427dac:	movsxd r13,edi
  427daf:	xor    edx,edx
  427db1:	shl    r13,0x2
  427db5:	lea    rbp,[rbx+r13*1]
  427db9:	add    r13,r12
  427dbc:	mov    eax,DWORD PTR [rbp+0x0]
  427dbf:	lea    r8d,[rax+0x1]
  427dc3:	mov    eax,DWORD PTR [r13+0x0]
  427dc7:	div    r8d
  427dca:	test   eax,eax
  427dcc:	mov    r14d,eax
  427dcf:	mov    DWORD PTR [rsp+0x2c],eax
  427dd3:	je     0x427e67
  427dd9:	mov    edx,eax
  427ddb:	mov    rsi,rbx
  427dde:	mov    r11,r12
  427de1:	xor    eax,eax
  427de3:	xor    r10d,r10d
  427de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427df0:	add    rsi,0x4
  427df4:	mov    r8d,DWORD PTR [rsi-0x4]
  427df8:	mov    r9d,DWORD PTR [r11]
  427dfb:	add    r11,0x4
  427dff:	imul   r8,rdx
  427e03:	add    r8,rax
  427e06:	mov    rax,r8
  427e09:	mov    r8d,r8d
  427e0c:	sub    r9,r8
  427e0f:	shr    rax,0x20
  427e13:	sub    r9,r10
  427e16:	mov    r10,r9
  427e19:	mov    DWORD PTR [r11-0x4],r9d
  427e1d:	shr    r10,0x20
  427e21:	and    r10d,0x1
  427e25:	cmp    rbp,rsi
  427e28:	jae    0x427df0
  427e2a:	mov    r11d,DWORD PTR [r13+0x0]
  427e2e:	test   r11d,r11d
  427e31:	jne    0x427e67
  427e33:	lea    rax,[r13-0x4]
  427e37:	cmp    r12,rax
  427e3a:	jae    0x427e64
  427e3c:	mov    r10d,DWORD PTR [r13-0x4]
  427e40:	test   r10d,r10d
  427e43:	je     0x427e58
  427e45:	jmp    0x427e64
  427e47:	nop    WORD PTR [rax+rax*1+0x0]
  427e50:	mov    r9d,DWORD PTR [rax]
  427e53:	test   r9d,r9d
  427e56:	jne    0x427e64
  427e58:	sub    rax,0x4
  427e5c:	sub    edi,0x1
  427e5f:	cmp    r12,rax
  427e62:	jb     0x427e50
  427e64:	mov    DWORD PTR [rcx+0x14],edi
  427e67:	mov    rdx,r15
  427e6a:	mov    rsi,rcx
  427e6d:	call   0x429c00
  427e72:	test   eax,eax
  427e74:	js     0x427ee5
  427e76:	lea    eax,[r14+0x1]
  427e7a:	mov    rcx,r12
  427e7d:	xor    edx,edx
  427e7f:	mov    DWORD PTR [rsp+0x2c],eax
  427e83:	add    rbx,0x4
  427e87:	mov    eax,DWORD PTR [rcx]
  427e89:	mov    r8d,DWORD PTR [rbx-0x4]
  427e8d:	add    rcx,0x4
  427e91:	sub    rax,r8
  427e94:	sub    rax,rdx
  427e97:	mov    rdx,rax
  427e9a:	mov    DWORD PTR [rcx-0x4],eax
  427e9d:	shr    rdx,0x20
  427ea1:	and    edx,0x1
  427ea4:	cmp    rbp,rbx
  427ea7:	jae    0x427e83
  427ea9:	movsxd rax,edi
  427eac:	lea    rdx,[r12+rax*4]
  427eb0:	mov    r8d,DWORD PTR [rdx]
  427eb3:	test   r8d,r8d
  427eb6:	jne    0x427ee5
  427eb8:	lea    rax,[rdx-0x4]
  427ebc:	cmp    r12,rax
  427ebf:	jae    0x427ee2
  427ec1:	mov    ecx,DWORD PTR [rdx-0x4]
  427ec4:	test   ecx,ecx
  427ec6:	je     0x427ed6
  427ec8:	jmp    0x427ee2
  427eca:	nop    WORD PTR [rax+rax*1+0x0]
  427ed0:	mov    edx,DWORD PTR [rax]
  427ed2:	test   edx,edx
  427ed4:	jne    0x427ee2
  427ed6:	sub    rax,0x4
  427eda:	sub    edi,0x1
  427edd:	cmp    r12,rax
  427ee0:	jb     0x427ed0
  427ee2:	mov    DWORD PTR [rsi+0x14],edi
  427ee5:	mov    eax,DWORD PTR [rsp+0x2c]
  427ee9:	add    rsp,0x38
  427eed:	pop    rbx
  427eee:	pop    rsi
  427eef:	pop    rdi
  427ef0:	pop    rbp
  427ef1:	pop    r12
  427ef3:	pop    r13
  427ef5:	pop    r14
  427ef7:	pop    r15
  427ef9:	ret    
  427efa:	nop
  427efb:	nop
  427efc:	nop
  427efd:	nop
  427efe:	nop
  427eff:	nop
  427f00:	push   r15
  427f02:	push   r14
  427f04:	push   r13
  427f06:	push   r12
  427f08:	push   rbp
  427f09:	push   rdi
  427f0a:	push   rsi
  427f0b:	push   rbx
  427f0c:	sub    rsp,0xb8
  427f13:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  427f1b:	mov    r12d,DWORD PTR [r9]
  427f1e:	mov    eax,r12d
  427f21:	and    eax,0xffffffcf
  427f24:	mov    DWORD PTR [r9],eax
  427f27:	mov    eax,r12d
  427f2a:	and    eax,0x7
  427f2d:	cmp    eax,0x4
  427f30:	ja     0x429363
  427f36:	mov    r13d,edx
  427f39:	lea    rdx,[rip+0x1e070]        # 0x445fb0
  427f40:	mov    QWORD PTR [rsp+0x28],r9
  427f45:	mov    r15,r8
  427f48:	mov    rbp,rcx
  427f4b:	movsxd rax,DWORD PTR [rdx+rax*4]
  427f4f:	add    rdx,rax
  427f52:	jmp    rdx
  427f54:	mov    edi,DWORD PTR [rcx]
  427f56:	xor    ecx,ecx
  427f58:	cmp    edi,0x20
  427f5b:	jle    0x427f6b
  427f5d:	mov    eax,0x20
  427f62:	add    eax,eax
  427f64:	add    ecx,0x1
  427f67:	cmp    edi,eax
  427f69:	jg     0x427f62
  427f6b:	call   0x4295d0
  427f70:	mov    rsi,rax
  427f73:	lea    eax,[rdi-0x1]
  427f76:	lea    r9,[rsi+0x18]
  427f7a:	sar    eax,0x5
  427f7d:	cdqe   
  427f7f:	mov    rdx,r9
  427f82:	lea    r11,[r15+rax*4]
  427f86:	mov    rax,r15
  427f89:	nop    DWORD PTR [rax+0x0]
  427f90:	mov    ecx,DWORD PTR [rax]
  427f92:	add    rax,0x4
  427f96:	add    rdx,0x4
  427f9a:	cmp    r11,rax
  427f9d:	mov    DWORD PTR [rdx-0x4],ecx
  427fa0:	jae    0x427f90
  427fa2:	sub    rdx,r9
  427fa5:	sar    rdx,0x2
  427fa9:	mov    r14d,edx
  427fac:	movsxd rdx,edx
  427faf:	lea    rax,[r9+rdx*4-0x4]
  427fb4:	jmp    0x427fcf
  427fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427fc0:	sub    rax,0x4
  427fc4:	test   edx,edx
  427fc6:	mov    r14d,edx
  427fc9:	je     0x4284d0
  427fcf:	mov    r8d,DWORD PTR [rax]
  427fd2:	lea    edx,[r14-0x1]
  427fd6:	test   r8d,r8d
  427fd9:	je     0x427fc0
  427fdb:	movsxd rdx,edx
  427fde:	mov    DWORD PTR [rsi+0x14],r14d
  427fe2:	shl    r14d,0x5
  427fe6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  427feb:	xor    eax,0x1f
  427fee:	sub    r14d,eax
  427ff1:	mov    rcx,rsi
  427ff4:	call   0x429470
  427ff9:	test   eax,eax
  427ffb:	mov    DWORD PTR [rsp+0x9c],eax
  428002:	mov    r11d,r13d
  428005:	jne    0x4284e0
  42800b:	mov    ecx,DWORD PTR [rsi+0x14]
  42800e:	test   ecx,ecx
  428010:	jne    0x4280c0
  428016:	mov    rcx,rsi
  428019:	call   0x4296e0
  42801e:	mov    rax,QWORD PTR [rsp+0x130]
  428026:	mov    rdx,QWORD PTR [rsp+0x138]
  42802e:	lea    rcx,[rip+0x1df78]        # 0x445fad
  428035:	mov    r8d,0x1
  42803b:	mov    DWORD PTR [rax],0x1
  428041:	call   0x427d10
  428046:	nop
  428047:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  42804f:	add    rsp,0xb8
  428056:	pop    rbx
  428057:	pop    rsi
  428058:	pop    rdi
  428059:	pop    rbp
  42805a:	pop    r12
  42805c:	pop    r13
  42805e:	pop    r14
  428060:	pop    r15
  428062:	ret    
  428063:	mov    rax,QWORD PTR [rsp+0x130]
  42806b:	mov    rdx,QWORD PTR [rsp+0x138]
  428073:	lea    rcx,[rip+0x1df2f]        # 0x445fa9
  42807a:	mov    r8d,0x3
  428080:	mov    DWORD PTR [rax],0xffff8000
  428086:	call   0x427d10
  42808b:	jmp    0x428047
  42808d:	nop    DWORD PTR [rax]
  428090:	mov    rax,QWORD PTR [rsp+0x130]
  428098:	mov    rdx,QWORD PTR [rsp+0x138]
  4280a0:	lea    rcx,[rip+0x1def9]        # 0x445fa0
  4280a7:	mov    r8d,0x8
  4280ad:	mov    DWORD PTR [rax],0xffff8000
  4280b3:	call   0x427d10
  4280b8:	jmp    0x428047
  4280ba:	nop    WORD PTR [rax+rax*1+0x0]
  4280c0:	lea    rdx,[rsp+0x9c]
  4280c8:	mov    rcx,rsi
  4280cb:	mov    DWORD PTR [rsp+0x30],r11d
  4280d0:	call   0x429d90
  4280d5:	movq   rdx,xmm0
  4280da:	movq   r9,xmm0
  4280df:	mov    r11d,DWORD PTR [rsp+0x30]
  4280e4:	pxor   xmm0,xmm0
  4280e8:	shr    rdx,0x20
  4280ec:	mov    r9d,r9d
  4280ef:	and    edx,0xfffff
  4280f5:	lea    ecx,[r11+r14*1-0x1]
  4280fa:	or     edx,0x3ff00000
  428100:	mov    rax,rdx
  428103:	cvtsi2sd xmm0,ecx
  428107:	shl    rax,0x20
  42810b:	mov    ebx,ecx
  42810d:	or     r9,rax
  428110:	sar    ebx,0x1f
  428113:	mov    QWORD PTR [rsp+0x30],r9
  428118:	mov    eax,ebx
  42811a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  428120:	xor    eax,ecx
  428122:	sub    eax,ebx
  428124:	subsd  xmm1,QWORD PTR [rip+0x1de9c]        # 0x445fc8
  42812c:	sub    eax,0x435
  428131:	test   eax,eax
  428133:	mulsd  xmm0,QWORD PTR [rip+0x1dea5]        # 0x445fe0
  42813b:	mulsd  xmm1,QWORD PTR [rip+0x1de8d]        # 0x445fd0
  428143:	addsd  xmm1,QWORD PTR [rip+0x1de8d]        # 0x445fd8
  42814b:	addsd  xmm1,xmm0
  42814f:	jle    0x428165
  428151:	pxor   xmm0,xmm0
  428155:	cvtsi2sd xmm0,eax
  428159:	mulsd  xmm0,QWORD PTR [rip+0x1de87]        # 0x445fe8
  428161:	addsd  xmm1,xmm0
  428165:	cvttsd2si eax,xmm1
  428169:	pxor   xmm6,xmm6
  42816d:	ucomisd xmm6,xmm1
  428171:	mov    DWORD PTR [rsp+0x30],eax
  428175:	ja     0x428a03
  42817b:	mov    eax,ecx
  42817d:	mov    r9d,r9d
  428180:	mov    DWORD PTR [rsp+0x6c],0x1
  428188:	shl    eax,0x14
  42818b:	add    eax,edx
  42818d:	shl    rax,0x20
  428191:	or     r9,rax
  428194:	cmp    DWORD PTR [rsp+0x30],0x16
  428199:	mov    QWORD PTR [rsp+0x80],r9
  4281a1:	ja     0x4281d0
  4281a3:	movsxd rax,DWORD PTR [rsp+0x30]
  4281a8:	mov    rdx,QWORD PTR [rip+0x1e1a1]        # 0x446350
  4281af:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  4281b4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  4281bd:	jbe    0x428520
  4281c3:	sub    DWORD PTR [rsp+0x30],0x1
  4281c8:	mov    DWORD PTR [rsp+0x6c],0x0
  4281d0:	mov    eax,r14d
  4281d3:	mov    DWORD PTR [rsp+0x50],0x0
  4281db:	sub    eax,ecx
  4281dd:	sub    eax,0x1
  4281e0:	mov    DWORD PTR [rsp+0x40],eax
  4281e4:	js     0x4289f0
  4281ea:	mov    eax,DWORD PTR [rsp+0x30]
  4281ee:	test   eax,eax
  4281f0:	js     0x4289d0
  4281f6:	add    DWORD PTR [rsp+0x40],eax
  4281fa:	mov    DWORD PTR [rsp+0x88],eax
  428201:	mov    DWORD PTR [rsp+0x58],0x0
  428209:	cmp    DWORD PTR [rsp+0x120],0x9
  428211:	ja     0x428500
  428217:	cmp    DWORD PTR [rsp+0x120],0x5
  42821f:	jle    0x42850b
  428225:	sub    DWORD PTR [rsp+0x120],0x4
  42822d:	xor    eax,eax
  42822f:	cmp    DWORD PTR [rsp+0x120],0x3
  428237:	je     0x428bc4
  42823d:	jle    0x428923
  428243:	cmp    DWORD PTR [rsp+0x120],0x4
  42824b:	mov    DWORD PTR [rsp+0x60],0x1
  428253:	je     0x428530
  428259:	cmp    DWORD PTR [rsp+0x120],0x5
  428261:	jne    0x428939
  428267:	mov    ebx,DWORD PTR [rsp+0x30]
  42826b:	add    ebx,DWORD PTR [rsp+0x128]
  428272:	mov    DWORD PTR [rsp+0x8c],ebx
  428279:	add    ebx,0x1
  42827c:	test   ebx,ebx
  42827e:	mov    DWORD PTR [rsp+0x68],ebx
  428282:	mov    ecx,ebx
  428284:	jle    0x428e00
  42828a:	cmp    ebx,0xe
  42828d:	mov    DWORD PTR [rsp+0x9c],ebx
  428294:	setbe  bl
  428297:	and    ebx,eax
  428299:	mov    QWORD PTR [rsp+0x78],r9
  42829e:	mov    DWORD PTR [rsp+0x70],r11d
  4282a3:	call   0x427ce0
  4282a8:	mov    QWORD PTR [rsp+0x48],rax
  4282ad:	mov    eax,DWORD PTR [rbp+0xc]
  4282b0:	mov    r11d,DWORD PTR [rsp+0x70]
  4282b5:	mov    r9,QWORD PTR [rsp+0x78]
  4282ba:	sub    eax,0x1
  4282bd:	mov    DWORD PTR [rsp+0x38],eax
  4282c1:	je     0x4282e8
  4282c3:	mov    ecx,DWORD PTR [rsp+0x38]
  4282c7:	mov    eax,0x2
  4282cc:	test   ecx,ecx
  4282ce:	cmovns eax,ecx
  4282d1:	and    r12d,0x8
  4282d5:	mov    DWORD PTR [rsp+0x38],eax
  4282d9:	je     0x4282e8
  4282db:	mov    eax,0x3
  4282e0:	sub    eax,DWORD PTR [rsp+0x38]
  4282e4:	mov    DWORD PTR [rsp+0x38],eax
  4282e8:	test   bl,bl
  4282ea:	je     0x4285e0
  4282f0:	mov    eax,DWORD PTR [rsp+0x38]
  4282f4:	or     eax,DWORD PTR [rsp+0x30]
  4282f8:	jne    0x4285e0
  4282fe:	mov    eax,DWORD PTR [rsp+0x6c]
  428302:	mov    DWORD PTR [rsp+0x9c],0x0
  42830d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  428316:	test   eax,eax
  428318:	je     0x42832c
  42831a:	movsd  xmm0,QWORD PTR [rip+0x1dcd6]        # 0x445ff8
  428322:	ucomisd xmm0,xmm4
  428326:	ja     0x42915b
  42832c:	movapd xmm0,xmm4
  428330:	mov    r12d,DWORD PTR [rsp+0x68]
  428335:	addsd  xmm0,xmm4
  428339:	addsd  xmm0,QWORD PTR [rip+0x1dccf]        # 0x446010
  428341:	movq   rdx,xmm0
  428346:	movq   rax,xmm0
  42834b:	shr    rdx,0x20
  42834f:	mov    eax,eax
  428351:	sub    edx,0x3400000
  428357:	shl    rdx,0x20
  42835b:	or     rax,rdx
  42835e:	test   r12d,r12d
  428361:	je     0x428597
  428367:	mov    r9d,DWORD PTR [rsp+0x68]
  42836c:	movapd xmm0,xmm4
  428370:	xor    ecx,ecx
  428372:	mov    ebx,DWORD PTR [rsp+0x60]
  428376:	lea    edx,[r9-0x1]
  42837a:	movsxd rdx,edx
  42837d:	test   ebx,ebx
  42837f:	je     0x428ea3
  428385:	mov    r10,QWORD PTR [rip+0x1dfc4]        # 0x446350
  42838c:	movsd  xmm1,QWORD PTR [rip+0x1dc9c]        # 0x446030
  428394:	mov    QWORD PTR [rsp+0x38],rax
  428399:	cvttsd2si eax,xmm0
  42839d:	pxor   xmm2,xmm2
  4283a1:	mov    DWORD PTR [rsp+0x9c],0x0
  4283ac:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  4283b2:	mov    rdx,QWORD PTR [rsp+0x48]
  4283b7:	mov    rbx,rdx
  4283ba:	add    rbx,0x1
  4283be:	cvtsi2sd xmm2,eax
  4283c2:	add    eax,0x30
  4283c5:	mov    BYTE PTR [rdx],al
  4283c7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4283cd:	subsd  xmm0,xmm2
  4283d1:	subsd  xmm1,xmm5
  4283d5:	ucomisd xmm1,xmm0
  4283d9:	ja     0x428474
  4283df:	movsd  xmm5,QWORD PTR [rip+0x1dc11]        # 0x445ff8
  4283e7:	movapd xmm2,xmm5
  4283eb:	subsd  xmm2,xmm0
  4283ef:	ucomisd xmm1,xmm2
  4283f3:	ja     0x428f77
  4283f9:	mov    eax,DWORD PTR [rsp+0x9c]
  428400:	movsd  xmm3,QWORD PTR [rip+0x1dbf8]        # 0x446000
  428408:	add    eax,0x1
  42840b:	cmp    r9d,eax
  42840e:	mov    DWORD PTR [rsp+0x9c],eax
  428415:	jg     0x42844c
  428417:	jmp    0x4285ce
  42841c:	nop    DWORD PTR [rax+0x0]
  428420:	movapd xmm2,xmm5
  428424:	subsd  xmm2,xmm0
  428428:	ucomisd xmm1,xmm2
  42842c:	ja     0x428f77
  428432:	mov    eax,DWORD PTR [rsp+0x9c]
  428439:	add    eax,0x1
  42843c:	cmp    r9d,eax
  42843f:	mov    DWORD PTR [rsp+0x9c],eax
  428446:	jle    0x4285ce
  42844c:	mulsd  xmm0,xmm3
  428450:	add    rbx,0x1
  428454:	pxor   xmm2,xmm2
  428458:	mulsd  xmm1,xmm3
  42845c:	cvttsd2si eax,xmm0
  428460:	cvtsi2sd xmm2,eax
  428464:	add    eax,0x30
  428467:	mov    BYTE PTR [rbx-0x1],al
  42846a:	subsd  xmm0,xmm2
  42846e:	ucomisd xmm1,xmm0
  428472:	jbe    0x428420
  428474:	ucomisd xmm0,xmm6
  428478:	lea    ebp,[rcx+0x1]
  42847b:	jp     0x428483
  42847d:	je     0x428dd7
  428483:	mov    r15d,0x10
  428489:	nop    DWORD PTR [rax+0x0]
  428490:	mov    rcx,rsi
  428493:	call   0x4296e0
  428498:	cmp    QWORD PTR [rsp+0x138],0x0
  4284a1:	mov    rax,QWORD PTR [rsp+0x130]
  4284a9:	mov    BYTE PTR [rbx],0x0
  4284ac:	mov    DWORD PTR [rax],ebp
  4284ae:	je     0x4284bb
  4284b0:	mov    rax,QWORD PTR [rsp+0x138]
  4284b8:	mov    QWORD PTR [rax],rbx
  4284bb:	mov    rax,QWORD PTR [rsp+0x28]
  4284c0:	or     DWORD PTR [rax],r15d
  4284c3:	mov    rax,QWORD PTR [rsp+0x48]
  4284c8:	jmp    0x428047
  4284cd:	nop    DWORD PTR [rax]
  4284d0:	mov    DWORD PTR [rsi+0x14],0x0
  4284d7:	jmp    0x427ff1
  4284dc:	nop    DWORD PTR [rax+0x0]
  4284e0:	mov    edx,eax
  4284e2:	mov    rcx,rsi
  4284e5:	call   0x429370
  4284ea:	mov    eax,DWORD PTR [rsp+0x9c]
  4284f1:	lea    r11d,[r13+rax*1+0x0]
  4284f6:	sub    r14d,eax
  4284f9:	jmp    0x42800b
  4284fe:	xchg   ax,ax
  428500:	mov    DWORD PTR [rsp+0x120],0x0
  42850b:	add    ecx,0x3fe
  428511:	cmp    ecx,0x7f7
  428517:	setbe  al
  42851a:	jmp    0x42822f
  42851f:	nop
  428520:	mov    DWORD PTR [rsp+0x6c],0x0
  428528:	jmp    0x4281d0
  42852d:	nop    DWORD PTR [rax]
  428530:	mov    edx,DWORD PTR [rsp+0x128]
  428537:	test   edx,edx
  428539:	jle    0x428deb
  42853f:	cmp    DWORD PTR [rsp+0x128],0xe
  428547:	setbe  bl
  42854a:	mov    ecx,DWORD PTR [rsp+0x128]
  428551:	and    ebx,eax
  428553:	mov    DWORD PTR [rsp+0x9c],ecx
  42855a:	mov    DWORD PTR [rsp+0x8c],ecx
  428561:	mov    DWORD PTR [rsp+0x68],ecx
  428565:	jmp    0x428299
  42856a:	movapd xmm0,xmm4
  42856e:	addsd  xmm0,xmm4
  428572:	addsd  xmm0,QWORD PTR [rip+0x1da96]        # 0x446010
  42857a:	movq   rdx,xmm0
  42857f:	movq   rax,xmm0
  428584:	shr    rdx,0x20
  428588:	mov    eax,eax
  42858a:	sub    edx,0x3400000
  428590:	shl    rdx,0x20
  428594:	or     rax,rdx
  428597:	movapd xmm1,xmm4
  42859b:	mov    QWORD PTR [rsp+0x38],rax
  4285a0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4285a6:	subsd  xmm1,QWORD PTR [rip+0x1da6a]        # 0x446018
  4285ae:	ucomisd xmm1,xmm0
  4285b2:	ja     0x428e94
  4285b8:	movsd  xmm2,QWORD PTR [rip+0x1da60]        # 0x446020
  4285c0:	xorpd  xmm0,xmm2
  4285c4:	ucomisd xmm0,xmm1
  4285c8:	ja     0x4289ad
  4285ce:	movq   r9,xmm4
  4285d3:	mov    DWORD PTR [rsp+0x38],0x0
  4285db:	nop    DWORD PTR [rax+rax*1+0x0]
  4285e0:	test   r11d,r11d
  4285e3:	js     0x428682
  4285e9:	movsxd rax,DWORD PTR [rsp+0x30]
  4285ee:	cmp    eax,DWORD PTR [rbp+0x14]
  4285f1:	jg     0x428682
  4285f7:	mov    ebx,DWORD PTR [rsp+0x68]
  4285fb:	mov    rdx,QWORD PTR [rip+0x1dd4e]        # 0x446350
  428602:	test   ebx,ebx
  428604:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  428609:	jg     0x428d13
  42860f:	mov    eax,DWORD PTR [rsp+0x128]
  428616:	shr    eax,0x1f
  428619:	test   al,al
  42861b:	je     0x428d13
  428621:	test   ebx,ebx
  428623:	jne    0x4289ad
  428629:	mulsd  xmm2,QWORD PTR [rip+0x1d9e7]        # 0x446018
  428631:	mov    QWORD PTR [rsp+0x38],r9
  428636:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42863c:	ucomisd xmm2,xmm5
  428640:	jae    0x4289ad
  428646:	mov    ebp,DWORD PTR [rsp+0x30]
  42864a:	xor    r12d,r12d
  42864d:	xor    edi,edi
  42864f:	add    ebp,0x2
  428652:	mov    rax,QWORD PTR [rsp+0x48]
  428657:	mov    r15d,0x20
  42865d:	lea    rbx,[rax+0x1]
  428661:	mov    BYTE PTR [rax],0x31
  428664:	mov    rcx,r12
  428667:	call   0x4296e0
  42866c:	test   rdi,rdi
  42866f:	je     0x428490
  428675:	mov    rcx,rdi
  428678:	call   0x4296e0
  42867d:	jmp    0x428490
  428682:	mov    r9d,DWORD PTR [rsp+0x60]
  428687:	test   r9d,r9d
  42868a:	je     0x428b90
  428690:	mov    edx,DWORD PTR [rbp+0x4]
  428693:	sub    edi,r14d
  428696:	mov    ecx,r11d
  428699:	lea    eax,[rdi+0x1]
  42869c:	sub    ecx,edi
  42869e:	cmp    ecx,edx
  4286a0:	mov    DWORD PTR [rsp+0x9c],eax
  4286a7:	jge    0x4286dc
  4286a9:	mov    ebx,DWORD PTR [rsp+0x120]
  4286b0:	lea    ecx,[rbx-0x3]
  4286b3:	and    ecx,0xfffffffd
  4286b6:	je     0x4286dc
  4286b8:	mov    ebx,DWORD PTR [rsp+0x68]
  4286bc:	sub    r11d,edx
  4286bf:	lea    eax,[r11+0x1]
  4286c3:	test   ebx,ebx
  4286c5:	mov    DWORD PTR [rsp+0x9c],eax
  4286cc:	setg   cl
  4286cf:	cmp    ebx,eax
  4286d1:	setl   dl
  4286d4:	test   cl,dl
  4286d6:	je     0x428e1f
  4286dc:	cmp    DWORD PTR [rsp+0x120],0x1
  4286e4:	jle    0x428e1f
  4286ea:	mov    ebx,DWORD PTR [rsp+0x58]
  4286ee:	mov    eax,DWORD PTR [rsp+0x68]
  4286f2:	mov    r12d,ebx
  4286f5:	sub    eax,0x1
  4286f8:	sub    r12d,eax
  4286fb:	cmp    ebx,eax
  4286fd:	jge    0x428713
  4286ff:	mov    edx,eax
  428701:	sub    edx,DWORD PTR [rsp+0x58]
  428705:	xor    r12d,r12d
  428708:	add    DWORD PTR [rsp+0x88],edx
  42870f:	mov    DWORD PTR [rsp+0x58],eax
  428713:	mov    eax,DWORD PTR [rsp+0x68]
  428717:	test   eax,eax
  428719:	js     0x4290b2
  42871f:	mov    ebx,DWORD PTR [rsp+0x50]
  428723:	mov    DWORD PTR [rsp+0x9c],eax
  42872a:	mov    ecx,0x1
  42872f:	add    DWORD PTR [rsp+0x50],eax
  428733:	add    DWORD PTR [rsp+0x40],eax
  428737:	call   0x429810
  42873c:	mov    rdi,rax
  42873f:	mov    ecx,DWORD PTR [rsp+0x40]
  428743:	test   ecx,ecx
  428745:	mov    eax,ecx
  428747:	jle    0x428765
  428749:	test   ebx,ebx
  42874b:	jle    0x428765
  42874d:	cmp    ecx,ebx
  42874f:	cmovg  eax,ebx
  428752:	sub    DWORD PTR [rsp+0x50],eax
  428756:	sub    ecx,eax
  428758:	mov    DWORD PTR [rsp+0x9c],eax
  42875f:	sub    ebx,eax
  428761:	mov    DWORD PTR [rsp+0x40],ecx
  428765:	mov    r8d,DWORD PTR [rsp+0x58]
  42876a:	test   r8d,r8d
  42876d:	jle    0x4287bb
  42876f:	mov    ecx,DWORD PTR [rsp+0x60]
  428773:	test   ecx,ecx
  428775:	je     0x428bb0
  42877b:	test   r12d,r12d
  42877e:	jle    0x4287ae
  428780:	mov    rcx,rdi
  428783:	mov    edx,r12d
  428786:	call   0x429970
  42878b:	mov    rdx,rsi
  42878e:	mov    rcx,rax
  428791:	mov    rdi,rax
  428794:	call   0x429840
  428799:	mov    rcx,rsi
  42879c:	mov    QWORD PTR [rsp+0x70],rax
  4287a1:	call   0x4296e0
  4287a6:	mov    rax,QWORD PTR [rsp+0x70]
  4287ab:	mov    rsi,rax
  4287ae:	mov    edx,DWORD PTR [rsp+0x58]
  4287b2:	sub    edx,r12d
  4287b5:	jne    0x428bb4
  4287bb:	mov    ecx,0x1
  4287c0:	call   0x429810
  4287c5:	mov    r12,rax
  4287c8:	mov    eax,DWORD PTR [rsp+0x88]
  4287cf:	test   eax,eax
  4287d1:	jle    0x428900
  4287d7:	mov    rcx,r12
  4287da:	mov    edx,eax
  4287dc:	call   0x429970
  4287e1:	cmp    DWORD PTR [rsp+0x120],0x1
  4287e9:	mov    r12,rax
  4287ec:	jg     0x4287f8
  4287ee:	cmp    r14d,0x1
  4287f2:	je     0x4288bc
  4287f8:	xor    ebp,ebp
  4287fa:	mov    eax,DWORD PTR [r12+0x14]
  4287ff:	sub    eax,0x1
  428802:	cdqe   
  428804:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42880a:	xor    eax,0x1f
  42880d:	sub    eax,DWORD PTR [rsp+0x40]
  428811:	mov    edx,DWORD PTR [rsp+0x50]
  428815:	sub    eax,0x4
  428818:	and    eax,0x1f
  42881b:	add    edx,eax
  42881d:	mov    r13d,eax
  428820:	mov    DWORD PTR [rsp+0x9c],eax
  428827:	test   edx,edx
  428829:	mov    ecx,eax
  42882b:	jle    0x42883f
  42882d:	mov    rcx,rsi
  428830:	call   0x429ae0
  428835:	mov    ecx,DWORD PTR [rsp+0x9c]
  42883c:	mov    rsi,rax
  42883f:	mov    edx,DWORD PTR [rsp+0x40]
  428843:	add    edx,ecx
  428845:	test   edx,edx
  428847:	jle    0x428854
  428849:	mov    rcx,r12
  42884c:	call   0x429ae0
  428851:	mov    r12,rax
  428854:	mov    eax,DWORD PTR [rsp+0x6c]
  428858:	test   eax,eax
  42885a:	jne    0x428bd1
  428860:	mov    r14d,DWORD PTR [rsp+0x68]
  428865:	test   r14d,r14d
  428868:	jg     0x428a21
  42886e:	cmp    DWORD PTR [rsp+0x120],0x2
  428876:	jle    0x428a21
  42887c:	mov    r11d,DWORD PTR [rsp+0x68]
  428881:	test   r11d,r11d
  428884:	jne    0x4289b2
  42888a:	xor    r8d,r8d
  42888d:	mov    rcx,r12
  428890:	mov    edx,0x5
  428895:	call   0x429750
  42889a:	mov    rcx,rsi
  42889d:	mov    rdx,rax
  4288a0:	mov    r12,rax
  4288a3:	call   0x429c00
  4288a8:	test   eax,eax
  4288aa:	jle    0x4289b2
  4288b0:	mov    ebp,DWORD PTR [rsp+0x30]
  4288b4:	add    ebp,0x2
  4288b7:	jmp    0x428652
  4288bc:	mov    eax,DWORD PTR [rbp+0x4]
  4288bf:	add    eax,0x1
  4288c2:	cmp    r13d,eax
  4288c5:	jle    0x4287f8
  4288cb:	add    DWORD PTR [rsp+0x50],0x1
  4288d0:	add    DWORD PTR [rsp+0x40],0x1
  4288d5:	mov    ebp,0x1
  4288da:	nop    WORD PTR [rax+rax*1+0x0]
  4288e0:	mov    edx,DWORD PTR [rsp+0x88]
  4288e7:	mov    eax,0x1f
  4288ec:	test   edx,edx
  4288ee:	je     0x42880d
  4288f4:	jmp    0x4287fa
  4288f9:	nop    DWORD PTR [rax+0x0]
  428900:	cmp    DWORD PTR [rsp+0x120],0x1
  428908:	jg     0x428910
  42890a:	cmp    r14d,0x1
  42890e:	je     0x428914
  428910:	xor    ebp,ebp
  428912:	jmp    0x4288e0
  428914:	mov    eax,DWORD PTR [rbp+0x4]
  428917:	xor    ebp,ebp
  428919:	add    eax,0x1
  42891c:	cmp    r13d,eax
  42891f:	jle    0x4288e0
  428921:	jmp    0x4288cb
  428923:	cmp    DWORD PTR [rsp+0x120],0x2
  42892b:	mov    DWORD PTR [rsp+0x60],0x0
  428933:	je     0x428530
  428939:	pxor   xmm0,xmm0
  42893d:	mov    QWORD PTR [rsp+0x60],r9
  428942:	mov    DWORD PTR [rsp+0x68],r11d
  428947:	cvtsi2sd xmm0,edi
  42894b:	mulsd  xmm0,QWORD PTR [rip+0x1d69d]        # 0x445ff0
  428953:	cvttsd2si ecx,xmm0
  428957:	add    ecx,0x3
  42895a:	mov    DWORD PTR [rsp+0x9c],ecx
  428961:	call   0x427ce0
  428966:	mov    QWORD PTR [rsp+0x48],rax
  42896b:	mov    eax,DWORD PTR [rbp+0xc]
  42896e:	mov    r11d,DWORD PTR [rsp+0x68]
  428973:	mov    r9,QWORD PTR [rsp+0x60]
  428978:	sub    eax,0x1
  42897b:	mov    DWORD PTR [rsp+0x38],eax
  42897f:	jne    0x428e2d
  428985:	mov    eax,0xffffffff
  42898a:	mov    DWORD PTR [rsp+0x60],0x1
  428992:	mov    DWORD PTR [rsp+0x128],0x0
  42899d:	mov    DWORD PTR [rsp+0x8c],eax
  4289a4:	mov    DWORD PTR [rsp+0x68],eax
  4289a8:	jmp    0x4285e0
  4289ad:	xor    r12d,r12d
  4289b0:	xor    edi,edi
  4289b2:	mov    ebp,DWORD PTR [rsp+0x128]
  4289b9:	mov    rbx,QWORD PTR [rsp+0x48]
  4289be:	mov    r15d,0x10
  4289c4:	neg    ebp
  4289c6:	jmp    0x428664
  4289cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4289d0:	mov    eax,DWORD PTR [rsp+0x30]
  4289d4:	sub    DWORD PTR [rsp+0x50],eax
  4289d8:	mov    DWORD PTR [rsp+0x88],0x0
  4289e3:	neg    eax
  4289e5:	mov    DWORD PTR [rsp+0x58],eax
  4289e9:	jmp    0x428209
  4289ee:	xchg   ax,ax
  4289f0:	neg    eax
  4289f2:	mov    DWORD PTR [rsp+0x40],0x0
  4289fa:	mov    DWORD PTR [rsp+0x50],eax
  4289fe:	jmp    0x4281ea
  428a03:	pxor   xmm0,xmm0
  428a07:	cvtsi2sd xmm0,eax
  428a0b:	ucomisd xmm0,xmm1
  428a0f:	jp     0x428a17
  428a11:	je     0x42817b
  428a17:	sub    DWORD PTR [rsp+0x30],0x1
  428a1c:	jmp    0x42817b
  428a21:	mov    r10d,DWORD PTR [rsp+0x60]
  428a26:	test   r10d,r10d
  428a29:	je     0x428c30
  428a2f:	lea    edx,[rbx+r13*1]
  428a33:	test   edx,edx
  428a35:	jle    0x428a42
  428a37:	mov    rcx,rdi
  428a3a:	call   0x429ae0
  428a3f:	mov    rdi,rax
  428a42:	test   ebp,ebp
  428a44:	mov    r13,rdi
  428a47:	jne    0x4290e5
  428a4d:	mov    DWORD PTR [rsp+0x9c],0x1
  428a58:	mov    rbx,QWORD PTR [rsp+0x48]
  428a5d:	mov    QWORD PTR [rsp+0x40],r12
  428a62:	mov    QWORD PTR [rsp+0x50],r15
  428a67:	jmp    0x428b2e
  428a6c:	nop    DWORD PTR [rax+0x0]
  428a70:	mov    rcx,r8
  428a73:	call   0x4296e0
  428a78:	mov    eax,r12d
  428a7b:	or     eax,DWORD PTR [rsp+0x120]
  428a82:	jne    0x428a9a
  428a84:	mov    ecx,DWORD PTR [rsp+0x38]
  428a88:	test   ecx,ecx
  428a8a:	jne    0x428a9a
  428a8c:	mov    rax,QWORD PTR [rsp+0x50]
  428a91:	test   BYTE PTR [rax],0x1
  428a94:	je     0x429255
  428a9a:	test   r14d,r14d
  428a9d:	js     0x428fb0
  428aa3:	or     r14d,DWORD PTR [rsp+0x120]
  428aab:	jne    0x428abb
  428aad:	mov    rax,QWORD PTR [rsp+0x50]
  428ab2:	test   BYTE PTR [rax],0x1
  428ab5:	je     0x428fb0
  428abb:	test   r12d,r12d
  428abe:	jle    0x428acb
  428ac0:	cmp    DWORD PTR [rsp+0x38],0x2
  428ac5:	jne    0x4291bf
  428acb:	add    rbx,0x1
  428acf:	mov    BYTE PTR [rbx-0x1],bpl
  428ad3:	mov    eax,DWORD PTR [rsp+0x68]
  428ad7:	cmp    DWORD PTR [rsp+0x9c],eax
  428ade:	je     0x42914b
  428ae4:	xor    r8d,r8d
  428ae7:	mov    rcx,rsi
  428aea:	mov    edx,0xa
  428aef:	call   0x429750
  428af4:	xor    r8d,r8d
  428af7:	cmp    rdi,r13
  428afa:	mov    rsi,rax
  428afd:	mov    edx,0xa
  428b02:	mov    rcx,rdi
  428b05:	je     0x428ba0
  428b0b:	call   0x429750
  428b10:	mov    rcx,r13
  428b13:	xor    r8d,r8d
  428b16:	mov    edx,0xa
  428b1b:	mov    rdi,rax
  428b1e:	call   0x429750
  428b23:	mov    r13,rax
  428b26:	add    DWORD PTR [rsp+0x9c],0x1
  428b2e:	mov    r12,QWORD PTR [rsp+0x40]
  428b33:	mov    rcx,rsi
  428b36:	mov    rdx,r12
  428b39:	call   0x427d80
  428b3e:	mov    rdx,rdi
  428b41:	mov    rcx,rsi
  428b44:	mov    r15d,eax
  428b47:	lea    ebp,[rax+0x30]
  428b4a:	call   0x429c00
  428b4f:	mov    rcx,r12
  428b52:	mov    rdx,r13
  428b55:	mov    r14d,eax
  428b58:	call   0x429c50
  428b5d:	mov    r9d,DWORD PTR [rax+0x10]
  428b61:	mov    r8,rax
  428b64:	mov    r12d,0x1
  428b6a:	test   r9d,r9d
  428b6d:	jne    0x428a70
  428b73:	mov    rdx,rax
  428b76:	mov    rcx,rsi
  428b79:	mov    QWORD PTR [rsp+0x58],rax
  428b7e:	call   0x429c00
  428b83:	mov    r8,QWORD PTR [rsp+0x58]
  428b88:	mov    r12d,eax
  428b8b:	jmp    0x428a70
  428b90:	mov    r12d,DWORD PTR [rsp+0x58]
  428b95:	mov    ebx,DWORD PTR [rsp+0x50]
  428b99:	xor    edi,edi
  428b9b:	jmp    0x42873f
  428ba0:	call   0x429750
  428ba5:	mov    rdi,rax
  428ba8:	mov    r13,rax
  428bab:	jmp    0x428b26
  428bb0:	mov    edx,DWORD PTR [rsp+0x58]
  428bb4:	mov    rcx,rsi
  428bb7:	call   0x429970
  428bbc:	mov    rsi,rax
  428bbf:	jmp    0x4287bb
  428bc4:	mov    DWORD PTR [rsp+0x60],0x0
  428bcc:	jmp    0x428267
  428bd1:	mov    rdx,r12
  428bd4:	mov    rcx,rsi
  428bd7:	call   0x429c00
  428bdc:	test   eax,eax
  428bde:	jns    0x428860
  428be4:	xor    r8d,r8d
  428be7:	mov    rcx,rsi
  428bea:	mov    edx,0xa
  428bef:	sub    DWORD PTR [rsp+0x30],0x1
  428bf4:	call   0x429750
  428bf9:	mov    rsi,rax
  428bfc:	mov    eax,DWORD PTR [rsp+0x60]
  428c00:	test   eax,eax
  428c02:	jne    0x4292c8
  428c08:	mov    eax,DWORD PTR [rsp+0x8c]
  428c0f:	test   eax,eax
  428c11:	jg     0x428c25
  428c13:	cmp    DWORD PTR [rsp+0x120],0x2
  428c1b:	mov    DWORD PTR [rsp+0x68],eax
  428c1f:	jg     0x42887c
  428c25:	mov    eax,DWORD PTR [rsp+0x8c]
  428c2c:	mov    DWORD PTR [rsp+0x68],eax
  428c30:	mov    DWORD PTR [rsp+0x9c],0x1
  428c3b:	mov    rbx,QWORD PTR [rsp+0x48]
  428c40:	mov    r13d,DWORD PTR [rsp+0x68]
  428c45:	jmp    0x428c6b
  428c47:	nop    WORD PTR [rax+rax*1+0x0]
  428c50:	mov    rcx,rsi
  428c53:	xor    r8d,r8d
  428c56:	mov    edx,0xa
  428c5b:	call   0x429750
  428c60:	add    DWORD PTR [rsp+0x9c],0x1
  428c68:	mov    rsi,rax
  428c6b:	mov    rdx,r12
  428c6e:	mov    rcx,rsi
  428c71:	add    rbx,0x1
  428c75:	call   0x427d80
  428c7a:	lea    ebp,[rax+0x30]
  428c7d:	mov    BYTE PTR [rbx-0x1],bpl
  428c81:	cmp    DWORD PTR [rsp+0x9c],r13d
  428c89:	jl     0x428c50
  428c8b:	xor    r14d,r14d
  428c8e:	mov    eax,DWORD PTR [rsp+0x38]
  428c92:	test   eax,eax
  428c94:	je     0x42905c
  428c9a:	cmp    eax,0x2
  428c9d:	je     0x42908c
  428ca3:	cmp    DWORD PTR [rsi+0x14],0x1
  428ca7:	jle    0x429223
  428cad:	movzx  edx,BYTE PTR [rbx-0x1]
  428cb1:	mov    rcx,QWORD PTR [rsp+0x48]
  428cb6:	jmp    0x428cd0
  428cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cc0:	cmp    rax,rcx
  428cc3:	je     0x428e7c
  428cc9:	movzx  edx,BYTE PTR [rax-0x1]
  428ccd:	mov    rbx,rax
  428cd0:	cmp    dl,0x39
  428cd3:	lea    rax,[rbx-0x1]
  428cd7:	je     0x428cc0
  428cd9:	add    edx,0x1
  428cdc:	mov    r15d,0x20
  428ce2:	mov    BYTE PTR [rax],dl
  428ce4:	mov    rcx,r12
  428ce7:	call   0x4296e0
  428cec:	test   rdi,rdi
  428cef:	je     0x428ddf
  428cf5:	cmp    r14,rdi
  428cf8:	je     0x428d07
  428cfa:	test   r14,r14
  428cfd:	je     0x428d07
  428cff:	mov    rcx,r14
  428d02:	call   0x4296e0
  428d07:	mov    ebp,DWORD PTR [rsp+0x30]
  428d0b:	add    ebp,0x1
  428d0e:	jmp    0x428675
  428d13:	mov    QWORD PTR [rsp+0x40],r9
  428d18:	mov    rdi,QWORD PTR [rsp+0x48]
  428d1d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  428d23:	mov    DWORD PTR [rsp+0x9c],0x1
  428d2e:	movapd xmm1,xmm0
  428d32:	mov    rbx,rdi
  428d35:	add    rbx,0x1
  428d39:	divsd  xmm1,xmm2
  428d3d:	cvttsd2si eax,xmm1
  428d41:	pxor   xmm1,xmm1
  428d45:	cvtsi2sd xmm1,eax
  428d49:	lea    edx,[rax+0x30]
  428d4c:	mov    BYTE PTR [rdi],dl
  428d4e:	mulsd  xmm1,xmm2
  428d52:	subsd  xmm0,xmm1
  428d56:	ucomisd xmm0,xmm6
  428d5a:	jp     0x428d5e
  428d5c:	je     0x428dd0
  428d5e:	mov    edx,DWORD PTR [rsp+0x9c]
  428d65:	cmp    DWORD PTR [rsp+0x68],edx
  428d69:	je     0x428e57
  428d6f:	movsd  xmm3,QWORD PTR [rip+0x1d289]        # 0x446000
  428d77:	movapd xmm4,xmm6
  428d7b:	mov    ecx,DWORD PTR [rsp+0x68]
  428d7f:	jmp    0x428d90
  428d81:	mov    edx,DWORD PTR [rsp+0x9c]
  428d88:	cmp    ecx,edx
  428d8a:	je     0x428e57
  428d90:	mulsd  xmm0,xmm3
  428d94:	add    edx,0x1
  428d97:	add    rbx,0x1
  428d9b:	mov    DWORD PTR [rsp+0x9c],edx
  428da2:	movapd xmm1,xmm0
  428da6:	divsd  xmm1,xmm2
  428daa:	cvttsd2si eax,xmm1
  428dae:	pxor   xmm1,xmm1
  428db2:	cvtsi2sd xmm1,eax
  428db6:	lea    edx,[rax+0x30]
  428db9:	mov    BYTE PTR [rbx-0x1],dl
  428dbc:	mulsd  xmm1,xmm2
  428dc0:	subsd  xmm0,xmm1
  428dc4:	ucomisd xmm0,xmm6
  428dc8:	jp     0x428d81
  428dca:	ucomisd xmm0,xmm4
  428dce:	jne    0x428d81
  428dd0:	mov    ebp,DWORD PTR [rsp+0x30]
  428dd4:	add    ebp,0x1
  428dd7:	xor    r15d,r15d
  428dda:	jmp    0x428490
  428ddf:	mov    ebp,DWORD PTR [rsp+0x30]
  428de3:	add    ebp,0x1
  428de6:	jmp    0x428490
  428deb:	mov    ebx,0x1
  428df0:	mov    DWORD PTR [rsp+0x128],0x1
  428dfb:	jmp    0x42854a
  428e00:	cmp    DWORD PTR [rsp+0x68],0xe
  428e05:	mov    DWORD PTR [rsp+0x9c],0x1
  428e10:	mov    ecx,0x1
  428e15:	setbe  bl
  428e18:	and    ebx,eax
  428e1a:	jmp    0x428299
  428e1f:	mov    r12d,DWORD PTR [rsp+0x58]
  428e24:	mov    ebx,DWORD PTR [rsp+0x50]
  428e28:	jmp    0x42872a
  428e2d:	mov    eax,0xffffffff
  428e32:	xor    ebx,ebx
  428e34:	mov    DWORD PTR [rsp+0x60],0x1
  428e3c:	mov    DWORD PTR [rsp+0x8c],eax
  428e43:	mov    DWORD PTR [rsp+0x68],eax
  428e47:	mov    DWORD PTR [rsp+0x128],0x0
  428e52:	jmp    0x4282c3
  428e57:	mov    r10d,DWORD PTR [rsp+0x38]
  428e5c:	test   r10d,r10d
  428e5f:	je     0x42911e
  428e65:	cmp    DWORD PTR [rsp+0x38],0x1
  428e6a:	je     0x429211
  428e70:	mov    ebp,DWORD PTR [rsp+0x30]
  428e74:	add    ebp,0x1
  428e77:	jmp    0x428483
  428e7c:	mov    rax,QWORD PTR [rsp+0x48]
  428e81:	add    DWORD PTR [rsp+0x30],0x1
  428e86:	mov    r15d,0x20
  428e8c:	mov    BYTE PTR [rax],0x31
  428e8f:	jmp    0x428ce4
  428e94:	mov    ebp,0x2
  428e99:	xor    r12d,r12d
  428e9c:	xor    edi,edi
  428e9e:	jmp    0x428652
  428ea3:	mov    r10,QWORD PTR [rip+0x1d4a6]        # 0x446350
  428eaa:	mov    QWORD PTR [rsp+0x38],rax
  428eaf:	movsd  xmm3,QWORD PTR [rsp+0x38]
  428eb5:	mov    DWORD PTR [rsp+0x9c],0x1
  428ec0:	mov    rbx,QWORD PTR [rsp+0x48]
  428ec5:	movsd  xmm1,QWORD PTR [rip+0x1d133]        # 0x446000
  428ecd:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  428ed3:	jmp    0x428ee3
  428ed5:	mulsd  xmm0,xmm1
  428ed9:	add    edx,0x1
  428edc:	mov    DWORD PTR [rsp+0x9c],edx
  428ee3:	cvttsd2si eax,xmm0
  428ee7:	test   eax,eax
  428ee9:	je     0x428ef7
  428eeb:	pxor   xmm2,xmm2
  428eef:	cvtsi2sd xmm2,eax
  428ef3:	subsd  xmm0,xmm2
  428ef7:	add    rbx,0x1
  428efb:	add    eax,0x30
  428efe:	mov    BYTE PTR [rbx-0x1],al
  428f01:	mov    edx,DWORD PTR [rsp+0x9c]
  428f08:	cmp    edx,r9d
  428f0b:	jne    0x428ed5
  428f0d:	movsd  xmm1,QWORD PTR [rip+0x1d11b]        # 0x446030
  428f15:	movapd xmm2,xmm3
  428f19:	addsd  xmm2,xmm1
  428f1d:	ucomisd xmm0,xmm2
  428f21:	ja     0x428f77
  428f23:	subsd  xmm1,xmm3
  428f27:	ucomisd xmm1,xmm0
  428f2b:	jbe    0x4285ce
  428f31:	ucomisd xmm0,xmm6
  428f35:	jp     0x4292bd
  428f3b:	jne    0x4292bd
  428f41:	xor    r15d,r15d
  428f44:	jmp    0x428f57
  428f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f50:	movzx  eax,BYTE PTR [rbx-0x2]
  428f54:	mov    rbx,rdx
  428f57:	cmp    al,0x30
  428f59:	lea    rdx,[rbx-0x1]
  428f5d:	je     0x428f50
  428f5f:	lea    ebp,[rcx+0x1]
  428f62:	jmp    0x428490
  428f67:	test   al,0x1
  428f69:	mov    ecx,DWORD PTR [rsp+0x30]
  428f6d:	movzx  eax,BYTE PTR [rbx-0x1]
  428f71:	je     0x4292bd
  428f77:	mov    r8,QWORD PTR [rsp+0x48]
  428f7c:	jmp    0x428f90
  428f7e:	xchg   ax,ax
  428f80:	cmp    rdx,r8
  428f83:	je     0x4290cc
  428f89:	movzx  eax,BYTE PTR [rdx-0x1]
  428f8d:	mov    rbx,rdx
  428f90:	cmp    al,0x39
  428f92:	lea    rdx,[rbx-0x1]
  428f96:	je     0x428f80
  428f98:	mov    QWORD PTR [rsp+0x48],r8
  428f9d:	add    eax,0x1
  428fa0:	mov    BYTE PTR [rdx],al
  428fa2:	lea    ebp,[rcx+0x1]
  428fa5:	mov    r15d,0x20
  428fab:	jmp    0x428490
  428fb0:	mov    edx,DWORD PTR [rsp+0x38]
  428fb4:	mov    eax,r12d
  428fb7:	mov    r14d,ebp
  428fba:	mov    r12,QWORD PTR [rsp+0x40]
  428fbf:	test   edx,edx
  428fc1:	je     0x4291f1
  428fc7:	cmp    DWORD PTR [rsi+0x14],0x1
  428fcb:	jle    0x4291e7
  428fd1:	cmp    DWORD PTR [rsp+0x38],0x2
  428fd6:	jne    0x429027
  428fd8:	jmp    0x429206
  428fdd:	nop    DWORD PTR [rax]
  428fe0:	add    rbx,0x1
  428fe4:	xor    r8d,r8d
  428fe7:	mov    rcx,r13
  428fea:	mov    BYTE PTR [rbx-0x1],r14b
  428fee:	mov    edx,0xa
  428ff3:	call   0x429750
  428ff8:	cmp    rdi,r13
  428ffb:	mov    rcx,rsi
  428ffe:	mov    edx,0xa
  429003:	cmove  rdi,rax
  429007:	xor    r8d,r8d
  42900a:	mov    rbp,rax
  42900d:	call   0x429750
  429012:	mov    rdx,r12
  429015:	mov    rcx,rax
  429018:	mov    rsi,rax
  42901b:	call   0x427d80
  429020:	lea    r14d,[rax+0x30]
  429024:	mov    r13,rbp
  429027:	mov    rdx,r13
  42902a:	mov    rcx,r12
  42902d:	call   0x429c00
  429032:	test   eax,eax
  429034:	jg     0x428fe0
  429036:	cmp    r14d,0x39
  42903a:	je     0x429236
  429040:	add    r14d,0x1
  429044:	mov    r15d,0x20
  42904a:	mov    BYTE PTR [rbx],r14b
  42904d:	mov    r14,rdi
  429050:	add    rbx,0x1
  429054:	mov    rdi,r13
  429057:	jmp    0x428ce4
  42905c:	mov    rcx,rsi
  42905f:	mov    edx,0x1
  429064:	call   0x429ae0
  429069:	mov    rdx,r12
  42906c:	mov    rcx,rax
  42906f:	mov    rsi,rax
  429072:	call   0x429c00
  429077:	cmp    eax,0x0
  42907a:	jg     0x428cad
  429080:	jne    0x42908c
  429082:	and    bpl,0x1
  429086:	jne    0x428cad
  42908c:	cmp    DWORD PTR [rsi+0x14],0x1
  429090:	mov    r15d,0x10
  429096:	jg     0x4290a3
  429098:	jmp    0x42932d
  42909d:	nop    DWORD PTR [rax]
  4290a0:	mov    rbx,rax
  4290a3:	cmp    BYTE PTR [rbx-0x1],0x30
  4290a7:	lea    rax,[rbx-0x1]
  4290ab:	je     0x4290a0
  4290ad:	jmp    0x428ce4
  4290b2:	mov    ebx,DWORD PTR [rsp+0x50]
  4290b6:	mov    DWORD PTR [rsp+0x9c],0x0
  4290c1:	xor    eax,eax
  4290c3:	sub    ebx,DWORD PTR [rsp+0x68]
  4290c7:	jmp    0x42872a
  4290cc:	mov    QWORD PTR [rsp+0x48],r8
  4290d1:	add    ecx,0x1
  4290d4:	mov    BYTE PTR [r8],0x30
  4290d8:	mov    rdx,r8
  4290db:	mov    eax,0x31
  4290e0:	jmp    0x428fa0
  4290e5:	mov    ecx,DWORD PTR [rdi+0x8]
  4290e8:	call   0x4295d0
  4290ed:	lea    rcx,[rax+0x10]
  4290f1:	mov    rbx,rax
  4290f4:	movsxd rax,DWORD PTR [rdi+0x14]
  4290f8:	lea    rdx,[rdi+0x10]
  4290fc:	lea    r8,[rax*4+0x8]
  429104:	call   0x42a668
  429109:	mov    edx,0x1
  42910e:	mov    rcx,rbx
  429111:	call   0x429ae0
  429116:	mov    r13,rax
  429119:	jmp    0x428a4d
  42911e:	addsd  xmm0,xmm0
  429122:	ucomisd xmm0,xmm2
  429126:	ja     0x429211
  42912c:	ucomisd xmm2,xmm0
  429130:	jp     0x429138
  429132:	je     0x428f67
  429138:	movzx  eax,BYTE PTR [rbx-0x1]
  42913c:	mov    ecx,DWORD PTR [rsp+0x30]
  429140:	mov    r15d,0x10
  429146:	jmp    0x428f57
  42914b:	mov    r14,rdi
  42914e:	mov    r12,QWORD PTR [rsp+0x40]
  429153:	mov    rdi,r13
  429156:	jmp    0x428c8e
  42915b:	mov    eax,DWORD PTR [rsp+0x68]
  42915f:	test   eax,eax
  429161:	je     0x42856a
  429167:	mov    r9d,DWORD PTR [rsp+0x8c]
  42916f:	test   r9d,r9d
  429172:	jle    0x4285ce
  429178:	movsd  xmm0,QWORD PTR [rip+0x1ce80]        # 0x446000
  429180:	mov    ecx,0xffffffff
  429185:	movsd  xmm1,QWORD PTR [rip+0x1ce7b]        # 0x446008
  42918d:	mulsd  xmm0,xmm4
  429191:	mulsd  xmm1,xmm0
  429195:	addsd  xmm1,QWORD PTR [rip+0x1ce73]        # 0x446010
  42919d:	movq   rdx,xmm1
  4291a2:	movq   rax,xmm1
  4291a7:	shr    rdx,0x20
  4291ab:	mov    eax,eax
  4291ad:	sub    edx,0x3400000
  4291b3:	shl    rdx,0x20
  4291b7:	or     rax,rdx
  4291ba:	jmp    0x428372
  4291bf:	cmp    ebp,0x39
  4291c2:	mov    r12,QWORD PTR [rsp+0x40]
  4291c7:	mov    rax,rbx
  4291ca:	je     0x429239
  4291cc:	add    ebp,0x1
  4291cf:	mov    r14,rdi
  4291d2:	add    rbx,0x1
  4291d6:	mov    BYTE PTR [rax],bpl
  4291d9:	mov    rdi,r13
  4291dc:	mov    r15d,0x20
  4291e2:	jmp    0x428ce4
  4291e7:	cmp    DWORD PTR [rsi+0x18],0x0
  4291eb:	jne    0x428fd1
  4291f1:	test   eax,eax
  4291f3:	jg     0x429289
  4291f9:	xor    r15d,r15d
  4291fc:	cmp    DWORD PTR [rsi+0x14],0x1
  429200:	jle    0x429308
  429206:	mov    r15d,0x10
  42920c:	jmp    0x42904a
  429211:	movzx  eax,BYTE PTR [rbx-0x1]
  429215:	mov    ecx,DWORD PTR [rsp+0x30]
  429219:	mov    r8,QWORD PTR [rsp+0x48]
  42921e:	jmp    0x428f90
  429223:	mov    eax,DWORD PTR [rsi+0x18]
  429226:	test   eax,eax
  429228:	jne    0x428cad
  42922e:	xor    r15d,r15d
  429231:	jmp    0x4290a3
  429236:	mov    rax,rbx
  429239:	mov    r14,rdi
  42923c:	add    rbx,0x1
  429240:	mov    rdi,r13
  429243:	mov    BYTE PTR [rax],0x39
  429246:	mov    edx,0x39
  42924b:	mov    rcx,QWORD PTR [rsp+0x48]
  429250:	jmp    0x428cd0
  429255:	cmp    ebp,0x39
  429258:	mov    r12,QWORD PTR [rsp+0x40]
  42925d:	mov    rax,rbx
  429260:	je     0x429236
  429262:	test   r14d,r14d
  429265:	jle    0x429340
  42926b:	mov    ebp,r15d
  42926e:	mov    r15d,0x20
  429274:	add    ebp,0x31
  429277:	mov    r14,rdi
  42927a:	add    rbx,0x1
  42927e:	mov    BYTE PTR [rax],bpl
  429281:	mov    rdi,r13
  429284:	jmp    0x428ce4
  429289:	mov    rcx,rsi
  42928c:	mov    edx,0x1
  429291:	call   0x429ae0
  429296:	mov    rdx,r12
  429299:	mov    rcx,rax
  42929c:	mov    rsi,rax
  42929f:	call   0x429c00
  4292a4:	cmp    eax,0x0
  4292a7:	jle    0x42931a
  4292a9:	cmp    ebp,0x39
  4292ac:	je     0x429236
  4292ae:	lea    r14d,[rbp+0x1]
  4292b2:	mov    r15d,0x20
  4292b8:	jmp    0x4291fc
  4292bd:	mov    r15d,0x10
  4292c3:	jmp    0x428f57
  4292c8:	xor    r8d,r8d
  4292cb:	mov    rcx,rdi
  4292ce:	mov    edx,0xa
  4292d3:	call   0x429750
  4292d8:	mov    rdi,rax
  4292db:	mov    eax,DWORD PTR [rsp+0x8c]
  4292e2:	test   eax,eax
  4292e4:	jg     0x4292f8
  4292e6:	cmp    DWORD PTR [rsp+0x120],0x2
  4292ee:	mov    DWORD PTR [rsp+0x68],eax
  4292f2:	jg     0x42887c
  4292f8:	mov    eax,DWORD PTR [rsp+0x8c]
  4292ff:	mov    DWORD PTR [rsp+0x68],eax
  429303:	jmp    0x428a2f
  429308:	cmp    DWORD PTR [rsi+0x18],0x0
  42930c:	mov    eax,0x10
  429311:	cmovne r15d,eax
  429315:	jmp    0x42904a
  42931a:	jne    0x429322
  42931c:	test   bpl,0x1
  429320:	jne    0x4292a9
  429322:	mov    r15d,0x20
  429328:	jmp    0x4291fc
  42932d:	cmp    DWORD PTR [rsi+0x18],0x1
  429331:	sbb    r15d,r15d
  429334:	not    r15d
  429337:	and    r15d,0x10
  42933b:	jmp    0x4290a3
  429340:	cmp    DWORD PTR [rsi+0x14],0x1
  429344:	mov    r15d,0x10
  42934a:	jg     0x429277
  429350:	cmp    DWORD PTR [rsi+0x18],0x1
  429354:	sbb    r15d,r15d
  429357:	not    r15d
  42935a:	and    r15d,0x10
  42935e:	jmp    0x429277
  429363:	xor    eax,eax
  429365:	jmp    0x428047
  42936a:	nop
  42936b:	nop
  42936c:	nop
  42936d:	nop
  42936e:	nop
  42936f:	nop
  429370:	push   rbp
  429371:	push   rdi
  429372:	push   rsi
  429373:	push   rbx
  429374:	mov    rsi,rcx
  429377:	lea    r10,[rcx+0x18]
  42937b:	movsxd rcx,DWORD PTR [rcx+0x14]
  42937f:	mov    eax,edx
  429381:	sar    eax,0x5
  429384:	cmp    eax,ecx
  429386:	jge    0x429410
  42938c:	cdqe   
  42938e:	and    edx,0x1f
  429391:	lea    rbx,[r10+rcx*4]
  429395:	lea    rdi,[r10+rax*4]
  429399:	je     0x429423
  42939f:	mov    r9d,DWORD PTR [rdi]
  4293a2:	lea    r8,[rdi+0x4]
  4293a6:	mov    ebp,0x20
  4293ab:	mov    ecx,edx
  4293ad:	sub    ebp,edx
  4293af:	shr    r9d,cl
  4293b2:	cmp    rbx,r8
  4293b5:	jbe    0x429468
  4293bb:	mov    r11,r10
  4293be:	xchg   ax,ax
  4293c0:	mov    eax,DWORD PTR [r8]
  4293c3:	mov    ecx,ebp
  4293c5:	add    r11,0x4
  4293c9:	add    r8,0x4
  4293cd:	shl    eax,cl
  4293cf:	mov    ecx,edx
  4293d1:	or     eax,r9d
  4293d4:	mov    DWORD PTR [r11-0x4],eax
  4293d8:	mov    r9d,DWORD PTR [r8-0x4]
  4293dc:	shr    r9d,cl
  4293df:	cmp    rbx,r8
  4293e2:	ja     0x4293c0
  4293e4:	sub    rbx,rdi
  4293e7:	lea    rax,[rbx-0x5]
  4293eb:	shr    rax,0x2
  4293ef:	lea    rax,[r10+rax*4+0x4]
  4293f4:	test   r9d,r9d
  4293f7:	mov    DWORD PTR [rax],r9d
  4293fa:	je     0x429400
  4293fc:	add    rax,0x4
  429400:	sub    rax,r10
  429403:	shr    rax,0x2
  429407:	jmp    0x42945c
  429409:	nop    DWORD PTR [rax+0x0]
  429410:	mov    DWORD PTR [rsi+0x14],0x0
  429417:	mov    DWORD PTR [rsi+0x18],0x0
  42941e:	pop    rbx
  42941f:	pop    rsi
  429420:	pop    rdi
  429421:	pop    rbp
  429422:	ret    
  429423:	cmp    rbx,rdi
  429426:	mov    rdx,r10
  429429:	mov    rax,rdi
  42942c:	jbe    0x429410
  42942e:	xchg   ax,ax
  429430:	add    rax,0x4
  429434:	mov    r8d,DWORD PTR [rax-0x4]
  429438:	add    rdx,0x4
  42943c:	cmp    rbx,rax
  42943f:	mov    DWORD PTR [rdx-0x4],r8d
  429443:	ja     0x429430
  429445:	not    rdi
  429448:	lea    rax,[rdi+rbx*1]
  42944c:	shr    rax,0x2
  429450:	lea    rax,[rax*4+0x4]
  429458:	shr    rax,0x2
  42945c:	test   eax,eax
  42945e:	mov    DWORD PTR [rsi+0x14],eax
  429461:	je     0x429417
  429463:	pop    rbx
  429464:	pop    rsi
  429465:	pop    rdi
  429466:	pop    rbp
  429467:	ret    
  429468:	mov    rax,r10
  42946b:	jmp    0x4293f4
  42946d:	nop    DWORD PTR [rax]
  429470:	movsxd rax,DWORD PTR [rcx+0x14]
  429474:	lea    rdx,[rcx+0x18]
  429478:	lea    r8,[rdx+rax*4]
  42947c:	cmp    rdx,r8
  42947f:	jae    0x4294ab
  429481:	mov    ecx,DWORD PTR [rcx+0x18]
  429484:	xor    eax,eax
  429486:	test   ecx,ecx
  429488:	je     0x429496
  42948a:	jmp    0x4294a4
  42948c:	nop    DWORD PTR [rax+0x0]
  429490:	mov    ecx,DWORD PTR [rdx]
  429492:	test   ecx,ecx
  429494:	jne    0x4294a4
  429496:	add    rdx,0x4
  42949a:	add    eax,0x20
  42949d:	cmp    r8,rdx
  4294a0:	ja     0x429490
  4294a2:	repz ret 
  4294a4:	tzcnt  ecx,ecx
  4294a8:	add    eax,ecx
  4294aa:	ret    
  4294ab:	xor    eax,eax
  4294ad:	ret    
  4294ae:	nop
  4294af:	nop
  4294b0:	push   rsi
  4294b1:	push   rbx
  4294b2:	sub    rsp,0x28
  4294b6:	mov    eax,DWORD PTR [rip+0x27694]        # 0x450b50
  4294bc:	movsxd rsi,ecx
  4294bf:	cmp    eax,0x2
  4294c2:	je     0x42952d
  4294c4:	test   eax,eax
  4294c6:	je     0x4294f2
  4294c8:	cmp    eax,0x1
  4294cb:	jne    0x4294eb
  4294cd:	mov    rbx,QWORD PTR [rip+0x281f4]        # 0x4516c8
  4294d4:	mov    ecx,0x1
  4294d9:	call   rbx
  4294db:	mov    eax,DWORD PTR [rip+0x2766f]        # 0x450b50
  4294e1:	cmp    eax,0x1
  4294e4:	je     0x4294d4
  4294e6:	cmp    eax,0x2
  4294e9:	je     0x42952d
  4294eb:	add    rsp,0x28
  4294ef:	pop    rbx
  4294f0:	pop    rsi
  4294f1:	ret    
  4294f2:	mov    al,0x1
  4294f4:	xchg   DWORD PTR [rip+0x27656],eax        # 0x450b50
  4294fa:	test   eax,eax
  4294fc:	jne    0x429550
  4294fe:	lea    rcx,[rip+0x2767b]        # 0x450b80
  429505:	mov    rbx,QWORD PTR [rip+0x2812c]        # 0x451638
  42950c:	call   rbx
  42950e:	lea    rcx,[rip+0x27693]        # 0x450ba8
  429515:	call   rbx
  429517:	lea    rcx,[rip+0x62]        # 0x429580
  42951e:	call   0x4242b0
  429523:	mov    DWORD PTR [rip+0x27623],0x2        # 0x450b50
  42952d:	lea    rdx,[rsi+rsi*4]
  429531:	lea    rax,[rip+0x27648]        # 0x450b80
  429538:	lea    rcx,[rax+rdx*8]
  42953c:	mov    rax,QWORD PTR [rip+0x28055]        # 0x451598
  429543:	add    rsp,0x28
  429547:	pop    rbx
  429548:	pop    rsi
  429549:	rex.W jmp rax
  42954c:	nop    DWORD PTR [rax+0x0]
  429550:	cmp    eax,0x2
  429553:	je     0x429570
  429555:	mov    eax,DWORD PTR [rip+0x275f5]        # 0x450b50
  42955b:	cmp    eax,0x1
  42955e:	je     0x4294cd
  429564:	jmp    0x4294e6
  429566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429570:	mov    DWORD PTR [rip+0x275d6],0x2        # 0x450b50
  42957a:	jmp    0x42952d
  42957c:	nop    DWORD PTR [rax+0x0]
  429580:	push   rbx
  429581:	sub    rsp,0x20
  429585:	mov    eax,0x3
  42958a:	xchg   DWORD PTR [rip+0x275c0],eax        # 0x450b50
  429590:	cmp    eax,0x2
  429593:	je     0x4295a0
  429595:	add    rsp,0x20
  429599:	pop    rbx
  42959a:	ret    
  42959b:	nop    DWORD PTR [rax+rax*1+0x0]
  4295a0:	mov    rbx,QWORD PTR [rip+0x27fe9]        # 0x451590
  4295a7:	lea    rcx,[rip+0x275d2]        # 0x450b80
  4295ae:	call   rbx
  4295b0:	lea    rcx,[rip+0x275f1]        # 0x450ba8
  4295b7:	mov    rax,rbx
  4295ba:	add    rsp,0x20
  4295be:	pop    rbx
  4295bf:	rex.W jmp rax
  4295c2:	nop    DWORD PTR [rax+0x0]
  4295c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295d0:	push   rdi
  4295d1:	push   rsi
  4295d2:	push   rbx
  4295d3:	sub    rsp,0x20
  4295d7:	mov    ebx,ecx
  4295d9:	xor    ecx,ecx
  4295db:	call   0x4294b0
  4295e0:	cmp    ebx,0x9
  4295e3:	jg     0x429620
  4295e5:	lea    rdx,[rip+0x27514]        # 0x450b00
  4295ec:	movsxd rcx,ebx
  4295ef:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4295f3:	test   rdi,rdi
  4295f6:	je     0x429680
  4295fc:	cmp    DWORD PTR [rip+0x2754d],0x2        # 0x450b50
  429603:	mov    r8,QWORD PTR [rdi]
  429606:	mov    QWORD PTR [rdx+rcx*8],r8
  42960a:	jne    0x429666
  42960c:	lea    rcx,[rip+0x2756d]        # 0x450b80
  429613:	call   QWORD PTR [rip+0x2802f]        # 0x451648
  429619:	jmp    0x429666
  42961b:	nop    DWORD PTR [rax+rax*1+0x0]
  429620:	mov    eax,0x1
  429625:	mov    ecx,ebx
  429627:	shl    eax,cl
  429629:	mov    esi,eax
  42962b:	lea    eax,[rax-0x1]
  42962e:	cdqe   
  429630:	lea    rdx,[rax*4+0x27]
  429638:	shr    rdx,0x3
  42963c:	mov    edx,edx
  42963e:	lea    rcx,[rdx*8+0x0]
  429646:	call   0x42a678
  42964b:	test   rax,rax
  42964e:	mov    rdi,rax
  429651:	je     0x4296da
  429657:	cmp    DWORD PTR [rip+0x274f2],0x2        # 0x450b50
  42965e:	mov    DWORD PTR [rdi+0x8],ebx
  429661:	mov    DWORD PTR [rdi+0xc],esi
  429664:	je     0x42960c
  429666:	mov    DWORD PTR [rdi+0x14],0x0
  42966d:	mov    DWORD PTR [rdi+0x10],0x0
  429674:	mov    rax,rdi
  429677:	add    rsp,0x20
  42967b:	pop    rbx
  42967c:	pop    rsi
  42967d:	pop    rdi
  42967e:	ret    
  42967f:	nop
  429680:	mov    ecx,ebx
  429682:	mov    eax,0x1
  429687:	mov    rdi,QWORD PTR [rip+0x5d62]        # 0x42f3f0
  42968e:	shl    eax,cl
  429690:	lea    rcx,[rip+0x26b69]        # 0x450200
  429697:	lea    edx,[rax-0x1]
  42969a:	mov    esi,eax
  42969c:	mov    rax,rdi
  42969f:	movsxd rdx,edx
  4296a2:	sub    rax,rcx
  4296a5:	lea    rdx,[rdx*4+0x27]
  4296ad:	mov    rcx,rax
  4296b0:	sar    rcx,0x3
  4296b4:	shr    rdx,0x3
  4296b8:	mov    edx,edx
  4296ba:	add    rcx,rdx
  4296bd:	cmp    rcx,0x120
  4296c4:	ja     0x42963e
  4296ca:	lea    rdx,[rdi+rdx*8]
  4296ce:	mov    QWORD PTR [rip+0x5d1b],rdx        # 0x42f3f0
  4296d5:	jmp    0x429657
  4296da:	xor    eax,eax
  4296dc:	jmp    0x429677
  4296de:	xchg   ax,ax
  4296e0:	push   rbx
  4296e1:	sub    rsp,0x20
  4296e5:	test   rcx,rcx
  4296e8:	je     0x429719
  4296ea:	cmp    DWORD PTR [rcx+0x8],0x9
  4296ee:	jg     0x429720
  4296f0:	mov    rbx,rcx
  4296f3:	xor    ecx,ecx
  4296f5:	call   0x4294b0
  4296fa:	movsxd rdx,DWORD PTR [rbx+0x8]
  4296fe:	lea    rax,[rip+0x273fb]        # 0x450b00
  429705:	cmp    DWORD PTR [rip+0x27444],0x2        # 0x450b50
  42970c:	mov    rcx,QWORD PTR [rax+rdx*8]
  429710:	mov    QWORD PTR [rax+rdx*8],rbx
  429714:	mov    QWORD PTR [rbx],rcx
  429717:	je     0x429730
  429719:	add    rsp,0x20
  42971d:	pop    rbx
  42971e:	ret    
  42971f:	nop
  429720:	add    rsp,0x20
  429724:	pop    rbx
  429725:	jmp    0x42a6c8
  42972a:	nop    WORD PTR [rax+rax*1+0x0]
  429730:	mov    rax,QWORD PTR [rip+0x27f11]        # 0x451648
  429737:	lea    rcx,[rip+0x27442]        # 0x450b80
  42973e:	add    rsp,0x20
  429742:	pop    rbx
  429743:	rex.W jmp rax
  429746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429750:	push   rbp
  429751:	push   rdi
  429752:	push   rsi
  429753:	push   rbx
  429754:	sub    rsp,0x28
  429758:	mov    esi,DWORD PTR [rcx+0x14]
  42975b:	xor    r9d,r9d
  42975e:	lea    r10,[rcx+0x18]
  429762:	mov    rdi,rcx
  429765:	movsxd rbx,r8d
  429768:	movsxd rdx,edx
  42976b:	nop    DWORD PTR [rax+rax*1+0x0]
  429770:	mov    eax,DWORD PTR [r10+r9*4]
  429774:	imul   rax,rdx
  429778:	add    rax,rbx
  42977b:	mov    rbx,rax
  42977e:	mov    DWORD PTR [r10+r9*4],eax
  429782:	add    r9,0x1
  429786:	shr    rbx,0x20
  42978a:	cmp    esi,r9d
  42978d:	jg     0x429770
  42978f:	test   rbx,rbx
  429792:	mov    rax,rdi
  429795:	je     0x4297ac
  429797:	cmp    esi,DWORD PTR [rdi+0xc]
  42979a:	jge    0x4297b5
  42979c:	movsxd rax,esi
  42979f:	add    esi,0x1
  4297a2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4297a6:	mov    DWORD PTR [rdi+0x14],esi
  4297a9:	mov    rax,rdi
  4297ac:	add    rsp,0x28
  4297b0:	pop    rbx
  4297b1:	pop    rsi
  4297b2:	pop    rdi
  4297b3:	pop    rbp
  4297b4:	ret    
  4297b5:	mov    eax,DWORD PTR [rdi+0x8]
  4297b8:	lea    ecx,[rax+0x1]
  4297bb:	call   0x4295d0
  4297c0:	test   rax,rax
  4297c3:	mov    rbp,rax
  4297c6:	je     0x4297fe
  4297c8:	lea    rcx,[rax+0x10]
  4297cc:	movsxd rax,DWORD PTR [rdi+0x14]
  4297d0:	lea    rdx,[rdi+0x10]
  4297d4:	lea    r8,[rax*4+0x8]
  4297dc:	call   0x42a668
  4297e1:	mov    rcx,rdi
  4297e4:	mov    rdi,rbp
  4297e7:	call   0x4296e0
  4297ec:	movsxd rax,esi
  4297ef:	add    esi,0x1
  4297f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4297f6:	mov    DWORD PTR [rdi+0x14],esi
  4297f9:	mov    rax,rdi
  4297fc:	jmp    0x4297ac
  4297fe:	xor    eax,eax
  429800:	jmp    0x4297ac
  429802:	nop    DWORD PTR [rax+0x0]
  429806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429810:	push   rbx
  429811:	sub    rsp,0x20
  429815:	mov    ebx,ecx
  429817:	mov    ecx,0x1
  42981c:	call   0x4295d0
  429821:	test   rax,rax
  429824:	je     0x429830
  429826:	mov    DWORD PTR [rax+0x18],ebx
  429829:	mov    DWORD PTR [rax+0x14],0x1
  429830:	add    rsp,0x20
  429834:	pop    rbx
  429835:	ret    
  429836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429840:	push   r14
  429842:	push   r13
  429844:	push   r12
  429846:	push   rbp
  429847:	push   rdi
  429848:	push   rsi
  429849:	push   rbx
  42984a:	sub    rsp,0x20
  42984e:	movsxd r13,DWORD PTR [rcx+0x14]
  429852:	movsxd rbx,DWORD PTR [rdx+0x14]
  429856:	mov    r12,rcx
  429859:	mov    r14,rdx
  42985c:	cmp    r13d,ebx
  42985f:	jl     0x429961
  429865:	mov    eax,ebx
  429867:	movsxd rbx,r13d
  42986a:	movsxd r13,eax
  42986d:	xor    eax,eax
  42986f:	lea    esi,[rbx+r13*1]
  429873:	cmp    esi,DWORD PTR [r12+0xc]
  429878:	setg   al
  42987b:	add    eax,DWORD PTR [r12+0x8]
  429880:	mov    ecx,eax
  429882:	call   0x4295d0
  429887:	test   rax,rax
  42988a:	je     0x42996c
  429890:	lea    rdi,[rax+0x18]
  429894:	movsxd rdx,esi
  429897:	lea    rbp,[rdi+rdx*4]
  42989b:	mov    r8,rdi
  42989e:	cmp    rdi,rbp
  4298a1:	jae    0x4298b3
  4298a3:	mov    DWORD PTR [r8],0x0
  4298aa:	add    r8,0x4
  4298ae:	cmp    rbp,r8
  4298b1:	ja     0x4298a3
  4298b3:	lea    rdx,[r14+0x18]
  4298b7:	add    r12,0x18
  4298bb:	lea    rbx,[r12+rbx*4]
  4298bf:	lea    r13,[rdx+r13*4]
  4298c3:	cmp    rdx,r13
  4298c6:	jae    0x429929
  4298c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4298d0:	add    rdx,0x4
  4298d4:	mov    r11d,DWORD PTR [rdx-0x4]
  4298d8:	test   r11d,r11d
  4298db:	je     0x429920
  4298dd:	mov    r9,rdi
  4298e0:	mov    r8,r12
  4298e3:	xor    r10d,r10d
  4298e6:	jmp    0x4298f3
  4298e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4298f0:	mov    r9,r14
  4298f3:	add    r8,0x4
  4298f7:	mov    ecx,DWORD PTR [r8-0x4]
  4298fb:	mov    r14d,DWORD PTR [r9]
  4298fe:	imul   rcx,r11
  429902:	add    rcx,r14
  429905:	lea    r14,[r9+0x4]
  429909:	add    rcx,r10
  42990c:	mov    r10,rcx
  42990f:	mov    DWORD PTR [r14-0x4],ecx
  429913:	shr    r10,0x20
  429917:	cmp    rbx,r8
  42991a:	ja     0x4298f0
  42991c:	mov    DWORD PTR [r9+0x4],r10d
  429920:	add    rdi,0x4
  429924:	cmp    r13,rdx
  429927:	ja     0x4298d0
  429929:	test   esi,esi
  42992b:	jle    0x42994f
  42992d:	mov    r8d,DWORD PTR [rbp-0x4]
  429931:	lea    rdx,[rbp-0x4]
  429935:	test   r8d,r8d
  429938:	je     0x42994a
  42993a:	jmp    0x42994f
  42993c:	nop    DWORD PTR [rax+0x0]
  429940:	sub    rdx,0x4
  429944:	mov    ecx,DWORD PTR [rdx]
  429946:	test   ecx,ecx
  429948:	jne    0x42994f
  42994a:	sub    esi,0x1
  42994d:	jne    0x429940
  42994f:	mov    DWORD PTR [rax+0x14],esi
  429952:	add    rsp,0x20
  429956:	pop    rbx
  429957:	pop    rsi
  429958:	pop    rdi
  429959:	pop    rbp
  42995a:	pop    r12
  42995c:	pop    r13
  42995e:	pop    r14
  429960:	ret    
  429961:	mov    r12,rdx
  429964:	mov    r14,rcx
  429967:	jmp    0x42986d
  42996c:	xor    eax,eax
  42996e:	jmp    0x429952
  429970:	push   rbp
  429971:	push   rdi
  429972:	push   rsi
  429973:	push   rbx
  429974:	sub    rsp,0x28
  429978:	mov    eax,edx
  42997a:	mov    rbp,rcx
  42997d:	mov    ebx,edx
  42997f:	and    eax,0x3
  429982:	jne    0x429a10
  429988:	sar    ebx,0x2
  42998b:	mov    rax,rbp
  42998e:	test   ebx,ebx
  429990:	je     0x4299dc
  429992:	mov    rdi,QWORD PTR [rip+0x26827]        # 0x4501c0
  429999:	test   rdi,rdi
  42999c:	jne    0x4299b2
  42999e:	jmp    0x429a5d
  4299a3:	sar    ebx,1
  4299a5:	je     0x4299d9
  4299a7:	mov    rsi,QWORD PTR [rdi]
  4299aa:	test   rsi,rsi
  4299ad:	je     0x4299e5
  4299af:	mov    rdi,rsi
  4299b2:	test   bl,0x1
  4299b5:	je     0x4299a3
  4299b7:	mov    rdx,rdi
  4299ba:	mov    rcx,rbp
  4299bd:	call   0x429840
  4299c2:	test   rax,rax
  4299c5:	mov    rsi,rax
  4299c8:	je     0x429a33
  4299ca:	mov    rcx,rbp
  4299cd:	mov    rbp,rsi
  4299d0:	call   0x4296e0
  4299d5:	sar    ebx,1
  4299d7:	jne    0x4299a7
  4299d9:	mov    rax,rbp
  4299dc:	add    rsp,0x28
  4299e0:	pop    rbx
  4299e1:	pop    rsi
  4299e2:	pop    rdi
  4299e3:	pop    rbp
  4299e4:	ret    
  4299e5:	mov    ecx,0x1
  4299ea:	call   0x4294b0
  4299ef:	mov    rsi,QWORD PTR [rdi]
  4299f2:	test   rsi,rsi
  4299f5:	je     0x429a3e
  4299f7:	cmp    DWORD PTR [rip+0x27152],0x2        # 0x450b50
  4299fe:	jne    0x4299af
  429a00:	lea    rcx,[rip+0x271a1]        # 0x450ba8
  429a07:	call   QWORD PTR [rip+0x27c3b]        # 0x451648
  429a0d:	jmp    0x4299af
  429a0f:	nop
  429a10:	sub    eax,0x1
  429a13:	lea    rdx,[rip+0x1c626]        # 0x446040
  429a1a:	xor    r8d,r8d
  429a1d:	cdqe   
  429a1f:	mov    edx,DWORD PTR [rdx+rax*4]
  429a22:	call   0x429750
  429a27:	test   rax,rax
  429a2a:	mov    rbp,rax
  429a2d:	jne    0x429988
  429a33:	xor    eax,eax
  429a35:	add    rsp,0x28
  429a39:	pop    rbx
  429a3a:	pop    rsi
  429a3b:	pop    rdi
  429a3c:	pop    rbp
  429a3d:	ret    
  429a3e:	mov    rdx,rdi
  429a41:	mov    rcx,rdi
  429a44:	call   0x429840
  429a49:	test   rax,rax
  429a4c:	mov    rsi,rax
  429a4f:	mov    QWORD PTR [rdi],rax
  429a52:	je     0x429a33
  429a54:	mov    QWORD PTR [rax],0x0
  429a5b:	jmp    0x4299f7
  429a5d:	mov    ecx,0x1
  429a62:	call   0x4294b0
  429a67:	mov    rdi,QWORD PTR [rip+0x26752]        # 0x4501c0
  429a6e:	test   rdi,rdi
  429a71:	je     0x429a92
  429a73:	cmp    DWORD PTR [rip+0x270d6],0x2        # 0x450b50
  429a7a:	jne    0x4299b2
  429a80:	lea    rcx,[rip+0x27121]        # 0x450ba8
  429a87:	call   QWORD PTR [rip+0x27bbb]        # 0x451648
  429a8d:	jmp    0x4299b2
  429a92:	mov    ecx,0x1
  429a97:	call   0x4295d0
  429a9c:	test   rax,rax
  429a9f:	mov    rdi,rax
  429aa2:	je     0x429ac2
  429aa4:	mov    DWORD PTR [rax+0x18],0x271
  429aab:	mov    DWORD PTR [rax+0x14],0x1
  429ab2:	mov    QWORD PTR [rip+0x26707],rax        # 0x4501c0
  429ab9:	mov    QWORD PTR [rax],0x0
  429ac0:	jmp    0x429a73
  429ac2:	mov    QWORD PTR [rip+0x266f3],0x0        # 0x4501c0
  429acd:	xor    eax,eax
  429acf:	jmp    0x429a35
  429ad4:	xchg   ax,ax
  429ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429ae0:	push   r13
  429ae2:	push   r12
  429ae4:	push   rbp
  429ae5:	push   rdi
  429ae6:	push   rsi
  429ae7:	push   rbx
  429ae8:	sub    rsp,0x28
  429aec:	mov    rdi,rcx
  429aef:	mov    ebp,edx
  429af1:	mov    esi,edx
  429af3:	mov    r12d,DWORD PTR [rdi+0x14]
  429af7:	sar    ebp,0x5
  429afa:	mov    eax,DWORD PTR [rdi+0xc]
  429afd:	mov    ecx,DWORD PTR [rcx+0x8]
  429b00:	add    r12d,ebp
  429b03:	lea    ebx,[r12+0x1]
  429b08:	cmp    ebx,eax
  429b0a:	jle    0x429b19
  429b0c:	nop    DWORD PTR [rax+0x0]
  429b10:	add    eax,eax
  429b12:	add    ecx,0x1
  429b15:	cmp    ebx,eax
  429b17:	jg     0x429b10
  429b19:	call   0x4295d0
  429b1e:	test   rax,rax
  429b21:	mov    r13,rax
  429b24:	je     0x429bef
  429b2a:	test   ebp,ebp
  429b2c:	lea    r8,[rax+0x18]
  429b30:	jle    0x429be7
  429b36:	lea    eax,[rbp-0x1]
  429b39:	lea    r9,[r8+rax*4+0x4]
  429b3e:	xchg   ax,ax
  429b40:	add    r8,0x4
  429b44:	mov    DWORD PTR [r8-0x4],0x0
  429b4c:	cmp    r8,r9
  429b4f:	jne    0x429b40
  429b51:	movsxd rax,DWORD PTR [rdi+0x14]
  429b55:	lea    r8,[rdi+0x18]
  429b59:	mov    edx,esi
  429b5b:	and    edx,0x1f
  429b5e:	lea    rbp,[r8+rax*4]
  429b62:	je     0x429bd0
  429b64:	mov    eax,0x20
  429b69:	xor    r11d,r11d
  429b6c:	sub    eax,edx
  429b6e:	jmp    0x429b73
  429b70:	mov    r9,rsi
  429b73:	mov    r10d,DWORD PTR [r8]
  429b76:	mov    ecx,edx
  429b78:	lea    rsi,[r9+0x4]
  429b7c:	add    r8,0x4
  429b80:	shl    r10d,cl
  429b83:	mov    ecx,eax
  429b85:	or     r10d,r11d
  429b88:	mov    DWORD PTR [rsi-0x4],r10d
  429b8c:	mov    r11d,DWORD PTR [r8-0x4]
  429b90:	shr    r11d,cl
  429b93:	cmp    rbp,r8
  429b96:	ja     0x429b70
  429b98:	add    r12d,0x2
  429b9c:	test   r11d,r11d
  429b9f:	mov    DWORD PTR [r9+0x4],r11d
  429ba3:	cmovne ebx,r12d
  429ba7:	sub    ebx,0x1
  429baa:	mov    rcx,rdi
  429bad:	mov    DWORD PTR [r13+0x14],ebx
  429bb1:	call   0x4296e0
  429bb6:	mov    rax,r13
  429bb9:	add    rsp,0x28
  429bbd:	pop    rbx
  429bbe:	pop    rsi
  429bbf:	pop    rdi
  429bc0:	pop    rbp
  429bc1:	pop    r12
  429bc3:	pop    r13
  429bc5:	ret    
  429bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429bd0:	add    r8,0x4
  429bd4:	mov    edx,DWORD PTR [r8-0x4]
  429bd8:	add    r9,0x4
  429bdc:	cmp    rbp,r8
  429bdf:	mov    DWORD PTR [r9-0x4],edx
  429be3:	ja     0x429bd0
  429be5:	jmp    0x429ba7
  429be7:	mov    r9,r8
  429bea:	jmp    0x429b51
  429bef:	xor    eax,eax
  429bf1:	jmp    0x429bb9
  429bf3:	nop    DWORD PTR [rax]
  429bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c00:	movsxd r8,DWORD PTR [rdx+0x14]
  429c04:	mov    eax,DWORD PTR [rcx+0x14]
  429c07:	sub    eax,r8d
  429c0a:	test   eax,eax
  429c0c:	jne    0x429c42
  429c0e:	shl    r8,0x2
  429c12:	add    rcx,0x18
  429c16:	lea    rax,[rcx+r8*1]
  429c1a:	lea    rdx,[rdx+r8*1+0x18]
  429c1f:	jmp    0x429c26
  429c21:	cmp    rcx,rax
  429c24:	jae    0x429c40
  429c26:	sub    rdx,0x4
  429c2a:	sub    rax,0x4
  429c2e:	mov    r9d,DWORD PTR [rdx]
  429c31:	cmp    DWORD PTR [rax],r9d
  429c34:	je     0x429c21
  429c36:	sbb    eax,eax
  429c38:	or     eax,0x1
  429c3b:	ret    
  429c3c:	nop    DWORD PTR [rax+0x0]
  429c40:	xor    eax,eax
  429c42:	repz ret 
  429c44:	xchg   ax,ax
  429c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c50:	push   rdi
  429c51:	push   rsi
  429c52:	push   rbx
  429c53:	sub    rsp,0x20
  429c57:	mov    rsi,rcx
  429c5a:	mov    rdi,rdx
  429c5d:	call   0x429c00
  429c62:	test   eax,eax
  429c64:	je     0x429d50
  429c6a:	mov    ebx,0x0
  429c6f:	js     0x429d72
  429c75:	mov    ecx,DWORD PTR [rsi+0x8]
  429c78:	call   0x4295d0
  429c7d:	test   rax,rax
  429c80:	je     0x429d82
  429c86:	movsxd rdx,DWORD PTR [rsi+0x14]
  429c8a:	lea    rcx,[rsi+0x18]
  429c8e:	mov    DWORD PTR [rax+0x10],ebx
  429c91:	lea    r10,[rdi+0x18]
  429c95:	xor    r9d,r9d
  429c98:	mov    rbx,rdx
  429c9b:	lea    rsi,[rcx+rdx*4]
  429c9f:	movsxd rdx,DWORD PTR [rdi+0x14]
  429ca3:	lea    rdi,[r10+rdx*4]
  429ca7:	lea    rdx,[rax+0x18]
  429cab:	nop    DWORD PTR [rax+rax*1+0x0]
  429cb0:	add    rcx,0x4
  429cb4:	add    r10,0x4
  429cb8:	mov    r11d,DWORD PTR [r10-0x4]
  429cbc:	mov    r8d,DWORD PTR [rcx-0x4]
  429cc0:	add    rdx,0x4
  429cc4:	sub    r8,r11
  429cc7:	sub    r8,r9
  429cca:	mov    r9,r8
  429ccd:	mov    r11d,r8d
  429cd0:	mov    DWORD PTR [rdx-0x4],r8d
  429cd4:	shr    r9,0x20
  429cd8:	and    r9d,0x1
  429cdc:	cmp    rdi,r10
  429cdf:	ja     0x429cb0
  429ce1:	cmp    rsi,rcx
  429ce4:	mov    rdi,rdx
  429ce7:	mov    r10,rcx
  429cea:	jbe    0x429d26
  429cec:	nop    DWORD PTR [rax+0x0]
  429cf0:	add    rcx,0x4
  429cf4:	mov    r8d,DWORD PTR [rcx-0x4]
  429cf8:	add    rdx,0x4
  429cfc:	sub    r8,r9
  429cff:	mov    r9,r8
  429d02:	mov    r11d,r8d
  429d05:	mov    DWORD PTR [rdx-0x4],r8d
  429d09:	shr    r9,0x20
  429d0d:	and    r9d,0x1
  429d11:	cmp    rsi,rcx
  429d14:	ja     0x429cf0
  429d16:	not    r10
  429d19:	lea    rdx,[r10+rsi*1]
  429d1d:	shr    rdx,0x2
  429d21:	lea    rdx,[rdi+rdx*4+0x4]
  429d26:	sub    rdx,0x4
  429d2a:	test   r11d,r11d
  429d2d:	jne    0x429d3d
  429d2f:	nop
  429d30:	sub    rdx,0x4
  429d34:	mov    ecx,DWORD PTR [rdx]
  429d36:	sub    ebx,0x1
  429d39:	test   ecx,ecx
  429d3b:	je     0x429d30
  429d3d:	mov    DWORD PTR [rax+0x14],ebx
  429d40:	add    rsp,0x20
  429d44:	pop    rbx
  429d45:	pop    rsi
  429d46:	pop    rdi
  429d47:	ret    
  429d48:	nop    DWORD PTR [rax+rax*1+0x0]
  429d50:	xor    ecx,ecx
  429d52:	call   0x4295d0
  429d57:	test   rax,rax
  429d5a:	je     0x429d82
  429d5c:	mov    DWORD PTR [rax+0x14],0x1
  429d63:	mov    DWORD PTR [rax+0x18],0x0
  429d6a:	add    rsp,0x20
  429d6e:	pop    rbx
  429d6f:	pop    rsi
  429d70:	pop    rdi
  429d71:	ret    
  429d72:	mov    rax,rsi
  429d75:	mov    bl,0x1
  429d77:	mov    rsi,rdi
  429d7a:	mov    rdi,rax
  429d7d:	jmp    0x429c75
  429d82:	xor    eax,eax
  429d84:	jmp    0x429d40
  429d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d90:	push   rsi
  429d91:	push   rbx
  429d92:	sub    rsp,0x18
  429d96:	movsxd rax,DWORD PTR [rcx+0x14]
  429d9a:	lea    r10,[rcx+0x18]
  429d9e:	mov    ecx,0x20
  429da3:	lea    r9,[r10+rax*4]
  429da7:	mov    eax,DWORD PTR [r9-0x4]
  429dab:	lea    rbx,[r9-0x4]
  429daf:	bsr    r8d,eax
  429db3:	xor    r8d,0x1f
  429db7:	sub    ecx,r8d
  429dba:	cmp    r8d,0xa
  429dbe:	mov    DWORD PTR [rdx],ecx
  429dc0:	jg     0x429e10
  429dc2:	mov    ecx,0xb
  429dc7:	mov    r11d,eax
  429dca:	xor    esi,esi
  429dcc:	sub    ecx,r8d
  429dcf:	shr    r11d,cl
  429dd2:	or     r11d,0x3ff00000
  429dd9:	shl    r11,0x20
  429ddd:	cmp    r10,rbx
  429de0:	jae    0x429de8
  429de2:	mov    esi,DWORD PTR [r9-0x8]
  429de6:	shr    esi,cl
  429de8:	lea    ecx,[r8+0x15]
  429dec:	shl    eax,cl
  429dee:	mov    edx,eax
  429df0:	mov    eax,esi
  429df2:	or     eax,edx
  429df4:	or     rax,r11
  429df7:	mov    QWORD PTR [rsp+0x8],rax
  429dfc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  429e02:	add    rsp,0x18
  429e06:	pop    rbx
  429e07:	pop    rsi
  429e08:	ret    
  429e09:	nop    DWORD PTR [rax+0x0]
  429e10:	cmp    r10,rbx
  429e13:	jae    0x429e70
  429e15:	mov    r11d,r8d
  429e18:	lea    rsi,[r9-0x8]
  429e1c:	mov    edx,DWORD PTR [r9-0x8]
  429e20:	sub    r11d,0xb
  429e24:	je     0x429e92
  429e26:	mov    ebx,0x2b
  429e2b:	mov    ecx,r11d
  429e2e:	sub    ebx,r8d
  429e31:	shl    eax,cl
  429e33:	mov    r8d,edx
  429e36:	mov    ecx,ebx
  429e38:	shr    r8d,cl
  429e3b:	or     eax,r8d
  429e3e:	xor    r8d,r8d
  429e41:	or     eax,0x3ff00000
  429e46:	shl    rax,0x20
  429e4a:	cmp    r10,rsi
  429e4d:	jae    0x429e56
  429e4f:	mov    r8d,DWORD PTR [r9-0xc]
  429e53:	shr    r8d,cl
  429e56:	mov    ecx,r11d
  429e59:	shl    edx,cl
  429e5b:	or     r8d,edx
  429e5e:	movabs rdx,0xffffffff00000000
  429e68:	and    rax,rdx
  429e6b:	or     rax,r8
  429e6e:	jmp    0x429df7
  429e70:	mov    r11d,r8d
  429e73:	sub    r11d,0xb
  429e77:	je     0x429e90
  429e79:	mov    ecx,r11d
  429e7c:	xor    r8d,r8d
  429e7f:	xor    edx,edx
  429e81:	shl    eax,cl
  429e83:	or     eax,0x3ff00000
  429e88:	shl    rax,0x20
  429e8c:	jmp    0x429e56
  429e8e:	xchg   ax,ax
  429e90:	xor    edx,edx
  429e92:	or     eax,0x3ff00000
  429e97:	shl    rax,0x20
  429e9b:	or     rax,rdx
  429e9e:	jmp    0x429df7
  429ea3:	nop    DWORD PTR [rax]
  429ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429eb0:	push   rdi
  429eb1:	push   rsi
  429eb2:	push   rbx
  429eb3:	sub    rsp,0x20
  429eb7:	mov    ecx,0x1
  429ebc:	movq   rbx,xmm0
  429ec1:	mov    rdi,rdx
  429ec4:	mov    rsi,r8
  429ec7:	call   0x4295d0
  429ecc:	test   rax,rax
  429ecf:	je     0x429fb5
  429ed5:	mov    r9,rbx
  429ed8:	shr    r9,0x20
  429edc:	mov    r10d,r9d
  429edf:	and    r9d,0x7fffffff
  429ee6:	and    r10d,0xfffff
  429eed:	shr    r9d,0x14
  429ef1:	mov    edx,r10d
  429ef4:	or     edx,0x100000
  429efa:	test   r9d,r9d
  429efd:	cmovne r10d,edx
  429f01:	test   ebx,ebx
  429f03:	jne    0x429f44
  429f05:	xor    ecx,ecx
  429f07:	mov    DWORD PTR [rax+0x14],0x1
  429f0e:	mov    edx,0x1
  429f13:	tzcnt  ecx,r10d
  429f18:	shr    r10d,cl
  429f1b:	test   r9d,r9d
  429f1e:	lea    r11d,[rcx+0x20]
  429f22:	mov    DWORD PTR [rax+0x18],r10d
  429f26:	je     0x429f83
  429f28:	lea    edx,[r11+r9*1-0x433]
  429f30:	mov    DWORD PTR [rdi],edx
  429f32:	mov    edx,0x35
  429f37:	sub    edx,r11d
  429f3a:	mov    DWORD PTR [rsi],edx
  429f3c:	add    rsp,0x20
  429f40:	pop    rbx
  429f41:	pop    rsi
  429f42:	pop    rdi
  429f43:	ret    
  429f44:	xor    r11d,r11d
  429f47:	tzcnt  r11d,ebx
  429f4c:	mov    ecx,r11d
  429f4f:	shr    ebx,cl
  429f51:	test   r11d,r11d
  429f54:	je     0x429fb0
  429f56:	mov    ecx,0x20
  429f5b:	mov    edx,r10d
  429f5e:	sub    ecx,r11d
  429f61:	shl    edx,cl
  429f63:	mov    ecx,r11d
  429f66:	or     ebx,edx
  429f68:	shr    r10d,cl
  429f6b:	mov    DWORD PTR [rax+0x18],ebx
  429f6e:	cmp    r10d,0x1
  429f72:	mov    DWORD PTR [rax+0x1c],r10d
  429f76:	sbb    edx,edx
  429f78:	add    edx,0x2
  429f7b:	test   r9d,r9d
  429f7e:	mov    DWORD PTR [rax+0x14],edx
  429f81:	jne    0x429f28
  429f83:	movsxd rcx,edx
  429f86:	shl    edx,0x5
  429f89:	sub    r11d,0x432
  429f90:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  429f95:	mov    DWORD PTR [rdi],r11d
  429f98:	xor    ecx,0x1f
  429f9b:	sub    edx,ecx
  429f9d:	mov    DWORD PTR [rsi],edx
  429f9f:	add    rsp,0x20
  429fa3:	pop    rbx
  429fa4:	pop    rsi
  429fa5:	pop    rdi
  429fa6:	ret    
  429fa7:	nop    WORD PTR [rax+rax*1+0x0]
  429fb0:	mov    DWORD PTR [rax+0x18],ebx
  429fb3:	jmp    0x429f6e
  429fb5:	xor    eax,eax
  429fb7:	jmp    0x429f3c
  429fb9:	nop    DWORD PTR [rax+0x0]
  429fc0:	mov    rax,rcx
  429fc3:	lea    rcx,[rdx+0x1]
  429fc7:	movzx  edx,BYTE PTR [rdx]
  429fca:	test   dl,dl
  429fcc:	mov    BYTE PTR [rax],dl
  429fce:	je     0x429fe2
  429fd0:	add    rcx,0x1
  429fd4:	movzx  edx,BYTE PTR [rcx-0x1]
  429fd8:	add    rax,0x1
  429fdc:	test   dl,dl
  429fde:	mov    BYTE PTR [rax],dl
  429fe0:	jne    0x429fd0
  429fe2:	repz ret 
  429fe4:	nop
  429fe5:	nop
  429fe6:	nop
  429fe7:	nop
  429fe8:	nop
  429fe9:	nop
  429fea:	nop
  429feb:	nop
  429fec:	nop
  429fed:	nop
  429fee:	nop
  429fef:	nop
  429ff0:	push   rbp
  429ff1:	push   rdi
  429ff2:	push   rsi
  429ff3:	push   rbx
  429ff4:	sub    rsp,0x48
  429ff8:	test   rdx,rdx
  429ffb:	je     0x42a123
  42a001:	test   r8,r8
  42a004:	je     0x42a130
  42a00a:	mov    eax,DWORD PTR [r9]
  42a00d:	mov    DWORD PTR [r9],0x0
  42a014:	mov    DWORD PTR [rsp+0x30],eax
  42a018:	movzx  eax,BYTE PTR [rdx]
  42a01b:	test   al,al
  42a01d:	je     0x42a0c0
  42a023:	cmp    DWORD PTR [rsp+0x98],0x1
  42a02b:	mov    rsi,r9
  42a02e:	mov    rdi,r8
  42a031:	mov    rbx,rdx
  42a034:	mov    rbp,rcx
  42a037:	jbe    0x42a0a0
  42a039:	cmp    BYTE PTR [rsp+0x30],0x0
  42a03e:	jne    0x42a0d0
  42a044:	movzx  edx,al
  42a047:	mov    ecx,DWORD PTR [rsp+0x90]
  42a04e:	call   QWORD PTR [rip+0x275ec]        # 0x451640
  42a054:	test   eax,eax
  42a056:	je     0x42a0a0
  42a058:	cmp    rdi,0x1
  42a05c:	jbe    0x42a14c
  42a062:	mov    DWORD PTR [rsp+0x28],0x1
  42a06a:	mov    QWORD PTR [rsp+0x20],rbp
  42a06f:	mov    r9d,0x2
  42a075:	mov    r8,rbx
  42a078:	mov    edx,0x8
  42a07d:	mov    ecx,DWORD PTR [rsp+0x90]
  42a084:	call   QWORD PTR [rip+0x275d6]        # 0x451660
  42a08a:	test   eax,eax
  42a08c:	je     0x42a137
  42a092:	mov    eax,0x2
  42a097:	add    rsp,0x48
  42a09b:	pop    rbx
  42a09c:	pop    rsi
  42a09d:	pop    rdi
  42a09e:	pop    rbp
  42a09f:	ret    
  42a0a0:	mov    eax,DWORD PTR [rsp+0x90]
  42a0a7:	test   eax,eax
  42a0a9:	jne    0x42a0f0
  42a0ab:	movzx  eax,BYTE PTR [rbx]
  42a0ae:	mov    WORD PTR [rbp+0x0],ax
  42a0b2:	mov    eax,0x1
  42a0b7:	add    rsp,0x48
  42a0bb:	pop    rbx
  42a0bc:	pop    rsi
  42a0bd:	pop    rdi
  42a0be:	pop    rbp
  42a0bf:	ret    
  42a0c0:	xor    edx,edx
  42a0c2:	xor    eax,eax
  42a0c4:	mov    WORD PTR [rcx],dx
  42a0c7:	add    rsp,0x48
  42a0cb:	pop    rbx
  42a0cc:	pop    rsi
  42a0cd:	pop    rdi
  42a0ce:	pop    rbp
  42a0cf:	ret    
  42a0d0:	mov    BYTE PTR [rsp+0x31],al
  42a0d4:	mov    DWORD PTR [rsp+0x28],0x1
  42a0dc:	mov    r9d,0x2
  42a0e2:	mov    QWORD PTR [rsp+0x20],rcx
  42a0e7:	lea    r8,[rsp+0x30]
  42a0ec:	jmp    0x42a078
  42a0ee:	xchg   ax,ax
  42a0f0:	mov    DWORD PTR [rsp+0x28],0x1
  42a0f8:	mov    QWORD PTR [rsp+0x20],rbp
  42a0fd:	mov    r9d,0x1
  42a103:	mov    r8,rbx
  42a106:	mov    edx,0x8
  42a10b:	mov    ecx,DWORD PTR [rsp+0x90]
  42a112:	call   QWORD PTR [rip+0x27548]        # 0x451660
  42a118:	test   eax,eax
  42a11a:	je     0x42a137
  42a11c:	mov    eax,0x1
  42a121:	jmp    0x42a0c7
  42a123:	xor    eax,eax
  42a125:	add    rsp,0x48
  42a129:	pop    rbx
  42a12a:	pop    rsi
  42a12b:	pop    rdi
  42a12c:	pop    rbp
  42a12d:	ret    
  42a12e:	xchg   ax,ax
  42a130:	mov    eax,0xfffffffe
  42a135:	jmp    0x42a0c7
  42a137:	call   0x42a758
  42a13c:	mov    DWORD PTR [rax],0x2a
  42a142:	mov    eax,0xffffffff
  42a147:	jmp    0x42a0c7
  42a14c:	movzx  eax,BYTE PTR [rbx]
  42a14f:	mov    BYTE PTR [rsi],al
  42a151:	mov    eax,0xfffffffe
  42a156:	jmp    0x42a0c7
  42a15b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a160:	push   rbp
  42a161:	push   rdi
  42a162:	push   rsi
  42a163:	push   rbx
  42a164:	sub    rsp,0x58
  42a168:	xor    eax,eax
  42a16a:	mov    WORD PTR [rsp+0x4e],ax
  42a16f:	lea    rax,[rsp+0x4e]
  42a174:	test   rcx,rcx
  42a177:	mov    rbx,rcx
  42a17a:	mov    rsi,r9
  42a17d:	mov    rdi,rdx
  42a180:	cmove  rbx,rax
  42a184:	mov    rax,QWORD PTR [rip+0x1c135]        # 0x4462c0
  42a18b:	mov    QWORD PTR [rsp+0x38],r8
  42a190:	mov    rax,QWORD PTR [rax]
  42a193:	mov    ebp,DWORD PTR [rax]
  42a195:	call   0x42a7a0
  42a19a:	mov    r8,QWORD PTR [rsp+0x38]
  42a19f:	lea    r9,[rip+0x26a62]        # 0x450c08
  42a1a6:	test   rsi,rsi
  42a1a9:	mov    DWORD PTR [rsp+0x28],ebp
  42a1ad:	mov    DWORD PTR [rsp+0x20],eax
  42a1b1:	mov    rdx,rdi
  42a1b4:	cmovne r9,rsi
  42a1b8:	mov    rcx,rbx
  42a1bb:	call   0x429ff0
  42a1c0:	cdqe   
  42a1c2:	add    rsp,0x58
  42a1c6:	pop    rbx
  42a1c7:	pop    rsi
  42a1c8:	pop    rdi
  42a1c9:	pop    rbp
  42a1ca:	ret    
  42a1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a1d0:	push   r15
  42a1d2:	push   r14
  42a1d4:	push   r13
  42a1d6:	push   r12
  42a1d8:	push   rbp
  42a1d9:	push   rdi
  42a1da:	push   rsi
  42a1db:	push   rbx
  42a1dc:	sub    rsp,0x48
  42a1e0:	lea    rax,[rip+0x26a1d]        # 0x450c04
  42a1e7:	test   r9,r9
  42a1ea:	mov    rdi,r9
  42a1ed:	mov    r13,rdx
  42a1f0:	cmove  rdi,rax
  42a1f4:	mov    r14,rcx
  42a1f7:	mov    rsi,r8
  42a1fa:	call   0x42a7a0
  42a1ff:	mov    r12d,eax
  42a202:	mov    rax,QWORD PTR [rip+0x1c0b7]        # 0x4462c0
  42a209:	test   r13,r13
  42a20c:	mov    rax,QWORD PTR [rax]
  42a20f:	mov    ebp,DWORD PTR [rax]
  42a211:	je     0x42a295
  42a217:	mov    rdx,QWORD PTR [r13+0x0]
  42a21b:	test   rdx,rdx
  42a21e:	je     0x42a295
  42a220:	test   r14,r14
  42a223:	je     0x42a2a0
  42a225:	xor    ebx,ebx
  42a227:	test   rsi,rsi
  42a22a:	jne    0x42a24a
  42a22c:	jmp    0x42a295
  42a22e:	xchg   ax,ax
  42a230:	movsxd r10,eax
  42a233:	add    r14,0x2
  42a237:	mov    rdx,r10
  42a23a:	add    rdx,QWORD PTR [r13+0x0]
  42a23e:	add    rbx,r10
  42a241:	cmp    rsi,rbx
  42a244:	mov    QWORD PTR [r13+0x0],rdx
  42a248:	jbe    0x42a290
  42a24a:	mov    r8,rsi
  42a24d:	mov    DWORD PTR [rsp+0x28],ebp
  42a251:	mov    DWORD PTR [rsp+0x20],r12d
  42a256:	sub    r8,rbx
  42a259:	mov    r9,rdi
  42a25c:	mov    rcx,r14
  42a25f:	call   0x429ff0
  42a264:	cmp    eax,0x0
  42a267:	jg     0x42a230
  42a269:	jne    0x42a290
  42a26b:	cmp    rbx,rsi
  42a26e:	jae    0x42a290
  42a270:	mov    QWORD PTR [r13+0x0],0x0
  42a278:	mov    rax,rbx
  42a27b:	add    rsp,0x48
  42a27f:	pop    rbx
  42a280:	pop    rsi
  42a281:	pop    rdi
  42a282:	pop    rbp
  42a283:	pop    r12
  42a285:	pop    r13
  42a287:	pop    r14
  42a289:	pop    r15
  42a28b:	ret    
  42a28c:	xor    ebx,ebx
  42a28e:	xchg   ax,ax
  42a290:	mov    rax,rbx
  42a293:	jmp    0x42a27b
  42a295:	xor    eax,eax
  42a297:	jmp    0x42a27b
  42a299:	nop    DWORD PTR [rax+0x0]
  42a2a0:	xor    eax,eax
  42a2a2:	test   rsi,rsi
  42a2a5:	mov    WORD PTR [rsp+0x3e],ax
  42a2aa:	je     0x42a28c
  42a2ac:	mov    r15d,ebp
  42a2af:	xor    ebx,ebx
  42a2b1:	lea    r14,[rsp+0x3e]
  42a2b6:	jmp    0x42a2d5
  42a2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2c0:	cdqe   
  42a2c2:	mov    rdx,rax
  42a2c5:	add    rdx,QWORD PTR [r13+0x0]
  42a2c9:	add    rbx,rax
  42a2cc:	cmp    rsi,rbx
  42a2cf:	mov    QWORD PTR [r13+0x0],rdx
  42a2d3:	jbe    0x42a290
  42a2d5:	mov    DWORD PTR [rsp+0x28],ebp
  42a2d9:	mov    DWORD PTR [rsp+0x20],r12d
  42a2de:	mov    r9,rdi
  42a2e1:	mov    r8,r15
  42a2e4:	mov    rcx,r14
  42a2e7:	call   0x429ff0
  42a2ec:	test   eax,eax
  42a2ee:	jg     0x42a2c0
  42a2f0:	jmp    0x42a290
  42a2f2:	nop    DWORD PTR [rax+0x0]
  42a2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a300:	push   rbp
  42a301:	push   rdi
  42a302:	push   rsi
  42a303:	push   rbx
  42a304:	sub    rsp,0x48
  42a308:	xor    eax,eax
  42a30a:	mov    WORD PTR [rsp+0x3e],ax
  42a30f:	mov    rax,QWORD PTR [rip+0x1bfaa]        # 0x4462c0
  42a316:	mov    rbx,r8
  42a319:	mov    rsi,rcx
  42a31c:	mov    rdi,rdx
  42a31f:	mov    rax,QWORD PTR [rax]
  42a322:	mov    ebp,DWORD PTR [rax]
  42a324:	call   0x42a7a0
  42a329:	lea    r9,[rip+0x268d0]        # 0x450c00
  42a330:	test   rbx,rbx
  42a333:	lea    rcx,[rsp+0x3e]
  42a338:	mov    DWORD PTR [rsp+0x28],ebp
  42a33c:	mov    DWORD PTR [rsp+0x20],eax
  42a340:	mov    r8,rdi
  42a343:	cmovne r9,rbx
  42a347:	mov    rdx,rsi
  42a34a:	call   0x429ff0
  42a34f:	cdqe   
  42a351:	add    rsp,0x48
  42a355:	pop    rbx
  42a356:	pop    rsi
  42a357:	pop    rdi
  42a358:	pop    rbp
  42a359:	ret    
  42a35a:	nop
  42a35b:	nop
  42a35c:	nop
  42a35d:	nop
  42a35e:	nop
  42a35f:	nop
  42a360:	sub    rsp,0x58
  42a364:	test   r8d,r8d
  42a367:	mov    eax,r8d
  42a36a:	mov    WORD PTR [rsp+0x68],dx
  42a36f:	jne    0x42a384
  42a371:	cmp    dx,0xff
  42a376:	ja     0x42a3ca
  42a378:	mov    BYTE PTR [rcx],dl
  42a37a:	mov    eax,0x1
  42a37f:	add    rsp,0x58
  42a383:	ret    
  42a384:	lea    rdx,[rsp+0x4c]
  42a389:	mov    DWORD PTR [rsp+0x28],r9d
  42a38e:	mov    QWORD PTR [rsp+0x20],rcx
  42a393:	mov    DWORD PTR [rsp+0x4c],0x0
  42a39b:	mov    QWORD PTR [rsp+0x30],0x0
  42a3a4:	mov    r9d,0x1
  42a3aa:	mov    QWORD PTR [rsp+0x38],rdx
  42a3af:	lea    r8,[rsp+0x68]
  42a3b4:	xor    edx,edx
  42a3b6:	mov    ecx,eax
  42a3b8:	call   QWORD PTR [rip+0x27352]        # 0x451710
  42a3be:	test   eax,eax
  42a3c0:	je     0x42a3ca
  42a3c2:	mov    edx,DWORD PTR [rsp+0x4c]
  42a3c6:	test   edx,edx
  42a3c8:	je     0x42a37f
  42a3ca:	call   0x42a758
  42a3cf:	mov    DWORD PTR [rax],0x2a
  42a3d5:	mov    eax,0xffffffff
  42a3da:	add    rsp,0x58
  42a3de:	ret    
  42a3df:	nop
  42a3e0:	push   rdi
  42a3e1:	push   rsi
  42a3e2:	push   rbx
  42a3e3:	sub    rsp,0x30
  42a3e7:	lea    rax,[rsp+0x20]
  42a3ec:	test   rcx,rcx
  42a3ef:	mov    rbx,rcx
  42a3f2:	mov    esi,edx
  42a3f4:	cmove  rbx,rax
  42a3f8:	mov    rax,QWORD PTR [rip+0x1bec1]        # 0x4462c0
  42a3ff:	mov    rax,QWORD PTR [rax]
  42a402:	mov    edi,DWORD PTR [rax]
  42a404:	call   0x42a7a0
  42a409:	movzx  edx,si
  42a40c:	mov    r8d,eax
  42a40f:	mov    rcx,rbx
  42a412:	mov    r9d,edi
  42a415:	call   0x42a360
  42a41a:	cdqe   
  42a41c:	add    rsp,0x30
  42a420:	pop    rbx
  42a421:	pop    rsi
  42a422:	pop    rdi
  42a423:	ret    
  42a424:	xchg   ax,ax
  42a426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a430:	push   r14
  42a432:	push   r13
  42a434:	push   r12
  42a436:	push   rbp
  42a437:	push   rdi
  42a438:	push   rsi
  42a439:	push   rbx
  42a43a:	sub    rsp,0x30
  42a43e:	mov    r13,rdx
  42a441:	mov    rbx,rcx
  42a444:	mov    rdi,r8
  42a447:	call   0x42a7a0
  42a44c:	mov    ebp,eax
  42a44e:	mov    rax,QWORD PTR [rip+0x1be6b]        # 0x4462c0
  42a455:	mov    r14,QWORD PTR [r13+0x0]
  42a459:	mov    rax,QWORD PTR [rax]
  42a45c:	test   r14,r14
  42a45f:	mov    r12d,DWORD PTR [rax]
  42a462:	je     0x42a550
  42a468:	xor    esi,esi
  42a46a:	test   rbx,rbx
  42a46d:	je     0x42a500
  42a473:	test   rdi,rdi
  42a476:	jne    0x42a498
  42a478:	jmp    0x42a4c4
  42a47a:	nop    WORD PTR [rax+rax*1+0x0]
  42a480:	movsxd r10,eax
  42a483:	add    rbx,r10
  42a486:	add    rsi,r10
  42a489:	cmp    BYTE PTR [rbx-0x1],0x0
  42a48d:	je     0x42a4e0
  42a48f:	add    r14,0x2
  42a493:	cmp    rdi,rsi
  42a496:	jbe    0x42a4c4
  42a498:	movzx  edx,WORD PTR [r14]
  42a49c:	mov    r9d,r12d
  42a49f:	mov    r8d,ebp
  42a4a2:	mov    rcx,rbx
  42a4a5:	call   0x42a360
  42a4aa:	test   eax,eax
  42a4ac:	jg     0x42a480
  42a4ae:	mov    rax,0xffffffffffffffff
  42a4b5:	add    rsp,0x30
  42a4b9:	pop    rbx
  42a4ba:	pop    rsi
  42a4bb:	pop    rdi
  42a4bc:	pop    rbp
  42a4bd:	pop    r12
  42a4bf:	pop    r13
  42a4c1:	pop    r14
  42a4c3:	ret    
  42a4c4:	mov    rax,rsi
  42a4c7:	mov    QWORD PTR [r13+0x0],r14
  42a4cb:	add    rsp,0x30
  42a4cf:	pop    rbx
  42a4d0:	pop    rsi
  42a4d1:	pop    rdi
  42a4d2:	pop    rbp
  42a4d3:	pop    r12
  42a4d5:	pop    r13
  42a4d7:	pop    r14
  42a4d9:	ret    
  42a4da:	nop    WORD PTR [rax+rax*1+0x0]
  42a4e0:	lea    rax,[rsi-0x1]
  42a4e4:	mov    QWORD PTR [r13+0x0],0x0
  42a4ec:	add    rsp,0x30
  42a4f0:	pop    rbx
  42a4f1:	pop    rsi
  42a4f2:	pop    rdi
  42a4f3:	pop    rbp
  42a4f4:	pop    r12
  42a4f6:	pop    r13
  42a4f8:	pop    r14
  42a4fa:	ret    
  42a4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a500:	test   rdi,rdi
  42a503:	lea    rbx,[rsp+0x20]
  42a508:	jne    0x42a52b
  42a50a:	jmp    0x42a561
  42a50c:	nop    DWORD PTR [rax+0x0]
  42a510:	movsxd rdx,eax
  42a513:	sub    eax,0x1
  42a516:	cdqe   
  42a518:	add    rsi,rdx
  42a51b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  42a520:	je     0x42a569
  42a522:	add    r14,0x2
  42a526:	cmp    rdi,rsi
  42a529:	jbe    0x42a561
  42a52b:	movzx  edx,WORD PTR [r14]
  42a52f:	mov    r9d,r12d
  42a532:	mov    r8d,ebp
  42a535:	mov    rcx,rbx
  42a538:	call   0x42a360
  42a53d:	test   eax,eax
  42a53f:	jg     0x42a510
  42a541:	jmp    0x42a4ae
  42a546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a550:	xor    eax,eax
  42a552:	add    rsp,0x30
  42a556:	pop    rbx
  42a557:	pop    rsi
  42a558:	pop    rdi
  42a559:	pop    rbp
  42a55a:	pop    r12
  42a55c:	pop    r13
  42a55e:	pop    r14
  42a560:	ret    
  42a561:	mov    rax,rsi
  42a564:	jmp    0x42a4b5
  42a569:	lea    rax,[rsi-0x1]
  42a56d:	jmp    0x42a4b5
  42a572:	nop
  42a573:	nop
  42a574:	nop
  42a575:	nop
  42a576:	nop
  42a577:	nop
  42a578:	nop
  42a579:	nop
  42a57a:	nop
  42a57b:	nop
  42a57c:	nop
  42a57d:	nop
  42a57e:	nop
  42a57f:	nop
  42a580:	jmp    QWORD PTR [rip+0x273fa]        # 0x451980
  42a586:	nop
  42a587:	nop
  42a588:	jmp    QWORD PTR [rip+0x273ea]        # 0x451978
  42a58e:	nop
  42a58f:	nop
  42a590:	jmp    QWORD PTR [rip+0x273da]        # 0x451970
  42a596:	nop
  42a597:	nop
  42a598:	jmp    QWORD PTR [rip+0x273ca]        # 0x451968
  42a59e:	nop
  42a59f:	nop
  42a5a0:	jmp    QWORD PTR [rip+0x273ba]        # 0x451960
  42a5a6:	nop
  42a5a7:	nop
  42a5a8:	jmp    QWORD PTR [rip+0x273aa]        # 0x451958
  42a5ae:	nop
  42a5af:	nop
  42a5b0:	jmp    QWORD PTR [rip+0x2739a]        # 0x451950
  42a5b6:	nop
  42a5b7:	nop
  42a5b8:	jmp    QWORD PTR [rip+0x27382]        # 0x451940
  42a5be:	nop
  42a5bf:	nop
  42a5c0:	jmp    QWORD PTR [rip+0x27372]        # 0x451938
  42a5c6:	nop
  42a5c7:	nop
  42a5c8:	jmp    QWORD PTR [rip+0x27362]        # 0x451930
  42a5ce:	nop
  42a5cf:	nop
  42a5d0:	jmp    QWORD PTR [rip+0x27352]        # 0x451928
  42a5d6:	nop
  42a5d7:	nop
  42a5d8:	jmp    QWORD PTR [rip+0x27342]        # 0x451920
  42a5de:	nop
  42a5df:	nop
  42a5e0:	jmp    QWORD PTR [rip+0x27332]        # 0x451918
  42a5e6:	nop
  42a5e7:	nop
  42a5e8:	jmp    QWORD PTR [rip+0x27322]        # 0x451910
  42a5ee:	nop
  42a5ef:	nop
  42a5f0:	jmp    QWORD PTR [rip+0x27312]        # 0x451908
  42a5f6:	nop
  42a5f7:	nop
  42a5f8:	jmp    QWORD PTR [rip+0x27302]        # 0x451900
  42a5fe:	nop
  42a5ff:	nop
  42a600:	jmp    QWORD PTR [rip+0x272f2]        # 0x4518f8
  42a606:	nop
  42a607:	nop
  42a608:	jmp    QWORD PTR [rip+0x272e2]        # 0x4518f0
  42a60e:	nop
  42a60f:	nop
  42a610:	jmp    QWORD PTR [rip+0x272d2]        # 0x4518e8
  42a616:	nop
  42a617:	nop
  42a618:	jmp    QWORD PTR [rip+0x272c2]        # 0x4518e0
  42a61e:	nop
  42a61f:	nop
  42a620:	jmp    QWORD PTR [rip+0x272b2]        # 0x4518d8
  42a626:	nop
  42a627:	nop
  42a628:	jmp    QWORD PTR [rip+0x272a2]        # 0x4518d0
  42a62e:	nop
  42a62f:	nop
  42a630:	jmp    QWORD PTR [rip+0x27292]        # 0x4518c8
  42a636:	nop
  42a637:	nop
  42a638:	jmp    QWORD PTR [rip+0x27282]        # 0x4518c0
  42a63e:	nop
  42a63f:	nop
  42a640:	jmp    QWORD PTR [rip+0x27272]        # 0x4518b8
  42a646:	nop
  42a647:	nop
  42a648:	jmp    QWORD PTR [rip+0x27262]        # 0x4518b0
  42a64e:	nop
  42a64f:	nop
  42a650:	jmp    QWORD PTR [rip+0x27252]        # 0x4518a8
  42a656:	nop
  42a657:	nop
  42a658:	jmp    QWORD PTR [rip+0x27242]        # 0x4518a0
  42a65e:	nop
  42a65f:	nop
  42a660:	jmp    QWORD PTR [rip+0x27232]        # 0x451898
  42a666:	nop
  42a667:	nop
  42a668:	jmp    QWORD PTR [rip+0x27222]        # 0x451890
  42a66e:	nop
  42a66f:	nop
  42a670:	jmp    QWORD PTR [rip+0x27212]        # 0x451888
  42a676:	nop
  42a677:	nop
  42a678:	jmp    QWORD PTR [rip+0x27202]        # 0x451880
  42a67e:	nop
  42a67f:	nop
  42a680:	jmp    QWORD PTR [rip+0x271f2]        # 0x451878
  42a686:	nop
  42a687:	nop
  42a688:	jmp    QWORD PTR [rip+0x271e2]        # 0x451870
  42a68e:	nop
  42a68f:	nop
  42a690:	jmp    QWORD PTR [rip+0x271d2]        # 0x451868
  42a696:	nop
  42a697:	nop
  42a698:	jmp    QWORD PTR [rip+0x271c2]        # 0x451860
  42a69e:	nop
  42a69f:	nop
  42a6a0:	jmp    QWORD PTR [rip+0x271b2]        # 0x451858
  42a6a6:	nop
  42a6a7:	nop
  42a6a8:	jmp    QWORD PTR [rip+0x271a2]        # 0x451850
  42a6ae:	nop
  42a6af:	nop
  42a6b0:	jmp    QWORD PTR [rip+0x27192]        # 0x451848
  42a6b6:	nop
  42a6b7:	nop
  42a6b8:	jmp    QWORD PTR [rip+0x27182]        # 0x451840
  42a6be:	nop
  42a6bf:	nop
  42a6c0:	jmp    QWORD PTR [rip+0x27172]        # 0x451838
  42a6c6:	nop
  42a6c7:	nop
  42a6c8:	jmp    QWORD PTR [rip+0x27162]        # 0x451830
  42a6ce:	nop
  42a6cf:	nop
  42a6d0:	jmp    QWORD PTR [rip+0x27152]        # 0x451828
  42a6d6:	nop
  42a6d7:	nop
  42a6d8:	jmp    QWORD PTR [rip+0x27142]        # 0x451820
  42a6de:	nop
  42a6df:	nop
  42a6e0:	jmp    QWORD PTR [rip+0x27132]        # 0x451818
  42a6e6:	nop
  42a6e7:	nop
  42a6e8:	jmp    QWORD PTR [rip+0x27122]        # 0x451810
  42a6ee:	nop
  42a6ef:	nop
  42a6f0:	jmp    QWORD PTR [rip+0x27112]        # 0x451808
  42a6f6:	nop
  42a6f7:	nop
  42a6f8:	jmp    QWORD PTR [rip+0x27102]        # 0x451800
  42a6fe:	nop
  42a6ff:	nop
  42a700:	jmp    QWORD PTR [rip+0x270f2]        # 0x4517f8
  42a706:	nop
  42a707:	nop
  42a708:	jmp    QWORD PTR [rip+0x270e2]        # 0x4517f0
  42a70e:	nop
  42a70f:	nop
  42a710:	jmp    QWORD PTR [rip+0x270d2]        # 0x4517e8
  42a716:	nop
  42a717:	nop
  42a718:	jmp    QWORD PTR [rip+0x270c2]        # 0x4517e0
  42a71e:	nop
  42a71f:	nop
  42a720:	jmp    QWORD PTR [rip+0x270b2]        # 0x4517d8
  42a726:	nop
  42a727:	nop
  42a728:	jmp    QWORD PTR [rip+0x2709a]        # 0x4517c8
  42a72e:	nop
  42a72f:	nop
  42a730:	jmp    QWORD PTR [rip+0x2708a]        # 0x4517c0
  42a736:	nop
  42a737:	nop
  42a738:	jmp    QWORD PTR [rip+0x2707a]        # 0x4517b8
  42a73e:	nop
  42a73f:	nop
  42a740:	jmp    QWORD PTR [rip+0x2706a]        # 0x4517b0
  42a746:	nop
  42a747:	nop
  42a748:	jmp    QWORD PTR [rip+0x2705a]        # 0x4517a8
  42a74e:	nop
  42a74f:	nop
  42a750:	jmp    QWORD PTR [rip+0x2704a]        # 0x4517a0
  42a756:	nop
  42a757:	nop
  42a758:	jmp    QWORD PTR [rip+0x27032]        # 0x451790
  42a75e:	nop
  42a75f:	nop
  42a760:	jmp    QWORD PTR [rip+0x27022]        # 0x451788
  42a766:	nop
  42a767:	nop
  42a768:	jmp    QWORD PTR [rip+0x27012]        # 0x451780
  42a76e:	nop
  42a76f:	nop
  42a770:	jmp    QWORD PTR [rip+0x26ffa]        # 0x451770
  42a776:	nop
  42a777:	nop
  42a778:	jmp    QWORD PTR [rip+0x26fea]        # 0x451768
  42a77e:	nop
  42a77f:	nop
  42a780:	jmp    QWORD PTR [rip+0x26fd2]        # 0x451758
  42a786:	nop
  42a787:	nop
  42a788:	jmp    QWORD PTR [rip+0x26fc2]        # 0x451750
  42a78e:	nop
  42a78f:	nop
  42a790:	jmp    QWORD PTR [rip+0x26faa]        # 0x451740
  42a796:	nop
  42a797:	nop
  42a798:	jmp    QWORD PTR [rip+0x26f9a]        # 0x451738
  42a79e:	nop
  42a79f:	nop
  42a7a0:	jmp    QWORD PTR [rip+0x26f8a]        # 0x451730
  42a7a6:	nop
  42a7a7:	nop
  42a7a8:	jmp    QWORD PTR [rip+0x26f7a]        # 0x451728
  42a7ae:	nop
  42a7af:	nop
  42a7b0:	mov    rax,QWORD PTR [rip+0x26459]        # 0x450c10
  42a7b7:	ret    
  42a7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a7c0:	mov    rax,rcx
  42a7c3:	xchg   QWORD PTR [rip+0x26446],rax        # 0x450c10
  42a7ca:	ret    
  42a7cb:	nop
  42a7cc:	nop
  42a7cd:	nop
  42a7ce:	nop
  42a7cf:	nop
  42a7d0:	mov    eax,DWORD PTR [rip+0x2644a]        # 0x450c20
  42a7d6:	ret    
  42a7d7:	nop    WORD PTR [rax+rax*1+0x0]
  42a7e0:	mov    eax,ecx
  42a7e2:	xchg   DWORD PTR [rip+0x26438],eax        # 0x450c20
  42a7e8:	ret    
  42a7e9:	nop    DWORD PTR [rax+0x0]
  42a7f0:	push   rbx
  42a7f1:	sub    rsp,0x20
  42a7f5:	mov    ebx,ecx
  42a7f7:	lea    rcx,[rip+0x1b9c2]        # 0x4461c0
  42a7fe:	call   QWORD PTR [rip+0x26df4]        # 0x4515f8
  42a804:	lea    rdx,[rip+0x1b9cb]        # 0x4461d6
  42a80b:	mov    rcx,rax
  42a80e:	call   QWORD PTR [rip+0x26dec]        # 0x451600
  42a814:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x42a7e0
  42a81b:	test   rax,rax
  42a81e:	mov    ecx,ebx
  42a820:	cmove  rax,rdx
  42a824:	mov    QWORD PTR [rip+0x4bed],rax        # 0x42f418
  42a82b:	add    rsp,0x20
  42a82f:	pop    rbx
  42a830:	rex.W jmp rax
  42a833:	nop    DWORD PTR [rax]
  42a836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a840:	sub    rsp,0x28
  42a844:	lea    rcx,[rip+0x1b975]        # 0x4461c0
  42a84b:	call   QWORD PTR [rip+0x26da7]        # 0x4515f8
  42a851:	lea    rdx,[rip+0x1b991]        # 0x4461e9
  42a858:	mov    rcx,rax
  42a85b:	call   QWORD PTR [rip+0x26d9f]        # 0x451600
  42a861:	lea    rdx,[rip+0xffffffffffffff68]        # 0x42a7d0
  42a868:	test   rax,rax
  42a86b:	cmove  rax,rdx
  42a86f:	mov    QWORD PTR [rip+0x4b9a],rax        # 0x42f410
  42a876:	add    rsp,0x28
  42a87a:	rex.W jmp rax
  42a87d:	nop    DWORD PTR [rax]
  42a880:	mov    rax,QWORD PTR [rip+0x4b91]        # 0x42f418
  42a887:	rex.W jmp rax
  42a88a:	nop    WORD PTR [rax+rax*1+0x0]
  42a890:	mov    rax,QWORD PTR [rip+0x4b79]        # 0x42f410
  42a897:	rex.W jmp rax
  42a89a:	nop
  42a89b:	nop
  42a89c:	nop
  42a89d:	nop
  42a89e:	nop
  42a89f:	nop
  42a8a0:	jmp    QWORD PTR [rip+0x26e72]        # 0x451718
  42a8a6:	nop
  42a8a7:	nop
  42a8a8:	jmp    QWORD PTR [rip+0x26e62]        # 0x451710
  42a8ae:	nop
  42a8af:	nop
  42a8b0:	jmp    QWORD PTR [rip+0x26e52]        # 0x451708
  42a8b6:	nop
  42a8b7:	nop
  42a8b8:	jmp    QWORD PTR [rip+0x26e42]        # 0x451700
  42a8be:	nop
  42a8bf:	nop
  42a8c0:	jmp    QWORD PTR [rip+0x26e32]        # 0x4516f8
  42a8c6:	nop
  42a8c7:	nop
  42a8c8:	jmp    QWORD PTR [rip+0x26e22]        # 0x4516f0
  42a8ce:	nop
  42a8cf:	nop
  42a8d0:	jmp    QWORD PTR [rip+0x26e12]        # 0x4516e8
  42a8d6:	nop
  42a8d7:	nop
  42a8d8:	jmp    QWORD PTR [rip+0x26e02]        # 0x4516e0
  42a8de:	nop
  42a8df:	nop
  42a8e0:	jmp    QWORD PTR [rip+0x26df2]        # 0x4516d8
  42a8e6:	nop
  42a8e7:	nop
  42a8e8:	jmp    QWORD PTR [rip+0x26de2]        # 0x4516d0
  42a8ee:	nop
  42a8ef:	nop
  42a8f0:	jmp    QWORD PTR [rip+0x26dd2]        # 0x4516c8
  42a8f6:	nop
  42a8f7:	nop
  42a8f8:	jmp    QWORD PTR [rip+0x26dc2]        # 0x4516c0
  42a8fe:	nop
  42a8ff:	nop
  42a900:	jmp    QWORD PTR [rip+0x26db2]        # 0x4516b8
  42a906:	nop
  42a907:	nop
  42a908:	jmp    QWORD PTR [rip+0x26da2]        # 0x4516b0
  42a90e:	nop
  42a90f:	nop
  42a910:	jmp    QWORD PTR [rip+0x26d92]        # 0x4516a8
  42a916:	nop
  42a917:	nop
  42a918:	jmp    QWORD PTR [rip+0x26d82]        # 0x4516a0
  42a91e:	nop
  42a91f:	nop
  42a920:	jmp    QWORD PTR [rip+0x26d72]        # 0x451698
  42a926:	nop
  42a927:	nop
  42a928:	jmp    QWORD PTR [rip+0x26d62]        # 0x451690
  42a92e:	nop
  42a92f:	nop
  42a930:	jmp    QWORD PTR [rip+0x26d52]        # 0x451688
  42a936:	nop
  42a937:	nop
  42a938:	jmp    QWORD PTR [rip+0x26d42]        # 0x451680
  42a93e:	nop
  42a93f:	nop
  42a940:	jmp    QWORD PTR [rip+0x26d32]        # 0x451678
  42a946:	nop
  42a947:	nop
  42a948:	jmp    QWORD PTR [rip+0x26d22]        # 0x451670
  42a94e:	nop
  42a94f:	nop
  42a950:	jmp    QWORD PTR [rip+0x26d12]        # 0x451668
  42a956:	nop
  42a957:	nop
  42a958:	jmp    QWORD PTR [rip+0x26d02]        # 0x451660
  42a95e:	nop
  42a95f:	nop
  42a960:	jmp    QWORD PTR [rip+0x26cf2]        # 0x451658
  42a966:	nop
  42a967:	nop
  42a968:	jmp    QWORD PTR [rip+0x26ce2]        # 0x451650
  42a96e:	nop
  42a96f:	nop
  42a970:	jmp    QWORD PTR [rip+0x26cd2]        # 0x451648
  42a976:	nop
  42a977:	nop
  42a978:	jmp    QWORD PTR [rip+0x26cc2]        # 0x451640
  42a97e:	nop
  42a97f:	nop
  42a980:	jmp    QWORD PTR [rip+0x26cb2]        # 0x451638
  42a986:	nop
  42a987:	nop
  42a988:	jmp    QWORD PTR [rip+0x26ca2]        # 0x451630
  42a98e:	nop
  42a98f:	nop
  42a990:	jmp    QWORD PTR [rip+0x26c92]        # 0x451628
  42a996:	nop
  42a997:	nop
  42a998:	jmp    QWORD PTR [rip+0x26c82]        # 0x451620
  42a99e:	nop
  42a99f:	nop
  42a9a0:	jmp    QWORD PTR [rip+0x26c72]        # 0x451618
  42a9a6:	nop
  42a9a7:	nop
  42a9a8:	jmp    QWORD PTR [rip+0x26c62]        # 0x451610
  42a9ae:	nop
  42a9af:	nop
  42a9b0:	jmp    QWORD PTR [rip+0x26c52]        # 0x451608
  42a9b6:	nop
  42a9b7:	nop
  42a9b8:	jmp    QWORD PTR [rip+0x26c42]        # 0x451600
  42a9be:	nop
  42a9bf:	nop
  42a9c0:	jmp    QWORD PTR [rip+0x26c32]        # 0x4515f8
  42a9c6:	nop
  42a9c7:	nop
  42a9c8:	jmp    QWORD PTR [rip+0x26c22]        # 0x4515f0
  42a9ce:	nop
  42a9cf:	nop
  42a9d0:	jmp    QWORD PTR [rip+0x26c12]        # 0x4515e8
  42a9d6:	nop
  42a9d7:	nop
  42a9d8:	jmp    QWORD PTR [rip+0x26c02]        # 0x4515e0
  42a9de:	nop
  42a9df:	nop
  42a9e0:	jmp    QWORD PTR [rip+0x26bf2]        # 0x4515d8
  42a9e6:	nop
  42a9e7:	nop
  42a9e8:	jmp    QWORD PTR [rip+0x26be2]        # 0x4515d0
  42a9ee:	nop
  42a9ef:	nop
  42a9f0:	jmp    QWORD PTR [rip+0x26bd2]        # 0x4515c8
  42a9f6:	nop
  42a9f7:	nop
  42a9f8:	jmp    QWORD PTR [rip+0x26bc2]        # 0x4515c0
  42a9fe:	nop
  42a9ff:	nop
  42aa00:	jmp    QWORD PTR [rip+0x26bb2]        # 0x4515b8
  42aa06:	nop
  42aa07:	nop
  42aa08:	jmp    QWORD PTR [rip+0x26ba2]        # 0x4515b0
  42aa0e:	nop
  42aa0f:	nop
  42aa10:	jmp    QWORD PTR [rip+0x26b92]        # 0x4515a8
  42aa16:	nop
  42aa17:	nop
  42aa18:	jmp    QWORD PTR [rip+0x26b82]        # 0x4515a0
  42aa1e:	nop
  42aa1f:	nop
  42aa20:	jmp    QWORD PTR [rip+0x26b72]        # 0x451598
  42aa26:	nop
  42aa27:	nop
  42aa28:	jmp    QWORD PTR [rip+0x26b62]        # 0x451590
  42aa2e:	nop
  42aa2f:	nop
  42aa30:	jmp    QWORD PTR [rip+0x26b52]        # 0x451588
  42aa36:	nop
  42aa37:	nop
  42aa38:	jmp    QWORD PTR [rip+0x26b42]        # 0x451580
  42aa3e:	nop
  42aa3f:	nop
  42aa40:	jmp    QWORD PTR [rip+0x26b32]        # 0x451578
  42aa46:	nop
  42aa47:	nop
  42aa48:	jmp    QWORD PTR [rip+0x26b22]        # 0x451570
  42aa4e:	nop
  42aa4f:	nop
  42aa50:	sub    rsp,0x38
  42aa54:	mov    QWORD PTR [rsp+0x48],rdx
  42aa59:	lea    rdx,[rsp+0x48]
  42aa5e:	mov    QWORD PTR [rsp+0x50],r8
  42aa63:	mov    QWORD PTR [rsp+0x58],r9
  42aa68:	mov    QWORD PTR [rsp+0x28],rdx
  42aa6d:	call   0x425900
  42aa72:	add    rsp,0x38
  42aa76:	ret    
  42aa77:	nop
  42aa78:	nop
  42aa79:	nop
  42aa7a:	nop
  42aa7b:	nop
  42aa7c:	nop
  42aa7d:	nop
  42aa7e:	nop
  42aa7f:	nop
  42aa80:	sub    rsp,0x38
  42aa84:	mov    QWORD PTR [rsp+0x50],r8
  42aa89:	lea    r8,[rsp+0x50]
  42aa8e:	mov    QWORD PTR [rsp+0x58],r9
  42aa93:	mov    QWORD PTR [rsp+0x28],r8
  42aa98:	call   0x4258d0
  42aa9d:	add    rsp,0x38
  42aaa1:	ret    
  42aaa2:	nop
  42aaa3:	nop
  42aaa4:	nop
  42aaa5:	nop
  42aaa6:	nop
  42aaa7:	nop
  42aaa8:	nop
  42aaa9:	nop
  42aaaa:	nop
  42aaab:	nop
  42aaac:	nop
  42aaad:	nop
  42aaae:	nop
  42aaaf:	nop
  42aab0:	sub    rsp,0x38
  42aab4:	mov    QWORD PTR [rsp+0x50],r8
  42aab9:	lea    r8,[rsp+0x50]
  42aabe:	mov    QWORD PTR [rsp+0x58],r9
  42aac3:	mov    QWORD PTR [rsp+0x28],r8
  42aac8:	call   0x4259a0
  42aacd:	add    rsp,0x38
  42aad1:	ret    
  42aad2:	nop
  42aad3:	nop
  42aad4:	nop
  42aad5:	nop
  42aad6:	nop
  42aad7:	nop
  42aad8:	nop
  42aad9:	nop
  42aada:	nop
  42aadb:	nop
  42aadc:	nop
  42aadd:	nop
  42aade:	nop
  42aadf:	nop
  42aae0:	push   r15
  42aae2:	push   r14
  42aae4:	push   r13
  42aae6:	push   r12
  42aae8:	push   rbp
  42aae9:	push   rdi
  42aaea:	push   rsi
  42aaeb:	push   rbx
  42aaec:	sub    rsp,0x68
  42aaf0:	mov    r14d,ecx
  42aaf3:	mov    r13,rdx
  42aaf6:	call   0x424370
  42aafb:	call   0x41d7f0
  42ab00:	mov    r12,QWORD PTR [r13+0x8]
  42ab04:	mov    DWORD PTR [rsp+0x40],0x0
  42ab0c:	mov    r15,rax
  42ab0f:	lea    rbx,[r13+0x8]
  42ab13:	mov    DWORD PTR [rsp+0x44],0x0
  42ab1b:	test   r12,r12
  42ab1e:	je     0x42abcb
  42ab24:	cmp    BYTE PTR [r12],0x2d
  42ab29:	jne    0x42ad4f
  42ab2f:	lea    rbp,[rip+0x797b]        # 0x4324b1
  42ab36:	jmp    0x42ab63
  42ab38:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab40:	mov    DWORD PTR [rsp+0x44],0x1
  42ab48:	mov    rdx,rbx
  42ab4b:	mov    r12,QWORD PTR [rdx+0x8]
  42ab4f:	lea    rbx,[rdx+0x8]
  42ab53:	test   r12,r12
  42ab56:	je     0x42abcb
  42ab58:	cmp    BYTE PTR [r12],0x2d
  42ab5d:	jne    0x42ad4f
  42ab63:	mov    ecx,0xa
  42ab68:	mov    rsi,r12
  42ab6b:	mov    rdi,rbp
  42ab6e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ab70:	je     0x42af15
  42ab76:	lea    rdi,[rip+0x79fe]        # 0x43257b
  42ab7d:	mov    ecx,0x7
  42ab82:	mov    rsi,r12
  42ab85:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ab87:	je     0x42af3d
  42ab8d:	lea    rdi,[rip+0x79ee]        # 0x432582
  42ab94:	mov    ecx,0x9
  42ab99:	mov    rsi,r12
  42ab9c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ab9e:	je     0x42ab40
  42aba0:	lea    rdi,[rip+0x79e4]        # 0x43258b
  42aba7:	mov    ecx,0x8
  42abac:	mov    rsi,r12
  42abaf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42abb1:	jne    0x42abe4
  42abb3:	mov    rdx,rbx
  42abb6:	mov    DWORD PTR [rsp+0x40],0x1
  42abbe:	mov    r12,QWORD PTR [rdx+0x8]
  42abc2:	lea    rbx,[rdx+0x8]
  42abc6:	test   r12,r12
  42abc9:	jne    0x42ab58
  42abcb:	call   QWORD PTR [rip+0x26b7f]        # 0x451750
  42abd1:	lea    rcx,[rax+0x60]
  42abd5:	call   0x4087e0
  42abda:	mov    ecx,0x1
  42abdf:	call   0x42a708
  42abe4:	lea    rdi,[rip+0x79a8]        # 0x432593
  42abeb:	mov    ecx,0xa
  42abf0:	mov    rsi,r12
  42abf3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42abf5:	jne    0x42ac50
  42abf7:	mov    rsi,QWORD PTR [rbx+0x8]
  42abfb:	lea    r9,[rbx+0x8]
  42abff:	mov    QWORD PTR [rip+0x22d42],r9        # 0x44d948
  42ac06:	test   rsi,rsi
  42ac09:	je     0x42abcb
  42ac0b:	mov    rax,r9
  42ac0e:	lea    r11,[rip+0x7988]        # 0x43259d
  42ac15:	mov    r10d,0x3
  42ac1b:	jmp    0x42ac2c
  42ac1d:	nop    DWORD PTR [rax]
  42ac20:	add    rax,0x8
  42ac24:	mov    rsi,QWORD PTR [rax]
  42ac27:	test   rsi,rsi
  42ac2a:	je     0x42abcb
  42ac2c:	mov    rdi,r11
  42ac2f:	mov    rcx,r10
  42ac32:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ac34:	jne    0x42ac20
  42ac36:	cmp    r9,rax
  42ac39:	mov    rdx,rax
  42ac3c:	je     0x42abcb
  42ac3e:	mov    QWORD PTR [rax],0x0
  42ac45:	jmp    0x42ab4b
  42ac4a:	nop    WORD PTR [rax+rax*1+0x0]
  42ac50:	lea    rdi,[rip+0x7949]        # 0x4325a0
  42ac57:	mov    ecx,0x8
  42ac5c:	mov    rsi,r12
  42ac5f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ac61:	jne    0x42ac80
  42ac63:	mov    rax,QWORD PTR [rip+0x1b806]        # 0x446470
  42ac6a:	mov    rdx,rbx
  42ac6d:	mov    DWORD PTR [rax],0x1
  42ac73:	jmp    0x42ab4b
  42ac78:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac80:	lea    rdi,[rip+0x7921]        # 0x4325a8
  42ac87:	mov    ecx,0xf
  42ac8c:	mov    rsi,r12
  42ac8f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ac91:	je     0x42acbb
  42ac93:	lea    rdx,[rip+0x7921]        # 0x4325bb
  42ac9a:	mov    rcx,r12
  42ac9d:	call   0x42a628
  42aca2:	test   eax,eax
  42aca4:	jne    0x42acdb
  42aca6:	mov    rax,QWORD PTR [rip+0x1b903]        # 0x4465b0
  42acad:	mov    rdx,rbx
  42acb0:	mov    DWORD PTR [rax],0x1
  42acb6:	jmp    0x42ab4b
  42acbb:	lea    rcx,[r12+0xf]
  42acc0:	xor    edx,edx
  42acc2:	call   0x407150
  42acc7:	test   rax,rax
  42acca:	mov    rsi,rax
  42accd:	jne    0x42b30a
  42acd3:	mov    rdx,rbx
  42acd6:	jmp    0x42ab4b
  42acdb:	lea    rdx,[rip+0x78e8]        # 0x4325ca
  42ace2:	mov    rcx,r12
  42ace5:	call   0x42a628
  42acea:	test   eax,eax
  42acec:	je     0x42b37d
  42acf2:	lea    rdx,[rip+0x79ce]        # 0x4326c7
  42acf9:	mov    r8d,0x11
  42acff:	mov    rcx,r12
  42ad02:	call   0x42a608
  42ad07:	test   eax,eax
  42ad09:	je     0x42afad
  42ad0f:	lea    rdx,[rip+0x7a04]        # 0x43271a
  42ad16:	mov    rcx,r12
  42ad19:	call   0x42a628
  42ad1e:	test   eax,eax
  42ad20:	je     0x42b3d0
  42ad26:	lea    rdx,[rip+0x79ef]        # 0x43271c
  42ad2d:	mov    rcx,r12
  42ad30:	call   0x42a628
  42ad35:	test   eax,eax
  42ad37:	jne    0x42b09c
  42ad3d:	mov    DWORD PTR [rip+0x1319],0x1        # 0x42c060
  42ad47:	mov    rdx,rbx
  42ad4a:	jmp    0x42ab4b
  42ad4f:	mov    rbp,QWORD PTR [rbx]
  42ad52:	lea    rsi,[rbx+0x8]
  42ad56:	mov    eax,DWORD PTR [rsp+0x44]
  42ad5a:	test   eax,eax
  42ad5c:	jne    0x42ad6a
  42ad5e:	mov    eax,DWORD PTR [rsp+0x40]
  42ad62:	test   eax,eax
  42ad64:	je     0x42af9d
  42ad6a:	call   0x41bbd0
  42ad6f:	call   0x41e250
  42ad74:	mov    rcx,rbp
  42ad77:	call   0x4052d0
  42ad7c:	mov    rcx,QWORD PTR [rbx+0x8]
  42ad80:	test   rcx,rcx
  42ad83:	je     0x42ada1
  42ad85:	lea    rdx,[rip+0x77f6]        # 0x432582
  42ad8c:	call   0x42a628
  42ad91:	test   eax,eax
  42ad93:	jne    0x42ada1
  42ad95:	lea    rsi,[rbx+0x10]
  42ad99:	mov    DWORD PTR [rsp+0x44],0x1
  42ada1:	mov    eax,DWORD PTR [rsp+0x44]
  42ada5:	test   eax,eax
  42ada7:	jne    0x42af53
  42adad:	xor    ebx,ebx
  42adaf:	call   0x405930
  42adb4:	call   0x422980
  42adb9:	call   0x4125e0
  42adbe:	mov    rax,QWORD PTR [rip+0x1b89b]        # 0x446660
  42adc5:	mov    rax,QWORD PTR [rax]
  42adc8:	mov    rdx,QWORD PTR [rax+0x178]
  42adcf:	test   rdx,rdx
  42add2:	je     0x42adde
  42add4:	call   rdx
  42add6:	test   eax,eax
  42add8:	jne    0x42b2a7
  42adde:	call   0x41c290
  42ade3:	mov    ecx,0x4001
  42ade8:	call   0x41a6e0
  42aded:	mov    ecx,0x4000
  42adf2:	mov    QWORD PTR [rip+0x22547],rax        # 0x44d340
  42adf9:	call   0x41a6e0
  42adfe:	test   ebx,ebx
  42ae00:	mov    QWORD PTR [rip+0x22b09],rax        # 0x44d910
  42ae07:	je     0x42b0dc
  42ae0d:	mov    ecx,ebx
  42ae0f:	call   0x4081f0
  42ae14:	add    eax,0x1
  42ae17:	je     0x42b328
  42ae1d:	lea    rcx,[rip+0xfffffffffffdda0c]        # 0x408830
  42ae24:	xor    edx,edx
  42ae26:	call   0x41d280
  42ae2b:	test   DWORD PTR [rip+0x22afb],0xfffffffd        # 0x44d930
  42ae35:	mov    rax,QWORD PTR [rip+0x1b674]        # 0x4464b0
  42ae3c:	mov    DWORD PTR [rax],0x0
  42ae42:	jne    0x42ae50
  42ae44:	mov    eax,DWORD PTR [rsp+0x40]
  42ae48:	test   eax,eax
  42ae4a:	je     0x42b2b1
  42ae50:	mov    r12,QWORD PTR [rip+0x1b709]        # 0x446560
  42ae57:	mov    r13,QWORD PTR [rip+0x1b602]        # 0x446460
  42ae5e:	lea    rdi,[rsp+0x50]
  42ae63:	mov    rbx,QWORD PTR [rip+0x1b726]        # 0x446590
  42ae6a:	mov    rsi,QWORD PTR [rip+0x268df]        # 0x451750
  42ae71:	mov    rax,QWORD PTR [rbx]
  42ae74:	mov    rcx,rbp
  42ae77:	mov    DWORD PTR [r12],0x0
  42ae7f:	mov    DWORD PTR [rip+0x229f3],0x0        # 0x44d87c
  42ae89:	mov    DWORD PTR [rip+0x229e5],0x0        # 0x44d878
  42ae93:	mov    DWORD PTR [rip+0x229d7],0x0        # 0x44d874
  42ae9d:	mov    DWORD PTR [rip+0x229c9],0x0        # 0x44d870
  42aea7:	mov    QWORD PTR [rip+0x229e6],rax        # 0x44d894
  42aeae:	mov    eax,DWORD PTR [rbx+0x8]
  42aeb1:	mov    DWORD PTR [r13+0x0],0xffffffff
  42aeb9:	mov    DWORD PTR [rip+0x229a1],0x0        # 0x44d864
  42aec3:	mov    DWORD PTR [rip+0x22993],0x0        # 0x44d860
  42aecd:	mov    DWORD PTR [rip+0x22a81],0x0        # 0x44d958
  42aed7:	mov    DWORD PTR [rip+0x229bf],eax        # 0x44d89c
  42aedd:	call   0x405490
  42aee2:	call   0x41d7f0
  42aee7:	mov    r14,rax
  42aeea:	call   0x412b60
  42aeef:	cmp    DWORD PTR [rip+0x22a6a],0x0        # 0x44d960
  42aef6:	jne    0x42b334
  42aefc:	cmp    DWORD PTR [rip+0x2297d],0x0        # 0x44d880
  42af03:	je     0x42b1fa
  42af09:	lea    rcx,[rip+0x789b]        # 0x4327ab
  42af10:	call   0x41d9b0
  42af15:	mov    r9,QWORD PTR [rip+0x1b5b4]        # 0x4464d0
  42af1c:	mov    r8,QWORD PTR [rip+0x1b78d]        # 0x4466b0
  42af23:	lea    rcx,[rip+0x759e]        # 0x4324c8
  42af2a:	lea    rdx,[rip+0x758a]        # 0x4324bb
  42af31:	call   0x42aa50
  42af36:	xor    ecx,ecx
  42af38:	call   0x42a708
  42af3d:	call   QWORD PTR [rip+0x2680d]        # 0x451750
  42af43:	lea    rcx,[rax+0x30]
  42af47:	call   0x4087e0
  42af4c:	xor    ecx,ecx
  42af4e:	call   0x42a708
  42af53:	mov    rcx,QWORD PTR [rsi]
  42af56:	test   rcx,rcx
  42af59:	je     0x42abcb
  42af5f:	cmp    BYTE PTR [rcx],0x0
  42af62:	je     0x42abcb
  42af68:	lea    rdx,[rsp+0x48]
  42af6d:	xor    r8d,r8d
  42af70:	call   0x42a5e0
  42af75:	test   eax,eax
  42af77:	mov    ebx,eax
  42af79:	je     0x42abcb
  42af7f:	mov    rax,QWORD PTR [rsp+0x48]
  42af84:	cmp    BYTE PTR [rax],0x0
  42af87:	jne    0x42abcb
  42af8d:	cmp    QWORD PTR [rsi+0x8],0x0
  42af92:	jne    0x42abcb
  42af98:	jmp    0x42adaf
  42af9d:	cmp    QWORD PTR [rbx+0x8],0x0
  42afa2:	jne    0x42ad6a
  42afa8:	jmp    0x42abcb
  42afad:	lea    rcx,[r12+0x11]
  42afb2:	lea    rdx,[rip+0x7720]        # 0x4326d9
  42afb9:	mov    QWORD PTR [rbx],rcx
  42afbc:	call   0x42a5f0
  42afc1:	test   rax,rax
  42afc4:	mov    r12,rax
  42afc7:	jne    0x42aff4
  42afc9:	jmp    0x42acd3
  42afce:	xchg   ax,ax
  42afd0:	mov    DWORD PTR [rip+0x2237a],0x1        # 0x44d354
  42afda:	lea    rdx,[rip+0x76f8]        # 0x4326d9
  42afe1:	xor    ecx,ecx
  42afe3:	call   0x42a5f0
  42afe8:	test   rax,rax
  42afeb:	mov    r12,rax
  42afee:	je     0x42acd3
  42aff4:	lea    rsi,[rip+0x76e0]        # 0x4326db
  42affb:	mov    rdi,r12
  42affe:	mov    ecx,0x6
  42b003:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b005:	je     0x42afd0
  42b007:	lea    rsi,[rip+0x76d3]        # 0x4326e1
  42b00e:	mov    rdi,r12
  42b011:	mov    ecx,0x8
  42b016:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b018:	jne    0x42b026
  42b01a:	mov    DWORD PTR [rip+0x2232c],0x1        # 0x44d350
  42b024:	jmp    0x42afda
  42b026:	lea    rcx,[rip+0x7020]        # 0x43204d
  42b02d:	mov    rdx,r12
  42b030:	call   0x42a628
  42b035:	test   eax,eax
  42b037:	jne    0x42b045
  42b039:	mov    DWORD PTR [rip+0x22309],0x1        # 0x44d34c
  42b043:	jmp    0x42afda
  42b045:	lea    rcx,[rip+0x7011]        # 0x43205d
  42b04c:	mov    rdx,r12
  42b04f:	call   0x42a628
  42b054:	test   eax,eax
  42b056:	je     0x42b08d
  42b058:	lea    rcx,[rip+0x768a]        # 0x4326e9
  42b05f:	mov    rdx,r12
  42b062:	call   0x42a628
  42b067:	test   eax,eax
  42b069:	jne    0x42b398
  42b06f:	mov    DWORD PTR [rip+0x222db],0x1        # 0x44d354
  42b079:	mov    DWORD PTR [rip+0x222cd],0x1        # 0x44d350
  42b083:	mov    DWORD PTR [rip+0x222bf],0x1        # 0x44d34c
  42b08d:	mov    DWORD PTR [rip+0x222b1],0x1        # 0x44d348
  42b097:	jmp    0x42afda
  42b09c:	lea    rdx,[rip+0x7691]        # 0x432734
  42b0a3:	mov    rcx,r12
  42b0a6:	call   0x42a628
  42b0ab:	test   eax,eax
  42b0ad:	je     0x42b295
  42b0b3:	lea    rdx,[rip+0x7695]        # 0x43274f
  42b0ba:	mov    rcx,r12
  42b0bd:	call   0x42a628
  42b0c2:	test   eax,eax
  42b0c4:	jne    0x42b3e6
  42b0ca:	mov    DWORD PTR [rip+0x227ac],0x1        # 0x44d880
  42b0d4:	mov    rdx,rbx
  42b0d7:	jmp    0x42ab4b
  42b0dc:	cmp    QWORD PTR [rsi],0x0
  42b0e0:	je     0x42b146
  42b0e2:	mov    rax,rsi
  42b0e5:	sub    rax,r13
  42b0e8:	sar    rax,0x3
  42b0ec:	sub    r14d,eax
  42b0ef:	lea    ecx,[r14+0x1]
  42b0f3:	movsxd rcx,ecx
  42b0f6:	shl    rcx,0x3
  42b0fa:	call   0x41a6e0
  42b0ff:	mov    QWORD PTR [rip+0x2284a],rax        # 0x44d950
  42b106:	xor    ebx,ebx
  42b108:	jmp    0x42b125
  42b10a:	mov    rax,QWORD PTR [rip+0x2283f]        # 0x44d950
  42b111:	mov    rcx,QWORD PTR [rsi+rbx*8]
  42b115:	lea    rdi,[rax+rbx*8]
  42b119:	call   0x40e730
  42b11e:	mov    QWORD PTR [rdi],rax
  42b121:	add    rbx,0x1
  42b125:	cmp    r14d,ebx
  42b128:	movsxd rax,ebx
  42b12b:	jg     0x42b10a
  42b12d:	mov    rcx,QWORD PTR [rip+0x2281c]        # 0x44d950
  42b134:	mov    QWORD PTR [rcx+rax*8],0x0
  42b13c:	call   0x408310
  42b141:	jmp    0x42ae1d
  42b146:	mov    rax,QWORD PTR [rip+0x1b3f3]        # 0x446540
  42b14d:	mov    DWORD PTR [rip+0x227d9],0x0        # 0x44d930
  42b157:	mov    DWORD PTR [rip+0x227d7],0x0        # 0x44d938
  42b161:	mov    rdx,QWORD PTR [rax]
  42b164:	mov    eax,DWORD PTR [rax+0x8]
  42b167:	mov    QWORD PTR [rip+0x227aa],rdx        # 0x44d918
  42b16e:	mov    DWORD PTR [rip+0x227ac],eax        # 0x44d920
  42b174:	jmp    0x42ae1d
  42b179:	mov    rcx,r14
  42b17c:	mov    QWORD PTR [rsp+0x38],rax
  42b181:	mov    QWORD PTR [rsp+0x30],rdx
  42b186:	call   0x41d800
  42b18b:	mov    rax,QWORD PTR [rsp+0x38]
  42b190:	mov    rdx,QWORD PTR [rsp+0x30]
  42b195:	mov    rcx,rax
  42b198:	cmp    rdx,0x3
  42b19c:	jne    0x42b4f8
  42b1a2:	call   0x4241f0
  42b1a7:	mov    r14,rax
  42b1aa:	call   QWORD PTR [rip+0x265a0]        # 0x451750
  42b1b0:	lea    rcx,[rax+0x30]
  42b1b4:	call   0x42a6f0
  42b1b9:	mov    r14,QWORD PTR [r14+0x8]
  42b1bd:	call   QWORD PTR [rip+0x2658d]        # 0x451750
  42b1c3:	lea    rcx,[rax+0x60]
  42b1c7:	lea    rdx,[rip+0x7666]        # 0x432834
  42b1ce:	mov    r8,r14
  42b1d1:	call   0x42aa80
  42b1d6:	cmp    DWORD PTR [rip+0x22787],0x0        # 0x44d964
  42b1dd:	jne    0x42b4cb
  42b1e3:	cmp    DWORD PTR [rip+0x22696],0x0        # 0x44d880
  42b1ea:	jne    0x42b4bf
  42b1f0:	call   0x4241e8
  42b1f5:	jmp    0x42ae71
  42b1fa:	cmp    DWORD PTR [rip+0x22767],0x0        # 0x44d968
  42b201:	je     0x42b2f7
  42b207:	call   rsi
  42b209:	lea    rcx,[rax+0x60]
  42b20d:	lea    rdx,[rip+0x759c]        # 0x4327b0
  42b214:	call   0x42aa80
  42b219:	mov    rax,QWORD PTR [rip+0x1b320]        # 0x446540
  42b220:	mov    rcx,QWORD PTR [rip+0xe29]        # 0x42c050
  42b227:	lea    rdx,[rip+0xfffffffffffdfe12]        # 0x40b040
  42b22e:	mov    r8,rdi
  42b231:	mov    rax,QWORD PTR [rax]
  42b234:	mov    QWORD PTR [rsp+0x50],rax
  42b239:	mov    rax,QWORD PTR [rip+0x1b300]        # 0x446540
  42b240:	mov    eax,DWORD PTR [rax+0x8]
  42b243:	mov    DWORD PTR [rsp+0x58],eax
  42b247:	call   0x40b0b0
  42b24c:	mov    rcx,QWORD PTR [rip+0x1b1cd]        # 0x446420
  42b253:	lea    rdx,[rip+0xfffffffffffdbc26]        # 0x406e80
  42b25a:	call   0x403900
  42b25f:	mov    rax,QWORD PTR [rip+0x1b40a]        # 0x446670
  42b266:	cmp    DWORD PTR [rax],0x0
  42b269:	je     0x42b288
  42b26b:	mov    rax,QWORD PTR [rip+0x1b22e]        # 0x4464a0
  42b272:	cmp    DWORD PTR [rax],0x0
  42b275:	je     0x42b340
  42b27b:	cmp    DWORD PTR [rip+0x225e6],0x0        # 0x44d868
  42b282:	je     0x42b35c
  42b288:	mov    rcx,r14
  42b28b:	call   0x41d800
  42b290:	jmp    0x42ae71
  42b295:	mov    DWORD PTR [rip+0xdc1],0x0        # 0x42c060
  42b29f:	mov    rdx,rbx
  42b2a2:	jmp    0x42ab4b
  42b2a7:	call   0x41a410
  42b2ac:	jmp    0x42adde
  42b2b1:	lea    rcx,[rip+0x74df]        # 0x432797
  42b2b8:	call   0x41d140
  42b2bd:	mov    rbx,rax
  42b2c0:	mov    rsi,rdx
  42b2c3:	mov    rcx,r15
  42b2c6:	call   0x41d800
  42b2cb:	mov    rcx,rbx
  42b2ce:	mov    rdx,rsi
  42b2d1:	sub    rdx,0x1
  42b2d5:	jne    0x42b465
  42b2db:	call   0x4241f0
  42b2e0:	cmp    DWORD PTR [rax],0xffffffff
  42b2e3:	mov    rsi,rax
  42b2e6:	je     0x42b419
  42b2ec:	mov    ecx,DWORD PTR [rip+0x2260e]        # 0x44d900
  42b2f2:	call   0x42a708
  42b2f7:	call   0x403a80
  42b2fc:	test   rax,rax
  42b2ff:	jne    0x42b207
  42b305:	jmp    0x42af09
  42b30a:	call   QWORD PTR [rip+0x26440]        # 0x451750
  42b310:	lea    rcx,[rax+0x60]
  42b314:	lea    rdx,[rip+0x729d]        # 0x4325b8
  42b31b:	mov    r8,rsi
  42b31e:	call   0x42aa80
  42b323:	jmp    0x42abda
  42b328:	lea    rcx,[rip+0x7441]        # 0x432770
  42b32f:	call   0x41d140
  42b334:	lea    rcx,[rip+0x7470]        # 0x4327ab
  42b33b:	call   0x41d9b0
  42b340:	call   rsi
  42b342:	lea    rcx,[rax+0x60]
  42b346:	lea    rdx,[rip+0x74b3]        # 0x432800
  42b34d:	call   0x42aa80
  42b352:	call   0x415270
  42b357:	jmp    0x42b288
  42b35c:	mov    ecx,0x1
  42b361:	call   0x40e1b0
  42b366:	test   eax,eax
  42b368:	je     0x42b288
  42b36e:	mov    DWORD PTR [rip+0x224f0],0x1        # 0x44d868
  42b378:	jmp    0x42b288
  42b37d:	call   QWORD PTR [rip+0x263cd]        # 0x451750
  42b383:	lea    rcx,[rax+0x30]
  42b387:	lea    rdx,[rip+0x7252]        # 0x4325e0
  42b38e:	call   0x42aa80
  42b393:	jmp    0x42af4c
  42b398:	mov    rbx,QWORD PTR [rip+0x263b1]        # 0x451750
  42b39f:	call   rbx
  42b3a1:	lea    rcx,[rax+0x60]
  42b3a5:	lea    rdx,[rip+0x734c]        # 0x4326f8
  42b3ac:	mov    r8,r12
  42b3af:	call   0x42aa80
  42b3b4:	call   rbx
  42b3b6:	lea    rcx,[rax+0x60]
  42b3ba:	lea    rdx,[rip+0x721f]        # 0x4325e0
  42b3c1:	call   0x42aa80
  42b3c6:	mov    ecx,0x1
  42b3cb:	call   0x42a708
  42b3d0:	lea    rax,[rip+0x70d4]        # 0x4324ab
  42b3d7:	lea    rsi,[rbx+0x8]
  42b3db:	mov    QWORD PTR [rbx],rax
  42b3de:	mov    rbp,rax
  42b3e1:	jmp    0x42ad56
  42b3e6:	call   QWORD PTR [rip+0x26364]        # 0x451750
  42b3ec:	lea    rcx,[rax+0x60]
  42b3f0:	lea    rdx,[rip+0x735f]        # 0x432756
  42b3f7:	mov    r8,r12
  42b3fa:	call   0x42aa80
  42b3ff:	mov    ecx,0x1
  42b404:	call   0x42a708
  42b409:	mov    rcx,rax
  42b40c:	jmp    0x42b2d1
  42b411:	mov    rcx,rax
  42b414:	jmp    0x42b198
  42b419:	mov    rbx,QWORD PTR [rip+0x26330]        # 0x451750
  42b420:	call   rbx
  42b422:	lea    rcx,[rax+0x30]
  42b426:	call   0x42a6f0
  42b42b:	mov    rsi,QWORD PTR [rsi+0x8]
  42b42f:	call   rbx
  42b431:	lea    rcx,[rax+0x60]
  42b435:	lea    rdx,[rip+0x7407]        # 0x432843
  42b43c:	mov    r8,rsi
  42b43f:	call   0x42aa80
  42b444:	call   rbx
  42b446:	lea    rcx,[rax+0x60]
  42b44a:	lea    rdx,[rip+0x73f6]        # 0x432847
  42b451:	call   0x42aa80
  42b456:	mov    DWORD PTR [rip+0x224a0],0x1        # 0x44d900
  42b460:	jmp    0x42b2ec
  42b465:	call   0x4241f0
  42b46a:	call   0x41d820
  42b46f:	call   0x4241e8
  42b474:	lea    rax,[rip+0x73dd]        # 0x432858
  42b47b:	lea    r9,[rip+0x7bee]        # 0x433070
  42b482:	lea    r8,[rip+0x73c7]        # 0x432850
  42b489:	lea    rcx,[rip+0x632b]        # 0x4317bb
  42b490:	mov    edx,0xef1
  42b495:	mov    QWORD PTR [rsp+0x20],rax
  42b49a:	call   0x41d170
  42b49f:	mov    rbx,rax
  42b4a2:	call   0x4241e8
  42b4a7:	mov    rcx,rbx
  42b4aa:	call   0x425720
  42b4af:	mov    rbx,rax
  42b4b2:	call   0x4241e8
  42b4b7:	mov    rcx,rbx
  42b4ba:	call   0x425720
  42b4bf:	lea    rcx,[rip+0x72e5]        # 0x4327ab
  42b4c6:	call   0x41d9b0
  42b4cb:	mov    rcx,QWORD PTR [rip+0x21e6e]        # 0x44d340
  42b4d2:	call   0x405bd0
  42b4d7:	mov    rcx,QWORD PTR [rip+0x21e62]        # 0x44d340
  42b4de:	call   0x405880
  42b4e3:	jmp    0x42b1e3
  42b4e8:	mov    rbx,rax
  42b4eb:	mov    rsi,rdx
  42b4ee:	call   0x4241e8
  42b4f3:	jmp    0x42b2c3
  42b4f8:	call   0x4241f0
  42b4fd:	call   0x41d820
  42b502:	call   0x4241e8
  42b507:	jmp    0x42ae71
  42b50c:	mov    rbx,rax
  42b50f:	mov    rsi,rdx
  42b512:	call   0x4241e8
  42b517:	jmp    0x42b2c3
  42b51c:	nop
  42b51d:	nop
  42b51e:	nop
  42b51f:	nop
  42b520:	sub    rsp,0x38
  42b524:	lea    rax,[rip+0xb20d]        # 0x436738
  42b52b:	lea    r9,[rip+0xbbae]        # 0x4370e0
  42b532:	lea    r8,[rip+0xb172]        # 0x4366ab
  42b539:	lea    rcx,[rip+0xb186]        # 0x4366c6
  42b540:	mov    edx,0x10a
  42b545:	mov    QWORD PTR [rsp+0x20],rax
  42b54a:	call   0x41d170
  42b54f:	nop
  42b550:	sub    rsp,0x38
  42b554:	lea    rax,[rip+0xbd4d]        # 0x4372a8
  42b55b:	lea    r9,[rip+0xbf7e]        # 0x4374e0
  42b562:	lea    r8,[rip+0xbd17]        # 0x437280
  42b569:	lea    rcx,[rip+0xbd2b]        # 0x43729b
  42b570:	mov    edx,0x5e
  42b575:	mov    QWORD PTR [rsp+0x20],rax
  42b57a:	call   0x41d170
  42b57f:	nop
  42b580:	sub    rsp,0x38
  42b584:	lea    rax,[rip+0xc435]        # 0x4379c0
  42b58b:	lea    r9,[rip+0xe26e]        # 0x439800
  42b592:	lea    r8,[rip+0xc3df]        # 0x437978
  42b599:	lea    rcx,[rip+0xc3f3]        # 0x437993
  42b5a0:	mov    edx,0x12a9
  42b5a5:	mov    QWORD PTR [rsp+0x20],rax
  42b5aa:	call   0x41d170
  42b5af:	nop
  42b5b0:	sub    rsp,0x38
  42b5b4:	lea    rax,[rip+0xc5ae]        # 0x437b69
  42b5bb:	lea    r9,[rip+0xe2fe]        # 0x4398c0
  42b5c2:	lea    r8,[rip+0xc3af]        # 0x437978
  42b5c9:	lea    rcx,[rip+0xc3c3]        # 0x437993
  42b5d0:	mov    edx,0xbf7
  42b5d5:	mov    QWORD PTR [rsp+0x20],rax
  42b5da:	call   0x41d170
  42b5df:	nop
  42b5e0:	sub    rsp,0x38
  42b5e4:	lea    rax,[rip+0xf605]        # 0x43abf0
  42b5eb:	lea    r9,[rip+0xf64e]        # 0x43ac40
  42b5f2:	lea    r8,[rip+0xf5c7]        # 0x43abc0
  42b5f9:	lea    rcx,[rip+0xf5db]        # 0x43abdb
  42b600:	mov    edx,0x5b
  42b605:	mov    QWORD PTR [rsp+0x20],rax
  42b60a:	call   0x41d170
  42b60f:	nop
  42b610:	(bad)  
  42b611:	(bad)  
  42b612:	(bad)  
  42b613:	(bad)  
  42b614:	(bad)  
  42b615:	(bad)  
  42b616:	(bad)  
  42b617:	inc    DWORD PTR [rax]
  42b619:	add    BYTE PTR [rax],al
  42b61b:	add    BYTE PTR [rax],al
  42b61d:	add    BYTE PTR [rax],al
  42b61f:	add    bh,bh
  42b621:	(bad)  
  42b622:	(bad)  
  42b623:	(bad)  
  42b624:	(bad)  
  42b625:	(bad)  
  42b626:	(bad)  
  42b627:	inc    DWORD PTR [rax]
  42b629:	add    BYTE PTR [rax],al
  42b62b:	add    BYTE PTR [rax],al
  42b62d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000042c000 <.data>:
  42c000:	or     al,BYTE PTR [rax]
	...
  42c00e:	add    BYTE PTR [rax],al
  42c010:	(bad)  
  42c011:	(bad)  
  42c012:	(bad)  
  42c013:	(bad)  
  42c014:	(bad)  
  42c015:	(bad)  
  42c016:	(bad)  
  42c017:	(bad)  
  42c018:	(bad)  
  42c019:	(bad)  
  42c01a:	(bad)  
  42c01b:	(bad)  
  42c01c:	(bad)  
  42c01d:	(bad)  
  42c01e:	(bad)  
  42c01f:	(bad)  
  42c020:	(bad)  
  42c021:	(bad)  
  42c022:	(bad)  
  42c023:	inc    DWORD PTR [rax]
	...
  42c03d:	add    BYTE PTR [rax],al
  42c03f:	add    al,ah
  42c041:	xor    al,0x43
  42c043:	add    BYTE PTR [rax],al
  42c045:	add    BYTE PTR [rax],al
  42c047:	add    cl,ch
  42c049:	xor    al,0x43
	...
  42c057:	add    al,al
  42c059:	outs   dx,BYTE PTR ds:[rsi]
  42c05a:	add    BYTE PTR [rax],al
  42c05d:	add    BYTE PTR [rax],al
  42c05f:	add    BYTE PTR [rcx],al
	...
  42c069:	add    BYTE PTR [eax],r8b
  42c06d:	add    BYTE PTR [rax],al
  42c06f:	add    BYTE PTR [rax+0x67],al
  42c072:	add    BYTE PTR [rax],r8b
  42c075:	add    BYTE PTR [rax],al
  42c077:	add    al,dl
  42c079:	rex.B
  42c07a:	rex.X add BYTE PTR [rax],al
  42c07d:	add    BYTE PTR [rax],al
  42c07f:	add    BYTE PTR [rcx],al
	...
  42c08d:	add    BYTE PTR [rax],al
  42c08f:	add    bh,bh
  42c091:	(bad)  
  42c092:	(bad)  
  42c093:	inc    DWORD PTR [rax]
	...
  42c09d:	add    BYTE PTR [rax],al
  42c09f:	add    BYTE PTR [rdx],ah
  42c0a1:	pop    QWORD PTR [rbx+0x0]
  42c0a4:	add    BYTE PTR [rax],al
  42c0a6:	add    BYTE PTR [rax],al
  42c0a8:	(bad)  
  42c0a9:	(bad)  
  42c0aa:	(bad)  
  42c0ab:	inc    DWORD PTR [rax]
  42c0ad:	add    BYTE PTR [rax],al
  42c0af:	add    bh,bh
  42c0b1:	(bad)  
  42c0b2:	(bad)  
  42c0b3:	inc    DWORD PTR [rax]
	...
  42c0bd:	add    BYTE PTR [rax],al
  42c0bf:	add    BYTE PTR [rcx],al
	...
  42c0cd:	add    BYTE PTR [rax],al
  42c0cf:	add    BYTE PTR [rax+0x43ac],ah
  42c0d5:	add    BYTE PTR [rax],al
  42c0d7:	add    BYTE PTR [rax+0x43ac],ah
	...
  42c0fd:	add    BYTE PTR [rax],al
  42c0ff:	add    dl,cl
  42c101:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c105:	add    BYTE PTR [rax],al
  42c107:	add    dh,cl
  42c109:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c10d:	add    BYTE PTR [rax],al
  42c10f:	add    dl,dl
  42c111:	xor    eax,DWORD PTR [rax+rax*1+0x0]
	...
  42c13d:	add    BYTE PTR [rax],al
  42c13f:	add    dh,dl
  42c141:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c145:	add    BYTE PTR [rax],al
  42c147:	add    BYTE PTR [rax],al
  42c149:	add    BYTE PTR [rax],al
  42c14b:	add    BYTE PTR [rax+0x0],al
  42c14e:	add    BYTE PTR [rax],al
  42c150:	fidiv  DWORD PTR [rbx]
  42c152:	add    BYTE PTR [rax],r8b
  42c155:	add    BYTE PTR [rax],al
  42c157:	add    BYTE PTR [rax+0x0],al
  42c15a:	add    BYTE PTR [rax],al
  42c15c:	add    BYTE PTR [rax],al
  42c15f:	add    dh,bl
  42c161:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c165:	add    BYTE PTR [rax],al
  42c167:	add    BYTE PTR [rax+0x40000000],al
  42c16d:	add    BYTE PTR [rax],al
  42c16f:	add    dl,ah
  42c171:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c175:	add    BYTE PTR [rax],al
  42c177:	add    al,al
  42c179:	add    BYTE PTR [rax],al
  42c17b:	add    BYTE PTR [rax+0x0],al
  42c17e:	add    BYTE PTR [rax],al
  42c180:	out    0x33,al
  42c182:	add    BYTE PTR [rax],r8b
  42c185:	add    BYTE PTR [rax],al
  42c187:	add    BYTE PTR [rax],al
  42c189:	add    DWORD PTR [rax],eax
  42c18b:	add    BYTE PTR [rax+0x0],al
  42c18e:	add    BYTE PTR [rax],al
  42c190:	(bad)  
  42c191:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c195:	add    BYTE PTR [rax],al
  42c197:	add    BYTE PTR [rax+0x1],al
  42c19a:	add    BYTE PTR [rax],al
  42c19c:	add    BYTE PTR [rax],al
  42c19f:	add    dl,cl
  42c1a1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1a5:	add    BYTE PTR [rax],al
  42c1a7:	add    BYTE PTR [rax+0x40000001],al
  42c1ad:	add    BYTE PTR [rax],al
  42c1af:	add    dh,cl
  42c1b1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1b5:	add    BYTE PTR [rax],al
  42c1b7:	add    al,al
  42c1b9:	add    DWORD PTR [rax],eax
  42c1bb:	add    BYTE PTR [rax+0x0],al
  42c1be:	add    BYTE PTR [rax],al
  42c1c0:	out    dx,al
  42c1c1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1c5:	add    BYTE PTR [rax],al
  42c1c7:	add    BYTE PTR [rax],al
  42c1c9:	add    al,BYTE PTR [rax]
  42c1cb:	add    BYTE PTR [rax+0x0],al
  42c1ce:	add    BYTE PTR [rax],al
  42c1d0:	icebp  
  42c1d1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1d5:	add    BYTE PTR [rax],al
  42c1d7:	add    BYTE PTR [rax+0x2],al
  42c1da:	add    BYTE PTR [rax],al
  42c1dc:	add    BYTE PTR [rax],al
  42c1df:	add    ah,dh
  42c1e1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1e5:	add    BYTE PTR [rax],al
  42c1e7:	add    BYTE PTR [rax+0x40000002],al
  42c1ed:	add    BYTE PTR [rax],al
  42c1ef:	add    al,bh
  42c1f1:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c1f5:	add    BYTE PTR [rax],al
  42c1f7:	add    al,al
  42c1f9:	add    al,BYTE PTR [rax]
  42c1fb:	add    BYTE PTR [rax+0x0],al
  42c1fe:	add    BYTE PTR [rax],al
  42c200:	cld    
  42c201:	xor    eax,DWORD PTR [rax+rax*1+0x0]
  42c205:	add    BYTE PTR [rax],al
  42c207:	add    BYTE PTR [rax],al
  42c209:	add    eax,DWORD PTR [rax]
  42c20b:	add    BYTE PTR [rax+0x0],al
  42c20e:	add    BYTE PTR [rax],al
  42c210:	add    BYTE PTR [rsp+rax*2],dh
  42c213:	add    BYTE PTR [rax],al
  42c215:	add    BYTE PTR [rax],al
  42c217:	add    BYTE PTR [rax+0x3],al
  42c21a:	add    BYTE PTR [rax],al
  42c21c:	add    BYTE PTR [rax],al
  42c21f:	add    BYTE PTR [rsp+rsi*1],al
  42c222:	add    BYTE PTR [rax],r8b
  42c225:	add    BYTE PTR [rax],al
  42c227:	add    BYTE PTR [rax+0x40000003],al
  42c22d:	add    BYTE PTR [rax],al
  42c22f:	add    BYTE PTR [rax],cl
  42c231:	xor    al,0x44
  42c233:	add    BYTE PTR [rax],al
  42c235:	add    BYTE PTR [rax],al
  42c237:	add    al,al
  42c239:	add    eax,DWORD PTR [rax]
  42c23b:	add    BYTE PTR [rax+0x0],al
  42c23e:	add    BYTE PTR [rax],al
  42c240:	shl    BYTE PTR [rbx],cl
  42c242:	add    BYTE PTR [rax],r8b
  42c245:	add    BYTE PTR [rax],al
  42c247:	add    BYTE PTR [rax],al
  42c249:	add    al,0x0
  42c24b:	add    BYTE PTR [rax+0x0],al
  42c24e:	add    BYTE PTR [rax],al
  42c250:	or     al,0x34
  42c252:	add    BYTE PTR [rax],r8b
  42c255:	add    BYTE PTR [rax],al
  42c257:	add    BYTE PTR [rax+0x4],al
  42c25a:	add    BYTE PTR [rax],al
  42c25c:	and    BYTE PTR [rax],al
  42c25e:	add    BYTE PTR [rax],al
  42c260:	adc    esi,DWORD PTR [rsp+rax*2]
  42c263:	add    BYTE PTR [rax],al
  42c265:	add    BYTE PTR [rax],al
  42c267:	add    BYTE PTR [rax+0x4],ah
  42c26a:	add    BYTE PTR [rax],al
  42c26c:	and    BYTE PTR [rax],al
  42c26e:	add    BYTE PTR [rax],al
  42c270:	(bad)  
  42c271:	xor    al,0x44
  42c273:	add    BYTE PTR [rax],al
  42c275:	add    BYTE PTR [rax],al
  42c277:	add    BYTE PTR [rax+0x20000004],al
  42c27d:	add    BYTE PTR [rax],al
  42c27f:	add    BYTE PTR [rcx],bl
  42c281:	xor    al,0x44
  42c283:	add    BYTE PTR [rax],al
  42c285:	add    BYTE PTR [rax],al
  42c287:	add    BYTE PTR [rax+0x20000004],ah
  42c28d:	add    BYTE PTR [rax],al
  42c28f:	add    BYTE PTR [rsp+rsi*1],bl
  42c292:	add    BYTE PTR [rax],r8b
  42c295:	add    BYTE PTR [rax],al
  42c297:	add    al,al
  42c299:	add    al,0x0
  42c29b:	add    BYTE PTR [rax],ah
  42c29d:	add    BYTE PTR [rax],al
  42c29f:	add    BYTE PTR [rdi],bl
  42c2a1:	xor    al,0x44
  42c2a3:	add    BYTE PTR [rax],al
  42c2a5:	add    BYTE PTR [rax],al
  42c2a7:	add    al,ah
  42c2a9:	add    al,0x0
  42c2ab:	add    BYTE PTR [rax],ah
  42c2ad:	add    BYTE PTR [rax],al
  42c2af:	add    BYTE PTR [rdx],ah
  42c2b1:	xor    al,0x44
  42c2b3:	add    BYTE PTR [rax],al
  42c2b5:	add    BYTE PTR [rax],al
  42c2b7:	add    BYTE PTR [rax],al
  42c2b9:	add    eax,0x200000
  42c2be:	add    BYTE PTR [rax],al
  42c2c0:	and    eax,0x4434
  42c2c5:	add    BYTE PTR [rax],al
  42c2c7:	add    BYTE PTR [rax],ah
  42c2c9:	add    eax,0x500000
  42c2ce:	add    BYTE PTR [rax],al
  42c2d0:	sub    DWORD PTR [rsp+rax*2],esi
  42c2d3:	add    BYTE PTR [rax],al
  42c2d5:	add    BYTE PTR [rax],al
  42c2d7:	add    BYTE PTR [rax+0x5],dh
  42c2da:	add    BYTE PTR [rax],al
  42c2dc:	push   rax
  42c2dd:	add    BYTE PTR [rax],al
  42c2df:	add    BYTE PTR [rip+0x4434],ch        # 0x430719
  42c2e5:	add    BYTE PTR [rax],al
  42c2e7:	add    al,al
  42c2e9:	add    eax,0x500000
  42c2ee:	add    BYTE PTR [rax],al
  42c2f0:	xor    DWORD PTR [rsp+rax*2],esi
  42c2f3:	add    BYTE PTR [rax],al
  42c2f5:	add    BYTE PTR [rax],al
  42c2f7:	add    BYTE PTR [rax],dl
  42c2f9:	(bad)  
  42c2fa:	add    BYTE PTR [rax],al
  42c2fc:	push   rax
  42c2fd:	add    BYTE PTR [rax],al
  42c2ff:	add    BYTE PTR [rip+0x4434],dh        # 0x430739
  42c305:	add    BYTE PTR [rax],al
  42c307:	add    BYTE PTR [rax+0x6],ah
  42c30a:	add    BYTE PTR [rax],al
  42c30c:	push   rax
  42c30d:	add    BYTE PTR [rax],al
  42c30f:	add    BYTE PTR [rcx],bh
  42c311:	xor    al,0x44
  42c313:	add    BYTE PTR [rax],al
  42c315:	add    BYTE PTR [rax],al
  42c317:	add    BYTE PTR [rax+0x50000006],dh
  42c31d:	add    BYTE PTR [rax],al
  42c31f:	add    BYTE PTR [rip+0x4434],bh        # 0x430759
  42c325:	add    BYTE PTR [rax],al
  42c327:	add    BYTE PTR [rax],al
  42c329:	(bad)  
  42c32a:	add    BYTE PTR [rax],al
  42c32c:	push   rax
  42c32d:	add    BYTE PTR [rax],al
  42c32f:	add    BYTE PTR [rcx+0x34],al
  42c332:	add    BYTE PTR [rax],r8b
  42c335:	add    BYTE PTR [rax],al
  42c337:	add    BYTE PTR [rax+0x7],dl
  42c33a:	add    BYTE PTR [rax],al
  42c33c:	push   rax
  42c33d:	add    BYTE PTR [rax],al
  42c33f:	add    BYTE PTR [rbp+0x34],al
  42c342:	add    BYTE PTR [rax],r8b
  42c345:	add    BYTE PTR [rax],al
  42c347:	add    BYTE PTR [rax+0x20000007],ah
  42c34d:	add    BYTE PTR [rax],al
  42c34f:	add    BYTE PTR [rbx+0x34],cl
  42c352:	add    BYTE PTR [rax],r8b
  42c355:	add    BYTE PTR [rax],al
  42c357:	add    al,al
  42c359:	(bad)  
  42c35a:	add    BYTE PTR [rax],al
  42c35c:	and    BYTE PTR [rax],al
  42c35e:	add    BYTE PTR [rax],al
  42c360:	push   rcx
  42c361:	xor    al,0x44
  42c363:	add    BYTE PTR [rax],al
  42c365:	add    BYTE PTR [rax],al
  42c367:	add    al,ah
  42c369:	(bad)  
  42c36a:	add    BYTE PTR [rax],al
  42c36c:	and    BYTE PTR [rax],al
  42c36e:	add    BYTE PTR [rax],al
  42c370:	push   rsi
  42c371:	xor    al,0x44
  42c373:	add    BYTE PTR [rax],al
  42c375:	add    BYTE PTR [rax],al
  42c377:	add    BYTE PTR [rax],al
  42c379:	or     BYTE PTR [rax],al
  42c37b:	add    BYTE PTR [rax],ah
  42c37d:	add    BYTE PTR [rax],al
  42c37f:	add    BYTE PTR [rsp+rsi*1+0x44],bl
  42c383:	add    BYTE PTR [rax],al
  42c385:	add    BYTE PTR [rax],al
  42c387:	add    BYTE PTR [rax],ah
  42c389:	or     BYTE PTR [rax],al
  42c38b:	add    BYTE PTR [rax],ah
  42c38d:	add    BYTE PTR [rax],al
  42c38f:	add    BYTE PTR [rdx+0x34],ah
  42c392:	add    BYTE PTR [rax],r8b
  42c395:	add    BYTE PTR [rax],al
  42c397:	add    BYTE PTR [rax+0x8],al
  42c39a:	add    BYTE PTR [rax],al
  42c39c:	and    BYTE PTR [rax],al
  42c39e:	add    BYTE PTR [rax],al
  42c3a0:	push   0x4434
  42c3a5:	add    BYTE PTR [rax],al
  42c3a7:	add    BYTE PTR [rax+0x8],ah
  42c3aa:	add    BYTE PTR [rax],al
  42c3ac:	and    BYTE PTR [rax],al
  42c3ae:	add    BYTE PTR [rax],al
  42c3b0:	outs   dx,BYTE PTR ds:[rsi]
  42c3b1:	xor    al,0x44
  42c3b3:	add    BYTE PTR [rax],al
  42c3b5:	add    BYTE PTR [rax],al
  42c3b7:	add    BYTE PTR [rax+0x20000008],al
  42c3bd:	add    BYTE PTR [rax],al
  42c3bf:	add    BYTE PTR [rdx+0x34],dh
  42c3c2:	add    BYTE PTR [rax],r8b
  42c3c5:	add    BYTE PTR [rax],al
  42c3c7:	add    BYTE PTR [rax-0x7ffffff8],ah
  42c3cd:	add    BYTE PTR [rax],al
  42c3cf:	add    BYTE PTR [rdi+0x34],dh
  42c3d2:	add    BYTE PTR [rax],r8b
  42c3d5:	add    BYTE PTR [rax],al
  42c3d7:	add    BYTE PTR [rax],ah
  42c3d9:	or     DWORD PTR [rax],eax
  42c3db:	add    BYTE PTR [rax+0x7c000000],al
  42c3e1:	xor    al,0x44
  42c3e3:	add    BYTE PTR [rax],al
  42c3e5:	add    BYTE PTR [rax],al
  42c3e7:	add    BYTE PTR [rax-0x7ffffff7],ah
  42c3ed:	add    BYTE PTR [rax],al
  42c3ef:	add    BYTE PTR [rcx+0x4434],al
  42c3f5:	add    BYTE PTR [rax],al
  42c3f7:	add    BYTE PTR [rax],ah
  42c3f9:	or     al,BYTE PTR [rax]
  42c3fb:	add    BYTE PTR [rax-0x7a000000],al
  42c401:	xor    al,0x44
  42c403:	add    BYTE PTR [rax],al
  42c405:	add    BYTE PTR [rax],al
  42c407:	add    BYTE PTR [rax-0x7ffffff6],ah
  42c40d:	add    BYTE PTR [rax],al
  42c40f:	add    BYTE PTR [rbx+0x4434],cl
  42c415:	add    BYTE PTR [rax],al
  42c417:	add    BYTE PTR [rax],ah
  42c419:	or     eax,DWORD PTR [rax]
  42c41b:	add    BYTE PTR [rax-0x70000000],al
  42c421:	xor    al,0x44
  42c423:	add    BYTE PTR [rax],al
  42c425:	add    BYTE PTR [rax],al
  42c427:	add    BYTE PTR [rax-0x7ffffff5],ah
  42c42d:	add    BYTE PTR [rax],al
  42c42f:	add    BYTE PTR [rbp+0x4434],dl
  42c435:	add    BYTE PTR [rax],al
  42c437:	add    BYTE PTR [rax],ah
  42c439:	or     al,0x0
  42c43b:	add    BYTE PTR [rax-0x66000000],al
  42c441:	xor    al,0x44
  42c443:	add    BYTE PTR [rax],al
  42c445:	add    BYTE PTR [rax],al
  42c447:	add    BYTE PTR [rax-0x7ffffff4],ah
  42c44d:	add    BYTE PTR [rax],al
  42c44f:	add    BYTE PTR [rdi+0x4434],bl
  42c455:	add    BYTE PTR [rax],al
  42c457:	add    BYTE PTR [rax],ah
  42c459:	or     eax,0x800000
  42c45e:	add    BYTE PTR [rax],al
  42c460:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42c461:	xor    al,0x44
  42c463:	add    BYTE PTR [rax],al
  42c465:	add    BYTE PTR [rax],al
  42c467:	add    BYTE PTR [rax-0x7ffffff3],ah
  42c46d:	add    BYTE PTR [rax],al
  42c46f:	add    BYTE PTR [rdx+0x4434],ch
  42c475:	add    BYTE PTR [rax],al
  42c477:	add    BYTE PTR [rax],ah
  42c479:	(bad)  
  42c47a:	add    BYTE PTR [rax],al
  42c47c:	add    BYTE PTR [rax],0x0
  42c47f:	add    BYTE PTR [rax+0x4434],dh
  42c485:	add    BYTE PTR [rax],al
  42c487:	add    BYTE PTR [rax-0x7ffffff2],ah
  42c48d:	add    BYTE PTR [rax],al
  42c48f:	add    BYTE PTR [rsi+0x4434],dh
  42c495:	add    BYTE PTR [rax],al
  42c497:	add    BYTE PTR [rax],ah
  42c499:	sldt   WORD PTR [rax]
  42c49c:	add    BYTE PTR [rax],0x0
  42c49f:	add    BYTE PTR [rsp+rsi*1+0x44],bh
  42c4a6:	add    BYTE PTR [rax],al
  42c4a8:	movabs al,ds:0xc20000008000000f
  42c4b1:	xor    al,0x44
  42c4b3:	add    BYTE PTR [rax],al
  42c4b5:	add    BYTE PTR [rax],al
  42c4b7:	add    BYTE PTR [rax],ah
  42c4b9:	adc    BYTE PTR [rax],al
  42c4bb:	add    BYTE PTR [rax-0x38000000],al
  42c4c1:	xor    al,0x44
  42c4c3:	add    BYTE PTR [rax],al
  42c4c5:	add    BYTE PTR [rax],al
  42c4c7:	add    BYTE PTR [rax+0x20000010],ah
	...
  42c4fd:	add    BYTE PTR [rax],al
  42c4ff:	add    dh,bl
  42c501:	xor    al,0x44
  42c503:	add    BYTE PTR [rax],al
  42c505:	add    BYTE PTR [rax],al
  42c507:	add    dl,ah
  42c509:	xor    al,0x44
  42c50b:	add    BYTE PTR [rax],al
  42c50d:	add    BYTE PTR [rax],al
  42c50f:	add    dh,ah
  42c511:	xor    al,0x44
	...
  42c53f:	add    dl,ch
  42c541:	xor    al,0x44
	...
  42c54b:	add    BYTE PTR [rax+0x0],al
  42c54e:	add    BYTE PTR [rax],al
  42c550:	out    dx,al
  42c551:	xor    al,0x44
  42c553:	add    BYTE PTR [rax],al
  42c555:	add    BYTE PTR [rax],al
  42c557:	add    BYTE PTR [rax+0x0],al
  42c55a:	add    BYTE PTR [rax],al
  42c55c:	add    BYTE PTR [rax],al
  42c55f:	add    dl,dh
  42c561:	xor    al,0x44
  42c563:	add    BYTE PTR [rax],al
  42c565:	add    BYTE PTR [rax],al
  42c567:	add    BYTE PTR [rax+0x40000000],al
  42c56d:	add    BYTE PTR [rax],al
  42c56f:	add    dh,dh
  42c571:	xor    al,0x44
  42c573:	add    BYTE PTR [rax],al
  42c575:	add    BYTE PTR [rax],al
  42c577:	add    al,al
  42c579:	add    BYTE PTR [rax],al
  42c57b:	add    BYTE PTR [rax+0x0],al
  42c57e:	add    BYTE PTR [rax],al
  42c580:	cli    
  42c581:	xor    al,0x44
  42c583:	add    BYTE PTR [rax],al
  42c585:	add    BYTE PTR [rax],al
  42c587:	add    BYTE PTR [rax],al
  42c589:	add    DWORD PTR [rax],eax
  42c58b:	add    BYTE PTR [rax+0x0],al
  42c58e:	add    BYTE PTR [rax],al
  42c590:	(bad)  
  42c591:	xor    al,0x44
  42c593:	add    BYTE PTR [rax],al
  42c595:	add    BYTE PTR [rax],al
  42c597:	add    BYTE PTR [rax+0x1],al
  42c59a:	add    BYTE PTR [rax],al
  42c59c:	add    BYTE PTR [rax],al
  42c59f:	add    dh,bl
  42c5a1:	xor    al,0x44
  42c5a3:	add    BYTE PTR [rax],al
  42c5a5:	add    BYTE PTR [rax],al
  42c5a7:	add    BYTE PTR [rax+0x40000001],al
  42c5ad:	add    BYTE PTR [rax],al
  42c5af:	add    dl,ah
  42c5b1:	xor    al,0x44
  42c5b3:	add    BYTE PTR [rax],al
  42c5b5:	add    BYTE PTR [rax],al
  42c5b7:	add    al,al
  42c5b9:	add    DWORD PTR [rax],eax
  42c5bb:	add    BYTE PTR [rax+0x0],al
  42c5be:	add    BYTE PTR [rax],al
  42c5c0:	add    dh,BYTE PTR [rip+0x44]        # 0x42c60a
  42c5c6:	add    BYTE PTR [rax],al
  42c5c8:	add    BYTE PTR [rdx],al
  42c5ca:	add    BYTE PTR [rax],al
  42c5cc:	add    BYTE PTR [rax],al
  42c5cf:	add    BYTE PTR [rip+0x4435],al        # 0x430a0a
  42c5d5:	add    BYTE PTR [rax],al
  42c5d7:	add    BYTE PTR [rax+0x2],al
  42c5da:	add    BYTE PTR [rax],al
  42c5dc:	add    BYTE PTR [rax],al
  42c5df:	add    BYTE PTR [rax],cl
  42c5e1:	xor    eax,0x44
  42c5e6:	add    BYTE PTR [rax],al
  42c5e8:	add    BYTE PTR [rdx],0x0
  42c5eb:	add    BYTE PTR [rax+0x0],al
  42c5ee:	add    BYTE PTR [rax],al
  42c5f0:	or     al,0x35
  42c5f2:	add    BYTE PTR [rax],r8b
  42c5f5:	add    BYTE PTR [rax],al
  42c5f7:	add    al,al
  42c5f9:	add    al,BYTE PTR [rax]
  42c5fb:	add    BYTE PTR [rax+0x0],al
  42c5fe:	add    BYTE PTR [rax],al
  42c600:	adc    BYTE PTR [rip+0x44],dh        # 0x42c64a
  42c606:	add    BYTE PTR [rax],al
  42c608:	add    BYTE PTR [rbx],al
  42c60a:	add    BYTE PTR [rax],al
  42c60c:	add    BYTE PTR [rax],al
  42c60f:	add    BYTE PTR [rsi*1+0x44],dl
  42c616:	add    BYTE PTR [rax],al
  42c618:	rex add eax,DWORD PTR [rax]
  42c61b:	add    BYTE PTR [rax+0x0],al
  42c61e:	add    BYTE PTR [rax],al
  42c620:	sbb    BYTE PTR [rip+0x44],dh        # 0x42c66a
  42c626:	add    BYTE PTR [rax],al
  42c628:	add    BYTE PTR [rbx],0x0
  42c62b:	add    BYTE PTR [rax+0x0],al
  42c62e:	add    BYTE PTR [rax],al
  42c630:	sbb    al,0x35
  42c632:	add    BYTE PTR [rax],r8b
  42c635:	add    BYTE PTR [rax],al
  42c637:	add    al,al
  42c639:	add    eax,DWORD PTR [rax]
  42c63b:	add    BYTE PTR [rax+0x0],al
  42c63e:	add    BYTE PTR [rax],al
  42c640:	out    0x34,al
  42c642:	add    BYTE PTR [rax],r8b
  42c645:	add    BYTE PTR [rax],al
  42c647:	add    BYTE PTR [rax],al
  42c649:	add    al,0x0
  42c64b:	add    BYTE PTR [rax+0x0],al
  42c64e:	add    BYTE PTR [rax],al
  42c650:	and    BYTE PTR [rip+0x44],dh        # 0x42c69a
  42c656:	add    BYTE PTR [rax],al
  42c658:	add    al,0x0
  42c65b:	add    BYTE PTR [rax],ah
  42c65d:	add    BYTE PTR [rax],al
  42c65f:	add    BYTE PTR [rdi],ah
  42c661:	xor    eax,0x44
  42c666:	add    BYTE PTR [rax],al
  42c668:	(bad)  
  42c669:	add    al,0x0
  42c66b:	add    BYTE PTR [rax],ah
  42c66d:	add    BYTE PTR [rax],al
  42c66f:	add    BYTE PTR [rdx],ch
  42c671:	xor    eax,0x44
  42c676:	add    BYTE PTR [rax],al
  42c678:	add    BYTE PTR [rax+rax*1],0x0
  42c67c:	and    BYTE PTR [rax],al
  42c67e:	add    BYTE PTR [rax],al
  42c680:	sub    eax,0x4435
  42c685:	add    BYTE PTR [rax],al
  42c687:	add    BYTE PTR [rax+0x20000004],ah
  42c68d:	add    BYTE PTR [rax],al
  42c68f:	add    BYTE PTR [rax],dh
  42c691:	xor    eax,0x44
  42c696:	add    BYTE PTR [rax],al
  42c698:	rol    BYTE PTR [rax+rax*1],0x0
  42c69c:	and    BYTE PTR [rax],al
  42c69e:	add    BYTE PTR [rax],al
  42c6a0:	xor    esi,DWORD PTR [rip+0x44]        # 0x42c6ea
  42c6a6:	add    BYTE PTR [rax],al
  42c6a8:	loopne 0x42c6ae
  42c6aa:	add    BYTE PTR [rax],al
  42c6ac:	and    BYTE PTR [rax],al
  42c6ae:	add    BYTE PTR [rax],al
  42c6b0:	ss xor eax,0x44
  42c6b6:	add    BYTE PTR [rax],al
  42c6b8:	add    BYTE PTR [rip+0x200000],al        # 0x62c6be
  42c6be:	add    BYTE PTR [rax],al
  42c6c0:	cmp    DWORD PTR [rip+0x44],esi        # 0x42c70a
  42c6c6:	add    BYTE PTR [rax],al
  42c6c8:	and    BYTE PTR [rip+0x500000],al        # 0x92c6ce
  42c6ce:	add    BYTE PTR [rax],al
  42c6d0:	cmp    eax,0x4435
  42c6d5:	add    BYTE PTR [rax],al
  42c6d7:	add    BYTE PTR [rax+0x5],dh
  42c6da:	add    BYTE PTR [rax],al
  42c6dc:	push   rax
  42c6dd:	add    BYTE PTR [rax],al
  42c6df:	add    BYTE PTR [rcx+0x35],al
  42c6e2:	add    BYTE PTR [rax],r8b
  42c6e5:	add    BYTE PTR [rax],al
  42c6e7:	add    al,al
  42c6e9:	add    eax,0x500000
  42c6ee:	add    BYTE PTR [rax],al
  42c6f0:	rex.RB xor eax,0x44
  42c6f6:	add    BYTE PTR [rax],al
  42c6f8:	adc    BYTE PTR [rsi],al
  42c6fa:	add    BYTE PTR [rax],al
  42c6fc:	push   rax
  42c6fd:	add    BYTE PTR [rax],al
  42c6ff:	add    BYTE PTR [rcx+0x35],cl
  42c702:	add    BYTE PTR [rax],r8b
  42c705:	add    BYTE PTR [rax],al
  42c707:	add    BYTE PTR [rax+0x6],ah
  42c70a:	add    BYTE PTR [rax],al
  42c70c:	push   rax
  42c70d:	add    BYTE PTR [rax],al
  42c70f:	add    BYTE PTR [rbp+0x35],cl
  42c712:	add    BYTE PTR [rax],r8b
  42c715:	add    BYTE PTR [rax],al
  42c717:	add    BYTE PTR [rax+0x50000006],dh
  42c71d:	add    BYTE PTR [rax],al
  42c71f:	add    BYTE PTR [rcx+0x35],dl
  42c722:	add    BYTE PTR [rax],r8b
  42c725:	add    BYTE PTR [rax],al
  42c727:	add    BYTE PTR [rax],al
  42c729:	(bad)  
  42c72a:	add    BYTE PTR [rax],al
  42c72c:	push   rax
  42c72d:	add    BYTE PTR [rax],al
  42c72f:	add    BYTE PTR [rbp+0x35],dl
  42c732:	add    BYTE PTR [rax],r8b
  42c735:	add    BYTE PTR [rax],al
  42c737:	add    BYTE PTR [rax+0x7],dl
  42c73a:	add    BYTE PTR [rax],al
  42c73c:	push   rax
  42c73d:	add    BYTE PTR [rax],al
  42c73f:	add    BYTE PTR [rcx+0x35],bl
  42c742:	add    BYTE PTR [rax],r8b
  42c745:	add    BYTE PTR [rax],al
  42c747:	add    BYTE PTR [rax+0x20000007],ah
  42c74d:	add    BYTE PTR [rax],al
  42c74f:	add    BYTE PTR [rdi+0x35],bl
  42c752:	add    BYTE PTR [rax],r8b
  42c755:	add    BYTE PTR [rax],al
  42c757:	add    al,al
  42c759:	(bad)  
  42c75a:	add    BYTE PTR [rax],al
  42c75c:	and    BYTE PTR [rax],al
  42c75e:	add    BYTE PTR [rax],al
  42c760:	gs xor eax,0x44
  42c766:	add    BYTE PTR [rax],al
  42c768:	loopne 0x42c771
  42c76a:	add    BYTE PTR [rax],al
  42c76c:	and    BYTE PTR [rax],al
  42c76e:	add    BYTE PTR [rax],al
  42c770:	push   0x35
  42c772:	add    BYTE PTR [rax],r8b
  42c775:	add    BYTE PTR [rax],al
  42c777:	add    BYTE PTR [rax],al
  42c779:	or     BYTE PTR [rax],al
  42c77b:	add    BYTE PTR [rax],ah
  42c77d:	add    BYTE PTR [rax],al
  42c77f:	add    BYTE PTR [rax+0x35],dh
  42c782:	add    BYTE PTR [rax],r8b
  42c785:	add    BYTE PTR [rax],al
  42c787:	add    BYTE PTR [rax],ah
  42c789:	or     BYTE PTR [rax],al
  42c78b:	add    BYTE PTR [rax],ah
  42c78d:	add    BYTE PTR [rax],al
  42c78f:	add    BYTE PTR [rsi+0x35],dh
  42c792:	add    BYTE PTR [rax],r8b
  42c795:	add    BYTE PTR [rax],al
  42c797:	add    BYTE PTR [rax+0x8],al
  42c79a:	add    BYTE PTR [rax],al
  42c79c:	and    BYTE PTR [rax],al
  42c79e:	add    BYTE PTR [rax],al
  42c7a0:	jl     0x42c7d7
  42c7a2:	add    BYTE PTR [rax],r8b
  42c7a5:	add    BYTE PTR [rax],al
  42c7a7:	add    BYTE PTR [rax+0x8],ah
  42c7aa:	add    BYTE PTR [rax],al
  42c7ac:	and    BYTE PTR [rax],al
  42c7ae:	add    BYTE PTR [rax],al
  42c7b0:	(bad)  
  42c7b1:	xor    eax,0x44
  42c7b6:	add    BYTE PTR [rax],al
  42c7b8:	or     BYTE PTR [rax],0x0
  42c7bb:	add    BYTE PTR [rax],ah
  42c7bd:	add    BYTE PTR [rax],al
  42c7bf:	add    BYTE PTR [rsi+0x4435],al
  42c7c5:	add    BYTE PTR [rax],al
  42c7c7:	add    BYTE PTR [rax-0x7ffffff8],ah
  42c7cd:	add    BYTE PTR [rax],al
  42c7cf:	add    BYTE PTR [rbx+0x4435],cl
  42c7d5:	add    BYTE PTR [rax],al
  42c7d7:	add    BYTE PTR [rax],ah
  42c7d9:	or     DWORD PTR [rax],eax
  42c7db:	add    BYTE PTR [rax-0x70000000],al
  42c7e1:	xor    eax,0x44
  42c7e6:	add    BYTE PTR [rax],al
  42c7e8:	movabs al,ds:0x9500000080000009
  42c7f1:	xor    eax,0x44
  42c7f6:	add    BYTE PTR [rax],al
  42c7f8:	and    BYTE PTR [rdx],cl
  42c7fa:	add    BYTE PTR [rax],al
  42c7fc:	add    BYTE PTR [rax],0x0
  42c7ff:	add    BYTE PTR [rdx+0x4435],bl
  42c805:	add    BYTE PTR [rax],al
  42c807:	add    BYTE PTR [rax-0x7ffffff6],ah
  42c80d:	add    BYTE PTR [rax],al
  42c80f:	add    BYTE PTR [rdi+0x4435],bl
  42c815:	add    BYTE PTR [rax],al
  42c817:	add    BYTE PTR [rax],ah
  42c819:	or     eax,DWORD PTR [rax]
  42c81b:	add    BYTE PTR [rax-0x5c000000],al
  42c821:	xor    eax,0x44
  42c826:	add    BYTE PTR [rax],al
  42c828:	movabs al,ds:0xa90000008000000b
  42c831:	xor    eax,0x44
  42c836:	add    BYTE PTR [rax],al
  42c838:	and    BYTE PTR [rax+rax*1],cl
  42c83b:	add    BYTE PTR [rax-0x52000000],al
  42c841:	xor    eax,0x44
  42c846:	add    BYTE PTR [rax],al
  42c848:	movabs al,ds:0xb30000008000000c
  42c851:	xor    eax,0x44
  42c856:	add    BYTE PTR [rax],al
  42c858:	and    BYTE PTR [rip+0x800000],cl        # 0xc2c85e
  42c85e:	add    BYTE PTR [rax],al
  42c860:	mov    eax,0x4435
  42c865:	add    BYTE PTR [rax],al
  42c867:	add    BYTE PTR [rax-0x7ffffff3],ah
  42c86d:	add    BYTE PTR [rax],al
  42c86f:	add    BYTE PTR [rsi+0x4435],bh
  42c875:	add    BYTE PTR [rax],al
  42c877:	add    BYTE PTR [rax],ah
  42c879:	(bad)  
  42c87a:	add    BYTE PTR [rax],al
  42c87c:	add    BYTE PTR [rax],0x0
  42c87f:	add    ah,al
  42c881:	xor    eax,0x44
  42c886:	add    BYTE PTR [rax],al
  42c888:	movabs al,ds:0xca0000008000000e
  42c891:	xor    eax,0x44
  42c896:	add    BYTE PTR [rax],al
  42c898:	and    BYTE PTR [rdi],cl
  42c89a:	add    BYTE PTR [rax],al
  42c89c:	add    BYTE PTR [rax],0x0
  42c89f:	add    al,dl
  42c8a1:	xor    eax,0x44
  42c8a6:	add    BYTE PTR [rax],al
  42c8a8:	movabs al,ds:0xd60000008000000f
  42c8b1:	xor    eax,0x44
  42c8b6:	add    BYTE PTR [rax],al
  42c8b8:	and    BYTE PTR [rax],dl
  42c8ba:	add    BYTE PTR [rax],al
  42c8bc:	add    BYTE PTR [rax],0x0
  42c8bf:	add    ah,bl
  42c8c1:	xor    eax,0x44
  42c8c6:	add    BYTE PTR [rax],al
  42c8c8:	movabs al,ds:0xe200000020000010
  42c8d1:	xor    eax,0x44
  42c8d6:	add    BYTE PTR [rax],al
  42c8d8:	rcl    BYTE PTR [rax],0x0
  42c8db:	add    BYTE PTR [rax-0x18000000],al
  42c8e1:	xor    eax,0x44
  42c8e6:	add    BYTE PTR [rax],al
  42c8e8:	rex adc DWORD PTR [rax],eax
  42c8eb:	add    BYTE PTR [rax-0x12000000],al
  42c8f1:	xor    eax,0x44
  42c8f6:	add    BYTE PTR [rax],al
  42c8f8:	rcl    BYTE PTR [rcx],0x0
  42c8fb:	add    BYTE PTR [rax-0xc000000],al
  42c901:	xor    eax,0x44
  42c906:	add    BYTE PTR [rax],al
  42c908:	adc    al,BYTE PTR [rax]
  42c90b:	add    BYTE PTR [rax-0x6000000],al
  42c911:	xor    eax,0x44
  42c916:	add    BYTE PTR [rax],al
  42c918:	rcl    BYTE PTR [rdx],0x0
  42c91b:	add    BYTE PTR [rax+0x0],al
  42c921:	add    BYTE PTR ss:[rax],r8b
  42c925:	add    BYTE PTR [rax],al
  42c927:	add    BYTE PTR [rax+0x13],al
  42c92a:	add    BYTE PTR [rax],al
  42c92c:	add    BYTE PTR [rax],0x0
  42c92f:	add    BYTE PTR [rsi],al
  42c931:	add    BYTE PTR ss:[rax],r8b
  42c935:	add    BYTE PTR [rax],al
  42c937:	add    al,al
  42c939:	adc    eax,DWORD PTR [rax]
  42c93b:	add    BYTE PTR [rax+0xc000000],al
  42c941:	add    BYTE PTR ss:[rax],r8b
  42c945:	add    BYTE PTR [rax],al
  42c947:	add    BYTE PTR [rax+0x14],al
  42c94a:	add    BYTE PTR [rax],al
  42c94c:	add    BYTE PTR [rax],0x0
  42c94f:	add    BYTE PTR [rdx],dl
  42c951:	add    BYTE PTR ss:[rax],r8b
  42c955:	add    BYTE PTR [rax],al
  42c957:	add    al,al
  42c959:	adc    al,0x0
  42c95b:	add    BYTE PTR [rax+0x18000000],al
  42c961:	add    BYTE PTR ss:[rax],r8b
  42c965:	add    BYTE PTR [rax],al
  42c967:	add    BYTE PTR [rax+0x15],al
  42c96a:	add    BYTE PTR [rax],al
  42c96c:	add    BYTE PTR [rax],0x0
  42c96f:	add    BYTE PTR [rsi],bl
  42c971:	add    BYTE PTR ss:[rax],r8b
  42c975:	add    BYTE PTR [rax],al
  42c977:	add    al,al
  42c979:	adc    eax,0x800000
  42c97e:	add    BYTE PTR [rax],al
  42c980:	and    eax,0x4436
  42c985:	add    BYTE PTR [rax],al
  42c987:	add    BYTE PTR [rax+0x16],al
  42c98a:	add    BYTE PTR [rax],al
  42c98c:	add    BYTE PTR [rax],0x0
  42c98f:	add    BYTE PTR [rsi+rsi*1],ch
  42c992:	add    BYTE PTR [rax],r8b
  42c995:	add    BYTE PTR [rax],al
  42c997:	add    al,al
  42c999:	(bad)  
  42c99a:	add    BYTE PTR [rax],al
  42c99c:	add    BYTE PTR [rax],0x0
  42c99f:	add    BYTE PTR [rbx],dh
  42c9a1:	add    BYTE PTR ss:[rax],r8b
  42c9a5:	add    BYTE PTR [rax],al
  42c9a7:	add    BYTE PTR [rax+0x17],al
  42c9aa:	add    BYTE PTR [rax],al
  42c9ac:	add    BYTE PTR [rax],0x0
  42c9af:	add    BYTE PTR [rdx],bh
  42c9b1:	add    BYTE PTR ss:[rax],r8b
  42c9b5:	add    BYTE PTR [rax],al
  42c9b7:	add    al,al
  42c9b9:	(bad)  
  42c9ba:	add    BYTE PTR [rax],al
  42c9bc:	add    BYTE PTR [rax],0x0
  42c9bf:	add    BYTE PTR [rcx+0x36],al
  42c9c2:	add    BYTE PTR [rax],r8b
  42c9c5:	add    BYTE PTR [rax],al
  42c9c7:	add    BYTE PTR [rax+0x18],al
  42c9ca:	add    BYTE PTR [rax],al
  42c9cc:	add    BYTE PTR [rax],0x0
	...
  42c9ff:	add    BYTE PTR [rcx+0x36],ah
  42ca02:	add    BYTE PTR [rax],r8b
  42ca05:	add    BYTE PTR [rax],al
  42ca07:	add    BYTE PTR [rbp+0x36],ah
  42ca0a:	add    BYTE PTR [rax],r8b
  42ca0d:	add    BYTE PTR [rax],al
  42ca0f:	add    BYTE PTR [rcx+0x36],ch
  42ca12:	add    BYTE PTR [rax],r8b
	...
  42ca3d:	add    BYTE PTR [rax],al
  42ca3f:	add    BYTE PTR [rbp+0x36],ch
  42ca42:	add    BYTE PTR [rax],r8b
  42ca45:	add    BYTE PTR [rax],al
  42ca47:	add    BYTE PTR [rax],al
  42ca49:	add    BYTE PTR [rax],al
  42ca4b:	add    BYTE PTR [rax+0x0],al
  42ca4e:	add    BYTE PTR [rax],al
  42ca50:	jno    0x42ca88
  42ca52:	add    BYTE PTR [rax],r8b
  42ca55:	add    BYTE PTR [rax],al
  42ca57:	add    BYTE PTR [rax+0x0],al
  42ca5a:	add    BYTE PTR [rax],al
  42ca5c:	add    BYTE PTR [rax],al
  42ca5f:	add    BYTE PTR [rbp+0x36],dh
  42ca62:	add    BYTE PTR [rax],r8b
  42ca65:	add    BYTE PTR [rax],al
  42ca67:	add    BYTE PTR [rax+0x40000000],al
  42ca6d:	add    BYTE PTR [rax],al
  42ca6f:	add    BYTE PTR [rcx+0x36],bh
  42ca72:	add    BYTE PTR [rax],r8b
  42ca75:	add    BYTE PTR [rax],al
  42ca77:	add    al,al
  42ca79:	add    BYTE PTR [rax],al
  42ca7b:	add    BYTE PTR [rax+0x0],al
  42ca7e:	add    BYTE PTR [rax],al
  42ca80:	jge    0x42cab8
  42ca82:	add    BYTE PTR [rax],r8b
  42ca85:	add    BYTE PTR [rax],al
  42ca87:	add    BYTE PTR [rax],al
  42ca89:	add    DWORD PTR [rax],eax
  42ca8b:	add    BYTE PTR [rax+0x0],al
  42ca8e:	add    BYTE PTR [rax],al
  42ca90:	xor    DWORD PTR [rsi],0x44
  42ca96:	add    BYTE PTR [rax],al
  42ca98:	rex add DWORD PTR [rax],eax
  42ca9b:	add    BYTE PTR [rax+0x0],al
  42ca9e:	add    BYTE PTR [rax],al
  42caa0:	(bad)  
  42caa1:	add    BYTE PTR ss:[rax],r8b
  42caa5:	add    BYTE PTR [rax],al
  42caa7:	add    BYTE PTR [rax+0x40000001],al
  42caad:	add    BYTE PTR [rax],al
  42caaf:	add    BYTE PTR [rbp+0x36],ah
  42cab2:	add    BYTE PTR [rax],r8b
  42cab5:	add    BYTE PTR [rax],al
  42cab7:	add    al,al
  42cab9:	add    DWORD PTR [rax],eax
  42cabb:	add    BYTE PTR [rax+0x0],al
  42cabe:	add    BYTE PTR [rax],al
  42cac0:	test   DWORD PTR [rsi],esi
  42cac2:	add    BYTE PTR [rax],r8b
  42cac5:	add    BYTE PTR [rax],al
  42cac7:	add    BYTE PTR [rax],al
  42cac9:	add    al,BYTE PTR [rax]
  42cacb:	add    BYTE PTR [rax+0x0],al
  42cace:	add    BYTE PTR [rax],al
  42cad0:	mov    BYTE PTR [rsi],dh
  42cad2:	add    BYTE PTR [rax],r8b
  42cad5:	add    BYTE PTR [rax],al
  42cad7:	add    BYTE PTR [rax+0x2],al
  42cada:	add    BYTE PTR [rax],al
  42cadc:	add    BYTE PTR [rax],al
  42cadf:	add    BYTE PTR [rbx+0x4436],cl
  42cae5:	add    BYTE PTR [rax],al
  42cae7:	add    BYTE PTR [rax+0x40000002],al
  42caed:	add    BYTE PTR [rax],al
  42caef:	add    BYTE PTR [rdi+0x4436],cl
  42caf5:	add    BYTE PTR [rax],al
  42caf7:	add    al,al
  42caf9:	add    al,BYTE PTR [rax]
  42cafb:	add    BYTE PTR [rax+0x0],al
  42cafe:	add    BYTE PTR [rax],al
  42cb00:	xchg   ebx,eax
  42cb01:	add    BYTE PTR ss:[rax],r8b
  42cb05:	add    BYTE PTR [rax],al
  42cb07:	add    BYTE PTR [rax],al
  42cb09:	add    eax,DWORD PTR [rax]
  42cb0b:	add    BYTE PTR [rax+0x0],al
  42cb0e:	add    BYTE PTR [rax],al
  42cb10:	xchg   edi,eax
  42cb11:	add    BYTE PTR ss:[rax],r8b
  42cb15:	add    BYTE PTR [rax],al
  42cb17:	add    BYTE PTR [rax+0x3],al
  42cb1a:	add    BYTE PTR [rax],al
  42cb1c:	add    BYTE PTR [rax],al
  42cb1f:	add    BYTE PTR [rbx+0x4436],bl
  42cb25:	add    BYTE PTR [rax],al
  42cb27:	add    BYTE PTR [rax+0x40000003],al
  42cb2d:	add    BYTE PTR [rax],al
  42cb2f:	add    BYTE PTR [rdi+0x4436],bl
  42cb35:	add    BYTE PTR [rax],al
  42cb37:	add    al,al
  42cb39:	add    eax,DWORD PTR [rax]
  42cb3b:	add    BYTE PTR [rax+0x0],al
  42cb3e:	add    BYTE PTR [rax],al
  42cb40:	imul   esi,DWORD PTR [rsi],0x44
  42cb46:	add    BYTE PTR [rax],al
  42cb48:	add    BYTE PTR [rax+rax*1],al
  42cb4b:	add    BYTE PTR [rax+0x0],al
  42cb4e:	add    BYTE PTR [rax],al
  42cb50:	movabs ds:0x4000000000004436,eax
  42cb59:	add    al,0x0
  42cb5b:	add    BYTE PTR [rax],ah
  42cb5d:	add    BYTE PTR [rax],al
  42cb5f:	add    BYTE PTR [rdx+0x4436],ch
  42cb65:	add    BYTE PTR [rax],al
  42cb67:	add    BYTE PTR [rax+0x4],ah
  42cb6a:	add    BYTE PTR [rax],al
  42cb6c:	and    BYTE PTR [rax],al
  42cb6e:	add    BYTE PTR [rax],al
  42cb70:	lods   eax,DWORD PTR ds:[rsi]
  42cb71:	add    BYTE PTR ss:[rax],r8b
  42cb75:	add    BYTE PTR [rax],al
  42cb77:	add    BYTE PTR [rax+0x20000004],al
  42cb7d:	add    BYTE PTR [rax],al
  42cb7f:	add    BYTE PTR [rax+0x4436],dh
  42cb85:	add    BYTE PTR [rax],al
  42cb87:	add    BYTE PTR [rax+0x20000004],ah
  42cb8d:	add    BYTE PTR [rax],al
  42cb8f:	add    BYTE PTR [rbx+0x4436],dh
  42cb95:	add    BYTE PTR [rax],al
  42cb97:	add    al,al
  42cb99:	add    al,0x0
  42cb9b:	add    BYTE PTR [rax],ah
  42cb9d:	add    BYTE PTR [rax],al
  42cb9f:	add    BYTE PTR [rsi+0x4436],dh
  42cba5:	add    BYTE PTR [rax],al
  42cba7:	add    al,ah
  42cba9:	add    al,0x0
  42cbab:	add    BYTE PTR [rax],ah
  42cbad:	add    BYTE PTR [rax],al
  42cbaf:	add    BYTE PTR [rcx+0x4436],bh
  42cbb5:	add    BYTE PTR [rax],al
  42cbb7:	add    BYTE PTR [rax],al
  42cbb9:	add    eax,0x200000
  42cbbe:	add    BYTE PTR [rax],al
  42cbc0:	mov    esp,0x4436
  42cbc5:	add    BYTE PTR [rax],al
  42cbc7:	add    BYTE PTR [rax],ah
  42cbc9:	add    eax,0x500000
  42cbce:	add    BYTE PTR [rax],al
  42cbd0:	shl    BYTE PTR [rsi],0x44
  42cbd3:	add    BYTE PTR [rax],al
  42cbd5:	add    BYTE PTR [rax],al
  42cbd7:	add    BYTE PTR [rax+0x5],dh
  42cbda:	add    BYTE PTR [rax],al
  42cbdc:	push   rax
  42cbdd:	add    BYTE PTR [rax],al
  42cbdf:	add    ah,al
  42cbe1:	add    BYTE PTR ss:[rax],r8b
  42cbe5:	add    BYTE PTR [rax],al
  42cbe7:	add    al,al
  42cbe9:	add    eax,0x500000
  42cbee:	add    BYTE PTR [rax],al
  42cbf0:	enter  0x4436,0x0
  42cbf4:	add    BYTE PTR [rax],al
  42cbf6:	add    BYTE PTR [rax],al
  42cbf8:	adc    BYTE PTR [rsi],al
  42cbfa:	add    BYTE PTR [rax],al
  42cbfc:	push   rax
  42cbfd:	add    BYTE PTR [rax],al
  42cbff:	add    ah,cl
  42cc01:	add    BYTE PTR ss:[rax],r8b
  42cc05:	add    BYTE PTR [rax],al
  42cc07:	add    BYTE PTR [rax+0x6],ah
  42cc0a:	add    BYTE PTR [rax],al
  42cc0c:	push   rax
  42cc0d:	add    BYTE PTR [rax],al
  42cc0f:	add    al,dl
  42cc11:	add    BYTE PTR ss:[rax],r8b
  42cc15:	add    BYTE PTR [rax],al
  42cc17:	add    BYTE PTR [rax+0x50000006],dh
  42cc1d:	add    BYTE PTR [rax],al
  42cc1f:	add    ah,dl
  42cc21:	add    BYTE PTR ss:[rax],r8b
  42cc25:	add    BYTE PTR [rax],al
  42cc27:	add    BYTE PTR [rax],al
  42cc29:	(bad)  
  42cc2a:	add    BYTE PTR [rax],al
  42cc2c:	push   rax
  42cc2d:	add    BYTE PTR [rax],al
  42cc2f:	add    al,bl
  42cc31:	add    BYTE PTR ss:[rax],r8b
  42cc35:	add    BYTE PTR [rax],al
  42cc37:	add    BYTE PTR [rax+0x7],dl
  42cc3a:	add    BYTE PTR [rax],al
  42cc3c:	push   rax
  42cc3d:	add    BYTE PTR [rax],al
  42cc3f:	add    ah,bl
  42cc41:	add    BYTE PTR ss:[rax],r8b
  42cc45:	add    BYTE PTR [rax],al
  42cc47:	add    BYTE PTR [rax+0x20000007],ah
  42cc4d:	add    BYTE PTR [rax],al
  42cc4f:	add    dl,ah
  42cc51:	add    BYTE PTR ss:[rax],r8b
  42cc55:	add    BYTE PTR [rax],al
  42cc57:	add    al,al
  42cc59:	(bad)  
  42cc5a:	add    BYTE PTR [rax],al
  42cc5c:	and    BYTE PTR [rax],al
  42cc5e:	add    BYTE PTR [rax],al
  42cc60:	call   0x43109b
  42cc65:	add    BYTE PTR [rax],al
  42cc67:	add    al,ah
  42cc69:	(bad)  
  42cc6a:	add    BYTE PTR [rax],al
  42cc6c:	and    BYTE PTR [rax],al
  42cc6e:	add    BYTE PTR [rax],al
  42cc70:	in     eax,dx
  42cc71:	add    BYTE PTR ss:[rax],r8b
  42cc75:	add    BYTE PTR [rax],al
  42cc77:	add    BYTE PTR [rax],al
  42cc79:	or     BYTE PTR [rax],al
  42cc7b:	add    BYTE PTR [rax],ah
  42cc7d:	add    BYTE PTR [rax],al
  42cc7f:	add    bl,dh
  42cc81:	add    BYTE PTR ss:[rax],r8b
  42cc85:	add    BYTE PTR [rax],al
  42cc87:	add    BYTE PTR [rax],ah
  42cc89:	or     BYTE PTR [rax],al
  42cc8b:	add    BYTE PTR [rax],ah
  42cc8d:	add    BYTE PTR [rax],al
  42cc8f:	add    cl,bh
  42cc91:	add    BYTE PTR ss:[rax],r8b
  42cc95:	add    BYTE PTR [rax],al
  42cc97:	add    BYTE PTR [rax+0x8],al
  42cc9a:	add    BYTE PTR [rax],al
  42cc9c:	and    BYTE PTR [rax],al
  42cc9e:	add    BYTE PTR [rax],al
  42cca0:	push   QWORD PTR [rsi]
  42cca2:	add    BYTE PTR [rax],r8b
  42cca5:	add    BYTE PTR [rax],al
  42cca7:	add    BYTE PTR [rax+0x8],ah
  42ccaa:	add    BYTE PTR [rax],al
  42ccac:	and    BYTE PTR [rax],al
  42ccae:	add    BYTE PTR [rax],al
  42ccb0:	add    eax,0x4437
  42ccb5:	add    BYTE PTR [rax],al
  42ccb7:	add    BYTE PTR [rax+0x20000008],al
  42ccbd:	add    BYTE PTR [rax],al
  42ccbf:	add    BYTE PTR [rcx],cl
  42ccc1:	(bad)  
  42ccc2:	add    BYTE PTR [rax],r8b
  42ccc5:	add    BYTE PTR [rax],al
  42ccc7:	add    BYTE PTR [rax-0x7ffffff8],ah
  42cccd:	add    BYTE PTR [rax],al
  42cccf:	add    BYTE PTR [rsi],cl
  42ccd1:	(bad)  
  42ccd2:	add    BYTE PTR [rax],r8b
  42ccd5:	add    BYTE PTR [rax],al
  42ccd7:	add    BYTE PTR [rax],ah
  42ccd9:	or     DWORD PTR [rax],eax
  42ccdb:	add    BYTE PTR [rax+0x13000000],al
  42cce1:	(bad)  
  42cce2:	add    BYTE PTR [rax],r8b
  42cce5:	add    BYTE PTR [rax],al
  42cce7:	add    BYTE PTR [rax-0x7ffffff7],ah
  42cced:	add    BYTE PTR [rax],al
  42ccef:	add    BYTE PTR [rax],bl
  42ccf1:	(bad)  
  42ccf2:	add    BYTE PTR [rax],r8b
  42ccf5:	add    BYTE PTR [rax],al
  42ccf7:	add    BYTE PTR [rax],ah
  42ccf9:	or     al,BYTE PTR [rax]
  42ccfb:	add    BYTE PTR [rax+0x1d000000],al
  42cd01:	(bad)  
  42cd02:	add    BYTE PTR [rax],r8b
  42cd05:	add    BYTE PTR [rax],al
  42cd07:	add    BYTE PTR [rax-0x7ffffff6],ah
  42cd0d:	add    BYTE PTR [rax],al
  42cd0f:	add    BYTE PTR [rdx],ah
  42cd11:	(bad)  
  42cd12:	add    BYTE PTR [rax],r8b
  42cd15:	add    BYTE PTR [rax],al
  42cd17:	add    BYTE PTR [rax],ah
  42cd19:	or     eax,DWORD PTR [rax]
  42cd1b:	add    BYTE PTR [rax+0x27000000],al
  42cd21:	(bad)  
  42cd22:	add    BYTE PTR [rax],r8b
  42cd25:	add    BYTE PTR [rax],al
  42cd27:	add    BYTE PTR [rax-0x7ffffff5],ah
  42cd2d:	add    BYTE PTR [rax],al
  42cd2f:	add    BYTE PTR [rdi+rsi*1],ch
  42cd32:	add    BYTE PTR [rax],r8b
  42cd35:	add    BYTE PTR [rax],al
  42cd37:	add    BYTE PTR [rax],ah
  42cd39:	or     al,0x0
  42cd3b:	add    BYTE PTR [rax+0x31000000],al
  42cd41:	(bad)  
  42cd42:	add    BYTE PTR [rax],r8b
  42cd45:	add    BYTE PTR [rax],al
  42cd47:	add    BYTE PTR [rax-0x7ffffff4],ah
  42cd4d:	add    BYTE PTR [rax],al
  42cd4f:	add    BYTE PTR [rsi],dh
  42cd51:	(bad)  
  42cd52:	add    BYTE PTR [rax],r8b
  42cd55:	add    BYTE PTR [rax],al
  42cd57:	add    BYTE PTR [rax],ah
  42cd59:	or     eax,0x800000
  42cd5e:	add    BYTE PTR [rax],al
  42cd60:	cmp    esi,DWORD PTR [rdi]
  42cd62:	add    BYTE PTR [rax],r8b
  42cd65:	add    BYTE PTR [rax],al
  42cd67:	add    BYTE PTR [rax-0x7ffffff3],ah
  42cd6d:	add    BYTE PTR [rax],al
  42cd6f:	add    BYTE PTR [rcx+0x37],al
  42cd72:	add    BYTE PTR [rax],r8b
  42cd75:	add    BYTE PTR [rax],al
  42cd77:	add    BYTE PTR [rax],ah
  42cd79:	(bad)  
  42cd7a:	add    BYTE PTR [rax],al
  42cd7c:	add    BYTE PTR [rax],0x0
  42cd7f:	add    BYTE PTR [rdi+0x37],al
  42cd82:	add    BYTE PTR [rax],r8b
  42cd85:	add    BYTE PTR [rax],al
  42cd87:	add    BYTE PTR [rax-0x7ffffff2],ah
  42cd8d:	add    BYTE PTR [rax],al
  42cd8f:	add    BYTE PTR [rbp+0x37],cl
  42cd92:	add    BYTE PTR [rax],r8b
  42cd95:	add    BYTE PTR [rax],al
  42cd97:	add    BYTE PTR [rax],ah
  42cd99:	sldt   WORD PTR [rax]
  42cd9c:	add    BYTE PTR [rax],0x0
  42cd9f:	add    BYTE PTR [rbx+0x37],dl
  42cda2:	add    BYTE PTR [rax],r8b
  42cda5:	add    BYTE PTR [rax],al
  42cda7:	add    BYTE PTR [rax-0x7ffffff1],ah
  42cdad:	add    BYTE PTR [rax],al
  42cdaf:	add    BYTE PTR [rcx+0x37],bl
  42cdb2:	add    BYTE PTR [rax],r8b
  42cdb5:	add    BYTE PTR [rax],al
  42cdb7:	add    BYTE PTR [rax],ah
  42cdb9:	adc    BYTE PTR [rax],al
  42cdbb:	add    BYTE PTR [rax+0x5f000000],al
  42cdc1:	(bad)  
  42cdc2:	add    BYTE PTR [rax],r8b
  42cdc5:	add    BYTE PTR [rax],al
  42cdc7:	add    BYTE PTR [rax+0x20000010],ah
  42cdcd:	add    BYTE PTR [rax],al
  42cdcf:	add    BYTE PTR [rbp+0x37],ah
  42cdd2:	add    BYTE PTR [rax],r8b
  42cdd5:	add    BYTE PTR [rax],al
  42cdd7:	add    al,al
  42cdd9:	adc    BYTE PTR [rax],al
  42cddb:	add    BYTE PTR [rax+0x6b000000],al
  42cde1:	(bad)  
  42cde2:	add    BYTE PTR [rax],r8b
  42cde5:	add    BYTE PTR [rax],al
  42cde7:	add    BYTE PTR [rax+0x11],al
  42cdea:	add    BYTE PTR [rax],al
  42cdec:	add    BYTE PTR [rax],0x0
  42cdef:	add    BYTE PTR [rcx+0x37],dh
  42cdf2:	add    BYTE PTR [rax],r8b
  42cdf5:	add    BYTE PTR [rax],al
  42cdf7:	add    al,al
  42cdf9:	adc    DWORD PTR [rax],eax
  42cdfb:	add    BYTE PTR [rax+0x77000000],al
  42ce01:	(bad)  
  42ce02:	add    BYTE PTR [rax],r8b
  42ce05:	add    BYTE PTR [rax],al
  42ce07:	add    BYTE PTR [rax+0x12],al
  42ce0a:	add    BYTE PTR [rax],al
  42ce0c:	add    BYTE PTR [rax],0x0
  42ce0f:	add    BYTE PTR [rbp+0x37],bh
  42ce12:	add    BYTE PTR [rax],r8b
  42ce15:	add    BYTE PTR [rax],al
  42ce17:	add    al,al
  42ce19:	adc    al,BYTE PTR [rax]
  42ce1b:	add    BYTE PTR [rax-0x7d000000],al
  42ce21:	(bad)  
  42ce22:	add    BYTE PTR [rax],r8b
  42ce25:	add    BYTE PTR [rax],al
  42ce27:	add    BYTE PTR [rax+0x13],al
  42ce2a:	add    BYTE PTR [rax],al
  42ce2c:	add    BYTE PTR [rax],0x0
  42ce2f:	add    BYTE PTR [rcx+0x4437],cl
  42ce35:	add    BYTE PTR [rax],al
  42ce37:	add    al,al
  42ce39:	adc    eax,DWORD PTR [rax]
  42ce3b:	add    BYTE PTR [rax-0x71000000],al
  42ce41:	(bad)  
  42ce42:	add    BYTE PTR [rax],r8b
  42ce45:	add    BYTE PTR [rax],al
  42ce47:	add    BYTE PTR [rax+0x14],al
  42ce4a:	add    BYTE PTR [rax],al
  42ce4c:	add    BYTE PTR [rax],0x0
  42ce4f:	add    BYTE PTR [rbp+0x4437],dl
  42ce55:	add    BYTE PTR [rax],al
  42ce57:	add    al,al
  42ce59:	adc    al,0x0
  42ce5b:	add    BYTE PTR [rax-0x65000000],al
  42ce61:	(bad)  
  42ce62:	add    BYTE PTR [rax],r8b
  42ce65:	add    BYTE PTR [rax],al
  42ce67:	add    BYTE PTR [rax+0x15],al
  42ce6a:	add    BYTE PTR [rax],al
  42ce6c:	add    BYTE PTR [rax],0x0
  42ce6f:	add    BYTE PTR [rcx+0x4437],ah
  42ce75:	add    BYTE PTR [rax],al
  42ce77:	add    al,al
  42ce79:	adc    eax,0x800000
  42ce7e:	add    BYTE PTR [rax],al
  42ce80:	test   al,0x37
  42ce82:	add    BYTE PTR [rax],r8b
  42ce85:	add    BYTE PTR [rax],al
  42ce87:	add    BYTE PTR [rax+0x16],al
  42ce8a:	add    BYTE PTR [rax],al
  42ce8c:	add    BYTE PTR [rax],0x0
  42ce8f:	add    BYTE PTR [rdi+0x4437],ch
  42ce95:	add    BYTE PTR [rax],al
  42ce97:	add    al,al
  42ce99:	(bad)  
  42ce9a:	add    BYTE PTR [rax],al
  42ce9c:	add    BYTE PTR [rax],0x0
  42ce9f:	add    BYTE PTR [rsi+0x4437],dh
  42cea5:	add    BYTE PTR [rax],al
  42cea7:	add    BYTE PTR [rax+0x17],al
  42ceaa:	add    BYTE PTR [rax],al
  42ceac:	add    BYTE PTR [rax],0x0
  42ceaf:	add    BYTE PTR [rbp+0x4437],bh
  42ceb5:	add    BYTE PTR [rax],al
  42ceb7:	add    al,al
  42ceb9:	(bad)  
  42ceba:	add    BYTE PTR [rax],al
  42cebc:	add    BYTE PTR [rax],0x0
  42cebf:	add    ah,al
  42cec1:	(bad)  
  42cec2:	add    BYTE PTR [rax],r8b
  42cec5:	add    BYTE PTR [rax],al
  42cec7:	add    BYTE PTR [rax+0x18],al
  42ceca:	add    BYTE PTR [rax],al
  42cecc:	add    BYTE PTR [rax],0x0
  42cecf:	add    bl,cl
  42ced1:	(bad)  
  42ced2:	add    BYTE PTR [rax],r8b
  42ced5:	add    BYTE PTR [rax],al
  42ced7:	add    al,al
  42ced9:	sbb    BYTE PTR [rax],al
  42cedb:	add    BYTE PTR [rax-0x2d000000],al
  42cee1:	(bad)  
  42cee2:	add    BYTE PTR [rax],r8b
  42cee5:	add    BYTE PTR [rax],al
  42cee7:	add    BYTE PTR [rax+0x19],al
  42ceea:	add    BYTE PTR [rax],al
  42ceec:	add    BYTE PTR [rax],0x0
  42ceef:	add    bl,bl
  42cef1:	(bad)  
  42cef2:	add    BYTE PTR [rax],r8b
  42cef5:	add    BYTE PTR [rax],al
  42cef7:	add    al,al
  42cef9:	sbb    DWORD PTR [rax],eax
  42cefb:	add    BYTE PTR [rax-0x1d000000],al
  42cf01:	(bad)  
  42cf02:	add    BYTE PTR [rax],r8b
  42cf05:	add    BYTE PTR [rax],al
  42cf07:	add    BYTE PTR [rax+0x1a],al
  42cf0a:	add    BYTE PTR [rax],al
  42cf0c:	add    BYTE PTR [rax],0x0
  42cf0f:	add    bl,ch
  42cf11:	(bad)  
  42cf12:	add    BYTE PTR [rax],r8b
  42cf15:	add    BYTE PTR [rax],al
  42cf17:	add    al,al
  42cf19:	sbb    al,BYTE PTR [rax]
  42cf1b:	add    BYTE PTR [rax+0x0],al
  42cf1e:	add    BYTE PTR [rax],al
  42cf20:	repz (bad) 
  42cf22:	add    BYTE PTR [rax],r8b
  42cf25:	add    BYTE PTR [rax],al
  42cf27:	add    BYTE PTR [rax],al
  42cf29:	sbb    eax,DWORD PTR [rax]
  42cf2b:	add    BYTE PTR [rax+0x0],al
  42cf2e:	add    BYTE PTR [rax],al
  42cf30:	std    
  42cf31:	(bad)  
  42cf32:	add    BYTE PTR [rax],r8b
  42cf35:	add    BYTE PTR [rax],al
  42cf37:	add    BYTE PTR [rax+0x1b],al
  42cf3a:	add    BYTE PTR [rax],al
  42cf3c:	add    BYTE PTR [rax],0x0
  42cf3f:	add    BYTE PTR [rbx],al
  42cf41:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cf45:	add    BYTE PTR [rax],al
  42cf47:	add    al,al
  42cf49:	sbb    eax,DWORD PTR [rax]
  42cf4b:	add    BYTE PTR [rax+0x9000000],al
  42cf51:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cf55:	add    BYTE PTR [rax],al
  42cf57:	add    BYTE PTR [rax+0x1c],al
  42cf5a:	add    BYTE PTR [rax],al
  42cf5c:	add    BYTE PTR [rax],0x0
  42cf5f:	add    BYTE PTR [rdi],cl
  42cf61:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cf65:	add    BYTE PTR [rax],al
  42cf67:	add    al,al
  42cf69:	sbb    al,0x0
  42cf6b:	add    BYTE PTR [rax+0x15000000],al
  42cf71:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cf75:	add    BYTE PTR [rax],al
  42cf77:	add    BYTE PTR [rax+0x1d],al
  42cf7a:	add    BYTE PTR [rax],al
  42cf7c:	add    BYTE PTR [rax],0x0
  42cf7f:	add    BYTE PTR [rbx],bl
  42cf81:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cf85:	add    BYTE PTR [rax],al
  42cf87:	add    al,al
  42cf89:	sbb    eax,0x800000
  42cf8e:	add    BYTE PTR [rax],al
  42cf90:	and    DWORD PTR [rax],edi
  42cf92:	add    BYTE PTR [rax],r8b
  42cf95:	add    BYTE PTR [rax],al
  42cf97:	add    BYTE PTR [rax+0x1e],al
  42cf9a:	add    BYTE PTR [rax],al
  42cf9c:	add    BYTE PTR [rax],0x0
  42cf9f:	add    BYTE PTR [rdi],ah
  42cfa1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cfa5:	add    BYTE PTR [rax],al
  42cfa7:	add    al,al
  42cfa9:	(bad)  
  42cfaa:	add    BYTE PTR [rax],al
  42cfac:	add    BYTE PTR [rax],0x0
  42cfaf:	add    BYTE PTR [rip+0x4438],ch        # 0x4313ed
  42cfb5:	add    BYTE PTR [rax],al
  42cfb7:	add    BYTE PTR [rax+0x1f],al
  42cfba:	add    BYTE PTR [rax],al
  42cfbc:	add    BYTE PTR [rax],0x0
  42cfbf:	add    BYTE PTR [rbx],dh
  42cfc1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cfc5:	add    BYTE PTR [rax],al
  42cfc7:	add    al,al
  42cfc9:	(bad)  
  42cfca:	add    BYTE PTR [rax],al
  42cfcc:	add    BYTE PTR [rax],0x0
  42cfcf:	add    BYTE PTR [rcx],bh
  42cfd1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cfd5:	add    BYTE PTR [rax],al
  42cfd7:	add    BYTE PTR [rax+0x20],al
  42cfda:	add    BYTE PTR [rax],al
  42cfdc:	add    BYTE PTR [rax],0x0
  42cfdf:	add    BYTE PTR [rdi],bh
  42cfe1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cfe5:	add    BYTE PTR [rax],al
  42cfe7:	add    al,al
  42cfe9:	and    BYTE PTR [rax],al
  42cfeb:	add    BYTE PTR [rax+0x45000000],al
  42cff1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42cff5:	add    BYTE PTR [rax],al
  42cff7:	add    BYTE PTR [rax+0x21],al
  42cffa:	add    BYTE PTR [rax],al
  42cffc:	add    BYTE PTR [rax],0x0
  42cfff:	add    BYTE PTR [rbx+0x38],cl
  42d002:	add    BYTE PTR [rax],r8b
  42d005:	add    BYTE PTR [rax],al
  42d007:	add    al,al
  42d009:	and    DWORD PTR [rax],eax
  42d00b:	add    BYTE PTR [rax+0x51000000],al
  42d011:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d015:	add    BYTE PTR [rax],al
  42d017:	add    BYTE PTR [rax+0x22],al
  42d01a:	add    BYTE PTR [rax],al
  42d01c:	add    BYTE PTR [rax],0x0
  42d01f:	add    BYTE PTR [rdi+0x38],dl
  42d022:	add    BYTE PTR [rax],r8b
  42d025:	add    BYTE PTR [rax],al
  42d027:	add    al,al
  42d029:	and    al,BYTE PTR [rax]
  42d02b:	add    BYTE PTR [rax+0x5d000000],al
  42d031:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d035:	add    BYTE PTR [rax],al
  42d037:	add    BYTE PTR [rax+0x23],al
  42d03a:	add    BYTE PTR [rax],al
  42d03c:	add    BYTE PTR [rax],0x0
  42d03f:	add    BYTE PTR [rax+rdi*1+0x44],ah
  42d043:	add    BYTE PTR [rax],al
  42d045:	add    BYTE PTR [rax],al
  42d047:	add    al,al
  42d049:	and    eax,DWORD PTR [rax]
  42d04b:	add    BYTE PTR [rax+0x6b000000],al
  42d051:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d055:	add    BYTE PTR [rax],al
  42d057:	add    BYTE PTR [rax+0x24],al
  42d05a:	add    BYTE PTR [rax],al
  42d05c:	add    BYTE PTR [rax],0x0
  42d05f:	add    BYTE PTR [rdx+0x38],dh
  42d062:	add    BYTE PTR [rax],r8b
  42d065:	add    BYTE PTR [rax],al
  42d067:	add    al,al
  42d069:	and    al,0x0
  42d06b:	add    BYTE PTR [rax+0x79000000],al
  42d071:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d075:	add    BYTE PTR [rax],al
  42d077:	add    BYTE PTR [rax+0x25],al
  42d07a:	add    BYTE PTR [rax],al
  42d07c:	add    BYTE PTR [rax],0x0
  42d07f:	add    BYTE PTR [rax+0x4438],al
  42d085:	add    BYTE PTR [rax],al
  42d087:	add    al,al
  42d089:	and    eax,0x800000
  42d08e:	add    BYTE PTR [rax],al
  42d090:	xchg   DWORD PTR [rax],edi
  42d092:	add    BYTE PTR [rax],r8b
  42d095:	add    BYTE PTR [rax],al
  42d097:	add    BYTE PTR [rax+0x26],al
  42d09a:	add    BYTE PTR [rax],al
  42d09c:	add    BYTE PTR [rax],0x0
  42d09f:	add    BYTE PTR [rsi+0x4438],cl
  42d0a5:	add    BYTE PTR [rax],al
  42d0a7:	add    al,al
  42d0a9:	add    BYTE PTR es:[rax],al
  42d0ac:	add    BYTE PTR [rax],0x0
  42d0af:	add    BYTE PTR [rbp+0x4438],dl
  42d0b5:	add    BYTE PTR [rax],al
  42d0b7:	add    BYTE PTR [rax+0x27],al
  42d0ba:	add    BYTE PTR [rax],al
  42d0bc:	add    BYTE PTR [rax],0x0
  42d0bf:	add    BYTE PTR [rax+rdi*1+0x44],bl
  42d0c6:	add    BYTE PTR [rax],al
  42d0c8:	shl    BYTE PTR [rdi],0x0
  42d0cb:	add    BYTE PTR [rax-0x5d000000],al
  42d0d1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d0d5:	add    BYTE PTR [rax],al
  42d0d7:	add    BYTE PTR [rax+0x28],al
  42d0da:	add    BYTE PTR [rax],al
  42d0dc:	add    BYTE PTR [rax],0x0
  42d0df:	add    BYTE PTR [rdx+0x4438],ch
  42d0e5:	add    BYTE PTR [rax],al
  42d0e7:	add    al,al
  42d0e9:	sub    BYTE PTR [rax],al
  42d0eb:	add    BYTE PTR [rax-0x4f000000],al
  42d0f1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d0f5:	add    BYTE PTR [rax],al
  42d0f7:	add    BYTE PTR [rax+0x29],al
  42d0fa:	add    BYTE PTR [rax],al
  42d0fc:	add    BYTE PTR [rax],0x0
  42d0ff:	add    BYTE PTR [rax+0x4438],bh
  42d105:	add    BYTE PTR [rax],al
  42d107:	add    al,al
  42d109:	sub    DWORD PTR [rax],eax
  42d10b:	add    BYTE PTR [rax-0x41000000],al
  42d111:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d115:	add    BYTE PTR [rax],al
  42d117:	add    BYTE PTR [rax+0x2a],al
  42d11a:	add    BYTE PTR [rax],al
  42d11c:	add    BYTE PTR [rax],0x0
  42d11f:	add    dh,al
  42d121:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d125:	add    BYTE PTR [rax],al
  42d127:	add    al,al
  42d129:	sub    al,BYTE PTR [rax]
  42d12b:	add    BYTE PTR [rax-0x33000000],al
  42d131:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d135:	add    BYTE PTR [rax],al
  42d137:	add    BYTE PTR [rax+0x2b],al
  42d13a:	add    BYTE PTR [rax],al
  42d13c:	add    BYTE PTR [rax],al
  42d13f:	add    al,dl
  42d141:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d145:	add    BYTE PTR [rax],al
  42d147:	add    BYTE PTR [rax+0x4000002b],al
  42d14d:	add    BYTE PTR [rax],al
  42d14f:	add    bl,dl
  42d151:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d155:	add    BYTE PTR [rax],al
  42d157:	add    al,al
  42d159:	sub    eax,DWORD PTR [rax]
  42d15b:	add    BYTE PTR [rax+0x0],al
  42d15e:	add    BYTE PTR [rax],al
  42d160:	(bad)  
  42d161:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d165:	add    BYTE PTR [rax],al
  42d167:	add    BYTE PTR [rax],al
  42d169:	sub    al,0x0
  42d16b:	add    BYTE PTR [rax+0x0],al
  42d16e:	add    BYTE PTR [rax],al
  42d170:	fnstcw WORD PTR [rax]
  42d172:	add    BYTE PTR [rax],r8b
  42d175:	add    BYTE PTR [rax],al
  42d177:	add    BYTE PTR [rax+0x2c],al
  42d17a:	add    BYTE PTR [rax],al
  42d17c:	add    BYTE PTR [rax],al
  42d17f:	add    ah,bl
  42d181:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d185:	add    BYTE PTR [rax],al
  42d187:	add    BYTE PTR [rax+0x4000002c],al
  42d18d:	add    BYTE PTR [rax],al
  42d18f:	add    bh,bl
  42d191:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d195:	add    BYTE PTR [rax],al
  42d197:	add    al,al
  42d199:	sub    al,0x0
  42d19b:	add    BYTE PTR [rax+0x0],al
  42d19e:	add    BYTE PTR [rax],al
  42d1a0:	loop   0x42d1da
  42d1a2:	add    BYTE PTR [rax],r8b
  42d1a5:	add    BYTE PTR [rax],al
  42d1a7:	add    BYTE PTR [rax],al
  42d1a9:	sub    eax,0x400000
  42d1ae:	add    BYTE PTR [rax],al
  42d1b0:	in     eax,0x38
  42d1b2:	add    BYTE PTR [rax],r8b
  42d1b5:	add    BYTE PTR [rax],al
  42d1b7:	add    BYTE PTR [rax+0x2d],al
  42d1ba:	add    BYTE PTR [rax],al
  42d1bc:	add    BYTE PTR [rcx],al
  42d1be:	add    BYTE PTR [rax],al
  42d1c0:	jmp    0x42d1fa
  42d1c2:	add    BYTE PTR [rax],r8b
  42d1c5:	add    BYTE PTR [rax],al
  42d1c7:	add    BYTE PTR [rax+0x2e],al
  42d1ca:	add    BYTE PTR [rax],al
  42d1cc:	add    BYTE PTR [rcx],al
  42d1ce:	add    BYTE PTR [rax],al
  42d1d0:	icebp  
  42d1d1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d1d5:	add    BYTE PTR [rax],al
  42d1d7:	add    BYTE PTR [rax+0x2f],al
  42d1da:	add    BYTE PTR [rax],al
  42d1dc:	add    BYTE PTR [rcx],al
  42d1de:	add    BYTE PTR [rax],al
  42d1e0:	idiv   DWORD PTR [rax]
  42d1e2:	add    BYTE PTR [rax],r8b
  42d1e5:	add    BYTE PTR [rax],al
  42d1e7:	add    BYTE PTR [rax+0x30],al
  42d1ea:	add    BYTE PTR [rax],al
  42d1ec:	add    BYTE PTR [rcx],al
  42d1ee:	add    BYTE PTR [rax],al
  42d1f0:	std    
  42d1f1:	cmp    BYTE PTR [rax+rax*1+0x0],al
  42d1f5:	add    BYTE PTR [rax],al
  42d1f7:	add    BYTE PTR [rax+0x31],al
  42d1fa:	add    BYTE PTR [rax],al
  42d1fc:	add    BYTE PTR [rcx],al
  42d1fe:	add    BYTE PTR [rax],al
  42d200:	add    edi,DWORD PTR [rcx]
  42d202:	add    BYTE PTR [rax],r8b
  42d205:	add    BYTE PTR [rax],al
  42d207:	add    BYTE PTR [rax+0x32],al
  42d20a:	add    BYTE PTR [rax],al
  42d20c:	add    BYTE PTR [rcx],al
  42d20e:	add    BYTE PTR [rax],al
  42d210:	or     DWORD PTR [rcx],edi
  42d212:	add    BYTE PTR [rax],r8b
  42d215:	add    BYTE PTR [rax],al
  42d217:	add    BYTE PTR [rax+0x33],al
  42d21a:	add    BYTE PTR [rax],al
  42d21c:	add    BYTE PTR [rcx],al
  42d21e:	add    BYTE PTR [rax],al
  42d220:	(bad)  
  42d222:	add    BYTE PTR [rax],r8b
  42d225:	add    BYTE PTR [rax],al
  42d227:	add    BYTE PTR [rax+0x34],al
  42d22a:	add    BYTE PTR [rax],al
  42d22c:	add    BYTE PTR [rcx],al
  42d22e:	add    BYTE PTR [rax],al
  42d230:	adc    eax,0x4439
  42d235:	add    BYTE PTR [rax],al
  42d237:	add    BYTE PTR [rax+0x35],al
  42d23a:	add    BYTE PTR [rax],al
  42d23c:	add    BYTE PTR [rcx],al
  42d23e:	add    BYTE PTR [rax],al
  42d240:	sbb    edi,DWORD PTR [rcx]
  42d242:	add    BYTE PTR [rax],r8b
  42d245:	add    BYTE PTR [rax],al
  42d247:	add    BYTE PTR [rax+0x36],al
  42d24a:	add    BYTE PTR [rax],al
  42d24c:	add    BYTE PTR [rcx],al
  42d24e:	add    BYTE PTR [rax],al
  42d250:	and    DWORD PTR [rcx],edi
  42d252:	add    BYTE PTR [rax],r8b
  42d255:	add    BYTE PTR [rax],al
  42d257:	add    BYTE PTR [rax+0x37],al
  42d25a:	add    BYTE PTR [rax],al
  42d25c:	add    BYTE PTR [rcx],al
  42d25e:	add    BYTE PTR [rax],al
  42d260:	sub    BYTE PTR [rcx],bh
  42d262:	add    BYTE PTR [rax],r8b
  42d265:	add    BYTE PTR [rax],al
  42d267:	add    BYTE PTR [rax+0x38],al
  42d26a:	add    BYTE PTR [rax],al
  42d26c:	add    BYTE PTR [rcx],al
  42d26e:	add    BYTE PTR [rax],al
  42d270:	(bad)  
  42d271:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d275:	add    BYTE PTR [rax],al
  42d277:	add    BYTE PTR [rax+0x39],al
  42d27a:	add    BYTE PTR [rax],al
  42d27c:	add    BYTE PTR [rcx],al
  42d27e:	add    BYTE PTR [rax],al
  42d280:	cmp    DWORD PTR ss:[rax+rax*1+0x0],eax
  42d285:	add    BYTE PTR [rax],al
  42d287:	add    BYTE PTR [rax+0x3a],al
  42d28a:	add    BYTE PTR [rax],al
  42d28c:	add    BYTE PTR [rcx],al
  42d28e:	add    BYTE PTR [rax],al
  42d290:	cmp    eax,0x4439
  42d295:	add    BYTE PTR [rax],al
  42d297:	add    BYTE PTR [rax+0x3b],al
  42d29a:	add    BYTE PTR [rax],al
  42d29c:	add    BYTE PTR [rcx],al
  42d29e:	add    BYTE PTR [rax],al
  42d2a0:	cmp    DWORD PTR [rax+rax*1+0x0],r8d
  42d2a5:	add    BYTE PTR [rax],al
  42d2a7:	add    BYTE PTR [rax+0x3c],al
  42d2aa:	add    BYTE PTR [rax],al
  42d2ac:	add    BYTE PTR [rcx],al
  42d2ae:	add    BYTE PTR [rax],al
  42d2b0:	cmp    QWORD PTR [r8+r8*1+0x0],rax
  42d2b5:	add    BYTE PTR [rax],al
  42d2b7:	add    BYTE PTR [rax+0x3d],al
  42d2ba:	add    BYTE PTR [rax],al
  42d2bc:	add    BYTE PTR [rcx],al
  42d2be:	add    BYTE PTR [rax],al
  42d2c0:	push   rdx
  42d2c1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d2c5:	add    BYTE PTR [rax],al
  42d2c7:	add    BYTE PTR [rax+0x3e],al
  42d2ca:	add    BYTE PTR [rax],al
  42d2cc:	add    BYTE PTR [rcx],al
  42d2ce:	add    BYTE PTR [rax],al
  42d2d0:	pop    rcx
  42d2d1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d2d5:	add    BYTE PTR [rax],al
  42d2d7:	add    BYTE PTR [rax+0x3f],al
  42d2da:	add    BYTE PTR [rax],al
  42d2dc:	add    BYTE PTR [rcx],al
  42d2de:	add    BYTE PTR [rax],al
  42d2e0:	(bad)  
  42d2e1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d2e5:	add    BYTE PTR [rax],al
  42d2e7:	add    BYTE PTR [rax+0x40],al
  42d2ea:	add    BYTE PTR [rax],al
  42d2ec:	add    BYTE PTR [rcx],al
  42d2ee:	add    BYTE PTR [rax],al
  42d2f0:	cmp    DWORD PTR [eax+eax*1+0x0],eax
  42d2f5:	add    BYTE PTR [rax],al
  42d2f7:	add    BYTE PTR [rax+0x41],al
  42d2fa:	add    BYTE PTR [rax],al
  42d2fc:	add    BYTE PTR [rcx],al
  42d2fe:	add    BYTE PTR [rax],al
  42d300:	outs   dx,BYTE PTR ds:[rsi]
  42d301:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d305:	add    BYTE PTR [rax],al
  42d307:	add    BYTE PTR [rax+0x42],al
  42d30a:	add    BYTE PTR [rax],al
  42d30c:	add    BYTE PTR [rcx],al
  42d30e:	add    BYTE PTR [rax],al
  42d310:	jne    0x42d34b
  42d312:	add    BYTE PTR [rax],r8b
  42d315:	add    BYTE PTR [rax],al
  42d317:	add    BYTE PTR [rax+0x43],al
  42d31a:	add    BYTE PTR [rax],al
  42d31c:	add    BYTE PTR [rcx],al
  42d31e:	add    BYTE PTR [rax],al
  42d320:	jl     0x42d35b
  42d322:	add    BYTE PTR [rax],r8b
  42d325:	add    BYTE PTR [rax],al
  42d327:	add    BYTE PTR [rax+0x44],al
  42d32a:	add    BYTE PTR [rax],al
  42d32c:	add    BYTE PTR [rcx],al
  42d32e:	add    BYTE PTR [rax],al
  42d330:	cmp    DWORD PTR [rcx],0x44
  42d333:	add    BYTE PTR [rax],al
  42d335:	add    BYTE PTR [rax],al
  42d337:	add    BYTE PTR [rax+0x45],al
  42d33a:	add    BYTE PTR [rax],al
  42d33c:	add    BYTE PTR [rcx],al
  42d33e:	add    BYTE PTR [rax],al
  42d340:	mov    bh,BYTE PTR [rcx]
  42d342:	add    BYTE PTR [rax],r8b
  42d345:	add    BYTE PTR [rax],al
  42d347:	add    BYTE PTR [rax+0x46],al
  42d34a:	add    BYTE PTR [rax],al
  42d34c:	add    BYTE PTR [rcx],al
  42d34e:	add    BYTE PTR [rax],al
  42d350:	xchg   ecx,eax
  42d351:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d355:	add    BYTE PTR [rax],al
  42d357:	add    BYTE PTR [rax+0x47],al
  42d35a:	add    BYTE PTR [rax],al
  42d35c:	add    BYTE PTR [rcx],al
  42d35e:	add    BYTE PTR [rax],al
  42d360:	cwde   
  42d361:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d365:	add    BYTE PTR [rax],al
  42d367:	add    BYTE PTR [rax+0x48],al
  42d36a:	add    BYTE PTR [rax],al
  42d36c:	add    BYTE PTR [rcx],al
  42d36e:	add    BYTE PTR [rax],al
  42d370:	lahf   
  42d371:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d375:	add    BYTE PTR [rax],al
  42d377:	add    BYTE PTR [rax+0x49],al
  42d37a:	add    BYTE PTR [rax],al
  42d37c:	add    BYTE PTR [rcx],al
  42d37e:	add    BYTE PTR [rax],al
  42d380:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d381:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d385:	add    BYTE PTR [rax],al
  42d387:	add    BYTE PTR [rax+0x4a],al
  42d38a:	add    BYTE PTR [rax],al
  42d38c:	add    BYTE PTR [rcx],al
  42d38e:	add    BYTE PTR [rax],al
  42d390:	lods   eax,DWORD PTR ds:[rsi]
  42d391:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d395:	add    BYTE PTR [rax],al
  42d397:	add    BYTE PTR [rax+0x4b],al
  42d39a:	add    BYTE PTR [rax],al
  42d39c:	add    BYTE PTR [rcx],al
  42d39e:	add    BYTE PTR [rax],al
  42d3a0:	mov    ah,0x39
  42d3a2:	add    BYTE PTR [rax],r8b
  42d3a5:	add    BYTE PTR [rax],al
  42d3a7:	add    BYTE PTR [rax+0x4c],al
  42d3aa:	add    BYTE PTR [rax],al
  42d3ac:	add    BYTE PTR [rcx],al
	...
  42d3be:	add    BYTE PTR [rax],al
  42d3c0:	(bad)  
  42d3c1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d3c5:	add    BYTE PTR [rax],al
  42d3c7:	add    dl,dl
  42d3c9:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d3cd:	add    BYTE PTR [rax],al
  42d3cf:	add    dh,dl
  42d3d1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
	...
  42d3fd:	add    BYTE PTR [rax],al
  42d3ff:	add    dl,bl
  42d401:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d405:	add    BYTE PTR [rax],al
  42d407:	add    BYTE PTR [rax],al
  42d409:	add    BYTE PTR [rax],al
  42d40b:	add    BYTE PTR [rax+0x0],al
  42d40e:	add    BYTE PTR [rax],al
  42d410:	fidivr WORD PTR [rcx]
  42d412:	add    BYTE PTR [rax],r8b
  42d415:	add    BYTE PTR [rax],al
  42d417:	add    BYTE PTR [rax+0x0],al
  42d41a:	add    BYTE PTR [rax],al
  42d41c:	add    BYTE PTR [rax],al
  42d41f:	add    dl,ah
  42d421:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d425:	add    BYTE PTR [rax],al
  42d427:	add    BYTE PTR [rax+0x40000000],al
  42d42d:	add    BYTE PTR [rax],al
  42d42f:	add    dh,ah
  42d431:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d435:	add    BYTE PTR [rax],al
  42d437:	add    al,al
  42d439:	add    BYTE PTR [rax],al
  42d43b:	add    BYTE PTR [rax+0x0],al
  42d43e:	add    BYTE PTR [rax],al
  42d440:	(bad)  
  42d441:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d445:	add    BYTE PTR [rax],al
  42d447:	add    BYTE PTR [rax],al
  42d449:	add    DWORD PTR [rax],eax
  42d44b:	add    BYTE PTR [rax+0x0],al
  42d44e:	add    BYTE PTR [rax],al
  42d450:	out    dx,al
  42d451:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d455:	add    BYTE PTR [rax],al
  42d457:	add    BYTE PTR [rax+0x1],al
  42d45a:	add    BYTE PTR [rax],al
  42d45c:	add    BYTE PTR [rax],al
  42d45f:	add    dh,cl
  42d461:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d465:	add    BYTE PTR [rax],al
  42d467:	add    BYTE PTR [rax+0x40000001],al
  42d46d:	add    BYTE PTR [rax],al
  42d46f:	add    dl,dl
  42d471:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d475:	add    BYTE PTR [rax],al
  42d477:	add    al,al
  42d479:	add    DWORD PTR [rax],eax
  42d47b:	add    BYTE PTR [rax+0x0],al
  42d47e:	add    BYTE PTR [rax],al
  42d480:	repnz cmp DWORD PTR [rax+rax*1+0x0],eax
  42d485:	add    BYTE PTR [rax],al
  42d487:	add    BYTE PTR [rax],al
  42d489:	add    al,BYTE PTR [rax]
  42d48b:	add    BYTE PTR [rax+0x0],al
  42d48e:	add    BYTE PTR [rax],al
  42d490:	cmc    
  42d491:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d495:	add    BYTE PTR [rax],al
  42d497:	add    BYTE PTR [rax+0x2],al
  42d49a:	add    BYTE PTR [rax],al
  42d49c:	add    BYTE PTR [rax],al
  42d49f:	add    al,bh
  42d4a1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d4a5:	add    BYTE PTR [rax],al
  42d4a7:	add    BYTE PTR [rax+0x40000002],al
  42d4ad:	add    BYTE PTR [rax],al
  42d4af:	add    ah,bh
  42d4b1:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d4b5:	add    BYTE PTR [rax],al
  42d4b7:	add    al,al
  42d4b9:	add    al,BYTE PTR [rax]
  42d4bb:	add    BYTE PTR [rax+0x0],al
  42d4be:	add    BYTE PTR [rax],al
  42d4c0:	add    BYTE PTR [rdx],bh
  42d4c2:	add    BYTE PTR [rax],r8b
  42d4c5:	add    BYTE PTR [rax],al
  42d4c7:	add    BYTE PTR [rax],al
  42d4c9:	add    eax,DWORD PTR [rax]
  42d4cb:	add    BYTE PTR [rax+0x0],al
  42d4ce:	add    BYTE PTR [rax],al
  42d4d0:	add    al,0x3a
  42d4d2:	add    BYTE PTR [rax],r8b
  42d4d5:	add    BYTE PTR [rax],al
  42d4d7:	add    BYTE PTR [rax+0x3],al
  42d4da:	add    BYTE PTR [rax],al
  42d4dc:	add    BYTE PTR [rax],al
  42d4df:	add    BYTE PTR [rax],cl
  42d4e1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d4e5:	add    BYTE PTR [rax],al
  42d4e7:	add    BYTE PTR [rax+0x40000003],al
  42d4ed:	add    BYTE PTR [rax],al
  42d4ef:	add    BYTE PTR [rdx+rdi*1],cl
  42d4f2:	add    BYTE PTR [rax],r8b
  42d4f5:	add    BYTE PTR [rax],al
  42d4f7:	add    al,al
  42d4f9:	add    eax,DWORD PTR [rax]
  42d4fb:	add    BYTE PTR [rax+0x0],al
  42d4fe:	add    BYTE PTR [rax],al
  42d500:	(bad)  
  42d501:	cmp    DWORD PTR [rax+rax*1+0x0],eax
  42d505:	add    BYTE PTR [rax],al
  42d507:	add    BYTE PTR [rax],al
  42d509:	add    al,0x0
  42d50b:	add    BYTE PTR [rax+0x0],al
  42d50e:	add    BYTE PTR [rax],al
  42d510:	adc    BYTE PTR [rdx],bh
  42d512:	add    BYTE PTR [rax],r8b
  42d515:	add    BYTE PTR [rax],al
  42d517:	add    BYTE PTR [rax+0x4],al
  42d51a:	add    BYTE PTR [rax],al
  42d51c:	and    BYTE PTR [rax],al
  42d51e:	add    BYTE PTR [rax],al
  42d520:	(bad)  
  42d521:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d525:	add    BYTE PTR [rax],al
  42d527:	add    BYTE PTR [rax+0x4],ah
  42d52a:	add    BYTE PTR [rax],al
  42d52c:	and    BYTE PTR [rax],al
  42d52e:	add    BYTE PTR [rax],al
  42d530:	sbb    bh,BYTE PTR [rdx]
  42d532:	add    BYTE PTR [rax],r8b
  42d535:	add    BYTE PTR [rax],al
  42d537:	add    BYTE PTR [rax+0x20000004],al
  42d53d:	add    BYTE PTR [rax],al
  42d53f:	add    BYTE PTR [rip+0x443a],bl        # 0x43197f
  42d545:	add    BYTE PTR [rax],al
  42d547:	add    BYTE PTR [rax+0x20000004],ah
  42d54d:	add    BYTE PTR [rax],al
  42d54f:	add    BYTE PTR [rax],ah
  42d551:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d555:	add    BYTE PTR [rax],al
  42d557:	add    al,al
  42d559:	add    al,0x0
  42d55b:	add    BYTE PTR [rax],ah
  42d55d:	add    BYTE PTR [rax],al
  42d55f:	add    BYTE PTR [rbx],ah
  42d561:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d565:	add    BYTE PTR [rax],al
  42d567:	add    al,ah
  42d569:	add    al,0x0
  42d56b:	add    BYTE PTR [rax],ah
  42d56d:	add    BYTE PTR [rax],al
  42d56f:	add    BYTE PTR [rsi],ah
  42d571:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d575:	add    BYTE PTR [rax],al
  42d577:	add    BYTE PTR [rax],al
  42d579:	add    eax,0x200000
  42d57e:	add    BYTE PTR [rax],al
  42d580:	sub    DWORD PTR [rdx],edi
  42d582:	add    BYTE PTR [rax],r8b
  42d585:	add    BYTE PTR [rax],al
  42d587:	add    BYTE PTR [rax],ah
  42d589:	add    eax,0x500000
  42d58e:	add    BYTE PTR [rax],al
  42d590:	sub    eax,0x443a
  42d595:	add    BYTE PTR [rax],al
  42d597:	add    BYTE PTR [rax+0x5],dh
  42d59a:	add    BYTE PTR [rax],al
  42d59c:	push   rax
  42d59d:	add    BYTE PTR [rax],al
  42d59f:	add    BYTE PTR [rcx],dh
  42d5a1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d5a5:	add    BYTE PTR [rax],al
  42d5a7:	add    al,al
  42d5a9:	add    eax,0x500000
  42d5ae:	add    BYTE PTR [rax],al
  42d5b0:	xor    eax,0x443a
  42d5b5:	add    BYTE PTR [rax],al
  42d5b7:	add    BYTE PTR [rax],dl
  42d5b9:	(bad)  
  42d5ba:	add    BYTE PTR [rax],al
  42d5bc:	push   rax
  42d5bd:	add    BYTE PTR [rax],al
  42d5bf:	add    BYTE PTR [rcx],bh
  42d5c1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d5c5:	add    BYTE PTR [rax],al
  42d5c7:	add    BYTE PTR [rax+0x6],ah
  42d5ca:	add    BYTE PTR [rax],al
  42d5cc:	push   rax
  42d5cd:	add    BYTE PTR [rax],al
  42d5cf:	add    BYTE PTR [rip+0x443a],bh        # 0x431a0f
  42d5d5:	add    BYTE PTR [rax],al
  42d5d7:	add    BYTE PTR [rax+0x50000006],dh
  42d5dd:	add    BYTE PTR [rax],al
  42d5df:	add    BYTE PTR [rcx+0x3a],al
  42d5e2:	add    BYTE PTR [rax],r8b
  42d5e5:	add    BYTE PTR [rax],al
  42d5e7:	add    BYTE PTR [rax],al
  42d5e9:	(bad)  
  42d5ea:	add    BYTE PTR [rax],al
  42d5ec:	push   rax
  42d5ed:	add    BYTE PTR [rax],al
  42d5ef:	add    BYTE PTR [rbp+0x3a],al
  42d5f2:	add    BYTE PTR [rax],r8b
  42d5f5:	add    BYTE PTR [rax],al
  42d5f7:	add    BYTE PTR [rax+0x7],dl
  42d5fa:	add    BYTE PTR [rax],al
  42d5fc:	push   rax
  42d5fd:	add    BYTE PTR [rax],al
  42d5ff:	add    BYTE PTR [rcx+0x3a],cl
  42d602:	add    BYTE PTR [rax],r8b
  42d605:	add    BYTE PTR [rax],al
  42d607:	add    BYTE PTR [rax+0x20000007],ah
  42d60d:	add    BYTE PTR [rax],al
  42d60f:	add    BYTE PTR [rdi+0x3a],cl
  42d612:	add    BYTE PTR [rax],r8b
  42d615:	add    BYTE PTR [rax],al
  42d617:	add    al,al
  42d619:	(bad)  
  42d61a:	add    BYTE PTR [rax],al
  42d61c:	and    BYTE PTR [rax],al
  42d61e:	add    BYTE PTR [rax],al
  42d620:	push   rbp
  42d621:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d625:	add    BYTE PTR [rax],al
  42d627:	add    al,ah
  42d629:	(bad)  
  42d62a:	add    BYTE PTR [rax],al
  42d62c:	and    BYTE PTR [rax],al
  42d62e:	add    BYTE PTR [rax],al
  42d630:	pop    rdx
  42d631:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d635:	add    BYTE PTR [rax],al
  42d637:	add    BYTE PTR [rax],al
  42d639:	or     BYTE PTR [rax],al
  42d63b:	add    BYTE PTR [rax],ah
  42d63d:	add    BYTE PTR [rax],al
  42d63f:	add    BYTE PTR [rax+0x3a],ah
  42d642:	add    BYTE PTR [rax],r8b
  42d645:	add    BYTE PTR [rax],al
  42d647:	add    BYTE PTR [rax],ah
  42d649:	or     BYTE PTR [rax],al
  42d64b:	add    BYTE PTR [rax],ah
  42d64d:	add    BYTE PTR [rax],al
  42d64f:	add    BYTE PTR [rsi+0x3a],ah
  42d652:	add    BYTE PTR [rax],r8b
  42d655:	add    BYTE PTR [rax],al
  42d657:	add    BYTE PTR [rax+0x8],al
  42d65a:	add    BYTE PTR [rax],al
  42d65c:	and    BYTE PTR [rax],al
  42d65e:	add    BYTE PTR [rax],al
  42d660:	ins    BYTE PTR es:[rdi],dx
  42d661:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d665:	add    BYTE PTR [rax],al
  42d667:	add    BYTE PTR [rax+0x8],ah
  42d66a:	add    BYTE PTR [rax],al
  42d66c:	and    BYTE PTR [rax],al
  42d66e:	add    BYTE PTR [rax],al
  42d670:	jb     0x42d6ac
  42d672:	add    BYTE PTR [rax],r8b
  42d675:	add    BYTE PTR [rax],al
  42d677:	add    BYTE PTR [rax+0x20000008],al
  42d67d:	add    BYTE PTR [rax],al
  42d67f:	add    BYTE PTR [rsi+0x3a],dh
  42d682:	add    BYTE PTR [rax],r8b
  42d685:	add    BYTE PTR [rax],al
  42d687:	add    BYTE PTR [rax-0x7ffffff8],ah
  42d68d:	add    BYTE PTR [rax],al
  42d68f:	add    BYTE PTR [rbx+0x3a],bh
  42d692:	add    BYTE PTR [rax],r8b
  42d695:	add    BYTE PTR [rax],al
  42d697:	add    BYTE PTR [rax],ah
  42d699:	or     DWORD PTR [rax],eax
  42d69b:	add    BYTE PTR [rax-0x80000000],al
  42d6a1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d6a5:	add    BYTE PTR [rax],al
  42d6a7:	add    BYTE PTR [rax-0x7ffffff7],ah
  42d6ad:	add    BYTE PTR [rax],al
  42d6af:	add    BYTE PTR [rbp+0x443a],al
  42d6b5:	add    BYTE PTR [rax],al
  42d6b7:	add    BYTE PTR [rax],ah
  42d6b9:	or     al,BYTE PTR [rax]
  42d6bb:	add    BYTE PTR [rax-0x76000000],al
  42d6c1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d6c5:	add    BYTE PTR [rax],al
  42d6c7:	add    BYTE PTR [rax-0x7ffffff6],ah
  42d6cd:	add    BYTE PTR [rax],al
  42d6cf:	add    BYTE PTR [rdi+0x443a],cl
  42d6d5:	add    BYTE PTR [rax],al
  42d6d7:	add    BYTE PTR [rax],ah
  42d6d9:	or     eax,DWORD PTR [rax]
  42d6db:	add    BYTE PTR [rax-0x6c000000],al
  42d6e1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d6e5:	add    BYTE PTR [rax],al
  42d6e7:	add    BYTE PTR [rax-0x7ffffff5],ah
  42d6ed:	add    BYTE PTR [rax],al
  42d6ef:	add    BYTE PTR [rcx+0x443a],bl
  42d6f5:	add    BYTE PTR [rax],al
  42d6f7:	add    BYTE PTR [rax],ah
  42d6f9:	or     al,0x0
  42d6fb:	add    BYTE PTR [rax-0x62000000],al
  42d701:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d705:	add    BYTE PTR [rax],al
  42d707:	add    BYTE PTR [rax-0x7ffffff4],ah
  42d70d:	add    BYTE PTR [rax],al
  42d70f:	add    BYTE PTR [rbx+0x443a],ah
  42d715:	add    BYTE PTR [rax],al
  42d717:	add    BYTE PTR [rax],ah
  42d719:	or     eax,0x800000
  42d71e:	add    BYTE PTR [rax],al
  42d720:	test   al,0x3a
  42d722:	add    BYTE PTR [rax],r8b
  42d725:	add    BYTE PTR [rax],al
  42d727:	add    BYTE PTR [rax-0x7ffffff3],ah
  42d72d:	add    BYTE PTR [rax],al
  42d72f:	add    BYTE PTR [rsi+0x443a],ch
  42d735:	add    BYTE PTR [rax],al
  42d737:	add    BYTE PTR [rax],ah
  42d739:	(bad)  
  42d73a:	add    BYTE PTR [rax],al
  42d73c:	add    BYTE PTR [rax],0x0
  42d73f:	add    BYTE PTR [rdx+rdi*1+0x44],dh
  42d746:	add    BYTE PTR [rax],al
  42d748:	movabs al,ds:0xba0000008000000e
  42d751:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d755:	add    BYTE PTR [rax],al
  42d757:	add    BYTE PTR [rax],ah
  42d759:	sldt   WORD PTR [rax]
  42d75c:	add    BYTE PTR [rax],0x0
  42d75f:	add    al,al
  42d761:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d765:	add    BYTE PTR [rax],al
  42d767:	add    BYTE PTR [rax-0x7ffffff1],ah
  42d76d:	add    BYTE PTR [rax],al
  42d76f:	add    dh,al
  42d771:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d775:	add    BYTE PTR [rax],al
  42d777:	add    BYTE PTR [rax],ah
  42d779:	adc    BYTE PTR [rax],al
  42d77b:	add    BYTE PTR [rax-0x34000000],al
  42d781:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d785:	add    BYTE PTR [rax],al
  42d787:	add    BYTE PTR [rax+0x20000010],ah
  42d78d:	add    BYTE PTR [rax],al
  42d78f:	add    dl,dl
  42d791:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d795:	add    BYTE PTR [rax],al
  42d797:	add    al,al
  42d799:	adc    BYTE PTR [rax],al
  42d79b:	add    BYTE PTR [rax-0x26000000],al
  42d7a1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d7a5:	add    BYTE PTR [rax],al
  42d7a7:	add    BYTE PTR [rax+0x11],al
  42d7aa:	add    BYTE PTR [rax],al
  42d7ac:	add    BYTE PTR [rax],0x0
  42d7af:	add    dl,ah
  42d7b1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d7b5:	add    BYTE PTR [rax],al
  42d7b7:	add    al,al
  42d7b9:	adc    DWORD PTR [rax],eax
  42d7bb:	add    BYTE PTR [rax-0x16000000],al
  42d7c1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d7c5:	add    BYTE PTR [rax],al
  42d7c7:	add    BYTE PTR [rax+0x12],al
  42d7ca:	add    BYTE PTR [rax],al
  42d7cc:	add    BYTE PTR [rax],0x0
  42d7cf:	add    dl,dh
  42d7d1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d7d5:	add    BYTE PTR [rax],al
  42d7d7:	add    al,al
  42d7d9:	adc    al,BYTE PTR [rax]
  42d7db:	add    BYTE PTR [rax+0x0],al
  42d7de:	add    BYTE PTR [rax],al
  42d7e0:	cli    
  42d7e1:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  42d7e5:	add    BYTE PTR [rax],al
  42d7e7:	add    BYTE PTR [rax],al
  42d7e9:	adc    eax,DWORD PTR [rax]
  42d7eb:	add    BYTE PTR [rax+0x0],al
	...
  42d7fe:	add    BYTE PTR [rax],al
  42d800:	and    bh,BYTE PTR [rbx]
  42d802:	add    BYTE PTR [rax],r8b
  42d805:	add    BYTE PTR [rax],al
  42d807:	add    BYTE PTR [rsi],ah
  42d809:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d80d:	add    BYTE PTR [rax],al
  42d80f:	add    BYTE PTR [rdx],ch
  42d811:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
	...
  42d83d:	add    BYTE PTR [rax],al
  42d83f:	add    BYTE PTR [rsi],ch
  42d841:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d845:	add    BYTE PTR [rax],al
  42d847:	add    BYTE PTR [rax],al
  42d849:	add    BYTE PTR [rax],al
  42d84b:	add    BYTE PTR [rax+0x0],al
  42d84e:	add    BYTE PTR [rax],al
  42d850:	xor    bh,BYTE PTR [rbx]
  42d852:	add    BYTE PTR [rax],r8b
  42d855:	add    BYTE PTR [rax],al
  42d857:	add    BYTE PTR [rax+0x0],al
  42d85a:	add    BYTE PTR [rax],al
  42d85c:	add    BYTE PTR [rax],al
  42d85f:	add    BYTE PTR [rsi],dh
  42d861:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d865:	add    BYTE PTR [rax],al
  42d867:	add    BYTE PTR [rax+0x40000000],al
  42d86d:	add    BYTE PTR [rax],al
  42d86f:	add    BYTE PTR [rdx],bh
  42d871:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d875:	add    BYTE PTR [rax],al
  42d877:	add    al,al
  42d879:	add    BYTE PTR [rax],al
  42d87b:	add    BYTE PTR [rax+0x0],al
  42d87e:	add    BYTE PTR [rax],al
  42d880:	cmp    eax,DWORD PTR ds:[rax+rax*1+0x0]
  42d885:	add    BYTE PTR [rax],al
  42d887:	add    BYTE PTR [rax],al
  42d889:	add    DWORD PTR [rax],eax
  42d88b:	add    BYTE PTR [rax+0x0],al
  42d88e:	add    BYTE PTR [rax],al
  42d890:	cmp    eax,DWORD PTR [rax+r8*1+0x0]
  42d895:	add    BYTE PTR [rax],al
  42d897:	add    BYTE PTR [rax+0x1],al
  42d89a:	add    BYTE PTR [rax],al
  42d89c:	add    BYTE PTR [rax],al
  42d89f:	add    BYTE PTR [rdx],ah
  42d8a1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d8a5:	add    BYTE PTR [rax],al
  42d8a7:	add    BYTE PTR [rax+0x40000001],al
  42d8ad:	add    BYTE PTR [rax],al
  42d8af:	add    BYTE PTR [rsi],ah
  42d8b1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d8b5:	add    BYTE PTR [rax],al
  42d8b7:	add    al,al
  42d8b9:	add    DWORD PTR [rax],eax
  42d8bb:	add    BYTE PTR [rax+0x0],al
  42d8be:	add    BYTE PTR [rax],al
  42d8c0:	cmp    r8d,DWORD PTR [rax+r8*1+0x0]
  42d8c5:	add    BYTE PTR [rax],al
  42d8c7:	add    BYTE PTR [rax],al
  42d8c9:	add    al,BYTE PTR [rax]
  42d8cb:	add    BYTE PTR [rax+0x0],al
  42d8ce:	add    BYTE PTR [rax],al
  42d8d0:	cmp    rax,QWORD PTR [r8+rax*1+0x0]
  42d8d5:	add    BYTE PTR [rax],al
  42d8d7:	add    BYTE PTR [rax+0x2],al
  42d8da:	add    BYTE PTR [rax],al
  42d8dc:	add    BYTE PTR [rax],al
  42d8df:	add    BYTE PTR [rbx+rdi*1+0x44],cl
  42d8e3:	add    BYTE PTR [rax],al
  42d8e5:	add    BYTE PTR [rax],al
  42d8e7:	add    BYTE PTR [rax+0x40000002],al
  42d8ed:	add    BYTE PTR [rax],al
  42d8ef:	add    BYTE PTR [rax+0x3b],dl
  42d8f2:	add    BYTE PTR [rax],r8b
  42d8f5:	add    BYTE PTR [rax],al
  42d8f7:	add    al,al
  42d8f9:	add    al,BYTE PTR [rax]
  42d8fb:	add    BYTE PTR [rax+0x0],al
  42d8fe:	add    BYTE PTR [rax],al
  42d900:	push   rsp
  42d901:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d905:	add    BYTE PTR [rax],al
  42d907:	add    BYTE PTR [rax],al
  42d909:	add    eax,DWORD PTR [rax]
  42d90b:	add    BYTE PTR [rax+0x0],al
  42d90e:	add    BYTE PTR [rax],al
  42d910:	pop    rax
  42d911:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d915:	add    BYTE PTR [rax],al
  42d917:	add    BYTE PTR [rax+0x3],al
  42d91a:	add    BYTE PTR [rax],al
  42d91c:	add    BYTE PTR [rax],al
  42d91f:	add    BYTE PTR [rbx+rdi*1+0x44],bl
  42d923:	add    BYTE PTR [rax],al
  42d925:	add    BYTE PTR [rax],al
  42d927:	add    BYTE PTR [rax+0x40000003],al
  42d92d:	add    BYTE PTR [rax],al
  42d92f:	add    BYTE PTR [rax+0x3b],ah
  42d932:	add    BYTE PTR [rax],r8b
  42d935:	add    BYTE PTR [rax],al
  42d937:	add    al,al
  42d939:	add    eax,DWORD PTR [rax]
  42d93b:	add    BYTE PTR [rax+0x0],al
  42d93e:	add    BYTE PTR [rax],al
  42d940:	sub    bh,BYTE PTR [rbx]
  42d942:	add    BYTE PTR [rax],r8b
  42d945:	add    BYTE PTR [rax],al
  42d947:	add    BYTE PTR [rax],al
  42d949:	add    al,0x0
  42d94b:	add    BYTE PTR [rax+0x0],al
  42d94e:	add    BYTE PTR [rax],al
  42d950:	cmp    eax,DWORD PTR fs:[rax+rax*1+0x0]
  42d955:	add    BYTE PTR [rax],al
  42d957:	add    BYTE PTR [rax+0x4],al
  42d95a:	add    BYTE PTR [rax],al
  42d95c:	and    BYTE PTR [rax],al
  42d95e:	add    BYTE PTR [rax],al
  42d960:	imul   edi,DWORD PTR [rbx],0x44
  42d963:	add    BYTE PTR [rax],al
  42d965:	add    BYTE PTR [rax],al
  42d967:	add    BYTE PTR [rax+0x4],ah
  42d96a:	add    BYTE PTR [rax],al
  42d96c:	and    BYTE PTR [rax],al
  42d96e:	add    BYTE PTR [rax],al
  42d970:	outs   dx,BYTE PTR ds:[rsi]
  42d971:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42d975:	add    BYTE PTR [rax],al
  42d977:	add    BYTE PTR [rax+0x20000004],al
  42d97d:	add    BYTE PTR [rax],al
  42d97f:	add    BYTE PTR [rcx+0x3b],dh
  42d982:	add    BYTE PTR [rax],r8b
  42d985:	add    BYTE PTR [rax],al
  42d987:	add    BYTE PTR [rax+0x20000004],ah
  42d98d:	add    BYTE PTR [rax],al
  42d98f:	add    BYTE PTR [rbx+rdi*1+0x44],dh
  42d993:	add    BYTE PTR [rax],al
  42d995:	add    BYTE PTR [rax],al
  42d997:	add    al,al
  42d999:	add    al,0x0
  42d99b:	add    BYTE PTR [rax],ah
  42d99d:	add    BYTE PTR [rax],al
  42d99f:	add    BYTE PTR [rdi+0x3b],dh
  42d9a2:	add    BYTE PTR [rax],r8b
  42d9a5:	add    BYTE PTR [rax],al
  42d9a7:	add    al,ah
  42d9a9:	add    al,0x0
  42d9ab:	add    BYTE PTR [rax],ah
  42d9ad:	add    BYTE PTR [rax],al
  42d9af:	add    BYTE PTR [rdx+0x3b],bh
  42d9b2:	add    BYTE PTR [rax],r8b
  42d9b5:	add    BYTE PTR [rax],al
  42d9b7:	add    BYTE PTR [rax],al
  42d9b9:	add    eax,0x200000
  42d9be:	add    BYTE PTR [rax],al
  42d9c0:	jge    0x42d9fd
  42d9c2:	add    BYTE PTR [rax],r8b
  42d9c5:	add    BYTE PTR [rax],al
  42d9c7:	add    BYTE PTR [rax],ah
  42d9c9:	add    eax,0x500000
  42d9ce:	add    BYTE PTR [rax],al
  42d9d0:	cmp    DWORD PTR [rbx],0x44
  42d9d6:	add    BYTE PTR [rax],al
  42d9d8:	jo     0x42d9df
  42d9da:	add    BYTE PTR [rax],al
  42d9dc:	push   rax
  42d9dd:	add    BYTE PTR [rax],al
  42d9df:	add    BYTE PTR [rbp+0x443b],al
  42d9e5:	add    BYTE PTR [rax],al
  42d9e7:	add    al,al
  42d9e9:	add    eax,0x500000
  42d9ee:	add    BYTE PTR [rax],al
  42d9f0:	mov    DWORD PTR [rbx],edi
  42d9f2:	add    BYTE PTR [rax],r8b
  42d9f5:	add    BYTE PTR [rax],al
  42d9f7:	add    BYTE PTR [rax],dl
  42d9f9:	(bad)  
  42d9fa:	add    BYTE PTR [rax],al
  42d9fc:	push   rax
  42d9fd:	add    BYTE PTR [rax],al
  42d9ff:	add    BYTE PTR [rbp+0x443b],cl
  42da05:	add    BYTE PTR [rax],al
  42da07:	add    BYTE PTR [rax+0x6],ah
  42da0a:	add    BYTE PTR [rax],al
  42da0c:	push   rax
  42da0d:	add    BYTE PTR [rax],al
  42da0f:	add    BYTE PTR [rcx+0x443b],dl
  42da15:	add    BYTE PTR [rax],al
  42da17:	add    BYTE PTR [rax+0x50000006],dh
  42da1d:	add    BYTE PTR [rax],al
  42da1f:	add    BYTE PTR [rbp+0x443b],dl
  42da25:	add    BYTE PTR [rax],al
  42da27:	add    BYTE PTR [rax],al
  42da29:	(bad)  
  42da2a:	add    BYTE PTR [rax],al
  42da2c:	push   rax
  42da2d:	add    BYTE PTR [rax],al
  42da2f:	add    BYTE PTR [rcx+0x443b],bl
  42da35:	add    BYTE PTR [rax],al
  42da37:	add    BYTE PTR [rax+0x7],dl
  42da3a:	add    BYTE PTR [rax],al
  42da3c:	push   rax
  42da3d:	add    BYTE PTR [rax],al
  42da3f:	add    BYTE PTR [rbp+0x443b],bl
  42da45:	add    BYTE PTR [rax],al
  42da47:	add    BYTE PTR [rax+0x20000007],ah
  42da4d:	add    BYTE PTR [rax],al
  42da4f:	add    BYTE PTR [rbx+0x443b],ah
  42da55:	add    BYTE PTR [rax],al
  42da57:	add    al,al
  42da59:	(bad)  
  42da5a:	add    BYTE PTR [rax],al
  42da5c:	and    BYTE PTR [rax],al
  42da5e:	add    BYTE PTR [rax],al
  42da60:	test   eax,0x443b
  42da65:	add    BYTE PTR [rax],al
  42da67:	add    al,ah
  42da69:	(bad)  
  42da6a:	add    BYTE PTR [rax],al
  42da6c:	and    BYTE PTR [rax],al
  42da6e:	add    BYTE PTR [rax],al
  42da70:	scas   al,BYTE PTR es:[rdi]
  42da71:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42da75:	add    BYTE PTR [rax],al
  42da77:	add    BYTE PTR [rax],al
  42da79:	or     BYTE PTR [rax],al
  42da7b:	add    BYTE PTR [rax],ah
  42da7d:	add    BYTE PTR [rax],al
  42da7f:	add    BYTE PTR [rbx+rdi*1+0x44],dh
  42da86:	add    BYTE PTR [rax],al
  42da88:	and    BYTE PTR [rax],cl
  42da8a:	add    BYTE PTR [rax],al
  42da8c:	and    BYTE PTR [rax],al
  42da8e:	add    BYTE PTR [rax],al
  42da90:	mov    edx,0x443b
  42da95:	add    BYTE PTR [rax],al
  42da97:	add    BYTE PTR [rax+0x8],al
  42da9a:	add    BYTE PTR [rax],al
  42da9c:	and    BYTE PTR [rax],al
  42da9e:	add    BYTE PTR [rax],al
  42daa0:	sar    BYTE PTR [rbx],0x44
  42daa3:	add    BYTE PTR [rax],al
  42daa5:	add    BYTE PTR [rax],al
  42daa7:	add    BYTE PTR [rax+0x8],ah
  42daaa:	add    BYTE PTR [rax],al
  42daac:	and    BYTE PTR [rax],al
  42daae:	add    BYTE PTR [rax],al
  42dab0:	(bad)  
  42dab1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42dab5:	add    BYTE PTR [rax],al
  42dab7:	add    BYTE PTR [rax+0x20000008],al
  42dabd:	add    BYTE PTR [rax],al
  42dabf:	add    dl,cl
  42dac1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42dac5:	add    BYTE PTR [rax],al
  42dac7:	add    BYTE PTR [rax-0x7ffffff8],ah
  42dacd:	add    BYTE PTR [rax],al
  42dacf:	add    bh,cl
  42dad1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42dad5:	add    BYTE PTR [rax],al
  42dad7:	add    BYTE PTR [rax],ah
  42dad9:	or     DWORD PTR [rax],eax
  42dadb:	add    BYTE PTR [rax-0x2c000000],al
  42dae1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42dae5:	add    BYTE PTR [rax],al
  42dae7:	add    BYTE PTR [rax-0x7ffffff7],ah
  42daed:	add    BYTE PTR [rax],al
  42daef:	add    cl,bl
  42daf1:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42daf5:	add    BYTE PTR [rax],al
  42daf7:	add    BYTE PTR [rax],ah
  42daf9:	or     al,BYTE PTR [rax]
  42dafb:	add    BYTE PTR [rax-0x22000000],al
  42db01:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db05:	add    BYTE PTR [rax],al
  42db07:	add    BYTE PTR [rax-0x7ffffff6],ah
  42db0d:	add    BYTE PTR [rax],al
  42db0f:	add    bl,ah
  42db11:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db15:	add    BYTE PTR [rax],al
  42db17:	add    BYTE PTR [rax],ah
  42db19:	or     eax,DWORD PTR [rax]
  42db1b:	add    BYTE PTR [rax-0x18000000],al
  42db21:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db25:	add    BYTE PTR [rax],al
  42db27:	add    BYTE PTR [rax-0x7ffffff5],ah
  42db2d:	add    BYTE PTR [rax],al
  42db2f:	add    ch,ch
  42db31:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db35:	add    BYTE PTR [rax],al
  42db37:	add    BYTE PTR [rax],ah
  42db39:	or     al,0x0
  42db3b:	add    BYTE PTR [rax-0xe000000],al
  42db41:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db45:	add    BYTE PTR [rax],al
  42db47:	add    BYTE PTR [rax-0x7ffffff4],ah
  42db4d:	add    BYTE PTR [rax],al
  42db4f:	add    bh,dh
  42db51:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db55:	add    BYTE PTR [rax],al
  42db57:	add    BYTE PTR [rax],ah
  42db59:	or     eax,0x800000
  42db5e:	add    BYTE PTR [rax],al
  42db60:	cld    
  42db61:	cmp    eax,DWORD PTR [rax+rax*1+0x0]
  42db65:	add    BYTE PTR [rax],al
  42db67:	add    BYTE PTR [rax-0x7ffffff3],ah
  42db6d:	add    BYTE PTR [rax],al
  42db6f:	add    BYTE PTR [rdx],al
  42db71:	cmp    al,0x44
  42db73:	add    BYTE PTR [rax],al
  42db75:	add    BYTE PTR [rax],al
  42db77:	add    BYTE PTR [rax],ah
  42db79:	(bad)  
  42db7a:	add    BYTE PTR [rax],al
  42db7c:	add    BYTE PTR [rax],0x0
  42db7f:	add    BYTE PTR [rax],cl
  42db81:	cmp    al,0x44
  42db83:	add    BYTE PTR [rax],al
  42db85:	add    BYTE PTR [rax],al
  42db87:	add    BYTE PTR [rax-0x7ffffff2],ah
  42db8d:	add    BYTE PTR [rax],al
  42db8f:	add    BYTE PTR [rsi],cl
  42db91:	cmp    al,0x44
  42db93:	add    BYTE PTR [rax],al
  42db95:	add    BYTE PTR [rax],al
  42db97:	add    BYTE PTR [rax],ah
  42db99:	sldt   WORD PTR [rax]
  42db9c:	add    BYTE PTR [rax],0x0
  42db9f:	add    BYTE PTR [rsp+rdi*1],dl
  42dba2:	add    BYTE PTR [rax],r8b
  42dba5:	add    BYTE PTR [rax],al
  42dba7:	add    BYTE PTR [rax-0x7ffffff1],ah
  42dbad:	add    BYTE PTR [rax],al
  42dbaf:	add    BYTE PTR [rdx],bl
  42dbb1:	cmp    al,0x44
  42dbb3:	add    BYTE PTR [rax],al
  42dbb5:	add    BYTE PTR [rax],al
  42dbb7:	add    BYTE PTR [rax],ah
  42dbb9:	adc    BYTE PTR [rax],al
  42dbbb:	add    BYTE PTR [rax+0x20000000],al
  42dbc1:	cmp    al,0x44
  42dbc3:	add    BYTE PTR [rax],al
  42dbc5:	add    BYTE PTR [rax],al
  42dbc7:	add    BYTE PTR [rax+0x20000010],ah
  42dbcd:	add    BYTE PTR [rax],al
  42dbcf:	add    BYTE PTR [rsi],ah
  42dbd1:	cmp    al,0x44
  42dbd3:	add    BYTE PTR [rax],al
  42dbd5:	add    BYTE PTR [rax],al
  42dbd7:	add    al,al
  42dbd9:	adc    BYTE PTR [rax],al
  42dbdb:	add    BYTE PTR [rax+0x2c000000],al
  42dbe1:	cmp    al,0x44
  42dbe3:	add    BYTE PTR [rax],al
  42dbe5:	add    BYTE PTR [rax],al
  42dbe7:	add    BYTE PTR [rax+0x11],al
  42dbea:	add    BYTE PTR [rax],al
  42dbec:	add    BYTE PTR [rax],0x0
  42dbef:	add    BYTE PTR [rdx],dh
  42dbf1:	cmp    al,0x44
  42dbf3:	add    BYTE PTR [rax],al
  42dbf5:	add    BYTE PTR [rax],al
  42dbf7:	add    al,al
  42dbf9:	adc    DWORD PTR [rax],eax
  42dbfb:	add    BYTE PTR [rax+0x38000000],al
  42dc01:	cmp    al,0x44
  42dc03:	add    BYTE PTR [rax],al
  42dc05:	add    BYTE PTR [rax],al
  42dc07:	add    BYTE PTR [rax+0x12],al
  42dc0a:	add    BYTE PTR [rax],al
  42dc0c:	add    BYTE PTR [rax],0x0
  42dc0f:	add    BYTE PTR [rsi],bh
  42dc11:	cmp    al,0x44
  42dc13:	add    BYTE PTR [rax],al
  42dc15:	add    BYTE PTR [rax],al
  42dc17:	add    al,al
  42dc19:	adc    al,BYTE PTR [rax]
  42dc1b:	add    BYTE PTR [rax+0x44000000],al
  42dc21:	cmp    al,0x44
  42dc23:	add    BYTE PTR [rax],al
  42dc25:	add    BYTE PTR [rax],al
  42dc27:	add    BYTE PTR [rax+0x13],al
  42dc2a:	add    BYTE PTR [rax],al
  42dc2c:	add    BYTE PTR [rax],0x0
  42dc2f:	add    BYTE PTR [rdx+0x3c],cl
  42dc32:	add    BYTE PTR [rax],r8b
  42dc35:	add    BYTE PTR [rax],al
  42dc37:	add    al,al
  42dc39:	adc    eax,DWORD PTR [rax]
  42dc3b:	add    BYTE PTR [rax+0x50000000],al
  42dc41:	cmp    al,0x44
  42dc43:	add    BYTE PTR [rax],al
  42dc45:	add    BYTE PTR [rax],al
  42dc47:	add    BYTE PTR [rax+0x14],al
  42dc4a:	add    BYTE PTR [rax],al
  42dc4c:	add    BYTE PTR [rax],0x0
  42dc4f:	add    BYTE PTR [rsi+0x3c],dl
  42dc52:	add    BYTE PTR [rax],r8b
  42dc55:	add    BYTE PTR [rax],al
  42dc57:	add    al,al
  42dc59:	adc    al,0x0
  42dc5b:	add    BYTE PTR [rax+0x5c000000],al
  42dc61:	cmp    al,0x44
  42dc63:	add    BYTE PTR [rax],al
  42dc65:	add    BYTE PTR [rax],al
  42dc67:	add    BYTE PTR [rax+0x15],al
  42dc6a:	add    BYTE PTR [rax],al
  42dc6c:	add    BYTE PTR [rax],0x0
  42dc6f:	add    BYTE PTR [rdx+0x3c],ah
  42dc72:	add    BYTE PTR [rax],r8b
  42dc75:	add    BYTE PTR [rax],al
  42dc77:	add    al,al
  42dc79:	adc    eax,0x800000
  42dc7e:	add    BYTE PTR [rax],al
  42dc80:	imul   edi,DWORD PTR [rsp+rax*2],0x0
  42dc87:	add    BYTE PTR [rax+0x16],al
  42dc8a:	add    BYTE PTR [rax],al
  42dc8c:	add    BYTE PTR [rax],0x0
  42dc8f:	add    BYTE PTR [rax+0x3c],dh
  42dc92:	add    BYTE PTR [rax],r8b
  42dc95:	add    BYTE PTR [rax],al
  42dc97:	add    al,al
  42dc99:	(bad)  
  42dc9a:	add    BYTE PTR [rax],al
  42dc9c:	add    BYTE PTR [rax],0x0
  42dc9f:	add    BYTE PTR [rdi+0x3c],dh
  42dca2:	add    BYTE PTR [rax],r8b
  42dca5:	add    BYTE PTR [rax],al
  42dca7:	add    BYTE PTR [rax+0x17],al
  42dcaa:	add    BYTE PTR [rax],al
  42dcac:	add    BYTE PTR [rax],0x0
  42dcaf:	add    BYTE PTR [rsi+0x3c],bh
  42dcb2:	add    BYTE PTR [rax],r8b
  42dcb5:	add    BYTE PTR [rax],al
  42dcb7:	add    al,al
  42dcb9:	(bad)  
  42dcba:	add    BYTE PTR [rax],al
  42dcbc:	add    BYTE PTR [rax],0x0
  42dcbf:	add    BYTE PTR [rbp+0x443c],al
  42dcc5:	add    BYTE PTR [rax],al
  42dcc7:	add    BYTE PTR [rax+0x18],al
  42dcca:	add    BYTE PTR [rax],al
  42dccc:	add    BYTE PTR [rax],0x0
  42dccf:	add    BYTE PTR [rsp+rdi*1+0x44],cl
  42dcd6:	add    BYTE PTR [rax],al
  42dcd8:	rcr    BYTE PTR [rax],0x0
  42dcdb:	add    BYTE PTR [rax-0x6c000000],al
  42dce1:	cmp    al,0x44
  42dce3:	add    BYTE PTR [rax],al
  42dce5:	add    BYTE PTR [rax],al
  42dce7:	add    BYTE PTR [rax+0x19],al
  42dcea:	add    BYTE PTR [rax],al
  42dcec:	add    BYTE PTR [rax],0x0
  42dcef:	add    BYTE PTR [rsp+rdi*1+0x44],bl
  42dcf6:	add    BYTE PTR [rax],al
  42dcf8:	rcr    BYTE PTR [rcx],0x0
  42dcfb:	add    BYTE PTR [rax-0x5c000000],al
  42dd01:	cmp    al,0x44
  42dd03:	add    BYTE PTR [rax],al
  42dd05:	add    BYTE PTR [rax],al
  42dd07:	add    BYTE PTR [rax+0x1a],al
  42dd0a:	add    BYTE PTR [rax],al
  42dd0c:	add    BYTE PTR [rax],0x0
  42dd0f:	add    BYTE PTR [rsp+rdi*1+0x44],ch
  42dd16:	add    BYTE PTR [rax],al
  42dd18:	rcr    BYTE PTR [rdx],0x0
  42dd1b:	add    BYTE PTR [rax+0x0],al
  42dd1e:	add    BYTE PTR [rax],al
  42dd20:	mov    ah,0x3c
  42dd22:	add    BYTE PTR [rax],r8b
  42dd25:	add    BYTE PTR [rax],al
  42dd27:	add    BYTE PTR [rax],al
  42dd29:	sbb    eax,DWORD PTR [rax]
  42dd2b:	add    BYTE PTR [rax+0x0],al
	...
  42dd3e:	add    BYTE PTR [rax],al
  42dd40:	enter  0x443c,0x0
  42dd44:	add    BYTE PTR [rax],al
  42dd46:	add    BYTE PTR [rax],al
  42dd48:	int3   
  42dd49:	cmp    al,0x44
  42dd4b:	add    BYTE PTR [rax],al
  42dd4d:	add    BYTE PTR [rax],al
  42dd4f:	add    al,dl
  42dd51:	cmp    al,0x44
	...
  42dd7f:	add    ah,dl
  42dd81:	cmp    al,0x44
	...
  42dd8b:	add    BYTE PTR [rax+0x0],al
  42dd8e:	add    BYTE PTR [rax],al
  42dd90:	fdivr  DWORD PTR [rsp+rax*2]
  42dd93:	add    BYTE PTR [rax],al
  42dd95:	add    BYTE PTR [rax],al
  42dd97:	add    BYTE PTR [rax+0x0],al
  42dd9a:	add    BYTE PTR [rax],al
  42dd9c:	add    BYTE PTR [rax],al
  42dd9f:	add    ah,bl
  42dda1:	cmp    al,0x44
  42dda3:	add    BYTE PTR [rax],al
  42dda5:	add    BYTE PTR [rax],al
  42dda7:	add    BYTE PTR [rax+0x40000000],al
  42ddad:	add    BYTE PTR [rax],al
  42ddaf:	add    al,ah
  42ddb1:	cmp    al,0x44
  42ddb3:	add    BYTE PTR [rax],al
  42ddb5:	add    BYTE PTR [rax],al
  42ddb7:	add    al,al
  42ddb9:	add    BYTE PTR [rax],al
  42ddbb:	add    BYTE PTR [rax+0x0],al
  42ddbe:	add    BYTE PTR [rax],al
  42ddc0:	in     al,0x3c
  42ddc2:	add    BYTE PTR [rax],r8b
  42ddc5:	add    BYTE PTR [rax],al
  42ddc7:	add    BYTE PTR [rax],al
  42ddc9:	add    DWORD PTR [rax],eax
  42ddcb:	add    BYTE PTR [rax+0x0],al
  42ddce:	add    BYTE PTR [rax],al
  42ddd0:	call   0x432211
  42ddd5:	add    BYTE PTR [rax],al
  42ddd7:	add    BYTE PTR [rax+0x1],al
  42ddda:	add    BYTE PTR [rax],al
  42dddc:	add    BYTE PTR [rax],al
  42dddf:	add    al,cl
  42dde1:	cmp    al,0x44
  42dde3:	add    BYTE PTR [rax],al
  42dde5:	add    BYTE PTR [rax],al
  42dde7:	add    BYTE PTR [rax+0x40000001],al
  42dded:	add    BYTE PTR [rax],al
  42ddef:	add    ah,cl
  42ddf1:	cmp    al,0x44
  42ddf3:	add    BYTE PTR [rax],al
  42ddf5:	add    BYTE PTR [rax],al
  42ddf7:	add    al,al
  42ddf9:	add    DWORD PTR [rax],eax
  42ddfb:	add    BYTE PTR [rax+0x0],al
  42ddfe:	add    BYTE PTR [rax],al
  42de00:	in     al,dx
  42de01:	cmp    al,0x44
  42de03:	add    BYTE PTR [rax],al
  42de05:	add    BYTE PTR [rax],al
  42de07:	add    BYTE PTR [rax],al
  42de09:	add    al,BYTE PTR [rax]
  42de0b:	add    BYTE PTR [rax+0x0],al
  42de0e:	add    BYTE PTR [rax],al
  42de10:	out    dx,eax
  42de11:	cmp    al,0x44
  42de13:	add    BYTE PTR [rax],al
  42de15:	add    BYTE PTR [rax],al
  42de17:	add    BYTE PTR [rax+0x2],al
  42de1a:	add    BYTE PTR [rax],al
  42de1c:	add    BYTE PTR [rax],al
  42de1f:	add    dl,dh
  42de21:	cmp    al,0x44
  42de23:	add    BYTE PTR [rax],al
  42de25:	add    BYTE PTR [rax],al
  42de27:	add    BYTE PTR [rax+0x40000002],al
  42de2d:	add    BYTE PTR [rax],al
  42de2f:	add    dh,dh
  42de31:	cmp    al,0x44
  42de33:	add    BYTE PTR [rax],al
  42de35:	add    BYTE PTR [rax],al
  42de37:	add    al,al
  42de39:	add    al,BYTE PTR [rax]
  42de3b:	add    BYTE PTR [rax+0x0],al
  42de3e:	add    BYTE PTR [rax],al
  42de40:	cli    
  42de41:	cmp    al,0x44
  42de43:	add    BYTE PTR [rax],al
  42de45:	add    BYTE PTR [rax],al
  42de47:	add    BYTE PTR [rax],al
  42de49:	add    eax,DWORD PTR [rax]
  42de4b:	add    BYTE PTR [rax+0x0],al
  42de4e:	add    BYTE PTR [rax],al
  42de50:	(bad)  
  42de51:	cmp    al,0x44
  42de53:	add    BYTE PTR [rax],al
  42de55:	add    BYTE PTR [rax],al
  42de57:	add    BYTE PTR [rax+0x3],al
  42de5a:	add    BYTE PTR [rax],al
  42de5c:	add    BYTE PTR [rax],al
  42de5f:	add    BYTE PTR [rdx],al
  42de61:	cmp    eax,0x44
  42de66:	add    BYTE PTR [rax],al
  42de68:	add    BYTE PTR [rbx],0x0
  42de6b:	add    BYTE PTR [rax+0x0],al
  42de6e:	add    BYTE PTR [rax],al
  42de70:	(bad)  
  42de71:	cmp    eax,0x44
  42de76:	add    BYTE PTR [rax],al
  42de78:	rol    BYTE PTR [rbx],0x0
  42de7b:	add    BYTE PTR [rax+0x0],al
  42de7e:	add    BYTE PTR [rax],al
  42de80:	sar    BYTE PTR [rsp+rax*2],1
  42de83:	add    BYTE PTR [rax],al
  42de85:	add    BYTE PTR [rax],al
  42de87:	add    BYTE PTR [rax],al
  42de89:	add    al,0x0
  42de8b:	add    BYTE PTR [rax+0x0],al
  42de8e:	add    BYTE PTR [rax],al
  42de90:	or     bh,BYTE PTR [rip+0x44]        # 0x42deda
  42de96:	add    BYTE PTR [rax],al
  42de98:	add    al,0x0
  42de9b:	add    BYTE PTR [rax],ah
  42de9d:	add    BYTE PTR [rax],al
  42de9f:	add    BYTE PTR [rcx],dl
  42dea1:	cmp    eax,0x44
  42dea6:	add    BYTE PTR [rax],al
  42dea8:	(bad)  
  42dea9:	add    al,0x0
  42deab:	add    BYTE PTR [rax],ah
  42dead:	add    BYTE PTR [rax],al
  42deaf:	add    BYTE PTR [rdi*1+0x44],dl
  42deb6:	add    BYTE PTR [rax],al
  42deb8:	add    BYTE PTR [rax+rax*1],0x0
  42debc:	and    BYTE PTR [rax],al
  42debe:	add    BYTE PTR [rax],al
  42dec0:	(bad)  
  42dec1:	cmp    eax,0x44
  42dec6:	add    BYTE PTR [rax],al
  42dec8:	movabs al,ds:0x1a00000020000004
  42ded1:	cmp    eax,0x44
  42ded6:	add    BYTE PTR [rax],al
  42ded8:	rol    BYTE PTR [rax+rax*1],0x0
  42dedc:	and    BYTE PTR [rax],al
  42dede:	add    BYTE PTR [rax],al
  42dee0:	sbb    eax,0x443d
  42dee5:	add    BYTE PTR [rax],al
  42dee7:	add    al,ah
  42dee9:	add    al,0x0
  42deeb:	add    BYTE PTR [rax],ah
  42deed:	add    BYTE PTR [rax],al
  42deef:	add    BYTE PTR [rax],ah
  42def1:	cmp    eax,0x44
  42def6:	add    BYTE PTR [rax],al
  42def8:	add    BYTE PTR [rip+0x200000],al        # 0x62defe
  42defe:	add    BYTE PTR [rax],al
  42df00:	and    edi,DWORD PTR [rip+0x44]        # 0x42df4a
  42df06:	add    BYTE PTR [rax],al
  42df08:	and    BYTE PTR [rip+0x500000],al        # 0x92df0e
  42df0e:	add    BYTE PTR [rax],al
  42df10:	(bad)  
  42df11:	cmp    eax,0x44
  42df16:	add    BYTE PTR [rax],al
  42df18:	jo     0x42df1f
  42df1a:	add    BYTE PTR [rax],al
  42df1c:	push   rax
  42df1d:	add    BYTE PTR [rax],al
  42df1f:	add    BYTE PTR [rbx],ch
  42df21:	cmp    eax,0x44
  42df26:	add    BYTE PTR [rax],al
  42df28:	rol    BYTE PTR [rip+0x500000],0x0        # 0x92df2f
  42df2f:	add    BYTE PTR [rdi],ch
  42df31:	cmp    eax,0x44
  42df36:	add    BYTE PTR [rax],al
  42df38:	adc    BYTE PTR [rsi],al
  42df3a:	add    BYTE PTR [rax],al
  42df3c:	push   rax
  42df3d:	add    BYTE PTR [rax],al
  42df3f:	add    BYTE PTR [rbx],dh
  42df41:	cmp    eax,0x44
  42df46:	add    BYTE PTR [rax],al
  42df48:	(bad)  
  42df49:	(bad)  
  42df4a:	add    BYTE PTR [rax],al
  42df4c:	push   rax
  42df4d:	add    BYTE PTR [rax],al
  42df4f:	add    BYTE PTR [rdi],dh
  42df51:	cmp    eax,0x44
  42df56:	add    BYTE PTR [rax],al
  42df58:	mov    al,0x6
  42df5a:	add    BYTE PTR [rax],al
  42df5c:	push   rax
  42df5d:	add    BYTE PTR [rax],al
  42df5f:	add    BYTE PTR [rbx],bh
  42df61:	cmp    eax,0x44
  42df66:	add    BYTE PTR [rax],al
  42df68:	add    BYTE PTR [rdi],al
  42df6a:	add    BYTE PTR [rax],al
  42df6c:	push   rax
  42df6d:	add    BYTE PTR [rax],al
  42df6f:	add    BYTE PTR [rdi],bh
  42df71:	cmp    eax,0x44
  42df76:	add    BYTE PTR [rax],al
  42df78:	push   rax
  42df79:	(bad)  
  42df7a:	add    BYTE PTR [rax],al
  42df7c:	push   rax
  42df7d:	add    BYTE PTR [rax],al
  42df7f:	add    BYTE PTR [rbx+0x3d],al
  42df82:	add    BYTE PTR [rax],r8b
  42df85:	add    BYTE PTR [rax],al
  42df87:	add    BYTE PTR [rax+0x20000007],ah
  42df8d:	add    BYTE PTR [rax],al
  42df8f:	add    BYTE PTR [rcx+0x3d],cl
  42df92:	add    BYTE PTR [rax],r8b
  42df95:	add    BYTE PTR [rax],al
  42df97:	add    al,al
  42df99:	(bad)  
  42df9a:	add    BYTE PTR [rax],al
  42df9c:	and    BYTE PTR [rax],al
  42df9e:	add    BYTE PTR [rax],al
  42dfa0:	rex.WRXB cmp rax,0x44
  42dfa6:	add    BYTE PTR [rax],al
  42dfa8:	loopne 0x42dfb1
  42dfaa:	add    BYTE PTR [rax],al
  42dfac:	and    BYTE PTR [rax],al
  42dfae:	add    BYTE PTR [rax],al
  42dfb0:	push   rsp
  42dfb1:	cmp    eax,0x44
  42dfb6:	add    BYTE PTR [rax],al
  42dfb8:	add    BYTE PTR [rax],cl
  42dfba:	add    BYTE PTR [rax],al
  42dfbc:	and    BYTE PTR [rax],al
  42dfbe:	add    BYTE PTR [rax],al
  42dfc0:	pop    rdx
  42dfc1:	cmp    eax,0x44
  42dfc6:	add    BYTE PTR [rax],al
  42dfc8:	and    BYTE PTR [rax],cl
  42dfca:	add    BYTE PTR [rax],al
  42dfcc:	and    BYTE PTR [rax],al
  42dfce:	add    BYTE PTR [rax],al
  42dfd0:	(bad)  
  42dfd1:	cmp    eax,0x44
  42dfd6:	add    BYTE PTR [rax],al
  42dfd8:	or     BYTE PTR [rax],al
  42dfdb:	add    BYTE PTR [rax],ah
  42dfdd:	add    BYTE PTR [rax],al
  42dfdf:	add    BYTE PTR [rsi+0x3d],ah
  42dfe2:	add    BYTE PTR [rax],r8b
  42dfe5:	add    BYTE PTR [rax],al
  42dfe7:	add    BYTE PTR [rax+0x8],ah
  42dfea:	add    BYTE PTR [rax],al
  42dfec:	and    BYTE PTR [rax],al
  42dfee:	add    BYTE PTR [rax],al
  42dff0:	ins    BYTE PTR es:[rdi],dx
  42dff1:	cmp    eax,0x44
  42dff6:	add    BYTE PTR [rax],al
  42dff8:	or     BYTE PTR [rax],0x0
  42dffb:	add    BYTE PTR [rax],ah
  42dffd:	add    BYTE PTR [rax],al
  42dfff:	add    BYTE PTR [rax+0x3d],dh
  42e002:	add    BYTE PTR [rax],r8b
  42e005:	add    BYTE PTR [rax],al
  42e007:	add    BYTE PTR [rax-0x7ffffff8],ah
  42e00d:	add    BYTE PTR [rax],al
  42e00f:	add    BYTE PTR [rbp+0x3d],dh
  42e012:	add    BYTE PTR [rax],r8b
  42e015:	add    BYTE PTR [rax],al
  42e017:	add    BYTE PTR [rax],ah
  42e019:	or     DWORD PTR [rax],eax
  42e01b:	add    BYTE PTR [rax+0x7a000000],al
  42e021:	cmp    eax,0x44
  42e026:	add    BYTE PTR [rax],al
  42e028:	movabs al,ds:0x7f00000080000009
  42e031:	cmp    eax,0x44
  42e036:	add    BYTE PTR [rax],al
  42e038:	and    BYTE PTR [rdx],cl
  42e03a:	add    BYTE PTR [rax],al
  42e03c:	add    BYTE PTR [rax],0x0
  42e03f:	add    BYTE PTR [rbp+rdi*1+0x44],al
  42e046:	add    BYTE PTR [rax],al
  42e048:	movabs al,ds:0x890000008000000a
  42e051:	cmp    eax,0x44
  42e056:	add    BYTE PTR [rax],al
  42e058:	and    BYTE PTR [rbx],cl
  42e05a:	add    BYTE PTR [rax],al
  42e05c:	add    BYTE PTR [rax],0x0
  42e05f:	add    BYTE PTR [rsi+0x443d],cl
  42e065:	add    BYTE PTR [rax],al
  42e067:	add    BYTE PTR [rax-0x7ffffff5],ah
  42e06d:	add    BYTE PTR [rax],al
  42e06f:	add    BYTE PTR [rbx+0x443d],dl
  42e075:	add    BYTE PTR [rax],al
  42e077:	add    BYTE PTR [rax],ah
  42e079:	or     al,0x0
  42e07b:	add    BYTE PTR [rax-0x68000000],al
  42e081:	cmp    eax,0x44
  42e086:	add    BYTE PTR [rax],al
  42e088:	movabs al,ds:0x9d0000008000000c
  42e091:	cmp    eax,0x44
  42e096:	add    BYTE PTR [rax],al
  42e098:	and    BYTE PTR [rip+0x800000],cl        # 0xc2e09e
  42e09e:	add    BYTE PTR [rax],al
  42e0a0:	movabs ds:0xa00000000000443d,al
  42e0a9:	or     eax,0x800000
  42e0ae:	add    BYTE PTR [rax],al
  42e0b0:	test   al,0x3d
  42e0b2:	add    BYTE PTR [rax],r8b
  42e0b5:	add    BYTE PTR [rax],al
  42e0b7:	add    BYTE PTR [rax],ah
  42e0b9:	(bad)  
  42e0ba:	add    BYTE PTR [rax],al
  42e0bc:	add    BYTE PTR [rax],0x0
  42e0bf:	add    BYTE PTR [rsi+0x443d],ch
  42e0c5:	add    BYTE PTR [rax],al
  42e0c7:	add    BYTE PTR [rax-0x7ffffff2],ah
  42e0cd:	add    BYTE PTR [rax],al
  42e0cf:	add    BYTE PTR [rbp+rdi*1+0x44],dh
  42e0d6:	add    BYTE PTR [rax],al
  42e0d8:	and    BYTE PTR [rdi],cl
  42e0da:	add    BYTE PTR [rax],al
  42e0dc:	add    BYTE PTR [rax],0x0
  42e0df:	add    BYTE PTR [rdx+0x443d],bh
  42e0e5:	add    BYTE PTR [rax],al
  42e0e7:	add    BYTE PTR [rax-0x7ffffff1],ah
  42e0ed:	add    BYTE PTR [rax],al
  42e0ef:	add    al,al
  42e0f1:	cmp    eax,0x44
  42e0f6:	add    BYTE PTR [rax],al
  42e0f8:	and    BYTE PTR [rax],dl
  42e0fa:	add    BYTE PTR [rax],al
  42e0fc:	add    BYTE PTR [rax],0x0
  42e0ff:	add    dh,al
  42e101:	cmp    eax,0x44
  42e106:	add    BYTE PTR [rax],al
  42e108:	movabs al,ds:0x20000010
	...
  42e13d:	add    BYTE PTR [rax],al
  42e13f:	add    ah,bl
  42e141:	cmp    eax,0x44
  42e146:	add    BYTE PTR [rax],al
  42e148:	loopne 0x42e187
  42e14a:	add    BYTE PTR [rax],r8b
  42e14d:	add    BYTE PTR [rax],al
  42e14f:	add    ah,ah
  42e151:	cmp    eax,0x44
	...
  42e17e:	add    BYTE PTR [rax],al
  42e180:	call   0x4325c2
  42e185:	add    BYTE PTR [rax],al
  42e187:	add    BYTE PTR [rax],al
  42e189:	add    BYTE PTR [rax],al
  42e18b:	add    BYTE PTR [rax+0x0],al
  42e18e:	add    BYTE PTR [rax],al
  42e190:	in     al,dx
  42e191:	cmp    eax,0x44
  42e196:	add    BYTE PTR [rax],al
  42e198:	add    BYTE PTR [rax],al
  42e19b:	add    BYTE PTR [rax+0x0],al
  42e19e:	add    BYTE PTR [rax],al
  42e1a0:	lock cmp eax,0x44
  42e1a6:	add    BYTE PTR [rax],al
  42e1a8:	add    BYTE PTR [rax],0x0
  42e1ab:	add    BYTE PTR [rax+0x0],al
  42e1ae:	add    BYTE PTR [rax],al
  42e1b0:	hlt    
  42e1b1:	cmp    eax,0x44
  42e1b6:	add    BYTE PTR [rax],al
  42e1b8:	rol    BYTE PTR [rax],0x0
  42e1bb:	add    BYTE PTR [rax+0x0],al
  42e1be:	add    BYTE PTR [rax],al
  42e1c0:	clc    
  42e1c1:	cmp    eax,0x44
  42e1c6:	add    BYTE PTR [rax],al
  42e1c8:	add    BYTE PTR [rcx],al
  42e1ca:	add    BYTE PTR [rax],al
  42e1cc:	add    BYTE PTR [rax],al
  42e1cf:	add    ah,bh
  42e1d1:	cmp    eax,0x44
  42e1d6:	add    BYTE PTR [rax],al
  42e1d8:	rex add DWORD PTR [rax],eax
  42e1db:	add    BYTE PTR [rax+0x0],al
  42e1de:	add    BYTE PTR [rax],al
  42e1e0:	fdivr  QWORD PTR [rip+0x44]        # 0x42e22a
  42e1e6:	add    BYTE PTR [rax],al
  42e1e8:	add    BYTE PTR [rcx],0x0
  42e1eb:	add    BYTE PTR [rax+0x0],al
  42e1ee:	add    BYTE PTR [rax],al
  42e1f0:	loopne 0x42e22f
  42e1f2:	add    BYTE PTR [rax],r8b
  42e1f5:	add    BYTE PTR [rax],al
  42e1f7:	add    al,al
  42e1f9:	add    DWORD PTR [rax],eax
  42e1fb:	add    BYTE PTR [rax+0x0],al
  42e1fe:	add    BYTE PTR [rax],al
  42e200:	add    BYTE PTR [rsi],bh
  42e202:	add    BYTE PTR [rax],r8b
  42e205:	add    BYTE PTR [rax],al
  42e207:	add    BYTE PTR [rax],al
  42e209:	add    al,BYTE PTR [rax]
  42e20b:	add    BYTE PTR [rax+0x0],al
  42e20e:	add    BYTE PTR [rax],al
  42e210:	add    edi,DWORD PTR [rsi]
  42e212:	add    BYTE PTR [rax],r8b
  42e215:	add    BYTE PTR [rax],al
  42e217:	add    BYTE PTR [rax+0x2],al
  42e21a:	add    BYTE PTR [rax],al
  42e21c:	add    BYTE PTR [rax],al
  42e21f:	add    BYTE PTR [rsi],al
  42e221:	add    BYTE PTR ds:[rax],r8b
  42e225:	add    BYTE PTR [rax],al
  42e227:	add    BYTE PTR [rax+0x40000002],al
  42e22d:	add    BYTE PTR [rax],al
  42e22f:	add    BYTE PTR [rdx],cl
  42e231:	add    BYTE PTR ds:[rax],r8b
  42e235:	add    BYTE PTR [rax],al
  42e237:	add    al,al
  42e239:	add    al,BYTE PTR [rax]
  42e23b:	add    BYTE PTR [rax+0x0],al
  42e23e:	add    BYTE PTR [rax],al
  42e240:	(bad)  
  42e241:	add    BYTE PTR ds:[rax],r8b
  42e245:	add    BYTE PTR [rax],al
  42e247:	add    BYTE PTR [rax],al
  42e249:	add    eax,DWORD PTR [rax]
  42e24b:	add    BYTE PTR [rax+0x0],al
  42e24e:	add    BYTE PTR [rax],al
  42e250:	adc    bh,BYTE PTR [rsi]
  42e252:	add    BYTE PTR [rax],r8b
  42e255:	add    BYTE PTR [rax],al
  42e257:	add    BYTE PTR [rax+0x3],al
  42e25a:	add    BYTE PTR [rax],al
  42e25c:	add    BYTE PTR [rax],al
  42e25f:	add    BYTE PTR [rsi],dl
  42e261:	add    BYTE PTR ds:[rax],r8b
  42e265:	add    BYTE PTR [rax],al
  42e267:	add    BYTE PTR [rax+0x40000003],al
  42e26d:	add    BYTE PTR [rax],al
  42e26f:	add    BYTE PTR [rdx],bl
  42e271:	add    BYTE PTR ds:[rax],r8b
  42e275:	add    BYTE PTR [rax],al
  42e277:	add    al,al
  42e279:	add    eax,DWORD PTR [rax]
  42e27b:	add    BYTE PTR [rax+0x0],al
  42e27e:	add    BYTE PTR [rax],al
  42e280:	in     al,0x3d
  42e282:	add    BYTE PTR [rax],r8b
  42e285:	add    BYTE PTR [rax],al
  42e287:	add    BYTE PTR [rax],al
  42e289:	add    al,0x0
  42e28b:	add    BYTE PTR [rax+0x0],al
  42e28e:	add    BYTE PTR [rax],al
  42e290:	(bad)  
  42e291:	add    BYTE PTR ds:[rax],r8b
  42e295:	add    BYTE PTR [rax],al
  42e297:	add    BYTE PTR [rax+0x4],al
  42e29a:	add    BYTE PTR [rax],al
  42e29c:	and    BYTE PTR [rax],al
  42e29e:	add    BYTE PTR [rax],al
  42e2a0:	and    eax,0x443e
  42e2a5:	add    BYTE PTR [rax],al
  42e2a7:	add    BYTE PTR [rax+0x4],ah
  42e2aa:	add    BYTE PTR [rax],al
  42e2ac:	and    BYTE PTR [rax],al
  42e2ae:	add    BYTE PTR [rax],al
  42e2b0:	sub    BYTE PTR [rsi],bh
  42e2b2:	add    BYTE PTR [rax],r8b
  42e2b5:	add    BYTE PTR [rax],al
  42e2b7:	add    BYTE PTR [rax+0x20000004],al
  42e2bd:	add    BYTE PTR [rax],al
  42e2bf:	add    BYTE PTR [rbx],ch
  42e2c1:	add    BYTE PTR ds:[rax],r8b
  42e2c5:	add    BYTE PTR [rax],al
  42e2c7:	add    BYTE PTR [rax+0x20000004],ah
  42e2cd:	add    BYTE PTR [rax],al
  42e2cf:	add    BYTE PTR [rsi],ch
  42e2d1:	add    BYTE PTR ds:[rax],r8b
  42e2d5:	add    BYTE PTR [rax],al
  42e2d7:	add    al,al
  42e2d9:	add    al,0x0
  42e2db:	add    BYTE PTR [rax],ah
  42e2dd:	add    BYTE PTR [rax],al
  42e2df:	add    BYTE PTR [rcx],dh
  42e2e1:	add    BYTE PTR ds:[rax],r8b
  42e2e5:	add    BYTE PTR [rax],al
  42e2e7:	add    al,ah
  42e2e9:	add    al,0x0
  42e2eb:	add    BYTE PTR [rax],ah
  42e2ed:	add    BYTE PTR [rax],al
  42e2ef:	add    BYTE PTR [rsi+rdi*1],dh
  42e2f2:	add    BYTE PTR [rax],r8b
  42e2f5:	add    BYTE PTR [rax],al
  42e2f7:	add    BYTE PTR [rax],al
  42e2f9:	add    eax,0x200000
  42e2fe:	add    BYTE PTR [rax],al
  42e300:	(bad)  
  42e301:	add    BYTE PTR ds:[rax],r8b
  42e305:	add    BYTE PTR [rax],al
  42e307:	add    BYTE PTR [rax],ah
  42e309:	add    eax,0x500000
  42e30e:	add    BYTE PTR [rax],al
  42e310:	cmp    edi,DWORD PTR [rsi]
  42e312:	add    BYTE PTR [rax],r8b
  42e315:	add    BYTE PTR [rax],al
  42e317:	add    BYTE PTR [rax+0x5],dh
  42e31a:	add    BYTE PTR [rax],al
  42e31c:	push   rax
  42e31d:	add    BYTE PTR [rax],al
  42e31f:	add    BYTE PTR [rdi],bh
  42e321:	add    BYTE PTR ds:[rax],r8b
  42e325:	add    BYTE PTR [rax],al
  42e327:	add    al,al
  42e329:	add    eax,0x500000
  42e32e:	add    BYTE PTR [rax],al
  42e330:	rex.XB
  42e331:	add    BYTE PTR ds:[rax],r8b
  42e335:	add    BYTE PTR [rax],al
  42e337:	add    BYTE PTR [rax],dl
  42e339:	(bad)  
  42e33a:	add    BYTE PTR [rax],al
  42e33c:	push   rax
  42e33d:	add    BYTE PTR [rax],al
  42e33f:	add    BYTE PTR [rdi+0x3e],al
  42e342:	add    BYTE PTR [rax],r8b
  42e345:	add    BYTE PTR [rax],al
  42e347:	add    BYTE PTR [rax+0x6],ah
  42e34a:	add    BYTE PTR [rax],al
  42e34c:	push   rax
  42e34d:	add    BYTE PTR [rax],al
  42e34f:	add    BYTE PTR [rbx+0x3e],cl
  42e352:	add    BYTE PTR [rax],r8b
  42e355:	add    BYTE PTR [rax],al
  42e357:	add    BYTE PTR [rax+0x50000006],dh
  42e35d:	add    BYTE PTR [rax],al
  42e35f:	add    BYTE PTR [rdi+0x3e],cl
  42e362:	add    BYTE PTR [rax],r8b
  42e365:	add    BYTE PTR [rax],al
  42e367:	add    BYTE PTR [rax],al
  42e369:	(bad)  
  42e36a:	add    BYTE PTR [rax],al
  42e36c:	push   rax
  42e36d:	add    BYTE PTR [rax],al
  42e36f:	add    BYTE PTR [rbx+0x3e],dl
  42e372:	add    BYTE PTR [rax],r8b
  42e375:	add    BYTE PTR [rax],al
  42e377:	add    BYTE PTR [rax+0x7],dl
  42e37a:	add    BYTE PTR [rax],al
  42e37c:	push   rax
  42e37d:	add    BYTE PTR [rax],al
  42e37f:	add    BYTE PTR [rdi+0x3e],dl
  42e382:	add    BYTE PTR [rax],r8b
  42e385:	add    BYTE PTR [rax],al
  42e387:	add    BYTE PTR [rax+0x20000007],ah
  42e38d:	add    BYTE PTR [rax],al
  42e38f:	add    BYTE PTR [rbp+0x3e],bl
  42e392:	add    BYTE PTR [rax],r8b
  42e395:	add    BYTE PTR [rax],al
  42e397:	add    al,al
  42e399:	(bad)  
  42e39a:	add    BYTE PTR [rax],al
  42e39c:	and    BYTE PTR [rax],al
  42e39e:	add    BYTE PTR [rax],al
  42e3a0:	movsxd edi,DWORD PTR [rsi]
  42e3a2:	add    BYTE PTR [rax],r8b
  42e3a5:	add    BYTE PTR [rax],al
  42e3a7:	add    al,ah
  42e3a9:	(bad)  
  42e3aa:	add    BYTE PTR [rax],al
  42e3ac:	and    BYTE PTR [rax],al
  42e3ae:	add    BYTE PTR [rax],al
  42e3b0:	push   0x443e
  42e3b5:	add    BYTE PTR [rax],al
  42e3b7:	add    BYTE PTR [rax],al
  42e3b9:	or     BYTE PTR [rax],al
  42e3bb:	add    BYTE PTR [rax],ah
  42e3bd:	add    BYTE PTR [rax],al
  42e3bf:	add    BYTE PTR [rsi+0x3e],ch
  42e3c2:	add    BYTE PTR [rax],r8b
  42e3c5:	add    BYTE PTR [rax],al
  42e3c7:	add    BYTE PTR [rax],ah
  42e3c9:	or     BYTE PTR [rax],al
  42e3cb:	add    BYTE PTR [rax],ah
  42e3cd:	add    BYTE PTR [rax],al
  42e3cf:	add    BYTE PTR [rsi+rdi*1+0x44],dh
  42e3d3:	add    BYTE PTR [rax],al
  42e3d5:	add    BYTE PTR [rax],al
  42e3d7:	add    BYTE PTR [rax+0x8],al
  42e3da:	add    BYTE PTR [rax],al
  42e3dc:	and    BYTE PTR [rax],al
  42e3de:	add    BYTE PTR [rax],al
  42e3e0:	jp     0x42e420
  42e3e2:	add    BYTE PTR [rax],r8b
  42e3e5:	add    BYTE PTR [rax],al
  42e3e7:	add    BYTE PTR [rax+0x8],ah
  42e3ea:	add    BYTE PTR [rax],al
  42e3ec:	and    BYTE PTR [rax],al
  42e3ee:	add    BYTE PTR [rax],al
  42e3f0:	cmp    BYTE PTR [rsi],0x44
  42e3f3:	add    BYTE PTR [rax],al
  42e3f5:	add    BYTE PTR [rax],al
  42e3f7:	add    BYTE PTR [rax+0x20000008],al
  42e3fd:	add    BYTE PTR [rax],al
  42e3ff:	add    BYTE PTR [rsi+rdi*1+0x44],al
  42e406:	add    BYTE PTR [rax],al
  42e408:	movabs al,ds:0x8900000080000008
  42e411:	add    BYTE PTR ds:[rax],r8b
  42e415:	add    BYTE PTR [rax],al
  42e417:	add    BYTE PTR [rax],ah
  42e419:	or     DWORD PTR [rax],eax
  42e41b:	add    BYTE PTR [rax-0x72000000],al
  42e421:	add    BYTE PTR ds:[rax],r8b
  42e425:	add    BYTE PTR [rax],al
  42e427:	add    BYTE PTR [rax-0x7ffffff7],ah
  42e42d:	add    BYTE PTR [rax],al
  42e42f:	add    BYTE PTR [rbx+0x443e],dl
  42e435:	add    BYTE PTR [rax],al
  42e437:	add    BYTE PTR [rax],ah
  42e439:	or     al,BYTE PTR [rax]
  42e43b:	add    BYTE PTR [rax-0x68000000],al
  42e441:	add    BYTE PTR ds:[rax],r8b
  42e445:	add    BYTE PTR [rax],al
  42e447:	add    BYTE PTR [rax-0x7ffffff6],ah
  42e44d:	add    BYTE PTR [rax],al
  42e44f:	add    BYTE PTR [rbp+0x443e],bl
  42e455:	add    BYTE PTR [rax],al
  42e457:	add    BYTE PTR [rax],ah
  42e459:	or     eax,DWORD PTR [rax]
  42e45b:	add    BYTE PTR [rax-0x5e000000],al
  42e461:	add    BYTE PTR ds:[rax],r8b
  42e465:	add    BYTE PTR [rax],al
  42e467:	add    BYTE PTR [rax-0x7ffffff5],ah
  42e46d:	add    BYTE PTR [rax],al
  42e46f:	add    BYTE PTR [rdi+0x443e],ah
  42e475:	add    BYTE PTR [rax],al
  42e477:	add    BYTE PTR [rax],ah
  42e479:	or     al,0x0
  42e47b:	add    BYTE PTR [rax-0x54000000],al
  42e481:	add    BYTE PTR ds:[rax],r8b
  42e485:	add    BYTE PTR [rax],al
  42e487:	add    BYTE PTR [rax-0x7ffffff4],ah
  42e48d:	add    BYTE PTR [rax],al
  42e48f:	add    BYTE PTR [rcx+0x443e],dh
  42e495:	add    BYTE PTR [rax],al
  42e497:	add    BYTE PTR [rax],ah
  42e499:	or     eax,0x800000
  42e49e:	add    BYTE PTR [rax],al
  42e4a0:	mov    dh,0x3e
  42e4a2:	add    BYTE PTR [rax],r8b
  42e4a5:	add    BYTE PTR [rax],al
  42e4a7:	add    BYTE PTR [rax-0x7ffffff3],ah
  42e4ad:	add    BYTE PTR [rax],al
  42e4af:	add    BYTE PTR [rsi+rdi*1+0x44],bh
  42e4b6:	add    BYTE PTR [rax],al
  42e4b8:	and    BYTE PTR [rsi],cl
  42e4ba:	add    BYTE PTR [rax],al
  42e4bc:	add    BYTE PTR [rax],0x0
  42e4bf:	add    dl,al
  42e4c1:	add    BYTE PTR ds:[rax],r8b
  42e4c5:	add    BYTE PTR [rax],al
  42e4c7:	add    BYTE PTR [rax-0x7ffffff2],ah
  42e4cd:	add    BYTE PTR [rax],al
  42e4cf:	add    al,cl
  42e4d1:	add    BYTE PTR ds:[rax],r8b
  42e4d5:	add    BYTE PTR [rax],al
  42e4d7:	add    BYTE PTR [rax],ah
  42e4d9:	sldt   WORD PTR [rax]
  42e4dc:	add    BYTE PTR [rax],0x0
  42e4df:	add    dh,cl
  42e4e1:	add    BYTE PTR ds:[rax],r8b
  42e4e5:	add    BYTE PTR [rax],al
  42e4e7:	add    BYTE PTR [rax-0x7ffffff1],ah
  42e4ed:	add    BYTE PTR [rax],al
  42e4ef:	add    ah,dl
  42e4f1:	add    BYTE PTR ds:[rax],r8b
  42e4f5:	add    BYTE PTR [rax],al
  42e4f7:	add    BYTE PTR [rax],ah
  42e4f9:	adc    BYTE PTR [rax],al
  42e4fb:	add    BYTE PTR [rax-0x26000000],al
  42e501:	add    BYTE PTR ds:[rax],r8b
  42e505:	add    BYTE PTR [rax],al
  42e507:	add    BYTE PTR [rax+0x20000010],ah
  42e50d:	add    BYTE PTR [rax],al
  42e50f:	add    al,ah
  42e511:	add    BYTE PTR ds:[rax],r8b
  42e515:	add    BYTE PTR [rax],al
  42e517:	add    al,al
  42e519:	adc    BYTE PTR [rax],al
  42e51b:	add    BYTE PTR [rax-0x1a000000],al
  42e521:	add    BYTE PTR ds:[rax],r8b
  42e525:	add    BYTE PTR [rax],al
  42e527:	add    BYTE PTR [rax+0x11],al
  42e52a:	add    BYTE PTR [rax],al
  42e52c:	add    BYTE PTR [rax],0x0
  42e52f:	add    ah,ch
  42e531:	add    BYTE PTR ds:[rax],r8b
  42e535:	add    BYTE PTR [rax],al
  42e537:	add    al,al
  42e539:	adc    DWORD PTR [rax],eax
  42e53b:	add    BYTE PTR [rax-0xe000000],al
  42e541:	add    BYTE PTR ds:[rax],r8b
  42e545:	add    BYTE PTR [rax],al
  42e547:	add    BYTE PTR [rax+0x12],al
  42e54a:	add    BYTE PTR [rax],al
  42e54c:	add    BYTE PTR [rax],0x0
  42e54f:	add    al,bh
  42e551:	add    BYTE PTR ds:[rax],r8b
  42e555:	add    BYTE PTR [rax],al
  42e557:	add    al,al
  42e559:	adc    al,BYTE PTR [rax]
  42e55b:	add    BYTE PTR [rax-0x2000000],al
  42e561:	add    BYTE PTR ds:[rax],r8b
  42e565:	add    BYTE PTR [rax],al
  42e567:	add    BYTE PTR [rax+0x13],al
  42e56a:	add    BYTE PTR [rax],al
  42e56c:	add    BYTE PTR [rax],0x0
  42e56f:	add    BYTE PTR [rdi+rdi*1],al
  42e572:	add    BYTE PTR [rax],r8b
  42e575:	add    BYTE PTR [rax],al
  42e577:	add    al,al
  42e579:	adc    eax,DWORD PTR [rax]
  42e57b:	add    BYTE PTR [rax+0xa000000],al
  42e581:	(bad)  
  42e582:	add    BYTE PTR [rax],r8b
  42e585:	add    BYTE PTR [rax],al
  42e587:	add    BYTE PTR [rax+0x14],al
  42e58a:	add    BYTE PTR [rax],al
  42e58c:	add    BYTE PTR [rax],0x0
  42e58f:	add    BYTE PTR [rax],dl
  42e591:	(bad)  
  42e592:	add    BYTE PTR [rax],r8b
  42e595:	add    BYTE PTR [rax],al
  42e597:	add    al,al
  42e599:	adc    al,0x0
  42e59b:	add    BYTE PTR [rax+0x16000000],al
  42e5a1:	(bad)  
  42e5a2:	add    BYTE PTR [rax],r8b
  42e5a5:	add    BYTE PTR [rax],al
  42e5a7:	add    BYTE PTR [rax+0x15],al
  42e5aa:	add    BYTE PTR [rax],al
  42e5ac:	add    BYTE PTR [rax],0x0
  42e5af:	add    BYTE PTR [rdi+rdi*1],bl
  42e5b2:	add    BYTE PTR [rax],r8b
  42e5b5:	add    BYTE PTR [rax],al
  42e5b7:	add    al,al
  42e5b9:	adc    eax,0x800000
  42e5be:	add    BYTE PTR [rax],al
  42e5c0:	and    edi,DWORD PTR [rdi]
  42e5c2:	add    BYTE PTR [rax],r8b
  42e5c5:	add    BYTE PTR [rax],al
  42e5c7:	add    BYTE PTR [rax+0x16],al
  42e5ca:	add    BYTE PTR [rax],al
  42e5cc:	add    BYTE PTR [rax],0x0
  42e5cf:	add    BYTE PTR [rdx],ch
  42e5d1:	(bad)  
  42e5d2:	add    BYTE PTR [rax],r8b
  42e5d5:	add    BYTE PTR [rax],al
  42e5d7:	add    al,al
  42e5d9:	(bad)  
  42e5da:	add    BYTE PTR [rax],al
  42e5dc:	add    BYTE PTR [rax],0x0
  42e5df:	add    BYTE PTR [rcx],dh
  42e5e1:	(bad)  
  42e5e2:	add    BYTE PTR [rax],r8b
  42e5e5:	add    BYTE PTR [rax],al
  42e5e7:	add    BYTE PTR [rax+0x17],al
  42e5ea:	add    BYTE PTR [rax],al
  42e5ec:	add    BYTE PTR [rax],0x0
  42e5ef:	add    BYTE PTR [rax],bh
  42e5f1:	(bad)  
  42e5f2:	add    BYTE PTR [rax],r8b
  42e5f5:	add    BYTE PTR [rax],al
  42e5f7:	add    al,al
  42e5f9:	(bad)  
  42e5fa:	add    BYTE PTR [rax],al
  42e5fc:	add    BYTE PTR [rax],0x0
  42e5ff:	add    BYTE PTR [rdi],bh
  42e601:	(bad)  
  42e602:	add    BYTE PTR [rax],r8b
  42e605:	add    BYTE PTR [rax],al
  42e607:	add    BYTE PTR [rax+0x18],al
  42e60a:	add    BYTE PTR [rax],al
  42e60c:	add    BYTE PTR [rax],0x0
	...
  42e63f:	add    BYTE PTR [rdi+0x3f],bl
  42e642:	add    BYTE PTR [rax],r8b
  42e645:	add    BYTE PTR [rax],al
  42e647:	add    BYTE PTR [rbx+0x3f],ah
  42e64a:	add    BYTE PTR [rax],r8b
  42e64d:	add    BYTE PTR [rax],al
  42e64f:	add    BYTE PTR [rdi+0x3f],ah
  42e652:	add    BYTE PTR [rax],r8b
	...
  42e67d:	add    BYTE PTR [rax],al
  42e67f:	add    BYTE PTR [rbx+0x3f],ch
  42e682:	add    BYTE PTR [rax],r8b
  42e685:	add    BYTE PTR [rax],al
  42e687:	add    BYTE PTR [rax],al
  42e689:	add    BYTE PTR [rax],al
  42e68b:	add    BYTE PTR [rax+0x0],al
  42e68e:	add    BYTE PTR [rax],al
  42e690:	outs   dx,DWORD PTR ds:[rsi]
  42e691:	(bad)  
  42e692:	add    BYTE PTR [rax],r8b
  42e695:	add    BYTE PTR [rax],al
  42e697:	add    BYTE PTR [rax+0x0],al
  42e69a:	add    BYTE PTR [rax],al
  42e69c:	add    BYTE PTR [rax],al
  42e69f:	add    BYTE PTR [rbx+0x3f],dh
  42e6a2:	add    BYTE PTR [rax],r8b
  42e6a5:	add    BYTE PTR [rax],al
  42e6a7:	add    BYTE PTR [rax+0x40000000],al
  42e6ad:	add    BYTE PTR [rax],al
  42e6af:	add    BYTE PTR [rdi+0x3f],dh
  42e6b2:	add    BYTE PTR [rax],r8b
  42e6b5:	add    BYTE PTR [rax],al
  42e6b7:	add    al,al
  42e6b9:	add    BYTE PTR [rax],al
  42e6bb:	add    BYTE PTR [rax+0x0],al
  42e6be:	add    BYTE PTR [rax],al
  42e6c0:	jnp    0x42e701
  42e6c2:	add    BYTE PTR [rax],r8b
  42e6c5:	add    BYTE PTR [rax],al
  42e6c7:	add    BYTE PTR [rax],al
  42e6c9:	add    DWORD PTR [rax],eax
  42e6cb:	add    BYTE PTR [rax+0x0],al
  42e6ce:	add    BYTE PTR [rax],al
  42e6d0:	jg     0x42e711
  42e6d2:	add    BYTE PTR [rax],r8b
  42e6d5:	add    BYTE PTR [rax],al
  42e6d7:	add    BYTE PTR [rax+0x1],al
  42e6da:	add    BYTE PTR [rax],al
  42e6dc:	add    BYTE PTR [rax],al
  42e6df:	add    BYTE PTR [rdi+0x3f],bl
  42e6e2:	add    BYTE PTR [rax],r8b
  42e6e5:	add    BYTE PTR [rax],al
  42e6e7:	add    BYTE PTR [rax+0x40000001],al
  42e6ed:	add    BYTE PTR [rax],al
  42e6ef:	add    BYTE PTR [rbx+0x3f],ah
  42e6f2:	add    BYTE PTR [rax],r8b
  42e6f5:	add    BYTE PTR [rax],al
  42e6f7:	add    al,al
  42e6f9:	add    DWORD PTR [rax],eax
  42e6fb:	add    BYTE PTR [rax+0x0],al
  42e6fe:	add    BYTE PTR [rax],al
  42e700:	cmp    DWORD PTR [rdi],0x44
  42e703:	add    BYTE PTR [rax],al
  42e705:	add    BYTE PTR [rax],al
  42e707:	add    BYTE PTR [rax],al
  42e709:	add    al,BYTE PTR [rax]
  42e70b:	add    BYTE PTR [rax+0x0],al
  42e70e:	add    BYTE PTR [rax],al
  42e710:	xchg   BYTE PTR [rdi],bh
  42e712:	add    BYTE PTR [rax],r8b
  42e715:	add    BYTE PTR [rax],al
  42e717:	add    BYTE PTR [rax+0x2],al
  42e71a:	add    BYTE PTR [rax],al
  42e71c:	add    BYTE PTR [rax],al
  42e71f:	add    BYTE PTR [rcx+0x443f],cl
  42e725:	add    BYTE PTR [rax],al
  42e727:	add    BYTE PTR [rax+0x40000002],al
  42e72d:	add    BYTE PTR [rax],al
  42e72f:	add    BYTE PTR [rbp+0x443f],cl
  42e735:	add    BYTE PTR [rax],al
  42e737:	add    al,al
  42e739:	add    al,BYTE PTR [rax]
  42e73b:	add    BYTE PTR [rax+0x0],al
  42e73e:	add    BYTE PTR [rax],al
  42e740:	xchg   ecx,eax
  42e741:	(bad)  
  42e742:	add    BYTE PTR [rax],r8b
  42e745:	add    BYTE PTR [rax],al
  42e747:	add    BYTE PTR [rax],al
  42e749:	add    eax,DWORD PTR [rax]
  42e74b:	add    BYTE PTR [rax+0x0],al
  42e74e:	add    BYTE PTR [rax],al
  42e750:	xchg   ebp,eax
  42e751:	(bad)  
  42e752:	add    BYTE PTR [rax],r8b
  42e755:	add    BYTE PTR [rax],al
  42e757:	add    BYTE PTR [rax+0x3],al
  42e75a:	add    BYTE PTR [rax],al
  42e75c:	add    BYTE PTR [rax],al
  42e75f:	add    BYTE PTR [rcx+0x443f],bl
  42e765:	add    BYTE PTR [rax],al
  42e767:	add    BYTE PTR [rax+0x40000003],al
  42e76d:	add    BYTE PTR [rax],al
  42e76f:	add    BYTE PTR [rbp+0x443f],bl
  42e775:	add    BYTE PTR [rax],al
  42e777:	add    al,al
  42e779:	add    eax,DWORD PTR [rax]
  42e77b:	add    BYTE PTR [rax+0x0],al
  42e77e:	add    BYTE PTR [rax],al
  42e780:	addr32 (bad) 
  42e782:	add    BYTE PTR [rax],r8b
  42e785:	add    BYTE PTR [rax],al
  42e787:	add    BYTE PTR [rax],al
  42e789:	add    al,0x0
  42e78b:	add    BYTE PTR [rax+0x0],al
  42e78e:	add    BYTE PTR [rax],al
  42e790:	movabs eax,ds:0x400000000000443f
  42e799:	add    al,0x0
  42e79b:	add    BYTE PTR [rax],ah
  42e79d:	add    BYTE PTR [rax],al
  42e79f:	add    BYTE PTR [rax+0x443f],ch
  42e7a5:	add    BYTE PTR [rax],al
  42e7a7:	add    BYTE PTR [rax+0x4],ah
  42e7aa:	add    BYTE PTR [rax],al
  42e7ac:	and    BYTE PTR [rax],al
  42e7ae:	add    BYTE PTR [rax],al
  42e7b0:	stos   DWORD PTR es:[rdi],eax
  42e7b1:	(bad)  
  42e7b2:	add    BYTE PTR [rax],r8b
  42e7b5:	add    BYTE PTR [rax],al
  42e7b7:	add    BYTE PTR [rax+0x20000004],al
  42e7bd:	add    BYTE PTR [rax],al
  42e7bf:	add    BYTE PTR [rsi+0x443f],ch
  42e7c5:	add    BYTE PTR [rax],al
  42e7c7:	add    BYTE PTR [rax+0x20000004],ah
  42e7cd:	add    BYTE PTR [rax],al
  42e7cf:	add    BYTE PTR [rcx+0x443f],dh
  42e7d5:	add    BYTE PTR [rax],al
  42e7d7:	add    al,al
  42e7d9:	add    al,0x0
  42e7db:	add    BYTE PTR [rax],ah
  42e7dd:	add    BYTE PTR [rax],al
  42e7df:	add    BYTE PTR [rdi+rdi*1+0x44],dh
  42e7e6:	add    BYTE PTR [rax],al
  42e7e8:	loopne 0x42e7ee
  42e7ea:	add    BYTE PTR [rax],al
  42e7ec:	and    BYTE PTR [rax],al
  42e7ee:	add    BYTE PTR [rax],al
  42e7f0:	mov    bh,0x3f
  42e7f2:	add    BYTE PTR [rax],r8b
  42e7f5:	add    BYTE PTR [rax],al
  42e7f7:	add    BYTE PTR [rax],al
  42e7f9:	add    eax,0x200000
  42e7fe:	add    BYTE PTR [rax],al
  42e800:	mov    edx,0x443f
  42e805:	add    BYTE PTR [rax],al
  42e807:	add    BYTE PTR [rax],ah
  42e809:	add    eax,0x500000
  42e80e:	add    BYTE PTR [rax],al
  42e810:	mov    esi,0x443f
  42e815:	add    BYTE PTR [rax],al
  42e817:	add    BYTE PTR [rax+0x5],dh
  42e81a:	add    BYTE PTR [rax],al
  42e81c:	push   rax
  42e81d:	add    BYTE PTR [rax],al
  42e81f:	add    dl,al
  42e821:	(bad)  
  42e822:	add    BYTE PTR [rax],r8b
  42e825:	add    BYTE PTR [rax],al
  42e827:	add    al,al
  42e829:	add    eax,0x500000
  42e82e:	add    BYTE PTR [rax],al
  42e830:	(bad)  
  42e831:	(bad)  
  42e832:	add    BYTE PTR [rax],r8b
  42e835:	add    BYTE PTR [rax],al
  42e837:	add    BYTE PTR [rax],dl
  42e839:	(bad)  
  42e83a:	add    BYTE PTR [rax],al
  42e83c:	push   rax
  42e83d:	add    BYTE PTR [rax],al
  42e83f:	add    dl,cl
  42e841:	(bad)  
  42e842:	add    BYTE PTR [rax],r8b
  42e845:	add    BYTE PTR [rax],al
  42e847:	add    BYTE PTR [rax+0x6],ah
  42e84a:	add    BYTE PTR [rax],al
  42e84c:	push   rax
  42e84d:	add    BYTE PTR [rax],al
  42e84f:	add    dh,cl
  42e851:	(bad)  
  42e852:	add    BYTE PTR [rax],r8b
  42e855:	add    BYTE PTR [rax],al
  42e857:	add    BYTE PTR [rax+0x50000006],dh
  42e85d:	add    BYTE PTR [rax],al
  42e85f:	add    dl,dl
  42e861:	(bad)  
  42e862:	add    BYTE PTR [rax],r8b
  42e865:	add    BYTE PTR [rax],al
  42e867:	add    BYTE PTR [rax],al
  42e869:	(bad)  
  42e86a:	add    BYTE PTR [rax],al
  42e86c:	push   rax
  42e86d:	add    BYTE PTR [rax],al
  42e86f:	add    dh,dl
  42e871:	(bad)  
  42e872:	add    BYTE PTR [rax],r8b
  42e875:	add    BYTE PTR [rax],al
  42e877:	add    BYTE PTR [rax+0x7],dl
  42e87a:	add    BYTE PTR [rax],al
  42e87c:	push   rax
  42e87d:	add    BYTE PTR [rax],al
  42e87f:	add    dl,bl
  42e881:	(bad)  
  42e882:	add    BYTE PTR [rax],r8b
  42e885:	add    BYTE PTR [rax],al
  42e887:	add    BYTE PTR [rax+0x20000007],ah
  42e88d:	add    BYTE PTR [rax],al
  42e88f:	add    al,ah
  42e891:	(bad)  
  42e892:	add    BYTE PTR [rax],r8b
  42e895:	add    BYTE PTR [rax],al
  42e897:	add    al,al
  42e899:	(bad)  
  42e89a:	add    BYTE PTR [rax],al
  42e89c:	and    BYTE PTR [rax],al
  42e89e:	add    BYTE PTR [rax],al
  42e8a0:	out    0x3f,al
  42e8a2:	add    BYTE PTR [rax],r8b
  42e8a5:	add    BYTE PTR [rax],al
  42e8a7:	add    al,ah
  42e8a9:	(bad)  
  42e8aa:	add    BYTE PTR [rax],al
  42e8ac:	and    BYTE PTR [rax],al
  42e8ae:	add    BYTE PTR [rax],al
  42e8b0:	jmp    0x42e8f1
  42e8b2:	add    BYTE PTR [rax],r8b
  42e8b5:	add    BYTE PTR [rax],al
  42e8b7:	add    BYTE PTR [rax],al
  42e8b9:	or     BYTE PTR [rax],al
  42e8bb:	add    BYTE PTR [rax],ah
  42e8bd:	add    BYTE PTR [rax],al
  42e8bf:	add    cl,dh
  42e8c1:	(bad)  
  42e8c2:	add    BYTE PTR [rax],r8b
  42e8c5:	add    BYTE PTR [rax],al
  42e8c7:	add    BYTE PTR [rax],ah
  42e8c9:	or     BYTE PTR [rax],al
  42e8cb:	add    BYTE PTR [rax],ah
  42e8cd:	add    BYTE PTR [rax],al
  42e8cf:	add    bh,dh
  42e8d1:	(bad)  
  42e8d2:	add    BYTE PTR [rax],r8b
  42e8d5:	add    BYTE PTR [rax],al
  42e8d7:	add    BYTE PTR [rax+0x8],al
  42e8da:	add    BYTE PTR [rax],al
  42e8dc:	and    BYTE PTR [rax],al
  42e8de:	add    BYTE PTR [rax],al
  42e8e0:	std    
  42e8e1:	(bad)  
  42e8e2:	add    BYTE PTR [rax],r8b
  42e8e5:	add    BYTE PTR [rax],al
  42e8e7:	add    BYTE PTR [rax+0x8],ah
  42e8ea:	add    BYTE PTR [rax],al
  42e8ec:	and    BYTE PTR [rax],al
  42e8ee:	add    BYTE PTR [rax],al
  42e8f0:	add    eax,DWORD PTR [rax+0x44]
  42e8f3:	add    BYTE PTR [rax],al
  42e8f5:	add    BYTE PTR [rax],al
  42e8f7:	add    BYTE PTR [rax+0x20000008],al
  42e8fd:	add    BYTE PTR [rax],al
  42e8ff:	add    BYTE PTR [rdi],al
  42e901:	rex
  42e902:	add    BYTE PTR [rax],r8b
  42e905:	add    BYTE PTR [rax],al
  42e907:	add    BYTE PTR [rax-0x7ffffff8],ah
  42e90d:	add    BYTE PTR [rax],al
  42e90f:	add    BYTE PTR [rax+rax*2],cl
  42e912:	add    BYTE PTR [rax],r8b
  42e915:	add    BYTE PTR [rax],al
  42e917:	add    BYTE PTR [rax],ah
  42e919:	or     DWORD PTR [rax],eax
  42e91b:	add    BYTE PTR [rax+0x11000000],al
  42e921:	rex
  42e922:	add    BYTE PTR [rax],r8b
  42e925:	add    BYTE PTR [rax],al
  42e927:	add    BYTE PTR [rax-0x7ffffff7],ah
  42e92d:	add    BYTE PTR [rax],al
  42e92f:	add    BYTE PTR [rsi],dl
  42e931:	rex
  42e932:	add    BYTE PTR [rax],r8b
  42e935:	add    BYTE PTR [rax],al
  42e937:	add    BYTE PTR [rax],ah
  42e939:	or     al,BYTE PTR [rax]
  42e93b:	add    BYTE PTR [rax+0x1b000000],al
  42e941:	rex
  42e942:	add    BYTE PTR [rax],r8b
  42e945:	add    BYTE PTR [rax],al
  42e947:	add    BYTE PTR [rax-0x7ffffff6],ah
  42e94d:	add    BYTE PTR [rax],al
  42e94f:	add    BYTE PTR [rax],ah
  42e951:	rex
  42e952:	add    BYTE PTR [rax],r8b
  42e955:	add    BYTE PTR [rax],al
  42e957:	add    BYTE PTR [rax],ah
  42e959:	or     eax,DWORD PTR [rax]
  42e95b:	add    BYTE PTR [rax+0x25000000],al
  42e961:	rex
  42e962:	add    BYTE PTR [rax],r8b
  42e965:	add    BYTE PTR [rax],al
  42e967:	add    BYTE PTR [rax-0x7ffffff5],ah
  42e96d:	add    BYTE PTR [rax],al
  42e96f:	add    BYTE PTR [rdx],ch
  42e971:	rex
  42e972:	add    BYTE PTR [rax],r8b
  42e975:	add    BYTE PTR [rax],al
  42e977:	add    BYTE PTR [rax],ah
  42e979:	or     al,0x0
  42e97b:	add    BYTE PTR [rax+0x2f000000],al
  42e981:	rex
  42e982:	add    BYTE PTR [rax],r8b
  42e985:	add    BYTE PTR [rax],al
  42e987:	add    BYTE PTR [rax-0x7ffffff4],ah
  42e98d:	add    BYTE PTR [rax],al
  42e98f:	add    BYTE PTR [rax+rax*2],dh
  42e992:	add    BYTE PTR [rax],r8b
  42e995:	add    BYTE PTR [rax],al
  42e997:	add    BYTE PTR [rax],ah
  42e999:	or     eax,0x800000
  42e99e:	add    BYTE PTR [rax],al
  42e9a0:	cmp    DWORD PTR [rax+0x44],eax
  42e9a3:	add    BYTE PTR [rax],al
  42e9a5:	add    BYTE PTR [rax],al
  42e9a7:	add    BYTE PTR [rax-0x7ffffff3],ah
  42e9ad:	add    BYTE PTR [rax],al
  42e9af:	add    BYTE PTR [rdi],bh
  42e9b1:	rex
  42e9b2:	add    BYTE PTR [rax],r8b
  42e9b5:	add    BYTE PTR [rax],al
  42e9b7:	add    BYTE PTR [rax],ah
  42e9b9:	(bad)  
  42e9ba:	add    BYTE PTR [rax],al
  42e9bc:	add    BYTE PTR [rax],0x0
  42e9bf:	add    BYTE PTR [rbp+0x40],al
  42e9c2:	add    BYTE PTR [rax],r8b
  42e9c5:	add    BYTE PTR [rax],al
  42e9c7:	add    BYTE PTR [rax-0x7ffffff2],ah
  42e9cd:	add    BYTE PTR [rax],al
  42e9cf:	add    BYTE PTR [rbx+0x40],cl
  42e9d2:	add    BYTE PTR [rax],r8b
  42e9d5:	add    BYTE PTR [rax],al
  42e9d7:	add    BYTE PTR [rax],ah
  42e9d9:	sldt   WORD PTR [rax]
  42e9dc:	add    BYTE PTR [rax],0x0
  42e9df:	add    BYTE PTR [rcx+0x40],dl
  42e9e2:	add    BYTE PTR [rax],r8b
  42e9e5:	add    BYTE PTR [rax],al
  42e9e7:	add    BYTE PTR [rax-0x7ffffff1],ah
  42e9ed:	add    BYTE PTR [rax],al
  42e9ef:	add    BYTE PTR [rdi+0x40],dl
  42e9f2:	add    BYTE PTR [rax],r8b
  42e9f5:	add    BYTE PTR [rax],al
  42e9f7:	add    BYTE PTR [rax],ah
  42e9f9:	adc    BYTE PTR [rax],al
  42e9fb:	add    BYTE PTR [rax+0x5d000000],al
  42ea01:	rex
  42ea02:	add    BYTE PTR [rax],r8b
  42ea05:	add    BYTE PTR [rax],al
  42ea07:	add    BYTE PTR [rax+0x20000010],ah
  42ea0d:	add    BYTE PTR [rax],al
  42ea0f:	add    BYTE PTR [rbx+0x40],ah
  42ea12:	add    BYTE PTR [rax],r8b
  42ea15:	add    BYTE PTR [rax],al
  42ea17:	add    al,al
  42ea19:	adc    BYTE PTR [rax],al
  42ea1b:	add    BYTE PTR [rax+0x69000000],al
  42ea21:	rex
  42ea22:	add    BYTE PTR [rax],r8b
  42ea25:	add    BYTE PTR [rax],al
  42ea27:	add    BYTE PTR [rax+0x11],al
  42ea2a:	add    BYTE PTR [rax],al
  42ea2c:	add    BYTE PTR [rax],0x0
  42ea2f:	add    BYTE PTR [rdi+0x40],ch
  42ea32:	add    BYTE PTR [rax],r8b
  42ea35:	add    BYTE PTR [rax],al
  42ea37:	add    al,al
  42ea39:	adc    DWORD PTR [rax],eax
  42ea3b:	add    BYTE PTR [rax+0x75000000],al
  42ea41:	rex
  42ea42:	add    BYTE PTR [rax],r8b
  42ea45:	add    BYTE PTR [rax],al
  42ea47:	add    BYTE PTR [rax+0x12],al
  42ea4a:	add    BYTE PTR [rax],al
  42ea4c:	add    BYTE PTR [rax],0x0
  42ea4f:	add    BYTE PTR [rbx+0x40],bh
  42ea52:	add    BYTE PTR [rax],r8b
  42ea55:	add    BYTE PTR [rax],al
  42ea57:	add    al,al
  42ea59:	adc    al,BYTE PTR [rax]
  42ea5b:	add    BYTE PTR [rax-0x7f000000],al
  42ea61:	rex
  42ea62:	add    BYTE PTR [rax],r8b
  42ea65:	add    BYTE PTR [rax],al
  42ea67:	add    BYTE PTR [rax+0x13],al
  42ea6a:	add    BYTE PTR [rax],al
  42ea6c:	add    BYTE PTR [rax],0x0
  42ea6f:	add    BYTE PTR [rdi+0x4440],al
  42ea75:	add    BYTE PTR [rax],al
  42ea77:	add    al,al
  42ea79:	adc    eax,DWORD PTR [rax]
  42ea7b:	add    BYTE PTR [rax-0x73000000],al
  42ea81:	rex
  42ea82:	add    BYTE PTR [rax],r8b
  42ea85:	add    BYTE PTR [rax],al
  42ea87:	add    BYTE PTR [rax+0x14],al
  42ea8a:	add    BYTE PTR [rax],al
  42ea8c:	add    BYTE PTR [rax],0x0
  42ea8f:	add    BYTE PTR [rbx+0x4440],dl
  42ea95:	add    BYTE PTR [rax],al
  42ea97:	add    al,al
  42ea99:	adc    al,0x0
  42ea9b:	add    BYTE PTR [rax-0x67000000],al
  42eaa1:	rex
  42eaa2:	add    BYTE PTR [rax],r8b
  42eaa5:	add    BYTE PTR [rax],al
  42eaa7:	add    BYTE PTR [rax+0x15],al
  42eaaa:	add    BYTE PTR [rax],al
  42eaac:	add    BYTE PTR [rax],0x0
  42eaaf:	add    BYTE PTR [rdi+0x4440],bl
  42eab5:	add    BYTE PTR [rax],al
  42eab7:	add    al,al
  42eab9:	adc    eax,0x800000
  42eabe:	add    BYTE PTR [rax],al
  42eac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42eac1:	rex
  42eac2:	add    BYTE PTR [rax],r8b
  42eac5:	add    BYTE PTR [rax],al
  42eac7:	add    BYTE PTR [rax+0x16],al
  42eaca:	add    BYTE PTR [rax],al
  42eacc:	add    BYTE PTR [rax],0x0
  42eacf:	add    BYTE PTR [rbp+0x4440],ch
  42ead5:	add    BYTE PTR [rax],al
  42ead7:	add    al,al
  42ead9:	(bad)  
  42eada:	add    BYTE PTR [rax],al
  42eadc:	add    BYTE PTR [rax],0x0
  42eadf:	add    BYTE PTR [rax+rax*2+0x44],dh
  42eae6:	add    BYTE PTR [rax],al
  42eae8:	rex (bad) 
  42eaea:	add    BYTE PTR [rax],al
  42eaec:	add    BYTE PTR [rax],0x0
  42eaef:	add    BYTE PTR [rbx+0x4440],bh
  42eaf5:	add    BYTE PTR [rax],al
  42eaf7:	add    al,al
  42eaf9:	(bad)  
  42eafa:	add    BYTE PTR [rax],al
  42eafc:	add    BYTE PTR [rax],0x0
  42eaff:	add    dl,al
  42eb01:	rex
  42eb02:	add    BYTE PTR [rax],r8b
  42eb05:	add    BYTE PTR [rax],al
  42eb07:	add    BYTE PTR [rax+0x18],al
  42eb0a:	add    BYTE PTR [rax],al
  42eb0c:	add    BYTE PTR [rax],0x0
  42eb0f:	add    cl,cl
  42eb11:	rex
  42eb12:	add    BYTE PTR [rax],r8b
  42eb15:	add    BYTE PTR [rax],al
  42eb17:	add    al,al
  42eb19:	sbb    BYTE PTR [rax],al
  42eb1b:	add    BYTE PTR [rax-0x2f000000],al
  42eb21:	rex
  42eb22:	add    BYTE PTR [rax],r8b
  42eb25:	add    BYTE PTR [rax],al
  42eb27:	add    BYTE PTR [rax+0x19],al
  42eb2a:	add    BYTE PTR [rax],al
  42eb2c:	add    BYTE PTR [rax],0x0
  42eb2f:	add    cl,bl
  42eb31:	rex
  42eb32:	add    BYTE PTR [rax],r8b
  42eb35:	add    BYTE PTR [rax],al
  42eb37:	add    al,al
  42eb39:	sbb    DWORD PTR [rax],eax
  42eb3b:	add    BYTE PTR [rax-0x1f000000],al
  42eb41:	rex
  42eb42:	add    BYTE PTR [rax],r8b
  42eb45:	add    BYTE PTR [rax],al
  42eb47:	add    BYTE PTR [rax+0x1a],al
  42eb4a:	add    BYTE PTR [rax],al
  42eb4c:	add    BYTE PTR [rax],0x0
  42eb4f:	add    cl,ch
  42eb51:	rex
  42eb52:	add    BYTE PTR [rax],r8b
  42eb55:	add    BYTE PTR [rax],al
  42eb57:	add    al,al
  42eb59:	sbb    al,BYTE PTR [rax]
  42eb5b:	add    BYTE PTR [rax+0x0],al
  42eb5e:	add    BYTE PTR [rax],al
  42eb60:	icebp  
  42eb61:	rex
  42eb62:	add    BYTE PTR [rax],r8b
  42eb65:	add    BYTE PTR [rax],al
  42eb67:	add    BYTE PTR [rax],al
  42eb69:	sbb    eax,DWORD PTR [rax]
  42eb6b:	add    BYTE PTR [rax+0x0],al
  42eb6e:	add    BYTE PTR [rax],al
  42eb70:	sti    
  42eb71:	rex
  42eb72:	add    BYTE PTR [rax],r8b
  42eb75:	add    BYTE PTR [rax],al
  42eb77:	add    BYTE PTR [rax+0x1b],al
  42eb7a:	add    BYTE PTR [rax],al
  42eb7c:	add    BYTE PTR [rax],0x0
  42eb7f:	add    BYTE PTR [rcx],al
  42eb81:	rex.B
  42eb82:	add    BYTE PTR [rax],r8b
  42eb85:	add    BYTE PTR [rax],al
  42eb87:	add    al,al
  42eb89:	sbb    eax,DWORD PTR [rax]
  42eb8b:	add    BYTE PTR [rax+0x7000000],al
  42eb91:	rex.B
  42eb92:	add    BYTE PTR [rax],r8b
  42eb95:	add    BYTE PTR [rax],al
  42eb97:	add    BYTE PTR [rax+0x1c],al
  42eb9a:	add    BYTE PTR [rax],al
  42eb9c:	add    BYTE PTR [rax],0x0
  42eb9f:	add    BYTE PTR [rip+0x4441],cl        # 0x432fe6
  42eba5:	add    BYTE PTR [rax],al
  42eba7:	add    al,al
  42eba9:	sbb    al,0x0
  42ebab:	add    BYTE PTR [rax+0x13000000],al
  42ebb1:	rex.B
  42ebb2:	add    BYTE PTR [rax],r8b
  42ebb5:	add    BYTE PTR [rax],al
  42ebb7:	add    BYTE PTR [rax+0x1d],al
  42ebba:	add    BYTE PTR [rax],al
  42ebbc:	add    BYTE PTR [rax],0x0
  42ebbf:	add    BYTE PTR [rcx],bl
  42ebc1:	rex.B
  42ebc2:	add    BYTE PTR [rax],r8b
  42ebc5:	add    BYTE PTR [rax],al
  42ebc7:	add    al,al
  42ebc9:	sbb    eax,0x800000
  42ebce:	add    BYTE PTR [rax],al
  42ebd0:	(bad)  
  42ebd1:	rex.B
  42ebd2:	add    BYTE PTR [rax],r8b
  42ebd5:	add    BYTE PTR [rax],al
  42ebd7:	add    BYTE PTR [rax+0x1e],al
  42ebda:	add    BYTE PTR [rax],al
  42ebdc:	add    BYTE PTR [rax],0x0
  42ebdf:	add    BYTE PTR [rip+0x4441],ah        # 0x433026
  42ebe5:	add    BYTE PTR [rax],al
  42ebe7:	add    al,al
  42ebe9:	(bad)  
  42ebea:	add    BYTE PTR [rax],al
  42ebec:	add    BYTE PTR [rax],0x0
  42ebef:	add    BYTE PTR [rbx],ch
  42ebf1:	rex.B
  42ebf2:	add    BYTE PTR [rax],r8b
  42ebf5:	add    BYTE PTR [rax],al
  42ebf7:	add    BYTE PTR [rax+0x1f],al
  42ebfa:	add    BYTE PTR [rax],al
  42ebfc:	add    BYTE PTR [rax],0x0
  42ebff:	add    BYTE PTR [rcx],dh
  42ec01:	rex.B
  42ec02:	add    BYTE PTR [rax],r8b
  42ec05:	add    BYTE PTR [rax],al
  42ec07:	add    al,al
  42ec09:	(bad)  
  42ec0a:	add    BYTE PTR [rax],al
  42ec0c:	add    BYTE PTR [rax],0x0
  42ec0f:	add    BYTE PTR [rdi],dh
  42ec11:	rex.B
  42ec12:	add    BYTE PTR [rax],r8b
  42ec15:	add    BYTE PTR [rax],al
  42ec17:	add    BYTE PTR [rax+0x20],al
  42ec1a:	add    BYTE PTR [rax],al
  42ec1c:	add    BYTE PTR [rax],0x0
  42ec1f:	add    BYTE PTR [rip+0x4441],bh        # 0x433066
  42ec25:	add    BYTE PTR [rax],al
  42ec27:	add    al,al
  42ec29:	and    BYTE PTR [rax],al
  42ec2b:	add    BYTE PTR [rax+0x43000000],al
  42ec31:	rex.B
  42ec32:	add    BYTE PTR [rax],r8b
  42ec35:	add    BYTE PTR [rax],al
  42ec37:	add    BYTE PTR [rax+0x21],al
  42ec3a:	add    BYTE PTR [rax],al
  42ec3c:	add    BYTE PTR [rax],0x0
  42ec3f:	add    BYTE PTR [rcx+0x41],cl
  42ec42:	add    BYTE PTR [rax],r8b
  42ec45:	add    BYTE PTR [rax],al
  42ec47:	add    al,al
  42ec49:	and    DWORD PTR [rax],eax
  42ec4b:	add    BYTE PTR [rax+0x4f000000],al
  42ec51:	rex.B
  42ec52:	add    BYTE PTR [rax],r8b
  42ec55:	add    BYTE PTR [rax],al
  42ec57:	add    BYTE PTR [rax+0x22],al
  42ec5a:	add    BYTE PTR [rax],al
  42ec5c:	add    BYTE PTR [rax],0x0
  42ec5f:	add    BYTE PTR [rbp+0x41],dl
  42ec62:	add    BYTE PTR [rax],r8b
  42ec65:	add    BYTE PTR [rax],al
  42ec67:	add    al,al
  42ec69:	and    al,BYTE PTR [rax]
  42ec6b:	add    BYTE PTR [rax+0x5b000000],al
  42ec71:	rex.B
  42ec72:	add    BYTE PTR [rax],r8b
  42ec75:	add    BYTE PTR [rax],al
  42ec77:	add    BYTE PTR [rax+0x23],al
  42ec7a:	add    BYTE PTR [rax],al
  42ec7c:	add    BYTE PTR [rax],0x0
  42ec7f:	add    BYTE PTR [rdx+0x41],ah
  42ec82:	add    BYTE PTR [rax],r8b
  42ec85:	add    BYTE PTR [rax],al
  42ec87:	add    al,al
  42ec89:	and    eax,DWORD PTR [rax]
  42ec8b:	add    BYTE PTR [rax+0x69000000],al
  42ec91:	rex.B
  42ec92:	add    BYTE PTR [rax],r8b
  42ec95:	add    BYTE PTR [rax],al
  42ec97:	add    BYTE PTR [rax+0x24],al
  42ec9a:	add    BYTE PTR [rax],al
  42ec9c:	add    BYTE PTR [rax],0x0
  42ec9f:	add    BYTE PTR [rax+0x41],dh
  42eca2:	add    BYTE PTR [rax],r8b
  42eca5:	add    BYTE PTR [rax],al
  42eca7:	add    al,al
  42eca9:	and    al,0x0
  42ecab:	add    BYTE PTR [rax+0x77000000],al
  42ecb1:	rex.B
  42ecb2:	add    BYTE PTR [rax],r8b
  42ecb5:	add    BYTE PTR [rax],al
  42ecb7:	add    BYTE PTR [rax+0x25],al
  42ecba:	add    BYTE PTR [rax],al
  42ecbc:	add    BYTE PTR [rax],0x0
  42ecbf:	add    BYTE PTR [rsi+0x41],bh
  42ecc2:	add    BYTE PTR [rax],r8b
  42ecc5:	add    BYTE PTR [rax],al
  42ecc7:	add    al,al
  42ecc9:	and    eax,0x800000
  42ecce:	add    BYTE PTR [rax],al
  42ecd0:	test   DWORD PTR [rcx+0x44],eax
  42ecd3:	add    BYTE PTR [rax],al
  42ecd5:	add    BYTE PTR [rax],al
  42ecd7:	add    BYTE PTR [rax+0x26],al
  42ecda:	add    BYTE PTR [rax],al
  42ecdc:	add    BYTE PTR [rax],0x0
  42ecdf:	add    BYTE PTR [rcx+rax*2+0x44],cl
  42ece6:	add    BYTE PTR [rax],al
  42ece8:	shl    BYTE PTR [rsi],0x0
  42eceb:	add    BYTE PTR [rax-0x6d000000],al
  42ecf1:	rex.B
  42ecf2:	add    BYTE PTR [rax],r8b
  42ecf5:	add    BYTE PTR [rax],al
  42ecf7:	add    BYTE PTR [rax+0x27],al
  42ecfa:	add    BYTE PTR [rax],al
  42ecfc:	add    BYTE PTR [rax],0x0
  42ecff:	add    BYTE PTR [rdx+0x4441],bl
  42ed05:	add    BYTE PTR [rax],al
  42ed07:	add    al,al
  42ed09:	(bad)  
  42ed0a:	add    BYTE PTR [rax],al
  42ed0c:	add    BYTE PTR [rax],0x0
  42ed0f:	add    BYTE PTR [rcx+0x4441],ah
  42ed15:	add    BYTE PTR [rax],al
  42ed17:	add    BYTE PTR [rax+0x28],al
  42ed1a:	add    BYTE PTR [rax],al
  42ed1c:	add    BYTE PTR [rax],0x0
  42ed1f:	add    BYTE PTR [rax+0x4441],ch
  42ed25:	add    BYTE PTR [rax],al
  42ed27:	add    al,al
  42ed29:	sub    BYTE PTR [rax],al
  42ed2b:	add    BYTE PTR [rax-0x51000000],al
  42ed31:	rex.B
  42ed32:	add    BYTE PTR [rax],r8b
  42ed35:	add    BYTE PTR [rax],al
  42ed37:	add    BYTE PTR [rax+0x29],al
  42ed3a:	add    BYTE PTR [rax],al
  42ed3c:	add    BYTE PTR [rax],0x0
  42ed3f:	add    BYTE PTR [rsi+0x4441],dh
  42ed45:	add    BYTE PTR [rax],al
  42ed47:	add    al,al
  42ed49:	sub    DWORD PTR [rax],eax
  42ed4b:	add    BYTE PTR [rax-0x43000000],al
  42ed51:	rex.B
  42ed52:	add    BYTE PTR [rax],r8b
  42ed55:	add    BYTE PTR [rax],al
  42ed57:	add    BYTE PTR [rax+0x2a],al
  42ed5a:	add    BYTE PTR [rax],al
  42ed5c:	add    BYTE PTR [rax],0x0
  42ed5f:	add    ah,al
  42ed61:	rex.B
  42ed62:	add    BYTE PTR [rax],r8b
  42ed65:	add    BYTE PTR [rax],al
  42ed67:	add    al,al
  42ed69:	sub    al,BYTE PTR [rax]
  42ed6b:	add    BYTE PTR [rax-0x35000000],al
  42ed71:	rex.B
  42ed72:	add    BYTE PTR [rax],r8b
  42ed75:	add    BYTE PTR [rax],al
  42ed77:	add    BYTE PTR [rax+0x2b],al
  42ed7a:	add    BYTE PTR [rax],al
  42ed7c:	add    BYTE PTR [rax],al
  42ed7f:	add    dh,cl
  42ed81:	rex.B
  42ed82:	add    BYTE PTR [rax],r8b
  42ed85:	add    BYTE PTR [rax],al
  42ed87:	add    BYTE PTR [rax+0x4000002b],al
  42ed8d:	add    BYTE PTR [rax],al
  42ed8f:	add    cl,dl
  42ed91:	rex.B
  42ed92:	add    BYTE PTR [rax],r8b
  42ed95:	add    BYTE PTR [rax],al
  42ed97:	add    al,al
  42ed99:	sub    eax,DWORD PTR [rax]
  42ed9b:	add    BYTE PTR [rax+0x0],al
  42ed9e:	add    BYTE PTR [rax],al
  42eda0:	(bad)  
  42eda1:	rex.B
  42eda2:	add    BYTE PTR [rax],r8b
  42eda5:	add    BYTE PTR [rax],al
  42eda7:	add    BYTE PTR [rax],al
  42eda9:	sub    al,0x0
  42edab:	add    BYTE PTR [rax+0x0],al
  42edae:	add    BYTE PTR [rax],al
  42edb0:	xlat   BYTE PTR ds:[rbx]
  42edb1:	rex.B
  42edb2:	add    BYTE PTR [rax],r8b
  42edb5:	add    BYTE PTR [rax],al
  42edb7:	add    BYTE PTR [rax+0x2c],al
  42edba:	add    BYTE PTR [rax],al
  42edbc:	add    BYTE PTR [rax],al
  42edbf:	add    dl,bl
  42edc1:	rex.B
  42edc2:	add    BYTE PTR [rax],r8b
  42edc5:	add    BYTE PTR [rax],al
  42edc7:	add    BYTE PTR [rax+0x4000002c],al
  42edcd:	add    BYTE PTR [rax],al
  42edcf:	add    ch,bl
  42edd1:	rex.B
  42edd2:	add    BYTE PTR [rax],r8b
  42edd5:	add    BYTE PTR [rax],al
  42edd7:	add    al,al
  42edd9:	sub    al,0x0
  42eddb:	add    BYTE PTR [rax+0x0],al
  42edde:	add    BYTE PTR [rax],al
  42ede0:	loopne 0x42ee23
  42ede2:	add    BYTE PTR [rax],r8b
  42ede5:	add    BYTE PTR [rax],al
  42ede7:	add    BYTE PTR [rax],al
  42ede9:	sub    eax,0x400000
  42edee:	add    BYTE PTR [rax],al
  42edf0:	jrcxz  0x42ee33
  42edf2:	add    BYTE PTR [rax],r8b
  42edf5:	add    BYTE PTR [rax],al
  42edf7:	add    BYTE PTR [rax+0x2d],al
  42edfa:	add    BYTE PTR [rax],al
  42edfc:	add    BYTE PTR [rcx],al
  42edfe:	add    BYTE PTR [rax],al
  42ee00:	jmp    0x433246
  42ee05:	add    BYTE PTR [rax],al
  42ee07:	add    BYTE PTR [rax+0x2e],al
  42ee0a:	add    BYTE PTR [rax],al
  42ee0c:	add    BYTE PTR [rcx],al
  42ee0e:	add    BYTE PTR [rax],al
  42ee10:	out    dx,eax
  42ee11:	rex.B
  42ee12:	add    BYTE PTR [rax],r8b
  42ee15:	add    BYTE PTR [rax],al
  42ee17:	add    BYTE PTR [rax+0x2f],al
  42ee1a:	add    BYTE PTR [rax],al
  42ee1c:	add    BYTE PTR [rcx],al
  42ee1e:	add    BYTE PTR [rax],al
  42ee20:	cmc    
  42ee21:	rex.B
  42ee22:	add    BYTE PTR [rax],r8b
  42ee25:	add    BYTE PTR [rax],al
  42ee27:	add    BYTE PTR [rax+0x30],al
  42ee2a:	add    BYTE PTR [rax],al
  42ee2c:	add    BYTE PTR [rcx],al
  42ee2e:	add    BYTE PTR [rax],al
  42ee30:	sti    
  42ee31:	rex.B
  42ee32:	add    BYTE PTR [rax],r8b
  42ee35:	add    BYTE PTR [rax],al
  42ee37:	add    BYTE PTR [rax+0x31],al
  42ee3a:	add    BYTE PTR [rax],al
  42ee3c:	add    BYTE PTR [rcx],al
  42ee3e:	add    BYTE PTR [rax],al
  42ee40:	add    DWORD PTR [rdx+0x44],eax
  42ee43:	add    BYTE PTR [rax],al
  42ee45:	add    BYTE PTR [rax],al
  42ee47:	add    BYTE PTR [rax+0x32],al
  42ee4a:	add    BYTE PTR [rax],al
  42ee4c:	add    BYTE PTR [rcx],al
  42ee4e:	add    BYTE PTR [rax],al
  42ee50:	(bad)  
  42ee51:	rex.X
  42ee52:	add    BYTE PTR [rax],r8b
  42ee55:	add    BYTE PTR [rax],al
  42ee57:	add    BYTE PTR [rax+0x33],al
  42ee5a:	add    BYTE PTR [rax],al
  42ee5c:	add    BYTE PTR [rcx],al
  42ee5e:	add    BYTE PTR [rax],al
  42ee60:	or     eax,0x4442
  42ee65:	add    BYTE PTR [rax],al
  42ee67:	add    BYTE PTR [rax+0x34],al
  42ee6a:	add    BYTE PTR [rax],al
  42ee6c:	add    BYTE PTR [rcx],al
  42ee6e:	add    BYTE PTR [rax],al
  42ee70:	adc    eax,DWORD PTR [rdx+0x44]
  42ee73:	add    BYTE PTR [rax],al
  42ee75:	add    BYTE PTR [rax],al
  42ee77:	add    BYTE PTR [rax+0x35],al
  42ee7a:	add    BYTE PTR [rax],al
  42ee7c:	add    BYTE PTR [rcx],al
  42ee7e:	add    BYTE PTR [rax],al
  42ee80:	sbb    DWORD PTR [rdx+0x44],eax
  42ee83:	add    BYTE PTR [rax],al
  42ee85:	add    BYTE PTR [rax],al
  42ee87:	add    BYTE PTR [rax+0x36],al
  42ee8a:	add    BYTE PTR [rax],al
  42ee8c:	add    BYTE PTR [rcx],al
  42ee8e:	add    BYTE PTR [rax],al
  42ee90:	(bad)  
  42ee91:	rex.X
  42ee92:	add    BYTE PTR [rax],r8b
  42ee95:	add    BYTE PTR [rax],al
  42ee97:	add    BYTE PTR [rax+0x37],al
  42ee9a:	add    BYTE PTR [rax],al
  42ee9c:	add    BYTE PTR [rcx],al
  42ee9e:	add    BYTE PTR [rax],al
  42eea0:	es rex.X
  42eea2:	add    BYTE PTR [rax],r8b
  42eea5:	add    BYTE PTR [rax],al
  42eea7:	add    BYTE PTR [rax+0x38],al
  42eeaa:	add    BYTE PTR [rax],al
  42eeac:	add    BYTE PTR [rcx],al
  42eeae:	add    BYTE PTR [rax],al
  42eeb0:	sub    eax,0x4442
  42eeb5:	add    BYTE PTR [rax],al
  42eeb7:	add    BYTE PTR [rax+0x39],al
  42eeba:	add    BYTE PTR [rax],al
  42eebc:	add    BYTE PTR [rcx],al
  42eebe:	add    BYTE PTR [rax],al
  42eec0:	xor    al,0x42
  42eec2:	add    BYTE PTR [rax],r8b
  42eec5:	add    BYTE PTR [rax],al
  42eec7:	add    BYTE PTR [rax+0x3a],al
  42eeca:	add    BYTE PTR [rax],al
  42eecc:	add    BYTE PTR [rcx],al
  42eece:	add    BYTE PTR [rax],al
  42eed0:	cmp    eax,DWORD PTR [rdx+0x44]
  42eed3:	add    BYTE PTR [rax],al
  42eed5:	add    BYTE PTR [rax],al
  42eed7:	add    BYTE PTR [rax+0x3b],al
  42eeda:	add    BYTE PTR [rax],al
  42eedc:	add    BYTE PTR [rcx],al
  42eede:	add    BYTE PTR [rax],al
  42eee0:	rex.X
  42eee1:	rex.X
  42eee2:	add    BYTE PTR [rax],r8b
  42eee5:	add    BYTE PTR [rax],al
  42eee7:	add    BYTE PTR [rax+0x3c],al
  42eeea:	add    BYTE PTR [rax],al
  42eeec:	add    BYTE PTR [rcx],al
  42eeee:	add    BYTE PTR [rax],al
  42eef0:	rex.WB
  42eef1:	rex.X
  42eef2:	add    BYTE PTR [rax],r8b
  42eef5:	add    BYTE PTR [rax],al
  42eef7:	add    BYTE PTR [rax+0x3d],al
  42eefa:	add    BYTE PTR [rax],al
  42eefc:	add    BYTE PTR [rcx],al
  42eefe:	add    BYTE PTR [rax],al
  42ef00:	push   rax
  42ef01:	rex.X
  42ef02:	add    BYTE PTR [rax],r8b
  42ef05:	add    BYTE PTR [rax],al
  42ef07:	add    BYTE PTR [rax+0x3e],al
  42ef0a:	add    BYTE PTR [rax],al
  42ef0c:	add    BYTE PTR [rcx],al
  42ef0e:	add    BYTE PTR [rax],al
  42ef10:	push   rdi
  42ef11:	rex.X
  42ef12:	add    BYTE PTR [rax],r8b
  42ef15:	add    BYTE PTR [rax],al
  42ef17:	add    BYTE PTR [rax+0x3f],al
  42ef1a:	add    BYTE PTR [rax],al
  42ef1c:	add    BYTE PTR [rcx],al
  42ef1e:	add    BYTE PTR [rax],al
  42ef20:	pop    rsi
  42ef21:	rex.X
  42ef22:	add    BYTE PTR [rax],r8b
  42ef25:	add    BYTE PTR [rax],al
  42ef27:	add    BYTE PTR [rax+0x40],al
  42ef2a:	add    BYTE PTR [rax],al
  42ef2c:	add    BYTE PTR [rcx],al
  42ef2e:	add    BYTE PTR [rax],al
  42ef30:	gs rex.X
  42ef32:	add    BYTE PTR [rax],r8b
  42ef35:	add    BYTE PTR [rax],al
  42ef37:	add    BYTE PTR [rax+0x41],al
  42ef3a:	add    BYTE PTR [rax],al
  42ef3c:	add    BYTE PTR [rcx],al
  42ef3e:	add    BYTE PTR [rax],al
  42ef40:	ins    BYTE PTR es:[rdi],dx
  42ef41:	rex.X
  42ef42:	add    BYTE PTR [rax],r8b
  42ef45:	add    BYTE PTR [rax],al
  42ef47:	add    BYTE PTR [rax+0x42],al
  42ef4a:	add    BYTE PTR [rax],al
  42ef4c:	add    BYTE PTR [rcx],al
  42ef4e:	add    BYTE PTR [rax],al
  42ef50:	jae    0x42ef94
  42ef52:	add    BYTE PTR [rax],r8b
  42ef55:	add    BYTE PTR [rax],al
  42ef57:	add    BYTE PTR [rax+0x43],al
  42ef5a:	add    BYTE PTR [rax],al
  42ef5c:	add    BYTE PTR [rcx],al
  42ef5e:	add    BYTE PTR [rax],al
  42ef60:	jp     0x42efa4
  42ef62:	add    BYTE PTR [rax],r8b
  42ef65:	add    BYTE PTR [rax],al
  42ef67:	add    BYTE PTR [rax+0x44],al
  42ef6a:	add    BYTE PTR [rax],al
  42ef6c:	add    BYTE PTR [rcx],al
  42ef6e:	add    BYTE PTR [rax],al
  42ef70:	add    DWORD PTR [rdx+0x44],0x0
  42ef77:	add    BYTE PTR [rax+0x45],al
  42ef7a:	add    BYTE PTR [rax],al
  42ef7c:	add    BYTE PTR [rcx],al
  42ef7e:	add    BYTE PTR [rax],al
  42ef80:	mov    BYTE PTR [rdx+0x44],al
  42ef83:	add    BYTE PTR [rax],al
  42ef85:	add    BYTE PTR [rax],al
  42ef87:	add    BYTE PTR [rax+0x46],al
  42ef8a:	add    BYTE PTR [rax],al
  42ef8c:	add    BYTE PTR [rcx],al
  42ef8e:	add    BYTE PTR [rax],al
  42ef90:	pop    QWORD PTR [rdx+0x44]
  42ef93:	add    BYTE PTR [rax],al
  42ef95:	add    BYTE PTR [rax],al
  42ef97:	add    BYTE PTR [rax+0x47],al
  42ef9a:	add    BYTE PTR [rax],al
  42ef9c:	add    BYTE PTR [rcx],al
  42ef9e:	add    BYTE PTR [rax],al
  42efa0:	xchg   esi,eax
  42efa1:	rex.X
  42efa2:	add    BYTE PTR [rax],r8b
  42efa5:	add    BYTE PTR [rax],al
  42efa7:	add    BYTE PTR [rax+0x48],al
  42efaa:	add    BYTE PTR [rax],al
  42efac:	add    BYTE PTR [rcx],al
  42efae:	add    BYTE PTR [rax],al
  42efb0:	popf   
  42efb1:	rex.X
  42efb2:	add    BYTE PTR [rax],r8b
  42efb5:	add    BYTE PTR [rax],al
  42efb7:	add    BYTE PTR [rax+0x49],al
  42efba:	add    BYTE PTR [rax],al
  42efbc:	add    BYTE PTR [rcx],al
  42efbe:	add    BYTE PTR [rax],al
  42efc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42efc1:	rex.X
  42efc2:	add    BYTE PTR [rax],r8b
  42efc5:	add    BYTE PTR [rax],al
  42efc7:	add    BYTE PTR [rax+0x4a],al
  42efca:	add    BYTE PTR [rax],al
  42efcc:	add    BYTE PTR [rcx],al
  42efce:	add    BYTE PTR [rax],al
  42efd0:	stos   DWORD PTR es:[rdi],eax
  42efd1:	rex.X
  42efd2:	add    BYTE PTR [rax],r8b
  42efd5:	add    BYTE PTR [rax],al
  42efd7:	add    BYTE PTR [rax+0x4b],al
  42efda:	add    BYTE PTR [rax],al
  42efdc:	add    BYTE PTR [rcx],al
  42efde:	add    BYTE PTR [rax],al
  42efe0:	mov    dl,0x42
  42efe2:	add    BYTE PTR [rax],r8b
  42efe5:	add    BYTE PTR [rax],al
  42efe7:	add    BYTE PTR [rax+0x4c],al
  42efea:	add    BYTE PTR [rax],al
  42efec:	add    BYTE PTR [rcx],al
	...
  42effe:	add    BYTE PTR [rax],al
  42f000:	add    eax,DWORD PTR [rax]
	...
  42f03e:	add    BYTE PTR [rax],al
  42f040:	xor    BYTE PTR [rdi],ah
  42f042:	rex.X add BYTE PTR [rax],al
	...
  42f04d:	add    BYTE PTR [rax],al
  42f04f:	add    BYTE PTR [rax+0x4226],al
  42f055:	add    BYTE PTR [rax],al
  42f057:	add    al,ah
  42f059:	adc    BYTE PTR [rdx+0x0],al
  42f05c:	add    BYTE PTR [rax],al
  42f05e:	add    BYTE PTR [rax],al
  42f060:	and    BYTE PTR [rbx],ah
  42f062:	rex.X add BYTE PTR [rax],al
  42f065:	add    BYTE PTR [rax],al
  42f067:	add    BYTE PTR [rax+0x420c],al
  42f06d:	add    BYTE PTR [rax],al
  42f06f:	add    BYTE PTR [rax],dh
  42f071:	or     al,0x42
  42f073:	add    BYTE PTR [rax],al
  42f075:	add    BYTE PTR [rax],al
  42f077:	add    BYTE PTR [rax+0x4207],dh
  42f07d:	add    BYTE PTR [rax],al
  42f07f:	add    BYTE PTR [rax],dl
  42f081:	and    DWORD PTR [rdx+0x0],eax
  42f084:	add    BYTE PTR [rax],al
  42f086:	add    BYTE PTR [rax],al
  42f088:	adc    BYTE PTR [rsi],dl
  42f08a:	rex.X add BYTE PTR [rax],al
  42f08d:	add    BYTE PTR [rax],al
  42f08f:	add    BYTE PTR [rax+0x15],al
  42f092:	rex.X add BYTE PTR [rax],al
  42f095:	add    BYTE PTR [rax],al
  42f097:	add    BYTE PTR [rax],dl
  42f099:	adc    al,0x42
	...
  42f0af:	add    BYTE PTR [rax+0x420e],ah
  42f0b5:	add    BYTE PTR [rax],al
  42f0b7:	add    BYTE PTR [rax],ah
  42f0b9:	cmovb  eax,DWORD PTR [rax]
	...
  42f0c8:	lock (bad) 
  42f0ca:	rex.X add BYTE PTR [rax],al
	...
  42f0d5:	add    BYTE PTR [rax],al
  42f0d7:	add    al,ah
  42f0d9:	(bad)  
  42f0da:	rex.X add BYTE PTR [rax],al
  42f0dd:	add    BYTE PTR [rax],al
  42f0df:	add    BYTE PTR [rax],dl
  42f0e1:	(bad)  
  42f0e2:	rex.X add BYTE PTR [rax],al
  42f0e5:	add    BYTE PTR [rax],al
  42f0e7:	add    BYTE PTR [rax],dh
  42f0e9:	(bad)  
  42f0ea:	rex.X add BYTE PTR [rax],al
	...
  42f10d:	add    BYTE PTR [rax],al
  42f10f:	add    BYTE PTR [rax-0x1c],dl
  42f112:	add    BYTE PTR [rax],al
  42f115:	add    BYTE PTR [rax],al
  42f117:	add    BYTE PTR [rax+0x7],dl
  42f11a:	rex.X add BYTE PTR [rax],al
  42f11d:	add    BYTE PTR [rax],al
  42f11f:	add    BYTE PTR [rax+0x7],dh
  42f122:	rex.X add BYTE PTR [rax],al
	...
  42f13d:	add    BYTE PTR [rax],al
  42f13f:	add    al,dh
  42f141:	rex.X add BYTE PTR cs:[rax],al
	...
  42f1d5:	add    BYTE PTR [rax],al
  42f1d7:	add    BYTE PTR [rax+0x4213],dh
	...
  42f27d:	add    BYTE PTR [rax],al
  42f27f:	add    BYTE PTR [rax+0x4207],dl
	...
  42f2ad:	add    BYTE PTR [rax],al
  42f2af:	add    BYTE PTR [rcx],al
	...
  42f2bd:	add    BYTE PTR [rax],al
  42f2bf:	add    al,ah
  42f2c1:	sub    eax,DWORD PTR [rdx+0x0]
  42f2c4:	add    BYTE PTR [rax],al
  42f2c6:	add    BYTE PTR [rax],al
  42f2c8:	cmp    DWORD PTR [rax],eax
  42f2ca:	add    BYTE PTR [rax],al
  42f2cc:	add    BYTE PTR [rax],al
  42f2ce:	add    BYTE PTR [rax],al
  42f2d0:	shr    BYTE PTR [rbx],1
  42f2d2:	rex.X add BYTE PTR [rax],al
  42f2d5:	add    BYTE PTR [rax],al
  42f2d7:	add    BYTE PTR [rax+0x2b],ah
  42f2da:	rex.X add BYTE PTR [rax],al
  42f2dd:	add    BYTE PTR [rax],al
  42f2df:	add    BYTE PTR [rax],dl
  42f2e1:	sub    al,0x42
  42f2e3:	add    BYTE PTR [rax],al
  42f2e5:	add    BYTE PTR [rax],al
  42f2e7:	add    al,dl
  42f2e9:	sub    DWORD PTR [rdx+0x0],eax
  42f2ec:	add    BYTE PTR [rax],al
  42f2ee:	add    BYTE PTR [rax],al
  42f2f0:	lock sub al,BYTE PTR [rdx+0x0]
  42f2f4:	add    BYTE PTR [rax],al
  42f2f6:	add    BYTE PTR [rax],al
  42f2f8:	shr    BYTE PTR [rdx],1
  42f2fa:	rex.X add BYTE PTR [rax],al
  42f2fd:	add    BYTE PTR [rax],al
  42f2ff:	add    al,ah
  42f301:	sub    DWORD PTR [rdx+0x0],eax
  42f304:	add    BYTE PTR [rax],al
  42f306:	add    BYTE PTR [rax],al
  42f308:	loop   0x42f35b
  42f30a:	add    BYTE PTR [rax],r8b
  42f30d:	add    BYTE PTR [rax],al
  42f30f:	add    BYTE PTR [rcx],al
  42f311:	add    BYTE PTR [rax],al
  42f313:	add    BYTE PTR [rax],al
  42f315:	add    BYTE PTR [rax],al
  42f317:	add    BYTE PTR [rax+0x4229],dh
  42f31d:	add    BYTE PTR [rax],al
  42f31f:	add    BYTE PTR [rax+0x422e],ah
  42f325:	add    BYTE PTR [rax],al
  42f327:	add    BYTE PTR [rax+0x2e],dl
  42f32a:	rex.X add BYTE PTR [rax],al
  42f32d:	add    BYTE PTR [rax],al
  42f32f:	add    al,al
  42f331:	sub    al,BYTE PTR [rdx+0x0]
  42f334:	add    BYTE PTR [rax],al
  42f336:	add    BYTE PTR [rax],al
  42f338:	nop
  42f339:	sub    al,BYTE PTR [rdx+0x0]
  42f33c:	add    BYTE PTR [rax],al
  42f33e:	add    BYTE PTR [rax],al
  42f340:	sub    al,BYTE PTR [rdx+0x0]
  42f344:	add    BYTE PTR [rax],al
  42f346:	add    BYTE PTR [rax],al
  42f348:	shr    BYTE PTR [rip+0x42],1        # 0x42f390
  42f34e:	add    BYTE PTR [rax],al
  42f350:	nop
  42f351:	sub    eax,0x42
  42f356:	add    BYTE PTR [rax],al
  42f358:	jo     0x42f387
  42f35a:	rex.X add BYTE PTR [rax],al
  42f35d:	add    BYTE PTR [rax],al
  42f35f:	add    BYTE PTR [rax+0x2d],dl
  42f362:	rex.X add BYTE PTR [rax],al
  42f365:	add    BYTE PTR [rax],al
  42f367:	add    BYTE PTR [rax],cl
	...
  42f37d:	add    BYTE PTR [rax],al
  42f37f:	add    BYTE PTR [rax],ch
  42f381:	mov    dh,0x42
	...
  42f38f:	add    bh,bh
  42f391:	(bad)  
  42f392:	(bad)  
  42f393:	(bad)  
  42f394:	(bad)  
  42f395:	(bad)  
  42f396:	(bad)  
  42f397:	inc    DWORD PTR [rax]
  42f399:	add    BYTE PTR [rax],al
  42f39b:	add    BYTE PTR [rax],al
  42f39d:	add    BYTE PTR [rax],al
  42f39f:	add    bh,bh
	...
  42f3ad:	add    BYTE PTR [rax],al
  42f3af:	add    BYTE PTR [rdx],al
	...
  42f3bd:	add    BYTE PTR [rax],al
  42f3bf:	add    bh,bh
  42f3c1:	(bad)  
  42f3c2:	(bad)  
  42f3c3:	inc    DWORD PTR [rax]
	...
  42f3cd:	add    BYTE PTR [rax],al
  42f3cf:	add    BYTE PTR [rax+0x0],al
  42f3d2:	add    BYTE PTR [rax],al
  42f3d4:	ret    
  42f3d5:	mov    edi,0x3fc0ffff
  42f3da:	add    BYTE PTR [rax],al
  42f3dc:	add    DWORD PTR [rax],eax
  42f3de:	add    BYTE PTR [rax],al
  42f3e0:	add    BYTE PTR [rax],al
  42f3e2:	add    BYTE PTR [rax],al
  42f3e4:	(bad)  
	...
  42f3f1:	add    al,BYTE PTR [rbp+0x0]
	...
  42f400:	mov    al,0xa7
  42f402:	rex.X add BYTE PTR [rax],al
  42f405:	add    BYTE PTR [rax],al
  42f407:	add    al,al
  42f409:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42f40a:	rex.X add BYTE PTR [rax],al
  42f40d:	add    BYTE PTR [rax],al
  42f40f:	add    BYTE PTR [rax-0x58],al
  42f412:	rex.X add BYTE PTR [rax],al
  42f415:	add    BYTE PTR [rax],al
  42f417:	add    al,dh
  42f419:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42f41a:	rex.X add BYTE PTR [rax],al
  42f41d:	add    BYTE PTR [rax],al
  42f41f:	add    BYTE PTR [rdx],dh
  42f421:	movabs ds:0x2b992ddf,al
  42f42a:	add    BYTE PTR [rax],al
  42f42c:	add    BYTE PTR [rax],al
  42f42e:	add    BYTE PTR [rax],al
  42f430:	int    0x5d
  42f432:	and    dl,dl
  42f434:	data16 (bad) 
  42f436:	(bad)  
  42f437:	inc    DWORD PTR [rax]
  42f439:	add    BYTE PTR [rax],al
  42f43b:	add    BYTE PTR [rax],al
  42f43d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000430000 <.rdata>:
  430000:	jae    0x43007b
  430002:	ins    DWORD PTR es:[rdi],dx
  430003:	(bad)  
  430004:	outs   dx,DWORD PTR ds:[rsi]
  430005:	ins    BYTE PTR es:[rdi],dx
  430006:	and    BYTE PTR [rax+0x25],ah
  430009:	jae    0x430032
  43000b:	and    BYTE PTR [rsi+0x6f],ch
  43000e:	je     0x430030
  430010:	outs   dx,WORD PTR ds:[rsi]
  430012:	jne    0x430082
  430014:	or     al,BYTE PTR fs:[rax]
  430017:	add    BYTE PTR [rbp+0x72],al
  43001a:	jb     0x43008b
  43001c:	jb     0x43003e
  43001e:	jb     0x430085
  430020:	(bad)  
  430021:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c656820
  430029:	jo     0x430090
  43002b:	jb     0x43004d
  43002d:	je     0x430097
  43002f:	jb     0x430096
  430031:	(bad)  
  430032:	fs (bad) 
  430034:	jae    0x430056
  430036:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x696c206e
  43003e:	(bad)  
  43003f:	add    BYTE PTR [rbp+0x6e],dh
  430042:	(bad)  
  430043:	(bad)  
  430044:	ins    BYTE PTR es:[rdi],dx
  430045:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  43004a:	ja     0x4300be
  43004c:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6e656761
  430054:	je     0x430090
  430056:	and    BYTE PTR [rdx+0x65],dh
  430059:	jae    0x4300d0
  43005b:	ins    DWORD PTR es:[rdi],dx
  43005c:	gs and BYTE PTR fs:[rax+0x65],ch
  430061:	ins    BYTE PTR es:[rdi],dx
  430062:	jo     0x4300c9
  430064:	jb     0x430086
  430066:	je     0x4300d0
  430068:	jb     0x4300cf
  43006a:	(bad)  
  43006b:	or     al,BYTE PTR fs:[rax]
  43006e:	add    BYTE PTR [rax],al
  430070:	rex.RB jb 0x4300e5
  430073:	outs   dx,DWORD PTR ds:[rsi]
  430074:	jb     0x430096
  430076:	jb     0x4300dd
  430078:	(bad)  
  430079:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70616320
  430081:	(bad)  
  430082:	(bad)  
  430083:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x666f2079
  43008b:	and    BYTE PTR [rcx+0x67],ah
  43008e:	outs   dx,BYTE PTR gs:[rsi]
  430090:	je     0x430092
  430092:	addr32 fs (bad) 
  430095:	pop    rdi
  430096:	(bad)  
  430097:	outs   dx,BYTE PTR gs:[esi]
  43009a:	je     0x4300fb
  43009c:	push   0x65706c65
  4300a1:	jb     0x430102
  4300a3:	je     0x43010d
  4300a5:	jb     0x43010c
  4300a7:	(bad)  
  4300a8:	fs pop rdi
  4300aa:	imul   esp,DWORD PTR [rax+rax*1+0x67],0x615f6264
  4300b2:	outs   dx,BYTE PTR gs:[esi]
  4300b5:	je     0x430116
  4300b7:	movsxd ebp,DWORD PTR [rbp+0x64]
  4300ba:	pop    rdi
  4300bb:	(bad)  
  4300bc:	jne    0x430124
  4300be:	add    BYTE PTR [rdi+0x64],ah
  4300c1:	(bad)  
  4300c2:	pop    rdi
  4300c3:	(bad)  
  4300c4:	outs   dx,BYTE PTR gs:[esi]
  4300c7:	je     0x430128
  4300c9:	movsxd esp,DWORD PTR [rcx+0x70]
  4300cc:	(bad)  
  4300cd:	(bad)  
  4300ce:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x79
	...
  4300de:	add    BYTE PTR [rax],al
  4300e0:	xchg   edx,eax
  4300e1:	add    BYTE PTR [rbx+0x0],al
	...
  4300f0:	lods   eax,DWORD PTR ds:[rsi]
  4300f1:	add    BYTE PTR [rbx+0x0],al
  4300f4:	add    BYTE PTR [rax],al
  4300f6:	add    BYTE PTR [rax],al
  4300f8:	or     BYTE PTR [rax],al
  4300fa:	add    BYTE PTR [rax],al
  4300fc:	add    BYTE PTR [rax],al
  4300fe:	add    BYTE PTR [rax],al
  430100:	mov    edi,0x4300
  430105:	add    BYTE PTR [rax],al
  430107:	add    BYTE PTR [rax],dl
	...
  43013d:	add    BYTE PTR [rax],al
  43013f:	add    BYTE PTR [rdi+0x64],ah
  430142:	(bad)
  430147:	gs jb  0x430179
  43014a:	(bad)  
  43014b:	js     0x430187
  43014d:	and    BYTE PTR [rip+0x50000a73],ah        # 0x50430bc6
  430153:	jb     0x4301be
  430155:	outs   dx,BYTE PTR ds:[rsi]
  430156:	je     0x4301be
  430158:	and    BYTE PTR [rdi+0x66],ch
  43015b:	and    BYTE PTR [rdx],ah
  43015d:	and    eax,0x77202273
  430162:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x61206425
  43016a:	jb     0x4301d3
  43016c:	jae    0x43016e
  43016e:	add    BYTE PTR [rax],al
  430170:	push   rdi
  430171:	jb     0x4301e2
  430173:	outs   dx,BYTE PTR ds:[rsi]
  430174:	and    BYTE PTR [esi+0x75],ch
  430178:	ins    DWORD PTR es:[rdi],dx
  430179:	(bad)  
  43017a:	gs jb  0x43019d
  43017d:	outs   dx,DWORD PTR ds:[rsi]
  43017e:	data16 and BYTE PTR [rcx+0x72],ah
  430182:	addr32 jne 0x4301f2
  430185:	outs   dx,BYTE PTR gs:[rsi]
  430187:	je     0x4301fc
  430189:	and    BYTE PTR [rsi+0x6f],ah
  43018c:	jb     0x4301ae
  43018e:	jae    0x430200
  430190:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  430194:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  43019b:	ins    DWORD PTR es:[rdi],dx
  43019c:	(bad)  
  43019d:	je     0x4301cc
  43019f:	jae    0x430215
  4301a1:	jb     0x43020c
  4301a3:	outs   dx,BYTE PTR ds:[rsi]
  4301a4:	add    BYTE PTR [eax],al
  4301a7:	add    BYTE PTR [rbx+0x75],ah
  4301aa:	jb     0x43021e
  4301ac:	outs   dx,BYTE PTR gs:[rsi]
  4301ae:	je     0x4301d0
  4301b0:	jae    0x430227
  4301b2:	(bad)
  4301b7:	outs   dx,BYTE PTR ds:[rsi]
  4301b8:	and    BYTE PTR [ecx+0x73],ch
  4301bc:	and    BYTE PTR [rdi],ah
  4301be:	and    eax,0x202c2773
  4301c3:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4301c7:	jae    0x4301e9
  4301c9:	imul   esi,DWORD PTR [rbx+0x20],0x6425
  4301d0:	ins    BYTE PTR es:[rdi],dx
  4301d1:	outs   dx,DWORD PTR ds:[rsi]
  4301d2:	outs   dx,BYTE PTR ds:[rsi]
  4301d3:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  4301d8:	and    BYTE PTR [esi+0x6f],ch
  4301dc:	je     0x4301fe
  4301de:	jae    0x430255
  4301e0:	jo     0x430252
  4301e2:	outs   dx,DWORD PTR ds:[rsi]
  4301e3:	jb     0x430259
  4301e5:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4301ea:	and    BYTE PTR [rcx+0x67],ah
  4301ed:	outs   dx,BYTE PTR gs:[rsi]
  4301ef:	je     0x430211
  4301f1:	jo     0x430265
  4301f3:	imul   ebp,DWORD PTR [rsi+0x74],0x6f460066
  4301fa:	jb     0x430269
  4301fc:	(bad)  
  4301fd:	je     0x43021f
  4301ff:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  430207:	and    BYTE PTR gs:[rcx+0x6e],ch
  43020b:	and    BYTE PTR [rdi],ah
  43020d:	and    eax,0x6e202773
  430212:	outs   dx,DWORD PTR ds:[rsi]
  430213:	je     0x430235
  430215:	jae    0x43028c
  430217:	jo     0x430289
  430219:	outs   dx,DWORD PTR ds:[rsi]
  43021a:	jb     0x430290
  43021c:	gs and BYTE PTR fs:[rcx+0x6e],ch
  430221:	and    BYTE PTR [rcx+0x67],ah
  430224:	outs   dx,BYTE PTR gs:[rsi]
  430226:	je     0x430248
  430228:	jo     0x43029c
  43022a:	imul   ebp,DWORD PTR [rsi+0x74],0x64000066
  430231:	(bad)  
  430232:	std    
  430233:	jmp    QWORD PTR [rax-0x5f0002ea]
  430239:	(bad)  
  43023a:	std    
  43023b:	push   rdx
  43023d:	(bad)  
  43023e:	std    
  43023f:	push   QWORD PTR [rbx+0x17]
  430242:	std    
  430243:	inc    DWORD PTR [rax]
  430245:	(bad)  
  430246:	std    
  430247:	(bad)  
  430248:	(bad)  
  430249:	jne    0x4302b9
  43024b:	fs gs data16 (bad) 
  43024f:	add    BYTE PTR [rbp+0x6d],ah
  430252:	jo     0x4302c8
  430254:	jns    0x430276
  430256:	(bad)  
  430257:	outs   dx,BYTE PTR gs:[esi]
  43025a:	je     0x43027c
  43025c:	gs js  0x4302cf
  43025f:	jb     0x4302c6
  430261:	jae    0x4302d6
  430263:	imul   ebp,DWORD PTR [rdi+0x6e],0x6241000a
  43026a:	outs   dx,DWORD PTR ds:[rsi]
  43026b:	jne    0x4302e1
  43026d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  430271:	movsxd ebp,DWORD PTR [rdi+0x6d]
  430274:	jo     0x4302df
  430276:	ins    BYTE PTR es:[rdi],dx
  430277:	and    BYTE PTR gs:[rdi+0x70],ch
  43027b:	and    BYTE PTR [rax],dh
  43027d:	js     0x4302a4
  43027f:	js     0x4302ad
  430281:	and    BYTE PTR [rax+0x63],dh
  430284:	cmp    eax,0xa6425
  430289:	rex.XB (bad) 
  43028b:	outs   dx,BYTE PTR ds:[rsi]
  43028c:	outs   dx,BYTE PTR ds:[rsi]
  43028d:	outs   dx,DWORD PTR ds:[rsi]
  43028e:	je     0x4302b0
  430290:	movsxd ebp,DWORD PTR [rdi+0x6d]
  430293:	jo     0x4302fe
  430295:	ins    BYTE PTR es:[rdi],dx
  430296:	and    BYTE PTR gs:[rdi+0x70],ch
  43029a:	and    BYTE PTR [rax],dh
  43029c:	js     0x4302c3
  43029e:	js     0x4302aa
  4302a0:	add    BYTE PTR [rbx+0x6f],al
  4302a3:	ins    DWORD PTR es:[rdi],dx
  4302a4:	(bad)  
  4302a5:	imul   ebp,DWORD PTR [rsi+0x69],0x6520676e
  4302ac:	jno    0x430323
  4302ae:	(bad)  
  4302af:	ins    BYTE PTR es:[rdi],dx
  4302b0:	and    BYTE PTR [rsi],ah
  4302b2:	and    BYTE PTR [rcx+0x66],ch
  4302b5:	pop    rdi
  4302b6:	outs   dx,DWORD PTR ds:[esi]
  4302b8:	je     0x430329
  4302ba:	add    BYTE PTR [rax],al
  4302bc:	add    BYTE PTR [rax],al
  4302be:	add    BYTE PTR [rax],al
  4302c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4302c2:	ins    DWORD PTR es:[rdi],dx
  4302c3:	(bad)  
  4302c4:	imul   ebp,DWORD PTR [rsi+0x69],0x6520676e
  4302cb:	jno    0x430342
  4302cd:	(bad)  
  4302ce:	ins    BYTE PTR es:[rdi],dx
  4302cf:	and    BYTE PTR [rsi],ah
  4302d1:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  4302d5:	pop    rdi
  4302d6:	outs   dx,BYTE PTR ds:[rsi]
  4302d7:	outs   dx,DWORD PTR ds:[rsi]
  4302d8:	je     0x4302fa
  4302da:	and    BYTE PTR es:[rcx+0x66],ch
  4302de:	pop    rdi
  4302df:	outs   dx,DWORD PTR ds:[esi]
  4302e1:	je     0x430352
  4302e3:	add    BYTE PTR [rax],al
  4302e5:	add    BYTE PTR [rax],al
  4302e7:	add    BYTE PTR [rbx+0x6f],al
  4302ea:	ins    DWORD PTR es:[rdi],dx
  4302eb:	(bad)  
  4302ec:	imul   ebp,DWORD PTR [rsi+0x69],0x6c20676e
  4302f3:	gs jae 0x430369
  4302f6:	pop    rdi
  4302f7:	jae    0x430362
  4302f9:	outs   dx,BYTE PTR ds:[esi]
  4302fb:	gs and BYTE PTR fs:[rsi],ah
  4302ff:	and    BYTE PTR [rcx+0x66],ch
  430302:	pop    rdi
  430303:	outs   dx,DWORD PTR ds:[esi]
  430305:	je     0x430376
  430307:	add    BYTE PTR [rbx+0x6f],al
  43030a:	ins    DWORD PTR es:[rdi],dx
  43030b:	(bad)  
  43030c:	imul   ebp,DWORD PTR [rsi+0x69],0x6c20676e
  430313:	gs jae 0x430389
  430316:	pop    rdi
  430317:	jae    0x430382
  430319:	outs   dx,BYTE PTR ds:[esi]
  43031b:	gs and BYTE PTR fs:[rsi],ah
  43031f:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  430323:	pop    rdi
  430324:	outs   dx,BYTE PTR ds:[rsi]
  430325:	outs   dx,DWORD PTR ds:[rsi]
  430326:	je     0x430348
  430328:	and    BYTE PTR es:[rcx+0x66],ch
  43032c:	pop    rdi
  43032d:	outs   dx,DWORD PTR ds:[esi]
  43032f:	je     0x4303a0
  430331:	add    BYTE PTR [rcx+0x74],al
  430334:	and    BYTE PTR [rbp+0x6e],ah
  430337:	and    BYTE PTR fs:[rdi+0x66],ch
  43033b:	and    BYTE PTR [rbp+0x78],ah
  43033e:	jo     0x4303b2
  430340:	gs jae 0x4303b6
  430343:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43000a
  43034a:	ins    DWORD PTR es:[rdi],dx
  43034b:	(bad)  
  43034c:	imul   ebp,DWORD PTR [rsi+0x69],0x7320676e
  430353:	ja     0x4303b6
  430355:	jo     0x430377
  430357:	and    BYTE PTR es:[rbp+riz*2+0x73],ch
  43035c:	jae    0x4303bd
  43035e:	jae    0x4303c9
  430360:	outs   dx,BYTE PTR ds:[esi]
  430362:	gs and BYTE PTR fs:[rsi],ah
  430366:	and    BYTE PTR [rcx+0x66],ch
  430369:	pop    rdi
  43036a:	outs   dx,DWORD PTR ds:[esi]
  43036c:	je     0x4303dd
  43036e:	add    BYTE PTR [rax],al
  430370:	rex.XB outs dx,DWORD PTR ds:[rsi]
  430372:	ins    DWORD PTR es:[rdi],dx
  430373:	(bad)  
  430374:	imul   ebp,DWORD PTR [rsi+0x69],0x7320676e
  43037b:	ja     0x4303de
  43037d:	jo     0x43039f
  43037f:	and    BYTE PTR es:[rbp+riz*2+0x73],ch
  430384:	jae    0x4303e5
  430386:	jae    0x4303f1
  430388:	outs   dx,BYTE PTR ds:[esi]
  43038a:	gs and BYTE PTR fs:[rsi],ah
  43038e:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  430392:	pop    rdi
  430393:	outs   dx,BYTE PTR ds:[rsi]
  430394:	outs   dx,DWORD PTR ds:[rsi]
  430395:	je     0x4303b7
  430397:	and    BYTE PTR es:[rcx+0x66],ch
  43039b:	pop    rdi
  43039c:	outs   dx,DWORD PTR ds:[esi]
  43039e:	je     0x43040f
	...
  4303a8:	rex.B
  4303a9:	outs   dx,BYTE PTR gs:[esi]
  4303ac:	je     0x4303ce
  4303ae:	gs js  0x430421
  4303b1:	jb     0x430418
  4303b3:	jae    0x430428
  4303b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x20706f20
  4303bc:	xor    BYTE PTR [rax+0x25],bh
  4303bf:	js     0x4303e1
  4303c1:	outs   dx,BYTE PTR ds:[rsi]
  4303c2:	outs   dx,DWORD PTR ds:[rsi]
  4303c3:	je     0x4303e5
  4303c5:	jb     0x43042c
  4303c7:	movsxd ebp,DWORD PTR [rdi+0x67]
  4303ca:	outs   dx,BYTE PTR ds:[rsi]
  4303cb:	imul   edi,DWORD PTR [rdx+0x65],0xa64
  4303d2:	add    BYTE PTR [rax],al
  4303d4:	add    BYTE PTR [rax],al
  4303d6:	add    BYTE PTR [rax],al
  4303d8:	rex.RB jb 0x43044d
  4303db:	outs   dx,DWORD PTR ds:[rsi]
  4303dc:	jb     0x4303fe
  4303de:	and    eax,0x68772064
  4303e3:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x74696d65
  4303eb:	je     0x430456
  4303ed:	outs   dx,BYTE PTR ds:[rsi]
  4303ee:	and    BYTE PTR [ebx+0x6f],ah
  4303f2:	fs and BYTE PTR gs:[rsi+0x6f],ah
  4303f7:	jb     0x430419
  4303f9:	and    eax,0x4f000a73
  4303fe:	jo     0x430420
  430400:	and    eax,0x6f632073
  430405:	ins    DWORD PTR es:[rdi],dx
  430406:	jo     0x430471
  430408:	ins    BYTE PTR es:[rdi],dx
  430409:	gs or  al,BYTE PTR fs:[rax]
  43040d:	push   rdi
  43040e:	(bad)  
  43040f:	outs   dx,BYTE PTR ds:[rsi]
  430410:	je     0x430432
  430412:	je     0x430483
  430414:	and    BYTE PTR [rdx+0x75],ch
  430417:	ins    DWORD PTR es:[rdi],dx
  430418:	jo     0x43043a
  43041a:	data16 jb 0x43048c
  43041d:	ins    DWORD PTR es:[rdi],dx
  43041e:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb72497
  430424:	and    BYTE PTR [rip+0xa73],ah        # 0x430e9d
  43042a:	add    BYTE PTR [rax],al
  43042c:	add    BYTE PTR [rax],al
  43042e:	add    BYTE PTR [rax],al
  430430:	rex.R
  430431:	gs jae 0x4304a8
  430434:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  43043b:	and    BYTE PTR [rdi+0x66],ch
  43043e:	and    BYTE PTR [rdi+0x6f],ah
  430441:	je     0x4304b2
  430443:	and    BYTE PTR [rip+0x6f6e2064],ah        # 0x6fb124ad
  430449:	je     0x43046b
  43044b:	outs   dx,WORD PTR ds:[rsi]
  43044d:	jne    0x4304bd
  43044f:	or     al,BYTE PTR fs:[rax]
  430452:	add    BYTE PTR [rax],al
  430454:	lods   al,BYTE PTR ds:[rsi]
  430455:	and    bh,ch
  430457:	jmp    FWORD PTR [rdi+rbx*1+0x1f7cfffd]
  43045e:	std    
  43045f:	(bad)  
  430460:	fisub  WORD PTR [rcx]
  430462:	std    
  430463:	dec    DWORD PTR [rdi+rbx*1-0x3]
  430467:	dec    DWORD PTR [rdi+0x6dfffd21]
  43046d:	and    ebp,edi
  43046f:	(bad)  
  430470:	mov    esp,0xedfffd21
  430475:	sbb    eax,0x1eccfffd
  43047a:	std    
  43047b:	dec    DWORD PTR [rbp+rbx*1+0x1d5cfffd]
  430482:	std    
  430483:	jmp    FWORD PTR [rbx*1+0x1cfcfffd]
  43048a:	std    
  43048b:	dec    esp
  43048d:	sbb    al,0xfd
  43048f:	call   FWORD PTR [rsp+rbx*1+0x1c6cfffd]
  430496:	std    
  430497:	inc    DWORD PTR [rcx+0xcfffd22]
  43049d:	and    bh,ch
  43049f:	(bad)  
  4304a0:	cmp    al,0x22
  4304a2:	std    
  4304a3:	(bad)  
  4304a4:	cld    
  4304a5:	(bad)  
  4304a6:	std    
  4304a7:	call   QWORD PTR [rax]
  4304a9:	and    ebp,edi
  4304ab:	dec    esi
  4304ad:	and    ch,bh
  4304af:	(bad)  
  4304b0:	cmp    al,0x21
  4304b2:	std    
  4304b3:	(bad)  
  4304b4:	mov    esp,0x9dfffd1d
  4304b9:	and    ch,bh
  4304bb:	jmp    FWORD PTR [rax+riz*1-0x3]
  4304bf:	jmp    FWORD PTR [rdi+rbx*1+0x1facfffd]
  4304c6:	std    
  4304c7:	jmp    FWORD PTR [rdi+rbx*1+0x1facfffd]
  4304ce:	std    
  4304cf:	jmp    FWORD PTR [rdi+rbx*1+0x1e70fffd]
  4304d6:	std    
  4304d7:	call   FWORD PTR [rsi+rbx*1]
  4304da:	std    
  4304db:	call   FWORD PTR [rax+riz*1]
  4304de:	std    
  4304df:	call   rcx
  4304e1:	(bad)  
  4304e2:	std    
  4304e3:	jmp    rcx
  4304e5:	sbb    edi,ebp
  4304e7:	inc    DWORD PTR [rax]
  4304e9:	sbb    edi,ebp
  4304eb:	jmp    FWORD PTR [rcx+rbx*1+0x195cfffd]
  4304f2:	std    
  4304f3:	call   QWORD PTR [rcx-0x130002e6]
  4304f9:	sbb    ch,bh
  4304fb:	(bad)  
  4304fc:	mov    ebp,0x1cfffd1a
  430501:	sbb    ebp,edi
  430503:	call   FWORD PTR [rdx+rbx*1]
  430506:	std    
  430507:	(bad)  
  430508:	cmp    al,0x18
  43050a:	std    
  43050b:	dec    DWORD PTR [rax+rbx*1]
  43050e:	std    
  43050f:	jmp    FWORD PTR [rdx+riz*1+0x1facfffd]
  430516:	std    
  430517:	jmp    QWORD PTR [rbp+0x6d]
  43051a:	jo     0x430590
  43051c:	jns    0x43053e
  43051e:	(bad)  
  43051f:	outs   dx,BYTE PTR gs:[esi]
  430522:	je     0x430544
  430524:	gs js  0x430597
  430527:	jb     0x43058e
  430529:	jae    0x43059e
  43052b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f624100
  430532:	jne    0x4305a8
  430534:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  430538:	imul   ebp,DWORD PTR [rsi+0x74],0x72707265
  43053f:	gs je  0x430562
  430542:	(bad)  
  430543:	jns    0x4305b9
  430545:	and    BYTE PTR gs:[rax],dh
  430548:	js     0x43056f
  43054a:	js     0x43054c
  43054c:	rex.B je 0x4305c3
  43054f:	gs ins DWORD PTR es:[rdi],dx
  430551:	jo     0x4305c7
  430553:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  430559:	imul   esi,DWORD PTR fs:[rsi+0x69],0x62206564
  430561:	jns    0x430583
  430563:	jp     0x4305ca
  430565:	jb     0x4305d6
  430567:	add    BYTE PTR [rbp+0x6e],dh
  43056a:	push   0x6c646e61
  43056f:	gs and BYTE PTR fs:[rdx+0x65],dh
  430574:	imul   esi,DWORD PTR [ebx+0x74],0x73207265
  43057c:	imul   edi,DWORD PTR [rdx+0x65],0x2e786100
  430583:	movsxd eax,DWORD PTR [rax]
  430585:	add    BYTE PTR [rax],al
  430587:	add    BYTE PTR [rcx+0x74],al
  43058a:	and    BYTE PTR [rbp+0x6e],ah
  43058d:	and    BYTE PTR fs:[rdi+0x66],ch
  430591:	and    BYTE PTR [rbp+0x78],ah
  430594:	jo     0x430608
  430596:	gs jae 0x43060c
  430599:	imul   ebp,DWORD PTR [rdi+0x6e],0x7073202c
  4305a0:	cmp    eax,0x202c6425
  4305a5:	jae    0x43061b
  4305a7:	(bad)  
  4305a8:	movsxd ebp,DWORD PTR [rbx+0x20]
  4305ab:	je     0x43061c
  4305ad:	jo     0x4305cf
  4305af:	movsxd esp,DWORD PTR [rcx+0x63]
  4305b2:	push   0x78303d65
  4305b7:	and    eax,0x73
  4305bc:	add    BYTE PTR [rax],al
  4305be:	add    BYTE PTR [rax],al
  4305c0:	push   rbx
  4305c1:	je     0x430624
  4305c3:	movsxd ebp,DWORD PTR [rbx+0x20]
  4305c6:	imul   esi,DWORD PTR [rbx+0x20],0x74706d65
  4305cd:	jns    0x4305fb
  4305cf:	and    BYTE PTR [rsi+0x6f],ch
  4305d2:	je     0x43063c
  4305d4:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  4305db:	jb     0x430642
  4305dd:	je     0x430654
  4305df:	jb     0x43064f
  4305e1:	add    BYTE PTR [rax],al
  4305e3:	add    BYTE PTR [rax],al
  4305e5:	add    BYTE PTR [rax],al
  4305e7:	add    BYTE PTR [rbp+0x6e],dl
  4305ea:	je     0x430651
  4305ec:	jb     0x43065b
  4305ee:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  4305f5:	outs   dx,WORD PTR ds:[rsi]
  4305f7:	jb     0x430666
  4305f9:	(bad)  
  4305fa:	je     0x43061c
  4305fc:	jae    0x430672
  4305fe:	jb     0x430669
  430600:	outs   dx,BYTE PTR ds:[rsi]
  430601:	and    BYTE PTR [ecx+0x6e],ch
  430605:	and    BYTE PTR [rax+0x72],dh
  430608:	imul   ebp,DWORD PTR [rsi+0x74],0x79622066
  43060f:	je     0x430676
  430611:	movsxd ebp,DWORD PTR [rdi+0x64]
  430614:	add    BYTE PTR gs:[rax],al
  430617:	add    BYTE PTR [rcx+0x67],al
  43061a:	outs   dx,BYTE PTR gs:[rsi]
  43061c:	je     0x43063e
  43061e:	gs js  0x430691
  430621:	jb     0x430688
  430623:	jae    0x430698
  430625:	imul   ebp,DWORD PTR [rdi+0x6e],0x20706f20
  43062c:	xor    BYTE PTR [rax+0x25],bh
  43062f:	js     0x430651
  430631:	jbe    0x430694
  430633:	ins    BYTE PTR es:[rdi],dx
  430634:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x20747562
  43063c:	outs   dx,BYTE PTR ds:[rsi]
  43063d:	outs   dx,DWORD PTR ds:[rsi]
  43063e:	je     0x430660
  430640:	push   0x6c646e61
  430645:	gs add BYTE PTR fs:[rcx+0x67],al
  43064a:	outs   dx,BYTE PTR gs:[rsi]
  43064c:	je     0x43066e
  43064e:	gs js  0x4306c1
  430651:	jb     0x4306b8
  430653:	jae    0x4306c8
  430655:	imul   ebp,DWORD PTR [rdi+0x6e],0x20706f20
  43065c:	xor    BYTE PTR [rax+0x25],bh
  43065f:	js     0x430681
  430661:	outs   dx,BYTE PTR ds:[rsi]
  430662:	outs   dx,DWORD PTR ds:[rsi]
  430663:	je     0x430685
  430665:	jb     0x4306cc
  430667:	movsxd ebp,DWORD PTR [rdi+0x67]
  43066a:	outs   dx,BYTE PTR ds:[rsi]
  43066b:	imul   edi,DWORD PTR [rdx+0x65],0x78450064
  430672:	jo     0x4306e6
  430674:	gs jae 0x4306ea
  430677:	imul   ebp,DWORD PTR [rdi+0x6e],0x61747320
  43067e:	movsxd ebp,DWORD PTR [rbx+0x20]
  430681:	outs   dx,DWORD PTR ds:[rsi]
  430682:	jbe    0x4306e9
  430684:	jb     0x4306ec
  430686:	ins    BYTE PTR es:[rdi],dx
  430687:	outs   dx,DWORD PTR ds:[rsi]
  430688:	ja     0x43068a
  43068a:	rex.RB js 0x4306fd
  43068d:	jb     0x4306f4
  43068f:	jae    0x430704
  430691:	imul   ebp,DWORD PTR [rdi+0x6e],0x61747320
  430698:	movsxd ebp,DWORD PTR [rbx+0x20]
  43069b:	jne    0x43070b
  43069d:	fs gs jb 0x430707
  4306a1:	ins    BYTE PTR es:[rdi],dx
  4306a2:	outs   dx,DWORD PTR ds:[rsi]
  4306a3:	ja     0x4306a5
  4306a5:	rex.WRXB jo 0x4306c8
  4306a8:	and    eax,0x3e2d2073
  4306ad:	and    BYTE PTR [rbx+0x70],dh
  4306b0:	cmp    eax,0x202c6425
  4306b5:	je     0x430726
  4306b7:	jo     0x4306f6
  4306b9:	xor    BYTE PTR [rax+0x25],bh
  4306bc:	jae    0x4306be
  4306be:	add    BYTE PTR [rax],al
  4306c0:	add    BYTE PTR [rcx],dh
  4306c2:	std    
  4306c3:	push   QWORD PTR [rax+0x71fffd28]
  4306c9:	sub    ebp,edi
  4306cb:	jmp    rax
  4306cd:	sub    ch,bh
  4306cf:	jmp    QWORD PTR [rax+0x29]
  4306d2:	std    
  4306d3:	inc    DWORD PTR [rcx+rbp*1+0x29b0fffd]
  4306da:	std    
  4306db:	call   rsp
  4306dd:	sub    ebp,edi
  4306df:	inc    DWORD PTR [rax]
  4306e1:	sub    bh,ch
  4306e3:	jmp    QWORD PTR [rdx+rbp*1]
  4306e6:	std    
  4306e7:	inc    DWORD PTR [rax+0x2a]
  4306ea:	std    
  4306eb:	jmp    QWORD PTR [rax+0x2a]
  4306ee:	std    
  4306ef:	inc    DWORD PTR [rax-0x1f0002d6]
  4306f5:	sub    bh,ch
  4306f7:	inc    DWORD PTR [rbx]
  4306f9:	sub    edi,ebp
  4306fb:	call   rax
  4306fd:	xor    ch,bh
  4306ff:	jmp    rbx
  430701:	xor    ch,bh
  430703:	push   QWORD PTR [rax+0x30]
  430706:	std    
  430707:	inc    DWORD PTR [rbx-0x6f0002d0]
  43070d:	xor    ch,bh
  43070f:	push   QWORD PTR [rax-0xf0002d0]
  430715:	cs std 
  430717:	call   QWORD PTR [rax]
  430719:	(bad)  
  43071a:	std    
  43071b:	call   QWORD PTR [rdi+rbp*1-0x3]
  43071f:	inc    DWORD PTR [rax-0x4f0002d1]
  430725:	(bad)  
  430726:	std    
  430727:	jmp    rax
  430729:	(bad)  
  43072a:	std    
  43072b:	push   QWORD PTR [rax-0x4f0002d8]
  430731:	sub    ch,bh
  430733:	push   QWORD PTR [rax-0x4f0002d8]
  430739:	sub    ch,bh
  43073b:	push   QWORD PTR [rax+0x10fffd28]
  430741:	xor    ch,bh
  430743:	call   QWORD PTR [rax+0x30]
  430746:	std    
  430747:	call   QWORD PTR [rcx]
  430749:	sub    edi,ebp
  43074b:	push   QWORD PTR [rax]
  43074d:	sub    edi,ebp
  43074f:	jmp    QWORD PTR [rbx+0x2b]
  430752:	std    
  430753:	inc    eax
  430755:	sub    edi,ebp
  430757:	jmp    QWORD PTR [rax+0x2c]
  43075a:	std    
  43075b:	jmp    rax
  43075d:	sub    al,0xfd
  43075f:	push   QWORD PTR [rax]
  430761:	sub    eax,0x2d43fffd
  430766:	std    
  430767:	push   QWORD PTR [rax+0x2d]
  43076a:	std    
  43076b:	jmp    QWORD PTR [rax-0x3d0002d3]
  430771:	sub    eax,0x2e00fffd
  430776:	std    
  430777:	push   QWORD PTR [rax]
  430779:	cs std 
  43077b:	jmp    QWORD PTR [rax+0x2e]
  43077e:	std    
  43077f:	push   QWORD PTR [rax+0xfffd28]
  430785:	xor    ebp,edi
  430787:	call   QWORD PTR [rax-0x3f0002d2]
  43078d:	cs std 
  43078f:	inc    DWORD PTR [rax+rbp*1]
  430792:	std    
  430793:	inc    DWORD PTR [rax]
	...
  4307ad:	add    DWORD PTR [rax],eax
  4307af:	add    BYTE PTR [rax],al
  4307b1:	add    BYTE PTR [rax],al
  4307b3:	add    BYTE PTR [rax],al
  4307b5:	add    BYTE PTR [rcx],al
	...
  4307bf:	add    BYTE PTR [rdx],al
  4307c1:	add    al,BYTE PTR [rcx]
  4307c3:	add    al,BYTE PTR [rax+rcx*1]
  4307c6:	add    al,BYTE PTR [rax]
  4307c8:	add    BYTE PTR [rax],al
  4307ca:	add    DWORD PTR [rax],eax
  4307cc:	add    al,BYTE PTR [rdx]
  4307ce:	add    al,BYTE PTR [rax]
  4307d0:	add    al,BYTE PTR [rax]
  4307d2:	add    DWORD PTR [rax],eax
  4307d4:	add    BYTE PTR [rsi+0x6c],ah
  4307d7:	outs   dx,DWORD PTR ds:[rsi]
  4307d8:	(bad)  
  4307d9:	je     0x4307db
  4307db:	(bad)  
  4307dc:	fs add BYTE PTR fs:[rbx+0x75],dh
  4307e1:	(bad)  
  4307e2:	add    BYTE PTR [rbp+0x75],ch
  4307e5:	ins    BYTE PTR es:[rdi],dx
  4307e6:	add    BYTE PTR [rcx+rbp*2+0x76],ah
  4307ea:	pop    rdi
  4307eb:	jae    0x430856
  4307ed:	outs   dx,BYTE PTR ds:[esi]
  4307ef:	gs add BYTE PTR fs:[rcx+rbp*2+0x76],ah
  4307f5:	pop    rdi
  4307f6:	jne    0x430866
  4307f8:	jae    0x430863
  4307fa:	outs   dx,BYTE PTR ds:[esi]
  4307fc:	gs add BYTE PTR fs:[rdx+0x65],dh
  430801:	ins    DWORD PTR es:[rdi],dx
  430802:	pop    rdi
  430803:	jae    0x43086e
  430805:	outs   dx,BYTE PTR ds:[esi]
  430807:	gs add BYTE PTR fs:[rdx+0x65],dh
  43080c:	ins    DWORD PTR es:[rdi],dx
  43080d:	pop    rdi
  43080e:	jne    0x43087e
  430810:	jae    0x43087b
  430812:	outs   dx,BYTE PTR ds:[esi]
  430814:	gs add BYTE PTR fs:[rbx+rsi*2+0x68],ch
  43081a:	add    BYTE PTR [rdx+0x73],dh
  43081d:	push   0x6769735f
  430822:	outs   dx,BYTE PTR ds:[rsi]
  430823:	gs add BYTE PTR fs:[rdx+0x73],dh
  430828:	push   0x736e755f
  43082d:	imul   esp,DWORD PTR [rdi+0x6e],0x74006465
  430834:	jb     0x430897
  430836:	movsxd esp,DWORD PTR [rbp+0x0]
  430839:	je     0x4308ad
  43083b:	(bad)  
  43083c:	movsxd esp,DWORD PTR [rbp+0x5f]
  43083f:	jno    0x4308b6
  430841:	imul   esp,DWORD PTR [rbx+0x6b],0x676f6c00
  430848:	pop    rdi
  430849:	outs   dx,BYTE PTR ds:[rsi]
  43084a:	outs   dx,DWORD PTR ds:[rsi]
  43084b:	je     0x43084d
  43084d:	(bad)  
  43084e:	imul   esi,DWORD PTR [rdi+rbx*2+0x61],0x6200646e
  430856:	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x69620072
  43085e:	je     0x4308bf
  430860:	js     0x4308d1
  430862:	jb     0x430864
  430864:	(bad)  
  430865:	imul   esi,DWORD PTR [rdi+rbx*2+0x6e],0x6500746f
  43086d:	jno    0x4308e4
  43086f:	(bad)  
  430870:	ins    BYTE PTR es:[rdi],dx
  430871:	add    BYTE PTR [rbp+riz*2+0x73],ch
  430875:	jae    0x4308d6
  430877:	jae    0x4308e2
  430879:	outs   dx,BYTE PTR ds:[esi]
  43087b:	gs add BYTE PTR fs:[rbp+riz*2+0x73],ch
  430881:	jae    0x4308e2
  430883:	jne    0x4308f3
  430885:	jae    0x4308f0
  430887:	outs   dx,BYTE PTR ds:[esi]
  430889:	gs add BYTE PTR fs:[rbp+0x78],ah
  43088e:	je     0x430890
  430890:	jb     0x4308f7
  430892:	data16 cmp BYTE PTR [rax],al
  430895:	jb     0x4308fc
  430897:	xor    WORD PTR [rsi],si
  43089a:	add    BYTE PTR [rdx+0x65],dh
  43089d:	xor    si,WORD PTR [rdx]
  4308a0:	add    BYTE PTR [rdx+0x65],dh
  4308a3:	data16 ss xor al,0x0
  4308a7:	jb     0x43090e
  4308a9:	pop    di
  4308ab:	data16 ins BYTE PTR es:[rdi],dx
  4308ad:	outs   dx,DWORD PTR ds:[rsi]
  4308ae:	(bad)  
  4308af:	je     0x4308b1
  4308b1:	jb     0x430918
  4308b3:	pop    di
  4308b5:	outs   dx,DWORD PTR fs:[rsi]
  4308b7:	jne    0x43091b
  4308b9:	ins    BYTE PTR es:[rdi],dx
  4308ba:	add    BYTE PTR gs:[rdx+0x65],dh
  4308be:	pop    di
  4308c0:	ins    BYTE PTR es:[rdi],dx
  4308c1:	outs   dx,DWORD PTR ds:[rsi]
  4308c2:	outs   dx,BYTE PTR ds:[rsi]
  4308c3:	addr32 pop rdi
  4308c5:	outs   dx,DWORD PTR fs:[rsi]
  4308c7:	jne    0x43092b
  4308c9:	ins    BYTE PTR es:[rdi],dx
  4308ca:	add    BYTE PTR gs:[rdi+rbx*2+0x74],ch
  4308cf:	outs   dx,DWORD PTR ds:[rsi]
  4308d0:	pop    rdi
  4308d1:	add    BYTE PTR fs:[rdi+rbx*2+0x74],ah
  4308d6:	outs   dx,DWORD PTR ds:[rsi]
  4308d7:	pop    rdi
  4308d8:	ins    BYTE PTR es:[rdi],dx
  4308d9:	add    BYTE PTR [rcx+0x66],ch
  4308dc:	pop    rdi
  4308dd:	outs   dx,DWORD PTR ds:[esi]
  4308df:	je     0x430950
  4308e1:	add    BYTE PTR [rdi+0x6f],ah
  4308e4:	je     0x430955
  4308e6:	add    BYTE PTR [rbx+0x6f],ah
  4308e9:	outs   dx,BYTE PTR ds:[rsi]
  4308ea:	jae    0x430960
  4308ec:	cmp    BYTE PTR [rax],al
  4308ee:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4308f1:	jae    0x430967
  4308f3:	xor    DWORD PTR [rsi],esi
  4308f5:	add    BYTE PTR [rbx+0x6f],ah
  4308f8:	outs   dx,BYTE PTR ds:[rsi]
  4308f9:	jae    0x43096f
  4308fb:	xor    esi,DWORD PTR [rdx]
  4308fd:	add    BYTE PTR [rbx+0x6f],ah
  430900:	outs   dx,BYTE PTR ds:[rsi]
  430901:	jae    0x430977
  430903:	ss xor al,0x0
  430906:	jb     0x43096d
  430908:	add    BYTE PTR [ebp+0x6e],ah
  43090c:	add    BYTE PTR fs:[rbp+rsi*2+0x70],ah
  430911:	add    BYTE PTR [rax+0x6f],dh
  430914:	jo     0x430916
  430916:	jp     0x43097d
  430918:	jb     0x430989
  43091a:	pop    rdi
  43091b:	gs js  0x430992
  43091e:	add    BYTE PTR [rbx+0x77],dh
  430921:	(bad)  
  430922:	jo     0x430924
  430924:	addr32 gs je 0x43099e
  430928:	add    BYTE PTR [rbx+0x65],dh
  43092b:	je     0x4309a3
  43092d:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  430931:	movsxd esp,DWORD PTR [rbp+0x76]
  430934:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  430938:	movsxd esp,DWORD PTR [rbp+0x6e]
  43093b:	jp     0x43093d
  43093d:	je     0x4309b1
  43093f:	(bad)  
  430940:	movsxd esp,DWORD PTR [rbp+0x31]
  430943:	add    BYTE PTR ss:[rcx+0x6e],ch
  430947:	jbe    0x4309aa
  430949:	ins    BYTE PTR es:[rdi],dx
  43094a:	imul   esp,DWORD PTR [rdx+rsi*1+0x0],0x6b636970
  430952:	add    BYTE PTR [rdx+0x6f],dh
  430955:	je     0x430957
  430957:	jo     0x4309cb
  430959:	imul   ebp,DWORD PTR [rsi+0x74],0x66
	...
  430980:	rex.W add al,BYTE PTR [rbx+0x0]
  430984:	add    BYTE PTR [rax],al
  430986:	add    BYTE PTR [rax],al
  430988:	(bad)  
  430989:	(bad)  
  43098a:	rex.XB add BYTE PTR [r8],al
  43098d:	add    BYTE PTR [rax],al
  43098f:	add    bl,bl
  430991:	(bad)  
  430992:	rex.XB add BYTE PTR [r8],al
  430995:	add    BYTE PTR [rax],al
  430997:	add    bh,bl
  430999:	(bad)  
  43099a:	rex.XB add BYTE PTR [r8],al
  43099d:	add    BYTE PTR [rax],al
  43099f:	add    bl,ah
  4309a1:	(bad)  
  4309a2:	rex.XB add BYTE PTR [r8],al
  4309a5:	add    BYTE PTR [rax],al
  4309a7:	add    bh,ah
  4309a9:	(bad)  
  4309aa:	rex.XB add BYTE PTR [r8],al
  4309ad:	add    BYTE PTR [rax],al
  4309af:	add    dl,dh
  4309b1:	(bad)  
  4309b2:	rex.XB add BYTE PTR [r8],al
  4309b5:	add    BYTE PTR [rax],al
  4309b7:	add    bh,bh
  4309b9:	(bad)  
  4309ba:	rex.XB add BYTE PTR [r8],al
  4309bd:	add    BYTE PTR [rax],al
  4309bf:	add    BYTE PTR [rdx],cl
  4309c1:	or     BYTE PTR [rbx+0x0],al
  4309c4:	add    BYTE PTR [rax],al
  4309c6:	add    BYTE PTR [rax],al
  4309c8:	(bad)  
  4309c9:	or     BYTE PTR [rbx+0x0],al
  4309cc:	add    BYTE PTR [rax],al
  4309ce:	add    BYTE PTR [rax],al
  4309d0:	sbb    ecx,DWORD PTR [rax]
  4309d2:	rex.XB add BYTE PTR [r8],al
  4309d5:	add    BYTE PTR [rax],al
  4309d7:	add    BYTE PTR [rsi],ah
  4309d9:	or     BYTE PTR [rbx+0x0],al
  4309dc:	add    BYTE PTR [rax],al
  4309de:	add    BYTE PTR [rax],al
  4309e0:	xor    ecx,DWORD PTR [rax]
  4309e2:	rex.XB add BYTE PTR [r8],al
  4309e5:	add    BYTE PTR [rax],al
  4309e7:	add    BYTE PTR [rcx],bh
  4309e9:	or     BYTE PTR [rbx+0x0],al
  4309ec:	add    BYTE PTR [rax],al
  4309ee:	add    BYTE PTR [rax],al
  4309f0:	or     BYTE PTR [r11+0x0],r8b
  4309f4:	add    BYTE PTR [rax],al
  4309f6:	add    BYTE PTR [rax],al
  4309f8:	rex.WRB or BYTE PTR [r11+0x0],r8b
  4309fc:	add    BYTE PTR [rax],al
  4309fe:	add    BYTE PTR [rax],al
  430a00:	push   rbp
  430a01:	or     BYTE PTR [rbx+0x0],al
  430a04:	add    BYTE PTR [rax],al
  430a06:	add    BYTE PTR [rax],al
  430a08:	pop    rsp
  430a09:	or     BYTE PTR [rbx+0x0],al
  430a0c:	add    BYTE PTR [rax],al
  430a0e:	add    BYTE PTR [rax],al
  430a10:	or     BYTE PTR fs:[rbx+0x0],al
  430a14:	add    BYTE PTR [rax],al
  430a16:	add    BYTE PTR [rax],al
  430a18:	ins    BYTE PTR es:[rdi],dx
  430a19:	or     BYTE PTR [rbx+0x0],al
  430a1c:	add    BYTE PTR [rax],al
  430a1e:	add    BYTE PTR [rax],al
  430a20:	jb     0x430a2a
  430a22:	rex.XB add BYTE PTR [r8],al
  430a25:	add    BYTE PTR [rax],al
  430a27:	add    BYTE PTR [rsi+0x8],bh
  430a2a:	rex.XB add BYTE PTR [r8],al
  430a2d:	add    BYTE PTR [rax],al
  430a2f:	add    BYTE PTR [rax+rcx*1+0x43],cl
  430a36:	add    BYTE PTR [rax],al
  430a38:	nop
  430a39:	or     BYTE PTR [rbx+0x0],al
  430a3c:	add    BYTE PTR [rax],al
  430a3e:	add    BYTE PTR [rax],al
  430a40:	xchg   ebp,eax
  430a41:	or     BYTE PTR [rbx+0x0],al
  430a44:	add    BYTE PTR [rax],al
  430a46:	add    BYTE PTR [rax],al
  430a48:	fwait
  430a49:	or     BYTE PTR [rbx+0x0],al
  430a4c:	add    BYTE PTR [rax],al
  430a4e:	add    BYTE PTR [rax],al
  430a50:	movabs eax,ds:0xa700000000004308
  430a59:	or     BYTE PTR [rbx+0x0],al
  430a5c:	add    BYTE PTR [rax],al
  430a5e:	add    BYTE PTR [rax],al
  430a60:	mov    cl,0x8
  430a62:	rex.XB add BYTE PTR [r8],al
  430a65:	add    BYTE PTR [rax],al
  430a67:	add    BYTE PTR [rax+rcx*1+0x43],bh
  430a6e:	add    BYTE PTR [rax],al
  430a70:	int3   
  430a71:	or     BYTE PTR [rbx+0x0],al
  430a74:	add    BYTE PTR [rax],al
  430a76:	add    BYTE PTR [rax],al
  430a78:	ror    DWORD PTR [rax],cl
  430a7a:	rex.XB add BYTE PTR [r8],al
  430a7d:	add    BYTE PTR [rax],al
  430a7f:	add    dl,bl
  430a81:	or     BYTE PTR [rbx+0x0],al
  430a84:	add    BYTE PTR [rax],al
  430a86:	add    BYTE PTR [rax],al
  430a88:	loop   0x430a92
  430a8a:	rex.XB add BYTE PTR [r8],al
  430a8d:	add    BYTE PTR [rax],al
  430a8f:	add    bh,ah
  430a91:	or     BYTE PTR [rbx+0x0],al
  430a94:	add    BYTE PTR [rax],al
  430a96:	add    BYTE PTR [rax],al
  430a98:	out    dx,al
  430a99:	or     BYTE PTR [rbx+0x0],al
  430a9c:	add    BYTE PTR [rax],al
  430a9e:	add    BYTE PTR [rax],al
  430aa0:	test   BYTE PTR [rax],0x43
  430aa3:	add    BYTE PTR [rax],al
  430aa5:	add    BYTE PTR [rax],al
  430aa7:	add    dh,bh
  430aa9:	or     BYTE PTR [rbx+0x0],al
  430aac:	add    BYTE PTR [rax],al
  430aae:	add    BYTE PTR [rax],al
  430ab0:	(bad)  
  430ab1:	or     DWORD PTR [rbx+0x0],eax
  430ab4:	add    BYTE PTR [rax],al
  430ab6:	add    BYTE PTR [rax],al
  430ab8:	or     cl,BYTE PTR [rcx]
  430aba:	rex.XB add BYTE PTR [r8],al
  430abd:	add    BYTE PTR [rax],al
  430abf:	add    BYTE PTR [rsi],cl
  430ac1:	or     DWORD PTR [rbx+0x0],eax
  430ac4:	add    BYTE PTR [rax],al
  430ac6:	add    BYTE PTR [rax],al
  430ac8:	adc    cl,BYTE PTR [rcx]
  430aca:	rex.XB add BYTE PTR [r8],al
  430acd:	add    BYTE PTR [rax],al
  430acf:	add    BYTE PTR [rsi],dl
  430ad1:	or     DWORD PTR [rbx+0x0],eax
  430ad4:	add    BYTE PTR [rax],al
  430ad6:	add    BYTE PTR [rax],al
  430ad8:	(bad)  
  430ad9:	or     DWORD PTR [rbx+0x0],eax
  430adc:	add    BYTE PTR [rax],al
  430ade:	add    BYTE PTR [rax],al
  430ae0:	and    al,0x9
  430ae2:	rex.XB add BYTE PTR [r8],al
  430ae5:	add    BYTE PTR [rax],al
  430ae7:	add    BYTE PTR [rcx],ch
  430ae9:	or     DWORD PTR [rbx+0x0],eax
  430aec:	add    BYTE PTR [rax],al
  430aee:	add    BYTE PTR [rax],al
  430af0:	or     DWORD PTR cs:[rbx+0x0],eax
  430af4:	add    BYTE PTR [rax],al
  430af6:	add    BYTE PTR [rax],al
  430af8:	xor    eax,0x4309
  430afd:	add    BYTE PTR [rax],al
  430aff:	add    BYTE PTR [rip+0x4309],bh        # 0x434e0e
  430b05:	add    BYTE PTR [rax],al
  430b07:	add    BYTE PTR [rbp+0x9],al
  430b0a:	rex.XB add BYTE PTR [r8],al
  430b0d:	add    BYTE PTR [rax],al
  430b0f:	add    BYTE PTR [rsi+0x9],cl
  430b12:	rex.XB add BYTE PTR [r8],al
  430b15:	add    BYTE PTR [rax],al
  430b17:	add    BYTE PTR [rbx+0x9],dl
  430b1a:	rex.XB add BYTE PTR [r8],al
  430b1d:	add    BYTE PTR [rax],al
  430b1f:	add    BYTE PTR [rdi+0x9],dl
  430b22:	rex.XB add BYTE PTR [r8],al
	...
  430b3d:	add    BYTE PTR [rax],al
  430b3f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x416345b8
  430b45:	jae    0x430bba
  430b47:	gs jb  0x430bbe
  430b4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  430b51:	(bad)  
  430b52:	and    BYTE PTR [rsi+0x61],ah
  430b55:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e69002e
  430b5d:	data16 gs jb 0x430bca
  430b61:	outs   dx,DWORD PTR ds:[rsi]
  430b62:	jb     0x430bd7
  430b64:	movsxd eax,DWORD PTR cs:[rax]
  430b67:	add    BYTE PTR [rsi+0x69],ah
  430b6a:	outs   dx,BYTE PTR ds:[rsi]
  430b6b:	fs pop rdi
  430b6d:	je     0x430bd7
  430b6f:	jb     0x430bd6
  430b71:	(bad)  
  430b72:	fs pop rdi
  430b74:	jo     0x430be8
  430b76:	outs   dx,DWORD PTR ds:[rsi]
  430b77:	movsxd esp,DWORD PTR [rbp+0x73]
  430b7a:	jae    0x430b9c
  430b7c:	sub    BYTE PTR [rax+0x72],dh
  430b7f:	outs   dx,DWORD PTR ds:[rsi]
  430b80:	movsxd esp,DWORD PTR [rbp+0x73]
  430b83:	jae    0x430bae
  430b85:	and    BYTE PTR [rip+0x554e203d],bh        # 0x55912bc8
  430b8b:	rex.WR
  430b8c:	rex.WR add BYTE PTR [rbx+0x75],r12b
  430b90:	jb     0x430c04
  430b92:	outs   dx,BYTE PTR gs:[rsi]
  430b94:	je     0x430bf5
  430b96:	je     0x430c00
  430b98:	jb     0x430bff
  430b9a:	(bad)  
  430b9b:	and    BYTE PTR fs:[rcx],ah
  430b9e:	cmp    eax,0x4c554e20
  430ba3:	rex.WR add BYTE PTR [rax],r8b
	...
  430bbe:	add    BYTE PTR [rax],al
  430bc0:	jo     0x430c34
  430bc2:	outs   dx,DWORD PTR ds:[rsi]
  430bc3:	movsxd esp,DWORD PTR [rbp+0x73]
  430bc6:	jae    0x430c27
  430bc8:	imul   ebp,DWORD PTR [rsi+0x66],0x63202a6f
  430bcf:	jne    0x430c43
  430bd1:	jb     0x430c38
  430bd3:	outs   dx,BYTE PTR ds:[rsi]
  430bd4:	je     0x430c35
  430bd6:	jo     0x430c4a
  430bd8:	outs   dx,DWORD PTR ds:[rsi]
  430bd9:	movsxd esp,DWORD PTR [rbp+0x73]
  430bdc:	jae    0x430c06
  430bde:	sub    DWORD PTR [rax],eax
  430be0:	jbe    0x430c51
  430be2:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x766f6d65
  430bea:	gs pop rdi
  430bec:	jo     0x430c60
  430bee:	outs   dx,DWORD PTR ds:[rsi]
  430bef:	movsxd esp,DWORD PTR [rbp+0x73]
  430bf2:	jae    0x430c1c
  430bf4:	jo     0x430c68
  430bf6:	outs   dx,DWORD PTR ds:[rsi]
  430bf7:	movsxd esp,DWORD PTR [rbp+0x73]
  430bfa:	jae    0x430c5b
  430bfc:	imul   ebp,DWORD PTR [rsi+0x66],0x292a6f
	...
  430c3f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x416346b8
  430c45:	jae    0x430cba
  430c47:	gs jb  0x430cbe
  430c4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  430c51:	(bad)  
  430c52:	and    BYTE PTR [rsi+0x61],ah
  430c55:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6572002e
  430c5d:	movsxd esp,DWORD PTR [ecx+0x63]
  430c61:	push   0x632e65
  430c66:	je     0x430ccc
  430c68:	gs jae 0x430cce
  430c6b:	sub    eax,0x6765723e
  430c70:	imul   esi,DWORD PTR [rbx+0x74],0x5f737265
  430c77:	jae    0x430ce2
  430c79:	jp     0x430ce0
  430c7b:	and    BYTE PTR [rcx],ah
  430c7d:	cmp    eax,0x70003020
  430c82:	jb     0x430cf3
  430c84:	movsxd ebp,DWORD PTR [rip+0x6564743e]        # 0x65a780c8
  430c8a:	jae    0x430cef
  430c8c:	and    BYTE PTR [rcx],ah
  430c8e:	cmp    eax,0x4c554e20
  430c93:	rex.WR add BYTE PTR [rbx+0x72],r14b
  430c97:	movsxd esp,DWORD PTR [rax]
  430c99:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c985abf
  430c9f:	rex.WR and BYTE PTR [rsi],r12b
  430ca2:	and    BYTE PTR es:[rbx+rsi*2+0x74],ah
  430ca7:	and    BYTE PTR [rcx],ah
  430ca9:	cmp    eax,0x4c554e20
  430cae:	rex.WR add BYTE PTR [rbx+0x72],r14b
  430cb2:	movsxd ebp,DWORD PTR [rip+0x6564743e]        # 0x65a780f6
  430cb8:	jae    0x430d1d
  430cba:	and    BYTE PTR [rip+0x7364203d],bh        # 0x73a72cfd
  430cc0:	je     0x430cef
  430cc2:	ds je  0x430d29
  430cc5:	gs jae 0x430d2b
  430cc8:	add    BYTE PTR [rbx+0x72],dh
  430ccb:	movsxd esp,DWORD PTR [rax]
  430ccd:	and    DWORD PTR [rip+0x74736420],edi        # 0x74b670f3
  430cd3:	add    BYTE PTR [rax],al
  430cd5:	add    BYTE PTR [rax],al
  430cd7:	add    BYTE PTR [rdi+0x72],dl
  430cda:	outs   dx,DWORD PTR ds:[rsi]
  430cdb:	outs   dx,BYTE PTR ds:[rsi]
  430cdc:	and    BYTE PTR [ebx+0x69],dh
  430ce0:	jp     0x430d47
  430ce2:	and    BYTE PTR fs:[rdx+0x65],dh
  430ce6:	imul   esi,DWORD PTR [ebx+0x74],0x70207265
  430cee:	(bad)  
  430cef:	movsxd ebp,DWORD PTR [rbx+0x65]
  430cf2:	je     0x430d14
  430cf4:	sub    BYTE PTR [rbp+0x78],ah
  430cf7:	jo     0x430d5e
  430cf9:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  430cfd:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a52d67
  430d03:	je     0x430d6a
  430d05:	jae    0x430d33
  430d07:	and    BYTE PTR [rdi+0x6f],ah
  430d0a:	je     0x430d2c
  430d0c:	and    eax,0x55002964
  430d11:	outs   dx,BYTE PTR ds:[rsi]
  430d12:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  430d16:	outs   dx,BYTE PTR ds:[rsi]
  430d17:	and    BYTE PTR [rdx+0x65],dh
  430d1a:	imul   esi,DWORD PTR [ebx+0x74],0x25207265
  430d22:	jae    0x430d44
  430d24:	jb     0x430d8b
  430d26:	jno    0x430d9d
  430d28:	gs jae 0x430d9f
  430d2b:	gs add BYTE PTR fs:[rdx+0x65],dh
  430d30:	movsxd esp,DWORD PTR [ecx+0x63]
  430d34:	push   0x3d212065
  430d39:	and    BYTE PTR [rsi+0x55],cl
  430d3c:	rex.WR
  430d3d:	rex.WR add BYTE PTR [rax],r8b
  430d40:	jb     0x430da7
  430d42:	outs   dx,BYTE PTR ds:[esi]
  430d44:	jne    0x430db3
  430d46:	and    BYTE PTR [rsi],bh
  430d48:	cmp    eax,0x26203020
  430d4d:	and    BYTE PTR es:[rdx+0x65],dh
  430d51:	outs   dx,BYTE PTR ds:[esi]
  430d53:	jne    0x430dc2
  430d55:	and    BYTE PTR [rax+riz*1],bh
  430d58:	jb     0x430dbf
  430d5a:	movsxd esp,DWORD PTR [ecx+0x63]
  430d5e:	push   0x743e2d65
  430d63:	fs gs jae 0x430dca
  430d67:	sub    eax,0x6d756e3e
  430d6c:	pop    rdi
  430d6d:	jb     0x430dd4
  430d6f:	imul   esi,DWORD PTR [ebx+0x74],0x737265
  430d77:	add    BYTE PTR [rax+rbp*2+0x61],dl
  430d7b:	je     0x430d9d
  430d7d:	outs   dx,DWORD PTR ds:[rsi]
  430d7e:	jo     0x430de5
  430d80:	jb     0x430de3
  430d82:	je     0x430ded
  430d84:	outs   dx,DWORD PTR ds:[rsi]
  430d85:	outs   dx,BYTE PTR ds:[rsi]
  430d86:	and    BYTE PTR [rcx+0x73],ch
  430d89:	and    BYTE PTR [rsi+0x6f],ch
  430d8c:	je     0x430dae
  430d8e:	(bad)  
  430d8f:	jbe    0x430df2
  430d91:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  430d99:	outs   dx,BYTE PTR ds:[rsi]
  430d9a:	and    BYTE PTR [rcx+0x6e],ch
  430d9d:	je     0x430e04
  430d9f:	addr32 gs jb 0x430e16
  430da3:	and    BYTE PTR [rdi+0x66],ch
  430da6:	and    BYTE PTR [rbp+0x6f],ch
  430da9:	jb     0x430e10
  430dab:	and    BYTE PTR [rax+rbp*2+0x61],dh
  430daf:	outs   dx,BYTE PTR ds:[rsi]
  430db0:	and    eax,0x79622064
  430db5:	je     0x430e1c
  430db7:	jae    0x430de7
  430db9:	add    BYTE PTR [rax],al
  430dbb:	add    BYTE PTR [rax],al
  430dbd:	add    BYTE PTR [rax],al
  430dbf:	add    BYTE PTR [rdx+0x65],dh
  430dc2:	movsxd esp,DWORD PTR [ecx+0x63]
  430dc6:	push   0x65725f65
  430dcb:	(bad)  
  430dcc:	fs pop rdi
  430dce:	jo     0x430e33
  430dd0:	cmp    ah,BYTE PTR [rax]
  430dd2:	push   rbp
  430dd3:	outs   dx,BYTE PTR ds:[rsi]
  430dd4:	(bad)  
  430dd5:	(bad)  
  430dd6:	ins    BYTE PTR es:[rdi],dx
  430dd7:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  430ddc:	imul   bp,WORD PTR [rsi+0x64],0x5020
  430de2:	rex.XB add BYTE PTR [r8],al
  430de5:	add    BYTE PTR [rax],al
  430de7:	add    BYTE PTR [rdx+0x65],dh
  430dea:	movsxd esp,DWORD PTR [ecx+0x63]
  430dee:	push   0x72775f65
  430df3:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x203a6370
  430dfb:	push   rbp
  430dfc:	outs   dx,BYTE PTR ds:[rsi]
  430dfd:	(bad)  
  430dfe:	(bad)  
  430dff:	ins    BYTE PTR es:[rdi],dx
  430e00:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  430e05:	jne    0x430e77
  430e07:	fs (bad) 
  430e09:	je     0x430e70
  430e0b:	and    BYTE PTR [rax+0x43],dl
	...
  430e3e:	add    BYTE PTR [rax],al
  430e40:	jb     0x430ea7
  430e42:	imul   esi,DWORD PTR [ebx+0x74],0x735f7265
  430e4a:	je     0x430ead
  430e4c:	je     0x430ec3
  430e4e:	jae    0x430e70
  430e50:	jb     0x430eb7
  430e52:	movsxd esp,DWORD PTR [ecx+0x63]
  430e56:	push   0x61725f65
  430e5b:	ja     0x430ebc
  430e5d:	jb     0x430ec4
  430e5f:	(bad)  
  430e60:	fs pop rdi
  430e62:	jne    0x430ed2
  430e64:	jae    0x430ecf
  430e66:	outs   dx,BYTE PTR ds:[esi]
  430e68:	gs sub BYTE PTR fs:[rdx+0x65],dh
  430e6d:	movsxd esp,DWORD PTR [ecx+0x63]
  430e71:	push   0x202c2a65
  430e76:	imul   ebp,DWORD PTR [rsi+0x74],0x4c55202c
  430e7d:	rex.WRXB
  430e7e:	rex.WRX
  430e7f:	rex.RXB
  430e80:	rex.RB push r11
  430e82:	push   rsp
  430e83:	sub    ch,BYTE PTR [rcx]
	...
  430e9d:	add    BYTE PTR [rax],al
  430e9f:	add    BYTE PTR [rsi+0x6f],dh
  430ea2:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x61636765
  430eaa:	movsxd ebp,DWORD PTR [rax+0x65]
  430ead:	pop    rdi
  430eae:	movsxd esi,DWORD PTR [rax+0x79]
  430eb1:	sub    BYTE PTR [rdx+0x65],dh
  430eb4:	movsxd esp,DWORD PTR [ecx+0x63]
  430eb8:	push   0x202c2a65
  430ebd:	jb     0x430f24
  430ebf:	movsxd esp,DWORD PTR [ecx+0x63]
  430ec3:	push   0x292a65
	...
  430ee0:	jb     0x430f47
  430ee2:	movsxd esp,DWORD PTR [ecx+0x63]
  430ee6:	push   0x6e202a65
  430eeb:	gs ja  0x430f4d
  430eee:	jb     0x430f55
  430ef0:	imul   esi,DWORD PTR [ebx+0x74],0x635f7265
  430ef8:	(bad)  
  430ef9:	movsxd ebp,DWORD PTR [rax+0x65]
  430efc:	sub    BYTE PTR [rbx+0x6f],ah
  430eff:	outs   dx,BYTE PTR ds:[rsi]
  430f00:	jae    0x430f76
  430f02:	and    BYTE PTR [rcx+riz*2+0x72],dh
  430f06:	addr32 gs je 0x430f69
  430f0a:	fs gs jae 0x430f71
  430f0e:	sub    ch,BYTE PTR [rcx]
	...
  430f20:	jb     0x430f87
  430f22:	movsxd esp,DWORD PTR [ecx+0x63]
  430f26:	push   0x67202a65
  430f2b:	gs je  0x430f8d
  430f2e:	je     0x430f98
  430f30:	jb     0x430f97
  430f32:	(bad)  
  430f33:	fs pop rdi
  430f35:	jb     0x430f9c
  430f37:	movsxd esp,DWORD PTR [ecx+0x63]
  430f3b:	push   0x68742865
  430f40:	jb     0x430fa7
  430f42:	(bad)  
  430f43:	fs pop rdi
  430f45:	imul   ebp,DWORD PTR [rsi+0x66],0x202c2a6f
  430f4c:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  430f7f:	add    BYTE PTR [rip+0x31],ch        # 0x430fb6
  430f85:	add    BYTE PTR [rax],al
  430f87:	add    BYTE PTR [rax+0x61],ch
  430f8a:	outs   dx,BYTE PTR ds:[rsi]
  430f8b:	fs ins BYTE PTR es:[rdi],dx
  430f8d:	imul   ebp,DWORD PTR [rsi+0x67],0x736f7020
  430f94:	jae    0x430fff
  430f96:	(bad)  
  430f97:	ins    BYTE PTR es:[rdi],dx
  430f98:	and    BYTE PTR gs:[rcx+0x63],ah
  430f9c:	movsxd esp,DWORD PTR [rbp+0x70]
  430f9f:	je     0x430fc1
  430fa1:	gs jbe 0x431009
  430fa4:	outs   dx,BYTE PTR ds:[rsi]
  430fa5:	je     0x430fb1
  430fa7:	add    BYTE PTR [rcx+0x63],al
  430faa:	movsxd esp,DWORD PTR [rbp+0x70]
  430fad:	je     0x430fcf
  430faf:	data16 (bad) 
  430fb1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x52000000
  430fb9:	gs ins DWORD PTR es:[rdi],dx
  430fbb:	outs   dx,DWORD PTR ds:[rsi]
  430fbc:	je     0x431023
  430fbe:	and    BYTE PTR [rbp+riz*2+0x62],ah
  430fc2:	jne    0x43102b
  430fc4:	imul   ebp,DWORD PTR [esi+0x67],0x6f726620
  430fcc:	ins    DWORD PTR es:[rdi],dx
  430fcd:	and    BYTE PTR [rax+0x6f],ch
  430fd0:	jae    0x431046
  430fd2:	and    BYTE PTR [rip+0x72000a73],ah        # 0x72431a4b
  430fd8:	gs (bad) 
  430fda:	movsxd ebp,DWORD PTR fs:[rax+0x61]
  430fde:	jb     0x43101a
  430fe0:	and    BYTE PTR [rdi+0x6f],al
  430fe3:	je     0x431005
  430fe5:	rex.RB
  430fe6:	rex.WRXB
  430fe7:	rex.RX or r8b,BYTE PTR [rax]
  430fea:	jb     0x431051
  430fec:	(bad)  
  430fed:	movsxd ebp,DWORD PTR fs:[rax+0x61]
  430ff1:	jb     0x430ff3
  430ff3:	jo     0x43106a
  430ff5:	je     0x431067
  430ff7:	imul   esi,DWORD PTR [rax+rbp*1+0x77],0x72
  430ffc:	imul   esi,DWORD PTR [rbp+riz*2+0x29],0x74757000
  431004:	jo     0x431071
  431006:	je     0x431028
  431008:	sub    BYTE PTR [rdx],ah
  43100a:	and    eax,0x3b292273
  43100f:	and    BYTE PTR [rbx+0x6e],bl
  431012:	outs   dx,DWORD PTR ds:[rsi]
  431013:	je     0x43107e
  431015:	pop    bp
  431017:	or     al,BYTE PTR [rax]
  431019:	jo     0x431090
  43101b:	je     0x43108d
  43101d:	imul   esi,DWORD PTR [rax+riz*1+0x28],0x22
  431022:	and    eax,0x3b292273
  431027:	and    BYTE PTR [rbx+0x6e],bl
  43102a:	outs   dx,DWORD PTR ds:[rsi]
  43102b:	(bad)  
  43102c:	movsxd ebp,DWORD PTR [rbx+0x20]
  43102f:	ins    DWORD PTR es:[rdi],dx
  431030:	outs   dx,DWORD PTR ds:[rsi]
  431031:	fs gs pop rbp
  431034:	or     al,BYTE PTR [rax]
  431036:	add    BYTE PTR [rax],al
  431038:	jo     0x4310af
  43103a:	je     0x4310ac
  43103c:	imul   esi,DWORD PTR [rax+riz*1+0x28],0x22
  431041:	and    eax,0x3b292273
  431046:	and    BYTE PTR [rbx+0x6c],bl
  431049:	outs   dx,DWORD PTR ds:[rsi]
  43104a:	outs   dx,DWORD PTR ds:[rsi]
  43104b:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  43104f:	and    BYTE PTR [rsi+0x6f],ah
  431052:	jb     0x431074
  431054:	(bad)  
  431055:	movsxd ebp,DWORD PTR [rbx+0x5d]
  431058:	or     al,BYTE PTR [rax]
  43105a:	pop    rbx
  43105b:	jb     0x4310c2
  43105d:	movsxd esp,DWORD PTR [rbp+0x69]
  431060:	jbe    0x4310c7
  431062:	and    BYTE PTR fs:[rdi],ah
  431065:	and    eax,0x28202763
  43106a:	xor    BYTE PTR [rax+0x25],bh
  43106d:	js     0x431098
  43106f:	pop    rbp
  431070:	or     al,BYTE PTR [rax]
  431072:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  431076:	outs   dx,BYTE PTR ds:[rsi]
  431077:	je     0x431099
  431079:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43107c:	outs   dx,BYTE PTR ds:[rsi]
  43107d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  431082:	outs   dx,BYTE PTR ds:[rsi]
  431083:	and    BYTE PTR [rbx+0x6c],ah
  431086:	outs   dx,DWORD PTR ds:[rsi]
  431087:	jae    0x4310ee
  431089:	or     al,BYTE PTR fs:[rax]
  43108c:	add    BYTE PTR [rax],al
  43108e:	add    BYTE PTR [rax],al
  431090:	imul   ebp,DWORD PTR [rsi+0x70],0x695f7475
  431097:	outs   dx,BYTE PTR ds:[rsi]
  431098:	je     0x4310ff
  43109a:	jb     0x43110e
  43109c:	jne    0x43110e
  43109e:	je     0x4310cc
  4310a0:	and    BYTE PTR [rbx+0x6f],ah
  4310a3:	jne    0x431113
  4310a5:	je     0x4310c7
  4310a7:	cmp    eax,0x20642520
  4310ac:	movsxd esp,DWORD PTR [rax]
  4310ae:	cmp    eax,0x20642520
  4310b3:	add    BYTE PTR [rax],ch
  4310b5:	(bad)  
  4310b6:	and    eax,0xa292763
  4310bb:	add    BYTE PTR [rax],ch
  4310bd:	(bad)  
  4310be:	pop    rsp
  4310bf:	js     0x4310e6
  4310c1:	xor    BYTE PTR [rdx],dh
  4310c3:	js     0x4310ec
  4310c5:	sub    DWORD PTR [rdx],ecx
  4310c7:	add    BYTE PTR [rbx+0x74],dh
  4310ca:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x20646142
  4310d2:	jo     0x431143
  4310d4:	jb     0x43114a
  4310d6:	and    BYTE PTR [rcx+0x72],ah
  4310d9:	addr32 jne 0x431149
  4310dc:	outs   dx,BYTE PTR gs:[rsi]
  4310de:	je     0x43111a
  4310e0:	and    BYTE PTR [rip+0x61430073],ah        # 0x61861159
  4310e6:	outs   dx,BYTE PTR ds:[rsi]
  4310e7:	(bad)  
  4310e8:	je     0x43110a
  4310ea:	outs   dx,DWORD PTR ds:[rsi]
  4310eb:	jo     0x431152
  4310ed:	outs   dx,BYTE PTR ds:[rsi]
  4310ee:	and    BYTE PTR [rbx+0x6f],dh
  4310f1:	movsxd ebp,DWORD PTR [rbx+0x65]
  4310f4:	je     0x4310f6
  4310f6:	rex.XB (bad) 
  4310f8:	outs   dx,BYTE PTR ds:[rsi]
  4310f9:	(bad)  
  4310fa:	je     0x43111c
  4310fc:	(bad)  
  4310fd:	imul   ebp,DWORD PTR [rsi+0x64],0x64646120
  431104:	jb     0x43116b
  431106:	jae    0x43117b
	...
  431110:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  431112:	ins    BYTE PTR es:[rdi],dx
  431113:	jns    0x431135
  431115:	cmp    al,0x68
  431117:	outs   dx,DWORD PTR ds:[rsi]
  431118:	jae    0x43118e
  43111a:	cmp    bh,BYTE PTR ds:[rax+rsi*2]
  43111e:	outs   dx,DWORD PTR ds:[rsi]
  43111f:	jb     0x431195
  431121:	and    BYTE PTR ds:[rcx+0x73],ch
  431125:	and    BYTE PTR [rbx+0x75],dh
  431128:	jo     0x43119a
  43112a:	outs   dx,DWORD PTR ds:[rsi]
  43112b:	jb     0x4311a1
  43112d:	gs and BYTE PTR fs:[rdi+0x6e],ch
  431132:	and    BYTE PTR [rax+rbp*2+0x69],dh
  431136:	jae    0x431158
  431138:	jo     0x4311a6
  43113a:	(bad)  
  43113b:	je     0x4311a3
  43113d:	outs   dx,DWORD PTR ds:[rsi]
  43113e:	jb     0x4311ad
  431140:	add    BYTE PTR cs:[rdx+0x65],dl
  431144:	ins    DWORD PTR es:[rdi],dx
  431145:	outs   dx,DWORD PTR ds:[rsi]
  431146:	je     0x4311ad
  431148:	and    BYTE PTR [rbp+riz*2+0x62],ah
  43114c:	jne    0x4311b5
  43114e:	imul   ebp,DWORD PTR [esi+0x67],0x69737520
  431156:	outs   dx,BYTE PTR ds:[rsi]
  431157:	and    BYTE PTR [ebx+0x74],dh
  43115b:	imul   ebp,DWORD PTR fs:[rdi+0xa],0x6e614300
  431163:	(bad)  
  431164:	je     0x431186
  431166:	fs gs je 0x4311cf
  43116a:	jb     0x4311d9
  43116c:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7020
  431173:	je     0x431175
  431175:	imul   r14,QWORD PTR [rbx+0x74],0x6e696e65
  43117d:	and    BYTE PTR [edi+0x6e],ch
  431181:	and    BYTE PTR [rax+0x6f],dh
  431184:	jb     0x4311fa
  431186:	and    BYTE PTR [rip+0x70000a64],ah        # 0x70431bf0
  43118c:	sub    eax,0x2e7825
  431191:	jo     0x4311b8
  431193:	js     0x4311c3
  431195:	add    BYTE PTR [rip+0x25007825],ch        # 0x254389c0
  43119b:	js     0x43119d
  43119d:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4311a4:	and    BYTE PTR [rdx+0x65],dh
  4311a7:	ins    DWORD PTR es:[rdi],dx
  4311a8:	outs   dx,DWORD PTR ds:[rsi]
  4311a9:	je     0x431210
  4311ab:	and    BYTE PTR [rax+0x74],dh
  4311ae:	imul   esp,DWORD PTR [rdx+rdi*1+0x20],0xa7325
  4311b6:	add    BYTE PTR [rax],al
  4311b8:	pop    rbx
  4311b9:	addr32 gs je 0x43122d
  4311bd:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x64
  4311c2:	imul   esi,DWORD PTR [rbx+0x63],0x69647261
  4311c9:	outs   dx,BYTE PTR ds:[rsi]
  4311ca:	and    BYTE PTR [ebx+0x68],ah
  4311ce:	(bad)  
  4311cf:	jb     0x4311f1
  4311d1:	(bad)  
  4311d2:	and    eax,0xa5d2763
  4311d7:	add    BYTE PTR [rdx+0x61],al
  4311da:	and    BYTE PTR fs:[rbx+0x68],ah
  4311de:	movsxd ebp,DWORD PTR gs:[rbx+0x73]
  4311e2:	jne    0x431251
  4311e4:	sub    al,0x20
  4311e6:	jae    0x43124d
  4311e8:	outs   dx,BYTE PTR ds:[rsi]
  4311e9:	je     0x43125e
  4311eb:	jne    0x43125a
  4311ed:	cmp    eax,0x78257830
  4311f2:	sub    al,0x20
  4311f4:	movsxd esi,DWORD PTR [rbx+0x75]
  4311f7:	ins    DWORD PTR es:[rdi],dx
  4311f8:	cmp    eax,0x78257830
  4311fd:	sub    al,0x20
  4311ff:	(bad)  
  431200:	jne    0x431268
  431202:	cmp    eax,0x5b207325
  431207:	outs   dx,BYTE PTR ds:[rsi]
  431208:	outs   dx,DWORD PTR ds:[rsi]
  431209:	sub    eax,0x2d6b6361
  43120e:	ins    DWORD PTR es:[rdi],dx
  43120f:	outs   dx,DWORD PTR ds:[rsi]
  431210:	fs gs sub al,0x20
  431214:	rex.X (bad) 
  431216:	and    BYTE PTR fs:[rbp+0x65],ch
  43121a:	imul   esi,DWORD PTR fs:[rbp+0x6d],0xa5d3f
  431222:	add    BYTE PTR [rax],al
  431224:	add    BYTE PTR [rax],al
  431226:	add    BYTE PTR [rax],al
  431228:	rex.X (bad) 
  43122a:	and    BYTE PTR fs:[rbx+0x68],ah
  43122e:	movsxd ebp,DWORD PTR gs:[rbx+0x73]
  431232:	jne    0x4312a1
  431234:	sub    al,0x20
  431236:	jae    0x43129d
  431238:	outs   dx,BYTE PTR ds:[rsi]
  431239:	je     0x4312ae
  43123b:	jne    0x4312aa
  43123d:	cmp    eax,0x78257830
  431242:	sub    al,0x20
  431244:	movsxd esi,DWORD PTR [rbx+0x75]
  431247:	ins    DWORD PTR es:[rdi],dx
  431248:	cmp    eax,0x78257830
  43124d:	sub    al,0x20
  43124f:	(bad)  
  431250:	jne    0x4312b8
  431252:	cmp    eax,0xa7325
  431257:	sub    eax,0x0
  43125c:	add    BYTE PTR [rax],al
  43125e:	add    BYTE PTR [rax],al
  431260:	addr32 gs je 0x4312d4
  431264:	imul   esi,DWORD PTR [rax+riz*1+0x28],0x22
  431269:	and    eax,0x3b292273
  43126e:	and    BYTE PTR [rax],ah
  431270:	pop    rbx
  431271:	jae    0x4312d8
  431273:	outs   dx,BYTE PTR ds:[rsi]
  431274:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6b636120
  43127c:	pop    rbp
  43127d:	and    BYTE PTR [rdx],cl
  43127f:	add    BYTE PTR [rbx],ch
  431281:	add    BYTE PTR [rbx+0x73],bl
  431284:	outs   dx,BYTE PTR gs:[rsi]
  431286:	je     0x4312a8
  431288:	(bad)  
  431289:	movsxd ebp,DWORD PTR [rbx+0x5d]
  43128c:	or     al,BYTE PTR [rax]
  43128e:	add    BYTE PTR [rax],al
  431290:	addr32 gs je 0x431304
  431294:	imul   esi,DWORD PTR [rax+riz*1+0x28],0x22
  431299:	and    eax,0x3b292273
  43129e:	and    BYTE PTR [rax],ah
  4312a0:	pop    rbx
  4312a1:	outs   dx,BYTE PTR ds:[rsi]
  4312a2:	outs   dx,DWORD PTR ds:[rsi]
  4312a3:	and    BYTE PTR [rcx+0x63],ah
  4312a6:	imul   esp,DWORD PTR [rax],0x73
  4312a9:	outs   dx,BYTE PTR gs:[rsi]
  4312ab:	je     0x43130a
  4312ad:	and    BYTE PTR [rdx],cl
  4312af:	add    BYTE PTR [rsi+0x66],dh
  4312b2:	outs   dx,DWORD PTR ds:[rsi]
  4312b3:	jb     0x431320
  4312b5:	add    BYTE PTR [rsi+0x6f],ah
  4312b8:	jb     0x431325
  4312ba:	add    BYTE PTR [rbx+0x79],dh
  4312bd:	jae    0x431322
  4312bf:	(bad)  
  4312c0:	ins    BYTE PTR es:[rdi],dx
  4312c1:	ins    BYTE PTR es:[rdi],dx
  4312c2:	pop    rdi
  4312c3:	outs   dx,BYTE PTR gs:[rsi]
  4312c5:	je     0x431339
  4312c7:	jns    0x4312c9
  4312c9:	jae    0x431344
  4312cb:	jae    0x431330
  4312cd:	(bad)  
  4312ce:	ins    BYTE PTR es:[rdi],dx
  4312cf:	ins    BYTE PTR es:[rdi],dx
  4312d0:	pop    rdi
  4312d1:	jb     0x431338
  4312d3:	je     0x43134a
  4312d5:	jb     0x431345
  4312d7:	add    BYTE PTR [rdi+0x72],dl
  4312da:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x65722067
  4312e2:	jae    0x431359
  4312e4:	ins    DWORD PTR es:[rdi],dx
  4312e5:	and    BYTE PTR gs:[rdx+0x65],dh
  4312e9:	jo     0x431357
  4312eb:	jns    0x43130d
  4312ed:	outs   dx,WORD PTR ds:[rsi]
  4312ef:	jb     0x431311
  4312f1:	and    eax,0x64253a73
  4312f6:	or     al,BYTE PTR [rax]
  4312f8:	push   rsp
  4312f9:	and    eax,0x25783230
  4312fe:	jae    0x43133a
  431300:	add    BYTE PTR [rbp+riz*1+0x30],dl
  431304:	xor    bh,BYTE PTR [rax+0x76]
  431307:	outs   dx,WORD PTR ds:[rsi]
  431309:	jb     0x431376
  43130b:	outs   dx,DWORD PTR fs:[rsi]
  43130d:	outs   dx,BYTE PTR ds:[rsi]
  43130e:	cmp    bh,BYTE PTR gs:[rbx]
  431311:	add    BYTE PTR [rbp+0x78],ah
  431314:	movsxd eax,DWORD PTR gs:[rax]
  431317:	and    eax,0x54003b73
  43131c:	and    eax,0x63783230
  431321:	jb     0x431388
  431323:	(bad)  
  431324:	je     0x43138b
  431326:	cmp    bh,BYTE PTR [rbx]
  431328:	add    BYTE PTR [rbp+riz*1+0x30],dl
  43132c:	xor    bh,BYTE PTR [rax+0x25]
  43132f:	jae    0x43136b
  431331:	and    eax,0x54003b78
  431336:	and    eax,0x783230
  43133b:	je     0x4313a5
  43133d:	jb     0x4313a4
  43133f:	(bad)  
  431340:	cmp    al,BYTE PTR fs:[rax]
  431343:	movsxd ebp,DWORD PTR [rdi+0x72]
  431346:	cmp    al,BYTE PTR gs:[rax]
  431349:	push   rdi
  43134a:	and    eax,0x72703b78
  43134f:	outs   dx,DWORD PTR ds:[rsi]
  431350:	movsxd esp,DWORD PTR [rbp+0x73]
  431353:	jae    0x43138f
  431355:	and    eax,0x25570078
  43135a:	xor    BYTE PTR [rdx],dh
  43135c:	js     0x43135e
  43135e:	pop    rax
  43135f:	and    eax,0x72703b78
  431364:	outs   dx,DWORD PTR ds:[rsi]
  431365:	movsxd esp,DWORD PTR [rbp+0x73]
  431368:	jae    0x4313a4
  43136a:	and    eax,0x25580078
  43136f:	xor    BYTE PTR [rdx],dh
  431371:	js     0x431373
  431373:	ja     0x43139a
  431375:	js     0x4313b2
  431377:	add    BYTE PTR [rsi+0x0],cl
  43137a:	jne    0x4313ea
  43137c:	push   0x6c646e61
  431381:	gs and BYTE PTR fs:[rdi+0x61],dh
  431386:	imul   esi,DWORD PTR [rbx+rbp*2+0x69],0x7300646e
  43138e:	ja     0x4313f2
  431390:	jb     0x4313f7
  431392:	(bad)  
  431393:	imul   edi,DWORD PTR [rdx],0x3b
  431396:	add    BYTE PTR [rax+0x77],ch
  431399:	(bad)
  43139e:	cmp    bh,BYTE PTR [rbx]
  4313a0:	add    BYTE PTR [rax],al
  4313a2:	add    BYTE PTR [rax],al
  4313a4:	cmovns edi,ebp
  4313a7:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313ab:	dec    DWORD PTR [rbx+rcx*2-0x3]
  4313af:	push   QWORD PTR [rax+0x5cfffd4b]
  4313b5:	rex.WB std 
  4313b7:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313bb:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313bf:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313c3:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313c7:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313cb:	push   QWORD PTR [rax-0x4f0002b5]
  4313d1:	rex.WXB std 
  4313d3:	push   QWORD PTR [rax-0x630002b5]
  4313d9:	rex.WXB std 
  4313db:	call   FWORD PTR [rcx+rcx*2-0x3]
  4313df:	(bad)  
  4313e0:	mov    edi,0x71fffd48
  4313e5:	push   rbx
  4313e6:	jns    0x431455
  4313e8:	(bad)  
  4313e9:	outs   dx,DWORD PTR ds:[rsi]
  4313ea:	ins    BYTE PTR es:[rdi],dx
  4313eb:	cmp    al,BYTE PTR [rax]
  4313ed:	add    BYTE PTR [rax],al
  4313ef:	add    BYTE PTR [rbp+0x61],cl
  4313f2:	ins    BYTE PTR es:[rdi],dx
  4313f3:	outs   dx,WORD PTR ds:[rsi]
  4313f5:	jb     0x431464
  4313f7:	gs and BYTE PTR fs:[rdx+0x65],dh
  4313fc:	jae    0x43146e
  4313fe:	outs   dx,DWORD PTR ds:[rsi]
  4313ff:	outs   dx,BYTE PTR ds:[rsi]
  431400:	jae    0x431467
  431402:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431406:	jno    0x43145b
  431408:	jns    0x431477
  43140a:	(bad)  
  43140b:	outs   dx,DWORD PTR ds:[rsi]
  43140c:	ins    BYTE PTR es:[rdi],dx
  43140d:	sub    al,0x20
  43140f:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  431416:	cmp    ah,BYTE PTR [eax]
  431419:	and    eax,0x71000a73
  43141e:	push   rdx
  43141f:	gs ins BYTE PTR es:[rdi],dx
  431421:	outs   dx,DWORD PTR ds:[rsi]
  431422:	movsxd ecx,DWORD PTR [rcx+0x6e]
  431425:	jae    0x431495
  431427:	cmp    ah,BYTE PTR [rip+0x73253b73]        # 0x73684fa0
  43142d:	add    BYTE PTR [rax],al
  43142f:	add    BYTE PTR [rcx+0x6e],al
  431432:	and    BYTE PTR [rbp+0x72],ah
  431435:	jb     0x4314a6
  431437:	jb     0x431459
  431439:	outs   dx,DWORD PTR ds:[rsi]
  43143a:	movsxd esp,DWORD PTR [rbx+0x75]
  43143d:	jb     0x4314b1
  43143f:	gs and BYTE PTR fs:[rdi+0x68],dh
  431444:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6f6c6572
  43144c:	movsxd esp,DWORD PTR [rcx+0x74]
  43144f:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6120
  431456:	imul   ebp,DWORD PTR [rsi+0x73],0x63757274
  43145d:	je     0x4314c8
  43145f:	outs   dx,DWORD PTR ds:[rsi]
  431460:	outs   dx,BYTE PTR ds:[rsi]
  431461:	cmp    ah,BYTE PTR [rax]
  431463:	and    eax,0x71000a73
  431468:	push   rdx
  431469:	gs ins BYTE PTR es:[rdi],dx
  43146b:	outs   dx,DWORD PTR ds:[rsi]
  43146c:	movsxd ecx,DWORD PTR [rcx+0x6e]
  43146f:	jae    0x4314df
  431471:	cmp    al,BYTE PTR [rax]
  431473:	add    BYTE PTR [rax],al
  431475:	add    BYTE PTR [rax],al
  431477:	add    BYTE PTR [rbp+0x61],cl
  43147a:	ins    BYTE PTR es:[rdi],dx
  43147b:	outs   dx,WORD PTR ds:[rsi]
  43147d:	jb     0x4314ec
  43147f:	gs and BYTE PTR fs:[rdx+0x65],dh
  431484:	jae    0x4314f6
  431486:	outs   dx,DWORD PTR ds:[rsi]
  431487:	outs   dx,BYTE PTR ds:[rsi]
  431488:	jae    0x4314ef
  43148a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43148e:	jno    0x4314e2
  431490:	gs ins BYTE PTR es:[rdi],dx
  431492:	outs   dx,DWORD PTR ds:[rsi]
  431493:	movsxd ecx,DWORD PTR [rcx+0x6e]
  431496:	jae    0x431506
  431498:	sub    al,0x20
  43149a:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  4314a1:	cmp    ah,BYTE PTR [eax]
  4314a4:	and    eax,0xa73
	...
  4314bd:	add    BYTE PTR [rax],al
  4314bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4314c3:	and    BYTE PTR [rsi+0x6f],ah
  4314c6:	ins    BYTE PTR es:[rdi],dx
  4314c7:	ins    BYTE PTR es:[rdi],dx
  4314c8:	outs   dx,DWORD PTR ds:[rsi]
  4314c9:	ja     0x431534
  4314cb:	outs   dx,BYTE PTR ds:[rsi]
  4314cc:	and    BYTE PTR [ebp+0x6f],ch
  4314d0:	outs   dx,BYTE PTR ds:[rsi]
  4314d1:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f6320
  4314d9:	ins    DWORD PTR es:[rdi],dx
  4314da:	(bad)  
  4314db:	outs   dx,BYTE PTR ds:[rsi]
  4314dc:	fs jae 0x4314ff
  4314df:	(bad)  
  4314e0:	jb     0x431547
  4314e2:	and    BYTE PTR [rbx+0x75],dh
  4314e5:	jo     0x431557
  4314e7:	outs   dx,DWORD PTR ds:[rsi]
  4314e8:	jb     0x43155e
  4314ea:	gs cmp cl,BYTE PTR fs:[rdx]
  4314ee:	add    BYTE PTR [rax],ah
  4314f0:	and    BYTE PTR [rbx+0x65],dh
  4314f3:	je     0x431515
  4314f5:	fs gs (bad) 
  4314f8:	jne    0x431561
  4314fa:	and    BYTE PTR [rax+rsi*1],bh
  4314fd:	jl     0x431530
  4314ff:	or     al,BYTE PTR ds:[rax]
  431502:	add    BYTE PTR [rax],al
  431504:	add    BYTE PTR [rax],al
  431506:	add    BYTE PTR [rax],al
  431508:	and    BYTE PTR [rax],ah
  43150a:	and    BYTE PTR [rax],ah
  43150c:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43150e:	(bad)  
  43150f:	(bad)  
  431510:	ins    BYTE PTR es:[rdi],dx
  431511:	and    BYTE PTR gs:[rdi+0x65],ah
  431515:	outs   dx,BYTE PTR ds:[rsi]
  431516:	gs jb  0x43157a
  431519:	ins    BYTE PTR es:[rdi],dx
  43151a:	and    BYTE PTR [rbp+riz*2+0x62],ah
  43151e:	jne    0x431587
  431520:	imul   ebp,DWORD PTR [esi+0x67],0x73656d20
  431528:	jae    0x43158b
  43152a:	addr32 gs jae 0x431538
  43152e:	add    BYTE PTR [rax],ah
  431530:	and    BYTE PTR [rbx+0x65],dh
  431533:	je     0x431555
  431535:	fs gs (bad) 
  431538:	jne    0x4315a1
  43153a:	sub    eax,0x702d7768
  43153f:	outs   dx,DWORD PTR ds:[rsi]
  431540:	imul   ebp,DWORD PTR [rsi+0x74],0x303c2073
  431547:	jl     0x43157a
  431549:	or     al,BYTE PTR ds:[rax]
  43154c:	add    BYTE PTR [rax],al
  43154e:	add    BYTE PTR [rax],al
  431550:	and    BYTE PTR [rax],ah
  431552:	and    BYTE PTR [rax],ah
  431554:	rex.RB outs dx,BYTE PTR ds:[rsi]
  431556:	(bad)  
  431557:	(bad)  
  431558:	ins    BYTE PTR es:[rdi],dx
  431559:	and    BYTE PTR gs:[rax+0x2f],ch
  43155d:	ja     0x43157f
  43155f:	(bad)
  431564:	jo     0x4315d5
  431566:	imul   ebp,DWORD PTR [rsi+0x74],0x7461772f
  43156d:	movsxd ebp,DWORD PTR [rax+0x70]
  431570:	outs   dx,DWORD PTR ds:[rsi]
  431571:	imul   ebp,DWORD PTR [rsi+0x74],0x62656420
  431578:	jne    0x4315e1
  43157a:	imul   ebp,DWORD PTR [esi+0x67],0x73656d20
  431582:	jae    0x4315e5
  431584:	addr32 gs jae 0x431592
  431588:	add    BYTE PTR [rax],ah
  43158a:	and    BYTE PTR [rbx+0x65],dh
  43158d:	je     0x4315af
  43158f:	jb     0x4315f6
  431591:	ins    DWORD PTR es:[rdi],dx
  431592:	outs   dx,DWORD PTR ds:[rsi]
  431593:	je     0x4315fa
  431595:	sub    eax,0x75626564
  43159a:	and    BYTE PTR [eax+esi*1],bh
  43159e:	jl     0x4315d1
  4315a0:	or     al,BYTE PTR ds:[rax]
  4315a3:	add    BYTE PTR [rax],al
  4315a5:	add    BYTE PTR [rax],al
  4315a7:	add    BYTE PTR [rax],ah
  4315a9:	and    BYTE PTR [rax],ah
  4315ab:	and    BYTE PTR [rbp+0x6e],al
  4315ae:	(bad)  
  4315af:	(bad)  
  4315b0:	ins    BYTE PTR es:[rdi],dx
  4315b1:	and    BYTE PTR gs:[rdx+0x65],dh
  4315b5:	ins    DWORD PTR es:[rdi],dx
  4315b6:	outs   dx,DWORD PTR ds:[rsi]
  4315b7:	je     0x43161e
  4315b9:	and    BYTE PTR [rax+0x72],dh
  4315bc:	outs   dx,DWORD PTR ds:[rsi]
  4315bd:	je     0x43162e
  4315bf:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4315c2:	and    BYTE PTR [rbp+riz*2+0x62],ah
  4315c6:	jne    0x43162f
  4315c8:	imul   ebp,DWORD PTR [esi+0x67],0x73656d20
  4315d0:	jae    0x431633
  4315d2:	addr32 gs jae 0x4315e0
  4315d6:	add    BYTE PTR [rax],al
  4315d8:	and    BYTE PTR [rax],ah
  4315da:	jae    0x431641
  4315dc:	je     0x4315fe
  4315de:	fs gs (bad) 
  4315e1:	jne    0x43164a
  4315e3:	sub    eax,0x6d726f66
  4315e8:	(bad)  
  4315e9:	je     0x43160b
  4315eb:	outs   dx,DWORD PTR ds:[rsi]
  4315ec:	jo     0x431662
  4315ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2c5b31
  4315f5:	jo     0x43166b
  4315f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e2e2c32
  4315fe:	cs pop rbp
  431600:	or     al,BYTE PTR [rax]
  431602:	add    BYTE PTR [rax],al
  431604:	add    BYTE PTR [rax],al
  431606:	add    BYTE PTR [rax],al
  431608:	and    BYTE PTR [rax],ah
  43160a:	and    BYTE PTR [rax],ah
  43160c:	rex.B
  43160d:	fs and BYTE PTR fs:[rcx+0x64],ah
  431612:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  43161b:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  431622:	je     0x43168d
  431624:	outs   dx,DWORD PTR ds:[rsi]
  431625:	outs   dx,BYTE PTR ds:[rsi]
  431626:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43162a:	fs gs (bad) 
  43162d:	jne    0x431696
  43162f:	imul   ebp,DWORD PTR [esi+0x67],0x73656d20
  431637:	jae    0x43169a
  431639:	addr32 gs jae 0x431647
  43163d:	add    BYTE PTR [rax],ah
  43163f:	and    BYTE PTR [rax],ah
  431641:	and    BYTE PTR [rdi+0x70],cl
  431644:	je     0x4316af
  431646:	outs   dx,DWORD PTR ds:[rsi]
  431647:	outs   dx,BYTE PTR ds:[rsi]
  431648:	jae    0x431684
  43164a:	and    BYTE PTR [rcx+0x6c],ah
  43164d:	ins    BYTE PTR es:[rdi],dx
  43164e:	sub    al,0x20
  431650:	outs   dx,BYTE PTR ds:[rsi]
  431651:	outs   dx,DWORD PTR ds:[rsi]
  431652:	outs   dx,BYTE PTR ds:[rsi]
  431653:	add    BYTE PTR gs:[rax+riz*1],ch
  431657:	je     0x4316c2
  431659:	ins    DWORD PTR es:[rdi],dx
  43165a:	gs jae 0x4316d1
  43165d:	(bad)  
  43165e:	ins    DWORD PTR es:[rdi],dx
  43165f:	jo     0x431661
  431661:	or     al,BYTE PTR [rax]
  431663:	and    BYTE PTR [rax],ah
  431665:	gs js  0x4316d1
  431668:	je     0x431674
  43166a:	add    BYTE PTR [rax],ah
  43166c:	and    BYTE PTR [rax],ah
  43166e:	and    BYTE PTR [rcx+0x75],dl
  431671:	imul   esi,DWORD PTR [rax+riz*1+0x47],0x65734244
  431679:	jb     0x4316f1
  43167b:	gs jb  0x431688
  43167e:	add    BYTE PTR [rax],al
  431680:	rex.B ins BYTE PTR es:[rdi],dx
  431682:	ins    BYTE PTR es:[rdi],dx
  431683:	and    BYTE PTR [rbp+0x78],ah
  431686:	je     0x4316fa
  431688:	(bad)  
  431689:	and    BYTE PTR [rbp+riz*2+0x62],ah
  43168d:	jne    0x4316f6
  43168f:	and    BYTE PTR [rsi+0x6f],ah
  431692:	jb     0x431701
  431694:	(bad)  
  431695:	je     0x4316b7
  431697:	outs   dx,DWORD PTR ds:[rsi]
  431698:	jo     0x43170e
  43169a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e652073
  4316a1:	(bad)  
  4316a2:	(bad)  
  4316a3:	ins    BYTE PTR es:[rdi],dx
  4316a4:	gs fs or al,BYTE PTR cs:[rax]
  4316a9:	outs   dx,BYTE PTR ds:[rsi]
  4316aa:	outs   dx,DWORD PTR ds:[rsi]
  4316ab:	outs   dx,BYTE PTR ds:[rsi]
  4316ac:	add    BYTE PTR gs:[rax],al
  4316af:	add    BYTE PTR [rcx+0x6c],al
  4316b2:	ins    BYTE PTR es:[rdi],dx
  4316b3:	and    BYTE PTR [rbp+0x78],ah
  4316b6:	je     0x43172a
  4316b8:	(bad)  
  4316b9:	and    BYTE PTR [rbp+riz*2+0x62],ah
  4316bd:	jne    0x431726
  4316bf:	and    BYTE PTR [rsi+0x6f],ah
  4316c2:	jb     0x431731
  4316c4:	(bad)  
  4316c5:	je     0x4316e7
  4316c7:	outs   dx,DWORD PTR ds:[rsi]
  4316c8:	jo     0x43173e
  4316ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x69642073
  4316d1:	jae    0x431734
  4316d3:	(bad)  
  4316d4:	ins    BYTE PTR es:[rdi],dx
  4316d5:	gs fs or al,BYTE PTR cs:[rax]
  4316da:	je     0x431745
  4316dc:	ins    DWORD PTR es:[rdi],dx
  4316dd:	gs jae 0x431754
  4316e0:	(bad)  
  4316e1:	ins    DWORD PTR es:[rdi],dx
  4316e2:	jo     0x4316e4
  4316e4:	add    BYTE PTR [rax],al
  4316e6:	add    BYTE PTR [rax],al
  4316e8:	push   rsp
  4316e9:	imul   ebp,DWORD PTR [rbp+0x65],0x6d617473
  4316f0:	jo     0x431765
  4316f2:	and    BYTE PTR [rdi+0x69],dh
  4316f5:	ins    BYTE PTR es:[rdi],dx
  4316f6:	ins    BYTE PTR es:[rdi],dx
  4316f7:	and    BYTE PTR [rdx+0x65],ah
  4316fa:	and    BYTE PTR [rcx+0x64],ah
  4316fd:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  431704:	fs gs (bad) 
  431707:	jne    0x431770
  431709:	and    BYTE PTR [rdi+0x75],ch
  43170c:	je     0x43177e
  43170e:	jne    0x431784
  431710:	or     al,BYTE PTR cs:[rax]
  431713:	add    BYTE PTR [rax],al
  431715:	add    BYTE PTR [rax],al
  431717:	add    BYTE PTR [rbp+0x6e],dl
  43171a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43171e:	outs   dx,BYTE PTR ds:[rsi]
  43171f:	and    BYTE PTR [rbp+riz*2+0x62],ah
  431723:	jne    0x43178c
  431725:	sub    eax,0x6d726f66
  43172a:	(bad)  
  43172b:	je     0x43174d
  43172d:	(bad)  
  43172e:	jb     0x431797
  431730:	jne    0x43179f
  431732:	outs   dx,BYTE PTR gs:[rsi]
  431734:	je     0x431770
  431736:	and    BYTE PTR [rdx],ah
  431738:	and    eax,0xa2273
  43173d:	(bad)  
  43173e:	ins    BYTE PTR es:[rdi],dx
  43173f:	ins    BYTE PTR es:[rdi],dx
  431740:	add    BYTE PTR [rsp+rsi*2],bh
  431743:	push   0x64616572
  431748:	jae    0x431788
  43174a:	or     al,BYTE PTR [rax]
  43174c:	cmp    al,0x2f
  43174e:	je     0x4317b8
  431750:	jb     0x4317b7
  431752:	(bad)  
  431753:	fs jae 0x431794
  431756:	or     al,BYTE PTR [rax]
  431758:	je     0x4317bb
  43175a:	jb     0x4317c3
  43175c:	gs je  0x43178d
  43175f:	js     0x4317ce
  431761:	ins    BYTE PTR es:[rdi],dx
  431762:	add    BYTE PTR [rsi+0x65],ch
  431765:	ja     0x431767
  431767:	fs gs ins BYTE PTR es:[rdi],dx
  43176a:	je     0x4317cd
  43176c:	add    BYTE PTR [rax],al
  43176e:	add    BYTE PTR [rax],al
  431770:	push   rdx
  431771:	gs jo  0x4317e3
  431774:	jb     0x4317ea
  431776:	imul   ebp,DWORD PTR [rsi+0x67],0x72687420
  43177d:	gs (bad) 
  43177f:	and    BYTE PTR fs:[rip+0x73612073],ah        # 0x73a437f9
  431786:	and    BYTE PTR [rcx+0x6c],ah
  431789:	jb     0x4317f0
  43178b:	(bad)  
  43178c:	fs jns 0x4317af
  43178f:	jae    0x431805
  431791:	outs   dx,DWORD PTR ds:[rsi]
  431792:	jo     0x431804
  431794:	gs and BYTE PTR fs:[rdi+0x69],dh
  431799:	je     0x431803
  43179b:	and    BYTE PTR [rip+0x25000a73],ah        # 0x25432214
  4317a1:	jae    0x4317dd
  4317a3:	and    BYTE PTR [rcx+0x73],al
  4317a6:	jae    0x43180d
  4317a8:	jb     0x43181e
  4317aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  4317b1:	(bad)  
  4317b2:	and    BYTE PTR [rsi+0x61],ah
  4317b5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6573002e
  4317bd:	jb     0x431835
  4317bf:	gs jb  0x4317f0
  4317c2:	movsxd eax,DWORD PTR [rax]
  4317c4:	add    BYTE PTR [rax],al
  4317c6:	add    BYTE PTR [rax],al
  4317c8:	je     0x431832
  4317ca:	jb     0x431831
  4317cc:	(bad)  
  4317cd:	fs sub eax,0x73616c3e
  4317d3:	je     0x431834
  4317d5:	jae    0x43184b
  4317d7:	(bad)  
  4317d8:	je     0x43184f
  4317da:	jae    0x43180a
  4317dc:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  4317e0:	and    BYTE PTR [rcx],ah
  4317e2:	cmp    eax,0x52415420
  4317e7:	rex.RXB
  4317e8:	rex.RB push r12
  4317ea:	pop    rdi
  4317eb:	push   rdi
  4317ec:	rex.B
  4317ed:	rex.WB push r12
  4317ef:	rex.WXB
  4317f0:	rex.WB
  4317f1:	rex.WRX
  4317f2:	rex.R pop rdi
  4317f4:	rex.WB
  4317f5:	rex.RXB
  4317f6:	rex.WRX
  4317f7:	rex.WRXB push r10
  4317f9:	add    BYTE PTR [r9+0x74],r8b
  4317fd:	je     0x431860
  4317ff:	movsxd ebp,DWORD PTR [rax+0x65]
  431802:	cmp    esp,DWORD PTR fs:[rax]
  431805:	jo     0x431870
  431807:	and    BYTE PTR fs:[rip+0xa642520],bh        # 0xaa73d2e
  43180e:	add    BYTE PTR [rsi+0x65],ch
  431811:	ja     0x431872
  431813:	(bad)  
  431814:	jb     0x43187d
  431816:	jbe    0x431873
  431818:	and    eax,0x3d205d64
  43181d:	and    BYTE PTR [rdx],ah
  43181f:	and    eax,0xa2273
  431824:	add    BYTE PTR [rax],al
  431826:	add    BYTE PTR [rax],al
  431828:	push   rax
  431829:	jb     0x43189a
  43182b:	movsxd esp,DWORD PTR [rbp+0x73]
  43182e:	jae    0x431850
  431830:	and    eax,0x72632073
  431835:	gs (bad) 
  431837:	je     0x43189e
  431839:	cmp    esp,DWORD PTR fs:[rax]
  43183c:	jo     0x4318a7
  43183e:	and    BYTE PTR fs:[rip+0x646c2520],bh        # 0x64af3d65
  431845:	or     al,BYTE PTR [rax]
  431847:	and    BYTE PTR [rip+0x64],ah        # 0x4318b1
  43184d:	add    BYTE PTR [rax],al
  43184f:	add    BYTE PTR [rbp+0x73],dl
  431852:	(bad)  
  431853:	cmp    cl,BYTE PTR gs:[ecx]
  431857:	(bad)
  43185e:	gs jb  0x431881
  431861:	pop    rbx
  431862:	rex.WRXB push r8
  431864:	push   rsp
  431865:	rex.WB
  431866:	rex.WRXB
  431867:	rex.WRX push rbx
  431869:	pop    rbp
  43186a:	and    BYTE PTR [rbx+0x4f],al
  43186d:	rex.WRB
  43186e:	rex.WRB and BYTE PTR [r8+0x52],r10b
  431872:	rex.WRXB
  431873:	rex.RXB and BYTE PTR [r11+0x41],r11b
  431877:	push   rdx
  431878:	rex.RXB push r11
  43187a:	and    BYTE PTR [rsi],ch
  43187c:	cs cs pop rbp
  43187f:	or     cl,BYTE PTR [rcx]
  431881:	(bad)
  431888:	gs jb  0x4318ab
  43188b:	pop    rbx
  43188c:	rex.WRXB push r8
  43188e:	push   rsp
  43188f:	rex.WB
  431890:	rex.WRXB
  431891:	rex.WRX push rbx
  431893:	pop    rbp
  431894:	and    BYTE PTR [rip+0x7474612d],ch        # 0x74b779c7
  43189a:	(bad)  
  43189b:	movsxd ebp,DWORD PTR [rax+0x20]
  43189e:	rex.XB
  43189f:	rex.WRXB
  4318a0:	rex.WRB
  4318a1:	rex.WRB and BYTE PTR [r8+0x49],r10b
  4318a5:	or     r9b,BYTE PTR [rcx]
  4318a8:	(bad)
  4318af:	gs jb  0x4318d2
  4318b2:	pop    rbx
  4318b3:	rex.WRXB push r8
  4318b5:	push   rsp
  4318b6:	rex.WB
  4318b7:	rex.WRXB
  4318b8:	rex.WRX push rbx
  4318ba:	pop    rbp
  4318bb:	and    BYTE PTR [rip+0x6c756d2d],ch        # 0x6cb885ee
  4318c1:	je     0x43192c
  4318c3:	and    BYTE PTR [rbx+0x4f],al
  4318c6:	rex.WRB
  4318c7:	rex.WRB or r9b,BYTE PTR [r10]
  4318ca:	rex.XB
  4318cb:	rex.WRXB
  4318cc:	rex.WRB
  4318cd:	rex.WRB and BYTE PTR [r13+0x61],r13b
  4318d1:	jns    0x4318f3
  4318d3:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65622072
  4318dc:	and    BYTE PTR [rcx+0x20],ah
  4318df:	je     0x431955
  4318e1:	jns    0x431903
  4318e3:	fs gs jbe 0x431950
  4318e7:	movsxd esp,DWORD PTR [rbp+0x20]
  4318ea:	sub    BYTE PTR [rsi+0x6f],ah
  4318ed:	jb     0x43190f
  4318ef:	jae    0x431956
  4318f1:	jb     0x43195c
  4318f3:	(bad)  
  4318f4:	ins    BYTE PTR es:[rdi],dx
  4318f5:	and    BYTE PTR [rbp+riz*2+0x62],ah
  4318f9:	jne    0x431962
  4318fb:	imul   ebp,DWORD PTR [esi+0x67],0x480a2c29
  431903:	rex.WRXB push r11
  431905:	push   rsp
  431906:	cmp    dl,BYTE PTR [rax+0x4f]
  431909:	push   rdx
  43190a:	push   rsp
  43190b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43190f:	ins    BYTE PTR es:[rdi],dx
  431910:	imul   esi,DWORD PTR [rbx+0x74],0x66206e65
  431917:	outs   dx,DWORD PTR ds:[rsi]
  431918:	jb     0x43193a
  43191a:	(bad)  
  43191b:	and    BYTE PTR [rbx+rax*2+0x50],dl
  43191f:	and    BYTE PTR [rbx+0x6f],ah
  431922:	outs   dx,BYTE PTR ds:[rsi]
  431923:	outs   dx,BYTE PTR ds:[rsi]
  431924:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  431929:	outs   dx,BYTE PTR ds:[rsi]
  43192a:	sub    al,0x20
  43192c:	outs   dx,DWORD PTR ds:[rsi]
  43192d:	jb     0x43194f
  43192f:	(bad)  
  431930:	sub    eax,0x726f2027
  431935:	and    BYTE PTR [rdi],ah
  431937:	jae    0x4319ad
  431939:	imul   ebp,DWORD PTR fs:[rdi+0x27],0x206f7420
  431941:	jne    0x4319b6
  431943:	and    BYTE PTR gs:[rdx],cl
  431946:	jae    0x4319bc
  431948:	imul   ebp,DWORD PTR fs:[rsi+0x2f],0x6f647473
  431950:	jne    0x4319c6
  431952:	and    BYTE PTR [rdi+0x66],ch
  431955:	and    BYTE PTR [rdi+0x64],ah
  431958:	(bad)
  43195d:	gs jb  0x43198e
  431960:	or     dl,BYTE PTR [rax+0x52]
  431963:	rex.WRXB
  431964:	rex.RXB and BYTE PTR [r9+0x73],r13b
  431968:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43196c:	and    BYTE PTR [rbp+0x78],ah
  43196f:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  431973:	(bad)  
  431974:	(bad)  
  431975:	ins    BYTE PTR es:[rdi],dx
  431976:	and    BYTE PTR gs:[rax+0x72],dh
  43197a:	outs   dx,DWORD PTR ds:[rsi]
  43197b:	addr32 jb 0x4319df
  43197e:	ins    DWORD PTR es:[rdi],dx
  43197f:	and    BYTE PTR cs:[rax],ah
  431982:	push   r10
  431984:	rex.RXB push r11
  431986:	and    BYTE PTR [rcx+0x72],ah
  431989:	and    BYTE PTR gs:[rcx+0x72],ah
  43198d:	addr32 jne 0x4319fd
  431990:	outs   dx,BYTE PTR gs:[rsi]
  431992:	je     0x431a07
  431994:	and    BYTE PTR [rax+0x61],dh
  431997:	jae    0x431a0c
  431999:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  43199f:	imul   ebp,DWORD PTR [rsi+0x66],0x6f697265
  4319a6:	jb     0x4319d6
  4319a8:	or     dl,BYTE PTR [rax+0x49]
  4319ab:	and    BYTE PTR [rcx+0x73],r13b
  4319af:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4319b3:	and    BYTE PTR [rax+0x72],dh
  4319b6:	outs   dx,DWORD PTR ds:[rsi]
  4319b7:	movsxd esp,DWORD PTR [rbp+0x73]
  4319ba:	jae    0x4319dc
  4319bc:	rex.WB
  4319bd:	and    BYTE PTR [rdi+rbp*2+0x20],r14b
  4319c2:	(bad)  
  4319c3:	je     0x431a39
  4319c5:	(bad)  
  4319c6:	movsxd ebp,DWORD PTR [rax+0x20]
  4319c9:	je     0x431a3a
  4319cb:	sub    al,0x20
  4319cd:	ja     0x431a37
  4319cf:	outs   dx,BYTE PTR gs:[rsi]
  4319d1:	and    BYTE PTR [rip+0x7474612d],ch        # 0x74b77b04
  4319d7:	(bad)  
  4319d8:	movsxd ebp,DWORD PTR [rax+0x20]
  4319db:	imul   esi,DWORD PTR [rbx+0x20],0x63657073
  4319e2:	imul   esp,DWORD PTR [rsi+0x69],0xa2e6465
  4319e9:	or     cl,BYTE PTR [rdi+0x70]
  4319ec:	gs jb  0x431a50
  4319ef:	je     0x431a5a
  4319f1:	outs   dx,BYTE PTR ds:[rsi]
  4319f2:	and    BYTE PTR [ebp+0x6f],ch
  4319f6:	fs gs jae 0x431a34
  4319fa:	or     cl,BYTE PTR [rdx]
  4319fc:	and    BYTE PTR [rax],ah
  4319fe:	sub    eax,0x7474612d
  431a03:	(bad)  
  431a04:	movsxd ebp,DWORD PTR [rax+0x20]
  431a07:	and    BYTE PTR [rax],ah
  431a09:	and    BYTE PTR [rax],ah
  431a0b:	and    BYTE PTR [rax],ah
  431a0d:	and    BYTE PTR [rax],ah
  431a0f:	and    BYTE PTR [rax],ah
  431a11:	and    BYTE PTR [rax],ah
  431a13:	and    BYTE PTR [rcx+0x74],al
  431a16:	je     0x431a79
  431a18:	movsxd ebp,DWORD PTR [rax+0x20]
  431a1b:	je     0x431a8c
  431a1d:	and    BYTE PTR [rdx+0x75],dh
  431a20:	outs   dx,BYTE PTR ds:[rsi]
  431a21:	outs   dx,BYTE PTR ds:[rsi]
  431a22:	imul   ebp,DWORD PTR [rsi+0x67],0x6f727020
  431a29:	movsxd esp,DWORD PTR [rbp+0x73]
  431a2c:	jae    0x431a4e
  431a2e:	push   rax
  431a2f:	rex.WB
  431a30:	rex.R
  431a31:	or     ah,BYTE PTR cs:[rax]
  431a34:	and    BYTE PTR [rip+0x6c756d2d],ch        # 0x6cb88767
  431a3a:	je     0x431aa5
  431a3c:	and    BYTE PTR [rax],ah
  431a3e:	and    BYTE PTR [rax],ah
  431a40:	and    BYTE PTR [rax],ah
  431a42:	and    BYTE PTR [rax],ah
  431a44:	and    BYTE PTR [rax],ah
  431a46:	and    BYTE PTR [rax],ah
  431a48:	and    BYTE PTR [rax],ah
  431a4a:	and    BYTE PTR [rbx+0x74],dl
  431a4d:	(bad)  
  431a4e:	jb     0x431ac4
  431a50:	and    BYTE PTR [rbx+0x65],dh
  431a53:	jb     0x431acb
  431a55:	gs jb  0x431a78
  431a58:	ja     0x431ac3
  431a5a:	je     0x431ac4
  431a5c:	outs   dx,DWORD PTR ds:[rsi]
  431a5d:	jne    0x431ad3
  431a5f:	and    BYTE PTR [rcx+0x20],ah
  431a62:	jae    0x431ad4
  431a64:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  431a68:	imul   esp,DWORD PTR [rbx+0x20],0x676f7270
  431a6f:	jb     0x431ad2
  431a71:	ins    DWORD PTR es:[rdi],dx
  431a72:	sub    al,0x20
  431a74:	(bad)  
  431a75:	outs   dx,BYTE PTR ds:[rsi]
  431a76:	or     ah,BYTE PTR fs:[rax]
  431a79:	and    BYTE PTR [rax],ah
  431a7b:	and    BYTE PTR [rax],ah
  431a7d:	and    BYTE PTR [rax],ah
  431a7f:	and    BYTE PTR [rax],ah
  431a81:	and    BYTE PTR [rax],ah
  431a83:	and    BYTE PTR [rax],ah
  431a85:	and    BYTE PTR [rax],ah
  431a87:	and    BYTE PTR [rax],ah
  431a89:	and    BYTE PTR [rax],ah
  431a8b:	and    BYTE PTR [rax],ah
  431a8d:	and    BYTE PTR [rax],ah
  431a8f:	and    BYTE PTR [rdi+0x6e],ch
  431a92:	ins    BYTE PTR es:[rdi],dx
  431a93:	jns    0x431ab5
  431a95:	jno    0x431b0c
  431a97:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206e6568
  431a9f:	gs js  0x431b12
  431aa2:	ins    BYTE PTR es:[rdi],dx
  431aa3:	imul   esp,DWORD PTR [rbx+0x69],0x20796c74
  431aaa:	movsxd ebp,DWORD PTR [rdi+0x6d]
  431aad:	ins    DWORD PTR es:[rdi],dx
  431aae:	(bad)  
  431aaf:	outs   dx,BYTE PTR ds:[rsi]
  431ab0:	fs gs fs or ah,BYTE PTR cs:[rax]
  431ab6:	and    BYTE PTR [rip+0x636e6f2d],ch        # 0x63b189e9
  431abc:	and    BYTE PTR gs:[rax],ah
  431abf:	and    BYTE PTR [rax],ah
  431ac1:	and    BYTE PTR [rax],ah
  431ac3:	and    BYTE PTR [rax],ah
  431ac5:	and    BYTE PTR [rax],ah
  431ac7:	and    BYTE PTR [rax],ah
  431ac9:	and    BYTE PTR [rax],ah
  431acb:	and    BYTE PTR [rax],ah
  431acd:	rex.RB js 0x431b39
  431ad0:	je     0x431af2
  431ad2:	(bad)  
  431ad3:	data16 je 0x431b3b
  431ad6:	jb     0x431af8
  431ad8:	je     0x431b42
  431ada:	and    BYTE PTR gs:[rsi+0x69],ah
  431ade:	jb     0x431b53
  431ae0:	je     0x431b02
  431ae2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431ae5:	outs   dx,BYTE PTR ds:[rsi]
  431ae6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  431aeb:	outs   dx,BYTE PTR ds:[rsi]
  431aec:	and    BYTE PTR [rax+0x61],ch
  431aef:	jae    0x431b11
  431af1:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  431af5:	gs fs or ah,BYTE PTR cs:[rax]
  431afa:	and    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca8832d
  431b00:	jo     0x431b22
  431b02:	and    BYTE PTR [rax],ah
  431b04:	and    BYTE PTR [rax],ah
  431b06:	and    BYTE PTR [rax],ah
  431b08:	and    BYTE PTR [rax],ah
  431b0a:	and    BYTE PTR [rax],ah
  431b0c:	and    BYTE PTR [rax],ah
  431b0e:	and    BYTE PTR [rax],ah
  431b10:	and    BYTE PTR [rax+0x72],dl
  431b13:	imul   ebp,DWORD PTR [rsi+0x74],0x69687420
  431b1a:	jae    0x431b3c
  431b1c:	ins    DWORD PTR es:[rdi],dx
  431b1d:	gs jae 0x431b93
  431b20:	(bad)  
  431b21:	and    BYTE PTR gs:[ecx+0x6e],ah
  431b26:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  431b2b:	outs   dx,BYTE PTR ds:[rsi]
  431b2c:	and    BYTE PTR [rbp+0x78],ah
  431b2f:	imul   esi,DWORD PTR [rsi+rbp*1+0xa],0x2d2d2020
  431b37:	jbe    0x431b9e
  431b39:	jb     0x431bae
  431b3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  431b42:	and    BYTE PTR [rax],ah
  431b44:	and    BYTE PTR [rax],ah
  431b46:	and    BYTE PTR [rax],ah
  431b48:	and    BYTE PTR [rax],ah
  431b4a:	and    BYTE PTR [rcx+rbp*2+0x73],al
  431b4e:	jo     0x431bbc
  431b50:	(bad)  
  431b51:	jns    0x431b73
  431b53:	jbe    0x431bba
  431b55:	jb     0x431bca
  431b57:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  431b5e:	outs   dx,DWORD PTR ds:[rsi]
  431b5f:	jb     0x431bce
  431b61:	(bad)  
  431b62:	je     0x431bcd
  431b64:	outs   dx,DWORD PTR ds:[rsi]
  431b65:	outs   dx,BYTE PTR ds:[rsi]
  431b66:	and    BYTE PTR [rcx+0x6e],ah
  431b69:	and    BYTE PTR fs:[rbp+0x78],ah
  431b6d:	imul   esi,DWORD PTR [rsi+rbp*1+0xa],0x68744f0a
  431b75:	gs jb  0x431b98
  431b78:	outs   dx,DWORD PTR ds:[rsi]
  431b79:	jo     0x431bef
  431b7b:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  431b82:	and    BYTE PTR [rax],ah
  431b84:	sub    eax,0x6172772d
  431b89:	jo     0x431bfb
  431b8b:	gs jb  0x431bae
  431b8e:	push   rdi
  431b8f:	push   rdx
  431b90:	push   r8
  431b92:	push   rax
  431b93:	rex.RB push r10
  431b95:	and    BYTE PTR [rip+0x5220202d],ch        # 0x52633bc8
  431b9b:	jne    0x431c0b
  431b9d:	and    BYTE PTR [rdi+0x52],dl
  431ba0:	push   r8
  431ba2:	push   rax
  431ba3:	rex.RB push r10
  431ba5:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431ba9:	jae    0x431c1f
  431bab:	(bad)  
  431bac:	jb     0x431c22
  431bae:	and    BYTE PTR [rsi+0x65],ch
  431bb1:	ja     0x431bd3
  431bb3:	jo     0x431c27
  431bb5:	outs   dx,DWORD PTR ds:[rsi]
  431bb6:	addr32 jb 0x431c1a
  431bb9:	ins    DWORD PTR es:[rdi],dx
  431bba:	jae    0x431bea
  431bbc:	or     ah,BYTE PTR [rax]
  431bbe:	and    BYTE PTR [rip+0x7369642d],ch        # 0x73ac7ff1
  431bc4:	(bad)  
  431bc5:	(bad)  
  431bc6:	ins    BYTE PTR es:[rdi],dx
  431bc7:	gs sub eax,0x646e6172
  431bcd:	outs   dx,DWORD PTR ds:[rsi]
  431bce:	ins    DWORD PTR es:[rdi],dx
  431bcf:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  431bd6:	or     ah,BYTE PTR [rax]
  431bd8:	and    BYTE PTR [rax],ah
  431bda:	and    BYTE PTR [rax],ah
  431bdc:	and    BYTE PTR [rax],ah
  431bde:	and    BYTE PTR [rax],ah
  431be0:	and    BYTE PTR [rax],ah
  431be2:	and    BYTE PTR [rax],ah
  431be4:	and    BYTE PTR [rax],ah
  431be6:	and    BYTE PTR [rax],ah
  431be8:	and    BYTE PTR [rax],ah
  431bea:	and    BYTE PTR [rax],ah
  431bec:	and    BYTE PTR [rax],ah
  431bee:	and    BYTE PTR [rdx+0x75],dl
  431bf1:	outs   dx,BYTE PTR ds:[rsi]
  431bf2:	and    BYTE PTR [rax+0x52],dl
  431bf5:	rex.WRXB
  431bf6:	rex.RXB and BYTE PTR [r15+0x69],r14b
  431bfa:	je     0x431c64
  431bfc:	and    BYTE PTR [rcx+0x64],ah
  431bff:	fs jb  0x431c67
  431c02:	jae    0x431c77
  431c04:	and    BYTE PTR [rbx+0x70],dh
  431c07:	(bad)  
  431c08:	movsxd esp,DWORD PTR [rbp+0x20]
  431c0b:	jb     0x431c6e
  431c0d:	outs   dx,BYTE PTR ds:[rsi]
  431c0e:	outs   dx,DWORD PTR fs:[rsi]
  431c10:	ins    DWORD PTR es:[rdi],dx
  431c11:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  431c18:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  431c1c:	(bad)  
  431c1d:	(bad)  
  431c1e:	ins    BYTE PTR es:[rdi],dx
  431c1f:	gs fs or ah,BYTE PTR cs:[rax]
  431c24:	and    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2db28a57
  431c2a:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  431c32:	jb     0x431c95
  431c34:	outs   dx,BYTE PTR ds:[rsi]
  431c35:	outs   dx,DWORD PTR fs:[rsi]
  431c37:	ins    DWORD PTR es:[rdi],dx
  431c38:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  431c3f:	or     ah,BYTE PTR [rax]
  431c41:	and    BYTE PTR [rax],ah
  431c43:	and    BYTE PTR [rax],ah
  431c45:	and    BYTE PTR [rax],ah
  431c47:	and    BYTE PTR [rax],ah
  431c49:	and    BYTE PTR [rax],ah
  431c4b:	and    BYTE PTR [rax],ah
  431c4d:	and    BYTE PTR [rax],ah
  431c4f:	and    BYTE PTR [rax],ah
  431c51:	and    BYTE PTR [rax],ah
  431c53:	and    BYTE PTR [rax],ah
  431c55:	and    BYTE PTR [rax],ah
  431c57:	and    BYTE PTR [rdi+rbp*2+0x6e],al
  431c5b:	(bad)  
  431c5c:	je     0x431c7e
  431c5e:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  431c66:	(bad)  
  431c67:	fs fs jb 0x431cd0
  431c6b:	jae    0x431ce0
  431c6d:	and    BYTE PTR [rbx+0x70],dh
  431c70:	(bad)  
  431c71:	movsxd esp,DWORD PTR [rbp+0x20]
  431c74:	jb     0x431cd7
  431c76:	outs   dx,BYTE PTR ds:[rsi]
  431c77:	outs   dx,DWORD PTR fs:[rsi]
  431c79:	ins    DWORD PTR es:[rdi],dx
  431c7a:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  431c81:	and    BYTE PTR [rdi+0x68],dh
  431c84:	outs   dx,BYTE PTR gs:[rsi]
  431c86:	or     ah,BYTE PTR [rax]
  431c88:	and    BYTE PTR [rax],ah
  431c8a:	and    BYTE PTR [rax],ah
  431c8c:	and    BYTE PTR [rax],ah
  431c8e:	and    BYTE PTR [rax],ah
  431c90:	and    BYTE PTR [rax],ah
  431c92:	and    BYTE PTR [rax],ah
  431c94:	and    BYTE PTR [rax],ah
  431c96:	and    BYTE PTR [rax],ah
  431c98:	and    BYTE PTR [rax],ah
  431c9a:	and    BYTE PTR [rax],ah
  431c9c:	and    BYTE PTR [rax],ah
  431c9e:	and    BYTE PTR [rbx+0x74],dh
  431ca1:	(bad)  
  431ca2:	jb     0x431d18
  431ca4:	imul   ebp,DWORD PTR [rsi+0x67],0x4f525020
  431cab:	rex.RXB
  431cac:	or     cl,BYTE PTR cs:[rdx]
  431caf:	rex.R
  431cb0:	gs (bad) 
  431cb2:	jne    0x431d1b
  431cb4:	and    BYTE PTR [rdi+0x70],ch
  431cb7:	je     0x431d22
  431cb9:	outs   dx,DWORD PTR ds:[rsi]
  431cba:	outs   dx,BYTE PTR ds:[rsi]
  431cbb:	jae    0x431cf7
  431cbd:	or     cl,BYTE PTR [rdx]
  431cbf:	and    BYTE PTR [rax],ah
  431cc1:	sub    eax,0x6265642d
  431cc6:	jne    0x431d2f
  431cc8:	and    BYTE PTR [rax],ah
  431cca:	and    BYTE PTR [rax],ah
  431ccc:	and    BYTE PTR [rax],ah
  431cce:	and    BYTE PTR [rax],ah
  431cd0:	and    BYTE PTR [rax],ah
  431cd2:	and    BYTE PTR [rax],ah
  431cd4:	and    BYTE PTR [rax],ah
  431cd6:	and    BYTE PTR [rbp+0x6e],al
  431cd9:	(bad)  
  431cda:	(bad)  
  431cdb:	ins    BYTE PTR es:[rdi],dx
  431cdc:	and    BYTE PTR gs:[rdi+0x65],ah
  431ce0:	outs   dx,BYTE PTR ds:[rsi]
  431ce1:	gs jb  0x431d45
  431ce4:	ins    BYTE PTR es:[rdi],dx
  431ce5:	and    BYTE PTR [rbp+riz*2+0x62],ah
  431ce9:	jne    0x431d52
  431ceb:	imul   ebp,DWORD PTR [esi+0x67],0x74756f20
  431cf3:	jo     0x431d6a
  431cf5:	je     0x431d25
  431cf7:	or     ah,BYTE PTR [rax]
  431cf9:	and    BYTE PTR [rip+0x6265642d],ch        # 0x62a8812c
  431cff:	jne    0x431d68
  431d01:	sub    eax,0x6d726f66
  431d06:	(bad)  
  431d07:	je     0x431d46
  431d09:	outs   dx,DWORD PTR ds:[rsi]
  431d0a:	jo     0x431d80
  431d0c:	xor    DWORD PTR [rbx+0x2c],ebx
  431d0f:	outs   dx,DWORD PTR ds:[rsi]
  431d10:	jo     0x431d86
  431d12:	xor    ch,BYTE PTR [rsi+rbp*1]
  431d15:	cs cs pop rbp
  431d18:	or     ah,BYTE PTR [rax]
  431d1a:	and    BYTE PTR [rax],ah
  431d1c:	and    BYTE PTR [rax],ah
  431d1e:	and    BYTE PTR [rax],ah
  431d20:	and    BYTE PTR [rax],ah
  431d22:	and    BYTE PTR [rax],ah
  431d24:	and    BYTE PTR [rax],ah
  431d26:	and    BYTE PTR [rax],ah
  431d28:	and    BYTE PTR [rax],ah
  431d2a:	and    BYTE PTR [rax],ah
  431d2c:	and    BYTE PTR [rax],ah
  431d2e:	and    BYTE PTR [rax],ah
  431d30:	and    BYTE PTR [rbx+0x70],dl
  431d33:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  431d37:	jns    0x431d59
  431d39:	gs js  0x431db0
  431d3c:	jb     0x431d9f
  431d3e:	and    BYTE PTR [rbx+0x6f],ah
  431d41:	outs   dx,BYTE PTR ds:[rsi]
  431d42:	je     0x431da9
  431d44:	outs   dx,BYTE PTR ds:[rsi]
  431d45:	je     0x431d67
  431d47:	imul   ebp,DWORD PTR [rsi+0x20],0x75626564
  431d4e:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74756f20
  431d57:	jo     0x431dce
  431d59:	je     0x431d89
  431d5b:	or     ah,BYTE PTR [rax]
  431d5d:	and    BYTE PTR [rax],ah
  431d5f:	and    BYTE PTR [rax],ah
  431d61:	and    BYTE PTR [rax],ah
  431d63:	and    BYTE PTR [rax],ah
  431d65:	and    BYTE PTR [rax],ah
  431d67:	and    BYTE PTR [rax],ah
  431d69:	and    BYTE PTR [rax],ah
  431d6b:	and    BYTE PTR [rax],ah
  431d6d:	and    BYTE PTR [rax],ah
  431d6f:	and    BYTE PTR [rax],ah
  431d71:	and    BYTE PTR [rax],ah
  431d73:	and    BYTE PTR [rax],ah
  431d75:	and    BYTE PTR [rdi+0x70],cl
  431d78:	je     0x431de3
  431d7a:	outs   dx,DWORD PTR ds:[rsi]
  431d7b:	outs   dx,BYTE PTR ds:[rsi]
  431d7c:	jae    0x431db8
  431d7e:	or     ah,BYTE PTR [rax]
  431d80:	and    BYTE PTR [rax],ah
  431d82:	and    BYTE PTR [rax],ah
  431d84:	and    BYTE PTR [rax],ah
  431d86:	and    BYTE PTR [rax],ah
  431d88:	and    BYTE PTR [rax],ah
  431d8a:	and    BYTE PTR [rax],ah
  431d8c:	and    BYTE PTR [rax],ah
  431d8e:	and    BYTE PTR [rax],ah
  431d90:	and    BYTE PTR [rax],ah
  431d92:	and    BYTE PTR [rax],ah
  431d94:	and    BYTE PTR [rax],ah
  431d96:	and    BYTE PTR [rax],ah
  431d98:	and    BYTE PTR [rax],ah
  431d9a:	and    BYTE PTR [rcx+0x6c],ah
  431d9d:	ins    BYTE PTR es:[rdi],dx
  431d9e:	or     ah,BYTE PTR [rax]
  431da0:	and    BYTE PTR [rax],ah
  431da2:	and    BYTE PTR [rax],ah
  431da4:	and    BYTE PTR [rax],ah
  431da6:	and    BYTE PTR [rax],ah
  431da8:	and    BYTE PTR [rax],ah
  431daa:	and    BYTE PTR [rax],ah
  431dac:	and    BYTE PTR [rax],ah
  431dae:	and    BYTE PTR [rax],ah
  431db0:	and    BYTE PTR [rax],ah
  431db2:	and    BYTE PTR [rax],ah
  431db4:	and    BYTE PTR [rax],ah
  431db6:	and    BYTE PTR [rax],ah
  431db8:	and    BYTE PTR [rax],ah
  431dba:	and    BYTE PTR [rsi+0x6f],ch
  431dbd:	outs   dx,BYTE PTR ds:[rsi]
  431dbe:	or     ah,BYTE PTR gs:[rax]
  431dc1:	and    BYTE PTR [rax],ah
  431dc3:	and    BYTE PTR [rax],ah
  431dc5:	and    BYTE PTR [rax],ah
  431dc7:	and    BYTE PTR [rax],ah
  431dc9:	and    BYTE PTR [rax],ah
  431dcb:	and    BYTE PTR [rax],ah
  431dcd:	and    BYTE PTR [rax],ah
  431dcf:	and    BYTE PTR [rax],ah
  431dd1:	and    BYTE PTR [rax],ah
  431dd3:	and    BYTE PTR [rax],ah
  431dd5:	and    BYTE PTR [rax],ah
  431dd7:	and    BYTE PTR [rax],ah
  431dd9:	and    BYTE PTR [rax],ah
  431ddb:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  431ddf:	gs jae 0x431e56
  431de2:	(bad)  
  431de3:	ins    DWORD PTR es:[rdi],dx
  431de4:	jo     0x431df0
  431de6:	and    BYTE PTR [rax],ah
  431de8:	sub    eax,0x6d65722d
  431ded:	outs   dx,DWORD PTR ds:[rsi]
  431dee:	je     0x431e55
  431df0:	sub    eax,0x75626564
  431df5:	and    BYTE PTR [eax],ah
  431df8:	and    BYTE PTR [rax],ah
  431dfa:	and    BYTE PTR [rax],ah
  431dfc:	and    BYTE PTR [rax],ah
  431dfe:	rex.RB outs dx,BYTE PTR ds:[rsi]
  431e00:	(bad)  
  431e01:	(bad)  
  431e02:	ins    BYTE PTR es:[rdi],dx
  431e03:	and    BYTE PTR gs:[rdx+0x65],dh
  431e07:	ins    DWORD PTR es:[rdi],dx
  431e08:	outs   dx,DWORD PTR ds:[rsi]
  431e09:	je     0x431e70
  431e0b:	and    BYTE PTR [rax+0x72],dh
  431e0e:	outs   dx,DWORD PTR ds:[rsi]
  431e0f:	je     0x431e80
  431e11:	movsxd ebp,DWORD PTR [rdi+0x6c]
  431e14:	and    BYTE PTR [rbp+riz*2+0x62],ah
  431e18:	jne    0x431e81
  431e1a:	imul   ebp,DWORD PTR [esi+0x67],0x74756f20
  431e22:	jo     0x431e99
  431e24:	je     0x431e54
  431e26:	or     ah,BYTE PTR [rax]
  431e28:	and    BYTE PTR [rip+0x7369642d],ch        # 0x73ac825b
  431e2e:	(bad)  
  431e2f:	(bad)  
  431e30:	ins    BYTE PTR es:[rdi],dx
  431e31:	gs sub eax,0x6b636170
  431e37:	gs je  0x431e77
  431e3a:	outs   dx,DWORD PTR ds:[rsi]
  431e3b:	jo     0x431eb1
  431e3d:	xor    DWORD PTR [rbx+0x2c],ebx
  431e40:	outs   dx,DWORD PTR ds:[rsi]
  431e41:	jo     0x431eb7
  431e43:	xor    ch,BYTE PTR [rsi+rbp*1]
  431e46:	cs cs pop rbp
  431e49:	or     ah,BYTE PTR [rax]
  431e4b:	and    BYTE PTR [rax],ah
  431e4d:	and    BYTE PTR [rax],ah
  431e4f:	and    BYTE PTR [rax],ah
  431e51:	and    BYTE PTR [rax],ah
  431e53:	and    BYTE PTR [rax],ah
  431e55:	and    BYTE PTR [rax],ah
  431e57:	and    BYTE PTR [rax],ah
  431e59:	and    BYTE PTR [rax],ah
  431e5b:	and    BYTE PTR [rax],ah
  431e5d:	and    BYTE PTR [rax],ah
  431e5f:	and    BYTE PTR [rax],ah
  431e61:	and    BYTE PTR [rcx+rbp*2+0x73],al
  431e65:	(bad)  
  431e66:	(bad)  
  431e67:	ins    BYTE PTR es:[rdi],dx
  431e68:	and    BYTE PTR gs:[rbx+0x75],dh
  431e6c:	jo     0x431ede
  431e6e:	outs   dx,DWORD PTR ds:[rsi]
  431e6f:	jb     0x431ee5
  431e71:	and    BYTE PTR [rsi+0x6f],ah
  431e74:	jb     0x431e96
  431e76:	push   rdx
  431e77:	push   rbx
  431e78:	push   rax
  431e79:	and    BYTE PTR [rax+0x61],dh
  431e7c:	movsxd ebp,DWORD PTR [rbx+0x65]
  431e7f:	je     0x431ef4
  431e81:	and    BYTE PTR [rdi+0x72],ch
  431e84:	and    BYTE PTR [rsi+0x65],ah
  431e87:	(bad)  
  431e88:	je     0x431eff
  431e8a:	jb     0x431ef1
  431e8c:	jae    0x431ebc
  431e8e:	or     ah,BYTE PTR [rax]
  431e90:	and    BYTE PTR [rax],ah
  431e92:	and    BYTE PTR [rax],ah
  431e94:	and    BYTE PTR [rax],ah
  431e96:	and    BYTE PTR [rax],ah
  431e98:	and    BYTE PTR [rax],ah
  431e9a:	and    BYTE PTR [rax],ah
  431e9c:	and    BYTE PTR [rax],ah
  431e9e:	and    BYTE PTR [rax],ah
  431ea0:	and    BYTE PTR [rax],ah
  431ea2:	and    BYTE PTR [rax],ah
  431ea4:	and    BYTE PTR [rax],ah
  431ea6:	and    BYTE PTR [rax],ah
  431ea8:	and    BYTE PTR [rdi+0x70],cl
  431eab:	je     0x431f16
  431ead:	outs   dx,DWORD PTR ds:[rsi]
  431eae:	outs   dx,BYTE PTR ds:[rsi]
  431eaf:	jae    0x431eeb
  431eb1:	or     ah,BYTE PTR [rax]
  431eb3:	and    BYTE PTR [rax],ah
  431eb5:	and    BYTE PTR [rax],ah
  431eb7:	and    BYTE PTR [rax],ah
  431eb9:	and    BYTE PTR [rax],ah
  431ebb:	and    BYTE PTR [rax],ah
  431ebd:	and    BYTE PTR [rax],ah
  431ebf:	and    BYTE PTR [rax],ah
  431ec1:	and    BYTE PTR [rax],ah
  431ec3:	and    BYTE PTR [rax],ah
  431ec5:	and    BYTE PTR [rax],ah
  431ec7:	and    BYTE PTR [rax],ah
  431ec9:	and    BYTE PTR [rax],ah
  431ecb:	and    BYTE PTR [rax],ah
  431ecd:	and    BYTE PTR [rsi+0x43],dh
  431ed0:	outs   dx,DWORD PTR ds:[rsi]
  431ed1:	outs   dx,BYTE PTR ds:[rsi]
  431ed2:	je     0x431f00
  431ed4:	and    BYTE PTR [rsp+rsi*2+0x68],dl
  431ed8:	jb     0x431f3f
  431eda:	(bad)  
  431edb:	fs sub al,0x20
  431ede:	jno    0x431f23
  431ee0:	sub    al,0x20
  431ee2:	jno    0x431f4a
  431ee4:	push   rsp
  431ee5:	push   0x64616572
  431eea:	rex.WB outs dx,BYTE PTR ds:[rsi]
  431eec:	outs   dx,WORD PTR ds:[rsi]
  431eee:	and    BYTE PTR [rcx+0x6e],ah
  431ef1:	and    BYTE PTR fs:[rdx],cl
  431ef4:	and    BYTE PTR [rax],ah
  431ef6:	and    BYTE PTR [rax],ah
  431ef8:	and    BYTE PTR [rax],ah
  431efa:	and    BYTE PTR [rax],ah
  431efc:	and    BYTE PTR [rax],ah
  431efe:	and    BYTE PTR [rax],ah
  431f00:	and    BYTE PTR [rax],ah
  431f02:	and    BYTE PTR [rax],ah
  431f04:	and    BYTE PTR [rax],ah
  431f06:	and    BYTE PTR [rax],ah
  431f08:	and    BYTE PTR [rax],ah
  431f0a:	and    BYTE PTR [rax],ah
  431f0c:	and    BYTE PTR [rax],ah
  431f0e:	and    BYTE PTR [rax],ah
  431f10:	je     0x431f7a
  431f12:	jb     0x431f79
  431f14:	(bad)  
  431f15:	fs jae 0x431f38
  431f18:	sub    BYTE PTR [rcx+rbp*2+0x73],ah
  431f1c:	(bad)  
  431f1d:	(bad)  
  431f1e:	ins    BYTE PTR es:[rdi],dx
  431f1f:	and    BYTE PTR gs:[rcx+0x6c],ah
  431f23:	ins    BYTE PTR es:[rdi],dx
  431f24:	and    BYTE PTR [rax+rbp*2+0x72],dh
  431f28:	gs (bad) 
  431f2a:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x63617020
  431f32:	imul   esp,DWORD PTR [rbp+0x74],0x73
  431f36:	sub    DWORD PTR [rsi],ebp
  431f38:	or     cl,BYTE PTR [rdx]
  431f3a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  431f3c:	jb     0x431f5e
  431f3e:	ins    DWORD PTR es:[rdi],dx
  431f3f:	outs   dx,DWORD PTR ds:[rsi]
  431f40:	jb     0x431fa7
  431f42:	and    BYTE PTR [rcx+0x6e],ch
  431f45:	outs   dx,WORD PTR ds:[rsi]
  431f47:	jb     0x431fb6
  431f49:	(bad)  
  431f4a:	je     0x431fb5
  431f4c:	outs   dx,DWORD PTR ds:[rsi]
  431f4d:	outs   dx,BYTE PTR ds:[rsi]
  431f4e:	sub    al,0x20
  431f50:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431f53:	jae    0x431fca
  431f55:	ins    BYTE PTR es:[rdi],dx
  431f56:	je     0x431f78
  431f58:	je     0x431fc2
  431f5a:	and    BYTE PTR gs:[rdi+0x44],al
  431f5e:	rex.X and BYTE PTR [rbp+0x61],bpl
  431f62:	outs   dx,BYTE PTR ds:[rsi]
  431f63:	jne    0x431fc6
  431f65:	ins    BYTE PTR es:[rdi],dx
  431f66:	and    BYTE PTR [rax],ch
  431f68:	(bad)  
  431f69:	jbe    0x431fcc
  431f6b:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6120656c
  431f73:	jae    0x431f95
  431f75:	outs   dx,DWORD PTR ds:[rsi]
  431f76:	outs   dx,BYTE PTR ds:[rsi]
  431f77:	sub    eax,0x656e696c
  431f7c:	and    BYTE PTR [rdx],cl
  431f7e:	imul   ebp,DWORD PTR [rsi+0x66],0x726f206f
  431f85:	and    BYTE PTR [rcx+0x20],ah
  431f88:	jo     0x431ffc
  431f8a:	imul   ebp,DWORD PTR [rsi+0x74],0x6d206465
  431f91:	(bad)  
  431f92:	outs   dx,BYTE PTR ds:[rsi]
  431f93:	jne    0x431ff6
  431f95:	ins    BYTE PTR es:[rdi],dx
  431f96:	sub    DWORD PTR [rsi],ebp
  431f98:	or     al,BYTE PTR [rax]
  431f9a:	add    BYTE PTR [rax],al
  431f9c:	add    BYTE PTR [rax],al
  431f9e:	add    BYTE PTR [rax],al
  431fa0:	cmp    al,0x68
  431fa2:	je     0x432018
  431fa4:	jo     0x431fe0
  431fa6:	(bad)  
  431fa7:	(bad)  
  431fa8:	ja     0x432021
  431faa:	ja     0x431fda
  431fac:	outs   dx,BYTE PTR ds:[esi]
  431fae:	jne    0x431fde
  431fb0:	outs   dx,DWORD PTR ds:[rsi]
  431fb1:	jb     0x43201a
  431fb3:	(bad)  
  431fb4:	jae    0x432025
  431fb6:	data16 je 0x432030
  431fb9:	(bad)  
  431fba:	jb     0x432021
  431fbc:	(bad)  
  431fbd:	addr32 fs (bad) 
  431fc0:	(bad)  
  431fc1:	(bad)  
  431fc2:	jne    0x43202b
  431fc4:	jae    0x431ff5
  431fc6:	add    BYTE PTR ds:[rdx+0x65],dl
  431fca:	jo     0x43203b
  431fcc:	jb     0x432042
  431fce:	and    BYTE PTR [rdx+0x75],ah
  431fd1:	addr32 jae 0x431ff4
  431fd4:	je     0x432045
  431fd6:	and    BYTE PTR [rdx],ah
  431fd8:	and    eax,0xa2e2273
  431fdd:	add    BYTE PTR [rbx+0x69],cl
  431fe0:	ins    BYTE PTR es:[rdi],dx
  431fe1:	ins    BYTE PTR es:[rdi],dx
  431fe2:	imul   ebp,DWORD PTR [rsi+0x67],0x6f727020
  431fe9:	movsxd esp,DWORD PTR [rbp+0x73]
  431fec:	jae    0x432016
  431fee:	gs jae 0x43201a
  431ff1:	cmp    al,BYTE PTR [rax]
  431ff3:	rex.R
  431ff4:	gs je  0x432058
  431ff7:	movsxd ebp,DWORD PTR [rax+0x69]
  431ffa:	outs   dx,BYTE PTR ds:[rsi]
  431ffb:	and    BYTE PTR [eax+0x72],dh
  431fff:	outs   dx,DWORD PTR ds:[rsi]
  432000:	movsxd esp,DWORD PTR [rbp+0x73]
  432003:	jae    0x43202d
  432005:	gs jae 0x432031
  432008:	cmp    al,BYTE PTR [rax]
  43200a:	rex.R
  43200b:	gs je  0x43206f
  43200e:	movsxd ebp,DWORD PTR [rax+0x20]
  432011:	outs   dx,DWORD PTR ds:[rsi]
  432012:	jb     0x432034
  432014:	imul   ebp,DWORD PTR [rcx+0x6c],0x6c
  432018:	and    BYTE PTR [rsi+0x61],ah
  43201b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  432023:	or     al,BYTE PTR [rax]
  432025:	add    BYTE PTR [rax],al
  432027:	add    BYTE PTR [rbp+0x2e],al
  43202a:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43202c:	and    BYTE PTR [rbp+0x6e],dh
  43202f:	ja     0x432092
  432031:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x726f662d
  432039:	and    BYTE PTR [rbx+0x68],ah
  43203c:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x6c206e65
  432044:	gs data16 je 0x432076
  432048:	add    BYTE PTR [rcx],dh
  43204a:	add    BYTE PTR [rax],dh
  43204c:	add    BYTE PTR [rcx+0x43],dh
  43204f:	add    BYTE PTR [rcx+0x43],dl
  432052:	add    BYTE PTR [rcx+0x53],dh
  432055:	jns    0x4320c4
  432057:	(bad)  
  432058:	outs   dx,DWORD PTR ds:[rsi]
  432059:	ins    BYTE PTR es:[rdi],dx
  43205a:	cmp    bh,BYTE PTR [rdx]
  43205c:	add    BYTE PTR [rcx+0x66],dh
  43205f:	push   rsp
  432060:	push   0x64616572
  432065:	rex.WB outs dx,BYTE PTR ds:[rsi]
  432067:	outs   dx,WORD PTR ds:[rsi]
  432069:	add    BYTE PTR [rcx+0x73],dh
  43206c:	push   rsp
  43206d:	push   0x64616572
  432072:	rex.WB outs dx,BYTE PTR ds:[rsi]
  432074:	outs   dx,WORD PTR ds:[rsi]
  432076:	add    BYTE PTR [rax+rax*1+0x71],ch
  43207a:	rex.WRXB
  43207b:	data16 data16 jae 0x4320e4
  43207f:	je     0x4320f4
  432081:	add    BYTE PTR [rbp+riz*2+0x78],dl
  432085:	je     0x4320c4
  432087:	and    eax,0x443b586c
  43208c:	(bad)  
  43208d:	je     0x4320f0
  43208f:	cmp    eax,0x3b586c25
  432094:	rex.X jae 0x43210a
  432097:	cmp    eax,0x586c25
  43209c:	jno    0x4320f1
  43209e:	jne    0x432110
  4320a0:	jo     0x432111
  4320a2:	jb     0x432118
  4320a4:	gs add BYTE PTR fs:[rbx],bh
  4320a8:	add    BYTE PTR [rbp+0x75],ch
  4320ab:	ins    BYTE PTR es:[rdi],dx
  4320ac:	je     0x432117
  4320ae:	jo     0x432122
  4320b0:	outs   dx,DWORD PTR ds:[rsi]
  4320b1:	movsxd esp,DWORD PTR [rbp+0x73]
  4320b4:	jae    0x4320e1
  4320b6:	add    BYTE PTR [rcx+0x52],dh
  4320b9:	gs ins BYTE PTR es:[rdi],dx
  4320bb:	outs   dx,DWORD PTR ds:[rsi]
  4320bc:	movsxd ecx,DWORD PTR [rcx+0x6e]
  4320bf:	jae    0x43212f
  4320c1:	sub    eax,DWORD PTR [rax]
  4320c3:	jae    0x43213c
  4320c5:	(bad)
  4320ca:	sub    eax,DWORD PTR [rax]
  4320cc:	push   0x65726277
  4320d1:	(bad)  
  4320d2:	imul   ebp,DWORD PTR [rbx],0x0
  4320d5:	outs   dx,WORD PTR ds:[rsi]
  4320d7:	jb     0x432144
  4320d9:	sub    eax,0x6e657665
  4320de:	je     0x432153
  4320e0:	sub    eax,DWORD PTR [rax]
  4320e2:	jbe    0x43214a
  4320e4:	outs   dx,DWORD PTR ds:[rsi]
  4320e5:	jb     0x432152
  4320e7:	sub    eax,0x6e657665
  4320ec:	je     0x432161
  4320ee:	sub    eax,DWORD PTR [rax]
  4320f0:	gs js  0x432158
  4320f3:	movsxd ebp,DWORD PTR [rip+0x6e657665]        # 0x6ea8975e
  4320f9:	je     0x43216e
  4320fb:	sub    eax,DWORD PTR [rax]
  4320fd:	jbe    0x432142
  4320ff:	outs   dx,DWORD PTR ds:[rsi]
  432100:	outs   dx,BYTE PTR ds:[rsi]
  432101:	je     0x432156
  432103:	jne    0x432175
  432105:	jo     0x432176
  432107:	jb     0x43217d
  432109:	gs sub eax,DWORD PTR fs:[rax]
  43210d:	push   rcx
  43210e:	push   rsp
  43210f:	push   0x64616572
  432114:	rex.RB jbe 0x43217c
  432117:	outs   dx,BYTE PTR ds:[rsi]
  432118:	je     0x43218d
  43211a:	sub    eax,DWORD PTR [rax]
  43211c:	outs   dx,BYTE PTR ds:[rsi]
  43211d:	outs   dx,DWORD PTR ds:[rsi]
  43211e:	sub    eax,0x75736572
  432123:	ins    DWORD PTR es:[rdi],dx
  432124:	gs sub eax,DWORD PTR fs:[rax]
  432128:	push   rax
  432129:	(bad)  
  43212a:	movsxd ebp,DWORD PTR [rbx+0x65]
  43212d:	je     0x432182
  43212f:	imul   edi,DWORD PTR [rdx+0x65],0x3b78253d
  432136:	push   rcx
  432137:	push   rax
  432138:	(bad)  
  432139:	jae    0x4321ae
  43213b:	push   rbx
  43213c:	imul   esp,DWORD PTR [rdi+0x6e],0x2b736c61
  432143:	cmp    edx,DWORD PTR [rcx+0x50]
  432146:	jb     0x4321b7
  432148:	addr32 jb 0x4321ac
  43214b:	ins    DWORD PTR es:[rdi],dx
  43214c:	push   rbx
  43214d:	imul   esp,DWORD PTR [rdi+0x6e],0x2b736c61
  432154:	add    BYTE PTR [rcx+0x47],dh
  432157:	gs je  0x4321ae
  43215a:	rex.WR push rbx
  43215c:	rex.B
  43215d:	fs fs jb 0x43219b
  432161:	add    BYTE PTR [rcx+0x47],dh
  432164:	gs je  0x4321bb
  432167:	rex.WB
  432168:	rex.X
  432169:	rex.B
  43216a:	fs fs jb 0x4321a8
  43216e:	add    BYTE PTR [rbp+riz*2+0x62],al
  432172:	jne    0x4321db
  432174:	and    BYTE PTR [rdi+0x75],ch
  432177:	je     0x4321e9
  432179:	jne    0x4321ef
  43217b:	and    BYTE PTR [rbp+0x6e],ah
  43217e:	(bad)  
  43217f:	(bad)  
  432180:	ins    BYTE PTR es:[rdi],dx
  432181:	gs fs or al,BYTE PTR cs:[rax]
  432186:	jae    0x4321ed
  432188:	je     0x4321aa
  43218a:	fs gs (bad) 
  43218d:	jne    0x4321f6
  43218f:	and    BYTE PTR [rax],dh
  432191:	add    BYTE PTR [rbp+riz*2+0x62],al
  432195:	jne    0x4321fe
  432197:	and    BYTE PTR [rdi+0x75],ch
  43219a:	je     0x43220c
  43219c:	jne    0x432212
  43219e:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4321a2:	(bad)  
  4321a3:	(bad)  
  4321a4:	ins    BYTE PTR es:[rdi],dx
  4321a5:	gs fs or al,BYTE PTR cs:[rax]
  4321aa:	jae    0x432211
  4321ac:	je     0x4321ce
  4321ae:	fs gs (bad) 
  4321b1:	jne    0x43221a
  4321b3:	sub    eax,0x702d7768
  4321b8:	outs   dx,DWORD PTR ds:[rsi]
  4321b9:	imul   ebp,DWORD PTR [rsi+0x74],0x312073
  4321c0:	rex.W (bad) 
  4321c2:	push   rdi
  4321c3:	and    BYTE PTR [rax+0x6f],dh
  4321c6:	imul   ebp,DWORD PTR [rsi+0x74],0x62656420
  4321cd:	jne    0x432236
  4321cf:	imul   ebp,DWORD PTR [esi+0x67],0x74756f20
  4321d7:	jo     0x43224e
  4321d9:	je     0x4321fb
  4321db:	outs   dx,BYTE PTR gs:[rsi]
  4321dd:	(bad)  
  4321de:	(bad)  
  4321df:	ins    BYTE PTR es:[rdi],dx
  4321e0:	gs fs or al,BYTE PTR cs:[rax]
  4321e5:	jae    0x43224c
  4321e7:	je     0x432209
  4321e9:	fs gs (bad) 
  4321ec:	jne    0x432255
  4321ee:	sub    eax,0x702d7768
  4321f3:	outs   dx,DWORD PTR ds:[rsi]
  4321f4:	imul   ebp,DWORD PTR [rsi+0x74],0x302073
  4321fb:	add    BYTE PTR [rax],al
  4321fd:	add    BYTE PTR [rax],al
  4321ff:	add    BYTE PTR [rax+0x2f],cl
  432202:	push   rdi
  432203:	and    BYTE PTR [rax+0x6f],dh
  432206:	imul   ebp,DWORD PTR [rsi+0x74],0x62656420
  43220d:	jne    0x432276
  43220f:	imul   ebp,DWORD PTR [esi+0x67],0x74756f20
  432217:	jo     0x43228e
  432219:	je     0x43223b
  43221b:	imul   esi,DWORD PTR fs:[rbx+0x61],0x64656c62
  432223:	or     al,BYTE PTR cs:[rax]
  432226:	jae    0x43228d
  432228:	je     0x43224a
  43222a:	jb     0x432291
  43222c:	ins    DWORD PTR es:[rdi],dx
  43222d:	outs   dx,DWORD PTR ds:[rsi]
  43222e:	je     0x432295
  432230:	sub    eax,0x75626564
  432235:	and    BYTE PTR [ecx],dh
	...
  432240:	push   rax
  432241:	jb     0x4322b2
  432243:	je     0x4322b4
  432245:	movsxd ebp,DWORD PTR [rdi+0x6c]
  432248:	and    BYTE PTR [rbp+riz*2+0x62],ah
  43224c:	jne    0x4322b5
  43224e:	and    BYTE PTR [rdi+0x75],ch
  432251:	je     0x4322c3
  432253:	jne    0x4322c9
  432255:	and    BYTE PTR [rbp+0x6e],ah
  432258:	(bad)  
  432259:	(bad)  
  43225a:	ins    BYTE PTR es:[rdi],dx
  43225b:	gs fs or al,BYTE PTR cs:[rax]
  432260:	jae    0x4322c7
  432262:	je     0x432284
  432264:	jb     0x4322cb
  432266:	ins    DWORD PTR es:[rdi],dx
  432267:	outs   dx,DWORD PTR ds:[rsi]
  432268:	je     0x4322cf
  43226a:	sub    eax,0x75626564
  43226f:	and    BYTE PTR [eax],dh
  432272:	add    BYTE PTR [rax],al
  432274:	add    BYTE PTR [rax],al
  432276:	add    BYTE PTR [rax],al
  432278:	push   rax
  432279:	jb     0x4322ea
  43227b:	je     0x4322ec
  43227d:	movsxd ebp,DWORD PTR [rdi+0x6c]
  432280:	and    BYTE PTR [rbp+riz*2+0x62],ah
  432284:	jne    0x4322ed
  432286:	and    BYTE PTR [rdi+0x75],ch
  432289:	je     0x4322fb
  43228b:	jne    0x432301
  43228d:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  432291:	(bad)  
  432292:	(bad)  
  432293:	ins    BYTE PTR es:[rdi],dx
  432294:	gs fs or al,BYTE PTR cs:[rax]
  432299:	jae    0x432300
  43229b:	je     0x4322bd
  43229d:	fs gs (bad) 
  4322a0:	jne    0x432309
  4322a2:	sub    eax,0x6d726f66
  4322a7:	(bad)  
  4322a8:	je     0x4322ca
  4322aa:	add    BYTE PTR [rax+0x65],ch
  4322ad:	ins    BYTE PTR es:[rdi],dx
  4322ae:	jo     0x4322b0
  4322b0:	gs js  0x43231c
  4322b3:	je     0x4322b5
  4322b5:	push   rbp
  4322b6:	outs   dx,BYTE PTR ds:[rsi]
  4322b7:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4322bb:	outs   dx,BYTE PTR ds:[rsi]
  4322bc:	and    BYTE PTR [rbp+0x6f],ch
  4322bf:	outs   dx,BYTE PTR ds:[rsi]
  4322c0:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f6320
  4322c8:	ins    DWORD PTR es:[rdi],dx
  4322c9:	(bad)  
  4322ca:	outs   dx,BYTE PTR ds:[rsi]
  4322cb:	fs or  cl,BYTE PTR cs:[rdx]
  4322cf:	add    BYTE PTR [rcx+0x53],dh
  4322d2:	gs (bad) 
  4322d4:	jb     0x432339
  4322d6:	push   0x6d656d3a
  4322db:	outs   dx,DWORD PTR ds:[rsi]
  4322dc:	jb     0x432357
  4322de:	cmp    al,BYTE PTR [rax]
  4322e0:	push   rbp
  4322e1:	outs   dx,BYTE PTR ds:[rsi]
  4322e2:	(bad)  
  4322e3:	(bad)  
  4322e4:	ins    BYTE PTR es:[rdi],dx
  4322e5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4322ea:	(bad)  
  4322eb:	ins    BYTE PTR es:[rdi],dx
  4322ec:	ins    BYTE PTR es:[rdi],dx
  4322ed:	outs   dx,DWORD PTR ds:[rsi]
  4322ee:	movsxd esp,DWORD PTR [rcx+0x74]
  4322f1:	and    BYTE PTR gs:[rbp+0x65],ch
  4322f5:	ins    DWORD PTR es:[rdi],dx
  4322f6:	outs   dx,DWORD PTR ds:[rsi]
  4322f7:	jb     0x432372
  4322f9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4322fd:	jo     0x432364
  4322ff:	jb     0x432367
  432301:	outs   dx,DWORD PTR ds:[rsi]
  432302:	jb     0x432371
  432304:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432308:	and    BYTE PTR [rbx+0x65],dh
  43230b:	(bad)  
  43230c:	jb     0x432371
  43230e:	push   0x72724500
  432313:	outs   dx,DWORD PTR ds:[rsi]
  432314:	jb     0x432336
  432316:	imul   ebp,DWORD PTR [rsi+0x20],0x73726170
  43231d:	imul   ebp,DWORD PTR [rsi+0x67],0x65537120
  432324:	(bad)  
  432325:	jb     0x43238a
  432327:	push   0x6d656d3a
  43232c:	outs   dx,DWORD PTR ds:[rsi]
  43232d:	jb     0x4323a8
  43232f:	and    BYTE PTR [rax+0x61],dh
  432332:	movsxd ebp,DWORD PTR [rbx+0x65]
  432335:	je     0x432337
  432337:	add    BYTE PTR [rbp+0x6e],dl
  43233a:	(bad)  
  43233b:	(bad)  
  43233c:	ins    BYTE PTR es:[rdi],dx
  43233d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  432342:	(bad)  
  432343:	movsxd esp,DWORD PTR [rbx+0x65]
  432346:	jae    0x4323bb
  432348:	and    BYTE PTR [rip+0x6220646c],ah        # 0x626387ba
  43234e:	jns    0x4323c4
  432350:	gs jae 0x432373
  432353:	outs   dx,DWORD PTR ds:[rsi]
  432354:	data16 and BYTE PTR [rcx+riz*2+0x72],dh
  432359:	addr32 gs je 0x43237d
  43235d:	ins    DWORD PTR es:[rdi],dx
  43235e:	gs ins DWORD PTR es:[rdi],dx
  432360:	outs   dx,DWORD PTR ds:[rsi]
  432361:	jb     0x4323dc
  432363:	and    BYTE PTR [rcx+0x74],ah
  432366:	and    BYTE PTR [rax],dh
  432368:	js     0x43238f
  43236a:	ins    BYTE PTR es:[rdi],dx
  43236b:	js     0x432399
  43236d:	and    BYTE PTR [rax+0x61],ch
  432370:	ins    BYTE PTR es:[rdi],dx
  432371:	je     0x4323dc
  432373:	outs   dx,BYTE PTR ds:[rsi]
  432374:	and    BYTE PTR [ebx+0x65],dh
  432378:	(bad)  
  432379:	jb     0x4323de
  43237b:	push   0x2c31002e
  432380:	and    eax,0x7100786c
  432385:	rex.B je 0x4323fc
  432388:	(bad)  
  432389:	movsxd ebp,DWORD PTR [rax+0x65]
  43238c:	add    BYTE PTR fs:[rcx+0x41],dh
  432390:	je     0x432406
  432392:	(bad)  
  432393:	movsxd ebp,DWORD PTR [rax+0x65]
  432396:	cmp    al,BYTE PTR fs:[rax]
  432399:	rex.XB and eax,0x7100786c
  43239f:	pop    rax
  4323a0:	data16 gs jb 0x4323de
  4323a4:	add    BYTE PTR [rdx+0x65],dh
  4323a7:	(bad)  
  4323a8:	add    BYTE PTR fs:[rdi+0x72],dh
  4323ac:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x71007825
  4323b4:	push   rdx
  4323b5:	movsxd ebp,DWORD PTR [rbp+0x64]
  4323b8:	sub    al,0x0
  4323ba:	jae    0x432421
  4323bc:	je     0x4323de
  4323be:	fs gs (bad) 
  4323c1:	jne    0x43242a
  4323c3:	and    BYTE PTR [rcx],dh
  4323c5:	add    BYTE PTR [rcx+0x43],dh
  4323c8:	push   rdx
  4323c9:	rex.XB cmp al,BYTE PTR [r8]
  4323cc:	cmp    al,0x74
  4323ce:	push   0x64616572
  4323d3:	and    BYTE PTR [rcx+0x64],ch
  4323d6:	cmp    eax,0x22732522
  4323db:	add    BYTE PTR [rip+0x63200064],ah        # 0x63632445
  4323e1:	outs   dx,DWORD PTR ds:[rsi]
  4323e2:	jb     0x432449
  4323e4:	cmp    eax,0x22732522
  4323e9:	add    BYTE PTR [rax],ah
  4323eb:	outs   dx,BYTE PTR ds:[rsi]
  4323ec:	(bad)  
  4323ed:	ins    DWORD PTR es:[rdi],dx
  4323ee:	gs cmp eax,0x22732522
  4323f4:	add    BYTE PTR [rdi],ch
  4323f6:	or     al,BYTE PTR ds:[rax]
  4323f9:	xor    BYTE PTR [rax+0x25],bh
  4323fc:	ins    BYTE PTR es:[rdi],dx
  4323fd:	js     0x4323ff
  4323ff:	jno    0x432421
  432401:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c987227
  432407:	rex.WR add BYTE PTR [rax+0x20],r14b
  43240b:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c987231
  432411:	rex.WR add BYTE PTR [rcx+0x2d],r14b
  432415:	ds push 0x20646165
  43241b:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c987241
  432421:	rex.WR add BYTE PTR [rax],r8b
  432424:	add    BYTE PTR [rax],al
  432426:	add    BYTE PTR [rax],al
  432428:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x203d2120
  432430:	rex.WRX push rbp
  432432:	rex.WR
  432433:	rex.WR and BYTE PTR [rsi],r12b
  432436:	and    BYTE PTR es:[rcx+0x74],ch
  43243a:	gs jb  0x43246a
  43243d:	ds jo  0x432460
  432440:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c987266
  432446:	rex.WR add BYTE PTR [rsi+0x43],r14b
  43244a:	je     0x4324be
  43244c:	ins    BYTE PTR es:[rdi],dx
  43244d:	rex.XB add BYTE PTR [r14+0x43],sil
  432451:	outs   dx,DWORD PTR ds:[rsi]
  432452:	outs   dx,BYTE PTR ds:[rsi]
  432453:	je     0x432490
  432455:	add    BYTE PTR [rsi+0x43],dh
  432458:	outs   dx,DWORD PTR ds:[rsi]
  432459:	outs   dx,BYTE PTR ds:[rsi]
  43245a:	je     0x43249b
  43245c:	add    BYTE PTR [rsi+0x46],dh
  43245f:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x75527600
  432467:	outs   dx,BYTE PTR ds:[rsi]
  432468:	cmp    eax,DWORD PTR [rax]
  43246a:	jbe    0x4324b7
  43246c:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3b],0x206f4e00
  432474:	jo     0x4324e8
  432476:	outs   dx,DWORD PTR ds:[rsi]
  432477:	movsxd esp,DWORD PTR [rbp+0x73]
  43247a:	jae    0x43249c
  43247c:	je     0x4324ed
  43247e:	and    BYTE PTR [rbx+0x69],ch
  432481:	ins    BYTE PTR es:[rdi],dx
  432482:	ins    BYTE PTR es:[rdi],dx
  432483:	or     al,BYTE PTR [rax]
  432485:	jbe    0x4324c8
  432487:	je     0x4324fd
  432489:	(bad)  
  43248a:	movsxd ebp,DWORD PTR [rax+0x3b]
  43248d:	add    BYTE PTR [rcx+0x6c],al
  432490:	jb     0x4324f7
  432492:	(bad)  
  432493:	fs jns 0x4324b6
  432496:	fs gs (bad) 
  432499:	jne    0x432502
  43249b:	imul   ebp,DWORD PTR [esi+0x67],0x70206120
  4324a3:	jb     0x432514
  4324a5:	movsxd esp,DWORD PTR [rbp+0x73]
  4324a8:	jae    0x4324b4
  4324aa:	add    BYTE PTR [rbx+0x74],dh
  4324ad:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x65762d2d
  4324b5:	jb     0x43252a
  4324b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x44472800
  4324be:	rex.X sub DWORD PTR [rax],esp
  4324c1:	add    BYTE PTR [rax],al
  4324c3:	add    BYTE PTR [rax],al
  4324c5:	add    BYTE PTR [rax],al
  4324c7:	add    BYTE PTR [rdi+0x4e],al
  4324ca:	push   rbp
  4324cb:	and    BYTE PTR [rdi+0x64],ah
  4324ce:	(bad)
  4324d3:	gs jb  0x4324f6
  4324d6:	and    eax,0xa732573
  4324db:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4324dd:	jo     0x432558
  4324df:	jb     0x43254a
  4324e1:	addr32 push 0x43282074
  4324e7:	sub    DWORD PTR [rax],esp
  4324e9:	xor    dh,BYTE PTR [rax]
  4324eb:	xor    DWORD PTR [rdi],esi
  4324ed:	and    BYTE PTR [rsi+0x72],al
  4324f0:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4324f5:	data16 je 0x43256f
  4324f8:	(bad)  
  4324f9:	jb     0x432560
  4324fb:	and    BYTE PTR [rsi+0x6f],al
  4324fe:	jne    0x43256e
  432500:	fs (bad) 
  432502:	je     0x43256d
  432504:	outs   dx,DWORD PTR ds:[rsi]
  432505:	outs   dx,BYTE PTR ds:[rsi]
  432506:	sub    al,0x20
  432508:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43250a:	movsxd ebp,DWORD PTR [rsi]
  43250c:	or     ah,BYTE PTR [rdi+0x64]
  43250f:	(bad)
  432514:	gs jb  0x432537
  432517:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  43251e:	and    BYTE PTR [rbx+0x6f],dh
  432521:	data16 je 0x43259b
  432524:	(bad)  
  432525:	jb     0x43258c
  432527:	sub    al,0x20
  432529:	movsxd ebp,DWORD PTR [rdi+0x76]
  43252c:	gs jb  0x432594
  43252f:	and    BYTE PTR fs:[rdx+0x79],ah
  432533:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432537:	and    BYTE PTR [rdi+0x4e],al
  43253a:	push   rbp
  43253b:	and    BYTE PTR [rdi+0x65],al
  43253e:	outs   dx,BYTE PTR ds:[rsi]
  43253f:	gs jb  0x4325a3
  432542:	ins    BYTE PTR es:[rdi],dx
  432543:	and    BYTE PTR [rax+0x75],dl
  432546:	(bad)  
  432547:	ins    BYTE PTR es:[rdi],dx
  432548:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  43254f:	outs   dx,BYTE PTR ds:[rsi]
  432550:	jae    0x4325b7
  432552:	or     dl,BYTE PTR cs:[rax+rbp*2+0x69]
  432557:	jae    0x432579
  432559:	(bad)
  432560:	gs jb  0x432583
  432563:	ja     0x4325c6
  432565:	jae    0x432587
  432567:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43256a:	imul   sp,WORD PTR [rdi+0x75],0x6572
  432570:	and    BYTE PTR fs:[rcx+0x73],ah
  432574:	and    BYTE PTR [rdx],ah
  432576:	and    eax,0xa2273
  43257b:	sub    eax,0x6c65682d
  432580:	jo     0x432582
  432582:	sub    eax,0x7474612d
  432587:	(bad)  
  432588:	movsxd ebp,DWORD PTR [rax+0x0]
  43258b:	sub    eax,0x6c756d2d
  432590:	je     0x4325fb
  432592:	add    BYTE PTR [rip+0x6172772d],ch        # 0x61b59cc5
  432598:	jo     0x43260a
  43259a:	gs jb  0x43259d
  43259d:	sub    eax,0x2d2d002d
  4325a2:	fs gs (bad) 
  4325a5:	jne    0x43260e
  4325a7:	add    BYTE PTR [rip+0x6265642d],ch        # 0x62a889da
  4325ad:	jne    0x432616
  4325af:	sub    eax,0x6d726f66
  4325b4:	(bad)  
  4325b5:	je     0x4325f4
  4325b7:	add    BYTE PTR [rip+0x2d2d0073],ah        # 0x2d702630
  4325bd:	jb     0x432624
  4325bf:	ins    DWORD PTR es:[rdi],dx
  4325c0:	outs   dx,DWORD PTR ds:[rsi]
  4325c1:	je     0x432628
  4325c3:	sub    eax,0x75626564
  4325c8:	add    BYTE PTR [eip+0x7369642d],ch        # 0x73ac89fc
  4325cf:	(bad)  
  4325d0:	(bad)  
  4325d1:	ins    BYTE PTR es:[rdi],dx
  4325d2:	gs sub eax,0x6b636170
  4325d8:	gs je  0x4325db
  4325db:	add    BYTE PTR [rax],al
  4325dd:	add    BYTE PTR [rax],al
  4325df:	add    BYTE PTR [rcx+rbp*2+0x73],al
  4325e3:	(bad)  
  4325e4:	(bad)  
  4325e5:	ins    BYTE PTR es:[rdi],dx
  4325e6:	gs (bad) 
  4325e8:	(bad)  
  4325e9:	ins    BYTE PTR es:[rdi],dx
  4325ea:	and    BYTE PTR gs:[rax+0x61],dh
  4325ee:	movsxd ebp,DWORD PTR [rbx+0x65]
  4325f1:	je     0x432666
  4325f3:	cmp    cl,BYTE PTR [rdx]
  4325f5:	and    BYTE PTR [rax],ah
  4325f7:	jbe    0x43263c
  4325f9:	outs   dx,DWORD PTR ds:[rsi]
  4325fa:	outs   dx,BYTE PTR ds:[rsi]
  4325fb:	je     0x43261d
  4325fd:	and    BYTE PTR [rax],ah
  4325ff:	and    BYTE PTR [rax],ah
  432601:	and    BYTE PTR [rax],ah
  432603:	or     DWORD PTR [rcx+0x6c],eax
  432606:	ins    BYTE PTR es:[rdi],dx
  432607:	and    BYTE PTR [rsi+0x43],dh
  43260a:	outs   dx,DWORD PTR ds:[rsi]
  43260b:	outs   dx,BYTE PTR ds:[rsi]
  43260c:	je     0x43262e
  43260e:	jo     0x432671
  432610:	movsxd ebp,DWORD PTR [rbx+0x65]
  432613:	je     0x432688
  432615:	or     ah,BYTE PTR [rax]
  432617:	and    BYTE PTR [rcx+0x43],dh
  43261a:	and    BYTE PTR [rax],ah
  43261c:	and    BYTE PTR [rax],ah
  43261e:	and    BYTE PTR [rax],ah
  432620:	and    BYTE PTR [rax],ah
  432622:	and    BYTE PTR [rax],ah
  432624:	or     DWORD PTR [rcx+0x75],edx
  432627:	gs jb  0x4326a3
  43262a:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  432631:	and    BYTE PTR [rbx+0x75],ah
  432634:	jb     0x4326a8
  432636:	outs   dx,BYTE PTR gs:[rsi]
  432638:	je     0x43265a
  43263a:	je     0x4326a4
  43263c:	jb     0x4326a3
  43263e:	(bad)  
  43263f:	or     ah,BYTE PTR fs:[rax]
  432642:	and    BYTE PTR [rcx+0x66],dh
  432645:	push   rsp
  432646:	push   0x64616572
  43264b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43264d:	outs   dx,WORD PTR ds:[rsi]
  43264f:	or     DWORD PTR [rax+rbp*2+0x72],edx
  432653:	gs (bad) 
  432655:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ch
  43265a:	je     0x4326c5
  43265c:	outs   dx,BYTE PTR ds:[rsi]
  43265d:	or     ah,BYTE PTR [eax]
  432660:	and    BYTE PTR [rsp+rsi*2+0x68],dl
  432664:	jb     0x4326cb
  432666:	(bad)  
  432667:	and    BYTE PTR fs:[rax],ah
  43266a:	and    BYTE PTR [rax],ah
  43266c:	and    BYTE PTR [rcx],cl
  43266e:	push   rax
  43266f:	(bad)  
  432670:	jae    0x4326e5
  432672:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  432679:	and    BYTE PTR [rax+rbp*2+0x72],dh
  43267d:	gs (bad) 
  43267f:	and    BYTE PTR fs:[rbx+0x70],dh
  432683:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  432687:	imul   esp,DWORD PTR [rbp+0x72],0x206e6920
  43268e:	je     0x4326f8
  432690:	and    BYTE PTR gs:[rax+riz*1+0x73],dl
  432695:	je     0x432706
  432697:	jo     0x4326b9
  432699:	jb     0x432700
  43269b:	jo     0x432709
  43269d:	jns    0x4326bf
  43269f:	jo     0x432702
  4326a1:	movsxd ebp,DWORD PTR [rbx+0x65]
  4326a4:	je     0x4326b0
  4326a6:	and    BYTE PTR [rax],ah
  4326a8:	je     0x432712
  4326aa:	jb     0x432711
  4326ac:	(bad)  
  4326ad:	fs jae 0x4326d0
  4326b0:	and    BYTE PTR [rax],ah
  4326b2:	and    BYTE PTR [rax],ah
  4326b4:	or     DWORD PTR [rcx+0x6c],eax
  4326b7:	ins    BYTE PTR es:[rdi],dx
  4326b8:	and    BYTE PTR [rdi+0x66],ch
  4326bb:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4326bf:	and    BYTE PTR [rcx+0x62],ah
  4326c2:	outs   dx,DWORD PTR ds:[rsi]
  4326c3:	jbe    0x43272a
  4326c5:	or     al,BYTE PTR [rax]
  4326c7:	sub    eax,0x7369642d
  4326cc:	(bad)  
  4326cd:	(bad)  
  4326ce:	ins    BYTE PTR es:[rdi],dx
  4326cf:	gs sub eax,0x6b636170
  4326d5:	gs je  0x432715
  4326d8:	add    BYTE PTR [rax+rax*1],ch
  4326db:	jbe    0x432720
  4326dd:	outs   dx,DWORD PTR ds:[rsi]
  4326de:	outs   dx,BYTE PTR ds:[rsi]
  4326df:	je     0x4326e1
  4326e1:	push   rsp
  4326e2:	je     0x43274c
  4326e4:	jb     0x43274b
  4326e6:	(bad)  
  4326e7:	add    BYTE PTR fs:[rax+rbp*2+0x72],dh
  4326ec:	gs (bad) 
  4326ee:	fs jae 0x4326f1
  4326f1:	add    BYTE PTR [rax],al
  4326f3:	add    BYTE PTR [rax],al
  4326f5:	add    BYTE PTR [rax],al
  4326f7:	add    BYTE PTR [rdi+rbp*2+0x6e],al
  4326fb:	(bad)  
  4326fc:	je     0x43271e
  4326fe:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432702:	and    BYTE PTR [rax+0x6f],ch
  432705:	ja     0x432727
  432707:	je     0x432778
  432709:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43270d:	(bad)  
  43270e:	(bad)  
  43270f:	ins    BYTE PTR es:[rdi],dx
  432710:	and    BYTE PTR gs:[rdx],ah
  432713:	and    eax,0xa2e2273
  432718:	or     al,BYTE PTR [rax]
  43271a:	sub    eax,0x642d2d00
  43271f:	imul   esi,DWORD PTR [rbx+0x61],0x2d656c62
  432726:	jb     0x432789
  432728:	outs   dx,BYTE PTR ds:[rsi]
  432729:	outs   dx,DWORD PTR fs:[rsi]
  43272b:	ins    DWORD PTR es:[rdi],dx
  43272c:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  432733:	add    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2db29566
  432739:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  432741:	jb     0x4327a4
  432743:	outs   dx,BYTE PTR ds:[rsi]
  432744:	outs   dx,DWORD PTR fs:[rsi]
  432746:	ins    DWORD PTR es:[rdi],dx
  432747:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  43274e:	add    BYTE PTR [rip+0x636e6f2d],ch        # 0x63b19681
  432754:	add    BYTE PTR gs:[rbp+0x6e],dl
  432758:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43275c:	outs   dx,BYTE PTR ds:[rsi]
  43275d:	and    BYTE PTR [rcx+0x72],ah
  432760:	addr32 jne 0x4327d0
  432763:	outs   dx,BYTE PTR gs:[rsi]
  432765:	je     0x4327a1
  432767:	and    BYTE PTR [rip+0xa73],ah        # 0x4331e0
  43276d:	add    BYTE PTR [rax],al
  43276f:	add    BYTE PTR [rcx+0x74],al
  432772:	je     0x4327d5
  432774:	movsxd ebp,DWORD PTR [rax+0x69]
  432777:	outs   dx,BYTE PTR ds:[rsi]
  432778:	and    BYTE PTR [esi+0x6f],ch
  43277c:	je     0x43279e
  43277e:	jae    0x4327f5
  432780:	jo     0x4327f2
  432782:	outs   dx,DWORD PTR ds:[rsi]
  432783:	jb     0x4327f9
  432785:	gs and BYTE PTR fs:[rdi+0x6e],ch
  43278a:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43278e:	jae    0x4327b0
  432790:	je     0x4327f3
  432792:	jb     0x4327fb
  432794:	gs je  0x432797
  432797:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  432799:	and    BYTE PTR [rax+0x72],dh
  43279c:	outs   dx,DWORD PTR ds:[rsi]
  43279d:	addr32 jb 0x432801
  4327a0:	ins    DWORD PTR es:[rdi],dx
  4327a1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4327a5:	fs gs (bad) 
  4327a8:	jne    0x432811
  4327aa:	add    BYTE PTR [rcx+0x75],dl
  4327ad:	imul   esi,DWORD PTR [rax+rax*1+0x52],0x746f6d65
  4327b5:	and    BYTE PTR gs:[rbx+0x69],dh
  4327b9:	fs and BYTE PTR gs:[rax+0x61],ch
  4327be:	jae    0x4327e0
  4327c0:	je     0x432827
  4327c2:	jb     0x432831
  4327c4:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  4327cb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4327ce:	outs   dx,BYTE PTR ds:[rsi]
  4327cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4327d4:	outs   dx,BYTE PTR ds:[rsi]
  4327d5:	and    BYTE PTR cs:[rax],ah
  4327d8:	rex.RXB
  4327d9:	rex.R
  4327da:	rex.X jae 0x432842
  4327dd:	jb     0x432855
  4327df:	gs jb  0x432802
  4327e2:	ja     0x43284d
  4327e4:	ins    BYTE PTR es:[rdi],dx
  4327e5:	ins    BYTE PTR es:[rdi],dx
  4327e6:	and    BYTE PTR [rdx+0x65],dh
  4327e9:	outs   dx,DWORD PTR ds:[rsi]
  4327ea:	jo     0x432851
  4327ec:	outs   dx,BYTE PTR ds:[rsi]
  4327ed:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4327f1:	and    BYTE PTR [rbx+0x6f],ah
  4327f4:	outs   dx,BYTE PTR ds:[rsi]
  4327f5:	outs   dx,BYTE PTR ds:[rsi]
  4327f6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4327fb:	outs   dx,BYTE PTR ds:[rsi]
  4327fc:	or     al,BYTE PTR cs:[rax]
  4327ff:	add    BYTE PTR [rcx+rbp*2+0x73],al
  432803:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432806:	outs   dx,BYTE PTR ds:[rsi]
  432807:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43280c:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  432810:	movsxd ebp,DWORD PTR [rcx+0x6e]
  432813:	and    BYTE PTR [ecx+ebp*2+0x73],ah
  432818:	(bad)  
  432819:	(bad)  
  43281a:	ins    BYTE PTR es:[rdi],dx
  43281b:	gs cmp esp,DWORD PTR fs:[rax]
  43281f:	jae    0x432895
  432821:	outs   dx,DWORD PTR ds:[rsi]
  432822:	jo     0x432894
  432824:	imul   ebp,DWORD PTR [rsi+0x67],0x61727420
  43282b:	movsxd esp,DWORD PTR [rbp+0x20]
  43282e:	jb     0x4328a5
  432830:	outs   dx,BYTE PTR ds:[rsi]
  432831:	or     al,BYTE PTR cs:[rax]
  432834:	(bad)
  43283b:	gs jb  0x432878
  43283e:	and    BYTE PTR [rip+0x25000a73],ah        # 0x254332b7
  432844:	jae    0x432850
  432846:	add    BYTE PTR [rbp+0x78],al
  432849:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x25000a67
  432851:	jae    0x43288d
  432853:	and    BYTE PTR [rip+0x63000073],ah        # 0x634328cc
  432859:	(bad)  
  43285a:	jo     0x4328d0
  43285c:	jne    0x4328d0
  43285e:	gs fs pop rdi
  432861:	ins    DWORD PTR es:[rdi],dx
  432862:	(bad)  
  432863:	imul   ebp,DWORD PTR [rsi+0x20],0x756f6873
  43286a:	ins    BYTE PTR es:[rdi],dx
  43286b:	and    BYTE PTR fs:[rsi+0x65],ch
  43286f:	jbe    0x4328d6
  432871:	jb     0x432893
  432873:	jb     0x4328da
  432875:	je     0x4328ec
  432877:	jb     0x4328e7
  432879:	add    BYTE PTR [rsi+0x6f],ch
  43287c:	outs   dx,BYTE PTR ds:[rsi]
  43287d:	sub    eax,0x706f7473
  432882:	add    BYTE PTR [rcx+0x6c],ah
  432885:	ins    BYTE PTR es:[rdi],dx
  432886:	sub    eax,0x706f7473
  43288b:	add    BYTE PTR [rcx+rbp*2+0x73],al
  43288f:	(bad)  
  432890:	(bad)  
  432891:	ins    BYTE PTR es:[rdi],dx
  432892:	add    BYTE PTR gs:[rbp+0x6e],al
  432896:	(bad)  
  432897:	(bad)  
  432898:	ins    BYTE PTR es:[rdi],dx
  432899:	add    BYTE PTR gs:[rbp+0x6e],ah
  43289d:	(bad)  
  43289e:	(bad)  
  43289f:	ins    BYTE PTR es:[rdi],dx
  4328a0:	gs add BYTE PTR fs:[rcx+rbp*2+0x73],ah
  4328a6:	(bad)  
  4328a7:	(bad)  
  4328a8:	ins    BYTE PTR es:[rdi],dx
  4328a9:	gs add BYTE PTR fs:[rbp+0x2e],al
  4328ae:	rex.X je 0x432923
  4328b1:	(bad)  
  4328b2:	movsxd esp,DWORD PTR [rbp+0x20]
  4328b5:	(bad)  
  4328b6:	ins    BYTE PTR es:[rdi],dx
  4328b7:	jb     0x43291e
  4328b9:	(bad)  
  4328ba:	fs jns 0x4328dd
  4328bd:	outs   dx,BYTE PTR gs:[rsi]
  4328bf:	(bad)  
  4328c0:	(bad)  
  4328c1:	ins    BYTE PTR es:[rdi],dx
  4328c2:	gs fs add BYTE PTR cs:[rbp+0x2e],al
  4328c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4328ca:	jne    0x432938
  4328cc:	and    BYTE PTR fs:[rsi+0x6f],ch
  4328d0:	je     0x4328f2
  4328d2:	outs   dx,BYTE PTR gs:[rsi]
  4328d4:	(bad)  
  4328d5:	(bad)  
  4328d6:	ins    BYTE PTR es:[rdi],dx
  4328d7:	and    BYTE PTR gs:[rdx+0x74],ah
  4328db:	jb     0x43293e
  4328dd:	movsxd esp,DWORD PTR [rbp+0x2e]
  4328e0:	add    BYTE PTR [rbp+0x2e],al
  4328e3:	rex.X jb 0x432947
  4328e6:	outs   dx,BYTE PTR ds:[rsi]
  4328e7:	movsxd ebp,DWORD PTR [rax+0x20]
  4328ea:	je     0x43295e
  4328ec:	(bad)  
  4328ed:	movsxd ebp,DWORD PTR [rcx+0x6e]
  4328f0:	and    BYTE PTR [esi+0x6f],ch
  4328f4:	je     0x432916
  4328f6:	outs   dx,BYTE PTR gs:[rsi]
  4328f8:	(bad)  
  4328f9:	(bad)  
  4328fa:	ins    BYTE PTR es:[rdi],dx
  4328fb:	gs fs add BYTE PTR cs:[rax],al
  432900:	rex.RB
  432901:	rex.XB outs dx,DWORD PTR cs:[rsi]
  432904:	jne    0x432972
  432906:	and    BYTE PTR fs:[rsi+0x6f],ch
  43290a:	je     0x43292c
  43290c:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  432914:	(bad)  
  432916:	(bad)  
  432917:	outs   dx,BYTE PTR ds:[rsi]
  432918:	movsxd ebp,DWORD PTR [rax+0x20]
  43291b:	je     0x43298f
  43291d:	(bad)  
  43291e:	movsxd ebp,DWORD PTR [rcx+0x6e]
  432921:	add    BYTE PTR cs:[eax],al
  432925:	add    BYTE PTR [rax],al
  432927:	add    BYTE PTR [rbp+0x2e],al
  43292a:	rex.X (bad) 
  43292c:	and    BYTE PTR fs:[rcx+0x62],dl
  432930:	je     0x4329a4
  432932:	(bad)  
  432933:	movsxd esp,DWORD PTR [rbp+0x20]
  432936:	outs   dx,DWORD PTR ds:[rsi]
  432937:	jo     0x43299e
  432939:	jb     0x43299c
  43293b:	je     0x4329a6
  43293d:	outs   dx,DWORD PTR ds:[rsi]
  43293e:	outs   dx,BYTE PTR ds:[rsi]
  43293f:	and    BYTE PTR cs:[rbp+0x73],dl
  432943:	and    BYTE PTR gs:[rdx+0x74],ah
  432947:	jae    0x432975
  432949:	and    BYTE PTR [rax+0x74],dh
  43294c:	sub    al,0x20
  43294e:	outs   dx,DWORD PTR ds:[rsi]
  43294f:	jb     0x432971
  432951:	outs   dx,DWORD PTR ds:[rsi]
  432952:	data16 data16 add BYTE PTR cs:[rax],al
  432957:	add    BYTE PTR [rax+0x61],ch
  43295a:	outs   dx,BYTE PTR ds:[rsi]
  43295b:	fs ins BYTE PTR es:[rdi],dx
  43295d:	imul   ebp,DWORD PTR [rsi+0x67],0x736f7020
  432964:	jae    0x4329cf
  432966:	(bad)  
  432967:	ins    BYTE PTR es:[rdi],dx
  432968:	and    BYTE PTR gs:[rbx+0x65],dh
  43296c:	jb     0x4329d7
  43296e:	(bad)  
  43296f:	ins    BYTE PTR es:[rdi],dx
  432970:	and    BYTE PTR [rbp+0x76],ah
  432973:	outs   dx,BYTE PTR gs:[rsi]
  432975:	je     0x432981
  432977:	add    BYTE PTR [rcx+0x50],dl
  43297a:	(bad)  
  43297b:	jae    0x4329f0
  43297d:	push   rbx
  43297e:	imul   esp,DWORD PTR [rdi+0x6e],0x3a736c61
  432985:	add    BYTE PTR [rcx+0x50],dl
  432988:	jb     0x4329f9
  43298a:	addr32 jb 0x4329ee
  43298d:	ins    DWORD PTR es:[rdi],dx
  43298e:	push   rbx
  43298f:	imul   esp,DWORD PTR [rdi+0x6e],0x3a736c61
  432996:	add    BYTE PTR [rcx+0x43],dl
  432999:	(bad)  
  43299a:	je     0x4329ff
  43299c:	push   0x63737953
  4329a1:	(bad)  
  4329a2:	ins    BYTE PTR es:[rdi],dx
  4329a3:	ins    BYTE PTR es:[rdi],dx
  4329a4:	jae    0x4329e0
  4329a6:	add    BYTE PTR [rax],al
  4329a8:	push   rbp
  4329a9:	outs   dx,BYTE PTR ds:[rsi]
  4329aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4329ae:	outs   dx,BYTE PTR ds:[rsi]
  4329af:	and    BYTE PTR [rbx+0x61],ah
  4329b2:	je     0x432a17
  4329b4:	push   0x7379732d
  4329b9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4329bc:	ins    BYTE PTR es:[rdi],dx
  4329bd:	jae    0x4329df
  4329bf:	ins    DWORD PTR es:[rdi],dx
  4329c0:	outs   dx,DWORD PTR ds:[rsi]
  4329c1:	fs and BYTE PTR gs:[rdx+0x65],dh
  4329c6:	jno    0x432a3d
  4329c8:	gs jae 0x432a3f
  4329cb:	gs cmp ah,BYTE PTR fs:[rax]
  4329cf:	and    eax,0x71000a73
  4329d4:	jne    0x432a3f
  4329d6:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4329d9:	jo     0x432a50
  4329db:	jae    0x432a45
  4329dd:	add    BYTE PTR [rcx+0x53],dl
  4329e0:	je     0x432a43
  4329e2:	jb     0x432a58
  4329e4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4329e6:	movsxd ebp,DWORD PTR [r11+0x4d]
  4329ea:	outs   dx,DWORD PTR ds:[rsi]
  4329eb:	fs add BYTE PTR gs:[rbx+0x6e],bl
  4329f0:	outs   dx,DWORD PTR ds:[rsi]
  4329f1:	(bad)  
  4329f2:	movsxd ebp,DWORD PTR [rbx+0x20]
  4329f5:	ins    DWORD PTR es:[rdi],dx
  4329f6:	outs   dx,DWORD PTR ds:[rsi]
  4329f7:	fs and BYTE PTR gs:[rbp+0x6e],ah
  4329fc:	(bad)  
  4329fd:	(bad)  
  4329fe:	ins    BYTE PTR es:[rdi],dx
  4329ff:	gs fs pop rbp
  432a02:	or     al,BYTE PTR [rax]
  432a04:	push   rcx
  432a05:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  432a07:	outs   dx,BYTE PTR ds:[rsi]
  432a08:	push   rbx
  432a09:	je     0x432a7a
  432a0b:	jo     0x432a47
  432a0d:	add    BYTE PTR [rax],al
  432a0f:	add    BYTE PTR [rbp+0x6e],dl
  432a12:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432a16:	outs   dx,BYTE PTR ds:[rsi]
  432a17:	and    BYTE PTR [rsi+0x6f],ch
  432a1a:	outs   dx,BYTE PTR ds:[rsi]
  432a1b:	sub    eax,0x706f7473
  432a20:	and    BYTE PTR [rbp+0x6f],ch
  432a23:	fs and BYTE PTR gs:[rdx+0x65],dh
  432a28:	jno    0x432a9f
  432a2a:	gs jae 0x432aa1
  432a2d:	gs cmp ah,BYTE PTR fs:[rax]
  432a31:	and    eax,0x53000a73
  432a36:	gs je  0x432aad
  432a39:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  432a40:	ins    DWORD PTR es:[rdi],dx
  432a41:	outs   dx,DWORD PTR ds:[rsi]
  432a42:	fs and BYTE PTR gs:[rsi+0x61],ah
  432a47:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x255b000a
  432a4f:	jae    0x432a71
  432a51:	ins    DWORD PTR es:[rdi],dx
  432a52:	outs   dx,DWORD PTR ds:[rsi]
  432a53:	fs and BYTE PTR gs:[rbp+0x6e],ah
  432a58:	(bad)  
  432a59:	(bad)  
  432a5a:	ins    BYTE PTR es:[rdi],dx
  432a5b:	gs fs pop rbp
  432a5e:	or     al,BYTE PTR [rax]
  432a60:	push   rcx
  432a61:	imul   r14d,DWORD PTR [rbx+0x61],0x52656c62
  432a69:	(bad)  
  432a6a:	outs   dx,BYTE PTR ds:[rsi]
  432a6b:	outs   dx,DWORD PTR fs:[rsi]
  432a6d:	ins    DWORD PTR es:[rdi],dx
  432a6e:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  432a75:	cmp    al,BYTE PTR [rax]
  432a77:	add    BYTE PTR [rbx+0x61],bl
  432a7a:	fs fs jb 0x432ae3
  432a7e:	jae    0x432af3
  432a80:	and    BYTE PTR [rbx+0x70],dh
  432a83:	(bad)  
  432a84:	movsxd esp,DWORD PTR [rbp+0x20]
  432a87:	jb     0x432aea
  432a89:	outs   dx,BYTE PTR ds:[rsi]
  432a8a:	outs   dx,DWORD PTR fs:[rsi]
  432a8c:	ins    DWORD PTR es:[rdi],dx
  432a8d:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  432a94:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  432a98:	(bad)  
  432a99:	(bad)  
  432a9a:	ins    BYTE PTR es:[rdi],dx
  432a9b:	gs fs pop rbp
  432a9e:	or     al,BYTE PTR [rax]
  432aa0:	pop    rbx
  432aa1:	(bad)  
  432aa2:	fs fs jb 0x432b0b
  432aa6:	jae    0x432b1b
  432aa8:	and    BYTE PTR [rbx+0x70],dh
  432aab:	(bad)  
  432aac:	movsxd esp,DWORD PTR [rbp+0x20]
  432aaf:	jb     0x432b12
  432ab1:	outs   dx,BYTE PTR ds:[rsi]
  432ab2:	outs   dx,DWORD PTR fs:[rsi]
  432ab4:	ins    DWORD PTR es:[rdi],dx
  432ab5:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  432abc:	and    BYTE PTR [rbp+0x6e],ah
  432abf:	(bad)  
  432ac0:	(bad)  
  432ac1:	ins    BYTE PTR es:[rdi],dx
  432ac2:	gs fs pop rbp
  432ac5:	or     al,BYTE PTR [rax]
  432ac7:	rex.RB
  432ac8:	cs push rbp
  432aca:	outs   dx,BYTE PTR ds:[rsi]
  432acb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432acf:	outs   dx,BYTE PTR ds:[rsi]
  432ad0:	and    BYTE PTR [rcx+0x41],dl
  432ad3:	outs   dx,BYTE PTR gs:[esi]
  432ad6:	je     0x432af8
  432ad8:	jbe    0x432b3b
  432ada:	ins    BYTE PTR es:[rdi],dx
  432adb:	jne    0x432b42
  432add:	add    BYTE PTR [rbx+0x25],bl
  432ae0:	jae    0x432b02
  432ae2:	(bad)  
  432ae3:	outs   dx,BYTE PTR gs:[esi]
  432ae6:	je     0x432b45
  432ae8:	or     al,BYTE PTR [rax]
  432aea:	push   rcx
  432aeb:	(bad)  
  432aec:	je     0x432b60
  432aee:	(bad)  
  432aef:	movsxd esp,DWORD PTR [rbp+0x3a]
  432af2:	add    BYTE PTR [rbp+0x2e],al
  432af5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  432af7:	and    BYTE PTR [rbx+0x75],dh
  432afa:	movsxd ebp,DWORD PTR [rax+0x20]
  432afd:	je     0x432b67
  432aff:	jb     0x432b66
  432b01:	(bad)  
  432b02:	fs add BYTE PTR cs:[rdx+0x74],ah
  432b07:	jae    0x432b09
  432b09:	jo     0x432b7f
  432b0b:	add    BYTE PTR [rdi+0x66],ch
  432b0e:	data16 add BYTE PTR [rdx+0x74],ah
  432b12:	jae    0x432b4e
  432b14:	jae    0x432b7f
  432b16:	jp     0x432b7d
  432b18:	cmp    eax,0x3a747000
  432b1d:	jae    0x432b88
  432b1f:	jp     0x432b86
  432b21:	cmp    eax,0x0
  432b26:	add    BYTE PTR [rax],al
  432b28:	rex.RB
  432b29:	cs rex.X (bad) 
  432b2c:	and    BYTE PTR fs:[rcx+0x62],dl
  432b30:	je     0x432ba4
  432b32:	(bad)  
  432b33:	movsxd esp,DWORD PTR [rbp+0x20]
  432b36:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432b39:	imul   sp,WORD PTR [rdi+0x75],0x6172
  432b3f:	je     0x432baa
  432b41:	outs   dx,DWORD PTR ds:[rsi]
  432b42:	outs   dx,BYTE PTR ds:[rsi]
  432b43:	and    BYTE PTR [rdi+0x70],ch
  432b46:	je     0x432bb1
  432b48:	outs   dx,DWORD PTR ds:[rsi]
  432b49:	outs   dx,BYTE PTR ds:[rsi]
  432b4a:	add    BYTE PTR cs:[rax],al
  432b4d:	add    BYTE PTR [rax],al
  432b4f:	add    BYTE PTR [rbp+0x2e],al
  432b52:	push   rbp
  432b53:	outs   dx,BYTE PTR ds:[rsi]
  432b54:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432b58:	outs   dx,BYTE PTR ds:[rsi]
  432b59:	and    BYTE PTR [rax+rbp*2+0x72],dh
  432b5d:	gs (bad) 
  432b5f:	fs sub eax,0x6e657665
  432b65:	je     0x432bda
  432b67:	and    BYTE PTR [rbp+0x6f],ch
  432b6a:	fs and BYTE PTR gs:[rdx+0x65],dh
  432b6f:	jno    0x432be6
  432b71:	gs jae 0x432be8
  432b74:	gs cmp ah,BYTE PTR fs:[rax]
  432b78:	and    eax,0x5b000a73
  432b7d:	je     0x432be7
  432b7f:	jb     0x432be6
  432b81:	(bad)  
  432b82:	and    BYTE PTR fs:[rbp+0x76],ah
  432b86:	outs   dx,BYTE PTR gs:[rsi]
  432b88:	je     0x432bfd
  432b8a:	and    BYTE PTR [rcx+0x72],ah
  432b8d:	and    BYTE PTR gs:[rsi+0x6f],ch
  432b91:	ja     0x432bb3
  432b93:	and    eax,0xa5d73
  432b98:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
  432ba0:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  432ba4:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  432ba8:	movsxd ebp,DWORD PTR [rcx+0x6e]
  432bab:	and    BYTE PTR [ecx+0x6e],ch
  432baf:	and    BYTE PTR [rbp+0x66],ah
  432bb2:	movsxd si,DWORD PTR gs:[rsp+rbp*1+0x20]
  432bb8:	ins    BYTE PTR es:[rdi],dx
  432bb9:	gs (bad) 
  432bbb:	jbe    0x432c26
  432bbd:	outs   dx,BYTE PTR ds:[rsi]
  432bbe:	and    BYTE PTR [edi+0x64],ah
  432bc2:	(bad)
  432bc7:	gs jb  0x432bea
  432bca:	(bad)  
  432bcb:	je     0x432c41
  432bcd:	(bad)  
  432bce:	movsxd ebp,DWORD PTR [rax+0x65]
  432bd1:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  432bd6:	je     0x432c40
  432bd8:	and    BYTE PTR gs:[rax+0x72],dh
  432bdc:	outs   dx,DWORD PTR ds:[rsi]
  432bdd:	movsxd esp,DWORD PTR [rbp+0x73]
  432be0:	jae    0x432bec
  432be2:	add    BYTE PTR [rax],al
  432be4:	add    BYTE PTR [rax],al
  432be6:	add    BYTE PTR [rax],al
  432be8:	push   rax
  432be9:	gs jb  0x432c5f
  432bec:	imul   esi,DWORD PTR [rbx+0x74],0x20746e65
  432bf3:	movsxd ebp,DWORD PTR [rdi+0x6d]
  432bf6:	ins    DWORD PTR es:[rdi],dx
  432bf7:	(bad)  
  432bf8:	outs   dx,BYTE PTR ds:[rsi]
  432bf9:	fs jae 0x432c1c
  432bfc:	(bad)  
  432bfd:	jb     0x432c64
  432bff:	and    BYTE PTR [rax+0x72],dh
  432c02:	gs jae 0x432c6a
  432c05:	outs   dx,BYTE PTR ds:[rsi]
  432c06:	je     0x432c34
  432c08:	and    BYTE PTR [rbp+riz*2+0x61],ch
  432c0c:	jbe    0x432c77
  432c0e:	outs   dx,BYTE PTR ds:[rsi]
  432c0f:	and    BYTE PTR [edi+0x64],ah
  432c13:	(bad)
  432c18:	gs jb  0x432c3b
  432c1b:	(bad)  
  432c1c:	je     0x432c92
  432c1e:	(bad)  
  432c1f:	movsxd ebp,DWORD PTR [rax+0x65]
  432c22:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  432c27:	je     0x432c91
  432c29:	and    BYTE PTR gs:[rax+0x72],dh
  432c2d:	outs   dx,DWORD PTR ds:[rsi]
  432c2e:	movsxd esp,DWORD PTR [rbp+0x73]
  432c31:	jae    0x432c3d
  432c33:	add    BYTE PTR [rsi+0x6f],al
  432c36:	jb     0x432c9b
  432c38:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6e20
  432c3f:	sub    eax,0x706f7473
  432c44:	and    BYTE PTR [rbp+0x6f],ch
  432c47:	fs or  al,BYTE PTR gs:[rax]
  432c4b:	add    BYTE PTR [rax],al
  432c4d:	add    BYTE PTR [rax],al
  432c4f:	add    BYTE PTR [rax+rsi*2+0x2d],dh
  432c53:	ds ins BYTE PTR es:[rdi],dx
  432c55:	(bad)  
  432c56:	jae    0x432ccc
  432c58:	pop    rdi
  432c59:	jae    0x432ccf
  432c5b:	(bad)  
  432c5c:	je     0x432cd3
  432c5e:	jae    0x432c8e
  432c60:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  432c64:	and    BYTE PTR [rcx],ah
  432c66:	cmp    eax,0x52415420
  432c6b:	rex.RXB
  432c6c:	rex.RB push r12
  432c6e:	pop    rdi
  432c6f:	push   rdi
  432c70:	rex.B
  432c71:	rex.WB push r12
  432c73:	rex.WXB
  432c74:	rex.WB
  432c75:	rex.WRX
  432c76:	rex.R pop rdi
  432c78:	rex.WB
  432c79:	rex.RXB
  432c7a:	rex.WRX
  432c7b:	rex.WRXB push r10
  432c7d:	add    BYTE PTR [r11+0x75],r12b
  432c81:	jb     0x432cf5
  432c83:	outs   dx,BYTE PTR gs:[rsi]
  432c85:	je     0x432ce6
  432c87:	je     0x432cf1
  432c89:	jb     0x432cf0
  432c8b:	(bad)  
  432c8c:	and    BYTE PTR fs:[rcx],ah
  432c8f:	cmp    eax,0x4c554e20
  432c94:	rex.WR add BYTE PTR [rsi+0x6f],r8b
  432c98:	jne    0x432d08
  432c9a:	and    BYTE PTR fs:[rdx+0x72],ah
  432c9e:	gs (bad) 
  432ca0:	imul   esi,DWORD PTR [rax+0x6f],0x69
  432ca4:	outs   dx,BYTE PTR ds:[rsi]
  432ca5:	je     0x432cc7
  432ca7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432caa:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0xa2e6e
  432cb3:	movsxd ebp,DWORD PTR [rbp+0x64]
  432cb6:	jae    0x432cf2
	...
  432cc0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  432cc2:	jne    0x432d32
  432cc4:	and    BYTE PTR fs:[rdx+0x72],ah
  432cc8:	gs (bad) 
  432cca:	imul   esi,DWORD PTR [rax+0x6f],0x69
  432cce:	outs   dx,BYTE PTR ds:[rsi]
  432ccf:	je     0x432cf1
  432cd1:	movsxd ebp,DWORD PTR [rdi+0x6d]
  432cd4:	ins    DWORD PTR es:[rdi],dx
  432cd5:	(bad)  
  432cd6:	outs   dx,BYTE PTR ds:[rsi]
  432cd7:	fs jae 0x432cfa
  432cda:	and    eax,0xa2e73
  432cdf:	push   rbp
  432ce0:	outs   dx,BYTE PTR ds:[rsi]
  432ce1:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432ce5:	outs   dx,BYTE PTR ds:[rsi]
  432ce6:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
  432cea:	outs   dx,BYTE PTR gs:[rsi]
  432cec:	and    BYTE PTR [rip+0x69202c63],ah        # 0x69635955
  432cf2:	outs   dx,BYTE PTR ds:[esi]
  432cf4:	outs   dx,DWORD PTR ds:[rsi]
  432cf5:	jb     0x432d60
  432cf7:	outs   dx,BYTE PTR ds:[rsi]
  432cf8:	or     al,BYTE PTR cs:[eax]
  432cfc:	imul   rbp,QWORD PTR [r12+r13*2+0x69],0x6120676e
  432d05:	ins    BYTE PTR es:[rdi],dx
  432d06:	ins    BYTE PTR es:[rdi],dx
  432d07:	and    BYTE PTR [rcx+0x6e],ch
  432d0a:	data16 gs jb 0x432d77
  432d0e:	outs   dx,DWORD PTR ds:[rsi]
  432d0f:	jb     0x432d84
  432d11:	or     al,BYTE PTR [rax]
  432d13:	rex.RXB
  432d14:	rex.R
  432d15:	rex.X jae 0x432d7d
  432d18:	jb     0x432d90
  432d1a:	gs jb  0x432d3d
  432d1d:	jb     0x432d84
  432d1f:	jae    0x432d95
  432d21:	(bad)  
  432d22:	jb     0x432d98
  432d24:	imul   ebp,DWORD PTR [rsi+0x67],0x4151000a
  432d2b:	outs   dx,BYTE PTR gs:[esi]
  432d2e:	je     0x432d6a
	...
  432d38:	rex.RB
  432d39:	cs rex.WRB jne 0x432db0
  432d3d:	je     0x432d5f
  432d3f:	jae    0x432da6
  432d41:	ins    BYTE PTR es:[rdi],dx
  432d42:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  432d47:	and    BYTE PTR [rbx+0x69],dh
  432d4a:	outs   dx,BYTE PTR ds:[rsi]
  432d4b:	ins    BYTE PTR es:[edi],dx
  432d4d:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  432d52:	gs (bad) 
  432d54:	fs add BYTE PTR cs:[rcx+0x62],dl
  432d59:	je     0x432dcd
  432d5b:	(bad)  
  432d5c:	movsxd esp,DWORD PTR [rbp+0x2d]
  432d5f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432d62:	data16 cmp al,BYTE PTR [rax]
  432d65:	rex.RB
  432d66:	cs rex.X (bad) 
  432d69:	and    BYTE PTR fs:[rbx+0x69],dh
  432d6d:	jp     0x432dd4
  432d6f:	and    BYTE PTR [rsi+0x61],dh
  432d72:	ins    BYTE PTR es:[rdi],dx
  432d73:	jne    0x432dda
  432d75:	add    BYTE PTR cs:[rcx+0x54],dl
  432d79:	push   0x64616572
  432d7e:	rex.RB jbe 0x432de6
  432d81:	outs   dx,BYTE PTR ds:[rsi]
  432d82:	je     0x432df7
  432d84:	cmp    al,BYTE PTR [rax]
  432d86:	rex.R
  432d87:	gs je  0x432deb
  432d8a:	movsxd ebp,DWORD PTR [rax+0x69]
  432d8d:	outs   dx,BYTE PTR ds:[rsi]
  432d8e:	and    BYTE PTR [esi+0x72],ah
  432d92:	outs   dx,DWORD PTR ds:[rsi]
  432d93:	ins    DWORD PTR es:[rdi],dx
  432d94:	and    BYTE PTR [rax+0x72],dh
  432d97:	outs   dx,DWORD PTR ds:[rsi]
  432d98:	movsxd esp,DWORD PTR [rbp+0x73]
  432d9b:	jae    0x432dbd
  432d9d:	and    eax,0xa64
  432da2:	add    BYTE PTR [rax],al
  432da4:	(bad)  
  432da5:	cdq    
  432da6:	std    
  432da7:	jmp    FWORD PTR [rbp-0x52000271]
  432dad:	(bad)  
  432dae:	std    
  432daf:	jmp    FWORD PTR [rbp-0x52000271]
  432db5:	(bad)  
  432db6:	std    
  432db7:	jmp    FWORD PTR [rbp-0x52000271]
  432dbd:	(bad)  
  432dbe:	std    
  432dbf:	jmp    FWORD PTR [rbp-0x52000271]
  432dc5:	(bad)  
  432dc6:	std    
  432dc7:	jmp    FWORD PTR [rbp-0x52000271]
  432dcd:	(bad)  
  432dce:	std    
  432dcf:	jmp    FWORD PTR [rbp-0x52000271]
  432dd5:	(bad)  
  432dd6:	std    
  432dd7:	jmp    FWORD PTR [rbp-0x52000271]
  432ddd:	(bad)  
  432dde:	std    
  432ddf:	jmp    FWORD PTR [rbp-0x52000271]
  432de5:	(bad)  
  432de6:	std    
  432de7:	jmp    FWORD PTR [rbp-0x52000271]
  432ded:	(bad)  
  432dee:	std    
  432def:	jmp    FWORD PTR [rbp-0x52000271]
  432df5:	(bad)  
  432df6:	std    
  432df7:	jmp    FWORD PTR [rbp-0x52000271]
  432dfd:	(bad)  
  432dfe:	std    
  432dff:	jmp    FWORD PTR [rbp-0x52000271]
  432e05:	(bad)  
  432e06:	std    
  432e07:	jmp    FWORD PTR [rbp-0x52000271]
  432e0d:	(bad)  
  432e0e:	std    
  432e0f:	jmp    FWORD PTR [rbp-0x52000271]
  432e15:	(bad)  
  432e16:	std    
  432e17:	jmp    FWORD PTR [rbp-0x3000271]
  432e1d:	xchg   edi,eax
  432e1e:	std    
  432e1f:	jmp    FWORD PTR [rbp-0x52000271]
  432e25:	(bad)  
  432e26:	std    
  432e27:	jmp    FWORD PTR [rbp+0x5cfffd8f]
  432e2d:	xchg   esi,eax
  432e2e:	std    
  432e2f:	call   FWORD PTR [rdx*4-0x70520003]
  432e36:	std    
  432e37:	jmp    FWORD PTR [rbp-0x73000271]
  432e3d:	xchg   edi,eax
  432e3e:	std    
  432e3f:	jmp    FWORD PTR [rsi+rdx*4-0x70520003]
  432e46:	std    
  432e47:	jmp    FWORD PTR [rbp-0x52000271]
  432e4d:	(bad)  
  432e4e:	std    
  432e4f:	jmp    FWORD PTR [rbp+0x2cfffd8f]
  432e55:	xchg   edx,eax
  432e56:	std    
  432e57:	jmp    FWORD PTR [rbp-0x52000271]
  432e5d:	(bad)  
  432e5e:	std    
  432e5f:	jmp    FWORD PTR [rbp+0x7ffffd8f]
  432e65:	xchg   ecx,eax
  432e66:	std    
  432e67:	call   FWORD PTR [rsp+rdx*4]
  432e6a:	std    
  432e6b:	dec    esp
  432e6d:	xchg   ebx,eax
  432e6e:	std    
  432e6f:	dec    esp
  432e71:	xchg   edx,eax
  432e72:	std    
  432e73:	jmp    FWORD PTR [rbp-0x52000271]
  432e79:	(bad)  
  432e7a:	std    
  432e7b:	jmp    FWORD PTR [rbp-0x73000271]
  432e81:	xchg   edx,eax
  432e82:	std    
  432e83:	jmp    FWORD PTR [rbp-0x53000271]
  432e89:	xchg   esp,eax
  432e8a:	std    
  432e8b:	jmp    FWORD PTR [rbp-0x52000271]
  432e91:	(bad)  
  432e92:	std    
  432e93:	jmp    FWORD PTR [rbp-0x52000271]
  432e99:	(bad)  
  432e9a:	std    
  432e9b:	jmp    FWORD PTR [rbp-0x52000271]
  432ea1:	(bad)  
  432ea2:	std    
  432ea3:	jmp    FWORD PTR [rbp-0x52000271]
  432ea9:	(bad)  
  432eaa:	std    
  432eab:	jmp    FWORD PTR [rbx+rdx*4-0x70520003]
  432eb2:	std    
  432eb3:	jmp    FWORD PTR [rbp-0x52000271]
  432eb9:	(bad)  
  432eba:	std    
  432ebb:	call   FWORD PTR [rcx+rdx*4]
  432ebe:	std    
  432ebf:	jmp    FWORD PTR [rbp-0x52000271]
  432ec5:	(bad)  
  432ec6:	std    
  432ec7:	jmp    FWORD PTR [rbp-0x4e000271]
  432ecd:	nop
  432ece:	std    
  432ecf:	jmp    FWORD PTR [rbp+0x50fffd8f]
  432ed5:	nop
  432ed6:	std    
  432ed7:	jmp    FWORD PTR [rbp-0x52000271]
  432edd:	(bad)  
  432ede:	std    
  432edf:	jmp    FWORD PTR [rbp+0x3cfffd8f]
  432ee5:	nop
  432ee6:	std    
  432ee7:	jmp    FWORD PTR [rbp+0x1dfffd8f]
  432eed:	nop
  432eee:	std    
  432eef:	jmp    FWORD PTR [rbp-0x52000271]
  432ef5:	(bad)  
  432ef6:	std    
  432ef7:	dec    DWORD PTR [rax+rdx*4]
  432efa:	std    
  432efb:	jmp    FWORD PTR [rbp-0x52000271]
  432f01:	(bad)  
  432f02:	std    
  432f03:	jmp    FWORD PTR [rbp-0x53000271]
  432f09:	xchg   esp,eax
  432f0a:	std    
  432f0b:	inc    DWORD PTR [rax]
  432f0d:	add    BYTE PTR [rax],al
  432f0f:	add    BYTE PTR [rax+0x61],ch
  432f12:	outs   dx,BYTE PTR ds:[rsi]
  432f13:	fs ins BYTE PTR es:[rdi],dx
  432f15:	imul   ebp,DWORD PTR [rsi+0x67],0x736f7020
  432f1c:	jae    0x432f87
  432f1e:	(bad)  
  432f1f:	ins    BYTE PTR es:[rdi],dx
  432f20:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
  432f25:	addr32 gs je 0x432f49
  432f29:	gs jbe 0x432f91
  432f2c:	outs   dx,BYTE PTR ds:[rsi]
  432f2d:	je     0x432f39
  432f2f:	add    BYTE PTR [rdi+0x44],al
  432f32:	rex.X and BYTE PTR [rsi+0x6f],bpl
  432f36:	je     0x432f58
  432f38:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432f3b:	outs   dx,BYTE PTR ds:[rsi]
  432f3c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  432f41:	cmp    esp,DWORD PTR [rax]
  432f43:	outs   dx,WORD PTR ds:[rsi]
  432f45:	jb     0x432fbe
  432f47:	(bad)  
  432f48:	jb     0x432fae
  432f4a:	imul   ebp,DWORD PTR [rsi+0x67],0x65766520
  432f51:	outs   dx,BYTE PTR ds:[rsi]
  432f52:	je     0x432f74
  432f54:	and    eax,0x6f662064
  432f59:	jb     0x432f7b
  432f5b:	pop    rbx
  432f5c:	and    eax,0xa5d73
	...
  432f7d:	add    BYTE PTR [rax],al
  432f7f:	add    BYTE PTR [rcx+0x6e],ch
  432f82:	je     0x432fa4
  432f84:	jno    0x432ffb
  432f86:	gs jne 0x432fee
  432f89:	pop    rdi
  432f8a:	jae    0x433000
  432f8c:	outs   dx,DWORD PTR ds:[rsi]
  432f8d:	jo     0x432fee
  432f8f:	jb     0x432ff6
  432f91:	jo     0x432fff
  432f93:	jns    0x432ff4
  432f95:	movsxd esp,DWORD PTR [rcx+0x6c]
  432f98:	ins    BYTE PTR es:[rdi],dx
  432f99:	(bad)  
  432f9b:	movsxd ebp,DWORD PTR [rbx+0x28]
  432f9e:	imul   ebp,DWORD PTR [rsi+0x66],0x6f697265
  432fa5:	jb     0x433006
  432fa7:	ins    BYTE PTR es:[rdi],dx
  432fa8:	imul   esi,DWORD PTR [rbx+0x74],0x746e655f
  432faf:	jb     0x43302a
  432fb1:	sub    ch,BYTE PTR [rax+riz*1]
  432fb4:	jbe    0x433025
  432fb6:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x0
  432fbe:	add    BYTE PTR [rax],al
  432fc0:	jbe    0x433031
  432fc2:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x6c646e61
  432fca:	gs pop rdi
  432fcc:	jae    0x433042
  432fce:	(bad)  
  432fcf:	je     0x433046
  432fd1:	jae    0x432ffb
  432fd3:	movsxd ebp,DWORD PTR [rax+0x61]
  432fd6:	jb     0x433002
  432fd8:	sub    DWORD PTR [rax],eax
	...
  432ffe:	add    BYTE PTR [rax],al
  433000:	imul   ebp,DWORD PTR [rsi+0x74],0x4556202a
  433007:	rex.XB pop r15
  433009:	imul   ebp,DWORD PTR [rsi+0x74],0x6975715f
  433010:	movsxd ebp,DWORD PTR [rbx+0x5f]
  433013:	jo     0x43308a
  433015:	jae    0x43307f
  433017:	sub    BYTE PTR [rsi+0x45],dl
  43301a:	rex.XB pop r15
  43301c:	imul   ebp,DWORD PTR [rsi+0x74],0x69202c2a
  433023:	outs   dx,BYTE PTR ds:[rsi]
  433024:	je     0x433052
  433026:	and    BYTE PTR [rbx+0x6f],ah
  433029:	outs   dx,BYTE PTR ds:[rsi]
  43302a:	jae    0x4330a0
  43302c:	and    BYTE PTR [rbx+0x68],ah
  43302f:	(bad)  
  433030:	jb     0x43305c
  433032:	sub    al,0x20
  433034:	jne    0x4330a4
  433036:	jae    0x4330a1
  433038:	outs   dx,BYTE PTR ds:[esi]
  43303a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43303f:	je     0x43306a
	...
  43304d:	add    BYTE PTR [rax],al
  43304f:	add    BYTE PTR [rcx+0x6e],ch
  433052:	je     0x433074
  433054:	jo     0x4330c8
  433056:	outs   dx,DWORD PTR ds:[rsi]
  433057:	movsxd esp,DWORD PTR [rbp+0x73]
  43305a:	jae    0x4330bb
  43305c:	jae    0x4330c3
  43305e:	jb     0x4330c9
  433060:	(bad)  
  433061:	ins    BYTE PTR es:[rdi],dx
  433062:	pop    rdi
  433063:	gs jbe 0x4330cb
  433066:	outs   dx,BYTE PTR ds:[rsi]
  433067:	je     0x433091
  433069:	sub    DWORD PTR [rax],eax
  43306b:	add    BYTE PTR [rax],al
  43306d:	add    BYTE PTR [rax],al
  43306f:	add    BYTE PTR [rcx+0x6e],ch
  433072:	je     0x433094
  433074:	ins    DWORD PTR es:[rdi],dx
  433075:	(bad)  
  433076:	imul   ebp,DWORD PTR [rsi+0x28],0x2c746e69
  43307d:	and    BYTE PTR [rbx+0x68],ah
  433080:	(bad)  
  433081:	jb     0x4330ad
  433083:	sub    ch,BYTE PTR [rcx]
	...
  43309d:	add    BYTE PTR [rax],al
  43309f:	add    BYTE PTR [rsi+0x6f],dh
  4330a2:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  4330aa:	pop    rdi
  4330ab:	outs   dx,BYTE PTR ds:[rsi]
  4330ac:	outs   dx,DWORD PTR ds:[rsi]
  4330ad:	je     0x433118
  4330af:	pop    di
  4330b1:	gs jbe 0x433119
  4330b4:	outs   dx,BYTE PTR ds:[rsi]
  4330b5:	je     0x433116
  4330b7:	jo     0x433118
  4330b9:	data16 jb 0x433121
  4330bc:	sub    BYTE PTR gs:[rcx+0x75],dh
  4330c0:	gs jne 0x433128
  4330c3:	pop    rdi
  4330c4:	outs   dx,BYTE PTR ds:[rsi]
  4330c5:	outs   dx,DWORD PTR ds:[rsi]
  4330c6:	je     0x433131
  4330c8:	pop    di
  4330ca:	gs jbe 0x433132
  4330cd:	outs   dx,BYTE PTR ds:[rsi]
  4330ce:	je     0x43312f
  4330d0:	jo     0x4330fc
  4330d2:	sub    DWORD PTR [rax],eax
	...
  4330e0:	imul   ebp,DWORD PTR [rsi+0x74],0x65757120
  4330e7:	jne    0x43314e
  4330e9:	pop    rdi
  4330ea:	outs   dx,BYTE PTR ds:[rsi]
  4330eb:	outs   dx,DWORD PTR ds:[rsi]
  4330ec:	je     0x433157
  4330ee:	pop    di
  4330f0:	gs jbe 0x433158
  4330f3:	outs   dx,BYTE PTR ds:[rsi]
  4330f4:	je     0x433155
  4330f6:	jo     0x433157
  4330f8:	ins    BYTE PTR es:[rdi],dx
  4330f9:	outs   dx,BYTE PTR gs:[rsi]
  4330fb:	addr32 je 0x433166
  4330fe:	sub    BYTE PTR [rcx+0x75],dh
  433101:	gs jne 0x433169
  433104:	pop    rdi
  433105:	outs   dx,BYTE PTR ds:[rsi]
  433106:	outs   dx,DWORD PTR ds:[rsi]
  433107:	je     0x433172
  433109:	pop    di
  43310b:	gs jbe 0x433173
  43310e:	outs   dx,BYTE PTR ds:[rsi]
  43310f:	je     0x433170
  433111:	jo     0x43313d
  433113:	sub    DWORD PTR [rax],eax
	...
  43313d:	add    BYTE PTR [rax],al
  43313f:	add    BYTE PTR [rcx+0x6e],ch
  433142:	je     0x433164
  433144:	jno    0x4331bb
  433146:	gs jne 0x4331ae
  433149:	pop    rdi
  43314a:	outs   dx,BYTE PTR ds:[rsi]
  43314b:	outs   dx,DWORD PTR ds:[rsi]
  43314c:	je     0x4331b7
  43314e:	pop    di
  433150:	gs jbe 0x4331b8
  433153:	outs   dx,BYTE PTR ds:[rsi]
  433154:	je     0x4331b5
  433156:	jo     0x4331b7
  433158:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x28657461
  433160:	jno    0x4331d7
  433162:	gs jne 0x4331ca
  433165:	pop    rdi
  433166:	outs   dx,BYTE PTR ds:[rsi]
  433167:	outs   dx,DWORD PTR ds:[rsi]
  433168:	je     0x4331d3
  43316a:	pop    di
  43316c:	gs jbe 0x4331d4
  43316f:	outs   dx,BYTE PTR ds:[rsi]
  433170:	je     0x4331d1
  433172:	jo     0x43319e
  433174:	sub    al,0x20
  433176:	imul   ebp,DWORD PTR [rsi+0x74],0x292a2820
  43317d:	sub    BYTE PTR [rcx+0x75],dh
  433180:	gs jne 0x4331e8
  433183:	pop    rdi
  433184:	outs   dx,BYTE PTR ds:[rsi]
  433185:	outs   dx,DWORD PTR ds:[rsi]
  433186:	je     0x4331f1
  433188:	pop    di
  43318a:	gs jbe 0x4331f2
  43318d:	outs   dx,BYTE PTR ds:[rsi]
  43318e:	je     0x4331ef
  433190:	jo     0x4331bc
  433192:	sub    al,0x20
  433194:	jno    0x43320b
  433196:	gs jne 0x4331fe
  433199:	pop    rdi
  43319a:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x746f6e5f
  4331a2:	imul   esp,DWORD PTR [rsi+0x5f],0x6e657665
  4331a9:	je     0x43320a
  4331ab:	jo     0x4331d7
  4331ad:	sub    al,0x20
  4331af:	outs   dx,BYTE PTR ds:[rsi]
  4331b0:	outs   dx,DWORD PTR ds:[rsi]
  4331b1:	je     0x43321c
  4331b3:	pop    di
  4331b5:	gs jbe 0x43321d
  4331b8:	outs   dx,BYTE PTR ds:[rsi]
  4331b9:	je     0x43321a
  4331bb:	jo     0x4331e9
  4331bd:	and    BYTE PTR [rsi+0x6f],dh
  4331c0:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x6f76202c
  4331c8:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x0
	...
  433200:	jbe    0x433271
  433202:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  43320a:	pop    rdi
  43320b:	outs   dx,BYTE PTR ds:[rsi]
  43320c:	outs   dx,DWORD PTR ds:[rsi]
  43320d:	je     0x433278
  43320f:	pop    di
  433211:	gs jbe 0x433279
  433214:	outs   dx,BYTE PTR ds:[rsi]
  433215:	je     0x433276
  433217:	jo     0x433278
  433219:	jb     0x433280
  43321b:	ins    DWORD PTR es:[rdi],dx
  43321c:	outs   dx,DWORD PTR ds:[rsi]
  43321d:	jbe    0x433284
  43321f:	pop    rdi
  433220:	gs ins BYTE PTR es:[rdi],dx
  433222:	gs ins DWORD PTR es:[rdi],dx
  433224:	sub    BYTE PTR [rcx+0x75],dh
  433227:	gs jne 0x43328f
  43322a:	pop    rdi
  43322b:	outs   dx,BYTE PTR ds:[rsi]
  43322c:	outs   dx,DWORD PTR ds:[rsi]
  43322d:	je     0x433298
  43322f:	pop    di
  433231:	gs jbe 0x433299
  433234:	outs   dx,BYTE PTR ds:[rsi]
  433235:	je     0x433296
  433237:	jo     0x433263
  433239:	sub    al,0x20
  43323b:	jno    0x4332b2
  43323d:	gs jne 0x4332a5
  433240:	pop    rdi
  433241:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x746f6e5f
  433249:	imul   esp,DWORD PTR [rsi+0x5f],0x6e657665
  433250:	je     0x4332b1
  433252:	jo     0x43327e
  433254:	sub    DWORD PTR [rax],eax
	...
  43325e:	add    BYTE PTR [rax],al
  433260:	imul   ebp,DWORD PTR [rsi+0x74],0x65757120
  433267:	jne    0x4332ce
  433269:	pop    rdi
  43326a:	outs   dx,BYTE PTR ds:[rsi]
  43326b:	outs   dx,DWORD PTR ds:[rsi]
  43326c:	je     0x4332d7
  43326e:	pop    di
  433270:	gs jbe 0x4332d8
  433273:	outs   dx,BYTE PTR ds:[rsi]
  433274:	je     0x4332d5
  433276:	jo     0x4332d7
  433278:	imul   esi,DWORD PTR [rbx+0x5f],0x74706d65
  43327f:	jns    0x4332a9
  433281:	jno    0x4332f8
  433283:	gs jne 0x4332eb
  433286:	pop    rdi
  433287:	outs   dx,BYTE PTR ds:[rsi]
  433288:	outs   dx,DWORD PTR ds:[rsi]
  433289:	je     0x4332f4
  43328b:	pop    di
  43328d:	gs jbe 0x4332f5
  433290:	outs   dx,BYTE PTR ds:[rsi]
  433291:	je     0x4332f2
  433293:	jo     0x4332bf
  433295:	sub    DWORD PTR [rax],eax
	...
  43329f:	add    BYTE PTR [rsi+0x6f],ch
  4332a2:	je     0x43330d
  4332a4:	pop    di
  4332a6:	gs jbe 0x43330e
  4332a9:	outs   dx,BYTE PTR ds:[rsi]
  4332aa:	je     0x4332d6
  4332ac:	and    BYTE PTR [rcx+0x75],dh
  4332af:	gs jne 0x433317
  4332b2:	pop    rdi
  4332b3:	outs   dx,BYTE PTR ds:[rsi]
  4332b4:	outs   dx,DWORD PTR ds:[rsi]
  4332b5:	je     0x433320
  4332b7:	pop    di
  4332b9:	gs jbe 0x433321
  4332bc:	outs   dx,BYTE PTR ds:[rsi]
  4332bd:	je     0x43331e
  4332bf:	jo     0x433320
  4332c1:	jo     0x433328
  4332c3:	imul   ebp,DWORD PTR gs:[rax],0x71
  4332c7:	jne    0x43332e
  4332c9:	jne    0x433330
  4332cb:	pop    rdi
  4332cc:	outs   dx,BYTE PTR ds:[rsi]
  4332cd:	outs   dx,DWORD PTR ds:[rsi]
  4332ce:	je     0x433339
  4332d0:	pop    di
  4332d2:	gs jbe 0x43333a
  4332d5:	outs   dx,BYTE PTR ds:[rsi]
  4332d6:	je     0x433337
  4332d8:	jo     0x433304
  4332da:	sub    DWORD PTR [rax],eax
  4332dc:	add    BYTE PTR [rax],al
  4332de:	add    BYTE PTR [rax],al
  4332e0:	outs   dx,BYTE PTR ds:[rsi]
  4332e1:	outs   dx,DWORD PTR ds:[rsi]
  4332e2:	je     0x43334d
  4332e4:	pop    di
  4332e6:	gs jbe 0x43334e
  4332e9:	outs   dx,BYTE PTR ds:[rsi]
  4332ea:	je     0x433316
  4332ec:	and    BYTE PTR [rcx+0x75],dh
  4332ef:	gs jne 0x433357
  4332f2:	pop    rdi
  4332f3:	outs   dx,BYTE PTR ds:[rsi]
  4332f4:	outs   dx,DWORD PTR ds:[rsi]
  4332f5:	je     0x433360
  4332f7:	pop    di
  4332f9:	gs jbe 0x433361
  4332fc:	outs   dx,BYTE PTR ds:[rsi]
  4332fd:	je     0x43335e
  4332ff:	jo     0x433360
  433301:	fs gs jno 0x43337a
  433305:	sub    BYTE PTR gs:[rcx+0x75],dh
  433309:	gs jne 0x433371
  43330c:	pop    rdi
  43330d:	outs   dx,BYTE PTR ds:[rsi]
  43330e:	outs   dx,DWORD PTR ds:[rsi]
  43330f:	je     0x43337a
  433311:	pop    di
  433313:	gs jbe 0x43337b
  433316:	outs   dx,BYTE PTR ds:[rsi]
  433317:	je     0x433378
  433319:	jo     0x433345
  43331b:	sub    DWORD PTR [rax],eax
	...
  43333d:	add    BYTE PTR [rax],al
  43333f:	add    BYTE PTR [rsi+0x6f],dh
  433342:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  43334a:	pop    rdi
  43334b:	outs   dx,BYTE PTR ds:[rsi]
  43334c:	outs   dx,DWORD PTR ds:[rsi]
  43334d:	je     0x4333b8
  43334f:	pop    di
  433351:	gs jbe 0x4333b9
  433354:	outs   dx,BYTE PTR ds:[rsi]
  433355:	je     0x4333b6
  433357:	jo     0x4333b8
  433359:	outs   dx,BYTE PTR gs:[rsi]
  43335b:	jno    0x4333d2
  43335d:	sub    BYTE PTR gs:[rcx+0x75],dh
  433361:	gs jne 0x4333c9
  433364:	pop    rdi
  433365:	outs   dx,BYTE PTR ds:[rsi]
  433366:	outs   dx,DWORD PTR ds:[rsi]
  433367:	je     0x4333d2
  433369:	pop    di
  43336b:	gs jbe 0x4333d3
  43336e:	outs   dx,BYTE PTR ds:[rsi]
  43336f:	je     0x4333d0
  433371:	jo     0x43339d
  433373:	sub    al,0x20
  433375:	outs   dx,BYTE PTR ds:[rsi]
  433376:	outs   dx,DWORD PTR ds:[rsi]
  433377:	je     0x4333e2
  433379:	pop    di
  43337b:	gs jbe 0x4333e3
  43337e:	outs   dx,BYTE PTR ds:[rsi]
  43337f:	je     0x4333e0
  433381:	jo     0x4333ac
  433383:	add    BYTE PTR [rcx+0x75],ah
  433386:	js     0x4333fe
  433388:	add    BYTE PTR [rdx+0x74],ah
  43338b:	jb     0x4333ee
  43338d:	movsxd esp,DWORD PTR [rbp+0x0]
  433390:	(bad)  
  433391:	je     0x433405
  433393:	(bad)  
  433394:	movsxd esp,DWORD PTR [rbp+0x2d]
  433397:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43339a:	data16 add BYTE PTR [rbp+0x78],ah
  43339e:	movsxd ebp,DWORD PTR gs:[rip+0x656c6966]        # 0x65af9d0b
  4333a5:	add    BYTE PTR [rsi+0x64],ah
  4333a8:	jo     0x433413
  4333aa:	movsxd eax,DWORD PTR [rax]
  4333ac:	data16 gs (bad) 
  4333af:	je     0x433426
  4333b1:	jb     0x433418
  4333b3:	jae    0x4333b5
  4333b5:	ins    BYTE PTR es:[rdi],dx
  4333b6:	imul   esp,DWORD PTR [rdx+0x72],0x65697261
  4333bd:	jae    0x4333bf
  4333bf:	ins    BYTE PTR es:[rdi],dx
  4333c0:	imul   esp,DWORD PTR [rdx+0x72],0x65697261
  4333c7:	jae    0x4333f6
  4333c9:	jae    0x433441
  4333cb:	jb     0x433401
  4333cd:	add    BYTE PTR [rdi+0x73],ch
  4333d0:	fs (bad) 
  4333d2:	je     0x433435
  4333d4:	add    BYTE PTR [rbx+0x69],dh
  4333d7:	imul   ebp,DWORD PTR [esi+0x66],0x7073006f
  4333df:	jne    0x4333e1
  4333e1:	jae    0x433457
  4333e3:	(bad)  
  4333e4:	je     0x43344f
  4333e6:	movsxd esi,DWORD PTR [rdx+rsi*2+0x61]
  4333ea:	movsxd esp,DWORD PTR [rbp+0x0]
  4333ed:	je     0x433461
  4333ef:	(bad)  
  4333f0:	movsxd esp,DWORD PTR [rbp+0x66]
  4333f3:	jb     0x433456
  4333f5:	ins    DWORD PTR es:[rdi],dx
  4333f6:	gs sub eax,0x6f666e69
  4333fc:	add    BYTE PTR [rax],al
  4333fe:	add    BYTE PTR [rax],al
  433400:	test   BYTE PTR [rbx],dh
  433402:	rex.XB add BYTE PTR [r8],al
  433405:	add    BYTE PTR [rax],al
  433407:	add    BYTE PTR [rax+0x406c],dl
  43340d:	add    BYTE PTR [rax],al
  43340f:	add    BYTE PTR [rcx+0x4333],cl
  433415:	add    BYTE PTR [rax],al
  433417:	add    BYTE PTR [rax+0x7c],dh
  43341a:	add    BYTE PTR [rax],al
  43341d:	add    BYTE PTR [rax],al
  43341f:	add    BYTE PTR [rax+0x4333],dl
  433425:	add    BYTE PTR [rax],al
  433427:	add    al,ah
  433429:	jns    0x43346b
  43342b:	add    BYTE PTR [rax],al
  43342d:	add    BYTE PTR [rax],al
  43342f:	add    BYTE PTR [rbx+rsi*1+0x43],bl
  433436:	add    BYTE PTR [rax],al
  433438:	mov    al,0x72
  43343a:	add    BYTE PTR [rax],al
  43343d:	add    BYTE PTR [rax],al
  43343f:	add    BYTE PTR [rsi+0x4333],ah
  433445:	add    BYTE PTR [rax],al
  433447:	add    BYTE PTR [rax],dl
  433449:	outs   dx,BYTE PTR ds:[rsi]
  43344a:	add    BYTE PTR [rax],al
  43344d:	add    BYTE PTR [rax],al
  43344f:	add    BYTE PTR [rbx+rsi*1+0x43],ch
  433456:	add    BYTE PTR [rax],al
  433458:	movabs al,ds:0xb500000000004077
  433461:	xor    eax,DWORD PTR [rbx+0x0]
  433464:	add    BYTE PTR [rax],al
  433466:	add    BYTE PTR [rax],al
  433468:	push   rax
  433469:	jne    0x4334ab
  43346b:	add    BYTE PTR [rax],al
  43346d:	add    BYTE PTR [rax],al
  43346f:	add    BYTE PTR [rdi+0x4333],bh
  433475:	add    BYTE PTR [rax],al
  433477:	add    al,dh
  433479:	ins    BYTE PTR es:[rdi],dx
  43347a:	add    BYTE PTR [rax],al
  43347d:	add    BYTE PTR [rax],al
  43347f:	add    dh,cl
  433481:	xor    eax,DWORD PTR [rbx+0x0]
  433484:	add    BYTE PTR [rax],al
  433486:	add    BYTE PTR [rax],al
  433488:	rex ins DWORD PTR es:[rdi],dx
  43348a:	add    BYTE PTR [rax],al
  43348d:	add    BYTE PTR [rax],al
  43348f:	add    ch,dl
  433491:	xor    eax,DWORD PTR [rbx+0x0]
  433494:	add    BYTE PTR [rax],al
  433496:	add    BYTE PTR [rax],al
  433498:	sub    BYTE PTR [rbp+0x40],0x0
  43349c:	add    BYTE PTR [rax],al
  43349e:	add    BYTE PTR [rax],al
  4334a0:	fnsave [rbx]
  4334a2:	rex.XB add BYTE PTR [r8],al
  4334a5:	add    BYTE PTR [rax],al
  4334a7:	add    al,dl
  4334a9:	ins    DWORD PTR es:[rdi],dx
  4334aa:	add    BYTE PTR [rax],al
  4334ad:	add    BYTE PTR [rax],al
  4334af:	add    cl,ah
  4334b1:	xor    eax,DWORD PTR [rbx+0x0]
  4334b4:	add    BYTE PTR [rax],al
  4334b6:	add    BYTE PTR [rax],al
  4334b8:	mov    al,0x76
  4334ba:	add    BYTE PTR [rax],al
  4334bd:	add    BYTE PTR [rax],al
  4334bf:	add    cl,ch
  4334c1:	rex.XB add BYTE PTR es:[r8],al
  4334c5:	add    BYTE PTR [rax],al
  4334c7:	add    BYTE PTR [rax],dl
  4334c9:	je     0x43350b
  4334cb:	add    BYTE PTR [rax],al
  4334cd:	add    BYTE PTR [rax],al
  4334cf:	add    ch,ch
  4334d1:	xor    eax,DWORD PTR [rbx+0x0]
  4334d4:	add    BYTE PTR [rax],al
  4334d6:	add    BYTE PTR [rax],al
  4334d8:	mov    al,0x78
  4334da:	add    BYTE PTR [rax],al
  4334dd:	add    BYTE PTR [rax],al
  4334df:	add    BYTE PTR [rsi+0x53],dh
  4334e2:	je     0x433553
  4334e4:	jo     0x433556
  4334e6:	gs add BYTE PTR fs:[rbx+0x74],dl
  4334eb:	outs   dx,DWORD PTR ds:[rsi]
  4334ec:	jo     0x4334ee
	...
  4334fe:	add    BYTE PTR [rax],al
  433500:	jo     0x4334a7
  433502:	std    
  433503:	jmp    QWORD PTR [rax-0x5b]
  433506:	std    
  433507:	push   QWORD PTR [rax-0x5b]
  43350a:	std    
  43350b:	jmp    QWORD PTR [rax-0x5b]
  43350e:	std    
  43350f:	push   QWORD PTR [rax-0x5b]
  433512:	std    
  433513:	jmp    QWORD PTR [rax-0x5b]
  433516:	std    
  433517:	push   QWORD PTR [rdx-0x5b]
  43351a:	std    
  43351b:	jmp    QWORD PTR [rax-0x5b]
  43351e:	std    
  43351f:	push   QWORD PTR [rax-0x5b]
  433522:	std    
  433523:	jmp    QWORD PTR [rax-0x5b]
  433526:	std    
  433527:	jmp    QWORD PTR [rax-0x5b]
  43352a:	std    
  43352b:	push   QWORD PTR [rax-0x5b]
  43352e:	std    
  43352f:	jmp    QWORD PTR [rax-0x5b]
  433532:	std    
  433533:	jmp    QWORD PTR [rax-0x5b]
  433536:	std    
  433537:	jmp    QWORD PTR [rax-0x5b]
  43353a:	std    
  43353b:	push   QWORD PTR [rax-0x5b]
  43353e:	std    
  43353f:	jmp    QWORD PTR [rip+0x41203a73]        # 0x41636fb8
  433545:	jae    0x4335ba
  433547:	gs jb  0x4335be
  43354a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  433551:	(bad)  
  433552:	and    BYTE PTR [rsi+0x61],ah
  433555:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  43355d:	(bad)  
  43355e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  433561:	ins    DWORD PTR es:[rdi],dx
  433562:	outs   dx,DWORD PTR ds:[rsi]
  433563:	outs   dx,BYTE PTR ds:[rsi]
  433564:	(bad)  
  433565:	jae    0x4335d0
  433567:	outs   dx,BYTE PTR ds:[esi]
  433569:	(bad)  
  43356a:	ins    BYTE PTR es:[rdi],dx
  43356b:	jae    0x43359b
  43356d:	movsxd eax,DWORD PTR [rax]
  43356f:	add    BYTE PTR [rax],ch
  433571:	imul   ebp,DWORD PTR [rsi+0x74],0x69732029
  433578:	and    BYTE PTR [esi],bh
  43357b:	cmp    eax,0x42444720
  433580:	pop    rdi
  433581:	push   rbx
  433582:	rex.WB
  433583:	rex.RXB
  433584:	rex.WRX
  433585:	rex.B
  433586:	rex.WR pop rdi
  433588:	rex.RX
  433589:	rex.WB push r10
  43358b:	push   rbx
  43358c:	push   rsp
  43358d:	and    BYTE PTR [rsi],ah
  43358f:	and    BYTE PTR es:[rax],ch
  433592:	imul   ebp,DWORD PTR [rsi+0x74],0x69732029
  433599:	and    BYTE PTR [edi*1+0x42444720],bh
  4335a1:	pop    rdi
  4335a2:	push   rbx
  4335a3:	rex.WB
  4335a4:	rex.RXB
  4335a5:	rex.WRX
  4335a6:	rex.B
  4335a7:	rex.WR pop rdi
  4335a9:	rex.WR
  4335aa:	push   r11
  4335ac:	push   rsp
  4335ad:	add    BYTE PTR [rbp+0x6e],dl
  4335b0:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4335b4:	outs   dx,BYTE PTR ds:[rsi]
  4335b5:	and    BYTE PTR [rbx+0x69],dh
  4335b8:	outs   dx,BYTE PTR ds:[esi]
  4335ba:	(bad)  
  4335bb:	ins    BYTE PTR es:[rdi],dx
  4335bc:	add    BYTE PTR [rdi],bh
  4335be:	add    BYTE PTR [rax],al
  4335c0:	push   rbx
  4335c1:	imul   esp,DWORD PTR [rdi+0x6e],0x25206c61
  4335c8:	jae    0x4335ea
  4335ca:	outs   dx,DWORD PTR fs:[rsi]
  4335cc:	gs jae 0x4335ef
  4335cf:	outs   dx,BYTE PTR ds:[rsi]
  4335d0:	outs   dx,DWORD PTR ds:[rsi]
  4335d1:	je     0x4335f3
  4335d3:	gs js  0x43363f
  4335d6:	jae    0x43364c
  4335d8:	and    BYTE PTR [rdi+0x6e],ch
  4335db:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4335df:	jae    0x433601
  4335e1:	jae    0x43365c
  4335e3:	jae    0x433659
  4335e5:	gs ins DWORD PTR es:[rdi],dx
  4335e7:	add    BYTE PTR cs:[rax],al
	...
  4335fe:	add    BYTE PTR [rax],al
  433600:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433603:	jae    0x433679
  433605:	and    BYTE PTR [rbx+0x68],ah
  433608:	(bad)  
  433609:	jb     0x433635
  43360b:	and    BYTE PTR [rdi+0x64],ah
  43360e:	(bad)  
  43360f:	pop    rdi
  433610:	jae    0x43367b
  433612:	outs   dx,BYTE PTR ds:[esi]
  433614:	(bad)  
  433615:	ins    BYTE PTR es:[rdi],dx
  433616:	pop    rdi
  433617:	je     0x433688
  433619:	pop    rdi
  43361a:	jae    0x433695
  43361c:	ins    DWORD PTR es:[rdi],dx
  43361d:	(bad)  
  43361e:	outs   dx,DWORD PTR ds:[rsi]
  43361f:	ins    BYTE PTR es:[rdi],dx
  433620:	pop    rdi
  433621:	jae    0x433697
  433623:	jb     0x43368e
  433625:	outs   dx,BYTE PTR ds:[rsi]
  433626:	sub    BYTE PTR [edi+0x64],ah
  43362a:	(bad)  
  43362b:	pop    rdi
  43362c:	jae    0x433697
  43362e:	outs   dx,BYTE PTR ds:[esi]
  433630:	(bad)  
  433631:	ins    BYTE PTR es:[rdi],dx
  433632:	sub    DWORD PTR [rax],eax
  433634:	rex.RXB
  433635:	rex.R
  433636:	rex.X pop rdi
  433638:	push   rbx
  433639:	rex.WB
  43363a:	rex.RXB
  43363b:	rex.WRX
  43363c:	rex.B
  43363d:	rex.WR pop rdi
  43363f:	xor    BYTE PTR [rax],al
  433641:	xor    BYTE PTR [rax],al
  433643:	push   rbx
  433644:	imul   esp,DWORD PTR [rdi+0x6e],0x30206c61
  43364b:	add    BYTE PTR [rdi+0x44],al
  43364e:	rex.X pop rdi
  433650:	push   rbx
  433651:	rex.WB
  433652:	rex.RXB
  433653:	rex.WRX
  433654:	rex.B
  433655:	rex.WR pop rdi
  433657:	rex.W push rbp
  433659:	push   rax
  43365a:	add    BYTE PTR [rbx+0x49],dl
  43365d:	rex.RXB
  43365e:	rex.W push rbp
  433660:	push   rax
  433661:	add    BYTE PTR [rax+0x61],cl
  433664:	outs   dx,BYTE PTR ds:[rsi]
  433665:	addr32 jne 0x4336d8
  433668:	add    BYTE PTR [rdi+0x44],al
  43366b:	rex.X pop rdi
  43366d:	push   rbx
  43366e:	rex.WB
  43366f:	rex.RXB
  433670:	rex.WRX
  433671:	rex.B
  433672:	rex.WR pop rdi
  433674:	rex.WB
  433675:	rex.WRX push rsp
  433677:	add    BYTE PTR [rbx+0x49],dl
  43367a:	rex.RXB
  43367b:	rex.WB
  43367c:	rex.WRX push rsp
  43367e:	add    BYTE PTR [rcx+0x6e],cl
  433681:	je     0x4336e8
  433683:	jb     0x4336f7
  433685:	jne    0x4336f7
  433687:	je     0x433689
  433689:	rex.RXB
  43368a:	rex.R
  43368b:	rex.X pop rdi
  43368d:	push   rbx
  43368e:	rex.WB
  43368f:	rex.RXB
  433690:	rex.WRX
  433691:	rex.B
  433692:	rex.WR pop rdi
  433694:	push   rcx
  433695:	push   rbp
  433696:	rex.WB push r12
  433698:	add    BYTE PTR [rbx+0x49],dl
  43369b:	rex.RXB push r9
  43369d:	push   rbp
  43369e:	rex.WB push r12
  4336a0:	add    BYTE PTR [rcx+0x75],dl
  4336a3:	imul   esi,DWORD PTR [rax+rax*1+0x47],0x535f4244
  4336ab:	rex.WB
  4336ac:	rex.RXB
  4336ad:	rex.WRX
  4336ae:	rex.B
  4336af:	rex.WR pop rdi
  4336b1:	rex.WB
  4336b2:	rex.WR
  4336b3:	rex.WR add BYTE PTR [rbx+0x49],r10b
  4336b7:	rex.RXB
  4336b8:	rex.WB
  4336b9:	rex.WR
  4336ba:	rex.WR add BYTE PTR [rcx+0x6c],r9b
  4336be:	ins    BYTE PTR es:[rdi],dx
  4336bf:	gs addr32 (bad) 
  4336c2:	ins    BYTE PTR es:[rdi],dx
  4336c3:	and    BYTE PTR [rcx+0x6e],ch
  4336c6:	jae    0x43373c
  4336c8:	jb     0x43373f
  4336ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4336ce:	outs   dx,BYTE PTR ds:[rsi]
  4336cf:	add    BYTE PTR [rdi+0x44],al
  4336d2:	rex.X pop rdi
  4336d4:	push   rbx
  4336d5:	rex.WB
  4336d6:	rex.RXB
  4336d7:	rex.WRX
  4336d8:	rex.B
  4336d9:	rex.WR pop rdi
  4336db:	push   rsp
  4336dc:	push   rdx
  4336dd:	push   r8
  4336df:	add    BYTE PTR [rbx+0x49],dl
  4336e2:	rex.RXB push r12
  4336e4:	push   rdx
  4336e5:	push   r8
  4336e7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  4336eb:	movsxd esp,DWORD PTR [rbp+0x2f]
  4336ee:	(bad)
  4336f3:	jo     0x433764
  4336f5:	imul   ebp,DWORD PTR [rsi+0x74],0x61727420
  4336fc:	jo     0x4336fe
  4336fe:	rex.RXB
  4336ff:	rex.R
  433700:	rex.X pop rdi
  433702:	push   rbx
  433703:	rex.WB
  433704:	rex.RXB
  433705:	rex.WRX
  433706:	rex.B
  433707:	rex.WR pop rdi
  433709:	rex.B
  43370a:	rex.X push rdx
  43370c:	push   rsp
  43370d:	add    BYTE PTR [rbx+0x49],dl
  433710:	rex.RXB
  433711:	rex.B
  433712:	rex.X push rdx
  433714:	push   rsp
  433715:	add    BYTE PTR [rcx+0x62],al
  433718:	outs   dx,DWORD PTR ds:[rsi]
  433719:	jb     0x43378f
  43371b:	gs add BYTE PTR fs:[rdi+0x44],al
  433720:	rex.X pop rdi
  433722:	push   rbx
  433723:	rex.WB
  433724:	rex.RXB
  433725:	rex.WRX
  433726:	rex.B
  433727:	rex.WR pop rdi
  433729:	rex.RB
  43372a:	rex.WRB push r12
  43372c:	add    BYTE PTR [rbx+0x49],dl
  43372f:	rex.RXB
  433730:	rex.RB
  433731:	rex.WRB push r12
  433733:	add    BYTE PTR [rbp+0x6d],al
  433736:	jne    0x4337a4
  433738:	(bad)  
  433739:	je     0x4337a4
  43373b:	outs   dx,DWORD PTR ds:[rsi]
  43373c:	outs   dx,BYTE PTR ds:[rsi]
  43373d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  433741:	jo     0x433743
  433743:	rex.RXB
  433744:	rex.R
  433745:	rex.X pop rdi
  433747:	push   rbx
  433748:	rex.WB
  433749:	rex.RXB
  43374a:	rex.WRX
  43374b:	rex.B
  43374c:	rex.WR pop rdi
  43374e:	rex.RX push rax
  433750:	add    BYTE PTR [r11+0x49],r10b
  433754:	rex.RXB
  433755:	rex.RX push rax
  433757:	add    BYTE PTR [r9+0x72],r8b
  43375b:	imul   esi,DWORD PTR [rax+rbp*2+0x6d],0x63697465
  433763:	and    BYTE PTR [rbp+0x78],ah
  433766:	movsxd esp,DWORD PTR [rbp+0x70]
  433769:	je     0x4337d4
  43376b:	outs   dx,DWORD PTR ds:[rsi]
  43376c:	outs   dx,BYTE PTR ds:[rsi]
  43376d:	add    BYTE PTR [rdi+0x44],al
  433770:	rex.X pop rdi
  433772:	push   rbx
  433773:	rex.WB
  433774:	rex.RXB
  433775:	rex.WRX
  433776:	rex.B
  433777:	rex.WR pop rdi
  433779:	rex.WXB
  43377a:	rex.WB
  43377b:	rex.WR
  43377c:	rex.WR add BYTE PTR [rbx+0x49],r10b
  433780:	rex.RXB
  433781:	rex.WXB
  433782:	rex.WB
  433783:	rex.WR
  433784:	rex.WR add BYTE PTR [rbx+0x69],r9b
  433788:	ins    BYTE PTR es:[rdi],dx
  433789:	ins    BYTE PTR es:[rdi],dx
  43378a:	gs add BYTE PTR fs:[rdi+0x44],al
  43378f:	rex.X pop rdi
  433791:	push   rbx
  433792:	rex.WB
  433793:	rex.RXB
  433794:	rex.WRX
  433795:	rex.B
  433796:	rex.WR pop rdi
  433798:	rex.X push rbp
  43379a:	push   rbx
  43379b:	add    BYTE PTR [rbx+0x49],dl
  43379e:	rex.RXB
  43379f:	rex.X push rbp
  4337a1:	push   rbx
  4337a2:	add    BYTE PTR [rdx+0x75],al
  4337a5:	jae    0x4337c7
  4337a7:	gs jb  0x43381c
  4337aa:	outs   dx,DWORD PTR ds:[rsi]
  4337ab:	jb     0x4337ad
  4337ad:	rex.RXB
  4337ae:	rex.R
  4337af:	rex.X pop rdi
  4337b1:	push   rbx
  4337b2:	rex.WB
  4337b3:	rex.RXB
  4337b4:	rex.WRX
  4337b5:	rex.B
  4337b6:	rex.WR pop rdi
  4337b8:	push   rbx
  4337b9:	rex.RB
  4337ba:	rex.RXB push r14
  4337bc:	add    BYTE PTR [rbx+0x49],dl
  4337bf:	rex.RXB push r11
  4337c1:	rex.RB
  4337c2:	rex.RXB push r14
  4337c4:	add    BYTE PTR [rbx+0x65],dl
  4337c7:	ins    DWORD PTR es:[edi],dx
  4337c9:	outs   dx,BYTE PTR gs:[rsi]
  4337cb:	je     0x43382e
  4337cd:	je     0x433838
  4337cf:	outs   dx,DWORD PTR ds:[rsi]
  4337d0:	outs   dx,BYTE PTR ds:[rsi]
  4337d1:	and    BYTE PTR [rsi+0x61],ah
  4337d4:	jne    0x433842
  4337d6:	je     0x4337d8
  4337d8:	rex.RXB
  4337d9:	rex.R
  4337da:	rex.X pop rdi
  4337dc:	push   rbx
  4337dd:	rex.WB
  4337de:	rex.RXB
  4337df:	rex.WRX
  4337e0:	rex.B
  4337e1:	rex.WR pop rdi
  4337e3:	push   rbx
  4337e4:	pop    rcx
  4337e5:	push   rbx
  4337e6:	add    BYTE PTR [rbx+0x49],dl
  4337e9:	rex.RXB push r11
  4337eb:	pop    rcx
  4337ec:	push   rbx
  4337ed:	add    BYTE PTR [rdx+0x61],al
  4337f0:	and    BYTE PTR fs:[rbx+0x79],dh
  4337f4:	jae    0x43386a
  4337f6:	gs ins DWORD PTR es:[rdi],dx
  4337f8:	and    BYTE PTR [rbx+0x61],ah
  4337fb:	ins    BYTE PTR es:[rdi],dx
  4337fc:	ins    BYTE PTR es:[rdi],dx
  4337fd:	add    BYTE PTR [rdi+0x44],al
  433800:	rex.X pop rdi
  433802:	push   rbx
  433803:	rex.WB
  433804:	rex.RXB
  433805:	rex.WRX
  433806:	rex.B
  433807:	rex.WR pop rdi
  433809:	push   rax
  43380a:	rex.WB push r8
  43380c:	add    BYTE PTR [r11+0x49],r10b
  433810:	rex.RXB push r8
  433812:	rex.WB push r8
  433814:	add    BYTE PTR [r10+0x72],r8b
  433818:	outs   dx,DWORD PTR ds:[rsi]
  433819:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  43381d:	jo     0x433888
  43381f:	jo     0x433886
  433821:	add    BYTE PTR [rdi+0x44],al
  433824:	rex.X pop rdi
  433826:	push   rbx
  433827:	rex.WB
  433828:	rex.RXB
  433829:	rex.WRX
  43382a:	rex.B
  43382b:	rex.WR pop rdi
  43382d:	rex.B
  43382e:	rex.WR push rdx
  433830:	rex.WRB add BYTE PTR [r11+0x49],r10b
  433834:	rex.RXB
  433835:	rex.B
  433836:	rex.WR push rdx
  433838:	rex.WRB add BYTE PTR [r9+0x6c],r8b
  43383c:	(bad)  
  43383d:	jb     0x4338ac
  43383f:	and    BYTE PTR [rbx+0x6c],ah
  433842:	outs   dx,DWORD PTR ds:[rsi]
  433843:	movsxd ebp,DWORD PTR [rbx+0x0]
  433846:	rex.RXB
  433847:	rex.R
  433848:	rex.X pop rdi
  43384a:	push   rbx
  43384b:	rex.WB
  43384c:	rex.RXB
  43384d:	rex.WRX
  43384e:	rex.B
  43384f:	rex.WR pop rdi
  433851:	push   rsp
  433852:	rex.RB push r10
  433854:	rex.WRB add BYTE PTR [r11+0x49],r10b
  433858:	rex.RXB push r12
  43385a:	rex.RB push r10
  43385c:	rex.WRB add BYTE PTR [r13+riz*2+0x72],r10b
  433861:	ins    DWORD PTR es:[rdi],dx
  433862:	imul   ebp,DWORD PTR [rsi+0x61],0x646574
  433869:	rex.RXB
  43386a:	rex.R
  43386b:	rex.X pop rdi
  43386d:	push   rbx
  43386e:	rex.WB
  43386f:	rex.RXB
  433870:	rex.WRX
  433871:	rex.B
  433872:	rex.WR pop rdi
  433874:	push   rbp
  433875:	push   rdx
  433876:	rex.RXB add BYTE PTR [r11+0x49],r10b
  43387a:	rex.RXB push r13
  43387c:	push   rdx
  43387d:	rex.RXB add BYTE PTR [r13+0x72],r10b
  433881:	outs   dx,BYTE PTR gs:[esi]
  433884:	je     0x4338a6
  433886:	rex.WB (bad) 
  433888:	rex.WRXB and BYTE PTR [r11+0x6f],r12b
  43388c:	outs   dx,BYTE PTR ds:[rsi]
  43388d:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x4447006e
  433896:	rex.X pop rdi
  433898:	push   rbx
  433899:	rex.WB
  43389a:	rex.RXB
  43389b:	rex.WRX
  43389c:	rex.B
  43389d:	rex.WR pop rdi
  43389f:	push   rbx
  4338a0:	push   rsp
  4338a1:	rex.WRXB push r8
  4338a3:	add    BYTE PTR [rbx+0x49],dl
  4338a6:	rex.RXB push r11
  4338a8:	push   rsp
  4338a9:	rex.WRXB push r8
  4338ab:	add    BYTE PTR [rbx+0x74],dl
  4338ae:	outs   dx,DWORD PTR ds:[rsi]
  4338af:	jo     0x433921
  4338b1:	gs and BYTE PTR fs:[rax],ch
  4338b5:	jae    0x433920
  4338b7:	outs   dx,BYTE PTR ds:[esi]
  4338b9:	(bad)  
  4338ba:	ins    BYTE PTR es:[rdi],dx
  4338bb:	sub    DWORD PTR [rax],eax
  4338bd:	rex.RXB
  4338be:	rex.R
  4338bf:	rex.X pop rdi
  4338c1:	push   rbx
  4338c2:	rex.WB
  4338c3:	rex.RXB
  4338c4:	rex.WRX
  4338c5:	rex.B
  4338c6:	rex.WR pop rdi
  4338c8:	push   rsp
  4338c9:	push   rbx
  4338ca:	push   rsp
  4338cb:	push   rax
  4338cc:	add    BYTE PTR [rbx+0x49],dl
  4338cf:	rex.RXB push r12
  4338d1:	push   rbx
  4338d2:	push   rsp
  4338d3:	push   rax
  4338d4:	add    BYTE PTR [rbx+0x74],dl
  4338d7:	outs   dx,DWORD PTR ds:[rsi]
  4338d8:	jo     0x43394a
  4338da:	gs and BYTE PTR fs:[rax],ch
  4338de:	jne    0x433953
  4338e0:	gs jb  0x43390c
  4338e3:	add    BYTE PTR [rdi+0x44],al
  4338e6:	rex.X pop rdi
  4338e8:	push   rbx
  4338e9:	rex.WB
  4338ea:	rex.RXB
  4338eb:	rex.WRX
  4338ec:	rex.B
  4338ed:	rex.WR pop rdi
  4338ef:	rex.XB
  4338f0:	rex.WRXB
  4338f1:	rex.WRX push rsp
  4338f3:	add    BYTE PTR [rbx+0x49],dl
  4338f6:	rex.RXB
  4338f7:	rex.XB
  4338f8:	rex.WRXB
  4338f9:	rex.WRX push rsp
  4338fb:	add    BYTE PTR [rbx+0x6f],al
  4338fe:	outs   dx,BYTE PTR ds:[rsi]
  4338ff:	je     0x43396a
  433901:	outs   dx,BYTE PTR ds:[rsi]
  433902:	jne    0x433969
  433904:	add    BYTE PTR fs:[rdi+0x44],al
  433908:	rex.X pop rdi
  43390a:	push   rbx
  43390b:	rex.WB
  43390c:	rex.RXB
  43390d:	rex.WRX
  43390e:	rex.B
  43390f:	rex.WR pop rdi
  433911:	rex.XB
  433912:	rex.W
  433913:	rex.WR
  433914:	add    BYTE PTR [rbx+0x49],r10b
  433918:	rex.RXB
  433919:	rex.XB
  43391a:	rex.W
  43391b:	rex.WR
  43391c:	add    BYTE PTR [rbx+0x68],r8b
  433920:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x74617473
  433928:	jne    0x43399d
  43392a:	and    BYTE PTR [rbx+0x68],ah
  43392d:	(bad)  
  43392e:	outs   dx,BYTE PTR ds:[rsi]
  43392f:	gs add BYTE PTR fs:[edi+0x44],al
  433935:	rex.X pop rdi
  433937:	push   rbx
  433938:	rex.WB
  433939:	rex.RXB
  43393a:	rex.WRX
  43393b:	rex.B
  43393c:	rex.WR pop rdi
  43393e:	push   rsp
  43393f:	push   rsp
  433940:	rex.WB
  433941:	rex.WRX add BYTE PTR [rbx+0x49],r10b
  433945:	rex.RXB push r12
  433947:	push   rsp
  433948:	rex.WB
  433949:	rex.WRX add BYTE PTR [rbx+0x74],r10b
  43394d:	outs   dx,DWORD PTR ds:[rsi]
  43394e:	jo     0x4339c0
  433950:	gs and BYTE PTR fs:[rax],ch
  433954:	je     0x4339ca
  433956:	jns    0x433978
  433958:	imul   ebp,DWORD PTR [rsi+0x70],0x297475
  43395f:	rex.RXB
  433960:	rex.R
  433961:	rex.X pop rdi
  433963:	push   rbx
  433964:	rex.WB
  433965:	rex.RXB
  433966:	rex.WRX
  433967:	rex.B
  433968:	rex.WR pop rdi
  43396a:	push   rsp
  43396b:	push   rsp
  43396c:	rex.WRXB push r13
  43396e:	add    BYTE PTR [rbx+0x49],dl
  433971:	rex.RXB push r12
  433973:	push   rsp
  433974:	rex.WRXB push r13
  433976:	add    BYTE PTR [rbx+0x74],dl
  433979:	outs   dx,DWORD PTR ds:[rsi]
  43397a:	jo     0x4339ec
  43397c:	gs and BYTE PTR fs:[rax],ch
  433980:	je     0x4339f6
  433982:	jns    0x4339a4
  433984:	outs   dx,DWORD PTR ds:[rsi]
  433985:	jne    0x4339fb
  433987:	jo     0x4339fe
  433989:	je     0x4339b4
  43398b:	add    BYTE PTR [rdi+0x44],al
  43398e:	rex.X pop rdi
  433990:	push   rbx
  433991:	rex.WB
  433992:	rex.RXB
  433993:	rex.WRX
  433994:	rex.B
  433995:	rex.WR pop rdi
  433997:	rex.WB
  433998:	rex.WRXB add BYTE PTR [r11+0x49],r10b
  43399c:	rex.RXB
  43399d:	rex.WB
  43399e:	rex.WRXB add BYTE PTR [r9+0x2f],r9b
  4339a2:	rex.WRXB and BYTE PTR [r8+0x6f],r14b
  4339a6:	jae    0x433a1b
  4339a8:	imul   esp,DWORD PTR [rdx+0x6c],0x44470065
  4339af:	rex.X pop rdi
  4339b1:	push   rbx
  4339b2:	rex.WB
  4339b3:	rex.RXB
  4339b4:	rex.WRX
  4339b5:	rex.B
  4339b6:	rex.WR pop rdi
  4339b8:	pop    rax
  4339b9:	rex.XB push r8
  4339bb:	push   rbp
  4339bc:	add    BYTE PTR [rbx+0x49],dl
  4339bf:	rex.RXB pop r8
  4339c1:	rex.XB push r8
  4339c3:	push   rbp
  4339c4:	add    BYTE PTR [rbx+0x50],al
  4339c7:	push   rbp
  4339c8:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4339cc:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
  4339d1:	imul   esi,DWORD PTR [rax+riz*1+0x65],0x65656378
  4339d9:	fs gs add BYTE PTR fs:[rdi+0x44],al
  4339df:	rex.X pop rdi
  4339e1:	push   rbx
  4339e2:	rex.WB
  4339e3:	rex.RXB
  4339e4:	rex.WRX
  4339e5:	rex.B
  4339e6:	rex.WR pop rdi
  4339e8:	pop    rax
  4339e9:	rex.RX push rbx
  4339eb:	pop    rdx
  4339ec:	add    BYTE PTR [rbx+0x49],dl
  4339ef:	rex.RXB pop r8
  4339f1:	rex.RX push rbx
  4339f3:	pop    rdx
  4339f4:	add    BYTE PTR [rsi+0x69],al
  4339f7:	ins    BYTE PTR es:[rdi],dx
  4339f8:	and    BYTE PTR gs:[rbx+0x69],dh
  4339fc:	jp     0x433a63
  4339fe:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
  433a02:	imul   esi,DWORD PTR [rax+riz*1+0x65],0x65656378
  433a0a:	fs gs add BYTE PTR fs:[rdi+0x44],al
  433a10:	rex.X pop rdi
  433a12:	push   rbx
  433a13:	rex.WB
  433a14:	rex.RXB
  433a15:	rex.WRX
  433a16:	rex.B
  433a17:	rex.WR pop rdi
  433a19:	push   rsi
  433a1a:	push   rsp
  433a1b:	rex.B
  433a1c:	rex.WR push rdx
  433a1e:	rex.WRB add BYTE PTR [r11+0x49],r10b
  433a22:	rex.RXB push r14
  433a24:	push   rsp
  433a25:	rex.B
  433a26:	rex.WR push rdx
  433a28:	rex.WRB add BYTE PTR [r14+0x69],r10b
  433a2c:	jb     0x433aa2
  433a2e:	jne    0x433a91
  433a30:	ins    BYTE PTR es:[rdi],dx
  433a31:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  433a35:	gs jb  0x433a58
  433a38:	gs js  0x433aab
  433a3b:	imul   esi,DWORD PTR [rdx+0x65],0x44470064
  433a42:	rex.X pop rdi
  433a44:	push   rbx
  433a45:	rex.WB
  433a46:	rex.RXB
  433a47:	rex.WRX
  433a48:	rex.B
  433a49:	rex.WR pop rdi
  433a4b:	push   rax
  433a4c:	push   rdx
  433a4d:	rex.WRXB
  433a4e:	rex.RX add BYTE PTR [rbx+0x49],r10b
  433a52:	rex.RXB push r8
  433a54:	push   rdx
  433a55:	rex.WRXB
  433a56:	rex.RX add BYTE PTR [rax+0x72],r10b
  433a5a:	outs   dx,DWORD PTR ds:[rsi]
  433a5b:	imul   bp,WORD PTR [rcx+rbp*2+0x6e],0x2067
  433a62:	je     0x433acd
  433a64:	ins    DWORD PTR es:[rdi],dx
  433a65:	gs jb  0x433a88
  433a68:	gs js  0x433adb
  433a6b:	imul   esi,DWORD PTR [rdx+0x65],0x44470064
  433a72:	rex.X pop rdi
  433a74:	push   rbx
  433a75:	rex.WB
  433a76:	rex.RXB
  433a77:	rex.WRX
  433a78:	rex.B
  433a79:	rex.WR pop rdi
  433a7b:	push   rdi
  433a7c:	rex.WB
  433a7d:	rex.WRX
  433a7e:	rex.XB
  433a7f:	rex.W add BYTE PTR [rbx+0x49],dl
  433a83:	rex.RXB push r15
  433a85:	rex.WB
  433a86:	rex.WRX
  433a87:	rex.XB
  433a88:	rex.W add BYTE PTR [rdi+0x69],dl
  433a8c:	outs   dx,BYTE PTR ds:[rsi]
  433a8d:	outs   dx,DWORD PTR fs:[rsi]
  433a8f:	ja     0x433ab1
  433a91:	jae    0x433afc
  433a93:	jp     0x433afa
  433a95:	and    BYTE PTR [rbx+0x68],ah
  433a98:	(bad)  
  433a99:	outs   dx,BYTE PTR ds:[rsi]
  433a9a:	gs add BYTE PTR fs:[edi+0x44],al
  433aa0:	rex.X pop rdi
  433aa2:	push   rbx
  433aa3:	rex.WB
  433aa4:	rex.RXB
  433aa5:	rex.WRX
  433aa6:	rex.B
  433aa7:	rex.WR pop rdi
  433aa9:	rex.WR
  433aaa:	rex.WRXB push r11
  433aac:	push   rsp
  433aad:	add    BYTE PTR [rbx+0x49],dl
  433ab0:	rex.RXB
  433ab1:	rex.WR
  433ab2:	rex.WRXB push r11
  433ab4:	push   rsp
  433ab5:	add    BYTE PTR [rdx+0x65],dl
  433ab8:	jae    0x433b29
  433aba:	jne    0x433b2e
  433abc:	movsxd esp,DWORD PTR [rbp+0x20]
  433abf:	ins    BYTE PTR es:[rdi],dx
  433ac0:	outs   dx,DWORD PTR ds:[rsi]
  433ac1:	jae    0x433b37
  433ac3:	add    BYTE PTR [rdi+0x44],al
  433ac6:	rex.X pop rdi
  433ac8:	push   rbx
  433ac9:	rex.WB
  433aca:	rex.RXB
  433acb:	rex.WRX
  433acc:	rex.B
  433acd:	rex.WR pop rdi
  433acf:	push   rbp
  433ad0:	push   rbx
  433ad1:	push   rdx
  433ad2:	xor    DWORD PTR [rax],eax
  433ad4:	push   rbx
  433ad5:	rex.WB
  433ad6:	rex.RXB push r13
  433ad8:	push   rbx
  433ad9:	push   rdx
  433ada:	xor    DWORD PTR [rax],eax
  433adc:	push   rbp
  433add:	jae    0x433b44
  433adf:	jb     0x433b01
  433ae1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  433ae9:	jae    0x433b54
  433aeb:	outs   dx,BYTE PTR ds:[esi]
  433aed:	(bad)  
  433aee:	ins    BYTE PTR es:[rdi],dx
  433aef:	and    BYTE PTR [rcx],dh
  433af1:	add    BYTE PTR [rdi+0x44],al
  433af4:	rex.X pop rdi
  433af6:	push   rbx
  433af7:	rex.WB
  433af8:	rex.RXB
  433af9:	rex.WRX
  433afa:	rex.B
  433afb:	rex.WR pop rdi
  433afd:	push   rbp
  433afe:	push   rbx
  433aff:	push   rdx
  433b00:	xor    al,BYTE PTR [rax]
  433b02:	push   rbx
  433b03:	rex.WB
  433b04:	rex.RXB push r13
  433b06:	push   rbx
  433b07:	push   rdx
  433b08:	xor    al,BYTE PTR [rax]
  433b0a:	push   rbp
  433b0b:	jae    0x433b72
  433b0d:	jb     0x433b2f
  433b0f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  433b17:	jae    0x433b82
  433b19:	outs   dx,BYTE PTR ds:[esi]
  433b1b:	(bad)  
  433b1c:	ins    BYTE PTR es:[rdi],dx
  433b1d:	and    BYTE PTR [rdx],dh
  433b1f:	add    BYTE PTR [rdi+0x44],al
  433b22:	rex.X pop rdi
  433b24:	push   rbx
  433b25:	rex.WB
  433b26:	rex.RXB
  433b27:	rex.WRX
  433b28:	rex.B
  433b29:	rex.WR pop rdi
  433b2b:	push   rax
  433b2c:	push   rdi
  433b2d:	push   rdx
  433b2e:	add    BYTE PTR [rbx+0x49],dl
  433b31:	rex.RXB push r8
  433b33:	push   rdi
  433b34:	push   rdx
  433b35:	add    BYTE PTR [rax+0x6f],dl
  433b38:	ja     0x433b9f
  433b3a:	jb     0x433b5c
  433b3c:	data16 (bad) 
  433b3e:	imul   ebp,DWORD PTR [rdi+rbp*1+0x72],0x61747365
  433b46:	jb     0x433bbc
  433b48:	add    BYTE PTR [rdi+0x44],al
  433b4b:	rex.X pop rdi
  433b4d:	push   rbx
  433b4e:	rex.WB
  433b4f:	rex.RXB
  433b50:	rex.WRX
  433b51:	rex.B
  433b52:	rex.WR pop rdi
  433b54:	push   rax
  433b55:	rex.WRXB
  433b56:	rex.WR
  433b57:	rex.WR add BYTE PTR [rbx+0x49],r10b
  433b5b:	rex.RXB push r8
  433b5d:	rex.WRXB
  433b5e:	rex.WR
  433b5f:	rex.WR add BYTE PTR [rax+0x6f],r10b
  433b63:	ins    BYTE PTR es:[rdi],dx
  433b64:	ins    BYTE PTR es:[rdi],dx
  433b65:	(bad)  
  433b66:	(bad)  
  433b67:	ins    BYTE PTR es:[rdi],dx
  433b68:	and    BYTE PTR gs:[rbp+0x76],ah
  433b6c:	outs   dx,BYTE PTR gs:[rsi]
  433b6e:	je     0x433b90
  433b70:	outs   dx,DWORD PTR ds:[rsi]
  433b71:	movsxd esp,DWORD PTR [rbx+0x75]
  433b74:	jb     0x433be8
  433b76:	gs add BYTE PTR fs:[rdi+0x44],al
  433b7b:	rex.X pop rdi
  433b7d:	push   rbx
  433b7e:	rex.WB
  433b7f:	rex.RXB
  433b80:	rex.WRX
  433b81:	rex.B
  433b82:	rex.WR pop rdi
  433b84:	push   rdi
  433b85:	rex.WB
  433b86:	rex.WRX
  433b87:	add    BYTE PTR [rbx+0x49],r10b
  433b8b:	rex.RXB push r15
  433b8d:	rex.WB
  433b8e:	rex.WRX
  433b8f:	add    BYTE PTR [rdi+0x44],r8b
  433b93:	rex.X pop rdi
  433b95:	push   rbx
  433b96:	rex.WB
  433b97:	rex.RXB
  433b98:	rex.WRX
  433b99:	rex.B
  433b9a:	rex.WR pop rdi
  433b9c:	push   rax
  433b9d:	rex.W
  433b9e:	rex.WRXB
  433b9f:	rex.WRX
  433ba0:	add    BYTE PTR [r11+0x49],r10b
  433ba4:	rex.RXB push r8
  433ba6:	rex.W
  433ba7:	rex.WRXB
  433ba8:	rex.WRX
  433ba9:	add    BYTE PTR [r15+0x44],r8b
  433bad:	rex.X pop rdi
  433baf:	push   rbx
  433bb0:	rex.WB
  433bb1:	rex.RXB
  433bb2:	rex.WRX
  433bb3:	rex.B
  433bb4:	rex.WR pop rdi
  433bb6:	push   rdi
  433bb7:	rex.B
  433bb8:	rex.WB push r12
  433bba:	rex.WB
  433bbb:	rex.WRX
  433bbc:	rex.RXB add BYTE PTR [r11+0x49],r10b
  433bc0:	rex.RXB push r15
  433bc2:	rex.B
  433bc3:	rex.WB push r12
  433bc5:	rex.WB
  433bc6:	rex.WRX
  433bc7:	rex.RXB add BYTE PTR [r8+0x72],r10b
  433bcb:	outs   dx,DWORD PTR ds:[rsi]
  433bcc:	movsxd esp,DWORD PTR [rbp+0x73]
  433bcf:	jae    0x433bf8
  433bd1:	jae    0x433bf3
  433bd3:	rex.WR push rdi
  433bd5:	push   rax
  433bd6:	jae    0x433bf8
  433bd8:	(bad)  
  433bd9:	jb     0x433c40
  433bdb:	and    BYTE PTR [rdx+0x6c],ah
  433bde:	outs   dx,DWORD PTR ds:[rsi]
  433bdf:	movsxd ebp,DWORD PTR [rbx+0x65]
  433be2:	add    BYTE PTR fs:[rdi+0x44],al
  433be6:	rex.X pop rdi
  433be8:	push   rbx
  433be9:	rex.WB
  433bea:	rex.RXB
  433beb:	rex.WRX
  433bec:	rex.B
  433bed:	rex.WR pop rdi
  433bef:	rex.WR push rdi
  433bf1:	push   rax
  433bf2:	add    BYTE PTR [rbx+0x49],dl
  433bf5:	rex.RXB
  433bf6:	rex.WR push rdi
  433bf8:	push   rax
  433bf9:	add    BYTE PTR [rbx+0x69],dl
  433bfc:	outs   dx,BYTE PTR ds:[esi]
  433bfe:	(bad)  
  433bff:	ins    BYTE PTR es:[rdi],dx
  433c00:	and    BYTE PTR [rdi+rdx*2+0x50],cl
  433c04:	add    BYTE PTR [rdi+0x44],al
  433c07:	rex.X pop rdi
  433c09:	push   rbx
  433c0a:	rex.WB
  433c0b:	rex.RXB
  433c0c:	rex.WRX
  433c0d:	rex.B
  433c0e:	rex.WR pop rdi
  433c10:	rex.R
  433c11:	rex.B
  433c12:	rex.WRX
  433c13:	rex.RXB
  433c14:	rex.RB push r10
  433c16:	add    BYTE PTR [rbx+0x49],dl
  433c19:	rex.RXB
  433c1a:	rex.R
  433c1b:	rex.B
  433c1c:	rex.WRX
  433c1d:	rex.RXB
  433c1e:	rex.RB push r10
  433c20:	add    BYTE PTR [rbx+0x77],dl
  433c23:	(bad)  
  433c24:	jo     0x433c46
  433c26:	jae    0x433c98
  433c28:	(bad)  
  433c29:	movsxd esp,DWORD PTR [rbp+0x20]
  433c2c:	fs (bad) 
  433c2e:	outs   dx,BYTE PTR ds:[rsi]
  433c2f:	addr32 gs jb 0x433ca2
  433c33:	jne    0x433ca8
  433c35:	ins    BYTE PTR es:[rdi],dx
  433c36:	jns    0x433c58
  433c38:	ins    BYTE PTR es:[rdi],dx
  433c39:	outs   dx,DWORD PTR ds:[rsi]
  433c3a:	ja     0x433c3c
  433c3c:	rex.RXB
  433c3d:	rex.R
  433c3e:	rex.X pop rdi
  433c40:	push   rbx
  433c41:	rex.WB
  433c42:	rex.RXB
  433c43:	rex.WRX
  433c44:	rex.B
  433c45:	rex.WR pop rdi
  433c47:	rex.RXB push r10
  433c49:	rex.B
  433c4a:	rex.WRX push rsp
  433c4c:	add    BYTE PTR [rbx+0x49],dl
  433c4f:	rex.RXB
  433c50:	rex.RXB push r10
  433c52:	rex.B
  433c53:	rex.WRX push rsp
  433c55:	add    BYTE PTR [rbp+0x6f],cl
  433c58:	outs   dx,BYTE PTR ds:[rsi]
  433c59:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x646f6d20
  433c61:	and    BYTE PTR gs:[rdi+0x72],ah
  433c65:	(bad)  
  433c66:	outs   dx,BYTE PTR ds:[rsi]
  433c67:	je     0x433cce
  433c69:	add    BYTE PTR fs:[rdi+0x44],al
  433c6d:	rex.X pop rdi
  433c6f:	push   rbx
  433c70:	rex.WB
  433c71:	rex.RXB
  433c72:	rex.WRX
  433c73:	rex.B
  433c74:	rex.WR pop rdi
  433c76:	push   rdx
  433c77:	rex.RB push r12
  433c79:	push   rdx
  433c7a:	rex.B
  433c7b:	rex.XB push r12
  433c7d:	add    BYTE PTR [rbx+0x49],dl
  433c80:	rex.RXB push r10
  433c82:	rex.RB push r12
  433c84:	push   rdx
  433c85:	rex.B
  433c86:	rex.XB push r12
	...
  433c90:	rex.WRX
  433c91:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  433c98:	jb     0x433cff
  433c9a:	ins    BYTE PTR es:[rdi],dx
  433c9b:	imul   ebp,DWORD PTR [rsi+0x71],0x68736975
  433ca2:	and    BYTE PTR [rbp+0x6f],ch
  433ca5:	outs   dx,BYTE PTR ds:[rsi]
  433ca6:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x646f6d20
  433cae:	add    BYTE PTR gs:[rdi+0x44],al
  433cb2:	rex.X pop rdi
  433cb4:	push   rbx
  433cb5:	rex.WB
  433cb6:	rex.RXB
  433cb7:	rex.WRX
  433cb8:	rex.B
  433cb9:	rex.WR pop rdi
  433cbb:	rex.WRB push r11
  433cbd:	rex.RXB add BYTE PTR [r11+0x49],r10b
  433cc1:	rex.RXB
  433cc2:	rex.WRB push r11
  433cc4:	rex.RXB add BYTE PTR [r13+0x6f],r9b
  433cc8:	outs   dx,BYTE PTR ds:[rsi]
  433cc9:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x646f6d20
  433cd1:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  433cd6:	(bad)  
  433cd7:	and    BYTE PTR [rcx+0x76],ah
  433cda:	(bad)  
  433cdb:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4700656c
  433ce3:	rex.R
  433ce4:	rex.X pop rdi
  433ce6:	push   rbx
  433ce7:	rex.WB
  433ce8:	rex.RXB
  433ce9:	rex.WRX
  433cea:	rex.B
  433ceb:	rex.WR pop rdi
  433ced:	push   rbx
  433cee:	rex.WRXB push r13
  433cf0:	rex.WRX
  433cf1:	add    BYTE PTR [rbx+0x49],r10b
  433cf5:	rex.RXB push r11
  433cf7:	rex.WRXB push r13
  433cf9:	rex.WRX
  433cfa:	add    BYTE PTR [rbx+0x6f],r10b
  433cfe:	jne    0x433d6e
  433d00:	and    BYTE PTR fs:[rbx+0x6f],ah
  433d04:	ins    DWORD PTR es:[rdi],dx
  433d05:	jo     0x433d73
  433d07:	gs je  0x433d6f
  433d0a:	add    BYTE PTR fs:[rdi+0x44],al
  433d0e:	rex.X pop rdi
  433d10:	push   rbx
  433d11:	rex.WB
  433d12:	rex.RXB
  433d13:	rex.WRX
  433d14:	rex.B
  433d15:	rex.WR pop rdi
  433d17:	push   rbx
  433d18:	rex.B
  433d19:	rex.WXB add BYTE PTR [r11+0x49],dl
  433d1d:	rex.RXB push r11
  433d1f:	rex.B
  433d20:	rex.WXB add BYTE PTR [r11+0x65],dl
  433d24:	movsxd esi,DWORD PTR [rbp+0x72]
  433d27:	and    BYTE PTR gs:[rcx+0x74],ah
  433d2b:	je     0x433d92
  433d2d:	outs   dx,BYTE PTR ds:[rsi]
  433d2e:	je     0x433d99
  433d30:	outs   dx,DWORD PTR ds:[rsi]
  433d31:	outs   dx,BYTE PTR ds:[rsi]
  433d32:	add    BYTE PTR [rdi+0x44],al
  433d35:	rex.X pop rdi
  433d37:	push   rbx
  433d38:	rex.WB
  433d39:	rex.RXB
  433d3a:	rex.WRX
  433d3b:	rex.B
  433d3c:	rex.WR pop rdi
  433d3e:	push   rax
  433d3f:	push   rdx
  433d40:	rex.WB
  433d41:	rex.WRXB add BYTE PTR [r11+0x49],r10b
  433d45:	rex.RXB push r8
  433d47:	push   rdx
  433d48:	rex.WB
  433d49:	rex.WRXB add BYTE PTR [r15+0x44],r8b
  433d4d:	rex.X pop rdi
  433d4f:	push   rbx
  433d50:	rex.WB
  433d51:	rex.RXB
  433d52:	rex.WRX
  433d53:	rex.B
  433d54:	rex.WR pop rdi
  433d56:	push   rdx
  433d57:	rex.RB
  433d58:	rex.B
  433d59:	rex.WR push rsp
  433d5b:	rex.WB
  433d5c:	rex.WRB
  433d5d:	rex.RB pop r15
  433d5f:	xor    esi,DWORD PTR [rbx]
  433d61:	add    BYTE PTR [rbx+0x49],dl
  433d64:	rex.RXB xor r14d,DWORD PTR [r11]
  433d67:	add    BYTE PTR [rdx+0x65],dl
  433d6a:	(bad)  
  433d6b:	ins    BYTE PTR es:[rdi],dx
  433d6c:	sub    eax,0x656d6974
  433d71:	and    BYTE PTR [rbp+0x76],ah
  433d74:	outs   dx,BYTE PTR gs:[rsi]
  433d76:	je     0x433d98
  433d78:	xor    esi,DWORD PTR [rbx]
  433d7a:	add    BYTE PTR [rdi+0x44],al
  433d7d:	rex.X pop rdi
  433d7f:	push   rbx
  433d80:	rex.WB
  433d81:	rex.RXB
  433d82:	rex.WRX
  433d83:	rex.B
  433d84:	rex.WR pop rdi
  433d86:	push   rdx
  433d87:	rex.RB
  433d88:	rex.B
  433d89:	rex.WR push rsp
  433d8b:	rex.WB
  433d8c:	rex.WRB
  433d8d:	rex.RB pop r15
  433d8f:	xor    esi,DWORD PTR [rax+rax*1]
  433d92:	push   rbx
  433d93:	rex.WB
  433d94:	xor    r14d,DWORD PTR [r8+r8*1]
  433d98:	push   rdx
  433d99:	gs (bad) 
  433d9b:	ins    BYTE PTR es:[rdi],dx
  433d9c:	sub    eax,0x656d6974
  433da1:	and    BYTE PTR [rbp+0x76],ah
  433da4:	outs   dx,BYTE PTR gs:[rsi]
  433da6:	je     0x433dc8
  433da8:	xor    esi,DWORD PTR [rax+rax*1]
  433dab:	rex.RXB
  433dac:	rex.R
  433dad:	rex.X pop rdi
  433daf:	push   rbx
  433db0:	rex.WB
  433db1:	rex.RXB
  433db2:	rex.WRX
  433db3:	rex.B
  433db4:	rex.WR pop rdi
  433db6:	push   rdx
  433db7:	rex.RB
  433db8:	rex.B
  433db9:	rex.WR push rsp
  433dbb:	rex.WB
  433dbc:	rex.WRB
  433dbd:	rex.RB pop r15
  433dbf:	xor    esi,DWORD PTR [rip+0x47495300]        # 0x478c90c5
  433dc5:	xor    esi,DWORD PTR [rip+0x61655200]        # 0x61a88fcb
  433dcb:	ins    BYTE PTR es:[rdi],dx
  433dcc:	sub    eax,0x656d6974
  433dd1:	and    BYTE PTR [rbp+0x76],ah
  433dd4:	outs   dx,BYTE PTR gs:[rsi]
  433dd6:	je     0x433df8
  433dd8:	xor    esi,DWORD PTR [rip+0x42444700]        # 0x428784de
  433dde:	pop    rdi
  433ddf:	push   rbx
  433de0:	rex.WB
  433de1:	rex.RXB
  433de2:	rex.WRX
  433de3:	rex.B
  433de4:	rex.WR pop rdi
  433de6:	push   rdx
  433de7:	rex.RB
  433de8:	rex.B
  433de9:	rex.WR push rsp
  433deb:	rex.WB
  433dec:	rex.WRB
  433ded:	rex.RB pop r15
  433def:	xor    esi,DWORD PTR [rsi]
  433df1:	add    BYTE PTR [rbx+0x49],dl
  433df4:	rex.RXB xor r14d,DWORD PTR [r14]
  433df7:	add    BYTE PTR [rdx+0x65],dl
  433dfa:	(bad)  
  433dfb:	ins    BYTE PTR es:[rdi],dx
  433dfc:	sub    eax,0x656d6974
  433e01:	and    BYTE PTR [rbp+0x76],ah
  433e04:	outs   dx,BYTE PTR gs:[rsi]
  433e06:	je     0x433e28
  433e08:	xor    esi,DWORD PTR [rsi]
  433e0a:	add    BYTE PTR [rdi+0x44],al
  433e0d:	rex.X pop rdi
  433e0f:	push   rbx
  433e10:	rex.WB
  433e11:	rex.RXB
  433e12:	rex.WRX
  433e13:	rex.B
  433e14:	rex.WR pop rdi
  433e16:	push   rdx
  433e17:	rex.RB
  433e18:	rex.B
  433e19:	rex.WR push rsp
  433e1b:	rex.WB
  433e1c:	rex.WRB
  433e1d:	rex.RB pop r15
  433e1f:	xor    esi,DWORD PTR [rdi]
  433e21:	add    BYTE PTR [rbx+0x49],dl
  433e24:	rex.RXB xor r14d,DWORD PTR [r15]
  433e27:	add    BYTE PTR [rdx+0x65],dl
  433e2a:	(bad)  
  433e2b:	ins    BYTE PTR es:[rdi],dx
  433e2c:	sub    eax,0x656d6974
  433e31:	and    BYTE PTR [rbp+0x76],ah
  433e34:	outs   dx,BYTE PTR gs:[rsi]
  433e36:	je     0x433e58
  433e38:	xor    esi,DWORD PTR [rdi]
  433e3a:	add    BYTE PTR [rdi+0x44],al
  433e3d:	rex.X pop rdi
  433e3f:	push   rbx
  433e40:	rex.WB
  433e41:	rex.RXB
  433e42:	rex.WRX
  433e43:	rex.B
  433e44:	rex.WR pop rdi
  433e46:	push   rdx
  433e47:	rex.RB
  433e48:	rex.B
  433e49:	rex.WR push rsp
  433e4b:	rex.WB
  433e4c:	rex.WRB
  433e4d:	rex.RB pop r15
  433e4f:	xor    edi,DWORD PTR [rax]
  433e51:	add    BYTE PTR [rbx+0x49],dl
  433e54:	rex.RXB xor r15d,DWORD PTR [r8]
  433e57:	add    BYTE PTR [rdx+0x65],dl
  433e5a:	(bad)  
  433e5b:	ins    BYTE PTR es:[rdi],dx
  433e5c:	sub    eax,0x656d6974
  433e61:	and    BYTE PTR [rbp+0x76],ah
  433e64:	outs   dx,BYTE PTR gs:[rsi]
  433e66:	je     0x433e88
  433e68:	xor    edi,DWORD PTR [rax]
  433e6a:	add    BYTE PTR [rdi+0x44],al
  433e6d:	rex.X pop rdi
  433e6f:	push   rbx
  433e70:	rex.WB
  433e71:	rex.RXB
  433e72:	rex.WRX
  433e73:	rex.B
  433e74:	rex.WR pop rdi
  433e76:	push   rdx
  433e77:	rex.RB
  433e78:	rex.B
  433e79:	rex.WR push rsp
  433e7b:	rex.WB
  433e7c:	rex.WRB
  433e7d:	rex.RB pop r15
  433e7f:	xor    edi,DWORD PTR [rcx]
  433e81:	add    BYTE PTR [rbx+0x49],dl
  433e84:	rex.RXB xor r15d,DWORD PTR [r9]
  433e87:	add    BYTE PTR [rdx+0x65],dl
  433e8a:	(bad)  
  433e8b:	ins    BYTE PTR es:[rdi],dx
  433e8c:	sub    eax,0x656d6974
  433e91:	and    BYTE PTR [rbp+0x76],ah
  433e94:	outs   dx,BYTE PTR gs:[rsi]
  433e96:	je     0x433eb8
  433e98:	xor    edi,DWORD PTR [rcx]
  433e9a:	add    BYTE PTR [rdi+0x44],al
  433e9d:	rex.X pop rdi
  433e9f:	push   rbx
  433ea0:	rex.WB
  433ea1:	rex.RXB
  433ea2:	rex.WRX
  433ea3:	rex.B
  433ea4:	rex.WR pop rdi
  433ea6:	push   rdx
  433ea7:	rex.RB
  433ea8:	rex.B
  433ea9:	rex.WR push rsp
  433eab:	rex.WB
  433eac:	rex.WRB
  433ead:	rex.RB pop r15
  433eaf:	xor    al,0x30
  433eb1:	add    BYTE PTR [rbx+0x49],dl
  433eb4:	rex.RXB xor al,0x30
  433eb7:	add    BYTE PTR [rdx+0x65],dl
  433eba:	(bad)  
  433ebb:	ins    BYTE PTR es:[rdi],dx
  433ebc:	sub    eax,0x656d6974
  433ec1:	and    BYTE PTR [rbp+0x76],ah
  433ec4:	outs   dx,BYTE PTR gs:[rsi]
  433ec6:	je     0x433ee8
  433ec8:	xor    al,0x30
  433eca:	add    BYTE PTR [rdi+0x44],al
  433ecd:	rex.X pop rdi
  433ecf:	push   rbx
  433ed0:	rex.WB
  433ed1:	rex.RXB
  433ed2:	rex.WRX
  433ed3:	rex.B
  433ed4:	rex.WR pop rdi
  433ed6:	push   rdx
  433ed7:	rex.RB
  433ed8:	rex.B
  433ed9:	rex.WR push rsp
  433edb:	rex.WB
  433edc:	rex.WRB
  433edd:	rex.RB pop r15
  433edf:	xor    al,0x31
  433ee1:	add    BYTE PTR [rbx+0x49],dl
  433ee4:	rex.RXB xor al,0x31
  433ee7:	add    BYTE PTR [rdx+0x65],dl
  433eea:	(bad)  
  433eeb:	ins    BYTE PTR es:[rdi],dx
  433eec:	sub    eax,0x656d6974
  433ef1:	and    BYTE PTR [rbp+0x76],ah
  433ef4:	outs   dx,BYTE PTR gs:[rsi]
  433ef6:	je     0x433f18
  433ef8:	xor    al,0x31
  433efa:	add    BYTE PTR [rdi+0x44],al
  433efd:	rex.X pop rdi
  433eff:	push   rbx
  433f00:	rex.WB
  433f01:	rex.RXB
  433f02:	rex.WRX
  433f03:	rex.B
  433f04:	rex.WR pop rdi
  433f06:	push   rdx
  433f07:	rex.RB
  433f08:	rex.B
  433f09:	rex.WR push rsp
  433f0b:	rex.WB
  433f0c:	rex.WRB
  433f0d:	rex.RB pop r15
  433f0f:	xor    al,0x32
  433f11:	add    BYTE PTR [rbx+0x49],dl
  433f14:	rex.RXB xor al,0x32
  433f17:	add    BYTE PTR [rdx+0x65],dl
  433f1a:	(bad)  
  433f1b:	ins    BYTE PTR es:[rdi],dx
  433f1c:	sub    eax,0x656d6974
  433f21:	and    BYTE PTR [rbp+0x76],ah
  433f24:	outs   dx,BYTE PTR gs:[rsi]
  433f26:	je     0x433f48
  433f28:	xor    al,0x32
  433f2a:	add    BYTE PTR [rdi+0x44],al
  433f2d:	rex.X pop rdi
  433f2f:	push   rbx
  433f30:	rex.WB
  433f31:	rex.RXB
  433f32:	rex.WRX
  433f33:	rex.B
  433f34:	rex.WR pop rdi
  433f36:	push   rdx
  433f37:	rex.RB
  433f38:	rex.B
  433f39:	rex.WR push rsp
  433f3b:	rex.WB
  433f3c:	rex.WRB
  433f3d:	rex.RB pop r15
  433f3f:	xor    al,0x33
  433f41:	add    BYTE PTR [rbx+0x49],dl
  433f44:	rex.RXB xor al,0x33
  433f47:	add    BYTE PTR [rdx+0x65],dl
  433f4a:	(bad)  
  433f4b:	ins    BYTE PTR es:[rdi],dx
  433f4c:	sub    eax,0x656d6974
  433f51:	and    BYTE PTR [rbp+0x76],ah
  433f54:	outs   dx,BYTE PTR gs:[rsi]
  433f56:	je     0x433f78
  433f58:	xor    al,0x33
  433f5a:	add    BYTE PTR [rdi+0x44],al
  433f5d:	rex.X pop rdi
  433f5f:	push   rbx
  433f60:	rex.WB
  433f61:	rex.RXB
  433f62:	rex.WRX
  433f63:	rex.B
  433f64:	rex.WR pop rdi
  433f66:	push   rdx
  433f67:	rex.RB
  433f68:	rex.B
  433f69:	rex.WR push rsp
  433f6b:	rex.WB
  433f6c:	rex.WRB
  433f6d:	rex.RB pop r15
  433f6f:	xor    al,0x34
  433f71:	add    BYTE PTR [rbx+0x49],dl
  433f74:	rex.RXB xor al,0x34
  433f77:	add    BYTE PTR [rdx+0x65],dl
  433f7a:	(bad)  
  433f7b:	ins    BYTE PTR es:[rdi],dx
  433f7c:	sub    eax,0x656d6974
  433f81:	and    BYTE PTR [rbp+0x76],ah
  433f84:	outs   dx,BYTE PTR gs:[rsi]
  433f86:	je     0x433fa8
  433f88:	xor    al,0x34
  433f8a:	add    BYTE PTR [rdi+0x44],al
  433f8d:	rex.X pop rdi
  433f8f:	push   rbx
  433f90:	rex.WB
  433f91:	rex.RXB
  433f92:	rex.WRX
  433f93:	rex.B
  433f94:	rex.WR pop rdi
  433f96:	push   rdx
  433f97:	rex.RB
  433f98:	rex.B
  433f99:	rex.WR push rsp
  433f9b:	rex.WB
  433f9c:	rex.WRB
  433f9d:	rex.RB pop r15
  433f9f:	xor    al,0x35
  433fa1:	add    BYTE PTR [rbx+0x49],dl
  433fa4:	rex.RXB xor al,0x35
  433fa7:	add    BYTE PTR [rdx+0x65],dl
  433faa:	(bad)  
  433fab:	ins    BYTE PTR es:[rdi],dx
  433fac:	sub    eax,0x656d6974
  433fb1:	and    BYTE PTR [rbp+0x76],ah
  433fb4:	outs   dx,BYTE PTR gs:[rsi]
  433fb6:	je     0x433fd8
  433fb8:	xor    al,0x35
  433fba:	add    BYTE PTR [rdi+0x44],al
  433fbd:	rex.X pop rdi
  433fbf:	push   rbx
  433fc0:	rex.WB
  433fc1:	rex.RXB
  433fc2:	rex.WRX
  433fc3:	rex.B
  433fc4:	rex.WR pop rdi
  433fc6:	push   rdx
  433fc7:	rex.RB
  433fc8:	rex.B
  433fc9:	rex.WR push rsp
  433fcb:	rex.WB
  433fcc:	rex.WRB
  433fcd:	rex.RB pop r15
  433fcf:	xor    al,0x36
  433fd1:	add    BYTE PTR [rbx+0x49],dl
  433fd4:	rex.RXB xor al,0x36
  433fd7:	add    BYTE PTR [rdx+0x65],dl
  433fda:	(bad)  
  433fdb:	ins    BYTE PTR es:[rdi],dx
  433fdc:	sub    eax,0x656d6974
  433fe1:	and    BYTE PTR [rbp+0x76],ah
  433fe4:	outs   dx,BYTE PTR gs:[rsi]
  433fe6:	je     0x434008
  433fe8:	xor    al,0x36
  433fea:	add    BYTE PTR [rdi+0x44],al
  433fed:	rex.X pop rdi
  433fef:	push   rbx
  433ff0:	rex.WB
  433ff1:	rex.RXB
  433ff2:	rex.WRX
  433ff3:	rex.B
  433ff4:	rex.WR pop rdi
  433ff6:	push   rdx
  433ff7:	rex.RB
  433ff8:	rex.B
  433ff9:	rex.WR push rsp
  433ffb:	rex.WB
  433ffc:	rex.WRB
  433ffd:	rex.RB pop r15
  433fff:	xor    al,0x37
  434001:	add    BYTE PTR [rbx+0x49],dl
  434004:	rex.RXB xor al,0x37
  434007:	add    BYTE PTR [rdx+0x65],dl
  43400a:	(bad)  
  43400b:	ins    BYTE PTR es:[rdi],dx
  43400c:	sub    eax,0x656d6974
  434011:	and    BYTE PTR [rbp+0x76],ah
  434014:	outs   dx,BYTE PTR gs:[rsi]
  434016:	je     0x434038
  434018:	xor    al,0x37
  43401a:	add    BYTE PTR [rdi+0x44],al
  43401d:	rex.X pop rdi
  43401f:	push   rbx
  434020:	rex.WB
  434021:	rex.RXB
  434022:	rex.WRX
  434023:	rex.B
  434024:	rex.WR pop rdi
  434026:	push   rdx
  434027:	rex.RB
  434028:	rex.B
  434029:	rex.WR push rsp
  43402b:	rex.WB
  43402c:	rex.WRB
  43402d:	rex.RB pop r15
  43402f:	xor    al,0x38
  434031:	add    BYTE PTR [rbx+0x49],dl
  434034:	rex.RXB xor al,0x38
  434037:	add    BYTE PTR [rdx+0x65],dl
  43403a:	(bad)  
  43403b:	ins    BYTE PTR es:[rdi],dx
  43403c:	sub    eax,0x656d6974
  434041:	and    BYTE PTR [rbp+0x76],ah
  434044:	outs   dx,BYTE PTR gs:[rsi]
  434046:	je     0x434068
  434048:	xor    al,0x38
  43404a:	add    BYTE PTR [rdi+0x44],al
  43404d:	rex.X pop rdi
  43404f:	push   rbx
  434050:	rex.WB
  434051:	rex.RXB
  434052:	rex.WRX
  434053:	rex.B
  434054:	rex.WR pop rdi
  434056:	push   rdx
  434057:	rex.RB
  434058:	rex.B
  434059:	rex.WR push rsp
  43405b:	rex.WB
  43405c:	rex.WRB
  43405d:	rex.RB pop r15
  43405f:	xor    al,0x39
  434061:	add    BYTE PTR [rbx+0x49],dl
  434064:	rex.RXB xor al,0x39
  434067:	add    BYTE PTR [rdx+0x65],dl
  43406a:	(bad)  
  43406b:	ins    BYTE PTR es:[rdi],dx
  43406c:	sub    eax,0x656d6974
  434071:	and    BYTE PTR [rbp+0x76],ah
  434074:	outs   dx,BYTE PTR gs:[rsi]
  434076:	je     0x434098
  434078:	xor    al,0x39
  43407a:	add    BYTE PTR [rdi+0x44],al
  43407d:	rex.X pop rdi
  43407f:	push   rbx
  434080:	rex.WB
  434081:	rex.RXB
  434082:	rex.WRX
  434083:	rex.B
  434084:	rex.WR pop rdi
  434086:	push   rdx
  434087:	rex.RB
  434088:	rex.B
  434089:	rex.WR push rsp
  43408b:	rex.WB
  43408c:	rex.WRB
  43408d:	rex.RB pop r15
  43408f:	xor    eax,0x49530030
  434094:	rex.RXB xor eax,0x65520030
  43409a:	(bad)  
  43409b:	ins    BYTE PTR es:[rdi],dx
  43409c:	sub    eax,0x656d6974
  4340a1:	and    BYTE PTR [rbp+0x76],ah
  4340a4:	outs   dx,BYTE PTR gs:[rsi]
  4340a6:	je     0x4340c8
  4340a8:	xor    eax,0x44470030
  4340ad:	rex.X pop rdi
  4340af:	push   rbx
  4340b0:	rex.WB
  4340b1:	rex.RXB
  4340b2:	rex.WRX
  4340b3:	rex.B
  4340b4:	rex.WR pop rdi
  4340b6:	push   rdx
  4340b7:	rex.RB
  4340b8:	rex.B
  4340b9:	rex.WR push rsp
  4340bb:	rex.WB
  4340bc:	rex.WRB
  4340bd:	rex.RB pop r15
  4340bf:	xor    eax,0x49530031
  4340c4:	rex.RXB xor eax,0x65520031
  4340ca:	(bad)  
  4340cb:	ins    BYTE PTR es:[rdi],dx
  4340cc:	sub    eax,0x656d6974
  4340d1:	and    BYTE PTR [rbp+0x76],ah
  4340d4:	outs   dx,BYTE PTR gs:[rsi]
  4340d6:	je     0x4340f8
  4340d8:	xor    eax,0x44470031
  4340dd:	rex.X pop rdi
  4340df:	push   rbx
  4340e0:	rex.WB
  4340e1:	rex.RXB
  4340e2:	rex.WRX
  4340e3:	rex.B
  4340e4:	rex.WR pop rdi
  4340e6:	push   rdx
  4340e7:	rex.RB
  4340e8:	rex.B
  4340e9:	rex.WR push rsp
  4340eb:	rex.WB
  4340ec:	rex.WRB
  4340ed:	rex.RB pop r15
  4340ef:	xor    eax,0x49530032
  4340f4:	rex.RXB xor eax,0x65520032
  4340fa:	(bad)  
  4340fb:	ins    BYTE PTR es:[rdi],dx
  4340fc:	sub    eax,0x656d6974
  434101:	and    BYTE PTR [rbp+0x76],ah
  434104:	outs   dx,BYTE PTR gs:[rsi]
  434106:	je     0x434128
  434108:	xor    eax,0x44470032
  43410d:	rex.X pop rdi
  43410f:	push   rbx
  434110:	rex.WB
  434111:	rex.RXB
  434112:	rex.WRX
  434113:	rex.B
  434114:	rex.WR pop rdi
  434116:	push   rdx
  434117:	rex.RB
  434118:	rex.B
  434119:	rex.WR push rsp
  43411b:	rex.WB
  43411c:	rex.WRB
  43411d:	rex.RB pop r15
  43411f:	xor    eax,0x49530033
  434124:	rex.RXB xor eax,0x65520033
  43412a:	(bad)  
  43412b:	ins    BYTE PTR es:[rdi],dx
  43412c:	sub    eax,0x656d6974
  434131:	and    BYTE PTR [rbp+0x76],ah
  434134:	outs   dx,BYTE PTR gs:[rsi]
  434136:	je     0x434158
  434138:	xor    eax,0x44470033
  43413d:	rex.X pop rdi
  43413f:	push   rbx
  434140:	rex.WB
  434141:	rex.RXB
  434142:	rex.WRX
  434143:	rex.B
  434144:	rex.WR pop rdi
  434146:	push   rdx
  434147:	rex.RB
  434148:	rex.B
  434149:	rex.WR push rsp
  43414b:	rex.WB
  43414c:	rex.WRB
  43414d:	rex.RB pop r15
  43414f:	xor    eax,0x49530034
  434154:	rex.RXB xor eax,0x65520034
  43415a:	(bad)  
  43415b:	ins    BYTE PTR es:[rdi],dx
  43415c:	sub    eax,0x656d6974
  434161:	and    BYTE PTR [rbp+0x76],ah
  434164:	outs   dx,BYTE PTR gs:[rsi]
  434166:	je     0x434188
  434168:	xor    eax,0x44470034
  43416d:	rex.X pop rdi
  43416f:	push   rbx
  434170:	rex.WB
  434171:	rex.RXB
  434172:	rex.WRX
  434173:	rex.B
  434174:	rex.WR pop rdi
  434176:	push   rdx
  434177:	rex.RB
  434178:	rex.B
  434179:	rex.WR push rsp
  43417b:	rex.WB
  43417c:	rex.WRB
  43417d:	rex.RB pop r15
  43417f:	xor    eax,0x49530035
  434184:	rex.RXB xor eax,0x65520035
  43418a:	(bad)  
  43418b:	ins    BYTE PTR es:[rdi],dx
  43418c:	sub    eax,0x656d6974
  434191:	and    BYTE PTR [rbp+0x76],ah
  434194:	outs   dx,BYTE PTR gs:[rsi]
  434196:	je     0x4341b8
  434198:	xor    eax,0x44470035
  43419d:	rex.X pop rdi
  43419f:	push   rbx
  4341a0:	rex.WB
  4341a1:	rex.RXB
  4341a2:	rex.WRX
  4341a3:	rex.B
  4341a4:	rex.WR pop rdi
  4341a6:	push   rdx
  4341a7:	rex.RB
  4341a8:	rex.B
  4341a9:	rex.WR push rsp
  4341ab:	rex.WB
  4341ac:	rex.WRB
  4341ad:	rex.RB pop r15
  4341af:	xor    eax,0x49530036
  4341b4:	rex.RXB xor eax,0x65520036
  4341ba:	(bad)  
  4341bb:	ins    BYTE PTR es:[rdi],dx
  4341bc:	sub    eax,0x656d6974
  4341c1:	and    BYTE PTR [rbp+0x76],ah
  4341c4:	outs   dx,BYTE PTR gs:[rsi]
  4341c6:	je     0x4341e8
  4341c8:	xor    eax,0x44470036
  4341cd:	rex.X pop rdi
  4341cf:	push   rbx
  4341d0:	rex.WB
  4341d1:	rex.RXB
  4341d2:	rex.WRX
  4341d3:	rex.B
  4341d4:	rex.WR pop rdi
  4341d6:	push   rdx
  4341d7:	rex.RB
  4341d8:	rex.B
  4341d9:	rex.WR push rsp
  4341db:	rex.WB
  4341dc:	rex.WRB
  4341dd:	rex.RB pop r15
  4341df:	xor    eax,0x49530037
  4341e4:	rex.RXB xor eax,0x65520037
  4341ea:	(bad)  
  4341eb:	ins    BYTE PTR es:[rdi],dx
  4341ec:	sub    eax,0x656d6974
  4341f1:	and    BYTE PTR [rbp+0x76],ah
  4341f4:	outs   dx,BYTE PTR gs:[rsi]
  4341f6:	je     0x434218
  4341f8:	xor    eax,0x44470037
  4341fd:	rex.X pop rdi
  4341ff:	push   rbx
  434200:	rex.WB
  434201:	rex.RXB
  434202:	rex.WRX
  434203:	rex.B
  434204:	rex.WR pop rdi
  434206:	push   rdx
  434207:	rex.RB
  434208:	rex.B
  434209:	rex.WR push rsp
  43420b:	rex.WB
  43420c:	rex.WRB
  43420d:	rex.RB pop r15
  43420f:	xor    eax,0x49530038
  434214:	rex.RXB xor eax,0x65520038
  43421a:	(bad)  
  43421b:	ins    BYTE PTR es:[rdi],dx
  43421c:	sub    eax,0x656d6974
  434221:	and    BYTE PTR [rbp+0x76],ah
  434224:	outs   dx,BYTE PTR gs:[rsi]
  434226:	je     0x434248
  434228:	xor    eax,0x44470038
  43422d:	rex.X pop rdi
  43422f:	push   rbx
  434230:	rex.WB
  434231:	rex.RXB
  434232:	rex.WRX
  434233:	rex.B
  434234:	rex.WR pop rdi
  434236:	push   rdx
  434237:	rex.RB
  434238:	rex.B
  434239:	rex.WR push rsp
  43423b:	rex.WB
  43423c:	rex.WRB
  43423d:	rex.RB pop r15
  43423f:	xor    eax,0x49530039
  434244:	rex.RXB xor eax,0x65520039
  43424a:	(bad)  
  43424b:	ins    BYTE PTR es:[rdi],dx
  43424c:	sub    eax,0x656d6974
  434251:	and    BYTE PTR [rbp+0x76],ah
  434254:	outs   dx,BYTE PTR gs:[rsi]
  434256:	je     0x434278
  434258:	xor    eax,0x44470039
  43425d:	rex.X pop rdi
  43425f:	push   rbx
  434260:	rex.WB
  434261:	rex.RXB
  434262:	rex.WRX
  434263:	rex.B
  434264:	rex.WR pop rdi
  434266:	push   rdx
  434267:	rex.RB
  434268:	rex.B
  434269:	rex.WR push rsp
  43426b:	rex.WB
  43426c:	rex.WRB
  43426d:	rex.RB pop r15
  43426f:	xor    BYTE PTR ss:[rax],al
  434272:	push   rbx
  434273:	rex.WB
  434274:	rex.RXB
  434275:	xor    BYTE PTR ss:[rax],al
  434278:	push   rdx
  434279:	gs (bad) 
  43427b:	ins    BYTE PTR es:[rdi],dx
  43427c:	sub    eax,0x656d6974
  434281:	and    BYTE PTR [rbp+0x76],ah
  434284:	outs   dx,BYTE PTR gs:[rsi]
  434286:	je     0x4342a8
  434288:	xor    BYTE PTR ss:[rax],al
  43428b:	rex.RXB
  43428c:	rex.R
  43428d:	rex.X pop rdi
  43428f:	push   rbx
  434290:	rex.WB
  434291:	rex.RXB
  434292:	rex.WRX
  434293:	rex.B
  434294:	rex.WR pop rdi
  434296:	push   rdx
  434297:	rex.RB
  434298:	rex.B
  434299:	rex.WR push rsp
  43429b:	rex.WB
  43429c:	rex.WRB
  43429d:	rex.RB pop r15
  43429f:	xor    DWORD PTR ss:[rax],eax
  4342a2:	push   rbx
  4342a3:	rex.WB
  4342a4:	rex.RXB
  4342a5:	xor    DWORD PTR ss:[rax],eax
  4342a8:	push   rdx
  4342a9:	gs (bad) 
  4342ab:	ins    BYTE PTR es:[rdi],dx
  4342ac:	sub    eax,0x656d6974
  4342b1:	and    BYTE PTR [rbp+0x76],ah
  4342b4:	outs   dx,BYTE PTR gs:[rsi]
  4342b6:	je     0x4342d8
  4342b8:	xor    DWORD PTR ss:[rax],eax
  4342bb:	rex.RXB
  4342bc:	rex.R
  4342bd:	rex.X pop rdi
  4342bf:	push   rbx
  4342c0:	rex.WB
  4342c1:	rex.RXB
  4342c2:	rex.WRX
  4342c3:	rex.B
  4342c4:	rex.WR pop rdi
  4342c6:	push   rdx
  4342c7:	rex.RB
  4342c8:	rex.B
  4342c9:	rex.WR push rsp
  4342cb:	rex.WB
  4342cc:	rex.WRB
  4342cd:	rex.RB pop r15
  4342cf:	xor    al,BYTE PTR ss:[rax]
  4342d2:	push   rbx
  4342d3:	rex.WB
  4342d4:	rex.RXB
  4342d5:	xor    al,BYTE PTR ss:[rax]
  4342d8:	push   rdx
  4342d9:	gs (bad) 
  4342db:	ins    BYTE PTR es:[rdi],dx
  4342dc:	sub    eax,0x656d6974
  4342e1:	and    BYTE PTR [rbp+0x76],ah
  4342e4:	outs   dx,BYTE PTR gs:[rsi]
  4342e6:	je     0x434308
  4342e8:	xor    al,BYTE PTR ss:[rax]
  4342eb:	rex.RXB
  4342ec:	rex.R
  4342ed:	rex.X pop rdi
  4342ef:	push   rbx
  4342f0:	rex.WB
  4342f1:	rex.RXB
  4342f2:	rex.WRX
  4342f3:	rex.B
  4342f4:	rex.WR pop rdi
  4342f6:	push   rdx
  4342f7:	rex.RB
  4342f8:	rex.B
  4342f9:	rex.WR push rsp
  4342fb:	rex.WB
  4342fc:	rex.WRB
  4342fd:	rex.RB pop r15
  4342ff:	xor    eax,DWORD PTR ss:[rax]
  434302:	push   rbx
  434303:	rex.WB
  434304:	rex.RXB
  434305:	xor    eax,DWORD PTR ss:[rax]
  434308:	push   rdx
  434309:	gs (bad) 
  43430b:	ins    BYTE PTR es:[rdi],dx
  43430c:	sub    eax,0x656d6974
  434311:	and    BYTE PTR [rbp+0x76],ah
  434314:	outs   dx,BYTE PTR gs:[rsi]
  434316:	je     0x434338
  434318:	xor    eax,DWORD PTR ss:[rax]
  43431b:	rex.RXB
  43431c:	rex.R
  43431d:	rex.X pop rdi
  43431f:	push   rbx
  434320:	rex.WB
  434321:	rex.RXB
  434322:	rex.WRX
  434323:	rex.B
  434324:	rex.WR pop rdi
  434326:	rex.XB
  434327:	rex.B
  434328:	rex.WRX
  434329:	rex.XB
  43432a:	rex.RB
  43432b:	rex.WR add BYTE PTR [rbx+0x49],r10b
  43432f:	rex.RXB
  434330:	rex.XB
  434331:	rex.B
  434332:	rex.WRX
  434333:	rex.XB
  434334:	rex.RB
  434335:	rex.WR add BYTE PTR [rdi+rdx*2+0x50],r9b
  43433a:	and    BYTE PTR [rcx+0x6e],ch
  43433d:	je     0x4343a4
  43433f:	jb     0x4343af
  434341:	(bad)  
  434342:	ins    BYTE PTR es:[rdi],dx
  434343:	and    BYTE PTR [rbx+0x69],dh
  434346:	outs   dx,BYTE PTR ds:[esi]
  434348:	(bad)  
  434349:	ins    BYTE PTR es:[rdi],dx
  43434a:	add    BYTE PTR [rdi+0x44],al
  43434d:	rex.X pop rdi
  43434f:	push   rbx
  434350:	rex.WB
  434351:	rex.RXB
  434352:	rex.WRX
  434353:	rex.B
  434354:	rex.WR pop rdi
  434356:	push   rdx
  434357:	rex.RB
  434358:	rex.B
  434359:	rex.WR push rsp
  43435b:	rex.WB
  43435c:	rex.WRB
  43435d:	rex.RB pop r15
  43435f:	xor    esi,DWORD PTR [rdx]
  434361:	add    BYTE PTR [rbx+0x49],dl
  434364:	rex.RXB xor r14d,DWORD PTR [r10]
  434367:	add    BYTE PTR [rdx+0x65],dl
  43436a:	(bad)  
  43436b:	ins    BYTE PTR es:[rdi],dx
  43436c:	sub    eax,0x656d6974
  434371:	and    BYTE PTR [rbp+0x76],ah
  434374:	outs   dx,BYTE PTR gs:[rsi]
  434376:	je     0x434398
  434378:	xor    esi,DWORD PTR [rdx]
  43437a:	add    BYTE PTR [rdi+0x44],al
  43437d:	rex.X pop rdi
  43437f:	push   rbx
  434380:	rex.WB
  434381:	rex.RXB
  434382:	rex.WRX
  434383:	rex.B
  434384:	rex.WR pop rdi
  434386:	push   rdx
  434387:	rex.RB
  434388:	rex.B
  434389:	rex.WR push rsp
  43438b:	rex.WB
  43438c:	rex.WRB
  43438d:	rex.RB pop r15
  43438f:	ss xor al,0x0
  434392:	push   rbx
  434393:	rex.WB
  434394:	rex.RXB
  434395:	ss xor al,0x0
  434398:	push   rdx
  434399:	gs (bad) 
  43439b:	ins    BYTE PTR es:[rdi],dx
  43439c:	sub    eax,0x656d6974
  4343a1:	and    BYTE PTR [rbp+0x76],ah
  4343a4:	outs   dx,BYTE PTR gs:[rsi]
  4343a6:	je     0x4343c8
  4343a8:	ss xor al,0x0
  4343ab:	rex.RXB
  4343ac:	rex.R
  4343ad:	rex.X pop rdi
  4343af:	push   rbx
  4343b0:	rex.WB
  4343b1:	rex.RXB
  4343b2:	rex.WRX
  4343b3:	rex.B
  4343b4:	rex.WR pop rdi
  4343b6:	push   rdx
  4343b7:	rex.RB
  4343b8:	rex.B
  4343b9:	rex.WR push rsp
  4343bb:	rex.WB
  4343bc:	rex.WRB
  4343bd:	rex.RB pop r15
  4343bf:	ss xor eax,0x47495300
  4343c5:	ss xor eax,0x61655200
  4343cb:	ins    BYTE PTR es:[rdi],dx
  4343cc:	sub    eax,0x656d6974
  4343d1:	and    BYTE PTR [rbp+0x76],ah
  4343d4:	outs   dx,BYTE PTR gs:[rsi]
  4343d6:	je     0x4343f8
  4343d8:	ss xor eax,0x42444700
  4343de:	pop    rdi
  4343df:	push   rbx
  4343e0:	rex.WB
  4343e1:	rex.RXB
  4343e2:	rex.WRX
  4343e3:	rex.B
  4343e4:	rex.WR pop rdi
  4343e6:	push   rdx
  4343e7:	rex.RB
  4343e8:	rex.B
  4343e9:	rex.WR push rsp
  4343eb:	rex.WB
  4343ec:	rex.WRB
  4343ed:	rex.RB pop r15
  4343ef:	ss add BYTE PTR ss:[rbx+0x49],dl
  4343f4:	rex.RXB
  4343f5:	ss add BYTE PTR ss:[rdx+0x65],dl
  4343fa:	(bad)  
  4343fb:	ins    BYTE PTR es:[rdi],dx
  4343fc:	sub    eax,0x656d6974
  434401:	and    BYTE PTR [rbp+0x76],ah
  434404:	outs   dx,BYTE PTR gs:[rsi]
  434406:	je     0x434428
  434408:	ss add BYTE PTR ss:[rdi+0x44],al
  43440d:	rex.X pop rdi
  43440f:	push   rbx
  434410:	rex.WB
  434411:	rex.RXB
  434412:	rex.WRX
  434413:	rex.B
  434414:	rex.WR pop rdi
  434416:	push   rdx
  434417:	rex.RB
  434418:	rex.B
  434419:	rex.WR push rsp
  43441b:	rex.WB
  43441c:	rex.WRB
  43441d:	rex.RB pop r15
  43441f:	ss (bad) 
  434421:	add    BYTE PTR [rbx+0x49],dl
  434424:	rex.RXB
  434425:	ss (bad) 
  434427:	add    BYTE PTR [rdx+0x65],dl
  43442a:	(bad)  
  43442b:	ins    BYTE PTR es:[rdi],dx
  43442c:	sub    eax,0x656d6974
  434431:	and    BYTE PTR [rbp+0x76],ah
  434434:	outs   dx,BYTE PTR gs:[rsi]
  434436:	je     0x434458
  434438:	ss (bad) 
  43443a:	add    BYTE PTR [rdi+0x44],al
  43443d:	rex.X pop rdi
  43443f:	push   rbx
  434440:	rex.WB
  434441:	rex.RXB
  434442:	rex.WRX
  434443:	rex.B
  434444:	rex.WR pop rdi
  434446:	push   rdx
  434447:	rex.RB
  434448:	rex.B
  434449:	rex.WR push rsp
  43444b:	rex.WB
  43444c:	rex.WRB
  43444d:	rex.RB pop r15
  43444f:	cmp    BYTE PTR ss:[rax],al
  434452:	push   rbx
  434453:	rex.WB
  434454:	rex.RXB
  434455:	cmp    BYTE PTR ss:[rax],al
  434458:	push   rdx
  434459:	gs (bad) 
  43445b:	ins    BYTE PTR es:[rdi],dx
  43445c:	sub    eax,0x656d6974
  434461:	and    BYTE PTR [rbp+0x76],ah
  434464:	outs   dx,BYTE PTR gs:[rsi]
  434466:	je     0x434488
  434468:	cmp    BYTE PTR ss:[rax],al
  43446b:	rex.RXB
  43446c:	rex.R
  43446d:	rex.X pop rdi
  43446f:	push   rbx
  434470:	rex.WB
  434471:	rex.RXB
  434472:	rex.WRX
  434473:	rex.B
  434474:	rex.WR pop rdi
  434476:	push   rdx
  434477:	rex.RB
  434478:	rex.B
  434479:	rex.WR push rsp
  43447b:	rex.WB
  43447c:	rex.WRB
  43447d:	rex.RB pop r15
  43447f:	cmp    DWORD PTR ss:[rax],eax
  434482:	push   rbx
  434483:	rex.WB
  434484:	rex.RXB
  434485:	cmp    DWORD PTR ss:[rax],eax
  434488:	push   rdx
  434489:	gs (bad) 
  43448b:	ins    BYTE PTR es:[rdi],dx
  43448c:	sub    eax,0x656d6974
  434491:	and    BYTE PTR [rbp+0x76],ah
  434494:	outs   dx,BYTE PTR gs:[rsi]
  434496:	je     0x4344b8
  434498:	cmp    DWORD PTR ss:[rax],eax
  43449b:	rex.RXB
  43449c:	rex.R
  43449d:	rex.X pop rdi
  43449f:	push   rbx
  4344a0:	rex.WB
  4344a1:	rex.RXB
  4344a2:	rex.WRX
  4344a3:	rex.B
  4344a4:	rex.WR pop rdi
  4344a6:	push   rdx
  4344a7:	rex.RB
  4344a8:	rex.B
  4344a9:	rex.WR push rsp
  4344ab:	rex.WB
  4344ac:	rex.WRB
  4344ad:	rex.RB pop r15
  4344af:	(bad)  
  4344b0:	xor    BYTE PTR [rax],al
  4344b2:	push   rbx
  4344b3:	rex.WB
  4344b4:	rex.RXB (bad) 
  4344b6:	xor    BYTE PTR [rax],al
  4344b8:	push   rdx
  4344b9:	gs (bad) 
  4344bb:	ins    BYTE PTR es:[rdi],dx
  4344bc:	sub    eax,0x656d6974
  4344c1:	and    BYTE PTR [rbp+0x76],ah
  4344c4:	outs   dx,BYTE PTR gs:[rsi]
  4344c6:	je     0x4344e8
  4344c8:	(bad)  
  4344c9:	xor    BYTE PTR [rax],al
  4344cb:	rex.RXB
  4344cc:	rex.R
  4344cd:	rex.X pop rdi
  4344cf:	push   rbx
  4344d0:	rex.WB
  4344d1:	rex.RXB
  4344d2:	rex.WRX
  4344d3:	rex.B
  4344d4:	rex.WR pop rdi
  4344d6:	push   rdx
  4344d7:	rex.RB
  4344d8:	rex.B
  4344d9:	rex.WR push rsp
  4344db:	rex.WB
  4344dc:	rex.WRB
  4344dd:	rex.RB pop r15
  4344df:	(bad)  
  4344e0:	xor    DWORD PTR [rax],eax
  4344e2:	push   rbx
  4344e3:	rex.WB
  4344e4:	rex.RXB (bad) 
  4344e6:	xor    DWORD PTR [rax],eax
  4344e8:	push   rdx
  4344e9:	gs (bad) 
  4344eb:	ins    BYTE PTR es:[rdi],dx
  4344ec:	sub    eax,0x656d6974
  4344f1:	and    BYTE PTR [rbp+0x76],ah
  4344f4:	outs   dx,BYTE PTR gs:[rsi]
  4344f6:	je     0x434518
  4344f8:	(bad)  
  4344f9:	xor    DWORD PTR [rax],eax
  4344fb:	rex.RXB
  4344fc:	rex.R
  4344fd:	rex.X pop rdi
  4344ff:	push   rbx
  434500:	rex.WB
  434501:	rex.RXB
  434502:	rex.WRX
  434503:	rex.B
  434504:	rex.WR pop rdi
  434506:	push   rdx
  434507:	rex.RB
  434508:	rex.B
  434509:	rex.WR push rsp
  43450b:	rex.WB
  43450c:	rex.WRB
  43450d:	rex.RB pop r15
  43450f:	(bad)  
  434510:	xor    al,BYTE PTR [rax]
  434512:	push   rbx
  434513:	rex.WB
  434514:	rex.RXB (bad) 
  434516:	xor    al,BYTE PTR [rax]
  434518:	push   rdx
  434519:	gs (bad) 
  43451b:	ins    BYTE PTR es:[rdi],dx
  43451c:	sub    eax,0x656d6974
  434521:	and    BYTE PTR [rbp+0x76],ah
  434524:	outs   dx,BYTE PTR gs:[rsi]
  434526:	je     0x434548
  434528:	(bad)  
  434529:	xor    al,BYTE PTR [rax]
  43452b:	rex.RXB
  43452c:	rex.R
  43452d:	rex.X pop rdi
  43452f:	push   rbx
  434530:	rex.WB
  434531:	rex.RXB
  434532:	rex.WRX
  434533:	rex.B
  434534:	rex.WR pop rdi
  434536:	push   rdx
  434537:	rex.RB
  434538:	rex.B
  434539:	rex.WR push rsp
  43453b:	rex.WB
  43453c:	rex.WRB
  43453d:	rex.RB pop r15
  43453f:	(bad)  
  434540:	xor    eax,DWORD PTR [rax]
  434542:	push   rbx
  434543:	rex.WB
  434544:	rex.RXB (bad) 
  434546:	xor    eax,DWORD PTR [rax]
  434548:	push   rdx
  434549:	gs (bad) 
  43454b:	ins    BYTE PTR es:[rdi],dx
  43454c:	sub    eax,0x656d6974
  434551:	and    BYTE PTR [rbp+0x76],ah
  434554:	outs   dx,BYTE PTR gs:[rsi]
  434556:	je     0x434578
  434558:	(bad)  
  434559:	xor    eax,DWORD PTR [rax]
  43455b:	rex.RXB
  43455c:	rex.R
  43455d:	rex.X pop rdi
  43455f:	push   rbx
  434560:	rex.WB
  434561:	rex.RXB
  434562:	rex.WRX
  434563:	rex.B
  434564:	rex.WR pop rdi
  434566:	push   rdx
  434567:	rex.RB
  434568:	rex.B
  434569:	rex.WR push rsp
  43456b:	rex.WB
  43456c:	rex.WRB
  43456d:	rex.RB pop r15
  43456f:	(bad)  
  434570:	xor    al,0x0
  434572:	push   rbx
  434573:	rex.WB
  434574:	rex.RXB (bad) 
  434576:	xor    al,0x0
  434578:	push   rdx
  434579:	gs (bad) 
  43457b:	ins    BYTE PTR es:[rdi],dx
  43457c:	sub    eax,0x656d6974
  434581:	and    BYTE PTR [rbp+0x76],ah
  434584:	outs   dx,BYTE PTR gs:[rsi]
  434586:	je     0x4345a8
  434588:	(bad)  
  434589:	xor    al,0x0
  43458b:	rex.RXB
  43458c:	rex.R
  43458d:	rex.X pop rdi
  43458f:	push   rbx
  434590:	rex.WB
  434591:	rex.RXB
  434592:	rex.WRX
  434593:	rex.B
  434594:	rex.WR pop rdi
  434596:	push   rdx
  434597:	rex.RB
  434598:	rex.B
  434599:	rex.WR push rsp
  43459b:	rex.WB
  43459c:	rex.WRB
  43459d:	rex.RB pop r15
  43459f:	(bad)  
  4345a0:	xor    eax,0x47495300
  4345a5:	(bad)  
  4345a6:	xor    eax,0x61655200
  4345ab:	ins    BYTE PTR es:[rdi],dx
  4345ac:	sub    eax,0x656d6974
  4345b1:	and    BYTE PTR [rbp+0x76],ah
  4345b4:	outs   dx,BYTE PTR gs:[rsi]
  4345b6:	je     0x4345d8
  4345b8:	(bad)  
  4345b9:	xor    eax,0x42444700
  4345be:	pop    rdi
  4345bf:	push   rbx
  4345c0:	rex.WB
  4345c1:	rex.RXB
  4345c2:	rex.WRX
  4345c3:	rex.B
  4345c4:	rex.WR pop rdi
  4345c6:	push   rdx
  4345c7:	rex.RB
  4345c8:	rex.B
  4345c9:	rex.WR push rsp
  4345cb:	rex.WB
  4345cc:	rex.WRB
  4345cd:	rex.RB pop r15
  4345cf:	(bad)  
  4345d0:	add    BYTE PTR ss:[rbx+0x49],dl
  4345d4:	rex.RXB (bad) 
  4345d6:	add    BYTE PTR ss:[rdx+0x65],dl
  4345da:	(bad)  
  4345db:	ins    BYTE PTR es:[rdi],dx
  4345dc:	sub    eax,0x656d6974
  4345e1:	and    BYTE PTR [rbp+0x76],ah
  4345e4:	outs   dx,BYTE PTR gs:[rsi]
  4345e6:	je     0x434608
  4345e8:	(bad)  
  4345e9:	add    BYTE PTR ss:[rdi+0x44],al
  4345ed:	rex.X pop rdi
  4345ef:	push   rbx
  4345f0:	rex.WB
  4345f1:	rex.RXB
  4345f2:	rex.WRX
  4345f3:	rex.B
  4345f4:	rex.WR pop rdi
  4345f6:	push   rdx
  4345f7:	rex.RB
  4345f8:	rex.B
  4345f9:	rex.WR push rsp
  4345fb:	rex.WB
  4345fc:	rex.WRB
  4345fd:	rex.RB pop r15
  4345ff:	(bad)  
  434600:	(bad)  
  434601:	add    BYTE PTR [rbx+0x49],dl
  434604:	rex.RXB (bad) 
  434606:	(bad)  
  434607:	add    BYTE PTR [rdx+0x65],dl
  43460a:	(bad)  
  43460b:	ins    BYTE PTR es:[rdi],dx
  43460c:	sub    eax,0x656d6974
  434611:	and    BYTE PTR [rbp+0x76],ah
  434614:	outs   dx,BYTE PTR gs:[rsi]
  434616:	je     0x434638
  434618:	(bad)  
  434619:	(bad)  
  43461a:	add    BYTE PTR [rdi+0x44],al
  43461d:	rex.X pop rdi
  43461f:	push   rbx
  434620:	rex.WB
  434621:	rex.RXB
  434622:	rex.WRX
  434623:	rex.B
  434624:	rex.WR pop rdi
  434626:	push   rdx
  434627:	rex.RB
  434628:	rex.B
  434629:	rex.WR push rsp
  43462b:	rex.WB
  43462c:	rex.WRB
  43462d:	rex.RB pop r15
  43462f:	(bad)  
  434630:	cmp    BYTE PTR [rax],al
  434632:	push   rbx
  434633:	rex.WB
  434634:	rex.RXB (bad) 
  434636:	cmp    BYTE PTR [rax],al
  434638:	push   rdx
  434639:	gs (bad) 
  43463b:	ins    BYTE PTR es:[rdi],dx
  43463c:	sub    eax,0x656d6974
  434641:	and    BYTE PTR [rbp+0x76],ah
  434644:	outs   dx,BYTE PTR gs:[rsi]
  434646:	je     0x434668
  434648:	(bad)  
  434649:	cmp    BYTE PTR [rax],al
  43464b:	rex.RXB
  43464c:	rex.R
  43464d:	rex.X pop rdi
  43464f:	push   rbx
  434650:	rex.WB
  434651:	rex.RXB
  434652:	rex.WRX
  434653:	rex.B
  434654:	rex.WR pop rdi
  434656:	push   rdx
  434657:	rex.RB
  434658:	rex.B
  434659:	rex.WR push rsp
  43465b:	rex.WB
  43465c:	rex.WRB
  43465d:	rex.RB pop r15
  43465f:	(bad)  
  434660:	cmp    DWORD PTR [rax],eax
  434662:	push   rbx
  434663:	rex.WB
  434664:	rex.RXB (bad) 
  434666:	cmp    DWORD PTR [rax],eax
  434668:	push   rdx
  434669:	gs (bad) 
  43466b:	ins    BYTE PTR es:[rdi],dx
  43466c:	sub    eax,0x656d6974
  434671:	and    BYTE PTR [rbp+0x76],ah
  434674:	outs   dx,BYTE PTR gs:[rsi]
  434676:	je     0x434698
  434678:	(bad)  
  434679:	cmp    DWORD PTR [rax],eax
  43467b:	rex.RXB
  43467c:	rex.R
  43467d:	rex.X pop rdi
  43467f:	push   rbx
  434680:	rex.WB
  434681:	rex.RXB
  434682:	rex.WRX
  434683:	rex.B
  434684:	rex.WR pop rdi
  434686:	push   rdx
  434687:	rex.RB
  434688:	rex.B
  434689:	rex.WR push rsp
  43468b:	rex.WB
  43468c:	rex.WRB
  43468d:	rex.RB pop r15
  43468f:	cmp    BYTE PTR [rax],dh
  434691:	add    BYTE PTR [rbx+0x49],dl
  434694:	rex.RXB cmp BYTE PTR [r8],r14b
  434697:	add    BYTE PTR [rdx+0x65],dl
  43469a:	(bad)  
  43469b:	ins    BYTE PTR es:[rdi],dx
  43469c:	sub    eax,0x656d6974
  4346a1:	and    BYTE PTR [rbp+0x76],ah
  4346a4:	outs   dx,BYTE PTR gs:[rsi]
  4346a6:	je     0x4346c8
  4346a8:	cmp    BYTE PTR [rax],dh
  4346aa:	add    BYTE PTR [rdi+0x44],al
  4346ad:	rex.X pop rdi
  4346af:	push   rbx
  4346b0:	rex.WB
  4346b1:	rex.RXB
  4346b2:	rex.WRX
  4346b3:	rex.B
  4346b4:	rex.WR pop rdi
  4346b6:	push   rdx
  4346b7:	rex.RB
  4346b8:	rex.B
  4346b9:	rex.WR push rsp
  4346bb:	rex.WB
  4346bc:	rex.WRB
  4346bd:	rex.RB pop r15
  4346bf:	cmp    BYTE PTR [rcx],dh
  4346c1:	add    BYTE PTR [rbx+0x49],dl
  4346c4:	rex.RXB cmp BYTE PTR [r9],r14b
  4346c7:	add    BYTE PTR [rdx+0x65],dl
  4346ca:	(bad)  
  4346cb:	ins    BYTE PTR es:[rdi],dx
  4346cc:	sub    eax,0x656d6974
  4346d1:	and    BYTE PTR [rbp+0x76],ah
  4346d4:	outs   dx,BYTE PTR gs:[rsi]
  4346d6:	je     0x4346f8
  4346d8:	cmp    BYTE PTR [rcx],dh
  4346da:	add    BYTE PTR [rdi+0x44],al
  4346dd:	rex.X pop rdi
  4346df:	push   rbx
  4346e0:	rex.WB
  4346e1:	rex.RXB
  4346e2:	rex.WRX
  4346e3:	rex.B
  4346e4:	rex.WR pop rdi
  4346e6:	push   rdx
  4346e7:	rex.RB
  4346e8:	rex.B
  4346e9:	rex.WR push rsp
  4346eb:	rex.WB
  4346ec:	rex.WRB
  4346ed:	rex.RB pop r15
  4346ef:	cmp    BYTE PTR [rdx],dh
  4346f1:	add    BYTE PTR [rbx+0x49],dl
  4346f4:	rex.RXB cmp BYTE PTR [r10],r14b
  4346f7:	add    BYTE PTR [rdx+0x65],dl
  4346fa:	(bad)  
  4346fb:	ins    BYTE PTR es:[rdi],dx
  4346fc:	sub    eax,0x656d6974
  434701:	and    BYTE PTR [rbp+0x76],ah
  434704:	outs   dx,BYTE PTR gs:[rsi]
  434706:	je     0x434728
  434708:	cmp    BYTE PTR [rdx],dh
  43470a:	add    BYTE PTR [rdi+0x44],al
  43470d:	rex.X pop rdi
  43470f:	push   rbx
  434710:	rex.WB
  434711:	rex.RXB
  434712:	rex.WRX
  434713:	rex.B
  434714:	rex.WR pop rdi
  434716:	push   rdx
  434717:	rex.RB
  434718:	rex.B
  434719:	rex.WR push rsp
  43471b:	rex.WB
  43471c:	rex.WRB
  43471d:	rex.RB pop r15
  43471f:	cmp    BYTE PTR [rbx],dh
  434721:	add    BYTE PTR [rbx+0x49],dl
  434724:	rex.RXB cmp BYTE PTR [r11],r14b
  434727:	add    BYTE PTR [rdx+0x65],dl
  43472a:	(bad)  
  43472b:	ins    BYTE PTR es:[rdi],dx
  43472c:	sub    eax,0x656d6974
  434731:	and    BYTE PTR [rbp+0x76],ah
  434734:	outs   dx,BYTE PTR gs:[rsi]
  434736:	je     0x434758
  434738:	cmp    BYTE PTR [rbx],dh
  43473a:	add    BYTE PTR [rdi+0x44],al
  43473d:	rex.X pop rdi
  43473f:	push   rbx
  434740:	rex.WB
  434741:	rex.RXB
  434742:	rex.WRX
  434743:	rex.B
  434744:	rex.WR pop rdi
  434746:	push   rdx
  434747:	rex.RB
  434748:	rex.B
  434749:	rex.WR push rsp
  43474b:	rex.WB
  43474c:	rex.WRB
  43474d:	rex.RB pop r15
  43474f:	cmp    BYTE PTR [rax+rax*1],dh
  434752:	push   rbx
  434753:	rex.WB
  434754:	cmp    BYTE PTR [r8+r8*1],r14b
  434758:	push   rdx
  434759:	gs (bad) 
  43475b:	ins    BYTE PTR es:[rdi],dx
  43475c:	sub    eax,0x656d6974
  434761:	and    BYTE PTR [rbp+0x76],ah
  434764:	outs   dx,BYTE PTR gs:[rsi]
  434766:	je     0x434788
  434768:	cmp    BYTE PTR [rax+rax*1],dh
  43476b:	rex.RXB
  43476c:	rex.R
  43476d:	rex.X pop rdi
  43476f:	push   rbx
  434770:	rex.WB
  434771:	rex.RXB
  434772:	rex.WRX
  434773:	rex.B
  434774:	rex.WR pop rdi
  434776:	push   rdx
  434777:	rex.RB
  434778:	rex.B
  434779:	rex.WR push rsp
  43477b:	rex.WB
  43477c:	rex.WRB
  43477d:	rex.RB pop r15
  43477f:	cmp    BYTE PTR [rip+0x47495300],dh        # 0x478c9a85
  434785:	cmp    BYTE PTR [rip+0x61655200],dh        # 0x61a8998b
  43478b:	ins    BYTE PTR es:[rdi],dx
  43478c:	sub    eax,0x656d6974
  434791:	and    BYTE PTR [rbp+0x76],ah
  434794:	outs   dx,BYTE PTR gs:[rsi]
  434796:	je     0x4347b8
  434798:	cmp    BYTE PTR [rip+0x42444700],dh        # 0x42878e9e
  43479e:	pop    rdi
  43479f:	push   rbx
  4347a0:	rex.WB
  4347a1:	rex.RXB
  4347a2:	rex.WRX
  4347a3:	rex.B
  4347a4:	rex.WR pop rdi
  4347a6:	push   rdx
  4347a7:	rex.RB
  4347a8:	rex.B
  4347a9:	rex.WR push rsp
  4347ab:	rex.WB
  4347ac:	rex.WRB
  4347ad:	rex.RB pop r15
  4347af:	cmp    BYTE PTR [rsi],dh
  4347b1:	add    BYTE PTR [rbx+0x49],dl
  4347b4:	rex.RXB cmp BYTE PTR [r14],r14b
  4347b7:	add    BYTE PTR [rdx+0x65],dl
  4347ba:	(bad)  
  4347bb:	ins    BYTE PTR es:[rdi],dx
  4347bc:	sub    eax,0x656d6974
  4347c1:	and    BYTE PTR [rbp+0x76],ah
  4347c4:	outs   dx,BYTE PTR gs:[rsi]
  4347c6:	je     0x4347e8
  4347c8:	cmp    BYTE PTR [rsi],dh
  4347ca:	add    BYTE PTR [rdi+0x44],al
  4347cd:	rex.X pop rdi
  4347cf:	push   rbx
  4347d0:	rex.WB
  4347d1:	rex.RXB
  4347d2:	rex.WRX
  4347d3:	rex.B
  4347d4:	rex.WR pop rdi
  4347d6:	push   rdx
  4347d7:	rex.RB
  4347d8:	rex.B
  4347d9:	rex.WR push rsp
  4347db:	rex.WB
  4347dc:	rex.WRB
  4347dd:	rex.RB pop r15
  4347df:	cmp    BYTE PTR [rdi],dh
  4347e1:	add    BYTE PTR [rbx+0x49],dl
  4347e4:	rex.RXB cmp BYTE PTR [r15],r14b
  4347e7:	add    BYTE PTR [rdx+0x65],dl
  4347ea:	(bad)  
  4347eb:	ins    BYTE PTR es:[rdi],dx
  4347ec:	sub    eax,0x656d6974
  4347f1:	and    BYTE PTR [rbp+0x76],ah
  4347f4:	outs   dx,BYTE PTR gs:[rsi]
  4347f6:	je     0x434818
  4347f8:	cmp    BYTE PTR [rdi],dh
  4347fa:	add    BYTE PTR [rdi+0x44],al
  4347fd:	rex.X pop rdi
  4347ff:	push   rbx
  434800:	rex.WB
  434801:	rex.RXB
  434802:	rex.WRX
  434803:	rex.B
  434804:	rex.WR pop rdi
  434806:	push   rdx
  434807:	rex.RB
  434808:	rex.B
  434809:	rex.WR push rsp
  43480b:	rex.WB
  43480c:	rex.WRB
  43480d:	rex.RB pop r15
  43480f:	cmp    BYTE PTR [rax],bh
  434811:	add    BYTE PTR [rbx+0x49],dl
  434814:	rex.RXB cmp BYTE PTR [r8],r15b
  434817:	add    BYTE PTR [rdx+0x65],dl
  43481a:	(bad)  
  43481b:	ins    BYTE PTR es:[rdi],dx
  43481c:	sub    eax,0x656d6974
  434821:	and    BYTE PTR [rbp+0x76],ah
  434824:	outs   dx,BYTE PTR gs:[rsi]
  434826:	je     0x434848
  434828:	cmp    BYTE PTR [rax],bh
  43482a:	add    BYTE PTR [rdi+0x44],al
  43482d:	rex.X pop rdi
  43482f:	push   rbx
  434830:	rex.WB
  434831:	rex.RXB
  434832:	rex.WRX
  434833:	rex.B
  434834:	rex.WR pop rdi
  434836:	push   rdx
  434837:	rex.RB
  434838:	rex.B
  434839:	rex.WR push rsp
  43483b:	rex.WB
  43483c:	rex.WRB
  43483d:	rex.RB pop r15
  43483f:	cmp    BYTE PTR [rcx],bh
  434841:	add    BYTE PTR [rbx+0x49],dl
  434844:	rex.RXB cmp BYTE PTR [r9],r15b
  434847:	add    BYTE PTR [rdx+0x65],dl
  43484a:	(bad)  
  43484b:	ins    BYTE PTR es:[rdi],dx
  43484c:	sub    eax,0x656d6974
  434851:	and    BYTE PTR [rbp+0x76],ah
  434854:	outs   dx,BYTE PTR gs:[rsi]
  434856:	je     0x434878
  434858:	cmp    BYTE PTR [rcx],bh
  43485a:	add    BYTE PTR [rdi+0x44],al
  43485d:	rex.X pop rdi
  43485f:	push   rbx
  434860:	rex.WB
  434861:	rex.RXB
  434862:	rex.WRX
  434863:	rex.B
  434864:	rex.WR pop rdi
  434866:	push   rdx
  434867:	rex.RB
  434868:	rex.B
  434869:	rex.WR push rsp
  43486b:	rex.WB
  43486c:	rex.WRB
  43486d:	rex.RB pop r15
  43486f:	cmp    DWORD PTR [rax],esi
  434871:	add    BYTE PTR [rbx+0x49],dl
  434874:	rex.RXB cmp DWORD PTR [r8],r14d
  434877:	add    BYTE PTR [rdx+0x65],dl
  43487a:	(bad)  
  43487b:	ins    BYTE PTR es:[rdi],dx
  43487c:	sub    eax,0x656d6974
  434881:	and    BYTE PTR [rbp+0x76],ah
  434884:	outs   dx,BYTE PTR gs:[rsi]
  434886:	je     0x4348a8
  434888:	cmp    DWORD PTR [rax],esi
  43488a:	add    BYTE PTR [rdi+0x44],al
  43488d:	rex.X pop rdi
  43488f:	push   rbx
  434890:	rex.WB
  434891:	rex.RXB
  434892:	rex.WRX
  434893:	rex.B
  434894:	rex.WR pop rdi
  434896:	push   rdx
  434897:	rex.RB
  434898:	rex.B
  434899:	rex.WR push rsp
  43489b:	rex.WB
  43489c:	rex.WRB
  43489d:	rex.RB pop r15
  43489f:	cmp    DWORD PTR [rcx],esi
  4348a1:	add    BYTE PTR [rbx+0x49],dl
  4348a4:	rex.RXB cmp DWORD PTR [r9],r14d
  4348a7:	add    BYTE PTR [rdx+0x65],dl
  4348aa:	(bad)  
  4348ab:	ins    BYTE PTR es:[rdi],dx
  4348ac:	sub    eax,0x656d6974
  4348b1:	and    BYTE PTR [rbp+0x76],ah
  4348b4:	outs   dx,BYTE PTR gs:[rsi]
  4348b6:	je     0x4348d8
  4348b8:	cmp    DWORD PTR [rcx],esi
  4348ba:	add    BYTE PTR [rdi+0x44],al
  4348bd:	rex.X pop rdi
  4348bf:	push   rbx
  4348c0:	rex.WB
  4348c1:	rex.RXB
  4348c2:	rex.WRX
  4348c3:	rex.B
  4348c4:	rex.WR pop rdi
  4348c6:	push   rdx
  4348c7:	rex.RB
  4348c8:	rex.B
  4348c9:	rex.WR push rsp
  4348cb:	rex.WB
  4348cc:	rex.WRB
  4348cd:	rex.RB pop r15
  4348cf:	cmp    DWORD PTR [rdx],esi
  4348d1:	add    BYTE PTR [rbx+0x49],dl
  4348d4:	rex.RXB cmp DWORD PTR [r10],r14d
  4348d7:	add    BYTE PTR [rdx+0x65],dl
  4348da:	(bad)  
  4348db:	ins    BYTE PTR es:[rdi],dx
  4348dc:	sub    eax,0x656d6974
  4348e1:	and    BYTE PTR [rbp+0x76],ah
  4348e4:	outs   dx,BYTE PTR gs:[rsi]
  4348e6:	je     0x434908
  4348e8:	cmp    DWORD PTR [rdx],esi
  4348ea:	add    BYTE PTR [rdi+0x44],al
  4348ed:	rex.X pop rdi
  4348ef:	push   rbx
  4348f0:	rex.WB
  4348f1:	rex.RXB
  4348f2:	rex.WRX
  4348f3:	rex.B
  4348f4:	rex.WR pop rdi
  4348f6:	push   rdx
  4348f7:	rex.RB
  4348f8:	rex.B
  4348f9:	rex.WR push rsp
  4348fb:	rex.WB
  4348fc:	rex.WRB
  4348fd:	rex.RB pop r15
  4348ff:	cmp    DWORD PTR [rbx],esi
  434901:	add    BYTE PTR [rbx+0x49],dl
  434904:	rex.RXB cmp DWORD PTR [r11],r14d
  434907:	add    BYTE PTR [rdx+0x65],dl
  43490a:	(bad)  
  43490b:	ins    BYTE PTR es:[rdi],dx
  43490c:	sub    eax,0x656d6974
  434911:	and    BYTE PTR [rbp+0x76],ah
  434914:	outs   dx,BYTE PTR gs:[rsi]
  434916:	je     0x434938
  434918:	cmp    DWORD PTR [rbx],esi
  43491a:	add    BYTE PTR [rdi+0x44],al
  43491d:	rex.X pop rdi
  43491f:	push   rbx
  434920:	rex.WB
  434921:	rex.RXB
  434922:	rex.WRX
  434923:	rex.B
  434924:	rex.WR pop rdi
  434926:	push   rdx
  434927:	rex.RB
  434928:	rex.B
  434929:	rex.WR push rsp
  43492b:	rex.WB
  43492c:	rex.WRB
  43492d:	rex.RB pop r15
  43492f:	cmp    DWORD PTR [rax+rax*1],esi
  434932:	push   rbx
  434933:	rex.WB
  434934:	cmp    DWORD PTR [r8+r8*1],r14d
  434938:	push   rdx
  434939:	gs (bad) 
  43493b:	ins    BYTE PTR es:[rdi],dx
  43493c:	sub    eax,0x656d6974
  434941:	and    BYTE PTR [rbp+0x76],ah
  434944:	outs   dx,BYTE PTR gs:[rsi]
  434946:	je     0x434968
  434948:	cmp    DWORD PTR [rax+rax*1],esi
  43494b:	rex.RXB
  43494c:	rex.R
  43494d:	rex.X pop rdi
  43494f:	push   rbx
  434950:	rex.WB
  434951:	rex.RXB
  434952:	rex.WRX
  434953:	rex.B
  434954:	rex.WR pop rdi
  434956:	push   rdx
  434957:	rex.RB
  434958:	rex.B
  434959:	rex.WR push rsp
  43495b:	rex.WB
  43495c:	rex.WRB
  43495d:	rex.RB pop r15
  43495f:	cmp    DWORD PTR [rip+0x47495300],esi        # 0x478c9c65
  434965:	cmp    DWORD PTR [rip+0x61655200],esi        # 0x61a89b6b
  43496b:	ins    BYTE PTR es:[rdi],dx
  43496c:	sub    eax,0x656d6974
  434971:	and    BYTE PTR [rbp+0x76],ah
  434974:	outs   dx,BYTE PTR gs:[rsi]
  434976:	je     0x434998
  434978:	cmp    DWORD PTR [rip+0x42444700],esi        # 0x4287907e
  43497e:	pop    rdi
  43497f:	push   rbx
  434980:	rex.WB
  434981:	rex.RXB
  434982:	rex.WRX
  434983:	rex.B
  434984:	rex.WR pop rdi
  434986:	push   rdx
  434987:	rex.RB
  434988:	rex.B
  434989:	rex.WR push rsp
  43498b:	rex.WB
  43498c:	rex.WRB
  43498d:	rex.RB pop r15
  43498f:	cmp    DWORD PTR [rsi],esi
  434991:	add    BYTE PTR [rbx+0x49],dl
  434994:	rex.RXB cmp DWORD PTR [r14],r14d
  434997:	add    BYTE PTR [rdx+0x65],dl
  43499a:	(bad)  
  43499b:	ins    BYTE PTR es:[rdi],dx
  43499c:	sub    eax,0x656d6974
  4349a1:	and    BYTE PTR [rbp+0x76],ah
  4349a4:	outs   dx,BYTE PTR gs:[rsi]
  4349a6:	je     0x4349c8
  4349a8:	cmp    DWORD PTR [rsi],esi
  4349aa:	add    BYTE PTR [rdi+0x44],al
  4349ad:	rex.X pop rdi
  4349af:	push   rbx
  4349b0:	rex.WB
  4349b1:	rex.RXB
  4349b2:	rex.WRX
  4349b3:	rex.B
  4349b4:	rex.WR pop rdi
  4349b6:	push   rdx
  4349b7:	rex.RB
  4349b8:	rex.B
  4349b9:	rex.WR push rsp
  4349bb:	rex.WB
  4349bc:	rex.WRB
  4349bd:	rex.RB pop r15
  4349bf:	cmp    DWORD PTR [rdi],esi
  4349c1:	add    BYTE PTR [rbx+0x49],dl
  4349c4:	rex.RXB cmp DWORD PTR [r15],r14d
  4349c7:	add    BYTE PTR [rdx+0x65],dl
  4349ca:	(bad)  
  4349cb:	ins    BYTE PTR es:[rdi],dx
  4349cc:	sub    eax,0x656d6974
  4349d1:	and    BYTE PTR [rbp+0x76],ah
  4349d4:	outs   dx,BYTE PTR gs:[rsi]
  4349d6:	je     0x4349f8
  4349d8:	cmp    DWORD PTR [rdi],esi
  4349da:	add    BYTE PTR [rdi+0x44],al
  4349dd:	rex.X pop rdi
  4349df:	push   rbx
  4349e0:	rex.WB
  4349e1:	rex.RXB
  4349e2:	rex.WRX
  4349e3:	rex.B
  4349e4:	rex.WR pop rdi
  4349e6:	push   rdx
  4349e7:	rex.RB
  4349e8:	rex.B
  4349e9:	rex.WR push rsp
  4349eb:	rex.WB
  4349ec:	rex.WRB
  4349ed:	rex.RB pop r15
  4349ef:	cmp    DWORD PTR [rax],edi
  4349f1:	add    BYTE PTR [rbx+0x49],dl
  4349f4:	rex.RXB cmp DWORD PTR [r8],r15d
  4349f7:	add    BYTE PTR [rdx+0x65],dl
  4349fa:	(bad)  
  4349fb:	ins    BYTE PTR es:[rdi],dx
  4349fc:	sub    eax,0x656d6974
  434a01:	and    BYTE PTR [rbp+0x76],ah
  434a04:	outs   dx,BYTE PTR gs:[rsi]
  434a06:	je     0x434a28
  434a08:	cmp    DWORD PTR [rax],edi
  434a0a:	add    BYTE PTR [rdi+0x44],al
  434a0d:	rex.X pop rdi
  434a0f:	push   rbx
  434a10:	rex.WB
  434a11:	rex.RXB
  434a12:	rex.WRX
  434a13:	rex.B
  434a14:	rex.WR pop rdi
  434a16:	push   rdx
  434a17:	rex.RB
  434a18:	rex.B
  434a19:	rex.WR push rsp
  434a1b:	rex.WB
  434a1c:	rex.WRB
  434a1d:	rex.RB pop r15
  434a1f:	cmp    DWORD PTR [rcx],edi
  434a21:	add    BYTE PTR [rbx+0x49],dl
  434a24:	rex.RXB cmp DWORD PTR [r9],r15d
  434a27:	add    BYTE PTR [rdx+0x65],dl
  434a2a:	(bad)  
  434a2b:	ins    BYTE PTR es:[rdi],dx
  434a2c:	sub    eax,0x656d6974
  434a31:	and    BYTE PTR [rbp+0x76],ah
  434a34:	outs   dx,BYTE PTR gs:[rsi]
  434a36:	je     0x434a58
  434a38:	cmp    DWORD PTR [rcx],edi
  434a3a:	add    BYTE PTR [rdi+0x44],al
  434a3d:	rex.X pop rdi
  434a3f:	push   rbx
  434a40:	rex.WB
  434a41:	rex.RXB
  434a42:	rex.WRX
  434a43:	rex.B
  434a44:	rex.WR pop rdi
  434a46:	push   rdx
  434a47:	rex.RB
  434a48:	rex.B
  434a49:	rex.WR push rsp
  434a4b:	rex.WB
  434a4c:	rex.WRB
  434a4d:	rex.RB pop r15
  434a4f:	xor    DWORD PTR [rax],esi
  434a51:	xor    BYTE PTR [rax],al
  434a53:	push   rbx
  434a54:	rex.WB
  434a55:	rex.RXB xor DWORD PTR [r8],r14d
  434a58:	xor    BYTE PTR [rax],al
  434a5a:	push   rdx
  434a5b:	gs (bad) 
  434a5d:	ins    BYTE PTR es:[rdi],dx
  434a5e:	sub    eax,0x656d6974
  434a63:	and    BYTE PTR [rbp+0x76],ah
  434a66:	outs   dx,BYTE PTR gs:[rsi]
  434a68:	je     0x434a8a
  434a6a:	xor    DWORD PTR [rax],esi
  434a6c:	xor    BYTE PTR [rax],al
  434a6e:	rex.RXB
  434a6f:	rex.R
  434a70:	rex.X pop rdi
  434a72:	push   rbx
  434a73:	rex.WB
  434a74:	rex.RXB
  434a75:	rex.WRX
  434a76:	rex.B
  434a77:	rex.WR pop rdi
  434a79:	push   rdx
  434a7a:	rex.RB
  434a7b:	rex.B
  434a7c:	rex.WR push rsp
  434a7e:	rex.WB
  434a7f:	rex.WRB
  434a80:	rex.RB pop r15
  434a82:	xor    DWORD PTR [rax],esi
  434a84:	xor    DWORD PTR [rax],eax
  434a86:	push   rbx
  434a87:	rex.WB
  434a88:	rex.RXB xor DWORD PTR [r8],r14d
  434a8b:	xor    DWORD PTR [rax],eax
  434a8d:	push   rdx
  434a8e:	gs (bad) 
  434a90:	ins    BYTE PTR es:[rdi],dx
  434a91:	sub    eax,0x656d6974
  434a96:	and    BYTE PTR [rbp+0x76],ah
  434a99:	outs   dx,BYTE PTR gs:[rsi]
  434a9b:	je     0x434abd
  434a9d:	xor    DWORD PTR [rax],esi
  434a9f:	xor    DWORD PTR [rax],eax
  434aa1:	rex.RXB
  434aa2:	rex.R
  434aa3:	rex.X pop rdi
  434aa5:	push   rbx
  434aa6:	rex.WB
  434aa7:	rex.RXB
  434aa8:	rex.WRX
  434aa9:	rex.B
  434aaa:	rex.WR pop rdi
  434aac:	push   rdx
  434aad:	rex.RB
  434aae:	rex.B
  434aaf:	rex.WR push rsp
  434ab1:	rex.WB
  434ab2:	rex.WRB
  434ab3:	rex.RB pop r15
  434ab5:	xor    DWORD PTR [rax],esi
  434ab7:	xor    al,BYTE PTR [rax]
  434ab9:	push   rbx
  434aba:	rex.WB
  434abb:	rex.RXB xor DWORD PTR [r8],r14d
  434abe:	xor    al,BYTE PTR [rax]
  434ac0:	push   rdx
  434ac1:	gs (bad) 
  434ac3:	ins    BYTE PTR es:[rdi],dx
  434ac4:	sub    eax,0x656d6974
  434ac9:	and    BYTE PTR [rbp+0x76],ah
  434acc:	outs   dx,BYTE PTR gs:[rsi]
  434ace:	je     0x434af0
  434ad0:	xor    DWORD PTR [rax],esi
  434ad2:	xor    al,BYTE PTR [rax]
  434ad4:	rex.RXB
  434ad5:	rex.R
  434ad6:	rex.X pop rdi
  434ad8:	push   rbx
  434ad9:	rex.WB
  434ada:	rex.RXB
  434adb:	rex.WRX
  434adc:	rex.B
  434add:	rex.WR pop rdi
  434adf:	push   rdx
  434ae0:	rex.RB
  434ae1:	rex.B
  434ae2:	rex.WR push rsp
  434ae4:	rex.WB
  434ae5:	rex.WRB
  434ae6:	rex.RB pop r15
  434ae8:	xor    DWORD PTR [rax],esi
  434aea:	xor    eax,DWORD PTR [rax]
  434aec:	push   rbx
  434aed:	rex.WB
  434aee:	rex.RXB xor DWORD PTR [r8],r14d
  434af1:	xor    eax,DWORD PTR [rax]
  434af3:	push   rdx
  434af4:	gs (bad) 
  434af6:	ins    BYTE PTR es:[rdi],dx
  434af7:	sub    eax,0x656d6974
  434afc:	and    BYTE PTR [rbp+0x76],ah
  434aff:	outs   dx,BYTE PTR gs:[rsi]
  434b01:	je     0x434b23
  434b03:	xor    DWORD PTR [rax],esi
  434b05:	xor    eax,DWORD PTR [rax]
  434b07:	rex.RXB
  434b08:	rex.R
  434b09:	rex.X pop rdi
  434b0b:	push   rbx
  434b0c:	rex.WB
  434b0d:	rex.RXB
  434b0e:	rex.WRX
  434b0f:	rex.B
  434b10:	rex.WR pop rdi
  434b12:	push   rdx
  434b13:	rex.RB
  434b14:	rex.B
  434b15:	rex.WR push rsp
  434b17:	rex.WB
  434b18:	rex.WRB
  434b19:	rex.RB pop r15
  434b1b:	xor    DWORD PTR [rax],esi
  434b1d:	xor    al,0x0
  434b1f:	push   rbx
  434b20:	rex.WB
  434b21:	rex.RXB xor DWORD PTR [r8],r14d
  434b24:	xor    al,0x0
  434b26:	push   rdx
  434b27:	gs (bad) 
  434b29:	ins    BYTE PTR es:[rdi],dx
  434b2a:	sub    eax,0x656d6974
  434b2f:	and    BYTE PTR [rbp+0x76],ah
  434b32:	outs   dx,BYTE PTR gs:[rsi]
  434b34:	je     0x434b56
  434b36:	xor    DWORD PTR [rax],esi
  434b38:	xor    al,0x0
  434b3a:	rex.RXB
  434b3b:	rex.R
  434b3c:	rex.X pop rdi
  434b3e:	push   rbx
  434b3f:	rex.WB
  434b40:	rex.RXB
  434b41:	rex.WRX
  434b42:	rex.B
  434b43:	rex.WR pop rdi
  434b45:	push   rdx
  434b46:	rex.RB
  434b47:	rex.B
  434b48:	rex.WR push rsp
  434b4a:	rex.WB
  434b4b:	rex.WRB
  434b4c:	rex.RB pop r15
  434b4e:	xor    DWORD PTR [rax],esi
  434b50:	xor    eax,0x47495300
  434b55:	xor    DWORD PTR [rax],esi
  434b57:	xor    eax,0x61655200
  434b5c:	ins    BYTE PTR es:[rdi],dx
  434b5d:	sub    eax,0x656d6974
  434b62:	and    BYTE PTR [rbp+0x76],ah
  434b65:	outs   dx,BYTE PTR gs:[rsi]
  434b67:	je     0x434b89
  434b69:	xor    DWORD PTR [rax],esi
  434b6b:	xor    eax,0x42444700
  434b70:	pop    rdi
  434b71:	push   rbx
  434b72:	rex.WB
  434b73:	rex.RXB
  434b74:	rex.WRX
  434b75:	rex.B
  434b76:	rex.WR pop rdi
  434b78:	push   rdx
  434b79:	rex.RB
  434b7a:	rex.B
  434b7b:	rex.WR push rsp
  434b7d:	rex.WB
  434b7e:	rex.WRB
  434b7f:	rex.RB pop r15
  434b81:	xor    DWORD PTR [rax],esi
  434b83:	add    BYTE PTR ss:[rbx+0x49],dl
  434b87:	rex.RXB xor DWORD PTR [r8],r14d
  434b8a:	add    BYTE PTR ss:[rdx+0x65],dl
  434b8e:	(bad)  
  434b8f:	ins    BYTE PTR es:[rdi],dx
  434b90:	sub    eax,0x656d6974
  434b95:	and    BYTE PTR [rbp+0x76],ah
  434b98:	outs   dx,BYTE PTR gs:[rsi]
  434b9a:	je     0x434bbc
  434b9c:	xor    DWORD PTR [rax],esi
  434b9e:	add    BYTE PTR ss:[rdi+0x44],al
  434ba2:	rex.X pop rdi
  434ba4:	push   rbx
  434ba5:	rex.WB
  434ba6:	rex.RXB
  434ba7:	rex.WRX
  434ba8:	rex.B
  434ba9:	rex.WR pop rdi
  434bab:	push   rdx
  434bac:	rex.RB
  434bad:	rex.B
  434bae:	rex.WR push rsp
  434bb0:	rex.WB
  434bb1:	rex.WRB
  434bb2:	rex.RB pop r15
  434bb4:	xor    DWORD PTR [rax],esi
  434bb6:	(bad)  
  434bb7:	add    BYTE PTR [rbx+0x49],dl
  434bba:	rex.RXB xor DWORD PTR [r8],r14d
  434bbd:	(bad)  
  434bbe:	add    BYTE PTR [rdx+0x65],dl
  434bc1:	(bad)  
  434bc2:	ins    BYTE PTR es:[rdi],dx
  434bc3:	sub    eax,0x656d6974
  434bc8:	and    BYTE PTR [rbp+0x76],ah
  434bcb:	outs   dx,BYTE PTR gs:[rsi]
  434bcd:	je     0x434bef
  434bcf:	xor    DWORD PTR [rax],esi
  434bd1:	(bad)  
  434bd2:	add    BYTE PTR [rdi+0x44],al
  434bd5:	rex.X pop rdi
  434bd7:	push   rbx
  434bd8:	rex.WB
  434bd9:	rex.RXB
  434bda:	rex.WRX
  434bdb:	rex.B
  434bdc:	rex.WR pop rdi
  434bde:	push   rdx
  434bdf:	rex.RB
  434be0:	rex.B
  434be1:	rex.WR push rsp
  434be3:	rex.WB
  434be4:	rex.WRB
  434be5:	rex.RB pop r15
  434be7:	xor    DWORD PTR [rax],esi
  434be9:	cmp    BYTE PTR [rax],al
  434beb:	push   rbx
  434bec:	rex.WB
  434bed:	rex.RXB xor DWORD PTR [r8],r14d
  434bf0:	cmp    BYTE PTR [rax],al
  434bf2:	push   rdx
  434bf3:	gs (bad) 
  434bf5:	ins    BYTE PTR es:[rdi],dx
  434bf6:	sub    eax,0x656d6974
  434bfb:	and    BYTE PTR [rbp+0x76],ah
  434bfe:	outs   dx,BYTE PTR gs:[rsi]
  434c00:	je     0x434c22
  434c02:	xor    DWORD PTR [rax],esi
  434c04:	cmp    BYTE PTR [rax],al
  434c06:	rex.RXB
  434c07:	rex.R
  434c08:	rex.X pop rdi
  434c0a:	push   rbx
  434c0b:	rex.WB
  434c0c:	rex.RXB
  434c0d:	rex.WRX
  434c0e:	rex.B
  434c0f:	rex.WR pop rdi
  434c11:	push   rdx
  434c12:	rex.RB
  434c13:	rex.B
  434c14:	rex.WR push rsp
  434c16:	rex.WB
  434c17:	rex.WRB
  434c18:	rex.RB pop r15
  434c1a:	xor    DWORD PTR [rax],esi
  434c1c:	cmp    DWORD PTR [rax],eax
  434c1e:	push   rbx
  434c1f:	rex.WB
  434c20:	rex.RXB xor DWORD PTR [r8],r14d
  434c23:	cmp    DWORD PTR [rax],eax
  434c25:	push   rdx
  434c26:	gs (bad) 
  434c28:	ins    BYTE PTR es:[rdi],dx
  434c29:	sub    eax,0x656d6974
  434c2e:	and    BYTE PTR [rbp+0x76],ah
  434c31:	outs   dx,BYTE PTR gs:[rsi]
  434c33:	je     0x434c55
  434c35:	xor    DWORD PTR [rax],esi
  434c37:	cmp    DWORD PTR [rax],eax
  434c39:	rex.RXB
  434c3a:	rex.R
  434c3b:	rex.X pop rdi
  434c3d:	push   rbx
  434c3e:	rex.WB
  434c3f:	rex.RXB
  434c40:	rex.WRX
  434c41:	rex.B
  434c42:	rex.WR pop rdi
  434c44:	push   rdx
  434c45:	rex.RB
  434c46:	rex.B
  434c47:	rex.WR push rsp
  434c49:	rex.WB
  434c4a:	rex.WRB
  434c4b:	rex.RB pop r15
  434c4d:	xor    DWORD PTR [rcx],esi
  434c4f:	xor    BYTE PTR [rax],al
  434c51:	push   rbx
  434c52:	rex.WB
  434c53:	rex.RXB xor DWORD PTR [r9],r14d
  434c56:	xor    BYTE PTR [rax],al
  434c58:	push   rdx
  434c59:	gs (bad) 
  434c5b:	ins    BYTE PTR es:[rdi],dx
  434c5c:	sub    eax,0x656d6974
  434c61:	and    BYTE PTR [rbp+0x76],ah
  434c64:	outs   dx,BYTE PTR gs:[rsi]
  434c66:	je     0x434c88
  434c68:	xor    DWORD PTR [rcx],esi
  434c6a:	xor    BYTE PTR [rax],al
  434c6c:	rex.RXB
  434c6d:	rex.R
  434c6e:	rex.X pop rdi
  434c70:	push   rbx
  434c71:	rex.WB
  434c72:	rex.RXB
  434c73:	rex.WRX
  434c74:	rex.B
  434c75:	rex.WR pop rdi
  434c77:	push   rdx
  434c78:	rex.RB
  434c79:	rex.B
  434c7a:	rex.WR push rsp
  434c7c:	rex.WB
  434c7d:	rex.WRB
  434c7e:	rex.RB pop r15
  434c80:	xor    DWORD PTR [rcx],esi
  434c82:	xor    DWORD PTR [rax],eax
  434c84:	push   rbx
  434c85:	rex.WB
  434c86:	rex.RXB xor DWORD PTR [r9],r14d
  434c89:	xor    DWORD PTR [rax],eax
  434c8b:	push   rdx
  434c8c:	gs (bad) 
  434c8e:	ins    BYTE PTR es:[rdi],dx
  434c8f:	sub    eax,0x656d6974
  434c94:	and    BYTE PTR [rbp+0x76],ah
  434c97:	outs   dx,BYTE PTR gs:[rsi]
  434c99:	je     0x434cbb
  434c9b:	xor    DWORD PTR [rcx],esi
  434c9d:	xor    DWORD PTR [rax],eax
  434c9f:	rex.RXB
  434ca0:	rex.R
  434ca1:	rex.X pop rdi
  434ca3:	push   rbx
  434ca4:	rex.WB
  434ca5:	rex.RXB
  434ca6:	rex.WRX
  434ca7:	rex.B
  434ca8:	rex.WR pop rdi
  434caa:	push   rdx
  434cab:	rex.RB
  434cac:	rex.B
  434cad:	rex.WR push rsp
  434caf:	rex.WB
  434cb0:	rex.WRB
  434cb1:	rex.RB pop r15
  434cb3:	xor    DWORD PTR [rcx],esi
  434cb5:	xor    al,BYTE PTR [rax]
  434cb7:	push   rbx
  434cb8:	rex.WB
  434cb9:	rex.RXB xor DWORD PTR [r9],r14d
  434cbc:	xor    al,BYTE PTR [rax]
  434cbe:	push   rdx
  434cbf:	gs (bad) 
  434cc1:	ins    BYTE PTR es:[rdi],dx
  434cc2:	sub    eax,0x656d6974
  434cc7:	and    BYTE PTR [rbp+0x76],ah
  434cca:	outs   dx,BYTE PTR gs:[rsi]
  434ccc:	je     0x434cee
  434cce:	xor    DWORD PTR [rcx],esi
  434cd0:	xor    al,BYTE PTR [rax]
  434cd2:	rex.RXB
  434cd3:	rex.R
  434cd4:	rex.X pop rdi
  434cd6:	push   rbx
  434cd7:	rex.WB
  434cd8:	rex.RXB
  434cd9:	rex.WRX
  434cda:	rex.B
  434cdb:	rex.WR pop rdi
  434cdd:	push   rdx
  434cde:	rex.RB
  434cdf:	rex.B
  434ce0:	rex.WR push rsp
  434ce2:	rex.WB
  434ce3:	rex.WRB
  434ce4:	rex.RB pop r15
  434ce6:	xor    DWORD PTR [rcx],esi
  434ce8:	xor    eax,DWORD PTR [rax]
  434cea:	push   rbx
  434ceb:	rex.WB
  434cec:	rex.RXB xor DWORD PTR [r9],r14d
  434cef:	xor    eax,DWORD PTR [rax]
  434cf1:	push   rdx
  434cf2:	gs (bad) 
  434cf4:	ins    BYTE PTR es:[rdi],dx
  434cf5:	sub    eax,0x656d6974
  434cfa:	and    BYTE PTR [rbp+0x76],ah
  434cfd:	outs   dx,BYTE PTR gs:[rsi]
  434cff:	je     0x434d21
  434d01:	xor    DWORD PTR [rcx],esi
  434d03:	xor    eax,DWORD PTR [rax]
  434d05:	rex.RXB
  434d06:	rex.R
  434d07:	rex.X pop rdi
  434d09:	push   rbx
  434d0a:	rex.WB
  434d0b:	rex.RXB
  434d0c:	rex.WRX
  434d0d:	rex.B
  434d0e:	rex.WR pop rdi
  434d10:	push   rdx
  434d11:	rex.RB
  434d12:	rex.B
  434d13:	rex.WR push rsp
  434d15:	rex.WB
  434d16:	rex.WRB
  434d17:	rex.RB pop r15
  434d19:	xor    DWORD PTR [rcx],esi
  434d1b:	xor    al,0x0
  434d1d:	push   rbx
  434d1e:	rex.WB
  434d1f:	rex.RXB xor DWORD PTR [r9],r14d
  434d22:	xor    al,0x0
  434d24:	push   rdx
  434d25:	gs (bad) 
  434d27:	ins    BYTE PTR es:[rdi],dx
  434d28:	sub    eax,0x656d6974
  434d2d:	and    BYTE PTR [rbp+0x76],ah
  434d30:	outs   dx,BYTE PTR gs:[rsi]
  434d32:	je     0x434d54
  434d34:	xor    DWORD PTR [rcx],esi
  434d36:	xor    al,0x0
  434d38:	rex.RXB
  434d39:	rex.R
  434d3a:	rex.X pop rdi
  434d3c:	push   rbx
  434d3d:	rex.WB
  434d3e:	rex.RXB
  434d3f:	rex.WRX
  434d40:	rex.B
  434d41:	rex.WR pop rdi
  434d43:	push   rdx
  434d44:	rex.RB
  434d45:	rex.B
  434d46:	rex.WR push rsp
  434d48:	rex.WB
  434d49:	rex.WRB
  434d4a:	rex.RB pop r15
  434d4c:	xor    DWORD PTR [rcx],esi
  434d4e:	xor    eax,0x47495300
  434d53:	xor    DWORD PTR [rcx],esi
  434d55:	xor    eax,0x61655200
  434d5a:	ins    BYTE PTR es:[rdi],dx
  434d5b:	sub    eax,0x656d6974
  434d60:	and    BYTE PTR [rbp+0x76],ah
  434d63:	outs   dx,BYTE PTR gs:[rsi]
  434d65:	je     0x434d87
  434d67:	xor    DWORD PTR [rcx],esi
  434d69:	xor    eax,0x42444700
  434d6e:	pop    rdi
  434d6f:	push   rbx
  434d70:	rex.WB
  434d71:	rex.RXB
  434d72:	rex.WRX
  434d73:	rex.B
  434d74:	rex.WR pop rdi
  434d76:	push   rdx
  434d77:	rex.RB
  434d78:	rex.B
  434d79:	rex.WR push rsp
  434d7b:	rex.WB
  434d7c:	rex.WRB
  434d7d:	rex.RB pop r15
  434d7f:	xor    DWORD PTR [rcx],esi
  434d81:	add    BYTE PTR ss:[rbx+0x49],dl
  434d85:	rex.RXB xor DWORD PTR [r9],r14d
  434d88:	add    BYTE PTR ss:[rdx+0x65],dl
  434d8c:	(bad)  
  434d8d:	ins    BYTE PTR es:[rdi],dx
  434d8e:	sub    eax,0x656d6974
  434d93:	and    BYTE PTR [rbp+0x76],ah
  434d96:	outs   dx,BYTE PTR gs:[rsi]
  434d98:	je     0x434dba
  434d9a:	xor    DWORD PTR [rcx],esi
  434d9c:	add    BYTE PTR ss:[rdi+0x44],al
  434da0:	rex.X pop rdi
  434da2:	push   rbx
  434da3:	rex.WB
  434da4:	rex.RXB
  434da5:	rex.WRX
  434da6:	rex.B
  434da7:	rex.WR pop rdi
  434da9:	push   rdx
  434daa:	rex.RB
  434dab:	rex.B
  434dac:	rex.WR push rsp
  434dae:	rex.WB
  434daf:	rex.WRB
  434db0:	rex.RB pop r15
  434db2:	xor    DWORD PTR [rcx],esi
  434db4:	(bad)  
  434db5:	add    BYTE PTR [rbx+0x49],dl
  434db8:	rex.RXB xor DWORD PTR [r9],r14d
  434dbb:	(bad)  
  434dbc:	add    BYTE PTR [rdx+0x65],dl
  434dbf:	(bad)  
  434dc0:	ins    BYTE PTR es:[rdi],dx
  434dc1:	sub    eax,0x656d6974
  434dc6:	and    BYTE PTR [rbp+0x76],ah
  434dc9:	outs   dx,BYTE PTR gs:[rsi]
  434dcb:	je     0x434ded
  434dcd:	xor    DWORD PTR [rcx],esi
  434dcf:	(bad)  
  434dd0:	add    BYTE PTR [rdi+0x44],al
  434dd3:	rex.X pop rdi
  434dd5:	push   rbx
  434dd6:	rex.WB
  434dd7:	rex.RXB
  434dd8:	rex.WRX
  434dd9:	rex.B
  434dda:	rex.WR pop rdi
  434ddc:	push   rdx
  434ddd:	rex.RB
  434dde:	rex.B
  434ddf:	rex.WR push rsp
  434de1:	rex.WB
  434de2:	rex.WRB
  434de3:	rex.RB pop r15
  434de5:	xor    DWORD PTR [rcx],esi
  434de7:	cmp    BYTE PTR [rax],al
  434de9:	push   rbx
  434dea:	rex.WB
  434deb:	rex.RXB xor DWORD PTR [r9],r14d
  434dee:	cmp    BYTE PTR [rax],al
  434df0:	push   rdx
  434df1:	gs (bad) 
  434df3:	ins    BYTE PTR es:[rdi],dx
  434df4:	sub    eax,0x656d6974
  434df9:	and    BYTE PTR [rbp+0x76],ah
  434dfc:	outs   dx,BYTE PTR gs:[rsi]
  434dfe:	je     0x434e20
  434e00:	xor    DWORD PTR [rcx],esi
  434e02:	cmp    BYTE PTR [rax],al
  434e04:	rex.RXB
  434e05:	rex.R
  434e06:	rex.X pop rdi
  434e08:	push   rbx
  434e09:	rex.WB
  434e0a:	rex.RXB
  434e0b:	rex.WRX
  434e0c:	rex.B
  434e0d:	rex.WR pop rdi
  434e0f:	push   rdx
  434e10:	rex.RB
  434e11:	rex.B
  434e12:	rex.WR push rsp
  434e14:	rex.WB
  434e15:	rex.WRB
  434e16:	rex.RB pop r15
  434e18:	xor    DWORD PTR [rcx],esi
  434e1a:	cmp    DWORD PTR [rax],eax
  434e1c:	push   rbx
  434e1d:	rex.WB
  434e1e:	rex.RXB xor DWORD PTR [r9],r14d
  434e21:	cmp    DWORD PTR [rax],eax
  434e23:	push   rdx
  434e24:	gs (bad) 
  434e26:	ins    BYTE PTR es:[rdi],dx
  434e27:	sub    eax,0x656d6974
  434e2c:	and    BYTE PTR [rbp+0x76],ah
  434e2f:	outs   dx,BYTE PTR gs:[rsi]
  434e31:	je     0x434e53
  434e33:	xor    DWORD PTR [rcx],esi
  434e35:	cmp    DWORD PTR [rax],eax
  434e37:	rex.RXB
  434e38:	rex.R
  434e39:	rex.X pop rdi
  434e3b:	push   rbx
  434e3c:	rex.WB
  434e3d:	rex.RXB
  434e3e:	rex.WRX
  434e3f:	rex.B
  434e40:	rex.WR pop rdi
  434e42:	push   rdx
  434e43:	rex.RB
  434e44:	rex.B
  434e45:	rex.WR push rsp
  434e47:	rex.WB
  434e48:	rex.WRB
  434e49:	rex.RB pop r15
  434e4b:	xor    DWORD PTR [rdx],esi
  434e4d:	xor    BYTE PTR [rax],al
  434e4f:	push   rbx
  434e50:	rex.WB
  434e51:	rex.RXB xor DWORD PTR [r10],r14d
  434e54:	xor    BYTE PTR [rax],al
  434e56:	push   rdx
  434e57:	gs (bad) 
  434e59:	ins    BYTE PTR es:[rdi],dx
  434e5a:	sub    eax,0x656d6974
  434e5f:	and    BYTE PTR [rbp+0x76],ah
  434e62:	outs   dx,BYTE PTR gs:[rsi]
  434e64:	je     0x434e86
  434e66:	xor    DWORD PTR [rdx],esi
  434e68:	xor    BYTE PTR [rax],al
  434e6a:	rex.RXB
  434e6b:	rex.R
  434e6c:	rex.X pop rdi
  434e6e:	push   rbx
  434e6f:	rex.WB
  434e70:	rex.RXB
  434e71:	rex.WRX
  434e72:	rex.B
  434e73:	rex.WR pop rdi
  434e75:	push   rdx
  434e76:	rex.RB
  434e77:	rex.B
  434e78:	rex.WR push rsp
  434e7a:	rex.WB
  434e7b:	rex.WRB
  434e7c:	rex.RB pop r15
  434e7e:	xor    DWORD PTR [rdx],esi
  434e80:	xor    DWORD PTR [rax],eax
  434e82:	push   rbx
  434e83:	rex.WB
  434e84:	rex.RXB xor DWORD PTR [r10],r14d
  434e87:	xor    DWORD PTR [rax],eax
  434e89:	push   rdx
  434e8a:	gs (bad) 
  434e8c:	ins    BYTE PTR es:[rdi],dx
  434e8d:	sub    eax,0x656d6974
  434e92:	and    BYTE PTR [rbp+0x76],ah
  434e95:	outs   dx,BYTE PTR gs:[rsi]
  434e97:	je     0x434eb9
  434e99:	xor    DWORD PTR [rdx],esi
  434e9b:	xor    DWORD PTR [rax],eax
  434e9d:	rex.RXB
  434e9e:	rex.R
  434e9f:	rex.X pop rdi
  434ea1:	push   rbx
  434ea2:	rex.WB
  434ea3:	rex.RXB
  434ea4:	rex.WRX
  434ea5:	rex.B
  434ea6:	rex.WR pop rdi
  434ea8:	push   rdx
  434ea9:	rex.RB
  434eaa:	rex.B
  434eab:	rex.WR push rsp
  434ead:	rex.WB
  434eae:	rex.WRB
  434eaf:	rex.RB pop r15
  434eb1:	xor    DWORD PTR [rdx],esi
  434eb3:	xor    al,BYTE PTR [rax]
  434eb5:	push   rbx
  434eb6:	rex.WB
  434eb7:	rex.RXB xor DWORD PTR [r10],r14d
  434eba:	xor    al,BYTE PTR [rax]
  434ebc:	push   rdx
  434ebd:	gs (bad) 
  434ebf:	ins    BYTE PTR es:[rdi],dx
  434ec0:	sub    eax,0x656d6974
  434ec5:	and    BYTE PTR [rbp+0x76],ah
  434ec8:	outs   dx,BYTE PTR gs:[rsi]
  434eca:	je     0x434eec
  434ecc:	xor    DWORD PTR [rdx],esi
  434ece:	xor    al,BYTE PTR [rax]
  434ed0:	rex.RXB
  434ed1:	rex.R
  434ed2:	rex.X pop rdi
  434ed4:	push   rbx
  434ed5:	rex.WB
  434ed6:	rex.RXB
  434ed7:	rex.WRX
  434ed8:	rex.B
  434ed9:	rex.WR pop rdi
  434edb:	push   rdx
  434edc:	rex.RB
  434edd:	rex.B
  434ede:	rex.WR push rsp
  434ee0:	rex.WB
  434ee1:	rex.WRB
  434ee2:	rex.RB pop r15
  434ee4:	xor    DWORD PTR [rdx],esi
  434ee6:	xor    eax,DWORD PTR [rax]
  434ee8:	push   rbx
  434ee9:	rex.WB
  434eea:	rex.RXB xor DWORD PTR [r10],r14d
  434eed:	xor    eax,DWORD PTR [rax]
  434eef:	push   rdx
  434ef0:	gs (bad) 
  434ef2:	ins    BYTE PTR es:[rdi],dx
  434ef3:	sub    eax,0x656d6974
  434ef8:	and    BYTE PTR [rbp+0x76],ah
  434efb:	outs   dx,BYTE PTR gs:[rsi]
  434efd:	je     0x434f1f
  434eff:	xor    DWORD PTR [rdx],esi
  434f01:	xor    eax,DWORD PTR [rax]
  434f03:	rex.RXB
  434f04:	rex.R
  434f05:	rex.X pop rdi
  434f07:	push   rbx
  434f08:	rex.WB
  434f09:	rex.RXB
  434f0a:	rex.WRX
  434f0b:	rex.B
  434f0c:	rex.WR pop rdi
  434f0e:	push   rdx
  434f0f:	rex.RB
  434f10:	rex.B
  434f11:	rex.WR push rsp
  434f13:	rex.WB
  434f14:	rex.WRB
  434f15:	rex.RB pop r15
  434f17:	xor    DWORD PTR [rdx],esi
  434f19:	xor    al,0x0
  434f1b:	push   rbx
  434f1c:	rex.WB
  434f1d:	rex.RXB xor DWORD PTR [r10],r14d
  434f20:	xor    al,0x0
  434f22:	push   rdx
  434f23:	gs (bad) 
  434f25:	ins    BYTE PTR es:[rdi],dx
  434f26:	sub    eax,0x656d6974
  434f2b:	and    BYTE PTR [rbp+0x76],ah
  434f2e:	outs   dx,BYTE PTR gs:[rsi]
  434f30:	je     0x434f52
  434f32:	xor    DWORD PTR [rdx],esi
  434f34:	xor    al,0x0
  434f36:	rex.RXB
  434f37:	rex.R
  434f38:	rex.X pop rdi
  434f3a:	push   rbx
  434f3b:	rex.WB
  434f3c:	rex.RXB
  434f3d:	rex.WRX
  434f3e:	rex.B
  434f3f:	rex.WR pop rdi
  434f41:	push   rdx
  434f42:	rex.RB
  434f43:	rex.B
  434f44:	rex.WR push rsp
  434f46:	rex.WB
  434f47:	rex.WRB
  434f48:	rex.RB pop r15
  434f4a:	xor    DWORD PTR [rdx],esi
  434f4c:	xor    eax,0x47495300
  434f51:	xor    DWORD PTR [rdx],esi
  434f53:	xor    eax,0x61655200
  434f58:	ins    BYTE PTR es:[rdi],dx
  434f59:	sub    eax,0x656d6974
  434f5e:	and    BYTE PTR [rbp+0x76],ah
  434f61:	outs   dx,BYTE PTR gs:[rsi]
  434f63:	je     0x434f85
  434f65:	xor    DWORD PTR [rdx],esi
  434f67:	xor    eax,0x42444700
  434f6c:	pop    rdi
  434f6d:	push   rbx
  434f6e:	rex.WB
  434f6f:	rex.RXB
  434f70:	rex.WRX
  434f71:	rex.B
  434f72:	rex.WR pop rdi
  434f74:	push   rdx
  434f75:	rex.RB
  434f76:	rex.B
  434f77:	rex.WR push rsp
  434f79:	rex.WB
  434f7a:	rex.WRB
  434f7b:	rex.RB pop r15
  434f7d:	xor    DWORD PTR [rdx],esi
  434f7f:	add    BYTE PTR ss:[rbx+0x49],dl
  434f83:	rex.RXB xor DWORD PTR [r10],r14d
  434f86:	add    BYTE PTR ss:[rdx+0x65],dl
  434f8a:	(bad)  
  434f8b:	ins    BYTE PTR es:[rdi],dx
  434f8c:	sub    eax,0x656d6974
  434f91:	and    BYTE PTR [rbp+0x76],ah
  434f94:	outs   dx,BYTE PTR gs:[rsi]
  434f96:	je     0x434fb8
  434f98:	xor    DWORD PTR [rdx],esi
  434f9a:	add    BYTE PTR ss:[rdi+0x44],al
  434f9e:	rex.X pop rdi
  434fa0:	push   rbx
  434fa1:	rex.WB
  434fa2:	rex.RXB
  434fa3:	rex.WRX
  434fa4:	rex.B
  434fa5:	rex.WR pop rdi
  434fa7:	push   rdx
  434fa8:	rex.RB
  434fa9:	rex.B
  434faa:	rex.WR push rsp
  434fac:	rex.WB
  434fad:	rex.WRB
  434fae:	rex.RB pop r15
  434fb0:	xor    DWORD PTR [rdx],esi
  434fb2:	(bad)  
  434fb3:	add    BYTE PTR [rbx+0x49],dl
  434fb6:	rex.RXB xor DWORD PTR [r10],r14d
  434fb9:	(bad)  
  434fba:	add    BYTE PTR [rdx+0x65],dl
  434fbd:	(bad)  
  434fbe:	ins    BYTE PTR es:[rdi],dx
  434fbf:	sub    eax,0x656d6974
  434fc4:	and    BYTE PTR [rbp+0x76],ah
  434fc7:	outs   dx,BYTE PTR gs:[rsi]
  434fc9:	je     0x434feb
  434fcb:	xor    DWORD PTR [rdx],esi
  434fcd:	(bad)  
  434fce:	add    BYTE PTR [rdi+0x44],al
  434fd1:	rex.X pop rdi
  434fd3:	push   rbx
  434fd4:	rex.WB
  434fd5:	rex.RXB
  434fd6:	rex.WRX
  434fd7:	rex.B
  434fd8:	rex.WR pop rdi
  434fda:	rex.WB
  434fdb:	rex.WRX
  434fdc:	rex.RX
  434fdd:	rex.WRXB add BYTE PTR [r11+0x49],r10b
  434fe1:	rex.RXB
  434fe2:	rex.WB
  434fe3:	rex.WRX
  434fe4:	rex.RX
  434fe5:	rex.WRXB add BYTE PTR [r9+0x6e],r9b
  434fe9:	outs   dx,WORD PTR ds:[rsi]
  434feb:	jb     0x43505a
  434fed:	(bad)  
  434fee:	je     0x435059
  434ff0:	outs   dx,DWORD PTR ds:[rsi]
  434ff1:	outs   dx,BYTE PTR ds:[rsi]
  434ff2:	and    BYTE PTR [rdx+0x65],dh
  434ff5:	jno    0x43506c
  434ff7:	gs jae 0x43506e
  434ffa:	add    BYTE PTR [rdi+0x44],al
  434ffd:	rex.X pop rdi
  434fff:	push   rbx
  435000:	rex.WB
  435001:	rex.RXB
  435002:	rex.WRX
  435003:	rex.B
  435004:	rex.WR pop rdi
  435006:	push   rbp
  435007:	rex.WRX
  435008:	rex.WXB
  435009:	rex.WRX
  43500a:	rex.WRXB push r15
  43500c:	rex.WRX add BYTE PTR [rdi+0x44],r8b
  435010:	rex.X pop rdi
  435012:	push   rbx
  435013:	rex.WB
  435014:	rex.RXB
  435015:	rex.WRX
  435016:	rex.B
  435017:	rex.WR pop rdi
  435019:	rex.R
  43501a:	rex.RB
  43501b:	rex.RX
  43501c:	push   r13
  43501e:	rex.WR push rsp
	...
  435028:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43502a:	je     0x435091
  43502c:	jb     0x43509c
  43502e:	(bad)  
  43502f:	ins    BYTE PTR es:[rdi],dx
  435030:	and    BYTE PTR [rbp+0x72],ah
  435033:	jb     0x4350a4
  435035:	jb     0x435071
  435037:	and    BYTE PTR [rax+0x72],dh
  43503a:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  435041:	rex.RXB
  435042:	rex.R
  435043:	rex.X pop rdi
  435045:	push   rbx
  435046:	rex.WB
  435047:	rex.RXB
  435048:	rex.WRX
  435049:	rex.B
  43504a:	rex.WR pop rdi
  43504c:	rex.R
  43504d:	rex.RB
  43504e:	rex.RX
  43504f:	push   r13
  435051:	rex.WR push rsp
  435053:	add    BYTE PTR [rdi+0x44],al
  435056:	rex.X pop rdi
  435058:	rex.RB pop r8
  43505a:	rex.XB pop r15
  43505c:	rex.X
  43505d:	rex.B
  43505e:	rex.R pop rdi
  435060:	rex.B
  435061:	rex.XB
  435062:	rex.XB
  435063:	rex.RB push r11
  435065:	push   rbx
  435066:	add    BYTE PTR [rbp+0x58],al
  435069:	rex.XB pop r15
  43506b:	rex.X
  43506c:	rex.B
  43506d:	rex.R pop rdi
  43506f:	rex.B
  435070:	rex.XB
  435071:	rex.XB
  435072:	rex.RB push r11
  435074:	push   rbx
  435075:	add    BYTE PTR [rbx+0x6f],al
  435078:	jne    0x4350e6
  43507a:	and    BYTE PTR fs:[rsi+0x6f],ch
  43507e:	je     0x4350a0
  435080:	(bad)  
  435081:	movsxd esp,DWORD PTR [rbx+0x65]
  435084:	jae    0x4350f9
  435086:	and    BYTE PTR [rbp+0x65],ch
  435089:	ins    DWORD PTR es:[rdi],dx
  43508a:	outs   dx,DWORD PTR ds:[rsi]
  43508b:	jb     0x435106
  43508d:	add    BYTE PTR [rdi+0x44],al
  435090:	rex.X pop rdi
  435092:	rex.RB pop r8
  435094:	rex.XB pop r15
  435096:	rex.X
  435097:	rex.B
  435098:	rex.R pop rdi
  43509a:	rex.WB
  43509b:	rex.WRX push rbx
  43509d:	push   rsp
  43509e:	push   rdx
  43509f:	push   rbp
  4350a0:	rex.XB push r12
  4350a2:	rex.WB
  4350a3:	rex.WRXB
  4350a4:	rex.WRX add BYTE PTR [rbp+0x58],r8b
  4350a8:	rex.XB pop r15
  4350aa:	rex.X
  4350ab:	rex.B
  4350ac:	rex.R pop rdi
  4350ae:	rex.WB
  4350af:	rex.WRX push rbx
  4350b1:	push   rsp
  4350b2:	push   rdx
  4350b3:	push   rbp
  4350b4:	rex.XB push r12
  4350b6:	rex.WB
  4350b7:	rex.WRXB
  4350b8:	rex.WRX add BYTE PTR [rcx+0x6c],r9b
  4350bc:	ins    BYTE PTR es:[rdi],dx
  4350bd:	gs addr32 (bad) 
  4350c0:	ins    BYTE PTR es:[rdi],dx
  4350c1:	and    BYTE PTR [rcx+0x6e],ch
  4350c4:	jae    0x43513a
  4350c6:	jb     0x43513d
  4350c8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4350cc:	outs   dx,BYTE PTR ds:[rsi]
  4350cd:	(bad)  
  4350ce:	outs   dx,DWORD PTR ds:[rsi]
  4350cf:	jo     0x435136
  4350d1:	jb     0x435134
  4350d3:	outs   dx,BYTE PTR ds:[rsi]
  4350d4:	add    BYTE PTR fs:[rdi+0x44],al
  4350d8:	rex.X pop rdi
  4350da:	rex.RB pop r8
  4350dc:	rex.XB pop r15
  4350de:	push   r10
  4350e0:	rex.WB push r12
  4350e2:	rex.W
  4350e3:	rex.WRB
  4350e4:	rex.RB push r12
  4350e6:	rex.WB
  4350e7:	rex.XB add BYTE PTR [r13+0x58],al
  4350eb:	rex.XB pop r15
  4350ed:	push   r10
  4350ef:	rex.WB push r12
  4350f1:	rex.W
  4350f2:	rex.WRB
  4350f3:	rex.RB push r12
  4350f5:	rex.WB
  4350f6:	rex.XB add BYTE PTR [r15+0x44],al
  4350fa:	rex.X pop rdi
  4350fc:	rex.RB pop r8
  4350fe:	rex.XB pop r15
  435100:	rex.RB
  435101:	rex.WRB push r13
  435103:	rex.WR
  435104:	push   r12
  435106:	rex.WB
  435107:	rex.WRXB
  435108:	rex.WRX add BYTE PTR [rbp+0x58],r8b
  43510c:	rex.XB pop r15
  43510e:	rex.RB
  43510f:	rex.WRB push r13
  435111:	rex.WR
  435112:	push   r12
  435114:	rex.WB
  435115:	rex.WRXB
  435116:	rex.WRX add BYTE PTR [rbp+0x6d],r8b
  43511a:	jne    0x435188
  43511c:	(bad)  
  43511d:	je     0x435188
  43511f:	outs   dx,DWORD PTR ds:[rsi]
  435120:	outs   dx,BYTE PTR ds:[rsi]
  435121:	and    BYTE PTR [rcx+0x6e],ch
  435124:	jae    0x43519a
  435126:	jb     0x43519d
  435128:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43512c:	outs   dx,BYTE PTR ds:[rsi]
  43512d:	add    BYTE PTR [rdi+0x44],al
  435130:	rex.X pop rdi
  435132:	rex.RB pop r8
  435134:	rex.XB pop r15
  435136:	push   rbx
  435137:	rex.WRXB
  435138:	rex.RX push rsp
  43513a:	push   rdi
  43513b:	push   r10
  43513d:	add    BYTE PTR [r13+0x58],r8b
  435141:	rex.XB pop r15
  435143:	push   rbx
  435144:	rex.WRXB
  435145:	rex.RX push rsp
  435147:	push   rdi
  435148:	push   r10
  43514a:	add    BYTE PTR [r11+0x6f],r10b
  43514e:	data16 je 0x4351c8
  435151:	(bad)  
  435152:	jb     0x4351b9
  435154:	and    BYTE PTR [rdi+0x65],ah
  435157:	outs   dx,BYTE PTR ds:[rsi]
  435158:	gs jb  0x4351bc
  43515b:	je     0x4351c2
  43515d:	and    BYTE PTR fs:[rbp+0x78],ah
  435161:	movsxd esp,DWORD PTR [rbp+0x70]
  435164:	je     0x4351cf
  435166:	outs   dx,DWORD PTR ds:[rsi]
  435167:	outs   dx,BYTE PTR ds:[rsi]
  435168:	add    BYTE PTR [rdi+0x44],al
  43516b:	rex.X pop rdi
  43516d:	rex.RB pop r8
  43516f:	rex.XB pop r15
  435171:	rex.X push rdx
  435173:	rex.RB
  435174:	rex.B
  435175:	rex.WXB push r8
  435177:	rex.WRXB
  435178:	rex.WB
  435179:	rex.WRX push rsp
  43517b:	add    BYTE PTR [rbp+0x58],al
  43517e:	rex.XB pop r15
  435180:	rex.X push rdx
  435182:	rex.RB
  435183:	rex.B
  435184:	rex.WXB push r8
  435186:	rex.WRXB
  435187:	rex.WB
  435188:	rex.WRX push rsp
  43518a:	add    BYTE PTR [rdx+0x72],al
  43518d:	gs (bad) 
  43518f:	imul   esi,DWORD PTR [rax+0x6f],0x69
  435193:	outs   dx,BYTE PTR ds:[rsi]
  435194:	je     0x435196
  435196:	rex.RXB
  435197:	rex.R
  435198:	rex.X pop rdi
  43519a:	push   rbx
  43519b:	rex.WB
  43519c:	rex.RXB
  43519d:	rex.WRX
  43519e:	rex.B
  43519f:	rex.WR pop rdi
  4351a1:	rex.WR
  4351a2:	rex.WB
  4351a3:	rex.X push rdx
  4351a5:	push   rsp
  4351a6:	add    BYTE PTR [rbx+0x49],dl
  4351a9:	rex.RXB
  4351aa:	rex.WR
  4351ab:	rex.WB
  4351ac:	rex.X push rdx
  4351ae:	push   rsp
  4351af:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4351b3:	jb     0x435229
  4351b5:	and    BYTE PTR [rcx+0x6e],ch
  4351b8:	je     0x43521f
  4351ba:	jb     0x43522a
  4351bc:	(bad)  
  4351bd:	ins    BYTE PTR es:[rdi],dx
  4351be:	and    BYTE PTR [rbx+0x69],dh
  4351c1:	outs   dx,BYTE PTR ds:[esi]
  4351c3:	(bad)  
  4351c4:	ins    BYTE PTR es:[rdi],dx
  4351c5:	add    BYTE PTR [rdi+0x44],al
  4351c8:	rex.X pop rdi
  4351ca:	push   rbx
  4351cb:	rex.WB
  4351cc:	rex.RXB
  4351cd:	rex.WRX
  4351ce:	rex.B
  4351cf:	rex.WR pop rdi
  4351d1:	rex.WR
  4351d2:	push   r11
  4351d4:	push   rsp
	...
  4351fd:	add    BYTE PTR [rax],al
  4351ff:	add    BYTE PTR [rsi+rsi*1],dh
  435202:	rex.XB add BYTE PTR [r8],al
  435205:	add    BYTE PTR [rax],al
  435207:	add    BYTE PTR [rcx+0x36],al
  43520a:	rex.XB add BYTE PTR [r8],al
  43520d:	add    BYTE PTR [rax],al
  43520f:	add    BYTE PTR [rbx+0x36],al
  435212:	rex.XB add BYTE PTR [r8],al
  435215:	add    BYTE PTR [rax],al
  435217:	add    BYTE PTR [rsi+rsi*1+0x43],cl
  43521b:	add    BYTE PTR [rax],al
  43521d:	add    BYTE PTR [rax],al
  43521f:	add    BYTE PTR [rbx+0x36],bl
  435222:	rex.XB add BYTE PTR [r8],al
  435225:	add    BYTE PTR [rax],al
  435227:	add    BYTE PTR [rdx+0x36],ah
  43522a:	rex.XB add BYTE PTR [r8],al
  43522d:	add    BYTE PTR [rax],al
  43522f:	add    BYTE PTR [rcx+0x36],ch
  435232:	rex.XB add BYTE PTR [r8],al
  435235:	add    BYTE PTR [rax],al
  435237:	add    BYTE PTR [rax+0x36],bh
  43523a:	rex.XB add BYTE PTR [r8],al
  43523d:	add    BYTE PTR [rax],al
  43523f:	add    BYTE PTR [rdi+0x36],bh
  435242:	rex.XB add BYTE PTR [r8],al
  435245:	add    BYTE PTR [rax],al
  435247:	add    BYTE PTR [rcx+0x4336],cl
  43524d:	add    BYTE PTR [rax],al
  43524f:	add    BYTE PTR [rcx+0x4336],bl
  435255:	add    BYTE PTR [rax],al
  435257:	add    BYTE PTR [rcx+0x4336],ah
  43525d:	add    BYTE PTR [rax],al
  43525f:	add    BYTE PTR [rsi+0x4336],ah
  435265:	add    BYTE PTR [rax],al
  435267:	add    BYTE PTR [rbp+0x4336],dh
  43526d:	add    BYTE PTR [rax],al
  43526f:	add    BYTE PTR [rsi+rsi*1+0x43],bh
  435276:	add    BYTE PTR [rax],al
  435278:	shl    BYTE PTR [rsi],1
  43527a:	rex.XB add BYTE PTR [r8],al
  43527d:	add    BYTE PTR [rax],al
  43527f:	add    al,ah
  435281:	rex.XB add BYTE PTR ss:[r8],al
  435285:	add    BYTE PTR [rax],al
  435287:	add    al,ch
  435289:	rex.XB add BYTE PTR ss:[r8],al
  43528d:	add    BYTE PTR [rax],al
  43528f:	add    dh,bh
  435291:	rex.XB add BYTE PTR ss:[r8],al
  435295:	add    BYTE PTR [rax],al
  435297:	add    BYTE PTR [rsi],cl
  435299:	(bad)  
  43529a:	rex.XB add BYTE PTR [r8],al
  43529d:	add    BYTE PTR [rax],al
  43529f:	add    BYTE PTR [rsi],dl
  4352a1:	(bad)  
  4352a2:	rex.XB add BYTE PTR [r8],al
  4352a5:	add    BYTE PTR [rax],al
  4352a7:	add    BYTE PTR [rsi],bl
  4352a9:	(bad)  
  4352aa:	rex.XB add BYTE PTR [r8],al
  4352ad:	add    BYTE PTR [rax],al
  4352af:	add    BYTE PTR [rip+0x4337],ch        # 0x4395ec
  4352b5:	add    BYTE PTR [rax],al
  4352b7:	add    BYTE PTR [rdi+rsi*1],dh
  4352ba:	rex.XB add BYTE PTR [r8],al
  4352bd:	add    BYTE PTR [rax],al
  4352bf:	add    BYTE PTR [rbx+0x37],al
  4352c2:	rex.XB add BYTE PTR [r8],al
  4352c5:	add    BYTE PTR [rax],al
  4352c7:	add    BYTE PTR [rdx+0x37],dl
  4352ca:	rex.XB add BYTE PTR [r8],al
  4352cd:	add    BYTE PTR [rax],al
  4352cf:	add    BYTE PTR [rcx+0x37],bl
  4352d2:	rex.XB add BYTE PTR [r8],al
  4352d5:	add    BYTE PTR [rax],al
  4352d7:	add    BYTE PTR [rsi+0x37],ch
  4352da:	rex.XB add BYTE PTR [r8],al
  4352dd:	add    BYTE PTR [rax],al
  4352df:	add    BYTE PTR [rsi+0x37],bh
  4352e2:	rex.XB add BYTE PTR [r8],al
  4352e5:	add    BYTE PTR [rax],al
  4352e7:	add    BYTE PTR [rsi+0x4337],al
  4352ed:	add    BYTE PTR [rax],al
  4352ef:	add    BYTE PTR [rbp+0x4337],cl
  4352f5:	add    BYTE PTR [rax],al
  4352f7:	add    BYTE PTR [rdi+rsi*1+0x43],bl
  4352fe:	add    BYTE PTR [rax],al
  435300:	movabs ds:0xad00000000004337,eax
  435309:	(bad)  
  43530a:	rex.XB add BYTE PTR [r8],al
  43530d:	add    BYTE PTR [rax],al
  43530f:	add    BYTE PTR [rbp+0x4337],bh
  435315:	add    BYTE PTR [rax],al
  435317:	add    ch,al
  435319:	(bad)  
  43531a:	rex.XB add BYTE PTR [r8],al
  43531d:	add    BYTE PTR [rax],al
  43531f:	add    al,bl
  435321:	(bad)  
  435322:	rex.XB add BYTE PTR [r8],al
  435325:	add    BYTE PTR [rax],al
  435327:	add    bh,ah
  435329:	(bad)  
  43532a:	rex.XB add BYTE PTR [r8],al
  43532d:	add    BYTE PTR [rax],al
  43532f:	add    dh,ch
  435331:	(bad)  
  435332:	rex.XB add BYTE PTR [r8],al
  435335:	add    BYTE PTR [rax],al
  435337:	add    dh,bh
  435339:	(bad)  
  43533a:	rex.XB add BYTE PTR [r8],al
  43533d:	add    BYTE PTR [rax],al
  43533f:	add    BYTE PTR [rsi],cl
  435341:	cmp    BYTE PTR [rbx+0x0],al
  435344:	add    BYTE PTR [rax],al
  435346:	add    BYTE PTR [rax],al
  435348:	(bad)  
  435349:	cmp    BYTE PTR [rbx+0x0],al
  43534c:	add    BYTE PTR [rax],al
  43534e:	add    BYTE PTR [rax],al
  435350:	and    bh,BYTE PTR [rax]
  435352:	rex.XB add BYTE PTR [r8],al
  435355:	add    BYTE PTR [rax],al
  435357:	add    BYTE PTR [rdx],dh
  435359:	cmp    BYTE PTR [rbx+0x0],al
  43535c:	add    BYTE PTR [rax],al
  43535e:	add    BYTE PTR [rax],al
  435360:	cmp    bh,BYTE PTR [rax]
  435362:	rex.XB add BYTE PTR [r8],al
  435365:	add    BYTE PTR [rax],al
  435367:	add    BYTE PTR [rsi+0x38],al
  43536a:	rex.XB add BYTE PTR [r8],al
  43536d:	add    BYTE PTR [rax],al
  43536f:	add    BYTE PTR [rsi+0x38],dl
  435372:	rex.XB add BYTE PTR [r8],al
  435375:	add    BYTE PTR [rax],al
  435377:	add    BYTE PTR [rsi+0x38],bl
  43537a:	rex.XB add BYTE PTR [r8],al
  43537d:	add    BYTE PTR [rax],al
  43537f:	add    BYTE PTR [rcx+0x38],ch
  435382:	rex.XB add BYTE PTR [r8],al
  435385:	add    BYTE PTR [rax],al
  435387:	add    BYTE PTR [rax+0x38],bh
  43538a:	rex.XB add BYTE PTR [r8],al
  43538d:	add    BYTE PTR [rax],al
  43538f:	add    BYTE PTR [rdi+0x38],bh
  435392:	rex.XB add BYTE PTR [r8],al
  435395:	add    BYTE PTR [rax],al
  435397:	add    BYTE PTR [rax+rdi*1+0x43],dl
  43539e:	add    BYTE PTR [rax],al
  4353a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4353a1:	cmp    BYTE PTR [rbx+0x0],al
  4353a4:	add    BYTE PTR [rax],al
  4353a6:	add    BYTE PTR [rax],al
  4353a8:	lods   al,BYTE PTR ds:[rsi]
  4353a9:	cmp    BYTE PTR [rbx+0x0],al
  4353ac:	add    BYTE PTR [rax],al
  4353ae:	add    BYTE PTR [rax],al
  4353b0:	mov    ebp,0x4338
  4353b5:	add    BYTE PTR [rax],al
  4353b7:	add    ch,cl
  4353b9:	cmp    BYTE PTR [rbx+0x0],al
  4353bc:	add    BYTE PTR [rax],al
  4353be:	add    BYTE PTR [rax],al
  4353c0:	(bad)  
  4353c1:	cmp    BYTE PTR [rbx+0x0],al
  4353c4:	add    BYTE PTR [rax],al
  4353c6:	add    BYTE PTR [rax],al
  4353c8:	in     al,0x38
  4353ca:	rex.XB add BYTE PTR [r8],al
  4353cd:	add    BYTE PTR [rax],al
  4353cf:	add    ah,dh
  4353d1:	cmp    BYTE PTR [rbx+0x0],al
  4353d4:	add    BYTE PTR [rax],al
  4353d6:	add    BYTE PTR [rax],al
  4353d8:	cld    
  4353d9:	cmp    BYTE PTR [rbx+0x0],al
  4353dc:	add    BYTE PTR [rax],al
  4353de:	add    BYTE PTR [rax],al
  4353e0:	(bad)  
  4353e1:	cmp    DWORD PTR [rbx+0x0],eax
  4353e4:	add    BYTE PTR [rax],al
  4353e6:	add    BYTE PTR [rax],al
  4353e8:	(bad)  
  4353e9:	cmp    DWORD PTR [rbx+0x0],eax
  4353ec:	add    BYTE PTR [rax],al
  4353ee:	add    BYTE PTR [rax],al
  4353f0:	(bad)  
  4353f1:	cmp    DWORD PTR [rbx+0x0],eax
  4353f4:	add    BYTE PTR [rax],al
  4353f6:	add    BYTE PTR [rax],al
  4353f8:	xor    edi,DWORD PTR [rcx]
  4353fa:	rex.XB add BYTE PTR [r8],al
  4353fd:	add    BYTE PTR [rax],al
  4353ff:	add    BYTE PTR [rbx+0x39],al
  435402:	rex.XB add BYTE PTR [r8],al
  435405:	add    BYTE PTR [rax],al
  435407:	add    BYTE PTR [rbx+0x39],cl
  43540a:	rex.XB add BYTE PTR [r8],al
  43540d:	add    BYTE PTR [rax],al
  43540f:	add    BYTE PTR [rdi+0x39],bl
  435412:	rex.XB add BYTE PTR [r8],al
  435415:	add    BYTE PTR [rax],al
  435417:	add    BYTE PTR [rdi+0x39],ch
  43541a:	rex.XB add BYTE PTR [r8],al
  43541d:	add    BYTE PTR [rax],al
  43541f:	add    BYTE PTR [rdi+0x39],dh
  435422:	rex.XB add BYTE PTR [r8],al
  435425:	add    BYTE PTR [rax],al
  435427:	add    BYTE PTR [rcx+rdi*1+0x43],cl
  43542e:	add    BYTE PTR [rax],al
  435430:	(bad)  
  435431:	cmp    DWORD PTR [rbx+0x0],eax
  435434:	add    BYTE PTR [rax],al
  435436:	add    BYTE PTR [rax],al
  435438:	movabs al,ds:0xad00000000004339
  435441:	cmp    DWORD PTR [rbx+0x0],eax
  435444:	add    BYTE PTR [rax],al
  435446:	add    BYTE PTR [rax],al
  435448:	mov    ebp,0x4339
  43544d:	add    BYTE PTR [rax],al
  43544f:	add    ch,al
  435451:	cmp    DWORD PTR [rbx+0x0],eax
  435454:	add    BYTE PTR [rax],al
  435456:	add    BYTE PTR [rax],al
  435458:	fnstsw WORD PTR [rcx]
  43545a:	rex.XB add BYTE PTR [r8],al
  43545d:	add    BYTE PTR [rax],al
  43545f:	add    ch,ch
  435461:	cmp    DWORD PTR [rbx+0x0],eax
  435464:	add    BYTE PTR [rax],al
  435466:	add    BYTE PTR [rax],al
  435468:	cmc    
  435469:	cmp    DWORD PTR [rbx+0x0],eax
  43546c:	add    BYTE PTR [rax],al
  43546e:	add    BYTE PTR [rax],al
  435470:	(bad)  
  435471:	cmp    al,BYTE PTR [rbx+0x0]
  435474:	add    BYTE PTR [rax],al
  435476:	add    BYTE PTR [rax],al
  435478:	and    BYTE PTR [rdx],bh
  43547a:	rex.XB add BYTE PTR [r8],al
  43547d:	add    BYTE PTR [rax],al
  43547f:	add    BYTE PTR [rdx],ch
  435481:	cmp    al,BYTE PTR [rbx+0x0]
  435484:	add    BYTE PTR [rax],al
  435486:	add    BYTE PTR [rax],al
  435488:	cmp    al,BYTE PTR [rbx+0x0]
  43548c:	add    BYTE PTR [rax],al
  43548e:	add    BYTE PTR [rax],al
  435490:	push   rax
  435491:	cmp    al,BYTE PTR [rbx+0x0]
  435494:	add    BYTE PTR [rax],al
  435496:	add    BYTE PTR [rax],al
  435498:	pop    rax
  435499:	cmp    al,BYTE PTR [rbx+0x0]
  43549c:	add    BYTE PTR [rax],al
  43549e:	add    BYTE PTR [rax],al
  4354a0:	jo     0x4354dc
  4354a2:	rex.XB add BYTE PTR [r8],al
  4354a5:	add    BYTE PTR [rax],al
  4354a7:	add    BYTE PTR [rcx+0x433a],al
  4354ad:	add    BYTE PTR [rax],al
  4354af:	add    BYTE PTR [rdx+0x433a],cl
  4354b5:	add    BYTE PTR [rax],al
  4354b7:	add    BYTE PTR [rsi+0x433a],bl
  4354bd:	add    BYTE PTR [rax],al
  4354bf:	add    BYTE PTR [rsi+0x433a],ch
  4354c5:	add    BYTE PTR [rax],al
  4354c7:	add    BYTE PTR [rsi+0x433a],dh
  4354cd:	add    BYTE PTR [rax],al
  4354cf:	add    ah,al
  4354d1:	cmp    al,BYTE PTR [rbx+0x0]
  4354d4:	add    BYTE PTR [rax],al
  4354d6:	add    BYTE PTR [rax],al
  4354d8:	(bad)  
  4354d9:	cmp    al,BYTE PTR [rbx+0x0]
  4354dc:	add    BYTE PTR [rax],al
  4354de:	add    BYTE PTR [rax],al
  4354e0:	fdivr  QWORD PTR [rdx]
  4354e2:	rex.XB add BYTE PTR [r8],al
  4354e5:	add    BYTE PTR [rax],al
  4354e7:	add    dl,dh
  4354e9:	cmp    al,BYTE PTR [rbx+0x0]
  4354ec:	add    BYTE PTR [rax],al
  4354ee:	add    BYTE PTR [rax],al
  4354f0:	add    bh,BYTE PTR [rbx]
  4354f2:	rex.XB add BYTE PTR [r8],al
  4354f5:	add    BYTE PTR [rax],al
  4354f7:	add    BYTE PTR [rdx],cl
  4354f9:	cmp    eax,DWORD PTR [rbx+0x0]
  4354fc:	add    BYTE PTR [rax],al
  4354fe:	add    BYTE PTR [rax],al
  435500:	and    BYTE PTR [rbx],bh
  435502:	rex.XB add BYTE PTR [r8],al
  435505:	add    BYTE PTR [rax],al
  435507:	add    BYTE PTR [rdi],ch
  435509:	cmp    eax,DWORD PTR [rbx+0x0]
  43550c:	add    BYTE PTR [rax],al
  43550e:	add    BYTE PTR [rax],al
  435510:	cmp    eax,DWORD PTR ss:[rbx+0x0]
  435514:	add    BYTE PTR [rax],al
  435516:	add    BYTE PTR [rax],al
  435518:	cmp    rax,QWORD PTR [r11+0x0]
  43551c:	add    BYTE PTR [rax],al
  43551e:	add    BYTE PTR [rax],al
  435520:	pop    rcx
  435521:	cmp    eax,DWORD PTR [rbx+0x0]
  435524:	add    BYTE PTR [rax],al
  435526:	add    BYTE PTR [rax],al
  435528:	(bad)  
  435529:	cmp    eax,DWORD PTR [rbx+0x0]
  43552c:	add    BYTE PTR [rax],al
  43552e:	add    BYTE PTR [rax],al
  435530:	jns    0x43556d
  435532:	rex.XB add BYTE PTR [r8],al
  435535:	add    BYTE PTR [rax],al
  435537:	add    BYTE PTR [rcx+0x433b],cl
  43553d:	add    BYTE PTR [rax],al
  43553f:	add    BYTE PTR [rcx+0x433b],cl
  435545:	add    BYTE PTR [rax],al
  435547:	add    BYTE PTR [rcx+0x433b],dl
  43554d:	add    BYTE PTR [rax],al
  43554f:	add    BYTE PTR [rdx+0x433b],ah
  435555:	add    BYTE PTR [rax],al
  435557:	add    BYTE PTR [rdx+0x433b],ah
  43555d:	add    BYTE PTR [rax],al
  43555f:	add    BYTE PTR [rbx+0x433b],ch
  435565:	add    BYTE PTR [rax],al
  435567:	add    BYTE PTR [rsi+0x433b],bh
  43556d:	add    BYTE PTR [rax],al
  43556f:	add    cl,cl
  435571:	cmp    eax,DWORD PTR [rbx+0x0]
  435574:	add    BYTE PTR [rax],al
  435576:	add    BYTE PTR [rax],al
  435578:	in     al,0x3b
  43557a:	rex.XB add BYTE PTR [r8],al
  43557d:	add    BYTE PTR [rax],al
  43557f:	add    bl,dh
  435581:	cmp    eax,DWORD PTR [rbx+0x0]
  435584:	add    BYTE PTR [rax],al
  435586:	add    BYTE PTR [rax],al
  435588:	cli    
  435589:	cmp    eax,DWORD PTR [rbx+0x0]
  43558c:	add    BYTE PTR [rax],al
  43558e:	add    BYTE PTR [rax],al
  435590:	add    eax,0x433c
  435595:	add    BYTE PTR [rax],al
  435597:	add    BYTE PTR [rdi],dl
  435599:	cmp    al,0x43
  43559b:	add    BYTE PTR [rax],al
  43559d:	add    BYTE PTR [rax],al
  43559f:	add    BYTE PTR [rcx],ah
  4355a1:	cmp    al,0x43
  4355a3:	add    BYTE PTR [rax],al
  4355a5:	add    BYTE PTR [rax],al
  4355a7:	add    BYTE PTR [rsp+rdi*1],bh
  4355aa:	rex.XB add BYTE PTR [r8],al
  4355ad:	add    BYTE PTR [rax],al
  4355af:	add    BYTE PTR [rbp+0x3c],cl
  4355b2:	rex.XB add BYTE PTR [r8],al
  4355b5:	add    BYTE PTR [rax],al
  4355b7:	add    BYTE PTR [rsi+0x3c],dl
  4355ba:	rex.XB add BYTE PTR [r8],al
  4355bd:	add    BYTE PTR [rax],al
  4355bf:	add    BYTE PTR [rbx+0x3c],ch
  4355c2:	rex.XB add BYTE PTR [r8],al
  4355c5:	add    BYTE PTR [rax],al
  4355c7:	add    BYTE PTR [rsi+0x3c],bh
  4355ca:	rex.XB add BYTE PTR [r8],al
  4355cd:	add    BYTE PTR [rax],al
  4355cf:	add    BYTE PTR [rax+0x433c],dl
  4355d5:	add    BYTE PTR [rax],al
  4355d7:	add    BYTE PTR [rax+0x433c],dh
  4355dd:	add    BYTE PTR [rax],al
  4355df:	add    BYTE PTR [rdi+0x433c],bh
  4355e5:	add    BYTE PTR [rax],al
  4355e7:	add    dh,al
  4355e9:	cmp    al,0x43
  4355eb:	add    BYTE PTR [rax],al
  4355ed:	add    BYTE PTR [rax],al
  4355ef:	add    dl,ah
  4355f1:	cmp    al,0x43
  4355f3:	add    BYTE PTR [rax],al
  4355f5:	add    BYTE PTR [rax],al
  4355f7:	add    bl,dh
  4355f9:	cmp    al,0x43
  4355fb:	add    BYTE PTR [rax],al
  4355fd:	add    BYTE PTR [rax],al
  4355ff:	add    ah,bh
  435601:	cmp    al,0x43
  435603:	add    BYTE PTR [rax],al
  435605:	add    BYTE PTR [rax],al
  435607:	add    BYTE PTR [rdi*1+0x43],cl
  43560e:	add    BYTE PTR [rax],al
  435610:	sbb    edi,DWORD PTR [rip+0x43]        # 0x435659
  435616:	add    BYTE PTR [rax],al
  435618:	and    bh,BYTE PTR [rip+0x43]        # 0x435661
  43561e:	add    BYTE PTR [rax],al
  435620:	xor    edi,DWORD PTR [rip+0x43]        # 0x435669
  435626:	add    BYTE PTR [rax],al
  435628:	rex.XB cmp eax,0x43
  43562e:	add    BYTE PTR [rax],al
  435630:	rex.XB cmp eax,0x43
  435636:	add    BYTE PTR [rax],al
  435638:	rex.WXB cmp rax,0x43
  43563e:	add    BYTE PTR [rax],al
  435640:	(bad)  
  435641:	cmp    eax,0x43
  435646:	add    BYTE PTR [rax],al
  435648:	push   0x433d
  43564d:	add    BYTE PTR [rax],al
  43564f:	add    BYTE PTR [rbx+0x3d],bh
  435652:	rex.XB add BYTE PTR [r8],al
  435655:	add    BYTE PTR [rax],al
  435657:	add    BYTE PTR [rdx+0x433d],dl
  43565d:	add    BYTE PTR [rax],al
  43565f:	add    BYTE PTR [rax+0x433d],bl
  435665:	add    BYTE PTR [rax],al
  435667:	add    BYTE PTR [rbx+0x433d],ch
  43566d:	add    BYTE PTR [rax],al
  43566f:	add    dl,al
  435671:	cmp    eax,0x43
  435676:	add    BYTE PTR [rax],al
  435678:	enter  0x433d,0x0
  43567c:	add    BYTE PTR [rax],al
  43567e:	add    BYTE PTR [rax],al
  435680:	fstp   TBYTE PTR [rip+0x43]        # 0x4356c9
  435686:	add    BYTE PTR [rax],al
  435688:	repnz cmp eax,0x43
  43568e:	add    BYTE PTR [rax],al
  435690:	clc    
  435691:	cmp    eax,0x43
  435696:	add    BYTE PTR [rax],al
  435698:	or     edi,DWORD PTR [rsi]
  43569a:	rex.XB add BYTE PTR [r8],al
  43569d:	add    BYTE PTR [rax],al
  43569f:	add    BYTE PTR [rdx],ah
  4356a1:	rex.XB add BYTE PTR ds:[r8],al
  4356a5:	add    BYTE PTR [rax],al
  4356a7:	add    BYTE PTR [rax],ch
  4356a9:	rex.XB add BYTE PTR ds:[r8],al
  4356ad:	add    BYTE PTR [rax],al
  4356af:	add    BYTE PTR [rbx],bh
  4356b1:	rex.XB add BYTE PTR ds:[r8],al
  4356b5:	add    BYTE PTR [rax],al
  4356b7:	add    BYTE PTR [rdx+0x3e],dl
  4356ba:	rex.XB add BYTE PTR [r8],al
  4356bd:	add    BYTE PTR [rax],al
  4356bf:	add    BYTE PTR [rax+0x3e],bl
  4356c2:	rex.XB add BYTE PTR [r8],al
  4356c5:	add    BYTE PTR [rax],al
  4356c7:	add    BYTE PTR [rbx+0x3e],ch
  4356ca:	rex.XB add BYTE PTR [r8],al
  4356cd:	add    BYTE PTR [rax],al
  4356cf:	add    BYTE PTR [rdx+0x433e],al
  4356d5:	add    BYTE PTR [rax],al
  4356d7:	add    BYTE PTR [rax+0x433e],cl
  4356dd:	add    BYTE PTR [rax],al
  4356df:	add    BYTE PTR [rbx+0x433e],bl
  4356e5:	add    BYTE PTR [rax],al
  4356e7:	add    BYTE PTR [rdx+0x433e],dh
  4356ed:	add    BYTE PTR [rax],al
  4356ef:	add    BYTE PTR [rax+0x433e],bh
  4356f5:	add    BYTE PTR [rax],al
  4356f7:	add    bl,cl
  4356f9:	rex.XB add BYTE PTR ds:[r8],al
  4356fd:	add    BYTE PTR [rax],al
  4356ff:	add    dl,ah
  435701:	rex.XB add BYTE PTR ds:[r8],al
  435705:	add    BYTE PTR [rax],al
  435707:	add    al,ch
  435709:	rex.XB add BYTE PTR ds:[r8],al
  43570d:	add    BYTE PTR [rax],al
  43570f:	add    bl,bh
  435711:	rex.XB add BYTE PTR ds:[r8],al
  435715:	add    BYTE PTR [rax],al
  435717:	add    BYTE PTR [rdx],dl
  435719:	(bad)  
  43571a:	rex.XB add BYTE PTR [r8],al
  43571d:	add    BYTE PTR [rax],al
  43571f:	add    BYTE PTR [rax],bl
  435721:	(bad)  
  435722:	rex.XB add BYTE PTR [r8],al
  435725:	add    BYTE PTR [rax],al
  435727:	add    BYTE PTR [rbx],ch
  435729:	(bad)  
  43572a:	rex.XB add BYTE PTR [r8],al
  43572d:	add    BYTE PTR [rax],al
  43572f:	add    BYTE PTR [rdx+0x3f],al
  435732:	rex.XB add BYTE PTR [r8],al
  435735:	add    BYTE PTR [rax],al
  435737:	add    BYTE PTR [rax+0x3f],cl
  43573a:	rex.XB add BYTE PTR [r8],al
  43573d:	add    BYTE PTR [rax],al
  43573f:	add    BYTE PTR [rbx+0x3f],bl
  435742:	rex.XB add BYTE PTR [r8],al
  435745:	add    BYTE PTR [rax],al
  435747:	add    BYTE PTR [rdx+0x3f],dh
  43574a:	rex.XB add BYTE PTR [r8],al
  43574d:	add    BYTE PTR [rax],al
  43574f:	add    BYTE PTR [rax+0x3f],bh
  435752:	rex.XB add BYTE PTR [r8],al
  435755:	add    BYTE PTR [rax],al
  435757:	add    BYTE PTR [rbx+0x433f],cl
  43575d:	add    BYTE PTR [rax],al
  43575f:	add    BYTE PTR [rdx+0x433f],ah
  435765:	add    BYTE PTR [rax],al
  435767:	add    BYTE PTR [rax+0x433f],ch
  43576d:	add    BYTE PTR [rax],al
  43576f:	add    BYTE PTR [rbx+0x433f],bh
  435775:	add    BYTE PTR [rax],al
  435777:	add    dl,dl
  435779:	(bad)  
  43577a:	rex.XB add BYTE PTR [r8],al
  43577d:	add    BYTE PTR [rax],al
  43577f:	add    al,bl
  435781:	(bad)  
  435782:	rex.XB add BYTE PTR [r8],al
  435785:	add    BYTE PTR [rax],al
  435787:	add    bl,ch
  435789:	(bad)  
  43578a:	rex.XB add BYTE PTR [r8],al
  43578d:	add    BYTE PTR [rax],al
  43578f:	add    BYTE PTR [rdx],al
  435791:	rex
  435792:	rex.XB add BYTE PTR [r8],al
  435795:	add    BYTE PTR [rax],al
  435797:	add    BYTE PTR [rax],cl
  435799:	rex
  43579a:	rex.XB add BYTE PTR [r8],al
  43579d:	add    BYTE PTR [rax],al
  43579f:	add    BYTE PTR [rbx],bl
  4357a1:	rex
  4357a2:	rex.XB add BYTE PTR [r8],al
  4357a5:	add    BYTE PTR [rax],al
  4357a7:	add    BYTE PTR [rdx],dh
  4357a9:	rex
  4357aa:	rex.XB add BYTE PTR [r8],al
  4357ad:	add    BYTE PTR [rax],al
  4357af:	add    BYTE PTR [rax],bh
  4357b1:	rex
  4357b2:	rex.XB add BYTE PTR [r8],al
  4357b5:	add    BYTE PTR [rax],al
  4357b7:	add    BYTE PTR [rbx+0x40],cl
  4357ba:	rex.XB add BYTE PTR [r8],al
  4357bd:	add    BYTE PTR [rax],al
  4357bf:	add    BYTE PTR [rdx+0x40],ah
  4357c2:	rex.XB add BYTE PTR [r8],al
  4357c5:	add    BYTE PTR [rax],al
  4357c7:	add    BYTE PTR [rax+0x40],ch
  4357ca:	rex.XB add BYTE PTR [r8],al
  4357cd:	add    BYTE PTR [rax],al
  4357cf:	add    BYTE PTR [rbx+0x40],bh
  4357d2:	rex.XB add BYTE PTR [r8],al
  4357d5:	add    BYTE PTR [rax],al
  4357d7:	add    BYTE PTR [rdx+0x4340],dl
  4357dd:	add    BYTE PTR [rax],al
  4357df:	add    BYTE PTR [rax+0x4340],bl
  4357e5:	add    BYTE PTR [rax],al
  4357e7:	add    BYTE PTR [rbx+0x4340],ch
  4357ed:	add    BYTE PTR [rax],al
  4357ef:	add    dl,al
  4357f1:	rex
  4357f2:	rex.XB add BYTE PTR [r8],al
  4357f5:	add    BYTE PTR [rax],al
  4357f7:	add    al,cl
  4357f9:	rex
  4357fa:	rex.XB add BYTE PTR [r8],al
  4357fd:	add    BYTE PTR [rax],al
  4357ff:	add    bl,bl
  435801:	rex
  435802:	rex.XB add BYTE PTR [r8],al
  435805:	add    BYTE PTR [rax],al
  435807:	add    dl,dh
  435809:	rex
  43580a:	rex.XB add BYTE PTR [r8],al
  43580d:	add    BYTE PTR [rax],al
  43580f:	add    al,bh
  435811:	rex
  435812:	rex.XB add BYTE PTR [r8],al
  435815:	add    BYTE PTR [rax],al
  435817:	add    BYTE PTR [rbx],cl
  435819:	rex.B
  43581a:	rex.XB add BYTE PTR [r8],al
  43581d:	add    BYTE PTR [rax],al
  43581f:	add    BYTE PTR [rdx],ah
  435821:	rex.B
  435822:	rex.XB add BYTE PTR [r8],al
  435825:	add    BYTE PTR [rax],al
  435827:	add    BYTE PTR [rax],ch
  435829:	rex.B
  43582a:	rex.XB add BYTE PTR [r8],al
  43582d:	add    BYTE PTR [rax],al
  43582f:	add    BYTE PTR [rbx],bh
  435831:	rex.B
  435832:	rex.XB add BYTE PTR [r8],al
  435835:	add    BYTE PTR [rax],al
  435837:	add    BYTE PTR [rdx+0x41],dl
  43583a:	rex.XB add BYTE PTR [r8],al
  43583d:	add    BYTE PTR [rax],al
  43583f:	add    BYTE PTR [rax+0x41],bl
  435842:	rex.XB add BYTE PTR [r8],al
  435845:	add    BYTE PTR [rax],al
  435847:	add    BYTE PTR [rbx+0x41],ch
  43584a:	rex.XB add BYTE PTR [r8],al
  43584d:	add    BYTE PTR [rax],al
  43584f:	add    BYTE PTR [rdx+0x4341],al
  435855:	add    BYTE PTR [rax],al
  435857:	add    BYTE PTR [rax+0x4341],cl
  43585d:	add    BYTE PTR [rax],al
  43585f:	add    BYTE PTR [rbx+0x4341],bl
  435865:	add    BYTE PTR [rax],al
  435867:	add    BYTE PTR [rdx+0x4341],dh
  43586d:	add    BYTE PTR [rax],al
  43586f:	add    BYTE PTR [rax+0x4341],bh
  435875:	add    BYTE PTR [rax],al
  435877:	add    bl,cl
  435879:	rex.B
  43587a:	rex.XB add BYTE PTR [r8],al
  43587d:	add    BYTE PTR [rax],al
  43587f:	add    dl,ah
  435881:	rex.B
  435882:	rex.XB add BYTE PTR [r8],al
  435885:	add    BYTE PTR [rax],al
  435887:	add    al,ch
  435889:	rex.B
  43588a:	rex.XB add BYTE PTR [r8],al
  43588d:	add    BYTE PTR [rax],al
  43588f:	add    bl,bh
  435891:	rex.B
  435892:	rex.XB add BYTE PTR [r8],al
  435895:	add    BYTE PTR [rax],al
  435897:	add    BYTE PTR [rdx],dl
  435899:	rex.X
  43589a:	rex.XB add BYTE PTR [r8],al
  43589d:	add    BYTE PTR [rax],al
  43589f:	add    BYTE PTR [rax],bl
  4358a1:	rex.X
  4358a2:	rex.XB add BYTE PTR [r8],al
  4358a5:	add    BYTE PTR [rax],al
  4358a7:	add    BYTE PTR [rbx],ch
  4358a9:	rex.X
  4358aa:	rex.XB add BYTE PTR [r8],al
  4358ad:	add    BYTE PTR [rax],al
  4358af:	add    BYTE PTR [rdx+0x42],al
  4358b2:	rex.XB add BYTE PTR [r8],al
  4358b5:	add    BYTE PTR [rax],al
  4358b7:	add    BYTE PTR [rax+0x42],cl
  4358ba:	rex.XB add BYTE PTR [r8],al
  4358bd:	add    BYTE PTR [rax],al
  4358bf:	add    BYTE PTR [rbx+0x42],bl
  4358c2:	rex.XB add BYTE PTR [r8],al
  4358c5:	add    BYTE PTR [rax],al
  4358c7:	add    BYTE PTR [rdx+0x42],dh
  4358ca:	rex.XB add BYTE PTR [r8],al
  4358cd:	add    BYTE PTR [rax],al
  4358cf:	add    BYTE PTR [rax+0x42],bh
  4358d2:	rex.XB add BYTE PTR [r8],al
  4358d5:	add    BYTE PTR [rax],al
  4358d7:	add    BYTE PTR [rbx+0x4342],cl
  4358dd:	add    BYTE PTR [rax],al
  4358df:	add    BYTE PTR [rdx+0x4342],ah
  4358e5:	add    BYTE PTR [rax],al
  4358e7:	add    BYTE PTR [rax+0x4342],ch
  4358ed:	add    BYTE PTR [rax],al
  4358ef:	add    BYTE PTR [rbx+0x4342],bh
  4358f5:	add    BYTE PTR [rax],al
  4358f7:	add    dl,dl
  4358f9:	rex.X
  4358fa:	rex.XB add BYTE PTR [r8],al
  4358fd:	add    BYTE PTR [rax],al
  4358ff:	add    al,bl
  435901:	rex.X
  435902:	rex.XB add BYTE PTR [r8],al
  435905:	add    BYTE PTR [rax],al
  435907:	add    bl,ch
  435909:	rex.X
  43590a:	rex.XB add BYTE PTR [r8],al
  43590d:	add    BYTE PTR [rax],al
  43590f:	add    BYTE PTR [rdx],al
  435911:	rex.XB
  435912:	rex.XB add BYTE PTR [r8],al
  435915:	add    BYTE PTR [rax],al
  435917:	add    BYTE PTR [rax],cl
  435919:	rex.XB
  43591a:	rex.XB add BYTE PTR [r8],al
  43591d:	add    BYTE PTR [rax],al
  43591f:	add    BYTE PTR [rbx],bl
  435921:	rex.XB
  435922:	rex.XB add BYTE PTR [r8],al
  435925:	add    BYTE PTR [rax],al
  435927:	add    BYTE PTR [rip+0x4343],ch        # 0x439c70
  43592d:	add    BYTE PTR [rax],al
  43592f:	add    BYTE PTR [rdi],dh
  435931:	rex.XB
  435932:	rex.XB add BYTE PTR [r8],al
  435935:	add    BYTE PTR [rax],al
  435937:	add    BYTE PTR [rbx+0x43],cl
  43593a:	rex.XB add BYTE PTR [r8],al
  43593d:	add    BYTE PTR [rax],al
  43593f:	add    BYTE PTR [rdx+0x43],ah
  435942:	rex.XB add BYTE PTR [r8],al
  435945:	add    BYTE PTR [rax],al
  435947:	add    BYTE PTR [rax+0x43],ch
  43594a:	rex.XB add BYTE PTR [r8],al
  43594d:	add    BYTE PTR [rax],al
  43594f:	add    BYTE PTR [rbx+0x43],bh
  435952:	rex.XB add BYTE PTR [r8],al
  435955:	add    BYTE PTR [rax],al
  435957:	add    BYTE PTR [rdx+0x4343],dl
  43595d:	add    BYTE PTR [rax],al
  43595f:	add    BYTE PTR [rax+0x4343],bl
  435965:	add    BYTE PTR [rax],al
  435967:	add    BYTE PTR [rbx+0x4343],ch
  43596d:	add    BYTE PTR [rax],al
  43596f:	add    dl,al
  435971:	rex.XB
  435972:	rex.XB add BYTE PTR [r8],al
  435975:	add    BYTE PTR [rax],al
  435977:	add    al,cl
  435979:	rex.XB
  43597a:	rex.XB add BYTE PTR [r8],al
  43597d:	add    BYTE PTR [rax],al
  43597f:	add    bl,bl
  435981:	rex.XB
  435982:	rex.XB add BYTE PTR [r8],al
  435985:	add    BYTE PTR [rax],al
  435987:	add    dl,dh
  435989:	rex.XB
  43598a:	rex.XB add BYTE PTR [r8],al
  43598d:	add    BYTE PTR [rax],al
  43598f:	add    al,bh
  435991:	rex.XB
  435992:	rex.XB add BYTE PTR [r8],al
  435995:	add    BYTE PTR [rax],al
  435997:	add    BYTE PTR [rbx],cl
  435999:	rex.R
  43599a:	rex.XB add BYTE PTR [r8],al
  43599d:	add    BYTE PTR [rax],al
  43599f:	add    BYTE PTR [rdx],ah
  4359a1:	rex.R
  4359a2:	rex.XB add BYTE PTR [r8],al
  4359a5:	add    BYTE PTR [rax],al
  4359a7:	add    BYTE PTR [rax],ch
  4359a9:	rex.R
  4359aa:	rex.XB add BYTE PTR [r8],al
  4359ad:	add    BYTE PTR [rax],al
  4359af:	add    BYTE PTR [rbx],bh
  4359b1:	rex.R
  4359b2:	rex.XB add BYTE PTR [r8],al
  4359b5:	add    BYTE PTR [rax],al
  4359b7:	add    BYTE PTR [rdx+0x44],dl
  4359ba:	rex.XB add BYTE PTR [r8],al
  4359bd:	add    BYTE PTR [rax],al
  4359bf:	add    BYTE PTR [rax+0x44],bl
  4359c2:	rex.XB add BYTE PTR [r8],al
  4359c5:	add    BYTE PTR [rax],al
  4359c7:	add    BYTE PTR [rbx+0x44],ch
  4359ca:	rex.XB add BYTE PTR [r8],al
  4359cd:	add    BYTE PTR [rax],al
  4359cf:	add    BYTE PTR [rdx+0x4344],al
  4359d5:	add    BYTE PTR [rax],al
  4359d7:	add    BYTE PTR [rax+0x4344],cl
  4359dd:	add    BYTE PTR [rax],al
  4359df:	add    BYTE PTR [rbx+0x4344],bl
  4359e5:	add    BYTE PTR [rax],al
  4359e7:	add    BYTE PTR [rdx+0x4344],dh
  4359ed:	add    BYTE PTR [rax],al
  4359ef:	add    BYTE PTR [rax+0x4344],bh
  4359f5:	add    BYTE PTR [rax],al
  4359f7:	add    bl,cl
  4359f9:	rex.R
  4359fa:	rex.XB add BYTE PTR [r8],al
  4359fd:	add    BYTE PTR [rax],al
  4359ff:	add    dl,ah
  435a01:	rex.R
  435a02:	rex.XB add BYTE PTR [r8],al
  435a05:	add    BYTE PTR [rax],al
  435a07:	add    al,ch
  435a09:	rex.R
  435a0a:	rex.XB add BYTE PTR [r8],al
  435a0d:	add    BYTE PTR [rax],al
  435a0f:	add    bl,bh
  435a11:	rex.R
  435a12:	rex.XB add BYTE PTR [r8],al
  435a15:	add    BYTE PTR [rax],al
  435a17:	add    BYTE PTR [rdx],dl
  435a19:	rex.RB
  435a1a:	rex.XB add BYTE PTR [r8],al
  435a1d:	add    BYTE PTR [rax],al
  435a1f:	add    BYTE PTR [rax],bl
  435a21:	rex.RB
  435a22:	rex.XB add BYTE PTR [r8],al
  435a25:	add    BYTE PTR [rax],al
  435a27:	add    BYTE PTR [rbx],ch
  435a29:	rex.RB
  435a2a:	rex.XB add BYTE PTR [r8],al
  435a2d:	add    BYTE PTR [rax],al
  435a2f:	add    BYTE PTR [rdx+0x45],al
  435a32:	rex.XB add BYTE PTR [r8],al
  435a35:	add    BYTE PTR [rax],al
  435a37:	add    BYTE PTR [rax+0x45],cl
  435a3a:	rex.XB add BYTE PTR [r8],al
  435a3d:	add    BYTE PTR [rax],al
  435a3f:	add    BYTE PTR [rbx+0x45],bl
  435a42:	rex.XB add BYTE PTR [r8],al
  435a45:	add    BYTE PTR [rax],al
  435a47:	add    BYTE PTR [rdx+0x45],dh
  435a4a:	rex.XB add BYTE PTR [r8],al
  435a4d:	add    BYTE PTR [rax],al
  435a4f:	add    BYTE PTR [rax+0x45],bh
  435a52:	rex.XB add BYTE PTR [r8],al
  435a55:	add    BYTE PTR [rax],al
  435a57:	add    BYTE PTR [rbx+0x4345],cl
  435a5d:	add    BYTE PTR [rax],al
  435a5f:	add    BYTE PTR [rdx+0x4345],ah
  435a65:	add    BYTE PTR [rax],al
  435a67:	add    BYTE PTR [rax+0x4345],ch
  435a6d:	add    BYTE PTR [rax],al
  435a6f:	add    BYTE PTR [rbx+0x4345],bh
  435a75:	add    BYTE PTR [rax],al
  435a77:	add    dl,dl
  435a79:	rex.RB
  435a7a:	rex.XB add BYTE PTR [r8],al
  435a7d:	add    BYTE PTR [rax],al
  435a7f:	add    al,bl
  435a81:	rex.RB
  435a82:	rex.XB add BYTE PTR [r8],al
  435a85:	add    BYTE PTR [rax],al
  435a87:	add    bl,ch
  435a89:	rex.RB
  435a8a:	rex.XB add BYTE PTR [r8],al
  435a8d:	add    BYTE PTR [rax],al
  435a8f:	add    BYTE PTR [rdx],al
  435a91:	rex.RX
  435a92:	rex.XB add BYTE PTR [r8],al
  435a95:	add    BYTE PTR [rax],al
  435a97:	add    BYTE PTR [rax],cl
  435a99:	rex.RX
  435a9a:	rex.XB add BYTE PTR [r8],al
  435a9d:	add    BYTE PTR [rax],al
  435a9f:	add    BYTE PTR [rbx],bl
  435aa1:	rex.RX
  435aa2:	rex.XB add BYTE PTR [r8],al
  435aa5:	add    BYTE PTR [rax],al
  435aa7:	add    BYTE PTR [rdx],dh
  435aa9:	rex.RX
  435aaa:	rex.XB add BYTE PTR [r8],al
  435aad:	add    BYTE PTR [rax],al
  435aaf:	add    BYTE PTR [rax],bh
  435ab1:	rex.RX
  435ab2:	rex.XB add BYTE PTR [r8],al
  435ab5:	add    BYTE PTR [rax],al
  435ab7:	add    BYTE PTR [rbx+0x46],cl
  435aba:	rex.XB add BYTE PTR [r8],al
  435abd:	add    BYTE PTR [rax],al
  435abf:	add    BYTE PTR [rdx+0x46],ah
  435ac2:	rex.XB add BYTE PTR [r8],al
  435ac5:	add    BYTE PTR [rax],al
  435ac7:	add    BYTE PTR [rax+0x46],ch
  435aca:	rex.XB add BYTE PTR [r8],al
  435acd:	add    BYTE PTR [rax],al
  435acf:	add    BYTE PTR [rbx+0x46],bh
  435ad2:	rex.XB add BYTE PTR [r8],al
  435ad5:	add    BYTE PTR [rax],al
  435ad7:	add    BYTE PTR [rdx+0x4346],dl
  435add:	add    BYTE PTR [rax],al
  435adf:	add    BYTE PTR [rax+0x4346],bl
  435ae5:	add    BYTE PTR [rax],al
  435ae7:	add    BYTE PTR [rbx+0x4346],ch
  435aed:	add    BYTE PTR [rax],al
  435aef:	add    dl,al
  435af1:	rex.RX
  435af2:	rex.XB add BYTE PTR [r8],al
  435af5:	add    BYTE PTR [rax],al
  435af7:	add    al,cl
  435af9:	rex.RX
  435afa:	rex.XB add BYTE PTR [r8],al
  435afd:	add    BYTE PTR [rax],al
  435aff:	add    bl,bl
  435b01:	rex.RX
  435b02:	rex.XB add BYTE PTR [r8],al
  435b05:	add    BYTE PTR [rax],al
  435b07:	add    dl,dh
  435b09:	rex.RX
  435b0a:	rex.XB add BYTE PTR [r8],al
  435b0d:	add    BYTE PTR [rax],al
  435b0f:	add    al,bh
  435b11:	rex.RX
  435b12:	rex.XB add BYTE PTR [r8],al
  435b15:	add    BYTE PTR [rax],al
  435b17:	add    BYTE PTR [rbx],cl
  435b19:	rex.RXB
  435b1a:	rex.XB add BYTE PTR [r8],al
  435b1d:	add    BYTE PTR [rax],al
  435b1f:	add    BYTE PTR [rdx],ah
  435b21:	rex.RXB
  435b22:	rex.XB add BYTE PTR [r8],al
  435b25:	add    BYTE PTR [rax],al
  435b27:	add    BYTE PTR [rax],ch
  435b29:	rex.RXB
  435b2a:	rex.XB add BYTE PTR [r8],al
  435b2d:	add    BYTE PTR [rax],al
  435b2f:	add    BYTE PTR [rbx],bh
  435b31:	rex.RXB
  435b32:	rex.XB add BYTE PTR [r8],al
  435b35:	add    BYTE PTR [rax],al
  435b37:	add    BYTE PTR [rdx+0x47],dl
  435b3a:	rex.XB add BYTE PTR [r8],al
  435b3d:	add    BYTE PTR [rax],al
  435b3f:	add    BYTE PTR [rax+0x47],bl
  435b42:	rex.XB add BYTE PTR [r8],al
  435b45:	add    BYTE PTR [rax],al
  435b47:	add    BYTE PTR [rbx+0x47],ch
  435b4a:	rex.XB add BYTE PTR [r8],al
  435b4d:	add    BYTE PTR [rax],al
  435b4f:	add    BYTE PTR [rdx+0x4347],al
  435b55:	add    BYTE PTR [rax],al
  435b57:	add    BYTE PTR [rax+0x4347],cl
  435b5d:	add    BYTE PTR [rax],al
  435b5f:	add    BYTE PTR [rbx+0x4347],bl
  435b65:	add    BYTE PTR [rax],al
  435b67:	add    BYTE PTR [rdx+0x4347],dh
  435b6d:	add    BYTE PTR [rax],al
  435b6f:	add    BYTE PTR [rax+0x4347],bh
  435b75:	add    BYTE PTR [rax],al
  435b77:	add    bl,cl
  435b79:	rex.RXB
  435b7a:	rex.XB add BYTE PTR [r8],al
  435b7d:	add    BYTE PTR [rax],al
  435b7f:	add    dl,ah
  435b81:	rex.RXB
  435b82:	rex.XB add BYTE PTR [r8],al
  435b85:	add    BYTE PTR [rax],al
  435b87:	add    al,ch
  435b89:	rex.RXB
  435b8a:	rex.XB add BYTE PTR [r8],al
  435b8d:	add    BYTE PTR [rax],al
  435b8f:	add    bl,bh
  435b91:	rex.RXB
  435b92:	rex.XB add BYTE PTR [r8],al
  435b95:	add    BYTE PTR [rax],al
  435b97:	add    BYTE PTR [rdx],dl
  435b99:	rex.W
  435b9a:	rex.XB add BYTE PTR [r8],al
  435b9d:	add    BYTE PTR [rax],al
  435b9f:	add    BYTE PTR [rax],bl
  435ba1:	rex.W
  435ba2:	rex.XB add BYTE PTR [r8],al
  435ba5:	add    BYTE PTR [rax],al
  435ba7:	add    BYTE PTR [rbx],ch
  435ba9:	rex.W
  435baa:	rex.XB add BYTE PTR [r8],al
  435bad:	add    BYTE PTR [rax],al
  435baf:	add    BYTE PTR [rdx+0x48],al
  435bb2:	rex.XB add BYTE PTR [r8],al
  435bb5:	add    BYTE PTR [rax],al
  435bb7:	add    BYTE PTR [rax+0x48],cl
  435bba:	rex.XB add BYTE PTR [r8],al
  435bbd:	add    BYTE PTR [rax],al
  435bbf:	add    BYTE PTR [rbx+0x48],bl
  435bc2:	rex.XB add BYTE PTR [r8],al
  435bc5:	add    BYTE PTR [rax],al
  435bc7:	add    BYTE PTR [rdx+0x48],dh
  435bca:	rex.XB add BYTE PTR [r8],al
  435bcd:	add    BYTE PTR [rax],al
  435bcf:	add    BYTE PTR [rax+0x48],bh
  435bd2:	rex.XB add BYTE PTR [r8],al
  435bd5:	add    BYTE PTR [rax],al
  435bd7:	add    BYTE PTR [rbx+0x4348],cl
  435bdd:	add    BYTE PTR [rax],al
  435bdf:	add    BYTE PTR [rdx+0x4348],ah
  435be5:	add    BYTE PTR [rax],al
  435be7:	add    BYTE PTR [rax+0x4348],ch
  435bed:	add    BYTE PTR [rax],al
  435bef:	add    BYTE PTR [rbx+0x4348],bh
  435bf5:	add    BYTE PTR [rax],al
  435bf7:	add    dl,dl
  435bf9:	rex.W
  435bfa:	rex.XB add BYTE PTR [r8],al
  435bfd:	add    BYTE PTR [rax],al
  435bff:	add    al,bl
  435c01:	rex.W
  435c02:	rex.XB add BYTE PTR [r8],al
  435c05:	add    BYTE PTR [rax],al
  435c07:	add    bl,ch
  435c09:	rex.W
  435c0a:	rex.XB add BYTE PTR [r8],al
  435c0d:	add    BYTE PTR [rax],al
  435c0f:	add    BYTE PTR [rdx],al
  435c11:	rex.WB
  435c12:	rex.XB add BYTE PTR [r8],al
  435c15:	add    BYTE PTR [rax],al
  435c17:	add    BYTE PTR [rax],cl
  435c19:	rex.WB
  435c1a:	rex.XB add BYTE PTR [r8],al
  435c1d:	add    BYTE PTR [rax],al
  435c1f:	add    BYTE PTR [rbx],bl
  435c21:	rex.WB
  435c22:	rex.XB add BYTE PTR [r8],al
  435c25:	add    BYTE PTR [rax],al
  435c27:	add    BYTE PTR [rdx],dh
  435c29:	rex.WB
  435c2a:	rex.XB add BYTE PTR [r8],al
  435c2d:	add    BYTE PTR [rax],al
  435c2f:	add    BYTE PTR [rax],bh
  435c31:	rex.WB
  435c32:	rex.XB add BYTE PTR [r8],al
  435c35:	add    BYTE PTR [rax],al
  435c37:	add    BYTE PTR [rbx+0x49],cl
  435c3a:	rex.XB add BYTE PTR [r8],al
  435c3d:	add    BYTE PTR [rax],al
  435c3f:	add    BYTE PTR [rdx+0x49],ah
  435c42:	rex.XB add BYTE PTR [r8],al
  435c45:	add    BYTE PTR [rax],al
  435c47:	add    BYTE PTR [rax+0x49],ch
  435c4a:	rex.XB add BYTE PTR [r8],al
  435c4d:	add    BYTE PTR [rax],al
  435c4f:	add    BYTE PTR [rbx+0x49],bh
  435c52:	rex.XB add BYTE PTR [r8],al
  435c55:	add    BYTE PTR [rax],al
  435c57:	add    BYTE PTR [rdx+0x4349],dl
  435c5d:	add    BYTE PTR [rax],al
  435c5f:	add    BYTE PTR [rax+0x4349],bl
  435c65:	add    BYTE PTR [rax],al
  435c67:	add    BYTE PTR [rbx+0x4349],ch
  435c6d:	add    BYTE PTR [rax],al
  435c6f:	add    dl,al
  435c71:	rex.WB
  435c72:	rex.XB add BYTE PTR [r8],al
  435c75:	add    BYTE PTR [rax],al
  435c77:	add    al,cl
  435c79:	rex.WB
  435c7a:	rex.XB add BYTE PTR [r8],al
  435c7d:	add    BYTE PTR [rax],al
  435c7f:	add    bl,bl
  435c81:	rex.WB
  435c82:	rex.XB add BYTE PTR [r8],al
  435c85:	add    BYTE PTR [rax],al
  435c87:	add    dl,dh
  435c89:	rex.WB
  435c8a:	rex.XB add BYTE PTR [r8],al
  435c8d:	add    BYTE PTR [rax],al
  435c8f:	add    al,bh
  435c91:	rex.WB
  435c92:	rex.XB add BYTE PTR [r8],al
  435c95:	add    BYTE PTR [rax],al
  435c97:	add    BYTE PTR [rbx],cl
  435c99:	rex.WX
  435c9a:	rex.XB add BYTE PTR [r8],al
  435c9d:	add    BYTE PTR [rax],al
  435c9f:	add    BYTE PTR [rdx],ah
  435ca1:	rex.WX
  435ca2:	rex.XB add BYTE PTR [r8],al
  435ca5:	add    BYTE PTR [rax],al
  435ca7:	add    BYTE PTR [rax],ch
  435ca9:	rex.WX
  435caa:	rex.XB add BYTE PTR [r8],al
  435cad:	add    BYTE PTR [rax],al
  435caf:	add    BYTE PTR [rbx],bh
  435cb1:	rex.WX
  435cb2:	rex.XB add BYTE PTR [r8],al
  435cb5:	add    BYTE PTR [rax],al
  435cb7:	add    BYTE PTR [rbx+0x4a],dl
  435cba:	rex.XB add BYTE PTR [r8],al
  435cbd:	add    BYTE PTR [rax],al
  435cbf:	add    BYTE PTR [rdx+0x4a],bl
  435cc2:	rex.XB add BYTE PTR [r8],al
  435cc5:	add    BYTE PTR [rax],al
  435cc7:	add    BYTE PTR [rsi+0x4a],ch
  435cca:	rex.XB add BYTE PTR [r8],al
  435ccd:	add    BYTE PTR [rax],al
  435ccf:	add    BYTE PTR [rsi+0x434a],al
  435cd5:	add    BYTE PTR [rax],al
  435cd7:	add    BYTE PTR [rbp+0x434a],cl
  435cdd:	add    BYTE PTR [rax],al
  435cdf:	add    BYTE PTR [rcx+0x434a],ah
  435ce5:	add    BYTE PTR [rax],al
  435ce7:	add    BYTE PTR [rcx+0x434a],bh
  435ced:	add    BYTE PTR [rax],al
  435cef:	add    al,al
  435cf1:	rex.WX
  435cf2:	rex.XB add BYTE PTR [r8],al
  435cf5:	add    BYTE PTR [rax],al
  435cf7:	add    ah,dl
  435cf9:	rex.WX
  435cfa:	rex.XB add BYTE PTR [r8],al
  435cfd:	add    BYTE PTR [rax],al
  435cff:	add    ah,ch
  435d01:	rex.WX
  435d02:	rex.XB add BYTE PTR [r8],al
  435d05:	add    BYTE PTR [rax],al
  435d07:	add    bl,dh
  435d09:	rex.WX
  435d0a:	rex.XB add BYTE PTR [r8],al
  435d0d:	add    BYTE PTR [rax],al
  435d0f:	add    BYTE PTR [rdi],al
  435d11:	rex.WXB
  435d12:	rex.XB add BYTE PTR [r8],al
  435d15:	add    BYTE PTR [rax],al
  435d17:	add    BYTE PTR [rdi],bl
  435d19:	rex.WXB
  435d1a:	rex.XB add BYTE PTR [r8],al
  435d1d:	add    BYTE PTR [rax],al
  435d1f:	add    BYTE PTR [rsi],ah
  435d21:	rex.WXB
  435d22:	rex.XB add BYTE PTR [r8],al
  435d25:	add    BYTE PTR [rax],al
  435d27:	add    BYTE PTR [rdx],bh
  435d29:	rex.WXB
  435d2a:	rex.XB add BYTE PTR [r8],al
  435d2d:	add    BYTE PTR [rax],al
  435d2f:	add    BYTE PTR [rdx+0x4b],dl
  435d32:	rex.XB add BYTE PTR [r8],al
  435d35:	add    BYTE PTR [rax],al
  435d37:	add    BYTE PTR [rcx+0x4b],bl
  435d3a:	rex.XB add BYTE PTR [r8],al
  435d3d:	add    BYTE PTR [rax],al
  435d3f:	add    BYTE PTR [rbp+0x4b],ch
  435d42:	rex.XB add BYTE PTR [r8],al
  435d45:	add    BYTE PTR [rax],al
  435d47:	add    BYTE PTR [rbp+0x434b],al
  435d4d:	add    BYTE PTR [rax],al
  435d4f:	add    BYTE PTR [rbx+rcx*2+0x43],cl
  435d56:	add    BYTE PTR [rax],al
  435d58:	movabs al,ds:0xb80000000000434b
  435d61:	rex.WXB
  435d62:	rex.XB add BYTE PTR [r8],al
  435d65:	add    BYTE PTR [rax],al
  435d67:	add    BYTE PTR [rdi+0x434b],bh
  435d6d:	add    BYTE PTR [rax],al
  435d6f:	add    bl,dl
  435d71:	rex.WXB
  435d72:	rex.XB add BYTE PTR [r8],al
  435d75:	add    BYTE PTR [rax],al
  435d77:	add    bl,ch
  435d79:	rex.WXB
  435d7a:	rex.XB add BYTE PTR [r8],al
  435d7d:	add    BYTE PTR [rax],al
  435d7f:	add    dl,dh
  435d81:	rex.WXB
  435d82:	rex.XB add BYTE PTR [r8],al
  435d85:	add    BYTE PTR [rax],al
  435d87:	add    BYTE PTR [rsi],al
  435d89:	rex.WR
  435d8a:	rex.XB add BYTE PTR [r8],al
  435d8d:	add    BYTE PTR [rax],al
  435d8f:	add    BYTE PTR [rsi],bl
  435d91:	rex.WR
  435d92:	rex.XB add BYTE PTR [r8],al
  435d95:	add    BYTE PTR [rax],al
  435d97:	add    BYTE PTR [rip+0x434c],ah        # 0x43a0e9
  435d9d:	add    BYTE PTR [rax],al
  435d9f:	add    BYTE PTR [rcx],bh
  435da1:	rex.WR
  435da2:	rex.XB add BYTE PTR [r8],al
  435da5:	add    BYTE PTR [rax],al
  435da7:	add    BYTE PTR [rcx+0x4c],dl
  435daa:	rex.XB add BYTE PTR [r8],al
  435dad:	add    BYTE PTR [rax],al
  435daf:	add    BYTE PTR [rax+0x4c],bl
  435db2:	rex.XB add BYTE PTR [r8],al
  435db5:	add    BYTE PTR [rax],al
  435db7:	add    BYTE PTR [rsp+rcx*2+0x43],ch
  435dbb:	add    BYTE PTR [rax],al
  435dbd:	add    BYTE PTR [rax],al
  435dbf:	add    BYTE PTR [rsp+rcx*2+0x43],al
  435dc6:	add    BYTE PTR [rax],al
  435dc8:	mov    ecx,DWORD PTR [rbx+rax*2+0x0]
  435dcc:	add    BYTE PTR [rax],al
  435dce:	add    BYTE PTR [rax],al
  435dd0:	lahf   
  435dd1:	rex.WR
  435dd2:	rex.XB add BYTE PTR [r8],al
  435dd5:	add    BYTE PTR [rax],al
  435dd7:	add    BYTE PTR [rdi+0x434c],dh
  435ddd:	add    BYTE PTR [rax],al
  435ddf:	add    BYTE PTR [rsi+0x434c],bh
  435de5:	add    BYTE PTR [rax],al
  435de7:	add    dl,dl
  435de9:	rex.WR
  435dea:	rex.XB add BYTE PTR [r8],al
  435ded:	add    BYTE PTR [rax],al
  435def:	add    dl,ch
  435df1:	rex.WR
  435df2:	rex.XB add BYTE PTR [r8],al
  435df5:	add    BYTE PTR [rax],al
  435df7:	add    cl,dh
  435df9:	rex.WR
  435dfa:	rex.XB add BYTE PTR [r8],al
  435dfd:	add    BYTE PTR [rax],al
  435dff:	add    BYTE PTR [rip+0x434d],al        # 0x43a152
  435e05:	add    BYTE PTR [rax],al
  435e07:	add    BYTE PTR [rip+0x434d],bl        # 0x43a15a
  435e0d:	add    BYTE PTR [rax],al
  435e0f:	add    BYTE PTR [rcx*2+0x43],ah
  435e16:	add    BYTE PTR [rax],al
  435e18:	cmp    BYTE PTR [rbp+0x43],cl
  435e1b:	add    BYTE PTR [rax],al
  435e1d:	add    BYTE PTR [rax],al
  435e1f:	add    BYTE PTR [rax+0x4d],dl
  435e22:	rex.XB add BYTE PTR [r8],al
  435e25:	add    BYTE PTR [rax],al
  435e27:	add    BYTE PTR [rdi+0x4d],dl
  435e2a:	rex.XB add BYTE PTR [r8],al
  435e2d:	add    BYTE PTR [rax],al
  435e2f:	add    BYTE PTR [rbx+0x4d],ch
  435e32:	rex.XB add BYTE PTR [r8],al
  435e35:	add    BYTE PTR [rax],al
  435e37:	add    BYTE PTR [rbx+0x434d],al
  435e3d:	add    BYTE PTR [rax],al
  435e3f:	add    BYTE PTR [rdx+0x434d],cl
  435e45:	add    BYTE PTR [rax],al
  435e47:	add    BYTE PTR [rsi+0x434d],bl
  435e4d:	add    BYTE PTR [rax],al
  435e4f:	add    BYTE PTR [rsi+0x434d],dh
  435e55:	add    BYTE PTR [rax],al
  435e57:	add    BYTE PTR [rbp+0x434d],bh
  435e5d:	add    BYTE PTR [rax],al
  435e5f:	add    cl,dl
  435e61:	rex.WRB
  435e62:	rex.XB add BYTE PTR [r8],al
  435e65:	add    BYTE PTR [rax],al
  435e67:	add    cl,ch
  435e69:	rex.WRB
  435e6a:	rex.XB add BYTE PTR [r8],al
  435e6d:	add    BYTE PTR [rax],al
  435e6f:	add    al,dh
  435e71:	rex.WRB
  435e72:	rex.XB add BYTE PTR [r8],al
  435e75:	add    BYTE PTR [rax],al
  435e77:	add    BYTE PTR [rsi+rcx*2],al
  435e7a:	rex.XB add BYTE PTR [r8],al
  435e7d:	add    BYTE PTR [rax],al
  435e7f:	add    BYTE PTR [rsi+rcx*2],bl
  435e82:	rex.XB add BYTE PTR [r8],al
  435e85:	add    BYTE PTR [rax],al
  435e87:	add    BYTE PTR [rbx],ah
  435e89:	rex.WRX
  435e8a:	rex.XB add BYTE PTR [r8],al
  435e8d:	add    BYTE PTR [rax],al
  435e8f:	add    BYTE PTR [rdi],dh
  435e91:	rex.WRX
  435e92:	rex.XB add BYTE PTR [r8],al
  435e95:	add    BYTE PTR [rax],al
  435e97:	add    BYTE PTR [rdi+0x4e],cl
  435e9a:	rex.XB add BYTE PTR [r8],al
  435e9d:	add    BYTE PTR [rax],al
  435e9f:	add    BYTE PTR [rsi+0x4e],dl
  435ea2:	rex.XB add BYTE PTR [r8],al
  435ea5:	add    BYTE PTR [rax],al
  435ea7:	add    BYTE PTR [rdx+0x4e],ch
  435eaa:	rex.XB add BYTE PTR [r8],al
  435ead:	add    BYTE PTR [rax],al
  435eaf:	add    BYTE PTR [rdx+0x434e],al
  435eb5:	add    BYTE PTR [rax],al
  435eb7:	add    BYTE PTR [rcx+0x434e],cl
  435ebd:	add    BYTE PTR [rax],al
  435ebf:	add    BYTE PTR [rbp+0x434e],bl
  435ec5:	add    BYTE PTR [rax],al
  435ec7:	add    BYTE PTR [rbp+0x434e],dh
  435ecd:	add    BYTE PTR [rax],al
  435ecf:	add    BYTE PTR [rsi+rcx*2+0x43],bh
  435ed6:	add    BYTE PTR [rax],al
  435ed8:	ror    BYTE PTR [rsi+0x43],1
  435edb:	add    BYTE PTR [rax],al
  435edd:	add    BYTE PTR [rax],al
  435edf:	add    al,ch
  435ee1:	rex.WRX
  435ee2:	rex.XB add BYTE PTR [r8],al
  435ee5:	add    BYTE PTR [rax],al
  435ee7:	add    bh,ch
  435ee9:	rex.WRX
  435eea:	rex.XB add BYTE PTR [r8],al
  435eed:	add    BYTE PTR [rax],al
  435eef:	add    BYTE PTR [rbx],al
  435ef1:	rex.WRXB
  435ef2:	rex.XB add BYTE PTR [r8],al
  435ef5:	add    BYTE PTR [rax],al
  435ef7:	add    BYTE PTR [rbx],bl
  435ef9:	rex.WRXB
  435efa:	rex.XB add BYTE PTR [r8],al
  435efd:	add    BYTE PTR [rax],al
  435eff:	add    BYTE PTR [rdx],ah
  435f01:	rex.WRXB
  435f02:	rex.XB add BYTE PTR [r8],al
  435f05:	add    BYTE PTR [rax],al
  435f07:	add    BYTE PTR [rsi],dh
  435f09:	rex.WRXB
  435f0a:	rex.XB add BYTE PTR [r8],al
  435f0d:	add    BYTE PTR [rax],al
  435f0f:	add    BYTE PTR [rsi+0x4f],cl
  435f12:	rex.XB add BYTE PTR [r8],al
  435f15:	add    BYTE PTR [rax],al
  435f17:	add    BYTE PTR [rbp+0x4f],dl
  435f1a:	rex.XB add BYTE PTR [r8],al
  435f1d:	add    BYTE PTR [rax],al
  435f1f:	add    BYTE PTR [rcx+0x4f],ch
  435f22:	rex.XB add BYTE PTR [r8],al
  435f25:	add    BYTE PTR [rax],al
  435f27:	add    BYTE PTR [rcx+0x434f],al
  435f2d:	add    BYTE PTR [rax],al
  435f2f:	add    BYTE PTR [rax+0x434f],cl
  435f35:	add    BYTE PTR [rax],al
  435f37:	add    BYTE PTR [rdi+rcx*2+0x43],bl
  435f3e:	add    BYTE PTR [rax],al
  435f40:	mov    ah,0x4f
  435f42:	rex.XB add BYTE PTR [r8],al
  435f45:	add    BYTE PTR [rax],al
  435f47:	add    BYTE PTR [rbx+0x434f],bh
  435f4d:	add    BYTE PTR [rax],al
  435f4f:	add    bh,cl
  435f51:	rex.WRXB
  435f52:	rex.XB add BYTE PTR [r8],al
  435f55:	add    BYTE PTR [rax],al
  435f57:	add    bh,bl
  435f59:	rex.WRXB
  435f5a:	rex.XB add BYTE PTR [r8],al
  435f5d:	add    BYTE PTR [rax],al
  435f5f:	add    bh,ah
  435f61:	rex.WRXB
  435f62:	rex.XB add BYTE PTR [r8],al
  435f65:	add    BYTE PTR [rax],al
  435f67:	add    bl,bh
  435f69:	rex.WRXB
  435f6a:	rex.XB add BYTE PTR [r8],al
	...
  435f75:	add    BYTE PTR [rax],al
  435f77:	add    BYTE PTR [rsi+0x4335],ch
  435f7d:	add    BYTE PTR [rax],al
  435f7f:	add    BYTE PTR [rsi],cl
  435f81:	push   rax
  435f82:	rex.XB add BYTE PTR [r8],al
	...
  435f8d:	add    BYTE PTR [rax],al
  435f8f:	add    BYTE PTR [rax],ch
  435f91:	push   rax
  435f92:	rex.XB add BYTE PTR [r8],al
  435f95:	add    BYTE PTR [rax],al
  435f97:	add    BYTE PTR [rax+rdx*2+0x43],dl
  435f9b:	add    BYTE PTR [rax],al
  435f9d:	add    BYTE PTR [rax],al
  435f9f:	add    BYTE PTR [rdi+0x50],ah
  435fa2:	rex.XB add BYTE PTR [r8],al
  435fa5:	add    BYTE PTR [rax],al
  435fa7:	add    BYTE PTR [rsi+0x50],dh
  435faa:	rex.XB add BYTE PTR [r8],al
  435fad:	add    BYTE PTR [rax],al
  435faf:	add    BYTE PTR [rsi+0x4350],cl
  435fb5:	add    BYTE PTR [rax],al
  435fb7:	add    BYTE PTR [rsi+0x4350],ah
  435fbd:	add    BYTE PTR [rax],al
  435fbf:	add    BYTE PTR [rdx+0x4350],bh
  435fc5:	add    BYTE PTR [rax],al
  435fc7:	add    dh,dl
  435fc9:	push   rax
  435fca:	rex.XB add BYTE PTR [r8],al
  435fcd:	add    BYTE PTR [rax],al
  435fcf:	add    cl,ch
  435fd1:	push   rax
  435fd2:	rex.XB add BYTE PTR [r8],al
  435fd5:	add    BYTE PTR [rax],al
  435fd7:	add    BYTE PTR [rcx+0x37],bl
  435fda:	rex.XB add BYTE PTR [r8],al
  435fdd:	add    BYTE PTR [rax],al
  435fdf:	add    al,bh
  435fe1:	push   rax
  435fe2:	rex.XB add BYTE PTR [r8],al
  435fe5:	add    BYTE PTR [rax],al
  435fe7:	add    BYTE PTR [rdx],cl
  435fe9:	push   rcx
  435fea:	rex.XB add BYTE PTR [r8],al
  435fed:	add    BYTE PTR [rax],al
  435fef:	add    BYTE PTR [rax],bl
  435ff1:	push   rcx
  435ff2:	rex.XB add BYTE PTR [r8],al
  435ff5:	add    BYTE PTR [rax],al
  435ff7:	add    BYTE PTR [rsi],ch
  435ff9:	push   rcx
  435ffa:	rex.XB add BYTE PTR [r8],al
  435ffd:	add    BYTE PTR [rax],al
  435fff:	add    BYTE PTR [rdi],bh
  436001:	push   rcx
  436002:	rex.XB add BYTE PTR [r8],al
  436005:	add    BYTE PTR [rax],al
  436007:	add    BYTE PTR [rcx+rdx*2+0x43],cl
  43600b:	add    BYTE PTR [rax],al
  43600d:	add    BYTE PTR [rax],al
  43600f:	add    BYTE PTR [rcx+0x51],ch
  436012:	rex.XB add BYTE PTR [r8],al
  436015:	add    BYTE PTR [rax],al
  436017:	add    BYTE PTR [rcx+rdx*2+0x43],bh
  43601b:	add    BYTE PTR [rax],al
  43601d:	add    BYTE PTR [rax],al
  43601f:	add    BYTE PTR [rbx+0x4351],cl
  436025:	add    BYTE PTR [rax],al
  436027:	add    BYTE PTR [rsi+0x4351],dl
  43602d:	add    BYTE PTR [rax],al
  43602f:	add    BYTE PTR [rdi+0x4351],ah
  436035:	add    BYTE PTR [rax],al
  436037:	add    BYTE PTR [rax+0x4351],dh
  43603d:	add    BYTE PTR [rax],al
  43603f:	add    dh,al
  436041:	push   rcx
  436042:	rex.XB add BYTE PTR [r8],al
	...
  43604d:	add    BYTE PTR [rax],al
  43604f:	add    dh,al
  436051:	push   rcx
  436052:	rex.XB add BYTE PTR [r8],al
	...
  43607d:	add    BYTE PTR [rax],al
  43607f:	add    BYTE PTR [rdx],cl
  436081:	rex.XB push 0x20646c69
  436087:	gs js  0x4360f3
  43608a:	je     0x4360f1
  43608c:	and    BYTE PTR fs:[rdi+0x69],dh
  436090:	je     0x4360fa
  436092:	and    BYTE PTR [rbx+0x74],dh
  436095:	(bad)  
  436096:	je     0x43610d
  436098:	jae    0x4360ba
  43609a:	and    eax,0xa64
  43609f:	add    BYTE PTR [rdx],cl
  4360a1:	rex.XB push 0x20646c69
  4360a7:	je     0x43610e
  4360a9:	jb     0x436118
  4360ab:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  4360b2:	ja     0x43611d
  4360b4:	je     0x43611e
  4360b6:	and    BYTE PTR [rbx+0x69],dh
  4360b9:	outs   dx,BYTE PTR ds:[esi]
  4360bb:	(bad)  
  4360bc:	ins    BYTE PTR es:[rdi],dx
  4360bd:	and    BYTE PTR [rip+0x25783020],bh        # 0x25bb90e3
  4360c3:	js     0x4360e5
  4360c5:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4d8a3e
  4360cb:	cmp    al,0x61
  4360cd:	ins    BYTE PTR es:[rdi],dx
  4360ce:	ins    BYTE PTR es:[rdi],dx
  4360cf:	and    BYTE PTR [rax+rbp*2+0x72],dh
  4360d3:	gs (bad) 
  4360d5:	fs jae 0x436116
  4360d8:	add    BYTE PTR [rsi+rbp*2],bh
  4360db:	jne    0x436149
  4360dd:	ins    BYTE PTR es:[rdi],dx
  4360de:	and    BYTE PTR [rax+rbp*2+0x72],dh
  4360e2:	gs (bad) 
  4360e4:	fs add BYTE PTR ds:[rax+rbp*2+0x72],dl
  4360ea:	gs (bad) 
  4360ec:	and    BYTE PTR fs:[rip+0x78302e64],ah        # 0x78738f57
  4360f3:	and    eax,0x4c00786c
  4360f8:	push   rdi
  4360f9:	push   rax
  4360fa:	and    BYTE PTR [rip+0x6c252e64],ah        # 0x6c688f64
  436100:	add    BYTE PTR fs:[rax+0x72],dl
  436104:	outs   dx,DWORD PTR ds:[rsi]
  436105:	movsxd esp,DWORD PTR [rbp+0x73]
  436108:	jae    0x43612a
  43610a:	and    eax,0x73250064
  43610f:	cmp    ah,BYTE PTR [rax]
  436111:	rex.B jae 0x436187
  436114:	gs jb  0x43618b
  436117:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43611e:	(bad)  
  43611f:	and    BYTE PTR [rsi+0x61],ah
  436122:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6174002e
  43612a:	jb     0x436193
  43612c:	gs je  0x43615d
  43612f:	movsxd eax,DWORD PTR [rax]
  436131:	add    BYTE PTR [rax],al
  436133:	add    BYTE PTR [rax],al
  436135:	add    BYTE PTR [rax],al
  436137:	add    BYTE PTR [rax+rbp*2+0x65],dh
  43613b:	pop    rdi
  43613c:	je     0x43619f
  43613e:	jb     0x4361a7
  436140:	gs je  0x436170
  436143:	ds jae 0x4361bd
  436146:	pop    rdi
  436147:	(bad)
  43614c:	jo     0x4361bd
  43614e:	imul   ebp,DWORD PTR [rsi+0x74],0x6f72665f
  436155:	ins    DWORD PTR es:[rdi],dx
  436156:	pop    rdi
  436157:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43615b:	and    BYTE PTR [rcx],ah
  43615d:	cmp    eax,0x4c554e20
  436162:	rex.WR add BYTE PTR [rax],r8b
	...
  43617d:	add    BYTE PTR [rax],al
  43617f:	add    BYTE PTR [rcx+0x6e],ch
  436182:	je     0x4361a4
  436184:	fs gs data16 (bad) 
  436188:	jne    0x4361f6
  43618a:	je     0x4361eb
  43618c:	(bad)
  436191:	jo     0x436202
  436193:	imul   ebp,DWORD PTR [rsi+0x74],0x6e696b5f
  43619a:	fs pop rdi
  43619c:	data16 jb 0x43620e
  43619f:	ins    DWORD PTR es:[rdi],dx
  4361a0:	pop    rdi
  4361a1:	jo     0x436206
  4361a3:	sub    BYTE PTR [rbx+0x4f],al
  4361a6:	push   rdx
  4361a7:	rex.RB pop r15
  4361a9:	rex.B
  4361aa:	rex.R
  4361ab:	rex.R push rdx
  4361ad:	sub    ch,BYTE PTR [rcx]
	...
  4361bf:	add    BYTE PTR [rbx+0x74],dh
  4361c2:	(bad)  
  4361c3:	je     0x43623a
  4361c5:	jae    0x4361f4
  4361c7:	imul   ebp,DWORD PTR ds:[rcx+0x6e],0x64
  4361cc:	and    BYTE PTR [rip+0x73250020],bh        # 0x736861f2
  4361d2:	gs js  0x43623e
  4361d5:	je     0x43623c
  4361d7:	fs sub al,0x20
  4361da:	jae    0x436250
  4361dc:	(bad)  
  4361dd:	je     0x436254
  4361df:	jae    0x436201
  4361e1:	cmp    eax,0x642520
  4361e6:	and    eax,0x6f747373
  4361eb:	jo     0x43625d
  4361ed:	gs fs sub al,0x20
  4361f1:	jae    0x43625c
  4361f3:	outs   dx,BYTE PTR ds:[esi]
  4361f5:	(bad)  
  4361f6:	ins    BYTE PTR es:[rdi],dx
  4361f7:	and    BYTE PTR [rip+0x732520],bh        # 0xb6871d
  4361fd:	and    eax,0x67697373
  436202:	outs   dx,BYTE PTR ds:[rsi]
  436203:	(bad)  
  436204:	ins    BYTE PTR es:[rdi],dx
  436205:	ins    BYTE PTR es:[rdi],dx
  436206:	gs fs sub al,0x20
  43620a:	jae    0x436275
  43620c:	outs   dx,BYTE PTR ds:[esi]
  43620e:	(bad)  
  43620f:	ins    BYTE PTR es:[rdi],dx
  436210:	and    BYTE PTR [rip+0x732520],bh        # 0xb68736
  436216:	and    eax,0x616f6c73
  43621b:	fs gs add BYTE PTR fs:[rip+0x726f6673],ah        # 0x72b2c897
  436224:	imul   esp,DWORD PTR [rbp+0x64],0x0
  436228:	and    eax,0x6f667673
  43622d:	jb     0x43629a
  43622f:	gs add BYTE PTR fs:[rip+0x65786573],ah        # 0x65bbc7aa
  436237:	movsxd esp,DWORD PTR [rax+rax*1+0x25]
  43623b:	jae    0x4362b3
  43623d:	outs   dx,WORD PTR ds:[rsi]
  43623f:	jb     0x4362ac
  436241:	sub    eax,0x656e6f64
  436246:	add    BYTE PTR [rip+0x746e6573],ah        # 0x74b1c7bf
  43624c:	gs jb  0x4362b4
  43624f:	and    BYTE PTR fs:[rbx+0x79],dh
  436253:	jae    0x4362b8
  436255:	(bad)  
  436256:	ins    BYTE PTR es:[rdi],dx
  436257:	ins    BYTE PTR es:[rdi],dx
  436258:	add    BYTE PTR [rip+0x69786573],ah        # 0x69bbc7d1
  43625e:	je     0x4362c5
  436260:	and    BYTE PTR fs:[rbx+0x79],dh
  436264:	jae    0x4362c9
  436266:	(bad)  
  436267:	ins    BYTE PTR es:[rdi],dx
  436268:	ins    BYTE PTR es:[rdi],dx
  436269:	add    BYTE PTR [rip+0x75707373],ah        # 0x75b3d5e2
  43626f:	jb     0x4362da
  436271:	outs   dx,DWORD PTR ds:[rsi]
  436272:	jne    0x4362e7
  436274:	add    BYTE PTR [rip+0x6e676973],ah        # 0x6eaacbed
  43627a:	outs   dx,DWORD PTR ds:[rsi]
  43627b:	jb     0x4362e2
  43627d:	add    BYTE PTR [rip+0x2d6f6e73],ah        # 0x2db2d0f6
  436283:	push   0x6f747369
  436288:	jb     0x436303
  43628a:	add    BYTE PTR [rip+0x2d6f6e73],ah        # 0x2db2d103
  436290:	jb     0x4362f7
  436292:	jae    0x436309
  436294:	ins    DWORD PTR es:[rdi],dx
  436295:	gs add BYTE PTR fs:[rip+0x72687473],ah        # 0x72abd710
  43629d:	gs (bad) 
  43629f:	and    BYTE PTR fs:[rbx+0x72],ah
  4362a3:	gs (bad) 
  4362a5:	je     0x43630c
  4362a7:	add    BYTE PTR fs:[rip+0x72687473],ah        # 0x72abd721
  4362ae:	gs (bad) 
  4362b0:	and    BYTE PTR fs:[rbp+0x78],ah
  4362b4:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x7473202c
  4362bc:	(bad)  
  4362bd:	je     0x436334
  4362bf:	jae    0x4362e1
  4362c1:	cmp    eax,0x642520
  4362c6:	and    eax,0x6b6e7573
  4362cb:	outs   dx,BYTE PTR ds:[rsi]
  4362cc:	outs   dx,DWORD PTR ds:[rsi]
  4362cd:	ja     0x43633d
  4362cf:	(bad)  
  4362d0:	(bad)  
  4362d1:	(bad)  
  4362d2:	add    BYTE PTR [rax],al
  4362d4:	rex.WR (bad) 
  4362d6:	std    
  4362d7:	jmp    FWORD PTR [rdx+rax*4-0x3]
  4362db:	dec    DWORD PTR [rsi-0x4f00027e]
  4362e1:	(bad)  
  4362e2:	std    
  4362e3:	dec    esp
  4362e5:	(bad)  
  4362e6:	std    
  4362e7:	(bad)  
  4362e8:	in     al,dx
  4362e9:	(bad)  
  4362ea:	std    
  4362eb:	dec    DWORD PTR [rbx+rax*4]
  4362ee:	std    
  4362ef:	jmp    FWORD PTR [rbx+rax*4]
  4362f2:	std    
  4362f3:	dec    DWORD PTR [rbx+rax*4-0x3]
  4362f7:	jmp    FWORD PTR [rbx+rax*4-0x3]
  4362fb:	dec    DWORD PTR [rbx+rax*4-0x7c530003]
  436302:	std    
  436303:	dec    esp
  436305:	cmp    ebp,0xffffffff
  436308:	in     al,dx
  436309:	cmp    ebp,0xffffffff
  43630c:	or     al,0x82
  43630e:	std    
  43630f:	jmp    FWORD PTR [rdx+rax*4]
  436312:	std    
  436313:	inc    DWORD PTR [rax]
	...
  43631d:	add    BYTE PTR [rax],al
  43631f:	add    BYTE PTR [rdi+0x64],ah
  436322:	(bad)
  436327:	gs jb  0x436364
  43632a:	and    BYTE PTR [rdx+0x61],dh
  43632d:	outs   dx,BYTE PTR ds:[rsi]
  43632e:	and    BYTE PTR [rdi+0x75],ch
  436331:	je     0x436353
  436333:	outs   dx,DWORD PTR ds:[rsi]
  436334:	data16 and BYTE PTR [rbp+0x65],ch
  436338:	ins    DWORD PTR es:[rdi],dx
  436339:	outs   dx,DWORD PTR ds:[rsi]
  43633a:	jb     0x4363b5
  43633c:	and    BYTE PTR [rdi+0x68],dh
  43633f:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x69797274
  436347:	outs   dx,BYTE PTR ds:[rsi]
  436348:	and    BYTE PTR [edi+ebp*2+0x20],dh
  43634d:	(bad)  
  43634e:	ins    BYTE PTR es:[rdi],dx
  43634f:	ins    BYTE PTR es:[rdi],dx
  436350:	outs   dx,DWORD PTR ds:[rsi]
  436351:	movsxd esp,DWORD PTR [rcx+0x74]
  436354:	and    BYTE PTR gs:[rip+0x6220756c],ah        # 0x6263d8c7
  43635b:	jns    0x4363d1
  43635d:	gs jae 0x43636a
  436360:	add    BYTE PTR [rbp+0x6e],dh
  436363:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  436367:	outs   dx,BYTE PTR ds:[rsi]
  436368:	and    BYTE PTR [rbp+0x72],ah
  43636b:	jb     0x4363dc
  43636d:	jb     0x43636f
  43636f:	and    eax,0x67002e73
  436374:	(bad)
  43637a:	gs jb  0x4363b7
  43637d:	and    BYTE PTR [rax],al
  43637f:	or     al,BYTE PTR [rax]
  436381:	add    BYTE PTR [rax],al
  436383:	add    BYTE PTR [rax],al
  436385:	add    BYTE PTR [rax],al
  436387:	add    BYTE PTR [rip+0x64253a73],ah        # 0x64689e00
  43638d:	cmp    ah,BYTE PTR [rax]
  43638f:	and    BYTE PTR [r8+0x72],sil
  436393:	outs   dx,DWORD PTR ds:[rsi]
  436394:	(bad)  
  436395:	ins    BYTE PTR es:[rdi],dx
  436396:	gs ins DWORD PTR es:[rdi],dx
  436398:	and    BYTE PTR [rcx+0x6e],ch
  43639b:	je     0x436402
  43639d:	jb     0x43640d
  43639f:	(bad)  
  4363a0:	ins    BYTE PTR es:[rdi],dx
  4363a1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4363a5:	rex.RXB
  4363a6:	rex.R
  4363a7:	rex.X jae 0x43640f
  4363aa:	jb     0x436422
  4363ac:	gs jb  0x4363cf
  4363af:	push   0x62207361
  4363b4:	gs outs dx,BYTE PTR gs:[rsi]
  4363b7:	and    BYTE PTR [rbp+riz*2+0x74],ah
  4363bb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4363c0:	or     al,BYTE PTR cs:[rax]
	...
  4363cf:	add    BYTE PTR [rip+0x253a646c],ah        # 0x257dc841
  4363d5:	xor    BYTE PTR [rsi],dh
  4363d7:	ins    BYTE PTR es:[rdi],dx
  4363d8:	and    BYTE PTR fs:[rax],al
  4363db:	ds ds ds and BYTE PTR ds:[rbp+0x6e],ah
  4363e2:	je     0x436449
  4363e4:	jb     0x43644f
  4363e6:	outs   dx,BYTE PTR ds:[rsi]
  4363e7:	and    BYTE PTR [eip+0x3c000a73],ah        # 0x3c436e61
  4363ee:	cmp    al,0x3c
  4363f0:	cmp    al,0x20
  4363f2:	gs js  0x43645e
  4363f5:	je     0x436460
  4363f7:	outs   dx,BYTE PTR ds:[rsi]
  4363f8:	and    BYTE PTR [eip+0xa73],ah        # 0x436e72
  4363ff:	add    BYTE PTR [rax+0x38],bh
  436402:	ss pop rdi
  436404:	ss xor al,0x2d
  436407:	ja     0x43643f
  436409:	xor    al,0x2d
  43640b:	ins    DWORD PTR es:[rdi],dx
  43640c:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
	...
  43641f:	add    BYTE PTR [rax+0x38],bh
  436422:	ss pop rdi
  436424:	ss xor al,0x2d
  436427:	ja     0x43645f
  436429:	xor    al,0x2d
  43642b:	ins    DWORD PTR es:[rdi],dx
  43642c:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  436433:	(bad)  
  436434:	xor    DWORD PTR cs:[rdx],esi
  436437:	xor    DWORD PTR cs:[rax],eax
  43643a:	add    BYTE PTR [rax],al
  43643c:	add    BYTE PTR [rax],al
  43643e:	add    BYTE PTR [rax],al
  436440:	and    eax,0x41203a73
  436445:	jae    0x4364ba
  436447:	gs jb  0x4364be
  43644a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  436451:	(bad)  
  436452:	and    BYTE PTR [rsi+0x61],ah
  436455:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  43645d:	(bad)  
  43645e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436461:	ins    DWORD PTR es:[rdi],dx
  436462:	outs   dx,DWORD PTR ds:[rsi]
  436463:	outs   dx,BYTE PTR ds:[rsi]
  436464:	(bad)  
  436465:	jbe    0x4364cc
  436467:	movsxd ebp,DWORD PTR [rsi]
  436469:	movsxd eax,DWORD PTR [rax]
  43646b:	add    BYTE PTR [rax],al
  43646d:	add    BYTE PTR [rax],al
  43646f:	add    BYTE PTR [rcx+0x6c],ah
  436472:	ins    BYTE PTR es:[rdi],dx
  436473:	outs   dx,DWORD PTR ds:[rsi]
  436474:	movsxd esp,DWORD PTR [rax]
  436476:	sub    eax,0x6d756e20
  43647b:	and    BYTE PTR [rax+riz*1],bh
  43647e:	sub    BYTE PTR [rbp+0x6e],dh
  436481:	jae    0x4364ec
  436483:	outs   dx,BYTE PTR ds:[esi]
  436485:	gs sub DWORD PTR fs:[rax],ebp
  436489:	jb     0x4364f0
  43648b:	jae    0x4364f2
  43648d:	jb     0x436505
  43648f:	and    BYTE PTR gs:[rax+riz*1],bh
  436493:	xor    BYTE PTR [rax],ah
  436495:	(bad)  
  436496:	and    BYTE PTR [rip+0x65736572],ch        # 0x65b6ca0e
  43649c:	jb     0x436514
  43649e:	and    BYTE PTR gs:[rdx],bh
  4364a1:	and    BYTE PTR [rdx+0x65],dh
  4364a4:	jae    0x43650b
  4364a6:	jb     0x43651e
  4364a8:	sub    DWORD PTR gs:[rax],eax
	...
  4364bf:	add    BYTE PTR [rbp+0x6e],dh
  4364c2:	jae    0x43652d
  4364c4:	outs   dx,BYTE PTR ds:[esi]
  4364c6:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4364cb:	je     0x4364ed
  4364cd:	movsxd esp,DWORD PTR [rcx+0x6c]
  4364d0:	movsxd esi,DWORD PTR [rbp+0x6c]
  4364d3:	(bad)  
  4364d4:	je     0x43653b
  4364d6:	pop    rdi
  4364d7:	(bad)  
  4364d8:	ins    BYTE PTR es:[rdi],dx
  4364d9:	ins    BYTE PTR es:[rdi],dx
  4364da:	outs   dx,DWORD PTR ds:[rsi]
  4364db:	movsxd esp,DWORD PTR [rcx+0x74]
  4364de:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6328
  4364e5:	jae    0x43655b
  4364e7:	and    BYTE PTR [rsi+0x65],dh
  4364ea:	movsxd ebx,DWORD PTR [rdi+0x70]
  4364ed:	jb     0x436554
  4364ef:	imul   di,WORD PTR [rax+0x2a],0x202c
  4364f5:	imul   ebp,DWORD PTR [rsi+0x74],0x29
  4364fc:	add    BYTE PTR [rax],al
  4364fe:	add    BYTE PTR [rax],al
  436500:	and    eax,0x41203a73
  436505:	jae    0x43657a
  436507:	gs jb  0x43657e
  43650a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  436511:	(bad)  
  436512:	and    BYTE PTR [rsi+0x61],ah
  436515:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  43651d:	(bad)  
  43651e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436521:	ins    DWORD PTR es:[rdi],dx
  436522:	outs   dx,DWORD PTR ds:[rsi]
  436523:	outs   dx,BYTE PTR ds:[rsi]
  436524:	(bad)  
  436525:	addr32 fs (bad) 
  436528:	pop    rdi
  436529:	jbe    0x436590
  43652b:	movsxd esi,DWORD PTR [rbx+0x2e]
  43652e:	movsxd eax,DWORD PTR [rax]
  436530:	jno    0x4365a7
  436532:	imul   esp,DWORD PTR [rbx+0x6b],0x7375705f
  436539:	push   0x0
  43653e:	add    BYTE PTR [rax],al
  436540:	movsxd ebp,DWORD PTR [rax+0x61]
  436543:	jb     0x43656f
  436545:	sub    ah,BYTE PTR [rax]
  436547:	push   rsi
  436548:	rex.RB
  436549:	rex.XB pop r15
  43654b:	movsxd ebp,DWORD PTR [rax+0x61]
  43654e:	jb     0x4365af
  436550:	jo     0x4365c6
  436552:	jb     0x4365b3
  436554:	jno    0x4365cb
  436556:	imul   esp,DWORD PTR [rbx+0x6b],0x7375705f
  43655d:	push   0x43455628
  436562:	pop    rdi
  436563:	movsxd ebp,DWORD PTR [rax+0x61]
  436566:	jb     0x4365c7
  436568:	jo     0x4365de
  43656a:	jb     0x436596
  43656c:	sub    al,0x20
  43656e:	movsxd ebp,DWORD PTR [rax+0x61]
  436571:	jb     0x4365d2
  436573:	jo     0x4365e9
  436575:	jb     0x4365a3
  436577:	and    BYTE PTR [rbx+0x6f],ah
  43657a:	outs   dx,BYTE PTR ds:[rsi]
  43657b:	jae    0x4365f1
  43657d:	and    BYTE PTR [rbx+0x68],ah
  436580:	(bad)  
  436581:	jb     0x4365ad
  436583:	sub    al,0x20
  436585:	jne    0x4365f5
  436587:	jae    0x4365f2
  436589:	outs   dx,BYTE PTR ds:[esi]
  43658b:	gs and BYTE PTR fs:[rcx+0x6e],ch
  436590:	je     0x4365bb
	...
  4365be:	add    BYTE PTR [rax],al
  4365c0:	rex.RX (bad) 
  4365c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4365ca:	jne    0x43663a
  4365cc:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  4365d3:	jb     0x436636
  4365d5:	ja     0x4365f7
  4365d7:	(bad)
  4365dc:	jo     0x43664d
  4365de:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  4365e5:	xor    BYTE PTR [rax+0x25],bh
  4365e8:	jae    0x43660a
  4365ea:	ja     0x436654
  4365ec:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x656c6564
  4365f4:	je     0x43665f
  4365f6:	outs   dx,BYTE PTR ds:[rsi]
  4365f7:	and    BYTE PTR [ecx+0x74],ch
  4365fb:	or     al,BYTE PTR cs:[rax]
  4365fe:	add    BYTE PTR [rax],al
  436600:	rex.XB outs dx,DWORD PTR ds:[rsi]
  436602:	jne    0x436670
  436604:	and    BYTE PTR fs:[rsi+0x6f],ch
  436608:	je     0x43662a
  43660a:	imul   bp,WORD PTR [rsi+0x64],0x7220
  436610:	(bad)  
  436611:	ja     0x436633
  436613:	(bad)
  436618:	jo     0x436689
  43661a:	imul   ebp,DWORD PTR [rsi+0x74],0x206e6920
  436621:	ins    BYTE PTR es:[rdi],dx
  436622:	imul   esi,DWORD PTR [rbx+0x74],0x4300002e
  436629:	outs   dx,DWORD PTR ds:[rsi]
  43662a:	jne    0x436698
  43662c:	and    BYTE PTR fs:[rsi+0x6f],ch
  436630:	je     0x436652
  436632:	imul   bp,WORD PTR [rsi+0x64],0x6220
  436638:	jb     0x43669f
  43663a:	(bad)  
  43663b:	imul   esi,DWORD PTR [rax+0x6f],0x69
  43663f:	outs   dx,BYTE PTR ds:[rsi]
  436640:	je     0x436662
  436642:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  436649:	add    BYTE PTR cs:[rax],al
  43664c:	add    BYTE PTR [rax],al
  43664e:	add    BYTE PTR [rax],al
  436650:	rex.WB outs dx,BYTE PTR ds:[rsi]
  436652:	movsxd ebp,DWORD PTR [rdi+0x6e]
  436655:	jae    0x4366c0
  436657:	jae    0x4366cd
  436659:	outs   dx,BYTE PTR gs:[rsi]
  43665b:	je     0x43667d
  43665d:	(bad)
  436662:	jo     0x4366d3
  436664:	imul   ebp,DWORD PTR [rsi+0x74],0x6e696b20
  43666b:	fs (bad) 
  43666d:	and    BYTE PTR [rax],ah
  43666f:	push   rdi
  436670:	(bad)  
  436671:	jae    0x436693
  436673:	and    eax,0x6e202c64
  436678:	outs   dx,DWORD PTR ds:[rsi]
  436679:	ja     0x43669b
  43667b:	and    eax,0xa2e64
  436680:	rex.RX (bad) 
  436682:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43668a:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436691:	(bad)
  436696:	jo     0x436707
  436698:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  43669f:	xor    BYTE PTR [rax+0x25],bh
  4366a2:	jae    0x4366c4
  4366a4:	sub    BYTE PTR [rip+0xa2e2964],ah        # 0xa71900e
  4366aa:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163a123
  4366b0:	jae    0x436725
  4366b2:	gs jb  0x436729
  4366b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  4366bc:	(bad)  
  4366bd:	and    BYTE PTR [rsi+0x61],ah
  4366c0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x656d002e
  4366c8:	ins    DWORD PTR es:[rdi],dx
  4366c9:	sub    eax,0x61657262
  4366ce:	imul   ebp,DWORD PTR [rsi],0x63
  4366d1:	add    BYTE PTR [rax+0x61],ch
  4366d4:	outs   dx,BYTE PTR ds:[rsi]
  4366d5:	fs ins BYTE PTR es:[rdi],dx
  4366d7:	gs jb  0x4366fa
  4366da:	cmp    eax,0x554e203d
  4366df:	rex.WR
  4366e0:	rex.WR add BYTE PTR [rip+0x25203a73],r12b        # 0x2563a15a
  4366e7:	jae    0x4366e9
  4366e9:	jne    0x436759
  4366eb:	push   0x6c646e61
  4366f0:	gs and BYTE PTR fs:[rdx+0x72],ah
  4366f5:	gs (bad) 
  4366f7:	imul   esi,DWORD PTR [rax+0x6f],0x69
  4366fb:	outs   dx,BYTE PTR ds:[rsi]
  4366fc:	je     0x43671e
  4366fe:	je     0x436779
  436700:	jo     0x436767
  436702:	add    BYTE PTR [rdx+0x70],ah
  436705:	sub    eax,0x736e693e
  43670a:	gs jb  0x436781
  43670d:	gs add BYTE PTR fs:[rdx+0x70],ah
  436712:	sub    eax,0x7761723e
  436717:	pop    rdi
  436718:	je     0x436793
  43671a:	jo     0x436781
  43671c:	and    BYTE PTR [rip+0x6172203d],bh        # 0x61b5875f
  436722:	ja     0x436783
  436724:	(bad)  
  436725:	imul   esi,DWORD PTR [rax+0x74],0x5f
  436729:	je     0x4367a4
  43672b:	jo     0x436792
  43672d:	pop    rdi
  43672e:	jae    0x4367a7
	...
  436738:	(bad)  
  436739:	xor    BYTE PTR [rdi],ah
  43673b:	and    BYTE PTR [rdi*1+0x745f7a20],bh
  436742:	jns    0x4367b4
  436744:	and    BYTE PTR gs:[rsi],ah
  436747:	and    BYTE PTR es:[rdx+0x5f],bh
  43674b:	je     0x4367c6
  43674d:	jo     0x4367b4
  43674f:	and    BYTE PTR [rdi*1+0x27342720],bh
  436756:	add    BYTE PTR [rax],al
  436758:	(bad)  
  436759:	je     0x43677b
  43675b:	xor    BYTE PTR [rax+0x25],bh
  43675e:	jae    0x43678c
  436760:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  436764:	and    BYTE PTR gs:[rdx+0x25],bl
  436768:	movsxd ebp,DWORD PTR [rax+riz*1]
  43676b:	(bad)  
  43676c:	jo     0x43678e
  43676e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436771:	ins    DWORD PTR es:[rdi],dx
  436772:	(bad)  
  436773:	outs   dx,BYTE PTR ds:[rsi]
  436774:	fs pop rdi
  436776:	ins    BYTE PTR es:[rdi],dx
  436777:	imul   esi,DWORD PTR [rbx+0x74],0x20736920
  43677e:	xor    BYTE PTR [rax+0x25],bh
  436781:	jae    0x43678d
  436783:	add    BYTE PTR [rax],al
  436785:	add    BYTE PTR [rax],al
  436787:	add    BYTE PTR [rdx+0x72],al
  43678a:	gs (bad) 
  43678c:	imul   esi,DWORD PTR [rax+0x6f],0x69
  436790:	outs   dx,BYTE PTR ds:[rsi]
  436791:	je     0x4367b3
  436793:	(bad)  
  436794:	je     0x4367b6
  436796:	and    eax,0x73692073
  43679b:	and    BYTE PTR [rbp+0x61],ch
  43679e:	jb     0x43680b
  4367a0:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4367a5:	jae    0x43680c
  4367a7:	jb     0x43681d
  4367a9:	sub    eax,0x61736964
  4367ae:	(bad)  
  4367af:	ins    BYTE PTR es:[rdi],dx
  4367b0:	gs fs or al,BYTE PTR cs:[rax]
  4367b5:	add    BYTE PTR [rax],al
  4367b7:	add    BYTE PTR [rsi+0x61],al
  4367ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4367c2:	jne    0x436832
  4367c4:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  4367cb:	jb     0x43682e
  4367cd:	ja     0x4367ef
  4367cf:	(bad)
  4367d4:	jo     0x436845
  4367d6:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  4367dd:	xor    BYTE PTR [rax+0x25],bh
  4367e0:	jae    0x436810
  4367e2:	or     al,BYTE PTR [rax]
  4367e4:	add    BYTE PTR [rax],al
  4367e6:	add    BYTE PTR [rax],al
  4367e8:	rex.RX (bad) 
  4367ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4367f2:	jb     0x436859
  4367f4:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  4367fb:	(bad)
  436800:	jo     0x436871
  436802:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  436809:	xor    BYTE PTR [rax+0x25],bh
  43680c:	jae    0x43682e
  43680e:	sub    BYTE PTR [rip+0xa2e2964],ah        # 0xa719178
  436814:	add    BYTE PTR [rax],al
  436816:	add    BYTE PTR [rax],al
  436818:	(bad)  
  436819:	jo     0x436848
  43681b:	ds je  0x436897
  43681e:	jo     0x436885
  436820:	and    BYTE PTR [rcx],ah
  436822:	cmp    eax,0x69657220
  436827:	outs   dx,BYTE PTR ds:[rsi]
  436828:	jae    0x43688f
  43682a:	jb     0x4368a0
  43682c:	pop    rdi
  43682d:	(bad)
  436832:	jo     0x4368a3
  436834:	imul   ebp,DWORD PTR [rsi+0x74],0x64616200
  43683b:	and    BYTE PTR [rdx+0x61],dh
  43683e:	ja     0x436860
  436840:	(bad)
  436845:	jo     0x4368b6
  436847:	imul   ebp,DWORD PTR [rsi+0x74],0x70797420
  43684e:	and    BYTE PTR gs:[rip+0x6e750064],ah        # 0x6eb868b9
  436855:	push   0x6c646e61
  43685a:	gs and BYTE PTR fs:[rdx+0x20],bl
  43685f:	jo     0x4368c2
  436861:	movsxd ebp,DWORD PTR [rbx+0x65]
  436864:	je     0x436886
  436866:	je     0x4368e1
  436868:	jo     0x4368cf
  43686a:	add    BYTE PTR cs:[rcx+rdx*4],ah
  43686e:	std    
  43686f:	push   rsp
  436871:	nop
  436872:	std    
  436873:	jmp    rsp
  436875:	nop
  436876:	std    
  436877:	inc    DWORD PTR [rcx+rdx*4]
  43687a:	std    
  43687b:	call   QWORD PTR [rcx+rdx*4]
  43687e:	std    
  43687f:	inc    DWORD PTR [rsi+0x61]
  436882:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43688a:	jb     0x4368f1
  43688c:	(bad)  
  43688d:	and    BYTE PTR fs:[rbx+0x68],dh
  436891:	(bad)  
  436892:	outs   dx,DWORD PTR fs:[rsi]
  436894:	ja     0x4368b6
  436896:	ins    DWORD PTR es:[rdi],dx
  436897:	gs ins DWORD PTR es:[rdi],dx
  436899:	outs   dx,DWORD PTR ds:[rsi]
  43689a:	jb     0x436915
  43689c:	and    BYTE PTR [rdi+0x66],ch
  43689f:	and    BYTE PTR [rdx+0x72],ah
  4368a2:	gs (bad) 
  4368a4:	imul   esi,DWORD PTR [rax+0x6f],0x69
  4368a8:	outs   dx,BYTE PTR ds:[rsi]
  4368a9:	je     0x4368cb
  4368ab:	(bad)  
  4368ac:	je     0x4368ce
  4368ae:	xor    BYTE PTR [rax+0x25],bh
  4368b1:	jae    0x4368d3
  4368b3:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa71922c
  4368b9:	add    BYTE PTR [rax],al
  4368bb:	add    BYTE PTR [rax],al
  4368bd:	add    BYTE PTR [rax],al
  4368bf:	add    BYTE PTR [rsi+0x61],al
  4368c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4368ca:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  4368d1:	(bad)
  4368d6:	jo     0x436947
  4368d8:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  4368df:	xor    BYTE PTR [rax+0x25],bh
  4368e2:	jae    0x436904
  4368e4:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa71925d
  4368ea:	add    BYTE PTR [rax],al
  4368ec:	add    BYTE PTR [rax],al
  4368ee:	add    BYTE PTR [rax],al
  4368f0:	rex.RX (bad) 
  4368f2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4368fa:	jne    0x43696a
  4368fc:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436903:	jb     0x436966
  436905:	ja     0x436927
  436907:	(bad)
  43690c:	jo     0x43697d
  43690e:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  436915:	xor    BYTE PTR [rax+0x25],bh
  436918:	jae    0x43693a
  43691a:	sub    BYTE PTR [rip+0x77202973],ah        # 0x77639293
  436920:	push   0x20656c69
  436925:	fs gs ins BYTE PTR es:[rdi],dx
  436928:	gs je  0x436994
  43692b:	outs   dx,BYTE PTR ds:[rsi]
  43692c:	and    BYTE PTR [ecx+0x74],ch
  436930:	or     al,BYTE PTR cs:[rax]
  436933:	add    BYTE PTR [rax],al
  436935:	add    BYTE PTR [rax],al
  436937:	add    BYTE PTR [rsi+0x61],al
  43693a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  436942:	jne    0x4369b2
  436944:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  43694b:	data16 (bad) 
  43694d:	jae    0x4369c3
  43694f:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436953:	movsxd esp,DWORD PTR [rbp+0x70]
  436956:	outs   dx,DWORD PTR ds:[rsi]
  436957:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  43695e:	jo     0x436980
  436960:	(bad)  
  436961:	je     0x436983
  436963:	xor    BYTE PTR [rax+0x25],bh
  436966:	jae    0x436988
  436968:	sub    BYTE PTR [rip+0x77202973],ah        # 0x776392e1
  43696e:	push   0x20656c69
  436973:	fs gs ins BYTE PTR es:[rdi],dx
  436976:	gs je  0x4369e2
  436979:	outs   dx,BYTE PTR ds:[rsi]
  43697a:	and    BYTE PTR [ecx+0x74],ch
  43697e:	or     al,BYTE PTR cs:[rax]
  436981:	add    BYTE PTR [rax],al
  436983:	add    BYTE PTR [rax],al
  436985:	add    BYTE PTR [rax],al
  436987:	add    BYTE PTR [rbx+0x6f],al
  43698a:	jne    0x4369f8
  43698c:	and    BYTE PTR fs:[rsi+0x6f],ch
  436990:	je     0x4369b2
  436992:	imul   bp,WORD PTR [rsi+0x64],0x6620
  436998:	(bad)  
  436999:	jae    0x436a0f
  43699b:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43699f:	movsxd esp,DWORD PTR [rbp+0x70]
  4369a2:	outs   dx,DWORD PTR ds:[rsi]
  4369a3:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  4369aa:	jo     0x4369cc
  4369ac:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  4369b3:	add    BYTE PTR cs:[rax],al
  4369b6:	add    BYTE PTR [rax],al
  4369b8:	rex.RX (bad) 
  4369ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4369c2:	jb     0x436a29
  4369c4:	(bad)  
  4369c5:	and    BYTE PTR fs:[rbx+0x68],dh
  4369c9:	(bad)  
  4369ca:	outs   dx,DWORD PTR fs:[rsi]
  4369cc:	ja     0x4369ee
  4369ce:	ins    DWORD PTR es:[rdi],dx
  4369cf:	gs ins DWORD PTR es:[rdi],dx
  4369d1:	outs   dx,DWORD PTR ds:[rsi]
  4369d2:	jb     0x436a4d
  4369d4:	and    BYTE PTR [rdi+0x66],ch
  4369d7:	and    BYTE PTR [rsi+0x61],ah
  4369da:	jae    0x436a50
  4369dc:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4369e0:	movsxd esp,DWORD PTR [rbp+0x70]
  4369e3:	outs   dx,DWORD PTR ds:[rsi]
  4369e4:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  4369eb:	xor    BYTE PTR [rax+0x25],bh
  4369ee:	jae    0x436a10
  4369f0:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa719369
  4369f6:	add    BYTE PTR [rax],al
  4369f8:	rex.RX (bad) 
  4369fa:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  436a02:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436a09:	data16 (bad) 
  436a0b:	jae    0x436a81
  436a0d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436a11:	movsxd esp,DWORD PTR [rbp+0x70]
  436a14:	outs   dx,DWORD PTR ds:[rsi]
  436a15:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  436a1c:	jo     0x436a3e
  436a1e:	(bad)  
  436a1f:	je     0x436a41
  436a21:	xor    BYTE PTR [rax+0x25],bh
  436a24:	jae    0x436a46
  436a26:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa71939f
  436a2c:	add    BYTE PTR [rax],al
  436a2e:	add    BYTE PTR [rax],al
  436a30:	rex.XB outs dx,DWORD PTR ds:[rsi]
  436a32:	jne    0x436aa0
  436a34:	and    BYTE PTR fs:[rsi+0x6f],ch
  436a38:	je     0x436a5a
  436a3a:	imul   bp,WORD PTR [rsi+0x64],0x6620
  436a40:	(bad)  
  436a41:	jae    0x436ab7
  436a43:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436a47:	movsxd esp,DWORD PTR [rbp+0x70]
  436a4a:	outs   dx,DWORD PTR ds:[rsi]
  436a4b:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  436a52:	jo     0x436a74
  436a54:	(bad)  
  436a55:	je     0x436a77
  436a57:	xor    BYTE PTR [rax+0x25],bh
  436a5a:	jae    0x436a7c
  436a5c:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  436a63:	and    BYTE PTR [rax],ch
  436a65:	jne    0x436ad5
  436a67:	imul   ebp,DWORD PTR [rsi+0x73],0x69747265
  436a6e:	outs   dx,BYTE PTR ds:[rsi]
  436a6f:	sub    DWORD PTR [esi],ebp
  436a72:	or     al,BYTE PTR [rax]
  436a74:	add    BYTE PTR [rax],al
  436a76:	add    BYTE PTR [rax],al
  436a78:	rex.RX (bad) 
  436a7a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  436a82:	jne    0x436af2
  436a84:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436a8b:	data16 (bad) 
  436a8d:	jae    0x436b03
  436a8f:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436a93:	movsxd esp,DWORD PTR [rbp+0x70]
  436a96:	outs   dx,DWORD PTR ds:[rsi]
  436a97:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  436a9e:	jo     0x436ac0
  436aa0:	(bad)  
  436aa1:	je     0x436ac3
  436aa3:	xor    BYTE PTR [rax+0x25],bh
  436aa6:	jae    0x436ac8
  436aa8:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa719421
  436aae:	add    BYTE PTR [rax],al
  436ab0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  436ab2:	jne    0x436b20
  436ab4:	and    BYTE PTR fs:[rsi+0x6f],ch
  436ab8:	je     0x436ada
  436aba:	imul   bp,WORD PTR [rsi+0x64],0x6620
  436ac0:	(bad)  
  436ac1:	jae    0x436b37
  436ac3:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436ac7:	movsxd esp,DWORD PTR [rbp+0x70]
  436aca:	outs   dx,DWORD PTR ds:[rsi]
  436acb:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  436ad2:	jo     0x436af4
  436ad4:	(bad)  
  436ad5:	je     0x436af7
  436ad7:	xor    BYTE PTR [rax+0x25],bh
  436ada:	jae    0x436afc
  436adc:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  436ae3:	and    BYTE PTR [rax],ch
  436ae5:	jb     0x436b4c
  436ae7:	imul   ebp,DWORD PTR [rsi+0x73],0x69747265
  436aee:	outs   dx,BYTE PTR ds:[rsi]
  436aef:	sub    DWORD PTR [esi],ebp
  436af2:	or     al,BYTE PTR [rax]
  436af4:	add    BYTE PTR [rax],al
  436af6:	add    BYTE PTR [rax],al
  436af8:	rex.WX jne 0x436b68
  436afb:	jo     0x436b1d
  436afd:	(bad)  
  436afe:	ins    BYTE PTR es:[rdi],dx
  436aff:	jb     0x436b66
  436b01:	(bad)  
  436b02:	fs jns 0x436b25
  436b05:	imul   ebp,DWORD PTR [rsi+0x73],0x65747265
  436b0c:	and    BYTE PTR fs:[rcx+0x74],ah
  436b10:	and    BYTE PTR [rdx+0x65],dh
  436b13:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436b1a:	je     0x436b85
  436b1c:	ins    DWORD PTR es:[rdi],dx
  436b1d:	gs add BYTE PTR cs:[rsi+0x61],al
  436b22:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  436b2a:	jb     0x436b91
  436b2c:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  436b33:	data16 (bad) 
  436b35:	jae    0x436bab
  436b37:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  436b3b:	movsxd esp,DWORD PTR [rbp+0x70]
  436b3e:	outs   dx,DWORD PTR ds:[rsi]
  436b3f:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a20
  436b46:	jo     0x436b68
  436b48:	(bad)  
  436b49:	je     0x436b6b
  436b4b:	xor    BYTE PTR [rax+0x25],bh
  436b4e:	jae    0x436b70
  436b50:	sub    BYTE PTR [rip+0xa2e2973],ah        # 0xa7194c9
  436b56:	add    BYTE PTR [rax],al
  436b58:	rex.XB outs dx,DWORD PTR ds:[rsi]
  436b5a:	outs   dx,BYTE PTR ds:[rsi]
  436b5b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7665206e
  436b64:	(bad)  
  436b65:	ins    BYTE PTR es:[rdi],dx
  436b66:	jne    0x436bc9
  436b68:	je     0x436bd3
  436b6a:	outs   dx,DWORD PTR ds:[rsi]
  436b6b:	outs   dx,BYTE PTR ds:[rsi]
  436b6c:	and    BYTE PTR [rsi+0x61],ah
  436b6f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7341202e
  436b77:	jae    0x436bee
  436b79:	ins    DWORD PTR es:[rdi],dx
  436b7a:	imul   ebp,DWORD PTR [rsi+0x67],0x636e7520
  436b81:	outs   dx,DWORD PTR ds:[rsi]
  436b82:	outs   dx,BYTE PTR ds:[rsi]
  436b83:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2e6c616e
  436b8c:	or     al,BYTE PTR [rax]
  436b8e:	add    BYTE PTR [rax],al
  436b90:	rex.XB outs dx,DWORD PTR ds:[rsi]
  436b92:	ins    DWORD PTR es:[rdi],dx
  436b93:	ins    DWORD PTR es:[rdi],dx
  436b94:	(bad)  
  436b95:	outs   dx,BYTE PTR ds:[rsi]
  436b96:	and    BYTE PTR fs:[rbp+0x76],ah
  436b9a:	(bad)  
  436b9b:	ins    BYTE PTR es:[rdi],dx
  436b9c:	jne    0x436bff
  436b9e:	je     0x436c09
  436ba0:	outs   dx,DWORD PTR ds:[rsi]
  436ba1:	outs   dx,BYTE PTR ds:[rsi]
  436ba2:	and    BYTE PTR [rsi+0x61],ah
  436ba5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6944202e
  436bad:	jae    0x436c10
  436baf:	(bad)  
  436bb0:	ins    BYTE PTR es:[rdi],dx
  436bb1:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e
  436bb8:	jo     0x436c2e
  436bba:	imul   esp,DWORD PTR [rdi+rbx*2+0x67],0x705f7465
  436bc2:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x72727563
  436bca:	outs   dx,BYTE PTR gs:[rsi]
  436bcc:	je     0x436c2d
  436bce:	jo     0x436c44
  436bd0:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x70203d3d
  436bd8:	je     0x436c43
  436bda:	fs pop rdi
  436bdc:	addr32 gs je 0x436c3f
  436be0:	jo     0x436c4b
  436be2:	and    BYTE PTR fs:[rax],ch
  436be5:	jo     0x436c5b
  436be7:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x0
  436bef:	add    BYTE PTR [rbx+0x6f],al
  436bf2:	jne    0x436c60
  436bf4:	and    BYTE PTR fs:[rsi+0x6f],ch
  436bf8:	je     0x436c1a
  436bfa:	imul   bp,WORD PTR [rsi+0x64],0x6220
  436c00:	jb     0x436c67
  436c02:	(bad)  
  436c03:	imul   esi,DWORD PTR [rax+0x6f],0x69
  436c07:	outs   dx,BYTE PTR ds:[rsi]
  436c08:	je     0x436c2a
  436c0a:	(bad)  
  436c0b:	je     0x436c2d
  436c0d:	xor    BYTE PTR [rax+0x25],bh
  436c10:	jae    0x436c32
  436c12:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  436c19:	and    BYTE PTR [rax],ch
  436c1b:	jne    0x436c8b
  436c1d:	imul   ebp,DWORD PTR [rsi+0x73],0x69747265
  436c24:	outs   dx,BYTE PTR ds:[rsi]
  436c25:	sub    DWORD PTR [esi],ebp
  436c28:	or     al,BYTE PTR [rax]
  436c2a:	(bad)  
  436c2b:	jo     0x436c5a
  436c2d:	ds jb  0x436c91
  436c30:	ja     0x436c5f
  436c32:	imul   ebp,DWORD PTR ds:[rsi+0x73],0x65747265
  436c3a:	and    BYTE PTR fs:[rsi],bh
  436c3d:	and    BYTE PTR [rax],dh
  436c3f:	add    BYTE PTR [rbx+0x6f],al
  436c42:	jne    0x436cb0
  436c44:	and    BYTE PTR fs:[rsi+0x6f],ch
  436c48:	je     0x436c6a
  436c4a:	imul   bp,WORD PTR [rsi+0x64],0x7220
  436c50:	(bad)  
  436c51:	ja     0x436c73
  436c53:	(bad)
  436c58:	jo     0x436cc9
  436c5a:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  436c61:	xor    BYTE PTR [rax+0x25],bh
  436c64:	jae    0x436c86
  436c66:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  436c6d:	and    BYTE PTR [rax],ch
  436c6f:	jb     0x436cd6
  436c71:	imul   ebp,DWORD PTR [rsi+0x73],0x69747265
  436c78:	outs   dx,BYTE PTR ds:[rsi]
  436c79:	sub    DWORD PTR [esi],ebp
  436c7c:	or     al,BYTE PTR [rax]
  436c7e:	imul   rsi,QWORD PTR [rax+riz*1+0x61],0x6d657220
  436c87:	outs   dx,DWORD PTR ds:[rsi]
  436c88:	jbe    0x436cef
  436c8a:	and    BYTE PTR fs:[rdx+0x72],ah
  436c8e:	gs (bad) 
  436c90:	imul   esi,DWORD PTR [rax+0x6f],0x69
  436c94:	outs   dx,BYTE PTR ds:[rsi]
  436c95:	je     0x436cd6
  436c97:	add    BYTE PTR [rsi+0x61],ah
  436c9a:	jae    0x436d10
  436c9c:	pop    rdi
  436c9d:	je     0x436d11
  436c9f:	(bad)  
  436ca0:	movsxd esp,DWORD PTR [rbp+0x70]
  436ca3:	outs   dx,DWORD PTR ds:[rsi]
  436ca4:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436cab:	jo     0x436d0c
  436cad:	jae    0x436d17
  436caf:	(bad)  
  436cb0:	outs   dx,DWORD PTR fs:[rsi]
  436cb2:	ja     0x436cd4
  436cb4:	sub    BYTE PTR [rdx+0x70],ch
  436cb7:	sub    DWORD PTR [rax],esp
  436cb9:	ds cmp eax,0x66756220
  436cbf:	and    BYTE PTR [rbx],ch
  436cc1:	and    BYTE PTR [rbp+0x65],ch
  436cc4:	ins    DWORD PTR es:[rdi],dx
  436cc5:	pop    rdi
  436cc6:	ins    BYTE PTR es:[rdi],dx
  436cc7:	outs   dx,BYTE PTR gs:[rsi]
  436cc9:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  436ccd:	(bad)  
  436cce:	jne    0x436d36
  436cd0:	and    BYTE PTR [rsi],bh
  436cd2:	cmp    eax,0x73616620
  436cd7:	je     0x436d38
  436cd9:	je     0x436d4d
  436cdb:	(bad)  
  436cdc:	movsxd esp,DWORD PTR [rbp+0x70]
  436cdf:	outs   dx,DWORD PTR ds:[rsi]
  436ce0:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436ce7:	jo     0x436d48
  436ce9:	jae    0x436d53
  436ceb:	(bad)  
  436cec:	outs   dx,DWORD PTR fs:[rsi]
  436cee:	ja     0x436d10
  436cf0:	sub    BYTE PTR [rdx+0x70],ch
  436cf3:	sub    DWORD PTR [rax],esp
  436cf5:	sub    esp,DWORD PTR [rax]
  436cf7:	sub    BYTE PTR [rdx+0x70],ch
  436cfa:	sub    DWORD PTR [rip+0x6e656c3e],ebp        # 0x6ea8d93e
  436d00:	addr32 je 0x436d6b
  436d03:	add    BYTE PTR [rax],al
  436d05:	add    BYTE PTR [rax],al
  436d07:	add    BYTE PTR [rdx+0x70],ah
  436d0a:	sub    eax,0x646c6f3e
  436d0f:	pop    rdi
  436d10:	fs (bad) 
  436d12:	je     0x436d75
  436d14:	and    BYTE PTR [rsi],bh
  436d16:	cmp    eax,0x66756220
  436d1b:	and    BYTE PTR [rbx],ch
  436d1d:	and    BYTE PTR [rbp+0x65],ch
  436d20:	ins    DWORD PTR es:[rdi],dx
  436d21:	pop    rdi
  436d22:	ins    BYTE PTR es:[rdi],dx
  436d23:	outs   dx,BYTE PTR gs:[rsi]
  436d25:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  436d29:	(bad)  
  436d2a:	jne    0x436d92
  436d2c:	and    BYTE PTR [rsi],bh
  436d2e:	cmp    eax,0x70622620
  436d33:	sub    eax,0x646c6f3e
  436d38:	pop    rdi
  436d39:	fs (bad) 
  436d3b:	je     0x436d9e
  436d3d:	pop    rbx
  436d3e:	jae    0x436da9
  436d40:	jp     0x436da7
  436d42:	outs   dx,DWORD PTR ds:[rsi]
  436d43:	data16 and BYTE PTR [rax],ch
  436d46:	(bad)  
  436d47:	jo     0x436d76
  436d49:	outs   dx,DWORD PTR ds:[rsi]
  436d4b:	ins    BYTE PTR es:[rdi],dx
  436d4c:	fs pop rdi
  436d4e:	fs (bad) 
  436d50:	je     0x436db3
  436d52:	sub    DWORD PTR [rbp+0x0],ebx
  436d55:	add    BYTE PTR [rax],al
  436d57:	add    BYTE PTR [rsi+0x61],ah
  436d5a:	jae    0x436dd0
  436d5c:	pop    rdi
  436d5d:	je     0x436dd1
  436d5f:	(bad)  
  436d60:	movsxd esp,DWORD PTR [rbp+0x70]
  436d63:	outs   dx,DWORD PTR ds:[rsi]
  436d64:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436d6b:	jo     0x436dcc
  436d6d:	jae    0x436dd7
  436d6f:	(bad)  
  436d70:	outs   dx,DWORD PTR fs:[rsi]
  436d72:	ja     0x436d94
  436d74:	sub    BYTE PTR [rdx+0x70],ch
  436d77:	sub    DWORD PTR [rax],esp
  436d79:	ds cmp eax,0x61796d20
  436d7f:	fs fs jb 0x436da3
  436d83:	sub    esp,DWORD PTR [rax]
  436d85:	ins    DWORD PTR es:[rdi],dx
  436d86:	gs ins DWORD PTR es:[rdi],dx
  436d88:	pop    rdi
  436d89:	ins    BYTE PTR es:[rdi],dx
  436d8a:	outs   dx,BYTE PTR gs:[rsi]
  436d8c:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  436d90:	ins    DWORD PTR es:[rdi],dx
  436d91:	jns    0x436df4
  436d93:	fs fs jb 0x436db7
  436d97:	ds cmp eax,0x73616620
  436d9d:	je     0x436dfe
  436d9f:	je     0x436e13
  436da1:	(bad)  
  436da2:	movsxd esp,DWORD PTR [rbp+0x70]
  436da5:	outs   dx,DWORD PTR ds:[rsi]
  436da6:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436dad:	jo     0x436e0e
  436daf:	jae    0x436e19
  436db1:	(bad)  
  436db2:	outs   dx,DWORD PTR fs:[rsi]
  436db4:	ja     0x436dd6
  436db6:	sub    BYTE PTR [rdx+0x70],ch
  436db9:	sub    DWORD PTR [rax],esp
  436dbb:	sub    esp,DWORD PTR [rax]
  436dbd:	sub    BYTE PTR [rdx+0x70],ch
  436dc0:	sub    DWORD PTR [rip+0x6e656c3e],ebp        # 0x6ea8da04
  436dc6:	addr32 je 0x436e31
  436dc9:	add    BYTE PTR [rax],al
  436dcb:	add    BYTE PTR [rax],al
  436dcd:	add    BYTE PTR [rax],al
  436dcf:	add    BYTE PTR [rsi+0x61],ah
  436dd2:	jae    0x436e48
  436dd4:	pop    rdi
  436dd5:	je     0x436e49
  436dd7:	(bad)  
  436dd8:	movsxd esp,DWORD PTR [rbp+0x70]
  436ddb:	outs   dx,DWORD PTR ds:[rsi]
  436ddc:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436de3:	jo     0x436e44
  436de5:	imul   ebp,DWORD PTR [rsi+0x73],0x6a28206e
  436dec:	jo     0x436e17
  436dee:	and    BYTE PTR [rsi],bh
  436df0:	cmp    eax,0x66756220
  436df5:	and    BYTE PTR [rbx],ch
  436df7:	and    BYTE PTR [rbp+0x65],ch
  436dfa:	ins    DWORD PTR es:[rdi],dx
  436dfb:	pop    rdi
  436dfc:	ins    BYTE PTR es:[rdi],dx
  436dfd:	outs   dx,BYTE PTR gs:[rsi]
  436dff:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  436e03:	(bad)  
  436e04:	jne    0x436e6c
  436e06:	and    BYTE PTR [rsi],bh
  436e08:	cmp    eax,0x73616620
  436e0d:	je     0x436e6e
  436e0f:	je     0x436e83
  436e11:	(bad)  
  436e12:	movsxd esp,DWORD PTR [rbp+0x70]
  436e15:	outs   dx,DWORD PTR ds:[rsi]
  436e16:	imul   ebp,DWORD PTR [rsi+0x74],0x6d756a5f
  436e1d:	jo     0x436e7e
  436e1f:	imul   ebp,DWORD PTR [rsi+0x73],0x6a28206e
  436e26:	jo     0x436e51
  436e28:	and    BYTE PTR [rbx],ch
  436e2a:	and    BYTE PTR [rax],ch
  436e2c:	push   0x70
  436e2e:	sub    DWORD PTR [rip+0x6e656c3e],ebp        # 0x6ea8da72
  436e34:	addr32 je 0x436e9f
  436e37:	add    BYTE PTR [rdx+0x70],ah
  436e3a:	sub    eax,0x646c6f3e
  436e3f:	pop    rdi
  436e40:	fs (bad) 
  436e42:	je     0x436ea5
  436e44:	and    BYTE PTR [rsi],bh
  436e46:	cmp    eax,0x61796d20
  436e4b:	fs fs jb 0x436e6f
  436e4f:	sub    esp,DWORD PTR [rax]
  436e51:	ins    DWORD PTR es:[rdi],dx
  436e52:	gs ins DWORD PTR es:[rdi],dx
  436e54:	pop    rdi
  436e55:	ins    BYTE PTR es:[rdi],dx
  436e56:	outs   dx,BYTE PTR gs:[rsi]
  436e58:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  436e5c:	ins    DWORD PTR es:[rdi],dx
  436e5d:	jns    0x436ec0
  436e5f:	fs fs jb 0x436e83
  436e63:	ds cmp eax,0x70622620
  436e69:	sub    eax,0x646c6f3e
  436e6e:	pop    rdi
  436e6f:	fs (bad) 
  436e71:	je     0x436ed4
  436e73:	pop    rbx
  436e74:	jae    0x436edf
  436e76:	jp     0x436edd
  436e78:	outs   dx,DWORD PTR ds:[rsi]
  436e79:	data16 and BYTE PTR [rax],ch
  436e7c:	(bad)  
  436e7d:	jo     0x436eac
  436e7f:	outs   dx,DWORD PTR ds:[rsi]
  436e81:	ins    BYTE PTR es:[rdi],dx
  436e82:	fs pop rdi
  436e84:	fs (bad) 
  436e86:	je     0x436ee9
  436e88:	sub    DWORD PTR [rbp+0x0],ebx
	...
  436e9f:	add    BYTE PTR [rdx+0x72],ah
  436ea2:	gs (bad) 
  436ea4:	imul   esi,DWORD PTR [rax+0x6f],0x69
  436ea8:	outs   dx,BYTE PTR ds:[rsi]
  436ea9:	je     0x436ed5
  436eab:	and    BYTE PTR [rbx+0x6c],ah
  436eae:	outs   dx,DWORD PTR ds:[rsi]
  436eaf:	outs   dx,BYTE PTR ds:[rsi]
  436eb0:	gs pop rdi
  436eb2:	outs   dx,DWORD PTR ds:[rsi]
  436eb3:	outs   dx,BYTE PTR ds:[rsi]
  436eb4:	gs pop rdi
  436eb6:	(bad)
  436ebb:	jo     0x436f2c
  436ebd:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6328
  436ec4:	jae    0x436f3a
  436ec6:	and    BYTE PTR [rdx+0x72],ah
  436ec9:	gs (bad) 
  436ecb:	imul   esi,DWORD PTR [rax+0x6f],0x69
  436ecf:	outs   dx,BYTE PTR ds:[rsi]
  436ed0:	je     0x436efc
  436ed2:	sub    al,0x20
  436ed4:	jo     0x436f4a
  436ed6:	imul   esp,DWORD PTR [rdi+rbx*2+0x74],0x29
	...
  436efe:	add    BYTE PTR [rax],al
  436f00:	jbe    0x436f71
  436f02:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x6b636568
  436f0a:	pop    rdi
  436f0b:	ins    DWORD PTR es:[rdi],dx
  436f0c:	gs ins DWORD PTR es:[rdi],dx
  436f0e:	pop    rdi
  436f0f:	ja     0x436f83
  436f11:	imul   esi,DWORD PTR [rbp+riz*2+0x28],0x45524f43
  436f19:	pop    rdi
  436f1a:	rex.B
  436f1b:	rex.R
  436f1c:	rex.R push rdx
  436f1e:	sub    al,0x20
  436f20:	jne    0x436f90
  436f22:	jae    0x436f8d
  436f24:	outs   dx,BYTE PTR ds:[esi]
  436f26:	gs and BYTE PTR fs:[rbx+0x68],ah
  436f2b:	(bad)  
  436f2c:	jb     0x436f58
  436f2e:	sub    al,0x20
  436f30:	movsxd ebp,DWORD PTR [rdi+0x6e]
  436f33:	jae    0x436fa9
  436f35:	and    BYTE PTR [rbp+0x6e],dh
  436f38:	jae    0x436fa3
  436f3a:	outs   dx,BYTE PTR ds:[esi]
  436f3c:	gs and BYTE PTR fs:[rbx+0x68],ah
  436f41:	(bad)  
  436f42:	jb     0x436f6e
  436f44:	sub    al,0x20
  436f46:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  436f5d:	add    BYTE PTR [rax],al
  436f5f:	add    BYTE PTR [rsi+0x6f],dh
  436f62:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x6b636568
  436f6a:	pop    rdi
  436f6b:	ins    DWORD PTR es:[rdi],dx
  436f6c:	gs ins DWORD PTR es:[rdi],dx
  436f6e:	pop    rdi
  436f6f:	jb     0x436fd6
  436f71:	(bad)  
  436f72:	sub    BYTE PTR fs:[rbx+0x4f],al
  436f76:	push   rdx
  436f77:	rex.RB pop r15
  436f79:	rex.B
  436f7a:	rex.R
  436f7b:	rex.R push rdx
  436f7d:	sub    al,0x20
  436f7f:	jne    0x436fef
  436f81:	jae    0x436fec
  436f83:	outs   dx,BYTE PTR ds:[esi]
  436f85:	gs and BYTE PTR fs:[rbx+0x68],ah
  436f8a:	(bad)  
  436f8b:	jb     0x436fb7
  436f8d:	sub    al,0x20
  436f8f:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  436f9e:	add    BYTE PTR [rax],al
  436fa0:	jbe    0x437011
  436fa2:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x74656c65
  436faa:	gs pop rdi
  436fac:	imul   esi,DWORD PTR fs:[rbx+0x61],0x64656c62
  436fb4:	pop    rdi
  436fb5:	(bad)
  436fba:	jo     0x43702b
  436fbc:	imul   ebp,DWORD PTR [rsi+0x74],0x292873
	...
  436fdf:	add    BYTE PTR [rcx+0x6e],ch
  436fe2:	je     0x437004
  436fe4:	jbe    0x437047
  436fe6:	ins    BYTE PTR es:[rdi],dx
  436fe7:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x6e695f65
  436fef:	jae    0x437056
  436ff1:	jb     0x437067
  436ff3:	gs fs pop rdi
  436ff6:	(bad)
  436ffb:	jo     0x43706c
  436ffd:	imul   ebp,DWORD PTR [rsi+0x74],0x77617228
  437004:	pop    rdi
  437005:	(bad)
  43700a:	jo     0x43707b
  43700c:	imul   ebp,DWORD PTR [rsi+0x74],0x292a
	...
  43701f:	add    BYTE PTR [rsi+0x6f],dh
  437022:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x736e6965
  43702a:	gs jb  0x4370a1
  43702d:	pop    rdi
  43702e:	jb     0x437095
  437030:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  437037:	(bad)
  43703c:	jo     0x4370ad
  43703e:	imul   ebp,DWORD PTR [rsi+0x74],0x68742873
  437045:	jb     0x4370ac
  437047:	(bad)  
  437048:	fs pop rdi
  43704a:	imul   ebp,DWORD PTR [rsi+0x66],0x292a6f
	...
  43705d:	add    BYTE PTR [rax],al
  43705f:	add    BYTE PTR [rsi+0x6f],dh
  437062:	imul   esp,DWORD PTR [rax+riz*1+0x75],0x736e696e
  43706a:	gs jb  0x4370e1
  43706d:	pop    rdi
  43706e:	jb     0x4370d5
  437070:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  437077:	(bad)
  43707c:	jo     0x4370ed
  43707e:	imul   ebp,DWORD PTR [rsi+0x74],0x68742873
  437085:	jb     0x4370ec
  437087:	(bad)  
  437088:	fs pop rdi
  43708a:	imul   ebp,DWORD PTR [rsi+0x66],0x292a6f
	...
  43709d:	add    BYTE PTR [rax],al
  43709f:	add    BYTE PTR [rsi+0x6f],dh
  4370a2:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x725f7465
  4370aa:	imul   ebp,DWORD PTR gs:[rsi+0x73],0x5f747265
  4370b2:	(bad)
  4370b7:	jo     0x437128
  4370b9:	imul   ebp,DWORD PTR [rsi+0x74],0x524f4328
  4370c0:	rex.RB pop r15
  4370c2:	rex.B
  4370c3:	rex.R
  4370c4:	rex.R push rdx
  4370c6:	sub    al,0x20
  4370c8:	jo     0x43713e
  4370ca:	imul   esp,DWORD PTR [rdi+rbx*2+0x74],0x29
	...
  4370de:	add    BYTE PTR [rax],al
  4370e0:	(bad)  
  4370e1:	imul   esi,DWORD PTR [rax+0x74],0x5f
  4370e5:	je     0x437160
  4370e7:	jo     0x43714e
  4370e9:	and    BYTE PTR [rdx+0x5f],bl
  4370ec:	jo     0x43714f
  4370ee:	movsxd ebp,DWORD PTR [rbx+0x65]
  4370f1:	je     0x437152
  4370f3:	je     0x437164
  4370f5:	pop    rdi
  4370f6:	(bad)  
  4370f7:	imul   esi,DWORD PTR [rax+0x74],0x5f
  4370fb:	je     0x437176
  4370fd:	jo     0x437164
  4370ff:	sub    BYTE PTR [rbx+0x68],ah
  437102:	(bad)  
  437103:	jb     0x43712e
	...
  43713d:	add    BYTE PTR [rax],al
  43713f:	add    BYTE PTR [rdx+0x72],ah
  437142:	gs (bad) 
  437144:	imul   esi,DWORD PTR [rax+0x6f],0x69
  437148:	outs   dx,BYTE PTR ds:[rsi]
  437149:	je     0x437175
  43714b:	and    BYTE PTR [rbx+0x65],dh
  43714e:	je     0x4371af
  437150:	(bad)
  437155:	jo     0x4371c6
  437157:	imul   ebp,DWORD PTR [rsi+0x74],0x706b6228
  43715e:	je     0x4371bf
  437160:	je     0x4371db
  437162:	jo     0x4371c9
  437164:	sub    al,0x20
  437166:	jb     0x4371c9
  437168:	ja     0x4371c9
  43716a:	(bad)  
  43716b:	imul   esi,DWORD PTR [rax+0x74],0x5f
  43716f:	je     0x4371ea
  437171:	jo     0x4371d8
  437173:	sub    al,0x20
  437175:	rex.XB
  437176:	rex.WRXB push r10
  437178:	rex.RB pop r15
  43717a:	rex.B
  43717b:	rex.R
  43717c:	rex.R push rdx
  43717e:	sub    al,0x20
  437180:	imul   ebp,DWORD PTR [rsi+0x74],0x6e69202c
  437187:	je     0x4371a9
  437189:	sub    BYTE PTR [rdx],ch
  43718b:	sub    DWORD PTR [rax],ebp
  43718d:	rex.XB
  43718e:	rex.WRXB push r10
  437190:	rex.RB pop r15
  437192:	rex.B
  437193:	rex.R
  437194:	rex.R push rdx
  437196:	sub    DWORD PTR [rax+riz*1],ebp
  437199:	imul   ebp,DWORD PTR [rsi+0x74],0x292a
  4371a0:	jb     0x437203
  4371a2:	ja     0x437203
  4371a4:	(bad)  
  4371a5:	imul   esi,DWORD PTR [rax+0x74],0x5f
  4371a9:	je     0x437224
  4371ab:	jo     0x437212
  4371ad:	and    BYTE PTR [rdx+0x5f],bl
  4371b0:	jo     0x437213
  4371b2:	movsxd ebp,DWORD PTR [rbx+0x65]
  4371b5:	je     0x437216
  4371b7:	je     0x437228
  4371b9:	pop    rdi
  4371ba:	jb     0x43721d
  4371bc:	ja     0x43721d
  4371be:	(bad)  
  4371bf:	imul   esi,DWORD PTR [rax+0x74],0x5f
  4371c3:	je     0x43723e
  4371c5:	jo     0x43722c
  4371c7:	sub    BYTE PTR [rbx+0x68],ah
  4371ca:	(bad)  
  4371cb:	jb     0x4371f6
	...
  4371fd:	add    BYTE PTR [rax],al
  4371ff:	add    BYTE PTR [rsi+0x2d],al
  437202:	xor    DWORD PTR ds:0x25460078,ebp
  437209:	js     0x43720b
  43720b:	rex.RX and eax,0x76003b78
  437211:	imul   r13d,DWORD PTR [rbp+r12*2+0x3a],0x6e65706f
  43721a:	cmp    al,BYTE PTR [rax]
  43721c:	jbe    0x437264
  43721e:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x61657270
  437226:	cmp    al,BYTE PTR fs:[rax]
  437229:	jbe    0x437271
  43722b:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x69727770
  437233:	je     0x43729a
  437235:	cmp    al,BYTE PTR [rax]
  437237:	jbe    0x43727f
  437239:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x61747366
  437241:	je     0x43727d
  437243:	add    BYTE PTR [rsi+0x46],dh
  437246:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x736f6c63
  43724e:	cmp    al,BYTE PTR gs:[rax]
  437251:	jbe    0x437299
  437253:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x696c6e75
  43725b:	outs   dx,BYTE PTR ds:[rsi]
  43725c:	imul   edi,DWORD PTR [rdx],0x0
  43725f:	jbe    0x4372a7
  437261:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x64616572
  437269:	ins    BYTE PTR es:[rdi],dx
  43726a:	imul   ebp,DWORD PTR [rsi+0x6b],0x4676003a
  437271:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x66746573
  437279:	jae    0x4372b5
  43727b:	add    BYTE PTR [rax],al
  43727d:	add    BYTE PTR [rax],al
  43727f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163acf8
  437285:	jae    0x4372fa
  437287:	gs jb  0x4372fe
  43728a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  437291:	(bad)  
  437292:	and    BYTE PTR [rsi+0x61],ah
  437295:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7665002e
  43729d:	outs   dx,BYTE PTR gs:[rsi]
  43729f:	je     0x4372ce
  4372a1:	ins    BYTE PTR es:[rdi],dx
  4372a2:	outs   dx,DWORD PTR ds:[rsi]
  4372a3:	outs   dx,DWORD PTR ds:[rsi]
  4372a4:	jo     0x4372d4
  4372a6:	movsxd eax,DWORD PTR [rax]
  4372a8:	jno    0x4372ca
  4372aa:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c98c0d0
  4372b0:	rex.WR add BYTE PTR [rax],r8b
  4372b3:	add    BYTE PTR [rax],al
  4372b5:	add    BYTE PTR [rax],al
  4372b7:	add    BYTE PTR [rbp+0x78],al
  4372ba:	movsxd esp,DWORD PTR [rbp+0x70]
  4372bd:	je     0x437328
  4372bf:	outs   dx,DWORD PTR ds:[rsi]
  4372c0:	outs   dx,BYTE PTR ds:[rsi]
  4372c1:	and    BYTE PTR [rbx+0x6f],ah
  4372c4:	outs   dx,BYTE PTR ds:[rsi]
  4372c5:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6564206e
  4372ce:	je     0x437335
  4372d0:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  4372d4:	and    BYTE PTR [rdi+0x6e],ch
  4372d7:	and    BYTE PTR [rsi+0x64],ah
  4372da:	and    BYTE PTR [rip+0x70000a73],ah        # 0x70437d53
  4372e0:	and    BYTE PTR [rcx],ah
  4372e2:	cmp    eax,0x4c554e20
  4372e7:	rex.WR add BYTE PTR [rcx+0x2d],r14b
  4372eb:	ds push 0x20646165
  4372f1:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c98c117
  4372f7:	rex.WR add BYTE PTR [rax],r8b
  4372fa:	add    BYTE PTR [rax],al
  4372fc:	add    BYTE PTR [rax],al
  4372fe:	add    BYTE PTR [rax],al
  437300:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x203d2120
  437308:	rex.WRX push rbp
  43730a:	rex.WR
  43730b:	rex.WR and BYTE PTR [rsi],r12b
  43730e:	and    BYTE PTR es:[rcx+0x74],ch
  437312:	gs jb  0x437342
  437315:	ds jo  0x437338
  437318:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c98c13e
  43731e:	rex.WR add BYTE PTR [rbx+0x65],r14b
  437322:	ins    BYTE PTR es:[rdi],dx
  437323:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
	...
  437340:	jbe    0x4373b1
  437342:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  43734a:	pop    rdi
  43734b:	addr32 fs (bad) 
  43734e:	pop    rdi
  43734f:	gs jbe 0x4373b7
  437352:	outs   dx,BYTE PTR ds:[rsi]
  437353:	je     0x4373b4
  437355:	jo     0x4373b6
  437357:	data16 jb 0x4373bf
  43735a:	sub    BYTE PTR gs:[rcx+0x75],dh
  43735e:	gs jne 0x4373c6
  437361:	pop    rdi
  437362:	addr32 fs (bad) 
  437365:	pop    rdi
  437366:	gs jbe 0x4373ce
  437369:	outs   dx,BYTE PTR ds:[rsi]
  43736a:	je     0x4373cb
  43736c:	jo     0x437398
  43736e:	sub    DWORD PTR [rax],eax
	...
  437380:	imul   ebp,DWORD PTR [rsi+0x74],0x65757120
  437387:	jne    0x4373ee
  437389:	pop    rdi
  43738a:	addr32 fs (bad) 
  43738d:	pop    rdi
  43738e:	gs jbe 0x4373f6
  437391:	outs   dx,BYTE PTR ds:[rsi]
  437392:	je     0x4373f3
  437394:	jo     0x4373f5
  437396:	ins    BYTE PTR es:[rdi],dx
  437397:	outs   dx,BYTE PTR gs:[rsi]
  437399:	addr32 je 0x437404
  43739c:	sub    BYTE PTR [rcx+0x75],dh
  43739f:	gs jne 0x437407
  4373a2:	pop    rdi
  4373a3:	addr32 fs (bad) 
  4373a6:	pop    rdi
  4373a7:	gs jbe 0x43740f
  4373aa:	outs   dx,BYTE PTR ds:[rsi]
  4373ab:	je     0x43740c
  4373ad:	jo     0x4373d9
  4373af:	sub    DWORD PTR [rax],eax
	...
  4373bd:	add    BYTE PTR [rax],al
  4373bf:	add    BYTE PTR [rcx+0x6e],ch
  4373c2:	je     0x4373e4
  4373c4:	jno    0x43743b
  4373c6:	gs jne 0x43742e
  4373c9:	pop    rdi
  4373ca:	addr32 fs (bad) 
  4373cd:	pop    rdi
  4373ce:	gs jbe 0x437436
  4373d1:	outs   dx,BYTE PTR ds:[rsi]
  4373d2:	je     0x437433
  4373d4:	jo     0x437435
  4373d6:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x28657461
  4373de:	jno    0x437455
  4373e0:	gs jne 0x437448
  4373e3:	pop    rdi
  4373e4:	addr32 fs (bad) 
  4373e7:	pop    rdi
  4373e8:	gs jbe 0x437450
  4373eb:	outs   dx,BYTE PTR ds:[rsi]
  4373ec:	je     0x43744d
  4373ee:	jo     0x43741a
  4373f0:	sub    al,0x20
  4373f2:	imul   ebp,DWORD PTR [rsi+0x74],0x292a2820
  4373f9:	sub    BYTE PTR [rcx+0x75],dh
  4373fc:	gs jne 0x437464
  4373ff:	pop    rdi
  437400:	addr32 fs (bad) 
  437403:	pop    rdi
  437404:	gs jbe 0x43746c
  437407:	outs   dx,BYTE PTR ds:[rsi]
  437408:	je     0x437469
  43740a:	jo     0x437436
  43740c:	sub    al,0x20
  43740e:	jno    0x437485
  437410:	gs jne 0x437478
  437413:	pop    rdi
  437414:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6264675f
  43741c:	pop    rdi
  43741d:	gs jbe 0x437485
  437420:	outs   dx,BYTE PTR ds:[rsi]
  437421:	je     0x437482
  437423:	jo     0x43744f
  437425:	sub    al,0x20
  437427:	addr32 fs (bad) 
  43742a:	pop    rdi
  43742b:	gs jbe 0x437493
  43742e:	outs   dx,BYTE PTR ds:[rsi]
  43742f:	je     0x437490
  437431:	jo     0x43745f
  437433:	and    BYTE PTR [rsi+0x6f],dh
  437436:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x6f76202c
  43743e:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x0
	...
  43747e:	add    BYTE PTR [rax],al
  437480:	jbe    0x4374f1
  437482:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  43748a:	pop    rdi
  43748b:	addr32 fs (bad) 
  43748e:	pop    rdi
  43748f:	gs jbe 0x4374f7
  437492:	outs   dx,BYTE PTR ds:[rsi]
  437493:	je     0x4374f4
  437495:	jo     0x4374f6
  437497:	jb     0x4374fe
  437499:	ins    DWORD PTR es:[rdi],dx
  43749a:	outs   dx,DWORD PTR ds:[rsi]
  43749b:	jbe    0x437502
  43749d:	pop    rdi
  43749e:	gs ins BYTE PTR es:[rdi],dx
  4374a0:	gs ins DWORD PTR es:[rdi],dx
  4374a2:	sub    BYTE PTR [rcx+0x75],dh
  4374a5:	gs jne 0x43750d
  4374a8:	pop    rdi
  4374a9:	addr32 fs (bad) 
  4374ac:	pop    rdi
  4374ad:	gs jbe 0x437515
  4374b0:	outs   dx,BYTE PTR ds:[rsi]
  4374b1:	je     0x437512
  4374b3:	jo     0x4374df
  4374b5:	sub    al,0x20
  4374b7:	jno    0x43752e
  4374b9:	gs jne 0x437521
  4374bc:	pop    rdi
  4374bd:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6264675f
  4374c5:	pop    rdi
  4374c6:	gs jbe 0x43752e
  4374c9:	outs   dx,BYTE PTR ds:[rsi]
  4374ca:	je     0x43752b
  4374cc:	jo     0x4374f8
  4374ce:	sub    DWORD PTR [rax],eax
	...
  4374e0:	imul   ebp,DWORD PTR [rsi+0x74],0x65757120
  4374e7:	jne    0x43754e
  4374e9:	pop    rdi
  4374ea:	addr32 fs (bad) 
  4374ed:	pop    rdi
  4374ee:	gs jbe 0x437556
  4374f1:	outs   dx,BYTE PTR ds:[rsi]
  4374f2:	je     0x437553
  4374f4:	jo     0x437555
  4374f6:	imul   esi,DWORD PTR [rbx+0x5f],0x74706d65
  4374fd:	jns    0x437527
  4374ff:	jno    0x437576
  437501:	gs jne 0x437569
  437504:	pop    rdi
  437505:	addr32 fs (bad) 
  437508:	pop    rdi
  437509:	gs jbe 0x437571
  43750c:	outs   dx,BYTE PTR ds:[rsi]
  43750d:	je     0x43756e
  43750f:	jo     0x43753b
  437511:	sub    DWORD PTR [rax],eax
	...
  43751f:	add    BYTE PTR [rdi+0x64],ah
  437522:	(bad)  
  437523:	pop    rdi
  437524:	gs jbe 0x43758c
  437527:	outs   dx,BYTE PTR ds:[rsi]
  437528:	je     0x437554
  43752a:	and    BYTE PTR [rcx+0x75],dh
  43752d:	gs jne 0x437595
  437530:	pop    rdi
  437531:	addr32 fs (bad) 
  437534:	pop    rdi
  437535:	gs jbe 0x43759d
  437538:	outs   dx,BYTE PTR ds:[rsi]
  437539:	je     0x43759a
  43753b:	jo     0x43759c
  43753d:	jo     0x4375a4
  43753f:	imul   ebp,DWORD PTR gs:[rax],0x71
  437543:	jne    0x4375aa
  437545:	jne    0x4375ac
  437547:	pop    rdi
  437548:	addr32 fs (bad) 
  43754b:	pop    rdi
  43754c:	gs jbe 0x4375b4
  43754f:	outs   dx,BYTE PTR ds:[rsi]
  437550:	je     0x4375b1
  437552:	jo     0x43757e
  437554:	sub    DWORD PTR [rax],eax
	...
  43755e:	add    BYTE PTR [rax],al
  437560:	addr32 fs (bad) 
  437563:	pop    rdi
  437564:	gs jbe 0x4375cc
  437567:	outs   dx,BYTE PTR ds:[rsi]
  437568:	je     0x437594
  43756a:	and    BYTE PTR [rcx+0x75],dh
  43756d:	gs jne 0x4375d5
  437570:	pop    rdi
  437571:	addr32 fs (bad) 
  437574:	pop    rdi
  437575:	gs jbe 0x4375dd
  437578:	outs   dx,BYTE PTR ds:[rsi]
  437579:	je     0x4375da
  43757b:	jo     0x4375dc
  43757d:	fs gs jno 0x4375f6
  437581:	sub    BYTE PTR gs:[rcx+0x75],dh
  437585:	gs jne 0x4375ed
  437588:	pop    rdi
  437589:	addr32 fs (bad) 
  43758c:	pop    rdi
  43758d:	gs jbe 0x4375f5
  437590:	outs   dx,BYTE PTR ds:[rsi]
  437591:	je     0x4375f2
  437593:	jo     0x4375bf
  437595:	sub    DWORD PTR [rax],eax
	...
  43759f:	add    BYTE PTR [rsi+0x6f],dh
  4375a2:	imul   esp,DWORD PTR [rax+riz*1+0x71],0x65756575
  4375aa:	pop    rdi
  4375ab:	addr32 fs (bad) 
  4375ae:	pop    rdi
  4375af:	gs jbe 0x437617
  4375b2:	outs   dx,BYTE PTR ds:[rsi]
  4375b3:	je     0x437614
  4375b5:	jo     0x437616
  4375b7:	outs   dx,BYTE PTR gs:[rsi]
  4375b9:	jno    0x437630
  4375bb:	sub    BYTE PTR gs:[rcx+0x75],dh
  4375bf:	gs jne 0x437627
  4375c2:	pop    rdi
  4375c3:	addr32 fs (bad) 
  4375c6:	pop    rdi
  4375c7:	gs jbe 0x43762f
  4375ca:	outs   dx,BYTE PTR ds:[rsi]
  4375cb:	je     0x43762c
  4375cd:	jo     0x4375f9
  4375cf:	sub    al,0x20
  4375d1:	addr32 fs (bad) 
  4375d4:	pop    rdi
  4375d5:	gs jbe 0x43763d
  4375d8:	outs   dx,BYTE PTR ds:[rsi]
  4375d9:	je     0x43763a
  4375db:	jo     0x437606
	...
  4375fd:	add    BYTE PTR [rax],al
  4375ff:	add    BYTE PTR [rdi+0x61],dl
  437602:	outs   dx,BYTE PTR ds:[rsi]
  437603:	je     0x437625
  437605:	je     0x437676
  437607:	and    BYTE PTR [rcx+0x6c],ah
  43760a:	ins    BYTE PTR es:[rdi],dx
  43760b:	outs   dx,DWORD PTR ds:[rsi]
  43760c:	movsxd esp,DWORD PTR [rcx+0x74]
  43760f:	and    BYTE PTR gs:[rip+0x252b646c],ah        # 0x256eda82
  437616:	ins    BYTE PTR es:[rdi],dx
  437617:	and    BYTE PTR fs:[rdx+0x79],ah
  43761b:	je     0x437682
  43761d:	jae    0x43763f
  43761f:	imul   ebp,DWORD PTR [rsi+0x20],0x63617274
  437626:	and    BYTE PTR gs:[rdx+0x75],ah
  43762a:	data16 data16 gs jb 0x43762f
  43762f:	or     al,BYTE PTR [rax]
  437631:	add    BYTE PTR [rax],al
  437633:	add    BYTE PTR [rax],al
  437635:	add    BYTE PTR [rax],al
  437637:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  43763b:	movsxd esp,DWORD PTR [rbp+0x20]
  43763e:	(bad)  
  43763f:	jne    0x4376a7
  437641:	data16 gs jb 0x437665
  437645:	pop    rbx
  437646:	and    eax,0x73205d64
  43764b:	je     0x4376ae
  43764d:	jb     0x4376c3
  43764f:	cmp    eax,0x66206425
  437654:	jb     0x4376bb
  437656:	gs cmp eax,0x65206425
  43765c:	outs   dx,BYTE PTR ds:[rsi]
  43765d:	fs data16 jb 0x4376c6
  437661:	gs cmp eax,0x77206425
  437667:	jb     0x4376ca
  437669:	jo     0x4376a8
  43766b:	and    eax,0x69682064
  437670:	cmp    eax,0x6425
  437675:	add    BYTE PTR [rax],al
  437677:	add    BYTE PTR [rbp+0x70],dl
  43767a:	jo     0x4376e1
  43767c:	jb     0x43769e
  43767e:	jo     0x4376e1
  437680:	jb     0x4376f6
  437682:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  437686:	and    BYTE PTR [rbx+0x6d],dh
  437689:	(bad)  
  43768a:	ins    BYTE PTR es:[rdi],dx
  43768b:	ins    BYTE PTR es:[rdi],dx
  43768c:	sub    al,0x20
  43768e:	jae    0x4376f5
  437690:	je     0x437706
  437692:	imul   ebp,DWORD PTR [rsi+0x67],0x61727720
  437699:	jo     0x4376fc
  43769b:	jb     0x43770c
  43769d:	jne    0x43770d
  43769f:	add    BYTE PTR fs:[rax],al
  4376a2:	add    BYTE PTR [rax],al
  4376a4:	add    BYTE PTR [rax],al
  4376a6:	add    BYTE PTR [rax],al
  4376a8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4376aa:	je     0x4376cc
  4376ac:	outs   dx,BYTE PTR gs:[rsi]
  4376ae:	outs   dx,DWORD PTR ds:[rsi]
  4376af:	jne    0x437718
  4376b1:	push   0x61707320
  4376b6:	movsxd esp,DWORD PTR [rbp+0x20]
  4376b9:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4376c0:	je     0x437734
  4376c2:	(bad)  
  4376c3:	movsxd esp,DWORD PTR [rbp+0x20]
  4376c6:	(bad)  
  4376c7:	jne    0x43772f
  4376c9:	data16 gs jb 0x4376cd
  4376cd:	add    BYTE PTR [rax],al
  4376cf:	add    BYTE PTR [rsi+0x65],cl
  4376d2:	gs and BYTE PTR fs:[rbp+0x6f],ch
  4376d7:	jb     0x43773e
  4376d9:	and    BYTE PTR [rbx+0x70],dh
  4376dc:	(bad)  
  4376dd:	movsxd esp,DWORD PTR [rbp+0x20]
  4376e0:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4376e7:	je     0x43775b
  4376e9:	(bad)  
  4376ea:	movsxd esp,DWORD PTR [rbp+0x20]
  4376ed:	(bad)  
  4376ee:	jne    0x437756
  4376f0:	data16 gs jb 0x4376f4
  4376f4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4376f6:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4376fa:	movsxd esp,DWORD PTR [rbp+0x66]
  4376fd:	jb     0x437760
  4376ff:	ins    DWORD PTR es:[rdi],dx
  437700:	gs jae 0x437723
  437703:	je     0x437774
  437705:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  437709:	movsxd esp,DWORD PTR [rcx+0x72]
  43770c:	add    BYTE PTR fs:[rax],al
  43770f:	add    BYTE PTR [rcx+rbp*2+0x73],al
  437713:	movsxd esp,DWORD PTR [rcx+0x72]
  437716:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73617020
  43771e:	je     0x437740
  437720:	je     0x43778a
  437722:	and    BYTE PTR gs:[rdi+0x72],dh
  437726:	(bad)  
  437727:	jo     0x43778a
  437729:	jb     0x43779a
  43772b:	jne    0x43779b
  43772d:	add    BYTE PTR fs:[rax],al
  437730:	imul   r14d,DWORD PTR [rbx+0x63],0x65647261
  437738:	and    BYTE PTR fs:[rcx+0x20],ah
  43773c:	je     0x4377b0
  43773e:	(bad)  
  43773f:	movsxd esp,DWORD PTR [rbp+0x66]
  437742:	jb     0x4377a5
  437744:	ins    DWORD PTR es:[rdi],dx
  437745:	or     dl,BYTE PTR gs:[rdx+rsi*2+0x61]
  43774a:	movsxd esp,DWORD PTR [rbp+0x20]
  43774d:	(bad)  
  43774e:	jne    0x4377b6
  437750:	data16 gs jb 0x437774
  437754:	pop    rbx
  437755:	and    eax,0x202c5d64
  43775a:	jae    0x4377d0
  43775c:	(bad)  
  43775d:	jb     0x4377d3
  43775f:	cmp    eax,0x66206425
  437764:	jb     0x4377cb
  437766:	gs cmp eax,0x65206425
  43776c:	outs   dx,BYTE PTR ds:[rsi]
  43776d:	fs data16 jb 0x4377d6
  437771:	gs cmp eax,0x77206425
  437777:	jb     0x4377da
  437779:	jo     0x4377b8
  43777b:	and    eax,0x69682064
  437780:	cmp    eax,0x41006425
  437785:	ins    BYTE PTR es:[rdi],dx
  437786:	ins    BYTE PTR es:[rdi],dx
  437787:	outs   dx,DWORD PTR ds:[rsi]
  437788:	movsxd esp,DWORD PTR [rcx+0x74]
  43778b:	gs and BYTE PTR fs:[rip+0x79622064],ah        # 0x79a597f7
  437793:	je     0x4377fa
  437795:	jae    0x437797
  437797:	add    BYTE PTR [rbx+0x6c],ah
  43779a:	(bad)  
  43779b:	imul   ebp,DWORD PTR [rbp+0x5f],0x706d756a
  4377a2:	pop    rdi
  4377a3:	jae    0x437815
  4377a5:	(bad)  
  4377a6:	movsxd esp,DWORD PTR [rbp+0x20]
  4377a9:	jb     0x437810
  4377ab:	jae    0x437812
  4377ad:	jb     0x437825
  4377af:	gs jae 0x4377d2
  4377b2:	and    eax,0x79622073
  4377b7:	je     0x43781e
  4377b9:	jae    0x4377db
  4377bb:	(bad)  
  4377bc:	je     0x4377de
  4377be:	and    eax,0x73
  4377c3:	add    BYTE PTR [rax],al
  4377c5:	add    BYTE PTR [rax],al
  4377c7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  4377cb:	movsxd esp,DWORD PTR [rbp+0x70]
  4377ce:	outs   dx,DWORD PTR ds:[rsi]
  4377cf:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  4377d6:	(bad)  
  4377d7:	je     0x4377f9
  4377d9:	and    eax,0x73252073
  4377de:	and    BYTE PTR [rbp+0x76],ah
  4377e1:	(bad)  
  4377e2:	ins    BYTE PTR es:[rdi],dx
  4377e3:	and    BYTE PTR [rdx+0x65],dh
  4377e6:	jo     0x437857
  4377e8:	jb     0x43785e
  4377ea:	jae    0x43780c
  4377ec:	gs jb  0x437861
  4377ef:	outs   dx,DWORD PTR ds:[rsi]
  4377f0:	jb     0x437812
  4377f2:	and    eax,0x64
  4377f7:	add    BYTE PTR [rdx+0x75],dh
  4377fa:	outs   dx,BYTE PTR ds:[rsi]
  4377fb:	pop    rdi
  4377fc:	imul   ebp,DWORD PTR [rsi+0x66],0x6f697265
  437803:	jb     0x437864
  437805:	movsxd ebp,DWORD PTR [rdi+0x6d]
  437808:	ins    DWORD PTR es:[rdi],dx
  437809:	(bad)  
  43780a:	outs   dx,BYTE PTR ds:[rsi]
  43780b:	cmp    ah,BYTE PTR fs:[rax]
  43780e:	jb     0x437885
  437810:	outs   dx,BYTE PTR ds:[rsi]
  437811:	outs   dx,BYTE PTR ds:[rsi]
  437812:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
  437819:	add    BYTE PTR [rcx+0x6e],cl
  43781c:	sub    eax,0x636f7270
  437821:	gs jae 0x437897
  437824:	and    BYTE PTR [rcx+0x67],ah
  437827:	outs   dx,BYTE PTR gs:[rsi]
  437829:	je     0x43784b
  43782b:	outs   dx,BYTE PTR ds:[rsi]
  43782c:	outs   dx,DWORD PTR ds:[rsi]
  43782d:	je     0x43784f
  43782f:	ins    BYTE PTR es:[rdi],dx
  437830:	outs   dx,DWORD PTR ds:[rsi]
  437831:	(bad)  
  437832:	fs gs add BYTE PTR fs:[rax],al
  437837:	add    BYTE PTR [rbp+0x72],al
  43783a:	jb     0x4378ab
  43783c:	jb     0x43785e
  43783e:	jb     0x4378a5
  437840:	(bad)  
  437841:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74737520
  437849:	pop    rdi
  43784a:	ins    BYTE PTR es:[rdi],dx
  43784b:	outs   dx,DWORD PTR ds:[rsi]
  43784c:	(bad)  
  43784d:	fs gs and BYTE PTR fs:[rcx+0x6e],ch
  437853:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  437857:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  43785b:	(bad)  
  43785c:	(bad)  
  43785d:	ins    BYTE PTR es:[rdi],dx
  43785e:	gs add BYTE PTR fs:[rbp+0x6e],ah
  437863:	(bad)  
  437864:	(bad)  
  437865:	ins    BYTE PTR es:[rdi],dx
  437866:	gs add BYTE PTR fs:[rcx+rbp*2+0x73],al
  43786c:	(bad)  
  43786d:	(bad)  
  43786e:	ins    BYTE PTR es:[rdi],dx
  43786f:	imul   ebp,DWORD PTR [rsi+0x67],0x616e4500
  437876:	(bad)  
  437877:	ins    BYTE PTR es:[rdi],dx
  437878:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  43787f:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  437883:	movsxd esp,DWORD PTR [rbp+0x70]
  437886:	outs   dx,DWORD PTR ds:[rsi]
  437887:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  43788e:	(bad)  
  43788f:	je     0x4378b1
  437891:	xor    BYTE PTR [rax+0x25],bh
  437894:	jae    0x4378b6
  437896:	imul   esi,DWORD PTR [rbx+0x20],0x65726c61
  43789d:	(bad)  
  43789e:	fs jns 0x4378c1
  4378a1:	and    eax,0x73250073
  4378a6:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4378aa:	movsxd esp,DWORD PTR [rbp+0x70]
  4378ad:	outs   dx,DWORD PTR ds:[rsi]
  4378ae:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  4378b5:	(bad)  
  4378b6:	je     0x4378d8
  4378b8:	xor    BYTE PTR [rax+0x25],bh
  4378bb:	jae    0x4378bd
  4378bd:	add    BYTE PTR [rax],al
  4378bf:	add    BYTE PTR [rsi+0x61],al
  4378c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4378ca:	je     0x437931
  4378cc:	ins    DWORD PTR es:[rdi],dx
  4378cd:	jo     0x43793e
  4378cf:	jb     0x437932
  4378d1:	jb     0x43793c
  4378d3:	ins    BYTE PTR es:[rdi],dx
  4378d4:	jns    0x4378f6
  4378d6:	jae    0x43794c
  4378d8:	outs   dx,DWORD PTR ds:[rsi]
  4378d9:	jo     0x4378fb
  4378db:	imul   ebp,DWORD PTR [rsi+0x66],0x6f697265
  4378e2:	jb     0x437904
  4378e4:	je     0x43794e
  4378e6:	jb     0x43794d
  4378e8:	(bad)  
  4378e9:	fs jae 0x4378ec
  4378ec:	add    BYTE PTR [rax],al
  4378ee:	add    BYTE PTR [rax],al
  4378f0:	rex.XB (bad) 
  4378f2:	outs   dx,BYTE PTR ds:[rsi]
  4378f3:	outs   dx,BYTE PTR ds:[rsi]
  4378f4:	outs   dx,DWORD PTR ds:[rsi]
  4378f5:	je     0x437917
  4378f7:	ja     0x43796b
  4378f9:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x62616e65
  437901:	ins    BYTE PTR es:[rdi],dx
  437902:	gs and BYTE PTR fs:[rsi+0x6c],ah
  437907:	(bad)  
  437908:	and    BYTE PTR [ecx+0x6e],ch
  43790c:	je     0x43797d
  43790e:	and    BYTE PTR [rcx+0x6e],ch
  437911:	data16 gs jb 0x43797e
  437915:	outs   dx,DWORD PTR ds:[rsi]
  437916:	jb     0x437938
  437918:	jo     0x43798c
  43791a:	outs   dx,DWORD PTR ds:[rsi]
  43791b:	movsxd esp,DWORD PTR [rbp+0x73]
  43791e:	jae    0x437940
  437920:	ins    DWORD PTR es:[rdi],dx
  437921:	gs ins DWORD PTR es:[rdi],dx
  437923:	outs   dx,DWORD PTR ds:[rsi]
  437924:	jb     0x43799f
  437926:	add    BYTE PTR [rax],al
  437928:	push   rsp
  437929:	jb     0x43798c
  43792b:	movsxd esp,DWORD PTR [rbp+0x70]
  43792e:	outs   dx,DWORD PTR ds:[rsi]
  43792f:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  437936:	(bad)  
  437937:	je     0x437959
  437939:	xor    BYTE PTR [rax+0x25],bh
  43793c:	jae    0x43795e
  43793e:	outs   dx,BYTE PTR ds:[rsi]
  43793f:	outs   dx,DWORD PTR ds:[rsi]
  437940:	je     0x437962
  437942:	outs   dx,WORD PTR ds:[rsi]
  437944:	jne    0x4379b4
  437946:	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  43794b:	and    BYTE PTR [rax+0x69],ch
  43794e:	je     0x437970
  437950:	data16 ins BYTE PTR es:[rdi],dx
  437952:	jne    0x4379c7
  437954:	push   0x6172745f
  437959:	movsxd esp,DWORD PTR [rbp+0x5f]
  43795c:	(bad)  
  43795d:	jne    0x4379c5
  43795f:	data16 gs jb 0x437963
  437963:	ins    BYTE PTR es:[rdi],dx
  437964:	imul   esp,DWORD PTR [rdx+0x20],0x20746968
  43796b:	jae    0x4379e1
  43796d:	outs   dx,DWORD PTR ds:[rsi]
  43796e:	jo     0x4379cf
  437970:	je     0x4379e4
  437972:	(bad)  
  437973:	movsxd ebp,DWORD PTR [rcx+0x6e]
  437976:	add    BYTE PTR [eip+0x41203a73],ah        # 0x4163b3f0
  43797d:	jae    0x4379f2
  43797f:	gs jb  0x4379f6
  437982:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  437989:	(bad)  
  43798a:	and    BYTE PTR [rsi+0x61],ah
  43798d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7274002e
  437995:	(bad)  
  437996:	movsxd esp,DWORD PTR [rbp+0x70]
  437999:	outs   dx,DWORD PTR ds:[rsi]
  43799a:	imul   ebp,DWORD PTR [rsi+0x74],0x7400632e
  4379a1:	data16 jb 0x437a05
  4379a4:	ins    DWORD PTR es:[rdi],dx
  4379a5:	gs sub eax,0x6e70743e
  4379ab:	jne    0x437a1a
  4379ad:	and    BYTE PTR [rip+0x7074203d],bh        # 0x70b799f0
  4379b3:	outs   dx,DWORD PTR ds:[rsi]
  4379b4:	imul   ebp,DWORD PTR [rsi+0x74],0x756e3e2d
  4379bb:	ins    DWORD PTR es:[rdi],dx
  4379bc:	(bad)  
  4379bd:	gs jb  0x4379c0
  4379c0:	jb     0x437a27
  4379c2:	movsxd esp,DWORD PTR [ecx+0x63]
  4379c6:	push   0x3d212065
  4379cb:	and    BYTE PTR [rsi+0x55],cl
  4379ce:	rex.WR
  4379cf:	rex.WR add BYTE PTR [rax],r8b
  4379d2:	add    BYTE PTR [rax],al
  4379d4:	add    BYTE PTR [rax],al
  4379d6:	add    BYTE PTR [rax],al
  4379d8:	je     0x437a4c
  4379da:	(bad)  
  4379db:	movsxd esp,DWORD PTR [rbp+0x70]
  4379de:	outs   dx,DWORD PTR ds:[rsi]
  4379df:	imul   ebp,DWORD PTR [rsi+0x74],0x6e61685f
  4379e6:	fs ins BYTE PTR es:[rdi],dx
  4379e8:	gs jb  0x437a25
  4379eb:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4379ef:	movsxd esp,DWORD PTR [rbp+0x70]
  4379f2:	outs   dx,DWORD PTR ds:[rsi]
  4379f3:	imul   ebp,DWORD PTR [rsi+0x74],0x20746120
  4379fa:	xor    BYTE PTR [rax+0x25],bh
  4379fd:	jae    0x437a1f
  4379ff:	push   0x7469
  437a04:	add    BYTE PTR [rax],al
  437a06:	add    BYTE PTR [rax],al
  437a08:	gs jb  0x437a7d
  437a0b:	outs   dx,DWORD PTR ds:[rsi]
  437a0c:	jb     0x437a2e
  437a0e:	gs js  0x437a85
  437a11:	jb     0x437a74
  437a13:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  437a17:	and    BYTE PTR [edx+0x75],ch
  437a1b:	ins    DWORD PTR es:[rdi],dx
  437a1c:	jo     0x437a7d
  437a1e:	jo     0x437a81
  437a20:	fs pop rdi
  437a22:	(bad)  
  437a23:	jne    0x437a8b
  437a25:	data16 gs jb 0x437a29
  437a29:	add    BYTE PTR [rax],al
  437a2b:	add    BYTE PTR [rax],al
  437a2d:	add    BYTE PTR [rax],al
  437a2f:	add    BYTE PTR [rbx+0x6f],ah
  437a32:	jne    0x437aa0
  437a34:	outs   dx,BYTE PTR fs:[rsi]
  437a36:	(bad)  
  437a37:	je     0x437a59
  437a39:	addr32 gs je 0x437a5d
  437a3d:	je     0x437aa0
  437a3f:	jb     0x437aa8
  437a41:	gs je  0x437a64
  437a44:	push   0x20706165
  437a49:	push   0x20646165
  437a4e:	jo     0x437abf
  437a50:	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  437a57:	add    BYTE PTR [rax+rsi*2+0x6f],dh
  437a5b:	imul   ebp,DWORD PTR [rsi+0x74],0x79743e2d
  437a62:	jo     0x437ac9
  437a64:	and    BYTE PTR [rip+0x6166203d],bh        # 0x61a99aa7
  437a6a:	jae    0x437ae0
  437a6c:	pop    rdi
  437a6d:	je     0x437ae1
  437a6f:	(bad)  
  437a70:	movsxd esp,DWORD PTR [rbp+0x70]
  437a73:	outs   dx,DWORD PTR ds:[rsi]
  437a74:	imul   ebp,DWORD PTR [rsi+0x74],0x207c7c20
  437a7b:	je     0x437aed
  437a7d:	outs   dx,DWORD PTR ds:[rsi]
  437a7e:	imul   ebp,DWORD PTR [rsi+0x74],0x79743e2d
  437a85:	jo     0x437aec
  437a87:	and    BYTE PTR [rip+0x7473203d],bh        # 0x74b69aca
  437a8d:	(bad)  
  437a8e:	je     0x437af9
  437a90:	movsxd ebx,DWORD PTR [rdi+0x74]
  437a93:	jb     0x437af6
  437a95:	movsxd esp,DWORD PTR [rbp+0x70]
  437a98:	outs   dx,DWORD PTR ds:[rsi]
  437a99:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  437aa0:	push   rbx
  437aa1:	je     0x437b04
  437aa3:	jb     0x437b19
  437aa5:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  437aac:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6f63206e
  437ab5:	ins    DWORD PTR es:[rdi],dx
  437ab6:	jo     0x437b21
  437ab8:	ins    BYTE PTR es:[rdi],dx
  437ab9:	(bad)  
  437aba:	je     0x437b25
  437abc:	outs   dx,DWORD PTR ds:[rsi]
  437abd:	outs   dx,BYTE PTR ds:[rsi]
  437abe:	and    BYTE PTR [rsi+0x6f],ah
  437ac1:	jb     0x437ae3
  437ac3:	je     0x437b37
  437ac5:	(bad)  
  437ac6:	movsxd esp,DWORD PTR [rbp+0x70]
  437ac9:	outs   dx,DWORD PTR ds:[rsi]
  437aca:	imul   ebp,DWORD PTR [rsi+0x74],0xa642520
  437ad1:	add    BYTE PTR [rax],al
  437ad3:	add    BYTE PTR [rax],al
  437ad5:	add    BYTE PTR [rax],al
  437ad7:	add    BYTE PTR [rbx+0x6f],al
  437ada:	outs   dx,BYTE PTR ds:[rsi]
  437adb:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6f63206e
  437ae4:	ins    DWORD PTR es:[rdi],dx
  437ae5:	jo     0x437b50
  437ae7:	ins    BYTE PTR es:[rdi],dx
  437ae8:	(bad)  
  437ae9:	je     0x437b54
  437aeb:	outs   dx,DWORD PTR ds:[rsi]
  437aec:	outs   dx,BYTE PTR ds:[rsi]
  437aed:	and    BYTE PTR [rsi+0x6f],ah
  437af0:	jb     0x437b12
  437af2:	je     0x437b66
  437af4:	(bad)  
  437af5:	movsxd esp,DWORD PTR [rbp+0x70]
  437af8:	outs   dx,DWORD PTR ds:[rsi]
  437af9:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  437b00:	movsxd ebp,DWORD PTR [rdi+0x6d]
  437b03:	jo     0x437b71
  437b05:	gs je  0x437b6d
  437b08:	or     al,BYTE PTR [rax]
  437b0a:	add    BYTE PTR [rax],al
  437b0c:	add    BYTE PTR [rax],al
  437b0e:	add    BYTE PTR [rax],al
  437b10:	rex.XB outs dx,DWORD PTR ds:[rsi]
  437b12:	outs   dx,BYTE PTR ds:[rsi]
  437b13:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6f63206e
  437b1c:	ins    DWORD PTR es:[rdi],dx
  437b1d:	jo     0x437b88
  437b1f:	ins    BYTE PTR es:[rdi],dx
  437b20:	(bad)  
  437b21:	je     0x437b8c
  437b23:	outs   dx,DWORD PTR ds:[rsi]
  437b24:	outs   dx,BYTE PTR ds:[rsi]
  437b25:	and    BYTE PTR [rsi+0x6f],ah
  437b28:	jb     0x437b4a
  437b2a:	je     0x437b9e
  437b2c:	(bad)  
  437b2d:	movsxd esp,DWORD PTR [rbp+0x70]
  437b30:	outs   dx,DWORD PTR ds:[rsi]
  437b31:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  437b38:	data16 (bad) 
  437b3a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7265202c
  437b42:	jb     0x437bb3
  437b44:	jb     0x437b66
  437b46:	movsxd ebp,DWORD PTR [rdi+0x64]
  437b49:	and    BYTE PTR gs:[rip+0x6e550064],ah        # 0x6e987bb4
  437b50:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  437b54:	outs   dx,BYTE PTR ds:[rsi]
  437b55:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  437b59:	movsxd esp,DWORD PTR [rbp+0x20]
  437b5c:	(bad)  
  437b5d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437b61:	outs   dx,BYTE PTR ds:[rsi]
  437b62:	and    BYTE PTR [rdi],ah
  437b64:	and    eax,0x2e2763
  437b69:	data16 jb 0x437bdb
  437b6c:	ins    DWORD PTR es:[rdi],dx
  437b6d:	sub    eax,0x6e61683e
  437b72:	fs ins BYTE PTR es:[rdi],dx
  437b74:	add    BYTE PTR gs:[rax],al
  437b77:	add    BYTE PTR [rdx+0x65],dl
  437b7a:	jno    0x437bf1
  437b7c:	gs jae 0x437bf3
  437b7f:	gs and BYTE PTR fs:[rcx+0x20],ah
  437b84:	data16 (bad) 
  437b86:	jae    0x437bfc
  437b88:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  437b8c:	movsxd esp,DWORD PTR [rbp+0x70]
  437b8f:	outs   dx,DWORD PTR ds:[rsi]
  437b90:	imul   ebp,DWORD PTR [rsi+0x74],0x206e6f20
  437b97:	(bad)  
  437b98:	outs   dx,BYTE PTR ds:[rsi]
  437b99:	and    BYTE PTR [rcx+0x6e],ch
  437b9c:	jae    0x437c12
  437b9e:	jb     0x437c15
  437ba0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437ba4:	outs   dx,BYTE PTR ds:[rsi]
  437ba5:	and    BYTE PTR [rax+rbp*2+0x61],dh
  437ba9:	je     0x437bcb
  437bab:	imul   esi,DWORD PTR [rbx+0x20],0x6c20666f
  437bb2:	gs jae 0x437c28
  437bb5:	and    BYTE PTR [rax+rbp*2+0x61],dh
  437bb9:	outs   dx,BYTE PTR ds:[rsi]
  437bba:	and    BYTE PTR [rax+rbp*2+0x65],dh
  437bbe:	and    BYTE PTR [rbp+0x69],ch
  437bc1:	outs   dx,BYTE PTR ds:[rsi]
  437bc2:	imul   ebp,DWORD PTR [rbp+0x75],0x656c206d
  437bc9:	outs   dx,BYTE PTR ds:[rsi]
  437bca:	addr32 je 0x437c35
  437bcd:	add    BYTE PTR cs:[rax],al
  437bd0:	gs jb  0x437c45
  437bd3:	outs   dx,DWORD PTR ds:[rsi]
  437bd4:	jb     0x437bf6
  437bd6:	gs js  0x437c4d
  437bd9:	jb     0x437c3c
  437bdb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  437bdf:	and    BYTE PTR [edi+0x64],ah
  437be3:	(bad)  
  437be4:	pop    rdi
  437be5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  437be8:	ins    BYTE PTR es:[rdi],dx
  437be9:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x70]
  437bee:	je     0x437c62
	...
  437bf8:	je     0x437c6c
  437bfa:	(bad)  
  437bfb:	movsxd esp,DWORD PTR [rbp+0x66]
  437bfe:	jb     0x437c61
  437c00:	ins    DWORD PTR es:[rdi],dx
  437c01:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61ab9c6c
  437c08:	jae    0x437c2a
  437c0a:	jne    0x437c7a
  437c0c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  437c10:	outs   dx,BYTE PTR ds:[rsi]
  437c11:	and    BYTE PTR [rdx+0x6c],ah
  437c14:	outs   dx,DWORD PTR ds:[rsi]
  437c15:	movsxd ebp,DWORD PTR [rbx+0x20]
  437c18:	je     0x437c93
  437c1a:	jo     0x437c81
  437c1c:	and    BYTE PTR [rax],dh
  437c1e:	js     0x437c45
  437c20:	js     0x437c22
  437c22:	je     0x437c96
  437c24:	(bad)  
  437c25:	movsxd esp,DWORD PTR [rbp+0x66]
  437c28:	jb     0x437c8b
  437c2a:	ins    DWORD PTR es:[rdi],dx
  437c2b:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61ab9c96
  437c32:	jae    0x437c54
  437c34:	outs   dx,BYTE PTR ds:[rsi]
  437c35:	outs   dx,DWORD PTR ds:[rsi]
  437c36:	and    BYTE PTR [rcx+riz*2+0x74],ah
  437c3a:	(bad)  
  437c3b:	add    BYTE PTR [rax],al
  437c3d:	add    BYTE PTR [rax],al
  437c3f:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  437c43:	movsxd esp,DWORD PTR [rbp+0x66]
  437c46:	jb     0x437ca9
  437c48:	ins    DWORD PTR es:[rdi],dx
  437c49:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61ab9cb4
  437c50:	jae    0x437c72
  437c52:	outs   dx,BYTE PTR ds:[rsi]
  437c53:	outs   dx,DWORD PTR ds:[rsi]
  437c54:	and    BYTE PTR [rdx+0x65],dh
  437c57:	imul   esi,DWORD PTR [ebx+0x74],0x64207265
  437c5f:	(bad)  
  437c60:	je     0x437cc3
  437c62:	add    BYTE PTR [rax],al
  437c64:	add    BYTE PTR [rax],al
  437c66:	add    BYTE PTR [rax],al
  437c68:	cmp    al,0x6d
  437c6a:	gs ins DWORD PTR es:[rdi],dx
  437c6c:	outs   dx,DWORD PTR ds:[rsi]
  437c6d:	jb     0x437ce8
  437c6f:	and    BYTE PTR [rbx+0x74],dh
  437c72:	(bad)  
  437c73:	jb     0x437ce9
  437c75:	cmp    eax,0x25783022
  437c7a:	jae    0x437c9e
  437c7c:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  437c80:	addr32 je 0x437ceb
  437c83:	cmp    eax,0x25783022
  437c88:	jae    0x437cac
  437c8a:	(bad)  
  437c8b:	or     al,BYTE PTR ds:[rax]
  437c8e:	cmp    al,0x74
  437c90:	jbe    0x437cf3
  437c92:	jb     0x437cb4
  437c94:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x2f226425
  437c9c:	or     al,BYTE PTR ds:[rax]
  437c9f:	add    BYTE PTR [rbp+0x6e],dl
  437ca2:	push   0x6c646e61
  437ca7:	gs and BYTE PTR fs:[rdx+rsi*2+0x61],dh
  437cad:	movsxd esp,DWORD PTR [rbp+0x20]
  437cb0:	(bad)  
  437cb1:	ins    BYTE PTR es:[rdi],dx
  437cb2:	outs   dx,DWORD PTR ds:[rsi]
  437cb3:	movsxd ebp,DWORD PTR [rbx+0x20]
  437cb6:	je     0x437d31
  437cb8:	jo     0x437d1f
  437cba:	and    BYTE PTR [rax],ch
  437cbc:	and    eax,0x27202964
  437cc1:	and    eax,0x20272063
  437cc6:	ja     0x437d30
  437cc8:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6c697562
  437cd0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x61727420
  437cd8:	movsxd esp,DWORD PTR [rbp+0x20]
  437cdb:	data16 jb 0x437d3f
  437cde:	ins    DWORD PTR es:[rdi],dx
  437cdf:	and    BYTE PTR gs:[rcx+0x6e],ch
  437ce3:	outs   dx,WORD PTR ds:[rsi]
  437ce5:	add    BYTE PTR cs:[rip+0x79622064],ah        # 0x79a59d50
  437cec:	je     0x437d53
  437cee:	jae    0x437d10
  437cf0:	jb     0x437d57
  437cf2:	movsxd ebp,DWORD PTR [rdi+0x72]
  437cf5:	fs gs add BYTE PTR fs:[rax],al
  437cfa:	add    BYTE PTR [rax],al
  437cfc:	add    BYTE PTR [rax],al
  437cfe:	add    BYTE PTR [rax],al
  437d00:	push   rdi
  437d01:	(bad)  
  437d02:	outs   dx,BYTE PTR ds:[rsi]
  437d03:	je     0x437d25
  437d05:	je     0x437d76
  437d07:	and    BYTE PTR [rbx+0x6f],ah
  437d0a:	ins    BYTE PTR es:[rdi],dx
  437d0b:	ins    BYTE PTR es:[rdi],dx
  437d0c:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x25]
  437d11:	jae    0x437d33
  437d13:	(bad)  
  437d14:	jns    0x437d8a
  437d16:	gs jae 0x437d39
  437d19:	(bad)  
  437d1a:	je     0x437d3c
  437d1c:	xor    BYTE PTR [rax+0x25],bh
  437d1f:	jae    0x437d41
  437d21:	sub    BYTE PTR [rdx+0x61],ah
  437d24:	jae    0x437d8b
  437d26:	jb     0x437d8d
  437d28:	and    BYTE PTR [eip+0x57002964],ah        # 0x5743a693
  437d2f:	(bad)  
  437d30:	outs   dx,BYTE PTR ds:[rsi]
  437d31:	je     0x437d53
  437d33:	je     0x437da4
  437d35:	and    BYTE PTR [rbx+0x6f],ah
  437d38:	ins    BYTE PTR es:[rdi],dx
  437d39:	ins    BYTE PTR es:[rdi],dx
  437d3a:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x72]
  437d3f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x737265
  437d48:	push   rsp
  437d49:	jb     0x437dac
  437d4b:	movsxd esp,DWORD PTR [rbp+0x20]
  437d4e:	(bad)  
  437d4f:	jne    0x437db7
  437d51:	data16 gs jb 0x437d75
  437d55:	(bad)  
  437d56:	ins    BYTE PTR es:[rdi],dx
  437d57:	outs   dx,DWORD PTR ds:[rsi]
  437d58:	movsxd ebp,DWORD PTR [rbx+0x20]
  437d5b:	(bad)  
  437d5c:	ins    BYTE PTR es:[rdi],dx
  437d5d:	ins    BYTE PTR es:[rdi],dx
  437d5e:	outs   dx,DWORD PTR ds:[rsi]
  437d5f:	movsxd esp,DWORD PTR [rcx+0x74]
  437d62:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  437d69:	ins    BYTE PTR es:[rdi],dx
  437d6a:	gs fs sub al,0x20
  437d6e:	jae    0x437ddb
  437d70:	imul   esi,DWORD PTR [rax+0x70],0x676e69
  437d77:	add    BYTE PTR [rbx+0x74],dl
  437d7a:	outs   dx,DWORD PTR ds:[rsi]
  437d7b:	jb     0x437de6
  437d7d:	outs   dx,BYTE PTR ds:[rsi]
  437d7e:	and    BYTE PTR [ebx+0x74],dh
  437d82:	outs   dx,DWORD PTR ds:[rsi]
  437d83:	jo     0x437da5
  437d85:	jo     0x437dea
  437d87:	and    BYTE PTR [rax],ch
  437d89:	xor    BYTE PTR [rax+0x25],bh
  437d8c:	jae    0x437db7
  437d8e:	and    BYTE PTR [rcx+0x6e],ch
  437d91:	and    BYTE PTR [rdx+0x65],dh
  437d94:	addr32 (bad) 
  437d96:	ins    BYTE PTR es:[rdi],dx
  437d97:	outs   dx,DWORD PTR ds:[rsi]
  437d98:	movsxd ebp,DWORD PTR [rbx+0x0]
  437d9b:	push   rdi
  437d9c:	(bad)  
  437d9d:	outs   dx,BYTE PTR ds:[rsi]
  437d9e:	je     0x437dc0
  437da0:	je     0x437e11
  437da2:	and    BYTE PTR [rbp+0x76],ah
  437da5:	(bad)  
  437da6:	ins    BYTE PTR es:[rdi],dx
  437da7:	jne    0x437e0a
  437da9:	je     0x437e10
  437dab:	and    BYTE PTR [rbp+0x78],ah
  437dae:	jo     0x437e22
  437db0:	gs jae 0x437e26
  437db3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74636100
  437dba:	imul   ebp,DWORD PTR [rdi+0x6e],0x70786520
  437dc1:	jb     0x437e28
  437dc3:	jae    0x437e38
  437dc5:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  437dcc:	add    BYTE PTR [rax],al
  437dce:	add    BYTE PTR [rax],al
  437dd0:	ja     0x437e33
  437dd2:	jb     0x437e42
  437dd4:	imul   ebp,DWORD PTR [rsi+0x67],0x6f63203a
  437ddb:	ins    BYTE PTR es:[rdi],dx
  437ddc:	ins    BYTE PTR es:[rdi],dx
  437ddd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  437de2:	and    BYTE PTR [ebx+0x74],dh
  437de6:	(bad)  
  437de7:	je     0x437e52
  437de9:	movsxd esp,DWORD PTR [rax]
  437deb:	je     0x437e5f
  437ded:	(bad)  
  437dee:	movsxd esp,DWORD PTR [rbp+0x20]
  437df1:	fs (bad) 
  437df3:	je     0x437e56
  437df5:	sub    al,0x20
  437df7:	(bad)  
  437df8:	jne    0x437e6e
  437dfa:	and    BYTE PTR [rbx+0x74],dh
  437dfd:	(bad)  
  437dfe:	je     0x437e69
  437e00:	movsxd esp,DWORD PTR [rax]
  437e02:	je     0x437e76
  437e04:	(bad)  
  437e05:	movsxd esp,DWORD PTR [rbp+0x70]
  437e08:	outs   dx,DWORD PTR ds:[rsi]
  437e09:	imul   ebp,DWORD PTR [rsi+0x74],0x72612073
  437e10:	and    BYTE PTR gs:[rsi+0x6f],ch
  437e14:	je     0x437e36
  437e16:	jae    0x437e8d
  437e18:	jo     0x437e8a
  437e1a:	outs   dx,DWORD PTR ds:[rsi]
  437e1b:	jb     0x437e91
  437e1d:	gs add BYTE PTR fs:[rbp+0x6e],dh
  437e22:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  437e26:	outs   dx,BYTE PTR ds:[rsi]
  437e27:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  437e2b:	movsxd esp,DWORD PTR [rbp+0x20]
  437e2e:	(bad)  
  437e2f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437e33:	outs   dx,BYTE PTR ds:[rsi]
  437e34:	and    BYTE PTR [rdi],ah
  437e36:	and    eax,0x202c2763
  437e3b:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  437e42:	add    BYTE PTR [edi+0x4b],cl
  437e46:	add    BYTE PTR [rax],al
  437e48:	(bad)  
  437e49:	outs   dx,BYTE PTR gs:[esi]
  437e4c:	je     0x437e88
  437e4e:	and    BYTE PTR [rdx+0x65],dh
  437e51:	(bad)  
  437e52:	and    BYTE PTR fs:[rsi+0x72],ah
  437e56:	outs   dx,DWORD PTR ds:[rsi]
  437e57:	ins    DWORD PTR es:[rdi],dx
  437e58:	and    BYTE PTR [rbx+0x6d],ah
  437e5b:	fs pop rdi
  437e5d:	(bad)  
  437e5e:	jne    0x437ec6
  437e60:	and    BYTE PTR [rax],dh
  437e62:	js     0x437e89
  437e64:	js     0x437e86
  437e66:	xor    BYTE PTR [rax+0x25],bh
  437e69:	js     0x437e75
  437e6b:	add    BYTE PTR [rbp+0x6e],dh
  437e6e:	jo     0x437ee2
  437e70:	outs   dx,DWORD PTR ds:[rsi]
  437e71:	(bad)  
  437e72:	gs pop rdi
  437e74:	ins    DWORD PTR es:[rdi],dx
  437e75:	(bad)  
  437e76:	jb     0x437ee3
  437e78:	gs jb  0x437eda
  437e7b:	(bad)  
  437e7c:	je     0x437eb8
  437e7e:	and    eax,0x73
  437e83:	add    BYTE PTR [rax],al
  437e85:	add    BYTE PTR [rax],al
  437e87:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  437e8b:	movsxd esp,DWORD PTR [rbp+0x70]
  437e8e:	outs   dx,DWORD PTR ds:[rsi]
  437e8f:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  437e96:	(bad)  
  437e97:	je     0x437eb9
  437e99:	xor    BYTE PTR [rax+0x25],bh
  437e9c:	jae    0x437ebe
  437e9e:	ja     0x437f01
  437ea0:	jae    0x437ec2
  437ea2:	outs   dx,BYTE PTR ds:[rsi]
  437ea3:	gs jbe 0x437f0b
  437ea6:	jb     0x437ec8
  437ea8:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  437eaf:	gs fs sub al,0x20
  437eb3:	outs   dx,BYTE PTR ds:[rsi]
  437eb4:	outs   dx,DWORD PTR ds:[rsi]
  437eb5:	je     0x437f1f
  437eb7:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  437ebe:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  437ec2:	jb     0x437ec4
  437ec4:	add    BYTE PTR [rax],al
  437ec6:	add    BYTE PTR [rax],al
  437ec8:	rex.RB
  437ec9:	rex.WB outs dx,BYTE PTR cs:[rsi]
  437ecc:	sub    eax,0x636f7270
  437ed1:	gs jae 0x437f47
  437ed4:	and    BYTE PTR [rcx+0x67],ah
  437ed7:	outs   dx,BYTE PTR gs:[rsi]
  437ed9:	je     0x437efb
  437edb:	ins    BYTE PTR es:[rdi],dx
  437edc:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  437ee3:	outs   dx,BYTE PTR ds:[rsi]
  437ee4:	outs   dx,DWORD PTR ds:[rsi]
  437ee5:	je     0x437f07
  437ee7:	ins    BYTE PTR es:[rdi],dx
  437ee8:	outs   dx,DWORD PTR ds:[rsi]
  437ee9:	(bad)  
  437eea:	fs gs and BYTE PTR fs:[rcx+0x6e],ch
  437ef0:	and    BYTE PTR [rax+0x72],dh
  437ef3:	outs   dx,DWORD PTR ds:[rsi]
  437ef4:	movsxd esp,DWORD PTR [rbp+0x73]
  437ef7:	jae    0x437f27
  437ef9:	and    BYTE PTR [rax],ah
  437efb:	rex.RX (bad) 
  437efd:	jae    0x437f73
  437eff:	and    BYTE PTR [rcx+0x6e],ah
  437f02:	and    BYTE PTR fs:[rbx+0x74],dh
  437f06:	(bad)  
  437f07:	je     0x437f72
  437f09:	movsxd esp,DWORD PTR [rax]
  437f0b:	je     0x437f7f
  437f0d:	(bad)  
  437f0e:	movsxd esp,DWORD PTR [rbp+0x70]
  437f11:	outs   dx,DWORD PTR ds:[rsi]
  437f12:	imul   ebp,DWORD PTR [rsi+0x74],0x6e752073
  437f19:	(bad)  
  437f1a:	jbe    0x437f7d
  437f1c:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x2e656c
  437f24:	add    BYTE PTR [rax],al
  437f26:	add    BYTE PTR [rax],al
  437f28:	rex.RB
  437f29:	cs rex.RXB
  437f2b:	rex.R
  437f2c:	rex.X jae 0x437f94
  437f2f:	jb     0x437fa7
  437f31:	gs jb  0x437f54
  437f34:	ja     0x437f97
  437f36:	jae    0x437f58
  437f38:	(bad)  
  437f39:	jne    0x437fa4
  437f3b:	ins    BYTE PTR es:[rdi],dx
  437f3c:	je     0x437f5e
  437f3e:	ja     0x437fa9
  437f40:	je     0x437faa
  437f42:	outs   dx,DWORD PTR ds:[rsi]
  437f43:	jne    0x437fb9
  437f45:	and    BYTE PTR [rbx+0x74],dh
  437f48:	(bad)  
  437f49:	je     0x437fb4
  437f4b:	movsxd esp,DWORD PTR [rax]
  437f4d:	je     0x437fc1
  437f4f:	(bad)  
  437f50:	movsxd esp,DWORD PTR [rbp+0x70]
  437f53:	outs   dx,DWORD PTR ds:[rsi]
  437f54:	imul   ebp,DWORD PTR [rsi+0x74],0x75732073
  437f5b:	jo     0x437fcd
  437f5d:	outs   dx,DWORD PTR ds:[rsi]
  437f5e:	jb     0x437fd4
  437f60:	add    BYTE PTR [rax+0x72],dh
  437f63:	outs   dx,DWORD PTR ds:[rsi]
  437f64:	(bad)  
  437f65:	gs pop rdi
  437f67:	ins    DWORD PTR es:[rdi],dx
  437f68:	(bad)  
  437f69:	jb     0x437fd6
  437f6b:	gs jb  0x437fcd
  437f6e:	(bad)  
  437f6f:	je     0x437fab
  437f71:	and    eax,0x25540073
  437f76:	js     0x437fb2
  437f78:	and    eax,0x63253a73
  437f7d:	cmp    ah,BYTE PTR [rip+0x3a786c6c]        # 0x3abbebef
  437f83:	and    eax,0x786c6c
  437f88:	cmp    al,BYTE PTR [rsi+0x25]
  437f8b:	js     0x437f8d
  437f8d:	cmp    dl,BYTE PTR [rbx+0x0]
  437f90:	cmp    bl,BYTE PTR [rax+0x25]
  437f93:	js     0x437fc1
  437f95:	and    eax,0x255a0073
  437f9a:	js     0x437fd6
  437f9c:	and    eax,0x73253a73
  437fa1:	cmp    ah,BYTE PTR [rip+0x78253a78]        # 0x7868ba1f
  437fa7:	cmp    ah,BYTE PTR [rip+0x25000073]        # 0x25438020
  437fad:	js     0x437fe9
  437faf:	and    eax,0x78253a73
  437fb4:	cmp    ah,BYTE PTR [rip+0x79730073]        # 0x79b6802d
  437fba:	ins    DWORD PTR es:[rdi],dx
  437fbb:	(bad)  
  437fbc:	outs   dx,DWORD PTR ds:[rsi]
  437fbd:	ins    BYTE PTR es:[rdi],dx
  437fbe:	and    BYTE PTR [rax+0x25],ah
  437fc1:	jae    0x437fea
  437fc3:	and    BYTE PTR [rsi+0x6f],ch
  437fc6:	je     0x437fe8
  437fc8:	outs   dx,WORD PTR ds:[rsi]
  437fca:	jne    0x43803a
  437fcc:	or     al,BYTE PTR fs:[rax]
  437fcf:	add    BYTE PTR [rsi+0x6f],cl
  437fd2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  437fd6:	movsxd esp,DWORD PTR [rbp+0x20]
  437fd9:	jae    0x43804f
  437fdb:	(bad)  
  437fdc:	je     0x438043
  437fde:	and    BYTE PTR [rsi+0x61],dh
  437fe1:	jb     0x43804c
  437fe3:	(bad)  
  437fe4:	(bad)  
  437fe5:	ins    BYTE PTR es:[rdi],dx
  437fe6:	and    BYTE PTR gs:[rip+0x73202c64],ah        # 0x7363ac51
  437fed:	imul   ebp,DWORD PTR [rcx+0x70],0x70
  437ff1:	imul   ebp,DWORD PTR [rsi+0x67],0x6c617620
  437ff8:	jne    0x43805f
  437ffa:	and    BYTE PTR [rdi+0x65],ah
  437ffd:	je     0x437fff
  437fff:	add    BYTE PTR [rdi+0x65],ah
  438002:	je     0x438063
  438004:	je     0x438078
  438006:	(bad)  
  438007:	movsxd esp,DWORD PTR [rbp+0x5f]
  43800a:	jae    0x438080
  43800c:	(bad)  
  43800d:	je     0x438074
  43800f:	pop    rdi
  438010:	jbe    0x438073
  438012:	jb     0x43807d
  438014:	(bad)  
  438015:	(bad)  
  438016:	ins    BYTE PTR es:[rdi],dx
  438017:	gs pop rdi
  438019:	jbe    0x43807c
  43801b:	ins    BYTE PTR es:[rdi],dx
  43801c:	jne    0x438083
  43801e:	sub    BYTE PTR [rip+0x3d202964],ah        # 0x3d63a988
  438024:	cmp    eax,0x7325203e
  438029:	add    BYTE PTR [rax],al
  43802b:	add    BYTE PTR [rax],al
  43802d:	add    BYTE PTR [rax],al
  43802f:	add    BYTE PTR [rsi+0x6f],cl
  438032:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438036:	movsxd esp,DWORD PTR [rbp+0x20]
  438039:	jae    0x4380af
  43803b:	(bad)  
  43803c:	je     0x4380a3
  43803e:	and    BYTE PTR [rsi+0x61],dh
  438041:	jb     0x4380ac
  438043:	(bad)  
  438044:	(bad)  
  438045:	ins    BYTE PTR es:[rdi],dx
  438046:	and    BYTE PTR gs:[rip+0x73202c64],ah        # 0x7363acb1
  43804d:	imul   ebp,DWORD PTR [rcx+0x70],0x70
  438051:	imul   ebp,DWORD PTR [rsi+0x67],0x6c617620
  438058:	jne    0x4380bf
  43805a:	and    BYTE PTR [rbx+0x65],dh
  43805d:	je     0x43805f
  43805f:	add    BYTE PTR [rbp+0x72],ah
  438062:	jb     0x4380d3
  438064:	jb     0x438086
  438066:	gs js  0x4380dd
  438069:	jb     0x4380cc
  43806b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  43806f:	and    BYTE PTR [edx+esi*2+0x61],dh
  438074:	ins    DWORD PTR es:[rdi],dx
  438075:	jo     0x4380e6
  438077:	ins    BYTE PTR es:[rdi],dx
  438078:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  43807f:	data16 gs jb 0x438083
  438083:	add    BYTE PTR [rax],al
  438085:	add    BYTE PTR [rax],al
  438087:	add    BYTE PTR [rbp+0x72],ah
  43808a:	jb     0x4380fb
  43808c:	jb     0x4380ae
  43808e:	gs js  0x438105
  438091:	jb     0x4380f4
  438093:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  438097:	and    BYTE PTR [edx+esi*2+0x61],dh
  43809c:	ins    DWORD PTR es:[rdi],dx
  43809d:	jo     0x43810e
  43809f:	ins    BYTE PTR es:[rdi],dx
  4380a0:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  4380a7:	data16 gs jb 0x43810a
  4380ab:	outs   dx,BYTE PTR gs:[rsi]
  4380ad:	add    BYTE PTR fs:[rax],al
  4380b0:	movsxd ebp,DWORD PTR [rcx+riz*2+0x69]
  4380b4:	ins    DWORD PTR es:[rdi],dx
  4380b5:	pop    rdi
  4380b6:	je     0x43812a
  4380b8:	(bad)  
  4380b9:	ins    DWORD PTR es:[rdi],dx
  4380ba:	jo     0x43812b
  4380bc:	ins    BYTE PTR es:[rdi],dx
  4380bd:	imul   ebp,DWORD PTR [rsi+0x65],0x6170735f
  4380c4:	movsxd esp,DWORD PTR [rbp+0x20]
  4380c7:	data16 (bad) 
  4380c9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4380d1:	jb     0x438138
  4380d3:	jae    0x43813a
  4380d5:	jb     0x43814d
  4380d7:	and    BYTE PTR gs:[rip+0x79622073],ah        # 0x79a5a151
  4380de:	je     0x438145
  4380e0:	jae    0x4380e2
  4380e2:	add    BYTE PTR [rax],al
  4380e4:	add    BYTE PTR [rax],al
  4380e6:	add    BYTE PTR [rax],al
  4380e8:	movsxd ebp,DWORD PTR [rcx+riz*2+0x69]
  4380ec:	ins    DWORD PTR es:[rdi],dx
  4380ed:	pop    rdi
  4380ee:	je     0x438162
  4380f0:	(bad)  
  4380f1:	ins    DWORD PTR es:[rdi],dx
  4380f2:	jo     0x438163
  4380f4:	ins    BYTE PTR es:[rdi],dx
  4380f5:	imul   ebp,DWORD PTR [rsi+0x65],0x6170735f
  4380fc:	movsxd esp,DWORD PTR [rbp+0x20]
  4380ff:	jb     0x438166
  438101:	jae    0x438168
  438103:	jb     0x43817b
  438105:	gs jae 0x438128
  438108:	and    eax,0x79622073
  43810d:	je     0x438174
  43810f:	jae    0x438131
  438111:	(bad)  
  438112:	je     0x438134
  438114:	and    eax,0x72650073
  438119:	jb     0x43818a
  43811b:	jb     0x43813d
  43811d:	gs js  0x438194
  438120:	jb     0x438183
  438122:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  438126:	and    BYTE PTR [ebp+0x72],ah
  43812a:	jb     0x43818e
  43812c:	jne    0x438194
  43812e:	add    BYTE PTR [rax],al
  438130:	push   rsp
  438131:	jb     0x438194
  438133:	movsxd ebp,DWORD PTR [rcx+0x6e]
  438136:	and    BYTE PTR [ecx+0x73],ch
  43813a:	and    BYTE PTR [rcx+0x6c],ah
  43813d:	jb     0x4381a4
  43813f:	(bad)  
  438140:	fs jns 0x438163
  438143:	outs   dx,DWORD PTR ds:[rsi]
  438144:	data16 data16 sub al,0x20
  438148:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  43814f:	add    BYTE PTR [ebx+0x74],dl
  438153:	outs   dx,DWORD PTR ds:[rsi]
  438154:	jo     0x4381c6
  438156:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  43815d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438161:	movsxd esp,DWORD PTR [rbp+0x0]
  438164:	add    BYTE PTR [rax],al
  438166:	add    BYTE PTR [rax],al
  438168:	rex.RB jb 0x4381dd
  43816b:	outs   dx,DWORD PTR ds:[rsi]
  43816c:	jb     0x43818e
  43816e:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  438172:	jb     0x4381dd
  438174:	outs   dx,BYTE PTR ds:[rsi]
  438175:	and    BYTE PTR [edx+esi*2+0x61],dh
  43817a:	movsxd ebp,DWORD PTR [rcx+0x6e]
  43817d:	and    BYTE PTR [esi+0x61],dh
  438181:	jb     0x4381ec
  438183:	(bad)  
  438184:	(bad)  
  438185:	ins    BYTE PTR es:[rdi],dx
  438186:	and    BYTE PTR gs:[rcx+0x6e],ch
  43818a:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  43818e:	add    BYTE PTR [rdi+rdi*1+0x3f],dh
  438192:	(bad)  
  438193:	add    BYTE PTR [rax],al
  438195:	add    BYTE PTR [rax],al
  438197:	add    BYTE PTR [rbx+0x74],dl
  43819a:	outs   dx,DWORD PTR ds:[rsi]
  43819b:	jo     0x43820d
  43819d:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  4381a4:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4381a8:	movsxd esp,DWORD PTR [rbp+0x20]
  4381ab:	(bad)  
  4381ac:	movsxd esp,DWORD PTR gs:[rcx+0x75]
  4381b0:	jae    0x438217
  4381b2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4381b6:	movsxd esp,DWORD PTR [rbp+0x70]
  4381b9:	outs   dx,DWORD PTR ds:[rsi]
  4381ba:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  4381c1:	ja     0x438224
  4381c3:	jae    0x4381e5
  4381c5:	push   0x25207469
  4381ca:	ins    BYTE PTR es:[rdi],dx
  4381cb:	ins    BYTE PTR es:[rdi],dx
  4381cc:	jne    0x4381ee
  4381ce:	je     0x438239
  4381d0:	ins    DWORD PTR es:[rdi],dx
  4381d1:	gs jae 0x4381d4
  4381d4:	je     0x438246
  4381d6:	(bad)  
  4381d7:	jae    0x43824c
  4381d9:	movsxd ebp,DWORD PTR [rdi+0x75]
  4381dc:	outs   dx,BYTE PTR ds:[rsi]
  4381dd:	je     0x4381df
  4381df:	add    BYTE PTR [rbx+0x74],dl
  4381e2:	outs   dx,DWORD PTR ds:[rsi]
  4381e3:	jo     0x438255
  4381e5:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  4381ec:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4381f0:	movsxd esp,DWORD PTR [rbp+0x20]
  4381f3:	(bad)  
  4381f4:	movsxd esp,DWORD PTR gs:[rcx+0x75]
  4381f8:	jae    0x43825f
  4381fa:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4381fe:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438202:	movsxd esp,DWORD PTR [rbp+0x20]
  438205:	(bad)  
  438206:	jne    0x43826e
  438208:	data16 gs jb 0x43822c
  43820c:	imul   esi,DWORD PTR [rbx+0x20],0x6c6c7566
  438213:	add    BYTE PTR [rsi+riz*2+0x75],dh
  438217:	ins    BYTE PTR es:[rdi],dx
  438218:	ins    BYTE PTR es:[rdi],dx
  438219:	add    BYTE PTR [rax],al
  43821b:	add    BYTE PTR [rax],al
  43821d:	add    BYTE PTR [rax],al
  43821f:	add    BYTE PTR [rbx+0x74],dl
  438222:	outs   dx,DWORD PTR ds:[rsi]
  438223:	jo     0x438295
  438225:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  43822c:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438230:	movsxd esp,DWORD PTR [rbp+0x20]
  438233:	(bad)  
  438234:	movsxd esp,DWORD PTR gs:[rcx+0x75]
  438238:	jae    0x43829f
  43823a:	and    BYTE PTR [rdi+0x66],ch
  43823d:	and    BYTE PTR [rcx+0x6e],ah
  438240:	and    BYTE PTR [rbp+0x78],ah
  438243:	jo     0x4382b7
  438245:	gs jae 0x4382bb
  438248:	imul   ebp,DWORD PTR [rdi+0x6e],0x61766520
  43824f:	ins    BYTE PTR es:[rdi],dx
  438250:	and    BYTE PTR [rbp+0x72],ah
  438253:	jb     0x4382c4
  438255:	jb     0x438257
  438257:	add    BYTE PTR [rbx+0x74],dl
  43825a:	outs   dx,DWORD PTR ds:[rsi]
  43825b:	jo     0x4382cd
  43825d:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  438264:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438268:	movsxd esp,DWORD PTR [rbp+0x20]
  43826b:	(bad)  
  43826c:	movsxd esp,DWORD PTR gs:[rcx+0x75]
  438270:	jae    0x4382d7
  438272:	and    BYTE PTR [rdi+0x44],al
  438275:	and    BYTE PTR [rcx+r13*2+0x73],spl
  43827a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43827d:	outs   dx,BYTE PTR ds:[rsi]
  43827e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  438283:	add    BYTE PTR [rsp+riz*2+0x69],dh
  438287:	jae    0x4382ec
  438289:	outs   dx,DWORD PTR ds:[rsi]
  43828a:	outs   dx,BYTE PTR ds:[rsi]
  43828b:	outs   dx,BYTE PTR ds:[rsi]
  43828c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  438291:	add    BYTE PTR [rax],al
  438293:	add    BYTE PTR [rax],al
  438295:	add    BYTE PTR [rax],al
  438297:	add    BYTE PTR [rbx+0x74],dl
  43829a:	outs   dx,DWORD PTR ds:[rsi]
  43829b:	jo     0x43830d
  43829d:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  4382a4:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4382a8:	movsxd esp,DWORD PTR [rbp+0x20]
  4382ab:	(bad)  
  4382ac:	movsxd esp,DWORD PTR gs:[rcx+0x75]
  4382b0:	jae    0x438317
  4382b2:	and    BYTE PTR [rdi+0x66],ch
  4382b5:	and    BYTE PTR [rcx+0x20],ah
  4382b8:	je     0x43832d
  4382ba:	je     0x43832b
  4382bc:	jo     0x4382de
  4382be:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4382c1:	ins    DWORD PTR es:[rdi],dx
  4382c2:	(bad)  
  4382c3:	outs   dx,BYTE PTR ds:[rsi]
  4382c4:	add    BYTE PTR fs:[rbx+rsi*2+0x74],dh
  4382c9:	outs   dx,DWORD PTR ds:[rsi]
  4382ca:	jo     0x4382cc
  4382cc:	add    BYTE PTR [rax],al
  4382ce:	add    BYTE PTR [rax],al
  4382d0:	imul   esi,DWORD PTR [rax+0x61],0x6172745f
  4382d7:	movsxd esp,DWORD PTR [rbp+0x66]
  4382da:	jb     0x43833d
  4382dc:	ins    DWORD PTR es:[rdi],dx
  4382dd:	gs pop rdi
  4382df:	movsxd ebp,DWORD PTR [rdi+0x75]
  4382e2:	outs   dx,BYTE PTR ds:[rsi]
  4382e3:	je     0x438305
  4382e5:	sub    BYTE PTR [rdx+0x61],dh
  4382e8:	movsxd edi,DWORD PTR [rcx+0x20]
  4382eb:	(bad)  
  4382ec:	jb     0x438353
  4382ee:	(bad)  
  4382ef:	sub    DWORD PTR [rdx],edi
  4382f1:	and    BYTE PTR [rip+0x77282064],ah        # 0x776ba35b
  4382f7:	cmp    eax,0x202c6425
  4382fc:	jb     0x43833b
  4382fe:	and    eax,0x4c002964
  438303:	imul   esp,DWORD PTR [rdx+0x3a],0x6d6f4320
  43830a:	ins    DWORD PTR es:[rdi],dx
  43830b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x30252064
  438313:	cmp    BYTE PTR [rax+0x20],bh
  438316:	sub    eax,0x3025203e
  43831b:	cmp    BYTE PTR [rax+0x0],bh
  43831e:	add    BYTE PTR [rax],al
  438320:	imul   esi,DWORD PTR [rax+0x61],0x6172745f
  438327:	movsxd esp,DWORD PTR [rbp+0x66]
  43832a:	jb     0x43838d
  43832c:	ins    DWORD PTR es:[rdi],dx
  43832d:	gs pop rdi
  43832f:	movsxd ebp,DWORD PTR [rdi+0x75]
  438332:	outs   dx,BYTE PTR ds:[rsi]
  438333:	je     0x438355
  438335:	sub    BYTE PTR [rdx+0x6c],ah
  438338:	outs   dx,DWORD PTR ds:[rsi]
  438339:	movsxd ebp,DWORD PTR [rbx+0x65]
  43833c:	and    BYTE PTR fs:[rcx+0x72],ah
  438340:	gs (bad) 
  438342:	sub    DWORD PTR [rdx],edi
  438344:	and    BYTE PTR [rip+0x77282064],ah        # 0x776ba3ae
  43834a:	cmp    eax,0x202c6425
  43834f:	jb     0x43838e
  438351:	and    eax,0x2964
  438356:	add    BYTE PTR [rax],al
  438358:	outs   dx,BYTE PTR ds:[rsi]
  438359:	outs   dx,DWORD PTR ds:[rsi]
  43835a:	je     0x4383c1
  43835c:	and    BYTE PTR [rax+rbp*2+0x61],dh
  438360:	je     0x438382
  438362:	imul   esi,DWORD PTR [rax+0x61],0x6172745f
  438369:	movsxd esp,DWORD PTR [rbp+0x66]
  43836c:	jb     0x4383cf
  43836e:	ins    DWORD PTR es:[rdi],dx
  43836f:	gs pop rdi
  438371:	movsxd ebp,DWORD PTR [rdi+0x75]
  438374:	outs   dx,BYTE PTR ds:[rsi]
  438375:	je     0x43839e
  438377:	jae    0x438399
  438379:	jo     0x4383dc
  43837b:	jb     0x4383f1
  43837d:	jae    0x43839f
  43837f:	movsxd ebp,DWORD PTR [rax+0x61]
  438382:	outs   dx,BYTE PTR ds:[rsi]
  438383:	gs add BYTE PTR fs:[eax],al
  438388:	imul   r12,QWORD PTR [rdx+0x3a],0x61725420
  438390:	movsxd esp,DWORD PTR [rbp+0x20]
  438393:	(bad)  
  438394:	jne    0x4383fc
  438396:	data16 gs jb 0x4383ba
  43839a:	pop    rbx
  43839b:	and    eax,0x73205d64
  4383a0:	je     0x438403
  4383a2:	jb     0x438418
  4383a4:	cmp    eax,0x66206425
  4383a9:	jb     0x438410
  4383ab:	gs cmp eax,0x65206425
  4383b1:	outs   dx,BYTE PTR ds:[rsi]
  4383b2:	fs data16 jb 0x43841b
  4383b6:	gs cmp eax,0x77206425
  4383bc:	jb     0x43841f
  4383be:	jo     0x4383fd
  4383c0:	and    eax,0x69682064
  4383c5:	cmp    eax,0x6425
  4383ca:	add    BYTE PTR [rax],al
  4383cc:	add    BYTE PTR [rax],al
  4383ce:	add    BYTE PTR [rax],al
  4383d0:	push   rbp
  4383d1:	jo     0x43843f
  4383d3:	outs   dx,DWORD PTR ds:[rsi]
  4383d4:	(bad)  
  4383d5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f63203a
  4383dd:	jne    0x43844b
  4383df:	outs   dx,BYTE PTR fs:[rsi]
  4383e1:	(bad)  
  4383e2:	je     0x438404
  4383e4:	jb     0x43844b
  4383e6:	(bad)  
  4383e7:	and    BYTE PTR fs:[rdx+rsi*2+0x61],dh
  4383ec:	movsxd esp,DWORD PTR [rbp+0x66]
  4383ef:	jb     0x438452
  4383f1:	ins    DWORD PTR es:[rdi],dx
  4383f2:	and    BYTE PTR gs:[rcx+0x74],ah
  4383f6:	and    BYTE PTR [rip+0xa73],ah        # 0x438e6f
  4383fc:	add    BYTE PTR [rax],al
  4383fe:	add    BYTE PTR [rax],al
  438400:	push   rbp
  438401:	jo     0x43846f
  438403:	outs   dx,DWORD PTR ds:[rsi]
  438404:	(bad)  
  438405:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f4e203a
  43840d:	and    BYTE PTR [rax],ch
  43840f:	ins    DWORD PTR es:[rdi],dx
  438410:	outs   dx,DWORD PTR ds:[rsi]
  438411:	jb     0x438478
  438413:	sub    DWORD PTR [rax],esp
  438415:	data16 (bad) 
  438417:	jae    0x43848d
  438419:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43841d:	movsxd esp,DWORD PTR [rbp+0x66]
  438420:	jb     0x438483
  438422:	ins    DWORD PTR es:[rdi],dx
  438423:	gs jae 0x438452
  438426:	and    BYTE PTR [rdx+0x75],ah
  438429:	je     0x43844b
  43842b:	imul   esi,DWORD PTR [rax+0x61],0x6172745f
  438432:	movsxd esp,DWORD PTR [rbp+0x66]
  438435:	jb     0x438498
  438437:	ins    DWORD PTR es:[rdi],dx
  438438:	gs pop rdi
  43843a:	movsxd ebp,DWORD PTR [rdi+0x75]
  43843d:	outs   dx,BYTE PTR ds:[rsi]
  43843e:	je     0x438460
  438440:	cmp    eax,0x7525203d
  438445:	(bad)  
  438446:	(bad)  
  438447:	or     al,BYTE PTR [rax]
  438449:	add    BYTE PTR [rax],al
  43844b:	add    BYTE PTR [rax],al
  43844d:	add    BYTE PTR [rax],al
  43844f:	add    BYTE PTR [rbp+0x70],dl
  438452:	ins    BYTE PTR es:[rdi],dx
  438453:	outs   dx,DWORD PTR ds:[rsi]
  438454:	(bad)  
  438455:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7274203a
  43845d:	(bad)  
  43845e:	movsxd esp,DWORD PTR [rbp+0x20]
  438461:	(bad)  
  438462:	jne    0x4384ca
  438464:	data16 gs jb 0x438488
  438468:	imul   esi,DWORD PTR [rbx+0x20],0x6c6c7566
  43846f:	add    BYTE PTR [rbp+0x70],dl
  438472:	ins    BYTE PTR es:[rdi],dx
  438473:	outs   dx,DWORD PTR ds:[rsi]
  438474:	(bad)  
  438475:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f43203a
  43847d:	jne    0x4384eb
  43847f:	outs   dx,BYTE PTR fs:[rsi]
  438481:	(bad)  
  438482:	je     0x4384a4
  438484:	jb     0x4384eb
  438486:	(bad)  
  438487:	and    BYTE PTR fs:[rdx+rsi*2+0x61],dh
  43848c:	movsxd esp,DWORD PTR [rbp+0x66]
  43848f:	jb     0x4384f2
  438491:	ins    DWORD PTR es:[rdi],dx
  438492:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  438497:	(bad)  
  438498:	and    BYTE PTR [rcx+0x74],ah
  43849b:	and    BYTE PTR [rip+0x55000a73],ah        # 0x55438f14
  4384a1:	jo     0x43850f
  4384a3:	outs   dx,DWORD PTR ds:[rsi]
  4384a4:	(bad)  
  4384a5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7274203a
  4384ad:	(bad)  
  4384ae:	movsxd esp,DWORD PTR [rbp+0x66]
  4384b1:	jb     0x438514
  4384b3:	ins    DWORD PTR es:[rdi],dx
  4384b4:	and    BYTE PTR gs:[rcx+rbp*2+0x64],ah
  4384b9:	outs   dx,BYTE PTR ds:[rsi]
  4384ba:	(bad)  
  4384bb:	je     0x4384dd
  4384bd:	imul   si,WORD PTR [rax+rax*1+0x0],0x0
  4384c4:	add    BYTE PTR [rax],al
  4384c6:	add    BYTE PTR [rax],al
  4384c8:	imul   r12,QWORD PTR [rdx+0x3a],0x73694420
  4384d0:	movsxd esp,DWORD PTR [rcx+0x72]
  4384d3:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73617020
  4384db:	je     0x4384fd
  4384dd:	je     0x438547
  4384df:	and    BYTE PTR gs:[rdi+0x72],dh
  4384e3:	(bad)  
  4384e4:	jo     0x438547
  4384e6:	jb     0x438557
  4384e8:	jne    0x438558
  4384ea:	add    BYTE PTR fs:[rax],al
  4384ed:	add    BYTE PTR [rax],al
  4384ef:	add    BYTE PTR [rcx+rbp*2+0x62],cl
  4384f3:	cmp    ah,BYTE PTR [rax]
  4384f5:	(bad)  
  4384f6:	jne    0x43855e
  4384f8:	data16 gs jb 0x43851c
  4384fc:	imul   esi,DWORD PTR [rbx+0x20],0x6c6c7566
  438503:	jns    0x438525
  438505:	gs ins DWORD PTR es:[rdi],dx
  438507:	jo     0x43857d
  438509:	jns    0x438539
  43850b:	and    BYTE PTR [rax],ah
  43850d:	push   rsp
  43850e:	jb     0x438571
  438510:	movsxd esp,DWORD PTR [rbp+0x20]
  438513:	(bad)  
  438514:	jne    0x43857c
  438516:	data16 gs jb 0x43853a
  43851a:	pop    rbx
  43851b:	and    eax,0x73205d64
  438520:	je     0x438583
  438522:	jb     0x438598
  438524:	cmp    eax,0x66206425
  438529:	jb     0x438590
  43852b:	gs cmp eax,0x65206425
  438531:	outs   dx,BYTE PTR ds:[rsi]
  438532:	fs data16 jb 0x43859b
  438536:	gs cmp eax,0x6425
  43853c:	add    BYTE PTR [rax],al
  43853e:	add    BYTE PTR [rax],al
  438540:	push   rbp
  438541:	jo     0x4385af
  438543:	outs   dx,DWORD PTR ds:[rsi]
  438544:	(bad)  
  438545:	fs gs and BYTE PTR fs:[rcx+0x20],ah
  43854b:	je     0x4385bf
  43854d:	(bad)  
  43854e:	movsxd esp,DWORD PTR [rbp+0x66]
  438551:	jb     0x4385b4
  438553:	ins    DWORD PTR es:[rdi],dx
  438554:	or     cl,BYTE PTR gs:[rcx+rbp*2+0x62]
  438559:	cmp    ah,BYTE PTR [rax]
  43855b:	push   rsp
  43855c:	jb     0x4385bf
  43855e:	movsxd esp,DWORD PTR [rbp+0x20]
  438561:	(bad)  
  438562:	jne    0x4385ca
  438564:	data16 gs jb 0x438588
  438568:	pop    rbx
  438569:	and    eax,0x73205d64
  43856e:	je     0x4385d1
  438570:	jb     0x4385e6
  438572:	cmp    eax,0x66206425
  438577:	jb     0x4385de
  438579:	gs cmp eax,0x65206425
  43857f:	outs   dx,BYTE PTR ds:[rsi]
  438580:	fs data16 jb 0x4385e9
  438584:	gs cmp eax,0x77206425
  43858a:	jb     0x4385ed
  43858c:	jo     0x4385cb
  43858e:	and    eax,0x69682064
  438593:	cmp    eax,0x6425
  438598:	rex.R outs dx,DWORD PTR ds:[rsi]
  43859a:	outs   dx,BYTE PTR ds:[rsi]
  43859b:	and    BYTE PTR gs:[rbp+0x70],dh
  43859f:	ins    BYTE PTR es:[rdi],dx
  4385a0:	outs   dx,DWORD PTR ds:[rsi]
  4385a1:	(bad)  
  4385a2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x61727420
  4385aa:	movsxd esp,DWORD PTR [rbp+0x66]
  4385ad:	jb     0x438610
  4385af:	ins    DWORD PTR es:[rdi],dx
  4385b0:	gs jae 0x4385d3
  4385b3:	pop    rbx
  4385b4:	and    eax,0xa5d64
  4385b9:	add    BYTE PTR [rax],al
  4385bb:	add    BYTE PTR [rax],al
  4385bd:	add    BYTE PTR [rax],al
  4385bf:	add    BYTE PTR [rdx+0x65],dl
  4385c2:	je     0x438639
  4385c4:	jb     0x438634
  4385c6:	imul   ebp,DWORD PTR [rsi+0x67],0x61727420
  4385cd:	movsxd esp,DWORD PTR [rbp+0x20]
  4385d0:	jae    0x438646
  4385d2:	(bad)  
  4385d3:	je     0x43864a
  4385d5:	jae    0x4385f7
  4385d7:	(bad)  
  4385d8:	jae    0x4385fa
  4385da:	and    eax,0x73202c64
  4385df:	je     0x438650
  4385e1:	jo     0x438603
  4385e3:	jb     0x43864a
  4385e5:	(bad)  
  4385e6:	jae    0x438657
  4385e8:	outs   dx,BYTE PTR ds:[rsi]
  4385e9:	and    BYTE PTR [rip+0x65740073],ah        # 0x65b78662
  4385ef:	jb     0x438663
  4385f1:	outs   dx,DWORD PTR ds:[rsi]
  4385f2:	jb     0x43862e
  4385f4:	add    BYTE PTR [rax],al
  4385f6:	add    BYTE PTR [rax],al
  4385f8:	push   rsp
  4385f9:	and    eax,0x73253b64
  4385fe:	cmp    ah,BYTE PTR [rip+0x66743b78]        # 0x66b7c17c
  438604:	jb     0x438667
  438606:	ins    DWORD PTR es:[rdi],dx
  438607:	gs jae 0x438644
  43860a:	and    eax,0x63743b78
  43860f:	jb     0x438676
  438611:	(bad)  
  438612:	je     0x438679
  438614:	cmp    ah,BYTE PTR fs:[rip+0x66743b78]        # 0x66b7c193
  43861b:	jb     0x438682
  43861d:	cmp    ah,BYTE PTR gs:[rip+0x73743b78]        # 0x73b7c19c
  438624:	imul   edi,DWORD PTR [rdx+0x65],0x3b73253a
  43862b:	movsxd ebp,DWORD PTR [rcx+0x72]
  43862e:	movsxd esi,DWORD PTR [rbp+0x6c]
  438631:	(bad)  
  438632:	jb     0x43866e
  438634:	and    eax,0x69643b64
  438639:	jae    0x43869e
  43863b:	outs   dx,DWORD PTR ds:[rsi]
  43863c:	outs   dx,BYTE PTR ds:[rsi]
  43863d:	outs   dx,BYTE PTR ds:[rsi]
  43863e:	cmp    ah,BYTE PTR [rip+0x74733b64]        # 0x74b6c1a8
  438644:	(bad)  
  438645:	jb     0x4386bb
  438647:	je     0x4386b2
  438649:	ins    DWORD PTR es:[rdi],dx
  43864a:	cmp    ah,BYTE PTR gs:[rip+0x74733b73]        # 0x74b6c1c4
  438651:	outs   dx,DWORD PTR ds:[rsi]
  438652:	jo     0x4386c8
  438654:	imul   ebp,DWORD PTR [rbp+0x65],0x3b73253a
  43865b:	jne    0x4386d0
  43865d:	gs jb  0x4386ce
  438660:	(bad)  
  438661:	ins    DWORD PTR es:[rdi],dx
  438662:	cmp    ah,BYTE PTR gs:[rip+0x6f6e3b73]        # 0x6fb1c1dc
  438669:	je     0x4386d0
  43866b:	jae    0x4386a7
  43866d:	and    eax,0x66003a73
  438672:	(bad)  
  438673:	jae    0x4386e9
  438675:	and    BYTE PTR [rax],al
  438677:	jae    0x4386ed
  438679:	(bad)  
  43867a:	je     0x4386e5
  43867c:	movsxd esp,DWORD PTR [rax]
  43867e:	add    BYTE PTR [rbx+0x74],dh
  438681:	(bad)  
  438682:	je     0x4386ed
  438684:	movsxd eax,DWORD PTR [rax]
  438686:	data16 (bad) 
  438688:	jae    0x4386fe
  43868a:	add    BYTE PTR [rbx+0x69],ah
  43868d:	jb     0x4386f2
  43868f:	jne    0x4386fd
  438691:	(bad)  
  438692:	jb     0x438694
  438694:	ins    BYTE PTR es:[rdi],dx
  438695:	imul   ebp,DWORD PTR [rsi+0x65],0x51007261
  43869c:	push   rsp
  43869d:	imul   ebp,DWORD PTR [rsi+0x69],0x6e490074
  4386a4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x697a696c
  4386ac:	outs   dx,BYTE PTR ds:[rsi]
  4386ad:	and    BYTE PTR [eax+ebp*2+0x65],dh
  4386b2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4386b6:	movsxd esp,DWORD PTR [rbp+0x0]
  4386b9:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4386bb:	outs   dx,DWORD PTR ds:[rsi]
  4386bc:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  4386c0:	and    BYTE PTR [rcx+0x74],ah
  4386c3:	and    BYTE PTR [rsi+0x61],dh
  4386c6:	jb     0x4386e8
  4386c8:	and    eax,0x65440064
  4386cd:	ins    BYTE PTR es:[rdi],dx
  4386ce:	gs je  0x43873a
  4386d1:	outs   dx,BYTE PTR ds:[rsi]
  4386d2:	and    BYTE PTR [esi+0x61],dh
  4386d6:	jb     0x4386f8
  4386d8:	and    eax,0x54510064
  4386dd:	rex.R push rax
  4386df:	cmp    al,BYTE PTR [rax]
  4386e1:	add    BYTE PTR [rax],al
  4386e3:	add    BYTE PTR [rax],al
  4386e5:	add    BYTE PTR [rax],al
  4386e7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  4386eb:	movsxd esp,DWORD PTR [rbp+0x70]
  4386ee:	outs   dx,DWORD PTR ds:[rsi]
  4386ef:	imul   ebp,DWORD PTR [rsi+0x74],0x72726520
  4386f6:	outs   dx,DWORD PTR ds:[rsi]
  4386f7:	jb     0x438733
  4386f9:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4386fd:	movsxd esp,DWORD PTR [rbp+0x70]
  438700:	outs   dx,DWORD PTR ds:[rsi]
  438701:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  438708:	(bad)  
  438709:	je     0x43872b
  43870b:	xor    BYTE PTR [rax+0x25],bh
  43870e:	jae    0x438730
  438710:	(bad)  
  438711:	ins    BYTE PTR es:[rdi],dx
  438712:	jb     0x438779
  438714:	(bad)  
  438715:	fs jns 0x438738
  438718:	gs js  0x438784
  43871b:	jae    0x438791
  43871d:	jae    0x43871f
  43871f:	add    BYTE PTR [rbp+0x6e],dl
  438722:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  438726:	outs   dx,BYTE PTR ds:[rsi]
  438727:	and    BYTE PTR [rdi+0x70],ch
  43872a:	je     0x438795
  43872c:	outs   dx,DWORD PTR ds:[rsi]
  43872d:	outs   dx,BYTE PTR ds:[rsi]
  43872e:	(bad)  
  43872f:	ins    BYTE PTR es:[rdi],dx
  438730:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438734:	movsxd esp,DWORD PTR [rbp+0x70]
  438737:	outs   dx,DWORD PTR ds:[rsi]
  438738:	imul   ebp,DWORD PTR [rsi+0x74],0x65696620
  43873f:	ins    BYTE PTR es:[rdi],dx
  438740:	add    BYTE PTR fs:[rcx+0x6c],al
  438744:	jae    0x4387b5
  438746:	and    BYTE PTR [rax+0x61],ch
  438749:	jae    0x43876b
  43874b:	(bad)  
  43874c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  438750:	outs   dx,BYTE PTR ds:[rsi]
  438751:	jae    0x43875d
  438753:	add    BYTE PTR [rax],al
  438755:	add    BYTE PTR [rax],al
  438757:	add    BYTE PTR [rbp+riz*2+0x66],al
  43875b:	imul   ebp,DWORD PTR [rsi+0x65],0x73252064
  438762:	je     0x4387d6
  438764:	(bad)  
  438765:	movsxd esp,DWORD PTR [rbp+0x70]
  438768:	outs   dx,DWORD PTR ds:[rsi]
  438769:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  438770:	(bad)  
  438771:	je     0x438793
  438773:	xor    BYTE PTR [rax+0x25],bh
  438776:	jae    0x4387a4
  438778:	and    BYTE PTR [rbp+0x6e],ah
  43877b:	(bad)  
  43877c:	(bad)  
  43877d:	ins    BYTE PTR es:[rdi],dx
  43877e:	gs and BYTE PTR fs:[rip+0x74732064],ah        # 0x74b6a7ea
  438786:	gs jo  0x4387a9
  438789:	and    eax,0x20756c6c
  43878e:	jo     0x4387f1
  438790:	jae    0x438805
  438792:	and    BYTE PTR [rip+0x756c6c],ah        # 0xb8f404
  438798:	push   rdi
  438799:	(bad)  
  43879a:	outs   dx,BYTE PTR ds:[rsi]
  43879b:	je     0x4387bd
  43879d:	je     0x43880e
  43879f:	and    BYTE PTR [rbx+0x6f],ah
  4387a2:	ins    BYTE PTR es:[rdi],dx
  4387a3:	ins    BYTE PTR es:[rdi],dx
  4387a4:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x73]
  4387a9:	je     0x43880c
  4387ab:	je     0x438816
  4387ad:	movsxd esp,DWORD PTR [rax]
  4387af:	je     0x438823
  4387b1:	(bad)  
  4387b2:	movsxd esp,DWORD PTR [rbp+0x20]
  4387b5:	fs (bad) 
  4387b7:	je     0x43881a
  4387b9:	add    BYTE PTR [rax],al
  4387bb:	add    BYTE PTR [rax],al
  4387bd:	add    BYTE PTR [rax],al
  4387bf:	add    BYTE PTR [rbp+0x6e],dl
  4387c2:	gs js  0x438835
  4387c5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4387ca:	and    BYTE PTR [rbx+0x74],dh
  4387cd:	gs jo  0x4387f0
  4387d0:	(bad)  
  4387d1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4387d5:	outs   dx,BYTE PTR ds:[rsi]
  4387d6:	sub    al,0x20
  4387d8:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  4387df:	add    BYTE PTR [eax],al
  4387e2:	add    BYTE PTR [rax],al
  4387e4:	add    BYTE PTR [rax],al
  4387e6:	add    BYTE PTR [rax],al
  4387e8:	jne    0x438858
  4387ea:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4387ee:	outs   dx,BYTE PTR ds:[rsi]
  4387ef:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4387f3:	movsxd esp,DWORD PTR [rbp+0x20]
  4387f6:	(bad)  
  4387f7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4387fb:	outs   dx,BYTE PTR ds:[rsi]
  4387fc:	and    BYTE PTR [rdi],ah
  4387fe:	and    eax,0x202c2763
  438803:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  43880a:	cs cs add BYTE PTR cs:[eax],al
  438810:	push   rsp
  438811:	jb     0x438874
  438813:	movsxd esp,DWORD PTR [rbp+0x70]
  438816:	outs   dx,DWORD PTR ds:[rsi]
  438817:	imul   ebp,DWORD PTR [rsi+0x74],0x72726520
  43881e:	outs   dx,DWORD PTR ds:[rsi]
  43881f:	jb     0x43885b
  438821:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438825:	movsxd esp,DWORD PTR [rbp+0x70]
  438828:	outs   dx,DWORD PTR ds:[rsi]
  438829:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  438830:	(bad)  
  438831:	je     0x438853
  438833:	xor    BYTE PTR [rax+0x25],bh
  438836:	jae    0x438858
  438838:	outs   dx,BYTE PTR ds:[rsi]
  438839:	outs   dx,DWORD PTR ds:[rsi]
  43883a:	je     0x43885c
  43883c:	outs   dx,WORD PTR ds:[rsi]
  43883e:	jne    0x4388ae
  438840:	add    BYTE PTR fs:[rbp+0x72],ah
  438844:	jb     0x4388b5
  438846:	jb     0x438868
  438848:	jb     0x4388af
  43884a:	(bad)  
  43884b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70746020
  438853:	pop    rdi
  438854:	jo     0x4388c8
  438856:	gs jbe 0x438886
  438859:	outs   dx,BYTE PTR ds:[rsi]
  43885b:	gs js  0x4388d2
  43885e:	(bad)  
  43885f:	add    BYTE PTR [rdx+0x65],dl
  438862:	jno    0x4388d9
  438864:	gs jae 0x4388db
  438867:	gs and BYTE PTR fs:[rcx+0x20],ah
  43886c:	and    eax,0x72742073
  438871:	(bad)  
  438872:	movsxd esp,DWORD PTR [rbp+0x70]
  438875:	outs   dx,DWORD PTR ds:[rsi]
  438876:	imul   ebp,DWORD PTR [rsi+0x74],0x7562202c
  43887d:	je     0x43889f
  43887f:	data16 (bad) 
  438881:	jae    0x4388f7
  438883:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438887:	movsxd esp,DWORD PTR [rbp+0x70]
  43888a:	outs   dx,DWORD PTR ds:[rsi]
  43888b:	imul   ebp,DWORD PTR [rsi+0x74],0x72612073
  438892:	outs   dx,BYTE PTR gs:[rsi]
  438894:	(bad)  
  438895:	je     0x4388b7
  438897:	jae    0x43890e
  438899:	jo     0x43890b
  43889b:	outs   dx,DWORD PTR ds:[rsi]
  43889c:	jb     0x438912
  43889e:	gs fs add BYTE PTR cs:[rax],al
  4388a3:	add    BYTE PTR [rax],al
  4388a5:	add    BYTE PTR [rax],al
  4388a7:	add    BYTE PTR [rdx+0x65],dl
  4388aa:	jno    0x438921
  4388ac:	gs jae 0x438923
  4388af:	gs and BYTE PTR fs:[rcx+0x20],ah
  4388b4:	jae    0x43892a
  4388b6:	(bad)  
  4388b7:	je     0x438922
  4388b9:	movsxd esp,DWORD PTR [rax]
  4388bb:	je     0x43892f
  4388bd:	(bad)  
  4388be:	movsxd esp,DWORD PTR [rbp+0x70]
  4388c1:	outs   dx,DWORD PTR ds:[rsi]
  4388c2:	imul   ebp,DWORD PTR [rsi+0x74],0x7562202c
  4388c9:	je     0x4388eb
  4388cb:	jae    0x438941
  4388cd:	(bad)  
  4388ce:	je     0x438939
  4388d0:	movsxd esp,DWORD PTR [rax]
  4388d2:	je     0x438946
  4388d4:	(bad)  
  4388d5:	movsxd esp,DWORD PTR [rbp+0x70]
  4388d8:	outs   dx,DWORD PTR ds:[rsi]
  4388d9:	imul   ebp,DWORD PTR [rsi+0x74],0x72612073
  4388e0:	and    BYTE PTR gs:[rsi+0x6f],ch
  4388e4:	je     0x438906
  4388e6:	jae    0x43895d
  4388e8:	jo     0x43895a
  4388ea:	outs   dx,DWORD PTR ds:[rsi]
  4388eb:	jb     0x438961
  4388ed:	gs fs add BYTE PTR cs:[rbp+0x6e],dl
  4388f3:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4388f7:	outs   dx,BYTE PTR ds:[rsi]
  4388f8:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4388fc:	movsxd esp,DWORD PTR [rbp+0x70]
  4388ff:	outs   dx,DWORD PTR ds:[rsi]
  438900:	imul   ebp,DWORD PTR [rsi+0x74],0x70797420
  438907:	add    BYTE PTR gs:[rcx+0x54],dl
  43890b:	rex.R push rax
  43890d:	jae    0x438981
  43890f:	movsxd edi,DWORD PTR [rdx]
  438911:	add    BYTE PTR [rcx+0x54],dl
  438914:	rex.RB outs dx,BYTE PTR ds:[rsi]
  438916:	(bad)  
  438917:	(bad)  
  438918:	ins    BYTE PTR es:[rdi],dx
  438919:	cmp    al,BYTE PTR gs:[rax]
  43891c:	push   rcx
  43891d:	push   rsp
  43891e:	imul   r14d,DWORD PTR [rbx+0x61],0x3a656c62
  438926:	add    BYTE PTR [rcx+0x54],dl
  438929:	rex.R push rsi
  43892b:	cmp    al,BYTE PTR [rax]
  43892d:	push   rcx
  43892e:	push   rsp
  43892f:	jb     0x4389a0
  438931:	cmp    al,BYTE PTR [rax]
  438933:	push   rdi
  438934:	(bad)  
  438935:	outs   dx,BYTE PTR ds:[rsi]
  438936:	je     0x438958
  438938:	je     0x4389a9
  43893a:	and    BYTE PTR [rbp+0x61],ch
  43893d:	jb     0x4389aa
  43893f:	and    BYTE PTR [rdx+0x65],dh
  438942:	(bad)  
  438943:	outs   dx,DWORD PTR fs:[rsi]
  438945:	outs   dx,BYTE PTR ds:[rsi]
  438946:	ins    BYTE PTR es:[rdi],dx
  438947:	jns    0x438969
  438949:	jb     0x4389b0
  43894b:	imul   ebp,DWORD PTR [edi+0x6e],0x73
  438953:	add    BYTE PTR [rax],al
  438955:	add    BYTE PTR [rax],al
  438957:	add    BYTE PTR [rcx+0x64],al
  43895a:	fs gs and BYTE PTR fs:[rdx+0x65],dh
  438960:	(bad)  
  438961:	outs   dx,DWORD PTR fs:[rsi]
  438963:	outs   dx,BYTE PTR ds:[rsi]
  438964:	ins    BYTE PTR es:[rdi],dx
  438965:	jns    0x438987
  438967:	jb     0x4389ce
  438969:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726620
  438971:	ins    DWORD PTR es:[rdi],dx
  438972:	and    BYTE PTR [rax],dh
  438974:	js     0x43899b
  438976:	jae    0x438998
  438978:	je     0x4389e9
  43897a:	and    BYTE PTR [rax],dh
  43897c:	js     0x4389a3
  43897e:	jae    0x438980
  438980:	push   rcx
  438981:	push   rsp
  438982:	push   rbx
  438983:	je     0x4389e6
  438985:	jb     0x4389fb
  438987:	add    BYTE PTR [rbx+0x74],dl
  43898a:	(bad)  
  43898b:	jb     0x438a01
  43898d:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  438994:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438998:	movsxd esp,DWORD PTR [rbp+0x0]
  43899b:	je     0x438a10
  43899d:	jbe    0x4389cc
  43899f:	ds addr32 gs je 0x438a18
  4389a4:	gs jb  0x4389c7
  4389a7:	cmp    eax,0x554e203d
  4389ac:	rex.WR
  4389ad:	rex.WR add BYTE PTR [rax],r8b
  4389b0:	rex.RB jb 0x438a25
  4389b3:	outs   dx,DWORD PTR ds:[rsi]
  4389b4:	jb     0x4389d6
  4389b6:	jae    0x438a1d
  4389b8:	je     0x438a2e
  4389ba:	imul   ebp,DWORD PTR [rsi+0x67],0x61706920
  4389c1:	pop    rdi
  4389c2:	je     0x438a28
  4389c4:	gs jae 0x438a2a
  4389c7:	pop    rdi
  4389c8:	imul   esp,DWORD PTR [rax+rdi*2+0x20],0x69726176
  4389d0:	(bad)  
  4389d1:	(bad)  
  4389d2:	ins    BYTE PTR es:[rdi],dx
  4389d3:	and    BYTE PTR gs:[rcx+0x6e],ch
  4389d7:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  4389db:	add    BYTE PTR [rax],al
  4389dd:	add    BYTE PTR [rax],al
  4389df:	add    BYTE PTR [rbp+0x72],al
  4389e2:	jb     0x438a53
  4389e4:	jb     0x438a06
  4389e6:	jae    0x438a4d
  4389e8:	je     0x438a5e
  4389ea:	imul   ebp,DWORD PTR [rsi+0x67],0x61727420
  4389f1:	movsxd ebp,DWORD PTR [rcx+0x6e]
  4389f4:	and    BYTE PTR [esi+0x61],dh
  4389f8:	jb     0x438a63
  4389fa:	(bad)  
  4389fb:	(bad)  
  4389fc:	ins    BYTE PTR es:[rdi],dx
  4389fd:	and    BYTE PTR gs:[rcx+0x6e],ch
  438a01:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  438a05:	add    BYTE PTR [rax],al
  438a07:	add    BYTE PTR [rbp+0x72],al
  438a0a:	jb     0x438a7b
  438a0c:	jb     0x438a2e
  438a0e:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  438a12:	jb     0x438a7d
  438a14:	outs   dx,BYTE PTR ds:[rsi]
  438a15:	and    BYTE PTR [ebx+0x74],dh
  438a19:	outs   dx,DWORD PTR ds:[rsi]
  438a1a:	jo     0x438a8c
  438a1c:	imul   ebp,DWORD PTR [rsi+0x67],0x6172745f
  438a23:	movsxd esp,DWORD PTR [rbp+0x70]
  438a26:	outs   dx,DWORD PTR ds:[rsi]
  438a27:	imul   ebp,DWORD PTR [rsi+0x74],0x72617620
  438a2e:	imul   esp,DWORD PTR [rcx+0x62],0x6920656c
  438a35:	outs   dx,BYTE PTR ds:[rsi]
  438a36:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  438a3a:	add    BYTE PTR [rax],al
  438a3c:	add    BYTE PTR [rax],al
  438a3e:	add    BYTE PTR [rax],al
  438a40:	rex.RB jb 0x438ab5
  438a43:	outs   dx,DWORD PTR ds:[rsi]
  438a44:	jb     0x438a66
  438a46:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  438a4a:	jb     0x438ab5
  438a4c:	outs   dx,BYTE PTR ds:[rsi]
  438a4d:	and    BYTE PTR [edx+esi*2+0x61],dh
  438a52:	movsxd esp,DWORD PTR [rbp+0x5f]
  438a55:	(bad)  
  438a56:	jne    0x438abe
  438a58:	data16 gs jb 0x438abb
  438a5c:	imul   esi,DWORD PTR [rbx+0x5f],0x6c6c7566
  438a63:	and    BYTE PTR [rsi+0x61],dh
  438a66:	jb     0x438ad1
  438a68:	(bad)  
  438a69:	(bad)  
  438a6a:	ins    BYTE PTR es:[rdi],dx
  438a6b:	and    BYTE PTR gs:[rcx+0x6e],ch
  438a6f:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  438a73:	add    BYTE PTR [rax],al
  438a75:	add    BYTE PTR [rax],al
  438a77:	add    BYTE PTR [rbp+0x72],al
  438a7a:	jb     0x438aeb
  438a7c:	jb     0x438a9e
  438a7e:	jae    0x438ae5
  438a80:	je     0x438af6
  438a82:	imul   ebp,DWORD PTR [rsi+0x67],0x6f747320
  438a89:	jo     0x438aea
  438a8b:	je     0x438aff
  438a8d:	(bad)  
  438a8e:	movsxd ebp,DWORD PTR [rcx+0x6e]
  438a91:	and    BYTE PTR [edx+0x72],ah
  438a95:	gs (bad) 
  438a97:	imul   esi,DWORD PTR [rax+0x6f],0x69
  438a9b:	outs   dx,BYTE PTR ds:[rsi]
  438a9c:	je     0x438a9e
  438a9e:	add    BYTE PTR [rax],al
  438aa0:	rex.RB jb 0x438b15
  438aa3:	outs   dx,DWORD PTR ds:[rsi]
  438aa4:	jb     0x438ac6
  438aa6:	jae    0x438b0d
  438aa8:	je     0x438b1e
  438aaa:	imul   ebp,DWORD PTR [rsi+0x67],0x756c6620
  438ab1:	jae    0x438b1b
  438ab3:	pop    rdi
  438ab4:	je     0x438b28
  438ab6:	(bad)  
  438ab7:	movsxd esp,DWORD PTR [rbp+0x5f]
  438aba:	(bad)  
  438abb:	jne    0x438b23
  438abd:	data16 gs jb 0x438ae1
  438ac1:	(bad)
  438ac6:	jo     0x438b37
  438ac8:	imul   ebp,DWORD PTR [rsi+0x74],0x53545100
  438acf:	je     0x438b40
  438ad1:	jo     0x438ad3
  438ad3:	push   rcx
  438ad4:	push   rsp
  438ad5:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
  438add:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  438ae1:	cmp    al,BYTE PTR [rax]
  438ae3:	push   rcx
  438ae4:	push   rsp
  438ae5:	rex.RX jb 0x438b49
  438ae8:	ins    DWORD PTR es:[rdi],dx
  438ae9:	cmp    al,BYTE PTR gs:[rax]
  438aec:	jo     0x438b51
  438aee:	cmp    al,BYTE PTR [rax]
  438af0:	push   rdi
  438af1:	(bad)  
  438af2:	outs   dx,BYTE PTR ds:[rsi]
  438af3:	je     0x438b15
  438af5:	je     0x438b66
  438af7:	and    BYTE PTR [rsi+0x69],ah
  438afa:	outs   dx,BYTE PTR ds:[rsi]
  438afb:	and    BYTE PTR fs:[rsi+0x65],ch
  438aff:	js     0x438b75
  438b01:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438b05:	movsxd esp,DWORD PTR [rbp+0x66]
  438b08:	jb     0x438b6b
  438b0a:	ins    DWORD PTR es:[rdi],dx
  438b0b:	and    BYTE PTR gs:[rcx+0x74],ah
  438b0f:	and    BYTE PTR [rax+0x63],dh
  438b12:	cmp    eax,0x73257830
  438b17:	add    BYTE PTR [rdx+0x61],dh
  438b1a:	outs   dx,BYTE PTR ds:[rsi]
  438b1b:	cmp    al,BYTE PTR gs:[eax]
  438b1f:	add    BYTE PTR [rdi+0x61],dl
  438b22:	outs   dx,BYTE PTR ds:[rsi]
  438b23:	je     0x438b45
  438b25:	je     0x438b96
  438b27:	and    BYTE PTR [rsi+0x69],ah
  438b2a:	outs   dx,BYTE PTR ds:[rsi]
  438b2b:	and    BYTE PTR fs:[rsi+0x65],ch
  438b2f:	js     0x438ba5
  438b31:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438b35:	movsxd esp,DWORD PTR [rbp+0x66]
  438b38:	jb     0x438b9b
  438b3a:	ins    DWORD PTR es:[rdi],dx
  438b3b:	and    BYTE PTR gs:[rcx+0x6e],ch
  438b3f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  438b43:	and    BYTE PTR [rdx+0x61],dh
  438b46:	outs   dx,BYTE PTR ds:[rsi]
  438b47:	and    BYTE PTR gs:[eax],dh
  438b4b:	js     0x438b72
  438b4d:	jae    0x438b6f
  438b4f:	je     0x438bc0
  438b51:	and    BYTE PTR [rax],dh
  438b53:	js     0x438b7a
  438b55:	jae    0x438b57
  438b57:	outs   dx,DWORD PTR ds:[rsi]
  438b58:	jne    0x438bce
  438b5a:	jae    0x438bc5
  438b5c:	fs cmp al,BYTE PTR gs:[rax]
  438b60:	push   rdi
  438b61:	(bad)  
  438b62:	outs   dx,BYTE PTR ds:[rsi]
  438b63:	je     0x438b85
  438b65:	je     0x438bd6
  438b67:	and    BYTE PTR [rsi+0x69],ah
  438b6a:	outs   dx,BYTE PTR ds:[rsi]
  438b6b:	and    BYTE PTR fs:[rsi+0x65],ch
  438b6f:	js     0x438be5
  438b71:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438b75:	movsxd esp,DWORD PTR [rbp+0x66]
  438b78:	jb     0x438bdb
  438b7a:	ins    DWORD PTR es:[rdi],dx
  438b7b:	and    BYTE PTR gs:[rdi+0x75],ch
  438b7f:	je     0x438bf4
  438b81:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20656874
  438b89:	jb     0x438bec
  438b8b:	outs   dx,BYTE PTR ds:[rsi]
  438b8c:	and    BYTE PTR gs:[eax],dh
  438b90:	js     0x438bb7
  438b92:	jae    0x438bb4
  438b94:	je     0x438c05
  438b96:	and    BYTE PTR [rax],dh
  438b98:	js     0x438bbf
  438b9a:	jae    0x438b9c
  438b9c:	je     0x438c02
  438b9e:	jo     0x438bda
	...
  438ba8:	push   rdi
  438ba9:	(bad)  
  438baa:	outs   dx,BYTE PTR ds:[rsi]
  438bab:	je     0x438bcd
  438bad:	je     0x438c1e
  438baf:	and    BYTE PTR [rsi+0x69],ah
  438bb2:	outs   dx,BYTE PTR ds:[rsi]
  438bb3:	and    BYTE PTR fs:[rsi+0x65],ch
  438bb7:	js     0x438c2d
  438bb9:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438bbd:	movsxd esp,DWORD PTR [rbp+0x66]
  438bc0:	jb     0x438c23
  438bc2:	ins    DWORD PTR es:[rdi],dx
  438bc3:	and    BYTE PTR gs:[rsi+0x6f],ah
  438bc7:	jb     0x438be9
  438bc9:	je     0x438c3d
  438bcb:	(bad)  
  438bcc:	movsxd esp,DWORD PTR [rbp+0x70]
  438bcf:	outs   dx,DWORD PTR ds:[rsi]
  438bd0:	imul   ebp,DWORD PTR [rsi+0x74],0x642520
  438bd7:	add    BYTE PTR [rdi+0x61],dl
  438bda:	outs   dx,BYTE PTR ds:[rsi]
  438bdb:	je     0x438bfd
  438bdd:	je     0x438c4e
  438bdf:	and    BYTE PTR [rbx+0x74],dh
  438be2:	outs   dx,DWORD PTR ds:[rsi]
  438be3:	jo     0x438c05
  438be5:	ins    BYTE PTR es:[rdi],dx
  438be6:	outs   dx,DWORD PTR ds:[rsi]
  438be7:	outs   dx,DWORD PTR ds:[rsi]
  438be8:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  438bec:	and    BYTE PTR [rcx+0x74],ah
  438bef:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438bf3:	movsxd esp,DWORD PTR [rbp+0x66]
  438bf6:	jb     0x438c59
  438bf8:	ins    DWORD PTR es:[rdi],dx
  438bf9:	gs jae 0x438bfc
  438bfc:	push   rdi
  438bfd:	(bad)  
  438bfe:	outs   dx,BYTE PTR ds:[rsi]
  438bff:	je     0x438c21
  438c01:	je     0x438c72
  438c03:	and    BYTE PTR [rdi+rbp*2+0x6f],ch
  438c07:	imul   esp,DWORD PTR [rax],0x61
  438c0a:	je     0x438c2c
  438c0c:	je     0x438c80
  438c0e:	(bad)  
  438c0f:	movsxd esp,DWORD PTR [rbp+0x66]
  438c12:	jb     0x438c75
  438c14:	ins    DWORD PTR es:[rdi],dx
  438c15:	and    BYTE PTR gs:[rip+0x25460064],ah        # 0x25898c80
  438c1c:	js     0x438c72
  438c1e:	and    eax,0x2d460078
  438c23:	xor    DWORD PTR [rax],eax
  438c25:	push   rcx
  438c26:	push   rsp
  438c27:	rex.X jne 0x438c90
  438c2a:	data16 gs jb 0x438c68
  438c2e:	movsxd ebp,DWORD PTR [rcx+0x72]
  438c31:	movsxd esi,DWORD PTR [rbp+0x6c]
  438c34:	(bad)  
  438c35:	jb     0x438c71
  438c37:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  438c3b:	movsxd esp,DWORD PTR [rbp+0x20]
  438c3e:	(bad)  
  438c3f:	jne    0x438ca7
  438c41:	data16 gs jb 0x438c65
  438c45:	imul   esi,DWORD PTR [rbx+0x20],0x20776f6e
  438c4c:	and    eax,0x54510073
  438c51:	rex.X jne 0x438cba
  438c54:	data16 gs jb 0x438c92
  438c58:	jae    0x438cc3
  438c5a:	jp     0x438cc1
  438c5c:	cmp    al,BYTE PTR [rax]
  438c5e:	sub    eax,0x72540031
  438c63:	(bad)  
  438c64:	movsxd esp,DWORD PTR [rbp+0x20]
  438c67:	(bad)  
  438c68:	jne    0x438cd0
  438c6a:	data16 gs jb 0x438c8e
  438c6e:	imul   esi,DWORD PTR [rbx+0x20],0x20776f6e
  438c75:	and    eax,0x79622073
  438c7a:	je     0x438ce1
  438c7c:	jae    0x438c7e
  438c7e:	push   rcx
  438c7f:	push   rsp
  438c80:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  438c82:	je     0x438ce9
  438c84:	jae    0x438cc0
  438c86:	add    BYTE PTR [rbp+0x73],dh
  438c89:	gs jb  0x438cc6
  438c8c:	add    BYTE PTR [rbp+0x73],dl
  438c8f:	gs jb  0x438cb2
  438c92:	imul   esi,DWORD PTR [rbx+0x20],0x27732527
  438c99:	add    BYTE PTR [rsi+0x6f],ch
  438c9c:	je     0x438d03
  438c9e:	jae    0x438cda
  438ca0:	add    BYTE PTR [rsi+0x6f],cl
  438ca3:	je     0x438d0a
  438ca5:	jae    0x438cc7
  438ca7:	imul   esi,DWORD PTR [rbx+0x20],0x27732527
  438cae:	add    BYTE PTR [rbx+rsi*2+0x74],dh
  438cb2:	outs   dx,DWORD PTR ds:[rsi]
  438cb3:	jo     0x438cef
  438cb5:	add    BYTE PTR [rbx+rsi*2+0x74],dh
  438cb9:	outs   dx,DWORD PTR ds:[rsi]
  438cba:	jo     0x438cdc
  438cbc:	outs   dx,BYTE PTR ds:[rsi]
  438cbd:	outs   dx,DWORD PTR ds:[rsi]
  438cbe:	je     0x438d25
  438cc0:	and    BYTE PTR [rcx+0x73],ch
  438cc3:	and    BYTE PTR [rdi],ah
  438cc5:	and    eax,0x2773
  438cca:	add    BYTE PTR [rax],al
  438ccc:	or     eax,esp
  438cce:	std    
  438ccf:	(bad)  
  438cd0:	mov    eax,0xb8fffde2
  438cd5:	loop   0x438cd4
  438cd7:	(bad)  
  438cd8:	mov    eax,0xb8fffde2
  438cdd:	loop   0x438cdc
  438cdf:	(bad)  
  438ce0:	mov    eax,0xb8fffde2
  438ce5:	loop   0x438ce4
  438ce7:	(bad)  
  438ce8:	mov    eax,0xb8fffde2
  438ced:	loop   0x438cec
  438cef:	(bad)  
  438cf0:	mov    eax,0xb8fffde2
  438cf5:	loop   0x438cf4
  438cf7:	(bad)  
  438cf8:	mov    eax,0xb8fffde2
  438cfd:	loop   0x438cfc
  438cff:	(bad)  
  438d00:	mov    eax,0xb8fffde2
  438d05:	loop   0x438d04
  438d07:	(bad)  
  438d08:	mov    eax,0xb8fffde2
  438d0d:	loop   0x438d0c
  438d0f:	(bad)  
  438d10:	mov    eax,0xb8fffde2
  438d15:	loop   0x438d14
  438d17:	(bad)  
  438d18:	mov    eax,0xb8fffde2
  438d1d:	loop   0x438d1c
  438d1f:	(bad)  
  438d20:	mov    eax,0xb8fffde2
  438d25:	loop   0x438d24
  438d27:	(bad)  
  438d28:	mov    eax,0xb8fffde2
  438d2d:	loop   0x438d2c
  438d2f:	(bad)  
  438d30:	mov    eax,0xb8fffde2
  438d35:	loop   0x438d34
  438d37:	(bad)  
  438d38:	mov    eax,0xb8fffde2
  438d3d:	loop   0x438d3c
  438d3f:	(bad)  
  438d40:	mov    eax,0xb8fffde2
  438d45:	loop   0x438d44
  438d47:	inc    DWORD PTR [rcx+riz*8]
  438d4a:	std    
  438d4b:	jmp    rsp
  438d4d:	loope  0x438d4c
  438d4f:	(bad)  
  438d50:	mov    eax,0xb8fffde2
  438d55:	loop   0x438d54
  438d57:	(bad)  
  438d58:	mov    eax,0xb8fffde2
  438d5d:	loop   0x438d5c
  438d5f:	jmp    QWORD PTR [rcx+riz*8-0x3]
  438d63:	jmp    rsp
  438d65:	(bad)  
  438d67:	(bad)  
  438d68:	mov    eax,0xb8fffde2
  438d6d:	loop   0x438d6c
  438d6f:	(bad)  
  438d70:	mov    eax,0xb8fffde2
  438d75:	loop   0x438d74
  438d77:	push   rdi
  438d79:	fdivp  st(5),st
  438d7b:	push   QWORD PTR [rcx+0x54]
  438d7e:	push   rbx
  438d7f:	je     0x438de2
  438d81:	je     0x438df8
  438d83:	jae    0x438d85
  438d85:	jno    0x438ddb
  438d87:	push   rax
  438d88:	cmp    al,BYTE PTR [rax]
  438d8a:	push   rsi
  438d8b:	and    eax,0x3a756c6c
  438d90:	and    eax,0x756c6c
  438d95:	jno    0x438deb
  438d97:	push   ax
  438d99:	add    BYTE PTR [rax],al
  438d9b:	add    BYTE PTR [rax],al
  438d9d:	add    BYTE PTR [rax],al
  438d9f:	add    BYTE PTR [rdx+0x65],dl
  438da2:	je     0x438e19
  438da4:	jb     0x438e14
  438da6:	imul   ebp,DWORD PTR [rsi+0x67],0x72696620
  438dad:	jae    0x438e23
  438daf:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438db3:	movsxd esp,DWORD PTR [rbp+0x70]
  438db6:	outs   dx,DWORD PTR ds:[rsi]
  438db7:	imul   ebp,DWORD PTR [rsi+0x74],0x66656420
  438dbe:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  438dc5:	and    BYTE PTR [rax+0x69],dh
  438dc8:	movsxd esp,DWORD PTR gs:[rbp+0x0]
  438dcc:	jno    0x438e22
  438dce:	jae    0x438e20
	...
  438dd8:	push   rdx
  438dd9:	gs je  0x438e51
  438ddc:	jb     0x438e4c
  438dde:	imul   ebp,DWORD PTR [rsi+0x67],0x62757320
  438de5:	jae    0x438e4c
  438de7:	jno    0x438e5e
  438de9:	outs   dx,BYTE PTR gs:[rsi]
  438deb:	je     0x438e0d
  438ded:	je     0x438e61
  438def:	(bad)  
  438df0:	movsxd esp,DWORD PTR [rbp+0x70]
  438df3:	outs   dx,DWORD PTR ds:[rsi]
  438df4:	imul   ebp,DWORD PTR [rsi+0x74],0x66656420
  438dfb:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  438e02:	and    BYTE PTR [rax+0x69],dh
  438e05:	movsxd esp,DWORD PTR gs:[rbp+0x0]
  438e09:	and    eax,0x3a782563
  438e0e:	and    eax,0x73253a73
  438e13:	add    BYTE PTR [rcx+0x54],dh
  438e16:	push   si
	...
  438e20:	push   rdx
  438e21:	gs je  0x438e99
  438e24:	jb     0x438e94
  438e26:	imul   ebp,DWORD PTR [rsi+0x67],0x72696620
  438e2d:	jae    0x438ea3
  438e2f:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  438e33:	movsxd esp,DWORD PTR [rbp+0x20]
  438e36:	jae    0x438eac
  438e38:	(bad)  
  438e39:	je     0x438ea0
  438e3b:	and    BYTE PTR [rsi+0x61],dh
  438e3e:	jb     0x438ea9
  438e40:	(bad)  
  438e41:	(bad)  
  438e42:	ins    BYTE PTR es:[rdi],dx
  438e43:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  438e48:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  438e4f:	add    BYTE PTR [rcx+0x54],dh
  438e52:	jae    0x438eaa
  438e54:	add    BYTE PTR [rax],al
  438e56:	add    BYTE PTR [rax],al
  438e58:	push   rdx
  438e59:	gs je  0x438ed1
  438e5c:	jb     0x438ecc
  438e5e:	imul   ebp,DWORD PTR [rsi+0x67],0x64646120
  438e65:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x206c616e
  438e6d:	je     0x438ee1
  438e6f:	(bad)  
  438e70:	movsxd esp,DWORD PTR [rbp+0x20]
  438e73:	jae    0x438ee9
  438e75:	(bad)  
  438e76:	je     0x438edd
  438e78:	and    BYTE PTR [rsi+0x61],dh
  438e7b:	jb     0x438ee6
  438e7d:	(bad)  
  438e7e:	(bad)  
  438e7f:	ins    BYTE PTR es:[rdi],dx
  438e80:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  438e85:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  438e8c:	add    BYTE PTR [rcx+0x54],dh
  438e8f:	push   rsi
  438e90:	cmp    al,BYTE PTR [rax]
  438e92:	je     0x438f06
  438e94:	(bad)  
  438e95:	movsxd esp,DWORD PTR [rbp+0x66]
  438e98:	jb     0x438efb
  438e9a:	ins    DWORD PTR es:[rdi],dx
  438e9b:	gs pop rdi
  438e9d:	jb     0x438f04
  438e9f:	(bad)  
  438ea0:	fs pop rdi
  438ea2:	je     0x438f17
  438ea4:	jbe    0x438ea6
  438ea6:	outs   dx,BYTE PTR ds:[rsi]
  438ea7:	outs   dx,DWORD PTR ds:[rsi]
  438ea8:	and    BYTE PTR [rbx+0x75],ah
  438eab:	jb     0x438f1f
  438ead:	outs   dx,BYTE PTR gs:[rsi]
  438eaf:	je     0x438ed1
  438eb1:	je     0x438f25
  438eb3:	(bad)  
  438eb4:	movsxd esp,DWORD PTR [rbp+0x66]
  438eb7:	jb     0x438f1a
  438eb9:	ins    DWORD PTR es:[rdi],dx
  438eba:	add    BYTE PTR gs:[rdx+rsi*2+0x61],dh
  438ebf:	movsxd esp,DWORD PTR [rbp+0x66]
  438ec2:	jb     0x438f25
  438ec4:	ins    DWORD PTR es:[rdi],dx
  438ec5:	and    BYTE PTR gs:[rip+0x6f6e2064],ah        # 0x6fb1af30
  438ecc:	je     0x438eee
  438ece:	outs   dx,WORD PTR ds:[rsi]
  438ed0:	jne    0x438f40
  438ed2:	add    BYTE PTR fs:[rdx+rsi*2+0x61],dh
  438ed7:	movsxd esp,DWORD PTR [rbp+0x66]
  438eda:	jb     0x438f3d
  438edc:	ins    DWORD PTR es:[rdi],dx
  438edd:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61abaf48
  438ee4:	jae    0x438f06
  438ee6:	jbe    0x438f49
  438ee8:	jb     0x438f53
  438eea:	(bad)  
  438eeb:	(bad)  
  438eec:	ins    BYTE PTR es:[rdi],dx
  438eed:	and    BYTE PTR gs:[rip+0x64],ah        # 0x438f58
  438ef4:	add    BYTE PTR [rax],al
  438ef6:	add    BYTE PTR [rax],al
  438ef8:	je     0x438f6c
  438efa:	(bad)  
  438efb:	movsxd esp,DWORD PTR [rbp+0x66]
  438efe:	jb     0x438f61
  438f00:	ins    DWORD PTR es:[rdi],dx
  438f01:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61abaf6c
  438f08:	jae    0x438f2a
  438f0a:	outs   dx,BYTE PTR ds:[rsi]
  438f0b:	outs   dx,DWORD PTR ds:[rsi]
  438f0c:	and    BYTE PTR [rcx+riz*2+0x74],ah
  438f10:	(bad)  
  438f11:	and    BYTE PTR [rsi+0x6f],ah
  438f14:	jb     0x438f36
  438f16:	jbe    0x438f79
  438f18:	jb     0x438f83
  438f1a:	(bad)  
  438f1b:	(bad)  
  438f1c:	ins    BYTE PTR es:[rdi],dx
  438f1d:	and    BYTE PTR gs:[rip+0x6e740064],ah        # 0x6eb78f88
  438f24:	outs   dx,DWORD PTR ds:[rsi]
  438f25:	je     0x438f99
  438f27:	jne    0x438f97
  438f29:	add    BYTE PTR [rsi+0x25],dl
  438f2c:	jae    0x438f2e
  438f2e:	jno    0x438f84
  438f30:	rex.X jne 0x438f99
  438f33:	data16 gs jb 0x438f71
  438f37:	add    BYTE PTR [rdi+0x61],dl
  438f3a:	outs   dx,BYTE PTR ds:[rsi]
  438f3b:	je     0x438f5d
  438f3d:	je     0x438fae
  438f3f:	and    BYTE PTR [rdi+0x65],ah
  438f42:	je     0x438f64
  438f44:	je     0x438fb8
  438f46:	(bad)  
  438f47:	movsxd esp,DWORD PTR [rbp+0x20]
  438f4a:	(bad)  
  438f4b:	jne    0x438fb3
  438f4d:	data16 gs jb 0x438f7d
  438f51:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a5afbb
  438f57:	je     0x438fbe
  438f59:	jae    0x438f7b
  438f5b:	(bad)  
  438f5c:	je     0x438f7e
  438f5e:	outs   dx,DWORD PTR ds:[rsi]
  438f5f:	data16 data16 jae 0x438fc8
  438f63:	je     0x438f85
  438f65:	xor    BYTE PTR [rax+0x25],bh
  438f68:	jae    0x438f6a
  438f6a:	jno    0x438fc0
  438f6c:	push   bx
  438f6e:	push   rsp
  438f6f:	rex.WRB add BYTE PTR [r9+0x54],r14b
  438f73:	jae    0x438fc8
  438f75:	push   rsp
  438f76:	rex.WRB add BYTE PTR [r9+0x54],r14b
  438f7a:	push   rbx
  438f7b:	push   rsp
  438f7c:	rex.WRB (bad) 
  438f7e:	je     0x438fba
  438f80:	add    BYTE PTR [rcx+0x54],dh
  438f83:	imul   r13,QWORD PTR [r14+0x46],0x4c495054
  438f8b:	outs   dx,BYTE PTR gs:[rsi]
  438f8d:	add    BYTE PTR [rip+0x78],ah        # 0x43900b
  438f93:	add    BYTE PTR [rax],al
  438f95:	add    BYTE PTR [rax],al
  438f97:	add    BYTE PTR [rax+rbp*2+0x72],dl
  438f9b:	gs (bad) 
  438f9d:	and    BYTE PTR fs:[rip+0x69662073],ah        # 0x69a9b017
  438fa4:	outs   dx,BYTE PTR ds:[rsi]
  438fa5:	imul   esi,DWORD PTR [rbx+0x68],0x61206465
  438fac:	and    BYTE PTR [rbx+0x69],dh
  438faf:	outs   dx,BYTE PTR ds:[rsi]
  438fb0:	ins    BYTE PTR es:[edi],dx
  438fb2:	gs sub eax,0x70657473
  438fb8:	and    BYTE PTR [rsi+0x6f],ah
  438fbb:	jb     0x438fdd
  438fbd:	je     0x439031
  438fbf:	(bad)  
  438fc0:	movsxd esp,DWORD PTR [rbp+0x70]
  438fc3:	outs   dx,DWORD PTR ds:[rsi]
  438fc4:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  438fcb:	(bad)  
  438fcc:	je     0x438fee
  438fce:	xor    BYTE PTR [rax+0x25],bh
  438fd1:	jae    0x438fd3
  438fd3:	add    BYTE PTR [rax],al
  438fd5:	add    BYTE PTR [rax],al
  438fd7:	add    BYTE PTR [rsi+0x4f],cl
  438fda:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  438fde:	rex.XB
  438fdf:	rex.RB push r8
  438fe1:	rex.WRXB
  438fe2:	rex.WB
  438fe3:	rex.WRX push rsp
  438fe5:	and    BYTE PTR [rip+0x74612064],ah        # 0x74a4b04f
  438feb:	and    BYTE PTR [rax],dh
  438fed:	js     0x439014
  438fef:	jae    0x439011
  438ff1:	rex.RX
  438ff2:	rex.WRXB push r10
  438ff4:	and    BYTE PTR [rax+rcx*2+0x52],dl
  438ff8:	rex.RB
  438ff9:	rex.B
  438ffa:	and    BYTE PTR [rip+0x4d002173],r12b        # 0x4d43b174
  439001:	(bad)  
  439002:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  439006:	and    BYTE PTR [rsi+0x65],ch
  439009:	ja     0x43902b
  43900b:	jae    0x439081
  43900d:	gs jo  0x439030
  439010:	je     0x439084
  439012:	(bad)  
  439013:	movsxd esp,DWORD PTR [rbp+0x66]
  439016:	jb     0x439079
  439018:	ins    DWORD PTR es:[rdi],dx
  439019:	and    BYTE PTR gs:[rsi+0x6f],ah
  43901d:	jb     0x43903f
  43901f:	je     0x439093
  439021:	(bad)  
  439022:	movsxd esp,DWORD PTR [rbp+0x70]
  439025:	outs   dx,DWORD PTR ds:[rsi]
  439026:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  43902d:	(bad)  
  43902e:	je     0x439050
  439030:	xor    BYTE PTR [rax+0x25],bh
  439033:	jae    0x439061
  439035:	and    BYTE PTR [rbx+0x74],dh
  439038:	gs jo  0x43905b
  43903b:	and    eax,0x666f2064
  439040:	and    BYTE PTR [rip+0x2c756c6c],ah        # 0x2cb8fcb2
  439046:	and    BYTE PTR [rax+0x69],ch
  439049:	je     0x43906b
  43904b:	and    eax,0x756c6c
  439050:	push   rsp
  439051:	jb     0x4390b4
  439053:	movsxd esp,DWORD PTR [rbp+0x70]
  439056:	outs   dx,DWORD PTR ds:[rsi]
  439057:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  43905e:	(bad)  
  43905f:	je     0x439081
  439061:	xor    BYTE PTR [rax+0x25],bh
  439064:	jae    0x439086
  439066:	(bad)  
  439067:	(bad)  
  439068:	outs   dx,DWORD PTR ds:[rsi]
  439069:	jne    0x4390df
  43906b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43906f:	outs   dx,DWORD PTR fs:[rsi]
  439071:	and    BYTE PTR [rbx+0x74],dh
  439074:	gs jo  0x439097
  439077:	(bad)  
  439078:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43907c:	outs   dx,BYTE PTR ds:[rsi]
  43907d:	and    BYTE PTR [rdi],ah
  43907f:	and    eax,0x2773
  439084:	add    BYTE PTR [rax],al
  439086:	add    BYTE PTR [rax],al
  439088:	push   rsp
  439089:	push   0x64616572
  43908e:	and    BYTE PTR [rip+0x6f642073],ah        # 0x6fa7b107
  439094:	outs   dx,BYTE PTR ds:[rsi]
  439095:	and    BYTE PTR gs:[rbx+0x74],dh
  439099:	gs jo  0x43910c
  43909c:	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
  4390a3:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4390a7:	movsxd esp,DWORD PTR [rbp+0x70]
  4390aa:	outs   dx,DWORD PTR ds:[rsi]
  4390ab:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  4390b2:	(bad)  
  4390b3:	je     0x4390d5
  4390b5:	xor    BYTE PTR [rax+0x25],bh
  4390b8:	jae    0x4390ba
  4390ba:	ins    BYTE PTR es:[rdi],dx
  4390bb:	imul   esp,DWORD PTR [rdx+0x20],0x706f7473
  4390c2:	jo     0x439129
  4390c4:	and    BYTE PTR fs:[rcx+0x74],ah
  4390c8:	and    BYTE PTR [rbx+0x74],dh
  4390cb:	outs   dx,DWORD PTR ds:[rsi]
  4390cc:	jo     0x43912d
  4390ce:	je     0x439142
  4390d0:	(bad)  
  4390d1:	movsxd ebp,DWORD PTR [rcx+0x6e]
  4390d4:	add    BYTE PTR [eax],al
  4390d7:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4390db:	cmp    ah,BYTE PTR [rax]
  4390dd:	je     0x439151
  4390df:	(bad)  
  4390e0:	movsxd esp,DWORD PTR [rbp+0x5f]
  4390e3:	(bad)  
  4390e4:	jne    0x43914c
  4390e6:	data16 gs jb 0x439149
  4390ea:	imul   esi,DWORD PTR [rbx+0x5f],0x6c6c7566
  4390f1:	cmp    ah,BYTE PTR [rax]
  4390f3:	and    eax,0x73202c64
  4390f8:	je     0x439169
  4390fa:	jo     0x43916c
  4390fc:	imul   ebp,DWORD PTR [rsi+0x67],0x6172745f
  439103:	movsxd esp,DWORD PTR [rbp+0x70]
  439106:	outs   dx,DWORD PTR ds:[rsi]
  439107:	imul   ebp,DWORD PTR [rsi+0x74],0x7325203a
  43910e:	sub    al,0x20
  439110:	imul   esi,DWORD PTR [rax+0x61],0x7078655f
  439117:	jb     0x439178
  439119:	gs jbe 0x43917d
  43911c:	ins    BYTE PTR es:[rdi],dx
  43911d:	pop    rdi
  43911e:	jb     0x439185
  439120:	jae    0x439197
  439122:	ins    BYTE PTR es:[rdi],dx
  439123:	je     0x43915f
  439125:	and    BYTE PTR [rip+0x65202c64],ah        # 0x6563bd8f
  43912b:	jb     0x43919f
  43912d:	outs   dx,DWORD PTR ds:[rsi]
  43912e:	jb     0x43918f
  439130:	je     0x4391a4
  439132:	(bad)  
  439133:	movsxd esp,DWORD PTR [rbp+0x70]
  439136:	outs   dx,DWORD PTR ds:[rsi]
  439137:	imul   ebp,DWORD PTR [rsi+0x74],0x7325203a
  43913e:	sub    al,0x20
	...
  439148:	ins    BYTE PTR es:[rdi],dx
  439149:	imul   esp,DWORD PTR [rdx+0x20],0x706f7473
  439150:	jo     0x4391b7
  439152:	and    BYTE PTR fs:[rbp+rsi*2+0x65],ah
  439157:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43915b:	data16 jne 0x4391ca
  43915e:	ins    BYTE PTR es:[rdi],dx
  43915f:	and    BYTE PTR [rdx+0x75],ah
  439162:	data16 data16 gs jb 0x439195
  439167:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  43916b:	and    BYTE PTR [rbx+0x74],dh
  43916e:	outs   dx,DWORD PTR ds:[rsi]
  43916f:	jo     0x4391e1
  439171:	gs and BYTE PTR fs:[rbp+rsi*2+0x65],ah
  439177:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43917b:	je     0x4391ed
  43917d:	outs   dx,DWORD PTR ds:[rsi]
  43917e:	imul   ebp,DWORD PTR [rsi+0x74],0x62696c00
  439185:	and    BYTE PTR [rbx+0x74],dh
  439188:	outs   dx,DWORD PTR ds:[rsi]
  439189:	jo     0x4391fb
  43918b:	gs and BYTE PTR fs:[rbp+rsi*2+0x65],ah
  439191:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  439195:	gs jb  0x43920a
  439198:	outs   dx,DWORD PTR ds:[rsi]
  439199:	jb     0x43919b
  43919b:	add    BYTE PTR [rax],al
  43919d:	add    BYTE PTR [rax],al
  43919f:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4391a3:	and    BYTE PTR [rbx+0x74],dh
  4391a6:	outs   dx,DWORD PTR ds:[rsi]
  4391a7:	jo     0x439219
  4391a9:	gs and BYTE PTR fs:[rcx+0x74],ah
  4391ae:	and    BYTE PTR [rsi+0x6c],ah
  4391b1:	jne    0x439226
  4391b3:	push   0x6172745f
  4391b8:	movsxd esp,DWORD PTR [rbp+0x5f]
  4391bb:	(bad)  
  4391bc:	jne    0x439224
  4391be:	data16 gs jb 0x4391c2
  4391c2:	add    BYTE PTR [rax],al
  4391c4:	add    BYTE PTR [rax],al
  4391c6:	add    BYTE PTR [rax],al
  4391c8:	push   rsp
  4391c9:	push   0x64616572
  4391ce:	and    BYTE PTR [rip+0x74612073],ah        # 0x74a4b247
  4391d4:	and    BYTE PTR [rcx+0x64],ah
  4391d7:	fs jb  0x43923f
  4391da:	jae    0x43924f
  4391dc:	and    BYTE PTR [rdi+0x66],ch
  4391df:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4391e3:	movsxd esp,DWORD PTR [rbp+0x70]
  4391e6:	outs   dx,DWORD PTR ds:[rsi]
  4391e7:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  4391ee:	(bad)  
  4391ef:	je     0x439211
  4391f1:	xor    BYTE PTR [rax+0x25],bh
  4391f4:	jae    0x4391f6
  4391f6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4391f9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7254006e
  439202:	(bad)  
  439203:	movsxd esp,DWORD PTR [rbp+0x70]
  439206:	outs   dx,DWORD PTR ds:[rsi]
  439207:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  43920e:	(bad)  
  43920f:	je     0x439231
  439211:	xor    BYTE PTR [rax+0x25],bh
  439214:	jae    0x439236
  439216:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439219:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7665206e
  439222:	(bad)  
  439223:	ins    BYTE PTR es:[rdi],dx
  439224:	jae    0x439246
  439226:	je     0x439297
  439228:	and    BYTE PTR [rip+0x73],ah        # 0x4392a1
  43922e:	add    BYTE PTR [rax],al
  439230:	rex.WRB (bad) 
  439232:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  439236:	and    BYTE PTR [rsi+0x65],ch
  439239:	ja     0x43925b
  43923b:	je     0x4392af
  43923d:	(bad)  
  43923e:	movsxd esp,DWORD PTR [rbp+0x66]
  439241:	jb     0x4392a4
  439243:	ins    DWORD PTR es:[rdi],dx
  439244:	and    BYTE PTR gs:[rsi+0x6f],ah
  439248:	jb     0x43926a
  43924a:	je     0x4392be
  43924c:	(bad)  
  43924d:	movsxd esp,DWORD PTR [rbp+0x70]
  439250:	outs   dx,DWORD PTR ds:[rsi]
  439251:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  439258:	(bad)  
  439259:	je     0x43927b
  43925b:	xor    BYTE PTR [rax+0x25],bh
  43925e:	jae    0x43928c
  439260:	and    BYTE PTR [rax+0x69],ch
  439263:	je     0x439285
  439265:	and    eax,0x756c6c
  43926a:	add    BYTE PTR [rax],al
  43926c:	add    BYTE PTR [rax],al
  43926e:	add    BYTE PTR [rax],al
  439270:	push   rsp
  439271:	jb     0x4392d4
  439273:	movsxd esp,DWORD PTR [rbp+0x70]
  439276:	outs   dx,DWORD PTR ds:[rsi]
  439277:	imul   ebp,DWORD PTR [rsi+0x74],0x20642520
  43927e:	(bad)  
  43927f:	je     0x4392a1
  439281:	xor    BYTE PTR [rax+0x25],bh
  439284:	jae    0x4392a6
  439286:	(bad)  
  439287:	(bad)  
  439288:	outs   dx,DWORD PTR ds:[rsi]
  439289:	jne    0x4392ff
  43928b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43928f:	outs   dx,DWORD PTR fs:[rsi]
  439291:	and    BYTE PTR [rcx+0x63],ah
  439294:	je     0x4392ff
  439296:	outs   dx,DWORD PTR ds:[rsi]
  439297:	outs   dx,BYTE PTR ds:[rsi]
  439298:	and    BYTE PTR [rdi],ah
  43929a:	and    eax,0x56002773
  43929f:	(bad)  
  4392a0:	jb     0x43930b
  4392a2:	(bad)  
  4392a3:	(bad)  
  4392a4:	ins    BYTE PTR es:[rdi],dx
  4392a5:	and    BYTE PTR gs:[rip+0x65722064],ah        # 0x65b5b310
  4392ac:	movsxd ebp,DWORD PTR [rdi+0x72]
  4392af:	fs gs add BYTE PTR fs:[rdx+rsi*2+0x61],dh
  4392b6:	movsxd esp,DWORD PTR [rbp+0x66]
  4392b9:	jb     0x43931c
  4392bb:	ins    DWORD PTR es:[rdi],dx
  4392bc:	gs pop rdi
  4392be:	jb     0x439325
  4392c0:	(bad)  
  4392c1:	fs pop rdi
  4392c3:	ins    DWORD PTR es:[rdi],dx
  4392c4:	gs ins DWORD PTR es:[rdi],dx
  4392c6:	add    BYTE PTR [rax],al
  4392c8:	je     0x43933c
  4392ca:	(bad)  
  4392cb:	movsxd esp,DWORD PTR [rbp+0x66]
  4392ce:	jb     0x439331
  4392d0:	ins    DWORD PTR es:[rdi],dx
  4392d1:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61abb33c
  4392d8:	jae    0x4392fa
  4392da:	and    eax,0x79622064
  4392df:	je     0x439346
  4392e1:	jae    0x439303
  4392e3:	(bad)  
  4392e4:	je     0x439306
  4392e6:	and    eax,0x73
  4392eb:	add    BYTE PTR [rax],al
  4392ed:	add    BYTE PTR [rax],al
  4392ef:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  4392f3:	movsxd esp,DWORD PTR [rbp+0x66]
  4392f6:	jb     0x439359
  4392f8:	ins    DWORD PTR es:[rdi],dx
  4392f9:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61abb364
  439300:	jae    0x439322
  439302:	outs   dx,BYTE PTR ds:[rsi]
  439303:	outs   dx,DWORD PTR ds:[rsi]
  439304:	and    BYTE PTR [rbp+0x65],ch
  439307:	ins    DWORD PTR es:[rdi],dx
  439308:	outs   dx,DWORD PTR ds:[rsi]
  439309:	jb     0x439384
  43930b:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43930f:	(bad)  
  439310:	and    BYTE PTR [rsi+0x6f],ah
  439313:	jb     0x439335
  439315:	je     0x43937f
  439317:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
  43931c:	imul   esi,DWORD PTR [rdx+0x65],0x65722064
  439323:	imul   ebp,DWORD PTR [edi+0x6e],0x61727400
  43932b:	movsxd esp,DWORD PTR [rbp+0x66]
  43932e:	jb     0x439391
  439330:	ins    DWORD PTR es:[rdi],dx
  439331:	gs pop rdi
  439333:	jb     0x43939a
  439335:	(bad)  
  439336:	fs pop rdi
  439338:	jae    0x43939e
  43933a:	(bad)  
  43933b:	je     0x43939e
  43933d:	add    BYTE PTR [rax],al
  43933f:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  439343:	movsxd esp,DWORD PTR [rbp+0x66]
  439346:	jb     0x4393a9
  439348:	ins    DWORD PTR es:[rdi],dx
  439349:	and    BYTE PTR gs:[rip+0x61682064],ah        # 0x61abb3b4
  439350:	jae    0x439372
  439352:	outs   dx,BYTE PTR ds:[rsi]
  439353:	outs   dx,DWORD PTR ds:[rsi]
  439354:	and    BYTE PTR [rbx+0x74],dh
  439357:	(bad)  
  439358:	je     0x4393c3
  43935a:	movsxd esp,DWORD PTR [rax]
  43935c:	je     0x4393d0
  43935e:	(bad)  
  43935f:	movsxd esp,DWORD PTR [rbp+0x20]
  439362:	fs (bad) 
  439364:	je     0x4393c7
  439366:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  43936a:	movsxd esp,DWORD PTR [rbp+0x66]
  43936d:	jb     0x4393d0
  43936f:	ins    DWORD PTR es:[rdi],dx
  439370:	gs pop rdi
  439372:	jb     0x4393d9
  439374:	(bad)  
  439375:	fs pop rdi
  439377:	imul   ebp,DWORD PTR [rsi+0x66],0x743c006f
  43937e:	jb     0x4393e1
  439380:	movsxd esp,DWORD PTR [rbp+0x66]
  439383:	jb     0x4393e6
  439385:	ins    DWORD PTR es:[rdi],dx
  439386:	gs sub eax,0x6f666e69
  43938c:	or     al,BYTE PTR ds:[rax]
  43938f:	cmp    al,0x2f
  439391:	je     0x439405
  439393:	(bad)  
  439394:	movsxd esp,DWORD PTR [rbp+0x66]
  439397:	jb     0x4393fa
  439399:	ins    DWORD PTR es:[rdi],dx
  43939a:	gs sub eax,0x6f666e69
  4393a0:	or     al,BYTE PTR ds:[rax]
  4393a3:	data16 (bad) 
  4393a5:	jae    0x43941b
  4393a7:	pop    rdi
  4393a8:	je     0x43941c
  4393aa:	(bad)  
  4393ab:	movsxd esp,DWORD PTR [rbp+0x70]
  4393ae:	outs   dx,DWORD PTR ds:[rsi]
  4393af:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  4393b6:	ins    BYTE PTR es:[rdi],dx
  4393b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4393bc:	add    BYTE PTR [eax],al
  4393bf:	add    BYTE PTR [rbp+0x72],ah
  4393c2:	jb     0x439433
  4393c4:	jb     0x4393e6
  4393c6:	gs js  0x43943d
  4393c9:	jb     0x43942c
  4393cb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  4393cf:	and    BYTE PTR [eax+0x67],ah
  4393d3:	fs (bad) 
  4393d5:	pop    rdi
  4393d6:	push   0x75
  4393d8:	ins    DWORD PTR es:[rdi],dx
  4393d9:	jo     0x43943a
  4393db:	jo     0x43943e
  4393dd:	fs pop rdi
  4393df:	(bad)  
  4393e0:	jne    0x439448
  4393e2:	data16 gs jb 0x43940d
  4393e6:	add    BYTE PTR [rax],al
  4393e8:	gs jb  0x43945d
  4393eb:	outs   dx,DWORD PTR ds:[rsi]
  4393ec:	jb     0x43940e
  4393ee:	gs js  0x439465
  4393f1:	jb     0x439454
  4393f3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  4393f7:	and    BYTE PTR [eax+0x67],ah
  4393fb:	fs (bad) 
  4393fd:	pop    rdi
  4393fe:	push   0x75
  439400:	ins    DWORD PTR es:[rdi],dx
  439401:	jo     0x439462
  439403:	jo     0x439466
  439405:	fs pop rdi
  439407:	(bad)  
  439408:	jne    0x439470
  43940a:	data16 gs jb 0x43946d
  43940e:	outs   dx,BYTE PTR gs:[rsi]
  439410:	fs (bad) 
  439412:	add    BYTE PTR [rax],al
  439414:	add    BYTE PTR [rax],al
  439416:	add    BYTE PTR [rax],al
  439418:	gs jb  0x43948d
  43941b:	outs   dx,DWORD PTR ds:[rsi]
  43941c:	jb     0x43943e
  43941e:	gs js  0x439495
  439421:	jb     0x439484
  439423:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  439427:	and    BYTE PTR [eax+0x67],ah
  43942b:	fs (bad) 
  43942d:	pop    rdi
  43942e:	je     0x4394a2
  439430:	(bad)  
  439431:	ins    DWORD PTR es:[rdi],dx
  439432:	jo     0x4394a3
  439434:	ins    BYTE PTR es:[rdi],dx
  439435:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  43943c:	data16 gs jb 0x439467
	...
  439448:	gs jb  0x4394bd
  43944b:	outs   dx,DWORD PTR ds:[rsi]
  43944c:	jb     0x43946e
  43944e:	gs js  0x4394c5
  439451:	jb     0x4394b4
  439453:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  439457:	and    BYTE PTR [eax+0x67],ah
  43945b:	fs (bad) 
  43945d:	pop    rdi
  43945e:	je     0x4394d2
  439460:	(bad)  
  439461:	ins    DWORD PTR es:[rdi],dx
  439462:	jo     0x4394d3
  439464:	ins    BYTE PTR es:[rdi],dx
  439465:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  43946c:	data16 gs jb 0x4394cf
  439470:	outs   dx,BYTE PTR gs:[rsi]
  439472:	fs (bad) 
  439474:	add    BYTE PTR [rax],al
  439476:	add    BYTE PTR [rax],al
  439478:	imul   ebp,DWORD PTR [rsi+0x20],0x706d756a
  43947f:	and    BYTE PTR [rax+0x61],dh
  439482:	and    BYTE PTR fs:[rdi+0x66],ch
  439486:	and    BYTE PTR [rax+rsi*2+0x6f],dh
  43948a:	imul   ebp,DWORD PTR [rsi+0x74],0x64252820
  439491:	sub    al,0x20
  439493:	and    eax,0x203b2973
  439498:	push   0x75
  43949a:	ins    DWORD PTR es:[rdi],dx
  43949b:	jo     0x4394fc
  43949d:	jo     0x439500
  43949f:	sub    BYTE PTR fs:[rip+0x25202c73],ah        # 0x2563c119
  4394a6:	jae    0x4394d1
  4394a8:	cmp    esp,DWORD PTR [rax]
  4394aa:	(bad)  
  4394ab:	fs push 0x5f
  4394ae:	imul   ebp,DWORD PTR [rsi+0x73],0x7325286e
  4394b5:	sub    al,0x20
  4394b7:	and    eax,0x2973
  4394bc:	add    BYTE PTR [rax],al
  4394be:	add    BYTE PTR [rax],al
  4394c0:	imul   ebp,DWORD PTR [rsi+0x20],0x6d617274
  4394c7:	jo     0x439538
  4394c9:	ins    BYTE PTR es:[rdi],dx
  4394ca:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  4394d1:	je     0x439543
  4394d3:	outs   dx,DWORD PTR ds:[rsi]
  4394d4:	imul   ebp,DWORD PTR [rsi+0x74],0x64252820
  4394db:	sub    al,0x20
  4394dd:	and    eax,0x203b2973
  4394e2:	je     0x439556
  4394e4:	(bad)  
  4394e5:	ins    DWORD PTR es:[rdi],dx
  4394e6:	jo     0x439557
  4394e8:	ins    BYTE PTR es:[rdi],dx
  4394e9:	imul   ebp,DWORD PTR [rsi+0x65],0x2c732528
  4394f0:	and    BYTE PTR [rip+0x2973],ah        # 0x43be69
  4394f6:	add    BYTE PTR [rax],al
  4394f8:	data16 (bad) 
  4394fa:	jae    0x439570
  4394fc:	pop    rdi
  4394fd:	je     0x439571
  4394ff:	(bad)  
  439500:	movsxd esp,DWORD PTR [rbp+0x70]
  439503:	outs   dx,DWORD PTR ds:[rsi]
  439504:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  43950b:	ins    BYTE PTR es:[rdi],dx
  43950c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439511:	cmp    ah,BYTE PTR [eax]
  439514:	data16 (bad) 
  439516:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61657220
  43951e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f632720
  439526:	ins    BYTE PTR es:[rdi],dx
  439527:	ins    BYTE PTR es:[rdi],dx
  439528:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  43952d:	addr32 (bad) 
  43952f:	and    BYTE PTR [rcx+0x6e],ch
  439532:	and    BYTE PTR [rax+rbp*2+0x65],dh
  439536:	and    BYTE PTR [rcx+0x6e],ch
  439539:	data16 gs jb 0x4395a6
  43953d:	outs   dx,DWORD PTR ds:[rsi]
  43953e:	jb     0x439540
  439540:	data16 (bad) 
  439542:	jae    0x4395b8
  439544:	pop    rdi
  439545:	je     0x4395b9
  439547:	(bad)  
  439548:	movsxd esp,DWORD PTR [rbp+0x70]
  43954b:	outs   dx,DWORD PTR ds:[rsi]
  43954c:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  439553:	ins    BYTE PTR es:[rdi],dx
  439554:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439559:	cmp    ah,BYTE PTR [eax]
  43955c:	outs   dx,BYTE PTR ds:[rsi]
  43955d:	outs   dx,DWORD PTR ds:[rsi]
  43955e:	je     0x439580
  439560:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439563:	ins    BYTE PTR es:[rdi],dx
  439564:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439569:	and    BYTE PTR [eax],ch
  43956c:	(bad)  
  43956d:	outs   dx,BYTE PTR ds:[rsi]
  43956e:	and    BYTE PTR fs:[rsi+0x6f],ch
  439572:	(bad)  
  439573:	outs   dx,DWORD PTR ds:[rsi]
  439574:	fs jns 0x439597
  439577:	imul   esi,DWORD PTR [rbx+0x29],0x2e
  43957e:	add    BYTE PTR [rax],al
  439580:	data16 (bad) 
  439582:	jae    0x4395f8
  439584:	pop    rdi
  439585:	je     0x4395f9
  439587:	(bad)  
  439588:	movsxd esp,DWORD PTR [rbp+0x70]
  43958b:	outs   dx,DWORD PTR ds:[rsi]
  43958c:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  439593:	ins    BYTE PTR es:[rdi],dx
  439594:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439599:	cmp    ah,BYTE PTR [eax]
  43959c:	outs   dx,BYTE PTR ds:[rsi]
  43959d:	outs   dx,DWORD PTR ds:[rsi]
  43959e:	je     0x4395c0
  4395a0:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4395a3:	ins    BYTE PTR es:[rdi],dx
  4395a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4395a9:	and    BYTE PTR [eax],ch
  4395ac:	(bad)  
  4395ad:	outs   dx,BYTE PTR ds:[rsi]
  4395ae:	outs   dx,DWORD PTR ds:[rsi]
  4395af:	je     0x439619
  4395b1:	gs jb  0x4395d4
  4395b4:	je     0x43961e
  4395b6:	jb     0x43961d
  4395b8:	(bad)  
  4395b9:	and    BYTE PTR fs:[rcx+0x73],ch
  4395bd:	sub    DWORD PTR [rax],eax
  4395bf:	add    BYTE PTR [rsi+0x61],ah
  4395c2:	jae    0x439638
  4395c4:	pop    rdi
  4395c5:	je     0x439639
  4395c7:	(bad)  
  4395c8:	movsxd esp,DWORD PTR [rbp+0x70]
  4395cb:	outs   dx,DWORD PTR ds:[rsi]
  4395cc:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  4395d3:	ins    BYTE PTR es:[rdi],dx
  4395d4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4395d9:	addr32 sub al,0x20
  4395dc:	jb     0x439643
  4395de:	je     0x439655
  4395e0:	jb     0x439650
  4395e2:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  4395e9:	je     0x439654
  4395eb:	outs   dx,BYTE PTR ds:[rsi]
  4395ec:	jne    0x439653
  4395ee:	sub    eax,0x69746e75
  4395f3:	ins    BYTE PTR es:[rdi],dx
  4395f4:	sub    eax,0x61657262
  4395f9:	imul   esp,DWORD PTR [rax],0x61
  4395fc:	je     0x43961e
  4395fe:	and    eax,0x73
  439603:	add    BYTE PTR [rax],al
  439605:	add    BYTE PTR [rax],al
  439607:	add    BYTE PTR [rsi+0x61],ah
  43960a:	jae    0x439680
  43960c:	pop    rdi
  43960d:	je     0x439681
  43960f:	(bad)  
  439610:	movsxd esp,DWORD PTR [rbp+0x70]
  439613:	outs   dx,DWORD PTR ds:[rsi]
  439614:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  43961b:	ins    BYTE PTR es:[rdi],dx
  43961c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439621:	addr32 sub al,0x20
  439624:	jb     0x43968b
  439626:	je     0x43969d
  439628:	jb     0x439698
  43962a:	imul   ebp,DWORD PTR [rsi+0x67],0x65656e20
  439631:	fs sub eax,0x676e6973
  439637:	ins    BYTE PTR es:[rdi],dx
  439638:	gs sub eax,0x70657473
  43963e:	and    BYTE PTR [rax],ch
  439640:	and    eax,0x73252d73
  439645:	sub    DWORD PTR [rax],eax
  439647:	add    BYTE PTR [rcx+0x6e],ch
  43964a:	and    BYTE PTR [rdx+0x75],ch
  43964d:	ins    DWORD PTR es:[rdi],dx
  43964e:	jo     0x439670
  439650:	jo     0x4396b3
  439652:	fs sub al,0x20
  439655:	(bad)  
  439656:	jne    0x4396cc
  439658:	and    BYTE PTR [rsi+0x6f],ch
  43965b:	and    BYTE PTR [rbp+0x61],ch
  43965e:	je     0x4396c3
  439660:	push   0x20676e69
  439665:	je     0x4396d7
  439667:	outs   dx,DWORD PTR ds:[rsi]
  439668:	imul   ebp,DWORD PTR [rsi+0x74],0x3f
  43966f:	add    BYTE PTR [rcx+0x6e],ch
  439672:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  439676:	ins    DWORD PTR es:[rdi],dx
  439677:	jo     0x4396e8
  439679:	ins    BYTE PTR es:[rdi],dx
  43967a:	imul   ebp,DWORD PTR [rsi+0x65],0x7562202c
  439681:	je     0x4396a3
  439683:	outs   dx,BYTE PTR ds:[rsi]
  439684:	outs   dx,DWORD PTR ds:[rsi]
  439685:	and    BYTE PTR [rbp+0x61],ch
  439688:	je     0x4396ed
  43968a:	push   0x20676e69
  43968f:	je     0x439701
  439691:	outs   dx,DWORD PTR ds:[rsi]
  439692:	imul   ebp,DWORD PTR [rsi+0x74],0x6600003f
  439699:	(bad)  
  43969a:	jae    0x439710
  43969c:	pop    rdi
  43969d:	je     0x439711
  43969f:	(bad)  
  4396a0:	movsxd esp,DWORD PTR [rbp+0x70]
  4396a3:	outs   dx,DWORD PTR ds:[rsi]
  4396a4:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f635f
  4396ab:	ins    BYTE PTR es:[rdi],dx
  4396ac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4396b1:	cmp    ah,BYTE PTR [eax]
  4396b4:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4396b7:	ins    BYTE PTR es:[rdi],dx
  4396b8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4396bd:	addr32 sub al,0x20
  4396c0:	(bad)  
  4396c1:	jne    0x439737
  4396c3:	and    BYTE PTR [rax+rsi*2+0x6f],dh
  4396c7:	imul   ebp,DWORD PTR [rsi+0x74],0x20732520
  4396ce:	outs   dx,BYTE PTR ds:[rsi]
  4396cf:	outs   dx,DWORD PTR ds:[rsi]
  4396d0:	je     0x4396f2
  4396d2:	outs   dx,WORD PTR ds:[rsi]
  4396d4:	jne    0x439744
  4396d6:	fs (bad) 
	...
  4396e0:	gs jb  0x439755
  4396e3:	outs   dx,DWORD PTR ds:[rsi]
  4396e4:	jb     0x439706
  4396e6:	gs js  0x43975d
  4396e9:	jb     0x43974c
  4396eb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  4396ef:	and    BYTE PTR [edi+0x65],ah
  4396f3:	je     0x439754
  4396f5:	jb     0x439758
  4396f7:	ja     0x439758
  4396f9:	jb     0x439760
  4396fb:	addr32 pop rdi
  4396fd:	jo     0x439773
  4396ff:	jb     0x439701
  439701:	add    BYTE PTR [rax],al
  439703:	add    BYTE PTR [rax],al
  439705:	add    BYTE PTR [rax],al
  439707:	add    BYTE PTR [rbp+0x72],ah
  43970a:	jb     0x43977b
  43970c:	jb     0x43972e
  43970e:	gs js  0x439785
  439711:	jb     0x439774
  439713:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  439717:	and    BYTE PTR [edi+0x65],ah
  43971b:	je     0x43977c
  43971d:	je     0x439791
  43971f:	(bad)  
  439720:	movsxd esp,DWORD PTR [rbp+0x5f]
  439723:	jae    0x439799
  439725:	(bad)  
  439726:	je     0x43978d
  439728:	pop    rdi
  439729:	jbe    0x43978c
  43972b:	jb     0x439796
  43972d:	(bad)  
  43972e:	(bad)  
  43972f:	ins    BYTE PTR es:[rdi],dx
  439730:	gs pop rdi
  439732:	jbe    0x439795
  439734:	ins    BYTE PTR es:[rdi],dx
  439735:	jne    0x43979c
  439737:	pop    rdi
  439738:	jo     0x4397ae
  43973a:	jb     0x43973c
  43973c:	add    BYTE PTR [rax],al
  43973e:	add    BYTE PTR [rax],al
  439740:	gs jb  0x4397b5
  439743:	outs   dx,DWORD PTR ds:[rsi]
  439744:	jb     0x439766
  439746:	gs js  0x4397bd
  439749:	jb     0x4397ac
  43974b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  43974f:	and    BYTE PTR [ebx+0x65],dh
  439753:	je     0x4397b4
  439755:	je     0x4397c9
  439757:	(bad)  
  439758:	movsxd esp,DWORD PTR [rbp+0x5f]
  43975b:	jae    0x4397d1
  43975d:	(bad)  
  43975e:	je     0x4397c5
  439760:	pop    rdi
  439761:	jbe    0x4397c4
  439763:	jb     0x4397ce
  439765:	(bad)  
  439766:	(bad)  
  439767:	ins    BYTE PTR es:[rdi],dx
  439768:	gs pop rdi
  43976a:	jbe    0x4397cd
  43976c:	ins    BYTE PTR es:[rdi],dx
  43976d:	jne    0x4397d4
  43976f:	pop    rdi
  439770:	jo     0x4397e6
  439772:	jb     0x439774
  439774:	je     0x4397e8
  439776:	(bad)  
  439777:	movsxd esp,DWORD PTR [rbp+0x5f]
  43977a:	je     0x4397e5
  43977c:	ins    DWORD PTR es:[rdi],dx
  43977d:	gs jae 0x4397f4
  439780:	(bad)  
  439781:	ins    DWORD PTR es:[rdi],dx
  439782:	jo     0x439784
  439784:	add    BYTE PTR [rax],al
  439786:	add    BYTE PTR [rax],al
  439788:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43978a:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43978e:	movsxd esp,DWORD PTR [rbp+0x20]
  439791:	jae    0x439807
  439793:	(bad)  
  439794:	je     0x4397fb
  439796:	and    BYTE PTR [rsi+0x61],dh
  439799:	jb     0x439804
  43979b:	(bad)  
  43979c:	(bad)  
  43979d:	ins    BYTE PTR es:[rdi],dx
  43979e:	and    BYTE PTR gs:[rip+0x73202c64],ah        # 0x7363c409
  4397a5:	imul   ebp,DWORD PTR [rcx+0x70],0x70
  4397a9:	imul   ebp,DWORD PTR [rsi+0x67],0x6d616e20
  4397b0:	and    BYTE PTR gs:[rbx+0x65],dh
  4397b4:	je     0x4397b6
  4397b6:	add    BYTE PTR [rax],al
  4397b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4397ba:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4397be:	movsxd esp,DWORD PTR [rbp+0x20]
  4397c1:	jae    0x439837
  4397c3:	(bad)  
  4397c4:	je     0x43982b
  4397c6:	and    BYTE PTR [rsi+0x61],dh
  4397c9:	jb     0x439834
  4397cb:	(bad)  
  4397cc:	(bad)  
  4397cd:	ins    BYTE PTR es:[rdi],dx
  4397ce:	and    BYTE PTR gs:[rip+0x73202c64],ah        # 0x7363c439
  4397d5:	imul   ebp,DWORD PTR [rcx+0x70],0x70
  4397d9:	imul   ebp,DWORD PTR [rsi+0x67],0x74656720
  4397e0:	je     0x439847
  4397e2:	jb     0x439804
  4397e4:	jae    0x43984b
  4397e6:	je     0x4397e8
	...
  439800:	jb     0x439867
  439802:	movsxd esp,DWORD PTR [ecx+0x63]
  439806:	push   0x67202a65
  43980b:	gs je  0x43986d
  43980e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439811:	je     0x439878
  439813:	js     0x439889
  439815:	pop    rdi
  439816:	jb     0x43987d
  439818:	movsxd esp,DWORD PTR [ecx+0x63]
  43981c:	push   0x72742865
  439821:	(bad)  
  439822:	movsxd esp,DWORD PTR [rbp+0x70]
  439825:	outs   dx,DWORD PTR ds:[rsi]
  439826:	imul   ebp,DWORD PTR [rsi+0x74],0x7469685f
  43982d:	pop    rdi
  43982e:	movsxd esi,DWORD PTR [rax+rdi*2+0x2a]
  439832:	sub    DWORD PTR [rax],eax
	...
  439840:	jbe    0x4398b1
  439842:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x6c6e776f
  43984a:	outs   dx,DWORD PTR ds:[rsi]
  43984b:	(bad)  
  43984c:	fs pop rdi
  43984e:	je     0x4398c2
  439850:	(bad)  
  439851:	movsxd esp,DWORD PTR [rbp+0x5f]
  439854:	jae    0x4398ca
  439856:	(bad)  
  439857:	je     0x4398be
  439859:	pop    rdi
  43985a:	jbe    0x4398bd
  43985c:	jb     0x4398c7
  43985e:	(bad)  
  43985f:	(bad)  
  439860:	ins    BYTE PTR es:[rdi],dx
  439861:	gs jae 0x43988c
  439864:	sub    DWORD PTR [rax],eax
	...
  43987e:	add    BYTE PTR [rax],al
  439880:	jbe    0x4398f1
  439882:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x6c6e776f
  43988a:	outs   dx,DWORD PTR ds:[rsi]
  43988b:	(bad)  
  43988c:	fs pop rdi
  43988e:	je     0x439902
  439890:	(bad)  
  439891:	movsxd esp,DWORD PTR [rbp+0x70]
  439894:	outs   dx,DWORD PTR ds:[rsi]
  439895:	imul   ebp,DWORD PTR [rsi+0x74],0x7428315f
  43989c:	jb     0x4398ff
  43989e:	movsxd esp,DWORD PTR [rbp+0x70]
  4398a1:	outs   dx,DWORD PTR ds:[rsi]
  4398a2:	imul   ebp,DWORD PTR [rsi+0x74],0x292a
	...
  4398bd:	add    BYTE PTR [rax],al
  4398bf:	add    BYTE PTR [rsi+0x6f],dh
  4398c2:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x656e6f6c
  4398ca:	pop    rdi
  4398cb:	data16 (bad) 
  4398cd:	jae    0x439943
  4398cf:	pop    rdi
  4398d0:	je     0x439944
  4398d2:	(bad)  
  4398d3:	movsxd esp,DWORD PTR [rbp+0x70]
  4398d6:	outs   dx,DWORD PTR ds:[rsi]
  4398d7:	imul   ebp,DWORD PTR [rsi+0x74],0x61727428
  4398de:	movsxd esp,DWORD PTR [rbp+0x70]
  4398e1:	outs   dx,DWORD PTR ds:[rsi]
  4398e2:	imul   ebp,DWORD PTR [rsi+0x74],0x63202c2a
  4398e9:	outs   dx,DWORD PTR ds:[rsi]
  4398ea:	outs   dx,BYTE PTR ds:[rsi]
  4398eb:	jae    0x439961
  4398ed:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4398f1:	movsxd esp,DWORD PTR [rbp+0x70]
  4398f4:	outs   dx,DWORD PTR ds:[rsi]
  4398f5:	imul   ebp,DWORD PTR [rsi+0x74],0x292a
  4398fc:	add    BYTE PTR [rax],al
  4398fe:	add    BYTE PTR [rax],al
  439900:	jne    0x439970
  439902:	jae    0x43996d
  439904:	outs   dx,BYTE PTR ds:[esi]
  439906:	gs and BYTE PTR fs:[rbx+0x68],ah
  43990b:	(bad)  
  43990c:	jb     0x439938
  43990e:	and    BYTE PTR [rcx+0x64],ah
  439911:	fs pop rdi
  439913:	je     0x439987
  439915:	(bad)  
  439916:	movsxd esp,DWORD PTR [rbp+0x66]
  439919:	jb     0x43997c
  43991b:	ins    DWORD PTR es:[rdi],dx
  43991c:	gs pop rdi
  43991e:	(bad)  
  43991f:	ins    BYTE PTR es:[rdi],dx
  439920:	outs   dx,DWORD PTR ds:[rsi]
  439921:	movsxd ebp,DWORD PTR [rbx+0x28]
  439924:	je     0x439998
  439926:	(bad)  
  439927:	movsxd esp,DWORD PTR [rbp+0x66]
  43992a:	jb     0x43998d
  43992c:	ins    DWORD PTR es:[rdi],dx
  43992d:	sub    ch,BYTE PTR gs:[rax+riz*1]
  439931:	je     0x4399a5
  439933:	(bad)  
  439934:	movsxd esp,DWORD PTR [rbp+0x70]
  439937:	outs   dx,DWORD PTR ds:[rsi]
  439938:	imul   ebp,DWORD PTR [rsi+0x74],0x69202c2a
  43993f:	outs   dx,BYTE PTR ds:[rsi]
  439940:	je     0x43996b
  439942:	add    BYTE PTR [rbp+riz*2+0x72],dh
  439946:	jb     0x4399b7
  439948:	jb     0x439984
  43994a:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  439951:	(bad)  
  439952:	je     0x4399c8
  439954:	imul   esp,DWORD PTR [rbx+0x0],0x72726574
  43995b:	outs   dx,DWORD PTR ds:[rsi]
  43995c:	jb     0x439998
  43995e:	gs ins DWORD PTR es:[rdi],dx
  439960:	jo     0x4399d6
  439962:	jns    0x439984
  439964:	gs js  0x4399d7
  439967:	jb     0x4399ce
  439969:	jae    0x4399de
  43996b:	imul   ebp,DWORD PTR [rdi+0x6e],0x72657400
  439972:	jb     0x4399e3
  439974:	jb     0x4399b0
  439976:	gs ins DWORD PTR es:[rdi],dx
  439978:	jo     0x4399ee
  43997a:	jns    0x43999c
  43997c:	jae    0x4399f2
  43997e:	(bad)  
  43997f:	movsxd ebp,DWORD PTR [rbx+0x0]
  439982:	je     0x4399e9
  439984:	jb     0x4399f8
  439986:	outs   dx,DWORD PTR ds:[rsi]
  439987:	jb     0x4399c3
  439989:	jae    0x4399ff
  43998b:	(bad)  
  43998c:	movsxd ebp,DWORD PTR [rbx+0x20]
  43998f:	outs   dx,DWORD PTR ds:[rsi]
  439990:	jbe    0x4399f7
  439992:	jb     0x4399fa
  439994:	ins    BYTE PTR es:[rdi],dx
  439995:	outs   dx,DWORD PTR ds:[rsi]
  439996:	ja     0x439998
  439998:	je     0x4399ff
  43999a:	jb     0x439a0e
  43999c:	outs   dx,DWORD PTR ds:[rsi]
  43999d:	jb     0x4399d9
  43999f:	jae    0x439a15
  4399a1:	(bad)  
  4399a2:	movsxd ebp,DWORD PTR [rbx+0x20]
  4399a5:	jne    0x439a15
  4399a7:	fs gs jb 0x439a11
  4399ab:	ins    BYTE PTR es:[rdi],dx
  4399ac:	outs   dx,DWORD PTR ds:[rsi]
  4399ad:	ja     0x4399af
  4399af:	je     0x439a16
  4399b1:	jb     0x439a25
  4399b3:	outs   dx,DWORD PTR ds:[rsi]
  4399b4:	jb     0x4399f0
  4399b6:	jne    0x439a26
  4399b8:	push   0x6c646e61
  4399bd:	gs and BYTE PTR fs:[rdi+0x70],ch
  4399c2:	movsxd ebp,DWORD PTR [rdi+0x64]
  4399c5:	add    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4399ca:	jb     0x439a3b
  4399cc:	jb     0x439a08
  4399ce:	jne    0x439a3e
  4399d0:	jb     0x439a37
  4399d2:	movsxd ebp,DWORD PTR [rdi+0x67]
  4399d5:	outs   dx,BYTE PTR ds:[rsi]
  4399d6:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  4399dd:	movsxd ebp,DWORD PTR [rdi+0x64]
  4399e0:	add    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4399e5:	jb     0x439a56
  4399e7:	jb     0x439a23
  4399e9:	imul   esi,DWORD PTR fs:[rsi+0x69],0x62206564
  4399f1:	jns    0x439a13
  4399f3:	jp     0x439a5a
  4399f5:	jb     0x439a66
	...
  4399ff:	add    BYTE PTR [rbx-0x67],al
  439a02:	rex.XB add BYTE PTR [r8],al
  439a05:	add    BYTE PTR [rax],al
  439a07:	add    BYTE PTR [rdi-0x67],dl
  439a0a:	rex.XB add BYTE PTR [r8],al
  439a0d:	add    BYTE PTR [rax],al
  439a0f:	add    BYTE PTR [rdi-0x67],ch
  439a12:	rex.XB add BYTE PTR [r8],al
  439a15:	add    BYTE PTR [rax],al
  439a17:	add    BYTE PTR [rdx+0x4399],al
  439a1d:	add    BYTE PTR [rax],al
  439a1f:	add    BYTE PTR [rax+0x4399],bl
  439a25:	add    BYTE PTR [rax],al
  439a27:	add    BYTE PTR [rdi+0x4399],ch
  439a2d:	add    BYTE PTR [rax],al
  439a2f:	add    bh,al
  439a31:	cdq    
  439a32:	rex.XB add BYTE PTR [r8],al
  439a35:	add    BYTE PTR [rax],al
  439a37:	add    dl,ah
  439a39:	cdq    
  439a3a:	rex.XB add BYTE PTR [r8],al
  439a3d:	add    BYTE PTR [rax],al
  439a3f:	add    BYTE PTR [rdi+0x64],ah
  439a42:	(bad)  
  439a43:	pop    rdi
  439a44:	(bad)  
  439a45:	outs   dx,BYTE PTR gs:[esi]
  439a48:	je     0x439aa9
  439a4a:	addr32 fs (bad) 
  439a4d:	pop    rdi
  439a4e:	je     0x439ac0
  439a50:	pop    rdi
  439a51:	push   0x5f706165
  439a56:	(bad)  
  439a57:	jne    0x439abf
  439a59:	data16 gs jb 0x439a5d
  439a5d:	addr32 fs (bad) 
  439a60:	pop    rdi
  439a61:	(bad)  
  439a62:	outs   dx,BYTE PTR gs:[esi]
  439a65:	je     0x439ac6
  439a67:	addr32 fs (bad) 
  439a6a:	pop    rdi
  439a6b:	push   0x75
  439a6d:	ins    DWORD PTR es:[rdi],dx
  439a6e:	jo     0x439acf
  439a70:	jo     0x439ad3
  439a72:	fs pop rdi
  439a74:	(bad)  
  439a75:	jne    0x439add
  439a77:	data16 gs jb 0x439a7b
  439a7b:	add    BYTE PTR [rax],al
  439a7d:	add    BYTE PTR [rax],al
  439a7f:	add    BYTE PTR [rdi+0x64],ah
  439a82:	(bad)  
  439a83:	pop    rdi
  439a84:	(bad)  
  439a85:	outs   dx,BYTE PTR gs:[esi]
  439a88:	je     0x439ae9
  439a8a:	addr32 fs (bad) 
  439a8d:	pop    rdi
  439a8e:	push   0x75
  439a90:	ins    DWORD PTR es:[rdi],dx
  439a91:	jo     0x439af2
  439a93:	jo     0x439af6
  439a95:	fs pop rdi
  439a97:	(bad)  
  439a98:	jne    0x439b00
  439a9a:	data16 gs jb 0x439afd
  439a9e:	outs   dx,BYTE PTR gs:[rsi]
  439aa0:	add    BYTE PTR fs:[rax],al
  439aa3:	add    BYTE PTR [rax],al
  439aa5:	add    BYTE PTR [rax],al
  439aa7:	add    BYTE PTR [rdi+0x64],ah
  439aaa:	(bad)  
  439aab:	pop    rdi
  439aac:	(bad)  
  439aad:	outs   dx,BYTE PTR gs:[esi]
  439ab0:	je     0x439b11
  439ab2:	addr32 fs (bad) 
  439ab5:	pop    rdi
  439ab6:	je     0x439b2a
  439ab8:	(bad)  
  439ab9:	ins    DWORD PTR es:[rdi],dx
  439aba:	jo     0x439b2b
  439abc:	ins    BYTE PTR es:[rdi],dx
  439abd:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  439ac4:	data16 gs jb 0x439ac8
  439ac8:	addr32 fs (bad) 
  439acb:	pop    rdi
  439acc:	(bad)  
  439acd:	outs   dx,BYTE PTR gs:[esi]
  439ad0:	je     0x439b31
  439ad2:	addr32 fs (bad) 
  439ad5:	pop    rdi
  439ad6:	je     0x439b4a
  439ad8:	(bad)  
  439ad9:	ins    DWORD PTR es:[rdi],dx
  439ada:	jo     0x439b4b
  439adc:	ins    BYTE PTR es:[rdi],dx
  439add:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  439ae4:	data16 gs jb 0x439b47
  439ae8:	outs   dx,BYTE PTR gs:[rsi]
  439aea:	add    BYTE PTR fs:[rax],al
  439aed:	add    BYTE PTR [rax],al
  439aef:	add    BYTE PTR [rdi+0x64],ah
  439af2:	(bad)  
  439af3:	pop    rdi
  439af4:	(bad)  
  439af5:	outs   dx,BYTE PTR gs:[esi]
  439af8:	je     0x439b59
  439afa:	addr32 fs (bad) 
  439afd:	pop    rdi
  439afe:	je     0x439b72
  439b00:	(bad)  
  439b01:	ins    DWORD PTR es:[rdi],dx
  439b02:	jo     0x439b73
  439b04:	ins    BYTE PTR es:[rdi],dx
  439b05:	imul   ebp,DWORD PTR [rsi+0x65],0x6675625f
  439b0c:	data16 gs jb 0x439b6f
  439b10:	gs jb  0x439b85
  439b13:	outs   dx,DWORD PTR ds:[rsi]
  439b14:	jb     0x439b16
  439b16:	addr32 fs (bad) 
  439b19:	pop    rdi
  439b1a:	(bad)  
  439b1b:	outs   dx,BYTE PTR gs:[esi]
  439b1e:	je     0x439b7f
  439b20:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439b23:	ins    BYTE PTR es:[rdi],dx
  439b24:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  439b29:	add    BYTE PTR [edi+0x64],ah
  439b2d:	(bad)  
  439b2e:	pop    rdi
  439b2f:	(bad)  
  439b30:	outs   dx,BYTE PTR gs:[esi]
  439b33:	je     0x439b94
  439b35:	addr32 fs (bad) 
  439b38:	pop    rdi
  439b39:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439b3c:	ins    BYTE PTR es:[rdi],dx
  439b3d:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x70]
  439b42:	je     0x439bb6
  439b44:	add    BYTE PTR [rdi+0x64],ah
  439b47:	(bad)  
  439b48:	pop    rdi
  439b49:	(bad)  
  439b4a:	outs   dx,BYTE PTR gs:[esi]
  439b4d:	je     0x439bae
  439b4f:	jae    0x439bc5
  439b51:	outs   dx,DWORD PTR ds:[rsi]
  439b52:	jo     0x439bb3
  439b54:	je     0x439bc8
  439b56:	(bad)  
  439b57:	movsxd ebp,DWORD PTR [rcx+0x6e]
  439b5a:	add    BYTE PTR [edi+0x64],ah
  439b5e:	(bad)  
  439b5f:	pop    rdi
  439b60:	(bad)  
  439b61:	outs   dx,BYTE PTR gs:[esi]
  439b64:	je     0x439bc5
  439b66:	data16 ins BYTE PTR es:[rdi],dx
  439b68:	jne    0x439bdd
  439b6a:	push   0x6172745f
  439b6f:	movsxd esp,DWORD PTR [rbp+0x5f]
  439b72:	(bad)  
  439b73:	jne    0x439bdb
  439b75:	data16 gs jb 0x439b79
  439b79:	add    BYTE PTR [rax],al
  439b7b:	add    BYTE PTR [rax],al
  439b7d:	add    BYTE PTR [rax],al
  439b7f:	add    BYTE PTR [rdi+0x64],ah
  439b82:	(bad)  
  439b83:	pop    rdi
  439b84:	(bad)  
  439b85:	outs   dx,BYTE PTR gs:[esi]
  439b88:	je     0x439be9
  439b8a:	(bad)  
  439b8b:	(bad)  
  439b8c:	outs   dx,DWORD PTR ds:[rsi]
  439b8d:	jne    0x439c03
  439b8f:	pop    rdi
  439b90:	je     0x439c01
  439b92:	pop    rdi
  439b93:	jb     0x439bfa
  439b95:	jno    0x439c0c
  439b97:	gs jae 0x439c0e
  439b9a:	pop    rdi
  439b9b:	(bad)  
  439b9c:	jne    0x439c04
  439b9e:	data16 gs jb 0x439c01
  439ba2:	jae    0x439c14
  439ba4:	(bad)  
  439ba5:	movsxd esp,DWORD PTR [rbp+0x0]
  439ba8:	addr32 fs (bad) 
  439bab:	pop    rdi
  439bac:	(bad)  
  439bad:	outs   dx,BYTE PTR gs:[esi]
  439bb0:	je     0x439c11
  439bb2:	je     0x439c26
  439bb4:	(bad)  
  439bb5:	movsxd esp,DWORD PTR [rbp+0x5f]
  439bb8:	(bad)  
  439bb9:	jne    0x439c21
  439bbb:	data16 gs jb 0x439c1e
  439bbf:	imul   esi,DWORD PTR [rbx+0x5f],0x6c6c7566
  439bc6:	add    BYTE PTR [rdi+0x64],ah
  439bc9:	(bad)  
  439bca:	pop    rdi
  439bcb:	(bad)  
  439bcc:	outs   dx,BYTE PTR gs:[esi]
  439bcf:	je     0x439c30
  439bd1:	jae    0x439c47
  439bd3:	outs   dx,DWORD PTR ds:[rsi]
  439bd4:	jo     0x439c46
  439bd6:	imul   ebp,DWORD PTR [rsi+0x67],0x6172745f
  439bdd:	movsxd esp,DWORD PTR [rbp+0x70]
  439be0:	outs   dx,DWORD PTR ds:[rsi]
  439be1:	imul   ebp,DWORD PTR [rsi+0x74],0x62646700
  439be8:	pop    rdi
  439be9:	(bad)  
  439bea:	outs   dx,BYTE PTR gs:[esi]
  439bed:	je     0x439c4e
  439bef:	gs js  0x439c62
  439bf2:	jb     0x439c53
  439bf4:	gs jbe 0x439c58
  439bf7:	ins    BYTE PTR es:[rdi],dx
  439bf8:	pop    rdi
  439bf9:	jb     0x439c60
  439bfb:	jae    0x439c72
  439bfd:	ins    BYTE PTR es:[rdi],dx
  439bfe:	je     0x439c00
  439c00:	addr32 fs (bad) 
  439c03:	pop    rdi
  439c04:	(bad)  
  439c05:	outs   dx,BYTE PTR gs:[esi]
  439c08:	je     0x439c69
  439c0a:	gs jb  0x439c7f
  439c0d:	outs   dx,DWORD PTR ds:[rsi]
  439c0e:	jb     0x439c6f
  439c10:	je     0x439c84
  439c12:	(bad)  
  439c13:	movsxd esp,DWORD PTR [rbp+0x70]
  439c16:	outs   dx,DWORD PTR ds:[rsi]
  439c17:	imul   ebp,DWORD PTR [rsi+0x74],0x62646700
  439c1e:	pop    rdi
  439c1f:	(bad)  
  439c20:	outs   dx,BYTE PTR gs:[esi]
  439c23:	je     0x439c84
  439c25:	je     0x439c99
  439c27:	(bad)  
  439c28:	movsxd esp,DWORD PTR [rbp+0x70]
  439c2b:	outs   dx,DWORD PTR ds:[rsi]
  439c2c:	imul   ebp,DWORD PTR [rsi+0x74],0x64670073
  439c33:	(bad)  
  439c34:	pop    rdi
  439c35:	(bad)  
  439c36:	outs   dx,BYTE PTR gs:[esi]
  439c39:	je     0x439c9a
  439c3b:	je     0x439caf
  439c3d:	(bad)  
  439c3e:	movsxd ebp,DWORD PTR [rcx+0x6e]
  439c41:	add    BYTE PTR [edi+0x64],ah
  439c45:	(bad)  
  439c46:	pop    rdi
  439c47:	(bad)  
  439c48:	outs   dx,BYTE PTR gs:[esi]
  439c4b:	je     0x439cac
  439c4d:	je     0x439cc1
  439c4f:	(bad)  
  439c50:	movsxd esp,DWORD PTR [rbp+0x5f]
  439c53:	(bad)  
  439c54:	jne    0x439cbc
  439c56:	data16 gs jb 0x439cb9
  439c5a:	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
  439c5e:	add    BYTE PTR [rax],al
  439c60:	addr32 fs (bad) 
  439c63:	pop    rdi
  439c64:	(bad)  
  439c65:	outs   dx,BYTE PTR gs:[esi]
  439c68:	je     0x439cc9
  439c6a:	je     0x439cde
  439c6c:	(bad)  
  439c6d:	movsxd esp,DWORD PTR [rbp+0x5f]
  439c70:	(bad)  
  439c71:	jne    0x439cd9
  439c73:	data16 gs jb 0x439cd6
  439c77:	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
  439c7b:	pop    rdi
  439c7c:	movsxd esi,DWORD PTR [rbp+0x72]
  439c7f:	jb     0x439c81
  439c81:	addr32 fs (bad) 
  439c84:	pop    rdi
  439c85:	(bad)  
  439c86:	outs   dx,BYTE PTR gs:[esi]
  439c89:	je     0x439cea
  439c8b:	je     0x439cff
  439c8d:	(bad)  
  439c8e:	movsxd esp,DWORD PTR [rbp+0x5f]
  439c91:	(bad)  
  439c92:	jne    0x439cfa
  439c94:	data16 gs jb 0x439cf7
  439c98:	ins    BYTE PTR es:[rdi],dx
  439c99:	outs   dx,DWORD PTR ds:[rsi]
  439c9a:	add    BYTE PTR [rdi+0x64],ah
  439c9d:	(bad)  
  439c9e:	pop    rdi
  439c9f:	(bad)  
  439ca0:	outs   dx,BYTE PTR gs:[esi]
  439ca3:	je     0x439d04
  439ca5:	je     0x439d19
  439ca7:	(bad)  
  439ca8:	movsxd esp,DWORD PTR [rbp+0x5f]
  439cab:	(bad)  
  439cac:	jne    0x439d14
  439cae:	data16 gs jb 0x439d11
  439cb2:	push   0x69
  439cb7:	add    BYTE PTR [rdi+0x64],ah
  439cba:	(bad)  
  439cbb:	pop    rdi
  439cbc:	(bad)  
  439cbd:	outs   dx,BYTE PTR gs:[esi]
  439cc0:	je     0x439d21
  439cc2:	je     0x439d36
  439cc4:	(bad)  
  439cc5:	movsxd esp,DWORD PTR [rbp+0x66]
  439cc8:	jb     0x439d2b
  439cca:	ins    DWORD PTR es:[rdi],dx
  439ccb:	gs pop rdi
  439ccd:	jb     0x439d34
  439ccf:	(bad)  
  439cd0:	fs pop rdi
  439cd2:	movsxd ebp,DWORD PTR [rdi+0x75]
  439cd5:	outs   dx,BYTE PTR ds:[rsi]
  439cd6:	je     0x439cd8
  439cd8:	addr32 fs (bad) 
  439cdb:	pop    rdi
  439cdc:	(bad)  
  439cdd:	outs   dx,BYTE PTR gs:[esi]
  439ce0:	je     0x439d41
  439ce2:	je     0x439d56
  439ce4:	(bad)  
  439ce5:	movsxd esp,DWORD PTR [rbp+0x66]
  439ce8:	jb     0x439d4b
  439cea:	ins    DWORD PTR es:[rdi],dx
  439ceb:	gs pop rdi
  439ced:	ja     0x439d61
  439cef:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6e756f63
  439cf7:	je     0x439cf9
  439cf9:	addr32 fs (bad) 
  439cfc:	pop    rdi
  439cfd:	(bad)  
  439cfe:	outs   dx,BYTE PTR gs:[esi]
  439d01:	je     0x439d62
  439d03:	je     0x439d77
  439d05:	(bad)  
  439d06:	movsxd esp,DWORD PTR [rbp+0x66]
  439d09:	jb     0x439d6c
  439d0b:	ins    DWORD PTR es:[rdi],dx
  439d0c:	gs jae 0x439d6e
  439d0f:	movsxd esi,DWORD PTR [rdx+0x65]
  439d12:	(bad)  
  439d13:	je     0x439d7a
  439d15:	add    BYTE PTR fs:[rax],al
  439d18:	addr32 fs (bad) 
  439d1b:	pop    rdi
  439d1c:	(bad)  
  439d1d:	outs   dx,BYTE PTR gs:[esi]
  439d20:	je     0x439d81
  439d22:	je     0x439d96
  439d24:	(bad)  
  439d25:	movsxd esp,DWORD PTR [rbp+0x5f]
  439d28:	jae    0x439d9e
  439d2a:	(bad)  
  439d2b:	je     0x439d92
  439d2d:	pop    rdi
  439d2e:	jbe    0x439d91
  439d30:	jb     0x439d9b
  439d32:	(bad)  
  439d33:	(bad)  
  439d34:	ins    BYTE PTR es:[rdi],dx
  439d35:	gs jae 0x439d38
  439d38:	addr32 fs (bad) 
  439d3b:	pop    rdi
  439d3c:	(bad)  
  439d3d:	outs   dx,BYTE PTR gs:[esi]
  439d40:	je     0x439da1
  439d42:	addr32 gs je 0x439da5
  439d46:	jb     0x439da9
  439d48:	ja     0x439da9
  439d4a:	jb     0x439db1
  439d4c:	addr32 pop rdi
  439d4e:	jo     0x439dc4
  439d50:	jb     0x439d52
  439d52:	add    BYTE PTR [rax],al
  439d54:	add    BYTE PTR [rax],al
  439d56:	add    BYTE PTR [rax],al
  439d58:	addr32 fs (bad) 
  439d5b:	pop    rdi
  439d5c:	(bad)  
  439d5d:	outs   dx,BYTE PTR gs:[esi]
  439d60:	je     0x439dc1
  439d62:	addr32 gs je 0x439dc5
  439d66:	je     0x439dda
  439d68:	(bad)  
  439d69:	movsxd esp,DWORD PTR [rbp+0x5f]
  439d6c:	jae    0x439de2
  439d6e:	(bad)  
  439d6f:	je     0x439dd6
  439d71:	pop    rdi
  439d72:	jbe    0x439dd5
  439d74:	jb     0x439ddf
  439d76:	(bad)  
  439d77:	(bad)  
  439d78:	ins    BYTE PTR es:[rdi],dx
  439d79:	gs pop rdi
  439d7b:	jbe    0x439dde
  439d7d:	ins    BYTE PTR es:[rdi],dx
  439d7e:	jne    0x439de5
  439d80:	pop    rdi
  439d81:	jo     0x439df7
  439d83:	jb     0x439d85
  439d85:	add    BYTE PTR [rax],al
  439d87:	add    BYTE PTR [rdi+0x64],ah
  439d8a:	(bad)  
  439d8b:	pop    rdi
  439d8c:	(bad)  
  439d8d:	outs   dx,BYTE PTR gs:[esi]
  439d90:	je     0x439df1
  439d92:	jae    0x439df9
  439d94:	je     0x439df5
  439d96:	je     0x439e0a
  439d98:	(bad)  
  439d99:	movsxd esp,DWORD PTR [rbp+0x5f]
  439d9c:	jae    0x439e12
  439d9e:	(bad)  
  439d9f:	je     0x439e06
  439da1:	pop    rdi
  439da2:	jbe    0x439e05
  439da4:	jb     0x439e0f
  439da6:	(bad)  
  439da7:	(bad)  
  439da8:	ins    BYTE PTR es:[rdi],dx
  439da9:	gs pop rdi
  439dab:	jbe    0x439e0e
  439dad:	ins    BYTE PTR es:[rdi],dx
  439dae:	jne    0x439e15
  439db0:	pop    rdi
  439db1:	jo     0x439e27
  439db3:	jb     0x439db5
  439db5:	addr32 fs (bad) 
  439db8:	pop    rdi
  439db9:	(bad)  
  439dba:	outs   dx,BYTE PTR gs:[esi]
  439dbd:	je     0x439e1e
  439dbf:	jne    0x439e34
  439dc1:	je     0x439e22
  439dc3:	ins    BYTE PTR es:[rdi],dx
  439dc4:	outs   dx,DWORD PTR ds:[rsi]
  439dc5:	(bad)  
  439dc6:	fs gs add BYTE PTR fs:[rdi+0x64],ah
  439dcc:	(bad)  
  439dcd:	pop    rdi
  439dce:	(bad)  
  439dcf:	outs   dx,BYTE PTR gs:[esi]
  439dd2:	je     0x439e33
  439dd4:	imul   esi,DWORD PTR [rax+0x61],0x6564745f
  439ddb:	jae    0x439e40
  439ddd:	pop    rdi
  439dde:	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x0
	...
  439dfe:	add    BYTE PTR [rax],al
  439e00:	rex (bad) 
  439e02:	rex.XB add BYTE PTR [r8],al
	...
  439e0d:	add    BYTE PTR [rax],al
  439e0f:	add    BYTE PTR [rbp-0x66],bl
  439e12:	rex.XB add BYTE PTR [r8],al
  439e15:	add    BYTE PTR [rax],al
  439e17:	add    BYTE PTR [rax],cl
  439e19:	add    BYTE PTR [rax],al
  439e1b:	add    BYTE PTR [rax],al
  439e1d:	add    BYTE PTR [rax],al
  439e1f:	add    BYTE PTR [rax+0x439a],al
  439e25:	add    BYTE PTR [rax],al
  439e27:	add    BYTE PTR [rax],dl
  439e29:	add    BYTE PTR [rax],al
  439e2b:	add    BYTE PTR [rax],al
  439e2d:	add    BYTE PTR [rax],al
  439e2f:	add    BYTE PTR [rax+0x439a],ch
  439e35:	add    BYTE PTR [rax],al
  439e37:	add    BYTE PTR [rax],bl
  439e39:	add    BYTE PTR [rax],al
  439e3b:	add    BYTE PTR [rax],al
  439e3d:	add    BYTE PTR [rax],al
  439e3f:	add    al,cl
  439e41:	(bad)  
  439e42:	rex.XB add BYTE PTR [r8],al
  439e45:	add    BYTE PTR [rax],al
  439e47:	add    BYTE PTR [rax],ah
  439e49:	add    BYTE PTR [rax],al
  439e4b:	add    BYTE PTR [rax],al
  439e4d:	add    BYTE PTR [rax],al
  439e4f:	add    al,dh
  439e51:	(bad)  
  439e52:	rex.XB add BYTE PTR [r8],al
  439e55:	add    BYTE PTR [rax],al
  439e57:	add    BYTE PTR [rax],ch
  439e59:	add    BYTE PTR [rax],al
  439e5b:	add    BYTE PTR [rax],al
  439e5d:	add    BYTE PTR [rax],al
  439e5f:	add    BYTE PTR [rsi],dl
  439e61:	fwait
  439e62:	rex.XB add BYTE PTR [r8],al
  439e65:	add    BYTE PTR [rax],al
  439e67:	add    BYTE PTR [rax],dh
  439e69:	add    BYTE PTR [rax],al
  439e6b:	add    BYTE PTR [rax],al
  439e6d:	add    BYTE PTR [rax],al
  439e6f:	add    BYTE PTR [rbx],ch
  439e71:	fwait
  439e72:	rex.XB add BYTE PTR [r8],al
  439e75:	add    BYTE PTR [rax],al
  439e77:	add    BYTE PTR [rax],bh
  439e79:	add    BYTE PTR [rax],al
  439e7b:	add    BYTE PTR [rax],al
  439e7d:	add    BYTE PTR [rax],al
  439e7f:	add    BYTE PTR [rbp-0x65],al
  439e82:	rex.XB add BYTE PTR [r8],al
  439e85:	add    BYTE PTR [rax],al
  439e87:	add    BYTE PTR [rax+0x0],al
  439e8a:	add    BYTE PTR [rax],al
  439e8c:	add    BYTE PTR [rax],al
  439e8e:	add    BYTE PTR [rax],al
  439e90:	pop    rsp
  439e91:	fwait
  439e92:	rex.XB add BYTE PTR [r8],al
  439e95:	add    BYTE PTR [rax],al
  439e97:	add    BYTE PTR [rax+0x0],cl
  439e9a:	add    BYTE PTR [rax],al
  439e9c:	add    BYTE PTR [rax],al
  439e9e:	add    BYTE PTR [rax],al
  439ea0:	sbb    BYTE PTR [rbx+0x43],0x0
  439ea7:	add    BYTE PTR [rax+0x0],dl
  439eaa:	add    BYTE PTR [rax],al
  439eac:	add    BYTE PTR [rax],al
  439eae:	add    BYTE PTR [rax],al
  439eb0:	test   al,0x9b
  439eb2:	rex.XB add BYTE PTR [r8],al
  439eb5:	add    BYTE PTR [rax],al
  439eb7:	add    BYTE PTR [rax+0x0],bl
  439eba:	add    BYTE PTR [rax],al
  439ebc:	add    BYTE PTR [rax],al
  439ebe:	add    BYTE PTR [rax],al
  439ec0:	(bad)  
  439ec1:	fwait
  439ec2:	rex.XB add BYTE PTR [r8],al
  439ec5:	add    BYTE PTR [rax],al
  439ec7:	add    BYTE PTR [rax+0x0],ah
  439eca:	add    BYTE PTR [rax],al
  439ecc:	add    BYTE PTR [rax],al
  439ece:	add    BYTE PTR [rax],al
  439ed0:	in     eax,0x9b
  439ed2:	rex.XB add BYTE PTR [r8],al
  439ed5:	add    BYTE PTR [rax],al
  439ed7:	add    BYTE PTR [rax+0x0],ch
  439eda:	add    BYTE PTR [rax],al
  439edc:	add    BYTE PTR [rax],al
  439ede:	add    BYTE PTR [rax],al
  439ee0:	add    BYTE PTR [rbx+rax*2+0x0],bl
  439ee7:	add    BYTE PTR [rax+0x0],dh
  439eea:	add    BYTE PTR [rax],al
  439eec:	add    BYTE PTR [rax],al
  439eee:	add    BYTE PTR [rax],al
  439ef0:	sbb    ebx,DWORD PTR [rbx+rax*2+0x0]
  439ef7:	add    BYTE PTR [rax+0x0],bh
  439efa:	add    BYTE PTR [rax],al
  439efc:	add    BYTE PTR [rax],al
  439efe:	add    BYTE PTR [rax],al
  439f00:	xor    DWORD PTR [rbx+rax*2+0x0],ebx
  439f07:	add    BYTE PTR [rax+0x0],al
  439f0d:	add    BYTE PTR [rax],al
  439f0f:	add    BYTE PTR [rbx-0x64],al
  439f12:	rex.XB add BYTE PTR [r8],al
  439f15:	add    BYTE PTR [rax],al
  439f17:	add    BYTE PTR [rax+0x0],cl
  439f1d:	add    BYTE PTR [rax],al
  439f1f:	add    BYTE PTR [rax-0x64],ah
  439f22:	rex.XB add BYTE PTR [r8],al
  439f25:	add    BYTE PTR [rax],al
  439f27:	add    BYTE PTR [rax+0x0],dl
  439f2d:	add    BYTE PTR [rax],al
  439f2f:	add    BYTE PTR [rcx+0x439c],al
  439f35:	add    BYTE PTR [rax],al
  439f37:	add    BYTE PTR [rax+0x0],bl
  439f3d:	add    BYTE PTR [rax],al
  439f3f:	add    BYTE PTR [rbx+0x439c],bl
  439f45:	add    BYTE PTR [rax],al
  439f47:	add    BYTE PTR [rax+0x0],ah
  439f4d:	add    BYTE PTR [rax],al
  439f4f:	add    BYTE PTR [rax+0x439c],bh
  439f55:	add    BYTE PTR [rax],al
  439f57:	add    BYTE PTR [rax+0x0],ch
  439f5d:	add    BYTE PTR [rax],al
  439f5f:	add    al,bl
  439f61:	pushf  
  439f62:	rex.XB add BYTE PTR [r8],al
  439f65:	add    BYTE PTR [rax],al
  439f67:	add    BYTE PTR [rax+0x0],dh
  439f6d:	add    BYTE PTR [rax],al
  439f6f:	add    cl,bh
  439f71:	pushf  
  439f72:	rex.XB add BYTE PTR [r8],al
  439f75:	add    BYTE PTR [rax],al
  439f77:	add    BYTE PTR [rax+0x0],bh
  439f7d:	add    BYTE PTR [rax],al
  439f7f:	add    BYTE PTR [rax],bl
  439f81:	popf   
  439f82:	rex.XB add BYTE PTR [r8],al
  439f85:	add    BYTE PTR [rax],al
  439f87:	add    al,al
  439f89:	add    BYTE PTR [rax],al
  439f8b:	add    BYTE PTR [rax],al
  439f8d:	add    BYTE PTR [rax],al
  439f8f:	add    BYTE PTR [rax],bh
  439f91:	popf   
  439f92:	rex.XB add BYTE PTR [r8],al
  439f95:	add    BYTE PTR [rax],al
  439f97:	add    al,cl
  439f99:	add    BYTE PTR [rax],al
  439f9b:	add    BYTE PTR [rax],al
  439f9d:	add    BYTE PTR [rax],al
  439f9f:	add    BYTE PTR [rax-0x63],bl
  439fa2:	rex.XB add BYTE PTR [r8],al
  439fa5:	add    BYTE PTR [rax],al
  439fa7:	add    al,dl
  439fa9:	add    BYTE PTR [rax],al
  439fab:	add    BYTE PTR [rax],al
  439fad:	add    BYTE PTR [rax],al
  439faf:	add    BYTE PTR [rax+0x439d],cl
  439fb5:	add    BYTE PTR [rax],al
  439fb7:	add    al,bl
  439fb9:	add    BYTE PTR [rax],al
  439fbb:	add    BYTE PTR [rax],al
  439fbd:	add    BYTE PTR [rax],al
  439fbf:	add    BYTE PTR [rbp+0x439d],dh
  439fc5:	add    BYTE PTR [rax],al
  439fc7:	add    al,ah
  439fc9:	add    BYTE PTR [rax],al
  439fcb:	add    BYTE PTR [rax],al
  439fcd:	add    BYTE PTR [rax],al
  439fcf:	add    dl,cl
  439fd1:	popf   
  439fd2:	rex.XB add BYTE PTR [r8],al
  439fd5:	add    BYTE PTR [rax],al
  439fd7:	add    al,ch
	...
  439ffd:	add    BYTE PTR [rax],al
  439fff:	add    al,al
  43a001:	add    eax,0x564fffe
  43a006:	(bad)  
  43a007:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a00b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a00f:	call   rax
  43a011:	add    eax,0x5c0fffe
  43a016:	(bad)  
  43a017:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a01b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a01f:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a023:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a027:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a02b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a02f:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a033:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a037:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a03b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a03f:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a043:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a047:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a04b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a04f:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a053:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a057:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a05b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a05f:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a063:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a067:	jmp    QWORD PTR [rax+0x5]
  43a06a:	(bad)  
  43a06b:	jmp    QWORD PTR [rbp+rax*1-0x2]
  43a06f:	jmp    QWORD PTR [rax+0x5]
  43a072:	(bad)  
  43a073:	call   FWORD PTR [rsi+rax*1]
  43a076:	(bad)  
  43a077:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a07b:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a07f:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a083:	push   rcx
  43a085:	add    eax,0x5ccfffe
  43a08a:	(bad)  
  43a08b:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a08f:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a093:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a097:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a09b:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a09f:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0a3:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0a7:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0ab:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0af:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0b3:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0b7:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0bb:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0bf:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0c3:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0c7:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0cb:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0cf:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0d3:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0d7:	dec    DWORD PTR [rsi+rax*1-0x2]
  43a0db:	jmp    FWORD PTR [rsi+0x4cfffe05]
  43a0e1:	(bad)  
  43a0e2:	(bad)  
  43a0e3:	jmp    FWORD PTR [rbp+rax*1-0x2]
  43a0e7:	inc    DWORD PTR [rax]
	...
  43a0fd:	add    BYTE PTR [rax],al
  43a0ff:	add    BYTE PTR [rsi+0x61],dh
  43a102:	jae    0x43a174
  43a104:	jb     0x43a16f
  43a106:	outs   dx,BYTE PTR ds:[rsi]
  43a107:	je     0x43a16f
  43a109:	and    BYTE PTR [rbx+0x61],ah
  43a10c:	ins    BYTE PTR es:[rdi],dx
  43a10d:	ins    BYTE PTR es:[rdi],dx
  43a10e:	and    BYTE PTR [rsi+0x61],ah
  43a111:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2f2e2e00
  43a119:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43a11c:	ins    DWORD PTR es:[rdi],dx
  43a11d:	outs   dx,DWORD PTR ds:[rsi]
  43a11e:	outs   dx,BYTE PTR ds:[rsi]
  43a11f:	(bad)  
  43a120:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43a123:	ins    DWORD PTR es:[rdi],dx
  43a124:	outs   dx,DWORD PTR ds:[rsi]
  43a125:	outs   dx,BYTE PTR ds:[rsi]
  43a126:	sub    eax,0x6c697475
  43a12b:	jae    0x43a15b
  43a12d:	movsxd eax,DWORD PTR [rax]
  43a12f:	and    eax,0x41203a73
  43a134:	jae    0x43a1a9
  43a136:	gs jb  0x43a1ad
  43a139:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43a140:	(bad)  
  43a141:	and    BYTE PTR [rsi+0x61],ah
  43a144:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6572002e
  43a14c:	je     0x43a16e
  43a14e:	cmp    al,0x20
  43a150:	jae    0x43a1bb
  43a152:	jp     0x43a1b9
	...
  43a160:	imul   ebp,DWORD PTR [rsi+0x74],0x6e737820
  43a167:	jo     0x43a1db
  43a169:	imul   ebp,DWORD PTR [rsi+0x74],0x68632866
  43a170:	(bad)  
  43a171:	jb     0x43a19d
  43a173:	sub    al,0x20
  43a175:	jae    0x43a1e0
  43a177:	jp     0x43a1de
  43a179:	pop    rdi
  43a17a:	je     0x43a1a8
  43a17c:	and    BYTE PTR [rbx+0x6f],ah
  43a17f:	outs   dx,BYTE PTR ds:[rsi]
  43a180:	jae    0x43a1f6
  43a182:	and    BYTE PTR [rbx+0x68],ah
  43a185:	(bad)  
  43a186:	jb     0x43a1b2
  43a188:	sub    al,0x20
  43a18a:	cs cs sub DWORD PTR cs:[rax],eax
	...
  43a19f:	add    BYTE PTR [rip+0x75250064],ah        # 0x7568a209
  43a1a5:	add    BYTE PTR [rip+0x6f250078],ah        # 0x6f68a223
  43a1ab:	add    BYTE PTR [rip+0x2500646c],ah        # 0x2544061d
  43a1b1:	ins    BYTE PTR es:[rdi],dx
  43a1b2:	jne    0x43a1b4
  43a1b4:	and    eax,0x2500786c
  43a1b9:	ins    BYTE PTR es:[rdi],dx
  43a1ba:	outs   dx,DWORD PTR ds:[rsi]
  43a1bb:	add    BYTE PTR [rip+0x646c6c],ah        # 0xa80e2d
  43a1c1:	and    eax,0x756c6c
  43a1c6:	and    eax,0x786c6c
  43a1cb:	and    eax,0x6f6c6c
  43a1d0:	jo     0x43a1e2
  43a1d2:	(bad)  
  43a1d3:	jmp    QWORD PTR [rbx-0x5c0001f0]
  43a1d9:	adc    dh,bh
  43a1db:	jmp    QWORD PTR [rbx-0x5c0001f0]
  43a1e1:	adc    dh,bh
  43a1e3:	jmp    QWORD PTR [rbx-0x5c0001f0]
  43a1e9:	adc    dh,bh
  43a1eb:	jmp    QWORD PTR [rbx+0x50fffe10]
  43a1f1:	adc    dh,bh
  43a1f3:	jmp    QWORD PTR [rbx-0x5c0001f0]
  43a1f9:	adc    dh,bh
  43a1fb:	jmp    QWORD PTR [rax]
  43a1fd:	adc    dh,bh
  43a1ff:	jmp    QWORD PTR [rbx-0x5c0001f0]
  43a205:	adc    dh,bh
  43a207:	jmp    QWORD PTR [rbx-0x1f0001f0]
  43a20d:	paddd  mm7,mm7
  43a210:	movabs ds:0xa3fffe0fb1fffe10,eax
  43a219:	adc    dh,bh
  43a21b:	jmp    QWORD PTR [rbx+0x10fffe10]
  43a221:	paddd  mm7,mm7
  43a224:	mov    cl,0x10
  43a226:	(bad)  
  43a227:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a22b:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a22f:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a233:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a237:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a23b:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a23f:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a243:	(bad)  
  43a244:	fcom   QWORD PTR [rax]
  43a246:	(bad)  
  43a247:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a24b:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a24f:	jmp    FWORD PTR [rcx+rdx*1]
  43a252:	(bad)  
  43a253:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a257:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a25b:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a25f:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a263:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a267:	call   QWORD PTR [rcx+0x11]
  43a26a:	(bad)  
  43a26b:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a26f:	dec    DWORD PTR [rax+rdx*1-0x2]
  43a273:	dec    DWORD PTR [rax+rdx*1+0xfffe]
  43a27a:	add    BYTE PTR [rax],al
  43a27c:	add    BYTE PTR [rax],al
  43a27e:	add    BYTE PTR [rax],al
  43a280:	push   rbp
  43a281:	outs   dx,BYTE PTR ds:[rsi]
  43a282:	jb     0x43a2e9
  43a284:	movsxd ebp,DWORD PTR [rdi+0x67]
  43a287:	outs   dx,BYTE PTR ds:[rsi]
  43a288:	imul   edi,DWORD PTR [rdx+0x65],0x73652064
  43a28f:	movsxd esp,DWORD PTR [rcx+0x70]
  43a292:	and    BYTE PTR gs:[rbx+0x68],ah
  43a296:	(bad)  
  43a297:	jb     0x43a2fa
  43a299:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  43a29d:	and    BYTE PTR [rbp+riz*1+0x63],bl
  43a2a1:	and    BYTE PTR [rcx+0x6e],ch
  43a2a4:	and    BYTE PTR [rsi+0x6f],ah
  43a2a7:	jb     0x43a316
  43a2a9:	(bad)  
  43a2aa:	je     0x43a2cc
  43a2ac:	jae    0x43a322
  43a2ae:	jb     0x43a319
  43a2b0:	outs   dx,BYTE PTR ds:[rsi]
  43a2b1:	add    BYTE PTR cs:[eax],dh
  43a2b5:	sub    eax,0x23202b
  43a2ba:	xor    BYTE PTR [rcx],dh
  43a2bc:	xor    dh,BYTE PTR [rbx]
  43a2be:	xor    al,0x35
  43a2c0:	ss (bad) 
  43a2c2:	cmp    BYTE PTR [rcx],bh
  43a2c4:	add    BYTE PTR [rax],al
  43a2c6:	add    BYTE PTR [rax],al
  43a2c8:	(bad)  
  43a2c9:	sub    ah,BYTE PTR [rdi]
  43a2cb:	and    BYTE PTR [rsi+0x6f],ch
  43a2ce:	je     0x43a2f0
  43a2d0:	jae    0x43a347
  43a2d2:	jo     0x43a344
  43a2d4:	outs   dx,DWORD PTR ds:[rsi]
  43a2d5:	jb     0x43a34b
  43a2d7:	gs and BYTE PTR fs:[rsi+0x6f],ah
  43a2dc:	jb     0x43a2fe
  43a2de:	jo     0x43a352
  43a2e0:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  43a2e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x20726f20
  43a2eb:	ja     0x43a356
  43a2ed:	fs je  0x43a358
  43a2f0:	and    BYTE PTR [rcx+0x6e],ch
  43a2f3:	and    BYTE PTR [rax+0x72],dh
  43a2f6:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  43a2fd:	add    BYTE PTR [rax],al
  43a2ff:	add    BYTE PTR [rsi+0x6f],al
  43a302:	jb     0x43a371
  43a304:	(bad)  
  43a305:	je     0x43a327
  43a307:	jae    0x43a379
  43a309:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a30d:	imul   esp,DWORD PTR [rbp+0x72],0x276e6020
  43a314:	and    BYTE PTR [rsi+0x6f],ch
  43a317:	je     0x43a339
  43a319:	jae    0x43a390
  43a31b:	jo     0x43a38d
  43a31d:	outs   dx,DWORD PTR ds:[rsi]
  43a31e:	jb     0x43a394
  43a320:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43a325:	and    BYTE PTR [rax+0x72],dh
  43a328:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  43a32f:	add    BYTE PTR [rcx+0x6e],cl
  43a332:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43a335:	jo     0x43a3a3
  43a337:	gs je  0x43a39f
  43a33a:	and    BYTE PTR [rsi+0x6f],ah
  43a33d:	jb     0x43a3ac
  43a33f:	(bad)  
  43a340:	je     0x43a362
  43a342:	jae    0x43a3b4
  43a344:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a348:	imul   esp,DWORD PTR [rbp+0x72],0x20746120
  43a34f:	outs   dx,BYTE PTR gs:[rsi]
  43a351:	and    BYTE PTR fs:[rdi+0x66],ch
  43a355:	and    BYTE PTR [rsi+0x6f],ah
  43a358:	jb     0x43a3c7
  43a35a:	(bad)  
  43a35b:	je     0x43a37d
  43a35d:	jae    0x43a3d3
  43a35f:	jb     0x43a3ca
  43a361:	outs   dx,BYTE PTR ds:[rsi]
  43a362:	add    BYTE PTR [eax],al
  43a365:	add    BYTE PTR [rax],al
  43a367:	add    BYTE PTR [rbp+0x6e],dl
  43a36a:	jb     0x43a3d1
  43a36c:	movsxd ebp,DWORD PTR [rdi+0x67]
  43a36f:	outs   dx,BYTE PTR ds:[rsi]
  43a370:	imul   edi,DWORD PTR [rdx+0x65],0x6f662064
  43a377:	jb     0x43a3e6
  43a379:	(bad)  
  43a37a:	je     0x43a39c
  43a37c:	jae    0x43a3ee
  43a37e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a382:	imul   esp,DWORD PTR [rbp+0x72],0x63252720
  43a389:	(bad)  
  43a38a:	and    BYTE PTR [rcx+0x6e],ch
  43a38d:	and    BYTE PTR [rax+0x72],dh
  43a390:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  43a397:	add    BYTE PTR [rcx+0x6e],cl
  43a39a:	(bad)  
  43a39b:	jo     0x43a40d
  43a39d:	jb     0x43a40e
  43a39f:	jo     0x43a413
  43a3a1:	imul   esp,DWORD PTR [rcx+0x74],0x6f6d2065
  43a3a8:	imul   esp,DWORD PTR fs:[rsi+0x69],0x20737265
  43a3b0:	je     0x43a421
  43a3b2:	and    BYTE PTR [rsi+0x6f],ah
  43a3b5:	jb     0x43a424
  43a3b7:	(bad)  
  43a3b8:	je     0x43a3da
  43a3ba:	jae    0x43a42c
  43a3bc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a3c0:	imul   esp,DWORD PTR [rbp+0x72],0x63252720
  43a3c7:	(bad)  
  43a3c8:	and    BYTE PTR [rcx+0x6e],ch
  43a3cb:	and    BYTE PTR [rax+0x72],dh
  43a3ce:	imul   ebp,DWORD PTR [rsi+0x74],0x7c000066
  43a3d5:	adc    bh,dh
  43a3d7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a3de:	(bad)  
  43a3df:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a3e6:	(bad)  
  43a3e7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a3ee:	(bad)  
  43a3ef:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a3f6:	(bad)  
  43a3f7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a3fe:	(bad)  
  43a3ff:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a406:	(bad)  
  43a407:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a40e:	(bad)  
  43a40f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a416:	(bad)  
  43a417:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a41e:	(bad)  
  43a41f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a426:	(bad)  
  43a427:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a42e:	(bad)  
  43a42f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a436:	(bad)  
  43a437:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a43e:	(bad)  
  43a43f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a446:	(bad)  
  43a447:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a44e:	(bad)  
  43a44f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a456:	(bad)  
  43a457:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a45e:	(bad)  
  43a45f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a466:	(bad)  
  43a467:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a46e:	(bad)  
  43a46f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a476:	(bad)  
  43a477:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a47e:	(bad)  
  43a47f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a486:	(bad)  
  43a487:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a48e:	(bad)  
  43a48f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a496:	(bad)  
  43a497:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a49e:	(bad)  
  43a49f:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4a6:	(bad)  
  43a4a7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4ae:	(bad)  
  43a4af:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4b6:	(bad)  
  43a4b7:	dec    DWORD PTR [rdx+rdx*1+0x126cfffe]
  43a4be:	(bad)  
  43a4bf:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4c6:	(bad)  
  43a4c7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4ce:	(bad)  
  43a4cf:	call   FWORD PTR [rdx+rdx*1-0x2]
  43a4d3:	dec    DWORD PTR [rdx+rdx*1-0x2]
  43a4d7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4de:	(bad)  
  43a4df:	dec    DWORD PTR [rdx+rdx*1+0x123cfffe]
  43a4e6:	(bad)  
  43a4e7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4ee:	(bad)  
  43a4ef:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4f6:	(bad)  
  43a4f7:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a4fe:	(bad)  
  43a4ff:	dec    DWORD PTR [rdx+rdx*1+0x122cfffe]
  43a506:	(bad)  
  43a507:	dec    DWORD PTR [rdx+rdx*1+0x128cfffe]
  43a50e:	(bad)  
  43a50f:	dec    DWORD PTR [rdx+rdx*1+0x121cfffe]
  43a516:	(bad)  
  43a517:	dec    DWORD PTR [rdx+rdx*1+0x120cfffe]
  43a51e:	(bad)  
  43a51f:	dec    DWORD PTR [rdx+rdx*1+0x11fcfffe]
  43a526:	(bad)  
  43a527:	dec    DWORD PTR [rax]
  43a529:	adc    bh,dh
  43a52b:	(bad)  
  43a52c:	jge    0x43a543
  43a52e:	(bad)  
  43a52f:	(bad)  
  43a530:	jge    0x43a547
  43a532:	(bad)  
  43a533:	(bad)  
  43a534:	jge    0x43a54b
  43a536:	(bad)  
  43a537:	(bad)  
  43a538:	jge    0x43a54f
  43a53a:	(bad)  
  43a53b:	(bad)  
  43a53c:	jge    0x43a553
  43a53e:	(bad)  
  43a53f:	(bad)  
  43a540:	jge    0x43a557
  43a542:	(bad)  
  43a543:	(bad)  
  43a544:	jge    0x43a55b
  43a546:	(bad)  
  43a547:	(bad)  
  43a548:	jge    0x43a55f
  43a54a:	(bad)  
  43a54b:	(bad)  
  43a54c:	jge    0x43a563
  43a54e:	(bad)  
  43a54f:	(bad)  
  43a550:	jge    0x43a567
  43a552:	(bad)  
  43a553:	(bad)  
  43a554:	jge    0x43a56b
  43a556:	(bad)  
  43a557:	(bad)  
  43a558:	jge    0x43a56f
  43a55a:	(bad)  
  43a55b:	(bad)  
  43a55c:	jge    0x43a573
  43a55e:	(bad)  
  43a55f:	(bad)  
  43a560:	jge    0x43a577
  43a562:	(bad)  
  43a563:	(bad)  
  43a564:	jge    0x43a57b
  43a566:	(bad)  
  43a567:	(bad)  
  43a568:	jge    0x43a57f
  43a56a:	(bad)  
  43a56b:	(bad)  
  43a56c:	jge    0x43a583
  43a56e:	(bad)  
  43a56f:	(bad)  
  43a570:	jge    0x43a587
  43a572:	(bad)  
  43a573:	(bad)  
  43a574:	jge    0x43a58b
  43a576:	(bad)  
  43a577:	(bad)  
  43a578:	jge    0x43a58f
  43a57a:	(bad)  
  43a57b:	(bad)  
  43a57c:	jge    0x43a593
  43a57e:	(bad)  
  43a57f:	(bad)  
  43a580:	jge    0x43a597
  43a582:	(bad)  
  43a583:	(bad)  
  43a584:	jge    0x43a59b
  43a586:	(bad)  
  43a587:	(bad)  
  43a588:	jge    0x43a59f
  43a58a:	(bad)  
  43a58b:	(bad)  
  43a58c:	jge    0x43a5a3
  43a58e:	(bad)  
  43a58f:	(bad)  
  43a590:	jge    0x43a5a7
  43a592:	(bad)  
  43a593:	(bad)  
  43a594:	jge    0x43a5ab
  43a596:	(bad)  
  43a597:	(bad)  
  43a598:	jge    0x43a5af
  43a59a:	(bad)  
  43a59b:	(bad)  
  43a59c:	jge    0x43a5b3
  43a59e:	(bad)  
  43a59f:	(bad)  
  43a5a0:	jge    0x43a5b7
  43a5a2:	(bad)  
  43a5a3:	(bad)  
  43a5a4:	jge    0x43a5bb
  43a5a6:	(bad)  
  43a5a7:	(bad)  
  43a5a8:	jge    0x43a5bf
  43a5aa:	(bad)  
  43a5ab:	(bad)  
  43a5ac:	jge    0x43a5c3
  43a5ae:	(bad)  
  43a5af:	(bad)  
  43a5b0:	jge    0x43a5c7
  43a5b2:	(bad)  
  43a5b3:	(bad)  
  43a5b4:	jge    0x43a5cb
  43a5b6:	(bad)  
  43a5b7:	(bad)  
  43a5b8:	jge    0x43a5cf
  43a5ba:	(bad)  
  43a5bb:	(bad)  
  43a5bc:	jge    0x43a5d3
  43a5be:	(bad)  
  43a5bf:	(bad)  
  43a5c0:	jge    0x43a5d7
  43a5c2:	(bad)  
  43a5c3:	(bad)  
  43a5c4:	jge    0x43a5db
  43a5c6:	(bad)  
  43a5c7:	(bad)  
  43a5c8:	jge    0x43a5df
  43a5ca:	(bad)  
  43a5cb:	(bad)  
  43a5cc:	jge    0x43a5e3
  43a5ce:	(bad)  
  43a5cf:	jmp    QWORD PTR [rdi+0x14]
  43a5d2:	(bad)  
  43a5d3:	(bad)  
  43a5d4:	jge    0x43a5eb
  43a5d6:	(bad)  
  43a5d7:	(bad)  
  43a5d8:	jge    0x43a5ef
  43a5da:	(bad)  
  43a5db:	(bad)  
  43a5dc:	jge    0x43a5f3
  43a5de:	(bad)  
  43a5df:	(bad)  
  43a5e0:	jge    0x43a5f7
  43a5e2:	(bad)  
  43a5e3:	(bad)  
  43a5e4:	jge    0x43a5fb
  43a5e6:	(bad)  
  43a5e7:	(bad)  
  43a5e8:	jge    0x43a5ff
  43a5ea:	(bad)  
  43a5eb:	(bad)  
  43a5ec:	jge    0x43a603
  43a5ee:	(bad)  
  43a5ef:	(bad)  
  43a5f0:	jge    0x43a607
  43a5f2:	(bad)  
  43a5f3:	(bad)  
  43a5f4:	jge    0x43a60b
  43a5f6:	(bad)  
  43a5f7:	(bad)  
  43a5f8:	jge    0x43a60f
  43a5fa:	(bad)  
  43a5fb:	(bad)  
  43a5fc:	jge    0x43a613
  43a5fe:	(bad)  
  43a5ff:	(bad)  
  43a600:	jge    0x43a617
  43a602:	(bad)  
  43a603:	(bad)  
  43a604:	jge    0x43a61b
  43a606:	(bad)  
  43a607:	(bad)  
  43a608:	jge    0x43a61f
  43a60a:	(bad)  
  43a60b:	(bad)  
  43a60c:	jge    0x43a623
  43a60e:	(bad)  
  43a60f:	(bad)  
  43a610:	jge    0x43a627
  43a612:	(bad)  
  43a613:	(bad)  
  43a614:	jge    0x43a62b
  43a616:	(bad)  
  43a617:	(bad)  
  43a618:	jge    0x43a62f
  43a61a:	(bad)  
  43a61b:	(bad)  
  43a61c:	jge    0x43a633
  43a61e:	(bad)  
  43a61f:	(bad)  
  43a620:	jge    0x43a637
  43a622:	(bad)  
  43a623:	(bad)  
  43a624:	jge    0x43a63b
  43a626:	(bad)  
  43a627:	(bad)  
  43a628:	jge    0x43a63f
  43a62a:	(bad)  
  43a62b:	(bad)  
  43a62c:	jge    0x43a643
  43a62e:	(bad)  
  43a62f:	(bad)  
  43a630:	jge    0x43a647
  43a632:	(bad)  
  43a633:	(bad)  
  43a634:	jge    0x43a64b
  43a636:	(bad)  
  43a637:	(bad)  
  43a638:	jge    0x43a64f
  43a63a:	(bad)  
  43a63b:	(bad)  
  43a63c:	call   0x7e43a454
  43a641:	adc    eax,0x13e8fffe
  43a646:	(bad)  
  43a647:	(bad)  
  43a648:	jge    0x43a65f
  43a64a:	(bad)  
  43a64b:	(bad)  
  43a64c:	jge    0x43a663
  43a64e:	(bad)  
  43a64f:	(bad)  
  43a650:	jge    0x43a667
  43a652:	(bad)  
  43a653:	(bad)  
  43a654:	jge    0x43a66b
  43a656:	(bad)  
  43a657:	(bad)  
  43a658:	jge    0x43a66f
  43a65a:	(bad)  
  43a65b:	(bad)  
  43a65c:	jge    0x43a673
  43a65e:	(bad)  
  43a65f:	(bad)  
  43a660:	jge    0x43a677
  43a662:	(bad)  
  43a663:	(bad)  
  43a664:	jge    0x43a67b
  43a666:	(bad)  
  43a667:	(bad)  
  43a668:	jge    0x43a67f
  43a66a:	(bad)  
  43a66b:	(bad)  
  43a66c:	jge    0x43a683
  43a66e:	(bad)  
  43a66f:	(bad)  
  43a670:	jge    0x43a687
  43a672:	(bad)  
  43a673:	(bad)  
  43a674:	jge    0x43a68b
  43a676:	(bad)  
  43a677:	(bad)  
  43a678:	jge    0x43a68f
  43a67a:	(bad)  
  43a67b:	(bad)  
  43a67c:	jge    0x43a693
  43a67e:	(bad)  
  43a67f:	(bad)  
  43a680:	jge    0x43a697
  43a682:	(bad)  
  43a683:	(bad)  
  43a684:	jge    0x43a69b
  43a686:	(bad)  
  43a687:	jmp    QWORD PTR [rsi+0x7dfffe13]
  43a68d:	adc    eax,0x157dfffe
  43a692:	(bad)  
  43a693:	(bad)  
  43a694:	jge    0x43a6ab
  43a696:	(bad)  
  43a697:	(bad)  
  43a698:	jge    0x43a6af
  43a69a:	(bad)  
  43a69b:	(bad)  
  43a69c:	jge    0x43a6b3
  43a69e:	(bad)  
  43a69f:	(bad)  
  43a6a0:	jge    0x43a6b7
  43a6a2:	(bad)  
  43a6a3:	(bad)  
  43a6a4:	jge    0x43a6bb
  43a6a6:	(bad)  
  43a6a7:	(bad)  
  43a6a8:	jge    0x43a6bf
  43a6aa:	(bad)  
  43a6ab:	(bad)  
  43a6ac:	jge    0x43a6c3
  43a6ae:	(bad)  
  43a6af:	(bad)  
  43a6b0:	jge    0x43a6c7
  43a6b2:	(bad)  
  43a6b3:	(bad)  
  43a6b4:	cmp    eax,0x76fffe15
  43a6b9:	adc    eax,0x13e8fffe
  43a6be:	(bad)  
  43a6bf:	(bad)  
  43a6c0:	call   0xffffffffe943a4d8
  43a6c5:	adc    edi,esi
  43a6c7:	(bad)  
  43a6c8:	jge    0x43a6df
  43a6ca:	(bad)  
  43a6cb:	push   QWORD PTR [rsi+0x15]
  43a6ce:	(bad)  
  43a6cf:	(bad)  
  43a6d0:	jge    0x43a6e7
  43a6d2:	(bad)  
  43a6d3:	(bad)  
  43a6d4:	jge    0x43a6eb
  43a6d6:	(bad)  
  43a6d7:	(bad)  
  43a6d8:	jge    0x43a6ef
  43a6da:	(bad)  
  43a6db:	(bad)  
  43a6dc:	jge    0x43a6f3
  43a6de:	(bad)  
  43a6df:	push   QWORD PTR [rcx]
  43a6e1:	adc    eax,0x13a6fffe
  43a6e6:	(bad)  
  43a6e7:	jmp    QWORD PTR [rbx+0x7dfffe14]
  43a6ed:	adc    eax,0x157dfffe
  43a6f2:	(bad)  
  43a6f3:	push   QWORD PTR [rbx+0x14]
  43a6f6:	(bad)  
  43a6f7:	(bad)  
  43a6f8:	jge    0x43a70f
  43a6fa:	(bad)  
  43a6fb:	jmp    FWORD PTR [rax+0x7dfffe13]
  43a701:	adc    eax,0x157dfffe
  43a706:	(bad)  
  43a707:	jmp    QWORD PTR [rsi+0xfffe13]
	...
  43a73d:	add    BYTE PTR [rax],al
  43a73f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163e1b8
  43a745:	jae    0x43a7ba
  43a747:	gs jb  0x43a7be
  43a74a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43a751:	(bad)  
  43a752:	and    BYTE PTR [rsi+0x61],ah
  43a755:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  43a75d:	(bad)  
  43a75e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43a761:	ins    DWORD PTR es:[rdi],dx
  43a762:	outs   dx,DWORD PTR ds:[rsi]
  43a763:	outs   dx,BYTE PTR ds:[rsi]
  43a764:	(bad)  
  43a765:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7574
  43a76c:	data16 movsxd ax,DWORD PTR cs:[rax]
  43a771:	jno    0x43a7e8
  43a773:	imul   esp,DWORD PTR [rbx+0x6b],0x7375705f
  43a77a:	push   0x3a732500
  43a77f:	and    BYTE PTR [rip+0x64660073],ah        # 0x64a9a7f8
  43a785:	and    BYTE PTR [rsi+0x6f],ch
  43a788:	je     0x43a7aa
  43a78a:	outs   dx,WORD PTR ds:[rsi]
  43a78c:	jne    0x43a7fc
  43a78e:	and    BYTE PTR fs:[rcx+0x6e],ch
  43a792:	and    BYTE PTR [rdi+0x70],ch
  43a795:	outs   dx,BYTE PTR gs:[rsi]
  43a797:	pop    rdi
  43a798:	data16 fs jae 0x43a79c
  43a79c:	add    BYTE PTR [rax],al
  43a79e:	add    BYTE PTR [rax],al
  43a7a0:	jae    0x43a811
  43a7a2:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a7a5:	je     0x43a817
  43a7a7:	(bad)  
  43a7a8:	imul   esi,DWORD PTR [rdx+0x20],0x20746f6e
  43a7af:	(bad)  
  43a7b0:	jbe    0x43a813
  43a7b2:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  43a7ba:	outs   dx,BYTE PTR ds:[rsi]
  43a7bb:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43a7bf:	jae    0x43a7e1
  43a7c1:	push   0x74736f
  43a7c6:	add    BYTE PTR [rax],al
  43a7c8:	jo     0x43a833
  43a7ca:	jo     0x43a831
  43a7cc:	and    BYTE PTR [rsi+0x6f],ch
  43a7cf:	je     0x43a7f1
  43a7d1:	(bad)  
  43a7d2:	jbe    0x43a835
  43a7d4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  43a7dc:	outs   dx,BYTE PTR ds:[rsi]
  43a7dd:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43a7e1:	jae    0x43a803
  43a7e3:	push   0x74736f
	...
  43a7f0:	imul   ebp,DWORD PTR [rsi+0x74],0x62646720
  43a7f7:	pop    rdi
  43a7f8:	jo     0x43a863
  43a7fa:	jo     0x43a861
  43a7fc:	pop    rdi
  43a7fd:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x65]
  43a801:	js     0x43a868
  43a803:	movsxd ebp,DWORD PTR [rax]
  43a805:	imul   ebp,DWORD PTR [rsi+0x74],0x292a
	...
  43a820:	imul   ebp,DWORD PTR [rsi+0x74],0x62646720
  43a827:	pop    rdi
  43a828:	jae    0x43a899
  43a82a:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a82d:	je     0x43a89f
  43a82f:	(bad)  
  43a830:	imul   esi,DWORD PTR [rdx+0x5f],0x656f6c63
  43a837:	js     0x43a89e
  43a839:	movsxd ebp,DWORD PTR [rax]
  43a83b:	imul   ebp,DWORD PTR [rsi+0x74],0x6e69202c
  43a842:	je     0x43a870
  43a844:	and    BYTE PTR [rcx+0x6e],ch
  43a847:	je     0x43a875
  43a849:	and    BYTE PTR [rcx+0x6e],ch
  43a84c:	je     0x43a878
  43a84e:	sub    DWORD PTR [rax],eax
  43a850:	jbe    0x43a8c1
  43a852:	imul   esp,DWORD PTR [rax+riz*1+0x75],0x72616d6e
  43a85a:	imul   ebx,DWORD PTR [rdi+0x66],0x64
  43a85e:	pop    rdi
  43a85f:	outs   dx,BYTE PTR ds:[rsi]
  43a860:	outs   dx,DWORD PTR ds:[rsi]
  43a861:	pop    rdi
  43a862:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x65]
  43a866:	js     0x43a8cd
  43a868:	movsxd ebp,DWORD PTR [rax]
  43a86a:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  43a87d:	add    BYTE PTR [rax],al
  43a87f:	add    BYTE PTR [rcx+0x6e],ch
  43a882:	je     0x43a8ae
  43a884:	and    BYTE PTR [rsi+0x45],dl
  43a887:	rex.XB pop r15
  43a889:	imul   ebp,DWORD PTR [rsi+0x74],0x6975715f
  43a890:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43a893:	jo     0x43a90a
  43a895:	jae    0x43a8ff
  43a897:	sub    BYTE PTR [rsi+0x45],dl
  43a89a:	rex.XB pop r15
  43a89c:	imul   ebp,DWORD PTR [rsi+0x74],0x69202c2a
  43a8a3:	outs   dx,BYTE PTR ds:[rsi]
  43a8a4:	je     0x43a8d2
  43a8a6:	and    BYTE PTR [rbx+0x6f],ah
  43a8a9:	outs   dx,BYTE PTR ds:[rsi]
  43a8aa:	jae    0x43a920
  43a8ac:	and    BYTE PTR [rbx+0x68],ah
  43a8af:	(bad)  
  43a8b0:	jb     0x43a8dc
  43a8b2:	sub    al,0x20
  43a8b4:	jne    0x43a924
  43a8b6:	jae    0x43a921
  43a8b8:	outs   dx,BYTE PTR ds:[esi]
  43a8ba:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43a8bf:	je     0x43a8ea
	...
  43a8fd:	add    BYTE PTR [rax],al
  43a8ff:	add    BYTE PTR [rip+0x61203a73],ah        # 0x6163e378
  43a905:	movsxd ebp,DWORD PTR [rbx+0x69]
  43a908:	outs   dx,BYTE PTR ds:[rsi]
  43a909:	and    BYTE PTR [eip+0x70000a64],ah        # 0x7043b374
  43a910:	outs   dx,BYTE PTR gs:[rsi]
  43a912:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65766520
  43a91a:	outs   dx,BYTE PTR ds:[rsi]
  43a91b:	je     0x43a990
  43a91d:	cmp    ah,BYTE PTR [rax]
  43a91f:	and    eax,0x64252073
  43a924:	or     al,BYTE PTR [rax]
  43a926:	and    eax,0x3a73
	...
  43a93f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163e3b8
  43a945:	jae    0x43a9ba
  43a947:	gs jb  0x43a9be
  43a94a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43a951:	(bad)  
  43a952:	and    BYTE PTR [rsi+0x61],ah
  43a955:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6474002e
  43a95d:	gs jae 0x43a9c3
  43a960:	movsxd eax,DWORD PTR cs:[rax]
  43a963:	add    BYTE PTR [rax],al
  43a965:	add    BYTE PTR [rax],al
  43a967:	add    BYTE PTR [rdx],dh
  43a969:	and    BYTE PTR [rdx],ch
  43a96b:	and    BYTE PTR [rsp+riz*2+0x65],dh
  43a96f:	jae    0x43a9d4
  43a971:	sub    eax,0x6765723e
  43a976:	imul   esi,DWORD PTR [rbx+0x74],0x5f737265
  43a97d:	jae    0x43a9e8
  43a97f:	jp     0x43a9e6
  43a981:	and    BYTE PTR [rbx],ch
  43a983:	and    BYTE PTR [rbx],dh
  43a985:	xor    ah,BYTE PTR [rax]
  43a987:	cmp    al,0x3d
  43a989:	and    BYTE PTR [rax+0x42],dl
  43a98c:	push   rbp
  43a98d:	rex.RX push rbx
  43a98f:	rex.WB pop r10
	...
  43a99d:	add    BYTE PTR [rax],al
  43a99f:	add    BYTE PTR [rsi+0x6f],dh
  43a9a2:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x5f74696e
  43a9aa:	je     0x43aa0d
  43a9ac:	jb     0x43aa15
  43a9ae:	gs je  0x43aa10
  43a9b1:	fs gs jae 0x43aa18
  43a9b5:	sub    BYTE PTR [rcx+riz*2+0x72],dh
  43a9b9:	addr32 gs je 0x43aa1c
  43a9bd:	fs gs jae 0x43aa24
  43a9c1:	sub    ch,BYTE PTR [rcx]
	...
  43a9ff:	add    BYTE PTR [rip+0x2a302573],ah        # 0x2a73cf78
  43aa05:	ins    BYTE PTR es:[rdi],dx
  43aa06:	jne    0x43aa08
  43aa08:	and    eax,0x2a302573
  43aa0d:	ins    BYTE PTR es:[rdi],dx
  43aa0e:	jne    0x43aa35
  43aa10:	xor    BYTE PTR [rcx],bh
  43aa12:	ins    BYTE PTR es:[rdi],dx
  43aa13:	jne    0x43aa15
  43aa15:	and    eax,0x2a302573
  43aa1a:	ins    BYTE PTR es:[rdi],dx
  43aa1b:	jne    0x43aa42
  43aa1d:	xor    BYTE PTR [rcx],bh
  43aa1f:	ins    BYTE PTR es:[rdi],dx
  43aa20:	jne    0x43aa47
  43aa22:	xor    BYTE PTR [rcx],bh
  43aa24:	ins    BYTE PTR es:[rdi],dx
  43aa25:	jne    0x43aa27
  43aa27:	add    BYTE PTR [rip+0x38302500],ch        # 0x3873cf2d
  43aa2d:	ins    BYTE PTR es:[rdi],dx
  43aa2e:	js     0x43aa55
  43aa30:	xor    BYTE PTR [rax],bh
  43aa32:	ins    BYTE PTR es:[rdi],dx
  43aa33:	js     0x43aa35
  43aa35:	and    eax,0x786c3830
  43aa3a:	add    BYTE PTR [rip+0x783430],ah        # 0xbbde70
  43aa40:	and    eax,0x2500786c
  43aa45:	ins    BYTE PTR es:[rdi],dx
  43aa46:	js     0x43aa6d
  43aa48:	xor    BYTE PTR [rax],bh
  43aa4a:	ins    BYTE PTR es:[rdi],dx
  43aa4b:	js     0x43aa4d
  43aa4d:	and    eax,0x78300078
  43aa52:	and    eax,0x73
  43aa57:	add    BYTE PTR [rax+0x65],ch
  43aa5a:	js     0x43aabb
  43aa5c:	jae    0x43aad2
  43aa5e:	jb     0x43aac9
  43aa60:	outs   dx,BYTE PTR ds:[rsi]
  43aa61:	addr32 pop rdi
  43aa63:	movsxd esi,DWORD PTR [rbp+0x73]
  43aa66:	je     0x43aad7
  43aa68:	ins    DWORD PTR es:[rdi],dx
  43aa69:	cmp    ah,BYTE PTR [rax]
  43aa6b:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
  43aa72:	movsxd ebp,DWORD PTR [rcx+0x65]
  43aa75:	outs   dx,BYTE PTR ds:[rsi]
  43aa76:	je     0x43aa98
  43aa78:	jae    0x43aaea
  43aa7a:	(bad)  
  43aa7b:	movsxd esp,DWORD PTR [rbp+0x20]
  43aa7e:	je     0x43aaef
  43aa80:	and    BYTE PTR [rbx+0x74],dh
  43aa83:	outs   dx,DWORD PTR ds:[rsi]
  43aa84:	jb     0x43aaeb
  43aa86:	and    BYTE PTR [rdx+0x65],dh
  43aa89:	jae    0x43ab00
  43aa8b:	ins    BYTE PTR es:[rdi],dx
  43aa8c:	je     0x43aa8e
  43aa8e:	cs cs (bad) 
  43aa91:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43aa94:	ins    DWORD PTR es:[rdi],dx
  43aa95:	outs   dx,DWORD PTR ds:[rsi]
  43aa96:	outs   dx,BYTE PTR ds:[rsi]
  43aa97:	(bad)  
  43aa98:	jo     0x43ab0c
  43aa9a:	imul   ebp,DWORD PTR [rsi+0x74],0x6974752d
  43aaa1:	ins    BYTE PTR es:[rdi],dx
  43aaa2:	jae    0x43aad2
  43aaa4:	movsxd eax,DWORD PTR [rax]
  43aaa6:	and    eax,0x30006f2a
  43aaab:	and    eax,0x6f6c2a30
  43aab0:	add    BYTE PTR [rax],dh
  43aab2:	and    eax,0x6f6c2a30
  43aab7:	and    eax,0x6c303130
  43aabc:	outs   dx,DWORD PTR ds:[rsi]
  43aabd:	add    BYTE PTR [rax],dh
  43aabf:	and    eax,0x6f6c2a30
  43aac4:	and    eax,0x6c303130
  43aac9:	outs   dx,DWORD PTR ds:[rsi]
  43aaca:	and    eax,0x6c303130
  43aacf:	outs   dx,DWORD PTR ds:[rsi]
	...
  43aad8:	data16 (bad) 
  43aada:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x746e6920
  43aae2:	gs jb  0x43ab53
  43aae5:	(bad)  
  43aae6:	ins    BYTE PTR es:[rdi],dx
  43aae7:	and    BYTE PTR [rbx+0x6f],ah
  43aaea:	outs   dx,BYTE PTR ds:[rsi]
  43aaeb:	jae    0x43ab56
  43aaed:	jae    0x43ab63
  43aaef:	outs   dx,BYTE PTR gs:[rsi]
  43aaf1:	movsxd edi,DWORD PTR [rcx+0x20]
  43aaf4:	movsxd ebp,DWORD PTR [rax+0x65]
  43aaf7:	movsxd ebp,DWORD PTR [rbx+0x0]
  43aafa:	add    BYTE PTR [rax],al
  43aafc:	add    BYTE PTR [rax],al
  43aafe:	add    BYTE PTR [rax],al
  43ab00:	push   rdx
  43ab01:	gs jo  0x43ab70
  43ab04:	jns    0x43ab26
  43ab06:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43ab09:	je     0x43ab6c
  43ab0b:	imul   ebp,DWORD PTR [rsi+0x73],0x766e6920
  43ab12:	(bad)  
  43ab13:	ins    BYTE PTR es:[rdi],dx
  43ab14:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x64207865
  43ab1c:	imul   esp,DWORD PTR [rdi+0x69],0x64252074
  43ab23:	add    BYTE PTR [rax],al
  43ab25:	add    BYTE PTR [rax],al
  43ab27:	add    BYTE PTR [rdx+0x65],dl
  43ab2a:	movsxd esp,DWORD PTR [rbp+0x69]
  43ab2d:	jbe    0x43ab94
  43ab2f:	and    BYTE PTR fs:[rdi+rbp*2+0x6f],dh
  43ab34:	and    BYTE PTR [rbp+0x75],ch
  43ab37:	movsxd ebp,DWORD PTR [rax+0x20]
  43ab3a:	fs (bad) 
  43ab3c:	je     0x43ab9f
  43ab3e:	and    BYTE PTR [rsi+0x72],ah
  43ab41:	outs   dx,DWORD PTR ds:[rsi]
  43ab42:	ins    DWORD PTR es:[rdi],dx
  43ab43:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43ab47:	and    BYTE PTR [rcx+riz*2+0x72],dh
  43ab4b:	addr32 gs je 0x43ab7d
  43ab4f:	add    BYTE PTR [rbp+0x6e],dl
  43ab52:	ins    DWORD PTR es:[rdi],dx
  43ab53:	(bad)  
  43ab54:	je     0x43abb9
  43ab56:	push   0x65206465
  43ab5b:	jae    0x43abc0
  43ab5d:	(bad)  
  43ab5e:	jo     0x43abc5
  43ab60:	and    BYTE PTR [rbx+0x68],ah
  43ab63:	(bad)  
  43ab64:	jb     0x43abc7
  43ab66:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  43ab6a:	and    BYTE PTR [rcx+0x6e],ch
  43ab6d:	and    BYTE PTR [rcx+riz*2+0x72],dh
  43ab71:	addr32 gs je 0x43ab95
  43ab75:	jb     0x43abdc
  43ab77:	jae    0x43abe9
  43ab79:	outs   dx,DWORD PTR ds:[rsi]
  43ab7a:	outs   dx,BYTE PTR ds:[rsi]
  43ab7b:	jae    0x43abe2
  43ab7d:	add    BYTE PTR cs:[rax],al
  43ab80:	xor    BYTE PTR [rcx],dh
  43ab82:	xor    dh,BYTE PTR [rbx]
  43ab84:	xor    al,0x35
  43ab86:	ss (bad) 
  43ab88:	cmp    BYTE PTR [rcx],bh
  43ab8a:	(bad)  
  43ab8b:	(bad)
	...
  43abc0:	and    eax,0x41203a73
  43abc5:	jae    0x43ac3a
  43abc7:	gs jb  0x43ac3e
  43abca:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43abd1:	(bad)  
  43abd2:	and    BYTE PTR [rsi+0x61],ah
  43abd5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  43abdd:	(bad)  
  43abde:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43abe1:	ins    DWORD PTR es:[rdi],dx
  43abe2:	outs   dx,DWORD PTR ds:[rsi]
  43abe3:	outs   dx,BYTE PTR ds:[rsi]
  43abe4:	(bad)  
  43abe5:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  43abe9:	outs   dx,BYTE PTR ds:[rsi]
  43abea:	jne    0x43ac5c
  43abec:	jae    0x43ac1c
  43abee:	movsxd eax,DWORD PTR [rax]
  43abf0:	outs   dx,DWORD PTR ds:[rsi]
  43abf1:	ins    BYTE PTR es:[rdi],dx
  43abf2:	fs pop rdi
  43abf4:	movsxd ebp,DWORD PTR [rax+0x61]
  43abf7:	imul   ebp,DWORD PTR [rsi+0x20],0x4e203d21
  43abfe:	push   rbp
  43abff:	rex.WR
  43ac00:	rex.WR add BYTE PTR [rax],r8b
  43ac03:	add    BYTE PTR [rax],al
  43ac05:	add    BYTE PTR [rax],al
  43ac07:	add    BYTE PTR [rdx+0x65],dh
  43ac0a:	jae    0x43ac80
  43ac0c:	outs   dx,DWORD PTR ds:[rsi]
  43ac0d:	jb     0x43ac74
  43ac0f:	pop    rdi
  43ac10:	ins    DWORD PTR es:[rdi],dx
  43ac11:	jns    0x43ac72
  43ac13:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  43ac17:	outs   dx,BYTE PTR ds:[rsi]
  43ac18:	jne    0x43ac8a
  43ac1a:	jae    0x43ac3c
  43ac1c:	push   0x66207361
  43ac21:	outs   dx,DWORD PTR ds:[rsi]
  43ac22:	jne    0x43ac92
  43ac24:	and    BYTE PTR fs:[rcx+0x20],ah
  43ac28:	jae    0x43ac9e
  43ac2a:	(bad)  
  43ac2b:	ins    BYTE PTR es:[rdi],dx
  43ac2c:	and    BYTE PTR gs:[rbx+0x6c],ah
  43ac30:	gs (bad) 
  43ac32:	outs   dx,BYTE PTR ds:[rsi]
  43ac33:	jne    0x43aca5
	...
  43ac3d:	add    BYTE PTR [rax],al
  43ac3f:	add    BYTE PTR [rbx+0x6c],ah
  43ac42:	gs (bad) 
  43ac44:	outs   dx,BYTE PTR ds:[rsi]
  43ac45:	jne    0x43acb7
  43ac47:	sub    ah,BYTE PTR [rax]
  43ac49:	ins    DWORD PTR es:[rdi],dx
  43ac4a:	(bad)  
  43ac4b:	imul   esp,DWORD PTR [rbp+0x5f],0x6d
  43ac4f:	jns    0x43acb0
  43ac51:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  43ac55:	outs   dx,BYTE PTR ds:[rsi]
  43ac56:	jne    0x43acc8
  43ac58:	xor    ch,BYTE PTR [rax]
  43ac5a:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  43ac5e:	outs   dx,BYTE PTR ds:[rsi]
  43ac5f:	jne    0x43acd1
  43ac61:	sub    ch,BYTE PTR [rdx]
  43ac63:	sub    al,0x20
  43ac65:	jbe    0x43acd6
  43ac67:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x7628292a
  43ac6f:	outs   dx,DWORD PTR ds:[rsi]
  43ac70:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x6f76202c
  43ac78:	imul   esp,DWORD PTR [rdx+rbp*1+0x2c],0x696f7620
  43ac80:	and    BYTE PTR fs:[rax],ch
  43ac83:	sub    ch,BYTE PTR [rcx]
  43ac85:	sub    BYTE PTR [rsi+0x6f],dh
  43ac88:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x29
	...
  43acc0:	(bad)
  43acc5:	je     0x43ad28
  43acc7:	je     0x43ad2e
  43acc9:	add    BYTE PTR [rsi],ch
  43accb:	cs (bad) 
  43accd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43acd0:	ins    DWORD PTR es:[rdi],dx
  43acd1:	outs   dx,DWORD PTR ds:[rsi]
  43acd2:	outs   dx,BYTE PTR ds:[rsi]
  43acd3:	(bad)  
  43acd4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43acd7:	ins    DWORD PTR es:[rdi],dx
  43acd8:	outs   dx,DWORD PTR ds:[rsi]
  43acd9:	outs   dx,BYTE PTR ds:[rsi]
  43acda:	sub    eax,0x65637865
  43acdf:	jo     0x43ad55
  43ace1:	imul   ebp,DWORD PTR [rdi+0x6e],0x632e73
  43ace8:	(bad)
  43aced:	ja     0x43ad58
  43acef:	je     0x43ad54
  43acf1:	push   0x3a732500
  43acf6:	and    BYTE PTR [rip+0x6e690073],ah        # 0x6eacad6f
  43acfc:	jbe    0x43ad5f
  43acfe:	ins    BYTE PTR es:[rdi],dx
  43acff:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x72757465
  43ad07:	outs   dx,BYTE PTR ds:[rsi]
  43ad08:	and    BYTE PTR [rdx+0x65],dh
  43ad0b:	(bad)  
  43ad0c:	jae    0x43ad7d
  43ad0e:	outs   dx,BYTE PTR ds:[rsi]
  43ad0f:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163e788
  43ad15:	jae    0x43ad8a
  43ad17:	gs jb  0x43ad8e
  43ad1a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43ad21:	(bad)  
  43ad22:	and    BYTE PTR [rsi+0x61],ah
  43ad25:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6564002e
  43ad2d:	jo     0x43ada3
  43ad2f:	push   0x30203e20
	...
  43ad40:	jbe    0x43adb1
  43ad42:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x776f7268
  43ad4a:	pop    rdi
  43ad4b:	imul   esi,DWORD PTR [rax+rbp*1+0x72],0x72757465
  43ad53:	outs   dx,BYTE PTR ds:[rsi]
  43ad54:	pop    rdi
  43ad55:	jb     0x43adbc
  43ad57:	(bad)  
  43ad58:	jae    0x43adc9
  43ad5a:	outs   dx,BYTE PTR ds:[rsi]
  43ad5b:	sub    al,0x20
  43ad5d:	gs jb  0x43add2
  43ad60:	outs   dx,DWORD PTR ds:[rsi]
  43ad61:	jb     0x43add6
  43ad63:	sub    al,0x20
  43ad65:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43ad68:	jae    0x43adde
  43ad6a:	and    BYTE PTR [rbx+0x68],ah
  43ad6d:	(bad)  
  43ad6e:	jb     0x43ad9a
  43ad70:	sub    al,0x20
  43ad72:	jbe    0x43add5
  43ad74:	pop    rdi
  43ad75:	ins    BYTE PTR es:[rdi],dx
  43ad76:	imul   esi,DWORD PTR [rbx+0x74],0x29
  43ad7d:	add    BYTE PTR [rax],al
  43ad7f:	add    BYTE PTR [rsi+0x6f],dh
  43ad82:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x776f7268
  43ad8a:	pop    rdi
  43ad8b:	gs js  0x43adf1
  43ad8e:	gs jo  0x43ae05
  43ad91:	imul   ebp,DWORD PTR [rdi+0x6e],0x7878635f
  43ad98:	sub    BYTE PTR [rdi+0x64],ah
  43ad9b:	(bad)  
  43ad9c:	pop    rdi
  43ad9d:	gs js  0x43ae03
  43ada0:	gs jo  0x43ae17
  43ada3:	imul   ebp,DWORD PTR [rdi+0x6e],0x29
	...
  43adbe:	add    BYTE PTR [rax],al
  43adc0:	and    eax,0x41203a73
  43adc5:	jae    0x43ae3a
  43adc7:	gs jb  0x43ae3e
  43adca:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43add1:	(bad)  
  43add2:	and    BYTE PTR [rsi+0x61],ah
  43add5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7973002e
  43addd:	ins    DWORD PTR es:[rdi],dx
  43adde:	(bad)  
  43addf:	outs   dx,DWORD PTR ds:[rsi]
  43ade0:	ins    BYTE PTR es:[rdi],dx
  43ade1:	movsxd eax,DWORD PTR cs:[rax]
  43ade4:	outs   dx,DWORD PTR ds:[rsi]
  43ade5:	(bad)  
  43ade6:	push   0x66
  43ade8:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x4e203d3d
  43adf0:	push   rbp
  43adf1:	rex.WR
  43adf2:	rex.WR add BYTE PTR [rax],r8b
	...
  43adfd:	add    BYTE PTR [rax],al
  43adff:	add    BYTE PTR [rcx+0x6e],ch
  43ae02:	je     0x43ae24
  43ae04:	imul   bp,WORD PTR [rsi+0x64],0x6d5f
  43ae0a:	imul   ebp,DWORD PTR [rsi+0x69],0x5f6c616d
  43ae11:	jae    0x43ae8c
  43ae13:	ins    DWORD PTR es:[rdi],dx
  43ae14:	(bad)  
  43ae15:	outs   dx,DWORD PTR ds:[rsi]
  43ae16:	ins    BYTE PTR es:[rdi],dx
  43ae17:	pop    rdi
  43ae18:	(bad)  
  43ae19:	fs fs jb 0x43ae82
  43ae1d:	jae    0x43ae92
  43ae1f:	sub    BYTE PTR [rbx+0x6f],ah
  43ae22:	outs   dx,BYTE PTR ds:[rsi]
  43ae23:	jae    0x43ae99
  43ae25:	and    BYTE PTR [rbx+0x68],ah
  43ae28:	(bad)  
  43ae29:	jb     0x43ae55
  43ae2b:	sub    al,0x20
  43ae2d:	rex.XB
  43ae2e:	rex.WRXB push r10
  43ae30:	rex.RB pop r15
  43ae32:	rex.B
  43ae33:	rex.R
  43ae34:	rex.R push rdx
  43ae36:	sub    ch,BYTE PTR [rax+riz*1]
  43ae39:	outs   dx,DWORD PTR ds:[rsi]
  43ae3a:	(bad)  
  43ae3b:	push   0x66
  43ae3d:	imul   ebp,DWORD PTR [rbp+riz*2+0x2a],0x29
	...
  43ae7d:	add    BYTE PTR [rax],al
  43ae7f:	add    BYTE PTR [rsi+0x6f],cl
  43ae82:	and    BYTE PTR [rdi+0x72],ch
  43ae85:	and    BYTE PTR [rbp+0x6e],dh
  43ae88:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43ae8c:	outs   dx,BYTE PTR ds:[rsi]
  43ae8d:	and    BYTE PTR [rsi+0x6f],ah
  43ae90:	jb     0x43aeff
  43ae92:	(bad)  
  43ae93:	je     0x43ae95
  43ae95:	rex.X jb 0x43aef9
  43ae98:	outs   dx,BYTE PTR ds:[rsi]
  43ae99:	movsxd ebp,DWORD PTR [rax+0x20]
  43ae9c:	push   rsp
  43ae9d:	jb     0x43af00
  43ae9f:	movsxd esp,DWORD PTR [rbp+0x20]
  43aea2:	push   rbx
  43aea3:	je     0x43af14
  43aea5:	jb     0x43af0c
  43aea7:	add    BYTE PTR [rcx+0x6e],cl
  43aeaa:	je     0x43af11
  43aeac:	ins    BYTE PTR es:[rdi],dx
  43aead:	and    BYTE PTR [rax+0x72],dl
  43aeb0:	outs   dx,DWORD PTR ds:[rsi]
  43aeb1:	movsxd esp,DWORD PTR [rbp+0x73]
  43aeb4:	jae    0x43af25
  43aeb6:	jb     0x43aed8
  43aeb8:	push   rsp
  43aeb9:	jb     0x43af1c
  43aebb:	movsxd esp,DWORD PTR [rbp+0x0]
  43aebe:	push   rbp
  43aebf:	outs   dx,BYTE PTR ds:[rsi]
  43aec0:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43aec4:	outs   dx,BYTE PTR ds:[rsi]
  43aec5:	and    BYTE PTR [rdx+0x72],ah
  43aec8:	(bad)  
  43aec9:	outs   dx,BYTE PTR ds:[rsi]
  43aeca:	movsxd ebp,DWORD PTR [rax+0x20]
  43aecd:	je     0x43af41
  43aecf:	(bad)  
  43aed0:	movsxd esp,DWORD PTR [rbp+0x20]
  43aed3:	outs   dx,WORD PTR ds:[rsi]
  43aed5:	jb     0x43af44
  43aed7:	(bad)  
  43aed8:	je     0x43aeda
  43aeda:	cs cs (bad) 
  43aedd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43aee0:	ins    DWORD PTR es:[rdi],dx
  43aee1:	outs   dx,DWORD PTR ds:[rsi]
  43aee2:	outs   dx,BYTE PTR ds:[rsi]
  43aee3:	(bad)  
  43aee4:	(bad)  
  43aee5:	je     0x43af59
  43aee7:	(bad)  
  43aee8:	movsxd esp,DWORD PTR [rbp+0x2d]
  43aeeb:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43aeee:	ins    DWORD PTR es:[rdi],dx
  43aeef:	outs   dx,DWORD PTR ds:[rsi]
  43aef0:	outs   dx,BYTE PTR ds:[rsi]
  43aef1:	movsxd eax,DWORD PTR cs:[rax]
  43aef4:	jne    0x43af64
  43aef6:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43aefa:	outs   dx,BYTE PTR ds:[rsi]
  43aefb:	add    BYTE PTR [rdx+0x74],ah
  43aefe:	jae    0x43af00
  43af00:	jo     0x43af76
  43af02:	add    BYTE PTR [rbp+0x6e],dl
  43af05:	imul   ebp,DWORD PTR [rdi+0x77],0x6e
  43af09:	and    BYTE PTR [rdx+0x72],ah
  43af0c:	(bad)  
  43af0d:	outs   dx,BYTE PTR ds:[rsi]
  43af0e:	movsxd ebp,DWORD PTR [rax+0x20]
  43af11:	je     0x43af85
  43af13:	(bad)  
  43af14:	movsxd esp,DWORD PTR [rbp+0x20]
  43af17:	outs   dx,WORD PTR ds:[rsi]
  43af19:	jb     0x43af88
  43af1b:	(bad)  
  43af1c:	je     0x43af4c
  43af1e:	add    BYTE PTR [rip+0x41203a73],ah        # 0x4163e997
  43af24:	jae    0x43af99
  43af26:	gs jb  0x43af9d
  43af29:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  43af30:	(bad)  
  43af31:	and    BYTE PTR [rsi+0x61],ah
  43af34:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e69002e
  43af3c:	fs gs js 0x43af40
  43af40:	jno    0x43afb7
  43af42:	imul   esp,DWORD PTR [rbx+0x6b],0x7375705f
  43af49:	push   0x0
	...
  43af7e:	add    BYTE PTR [rax],al
  43af80:	(bad)  
  43af81:	je     0x43aff5
  43af83:	(bad)  
  43af84:	movsxd esp,DWORD PTR [rbp+0x5f]
  43af87:	(bad)  
  43af88:	ins    BYTE PTR es:[rdi],dx
  43af89:	outs   dx,DWORD PTR ds:[rsi]
  43af8a:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43af8d:	jae    0x43afb9
  43af8f:	and    BYTE PTR [rsi+0x45],dl
  43af92:	rex.XB pop r15
  43af94:	(bad)  
  43af95:	je     0x43b009
  43af97:	(bad)  
  43af98:	movsxd esp,DWORD PTR [rbp+0x5f]
  43af9b:	(bad)  
  43af9c:	ins    BYTE PTR es:[rdi],dx
  43af9d:	outs   dx,DWORD PTR ds:[rsi]
  43af9e:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43afa1:	jae    0x43b002
  43afa3:	jno    0x43b01a
  43afa5:	imul   esp,DWORD PTR [rbx+0x6b],0x7375705f
  43afac:	push   0x43455628
  43afb1:	pop    rdi
  43afb2:	(bad)  
  43afb3:	je     0x43b027
  43afb5:	(bad)  
  43afb6:	movsxd esp,DWORD PTR [rbp+0x5f]
  43afb9:	(bad)  
  43afba:	ins    BYTE PTR es:[rdi],dx
  43afbb:	outs   dx,DWORD PTR ds:[rsi]
  43afbc:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43afbf:	jae    0x43afeb
  43afc1:	sub    al,0x20
  43afc3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43afc6:	jae    0x43b03c
  43afc8:	and    BYTE PTR [rdx+0x74],ah
  43afcb:	jb     0x43b02e
  43afcd:	movsxd esp,DWORD PTR [rbp+0x5f]
  43afd0:	(bad)  
  43afd1:	ins    BYTE PTR es:[rdi],dx
  43afd2:	outs   dx,DWORD PTR ds:[rsi]
  43afd3:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43afd6:	jae    0x43b002
  43afd8:	sub    al,0x20
  43afda:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43afdd:	jae    0x43b053
  43afdf:	and    BYTE PTR [rbx+0x68],ah
  43afe2:	(bad)  
  43afe3:	jb     0x43b00f
  43afe5:	sub    al,0x20
  43afe7:	jne    0x43b057
  43afe9:	jae    0x43b054
  43afeb:	outs   dx,BYTE PTR ds:[esi]
  43afed:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43aff2:	je     0x43b01d
	...
  43b000:	(bad)  
  43b001:	je     0x43b075
  43b003:	(bad)  
  43b004:	movsxd esp,DWORD PTR [rbp+0x5f]
  43b007:	(bad)  
  43b008:	ins    BYTE PTR es:[rdi],dx
  43b009:	outs   dx,DWORD PTR ds:[rsi]
  43b00a:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43b00d:	jae    0x43b039
  43b00f:	and    BYTE PTR [rsi+0x45],dl
  43b012:	rex.XB pop r15
  43b014:	(bad)  
  43b015:	je     0x43b089
  43b017:	(bad)  
  43b018:	movsxd esp,DWORD PTR [rbp+0x5f]
  43b01b:	(bad)  
  43b01c:	ins    BYTE PTR es:[rdi],dx
  43b01d:	outs   dx,DWORD PTR ds:[rsi]
  43b01e:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43b021:	jae    0x43b082
  43b023:	imul   ebp,DWORD PTR [rsi+0x64],0x56287865
  43b02a:	rex.RB
  43b02b:	rex.XB pop r15
  43b02d:	(bad)  
  43b02e:	je     0x43b0a2
  43b030:	(bad)  
  43b031:	movsxd esp,DWORD PTR [rbp+0x5f]
  43b034:	(bad)  
  43b035:	ins    BYTE PTR es:[rdi],dx
  43b036:	outs   dx,DWORD PTR ds:[rsi]
  43b037:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43b03a:	jae    0x43b066
  43b03c:	sub    al,0x20
  43b03e:	jne    0x43b0ae
  43b040:	jae    0x43b0ab
  43b042:	outs   dx,BYTE PTR ds:[esi]
  43b044:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43b049:	je     0x43b077
  43b04b:	and    BYTE PTR [rbx+0x6f],ah
  43b04e:	outs   dx,BYTE PTR ds:[rsi]
  43b04f:	jae    0x43b0c5
  43b051:	and    BYTE PTR [rbx+0x68],ah
  43b054:	(bad)  
  43b055:	jb     0x43b081
  43b057:	sub    al,0x20
  43b059:	jne    0x43b0c9
  43b05b:	jae    0x43b0c6
  43b05d:	outs   dx,BYTE PTR ds:[esi]
  43b05f:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43b064:	je     0x43b08f
	...
  43b07e:	add    BYTE PTR [rax],al
  43b080:	add    DWORD PTR [rax],eax
  43b082:	add    al,BYTE PTR [rax]
  43b084:	(bad)  
  43b086:	add    al,0x0
  43b088:	add    eax,0xf270f00
  43b08d:	(bad)  
  43b08e:	(bad)  
  43b090:	or     DWORD PTR [rax],eax
  43b092:	(bad)  
  43b094:	(bad)  
  43b096:	(bad)  
  43b098:	or     eax,0xf000e00
  43b09d:	(bad)  
  43b09e:	adc    BYTE PTR [rax],al
  43b0a0:	adc    DWORD PTR [rax],eax
  43b0a2:	(bad)  
  43b0a4:	adc    eax,DWORD PTR [rax]
  43b0a6:	adc    al,0x0
  43b0a8:	adc    eax,0x17001600
  43b0ad:	add    BYTE PTR [rax],bl
  43b0af:	add    BYTE PTR [rdi],cl
  43b0b1:	(bad)  
  43b0b2:	(bad)  
  43b0b4:	sbb    eax,DWORD PTR [rax]
  43b0b6:	sbb    al,0x0
  43b0b8:	sbb    eax,0xf001e00
  43b0bd:	(bad)  
  43b0be:	(bad)  
  43b0c0:	(bad)  
  43b0c2:	(bad)  
  43b0c4:	(bad)  
  43b0c6:	(bad)  
  43b0c8:	(bad)  
  43b0ca:	pop    rbx
  43b0cb:	add    BYTE PTR [rdi],cl
  43b0cd:	(bad)  
  43b0ce:	pop    rax
	...
  43b0ff:	add    BYTE PTR [rdx+0x65],dl
  43b102:	imul   esi,DWORD PTR [ebx+0x74],0x25207265
  43b10a:	and    BYTE PTR fs:[rcx+0x73],ch
  43b10e:	and    BYTE PTR [rsi+0x6f],ch
  43b111:	je     0x43b133
  43b113:	(bad)  
  43b114:	jbe    0x43b177
  43b116:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
	...
  43b13e:	add    BYTE PTR [rax],al
  43b140:	cmp    al,0x3f
  43b142:	js     0x43b1b1
  43b144:	ins    BYTE PTR es:[rdi],dx
  43b145:	and    BYTE PTR [rsi+0x65],dh
  43b148:	jb     0x43b1bd
  43b14a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43b151:	xor    BYTE PTR [rdx],ah
  43b153:	(bad)  
  43b154:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43b158:	sub    eax,0x6f43202d
  43b15d:	jo     0x43b1d8
  43b15f:	jb     0x43b1ca
  43b161:	addr32 push 0x43282074
  43b167:	sub    DWORD PTR [rax],esp
  43b169:	xor    dh,BYTE PTR [rax]
  43b16b:	xor    DWORD PTR [rbx],esi
  43b16d:	sub    eax,0x37313032
  43b172:	and    BYTE PTR [rsi+0x72],al
  43b175:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43b17a:	data16 je 0x43b1f4
  43b17d:	(bad)  
  43b17e:	jb     0x43b1e5
  43b180:	and    BYTE PTR [rsi+0x6f],al
  43b183:	jne    0x43b1f3
  43b185:	fs (bad) 
  43b187:	je     0x43b1f2
  43b189:	outs   dx,DWORD PTR ds:[rsi]
  43b18a:	outs   dx,BYTE PTR ds:[rsi]
  43b18b:	sub    al,0x20
  43b18d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43b18f:	movsxd ebp,DWORD PTR [rsi]
  43b191:	or     cl,BYTE PTR [rdx]
  43b193:	and    BYTE PTR [rax],ah
  43b195:	and    BYTE PTR [rax],ah
  43b197:	and    BYTE PTR [rbx+0x6f],al
  43b19a:	jo     0x43b215
  43b19c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43b1a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43b1a7:	je     0x43b21b
  43b1a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43b1b0:	and    BYTE PTR [rdi+0x66],ch
  43b1b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43b1b7:	jae    0x43b1d9
  43b1b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43b1c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43b1c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43b1d0:	outs   dx,DWORD PTR ds:[rsi]
  43b1d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43b1d9:	outs   dx,DWORD PTR ds:[rsi]
  43b1da:	outs   dx,BYTE PTR ds:[rsi]
  43b1db:	sub    al,0xa
  43b1dd:	and    BYTE PTR [rax],ah
  43b1df:	and    BYTE PTR [rax],ah
  43b1e1:	and    BYTE PTR [rcx+0x72],ah
  43b1e4:	and    BYTE PTR gs:[rax+0x65],dh
  43b1e8:	jb     0x43b257
  43b1ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43b1f2:	and    BYTE PTR [rcx+0x6e],ah
  43b1f5:	jns    0x43b217
  43b1f7:	ins    DWORD PTR es:[rdi],dx
  43b1f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43b201:	push   0x2074756f
  43b206:	jb     0x43b277
  43b208:	jns    0x43b26b
  43b20a:	ins    BYTE PTR es:[rdi],dx
  43b20b:	je     0x43b286
  43b20d:	and    BYTE PTR [rax+0x72],dh
  43b210:	outs   dx,DWORD PTR ds:[rsi]
  43b211:	jbe    0x43b27c
  43b213:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43b21a:	and    BYTE PTR [rbx+0x6f],ah
  43b21d:	jo     0x43b298
  43b21f:	jb     0x43b28a
  43b221:	addr32 push 0x20200a74
  43b227:	and    BYTE PTR [rax],ah
  43b229:	and    BYTE PTR [rsi+0x6f],ch
  43b22c:	je     0x43b297
  43b22e:	movsxd esp,DWORD PTR [rbp+0x20]
  43b231:	(bad)  
  43b232:	outs   dx,BYTE PTR ds:[rsi]
  43b233:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43b238:	jae    0x43b25a
  43b23a:	outs   dx,BYTE PTR ds:[rsi]
  43b23b:	outs   dx,DWORD PTR ds:[rsi]
  43b23c:	je     0x43b2a7
  43b23e:	movsxd esp,DWORD PTR [rbp+0x20]
  43b241:	(bad)  
  43b242:	jb     0x43b2a9
  43b244:	and    BYTE PTR [rax+0x72],dh
  43b247:	gs jae 0x43b2af
  43b24a:	jb     0x43b2c2
  43b24c:	gs fs and BYTE PTR cs:[rax],ah
  43b251:	sub    eax,0xa0a3e2d
  43b256:	cmp    al,0x21
  43b258:	rex.R
  43b259:	rex.WRXB
  43b25a:	rex.XB push r12
  43b25c:	pop    rcx
  43b25d:	push   rax
  43b25e:	and    BYTE PTR [r14+0x65],r12b
  43b262:	(bad)  
  43b263:	je     0x43b2da
  43b265:	jb     0x43b2cc
  43b267:	and    BYTE PTR [rbx+0x59],dl
  43b26a:	push   rbx
  43b26b:	push   rsp
  43b26c:	rex.RB
  43b26d:	rex.WRB and BYTE PTR [r10],r12b
  43b270:	addr32 fs (bad) 
  43b273:	sub    eax,0x67726174
  43b278:	gs je  0x43b2a9
  43b27b:	fs je  0x43b2e2
  43b27e:	and    bh,BYTE PTR [rsi]
  43b280:	or     bh,BYTE PTR [rsi+riz*2]
  43b283:	gs (bad) 
  43b285:	je     0x43b2fc
  43b287:	jb     0x43b2ee
  43b289:	and    BYTE PTR [rsi+0x61],ch
  43b28c:	ins    DWORD PTR es:[rdi],dx
  43b28d:	gs cmp eax,0x67726f22
  43b293:	outs   dx,BYTE PTR cs:[esi]
  43b296:	jne    0x43b2c6
  43b298:	addr32 fs (bad) 
  43b29b:	imul   esi,DWORD PTR cs:[rbx],0x6d2e3638
  43b2a2:	jo     0x43b31c
  43b2a4:	and    bh,BYTE PTR [rsi]
  43b2a6:	or     ah,BYTE PTR [rax]
  43b2a8:	and    BYTE PTR [rbx+rsi*2],bh
  43b2ab:	je     0x43b31f
  43b2ad:	jne    0x43b312
  43b2af:	je     0x43b2d1
  43b2b1:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x32317262
  43b2b9:	cmp    BYTE PTR [rdx],ah
  43b2bb:	or     ah,BYTE PTR ds:[rax]
  43b2be:	and    BYTE PTR [rax],ah
  43b2c0:	and    BYTE PTR [rsi+riz*2],bh
  43b2c3:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b2ca:	ins    DWORD PTR es:[rdi],dx
  43b2cb:	gs cmp eax,0x6f626c22
  43b2d1:	jne    0x43b341
  43b2d3:	and    ah,BYTE PTR fs:[rax]
  43b2d6:	je     0x43b351
  43b2d8:	jo     0x43b33f
  43b2da:	cmp    eax,0x6e697522
  43b2df:	je     0x43b317
  43b2e1:	xor    al,0x22
  43b2e3:	(bad)  
  43b2e4:	or     ah,BYTE PTR ds:[rax]
  43b2e7:	and    BYTE PTR [rax],ah
  43b2e9:	and    BYTE PTR [rsi+riz*2],bh
  43b2ec:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b2f3:	ins    DWORD PTR es:[rdi],dx
  43b2f4:	gs cmp eax,0x6f627522
  43b2fa:	jne    0x43b36a
  43b2fc:	fs pop rdi
  43b2fe:	jb     0x43b361
  43b300:	ja     0x43b324
  43b302:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b306:	gs cmp eax,0x6e697522
  43b30c:	je     0x43b344
  43b30e:	xor    al,0x22
  43b310:	(bad)  
  43b311:	or     ah,BYTE PTR ds:[rax]
  43b314:	and    BYTE PTR [rdi+rbp*1],bh
  43b317:	jae    0x43b38d
  43b319:	jb     0x43b390
  43b31b:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  43b31f:	or     ah,BYTE PTR [rax]
  43b321:	and    BYTE PTR [rbx+rsi*2],bh
  43b324:	je     0x43b398
  43b326:	jne    0x43b38b
  43b328:	je     0x43b34a
  43b32a:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x646e625f
  43b332:	jae    0x43b3a8
  43b334:	(bad)  
  43b335:	je     0x43b3ac
  43b337:	jae    0x43b35b
  43b339:	and    BYTE PTR [rbx+0x69],dh
  43b33c:	jp     0x43b3a3
  43b33e:	cmp    eax,0x3e223822
  43b343:	or     ah,BYTE PTR [rax]
  43b345:	and    BYTE PTR [rax],ah
  43b347:	and    BYTE PTR [rsi+riz*2],bh
  43b34a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b351:	ins    DWORD PTR es:[rdi],dx
  43b352:	gs cmp eax,0x65646222
  43b358:	and    ah,BYTE PTR [rax]
  43b35a:	jae    0x43b3d0
  43b35c:	(bad)  
  43b35d:	jb     0x43b3d3
  43b35f:	cmp    eax,0x20223222
  43b364:	outs   dx,BYTE PTR gs:[rsi]
  43b366:	fs cmp eax,0x22333622
  43b36c:	(bad)  
  43b36d:	or     ah,BYTE PTR ds:[rax]
  43b370:	and    BYTE PTR [rax],ah
  43b372:	and    BYTE PTR [rsi+riz*2],bh
  43b375:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b37c:	ins    DWORD PTR es:[rdi],dx
  43b37d:	gs cmp eax,0x72726522
  43b383:	outs   dx,DWORD PTR ds:[rsi]
  43b384:	jb     0x43b3a8
  43b386:	and    BYTE PTR [rbx+0x74],dh
  43b389:	(bad)  
  43b38a:	jb     0x43b400
  43b38c:	cmp    eax,0x20223022
  43b391:	outs   dx,BYTE PTR gs:[rsi]
  43b393:	fs cmp eax,0x2f223122
  43b399:	or     ah,BYTE PTR ds:[rax]
  43b39c:	and    BYTE PTR [rdi+rbp*1],bh
  43b39f:	jae    0x43b415
  43b3a1:	jb     0x43b418
  43b3a3:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  43b3a7:	or     ah,BYTE PTR [rax]
  43b3a9:	and    BYTE PTR [rsi*2+0x6e6f696e],bh
  43b3b0:	and    BYTE PTR [rcx+0x64],ch
  43b3b3:	cmp    eax,0x61747322
  43b3b8:	je     0x43b42f
  43b3ba:	jae    0x43b3de
  43b3bc:	or     ah,BYTE PTR ds:[rax]
  43b3bf:	and    BYTE PTR [rax],ah
  43b3c1:	and    BYTE PTR [rsi+riz*2],bh
  43b3c4:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b3cb:	ins    DWORD PTR es:[rdi],dx
  43b3cc:	gs cmp eax,0x77617222
  43b3d2:	and    ah,BYTE PTR [rax]
  43b3d4:	je     0x43b44f
  43b3d6:	jo     0x43b43d
  43b3d8:	cmp    eax,0x74616422
  43b3dd:	(bad)  
  43b3de:	pop    rdi
  43b3df:	jo     0x43b455
  43b3e1:	jb     0x43b405
  43b3e3:	(bad)  
  43b3e4:	or     ah,BYTE PTR ds:[rax]
  43b3e7:	and    BYTE PTR [rax],ah
  43b3e9:	and    BYTE PTR [rsi+riz*2],bh
  43b3ec:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b3f3:	ins    DWORD PTR es:[rdi],dx
  43b3f4:	gs cmp eax,0x61747322
  43b3fa:	je     0x43b471
  43b3fc:	jae    0x43b420
  43b3fe:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b402:	gs cmp eax,0x6e625f22
  43b408:	fs jae 0x43b47f
  43b40b:	(bad)  
  43b40c:	je     0x43b483
  43b40e:	jae    0x43b432
  43b410:	(bad)  
  43b411:	or     ah,BYTE PTR ds:[rax]
  43b414:	and    BYTE PTR [rdi+rbp*1],bh
  43b417:	jne    0x43b487
  43b419:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0a3e
  43b420:	and    BYTE PTR [rbx+rsi*2],bh
  43b423:	je     0x43b497
  43b425:	jne    0x43b48a
  43b427:	je     0x43b449
  43b429:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x646e625f
  43b431:	movsxd esp,DWORD PTR [rsi+0x67]
  43b434:	jne    0x43b458
  43b436:	and    BYTE PTR [rbx+0x69],dh
  43b439:	jp     0x43b4a0
  43b43b:	cmp    eax,0x3e223822
  43b440:	or     ah,BYTE PTR [rax]
  43b442:	and    BYTE PTR [rax],ah
  43b444:	and    BYTE PTR [rsi+riz*2],bh
  43b447:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b44e:	ins    DWORD PTR es:[rdi],dx
  43b44f:	gs cmp eax,0x73616222
  43b455:	and    ah,BYTE PTR gs:[rax]
  43b458:	jae    0x43b4ce
  43b45a:	(bad)  
  43b45b:	jb     0x43b4d1
  43b45d:	cmp    eax,0x22323122
  43b462:	and    BYTE PTR [rbp+0x6e],ah
  43b465:	fs cmp eax,0x22333622
  43b46b:	(bad)  
  43b46c:	or     ah,BYTE PTR ds:[rax]
  43b46f:	and    BYTE PTR [rax],ah
  43b471:	and    BYTE PTR [rsi+riz*2],bh
  43b474:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b47b:	ins    DWORD PTR es:[rdi],dx
  43b47c:	gs cmp eax,0x73657222
  43b482:	gs jb  0x43b4fb
  43b485:	gs and ah,BYTE PTR fs:[rax]
  43b489:	jae    0x43b4ff
  43b48b:	(bad)  
  43b48c:	jb     0x43b502
  43b48e:	cmp    eax,0x20223222
  43b493:	outs   dx,BYTE PTR gs:[rsi]
  43b495:	fs cmp eax,0x22313122
  43b49b:	(bad)  
  43b49c:	or     ah,BYTE PTR ds:[rax]
  43b49f:	and    BYTE PTR [rax],ah
  43b4a1:	and    BYTE PTR [rcx+riz*1],bh
  43b4a4:	sub    eax,0x7845202d
  43b4a9:	jo     0x43b517
  43b4ab:	imul   esp,DWORD PTR [rbx+0x69],0x20796c74
  43b4b2:	jae    0x43b519
  43b4b4:	je     0x43b4d6
  43b4b6:	je     0x43b520
  43b4b8:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  43b4bd:	and    BYTE PTR gs:[rax+0x65],ch
  43b4c1:	jb     0x43b528
  43b4c3:	sub    al,0x20
  43b4c5:	outs   dx,DWORD PTR ds:[rsi]
  43b4c6:	je     0x43b530
  43b4c8:	gs jb  0x43b542
  43b4cb:	imul   esi,DWORD PTR [rbx+0x65],0x20746920
  43b4d2:	fs gs data16 (bad) 
  43b4d6:	jne    0x43b544
  43b4d8:	je     0x43b54d
  43b4da:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43b4de:	(bad)  
  43b4df:	outs   dx,DWORD PTR ds:[rsi]
  43b4e0:	outs   dx,DWORD PTR ds:[rsi]
  43b4e1:	ins    BYTE PTR es:[rdi],dx
  43b4e2:	and    BYTE PTR cs:[rax],ah
  43b4e5:	sub    eax,0x200a3e2d
  43b4ea:	and    BYTE PTR [rax],ah
  43b4ec:	and    BYTE PTR [rsi+riz*2],bh
  43b4ef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b4f6:	ins    DWORD PTR es:[rdi],dx
  43b4f7:	gs cmp eax,0x65727022
  43b4fd:	jae    0x43b564
  43b4ff:	jb     0x43b577
  43b501:	gs and ah,BYTE PTR fs:[rax]
  43b505:	jae    0x43b57b
  43b507:	(bad)  
  43b508:	jb     0x43b57e
  43b50a:	cmp    eax,0x20223122
  43b50f:	outs   dx,BYTE PTR gs:[rsi]
  43b511:	fs cmp eax,0x20223122
  43b517:	je     0x43b592
  43b519:	jo     0x43b580
  43b51b:	cmp    eax,0x6e697522
  43b520:	je     0x43b558
  43b522:	xor    al,0x22
  43b524:	(bad)  
  43b525:	or     ah,BYTE PTR ds:[rax]
  43b528:	and    BYTE PTR [rax],ah
  43b52a:	and    BYTE PTR [rsi+riz*2],bh
  43b52d:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b534:	ins    DWORD PTR es:[rdi],dx
  43b535:	gs cmp eax,0x616e6522
  43b53b:	(bad)  
  43b53c:	ins    BYTE PTR es:[rdi],dx
  43b53d:	gs and ah,BYTE PTR fs:[rax]
  43b541:	jae    0x43b5b7
  43b543:	(bad)  
  43b544:	jb     0x43b5ba
  43b546:	cmp    eax,0x20223022
  43b54b:	outs   dx,BYTE PTR gs:[rsi]
  43b54d:	fs cmp eax,0x20223022
  43b553:	je     0x43b5ce
  43b555:	jo     0x43b5bc
  43b557:	cmp    eax,0x6e697522
  43b55c:	je     0x43b594
  43b55e:	xor    al,0x22
  43b560:	(bad)  
  43b561:	or     ah,BYTE PTR ds:[rax]
  43b564:	and    BYTE PTR [rdi+rbp*1],bh
  43b567:	jae    0x43b5dd
  43b569:	jb     0x43b5e0
  43b56b:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  43b56f:	or     ah,BYTE PTR [rax]
  43b571:	and    BYTE PTR [rax],ah
  43b573:	cmp    al,0x75
  43b575:	outs   dx,BYTE PTR ds:[rsi]
  43b576:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d646920
  43b57d:	and    ah,BYTE PTR [rbx+0x66]
  43b580:	addr32 jne 0x43b5a5
  43b583:	or     ah,BYTE PTR ds:[rax]
  43b586:	and    BYTE PTR [rax],ah
  43b588:	and    BYTE PTR [rsi+riz*2],bh
  43b58b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b592:	ins    DWORD PTR es:[rdi],dx
  43b593:	gs cmp eax,0x77617222
  43b599:	and    ah,BYTE PTR [rax]
  43b59b:	je     0x43b616
  43b59d:	jo     0x43b604
  43b59f:	cmp    eax,0x74616422
  43b5a4:	(bad)  
  43b5a5:	pop    rdi
  43b5a6:	jo     0x43b61c
  43b5a8:	jb     0x43b5cc
  43b5aa:	(bad)  
  43b5ab:	or     ah,BYTE PTR ds:[rax]
  43b5ae:	and    BYTE PTR [rax],ah
  43b5b0:	and    BYTE PTR [rsi+riz*2],bh
  43b5b3:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b5ba:	ins    DWORD PTR es:[rdi],dx
  43b5bb:	gs cmp eax,0x6e6f6322
  43b5c1:	imul   sp,WORD PTR [rdi+0x22],0x7420
  43b5c7:	jns    0x43b639
  43b5c9:	gs cmp eax,0x6e625f22
  43b5cf:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  43b5d3:	jne    0x43b5f7
  43b5d5:	(bad)  
  43b5d6:	or     ah,BYTE PTR ds:[rax]
  43b5d9:	and    BYTE PTR [rdi+rbp*1],bh
  43b5dc:	jne    0x43b64c
  43b5de:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0a3e
  43b5e5:	and    BYTE PTR [rdx+rsi*2],bh
  43b5e8:	and    BYTE PTR gs:[esi+0x61],ch
  43b5ed:	ins    DWORD PTR es:[rdi],dx
  43b5ee:	gs cmp eax,0x646e6222
  43b5f4:	xor    BYTE PTR [rdx+0x61],dh
  43b5f7:	ja     0x43b61b
  43b5f9:	and    BYTE PTR [rdx+0x69],ah
  43b5fc:	je     0x43b671
  43b5fe:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43b605:	cmp    BYTE PTR [rdx],ah
  43b607:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b60b:	gs cmp eax,0x31726222
  43b611:	xor    bh,BYTE PTR [rax]
  43b613:	and    ch,BYTE PTR [rdi]
  43b615:	or     ah,BYTE PTR ds:[rax]
  43b618:	and    BYTE PTR [rdx+rsi*2],bh
  43b61b:	and    BYTE PTR gs:[esi+0x61],ch
  43b620:	ins    DWORD PTR es:[rdi],dx
  43b621:	gs cmp eax,0x646e6222
  43b627:	xor    DWORD PTR [rdx+0x61],esi
  43b62a:	ja     0x43b64e
  43b62c:	and    BYTE PTR [rdx+0x69],ah
  43b62f:	je     0x43b6a4
  43b631:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43b638:	cmp    BYTE PTR [rdx],ah
  43b63a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b63e:	gs cmp eax,0x31726222
  43b644:	xor    bh,BYTE PTR [rax]
  43b646:	and    ch,BYTE PTR [rdi]
  43b648:	or     ah,BYTE PTR ds:[rax]
  43b64b:	and    BYTE PTR [rdx+rsi*2],bh
  43b64e:	and    BYTE PTR gs:[esi+0x61],ch
  43b653:	ins    DWORD PTR es:[rdi],dx
  43b654:	gs cmp eax,0x646e6222
  43b65a:	xor    dh,BYTE PTR [rdx+0x61]
  43b65d:	ja     0x43b681
  43b65f:	and    BYTE PTR [rdx+0x69],ah
  43b662:	je     0x43b6d7
  43b664:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43b66b:	cmp    BYTE PTR [rdx],ah
  43b66d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b671:	gs cmp eax,0x31726222
  43b677:	xor    bh,BYTE PTR [rax]
  43b679:	and    ch,BYTE PTR [rdi]
  43b67b:	or     ah,BYTE PTR ds:[rax]
  43b67e:	and    BYTE PTR [rdx+rsi*2],bh
  43b681:	and    BYTE PTR gs:[esi+0x61],ch
  43b686:	ins    DWORD PTR es:[rdi],dx
  43b687:	gs cmp eax,0x646e6222
  43b68d:	xor    esi,DWORD PTR [rdx+0x61]
  43b690:	ja     0x43b6b4
  43b692:	and    BYTE PTR [rdx+0x69],ah
  43b695:	je     0x43b70a
  43b697:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43b69e:	cmp    BYTE PTR [rdx],ah
  43b6a0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b6a4:	gs cmp eax,0x31726222
  43b6aa:	xor    bh,BYTE PTR [rax]
  43b6ac:	and    ch,BYTE PTR [rdi]
  43b6ae:	or     ah,BYTE PTR ds:[rax]
  43b6b1:	and    BYTE PTR [rdx+rsi*2],bh
  43b6b4:	and    BYTE PTR gs:[esi+0x61],ch
  43b6b9:	ins    DWORD PTR es:[rdi],dx
  43b6ba:	gs cmp eax,0x646e6222
  43b6c0:	movsxd esp,DWORD PTR [rsi+0x67]
  43b6c3:	jne    0x43b6e7
  43b6c5:	and    BYTE PTR [rax],ah
  43b6c7:	and    BYTE PTR [rax],ah
  43b6c9:	(bad)  
  43b6ca:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43b6d2:	ss xor al,0x22
  43b6d5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b6d9:	gs cmp eax,0x67666322
  43b6df:	jne    0x43b703
  43b6e1:	(bad)  
  43b6e2:	or     ah,BYTE PTR ds:[rax]
  43b6e5:	and    BYTE PTR [rdx+rsi*2],bh
  43b6e8:	and    BYTE PTR gs:[esi+0x61],ch
  43b6ed:	ins    DWORD PTR es:[rdi],dx
  43b6ee:	gs cmp eax,0x646e6222
  43b6f4:	jae    0x43b76a
  43b6f6:	(bad)  
  43b6f7:	je     0x43b76e
  43b6f9:	jae    0x43b71d
  43b6fb:	and    BYTE PTR [rax],ah
  43b6fd:	(bad)  
  43b6fe:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43b706:	ss xor al,0x22
  43b709:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b70d:	gs cmp eax,0x61747322
  43b713:	je     0x43b78a
  43b715:	jae    0x43b739
  43b717:	(bad)  
  43b718:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43b71c:	data16 gs (bad) 
  43b71f:	je     0x43b796
  43b721:	jb     0x43b788
  43b723:	or     al,BYTE PTR ds:[rax]
	...
  43b73e:	add    BYTE PTR [rax],al
  43b740:	cmp    al,0x3f
  43b742:	js     0x43b7b1
  43b744:	ins    BYTE PTR es:[rdi],dx
  43b745:	and    BYTE PTR [rsi+0x65],dh
  43b748:	jb     0x43b7bd
  43b74a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43b751:	xor    BYTE PTR [rdx],ah
  43b753:	(bad)  
  43b754:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43b758:	sub    eax,0x6f43202d
  43b75d:	jo     0x43b7d8
  43b75f:	jb     0x43b7ca
  43b761:	addr32 push 0x43282074
  43b767:	sub    DWORD PTR [rax],esp
  43b769:	xor    dh,BYTE PTR [rax]
  43b76b:	xor    DWORD PTR [rdx],esi
  43b76d:	sub    eax,0x37313032
  43b772:	and    BYTE PTR [rsi+0x72],al
  43b775:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43b77a:	data16 je 0x43b7f4
  43b77d:	(bad)  
  43b77e:	jb     0x43b7e5
  43b780:	and    BYTE PTR [rsi+0x6f],al
  43b783:	jne    0x43b7f3
  43b785:	fs (bad) 
  43b787:	je     0x43b7f2
  43b789:	outs   dx,DWORD PTR ds:[rsi]
  43b78a:	outs   dx,BYTE PTR ds:[rsi]
  43b78b:	sub    al,0x20
  43b78d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43b78f:	movsxd ebp,DWORD PTR [rsi]
  43b791:	or     cl,BYTE PTR [rdx]
  43b793:	and    BYTE PTR [rax],ah
  43b795:	and    BYTE PTR [rax],ah
  43b797:	and    BYTE PTR [rbx+0x6f],al
  43b79a:	jo     0x43b815
  43b79c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43b7a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43b7a7:	je     0x43b81b
  43b7a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43b7b0:	and    BYTE PTR [rdi+0x66],ch
  43b7b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43b7b7:	jae    0x43b7d9
  43b7b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43b7c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43b7c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43b7d0:	outs   dx,DWORD PTR ds:[rsi]
  43b7d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43b7d9:	outs   dx,DWORD PTR ds:[rsi]
  43b7da:	outs   dx,BYTE PTR ds:[rsi]
  43b7db:	sub    al,0xa
  43b7dd:	and    BYTE PTR [rax],ah
  43b7df:	and    BYTE PTR [rax],ah
  43b7e1:	and    BYTE PTR [rcx+0x72],ah
  43b7e4:	and    BYTE PTR gs:[rax+0x65],dh
  43b7e8:	jb     0x43b857
  43b7ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43b7f2:	and    BYTE PTR [rcx+0x6e],ah
  43b7f5:	jns    0x43b817
  43b7f7:	ins    DWORD PTR es:[rdi],dx
  43b7f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43b801:	push   0x2074756f
  43b806:	jb     0x43b877
  43b808:	jns    0x43b86b
  43b80a:	ins    BYTE PTR es:[rdi],dx
  43b80b:	je     0x43b886
  43b80d:	and    BYTE PTR [rax+0x72],dh
  43b810:	outs   dx,DWORD PTR ds:[rsi]
  43b811:	jbe    0x43b87c
  43b813:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43b81a:	and    BYTE PTR [rbx+0x6f],ah
  43b81d:	jo     0x43b898
  43b81f:	jb     0x43b88a
  43b821:	addr32 push 0x20200a74
  43b827:	and    BYTE PTR [rax],ah
  43b829:	and    BYTE PTR [rsi+0x6f],ch
  43b82c:	je     0x43b897
  43b82e:	movsxd esp,DWORD PTR [rbp+0x20]
  43b831:	(bad)  
  43b832:	outs   dx,BYTE PTR ds:[rsi]
  43b833:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43b838:	jae    0x43b85a
  43b83a:	outs   dx,BYTE PTR ds:[rsi]
  43b83b:	outs   dx,DWORD PTR ds:[rsi]
  43b83c:	je     0x43b8a7
  43b83e:	movsxd esp,DWORD PTR [rbp+0x20]
  43b841:	(bad)  
  43b842:	jb     0x43b8a9
  43b844:	and    BYTE PTR [rax+0x72],dh
  43b847:	gs jae 0x43b8af
  43b84a:	jb     0x43b8c2
  43b84c:	gs fs and BYTE PTR cs:[rax],ah
  43b851:	sub    eax,0xa0a3e2d
  43b856:	cmp    al,0x21
  43b858:	rex.R
  43b859:	rex.WRXB
  43b85a:	rex.XB push r12
  43b85c:	pop    rcx
  43b85d:	push   rax
  43b85e:	and    BYTE PTR [r14+0x65],r12b
  43b862:	(bad)  
  43b863:	je     0x43b8da
  43b865:	jb     0x43b8cc
  43b867:	and    BYTE PTR [rbx+0x59],dl
  43b86a:	push   rbx
  43b86b:	push   rsp
  43b86c:	rex.RB
  43b86d:	rex.WRB and BYTE PTR [r10],r12b
  43b870:	addr32 fs (bad) 
  43b873:	sub    eax,0x67726174
  43b878:	gs je  0x43b8a9
  43b87b:	fs je  0x43b8e2
  43b87e:	and    bh,BYTE PTR [rsi]
  43b880:	or     bh,BYTE PTR [rsi+riz*2]
  43b883:	gs (bad) 
  43b885:	je     0x43b8fc
  43b887:	jb     0x43b8ee
  43b889:	and    BYTE PTR [rsi+0x61],ch
  43b88c:	ins    DWORD PTR es:[rdi],dx
  43b88d:	gs cmp eax,0x67726f22
  43b893:	outs   dx,BYTE PTR cs:[esi]
  43b896:	jne    0x43b8c6
  43b898:	addr32 fs (bad) 
  43b89b:	imul   esi,DWORD PTR cs:[rbx],0x632e3638
  43b8a2:	outs   dx,DWORD PTR ds:[rsi]
  43b8a3:	jb     0x43b90a
  43b8a5:	and    bh,BYTE PTR [rsi]
  43b8a7:	or     ah,BYTE PTR [rax]
  43b8a9:	and    BYTE PTR [rsi+riz*2],bh
  43b8ac:	ins    BYTE PTR es:[rdi],dx
  43b8ad:	(bad)  
  43b8ae:	addr32 jae 0x43b8d1
  43b8b1:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x36383369
  43b8b9:	pop    rdi
  43b8ba:	gs data16 ins BYTE PTR es:[rdi],dx
  43b8bd:	(bad)  
  43b8be:	addr32 jae 0x43b8e3
  43b8c1:	and    BYTE PTR [rbx+0x69],dh
  43b8c4:	jp     0x43b92b
  43b8c6:	cmp    eax,0x3e223422
  43b8cb:	or     ah,BYTE PTR [rax]
  43b8cd:	and    BYTE PTR [rax],ah
  43b8cf:	and    BYTE PTR [rsi+riz*2],bh
  43b8d2:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b8d9:	ins    DWORD PTR es:[rdi],dx
  43b8da:	gs cmp eax,0x22464322
  43b8e0:	and    BYTE PTR [rbx+0x74],dh
  43b8e3:	(bad)  
  43b8e4:	jb     0x43b95a
  43b8e6:	cmp    eax,0x20223022
  43b8eb:	outs   dx,BYTE PTR gs:[rsi]
  43b8ed:	fs cmp eax,0x2f223022
  43b8f3:	or     ah,BYTE PTR ds:[rax]
  43b8f6:	and    BYTE PTR [rax],ah
  43b8f8:	and    BYTE PTR [rsi+riz*2],bh
  43b8fb:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b902:	ins    DWORD PTR es:[rdi],dx
  43b903:	gs cmp eax,0x73202222
  43b909:	je     0x43b96c
  43b90b:	jb     0x43b981
  43b90d:	cmp    eax,0x20223122
  43b912:	outs   dx,BYTE PTR gs:[rsi]
  43b914:	fs cmp eax,0x2f223122
  43b91a:	or     ah,BYTE PTR ds:[rax]
  43b91d:	and    BYTE PTR [rax],ah
  43b91f:	and    BYTE PTR [rsi+riz*2],bh
  43b922:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b929:	ins    DWORD PTR es:[rdi],dx
  43b92a:	gs cmp eax,0x22465022
  43b930:	and    BYTE PTR [rbx+0x74],dh
  43b933:	(bad)  
  43b934:	jb     0x43b9aa
  43b936:	cmp    eax,0x20223222
  43b93b:	outs   dx,BYTE PTR gs:[rsi]
  43b93d:	fs cmp eax,0x2f223222
  43b943:	or     ah,BYTE PTR ds:[rax]
  43b946:	and    BYTE PTR [rax],ah
  43b948:	and    BYTE PTR [rsi+riz*2],bh
  43b94b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b952:	ins    DWORD PTR es:[rdi],dx
  43b953:	gs cmp eax,0x22464122
  43b959:	and    BYTE PTR [rbx+0x74],dh
  43b95c:	(bad)  
  43b95d:	jb     0x43b9d3
  43b95f:	cmp    eax,0x20223422
  43b964:	outs   dx,BYTE PTR gs:[rsi]
  43b966:	fs cmp eax,0x2f223422
  43b96c:	or     ah,BYTE PTR ds:[rax]
  43b96f:	and    BYTE PTR [rax],ah
  43b971:	and    BYTE PTR [rsi+riz*2],bh
  43b974:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b97b:	ins    DWORD PTR es:[rdi],dx
  43b97c:	gs cmp eax,0x22465a22
  43b982:	and    BYTE PTR [rbx+0x74],dh
  43b985:	(bad)  
  43b986:	jb     0x43b9fc
  43b988:	cmp    eax,0x20223622
  43b98d:	outs   dx,BYTE PTR gs:[rsi]
  43b98f:	fs cmp eax,0x2f223622
  43b995:	or     ah,BYTE PTR ds:[rax]
  43b998:	and    BYTE PTR [rax],ah
  43b99a:	and    BYTE PTR [rsi+riz*2],bh
  43b99d:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b9a4:	ins    DWORD PTR es:[rdi],dx
  43b9a5:	gs cmp eax,0x22465322
  43b9ab:	and    BYTE PTR [rbx+0x74],dh
  43b9ae:	(bad)  
  43b9af:	jb     0x43ba25
  43b9b1:	cmp    eax,0x20223722
  43b9b6:	outs   dx,BYTE PTR gs:[rsi]
  43b9b8:	fs cmp eax,0x2f223722
  43b9be:	or     ah,BYTE PTR ds:[rax]
  43b9c1:	and    BYTE PTR [rax],ah
  43b9c3:	and    BYTE PTR [rsi+riz*2],bh
  43b9c6:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b9cd:	ins    DWORD PTR es:[rdi],dx
  43b9ce:	gs cmp eax,0x22465422
  43b9d4:	and    BYTE PTR [rbx+0x74],dh
  43b9d7:	(bad)  
  43b9d8:	jb     0x43ba4e
  43b9da:	cmp    eax,0x20223822
  43b9df:	outs   dx,BYTE PTR gs:[rsi]
  43b9e1:	fs cmp eax,0x2f223822
  43b9e7:	or     ah,BYTE PTR ds:[rax]
  43b9ea:	and    BYTE PTR [rax],ah
  43b9ec:	and    BYTE PTR [rsi+riz*2],bh
  43b9ef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43b9f6:	ins    DWORD PTR es:[rdi],dx
  43b9f7:	gs cmp eax,0x22464922
  43b9fd:	and    BYTE PTR [rbx+0x74],dh
  43ba00:	(bad)  
  43ba01:	jb     0x43ba77
  43ba03:	cmp    eax,0x20223922
  43ba08:	outs   dx,BYTE PTR gs:[rsi]
  43ba0a:	fs cmp eax,0x2f223922
  43ba10:	or     ah,BYTE PTR ds:[rax]
  43ba13:	and    BYTE PTR [rax],ah
  43ba15:	and    BYTE PTR [rsi+riz*2],bh
  43ba18:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43ba1f:	ins    DWORD PTR es:[rdi],dx
  43ba20:	gs cmp eax,0x22464422
  43ba26:	and    BYTE PTR [rbx+0x74],dh
  43ba29:	(bad)  
  43ba2a:	jb     0x43baa0
  43ba2c:	cmp    eax,0x22303122
  43ba31:	and    BYTE PTR [rbp+0x6e],ah
  43ba34:	fs cmp eax,0x22303122
  43ba3a:	(bad)  
  43ba3b:	or     ah,BYTE PTR ds:[rax]
  43ba3e:	and    BYTE PTR [rax],ah
  43ba40:	and    BYTE PTR [rsi+riz*2],bh
  43ba43:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43ba4a:	ins    DWORD PTR es:[rdi],dx
  43ba4b:	gs cmp eax,0x22464f22
  43ba51:	and    BYTE PTR [rbx+0x74],dh
  43ba54:	(bad)  
  43ba55:	jb     0x43bacb
  43ba57:	cmp    eax,0x22313122
  43ba5c:	and    BYTE PTR [rbp+0x6e],ah
  43ba5f:	fs cmp eax,0x22313122
  43ba65:	(bad)  
  43ba66:	or     ah,BYTE PTR ds:[rax]
  43ba69:	and    BYTE PTR [rax],ah
  43ba6b:	and    BYTE PTR [rsi+riz*2],bh
  43ba6e:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43ba75:	ins    DWORD PTR es:[rdi],dx
  43ba76:	gs cmp eax,0x22544e22
  43ba7c:	and    BYTE PTR [rbx+0x74],dh
  43ba7f:	(bad)  
  43ba80:	jb     0x43baf6
  43ba82:	cmp    eax,0x22343122
  43ba87:	and    BYTE PTR [rbp+0x6e],ah
  43ba8a:	fs cmp eax,0x22343122
  43ba90:	(bad)  
  43ba91:	or     ah,BYTE PTR ds:[rax]
  43ba94:	and    BYTE PTR [rax],ah
  43ba96:	and    BYTE PTR [rsi+riz*2],bh
  43ba99:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43baa0:	ins    DWORD PTR es:[rdi],dx
  43baa1:	gs cmp eax,0x22465222
  43baa7:	and    BYTE PTR [rbx+0x74],dh
  43baaa:	(bad)  
  43baab:	jb     0x43bb21
  43baad:	cmp    eax,0x22363122
  43bab2:	and    BYTE PTR [rbp+0x6e],ah
  43bab5:	fs cmp eax,0x22363122
  43babb:	(bad)  
  43babc:	or     ah,BYTE PTR ds:[rax]
  43babf:	and    BYTE PTR [rax],ah
  43bac1:	and    BYTE PTR [rsi+riz*2],bh
  43bac4:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43bacb:	ins    DWORD PTR es:[rdi],dx
  43bacc:	gs cmp eax,0x224d5622
  43bad2:	and    BYTE PTR [rbx+0x74],dh
  43bad5:	(bad)  
  43bad6:	jb     0x43bb4c
  43bad8:	cmp    eax,0x22373122
  43badd:	and    BYTE PTR [rbp+0x6e],ah
  43bae0:	fs cmp eax,0x22373122
  43bae6:	(bad)  
  43bae7:	or     ah,BYTE PTR ds:[rax]
  43baea:	and    BYTE PTR [rax],ah
  43baec:	and    BYTE PTR [rsi+riz*2],bh
  43baef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43baf6:	ins    DWORD PTR es:[rdi],dx
  43baf7:	gs cmp eax,0x22434122
  43bafd:	and    BYTE PTR [rbx+0x74],dh
  43bb00:	(bad)  
  43bb01:	jb     0x43bb77
  43bb03:	cmp    eax,0x22383122
  43bb08:	and    BYTE PTR [rbp+0x6e],ah
  43bb0b:	fs cmp eax,0x22383122
  43bb11:	(bad)  
  43bb12:	or     ah,BYTE PTR ds:[rax]
  43bb15:	and    BYTE PTR [rax],ah
  43bb17:	and    BYTE PTR [rsi+riz*2],bh
  43bb1a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43bb21:	ins    DWORD PTR es:[rdi],dx
  43bb22:	gs cmp eax,0x46495622
  43bb28:	and    ah,BYTE PTR [rax]
  43bb2a:	jae    0x43bba0
  43bb2c:	(bad)  
  43bb2d:	jb     0x43bba3
  43bb2f:	cmp    eax,0x22393122
  43bb34:	and    BYTE PTR [rbp+0x6e],ah
  43bb37:	fs cmp eax,0x22393122
  43bb3d:	(bad)  
  43bb3e:	or     ah,BYTE PTR ds:[rax]
  43bb41:	and    BYTE PTR [rax],ah
  43bb43:	and    BYTE PTR [rsi+riz*2],bh
  43bb46:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43bb4d:	ins    DWORD PTR es:[rdi],dx
  43bb4e:	gs cmp eax,0x50495622
  43bb54:	and    ah,BYTE PTR [rax]
  43bb56:	jae    0x43bbcc
  43bb58:	(bad)  
  43bb59:	jb     0x43bbcf
  43bb5b:	cmp    eax,0x22303222
  43bb60:	and    BYTE PTR [rbp+0x6e],ah
  43bb63:	fs cmp eax,0x22303222
  43bb69:	(bad)  
  43bb6a:	or     ah,BYTE PTR ds:[rax]
  43bb6d:	and    BYTE PTR [rax],ah
  43bb6f:	and    BYTE PTR [rsi+riz*2],bh
  43bb72:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43bb79:	ins    DWORD PTR es:[rdi],dx
  43bb7a:	gs cmp eax,0x22444922
  43bb80:	and    BYTE PTR [rbx+0x74],dh
  43bb83:	(bad)  
  43bb84:	jb     0x43bbfa
  43bb86:	cmp    eax,0x22313222
  43bb8b:	and    BYTE PTR [rbp+0x6e],ah
  43bb8e:	fs cmp eax,0x22313222
  43bb94:	(bad)  
  43bb95:	or     ah,BYTE PTR ds:[rax]
  43bb98:	and    BYTE PTR [rdi+rbp*1],bh
  43bb9b:	data16 ins BYTE PTR es:[rdi],dx
  43bb9d:	(bad)  
  43bb9e:	addr32 jae 0x43bbdf
  43bba1:	or     cl,BYTE PTR [rdx]
  43bba3:	and    BYTE PTR [rax],ah
  43bba5:	cmp    al,0x72
  43bba7:	and    BYTE PTR gs:[esi+0x61],ch
  43bbac:	ins    DWORD PTR es:[rdi],dx
  43bbad:	gs cmp eax,0x78617222
  43bbb3:	and    ah,BYTE PTR [rax]
  43bbb5:	(bad)  
  43bbb6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bbbe:	ss xor al,0x22
  43bbc1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bbc5:	gs cmp eax,0x746e6922
  43bbcb:	ss xor al,0x22
  43bbce:	(bad)  
  43bbcf:	or     ah,BYTE PTR ds:[rax]
  43bbd2:	and    BYTE PTR [rdx+rsi*2],bh
  43bbd5:	and    BYTE PTR gs:[esi+0x61],ch
  43bbda:	ins    DWORD PTR es:[rdi],dx
  43bbdb:	gs cmp eax,0x78627222
  43bbe1:	and    ah,BYTE PTR [rax]
  43bbe3:	(bad)  
  43bbe4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bbec:	ss xor al,0x22
  43bbef:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bbf3:	gs cmp eax,0x746e6922
  43bbf9:	ss xor al,0x22
  43bbfc:	(bad)  
  43bbfd:	or     ah,BYTE PTR ds:[rax]
  43bc00:	and    BYTE PTR [rdx+rsi*2],bh
  43bc03:	and    BYTE PTR gs:[esi+0x61],ch
  43bc08:	ins    DWORD PTR es:[rdi],dx
  43bc09:	gs cmp eax,0x78637222
  43bc0f:	and    ah,BYTE PTR [rax]
  43bc11:	(bad)  
  43bc12:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bc1a:	ss xor al,0x22
  43bc1d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bc21:	gs cmp eax,0x746e6922
  43bc27:	ss xor al,0x22
  43bc2a:	(bad)  
  43bc2b:	or     ah,BYTE PTR ds:[rax]
  43bc2e:	and    BYTE PTR [rdx+rsi*2],bh
  43bc31:	and    BYTE PTR gs:[esi+0x61],ch
  43bc36:	ins    DWORD PTR es:[rdi],dx
  43bc37:	gs cmp eax,0x78647222
  43bc3d:	and    ah,BYTE PTR [rax]
  43bc3f:	(bad)  
  43bc40:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bc48:	ss xor al,0x22
  43bc4b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bc4f:	gs cmp eax,0x746e6922
  43bc55:	ss xor al,0x22
  43bc58:	(bad)  
  43bc59:	or     ah,BYTE PTR ds:[rax]
  43bc5c:	and    BYTE PTR [rdx+rsi*2],bh
  43bc5f:	and    BYTE PTR gs:[esi+0x61],ch
  43bc64:	ins    DWORD PTR es:[rdi],dx
  43bc65:	gs cmp eax,0x69737222
  43bc6b:	and    ah,BYTE PTR [rax]
  43bc6d:	(bad)  
  43bc6e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bc76:	ss xor al,0x22
  43bc79:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bc7d:	gs cmp eax,0x746e6922
  43bc83:	ss xor al,0x22
  43bc86:	(bad)  
  43bc87:	or     ah,BYTE PTR ds:[rax]
  43bc8a:	and    BYTE PTR [rdx+rsi*2],bh
  43bc8d:	and    BYTE PTR gs:[esi+0x61],ch
  43bc92:	ins    DWORD PTR es:[rdi],dx
  43bc93:	gs cmp eax,0x69647222
  43bc99:	and    ah,BYTE PTR [rax]
  43bc9b:	(bad)  
  43bc9c:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bca4:	ss xor al,0x22
  43bca7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bcab:	gs cmp eax,0x746e6922
  43bcb1:	ss xor al,0x22
  43bcb4:	(bad)  
  43bcb5:	or     ah,BYTE PTR ds:[rax]
  43bcb8:	and    BYTE PTR [rdx+rsi*2],bh
  43bcbb:	and    BYTE PTR gs:[esi+0x61],ch
  43bcc0:	ins    DWORD PTR es:[rdi],dx
  43bcc1:	gs cmp eax,0x70627222
  43bcc7:	and    ah,BYTE PTR [rax]
  43bcc9:	(bad)  
  43bcca:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bcd2:	ss xor al,0x22
  43bcd5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bcd9:	gs cmp eax,0x746e6922
  43bcdf:	ss xor al,0x22
  43bce2:	(bad)  
  43bce3:	or     ah,BYTE PTR ds:[rax]
  43bce6:	and    BYTE PTR [rdx+rsi*2],bh
  43bce9:	and    BYTE PTR gs:[esi+0x61],ch
  43bcee:	ins    DWORD PTR es:[rdi],dx
  43bcef:	gs cmp eax,0x70737222
  43bcf5:	and    ah,BYTE PTR [rax]
  43bcf7:	(bad)  
  43bcf8:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bd00:	ss xor al,0x22
  43bd03:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bd07:	gs cmp eax,0x746e6922
  43bd0d:	ss xor al,0x22
  43bd10:	(bad)  
  43bd11:	or     ah,BYTE PTR ds:[rax]
  43bd14:	and    BYTE PTR [rdx+rsi*2],bh
  43bd17:	and    BYTE PTR gs:[esi+0x61],ch
  43bd1c:	ins    DWORD PTR es:[rdi],dx
  43bd1d:	gs cmp eax,0x22387222
  43bd23:	and    BYTE PTR [rdx+0x69],ah
  43bd26:	je     0x43bd9b
  43bd28:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43bd2f:	and    ah,BYTE PTR [rax]
  43bd31:	je     0x43bdac
  43bd33:	jo     0x43bd9a
  43bd35:	cmp    eax,0x746e6922
  43bd3a:	ss xor al,0x22
  43bd3d:	(bad)  
  43bd3e:	or     ah,BYTE PTR ds:[rax]
  43bd41:	and    BYTE PTR [rdx+rsi*2],bh
  43bd44:	and    BYTE PTR gs:[esi+0x61],ch
  43bd49:	ins    DWORD PTR es:[rdi],dx
  43bd4a:	gs cmp eax,0x22397222
  43bd50:	and    BYTE PTR [rdx+0x69],ah
  43bd53:	je     0x43bdc8
  43bd55:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43bd5c:	and    ah,BYTE PTR [rax]
  43bd5e:	je     0x43bdd9
  43bd60:	jo     0x43bdc7
  43bd62:	cmp    eax,0x746e6922
  43bd67:	ss xor al,0x22
  43bd6a:	(bad)  
  43bd6b:	or     ah,BYTE PTR ds:[rax]
  43bd6e:	and    BYTE PTR [rdx+rsi*2],bh
  43bd71:	and    BYTE PTR gs:[esi+0x61],ch
  43bd76:	ins    DWORD PTR es:[rdi],dx
  43bd77:	gs cmp eax,0x30317222
  43bd7d:	and    ah,BYTE PTR [rax]
  43bd7f:	(bad)  
  43bd80:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bd88:	ss xor al,0x22
  43bd8b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bd8f:	gs cmp eax,0x746e6922
  43bd95:	ss xor al,0x22
  43bd98:	(bad)  
  43bd99:	or     ah,BYTE PTR ds:[rax]
  43bd9c:	and    BYTE PTR [rdx+rsi*2],bh
  43bd9f:	and    BYTE PTR gs:[esi+0x61],ch
  43bda4:	ins    DWORD PTR es:[rdi],dx
  43bda5:	gs cmp eax,0x31317222
  43bdab:	and    ah,BYTE PTR [rax]
  43bdad:	(bad)  
  43bdae:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bdb6:	ss xor al,0x22
  43bdb9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bdbd:	gs cmp eax,0x746e6922
  43bdc3:	ss xor al,0x22
  43bdc6:	(bad)  
  43bdc7:	or     ah,BYTE PTR ds:[rax]
  43bdca:	and    BYTE PTR [rdx+rsi*2],bh
  43bdcd:	and    BYTE PTR gs:[esi+0x61],ch
  43bdd2:	ins    DWORD PTR es:[rdi],dx
  43bdd3:	gs cmp eax,0x32317222
  43bdd9:	and    ah,BYTE PTR [rax]
  43bddb:	(bad)  
  43bddc:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43bde4:	ss xor al,0x22
  43bde7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bdeb:	gs cmp eax,0x746e6922
  43bdf1:	ss xor al,0x22
  43bdf4:	(bad)  
  43bdf5:	or     ah,BYTE PTR ds:[rax]
  43bdf8:	and    BYTE PTR [rdx+rsi*2],bh
  43bdfb:	and    BYTE PTR gs:[esi+0x61],ch
  43be00:	ins    DWORD PTR es:[rdi],dx
  43be01:	gs cmp eax,0x33317222
  43be07:	and    ah,BYTE PTR [rax]
  43be09:	(bad)  
  43be0a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43be12:	ss xor al,0x22
  43be15:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43be19:	gs cmp eax,0x746e6922
  43be1f:	ss xor al,0x22
  43be22:	(bad)  
  43be23:	or     ah,BYTE PTR ds:[rax]
  43be26:	and    BYTE PTR [rdx+rsi*2],bh
  43be29:	and    BYTE PTR gs:[esi+0x61],ch
  43be2e:	ins    DWORD PTR es:[rdi],dx
  43be2f:	gs cmp eax,0x34317222
  43be35:	and    ah,BYTE PTR [rax]
  43be37:	(bad)  
  43be38:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43be40:	ss xor al,0x22
  43be43:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43be47:	gs cmp eax,0x746e6922
  43be4d:	ss xor al,0x22
  43be50:	(bad)  
  43be51:	or     ah,BYTE PTR ds:[rax]
  43be54:	and    BYTE PTR [rdx+rsi*2],bh
  43be57:	and    BYTE PTR gs:[esi+0x61],ch
  43be5c:	ins    DWORD PTR es:[rdi],dx
  43be5d:	gs cmp eax,0x35317222
  43be63:	and    ah,BYTE PTR [rax]
  43be65:	(bad)  
  43be66:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43be6e:	ss xor al,0x22
  43be71:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43be75:	gs cmp eax,0x746e6922
  43be7b:	ss xor al,0x22
  43be7e:	(bad)  
  43be7f:	or     cl,BYTE PTR ds:[rdx]
  43be82:	and    BYTE PTR [rax],ah
  43be84:	cmp    al,0x72
  43be86:	and    BYTE PTR gs:[esi+0x61],ch
  43be8b:	ins    DWORD PTR es:[rdi],dx
  43be8c:	gs cmp eax,0x70697222
  43be92:	and    ah,BYTE PTR [rax]
  43be94:	(bad)  
  43be95:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43be9d:	ss xor al,0x22
  43bea0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43bea4:	gs cmp eax,0x6e697522
  43beaa:	je     0x43bee2
  43beac:	xor    al,0x22
  43beae:	(bad)  
  43beaf:	or     ah,BYTE PTR ds:[rax]
  43beb2:	and    BYTE PTR [rdx+rsi*2],bh
  43beb5:	and    BYTE PTR gs:[esi+0x61],ch
  43beba:	ins    DWORD PTR es:[rdi],dx
  43bebb:	gs cmp eax,0x6c666522
  43bec1:	(bad)  
  43bec2:	addr32 jae 0x43bee7
  43bec5:	and    BYTE PTR [rdx+0x69],ah
  43bec8:	je     0x43bf3d
  43beca:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bed1:	and    ah,BYTE PTR [rax]
  43bed3:	je     0x43bf4e
  43bed5:	jo     0x43bf3c
  43bed7:	cmp    eax,0x38336922
  43bedc:	ss pop rdi
  43bede:	gs data16 ins BYTE PTR es:[rdi],dx
  43bee1:	(bad)  
  43bee2:	addr32 jae 0x43bf07
  43bee5:	(bad)  
  43bee6:	or     ah,BYTE PTR ds:[rax]
  43bee9:	and    BYTE PTR [rdx+rsi*2],bh
  43beec:	and    BYTE PTR gs:[esi+0x61],ch
  43bef1:	ins    DWORD PTR es:[rdi],dx
  43bef2:	gs cmp eax,0x22736322
  43bef8:	and    BYTE PTR [rdx+0x69],ah
  43befb:	je     0x43bf70
  43befd:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bf04:	and    ah,BYTE PTR [rax]
  43bf06:	je     0x43bf81
  43bf08:	jo     0x43bf6f
  43bf0a:	cmp    eax,0x746e6922
  43bf0f:	xor    esi,DWORD PTR [rdx]
  43bf11:	and    ch,BYTE PTR [rdi]
  43bf13:	or     ah,BYTE PTR ds:[rax]
  43bf16:	and    BYTE PTR [rdx+rsi*2],bh
  43bf19:	and    BYTE PTR gs:[esi+0x61],ch
  43bf1e:	ins    DWORD PTR es:[rdi],dx
  43bf1f:	gs cmp eax,0x22737322
  43bf25:	and    BYTE PTR [rdx+0x69],ah
  43bf28:	je     0x43bf9d
  43bf2a:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bf31:	and    ah,BYTE PTR [rax]
  43bf33:	je     0x43bfae
  43bf35:	jo     0x43bf9c
  43bf37:	cmp    eax,0x746e6922
  43bf3c:	xor    esi,DWORD PTR [rdx]
  43bf3e:	and    ch,BYTE PTR [rdi]
  43bf40:	or     ah,BYTE PTR ds:[rax]
  43bf43:	and    BYTE PTR [rdx+rsi*2],bh
  43bf46:	and    BYTE PTR gs:[esi+0x61],ch
  43bf4b:	ins    DWORD PTR es:[rdi],dx
  43bf4c:	gs cmp eax,0x22736422
  43bf52:	and    BYTE PTR [rdx+0x69],ah
  43bf55:	je     0x43bfca
  43bf57:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bf5e:	and    ah,BYTE PTR [rax]
  43bf60:	je     0x43bfdb
  43bf62:	jo     0x43bfc9
  43bf64:	cmp    eax,0x746e6922
  43bf69:	xor    esi,DWORD PTR [rdx]
  43bf6b:	and    ch,BYTE PTR [rdi]
  43bf6d:	or     ah,BYTE PTR ds:[rax]
  43bf70:	and    BYTE PTR [rdx+rsi*2],bh
  43bf73:	and    BYTE PTR gs:[esi+0x61],ch
  43bf78:	ins    DWORD PTR es:[rdi],dx
  43bf79:	gs cmp eax,0x22736522
  43bf7f:	and    BYTE PTR [rdx+0x69],ah
  43bf82:	je     0x43bff7
  43bf84:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bf8b:	and    ah,BYTE PTR [rax]
  43bf8d:	je     0x43c008
  43bf8f:	jo     0x43bff6
  43bf91:	cmp    eax,0x746e6922
  43bf96:	xor    esi,DWORD PTR [rdx]
  43bf98:	and    ch,BYTE PTR [rdi]
  43bf9a:	or     ah,BYTE PTR ds:[rax]
  43bf9d:	and    BYTE PTR [rdx+rsi*2],bh
  43bfa0:	and    BYTE PTR gs:[esi+0x61],ch
  43bfa5:	ins    DWORD PTR es:[rdi],dx
  43bfa6:	gs cmp eax,0x22736622
  43bfac:	and    BYTE PTR [rdx+0x69],ah
  43bfaf:	je     0x43c024
  43bfb1:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bfb8:	and    ah,BYTE PTR [rax]
  43bfba:	je     0x43c035
  43bfbc:	jo     0x43c023
  43bfbe:	cmp    eax,0x746e6922
  43bfc3:	xor    esi,DWORD PTR [rdx]
  43bfc5:	and    ch,BYTE PTR [rdi]
  43bfc7:	or     ah,BYTE PTR ds:[rax]
  43bfca:	and    BYTE PTR [rdx+rsi*2],bh
  43bfcd:	and    BYTE PTR gs:[esi+0x61],ch
  43bfd2:	ins    DWORD PTR es:[rdi],dx
  43bfd3:	gs cmp eax,0x22736722
  43bfd9:	and    BYTE PTR [rdx+0x69],ah
  43bfdc:	je     0x43c051
  43bfde:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43bfe5:	and    ah,BYTE PTR [rax]
  43bfe7:	je     0x43c062
  43bfe9:	jo     0x43c050
  43bfeb:	cmp    eax,0x746e6922
  43bff0:	xor    esi,DWORD PTR [rdx]
  43bff2:	and    ch,BYTE PTR [rdi]
  43bff4:	or     cl,BYTE PTR ds:[rdx]
  43bff7:	and    BYTE PTR [rax],ah
  43bff9:	cmp    al,0x72
  43bffb:	and    BYTE PTR gs:[esi+0x61],ch
  43c000:	ins    DWORD PTR es:[rdi],dx
  43c001:	gs cmp eax,0x30747322
  43c007:	and    ah,BYTE PTR [rax]
  43c009:	(bad)  
  43c00a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c012:	cmp    BYTE PTR [rax],dh
  43c014:	and    ah,BYTE PTR [rax]
  43c016:	je     0x43c091
  43c018:	jo     0x43c07f
  43c01a:	cmp    eax,0x38336922
  43c01f:	(bad)  
  43c020:	pop    rdi
  43c021:	gs js  0x43c098
  43c024:	and    ch,BYTE PTR [rdi]
  43c026:	or     ah,BYTE PTR ds:[rax]
  43c029:	and    BYTE PTR [rdx+rsi*2],bh
  43c02c:	and    BYTE PTR gs:[esi+0x61],ch
  43c031:	ins    DWORD PTR es:[rdi],dx
  43c032:	gs cmp eax,0x31747322
  43c038:	and    ah,BYTE PTR [rax]
  43c03a:	(bad)  
  43c03b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c043:	cmp    BYTE PTR [rax],dh
  43c045:	and    ah,BYTE PTR [rax]
  43c047:	je     0x43c0c2
  43c049:	jo     0x43c0b0
  43c04b:	cmp    eax,0x38336922
  43c050:	(bad)  
  43c051:	pop    rdi
  43c052:	gs js  0x43c0c9
  43c055:	and    ch,BYTE PTR [rdi]
  43c057:	or     ah,BYTE PTR ds:[rax]
  43c05a:	and    BYTE PTR [rdx+rsi*2],bh
  43c05d:	and    BYTE PTR gs:[esi+0x61],ch
  43c062:	ins    DWORD PTR es:[rdi],dx
  43c063:	gs cmp eax,0x32747322
  43c069:	and    ah,BYTE PTR [rax]
  43c06b:	(bad)  
  43c06c:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c074:	cmp    BYTE PTR [rax],dh
  43c076:	and    ah,BYTE PTR [rax]
  43c078:	je     0x43c0f3
  43c07a:	jo     0x43c0e1
  43c07c:	cmp    eax,0x38336922
  43c081:	(bad)  
  43c082:	pop    rdi
  43c083:	gs js  0x43c0fa
  43c086:	and    ch,BYTE PTR [rdi]
  43c088:	or     ah,BYTE PTR ds:[rax]
  43c08b:	and    BYTE PTR [rdx+rsi*2],bh
  43c08e:	and    BYTE PTR gs:[esi+0x61],ch
  43c093:	ins    DWORD PTR es:[rdi],dx
  43c094:	gs cmp eax,0x33747322
  43c09a:	and    ah,BYTE PTR [rax]
  43c09c:	(bad)  
  43c09d:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c0a5:	cmp    BYTE PTR [rax],dh
  43c0a7:	and    ah,BYTE PTR [rax]
  43c0a9:	je     0x43c124
  43c0ab:	jo     0x43c112
  43c0ad:	cmp    eax,0x38336922
  43c0b2:	(bad)  
  43c0b3:	pop    rdi
  43c0b4:	gs js  0x43c12b
  43c0b7:	and    ch,BYTE PTR [rdi]
  43c0b9:	or     ah,BYTE PTR ds:[rax]
  43c0bc:	and    BYTE PTR [rdx+rsi*2],bh
  43c0bf:	and    BYTE PTR gs:[esi+0x61],ch
  43c0c4:	ins    DWORD PTR es:[rdi],dx
  43c0c5:	gs cmp eax,0x34747322
  43c0cb:	and    ah,BYTE PTR [rax]
  43c0cd:	(bad)  
  43c0ce:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c0d6:	cmp    BYTE PTR [rax],dh
  43c0d8:	and    ah,BYTE PTR [rax]
  43c0da:	je     0x43c155
  43c0dc:	jo     0x43c143
  43c0de:	cmp    eax,0x38336922
  43c0e3:	(bad)  
  43c0e4:	pop    rdi
  43c0e5:	gs js  0x43c15c
  43c0e8:	and    ch,BYTE PTR [rdi]
  43c0ea:	or     ah,BYTE PTR ds:[rax]
  43c0ed:	and    BYTE PTR [rdx+rsi*2],bh
  43c0f0:	and    BYTE PTR gs:[esi+0x61],ch
  43c0f5:	ins    DWORD PTR es:[rdi],dx
  43c0f6:	gs cmp eax,0x35747322
  43c0fc:	and    ah,BYTE PTR [rax]
  43c0fe:	(bad)  
  43c0ff:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c107:	cmp    BYTE PTR [rax],dh
  43c109:	and    ah,BYTE PTR [rax]
  43c10b:	je     0x43c186
  43c10d:	jo     0x43c174
  43c10f:	cmp    eax,0x38336922
  43c114:	(bad)  
  43c115:	pop    rdi
  43c116:	gs js  0x43c18d
  43c119:	and    ch,BYTE PTR [rdi]
  43c11b:	or     ah,BYTE PTR ds:[rax]
  43c11e:	and    BYTE PTR [rdx+rsi*2],bh
  43c121:	and    BYTE PTR gs:[esi+0x61],ch
  43c126:	ins    DWORD PTR es:[rdi],dx
  43c127:	gs cmp eax,0x36747322
  43c12d:	and    ah,BYTE PTR [rax]
  43c12f:	(bad)  
  43c130:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c138:	cmp    BYTE PTR [rax],dh
  43c13a:	and    ah,BYTE PTR [rax]
  43c13c:	je     0x43c1b7
  43c13e:	jo     0x43c1a5
  43c140:	cmp    eax,0x38336922
  43c145:	(bad)  
  43c146:	pop    rdi
  43c147:	gs js  0x43c1be
  43c14a:	and    ch,BYTE PTR [rdi]
  43c14c:	or     ah,BYTE PTR ds:[rax]
  43c14f:	and    BYTE PTR [rdx+rsi*2],bh
  43c152:	and    BYTE PTR gs:[esi+0x61],ch
  43c157:	ins    DWORD PTR es:[rdi],dx
  43c158:	gs cmp eax,0x37747322
  43c15e:	and    ah,BYTE PTR [rax]
  43c160:	(bad)  
  43c161:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c169:	cmp    BYTE PTR [rax],dh
  43c16b:	and    ah,BYTE PTR [rax]
  43c16d:	je     0x43c1e8
  43c16f:	jo     0x43c1d6
  43c171:	cmp    eax,0x38336922
  43c176:	(bad)  
  43c177:	pop    rdi
  43c178:	gs js  0x43c1ef
  43c17b:	and    ch,BYTE PTR [rdi]
  43c17d:	or     cl,BYTE PTR ds:[rdx]
  43c180:	and    BYTE PTR [rax],ah
  43c182:	cmp    al,0x72
  43c184:	and    BYTE PTR gs:[esi+0x61],ch
  43c189:	ins    DWORD PTR es:[rdi],dx
  43c18a:	gs cmp eax,0x74636622
  43c190:	jb     0x43c1fe
  43c192:	and    ah,BYTE PTR [rax]
  43c194:	(bad)  
  43c195:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c19d:	xor    esi,DWORD PTR [rdx]
  43c19f:	and    ah,BYTE PTR [rax]
  43c1a1:	je     0x43c21c
  43c1a3:	jo     0x43c20a
  43c1a5:	cmp    eax,0x746e6922
  43c1aa:	and    ah,BYTE PTR [rax]
  43c1ac:	addr32 jb 0x43c21e
  43c1af:	jne    0x43c221
  43c1b1:	cmp    eax,0x6f6c6622
  43c1b6:	(bad)  
  43c1b7:	je     0x43c1db
  43c1b9:	(bad)  
  43c1ba:	or     ah,BYTE PTR ds:[rax]
  43c1bd:	and    BYTE PTR [rdx+rsi*2],bh
  43c1c0:	and    BYTE PTR gs:[esi+0x61],ch
  43c1c5:	ins    DWORD PTR es:[rdi],dx
  43c1c6:	gs cmp eax,0x74736622
  43c1cc:	(bad)  
  43c1cd:	je     0x43c1f1
  43c1cf:	and    BYTE PTR [rdx+0x69],ah
  43c1d2:	je     0x43c247
  43c1d4:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43c1db:	and    ah,BYTE PTR [rax]
  43c1dd:	je     0x43c258
  43c1df:	jo     0x43c246
  43c1e1:	cmp    eax,0x746e6922
  43c1e6:	and    ah,BYTE PTR [rax]
  43c1e8:	addr32 jb 0x43c25a
  43c1eb:	jne    0x43c25d
  43c1ed:	cmp    eax,0x6f6c6622
  43c1f2:	(bad)  
  43c1f3:	je     0x43c217
  43c1f5:	(bad)  
  43c1f6:	or     ah,BYTE PTR ds:[rax]
  43c1f9:	and    BYTE PTR [rdx+rsi*2],bh
  43c1fc:	and    BYTE PTR gs:[esi+0x61],ch
  43c201:	ins    DWORD PTR es:[rdi],dx
  43c202:	gs cmp eax,0x61746622
  43c208:	and    ah,BYTE PTR [eax]
  43c20b:	(bad)  
  43c20c:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c214:	xor    esi,DWORD PTR [rdx]
  43c216:	and    ah,BYTE PTR [rax]
  43c218:	je     0x43c293
  43c21a:	jo     0x43c281
  43c21c:	cmp    eax,0x746e6922
  43c221:	and    ah,BYTE PTR [rax]
  43c223:	addr32 jb 0x43c295
  43c226:	jne    0x43c298
  43c228:	cmp    eax,0x6f6c6622
  43c22d:	(bad)  
  43c22e:	je     0x43c252
  43c230:	(bad)  
  43c231:	or     ah,BYTE PTR ds:[rax]
  43c234:	and    BYTE PTR [rdx+rsi*2],bh
  43c237:	and    BYTE PTR gs:[esi+0x61],ch
  43c23c:	ins    DWORD PTR es:[rdi],dx
  43c23d:	gs cmp eax,0x73696622
  43c243:	and    ah,BYTE PTR gs:[eax]
  43c247:	(bad)  
  43c248:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c250:	xor    esi,DWORD PTR [rdx]
  43c252:	and    ah,BYTE PTR [rax]
  43c254:	je     0x43c2cf
  43c256:	jo     0x43c2bd
  43c258:	cmp    eax,0x746e6922
  43c25d:	and    ah,BYTE PTR [rax]
  43c25f:	addr32 jb 0x43c2d1
  43c262:	jne    0x43c2d4
  43c264:	cmp    eax,0x6f6c6622
  43c269:	(bad)  
  43c26a:	je     0x43c28e
  43c26c:	(bad)  
  43c26d:	or     ah,BYTE PTR ds:[rax]
  43c270:	and    BYTE PTR [rdx+rsi*2],bh
  43c273:	and    BYTE PTR gs:[esi+0x61],ch
  43c278:	ins    DWORD PTR es:[rdi],dx
  43c279:	gs cmp eax,0x6f696622
  43c27f:	data16 data16 and ah,BYTE PTR [rax]
  43c283:	(bad)  
  43c284:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c28c:	xor    esi,DWORD PTR [rdx]
  43c28e:	and    ah,BYTE PTR [rax]
  43c290:	je     0x43c30b
  43c292:	jo     0x43c2f9
  43c294:	cmp    eax,0x746e6922
  43c299:	and    ah,BYTE PTR [rax]
  43c29b:	addr32 jb 0x43c30d
  43c29e:	jne    0x43c310
  43c2a0:	cmp    eax,0x6f6c6622
  43c2a5:	(bad)  
  43c2a6:	je     0x43c2ca
  43c2a8:	(bad)  
  43c2a9:	or     ah,BYTE PTR ds:[rax]
  43c2ac:	and    BYTE PTR [rdx+rsi*2],bh
  43c2af:	and    BYTE PTR gs:[esi+0x61],ch
  43c2b4:	ins    DWORD PTR es:[rdi],dx
  43c2b5:	gs cmp eax,0x736f6622
  43c2bb:	and    ah,BYTE PTR gs:[eax]
  43c2bf:	(bad)  
  43c2c0:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c2c8:	xor    esi,DWORD PTR [rdx]
  43c2ca:	and    ah,BYTE PTR [rax]
  43c2cc:	je     0x43c347
  43c2ce:	jo     0x43c335
  43c2d0:	cmp    eax,0x746e6922
  43c2d5:	and    ah,BYTE PTR [rax]
  43c2d7:	addr32 jb 0x43c349
  43c2da:	jne    0x43c34c
  43c2dc:	cmp    eax,0x6f6c6622
  43c2e1:	(bad)  
  43c2e2:	je     0x43c306
  43c2e4:	(bad)  
  43c2e5:	or     ah,BYTE PTR ds:[rax]
  43c2e8:	and    BYTE PTR [rdx+rsi*2],bh
  43c2eb:	and    BYTE PTR gs:[esi+0x61],ch
  43c2f0:	ins    DWORD PTR es:[rdi],dx
  43c2f1:	gs cmp eax,0x6f6f6622
  43c2f7:	data16 data16 and ah,BYTE PTR [rax]
  43c2fb:	(bad)  
  43c2fc:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c304:	xor    esi,DWORD PTR [rdx]
  43c306:	and    ah,BYTE PTR [rax]
  43c308:	je     0x43c383
  43c30a:	jo     0x43c371
  43c30c:	cmp    eax,0x746e6922
  43c311:	and    ah,BYTE PTR [rax]
  43c313:	addr32 jb 0x43c385
  43c316:	jne    0x43c388
  43c318:	cmp    eax,0x6f6c6622
  43c31d:	(bad)  
  43c31e:	je     0x43c342
  43c320:	(bad)  
  43c321:	or     ah,BYTE PTR ds:[rax]
  43c324:	and    BYTE PTR [rdx+rsi*2],bh
  43c327:	and    BYTE PTR gs:[esi+0x61],ch
  43c32c:	ins    DWORD PTR es:[rdi],dx
  43c32d:	gs cmp eax,0x706f6622
  43c333:	and    ah,BYTE PTR [rax]
  43c335:	(bad)  
  43c336:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c33e:	xor    esi,DWORD PTR [rdx]
  43c340:	and    ah,BYTE PTR [rax]
  43c342:	je     0x43c3bd
  43c344:	jo     0x43c3ab
  43c346:	cmp    eax,0x746e6922
  43c34b:	and    ah,BYTE PTR [rax]
  43c34d:	addr32 jb 0x43c3bf
  43c350:	jne    0x43c3c2
  43c352:	cmp    eax,0x6f6c6622
  43c357:	(bad)  
  43c358:	je     0x43c37c
  43c35a:	(bad)  
  43c35b:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43c35f:	data16 gs (bad) 
  43c362:	je     0x43c3d9
  43c364:	jb     0x43c3cb
  43c366:	or     al,BYTE PTR ds:[rax]
	...
  43c37d:	add    BYTE PTR [rax],al
  43c37f:	add    BYTE PTR [rdi+rdi*1],bh
  43c382:	js     0x43c3f1
  43c384:	ins    BYTE PTR es:[rdi],dx
  43c385:	and    BYTE PTR [rsi+0x65],dh
  43c388:	jb     0x43c3fd
  43c38a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43c391:	xor    BYTE PTR [rdx],ah
  43c393:	(bad)  
  43c394:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43c398:	sub    eax,0x6f43202d
  43c39d:	jo     0x43c418
  43c39f:	jb     0x43c40a
  43c3a1:	addr32 push 0x43282074
  43c3a7:	sub    DWORD PTR [rax],esp
  43c3a9:	xor    dh,BYTE PTR [rax]
  43c3ab:	xor    DWORD PTR [rbp*1+0x37313032],esi
  43c3b2:	and    BYTE PTR [rsi+0x72],al
  43c3b5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43c3ba:	data16 je 0x43c434
  43c3bd:	(bad)  
  43c3be:	jb     0x43c425
  43c3c0:	and    BYTE PTR [rsi+0x6f],al
  43c3c3:	jne    0x43c433
  43c3c5:	fs (bad) 
  43c3c7:	je     0x43c432
  43c3c9:	outs   dx,DWORD PTR ds:[rsi]
  43c3ca:	outs   dx,BYTE PTR ds:[rsi]
  43c3cb:	sub    al,0x20
  43c3cd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43c3cf:	movsxd ebp,DWORD PTR [rsi]
  43c3d1:	or     cl,BYTE PTR [rdx]
  43c3d3:	and    BYTE PTR [rax],ah
  43c3d5:	and    BYTE PTR [rax],ah
  43c3d7:	and    BYTE PTR [rbx+0x6f],al
  43c3da:	jo     0x43c455
  43c3dc:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43c3e3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43c3e7:	je     0x43c45b
  43c3e9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43c3f0:	and    BYTE PTR [rdi+0x66],ch
  43c3f3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43c3f7:	jae    0x43c419
  43c3f9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43c400:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43c408:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43c410:	outs   dx,DWORD PTR ds:[rsi]
  43c411:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43c419:	outs   dx,DWORD PTR ds:[rsi]
  43c41a:	outs   dx,BYTE PTR ds:[rsi]
  43c41b:	sub    al,0xa
  43c41d:	and    BYTE PTR [rax],ah
  43c41f:	and    BYTE PTR [rax],ah
  43c421:	and    BYTE PTR [rcx+0x72],ah
  43c424:	and    BYTE PTR gs:[rax+0x65],dh
  43c428:	jb     0x43c497
  43c42a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43c432:	and    BYTE PTR [rcx+0x6e],ah
  43c435:	jns    0x43c457
  43c437:	ins    DWORD PTR es:[rdi],dx
  43c438:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43c441:	push   0x2074756f
  43c446:	jb     0x43c4b7
  43c448:	jns    0x43c4ab
  43c44a:	ins    BYTE PTR es:[rdi],dx
  43c44b:	je     0x43c4c6
  43c44d:	and    BYTE PTR [rax+0x72],dh
  43c450:	outs   dx,DWORD PTR ds:[rsi]
  43c451:	jbe    0x43c4bc
  43c453:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43c45a:	and    BYTE PTR [rbx+0x6f],ah
  43c45d:	jo     0x43c4d8
  43c45f:	jb     0x43c4ca
  43c461:	addr32 push 0x20200a74
  43c467:	and    BYTE PTR [rax],ah
  43c469:	and    BYTE PTR [rsi+0x6f],ch
  43c46c:	je     0x43c4d7
  43c46e:	movsxd esp,DWORD PTR [rbp+0x20]
  43c471:	(bad)  
  43c472:	outs   dx,BYTE PTR ds:[rsi]
  43c473:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43c478:	jae    0x43c49a
  43c47a:	outs   dx,BYTE PTR ds:[rsi]
  43c47b:	outs   dx,DWORD PTR ds:[rsi]
  43c47c:	je     0x43c4e7
  43c47e:	movsxd esp,DWORD PTR [rbp+0x20]
  43c481:	(bad)  
  43c482:	jb     0x43c4e9
  43c484:	and    BYTE PTR [rax+0x72],dh
  43c487:	gs jae 0x43c4ef
  43c48a:	jb     0x43c502
  43c48c:	gs fs and BYTE PTR cs:[rax],ah
  43c491:	sub    eax,0xa0a3e2d
  43c496:	cmp    al,0x21
  43c498:	rex.R
  43c499:	rex.WRXB
  43c49a:	rex.XB push r12
  43c49c:	pop    rcx
  43c49d:	push   rax
  43c49e:	and    BYTE PTR [r14+0x65],r12b
  43c4a2:	(bad)  
  43c4a3:	je     0x43c51a
  43c4a5:	jb     0x43c50c
  43c4a7:	and    BYTE PTR [rbx+0x59],dl
  43c4aa:	push   rbx
  43c4ab:	push   rsp
  43c4ac:	rex.RB
  43c4ad:	rex.WRB and BYTE PTR [r10],r12b
  43c4b0:	addr32 fs (bad) 
  43c4b3:	sub    eax,0x67726174
  43c4b8:	gs je  0x43c4e9
  43c4bb:	fs je  0x43c522
  43c4be:	and    bh,BYTE PTR [rsi]
  43c4c0:	or     bh,BYTE PTR [rsi+riz*2]
  43c4c3:	gs (bad) 
  43c4c5:	je     0x43c53c
  43c4c7:	jb     0x43c52e
  43c4c9:	and    BYTE PTR [rsi+0x61],ch
  43c4cc:	ins    DWORD PTR es:[rdi],dx
  43c4cd:	gs cmp eax,0x67726f22
  43c4d3:	outs   dx,BYTE PTR cs:[esi]
  43c4d6:	jne    0x43c506
  43c4d8:	addr32 fs (bad) 
  43c4db:	imul   esi,DWORD PTR cs:[rbx],0x612e3638
  43c4e2:	jbe    0x43c55c
  43c4e4:	xor    eax,0x3e223231
  43c4e9:	or     bh,BYTE PTR [rsi+rsi*2]
  43c4ec:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c4f1:	and    BYTE PTR [rcx+0x64],ch
  43c4f4:	cmp    eax,0x66347622
  43c4f9:	and    ah,BYTE PTR [rax]
  43c4fb:	je     0x43c576
  43c4fd:	jo     0x43c564
  43c4ff:	cmp    eax,0x65656922
  43c504:	gs pop rdi
  43c506:	jae    0x43c571
  43c508:	outs   dx,BYTE PTR ds:[rsi]
  43c509:	ins    BYTE PTR es:[edi],dx
  43c50b:	and    ah,BYTE PTR gs:[rax]
  43c50e:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c511:	outs   dx,BYTE PTR ds:[rsi]
  43c512:	je     0x43c551
  43c514:	and    dh,BYTE PTR [rdx+riz*1]
  43c517:	(bad)  
  43c518:	or     ah,BYTE PTR ds:[rax]
  43c51b:	and    BYTE PTR [rsi+rsi*2],bh
  43c51e:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c523:	and    BYTE PTR [rcx+0x64],ch
  43c526:	cmp    eax,0x64327622
  43c52b:	and    ah,BYTE PTR [rax]
  43c52d:	je     0x43c5a8
  43c52f:	jo     0x43c596
  43c531:	cmp    eax,0x65656922
  43c536:	gs pop rdi
  43c538:	outs   dx,DWORD PTR fs:[rsi]
  43c53a:	jne    0x43c59e
  43c53c:	ins    BYTE PTR es:[rdi],dx
  43c53d:	and    ah,BYTE PTR gs:[rax]
  43c540:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c543:	outs   dx,BYTE PTR ds:[rsi]
  43c544:	je     0x43c583
  43c546:	and    dh,BYTE PTR [rdx]
  43c548:	and    ch,BYTE PTR [rdi]
  43c54a:	or     ah,BYTE PTR ds:[rax]
  43c54d:	and    BYTE PTR [rsi+rsi*2],bh
  43c550:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c555:	and    BYTE PTR [rcx+0x64],ch
  43c558:	cmp    eax,0x36317622
  43c55d:	imul   edi,DWORD PTR [rax],0x79742022
  43c563:	jo     0x43c5ca
  43c565:	cmp    eax,0x746e6922
  43c56a:	cmp    BYTE PTR [rdx],ah
  43c56c:	and    BYTE PTR [rbx+0x6f],ah
  43c56f:	jne    0x43c5df
  43c571:	je     0x43c5b0
  43c573:	and    dh,BYTE PTR [rcx]
  43c575:	and    ch,BYTE PTR ss:[rdi]
  43c578:	or     ah,BYTE PTR ds:[rax]
  43c57b:	and    BYTE PTR [rsi+rsi*2],bh
  43c57e:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c583:	and    BYTE PTR [rcx+0x64],ch
  43c586:	cmp    eax,0x69387622
  43c58b:	xor    DWORD PTR [rsi],esi
  43c58d:	and    ah,BYTE PTR [rax]
  43c58f:	je     0x43c60a
  43c591:	jo     0x43c5f8
  43c593:	cmp    eax,0x746e6922
  43c598:	xor    DWORD PTR [rsi],esi
  43c59a:	and    ah,BYTE PTR [rax]
  43c59c:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c59f:	outs   dx,BYTE PTR ds:[rsi]
  43c5a0:	je     0x43c5df
  43c5a2:	and    bh,BYTE PTR [rax]
  43c5a4:	and    ch,BYTE PTR [rdi]
  43c5a6:	or     ah,BYTE PTR ds:[rax]
  43c5a9:	and    BYTE PTR [rsi+rsi*2],bh
  43c5ac:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c5b1:	and    BYTE PTR [rcx+0x64],ch
  43c5b4:	cmp    eax,0x69347622
  43c5b9:	xor    esi,DWORD PTR [rdx]
  43c5bb:	and    ah,BYTE PTR [rax]
  43c5bd:	je     0x43c638
  43c5bf:	jo     0x43c626
  43c5c1:	cmp    eax,0x746e6922
  43c5c6:	xor    esi,DWORD PTR [rdx]
  43c5c8:	and    ah,BYTE PTR [rax]
  43c5ca:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c5cd:	outs   dx,BYTE PTR ds:[rsi]
  43c5ce:	je     0x43c60d
  43c5d0:	and    dh,BYTE PTR [rdx+riz*1]
  43c5d3:	(bad)  
  43c5d4:	or     ah,BYTE PTR ds:[rax]
  43c5d7:	and    BYTE PTR [rsi+rsi*2],bh
  43c5da:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43c5df:	and    BYTE PTR [rcx+0x64],ch
  43c5e2:	cmp    eax,0x69327622
  43c5e7:	ss xor al,0x22
  43c5ea:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c5ee:	gs cmp eax,0x746e6922
  43c5f4:	ss xor al,0x22
  43c5f7:	and    BYTE PTR [rbx+0x6f],ah
  43c5fa:	jne    0x43c66a
  43c5fc:	je     0x43c63b
  43c5fe:	and    dh,BYTE PTR [rdx]
  43c600:	and    ch,BYTE PTR [rdi]
  43c602:	or     ah,BYTE PTR ds:[rax]
  43c605:	and    BYTE PTR [rsi*2+0x6e6f696e],bh
  43c60c:	and    BYTE PTR [rcx+0x64],ch
  43c60f:	cmp    eax,0x63657622
  43c614:	xor    DWORD PTR [rdx],esi
  43c616:	cmp    BYTE PTR [rdx],ah
  43c618:	or     ah,BYTE PTR ds:[rax]
  43c61b:	and    BYTE PTR [rax],ah
  43c61d:	and    BYTE PTR [rsi+riz*2],bh
  43c620:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c627:	ins    DWORD PTR es:[rdi],dx
  43c628:	gs cmp eax,0x5f347622
  43c62e:	data16 ins BYTE PTR es:[rdi],dx
  43c630:	outs   dx,DWORD PTR ds:[rsi]
  43c631:	(bad)  
  43c632:	je     0x43c656
  43c634:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c638:	gs cmp eax,0x66347622
  43c63e:	and    ch,BYTE PTR [rdi]
  43c640:	or     ah,BYTE PTR ds:[rax]
  43c643:	and    BYTE PTR [rax],ah
  43c645:	and    BYTE PTR [rsi+riz*2],bh
  43c648:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c64f:	ins    DWORD PTR es:[rdi],dx
  43c650:	gs cmp eax,0x5f327622
  43c656:	outs   dx,DWORD PTR fs:[rsi]
  43c658:	jne    0x43c6bc
  43c65a:	ins    BYTE PTR es:[rdi],dx
  43c65b:	and    ah,BYTE PTR gs:[rax]
  43c65e:	je     0x43c6d9
  43c660:	jo     0x43c6c7
  43c662:	cmp    eax,0x64327622
  43c667:	and    ch,BYTE PTR [rdi]
  43c669:	or     ah,BYTE PTR ds:[rax]
  43c66c:	and    BYTE PTR [rax],ah
  43c66e:	and    BYTE PTR [rsi+riz*2],bh
  43c671:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c678:	ins    DWORD PTR es:[rdi],dx
  43c679:	gs cmp eax,0x36317622
  43c67f:	pop    rdi
  43c680:	imul   ebp,DWORD PTR [rsi+0x74],0x74202238
  43c687:	jns    0x43c6f9
  43c689:	gs cmp eax,0x36317622
  43c68f:	imul   edi,DWORD PTR [rax],0xa3e2f22
  43c695:	and    BYTE PTR [rax],ah
  43c697:	and    BYTE PTR [rax],ah
  43c699:	cmp    al,0x66
  43c69b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c6a2:	ins    DWORD PTR es:[rdi],dx
  43c6a3:	gs cmp eax,0x5f387622
  43c6a9:	imul   ebp,DWORD PTR [rsi+0x74],0x20223631
  43c6b0:	je     0x43c72b
  43c6b2:	jo     0x43c719
  43c6b4:	cmp    eax,0x69387622
  43c6b9:	xor    DWORD PTR [rsi],esi
  43c6bb:	and    ch,BYTE PTR [rdi]
  43c6bd:	or     ah,BYTE PTR ds:[rax]
  43c6c0:	and    BYTE PTR [rax],ah
  43c6c2:	and    BYTE PTR [rsi+riz*2],bh
  43c6c5:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c6cc:	ins    DWORD PTR es:[rdi],dx
  43c6cd:	gs cmp eax,0x5f347622
  43c6d3:	imul   ebp,DWORD PTR [rsi+0x74],0x20223233
  43c6da:	je     0x43c755
  43c6dc:	jo     0x43c743
  43c6de:	cmp    eax,0x69347622
  43c6e3:	xor    esi,DWORD PTR [rdx]
  43c6e5:	and    ch,BYTE PTR [rdi]
  43c6e7:	or     ah,BYTE PTR ds:[rax]
  43c6ea:	and    BYTE PTR [rax],ah
  43c6ec:	and    BYTE PTR [rsi+riz*2],bh
  43c6ef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c6f6:	ins    DWORD PTR es:[rdi],dx
  43c6f7:	gs cmp eax,0x5f327622
  43c6fd:	imul   ebp,DWORD PTR [rsi+0x74],0x20223436
  43c704:	je     0x43c77f
  43c706:	jo     0x43c76d
  43c708:	cmp    eax,0x69327622
  43c70d:	ss xor al,0x22
  43c710:	(bad)  
  43c711:	or     ah,BYTE PTR ds:[rax]
  43c714:	and    BYTE PTR [rax],ah
  43c716:	and    BYTE PTR [rsi+riz*2],bh
  43c719:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43c720:	ins    DWORD PTR es:[rdi],dx
  43c721:	gs cmp eax,0x6e697522
  43c727:	je     0x43c75a
  43c729:	xor    bh,BYTE PTR [rax]
  43c72b:	and    ah,BYTE PTR [rax]
  43c72d:	je     0x43c7a8
  43c72f:	jo     0x43c796
  43c731:	cmp    eax,0x6e697522
  43c736:	je     0x43c769
  43c738:	xor    bh,BYTE PTR [rax]
  43c73a:	and    ch,BYTE PTR [rdi]
  43c73c:	or     ah,BYTE PTR ds:[rax]
  43c73f:	and    BYTE PTR [rdi+rbp*1],bh
  43c742:	jne    0x43c7b2
  43c744:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a3e
  43c74b:	cmp    al,0x72
  43c74d:	and    BYTE PTR gs:[esi+0x61],ch
  43c752:	ins    DWORD PTR es:[rdi],dx
  43c753:	gs cmp eax,0x6d6d7822
  43c759:	xor    DWORD PTR [rsi],esi
  43c75b:	and    ah,BYTE PTR [rax]
  43c75d:	(bad)  
  43c75e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c766:	xor    DWORD PTR [rdx],esi
  43c768:	cmp    BYTE PTR [rdx],ah
  43c76a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c76e:	gs cmp eax,0x63657622
  43c774:	xor    DWORD PTR [rdx],esi
  43c776:	cmp    BYTE PTR [rdx],ah
  43c778:	(bad)  
  43c779:	or     ah,BYTE PTR ds:[rax]
  43c77c:	and    BYTE PTR [rdx+rsi*2],bh
  43c77f:	and    BYTE PTR gs:[esi+0x61],ch
  43c784:	ins    DWORD PTR es:[rdi],dx
  43c785:	gs cmp eax,0x6d6d7822
  43c78b:	xor    DWORD PTR [rdi],esi
  43c78d:	and    ah,BYTE PTR [rax]
  43c78f:	(bad)  
  43c790:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c798:	xor    DWORD PTR [rdx],esi
  43c79a:	cmp    BYTE PTR [rdx],ah
  43c79c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c7a0:	gs cmp eax,0x63657622
  43c7a6:	xor    DWORD PTR [rdx],esi
  43c7a8:	cmp    BYTE PTR [rdx],ah
  43c7aa:	(bad)  
  43c7ab:	or     ah,BYTE PTR ds:[rax]
  43c7ae:	and    BYTE PTR [rdx+rsi*2],bh
  43c7b1:	and    BYTE PTR gs:[esi+0x61],ch
  43c7b6:	ins    DWORD PTR es:[rdi],dx
  43c7b7:	gs cmp eax,0x6d6d7822
  43c7bd:	xor    DWORD PTR [rax],edi
  43c7bf:	and    ah,BYTE PTR [rax]
  43c7c1:	(bad)  
  43c7c2:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c7ca:	xor    DWORD PTR [rdx],esi
  43c7cc:	cmp    BYTE PTR [rdx],ah
  43c7ce:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c7d2:	gs cmp eax,0x63657622
  43c7d8:	xor    DWORD PTR [rdx],esi
  43c7da:	cmp    BYTE PTR [rdx],ah
  43c7dc:	(bad)  
  43c7dd:	or     ah,BYTE PTR ds:[rax]
  43c7e0:	and    BYTE PTR [rdx+rsi*2],bh
  43c7e3:	and    BYTE PTR gs:[esi+0x61],ch
  43c7e8:	ins    DWORD PTR es:[rdi],dx
  43c7e9:	gs cmp eax,0x6d6d7822
  43c7ef:	xor    DWORD PTR [rcx],edi
  43c7f1:	and    ah,BYTE PTR [rax]
  43c7f3:	(bad)  
  43c7f4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c7fc:	xor    DWORD PTR [rdx],esi
  43c7fe:	cmp    BYTE PTR [rdx],ah
  43c800:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c804:	gs cmp eax,0x63657622
  43c80a:	xor    DWORD PTR [rdx],esi
  43c80c:	cmp    BYTE PTR [rdx],ah
  43c80e:	(bad)  
  43c80f:	or     ah,BYTE PTR ds:[rax]
  43c812:	and    BYTE PTR [rdx+rsi*2],bh
  43c815:	and    BYTE PTR gs:[esi+0x61],ch
  43c81a:	ins    DWORD PTR es:[rdi],dx
  43c81b:	gs cmp eax,0x6d6d7822
  43c821:	xor    dh,BYTE PTR [rax]
  43c823:	and    ah,BYTE PTR [rax]
  43c825:	(bad)  
  43c826:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c82e:	xor    DWORD PTR [rdx],esi
  43c830:	cmp    BYTE PTR [rdx],ah
  43c832:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c836:	gs cmp eax,0x63657622
  43c83c:	xor    DWORD PTR [rdx],esi
  43c83e:	cmp    BYTE PTR [rdx],ah
  43c840:	(bad)  
  43c841:	or     ah,BYTE PTR ds:[rax]
  43c844:	and    BYTE PTR [rdx+rsi*2],bh
  43c847:	and    BYTE PTR gs:[esi+0x61],ch
  43c84c:	ins    DWORD PTR es:[rdi],dx
  43c84d:	gs cmp eax,0x6d6d7822
  43c853:	xor    dh,BYTE PTR [rcx]
  43c855:	and    ah,BYTE PTR [rax]
  43c857:	(bad)  
  43c858:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c860:	xor    DWORD PTR [rdx],esi
  43c862:	cmp    BYTE PTR [rdx],ah
  43c864:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c868:	gs cmp eax,0x63657622
  43c86e:	xor    DWORD PTR [rdx],esi
  43c870:	cmp    BYTE PTR [rdx],ah
  43c872:	(bad)  
  43c873:	or     ah,BYTE PTR ds:[rax]
  43c876:	and    BYTE PTR [rdx+rsi*2],bh
  43c879:	and    BYTE PTR gs:[esi+0x61],ch
  43c87e:	ins    DWORD PTR es:[rdi],dx
  43c87f:	gs cmp eax,0x6d6d7822
  43c885:	xor    dh,BYTE PTR [rdx]
  43c887:	and    ah,BYTE PTR [rax]
  43c889:	(bad)  
  43c88a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c892:	xor    DWORD PTR [rdx],esi
  43c894:	cmp    BYTE PTR [rdx],ah
  43c896:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c89a:	gs cmp eax,0x63657622
  43c8a0:	xor    DWORD PTR [rdx],esi
  43c8a2:	cmp    BYTE PTR [rdx],ah
  43c8a4:	(bad)  
  43c8a5:	or     ah,BYTE PTR ds:[rax]
  43c8a8:	and    BYTE PTR [rdx+rsi*2],bh
  43c8ab:	and    BYTE PTR gs:[esi+0x61],ch
  43c8b0:	ins    DWORD PTR es:[rdi],dx
  43c8b1:	gs cmp eax,0x6d6d7822
  43c8b7:	xor    dh,BYTE PTR [rbx]
  43c8b9:	and    ah,BYTE PTR [rax]
  43c8bb:	(bad)  
  43c8bc:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c8c4:	xor    DWORD PTR [rdx],esi
  43c8c6:	cmp    BYTE PTR [rdx],ah
  43c8c8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c8cc:	gs cmp eax,0x63657622
  43c8d2:	xor    DWORD PTR [rdx],esi
  43c8d4:	cmp    BYTE PTR [rdx],ah
  43c8d6:	(bad)  
  43c8d7:	or     ah,BYTE PTR ds:[rax]
  43c8da:	and    BYTE PTR [rdx+rsi*2],bh
  43c8dd:	and    BYTE PTR gs:[esi+0x61],ch
  43c8e2:	ins    DWORD PTR es:[rdi],dx
  43c8e3:	gs cmp eax,0x6d6d7822
  43c8e9:	xor    dh,BYTE PTR [rdx+riz*1]
  43c8ec:	and    BYTE PTR [rdx+0x69],ah
  43c8ef:	je     0x43c964
  43c8f1:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43c8f8:	cmp    BYTE PTR [rdx],ah
  43c8fa:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c8fe:	gs cmp eax,0x63657622
  43c904:	xor    DWORD PTR [rdx],esi
  43c906:	cmp    BYTE PTR [rdx],ah
  43c908:	(bad)  
  43c909:	or     ah,BYTE PTR ds:[rax]
  43c90c:	and    BYTE PTR [rdx+rsi*2],bh
  43c90f:	and    BYTE PTR gs:[esi+0x61],ch
  43c914:	ins    DWORD PTR es:[rdi],dx
  43c915:	gs cmp eax,0x6d6d7822
  43c91b:	xor    dh,BYTE PTR [rip+0x69622022]        # 0x69a5e943
  43c921:	je     0x43c996
  43c923:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43c92a:	cmp    BYTE PTR [rdx],ah
  43c92c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c930:	gs cmp eax,0x63657622
  43c936:	xor    DWORD PTR [rdx],esi
  43c938:	cmp    BYTE PTR [rdx],ah
  43c93a:	(bad)  
  43c93b:	or     ah,BYTE PTR ds:[rax]
  43c93e:	and    BYTE PTR [rdx+rsi*2],bh
  43c941:	and    BYTE PTR gs:[esi+0x61],ch
  43c946:	ins    DWORD PTR es:[rdi],dx
  43c947:	gs cmp eax,0x6d6d7822
  43c94d:	xor    dh,BYTE PTR [rsi]
  43c94f:	and    ah,BYTE PTR [rax]
  43c951:	(bad)  
  43c952:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c95a:	xor    DWORD PTR [rdx],esi
  43c95c:	cmp    BYTE PTR [rdx],ah
  43c95e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c962:	gs cmp eax,0x63657622
  43c968:	xor    DWORD PTR [rdx],esi
  43c96a:	cmp    BYTE PTR [rdx],ah
  43c96c:	(bad)  
  43c96d:	or     ah,BYTE PTR ds:[rax]
  43c970:	and    BYTE PTR [rdx+rsi*2],bh
  43c973:	and    BYTE PTR gs:[esi+0x61],ch
  43c978:	ins    DWORD PTR es:[rdi],dx
  43c979:	gs cmp eax,0x6d6d7822
  43c97f:	xor    dh,BYTE PTR [rdi]
  43c981:	and    ah,BYTE PTR [rax]
  43c983:	(bad)  
  43c984:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c98c:	xor    DWORD PTR [rdx],esi
  43c98e:	cmp    BYTE PTR [rdx],ah
  43c990:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c994:	gs cmp eax,0x63657622
  43c99a:	xor    DWORD PTR [rdx],esi
  43c99c:	cmp    BYTE PTR [rdx],ah
  43c99e:	(bad)  
  43c99f:	or     ah,BYTE PTR ds:[rax]
  43c9a2:	and    BYTE PTR [rdx+rsi*2],bh
  43c9a5:	and    BYTE PTR gs:[esi+0x61],ch
  43c9aa:	ins    DWORD PTR es:[rdi],dx
  43c9ab:	gs cmp eax,0x6d6d7822
  43c9b1:	xor    bh,BYTE PTR [rax]
  43c9b3:	and    ah,BYTE PTR [rax]
  43c9b5:	(bad)  
  43c9b6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c9be:	xor    DWORD PTR [rdx],esi
  43c9c0:	cmp    BYTE PTR [rdx],ah
  43c9c2:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c9c6:	gs cmp eax,0x63657622
  43c9cc:	xor    DWORD PTR [rdx],esi
  43c9ce:	cmp    BYTE PTR [rdx],ah
  43c9d0:	(bad)  
  43c9d1:	or     ah,BYTE PTR ds:[rax]
  43c9d4:	and    BYTE PTR [rdx+rsi*2],bh
  43c9d7:	and    BYTE PTR gs:[esi+0x61],ch
  43c9dc:	ins    DWORD PTR es:[rdi],dx
  43c9dd:	gs cmp eax,0x6d6d7822
  43c9e3:	xor    bh,BYTE PTR [rcx]
  43c9e5:	and    ah,BYTE PTR [rax]
  43c9e7:	(bad)  
  43c9e8:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43c9f0:	xor    DWORD PTR [rdx],esi
  43c9f2:	cmp    BYTE PTR [rdx],ah
  43c9f4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43c9f8:	gs cmp eax,0x63657622
  43c9fe:	xor    DWORD PTR [rdx],esi
  43ca00:	cmp    BYTE PTR [rdx],ah
  43ca02:	(bad)  
  43ca03:	or     ah,BYTE PTR ds:[rax]
  43ca06:	and    BYTE PTR [rdx+rsi*2],bh
  43ca09:	and    BYTE PTR gs:[esi+0x61],ch
  43ca0e:	ins    DWORD PTR es:[rdi],dx
  43ca0f:	gs cmp eax,0x6d6d7822
  43ca15:	xor    esi,DWORD PTR [rax]
  43ca17:	and    ah,BYTE PTR [rax]
  43ca19:	(bad)  
  43ca1a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ca22:	xor    DWORD PTR [rdx],esi
  43ca24:	cmp    BYTE PTR [rdx],ah
  43ca26:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ca2a:	gs cmp eax,0x63657622
  43ca30:	xor    DWORD PTR [rdx],esi
  43ca32:	cmp    BYTE PTR [rdx],ah
  43ca34:	(bad)  
  43ca35:	or     ah,BYTE PTR ds:[rax]
  43ca38:	and    BYTE PTR [rdx+rsi*2],bh
  43ca3b:	and    BYTE PTR gs:[esi+0x61],ch
  43ca40:	ins    DWORD PTR es:[rdi],dx
  43ca41:	gs cmp eax,0x6d6d7822
  43ca47:	xor    esi,DWORD PTR [rcx]
  43ca49:	and    ah,BYTE PTR [rax]
  43ca4b:	(bad)  
  43ca4c:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ca54:	xor    DWORD PTR [rdx],esi
  43ca56:	cmp    BYTE PTR [rdx],ah
  43ca58:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ca5c:	gs cmp eax,0x63657622
  43ca62:	xor    DWORD PTR [rdx],esi
  43ca64:	cmp    BYTE PTR [rdx],ah
  43ca66:	(bad)  
  43ca67:	or     cl,BYTE PTR ds:[rdx]
  43ca6a:	and    BYTE PTR [rax],ah
  43ca6c:	cmp    al,0x72
  43ca6e:	and    BYTE PTR gs:[esi+0x61],ch
  43ca73:	ins    DWORD PTR es:[rdi],dx
  43ca74:	gs cmp eax,0x6d6d7922
  43ca7a:	xor    DWORD PTR [rsi],esi
  43ca7c:	push   0x69622022
  43ca81:	je     0x43caf6
  43ca83:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43ca8a:	cmp    BYTE PTR [rdx],ah
  43ca8c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ca90:	gs cmp eax,0x6e697522
  43ca96:	je     0x43cac9
  43ca98:	xor    bh,BYTE PTR [rax]
  43ca9a:	and    ch,BYTE PTR [rdi]
  43ca9c:	or     ah,BYTE PTR ds:[rax]
  43ca9f:	and    BYTE PTR [rdx+rsi*2],bh
  43caa2:	and    BYTE PTR gs:[esi+0x61],ch
  43caa7:	ins    DWORD PTR es:[rdi],dx
  43caa8:	gs cmp eax,0x6d6d7922
  43caae:	xor    DWORD PTR [rdi],esi
  43cab0:	push   0x69622022
  43cab5:	je     0x43cb2a
  43cab7:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cabe:	cmp    BYTE PTR [rdx],ah
  43cac0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cac4:	gs cmp eax,0x6e697522
  43caca:	je     0x43cafd
  43cacc:	xor    bh,BYTE PTR [rax]
  43cace:	and    ch,BYTE PTR [rdi]
  43cad0:	or     ah,BYTE PTR ds:[rax]
  43cad3:	and    BYTE PTR [rdx+rsi*2],bh
  43cad6:	and    BYTE PTR gs:[esi+0x61],ch
  43cadb:	ins    DWORD PTR es:[rdi],dx
  43cadc:	gs cmp eax,0x6d6d7922
  43cae2:	xor    DWORD PTR [rax],edi
  43cae4:	push   0x69622022
  43cae9:	je     0x43cb5e
  43caeb:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43caf2:	cmp    BYTE PTR [rdx],ah
  43caf4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43caf8:	gs cmp eax,0x6e697522
  43cafe:	je     0x43cb31
  43cb00:	xor    bh,BYTE PTR [rax]
  43cb02:	and    ch,BYTE PTR [rdi]
  43cb04:	or     ah,BYTE PTR ds:[rax]
  43cb07:	and    BYTE PTR [rdx+rsi*2],bh
  43cb0a:	and    BYTE PTR gs:[esi+0x61],ch
  43cb0f:	ins    DWORD PTR es:[rdi],dx
  43cb10:	gs cmp eax,0x6d6d7922
  43cb16:	xor    DWORD PTR [rcx],edi
  43cb18:	push   0x69622022
  43cb1d:	je     0x43cb92
  43cb1f:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cb26:	cmp    BYTE PTR [rdx],ah
  43cb28:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cb2c:	gs cmp eax,0x6e697522
  43cb32:	je     0x43cb65
  43cb34:	xor    bh,BYTE PTR [rax]
  43cb36:	and    ch,BYTE PTR [rdi]
  43cb38:	or     ah,BYTE PTR ds:[rax]
  43cb3b:	and    BYTE PTR [rdx+rsi*2],bh
  43cb3e:	and    BYTE PTR gs:[esi+0x61],ch
  43cb43:	ins    DWORD PTR es:[rdi],dx
  43cb44:	gs cmp eax,0x6d6d7922
  43cb4a:	xor    dh,BYTE PTR [rax]
  43cb4c:	push   0x69622022
  43cb51:	je     0x43cbc6
  43cb53:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cb5a:	cmp    BYTE PTR [rdx],ah
  43cb5c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cb60:	gs cmp eax,0x6e697522
  43cb66:	je     0x43cb99
  43cb68:	xor    bh,BYTE PTR [rax]
  43cb6a:	and    ch,BYTE PTR [rdi]
  43cb6c:	or     ah,BYTE PTR ds:[rax]
  43cb6f:	and    BYTE PTR [rdx+rsi*2],bh
  43cb72:	and    BYTE PTR gs:[esi+0x61],ch
  43cb77:	ins    DWORD PTR es:[rdi],dx
  43cb78:	gs cmp eax,0x6d6d7922
  43cb7e:	xor    dh,BYTE PTR [rcx]
  43cb80:	push   0x69622022
  43cb85:	je     0x43cbfa
  43cb87:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cb8e:	cmp    BYTE PTR [rdx],ah
  43cb90:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cb94:	gs cmp eax,0x6e697522
  43cb9a:	je     0x43cbcd
  43cb9c:	xor    bh,BYTE PTR [rax]
  43cb9e:	and    ch,BYTE PTR [rdi]
  43cba0:	or     ah,BYTE PTR ds:[rax]
  43cba3:	and    BYTE PTR [rdx+rsi*2],bh
  43cba6:	and    BYTE PTR gs:[esi+0x61],ch
  43cbab:	ins    DWORD PTR es:[rdi],dx
  43cbac:	gs cmp eax,0x6d6d7922
  43cbb2:	xor    dh,BYTE PTR [rdx]
  43cbb4:	push   0x69622022
  43cbb9:	je     0x43cc2e
  43cbbb:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cbc2:	cmp    BYTE PTR [rdx],ah
  43cbc4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cbc8:	gs cmp eax,0x6e697522
  43cbce:	je     0x43cc01
  43cbd0:	xor    bh,BYTE PTR [rax]
  43cbd2:	and    ch,BYTE PTR [rdi]
  43cbd4:	or     ah,BYTE PTR ds:[rax]
  43cbd7:	and    BYTE PTR [rdx+rsi*2],bh
  43cbda:	and    BYTE PTR gs:[esi+0x61],ch
  43cbdf:	ins    DWORD PTR es:[rdi],dx
  43cbe0:	gs cmp eax,0x6d6d7922
  43cbe6:	xor    dh,BYTE PTR [rbx]
  43cbe8:	push   0x69622022
  43cbed:	je     0x43cc62
  43cbef:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cbf6:	cmp    BYTE PTR [rdx],ah
  43cbf8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cbfc:	gs cmp eax,0x6e697522
  43cc02:	je     0x43cc35
  43cc04:	xor    bh,BYTE PTR [rax]
  43cc06:	and    ch,BYTE PTR [rdi]
  43cc08:	or     ah,BYTE PTR ds:[rax]
  43cc0b:	and    BYTE PTR [rdx+rsi*2],bh
  43cc0e:	and    BYTE PTR gs:[esi+0x61],ch
  43cc13:	ins    DWORD PTR es:[rdi],dx
  43cc14:	gs cmp eax,0x6d6d7922
  43cc1a:	xor    dh,BYTE PTR [rax+rbp*2]
  43cc1d:	and    ah,BYTE PTR [rax]
  43cc1f:	(bad)  
  43cc20:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43cc28:	xor    DWORD PTR [rdx],esi
  43cc2a:	cmp    BYTE PTR [rdx],ah
  43cc2c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cc30:	gs cmp eax,0x6e697522
  43cc36:	je     0x43cc69
  43cc38:	xor    bh,BYTE PTR [rax]
  43cc3a:	and    ch,BYTE PTR [rdi]
  43cc3c:	or     ah,BYTE PTR ds:[rax]
  43cc3f:	and    BYTE PTR [rdx+rsi*2],bh
  43cc42:	and    BYTE PTR gs:[esi+0x61],ch
  43cc47:	ins    DWORD PTR es:[rdi],dx
  43cc48:	gs cmp eax,0x6d6d7922
  43cc4e:	xor    dh,BYTE PTR [rip+0x62202268]        # 0x6263eebc
  43cc54:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43cc5c:	xor    DWORD PTR [rdx],esi
  43cc5e:	cmp    BYTE PTR [rdx],ah
  43cc60:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cc64:	gs cmp eax,0x6e697522
  43cc6a:	je     0x43cc9d
  43cc6c:	xor    bh,BYTE PTR [rax]
  43cc6e:	and    ch,BYTE PTR [rdi]
  43cc70:	or     ah,BYTE PTR ds:[rax]
  43cc73:	and    BYTE PTR [rdx+rsi*2],bh
  43cc76:	and    BYTE PTR gs:[esi+0x61],ch
  43cc7b:	ins    DWORD PTR es:[rdi],dx
  43cc7c:	gs cmp eax,0x6d6d7922
  43cc82:	xor    dh,BYTE PTR [rsi]
  43cc84:	push   0x69622022
  43cc89:	je     0x43ccfe
  43cc8b:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cc92:	cmp    BYTE PTR [rdx],ah
  43cc94:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cc98:	gs cmp eax,0x6e697522
  43cc9e:	je     0x43ccd1
  43cca0:	xor    bh,BYTE PTR [rax]
  43cca2:	and    ch,BYTE PTR [rdi]
  43cca4:	or     ah,BYTE PTR ds:[rax]
  43cca7:	and    BYTE PTR [rdx+rsi*2],bh
  43ccaa:	and    BYTE PTR gs:[esi+0x61],ch
  43ccaf:	ins    DWORD PTR es:[rdi],dx
  43ccb0:	gs cmp eax,0x6d6d7922
  43ccb6:	xor    dh,BYTE PTR [rdi]
  43ccb8:	push   0x69622022
  43ccbd:	je     0x43cd32
  43ccbf:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43ccc6:	cmp    BYTE PTR [rdx],ah
  43ccc8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cccc:	gs cmp eax,0x6e697522
  43ccd2:	je     0x43cd05
  43ccd4:	xor    bh,BYTE PTR [rax]
  43ccd6:	and    ch,BYTE PTR [rdi]
  43ccd8:	or     ah,BYTE PTR ds:[rax]
  43ccdb:	and    BYTE PTR [rdx+rsi*2],bh
  43ccde:	and    BYTE PTR gs:[esi+0x61],ch
  43cce3:	ins    DWORD PTR es:[rdi],dx
  43cce4:	gs cmp eax,0x6d6d7922
  43ccea:	xor    bh,BYTE PTR [rax]
  43ccec:	push   0x69622022
  43ccf1:	je     0x43cd66
  43ccf3:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43ccfa:	cmp    BYTE PTR [rdx],ah
  43ccfc:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cd00:	gs cmp eax,0x6e697522
  43cd06:	je     0x43cd39
  43cd08:	xor    bh,BYTE PTR [rax]
  43cd0a:	and    ch,BYTE PTR [rdi]
  43cd0c:	or     ah,BYTE PTR ds:[rax]
  43cd0f:	and    BYTE PTR [rdx+rsi*2],bh
  43cd12:	and    BYTE PTR gs:[esi+0x61],ch
  43cd17:	ins    DWORD PTR es:[rdi],dx
  43cd18:	gs cmp eax,0x6d6d7922
  43cd1e:	xor    bh,BYTE PTR [rcx]
  43cd20:	push   0x69622022
  43cd25:	je     0x43cd9a
  43cd27:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cd2e:	cmp    BYTE PTR [rdx],ah
  43cd30:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cd34:	gs cmp eax,0x6e697522
  43cd3a:	je     0x43cd6d
  43cd3c:	xor    bh,BYTE PTR [rax]
  43cd3e:	and    ch,BYTE PTR [rdi]
  43cd40:	or     ah,BYTE PTR ds:[rax]
  43cd43:	and    BYTE PTR [rdx+rsi*2],bh
  43cd46:	and    BYTE PTR gs:[esi+0x61],ch
  43cd4b:	ins    DWORD PTR es:[rdi],dx
  43cd4c:	gs cmp eax,0x6d6d7922
  43cd52:	xor    esi,DWORD PTR [rax]
  43cd54:	push   0x69622022
  43cd59:	je     0x43cdce
  43cd5b:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cd62:	cmp    BYTE PTR [rdx],ah
  43cd64:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cd68:	gs cmp eax,0x6e697522
  43cd6e:	je     0x43cda1
  43cd70:	xor    bh,BYTE PTR [rax]
  43cd72:	and    ch,BYTE PTR [rdi]
  43cd74:	or     ah,BYTE PTR ds:[rax]
  43cd77:	and    BYTE PTR [rdx+rsi*2],bh
  43cd7a:	and    BYTE PTR gs:[esi+0x61],ch
  43cd7f:	ins    DWORD PTR es:[rdi],dx
  43cd80:	gs cmp eax,0x6d6d7922
  43cd86:	xor    esi,DWORD PTR [rcx]
  43cd88:	push   0x69622022
  43cd8d:	je     0x43ce02
  43cd8f:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43cd96:	cmp    BYTE PTR [rdx],ah
  43cd98:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43cd9c:	gs cmp eax,0x6e697522
  43cda2:	je     0x43cdd5
  43cda4:	xor    bh,BYTE PTR [rax]
  43cda6:	and    ch,BYTE PTR [rdi]
  43cda8:	or     cl,BYTE PTR ds:[rdx]
  43cdab:	and    BYTE PTR [rax],ah
  43cdad:	cmp    al,0x76
  43cdaf:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43cdb4:	and    BYTE PTR [rcx+0x64],ch
  43cdb7:	cmp    eax,0x75327622
  43cdbc:	imul   esi,DWORD PTR [rcx],0x20223832
  43cdc2:	je     0x43ce3d
  43cdc4:	jo     0x43ce2b
  43cdc6:	cmp    eax,0x6e697522
  43cdcb:	je     0x43cdfe
  43cdcd:	xor    bh,BYTE PTR [rax]
  43cdcf:	and    ah,BYTE PTR [rax]
  43cdd1:	movsxd ebp,DWORD PTR [rdi+0x75]
  43cdd4:	outs   dx,BYTE PTR ds:[rsi]
  43cdd5:	je     0x43ce14
  43cdd7:	and    dh,BYTE PTR [rdx]
  43cdd9:	and    ch,BYTE PTR [rdi]
  43cddb:	or     cl,BYTE PTR ds:[rdx]
  43cdde:	and    BYTE PTR [rax],ah
  43cde0:	cmp    al,0x72
  43cde2:	and    BYTE PTR gs:[esi+0x61],ch
  43cde7:	ins    DWORD PTR es:[rdi],dx
  43cde8:	gs cmp eax,0x22306b22
  43cdee:	and    BYTE PTR [rdx+0x69],ah
  43cdf1:	je     0x43ce66
  43cdf3:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43cdfa:	and    ah,BYTE PTR [rax]
  43cdfc:	je     0x43ce77
  43cdfe:	jo     0x43ce65
  43ce00:	cmp    eax,0x6e697522
  43ce05:	je     0x43ce3d
  43ce07:	xor    al,0x22
  43ce09:	(bad)  
  43ce0a:	or     ah,BYTE PTR ds:[rax]
  43ce0d:	and    BYTE PTR [rdx+rsi*2],bh
  43ce10:	and    BYTE PTR gs:[esi+0x61],ch
  43ce15:	ins    DWORD PTR es:[rdi],dx
  43ce16:	gs cmp eax,0x22316b22
  43ce1c:	and    BYTE PTR [rdx+0x69],ah
  43ce1f:	je     0x43ce94
  43ce21:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43ce28:	and    ah,BYTE PTR [rax]
  43ce2a:	je     0x43cea5
  43ce2c:	jo     0x43ce93
  43ce2e:	cmp    eax,0x6e697522
  43ce33:	je     0x43ce6b
  43ce35:	xor    al,0x22
  43ce37:	(bad)  
  43ce38:	or     ah,BYTE PTR ds:[rax]
  43ce3b:	and    BYTE PTR [rdx+rsi*2],bh
  43ce3e:	and    BYTE PTR gs:[esi+0x61],ch
  43ce43:	ins    DWORD PTR es:[rdi],dx
  43ce44:	gs cmp eax,0x22326b22
  43ce4a:	and    BYTE PTR [rdx+0x69],ah
  43ce4d:	je     0x43cec2
  43ce4f:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43ce56:	and    ah,BYTE PTR [rax]
  43ce58:	je     0x43ced3
  43ce5a:	jo     0x43cec1
  43ce5c:	cmp    eax,0x6e697522
  43ce61:	je     0x43ce99
  43ce63:	xor    al,0x22
  43ce65:	(bad)  
  43ce66:	or     ah,BYTE PTR ds:[rax]
  43ce69:	and    BYTE PTR [rdx+rsi*2],bh
  43ce6c:	and    BYTE PTR gs:[esi+0x61],ch
  43ce71:	ins    DWORD PTR es:[rdi],dx
  43ce72:	gs cmp eax,0x22336b22
  43ce78:	and    BYTE PTR [rdx+0x69],ah
  43ce7b:	je     0x43cef0
  43ce7d:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43ce84:	and    ah,BYTE PTR [rax]
  43ce86:	je     0x43cf01
  43ce88:	jo     0x43ceef
  43ce8a:	cmp    eax,0x6e697522
  43ce8f:	je     0x43cec7
  43ce91:	xor    al,0x22
  43ce93:	(bad)  
  43ce94:	or     ah,BYTE PTR ds:[rax]
  43ce97:	and    BYTE PTR [rdx+rsi*2],bh
  43ce9a:	and    BYTE PTR gs:[esi+0x61],ch
  43ce9f:	ins    DWORD PTR es:[rdi],dx
  43cea0:	gs cmp eax,0x22346b22
  43cea6:	and    BYTE PTR [rdx+0x69],ah
  43cea9:	je     0x43cf1e
  43ceab:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43ceb2:	and    ah,BYTE PTR [rax]
  43ceb4:	je     0x43cf2f
  43ceb6:	jo     0x43cf1d
  43ceb8:	cmp    eax,0x6e697522
  43cebd:	je     0x43cef5
  43cebf:	xor    al,0x22
  43cec1:	(bad)  
  43cec2:	or     ah,BYTE PTR ds:[rax]
  43cec5:	and    BYTE PTR [rdx+rsi*2],bh
  43cec8:	and    BYTE PTR gs:[esi+0x61],ch
  43cecd:	ins    DWORD PTR es:[rdi],dx
  43cece:	gs cmp eax,0x22356b22
  43ced4:	and    BYTE PTR [rdx+0x69],ah
  43ced7:	je     0x43cf4c
  43ced9:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43cee0:	and    ah,BYTE PTR [rax]
  43cee2:	je     0x43cf5d
  43cee4:	jo     0x43cf4b
  43cee6:	cmp    eax,0x6e697522
  43ceeb:	je     0x43cf23
  43ceed:	xor    al,0x22
  43ceef:	(bad)  
  43cef0:	or     ah,BYTE PTR ds:[rax]
  43cef3:	and    BYTE PTR [rdx+rsi*2],bh
  43cef6:	and    BYTE PTR gs:[esi+0x61],ch
  43cefb:	ins    DWORD PTR es:[rdi],dx
  43cefc:	gs cmp eax,0x22366b22
  43cf02:	and    BYTE PTR [rdx+0x69],ah
  43cf05:	je     0x43cf7a
  43cf07:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43cf0e:	and    ah,BYTE PTR [rax]
  43cf10:	je     0x43cf8b
  43cf12:	jo     0x43cf79
  43cf14:	cmp    eax,0x6e697522
  43cf19:	je     0x43cf51
  43cf1b:	xor    al,0x22
  43cf1d:	(bad)  
  43cf1e:	or     ah,BYTE PTR ds:[rax]
  43cf21:	and    BYTE PTR [rdx+rsi*2],bh
  43cf24:	and    BYTE PTR gs:[esi+0x61],ch
  43cf29:	ins    DWORD PTR es:[rdi],dx
  43cf2a:	gs cmp eax,0x22376b22
  43cf30:	and    BYTE PTR [rdx+0x69],ah
  43cf33:	je     0x43cfa8
  43cf35:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43cf3c:	and    ah,BYTE PTR [rax]
  43cf3e:	je     0x43cfb9
  43cf40:	jo     0x43cfa7
  43cf42:	cmp    eax,0x6e697522
  43cf47:	je     0x43cf7f
  43cf49:	xor    al,0x22
  43cf4b:	(bad)  
  43cf4c:	or     cl,BYTE PTR ds:[rdx]
  43cf4f:	and    BYTE PTR [rax],ah
  43cf51:	cmp    al,0x72
  43cf53:	and    BYTE PTR gs:[esi+0x61],ch
  43cf58:	ins    DWORD PTR es:[rdi],dx
  43cf59:	gs cmp eax,0x6d6d7a22
  43cf5f:	xor    BYTE PTR [rax+0x22],ch
  43cf62:	and    BYTE PTR [rdx+0x69],ah
  43cf65:	je     0x43cfda
  43cf67:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43cf6e:	and    ah,BYTE PTR ss:[rax]
  43cf71:	je     0x43cfec
  43cf73:	jo     0x43cfda
  43cf75:	cmp    eax,0x75327622
  43cf7a:	imul   esi,DWORD PTR [rcx],0x2f223832
  43cf80:	or     ah,BYTE PTR ds:[rax]
  43cf83:	and    BYTE PTR [rdx+rsi*2],bh
  43cf86:	and    BYTE PTR gs:[esi+0x61],ch
  43cf8b:	ins    DWORD PTR es:[rdi],dx
  43cf8c:	gs cmp eax,0x6d6d7a22
  43cf92:	xor    DWORD PTR [rax+0x22],ebp
  43cf95:	and    BYTE PTR [rdx+0x69],ah
  43cf98:	je     0x43d00d
  43cf9a:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43cfa1:	and    ah,BYTE PTR ss:[rax]
  43cfa4:	je     0x43d01f
  43cfa6:	jo     0x43d00d
  43cfa8:	cmp    eax,0x75327622
  43cfad:	imul   esi,DWORD PTR [rcx],0x2f223832
  43cfb3:	or     ah,BYTE PTR ds:[rax]
  43cfb6:	and    BYTE PTR [rdx+rsi*2],bh
  43cfb9:	and    BYTE PTR gs:[esi+0x61],ch
  43cfbe:	ins    DWORD PTR es:[rdi],dx
  43cfbf:	gs cmp eax,0x6d6d7a22
  43cfc5:	xor    ch,BYTE PTR [rax+0x22]
  43cfc8:	and    BYTE PTR [rdx+0x69],ah
  43cfcb:	je     0x43d040
  43cfcd:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43cfd4:	and    ah,BYTE PTR ss:[rax]
  43cfd7:	je     0x43d052
  43cfd9:	jo     0x43d040
  43cfdb:	cmp    eax,0x75327622
  43cfe0:	imul   esi,DWORD PTR [rcx],0x2f223832
  43cfe6:	or     ah,BYTE PTR ds:[rax]
  43cfe9:	and    BYTE PTR [rdx+rsi*2],bh
  43cfec:	and    BYTE PTR gs:[esi+0x61],ch
  43cff1:	ins    DWORD PTR es:[rdi],dx
  43cff2:	gs cmp eax,0x6d6d7a22
  43cff8:	xor    ebp,DWORD PTR [rax+0x22]
  43cffb:	and    BYTE PTR [rdx+0x69],ah
  43cffe:	je     0x43d073
  43d000:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d007:	and    ah,BYTE PTR ss:[rax]
  43d00a:	je     0x43d085
  43d00c:	jo     0x43d073
  43d00e:	cmp    eax,0x75327622
  43d013:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d019:	or     ah,BYTE PTR ds:[rax]
  43d01c:	and    BYTE PTR [rdx+rsi*2],bh
  43d01f:	and    BYTE PTR gs:[esi+0x61],ch
  43d024:	ins    DWORD PTR es:[rdi],dx
  43d025:	gs cmp eax,0x6d6d7a22
  43d02b:	xor    al,0x68
  43d02d:	and    ah,BYTE PTR [rax]
  43d02f:	(bad)  
  43d030:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d038:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f274
  43d03e:	jns    0x43d0b0
  43d040:	gs cmp eax,0x75327622
  43d046:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d04c:	or     ah,BYTE PTR ds:[rax]
  43d04f:	and    BYTE PTR [rdx+rsi*2],bh
  43d052:	and    BYTE PTR gs:[esi+0x61],ch
  43d057:	ins    DWORD PTR es:[rdi],dx
  43d058:	gs cmp eax,0x6d6d7a22
  43d05e:	xor    eax,0x62202268
  43d063:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d06b:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f2a7
  43d071:	jns    0x43d0e3
  43d073:	gs cmp eax,0x75327622
  43d079:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d07f:	or     ah,BYTE PTR ds:[rax]
  43d082:	and    BYTE PTR [rdx+rsi*2],bh
  43d085:	and    BYTE PTR gs:[esi+0x61],ch
  43d08a:	ins    DWORD PTR es:[rdi],dx
  43d08b:	gs cmp eax,0x6d6d7a22
  43d091:	ss push 0x69622022
  43d097:	je     0x43d10c
  43d099:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d0a0:	and    ah,BYTE PTR ss:[rax]
  43d0a3:	je     0x43d11e
  43d0a5:	jo     0x43d10c
  43d0a7:	cmp    eax,0x75327622
  43d0ac:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d0b2:	or     ah,BYTE PTR ds:[rax]
  43d0b5:	and    BYTE PTR [rdx+rsi*2],bh
  43d0b8:	and    BYTE PTR gs:[esi+0x61],ch
  43d0bd:	ins    DWORD PTR es:[rdi],dx
  43d0be:	gs cmp eax,0x6d6d7a22
  43d0c4:	(bad)  
  43d0c5:	push   0x69622022
  43d0ca:	je     0x43d13f
  43d0cc:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d0d3:	and    ah,BYTE PTR ss:[rax]
  43d0d6:	je     0x43d151
  43d0d8:	jo     0x43d13f
  43d0da:	cmp    eax,0x75327622
  43d0df:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d0e5:	or     ah,BYTE PTR ds:[rax]
  43d0e8:	and    BYTE PTR [rdx+rsi*2],bh
  43d0eb:	and    BYTE PTR gs:[esi+0x61],ch
  43d0f0:	ins    DWORD PTR es:[rdi],dx
  43d0f1:	gs cmp eax,0x6d6d7a22
  43d0f7:	cmp    BYTE PTR [rax+0x22],ch
  43d0fa:	and    BYTE PTR [rdx+0x69],ah
  43d0fd:	je     0x43d172
  43d0ff:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d106:	and    ah,BYTE PTR ss:[rax]
  43d109:	je     0x43d184
  43d10b:	jo     0x43d172
  43d10d:	cmp    eax,0x75327622
  43d112:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d118:	or     ah,BYTE PTR ds:[rax]
  43d11b:	and    BYTE PTR [rdx+rsi*2],bh
  43d11e:	and    BYTE PTR gs:[esi+0x61],ch
  43d123:	ins    DWORD PTR es:[rdi],dx
  43d124:	gs cmp eax,0x6d6d7a22
  43d12a:	cmp    DWORD PTR [rax+0x22],ebp
  43d12d:	and    BYTE PTR [rdx+0x69],ah
  43d130:	je     0x43d1a5
  43d132:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d139:	and    ah,BYTE PTR ss:[rax]
  43d13c:	je     0x43d1b7
  43d13e:	jo     0x43d1a5
  43d140:	cmp    eax,0x75327622
  43d145:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d14b:	or     ah,BYTE PTR ds:[rax]
  43d14e:	and    BYTE PTR [rdx+rsi*2],bh
  43d151:	and    BYTE PTR gs:[esi+0x61],ch
  43d156:	ins    DWORD PTR es:[rdi],dx
  43d157:	gs cmp eax,0x6d6d7a22
  43d15d:	xor    DWORD PTR [rax],esi
  43d15f:	push   0x69622022
  43d164:	je     0x43d1d9
  43d166:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d16d:	and    ah,BYTE PTR ss:[rax]
  43d170:	je     0x43d1eb
  43d172:	jo     0x43d1d9
  43d174:	cmp    eax,0x75327622
  43d179:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d17f:	or     ah,BYTE PTR ds:[rax]
  43d182:	and    BYTE PTR [rdx+rsi*2],bh
  43d185:	and    BYTE PTR gs:[esi+0x61],ch
  43d18a:	ins    DWORD PTR es:[rdi],dx
  43d18b:	gs cmp eax,0x6d6d7a22
  43d191:	xor    DWORD PTR [rcx],esi
  43d193:	push   0x69622022
  43d198:	je     0x43d20d
  43d19a:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d1a1:	and    ah,BYTE PTR ss:[rax]
  43d1a4:	je     0x43d21f
  43d1a6:	jo     0x43d20d
  43d1a8:	cmp    eax,0x75327622
  43d1ad:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d1b3:	or     ah,BYTE PTR ds:[rax]
  43d1b6:	and    BYTE PTR [rdx+rsi*2],bh
  43d1b9:	and    BYTE PTR gs:[esi+0x61],ch
  43d1be:	ins    DWORD PTR es:[rdi],dx
  43d1bf:	gs cmp eax,0x6d6d7a22
  43d1c5:	xor    DWORD PTR [rdx],esi
  43d1c7:	push   0x69622022
  43d1cc:	je     0x43d241
  43d1ce:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d1d5:	and    ah,BYTE PTR ss:[rax]
  43d1d8:	je     0x43d253
  43d1da:	jo     0x43d241
  43d1dc:	cmp    eax,0x75327622
  43d1e1:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d1e7:	or     ah,BYTE PTR ds:[rax]
  43d1ea:	and    BYTE PTR [rdx+rsi*2],bh
  43d1ed:	and    BYTE PTR gs:[esi+0x61],ch
  43d1f2:	ins    DWORD PTR es:[rdi],dx
  43d1f3:	gs cmp eax,0x6d6d7a22
  43d1f9:	xor    DWORD PTR [rbx],esi
  43d1fb:	push   0x69622022
  43d200:	je     0x43d275
  43d202:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d209:	and    ah,BYTE PTR ss:[rax]
  43d20c:	je     0x43d287
  43d20e:	jo     0x43d275
  43d210:	cmp    eax,0x75327622
  43d215:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d21b:	or     ah,BYTE PTR ds:[rax]
  43d21e:	and    BYTE PTR [rdx+rsi*2],bh
  43d221:	and    BYTE PTR gs:[esi+0x61],ch
  43d226:	ins    DWORD PTR es:[rdi],dx
  43d227:	gs cmp eax,0x6d6d7a22
  43d22d:	xor    DWORD PTR [rax+rbp*2],esi
  43d230:	and    ah,BYTE PTR [rax]
  43d232:	(bad)  
  43d233:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d23b:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f477
  43d241:	jns    0x43d2b3
  43d243:	gs cmp eax,0x75327622
  43d249:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d24f:	or     ah,BYTE PTR ds:[rax]
  43d252:	and    BYTE PTR [rdx+rsi*2],bh
  43d255:	and    BYTE PTR gs:[esi+0x61],ch
  43d25a:	ins    DWORD PTR es:[rdi],dx
  43d25b:	gs cmp eax,0x6d6d7a22
  43d261:	xor    DWORD PTR [rip+0x62202268],esi        # 0x6263f4cf
  43d267:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d26f:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f4ab
  43d275:	jns    0x43d2e7
  43d277:	gs cmp eax,0x75327622
  43d27d:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d283:	or     ah,BYTE PTR ds:[rax]
  43d286:	and    BYTE PTR [rdx+rsi*2],bh
  43d289:	and    BYTE PTR gs:[esi+0x61],ch
  43d28e:	ins    DWORD PTR es:[rdi],dx
  43d28f:	gs cmp eax,0x6d6d7a22
  43d295:	xor    DWORD PTR [rsi],esi
  43d297:	push   0x69622022
  43d29c:	je     0x43d311
  43d29e:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d2a5:	and    ah,BYTE PTR ss:[rax]
  43d2a8:	je     0x43d323
  43d2aa:	jo     0x43d311
  43d2ac:	cmp    eax,0x75327622
  43d2b1:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d2b7:	or     ah,BYTE PTR ds:[rax]
  43d2ba:	and    BYTE PTR [rdx+rsi*2],bh
  43d2bd:	and    BYTE PTR gs:[esi+0x61],ch
  43d2c2:	ins    DWORD PTR es:[rdi],dx
  43d2c3:	gs cmp eax,0x6d6d7a22
  43d2c9:	xor    DWORD PTR [rdi],esi
  43d2cb:	push   0x69622022
  43d2d0:	je     0x43d345
  43d2d2:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d2d9:	and    ah,BYTE PTR ss:[rax]
  43d2dc:	je     0x43d357
  43d2de:	jo     0x43d345
  43d2e0:	cmp    eax,0x75327622
  43d2e5:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d2eb:	or     ah,BYTE PTR ds:[rax]
  43d2ee:	and    BYTE PTR [rdx+rsi*2],bh
  43d2f1:	and    BYTE PTR gs:[esi+0x61],ch
  43d2f6:	ins    DWORD PTR es:[rdi],dx
  43d2f7:	gs cmp eax,0x6d6d7a22
  43d2fd:	xor    DWORD PTR [rax],edi
  43d2ff:	push   0x69622022
  43d304:	je     0x43d379
  43d306:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d30d:	and    ah,BYTE PTR ss:[rax]
  43d310:	je     0x43d38b
  43d312:	jo     0x43d379
  43d314:	cmp    eax,0x75327622
  43d319:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d31f:	or     ah,BYTE PTR ds:[rax]
  43d322:	and    BYTE PTR [rdx+rsi*2],bh
  43d325:	and    BYTE PTR gs:[esi+0x61],ch
  43d32a:	ins    DWORD PTR es:[rdi],dx
  43d32b:	gs cmp eax,0x6d6d7a22
  43d331:	xor    DWORD PTR [rcx],edi
  43d333:	push   0x69622022
  43d338:	je     0x43d3ad
  43d33a:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d341:	and    ah,BYTE PTR ss:[rax]
  43d344:	je     0x43d3bf
  43d346:	jo     0x43d3ad
  43d348:	cmp    eax,0x75327622
  43d34d:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d353:	or     ah,BYTE PTR ds:[rax]
  43d356:	and    BYTE PTR [rdx+rsi*2],bh
  43d359:	and    BYTE PTR gs:[esi+0x61],ch
  43d35e:	ins    DWORD PTR es:[rdi],dx
  43d35f:	gs cmp eax,0x6d6d7a22
  43d365:	xor    dh,BYTE PTR [rax]
  43d367:	push   0x69622022
  43d36c:	je     0x43d3e1
  43d36e:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d375:	and    ah,BYTE PTR ss:[rax]
  43d378:	je     0x43d3f3
  43d37a:	jo     0x43d3e1
  43d37c:	cmp    eax,0x75327622
  43d381:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d387:	or     ah,BYTE PTR ds:[rax]
  43d38a:	and    BYTE PTR [rdx+rsi*2],bh
  43d38d:	and    BYTE PTR gs:[esi+0x61],ch
  43d392:	ins    DWORD PTR es:[rdi],dx
  43d393:	gs cmp eax,0x6d6d7a22
  43d399:	xor    dh,BYTE PTR [rcx]
  43d39b:	push   0x69622022
  43d3a0:	je     0x43d415
  43d3a2:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d3a9:	and    ah,BYTE PTR ss:[rax]
  43d3ac:	je     0x43d427
  43d3ae:	jo     0x43d415
  43d3b0:	cmp    eax,0x75327622
  43d3b5:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d3bb:	or     ah,BYTE PTR ds:[rax]
  43d3be:	and    BYTE PTR [rdx+rsi*2],bh
  43d3c1:	and    BYTE PTR gs:[esi+0x61],ch
  43d3c6:	ins    DWORD PTR es:[rdi],dx
  43d3c7:	gs cmp eax,0x6d6d7a22
  43d3cd:	xor    dh,BYTE PTR [rdx]
  43d3cf:	push   0x69622022
  43d3d4:	je     0x43d449
  43d3d6:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d3dd:	and    ah,BYTE PTR ss:[rax]
  43d3e0:	je     0x43d45b
  43d3e2:	jo     0x43d449
  43d3e4:	cmp    eax,0x75327622
  43d3e9:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d3ef:	or     ah,BYTE PTR ds:[rax]
  43d3f2:	and    BYTE PTR [rdx+rsi*2],bh
  43d3f5:	and    BYTE PTR gs:[esi+0x61],ch
  43d3fa:	ins    DWORD PTR es:[rdi],dx
  43d3fb:	gs cmp eax,0x6d6d7a22
  43d401:	xor    dh,BYTE PTR [rbx]
  43d403:	push   0x69622022
  43d408:	je     0x43d47d
  43d40a:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d411:	and    ah,BYTE PTR ss:[rax]
  43d414:	je     0x43d48f
  43d416:	jo     0x43d47d
  43d418:	cmp    eax,0x75327622
  43d41d:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d423:	or     ah,BYTE PTR ds:[rax]
  43d426:	and    BYTE PTR [rdx+rsi*2],bh
  43d429:	and    BYTE PTR gs:[esi+0x61],ch
  43d42e:	ins    DWORD PTR es:[rdi],dx
  43d42f:	gs cmp eax,0x6d6d7a22
  43d435:	xor    dh,BYTE PTR [rax+rbp*2]
  43d438:	and    ah,BYTE PTR [rax]
  43d43a:	(bad)  
  43d43b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d443:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f67f
  43d449:	jns    0x43d4bb
  43d44b:	gs cmp eax,0x75327622
  43d451:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d457:	or     ah,BYTE PTR ds:[rax]
  43d45a:	and    BYTE PTR [rdx+rsi*2],bh
  43d45d:	and    BYTE PTR gs:[esi+0x61],ch
  43d462:	ins    DWORD PTR es:[rdi],dx
  43d463:	gs cmp eax,0x6d6d7a22
  43d469:	xor    dh,BYTE PTR [rip+0x62202268]        # 0x6263f6d7
  43d46f:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d477:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x7463f6b3
  43d47d:	jns    0x43d4ef
  43d47f:	gs cmp eax,0x75327622
  43d485:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d48b:	or     ah,BYTE PTR ds:[rax]
  43d48e:	and    BYTE PTR [rdx+rsi*2],bh
  43d491:	and    BYTE PTR gs:[esi+0x61],ch
  43d496:	ins    DWORD PTR es:[rdi],dx
  43d497:	gs cmp eax,0x6d6d7a22
  43d49d:	xor    dh,BYTE PTR [rsi]
  43d49f:	push   0x69622022
  43d4a4:	je     0x43d519
  43d4a6:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d4ad:	and    ah,BYTE PTR ss:[rax]
  43d4b0:	je     0x43d52b
  43d4b2:	jo     0x43d519
  43d4b4:	cmp    eax,0x75327622
  43d4b9:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d4bf:	or     ah,BYTE PTR ds:[rax]
  43d4c2:	and    BYTE PTR [rdx+rsi*2],bh
  43d4c5:	and    BYTE PTR gs:[esi+0x61],ch
  43d4ca:	ins    DWORD PTR es:[rdi],dx
  43d4cb:	gs cmp eax,0x6d6d7a22
  43d4d1:	xor    dh,BYTE PTR [rdi]
  43d4d3:	push   0x69622022
  43d4d8:	je     0x43d54d
  43d4da:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d4e1:	and    ah,BYTE PTR ss:[rax]
  43d4e4:	je     0x43d55f
  43d4e6:	jo     0x43d54d
  43d4e8:	cmp    eax,0x75327622
  43d4ed:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d4f3:	or     ah,BYTE PTR ds:[rax]
  43d4f6:	and    BYTE PTR [rdx+rsi*2],bh
  43d4f9:	and    BYTE PTR gs:[esi+0x61],ch
  43d4fe:	ins    DWORD PTR es:[rdi],dx
  43d4ff:	gs cmp eax,0x6d6d7a22
  43d505:	xor    bh,BYTE PTR [rax]
  43d507:	push   0x69622022
  43d50c:	je     0x43d581
  43d50e:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d515:	and    ah,BYTE PTR ss:[rax]
  43d518:	je     0x43d593
  43d51a:	jo     0x43d581
  43d51c:	cmp    eax,0x75327622
  43d521:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d527:	or     ah,BYTE PTR ds:[rax]
  43d52a:	and    BYTE PTR [rdx+rsi*2],bh
  43d52d:	and    BYTE PTR gs:[esi+0x61],ch
  43d532:	ins    DWORD PTR es:[rdi],dx
  43d533:	gs cmp eax,0x6d6d7a22
  43d539:	xor    bh,BYTE PTR [rcx]
  43d53b:	push   0x69622022
  43d540:	je     0x43d5b5
  43d542:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d549:	and    ah,BYTE PTR ss:[rax]
  43d54c:	je     0x43d5c7
  43d54e:	jo     0x43d5b5
  43d550:	cmp    eax,0x75327622
  43d555:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d55b:	or     ah,BYTE PTR ds:[rax]
  43d55e:	and    BYTE PTR [rdx+rsi*2],bh
  43d561:	and    BYTE PTR gs:[esi+0x61],ch
  43d566:	ins    DWORD PTR es:[rdi],dx
  43d567:	gs cmp eax,0x6d6d7a22
  43d56d:	xor    esi,DWORD PTR [rax]
  43d56f:	push   0x69622022
  43d574:	je     0x43d5e9
  43d576:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d57d:	and    ah,BYTE PTR ss:[rax]
  43d580:	je     0x43d5fb
  43d582:	jo     0x43d5e9
  43d584:	cmp    eax,0x75327622
  43d589:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d58f:	or     ah,BYTE PTR ds:[rax]
  43d592:	and    BYTE PTR [rdx+rsi*2],bh
  43d595:	and    BYTE PTR gs:[esi+0x61],ch
  43d59a:	ins    DWORD PTR es:[rdi],dx
  43d59b:	gs cmp eax,0x6d6d7a22
  43d5a1:	xor    esi,DWORD PTR [rcx]
  43d5a3:	push   0x69622022
  43d5a8:	je     0x43d61d
  43d5aa:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  43d5b1:	and    ah,BYTE PTR ss:[rax]
  43d5b4:	je     0x43d62f
  43d5b6:	jo     0x43d61d
  43d5b8:	cmp    eax,0x75327622
  43d5bd:	imul   esi,DWORD PTR [rcx],0x2f223832
  43d5c3:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43d5c7:	data16 gs (bad) 
  43d5ca:	je     0x43d641
  43d5cc:	jb     0x43d633
  43d5ce:	or     al,BYTE PTR ds:[rax]
	...
  43d5fd:	add    BYTE PTR [rax],al
  43d5ff:	add    BYTE PTR [rdi+rdi*1],bh
  43d602:	js     0x43d671
  43d604:	ins    BYTE PTR es:[rdi],dx
  43d605:	and    BYTE PTR [rsi+0x65],dh
  43d608:	jb     0x43d67d
  43d60a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43d611:	xor    BYTE PTR [rdx],ah
  43d613:	(bad)  
  43d614:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43d618:	sub    eax,0x6f43202d
  43d61d:	jo     0x43d698
  43d61f:	jb     0x43d68a
  43d621:	addr32 push 0x43282074
  43d627:	sub    DWORD PTR [rax],esp
  43d629:	xor    dh,BYTE PTR [rax]
  43d62b:	xor    DWORD PTR [rax],esi
  43d62d:	sub    eax,0x37313032
  43d632:	and    BYTE PTR [rsi+0x72],al
  43d635:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43d63a:	data16 je 0x43d6b4
  43d63d:	(bad)  
  43d63e:	jb     0x43d6a5
  43d640:	and    BYTE PTR [rsi+0x6f],al
  43d643:	jne    0x43d6b3
  43d645:	fs (bad) 
  43d647:	je     0x43d6b2
  43d649:	outs   dx,DWORD PTR ds:[rsi]
  43d64a:	outs   dx,BYTE PTR ds:[rsi]
  43d64b:	sub    al,0x20
  43d64d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43d64f:	movsxd ebp,DWORD PTR [rsi]
  43d651:	or     cl,BYTE PTR [rdx]
  43d653:	and    BYTE PTR [rax],ah
  43d655:	and    BYTE PTR [rax],ah
  43d657:	and    BYTE PTR [rbx+0x6f],al
  43d65a:	jo     0x43d6d5
  43d65c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43d663:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43d667:	je     0x43d6db
  43d669:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43d670:	and    BYTE PTR [rdi+0x66],ch
  43d673:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43d677:	jae    0x43d699
  43d679:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43d680:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43d688:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43d690:	outs   dx,DWORD PTR ds:[rsi]
  43d691:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43d699:	outs   dx,DWORD PTR ds:[rsi]
  43d69a:	outs   dx,BYTE PTR ds:[rsi]
  43d69b:	sub    al,0xa
  43d69d:	and    BYTE PTR [rax],ah
  43d69f:	and    BYTE PTR [rax],ah
  43d6a1:	and    BYTE PTR [rcx+0x72],ah
  43d6a4:	and    BYTE PTR gs:[rax+0x65],dh
  43d6a8:	jb     0x43d717
  43d6aa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43d6b2:	and    BYTE PTR [rcx+0x6e],ah
  43d6b5:	jns    0x43d6d7
  43d6b7:	ins    DWORD PTR es:[rdi],dx
  43d6b8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43d6c1:	push   0x2074756f
  43d6c6:	jb     0x43d737
  43d6c8:	jns    0x43d72b
  43d6ca:	ins    BYTE PTR es:[rdi],dx
  43d6cb:	je     0x43d746
  43d6cd:	and    BYTE PTR [rax+0x72],dh
  43d6d0:	outs   dx,DWORD PTR ds:[rsi]
  43d6d1:	jbe    0x43d73c
  43d6d3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43d6da:	and    BYTE PTR [rbx+0x6f],ah
  43d6dd:	jo     0x43d758
  43d6df:	jb     0x43d74a
  43d6e1:	addr32 push 0x20200a74
  43d6e7:	and    BYTE PTR [rax],ah
  43d6e9:	and    BYTE PTR [rsi+0x6f],ch
  43d6ec:	je     0x43d757
  43d6ee:	movsxd esp,DWORD PTR [rbp+0x20]
  43d6f1:	(bad)  
  43d6f2:	outs   dx,BYTE PTR ds:[rsi]
  43d6f3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43d6f8:	jae    0x43d71a
  43d6fa:	outs   dx,BYTE PTR ds:[rsi]
  43d6fb:	outs   dx,DWORD PTR ds:[rsi]
  43d6fc:	je     0x43d767
  43d6fe:	movsxd esp,DWORD PTR [rbp+0x20]
  43d701:	(bad)  
  43d702:	jb     0x43d769
  43d704:	and    BYTE PTR [rax+0x72],dh
  43d707:	gs jae 0x43d76f
  43d70a:	jb     0x43d782
  43d70c:	gs fs and BYTE PTR cs:[rax],ah
  43d711:	sub    eax,0xa0a3e2d
  43d716:	cmp    al,0x21
  43d718:	rex.R
  43d719:	rex.WRXB
  43d71a:	rex.XB push r12
  43d71c:	pop    rcx
  43d71d:	push   rax
  43d71e:	and    BYTE PTR [r14+0x65],r12b
  43d722:	(bad)  
  43d723:	je     0x43d79a
  43d725:	jb     0x43d78c
  43d727:	and    BYTE PTR [rbx+0x59],dl
  43d72a:	push   rbx
  43d72b:	push   rsp
  43d72c:	rex.RB
  43d72d:	rex.WRB and BYTE PTR [r10],r12b
  43d730:	addr32 fs (bad) 
  43d733:	sub    eax,0x67726174
  43d738:	gs je  0x43d769
  43d73b:	fs je  0x43d7a2
  43d73e:	and    bh,BYTE PTR [rsi]
  43d740:	or     bh,BYTE PTR [rsi+riz*2]
  43d743:	gs (bad) 
  43d745:	je     0x43d7bc
  43d747:	jb     0x43d7ae
  43d749:	and    BYTE PTR [rsi+0x61],ch
  43d74c:	ins    DWORD PTR es:[rdi],dx
  43d74d:	gs cmp eax,0x67726f22
  43d753:	outs   dx,BYTE PTR cs:[esi]
  43d756:	jne    0x43d786
  43d758:	addr32 fs (bad) 
  43d75b:	imul   esi,DWORD PTR cs:[rbx],0x612e3638
  43d762:	jbe    0x43d7dc
  43d764:	and    bh,BYTE PTR [rsi]
  43d766:	or     ah,BYTE PTR [rax]
  43d768:	and    BYTE PTR [rdx+rsi*2],bh
  43d76b:	and    BYTE PTR gs:[esi+0x61],ch
  43d770:	ins    DWORD PTR es:[rdi],dx
  43d771:	gs cmp eax,0x6d6d7922
  43d777:	xor    BYTE PTR [rax+0x22],ch
  43d77a:	and    BYTE PTR [rdx+0x69],ah
  43d77d:	je     0x43d7f2
  43d77f:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d786:	cmp    BYTE PTR [rdx],ah
  43d788:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d78c:	gs cmp eax,0x6e697522
  43d792:	je     0x43d7c5
  43d794:	xor    bh,BYTE PTR [rax]
  43d796:	and    ch,BYTE PTR [rdi]
  43d798:	or     ah,BYTE PTR ds:[rax]
  43d79b:	and    BYTE PTR [rdx+rsi*2],bh
  43d79e:	and    BYTE PTR gs:[esi+0x61],ch
  43d7a3:	ins    DWORD PTR es:[rdi],dx
  43d7a4:	gs cmp eax,0x6d6d7922
  43d7aa:	xor    DWORD PTR [rax+0x22],ebp
  43d7ad:	and    BYTE PTR [rdx+0x69],ah
  43d7b0:	je     0x43d825
  43d7b2:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d7b9:	cmp    BYTE PTR [rdx],ah
  43d7bb:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d7bf:	gs cmp eax,0x6e697522
  43d7c5:	je     0x43d7f8
  43d7c7:	xor    bh,BYTE PTR [rax]
  43d7c9:	and    ch,BYTE PTR [rdi]
  43d7cb:	or     ah,BYTE PTR ds:[rax]
  43d7ce:	and    BYTE PTR [rdx+rsi*2],bh
  43d7d1:	and    BYTE PTR gs:[esi+0x61],ch
  43d7d6:	ins    DWORD PTR es:[rdi],dx
  43d7d7:	gs cmp eax,0x6d6d7922
  43d7dd:	xor    ch,BYTE PTR [rax+0x22]
  43d7e0:	and    BYTE PTR [rdx+0x69],ah
  43d7e3:	je     0x43d858
  43d7e5:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d7ec:	cmp    BYTE PTR [rdx],ah
  43d7ee:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d7f2:	gs cmp eax,0x6e697522
  43d7f8:	je     0x43d82b
  43d7fa:	xor    bh,BYTE PTR [rax]
  43d7fc:	and    ch,BYTE PTR [rdi]
  43d7fe:	or     ah,BYTE PTR ds:[rax]
  43d801:	and    BYTE PTR [rdx+rsi*2],bh
  43d804:	and    BYTE PTR gs:[esi+0x61],ch
  43d809:	ins    DWORD PTR es:[rdi],dx
  43d80a:	gs cmp eax,0x6d6d7922
  43d810:	xor    ebp,DWORD PTR [rax+0x22]
  43d813:	and    BYTE PTR [rdx+0x69],ah
  43d816:	je     0x43d88b
  43d818:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d81f:	cmp    BYTE PTR [rdx],ah
  43d821:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d825:	gs cmp eax,0x6e697522
  43d82b:	je     0x43d85e
  43d82d:	xor    bh,BYTE PTR [rax]
  43d82f:	and    ch,BYTE PTR [rdi]
  43d831:	or     ah,BYTE PTR ds:[rax]
  43d834:	and    BYTE PTR [rdx+rsi*2],bh
  43d837:	and    BYTE PTR gs:[esi+0x61],ch
  43d83c:	ins    DWORD PTR es:[rdi],dx
  43d83d:	gs cmp eax,0x6d6d7922
  43d843:	xor    al,0x68
  43d845:	and    ah,BYTE PTR [rax]
  43d847:	(bad)  
  43d848:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d850:	xor    DWORD PTR [rdx],esi
  43d852:	cmp    BYTE PTR [rdx],ah
  43d854:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d858:	gs cmp eax,0x6e697522
  43d85e:	je     0x43d891
  43d860:	xor    bh,BYTE PTR [rax]
  43d862:	and    ch,BYTE PTR [rdi]
  43d864:	or     ah,BYTE PTR ds:[rax]
  43d867:	and    BYTE PTR [rdx+rsi*2],bh
  43d86a:	and    BYTE PTR gs:[esi+0x61],ch
  43d86f:	ins    DWORD PTR es:[rdi],dx
  43d870:	gs cmp eax,0x6d6d7922
  43d876:	xor    eax,0x62202268
  43d87b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43d883:	xor    DWORD PTR [rdx],esi
  43d885:	cmp    BYTE PTR [rdx],ah
  43d887:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d88b:	gs cmp eax,0x6e697522
  43d891:	je     0x43d8c4
  43d893:	xor    bh,BYTE PTR [rax]
  43d895:	and    ch,BYTE PTR [rdi]
  43d897:	or     ah,BYTE PTR ds:[rax]
  43d89a:	and    BYTE PTR [rdx+rsi*2],bh
  43d89d:	and    BYTE PTR gs:[esi+0x61],ch
  43d8a2:	ins    DWORD PTR es:[rdi],dx
  43d8a3:	gs cmp eax,0x6d6d7922
  43d8a9:	ss push 0x69622022
  43d8af:	je     0x43d924
  43d8b1:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d8b8:	cmp    BYTE PTR [rdx],ah
  43d8ba:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d8be:	gs cmp eax,0x6e697522
  43d8c4:	je     0x43d8f7
  43d8c6:	xor    bh,BYTE PTR [rax]
  43d8c8:	and    ch,BYTE PTR [rdi]
  43d8ca:	or     ah,BYTE PTR ds:[rax]
  43d8cd:	and    BYTE PTR [rdx+rsi*2],bh
  43d8d0:	and    BYTE PTR gs:[esi+0x61],ch
  43d8d5:	ins    DWORD PTR es:[rdi],dx
  43d8d6:	gs cmp eax,0x6d6d7922
  43d8dc:	(bad)  
  43d8dd:	push   0x69622022
  43d8e2:	je     0x43d957
  43d8e4:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d8eb:	cmp    BYTE PTR [rdx],ah
  43d8ed:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d8f1:	gs cmp eax,0x6e697522
  43d8f7:	je     0x43d92a
  43d8f9:	xor    bh,BYTE PTR [rax]
  43d8fb:	and    ch,BYTE PTR [rdi]
  43d8fd:	or     ah,BYTE PTR ds:[rax]
  43d900:	and    BYTE PTR [rdx+rsi*2],bh
  43d903:	and    BYTE PTR gs:[esi+0x61],ch
  43d908:	ins    DWORD PTR es:[rdi],dx
  43d909:	gs cmp eax,0x6d6d7922
  43d90f:	cmp    BYTE PTR [rax+0x22],ch
  43d912:	and    BYTE PTR [rdx+0x69],ah
  43d915:	je     0x43d98a
  43d917:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d91e:	cmp    BYTE PTR [rdx],ah
  43d920:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d924:	gs cmp eax,0x6e697522
  43d92a:	je     0x43d95d
  43d92c:	xor    bh,BYTE PTR [rax]
  43d92e:	and    ch,BYTE PTR [rdi]
  43d930:	or     ah,BYTE PTR ds:[rax]
  43d933:	and    BYTE PTR [rdx+rsi*2],bh
  43d936:	and    BYTE PTR gs:[esi+0x61],ch
  43d93b:	ins    DWORD PTR es:[rdi],dx
  43d93c:	gs cmp eax,0x6d6d7922
  43d942:	cmp    DWORD PTR [rax+0x22],ebp
  43d945:	and    BYTE PTR [rdx+0x69],ah
  43d948:	je     0x43d9bd
  43d94a:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d951:	cmp    BYTE PTR [rdx],ah
  43d953:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d957:	gs cmp eax,0x6e697522
  43d95d:	je     0x43d990
  43d95f:	xor    bh,BYTE PTR [rax]
  43d961:	and    ch,BYTE PTR [rdi]
  43d963:	or     ah,BYTE PTR ds:[rax]
  43d966:	and    BYTE PTR [rdx+rsi*2],bh
  43d969:	and    BYTE PTR gs:[esi+0x61],ch
  43d96e:	ins    DWORD PTR es:[rdi],dx
  43d96f:	gs cmp eax,0x6d6d7922
  43d975:	xor    DWORD PTR [rax],esi
  43d977:	push   0x69622022
  43d97c:	je     0x43d9f1
  43d97e:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d985:	cmp    BYTE PTR [rdx],ah
  43d987:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d98b:	gs cmp eax,0x6e697522
  43d991:	je     0x43d9c4
  43d993:	xor    bh,BYTE PTR [rax]
  43d995:	and    ch,BYTE PTR [rdi]
  43d997:	or     ah,BYTE PTR ds:[rax]
  43d99a:	and    BYTE PTR [rdx+rsi*2],bh
  43d99d:	and    BYTE PTR gs:[esi+0x61],ch
  43d9a2:	ins    DWORD PTR es:[rdi],dx
  43d9a3:	gs cmp eax,0x6d6d7922
  43d9a9:	xor    DWORD PTR [rcx],esi
  43d9ab:	push   0x69622022
  43d9b0:	je     0x43da25
  43d9b2:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d9b9:	cmp    BYTE PTR [rdx],ah
  43d9bb:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d9bf:	gs cmp eax,0x6e697522
  43d9c5:	je     0x43d9f8
  43d9c7:	xor    bh,BYTE PTR [rax]
  43d9c9:	and    ch,BYTE PTR [rdi]
  43d9cb:	or     ah,BYTE PTR ds:[rax]
  43d9ce:	and    BYTE PTR [rdx+rsi*2],bh
  43d9d1:	and    BYTE PTR gs:[esi+0x61],ch
  43d9d6:	ins    DWORD PTR es:[rdi],dx
  43d9d7:	gs cmp eax,0x6d6d7922
  43d9dd:	xor    DWORD PTR [rdx],esi
  43d9df:	push   0x69622022
  43d9e4:	je     0x43da59
  43d9e6:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43d9ed:	cmp    BYTE PTR [rdx],ah
  43d9ef:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43d9f3:	gs cmp eax,0x6e697522
  43d9f9:	je     0x43da2c
  43d9fb:	xor    bh,BYTE PTR [rax]
  43d9fd:	and    ch,BYTE PTR [rdi]
  43d9ff:	or     ah,BYTE PTR ds:[rax]
  43da02:	and    BYTE PTR [rdx+rsi*2],bh
  43da05:	and    BYTE PTR gs:[esi+0x61],ch
  43da0a:	ins    DWORD PTR es:[rdi],dx
  43da0b:	gs cmp eax,0x6d6d7922
  43da11:	xor    DWORD PTR [rbx],esi
  43da13:	push   0x69622022
  43da18:	je     0x43da8d
  43da1a:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43da21:	cmp    BYTE PTR [rdx],ah
  43da23:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43da27:	gs cmp eax,0x6e697522
  43da2d:	je     0x43da60
  43da2f:	xor    bh,BYTE PTR [rax]
  43da31:	and    ch,BYTE PTR [rdi]
  43da33:	or     ah,BYTE PTR ds:[rax]
  43da36:	and    BYTE PTR [rdx+rsi*2],bh
  43da39:	and    BYTE PTR gs:[esi+0x61],ch
  43da3e:	ins    DWORD PTR es:[rdi],dx
  43da3f:	gs cmp eax,0x6d6d7922
  43da45:	xor    DWORD PTR [rax+rbp*2],esi
  43da48:	and    ah,BYTE PTR [rax]
  43da4a:	(bad)  
  43da4b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43da53:	xor    DWORD PTR [rdx],esi
  43da55:	cmp    BYTE PTR [rdx],ah
  43da57:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43da5b:	gs cmp eax,0x6e697522
  43da61:	je     0x43da94
  43da63:	xor    bh,BYTE PTR [rax]
  43da65:	and    ch,BYTE PTR [rdi]
  43da67:	or     ah,BYTE PTR ds:[rax]
  43da6a:	and    BYTE PTR [rdx+rsi*2],bh
  43da6d:	and    BYTE PTR gs:[esi+0x61],ch
  43da72:	ins    DWORD PTR es:[rdi],dx
  43da73:	gs cmp eax,0x6d6d7922
  43da79:	xor    DWORD PTR [rip+0x62202268],esi        # 0x6263fce7
  43da7f:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43da87:	xor    DWORD PTR [rdx],esi
  43da89:	cmp    BYTE PTR [rdx],ah
  43da8b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43da8f:	gs cmp eax,0x6e697522
  43da95:	je     0x43dac8
  43da97:	xor    bh,BYTE PTR [rax]
  43da99:	and    ch,BYTE PTR [rdi]
  43da9b:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43da9f:	data16 gs (bad) 
  43daa2:	je     0x43db19
  43daa4:	jb     0x43db0b
  43daa6:	or     al,BYTE PTR ds:[rax]
	...
  43dabd:	add    BYTE PTR [rax],al
  43dabf:	add    BYTE PTR [rdi+rdi*1],bh
  43dac2:	js     0x43db31
  43dac4:	ins    BYTE PTR es:[rdi],dx
  43dac5:	and    BYTE PTR [rsi+0x65],dh
  43dac8:	jb     0x43db3d
  43daca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43dad1:	xor    BYTE PTR [rdx],ah
  43dad3:	(bad)  
  43dad4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43dad8:	sub    eax,0x6f43202d
  43dadd:	jo     0x43db58
  43dadf:	jb     0x43db4a
  43dae1:	addr32 push 0x43282074
  43dae7:	sub    DWORD PTR [rax],esp
  43dae9:	xor    dh,BYTE PTR [rax]
  43daeb:	xor    DWORD PTR [rax],esi
  43daed:	sub    eax,0x37313032
  43daf2:	and    BYTE PTR [rsi+0x72],al
  43daf5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43dafa:	data16 je 0x43db74
  43dafd:	(bad)  
  43dafe:	jb     0x43db65
  43db00:	and    BYTE PTR [rsi+0x6f],al
  43db03:	jne    0x43db73
  43db05:	fs (bad) 
  43db07:	je     0x43db72
  43db09:	outs   dx,DWORD PTR ds:[rsi]
  43db0a:	outs   dx,BYTE PTR ds:[rsi]
  43db0b:	sub    al,0x20
  43db0d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43db0f:	movsxd ebp,DWORD PTR [rsi]
  43db11:	or     cl,BYTE PTR [rdx]
  43db13:	and    BYTE PTR [rax],ah
  43db15:	and    BYTE PTR [rax],ah
  43db17:	and    BYTE PTR [rbx+0x6f],al
  43db1a:	jo     0x43db95
  43db1c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43db23:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43db27:	je     0x43db9b
  43db29:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43db30:	and    BYTE PTR [rdi+0x66],ch
  43db33:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43db37:	jae    0x43db59
  43db39:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43db40:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43db48:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43db50:	outs   dx,DWORD PTR ds:[rsi]
  43db51:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43db59:	outs   dx,DWORD PTR ds:[rsi]
  43db5a:	outs   dx,BYTE PTR ds:[rsi]
  43db5b:	sub    al,0xa
  43db5d:	and    BYTE PTR [rax],ah
  43db5f:	and    BYTE PTR [rax],ah
  43db61:	and    BYTE PTR [rcx+0x72],ah
  43db64:	and    BYTE PTR gs:[rax+0x65],dh
  43db68:	jb     0x43dbd7
  43db6a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43db72:	and    BYTE PTR [rcx+0x6e],ah
  43db75:	jns    0x43db97
  43db77:	ins    DWORD PTR es:[rdi],dx
  43db78:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43db81:	push   0x2074756f
  43db86:	jb     0x43dbf7
  43db88:	jns    0x43dbeb
  43db8a:	ins    BYTE PTR es:[rdi],dx
  43db8b:	je     0x43dc06
  43db8d:	and    BYTE PTR [rax+0x72],dh
  43db90:	outs   dx,DWORD PTR ds:[rsi]
  43db91:	jbe    0x43dbfc
  43db93:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43db9a:	and    BYTE PTR [rbx+0x6f],ah
  43db9d:	jo     0x43dc18
  43db9f:	jb     0x43dc0a
  43dba1:	addr32 push 0x20200a74
  43dba7:	and    BYTE PTR [rax],ah
  43dba9:	and    BYTE PTR [rsi+0x6f],ch
  43dbac:	je     0x43dc17
  43dbae:	movsxd esp,DWORD PTR [rbp+0x20]
  43dbb1:	(bad)  
  43dbb2:	outs   dx,BYTE PTR ds:[rsi]
  43dbb3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43dbb8:	jae    0x43dbda
  43dbba:	outs   dx,BYTE PTR ds:[rsi]
  43dbbb:	outs   dx,DWORD PTR ds:[rsi]
  43dbbc:	je     0x43dc27
  43dbbe:	movsxd esp,DWORD PTR [rbp+0x20]
  43dbc1:	(bad)  
  43dbc2:	jb     0x43dc29
  43dbc4:	and    BYTE PTR [rax+0x72],dh
  43dbc7:	gs jae 0x43dc2f
  43dbca:	jb     0x43dc42
  43dbcc:	gs fs and BYTE PTR cs:[rax],ah
  43dbd1:	sub    eax,0xa0a3e2d
  43dbd6:	cmp    al,0x21
  43dbd8:	rex.R
  43dbd9:	rex.WRXB
  43dbda:	rex.XB push r12
  43dbdc:	pop    rcx
  43dbdd:	push   rax
  43dbde:	and    BYTE PTR [r14+0x65],r12b
  43dbe2:	(bad)  
  43dbe3:	je     0x43dc5a
  43dbe5:	jb     0x43dc4c
  43dbe7:	and    BYTE PTR [rbx+0x59],dl
  43dbea:	push   rbx
  43dbeb:	push   rsp
  43dbec:	rex.RB
  43dbed:	rex.WRB and BYTE PTR [r10],r12b
  43dbf0:	addr32 fs (bad) 
  43dbf3:	sub    eax,0x67726174
  43dbf8:	gs je  0x43dc29
  43dbfb:	fs je  0x43dc62
  43dbfe:	and    bh,BYTE PTR [rsi]
  43dc00:	or     bh,BYTE PTR [rsi+riz*2]
  43dc03:	gs (bad) 
  43dc05:	je     0x43dc7c
  43dc07:	jb     0x43dc6e
  43dc09:	and    BYTE PTR [rsi+0x61],ch
  43dc0c:	ins    DWORD PTR es:[rdi],dx
  43dc0d:	gs cmp eax,0x67726f22
  43dc13:	outs   dx,BYTE PTR cs:[esi]
  43dc16:	jne    0x43dc46
  43dc18:	addr32 fs (bad) 
  43dc1b:	imul   esi,DWORD PTR cs:[rbx],0x732e3638
  43dc22:	jae    0x43dc89
  43dc24:	and    bh,BYTE PTR [rsi]
  43dc26:	or     ah,BYTE PTR [rax]
  43dc28:	and    BYTE PTR [rsi+rsi*2],bh
  43dc2b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dc30:	and    BYTE PTR [rcx+0x64],ch
  43dc33:	cmp    eax,0x66347622
  43dc38:	and    ah,BYTE PTR [rax]
  43dc3a:	je     0x43dcb5
  43dc3c:	jo     0x43dca3
  43dc3e:	cmp    eax,0x65656922
  43dc43:	gs pop rdi
  43dc45:	jae    0x43dcb0
  43dc47:	outs   dx,BYTE PTR ds:[rsi]
  43dc48:	ins    BYTE PTR es:[edi],dx
  43dc4a:	and    ah,BYTE PTR gs:[rax]
  43dc4d:	movsxd ebp,DWORD PTR [rdi+0x75]
  43dc50:	outs   dx,BYTE PTR ds:[rsi]
  43dc51:	je     0x43dc90
  43dc53:	and    dh,BYTE PTR [rdx+riz*1]
  43dc56:	(bad)  
  43dc57:	or     ah,BYTE PTR ds:[rax]
  43dc5a:	and    BYTE PTR [rsi+rsi*2],bh
  43dc5d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dc62:	and    BYTE PTR [rcx+0x64],ch
  43dc65:	cmp    eax,0x64327622
  43dc6a:	and    ah,BYTE PTR [rax]
  43dc6c:	je     0x43dce7
  43dc6e:	jo     0x43dcd5
  43dc70:	cmp    eax,0x65656922
  43dc75:	gs pop rdi
  43dc77:	outs   dx,DWORD PTR fs:[rsi]
  43dc79:	jne    0x43dcdd
  43dc7b:	ins    BYTE PTR es:[rdi],dx
  43dc7c:	and    ah,BYTE PTR gs:[rax]
  43dc7f:	movsxd ebp,DWORD PTR [rdi+0x75]
  43dc82:	outs   dx,BYTE PTR ds:[rsi]
  43dc83:	je     0x43dcc2
  43dc85:	and    dh,BYTE PTR [rdx]
  43dc87:	and    ch,BYTE PTR [rdi]
  43dc89:	or     ah,BYTE PTR ds:[rax]
  43dc8c:	and    BYTE PTR [rsi+rsi*2],bh
  43dc8f:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dc94:	and    BYTE PTR [rcx+0x64],ch
  43dc97:	cmp    eax,0x36317622
  43dc9c:	imul   edi,DWORD PTR [rax],0x79742022
  43dca2:	jo     0x43dd09
  43dca4:	cmp    eax,0x746e6922
  43dca9:	cmp    BYTE PTR [rdx],ah
  43dcab:	and    BYTE PTR [rbx+0x6f],ah
  43dcae:	jne    0x43dd1e
  43dcb0:	je     0x43dcef
  43dcb2:	and    dh,BYTE PTR [rcx]
  43dcb4:	and    ch,BYTE PTR ss:[rdi]
  43dcb7:	or     ah,BYTE PTR ds:[rax]
  43dcba:	and    BYTE PTR [rsi+rsi*2],bh
  43dcbd:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dcc2:	and    BYTE PTR [rcx+0x64],ch
  43dcc5:	cmp    eax,0x69387622
  43dcca:	xor    DWORD PTR [rsi],esi
  43dccc:	and    ah,BYTE PTR [rax]
  43dcce:	je     0x43dd49
  43dcd0:	jo     0x43dd37
  43dcd2:	cmp    eax,0x746e6922
  43dcd7:	xor    DWORD PTR [rsi],esi
  43dcd9:	and    ah,BYTE PTR [rax]
  43dcdb:	movsxd ebp,DWORD PTR [rdi+0x75]
  43dcde:	outs   dx,BYTE PTR ds:[rsi]
  43dcdf:	je     0x43dd1e
  43dce1:	and    bh,BYTE PTR [rax]
  43dce3:	and    ch,BYTE PTR [rdi]
  43dce5:	or     ah,BYTE PTR ds:[rax]
  43dce8:	and    BYTE PTR [rsi+rsi*2],bh
  43dceb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dcf0:	and    BYTE PTR [rcx+0x64],ch
  43dcf3:	cmp    eax,0x69347622
  43dcf8:	xor    esi,DWORD PTR [rdx]
  43dcfa:	and    ah,BYTE PTR [rax]
  43dcfc:	je     0x43dd77
  43dcfe:	jo     0x43dd65
  43dd00:	cmp    eax,0x746e6922
  43dd05:	xor    esi,DWORD PTR [rdx]
  43dd07:	and    ah,BYTE PTR [rax]
  43dd09:	movsxd ebp,DWORD PTR [rdi+0x75]
  43dd0c:	outs   dx,BYTE PTR ds:[rsi]
  43dd0d:	je     0x43dd4c
  43dd0f:	and    dh,BYTE PTR [rdx+riz*1]
  43dd12:	(bad)  
  43dd13:	or     ah,BYTE PTR ds:[rax]
  43dd16:	and    BYTE PTR [rsi+rsi*2],bh
  43dd19:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  43dd1e:	and    BYTE PTR [rcx+0x64],ch
  43dd21:	cmp    eax,0x69327622
  43dd26:	ss xor al,0x22
  43dd29:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43dd2d:	gs cmp eax,0x746e6922
  43dd33:	ss xor al,0x22
  43dd36:	and    BYTE PTR [rbx+0x6f],ah
  43dd39:	jne    0x43dda9
  43dd3b:	je     0x43dd7a
  43dd3d:	and    dh,BYTE PTR [rdx]
  43dd3f:	and    ch,BYTE PTR [rdi]
  43dd41:	or     ah,BYTE PTR ds:[rax]
  43dd44:	and    BYTE PTR [rsi*2+0x6e6f696e],bh
  43dd4b:	and    BYTE PTR [rcx+0x64],ch
  43dd4e:	cmp    eax,0x63657622
  43dd53:	xor    DWORD PTR [rdx],esi
  43dd55:	cmp    BYTE PTR [rdx],ah
  43dd57:	or     ah,BYTE PTR ds:[rax]
  43dd5a:	and    BYTE PTR [rax],ah
  43dd5c:	and    BYTE PTR [rsi+riz*2],bh
  43dd5f:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dd66:	ins    DWORD PTR es:[rdi],dx
  43dd67:	gs cmp eax,0x5f347622
  43dd6d:	data16 ins BYTE PTR es:[rdi],dx
  43dd6f:	outs   dx,DWORD PTR ds:[rsi]
  43dd70:	(bad)  
  43dd71:	je     0x43dd95
  43dd73:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43dd77:	gs cmp eax,0x66347622
  43dd7d:	and    ch,BYTE PTR [rdi]
  43dd7f:	or     ah,BYTE PTR ds:[rax]
  43dd82:	and    BYTE PTR [rax],ah
  43dd84:	and    BYTE PTR [rsi+riz*2],bh
  43dd87:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dd8e:	ins    DWORD PTR es:[rdi],dx
  43dd8f:	gs cmp eax,0x5f327622
  43dd95:	outs   dx,DWORD PTR fs:[rsi]
  43dd97:	jne    0x43ddfb
  43dd99:	ins    BYTE PTR es:[rdi],dx
  43dd9a:	and    ah,BYTE PTR gs:[rax]
  43dd9d:	je     0x43de18
  43dd9f:	jo     0x43de06
  43dda1:	cmp    eax,0x64327622
  43dda6:	and    ch,BYTE PTR [rdi]
  43dda8:	or     ah,BYTE PTR ds:[rax]
  43ddab:	and    BYTE PTR [rax],ah
  43ddad:	and    BYTE PTR [rsi+riz*2],bh
  43ddb0:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43ddb7:	ins    DWORD PTR es:[rdi],dx
  43ddb8:	gs cmp eax,0x36317622
  43ddbe:	pop    rdi
  43ddbf:	imul   ebp,DWORD PTR [rsi+0x74],0x74202238
  43ddc6:	jns    0x43de38
  43ddc8:	gs cmp eax,0x36317622
  43ddce:	imul   edi,DWORD PTR [rax],0xa3e2f22
  43ddd4:	and    BYTE PTR [rax],ah
  43ddd6:	and    BYTE PTR [rax],ah
  43ddd8:	cmp    al,0x66
  43ddda:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dde1:	ins    DWORD PTR es:[rdi],dx
  43dde2:	gs cmp eax,0x5f387622
  43dde8:	imul   ebp,DWORD PTR [rsi+0x74],0x20223631
  43ddef:	je     0x43de6a
  43ddf1:	jo     0x43de58
  43ddf3:	cmp    eax,0x69387622
  43ddf8:	xor    DWORD PTR [rsi],esi
  43ddfa:	and    ch,BYTE PTR [rdi]
  43ddfc:	or     ah,BYTE PTR ds:[rax]
  43ddff:	and    BYTE PTR [rax],ah
  43de01:	and    BYTE PTR [rsi+riz*2],bh
  43de04:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43de0b:	ins    DWORD PTR es:[rdi],dx
  43de0c:	gs cmp eax,0x5f347622
  43de12:	imul   ebp,DWORD PTR [rsi+0x74],0x20223233
  43de19:	je     0x43de94
  43de1b:	jo     0x43de82
  43de1d:	cmp    eax,0x69347622
  43de22:	xor    esi,DWORD PTR [rdx]
  43de24:	and    ch,BYTE PTR [rdi]
  43de26:	or     ah,BYTE PTR ds:[rax]
  43de29:	and    BYTE PTR [rax],ah
  43de2b:	and    BYTE PTR [rsi+riz*2],bh
  43de2e:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43de35:	ins    DWORD PTR es:[rdi],dx
  43de36:	gs cmp eax,0x5f327622
  43de3c:	imul   ebp,DWORD PTR [rsi+0x74],0x20223436
  43de43:	je     0x43debe
  43de45:	jo     0x43deac
  43de47:	cmp    eax,0x69327622
  43de4c:	ss xor al,0x22
  43de4f:	(bad)  
  43de50:	or     ah,BYTE PTR ds:[rax]
  43de53:	and    BYTE PTR [rax],ah
  43de55:	and    BYTE PTR [rsi+riz*2],bh
  43de58:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43de5f:	ins    DWORD PTR es:[rdi],dx
  43de60:	gs cmp eax,0x6e697522
  43de66:	je     0x43de99
  43de68:	xor    bh,BYTE PTR [rax]
  43de6a:	and    ah,BYTE PTR [rax]
  43de6c:	je     0x43dee7
  43de6e:	jo     0x43ded5
  43de70:	cmp    eax,0x6e697522
  43de75:	je     0x43dea8
  43de77:	xor    bh,BYTE PTR [rax]
  43de79:	and    ch,BYTE PTR [rdi]
  43de7b:	or     ah,BYTE PTR ds:[rax]
  43de7e:	and    BYTE PTR [rdi+rbp*1],bh
  43de81:	jne    0x43def1
  43de83:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a3e
  43de8a:	cmp    al,0x66
  43de8c:	ins    BYTE PTR es:[rdi],dx
  43de8d:	(bad)  
  43de8e:	addr32 jae 0x43deb1
  43de91:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x36383369
  43de99:	pop    rdi
  43de9a:	ins    DWORD PTR es:[rdi],dx
  43de9b:	js     0x43df00
  43de9d:	jae    0x43df11
  43de9f:	and    ah,BYTE PTR [rax]
  43dea1:	jae    0x43df0c
  43dea3:	jp     0x43df0a
  43dea5:	cmp    eax,0x3e223422
  43deaa:	or     ah,BYTE PTR [rax]
  43deac:	and    BYTE PTR [rax],ah
  43deae:	and    BYTE PTR [rsi+riz*2],bh
  43deb1:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43deb8:	ins    DWORD PTR es:[rdi],dx
  43deb9:	gs cmp eax,0x22454922
  43debf:	and    BYTE PTR [rbx+0x74],dh
  43dec2:	(bad)  
  43dec3:	jb     0x43df39
  43dec5:	cmp    eax,0x20223022
  43deca:	outs   dx,BYTE PTR gs:[rsi]
  43decc:	fs cmp eax,0x2f223022
  43ded2:	or     ah,BYTE PTR ds:[rax]
  43ded5:	and    BYTE PTR [rax],ah
  43ded7:	and    BYTE PTR [rsi+riz*2],bh
  43deda:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dee1:	ins    DWORD PTR es:[rdi],dx
  43dee2:	gs cmp eax,0x22454422
  43dee8:	and    BYTE PTR [rbx+0x74],dh
  43deeb:	(bad)  
  43deec:	jb     0x43df62
  43deee:	cmp    eax,0x20223122
  43def3:	outs   dx,BYTE PTR gs:[rsi]
  43def5:	fs cmp eax,0x2f223122
  43defb:	or     ah,BYTE PTR ds:[rax]
  43defe:	and    BYTE PTR [rax],ah
  43df00:	and    BYTE PTR [rsi+riz*2],bh
  43df03:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43df0a:	ins    DWORD PTR es:[rdi],dx
  43df0b:	gs cmp eax,0x22455a22
  43df11:	and    BYTE PTR [rbx+0x74],dh
  43df14:	(bad)  
  43df15:	jb     0x43df8b
  43df17:	cmp    eax,0x20223222
  43df1c:	outs   dx,BYTE PTR gs:[rsi]
  43df1e:	fs cmp eax,0x2f223222
  43df24:	or     ah,BYTE PTR ds:[rax]
  43df27:	and    BYTE PTR [rax],ah
  43df29:	and    BYTE PTR [rsi+riz*2],bh
  43df2c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43df33:	ins    DWORD PTR es:[rdi],dx
  43df34:	gs cmp eax,0x22454f22
  43df3a:	and    BYTE PTR [rbx+0x74],dh
  43df3d:	(bad)  
  43df3e:	jb     0x43dfb4
  43df40:	cmp    eax,0x20223322
  43df45:	outs   dx,BYTE PTR gs:[rsi]
  43df47:	fs cmp eax,0x2f223322
  43df4d:	or     ah,BYTE PTR ds:[rax]
  43df50:	and    BYTE PTR [rax],ah
  43df52:	and    BYTE PTR [rsi+riz*2],bh
  43df55:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43df5c:	ins    DWORD PTR es:[rdi],dx
  43df5d:	gs cmp eax,0x22455522
  43df63:	and    BYTE PTR [rbx+0x74],dh
  43df66:	(bad)  
  43df67:	jb     0x43dfdd
  43df69:	cmp    eax,0x20223422
  43df6e:	outs   dx,BYTE PTR gs:[rsi]
  43df70:	fs cmp eax,0x2f223422
  43df76:	or     ah,BYTE PTR ds:[rax]
  43df79:	and    BYTE PTR [rax],ah
  43df7b:	and    BYTE PTR [rsi+riz*2],bh
  43df7e:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43df85:	ins    DWORD PTR es:[rdi],dx
  43df86:	gs cmp eax,0x22455022
  43df8c:	and    BYTE PTR [rbx+0x74],dh
  43df8f:	(bad)  
  43df90:	jb     0x43e006
  43df92:	cmp    eax,0x20223522
  43df97:	outs   dx,BYTE PTR gs:[rsi]
  43df99:	fs cmp eax,0x2f223522
  43df9f:	or     ah,BYTE PTR ds:[rax]
  43dfa2:	and    BYTE PTR [rax],ah
  43dfa4:	and    BYTE PTR [rsi+riz*2],bh
  43dfa7:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dfae:	ins    DWORD PTR es:[rdi],dx
  43dfaf:	gs cmp eax,0x5a414422
  43dfb5:	and    ah,BYTE PTR [rax]
  43dfb7:	jae    0x43e02d
  43dfb9:	(bad)  
  43dfba:	jb     0x43e030
  43dfbc:	cmp    eax,0x20223622
  43dfc1:	outs   dx,BYTE PTR gs:[rsi]
  43dfc3:	fs cmp eax,0x2f223622
  43dfc9:	or     ah,BYTE PTR ds:[rax]
  43dfcc:	and    BYTE PTR [rax],ah
  43dfce:	and    BYTE PTR [rsi+riz*2],bh
  43dfd1:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43dfd8:	ins    DWORD PTR es:[rdi],dx
  43dfd9:	gs cmp eax,0x224d4922
  43dfdf:	and    BYTE PTR [rbx+0x74],dh
  43dfe2:	(bad)  
  43dfe3:	jb     0x43e059
  43dfe5:	cmp    eax,0x20223722
  43dfea:	outs   dx,BYTE PTR gs:[rsi]
  43dfec:	fs cmp eax,0x2f223722
  43dff2:	or     ah,BYTE PTR ds:[rax]
  43dff5:	and    BYTE PTR [rax],ah
  43dff7:	and    BYTE PTR [rsi+riz*2],bh
  43dffa:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e001:	ins    DWORD PTR es:[rdi],dx
  43e002:	gs cmp eax,0x224d4422
  43e008:	and    BYTE PTR [rbx+0x74],dh
  43e00b:	(bad)  
  43e00c:	jb     0x43e082
  43e00e:	cmp    eax,0x20223822
  43e013:	outs   dx,BYTE PTR gs:[rsi]
  43e015:	fs cmp eax,0x2f223822
  43e01b:	or     ah,BYTE PTR ds:[rax]
  43e01e:	and    BYTE PTR [rax],ah
  43e020:	and    BYTE PTR [rsi+riz*2],bh
  43e023:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e02a:	ins    DWORD PTR es:[rdi],dx
  43e02b:	gs cmp eax,0x224d5a22
  43e031:	and    BYTE PTR [rbx+0x74],dh
  43e034:	(bad)  
  43e035:	jb     0x43e0ab
  43e037:	cmp    eax,0x20223922
  43e03c:	outs   dx,BYTE PTR gs:[rsi]
  43e03e:	fs cmp eax,0x2f223922
  43e044:	or     ah,BYTE PTR ds:[rax]
  43e047:	and    BYTE PTR [rax],ah
  43e049:	and    BYTE PTR [rsi+riz*2],bh
  43e04c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e053:	ins    DWORD PTR es:[rdi],dx
  43e054:	gs cmp eax,0x224d4f22
  43e05a:	and    BYTE PTR [rbx+0x74],dh
  43e05d:	(bad)  
  43e05e:	jb     0x43e0d4
  43e060:	cmp    eax,0x22303122
  43e065:	and    BYTE PTR [rbp+0x6e],ah
  43e068:	fs cmp eax,0x22303122
  43e06e:	(bad)  
  43e06f:	or     ah,BYTE PTR ds:[rax]
  43e072:	and    BYTE PTR [rax],ah
  43e074:	and    BYTE PTR [rsi+riz*2],bh
  43e077:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e07e:	ins    DWORD PTR es:[rdi],dx
  43e07f:	gs cmp eax,0x224d5522
  43e085:	and    BYTE PTR [rbx+0x74],dh
  43e088:	(bad)  
  43e089:	jb     0x43e0ff
  43e08b:	cmp    eax,0x22313122
  43e090:	and    BYTE PTR [rbp+0x6e],ah
  43e093:	fs cmp eax,0x22313122
  43e099:	(bad)  
  43e09a:	or     ah,BYTE PTR ds:[rax]
  43e09d:	and    BYTE PTR [rax],ah
  43e09f:	and    BYTE PTR [rsi+riz*2],bh
  43e0a2:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e0a9:	ins    DWORD PTR es:[rdi],dx
  43e0aa:	gs cmp eax,0x224d5022
  43e0b0:	and    BYTE PTR [rbx+0x74],dh
  43e0b3:	(bad)  
  43e0b4:	jb     0x43e12a
  43e0b6:	cmp    eax,0x22323122
  43e0bb:	and    BYTE PTR [rbp+0x6e],ah
  43e0be:	fs cmp eax,0x22323122
  43e0c4:	(bad)  
  43e0c5:	or     ah,BYTE PTR ds:[rax]
  43e0c8:	and    BYTE PTR [rax],ah
  43e0ca:	and    BYTE PTR [rsi+riz*2],bh
  43e0cd:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e0d4:	ins    DWORD PTR es:[rdi],dx
  43e0d5:	gs cmp eax,0x225a4622
  43e0db:	and    BYTE PTR [rbx+0x74],dh
  43e0de:	(bad)  
  43e0df:	jb     0x43e155
  43e0e1:	cmp    eax,0x22353122
  43e0e6:	and    BYTE PTR [rbp+0x6e],ah
  43e0e9:	fs cmp eax,0x22353122
  43e0ef:	(bad)  
  43e0f0:	or     ah,BYTE PTR ds:[rax]
  43e0f3:	and    BYTE PTR [rdi+rbp*1],bh
  43e0f6:	data16 ins BYTE PTR es:[rdi],dx
  43e0f8:	(bad)  
  43e0f9:	addr32 jae 0x43e13a
  43e0fc:	or     cl,BYTE PTR [rdx]
  43e0fe:	and    BYTE PTR [rax],ah
  43e100:	cmp    al,0x72
  43e102:	and    BYTE PTR gs:[esi+0x61],ch
  43e107:	ins    DWORD PTR es:[rdi],dx
  43e108:	gs cmp eax,0x6d6d7822
  43e10e:	xor    BYTE PTR [rdx],ah
  43e110:	and    BYTE PTR [rdx+0x69],ah
  43e113:	je     0x43e188
  43e115:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e11c:	cmp    BYTE PTR [rdx],ah
  43e11e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e122:	gs cmp eax,0x63657622
  43e128:	xor    DWORD PTR [rdx],esi
  43e12a:	cmp    BYTE PTR [rdx],ah
  43e12c:	and    BYTE PTR [rdx+0x65],dh
  43e12f:	outs   dx,BYTE PTR ds:[esi]
  43e131:	jne    0x43e1a0
  43e133:	cmp    eax,0x22303422
  43e138:	(bad)  
  43e139:	or     ah,BYTE PTR ds:[rax]
  43e13c:	and    BYTE PTR [rdx+rsi*2],bh
  43e13f:	and    BYTE PTR gs:[esi+0x61],ch
  43e144:	ins    DWORD PTR es:[rdi],dx
  43e145:	gs cmp eax,0x6d6d7822
  43e14b:	xor    DWORD PTR [rdx],esp
  43e14d:	and    BYTE PTR [rdx+0x69],ah
  43e150:	je     0x43e1c5
  43e152:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e159:	cmp    BYTE PTR [rdx],ah
  43e15b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e15f:	gs cmp eax,0x63657622
  43e165:	xor    DWORD PTR [rdx],esi
  43e167:	cmp    BYTE PTR [rdx],ah
  43e169:	(bad)  
  43e16a:	or     ah,BYTE PTR ds:[rax]
  43e16d:	and    BYTE PTR [rdx+rsi*2],bh
  43e170:	and    BYTE PTR gs:[esi+0x61],ch
  43e175:	ins    DWORD PTR es:[rdi],dx
  43e176:	gs cmp eax,0x6d6d7822
  43e17c:	xor    ah,BYTE PTR [rdx]
  43e17e:	and    BYTE PTR [rdx+0x69],ah
  43e181:	je     0x43e1f6
  43e183:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e18a:	cmp    BYTE PTR [rdx],ah
  43e18c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e190:	gs cmp eax,0x63657622
  43e196:	xor    DWORD PTR [rdx],esi
  43e198:	cmp    BYTE PTR [rdx],ah
  43e19a:	(bad)  
  43e19b:	or     ah,BYTE PTR ds:[rax]
  43e19e:	and    BYTE PTR [rdx+rsi*2],bh
  43e1a1:	and    BYTE PTR gs:[esi+0x61],ch
  43e1a6:	ins    DWORD PTR es:[rdi],dx
  43e1a7:	gs cmp eax,0x6d6d7822
  43e1ad:	xor    esp,DWORD PTR [rdx]
  43e1af:	and    BYTE PTR [rdx+0x69],ah
  43e1b2:	je     0x43e227
  43e1b4:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e1bb:	cmp    BYTE PTR [rdx],ah
  43e1bd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e1c1:	gs cmp eax,0x63657622
  43e1c7:	xor    DWORD PTR [rdx],esi
  43e1c9:	cmp    BYTE PTR [rdx],ah
  43e1cb:	(bad)  
  43e1cc:	or     ah,BYTE PTR ds:[rax]
  43e1cf:	and    BYTE PTR [rdx+rsi*2],bh
  43e1d2:	and    BYTE PTR gs:[esi+0x61],ch
  43e1d7:	ins    DWORD PTR es:[rdi],dx
  43e1d8:	gs cmp eax,0x6d6d7822
  43e1de:	xor    al,0x22
  43e1e0:	and    BYTE PTR [rdx+0x69],ah
  43e1e3:	je     0x43e258
  43e1e5:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e1ec:	cmp    BYTE PTR [rdx],ah
  43e1ee:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e1f2:	gs cmp eax,0x63657622
  43e1f8:	xor    DWORD PTR [rdx],esi
  43e1fa:	cmp    BYTE PTR [rdx],ah
  43e1fc:	(bad)  
  43e1fd:	or     ah,BYTE PTR ds:[rax]
  43e200:	and    BYTE PTR [rdx+rsi*2],bh
  43e203:	and    BYTE PTR gs:[esi+0x61],ch
  43e208:	ins    DWORD PTR es:[rdi],dx
  43e209:	gs cmp eax,0x6d6d7822
  43e20f:	xor    eax,0x69622022
  43e214:	je     0x43e289
  43e216:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e21d:	cmp    BYTE PTR [rdx],ah
  43e21f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e223:	gs cmp eax,0x63657622
  43e229:	xor    DWORD PTR [rdx],esi
  43e22b:	cmp    BYTE PTR [rdx],ah
  43e22d:	(bad)  
  43e22e:	or     ah,BYTE PTR ds:[rax]
  43e231:	and    BYTE PTR [rdx+rsi*2],bh
  43e234:	and    BYTE PTR gs:[esi+0x61],ch
  43e239:	ins    DWORD PTR es:[rdi],dx
  43e23a:	gs cmp eax,0x6d6d7822
  43e240:	and    ah,BYTE PTR ss:[rax]
  43e243:	(bad)  
  43e244:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e24c:	xor    DWORD PTR [rdx],esi
  43e24e:	cmp    BYTE PTR [rdx],ah
  43e250:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e254:	gs cmp eax,0x63657622
  43e25a:	xor    DWORD PTR [rdx],esi
  43e25c:	cmp    BYTE PTR [rdx],ah
  43e25e:	(bad)  
  43e25f:	or     ah,BYTE PTR ds:[rax]
  43e262:	and    BYTE PTR [rdx+rsi*2],bh
  43e265:	and    BYTE PTR gs:[esi+0x61],ch
  43e26a:	ins    DWORD PTR es:[rdi],dx
  43e26b:	gs cmp eax,0x6d6d7822
  43e271:	(bad)  
  43e272:	and    ah,BYTE PTR [rax]
  43e274:	(bad)  
  43e275:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e27d:	xor    DWORD PTR [rdx],esi
  43e27f:	cmp    BYTE PTR [rdx],ah
  43e281:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e285:	gs cmp eax,0x63657622
  43e28b:	xor    DWORD PTR [rdx],esi
  43e28d:	cmp    BYTE PTR [rdx],ah
  43e28f:	(bad)  
  43e290:	or     ah,BYTE PTR ds:[rax]
  43e293:	and    BYTE PTR [rdx+rsi*2],bh
  43e296:	and    BYTE PTR gs:[esi+0x61],ch
  43e29b:	ins    DWORD PTR es:[rdi],dx
  43e29c:	gs cmp eax,0x6d6d7822
  43e2a2:	cmp    BYTE PTR [rdx],ah
  43e2a4:	and    BYTE PTR [rdx+0x69],ah
  43e2a7:	je     0x43e31c
  43e2a9:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e2b0:	cmp    BYTE PTR [rdx],ah
  43e2b2:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e2b6:	gs cmp eax,0x63657622
  43e2bc:	xor    DWORD PTR [rdx],esi
  43e2be:	cmp    BYTE PTR [rdx],ah
  43e2c0:	(bad)  
  43e2c1:	or     ah,BYTE PTR ds:[rax]
  43e2c4:	and    BYTE PTR [rdx+rsi*2],bh
  43e2c7:	and    BYTE PTR gs:[esi+0x61],ch
  43e2cc:	ins    DWORD PTR es:[rdi],dx
  43e2cd:	gs cmp eax,0x6d6d7822
  43e2d3:	cmp    DWORD PTR [rdx],esp
  43e2d5:	and    BYTE PTR [rdx+0x69],ah
  43e2d8:	je     0x43e34d
  43e2da:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e2e1:	cmp    BYTE PTR [rdx],ah
  43e2e3:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e2e7:	gs cmp eax,0x63657622
  43e2ed:	xor    DWORD PTR [rdx],esi
  43e2ef:	cmp    BYTE PTR [rdx],ah
  43e2f1:	(bad)  
  43e2f2:	or     ah,BYTE PTR ds:[rax]
  43e2f5:	and    BYTE PTR [rdx+rsi*2],bh
  43e2f8:	and    BYTE PTR gs:[esi+0x61],ch
  43e2fd:	ins    DWORD PTR es:[rdi],dx
  43e2fe:	gs cmp eax,0x6d6d7822
  43e304:	xor    DWORD PTR [rax],esi
  43e306:	and    ah,BYTE PTR [rax]
  43e308:	(bad)  
  43e309:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e311:	xor    DWORD PTR [rdx],esi
  43e313:	cmp    BYTE PTR [rdx],ah
  43e315:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e319:	gs cmp eax,0x63657622
  43e31f:	xor    DWORD PTR [rdx],esi
  43e321:	cmp    BYTE PTR [rdx],ah
  43e323:	(bad)  
  43e324:	or     ah,BYTE PTR ds:[rax]
  43e327:	and    BYTE PTR [rdx+rsi*2],bh
  43e32a:	and    BYTE PTR gs:[esi+0x61],ch
  43e32f:	ins    DWORD PTR es:[rdi],dx
  43e330:	gs cmp eax,0x6d6d7822
  43e336:	xor    DWORD PTR [rcx],esi
  43e338:	and    ah,BYTE PTR [rax]
  43e33a:	(bad)  
  43e33b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e343:	xor    DWORD PTR [rdx],esi
  43e345:	cmp    BYTE PTR [rdx],ah
  43e347:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e34b:	gs cmp eax,0x63657622
  43e351:	xor    DWORD PTR [rdx],esi
  43e353:	cmp    BYTE PTR [rdx],ah
  43e355:	(bad)  
  43e356:	or     ah,BYTE PTR ds:[rax]
  43e359:	and    BYTE PTR [rdx+rsi*2],bh
  43e35c:	and    BYTE PTR gs:[esi+0x61],ch
  43e361:	ins    DWORD PTR es:[rdi],dx
  43e362:	gs cmp eax,0x6d6d7822
  43e368:	xor    DWORD PTR [rdx],esi
  43e36a:	and    ah,BYTE PTR [rax]
  43e36c:	(bad)  
  43e36d:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e375:	xor    DWORD PTR [rdx],esi
  43e377:	cmp    BYTE PTR [rdx],ah
  43e379:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e37d:	gs cmp eax,0x63657622
  43e383:	xor    DWORD PTR [rdx],esi
  43e385:	cmp    BYTE PTR [rdx],ah
  43e387:	(bad)  
  43e388:	or     ah,BYTE PTR ds:[rax]
  43e38b:	and    BYTE PTR [rdx+rsi*2],bh
  43e38e:	and    BYTE PTR gs:[esi+0x61],ch
  43e393:	ins    DWORD PTR es:[rdi],dx
  43e394:	gs cmp eax,0x6d6d7822
  43e39a:	xor    DWORD PTR [rbx],esi
  43e39c:	and    ah,BYTE PTR [rax]
  43e39e:	(bad)  
  43e39f:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e3a7:	xor    DWORD PTR [rdx],esi
  43e3a9:	cmp    BYTE PTR [rdx],ah
  43e3ab:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e3af:	gs cmp eax,0x63657622
  43e3b5:	xor    DWORD PTR [rdx],esi
  43e3b7:	cmp    BYTE PTR [rdx],ah
  43e3b9:	(bad)  
  43e3ba:	or     ah,BYTE PTR ds:[rax]
  43e3bd:	and    BYTE PTR [rdx+rsi*2],bh
  43e3c0:	and    BYTE PTR gs:[esi+0x61],ch
  43e3c5:	ins    DWORD PTR es:[rdi],dx
  43e3c6:	gs cmp eax,0x6d6d7822
  43e3cc:	xor    DWORD PTR [rdx+riz*1],esi
  43e3cf:	and    BYTE PTR [rdx+0x69],ah
  43e3d2:	je     0x43e447
  43e3d4:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e3db:	cmp    BYTE PTR [rdx],ah
  43e3dd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e3e1:	gs cmp eax,0x63657622
  43e3e7:	xor    DWORD PTR [rdx],esi
  43e3e9:	cmp    BYTE PTR [rdx],ah
  43e3eb:	(bad)  
  43e3ec:	or     ah,BYTE PTR ds:[rax]
  43e3ef:	and    BYTE PTR [rdx+rsi*2],bh
  43e3f2:	and    BYTE PTR gs:[esi+0x61],ch
  43e3f7:	ins    DWORD PTR es:[rdi],dx
  43e3f8:	gs cmp eax,0x6d6d7822
  43e3fe:	xor    DWORD PTR [rip+0x69622022],esi        # 0x69a60426
  43e404:	je     0x43e479
  43e406:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  43e40d:	cmp    BYTE PTR [rdx],ah
  43e40f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e413:	gs cmp eax,0x63657622
  43e419:	xor    DWORD PTR [rdx],esi
  43e41b:	cmp    BYTE PTR [rdx],ah
  43e41d:	(bad)  
  43e41e:	or     cl,BYTE PTR ds:[rdx]
  43e421:	and    BYTE PTR [rax],ah
  43e423:	cmp    al,0x72
  43e425:	and    BYTE PTR gs:[esi+0x61],ch
  43e42a:	ins    DWORD PTR es:[rdi],dx
  43e42b:	gs cmp eax,0x63786d22
  43e431:	jae    0x43e4a5
  43e433:	and    ah,BYTE PTR [rax]
  43e435:	(bad)  
  43e436:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e43e:	xor    esi,DWORD PTR [rdx]
  43e440:	and    ah,BYTE PTR [rax]
  43e442:	je     0x43e4bd
  43e444:	jo     0x43e4ab
  43e446:	cmp    eax,0x38336922
  43e44b:	ss pop rdi
  43e44d:	ins    DWORD PTR es:[rdi],dx
  43e44e:	js     0x43e4b3
  43e450:	jae    0x43e4c4
  43e452:	and    ah,BYTE PTR [rax]
  43e454:	addr32 jb 0x43e4c6
  43e457:	jne    0x43e4c9
  43e459:	cmp    eax,0x63657622
  43e45e:	je     0x43e4cf
  43e460:	jb     0x43e484
  43e462:	(bad)  
  43e463:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43e467:	data16 gs (bad) 
  43e46a:	je     0x43e4e1
  43e46c:	jb     0x43e4d3
  43e46e:	or     al,BYTE PTR ds:[rax]
	...
  43e47d:	add    BYTE PTR [rax],al
  43e47f:	add    BYTE PTR [rdi+rdi*1],bh
  43e482:	js     0x43e4f1
  43e484:	ins    BYTE PTR es:[rdi],dx
  43e485:	and    BYTE PTR [rsi+0x65],dh
  43e488:	jb     0x43e4fd
  43e48a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43e491:	xor    BYTE PTR [rdx],ah
  43e493:	(bad)  
  43e494:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43e498:	sub    eax,0x6f43202d
  43e49d:	jo     0x43e518
  43e49f:	jb     0x43e50a
  43e4a1:	addr32 push 0x43282074
  43e4a7:	sub    DWORD PTR [rax],esp
  43e4a9:	xor    dh,BYTE PTR [rax]
  43e4ab:	xor    DWORD PTR [rax],esi
  43e4ad:	sub    eax,0x37313032
  43e4b2:	and    BYTE PTR [rsi+0x72],al
  43e4b5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43e4ba:	data16 je 0x43e534
  43e4bd:	(bad)  
  43e4be:	jb     0x43e525
  43e4c0:	and    BYTE PTR [rsi+0x6f],al
  43e4c3:	jne    0x43e533
  43e4c5:	fs (bad) 
  43e4c7:	je     0x43e532
  43e4c9:	outs   dx,DWORD PTR ds:[rsi]
  43e4ca:	outs   dx,BYTE PTR ds:[rsi]
  43e4cb:	sub    al,0x20
  43e4cd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43e4cf:	movsxd ebp,DWORD PTR [rsi]
  43e4d1:	or     cl,BYTE PTR [rdx]
  43e4d3:	and    BYTE PTR [rax],ah
  43e4d5:	and    BYTE PTR [rax],ah
  43e4d7:	and    BYTE PTR [rbx+0x6f],al
  43e4da:	jo     0x43e555
  43e4dc:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43e4e3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43e4e7:	je     0x43e55b
  43e4e9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43e4f0:	and    BYTE PTR [rdi+0x66],ch
  43e4f3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43e4f7:	jae    0x43e519
  43e4f9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43e500:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43e508:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43e510:	outs   dx,DWORD PTR ds:[rsi]
  43e511:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43e519:	outs   dx,DWORD PTR ds:[rsi]
  43e51a:	outs   dx,BYTE PTR ds:[rsi]
  43e51b:	sub    al,0xa
  43e51d:	and    BYTE PTR [rax],ah
  43e51f:	and    BYTE PTR [rax],ah
  43e521:	and    BYTE PTR [rcx+0x72],ah
  43e524:	and    BYTE PTR gs:[rax+0x65],dh
  43e528:	jb     0x43e597
  43e52a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43e532:	and    BYTE PTR [rcx+0x6e],ah
  43e535:	jns    0x43e557
  43e537:	ins    DWORD PTR es:[rdi],dx
  43e538:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43e541:	push   0x2074756f
  43e546:	jb     0x43e5b7
  43e548:	jns    0x43e5ab
  43e54a:	ins    BYTE PTR es:[rdi],dx
  43e54b:	je     0x43e5c6
  43e54d:	and    BYTE PTR [rax+0x72],dh
  43e550:	outs   dx,DWORD PTR ds:[rsi]
  43e551:	jbe    0x43e5bc
  43e553:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43e55a:	and    BYTE PTR [rbx+0x6f],ah
  43e55d:	jo     0x43e5d8
  43e55f:	jb     0x43e5ca
  43e561:	addr32 push 0x20200a74
  43e567:	and    BYTE PTR [rax],ah
  43e569:	and    BYTE PTR [rsi+0x6f],ch
  43e56c:	je     0x43e5d7
  43e56e:	movsxd esp,DWORD PTR [rbp+0x20]
  43e571:	(bad)  
  43e572:	outs   dx,BYTE PTR ds:[rsi]
  43e573:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43e578:	jae    0x43e59a
  43e57a:	outs   dx,BYTE PTR ds:[rsi]
  43e57b:	outs   dx,DWORD PTR ds:[rsi]
  43e57c:	je     0x43e5e7
  43e57e:	movsxd esp,DWORD PTR [rbp+0x20]
  43e581:	(bad)  
  43e582:	jb     0x43e5e9
  43e584:	and    BYTE PTR [rax+0x72],dh
  43e587:	gs jae 0x43e5ef
  43e58a:	jb     0x43e602
  43e58c:	gs fs and BYTE PTR cs:[rax],ah
  43e591:	sub    eax,0xa0a3e2d
  43e596:	cmp    al,0x21
  43e598:	rex.R
  43e599:	rex.WRXB
  43e59a:	rex.XB push r12
  43e59c:	pop    rcx
  43e59d:	push   rax
  43e59e:	and    BYTE PTR [r14+0x65],r12b
  43e5a2:	(bad)  
  43e5a3:	je     0x43e61a
  43e5a5:	jb     0x43e60c
  43e5a7:	and    BYTE PTR [rbx+0x59],dl
  43e5aa:	push   rbx
  43e5ab:	push   rsp
  43e5ac:	rex.RB
  43e5ad:	rex.WRB and BYTE PTR [r10],r12b
  43e5b0:	addr32 fs (bad) 
  43e5b3:	sub    eax,0x67726174
  43e5b8:	gs je  0x43e5e9
  43e5bb:	fs je  0x43e622
  43e5be:	and    bh,BYTE PTR [rsi]
  43e5c0:	or     bh,BYTE PTR [rsi+riz*2]
  43e5c3:	gs (bad) 
  43e5c5:	je     0x43e63c
  43e5c7:	jb     0x43e62e
  43e5c9:	and    BYTE PTR [rsi+0x61],ch
  43e5cc:	ins    DWORD PTR es:[rdi],dx
  43e5cd:	gs cmp eax,0x67726f22
  43e5d3:	outs   dx,BYTE PTR cs:[esi]
  43e5d6:	jne    0x43e606
  43e5d8:	addr32 fs (bad) 
  43e5db:	imul   esi,DWORD PTR cs:[rbx],0x632e3638
  43e5e2:	outs   dx,DWORD PTR ds:[rsi]
  43e5e3:	jb     0x43e64a
  43e5e5:	and    bh,BYTE PTR [rsi]
  43e5e7:	or     ah,BYTE PTR [rax]
  43e5e9:	and    BYTE PTR [rsi+riz*2],bh
  43e5ec:	ins    BYTE PTR es:[rdi],dx
  43e5ed:	(bad)  
  43e5ee:	addr32 jae 0x43e611
  43e5f1:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x36383369
  43e5f9:	pop    rdi
  43e5fa:	gs data16 ins BYTE PTR es:[rdi],dx
  43e5fd:	(bad)  
  43e5fe:	addr32 jae 0x43e623
  43e601:	and    BYTE PTR [rbx+0x69],dh
  43e604:	jp     0x43e66b
  43e606:	cmp    eax,0x3e223422
  43e60b:	or     ah,BYTE PTR [rax]
  43e60d:	and    BYTE PTR [rax],ah
  43e60f:	and    BYTE PTR [rsi+riz*2],bh
  43e612:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e619:	ins    DWORD PTR es:[rdi],dx
  43e61a:	gs cmp eax,0x22464322
  43e620:	and    BYTE PTR [rbx+0x74],dh
  43e623:	(bad)  
  43e624:	jb     0x43e69a
  43e626:	cmp    eax,0x20223022
  43e62b:	outs   dx,BYTE PTR gs:[rsi]
  43e62d:	fs cmp eax,0x2f223022
  43e633:	or     ah,BYTE PTR ds:[rax]
  43e636:	and    BYTE PTR [rax],ah
  43e638:	and    BYTE PTR [rsi+riz*2],bh
  43e63b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e642:	ins    DWORD PTR es:[rdi],dx
  43e643:	gs cmp eax,0x73202222
  43e649:	je     0x43e6ac
  43e64b:	jb     0x43e6c1
  43e64d:	cmp    eax,0x20223122
  43e652:	outs   dx,BYTE PTR gs:[rsi]
  43e654:	fs cmp eax,0x2f223122
  43e65a:	or     ah,BYTE PTR ds:[rax]
  43e65d:	and    BYTE PTR [rax],ah
  43e65f:	and    BYTE PTR [rsi+riz*2],bh
  43e662:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e669:	ins    DWORD PTR es:[rdi],dx
  43e66a:	gs cmp eax,0x22465022
  43e670:	and    BYTE PTR [rbx+0x74],dh
  43e673:	(bad)  
  43e674:	jb     0x43e6ea
  43e676:	cmp    eax,0x20223222
  43e67b:	outs   dx,BYTE PTR gs:[rsi]
  43e67d:	fs cmp eax,0x2f223222
  43e683:	or     ah,BYTE PTR ds:[rax]
  43e686:	and    BYTE PTR [rax],ah
  43e688:	and    BYTE PTR [rsi+riz*2],bh
  43e68b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e692:	ins    DWORD PTR es:[rdi],dx
  43e693:	gs cmp eax,0x22464122
  43e699:	and    BYTE PTR [rbx+0x74],dh
  43e69c:	(bad)  
  43e69d:	jb     0x43e713
  43e69f:	cmp    eax,0x20223422
  43e6a4:	outs   dx,BYTE PTR gs:[rsi]
  43e6a6:	fs cmp eax,0x2f223422
  43e6ac:	or     ah,BYTE PTR ds:[rax]
  43e6af:	and    BYTE PTR [rax],ah
  43e6b1:	and    BYTE PTR [rsi+riz*2],bh
  43e6b4:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e6bb:	ins    DWORD PTR es:[rdi],dx
  43e6bc:	gs cmp eax,0x22465a22
  43e6c2:	and    BYTE PTR [rbx+0x74],dh
  43e6c5:	(bad)  
  43e6c6:	jb     0x43e73c
  43e6c8:	cmp    eax,0x20223622
  43e6cd:	outs   dx,BYTE PTR gs:[rsi]
  43e6cf:	fs cmp eax,0x2f223622
  43e6d5:	or     ah,BYTE PTR ds:[rax]
  43e6d8:	and    BYTE PTR [rax],ah
  43e6da:	and    BYTE PTR [rsi+riz*2],bh
  43e6dd:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e6e4:	ins    DWORD PTR es:[rdi],dx
  43e6e5:	gs cmp eax,0x22465322
  43e6eb:	and    BYTE PTR [rbx+0x74],dh
  43e6ee:	(bad)  
  43e6ef:	jb     0x43e765
  43e6f1:	cmp    eax,0x20223722
  43e6f6:	outs   dx,BYTE PTR gs:[rsi]
  43e6f8:	fs cmp eax,0x2f223722
  43e6fe:	or     ah,BYTE PTR ds:[rax]
  43e701:	and    BYTE PTR [rax],ah
  43e703:	and    BYTE PTR [rsi+riz*2],bh
  43e706:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e70d:	ins    DWORD PTR es:[rdi],dx
  43e70e:	gs cmp eax,0x22465422
  43e714:	and    BYTE PTR [rbx+0x74],dh
  43e717:	(bad)  
  43e718:	jb     0x43e78e
  43e71a:	cmp    eax,0x20223822
  43e71f:	outs   dx,BYTE PTR gs:[rsi]
  43e721:	fs cmp eax,0x2f223822
  43e727:	or     ah,BYTE PTR ds:[rax]
  43e72a:	and    BYTE PTR [rax],ah
  43e72c:	and    BYTE PTR [rsi+riz*2],bh
  43e72f:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e736:	ins    DWORD PTR es:[rdi],dx
  43e737:	gs cmp eax,0x22464922
  43e73d:	and    BYTE PTR [rbx+0x74],dh
  43e740:	(bad)  
  43e741:	jb     0x43e7b7
  43e743:	cmp    eax,0x20223922
  43e748:	outs   dx,BYTE PTR gs:[rsi]
  43e74a:	fs cmp eax,0x2f223922
  43e750:	or     ah,BYTE PTR ds:[rax]
  43e753:	and    BYTE PTR [rax],ah
  43e755:	and    BYTE PTR [rsi+riz*2],bh
  43e758:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e75f:	ins    DWORD PTR es:[rdi],dx
  43e760:	gs cmp eax,0x22464422
  43e766:	and    BYTE PTR [rbx+0x74],dh
  43e769:	(bad)  
  43e76a:	jb     0x43e7e0
  43e76c:	cmp    eax,0x22303122
  43e771:	and    BYTE PTR [rbp+0x6e],ah
  43e774:	fs cmp eax,0x22303122
  43e77a:	(bad)  
  43e77b:	or     ah,BYTE PTR ds:[rax]
  43e77e:	and    BYTE PTR [rax],ah
  43e780:	and    BYTE PTR [rsi+riz*2],bh
  43e783:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e78a:	ins    DWORD PTR es:[rdi],dx
  43e78b:	gs cmp eax,0x22464f22
  43e791:	and    BYTE PTR [rbx+0x74],dh
  43e794:	(bad)  
  43e795:	jb     0x43e80b
  43e797:	cmp    eax,0x22313122
  43e79c:	and    BYTE PTR [rbp+0x6e],ah
  43e79f:	fs cmp eax,0x22313122
  43e7a5:	(bad)  
  43e7a6:	or     ah,BYTE PTR ds:[rax]
  43e7a9:	and    BYTE PTR [rax],ah
  43e7ab:	and    BYTE PTR [rsi+riz*2],bh
  43e7ae:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e7b5:	ins    DWORD PTR es:[rdi],dx
  43e7b6:	gs cmp eax,0x22544e22
  43e7bc:	and    BYTE PTR [rbx+0x74],dh
  43e7bf:	(bad)  
  43e7c0:	jb     0x43e836
  43e7c2:	cmp    eax,0x22343122
  43e7c7:	and    BYTE PTR [rbp+0x6e],ah
  43e7ca:	fs cmp eax,0x22343122
  43e7d0:	(bad)  
  43e7d1:	or     ah,BYTE PTR ds:[rax]
  43e7d4:	and    BYTE PTR [rax],ah
  43e7d6:	and    BYTE PTR [rsi+riz*2],bh
  43e7d9:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e7e0:	ins    DWORD PTR es:[rdi],dx
  43e7e1:	gs cmp eax,0x22465222
  43e7e7:	and    BYTE PTR [rbx+0x74],dh
  43e7ea:	(bad)  
  43e7eb:	jb     0x43e861
  43e7ed:	cmp    eax,0x22363122
  43e7f2:	and    BYTE PTR [rbp+0x6e],ah
  43e7f5:	fs cmp eax,0x22363122
  43e7fb:	(bad)  
  43e7fc:	or     ah,BYTE PTR ds:[rax]
  43e7ff:	and    BYTE PTR [rax],ah
  43e801:	and    BYTE PTR [rsi+riz*2],bh
  43e804:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e80b:	ins    DWORD PTR es:[rdi],dx
  43e80c:	gs cmp eax,0x224d5622
  43e812:	and    BYTE PTR [rbx+0x74],dh
  43e815:	(bad)  
  43e816:	jb     0x43e88c
  43e818:	cmp    eax,0x22373122
  43e81d:	and    BYTE PTR [rbp+0x6e],ah
  43e820:	fs cmp eax,0x22373122
  43e826:	(bad)  
  43e827:	or     ah,BYTE PTR ds:[rax]
  43e82a:	and    BYTE PTR [rax],ah
  43e82c:	and    BYTE PTR [rsi+riz*2],bh
  43e82f:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e836:	ins    DWORD PTR es:[rdi],dx
  43e837:	gs cmp eax,0x22434122
  43e83d:	and    BYTE PTR [rbx+0x74],dh
  43e840:	(bad)  
  43e841:	jb     0x43e8b7
  43e843:	cmp    eax,0x22383122
  43e848:	and    BYTE PTR [rbp+0x6e],ah
  43e84b:	fs cmp eax,0x22383122
  43e851:	(bad)  
  43e852:	or     ah,BYTE PTR ds:[rax]
  43e855:	and    BYTE PTR [rax],ah
  43e857:	and    BYTE PTR [rsi+riz*2],bh
  43e85a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e861:	ins    DWORD PTR es:[rdi],dx
  43e862:	gs cmp eax,0x46495622
  43e868:	and    ah,BYTE PTR [rax]
  43e86a:	jae    0x43e8e0
  43e86c:	(bad)  
  43e86d:	jb     0x43e8e3
  43e86f:	cmp    eax,0x22393122
  43e874:	and    BYTE PTR [rbp+0x6e],ah
  43e877:	fs cmp eax,0x22393122
  43e87d:	(bad)  
  43e87e:	or     ah,BYTE PTR ds:[rax]
  43e881:	and    BYTE PTR [rax],ah
  43e883:	and    BYTE PTR [rsi+riz*2],bh
  43e886:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e88d:	ins    DWORD PTR es:[rdi],dx
  43e88e:	gs cmp eax,0x50495622
  43e894:	and    ah,BYTE PTR [rax]
  43e896:	jae    0x43e90c
  43e898:	(bad)  
  43e899:	jb     0x43e90f
  43e89b:	cmp    eax,0x22303222
  43e8a0:	and    BYTE PTR [rbp+0x6e],ah
  43e8a3:	fs cmp eax,0x22303222
  43e8a9:	(bad)  
  43e8aa:	or     ah,BYTE PTR ds:[rax]
  43e8ad:	and    BYTE PTR [rax],ah
  43e8af:	and    BYTE PTR [rsi+riz*2],bh
  43e8b2:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  43e8b9:	ins    DWORD PTR es:[rdi],dx
  43e8ba:	gs cmp eax,0x22444922
  43e8c0:	and    BYTE PTR [rbx+0x74],dh
  43e8c3:	(bad)  
  43e8c4:	jb     0x43e93a
  43e8c6:	cmp    eax,0x22313222
  43e8cb:	and    BYTE PTR [rbp+0x6e],ah
  43e8ce:	fs cmp eax,0x22313222
  43e8d4:	(bad)  
  43e8d5:	or     ah,BYTE PTR ds:[rax]
  43e8d8:	and    BYTE PTR [rdi+rbp*1],bh
  43e8db:	data16 ins BYTE PTR es:[rdi],dx
  43e8dd:	(bad)  
  43e8de:	addr32 jae 0x43e91f
  43e8e1:	or     cl,BYTE PTR [rdx]
  43e8e3:	and    BYTE PTR [rax],ah
  43e8e5:	cmp    al,0x72
  43e8e7:	and    BYTE PTR gs:[esi+0x61],ch
  43e8ec:	ins    DWORD PTR es:[rdi],dx
  43e8ed:	gs cmp eax,0x78617222
  43e8f3:	and    ah,BYTE PTR [rax]
  43e8f5:	(bad)  
  43e8f6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e8fe:	ss xor al,0x22
  43e901:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e905:	gs cmp eax,0x746e6922
  43e90b:	ss xor al,0x22
  43e90e:	(bad)  
  43e90f:	or     ah,BYTE PTR ds:[rax]
  43e912:	and    BYTE PTR [rdx+rsi*2],bh
  43e915:	and    BYTE PTR gs:[esi+0x61],ch
  43e91a:	ins    DWORD PTR es:[rdi],dx
  43e91b:	gs cmp eax,0x78627222
  43e921:	and    ah,BYTE PTR [rax]
  43e923:	(bad)  
  43e924:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e92c:	ss xor al,0x22
  43e92f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e933:	gs cmp eax,0x746e6922
  43e939:	ss xor al,0x22
  43e93c:	(bad)  
  43e93d:	or     ah,BYTE PTR ds:[rax]
  43e940:	and    BYTE PTR [rdx+rsi*2],bh
  43e943:	and    BYTE PTR gs:[esi+0x61],ch
  43e948:	ins    DWORD PTR es:[rdi],dx
  43e949:	gs cmp eax,0x78637222
  43e94f:	and    ah,BYTE PTR [rax]
  43e951:	(bad)  
  43e952:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e95a:	ss xor al,0x22
  43e95d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e961:	gs cmp eax,0x746e6922
  43e967:	ss xor al,0x22
  43e96a:	(bad)  
  43e96b:	or     ah,BYTE PTR ds:[rax]
  43e96e:	and    BYTE PTR [rdx+rsi*2],bh
  43e971:	and    BYTE PTR gs:[esi+0x61],ch
  43e976:	ins    DWORD PTR es:[rdi],dx
  43e977:	gs cmp eax,0x78647222
  43e97d:	and    ah,BYTE PTR [rax]
  43e97f:	(bad)  
  43e980:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e988:	ss xor al,0x22
  43e98b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e98f:	gs cmp eax,0x746e6922
  43e995:	ss xor al,0x22
  43e998:	(bad)  
  43e999:	or     ah,BYTE PTR ds:[rax]
  43e99c:	and    BYTE PTR [rdx+rsi*2],bh
  43e99f:	and    BYTE PTR gs:[esi+0x61],ch
  43e9a4:	ins    DWORD PTR es:[rdi],dx
  43e9a5:	gs cmp eax,0x69737222
  43e9ab:	and    ah,BYTE PTR [rax]
  43e9ad:	(bad)  
  43e9ae:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e9b6:	ss xor al,0x22
  43e9b9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e9bd:	gs cmp eax,0x746e6922
  43e9c3:	ss xor al,0x22
  43e9c6:	(bad)  
  43e9c7:	or     ah,BYTE PTR ds:[rax]
  43e9ca:	and    BYTE PTR [rdx+rsi*2],bh
  43e9cd:	and    BYTE PTR gs:[esi+0x61],ch
  43e9d2:	ins    DWORD PTR es:[rdi],dx
  43e9d3:	gs cmp eax,0x69647222
  43e9d9:	and    ah,BYTE PTR [rax]
  43e9db:	(bad)  
  43e9dc:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43e9e4:	ss xor al,0x22
  43e9e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43e9eb:	gs cmp eax,0x746e6922
  43e9f1:	ss xor al,0x22
  43e9f4:	(bad)  
  43e9f5:	or     ah,BYTE PTR ds:[rax]
  43e9f8:	and    BYTE PTR [rdx+rsi*2],bh
  43e9fb:	and    BYTE PTR gs:[esi+0x61],ch
  43ea00:	ins    DWORD PTR es:[rdi],dx
  43ea01:	gs cmp eax,0x70627222
  43ea07:	and    ah,BYTE PTR [rax]
  43ea09:	(bad)  
  43ea0a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ea12:	ss xor al,0x22
  43ea15:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ea19:	gs cmp eax,0x74616422
  43ea1f:	(bad)  
  43ea20:	pop    rdi
  43ea21:	jo     0x43ea97
  43ea23:	jb     0x43ea47
  43ea25:	(bad)  
  43ea26:	or     ah,BYTE PTR ds:[rax]
  43ea29:	and    BYTE PTR [rdx+rsi*2],bh
  43ea2c:	and    BYTE PTR gs:[esi+0x61],ch
  43ea31:	ins    DWORD PTR es:[rdi],dx
  43ea32:	gs cmp eax,0x70737222
  43ea38:	and    ah,BYTE PTR [rax]
  43ea3a:	(bad)  
  43ea3b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ea43:	ss xor al,0x22
  43ea46:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ea4a:	gs cmp eax,0x74616422
  43ea50:	(bad)  
  43ea51:	pop    rdi
  43ea52:	jo     0x43eac8
  43ea54:	jb     0x43ea78
  43ea56:	(bad)  
  43ea57:	or     ah,BYTE PTR ds:[rax]
  43ea5a:	and    BYTE PTR [rdx+rsi*2],bh
  43ea5d:	and    BYTE PTR gs:[esi+0x61],ch
  43ea62:	ins    DWORD PTR es:[rdi],dx
  43ea63:	gs cmp eax,0x22387222
  43ea69:	and    BYTE PTR [rdx+0x69],ah
  43ea6c:	je     0x43eae1
  43ea6e:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43ea75:	and    ah,BYTE PTR [rax]
  43ea77:	je     0x43eaf2
  43ea79:	jo     0x43eae0
  43ea7b:	cmp    eax,0x746e6922
  43ea80:	ss xor al,0x22
  43ea83:	(bad)  
  43ea84:	or     ah,BYTE PTR ds:[rax]
  43ea87:	and    BYTE PTR [rdx+rsi*2],bh
  43ea8a:	and    BYTE PTR gs:[esi+0x61],ch
  43ea8f:	ins    DWORD PTR es:[rdi],dx
  43ea90:	gs cmp eax,0x22397222
  43ea96:	and    BYTE PTR [rdx+0x69],ah
  43ea99:	je     0x43eb0e
  43ea9b:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  43eaa2:	and    ah,BYTE PTR [rax]
  43eaa4:	je     0x43eb1f
  43eaa6:	jo     0x43eb0d
  43eaa8:	cmp    eax,0x746e6922
  43eaad:	ss xor al,0x22
  43eab0:	(bad)  
  43eab1:	or     ah,BYTE PTR ds:[rax]
  43eab4:	and    BYTE PTR [rdx+rsi*2],bh
  43eab7:	and    BYTE PTR gs:[esi+0x61],ch
  43eabc:	ins    DWORD PTR es:[rdi],dx
  43eabd:	gs cmp eax,0x30317222
  43eac3:	and    ah,BYTE PTR [rax]
  43eac5:	(bad)  
  43eac6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eace:	ss xor al,0x22
  43ead1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ead5:	gs cmp eax,0x746e6922
  43eadb:	ss xor al,0x22
  43eade:	(bad)  
  43eadf:	or     ah,BYTE PTR ds:[rax]
  43eae2:	and    BYTE PTR [rdx+rsi*2],bh
  43eae5:	and    BYTE PTR gs:[esi+0x61],ch
  43eaea:	ins    DWORD PTR es:[rdi],dx
  43eaeb:	gs cmp eax,0x31317222
  43eaf1:	and    ah,BYTE PTR [rax]
  43eaf3:	(bad)  
  43eaf4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eafc:	ss xor al,0x22
  43eaff:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43eb03:	gs cmp eax,0x746e6922
  43eb09:	ss xor al,0x22
  43eb0c:	(bad)  
  43eb0d:	or     ah,BYTE PTR ds:[rax]
  43eb10:	and    BYTE PTR [rdx+rsi*2],bh
  43eb13:	and    BYTE PTR gs:[esi+0x61],ch
  43eb18:	ins    DWORD PTR es:[rdi],dx
  43eb19:	gs cmp eax,0x32317222
  43eb1f:	and    ah,BYTE PTR [rax]
  43eb21:	(bad)  
  43eb22:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eb2a:	ss xor al,0x22
  43eb2d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43eb31:	gs cmp eax,0x746e6922
  43eb37:	ss xor al,0x22
  43eb3a:	(bad)  
  43eb3b:	or     ah,BYTE PTR ds:[rax]
  43eb3e:	and    BYTE PTR [rdx+rsi*2],bh
  43eb41:	and    BYTE PTR gs:[esi+0x61],ch
  43eb46:	ins    DWORD PTR es:[rdi],dx
  43eb47:	gs cmp eax,0x33317222
  43eb4d:	and    ah,BYTE PTR [rax]
  43eb4f:	(bad)  
  43eb50:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eb58:	ss xor al,0x22
  43eb5b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43eb5f:	gs cmp eax,0x746e6922
  43eb65:	ss xor al,0x22
  43eb68:	(bad)  
  43eb69:	or     ah,BYTE PTR ds:[rax]
  43eb6c:	and    BYTE PTR [rdx+rsi*2],bh
  43eb6f:	and    BYTE PTR gs:[esi+0x61],ch
  43eb74:	ins    DWORD PTR es:[rdi],dx
  43eb75:	gs cmp eax,0x34317222
  43eb7b:	and    ah,BYTE PTR [rax]
  43eb7d:	(bad)  
  43eb7e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eb86:	ss xor al,0x22
  43eb89:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43eb8d:	gs cmp eax,0x746e6922
  43eb93:	ss xor al,0x22
  43eb96:	(bad)  
  43eb97:	or     ah,BYTE PTR ds:[rax]
  43eb9a:	and    BYTE PTR [rdx+rsi*2],bh
  43eb9d:	and    BYTE PTR gs:[esi+0x61],ch
  43eba2:	ins    DWORD PTR es:[rdi],dx
  43eba3:	gs cmp eax,0x35317222
  43eba9:	and    ah,BYTE PTR [rax]
  43ebab:	(bad)  
  43ebac:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ebb4:	ss xor al,0x22
  43ebb7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ebbb:	gs cmp eax,0x746e6922
  43ebc1:	ss xor al,0x22
  43ebc4:	(bad)  
  43ebc5:	or     cl,BYTE PTR ds:[rdx]
  43ebc8:	and    BYTE PTR [rax],ah
  43ebca:	cmp    al,0x72
  43ebcc:	and    BYTE PTR gs:[esi+0x61],ch
  43ebd1:	ins    DWORD PTR es:[rdi],dx
  43ebd2:	gs cmp eax,0x70697222
  43ebd8:	and    ah,BYTE PTR [rax]
  43ebda:	(bad)  
  43ebdb:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ebe3:	ss xor al,0x22
  43ebe6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ebea:	gs cmp eax,0x646f6322
  43ebf0:	gs pop rdi
  43ebf2:	jo     0x43ec68
  43ebf4:	jb     0x43ec18
  43ebf6:	(bad)  
  43ebf7:	or     ah,BYTE PTR ds:[rax]
  43ebfa:	and    BYTE PTR [rdx+rsi*2],bh
  43ebfd:	and    BYTE PTR gs:[esi+0x61],ch
  43ec02:	ins    DWORD PTR es:[rdi],dx
  43ec03:	gs cmp eax,0x6c666522
  43ec09:	(bad)  
  43ec0a:	addr32 jae 0x43ec2f
  43ec0d:	and    BYTE PTR [rdx+0x69],ah
  43ec10:	je     0x43ec85
  43ec12:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ec19:	and    ah,BYTE PTR [rax]
  43ec1b:	je     0x43ec96
  43ec1d:	jo     0x43ec84
  43ec1f:	cmp    eax,0x38336922
  43ec24:	ss pop rdi
  43ec26:	gs data16 ins BYTE PTR es:[rdi],dx
  43ec29:	(bad)  
  43ec2a:	addr32 jae 0x43ec4f
  43ec2d:	(bad)  
  43ec2e:	or     ah,BYTE PTR ds:[rax]
  43ec31:	and    BYTE PTR [rdx+rsi*2],bh
  43ec34:	and    BYTE PTR gs:[esi+0x61],ch
  43ec39:	ins    DWORD PTR es:[rdi],dx
  43ec3a:	gs cmp eax,0x22736322
  43ec40:	and    BYTE PTR [rdx+0x69],ah
  43ec43:	je     0x43ecb8
  43ec45:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ec4c:	and    ah,BYTE PTR [rax]
  43ec4e:	je     0x43ecc9
  43ec50:	jo     0x43ecb7
  43ec52:	cmp    eax,0x746e6922
  43ec57:	xor    esi,DWORD PTR [rdx]
  43ec59:	and    ch,BYTE PTR [rdi]
  43ec5b:	or     ah,BYTE PTR ds:[rax]
  43ec5e:	and    BYTE PTR [rdx+rsi*2],bh
  43ec61:	and    BYTE PTR gs:[esi+0x61],ch
  43ec66:	ins    DWORD PTR es:[rdi],dx
  43ec67:	gs cmp eax,0x22737322
  43ec6d:	and    BYTE PTR [rdx+0x69],ah
  43ec70:	je     0x43ece5
  43ec72:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ec79:	and    ah,BYTE PTR [rax]
  43ec7b:	je     0x43ecf6
  43ec7d:	jo     0x43ece4
  43ec7f:	cmp    eax,0x746e6922
  43ec84:	xor    esi,DWORD PTR [rdx]
  43ec86:	and    ch,BYTE PTR [rdi]
  43ec88:	or     ah,BYTE PTR ds:[rax]
  43ec8b:	and    BYTE PTR [rdx+rsi*2],bh
  43ec8e:	and    BYTE PTR gs:[esi+0x61],ch
  43ec93:	ins    DWORD PTR es:[rdi],dx
  43ec94:	gs cmp eax,0x22736422
  43ec9a:	and    BYTE PTR [rdx+0x69],ah
  43ec9d:	je     0x43ed12
  43ec9f:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43eca6:	and    ah,BYTE PTR [rax]
  43eca8:	je     0x43ed23
  43ecaa:	jo     0x43ed11
  43ecac:	cmp    eax,0x746e6922
  43ecb1:	xor    esi,DWORD PTR [rdx]
  43ecb3:	and    ch,BYTE PTR [rdi]
  43ecb5:	or     ah,BYTE PTR ds:[rax]
  43ecb8:	and    BYTE PTR [rdx+rsi*2],bh
  43ecbb:	and    BYTE PTR gs:[esi+0x61],ch
  43ecc0:	ins    DWORD PTR es:[rdi],dx
  43ecc1:	gs cmp eax,0x22736522
  43ecc7:	and    BYTE PTR [rdx+0x69],ah
  43ecca:	je     0x43ed3f
  43eccc:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ecd3:	and    ah,BYTE PTR [rax]
  43ecd5:	je     0x43ed50
  43ecd7:	jo     0x43ed3e
  43ecd9:	cmp    eax,0x746e6922
  43ecde:	xor    esi,DWORD PTR [rdx]
  43ece0:	and    ch,BYTE PTR [rdi]
  43ece2:	or     ah,BYTE PTR ds:[rax]
  43ece5:	and    BYTE PTR [rdx+rsi*2],bh
  43ece8:	and    BYTE PTR gs:[esi+0x61],ch
  43eced:	ins    DWORD PTR es:[rdi],dx
  43ecee:	gs cmp eax,0x22736622
  43ecf4:	and    BYTE PTR [rdx+0x69],ah
  43ecf7:	je     0x43ed6c
  43ecf9:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ed00:	and    ah,BYTE PTR [rax]
  43ed02:	je     0x43ed7d
  43ed04:	jo     0x43ed6b
  43ed06:	cmp    eax,0x746e6922
  43ed0b:	xor    esi,DWORD PTR [rdx]
  43ed0d:	and    ch,BYTE PTR [rdi]
  43ed0f:	or     ah,BYTE PTR ds:[rax]
  43ed12:	and    BYTE PTR [rdx+rsi*2],bh
  43ed15:	and    BYTE PTR gs:[esi+0x61],ch
  43ed1a:	ins    DWORD PTR es:[rdi],dx
  43ed1b:	gs cmp eax,0x22736722
  43ed21:	and    BYTE PTR [rdx+0x69],ah
  43ed24:	je     0x43ed99
  43ed26:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ed2d:	and    ah,BYTE PTR [rax]
  43ed2f:	je     0x43edaa
  43ed31:	jo     0x43ed98
  43ed33:	cmp    eax,0x746e6922
  43ed38:	xor    esi,DWORD PTR [rdx]
  43ed3a:	and    ch,BYTE PTR [rdi]
  43ed3c:	or     cl,BYTE PTR ds:[rdx]
  43ed3f:	and    BYTE PTR [rax],ah
  43ed41:	cmp    al,0x72
  43ed43:	and    BYTE PTR gs:[esi+0x61],ch
  43ed48:	ins    DWORD PTR es:[rdi],dx
  43ed49:	gs cmp eax,0x30747322
  43ed4f:	and    ah,BYTE PTR [rax]
  43ed51:	(bad)  
  43ed52:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ed5a:	cmp    BYTE PTR [rax],dh
  43ed5c:	and    ah,BYTE PTR [rax]
  43ed5e:	je     0x43edd9
  43ed60:	jo     0x43edc7
  43ed62:	cmp    eax,0x38336922
  43ed67:	(bad)  
  43ed68:	pop    rdi
  43ed69:	gs js  0x43ede0
  43ed6c:	and    ch,BYTE PTR [rdi]
  43ed6e:	or     ah,BYTE PTR ds:[rax]
  43ed71:	and    BYTE PTR [rdx+rsi*2],bh
  43ed74:	and    BYTE PTR gs:[esi+0x61],ch
  43ed79:	ins    DWORD PTR es:[rdi],dx
  43ed7a:	gs cmp eax,0x31747322
  43ed80:	and    ah,BYTE PTR [rax]
  43ed82:	(bad)  
  43ed83:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ed8b:	cmp    BYTE PTR [rax],dh
  43ed8d:	and    ah,BYTE PTR [rax]
  43ed8f:	je     0x43ee0a
  43ed91:	jo     0x43edf8
  43ed93:	cmp    eax,0x38336922
  43ed98:	(bad)  
  43ed99:	pop    rdi
  43ed9a:	gs js  0x43ee11
  43ed9d:	and    ch,BYTE PTR [rdi]
  43ed9f:	or     ah,BYTE PTR ds:[rax]
  43eda2:	and    BYTE PTR [rdx+rsi*2],bh
  43eda5:	and    BYTE PTR gs:[esi+0x61],ch
  43edaa:	ins    DWORD PTR es:[rdi],dx
  43edab:	gs cmp eax,0x32747322
  43edb1:	and    ah,BYTE PTR [rax]
  43edb3:	(bad)  
  43edb4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43edbc:	cmp    BYTE PTR [rax],dh
  43edbe:	and    ah,BYTE PTR [rax]
  43edc0:	je     0x43ee3b
  43edc2:	jo     0x43ee29
  43edc4:	cmp    eax,0x38336922
  43edc9:	(bad)  
  43edca:	pop    rdi
  43edcb:	gs js  0x43ee42
  43edce:	and    ch,BYTE PTR [rdi]
  43edd0:	or     ah,BYTE PTR ds:[rax]
  43edd3:	and    BYTE PTR [rdx+rsi*2],bh
  43edd6:	and    BYTE PTR gs:[esi+0x61],ch
  43eddb:	ins    DWORD PTR es:[rdi],dx
  43eddc:	gs cmp eax,0x33747322
  43ede2:	and    ah,BYTE PTR [rax]
  43ede4:	(bad)  
  43ede5:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eded:	cmp    BYTE PTR [rax],dh
  43edef:	and    ah,BYTE PTR [rax]
  43edf1:	je     0x43ee6c
  43edf3:	jo     0x43ee5a
  43edf5:	cmp    eax,0x38336922
  43edfa:	(bad)  
  43edfb:	pop    rdi
  43edfc:	gs js  0x43ee73
  43edff:	and    ch,BYTE PTR [rdi]
  43ee01:	or     ah,BYTE PTR ds:[rax]
  43ee04:	and    BYTE PTR [rdx+rsi*2],bh
  43ee07:	and    BYTE PTR gs:[esi+0x61],ch
  43ee0c:	ins    DWORD PTR es:[rdi],dx
  43ee0d:	gs cmp eax,0x34747322
  43ee13:	and    ah,BYTE PTR [rax]
  43ee15:	(bad)  
  43ee16:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ee1e:	cmp    BYTE PTR [rax],dh
  43ee20:	and    ah,BYTE PTR [rax]
  43ee22:	je     0x43ee9d
  43ee24:	jo     0x43ee8b
  43ee26:	cmp    eax,0x38336922
  43ee2b:	(bad)  
  43ee2c:	pop    rdi
  43ee2d:	gs js  0x43eea4
  43ee30:	and    ch,BYTE PTR [rdi]
  43ee32:	or     ah,BYTE PTR ds:[rax]
  43ee35:	and    BYTE PTR [rdx+rsi*2],bh
  43ee38:	and    BYTE PTR gs:[esi+0x61],ch
  43ee3d:	ins    DWORD PTR es:[rdi],dx
  43ee3e:	gs cmp eax,0x35747322
  43ee44:	and    ah,BYTE PTR [rax]
  43ee46:	(bad)  
  43ee47:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ee4f:	cmp    BYTE PTR [rax],dh
  43ee51:	and    ah,BYTE PTR [rax]
  43ee53:	je     0x43eece
  43ee55:	jo     0x43eebc
  43ee57:	cmp    eax,0x38336922
  43ee5c:	(bad)  
  43ee5d:	pop    rdi
  43ee5e:	gs js  0x43eed5
  43ee61:	and    ch,BYTE PTR [rdi]
  43ee63:	or     ah,BYTE PTR ds:[rax]
  43ee66:	and    BYTE PTR [rdx+rsi*2],bh
  43ee69:	and    BYTE PTR gs:[esi+0x61],ch
  43ee6e:	ins    DWORD PTR es:[rdi],dx
  43ee6f:	gs cmp eax,0x36747322
  43ee75:	and    ah,BYTE PTR [rax]
  43ee77:	(bad)  
  43ee78:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ee80:	cmp    BYTE PTR [rax],dh
  43ee82:	and    ah,BYTE PTR [rax]
  43ee84:	je     0x43eeff
  43ee86:	jo     0x43eeed
  43ee88:	cmp    eax,0x38336922
  43ee8d:	(bad)  
  43ee8e:	pop    rdi
  43ee8f:	gs js  0x43ef06
  43ee92:	and    ch,BYTE PTR [rdi]
  43ee94:	or     ah,BYTE PTR ds:[rax]
  43ee97:	and    BYTE PTR [rdx+rsi*2],bh
  43ee9a:	and    BYTE PTR gs:[esi+0x61],ch
  43ee9f:	ins    DWORD PTR es:[rdi],dx
  43eea0:	gs cmp eax,0x37747322
  43eea6:	and    ah,BYTE PTR [rax]
  43eea8:	(bad)  
  43eea9:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eeb1:	cmp    BYTE PTR [rax],dh
  43eeb3:	and    ah,BYTE PTR [rax]
  43eeb5:	je     0x43ef30
  43eeb7:	jo     0x43ef1e
  43eeb9:	cmp    eax,0x38336922
  43eebe:	(bad)  
  43eebf:	pop    rdi
  43eec0:	gs js  0x43ef37
  43eec3:	and    ch,BYTE PTR [rdi]
  43eec5:	or     cl,BYTE PTR ds:[rdx]
  43eec8:	and    BYTE PTR [rax],ah
  43eeca:	cmp    al,0x72
  43eecc:	and    BYTE PTR gs:[esi+0x61],ch
  43eed1:	ins    DWORD PTR es:[rdi],dx
  43eed2:	gs cmp eax,0x74636622
  43eed8:	jb     0x43ef46
  43eeda:	and    ah,BYTE PTR [rax]
  43eedc:	(bad)  
  43eedd:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43eee5:	xor    esi,DWORD PTR [rdx]
  43eee7:	and    ah,BYTE PTR [rax]
  43eee9:	je     0x43ef64
  43eeeb:	jo     0x43ef52
  43eeed:	cmp    eax,0x746e6922
  43eef2:	and    ah,BYTE PTR [rax]
  43eef4:	addr32 jb 0x43ef66
  43eef7:	jne    0x43ef69
  43eef9:	cmp    eax,0x6f6c6622
  43eefe:	(bad)  
  43eeff:	je     0x43ef23
  43ef01:	(bad)  
  43ef02:	or     ah,BYTE PTR ds:[rax]
  43ef05:	and    BYTE PTR [rdx+rsi*2],bh
  43ef08:	and    BYTE PTR gs:[esi+0x61],ch
  43ef0d:	ins    DWORD PTR es:[rdi],dx
  43ef0e:	gs cmp eax,0x74736622
  43ef14:	(bad)  
  43ef15:	je     0x43ef39
  43ef17:	and    BYTE PTR [rdx+0x69],ah
  43ef1a:	je     0x43ef8f
  43ef1c:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  43ef23:	and    ah,BYTE PTR [rax]
  43ef25:	je     0x43efa0
  43ef27:	jo     0x43ef8e
  43ef29:	cmp    eax,0x746e6922
  43ef2e:	and    ah,BYTE PTR [rax]
  43ef30:	addr32 jb 0x43efa2
  43ef33:	jne    0x43efa5
  43ef35:	cmp    eax,0x6f6c6622
  43ef3a:	(bad)  
  43ef3b:	je     0x43ef5f
  43ef3d:	(bad)  
  43ef3e:	or     ah,BYTE PTR ds:[rax]
  43ef41:	and    BYTE PTR [rdx+rsi*2],bh
  43ef44:	and    BYTE PTR gs:[esi+0x61],ch
  43ef49:	ins    DWORD PTR es:[rdi],dx
  43ef4a:	gs cmp eax,0x61746622
  43ef50:	and    ah,BYTE PTR [eax]
  43ef53:	(bad)  
  43ef54:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ef5c:	xor    esi,DWORD PTR [rdx]
  43ef5e:	and    ah,BYTE PTR [rax]
  43ef60:	je     0x43efdb
  43ef62:	jo     0x43efc9
  43ef64:	cmp    eax,0x746e6922
  43ef69:	and    ah,BYTE PTR [rax]
  43ef6b:	addr32 jb 0x43efdd
  43ef6e:	jne    0x43efe0
  43ef70:	cmp    eax,0x6f6c6622
  43ef75:	(bad)  
  43ef76:	je     0x43ef9a
  43ef78:	(bad)  
  43ef79:	or     ah,BYTE PTR ds:[rax]
  43ef7c:	and    BYTE PTR [rdx+rsi*2],bh
  43ef7f:	and    BYTE PTR gs:[esi+0x61],ch
  43ef84:	ins    DWORD PTR es:[rdi],dx
  43ef85:	gs cmp eax,0x73696622
  43ef8b:	and    ah,BYTE PTR gs:[eax]
  43ef8f:	(bad)  
  43ef90:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43ef98:	xor    esi,DWORD PTR [rdx]
  43ef9a:	and    ah,BYTE PTR [rax]
  43ef9c:	je     0x43f017
  43ef9e:	jo     0x43f005
  43efa0:	cmp    eax,0x746e6922
  43efa5:	and    ah,BYTE PTR [rax]
  43efa7:	addr32 jb 0x43f019
  43efaa:	jne    0x43f01c
  43efac:	cmp    eax,0x6f6c6622
  43efb1:	(bad)  
  43efb2:	je     0x43efd6
  43efb4:	(bad)  
  43efb5:	or     ah,BYTE PTR ds:[rax]
  43efb8:	and    BYTE PTR [rdx+rsi*2],bh
  43efbb:	and    BYTE PTR gs:[esi+0x61],ch
  43efc0:	ins    DWORD PTR es:[rdi],dx
  43efc1:	gs cmp eax,0x6f696622
  43efc7:	data16 data16 and ah,BYTE PTR [rax]
  43efcb:	(bad)  
  43efcc:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43efd4:	xor    esi,DWORD PTR [rdx]
  43efd6:	and    ah,BYTE PTR [rax]
  43efd8:	je     0x43f053
  43efda:	jo     0x43f041
  43efdc:	cmp    eax,0x746e6922
  43efe1:	and    ah,BYTE PTR [rax]
  43efe3:	addr32 jb 0x43f055
  43efe6:	jne    0x43f058
  43efe8:	cmp    eax,0x6f6c6622
  43efed:	(bad)  
  43efee:	je     0x43f012
  43eff0:	(bad)  
  43eff1:	or     ah,BYTE PTR ds:[rax]
  43eff4:	and    BYTE PTR [rdx+rsi*2],bh
  43eff7:	and    BYTE PTR gs:[esi+0x61],ch
  43effc:	ins    DWORD PTR es:[rdi],dx
  43effd:	gs cmp eax,0x736f6622
  43f003:	and    ah,BYTE PTR gs:[eax]
  43f007:	(bad)  
  43f008:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43f010:	xor    esi,DWORD PTR [rdx]
  43f012:	and    ah,BYTE PTR [rax]
  43f014:	je     0x43f08f
  43f016:	jo     0x43f07d
  43f018:	cmp    eax,0x746e6922
  43f01d:	and    ah,BYTE PTR [rax]
  43f01f:	addr32 jb 0x43f091
  43f022:	jne    0x43f094
  43f024:	cmp    eax,0x6f6c6622
  43f029:	(bad)  
  43f02a:	je     0x43f04e
  43f02c:	(bad)  
  43f02d:	or     ah,BYTE PTR ds:[rax]
  43f030:	and    BYTE PTR [rdx+rsi*2],bh
  43f033:	and    BYTE PTR gs:[esi+0x61],ch
  43f038:	ins    DWORD PTR es:[rdi],dx
  43f039:	gs cmp eax,0x6f6f6622
  43f03f:	data16 data16 and ah,BYTE PTR [rax]
  43f043:	(bad)  
  43f044:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43f04c:	xor    esi,DWORD PTR [rdx]
  43f04e:	and    ah,BYTE PTR [rax]
  43f050:	je     0x43f0cb
  43f052:	jo     0x43f0b9
  43f054:	cmp    eax,0x746e6922
  43f059:	and    ah,BYTE PTR [rax]
  43f05b:	addr32 jb 0x43f0cd
  43f05e:	jne    0x43f0d0
  43f060:	cmp    eax,0x6f6c6622
  43f065:	(bad)  
  43f066:	je     0x43f08a
  43f068:	(bad)  
  43f069:	or     ah,BYTE PTR ds:[rax]
  43f06c:	and    BYTE PTR [rdx+rsi*2],bh
  43f06f:	and    BYTE PTR gs:[esi+0x61],ch
  43f074:	ins    DWORD PTR es:[rdi],dx
  43f075:	gs cmp eax,0x706f6622
  43f07b:	and    ah,BYTE PTR [rax]
  43f07d:	(bad)  
  43f07e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  43f086:	xor    esi,DWORD PTR [rdx]
  43f088:	and    ah,BYTE PTR [rax]
  43f08a:	je     0x43f105
  43f08c:	jo     0x43f0f3
  43f08e:	cmp    eax,0x746e6922
  43f093:	and    ah,BYTE PTR [rax]
  43f095:	addr32 jb 0x43f107
  43f098:	jne    0x43f10a
  43f09a:	cmp    eax,0x6f6c6622
  43f09f:	(bad)  
  43f0a0:	je     0x43f0c4
  43f0a2:	(bad)  
  43f0a3:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43f0a7:	data16 gs (bad) 
  43f0aa:	je     0x43f121
  43f0ac:	jb     0x43f113
  43f0ae:	or     al,BYTE PTR ds:[rax]
	...
  43f0bd:	add    BYTE PTR [rax],al
  43f0bf:	add    BYTE PTR [rdi+rdi*1],bh
  43f0c2:	js     0x43f131
  43f0c4:	ins    BYTE PTR es:[rdi],dx
  43f0c5:	and    BYTE PTR [rsi+0x65],dh
  43f0c8:	jb     0x43f13d
  43f0ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43f0d1:	xor    BYTE PTR [rdx],ah
  43f0d3:	(bad)  
  43f0d4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43f0d8:	sub    eax,0x6f43202d
  43f0dd:	jo     0x43f158
  43f0df:	jb     0x43f14a
  43f0e1:	addr32 push 0x43282074
  43f0e7:	sub    DWORD PTR [rax],esp
  43f0e9:	xor    dh,BYTE PTR [rax]
  43f0eb:	xor    DWORD PTR [rbx],esi
  43f0ed:	sub    eax,0x37313032
  43f0f2:	and    BYTE PTR [rsi+0x72],al
  43f0f5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43f0fa:	data16 je 0x43f174
  43f0fd:	(bad)  
  43f0fe:	jb     0x43f165
  43f100:	and    BYTE PTR [rsi+0x6f],al
  43f103:	jne    0x43f173
  43f105:	fs (bad) 
  43f107:	je     0x43f172
  43f109:	outs   dx,DWORD PTR ds:[rsi]
  43f10a:	outs   dx,BYTE PTR ds:[rsi]
  43f10b:	sub    al,0x20
  43f10d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43f10f:	movsxd ebp,DWORD PTR [rsi]
  43f111:	or     cl,BYTE PTR [rdx]
  43f113:	and    BYTE PTR [rax],ah
  43f115:	and    BYTE PTR [rax],ah
  43f117:	and    BYTE PTR [rbx+0x6f],al
  43f11a:	jo     0x43f195
  43f11c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43f123:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43f127:	je     0x43f19b
  43f129:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43f130:	and    BYTE PTR [rdi+0x66],ch
  43f133:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43f137:	jae    0x43f159
  43f139:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43f140:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43f148:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43f150:	outs   dx,DWORD PTR ds:[rsi]
  43f151:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43f159:	outs   dx,DWORD PTR ds:[rsi]
  43f15a:	outs   dx,BYTE PTR ds:[rsi]
  43f15b:	sub    al,0xa
  43f15d:	and    BYTE PTR [rax],ah
  43f15f:	and    BYTE PTR [rax],ah
  43f161:	and    BYTE PTR [rcx+0x72],ah
  43f164:	and    BYTE PTR gs:[rax+0x65],dh
  43f168:	jb     0x43f1d7
  43f16a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43f172:	and    BYTE PTR [rcx+0x6e],ah
  43f175:	jns    0x43f197
  43f177:	ins    DWORD PTR es:[rdi],dx
  43f178:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43f181:	push   0x2074756f
  43f186:	jb     0x43f1f7
  43f188:	jns    0x43f1eb
  43f18a:	ins    BYTE PTR es:[rdi],dx
  43f18b:	je     0x43f206
  43f18d:	and    BYTE PTR [rax+0x72],dh
  43f190:	outs   dx,DWORD PTR ds:[rsi]
  43f191:	jbe    0x43f1fc
  43f193:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43f19a:	and    BYTE PTR [rbx+0x6f],ah
  43f19d:	jo     0x43f218
  43f19f:	jb     0x43f20a
  43f1a1:	addr32 push 0x20200a74
  43f1a7:	and    BYTE PTR [rax],ah
  43f1a9:	and    BYTE PTR [rsi+0x6f],ch
  43f1ac:	je     0x43f217
  43f1ae:	movsxd esp,DWORD PTR [rbp+0x20]
  43f1b1:	(bad)  
  43f1b2:	outs   dx,BYTE PTR ds:[rsi]
  43f1b3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43f1b8:	jae    0x43f1da
  43f1ba:	outs   dx,BYTE PTR ds:[rsi]
  43f1bb:	outs   dx,DWORD PTR ds:[rsi]
  43f1bc:	je     0x43f227
  43f1be:	movsxd esp,DWORD PTR [rbp+0x20]
  43f1c1:	(bad)  
  43f1c2:	jb     0x43f229
  43f1c4:	and    BYTE PTR [rax+0x72],dh
  43f1c7:	gs jae 0x43f22f
  43f1ca:	jb     0x43f242
  43f1cc:	gs fs and BYTE PTR cs:[rax],ah
  43f1d1:	sub    eax,0xa0a3e2d
  43f1d6:	cmp    al,0x21
  43f1d8:	sub    eax,0x4d41202d
  43f1dd:	rex.R
  43f1de:	ss xor al,0x20
  43f1e1:	ja     0x43f24c
  43f1e3:	je     0x43f24d
  43f1e5:	and    BYTE PTR [rcx+0x56],al
  43f1e8:	pop    rax
  43f1e9:	and    BYTE PTR [rcx+0x6e],ah
  43f1ec:	and    BYTE PTR fs:[rbp+0x50],cl
  43f1f0:	pop    rax
  43f1f1:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e3024
  43f1f7:	cmp    al,0x21
  43f1f9:	rex.R
  43f1fa:	rex.WRXB
  43f1fb:	rex.XB push r12
  43f1fd:	pop    rcx
  43f1fe:	push   rax
  43f1ff:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43f204:	addr32 gs je 0x43f228
  43f208:	push   rbx
  43f209:	pop    rcx
  43f20a:	push   rbx
  43f20b:	push   rsp
  43f20c:	rex.RB
  43f20d:	rex.WRB and BYTE PTR [r10],r12b
  43f210:	addr32 fs (bad) 
  43f213:	sub    eax,0x67726174
  43f218:	gs je  0x43f249
  43f21b:	fs je  0x43f282
  43f21e:	and    bh,BYTE PTR [rsi]
  43f220:	or     bh,BYTE PTR [rsp+rsi*2]
  43f223:	(bad)  
  43f224:	jb     0x43f28d
  43f226:	gs je  0x43f267
  43f229:	or     ah,BYTE PTR [rax]
  43f22b:	and    BYTE PTR [rcx+riz*2],bh
  43f22e:	jb     0x43f293
  43f230:	push   0x63657469
  43f235:	je     0x43f2ac
  43f237:	jb     0x43f29e
  43f239:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43f240:	cmp    BYTE PTR [rsi],dh
  43f242:	sub    eax,0x2f3c3436
  43f247:	(bad)  
  43f248:	jb     0x43f2ad
  43f24a:	push   0x63657469
  43f24f:	je     0x43f2c6
  43f251:	jb     0x43f2b8
  43f253:	or     ah,BYTE PTR ds:[rax]
  43f256:	and    BYTE PTR [rax+rdi*2],bh
  43f259:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f25f:	jne    0x43f2c5
  43f261:	and    BYTE PTR gs:[rax+0x72],ch
  43f265:	gs cmp ax,0x3622
  43f26a:	xor    al,0x62
  43f26c:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  43f274:	js     0x43f2e3
  43f276:	ins    BYTE PTR es:[rdi],dx
  43f277:	and    ch,BYTE PTR [rdi]
  43f279:	or     ah,BYTE PTR ds:[rax]
  43f27c:	and    BYTE PTR [rax+rdi*2],bh
  43f27f:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f285:	jne    0x43f2eb
  43f287:	and    BYTE PTR gs:[rax+0x72],ch
  43f28b:	gs cmp ax,0x3622
  43f290:	xor    al,0x62
  43f292:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43f29a:	ins    DWORD PTR es:[rdi],dx
  43f29b:	ins    BYTE PTR es:[rdi],dx
  43f29c:	and    ch,BYTE PTR [rdi]
  43f29e:	or     ah,BYTE PTR ds:[rax]
  43f2a1:	and    BYTE PTR [rax+rdi*2],bh
  43f2a4:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f2aa:	jne    0x43f310
  43f2ac:	and    BYTE PTR gs:[rax+0x72],ch
  43f2b0:	gs cmp ax,0x3622
  43f2b5:	xor    al,0x62
  43f2b7:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  43f2bf:	ins    DWORD PTR es:[rdi],dx
  43f2c0:	ins    BYTE PTR es:[rdi],dx
  43f2c1:	and    ch,BYTE PTR [rdi]
  43f2c3:	or     ah,BYTE PTR ds:[rax]
  43f2c6:	and    BYTE PTR [rax+rdi*2],bh
  43f2c9:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f2cf:	jne    0x43f335
  43f2d1:	and    BYTE PTR gs:[rax+0x72],ch
  43f2d5:	gs cmp ax,0x3622
  43f2da:	xor    al,0x62
  43f2dc:	imul   esi,DWORD PTR [rbp+rbp*1+0x6d],0x782e7870
  43f2e4:	ins    DWORD PTR es:[rdi],dx
  43f2e5:	ins    BYTE PTR es:[rdi],dx
  43f2e6:	and    ch,BYTE PTR [rdi]
  43f2e8:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43f2ec:	je     0x43f34f
  43f2ee:	jb     0x43f357
  43f2f0:	gs je  0x43f331
  43f2f3:	or     al,BYTE PTR [rax]
	...
  43f2fd:	add    BYTE PTR [rax],al
  43f2ff:	add    BYTE PTR [rdi+rdi*1],bh
  43f302:	js     0x43f371
  43f304:	ins    BYTE PTR es:[rdi],dx
  43f305:	and    BYTE PTR [rsi+0x65],dh
  43f308:	jb     0x43f37d
  43f30a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43f311:	xor    BYTE PTR [rdx],ah
  43f313:	(bad)  
  43f314:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43f318:	sub    eax,0x6f43202d
  43f31d:	jo     0x43f398
  43f31f:	jb     0x43f38a
  43f321:	addr32 push 0x43282074
  43f327:	sub    DWORD PTR [rax],esp
  43f329:	xor    dh,BYTE PTR [rax]
  43f32b:	xor    DWORD PTR [rbx],esi
  43f32d:	sub    eax,0x37313032
  43f332:	and    BYTE PTR [rsi+0x72],al
  43f335:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43f33a:	data16 je 0x43f3b4
  43f33d:	(bad)  
  43f33e:	jb     0x43f3a5
  43f340:	and    BYTE PTR [rsi+0x6f],al
  43f343:	jne    0x43f3b3
  43f345:	fs (bad) 
  43f347:	je     0x43f3b2
  43f349:	outs   dx,DWORD PTR ds:[rsi]
  43f34a:	outs   dx,BYTE PTR ds:[rsi]
  43f34b:	sub    al,0x20
  43f34d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43f34f:	movsxd ebp,DWORD PTR [rsi]
  43f351:	or     cl,BYTE PTR [rdx]
  43f353:	and    BYTE PTR [rax],ah
  43f355:	and    BYTE PTR [rax],ah
  43f357:	and    BYTE PTR [rbx+0x6f],al
  43f35a:	jo     0x43f3d5
  43f35c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43f363:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43f367:	je     0x43f3db
  43f369:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43f370:	and    BYTE PTR [rdi+0x66],ch
  43f373:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43f377:	jae    0x43f399
  43f379:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43f380:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43f388:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43f390:	outs   dx,DWORD PTR ds:[rsi]
  43f391:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43f399:	outs   dx,DWORD PTR ds:[rsi]
  43f39a:	outs   dx,BYTE PTR ds:[rsi]
  43f39b:	sub    al,0xa
  43f39d:	and    BYTE PTR [rax],ah
  43f39f:	and    BYTE PTR [rax],ah
  43f3a1:	and    BYTE PTR [rcx+0x72],ah
  43f3a4:	and    BYTE PTR gs:[rax+0x65],dh
  43f3a8:	jb     0x43f417
  43f3aa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43f3b2:	and    BYTE PTR [rcx+0x6e],ah
  43f3b5:	jns    0x43f3d7
  43f3b7:	ins    DWORD PTR es:[rdi],dx
  43f3b8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43f3c1:	push   0x2074756f
  43f3c6:	jb     0x43f437
  43f3c8:	jns    0x43f42b
  43f3ca:	ins    BYTE PTR es:[rdi],dx
  43f3cb:	je     0x43f446
  43f3cd:	and    BYTE PTR [rax+0x72],dh
  43f3d0:	outs   dx,DWORD PTR ds:[rsi]
  43f3d1:	jbe    0x43f43c
  43f3d3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43f3da:	and    BYTE PTR [rbx+0x6f],ah
  43f3dd:	jo     0x43f458
  43f3df:	jb     0x43f44a
  43f3e1:	addr32 push 0x20200a74
  43f3e7:	and    BYTE PTR [rax],ah
  43f3e9:	and    BYTE PTR [rsi+0x6f],ch
  43f3ec:	je     0x43f457
  43f3ee:	movsxd esp,DWORD PTR [rbp+0x20]
  43f3f1:	(bad)  
  43f3f2:	outs   dx,BYTE PTR ds:[rsi]
  43f3f3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43f3f8:	jae    0x43f41a
  43f3fa:	outs   dx,BYTE PTR ds:[rsi]
  43f3fb:	outs   dx,DWORD PTR ds:[rsi]
  43f3fc:	je     0x43f467
  43f3fe:	movsxd esp,DWORD PTR [rbp+0x20]
  43f401:	(bad)  
  43f402:	jb     0x43f469
  43f404:	and    BYTE PTR [rax+0x72],dh
  43f407:	gs jae 0x43f46f
  43f40a:	jb     0x43f482
  43f40c:	gs fs and BYTE PTR cs:[rax],ah
  43f411:	sub    eax,0xa0a3e2d
  43f416:	cmp    al,0x21
  43f418:	sub    eax,0x4d41202d
  43f41d:	rex.R
  43f41e:	ss xor al,0x20
  43f421:	ja     0x43f48c
  43f423:	je     0x43f48d
  43f425:	and    BYTE PTR [rbp+0x50],cl
  43f428:	pop    rax
  43f429:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e325c
  43f42f:	cmp    al,0x21
  43f431:	rex.R
  43f432:	rex.WRXB
  43f433:	rex.XB push r12
  43f435:	pop    rcx
  43f436:	push   rax
  43f437:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43f43c:	addr32 gs je 0x43f460
  43f440:	push   rbx
  43f441:	pop    rcx
  43f442:	push   rbx
  43f443:	push   rsp
  43f444:	rex.RB
  43f445:	rex.WRB and BYTE PTR [r10],r12b
  43f448:	addr32 fs (bad) 
  43f44b:	sub    eax,0x67726174
  43f450:	gs je  0x43f481
  43f453:	fs je  0x43f4ba
  43f456:	and    bh,BYTE PTR [rsi]
  43f458:	or     bh,BYTE PTR [rsp+rsi*2]
  43f45b:	(bad)  
  43f45c:	jb     0x43f4c5
  43f45e:	gs je  0x43f49f
  43f461:	or     ah,BYTE PTR [rax]
  43f463:	and    BYTE PTR [rcx+riz*2],bh
  43f466:	jb     0x43f4cb
  43f468:	push   0x63657469
  43f46d:	je     0x43f4e4
  43f46f:	jb     0x43f4d6
  43f471:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43f478:	cmp    BYTE PTR [rsi],dh
  43f47a:	sub    eax,0x2f3c3436
  43f47f:	(bad)  
  43f480:	jb     0x43f4e5
  43f482:	push   0x63657469
  43f487:	je     0x43f4fe
  43f489:	jb     0x43f4f0
  43f48b:	or     ah,BYTE PTR ds:[rax]
  43f48e:	and    BYTE PTR [rax+rdi*2],bh
  43f491:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f497:	jne    0x43f4fd
  43f499:	and    BYTE PTR gs:[rax+0x72],ch
  43f49d:	gs cmp ax,0x3622
  43f4a2:	xor    al,0x62
  43f4a4:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  43f4ac:	js     0x43f51b
  43f4ae:	ins    BYTE PTR es:[rdi],dx
  43f4af:	and    ch,BYTE PTR [rdi]
  43f4b1:	or     ah,BYTE PTR ds:[rax]
  43f4b4:	and    BYTE PTR [rax+rdi*2],bh
  43f4b7:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f4bd:	jne    0x43f523
  43f4bf:	and    BYTE PTR gs:[rax+0x72],ch
  43f4c3:	gs cmp ax,0x3622
  43f4c8:	xor    al,0x62
  43f4ca:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43f4d2:	ins    DWORD PTR es:[rdi],dx
  43f4d3:	ins    BYTE PTR es:[rdi],dx
  43f4d4:	and    ch,BYTE PTR [rdi]
  43f4d6:	or     ah,BYTE PTR ds:[rax]
  43f4d9:	and    BYTE PTR [rax+rdi*2],bh
  43f4dc:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f4e2:	jne    0x43f548
  43f4e4:	and    BYTE PTR gs:[rax+0x72],ch
  43f4e8:	gs cmp ax,0x3622
  43f4ed:	xor    al,0x62
  43f4ef:	imul   esi,DWORD PTR [rbp+rbp*1+0x6d],0x782e7870
  43f4f7:	ins    DWORD PTR es:[rdi],dx
  43f4f8:	ins    BYTE PTR es:[rdi],dx
  43f4f9:	and    ch,BYTE PTR [rdi]
  43f4fb:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43f4ff:	je     0x43f562
  43f501:	jb     0x43f56a
  43f503:	gs je  0x43f544
  43f506:	or     al,BYTE PTR [rax]
	...
  43f540:	cmp    al,0x3f
  43f542:	js     0x43f5b1
  43f544:	ins    BYTE PTR es:[rdi],dx
  43f545:	and    BYTE PTR [rsi+0x65],dh
  43f548:	jb     0x43f5bd
  43f54a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43f551:	xor    BYTE PTR [rdx],ah
  43f553:	(bad)  
  43f554:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43f558:	sub    eax,0x6f43202d
  43f55d:	jo     0x43f5d8
  43f55f:	jb     0x43f5ca
  43f561:	addr32 push 0x43282074
  43f567:	sub    DWORD PTR [rax],esp
  43f569:	xor    dh,BYTE PTR [rax]
  43f56b:	xor    DWORD PTR [rbp*1+0x37313032],esi
  43f572:	and    BYTE PTR [rsi+0x72],al
  43f575:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43f57a:	data16 je 0x43f5f4
  43f57d:	(bad)  
  43f57e:	jb     0x43f5e5
  43f580:	and    BYTE PTR [rsi+0x6f],al
  43f583:	jne    0x43f5f3
  43f585:	fs (bad) 
  43f587:	je     0x43f5f2
  43f589:	outs   dx,DWORD PTR ds:[rsi]
  43f58a:	outs   dx,BYTE PTR ds:[rsi]
  43f58b:	sub    al,0x20
  43f58d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43f58f:	movsxd ebp,DWORD PTR [rsi]
  43f591:	or     cl,BYTE PTR [rdx]
  43f593:	and    BYTE PTR [rax],ah
  43f595:	and    BYTE PTR [rax],ah
  43f597:	and    BYTE PTR [rbx+0x6f],al
  43f59a:	jo     0x43f615
  43f59c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43f5a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43f5a7:	je     0x43f61b
  43f5a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43f5b0:	and    BYTE PTR [rdi+0x66],ch
  43f5b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43f5b7:	jae    0x43f5d9
  43f5b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43f5c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43f5c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43f5d0:	outs   dx,DWORD PTR ds:[rsi]
  43f5d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43f5d9:	outs   dx,DWORD PTR ds:[rsi]
  43f5da:	outs   dx,BYTE PTR ds:[rsi]
  43f5db:	sub    al,0xa
  43f5dd:	and    BYTE PTR [rax],ah
  43f5df:	and    BYTE PTR [rax],ah
  43f5e1:	and    BYTE PTR [rcx+0x72],ah
  43f5e4:	and    BYTE PTR gs:[rax+0x65],dh
  43f5e8:	jb     0x43f657
  43f5ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43f5f2:	and    BYTE PTR [rcx+0x6e],ah
  43f5f5:	jns    0x43f617
  43f5f7:	ins    DWORD PTR es:[rdi],dx
  43f5f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43f601:	push   0x2074756f
  43f606:	jb     0x43f677
  43f608:	jns    0x43f66b
  43f60a:	ins    BYTE PTR es:[rdi],dx
  43f60b:	je     0x43f686
  43f60d:	and    BYTE PTR [rax+0x72],dh
  43f610:	outs   dx,DWORD PTR ds:[rsi]
  43f611:	jbe    0x43f67c
  43f613:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43f61a:	and    BYTE PTR [rbx+0x6f],ah
  43f61d:	jo     0x43f698
  43f61f:	jb     0x43f68a
  43f621:	addr32 push 0x20200a74
  43f627:	and    BYTE PTR [rax],ah
  43f629:	and    BYTE PTR [rsi+0x6f],ch
  43f62c:	je     0x43f697
  43f62e:	movsxd esp,DWORD PTR [rbp+0x20]
  43f631:	(bad)  
  43f632:	outs   dx,BYTE PTR ds:[rsi]
  43f633:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43f638:	jae    0x43f65a
  43f63a:	outs   dx,BYTE PTR ds:[rsi]
  43f63b:	outs   dx,DWORD PTR ds:[rsi]
  43f63c:	je     0x43f6a7
  43f63e:	movsxd esp,DWORD PTR [rbp+0x20]
  43f641:	(bad)  
  43f642:	jb     0x43f6a9
  43f644:	and    BYTE PTR [rax+0x72],dh
  43f647:	gs jae 0x43f6af
  43f64a:	jb     0x43f6c2
  43f64c:	gs fs and BYTE PTR cs:[rax],ah
  43f651:	sub    eax,0xa0a3e2d
  43f656:	cmp    al,0x21
  43f658:	sub    eax,0x3358202d
  43f65d:	xor    ah,BYTE PTR [rax]
  43f65f:	ja     0x43f6ca
  43f661:	je     0x43f6cb
  43f663:	and    BYTE PTR [rcx+0x56],al
  43f666:	pop    rax
  43f667:	xor    eax,0x2d203231
  43f66c:	sub    eax,0x3c0a0a3e
  43f671:	and    DWORD PTR [rdi+rcx*2+0x43],eax
  43f675:	push   rsp
  43f676:	pop    rcx
  43f677:	push   rax
  43f678:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43f67d:	addr32 gs je 0x43f6a1
  43f681:	push   rbx
  43f682:	pop    rcx
  43f683:	push   rbx
  43f684:	push   rsp
  43f685:	rex.RB
  43f686:	rex.WRB and BYTE PTR [r10],r12b
  43f689:	addr32 fs (bad) 
  43f68c:	sub    eax,0x67726174
  43f691:	gs je  0x43f6c2
  43f694:	fs je  0x43f6fb
  43f697:	and    bh,BYTE PTR [rsi]
  43f699:	or     bh,BYTE PTR [rsp+rsi*2]
  43f69c:	(bad)  
  43f69d:	jb     0x43f706
  43f69f:	gs je  0x43f6e0
  43f6a2:	or     ah,BYTE PTR [rax]
  43f6a4:	and    BYTE PTR [rcx+riz*2],bh
  43f6a7:	jb     0x43f70c
  43f6a9:	push   0x63657469
  43f6ae:	je     0x43f725
  43f6b0:	jb     0x43f717
  43f6b2:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43f6b9:	ss xor al,0x2d
  43f6bc:	xor    esi,DWORD PTR [rdx]
  43f6be:	cmp    al,0x2f
  43f6c0:	(bad)  
  43f6c1:	jb     0x43f726
  43f6c3:	push   0x63657469
  43f6c8:	je     0x43f73f
  43f6ca:	jb     0x43f731
  43f6cc:	or     ah,BYTE PTR ds:[rax]
  43f6cf:	and    BYTE PTR [rax+rdi*2],bh
  43f6d2:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f6d8:	jne    0x43f73e
  43f6da:	and    BYTE PTR gs:[rax+0x72],ch
  43f6de:	gs cmp ax,0x7822
  43f6e3:	xor    esi,DWORD PTR [rdx]
  43f6e5:	sub    eax,0x65726f63
  43f6ea:	cs js  0x43f75a
  43f6ed:	ins    BYTE PTR es:[rdi],dx
  43f6ee:	and    ch,BYTE PTR [rdi]
  43f6f0:	or     ah,BYTE PTR ds:[rax]
  43f6f3:	and    BYTE PTR [rax+rdi*2],bh
  43f6f6:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f6fc:	jne    0x43f762
  43f6fe:	and    BYTE PTR gs:[rax+0x72],ch
  43f702:	gs cmp ax,0x3622
  43f707:	xor    al,0x62
  43f709:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43f711:	ins    DWORD PTR es:[rdi],dx
  43f712:	ins    BYTE PTR es:[rdi],dx
  43f713:	and    ch,BYTE PTR [rdi]
  43f715:	or     ah,BYTE PTR ds:[rax]
  43f718:	and    BYTE PTR [rax+rdi*2],bh
  43f71b:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f721:	jne    0x43f787
  43f723:	and    BYTE PTR gs:[rax+0x72],ch
  43f727:	gs cmp ax,0x3622
  43f72c:	xor    al,0x62
  43f72e:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  43f736:	ins    DWORD PTR es:[rdi],dx
  43f737:	ins    BYTE PTR es:[rdi],dx
  43f738:	and    ch,BYTE PTR [rdi]
  43f73a:	or     ah,BYTE PTR ds:[rax]
  43f73d:	and    BYTE PTR [rax+rdi*2],bh
  43f740:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f746:	jne    0x43f7ac
  43f748:	and    BYTE PTR gs:[rax+0x72],ch
  43f74c:	gs cmp ax,0x3622
  43f751:	xor    al,0x62
  43f753:	imul   esi,DWORD PTR [rbp+rbp*1+0x6d],0x782e7870
  43f75b:	ins    DWORD PTR es:[rdi],dx
  43f75c:	ins    BYTE PTR es:[rdi],dx
  43f75d:	and    ch,BYTE PTR [rdi]
  43f75f:	or     ah,BYTE PTR ds:[rax]
  43f762:	and    BYTE PTR [rax+rdi*2],bh
  43f765:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f76b:	jne    0x43f7d1
  43f76d:	and    BYTE PTR gs:[rax+0x72],ch
  43f771:	gs cmp ax,0x3622
  43f776:	xor    al,0x62
  43f778:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x31357876
  43f780:	xor    ch,BYTE PTR [rsi]
  43f782:	js     0x43f7f1
  43f784:	ins    BYTE PTR es:[rdi],dx
  43f785:	and    ch,BYTE PTR [rdi]
  43f787:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43f78b:	je     0x43f7ee
  43f78d:	jb     0x43f7f6
  43f78f:	gs je  0x43f7d0
  43f792:	or     al,BYTE PTR [rax]
	...
  43f7c0:	cmp    al,0x3f
  43f7c2:	js     0x43f831
  43f7c4:	ins    BYTE PTR es:[rdi],dx
  43f7c5:	and    BYTE PTR [rsi+0x65],dh
  43f7c8:	jb     0x43f83d
  43f7ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43f7d1:	xor    BYTE PTR [rdx],ah
  43f7d3:	(bad)  
  43f7d4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43f7d8:	sub    eax,0x6f43202d
  43f7dd:	jo     0x43f858
  43f7df:	jb     0x43f84a
  43f7e1:	addr32 push 0x43282074
  43f7e7:	sub    DWORD PTR [rax],esp
  43f7e9:	xor    dh,BYTE PTR [rax]
  43f7eb:	xor    DWORD PTR [rdx],esi
  43f7ed:	sub    eax,0x37313032
  43f7f2:	and    BYTE PTR [rsi+0x72],al
  43f7f5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43f7fa:	data16 je 0x43f874
  43f7fd:	(bad)  
  43f7fe:	jb     0x43f865
  43f800:	and    BYTE PTR [rsi+0x6f],al
  43f803:	jne    0x43f873
  43f805:	fs (bad) 
  43f807:	je     0x43f872
  43f809:	outs   dx,DWORD PTR ds:[rsi]
  43f80a:	outs   dx,BYTE PTR ds:[rsi]
  43f80b:	sub    al,0x20
  43f80d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43f80f:	movsxd ebp,DWORD PTR [rsi]
  43f811:	or     cl,BYTE PTR [rdx]
  43f813:	and    BYTE PTR [rax],ah
  43f815:	and    BYTE PTR [rax],ah
  43f817:	and    BYTE PTR [rbx+0x6f],al
  43f81a:	jo     0x43f895
  43f81c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43f823:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43f827:	je     0x43f89b
  43f829:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43f830:	and    BYTE PTR [rdi+0x66],ch
  43f833:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43f837:	jae    0x43f859
  43f839:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43f840:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43f848:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43f850:	outs   dx,DWORD PTR ds:[rsi]
  43f851:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43f859:	outs   dx,DWORD PTR ds:[rsi]
  43f85a:	outs   dx,BYTE PTR ds:[rsi]
  43f85b:	sub    al,0xa
  43f85d:	and    BYTE PTR [rax],ah
  43f85f:	and    BYTE PTR [rax],ah
  43f861:	and    BYTE PTR [rcx+0x72],ah
  43f864:	and    BYTE PTR gs:[rax+0x65],dh
  43f868:	jb     0x43f8d7
  43f86a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43f872:	and    BYTE PTR [rcx+0x6e],ah
  43f875:	jns    0x43f897
  43f877:	ins    DWORD PTR es:[rdi],dx
  43f878:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43f881:	push   0x2074756f
  43f886:	jb     0x43f8f7
  43f888:	jns    0x43f8eb
  43f88a:	ins    BYTE PTR es:[rdi],dx
  43f88b:	je     0x43f906
  43f88d:	and    BYTE PTR [rax+0x72],dh
  43f890:	outs   dx,DWORD PTR ds:[rsi]
  43f891:	jbe    0x43f8fc
  43f893:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43f89a:	and    BYTE PTR [rbx+0x6f],ah
  43f89d:	jo     0x43f918
  43f89f:	jb     0x43f90a
  43f8a1:	addr32 push 0x20200a74
  43f8a7:	and    BYTE PTR [rax],ah
  43f8a9:	and    BYTE PTR [rsi+0x6f],ch
  43f8ac:	je     0x43f917
  43f8ae:	movsxd esp,DWORD PTR [rbp+0x20]
  43f8b1:	(bad)  
  43f8b2:	outs   dx,BYTE PTR ds:[rsi]
  43f8b3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43f8b8:	jae    0x43f8da
  43f8ba:	outs   dx,BYTE PTR ds:[rsi]
  43f8bb:	outs   dx,DWORD PTR ds:[rsi]
  43f8bc:	je     0x43f927
  43f8be:	movsxd esp,DWORD PTR [rbp+0x20]
  43f8c1:	(bad)  
  43f8c2:	jb     0x43f929
  43f8c4:	and    BYTE PTR [rax+0x72],dh
  43f8c7:	gs jae 0x43f92f
  43f8ca:	jb     0x43f942
  43f8cc:	gs fs and BYTE PTR cs:[rax],ah
  43f8d1:	sub    eax,0xa0a3e2d
  43f8d6:	cmp    al,0x21
  43f8d8:	sub    eax,0x3358202d
  43f8dd:	xor    ah,BYTE PTR [rax]
  43f8df:	ja     0x43f94a
  43f8e1:	je     0x43f94b
  43f8e3:	and    BYTE PTR [rcx+0x56],al
  43f8e6:	pop    rax
  43f8e7:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e371a
  43f8ed:	cmp    al,0x21
  43f8ef:	rex.R
  43f8f0:	rex.WRXB
  43f8f1:	rex.XB push r12
  43f8f3:	pop    rcx
  43f8f4:	push   rax
  43f8f5:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43f8fa:	addr32 gs je 0x43f91e
  43f8fe:	push   rbx
  43f8ff:	pop    rcx
  43f900:	push   rbx
  43f901:	push   rsp
  43f902:	rex.RB
  43f903:	rex.WRB and BYTE PTR [r10],r12b
  43f906:	addr32 fs (bad) 
  43f909:	sub    eax,0x67726174
  43f90e:	gs je  0x43f93f
  43f911:	fs je  0x43f978
  43f914:	and    bh,BYTE PTR [rsi]
  43f916:	or     bh,BYTE PTR [rsp+rsi*2]
  43f919:	(bad)  
  43f91a:	jb     0x43f983
  43f91c:	gs je  0x43f95d
  43f91f:	or     ah,BYTE PTR [rax]
  43f921:	and    BYTE PTR [rcx+riz*2],bh
  43f924:	jb     0x43f989
  43f926:	push   0x63657469
  43f92b:	je     0x43f9a2
  43f92d:	jb     0x43f994
  43f92f:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43f936:	ss xor al,0x2d
  43f939:	xor    esi,DWORD PTR [rdx]
  43f93b:	cmp    al,0x2f
  43f93d:	(bad)  
  43f93e:	jb     0x43f9a3
  43f940:	push   0x63657469
  43f945:	je     0x43f9bc
  43f947:	jb     0x43f9ae
  43f949:	or     ah,BYTE PTR ds:[rax]
  43f94c:	and    BYTE PTR [rax+rdi*2],bh
  43f94f:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f955:	jne    0x43f9bb
  43f957:	and    BYTE PTR gs:[rax+0x72],ch
  43f95b:	gs cmp ax,0x7822
  43f960:	xor    esi,DWORD PTR [rdx]
  43f962:	sub    eax,0x65726f63
  43f967:	cs js  0x43f9d7
  43f96a:	ins    BYTE PTR es:[rdi],dx
  43f96b:	and    ch,BYTE PTR [rdi]
  43f96d:	or     ah,BYTE PTR ds:[rax]
  43f970:	and    BYTE PTR [rax+rdi*2],bh
  43f973:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f979:	jne    0x43f9df
  43f97b:	and    BYTE PTR gs:[rax+0x72],ch
  43f97f:	gs cmp ax,0x3622
  43f984:	xor    al,0x62
  43f986:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43f98e:	ins    DWORD PTR es:[rdi],dx
  43f98f:	ins    BYTE PTR es:[rdi],dx
  43f990:	and    ch,BYTE PTR [rdi]
  43f992:	or     ah,BYTE PTR ds:[rax]
  43f995:	and    BYTE PTR [rax+rdi*2],bh
  43f998:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43f99e:	jne    0x43fa04
  43f9a0:	and    BYTE PTR gs:[rax+0x72],ch
  43f9a4:	gs cmp ax,0x3622
  43f9a9:	xor    al,0x62
  43f9ab:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  43f9b3:	ins    DWORD PTR es:[rdi],dx
  43f9b4:	ins    BYTE PTR es:[rdi],dx
  43f9b5:	and    ch,BYTE PTR [rdi]
  43f9b7:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43f9bb:	je     0x43fa1e
  43f9bd:	jb     0x43fa26
  43f9bf:	gs je  0x43fa00
  43f9c2:	or     al,BYTE PTR [rax]
	...
  43fa00:	cmp    al,0x3f
  43fa02:	js     0x43fa71
  43fa04:	ins    BYTE PTR es:[rdi],dx
  43fa05:	and    BYTE PTR [rsi+0x65],dh
  43fa08:	jb     0x43fa7d
  43fa0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43fa11:	xor    BYTE PTR [rdx],ah
  43fa13:	(bad)  
  43fa14:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43fa18:	sub    eax,0x6f43202d
  43fa1d:	jo     0x43fa98
  43fa1f:	jb     0x43fa8a
  43fa21:	addr32 push 0x43282074
  43fa27:	sub    DWORD PTR [rax],esp
  43fa29:	xor    dh,BYTE PTR [rax]
  43fa2b:	xor    DWORD PTR [rdx],esi
  43fa2d:	sub    eax,0x37313032
  43fa32:	and    BYTE PTR [rsi+0x72],al
  43fa35:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43fa3a:	data16 je 0x43fab4
  43fa3d:	(bad)  
  43fa3e:	jb     0x43faa5
  43fa40:	and    BYTE PTR [rsi+0x6f],al
  43fa43:	jne    0x43fab3
  43fa45:	fs (bad) 
  43fa47:	je     0x43fab2
  43fa49:	outs   dx,DWORD PTR ds:[rsi]
  43fa4a:	outs   dx,BYTE PTR ds:[rsi]
  43fa4b:	sub    al,0x20
  43fa4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43fa4f:	movsxd ebp,DWORD PTR [rsi]
  43fa51:	or     cl,BYTE PTR [rdx]
  43fa53:	and    BYTE PTR [rax],ah
  43fa55:	and    BYTE PTR [rax],ah
  43fa57:	and    BYTE PTR [rbx+0x6f],al
  43fa5a:	jo     0x43fad5
  43fa5c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43fa63:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43fa67:	je     0x43fadb
  43fa69:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43fa70:	and    BYTE PTR [rdi+0x66],ch
  43fa73:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43fa77:	jae    0x43fa99
  43fa79:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43fa80:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43fa88:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43fa90:	outs   dx,DWORD PTR ds:[rsi]
  43fa91:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43fa99:	outs   dx,DWORD PTR ds:[rsi]
  43fa9a:	outs   dx,BYTE PTR ds:[rsi]
  43fa9b:	sub    al,0xa
  43fa9d:	and    BYTE PTR [rax],ah
  43fa9f:	and    BYTE PTR [rax],ah
  43faa1:	and    BYTE PTR [rcx+0x72],ah
  43faa4:	and    BYTE PTR gs:[rax+0x65],dh
  43faa8:	jb     0x43fb17
  43faaa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43fab2:	and    BYTE PTR [rcx+0x6e],ah
  43fab5:	jns    0x43fad7
  43fab7:	ins    DWORD PTR es:[rdi],dx
  43fab8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43fac1:	push   0x2074756f
  43fac6:	jb     0x43fb37
  43fac8:	jns    0x43fb2b
  43faca:	ins    BYTE PTR es:[rdi],dx
  43facb:	je     0x43fb46
  43facd:	and    BYTE PTR [rax+0x72],dh
  43fad0:	outs   dx,DWORD PTR ds:[rsi]
  43fad1:	jbe    0x43fb3c
  43fad3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43fada:	and    BYTE PTR [rbx+0x6f],ah
  43fadd:	jo     0x43fb58
  43fadf:	jb     0x43fb4a
  43fae1:	addr32 push 0x20200a74
  43fae7:	and    BYTE PTR [rax],ah
  43fae9:	and    BYTE PTR [rsi+0x6f],ch
  43faec:	je     0x43fb57
  43faee:	movsxd esp,DWORD PTR [rbp+0x20]
  43faf1:	(bad)  
  43faf2:	outs   dx,BYTE PTR ds:[rsi]
  43faf3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43faf8:	jae    0x43fb1a
  43fafa:	outs   dx,BYTE PTR ds:[rsi]
  43fafb:	outs   dx,DWORD PTR ds:[rsi]
  43fafc:	je     0x43fb67
  43fafe:	movsxd esp,DWORD PTR [rbp+0x20]
  43fb01:	(bad)  
  43fb02:	jb     0x43fb69
  43fb04:	and    BYTE PTR [rax+0x72],dh
  43fb07:	gs jae 0x43fb6f
  43fb0a:	jb     0x43fb82
  43fb0c:	gs fs and BYTE PTR cs:[rax],ah
  43fb11:	sub    eax,0xa0a3e2d
  43fb16:	cmp    al,0x21
  43fb18:	sub    eax,0x3358202d
  43fb1d:	xor    ah,BYTE PTR [rax]
  43fb1f:	sub    eax,0xa0a3e2d
  43fb24:	cmp    al,0x21
  43fb26:	rex.R
  43fb27:	rex.WRXB
  43fb28:	rex.XB push r12
  43fb2a:	pop    rcx
  43fb2b:	push   rax
  43fb2c:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43fb31:	addr32 gs je 0x43fb55
  43fb35:	push   rbx
  43fb36:	pop    rcx
  43fb37:	push   rbx
  43fb38:	push   rsp
  43fb39:	rex.RB
  43fb3a:	rex.WRB and BYTE PTR [r10],r12b
  43fb3d:	addr32 fs (bad) 
  43fb40:	sub    eax,0x67726174
  43fb45:	gs je  0x43fb76
  43fb48:	fs je  0x43fbaf
  43fb4b:	and    bh,BYTE PTR [rsi]
  43fb4d:	or     bh,BYTE PTR [rsp+rsi*2]
  43fb50:	(bad)  
  43fb51:	jb     0x43fbba
  43fb53:	gs je  0x43fb94
  43fb56:	or     ah,BYTE PTR [rax]
  43fb58:	and    BYTE PTR [rcx+riz*2],bh
  43fb5b:	jb     0x43fbc0
  43fb5d:	push   0x63657469
  43fb62:	je     0x43fbd9
  43fb64:	jb     0x43fbcb
  43fb66:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43fb6d:	ss xor al,0x2d
  43fb70:	xor    esi,DWORD PTR [rdx]
  43fb72:	cmp    al,0x2f
  43fb74:	(bad)  
  43fb75:	jb     0x43fbda
  43fb77:	push   0x63657469
  43fb7c:	je     0x43fbf3
  43fb7e:	jb     0x43fbe5
  43fb80:	or     ah,BYTE PTR ds:[rax]
  43fb83:	and    BYTE PTR [rax+rdi*2],bh
  43fb86:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fb8c:	jne    0x43fbf2
  43fb8e:	and    BYTE PTR gs:[rax+0x72],ch
  43fb92:	gs cmp ax,0x7822
  43fb97:	xor    esi,DWORD PTR [rdx]
  43fb99:	sub    eax,0x65726f63
  43fb9e:	cs js  0x43fc0e
  43fba1:	ins    BYTE PTR es:[rdi],dx
  43fba2:	and    ch,BYTE PTR [rdi]
  43fba4:	or     ah,BYTE PTR ds:[rax]
  43fba7:	and    BYTE PTR [rax+rdi*2],bh
  43fbaa:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fbb0:	jne    0x43fc16
  43fbb2:	and    BYTE PTR gs:[rax+0x72],ch
  43fbb6:	gs cmp ax,0x3622
  43fbbb:	xor    al,0x62
  43fbbd:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43fbc5:	ins    DWORD PTR es:[rdi],dx
  43fbc6:	ins    BYTE PTR es:[rdi],dx
  43fbc7:	and    ch,BYTE PTR [rdi]
  43fbc9:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43fbcd:	je     0x43fc30
  43fbcf:	jb     0x43fc38
  43fbd1:	gs je  0x43fc12
  43fbd4:	or     al,BYTE PTR [rax]
	...
  43fbfe:	add    BYTE PTR [rax],al
  43fc00:	cmp    al,0x3f
  43fc02:	js     0x43fc71
  43fc04:	ins    BYTE PTR es:[rdi],dx
  43fc05:	and    BYTE PTR [rsi+0x65],dh
  43fc08:	jb     0x43fc7d
  43fc0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43fc11:	xor    BYTE PTR [rdx],ah
  43fc13:	(bad)  
  43fc14:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43fc18:	sub    eax,0x6f43202d
  43fc1d:	jo     0x43fc98
  43fc1f:	jb     0x43fc8a
  43fc21:	addr32 push 0x43282074
  43fc27:	sub    DWORD PTR [rax],esp
  43fc29:	xor    dh,BYTE PTR [rax]
  43fc2b:	xor    DWORD PTR [rbp*1+0x37313032],esi
  43fc32:	and    BYTE PTR [rsi+0x72],al
  43fc35:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43fc3a:	data16 je 0x43fcb4
  43fc3d:	(bad)  
  43fc3e:	jb     0x43fca5
  43fc40:	and    BYTE PTR [rsi+0x6f],al
  43fc43:	jne    0x43fcb3
  43fc45:	fs (bad) 
  43fc47:	je     0x43fcb2
  43fc49:	outs   dx,DWORD PTR ds:[rsi]
  43fc4a:	outs   dx,BYTE PTR ds:[rsi]
  43fc4b:	sub    al,0x20
  43fc4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43fc4f:	movsxd ebp,DWORD PTR [rsi]
  43fc51:	or     cl,BYTE PTR [rdx]
  43fc53:	and    BYTE PTR [rax],ah
  43fc55:	and    BYTE PTR [rax],ah
  43fc57:	and    BYTE PTR [rbx+0x6f],al
  43fc5a:	jo     0x43fcd5
  43fc5c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43fc63:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43fc67:	je     0x43fcdb
  43fc69:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43fc70:	and    BYTE PTR [rdi+0x66],ch
  43fc73:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43fc77:	jae    0x43fc99
  43fc79:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43fc80:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43fc88:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43fc90:	outs   dx,DWORD PTR ds:[rsi]
  43fc91:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43fc99:	outs   dx,DWORD PTR ds:[rsi]
  43fc9a:	outs   dx,BYTE PTR ds:[rsi]
  43fc9b:	sub    al,0xa
  43fc9d:	and    BYTE PTR [rax],ah
  43fc9f:	and    BYTE PTR [rax],ah
  43fca1:	and    BYTE PTR [rcx+0x72],ah
  43fca4:	and    BYTE PTR gs:[rax+0x65],dh
  43fca8:	jb     0x43fd17
  43fcaa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43fcb2:	and    BYTE PTR [rcx+0x6e],ah
  43fcb5:	jns    0x43fcd7
  43fcb7:	ins    DWORD PTR es:[rdi],dx
  43fcb8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43fcc1:	push   0x2074756f
  43fcc6:	jb     0x43fd37
  43fcc8:	jns    0x43fd2b
  43fcca:	ins    BYTE PTR es:[rdi],dx
  43fccb:	je     0x43fd46
  43fccd:	and    BYTE PTR [rax+0x72],dh
  43fcd0:	outs   dx,DWORD PTR ds:[rsi]
  43fcd1:	jbe    0x43fd3c
  43fcd3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43fcda:	and    BYTE PTR [rbx+0x6f],ah
  43fcdd:	jo     0x43fd58
  43fcdf:	jb     0x43fd4a
  43fce1:	addr32 push 0x20200a74
  43fce7:	and    BYTE PTR [rax],ah
  43fce9:	and    BYTE PTR [rsi+0x6f],ch
  43fcec:	je     0x43fd57
  43fcee:	movsxd esp,DWORD PTR [rbp+0x20]
  43fcf1:	(bad)  
  43fcf2:	outs   dx,BYTE PTR ds:[rsi]
  43fcf3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43fcf8:	jae    0x43fd1a
  43fcfa:	outs   dx,BYTE PTR ds:[rsi]
  43fcfb:	outs   dx,DWORD PTR ds:[rsi]
  43fcfc:	je     0x43fd67
  43fcfe:	movsxd esp,DWORD PTR [rbp+0x20]
  43fd01:	(bad)  
  43fd02:	jb     0x43fd69
  43fd04:	and    BYTE PTR [rax+0x72],dh
  43fd07:	gs jae 0x43fd6f
  43fd0a:	jb     0x43fd82
  43fd0c:	gs fs and BYTE PTR cs:[rax],ah
  43fd11:	sub    eax,0xa0a3e2d
  43fd16:	cmp    al,0x21
  43fd18:	sub    eax,0x4d41202d
  43fd1d:	rex.R
  43fd1e:	ss xor al,0x20
  43fd21:	ja     0x43fd8c
  43fd23:	je     0x43fd8d
  43fd25:	and    BYTE PTR [rcx+0x56],al
  43fd28:	pop    rax
  43fd29:	xor    eax,0x2d203231
  43fd2e:	sub    eax,0x3c0a0a3e
  43fd33:	and    DWORD PTR [rdi+rcx*2+0x43],eax
  43fd37:	push   rsp
  43fd38:	pop    rcx
  43fd39:	push   rax
  43fd3a:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43fd3f:	addr32 gs je 0x43fd63
  43fd43:	push   rbx
  43fd44:	pop    rcx
  43fd45:	push   rbx
  43fd46:	push   rsp
  43fd47:	rex.RB
  43fd48:	rex.WRB and BYTE PTR [r10],r12b
  43fd4b:	addr32 fs (bad) 
  43fd4e:	sub    eax,0x67726174
  43fd53:	gs je  0x43fd84
  43fd56:	fs je  0x43fdbd
  43fd59:	and    bh,BYTE PTR [rsi]
  43fd5b:	or     bh,BYTE PTR [rsp+rsi*2]
  43fd5e:	(bad)  
  43fd5f:	jb     0x43fdc8
  43fd61:	gs je  0x43fda2
  43fd64:	or     ah,BYTE PTR [rax]
  43fd66:	and    BYTE PTR [rcx+riz*2],bh
  43fd69:	jb     0x43fdce
  43fd6b:	push   0x63657469
  43fd70:	je     0x43fde7
  43fd72:	jb     0x43fdd9
  43fd74:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43fd7b:	cmp    BYTE PTR [rsi],dh
  43fd7d:	sub    eax,0x2f3c3436
  43fd82:	(bad)  
  43fd83:	jb     0x43fde8
  43fd85:	push   0x63657469
  43fd8a:	je     0x43fe01
  43fd8c:	jb     0x43fdf3
  43fd8e:	or     ah,BYTE PTR ds:[rax]
  43fd91:	and    BYTE PTR [rax+rdi*2],bh
  43fd94:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fd9a:	jne    0x43fe00
  43fd9c:	and    BYTE PTR gs:[rax+0x72],ch
  43fda0:	gs cmp ax,0x3622
  43fda5:	xor    al,0x62
  43fda7:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  43fdaf:	js     0x43fe1e
  43fdb1:	ins    BYTE PTR es:[rdi],dx
  43fdb2:	and    ch,BYTE PTR [rdi]
  43fdb4:	or     ah,BYTE PTR ds:[rax]
  43fdb7:	and    BYTE PTR [rax+rdi*2],bh
  43fdba:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fdc0:	jne    0x43fe26
  43fdc2:	and    BYTE PTR gs:[rax+0x72],ch
  43fdc6:	gs cmp ax,0x3622
  43fdcb:	xor    al,0x62
  43fdcd:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  43fdd5:	ins    DWORD PTR es:[rdi],dx
  43fdd6:	ins    BYTE PTR es:[rdi],dx
  43fdd7:	and    ch,BYTE PTR [rdi]
  43fdd9:	or     ah,BYTE PTR ds:[rax]
  43fddc:	and    BYTE PTR [rax+rdi*2],bh
  43fddf:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fde5:	jne    0x43fe4b
  43fde7:	and    BYTE PTR gs:[rax+0x72],ch
  43fdeb:	gs cmp ax,0x3622
  43fdf0:	xor    al,0x62
  43fdf2:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  43fdfa:	ins    DWORD PTR es:[rdi],dx
  43fdfb:	ins    BYTE PTR es:[rdi],dx
  43fdfc:	and    ch,BYTE PTR [rdi]
  43fdfe:	or     ah,BYTE PTR ds:[rax]
  43fe01:	and    BYTE PTR [rax+rdi*2],bh
  43fe04:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fe0a:	jne    0x43fe70
  43fe0c:	and    BYTE PTR gs:[rax+0x72],ch
  43fe10:	gs cmp ax,0x3622
  43fe15:	xor    al,0x62
  43fe17:	imul   esi,DWORD PTR [rbp+rbp*1+0x6d],0x782e7870
  43fe1f:	ins    DWORD PTR es:[rdi],dx
  43fe20:	ins    BYTE PTR es:[rdi],dx
  43fe21:	and    ch,BYTE PTR [rdi]
  43fe23:	or     ah,BYTE PTR ds:[rax]
  43fe26:	and    BYTE PTR [rax+rdi*2],bh
  43fe29:	imul   edi,DWORD PTR [rdx],0x6c636e69
  43fe2f:	jne    0x43fe95
  43fe31:	and    BYTE PTR gs:[rax+0x72],ch
  43fe35:	gs cmp ax,0x3622
  43fe3a:	xor    al,0x62
  43fe3c:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x31357876
  43fe44:	xor    ch,BYTE PTR [rsi]
  43fe46:	js     0x43feb5
  43fe48:	ins    BYTE PTR es:[rdi],dx
  43fe49:	and    ch,BYTE PTR [rdi]
  43fe4b:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  43fe4f:	je     0x43feb2
  43fe51:	jb     0x43feba
  43fe53:	gs je  0x43fe94
  43fe56:	or     al,BYTE PTR [rax]
	...
  43fe80:	cmp    al,0x3f
  43fe82:	js     0x43fef1
  43fe84:	ins    BYTE PTR es:[rdi],dx
  43fe85:	and    BYTE PTR [rsi+0x65],dh
  43fe88:	jb     0x43fefd
  43fe8a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  43fe91:	xor    BYTE PTR [rdx],ah
  43fe93:	(bad)  
  43fe94:	or     bh,BYTE PTR ds:[rcx+riz*1]
  43fe98:	sub    eax,0x6f43202d
  43fe9d:	jo     0x43ff18
  43fe9f:	jb     0x43ff0a
  43fea1:	addr32 push 0x43282074
  43fea7:	sub    DWORD PTR [rax],esp
  43fea9:	xor    dh,BYTE PTR [rax]
  43feab:	xor    DWORD PTR [rax],esi
  43fead:	sub    eax,0x37313032
  43feb2:	and    BYTE PTR [rsi+0x72],al
  43feb5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43feba:	data16 je 0x43ff34
  43febd:	(bad)  
  43febe:	jb     0x43ff25
  43fec0:	and    BYTE PTR [rsi+0x6f],al
  43fec3:	jne    0x43ff33
  43fec5:	fs (bad) 
  43fec7:	je     0x43ff32
  43fec9:	outs   dx,DWORD PTR ds:[rsi]
  43feca:	outs   dx,BYTE PTR ds:[rsi]
  43fecb:	sub    al,0x20
  43fecd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43fecf:	movsxd ebp,DWORD PTR [rsi]
  43fed1:	or     cl,BYTE PTR [rdx]
  43fed3:	and    BYTE PTR [rax],ah
  43fed5:	and    BYTE PTR [rax],ah
  43fed7:	and    BYTE PTR [rbx+0x6f],al
  43feda:	jo     0x43ff55
  43fedc:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  43fee3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  43fee7:	je     0x43ff5b
  43fee9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  43fef0:	and    BYTE PTR [rdi+0x66],ch
  43fef3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43fef7:	jae    0x43ff19
  43fef9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  43ff00:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  43ff08:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  43ff10:	outs   dx,DWORD PTR ds:[rsi]
  43ff11:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  43ff19:	outs   dx,DWORD PTR ds:[rsi]
  43ff1a:	outs   dx,BYTE PTR ds:[rsi]
  43ff1b:	sub    al,0xa
  43ff1d:	and    BYTE PTR [rax],ah
  43ff1f:	and    BYTE PTR [rax],ah
  43ff21:	and    BYTE PTR [rcx+0x72],ah
  43ff24:	and    BYTE PTR gs:[rax+0x65],dh
  43ff28:	jb     0x43ff97
  43ff2a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  43ff32:	and    BYTE PTR [rcx+0x6e],ah
  43ff35:	jns    0x43ff57
  43ff37:	ins    DWORD PTR es:[rdi],dx
  43ff38:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  43ff41:	push   0x2074756f
  43ff46:	jb     0x43ffb7
  43ff48:	jns    0x43ffab
  43ff4a:	ins    BYTE PTR es:[rdi],dx
  43ff4b:	je     0x43ffc6
  43ff4d:	and    BYTE PTR [rax+0x72],dh
  43ff50:	outs   dx,DWORD PTR ds:[rsi]
  43ff51:	jbe    0x43ffbc
  43ff53:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  43ff5a:	and    BYTE PTR [rbx+0x6f],ah
  43ff5d:	jo     0x43ffd8
  43ff5f:	jb     0x43ffca
  43ff61:	addr32 push 0x20200a74
  43ff67:	and    BYTE PTR [rax],ah
  43ff69:	and    BYTE PTR [rsi+0x6f],ch
  43ff6c:	je     0x43ffd7
  43ff6e:	movsxd esp,DWORD PTR [rbp+0x20]
  43ff71:	(bad)  
  43ff72:	outs   dx,BYTE PTR ds:[rsi]
  43ff73:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  43ff78:	jae    0x43ff9a
  43ff7a:	outs   dx,BYTE PTR ds:[rsi]
  43ff7b:	outs   dx,DWORD PTR ds:[rsi]
  43ff7c:	je     0x43ffe7
  43ff7e:	movsxd esp,DWORD PTR [rbp+0x20]
  43ff81:	(bad)  
  43ff82:	jb     0x43ffe9
  43ff84:	and    BYTE PTR [rax+0x72],dh
  43ff87:	gs jae 0x43ffef
  43ff8a:	jb     0x440002
  43ff8c:	gs fs and BYTE PTR cs:[rax],ah
  43ff91:	sub    eax,0xa0a3e2d
  43ff96:	cmp    al,0x21
  43ff98:	sub    eax,0x4d41202d
  43ff9d:	rex.R
  43ff9e:	ss xor al,0x20
  43ffa1:	ja     0x44000c
  43ffa3:	je     0x44000d
  43ffa5:	and    BYTE PTR [rcx+0x56],al
  43ffa8:	pop    rax
  43ffa9:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e3ddc
  43ffaf:	cmp    al,0x21
  43ffb1:	rex.R
  43ffb2:	rex.WRXB
  43ffb3:	rex.XB push r12
  43ffb5:	pop    rcx
  43ffb6:	push   rax
  43ffb7:	and    BYTE PTR [r9+riz*2+0x72],r14b
  43ffbc:	addr32 gs je 0x43ffe0
  43ffc0:	push   rbx
  43ffc1:	pop    rcx
  43ffc2:	push   rbx
  43ffc3:	push   rsp
  43ffc4:	rex.RB
  43ffc5:	rex.WRB and BYTE PTR [r10],r12b
  43ffc8:	addr32 fs (bad) 
  43ffcb:	sub    eax,0x67726174
  43ffd0:	gs je  0x440001
  43ffd3:	fs je  0x44003a
  43ffd6:	and    bh,BYTE PTR [rsi]
  43ffd8:	or     bh,BYTE PTR [rsp+rsi*2]
  43ffdb:	(bad)  
  43ffdc:	jb     0x440045
  43ffde:	gs je  0x44001f
  43ffe1:	or     ah,BYTE PTR [rax]
  43ffe3:	and    BYTE PTR [rcx+riz*2],bh
  43ffe6:	jb     0x44004b
  43ffe8:	push   0x63657469
  43ffed:	je     0x440064
  43ffef:	jb     0x440056
  43fff1:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  43fff8:	cmp    BYTE PTR [rsi],dh
  43fffa:	sub    eax,0x2f3c3436
  43ffff:	(bad)  
  440000:	jb     0x440065
  440002:	push   0x63657469
  440007:	je     0x44007e
  440009:	jb     0x440070
  44000b:	or     ah,BYTE PTR ds:[rax]
  44000e:	and    BYTE PTR [rax+rdi*2],bh
  440011:	imul   edi,DWORD PTR [rdx],0x6c636e69
  440017:	jne    0x44007d
  440019:	and    BYTE PTR gs:[rax+0x72],ch
  44001d:	gs cmp ax,0x3622
  440022:	xor    al,0x62
  440024:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  44002c:	js     0x44009b
  44002e:	ins    BYTE PTR es:[rdi],dx
  44002f:	and    ch,BYTE PTR [rdi]
  440031:	or     ah,BYTE PTR ds:[rax]
  440034:	and    BYTE PTR [rax+rdi*2],bh
  440037:	imul   edi,DWORD PTR [rdx],0x6c636e69
  44003d:	jne    0x4400a3
  44003f:	and    BYTE PTR gs:[rax+0x72],ch
  440043:	gs cmp ax,0x3622
  440048:	xor    al,0x62
  44004a:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  440052:	ins    DWORD PTR es:[rdi],dx
  440053:	ins    BYTE PTR es:[rdi],dx
  440054:	and    ch,BYTE PTR [rdi]
  440056:	or     ah,BYTE PTR ds:[rax]
  440059:	and    BYTE PTR [rax+rdi*2],bh
  44005c:	imul   edi,DWORD PTR [rdx],0x6c636e69
  440062:	jne    0x4400c8
  440064:	and    BYTE PTR gs:[rax+0x72],ch
  440068:	gs cmp ax,0x3622
  44006d:	xor    al,0x62
  44006f:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  440077:	ins    DWORD PTR es:[rdi],dx
  440078:	ins    BYTE PTR es:[rdi],dx
  440079:	and    ch,BYTE PTR [rdi]
  44007b:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  44007f:	je     0x4400e2
  440081:	jb     0x4400ea
  440083:	gs je  0x4400c4
  440086:	or     al,BYTE PTR [rax]
	...
  4400c0:	cmp    al,0x3f
  4400c2:	js     0x440131
  4400c4:	ins    BYTE PTR es:[rdi],dx
  4400c5:	and    BYTE PTR [rsi+0x65],dh
  4400c8:	jb     0x44013d
  4400ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  4400d1:	xor    BYTE PTR [rdx],ah
  4400d3:	(bad)  
  4400d4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  4400d8:	sub    eax,0x6f43202d
  4400dd:	jo     0x440158
  4400df:	jb     0x44014a
  4400e1:	addr32 push 0x43282074
  4400e7:	sub    DWORD PTR [rax],esp
  4400e9:	xor    dh,BYTE PTR [rax]
  4400eb:	xor    DWORD PTR [rax],esi
  4400ed:	sub    eax,0x37313032
  4400f2:	and    BYTE PTR [rsi+0x72],al
  4400f5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4400fa:	data16 je 0x440174
  4400fd:	(bad)  
  4400fe:	jb     0x440165
  440100:	and    BYTE PTR [rsi+0x6f],al
  440103:	jne    0x440173
  440105:	fs (bad) 
  440107:	je     0x440172
  440109:	outs   dx,DWORD PTR ds:[rsi]
  44010a:	outs   dx,BYTE PTR ds:[rsi]
  44010b:	sub    al,0x20
  44010d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44010f:	movsxd ebp,DWORD PTR [rsi]
  440111:	or     cl,BYTE PTR [rdx]
  440113:	and    BYTE PTR [rax],ah
  440115:	and    BYTE PTR [rax],ah
  440117:	and    BYTE PTR [rbx+0x6f],al
  44011a:	jo     0x440195
  44011c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  440123:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  440127:	je     0x44019b
  440129:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  440130:	and    BYTE PTR [rdi+0x66],ch
  440133:	and    BYTE PTR [rax+rbp*2+0x69],dh
  440137:	jae    0x440159
  440139:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  440140:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  440148:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  440150:	outs   dx,DWORD PTR ds:[rsi]
  440151:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  440159:	outs   dx,DWORD PTR ds:[rsi]
  44015a:	outs   dx,BYTE PTR ds:[rsi]
  44015b:	sub    al,0xa
  44015d:	and    BYTE PTR [rax],ah
  44015f:	and    BYTE PTR [rax],ah
  440161:	and    BYTE PTR [rcx+0x72],ah
  440164:	and    BYTE PTR gs:[rax+0x65],dh
  440168:	jb     0x4401d7
  44016a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  440172:	and    BYTE PTR [rcx+0x6e],ah
  440175:	jns    0x440197
  440177:	ins    DWORD PTR es:[rdi],dx
  440178:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  440181:	push   0x2074756f
  440186:	jb     0x4401f7
  440188:	jns    0x4401eb
  44018a:	ins    BYTE PTR es:[rdi],dx
  44018b:	je     0x440206
  44018d:	and    BYTE PTR [rax+0x72],dh
  440190:	outs   dx,DWORD PTR ds:[rsi]
  440191:	jbe    0x4401fc
  440193:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  44019a:	and    BYTE PTR [rbx+0x6f],ah
  44019d:	jo     0x440218
  44019f:	jb     0x44020a
  4401a1:	addr32 push 0x20200a74
  4401a7:	and    BYTE PTR [rax],ah
  4401a9:	and    BYTE PTR [rsi+0x6f],ch
  4401ac:	je     0x440217
  4401ae:	movsxd esp,DWORD PTR [rbp+0x20]
  4401b1:	(bad)  
  4401b2:	outs   dx,BYTE PTR ds:[rsi]
  4401b3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  4401b8:	jae    0x4401da
  4401ba:	outs   dx,BYTE PTR ds:[rsi]
  4401bb:	outs   dx,DWORD PTR ds:[rsi]
  4401bc:	je     0x440227
  4401be:	movsxd esp,DWORD PTR [rbp+0x20]
  4401c1:	(bad)  
  4401c2:	jb     0x440229
  4401c4:	and    BYTE PTR [rax+0x72],dh
  4401c7:	gs jae 0x44022f
  4401ca:	jb     0x440242
  4401cc:	gs fs and BYTE PTR cs:[rax],ah
  4401d1:	sub    eax,0xa0a3e2d
  4401d6:	cmp    al,0x21
  4401d8:	sub    eax,0x4d41202d
  4401dd:	rex.R
  4401de:	ss xor al,0x20
  4401e1:	sub    eax,0xa0a3e2d
  4401e6:	cmp    al,0x21
  4401e8:	rex.R
  4401e9:	rex.WRXB
  4401ea:	rex.XB push r12
  4401ec:	pop    rcx
  4401ed:	push   rax
  4401ee:	and    BYTE PTR [r9+riz*2+0x72],r14b
  4401f3:	addr32 gs je 0x440217
  4401f7:	push   rbx
  4401f8:	pop    rcx
  4401f9:	push   rbx
  4401fa:	push   rsp
  4401fb:	rex.RB
  4401fc:	rex.WRB and BYTE PTR [r10],r12b
  4401ff:	addr32 fs (bad) 
  440202:	sub    eax,0x67726174
  440207:	gs je  0x440238
  44020a:	fs je  0x440271
  44020d:	and    bh,BYTE PTR [rsi]
  44020f:	or     bh,BYTE PTR [rsp+rsi*2]
  440212:	(bad)  
  440213:	jb     0x44027c
  440215:	gs je  0x440256
  440218:	or     ah,BYTE PTR [rax]
  44021a:	and    BYTE PTR [rcx+riz*2],bh
  44021d:	jb     0x440282
  44021f:	push   0x63657469
  440224:	je     0x44029b
  440226:	jb     0x44028d
  440228:	imul   esi,DWORD PTR ds:[rbx],0x783a3638
  44022f:	cmp    BYTE PTR [rsi],dh
  440231:	sub    eax,0x2f3c3436
  440236:	(bad)  
  440237:	jb     0x44029c
  440239:	push   0x63657469
  44023e:	je     0x4402b5
  440240:	jb     0x4402a7
  440242:	or     ah,BYTE PTR ds:[rax]
  440245:	and    BYTE PTR [rax+rdi*2],bh
  440248:	imul   edi,DWORD PTR [rdx],0x6c636e69
  44024e:	jne    0x4402b4
  440250:	and    BYTE PTR gs:[rax+0x72],ch
  440254:	gs cmp ax,0x3622
  440259:	xor    al,0x62
  44025b:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  440263:	js     0x4402d2
  440265:	ins    BYTE PTR es:[rdi],dx
  440266:	and    ch,BYTE PTR [rdi]
  440268:	or     ah,BYTE PTR ds:[rax]
  44026b:	and    BYTE PTR [rax+rdi*2],bh
  44026e:	imul   edi,DWORD PTR [rdx],0x6c636e69
  440274:	jne    0x4402da
  440276:	and    BYTE PTR gs:[rax+0x72],ch
  44027a:	gs cmp ax,0x3622
  44027f:	xor    al,0x62
  440281:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  440289:	ins    DWORD PTR es:[rdi],dx
  44028a:	ins    BYTE PTR es:[rdi],dx
  44028b:	and    ch,BYTE PTR [rdi]
  44028d:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  440291:	je     0x4402f4
  440293:	jb     0x4402fc
  440295:	gs je  0x4402d6
  440298:	or     al,BYTE PTR [rax]
	...
  4402be:	add    BYTE PTR [rax],al
  4402c0:	cmp    al,0x3f
  4402c2:	js     0x440331
  4402c4:	ins    BYTE PTR es:[rdi],dx
  4402c5:	and    BYTE PTR [rsi+0x65],dh
  4402c8:	jb     0x44033d
  4402ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  4402d1:	xor    BYTE PTR [rdx],ah
  4402d3:	(bad)  
  4402d4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  4402d8:	sub    eax,0x6f43202d
  4402dd:	jo     0x440358
  4402df:	jb     0x44034a
  4402e1:	addr32 push 0x43282074
  4402e7:	sub    DWORD PTR [rax],esp
  4402e9:	xor    dh,BYTE PTR [rax]
  4402eb:	xor    DWORD PTR [rbx],esi
  4402ed:	sub    eax,0x37313032
  4402f2:	and    BYTE PTR [rsi+0x72],al
  4402f5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4402fa:	data16 je 0x440374
  4402fd:	(bad)  
  4402fe:	jb     0x440365
  440300:	and    BYTE PTR [rsi+0x6f],al
  440303:	jne    0x440373
  440305:	fs (bad) 
  440307:	je     0x440372
  440309:	outs   dx,DWORD PTR ds:[rsi]
  44030a:	outs   dx,BYTE PTR ds:[rsi]
  44030b:	sub    al,0x20
  44030d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44030f:	movsxd ebp,DWORD PTR [rsi]
  440311:	or     cl,BYTE PTR [rdx]
  440313:	and    BYTE PTR [rax],ah
  440315:	and    BYTE PTR [rax],ah
  440317:	and    BYTE PTR [rbx+0x6f],al
  44031a:	jo     0x440395
  44031c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  440323:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  440327:	je     0x44039b
  440329:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  440330:	and    BYTE PTR [rdi+0x66],ch
  440333:	and    BYTE PTR [rax+rbp*2+0x69],dh
  440337:	jae    0x440359
  440339:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  440340:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  440348:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  440350:	outs   dx,DWORD PTR ds:[rsi]
  440351:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  440359:	outs   dx,DWORD PTR ds:[rsi]
  44035a:	outs   dx,BYTE PTR ds:[rsi]
  44035b:	sub    al,0xa
  44035d:	and    BYTE PTR [rax],ah
  44035f:	and    BYTE PTR [rax],ah
  440361:	and    BYTE PTR [rcx+0x72],ah
  440364:	and    BYTE PTR gs:[rax+0x65],dh
  440368:	jb     0x4403d7
  44036a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  440372:	and    BYTE PTR [rcx+0x6e],ah
  440375:	jns    0x440397
  440377:	ins    DWORD PTR es:[rdi],dx
  440378:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  440381:	push   0x2074756f
  440386:	jb     0x4403f7
  440388:	jns    0x4403eb
  44038a:	ins    BYTE PTR es:[rdi],dx
  44038b:	je     0x440406
  44038d:	and    BYTE PTR [rax+0x72],dh
  440390:	outs   dx,DWORD PTR ds:[rsi]
  440391:	jbe    0x4403fc
  440393:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  44039a:	and    BYTE PTR [rbx+0x6f],ah
  44039d:	jo     0x440418
  44039f:	jb     0x44040a
  4403a1:	addr32 push 0x20200a74
  4403a7:	and    BYTE PTR [rax],ah
  4403a9:	and    BYTE PTR [rsi+0x6f],ch
  4403ac:	je     0x440417
  4403ae:	movsxd esp,DWORD PTR [rbp+0x20]
  4403b1:	(bad)  
  4403b2:	outs   dx,BYTE PTR ds:[rsi]
  4403b3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  4403b8:	jae    0x4403da
  4403ba:	outs   dx,BYTE PTR ds:[rsi]
  4403bb:	outs   dx,DWORD PTR ds:[rsi]
  4403bc:	je     0x440427
  4403be:	movsxd esp,DWORD PTR [rbp+0x20]
  4403c1:	(bad)  
  4403c2:	jb     0x440429
  4403c4:	and    BYTE PTR [rax+0x72],dh
  4403c7:	gs jae 0x44042f
  4403ca:	jb     0x440442
  4403cc:	gs fs and BYTE PTR cs:[rax],ah
  4403d1:	sub    eax,0xa0a3e2d
  4403d6:	cmp    al,0x21
  4403d8:	rex.R
  4403d9:	rex.WRXB
  4403da:	rex.XB push r12
  4403dc:	pop    rcx
  4403dd:	push   rax
  4403de:	and    BYTE PTR [r14+0x65],r12b
  4403e2:	(bad)  
  4403e3:	je     0x44045a
  4403e5:	jb     0x44044c
  4403e7:	and    BYTE PTR [rbx+0x59],dl
  4403ea:	push   rbx
  4403eb:	push   rsp
  4403ec:	rex.RB
  4403ed:	rex.WRB and BYTE PTR [r10],r12b
  4403f0:	addr32 fs (bad) 
  4403f3:	sub    eax,0x67726174
  4403f8:	gs je  0x440429
  4403fb:	fs je  0x440462
  4403fe:	and    bh,BYTE PTR [rsi]
  440400:	or     bh,BYTE PTR [rsi+riz*2]
  440403:	gs (bad) 
  440405:	je     0x44047c
  440407:	jb     0x44046e
  440409:	and    BYTE PTR [rsi+0x61],ch
  44040c:	ins    DWORD PTR es:[rdi],dx
  44040d:	gs cmp eax,0x67726f22
  440413:	outs   dx,BYTE PTR cs:[esi]
  440416:	jne    0x440446
  440418:	addr32 fs (bad) 
  44041b:	imul   esi,DWORD PTR cs:[rbx],0x6d2e3638
  440422:	jo     0x44049c
  440424:	and    bh,BYTE PTR [rsi]
  440426:	or     ah,BYTE PTR [rax]
  440428:	and    BYTE PTR [rbx+rsi*2],bh
  44042b:	je     0x44049f
  44042d:	jne    0x440492
  44042f:	je     0x440451
  440431:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x32317262
  440439:	cmp    BYTE PTR [rdx],ah
  44043b:	or     ah,BYTE PTR ds:[rax]
  44043e:	and    BYTE PTR [rax],ah
  440440:	and    BYTE PTR [rsi+riz*2],bh
  440443:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44044a:	ins    DWORD PTR es:[rdi],dx
  44044b:	gs cmp eax,0x6f626c22
  440451:	jne    0x4404c1
  440453:	and    ah,BYTE PTR fs:[rax]
  440456:	je     0x4404d1
  440458:	jo     0x4404bf
  44045a:	cmp    eax,0x6e697522
  44045f:	je     0x440497
  440461:	xor    al,0x22
  440463:	(bad)  
  440464:	or     ah,BYTE PTR ds:[rax]
  440467:	and    BYTE PTR [rax],ah
  440469:	and    BYTE PTR [rsi+riz*2],bh
  44046c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  440473:	ins    DWORD PTR es:[rdi],dx
  440474:	gs cmp eax,0x6f627522
  44047a:	jne    0x4404ea
  44047c:	fs pop rdi
  44047e:	jb     0x4404e1
  440480:	ja     0x4404a4
  440482:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440486:	gs cmp eax,0x6e697522
  44048c:	je     0x4404c4
  44048e:	xor    al,0x22
  440490:	(bad)  
  440491:	or     ah,BYTE PTR ds:[rax]
  440494:	and    BYTE PTR [rdi+rbp*1],bh
  440497:	jae    0x44050d
  440499:	jb     0x440510
  44049b:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  44049f:	or     ah,BYTE PTR [rax]
  4404a1:	and    BYTE PTR [rbx+rsi*2],bh
  4404a4:	je     0x440518
  4404a6:	jne    0x44050b
  4404a8:	je     0x4404ca
  4404aa:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x646e625f
  4404b2:	jae    0x440528
  4404b4:	(bad)  
  4404b5:	je     0x44052c
  4404b7:	jae    0x4404db
  4404b9:	and    BYTE PTR [rbx+0x69],dh
  4404bc:	jp     0x440523
  4404be:	cmp    eax,0x3e223822
  4404c3:	or     ah,BYTE PTR [rax]
  4404c5:	and    BYTE PTR [rax],ah
  4404c7:	and    BYTE PTR [rsi+riz*2],bh
  4404ca:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4404d1:	ins    DWORD PTR es:[rdi],dx
  4404d2:	gs cmp eax,0x65646222
  4404d8:	and    ah,BYTE PTR [rax]
  4404da:	jae    0x440550
  4404dc:	(bad)  
  4404dd:	jb     0x440553
  4404df:	cmp    eax,0x20223222
  4404e4:	outs   dx,BYTE PTR gs:[rsi]
  4404e6:	fs cmp eax,0x22313322
  4404ec:	(bad)  
  4404ed:	or     ah,BYTE PTR ds:[rax]
  4404f0:	and    BYTE PTR [rax],ah
  4404f2:	and    BYTE PTR [rsi+riz*2],bh
  4404f5:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4404fc:	ins    DWORD PTR es:[rdi],dx
  4404fd:	gs cmp eax,0x72726522
  440503:	outs   dx,DWORD PTR ds:[rsi]
  440504:	jb     0x440528
  440506:	and    BYTE PTR [rbx+0x74],dh
  440509:	(bad)  
  44050a:	jb     0x440580
  44050c:	cmp    eax,0x20223022
  440511:	outs   dx,BYTE PTR gs:[rsi]
  440513:	fs cmp eax,0x2f223122
  440519:	or     ah,BYTE PTR ds:[rax]
  44051c:	and    BYTE PTR [rdi+rbp*1],bh
  44051f:	jae    0x440595
  440521:	jb     0x440598
  440523:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  440527:	or     ah,BYTE PTR [rax]
  440529:	and    BYTE PTR [rsi*2+0x6e6f696e],bh
  440530:	and    BYTE PTR [rcx+0x64],ch
  440533:	cmp    eax,0x61747322
  440538:	je     0x4405af
  44053a:	jae    0x44055e
  44053c:	or     ah,BYTE PTR ds:[rax]
  44053f:	and    BYTE PTR [rax],ah
  440541:	and    BYTE PTR [rsi+riz*2],bh
  440544:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44054b:	ins    DWORD PTR es:[rdi],dx
  44054c:	gs cmp eax,0x77617222
  440552:	and    ah,BYTE PTR [rax]
  440554:	je     0x4405cf
  440556:	jo     0x4405bd
  440558:	cmp    eax,0x74616422
  44055d:	(bad)  
  44055e:	pop    rdi
  44055f:	jo     0x4405d5
  440561:	jb     0x440585
  440563:	(bad)  
  440564:	or     ah,BYTE PTR ds:[rax]
  440567:	and    BYTE PTR [rax],ah
  440569:	and    BYTE PTR [rsi+riz*2],bh
  44056c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  440573:	ins    DWORD PTR es:[rdi],dx
  440574:	gs cmp eax,0x61747322
  44057a:	je     0x4405f1
  44057c:	jae    0x4405a0
  44057e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440582:	gs cmp eax,0x6e625f22
  440588:	fs jae 0x4405ff
  44058b:	(bad)  
  44058c:	je     0x440603
  44058e:	jae    0x4405b2
  440590:	(bad)  
  440591:	or     ah,BYTE PTR ds:[rax]
  440594:	and    BYTE PTR [rdi+rbp*1],bh
  440597:	jne    0x440607
  440599:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0a3e
  4405a0:	and    BYTE PTR [rbx+rsi*2],bh
  4405a3:	je     0x440617
  4405a5:	jne    0x44060a
  4405a7:	je     0x4405c9
  4405a9:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x646e625f
  4405b1:	movsxd esp,DWORD PTR [rsi+0x67]
  4405b4:	jne    0x4405d8
  4405b6:	and    BYTE PTR [rbx+0x69],dh
  4405b9:	jp     0x440620
  4405bb:	cmp    eax,0x3e223822
  4405c0:	or     ah,BYTE PTR [rax]
  4405c2:	and    BYTE PTR [rax],ah
  4405c4:	and    BYTE PTR [rsi+riz*2],bh
  4405c7:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4405ce:	ins    DWORD PTR es:[rdi],dx
  4405cf:	gs cmp eax,0x73616222
  4405d5:	and    ah,BYTE PTR gs:[rax]
  4405d8:	jae    0x44064e
  4405da:	(bad)  
  4405db:	jb     0x440651
  4405dd:	cmp    eax,0x22323122
  4405e2:	and    BYTE PTR [rbp+0x6e],ah
  4405e5:	fs cmp eax,0x22313322
  4405eb:	and    BYTE PTR [rdi],ch
  4405ed:	or     ah,BYTE PTR ds:[rax]
  4405f0:	and    BYTE PTR [rax],ah
  4405f2:	and    BYTE PTR [rsi+riz*2],bh
  4405f5:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4405fc:	ins    DWORD PTR es:[rdi],dx
  4405fd:	gs cmp eax,0x73657222
  440603:	gs jb  0x44067c
  440606:	gs and ah,BYTE PTR fs:[rax]
  44060a:	jae    0x440680
  44060c:	(bad)  
  44060d:	jb     0x440683
  44060f:	cmp    eax,0x20223222
  440614:	outs   dx,BYTE PTR gs:[rsi]
  440616:	fs cmp eax,0x22313122
  44061c:	(bad)  
  44061d:	or     ah,BYTE PTR ds:[rax]
  440620:	and    BYTE PTR [rax],ah
  440622:	and    BYTE PTR [rcx+riz*1],bh
  440625:	sub    eax,0x7845202d
  44062a:	jo     0x440698
  44062c:	imul   esp,DWORD PTR [rbx+0x69],0x20796c74
  440633:	jae    0x44069a
  440635:	je     0x440657
  440637:	je     0x4406a1
  440639:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  44063e:	and    BYTE PTR gs:[rax+0x65],ch
  440642:	jb     0x4406a9
  440644:	sub    al,0x20
  440646:	outs   dx,DWORD PTR ds:[rsi]
  440647:	je     0x4406b1
  440649:	gs jb  0x4406c3
  44064c:	imul   esi,DWORD PTR [rbx+0x65],0x20746920
  440653:	fs gs data16 (bad) 
  440657:	jne    0x4406c5
  440659:	je     0x4406ce
  44065b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  44065f:	(bad)  
  440660:	outs   dx,DWORD PTR ds:[rsi]
  440661:	outs   dx,DWORD PTR ds:[rsi]
  440662:	ins    BYTE PTR es:[rdi],dx
  440663:	or     ah,BYTE PTR cs:[rax]
  440666:	and    BYTE PTR [rax],ah
  440668:	and    BYTE PTR [rax],ah
  44066a:	and    BYTE PTR [rax],ah
  44066c:	and    BYTE PTR [rax],ah
  44066e:	push   rax
  44066f:	gs jb  0x4406da
  440672:	(bad)  
  440673:	jo     0x4406e8
  440675:	and    BYTE PTR [rax+rbp*2+0x69],dh
  440679:	jae    0x44069b
  44067b:	jae    0x4406e5
  44067d:	outs   dx,DWORD PTR ds:[rsi]
  44067e:	jne    0x4406ec
  440680:	and    BYTE PTR fs:[rdx+0x65],ah
  440684:	and    BYTE PTR [rbp+0x69],dh
  440687:	outs   dx,BYTE PTR ds:[rsi]
  440688:	je     0x4406bd
  44068a:	xor    ch,BYTE PTR [rax+riz*1]
  44068d:	(bad)  
  44068e:	jne    0x440704
  440690:	and    BYTE PTR [rax+rbp*2+0x65],dh
  440694:	and    BYTE PTR [rbx+0x6f],ah
  440697:	outs   dx,BYTE PTR ds:[rsi]
  440698:	je     0x4406fb
  44069a:	imul   ebp,DWORD PTR [rsi+0x65],0x79742072
  4406a1:	jo     0x440708
  4406a3:	and    BYTE PTR [rax+0x61],ch
  4406a6:	jae    0x4406c8
  4406a8:	jae    0x440713
  4406aa:	jp     0x440711
  4406ac:	and    BYTE PTR [rax],bh
  4406ae:	and    BYTE PTR cs:[rax],ah
  4406b1:	sub    eax,0x200a3e2d
  4406b6:	and    BYTE PTR [rax],ah
  4406b8:	and    BYTE PTR [rsi+riz*2],bh
  4406bb:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4406c2:	ins    DWORD PTR es:[rdi],dx
  4406c3:	gs cmp eax,0x65727022
  4406c9:	jae    0x440730
  4406cb:	jb     0x440743
  4406cd:	gs and ah,BYTE PTR fs:[rax]
  4406d1:	jae    0x440747
  4406d3:	(bad)  
  4406d4:	jb     0x44074a
  4406d6:	cmp    eax,0x20223122
  4406db:	outs   dx,BYTE PTR gs:[rsi]
  4406dd:	fs cmp eax,0x20223122
  4406e3:	je     0x44075e
  4406e5:	jo     0x44074c
  4406e7:	cmp    eax,0x6e697522
  4406ec:	je     0x440724
  4406ee:	xor    al,0x22
  4406f0:	(bad)  
  4406f1:	or     ah,BYTE PTR ds:[rax]
  4406f4:	and    BYTE PTR [rax],ah
  4406f6:	and    BYTE PTR [rsi+riz*2],bh
  4406f9:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  440700:	ins    DWORD PTR es:[rdi],dx
  440701:	gs cmp eax,0x616e6522
  440707:	(bad)  
  440708:	ins    BYTE PTR es:[rdi],dx
  440709:	gs and ah,BYTE PTR fs:[rax]
  44070d:	jae    0x440783
  44070f:	(bad)  
  440710:	jb     0x440786
  440712:	cmp    eax,0x20223022
  440717:	outs   dx,BYTE PTR gs:[rsi]
  440719:	fs cmp eax,0x20223022
  44071f:	je     0x44079a
  440721:	jo     0x440788
  440723:	cmp    eax,0x6e697522
  440728:	je     0x440760
  44072a:	xor    al,0x22
  44072c:	(bad)  
  44072d:	or     ah,BYTE PTR ds:[rax]
  440730:	and    BYTE PTR [rdi+rbp*1],bh
  440733:	jae    0x4407a9
  440735:	jb     0x4407ac
  440737:	movsxd esi,DWORD PTR [rsi+rdi*1+0xa]
  44073b:	or     ah,BYTE PTR [rax]
  44073d:	and    BYTE PTR [rax],ah
  44073f:	cmp    al,0x75
  440741:	outs   dx,BYTE PTR ds:[rsi]
  440742:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d646920
  440749:	and    ah,BYTE PTR [rbx+0x66]
  44074c:	addr32 jne 0x440771
  44074f:	or     ah,BYTE PTR ds:[rax]
  440752:	and    BYTE PTR [rax],ah
  440754:	and    BYTE PTR [rsi+riz*2],bh
  440757:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44075e:	ins    DWORD PTR es:[rdi],dx
  44075f:	gs cmp eax,0x77617222
  440765:	and    ah,BYTE PTR [rax]
  440767:	je     0x4407e2
  440769:	jo     0x4407d0
  44076b:	cmp    eax,0x74616422
  440770:	(bad)  
  440771:	pop    rdi
  440772:	jo     0x4407e8
  440774:	jb     0x440798
  440776:	(bad)  
  440777:	or     ah,BYTE PTR ds:[rax]
  44077a:	and    BYTE PTR [rax],ah
  44077c:	and    BYTE PTR [rsi+riz*2],bh
  44077f:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  440786:	ins    DWORD PTR es:[rdi],dx
  440787:	gs cmp eax,0x6e6f6322
  44078d:	imul   sp,WORD PTR [rdi+0x22],0x7420
  440793:	jns    0x440805
  440795:	gs cmp eax,0x6e625f22
  44079b:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  44079f:	jne    0x4407c3
  4407a1:	(bad)  
  4407a2:	or     ah,BYTE PTR ds:[rax]
  4407a5:	and    BYTE PTR [rdi+rbp*1],bh
  4407a8:	jne    0x440818
  4407aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0a3e
  4407b1:	and    BYTE PTR [rdx+rsi*2],bh
  4407b4:	and    BYTE PTR gs:[esi+0x61],ch
  4407b9:	ins    DWORD PTR es:[rdi],dx
  4407ba:	gs cmp eax,0x646e6222
  4407c0:	xor    BYTE PTR [rdx+0x61],dh
  4407c3:	ja     0x4407e7
  4407c5:	and    BYTE PTR [rdx+0x69],ah
  4407c8:	je     0x44083d
  4407ca:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  4407d1:	cmp    BYTE PTR [rdx],ah
  4407d3:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4407d7:	gs cmp eax,0x31726222
  4407dd:	xor    bh,BYTE PTR [rax]
  4407df:	and    ch,BYTE PTR [rdi]
  4407e1:	or     ah,BYTE PTR ds:[rax]
  4407e4:	and    BYTE PTR [rdx+rsi*2],bh
  4407e7:	and    BYTE PTR gs:[esi+0x61],ch
  4407ec:	ins    DWORD PTR es:[rdi],dx
  4407ed:	gs cmp eax,0x646e6222
  4407f3:	xor    DWORD PTR [rdx+0x61],esi
  4407f6:	ja     0x44081a
  4407f8:	and    BYTE PTR [rdx+0x69],ah
  4407fb:	je     0x440870
  4407fd:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440804:	cmp    BYTE PTR [rdx],ah
  440806:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44080a:	gs cmp eax,0x31726222
  440810:	xor    bh,BYTE PTR [rax]
  440812:	and    ch,BYTE PTR [rdi]
  440814:	or     ah,BYTE PTR ds:[rax]
  440817:	and    BYTE PTR [rdx+rsi*2],bh
  44081a:	and    BYTE PTR gs:[esi+0x61],ch
  44081f:	ins    DWORD PTR es:[rdi],dx
  440820:	gs cmp eax,0x646e6222
  440826:	xor    dh,BYTE PTR [rdx+0x61]
  440829:	ja     0x44084d
  44082b:	and    BYTE PTR [rdx+0x69],ah
  44082e:	je     0x4408a3
  440830:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440837:	cmp    BYTE PTR [rdx],ah
  440839:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44083d:	gs cmp eax,0x31726222
  440843:	xor    bh,BYTE PTR [rax]
  440845:	and    ch,BYTE PTR [rdi]
  440847:	or     ah,BYTE PTR ds:[rax]
  44084a:	and    BYTE PTR [rdx+rsi*2],bh
  44084d:	and    BYTE PTR gs:[esi+0x61],ch
  440852:	ins    DWORD PTR es:[rdi],dx
  440853:	gs cmp eax,0x646e6222
  440859:	xor    esi,DWORD PTR [rdx+0x61]
  44085c:	ja     0x440880
  44085e:	and    BYTE PTR [rdx+0x69],ah
  440861:	je     0x4408d6
  440863:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  44086a:	cmp    BYTE PTR [rdx],ah
  44086c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440870:	gs cmp eax,0x31726222
  440876:	xor    bh,BYTE PTR [rax]
  440878:	and    ch,BYTE PTR [rdi]
  44087a:	or     ah,BYTE PTR ds:[rax]
  44087d:	and    BYTE PTR [rdx+rsi*2],bh
  440880:	and    BYTE PTR gs:[esi+0x61],ch
  440885:	ins    DWORD PTR es:[rdi],dx
  440886:	gs cmp eax,0x646e6222
  44088c:	movsxd esp,DWORD PTR [rsi+0x67]
  44088f:	jne    0x4408b3
  440891:	and    BYTE PTR [rax],ah
  440893:	and    BYTE PTR [rax],ah
  440895:	(bad)  
  440896:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  44089e:	ss xor al,0x22
  4408a1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4408a5:	gs cmp eax,0x67666322
  4408ab:	jne    0x4408cf
  4408ad:	(bad)  
  4408ae:	or     ah,BYTE PTR ds:[rax]
  4408b1:	and    BYTE PTR [rdx+rsi*2],bh
  4408b4:	and    BYTE PTR gs:[esi+0x61],ch
  4408b9:	ins    DWORD PTR es:[rdi],dx
  4408ba:	gs cmp eax,0x646e6222
  4408c0:	jae    0x440936
  4408c2:	(bad)  
  4408c3:	je     0x44093a
  4408c5:	jae    0x4408e9
  4408c7:	and    BYTE PTR [rax],ah
  4408c9:	(bad)  
  4408ca:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4408d2:	ss xor al,0x22
  4408d5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4408d9:	gs cmp eax,0x61747322
  4408df:	je     0x440956
  4408e1:	jae    0x440905
  4408e3:	(bad)  
  4408e4:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  4408e8:	data16 gs (bad) 
  4408eb:	je     0x440962
  4408ed:	jb     0x440954
  4408ef:	or     al,BYTE PTR ds:[rax]
	...
  4408fe:	add    BYTE PTR [rax],al
  440900:	cmp    al,0x3f
  440902:	js     0x440971
  440904:	ins    BYTE PTR es:[rdi],dx
  440905:	and    BYTE PTR [rsi+0x65],dh
  440908:	jb     0x44097d
  44090a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  440911:	xor    BYTE PTR [rdx],ah
  440913:	(bad)  
  440914:	or     bh,BYTE PTR ds:[rcx+riz*1]
  440918:	sub    eax,0x6f43202d
  44091d:	jo     0x440998
  44091f:	jb     0x44098a
  440921:	addr32 push 0x43282074
  440927:	sub    DWORD PTR [rax],esp
  440929:	xor    dh,BYTE PTR [rax]
  44092b:	xor    DWORD PTR [rbp*1+0x37313032],esi
  440932:	and    BYTE PTR [rsi+0x72],al
  440935:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44093a:	data16 je 0x4409b4
  44093d:	(bad)  
  44093e:	jb     0x4409a5
  440940:	and    BYTE PTR [rsi+0x6f],al
  440943:	jne    0x4409b3
  440945:	fs (bad) 
  440947:	je     0x4409b2
  440949:	outs   dx,DWORD PTR ds:[rsi]
  44094a:	outs   dx,BYTE PTR ds:[rsi]
  44094b:	sub    al,0x20
  44094d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44094f:	movsxd ebp,DWORD PTR [rsi]
  440951:	or     cl,BYTE PTR [rdx]
  440953:	and    BYTE PTR [rax],ah
  440955:	and    BYTE PTR [rax],ah
  440957:	and    BYTE PTR [rbx+0x6f],al
  44095a:	jo     0x4409d5
  44095c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  440963:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  440967:	je     0x4409db
  440969:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  440970:	and    BYTE PTR [rdi+0x66],ch
  440973:	and    BYTE PTR [rax+rbp*2+0x69],dh
  440977:	jae    0x440999
  440979:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  440980:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  440988:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  440990:	outs   dx,DWORD PTR ds:[rsi]
  440991:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  440999:	outs   dx,DWORD PTR ds:[rsi]
  44099a:	outs   dx,BYTE PTR ds:[rsi]
  44099b:	sub    al,0xa
  44099d:	and    BYTE PTR [rax],ah
  44099f:	and    BYTE PTR [rax],ah
  4409a1:	and    BYTE PTR [rcx+0x72],ah
  4409a4:	and    BYTE PTR gs:[rax+0x65],dh
  4409a8:	jb     0x440a17
  4409aa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4409b2:	and    BYTE PTR [rcx+0x6e],ah
  4409b5:	jns    0x4409d7
  4409b7:	ins    DWORD PTR es:[rdi],dx
  4409b8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  4409c1:	push   0x2074756f
  4409c6:	jb     0x440a37
  4409c8:	jns    0x440a2b
  4409ca:	ins    BYTE PTR es:[rdi],dx
  4409cb:	je     0x440a46
  4409cd:	and    BYTE PTR [rax+0x72],dh
  4409d0:	outs   dx,DWORD PTR ds:[rsi]
  4409d1:	jbe    0x440a3c
  4409d3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  4409da:	and    BYTE PTR [rbx+0x6f],ah
  4409dd:	jo     0x440a58
  4409df:	jb     0x440a4a
  4409e1:	addr32 push 0x20200a74
  4409e7:	and    BYTE PTR [rax],ah
  4409e9:	and    BYTE PTR [rsi+0x6f],ch
  4409ec:	je     0x440a57
  4409ee:	movsxd esp,DWORD PTR [rbp+0x20]
  4409f1:	(bad)  
  4409f2:	outs   dx,BYTE PTR ds:[rsi]
  4409f3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  4409f8:	jae    0x440a1a
  4409fa:	outs   dx,BYTE PTR ds:[rsi]
  4409fb:	outs   dx,DWORD PTR ds:[rsi]
  4409fc:	je     0x440a67
  4409fe:	movsxd esp,DWORD PTR [rbp+0x20]
  440a01:	(bad)  
  440a02:	jb     0x440a69
  440a04:	and    BYTE PTR [rax+0x72],dh
  440a07:	gs jae 0x440a6f
  440a0a:	jb     0x440a82
  440a0c:	gs fs and BYTE PTR cs:[rax],ah
  440a11:	sub    eax,0xa0a3e2d
  440a16:	cmp    al,0x21
  440a18:	rex.R
  440a19:	rex.WRXB
  440a1a:	rex.XB push r12
  440a1c:	pop    rcx
  440a1d:	push   rax
  440a1e:	and    BYTE PTR [r14+0x65],r12b
  440a22:	(bad)  
  440a23:	je     0x440a9a
  440a25:	jb     0x440a8c
  440a27:	and    BYTE PTR [rbx+0x59],dl
  440a2a:	push   rbx
  440a2b:	push   rsp
  440a2c:	rex.RB
  440a2d:	rex.WRB and BYTE PTR [r10],r12b
  440a30:	addr32 fs (bad) 
  440a33:	sub    eax,0x67726174
  440a38:	gs je  0x440a69
  440a3b:	fs je  0x440aa2
  440a3e:	and    bh,BYTE PTR [rsi]
  440a40:	or     bh,BYTE PTR [rsi+riz*2]
  440a43:	gs (bad) 
  440a45:	je     0x440abc
  440a47:	jb     0x440aae
  440a49:	and    BYTE PTR [rsi+0x61],ch
  440a4c:	ins    DWORD PTR es:[rdi],dx
  440a4d:	gs cmp eax,0x67726f22
  440a53:	outs   dx,BYTE PTR cs:[esi]
  440a56:	jne    0x440a86
  440a58:	addr32 fs (bad) 
  440a5b:	imul   esi,DWORD PTR cs:[rbx],0x612e3638
  440a62:	jbe    0x440adc
  440a64:	xor    eax,0x3e223231
  440a69:	or     ah,BYTE PTR [rax]
  440a6b:	and    BYTE PTR [rsi+rsi*2],bh
  440a6e:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  440a73:	and    BYTE PTR [rcx+0x64],ch
  440a76:	cmp    eax,0x75327622
  440a7b:	imul   esi,DWORD PTR [rcx],0x20223832
  440a81:	je     0x440afc
  440a83:	jo     0x440aea
  440a85:	cmp    eax,0x6e697522
  440a8a:	je     0x440abd
  440a8c:	xor    bh,BYTE PTR [rax]
  440a8e:	and    ah,BYTE PTR [rax]
  440a90:	movsxd ebp,DWORD PTR [rdi+0x75]
  440a93:	outs   dx,BYTE PTR ds:[rsi]
  440a94:	je     0x440ad3
  440a96:	and    dh,BYTE PTR [rdx]
  440a98:	and    ch,BYTE PTR [rdi]
  440a9a:	or     cl,BYTE PTR ds:[rdx]
  440a9d:	and    BYTE PTR [rax],ah
  440a9f:	cmp    al,0x72
  440aa1:	and    BYTE PTR gs:[esi+0x61],ch
  440aa6:	ins    DWORD PTR es:[rdi],dx
  440aa7:	gs cmp eax,0x22306b22
  440aad:	and    BYTE PTR [rdx+0x69],ah
  440ab0:	je     0x440b25
  440ab2:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440ab9:	and    ah,BYTE PTR [rax]
  440abb:	je     0x440b36
  440abd:	jo     0x440b24
  440abf:	cmp    eax,0x6e697522
  440ac4:	je     0x440afc
  440ac6:	xor    al,0x22
  440ac8:	(bad)  
  440ac9:	or     ah,BYTE PTR ds:[rax]
  440acc:	and    BYTE PTR [rdx+rsi*2],bh
  440acf:	and    BYTE PTR gs:[esi+0x61],ch
  440ad4:	ins    DWORD PTR es:[rdi],dx
  440ad5:	gs cmp eax,0x22316b22
  440adb:	and    BYTE PTR [rdx+0x69],ah
  440ade:	je     0x440b53
  440ae0:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440ae7:	and    ah,BYTE PTR [rax]
  440ae9:	je     0x440b64
  440aeb:	jo     0x440b52
  440aed:	cmp    eax,0x6e697522
  440af2:	je     0x440b2a
  440af4:	xor    al,0x22
  440af6:	(bad)  
  440af7:	or     ah,BYTE PTR ds:[rax]
  440afa:	and    BYTE PTR [rdx+rsi*2],bh
  440afd:	and    BYTE PTR gs:[esi+0x61],ch
  440b02:	ins    DWORD PTR es:[rdi],dx
  440b03:	gs cmp eax,0x22326b22
  440b09:	and    BYTE PTR [rdx+0x69],ah
  440b0c:	je     0x440b81
  440b0e:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440b15:	and    ah,BYTE PTR [rax]
  440b17:	je     0x440b92
  440b19:	jo     0x440b80
  440b1b:	cmp    eax,0x6e697522
  440b20:	je     0x440b58
  440b22:	xor    al,0x22
  440b24:	(bad)  
  440b25:	or     ah,BYTE PTR ds:[rax]
  440b28:	and    BYTE PTR [rdx+rsi*2],bh
  440b2b:	and    BYTE PTR gs:[esi+0x61],ch
  440b30:	ins    DWORD PTR es:[rdi],dx
  440b31:	gs cmp eax,0x22336b22
  440b37:	and    BYTE PTR [rdx+0x69],ah
  440b3a:	je     0x440baf
  440b3c:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440b43:	and    ah,BYTE PTR [rax]
  440b45:	je     0x440bc0
  440b47:	jo     0x440bae
  440b49:	cmp    eax,0x6e697522
  440b4e:	je     0x440b86
  440b50:	xor    al,0x22
  440b52:	(bad)  
  440b53:	or     ah,BYTE PTR ds:[rax]
  440b56:	and    BYTE PTR [rdx+rsi*2],bh
  440b59:	and    BYTE PTR gs:[esi+0x61],ch
  440b5e:	ins    DWORD PTR es:[rdi],dx
  440b5f:	gs cmp eax,0x22346b22
  440b65:	and    BYTE PTR [rdx+0x69],ah
  440b68:	je     0x440bdd
  440b6a:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440b71:	and    ah,BYTE PTR [rax]
  440b73:	je     0x440bee
  440b75:	jo     0x440bdc
  440b77:	cmp    eax,0x6e697522
  440b7c:	je     0x440bb4
  440b7e:	xor    al,0x22
  440b80:	(bad)  
  440b81:	or     ah,BYTE PTR ds:[rax]
  440b84:	and    BYTE PTR [rdx+rsi*2],bh
  440b87:	and    BYTE PTR gs:[esi+0x61],ch
  440b8c:	ins    DWORD PTR es:[rdi],dx
  440b8d:	gs cmp eax,0x22356b22
  440b93:	and    BYTE PTR [rdx+0x69],ah
  440b96:	je     0x440c0b
  440b98:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440b9f:	and    ah,BYTE PTR [rax]
  440ba1:	je     0x440c1c
  440ba3:	jo     0x440c0a
  440ba5:	cmp    eax,0x6e697522
  440baa:	je     0x440be2
  440bac:	xor    al,0x22
  440bae:	(bad)  
  440baf:	or     ah,BYTE PTR ds:[rax]
  440bb2:	and    BYTE PTR [rdx+rsi*2],bh
  440bb5:	and    BYTE PTR gs:[esi+0x61],ch
  440bba:	ins    DWORD PTR es:[rdi],dx
  440bbb:	gs cmp eax,0x22366b22
  440bc1:	and    BYTE PTR [rdx+0x69],ah
  440bc4:	je     0x440c39
  440bc6:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440bcd:	and    ah,BYTE PTR [rax]
  440bcf:	je     0x440c4a
  440bd1:	jo     0x440c38
  440bd3:	cmp    eax,0x6e697522
  440bd8:	je     0x440c10
  440bda:	xor    al,0x22
  440bdc:	(bad)  
  440bdd:	or     ah,BYTE PTR ds:[rax]
  440be0:	and    BYTE PTR [rdx+rsi*2],bh
  440be3:	and    BYTE PTR gs:[esi+0x61],ch
  440be8:	ins    DWORD PTR es:[rdi],dx
  440be9:	gs cmp eax,0x22376b22
  440bef:	and    BYTE PTR [rdx+0x69],ah
  440bf2:	je     0x440c67
  440bf4:	imul   edi,DWORD PTR [rdx+0x65],0x3436223d
  440bfb:	and    ah,BYTE PTR [rax]
  440bfd:	je     0x440c78
  440bff:	jo     0x440c66
  440c01:	cmp    eax,0x6e697522
  440c06:	je     0x440c3e
  440c08:	xor    al,0x22
  440c0a:	(bad)  
  440c0b:	or     cl,BYTE PTR ds:[rdx]
  440c0e:	and    BYTE PTR [rax],ah
  440c10:	cmp    al,0x72
  440c12:	and    BYTE PTR gs:[esi+0x61],ch
  440c17:	ins    DWORD PTR es:[rdi],dx
  440c18:	gs cmp eax,0x6d6d7a22
  440c1e:	xor    BYTE PTR [rax+0x22],ch
  440c21:	and    BYTE PTR [rdx+0x69],ah
  440c24:	je     0x440c99
  440c26:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440c2d:	and    ah,BYTE PTR ss:[rax]
  440c30:	je     0x440cab
  440c32:	jo     0x440c99
  440c34:	cmp    eax,0x75327622
  440c39:	imul   esi,DWORD PTR [rcx],0x2f223832
  440c3f:	or     ah,BYTE PTR ds:[rax]
  440c42:	and    BYTE PTR [rdx+rsi*2],bh
  440c45:	and    BYTE PTR gs:[esi+0x61],ch
  440c4a:	ins    DWORD PTR es:[rdi],dx
  440c4b:	gs cmp eax,0x6d6d7a22
  440c51:	xor    DWORD PTR [rax+0x22],ebp
  440c54:	and    BYTE PTR [rdx+0x69],ah
  440c57:	je     0x440ccc
  440c59:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440c60:	and    ah,BYTE PTR ss:[rax]
  440c63:	je     0x440cde
  440c65:	jo     0x440ccc
  440c67:	cmp    eax,0x75327622
  440c6c:	imul   esi,DWORD PTR [rcx],0x2f223832
  440c72:	or     ah,BYTE PTR ds:[rax]
  440c75:	and    BYTE PTR [rdx+rsi*2],bh
  440c78:	and    BYTE PTR gs:[esi+0x61],ch
  440c7d:	ins    DWORD PTR es:[rdi],dx
  440c7e:	gs cmp eax,0x6d6d7a22
  440c84:	xor    ch,BYTE PTR [rax+0x22]
  440c87:	and    BYTE PTR [rdx+0x69],ah
  440c8a:	je     0x440cff
  440c8c:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440c93:	and    ah,BYTE PTR ss:[rax]
  440c96:	je     0x440d11
  440c98:	jo     0x440cff
  440c9a:	cmp    eax,0x75327622
  440c9f:	imul   esi,DWORD PTR [rcx],0x2f223832
  440ca5:	or     ah,BYTE PTR ds:[rax]
  440ca8:	and    BYTE PTR [rdx+rsi*2],bh
  440cab:	and    BYTE PTR gs:[esi+0x61],ch
  440cb0:	ins    DWORD PTR es:[rdi],dx
  440cb1:	gs cmp eax,0x6d6d7a22
  440cb7:	xor    ebp,DWORD PTR [rax+0x22]
  440cba:	and    BYTE PTR [rdx+0x69],ah
  440cbd:	je     0x440d32
  440cbf:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440cc6:	and    ah,BYTE PTR ss:[rax]
  440cc9:	je     0x440d44
  440ccb:	jo     0x440d32
  440ccd:	cmp    eax,0x75327622
  440cd2:	imul   esi,DWORD PTR [rcx],0x2f223832
  440cd8:	or     ah,BYTE PTR ds:[rax]
  440cdb:	and    BYTE PTR [rdx+rsi*2],bh
  440cde:	and    BYTE PTR gs:[esi+0x61],ch
  440ce3:	ins    DWORD PTR es:[rdi],dx
  440ce4:	gs cmp eax,0x6d6d7a22
  440cea:	xor    al,0x68
  440cec:	and    ah,BYTE PTR [rax]
  440cee:	(bad)  
  440cef:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  440cf7:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x74642f33
  440cfd:	jns    0x440d6f
  440cff:	gs cmp eax,0x75327622
  440d05:	imul   esi,DWORD PTR [rcx],0x2f223832
  440d0b:	or     ah,BYTE PTR ds:[rax]
  440d0e:	and    BYTE PTR [rdx+rsi*2],bh
  440d11:	and    BYTE PTR gs:[esi+0x61],ch
  440d16:	ins    DWORD PTR es:[rdi],dx
  440d17:	gs cmp eax,0x6d6d7a22
  440d1d:	xor    eax,0x62202268
  440d22:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  440d2a:	xor    dh,BYTE PTR [rip+0x74202236]        # 0x74642f66
  440d30:	jns    0x440da2
  440d32:	gs cmp eax,0x75327622
  440d38:	imul   esi,DWORD PTR [rcx],0x2f223832
  440d3e:	or     ah,BYTE PTR ds:[rax]
  440d41:	and    BYTE PTR [rdx+rsi*2],bh
  440d44:	and    BYTE PTR gs:[esi+0x61],ch
  440d49:	ins    DWORD PTR es:[rdi],dx
  440d4a:	gs cmp eax,0x6d6d7a22
  440d50:	ss push 0x69622022
  440d56:	je     0x440dcb
  440d58:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440d5f:	and    ah,BYTE PTR ss:[rax]
  440d62:	je     0x440ddd
  440d64:	jo     0x440dcb
  440d66:	cmp    eax,0x75327622
  440d6b:	imul   esi,DWORD PTR [rcx],0x2f223832
  440d71:	or     ah,BYTE PTR ds:[rax]
  440d74:	and    BYTE PTR [rdx+rsi*2],bh
  440d77:	and    BYTE PTR gs:[esi+0x61],ch
  440d7c:	ins    DWORD PTR es:[rdi],dx
  440d7d:	gs cmp eax,0x6d6d7a22
  440d83:	(bad)  
  440d84:	push   0x69622022
  440d89:	je     0x440dfe
  440d8b:	imul   edi,DWORD PTR [rdx+0x65],0x3532223d
  440d92:	and    ah,BYTE PTR ss:[rax]
  440d95:	je     0x440e10
  440d97:	jo     0x440dfe
  440d99:	cmp    eax,0x75327622
  440d9e:	imul   esi,DWORD PTR [rcx],0x2f223832
  440da4:	or     cl,BYTE PTR ds:[rdx]
  440da7:	cmp    al,0x2f
  440da9:	data16 gs (bad) 
  440dac:	je     0x440e23
  440dae:	jb     0x440e15
  440db0:	or     al,BYTE PTR ds:[rax]
	...
  440dbf:	add    BYTE PTR [rdi+rdi*1],bh
  440dc2:	js     0x440e31
  440dc4:	ins    BYTE PTR es:[rdi],dx
  440dc5:	and    BYTE PTR [rsi+0x65],dh
  440dc8:	jb     0x440e3d
  440dca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  440dd1:	xor    BYTE PTR [rdx],ah
  440dd3:	(bad)  
  440dd4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  440dd8:	sub    eax,0x6f43202d
  440ddd:	jo     0x440e58
  440ddf:	jb     0x440e4a
  440de1:	addr32 push 0x43282074
  440de7:	sub    DWORD PTR [rax],esp
  440de9:	xor    dh,BYTE PTR [rax]
  440deb:	xor    DWORD PTR [rax],esi
  440ded:	sub    eax,0x37313032
  440df2:	and    BYTE PTR [rsi+0x72],al
  440df5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  440dfa:	data16 je 0x440e74
  440dfd:	(bad)  
  440dfe:	jb     0x440e65
  440e00:	and    BYTE PTR [rsi+0x6f],al
  440e03:	jne    0x440e73
  440e05:	fs (bad) 
  440e07:	je     0x440e72
  440e09:	outs   dx,DWORD PTR ds:[rsi]
  440e0a:	outs   dx,BYTE PTR ds:[rsi]
  440e0b:	sub    al,0x20
  440e0d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  440e0f:	movsxd ebp,DWORD PTR [rsi]
  440e11:	or     cl,BYTE PTR [rdx]
  440e13:	and    BYTE PTR [rax],ah
  440e15:	and    BYTE PTR [rax],ah
  440e17:	and    BYTE PTR [rbx+0x6f],al
  440e1a:	jo     0x440e95
  440e1c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  440e23:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  440e27:	je     0x440e9b
  440e29:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  440e30:	and    BYTE PTR [rdi+0x66],ch
  440e33:	and    BYTE PTR [rax+rbp*2+0x69],dh
  440e37:	jae    0x440e59
  440e39:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  440e40:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  440e48:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  440e50:	outs   dx,DWORD PTR ds:[rsi]
  440e51:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  440e59:	outs   dx,DWORD PTR ds:[rsi]
  440e5a:	outs   dx,BYTE PTR ds:[rsi]
  440e5b:	sub    al,0xa
  440e5d:	and    BYTE PTR [rax],ah
  440e5f:	and    BYTE PTR [rax],ah
  440e61:	and    BYTE PTR [rcx+0x72],ah
  440e64:	and    BYTE PTR gs:[rax+0x65],dh
  440e68:	jb     0x440ed7
  440e6a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  440e72:	and    BYTE PTR [rcx+0x6e],ah
  440e75:	jns    0x440e97
  440e77:	ins    DWORD PTR es:[rdi],dx
  440e78:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  440e81:	push   0x2074756f
  440e86:	jb     0x440ef7
  440e88:	jns    0x440eeb
  440e8a:	ins    BYTE PTR es:[rdi],dx
  440e8b:	je     0x440f06
  440e8d:	and    BYTE PTR [rax+0x72],dh
  440e90:	outs   dx,DWORD PTR ds:[rsi]
  440e91:	jbe    0x440efc
  440e93:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  440e9a:	and    BYTE PTR [rbx+0x6f],ah
  440e9d:	jo     0x440f18
  440e9f:	jb     0x440f0a
  440ea1:	addr32 push 0x20200a74
  440ea7:	and    BYTE PTR [rax],ah
  440ea9:	and    BYTE PTR [rsi+0x6f],ch
  440eac:	je     0x440f17
  440eae:	movsxd esp,DWORD PTR [rbp+0x20]
  440eb1:	(bad)  
  440eb2:	outs   dx,BYTE PTR ds:[rsi]
  440eb3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  440eb8:	jae    0x440eda
  440eba:	outs   dx,BYTE PTR ds:[rsi]
  440ebb:	outs   dx,DWORD PTR ds:[rsi]
  440ebc:	je     0x440f27
  440ebe:	movsxd esp,DWORD PTR [rbp+0x20]
  440ec1:	(bad)  
  440ec2:	jb     0x440f29
  440ec4:	and    BYTE PTR [rax+0x72],dh
  440ec7:	gs jae 0x440f2f
  440eca:	jb     0x440f42
  440ecc:	gs fs and BYTE PTR cs:[rax],ah
  440ed1:	sub    eax,0xa0a3e2d
  440ed6:	cmp    al,0x21
  440ed8:	rex.R
  440ed9:	rex.WRXB
  440eda:	rex.XB push r12
  440edc:	pop    rcx
  440edd:	push   rax
  440ede:	and    BYTE PTR [r14+0x65],r12b
  440ee2:	(bad)  
  440ee3:	je     0x440f5a
  440ee5:	jb     0x440f4c
  440ee7:	and    BYTE PTR [rbx+0x59],dl
  440eea:	push   rbx
  440eeb:	push   rsp
  440eec:	rex.RB
  440eed:	rex.WRB and BYTE PTR [r10],r12b
  440ef0:	addr32 fs (bad) 
  440ef3:	sub    eax,0x67726174
  440ef8:	gs je  0x440f29
  440efb:	fs je  0x440f62
  440efe:	and    bh,BYTE PTR [rsi]
  440f00:	or     bh,BYTE PTR [rsi+riz*2]
  440f03:	gs (bad) 
  440f05:	je     0x440f7c
  440f07:	jb     0x440f6e
  440f09:	and    BYTE PTR [rsi+0x61],ch
  440f0c:	ins    DWORD PTR es:[rdi],dx
  440f0d:	gs cmp eax,0x67726f22
  440f13:	outs   dx,BYTE PTR cs:[esi]
  440f16:	jne    0x440f46
  440f18:	addr32 fs (bad) 
  440f1b:	imul   esi,DWORD PTR cs:[rbx],0x612e3638
  440f22:	jbe    0x440f9c
  440f24:	and    bh,BYTE PTR [rsi]
  440f26:	or     ah,BYTE PTR [rax]
  440f28:	and    BYTE PTR [rdx+rsi*2],bh
  440f2b:	and    BYTE PTR gs:[esi+0x61],ch
  440f30:	ins    DWORD PTR es:[rdi],dx
  440f31:	gs cmp eax,0x6d6d7922
  440f37:	xor    BYTE PTR [rax+0x22],ch
  440f3a:	and    BYTE PTR [rdx+0x69],ah
  440f3d:	je     0x440fb2
  440f3f:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440f46:	cmp    BYTE PTR [rdx],ah
  440f48:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440f4c:	gs cmp eax,0x6e697522
  440f52:	je     0x440f85
  440f54:	xor    bh,BYTE PTR [rax]
  440f56:	and    ch,BYTE PTR [rdi]
  440f58:	or     ah,BYTE PTR ds:[rax]
  440f5b:	and    BYTE PTR [rdx+rsi*2],bh
  440f5e:	and    BYTE PTR gs:[esi+0x61],ch
  440f63:	ins    DWORD PTR es:[rdi],dx
  440f64:	gs cmp eax,0x6d6d7922
  440f6a:	xor    DWORD PTR [rax+0x22],ebp
  440f6d:	and    BYTE PTR [rdx+0x69],ah
  440f70:	je     0x440fe5
  440f72:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440f79:	cmp    BYTE PTR [rdx],ah
  440f7b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440f7f:	gs cmp eax,0x6e697522
  440f85:	je     0x440fb8
  440f87:	xor    bh,BYTE PTR [rax]
  440f89:	and    ch,BYTE PTR [rdi]
  440f8b:	or     ah,BYTE PTR ds:[rax]
  440f8e:	and    BYTE PTR [rdx+rsi*2],bh
  440f91:	and    BYTE PTR gs:[esi+0x61],ch
  440f96:	ins    DWORD PTR es:[rdi],dx
  440f97:	gs cmp eax,0x6d6d7922
  440f9d:	xor    ch,BYTE PTR [rax+0x22]
  440fa0:	and    BYTE PTR [rdx+0x69],ah
  440fa3:	je     0x441018
  440fa5:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440fac:	cmp    BYTE PTR [rdx],ah
  440fae:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440fb2:	gs cmp eax,0x6e697522
  440fb8:	je     0x440feb
  440fba:	xor    bh,BYTE PTR [rax]
  440fbc:	and    ch,BYTE PTR [rdi]
  440fbe:	or     ah,BYTE PTR ds:[rax]
  440fc1:	and    BYTE PTR [rdx+rsi*2],bh
  440fc4:	and    BYTE PTR gs:[esi+0x61],ch
  440fc9:	ins    DWORD PTR es:[rdi],dx
  440fca:	gs cmp eax,0x6d6d7922
  440fd0:	xor    ebp,DWORD PTR [rax+0x22]
  440fd3:	and    BYTE PTR [rdx+0x69],ah
  440fd6:	je     0x44104b
  440fd8:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  440fdf:	cmp    BYTE PTR [rdx],ah
  440fe1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  440fe5:	gs cmp eax,0x6e697522
  440feb:	je     0x44101e
  440fed:	xor    bh,BYTE PTR [rax]
  440fef:	and    ch,BYTE PTR [rdi]
  440ff1:	or     ah,BYTE PTR ds:[rax]
  440ff4:	and    BYTE PTR [rdx+rsi*2],bh
  440ff7:	and    BYTE PTR gs:[esi+0x61],ch
  440ffc:	ins    DWORD PTR es:[rdi],dx
  440ffd:	gs cmp eax,0x6d6d7922
  441003:	xor    al,0x68
  441005:	and    ah,BYTE PTR [rax]
  441007:	(bad)  
  441008:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441010:	xor    DWORD PTR [rdx],esi
  441012:	cmp    BYTE PTR [rdx],ah
  441014:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441018:	gs cmp eax,0x6e697522
  44101e:	je     0x441051
  441020:	xor    bh,BYTE PTR [rax]
  441022:	and    ch,BYTE PTR [rdi]
  441024:	or     ah,BYTE PTR ds:[rax]
  441027:	and    BYTE PTR [rdx+rsi*2],bh
  44102a:	and    BYTE PTR gs:[esi+0x61],ch
  44102f:	ins    DWORD PTR es:[rdi],dx
  441030:	gs cmp eax,0x6d6d7922
  441036:	xor    eax,0x62202268
  44103b:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441043:	xor    DWORD PTR [rdx],esi
  441045:	cmp    BYTE PTR [rdx],ah
  441047:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44104b:	gs cmp eax,0x6e697522
  441051:	je     0x441084
  441053:	xor    bh,BYTE PTR [rax]
  441055:	and    ch,BYTE PTR [rdi]
  441057:	or     ah,BYTE PTR ds:[rax]
  44105a:	and    BYTE PTR [rdx+rsi*2],bh
  44105d:	and    BYTE PTR gs:[esi+0x61],ch
  441062:	ins    DWORD PTR es:[rdi],dx
  441063:	gs cmp eax,0x6d6d7922
  441069:	ss push 0x69622022
  44106f:	je     0x4410e4
  441071:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  441078:	cmp    BYTE PTR [rdx],ah
  44107a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44107e:	gs cmp eax,0x6e697522
  441084:	je     0x4410b7
  441086:	xor    bh,BYTE PTR [rax]
  441088:	and    ch,BYTE PTR [rdi]
  44108a:	or     ah,BYTE PTR ds:[rax]
  44108d:	and    BYTE PTR [rdx+rsi*2],bh
  441090:	and    BYTE PTR gs:[esi+0x61],ch
  441095:	ins    DWORD PTR es:[rdi],dx
  441096:	gs cmp eax,0x6d6d7922
  44109c:	(bad)  
  44109d:	push   0x69622022
  4410a2:	je     0x441117
  4410a4:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  4410ab:	cmp    BYTE PTR [rdx],ah
  4410ad:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4410b1:	gs cmp eax,0x6e697522
  4410b7:	je     0x4410ea
  4410b9:	xor    bh,BYTE PTR [rax]
  4410bb:	and    ch,BYTE PTR [rdi]
  4410bd:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  4410c1:	data16 gs (bad) 
  4410c4:	je     0x44113b
  4410c6:	jb     0x44112d
  4410c8:	or     al,BYTE PTR ds:[rax]
	...
  4410ff:	add    BYTE PTR [rdi+rdi*1],bh
  441102:	js     0x441171
  441104:	ins    BYTE PTR es:[rdi],dx
  441105:	and    BYTE PTR [rsi+0x65],dh
  441108:	jb     0x44117d
  44110a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  441111:	xor    BYTE PTR [rdx],ah
  441113:	(bad)  
  441114:	or     bh,BYTE PTR ds:[rcx+riz*1]
  441118:	sub    eax,0x6f43202d
  44111d:	jo     0x441198
  44111f:	jb     0x44118a
  441121:	addr32 push 0x43282074
  441127:	sub    DWORD PTR [rax],esp
  441129:	xor    dh,BYTE PTR [rax]
  44112b:	xor    DWORD PTR [rax],esi
  44112d:	sub    eax,0x37313032
  441132:	and    BYTE PTR [rsi+0x72],al
  441135:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44113a:	data16 je 0x4411b4
  44113d:	(bad)  
  44113e:	jb     0x4411a5
  441140:	and    BYTE PTR [rsi+0x6f],al
  441143:	jne    0x4411b3
  441145:	fs (bad) 
  441147:	je     0x4411b2
  441149:	outs   dx,DWORD PTR ds:[rsi]
  44114a:	outs   dx,BYTE PTR ds:[rsi]
  44114b:	sub    al,0x20
  44114d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44114f:	movsxd ebp,DWORD PTR [rsi]
  441151:	or     cl,BYTE PTR [rdx]
  441153:	and    BYTE PTR [rax],ah
  441155:	and    BYTE PTR [rax],ah
  441157:	and    BYTE PTR [rbx+0x6f],al
  44115a:	jo     0x4411d5
  44115c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  441163:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  441167:	je     0x4411db
  441169:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  441170:	and    BYTE PTR [rdi+0x66],ch
  441173:	and    BYTE PTR [rax+rbp*2+0x69],dh
  441177:	jae    0x441199
  441179:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  441180:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  441188:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  441190:	outs   dx,DWORD PTR ds:[rsi]
  441191:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  441199:	outs   dx,DWORD PTR ds:[rsi]
  44119a:	outs   dx,BYTE PTR ds:[rsi]
  44119b:	sub    al,0xa
  44119d:	and    BYTE PTR [rax],ah
  44119f:	and    BYTE PTR [rax],ah
  4411a1:	and    BYTE PTR [rcx+0x72],ah
  4411a4:	and    BYTE PTR gs:[rax+0x65],dh
  4411a8:	jb     0x441217
  4411aa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4411b2:	and    BYTE PTR [rcx+0x6e],ah
  4411b5:	jns    0x4411d7
  4411b7:	ins    DWORD PTR es:[rdi],dx
  4411b8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  4411c1:	push   0x2074756f
  4411c6:	jb     0x441237
  4411c8:	jns    0x44122b
  4411ca:	ins    BYTE PTR es:[rdi],dx
  4411cb:	je     0x441246
  4411cd:	and    BYTE PTR [rax+0x72],dh
  4411d0:	outs   dx,DWORD PTR ds:[rsi]
  4411d1:	jbe    0x44123c
  4411d3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  4411da:	and    BYTE PTR [rbx+0x6f],ah
  4411dd:	jo     0x441258
  4411df:	jb     0x44124a
  4411e1:	addr32 push 0x20200a74
  4411e7:	and    BYTE PTR [rax],ah
  4411e9:	and    BYTE PTR [rsi+0x6f],ch
  4411ec:	je     0x441257
  4411ee:	movsxd esp,DWORD PTR [rbp+0x20]
  4411f1:	(bad)  
  4411f2:	outs   dx,BYTE PTR ds:[rsi]
  4411f3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  4411f8:	jae    0x44121a
  4411fa:	outs   dx,BYTE PTR ds:[rsi]
  4411fb:	outs   dx,DWORD PTR ds:[rsi]
  4411fc:	je     0x441267
  4411fe:	movsxd esp,DWORD PTR [rbp+0x20]
  441201:	(bad)  
  441202:	jb     0x441269
  441204:	and    BYTE PTR [rax+0x72],dh
  441207:	gs jae 0x44126f
  44120a:	jb     0x441282
  44120c:	gs fs and BYTE PTR cs:[rax],ah
  441211:	sub    eax,0xa0a3e2d
  441216:	cmp    al,0x21
  441218:	rex.R
  441219:	rex.WRXB
  44121a:	rex.XB push r12
  44121c:	pop    rcx
  44121d:	push   rax
  44121e:	and    BYTE PTR [r14+0x65],r12b
  441222:	(bad)  
  441223:	je     0x44129a
  441225:	jb     0x44128c
  441227:	and    BYTE PTR [rbx+0x59],dl
  44122a:	push   rbx
  44122b:	push   rsp
  44122c:	rex.RB
  44122d:	rex.WRB and BYTE PTR [r10],r12b
  441230:	addr32 fs (bad) 
  441233:	sub    eax,0x67726174
  441238:	gs je  0x441269
  44123b:	fs je  0x4412a2
  44123e:	and    bh,BYTE PTR [rsi]
  441240:	or     bh,BYTE PTR [rsi+riz*2]
  441243:	gs (bad) 
  441245:	je     0x4412bc
  441247:	jb     0x4412ae
  441249:	and    BYTE PTR [rsi+0x61],ch
  44124c:	ins    DWORD PTR es:[rdi],dx
  44124d:	gs cmp eax,0x67726f22
  441253:	outs   dx,BYTE PTR cs:[esi]
  441256:	jne    0x441286
  441258:	addr32 fs (bad) 
  44125b:	imul   esi,DWORD PTR cs:[rbx],0x732e3638
  441262:	jae    0x4412c9
  441264:	and    bh,BYTE PTR [rsi]
  441266:	or     ah,BYTE PTR [rax]
  441268:	and    BYTE PTR [rsi+rsi*2],bh
  44126b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  441270:	and    BYTE PTR [rcx+0x64],ch
  441273:	cmp    eax,0x66347622
  441278:	and    ah,BYTE PTR [rax]
  44127a:	je     0x4412f5
  44127c:	jo     0x4412e3
  44127e:	cmp    eax,0x65656922
  441283:	gs pop rdi
  441285:	jae    0x4412f0
  441287:	outs   dx,BYTE PTR ds:[rsi]
  441288:	ins    BYTE PTR es:[edi],dx
  44128a:	and    ah,BYTE PTR gs:[rax]
  44128d:	movsxd ebp,DWORD PTR [rdi+0x75]
  441290:	outs   dx,BYTE PTR ds:[rsi]
  441291:	je     0x4412d0
  441293:	and    dh,BYTE PTR [rdx+riz*1]
  441296:	(bad)  
  441297:	or     ah,BYTE PTR ds:[rax]
  44129a:	and    BYTE PTR [rsi+rsi*2],bh
  44129d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  4412a2:	and    BYTE PTR [rcx+0x64],ch
  4412a5:	cmp    eax,0x64327622
  4412aa:	and    ah,BYTE PTR [rax]
  4412ac:	je     0x441327
  4412ae:	jo     0x441315
  4412b0:	cmp    eax,0x65656922
  4412b5:	gs pop rdi
  4412b7:	outs   dx,DWORD PTR fs:[rsi]
  4412b9:	jne    0x44131d
  4412bb:	ins    BYTE PTR es:[rdi],dx
  4412bc:	and    ah,BYTE PTR gs:[rax]
  4412bf:	movsxd ebp,DWORD PTR [rdi+0x75]
  4412c2:	outs   dx,BYTE PTR ds:[rsi]
  4412c3:	je     0x441302
  4412c5:	and    dh,BYTE PTR [rdx]
  4412c7:	and    ch,BYTE PTR [rdi]
  4412c9:	or     ah,BYTE PTR ds:[rax]
  4412cc:	and    BYTE PTR [rsi+rsi*2],bh
  4412cf:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  4412d4:	and    BYTE PTR [rcx+0x64],ch
  4412d7:	cmp    eax,0x36317622
  4412dc:	imul   edi,DWORD PTR [rax],0x79742022
  4412e2:	jo     0x441349
  4412e4:	cmp    eax,0x746e6922
  4412e9:	cmp    BYTE PTR [rdx],ah
  4412eb:	and    BYTE PTR [rbx+0x6f],ah
  4412ee:	jne    0x44135e
  4412f0:	je     0x44132f
  4412f2:	and    dh,BYTE PTR [rcx]
  4412f4:	and    ch,BYTE PTR ss:[rdi]
  4412f7:	or     ah,BYTE PTR ds:[rax]
  4412fa:	and    BYTE PTR [rsi+rsi*2],bh
  4412fd:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  441302:	and    BYTE PTR [rcx+0x64],ch
  441305:	cmp    eax,0x69387622
  44130a:	xor    DWORD PTR [rsi],esi
  44130c:	and    ah,BYTE PTR [rax]
  44130e:	je     0x441389
  441310:	jo     0x441377
  441312:	cmp    eax,0x746e6922
  441317:	xor    DWORD PTR [rsi],esi
  441319:	and    ah,BYTE PTR [rax]
  44131b:	movsxd ebp,DWORD PTR [rdi+0x75]
  44131e:	outs   dx,BYTE PTR ds:[rsi]
  44131f:	je     0x44135e
  441321:	and    bh,BYTE PTR [rax]
  441323:	and    ch,BYTE PTR [rdi]
  441325:	or     ah,BYTE PTR ds:[rax]
  441328:	and    BYTE PTR [rsi+rsi*2],bh
  44132b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  441330:	and    BYTE PTR [rcx+0x64],ch
  441333:	cmp    eax,0x69347622
  441338:	xor    esi,DWORD PTR [rdx]
  44133a:	and    ah,BYTE PTR [rax]
  44133c:	je     0x4413b7
  44133e:	jo     0x4413a5
  441340:	cmp    eax,0x746e6922
  441345:	xor    esi,DWORD PTR [rdx]
  441347:	and    ah,BYTE PTR [rax]
  441349:	movsxd ebp,DWORD PTR [rdi+0x75]
  44134c:	outs   dx,BYTE PTR ds:[rsi]
  44134d:	je     0x44138c
  44134f:	and    dh,BYTE PTR [rdx+riz*1]
  441352:	(bad)  
  441353:	or     ah,BYTE PTR ds:[rax]
  441356:	and    BYTE PTR [rsi+rsi*2],bh
  441359:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  44135e:	and    BYTE PTR [rcx+0x64],ch
  441361:	cmp    eax,0x69327622
  441366:	ss xor al,0x22
  441369:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44136d:	gs cmp eax,0x746e6922
  441373:	ss xor al,0x22
  441376:	and    BYTE PTR [rbx+0x6f],ah
  441379:	jne    0x4413e9
  44137b:	je     0x4413ba
  44137d:	and    dh,BYTE PTR [rdx]
  44137f:	and    ch,BYTE PTR [rdi]
  441381:	or     ah,BYTE PTR ds:[rax]
  441384:	and    BYTE PTR [rsi*2+0x6e6f696e],bh
  44138b:	and    BYTE PTR [rcx+0x64],ch
  44138e:	cmp    eax,0x63657622
  441393:	xor    DWORD PTR [rdx],esi
  441395:	cmp    BYTE PTR [rdx],ah
  441397:	or     ah,BYTE PTR ds:[rax]
  44139a:	and    BYTE PTR [rax],ah
  44139c:	and    BYTE PTR [rsi+riz*2],bh
  44139f:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4413a6:	ins    DWORD PTR es:[rdi],dx
  4413a7:	gs cmp eax,0x5f347622
  4413ad:	data16 ins BYTE PTR es:[rdi],dx
  4413af:	outs   dx,DWORD PTR ds:[rsi]
  4413b0:	(bad)  
  4413b1:	je     0x4413d5
  4413b3:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4413b7:	gs cmp eax,0x66347622
  4413bd:	and    ch,BYTE PTR [rdi]
  4413bf:	or     ah,BYTE PTR ds:[rax]
  4413c2:	and    BYTE PTR [rax],ah
  4413c4:	and    BYTE PTR [rsi+riz*2],bh
  4413c7:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4413ce:	ins    DWORD PTR es:[rdi],dx
  4413cf:	gs cmp eax,0x5f327622
  4413d5:	outs   dx,DWORD PTR fs:[rsi]
  4413d7:	jne    0x44143b
  4413d9:	ins    BYTE PTR es:[rdi],dx
  4413da:	and    ah,BYTE PTR gs:[rax]
  4413dd:	je     0x441458
  4413df:	jo     0x441446
  4413e1:	cmp    eax,0x64327622
  4413e6:	and    ch,BYTE PTR [rdi]
  4413e8:	or     ah,BYTE PTR ds:[rax]
  4413eb:	and    BYTE PTR [rax],ah
  4413ed:	and    BYTE PTR [rsi+riz*2],bh
  4413f0:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4413f7:	ins    DWORD PTR es:[rdi],dx
  4413f8:	gs cmp eax,0x36317622
  4413fe:	pop    rdi
  4413ff:	imul   ebp,DWORD PTR [rsi+0x74],0x74202238
  441406:	jns    0x441478
  441408:	gs cmp eax,0x36317622
  44140e:	imul   edi,DWORD PTR [rax],0xa3e2f22
  441414:	and    BYTE PTR [rax],ah
  441416:	and    BYTE PTR [rax],ah
  441418:	cmp    al,0x66
  44141a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441421:	ins    DWORD PTR es:[rdi],dx
  441422:	gs cmp eax,0x5f387622
  441428:	imul   ebp,DWORD PTR [rsi+0x74],0x20223631
  44142f:	je     0x4414aa
  441431:	jo     0x441498
  441433:	cmp    eax,0x69387622
  441438:	xor    DWORD PTR [rsi],esi
  44143a:	and    ch,BYTE PTR [rdi]
  44143c:	or     ah,BYTE PTR ds:[rax]
  44143f:	and    BYTE PTR [rax],ah
  441441:	and    BYTE PTR [rsi+riz*2],bh
  441444:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44144b:	ins    DWORD PTR es:[rdi],dx
  44144c:	gs cmp eax,0x5f347622
  441452:	imul   ebp,DWORD PTR [rsi+0x74],0x20223233
  441459:	je     0x4414d4
  44145b:	jo     0x4414c2
  44145d:	cmp    eax,0x69347622
  441462:	xor    esi,DWORD PTR [rdx]
  441464:	and    ch,BYTE PTR [rdi]
  441466:	or     ah,BYTE PTR ds:[rax]
  441469:	and    BYTE PTR [rax],ah
  44146b:	and    BYTE PTR [rsi+riz*2],bh
  44146e:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441475:	ins    DWORD PTR es:[rdi],dx
  441476:	gs cmp eax,0x5f327622
  44147c:	imul   ebp,DWORD PTR [rsi+0x74],0x20223436
  441483:	je     0x4414fe
  441485:	jo     0x4414ec
  441487:	cmp    eax,0x69327622
  44148c:	ss xor al,0x22
  44148f:	(bad)  
  441490:	or     ah,BYTE PTR ds:[rax]
  441493:	and    BYTE PTR [rax],ah
  441495:	and    BYTE PTR [rsi+riz*2],bh
  441498:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44149f:	ins    DWORD PTR es:[rdi],dx
  4414a0:	gs cmp eax,0x6e697522
  4414a6:	je     0x4414d9
  4414a8:	xor    bh,BYTE PTR [rax]
  4414aa:	and    ah,BYTE PTR [rax]
  4414ac:	je     0x441527
  4414ae:	jo     0x441515
  4414b0:	cmp    eax,0x6e697522
  4414b5:	je     0x4414e8
  4414b7:	xor    bh,BYTE PTR [rax]
  4414b9:	and    ch,BYTE PTR [rdi]
  4414bb:	or     ah,BYTE PTR ds:[rax]
  4414be:	and    BYTE PTR [rdi+rbp*1],bh
  4414c1:	jne    0x441531
  4414c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a3e
  4414ca:	cmp    al,0x66
  4414cc:	ins    BYTE PTR es:[rdi],dx
  4414cd:	(bad)  
  4414ce:	addr32 jae 0x4414f1
  4414d1:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x36383369
  4414d9:	pop    rdi
  4414da:	ins    DWORD PTR es:[rdi],dx
  4414db:	js     0x441540
  4414dd:	jae    0x441551
  4414df:	and    ah,BYTE PTR [rax]
  4414e1:	jae    0x44154c
  4414e3:	jp     0x44154a
  4414e5:	cmp    eax,0x3e223422
  4414ea:	or     ah,BYTE PTR [rax]
  4414ec:	and    BYTE PTR [rax],ah
  4414ee:	and    BYTE PTR [rsi+riz*2],bh
  4414f1:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4414f8:	ins    DWORD PTR es:[rdi],dx
  4414f9:	gs cmp eax,0x22454922
  4414ff:	and    BYTE PTR [rbx+0x74],dh
  441502:	(bad)  
  441503:	jb     0x441579
  441505:	cmp    eax,0x20223022
  44150a:	outs   dx,BYTE PTR gs:[rsi]
  44150c:	fs cmp eax,0x2f223022
  441512:	or     ah,BYTE PTR ds:[rax]
  441515:	and    BYTE PTR [rax],ah
  441517:	and    BYTE PTR [rsi+riz*2],bh
  44151a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441521:	ins    DWORD PTR es:[rdi],dx
  441522:	gs cmp eax,0x22454422
  441528:	and    BYTE PTR [rbx+0x74],dh
  44152b:	(bad)  
  44152c:	jb     0x4415a2
  44152e:	cmp    eax,0x20223122
  441533:	outs   dx,BYTE PTR gs:[rsi]
  441535:	fs cmp eax,0x2f223122
  44153b:	or     ah,BYTE PTR ds:[rax]
  44153e:	and    BYTE PTR [rax],ah
  441540:	and    BYTE PTR [rsi+riz*2],bh
  441543:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44154a:	ins    DWORD PTR es:[rdi],dx
  44154b:	gs cmp eax,0x22455a22
  441551:	and    BYTE PTR [rbx+0x74],dh
  441554:	(bad)  
  441555:	jb     0x4415cb
  441557:	cmp    eax,0x20223222
  44155c:	outs   dx,BYTE PTR gs:[rsi]
  44155e:	fs cmp eax,0x2f223222
  441564:	or     ah,BYTE PTR ds:[rax]
  441567:	and    BYTE PTR [rax],ah
  441569:	and    BYTE PTR [rsi+riz*2],bh
  44156c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441573:	ins    DWORD PTR es:[rdi],dx
  441574:	gs cmp eax,0x22454f22
  44157a:	and    BYTE PTR [rbx+0x74],dh
  44157d:	(bad)  
  44157e:	jb     0x4415f4
  441580:	cmp    eax,0x20223322
  441585:	outs   dx,BYTE PTR gs:[rsi]
  441587:	fs cmp eax,0x2f223322
  44158d:	or     ah,BYTE PTR ds:[rax]
  441590:	and    BYTE PTR [rax],ah
  441592:	and    BYTE PTR [rsi+riz*2],bh
  441595:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44159c:	ins    DWORD PTR es:[rdi],dx
  44159d:	gs cmp eax,0x22455522
  4415a3:	and    BYTE PTR [rbx+0x74],dh
  4415a6:	(bad)  
  4415a7:	jb     0x44161d
  4415a9:	cmp    eax,0x20223422
  4415ae:	outs   dx,BYTE PTR gs:[rsi]
  4415b0:	fs cmp eax,0x2f223422
  4415b6:	or     ah,BYTE PTR ds:[rax]
  4415b9:	and    BYTE PTR [rax],ah
  4415bb:	and    BYTE PTR [rsi+riz*2],bh
  4415be:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4415c5:	ins    DWORD PTR es:[rdi],dx
  4415c6:	gs cmp eax,0x22455022
  4415cc:	and    BYTE PTR [rbx+0x74],dh
  4415cf:	(bad)  
  4415d0:	jb     0x441646
  4415d2:	cmp    eax,0x20223522
  4415d7:	outs   dx,BYTE PTR gs:[rsi]
  4415d9:	fs cmp eax,0x2f223522
  4415df:	or     ah,BYTE PTR ds:[rax]
  4415e2:	and    BYTE PTR [rax],ah
  4415e4:	and    BYTE PTR [rsi+riz*2],bh
  4415e7:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4415ee:	ins    DWORD PTR es:[rdi],dx
  4415ef:	gs cmp eax,0x5a414422
  4415f5:	and    ah,BYTE PTR [rax]
  4415f7:	jae    0x44166d
  4415f9:	(bad)  
  4415fa:	jb     0x441670
  4415fc:	cmp    eax,0x20223622
  441601:	outs   dx,BYTE PTR gs:[rsi]
  441603:	fs cmp eax,0x2f223622
  441609:	or     ah,BYTE PTR ds:[rax]
  44160c:	and    BYTE PTR [rax],ah
  44160e:	and    BYTE PTR [rsi+riz*2],bh
  441611:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441618:	ins    DWORD PTR es:[rdi],dx
  441619:	gs cmp eax,0x224d4922
  44161f:	and    BYTE PTR [rbx+0x74],dh
  441622:	(bad)  
  441623:	jb     0x441699
  441625:	cmp    eax,0x20223722
  44162a:	outs   dx,BYTE PTR gs:[rsi]
  44162c:	fs cmp eax,0x2f223722
  441632:	or     ah,BYTE PTR ds:[rax]
  441635:	and    BYTE PTR [rax],ah
  441637:	and    BYTE PTR [rsi+riz*2],bh
  44163a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441641:	ins    DWORD PTR es:[rdi],dx
  441642:	gs cmp eax,0x224d4422
  441648:	and    BYTE PTR [rbx+0x74],dh
  44164b:	(bad)  
  44164c:	jb     0x4416c2
  44164e:	cmp    eax,0x20223822
  441653:	outs   dx,BYTE PTR gs:[rsi]
  441655:	fs cmp eax,0x2f223822
  44165b:	or     ah,BYTE PTR ds:[rax]
  44165e:	and    BYTE PTR [rax],ah
  441660:	and    BYTE PTR [rsi+riz*2],bh
  441663:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  44166a:	ins    DWORD PTR es:[rdi],dx
  44166b:	gs cmp eax,0x224d5a22
  441671:	and    BYTE PTR [rbx+0x74],dh
  441674:	(bad)  
  441675:	jb     0x4416eb
  441677:	cmp    eax,0x20223922
  44167c:	outs   dx,BYTE PTR gs:[rsi]
  44167e:	fs cmp eax,0x2f223922
  441684:	or     ah,BYTE PTR ds:[rax]
  441687:	and    BYTE PTR [rax],ah
  441689:	and    BYTE PTR [rsi+riz*2],bh
  44168c:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441693:	ins    DWORD PTR es:[rdi],dx
  441694:	gs cmp eax,0x224d4f22
  44169a:	and    BYTE PTR [rbx+0x74],dh
  44169d:	(bad)  
  44169e:	jb     0x441714
  4416a0:	cmp    eax,0x22303122
  4416a5:	and    BYTE PTR [rbp+0x6e],ah
  4416a8:	fs cmp eax,0x22303122
  4416ae:	(bad)  
  4416af:	or     ah,BYTE PTR ds:[rax]
  4416b2:	and    BYTE PTR [rax],ah
  4416b4:	and    BYTE PTR [rsi+riz*2],bh
  4416b7:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4416be:	ins    DWORD PTR es:[rdi],dx
  4416bf:	gs cmp eax,0x224d5522
  4416c5:	and    BYTE PTR [rbx+0x74],dh
  4416c8:	(bad)  
  4416c9:	jb     0x44173f
  4416cb:	cmp    eax,0x22313122
  4416d0:	and    BYTE PTR [rbp+0x6e],ah
  4416d3:	fs cmp eax,0x22313122
  4416d9:	(bad)  
  4416da:	or     ah,BYTE PTR ds:[rax]
  4416dd:	and    BYTE PTR [rax],ah
  4416df:	and    BYTE PTR [rsi+riz*2],bh
  4416e2:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  4416e9:	ins    DWORD PTR es:[rdi],dx
  4416ea:	gs cmp eax,0x224d5022
  4416f0:	and    BYTE PTR [rbx+0x74],dh
  4416f3:	(bad)  
  4416f4:	jb     0x44176a
  4416f6:	cmp    eax,0x22323122
  4416fb:	and    BYTE PTR [rbp+0x6e],ah
  4416fe:	fs cmp eax,0x22323122
  441704:	(bad)  
  441705:	or     ah,BYTE PTR ds:[rax]
  441708:	and    BYTE PTR [rax],ah
  44170a:	and    BYTE PTR [rsi+riz*2],bh
  44170d:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441714:	ins    DWORD PTR es:[rdi],dx
  441715:	gs cmp eax,0x225a4622
  44171b:	and    BYTE PTR [rbx+0x74],dh
  44171e:	(bad)  
  44171f:	jb     0x441795
  441721:	cmp    eax,0x22353122
  441726:	and    BYTE PTR [rbp+0x6e],ah
  441729:	fs cmp eax,0x22353122
  44172f:	(bad)  
  441730:	or     ah,BYTE PTR ds:[rax]
  441733:	and    BYTE PTR [rdi+rbp*1],bh
  441736:	data16 ins BYTE PTR es:[rdi],dx
  441738:	(bad)  
  441739:	addr32 jae 0x44177a
  44173c:	or     cl,BYTE PTR [rdx]
  44173e:	and    BYTE PTR [rax],ah
  441740:	cmp    al,0x72
  441742:	and    BYTE PTR gs:[esi+0x61],ch
  441747:	ins    DWORD PTR es:[rdi],dx
  441748:	gs cmp eax,0x6d6d7822
  44174e:	xor    BYTE PTR [rdx],ah
  441750:	and    BYTE PTR [rdx+0x69],ah
  441753:	je     0x4417c8
  441755:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  44175c:	cmp    BYTE PTR [rdx],ah
  44175e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441762:	gs cmp eax,0x63657622
  441768:	xor    DWORD PTR [rdx],esi
  44176a:	cmp    BYTE PTR [rdx],ah
  44176c:	and    BYTE PTR [rdx+0x65],dh
  44176f:	outs   dx,BYTE PTR ds:[esi]
  441771:	jne    0x4417e0
  441773:	cmp    eax,0x22323322
  441778:	(bad)  
  441779:	or     ah,BYTE PTR ds:[rax]
  44177c:	and    BYTE PTR [rdx+rsi*2],bh
  44177f:	and    BYTE PTR gs:[esi+0x61],ch
  441784:	ins    DWORD PTR es:[rdi],dx
  441785:	gs cmp eax,0x6d6d7822
  44178b:	xor    DWORD PTR [rdx],esp
  44178d:	and    BYTE PTR [rdx+0x69],ah
  441790:	je     0x441805
  441792:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  441799:	cmp    BYTE PTR [rdx],ah
  44179b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44179f:	gs cmp eax,0x63657622
  4417a5:	xor    DWORD PTR [rdx],esi
  4417a7:	cmp    BYTE PTR [rdx],ah
  4417a9:	(bad)  
  4417aa:	or     ah,BYTE PTR ds:[rax]
  4417ad:	and    BYTE PTR [rdx+rsi*2],bh
  4417b0:	and    BYTE PTR gs:[esi+0x61],ch
  4417b5:	ins    DWORD PTR es:[rdi],dx
  4417b6:	gs cmp eax,0x6d6d7822
  4417bc:	xor    ah,BYTE PTR [rdx]
  4417be:	and    BYTE PTR [rdx+0x69],ah
  4417c1:	je     0x441836
  4417c3:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  4417ca:	cmp    BYTE PTR [rdx],ah
  4417cc:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4417d0:	gs cmp eax,0x63657622
  4417d6:	xor    DWORD PTR [rdx],esi
  4417d8:	cmp    BYTE PTR [rdx],ah
  4417da:	(bad)  
  4417db:	or     ah,BYTE PTR ds:[rax]
  4417de:	and    BYTE PTR [rdx+rsi*2],bh
  4417e1:	and    BYTE PTR gs:[esi+0x61],ch
  4417e6:	ins    DWORD PTR es:[rdi],dx
  4417e7:	gs cmp eax,0x6d6d7822
  4417ed:	xor    esp,DWORD PTR [rdx]
  4417ef:	and    BYTE PTR [rdx+0x69],ah
  4417f2:	je     0x441867
  4417f4:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  4417fb:	cmp    BYTE PTR [rdx],ah
  4417fd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441801:	gs cmp eax,0x63657622
  441807:	xor    DWORD PTR [rdx],esi
  441809:	cmp    BYTE PTR [rdx],ah
  44180b:	(bad)  
  44180c:	or     ah,BYTE PTR ds:[rax]
  44180f:	and    BYTE PTR [rdx+rsi*2],bh
  441812:	and    BYTE PTR gs:[esi+0x61],ch
  441817:	ins    DWORD PTR es:[rdi],dx
  441818:	gs cmp eax,0x6d6d7822
  44181e:	xor    al,0x22
  441820:	and    BYTE PTR [rdx+0x69],ah
  441823:	je     0x441898
  441825:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  44182c:	cmp    BYTE PTR [rdx],ah
  44182e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441832:	gs cmp eax,0x63657622
  441838:	xor    DWORD PTR [rdx],esi
  44183a:	cmp    BYTE PTR [rdx],ah
  44183c:	(bad)  
  44183d:	or     ah,BYTE PTR ds:[rax]
  441840:	and    BYTE PTR [rdx+rsi*2],bh
  441843:	and    BYTE PTR gs:[esi+0x61],ch
  441848:	ins    DWORD PTR es:[rdi],dx
  441849:	gs cmp eax,0x6d6d7822
  44184f:	xor    eax,0x69622022
  441854:	je     0x4418c9
  441856:	imul   edi,DWORD PTR [rdx+0x65],0x3231223d
  44185d:	cmp    BYTE PTR [rdx],ah
  44185f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441863:	gs cmp eax,0x63657622
  441869:	xor    DWORD PTR [rdx],esi
  44186b:	cmp    BYTE PTR [rdx],ah
  44186d:	(bad)  
  44186e:	or     ah,BYTE PTR ds:[rax]
  441871:	and    BYTE PTR [rdx+rsi*2],bh
  441874:	and    BYTE PTR gs:[esi+0x61],ch
  441879:	ins    DWORD PTR es:[rdi],dx
  44187a:	gs cmp eax,0x6d6d7822
  441880:	and    ah,BYTE PTR ss:[rax]
  441883:	(bad)  
  441884:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  44188c:	xor    DWORD PTR [rdx],esi
  44188e:	cmp    BYTE PTR [rdx],ah
  441890:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441894:	gs cmp eax,0x63657622
  44189a:	xor    DWORD PTR [rdx],esi
  44189c:	cmp    BYTE PTR [rdx],ah
  44189e:	(bad)  
  44189f:	or     ah,BYTE PTR ds:[rax]
  4418a2:	and    BYTE PTR [rdx+rsi*2],bh
  4418a5:	and    BYTE PTR gs:[esi+0x61],ch
  4418aa:	ins    DWORD PTR es:[rdi],dx
  4418ab:	gs cmp eax,0x6d6d7822
  4418b1:	(bad)  
  4418b2:	and    ah,BYTE PTR [rax]
  4418b4:	(bad)  
  4418b5:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4418bd:	xor    DWORD PTR [rdx],esi
  4418bf:	cmp    BYTE PTR [rdx],ah
  4418c1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4418c5:	gs cmp eax,0x63657622
  4418cb:	xor    DWORD PTR [rdx],esi
  4418cd:	cmp    BYTE PTR [rdx],ah
  4418cf:	(bad)  
  4418d0:	or     cl,BYTE PTR ds:[rdx]
  4418d3:	and    BYTE PTR [rax],ah
  4418d5:	cmp    al,0x72
  4418d7:	and    BYTE PTR gs:[esi+0x61],ch
  4418dc:	ins    DWORD PTR es:[rdi],dx
  4418dd:	gs cmp eax,0x63786d22
  4418e3:	jae    0x441957
  4418e5:	and    ah,BYTE PTR [rax]
  4418e7:	(bad)  
  4418e8:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4418f0:	xor    esi,DWORD PTR [rdx]
  4418f2:	and    ah,BYTE PTR [rax]
  4418f4:	je     0x44196f
  4418f6:	jo     0x44195d
  4418f8:	cmp    eax,0x38336922
  4418fd:	ss pop rdi
  4418ff:	ins    DWORD PTR es:[rdi],dx
  441900:	js     0x441965
  441902:	jae    0x441976
  441904:	and    ah,BYTE PTR [rax]
  441906:	addr32 jb 0x441978
  441909:	jne    0x44197b
  44190b:	cmp    eax,0x63657622
  441910:	je     0x441981
  441912:	jb     0x441936
  441914:	(bad)  
  441915:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  441919:	data16 gs (bad) 
  44191c:	je     0x441993
  44191e:	jb     0x441985
  441920:	or     al,BYTE PTR ds:[rax]
	...
  44193f:	add    BYTE PTR [rdi+rdi*1],bh
  441942:	js     0x4419b1
  441944:	ins    BYTE PTR es:[rdi],dx
  441945:	and    BYTE PTR [rsi+0x65],dh
  441948:	jb     0x4419bd
  44194a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  441951:	xor    BYTE PTR [rdx],ah
  441953:	(bad)  
  441954:	or     bh,BYTE PTR ds:[rcx+riz*1]
  441958:	sub    eax,0x6f43202d
  44195d:	jo     0x4419d8
  44195f:	jb     0x4419ca
  441961:	addr32 push 0x43282074
  441967:	sub    DWORD PTR [rax],esp
  441969:	xor    dh,BYTE PTR [rax]
  44196b:	xor    DWORD PTR [rax],esi
  44196d:	sub    eax,0x37313032
  441972:	and    BYTE PTR [rsi+0x72],al
  441975:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44197a:	data16 je 0x4419f4
  44197d:	(bad)  
  44197e:	jb     0x4419e5
  441980:	and    BYTE PTR [rsi+0x6f],al
  441983:	jne    0x4419f3
  441985:	fs (bad) 
  441987:	je     0x4419f2
  441989:	outs   dx,DWORD PTR ds:[rsi]
  44198a:	outs   dx,BYTE PTR ds:[rsi]
  44198b:	sub    al,0x20
  44198d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44198f:	movsxd ebp,DWORD PTR [rsi]
  441991:	or     cl,BYTE PTR [rdx]
  441993:	and    BYTE PTR [rax],ah
  441995:	and    BYTE PTR [rax],ah
  441997:	and    BYTE PTR [rbx+0x6f],al
  44199a:	jo     0x441a15
  44199c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  4419a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4419a7:	je     0x441a1b
  4419a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  4419b0:	and    BYTE PTR [rdi+0x66],ch
  4419b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4419b7:	jae    0x4419d9
  4419b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  4419c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  4419c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  4419d0:	outs   dx,DWORD PTR ds:[rsi]
  4419d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  4419d9:	outs   dx,DWORD PTR ds:[rsi]
  4419da:	outs   dx,BYTE PTR ds:[rsi]
  4419db:	sub    al,0xa
  4419dd:	and    BYTE PTR [rax],ah
  4419df:	and    BYTE PTR [rax],ah
  4419e1:	and    BYTE PTR [rcx+0x72],ah
  4419e4:	and    BYTE PTR gs:[rax+0x65],dh
  4419e8:	jb     0x441a57
  4419ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4419f2:	and    BYTE PTR [rcx+0x6e],ah
  4419f5:	jns    0x441a17
  4419f7:	ins    DWORD PTR es:[rdi],dx
  4419f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  441a01:	push   0x2074756f
  441a06:	jb     0x441a77
  441a08:	jns    0x441a6b
  441a0a:	ins    BYTE PTR es:[rdi],dx
  441a0b:	je     0x441a86
  441a0d:	and    BYTE PTR [rax+0x72],dh
  441a10:	outs   dx,DWORD PTR ds:[rsi]
  441a11:	jbe    0x441a7c
  441a13:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  441a1a:	and    BYTE PTR [rbx+0x6f],ah
  441a1d:	jo     0x441a98
  441a1f:	jb     0x441a8a
  441a21:	addr32 push 0x20200a74
  441a27:	and    BYTE PTR [rax],ah
  441a29:	and    BYTE PTR [rsi+0x6f],ch
  441a2c:	je     0x441a97
  441a2e:	movsxd esp,DWORD PTR [rbp+0x20]
  441a31:	(bad)  
  441a32:	outs   dx,BYTE PTR ds:[rsi]
  441a33:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  441a38:	jae    0x441a5a
  441a3a:	outs   dx,BYTE PTR ds:[rsi]
  441a3b:	outs   dx,DWORD PTR ds:[rsi]
  441a3c:	je     0x441aa7
  441a3e:	movsxd esp,DWORD PTR [rbp+0x20]
  441a41:	(bad)  
  441a42:	jb     0x441aa9
  441a44:	and    BYTE PTR [rax+0x72],dh
  441a47:	gs jae 0x441aaf
  441a4a:	jb     0x441ac2
  441a4c:	gs fs and BYTE PTR cs:[rax],ah
  441a51:	sub    eax,0xa0a3e2d
  441a56:	cmp    al,0x21
  441a58:	rex.R
  441a59:	rex.WRXB
  441a5a:	rex.XB push r12
  441a5c:	pop    rcx
  441a5d:	push   rax
  441a5e:	and    BYTE PTR [r14+0x65],r12b
  441a62:	(bad)  
  441a63:	je     0x441ada
  441a65:	jb     0x441acc
  441a67:	and    BYTE PTR [rbx+0x59],dl
  441a6a:	push   rbx
  441a6b:	push   rsp
  441a6c:	rex.RB
  441a6d:	rex.WRB and BYTE PTR [r10],r12b
  441a70:	addr32 fs (bad) 
  441a73:	sub    eax,0x67726174
  441a78:	gs je  0x441aa9
  441a7b:	fs je  0x441ae2
  441a7e:	and    bh,BYTE PTR [rsi]
  441a80:	or     bh,BYTE PTR [rsi+riz*2]
  441a83:	gs (bad) 
  441a85:	je     0x441afc
  441a87:	jb     0x441aee
  441a89:	and    BYTE PTR [rsi+0x61],ch
  441a8c:	ins    DWORD PTR es:[rdi],dx
  441a8d:	gs cmp eax,0x67726f22
  441a93:	outs   dx,BYTE PTR cs:[esi]
  441a96:	jne    0x441ac6
  441a98:	addr32 fs (bad) 
  441a9b:	imul   esi,DWORD PTR cs:[rbx],0x632e3638
  441aa2:	outs   dx,DWORD PTR ds:[rsi]
  441aa3:	jb     0x441b0a
  441aa5:	and    bh,BYTE PTR [rsi]
  441aa7:	or     ah,BYTE PTR [rax]
  441aa9:	and    BYTE PTR [rsi+riz*2],bh
  441aac:	ins    BYTE PTR es:[rdi],dx
  441aad:	(bad)  
  441aae:	addr32 jae 0x441ad1
  441ab1:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x36383369
  441ab9:	pop    rdi
  441aba:	gs data16 ins BYTE PTR es:[rdi],dx
  441abd:	(bad)  
  441abe:	addr32 jae 0x441ae3
  441ac1:	and    BYTE PTR [rbx+0x69],dh
  441ac4:	jp     0x441b2b
  441ac6:	cmp    eax,0x3e223422
  441acb:	or     ah,BYTE PTR [rax]
  441acd:	and    BYTE PTR [rax],ah
  441acf:	and    BYTE PTR [rsi+riz*2],bh
  441ad2:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441ad9:	ins    DWORD PTR es:[rdi],dx
  441ada:	gs cmp eax,0x22464322
  441ae0:	and    BYTE PTR [rbx+0x74],dh
  441ae3:	(bad)  
  441ae4:	jb     0x441b5a
  441ae6:	cmp    eax,0x20223022
  441aeb:	outs   dx,BYTE PTR gs:[rsi]
  441aed:	fs cmp eax,0x2f223022
  441af3:	or     ah,BYTE PTR ds:[rax]
  441af6:	and    BYTE PTR [rax],ah
  441af8:	and    BYTE PTR [rsi+riz*2],bh
  441afb:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441b02:	ins    DWORD PTR es:[rdi],dx
  441b03:	gs cmp eax,0x73202222
  441b09:	je     0x441b6c
  441b0b:	jb     0x441b81
  441b0d:	cmp    eax,0x20223122
  441b12:	outs   dx,BYTE PTR gs:[rsi]
  441b14:	fs cmp eax,0x2f223122
  441b1a:	or     ah,BYTE PTR ds:[rax]
  441b1d:	and    BYTE PTR [rax],ah
  441b1f:	and    BYTE PTR [rsi+riz*2],bh
  441b22:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441b29:	ins    DWORD PTR es:[rdi],dx
  441b2a:	gs cmp eax,0x22465022
  441b30:	and    BYTE PTR [rbx+0x74],dh
  441b33:	(bad)  
  441b34:	jb     0x441baa
  441b36:	cmp    eax,0x20223222
  441b3b:	outs   dx,BYTE PTR gs:[rsi]
  441b3d:	fs cmp eax,0x2f223222
  441b43:	or     ah,BYTE PTR ds:[rax]
  441b46:	and    BYTE PTR [rax],ah
  441b48:	and    BYTE PTR [rsi+riz*2],bh
  441b4b:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441b52:	ins    DWORD PTR es:[rdi],dx
  441b53:	gs cmp eax,0x22464122
  441b59:	and    BYTE PTR [rbx+0x74],dh
  441b5c:	(bad)  
  441b5d:	jb     0x441bd3
  441b5f:	cmp    eax,0x20223422
  441b64:	outs   dx,BYTE PTR gs:[rsi]
  441b66:	fs cmp eax,0x2f223422
  441b6c:	or     ah,BYTE PTR ds:[rax]
  441b6f:	and    BYTE PTR [rax],ah
  441b71:	and    BYTE PTR [rsi+riz*2],bh
  441b74:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441b7b:	ins    DWORD PTR es:[rdi],dx
  441b7c:	gs cmp eax,0x22465a22
  441b82:	and    BYTE PTR [rbx+0x74],dh
  441b85:	(bad)  
  441b86:	jb     0x441bfc
  441b88:	cmp    eax,0x20223622
  441b8d:	outs   dx,BYTE PTR gs:[rsi]
  441b8f:	fs cmp eax,0x2f223622
  441b95:	or     ah,BYTE PTR ds:[rax]
  441b98:	and    BYTE PTR [rax],ah
  441b9a:	and    BYTE PTR [rsi+riz*2],bh
  441b9d:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441ba4:	ins    DWORD PTR es:[rdi],dx
  441ba5:	gs cmp eax,0x22465322
  441bab:	and    BYTE PTR [rbx+0x74],dh
  441bae:	(bad)  
  441baf:	jb     0x441c25
  441bb1:	cmp    eax,0x20223722
  441bb6:	outs   dx,BYTE PTR gs:[rsi]
  441bb8:	fs cmp eax,0x2f223722
  441bbe:	or     ah,BYTE PTR ds:[rax]
  441bc1:	and    BYTE PTR [rax],ah
  441bc3:	and    BYTE PTR [rsi+riz*2],bh
  441bc6:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441bcd:	ins    DWORD PTR es:[rdi],dx
  441bce:	gs cmp eax,0x22465422
  441bd4:	and    BYTE PTR [rbx+0x74],dh
  441bd7:	(bad)  
  441bd8:	jb     0x441c4e
  441bda:	cmp    eax,0x20223822
  441bdf:	outs   dx,BYTE PTR gs:[rsi]
  441be1:	fs cmp eax,0x2f223822
  441be7:	or     ah,BYTE PTR ds:[rax]
  441bea:	and    BYTE PTR [rax],ah
  441bec:	and    BYTE PTR [rsi+riz*2],bh
  441bef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441bf6:	ins    DWORD PTR es:[rdi],dx
  441bf7:	gs cmp eax,0x22464922
  441bfd:	and    BYTE PTR [rbx+0x74],dh
  441c00:	(bad)  
  441c01:	jb     0x441c77
  441c03:	cmp    eax,0x20223922
  441c08:	outs   dx,BYTE PTR gs:[rsi]
  441c0a:	fs cmp eax,0x2f223922
  441c10:	or     ah,BYTE PTR ds:[rax]
  441c13:	and    BYTE PTR [rax],ah
  441c15:	and    BYTE PTR [rsi+riz*2],bh
  441c18:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441c1f:	ins    DWORD PTR es:[rdi],dx
  441c20:	gs cmp eax,0x22464422
  441c26:	and    BYTE PTR [rbx+0x74],dh
  441c29:	(bad)  
  441c2a:	jb     0x441ca0
  441c2c:	cmp    eax,0x22303122
  441c31:	and    BYTE PTR [rbp+0x6e],ah
  441c34:	fs cmp eax,0x22303122
  441c3a:	(bad)  
  441c3b:	or     ah,BYTE PTR ds:[rax]
  441c3e:	and    BYTE PTR [rax],ah
  441c40:	and    BYTE PTR [rsi+riz*2],bh
  441c43:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441c4a:	ins    DWORD PTR es:[rdi],dx
  441c4b:	gs cmp eax,0x22464f22
  441c51:	and    BYTE PTR [rbx+0x74],dh
  441c54:	(bad)  
  441c55:	jb     0x441ccb
  441c57:	cmp    eax,0x22313122
  441c5c:	and    BYTE PTR [rbp+0x6e],ah
  441c5f:	fs cmp eax,0x22313122
  441c65:	(bad)  
  441c66:	or     ah,BYTE PTR ds:[rax]
  441c69:	and    BYTE PTR [rax],ah
  441c6b:	and    BYTE PTR [rsi+riz*2],bh
  441c6e:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441c75:	ins    DWORD PTR es:[rdi],dx
  441c76:	gs cmp eax,0x22544e22
  441c7c:	and    BYTE PTR [rbx+0x74],dh
  441c7f:	(bad)  
  441c80:	jb     0x441cf6
  441c82:	cmp    eax,0x22343122
  441c87:	and    BYTE PTR [rbp+0x6e],ah
  441c8a:	fs cmp eax,0x22343122
  441c90:	(bad)  
  441c91:	or     ah,BYTE PTR ds:[rax]
  441c94:	and    BYTE PTR [rax],ah
  441c96:	and    BYTE PTR [rsi+riz*2],bh
  441c99:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441ca0:	ins    DWORD PTR es:[rdi],dx
  441ca1:	gs cmp eax,0x22465222
  441ca7:	and    BYTE PTR [rbx+0x74],dh
  441caa:	(bad)  
  441cab:	jb     0x441d21
  441cad:	cmp    eax,0x22363122
  441cb2:	and    BYTE PTR [rbp+0x6e],ah
  441cb5:	fs cmp eax,0x22363122
  441cbb:	(bad)  
  441cbc:	or     ah,BYTE PTR ds:[rax]
  441cbf:	and    BYTE PTR [rax],ah
  441cc1:	and    BYTE PTR [rsi+riz*2],bh
  441cc4:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441ccb:	ins    DWORD PTR es:[rdi],dx
  441ccc:	gs cmp eax,0x224d5622
  441cd2:	and    BYTE PTR [rbx+0x74],dh
  441cd5:	(bad)  
  441cd6:	jb     0x441d4c
  441cd8:	cmp    eax,0x22373122
  441cdd:	and    BYTE PTR [rbp+0x6e],ah
  441ce0:	fs cmp eax,0x22373122
  441ce6:	(bad)  
  441ce7:	or     ah,BYTE PTR ds:[rax]
  441cea:	and    BYTE PTR [rax],ah
  441cec:	and    BYTE PTR [rsi+riz*2],bh
  441cef:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441cf6:	ins    DWORD PTR es:[rdi],dx
  441cf7:	gs cmp eax,0x22434122
  441cfd:	and    BYTE PTR [rbx+0x74],dh
  441d00:	(bad)  
  441d01:	jb     0x441d77
  441d03:	cmp    eax,0x22383122
  441d08:	and    BYTE PTR [rbp+0x6e],ah
  441d0b:	fs cmp eax,0x22383122
  441d11:	(bad)  
  441d12:	or     ah,BYTE PTR ds:[rax]
  441d15:	and    BYTE PTR [rax],ah
  441d17:	and    BYTE PTR [rsi+riz*2],bh
  441d1a:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441d21:	ins    DWORD PTR es:[rdi],dx
  441d22:	gs cmp eax,0x46495622
  441d28:	and    ah,BYTE PTR [rax]
  441d2a:	jae    0x441da0
  441d2c:	(bad)  
  441d2d:	jb     0x441da3
  441d2f:	cmp    eax,0x22393122
  441d34:	and    BYTE PTR [rbp+0x6e],ah
  441d37:	fs cmp eax,0x22393122
  441d3d:	(bad)  
  441d3e:	or     ah,BYTE PTR ds:[rax]
  441d41:	and    BYTE PTR [rax],ah
  441d43:	and    BYTE PTR [rsi+riz*2],bh
  441d46:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441d4d:	ins    DWORD PTR es:[rdi],dx
  441d4e:	gs cmp eax,0x50495622
  441d54:	and    ah,BYTE PTR [rax]
  441d56:	jae    0x441dcc
  441d58:	(bad)  
  441d59:	jb     0x441dcf
  441d5b:	cmp    eax,0x22303222
  441d60:	and    BYTE PTR [rbp+0x6e],ah
  441d63:	fs cmp eax,0x22303222
  441d69:	(bad)  
  441d6a:	or     ah,BYTE PTR ds:[rax]
  441d6d:	and    BYTE PTR [rax],ah
  441d6f:	and    BYTE PTR [rsi+riz*2],bh
  441d72:	imul   esp,DWORD PTR [rbp+0x6c],0x616e2064
  441d79:	ins    DWORD PTR es:[rdi],dx
  441d7a:	gs cmp eax,0x22444922
  441d80:	and    BYTE PTR [rbx+0x74],dh
  441d83:	(bad)  
  441d84:	jb     0x441dfa
  441d86:	cmp    eax,0x22313222
  441d8b:	and    BYTE PTR [rbp+0x6e],ah
  441d8e:	fs cmp eax,0x22313222
  441d94:	(bad)  
  441d95:	or     ah,BYTE PTR ds:[rax]
  441d98:	and    BYTE PTR [rdi+rbp*1],bh
  441d9b:	data16 ins BYTE PTR es:[rdi],dx
  441d9d:	(bad)  
  441d9e:	addr32 jae 0x441ddf
  441da1:	or     cl,BYTE PTR [rdx]
  441da3:	and    BYTE PTR [rax],ah
  441da5:	cmp    al,0x72
  441da7:	and    BYTE PTR gs:[esi+0x61],ch
  441dac:	ins    DWORD PTR es:[rdi],dx
  441dad:	gs cmp eax,0x78616522
  441db3:	and    ah,BYTE PTR [rax]
  441db5:	(bad)  
  441db6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441dbe:	xor    esi,DWORD PTR [rdx]
  441dc0:	and    ah,BYTE PTR [rax]
  441dc2:	je     0x441e3d
  441dc4:	jo     0x441e2b
  441dc6:	cmp    eax,0x746e6922
  441dcb:	xor    esi,DWORD PTR [rdx]
  441dcd:	and    ch,BYTE PTR [rdi]
  441dcf:	or     ah,BYTE PTR ds:[rax]
  441dd2:	and    BYTE PTR [rdx+rsi*2],bh
  441dd5:	and    BYTE PTR gs:[esi+0x61],ch
  441dda:	ins    DWORD PTR es:[rdi],dx
  441ddb:	gs cmp eax,0x78636522
  441de1:	and    ah,BYTE PTR [rax]
  441de3:	(bad)  
  441de4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441dec:	xor    esi,DWORD PTR [rdx]
  441dee:	and    ah,BYTE PTR [rax]
  441df0:	je     0x441e6b
  441df2:	jo     0x441e59
  441df4:	cmp    eax,0x746e6922
  441df9:	xor    esi,DWORD PTR [rdx]
  441dfb:	and    ch,BYTE PTR [rdi]
  441dfd:	or     ah,BYTE PTR ds:[rax]
  441e00:	and    BYTE PTR [rdx+rsi*2],bh
  441e03:	and    BYTE PTR gs:[esi+0x61],ch
  441e08:	ins    DWORD PTR es:[rdi],dx
  441e09:	gs cmp eax,0x78646522
  441e0f:	and    ah,BYTE PTR [rax]
  441e11:	(bad)  
  441e12:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441e1a:	xor    esi,DWORD PTR [rdx]
  441e1c:	and    ah,BYTE PTR [rax]
  441e1e:	je     0x441e99
  441e20:	jo     0x441e87
  441e22:	cmp    eax,0x746e6922
  441e27:	xor    esi,DWORD PTR [rdx]
  441e29:	and    ch,BYTE PTR [rdi]
  441e2b:	or     ah,BYTE PTR ds:[rax]
  441e2e:	and    BYTE PTR [rdx+rsi*2],bh
  441e31:	and    BYTE PTR gs:[esi+0x61],ch
  441e36:	ins    DWORD PTR es:[rdi],dx
  441e37:	gs cmp eax,0x78626522
  441e3d:	and    ah,BYTE PTR [rax]
  441e3f:	(bad)  
  441e40:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441e48:	xor    esi,DWORD PTR [rdx]
  441e4a:	and    ah,BYTE PTR [rax]
  441e4c:	je     0x441ec7
  441e4e:	jo     0x441eb5
  441e50:	cmp    eax,0x746e6922
  441e55:	xor    esi,DWORD PTR [rdx]
  441e57:	and    ch,BYTE PTR [rdi]
  441e59:	or     ah,BYTE PTR ds:[rax]
  441e5c:	and    BYTE PTR [rdx+rsi*2],bh
  441e5f:	and    BYTE PTR gs:[esi+0x61],ch
  441e64:	ins    DWORD PTR es:[rdi],dx
  441e65:	gs cmp eax,0x70736522
  441e6b:	and    ah,BYTE PTR [rax]
  441e6d:	(bad)  
  441e6e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441e76:	xor    esi,DWORD PTR [rdx]
  441e78:	and    ah,BYTE PTR [rax]
  441e7a:	je     0x441ef5
  441e7c:	jo     0x441ee3
  441e7e:	cmp    eax,0x74616422
  441e83:	(bad)  
  441e84:	pop    rdi
  441e85:	jo     0x441efb
  441e87:	jb     0x441eab
  441e89:	(bad)  
  441e8a:	or     ah,BYTE PTR ds:[rax]
  441e8d:	and    BYTE PTR [rdx+rsi*2],bh
  441e90:	and    BYTE PTR gs:[esi+0x61],ch
  441e95:	ins    DWORD PTR es:[rdi],dx
  441e96:	gs cmp eax,0x70626522
  441e9c:	and    ah,BYTE PTR [rax]
  441e9e:	(bad)  
  441e9f:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441ea7:	xor    esi,DWORD PTR [rdx]
  441ea9:	and    ah,BYTE PTR [rax]
  441eab:	je     0x441f26
  441ead:	jo     0x441f14
  441eaf:	cmp    eax,0x74616422
  441eb4:	(bad)  
  441eb5:	pop    rdi
  441eb6:	jo     0x441f2c
  441eb8:	jb     0x441edc
  441eba:	(bad)  
  441ebb:	or     ah,BYTE PTR ds:[rax]
  441ebe:	and    BYTE PTR [rdx+rsi*2],bh
  441ec1:	and    BYTE PTR gs:[esi+0x61],ch
  441ec6:	ins    DWORD PTR es:[rdi],dx
  441ec7:	gs cmp eax,0x69736522
  441ecd:	and    ah,BYTE PTR [rax]
  441ecf:	(bad)  
  441ed0:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441ed8:	xor    esi,DWORD PTR [rdx]
  441eda:	and    ah,BYTE PTR [rax]
  441edc:	je     0x441f57
  441ede:	jo     0x441f45
  441ee0:	cmp    eax,0x746e6922
  441ee5:	xor    esi,DWORD PTR [rdx]
  441ee7:	and    ch,BYTE PTR [rdi]
  441ee9:	or     ah,BYTE PTR ds:[rax]
  441eec:	and    BYTE PTR [rdx+rsi*2],bh
  441eef:	and    BYTE PTR gs:[esi+0x61],ch
  441ef4:	ins    DWORD PTR es:[rdi],dx
  441ef5:	gs cmp eax,0x69646522
  441efb:	and    ah,BYTE PTR [rax]
  441efd:	(bad)  
  441efe:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441f06:	xor    esi,DWORD PTR [rdx]
  441f08:	and    ah,BYTE PTR [rax]
  441f0a:	je     0x441f85
  441f0c:	jo     0x441f73
  441f0e:	cmp    eax,0x746e6922
  441f13:	xor    esi,DWORD PTR [rdx]
  441f15:	and    ch,BYTE PTR [rdi]
  441f17:	or     cl,BYTE PTR ds:[rdx]
  441f1a:	and    BYTE PTR [rax],ah
  441f1c:	cmp    al,0x72
  441f1e:	and    BYTE PTR gs:[esi+0x61],ch
  441f23:	ins    DWORD PTR es:[rdi],dx
  441f24:	gs cmp eax,0x70696522
  441f2a:	and    ah,BYTE PTR [rax]
  441f2c:	(bad)  
  441f2d:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  441f35:	xor    esi,DWORD PTR [rdx]
  441f37:	and    ah,BYTE PTR [rax]
  441f39:	je     0x441fb4
  441f3b:	jo     0x441fa2
  441f3d:	cmp    eax,0x646f6322
  441f42:	gs pop rdi
  441f44:	jo     0x441fba
  441f46:	jb     0x441f6a
  441f48:	(bad)  
  441f49:	or     ah,BYTE PTR ds:[rax]
  441f4c:	and    BYTE PTR [rdx+rsi*2],bh
  441f4f:	and    BYTE PTR gs:[esi+0x61],ch
  441f54:	ins    DWORD PTR es:[rdi],dx
  441f55:	gs cmp eax,0x6c666522
  441f5b:	(bad)  
  441f5c:	addr32 jae 0x441f81
  441f5f:	and    BYTE PTR [rdx+0x69],ah
  441f62:	je     0x441fd7
  441f64:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  441f6b:	and    ah,BYTE PTR [rax]
  441f6d:	je     0x441fe8
  441f6f:	jo     0x441fd6
  441f71:	cmp    eax,0x38336922
  441f76:	ss pop rdi
  441f78:	gs data16 ins BYTE PTR es:[rdi],dx
  441f7b:	(bad)  
  441f7c:	addr32 jae 0x441fa1
  441f7f:	(bad)  
  441f80:	or     ah,BYTE PTR ds:[rax]
  441f83:	and    BYTE PTR [rdx+rsi*2],bh
  441f86:	and    BYTE PTR gs:[esi+0x61],ch
  441f8b:	ins    DWORD PTR es:[rdi],dx
  441f8c:	gs cmp eax,0x22736322
  441f92:	and    BYTE PTR [rdx+0x69],ah
  441f95:	je     0x44200a
  441f97:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  441f9e:	and    ah,BYTE PTR [rax]
  441fa0:	je     0x44201b
  441fa2:	jo     0x442009
  441fa4:	cmp    eax,0x746e6922
  441fa9:	xor    esi,DWORD PTR [rdx]
  441fab:	and    ch,BYTE PTR [rdi]
  441fad:	or     ah,BYTE PTR ds:[rax]
  441fb0:	and    BYTE PTR [rdx+rsi*2],bh
  441fb3:	and    BYTE PTR gs:[esi+0x61],ch
  441fb8:	ins    DWORD PTR es:[rdi],dx
  441fb9:	gs cmp eax,0x22737322
  441fbf:	and    BYTE PTR [rdx+0x69],ah
  441fc2:	je     0x442037
  441fc4:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  441fcb:	and    ah,BYTE PTR [rax]
  441fcd:	je     0x442048
  441fcf:	jo     0x442036
  441fd1:	cmp    eax,0x746e6922
  441fd6:	xor    esi,DWORD PTR [rdx]
  441fd8:	and    ch,BYTE PTR [rdi]
  441fda:	or     ah,BYTE PTR ds:[rax]
  441fdd:	and    BYTE PTR [rdx+rsi*2],bh
  441fe0:	and    BYTE PTR gs:[esi+0x61],ch
  441fe5:	ins    DWORD PTR es:[rdi],dx
  441fe6:	gs cmp eax,0x22736422
  441fec:	and    BYTE PTR [rdx+0x69],ah
  441fef:	je     0x442064
  441ff1:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  441ff8:	and    ah,BYTE PTR [rax]
  441ffa:	je     0x442075
  441ffc:	jo     0x442063
  441ffe:	cmp    eax,0x746e6922
  442003:	xor    esi,DWORD PTR [rdx]
  442005:	and    ch,BYTE PTR [rdi]
  442007:	or     ah,BYTE PTR ds:[rax]
  44200a:	and    BYTE PTR [rdx+rsi*2],bh
  44200d:	and    BYTE PTR gs:[esi+0x61],ch
  442012:	ins    DWORD PTR es:[rdi],dx
  442013:	gs cmp eax,0x22736522
  442019:	and    BYTE PTR [rdx+0x69],ah
  44201c:	je     0x442091
  44201e:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  442025:	and    ah,BYTE PTR [rax]
  442027:	je     0x4420a2
  442029:	jo     0x442090
  44202b:	cmp    eax,0x746e6922
  442030:	xor    esi,DWORD PTR [rdx]
  442032:	and    ch,BYTE PTR [rdi]
  442034:	or     ah,BYTE PTR ds:[rax]
  442037:	and    BYTE PTR [rdx+rsi*2],bh
  44203a:	and    BYTE PTR gs:[esi+0x61],ch
  44203f:	ins    DWORD PTR es:[rdi],dx
  442040:	gs cmp eax,0x22736622
  442046:	and    BYTE PTR [rdx+0x69],ah
  442049:	je     0x4420be
  44204b:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  442052:	and    ah,BYTE PTR [rax]
  442054:	je     0x4420cf
  442056:	jo     0x4420bd
  442058:	cmp    eax,0x746e6922
  44205d:	xor    esi,DWORD PTR [rdx]
  44205f:	and    ch,BYTE PTR [rdi]
  442061:	or     ah,BYTE PTR ds:[rax]
  442064:	and    BYTE PTR [rdx+rsi*2],bh
  442067:	and    BYTE PTR gs:[esi+0x61],ch
  44206c:	ins    DWORD PTR es:[rdi],dx
  44206d:	gs cmp eax,0x22736722
  442073:	and    BYTE PTR [rdx+0x69],ah
  442076:	je     0x4420eb
  442078:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  44207f:	and    ah,BYTE PTR [rax]
  442081:	je     0x4420fc
  442083:	jo     0x4420ea
  442085:	cmp    eax,0x746e6922
  44208a:	xor    esi,DWORD PTR [rdx]
  44208c:	and    ch,BYTE PTR [rdi]
  44208e:	or     cl,BYTE PTR ds:[rdx]
  442091:	and    BYTE PTR [rax],ah
  442093:	cmp    al,0x72
  442095:	and    BYTE PTR gs:[esi+0x61],ch
  44209a:	ins    DWORD PTR es:[rdi],dx
  44209b:	gs cmp eax,0x30747322
  4420a1:	and    ah,BYTE PTR [rax]
  4420a3:	(bad)  
  4420a4:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4420ac:	cmp    BYTE PTR [rax],dh
  4420ae:	and    ah,BYTE PTR [rax]
  4420b0:	je     0x44212b
  4420b2:	jo     0x442119
  4420b4:	cmp    eax,0x38336922
  4420b9:	(bad)  
  4420ba:	pop    rdi
  4420bb:	gs js  0x442132
  4420be:	and    ch,BYTE PTR [rdi]
  4420c0:	or     ah,BYTE PTR ds:[rax]
  4420c3:	and    BYTE PTR [rdx+rsi*2],bh
  4420c6:	and    BYTE PTR gs:[esi+0x61],ch
  4420cb:	ins    DWORD PTR es:[rdi],dx
  4420cc:	gs cmp eax,0x31747322
  4420d2:	and    ah,BYTE PTR [rax]
  4420d4:	(bad)  
  4420d5:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4420dd:	cmp    BYTE PTR [rax],dh
  4420df:	and    ah,BYTE PTR [rax]
  4420e1:	je     0x44215c
  4420e3:	jo     0x44214a
  4420e5:	cmp    eax,0x38336922
  4420ea:	(bad)  
  4420eb:	pop    rdi
  4420ec:	gs js  0x442163
  4420ef:	and    ch,BYTE PTR [rdi]
  4420f1:	or     ah,BYTE PTR ds:[rax]
  4420f4:	and    BYTE PTR [rdx+rsi*2],bh
  4420f7:	and    BYTE PTR gs:[esi+0x61],ch
  4420fc:	ins    DWORD PTR es:[rdi],dx
  4420fd:	gs cmp eax,0x32747322
  442103:	and    ah,BYTE PTR [rax]
  442105:	(bad)  
  442106:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  44210e:	cmp    BYTE PTR [rax],dh
  442110:	and    ah,BYTE PTR [rax]
  442112:	je     0x44218d
  442114:	jo     0x44217b
  442116:	cmp    eax,0x38336922
  44211b:	(bad)  
  44211c:	pop    rdi
  44211d:	gs js  0x442194
  442120:	and    ch,BYTE PTR [rdi]
  442122:	or     ah,BYTE PTR ds:[rax]
  442125:	and    BYTE PTR [rdx+rsi*2],bh
  442128:	and    BYTE PTR gs:[esi+0x61],ch
  44212d:	ins    DWORD PTR es:[rdi],dx
  44212e:	gs cmp eax,0x33747322
  442134:	and    ah,BYTE PTR [rax]
  442136:	(bad)  
  442137:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  44213f:	cmp    BYTE PTR [rax],dh
  442141:	and    ah,BYTE PTR [rax]
  442143:	je     0x4421be
  442145:	jo     0x4421ac
  442147:	cmp    eax,0x38336922
  44214c:	(bad)  
  44214d:	pop    rdi
  44214e:	gs js  0x4421c5
  442151:	and    ch,BYTE PTR [rdi]
  442153:	or     ah,BYTE PTR ds:[rax]
  442156:	and    BYTE PTR [rdx+rsi*2],bh
  442159:	and    BYTE PTR gs:[esi+0x61],ch
  44215e:	ins    DWORD PTR es:[rdi],dx
  44215f:	gs cmp eax,0x34747322
  442165:	and    ah,BYTE PTR [rax]
  442167:	(bad)  
  442168:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  442170:	cmp    BYTE PTR [rax],dh
  442172:	and    ah,BYTE PTR [rax]
  442174:	je     0x4421ef
  442176:	jo     0x4421dd
  442178:	cmp    eax,0x38336922
  44217d:	(bad)  
  44217e:	pop    rdi
  44217f:	gs js  0x4421f6
  442182:	and    ch,BYTE PTR [rdi]
  442184:	or     ah,BYTE PTR ds:[rax]
  442187:	and    BYTE PTR [rdx+rsi*2],bh
  44218a:	and    BYTE PTR gs:[esi+0x61],ch
  44218f:	ins    DWORD PTR es:[rdi],dx
  442190:	gs cmp eax,0x35747322
  442196:	and    ah,BYTE PTR [rax]
  442198:	(bad)  
  442199:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4421a1:	cmp    BYTE PTR [rax],dh
  4421a3:	and    ah,BYTE PTR [rax]
  4421a5:	je     0x442220
  4421a7:	jo     0x44220e
  4421a9:	cmp    eax,0x38336922
  4421ae:	(bad)  
  4421af:	pop    rdi
  4421b0:	gs js  0x442227
  4421b3:	and    ch,BYTE PTR [rdi]
  4421b5:	or     ah,BYTE PTR ds:[rax]
  4421b8:	and    BYTE PTR [rdx+rsi*2],bh
  4421bb:	and    BYTE PTR gs:[esi+0x61],ch
  4421c0:	ins    DWORD PTR es:[rdi],dx
  4421c1:	gs cmp eax,0x36747322
  4421c7:	and    ah,BYTE PTR [rax]
  4421c9:	(bad)  
  4421ca:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4421d2:	cmp    BYTE PTR [rax],dh
  4421d4:	and    ah,BYTE PTR [rax]
  4421d6:	je     0x442251
  4421d8:	jo     0x44223f
  4421da:	cmp    eax,0x38336922
  4421df:	(bad)  
  4421e0:	pop    rdi
  4421e1:	gs js  0x442258
  4421e4:	and    ch,BYTE PTR [rdi]
  4421e6:	or     ah,BYTE PTR ds:[rax]
  4421e9:	and    BYTE PTR [rdx+rsi*2],bh
  4421ec:	and    BYTE PTR gs:[esi+0x61],ch
  4421f1:	ins    DWORD PTR es:[rdi],dx
  4421f2:	gs cmp eax,0x37747322
  4421f8:	and    ah,BYTE PTR [rax]
  4421fa:	(bad)  
  4421fb:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  442203:	cmp    BYTE PTR [rax],dh
  442205:	and    ah,BYTE PTR [rax]
  442207:	je     0x442282
  442209:	jo     0x442270
  44220b:	cmp    eax,0x38336922
  442210:	(bad)  
  442211:	pop    rdi
  442212:	gs js  0x442289
  442215:	and    ch,BYTE PTR [rdi]
  442217:	or     cl,BYTE PTR ds:[rdx]
  44221a:	and    BYTE PTR [rax],ah
  44221c:	cmp    al,0x72
  44221e:	and    BYTE PTR gs:[esi+0x61],ch
  442223:	ins    DWORD PTR es:[rdi],dx
  442224:	gs cmp eax,0x74636622
  44222a:	jb     0x442298
  44222c:	and    ah,BYTE PTR [rax]
  44222e:	(bad)  
  44222f:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  442237:	xor    esi,DWORD PTR [rdx]
  442239:	and    ah,BYTE PTR [rax]
  44223b:	je     0x4422b6
  44223d:	jo     0x4422a4
  44223f:	cmp    eax,0x746e6922
  442244:	and    ah,BYTE PTR [rax]
  442246:	addr32 jb 0x4422b8
  442249:	jne    0x4422bb
  44224b:	cmp    eax,0x6f6c6622
  442250:	(bad)  
  442251:	je     0x442275
  442253:	(bad)  
  442254:	or     ah,BYTE PTR ds:[rax]
  442257:	and    BYTE PTR [rdx+rsi*2],bh
  44225a:	and    BYTE PTR gs:[esi+0x61],ch
  44225f:	ins    DWORD PTR es:[rdi],dx
  442260:	gs cmp eax,0x74736622
  442266:	(bad)  
  442267:	je     0x44228b
  442269:	and    BYTE PTR [rdx+0x69],ah
  44226c:	je     0x4422e1
  44226e:	imul   edi,DWORD PTR [rdx+0x65],0x3233223d
  442275:	and    ah,BYTE PTR [rax]
  442277:	je     0x4422f2
  442279:	jo     0x4422e0
  44227b:	cmp    eax,0x746e6922
  442280:	and    ah,BYTE PTR [rax]
  442282:	addr32 jb 0x4422f4
  442285:	jne    0x4422f7
  442287:	cmp    eax,0x6f6c6622
  44228c:	(bad)  
  44228d:	je     0x4422b1
  44228f:	(bad)  
  442290:	or     ah,BYTE PTR ds:[rax]
  442293:	and    BYTE PTR [rdx+rsi*2],bh
  442296:	and    BYTE PTR gs:[esi+0x61],ch
  44229b:	ins    DWORD PTR es:[rdi],dx
  44229c:	gs cmp eax,0x61746622
  4422a2:	and    ah,BYTE PTR [eax]
  4422a5:	(bad)  
  4422a6:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4422ae:	xor    esi,DWORD PTR [rdx]
  4422b0:	and    ah,BYTE PTR [rax]
  4422b2:	je     0x44232d
  4422b4:	jo     0x44231b
  4422b6:	cmp    eax,0x746e6922
  4422bb:	and    ah,BYTE PTR [rax]
  4422bd:	addr32 jb 0x44232f
  4422c0:	jne    0x442332
  4422c2:	cmp    eax,0x6f6c6622
  4422c7:	(bad)  
  4422c8:	je     0x4422ec
  4422ca:	(bad)  
  4422cb:	or     ah,BYTE PTR ds:[rax]
  4422ce:	and    BYTE PTR [rdx+rsi*2],bh
  4422d1:	and    BYTE PTR gs:[esi+0x61],ch
  4422d6:	ins    DWORD PTR es:[rdi],dx
  4422d7:	gs cmp eax,0x73696622
  4422dd:	and    ah,BYTE PTR gs:[eax]
  4422e1:	(bad)  
  4422e2:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4422ea:	xor    esi,DWORD PTR [rdx]
  4422ec:	and    ah,BYTE PTR [rax]
  4422ee:	je     0x442369
  4422f0:	jo     0x442357
  4422f2:	cmp    eax,0x746e6922
  4422f7:	and    ah,BYTE PTR [rax]
  4422f9:	addr32 jb 0x44236b
  4422fc:	jne    0x44236e
  4422fe:	cmp    eax,0x6f6c6622
  442303:	(bad)  
  442304:	je     0x442328
  442306:	(bad)  
  442307:	or     ah,BYTE PTR ds:[rax]
  44230a:	and    BYTE PTR [rdx+rsi*2],bh
  44230d:	and    BYTE PTR gs:[esi+0x61],ch
  442312:	ins    DWORD PTR es:[rdi],dx
  442313:	gs cmp eax,0x6f696622
  442319:	data16 data16 and ah,BYTE PTR [rax]
  44231d:	(bad)  
  44231e:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  442326:	xor    esi,DWORD PTR [rdx]
  442328:	and    ah,BYTE PTR [rax]
  44232a:	je     0x4423a5
  44232c:	jo     0x442393
  44232e:	cmp    eax,0x746e6922
  442333:	and    ah,BYTE PTR [rax]
  442335:	addr32 jb 0x4423a7
  442338:	jne    0x4423aa
  44233a:	cmp    eax,0x6f6c6622
  44233f:	(bad)  
  442340:	je     0x442364
  442342:	(bad)  
  442343:	or     ah,BYTE PTR ds:[rax]
  442346:	and    BYTE PTR [rdx+rsi*2],bh
  442349:	and    BYTE PTR gs:[esi+0x61],ch
  44234e:	ins    DWORD PTR es:[rdi],dx
  44234f:	gs cmp eax,0x736f6622
  442355:	and    ah,BYTE PTR gs:[eax]
  442359:	(bad)  
  44235a:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  442362:	xor    esi,DWORD PTR [rdx]
  442364:	and    ah,BYTE PTR [rax]
  442366:	je     0x4423e1
  442368:	jo     0x4423cf
  44236a:	cmp    eax,0x746e6922
  44236f:	and    ah,BYTE PTR [rax]
  442371:	addr32 jb 0x4423e3
  442374:	jne    0x4423e6
  442376:	cmp    eax,0x6f6c6622
  44237b:	(bad)  
  44237c:	je     0x4423a0
  44237e:	(bad)  
  44237f:	or     ah,BYTE PTR ds:[rax]
  442382:	and    BYTE PTR [rdx+rsi*2],bh
  442385:	and    BYTE PTR gs:[esi+0x61],ch
  44238a:	ins    DWORD PTR es:[rdi],dx
  44238b:	gs cmp eax,0x6f6f6622
  442391:	data16 data16 and ah,BYTE PTR [rax]
  442395:	(bad)  
  442396:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  44239e:	xor    esi,DWORD PTR [rdx]
  4423a0:	and    ah,BYTE PTR [rax]
  4423a2:	je     0x44241d
  4423a4:	jo     0x44240b
  4423a6:	cmp    eax,0x746e6922
  4423ab:	and    ah,BYTE PTR [rax]
  4423ad:	addr32 jb 0x44241f
  4423b0:	jne    0x442422
  4423b2:	cmp    eax,0x6f6c6622
  4423b7:	(bad)  
  4423b8:	je     0x4423dc
  4423ba:	(bad)  
  4423bb:	or     ah,BYTE PTR ds:[rax]
  4423be:	and    BYTE PTR [rdx+rsi*2],bh
  4423c1:	and    BYTE PTR gs:[esi+0x61],ch
  4423c6:	ins    DWORD PTR es:[rdi],dx
  4423c7:	gs cmp eax,0x706f6622
  4423cd:	and    ah,BYTE PTR [rax]
  4423cf:	(bad)  
  4423d0:	imul   esi,DWORD PTR [rbx+rsi*2+0x69],0x223d657a
  4423d8:	xor    esi,DWORD PTR [rdx]
  4423da:	and    ah,BYTE PTR [rax]
  4423dc:	je     0x442457
  4423de:	jo     0x442445
  4423e0:	cmp    eax,0x746e6922
  4423e5:	and    ah,BYTE PTR [rax]
  4423e7:	addr32 jb 0x442459
  4423ea:	jne    0x44245c
  4423ec:	cmp    eax,0x6f6c6622
  4423f1:	(bad)  
  4423f2:	je     0x442416
  4423f4:	(bad)  
  4423f5:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  4423f9:	data16 gs (bad) 
  4423fc:	je     0x442473
  4423fe:	jb     0x442465
  442400:	or     al,BYTE PTR ds:[rax]
	...
  44243f:	add    BYTE PTR [rdi+rdi*1],bh
  442442:	js     0x4424b1
  442444:	ins    BYTE PTR es:[rdi],dx
  442445:	and    BYTE PTR [rsi+0x65],dh
  442448:	jb     0x4424bd
  44244a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442451:	xor    BYTE PTR [rdx],ah
  442453:	(bad)  
  442454:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442458:	sub    eax,0x6f43202d
  44245d:	jo     0x4424d8
  44245f:	jb     0x4424ca
  442461:	addr32 push 0x43282074
  442467:	sub    DWORD PTR [rax],esp
  442469:	xor    dh,BYTE PTR [rax]
  44246b:	xor    DWORD PTR [rax],esi
  44246d:	sub    eax,0x37313032
  442472:	and    BYTE PTR [rsi+0x72],al
  442475:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44247a:	data16 je 0x4424f4
  44247d:	(bad)  
  44247e:	jb     0x4424e5
  442480:	and    BYTE PTR [rsi+0x6f],al
  442483:	jne    0x4424f3
  442485:	fs (bad) 
  442487:	je     0x4424f2
  442489:	outs   dx,DWORD PTR ds:[rsi]
  44248a:	outs   dx,BYTE PTR ds:[rsi]
  44248b:	sub    al,0x20
  44248d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44248f:	movsxd ebp,DWORD PTR [rsi]
  442491:	or     cl,BYTE PTR [rdx]
  442493:	and    BYTE PTR [rax],ah
  442495:	and    BYTE PTR [rax],ah
  442497:	and    BYTE PTR [rbx+0x6f],al
  44249a:	jo     0x442515
  44249c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  4424a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4424a7:	je     0x44251b
  4424a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  4424b0:	and    BYTE PTR [rdi+0x66],ch
  4424b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4424b7:	jae    0x4424d9
  4424b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  4424c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  4424c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  4424d0:	outs   dx,DWORD PTR ds:[rsi]
  4424d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  4424d9:	outs   dx,DWORD PTR ds:[rsi]
  4424da:	outs   dx,BYTE PTR ds:[rsi]
  4424db:	sub    al,0xa
  4424dd:	and    BYTE PTR [rax],ah
  4424df:	and    BYTE PTR [rax],ah
  4424e1:	and    BYTE PTR [rcx+0x72],ah
  4424e4:	and    BYTE PTR gs:[rax+0x65],dh
  4424e8:	jb     0x442557
  4424ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4424f2:	and    BYTE PTR [rcx+0x6e],ah
  4424f5:	jns    0x442517
  4424f7:	ins    DWORD PTR es:[rdi],dx
  4424f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  442501:	push   0x2074756f
  442506:	jb     0x442577
  442508:	jns    0x44256b
  44250a:	ins    BYTE PTR es:[rdi],dx
  44250b:	je     0x442586
  44250d:	and    BYTE PTR [rax+0x72],dh
  442510:	outs   dx,DWORD PTR ds:[rsi]
  442511:	jbe    0x44257c
  442513:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  44251a:	and    BYTE PTR [rbx+0x6f],ah
  44251d:	jo     0x442598
  44251f:	jb     0x44258a
  442521:	addr32 push 0x20200a74
  442527:	and    BYTE PTR [rax],ah
  442529:	and    BYTE PTR [rsi+0x6f],ch
  44252c:	je     0x442597
  44252e:	movsxd esp,DWORD PTR [rbp+0x20]
  442531:	(bad)  
  442532:	outs   dx,BYTE PTR ds:[rsi]
  442533:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  442538:	jae    0x44255a
  44253a:	outs   dx,BYTE PTR ds:[rsi]
  44253b:	outs   dx,DWORD PTR ds:[rsi]
  44253c:	je     0x4425a7
  44253e:	movsxd esp,DWORD PTR [rbp+0x20]
  442541:	(bad)  
  442542:	jb     0x4425a9
  442544:	and    BYTE PTR [rax+0x72],dh
  442547:	gs jae 0x4425af
  44254a:	jb     0x4425c2
  44254c:	gs fs and BYTE PTR cs:[rax],ah
  442551:	sub    eax,0xa0a3e2d
  442556:	cmp    al,0x21
  442558:	sub    eax,0x3349202d
  44255d:	cmp    BYTE PTR [rsi],dh
  44255f:	and    BYTE PTR [rdi+0x69],dh
  442562:	je     0x4425cc
  442564:	and    BYTE PTR [rbp+0x4d],cl
  442567:	pop    rax
  442568:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e639b
  44256e:	cmp    al,0x21
  442570:	rex.R
  442571:	rex.WRXB
  442572:	rex.XB push r12
  442574:	pop    rcx
  442575:	push   rax
  442576:	and    BYTE PTR [r9+riz*2+0x72],r14b
  44257b:	addr32 gs je 0x44259f
  44257f:	push   rbx
  442580:	pop    rcx
  442581:	push   rbx
  442582:	push   rsp
  442583:	rex.RB
  442584:	rex.WRB and BYTE PTR [r10],r12b
  442587:	addr32 fs (bad) 
  44258a:	sub    eax,0x67726174
  44258f:	gs je  0x4425c0
  442592:	fs je  0x4425f9
  442595:	and    bh,BYTE PTR [rsi]
  442597:	or     bh,BYTE PTR [rsp+rsi*2]
  44259a:	(bad)  
  44259b:	jb     0x442604
  44259d:	gs je  0x4425de
  4425a0:	or     ah,BYTE PTR [rax]
  4425a2:	and    BYTE PTR [rcx+riz*2],bh
  4425a5:	jb     0x44260a
  4425a7:	push   0x63657469
  4425ac:	je     0x442623
  4425ae:	jb     0x442615
  4425b0:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  4425b7:	(bad)  
  4425b8:	jb     0x44261d
  4425ba:	push   0x63657469
  4425bf:	je     0x442636
  4425c1:	jb     0x442628
  4425c3:	or     ah,BYTE PTR ds:[rax]
  4425c6:	and    BYTE PTR [rax+rdi*2],bh
  4425c9:	imul   edi,DWORD PTR [rdx],0x6c636e69
  4425cf:	jne    0x442635
  4425d1:	and    BYTE PTR gs:[rax+0x72],ch
  4425d5:	gs cmp ax,0x3322
  4425da:	xor    ah,BYTE PTR [rdx+0x69]
  4425dd:	je     0x44260c
  4425df:	movsxd ebp,DWORD PTR [rdi+0x72]
  4425e2:	gs cs js 0x442653
  4425e6:	ins    BYTE PTR es:[rdi],dx
  4425e7:	and    ch,BYTE PTR [rdi]
  4425e9:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  4425ed:	je     0x442650
  4425ef:	jb     0x442658
  4425f1:	gs je  0x442632
  4425f4:	or     al,BYTE PTR [rax]
	...
  4425fe:	add    BYTE PTR [rax],al
  442600:	cmp    al,0x3f
  442602:	js     0x442671
  442604:	ins    BYTE PTR es:[rdi],dx
  442605:	and    BYTE PTR [rsi+0x65],dh
  442608:	jb     0x44267d
  44260a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442611:	xor    BYTE PTR [rdx],ah
  442613:	(bad)  
  442614:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442618:	sub    eax,0x6f43202d
  44261d:	jo     0x442698
  44261f:	jb     0x44268a
  442621:	addr32 push 0x43282074
  442627:	sub    DWORD PTR [rax],esp
  442629:	xor    dh,BYTE PTR [rax]
  44262b:	xor    DWORD PTR [rbx],esi
  44262d:	sub    eax,0x37313032
  442632:	and    BYTE PTR [rsi+0x72],al
  442635:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44263a:	data16 je 0x4426b4
  44263d:	(bad)  
  44263e:	jb     0x4426a5
  442640:	and    BYTE PTR [rsi+0x6f],al
  442643:	jne    0x4426b3
  442645:	fs (bad) 
  442647:	je     0x4426b2
  442649:	outs   dx,DWORD PTR ds:[rsi]
  44264a:	outs   dx,BYTE PTR ds:[rsi]
  44264b:	sub    al,0x20
  44264d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44264f:	movsxd ebp,DWORD PTR [rsi]
  442651:	or     cl,BYTE PTR [rdx]
  442653:	and    BYTE PTR [rax],ah
  442655:	and    BYTE PTR [rax],ah
  442657:	and    BYTE PTR [rbx+0x6f],al
  44265a:	jo     0x4426d5
  44265c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  442663:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  442667:	je     0x4426db
  442669:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  442670:	and    BYTE PTR [rdi+0x66],ch
  442673:	and    BYTE PTR [rax+rbp*2+0x69],dh
  442677:	jae    0x442699
  442679:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  442680:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  442688:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  442690:	outs   dx,DWORD PTR ds:[rsi]
  442691:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  442699:	outs   dx,DWORD PTR ds:[rsi]
  44269a:	outs   dx,BYTE PTR ds:[rsi]
  44269b:	sub    al,0xa
  44269d:	and    BYTE PTR [rax],ah
  44269f:	and    BYTE PTR [rax],ah
  4426a1:	and    BYTE PTR [rcx+0x72],ah
  4426a4:	and    BYTE PTR gs:[rax+0x65],dh
  4426a8:	jb     0x442717
  4426aa:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4426b2:	and    BYTE PTR [rcx+0x6e],ah
  4426b5:	jns    0x4426d7
  4426b7:	ins    DWORD PTR es:[rdi],dx
  4426b8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  4426c1:	push   0x2074756f
  4426c6:	jb     0x442737
  4426c8:	jns    0x44272b
  4426ca:	ins    BYTE PTR es:[rdi],dx
  4426cb:	je     0x442746
  4426cd:	and    BYTE PTR [rax+0x72],dh
  4426d0:	outs   dx,DWORD PTR ds:[rsi]
  4426d1:	jbe    0x44273c
  4426d3:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  4426da:	and    BYTE PTR [rbx+0x6f],ah
  4426dd:	jo     0x442758
  4426df:	jb     0x44274a
  4426e1:	addr32 push 0x20200a74
  4426e7:	and    BYTE PTR [rax],ah
  4426e9:	and    BYTE PTR [rsi+0x6f],ch
  4426ec:	je     0x442757
  4426ee:	movsxd esp,DWORD PTR [rbp+0x20]
  4426f1:	(bad)  
  4426f2:	outs   dx,BYTE PTR ds:[rsi]
  4426f3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  4426f8:	jae    0x44271a
  4426fa:	outs   dx,BYTE PTR ds:[rsi]
  4426fb:	outs   dx,DWORD PTR ds:[rsi]
  4426fc:	je     0x442767
  4426fe:	movsxd esp,DWORD PTR [rbp+0x20]
  442701:	(bad)  
  442702:	jb     0x442769
  442704:	and    BYTE PTR [rax+0x72],dh
  442707:	gs jae 0x44276f
  44270a:	jb     0x442782
  44270c:	gs fs and BYTE PTR cs:[rax],ah
  442711:	sub    eax,0xa0a3e2d
  442716:	cmp    al,0x21
  442718:	sub    eax,0x3349202d
  44271d:	cmp    BYTE PTR [rsi],dh
  44271f:	and    BYTE PTR [rdi+0x69],dh
  442722:	je     0x44278c
  442724:	and    BYTE PTR [rcx+0x56],al
  442727:	pop    rax
  442728:	and    BYTE PTR [rcx+0x6e],ah
  44272b:	and    BYTE PTR fs:[rbp+0x50],cl
  44272f:	pop    rax
  442730:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e6563
  442736:	cmp    al,0x21
  442738:	rex.R
  442739:	rex.WRXB
  44273a:	rex.XB push r12
  44273c:	pop    rcx
  44273d:	push   rax
  44273e:	and    BYTE PTR [r9+riz*2+0x72],r14b
  442743:	addr32 gs je 0x442767
  442747:	push   rbx
  442748:	pop    rcx
  442749:	push   rbx
  44274a:	push   rsp
  44274b:	rex.RB
  44274c:	rex.WRB and BYTE PTR [r10],r12b
  44274f:	addr32 fs (bad) 
  442752:	sub    eax,0x67726174
  442757:	gs je  0x442788
  44275a:	fs je  0x4427c1
  44275d:	and    bh,BYTE PTR [rsi]
  44275f:	or     bh,BYTE PTR [rsp+rsi*2]
  442762:	(bad)  
  442763:	jb     0x4427cc
  442765:	gs je  0x4427a6
  442768:	or     ah,BYTE PTR [rax]
  44276a:	and    BYTE PTR [rcx+riz*2],bh
  44276d:	jb     0x4427d2
  44276f:	push   0x63657469
  442774:	je     0x4427eb
  442776:	jb     0x4427dd
  442778:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  44277f:	(bad)  
  442780:	jb     0x4427e5
  442782:	push   0x63657469
  442787:	je     0x4427fe
  442789:	jb     0x4427f0
  44278b:	or     ah,BYTE PTR ds:[rax]
  44278e:	and    BYTE PTR [rax+rdi*2],bh
  442791:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442797:	jne    0x4427fd
  442799:	and    BYTE PTR gs:[rax+0x72],ch
  44279d:	gs cmp ax,0x3322
  4427a2:	xor    ah,BYTE PTR [rdx+0x69]
  4427a5:	je     0x4427d4
  4427a7:	movsxd ebp,DWORD PTR [rdi+0x72]
  4427aa:	gs cs js 0x44281b
  4427ae:	ins    BYTE PTR es:[rdi],dx
  4427af:	and    ch,BYTE PTR [rdi]
  4427b1:	or     ah,BYTE PTR ds:[rax]
  4427b4:	and    BYTE PTR [rax+rdi*2],bh
  4427b7:	imul   edi,DWORD PTR [rdx],0x6c636e69
  4427bd:	jne    0x442823
  4427bf:	and    BYTE PTR gs:[rax+0x72],ch
  4427c3:	gs cmp ax,0x3322
  4427c8:	xor    ah,BYTE PTR [rdx+0x69]
  4427cb:	je     0x4427fa
  4427cd:	jae    0x442842
  4427cf:	gs cs js 0x442840
  4427d3:	ins    BYTE PTR es:[rdi],dx
  4427d4:	and    ch,BYTE PTR [rdi]
  4427d6:	or     ah,BYTE PTR ds:[rax]
  4427d9:	and    BYTE PTR [rax+rdi*2],bh
  4427dc:	imul   edi,DWORD PTR [rdx],0x6c636e69
  4427e2:	jne    0x442848
  4427e4:	and    BYTE PTR gs:[rax+0x72],ch
  4427e8:	gs cmp ax,0x3322
  4427ed:	xor    ah,BYTE PTR [rdx+0x69]
  4427f0:	je     0x44281f
  4427f2:	(bad)  
  4427f3:	jbe    0x44286d
  4427f5:	cs js  0x442865
  4427f8:	ins    BYTE PTR es:[rdi],dx
  4427f9:	and    ch,BYTE PTR [rdi]
  4427fb:	or     ah,BYTE PTR ds:[rax]
  4427fe:	and    BYTE PTR [rax+rdi*2],bh
  442801:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442807:	jne    0x44286d
  442809:	and    BYTE PTR gs:[rax+0x72],ch
  44280d:	gs cmp ax,0x3322
  442812:	xor    ah,BYTE PTR [rdx+0x69]
  442815:	je     0x442844
  442817:	ins    DWORD PTR es:[rdi],dx
  442818:	jo     0x442892
  44281a:	cs js  0x44288a
  44281d:	ins    BYTE PTR es:[rdi],dx
  44281e:	and    ch,BYTE PTR [rdi]
  442820:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  442824:	je     0x442887
  442826:	jb     0x44288f
  442828:	gs je  0x442869
  44282b:	or     al,BYTE PTR [rax]
	...
  44283d:	add    BYTE PTR [rax],al
  44283f:	add    BYTE PTR [rdi+rdi*1],bh
  442842:	js     0x4428b1
  442844:	ins    BYTE PTR es:[rdi],dx
  442845:	and    BYTE PTR [rsi+0x65],dh
  442848:	jb     0x4428bd
  44284a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442851:	xor    BYTE PTR [rdx],ah
  442853:	(bad)  
  442854:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442858:	sub    eax,0x6f43202d
  44285d:	jo     0x4428d8
  44285f:	jb     0x4428ca
  442861:	addr32 push 0x43282074
  442867:	sub    DWORD PTR [rax],esp
  442869:	xor    dh,BYTE PTR [rax]
  44286b:	xor    DWORD PTR [rbx],esi
  44286d:	sub    eax,0x37313032
  442872:	and    BYTE PTR [rsi+0x72],al
  442875:	gs and BYTE PTR gs:[rbx+0x6f],dl
  44287a:	data16 je 0x4428f4
  44287d:	(bad)  
  44287e:	jb     0x4428e5
  442880:	and    BYTE PTR [rsi+0x6f],al
  442883:	jne    0x4428f3
  442885:	fs (bad) 
  442887:	je     0x4428f2
  442889:	outs   dx,DWORD PTR ds:[rsi]
  44288a:	outs   dx,BYTE PTR ds:[rsi]
  44288b:	sub    al,0x20
  44288d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44288f:	movsxd ebp,DWORD PTR [rsi]
  442891:	or     cl,BYTE PTR [rdx]
  442893:	and    BYTE PTR [rax],ah
  442895:	and    BYTE PTR [rax],ah
  442897:	and    BYTE PTR [rbx+0x6f],al
  44289a:	jo     0x442915
  44289c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  4428a3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4428a7:	je     0x44291b
  4428a9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  4428b0:	and    BYTE PTR [rdi+0x66],ch
  4428b3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4428b7:	jae    0x4428d9
  4428b9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  4428c0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  4428c8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  4428d0:	outs   dx,DWORD PTR ds:[rsi]
  4428d1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  4428d9:	outs   dx,DWORD PTR ds:[rsi]
  4428da:	outs   dx,BYTE PTR ds:[rsi]
  4428db:	sub    al,0xa
  4428dd:	and    BYTE PTR [rax],ah
  4428df:	and    BYTE PTR [rax],ah
  4428e1:	and    BYTE PTR [rcx+0x72],ah
  4428e4:	and    BYTE PTR gs:[rax+0x65],dh
  4428e8:	jb     0x442957
  4428ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  4428f2:	and    BYTE PTR [rcx+0x6e],ah
  4428f5:	jns    0x442917
  4428f7:	ins    DWORD PTR es:[rdi],dx
  4428f8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  442901:	push   0x2074756f
  442906:	jb     0x442977
  442908:	jns    0x44296b
  44290a:	ins    BYTE PTR es:[rdi],dx
  44290b:	je     0x442986
  44290d:	and    BYTE PTR [rax+0x72],dh
  442910:	outs   dx,DWORD PTR ds:[rsi]
  442911:	jbe    0x44297c
  442913:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  44291a:	and    BYTE PTR [rbx+0x6f],ah
  44291d:	jo     0x442998
  44291f:	jb     0x44298a
  442921:	addr32 push 0x20200a74
  442927:	and    BYTE PTR [rax],ah
  442929:	and    BYTE PTR [rsi+0x6f],ch
  44292c:	je     0x442997
  44292e:	movsxd esp,DWORD PTR [rbp+0x20]
  442931:	(bad)  
  442932:	outs   dx,BYTE PTR ds:[rsi]
  442933:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  442938:	jae    0x44295a
  44293a:	outs   dx,BYTE PTR ds:[rsi]
  44293b:	outs   dx,DWORD PTR ds:[rsi]
  44293c:	je     0x4429a7
  44293e:	movsxd esp,DWORD PTR [rbp+0x20]
  442941:	(bad)  
  442942:	jb     0x4429a9
  442944:	and    BYTE PTR [rax+0x72],dh
  442947:	gs jae 0x4429af
  44294a:	jb     0x4429c2
  44294c:	gs fs and BYTE PTR cs:[rax],ah
  442951:	sub    eax,0xa0a3e2d
  442956:	cmp    al,0x21
  442958:	sub    eax,0x3349202d
  44295d:	cmp    BYTE PTR [rsi],dh
  44295f:	and    BYTE PTR [rdi+0x69],dh
  442962:	je     0x4429cc
  442964:	and    BYTE PTR [rbp+0x50],cl
  442967:	pop    rax
  442968:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e679b
  44296e:	cmp    al,0x21
  442970:	rex.R
  442971:	rex.WRXB
  442972:	rex.XB push r12
  442974:	pop    rcx
  442975:	push   rax
  442976:	and    BYTE PTR [r9+riz*2+0x72],r14b
  44297b:	addr32 gs je 0x44299f
  44297f:	push   rbx
  442980:	pop    rcx
  442981:	push   rbx
  442982:	push   rsp
  442983:	rex.RB
  442984:	rex.WRB and BYTE PTR [r10],r12b
  442987:	addr32 fs (bad) 
  44298a:	sub    eax,0x67726174
  44298f:	gs je  0x4429c0
  442992:	fs je  0x4429f9
  442995:	and    bh,BYTE PTR [rsi]
  442997:	or     bh,BYTE PTR [rsp+rsi*2]
  44299a:	(bad)  
  44299b:	jb     0x442a04
  44299d:	gs je  0x4429de
  4429a0:	or     ah,BYTE PTR [rax]
  4429a2:	and    BYTE PTR [rcx+riz*2],bh
  4429a5:	jb     0x442a0a
  4429a7:	push   0x63657469
  4429ac:	je     0x442a23
  4429ae:	jb     0x442a15
  4429b0:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  4429b7:	(bad)  
  4429b8:	jb     0x442a1d
  4429ba:	push   0x63657469
  4429bf:	je     0x442a36
  4429c1:	jb     0x442a28
  4429c3:	or     ah,BYTE PTR ds:[rax]
  4429c6:	and    BYTE PTR [rax+rdi*2],bh
  4429c9:	imul   edi,DWORD PTR [rdx],0x6c636e69
  4429cf:	jne    0x442a35
  4429d1:	and    BYTE PTR gs:[rax+0x72],ch
  4429d5:	gs cmp ax,0x3322
  4429da:	xor    ah,BYTE PTR [rdx+0x69]
  4429dd:	je     0x442a0c
  4429df:	movsxd ebp,DWORD PTR [rdi+0x72]
  4429e2:	gs cs js 0x442a53
  4429e6:	ins    BYTE PTR es:[rdi],dx
  4429e7:	and    ch,BYTE PTR [rdi]
  4429e9:	or     ah,BYTE PTR ds:[rax]
  4429ec:	and    BYTE PTR [rax+rdi*2],bh
  4429ef:	imul   edi,DWORD PTR [rdx],0x6c636e69
  4429f5:	jne    0x442a5b
  4429f7:	and    BYTE PTR gs:[rax+0x72],ch
  4429fb:	gs cmp ax,0x3322
  442a00:	xor    ah,BYTE PTR [rdx+0x69]
  442a03:	je     0x442a32
  442a05:	jae    0x442a7a
  442a07:	gs cs js 0x442a78
  442a0b:	ins    BYTE PTR es:[rdi],dx
  442a0c:	and    ch,BYTE PTR [rdi]
  442a0e:	or     ah,BYTE PTR ds:[rax]
  442a11:	and    BYTE PTR [rax+rdi*2],bh
  442a14:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442a1a:	jne    0x442a80
  442a1c:	and    BYTE PTR gs:[rax+0x72],ch
  442a20:	gs cmp ax,0x3322
  442a25:	xor    ah,BYTE PTR [rdx+0x69]
  442a28:	je     0x442a57
  442a2a:	ins    DWORD PTR es:[rdi],dx
  442a2b:	jo     0x442aa5
  442a2d:	cs js  0x442a9d
  442a30:	ins    BYTE PTR es:[rdi],dx
  442a31:	and    ch,BYTE PTR [rdi]
  442a33:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  442a37:	je     0x442a9a
  442a39:	jb     0x442aa2
  442a3b:	gs je  0x442a7c
  442a3e:	or     al,BYTE PTR [rax]
  442a40:	cmp    al,0x3f
  442a42:	js     0x442ab1
  442a44:	ins    BYTE PTR es:[rdi],dx
  442a45:	and    BYTE PTR [rsi+0x65],dh
  442a48:	jb     0x442abd
  442a4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442a51:	xor    BYTE PTR [rdx],ah
  442a53:	(bad)  
  442a54:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442a58:	sub    eax,0x6f43202d
  442a5d:	jo     0x442ad8
  442a5f:	jb     0x442aca
  442a61:	addr32 push 0x43282074
  442a67:	sub    DWORD PTR [rax],esp
  442a69:	xor    dh,BYTE PTR [rax]
  442a6b:	xor    DWORD PTR [rbp*1+0x37313032],esi
  442a72:	and    BYTE PTR [rsi+0x72],al
  442a75:	gs and BYTE PTR gs:[rbx+0x6f],dl
  442a7a:	data16 je 0x442af4
  442a7d:	(bad)  
  442a7e:	jb     0x442ae5
  442a80:	and    BYTE PTR [rsi+0x6f],al
  442a83:	jne    0x442af3
  442a85:	fs (bad) 
  442a87:	je     0x442af2
  442a89:	outs   dx,DWORD PTR ds:[rsi]
  442a8a:	outs   dx,BYTE PTR ds:[rsi]
  442a8b:	sub    al,0x20
  442a8d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  442a8f:	movsxd ebp,DWORD PTR [rsi]
  442a91:	or     cl,BYTE PTR [rdx]
  442a93:	and    BYTE PTR [rax],ah
  442a95:	and    BYTE PTR [rax],ah
  442a97:	and    BYTE PTR [rbx+0x6f],al
  442a9a:	jo     0x442b15
  442a9c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  442aa3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  442aa7:	je     0x442b1b
  442aa9:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  442ab0:	and    BYTE PTR [rdi+0x66],ch
  442ab3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  442ab7:	jae    0x442ad9
  442ab9:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  442ac0:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  442ac8:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  442ad0:	outs   dx,DWORD PTR ds:[rsi]
  442ad1:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  442ad9:	outs   dx,DWORD PTR ds:[rsi]
  442ada:	outs   dx,BYTE PTR ds:[rsi]
  442adb:	sub    al,0xa
  442add:	and    BYTE PTR [rax],ah
  442adf:	and    BYTE PTR [rax],ah
  442ae1:	and    BYTE PTR [rcx+0x72],ah
  442ae4:	and    BYTE PTR gs:[rax+0x65],dh
  442ae8:	jb     0x442b57
  442aea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  442af2:	and    BYTE PTR [rcx+0x6e],ah
  442af5:	jns    0x442b17
  442af7:	ins    DWORD PTR es:[rdi],dx
  442af8:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  442b01:	push   0x2074756f
  442b06:	jb     0x442b77
  442b08:	jns    0x442b6b
  442b0a:	ins    BYTE PTR es:[rdi],dx
  442b0b:	je     0x442b86
  442b0d:	and    BYTE PTR [rax+0x72],dh
  442b10:	outs   dx,DWORD PTR ds:[rsi]
  442b11:	jbe    0x442b7c
  442b13:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  442b1a:	and    BYTE PTR [rbx+0x6f],ah
  442b1d:	jo     0x442b98
  442b1f:	jb     0x442b8a
  442b21:	addr32 push 0x20200a74
  442b27:	and    BYTE PTR [rax],ah
  442b29:	and    BYTE PTR [rsi+0x6f],ch
  442b2c:	je     0x442b97
  442b2e:	movsxd esp,DWORD PTR [rbp+0x20]
  442b31:	(bad)  
  442b32:	outs   dx,BYTE PTR ds:[rsi]
  442b33:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  442b38:	jae    0x442b5a
  442b3a:	outs   dx,BYTE PTR ds:[rsi]
  442b3b:	outs   dx,DWORD PTR ds:[rsi]
  442b3c:	je     0x442ba7
  442b3e:	movsxd esp,DWORD PTR [rbp+0x20]
  442b41:	(bad)  
  442b42:	jb     0x442ba9
  442b44:	and    BYTE PTR [rax+0x72],dh
  442b47:	gs jae 0x442baf
  442b4a:	jb     0x442bc2
  442b4c:	gs fs and BYTE PTR cs:[rax],ah
  442b51:	sub    eax,0xa0a3e2d
  442b56:	cmp    al,0x21
  442b58:	sub    eax,0x3349202d
  442b5d:	cmp    BYTE PTR [rsi],dh
  442b5f:	and    BYTE PTR [rdi+0x69],dh
  442b62:	je     0x442bcc
  442b64:	and    BYTE PTR [rcx+0x56],al
  442b67:	pop    rax
  442b68:	xor    eax,0x2d203231
  442b6d:	sub    eax,0x3c0a0a3e
  442b72:	and    DWORD PTR [rdi+rcx*2+0x43],eax
  442b76:	push   rsp
  442b77:	pop    rcx
  442b78:	push   rax
  442b79:	and    BYTE PTR [r9+riz*2+0x72],r14b
  442b7e:	addr32 gs je 0x442ba2
  442b82:	push   rbx
  442b83:	pop    rcx
  442b84:	push   rbx
  442b85:	push   rsp
  442b86:	rex.RB
  442b87:	rex.WRB and BYTE PTR [r10],r12b
  442b8a:	addr32 fs (bad) 
  442b8d:	sub    eax,0x67726174
  442b92:	gs je  0x442bc3
  442b95:	fs je  0x442bfc
  442b98:	and    bh,BYTE PTR [rsi]
  442b9a:	or     bh,BYTE PTR [rsp+rsi*2]
  442b9d:	(bad)  
  442b9e:	jb     0x442c07
  442ba0:	gs je  0x442be1
  442ba3:	or     ah,BYTE PTR [rax]
  442ba5:	and    BYTE PTR [rcx+riz*2],bh
  442ba8:	jb     0x442c0d
  442baa:	push   0x63657469
  442baf:	je     0x442c26
  442bb1:	jb     0x442c18
  442bb3:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  442bba:	(bad)  
  442bbb:	jb     0x442c20
  442bbd:	push   0x63657469
  442bc2:	je     0x442c39
  442bc4:	jb     0x442c2b
  442bc6:	or     ah,BYTE PTR ds:[rax]
  442bc9:	and    BYTE PTR [rax+rdi*2],bh
  442bcc:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442bd2:	jne    0x442c38
  442bd4:	and    BYTE PTR gs:[rax+0x72],ch
  442bd8:	gs cmp ax,0x3322
  442bdd:	xor    ah,BYTE PTR [rdx+0x69]
  442be0:	je     0x442c0f
  442be2:	movsxd ebp,DWORD PTR [rdi+0x72]
  442be5:	gs cs js 0x442c56
  442be9:	ins    BYTE PTR es:[rdi],dx
  442bea:	and    ch,BYTE PTR [rdi]
  442bec:	or     ah,BYTE PTR ds:[rax]
  442bef:	and    BYTE PTR [rax+rdi*2],bh
  442bf2:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442bf8:	jne    0x442c5e
  442bfa:	and    BYTE PTR gs:[rax+0x72],ch
  442bfe:	gs cmp ax,0x3322
  442c03:	xor    ah,BYTE PTR [rdx+0x69]
  442c06:	je     0x442c35
  442c08:	jae    0x442c7d
  442c0a:	gs cs js 0x442c7b
  442c0e:	ins    BYTE PTR es:[rdi],dx
  442c0f:	and    ch,BYTE PTR [rdi]
  442c11:	or     ah,BYTE PTR ds:[rax]
  442c14:	and    BYTE PTR [rax+rdi*2],bh
  442c17:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442c1d:	jne    0x442c83
  442c1f:	and    BYTE PTR gs:[rax+0x72],ch
  442c23:	gs cmp ax,0x3322
  442c28:	xor    ah,BYTE PTR [rdx+0x69]
  442c2b:	je     0x442c5a
  442c2d:	(bad)  
  442c2e:	jbe    0x442ca8
  442c30:	cs js  0x442ca0
  442c33:	ins    BYTE PTR es:[rdi],dx
  442c34:	and    ch,BYTE PTR [rdi]
  442c36:	or     ah,BYTE PTR ds:[rax]
  442c39:	and    BYTE PTR [rax+rdi*2],bh
  442c3c:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442c42:	jne    0x442ca8
  442c44:	and    BYTE PTR gs:[rax+0x72],ch
  442c48:	gs cmp ax,0x3322
  442c4d:	xor    ah,BYTE PTR [rdx+0x69]
  442c50:	je     0x442c7f
  442c52:	ins    DWORD PTR es:[rdi],dx
  442c53:	jo     0x442ccd
  442c55:	cs js  0x442cc5
  442c58:	ins    BYTE PTR es:[rdi],dx
  442c59:	and    ch,BYTE PTR [rdi]
  442c5b:	or     ah,BYTE PTR ds:[rax]
  442c5e:	and    BYTE PTR [rax+rdi*2],bh
  442c61:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442c67:	jne    0x442ccd
  442c69:	and    BYTE PTR gs:[rax+0x72],ch
  442c6d:	gs cmp ax,0x3322
  442c72:	xor    ah,BYTE PTR [rdx+0x69]
  442c75:	je     0x442ca4
  442c77:	(bad)  
  442c78:	jbe    0x442cf2
  442c7a:	xor    eax,0x782e3231
  442c7f:	ins    DWORD PTR es:[rdi],dx
  442c80:	ins    BYTE PTR es:[rdi],dx
  442c81:	and    ch,BYTE PTR [rdi]
  442c83:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  442c87:	je     0x442cea
  442c89:	jb     0x442cf2
  442c8b:	gs je  0x442ccc
  442c8e:	or     al,BYTE PTR [rax]
	...
  442cc0:	cmp    al,0x3f
  442cc2:	js     0x442d31
  442cc4:	ins    BYTE PTR es:[rdi],dx
  442cc5:	and    BYTE PTR [rsi+0x65],dh
  442cc8:	jb     0x442d3d
  442cca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442cd1:	xor    BYTE PTR [rdx],ah
  442cd3:	(bad)  
  442cd4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442cd8:	sub    eax,0x6f43202d
  442cdd:	jo     0x442d58
  442cdf:	jb     0x442d4a
  442ce1:	addr32 push 0x43282074
  442ce7:	sub    DWORD PTR [rax],esp
  442ce9:	xor    dh,BYTE PTR [rax]
  442ceb:	xor    DWORD PTR [rax],esi
  442ced:	sub    eax,0x37313032
  442cf2:	and    BYTE PTR [rsi+0x72],al
  442cf5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  442cfa:	data16 je 0x442d74
  442cfd:	(bad)  
  442cfe:	jb     0x442d65
  442d00:	and    BYTE PTR [rsi+0x6f],al
  442d03:	jne    0x442d73
  442d05:	fs (bad) 
  442d07:	je     0x442d72
  442d09:	outs   dx,DWORD PTR ds:[rsi]
  442d0a:	outs   dx,BYTE PTR ds:[rsi]
  442d0b:	sub    al,0x20
  442d0d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  442d0f:	movsxd ebp,DWORD PTR [rsi]
  442d11:	or     cl,BYTE PTR [rdx]
  442d13:	and    BYTE PTR [rax],ah
  442d15:	and    BYTE PTR [rax],ah
  442d17:	and    BYTE PTR [rbx+0x6f],al
  442d1a:	jo     0x442d95
  442d1c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  442d23:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  442d27:	je     0x442d9b
  442d29:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  442d30:	and    BYTE PTR [rdi+0x66],ch
  442d33:	and    BYTE PTR [rax+rbp*2+0x69],dh
  442d37:	jae    0x442d59
  442d39:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  442d40:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  442d48:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  442d50:	outs   dx,DWORD PTR ds:[rsi]
  442d51:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  442d59:	outs   dx,DWORD PTR ds:[rsi]
  442d5a:	outs   dx,BYTE PTR ds:[rsi]
  442d5b:	sub    al,0xa
  442d5d:	and    BYTE PTR [rax],ah
  442d5f:	and    BYTE PTR [rax],ah
  442d61:	and    BYTE PTR [rcx+0x72],ah
  442d64:	and    BYTE PTR gs:[rax+0x65],dh
  442d68:	jb     0x442dd7
  442d6a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  442d72:	and    BYTE PTR [rcx+0x6e],ah
  442d75:	jns    0x442d97
  442d77:	ins    DWORD PTR es:[rdi],dx
  442d78:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  442d81:	push   0x2074756f
  442d86:	jb     0x442df7
  442d88:	jns    0x442deb
  442d8a:	ins    BYTE PTR es:[rdi],dx
  442d8b:	je     0x442e06
  442d8d:	and    BYTE PTR [rax+0x72],dh
  442d90:	outs   dx,DWORD PTR ds:[rsi]
  442d91:	jbe    0x442dfc
  442d93:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  442d9a:	and    BYTE PTR [rbx+0x6f],ah
  442d9d:	jo     0x442e18
  442d9f:	jb     0x442e0a
  442da1:	addr32 push 0x20200a74
  442da7:	and    BYTE PTR [rax],ah
  442da9:	and    BYTE PTR [rsi+0x6f],ch
  442dac:	je     0x442e17
  442dae:	movsxd esp,DWORD PTR [rbp+0x20]
  442db1:	(bad)  
  442db2:	outs   dx,BYTE PTR ds:[rsi]
  442db3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  442db8:	jae    0x442dda
  442dba:	outs   dx,BYTE PTR ds:[rsi]
  442dbb:	outs   dx,DWORD PTR ds:[rsi]
  442dbc:	je     0x442e27
  442dbe:	movsxd esp,DWORD PTR [rbp+0x20]
  442dc1:	(bad)  
  442dc2:	jb     0x442e29
  442dc4:	and    BYTE PTR [rax+0x72],dh
  442dc7:	gs jae 0x442e2f
  442dca:	jb     0x442e42
  442dcc:	gs fs and BYTE PTR cs:[rax],ah
  442dd1:	sub    eax,0xa0a3e2d
  442dd6:	cmp    al,0x21
  442dd8:	sub    eax,0x3349202d
  442ddd:	cmp    BYTE PTR [rsi],dh
  442ddf:	and    BYTE PTR [rdi+0x69],dh
  442de2:	je     0x442e4c
  442de4:	and    BYTE PTR [rcx+0x56],al
  442de7:	pop    rax
  442de8:	and    BYTE PTR [rip+0xa0a3e2d],ch        # 0xa4e6c1b
  442dee:	cmp    al,0x21
  442df0:	rex.R
  442df1:	rex.WRXB
  442df2:	rex.XB push r12
  442df4:	pop    rcx
  442df5:	push   rax
  442df6:	and    BYTE PTR [r9+riz*2+0x72],r14b
  442dfb:	addr32 gs je 0x442e1f
  442dff:	push   rbx
  442e00:	pop    rcx
  442e01:	push   rbx
  442e02:	push   rsp
  442e03:	rex.RB
  442e04:	rex.WRB and BYTE PTR [r10],r12b
  442e07:	addr32 fs (bad) 
  442e0a:	sub    eax,0x67726174
  442e0f:	gs je  0x442e40
  442e12:	fs je  0x442e79
  442e15:	and    bh,BYTE PTR [rsi]
  442e17:	or     bh,BYTE PTR [rsp+rsi*2]
  442e1a:	(bad)  
  442e1b:	jb     0x442e84
  442e1d:	gs je  0x442e5e
  442e20:	or     ah,BYTE PTR [rax]
  442e22:	and    BYTE PTR [rcx+riz*2],bh
  442e25:	jb     0x442e8a
  442e27:	push   0x63657469
  442e2c:	je     0x442ea3
  442e2e:	jb     0x442e95
  442e30:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  442e37:	(bad)  
  442e38:	jb     0x442e9d
  442e3a:	push   0x63657469
  442e3f:	je     0x442eb6
  442e41:	jb     0x442ea8
  442e43:	or     ah,BYTE PTR ds:[rax]
  442e46:	and    BYTE PTR [rax+rdi*2],bh
  442e49:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442e4f:	jne    0x442eb5
  442e51:	and    BYTE PTR gs:[rax+0x72],ch
  442e55:	gs cmp ax,0x3322
  442e5a:	xor    ah,BYTE PTR [rdx+0x69]
  442e5d:	je     0x442e8c
  442e5f:	movsxd ebp,DWORD PTR [rdi+0x72]
  442e62:	gs cs js 0x442ed3
  442e66:	ins    BYTE PTR es:[rdi],dx
  442e67:	and    ch,BYTE PTR [rdi]
  442e69:	or     ah,BYTE PTR ds:[rax]
  442e6c:	and    BYTE PTR [rax+rdi*2],bh
  442e6f:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442e75:	jne    0x442edb
  442e77:	and    BYTE PTR gs:[rax+0x72],ch
  442e7b:	gs cmp ax,0x3322
  442e80:	xor    ah,BYTE PTR [rdx+0x69]
  442e83:	je     0x442eb2
  442e85:	jae    0x442efa
  442e87:	gs cs js 0x442ef8
  442e8b:	ins    BYTE PTR es:[rdi],dx
  442e8c:	and    ch,BYTE PTR [rdi]
  442e8e:	or     ah,BYTE PTR ds:[rax]
  442e91:	and    BYTE PTR [rax+rdi*2],bh
  442e94:	imul   edi,DWORD PTR [rdx],0x6c636e69
  442e9a:	jne    0x442f00
  442e9c:	and    BYTE PTR gs:[rax+0x72],ch
  442ea0:	gs cmp ax,0x3322
  442ea5:	xor    ah,BYTE PTR [rdx+0x69]
  442ea8:	je     0x442ed7
  442eaa:	(bad)  
  442eab:	jbe    0x442f25
  442ead:	cs js  0x442f1d
  442eb0:	ins    BYTE PTR es:[rdi],dx
  442eb1:	and    ch,BYTE PTR [rdi]
  442eb3:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  442eb7:	je     0x442f1a
  442eb9:	jb     0x442f22
  442ebb:	gs je  0x442efc
  442ebe:	or     al,BYTE PTR [rax]
  442ec0:	cmp    al,0x3f
  442ec2:	js     0x442f31
  442ec4:	ins    BYTE PTR es:[rdi],dx
  442ec5:	and    BYTE PTR [rsi+0x65],dh
  442ec8:	jb     0x442f3d
  442eca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  442ed1:	xor    BYTE PTR [rdx],ah
  442ed3:	(bad)  
  442ed4:	or     bh,BYTE PTR ds:[rcx+riz*1]
  442ed8:	sub    eax,0x6f43202d
  442edd:	jo     0x442f58
  442edf:	jb     0x442f4a
  442ee1:	addr32 push 0x43282074
  442ee7:	sub    DWORD PTR [rax],esp
  442ee9:	xor    dh,BYTE PTR [rax]
  442eeb:	xor    DWORD PTR [rax],esi
  442eed:	sub    eax,0x37313032
  442ef2:	and    BYTE PTR [rsi+0x72],al
  442ef5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  442efa:	data16 je 0x442f74
  442efd:	(bad)  
  442efe:	jb     0x442f65
  442f00:	and    BYTE PTR [rsi+0x6f],al
  442f03:	jne    0x442f73
  442f05:	fs (bad) 
  442f07:	je     0x442f72
  442f09:	outs   dx,DWORD PTR ds:[rsi]
  442f0a:	outs   dx,BYTE PTR ds:[rsi]
  442f0b:	sub    al,0x20
  442f0d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  442f0f:	movsxd ebp,DWORD PTR [rsi]
  442f11:	or     cl,BYTE PTR [rdx]
  442f13:	and    BYTE PTR [rax],ah
  442f15:	and    BYTE PTR [rax],ah
  442f17:	and    BYTE PTR [rbx+0x6f],al
  442f1a:	jo     0x442f95
  442f1c:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  442f23:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  442f27:	je     0x442f9b
  442f29:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  442f30:	and    BYTE PTR [rdi+0x66],ch
  442f33:	and    BYTE PTR [rax+rbp*2+0x69],dh
  442f37:	jae    0x442f59
  442f39:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7720
  442f40:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x7720726f
  442f48:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6d207475
  442f50:	outs   dx,DWORD PTR ds:[rsi]
  442f51:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  442f59:	outs   dx,DWORD PTR ds:[rsi]
  442f5a:	outs   dx,BYTE PTR ds:[rsi]
  442f5b:	sub    al,0xa
  442f5d:	and    BYTE PTR [rax],ah
  442f5f:	and    BYTE PTR [rax],ah
  442f61:	and    BYTE PTR [rcx+0x72],ah
  442f64:	and    BYTE PTR gs:[rax+0x65],dh
  442f68:	jb     0x442fd7
  442f6a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e692064
  442f72:	and    BYTE PTR [rcx+0x6e],ah
  442f75:	jns    0x442f97
  442f77:	ins    DWORD PTR es:[rdi],dx
  442f78:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74697720
  442f81:	push   0x2074756f
  442f86:	jb     0x442ff7
  442f88:	jns    0x442feb
  442f8a:	ins    BYTE PTR es:[rdi],dx
  442f8b:	je     0x443006
  442f8d:	and    BYTE PTR [rax+0x72],dh
  442f90:	outs   dx,DWORD PTR ds:[rsi]
  442f91:	jbe    0x442ffc
  442f93:	fs gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  442f9a:	and    BYTE PTR [rbx+0x6f],ah
  442f9d:	jo     0x443018
  442f9f:	jb     0x44300a
  442fa1:	addr32 push 0x20200a74
  442fa7:	and    BYTE PTR [rax],ah
  442fa9:	and    BYTE PTR [rsi+0x6f],ch
  442fac:	je     0x443017
  442fae:	movsxd esp,DWORD PTR [rbp+0x20]
  442fb1:	(bad)  
  442fb2:	outs   dx,BYTE PTR ds:[rsi]
  442fb3:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  442fb8:	jae    0x442fda
  442fba:	outs   dx,BYTE PTR ds:[rsi]
  442fbb:	outs   dx,DWORD PTR ds:[rsi]
  442fbc:	je     0x443027
  442fbe:	movsxd esp,DWORD PTR [rbp+0x20]
  442fc1:	(bad)  
  442fc2:	jb     0x443029
  442fc4:	and    BYTE PTR [rax+0x72],dh
  442fc7:	gs jae 0x44302f
  442fca:	jb     0x443042
  442fcc:	gs fs and BYTE PTR cs:[rax],ah
  442fd1:	sub    eax,0xa0a3e2d
  442fd6:	cmp    al,0x21
  442fd8:	sub    eax,0x3349202d
  442fdd:	cmp    BYTE PTR [rsi],dh
  442fdf:	and    BYTE PTR [rdi+0x69],dh
  442fe2:	je     0x44304c
  442fe4:	and    BYTE PTR [rbx+0x53],dl
  442fe7:	and    BYTE PTR [rip+0xa0a3e2d],r13b        # 0xa4e6e1b
  442fee:	cmp    al,0x21
  442ff0:	rex.R
  442ff1:	rex.WRXB
  442ff2:	rex.XB push r12
  442ff4:	pop    rcx
  442ff5:	push   rax
  442ff6:	and    BYTE PTR [r9+riz*2+0x72],r14b
  442ffb:	addr32 gs je 0x44301f
  442fff:	push   rbx
  443000:	pop    rcx
  443001:	push   rbx
  443002:	push   rsp
  443003:	rex.RB
  443004:	rex.WRB and BYTE PTR [r10],r12b
  443007:	addr32 fs (bad) 
  44300a:	sub    eax,0x67726174
  44300f:	gs je  0x443040
  443012:	fs je  0x443079
  443015:	and    bh,BYTE PTR [rsi]
  443017:	or     bh,BYTE PTR [rsp+rsi*2]
  44301a:	(bad)  
  44301b:	jb     0x443084
  44301d:	gs je  0x44305e
  443020:	or     ah,BYTE PTR [rax]
  443022:	and    BYTE PTR [rcx+riz*2],bh
  443025:	jb     0x44308a
  443027:	push   0x63657469
  44302c:	je     0x4430a3
  44302e:	jb     0x443095
  443030:	imul   esi,DWORD PTR ds:[rbx],0x2f3c3638
  443037:	(bad)  
  443038:	jb     0x44309d
  44303a:	push   0x63657469
  44303f:	je     0x4430b6
  443041:	jb     0x4430a8
  443043:	or     ah,BYTE PTR ds:[rax]
  443046:	and    BYTE PTR [rax+rdi*2],bh
  443049:	imul   edi,DWORD PTR [rdx],0x6c636e69
  44304f:	jne    0x4430b5
  443051:	and    BYTE PTR gs:[rax+0x72],ch
  443055:	gs cmp ax,0x3322
  44305a:	xor    ah,BYTE PTR [rdx+0x69]
  44305d:	je     0x44308c
  44305f:	movsxd ebp,DWORD PTR [rdi+0x72]
  443062:	gs cs js 0x4430d3
  443066:	ins    BYTE PTR es:[rdi],dx
  443067:	and    ch,BYTE PTR [rdi]
  443069:	or     ah,BYTE PTR ds:[rax]
  44306c:	and    BYTE PTR [rax+rdi*2],bh
  44306f:	imul   edi,DWORD PTR [rdx],0x6c636e69
  443075:	jne    0x4430db
  443077:	and    BYTE PTR gs:[rax+0x72],ch
  44307b:	gs cmp ax,0x3322
  443080:	xor    ah,BYTE PTR [rdx+0x69]
  443083:	je     0x4430b2
  443085:	jae    0x4430fa
  443087:	gs cs js 0x4430f8
  44308b:	ins    BYTE PTR es:[rdi],dx
  44308c:	and    ch,BYTE PTR [rdi]
  44308e:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  443092:	je     0x4430f5
  443094:	jb     0x4430fd
  443096:	gs je  0x4430d7
  443099:	or     al,BYTE PTR [rax]
  44309b:	imul   esi,DWORD PTR [rbx],0x782e3638
  4430a1:	ins    DWORD PTR es:[rdi],dx
  4430a2:	ins    BYTE PTR es:[rdi],dx
  4430a3:	add    BYTE PTR [rcx+0x33],ch
  4430a6:	cmp    BYTE PTR [rsi],dh
  4430a8:	sub    eax,0x2e787661
  4430ad:	js     0x44311c
  4430af:	ins    BYTE PTR es:[rdi],dx
  4430b0:	add    BYTE PTR [rcx+0x33],ch
  4430b3:	cmp    BYTE PTR [rsi],dh
  4430b5:	sub    eax,0x35787661
  4430ba:	xor    DWORD PTR [rdx],esi
  4430bc:	cs js  0x44312c
  4430bf:	ins    BYTE PTR es:[rdi],dx
  4430c0:	add    BYTE PTR [rcx+0x33],ch
  4430c3:	cmp    BYTE PTR [rsi],dh
  4430c5:	sub    eax,0x2e78706d
  4430ca:	js     0x443139
  4430cc:	ins    BYTE PTR es:[rdi],dx
  4430cd:	add    BYTE PTR [rcx+0x33],ch
  4430d0:	cmp    BYTE PTR [rsi],dh
  4430d2:	sub    eax,0x2d787661
  4430d7:	ins    DWORD PTR es:[rdi],dx
  4430d8:	jo     0x443152
  4430da:	cs js  0x44314a
  4430dd:	ins    BYTE PTR es:[rdi],dx
  4430de:	add    BYTE PTR [rcx+0x33],ch
  4430e1:	cmp    BYTE PTR [rsi],dh
  4430e3:	sub    eax,0x2e786d6d
  4430e8:	js     0x443157
  4430ea:	ins    BYTE PTR es:[rdi],dx
  4430eb:	add    BYTE PTR [rbx],dh
  4430ed:	xor    ah,BYTE PTR [rdx+0x69]
  4430f0:	je     0x44311f
  4430f2:	movsxd ebp,DWORD PTR [rdi+0x72]
  4430f5:	gs cs js 0x443166
  4430f9:	ins    BYTE PTR es:[rdi],dx
  4430fa:	add    BYTE PTR [rbx],dh
  4430fc:	xor    ah,BYTE PTR [rdx+0x69]
  4430ff:	je     0x44312e
  443101:	jae    0x443176
  443103:	gs cs js 0x443174
  443107:	ins    BYTE PTR es:[rdi],dx
  443108:	add    BYTE PTR [rbx],dh
  44310a:	xor    ah,BYTE PTR [rdx+0x69]
  44310d:	je     0x44313c
  44310f:	(bad)  
  443110:	jbe    0x44318a
  443112:	cs js  0x443182
  443115:	ins    BYTE PTR es:[rdi],dx
  443116:	add    BYTE PTR [rbx],dh
  443118:	xor    ah,BYTE PTR [rdx+0x69]
  44311b:	je     0x44314a
  44311d:	(bad)  
  44311e:	jbe    0x443198
  443120:	xor    eax,0x782e3231
  443125:	ins    DWORD PTR es:[rdi],dx
  443126:	ins    BYTE PTR es:[rdi],dx
  443127:	add    BYTE PTR [rbx],dh
  443129:	xor    ah,BYTE PTR [rdx+0x69]
  44312c:	je     0x44315b
  44312e:	ins    DWORD PTR es:[rdi],dx
  44312f:	jo     0x4431a9
  443131:	cs js  0x4431a1
  443134:	ins    BYTE PTR es:[rdi],dx
  443135:	add    BYTE PTR [rcx+0x6d],ah
  443138:	fs ss xor al,0x2e
  44313c:	js     0x4431ab
  44313e:	ins    BYTE PTR es:[rdi],dx
  44313f:	add    BYTE PTR [rcx+0x6d],ah
  443142:	fs ss xor al,0x2d
  443146:	(bad)  
  443147:	jbe    0x4431c1
  443149:	cs js  0x4431b9
  44314c:	ins    BYTE PTR es:[rdi],dx
  44314d:	add    BYTE PTR [rcx+0x6d],ah
  443150:	fs ss xor al,0x2d
  443154:	(bad)  
  443155:	jbe    0x4431cf
  443157:	xor    eax,0x782e3231
  44315c:	ins    DWORD PTR es:[rdi],dx
  44315d:	ins    BYTE PTR es:[rdi],dx
  44315e:	add    BYTE PTR [rax+0x33],bh
  443161:	xor    ch,BYTE PTR [rsi]
  443163:	js     0x4431d2
  443165:	ins    BYTE PTR es:[rdi],dx
  443166:	add    BYTE PTR [rax+0x33],bh
  443169:	xor    ch,BYTE PTR [rip+0x2e787661]        # 0x2ebca7d0
  44316f:	js     0x4431de
  443171:	ins    BYTE PTR es:[rdi],dx
  443172:	add    BYTE PTR [rax+0x33],bh
  443175:	xor    ch,BYTE PTR [rip+0x35787661]        # 0x35bca7dc
  44317b:	xor    DWORD PTR [rdx],esi
  44317d:	cs js  0x4431ed
  443180:	ins    BYTE PTR es:[rdi],dx
  443181:	add    BYTE PTR [rcx+0x6d],ah
  443184:	fs ss xor al,0x2d
  443188:	ins    DWORD PTR es:[rdi],dx
  443189:	jo     0x443203
  44318b:	cs js  0x4431fb
  44318e:	ins    BYTE PTR es:[rdi],dx
  44318f:	add    BYTE PTR [rcx+0x6d],ah
  443192:	fs ss xor al,0x2d
  443196:	(bad)  
  443197:	jbe    0x443211
  443199:	sub    eax,0x2e78706d
  44319e:	js     0x44320d
  4431a0:	ins    BYTE PTR es:[rdi],dx
  4431a1:	add    BYTE PTR [rsi],dh
  4431a3:	xor    al,0x62
  4431a5:	imul   esi,DWORD PTR [rbp+rbp*1+0x63],0x2e65726f
  4431ad:	js     0x44321c
  4431af:	ins    BYTE PTR es:[rdi],dx
  4431b0:	add    BYTE PTR [rsi],dh
  4431b2:	xor    al,0x62
  4431b4:	imul   esi,DWORD PTR [rbp+rbp*1+0x73],0x782e6573
  4431bc:	ins    DWORD PTR es:[rdi],dx
  4431bd:	ins    BYTE PTR es:[rdi],dx
  4431be:	add    BYTE PTR [rsi],dh
  4431c0:	xor    al,0x62
  4431c2:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x782e7876
  4431ca:	ins    DWORD PTR es:[rdi],dx
  4431cb:	ins    BYTE PTR es:[rdi],dx
  4431cc:	add    BYTE PTR [rsi],dh
  4431ce:	xor    al,0x62
  4431d0:	imul   esi,DWORD PTR [rbp+rbp*1+0x61],0x31357876
  4431d8:	xor    ch,BYTE PTR [rsi]
  4431da:	js     0x443249
  4431dc:	ins    BYTE PTR es:[rdi],dx
  4431dd:	add    BYTE PTR [rax+0x33],bh
  4431e0:	xor    ch,BYTE PTR [rip+0x65726f63]        # 0x65b6a149
  4431e6:	cs js  0x443256
  4431e9:	ins    BYTE PTR es:[rdi],dx
  4431ea:	add    BYTE PTR [rsi],dh
  4431ec:	xor    al,0x62
  4431ee:	imul   esi,DWORD PTR [rbp+rbp*1+0x6d],0x782e7870
  4431f6:	ins    DWORD PTR es:[rdi],dx
  4431f7:	ins    BYTE PTR es:[rdi],dx
	...
  443200:	fwait
  443201:	xor    BYTE PTR [rax+rax*1+0x0],al
  443205:	add    BYTE PTR [rax],al
  443207:	add    al,al
  443209:	add    BYTE PTR cs:[rax],r8b
  44320d:	add    BYTE PTR [rax],al
  44320f:	add    BYTE PTR [rax+rsi*1+0x44],ah
  443216:	add    BYTE PTR [rax],al
  443218:	shr    BYTE PTR [rsp+rax*2],0x0
  44321c:	add    BYTE PTR [rax],al
  44321e:	add    BYTE PTR [rax],al
  443220:	mov    cl,0x30
  443222:	add    BYTE PTR [rax],r8b
  443225:	add    BYTE PTR [rax],al
  443227:	add    BYTE PTR [rax+0x2a],al
  44322a:	add    BYTE PTR [rax],r8b
  44322d:	add    BYTE PTR [rax],al
  44322f:	add    cl,al
  443231:	xor    BYTE PTR [rax+rax*1+0x0],al
  443235:	add    BYTE PTR [rax],al
  443237:	add    BYTE PTR [rax+0x28],al
  44323a:	add    BYTE PTR [rax],r8b
  44323d:	add    BYTE PTR [rax],al
  44323f:	add    dh,cl
  443241:	xor    BYTE PTR [rax+rax*1+0x0],al
  443245:	add    BYTE PTR [rax],al
  443247:	add    BYTE PTR [rax],al
  443249:	add    BYTE PTR es:[rax],r8b
  44324d:	add    BYTE PTR [rax],al
  44324f:	add    bh,bl
  443251:	xor    BYTE PTR [rax+rax*1+0x0],al
  443255:	add    BYTE PTR [rax],al
  443257:	add    BYTE PTR [rax+0x24],al
  44325a:	add    BYTE PTR [rax],r8b
  44325d:	add    BYTE PTR [rax],al
  44325f:	add    ah,ch
  443261:	xor    BYTE PTR [rax+rax*1+0x0],al
  443265:	add    BYTE PTR [rax],al
  443267:	add    BYTE PTR [rax+0x19],al
  44326a:	add    BYTE PTR [rax],r8b
  44326d:	add    BYTE PTR [rax],al
  44326f:	add    bl,bh
  443271:	xor    BYTE PTR [rax+rax*1+0x0],al
  443275:	add    BYTE PTR [rax],al
  443277:	add    BYTE PTR [rax],al
  443279:	adc    DWORD PTR [rax+rax*1+0x0],eax
  44327d:	add    BYTE PTR [rax],al
  44327f:	add    BYTE PTR [rcx],cl
  443281:	xor    DWORD PTR [rax+rax*1+0x0],eax
  443285:	add    BYTE PTR [rax],al
  443287:	add    al,al
  443289:	or     eax,0x44
  44328e:	add    BYTE PTR [rax],al
  443290:	(bad)  
  443291:	xor    DWORD PTR [rax+rax*1+0x0],eax
  443295:	add    BYTE PTR [rax],al
  443297:	add    BYTE PTR [rax],al
  443299:	or     DWORD PTR [rax+rax*1+0x0],eax
  44329d:	add    BYTE PTR [rax],al
  44329f:	add    BYTE PTR [rax],ch
  4432a1:	xor    DWORD PTR [rax+rax*1+0x0],eax
  4432a5:	add    BYTE PTR [rax],al
  4432a7:	add    al,al
  4432a9:	add    al,BYTE PTR [rax+rax*1+0x0]
  4432ad:	add    BYTE PTR [rax],al
  4432af:	add    BYTE PTR [rsi],dh
  4432b1:	xor    DWORD PTR [rax+rax*1+0x0],eax
  4432b5:	add    BYTE PTR [rax],al
  4432b7:	add    al,al
  4432b9:	add    BYTE PTR [rax+rax*1+0x0],al
  4432bd:	add    BYTE PTR [rax],al
  4432bf:	add    BYTE PTR [rax+0x31],al
  4432c2:	add    BYTE PTR [rax],r8b
  4432c5:	add    BYTE PTR [rax],al
  4432c7:	add    BYTE PTR [rax+0x43fe],al
  4432cd:	add    BYTE PTR [rax],al
  4432cf:	add    BYTE PTR [rsi+0x31],cl
  4432d2:	add    BYTE PTR [rax],r8b
  4432d5:	add    BYTE PTR [rax],al
  4432d7:	add    BYTE PTR [rax],al
  4432d9:	cld    
  4432da:	rex.XB add BYTE PTR [r8],al
  4432dd:	add    BYTE PTR [rax],al
  4432df:	add    BYTE PTR [rdi+0x31],bl
  4432e2:	add    BYTE PTR [rax],r8b
  4432e5:	add    BYTE PTR [rax],al
  4432e7:	add    BYTE PTR [rax],al
  4432e9:	cli    
  4432ea:	rex.XB add BYTE PTR [r8],al
  4432ed:	add    BYTE PTR [rax],al
  4432ef:	add    BYTE PTR [rdi+0x31],ah
  4432f2:	add    BYTE PTR [rax],r8b
  4432f5:	add    BYTE PTR [rax],al
  4432f7:	add    al,al
  4432f9:	test   DWORD PTR [rbx+0x0],0x0
  443300:	jae    0x443333
  443302:	add    BYTE PTR [rax],r8b
  443305:	add    BYTE PTR [rax],al
  443307:	add    BYTE PTR [rax-0xb],al
  44330a:	rex.XB add BYTE PTR [r8],al
  44330d:	add    BYTE PTR [rax],al
  44330f:	add    BYTE PTR [rdx+0x4431],al
  443315:	add    BYTE PTR [rax],al
  443317:	add    BYTE PTR [rax],al
  443319:	repz rex.XB add BYTE PTR [r8],al
  44331d:	add    BYTE PTR [rax],al
  44331f:	add    BYTE PTR [rax+0x4431],dl
  443325:	add    BYTE PTR [rax],al
  443327:	add    al,al
  443329:	lock rex.XB add BYTE PTR [r8],al
  44332d:	add    BYTE PTR [rax],al
  44332f:	add    BYTE PTR [rdx+0x4431],ah
  443335:	add    BYTE PTR [rax],al
  443337:	add    BYTE PTR [rax+0x43e4],al
  44333d:	add    BYTE PTR [rax],al
  44333f:	add    BYTE PTR [rcx+0x4431],dh
  443345:	add    BYTE PTR [rax],al
  443347:	add    al,al
  443349:	fiadd  DWORD PTR [rbx+0x0]
  44334c:	add    BYTE PTR [rax],al
  44334e:	add    BYTE PTR [rax],al
  443350:	mov    edi,0x4431
  443355:	add    BYTE PTR [rax],al
  443357:	add    BYTE PTR [rax],al
  443359:	(bad)  
  44335a:	rex.XB add BYTE PTR [r8],al
  44335d:	add    BYTE PTR [rax],al
  44335f:	add    ch,cl
  443361:	xor    DWORD PTR [rax+rax*1+0x0],eax
  443365:	add    BYTE PTR [rax],al
  443367:	add    BYTE PTR [rax+0x43c3],al
  44336d:	add    BYTE PTR [rax],al
  44336f:	add    dh,bl
  443371:	xor    DWORD PTR [rax+rax*1+0x0],eax
  443375:	add    BYTE PTR [rax],al
  443377:	add    BYTE PTR [rax-0x49],al
  44337a:	rex.XB add BYTE PTR [r8],al
  44337d:	add    BYTE PTR [rax],al
  44337f:	add    bl,ch
  443381:	xor    DWORD PTR [rax+rax*1+0x0],eax
  443385:	add    BYTE PTR [rax],al
  443387:	add    BYTE PTR [rax-0x4f],al
  44338a:	rex.XB add BYTE PTR [r8],al
	...
  4433bd:	add    BYTE PTR [rax],al
  4433bf:	add    BYTE PTR [rcx+0x6d],ah
  4433c2:	fs ss xor al,0x2e
  4433c6:	js     0x443435
  4433c8:	ins    BYTE PTR es:[rdi],dx
  4433c9:	add    BYTE PTR [rdx+0x62],dh
  4433cc:	jo     0x4433ce
  4433ce:	jb     0x443443
  4433d0:	jo     0x4433d2
  4433d2:	jb     0x44343d
  4433d4:	jo     0x4433d6
  4433d6:	jb     0x443439
  4433d8:	js     0x4433da
  4433da:	jb     0x44343e
  4433dc:	js     0x4433de
  4433de:	jb     0x443443
  4433e0:	js     0x4433e2
  4433e2:	jb     0x443448
  4433e4:	js     0x4433e6
  4433e6:	jb     0x44345b
  4433e8:	imul   eax,DWORD PTR [rax],0x696472
  4433ee:	jb     0x443428
  4433f0:	add    BYTE PTR [rdx+0x39],dh
  4433f3:	add    BYTE PTR [rdx+0x31],dh
  4433f6:	xor    BYTE PTR [rax],al
  4433f8:	jb     0x44342b
  4433fa:	xor    DWORD PTR [rax],eax
  4433fc:	jb     0x44342f
  4433fe:	xor    al,BYTE PTR [rax]
  443400:	jb     0x443433
  443402:	xor    eax,DWORD PTR [rax]
  443404:	jb     0x443437
  443406:	xor    al,0x0
  443408:	jb     0x44343b
  44340a:	xor    eax,0x6c666500
  44340f:	(bad)  
  443410:	addr32 jae 0x443413
  443413:	movsxd esi,DWORD PTR [rbx+0x0]
  443416:	jae    0x44348b
  443418:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  44341c:	gs jae 0x44341f
  44341f:	data16 jae 0x443422
  443422:	addr32 jae 0x443425
  443425:	jae    0x44349b
  443427:	xor    BYTE PTR [rax],al
  443429:	jae    0x44349f
  44342b:	xor    DWORD PTR [rax],eax
  44342d:	jae    0x4434a3
  44342f:	xor    al,BYTE PTR [rax]
  443431:	jae    0x4434a7
  443433:	xor    eax,DWORD PTR [rax]
  443435:	jae    0x4434ab
  443437:	xor    al,0x0
  443439:	jae    0x4434af
  44343b:	xor    eax,0x36747300
  443440:	add    BYTE PTR [rbx+0x74],dh
  443443:	(bad)  
  443444:	add    BYTE PTR [rsi+0x63],ah
  443447:	je     0x4434bb
  443449:	ins    BYTE PTR es:[rdi],dx
  44344a:	add    BYTE PTR [rsi+0x73],ah
  44344d:	je     0x4434b0
  44344f:	je     0x443451
  443451:	data16 je 0x4434b5
  443454:	add    BYTE PTR [esi+0x69],ah
  443458:	jae    0x4434bf
  44345a:	add    BYTE PTR [esi+0x69],ah
  44345e:	outs   dx,DWORD PTR ds:[rsi]
  44345f:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443464:	jae    0x4434cb
  443466:	add    BYTE PTR [esi+0x6f],ah
  44346a:	outs   dx,DWORD PTR ds:[rsi]
  44346b:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443470:	jo     0x443472
  443472:	js     0x4434e1
  443474:	ins    DWORD PTR es:[rdi],dx
  443475:	xor    BYTE PTR [rax],al
  443477:	js     0x4434e6
  443479:	ins    DWORD PTR es:[rdi],dx
  44347a:	xor    DWORD PTR [rax],eax
  44347c:	js     0x4434eb
  44347e:	ins    DWORD PTR es:[rdi],dx
  44347f:	xor    al,BYTE PTR [rax]
  443481:	js     0x4434f0
  443483:	ins    DWORD PTR es:[rdi],dx
  443484:	xor    eax,DWORD PTR [rax]
  443486:	js     0x4434f5
  443488:	ins    DWORD PTR es:[rdi],dx
  443489:	xor    al,0x0
  44348b:	js     0x4434fa
  44348d:	ins    DWORD PTR es:[rdi],dx
  44348e:	xor    eax,0x6d6d7800
  443493:	add    BYTE PTR ss:[rax+0x6d],bh
  443497:	ins    DWORD PTR es:[rdi],dx
  443498:	(bad)  
  443499:	add    BYTE PTR [rax+0x6d],bh
  44349c:	ins    DWORD PTR es:[rdi],dx
  44349d:	cmp    BYTE PTR [rax],al
  44349f:	js     0x44350e
  4434a1:	ins    DWORD PTR es:[rdi],dx
  4434a2:	cmp    DWORD PTR [rax],eax
  4434a4:	js     0x443513
  4434a6:	ins    DWORD PTR es:[rdi],dx
  4434a7:	xor    DWORD PTR [rax],esi
  4434a9:	add    BYTE PTR [rax+0x6d],bh
  4434ac:	ins    DWORD PTR es:[rdi],dx
  4434ad:	xor    DWORD PTR [rcx],esi
  4434af:	add    BYTE PTR [rax+0x6d],bh
  4434b2:	ins    DWORD PTR es:[rdi],dx
  4434b3:	xor    DWORD PTR [rdx],esi
  4434b5:	add    BYTE PTR [rax+0x6d],bh
  4434b8:	ins    DWORD PTR es:[rdi],dx
  4434b9:	xor    DWORD PTR [rbx],esi
  4434bb:	add    BYTE PTR [rax+0x6d],bh
  4434be:	ins    DWORD PTR es:[rdi],dx
  4434bf:	xor    DWORD PTR [rax+rax*1],esi
  4434c2:	js     0x443531
  4434c4:	ins    DWORD PTR es:[rdi],dx
  4434c5:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bca1cb
  4434cb:	jae    0x44353f
  4434cd:	add    BYTE PTR [rax],al
  4434cf:	add    BYTE PTR [rcx+0x6d],ah
  4434d2:	fs ss xor al,0x2d
  4434d6:	(bad)  
  4434d7:	jbe    0x443551
  4434d9:	cs js  0x443549
  4434dc:	ins    BYTE PTR es:[rdi],dx
  4434dd:	add    BYTE PTR [rdx+0x62],dh
  4434e0:	jo     0x4434e2
  4434e2:	jb     0x443557
  4434e4:	jo     0x4434e6
  4434e6:	jb     0x443551
  4434e8:	jo     0x4434ea
  4434ea:	jb     0x44354d
  4434ec:	js     0x4434ee
  4434ee:	jb     0x443552
  4434f0:	js     0x4434f2
  4434f2:	jb     0x443557
  4434f4:	js     0x4434f6
  4434f6:	jb     0x44355c
  4434f8:	js     0x4434fa
  4434fa:	jb     0x44356f
  4434fc:	imul   eax,DWORD PTR [rax],0x696472
  443502:	jb     0x44353c
  443504:	add    BYTE PTR [rdx+0x39],dh
  443507:	add    BYTE PTR [rdx+0x31],dh
  44350a:	xor    BYTE PTR [rax],al
  44350c:	jb     0x44353f
  44350e:	xor    DWORD PTR [rax],eax
  443510:	jb     0x443543
  443512:	xor    al,BYTE PTR [rax]
  443514:	jb     0x443547
  443516:	xor    eax,DWORD PTR [rax]
  443518:	jb     0x44354b
  44351a:	xor    al,0x0
  44351c:	jb     0x44354f
  44351e:	xor    eax,0x6c666500
  443523:	(bad)  
  443524:	addr32 jae 0x443527
  443527:	movsxd esi,DWORD PTR [rbx+0x0]
  44352a:	jae    0x44359f
  44352c:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443530:	gs jae 0x443533
  443533:	data16 jae 0x443536
  443536:	addr32 jae 0x443539
  443539:	jae    0x4435af
  44353b:	xor    BYTE PTR [rax],al
  44353d:	jae    0x4435b3
  44353f:	xor    DWORD PTR [rax],eax
  443541:	jae    0x4435b7
  443543:	xor    al,BYTE PTR [rax]
  443545:	jae    0x4435bb
  443547:	xor    eax,DWORD PTR [rax]
  443549:	jae    0x4435bf
  44354b:	xor    al,0x0
  44354d:	jae    0x4435c3
  44354f:	xor    eax,0x36747300
  443554:	add    BYTE PTR [rbx+0x74],dh
  443557:	(bad)  
  443558:	add    BYTE PTR [rsi+0x63],ah
  44355b:	je     0x4435cf
  44355d:	ins    BYTE PTR es:[rdi],dx
  44355e:	add    BYTE PTR [rsi+0x73],ah
  443561:	je     0x4435c4
  443563:	je     0x443565
  443565:	data16 je 0x4435c9
  443568:	add    BYTE PTR [esi+0x69],ah
  44356c:	jae    0x4435d3
  44356e:	add    BYTE PTR [esi+0x69],ah
  443572:	outs   dx,DWORD PTR ds:[rsi]
  443573:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443578:	jae    0x4435df
  44357a:	add    BYTE PTR [esi+0x6f],ah
  44357e:	outs   dx,DWORD PTR ds:[rsi]
  44357f:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443584:	jo     0x443586
  443586:	js     0x4435f5
  443588:	ins    DWORD PTR es:[rdi],dx
  443589:	xor    BYTE PTR [rax],al
  44358b:	js     0x4435fa
  44358d:	ins    DWORD PTR es:[rdi],dx
  44358e:	xor    DWORD PTR [rax],eax
  443590:	js     0x4435ff
  443592:	ins    DWORD PTR es:[rdi],dx
  443593:	xor    al,BYTE PTR [rax]
  443595:	js     0x443604
  443597:	ins    DWORD PTR es:[rdi],dx
  443598:	xor    eax,DWORD PTR [rax]
  44359a:	js     0x443609
  44359c:	ins    DWORD PTR es:[rdi],dx
  44359d:	xor    al,0x0
  44359f:	js     0x44360e
  4435a1:	ins    DWORD PTR es:[rdi],dx
  4435a2:	xor    eax,0x6d6d7800
  4435a7:	add    BYTE PTR ss:[rax+0x6d],bh
  4435ab:	ins    DWORD PTR es:[rdi],dx
  4435ac:	(bad)  
  4435ad:	add    BYTE PTR [rax+0x6d],bh
  4435b0:	ins    DWORD PTR es:[rdi],dx
  4435b1:	cmp    BYTE PTR [rax],al
  4435b3:	js     0x443622
  4435b5:	ins    DWORD PTR es:[rdi],dx
  4435b6:	cmp    DWORD PTR [rax],eax
  4435b8:	js     0x443627
  4435ba:	ins    DWORD PTR es:[rdi],dx
  4435bb:	xor    DWORD PTR [rax],esi
  4435bd:	add    BYTE PTR [rax+0x6d],bh
  4435c0:	ins    DWORD PTR es:[rdi],dx
  4435c1:	xor    DWORD PTR [rcx],esi
  4435c3:	add    BYTE PTR [rax+0x6d],bh
  4435c6:	ins    DWORD PTR es:[rdi],dx
  4435c7:	xor    DWORD PTR [rdx],esi
  4435c9:	add    BYTE PTR [rax+0x6d],bh
  4435cc:	ins    DWORD PTR es:[rdi],dx
  4435cd:	xor    DWORD PTR [rbx],esi
  4435cf:	add    BYTE PTR [rax+0x6d],bh
  4435d2:	ins    DWORD PTR es:[rdi],dx
  4435d3:	xor    DWORD PTR [rax+rax*1],esi
  4435d6:	js     0x443645
  4435d8:	ins    DWORD PTR es:[rdi],dx
  4435d9:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bca2df
  4435df:	jae    0x443653
  4435e1:	add    BYTE PTR [rcx+0x6d],bh
  4435e4:	ins    DWORD PTR es:[rdi],dx
  4435e5:	xor    BYTE PTR [rax+0x0],ch
  4435e8:	jns    0x443657
  4435ea:	ins    DWORD PTR es:[rdi],dx
  4435eb:	xor    DWORD PTR [rax+0x0],ebp
  4435ee:	jns    0x44365d
  4435f0:	ins    DWORD PTR es:[rdi],dx
  4435f1:	xor    ch,BYTE PTR [rax+0x0]
  4435f4:	jns    0x443663
  4435f6:	ins    DWORD PTR es:[rdi],dx
  4435f7:	xor    ebp,DWORD PTR [rax+0x0]
  4435fa:	jns    0x443669
  4435fc:	ins    DWORD PTR es:[rdi],dx
  4435fd:	xor    al,0x68
  4435ff:	add    BYTE PTR [rcx+0x6d],bh
  443602:	ins    DWORD PTR es:[rdi],dx
  443603:	xor    eax,0x6d790068
  443608:	ins    DWORD PTR es:[rdi],dx
  443609:	ss push 0x6d6d7900
  44360f:	(bad)  
  443610:	push   0x6d6d7900
  443615:	cmp    BYTE PTR [rax+0x0],ch
  443618:	jns    0x443687
  44361a:	ins    DWORD PTR es:[rdi],dx
  44361b:	cmp    DWORD PTR [rax+0x0],ebp
  44361e:	jns    0x44368d
  443620:	ins    DWORD PTR es:[rdi],dx
  443621:	xor    DWORD PTR [rax],esi
  443623:	push   0x6d6d7900
  443628:	xor    DWORD PTR [rcx],esi
  44362a:	push   0x6d6d7900
  44362f:	xor    DWORD PTR [rdx],esi
  443631:	push   0x6d6d7900
  443636:	xor    DWORD PTR [rbx],esi
  443638:	push   0x6d6d7900
  44363d:	xor    DWORD PTR [rax+rbp*2],esi
  443640:	add    BYTE PTR [rcx+0x6d],bh
  443643:	ins    DWORD PTR es:[rdi],dx
  443644:	xor    DWORD PTR [rip+0x68],esi        # 0x4436b2
  44364a:	add    BYTE PTR [rax],al
  44364c:	add    BYTE PTR [rax],al
  44364e:	add    BYTE PTR [rax],al
  443650:	(bad)  
  443651:	ins    DWORD PTR es:[rdi],dx
  443652:	fs ss xor al,0x2d
  443656:	(bad)  
  443657:	jbe    0x4436d1
  443659:	xor    eax,0x782e3231
  44365e:	ins    DWORD PTR es:[rdi],dx
  44365f:	ins    BYTE PTR es:[rdi],dx
  443660:	add    BYTE PTR [rdx+0x62],dh
  443663:	jo     0x443665
  443665:	jb     0x4436da
  443667:	jo     0x443669
  443669:	jb     0x4436d4
  44366b:	jo     0x44366d
  44366d:	jb     0x4436d0
  44366f:	js     0x443671
  443671:	jb     0x4436d5
  443673:	js     0x443675
  443675:	jb     0x4436da
  443677:	js     0x443679
  443679:	jb     0x4436df
  44367b:	js     0x44367d
  44367d:	jb     0x4436f2
  44367f:	imul   eax,DWORD PTR [rax],0x696472
  443685:	jb     0x4436bf
  443687:	add    BYTE PTR [rdx+0x39],dh
  44368a:	add    BYTE PTR [rdx+0x31],dh
  44368d:	xor    BYTE PTR [rax],al
  44368f:	jb     0x4436c2
  443691:	xor    DWORD PTR [rax],eax
  443693:	jb     0x4436c6
  443695:	xor    al,BYTE PTR [rax]
  443697:	jb     0x4436ca
  443699:	xor    eax,DWORD PTR [rax]
  44369b:	jb     0x4436ce
  44369d:	xor    al,0x0
  44369f:	jb     0x4436d2
  4436a1:	xor    eax,0x6c666500
  4436a6:	(bad)  
  4436a7:	addr32 jae 0x4436aa
  4436aa:	movsxd esi,DWORD PTR [rbx+0x0]
  4436ad:	jae    0x443722
  4436af:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  4436b3:	gs jae 0x4436b6
  4436b6:	data16 jae 0x4436b9
  4436b9:	addr32 jae 0x4436bc
  4436bc:	jae    0x443732
  4436be:	xor    BYTE PTR [rax],al
  4436c0:	jae    0x443736
  4436c2:	xor    DWORD PTR [rax],eax
  4436c4:	jae    0x44373a
  4436c6:	xor    al,BYTE PTR [rax]
  4436c8:	jae    0x44373e
  4436ca:	xor    eax,DWORD PTR [rax]
  4436cc:	jae    0x443742
  4436ce:	xor    al,0x0
  4436d0:	jae    0x443746
  4436d2:	xor    eax,0x36747300
  4436d7:	add    BYTE PTR [rbx+0x74],dh
  4436da:	(bad)  
  4436db:	add    BYTE PTR [rsi+0x63],ah
  4436de:	je     0x443752
  4436e0:	ins    BYTE PTR es:[rdi],dx
  4436e1:	add    BYTE PTR [rsi+0x73],ah
  4436e4:	je     0x443747
  4436e6:	je     0x4436e8
  4436e8:	data16 je 0x44374c
  4436eb:	add    BYTE PTR [esi+0x69],ah
  4436ef:	jae    0x443756
  4436f1:	add    BYTE PTR [esi+0x69],ah
  4436f5:	outs   dx,DWORD PTR ds:[rsi]
  4436f6:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  4436fb:	jae    0x443762
  4436fd:	add    BYTE PTR [esi+0x6f],ah
  443701:	outs   dx,DWORD PTR ds:[rsi]
  443702:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443707:	jo     0x443709
  443709:	js     0x443778
  44370b:	ins    DWORD PTR es:[rdi],dx
  44370c:	xor    BYTE PTR [rax],al
  44370e:	js     0x44377d
  443710:	ins    DWORD PTR es:[rdi],dx
  443711:	xor    DWORD PTR [rax],eax
  443713:	js     0x443782
  443715:	ins    DWORD PTR es:[rdi],dx
  443716:	xor    al,BYTE PTR [rax]
  443718:	js     0x443787
  44371a:	ins    DWORD PTR es:[rdi],dx
  44371b:	xor    eax,DWORD PTR [rax]
  44371d:	js     0x44378c
  44371f:	ins    DWORD PTR es:[rdi],dx
  443720:	xor    al,0x0
  443722:	js     0x443791
  443724:	ins    DWORD PTR es:[rdi],dx
  443725:	xor    eax,0x6d6d7800
  44372a:	add    BYTE PTR ss:[rax+0x6d],bh
  44372e:	ins    DWORD PTR es:[rdi],dx
  44372f:	(bad)  
  443730:	add    BYTE PTR [rax+0x6d],bh
  443733:	ins    DWORD PTR es:[rdi],dx
  443734:	cmp    BYTE PTR [rax],al
  443736:	js     0x4437a5
  443738:	ins    DWORD PTR es:[rdi],dx
  443739:	cmp    DWORD PTR [rax],eax
  44373b:	js     0x4437aa
  44373d:	ins    DWORD PTR es:[rdi],dx
  44373e:	xor    DWORD PTR [rax],esi
  443740:	add    BYTE PTR [rax+0x6d],bh
  443743:	ins    DWORD PTR es:[rdi],dx
  443744:	xor    DWORD PTR [rcx],esi
  443746:	add    BYTE PTR [rax+0x6d],bh
  443749:	ins    DWORD PTR es:[rdi],dx
  44374a:	xor    DWORD PTR [rdx],esi
  44374c:	add    BYTE PTR [rax+0x6d],bh
  44374f:	ins    DWORD PTR es:[rdi],dx
  443750:	xor    DWORD PTR [rbx],esi
  443752:	add    BYTE PTR [rax+0x6d],bh
  443755:	ins    DWORD PTR es:[rdi],dx
  443756:	xor    DWORD PTR [rax+rax*1],esi
  443759:	js     0x4437c8
  44375b:	ins    DWORD PTR es:[rdi],dx
  44375c:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bca462
  443762:	jae    0x4437d6
  443764:	add    BYTE PTR [rcx+0x6d],bh
  443767:	ins    DWORD PTR es:[rdi],dx
  443768:	xor    BYTE PTR [rax+0x0],ch
  44376b:	jns    0x4437da
  44376d:	ins    DWORD PTR es:[rdi],dx
  44376e:	xor    DWORD PTR [rax+0x0],ebp
  443771:	jns    0x4437e0
  443773:	ins    DWORD PTR es:[rdi],dx
  443774:	xor    ch,BYTE PTR [rax+0x0]
  443777:	jns    0x4437e6
  443779:	ins    DWORD PTR es:[rdi],dx
  44377a:	xor    ebp,DWORD PTR [rax+0x0]
  44377d:	jns    0x4437ec
  44377f:	ins    DWORD PTR es:[rdi],dx
  443780:	xor    al,0x68
  443782:	add    BYTE PTR [rcx+0x6d],bh
  443785:	ins    DWORD PTR es:[rdi],dx
  443786:	xor    eax,0x6d790068
  44378b:	ins    DWORD PTR es:[rdi],dx
  44378c:	ss push 0x6d6d7900
  443792:	(bad)  
  443793:	push   0x6d6d7900
  443798:	cmp    BYTE PTR [rax+0x0],ch
  44379b:	jns    0x44380a
  44379d:	ins    DWORD PTR es:[rdi],dx
  44379e:	cmp    DWORD PTR [rax+0x0],ebp
  4437a1:	jns    0x443810
  4437a3:	ins    DWORD PTR es:[rdi],dx
  4437a4:	xor    DWORD PTR [rax],esi
  4437a6:	push   0x6d6d7900
  4437ab:	xor    DWORD PTR [rcx],esi
  4437ad:	push   0x6d6d7900
  4437b2:	xor    DWORD PTR [rdx],esi
  4437b4:	push   0x6d6d7900
  4437b9:	xor    DWORD PTR [rbx],esi
  4437bb:	push   0x6d6d7900
  4437c0:	xor    DWORD PTR [rax+rbp*2],esi
  4437c3:	add    BYTE PTR [rcx+0x6d],bh
  4437c6:	ins    DWORD PTR es:[rdi],dx
  4437c7:	xor    DWORD PTR [rip+0x6e620068],esi        # 0x6ea63835
  4437cd:	xor    BYTE PTR fs:[rdx+0x61],dh
  4437d1:	ja     0x4437d3
  4437d3:	(bad)  
  4437d4:	outs   dx,BYTE PTR ds:[rsi]
  4437d5:	xor    DWORD PTR fs:[rdx+0x61],esi
  4437d9:	ja     0x4437db
  4437db:	(bad)  
  4437dc:	outs   dx,BYTE PTR ds:[rsi]
  4437dd:	xor    dh,BYTE PTR fs:[rdx+0x61]
  4437e1:	ja     0x4437e3
  4437e3:	(bad)  
  4437e4:	outs   dx,BYTE PTR ds:[rsi]
  4437e5:	xor    esi,DWORD PTR fs:[rdx+0x61]
  4437e9:	ja     0x4437eb
  4437eb:	(bad)  
  4437ec:	outs   dx,BYTE PTR ds:[rsi]
  4437ed:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  4437f1:	jne    0x4437f3
  4437f3:	(bad)  
  4437f4:	outs   dx,BYTE PTR ds:[rsi]
  4437f5:	fs jae 0x44386c
  4437f8:	(bad)  
  4437f9:	je     0x443870
  4437fb:	jae    0x4437fd
  4437fd:	js     0x44386c
  4437ff:	ins    DWORD PTR es:[rdi],dx
  443800:	xor    DWORD PTR [rsi],esi
  443802:	add    BYTE PTR [rax+0x6d],bh
  443805:	ins    DWORD PTR es:[rdi],dx
  443806:	xor    DWORD PTR [rdi],esi
  443808:	add    BYTE PTR [rax+0x6d],bh
  44380b:	ins    DWORD PTR es:[rdi],dx
  44380c:	xor    DWORD PTR [rax],edi
  44380e:	add    BYTE PTR [rax+0x6d],bh
  443811:	ins    DWORD PTR es:[rdi],dx
  443812:	xor    DWORD PTR [rcx],edi
  443814:	add    BYTE PTR [rax+0x6d],bh
  443817:	ins    DWORD PTR es:[rdi],dx
  443818:	xor    dh,BYTE PTR [rax]
  44381a:	add    BYTE PTR [rax+0x6d],bh
  44381d:	ins    DWORD PTR es:[rdi],dx
  44381e:	xor    dh,BYTE PTR [rcx]
  443820:	add    BYTE PTR [rax+0x6d],bh
  443823:	ins    DWORD PTR es:[rdi],dx
  443824:	xor    dh,BYTE PTR [rdx]
  443826:	add    BYTE PTR [rax+0x6d],bh
  443829:	ins    DWORD PTR es:[rdi],dx
  44382a:	xor    dh,BYTE PTR [rbx]
  44382c:	add    BYTE PTR [rax+0x6d],bh
  44382f:	ins    DWORD PTR es:[rdi],dx
  443830:	xor    dh,BYTE PTR [rax+rax*1]
  443833:	js     0x4438a2
  443835:	ins    DWORD PTR es:[rdi],dx
  443836:	xor    dh,BYTE PTR [rip+0x6d6d7800]        # 0x6db1b03c
  44383c:	xor    dh,BYTE PTR [rsi]
  44383e:	add    BYTE PTR [rax+0x6d],bh
  443841:	ins    DWORD PTR es:[rdi],dx
  443842:	xor    dh,BYTE PTR [rdi]
  443844:	add    BYTE PTR [rax+0x6d],bh
  443847:	ins    DWORD PTR es:[rdi],dx
  443848:	xor    bh,BYTE PTR [rax]
  44384a:	add    BYTE PTR [rax+0x6d],bh
  44384d:	ins    DWORD PTR es:[rdi],dx
  44384e:	xor    bh,BYTE PTR [rcx]
  443850:	add    BYTE PTR [rax+0x6d],bh
  443853:	ins    DWORD PTR es:[rdi],dx
  443854:	xor    esi,DWORD PTR [rax]
  443856:	add    BYTE PTR [rax+0x6d],bh
  443859:	ins    DWORD PTR es:[rdi],dx
  44385a:	xor    esi,DWORD PTR [rcx]
  44385c:	add    BYTE PTR [rcx+0x6d],bh
  44385f:	ins    DWORD PTR es:[rdi],dx
  443860:	xor    DWORD PTR [rsi],esi
  443862:	push   0x6d6d7900
  443867:	xor    DWORD PTR [rdi],esi
  443869:	push   0x6d6d7900
  44386e:	xor    DWORD PTR [rax],edi
  443870:	push   0x6d6d7900
  443875:	xor    DWORD PTR [rcx],edi
  443877:	push   0x6d6d7900
  44387c:	xor    dh,BYTE PTR [rax]
  44387e:	push   0x6d6d7900
  443883:	xor    dh,BYTE PTR [rcx]
  443885:	push   0x6d6d7900
  44388a:	xor    dh,BYTE PTR [rdx]
  44388c:	push   0x6d6d7900
  443891:	xor    dh,BYTE PTR [rbx]
  443893:	push   0x6d6d7900
  443898:	xor    dh,BYTE PTR [rax+rbp*2]
  44389b:	add    BYTE PTR [rcx+0x6d],bh
  44389e:	ins    DWORD PTR es:[rdi],dx
  44389f:	xor    dh,BYTE PTR [rip+0x6d790068]        # 0x6dbd390d
  4438a5:	ins    DWORD PTR es:[rdi],dx
  4438a6:	xor    dh,BYTE PTR [rsi]
  4438a8:	push   0x6d6d7900
  4438ad:	xor    dh,BYTE PTR [rdi]
  4438af:	push   0x6d6d7900
  4438b4:	xor    bh,BYTE PTR [rax]
  4438b6:	push   0x6d6d7900
  4438bb:	xor    bh,BYTE PTR [rcx]
  4438bd:	push   0x6d6d7900
  4438c2:	xor    esi,DWORD PTR [rax]
  4438c4:	push   0x6d6d7900
  4438c9:	xor    esi,DWORD PTR [rcx]
  4438cb:	push   0x306b00
  4438d0:	imul   esi,DWORD PTR [rcx],0x0
  4438d3:	imul   esi,DWORD PTR [rdx],0x0
  4438d6:	imul   esi,DWORD PTR [rbx],0x0
  4438d9:	imul   esi,DWORD PTR [rax+rax*1],0x6b
  4438dd:	xor    eax,0x366b00
  4438e2:	imul   esi,DWORD PTR [rdi],0x0
  4438e5:	jp     0x443954
  4438e7:	ins    DWORD PTR es:[rdi],dx
  4438e8:	xor    BYTE PTR [rax+0x0],ch
  4438eb:	jp     0x44395a
  4438ed:	ins    DWORD PTR es:[rdi],dx
  4438ee:	xor    DWORD PTR [rax+0x0],ebp
  4438f1:	jp     0x443960
  4438f3:	ins    DWORD PTR es:[rdi],dx
  4438f4:	xor    ch,BYTE PTR [rax+0x0]
  4438f7:	jp     0x443966
  4438f9:	ins    DWORD PTR es:[rdi],dx
  4438fa:	xor    ebp,DWORD PTR [rax+0x0]
  4438fd:	jp     0x44396c
  4438ff:	ins    DWORD PTR es:[rdi],dx
  443900:	xor    al,0x68
  443902:	add    BYTE PTR [rdx+0x6d],bh
  443905:	ins    DWORD PTR es:[rdi],dx
  443906:	xor    eax,0x6d7a0068
  44390b:	ins    DWORD PTR es:[rdi],dx
  44390c:	ss push 0x6d6d7a00
  443912:	(bad)  
  443913:	push   0x6d6d7a00
  443918:	cmp    BYTE PTR [rax+0x0],ch
  44391b:	jp     0x44398a
  44391d:	ins    DWORD PTR es:[rdi],dx
  44391e:	cmp    DWORD PTR [rax+0x0],ebp
  443921:	jp     0x443990
  443923:	ins    DWORD PTR es:[rdi],dx
  443924:	xor    DWORD PTR [rax],esi
  443926:	push   0x6d6d7a00
  44392b:	xor    DWORD PTR [rcx],esi
  44392d:	push   0x6d6d7a00
  443932:	xor    DWORD PTR [rdx],esi
  443934:	push   0x6d6d7a00
  443939:	xor    DWORD PTR [rbx],esi
  44393b:	push   0x6d6d7a00
  443940:	xor    DWORD PTR [rax+rbp*2],esi
  443943:	add    BYTE PTR [rdx+0x6d],bh
  443946:	ins    DWORD PTR es:[rdi],dx
  443947:	xor    DWORD PTR [rip+0x6d7a0068],esi        # 0x6dbe39b5
  44394d:	ins    DWORD PTR es:[rdi],dx
  44394e:	xor    DWORD PTR [rsi],esi
  443950:	push   0x6d6d7a00
  443955:	xor    DWORD PTR [rdi],esi
  443957:	push   0x6d6d7a00
  44395c:	xor    DWORD PTR [rax],edi
  44395e:	push   0x6d6d7a00
  443963:	xor    DWORD PTR [rcx],edi
  443965:	push   0x6d6d7a00
  44396a:	xor    dh,BYTE PTR [rax]
  44396c:	push   0x6d6d7a00
  443971:	xor    dh,BYTE PTR [rcx]
  443973:	push   0x6d6d7a00
  443978:	xor    dh,BYTE PTR [rdx]
  44397a:	push   0x6d6d7a00
  44397f:	xor    dh,BYTE PTR [rbx]
  443981:	push   0x6d6d7a00
  443986:	xor    dh,BYTE PTR [rax+rbp*2]
  443989:	add    BYTE PTR [rdx+0x6d],bh
  44398c:	ins    DWORD PTR es:[rdi],dx
  44398d:	xor    dh,BYTE PTR [rip+0x6d7a0068]        # 0x6dbe39fb
  443993:	ins    DWORD PTR es:[rdi],dx
  443994:	xor    dh,BYTE PTR [rsi]
  443996:	push   0x6d6d7a00
  44399b:	xor    dh,BYTE PTR [rdi]
  44399d:	push   0x6d6d7a00
  4439a2:	xor    bh,BYTE PTR [rax]
  4439a4:	push   0x6d6d7a00
  4439a9:	xor    bh,BYTE PTR [rcx]
  4439ab:	push   0x6d6d7a00
  4439b0:	xor    esi,DWORD PTR [rax]
  4439b2:	push   0x6d6d7a00
  4439b7:	xor    esi,DWORD PTR [rcx]
  4439b9:	push   0x0
  4439be:	add    BYTE PTR [rax],al
  4439c0:	(bad)  
  4439c1:	ins    DWORD PTR es:[rdi],dx
  4439c2:	fs ss xor al,0x2d
  4439c6:	ins    DWORD PTR es:[rdi],dx
  4439c7:	jo     0x443a41
  4439c9:	cs js  0x443a39
  4439cc:	ins    BYTE PTR es:[rdi],dx
  4439cd:	add    BYTE PTR [rdx+0x62],dh
  4439d0:	jo     0x4439d2
  4439d2:	jb     0x443a47
  4439d4:	jo     0x4439d6
  4439d6:	jb     0x443a41
  4439d8:	jo     0x4439da
  4439da:	jb     0x443a3d
  4439dc:	js     0x4439de
  4439de:	jb     0x443a42
  4439e0:	js     0x4439e2
  4439e2:	jb     0x443a47
  4439e4:	js     0x4439e6
  4439e6:	jb     0x443a4c
  4439e8:	js     0x4439ea
  4439ea:	jb     0x443a5f
  4439ec:	imul   eax,DWORD PTR [rax],0x696472
  4439f2:	jb     0x443a2c
  4439f4:	add    BYTE PTR [rdx+0x39],dh
  4439f7:	add    BYTE PTR [rdx+0x31],dh
  4439fa:	xor    BYTE PTR [rax],al
  4439fc:	jb     0x443a2f
  4439fe:	xor    DWORD PTR [rax],eax
  443a00:	jb     0x443a33
  443a02:	xor    al,BYTE PTR [rax]
  443a04:	jb     0x443a37
  443a06:	xor    eax,DWORD PTR [rax]
  443a08:	jb     0x443a3b
  443a0a:	xor    al,0x0
  443a0c:	jb     0x443a3f
  443a0e:	xor    eax,0x6c666500
  443a13:	(bad)  
  443a14:	addr32 jae 0x443a17
  443a17:	movsxd esi,DWORD PTR [rbx+0x0]
  443a1a:	jae    0x443a8f
  443a1c:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443a20:	gs jae 0x443a23
  443a23:	data16 jae 0x443a26
  443a26:	addr32 jae 0x443a29
  443a29:	jae    0x443a9f
  443a2b:	xor    BYTE PTR [rax],al
  443a2d:	jae    0x443aa3
  443a2f:	xor    DWORD PTR [rax],eax
  443a31:	jae    0x443aa7
  443a33:	xor    al,BYTE PTR [rax]
  443a35:	jae    0x443aab
  443a37:	xor    eax,DWORD PTR [rax]
  443a39:	jae    0x443aaf
  443a3b:	xor    al,0x0
  443a3d:	jae    0x443ab3
  443a3f:	xor    eax,0x36747300
  443a44:	add    BYTE PTR [rbx+0x74],dh
  443a47:	(bad)  
  443a48:	add    BYTE PTR [rsi+0x63],ah
  443a4b:	je     0x443abf
  443a4d:	ins    BYTE PTR es:[rdi],dx
  443a4e:	add    BYTE PTR [rsi+0x73],ah
  443a51:	je     0x443ab4
  443a53:	je     0x443a55
  443a55:	data16 je 0x443ab9
  443a58:	add    BYTE PTR [esi+0x69],ah
  443a5c:	jae    0x443ac3
  443a5e:	add    BYTE PTR [esi+0x69],ah
  443a62:	outs   dx,DWORD PTR ds:[rsi]
  443a63:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443a68:	jae    0x443acf
  443a6a:	add    BYTE PTR [esi+0x6f],ah
  443a6e:	outs   dx,DWORD PTR ds:[rsi]
  443a6f:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443a74:	jo     0x443a76
  443a76:	js     0x443ae5
  443a78:	ins    DWORD PTR es:[rdi],dx
  443a79:	xor    BYTE PTR [rax],al
  443a7b:	js     0x443aea
  443a7d:	ins    DWORD PTR es:[rdi],dx
  443a7e:	xor    DWORD PTR [rax],eax
  443a80:	js     0x443aef
  443a82:	ins    DWORD PTR es:[rdi],dx
  443a83:	xor    al,BYTE PTR [rax]
  443a85:	js     0x443af4
  443a87:	ins    DWORD PTR es:[rdi],dx
  443a88:	xor    eax,DWORD PTR [rax]
  443a8a:	js     0x443af9
  443a8c:	ins    DWORD PTR es:[rdi],dx
  443a8d:	xor    al,0x0
  443a8f:	js     0x443afe
  443a91:	ins    DWORD PTR es:[rdi],dx
  443a92:	xor    eax,0x6d6d7800
  443a97:	add    BYTE PTR ss:[rax+0x6d],bh
  443a9b:	ins    DWORD PTR es:[rdi],dx
  443a9c:	(bad)  
  443a9d:	add    BYTE PTR [rax+0x6d],bh
  443aa0:	ins    DWORD PTR es:[rdi],dx
  443aa1:	cmp    BYTE PTR [rax],al
  443aa3:	js     0x443b12
  443aa5:	ins    DWORD PTR es:[rdi],dx
  443aa6:	cmp    DWORD PTR [rax],eax
  443aa8:	js     0x443b17
  443aaa:	ins    DWORD PTR es:[rdi],dx
  443aab:	xor    DWORD PTR [rax],esi
  443aad:	add    BYTE PTR [rax+0x6d],bh
  443ab0:	ins    DWORD PTR es:[rdi],dx
  443ab1:	xor    DWORD PTR [rcx],esi
  443ab3:	add    BYTE PTR [rax+0x6d],bh
  443ab6:	ins    DWORD PTR es:[rdi],dx
  443ab7:	xor    DWORD PTR [rdx],esi
  443ab9:	add    BYTE PTR [rax+0x6d],bh
  443abc:	ins    DWORD PTR es:[rdi],dx
  443abd:	xor    DWORD PTR [rbx],esi
  443abf:	add    BYTE PTR [rax+0x6d],bh
  443ac2:	ins    DWORD PTR es:[rdi],dx
  443ac3:	xor    DWORD PTR [rax+rax*1],esi
  443ac6:	js     0x443b35
  443ac8:	ins    DWORD PTR es:[rdi],dx
  443ac9:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bca7cf
  443acf:	jae    0x443b43
  443ad1:	add    BYTE PTR [rdx+0x6e],ah
  443ad4:	xor    BYTE PTR fs:[rdx+0x61],dh
  443ad8:	ja     0x443ada
  443ada:	(bad)  
  443adb:	outs   dx,BYTE PTR ds:[rsi]
  443adc:	xor    DWORD PTR fs:[rdx+0x61],esi
  443ae0:	ja     0x443ae2
  443ae2:	(bad)  
  443ae3:	outs   dx,BYTE PTR ds:[rsi]
  443ae4:	xor    dh,BYTE PTR fs:[rdx+0x61]
  443ae8:	ja     0x443aea
  443aea:	(bad)  
  443aeb:	outs   dx,BYTE PTR ds:[rsi]
  443aec:	xor    esi,DWORD PTR fs:[rdx+0x61]
  443af0:	ja     0x443af2
  443af2:	(bad)  
  443af3:	outs   dx,BYTE PTR ds:[rsi]
  443af4:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  443af8:	jne    0x443afa
  443afa:	(bad)  
  443afb:	outs   dx,BYTE PTR ds:[rsi]
  443afc:	fs jae 0x443b73
  443aff:	(bad)  
  443b00:	je     0x443b77
  443b02:	jae    0x443b04
	...
  443b10:	(bad)  
  443b11:	ins    DWORD PTR es:[rdi],dx
  443b12:	fs ss xor al,0x2d
  443b16:	(bad)  
  443b17:	jbe    0x443b91
  443b19:	sub    eax,0x2e78706d
  443b1e:	js     0x443b8d
  443b20:	ins    BYTE PTR es:[rdi],dx
  443b21:	add    BYTE PTR [rdx+0x62],dh
  443b24:	jo     0x443b26
  443b26:	jb     0x443b9b
  443b28:	jo     0x443b2a
  443b2a:	jb     0x443b95
  443b2c:	jo     0x443b2e
  443b2e:	jb     0x443b91
  443b30:	js     0x443b32
  443b32:	jb     0x443b96
  443b34:	js     0x443b36
  443b36:	jb     0x443b9b
  443b38:	js     0x443b3a
  443b3a:	jb     0x443ba0
  443b3c:	js     0x443b3e
  443b3e:	jb     0x443bb3
  443b40:	imul   eax,DWORD PTR [rax],0x696472
  443b46:	jb     0x443b80
  443b48:	add    BYTE PTR [rdx+0x39],dh
  443b4b:	add    BYTE PTR [rdx+0x31],dh
  443b4e:	xor    BYTE PTR [rax],al
  443b50:	jb     0x443b83
  443b52:	xor    DWORD PTR [rax],eax
  443b54:	jb     0x443b87
  443b56:	xor    al,BYTE PTR [rax]
  443b58:	jb     0x443b8b
  443b5a:	xor    eax,DWORD PTR [rax]
  443b5c:	jb     0x443b8f
  443b5e:	xor    al,0x0
  443b60:	jb     0x443b93
  443b62:	xor    eax,0x6c666500
  443b67:	(bad)  
  443b68:	addr32 jae 0x443b6b
  443b6b:	movsxd esi,DWORD PTR [rbx+0x0]
  443b6e:	jae    0x443be3
  443b70:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443b74:	gs jae 0x443b77
  443b77:	data16 jae 0x443b7a
  443b7a:	addr32 jae 0x443b7d
  443b7d:	jae    0x443bf3
  443b7f:	xor    BYTE PTR [rax],al
  443b81:	jae    0x443bf7
  443b83:	xor    DWORD PTR [rax],eax
  443b85:	jae    0x443bfb
  443b87:	xor    al,BYTE PTR [rax]
  443b89:	jae    0x443bff
  443b8b:	xor    eax,DWORD PTR [rax]
  443b8d:	jae    0x443c03
  443b8f:	xor    al,0x0
  443b91:	jae    0x443c07
  443b93:	xor    eax,0x36747300
  443b98:	add    BYTE PTR [rbx+0x74],dh
  443b9b:	(bad)  
  443b9c:	add    BYTE PTR [rsi+0x63],ah
  443b9f:	je     0x443c13
  443ba1:	ins    BYTE PTR es:[rdi],dx
  443ba2:	add    BYTE PTR [rsi+0x73],ah
  443ba5:	je     0x443c08
  443ba7:	je     0x443ba9
  443ba9:	data16 je 0x443c0d
  443bac:	add    BYTE PTR [esi+0x69],ah
  443bb0:	jae    0x443c17
  443bb2:	add    BYTE PTR [esi+0x69],ah
  443bb6:	outs   dx,DWORD PTR ds:[rsi]
  443bb7:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443bbc:	jae    0x443c23
  443bbe:	add    BYTE PTR [esi+0x6f],ah
  443bc2:	outs   dx,DWORD PTR ds:[rsi]
  443bc3:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443bc8:	jo     0x443bca
  443bca:	js     0x443c39
  443bcc:	ins    DWORD PTR es:[rdi],dx
  443bcd:	xor    BYTE PTR [rax],al
  443bcf:	js     0x443c3e
  443bd1:	ins    DWORD PTR es:[rdi],dx
  443bd2:	xor    DWORD PTR [rax],eax
  443bd4:	js     0x443c43
  443bd6:	ins    DWORD PTR es:[rdi],dx
  443bd7:	xor    al,BYTE PTR [rax]
  443bd9:	js     0x443c48
  443bdb:	ins    DWORD PTR es:[rdi],dx
  443bdc:	xor    eax,DWORD PTR [rax]
  443bde:	js     0x443c4d
  443be0:	ins    DWORD PTR es:[rdi],dx
  443be1:	xor    al,0x0
  443be3:	js     0x443c52
  443be5:	ins    DWORD PTR es:[rdi],dx
  443be6:	xor    eax,0x6d6d7800
  443beb:	add    BYTE PTR ss:[rax+0x6d],bh
  443bef:	ins    DWORD PTR es:[rdi],dx
  443bf0:	(bad)  
  443bf1:	add    BYTE PTR [rax+0x6d],bh
  443bf4:	ins    DWORD PTR es:[rdi],dx
  443bf5:	cmp    BYTE PTR [rax],al
  443bf7:	js     0x443c66
  443bf9:	ins    DWORD PTR es:[rdi],dx
  443bfa:	cmp    DWORD PTR [rax],eax
  443bfc:	js     0x443c6b
  443bfe:	ins    DWORD PTR es:[rdi],dx
  443bff:	xor    DWORD PTR [rax],esi
  443c01:	add    BYTE PTR [rax+0x6d],bh
  443c04:	ins    DWORD PTR es:[rdi],dx
  443c05:	xor    DWORD PTR [rcx],esi
  443c07:	add    BYTE PTR [rax+0x6d],bh
  443c0a:	ins    DWORD PTR es:[rdi],dx
  443c0b:	xor    DWORD PTR [rdx],esi
  443c0d:	add    BYTE PTR [rax+0x6d],bh
  443c10:	ins    DWORD PTR es:[rdi],dx
  443c11:	xor    DWORD PTR [rbx],esi
  443c13:	add    BYTE PTR [rax+0x6d],bh
  443c16:	ins    DWORD PTR es:[rdi],dx
  443c17:	xor    DWORD PTR [rax+rax*1],esi
  443c1a:	js     0x443c89
  443c1c:	ins    DWORD PTR es:[rdi],dx
  443c1d:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bca923
  443c23:	jae    0x443c97
  443c25:	add    BYTE PTR [rcx+0x6d],bh
  443c28:	ins    DWORD PTR es:[rdi],dx
  443c29:	xor    BYTE PTR [rax+0x0],ch
  443c2c:	jns    0x443c9b
  443c2e:	ins    DWORD PTR es:[rdi],dx
  443c2f:	xor    DWORD PTR [rax+0x0],ebp
  443c32:	jns    0x443ca1
  443c34:	ins    DWORD PTR es:[rdi],dx
  443c35:	xor    ch,BYTE PTR [rax+0x0]
  443c38:	jns    0x443ca7
  443c3a:	ins    DWORD PTR es:[rdi],dx
  443c3b:	xor    ebp,DWORD PTR [rax+0x0]
  443c3e:	jns    0x443cad
  443c40:	ins    DWORD PTR es:[rdi],dx
  443c41:	xor    al,0x68
  443c43:	add    BYTE PTR [rcx+0x6d],bh
  443c46:	ins    DWORD PTR es:[rdi],dx
  443c47:	xor    eax,0x6d790068
  443c4c:	ins    DWORD PTR es:[rdi],dx
  443c4d:	ss push 0x6d6d7900
  443c53:	(bad)  
  443c54:	push   0x6d6d7900
  443c59:	cmp    BYTE PTR [rax+0x0],ch
  443c5c:	jns    0x443ccb
  443c5e:	ins    DWORD PTR es:[rdi],dx
  443c5f:	cmp    DWORD PTR [rax+0x0],ebp
  443c62:	jns    0x443cd1
  443c64:	ins    DWORD PTR es:[rdi],dx
  443c65:	xor    DWORD PTR [rax],esi
  443c67:	push   0x6d6d7900
  443c6c:	xor    DWORD PTR [rcx],esi
  443c6e:	push   0x6d6d7900
  443c73:	xor    DWORD PTR [rdx],esi
  443c75:	push   0x6d6d7900
  443c7a:	xor    DWORD PTR [rbx],esi
  443c7c:	push   0x6d6d7900
  443c81:	xor    DWORD PTR [rax+rbp*2],esi
  443c84:	add    BYTE PTR [rcx+0x6d],bh
  443c87:	ins    DWORD PTR es:[rdi],dx
  443c88:	xor    DWORD PTR [rip+0x6e620068],esi        # 0x6ea63cf6
  443c8e:	xor    BYTE PTR fs:[rdx+0x61],dh
  443c92:	ja     0x443c94
  443c94:	(bad)  
  443c95:	outs   dx,BYTE PTR ds:[rsi]
  443c96:	xor    DWORD PTR fs:[rdx+0x61],esi
  443c9a:	ja     0x443c9c
  443c9c:	(bad)  
  443c9d:	outs   dx,BYTE PTR ds:[rsi]
  443c9e:	xor    dh,BYTE PTR fs:[rdx+0x61]
  443ca2:	ja     0x443ca4
  443ca4:	(bad)  
  443ca5:	outs   dx,BYTE PTR ds:[rsi]
  443ca6:	xor    esi,DWORD PTR fs:[rdx+0x61]
  443caa:	ja     0x443cac
  443cac:	(bad)  
  443cad:	outs   dx,BYTE PTR ds:[rsi]
  443cae:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  443cb2:	jne    0x443cb4
  443cb4:	(bad)  
  443cb5:	outs   dx,BYTE PTR ds:[rsi]
  443cb6:	fs jae 0x443d2d
  443cb9:	(bad)  
  443cba:	je     0x443d31
  443cbc:	jae    0x443cbe
  443cbe:	add    BYTE PTR [rax],al
  443cc0:	js     0x443cf5
  443cc2:	xor    ch,BYTE PTR [rsi]
  443cc4:	js     0x443d33
  443cc6:	ins    BYTE PTR es:[rdi],dx
  443cc7:	add    BYTE PTR [rdx+0x62],dh
  443cca:	jo     0x443ccc
  443ccc:	jb     0x443d41
  443cce:	jo     0x443cd0
  443cd0:	jb     0x443d3b
  443cd2:	jo     0x443cd4
  443cd4:	jb     0x443d37
  443cd6:	js     0x443cd8
  443cd8:	jb     0x443d3c
  443cda:	js     0x443cdc
  443cdc:	jb     0x443d41
  443cde:	js     0x443ce0
  443ce0:	jb     0x443d46
  443ce2:	js     0x443ce4
  443ce4:	jb     0x443d59
  443ce6:	imul   eax,DWORD PTR [rax],0x696472
  443cec:	jb     0x443d26
  443cee:	add    BYTE PTR [rdx+0x39],dh
  443cf1:	add    BYTE PTR [rdx+0x31],dh
  443cf4:	xor    BYTE PTR [rax],al
  443cf6:	jb     0x443d29
  443cf8:	xor    DWORD PTR [rax],eax
  443cfa:	jb     0x443d2d
  443cfc:	xor    al,BYTE PTR [rax]
  443cfe:	jb     0x443d31
  443d00:	xor    eax,DWORD PTR [rax]
  443d02:	jb     0x443d35
  443d04:	xor    al,0x0
  443d06:	jb     0x443d39
  443d08:	xor    eax,0x6c666500
  443d0d:	(bad)  
  443d0e:	addr32 jae 0x443d11
  443d11:	movsxd esi,DWORD PTR [rbx+0x0]
  443d14:	jae    0x443d89
  443d16:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443d1a:	gs jae 0x443d1d
  443d1d:	data16 jae 0x443d20
  443d20:	addr32 jae 0x443d23
  443d23:	jae    0x443d99
  443d25:	xor    BYTE PTR [rax],al
  443d27:	jae    0x443d9d
  443d29:	xor    DWORD PTR [rax],eax
  443d2b:	jae    0x443da1
  443d2d:	xor    al,BYTE PTR [rax]
  443d2f:	jae    0x443da5
  443d31:	xor    eax,DWORD PTR [rax]
  443d33:	jae    0x443da9
  443d35:	xor    al,0x0
  443d37:	jae    0x443dad
  443d39:	xor    eax,0x36747300
  443d3e:	add    BYTE PTR [rbx+0x74],dh
  443d41:	(bad)  
  443d42:	add    BYTE PTR [rsi+0x63],ah
  443d45:	je     0x443db9
  443d47:	ins    BYTE PTR es:[rdi],dx
  443d48:	add    BYTE PTR [rsi+0x73],ah
  443d4b:	je     0x443dae
  443d4d:	je     0x443d4f
  443d4f:	data16 je 0x443db3
  443d52:	add    BYTE PTR [esi+0x69],ah
  443d56:	jae    0x443dbd
  443d58:	add    BYTE PTR [esi+0x69],ah
  443d5c:	outs   dx,DWORD PTR ds:[rsi]
  443d5d:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443d62:	jae    0x443dc9
  443d64:	add    BYTE PTR [esi+0x6f],ah
  443d68:	outs   dx,DWORD PTR ds:[rsi]
  443d69:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443d6e:	jo     0x443d70
  443d70:	js     0x443ddf
  443d72:	ins    DWORD PTR es:[rdi],dx
  443d73:	xor    BYTE PTR [rax],al
  443d75:	js     0x443de4
  443d77:	ins    DWORD PTR es:[rdi],dx
  443d78:	xor    DWORD PTR [rax],eax
  443d7a:	js     0x443de9
  443d7c:	ins    DWORD PTR es:[rdi],dx
  443d7d:	xor    al,BYTE PTR [rax]
  443d7f:	js     0x443dee
  443d81:	ins    DWORD PTR es:[rdi],dx
  443d82:	xor    eax,DWORD PTR [rax]
  443d84:	js     0x443df3
  443d86:	ins    DWORD PTR es:[rdi],dx
  443d87:	xor    al,0x0
  443d89:	js     0x443df8
  443d8b:	ins    DWORD PTR es:[rdi],dx
  443d8c:	xor    eax,0x6d6d7800
  443d91:	add    BYTE PTR ss:[rax+0x6d],bh
  443d95:	ins    DWORD PTR es:[rdi],dx
  443d96:	(bad)  
  443d97:	add    BYTE PTR [rax+0x6d],bh
  443d9a:	ins    DWORD PTR es:[rdi],dx
  443d9b:	cmp    BYTE PTR [rax],al
  443d9d:	js     0x443e0c
  443d9f:	ins    DWORD PTR es:[rdi],dx
  443da0:	cmp    DWORD PTR [rax],eax
  443da2:	js     0x443e11
  443da4:	ins    DWORD PTR es:[rdi],dx
  443da5:	xor    DWORD PTR [rax],esi
  443da7:	add    BYTE PTR [rax+0x6d],bh
  443daa:	ins    DWORD PTR es:[rdi],dx
  443dab:	xor    DWORD PTR [rcx],esi
  443dad:	add    BYTE PTR [rax+0x6d],bh
  443db0:	ins    DWORD PTR es:[rdi],dx
  443db1:	xor    DWORD PTR [rdx],esi
  443db3:	add    BYTE PTR [rax+0x6d],bh
  443db6:	ins    DWORD PTR es:[rdi],dx
  443db7:	xor    DWORD PTR [rbx],esi
  443db9:	add    BYTE PTR [rax+0x6d],bh
  443dbc:	ins    DWORD PTR es:[rdi],dx
  443dbd:	xor    DWORD PTR [rax+rax*1],esi
  443dc0:	js     0x443e2f
  443dc2:	ins    DWORD PTR es:[rdi],dx
  443dc3:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bcaac9
  443dc9:	jae    0x443e3d
  443dcb:	add    BYTE PTR [rax],al
  443dcd:	add    BYTE PTR [rax],al
  443dcf:	add    BYTE PTR [rax+0x33],bh
  443dd2:	xor    ch,BYTE PTR [rip+0x2e787661]        # 0x2ebcb439
  443dd8:	js     0x443e47
  443dda:	ins    BYTE PTR es:[rdi],dx
  443ddb:	add    BYTE PTR [rdx+0x62],dh
  443dde:	jo     0x443de0
  443de0:	jb     0x443e55
  443de2:	jo     0x443de4
  443de4:	jb     0x443e4f
  443de6:	jo     0x443de8
  443de8:	jb     0x443e4b
  443dea:	js     0x443dec
  443dec:	jb     0x443e50
  443dee:	js     0x443df0
  443df0:	jb     0x443e55
  443df2:	js     0x443df4
  443df4:	jb     0x443e5a
  443df6:	js     0x443df8
  443df8:	jb     0x443e6d
  443dfa:	imul   eax,DWORD PTR [rax],0x696472
  443e00:	jb     0x443e3a
  443e02:	add    BYTE PTR [rdx+0x39],dh
  443e05:	add    BYTE PTR [rdx+0x31],dh
  443e08:	xor    BYTE PTR [rax],al
  443e0a:	jb     0x443e3d
  443e0c:	xor    DWORD PTR [rax],eax
  443e0e:	jb     0x443e41
  443e10:	xor    al,BYTE PTR [rax]
  443e12:	jb     0x443e45
  443e14:	xor    eax,DWORD PTR [rax]
  443e16:	jb     0x443e49
  443e18:	xor    al,0x0
  443e1a:	jb     0x443e4d
  443e1c:	xor    eax,0x6c666500
  443e21:	(bad)  
  443e22:	addr32 jae 0x443e25
  443e25:	movsxd esi,DWORD PTR [rbx+0x0]
  443e28:	jae    0x443e9d
  443e2a:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443e2e:	gs jae 0x443e31
  443e31:	data16 jae 0x443e34
  443e34:	addr32 jae 0x443e37
  443e37:	jae    0x443ead
  443e39:	xor    BYTE PTR [rax],al
  443e3b:	jae    0x443eb1
  443e3d:	xor    DWORD PTR [rax],eax
  443e3f:	jae    0x443eb5
  443e41:	xor    al,BYTE PTR [rax]
  443e43:	jae    0x443eb9
  443e45:	xor    eax,DWORD PTR [rax]
  443e47:	jae    0x443ebd
  443e49:	xor    al,0x0
  443e4b:	jae    0x443ec1
  443e4d:	xor    eax,0x36747300
  443e52:	add    BYTE PTR [rbx+0x74],dh
  443e55:	(bad)  
  443e56:	add    BYTE PTR [rsi+0x63],ah
  443e59:	je     0x443ecd
  443e5b:	ins    BYTE PTR es:[rdi],dx
  443e5c:	add    BYTE PTR [rsi+0x73],ah
  443e5f:	je     0x443ec2
  443e61:	je     0x443e63
  443e63:	data16 je 0x443ec7
  443e66:	add    BYTE PTR [esi+0x69],ah
  443e6a:	jae    0x443ed1
  443e6c:	add    BYTE PTR [esi+0x69],ah
  443e70:	outs   dx,DWORD PTR ds:[rsi]
  443e71:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443e76:	jae    0x443edd
  443e78:	add    BYTE PTR [esi+0x6f],ah
  443e7c:	outs   dx,DWORD PTR ds:[rsi]
  443e7d:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443e82:	jo     0x443e84
  443e84:	js     0x443ef3
  443e86:	ins    DWORD PTR es:[rdi],dx
  443e87:	xor    BYTE PTR [rax],al
  443e89:	js     0x443ef8
  443e8b:	ins    DWORD PTR es:[rdi],dx
  443e8c:	xor    DWORD PTR [rax],eax
  443e8e:	js     0x443efd
  443e90:	ins    DWORD PTR es:[rdi],dx
  443e91:	xor    al,BYTE PTR [rax]
  443e93:	js     0x443f02
  443e95:	ins    DWORD PTR es:[rdi],dx
  443e96:	xor    eax,DWORD PTR [rax]
  443e98:	js     0x443f07
  443e9a:	ins    DWORD PTR es:[rdi],dx
  443e9b:	xor    al,0x0
  443e9d:	js     0x443f0c
  443e9f:	ins    DWORD PTR es:[rdi],dx
  443ea0:	xor    eax,0x6d6d7800
  443ea5:	add    BYTE PTR ss:[rax+0x6d],bh
  443ea9:	ins    DWORD PTR es:[rdi],dx
  443eaa:	(bad)  
  443eab:	add    BYTE PTR [rax+0x6d],bh
  443eae:	ins    DWORD PTR es:[rdi],dx
  443eaf:	cmp    BYTE PTR [rax],al
  443eb1:	js     0x443f20
  443eb3:	ins    DWORD PTR es:[rdi],dx
  443eb4:	cmp    DWORD PTR [rax],eax
  443eb6:	js     0x443f25
  443eb8:	ins    DWORD PTR es:[rdi],dx
  443eb9:	xor    DWORD PTR [rax],esi
  443ebb:	add    BYTE PTR [rax+0x6d],bh
  443ebe:	ins    DWORD PTR es:[rdi],dx
  443ebf:	xor    DWORD PTR [rcx],esi
  443ec1:	add    BYTE PTR [rax+0x6d],bh
  443ec4:	ins    DWORD PTR es:[rdi],dx
  443ec5:	xor    DWORD PTR [rdx],esi
  443ec7:	add    BYTE PTR [rax+0x6d],bh
  443eca:	ins    DWORD PTR es:[rdi],dx
  443ecb:	xor    DWORD PTR [rbx],esi
  443ecd:	add    BYTE PTR [rax+0x6d],bh
  443ed0:	ins    DWORD PTR es:[rdi],dx
  443ed1:	xor    DWORD PTR [rax+rax*1],esi
  443ed4:	js     0x443f43
  443ed6:	ins    DWORD PTR es:[rdi],dx
  443ed7:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bcabdd
  443edd:	jae    0x443f51
  443edf:	add    BYTE PTR [rcx+0x6d],bh
  443ee2:	ins    DWORD PTR es:[rdi],dx
  443ee3:	xor    BYTE PTR [rax+0x0],ch
  443ee6:	jns    0x443f55
  443ee8:	ins    DWORD PTR es:[rdi],dx
  443ee9:	xor    DWORD PTR [rax+0x0],ebp
  443eec:	jns    0x443f5b
  443eee:	ins    DWORD PTR es:[rdi],dx
  443eef:	xor    ch,BYTE PTR [rax+0x0]
  443ef2:	jns    0x443f61
  443ef4:	ins    DWORD PTR es:[rdi],dx
  443ef5:	xor    ebp,DWORD PTR [rax+0x0]
  443ef8:	jns    0x443f67
  443efa:	ins    DWORD PTR es:[rdi],dx
  443efb:	xor    al,0x68
  443efd:	add    BYTE PTR [rcx+0x6d],bh
  443f00:	ins    DWORD PTR es:[rdi],dx
  443f01:	xor    eax,0x6d790068
  443f06:	ins    DWORD PTR es:[rdi],dx
  443f07:	ss push 0x6d6d7900
  443f0d:	(bad)  
  443f0e:	push   0x6d6d7900
  443f13:	cmp    BYTE PTR [rax+0x0],ch
  443f16:	jns    0x443f85
  443f18:	ins    DWORD PTR es:[rdi],dx
  443f19:	cmp    DWORD PTR [rax+0x0],ebp
  443f1c:	jns    0x443f8b
  443f1e:	ins    DWORD PTR es:[rdi],dx
  443f1f:	xor    DWORD PTR [rax],esi
  443f21:	push   0x6d6d7900
  443f26:	xor    DWORD PTR [rcx],esi
  443f28:	push   0x6d6d7900
  443f2d:	xor    DWORD PTR [rdx],esi
  443f2f:	push   0x6d6d7900
  443f34:	xor    DWORD PTR [rbx],esi
  443f36:	push   0x6d6d7900
  443f3b:	xor    DWORD PTR [rax+rbp*2],esi
  443f3e:	add    BYTE PTR [rcx+0x6d],bh
  443f41:	ins    DWORD PTR es:[rdi],dx
  443f42:	xor    DWORD PTR [rip+0x68],esi        # 0x443fb0
	...
  443f50:	js     0x443f85
  443f52:	xor    ch,BYTE PTR [rip+0x35787661]        # 0x35bcb5b9
  443f58:	xor    DWORD PTR [rdx],esi
  443f5a:	cs js  0x443fca
  443f5d:	ins    BYTE PTR es:[rdi],dx
  443f5e:	add    BYTE PTR [rdx+0x62],dh
  443f61:	jo     0x443f63
  443f63:	jb     0x443fd8
  443f65:	jo     0x443f67
  443f67:	jb     0x443fd2
  443f69:	jo     0x443f6b
  443f6b:	jb     0x443fce
  443f6d:	js     0x443f6f
  443f6f:	jb     0x443fd3
  443f71:	js     0x443f73
  443f73:	jb     0x443fd8
  443f75:	js     0x443f77
  443f77:	jb     0x443fdd
  443f79:	js     0x443f7b
  443f7b:	jb     0x443ff0
  443f7d:	imul   eax,DWORD PTR [rax],0x696472
  443f83:	jb     0x443fbd
  443f85:	add    BYTE PTR [rdx+0x39],dh
  443f88:	add    BYTE PTR [rdx+0x31],dh
  443f8b:	xor    BYTE PTR [rax],al
  443f8d:	jb     0x443fc0
  443f8f:	xor    DWORD PTR [rax],eax
  443f91:	jb     0x443fc4
  443f93:	xor    al,BYTE PTR [rax]
  443f95:	jb     0x443fc8
  443f97:	xor    eax,DWORD PTR [rax]
  443f99:	jb     0x443fcc
  443f9b:	xor    al,0x0
  443f9d:	jb     0x443fd0
  443f9f:	xor    eax,0x6c666500
  443fa4:	(bad)  
  443fa5:	addr32 jae 0x443fa8
  443fa8:	movsxd esi,DWORD PTR [rbx+0x0]
  443fab:	jae    0x444020
  443fad:	add    BYTE PTR [rbx+rsi*2+0x0],ah
  443fb1:	gs jae 0x443fb4
  443fb4:	data16 jae 0x443fb7
  443fb7:	addr32 jae 0x443fba
  443fba:	jae    0x444030
  443fbc:	xor    BYTE PTR [rax],al
  443fbe:	jae    0x444034
  443fc0:	xor    DWORD PTR [rax],eax
  443fc2:	jae    0x444038
  443fc4:	xor    al,BYTE PTR [rax]
  443fc6:	jae    0x44403c
  443fc8:	xor    eax,DWORD PTR [rax]
  443fca:	jae    0x444040
  443fcc:	xor    al,0x0
  443fce:	jae    0x444044
  443fd0:	xor    eax,0x36747300
  443fd5:	add    BYTE PTR [rbx+0x74],dh
  443fd8:	(bad)  
  443fd9:	add    BYTE PTR [rsi+0x63],ah
  443fdc:	je     0x444050
  443fde:	ins    BYTE PTR es:[rdi],dx
  443fdf:	add    BYTE PTR [rsi+0x73],ah
  443fe2:	je     0x444045
  443fe4:	je     0x443fe6
  443fe6:	data16 je 0x44404a
  443fe9:	add    BYTE PTR [esi+0x69],ah
  443fed:	jae    0x444054
  443fef:	add    BYTE PTR [esi+0x69],ah
  443ff3:	outs   dx,DWORD PTR ds:[rsi]
  443ff4:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  443ff9:	jae    0x444060
  443ffb:	add    BYTE PTR [esi+0x6f],ah
  443fff:	outs   dx,DWORD PTR ds:[rsi]
  444000:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  444005:	jo     0x444007
  444007:	js     0x444076
  444009:	ins    DWORD PTR es:[rdi],dx
  44400a:	xor    BYTE PTR [rax],al
  44400c:	js     0x44407b
  44400e:	ins    DWORD PTR es:[rdi],dx
  44400f:	xor    DWORD PTR [rax],eax
  444011:	js     0x444080
  444013:	ins    DWORD PTR es:[rdi],dx
  444014:	xor    al,BYTE PTR [rax]
  444016:	js     0x444085
  444018:	ins    DWORD PTR es:[rdi],dx
  444019:	xor    eax,DWORD PTR [rax]
  44401b:	js     0x44408a
  44401d:	ins    DWORD PTR es:[rdi],dx
  44401e:	xor    al,0x0
  444020:	js     0x44408f
  444022:	ins    DWORD PTR es:[rdi],dx
  444023:	xor    eax,0x6d6d7800
  444028:	add    BYTE PTR ss:[rax+0x6d],bh
  44402c:	ins    DWORD PTR es:[rdi],dx
  44402d:	(bad)  
  44402e:	add    BYTE PTR [rax+0x6d],bh
  444031:	ins    DWORD PTR es:[rdi],dx
  444032:	cmp    BYTE PTR [rax],al
  444034:	js     0x4440a3
  444036:	ins    DWORD PTR es:[rdi],dx
  444037:	cmp    DWORD PTR [rax],eax
  444039:	js     0x4440a8
  44403b:	ins    DWORD PTR es:[rdi],dx
  44403c:	xor    DWORD PTR [rax],esi
  44403e:	add    BYTE PTR [rax+0x6d],bh
  444041:	ins    DWORD PTR es:[rdi],dx
  444042:	xor    DWORD PTR [rcx],esi
  444044:	add    BYTE PTR [rax+0x6d],bh
  444047:	ins    DWORD PTR es:[rdi],dx
  444048:	xor    DWORD PTR [rdx],esi
  44404a:	add    BYTE PTR [rax+0x6d],bh
  44404d:	ins    DWORD PTR es:[rdi],dx
  44404e:	xor    DWORD PTR [rbx],esi
  444050:	add    BYTE PTR [rax+0x6d],bh
  444053:	ins    DWORD PTR es:[rdi],dx
  444054:	xor    DWORD PTR [rax+rax*1],esi
  444057:	js     0x4440c6
  444059:	ins    DWORD PTR es:[rdi],dx
  44405a:	xor    DWORD PTR [rip+0x63786d00],esi        # 0x63bcad60
  444060:	jae    0x4440d4
  444062:	add    BYTE PTR [rcx+0x6d],bh
  444065:	ins    DWORD PTR es:[rdi],dx
  444066:	xor    BYTE PTR [rax+0x0],ch
  444069:	jns    0x4440d8
  44406b:	ins    DWORD PTR es:[rdi],dx
  44406c:	xor    DWORD PTR [rax+0x0],ebp
  44406f:	jns    0x4440de
  444071:	ins    DWORD PTR es:[rdi],dx
  444072:	xor    ch,BYTE PTR [rax+0x0]
  444075:	jns    0x4440e4
  444077:	ins    DWORD PTR es:[rdi],dx
  444078:	xor    ebp,DWORD PTR [rax+0x0]
  44407b:	jns    0x4440ea
  44407d:	ins    DWORD PTR es:[rdi],dx
  44407e:	xor    al,0x68
  444080:	add    BYTE PTR [rcx+0x6d],bh
  444083:	ins    DWORD PTR es:[rdi],dx
  444084:	xor    eax,0x6d790068
  444089:	ins    DWORD PTR es:[rdi],dx
  44408a:	ss push 0x6d6d7900
  444090:	(bad)  
  444091:	push   0x6d6d7900
  444096:	cmp    BYTE PTR [rax+0x0],ch
  444099:	jns    0x444108
  44409b:	ins    DWORD PTR es:[rdi],dx
  44409c:	cmp    DWORD PTR [rax+0x0],ebp
  44409f:	jns    0x44410e
  4440a1:	ins    DWORD PTR es:[rdi],dx
  4440a2:	xor    DWORD PTR [rax],esi
  4440a4:	push   0x6d6d7900
  4440a9:	xor    DWORD PTR [rcx],esi
  4440ab:	push   0x6d6d7900
  4440b0:	xor    DWORD PTR [rdx],esi
  4440b2:	push   0x6d6d7900
  4440b7:	xor    DWORD PTR [rbx],esi
  4440b9:	push   0x6d6d7900
  4440be:	xor    DWORD PTR [rax+rbp*2],esi
  4440c1:	add    BYTE PTR [rcx+0x6d],bh
  4440c4:	ins    DWORD PTR es:[rdi],dx
  4440c5:	xor    DWORD PTR [rip+0x6e620068],esi        # 0x6ea64133
  4440cb:	xor    BYTE PTR fs:[rdx+0x61],dh
  4440cf:	ja     0x4440d1
  4440d1:	(bad)  
  4440d2:	outs   dx,BYTE PTR ds:[rsi]
  4440d3:	xor    DWORD PTR fs:[rdx+0x61],esi
  4440d7:	ja     0x4440d9
  4440d9:	(bad)  
  4440da:	outs   dx,BYTE PTR ds:[rsi]
  4440db:	xor    dh,BYTE PTR fs:[rdx+0x61]
  4440df:	ja     0x4440e1
  4440e1:	(bad)  
  4440e2:	outs   dx,BYTE PTR ds:[rsi]
  4440e3:	xor    esi,DWORD PTR fs:[rdx+0x61]
  4440e7:	ja     0x4440e9
  4440e9:	(bad)  
  4440ea:	outs   dx,BYTE PTR ds:[rsi]
  4440eb:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  4440ef:	jne    0x4440f1
  4440f1:	(bad)  
  4440f2:	outs   dx,BYTE PTR ds:[rsi]
  4440f3:	fs jae 0x44416a
  4440f6:	(bad)  
  4440f7:	je     0x44416e
  4440f9:	jae    0x4440fb
  4440fb:	js     0x44416a
  4440fd:	ins    DWORD PTR es:[rdi],dx
  4440fe:	xor    DWORD PTR [rsi],esi
  444100:	add    BYTE PTR [rax+0x6d],bh
  444103:	ins    DWORD PTR es:[rdi],dx
  444104:	xor    DWORD PTR [rdi],esi
  444106:	add    BYTE PTR [rax+0x6d],bh
  444109:	ins    DWORD PTR es:[rdi],dx
  44410a:	xor    DWORD PTR [rax],edi
  44410c:	add    BYTE PTR [rax+0x6d],bh
  44410f:	ins    DWORD PTR es:[rdi],dx
  444110:	xor    DWORD PTR [rcx],edi
  444112:	add    BYTE PTR [rax+0x6d],bh
  444115:	ins    DWORD PTR es:[rdi],dx
  444116:	xor    dh,BYTE PTR [rax]
  444118:	add    BYTE PTR [rax+0x6d],bh
  44411b:	ins    DWORD PTR es:[rdi],dx
  44411c:	xor    dh,BYTE PTR [rcx]
  44411e:	add    BYTE PTR [rax+0x6d],bh
  444121:	ins    DWORD PTR es:[rdi],dx
  444122:	xor    dh,BYTE PTR [rdx]
  444124:	add    BYTE PTR [rax+0x6d],bh
  444127:	ins    DWORD PTR es:[rdi],dx
  444128:	xor    dh,BYTE PTR [rbx]
  44412a:	add    BYTE PTR [rax+0x6d],bh
  44412d:	ins    DWORD PTR es:[rdi],dx
  44412e:	xor    dh,BYTE PTR [rax+rax*1]
  444131:	js     0x4441a0
  444133:	ins    DWORD PTR es:[rdi],dx
  444134:	xor    dh,BYTE PTR [rip+0x6d6d7800]        # 0x6db1b93a
  44413a:	xor    dh,BYTE PTR [rsi]
  44413c:	add    BYTE PTR [rax+0x6d],bh
  44413f:	ins    DWORD PTR es:[rdi],dx
  444140:	xor    dh,BYTE PTR [rdi]
  444142:	add    BYTE PTR [rax+0x6d],bh
  444145:	ins    DWORD PTR es:[rdi],dx
  444146:	xor    bh,BYTE PTR [rax]
  444148:	add    BYTE PTR [rax+0x6d],bh
  44414b:	ins    DWORD PTR es:[rdi],dx
  44414c:	xor    bh,BYTE PTR [rcx]
  44414e:	add    BYTE PTR [rax+0x6d],bh
  444151:	ins    DWORD PTR es:[rdi],dx
  444152:	xor    esi,DWORD PTR [rax]
  444154:	add    BYTE PTR [rax+0x6d],bh
  444157:	ins    DWORD PTR es:[rdi],dx
  444158:	xor    esi,DWORD PTR [rcx]
  44415a:	add    BYTE PTR [rcx+0x6d],bh
  44415d:	ins    DWORD PTR es:[rdi],dx
  44415e:	xor    DWORD PTR [rsi],esi
  444160:	push   0x6d6d7900
  444165:	xor    DWORD PTR [rdi],esi
  444167:	push   0x6d6d7900
  44416c:	xor    DWORD PTR [rax],edi
  44416e:	push   0x6d6d7900
  444173:	xor    DWORD PTR [rcx],edi
  444175:	push   0x6d6d7900
  44417a:	xor    dh,BYTE PTR [rax]
  44417c:	push   0x6d6d7900
  444181:	xor    dh,BYTE PTR [rcx]
  444183:	push   0x6d6d7900
  444188:	xor    dh,BYTE PTR [rdx]
  44418a:	push   0x6d6d7900
  44418f:	xor    dh,BYTE PTR [rbx]
  444191:	push   0x6d6d7900
  444196:	xor    dh,BYTE PTR [rax+rbp*2]
  444199:	add    BYTE PTR [rcx+0x6d],bh
  44419c:	ins    DWORD PTR es:[rdi],dx
  44419d:	xor    dh,BYTE PTR [rip+0x6d790068]        # 0x6dbd420b
  4441a3:	ins    DWORD PTR es:[rdi],dx
  4441a4:	xor    dh,BYTE PTR [rsi]
  4441a6:	push   0x6d6d7900
  4441ab:	xor    dh,BYTE PTR [rdi]
  4441ad:	push   0x6d6d7900
  4441b2:	xor    bh,BYTE PTR [rax]
  4441b4:	push   0x6d6d7900
  4441b9:	xor    bh,BYTE PTR [rcx]
  4441bb:	push   0x6d6d7900
  4441c0:	xor    esi,DWORD PTR [rax]
  4441c2:	push   0x6d6d7900
  4441c7:	xor    esi,DWORD PTR [rcx]
  4441c9:	push   0x306b00
  4441ce:	imul   esi,DWORD PTR [rcx],0x0
  4441d1:	imul   esi,DWORD PTR [rdx],0x0
  4441d4:	imul   esi,DWORD PTR [rbx],0x0
  4441d7:	imul   esi,DWORD PTR [rax+rax*1],0x6b
  4441db:	xor    eax,0x366b00
  4441e0:	imul   esi,DWORD PTR [rdi],0x0
  4441e3:	jp     0x444252
  4441e5:	ins    DWORD PTR es:[rdi],dx
  4441e6:	xor    BYTE PTR [rax+0x0],ch
  4441e9:	jp     0x444258
  4441eb:	ins    DWORD PTR es:[rdi],dx
  4441ec:	xor    DWORD PTR [rax+0x0],ebp
  4441ef:	jp     0x44425e
  4441f1:	ins    DWORD PTR es:[rdi],dx
  4441f2:	xor    ch,BYTE PTR [rax+0x0]
  4441f5:	jp     0x444264
  4441f7:	ins    DWORD PTR es:[rdi],dx
  4441f8:	xor    ebp,DWORD PTR [rax+0x0]
  4441fb:	jp     0x44426a
  4441fd:	ins    DWORD PTR es:[rdi],dx
  4441fe:	xor    al,0x68
  444200:	add    BYTE PTR [rdx+0x6d],bh
  444203:	ins    DWORD PTR es:[rdi],dx
  444204:	xor    eax,0x6d7a0068
  444209:	ins    DWORD PTR es:[rdi],dx
  44420a:	ss push 0x6d6d7a00
  444210:	(bad)  
  444211:	push   0x6d6d7a00
  444216:	cmp    BYTE PTR [rax+0x0],ch
  444219:	jp     0x444288
  44421b:	ins    DWORD PTR es:[rdi],dx
  44421c:	cmp    DWORD PTR [rax+0x0],ebp
  44421f:	jp     0x44428e
  444221:	ins    DWORD PTR es:[rdi],dx
  444222:	xor    DWORD PTR [rax],esi
  444224:	push   0x6d6d7a00
  444229:	xor    DWORD PTR [rcx],esi
  44422b:	push   0x6d6d7a00
  444230:	xor    DWORD PTR [rdx],esi
  444232:	push   0x6d6d7a00
  444237:	xor    DWORD PTR [rbx],esi
  444239:	push   0x6d6d7a00
  44423e:	xor    DWORD PTR [rax+rbp*2],esi
  444241:	add    BYTE PTR [rdx+0x6d],bh
  444244:	ins    DWORD PTR es:[rdi],dx
  444245:	xor    DWORD PTR [rip+0x6d7a0068],esi        # 0x6dbe42b3
  44424b:	ins    DWORD PTR es:[rdi],dx
  44424c:	xor    DWORD PTR [rsi],esi
  44424e:	push   0x6d6d7a00
  444253:	xor    DWORD PTR [rdi],esi
  444255:	push   0x6d6d7a00
  44425a:	xor    DWORD PTR [rax],edi
  44425c:	push   0x6d6d7a00
  444261:	xor    DWORD PTR [rcx],edi
  444263:	push   0x6d6d7a00
  444268:	xor    dh,BYTE PTR [rax]
  44426a:	push   0x6d6d7a00
  44426f:	xor    dh,BYTE PTR [rcx]
  444271:	push   0x6d6d7a00
  444276:	xor    dh,BYTE PTR [rdx]
  444278:	push   0x6d6d7a00
  44427d:	xor    dh,BYTE PTR [rbx]
  44427f:	push   0x6d6d7a00
  444284:	xor    dh,BYTE PTR [rax+rbp*2]
  444287:	add    BYTE PTR [rdx+0x6d],bh
  44428a:	ins    DWORD PTR es:[rdi],dx
  44428b:	xor    dh,BYTE PTR [rip+0x6d7a0068]        # 0x6dbe42f9
  444291:	ins    DWORD PTR es:[rdi],dx
  444292:	xor    dh,BYTE PTR [rsi]
  444294:	push   0x6d6d7a00
  444299:	xor    dh,BYTE PTR [rdi]
  44429b:	push   0x6d6d7a00
  4442a0:	xor    bh,BYTE PTR [rax]
  4442a2:	push   0x6d6d7a00
  4442a7:	xor    bh,BYTE PTR [rcx]
  4442a9:	push   0x6d6d7a00
  4442ae:	xor    esi,DWORD PTR [rax]
  4442b0:	push   0x6d6d7a00
  4442b5:	xor    esi,DWORD PTR [rcx]
  4442b7:	push   0x0
  4442bc:	add    BYTE PTR [rax],al
  4442be:	add    BYTE PTR [rax],al
  4442c0:	and    eax,0x41203a73
  4442c5:	jae    0x44433a
  4442c7:	gs jb  0x44433e
  4442ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  4442d1:	(bad)  
  4442d2:	and    BYTE PTR [rsi+0x61],ah
  4442d5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e2e002e
  4442dd:	(bad)  
  4442de:	outs   dx,BYTE PTR ds:[rsi]
  4442df:	(bad)  
  4442e0:	je     0x444311
  4442e2:	js     0x44431c
  4442e4:	ss sub eax,0x67657264
  4442ea:	jae    0x44431a
  4442ec:	movsxd eax,DWORD PTR [rax]
  4442ee:	jae    0x444364
  4442f0:	(bad)  
  4442f1:	je     0x444358
  4442f3:	sub    eax,0x5f72643e
  4442f8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4442fb:	je     0x44436f
  4442fd:	outs   dx,DWORD PTR ds:[rsi]
  4442fe:	ins    BYTE PTR es:[rdi],dx
  4442ff:	pop    rdi
  444300:	ins    DWORD PTR es:[rdi],dx
  444301:	imul   esi,DWORD PTR [rdx+0x72],0x3d20726f
  444308:	cmp    eax,0x3020
  44430d:	add    BYTE PTR [rax],al
  44430f:	add    BYTE PTR [rsi+0x65],ch
  444312:	ja     0x444373
  444314:	jae    0x44438a
  444316:	(bad)  
  444317:	je     0x44437e
  444319:	sub    eax,0x5f72643e
  44431e:	ins    DWORD PTR es:[rdi],dx
  44431f:	imul   esi,DWORD PTR [rdx+0x72],0x695b726f
  444326:	pop    rbp
  444327:	and    BYTE PTR [rip+0x7473203d],bh        # 0x74b7636a
  44432d:	(bad)  
  44432e:	je     0x444395
  444330:	sub    eax,0x5f72643e
  444335:	ins    DWORD PTR es:[rdi],dx
  444336:	imul   esi,DWORD PTR [rdx+0x72],0x695b726f
  44433d:	pop    rbp
  44433e:	add    BYTE PTR [rcx+riz*2+0x74],ah
  444342:	(bad)  
  444343:	sub    eax,0x64616572
  444348:	add    BYTE PTR [rcx+riz*2+0x74],ah
  44434c:	(bad)  
  44434d:	sub    eax,0x74697277
  444352:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  444357:	(bad)  
  444358:	sub    eax,0x64616572
  44435d:	(bad)  
  44435e:	ja     0x4443d2
  444360:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6e753f3f
  444368:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  44436c:	outs   dx,BYTE PTR ds:[rsi]
  44436d:	(bad)  
  44436e:	(bad)  
  44436f:	add    BYTE PTR [rcx+0x6e],ch
  444372:	jae    0x4443e8
  444374:	jb     0x4443eb
  444376:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44437a:	outs   dx,BYTE PTR ds:[rsi]
  44437b:	sub    eax,0x63657865
  444380:	jne    0x4443f6
  444382:	add    BYTE PTR gs:[rip+0x28200073],ah        # 0x286443fc
  444389:	(bad)  
  44438a:	fs fs jb 0x4443cb
  44438e:	and    eax,0x6c202c73
  444393:	outs   dx,BYTE PTR gs:[rsi]
  444395:	cmp    eax,0x202c6425
  44439a:	je     0x444415
  44439c:	jo     0x444403
  44439e:	cmp    eax,0x297325
  4443a3:	cmp    cl,BYTE PTR [rdx]
  4443a5:	add    BYTE PTR [rax],al
  4443a7:	add    BYTE PTR [rcx],cl
  4443a9:	rex.XB
  4443aa:	rex.WRXB
  4443ab:	rex.WRX push rsp
  4443ad:	push   rdx
  4443ae:	rex.WRXB
  4443af:	rex.WR and BYTE PTR [rax],r13b
  4443b2:	rex.R push rdx
  4443b4:	(bad)  
  4443b5:	sub    DWORD PTR [rdx],edi
  4443b7:	and    BYTE PTR [rip+0x20202073],ah        # 0x20646430
  4443bd:	and    BYTE PTR [rax],ah
  4443bf:	and    BYTE PTR [rax],ah
  4443c1:	and    BYTE PTR [rax],ah
  4443c3:	and    BYTE PTR [rbx+0x54],dl
  4443c6:	push   r12
  4443c8:	push   rbp
  4443c9:	push   rbx
  4443ca:	and    BYTE PTR [rax],ch
  4443cc:	rex.R push rdx
  4443ce:	sub    DWORD PTR ss:[rdx],edi
  4443d1:	and    BYTE PTR [rip+0xa73],ah        # 0x444e4a
  4443d7:	add    BYTE PTR [rcx],cl
  4443d9:	rex.R push rdx
  4443db:	and    eax,0x61203a64
  4443e0:	fs fs jb 0x444421
  4443e4:	xor    BYTE PTR [rax+0x25],bh
  4443e7:	jae    0x444415
  4443e9:	and    BYTE PTR [rdx+0x65],dh
  4443ec:	movsxd bp,DWORD PTR cs:[rdi+0x75]
  4443f1:	outs   dx,BYTE PTR ds:[rsi]
  4443f2:	je     0x444431
  4443f4:	and    eax,0x44202064
  4443f9:	push   rdx
  4443fa:	and    eax,0x61203a64
  4443ff:	fs fs jb 0x444440
  444403:	xor    BYTE PTR [rax+0x25],bh
  444406:	jae    0x444434
  444408:	and    BYTE PTR [rdx+0x65],dh
  44440b:	movsxd bp,DWORD PTR cs:[rdi+0x75]
  444410:	outs   dx,BYTE PTR ds:[rsi]
  444411:	je     0x444450
  444413:	and    eax,0xa64
  444418:	push   rsp
  444419:	push   0x33692065
  44441e:	cmp    BYTE PTR [rsi],dh
  444420:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  444424:	jae    0x444494
  444426:	(bad)  
  444427:	je     0x444449
  444429:	jae    0x4444a0
  44442b:	jo     0x44449d
  44442d:	outs   dx,DWORD PTR ds:[rsi]
  44442e:	jb     0x4444a4
  444430:	and    BYTE PTR [rcx+riz*2+0x74],ah
  444434:	(bad)  
  444435:	sub    eax,0x64616572
  44443a:	and    BYTE PTR [rdi+0x61],dh
  44443d:	je     0x4444a2
  44443f:	push   0x6e696f70
  444444:	je     0x4444b9
  444446:	or     al,BYTE PTR cs:[rax]
  444449:	add    BYTE PTR [rax],al
  44444b:	add    BYTE PTR [rax],al
  44444d:	add    BYTE PTR [rax],al
  44444f:	add    BYTE PTR [rcx+0x6e],cl
  444452:	jbe    0x4444b5
  444454:	ins    BYTE PTR es:[rdi],dx
  444455:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x77647261
  44445d:	(bad)  
  44445e:	jb     0x4444c5
  444460:	and    BYTE PTR [rdx+0x72],ah
  444463:	gs (bad) 
  444465:	imul   esi,DWORD PTR [rax+0x6f],0x69
  444469:	outs   dx,BYTE PTR ds:[rsi]
  44446a:	je     0x44448c
  44446c:	je     0x4444e7
  44446e:	jo     0x4444d5
  444470:	and    BYTE PTR [rip+0x6e692064],ah        # 0x6ead64da
  444476:	and    BYTE PTR [rax+0x38],bh
  444479:	ss pop rdi
  44447b:	ins    BYTE PTR es:[rdi],dx
  44447c:	outs   dx,BYTE PTR gs:[rsi]
  44447e:	addr32 je 0x4444e9
  444481:	pop    rdi
  444482:	(bad)  
  444483:	outs   dx,BYTE PTR ds:[rsi]
  444484:	fs pop rdi
  444486:	jb     0x4444ff
  444488:	pop    rdi
  444489:	(bad)  
  44448a:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x6e49000a
  444492:	jbe    0x4444f5
  444494:	ins    BYTE PTR es:[rdi],dx
  444495:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x77647261
  44449d:	(bad)  
  44449e:	jb     0x444505
  4444a0:	and    BYTE PTR [rdx+0x72],ah
  4444a3:	gs (bad) 
  4444a5:	imul   esi,DWORD PTR [rax+0x6f],0x69
  4444a9:	outs   dx,BYTE PTR ds:[rsi]
  4444aa:	je     0x4444cc
  4444ac:	ins    BYTE PTR es:[rdi],dx
  4444ad:	outs   dx,BYTE PTR gs:[rsi]
  4444af:	addr32 je 0x44451a
  4444b2:	and    BYTE PTR [rip+0x6e692064],ah        # 0x6ead651c
  4444b8:	and    BYTE PTR [rax+0x38],bh
  4444bb:	ss pop rdi
  4444bd:	ins    BYTE PTR es:[rdi],dx
  4444be:	outs   dx,BYTE PTR gs:[rsi]
  4444c0:	addr32 je 0x44452b
  4444c3:	pop    rdi
  4444c4:	(bad)  
  4444c5:	outs   dx,BYTE PTR ds:[rsi]
  4444c6:	fs pop rdi
  4444c8:	jb     0x444541
  4444ca:	pop    rdi
  4444cb:	(bad)  
  4444cc:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x6e69000a
  4444d4:	jae    0x44453b
  4444d6:	jb     0x44454c
  4444d8:	pop    rdi
  4444d9:	ja     0x44453c
  4444db:	je     0x444540
  4444dd:	push   0x6e696f70
  4444e2:	je     0x4444e4
  4444e4:	jb     0x44454b
  4444e6:	ins    DWORD PTR es:[rdi],dx
  4444e7:	outs   dx,DWORD PTR ds:[rsi]
  4444e8:	jbe    0x44454f
  4444ea:	pop    rdi
  4444eb:	ja     0x44454e
  4444ed:	je     0x444552
  4444ef:	push   0x6e696f70
  4444f4:	je     0x4444f6
  4444f6:	ja     0x444559
  4444f8:	je     0x44455d
  4444fa:	push   0x6e696f70
  4444ff:	je     0x444560
  444501:	push   0x73007469
  444506:	je     0x444577
  444508:	jo     0x44457a
  44450a:	gs fs pop rdi
  44450d:	fs (bad) 
  44450f:	je     0x444572
  444511:	pop    rdi
  444512:	(bad)  
  444513:	fs fs jb 0x444517
	...
  44453f:	add    BYTE PTR [rsi+0x6f],dh
  444542:	imul   esp,DWORD PTR [rax+riz*1+0x78],0x755f3638
  44454a:	jo     0x4445b0
  44454c:	(bad)  
  44454d:	je     0x4445b4
  44454f:	pop    rdi
  444550:	imul   ebp,DWORD PTR [rsi+0x66],0x6f697265
  444557:	jb     0x4445b8
  444559:	fs gs (bad) 
  44455c:	jne    0x4445c5
  44455e:	pop    rdi
  44455f:	jb     0x4445c6
  444561:	addr32 jae 0x44458c
  444564:	js     0x44459e
  444566:	ss pop rdi
  444568:	fs gs (bad) 
  44456b:	jne    0x4445d4
  44456d:	pop    rdi
  44456e:	jb     0x4445d5
  444570:	addr32 pop rdi
  444572:	jae    0x4445e8
  444574:	(bad)  
  444575:	je     0x4445dc
  444577:	sub    ch,BYTE PTR [rax+riz*1]
  44457a:	js     0x4445b4
  44457c:	ss pop rdi
  44457e:	fs gs (bad) 
  444581:	jne    0x4445ea
  444583:	pop    rdi
  444584:	jb     0x4445eb
  444586:	addr32 pop rdi
  444588:	jae    0x4445fe
  44458a:	(bad)  
  44458b:	je     0x4445f2
  44458d:	sub    ch,BYTE PTR [rcx]
	...
  4445bf:	add    BYTE PTR [rcx+0x6e],ch
  4445c2:	je     0x4445e4
  4445c4:	js     0x4445fe
  4445c6:	ss pop rdi
  4445c8:	jb     0x44462f
  4445ca:	ins    DWORD PTR es:[rdi],dx
  4445cb:	outs   dx,DWORD PTR ds:[rsi]
  4445cc:	jbe    0x444633
  4445ce:	pop    rdi
  4445cf:	(bad)  
  4445d0:	ins    BYTE PTR es:[rdi],dx
  4445d1:	imul   esp,DWORD PTR [rdi+0x6e],0x775f6465
  4445d8:	(bad)  
  4445d9:	je     0x44463e
  4445db:	push   0x6e696f70
  4445e0:	je     0x44460a
  4445e2:	js     0x44461c
  4445e4:	ss pop rdi
  4445e6:	fs gs (bad) 
  4445e9:	jne    0x444652
  4445eb:	pop    rdi
  4445ec:	jb     0x444653
  4445ee:	addr32 pop rdi
  4445f0:	jae    0x444666
  4445f2:	(bad)  
  4445f3:	je     0x44465a
  4445f5:	sub    ch,BYTE PTR [rax+riz*1]
  4445f8:	rex.XB
  4445f9:	rex.WRXB push r10
  4445fb:	rex.RB pop r15
  4445fd:	rex.B
  4445fe:	rex.R
  4445ff:	rex.R push rdx
  444601:	sub    al,0x20
  444603:	jne    0x444673
  444605:	jae    0x444670
  444607:	outs   dx,BYTE PTR ds:[esi]
  444609:	gs and BYTE PTR fs:[rcx+0x6e],ch
  44460e:	je     0x444639
	...
  444640:	add    DWORD PTR [rax],eax
  444642:	add    BYTE PTR [rax],al
  444644:	add    DWORD PTR [rax],eax
  444646:	add    BYTE PTR [rax],al
  444648:	add    DWORD PTR [rax],eax
  44464a:	add    BYTE PTR [rax],al
  44464c:	add    DWORD PTR [rax],eax
  44464e:	add    BYTE PTR [rax],al
  444650:	add    DWORD PTR [rax],eax
  444652:	add    BYTE PTR [rax],al
  444654:	add    DWORD PTR [rax],eax
  444656:	add    BYTE PTR [rax],al
  444658:	add    DWORD PTR [rax],eax
  44465a:	add    BYTE PTR [rax],al
  44465c:	add    DWORD PTR [rax],eax
  44465e:	add    BYTE PTR [rax],al
  444660:	add    al,BYTE PTR [rax]
  444662:	add    BYTE PTR [rax],al
  444664:	add    DWORD PTR [rax],eax
  444666:	add    BYTE PTR [rax],al
  444668:	add    al,BYTE PTR [rax]
  44466a:	add    BYTE PTR [rax],al
  44466c:	add    DWORD PTR [rax],eax
  44466e:	add    BYTE PTR [rax],al
  444670:	add    al,BYTE PTR [rax]
  444672:	add    BYTE PTR [rax],al
  444674:	add    DWORD PTR [rax],eax
  444676:	add    BYTE PTR [rax],al
  444678:	add    al,BYTE PTR [rax]
  44467a:	add    BYTE PTR [rax],al
  44467c:	add    DWORD PTR [rax],eax
  44467e:	add    BYTE PTR [rax],al
  444680:	add    al,BYTE PTR [rax]
  444682:	add    BYTE PTR [rax],al
  444684:	add    DWORD PTR [rax],eax
  444686:	add    BYTE PTR [rax],al
  444688:	add    al,BYTE PTR [rax]
  44468a:	add    BYTE PTR [rax],al
  44468c:	add    DWORD PTR [rax],eax
  44468e:	add    BYTE PTR [rax],al
  444690:	add    al,BYTE PTR [rax]
  444692:	add    BYTE PTR [rax],al
  444694:	add    DWORD PTR [rax],eax
  444696:	add    BYTE PTR [rax],al
  444698:	add    al,BYTE PTR [rax]
  44469a:	add    BYTE PTR [rax],al
  44469c:	add    DWORD PTR [rax],eax
  44469e:	add    BYTE PTR [rax],al
  4446a0:	add    al,0x0
  4446a2:	add    BYTE PTR [rax],al
  4446a4:	add    DWORD PTR [rax],eax
  4446a6:	add    BYTE PTR [rax],al
  4446a8:	add    al,BYTE PTR [rax]
  4446aa:	add    BYTE PTR [rax],al
  4446ac:	add    DWORD PTR [rax],eax
  4446ae:	add    BYTE PTR [rax],al
  4446b0:	add    al,0x0
  4446b2:	add    BYTE PTR [rax],al
  4446b4:	add    DWORD PTR [rax],eax
  4446b6:	add    BYTE PTR [rax],al
  4446b8:	add    al,BYTE PTR [rax]
  4446ba:	add    BYTE PTR [rax],al
  4446bc:	add    DWORD PTR [rax],eax
  4446be:	add    BYTE PTR [rax],al
  4446c0:	add    al,0x0
  4446c2:	add    BYTE PTR [rax],al
  4446c4:	add    DWORD PTR [rax],eax
  4446c6:	add    BYTE PTR [rax],al
  4446c8:	add    al,BYTE PTR [rax]
  4446ca:	add    BYTE PTR [rax],al
  4446cc:	add    DWORD PTR [rax],eax
  4446ce:	add    BYTE PTR [rax],al
  4446d0:	add    al,0x0
  4446d2:	add    BYTE PTR [rax],al
  4446d4:	add    DWORD PTR [rax],eax
  4446d6:	add    BYTE PTR [rax],al
  4446d8:	add    al,BYTE PTR [rax]
  4446da:	add    BYTE PTR [rax],al
  4446dc:	add    DWORD PTR [rax],eax
  4446de:	add    BYTE PTR [rax],al
  4446e0:	add    al,0x0
  4446e2:	add    BYTE PTR [rax],al
  4446e4:	add    DWORD PTR [rax],eax
  4446e6:	add    BYTE PTR [rax],al
  4446e8:	add    al,BYTE PTR [rax]
  4446ea:	add    BYTE PTR [rax],al
  4446ec:	add    DWORD PTR [rax],eax
  4446ee:	add    BYTE PTR [rax],al
  4446f0:	add    al,0x0
  4446f2:	add    BYTE PTR [rax],al
  4446f4:	add    DWORD PTR [rax],eax
  4446f6:	add    BYTE PTR [rax],al
  4446f8:	add    al,BYTE PTR [rax]
  4446fa:	add    BYTE PTR [rax],al
  4446fc:	add    DWORD PTR [rax],eax
  4446fe:	add    BYTE PTR [rax],al
  444700:	add    al,0x0
  444702:	add    BYTE PTR [rax],al
  444704:	add    DWORD PTR [rax],eax
  444706:	add    BYTE PTR [rax],al
  444708:	add    al,BYTE PTR [rax]
  44470a:	add    BYTE PTR [rax],al
  44470c:	add    DWORD PTR [rax],eax
  44470e:	add    BYTE PTR [rax],al
  444710:	add    al,0x0
  444712:	add    BYTE PTR [rax],al
  444714:	add    DWORD PTR [rax],eax
  444716:	add    BYTE PTR [rax],al
  444718:	add    al,BYTE PTR [rax]
  44471a:	add    BYTE PTR [rax],al
  44471c:	add    DWORD PTR [rax],eax
  44471e:	add    BYTE PTR [rax],al
  444720:	or     BYTE PTR [rax],al
  444722:	add    BYTE PTR [rax],al
  444724:	add    DWORD PTR [rax],eax
  444726:	add    BYTE PTR [rax],al
  444728:	add    al,BYTE PTR [rax]
  44472a:	add    BYTE PTR [rax],al
  44472c:	add    DWORD PTR [rax],eax
  44472e:	add    BYTE PTR [rax],al
  444730:	add    al,0x0
  444732:	add    BYTE PTR [rax],al
  444734:	add    DWORD PTR [rax],eax
  444736:	add    BYTE PTR [rax],al
  444738:	add    al,BYTE PTR [rax]
  44473a:	add    BYTE PTR [rax],al
  44473c:	add    DWORD PTR [rax],eax
  44473e:	add    BYTE PTR [rax],al
  444740:	jae    0x4447b6
  444742:	xor    BYTE PTR [rax],al
  444744:	imul   bp,WORD PTR [rdi+0x66],0x66
  44474a:	outs   dx,WORD PTR ds:[rsi]
  44474c:	outs   dx,DWORD PTR ds:[rsi]
  44474d:	data16 data16 add BYTE PTR [rsi+0x6f],ah
  444752:	jo     0x444754
  444754:	movsxd si,DWORD PTR [rdx+rsi*2+0x6c]
  444759:	add    BYTE PTR [rsi+0x73],ah
  44475c:	je     0x4447bf
  44475e:	je     0x444760
  444760:	data16 je 0x4447c4
  444763:	add    BYTE PTR [esi+0x69],ah
  444767:	jae    0x4447ce
  444769:	add    BYTE PTR [esi+0x6f],ah
  44476d:	jae    0x4447d4
  44476f:	add    BYTE PTR [eax+0x6d],bh
  444773:	ins    DWORD PTR es:[rdi],dx
  444774:	xor    BYTE PTR [rax],al
  444776:	ins    DWORD PTR es:[rdi],dx
  444777:	js     0x4447dc
  444779:	jae    0x4447ed
  44477b:	add    BYTE PTR [rcx+0x6d],bh
  44477e:	ins    DWORD PTR es:[rdi],dx
  44477f:	xor    BYTE PTR [rax+0x0],ch
  444782:	(bad)  
  444783:	outs   dx,BYTE PTR ds:[rsi]
  444784:	xor    BYTE PTR fs:[rdx+0x61],dh
  444788:	ja     0x44478a
  44478a:	(bad)  
  44478b:	outs   dx,BYTE PTR ds:[rsi]
  44478c:	movsxd esp,DWORD PTR fs:[rsi+0x67]
  444790:	jne    0x444792
  444792:	imul   esi,DWORD PTR [rax],0x0
  444795:	jp     0x444804
  444797:	ins    DWORD PTR es:[rdi],dx
  444798:	xor    BYTE PTR [rax+0x0],ch
  44479b:	jp     0x44480a
  44479d:	ins    DWORD PTR es:[rdi],dx
  44479e:	xor    DWORD PTR [rsi],esi
  4447a0:	push   0x6d6d7800
  4447a5:	xor    DWORD PTR [rsi],esi
  4447a7:	add    BYTE PTR [rcx+0x6d],bh
  4447aa:	ins    DWORD PTR es:[rdi],dx
  4447ab:	xor    DWORD PTR [rsi],esi
  4447ad:	push   0x454b0000
  4447b2:	push   rdx
  4447b3:	rex.WRX
  4447b4:	rex.RB
  4447b5:	xor    r14,QWORD PTR [rdx]
  4447b8:	cs rex.R
  4447ba:	rex.WR
  4447bb:	rex.WR add BYTE PTR [rdi+0x65],r8b
  4447bf:	outs   dx,BYTE PTR ds:[rsi]
  4447c0:	gs jb  0x444824
  4447c3:	je     0x44482a
  4447c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4447c7:	outs   dx,BYTE PTR ds:[rsi]
  4447c8:	jae    0x444839
  4447ca:	ins    BYTE PTR es:[rdi],dx
  4447cb:	gs rex.XB je 0x444841
  4447cf:	ins    BYTE PTR es:[rdi],dx
  4447d0:	rex.RB jbe 0x444838
  4447d3:	outs   dx,BYTE PTR ds:[rsi]
  4447d4:	je     0x4447d6
  4447d6:	rex.R
  4447d7:	gs (bad) 
  4447d9:	jne    0x444842
  4447db:	rex.X jb 0x444843
  4447de:	(bad)  
  4447df:	imul   edx,DWORD PTR [rax+0x72],0x6f
  4447e3:	movsxd esp,DWORD PTR [rbp+0x73]
  4447e6:	jae    0x4447e8
  4447e8:	outs   dx,BYTE PTR ds:[rsi]
  4447e9:	je     0x44484f
  4447eb:	ins    BYTE PTR es:[rdi],dx
  4447ec:	ins    BYTE PTR es:[rdi],dx
  4447ed:	cs fs ins BYTE PTR es:[rdi],dx
  4447f0:	ins    BYTE PTR es:[rdi],dx
  4447f1:	add    BYTE PTR [rax+0x73],dh
  4447f4:	(bad)  
  4447f5:	jo     0x444860
  4447f7:	cs fs ins BYTE PTR es:[rdi],dx
  4447fa:	ins    BYTE PTR es:[rdi],dx
  4447fb:	add    BYTE PTR [rbp+0x6e],al
  4447fe:	jne    0x44486d
  444800:	push   rax
  444801:	jb     0x444872
  444803:	movsxd esp,DWORD PTR [rbp+0x73]
  444806:	jae    0x444855
  444808:	outs   dx,DWORD PTR ds:[rsi]
  444809:	fs jne 0x444878
  44480c:	gs jae 0x44480f
  44480f:	rex.RXB
  444810:	gs je  0x444860
  444813:	outs   dx,DWORD PTR ds:[rsi]
  444814:	fs jne 0x444883
  444817:	rex.WB outs dx,BYTE PTR gs:[rsi]
  44481a:	outs   dx,WORD PTR ds:[rsi]
  44481c:	jb     0x44488b
  44481e:	(bad)  
  44481f:	je     0x44488a
  444821:	outs   dx,DWORD PTR ds:[rsi]
  444822:	outs   dx,BYTE PTR ds:[rsi]
  444823:	add    BYTE PTR [rdi+0x65],al
  444826:	je     0x444875
  444828:	outs   dx,DWORD PTR ds:[rsi]
  444829:	fs jne 0x444898
  44482c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x45656d61
  444836:	js     0x444879
  444838:	add    BYTE PTR [rbx+0x59],ah
  44483b:	add    BYTE PTR [eip+0x6e750073],ah        # 0x6eb948b5
  444842:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  444846:	outs   dx,BYTE PTR ds:[rsi]
  444847:	and    BYTE PTR [rdi+0x69],dh
  44484a:	outs   dx,BYTE PTR ds:[rsi]
  44484b:	xor    esi,DWORD PTR [rdx]
  44484d:	and    BYTE PTR [rbp+0x72],ah
  444850:	jb     0x4448c1
  444852:	jb     0x444874
  444854:	sub    BYTE PTR [rip+0x2975],ah        # 0x4471cf
  44485a:	add    BYTE PTR [rax],al
  44485c:	add    BYTE PTR [rax],al
  44485e:	add    BYTE PTR [rax],al
  444860:	ja     0x4448c3
  444862:	jb     0x4448d2
  444864:	imul   ebp,DWORD PTR [rsi+0x67],0x7553203a
  44486b:	jae    0x4448dd
  44486d:	outs   dx,BYTE PTR gs:[rsi]
  44486f:	fs push rsp
  444871:	push   0x64616572
  444876:	and    BYTE PTR [rsi+0x61],ah
  444879:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  444881:	je     0x4448eb
  444883:	jb     0x4448ea
  444885:	(bad)  
  444886:	fs pop rdi
  444888:	jb     0x4448ef
  44488a:	movsxd ebp,DWORD PTR [rax+riz*1]
  44488d:	sub    BYTE PTR [rbp+0x72],ah
  444890:	jb     0x444901
  444892:	jb     0x4448b4
  444894:	and    eax,0x203a2964
  444899:	and    eax,0x66000a73
  44489e:	(bad)  
  44489f:	imul   esp,DWORD PTR [rbp+0x5f],0x62
  4448a3:	jb     0x44490a
  4448a5:	(bad)  
  4448a6:	imul   esi,DWORD PTR [rax+0x6f],0x69
  4448aa:	outs   dx,BYTE PTR ds:[rsi]
  4448ab:	je     0x44490c
  4448ad:	gs jbe 0x444915
  4448b0:	outs   dx,BYTE PTR ds:[rsi]
  4448b1:	je     0x4448bd
  4448b3:	add    BYTE PTR [rax],al
  4448b5:	add    BYTE PTR [rax],al
  4448b7:	add    BYTE PTR [rdi+0x64],ah
  4448ba:	(bad)
  4448bf:	gs jb  0x4448fc
  4448c2:	and    BYTE PTR [rbx+0x65],ch
  4448c5:	jb     0x444935
  4448c7:	gs ins BYTE PTR es:[rdi],dx
  4448c9:	and    BYTE PTR [rbp+0x76],ah
  4448cc:	outs   dx,BYTE PTR gs:[rsi]
  4448ce:	je     0x4448f0
  4448d0:	rex.XB push r10
  4448d2:	rex.RB
  4448d3:	push   r12
  4448d5:	rex.RB pop r15
  4448d7:	push   rsp
  4448d8:	rex.W push rdx
  4448da:	rex.RB
  4448db:	rex.B
  4448dc:	rex.R pop rdi
  4448de:	rex.R
  4448df:	rex.RB
  4448e0:	rex.X push rbp
  4448e2:	rex.RXB pop r15
  4448e4:	rex.RB push r14
  4448e6:	rex.RB
  4448e7:	rex.WRX push rsp
  4448e9:	and    BYTE PTR [rsi+0x6f],ah
  4448ec:	jb     0x44490e
  4448ee:	jo     0x444959
  4448f0:	fs cmp eax,0x74207525
  4448f6:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0xa2978
  4448fe:	add    BYTE PTR [rax],al
  444900:	(bad)
  444907:	gs jb  0x444944
  44490a:	and    BYTE PTR [rbx+0x65],ch
  44490d:	jb     0x44497d
  44490f:	gs ins BYTE PTR es:[rdi],dx
  444911:	and    BYTE PTR [rbp+0x76],ah
  444914:	outs   dx,BYTE PTR gs:[rsi]
  444916:	je     0x444938
  444918:	rex.RB pop r8
  44491a:	rex.WB push r12
  44491c:	pop    rdi
  44491d:	push   rsp
  44491e:	rex.W push rdx
  444920:	rex.RB
  444921:	rex.B
  444922:	rex.R pop rdi
  444924:	rex.R
  444925:	rex.RB
  444926:	rex.X push rbp
  444928:	rex.RXB pop r15
  44492a:	rex.RB push r14
  44492c:	rex.RB
  44492d:	rex.WRX push rsp
  44492f:	and    BYTE PTR [rsi+0x6f],ah
  444932:	jb     0x444954
  444934:	jo     0x44499f
  444936:	fs cmp eax,0x74207525
  44493c:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0xa78
  444944:	add    BYTE PTR [rax],al
  444946:	add    BYTE PTR [rax],al
  444948:	(bad)
  44494f:	gs jb  0x44498c
  444952:	and    BYTE PTR [rbx+0x65],ch
  444955:	jb     0x4449c5
  444957:	gs ins BYTE PTR es:[rdi],dx
  444959:	and    BYTE PTR [rbp+0x76],ah
  44495c:	outs   dx,BYTE PTR gs:[rsi]
  44495e:	je     0x444980
  444960:	rex.XB push r10
  444962:	rex.RB
  444963:	push   r12
  444965:	rex.RB pop r15
  444967:	push   rax
  444968:	push   rdx
  444969:	rex.WRXB
  44496a:	rex.XB
  44496b:	rex.RB push r11
  44496d:	push   rbx
  44496e:	pop    rdi
  44496f:	rex.R
  444970:	rex.RB
  444971:	rex.X push rbp
  444973:	rex.RXB pop r15
  444975:	rex.RB push r14
  444977:	rex.RB
  444978:	rex.WRX push rsp
  44497a:	and    BYTE PTR [rsi+0x6f],ah
  44497d:	jb     0x44499f
  44497f:	jo     0x4449ea
  444981:	fs cmp eax,0x74207525
  444987:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0x4d000a78
  44498f:	(bad)  
  444990:	imul   ebp,DWORD PTR [rsi+0x20],0x63657865
  444997:	jne    0x444a0d
  444999:	(bad)  
  44499a:	(bad)  
  44499b:	ins    BYTE PTR es:[rdi],dx
  44499c:	add    BYTE PTR gs:[rax],al
  44499f:	add    BYTE PTR [rdi+0x64],ah
  4449a2:	(bad)
  4449a7:	gs jb  0x4449e4
  4449aa:	and    BYTE PTR [rbx+0x65],ch
  4449ad:	jb     0x444a1d
  4449af:	gs ins BYTE PTR es:[rdi],dx
  4449b1:	and    BYTE PTR [rbp+0x76],ah
  4449b4:	outs   dx,BYTE PTR gs:[rsi]
  4449b6:	je     0x4449d8
  4449b8:	rex.RB pop r8
  4449ba:	rex.WB push r12
  4449bc:	pop    rdi
  4449bd:	push   rax
  4449be:	push   rdx
  4449bf:	rex.WRXB
  4449c0:	rex.XB
  4449c1:	rex.RB push r11
  4449c3:	push   rbx
  4449c4:	pop    rdi
  4449c5:	rex.R
  4449c6:	rex.RB
  4449c7:	rex.X push rbp
  4449c9:	rex.RXB pop r15
  4449cb:	rex.RB push r14
  4449cd:	rex.RB
  4449ce:	rex.WRX push rsp
  4449d0:	and    BYTE PTR [rsi+0x6f],ah
  4449d3:	jb     0x4449f5
  4449d5:	jo     0x444a40
  4449d7:	fs cmp eax,0x74207525
  4449dd:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0xa78
  4449e5:	add    BYTE PTR [rax],al
  4449e7:	add    BYTE PTR [rdi+0x64],ah
  4449ea:	(bad)
  4449ef:	gs jb  0x444a2c
  4449f2:	and    BYTE PTR [rbx+0x65],ch
  4449f5:	jb     0x444a65
  4449f7:	gs ins BYTE PTR es:[rdi],dx
  4449f9:	and    BYTE PTR [rbp+0x76],ah
  4449fc:	outs   dx,BYTE PTR gs:[rsi]
  4449fe:	je     0x444a20
  444a00:	rex.WR
  444a01:	rex.WRXB
  444a02:	rex.B
  444a03:	rex.R pop rdi
  444a05:	rex.R
  444a06:	rex.WR
  444a07:	rex.WR pop rdi
  444a09:	rex.R
  444a0a:	rex.RB
  444a0b:	rex.X push rbp
  444a0d:	rex.RXB pop r15
  444a0f:	rex.RB push r14
  444a11:	rex.RB
  444a12:	rex.WRX push rsp
  444a14:	and    BYTE PTR [rsi+0x6f],ah
  444a17:	jb     0x444a39
  444a19:	jo     0x444a84
  444a1b:	fs cmp eax,0x74207525
  444a21:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0x67000a78
  444a29:	(bad)
  444a2f:	gs jb  0x444a6c
  444a32:	and    BYTE PTR [rbx+0x65],ch
  444a35:	jb     0x444aa5
  444a37:	gs ins BYTE PTR es:[rdi],dx
  444a39:	and    BYTE PTR [rbp+0x76],ah
  444a3c:	outs   dx,BYTE PTR gs:[rsi]
  444a3e:	je     0x444a60
  444a40:	push   rbp
  444a41:	rex.WRX
  444a42:	rex.WR
  444a43:	rex.WRXB
  444a44:	rex.B
  444a45:	rex.R pop rdi
  444a47:	rex.R
  444a48:	rex.WR
  444a49:	rex.WR pop rdi
  444a4b:	rex.R
  444a4c:	rex.RB
  444a4d:	rex.X push rbp
  444a4f:	rex.RXB pop r15
  444a51:	rex.RB push r14
  444a53:	rex.RB
  444a54:	rex.WRX push rsp
  444a56:	and    BYTE PTR [rsi+0x6f],ah
  444a59:	jb     0x444a7b
  444a5b:	jo     0x444ac6
  444a5d:	fs cmp eax,0x74207525
  444a63:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0xa78
  444a6b:	add    BYTE PTR [rax],al
  444a6d:	add    BYTE PTR [rax],al
  444a6f:	add    BYTE PTR [rdi+0x64],ah
  444a72:	(bad)
  444a77:	gs jb  0x444ab4
  444a7a:	and    BYTE PTR [rbx+0x65],ch
  444a7d:	jb     0x444aed
  444a7f:	gs ins BYTE PTR es:[rdi],dx
  444a81:	and    BYTE PTR [rbp+0x76],ah
  444a84:	outs   dx,BYTE PTR gs:[rsi]
  444a86:	je     0x444aa8
  444a88:	rex.RB pop r8
  444a8a:	rex.XB
  444a8b:	rex.RB push r8
  444a8d:	push   rsp
  444a8e:	rex.WB
  444a8f:	rex.WRXB
  444a90:	rex.WRX pop rdi
  444a92:	rex.R
  444a93:	rex.RB
  444a94:	rex.X push rbp
  444a96:	rex.RXB pop r15
  444a98:	rex.RB push r14
  444a9a:	rex.RB
  444a9b:	rex.WRX push rsp
  444a9d:	and    BYTE PTR [rsi+0x6f],ah
  444aa0:	jb     0x444ac2
  444aa2:	jo     0x444b0d
  444aa4:	fs cmp eax,0x74207525
  444aaa:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0x45000a78
  444ab2:	pop    rax
  444ab3:	rex.XB
  444ab4:	rex.RB push r8
  444ab6:	push   rsp
  444ab7:	rex.WB
  444ab8:	rex.WRXB
  444ab9:	rex.WRX pop rdi
  444abb:	rex.B
  444abc:	rex.XB
  444abd:	rex.XB
  444abe:	rex.RB push r11
  444ac0:	push   rbx
  444ac1:	pop    rdi
  444ac2:	push   rsi
  444ac3:	rex.WB
  444ac4:	rex.WRXB
  444ac5:	rex.WR
  444ac6:	push   r12
  444ac8:	rex.WB
  444ac9:	rex.WRXB
  444aca:	rex.WRX add BYTE PTR [rbx+0x54],r10b
  444ace:	push   r12
  444ad0:	push   rbp
  444ad1:	push   rbx
  444ad2:	pop    rdi
  444ad3:	push   rbx
  444ad4:	push   rsp
  444ad5:	rex.B
  444ad6:	rex.XB
  444ad7:	rex.WXB pop r15
  444ad9:	rex.WRXB push r14
  444adb:	rex.RB push r10
  444add:	rex.RX
  444ade:	rex.WR
  444adf:	rex.WRXB push r15
  444ae1:	add    BYTE PTR [rbx+0x54],dl
  444ae4:	push   r12
  444ae6:	push   rbp
  444ae7:	push   rbx
  444ae8:	pop    rdi
  444ae9:	rex.RX
  444aea:	rex.WR
  444aeb:	rex.WRXB
  444aec:	push   r12
  444aee:	pop    rdi
  444aef:	rex.R
  444af0:	rex.RB
  444af1:	rex.WRX
  444af2:	rex.WRXB push r10
  444af4:	rex.WRB
  444af5:	rex.B
  444af6:	rex.WR pop rdi
  444af8:	rex.WRXB push r8
  444afa:	rex.RB push r10
  444afc:	rex.B
  444afd:	rex.WRX
  444afe:	add    BYTE PTR [rbp+0x58],r8b
  444b02:	rex.XB
  444b03:	rex.RB push r8
  444b05:	push   rsp
  444b06:	rex.WB
  444b07:	rex.WRXB
  444b08:	rex.WRX pop rdi
  444b0a:	push   r10
  444b0c:	push   rdx
  444b0d:	pop    r9
  444b0f:	pop    rdi
  444b10:	rex.X
  444b11:	rex.WRXB push r13
  444b13:	rex.WRX
  444b14:	rex.R push rbx
  444b16:	pop    rdi
  444b17:	rex.RB pop r8
  444b19:	rex.XB
  444b1a:	rex.RB
  444b1b:	rex.RB
  444b1c:	rex.R
  444b1d:	rex.RB
  444b1e:	add    BYTE PTR [rbx+0x54],r10b
  444b22:	push   r12
  444b24:	push   rbp
  444b25:	push   rbx
  444b26:	pop    rdi
  444b27:	rex.RX
  444b28:	rex.WR
  444b29:	rex.WRXB
  444b2a:	push   r12
  444b2c:	pop    rdi
  444b2d:	rex.WB
  444b2e:	rex.WRX
  444b2f:	rex.RB pop r8
  444b31:	rex.B
  444b32:	rex.XB push r12
  444b34:	pop    rdi
  444b35:	push   rdx
  444b36:	rex.RB push r11
  444b38:	push   rbp
  444b39:	rex.WR push rsp
  444b3b:	add    BYTE PTR [rax],al
  444b3d:	add    BYTE PTR [rax],al
  444b3f:	add    BYTE PTR [rbx+0x54],dl
  444b42:	push   r12
  444b44:	push   rbp
  444b45:	push   rbx
  444b46:	pop    rdi
  444b47:	rex.RX
  444b48:	rex.WR
  444b49:	rex.WRXB
  444b4a:	push   r12
  444b4c:	pop    rdi
  444b4d:	rex.WB
  444b4e:	rex.WRX push rsi
  444b50:	rex.B
  444b51:	rex.WR
  444b52:	rex.WB
  444b53:	rex.R pop rdi
  444b55:	rex.WRXB push r8
  444b57:	rex.RB push r10
  444b59:	push   r12
  444b5b:	rex.WB
  444b5c:	rex.WRXB
  444b5d:	rex.WRX add BYTE PTR [rbx+0x54],r10b
  444b61:	push   r12
  444b63:	push   rbp
  444b64:	push   rbx
  444b65:	pop    rdi
  444b66:	rex.RX
  444b67:	rex.WR
  444b68:	rex.WRXB
  444b69:	push   r12
  444b6b:	pop    rdi
  444b6c:	rex.WRXB push r14
  444b6e:	rex.RB push r10
  444b70:	rex.RX
  444b71:	rex.WR
  444b72:	rex.WRXB push r15
  444b74:	add    BYTE PTR [rbx+0x54],dl
  444b77:	push   r12
  444b79:	push   rbp
  444b7a:	push   rbx
  444b7b:	pop    rdi
  444b7c:	rex.RX
  444b7d:	rex.WR
  444b7e:	rex.WRXB
  444b7f:	push   r12
  444b81:	pop    rdi
  444b82:	push   rbx
  444b83:	push   rsp
  444b84:	rex.B
  444b85:	rex.XB
  444b86:	rex.WXB pop r15
  444b88:	rex.XB
  444b89:	rex.W
  444b8a:	rex.RB
  444b8b:	rex.XB
  444b8c:	rex.WXB add BYTE PTR [r11+0x54],dl
  444b90:	push   r12
  444b92:	push   rbp
  444b93:	push   rbx
  444b94:	pop    rdi
  444b95:	rex.RX
  444b96:	rex.WR
  444b97:	rex.WRXB
  444b98:	push   r12
  444b9a:	pop    rdi
  444b9b:	push   rbp
  444b9c:	rex.WRX
  444b9d:	rex.R
  444b9e:	rex.RB push r10
  444ba0:	rex.RX
  444ba1:	rex.WR
  444ba2:	rex.WRXB push r15
  444ba4:	add    BYTE PTR [rbx+0x54],dl
  444ba7:	push   r12
  444ba9:	push   rbp
  444baa:	push   rbx
  444bab:	pop    rdi
  444bac:	rex.RX
  444bad:	rex.WR
  444bae:	rex.WRXB
  444baf:	push   r12
  444bb1:	pop    rdi
  444bb2:	rex.R
  444bb3:	rex.WB push r14
  444bb5:	rex.WB
  444bb6:	rex.R
  444bb7:	rex.RB pop r15
  444bb9:	rex.X pop rcx
  444bbb:	pop    rdi
  444bbc:	pop    rdx
  444bbd:	rex.RB push r10
  444bbf:	rex.WRXB add BYTE PTR [r11+0x54],r10b
  444bc3:	push   r12
  444bc5:	push   rbp
  444bc6:	push   rbx
  444bc7:	pop    rdi
  444bc8:	rex.WB
  444bc9:	rex.WRX push rsp
  444bcb:	rex.RB
  444bcc:	rex.RXB
  444bcd:	rex.RB push r10
  444bcf:	pop    rdi
  444bd0:	rex.R
  444bd1:	rex.WB push r14
  444bd3:	rex.WB
  444bd4:	rex.R
  444bd5:	rex.RB pop r15
  444bd7:	rex.X pop rcx
  444bd9:	pop    rdi
  444bda:	pop    rdx
  444bdb:	rex.RB push r10
  444bdd:	rex.WRXB add BYTE PTR [r11+0x54],r10b
  444be1:	push   r12
  444be3:	push   rbp
  444be4:	push   rbx
  444be5:	pop    rdi
  444be6:	rex.WB
  444be7:	rex.WRX push rsp
  444be9:	rex.RB
  444bea:	rex.RXB
  444beb:	rex.RB push r10
  444bed:	pop    rdi
  444bee:	rex.WRXB push r14
  444bf0:	rex.RB push r10
  444bf2:	rex.RX
  444bf3:	rex.WR
  444bf4:	rex.WRXB push r15
  444bf6:	add    BYTE PTR [rbp+0x58],al
  444bf9:	rex.XB
  444bfa:	rex.RB push r8
  444bfc:	push   rsp
  444bfd:	rex.WB
  444bfe:	rex.WRXB
  444bff:	rex.WRX pop rdi
  444c01:	rex.X push rdx
  444c03:	rex.RB
  444c04:	rex.B
  444c05:	rex.WXB push r8
  444c07:	rex.WRXB
  444c08:	rex.WB
  444c09:	rex.WRX push rsp
  444c0b:	add    BYTE PTR [rdx+rax*2+0x47],al
  444c0f:	pop    rdi
  444c10:	rex.XB
  444c11:	rex.WRXB
  444c12:	rex.WRX push rsp
  444c14:	push   rdx
  444c15:	rex.WRXB
  444c16:	rex.WR pop rdi
  444c18:	add    BYTE PTR [r10+r8*2+0x47],al
  444c1d:	pop    rdi
  444c1e:	rex.XB
  444c1f:	rex.WRXB
  444c20:	rex.WRX push rsp
  444c22:	push   rdx
  444c23:	rex.WRXB
  444c24:	rex.WR pop rdi
  444c26:	rex.X push rdx
  444c28:	rex.RB
  444c29:	rex.B
  444c2a:	rex.WXB add BYTE PTR [r13+0x58],al
  444c2e:	rex.XB
  444c2f:	rex.RB push r8
  444c31:	push   rsp
  444c32:	rex.WB
  444c33:	rex.WRXB
  444c34:	rex.WRX pop rdi
  444c36:	push   rbx
  444c37:	rex.WB
  444c38:	rex.WRX
  444c39:	rex.RXB
  444c3a:	rex.WR
  444c3b:	rex.RB pop r15
  444c3d:	push   rbx
  444c3e:	push   rsp
  444c3f:	rex.RB push r8
  444c41:	add    BYTE PTR [rbp+0x58],al
  444c44:	rex.XB
  444c45:	rex.RB push r8
  444c47:	push   rsp
  444c48:	rex.WB
  444c49:	rex.WRXB
  444c4a:	rex.WRX pop rdi
  444c4c:	rex.WB
  444c4d:	rex.WR
  444c4e:	rex.WR
  444c4f:	rex.RB
  444c50:	rex.RXB
  444c51:	rex.B
  444c52:	rex.WR pop rdi
  444c54:	rex.WB
  444c55:	rex.WRX push rbx
  444c57:	push   rsp
  444c58:	push   rdx
  444c59:	push   rbp
  444c5a:	rex.XB push r12
  444c5c:	rex.WB
  444c5d:	rex.WRXB
  444c5e:	rex.WRX add BYTE PTR [rbp+0x58],r8b
  444c62:	rex.XB
  444c63:	rex.RB push r8
  444c65:	push   rsp
  444c66:	rex.WB
  444c67:	rex.WRXB
  444c68:	rex.WRX pop rdi
  444c6a:	push   rax
  444c6b:	push   rdx
  444c6c:	rex.WB push r14
  444c6e:	pop    rdi
  444c6f:	rex.WB
  444c70:	rex.WRX push rbx
  444c72:	push   rsp
  444c73:	push   rdx
  444c74:	push   rbp
  444c75:	rex.XB push r12
  444c77:	rex.WB
  444c78:	rex.WRXB
  444c79:	rex.WRX add BYTE PTR [rax],r8b
  444c7c:	add    BYTE PTR [rax],al
  444c7e:	add    BYTE PTR [rax],al
  444c80:	rex.RB pop r8
  444c82:	rex.XB
  444c83:	rex.RB push r8
  444c85:	push   rsp
  444c86:	rex.WB
  444c87:	rex.WRXB
  444c88:	rex.WRX pop rdi
  444c8a:	rex.WRX
  444c8b:	rex.WRXB
  444c8c:	rex.WRX
  444c8d:	rex.XB
  444c8e:	rex.WRXB
  444c8f:	rex.WRX push rsp
  444c91:	rex.WB
  444c92:	rex.WRX push rbp
  444c94:	rex.B
  444c95:	rex.X
  444c96:	rex.WR
  444c97:	rex.RB pop r15
  444c99:	rex.RB pop r8
  444c9b:	rex.XB
  444c9c:	rex.RB push r8
  444c9e:	push   rsp
  444c9f:	rex.WB
  444ca0:	rex.WRXB
  444ca1:	rex.WRX add BYTE PTR [rax],r8b
  444ca4:	add    BYTE PTR [rax],al
  444ca6:	add    BYTE PTR [rax],al
  444ca8:	(bad)
  444caf:	gs jb  0x444cec
  444cb2:	and    BYTE PTR [rbp+0x6e],dh
  444cb5:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  444cb9:	outs   dx,BYTE PTR ds:[rsi]
  444cba:	and    BYTE PTR [rcx+riz*2+0x72],dh
  444cbe:	addr32 gs je 0x444ce2
  444cc2:	gs js  0x444d28
  444cc5:	gs jo  0x444d3c
  444cc8:	imul   ebp,DWORD PTR [rdi+0x6e],0x25783020
  444ccf:	xor    BYTE PTR [rax],bh
  444cd1:	js     0x444cf3
  444cd3:	(bad)  
  444cd4:	je     0x444cf6
  444cd6:	xor    BYTE PTR [rax+0x25],bh
  444cd9:	jae    0x444cdb
  444cdb:	or     al,BYTE PTR [rax]
  444cdd:	add    BYTE PTR [rax],al
  444cdf:	add    BYTE PTR [rdi+0x64],ah
  444ce2:	(bad)
  444ce7:	gs jb  0x444d24
  444cea:	and    BYTE PTR [rbx+0x65],ch
  444ced:	jb     0x444d5d
  444cef:	gs ins BYTE PTR es:[rdi],dx
  444cf1:	and    BYTE PTR [rbp+0x76],ah
  444cf4:	outs   dx,BYTE PTR gs:[rsi]
  444cf6:	je     0x444d18
  444cf8:	rex.WRXB push r13
  444cfa:	push   rsp
  444cfb:	push   rax
  444cfc:	push   rbp
  444cfd:	push   rsp
  444cfe:	pop    rdi
  444cff:	rex.R
  444d00:	rex.RB
  444d01:	rex.X push rbp
  444d03:	rex.RXB pop r15
  444d05:	push   rbx
  444d06:	push   rsp
  444d07:	push   rdx
  444d08:	rex.WB
  444d09:	rex.WRX
  444d0a:	rex.RXB pop r15
  444d0c:	rex.RB push r14
  444d0e:	rex.RB
  444d0f:	rex.WRX push rsp
  444d11:	and    BYTE PTR [rsi+0x6f],ah
  444d14:	jb     0x444d36
  444d16:	jo     0x444d81
  444d18:	fs cmp eax,0x74207525
  444d1e:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0xa78
  444d26:	add    BYTE PTR [rax],al
  444d28:	(bad)
  444d2f:	gs jb  0x444d6c
  444d32:	and    BYTE PTR [rbx+0x65],ch
  444d35:	jb     0x444da5
  444d37:	gs ins BYTE PTR es:[rdi],dx
  444d39:	and    BYTE PTR [rbp+0x76],ah
  444d3c:	outs   dx,BYTE PTR gs:[rsi]
  444d3e:	je     0x444d60
  444d40:	jne    0x444db0
  444d42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  444d46:	outs   dx,BYTE PTR ds:[rsi]
  444d47:	and    BYTE PTR [rsi+0x6f],ah
  444d4a:	jb     0x444d6c
  444d4c:	jo     0x444db7
  444d4e:	fs cmp eax,0x74207525
  444d54:	imul   esp,DWORD PTR [rbp+rdi*1+0x25],0x6f632078
  444d5c:	fs gs cmp eax,0xa7825
  444d63:	add    BYTE PTR [rax],al
  444d65:	add    BYTE PTR [rax],al
  444d67:	add    BYTE PTR [rbx+0x68],al
  444d6a:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x74697865
  444d72:	gs and BYTE PTR fs:[rdi+0x69],dh
  444d77:	je     0x444de1
  444d79:	and    BYTE PTR [rdx+0x65],dh
  444d7c:	je     0x444de1
  444d7e:	outs   dx,DWORD PTR ds:[rsi]
  444d7f:	fs and BYTE PTR gs:[rip+0xa782520],bh        # 0xabc72a7
  444d87:	add    BYTE PTR [rbx+0x68],al
  444d8a:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x706f7453
  444d92:	jo     0x444df9
  444d94:	and    BYTE PTR fs:[rdi+0x69],dh
  444d98:	je     0x444e02
  444d9a:	and    BYTE PTR [rbx+0x69],dh
  444d9d:	outs   dx,BYTE PTR ds:[esi]
  444d9f:	(bad)  
  444da0:	ins    BYTE PTR es:[rdi],dx
  444da1:	and    BYTE PTR [rip+0x20642520],bh        # 0x20a872c7
  444da7:	or     al,BYTE PTR [rax]
  444da9:	add    BYTE PTR [rax],al
  444dab:	add    BYTE PTR [rax],al
  444dad:	add    BYTE PTR [rax],al
  444daf:	add    BYTE PTR [rcx+0x67],cl
  444db2:	outs   dx,BYTE PTR ds:[rsi]
  444db3:	outs   dx,DWORD PTR ds:[rsi]
  444db4:	jb     0x444e1f
  444db6:	outs   dx,BYTE PTR ds:[rsi]
  444db7:	and    BYTE PTR [ebp+0x6e],dh
  444dbb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  444dbf:	outs   dx,BYTE PTR ds:[rsi]
  444dc0:	and    BYTE PTR [rcx+0x6e],ch
  444dc3:	je     0x444e2a
  444dc5:	jb     0x444e35
  444dc7:	(bad)  
  444dc8:	ins    BYTE PTR es:[rdi],dx
  444dc9:	and    BYTE PTR [rbp+0x76],ah
  444dcc:	outs   dx,BYTE PTR gs:[rsi]
  444dce:	je     0x444dfc
  444dd0:	and    BYTE PTR [rip+0xa64],ah        # 0x44583a
  444dd6:	add    BYTE PTR [rax],al
  444dd8:	mov    ecx,0x28fffdcc
  444ddd:	int3   
  444dde:	std    
  444ddf:	(bad)  
  444de0:	clc    
  444de1:	retf   
  444de2:	std    
  444de3:	jmp    FWORD PTR [rax-0x35]
  444de6:	std    
  444de7:	(bad)  
  444de8:	clc    
  444de9:	retf   0xfffd
  444dec:	test   al,0xca
  444dee:	std    
  444def:	(bad)  
  444df0:	cmp    dl,cl
  444df2:	std    
  444df3:	(bad)  
  444df4:	cld    
  444df5:	leave  
  444df6:	std    
  444df7:	dec    DWORD PTR [rax-0x37]
  444dfa:	std    
  444dfb:	call   QWORD PTR [rcx*8-0x32560003]
  444e02:	std    
  444e03:	jmp    QWORD PTR [rcx+rcx*8-0x32560003]
  444e0a:	std    
  444e0b:	jmp    QWORD PTR [rcx+rcx*8-0x365b0003]
  444e12:	std    
  444e13:	inc    esp
  444e15:	leave  
  444e16:	std    
  444e17:	jmp    QWORD PTR [rcx+rcx*8-0x365b0003]
  444e1e:	std    
  444e1f:	jmp    QWORD PTR [rcx+rcx*8-0x363b0003]
  444e26:	std    
  444e27:	inc    DWORD PTR [rbx+0x61]
  444e2a:	outs   dx,BYTE PTR ds:[rsi]
  444e2b:	outs   dx,BYTE PTR ds:[rsi]
  444e2c:	outs   dx,DWORD PTR ds:[rsi]
  444e2d:	je     0x444e4f
  444e2f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  444e32:	je     0x444e9d
  444e34:	outs   dx,BYTE PTR ds:[rsi]
  444e35:	jne    0x444e9c
  444e37:	and    BYTE PTR [rdi+0x69],dh
  444e3a:	je     0x444ea4
  444e3c:	and    BYTE PTR [rbx+0x69],dh
  444e3f:	outs   dx,BYTE PTR ds:[esi]
  444e41:	(bad)  
  444e42:	ins    BYTE PTR es:[rdi],dx
  444e43:	and    BYTE PTR [rip+0x65682073],ah        # 0x65ac6ebc
  444e49:	jb     0x444eb0
  444e4b:	or     al,BYTE PTR cs:[rax]
  444e4e:	add    BYTE PTR [rax],al
  444e50:	rex.XB (bad) 
  444e52:	outs   dx,BYTE PTR ds:[rsi]
  444e53:	and    BYTE PTR [rdi+0x6e],ch
  444e56:	ins    BYTE PTR es:[rdi],dx
  444e57:	jns    0x444e79
  444e59:	movsxd ebp,DWORD PTR [rdi+0x6e]
  444e5c:	je     0x444ec7
  444e5e:	outs   dx,BYTE PTR ds:[rsi]
  444e5f:	jne    0x444ec6
  444e61:	and    BYTE PTR [rdi+0x69],dh
  444e64:	je     0x444ece
  444e66:	and    BYTE PTR [rdx+0x65],dh
  444e69:	movsxd esp,DWORD PTR [rbp+0x69]
  444e6c:	jbe    0x444ed3
  444e6e:	and    BYTE PTR fs:[rbx+0x69],dh
  444e72:	outs   dx,BYTE PTR ds:[esi]
  444e74:	(bad)  
  444e75:	ins    BYTE PTR es:[rdi],dx
  444e76:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4e7cef
  444e7c:	add    BYTE PTR [rax],al
  444e7e:	add    BYTE PTR [rax],al
  444e80:	push   rbx
  444e81:	imul   ebp,DWORD PTR [rsi+0x67],0x7320656c
  444e88:	je     0x444eef
  444e8a:	jo     0x444efc
  444e8c:	imul   ebp,DWORD PTR [rsi+0x67],0x20736920
  444e93:	outs   dx,BYTE PTR ds:[rsi]
  444e94:	outs   dx,DWORD PTR ds:[rsi]
  444e95:	je     0x444eb7
  444e97:	jae    0x444f0e
  444e99:	jo     0x444f0b
  444e9b:	outs   dx,DWORD PTR ds:[rsi]
  444e9c:	jb     0x444f12
  444e9e:	gs and BYTE PTR fs:[rcx+0x6e],ch
  444ea3:	and    BYTE PTR [rax+rbp*2+0x69],dh
  444ea7:	jae    0x444ec9
  444ea9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  444eac:	imul   sp,WORD PTR [rdi+0x75],0x6172
  444eb2:	je     0x444f1d
  444eb4:	outs   dx,DWORD PTR ds:[rsi]
  444eb5:	outs   dx,BYTE PTR ds:[rsi]
  444eb6:	or     al,BYTE PTR cs:[rax]
  444eb9:	rex.R
  444eba:	gs (bad) 
  444ebc:	jne    0x444f25
  444ebe:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
  444ec3:	gs push rax
  444ec5:	jb     0x444f36
  444ec7:	movsxd esp,DWORD PTR [rbp+0x73]
  444eca:	jae    0x444f1f
  444ecc:	je     0x444f3d
  444ece:	jo     0x444ed0
  444ed0:	rex.R
  444ed1:	gs (bad) 
  444ed3:	jne    0x444f3c
  444ed5:	push   rbx
  444ed6:	gs je  0x444f29
  444ed9:	jb     0x444f4a
  444edb:	movsxd esp,DWORD PTR [rbp+0x73]
  444ede:	jae    0x444f2b
  444ee0:	imul   ebp,DWORD PTR [rsp+rbp*2+0x4f],0x6978456e
  444ee8:	je     0x444eea
  444eea:	add    BYTE PTR [rax],al
  444eec:	add    BYTE PTR [rax],al
  444eee:	add    BYTE PTR [rax],al
  444ef0:	ja     0x444f53
  444ef2:	jb     0x444f62
  444ef4:	imul   ebp,DWORD PTR [rsi+0x67],0x7553203a
  444efb:	jae    0x444f6d
  444efd:	outs   dx,BYTE PTR gs:[rsi]
  444eff:	fs push rsp
  444f01:	push   0x64616572
  444f06:	and    BYTE PTR [rsi+0x61],ah
  444f09:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  444f11:	jae    0x444f88
  444f13:	jae    0x444f85
  444f15:	outs   dx,BYTE PTR gs:[rsi]
  444f17:	fs pop rdi
  444f19:	outs   dx,DWORD PTR ds:[rsi]
  444f1a:	outs   dx,BYTE PTR ds:[rsi]
  444f1b:	gs pop rdi
  444f1d:	je     0x444f87
  444f1f:	jb     0x444f86
  444f21:	(bad)  
  444f22:	fs sub al,0x20
  444f25:	sub    BYTE PTR [rbp+0x72],ah
  444f28:	jb     0x444f99
  444f2a:	jb     0x444f4c
  444f2c:	and    eax,0x203a2964
  444f31:	and    eax,0xa73
  444f36:	add    BYTE PTR [rax],al
  444f38:	ja     0x444f9b
  444f3a:	jb     0x444faa
  444f3c:	imul   ebp,DWORD PTR [rsi+0x67],0x6552203a
  444f43:	jae    0x444fba
  444f45:	ins    DWORD PTR es:[rdi],dx
  444f46:	gs push rsp
  444f48:	push   0x64616572
  444f4d:	and    BYTE PTR [rsi+0x61],ah
  444f50:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  444f58:	movsxd ebp,DWORD PTR [rdi+0x6e]
  444f5b:	je     0x444fc6
  444f5d:	outs   dx,BYTE PTR ds:[rsi]
  444f5e:	jne    0x444fc5
  444f60:	pop    rdi
  444f61:	outs   dx,DWORD PTR ds:[rsi]
  444f62:	outs   dx,BYTE PTR ds:[rsi]
  444f63:	gs pop rdi
  444f65:	je     0x444fcf
  444f67:	jb     0x444fce
  444f69:	(bad)  
  444f6a:	fs sub al,0x20
  444f6d:	sub    BYTE PTR [rbp+0x72],ah
  444f70:	jb     0x444fe1
  444f72:	jb     0x444f94
  444f74:	and    eax,0x203a2964
  444f79:	and    eax,0xa73
  444f7e:	add    BYTE PTR [rax],al
  444f80:	rex.B je 0x444ff7
  444f83:	(bad)  
  444f84:	movsxd ebp,DWORD PTR [rax+0x20]
  444f87:	je     0x444ff8
  444f89:	and    BYTE PTR [rax+0x72],dh
  444f8c:	outs   dx,DWORD PTR ds:[rsi]
  444f8d:	movsxd esp,DWORD PTR [rbp+0x73]
  444f90:	jae    0x444fb2
  444f92:	data16 (bad) 
  444f94:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x72652820
  444f9c:	jb     0x44500d
  444f9e:	jb     0x444fc0
  444fa0:	and    eax,0x203a2964
  444fa5:	and    eax,0xa73
  444faa:	add    BYTE PTR [rax],al
  444fac:	add    BYTE PTR [rax],al
  444fae:	add    BYTE PTR [rax],al
  444fb0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  444fb2:	and    BYTE PTR [rbp+0x78],ah
  444fb5:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  444fb9:	(bad)  
  444fba:	(bad)  
  444fbb:	ins    BYTE PTR es:[rdi],dx
  444fbc:	and    BYTE PTR gs:[rbx+0x70],dh
  444fc0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  444fc4:	imul   esp,DWORD PTR [rbp+0x64],0x7073202c
  444fcb:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  444fcf:	jns    0x444ff1
  444fd1:	gs js  0x445039
  444fd4:	movsxd esi,DWORD PTR [rbp+0x74]
  444fd7:	(bad)  
  444fd8:	(bad)  
  444fd9:	ins    BYTE PTR es:[rdi],dx
  444fda:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  444fdf:	fs gs (bad) 
  444fe2:	jne    0x44504b
  444fe4:	or     al,BYTE PTR cs:[rax]
  444fe7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  444fe9:	ins    DWORD PTR es:[rdi],dx
  444fea:	ins    DWORD PTR es:[rdi],dx
  444feb:	(bad)  
  444fec:	outs   dx,BYTE PTR ds:[rsi]
  444fed:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  444ff2:	and    BYTE PTR gs:[rcx+0x73],ch
  444ff6:	and    BYTE PTR [rdx],ah
  444ff8:	and    eax,0xa2273
  444ffd:	add    BYTE PTR [rax],al
  444fff:	add    BYTE PTR [rbp+0x72],al
  445002:	jb     0x445073
  445004:	jb     0x445026
  445006:	movsxd esi,DWORD PTR [rdx+0x65]
  445009:	(bad)  
  44500a:	je     0x445075
  44500c:	outs   dx,BYTE PTR ds:[rsi]
  44500d:	and    BYTE PTR [eax+0x72],dh
  445011:	outs   dx,DWORD PTR ds:[rsi]
  445012:	movsxd esp,DWORD PTR [rbp+0x73]
  445015:	jae    0x445037
  445017:	and    ah,BYTE PTR [rip+0x22732573]        # 0x22b77590
  44501d:	sub    al,0x20
  44501f:	sub    BYTE PTR [rbp+0x72],ah
  445022:	jb     0x445093
  445024:	jb     0x445046
  445026:	and    eax,0x203a2964
  44502b:	and    eax,0x50000a73
  445030:	jb     0x4450a1
  445032:	movsxd esp,DWORD PTR [rbp+0x73]
  445035:	jae    0x445057
  445037:	movsxd esi,DWORD PTR [rdx+0x65]
  44503a:	(bad)  
  44503b:	je     0x4450a2
  44503d:	cmp    ah,BYTE PTR fs:[rax]
  445040:	and    eax,0xa73
	...
  44507d:	add    BYTE PTR [rax],al
  44507f:	add    BYTE PTR [rdi+0x65],al
  445082:	je     0x4450d8
  445084:	push   0x64616572
  445089:	rex.XB outs dx,DWORD PTR ds:[rsi]
  44508b:	outs   dx,BYTE PTR ds:[rsi]
  44508c:	je     0x4450f3
  44508e:	js     0x445104
  445090:	and    BYTE PTR [rsi+0x61],ah
  445093:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6c252065
  44509b:	or     al,BYTE PTR fs:[rax]
  44509e:	and    eax,0x25203a73
  4450a3:	jae    0x4450a5
  4450a5:	ja     0x445110
  4450a7:	outs   dx,BYTE PTR ds:[rsi]
  4450a8:	xor    esi,DWORD PTR [rdx]
  4450aa:	sub    eax,0x36383369
  4450af:	sub    eax,0x2e776f6c
  4450b4:	movsxd eax,DWORD PTR [rax]
  4450b6:	jne    0x445126
  4450b8:	push   0x6c646e61
  4450bd:	gs and BYTE PTR fs:[rdx+rsi*2+0x0],ah
  4450c3:	add    BYTE PTR [rsp+rbx*8],cl
  4450c6:	std    
  4450c7:	call   FWORD PTR [rsp+rbx*8]
  4450ca:	std    
  4450cb:	jmp    FWORD PTR [rsp+rbx*8]
  4450ce:	std    
  4450cf:	(bad)  
  4450d0:	cmp    al,0xdc
  4450d2:	std    
  4450d3:	call   FWORD PTR [rsp+rbx*8-0x3]
  4450d7:	call   FWORD PTR [rsp+rbx*8-0x3]
  4450db:	dec    DWORD PTR [rsp+rbx*8-0x3]
  4450df:	(bad)  
  4450e0:	cld    
  4450e1:	(bad)  
  4450e3:	jmp    QWORD PTR [rip+0x41203a73]        # 0x41648b5c
  4450e9:	jae    0x44515e
  4450eb:	gs jb  0x445162
  4450ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  4450f5:	(bad)  
  4450f6:	and    BYTE PTR [rsi+0x61],ah
  4450f9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4400002e
  445101:	push   rdx
  445102:	pop    rdi
  445103:	rex.RX
  445104:	rex.WB push r10
  445106:	push   rbx
  445107:	push   rsp
  445108:	rex.B
  445109:	rex.R
  44510a:	rex.R push rdx
  44510c:	and    BYTE PTR [rdi*1+0x67657220],bh
  445113:	outs   dx,BYTE PTR ds:[rsi]
  445114:	jne    0x445183
  445116:	and    BYTE PTR [rsi],ah
  445118:	and    BYTE PTR es:[rdx+0x65],dh
  44511c:	outs   dx,BYTE PTR ds:[esi]
  44511e:	jne    0x44518d
  445120:	and    BYTE PTR [rdi*1+0x5f524420],bh
  445127:	rex.WR
  445128:	push   r11
  44512a:	push   rsp
  44512b:	rex.B
  44512c:	rex.R
  44512d:	rex.R push rdx
	...
  44513f:	add    BYTE PTR [rsi+0x6f],dh
  445142:	imul   esp,DWORD PTR [rax+riz*1+0x78],0x645f3638
  44514a:	jb     0x4451ab
  44514c:	ins    BYTE PTR es:[rdi],dx
  44514d:	outs   dx,DWORD PTR ds:[rsi]
  44514e:	ja     0x4451af
  445150:	jae    0x4451b7
  445152:	je     0x4451b3
  445154:	(bad)  
  445155:	fs fs jb 0x445181
  445159:	imul   ebp,DWORD PTR [rsi+0x74],0x4f43202c
  445160:	push   rdx
  445161:	rex.RB pop r15
  445163:	rex.B
  445164:	rex.R
  445165:	rex.R push rdx
  445167:	sub    DWORD PTR [rax],eax
	...
  44517d:	add    BYTE PTR [rax],al
  44517f:	add    BYTE PTR [rbx+0x4f],al
  445182:	push   rdx
  445183:	rex.RB pop r15
  445185:	rex.B
  445186:	rex.R
  445187:	rex.R push rdx
  445189:	and    BYTE PTR [rax+0x38],bh
  44518c:	ss pop rdi
  44518e:	fs jb  0x4451f0
  445191:	ins    BYTE PTR es:[rdi],dx
  445192:	outs   dx,DWORD PTR ds:[rsi]
  445193:	ja     0x4451f4
  445195:	addr32 gs je 0x4451f8
  445199:	(bad)  
  44519a:	fs fs jb 0x4451c6
  44519e:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  4451bd:	add    BYTE PTR [rax],al
  4451bf:	add    BYTE PTR [rdi+rdx*2+0x4f],al
  4451c3:	push   rdx
  4451c4:	rex.R
  4451c5:	ss xor al,0x20
  4451c8:	ja     0x445233
  4451ca:	outs   dx,BYTE PTR ds:[rsi]
  4451cb:	xor    esi,DWORD PTR [rdx]
  4451cd:	pop    rdi
  4451ce:	addr32 gs je 0x445231
  4451d2:	movsxd esi,DWORD PTR [rbp+0x72]
  4451d5:	jb     0x44523c
  4451d7:	outs   dx,BYTE PTR ds:[rsi]
  4451d8:	je     0x445239
  4451da:	fs jb  0x445205
  4451dd:	imul   ebp,DWORD PTR [rsi+0x74],0xcc0029
	...
  445200:	js     0x445202
  445202:	add    BYTE PTR [rax],al
  445204:	nop
  445205:	add    BYTE PTR [rax],al
  445207:	add    BYTE PTR [rax-0x78000000],al
  44520d:	add    BYTE PTR [rax],al
  44520f:	add    BYTE PTR [rax-0x50000000],ch
  445215:	add    BYTE PTR [rax],al
  445217:	add    BYTE PTR [rax-0x68000000],ah
  44521d:	add    BYTE PTR [rax],al
  44521f:	add    BYTE PTR [rax-0x40000000],bh
  445225:	add    BYTE PTR [rax],al
  445227:	add    al,cl
  445229:	add    BYTE PTR [rax],al
  44522b:	add    al,dl
  44522d:	add    BYTE PTR [rax],al
  44522f:	add    al,bl
  445231:	add    BYTE PTR [rax],al
  445233:	add    al,ah
  445235:	add    BYTE PTR [rax],al
  445237:	add    al,ch
  445239:	add    BYTE PTR [rax],al
  44523b:	add    al,dh
  44523d:	add    BYTE PTR [rax],al
  44523f:	add    al,bh
  445241:	add    BYTE PTR [rax],al
  445243:	add    BYTE PTR [rax+rax*1+0x0],al
  445247:	add    BYTE PTR [rax],bh
  445249:	add    BYTE PTR [rax],al
  44524b:	add    BYTE PTR [rdx+0x0],al
  44524e:	add    BYTE PTR [rax],al
  445250:	cmp    al,BYTE PTR [rax]
  445252:	add    BYTE PTR [rax],al
  445254:	cmp    al,0x0
  445256:	add    BYTE PTR [rax],al
  445258:	add    BYTE PTR ds:[rax],al
  44525b:	add    BYTE PTR [rax+0x0],al
  44525e:	add    BYTE PTR [rax],al
  445260:	and    BYTE PTR [rcx],al
  445262:	add    BYTE PTR [rax],al
  445264:	xor    BYTE PTR [rcx],al
  445266:	add    BYTE PTR [rax],al
  445268:	rex add DWORD PTR [rax],eax
  44526b:	add    BYTE PTR [rax+0x1],dl
  44526e:	add    BYTE PTR [rax],al
  445270:	(bad)  
  445271:	add    DWORD PTR [rax],eax
  445273:	add    BYTE PTR [rax+0x1],dh
  445276:	add    BYTE PTR [rax],al
  445278:	add    BYTE PTR [rcx],0x0
  44527b:	add    BYTE PTR [rax+0x1],dl
  445281:	add    DWORD PTR [rax],eax
  445283:	add    BYTE PTR [rdx],al
  445285:	add    DWORD PTR [rax],eax
  445287:	add    BYTE PTR [rcx+rax*1],al
  44528a:	add    BYTE PTR [rax],al
  44528c:	or     al,0x1
  44528e:	add    BYTE PTR [rax],al
  445290:	or     BYTE PTR [rcx],al
  445292:	add    BYTE PTR [rax],al
  445294:	adc    al,0x1
  445296:	add    BYTE PTR [rax],al
  445298:	adc    BYTE PTR [rcx],al
  44529a:	add    BYTE PTR [rax],al
  44529c:	or     al,0x1
  44529e:	add    BYTE PTR [rax],al
  4452a0:	movabs al,ds:0xc0000001b0000001
  4452a9:	add    DWORD PTR [rax],eax
  4452ab:	add    al,dl
  4452ad:	add    DWORD PTR [rax],eax
  4452af:	add    al,ah
  4452b1:	add    DWORD PTR [rax],eax
  4452b3:	add    al,dh
  4452b5:	add    DWORD PTR [rax],eax
  4452b7:	add    BYTE PTR [rax],al
  4452b9:	add    al,BYTE PTR [rax]
  4452bb:	add    BYTE PTR [rax],dl
  4452bd:	add    al,BYTE PTR [rax]
  4452bf:	add    BYTE PTR [rax],ah
  4452c1:	add    al,BYTE PTR [rax]
  4452c3:	add    BYTE PTR [rax],dh
  4452c5:	add    al,BYTE PTR [rax]
  4452c7:	add    BYTE PTR [rax+0x2],al
  4452ca:	add    BYTE PTR [rax],al
  4452cc:	push   rax
  4452cd:	add    al,BYTE PTR [rax]
  4452cf:	add    BYTE PTR [rax+0x2],ah
  4452d2:	add    BYTE PTR [rax],al
  4452d4:	jo     0x4452d8
  4452d6:	add    BYTE PTR [rax],al
  4452d8:	add    BYTE PTR [rdx],0x0
  4452db:	add    BYTE PTR [rax+0x18000002],dl
  4452e1:	add    DWORD PTR [rax],eax
	...
  4452ff:	add    BYTE PTR [rsi+0x2d],al
  445302:	xor    DWORD PTR ds:0x78,ebp
  445309:	add    BYTE PTR [rax],al
  44530b:	add    BYTE PTR [rax],al
  44530d:	add    BYTE PTR [rax],al
  44530f:	add    BYTE PTR [rax],ch
  445311:	jne    0x445381
  445313:	outs   dx,DWORD PTR fs:[rsi]
  445315:	movsxd esi,DWORD PTR [rbp+0x6d]
  445318:	outs   dx,BYTE PTR gs:[rsi]
  44531a:	je     0x445381
  44531c:	and    BYTE PTR fs:[rbp+0x72],ah
  445320:	jb     0x445390
  445322:	outs   dx,DWORD PTR ds:[rsi]
  445323:	and    BYTE PTR [rip+0x2e002964],ah        # 0x2e447c8d
  445329:	or     eax,0xa
  44532e:	add    BYTE PTR [rax],al
  445330:	and    eax,0x65203a73
  445335:	jb     0x4453a9
  445337:	outs   dx,DWORD PTR ds:[rsi]
  445338:	jb     0x445374
  44533a:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  44533e:	and    BYTE PTR [rbp+0x61],ch
  445341:	outs   dx,BYTE PTR ds:[rsi]
  445342:	jns    0x445364
  445344:	rex sub eax,0x656c6966
  44534a:	jae    0x44536c
  44534c:	outs   dx,BYTE PTR gs:[rsi]
  44534e:	movsxd ebp,DWORD PTR [rdi+0x75]
  445351:	outs   dx,BYTE PTR ds:[rsi]
  445352:	je     0x4453b9
  445354:	jb     0x4453bb
  445356:	or     al,BYTE PTR fs:[rax]
  445359:	jb     0x44535b
	...
  445383:	add    BYTE PTR [rdi+0x6e04c11d],dh
  445389:	cmp    eax,DWORD PTR [rdx+0x4326d909]
  44538f:	or     eax,0x130476dc
  445394:	imul   ebp,DWORD PTR [rbx-0x3b],0x17
  445398:	mov    dl,0x4d
  44539a:	xchg   BYTE PTR [rdx],bl
  44539c:	add    eax,0xb81e4750
  4453a1:	in     eax,dx
  4453a2:	or     BYTE PTR [rsi],ah
  4453a4:	(bad)  
  4453a6:	leave  
  4453a7:	and    dl,dh
  4453a9:	(bad)  
  4453aa:	mov    ch,BYTE PTR [rdi]
  4453ac:	(bad)  
  4453ad:	retf   
  4453ae:	sub    rsp,QWORD PTR [r11+r11*4+0xc]
  4453b3:	xor    eax,0x31cd86d3
  4453b8:	or     ah,BYTE PTR [rax-0x4242c372]
  4453be:	rex.WRXB cmp BYTE PTR [r8-0x25],r14b
  4453c2:	adc    DWORD PTR [rdi+rax*8-0x3a],ecx
  4453c6:	ror    BYTE PTR [rax+0x1e],1
  4453c9:	loopne 0x44535e
  4453cb:	rex.RB test eax,0xac4152fd
  4453d1:	lods   eax,DWORD PTR ds:[rsi]
  4453d2:	adc    eax,0xd4b01b5f
  4453d7:	pop    rbx
  4453d8:	ret    0x9796
  4453db:	push   rsi
  4453dc:	jne    0x445369
  4453de:	push   rsi
  4453df:	push   rdx
  4453e0:	enter  0x1936,0x6a
  4453e4:	jg     0x445411
  4453e6:	fsubr  DWORD PTR [rsi-0x5a]
  4453e9:	or     eax,0x1011639b
  4453ee:	pop    rdx
  4453ef:	addr32 adc al,0x40
  4453f2:	sbb    eax,0xdc5da379
  4453f7:	jge    0x445473
  4453f9:	jnp    0x44539a
  4453fb:	jo     0x4453ca
  4453fd:	pop    si
  4453ff:	je     0x4453e1
  445401:	mov    dh,0x23
  445403:	cwde   
  445404:	push   rdi
  445405:	stos   DWORD PTR es:[rdi],eax
  445406:	loop   0x4453a4
  445408:	mov    cs,WORD PTR [rbp-0x6fc66e5f]
  44540e:	(bad)  
  44540f:	xchg   ebp,eax
  445410:	cmp    al,0xc0
  445412:	(bad)  
  445413:	mov    ecx,DWORD PTR [rbx+0x528fe6dd]
  445419:	sti    
  44541a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44541b:	(bad)  
  44541c:	in     eax,0xe6
  44541e:	xchg   BYTE PTR fs:[rax+0x5b],bl
  445422:	sub    edi,DWORD PTR [rsi-0x4515b911]
  445428:	ss (bad) 
  44542a:	test   eax,0x687d81b7
  44542f:	mov    bl,0x84
  445431:	sub    eax,0x3033ad2f
  445436:	out    dx,al
  445437:	test   eax,0xa4ad16ea
  44543c:	pop    rbp
  44543d:	or     ebp,DWORD PTR [rax+riz*4-0x70]
  445441:	ins    DWORD PTR es:[rdi],dx
  445442:	xor    dl,ah
  445444:	(bad)  
  445445:	jo     0x44543a
  445447:	sar    dh,1
  445449:	push   rsi
  44544a:	mov    al,0xdd
  44544c:	rex.WB
  44544d:	rex.WXB jno 0x445429
  445450:	sbb    r14,QWORD PTR [rsi]
  445453:	(bad)  
  445454:	sti    
  445455:	(bad)  
  445456:	test   ebx,0xceb42022
  44545c:	xchg   ebp,eax
  44545d:	cmp    eax,0x8028ca75
  445462:	cmp    dh,dl
  445464:	lahf   
  445465:	popf   
  445466:	sti    
  445467:	test   BYTE PTR [rsi-0x45],0xb8
  44546b:	sti    
  44546c:	icebp  
  44546d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44546e:	jns    0x44546f
  445470:	hlt    
  445471:	idiv   BYTE PTR [rsi]
  445473:	loope  0x4454b8
  445475:	jmp    0x445476
  445477:	in     eax,0x9a
  445479:	int    0xbc
  44547b:	call   0xffffffffecc224ad
  445480:	ja     0x4454f2
  445482:	xchg   BYTE PTR [rax+rax*8],dh
  445485:	ins    DWORD PTR es:[rdi],dx
  445486:	rex.RXB xor BYTE PTR [r9],r11b
  445489:	rex.WXB add al,0x3d
  44548c:	scas   al,BYTE PTR es:[rdi]
  44548d:	push   rsi
  44548e:	(bad)
  445491:	(bad)  
  445492:	(bad)  
  445493:	(bad)  
  445494:	sbb    al,0x1b
  445496:	rex.XB and eax,r13d
  445499:	cmp    eax,0x20722e00
  44549e:	shr    DWORD PTR [rdx],0xcf
  4454a1:	popf   
  4454a2:	mov    ss,WORD PTR [rdx]
  4454a4:	js     0x445426
  4454a6:	rex.WRXB (bad) 
  4454a8:	movabs eax,ds:0x131fcdbb161b0ca6
  4454b1:	jmp    0x44543d
  4454b3:	add    DWORD PTR [rsi+rsi*8-0x2f82fab5],esp
  4454ba:	or     BYTE PTR [rax],cl
  4454bc:	retf   0xc9cd
  4454bf:	or     al,0x7
  4454c1:	stos   DWORD PTR es:[rdi],eax
  4454c2:	xchg   edi,eax
  4454c3:	js     0x445475
  4454c5:	mov    dh,0x56
  4454c7:	jl     0x445532
  4454c9:	nop
  4454ca:	adc    eax,0xd48dde71
  4454cf:	jne    0x4454ac
  4454d1:	fst    QWORD PTR [rbx+0x52c06c6b]
  4454d7:	outs   dx,DWORD PTR ds:[rsi]
  4454d8:	mov    ch,0xe6
  4454da:	adc    DWORD PTR [rdx+0x2],esp
  4454dd:	sti    
  4454de:	shl    BYTE PTR [rsi-0x41],1
  4454e1:	rex.RX lahf 
  4454e3:	pop    rsi
  4454e4:	or     BYTE PTR [rbx+0x5e],bl
  4454e7:	pop    rdx
  4454e8:	sar    DWORD PTR [rbp+0x1d],1
  4454eb:	push   rdi
  4454ec:	data16 (bad) 
  4454ee:	fcom   QWORD PTR [rbx+0x63]
  4454f1:	xor    BYTE PTR [rbx+0x5a2dd44d],bl
  4454f7:	rex.WB or rax,0xffffffffba44190b
  4454fd:	(bad)  
  4454fe:	fadd   DWORD PTR [rax-0x69]
  445501:	(bad)  
  445502:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  445503:	lods   al,BYTE PTR ds:[rsi]
  445504:	and    bl,bl
  445506:	fs test al,0xf9
  445509:	std    
  44550a:	(bad)  
  44550b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44550c:	rex.WRX loopne 0x4454f5
  44550f:	movabs eax,ds:0xbb60adfcbfa1b04b
  445518:	and    eax,0x92b6238b
  44551d:	xchg   esi,eax
  44551e:	loop   0x4454d2
  445520:	(bad)  
  445521:	sub    ebp,DWORD PTR [rbp+0x6c36988a]
  445527:	mov    es,WORD PTR [rcx+0x10]
  44552a:	(bad)  
  44552b:	xor    esi,0xd
  44552e:	out    dx,al
  44552f:	xchg   ebx,esi
  445531:	pop    rbp
  445532:	test   eax,0x68404499
  445537:	popf   
  445538:	popf   
  445539:	sub    dx,WORD PTR [rax-0x6b1584d6]
  445540:	out    0x1d,eax
  445542:	mov    ah,0xe0
  445544:	push   rax
  445545:	add    BYTE PTR [rbp-0x1c],dh
  445548:	mov    DWORD PTR [rsi],esp
  44554a:	ss jmp 0xffffffffee3b908e
  445550:	cmp    ebp,DWORD PTR [rbx-0x50]
  445553:	repz mov WORD PTR [rsi+0x71],?
  445557:	not    DWORD PTR [rbp+0x50]
  44555a:	xor    bh,dl
  44555c:	loop   0x4455ab
  44555e:	repz (bad) 
  445560:	pop    rdi
  445561:	lock mov esp,0x7dede8c6
  445567:	ret    0xcb31
  44556a:	ds iret 
  44556c:	xchg   dh,dl
  44556e:	dec    ebx
  445570:	add    DWORD PTR [rsi-0x64cb2a48],0x79
  445577:	shr    ebp,1
  445579:	mov    ebp,0xa05adc3a
  44557e:	sti    
  44557f:	fsubr  st,st(6)
  445581:	loopne 0x44558f
  445583:	imul   ebx,DWORD PTR [rcx-0x3],0xdb806dcd
  44558a:	mov    fs,WORD PTR [rax+0x37]
  44558d:	(bad)  
  44558e:	rex.WRXB
  44558f:	xor    dl,BYTE PTR fs:[rsi-0x747a85f8]
  445596:	leave  
  445597:	jle    0x4455f5
  445599:	lods   eax,DWORD PTR ds:[rsi]
  44559a:	mov    dh,BYTE PTR [rbx-0x15]
  44559d:	mov    al,0x4b
  44559f:	ja     0x4455f7
  4455a1:	or     eax,0x10e14f04
  4455a6:	(bad)
  4455a9:	xchg   BYTE PTR ss:[rsi-0x71],al
  4455ad:	sub    eax,DWORD PTR [rdi+0x42]
  4455b0:	mov    bh,BYTE PTR [rbx+0x0]
  4455b3:	pop    rsp
  4455b4:	cmp    eax,0xe458c166
  4455b9:	rex (bad) 
  4455bb:	push   rbp
  4455bc:	push   rbx
  4455bd:	pop    rbp
  4455be:	rex.XB push r9
  4455c0:	sahf   
  4455c1:	cmp    ebx,DWORD PTR [rip+0xffffffffdc262925]        # 0xffffffffdc6a7eec
  4455c7:	and    eax,esi
  4455c9:	add    BYTE PTR [rdi+0x5e1d472c],bl
  4455cf:	sub    BYTE PTR [rdx+0x4d],al
  4455d2:	sbb    DWORD PTR [rsi],esi
  4455d4:	cmc    
  4455d5:	push   rax
  4455d6:	fdiv   DWORD PTR [rdx]
  4455d8:	sub    al,0x76
  4455da:	fwait
  4455db:	(bad)  
  4455dc:	fwait
  4455dd:	imul   ebx,DWORD PTR [rdx+0x3b],0x26
  4455e1:	(bad)  
  4455e2:	adc    eax,0xd4cb9103
  4455e7:	(bad)  
  4455e8:	rex.W in eax,dx
  4455ea:	xchg   edi,eax
  4455eb:	or     bh,bh
  4455ed:	lock push rsi
  4455ef:	(bad)  
  4455f0:	cli    
  4455f1:	movabs al,ds:0x9b9414d0bd4d1011
  4455fa:	xchg   ebx,eax
  4455fb:	sbb    DWORD PTR [rbx],esp
  4455fd:	xchg   BYTE PTR [rdx+0x1d],dl
  445600:	(bad)  
  445601:	push   rsi
  445602:	(bad)  
  445603:	icebp  
  445604:	mov    ecx,0x60f5ee4b
  445609:	ins    DWORD PTR es:[rdi],dx
  44560a:	lods   eax,DWORD PTR ds:[rsi]
  44560b:	clc    
  44560c:	xlat   BYTE PTR ds:[rbx]
  44560d:	jo     0x44567b
  44560f:	cld    
  445610:	shl    BYTE PTR [rax],cl
  445612:	sub    esp,edx
  445614:	gs cmp eax,0x1bbce6ea
  44561a:	test   eax,0x68060beb
  44561f:	out    dx,eax
  445620:	mov    dh,0xbb
  445622:	(bad)  
  445623:	xlat   BYTE PTR ds:[rbx]
  445624:	add    DWORD PTR [rsi-0x7f272c1a],esp
  44562a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44562b:	fisubr WORD PTR [rdi-0x63]
  44562e:	fisubr DWORD PTR fs:[rdx-0x33]
  445632:	and    eax,esp
  445634:	fst    st(0)
  445636:	loop   0x4455f8
  445638:	add    al,0xf6
  44563a:	movabs eax,ds:0x3e8d7ec960ebb3cd
  445643:	mov    ebp,0xb9ff90c9
  445648:	adc    BYTE PTR [rsi-0x54584b44],dh
  44564e:	jge    0x445600
  445650:	movabs ds:0xccaafbe615ae3afb,al
  445659:	sar    BYTE PTR [rax+0x79dd7ba7],0xa3
  445660:	(bad)  
  445661:	(bad)  
  445662:	ss fwait
  445664:	jno    0x4456e3
  445666:	neg    DWORD PTR [rdi-0x6d4ba458]
  44566c:	(bad)  
  44566d:	rex.RX jne 0x445606
  445670:	sbb    dl,BYTE PTR [rsi]
  445672:	xor    cl,BYTE PTR [rax-0x730cf453]
  445678:	je     0x4456a7
  44567a:	mov    al,0x81
  44567c:	ret    
  44567d:	xor    BYTE PTR [rcx-0x7b],dh
  445680:	cdq    
  445681:	nop
  445682:	mov    bl,BYTE PTR [rbp+0x2e]
  445685:	lea    ecx,[rbx+0x59]
  445688:	imul   DWORD PTR [rbx-0x49bfabf8]
  44568e:	leave  
  44568f:	push   rax
  445690:	rex.RB out 0x8e,al
  445693:	rex.WRX
  445694:	repnz sti 
  445696:	rex.WRXB
  445697:	rex.WX sub rbx,rbp
  44569a:	or     al,0x47
  44569c:	pushf  
  44569d:	ror    ch,0x43
  4456a0:	and    DWORD PTR [rbp-0x7e],edi
  4456a3:	jnp    0x44563b
  4456a5:	(bad)  
  4456a6:	rex.XB jg 0x4456f8
  4456a9:	rex.RX add BYTE PTR [rdx-0x8],r14b
  4456ad:	pop    rbx
  4456ae:	shl    DWORD PTR [rsi-0x3],0xb
  4456b2:	xchg   BYTE PTR [rax+0x4a],ch
  4456b5:	(bad)  
  4456b6:	rex.RXB ins BYTE PTR es:[rdi],dx
  4456b8:	xchg   ebx,eax
  4456b9:	xor    BYTE PTR [rcx+riz*2],al
  4456bc:	and    al,0x2d
  4456be:	vpsubsw ymm9,ymm3,YMMWORD PTR [rbx-0x65]
  4456c3:	adc    DWORD PTR [rsi+0x56],ebx
  4456c6:	pop    rdx
  4456c7:	adc    eax,0x18197087
  4456cc:	xor    BYTE PTR [rbp-0x28],ch
  4456cf:	sbb    al,0x35
  4456d1:	cmp    eax,0x2082029f
  4456d6:	pop    rsi
  4456d7:	(bad)  
  4456d8:	pop    rbx
  4456d9:	(bad)  
  4456da:	sbb    eax,0xdc1bec0b
  4456df:	sqrtps xmm4,XMMWORD PTR [rsi-0x4419c86d]
  4456e6:	push   rdx
  4456e7:	xor    edi,DWORD PTR [rdi]
  4456e9:	popf   
  4456ea:	adc    DWORD PTR [rsi],edi
  4456ec:	mov    BYTE PTR [rax-0x2f72c530],al
  4456f2:	xchg   edi,eax
  4456f3:	and    al,0x3a
  4456f5:	int    0x56
  4456f7:	and    bl,ah
  4456f9:	jmp    0x445710
  4456fb:	sub    eax,0x29d4f654
  445700:	jns    0x445728
  445702:	test   eax,0x683bcec5
  445707:	rcl    DWORD PTR [rdi],0x1d
  44570a:	sub    ecx,esp
  44570c:	movabs al,ds:0x12d6ad50a5c8ea00
  445715:	rex.WRB ins BYTE PTR es:[rdi],dx
  445717:	ror    bl,cl
  445719:	imul   ebp,DWORD PTR [rdi],0xffffffdf
  44571c:	jl     0x445794
  44571e:	out    dx,al
  44571f:	fcmovnb st,st(1)
  445721:	retf   
  445722:	movabs eax,ds:0x23f0afe760d676e3
  44572b:	(bad)  
  44572c:	sbb    ch,ch
  44572e:	loop   0x44571e
  445730:	sbb    eax,0xaaf0a5bd
  445735:	movabs al,ds:0x9bc4f9278673f464
  44573e:	out    0xfd,al
  445740:	or     ebp,edi
  445742:	mov    eax,0x79e0be89
  445747:	lea    esp,[rdi-0x3a]
  44574a:	cmp    al,BYTE PTR [rax-0x7b042430]
  445750:	(bad)  
  445751:	mov    edi,DWORD PTR [rdx+rbx*4-0x6182699e]
  445758:	mov    ebx,0xc933eb0
  44575d:	lods   eax,DWORD PTR ds:[rsi]
  44575e:	call   QWORD PTR [rdi-0x504fef4f]
  445764:	(bad)  
  445765:	or     eax,0x2bdfab71
  44576a:	xor    ah,BYTE PTR [rsi-0x5d0cc998]
  445770:	ins    DWORD PTR es:[rdi],dx
  445771:	data16 mov ah,0xbc
  445774:	fidivr DWORD PTR [rbx+0x75]
  445777:	mov    eax,0xb5365d03
  44577c:	mov    ah,0x40
  44577e:	div    DWORD PTR [rcx+0x3020100]
  445784:	add    al,0x5
  445786:	(bad)  
  445787:	(bad)  
  445788:	or     BYTE PTR [rcx],cl
  44578a:	or     cl,BYTE PTR [rbx]
  44578c:	or     al,0xd
  44578e:	(bad)  
  44578f:	movups xmm2,XMMWORD PTR [rcx]
  445792:	adc    dl,BYTE PTR [rbx]
  445794:	adc    al,0x15
  445796:	(bad)  
  445797:	(bad)  
  445798:	sbb    BYTE PTR [rcx],bl
  44579a:	sbb    bl,BYTE PTR [rbx]
  44579c:	sbb    al,0x1d
  44579e:	(bad)  
  44579f:	(bad)  
  4457a0:	and    BYTE PTR [rcx],ah
  4457a2:	and    ah,BYTE PTR [rbx]
  4457a4:	and    al,0x25
  4457a6:	es (bad) 
  4457a8:	sub    BYTE PTR [rcx],ch
  4457aa:	sub    ch,BYTE PTR [rbx]
  4457ac:	sub    al,0x2d
  4457ae:	cs (bad) 
  4457b0:	xor    BYTE PTR [rcx],dh
  4457b2:	xor    dh,BYTE PTR [rbx]
  4457b4:	xor    al,0x35
  4457b6:	ss (bad) 
  4457b8:	cmp    BYTE PTR [rcx],bh
  4457ba:	cmp    bh,BYTE PTR [rbx]
  4457bc:	cmp    al,0x3d
  4457be:	ds (bad) 
  4457c0:	rex
  4457c1:	rex.B
  4457c2:	rex.X
  4457c3:	rex.XB
  4457c4:	rex.R
  4457c5:	rex.RB
  4457c6:	rex.RX
  4457c7:	rex.RXB
  4457c8:	rex.W
  4457c9:	rex.WB
  4457ca:	rex.WX
  4457cb:	rex.WXB
  4457cc:	rex.WR
  4457cd:	rex.WRB
  4457ce:	rex.WRX
  4457cf:	rex.WRXB push r8
  4457d1:	push   rcx
  4457d2:	push   rdx
  4457d3:	push   rbx
  4457d4:	push   rsp
  4457d5:	push   rbp
  4457d6:	push   rsi
  4457d7:	push   rdi
  4457d8:	pop    rax
  4457d9:	pop    rcx
  4457da:	pop    rdx
  4457db:	pop    rbx
  4457dc:	pop    rsp
  4457dd:	pop    rbp
  4457de:	pop    rsi
  4457df:	pop    rdi
  4457e0:	(bad)  
  4457e1:	rex.B
  4457e2:	rex.X
  4457e3:	rex.XB
  4457e4:	rex.R
  4457e5:	rex.RB
  4457e6:	rex.RX
  4457e7:	rex.RXB
  4457e8:	rex.W
  4457e9:	rex.WB
  4457ea:	rex.WX
  4457eb:	rex.WXB
  4457ec:	rex.WR
  4457ed:	rex.WRB
  4457ee:	rex.WRX
  4457ef:	rex.WRXB push r8
  4457f1:	push   rcx
  4457f2:	push   rdx
  4457f3:	push   rbx
  4457f4:	push   rsp
  4457f5:	push   rbp
  4457f6:	push   rsi
  4457f7:	push   rdi
  4457f8:	pop    rax
  4457f9:	pop    rcx
  4457fa:	pop    rdx
  4457fb:	jnp    0x445879
  4457fd:	jge    0x44587d
  4457ff:	jg     0x445781
  445801:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
  44580b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
  445812:	xchg   edx,eax
  445813:	xchg   ebx,eax
  445814:	xchg   esp,eax
  445815:	xchg   ebp,eax
  445816:	xchg   esi,eax
  445817:	xchg   edi,eax
  445818:	cwde   
  445819:	cdq    
  44581a:	(bad)  
  44581b:	fwait
  44581c:	pushf  
  44581d:	popf   
  44581e:	sahf   
  44581f:	lahf   
  445820:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  445829:	test   eax,0xadacabaa
  44582e:	scas   al,BYTE PTR es:[rdi]
  44582f:	scas   eax,DWORD PTR es:[rdi]
  445830:	mov    al,0xb1
  445832:	mov    dl,0xb3
  445834:	mov    ah,0xb5
  445836:	mov    dh,0xb7
  445838:	mov    eax,0xbcbbbab9
  44583d:	mov    ebp,0xc1c0bfbe
  445842:	ret    0xc4c3
  445845:	(bad)
  445848:	enter  0xcac9,0xcb
  44584c:	int3   
  44584d:	int    0xce
  44584f:	iret   
  445850:	rcl    cl,1
  445852:	rcl    bl,cl
  445854:	(bad)  
  445855:	(bad)  
  445856:	(bad)  
  445857:	xlat   BYTE PTR ds:[rbx]
  445858:	fcomp  st(1)
  44585a:	fcmovu st,st(3)
  44585c:	(bad)  
  44585e:	(bad)  
  445860:	loopne 0x445843
  445862:	loop   0x445847
  445864:	in     al,0xe5
  445866:	out    0xe7,al
  445868:	call   0xffffffffed304356
  44586d:	in     eax,dx
  44586e:	out    dx,al
  44586f:	out    dx,eax
  445870:	lock icebp 
  445872:	repnz repz hlt 
  445875:	cmc    
  445876:	div    bh
  445878:	clc    
  445879:	stc    
  44587a:	cli    
  44587b:	sti    
  44587c:	cld    
  44587d:	std    
  44587e:	(bad)  
  44587f:	inc    DWORD PTR [rax]
  445881:	add    DWORD PTR [rdx],eax
  445883:	add    eax,DWORD PTR [rax*1+0x9080706]
  44588a:	or     cl,BYTE PTR [rbx]
  44588c:	or     al,0xd
  44588e:	(bad)  
  44588f:	movups xmm2,XMMWORD PTR [rcx]
  445892:	adc    dl,BYTE PTR [rbx]
  445894:	adc    al,0x15
  445896:	(bad)  
  445897:	(bad)  
  445898:	sbb    BYTE PTR [rcx],bl
  44589a:	sbb    bl,BYTE PTR [rbx]
  44589c:	sbb    al,0x1d
  44589e:	(bad)  
  44589f:	(bad)  
  4458a0:	and    BYTE PTR [rcx],ah
  4458a2:	and    ah,BYTE PTR [rbx]
  4458a4:	and    al,0x25
  4458a6:	es (bad) 
  4458a8:	sub    BYTE PTR [rcx],ch
  4458aa:	sub    ch,BYTE PTR [rbx]
  4458ac:	sub    al,0x2d
  4458ae:	cs (bad) 
  4458b0:	xor    BYTE PTR [rcx],dh
  4458b2:	xor    dh,BYTE PTR [rbx]
  4458b4:	xor    al,0x35
  4458b6:	ss (bad) 
  4458b8:	cmp    BYTE PTR [rcx],bh
  4458ba:	cmp    bh,BYTE PTR [rbx]
  4458bc:	cmp    al,0x3d
  4458be:	ds (bad) 
  4458c0:	rex (bad) 
  4458c2:	(bad)
  4458c7:	addr32 push 0x6c6b6a69
  4458cd:	ins    DWORD PTR es:[rdi],dx
  4458ce:	outs   dx,BYTE PTR ds:[rsi]
  4458cf:	outs   dx,DWORD PTR ds:[rsi]
  4458d0:	jo     0x445943
  4458d2:	jb     0x445947
  4458d4:	je     0x44594b
  4458d6:	jbe    0x44594f
  4458d8:	js     0x445953
  4458da:	jp     0x445937
  4458dc:	pop    rsp
  4458dd:	pop    rbp
  4458de:	pop    rsi
  4458df:	pop    rdi
  4458e0:	(bad)  
  4458e1:	(bad)  
  4458e2:	(bad)
  4458e7:	addr32 push 0x6c6b6a69
  4458ed:	ins    DWORD PTR es:[rdi],dx
  4458ee:	outs   dx,BYTE PTR ds:[rsi]
  4458ef:	outs   dx,DWORD PTR ds:[rsi]
  4458f0:	jo     0x445963
  4458f2:	jb     0x445967
  4458f4:	je     0x44596b
  4458f6:	jbe    0x44596f
  4458f8:	js     0x445973
  4458fa:	jp     0x445977
  4458fc:	jl     0x44597b
  4458fe:	jle    0x44597f
  445900:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  445907:	xchg   DWORD PTR [rax-0x73747577],ecx
  44590d:	lea    ecx,[rsi-0x6d6e6f71]
  445913:	xchg   ebx,eax
  445914:	xchg   esp,eax
  445915:	xchg   ebp,eax
  445916:	xchg   esi,eax
  445917:	xchg   edi,eax
  445918:	cwde   
  445919:	cdq    
  44591a:	(bad)  
  44591b:	fwait
  44591c:	pushf  
  44591d:	popf   
  44591e:	sahf   
  44591f:	lahf   
  445920:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  445929:	test   eax,0xadacabaa
  44592e:	scas   al,BYTE PTR es:[rdi]
  44592f:	scas   eax,DWORD PTR es:[rdi]
  445930:	mov    al,0xb1
  445932:	mov    dl,0xb3
  445934:	mov    ah,0xb5
  445936:	mov    dh,0xb7
  445938:	mov    eax,0xbcbbbab9
  44593d:	mov    ebp,0xc1c0bfbe
  445942:	ret    0xc4c3
  445945:	(bad)
  445948:	enter  0xcac9,0xcb
  44594c:	int3   
  44594d:	int    0xce
  44594f:	iret   
  445950:	rcl    cl,1
  445952:	rcl    bl,cl
  445954:	(bad)  
  445955:	(bad)  
  445956:	(bad)  
  445957:	xlat   BYTE PTR ds:[rbx]
  445958:	fcomp  st(1)
  44595a:	fcmovu st,st(3)
  44595c:	(bad)  
  44595e:	(bad)  
  445960:	loopne 0x445943
  445962:	loop   0x445947
  445964:	in     al,0xe5
  445966:	out    0xe7,al
  445968:	call   0xffffffffed304456
  44596d:	in     eax,dx
  44596e:	out    dx,al
  44596f:	out    dx,eax
  445970:	lock icebp 
  445972:	repnz repz hlt 
  445975:	cmc    
  445976:	div    bh
  445978:	clc    
  445979:	stc    
  44597a:	cli    
  44597b:	sti    
  44597c:	cld    
  44597d:	std    
  44597e:	(bad)  
  44597f:	inc    DWORD PTR [rdx]
  445981:	or     BYTE PTR [rdx],al
  445983:	add    BYTE PTR [rdx],al
  445985:	add    BYTE PTR [rdx],al
  445987:	add    BYTE PTR [rdx],al
  445989:	add    BYTE PTR [rdx],al
  44598b:	add    BYTE PTR [rdx],al
  44598d:	add    BYTE PTR [rdx],al
  44598f:	add    BYTE PTR [rdx],al
  445991:	add    BYTE PTR [rbx+0x8],al
  445994:	rex.X add al,0x42
  445997:	or     BYTE PTR [rdx+0x8],al
  44599a:	rex.X add al,0x2
  44599d:	add    BYTE PTR [rdx],al
  44599f:	add    BYTE PTR [rdx],al
  4459a1:	add    BYTE PTR [rdx],al
  4459a3:	add    BYTE PTR [rdx],al
  4459a5:	add    BYTE PTR [rdx],al
  4459a7:	add    BYTE PTR [rdx],al
  4459a9:	add    BYTE PTR [rdx],al
  4459ab:	add    BYTE PTR [rdx],al
  4459ad:	add    BYTE PTR [rdx],al
  4459af:	add    BYTE PTR [rdx],al
  4459b1:	add    BYTE PTR [rdx],al
  4459b3:	add    BYTE PTR [rdx],al
  4459b5:	add    BYTE PTR [rdx],al
  4459b7:	add    BYTE PTR [rdx],al
  4459b9:	add    BYTE PTR [rdx],al
  4459bb:	add    BYTE PTR [rdx],al
  4459bd:	add    BYTE PTR [rdx],al
  4459bf:	add    BYTE PTR [rcx+0x8],dl
  4459c2:	xor    BYTE PTR [rax],al
  4459c4:	xor    BYTE PTR [rax],al
  4459c6:	xor    BYTE PTR [rax],al
  4459c8:	xor    BYTE PTR [rax],al
  4459ca:	xor    BYTE PTR [rax],al
  4459cc:	xor    BYTE PTR [rax],al
  4459ce:	xor    BYTE PTR [rax],al
  4459d0:	xor    BYTE PTR [rax],al
  4459d2:	xor    BYTE PTR [rax],al
  4459d4:	xor    BYTE PTR [rax],al
  4459d6:	xor    BYTE PTR [rax],al
  4459d8:	xor    BYTE PTR [rax],al
  4459da:	xor    BYTE PTR [rax],al
  4459dc:	xor    BYTE PTR [rax],al
  4459de:	xor    BYTE PTR [rax],al
  4459e0:	adc    al,0x1
  4459e2:	adc    al,0x1
  4459e4:	adc    al,0x1
  4459e6:	adc    al,0x1
  4459e8:	adc    al,0x1
  4459ea:	adc    al,0x1
  4459ec:	adc    al,0x1
  4459ee:	adc    al,0x1
  4459f0:	adc    al,0x1
  4459f2:	adc    al,0x1
  4459f4:	xor    BYTE PTR [rax],al
  4459f6:	xor    BYTE PTR [rax],al
  4459f8:	xor    BYTE PTR [rax],al
  4459fa:	xor    BYTE PTR [rax],al
  4459fc:	xor    BYTE PTR [rax],al
  4459fe:	xor    BYTE PTR [rax],al
  445a00:	xor    BYTE PTR [rax],al
  445a02:	nop
  445a03:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  445a09:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  445a0f:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a15:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a1b:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a21:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a27:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a2d:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  445a33:	add    dl,BYTE PTR [rax+0x30003002]
  445a39:	add    BYTE PTR [rax],dh
  445a3b:	add    BYTE PTR [rax],dh
  445a3d:	add    BYTE PTR [rax],dh
  445a3f:	add    dh,BYTE PTR [rax]
  445a41:	add    BYTE PTR [rax],bl
  445a43:	add    ebx,DWORD PTR [rax]
  445a45:	add    ebx,DWORD PTR [rax]
  445a47:	add    ebx,DWORD PTR [rax]
  445a49:	add    ebx,DWORD PTR [rax]
  445a4b:	add    ebx,DWORD PTR [rax]
  445a4d:	add    ebx,DWORD PTR [rax]
  445a4f:	add    bl,BYTE PTR [rax]
  445a51:	add    bl,BYTE PTR [rax]
  445a53:	add    bl,BYTE PTR [rax]
  445a55:	add    bl,BYTE PTR [rax]
  445a57:	add    bl,BYTE PTR [rax]
  445a59:	add    bl,BYTE PTR [rax]
  445a5b:	add    bl,BYTE PTR [rax]
  445a5d:	add    bl,BYTE PTR [rax]
  445a5f:	add    bl,BYTE PTR [rax]
  445a61:	add    bl,BYTE PTR [rax]
  445a63:	add    bl,BYTE PTR [rax]
  445a65:	add    bl,BYTE PTR [rax]
  445a67:	add    bl,BYTE PTR [rax]
  445a69:	add    bl,BYTE PTR [rax]
  445a6b:	add    bl,BYTE PTR [rax]
  445a6d:	add    bl,BYTE PTR [rax]
  445a6f:	add    bl,BYTE PTR [rax]
  445a71:	add    bl,BYTE PTR [rax]
  445a73:	add    bl,BYTE PTR [rax]
  445a75:	add    dh,BYTE PTR [rax]
  445a77:	add    BYTE PTR [rax],dh
  445a79:	add    BYTE PTR [rax],dh
  445a7b:	add    BYTE PTR [rax],dh
  445a7d:	add    BYTE PTR [rdx],al
	...
  445b7f:	add    BYTE PTR [rax-0x3],al
  445b82:	add    BYTE PTR [rax],r8b
  445b85:	add    BYTE PTR [rax],al
  445b87:	add    BYTE PTR [rax-0x8],al
  445b8a:	add    BYTE PTR [rax],r8b
  445b8d:	add    BYTE PTR [rax],al
  445b8f:	add    al,al
  445b91:	rex.RB
  445b92:	rex.X add BYTE PTR [rax],al
	...
  445b9d:	add    BYTE PTR [rax],al
  445b9f:	add    BYTE PTR [rcx+0x72],al
  445ba2:	addr32 jne 0x445c12
  445ba5:	outs   dx,BYTE PTR gs:[rsi]
  445ba7:	je     0x445bc9
  445ba9:	outs   dx,DWORD PTR fs:[rsi]
  445bab:	ins    DWORD PTR es:[rdi],dx
  445bac:	(bad)  
  445bad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  445bb4:	jb     0x445bd6
  445bb6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  445bba:	rex.B
  445bbb:	rex.WB
  445bbc:	rex.WRX sub QWORD PTR [rax],r8
  445bbf:	rex.B jb 0x445c29
  445bc2:	jne    0x445c31
  445bc4:	outs   dx,BYTE PTR gs:[rsi]
  445bc6:	je     0x445be8
  445bc8:	jae    0x445c33
  445bca:	outs   dx,BYTE PTR ds:[rsi]
  445bcb:	addr32 jne 0x445c3a
  445bce:	(bad)  
  445bcf:	jb     0x445c3a
  445bd1:	je     0x445c4c
  445bd3:	and    BYTE PTR [rax],ch
  445bd5:	push   rbx
  445bd6:	rex.WB
  445bd7:	rex.RXB
  445bd8:	rex.WRX sub QWORD PTR [rax],r8
  445bdb:	add    BYTE PTR [rax],al
  445bdd:	add    BYTE PTR [rax],al
  445bdf:	add    BYTE PTR [rdi+0x76],cl
  445be2:	gs jb  0x445c4b
  445be5:	ins    BYTE PTR es:[rdi],dx
  445be6:	outs   dx,DWORD PTR ds:[rsi]
  445be7:	ja     0x445c09
  445be9:	jb     0x445c4c
  445beb:	outs   dx,BYTE PTR ds:[rsi]
  445bec:	and    BYTE PTR gs:[ebp+0x72],ah
  445bf1:	jb     0x445c62
  445bf3:	jb     0x445c15
  445bf5:	sub    BYTE PTR [rdi+0x56],cl
  445bf8:	rex.RB push r10
  445bfa:	rex.RX
  445bfb:	rex.WR
  445bfc:	rex.WRXB push r15
  445bfe:	sub    DWORD PTR [rax],eax
  445c00:	push   rax
  445c01:	(bad)  
  445c02:	jb     0x445c78
  445c04:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  445c0b:	jae    0x445c2d
  445c0d:	outs   dx,DWORD PTR ds:[rsi]
  445c0e:	data16 and BYTE PTR [rbx+0x69],dh
  445c12:	outs   dx,BYTE PTR ds:[esi]
  445c14:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  445c1b:	and    BYTE PTR gs:[rax],ch
  445c1e:	push   rax
  445c1f:	rex.WR
  445c20:	rex.WRXB push r11
  445c22:	push   rbx
  445c23:	sub    DWORD PTR [rax],eax
  445c25:	add    BYTE PTR [rax],al
  445c27:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  445c2b:	(bad)  
  445c2c:	ins    BYTE PTR es:[rdi],dx
  445c2d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  445c31:	jae    0x445c53
  445c33:	outs   dx,DWORD PTR ds:[rsi]
  445c34:	data16 and BYTE PTR [rbx+0x69],dh
  445c38:	outs   dx,BYTE PTR ds:[esi]
  445c3a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  445c41:	and    BYTE PTR gs:[rax],ch
  445c44:	push   rsp
  445c45:	rex.WR
  445c46:	rex.WRXB push r11
  445c48:	push   rbx
  445c49:	sub    DWORD PTR [rax],eax
  445c4b:	add    BYTE PTR [rax],al
  445c4d:	add    BYTE PTR [rax],al
  445c4f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  445c53:	and    BYTE PTR [rdx+0x65],dh
  445c56:	jae    0x445ccd
  445c58:	ins    BYTE PTR es:[rdi],dx
  445c59:	je     0x445c7b
  445c5b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  445c62:	jae    0x445cd1
  445c64:	(bad)  
  445c65:	ins    BYTE PTR es:[rdi],dx
  445c66:	ins    BYTE PTR es:[rdi],dx
  445c67:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  445c6b:	(bad)  
  445c6c:	and    BYTE PTR gs:[rdx+0x65],dh
  445c70:	jo     0x445ce4
  445c72:	gs jae 0x445cda
  445c75:	outs   dx,BYTE PTR ds:[rsi]
  445c76:	je     0x445cdd
  445c78:	and    BYTE PTR fs:[rax],ch
  445c7b:	push   rbp
  445c7c:	rex.WRX
  445c7d:	rex.R
  445c7e:	rex.RB push r10
  445c80:	rex.RX
  445c81:	rex.WR
  445c82:	rex.WRXB push r15
  445c84:	sub    DWORD PTR [rax],eax
  445c86:	push   rbp
  445c87:	outs   dx,BYTE PTR ds:[rsi]
  445c88:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  445c8c:	outs   dx,BYTE PTR ds:[rsi]
  445c8d:	and    BYTE PTR [rbp+0x72],ah
  445c90:	jb     0x445d01
  445c92:	jb     0x445c94
  445c94:	add    BYTE PTR [rax],al
  445c96:	add    BYTE PTR [rax],al
  445c98:	pop    rdi
  445c99:	ins    DWORD PTR es:[rdi],dx
  445c9a:	(bad)  
  445c9b:	je     0x445d05
  445c9d:	gs jb  0x445d12
  445ca0:	sub    BYTE PTR [rcx],ch
  445ca2:	cmp    ah,BYTE PTR [rax]
  445ca4:	and    eax,0x6e692073
  445ca9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67698522
  445caf:	sub    al,0x20
  445cb1:	and    eax,0x20202967
  445cb6:	sub    BYTE PTR [rdx+0x65],dh
  445cb9:	je     0x445d31
  445cbb:	(bad)  
  445cbc:	ins    BYTE PTR es:[rdi],dx
  445cbd:	cmp    eax,0xa296725
  445cc2:	add    BYTE PTR [rax],al
  445cc4:	int3   
  445cc5:	(bad)  
  445cc6:	std    
  445cc7:	dec    DWORD PTR [rip+0x7cfffdea]        # 0x7d445ab7
  445ccd:	(bad)  
  445cce:	std    
  445ccf:	dec    DWORD PTR [rdx+rbp*8-0x15630003]
  445cd6:	std    
  445cd7:	jmp    FWORD PTR [rdx+rbp*8-0x15430003]
  445cde:	std    
  445cdf:	dec    DWORD PTR [rbp+0x69]
  445ce2:	outs   dx,BYTE PTR ds:[rsi]
  445ce3:	addr32 ja 0x445d13
  445ce6:	ja     0x445d1e
  445ce8:	xor    al,0x20
  445cea:	jb     0x445d61
  445cec:	outs   dx,BYTE PTR ds:[rsi]
  445ced:	je     0x445d58
  445cef:	ins    DWORD PTR es:[rdi],dx
  445cf0:	and    BYTE PTR gs:[rsi+0x61],ah
  445cf4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  445cfc:	add    BYTE PTR [rax],al
  445cfe:	add    BYTE PTR [rax],al
  445d00:	rex.B
  445d01:	fs fs jb 0x445d6a
  445d05:	jae    0x445d7a
  445d07:	and    BYTE PTR [rip+0x61682070],ah        # 0x61ac7d7d
  445d0d:	jae    0x445d2f
  445d0f:	outs   dx,BYTE PTR ds:[rsi]
  445d10:	outs   dx,DWORD PTR ds:[rsi]
  445d11:	and    BYTE PTR [rcx+0x6d],ch
  445d14:	(bad)  
  445d15:	addr32 gs sub eax,0x74636573
  445d1c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  445d23:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  445d2a:	jne    0x445d91
  445d2c:	jb     0x445da7
  445d2e:	and    BYTE PTR [rsi+0x61],ah
  445d31:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  445d39:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a67da3
  445d3f:	je     0x445da6
  445d41:	jae    0x445d63
  445d43:	(bad)  
  445d44:	je     0x445d66
  445d46:	(bad)  
  445d47:	fs fs jb 0x445db0
  445d4b:	jae    0x445dc0
  445d4d:	and    BYTE PTR [rip+0x70],ah        # 0x445dc3
  445d53:	add    BYTE PTR [rax],al
  445d55:	add    BYTE PTR [rax],al
  445d57:	add    BYTE PTR [rax],ah
  445d59:	and    BYTE PTR [rsi+0x69],dl
  445d5c:	jb     0x445dd2
  445d5e:	jne    0x445dc1
  445d60:	ins    BYTE PTR es:[rdi],dx
  445d61:	push   rax
  445d62:	jb     0x445dd3
  445d64:	je     0x445dcb
  445d66:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  445d6a:	(bad)  
  445d6b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  445d73:	push   0x646f6320
  445d78:	and    BYTE PTR gs:[rax],dh
  445d7b:	js     0x445da2
  445d7d:	js     0x445d7f
  445d7f:	add    BYTE PTR [rax],ah
  445d81:	and    BYTE PTR [rbp+0x6e],dl
  445d84:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  445d88:	outs   dx,BYTE PTR ds:[rsi]
  445d89:	and    BYTE PTR [rax+0x73],dh
  445d8c:	gs jne 0x445df3
  445d8f:	outs   dx,DWORD PTR ds:[rsi]
  445d90:	and    BYTE PTR [rdx+0x65],dh
  445d93:	ins    BYTE PTR es:[rdi],dx
  445d94:	outs   dx,DWORD PTR ds:[rsi]
  445d95:	movsxd esp,DWORD PTR [rcx+0x74]
  445d98:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  445d9f:	je     0x445e10
  445da1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  445da4:	and    BYTE PTR [rsi+0x65],dh
  445da7:	jb     0x445e1c
  445da9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  445db0:	or     al,BYTE PTR [rax]
  445db2:	add    BYTE PTR [rax],al
  445db4:	add    BYTE PTR [rax],al
  445db6:	add    BYTE PTR [rax],al
  445db8:	and    BYTE PTR [rax],ah
  445dba:	push   rbp
  445dbb:	outs   dx,BYTE PTR ds:[rsi]
  445dbc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  445dc0:	outs   dx,BYTE PTR ds:[rsi]
  445dc1:	and    BYTE PTR [rax+0x73],dh
  445dc4:	gs jne 0x445e2b
  445dc7:	outs   dx,DWORD PTR ds:[rsi]
  445dc8:	and    BYTE PTR [rdx+0x65],dh
  445dcb:	ins    BYTE PTR es:[rdi],dx
  445dcc:	outs   dx,DWORD PTR ds:[rsi]
  445dcd:	movsxd esp,DWORD PTR [rcx+0x74]
  445dd0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  445dd7:	and    BYTE PTR [rbx+0x69],dh
  445dda:	jp     0x445e41
  445ddc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4e8c46
	...
  445dee:	add    BYTE PTR [rax],al
  445df0:	cs jo  0x445e57
  445df3:	(bad)  
  445df4:	je     0x445e57
	...
  445dfe:	add    BYTE PTR [rax],al
  445e00:	rex.WRX (bad) 
  445e02:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  445e06:	data16 add BYTE PTR [rax],ch
  445e09:	add    BYTE PTR [rsi+0x0],ch
  445e0c:	jne    0x445e0e
  445e0e:	ins    BYTE PTR es:[rdi],dx
  445e0f:	add    BYTE PTR [rax+rax*1+0x29],ch
  445e13:	add    BYTE PTR [rax],al
  445e15:	add    BYTE PTR [rax],ch
  445e17:	outs   dx,BYTE PTR ds:[rsi]
  445e18:	jne    0x445e86
  445e1a:	ins    BYTE PTR es:[rdi],dx
  445e1b:	sub    DWORD PTR [rax],eax
  445e1d:	push   rax
  445e1e:	push   rdx
  445e1f:	rex.WB
  445e20:	rex.WRX push rsp
  445e22:	rex.RX pop rdi
  445e24:	rex.RB pop r8
  445e26:	push   rax
  445e27:	rex.WRXB
  445e28:	rex.WRX
  445e29:	rex.RB
  445e2a:	rex.WRX push rsp
  445e2c:	pop    rdi
  445e2d:	rex.R
  445e2e:	rex.WB
  445e2f:	rex.RXB
  445e30:	rex.WB push r12
  445e32:	push   rbx
  445e33:	add    BYTE PTR [rbx+rbx*1],bh
  445e36:	(bad)  
  445e37:	(bad)  
  445e38:	mov    esp,0xbcfffe1b
  445e3d:	sbb    edi,esi
  445e3f:	call   FWORD PTR [rbx+rbx*1]
  445e42:	(bad)  
  445e43:	(bad)  
  445e44:	mov    esp,0x6efffe1b
  445e49:	sbb    edi,esi
  445e4b:	(bad)  
  445e4c:	mov    esp,0x5cfffe1b
  445e51:	sbb    edi,esi
  445e53:	(bad)  
  445e54:	mov    esp,0xbcfffe1b
  445e59:	sbb    edi,esi
  445e5b:	(bad)  
  445e5c:	jl     0x445e79
  445e5e:	(bad)  
  445e5f:	(bad)  
  445e60:	cld    
  445e61:	sbb    bh,dh
  445e63:	(bad)  
  445e64:	mov    esp,0xdcfffe1b
  445e69:	sbb    bh,dh
  445e6b:	(bad)  
  445e6c:	mov    esp,0xbcfffe1a
  445e71:	sbb    edi,esi
  445e73:	call   FWORD PTR [rdx+rbx*1+0x1bbcfffe]
  445e7a:	(bad)  
  445e7b:	(bad)  
  445e7c:	mov    esp,0xbcfffe1b
  445e81:	sbb    edi,esi
  445e83:	(bad)  
  445e84:	mov    esp,0xbcfffe1b
  445e89:	sbb    edi,esi
  445e8b:	(bad)  
  445e8c:	mov    esp,0xbcfffe1b
  445e91:	sbb    edi,esi
  445e93:	(bad)  
  445e94:	mov    esp,0xbcfffe1b
  445e99:	sbb    edi,esi
  445e9b:	(bad)  
  445e9c:	mov    esp,0xbcfffe1b
  445ea1:	sbb    edi,esi
  445ea3:	(bad)  
  445ea4:	mov    esp,0xbcfffe1b
  445ea9:	sbb    edi,esi
  445eab:	(bad)  
  445eac:	mov    esp,0xbcfffe1b
  445eb1:	sbb    edi,esi
  445eb3:	(bad)  
  445eb4:	mov    esp,0x6efffe1b
  445eb9:	sbb    bh,dh
  445ebb:	(bad)  
  445ebc:	mov    esp,0x3cfffe1b
  445ec1:	sbb    bh,dh
  445ec3:	(bad)  
  445ec4:	mov    esp,0xdfffe1b
  445ec9:	sbb    bh,dh
  445ecb:	(bad)  
  445ecc:	fistp  WORD PTR [rcx]
  445ece:	(bad)  
  445ecf:	push   QWORD PTR [rcx-0x430001e7]
  445ed5:	sbb    edi,esi
  445ed7:	dec    DWORD PTR [rcx+rbx*1+0x1bbcfffe]
  445ede:	(bad)  
  445edf:	(bad)  
  445ee0:	mov    esp,0x6cfffe1b
  445ee5:	sbb    esi,edi
  445ee7:	(bad)  
  445ee8:	mov    esp,0xbcfffe1b
  445eed:	sbb    edi,esi
  445eef:	(bad)  
  445ef0:	mov    esp,0xbcfffe1b
  445ef5:	sbb    edi,esi
  445ef7:	(bad)  
  445ef8:	mov    esp,0xbcfffe1b
  445efd:	sbb    edi,esi
  445eff:	(bad)  
  445f00:	call   FWORD PTR [rbx]
  445f02:	(bad)  
  445f03:	(bad)  
  445f04:	mov    esp,0xbcfffe1b
  445f09:	sbb    edi,esi
  445f0b:	(bad)  
  445f0c:	mov    esp,0xbcfffe1b
  445f11:	sbb    edi,esi
  445f13:	(bad)  
  445f14:	cmp    al,0x18
  445f16:	(bad)  
  445f17:	(bad)  
  445f18:	mov    esp,0xbcfffe1b
  445f1d:	sbb    edi,esi
  445f1f:	(bad)  
  445f20:	mov    esp,0xbcfffe1b
  445f25:	sbb    edi,esi
  445f27:	(bad)  
  445f28:	mov    esp,0xbcfffe1b
  445f2d:	sbb    edi,esi
  445f2f:	(bad)  
  445f30:	mov    esp,0xbcfffe1b
  445f35:	sbb    edi,esi
  445f37:	dec    esp
  445f39:	sbb    dh,bh
  445f3b:	(bad)  
  445f3c:	mov    esp,0x8dfffe1b
  445f41:	sbb    dh,bh
  445f43:	dec    DWORD PTR [rcx+rbx*1]
  445f46:	(bad)  
  445f47:	(bad)  
  445f48:	cld    
  445f49:	(bad)  
  445f4a:	(bad)  
  445f4b:	(bad)  
  445f4c:	mov    esp,0x4ffffe17
  445f51:	(bad)  
  445f52:	(bad)  
  445f53:	dec    DWORD PTR [rdi+rdx*1+0x190cfffe]
  445f5a:	(bad)  
  445f5b:	jmp    FWORD PTR [rdi+rdx*1]
  445f5e:	(bad)  
  445f5f:	(bad)  
  445f60:	mov    esp,0xfcfffe1b
  445f65:	(bad)  
  445f66:	(bad)  
  445f67:	dec    esp
  445f69:	(bad)  
  445f6a:	(bad)  
  445f6b:	dec    DWORD PTR [rsi+rdx*1+0x183cfffe]
  445f72:	(bad)  
  445f73:	dec    DWORD PTR [rsi+rdx*1-0x2]
  445f77:	(bad)  
  445f78:	mov    esp,0xbcfffe1b
  445f7d:	sbb    edi,esi
  445f7f:	inc    DWORD PTR [rcx]
  445f81:	(bad)  
  445f82:	(bad)  
  445f83:	jmp    FWORD PTR [rdi+rdx*1]
  445f86:	(bad)  
  445f87:	(bad)  
  445f88:	cmp    al,0x18
  445f8a:	(bad)  
  445f8b:	(bad)  
  445f8c:	mov    esp,0xbcfffe1b
  445f91:	sbb    edi,esi
  445f93:	(bad)  
  445f94:	cmp    al,0x18
  445f96:	(bad)  
  445f97:	(bad)  
  445f98:	mov    esp,0x2cfffe1b
  445f9d:	(bad)  
  445f9e:	(bad)  
  445f9f:	dec    DWORD PTR [rcx+0x6e]
  445fa2:	imul   bp,WORD PTR [rsi+0x69],0x7974
  445fa8:	add    BYTE PTR [rsi+0x61],cl
  445fab:	rex.WRX add BYTE PTR [rax],r14b
  445fae:	add    BYTE PTR [rax],al
  445fb0:	outs   dx,BYTE PTR ds:[rsi]
  445fb1:	and    dh,bh
  445fb3:	jmp    QWORD PTR [rdi+rbx*1+0x1fa4fffe]
  445fba:	(bad)  
  445fbb:	jmp    rax
  445fbd:	and    dh,bh
  445fbf:	push   QWORD PTR [rbx+0xfffe20]
	...
  445fcd:	add    al,bh
  445fcf:	(bad)  
  445fd0:	(bad)  
  445fd1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  445fd3:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  445fd9:	enter  0x8b60,0x28
  445fdd:	mov    al,dh
  445fdf:	(bad)  
  445fe0:	sti    
  445fe1:	jns    0x445f82
  445fe3:	push   rax
  445fe4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  445fe8:	add    al,0xfa
  445fea:	jge    0x445f89
  445fec:	(bad)  
  445fed:	sub    eax,0x5a323c94
  445ff2:	rex.RXB push r13
  445ff4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  445ff8:	add    BYTE PTR [rax],al
  445ffa:	add    BYTE PTR [rax],al
  445ffc:	add    BYTE PTR [rax],al
  445ffe:	lock (bad) 
  446000:	add    BYTE PTR [rax],al
  446002:	add    BYTE PTR [rax],al
  446004:	add    BYTE PTR [rax],al
  446006:	and    al,0x40
  446008:	add    BYTE PTR [rax],al
  44600a:	add    BYTE PTR [rax],al
  44600c:	add    BYTE PTR [rax],al
  44600e:	or     BYTE PTR [rax+0x0],al
  446011:	add    BYTE PTR [rax],al
  446013:	add    BYTE PTR [rax],al
  446015:	add    BYTE PTR [rax+rax*2],bl
  446018:	add    BYTE PTR [rax],al
  44601a:	add    BYTE PTR [rax],al
  44601c:	add    BYTE PTR [rax],al
  44601e:	adc    al,0x40
  446020:	add    BYTE PTR [rax],al
  446022:	add    BYTE PTR [rax],al
  446024:	add    BYTE PTR [rax],al
  446026:	add    BYTE PTR [rax+0x0],al
	...
  446034:	add    BYTE PTR [rax],al
  446036:	loopne 0x446077
	...
  446040:	add    eax,0x19000000
  446045:	add    BYTE PTR [rax],al
  446047:	add    BYTE PTR [rbp+0x0],bh
	...
  446086:	lock (bad) 
  446088:	add    BYTE PTR [rax],al
  44608a:	add    BYTE PTR [rax],al
  44608c:	add    BYTE PTR [rax],al
  44608e:	and    al,0x40
  446090:	add    BYTE PTR [rax],al
  446092:	add    BYTE PTR [rax],al
  446094:	add    BYTE PTR [rax],al
  446096:	pop    rcx
  446097:	add    BYTE PTR [rax],al
  44609a:	add    BYTE PTR [rax],al
  44609c:	add    BYTE PTR [rax-0x71],al
  44609f:	add    BYTE PTR [rax],al
  4460a2:	add    BYTE PTR [rax],al
  4460a4:	add    BYTE PTR [rax+0x40c3],cl
  4460aa:	add    BYTE PTR [rax],al
  4460ac:	add    BYTE PTR [rdx-0x8],ch
  4460af:	add    BYTE PTR [rax],al
  4460b2:	add    BYTE PTR [rax],al
  4460b4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  4460bc:	rcl    BYTE PTR [rdx],1
  4460be:	movsxd eax,DWORD PTR [rcx+0x0]
  4460c1:	add    BYTE PTR [rax],al
  4460c3:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  4460ca:	add    BYTE PTR [rax],al
  4460cc:	gs int 0xcd
  4460cf:	add    BYTE PTR [r8],al
  4460d2:	add    BYTE PTR [rax],ah
  4460d4:	pop    rdi
  4460d5:	movabs al,ds:0x4876e80000004202
  4460de:	(bad)  
  4460df:	rex.X add BYTE PTR [rax],al
  4460e2:	add    BYTE PTR [rdx+0x426d1a94],ah
  4460e8:	add    BYTE PTR [rax],al
  4460ea:	rex in eax,0x9c
  4460ed:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  4460f3:	(bad)  
  4460f4:	(bad)  
  4460f5:	mov    esp,0x42d6
  4460fa:	xor    al,0x26
  4460fc:	cmc    
  4460fd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  446101:	and    al,0x37
  446104:	jns    0x4460c9
  446106:	rex.B
  446107:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  44610e:	jbe    0x446153
  446110:	add    al,cl
  446112:	rex.WRX
  446113:	ins    DWORD PTR es:[edi],dx
  446115:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  44611c:	in     al,0x58
  44611e:	loope  0x446163
  446120:	rex mov WORD PTR [rbp+0x15af1d78],?
  446127:	rex.R push rax
  446129:	out    dx,eax
  44612a:	loop   0x446102
  44612c:	in     al,0x1a
  44612e:	rex.WXB
  44612f:	rex.R xchg edx,eax
  446131:	(bad)  
  446132:	rex.WRB (bad) 
  446134:	iret   
  446135:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  44613b:	add    BYTE PTR [rax],al
  44613d:	add    BYTE PTR [rax],al
  44613f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  446146:	pushf  
  446147:	cmp    al,0x33
  446149:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44614a:	test   al,0xd5
  44614c:	and    esi,esi
  44614e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd8955fc
  446155:	shld   DWORD PTR [rdx],esi,cl
  446158:	popf   
  446159:	xchg   edi,eax
  44615a:	mov    edi,cs
  44615c:	or     BYTE PTR [rdx+0x6f43255b],bh
  446162:	lods   al,BYTE PTR ds:[rsi]
  446163:	sub    BYTE PTR fs:[rsi],al
  446166:	enter  0xa,0x0
	...
  44617e:	add    BYTE PTR [rax],al
  446180:	add    BYTE PTR [rax-0x3c86c820],al
  446186:	rex.B
  446187:	rex.XB (bad) 
  446189:	outs   dx,BYTE PTR ds:[rsi]
  44618a:	add    eax,0x93b8b5b5
  44618f:	rex.RX cmc 
  446191:	stc    
  446192:	(bad)  
  446193:	jmp    0x4d7cb09b
  446198:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778d5ace
  44619e:	(bad)  
  44619f:	pop    rdx
  4461a0:	cmp    al,0xbf
  4461a2:	jae    0x446223
  4461a4:	fisttp QWORD PTR [rdi+0x15]
  4461a7:	jne    0x4461a9
	...
  4461bd:	add    BYTE PTR [rax],al
  4461bf:	add    BYTE PTR [rbp+0x0],ch
  4461c2:	jae    0x4461c4
  4461c4:	jbe    0x4461c6
  4461c6:	movsxd eax,DWORD PTR [rax]
  4461c8:	jb     0x4461ca
  4461ca:	je     0x4461cc
  4461cc:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  4461d1:	add    BYTE PTR [rax+rax*1+0x0],ch
  4461d5:	add    BYTE PTR [rdi+0x73],bl
  4461d8:	gs je  0x44623a
  4461db:	outs   dx,DWORD PTR ds:[rsi]
  4461dc:	jne    0x446252
  4461de:	jo     0x446255
  4461e0:	je     0x446241
  4461e2:	outs   dx,WORD PTR ds:[rsi]
  4461e4:	jb     0x446253
  4461e6:	(bad)  
  4461e7:	je     0x4461e9
  4461e9:	pop    rdi
  4461ea:	addr32 gs je 0x44624d
  4461ee:	outs   dx,DWORD PTR ds:[rsi]
  4461ef:	jne    0x446265
  4461f1:	jo     0x446268
  4461f3:	je     0x446254
  4461f5:	outs   dx,WORD PTR ds:[rsi]
  4461f7:	jb     0x446266
  4461f9:	(bad)  
  4461fa:	je     0x4461fc
  4461fc:	add    BYTE PTR [rax],al
  4461fe:	add    BYTE PTR [rax],al
  446200:	mov    al,0x49
  446202:	add    al,BYTE PTR [rax]
	...
  446210:	mov    al,0xf3
  446212:	rex.X add BYTE PTR [rax],al
	...
  44621d:	add    BYTE PTR [rax],al
  44621f:	add    al,al
  446221:	repz rex.X add BYTE PTR [rax],al
	...
  44622d:	add    BYTE PTR [rax],al
  44622f:	add    BYTE PTR [rax+0x41d4],al
	...
  44623d:	add    BYTE PTR [rax],al
  44623f:	add    al,al
  446241:	mov    esp,0x40
	...
  44624e:	add    BYTE PTR [rax],al
  446250:	shl    BYTE PTR [rdi+0x41],0x0
	...
  44625f:	add    BYTE PTR [rax],dl
  446261:	mov    dh,0x42
	...
  44626f:	add    BYTE PTR [rbp+rsi*2+0x44],bl
	...
  44627e:	add    BYTE PTR [rax],al
  446280:	(bad)  
  446281:	jne    0x4462c7
	...
  44628f:	add    BYTE PTR [rax+0x445b],dl
	...
  4462a1:	add    BYTE PTR [rax+0x0],al
	...
  4462b0:	rex.W (bad) 
  4462b2:	add    BYTE PTR [r8],r8b
	...
  4462bd:	add    BYTE PTR [rax],al
  4462bf:	add    BYTE PTR [rax+0x17],ah
  4462c2:	add    BYTE PTR [r8],r8b
	...
  4462cd:	add    BYTE PTR [rax],al
  4462cf:	add    BYTE PTR [rax+0x17],bh
  4462d2:	add    BYTE PTR [r8],r8b
	...
  4462dd:	add    BYTE PTR [rax],al
  4462df:	add    BYTE PTR [rax+0x4517],bl
	...
  4462ed:	add    BYTE PTR [rax],al
  4462ef:	add    al,al
  4462f1:	(bad)  
  4462f2:	add    BYTE PTR [r8],r8b
	...
  4462fd:	add    BYTE PTR [rax],al
  4462ff:	add    BYTE PTR [rax+0x44fe],al
	...
  44630d:	add    BYTE PTR [rax],al
  44630f:	add    BYTE PTR [rax+0xc],ah
  446312:	add    BYTE PTR [r8],r8b
	...
  44631d:	add    BYTE PTR [rax],al
  44631f:	add    BYTE PTR [rax+0xc],bl
  446322:	add    BYTE PTR [r8],r8b
	...
  44632d:	add    BYTE PTR [rax],al
  44632f:	add    BYTE PTR [rax+0xc],cl
  446332:	add    BYTE PTR [r8],r8b
	...
  44633d:	add    BYTE PTR [rax],al
  44633f:	add    BYTE PTR [rax+0xc],dl
  446342:	add    BYTE PTR [r8],r8b
	...
  44634d:	add    BYTE PTR [rax],al
  44634f:	add    BYTE PTR [rax+0x4460],al
	...
  446361:	xor    BYTE PTR [rbp+0x0],al
	...
  446370:	adc    BYTE PTR [rax],dh
  446372:	add    BYTE PTR [r8],r8b
	...
  44637d:	add    BYTE PTR [rax],al
  44637f:	add    BYTE PTR [rax],bl
  446381:	xor    BYTE PTR [rbp+0x0],al
	...
  446390:	xor    BYTE PTR [rax],dh
  446392:	add    BYTE PTR [r8],r8b
	...
  44639d:	add    BYTE PTR [rax],al
  44639f:	add    al,dh
  4463a1:	test   DWORD PTR [rax+rax*1+0x0],0x0
  4463a9:	add    BYTE PTR [rax],al
  4463ab:	add    BYTE PTR [rax],al
  4463ad:	add    BYTE PTR [rax],al
  4463af:	add    BYTE PTR [rax-0x2],dl
  4463b2:	add    BYTE PTR [rax],r8b
	...
  4463bd:	add    BYTE PTR [rax],al
  4463bf:	add    BYTE PTR [rax+0x4f],dl
  4463c2:	rex.X add BYTE PTR [rax],al
	...
  4463cd:	add    BYTE PTR [rax],al
  4463cf:	add    BYTE PTR [rax+0x4246],ah
	...
  4463e1:	inc    BYTE PTR [rax+rax*1+0x0]
	...
  4463ed:	add    BYTE PTR [rax],al
  4463ef:	add    BYTE PTR [rax+0x4459],al
	...
  4463fd:	add    BYTE PTR [rax],al
  4463ff:	add    BYTE PTR [rax+0x44e9],dh
	...
  44640d:	add    BYTE PTR [rax],al
  44640f:	add    BYTE PTR [rax+0x44d0],ah
	...
  44641d:	add    BYTE PTR [rax],al
  44641f:	add    BYTE PTR [rax+0x44d0],dl
	...
  44642d:	add    BYTE PTR [rax],al
  44642f:	add    BYTE PTR [rax+rbx*8+0x44],dl
	...
  44643e:	add    BYTE PTR [rax],al
  446440:	jo     0x446412
  446442:	add    BYTE PTR [rax],r8b
	...
  44644d:	add    BYTE PTR [rax],al
  44644f:	add    BYTE PTR [rax+0x44d0],al
	...
  44645d:	add    BYTE PTR [rax],al
  44645f:	add    BYTE PTR [rax+0x42c0],ch
	...
  44646d:	add    BYTE PTR [rax],al
  44646f:	add    BYTE PTR [rdx+rbx*8+0x44],al
	...
  44647f:	add    BYTE PTR [rax-0x26],al
  446482:	add    BYTE PTR [rax],r8b
	...
  44648d:	add    BYTE PTR [rax],al
  44648f:	add    BYTE PTR [rax-0x2d],dl
  446492:	add    BYTE PTR [rax],r8b
	...
  44649d:	add    BYTE PTR [rax],al
  44649f:	add    BYTE PTR [rax-0x19],ch
  4464a2:	add    BYTE PTR [rax],r8b
	...
  4464ad:	add    BYTE PTR [rax],al
  4464af:	add    BYTE PTR [rax+0x44e9],ah
	...
  4464bd:	add    BYTE PTR [rax],al
  4464bf:	add    BYTE PTR [rax+0x44d8],cl
	...
  4464cd:	add    BYTE PTR [rax],al
  4464cf:	add    BYTE PTR [rax],ah
  4464d1:	rex.XB add BYTE PTR fs:[r8],al
	...
  4464dd:	add    BYTE PTR [rax],al
  4464df:	add    BYTE PTR [rax-0x28],ah
  4464e2:	add    BYTE PTR [rax],r8b
	...
  4464ed:	add    BYTE PTR [rax],al
  4464ef:	add    BYTE PTR [rax],dh
  4464f1:	inc    BYTE PTR [rax+rax*1+0x0]
	...
  446501:	clc    
  446502:	add    BYTE PTR [rax],r8b
	...
  44650d:	add    BYTE PTR [rax],al
  44650f:	add    BYTE PTR [rax],bl
  446511:	inc    BYTE PTR [rax+rax*1+0x0]
	...
  44651d:	add    BYTE PTR [rax],al
  44651f:	add    BYTE PTR [rsi+rdi*8],dl
  446522:	add    BYTE PTR [rax],r8b
	...
  44652d:	add    BYTE PTR [rax],al
  44652f:	add    BYTE PTR [rax],dl
  446531:	inc    BYTE PTR [rax+rax*1+0x0]
	...
  44653d:	add    BYTE PTR [rax],al
  44653f:	add    BYTE PTR [rax+0x42c0],dh
	...
  44654d:	add    BYTE PTR [rax],al
  44654f:	add    BYTE PTR [rax+rbx*8+0x44],bh
	...
  44655f:	add    ah,al
  446561:	rol    BYTE PTR [rax+rax*1+0x0],1
	...
  44656d:	add    BYTE PTR [rax],al
  44656f:	add    BYTE PTR [rax-0x28],ch
  446572:	add    BYTE PTR [rax],r8b
	...
  44657d:	add    BYTE PTR [rax],al
  44657f:	add    BYTE PTR [rax-0x40],al
  446582:	rex.X add BYTE PTR [rax],al
	...
  44658d:	add    BYTE PTR [rax],al
  44658f:	add    BYTE PTR [rax+0x44e9],al
	...
  44659d:	add    BYTE PTR [rax],al
  44659f:	add    BYTE PTR [rax-0x2d],al
  4465a2:	add    BYTE PTR [rax],r8b
	...
  4465ad:	add    BYTE PTR [rax],al
  4465af:	add    al,dl
  4465b1:	rol    BYTE PTR [rax+rax*1+0x0],1
	...
  4465bd:	add    BYTE PTR [rax],al
  4465bf:	add    BYTE PTR [rax-0x28],dh
  4465c2:	add    BYTE PTR [rax],r8b
	...
  4465cd:	add    BYTE PTR [rax],al
  4465cf:	add    BYTE PTR [rax-0x28],bh
  4465d2:	add    BYTE PTR [rax],r8b
	...
  4465dd:	add    BYTE PTR [rax],al
  4465df:	add    BYTE PTR [rax+rbx*8+0x44],ch
	...
  4465ef:	add    BYTE PTR [rax+rbx*8+0x44],dh
	...
  4465ff:	add    BYTE PTR [rax+0x44d8],al
	...
  44660d:	add    BYTE PTR [rax],al
  44660f:	add    BYTE PTR [rax+rbx*8+0x44],al
	...
  44661e:	add    BYTE PTR [rax],al
  446620:	add    ch,ch
  446622:	add    BYTE PTR [rax],r8b
	...
  44662d:	add    BYTE PTR [rax],al
  44662f:	add    BYTE PTR [rax+rbx*8+0x44],ah
	...
  44663f:	add    BYTE PTR [rax-0x13],al
  446642:	add    BYTE PTR [rax],r8b
	...
  44664d:	add    BYTE PTR [rax],al
  44664f:	add    al,al
  446651:	repnz rex.X add BYTE PTR [rax],al
	...
  44665d:	add    BYTE PTR [rax],al
  44665f:	add    BYTE PTR [rax+0x44d9],al
	...
  44666d:	add    BYTE PTR [rax],al
  44666f:	add    BYTE PTR [rdi+riz*8+0x44],ch
	...
  44667f:	add    al,al
  446681:	rol    BYTE PTR [rax+rax*1+0x0],1
	...
  44668d:	add    BYTE PTR [rax],al
  44668f:	add    BYTE PTR [rax],dh
  446691:	rol    BYTE PTR [rax+rax*1+0x0],1
	...
  44669d:	add    BYTE PTR [rax],al
  44669f:	add    BYTE PTR [rax+0x42f2],dh
	...
  4466ad:	add    BYTE PTR [rax],al
  4466af:	add    BYTE PTR [rbx],dh
  4466b1:	rex.XB add BYTE PTR fs:[r8],al
	...
  4466bd:	add    BYTE PTR [rax],al
  4466bf:	add    BYTE PTR [rax-0x11],al
  4466c2:	add    BYTE PTR [rax],r8b
	...
  4466cd:	add    BYTE PTR [rax],al
  4466cf:	add    BYTE PTR [rax-0xd],al
  4466d2:	rex.X add BYTE PTR [rax],al
	...
  4466e1:	xor    al,BYTE PTR [rax+rax*1+0x0]
	...
  4466ed:	add    BYTE PTR [rax],al
  4466ef:	add    BYTE PTR [rax],dh
  4466f1:	sbb    al,BYTE PTR [rbp+0x0]
  4466f4:	add    BYTE PTR [rax],al
  4466f6:	add    BYTE PTR [rax],al
  4466f8:	(bad)  
  4466f9:	add    BYTE PTR [eax],r8b
  4466fd:	add    BYTE PTR [rax],al
  4466ff:	add    BYTE PTR [rax],bh
  446701:	sbb    al,BYTE PTR [rbp+0x0]
  446704:	add    BYTE PTR [rax],al
  446706:	add    BYTE PTR [rax],al
  446708:	and    BYTE PTR [rdi+0x44],0x0
  44670c:	add    BYTE PTR [rax],al
  44670e:	add    BYTE PTR [rax],al
  446710:	lock data16 add BYTE PTR [rax],r8b
	...
  44671d:	add    BYTE PTR [rax],al
  44671f:	add    BYTE PTR [rax],bh
  446721:	sbb    al,BYTE PTR [rbp+0x0]
  446724:	add    BYTE PTR [rax],al
  446726:	add    BYTE PTR [rax],al
  446728:	movabs al,ds:0x4467
  446731:	add    BYTE PTR [eax],r8b
	...
  44673d:	add    BYTE PTR [rax],al
  44673f:	add    BYTE PTR [rax],bh
  446741:	sbb    al,BYTE PTR [rbp+0x0]
  446744:	add    BYTE PTR [rax],al
  446746:	add    BYTE PTR [rax],al
  446748:	loopne 0x4467b1
  44674a:	add    BYTE PTR [rax],r8b
  44674d:	add    BYTE PTR [rax],al
  44674f:	add    BYTE PTR [rax],al
  446751:	add    BYTE PTR [eax],r8b
	...
  44675d:	add    BYTE PTR [rax],al
  44675f:	add    BYTE PTR [rcx],dh
  446761:	xor    esp,DWORD PTR [rdi+0x64]
  446764:	(bad)  
  446765:	pop    rdi
  446766:	gs js  0x4467cc
  446769:	gs jo  0x4467e0
  44676c:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
	...
  44677f:	add    BYTE PTR [rdx],dh
  446781:	cmp    DWORD PTR [rdi+0x64],esp
  446784:	(bad)  
  446785:	pop    rdi
  446786:	gs js  0x4467ec
  446789:	gs jo  0x446800
  44678c:	imul   ebp,DWORD PTR [rdi+0x6e],0x5445525f
  446793:	push   rbp
  446794:	push   rdx
  446795:	rex.WRX pop rdi
  446797:	rex.WRB
  446798:	push   r11
  44679a:	rex.WXB pop r15
  44679c:	rex.B
  44679d:	rex.WR
  44679e:	rex.WR add BYTE PTR [rbx],r14b
  4467a1:	xor    BYTE PTR [rdi+0x64],ah
  4467a4:	(bad)  
  4467a5:	pop    rdi
  4467a6:	gs js  0x44680c
  4467a9:	gs jo  0x446820
  4467ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x5445525f
  4467b3:	push   rbp
  4467b4:	push   rdx
  4467b5:	rex.WRX pop rdi
  4467b7:	rex.WRB
  4467b8:	push   r11
  4467ba:	rex.WXB pop r15
  4467bc:	push   rcx
  4467bd:	push   rbp
  4467be:	rex.WB push r12
	...
  4467e0:	xor    esi,DWORD PTR [rcx]
  4467e2:	addr32 fs (bad) 
  4467e5:	pop    rdi
  4467e6:	gs js  0x44684c
  4467e9:	gs jo  0x446860
  4467ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x5445525f
  4467f3:	push   rbp
  4467f4:	push   rdx
  4467f5:	rex.WRX pop rdi
  4467f7:	rex.WRB
  4467f8:	push   r11
  4467fa:	rex.WXB pop r15
  4467fc:	rex.RB push r10
  4467fe:	push   rdx
  4467ff:	rex.WRXB push r10
	...
  44681d:	add    BYTE PTR [rax],al
  44681f:	add    BYTE PTR [rdi+0x43],al
  446822:	rex.XB cmp spl,BYTE PTR [r8]
  446825:	sub    BYTE PTR [rdi+0x4e],al
  446828:	push   rbp
  446829:	sub    DWORD PTR [rax],esp
  44682b:	xor    al,0x2e
  44682d:	cmp    DWORD PTR [rsi],ebp
  44682f:	xor    al,0x0
	...
  44683d:	add    BYTE PTR [rax],al
  44683f:	add    BYTE PTR [rdi+0x43],al
  446842:	rex.XB cmp spl,BYTE PTR [r8]
  446845:	sub    BYTE PTR [rdi+0x4e],al
  446848:	push   rbp
  446849:	sub    DWORD PTR [rax],esp
  44684b:	xor    al,0x2e
  44684d:	cmp    DWORD PTR [rsi],ebp
  44684f:	xor    al,0x0
	...
  44685d:	add    BYTE PTR [rax],al
  44685f:	add    BYTE PTR [rdi+0x43],al
  446862:	rex.XB cmp spl,BYTE PTR [r8]
  446865:	sub    BYTE PTR [rdi+0x4e],al
  446868:	push   rbp
  446869:	sub    DWORD PTR [rax],esp
  44686b:	xor    al,0x2e
  44686d:	cmp    DWORD PTR [rsi],ebp
  44686f:	xor    al,0x0
	...
  44687d:	add    BYTE PTR [rax],al
  44687f:	add    BYTE PTR [rdi+0x43],al
  446882:	rex.XB cmp spl,BYTE PTR [r8]
  446885:	sub    BYTE PTR [rdi+0x4e],al
  446888:	push   rbp
  446889:	sub    DWORD PTR [rax],esp
  44688b:	xor    al,0x2e
  44688d:	cmp    DWORD PTR [rsi],ebp
  44688f:	xor    al,0x0
	...
  44689d:	add    BYTE PTR [rax],al
  44689f:	add    BYTE PTR [rdi+0x43],al
  4468a2:	rex.XB cmp spl,BYTE PTR [r8]
  4468a5:	sub    BYTE PTR [rdi+0x4e],al
  4468a8:	push   rbp
  4468a9:	sub    DWORD PTR [rax],esp
  4468ab:	xor    al,0x2e
  4468ad:	cmp    DWORD PTR [rsi],ebp
  4468af:	xor    al,0x0
	...
  4468bd:	add    BYTE PTR [rax],al
  4468bf:	add    BYTE PTR [rdi+0x43],al
  4468c2:	rex.XB cmp spl,BYTE PTR [r8]
  4468c5:	sub    BYTE PTR [rdi+0x4e],al
  4468c8:	push   rbp
  4468c9:	sub    DWORD PTR [rax],esp
  4468cb:	xor    al,0x2e
  4468cd:	cmp    DWORD PTR [rsi],ebp
  4468cf:	xor    al,0x0
	...
  4468dd:	add    BYTE PTR [rax],al
  4468df:	add    BYTE PTR [rdi+0x43],al
  4468e2:	rex.XB cmp spl,BYTE PTR [r8]
  4468e5:	sub    BYTE PTR [rdi+0x4e],al
  4468e8:	push   rbp
  4468e9:	sub    DWORD PTR [rax],esp
  4468eb:	xor    al,0x2e
  4468ed:	cmp    DWORD PTR [rsi],ebp
  4468ef:	xor    al,0x0
	...
  4468fd:	add    BYTE PTR [rax],al
  4468ff:	add    BYTE PTR [rdi+0x43],al
  446902:	rex.XB cmp spl,BYTE PTR [r8]
  446905:	sub    BYTE PTR [rdi+0x4e],al
  446908:	push   rbp
  446909:	sub    DWORD PTR [rax],esp
  44690b:	xor    al,0x2e
  44690d:	cmp    DWORD PTR [rsi],ebp
  44690f:	xor    al,0x0
	...
  44691d:	add    BYTE PTR [rax],al
  44691f:	add    BYTE PTR [rdi+0x43],al
  446922:	rex.XB cmp spl,BYTE PTR [r8]
  446925:	sub    BYTE PTR [rdi+0x4e],al
  446928:	push   rbp
  446929:	sub    DWORD PTR [rax],esp
  44692b:	xor    al,0x2e
  44692d:	cmp    DWORD PTR [rsi],ebp
  44692f:	xor    al,0x0
	...
  44693d:	add    BYTE PTR [rax],al
  44693f:	add    BYTE PTR [rdi+0x43],al
  446942:	rex.XB cmp spl,BYTE PTR [r8]
  446945:	sub    BYTE PTR [rdi+0x4e],al
  446948:	push   rbp
  446949:	sub    DWORD PTR [rax],esp
  44694b:	xor    al,0x2e
  44694d:	cmp    DWORD PTR [rsi],ebp
  44694f:	xor    al,0x0
	...
  44695d:	add    BYTE PTR [rax],al
  44695f:	add    BYTE PTR [rdi+0x43],al
  446962:	rex.XB cmp spl,BYTE PTR [r8]
  446965:	sub    BYTE PTR [rdi+0x4e],al
  446968:	push   rbp
  446969:	sub    DWORD PTR [rax],esp
  44696b:	xor    al,0x2e
  44696d:	cmp    DWORD PTR [rsi],ebp
  44696f:	xor    al,0x0
	...
  44697d:	add    BYTE PTR [rax],al
  44697f:	add    BYTE PTR [rdi+0x43],al
  446982:	rex.XB cmp spl,BYTE PTR [r8]
  446985:	sub    BYTE PTR [rdi+0x4e],al
  446988:	push   rbp
  446989:	sub    DWORD PTR [rax],esp
  44698b:	xor    al,0x2e
  44698d:	cmp    DWORD PTR [rsi],ebp
  44698f:	xor    al,0x0
	...
  44699d:	add    BYTE PTR [rax],al
  44699f:	add    BYTE PTR [rdi+0x43],al
  4469a2:	rex.XB cmp spl,BYTE PTR [r8]
  4469a5:	sub    BYTE PTR [rdi+0x4e],al
  4469a8:	push   rbp
  4469a9:	sub    DWORD PTR [rax],esp
  4469ab:	xor    al,0x2e
  4469ad:	cmp    DWORD PTR [rsi],ebp
  4469af:	xor    al,0x0
	...
  4469bd:	add    BYTE PTR [rax],al
  4469bf:	add    BYTE PTR [rdi+0x43],al
  4469c2:	rex.XB cmp spl,BYTE PTR [r8]
  4469c5:	sub    BYTE PTR [rdi+0x4e],al
  4469c8:	push   rbp
  4469c9:	sub    DWORD PTR [rax],esp
  4469cb:	xor    al,0x2e
  4469cd:	cmp    DWORD PTR [rsi],ebp
  4469cf:	xor    al,0x0
	...
  4469dd:	add    BYTE PTR [rax],al
  4469df:	add    BYTE PTR [rdi+0x43],al
  4469e2:	rex.XB cmp spl,BYTE PTR [r8]
  4469e5:	sub    BYTE PTR [rdi+0x4e],al
  4469e8:	push   rbp
  4469e9:	sub    DWORD PTR [rax],esp
  4469eb:	xor    al,0x2e
  4469ed:	cmp    DWORD PTR [rsi],ebp
  4469ef:	xor    al,0x0
	...
  4469fd:	add    BYTE PTR [rax],al
  4469ff:	add    BYTE PTR [rdi+0x43],al
  446a02:	rex.XB cmp spl,BYTE PTR [r8]
  446a05:	sub    BYTE PTR [rdi+0x4e],al
  446a08:	push   rbp
  446a09:	sub    DWORD PTR [rax],esp
  446a0b:	xor    al,0x2e
  446a0d:	cmp    DWORD PTR [rsi],ebp
  446a0f:	xor    al,0x0
	...
  446a1d:	add    BYTE PTR [rax],al
  446a1f:	add    BYTE PTR [rdi+0x43],al
  446a22:	rex.XB cmp spl,BYTE PTR [r8]
  446a25:	sub    BYTE PTR [rdi+0x4e],al
  446a28:	push   rbp
  446a29:	sub    DWORD PTR [rax],esp
  446a2b:	xor    al,0x2e
  446a2d:	cmp    DWORD PTR [rsi],ebp
  446a2f:	xor    al,0x0
	...
  446a3d:	add    BYTE PTR [rax],al
  446a3f:	add    BYTE PTR [rdi+0x43],al
  446a42:	rex.XB cmp spl,BYTE PTR [r8]
  446a45:	sub    BYTE PTR [rdi+0x4e],al
  446a48:	push   rbp
  446a49:	sub    DWORD PTR [rax],esp
  446a4b:	xor    al,0x2e
  446a4d:	cmp    DWORD PTR [rsi],ebp
  446a4f:	xor    al,0x0
	...
  446a5d:	add    BYTE PTR [rax],al
  446a5f:	add    BYTE PTR [rdi+0x43],al
  446a62:	rex.XB cmp spl,BYTE PTR [r8]
  446a65:	sub    BYTE PTR [rdi+0x4e],al
  446a68:	push   rbp
  446a69:	sub    DWORD PTR [rax],esp
  446a6b:	xor    al,0x2e
  446a6d:	cmp    DWORD PTR [rsi],ebp
  446a6f:	xor    al,0x0
	...
  446a7d:	add    BYTE PTR [rax],al
  446a7f:	add    BYTE PTR [rdi+0x43],al
  446a82:	rex.XB cmp spl,BYTE PTR [r8]
  446a85:	sub    BYTE PTR [rdi+0x4e],al
  446a88:	push   rbp
  446a89:	sub    DWORD PTR [rax],esp
  446a8b:	xor    al,0x2e
  446a8d:	cmp    DWORD PTR [rsi],ebp
  446a8f:	xor    al,0x0
	...
  446a9d:	add    BYTE PTR [rax],al
  446a9f:	add    BYTE PTR [rdi+0x43],al
  446aa2:	rex.XB cmp spl,BYTE PTR [r8]
  446aa5:	sub    BYTE PTR [rdi+0x4e],al
  446aa8:	push   rbp
  446aa9:	sub    DWORD PTR [rax],esp
  446aab:	xor    al,0x2e
  446aad:	cmp    DWORD PTR [rsi],ebp
  446aaf:	xor    al,0x0
	...
  446abd:	add    BYTE PTR [rax],al
  446abf:	add    BYTE PTR [rdi+0x43],al
  446ac2:	rex.XB cmp spl,BYTE PTR [r8]
  446ac5:	sub    BYTE PTR [rdi+0x4e],al
  446ac8:	push   rbp
  446ac9:	sub    DWORD PTR [rax],esp
  446acb:	xor    al,0x2e
  446acd:	cmp    DWORD PTR [rsi],ebp
  446acf:	xor    al,0x0
	...
  446add:	add    BYTE PTR [rax],al
  446adf:	add    BYTE PTR [rdi+0x43],al
  446ae2:	rex.XB cmp spl,BYTE PTR [r8]
  446ae5:	sub    BYTE PTR [rdi+0x4e],al
  446ae8:	push   rbp
  446ae9:	sub    DWORD PTR [rax],esp
  446aeb:	xor    al,0x2e
  446aed:	cmp    DWORD PTR [rsi],ebp
  446aef:	xor    al,0x0
	...
  446afd:	add    BYTE PTR [rax],al
  446aff:	add    BYTE PTR [rdi+0x43],al
  446b02:	rex.XB cmp spl,BYTE PTR [r8]
  446b05:	sub    BYTE PTR [rdi+0x4e],al
  446b08:	push   rbp
  446b09:	sub    DWORD PTR [rax],esp
  446b0b:	xor    al,0x2e
  446b0d:	cmp    DWORD PTR [rsi],ebp
  446b0f:	xor    al,0x0
	...
  446b1d:	add    BYTE PTR [rax],al
  446b1f:	add    BYTE PTR [rdi+0x43],al
  446b22:	rex.XB cmp spl,BYTE PTR [r8]
  446b25:	sub    BYTE PTR [rdi+0x4e],al
  446b28:	push   rbp
  446b29:	sub    DWORD PTR [rax],esp
  446b2b:	xor    al,0x2e
  446b2d:	cmp    DWORD PTR [rsi],ebp
  446b2f:	xor    al,0x0
	...
  446b3d:	add    BYTE PTR [rax],al
  446b3f:	add    BYTE PTR [rdi+0x43],al
  446b42:	rex.XB cmp spl,BYTE PTR [r8]
  446b45:	sub    BYTE PTR [rdi+0x4e],al
  446b48:	push   rbp
  446b49:	sub    DWORD PTR [rax],esp
  446b4b:	xor    al,0x2e
  446b4d:	cmp    DWORD PTR [rsi],ebp
  446b4f:	xor    al,0x0
	...
  446b5d:	add    BYTE PTR [rax],al
  446b5f:	add    BYTE PTR [rdi+0x43],al
  446b62:	rex.XB cmp spl,BYTE PTR [r8]
  446b65:	sub    BYTE PTR [rdi+0x4e],al
  446b68:	push   rbp
  446b69:	sub    DWORD PTR [rax],esp
  446b6b:	xor    al,0x2e
  446b6d:	cmp    DWORD PTR [rsi],ebp
  446b6f:	xor    al,0x0
	...
  446b7d:	add    BYTE PTR [rax],al
  446b7f:	add    BYTE PTR [rdi+0x43],al
  446b82:	rex.XB cmp spl,BYTE PTR [r8]
  446b85:	sub    BYTE PTR [rdi+0x4e],al
  446b88:	push   rbp
  446b89:	sub    DWORD PTR [rax],esp
  446b8b:	xor    al,0x2e
  446b8d:	cmp    DWORD PTR [rsi],ebp
  446b8f:	xor    al,0x0
	...
  446b9d:	add    BYTE PTR [rax],al
  446b9f:	add    BYTE PTR [rdi+0x43],al
  446ba2:	rex.XB cmp spl,BYTE PTR [r8]
  446ba5:	sub    BYTE PTR [rdi+0x4e],al
  446ba8:	push   rbp
  446ba9:	sub    DWORD PTR [rax],esp
  446bab:	xor    al,0x2e
  446bad:	cmp    DWORD PTR [rsi],ebp
  446baf:	xor    al,0x0
	...
  446bbd:	add    BYTE PTR [rax],al
  446bbf:	add    BYTE PTR [rdi+0x43],al
  446bc2:	rex.XB cmp spl,BYTE PTR [r8]
  446bc5:	sub    BYTE PTR [rdi+0x4e],al
  446bc8:	push   rbp
  446bc9:	sub    DWORD PTR [rax],esp
  446bcb:	xor    al,0x2e
  446bcd:	cmp    DWORD PTR [rsi],ebp
  446bcf:	xor    al,0x0
	...
  446bdd:	add    BYTE PTR [rax],al
  446bdf:	add    BYTE PTR [rdi+0x43],al
  446be2:	rex.XB cmp spl,BYTE PTR [r8]
  446be5:	sub    BYTE PTR [rdi+0x4e],al
  446be8:	push   rbp
  446be9:	sub    DWORD PTR [rax],esp
  446beb:	xor    al,0x2e
  446bed:	cmp    DWORD PTR [rsi],ebp
  446bef:	xor    al,0x0
	...
  446bfd:	add    BYTE PTR [rax],al
  446bff:	add    BYTE PTR [rdi+0x43],al
  446c02:	rex.XB cmp spl,BYTE PTR [r8]
  446c05:	sub    BYTE PTR [rdi+0x4e],al
  446c08:	push   rbp
  446c09:	sub    DWORD PTR [rax],esp
  446c0b:	xor    al,0x2e
  446c0d:	cmp    DWORD PTR [rsi],ebp
  446c0f:	xor    al,0x0
	...
  446c1d:	add    BYTE PTR [rax],al
  446c1f:	add    BYTE PTR [rdi+0x43],al
  446c22:	rex.XB cmp spl,BYTE PTR [r8]
  446c25:	sub    BYTE PTR [rdi+0x4e],al
  446c28:	push   rbp
  446c29:	sub    DWORD PTR [rax],esp
  446c2b:	xor    al,0x2e
  446c2d:	cmp    DWORD PTR [rsi],ebp
  446c2f:	xor    al,0x0
	...
  446c3d:	add    BYTE PTR [rax],al
  446c3f:	add    BYTE PTR [rdi+0x43],al
  446c42:	rex.XB cmp spl,BYTE PTR [r8]
  446c45:	sub    BYTE PTR [rdi+0x4e],al
  446c48:	push   rbp
  446c49:	sub    DWORD PTR [rax],esp
  446c4b:	xor    al,0x2e
  446c4d:	cmp    DWORD PTR [rsi],ebp
  446c4f:	xor    al,0x0
	...
  446c5d:	add    BYTE PTR [rax],al
  446c5f:	add    BYTE PTR [rdi+0x43],al
  446c62:	rex.XB cmp spl,BYTE PTR [r8]
  446c65:	sub    BYTE PTR [rdi+0x4e],al
  446c68:	push   rbp
  446c69:	sub    DWORD PTR [rax],esp
  446c6b:	xor    al,0x2e
  446c6d:	cmp    DWORD PTR [rsi],ebp
  446c6f:	xor    al,0x0
	...
  446c7d:	add    BYTE PTR [rax],al
  446c7f:	add    BYTE PTR [rdi+0x43],al
  446c82:	rex.XB cmp spl,BYTE PTR [r8]
  446c85:	sub    BYTE PTR [rdi+0x4e],al
  446c88:	push   rbp
  446c89:	sub    DWORD PTR [rax],esp
  446c8b:	xor    al,0x2e
  446c8d:	cmp    DWORD PTR [rsi],ebp
  446c8f:	xor    al,0x0
	...
  446c9d:	add    BYTE PTR [rax],al
  446c9f:	add    BYTE PTR [rdi+0x43],al
  446ca2:	rex.XB cmp spl,BYTE PTR [r8]
  446ca5:	sub    BYTE PTR [rdi+0x4e],al
  446ca8:	push   rbp
  446ca9:	sub    DWORD PTR [rax],esp
  446cab:	xor    al,0x2e
  446cad:	cmp    DWORD PTR [rsi],ebp
  446caf:	xor    al,0x0
	...
  446cbd:	add    BYTE PTR [rax],al
  446cbf:	add    BYTE PTR [rdi+0x43],al
  446cc2:	rex.XB cmp spl,BYTE PTR [r8]
  446cc5:	sub    BYTE PTR [rdi+0x4e],al
  446cc8:	push   rbp
  446cc9:	sub    DWORD PTR [rax],esp
  446ccb:	xor    al,0x2e
  446ccd:	cmp    DWORD PTR [rsi],ebp
  446ccf:	xor    al,0x0
	...
  446cdd:	add    BYTE PTR [rax],al
  446cdf:	add    BYTE PTR [rdi+0x43],al
  446ce2:	rex.XB cmp spl,BYTE PTR [r8]
  446ce5:	sub    BYTE PTR [rdi+0x4e],al
  446ce8:	push   rbp
  446ce9:	sub    DWORD PTR [rax],esp
  446ceb:	xor    al,0x2e
  446ced:	cmp    DWORD PTR [rsi],ebp
  446cef:	xor    al,0x0
	...
  446cfd:	add    BYTE PTR [rax],al
  446cff:	add    BYTE PTR [rdi+0x43],al
  446d02:	rex.XB cmp spl,BYTE PTR [r8]
  446d05:	sub    BYTE PTR [rdi+0x4e],al
  446d08:	push   rbp
  446d09:	sub    DWORD PTR [rax],esp
  446d0b:	xor    al,0x2e
  446d0d:	cmp    DWORD PTR [rsi],ebp
  446d0f:	xor    al,0x0
	...
  446d1d:	add    BYTE PTR [rax],al
  446d1f:	add    BYTE PTR [rdi+0x43],al
  446d22:	rex.XB cmp spl,BYTE PTR [r8]
  446d25:	sub    BYTE PTR [rdi+0x4e],al
  446d28:	push   rbp
  446d29:	sub    DWORD PTR [rax],esp
  446d2b:	xor    al,0x2e
  446d2d:	cmp    DWORD PTR [rsi],ebp
  446d2f:	xor    al,0x0
	...
  446d3d:	add    BYTE PTR [rax],al
  446d3f:	add    BYTE PTR [rdi+0x43],al
  446d42:	rex.XB cmp spl,BYTE PTR [r8]
  446d45:	sub    BYTE PTR [rdi+0x4e],al
  446d48:	push   rbp
  446d49:	sub    DWORD PTR [rax],esp
  446d4b:	xor    al,0x2e
  446d4d:	cmp    DWORD PTR [rsi],ebp
  446d4f:	xor    al,0x0
	...
  446d5d:	add    BYTE PTR [rax],al
  446d5f:	add    BYTE PTR [rdi+0x43],al
  446d62:	rex.XB cmp spl,BYTE PTR [r8]
  446d65:	sub    BYTE PTR [rdi+0x4e],al
  446d68:	push   rbp
  446d69:	sub    DWORD PTR [rax],esp
  446d6b:	xor    al,0x2e
  446d6d:	cmp    DWORD PTR [rsi],ebp
  446d6f:	xor    al,0x0
	...
  446d7d:	add    BYTE PTR [rax],al
  446d7f:	add    BYTE PTR [rdi+0x43],al
  446d82:	rex.XB cmp spl,BYTE PTR [r8]
  446d85:	sub    BYTE PTR [rdi+0x4e],al
  446d88:	push   rbp
  446d89:	sub    DWORD PTR [rax],esp
  446d8b:	xor    al,0x2e
  446d8d:	cmp    DWORD PTR [rsi],ebp
  446d8f:	xor    al,0x0
	...
  446d9d:	add    BYTE PTR [rax],al
  446d9f:	add    BYTE PTR [rdi+0x43],al
  446da2:	rex.XB cmp spl,BYTE PTR [r8]
  446da5:	sub    BYTE PTR [rdi+0x4e],al
  446da8:	push   rbp
  446da9:	sub    DWORD PTR [rax],esp
  446dab:	xor    al,0x2e
  446dad:	cmp    DWORD PTR [rsi],ebp
  446daf:	xor    al,0x0
	...
  446dbd:	add    BYTE PTR [rax],al
  446dbf:	add    BYTE PTR [rdi+0x43],al
  446dc2:	rex.XB cmp spl,BYTE PTR [r8]
  446dc5:	sub    BYTE PTR [rdi+0x4e],al
  446dc8:	push   rbp
  446dc9:	sub    DWORD PTR [rax],esp
  446dcb:	xor    al,0x2e
  446dcd:	cmp    DWORD PTR [rsi],ebp
  446dcf:	xor    al,0x0
	...
  446ddd:	add    BYTE PTR [rax],al
  446ddf:	add    BYTE PTR [rdi+0x43],al
  446de2:	rex.XB cmp spl,BYTE PTR [r8]
  446de5:	sub    BYTE PTR [rdi+0x4e],al
  446de8:	push   rbp
  446de9:	sub    DWORD PTR [rax],esp
  446deb:	xor    al,0x2e
  446ded:	cmp    DWORD PTR [rsi],ebp
  446def:	xor    al,0x0
	...
  446dfd:	add    BYTE PTR [rax],al
  446dff:	add    BYTE PTR [rdi+0x43],al
  446e02:	rex.XB cmp spl,BYTE PTR [r8]
  446e05:	sub    BYTE PTR [rdi+0x4e],al
  446e08:	push   rbp
  446e09:	sub    DWORD PTR [rax],esp
  446e0b:	xor    al,0x2e
  446e0d:	cmp    DWORD PTR [rsi],ebp
  446e0f:	xor    al,0x0
	...
  446e1d:	add    BYTE PTR [rax],al
  446e1f:	add    BYTE PTR [rdi+0x43],al
  446e22:	rex.XB cmp spl,BYTE PTR [r8]
  446e25:	sub    BYTE PTR [rdi+0x4e],al
  446e28:	push   rbp
  446e29:	sub    DWORD PTR [rax],esp
  446e2b:	xor    al,0x2e
  446e2d:	cmp    DWORD PTR [rsi],ebp
  446e2f:	xor    al,0x0
	...
  446e3d:	add    BYTE PTR [rax],al
  446e3f:	add    BYTE PTR [rdi+0x43],al
  446e42:	rex.XB cmp spl,BYTE PTR [r8]
  446e45:	sub    BYTE PTR [rdi+0x4e],al
  446e48:	push   rbp
  446e49:	sub    DWORD PTR [rax],esp
  446e4b:	xor    al,0x2e
  446e4d:	cmp    DWORD PTR [rsi],ebp
  446e4f:	xor    al,0x0
	...
  446e5d:	add    BYTE PTR [rax],al
  446e5f:	add    BYTE PTR [rdi+0x43],al
  446e62:	rex.XB cmp spl,BYTE PTR [r8]
  446e65:	sub    BYTE PTR [rdi+0x4e],al
  446e68:	push   rbp
  446e69:	sub    DWORD PTR [rax],esp
  446e6b:	xor    al,0x2e
  446e6d:	cmp    DWORD PTR [rsi],ebp
  446e6f:	xor    al,0x0
	...
  446e7d:	add    BYTE PTR [rax],al
  446e7f:	add    BYTE PTR [rdi+0x43],al
  446e82:	rex.XB cmp spl,BYTE PTR [r8]
  446e85:	sub    BYTE PTR [rdi+0x4e],al
  446e88:	push   rbp
  446e89:	sub    DWORD PTR [rax],esp
  446e8b:	xor    al,0x2e
  446e8d:	cmp    DWORD PTR [rsi],ebp
  446e8f:	xor    al,0x0
	...
  446e9d:	add    BYTE PTR [rax],al
  446e9f:	add    BYTE PTR [rdi+0x43],al
  446ea2:	rex.XB cmp spl,BYTE PTR [r8]
  446ea5:	sub    BYTE PTR [rdi+0x4e],al
  446ea8:	push   rbp
  446ea9:	sub    DWORD PTR [rax],esp
  446eab:	xor    al,0x2e
  446ead:	cmp    DWORD PTR [rsi],ebp
  446eaf:	xor    al,0x0
	...
  446ebd:	add    BYTE PTR [rax],al
  446ebf:	add    BYTE PTR [rdi+0x43],al
  446ec2:	rex.XB cmp spl,BYTE PTR [r8]
  446ec5:	sub    BYTE PTR [rdi+0x4e],al
  446ec8:	push   rbp
  446ec9:	sub    DWORD PTR [rax],esp
  446ecb:	xor    al,0x2e
  446ecd:	cmp    DWORD PTR [rsi],ebp
  446ecf:	xor    al,0x0
	...
  446edd:	add    BYTE PTR [rax],al
  446edf:	add    BYTE PTR [rdi+0x43],al
  446ee2:	rex.XB cmp spl,BYTE PTR [r8]
  446ee5:	sub    BYTE PTR [rdi+0x4e],al
  446ee8:	push   rbp
  446ee9:	sub    DWORD PTR [rax],esp
  446eeb:	xor    al,0x2e
  446eed:	cmp    DWORD PTR [rsi],ebp
  446eef:	xor    al,0x0
	...
  446efd:	add    BYTE PTR [rax],al
  446eff:	add    BYTE PTR [rdi+0x43],al
  446f02:	rex.XB cmp spl,BYTE PTR [r8]
  446f05:	sub    BYTE PTR [rdi+0x4e],al
  446f08:	push   rbp
  446f09:	sub    DWORD PTR [rax],esp
  446f0b:	xor    al,0x2e
  446f0d:	cmp    DWORD PTR [rsi],ebp
  446f0f:	xor    al,0x0
	...
  446f1d:	add    BYTE PTR [rax],al
  446f1f:	add    BYTE PTR [rdi+0x43],al
  446f22:	rex.XB cmp spl,BYTE PTR [r8]
  446f25:	sub    BYTE PTR [rdi+0x4e],al
  446f28:	push   rbp
  446f29:	sub    DWORD PTR [rax],esp
  446f2b:	xor    al,0x2e
  446f2d:	cmp    DWORD PTR [rsi],ebp
  446f2f:	xor    al,0x0
	...
  446f3d:	add    BYTE PTR [rax],al
  446f3f:	add    BYTE PTR [rdi+0x43],al
  446f42:	rex.XB cmp spl,BYTE PTR [r8]
  446f45:	sub    BYTE PTR [rdi+0x4e],al
  446f48:	push   rbp
  446f49:	sub    DWORD PTR [rax],esp
  446f4b:	xor    al,0x2e
  446f4d:	cmp    DWORD PTR [rsi],ebp
  446f4f:	xor    al,0x0
	...
  446f5d:	add    BYTE PTR [rax],al
  446f5f:	add    BYTE PTR [rdi+0x43],al
  446f62:	rex.XB cmp spl,BYTE PTR [r8]
  446f65:	sub    BYTE PTR [rdi+0x4e],al
  446f68:	push   rbp
  446f69:	sub    DWORD PTR [rax],esp
  446f6b:	xor    al,0x2e
  446f6d:	cmp    DWORD PTR [rsi],ebp
  446f6f:	xor    al,0x0
	...
  446f7d:	add    BYTE PTR [rax],al
  446f7f:	add    BYTE PTR [rdi+0x43],al
  446f82:	rex.XB cmp spl,BYTE PTR [r8]
  446f85:	sub    BYTE PTR [rdi+0x4e],al
  446f88:	push   rbp
  446f89:	sub    DWORD PTR [rax],esp
  446f8b:	xor    al,0x2e
  446f8d:	cmp    DWORD PTR [rsi],ebp
  446f8f:	xor    al,0x0
	...
  446f9d:	add    BYTE PTR [rax],al
  446f9f:	add    BYTE PTR [rdi+0x43],al
  446fa2:	rex.XB cmp spl,BYTE PTR [r8]
  446fa5:	sub    BYTE PTR [rdi+0x4e],al
  446fa8:	push   rbp
  446fa9:	sub    DWORD PTR [rax],esp
  446fab:	xor    al,0x2e
  446fad:	cmp    DWORD PTR [rsi],ebp
  446faf:	xor    al,0x0
	...
  446fbd:	add    BYTE PTR [rax],al
  446fbf:	add    BYTE PTR [rdi+0x43],al
  446fc2:	rex.XB cmp spl,BYTE PTR [r8]
  446fc5:	sub    BYTE PTR [rdi+0x4e],al
  446fc8:	push   rbp
  446fc9:	sub    DWORD PTR [rax],esp
  446fcb:	xor    al,0x2e
  446fcd:	cmp    DWORD PTR [rsi],ebp
  446fcf:	xor    al,0x0
	...
  446fdd:	add    BYTE PTR [rax],al
  446fdf:	add    BYTE PTR [rdi+0x43],al
  446fe2:	rex.XB cmp spl,BYTE PTR [r8]
  446fe5:	sub    BYTE PTR [rdi+0x4e],al
  446fe8:	push   rbp
  446fe9:	sub    DWORD PTR [rax],esp
  446feb:	xor    al,0x2e
  446fed:	cmp    DWORD PTR [rsi],ebp
  446fef:	xor    al,0x0
	...
  446ffd:	add    BYTE PTR [rax],al
  446fff:	add    BYTE PTR [rdi+0x43],al
  447002:	rex.XB cmp spl,BYTE PTR [r8]
  447005:	sub    BYTE PTR [rdi+0x4e],al
  447008:	push   rbp
  447009:	sub    DWORD PTR [rax],esp
  44700b:	xor    al,0x2e
  44700d:	cmp    DWORD PTR [rsi],ebp
  44700f:	xor    al,0x0
	...
  44701d:	add    BYTE PTR [rax],al
  44701f:	add    BYTE PTR [rdi+0x43],al
  447022:	rex.XB cmp spl,BYTE PTR [r8]
  447025:	sub    BYTE PTR [rdi+0x4e],al
  447028:	push   rbp
  447029:	sub    DWORD PTR [rax],esp
  44702b:	xor    al,0x2e
  44702d:	cmp    DWORD PTR [rsi],ebp
  44702f:	xor    al,0x0
	...
  44703d:	add    BYTE PTR [rax],al
  44703f:	add    BYTE PTR [rdi+0x43],al
  447042:	rex.XB cmp spl,BYTE PTR [r8]
  447045:	sub    BYTE PTR [rdi+0x4e],al
  447048:	push   rbp
  447049:	sub    DWORD PTR [rax],esp
  44704b:	xor    al,0x2e
  44704d:	cmp    DWORD PTR [rsi],ebp
  44704f:	xor    al,0x0
	...
  44705d:	add    BYTE PTR [rax],al
  44705f:	add    BYTE PTR [rdi+0x43],al
  447062:	rex.XB cmp spl,BYTE PTR [r8]
  447065:	sub    BYTE PTR [rdi+0x4e],al
  447068:	push   rbp
  447069:	sub    DWORD PTR [rax],esp
  44706b:	xor    al,0x2e
  44706d:	cmp    DWORD PTR [rsi],ebp
  44706f:	xor    al,0x0
	...
  44707d:	add    BYTE PTR [rax],al
  44707f:	add    BYTE PTR [rdi+0x43],al
  447082:	rex.XB cmp spl,BYTE PTR [r8]
  447085:	sub    BYTE PTR [rdi+0x4e],al
  447088:	push   rbp
  447089:	sub    DWORD PTR [rax],esp
  44708b:	xor    al,0x2e
  44708d:	cmp    DWORD PTR [rsi],ebp
  44708f:	xor    al,0x0
	...
  44709d:	add    BYTE PTR [rax],al
  44709f:	add    BYTE PTR [rdi+0x43],al
  4470a2:	rex.XB cmp spl,BYTE PTR [r8]
  4470a5:	sub    BYTE PTR [rdi+0x4e],al
  4470a8:	push   rbp
  4470a9:	sub    DWORD PTR [rax],esp
  4470ab:	xor    al,0x2e
  4470ad:	cmp    DWORD PTR [rsi],ebp
  4470af:	xor    al,0x0
	...
  4470bd:	add    BYTE PTR [rax],al
  4470bf:	add    BYTE PTR [rdi+0x43],al
  4470c2:	rex.XB cmp spl,BYTE PTR [r8]
  4470c5:	sub    BYTE PTR [rdi+0x4e],al
  4470c8:	push   rbp
  4470c9:	sub    DWORD PTR [rax],esp
  4470cb:	xor    al,0x2e
  4470cd:	cmp    DWORD PTR [rsi],ebp
  4470cf:	xor    al,0x0
	...
  4470dd:	add    BYTE PTR [rax],al
  4470df:	add    BYTE PTR [rdi+0x43],al
  4470e2:	rex.XB cmp spl,BYTE PTR [r8]
  4470e5:	sub    BYTE PTR [rdi+0x4e],al
  4470e8:	push   rbp
  4470e9:	sub    DWORD PTR [rax],esp
  4470eb:	xor    al,0x2e
  4470ed:	cmp    DWORD PTR [rsi],ebp
  4470ef:	xor    al,0x0
	...
  4470fd:	add    BYTE PTR [rax],al
  4470ff:	add    BYTE PTR [rdi+0x43],al
  447102:	rex.XB cmp spl,BYTE PTR [r8]
  447105:	sub    BYTE PTR [rdi+0x4e],al
  447108:	push   rbp
  447109:	sub    DWORD PTR [rax],esp
  44710b:	xor    al,0x2e
  44710d:	cmp    DWORD PTR [rsi],ebp
  44710f:	xor    al,0x0
	...
  44711d:	add    BYTE PTR [rax],al
  44711f:	add    BYTE PTR [rdi+0x43],al
  447122:	rex.XB cmp spl,BYTE PTR [r8]
  447125:	sub    BYTE PTR [rdi+0x4e],al
  447128:	push   rbp
  447129:	sub    DWORD PTR [rax],esp
  44712b:	xor    al,0x2e
  44712d:	cmp    DWORD PTR [rsi],ebp
  44712f:	xor    al,0x0
	...
  44713d:	add    BYTE PTR [rax],al
  44713f:	add    BYTE PTR [rdi+0x43],al
  447142:	rex.XB cmp spl,BYTE PTR [r8]
  447145:	sub    BYTE PTR [rdi+0x4e],al
  447148:	push   rbp
  447149:	sub    DWORD PTR [rax],esp
  44714b:	xor    al,0x2e
  44714d:	cmp    DWORD PTR [rsi],ebp
  44714f:	xor    al,0x0
	...
  44715d:	add    BYTE PTR [rax],al
  44715f:	add    BYTE PTR [rdi+0x43],al
  447162:	rex.XB cmp spl,BYTE PTR [r8]
  447165:	sub    BYTE PTR [rdi+0x4e],al
  447168:	push   rbp
  447169:	sub    DWORD PTR [rax],esp
  44716b:	xor    al,0x2e
  44716d:	cmp    DWORD PTR [rsi],ebp
  44716f:	xor    al,0x0
	...
  44717d:	add    BYTE PTR [rax],al
  44717f:	add    BYTE PTR [rdi+0x43],al
  447182:	rex.XB cmp spl,BYTE PTR [r8]
  447185:	sub    BYTE PTR [rdi+0x4e],al
  447188:	push   rbp
  447189:	sub    DWORD PTR [rax],esp
  44718b:	xor    al,0x2e
  44718d:	cmp    DWORD PTR [rsi],ebp
  44718f:	xor    al,0x0
	...
  44719d:	add    BYTE PTR [rax],al
  44719f:	add    BYTE PTR [rdi+0x43],al
  4471a2:	rex.XB cmp spl,BYTE PTR [r8]
  4471a5:	sub    BYTE PTR [rdi+0x4e],al
  4471a8:	push   rbp
  4471a9:	sub    DWORD PTR [rax],esp
  4471ab:	xor    al,0x2e
  4471ad:	cmp    DWORD PTR [rsi],ebp
  4471af:	xor    al,0x0
	...
  4471bd:	add    BYTE PTR [rax],al
  4471bf:	add    BYTE PTR [rdi+0x43],al
  4471c2:	rex.XB cmp spl,BYTE PTR [r8]
  4471c5:	sub    BYTE PTR [rdi+0x4e],al
  4471c8:	push   rbp
  4471c9:	sub    DWORD PTR [rax],esp
  4471cb:	xor    al,0x2e
  4471cd:	cmp    DWORD PTR [rsi],ebp
  4471cf:	xor    al,0x0
	...
  4471dd:	add    BYTE PTR [rax],al
  4471df:	add    BYTE PTR [rdi+0x43],al
  4471e2:	rex.XB cmp spl,BYTE PTR [r8]
  4471e5:	sub    BYTE PTR [rdi+0x4e],al
  4471e8:	push   rbp
  4471e9:	sub    DWORD PTR [rax],esp
  4471eb:	xor    al,0x2e
  4471ed:	cmp    DWORD PTR [rsi],ebp
  4471ef:	xor    al,0x0
	...
  4471fd:	add    BYTE PTR [rax],al
  4471ff:	add    BYTE PTR [rdi+0x43],al
  447202:	rex.XB cmp spl,BYTE PTR [r8]
  447205:	sub    BYTE PTR [rdi+0x4e],al
  447208:	push   rbp
  447209:	sub    DWORD PTR [rax],esp
  44720b:	xor    al,0x2e
  44720d:	cmp    DWORD PTR [rsi],ebp
  44720f:	xor    al,0x0
	...
  44721d:	add    BYTE PTR [rax],al
  44721f:	add    BYTE PTR [rdi+0x43],al
  447222:	rex.XB cmp spl,BYTE PTR [r8]
  447225:	sub    BYTE PTR [rdi+0x4e],al
  447228:	push   rbp
  447229:	sub    DWORD PTR [rax],esp
  44722b:	xor    al,0x2e
  44722d:	cmp    DWORD PTR [rsi],ebp
  44722f:	xor    al,0x0
	...
  44723d:	add    BYTE PTR [rax],al
  44723f:	add    BYTE PTR [rdi+0x43],al
  447242:	rex.XB cmp spl,BYTE PTR [r8]
  447245:	sub    BYTE PTR [rdi+0x4e],al
  447248:	push   rbp
  447249:	sub    DWORD PTR [rax],esp
  44724b:	xor    al,0x2e
  44724d:	cmp    DWORD PTR [rsi],ebp
  44724f:	xor    al,0x0
	...
  44725d:	add    BYTE PTR [rax],al
  44725f:	add    BYTE PTR [rdi+0x43],al
  447262:	rex.XB cmp spl,BYTE PTR [r8]
  447265:	sub    BYTE PTR [rdi+0x4e],al
  447268:	push   rbp
  447269:	sub    DWORD PTR [rax],esp
  44726b:	xor    al,0x2e
  44726d:	cmp    DWORD PTR [rsi],ebp
  44726f:	xor    al,0x0
	...
  44727d:	add    BYTE PTR [rax],al
  44727f:	add    BYTE PTR [rdi+0x43],al
  447282:	rex.XB cmp spl,BYTE PTR [r8]
  447285:	sub    BYTE PTR [rdi+0x4e],al
  447288:	push   rbp
  447289:	sub    DWORD PTR [rax],esp
  44728b:	xor    al,0x2e
  44728d:	cmp    DWORD PTR [rsi],ebp
  44728f:	xor    al,0x0
	...
  44729d:	add    BYTE PTR [rax],al
  44729f:	add    BYTE PTR [rdi+0x43],al
  4472a2:	rex.XB cmp spl,BYTE PTR [r8]
  4472a5:	sub    BYTE PTR [rdi+0x4e],al
  4472a8:	push   rbp
  4472a9:	sub    DWORD PTR [rax],esp
  4472ab:	xor    al,0x2e
  4472ad:	cmp    DWORD PTR [rsi],ebp
  4472af:	xor    al,0x0
	...
  4472bd:	add    BYTE PTR [rax],al
  4472bf:	add    BYTE PTR [rdi+0x43],al
  4472c2:	rex.XB cmp spl,BYTE PTR [r8]
  4472c5:	sub    BYTE PTR [rdi+0x4e],al
  4472c8:	push   rbp
  4472c9:	sub    DWORD PTR [rax],esp
  4472cb:	xor    al,0x2e
  4472cd:	cmp    DWORD PTR [rsi],ebp
  4472cf:	xor    al,0x0
	...
  4472dd:	add    BYTE PTR [rax],al
  4472df:	add    BYTE PTR [rdi+0x43],al
  4472e2:	rex.XB cmp spl,BYTE PTR [r8]
  4472e5:	sub    BYTE PTR [rdi+0x4e],al
  4472e8:	push   rbp
  4472e9:	sub    DWORD PTR [rax],esp
  4472eb:	xor    al,0x2e
  4472ed:	cmp    DWORD PTR [rsi],ebp
  4472ef:	xor    al,0x0
	...
  4472fd:	add    BYTE PTR [rax],al
  4472ff:	add    BYTE PTR [rdi+0x43],al
  447302:	rex.XB cmp spl,BYTE PTR [r8]
  447305:	sub    BYTE PTR [rdi+0x4e],al
  447308:	push   rbp
  447309:	sub    DWORD PTR [rax],esp
  44730b:	xor    al,0x2e
  44730d:	cmp    DWORD PTR [rsi],ebp
  44730f:	xor    al,0x0
	...
  44731d:	add    BYTE PTR [rax],al
  44731f:	add    BYTE PTR [rdi+0x43],al
  447322:	rex.XB cmp spl,BYTE PTR [r8]
  447325:	sub    BYTE PTR [rdi+0x4e],al
  447328:	push   rbp
  447329:	sub    DWORD PTR [rax],esp
  44732b:	xor    al,0x2e
  44732d:	cmp    DWORD PTR [rsi],ebp
  44732f:	xor    al,0x0
	...
  44733d:	add    BYTE PTR [rax],al
  44733f:	add    BYTE PTR [rdi+0x43],al
  447342:	rex.XB cmp spl,BYTE PTR [r8]
  447345:	sub    BYTE PTR [rdi+0x4e],al
  447348:	push   rbp
  447349:	sub    DWORD PTR [rax],esp
  44734b:	xor    al,0x2e
  44734d:	cmp    DWORD PTR [rsi],ebp
  44734f:	xor    al,0x0
	...
  44735d:	add    BYTE PTR [rax],al
  44735f:	add    BYTE PTR [rdi+0x43],al
  447362:	rex.XB cmp spl,BYTE PTR [r8]
  447365:	sub    BYTE PTR [rdi+0x4e],al
  447368:	push   rbp
  447369:	sub    DWORD PTR [rax],esp
  44736b:	xor    al,0x2e
  44736d:	cmp    DWORD PTR [rsi],ebp
  44736f:	xor    al,0x0
	...
  44737d:	add    BYTE PTR [rax],al
  44737f:	add    BYTE PTR [rdi+0x43],al
  447382:	rex.XB cmp spl,BYTE PTR [r8]
  447385:	sub    BYTE PTR [rdi+0x4e],al
  447388:	push   rbp
  447389:	sub    DWORD PTR [rax],esp
  44738b:	xor    al,0x2e
  44738d:	cmp    DWORD PTR [rsi],ebp
  44738f:	xor    al,0x0
	...
  44739d:	add    BYTE PTR [rax],al
  44739f:	add    BYTE PTR [rdi+0x43],al
  4473a2:	rex.XB cmp spl,BYTE PTR [r8]
  4473a5:	sub    BYTE PTR [rdi+0x4e],al
  4473a8:	push   rbp
  4473a9:	sub    DWORD PTR [rax],esp
  4473ab:	xor    al,0x2e
  4473ad:	cmp    DWORD PTR [rsi],ebp
  4473af:	xor    al,0x0
	...
  4473bd:	add    BYTE PTR [rax],al
  4473bf:	add    BYTE PTR [rdi+0x43],al
  4473c2:	rex.XB cmp spl,BYTE PTR [r8]
  4473c5:	sub    BYTE PTR [rdi+0x4e],al
  4473c8:	push   rbp
  4473c9:	sub    DWORD PTR [rax],esp
  4473cb:	xor    al,0x2e
  4473cd:	cmp    DWORD PTR [rsi],ebp
  4473cf:	xor    al,0x0
	...
  4473dd:	add    BYTE PTR [rax],al
  4473df:	add    BYTE PTR [rdi+0x43],al
  4473e2:	rex.XB cmp spl,BYTE PTR [r8]
  4473e5:	sub    BYTE PTR [rdi+0x4e],al
  4473e8:	push   rbp
  4473e9:	sub    DWORD PTR [rax],esp
  4473eb:	xor    al,0x2e
  4473ed:	cmp    DWORD PTR [rsi],ebp
  4473ef:	xor    al,0x0
	...
  4473fd:	add    BYTE PTR [rax],al
  4473ff:	add    BYTE PTR [rdi+0x43],al
  447402:	rex.XB cmp spl,BYTE PTR [r8]
  447405:	sub    BYTE PTR [rdi+0x4e],al
  447408:	push   rbp
  447409:	sub    DWORD PTR [rax],esp
  44740b:	xor    al,0x2e
  44740d:	cmp    DWORD PTR [rsi],ebp
  44740f:	xor    al,0x0
	...
  44741d:	add    BYTE PTR [rax],al
  44741f:	add    BYTE PTR [rdi+0x43],al
  447422:	rex.XB cmp spl,BYTE PTR [r8]
  447425:	sub    BYTE PTR [rdi+0x4e],al
  447428:	push   rbp
  447429:	sub    DWORD PTR [rax],esp
  44742b:	xor    al,0x2e
  44742d:	cmp    DWORD PTR [rsi],ebp
  44742f:	xor    al,0x0
	...
  44743d:	add    BYTE PTR [rax],al
  44743f:	add    BYTE PTR [rdi+0x43],al
  447442:	rex.XB cmp spl,BYTE PTR [r8]
  447445:	sub    BYTE PTR [rdi+0x4e],al
  447448:	push   rbp
  447449:	sub    DWORD PTR [rax],esp
  44744b:	xor    al,0x2e
  44744d:	cmp    DWORD PTR [rsi],ebp
  44744f:	xor    al,0x0
	...
  44745d:	add    BYTE PTR [rax],al
  44745f:	add    BYTE PTR [rdi+0x43],al
  447462:	rex.XB cmp spl,BYTE PTR [r8]
  447465:	sub    BYTE PTR [rdi+0x4e],al
  447468:	push   rbp
  447469:	sub    DWORD PTR [rax],esp
  44746b:	xor    al,0x2e
  44746d:	cmp    DWORD PTR [rsi],ebp
  44746f:	xor    al,0x0
	...
  44747d:	add    BYTE PTR [rax],al
  44747f:	add    BYTE PTR [rdi+0x43],al
  447482:	rex.XB cmp spl,BYTE PTR [r8]
  447485:	sub    BYTE PTR [rdi+0x4e],al
  447488:	push   rbp
  447489:	sub    DWORD PTR [rax],esp
  44748b:	xor    al,0x2e
  44748d:	cmp    DWORD PTR [rsi],ebp
  44748f:	xor    al,0x0
	...
  44749d:	add    BYTE PTR [rax],al
  44749f:	add    BYTE PTR [rdi+0x43],al
  4474a2:	rex.XB cmp spl,BYTE PTR [r8]
  4474a5:	sub    BYTE PTR [rdi+0x4e],al
  4474a8:	push   rbp
  4474a9:	sub    DWORD PTR [rax],esp
  4474ab:	xor    al,0x2e
  4474ad:	cmp    DWORD PTR [rsi],ebp
  4474af:	xor    al,0x0
	...
  4474bd:	add    BYTE PTR [rax],al
  4474bf:	add    BYTE PTR [rdi+0x43],al
  4474c2:	rex.XB cmp spl,BYTE PTR [r8]
  4474c5:	sub    BYTE PTR [rdi+0x4e],al
  4474c8:	push   rbp
  4474c9:	sub    DWORD PTR [rax],esp
  4474cb:	xor    al,0x2e
  4474cd:	cmp    DWORD PTR [rsi],ebp
  4474cf:	xor    al,0x0
	...
  4474dd:	add    BYTE PTR [rax],al
  4474df:	add    BYTE PTR [rdi+0x43],al
  4474e2:	rex.XB cmp spl,BYTE PTR [r8]
  4474e5:	sub    BYTE PTR [rdi+0x4e],al
  4474e8:	push   rbp
  4474e9:	sub    DWORD PTR [rax],esp
  4474eb:	xor    al,0x2e
  4474ed:	cmp    DWORD PTR [rsi],ebp
  4474ef:	xor    al,0x0
	...
  4474fd:	add    BYTE PTR [rax],al
  4474ff:	add    BYTE PTR [rdi+0x43],al
  447502:	rex.XB cmp spl,BYTE PTR [r8]
  447505:	sub    BYTE PTR [rdi+0x4e],al
  447508:	push   rbp
  447509:	sub    DWORD PTR [rax],esp
  44750b:	xor    al,0x2e
  44750d:	cmp    DWORD PTR [rsi],ebp
  44750f:	xor    al,0x0
	...
  44751d:	add    BYTE PTR [rax],al
  44751f:	add    BYTE PTR [rdi+0x43],al
  447522:	rex.XB cmp spl,BYTE PTR [r8]
  447525:	sub    BYTE PTR [rdi+0x4e],al
  447528:	push   rbp
  447529:	sub    DWORD PTR [rax],esp
  44752b:	xor    al,0x2e
  44752d:	cmp    DWORD PTR [rsi],ebp
  44752f:	xor    al,0x0
	...
  44753d:	add    BYTE PTR [rax],al
  44753f:	add    BYTE PTR [rdi+0x43],al
  447542:	rex.XB cmp spl,BYTE PTR [r8]
  447545:	sub    BYTE PTR [rdi+0x4e],al
  447548:	push   rbp
  447549:	sub    DWORD PTR [rax],esp
  44754b:	xor    al,0x2e
  44754d:	cmp    DWORD PTR [rsi],ebp
  44754f:	xor    al,0x0
	...
  447565:	add    BYTE PTR [rax],al
  447567:	add    BYTE PTR [rcx],al
  447569:	add    BYTE PTR [rax],al
  44756b:	add    BYTE PTR [rax],ah
  44756d:	sbb    al,BYTE PTR [rip+0x466f000]        # 0x4ab6573
  447573:	add    BYTE PTR [rax+0x0],al
  447576:	add    BYTE PTR [rax],al
  447578:	sub    BYTE PTR [rdx],bl
  44757a:	add    eax,0x4670000
  44757f:	add    BYTE PTR [rax+0x0],al
  447582:	add    BYTE PTR [rax],al
  447584:	sub    BYTE PTR [rdx],bl
  447586:	add    eax,0x4674000
  44758b:	add    BYTE PTR [rax+0x0],al
  44758e:	add    BYTE PTR [rax],al
  447590:	sub    BYTE PTR [rdx],bl
  447592:	add    eax,0x4672000
  447597:	add    BYTE PTR [rax+0x0],al
	...

Disassembly of section .pdata:

0000000000448000 <.pdata>:
  448000:	add    BYTE PTR [rax],dl
  448002:	add    BYTE PTR [rax],al
  448004:	add    DWORD PTR [rax],edx
  448006:	add    BYTE PTR [rax],al
  448008:	add    BYTE PTR [rax+0x10100004],dh
  44800e:	add    BYTE PTR [rax],al
  448010:	push   rcx
  448011:	adc    DWORD PTR [rax],eax
  448013:	add    BYTE PTR [rax+rsi*4],al
  448016:	add    al,0x0
  448018:	(bad)  
  448019:	adc    DWORD PTR [rax],eax
  44801b:	add    BYTE PTR [rsi+0xc000011],ch
  448021:	mov    al,0x4
  448023:	add    BYTE PTR [rax-0x31ffffef],dh
  448029:	adc    al,0x0
  44802b:	add    BYTE PTR [rax+rsi*4],dl
  44802e:	add    al,0x0
  448030:	rcl    BYTE PTR [rax+rax*1],1
  448033:	add    dl,dh
  448035:	adc    al,0x0
  448037:	add    BYTE PTR [rax],ch
  448039:	mov    al,0x4
  44803b:	add    BYTE PTR [rax],al
  44803d:	adc    eax,0x15220000
  448042:	add    BYTE PTR [rax],al
  448044:	rex.W mov al,0x4
  448047:	add    BYTE PTR [rax],dh
  448049:	adc    eax,0x15670000
  44804e:	add    BYTE PTR [rax],al
  448050:	push   0x700004b0
  448055:	adc    eax,0x15770000
  44805a:	add    BYTE PTR [rax],al
  44805c:	jo     0x44800e
  44805e:	add    al,0x0
  448060:	adc    BYTE PTR [rip+0x16030000],0x0        # 0x16478067
  448067:	add    BYTE PTR [rax+rsi*4+0x4],dh
  44806b:	add    BYTE PTR [rax],dl
  44806d:	(bad)  
  44806e:	add    BYTE PTR [rax],al
  448070:	iret   
  448071:	(bad)  
  448072:	add    BYTE PTR [rax],al
  448074:	test   BYTE PTR [rax+0x16d00004],dh
  44807a:	add    BYTE PTR [rax],al
  44807c:	and    DWORD PTR [rdi],edx
  44807e:	add    BYTE PTR [rax],al
  448080:	nop
  448081:	mov    al,0x4
  448083:	add    BYTE PTR [rax],dh
  448085:	(bad)  
  448086:	add    BYTE PTR [rax],al
  448088:	cmp    edx,DWORD PTR [rdi]
  44808a:	add    BYTE PTR [rax],al
  44808c:	cwde   
  44808d:	mov    al,0x4
  44808f:	add    BYTE PTR [rax+0x17],al
  448092:	add    BYTE PTR [rax],al
  448094:	cdq    
  448095:	(bad)  
  448096:	add    BYTE PTR [rax],al
  448098:	pushf  
  448099:	mov    al,0x4
  44809b:	add    BYTE PTR [rax+0x17],ah
  4480a1:	sbb    BYTE PTR [rax],al
  4480a3:	add    BYTE PTR [rax+rsi*4+0x18000004],ah
  4480aa:	add    BYTE PTR [rax],al
  4480ac:	fistp  WORD PTR [rcx]
  4480ae:	add    BYTE PTR [rax],al
  4480b0:	mov    al,0xb0
  4480b2:	add    al,0x0
  4480b4:	loopne 0x4480cf
  4480b6:	add    BYTE PTR [rax],al
  4480b8:	rex.XB sbb al,BYTE PTR [r8]
  4480bb:	add    al,cl
  4480bd:	mov    al,0x4
  4480bf:	add    BYTE PTR [rax+0x1a],dl
  4480c2:	add    BYTE PTR [rax],al
  4480c4:	jns    0x4480e0
  4480c6:	add    BYTE PTR [rax],al
  4480c8:	(bad)  
  4480c9:	mov    al,0x4
  4480cb:	add    BYTE PTR [rax-0x4cffffe6],al
  4480d1:	sbb    al,BYTE PTR [rax]
  4480d3:	add    ah,bl
  4480d5:	mov    al,0x4
  4480d7:	add    al,al
  4480d9:	sbb    al,BYTE PTR [rax]
  4480db:	add    dl,bh
  4480dd:	sbb    al,BYTE PTR [rax]
  4480df:	add    al,ch
  4480e1:	mov    al,0x4
  4480e3:	add    BYTE PTR [rax],al
  4480e5:	sbb    eax,DWORD PTR [rax]
  4480e7:	add    BYTE PTR [rdx],bh
  4480e9:	sbb    eax,DWORD PTR [rax]
  4480eb:	add    al,dh
  4480ed:	mov    al,0x4
  4480ef:	add    BYTE PTR [rax+0x1b],al
  4480f2:	add    BYTE PTR [rax],al
  4480f4:	out    0x2d,al
  4480f6:	add    BYTE PTR [rax],al
  4480f8:	clc    
  4480f9:	mov    al,0x4
  4480fb:	add    al,dh
  4480fd:	sub    eax,0x38b60000
  448102:	add    BYTE PTR [rax],al
  448104:	adc    BYTE PTR [rcx+0x38c00004],dh
  44810a:	add    BYTE PTR [rax],al
  44810c:	enter  0x38,0x0
  448110:	cmp    BYTE PTR [rcx+0x38d00004],dh
  448116:	add    BYTE PTR [rax],al
  448118:	clc    
  448119:	cmp    BYTE PTR [rax],al
  44811b:	add    BYTE PTR [rcx+rsi*4],bh
  44811e:	add    al,0x0
  448120:	add    BYTE PTR [rcx],bh
  448122:	add    BYTE PTR [rax],al
  448124:	cmp    DWORD PTR es:[rax],eax
  448127:	add    BYTE PTR [rax-0x4f],al
  44812a:	add    al,0x0
  44812c:	xor    BYTE PTR [rcx],bh
  44812e:	add    BYTE PTR [rax],al
  448130:	pop    rsi
  448131:	cmp    DWORD PTR [rax],eax
  448133:	add    BYTE PTR [rcx+rsi*4+0x4],cl
  448137:	add    BYTE PTR [rax+0x39],ah
  44813a:	add    BYTE PTR [rax],al
  44813c:	xlat   BYTE PTR ds:[rbx]
  44813d:	cmp    DWORD PTR [rax],eax
  44813f:	add    BYTE PTR [rax-0x4f],bl
  448142:	add    al,0x0
  448144:	loopne 0x44817f
  448146:	add    BYTE PTR [rax],al
  448148:	imul   edi,DWORD PTR [rdx],0x0
  44814b:	add    BYTE PTR [rcx+rsi*4+0x4],bl
  44814f:	add    BYTE PTR [rax+0x3a],dh
  448152:	add    BYTE PTR [rax],al
  448154:	cmp    BYTE PTR [rdx],0x0
  448157:	add    BYTE PTR [rax-0x4f],ch
  44815a:	add    al,0x0
  44815c:	cmp    BYTE PTR [rdx],0x0
  44815f:	add    BYTE PTR [rax+0x6c00003a],cl
  448165:	mov    cl,0x4
  448167:	add    BYTE PTR [rax-0x11ffffc6],dl
  44816d:	cmp    al,BYTE PTR [rax]
  44816f:	add    BYTE PTR [rax-0x4f],dh
  448172:	add    al,0x0
  448174:	lock cmp al,BYTE PTR [rax]
  448177:	add    BYTE PTR [rcx+0x3b],dh
  44817a:	add    BYTE PTR [rax],al
  44817c:	xor    BYTE PTR [rcx+0x3b800004],0x0
  448183:	add    BYTE PTR [rbx+rdi*1-0x4e780000],al
  44818a:	add    al,0x0
  44818c:	nop
  44818d:	cmp    eax,DWORD PTR [rax]
  44818f:	add    bh,bl
  448191:	cmp    eax,DWORD PTR [rax]
  448193:	add    BYTE PTR [rcx+rsi*4+0x3be00004],cl
  44819a:	add    BYTE PTR [rax],al
  44819c:	rex.WRB cmp al,0x0
  44819f:	add    BYTE PTR [rcx+rsi*4+0x3c500004],bl
  4481a6:	add    BYTE PTR [rax],al
  4481a8:	jns    0x4481e6
  4481aa:	add    BYTE PTR [rax],al
  4481ac:	lods   al,BYTE PTR ds:[rsi]
  4481ad:	mov    cl,0x4
  4481af:	add    BYTE PTR [rax-0x2bffffc4],al
  4481b5:	cmp    al,0x0
  4481b7:	add    BYTE PTR [rcx+rsi*4+0x3ce00004],dh
  4481be:	add    BYTE PTR [rax],al
  4481c0:	in     eax,0x3c
  4481c2:	add    BYTE PTR [rax],al
  4481c4:	mov    esp,0xf00004b1
  4481c9:	cmp    al,0x0
  4481cb:	add    ch,dh
  4481cd:	cmp    al,0x0
  4481cf:	add    al,al
  4481d1:	mov    cl,0x4
  4481d3:	add    BYTE PTR [rax],al
  4481d5:	cmp    eax,0x3d050000
  4481da:	add    BYTE PTR [rax],al
  4481dc:	(bad)  
  4481dd:	mov    cl,0x4
  4481df:	add    BYTE PTR [rax],dl
  4481e1:	cmp    eax,0x3d150000
  4481e6:	add    BYTE PTR [rax],al
  4481e8:	enter  0x4b1,0x0
  4481ec:	and    BYTE PTR [rip+0x3d360000],bh        # 0x3d7a81f2
  4481f2:	add    BYTE PTR [rax],al
  4481f4:	int3   
  4481f5:	mov    cl,0x4
  4481f7:	add    BYTE PTR [rax+0x3d],al
  4481fa:	add    BYTE PTR [rax],al
  4481fc:	push   rax
  4481fd:	cmp    eax,0xb1d00000
  448202:	add    al,0x0
  448204:	push   rax
  448205:	cmp    eax,0x3dac0000
  44820a:	add    BYTE PTR [rax],al
  44820c:	(bad)  
  44820d:	mov    cl,0x4
  44820f:	add    BYTE PTR [rax+0x1e00003d],dh
  448215:	add    BYTE PTR ds:[rax],al
  448218:	loopne 0x4481cb
  44821a:	add    al,0x0
  44821c:	and    BYTE PTR [rsi],bh
  44821e:	add    BYTE PTR [rax],al
  448220:	icebp  
  448221:	add    BYTE PTR ds:[rax],al
  448224:	in     al,dx
  448225:	mov    cl,0x4
  448227:	add    BYTE PTR [rax],al
  448229:	(bad)  
  44822a:	add    BYTE PTR [rax],al
  44822c:	cmp    BYTE PTR [rdi],bh
  44822e:	add    BYTE PTR [rax],al
  448230:	cld    
  448231:	mov    cl,0x4
  448233:	add    BYTE PTR [rax+0x3f],al
  448236:	add    BYTE PTR [rax],al
  448238:	rex.W (bad) 
  44823a:	add    BYTE PTR [rax],al
  44823c:	add    al,0xb2
  44823e:	add    al,0x0
  448240:	push   rax
  448241:	(bad)  
  448242:	add    BYTE PTR [rax],al
  448244:	mov    ?,WORD PTR [rdi]
  448246:	add    BYTE PTR [rax],al
  448248:	or     BYTE PTR [rdx+0x3f900004],dh
  44824e:	add    BYTE PTR [rax],al
  448250:	(bad)  
  448251:	(bad)  
  448252:	add    BYTE PTR [rax],al
  448254:	or     al,0xb2
  448256:	add    al,0x0
  448258:	sar    BYTE PTR [rdi],1
  44825a:	add    BYTE PTR [rax],al
  44825c:	clc    
  44825d:	(bad)  
  44825e:	add    BYTE PTR [rax],al
  448260:	adc    BYTE PTR [rdx+0x40000004],dh
  448266:	add    BYTE PTR [rax],al
  448268:	rex.X
  448269:	add    BYTE PTR [rax],al
  44826c:	sbb    BYTE PTR [rdx+0x40500004],dh
  448272:	add    BYTE PTR [rax],al
  448274:	movsxd eax,DWORD PTR [rax+0x0]
  448277:	add    BYTE PTR [rax],ah
  448279:	mov    dl,0x4
  44827b:	add    BYTE PTR [rax+0x40],dh
  44827e:	add    BYTE PTR [rax],al
  448280:	rol    BYTE PTR [rax+0x0],cl
  448283:	add    BYTE PTR [rdx+rsi*4],ah
  448286:	add    al,0x0
  448288:	loopne 0x4482ca
  44828a:	add    BYTE PTR [rax],al
  44828c:	and    al,BYTE PTR [rcx+0x0]
  44828f:	add    BYTE PTR [rax],dh
  448291:	mov    dl,0x4
  448293:	add    BYTE PTR [rax],dh
  448295:	add    BYTE PTR [r8],al
  448298:	push   rsi
  448299:	add    BYTE PTR [r8],al
  44829c:	cmp    al,0xb2
  44829e:	add    al,0x0
  4482a0:	(bad)  
  4482a1:	add    BYTE PTR [r8],al
  4482a4:	test   eax,0x44000041
  4482a9:	mov    dl,0x4
  4482ab:	add    BYTE PTR [rax+0x29000041],dh
  4482b1:	rex.X add BYTE PTR [rax],al
  4482b4:	rex.WR mov dl,0x4
  4482b7:	add    BYTE PTR [rax],dh
  4482b9:	rex.X add BYTE PTR [rax],al
  4482bc:	lea    eax,[rdx+0x0]
  4482bf:	add    BYTE PTR [rax-0x4e],bl
  4482c2:	add    al,0x0
  4482c4:	nop
  4482c5:	rex.X add BYTE PTR [rax],al
  4482c8:	rex.XB add BYTE PTR gs:[r8],al
  4482cc:	(bad)  
  4482cd:	mov    dl,0x4
  4482cf:	add    BYTE PTR [rax+0x43],dh
  4482d2:	add    BYTE PTR [rax],al
  4482d4:	sahf   
  4482d5:	rex.XB add BYTE PTR [r8],al
  4482d8:	jo     0x44828c
  4482da:	add    al,0x0
  4482dc:	movabs al,ds:0x78000043e6000043
  4482e5:	mov    dl,0x4
  4482e7:	add    al,dh
  4482e9:	rex.XB add BYTE PTR [r8],al
  4482ec:	(bad)  
  4482ed:	add    BYTE PTR [rax],r8b
  4482f0:	xor    BYTE PTR [rdx+0x44400004],0x0
  4482f7:	add    BYTE PTR [rip+0xffffffff8c000045],ah        # 0xffffffff8c448342
  4482fd:	mov    dl,0x4
  4482ff:	add    BYTE PTR [rax],dh
  448301:	add    BYTE PTR [r8],r8b
  448304:	lock add BYTE PTR [r8],r8b
  448308:	cwde   
  448309:	mov    dl,0x4
  44830b:	add    al,dh
  44830d:	add    BYTE PTR [r8],r8b
  448310:	push   rsi
  448311:	rex.RX add BYTE PTR [rax],r8b
  448314:	lods   al,BYTE PTR ds:[rsi]
  448315:	mov    dl,0x4
  448317:	add    BYTE PTR [rax+0x46],ah
  44831a:	add    BYTE PTR [rax],al
  44831c:	rol    DWORD PTR [rsi+0x0],0x0
  448320:	mov    esp,0xd00004b2
  448325:	rex.RX add BYTE PTR [rax],r8b
  448328:	fild   DWORD PTR [rsi+0x0]
  44832b:	add    ah,cl
  44832d:	mov    dl,0x4
  44832f:	add    al,ah
  448331:	rex.RX add BYTE PTR [rax],r8b
  448334:	repz rex.RX add BYTE PTR [rax],r8b
  448338:	shl    BYTE PTR [rdx+0x47000004],1
  44833e:	add    BYTE PTR [rax],al
  448340:	add    al,0x47
  448342:	add    BYTE PTR [rax],al
  448344:	(bad)  
  448345:	mov    dl,0x4
  448347:	add    BYTE PTR [rax],dl
  448349:	rex.RXB add BYTE PTR [r8],r8b
  44834c:	sub    DWORD PTR [rdi+0x0],eax
  44834f:	add    al,bl
  448351:	mov    dl,0x4
  448353:	add    BYTE PTR [rax],dh
  448355:	rex.RXB add BYTE PTR [r8],r8b
  448358:	rex.WR
  448359:	rex.RXB add BYTE PTR [r8],r8b
  44835c:	fdiv   QWORD PTR [rdx+0x47500004]
  448362:	add    BYTE PTR [rax],al
  448364:	adc    BYTE PTR [rax+0x0],cl
  448367:	add    al,ah
  448369:	mov    dl,0x4
  44836b:	add    BYTE PTR [rax],dl
  44836d:	rex.W add BYTE PTR [rax],al
  448370:	jb     0x4483ba
  448372:	add    BYTE PTR [rax],al
  448374:	in     al,dx
  448375:	mov    dl,0x4
  448377:	add    BYTE PTR [rax-0x4ffffb8],al
  44837d:	rex.W add BYTE PTR [rax],al
  448380:	clc    
  448381:	mov    dl,0x4
  448383:	add    BYTE PTR [rax],al
  448385:	rex.WB add BYTE PTR [r8],al
  448388:	sub    DWORD PTR [rcx+0x0],ecx
  44838b:	add    BYTE PTR [rbx+rsi*4],al
  44838e:	add    al,0x0
  448390:	xor    BYTE PTR [rcx+0x0],cl
  448393:	add    BYTE PTR [rsi+0x49],dh
  448396:	add    BYTE PTR [rax],al
  448398:	or     al,0xb3
  44839a:	add    al,0x0
  44839c:	or     BYTE PTR [rcx+0x0],0x0
  4483a0:	and    al,0x4a
  4483a2:	add    BYTE PTR [rax],al
  4483a4:	adc    BYTE PTR [rbx+0x4a300004],dh
  4483aa:	add    BYTE PTR [rax],al
  4483ac:	jae    0x4483f8
  4483ae:	add    BYTE PTR [rax],al
  4483b0:	sbb    BYTE PTR [rbx+0x4a800004],dh
  4483b6:	add    BYTE PTR [rax],al
  4483b8:	test   eax,0x1c00004a
  4483bd:	mov    bl,0x4
  4483bf:	add    BYTE PTR [rax-0x15ffffb6],dh
  4483c5:	rex.WX add BYTE PTR [rax],al
  4483c8:	and    al,0xb3
  4483ca:	add    al,0x0
  4483cc:	lock rex.WX add BYTE PTR [rax],al
  4483d0:	sub    cl,BYTE PTR [rbx+0x0]
  4483d3:	add    BYTE PTR [rbx+rsi*4],ch
  4483d6:	add    al,0x0
  4483d8:	xor    BYTE PTR [rbx+0x0],cl
  4483db:	add    BYTE PTR [rbx+0x4b],dl
  4483de:	add    BYTE PTR [rax],al
  4483e0:	xor    al,0xb3
  4483e2:	add    al,0x0
  4483e4:	(bad)  
  4483e5:	rex.WXB add BYTE PTR [r8],al
  4483e8:	ror    BYTE PTR [rbx+0x0],0x0
  4483ec:	cmp    BYTE PTR [rbx+0x4bc00004],dh
  4483f2:	add    BYTE PTR [rax],al
  4483f4:	(bad)  
  4483f5:	rex.WR add BYTE PTR [rax],r8b
  4483f8:	rex.R mov bl,0x4
  4483fb:	add    BYTE PTR [rax],ah
  4483fd:	rex.WR add BYTE PTR [rax],r8b
  448400:	ja     0x44844e
  448402:	add    BYTE PTR [rax],al
  448404:	push   rax
  448405:	mov    bl,0x4
  448407:	add    BYTE PTR [rax-0x3cffffb4],al
  44840d:	rex.WRB add BYTE PTR [r8],r8b
  448410:	pop    rsp
  448411:	mov    bl,0x4
  448413:	add    al,dl
  448415:	rex.WRB add BYTE PTR [r8],r8b
  448418:	(bad)  
  448419:	rex.WRX add BYTE PTR [rax],r8b
  44841c:	push   0xffffffff900004b3
  448421:	rex.WRX add BYTE PTR [rax],r8b
  448424:	push   0x70000051
  448429:	mov    bl,0x4
  44842b:	add    BYTE PTR [rax+0x51],dh
  44842e:	add    BYTE PTR [rax],al
  448430:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  448431:	push   rdx
  448432:	add    BYTE PTR [rax],al
  448434:	mov    BYTE PTR [rbx+0x52b00004],dh
  44843a:	add    BYTE PTR [rax],al
  44843c:	mov    esi,0x98000052
  448441:	mov    bl,0x4
  448443:	add    al,al
  448445:	push   rdx
  448446:	add    BYTE PTR [rax],al
  448448:	(bad)  
  448449:	push   rdx
  44844a:	add    BYTE PTR [rax],al
  44844c:	pushf  
  44844d:	mov    bl,0x4
  44844f:	add    al,dl
  448451:	push   rdx
  448452:	add    BYTE PTR [rax],al
  448454:	test   DWORD PTR [rax+rax*1+0x0],edx
  448458:	movabs al,ds:0xa1000054900004b3
  448461:	push   rbp
  448462:	add    BYTE PTR [rax],al
  448464:	mov    al,0xb3
  448466:	add    al,0x0
  448468:	mov    al,0x55
  44846a:	add    BYTE PTR [rax],al
  44846c:	add    DWORD PTR [rsi+0x0],edx
  44846f:	add    BYTE PTR [rbx+rsi*4+0x56100004],bh
  448476:	add    BYTE PTR [rax],al
  448478:	pop    rsi
  448479:	push   rsi
  44847a:	add    BYTE PTR [rax],al
  44847c:	(bad)  
  44847d:	mov    bl,0x4
  44847f:	add    BYTE PTR [rax+0x56],ah
  448482:	add    BYTE PTR [rax],al
  448484:	mov    dl,0x56
  448486:	add    BYTE PTR [rax],al
  448488:	(bad)  
  448489:	mov    bl,0x4
  44848b:	add    al,al
  44848d:	push   rsi
  44848e:	add    BYTE PTR [rax],al
  448490:	(bad)  
  448491:	push   rdi
  448492:	add    BYTE PTR [rax],al
  448494:	fdiv   QWORD PTR [rbx+0x57900004]
  44849a:	add    BYTE PTR [rax],al
  44849c:	jo     0x4484f6
  44849e:	add    BYTE PTR [rax],al
  4484a0:	call   0x70448958
  4484a5:	pop    rax
  4484a6:	add    BYTE PTR [rax],al
  4484a8:	js     0x448502
  4484aa:	add    BYTE PTR [rax],al
  4484ac:	hlt    
  4484ad:	mov    bl,0x4
  4484af:	add    BYTE PTR [rax-0x60ffffa8],al
  4484b5:	pop    rax
  4484b6:	add    BYTE PTR [rax],al
  4484b8:	clc    
  4484b9:	mov    bl,0x4
  4484bb:	add    BYTE PTR [rax-0x3dffffa8],ah
  4484c1:	pop    rax
  4484c2:	add    BYTE PTR [rax],al
  4484c4:	add    BYTE PTR [rsp+rax*1+0x58d000],dh
  4484cb:	add    dl,ah
  4484cd:	pop    rax
  4484ce:	add    BYTE PTR [rax],al
  4484d0:	or     BYTE PTR [rsp+rax*1+0x58f000],dh
  4484d7:	add    BYTE PTR [rsi],al
  4484d9:	pop    rcx
  4484da:	add    BYTE PTR [rax],al
  4484dc:	or     al,0xb4
  4484de:	add    al,0x0
  4484e0:	adc    BYTE PTR [rcx+0x0],bl
  4484e3:	add    BYTE PTR [rsi],ah
  4484e5:	pop    rcx
  4484e6:	add    BYTE PTR [rax],al
  4484e8:	adc    BYTE PTR [rsp+rax*1+0x593000],dh
  4484ef:	add    BYTE PTR [rbx],bh
  4484f1:	pop    rcx
  4484f2:	add    BYTE PTR [rax],al
  4484f4:	adc    al,0xb4
  4484f6:	add    al,0x0
  4484f8:	rex pop rcx
  4484fa:	add    BYTE PTR [rax],al
  4484fc:	mov    edi,0x1800005b
  448501:	mov    ah,0x4
  448503:	add    al,al
  448505:	pop    rbx
  448506:	add    BYTE PTR [rax],al
  448508:	int3   
  448509:	pop    rbx
  44850a:	add    BYTE PTR [rax],al
  44850c:	xor    BYTE PTR [rsp+rax*1+0x5bd000],dh
  448513:	add    al,ah
  448515:	pop    rbx
  448516:	add    BYTE PTR [rax],al
  448518:	xor    al,0xb4
  44851a:	add    al,0x0
  44851c:	loopne 0x448579
  44851e:	add    BYTE PTR [rax],al
  448520:	xor    BYTE PTR [rbx+0x0],ah
  448523:	add    BYTE PTR [rax],bh
  448525:	mov    ah,0x4
  448527:	add    BYTE PTR [rax],dh
  448529:	movsxd eax,DWORD PTR [rax]
  44852b:	add    cl,bl
  44852d:	movsxd eax,DWORD PTR [rax]
  44852f:	add    BYTE PTR [rax-0x4c],dl
  448532:	add    al,0x0
  448534:	loopne 0x448599
  448536:	add    BYTE PTR [rax],al
  448538:	in     al,0x64
  44853a:	add    BYTE PTR [rax],al
  44853c:	(bad)  
  44853d:	mov    ah,0x4
  44853f:	add    al,dh
  448541:	add    BYTE PTR fs:[rax],al
  448544:	(bad)  
  448545:	data16 add BYTE PTR [rax],al
  448548:	je     0x4484fe
  44854a:	add    al,0x0
  44854c:	adc    BYTE PTR [rsi+0x0],ah
  44854f:	add    BYTE PTR [rax-0x77ffff9a],dl
  448555:	mov    ah,0x4
  448557:	add    BYTE PTR [rax-0x23ffff9a],dl
  44855d:	data16 add BYTE PTR [rax],al
  448560:	cwde   
  448561:	mov    ah,0x4
  448563:	add    al,ah
  448565:	data16 add BYTE PTR [rax],al
  448568:	sbb    eax,0xa4000067
  44856d:	mov    ah,0x4
  44856f:	add    BYTE PTR [rax],ah
  448571:	add    BYTE PTR [eax],al
  448574:	cwde   
  448575:	imul   eax,DWORD PTR [rax],0x4b4b000
  44857b:	add    BYTE PTR [rax+0x3f000069],ah
  448581:	ins    BYTE PTR es:[rdi],dx
  448582:	add    BYTE PTR [rax],al
  448584:	(bad)  
  448585:	mov    ah,0x4
  448587:	add    BYTE PTR [rax+0x6c],al
  44858a:	add    BYTE PTR [rax],al
  44858c:	mov    ch,BYTE PTR [rax+rax*1+0x0]
  448590:	(bad)  
  448591:	mov    ah,0x4
  448593:	add    BYTE PTR [rax-0x19ffff94],dl
  448599:	ins    BYTE PTR es:[rdi],dx
  44859a:	add    BYTE PTR [rax],al
  44859c:	call   0xfffffffff0448a55
  4485a1:	ins    BYTE PTR es:[rdi],dx
  4485a2:	add    BYTE PTR [rax],al
  4485a4:	ss ins DWORD PTR es:[rdi],dx
  4485a6:	add    BYTE PTR [rax],al
  4485a8:	in     al,dx
  4485a9:	mov    ah,0x4
  4485ab:	add    BYTE PTR [rax+0x6d],al
  4485ae:	add    BYTE PTR [rax],al
  4485b0:	jbe    0x44861f
  4485b2:	add    BYTE PTR [rax],al
  4485b4:	lock mov ah,0x4
  4485b7:	add    BYTE PTR [rax-0x3effff93],al
  4485bd:	ins    DWORD PTR es:[rdi],dx
  4485be:	add    BYTE PTR [rax],al
  4485c0:	hlt    
  4485c1:	mov    ah,0x4
  4485c3:	add    al,dl
  4485c5:	ins    DWORD PTR es:[rdi],dx
  4485c6:	add    BYTE PTR [rax],al
  4485c8:	or     al,0x6e
  4485ca:	add    BYTE PTR [rax],al
  4485cc:	clc    
  4485cd:	mov    ah,0x4
  4485cf:	add    BYTE PTR [rax],dl
  4485d1:	outs   dx,BYTE PTR ds:[rsi]
  4485d2:	add    BYTE PTR [rax],al
  4485d4:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  4485d6:	add    BYTE PTR [rax],al
  4485d8:	cld    
  4485d9:	mov    ah,0x4
  4485db:	add    BYTE PTR [rax+0x6e],dl
  4485de:	add    BYTE PTR [rax],al
  4485e0:	outs   dx,DWORD PTR ds:[rsi]
  4485e1:	outs   dx,BYTE PTR ds:[rsi]
  4485e2:	add    BYTE PTR [rax],al
  4485e4:	add    BYTE PTR [rbp+0x6e700004],dh
  4485ea:	add    BYTE PTR [rax],al
  4485ec:	js     0x44865c
  4485ee:	add    BYTE PTR [rax],al
  4485f0:	add    al,0xb5
  4485f2:	add    al,0x0
  4485f4:	sub    BYTE PTR [rsi+0x0],0x0
  4485f8:	mov    BYTE PTR [rsi+0x0],ch
  4485fb:	add    BYTE PTR [rax],cl
  4485fd:	mov    ch,0x4
  4485ff:	add    BYTE PTR [rax-0x51ffff92],dl
  448605:	outs   dx,BYTE PTR ds:[rsi]
  448606:	add    BYTE PTR [rax],al
  448608:	or     al,0xb5
  44860a:	add    al,0x0
  44860c:	mov    al,0x6e
  44860e:	add    BYTE PTR [rax],al
  448610:	mov    ah,0x6e
  448612:	add    BYTE PTR [rax],al
  448614:	adc    BYTE PTR [rbp+0x6ec00004],dh
  44861a:	add    BYTE PTR [rax],al
  44861c:	out    dx,al
  44861d:	outs   dx,BYTE PTR ds:[rsi]
  44861e:	add    BYTE PTR [rax],al
  448620:	adc    al,0xb5
  448622:	add    al,0x0
  448624:	lock outs dx,BYTE PTR ds:[rsi]
  448626:	add    BYTE PTR [rax],al
  448628:	adc    eax,0x1c00006f
  44862d:	mov    ch,0x4
  44862f:	add    BYTE PTR [rax],ah
  448631:	outs   dx,DWORD PTR ds:[rsi]
  448632:	add    BYTE PTR [rax],al
  448634:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  448636:	add    BYTE PTR [rax],al
  448638:	and    al,0xb5
  44863a:	add    al,0x0
  44863c:	push   rax
  44863d:	outs   dx,DWORD PTR ds:[rsi]
  44863e:	add    BYTE PTR [rax],al
  448640:	(bad)  
  448641:	jo     0x448643
  448643:	add    BYTE PTR [rsi*4+0x70a00004],ch
  44864a:	add    BYTE PTR [rax],al
  44864c:	push   rax
  44864d:	jno    0x44864f
  44864f:	add    BYTE PTR [rbp+rsi*4+0x4],al
  448653:	add    BYTE PTR [rax+0x71],dl
  448656:	add    BYTE PTR [rax],al
  448658:	test   al,0x72
  44865a:	add    BYTE PTR [rax],al
  44865c:	rex.WR mov bpl,0x4
  44865f:	add    BYTE PTR [rax+0x7000072],dh
  448665:	je     0x448667
  448667:	add    BYTE PTR [rbp+rsi*4+0x4],ah
  44866b:	add    BYTE PTR [rax],dl
  44866d:	je     0x44866f
  44866f:	add    BYTE PTR [rdi+0x75],al
  448672:	add    BYTE PTR [rax],al
  448674:	js     0x44862b
  448676:	add    al,0x0
  448678:	push   rax
  448679:	jne    0x44867b
  44867b:	add    BYTE PTR [rdi-0x77ffff8a],ah
  448681:	mov    ch,0x4
  448683:	add    BYTE PTR [rax+0x17000076],dh
  448689:	ja     0x44868b
  44868b:	add    BYTE PTR [rax+0x200004b5],bl
  448691:	ja     0x448693
  448693:	add    BYTE PTR [rcx-0x5fffff89],dl
  448699:	mov    ch,0x4
  44869b:	add    BYTE PTR [rax-0x58ffff89],ah
  4486a1:	js     0x4486a3
  4486a3:	add    BYTE PTR [rax-0x4ffffb4b],ch
  4486a9:	js     0x4486ab
  4486ab:	add    dl,dl
  4486ad:	jns    0x4486af
  4486af:	add    BYTE PTR [rbp+rsi*4+0x79e00004],bh
  4486b6:	add    BYTE PTR [rax],al
  4486b8:	outs   dx,DWORD PTR ds:[rsi]
  4486b9:	jl     0x4486bb
  4486bb:	add    ah,cl
  4486bd:	mov    ch,0x4
  4486bf:	add    BYTE PTR [rax+0x7c],dh
  4486c2:	add    BYTE PTR [rax],al
  4486c4:	jo     0x448745
  4486c6:	add    BYTE PTR [rax],al
  4486c8:	loopne 0x44867f
  4486ca:	add    al,0x0
  4486cc:	jo     0x44874d
  4486ce:	add    BYTE PTR [rax],al
  4486d0:	mov    WORD PTR [rax-0x4a080000],es
  4486d6:	add    al,0x0
  4486d8:	nop
  4486d9:	add    BYTE PTR [rax],0x0
  4486dc:	add    DWORD PTR cs:[rax],0x4b60800
  4486e3:	add    BYTE PTR [rax],dh
  4486e5:	add    DWORD PTR [rax],0x819000
  4486eb:	add    BYTE PTR [rax],bl
  4486ed:	mov    dh,0x4
  4486ef:	add    BYTE PTR [rax-0x1bffff7f],dl
  4486f5:	add    DWORD PTR [rax],0x4b62400
  4486fb:	add    al,dh
  4486fd:	add    DWORD PTR [rax],0x830f00
  448703:	add    BYTE PTR [rsi+rsi*4],ch
  448706:	add    al,0x0
  448708:	adc    BYTE PTR [rbx-0x78c40000],al
  44870e:	add    BYTE PTR [rax],al
  448710:	cmp    BYTE PTR [rsi-0x78bffffc],dh
  448716:	add    BYTE PTR [rax],al
  448718:	mov    eax,DWORD PTR [rdi-0x49b00000]
  44871e:	add    al,0x0
  448720:	nop
  448721:	xchg   DWORD PTR [rax],eax
  448723:	add    bl,bl
  448725:	xchg   DWORD PTR [rax],eax
  448727:	add    BYTE PTR [rax-0x4a],bl
  44872a:	add    al,0x0
  44872c:	loopne 0x4486b5
  44872e:	add    BYTE PTR [rax],al
  448730:	and    DWORD PTR [rax-0x49a00000],ecx
  448736:	add    al,0x0
  448738:	xor    BYTE PTR [rax-0x76680000],cl
  44873e:	add    BYTE PTR [rax],al
  448740:	push   0xffffffffa00004b6
  448745:	mov    DWORD PTR [rax],eax
  448747:	add    BYTE PTR [rax-0x43ffff75],al
  44874d:	mov    dh,0x4
  44874f:	add    BYTE PTR [rax-0x1dffff75],al
  448755:	mov    WORD PTR [rax],es
  448757:	add    al,cl
  448759:	mov    dh,0x4
  44875b:	add    al,dh
  44875d:	mov    WORD PTR [rax],es
  44875f:	add    BYTE PTR [rdi],al
  448761:	stos   DWORD PTR es:[rdi],eax
  448762:	add    BYTE PTR [rax],al
  448764:	fdiv   QWORD PTR [rsi-0x54effffc]
  44876a:	add    BYTE PTR [rax],al
  44876c:	adc    BYTE PTR [rbp-0x490c0000],ch
  448772:	add    al,0x0
  448774:	adc    BYTE PTR [rbp-0x52150000],ch
  44877a:	add    BYTE PTR [rax],al
  44877c:	or     BYTE PTR [rdi-0x520ffffc],dh
  448782:	add    BYTE PTR [rax],al
  448784:	push   0xffffffffffffffae
  448786:	add    BYTE PTR [rax],al
  448788:	sbb    BYTE PTR [rdi-0x518ffffc],dh
  44878e:	add    BYTE PTR [rax],al
  448790:	or     BYTE PTR [rdi-0x48dc0000],ch
  448796:	add    al,0x0
  448798:	adc    BYTE PTR [rdi-0x50a20000],ch
  44879e:	add    BYTE PTR [rax],al
  4487a0:	sub    al,0xb7
  4487a2:	add    al,0x0
  4487a4:	(bad)  
  4487a5:	scas   eax,DWORD PTR es:[rdi]
  4487a6:	add    BYTE PTR [rax],al
  4487a8:	movabs ds:0xb00004b7340000af,eax
  4487b1:	scas   eax,DWORD PTR es:[rdi]
  4487b2:	add    BYTE PTR [rax],al
  4487b4:	ds mov al,0x0
  4487b7:	add    BYTE PTR [rdi+rsi*4],bh
  4487ba:	add    al,0x0
  4487bc:	mov    al,0x0
  4487bf:	add    BYTE PTR [rdx+0x440000b0],ch
  4487c5:	mov    bh,0x4
  4487c7:	add    BYTE PTR [rax+0x6c0000b0],dh
  4487cd:	mov    cl,0x0
  4487cf:	add    BYTE PTR [rax-0x49],dl
  4487d2:	add    al,0x0
  4487d4:	jo     0x448787
  4487d6:	add    BYTE PTR [rax],al
  4487d8:	icebp  
  4487d9:	mov    cl,0x0
  4487db:	add    BYTE PTR [rax-0x49],ah
  4487de:	add    al,0x0
  4487e0:	add    BYTE PTR [rdx-0x4d9c0000],dh
  4487e6:	add    BYTE PTR [rax],al
  4487e8:	ins    BYTE PTR es:[rdi],dx
  4487e9:	mov    bh,0x4
  4487eb:	add    BYTE PTR [rax-0x4e],dh
  4487ee:	add    BYTE PTR [rax],al
  4487f0:	fwait
  4487f1:	mov    dl,0x0
  4487f3:	add    BYTE PTR [rdi+rsi*4+0x4],dh
  4487f7:	add    BYTE PTR [rax-0x10ffff4e],ah
  4487fd:	mov    dl,0x0
  4487ff:	add    BYTE PTR [rdi+rsi*4+0x4],bh
  448803:	add    al,dh
  448805:	mov    dl,0x0
  448807:	add    BYTE PTR [rbp-0x4d],ch
  44880a:	add    BYTE PTR [rax],al
  44880c:	test   BYTE PTR [rdi-0x4c8ffffc],dh
  448812:	add    BYTE PTR [rax],al
  448814:	nop
  448815:	mov    bl,0x0
  448817:	add    BYTE PTR [rax-0x6ffffb49],dl
  44881d:	mov    bl,0x0
  44881f:	add    BYTE PTR [rdx-0x67ffff44],bh
  448825:	mov    bh,0x4
  448827:	add    al,al
  448829:	mov    esp,0xd7990000
  44882e:	add    BYTE PTR [rax],al
  448830:	mov    al,0xb7
  448832:	add    al,0x0
  448834:	movabs al,ds:0xc80000da3c0000d7
  44883d:	mov    bh,0x4
  44883f:	add    BYTE PTR [rax-0x26],al
  448842:	add    BYTE PTR [rax],al
  448844:	js     0x448820
  448846:	add    BYTE PTR [rax],al
  448848:	mov    BYTE PTR [rax-0x257ffffc],bh
  44884e:	add    BYTE PTR [rax],al
  448850:	iret   
  448851:	fiadd  DWORD PTR [rax]
  448853:	add    BYTE PTR [rax+rdi*4-0x252ffffc],cl
  44885a:	add    BYTE PTR [rax],al
  44885c:	hlt    
  44885d:	fiadd  DWORD PTR [rax]
  44885f:	add    BYTE PTR [rax+rdi*4-0x24fffffc],dl
  448866:	add    BYTE PTR [rax],al
  448868:	xor    bl,bl
  44886a:	add    BYTE PTR [rax],al
  44886c:	cwde   
  44886d:	mov    eax,0xdb400004
  448872:	add    BYTE PTR [rax],al
  448874:	(bad)  
  448875:	fild   DWORD PTR [rax]
  448877:	add    BYTE PTR [rax+rdi*4-0x245ffffc],bl
  44887e:	add    BYTE PTR [rax],al
  448880:	loop   0x44885d
  448882:	add    BYTE PTR [rax],al
  448884:	test   al,0xb8
  448886:	add    al,0x0
  448888:	lock fild DWORD PTR [rax]
  44888b:	add    BYTE PTR [rdi],al
  44888d:	fadd   QWORD PTR [rax]
  44888f:	add    BYTE PTR [rax+rdi*4-0x23effffc],ch
  448896:	add    BYTE PTR [rax],al
  448898:	jl     0x448876
  44889a:	add    BYTE PTR [rax],al
  44889c:	mov    ah,0xb8
  44889e:	add    al,0x0
  4488a0:	sbb    ah,0x0
  4488a3:	add    BYTE PTR [rax-0x23],ch
  4488a6:	add    BYTE PTR [rax],al
  4488a8:	sar    BYTE PTR [rax-0x228ffffc],0x0
  4488af:	add    BYTE PTR [rax-0x2fffff23],bh
  4488b5:	mov    eax,0xddc00004
  4488ba:	add    BYTE PTR [rax],al
  4488bc:	adc    eax,0xd80000de
  4488c1:	mov    eax,0xde200004
  4488c6:	add    BYTE PTR [rax],al
  4488c8:	loop   0x4488a8
  4488ca:	add    BYTE PTR [rax],al
  4488cc:	loopne 0x448886
  4488ce:	add    al,0x0
  4488d0:	lock fiadd WORD PTR [rax]
  4488d3:	add    BYTE PTR [rsi],ah
  4488d5:	fild   WORD PTR [rax]
  4488d7:	add    al,ch
  4488d9:	mov    eax,0xdf300004
  4488de:	add    BYTE PTR [rax],al
  4488e0:	xor    bl,bh
  4488e2:	add    BYTE PTR [rax],al
  4488e4:	clc    
  4488e5:	mov    eax,0xdf400004
  4488ea:	add    BYTE PTR [rax],al
  4488ec:	rex.W fild WORD PTR [rax]
  4488ef:	add    ah,bh
  4488f1:	mov    eax,0xdf500004
  4488f6:	add    BYTE PTR [rax],al
  4488f8:	(bad)  
  4488fa:	add    BYTE PTR [rax],al
  4488fc:	add    BYTE PTR [rcx-0x201ffffc],bh
  448902:	add    BYTE PTR [rax],al
  448904:	in     eax,0xdf
  448906:	add    BYTE PTR [rax],al
  448908:	adc    BYTE PTR [rcx-0x200ffffc],bh
  44890e:	add    BYTE PTR [rax],al
  448910:	shl    eax,cl
  448912:	add    BYTE PTR [rax],al
  448914:	adc    al,0xb9
  448916:	add    al,0x0
  448918:	loopne 0x4488fa
  44891a:	add    BYTE PTR [rax],al
  44891c:	ins    DWORD PTR es:[rdi],dx
  44891d:	loope  0x44891f
  44891f:	add    BYTE PTR [rcx+rdi*4],ah
  448922:	add    al,0x0
  448924:	jo     0x448907
  448926:	add    BYTE PTR [rax],al
  448928:	lods   eax,DWORD PTR ds:[rsi]
  448929:	loope  0x44892b
  44892b:	add    BYTE PTR [rcx+rdi*4],dh
  44892e:	add    al,0x0
  448930:	mov    al,0xe1
  448932:	add    BYTE PTR [rax],al
  448934:	(bad)  
  448936:	add    BYTE PTR [rax],al
  448938:	cmp    al,0xb9
  44893a:	add    al,0x0
  44893c:	loopne 0x44891f
  44893e:	add    BYTE PTR [rax],al
  448940:	xor    dl,ah
  448942:	add    BYTE PTR [rax],al
  448944:	rex mov ecx,0xe2300004
  44894a:	add    BYTE PTR [rax],al
  44894c:	(bad)  
  44894d:	in     al,0x0
  44894f:	add    BYTE PTR [rcx+rdi*4+0x4],cl
  448953:	add    BYTE PTR [rax],ah
  448955:	in     al,0x0
  448957:	add    BYTE PTR [rcx-0x1c],al
  44895a:	add    BYTE PTR [rax],al
  44895c:	pop    rax
  44895d:	mov    ecx,0xe4500004
  448962:	add    BYTE PTR [rax],al
  448964:	push   rsi
  448965:	in     al,0x0
  448967:	add    BYTE PTR [rax-0x47],ah
  44896a:	add    al,0x0
  44896c:	(bad)  
  44896d:	in     al,0x0
  44896f:	add    BYTE PTR [rbp+0x640000e4],bh
  448975:	mov    ecx,0xe4c00004
  44897a:	add    BYTE PTR [rax],al
  44897c:	mul    esi
  44897e:	add    BYTE PTR [rax],al
  448980:	ins    BYTE PTR es:[rdi],dx
  448981:	mov    ecx,0xe7000004
  448986:	add    BYTE PTR [rax],al
  448988:	sub    esp,edi
  44898a:	add    BYTE PTR [rax],al
  44898c:	je     0x448947
  44898e:	add    al,0x0
  448990:	xor    bh,ah
  448992:	add    BYTE PTR [rax],al
  448994:	push   rsi
  448995:	out    0x0,eax
  448997:	add    BYTE PTR [rcx+rdi*4+0x4],bh
  44899b:	add    BYTE PTR [rax-0x19],ah
  44899e:	add    BYTE PTR [rax],al
  4489a0:	icebp  
  4489a1:	out    0x0,eax
  4489a3:	add    BYTE PTR [rcx+rdi*4-0x17fffffc],al
  4489aa:	add    BYTE PTR [rax],al
  4489ac:	adc    eax,0x980000e8
  4489b1:	mov    ecx,0xe8200004
  4489b6:	add    BYTE PTR [rax],al
  4489b8:	jo     0x4489a2
  4489ba:	add    BYTE PTR [rax],al
  4489bc:	movabs al,ds:0xd30000e8700004b9
  4489c5:	call   0xffffffffb9f089ca
  4489ca:	add    al,0x0
  4489cc:	loopne 0x4489b6
  4489ce:	add    BYTE PTR [rax],al
  4489d0:	rex.X jmp 0xffffffffba0089d6
  4489d6:	add    al,0x0
  4489d8:	push   rax
  4489d9:	jmp    0xffffffffe99e89de
  4489de:	add    BYTE PTR [rax],al
  4489e0:	int3   
  4489e1:	mov    ecx,0xe9600004
  4489e6:	add    BYTE PTR [rax],al
  4489e8:	push   0xffffffffffffffe9
  4489ea:	add    BYTE PTR [rax],al
  4489ec:	sar    BYTE PTR [rcx-0x168ffffc],1
  4489f2:	add    BYTE PTR [rax],al
  4489f4:	add    al,0xea
  4489f6:	add    BYTE PTR [rax],al
  4489f8:	(bad)  
  4489f9:	mov    ecx,0xea100004
  4489fe:	add    BYTE PTR [rax],al
  448a00:	(bad)  
  448a01:	(bad)  
  448a02:	add    BYTE PTR [rax],al
  448a04:	in     al,0xb9
  448a06:	add    al,0x0
  448a08:	xor    dl,ch
  448a0a:	add    BYTE PTR [rax],al
  448a0c:	rex.RX (bad) 
  448a0e:	add    BYTE PTR [rax],al
  448a10:	in     al,dx
  448a11:	mov    ecx,0xea500004
  448a16:	add    BYTE PTR [rax],al
  448a18:	data16 (bad) 
  448a1a:	add    BYTE PTR [rax],al
  448a1c:	lock mov ecx,0xea700004
  448a22:	add    BYTE PTR [rax],al
  448a24:	(bad)  
  448a25:	jmp    0x448a27
  448a27:	add    ah,dh
  448a29:	mov    ecx,0xeb700004
  448a2e:	add    BYTE PTR [rax],al
  448a30:	sub    ebx,0xba000000
  448a36:	add    al,0x0
  448a38:	nop
  448a39:	jmp    0x448a3b
  448a3b:	add    BYTE PTR [rcx+0x40000ec],cl
  448a41:	mov    edx,0xec900004
  448a46:	add    BYTE PTR [rax],al
  448a48:	(bad)  
  448a49:	in     al,dx
  448a4a:	add    BYTE PTR [rax],al
  448a4c:	sbb    BYTE PTR [rdx-0x130ffffc],bh
  448a52:	add    BYTE PTR [rax],al
  448a54:	sbb    ebp,ebp
  448a56:	add    BYTE PTR [rax],al
  448a58:	and    al,0xba
  448a5a:	add    al,0x0
  448a5c:	and    ch,ch
  448a5e:	add    BYTE PTR [rax],al
  448a60:	sub    ebp,ebp
  448a62:	add    BYTE PTR [rax],al
  448a64:	sub    al,0xba
  448a66:	add    al,0x0
  448a68:	xor    ch,ch
  448a6a:	add    BYTE PTR [rax],al
  448a6c:	pop    rdx
  448a6d:	in     eax,dx
  448a6e:	add    BYTE PTR [rax],al
  448a70:	xor    BYTE PTR [rdx-0x129ffffc],bh
  448a76:	add    BYTE PTR [rax],al
  448a78:	stos   DWORD PTR es:[rdi],eax
  448a79:	in     eax,dx
  448a7a:	add    BYTE PTR [rax],al
  448a7c:	cmp    BYTE PTR [rdx-0x124ffffc],bh
  448a82:	add    BYTE PTR [rax],al
  448a84:	call   0x40448b76
  448a89:	mov    edx,0xedf00004
  448a8e:	add    BYTE PTR [rax],al
  448a90:	repz out dx,al
  448a92:	add    BYTE PTR [rax],al
  448a94:	movabs rdx,0xef650000ef000004
  448a9e:	add    BYTE PTR [rax],al
  448aa0:	pop    rax
  448aa1:	mov    edx,0xef700004
  448aa6:	add    BYTE PTR [rax],al
  448aa8:	mov    bh,0xef
  448aaa:	add    BYTE PTR [rax],al
  448aac:	(bad)  
  448aad:	mov    edx,0xefc00004
  448ab2:	add    BYTE PTR [rax],al
  448ab4:	jp     0x448aa8
  448ab6:	add    BYTE PTR [rax],al
  448ab8:	ins    BYTE PTR es:[rdi],dx
  448ab9:	mov    edx,0xf2800004
  448abe:	add    BYTE PTR [rax],al
  448ac0:	fdivrp st(2),st
  448ac2:	add    BYTE PTR [rax],al
  448ac4:	test   BYTE PTR [rdx-0xd1ffffc],bh
  448aca:	add    BYTE PTR [rax],al
  448acc:	cmp    ah,dh
  448ace:	add    BYTE PTR [rax],al
  448ad0:	nop
  448ad1:	mov    edx,0xf4400004
  448ad6:	add    BYTE PTR [rax],al
  448ad8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  448ad9:	hlt    
  448ada:	add    BYTE PTR [rax],al
  448adc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  448add:	mov    edx,0xf4b00004
  448ae2:	add    BYTE PTR [rax],al
  448ae4:	mov    dh,ch
  448ae6:	add    BYTE PTR [rax],al
  448ae8:	mov    al,0xba
  448aea:	add    al,0x0
  448aec:	nop
  448aed:	cmc    
  448aee:	add    BYTE PTR [rax],al
  448af0:	cmp    eax,0xbc0000f6
  448af5:	mov    edx,0xf6400004
  448afa:	add    BYTE PTR [rax],al
  448afc:	mov    esi,0xc80000f6
  448b01:	mov    edx,0xf6c00004
  448b06:	add    BYTE PTR [rax],al
  448b08:	pop    rbp
  448b09:	test   DWORD PTR [rax],0x4bad800
  448b0f:	add    BYTE PTR [rax-0x9],ah
  448b12:	add    BYTE PTR [rax],al
  448b14:	shl    bh,1
  448b16:	add    BYTE PTR [rax],al
  448b18:	loopne 0x448ad4
  448b1a:	add    al,0x0
  448b1c:	shl    bh,1
  448b1e:	add    BYTE PTR [rax],al
  448b20:	push   rax
  448b21:	clc    
  448b22:	add    BYTE PTR [rax],al
  448b24:	in     al,dx
  448b25:	mov    edx,0xf8500004
  448b2a:	add    BYTE PTR [rax],al
  448b2c:	(bad)  
  448b2d:	clc    
  448b2e:	add    BYTE PTR [rax],al
  448b30:	clc    
  448b31:	mov    edx,0xf8900004
  448b36:	add    BYTE PTR [rax],al
  448b38:	int    0xf8
  448b3a:	add    BYTE PTR [rax],al
  448b3c:	add    al,0xbb
  448b3e:	add    al,0x0
  448b40:	sar    al,1
  448b42:	add    BYTE PTR [rax],al
  448b44:	sub    al,0xf9
  448b46:	add    BYTE PTR [rax],al
  448b48:	adc    BYTE PTR [rbx-0x6cffffc],bh
  448b4e:	add    BYTE PTR [rax],al
  448b50:	int3   
  448b51:	stc    
  448b52:	add    BYTE PTR [rax],al
  448b54:	sbb    BYTE PTR [rbx-0x62ffffc],bh
  448b5a:	add    BYTE PTR [rax],al
  448b5c:	(bad)  
  448b5d:	cli    
  448b5e:	add    BYTE PTR [rax],al
  448b60:	and    BYTE PTR [rbx-0x5dffffc],bh
  448b66:	add    BYTE PTR [rax],al
  448b68:	outs   dx,DWORD PTR ds:[rsi]
  448b69:	sti    
  448b6a:	add    BYTE PTR [rax],al
  448b6c:	sub    BYTE PTR [rbx-0x48ffffc],bh
  448b72:	add    BYTE PTR [rax],al
  448b74:	(bad)  
  448b75:	cld    
  448b76:	add    BYTE PTR [rax],al
  448b78:	cmp    BYTE PTR [rbx-0x3cffffc],bh
  448b7e:	add    BYTE PTR [rax],al
  448b80:	rex.RXB cld 
  448b82:	add    BYTE PTR [rax],al
  448b84:	rex.R mov ebx,0xfc500004
  448b8a:	add    BYTE PTR [rax],al
  448b8c:	(bad)  
  448b8d:	std    
  448b8e:	add    BYTE PTR [rax],al
  448b90:	rex.WR movabs rbx,0xfd650000fd600004
  448b9a:	add    BYTE PTR [rax],al
  448b9c:	(bad)  
  448b9d:	mov    ebx,0xfd700004
  448ba2:	add    BYTE PTR [rax],al
  448ba4:	enter  0xfe,0x0
  448ba8:	fs mov ebx,0xfed00004
  448bae:	add    BYTE PTR [rax],al
  448bb0:	scas   eax,DWORD PTR es:[rdi]
  448bb1:	inc    DWORD PTR [rax]
  448bb3:	add    BYTE PTR [rax-0x45],bh
  448bb6:	add    al,0x0
  448bb8:	mov    al,0xff
  448bba:	add    BYTE PTR [rax],al
  448bbc:	xchg   ebp,eax
  448bbd:	add    BYTE PTR [rcx],al
  448bbf:	add    BYTE PTR [rax-0x5ffffb45],cl
  448bc5:	add    BYTE PTR [rcx],al
  448bc7:	add    BYTE PTR [rax-0x67ffff00],dh
  448bcd:	mov    ebx,0xb00004
  448bd2:	add    DWORD PTR [rax],eax
  448bd4:	int    0x0
  448bd6:	add    DWORD PTR [rax],eax
  448bd8:	pushf  
  448bd9:	mov    ebx,0xd00004
  448bde:	add    DWORD PTR [rax],eax
  448be0:	rol    DWORD PTR [rcx],0x1
  448be3:	add    BYTE PTR [rbx+rdi*4+0x1d00004],ah
  448bea:	add    DWORD PTR [rax],eax
  448bec:	out    dx,eax
  448bed:	add    DWORD PTR [rcx],eax
  448bef:	add    BYTE PTR [rbx+rdi*4+0x1f00004],dh
  448bf6:	add    DWORD PTR [rax],eax
  448bf8:	ins    DWORD PTR es:[rdi],dx
  448bf9:	add    al,BYTE PTR [rcx]
  448bfb:	add    BYTE PTR [rbx+rdi*4+0x2700004],bh
  448c02:	add    DWORD PTR [rax],eax
  448c04:	scas   al,BYTE PTR es:[rdi]
  448c05:	add    al,BYTE PTR [rcx]
  448c07:	add    ah,cl
  448c09:	mov    ebx,0x2b00004
  448c0e:	add    DWORD PTR [rax],eax
  448c10:	cmp    BYTE PTR [rbx],al
  448c12:	add    DWORD PTR [rax],eax
  448c14:	(bad)  
  448c15:	mov    ebx,0x3400004
  448c1a:	add    DWORD PTR [rax],eax
  448c1c:	je     0x448c21
  448c1e:	add    DWORD PTR [rax],eax
  448c20:	in     al,0xbb
  448c22:	add    al,0x0
  448c24:	add    BYTE PTR [rbx],0x1
  448c27:	add    BYTE PTR [rdx-0x13fffefd],dh
  448c2d:	mov    ebx,0x3c00004
  448c32:	add    DWORD PTR [rax],eax
  448c34:	(bad)  
  448c35:	add    al,0x1
  448c37:	add    ah,dh
  448c39:	mov    ebx,0x4200004
  448c3e:	add    DWORD PTR [rax],eax
  448c40:	ret    
  448c41:	add    al,0x1
  448c43:	add    ah,bh
  448c45:	mov    ebx,0x4d00004
  448c4a:	add    DWORD PTR [rax],eax
  448c4c:	test   DWORD PTR [rip+0xffffffffbc0c0001],eax        # 0xffffffffbc508c53
  448c52:	add    al,0x0
  448c54:	nop
  448c55:	add    eax,0x61e0001
  448c5a:	add    DWORD PTR [rax],eax
  448c5c:	and    al,0xbc
  448c5e:	add    al,0x0
  448c60:	and    BYTE PTR [rsi],al
  448c62:	add    DWORD PTR [rax],eax
  448c64:	data16 (bad) 
  448c66:	add    DWORD PTR [rax],eax
  448c68:	xor    BYTE PTR [rsp+rax*1+0x1067000],bh
  448c6f:	add    BYTE PTR [rdi+rax*1],bh
  448c72:	add    DWORD PTR [rax],eax
  448c74:	cmp    BYTE PTR [rsp+rax*1+0x1074000],bh
  448c7b:	add    dh,cl
  448c7d:	(bad)  
  448c7e:	add    DWORD PTR [rax],eax
  448c80:	rex.WR movabs rsp,0x84b000107d00004
  448c8a:	add    DWORD PTR [rax],eax
  448c8c:	pop    rax
  448c8d:	mov    esp,0x8500004
  448c92:	add    DWORD PTR [rax],eax
  448c94:	xchg   esi,eax
  448c95:	or     BYTE PTR [rcx],al
  448c97:	add    BYTE PTR [rax-0x44],ch
  448c9a:	add    al,0x0
  448c9c:	movabs al,ds:0x7000010949000108
  448ca5:	mov    esp,0x9500004
  448caa:	add    DWORD PTR [rax],eax
  448cac:	loopne 0x448cb7
  448cae:	add    DWORD PTR [rax],eax
  448cb0:	cmp    BYTE PTR [rsp+rax*1+0x109e000],0x0
  448cb8:	and    ecx,DWORD PTR [rdx]
  448cba:	add    DWORD PTR [rax],eax
  448cbc:	nop
  448cbd:	mov    esp,0xa300004
  448cc2:	add    DWORD PTR [rax],eax
  448cc4:	jp     0x448cd0
  448cc6:	add    DWORD PTR [rax],eax
  448cc8:	cwde   
  448cc9:	mov    esp,0xa800004
  448cce:	add    DWORD PTR [rax],eax
  448cd0:	retf   
  448cd1:	or     al,BYTE PTR [rcx]
  448cd3:	add    BYTE PTR [rax-0x2ffffb44],ah
  448cd9:	or     al,BYTE PTR [rcx]
  448cdb:	add    BYTE PTR [rdx],bl
  448cdd:	or     eax,DWORD PTR [rcx]
  448cdf:	add    BYTE PTR [rax+0x200004bc],ch
  448ce5:	or     eax,DWORD PTR [rcx]
  448ce7:	add    BYTE PTR [rsi+0xb],ch
  448cea:	add    DWORD PTR [rax],eax
  448cec:	mov    al,0xbc
  448cee:	add    al,0x0
  448cf0:	jo     0x448cfd
  448cf2:	add    DWORD PTR [rax],eax
  448cf4:	lods   al,BYTE PTR ds:[rsi]
  448cf5:	or     eax,DWORD PTR [rcx]
  448cf7:	add    BYTE PTR [rax-0x4ffffb44],bh
  448cfd:	or     eax,DWORD PTR [rcx]
  448cff:	add    ah,dh
  448d01:	or     al,0x1
  448d03:	add    al,al
  448d05:	mov    esp,0xd000004
  448d0a:	add    DWORD PTR [rax],eax
  448d0c:	or     ecx,DWORD PTR [rdi]
  448d0e:	add    DWORD PTR [rax],eax
  448d10:	(bad)  
  448d11:	mov    esp,0xf100004
  448d16:	add    DWORD PTR [rax],eax
  448d18:	or     BYTE PTR [rdx],dl
  448d1a:	add    DWORD PTR [rax],eax
  448d1c:	in     al,dx
  448d1d:	mov    esp,0x12100004
  448d22:	add    DWORD PTR [rax],eax
  448d24:	rex.RXB adc r8b,BYTE PTR [r9]
  448d27:	add    BYTE PTR [rdi*4+0x12500004],al
  448d2e:	add    DWORD PTR [rax],eax
  448d30:	jno    0x448d44
  448d32:	add    DWORD PTR [rax],eax
  448d34:	or     al,0xbd
  448d36:	add    al,0x0
  448d38:	adc    BYTE PTR [rdx],0x1
  448d3b:	add    bh,al
  448d3d:	adc    al,BYTE PTR [rcx]
  448d3f:	add    BYTE PTR [rax],dl
  448d41:	mov    ebp,0x12d00004
  448d46:	add    DWORD PTR [rax],eax
  448d48:	cs adc eax,0xbd180001
  448d4e:	add    al,0x0
  448d50:	xor    BYTE PTR [rip+0x16060001],dl        # 0x164a8d57
  448d56:	add    DWORD PTR [rax],eax
  448d58:	cmp    BYTE PTR [rbp+0x16100004],bh
  448d5e:	add    DWORD PTR [rax],eax
  448d60:	xchg   esi,eax
  448d61:	(bad)  
  448d62:	add    DWORD PTR [rax],eax
  448d64:	rex mov ebp,0x16a00004
  448d6a:	add    DWORD PTR [rax],eax
  448d6c:	sub    BYTE PTR [rax],bl
  448d6e:	add    DWORD PTR [rax],eax
  448d70:	rex.R mov ebp,0x18300004
  448d76:	add    DWORD PTR [rax],eax
  448d78:	cld    
  448d79:	sbb    BYTE PTR [rcx],al
  448d7b:	add    BYTE PTR [rbp+rdi*4+0x4],dl
  448d7f:	add    BYTE PTR [rax],al
  448d81:	sbb    DWORD PTR [rcx],eax
  448d83:	add    dl,al
  448d85:	sbb    DWORD PTR [rcx],eax
  448d87:	add    BYTE PTR [rax-0x43],ah
  448d8a:	add    al,0x0
  448d8c:	rcr    BYTE PTR [rcx],1
  448d8e:	add    DWORD PTR [rax],eax
  448d90:	fcomp  DWORD PTR [rdx]
  448d92:	add    DWORD PTR [rax],eax
  448d94:	jo     0x448d53
  448d96:	add    al,0x0
  448d98:	loopne 0x448db4
  448d9a:	add    DWORD PTR [rax],eax
  448d9c:	jmp    0x448db8
  448d9e:	add    DWORD PTR [rax],eax
  448da0:	cmp    BYTE PTR [rbp+0x1af00004],0x1
  448da7:	add    BYTE PTR [rax+0x21],cl
  448daa:	add    DWORD PTR [rax],eax
  448dac:	test   BYTE PTR [rbp+0x21500004],bh
  448db2:	add    DWORD PTR [rax],eax
  448db4:	push   rbp
  448db5:	and    DWORD PTR [rcx],eax
  448db7:	add    BYTE PTR [rax+0x600004bd],bl
  448dbd:	and    DWORD PTR [rcx],eax
  448dbf:	add    cl,dh
  448dc1:	and    DWORD PTR [rcx],eax
  448dc3:	add    BYTE PTR [rbp+rdi*4+0x22000004],bl
  448dca:	add    DWORD PTR [rax],eax
  448dcc:	jp     0x448df0
  448dce:	add    DWORD PTR [rax],eax
  448dd0:	test   al,0xbd
  448dd2:	add    al,0x0
  448dd4:	and    BYTE PTR [rdx],0x1
  448dd7:	add    BYTE PTR [rax],bl
  448dd9:	and    eax,DWORD PTR [rcx]
  448ddb:	add    BYTE PTR [rbp+rdi*4+0x23200004],dh
  448de2:	add    DWORD PTR [rax],eax
  448de4:	outs   dx,BYTE PTR ds:[rsi]
  448de5:	and    eax,DWORD PTR [rcx]
  448de7:	add    BYTE PTR [rbp+rdi*4+0x23700004],bh
  448dee:	add    DWORD PTR [rax],eax
  448df0:	lea    esp,[rbx]
  448df2:	add    DWORD PTR [rax],eax
  448df4:	(bad)  
  448df5:	mov    ebp,0x23900004
  448dfa:	add    DWORD PTR [rax],eax
  448dfc:	(bad)  
  448dfd:	and    al,0x1
  448dff:	add    ah,cl
  448e01:	mov    ebp,0x24200004
  448e06:	add    DWORD PTR [rax],eax
  448e08:	fsub   QWORD PTR [rcx+rax*1]
  448e0b:	add    ah,dl
  448e0d:	mov    ebp,0x24e00004
  448e12:	add    DWORD PTR [rax],eax
  448e14:	or     esp,DWORD PTR [rip+0xffffffffbde40001]        # 0xffffffffbe288e1b
  448e1a:	add    al,0x0
  448e1c:	adc    BYTE PTR [rip+0x255f0001],ah        # 0x25a38e23
  448e22:	add    DWORD PTR [rax],eax
  448e24:	in     al,dx
  448e25:	mov    ebp,0x25600004
  448e2a:	add    DWORD PTR [rax],eax
  448e2c:	frstor [rip+0xffffffffbdf40001]        # 0xffffffffbe388e33
  448e32:	add    al,0x0
  448e34:	loopne 0x448e5b
  448e36:	add    DWORD PTR [rax],eax
  448e38:	adc    al,0x26
  448e3a:	add    DWORD PTR [rax],eax
  448e3c:	add    BYTE PTR [rsi+0x26200004],bh
  448e42:	add    DWORD PTR [rax],eax
  448e44:	mov    WORD PTR [rsi],fs
  448e46:	add    DWORD PTR [rax],eax
  448e48:	or     BYTE PTR [rsi+0x26900004],bh
  448e4e:	add    DWORD PTR [rax],eax
  448e50:	out    dx,eax
  448e51:	add    DWORD PTR es:[rax],eax
  448e54:	adc    al,0xbe
  448e56:	add    al,0x0
  448e58:	lock add DWORD PTR es:[rax],eax
  448e5c:	test   eax,0x18000128
  448e61:	mov    esi,0x28b00004
  448e66:	add    DWORD PTR [rax],eax
  448e68:	push   rsp
  448e69:	sub    eax,DWORD PTR [rcx]
  448e6b:	add    BYTE PTR [rax],ch
  448e6d:	mov    esi,0x2b600004
  448e72:	add    DWORD PTR [rax],eax
  448e74:	gs sub eax,0xbe380001
  448e7a:	add    al,0x0
  448e7c:	jo     0x448eab
  448e7e:	add    DWORD PTR [rax],eax
  448e80:	(bad)  
  448e81:	sub    eax,0xbe500001
  448e86:	add    al,0x0
  448e88:	shr    BYTE PTR [rip+0x2dd90001],1        # 0x2e1d8e8f
  448e8e:	add    DWORD PTR [rax],eax
  448e90:	pop    rax
  448e91:	mov    esi,0x2de00004
  448e96:	add    DWORD PTR [rax],eax
  448e98:	cmp    al,0x31
  448e9a:	add    DWORD PTR [rax],eax
  448e9c:	pop    rsp
  448e9d:	mov    esi,0x31400004
  448ea2:	add    DWORD PTR [rax],eax
  448ea4:	cdq    
  448ea5:	xor    DWORD PTR [rcx],eax
  448ea7:	add    BYTE PTR [rsi+rdi*4+0x4],ch
  448eab:	add    BYTE PTR [rax+0x3000131],ah
  448eb1:	xor    al,BYTE PTR [rcx]
  448eb3:	add    BYTE PTR [rax-0x42],bh
  448eb6:	add    al,0x0
  448eb8:	adc    BYTE PTR [rdx],dh
  448eba:	add    DWORD PTR [rax],eax
  448ebc:	rex.WB xor al,BYTE PTR [r9]
  448ebf:	add    BYTE PTR [rsi+rdi*4+0x32500004],al
  448ec6:	add    DWORD PTR [rax],eax
  448ec8:	jg     0x448efc
  448eca:	add    DWORD PTR [rax],eax
  448ecc:	mov    WORD PTR [rsi+0x32800004],?
  448ed2:	add    DWORD PTR [rax],eax
  448ed4:	sub    al,0x33
  448ed6:	add    DWORD PTR [rax],eax
  448ed8:	xchg   esp,eax
  448ed9:	mov    esi,0x33300004
  448ede:	add    DWORD PTR [rax],eax
  448ee0:	pop    rdi
  448ee1:	xor    eax,DWORD PTR [rcx]
  448ee3:	add    BYTE PTR [rsi+rdi*4+0x33600004],ah
  448eea:	add    DWORD PTR [rax],eax
  448eec:	repnz xor eax,DWORD PTR [rcx]
  448eef:	add    BYTE PTR [rsi+rdi*4+0x34000004],ch
  448ef6:	add    DWORD PTR [rax],eax
  448ef8:	jp     0x448f2e
  448efa:	add    DWORD PTR [rax],eax
  448efc:	mov    ah,0xbe
  448efe:	add    al,0x0
  448f00:	xor    BYTE PTR [rcx+rax*1],0x0
  448f04:	in     eax,dx
  448f05:	xor    al,0x1
  448f07:	add    BYTE PTR [rsi+rdi*4+0x34f00004],bh
  448f0e:	add    DWORD PTR [rax],eax
  448f10:	xor    DWORD PTR [rdi],esi
  448f12:	add    DWORD PTR [rax],eax
  448f14:	sar    BYTE PTR [rsi+0x37400004],0x1
  448f1b:	add    BYTE PTR [rax+0x37],dh
  448f1e:	add    DWORD PTR [rax],eax
  448f20:	sar    BYTE PTR [rsi+0x37700004],1
  448f26:	add    DWORD PTR [rax],eax
  448f28:	movabs al,ds:0xa00004bed8000137
  448f31:	(bad)  
  448f32:	add    DWORD PTR [rax],eax
  448f34:	xor    BYTE PTR [rax],bh
  448f36:	add    DWORD PTR [rax],eax
  448f38:	loopne 0x448ef8
  448f3a:	add    al,0x0
  448f3c:	xor    BYTE PTR [rax],bh
  448f3e:	add    DWORD PTR [rax],eax
  448f40:	push   0xfffffffff0000138
  448f45:	mov    esi,0x38700004
  448f4a:	add    DWORD PTR [rax],eax
  448f4c:	sar    DWORD PTR [rax],cl
  448f4e:	add    DWORD PTR [rax],eax
  448f50:	clc    
  448f51:	mov    esi,0x38e00004
  448f56:	add    DWORD PTR [rax],eax
  448f58:	pop    rsi
  448f59:	cmp    DWORD PTR [rcx],eax
  448f5b:	add    BYTE PTR [rax],al
  448f5d:	mov    edi,0x39600004
  448f62:	add    DWORD PTR [rax],eax
  448f64:	(bad)  
  448f65:	cmp    DWORD PTR [rcx],eax
  448f67:	add    BYTE PTR [rax],cl
  448f69:	mov    edi,0x39d00004
  448f6e:	add    DWORD PTR [rax],eax
  448f70:	add    BYTE PTR [rip+0xffffffffbf140001],bh        # 0xffffffffbf588f77
  448f76:	add    al,0x0
  448f78:	add    BYTE PTR [rip+0x3d760001],bh        # 0x3dba8f7f
  448f7e:	add    DWORD PTR [rax],eax
  448f80:	sub    al,0xbf
  448f82:	add    al,0x0
  448f84:	cmp    BYTE PTR [rip+0x3f610001],0x1        # 0x3fa58f8c
  448f8b:	add    BYTE PTR [rdi+rdi*4],dh
  448f8e:	add    al,0x0
  448f90:	jo     0x448fd1
  448f92:	add    DWORD PTR [rax],eax
  448f94:	mov    cl,0x3f
  448f96:	add    DWORD PTR [rax],eax
  448f98:	movabs rdi,0x40f800013fc00004
  448fa2:	add    DWORD PTR [rax],eax
  448fa4:	push   rax
  448fa5:	mov    edi,0x41000004
  448faa:	add    DWORD PTR [rax],eax
  448fac:	ja     0x448fef
  448fae:	add    DWORD PTR [rax],eax
  448fb0:	push   0xffffffff800004bf
  448fb5:	add    DWORD PTR [r8],eax
  448fb8:	(bad)  
  448fb9:	rex.X add DWORD PTR [rax],eax
  448fbc:	jo     0x448f7d
  448fbe:	add    al,0x0
  448fc0:	loopne 0x449004
  448fc2:	add    DWORD PTR [rax],eax
  448fc4:	jno    0x449009
  448fc6:	add    DWORD PTR [rax],eax
  448fc8:	test   BYTE PTR [rdi+0x43800004],bh
  448fce:	add    DWORD PTR [rax],eax
  448fd0:	(bad)  
  448fd1:	add    DWORD PTR [rax],r8d
  448fd4:	nop
  448fd5:	mov    edi,0x44400004
  448fda:	add    DWORD PTR [rax],eax
  448fdc:	or     al,BYTE PTR [rdi+0x1]
  448fdf:	add    BYTE PTR [rdi+rdi*4+0x47100004],ah
  448fe6:	add    DWORD PTR [rax],eax
  448fe8:	sbb    BYTE PTR [rcx+0x1],cl
  448feb:	add    BYTE PTR [rax+0x200004bf],bh
  448ff1:	add    QWORD PTR [r8],rax
  448ff4:	xchg   ebp,eax
  448ff5:	add    QWORD PTR [r8],rax
  448ff8:	int3   
  448ff9:	mov    edi,0x49a00004
  448ffe:	add    DWORD PTR [rax],eax
  449000:	test   eax,0xd800014a
  449005:	mov    edi,0x4ab00004
  44900a:	add    DWORD PTR [rax],eax
  44900c:	or     al,0x4b
  44900e:	add    DWORD PTR [rax],eax
  449010:	call   0x104494d4
  449015:	rex.WXB add QWORD PTR [r8],rax
  449018:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  449019:	rex.WXB add QWORD PTR [r8],rax
  44901c:	lock mov edi,0x4bb00004
  449022:	add    DWORD PTR [rax],eax
  449024:	popf   
  449025:	add    QWORD PTR [rax],r8
  449028:	cld    
  449029:	mov    edi,0x4ca00004
  44902e:	add    DWORD PTR [rax],eax
  449030:	rex.WXB
  449031:	add    QWORD PTR [r8],r8
  449034:	or     al,0xc0
  449036:	add    al,0x0
  449038:	push   rax
  449039:	add    QWORD PTR [r8],r8
  44903c:	(bad)  
  44903d:	add    QWORD PTR [r8],r8
  449040:	and    al,0xc0
  449042:	add    al,0x0
  449044:	lock add QWORD PTR [r8],r8
  449048:	xchg   DWORD PTR [rsi+0x1],ecx
  44904b:	add    BYTE PTR [rax],bh
  44904d:	rol    BYTE PTR [rax+rax*1],0x90
  449051:	rex.WRX add QWORD PTR [rax],r8
  449054:	pop    rcx
  449055:	rex.WRXB add QWORD PTR [r8],r8
  449058:	rex.W rol BYTE PTR [rax+rax*1],0x60
  44905d:	rex.WRXB add QWORD PTR [r8],r8
  449060:	mov    ebx,0x5400014f
  449065:	rol    BYTE PTR [rax+rax*1],0xc0
  449069:	rex.WRXB add QWORD PTR [r8],r8
  44906c:	(bad)
  44906f:	add    BYTE PTR [rax+rax*8+0x4],bl
  449073:	add    al,dl
  449075:	rex.WRXB add QWORD PTR [r8],r8
  449078:	ror    BYTE PTR [rdi+0x1],cl
  44907b:	add    BYTE PTR [rax-0x40],ah
  44907e:	add    al,0x0
  449080:	loopne 0x4490d1
  449082:	add    DWORD PTR [rax],eax
  449084:	sbb    DWORD PTR [rax+0x1],edx
  449087:	add    BYTE PTR [rax+rax*8+0x4],ah
  44908b:	add    BYTE PTR [rax],ah
  44908d:	push   rax
  44908e:	add    DWORD PTR [rax],eax
  449090:	mov    DWORD PTR [rcx+0x1],edx
  449093:	add    BYTE PTR [rax-0x40],ch
  449096:	add    al,0x0
  449098:	nop
  449099:	push   rcx
  44909a:	add    DWORD PTR [rax],eax
  44909c:	push   0x74000152
  4490a1:	rol    BYTE PTR [rax+rax*1],0x70
  4490a5:	push   rdx
  4490a6:	add    DWORD PTR [rax],eax
  4490a8:	push   rax
  4490a9:	push   rbp
  4490aa:	add    DWORD PTR [rax],eax
  4490ac:	add    al,0x4
  4490af:	add    BYTE PTR [rax+0x55],dl
  4490b2:	add    DWORD PTR [rax],eax
  4490b4:	mov    cl,0x5b
  4490b6:	add    DWORD PTR [rax],eax
  4490b8:	mov    eax,es
  4490ba:	add    al,0x0
  4490bc:	rcr    BYTE PTR [rbx+0x1],0x0
  4490c0:	fs pop rdi
  4490c2:	add    DWORD PTR [rax],eax
  4490c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4490c5:	rol    BYTE PTR [rax+rax*1],0x70
  4490c9:	pop    rdi
  4490ca:	add    DWORD PTR [rax],eax
  4490cc:	cld    
  4490cd:	pop    rdi
  4490ce:	add    DWORD PTR [rax],eax
  4490d0:	rol    al,0x4
  4490d3:	add    BYTE PTR [rax],al
  4490d5:	(bad)  
  4490d6:	add    DWORD PTR [rax],eax
  4490d8:	cdq    
  4490d9:	add    DWORD PTR [rcx],0x0
  4490dc:	int3   
  4490dd:	rol    BYTE PTR [rax+rax*1],0xa0
  4490e1:	add    DWORD PTR [rcx],0x0
  4490e4:	fisttp DWORD PTR [rbx-0x3f1bffff]
  4490ea:	add    al,0x0
  4490ec:	loopne 0x449079
  4490ee:	add    DWORD PTR [rax],eax
  4490f0:	or     al,0x8c
  4490f2:	add    DWORD PTR [rax],eax
  4490f4:	cld    
  4490f5:	rol    BYTE PTR [rax+rax*1],0x10
  4490f9:	mov    WORD PTR [rcx],es
  4490fb:	add    BYTE PTR [rdx],dh
  4490fd:	nop
  4490fe:	add    DWORD PTR [rax],eax
  449100:	add    al,0xc1
  449102:	add    al,0x0
  449104:	rex xchg eax,eax
  449106:	add    DWORD PTR [rax],eax
  449108:	xor    dl,BYTE PTR [rbx-0x3ee3ffff]
  44910e:	add    al,0x0
  449110:	rex xchg ebx,eax
  449112:	add    DWORD PTR [rax],eax
  449114:	(bad)  
  449115:	xchg   edi,eax
  449116:	add    DWORD PTR [rax],eax
  449118:	sub    cl,al
  44911a:	add    al,0x0
  44911c:	adc    BYTE PTR [rdi-0x68c0ffff],dl
  449122:	add    DWORD PTR [rax],eax
  449124:	rex rol DWORD PTR [rax+rax*1],0x40
  449129:	xchg   edi,eax
  44912a:	add    DWORD PTR [rax],eax
  44912c:	cmp    ebx,DWORD PTR [rax-0x3eb7ffff]
  449132:	add    al,0x0
  449134:	rex cwde 
  449136:	add    DWORD PTR [rax],eax
  449138:	mov    dl,0x98
  44913a:	add    DWORD PTR [rax],eax
  44913c:	(bad)  
  44913d:	rol    DWORD PTR [rax+rax*1],0xc0
  449141:	cwde   
  449142:	add    DWORD PTR [rax],eax
  449144:	xchg   DWORD PTR [rcx-0x3e93ffff],ebx
  44914a:	add    al,0x0
  44914c:	nop
  44914d:	cdq    
  44914e:	add    DWORD PTR [rax],eax
  449150:	rex
  449151:	fwait
  449152:	add    DWORD PTR [rax],eax
  449154:	js     0x449117
  449156:	add    al,0x0
  449158:	rex
  449159:	fwait
  44915a:	add    DWORD PTR [rax],eax
  44915c:	xchg   DWORD PTR [rcx+rax*1+0x4c19000],ebx
  449163:	add    BYTE PTR [rax+0x7800019c],dl
  449169:	popf   
  44916a:	add    DWORD PTR [rax],eax
  44916c:	movabs al,ds:0xaa00019d800004c1
  449175:	popf   
  449176:	add    DWORD PTR [rax],eax
  449178:	mov    al,0xc1
  44917a:	add    al,0x0
  44917c:	mov    al,0x9d
  44917e:	add    DWORD PTR [rax],eax
  449180:	adc    al,0xa3
  449182:	add    DWORD PTR [rax],eax
  449184:	mov    eax,0x200004c1
  449189:	movabs ds:0xc1d00001a3680001,eax
  449192:	add    al,0x0
  449194:	jo     0x449139
  449196:	add    DWORD PTR [rax],eax
  449198:	mov    eax,0xd80001a3
  44919d:	rol    DWORD PTR [rax+rax*1],0xc0
  4491a1:	movabs ds:0xc1e00001a4080001,eax
  4491aa:	add    al,0x0
  4491ac:	adc    BYTE PTR [rcx+rax*1+0x1a51c00],ah
  4491b3:	add    al,ch
  4491b5:	rol    DWORD PTR [rax+rax*1],0x20
  4491b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4491ba:	add    DWORD PTR [rax],eax
  4491bc:	loopne 0x449164
  4491be:	add    DWORD PTR [rax],eax
  4491c0:	add    dl,al
  4491c2:	add    al,0x0
  4491c4:	loopne 0x44916c
  4491c6:	add    DWORD PTR [rax],eax
  4491c8:	xstore-rng (bad)
  4491c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4491ca:	add    DWORD PTR [rax],eax
  4491cc:	or     dl,al
  4491ce:	add    al,0x0
  4491d0:	adc    BYTE PTR [rdi-0x58adffff],ah
  4491d6:	add    DWORD PTR [rax],eax
  4491d8:	adc    dl,al
  4491da:	add    al,0x0
  4491dc:	(bad)  
  4491dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4491de:	add    DWORD PTR [rax],eax
  4491e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4491e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4491e2:	add    DWORD PTR [rax],eax
  4491e4:	sbb    dl,al
  4491e6:	add    al,0x0
  4491e8:	mov    al,0xa7
  4491ea:	add    DWORD PTR [rax],eax
  4491ec:	mov    edx,0x240001a7
  4491f1:	ret    0x4
  4491f4:	shl    BYTE PTR [rdi-0x582dffff],0x1
  4491fb:	add    BYTE PTR [rax],ch
  4491fd:	ret    0x4
  449200:	loopne 0x4491a9
  449202:	add    DWORD PTR [rax],eax
  449204:	(bad)  
  449205:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  449206:	add    DWORD PTR [rax],eax
  449208:	sub    al,0xc2
  44920a:	add    al,0x0
  44920c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44920e:	add    DWORD PTR [rax],eax
  449210:	rex.B test al,0x1
  449213:	add    BYTE PTR [rdx+rax*8],dh
  449216:	add    al,0x0
  449218:	push   rax
  449219:	test   al,0x1
  44921b:	add    BYTE PTR [rdi-0x58],dh
  44921e:	add    DWORD PTR [rax],eax
  449220:	cmp    al,0xc2
  449222:	add    al,0x0
  449224:	sub    BYTE PTR [rax-0x5729ffff],0x1
  44922b:	add    BYTE PTR [rdx+rax*8+0x4],al
  44922f:	add    al,ah
  449231:	test   al,0x1
  449233:	add    BYTE PTR [rsi],cl
  449235:	test   eax,0xc24c0001
  44923a:	add    al,0x0
  44923c:	adc    BYTE PTR [rcx-0x540dffff],ch
  449242:	add    DWORD PTR [rax],eax
  449244:	pop    rax
  449245:	ret    0x4
  449248:	add    BYTE PTR [rcx+rax*1+0x1ac4200],ch
  44924f:	add    BYTE PTR [rax-0x3e],dh
  449252:	add    al,0x0
  449254:	push   rax
  449255:	lods   al,BYTE PTR ds:[rsi]
  449256:	add    DWORD PTR [rax],eax
  449258:	xchg   edx,eax
  449259:	lods   al,BYTE PTR ds:[rsi]
  44925a:	add    DWORD PTR [rax],eax
  44925c:	jl     0x449220
  44925e:	add    al,0x0
  449260:	movabs al,ds:0x880001ace20001ac
  449269:	ret    0x4
  44926c:	lock lods al,BYTE PTR ds:[rsi]
  44926e:	add    DWORD PTR [rax],eax
  449270:	(bad)  
  449271:	lods   al,BYTE PTR ds:[rsi]
  449272:	add    DWORD PTR [rax],eax
  449274:	xchg   esp,eax
  449275:	ret    0x4
  449278:	add    BYTE PTR [rbp-0x52ebffff],ch
  44927e:	add    DWORD PTR [rax],eax
  449280:	cwde   
  449281:	ret    0x4
  449284:	and    BYTE PTR [rbp-0x52dcffff],ch
  44928a:	add    DWORD PTR [rax],eax
  44928c:	pushf  
  44928d:	ret    0x4
  449290:	xor    BYTE PTR [rbp-0x52cbffff],ch
  449296:	add    DWORD PTR [rax],eax
  449298:	movabs al,ds:0x440001ad400004c2
  4492a1:	lods   eax,DWORD PTR ds:[rsi]
  4492a2:	add    DWORD PTR [rax],eax
  4492a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4492a5:	ret    0x4
  4492a8:	push   rax
  4492a9:	lods   eax,DWORD PTR ds:[rsi]
  4492aa:	add    DWORD PTR [rax],eax
  4492ac:	ja     0x44925b
  4492ae:	add    DWORD PTR [rax],eax
  4492b0:	test   al,0xc2
  4492b2:	add    al,0x0
  4492b4:	sub    BYTE PTR [rbp-0x5225ffff],0x1
  4492bb:	add    BYTE PTR [rdx+rax*8-0x521ffffc],ch
  4492c2:	add    DWORD PTR [rax],eax
  4492c4:	rex.X scas al,BYTE PTR es:[rdi]
  4492c6:	add    DWORD PTR [rax],eax
  4492c8:	mov    al,0xc2
  4492ca:	add    al,0x0
  4492cc:	push   rax
  4492cd:	scas   al,BYTE PTR es:[rdi]
  4492ce:	add    DWORD PTR [rax],eax
  4492d0:	mov    dl,0xae
  4492d2:	add    DWORD PTR [rax],eax
  4492d4:	mov    ah,0xc2
  4492d6:	add    al,0x0
  4492d8:	shr    BYTE PTR [rsi-0x50b4ffff],0x1
  4492df:	add    BYTE PTR [rax+0x500004c2],bh
  4492e5:	scas   eax,DWORD PTR es:[rdi]
  4492e6:	add    DWORD PTR [rax],eax
  4492e8:	mov    esi,0xc80001af
  4492ed:	ret    0x4
  4492f0:	shr    BYTE PTR [rdi-0x502dffff],0x1
  4492f7:	add    al,bl
  4492f9:	ret    0x4
  4492fc:	loopne 0x4492ad
  4492fe:	add    DWORD PTR [rax],eax
  449300:	adc    dh,BYTE PTR [rax-0x3d23ffff]
  449306:	add    al,0x0
  449308:	and    BYTE PTR [rax-0x4fc7ffff],dh
  44930e:	add    DWORD PTR [rax],eax
  449310:	in     al,0xc2
  449312:	add    al,0x0
  449314:	mov    al,0x1
  449317:	add    BYTE PTR [rbx-0x50],bl
  44931a:	add    DWORD PTR [rax],eax
  44931c:	call   0x604497e3
  449321:	mov    al,0x1
  449323:	add    BYTE PTR [rcx],dl
  449325:	mov    ah,0x1
  449327:	add    ah,ch
  449329:	ret    0x4
  44932c:	and    BYTE PTR [rcx+rax*1+0x1bb4900],dh
  449333:	add    BYTE PTR [rbx+rax*8],al
  449336:	add    al,0x0
  449338:	push   rax
  449339:	mov    ebx,0xbb860001
  44933e:	add    DWORD PTR [rax],eax
  449340:	sbb    al,0xc3
  449342:	add    al,0x0
  449344:	nop
  449345:	mov    ebx,0xbbba0001
  44934a:	add    DWORD PTR [rax],eax
  44934c:	and    al,0xc3
  44934e:	add    al,0x0
  449350:	sar    BYTE PTR [rbx-0x4438ffff],0x1
  449357:	add    BYTE PTR [rbx+rax*8],ch
  44935a:	add    al,0x0
  44935c:	sar    BYTE PTR [rbx-0x442effff],1
  449362:	add    DWORD PTR [rax],eax
  449364:	xor    bl,al
  449366:	add    al,0x0
  449368:	loopne 0x449325
  44936a:	add    DWORD PTR [rax],eax
  44936c:	mov    sp,0x1
  449370:	xor    al,0xc3
  449372:	add    al,0x0
  449374:	jo     0x449332
  449376:	add    DWORD PTR [rax],eax
  449378:	sti    
  449379:	mov    esp,0xc33c0001
  44937e:	add    al,0x0
  449380:	add    BYTE PTR [rbp-0x42feffff],bh
  449386:	add    DWORD PTR [rax],eax
  449388:	rex.R ret 
  44938a:	add    al,0x0
  44938c:	adc    BYTE PTR [rbp-0x42eaffff],bh
  449392:	add    DWORD PTR [rax],eax
  449394:	rex.W ret 
  449396:	add    al,0x0
  449398:	and    BYTE PTR [rbp-0x4212ffff],bh
  44939e:	add    DWORD PTR [rax],eax
  4493a0:	rex.WR ret 
  4493a2:	add    al,0x0
  4493a4:	lock mov ebp,0xbe200001
  4493aa:	add    DWORD PTR [rax],eax
  4493ac:	pop    rsp
  4493ad:	ret    
  4493ae:	add    al,0x0
  4493b0:	and    BYTE PTR [rsi-0x41d0ffff],bh
  4493b6:	add    DWORD PTR [rax],eax
  4493b8:	fs ret 
  4493ba:	add    al,0x0
  4493bc:	xor    BYTE PTR [rsi-0x419fffff],bh
  4493c2:	add    DWORD PTR [rax],eax
  4493c4:	ins    BYTE PTR es:[rdi],dx
  4493c5:	ret    
  4493c6:	add    al,0x0
  4493c8:	(bad)  
  4493c9:	mov    esi,0xbe8e0001
  4493ce:	add    DWORD PTR [rax],eax
  4493d0:	je     0x449395
  4493d2:	add    al,0x0
  4493d4:	nop
  4493d5:	mov    esi,0xbeea0001
  4493da:	add    DWORD PTR [rax],eax
  4493dc:	jl     0x4493a1
  4493de:	add    al,0x0
  4493e0:	lock mov esi,0xbf130001
  4493e6:	add    DWORD PTR [rax],eax
  4493e8:	test   bl,al
  4493ea:	add    al,0x0
  4493ec:	and    BYTE PTR [rdi-0x407cffff],bh
  4493f2:	add    DWORD PTR [rax],eax
  4493f4:	mov    ebx,es
  4493f6:	add    al,0x0
  4493f8:	nop
  4493f9:	mov    edi,0xbfe60001
  4493fe:	add    DWORD PTR [rax],eax
  449400:	cwde   
  449401:	ret    
  449402:	add    al,0x0
  449404:	lock mov edi,0xc0170001
  44940a:	add    DWORD PTR [rax],eax
  44940c:	movabs al,ds:0x250001c0200004c3
  449415:	rol    BYTE PTR [rcx],0x0
  449418:	test   al,0xc3
  44941a:	add    al,0x0
  44941c:	xor    al,al
  44941e:	add    DWORD PTR [rax],eax
  449420:	jl     0x4493e2
  449422:	add    DWORD PTR [rax],eax
  449424:	lods   al,BYTE PTR ds:[rsi]
  449425:	ret    
  449426:	add    al,0x0
  449428:	add    al,0x1
  44942b:	add    BYTE PTR [rdx-0x3f],ah
  44942e:	add    DWORD PTR [rax],eax
  449430:	mov    eax,0x700004c3
  449435:	rol    DWORD PTR [rcx],0x0
  449438:	rol    ecx,1
  44943a:	add    DWORD PTR [rax],eax
  44943c:	enter  0x4c3,0x0
  449440:	loopne 0x449403
  449442:	add    DWORD PTR [rax],eax
  449444:	nop
  449445:	ret    0x1
  449448:	(bad)  
  449449:	ret    
  44944a:	add    al,0x0
  44944c:	nop
  44944d:	ret    0x1
  449450:	mov    al,0xc2
  449452:	add    DWORD PTR [rax],eax
  449454:	in     al,0xc3
  449456:	add    al,0x0
  449458:	mov    al,0xc2
  44945a:	add    DWORD PTR [rax],eax
  44945c:	xor    ebx,eax
  44945e:	add    DWORD PTR [rax],eax
  449460:	in     al,dx
  449461:	ret    
  449462:	add    al,0x0
  449464:	rex ret 
  449466:	add    DWORD PTR [rax],eax
  449468:	movsxd eax,ebx
  44946a:	add    DWORD PTR [rax],eax
  44946c:	hlt    
  44946d:	ret    
  44946e:	add    al,0x0
  449470:	jo     0x449435
  449472:	add    DWORD PTR [rax],eax
  449474:	xchg   esi,eax
  449475:	ret    
  449476:	add    DWORD PTR [rax],eax
  449478:	clc    
  449479:	ret    
  44947a:	add    al,0x0
  44947c:	movabs al,ds:0x1c5010001c3
  449485:	(bad)  
  449486:	add    al,0x0
  449488:	adc    ch,al
  44948a:	add    DWORD PTR [rax],eax
  44948c:	(bad)
  449490:	or     al,0xc4
  449492:	add    al,0x0
  449494:	push   rax
  449495:	(bad)
  449498:	(bad)  
  449499:	(bad)
  44949c:	adc    ah,al
  44949e:	add    al,0x0
  4494a0:	jo     0x449467
  4494a2:	add    DWORD PTR [rax],eax
  4494a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4494a5:	(bad)
  4494a8:	adc    al,0xc4
  4494aa:	add    al,0x0
  4494ac:	mov    al,0xc5
  4494ae:	add    DWORD PTR [rax],eax
  4494b0:	fcmovnb st,st(6)
  4494b2:	add    DWORD PTR [rax],eax
  4494b4:	sbb    ah,al
  4494b6:	add    al,0x0
  4494b8:	loopne 0x449480
  4494ba:	add    DWORD PTR [rax],eax
  4494bc:	sub    al,0xc8
  4494be:	add    DWORD PTR [rax],eax
  4494c0:	and    ah,al
  4494c2:	add    al,0x0
  4494c4:	xor    al,cl
  4494c6:	add    DWORD PTR [rax],eax
  4494c8:	cwde   
  4494c9:	enter  0x1,0x28
  4494cd:	(bad)  
  4494ce:	add    al,0x0
  4494d0:	movabs al,ds:0x300001c9f90001c8
  4494d9:	(bad)  
  4494da:	add    al,0x0
  4494dc:	add    dl,cl
  4494de:	add    DWORD PTR [rax],eax
  4494e0:	sub    eax,0x3c0001cc
  4494e5:	(bad)  
  4494e6:	add    al,0x0
  4494e8:	xor    ah,cl
  4494ea:	add    DWORD PTR [rax],eax
  4494ec:	cwde   
  4494ed:	int3   
  4494ee:	add    DWORD PTR [rax],eax
  4494f0:	rex.W (bad) 
  4494f2:	add    al,0x0
  4494f4:	movabs al,ds:0x500001cd080001cc
  4494fd:	(bad)  
  4494fe:	add    al,0x0
  449500:	adc    ch,cl
  449502:	add    DWORD PTR [rax],eax
  449504:	js     0x4494d3
  449506:	add    DWORD PTR [rax],eax
  449508:	pop    rax
  449509:	(bad)  
  44950a:	add    al,0x0
  44950c:	or     ch,0x1
  44950f:	add    BYTE PTR [rbx+0x600001cd],bh
  449515:	(bad)  
  449516:	add    al,0x0
  449518:	ror    ch,0x1
  44951b:	add    ch,cl
  44951d:	int    0x1
  44951f:	add    BYTE PTR [rax-0x3c],ch
  449522:	add    al,0x0
  449524:	ror    ch,1
  449526:	add    DWORD PTR [rax],eax
  449528:	in     eax,0xcd
  44952a:	add    DWORD PTR [rax],eax
  44952c:	ins    BYTE PTR es:[rdi],dx
  44952d:	(bad)  
  44952e:	add    al,0x0
  449530:	lock int 0x1
  449533:	add    BYTE PTR [rsi],dl
  449535:	(bad)  
  449536:	add    DWORD PTR [rax],eax
  449538:	jo     0x4494fe
  44953a:	add    al,0x0
  44953c:	and    dh,cl
  44953e:	add    DWORD PTR [rax],eax
  449540:	push   0xffffffffffffffce
  449542:	add    DWORD PTR [rax],eax
  449544:	je     0x44950a
  449546:	add    al,0x0
  449548:	jo     0x449518
  44954a:	add    DWORD PTR [rax],eax
  44954c:	call   0x7844971f
  449551:	(bad)  
  449552:	add    al,0x0
  449554:	lock (bad) 
  449556:	add    DWORD PTR [rax],eax
  449558:	pop    rsi
  449559:	iret   
  44955a:	add    DWORD PTR [rax],eax
  44955c:	mov    ah,al
  44955e:	add    al,0x0
  449560:	(bad)  
  449561:	iret   
  449562:	add    DWORD PTR [rax],eax
  449564:	jae    0x449536
  449566:	add    DWORD PTR [rax],eax
  449568:	nop
  449569:	(bad)  
  44956a:	add    al,0x0
  44956c:	adc    al,0x1
  44956f:	add    BYTE PTR [rcx],cl
  449571:	rol    DWORD PTR [rcx],1
  449573:	add    BYTE PTR [rax+0x100004c4],ah
  449579:	rol    DWORD PTR [rcx],1
  44957b:	add    BYTE PTR [rax],bh
  44957d:	rol    DWORD PTR [rcx],1
  44957f:	add    BYTE PTR [rax+0x400004c4],ch
  449585:	rol    DWORD PTR [rcx],1
  449587:	add    BYTE PTR [rbx-0x2f],ah
  44958a:	add    DWORD PTR [rax],eax
  44958c:	mov    al,0xc4
  44958e:	add    al,0x0
  449590:	jo     0x449563
  449592:	add    DWORD PTR [rax],eax
  449594:	mov    ecx,edx
  449596:	add    DWORD PTR [rax],eax
  449598:	mov    eax,0x900004c4
  44959d:	rol    DWORD PTR [rcx],1
  44959f:	add    BYTE PTR [rsi-0x3ffffe2f],ch
  4495a5:	(bad)  
  4495a6:	add    al,0x0
  4495a8:	mov    al,0xd1
  4495aa:	add    DWORD PTR [rax],eax
  4495ac:	fcom   st(1)
  4495ae:	add    DWORD PTR [rax],eax
  4495b0:	enter  0x4c4,0x0
  4495b4:	loopne 0x449587
  4495b6:	add    DWORD PTR [rax],eax
  4495b8:	sub    edx,edx
  4495ba:	add    DWORD PTR [rax],eax
  4495bc:	rol    ah,1
  4495be:	add    al,0x0
  4495c0:	xor    dl,dl
  4495c2:	add    DWORD PTR [rax],eax
  4495c4:	jb     0x449598
  4495c6:	add    DWORD PTR [rax],eax
  4495c8:	fadd   st(4),st
  4495ca:	add    al,0x0
  4495cc:	adc    dl,0x1
  4495cf:	add    ah,cl
  4495d1:	rol    BYTE PTR [rcx],cl
  4495d3:	add    al,ch
  4495d5:	(bad)  
  4495d6:	add    al,0x0
  4495d8:	rcl    dl,1
  4495da:	add    DWORD PTR [rax],eax
  4495dc:	sbb    eax,0xf40001d3
  4495e1:	(bad)  
  4495e2:	add    al,0x0
  4495e4:	and    bl,dl
  4495e6:	add    DWORD PTR [rax],eax
  4495e8:	ins    BYTE PTR es:[rdi],dx
  4495e9:	rol    DWORD PTR [rcx],cl
  4495eb:	add    BYTE PTR [rax],al
  4495ed:	(bad)
  4495f0:	jo     0x4495c5
  4495f2:	add    DWORD PTR [rax],eax
  4495f4:	js     0x4495c9
  4495f6:	add    DWORD PTR [rax],eax
  4495f8:	or     al,0xc5
  4495fa:	add    al,0x0
  4495fc:	adc    bl,0x1
  4495ff:	add    BYTE PTR [rdi+0x100001d3],cl
  449605:	(bad)
  449608:	nop
  449609:	rol    DWORD PTR [rcx],cl
  44960b:	add    BYTE PTR [rdi+0x140001d3],bl
  449611:	(bad)
  449614:	movabs al,ds:0x180001d3af0001d3
  44961d:	(bad)
  449620:	mov    al,0xd3
  449622:	add    DWORD PTR [rax],eax
  449624:	mov    edi,0x1c0001d3
  449629:	(bad)
  44962c:	rcl    bl,0x1
  44962f:	add    dh,dl
  449631:	rol    DWORD PTR [rcx],cl
  449633:	add    BYTE PTR [rax],ah
  449635:	(bad)
  449638:	loopne 0x44960d
  44963a:	add    DWORD PTR [rax],eax
  44963c:	not    bl
  44963e:	add    DWORD PTR [rax],eax
  449640:	and    al,0xc5
  449642:	add    al,0x0
  449644:	add    ah,dl
  449646:	add    DWORD PTR [rax],eax
  449648:	cmp    eax,0x280001d4
  44964d:	(bad)
  449650:	rex (bad) 
  449652:	add    DWORD PTR [rax],eax
  449654:	jge    0x44962a
  449656:	add    DWORD PTR [rax],eax
  449658:	xor    ch,al
  44965a:	add    al,0x0
  44965c:	adc    ah,0x1
  44965f:	add    BYTE PTR [rcx+0x380001d4],al
  449665:	(bad)
  449668:	nop
  449669:	(bad)  
  44966a:	add    DWORD PTR [rax],eax
  44966c:	rcl    ebp,0x1
  44966f:	add    BYTE PTR [rbp+rax*8+0x4],al
  449673:	add    al,dl
  449675:	(bad)  
  449676:	add    DWORD PTR [rax],eax
  449678:	jb     0x449650
  44967a:	add    DWORD PTR [rax],eax
  44967c:	(bad)
  449680:	adc    dh,0x1
  449683:	add    BYTE PTR [rbp-0x29],bl
  449686:	add    DWORD PTR [rax],eax
  449688:	pop    rax
  449689:	(bad)
  44968c:	(bad)  
  44968d:	xlat   BYTE PTR ds:[rbx]
  44968e:	add    DWORD PTR [rax],eax
  449690:	(bad)  
  449691:	xlat   BYTE PTR ds:[rbx]
  449692:	add    DWORD PTR [rax],eax
  449694:	push   0xffffffffd00004c5
  449699:	xlat   BYTE PTR ds:[rbx]
  44969a:	add    DWORD PTR [rax],eax
  44969c:	xlat   BYTE PTR ds:[rbx]
  44969d:	xlat   BYTE PTR ds:[rbx]
  44969e:	add    DWORD PTR [rax],eax
  4496a0:	jo     0x449667
  4496a2:	add    al,0x0
  4496a4:	loopne 0x44967d
  4496a6:	add    DWORD PTR [rax],eax
  4496a8:	(bad)  
  4496a9:	xlat   BYTE PTR ds:[rbx]
  4496aa:	add    DWORD PTR [rax],eax
  4496ac:	je     0x449673
  4496ae:	add    al,0x0
  4496b0:	lock xlat BYTE PTR ds:[rbx]
  4496b2:	add    DWORD PTR [rax],eax
  4496b4:	cld    
  4496b5:	xlat   BYTE PTR ds:[rbx]
  4496b6:	add    DWORD PTR [rax],eax
  4496b8:	js     0x44967f
  4496ba:	add    al,0x0
  4496bc:	add    al,bl
  4496be:	add    DWORD PTR [rax],eax
  4496c0:	adc    eax,0x7c0001d8
  4496c5:	(bad)
  4496c8:	and    al,bl
  4496ca:	add    DWORD PTR [rax],eax
  4496cc:	(bad)  
  4496cd:	fadd   DWORD PTR [rcx]
  4496cf:	add    BYTE PTR [rbp+rax*8-0x27bffffc],al
  4496d6:	add    DWORD PTR [rax],eax
  4496d8:	test   eax,ebx
  4496da:	add    DWORD PTR [rax],eax
  4496dc:	mov    ebp,es
  4496de:	add    al,0x0
  4496e0:	nop
  4496e1:	fadd   DWORD PTR [rcx]
  4496e3:	add    BYTE PTR [rdx],ah
  4496e5:	fld    DWORD PTR [rcx]
  4496e7:	add    BYTE PTR [rax+0x300004c5],bl
  4496ed:	fld    DWORD PTR [rcx]
  4496ef:	add    BYTE PTR [rax-0x27],dl
  4496f2:	add    DWORD PTR [rax],eax
  4496f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4496f5:	(bad)
  4496f8:	push   rax
  4496f9:	fld    DWORD PTR [rcx]
  4496fb:	add    BYTE PTR [rdi-0x27],ah
  4496fe:	add    DWORD PTR [rax],eax
  449700:	lods   al,BYTE PTR ds:[rsi]
  449701:	(bad)
  449704:	jo     0x4496df
  449706:	add    DWORD PTR [rax],eax
  449708:	xchg   ecx,ebx
  44970a:	add    DWORD PTR [rax],eax
  44970c:	mov    ah,0xc5
  44970e:	add    al,0x0
  449710:	nop
  449711:	fld    DWORD PTR [rcx]
  449713:	add    BYTE PTR [rsi-0x43fffe27],ch
  449719:	(bad)
  44971c:	mov    al,0xd9
  44971e:	add    DWORD PTR [rax],eax
  449720:	rcr    ecx,cl
  449722:	add    DWORD PTR [rax],eax
  449724:	(bad)  
  449725:	(bad)
  449728:	loopne 0x449703
  44972a:	add    DWORD PTR [rax],eax
  44972c:	fiadd  DWORD PTR cs:[rcx]
  44972f:	add    ah,cl
  449731:	(bad)
  449734:	xor    dl,bl
  449736:	add    DWORD PTR [rax],eax
  449738:	mov    edx,ds
  44973a:	add    DWORD PTR [rax],eax
  44973c:	(bad)  
  44973d:	(bad)
  449740:	nop
  449741:	fiadd  DWORD PTR [rcx]
  449743:	add    ah,ch
  449745:	fiadd  DWORD PTR [rcx]
  449747:	add    ah,bl
  449749:	(bad)
  44974c:	lock fiadd DWORD PTR [rcx]
  44974f:	add    bh,dh
  449751:	fiadd  DWORD PTR [rcx]
  449753:	add    ah,ah
  449755:	(bad)
  449758:	add    bl,bl
  44975a:	add    DWORD PTR [rax],eax
  44975c:	pop    rsi
  44975d:	fild   DWORD PTR [rcx]
  44975f:	add    al,ch
  449761:	(bad)
  449764:	(bad)  
  449765:	fild   DWORD PTR [rcx]
  449767:	add    bh,al
  449769:	fild   DWORD PTR [rcx]
  44976b:	add    al,dh
  44976d:	(bad)
  449770:	rcr    bl,1
  449772:	add    DWORD PTR [rax],eax
  449774:	jmp    0xfffffffff8449954
  449779:	(bad)
  44977c:	lock fild DWORD PTR [rcx]
  44977f:	add    cl,ch
  449781:	fld    QWORD PTR [rcx]
  449783:	add    BYTE PTR [rax],al
  449785:	mov    BYTE PTR [rax+rax*1],0xf0
  449789:	fld    QWORD PTR [rcx]
  44978b:	add    BYTE PTR [rdx],cl
  44978d:	fiadd  WORD PTR [rcx]
  44978f:	add    BYTE PTR [rsi+rax*8],dl
  449792:	add    al,0x0
  449794:	adc    dh,bl
  449796:	add    DWORD PTR [rax],eax
  449798:	xchg   dh,bl
  44979a:	add    DWORD PTR [rax],eax
  44979c:	sbb    dh,al
  44979e:	add    al,0x0
  4497a0:	nop
  4497a1:	fiadd  WORD PTR [rcx]
  4497a3:	add    BYTE PTR [rsi-0x21],dl
  4497a6:	add    DWORD PTR [rax],eax
  4497a8:	sbb    al,0xc6
  4497aa:	add    al,0x0
  4497ac:	(bad)  
  4497ad:	fild   WORD PTR [rcx]
  4497af:	add    BYTE PTR [rsi],al
  4497b1:	loop   0x4497b4
  4497b3:	add    BYTE PTR [rax],ah
  4497b5:	mov    BYTE PTR [rax+rax*1],0x10
  4497b9:	loop   0x4497bc
  4497bb:	add    BYTE PTR [rsi-0x1e],al
  4497be:	add    DWORD PTR [rax],eax
  4497c0:	and    al,0xc6
  4497c2:	add    al,0x0
  4497c4:	push   rax
  4497c5:	loop   0x4497c8
  4497c7:	add    BYTE PTR [rcx-0x1e],dl
  4497ca:	add    DWORD PTR [rax],eax
  4497cc:	sub    al,0xc6
  4497ce:	add    al,0x0
  4497d0:	(bad)  
  4497d1:	loop   0x4497d4
  4497d3:	add    BYTE PTR [rcx-0x1e],ah
  4497d6:	add    DWORD PTR [rax],eax
  4497d8:	xor    dh,al
  4497da:	add    al,0x0
  4497dc:	jo     0x4497c0
  4497de:	add    DWORD PTR [rax],eax
  4497e0:	(bad)
  4497e3:	add    BYTE PTR [rsi+rax*8],dh
  4497e6:	add    al,0x0
  4497e8:	shl    dl,1
  4497ea:	add    DWORD PTR [rax],eax
  4497ec:	and    eax,0x3c0001e3
  4497f1:	mov    BYTE PTR [rax+rax*1],0x30
  4497f5:	jrcxz  0x4497f8
  4497f7:	add    BYTE PTR [rbp+0x440001e3],al
  4497fd:	mov    BYTE PTR [rax+rax*1],0x90
  449801:	jrcxz  0x449804
  449803:	add    ch,ah
  449805:	jrcxz  0x449808
  449807:	add    BYTE PTR [rsi+rax*8+0x4],cl
  44980b:	add    al,dh
  44980d:	jrcxz  0x449810
  44980f:	add    BYTE PTR [rbp-0x1c],al
  449812:	add    DWORD PTR [rax],eax
  449814:	push   rsp
  449815:	mov    BYTE PTR [rax+rax*1],0x50
  449819:	in     al,0x1
  44981b:	add    BYTE PTR [rbp+0x5c0001e4],ah
  449821:	mov    BYTE PTR [rax+rax*1],0xb0
  449825:	in     al,0x1
  449827:	add    BYTE PTR [rip+0x640001e5],al        # 0x64449a12
  44982d:	mov    BYTE PTR [rax+rax*1],0x10
  449831:	in     eax,0x1
  449833:	add    BYTE PTR [rbp-0x1b],ah
  449836:	add    DWORD PTR [rax],eax
  449838:	ins    BYTE PTR es:[rdi],dx
  449839:	mov    BYTE PTR [rax+rax*1],0x70
  44983d:	in     eax,0x1
  44983f:	add    BYTE PTR [rdx+0x740001e5],bh
  449845:	mov    BYTE PTR [rax+rax*1],0xc0
  449849:	in     eax,0x1
  44984b:	add    dl,bl
  44984d:	out    0x1,al
  44984f:	add    BYTE PTR [rax-0x3a],bh
  449852:	add    al,0x0
  449854:	loopne 0x44983c
  449856:	add    DWORD PTR [rax],eax
  449858:	shl    bh,1
  44985a:	add    DWORD PTR [rax],eax
  44985c:	test   dh,al
  44985e:	add    al,0x0
  449860:	shl    bh,1
  449862:	add    DWORD PTR [rax],eax
  449864:	mov    dh,0xe8
  449866:	add    DWORD PTR [rax],eax
  449868:	cwde   
  449869:	mov    BYTE PTR [rax+rax*1],0xc0
  44986d:	call   0xffffffffea699873
  449872:	add    DWORD PTR [rax],eax
  449874:	test   al,0xc6
  449876:	add    al,0x0
  449878:	xor    dl,ch
  44987a:	add    DWORD PTR [rax],eax
  44987c:	add    ebx,ebp
  44987e:	add    DWORD PTR [rax],eax
  449880:	mov    esp,0x100004c6
  449885:	jmp    0x449888
  449887:	add    dl,bh
  449889:	in     al,dx
  44988a:	add    DWORD PTR [rax],eax
  44988c:	(bad)  
  44988d:	mov    BYTE PTR [rax+rax*1],0x0
  449891:	in     eax,dx
  449892:	add    DWORD PTR [rax],eax
  449894:	add    ch,bh
  449896:	add    DWORD PTR [rax],eax
  449898:	fadd   st(6),st
  44989a:	add    al,0x0
  44989c:	adc    bh,ch
  44989e:	add    DWORD PTR [rax],eax
  4498a0:	(bad)  
  4498a1:	out    dx,eax
  4498a2:	add    DWORD PTR [rax],eax
  4498a4:	hlt    
  4498a5:	mov    BYTE PTR [rax+rax*1],0x90
  4498a9:	out    dx,eax
  4498aa:	add    DWORD PTR [rax],eax
  4498ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4498ad:	lock add DWORD PTR [rax],eax
  4498b0:	add    bh,al
  4498b2:	add    al,0x0
  4498b4:	mov    al,0xf0
  4498b6:	add    DWORD PTR [rax],eax
  4498b8:	int3   
  4498b9:	lock add DWORD PTR [rax],eax
  4498bc:	sbb    bh,al
  4498be:	add    al,0x0
  4498c0:	shl    al,1
  4498c2:	add    DWORD PTR [rax],eax
  4498c4:	xchg   ecx,esi
  4498c6:	add    DWORD PTR [rax],eax
  4498c8:	and    bh,al
  4498ca:	add    al,0x0
  4498cc:	nop
  4498cd:	icebp  
  4498ce:	add    DWORD PTR [rax],eax
  4498d0:	int3   
  4498d1:	repnz add DWORD PTR [rax],eax
  4498d4:	sub    al,0xc7
  4498d6:	add    al,0x0
  4498d8:	shl    dl,1
  4498da:	add    DWORD PTR [rax],eax
  4498dc:	icebp  
  4498dd:	repz add DWORD PTR [rax],eax
  4498e0:	cmp    al,0xc7
  4498e2:	add    al,0x0
  4498e4:	add    ah,dh
  4498e6:	add    DWORD PTR [rax],eax
  4498e8:	jmp    0x4c449ae2
  4498ed:	mov    DWORD PTR [rax+rax*1],0x1f5f0
  4498f4:	loopne 0x4498f4
  4498f6:	add    DWORD PTR [rax],eax
  4498f8:	(bad)  
  4498f9:	mov    DWORD PTR [rax+rax*1],0x1fee0
  449900:	mov    ch,0x0
  449902:	add    al,BYTE PTR [rax]
  449904:	js     0x4498cd
  449906:	add    al,0x0
  449908:	rol    BYTE PTR [rax],0x2
  44990b:	add    ch,dl
  44990d:	(bad)  
  44990e:	add    al,BYTE PTR [rax]
  449910:	mov    edi,es
  449912:	add    al,0x0
  449914:	loopne 0x44991c
  449916:	add    al,BYTE PTR [rax]
  449918:	or     BYTE PTR [rdi],al
  44991a:	add    al,BYTE PTR [rax]
  44991c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44991d:	mov    DWORD PTR [rax+rax*1],0x20710
  449924:	sub    DWORD PTR [rdi],eax
  449926:	add    al,BYTE PTR [rax]
  449928:	lods   al,BYTE PTR ds:[rsi]
  449929:	mov    DWORD PTR [rax+rax*1],0x20730
  449930:	rex.WB (bad) 
  449932:	add    al,BYTE PTR [rax]
  449934:	mov    al,0xc7
  449936:	add    al,0x0
  449938:	push   rax
  449939:	(bad)  
  44993a:	add    al,BYTE PTR [rax]
  44993c:	data16 (bad) 
  44993e:	add    al,BYTE PTR [rax]
  449940:	mov    ah,0xc7
  449942:	add    al,0x0
  449944:	jo     0x44994d
  449946:	add    al,BYTE PTR [rax]
  449948:	xchg   BYTE PTR [rdi],al
  44994a:	add    al,BYTE PTR [rax]
  44994c:	mov    eax,0x900004c7
  449951:	(bad)  
  449952:	add    al,BYTE PTR [rax]
  449954:	movabs eax,ds:0xb00004c7bc000207
  44995d:	(bad)  
  44995e:	add    al,BYTE PTR [rax]
  449960:	loop   0x449969
  449962:	add    al,BYTE PTR [rax]
  449964:	rol    bh,0x4
  449967:	add    al,dh
  449969:	(bad)  
  44996a:	add    al,BYTE PTR [rax]
  44996c:	outs   dx,DWORD PTR ds:[rsi]
  44996d:	or     BYTE PTR [rdx],al
  44996f:	add    al,cl
  449971:	mov    DWORD PTR [rax+rax*1],0x20870
  449978:	movabs eax,ds:0xb00004c7d4000208
  449981:	or     BYTE PTR [rdx],al
  449983:	add    BYTE PTR [rip+0xffffffffe000020a],ah        # 0xffffffffe0449b93
  449989:	mov    DWORD PTR [rax+rax*1],0x20a30
  449990:	lahf   
  449991:	or     eax,DWORD PTR [rdx]
  449993:	add    al,bh
  449995:	mov    DWORD PTR [rax+rax*1],0x20ba0
  44999c:	ror    DWORD PTR [rbx],cl
  44999e:	add    al,BYTE PTR [rax]
  4499a0:	or     al,0xc8
  4499a2:	add    al,0x0
  4499a4:	loopne 0x4499b1
  4499a6:	add    al,BYTE PTR [rax]
  4499a8:	xor    BYTE PTR [rdx+rax*1],cl
  4499ab:	add    BYTE PTR [rax+rcx*8],dl
  4499ae:	add    al,0x0
  4499b0:	xor    BYTE PTR [rdx+rax*1],cl
  4499b3:	add    BYTE PTR [rsi+0xc],dh
  4499b6:	add    al,BYTE PTR [rax]
  4499b8:	sbb    al,0xc8
  4499ba:	add    al,0x0
  4499bc:	or     BYTE PTR [rdx+rax*1],0x0
  4499c0:	test   DWORD PTR [rdx+rax*1],ecx
  4499c3:	add    BYTE PTR [rax+rcx*8],ah
  4499c6:	add    al,0x0
  4499c8:	nop
  4499c9:	or     al,0x2
  4499cb:	add    BYTE PTR [rsi],ch
  4499cd:	(bad)  
  4499ce:	add    al,BYTE PTR [rax]
  4499d0:	sub    al,cl
  4499d2:	add    al,0x0
  4499d4:	xor    BYTE PTR [rsi],cl
  4499d6:	add    al,BYTE PTR [rax]
  4499d8:	fwait
  4499d9:	(bad)  
  4499da:	add    al,BYTE PTR [rax]
  4499dc:	cmp    al,0xc8
  4499de:	add    al,0x0
  4499e0:	movabs al,ds:0x4800020f1f00020e
  4499e9:	enter  0x4,0x20
  4499ed:	lar    eax,WORD PTR [rax]
  4499f0:	retf   0x20f
  4499f3:	add    BYTE PTR [rax-0x38],dl
  4499f6:	add    al,0x0
  4499f8:	ror    BYTE PTR [rdi],1
  4499fa:	add    al,BYTE PTR [rax]
  4499fc:	rcl    DWORD PTR [rax],1
  4499fe:	add    al,BYTE PTR [rax]
  449a00:	(bad)  
  449a01:	enter  0x4,0xe0
  449a05:	adc    BYTE PTR [rdx],al
  449a07:	add    BYTE PTR [rax+0x11],dh
  449a0a:	add    al,BYTE PTR [rax]
  449a0c:	jo     0x4499d6
  449a0e:	add    al,0x0
  449a10:	jo     0x449a23
  449a12:	add    al,BYTE PTR [rax]
  449a14:	pop    rdx
  449a15:	adc    al,BYTE PTR [rdx]
  449a17:	add    BYTE PTR [rax+rcx*8+0x4],bh
  449a1b:	add    BYTE PTR [rax+0x12],ah
  449a1e:	add    al,BYTE PTR [rax]
  449a20:	adc    al,0x13
  449a22:	add    al,BYTE PTR [rax]
  449a24:	mov    al,cl
  449a26:	add    al,0x0
  449a28:	and    BYTE PTR [rbx],dl
  449a2a:	add    al,BYTE PTR [rax]
  449a2c:	xor    dl,BYTE PTR [rbx]
  449a2e:	add    al,BYTE PTR [rax]
  449a30:	xchg   esp,eax
  449a31:	enter  0x4,0x40
  449a35:	adc    eax,DWORD PTR [rdx]
  449a37:	add    BYTE PTR [rbx+rdx*1-0x3767fffe],ah
  449a3e:	add    al,0x0
  449a40:	mov    al,0x13
  449a42:	add    al,BYTE PTR [rax]
  449a44:	(bad)  
  449a45:	adc    al,0x2
  449a47:	add    BYTE PTR [rax+0x100004c8],ah
  449a4d:	adc    al,0x2
  449a4f:	add    BYTE PTR [rax-0x57fffdec],dh
  449a55:	enter  0x4,0xb0
  449a59:	adc    al,0x2
  449a5b:	add    BYTE PTR [rax+0x15],al
  449a5e:	add    al,BYTE PTR [rax]
  449a60:	mov    esp,0x400004c8
  449a65:	adc    eax,0x15450002
  449a6a:	add    al,BYTE PTR [rax]
  449a6c:	ror    al,1
  449a6e:	add    al,0x0
  449a70:	push   rax
  449a71:	adc    eax,0x160d0002
  449a76:	add    al,BYTE PTR [rax]
  449a78:	(bad)  
  449a79:	enter  0x4,0x10
  449a7d:	(bad)  
  449a7e:	add    al,BYTE PTR [rax]
  449a80:	or     esp,DWORD PTR [rcx]
  449a82:	add    al,BYTE PTR [rax]
  449a84:	in     al,0xc8
  449a86:	add    al,0x0
  449a88:	adc    BYTE PTR [rcx],ah
  449a8a:	add    al,BYTE PTR [rax]
  449a8c:	sbb    eax,0xfc000223
  449a91:	enter  0x4,0x20
  449a95:	and    eax,DWORD PTR [rdx]
  449a97:	add    dh,bl
  449a99:	and    eax,DWORD PTR [rdx]
  449a9b:	add    BYTE PTR [rcx+rcx*8],cl
  449a9e:	add    al,0x0
  449aa0:	loopne 0x449ac5
  449aa2:	add    al,BYTE PTR [rax]
  449aa4:	xor    ah,BYTE PTR [rip+0xffffffffc91c0002]        # 0xffffffffc9609aac
  449aaa:	add    al,0x0
  449aac:	rex and eax,0x25b40002
  449ab2:	add    al,BYTE PTR [rax]
  449ab4:	sub    al,0xc9
  449ab6:	add    al,0x0
  449ab8:	shl    BYTE PTR [rip+0x26710002],0x2        # 0x26b59ac1
  449abf:	add    BYTE PTR [rcx+rcx*8],dh
  449ac2:	add    al,0x0
  449ac4:	and    BYTE PTR [rsi],0x2
  449ac7:	add    BYTE PTR [rdi+riz*1],ah
  449aca:	add    al,BYTE PTR [rax]
  449acc:	rex leave 
  449ace:	add    al,0x0
  449ad0:	xor    BYTE PTR [rdi],ah
  449ad2:	add    al,BYTE PTR [rax]
  449ad4:	jae    0x449aff
  449ad6:	add    al,BYTE PTR [rax]
  449ad8:	rex.WR leave 
  449ada:	add    al,0x0
  449adc:	sub    BYTE PTR [rcx],0x2
  449adf:	add    BYTE PTR [rcx+0x64000229],ah
  449ae5:	leave  
  449ae6:	add    al,0x0
  449ae8:	mov    al,0x29
  449aea:	add    al,BYTE PTR [rax]
  449aec:	(bad)  
  449aed:	sub    DWORD PTR [rdx],eax
  449aef:	add    BYTE PTR [rcx+rcx*8+0x4],ch
  449af3:	add    al,dl
  449af5:	sub    DWORD PTR [rdx],eax
  449af7:	add    bl,bl
  449af9:	sub    DWORD PTR [rdx],eax
  449afb:	add    BYTE PTR [rax-0x37],dh
  449afe:	add    al,0x0
  449b00:	loopne 0x449b2b
  449b02:	add    al,BYTE PTR [rax]
  449b04:	call   0x74449d32
  449b09:	leave  
  449b0a:	add    al,0x0
  449b0c:	lock sub DWORD PTR [rdx],eax
  449b0f:	add    BYTE PTR [rax],bh
  449b11:	sub    al,BYTE PTR [rdx]
  449b13:	add    BYTE PTR [rax-0x37],bh
  449b16:	add    al,0x0
  449b18:	sub    al,BYTE PTR [rdx]
  449b1b:	add    BYTE PTR [rcx-0x7bfffdd6],cl
  449b21:	leave  
  449b22:	add    al,0x0
  449b24:	nop
  449b25:	sub    al,BYTE PTR [rdx]
  449b27:	add    BYTE PTR [rdi-0x73fffdd6],dh
  449b2d:	leave  
  449b2e:	add    al,0x0
  449b30:	shr    BYTE PTR [rdx],0x2
  449b33:	add    ah,cl
  449b35:	sub    al,BYTE PTR [rdx]
  449b37:	add    BYTE PTR [rcx+rcx*8+0x2ad00004],dl
  449b3e:	add    al,BYTE PTR [rax]
  449b40:	jmp    0x449b6c
  449b42:	add    al,BYTE PTR [rax]
  449b44:	cwde   
  449b45:	leave  
  449b46:	add    al,0x0
  449b48:	lock sub al,BYTE PTR [rdx]
  449b4b:	add    BYTE PTR [rsi+0x2b],bl
  449b4e:	add    al,BYTE PTR [rax]
  449b50:	pushf  
  449b51:	leave  
  449b52:	add    al,0x0
  449b54:	(bad)  
  449b55:	sub    eax,DWORD PTR [rdx]
  449b57:	add    bh,cl
  449b59:	sub    eax,DWORD PTR [rdx]
  449b5b:	add    BYTE PTR [rcx+rcx*8+0x2bd00004],ah
  449b62:	add    al,BYTE PTR [rax]
  449b64:	fsubr  QWORD PTR [rbx]
  449b66:	add    al,BYTE PTR [rax]
  449b68:	mov    ah,0xc9
  449b6a:	add    al,0x0
  449b6c:	loopne 0x449b99
  449b6e:	add    al,BYTE PTR [rax]
  449b70:	add    ch,BYTE PTR [rdx+rax*1]
  449b73:	add    BYTE PTR [rax+0x100004c9],bh
  449b79:	sub    al,0x2
  449b7b:	add    BYTE PTR [rbx+0x2c],dh
  449b7e:	add    al,BYTE PTR [rax]
  449b80:	ror    cl,0x4
  449b83:	add    BYTE PTR [rax+0x4c00022c],al
  449b89:	sub    eax,0xc9c80002
  449b8e:	add    al,0x0
  449b90:	push   rax
  449b91:	sub    eax,0x2d630002
  449b96:	add    al,BYTE PTR [rax]
  449b98:	(bad)  
  449b99:	leave  
  449b9a:	add    al,0x0
  449b9c:	jo     0x449bcb
  449b9e:	add    al,BYTE PTR [rax]
  449ba0:	sub    DWORD PTR [rip+0xffffffffc9dc0002],0x4        # 0xffffffffca209ba9
  449ba7:	add    BYTE PTR [rax-0x31fffdd3],dl
  449bad:	sub    eax,0xc9e40002
  449bb2:	add    al,0x0
  449bb4:	shr    BYTE PTR [rip+0x2e4e0002],1        # 0x2e929bbc
  449bba:	add    al,BYTE PTR [rax]
  449bbc:	in     al,dx
  449bbd:	leave  
  449bbe:	add    al,0x0
  449bc0:	push   rax
  449bc1:	add    al,BYTE PTR cs:[rax]
  449bc4:	xchg   ebp,eax
  449bc5:	add    al,BYTE PTR cs:[rax]
  449bc8:	hlt    
  449bc9:	leave  
  449bca:	add    al,0x0
  449bcc:	movabs al,ds:0x22ee500022e
  449bd5:	retf   0x4
  449bd8:	lock add al,BYTE PTR cs:[rax]
  449bdc:	sbb    al,0x2f
  449bde:	add    al,BYTE PTR [rax]
  449be0:	or     al,0xca
  449be2:	add    al,0x0
  449be4:	and    BYTE PTR [rdi],ch
  449be6:	add    al,BYTE PTR [rax]
  449be8:	or     al,0x30
  449bea:	add    al,BYTE PTR [rax]
  449bec:	adc    al,0xca
  449bee:	add    al,0x0
  449bf0:	adc    BYTE PTR [rax],dh
  449bf2:	add    al,BYTE PTR [rax]
  449bf4:	xor    BYTE PTR [r10],r8b
  449bf7:	add    BYTE PTR [rax],ah
  449bf9:	retf   0x4
  449bfc:	push   rax
  449bfd:	xor    BYTE PTR [rdx],al
  449bff:	add    BYTE PTR [rdx+0x28000231],dl
  449c05:	retf   0x4
  449c08:	movabs al,ds:0x340002342e000231
  449c11:	retf   0x4
  449c14:	xor    BYTE PTR [rdx+rax*1],dh
  449c17:	add    bl,cl
  449c19:	add    al,BYTE PTR ss:[rax]
  449c1c:	rex.WR retf 0x4
  449c20:	shl    BYTE PTR [rsi],1
  449c22:	add    al,BYTE PTR [rax]
  449c24:	cli    
  449c25:	add    al,BYTE PTR ss:[rax]
  449c28:	fs retf 0x4
  449c2c:	add    BYTE PTR [rdi],dh
  449c2e:	add    al,BYTE PTR [rax]
  449c30:	pop    rdx
  449c31:	cmp    BYTE PTR [rdx],al
  449c33:	add    BYTE PTR [rdx+rcx*8+0x4],ch
  449c37:	add    BYTE PTR [rax+0x38],ah
  449c3a:	add    al,BYTE PTR [rax]
  449c3c:	sub    eax,0x84000239
  449c41:	retf   0x4
  449c44:	xor    BYTE PTR [rcx],bh
  449c46:	add    al,BYTE PTR [rax]
  449c48:	xlat   BYTE PTR ds:[rbx]
  449c49:	cmp    DWORD PTR [rdx],eax
  449c4b:	add    BYTE PTR [rdx+rcx*8+0x39e00004],cl
  449c52:	add    al,BYTE PTR [rax]
  449c54:	rex.WRB cmp r8b,BYTE PTR [r10]
  449c57:	add    BYTE PTR [rax+0x500004ca],dl
  449c5d:	cmp    al,BYTE PTR [rdx]
  449c5f:	add    ah,dl
  449c61:	cmp    al,BYTE PTR [rdx]
  449c63:	add    BYTE PTR [rdx+rcx*8+0x3ae00004],dl
  449c6a:	add    al,BYTE PTR [rax]
  449c6c:	(bad)  
  449c6d:	cmp    eax,DWORD PTR [rdx]
  449c6f:	add    BYTE PTR [rax+0x300004ca],ah
  449c75:	cmp    eax,DWORD PTR [rdx]
  449c77:	add    BYTE PTR [rcx+0x3d],cl
  449c7a:	add    al,BYTE PTR [rax]
  449c7c:	lods   al,BYTE PTR ds:[rsi]
  449c7d:	retf   0x4
  449c80:	push   rax
  449c81:	cmp    eax,0x3e030002
  449c86:	add    al,BYTE PTR [rax]
  449c88:	(bad)  
  449c89:	retf   0x4
  449c8c:	adc    BYTE PTR [rsi],bh
  449c8e:	add    al,BYTE PTR [rax]
  449c90:	mov    bl,0x40
  449c92:	add    al,BYTE PTR [rax]
  449c94:	(bad)  
  449c95:	retf   0x4
  449c98:	rol    BYTE PTR [rax+0x2],0x0
  449c9c:	in     al,0x40
  449c9e:	add    al,BYTE PTR [rax]
  449ca0:	in     al,dx
  449ca1:	retf   0x4
  449ca4:	lock add al,BYTE PTR [rax]
  449ca8:	sub    BYTE PTR [rcx+0x2],al
  449cab:	add    al,dh
  449cad:	retf   0x4
  449cb0:	xor    BYTE PTR [rcx+0x2],al
  449cb3:	add    BYTE PTR [rax+0x41],dl
  449cb6:	add    al,BYTE PTR [rax]
  449cb8:	hlt    
  449cb9:	retf   0x4
  449cbc:	add    BYTE PTR [rdx+0x2],al
  449cbf:	add    BYTE PTR [rdi-0x3fffdbe],ah
  449cc5:	retf   0x4
  449cc8:	mov    al,0x42
  449cca:	add    al,BYTE PTR [rax]
  449ccc:	leave  
  449ccd:	rex.X add al,BYTE PTR [rax]
  449cd0:	add    al,0xcb
  449cd2:	add    al,0x0
  449cd4:	rol    BYTE PTR [rdx+0x2],1
  449cd7:	add    BYTE PTR [rip+0xc000243],al        # 0xc449f20
  449cdd:	retf   
  449cde:	add    al,0x0
  449ce0:	adc    BYTE PTR [rbx+0x2],al
  449ce3:	add    BYTE PTR [rbp+0x43],ah
  449ce6:	add    al,BYTE PTR [rax]
  449ce8:	adc    al,0xcb
  449cea:	add    al,0x0
  449cec:	jo     0x449d31
  449cee:	add    al,BYTE PTR [rax]
  449cf0:	mov    WORD PTR [rbx+0x2],es
  449cf3:	add    BYTE PTR [rax],ah
  449cf5:	retf   
  449cf6:	add    al,0x0
  449cf8:	nop
  449cf9:	rex.XB add al,BYTE PTR [r8]
  449cfc:	(bad)  
  449cfd:	rex.XB add al,BYTE PTR [r8]
  449d00:	and    al,0xcb
  449d02:	add    al,0x0
  449d04:	movabs al,ds:0x28000243a3000243
  449d0d:	retf   
  449d0e:	add    al,0x0
  449d10:	mov    al,0x43
  449d12:	add    al,BYTE PTR [rax]
  449d14:	xchg   BYTE PTR [rdx+rax*1+0x0],al
  449d18:	sub    al,0xcb
  449d1a:	add    al,0x0
  449d1c:	nop
  449d1d:	add    r8b,BYTE PTR [rax]
  449d20:	mov    eax,DWORD PTR [rbp+0x2]
  449d23:	add    BYTE PTR [rbx+rcx*8],bh
  449d26:	add    al,0x0
  449d28:	nop
  449d29:	add    r8b,BYTE PTR [r8]
  449d2c:	mov    edi,0x4c000245
  449d31:	retf   
  449d32:	add    al,0x0
  449d34:	rol    BYTE PTR [rbp+0x2],0x0
  449d38:	sub    DWORD PTR [rsi+0x2],eax
  449d3b:	add    BYTE PTR [rbx+rcx*8+0x4],dl
  449d3f:	add    BYTE PTR [rax],dh
  449d41:	rex.RX add r8b,BYTE PTR [rax]
  449d44:	xor    eax,DWORD PTR [rsi+0x2]
  449d47:	add    BYTE PTR [rax-0x35],ah
  449d4a:	add    al,0x0
  449d4c:	rex
  449d4d:	rex.RX add r8b,BYTE PTR [rax]
  449d50:	add    DWORD PTR [rsi+0x2],0x4cb6400
  449d57:	add    BYTE PTR [rax-0x63fffdba],dl
  449d5d:	rex.RX add r8b,BYTE PTR [rax]
  449d60:	ins    BYTE PTR es:[rdi],dx
  449d61:	retf   
  449d62:	add    al,0x0
  449d64:	movabs al,ds:0x700002479c000246
  449d6d:	retf   
  449d6e:	add    al,0x0
  449d70:	movabs al,ds:0x88000247a3000247
  449d79:	retf   
  449d7a:	add    al,0x0
  449d7c:	mov    al,0x47
  449d7e:	add    al,BYTE PTR [rax]
  449d80:	mov    ah,0x47
  449d82:	add    al,BYTE PTR [rax]
  449d84:	mov    ebx,cs
  449d86:	add    al,0x0
  449d88:	rol    BYTE PTR [rdi+0x2],0x0
  449d8c:	(bad)  
  449d8d:	rex.RXB add r8b,BYTE PTR [r8]
  449d90:	nop
  449d91:	retf   
  449d92:	add    al,0x0
  449d94:	rol    BYTE PTR [rdi+0x2],1
  449d97:	add    BYTE PTR [rcx],dh
  449d99:	rex.W add al,BYTE PTR [rax]
  449d9c:	xchg   esp,eax
  449d9d:	retf   
  449d9e:	add    al,0x0
  449da0:	rex
  449da1:	rex.W add al,BYTE PTR [rax]
  449da4:	movabs ds:0xb00004cba0000249,al
  449dad:	rex.WB add al,BYTE PTR [r8]
  449db0:	test   eax,0xb400024c
  449db5:	retf   
  449db6:	add    al,0x0
  449db8:	mov    al,0x4c
  449dba:	add    al,BYTE PTR [rax]
  449dbc:	push   rsi
  449dbd:	rex.WRX add r8b,BYTE PTR [rax]
  449dc0:	int3   
  449dc1:	retf   
  449dc2:	add    al,0x0
  449dc4:	(bad)  
  449dc5:	rex.WRX add r8b,BYTE PTR [rax]
  449dc8:	rex.WR
  449dc9:	rex.WRXB add r8b,BYTE PTR [r8]
  449dcc:	(bad)  
  449dcd:	retf   
  449dce:	add    al,0x0
  449dd0:	push   rax
  449dd1:	rex.WRXB add r8b,BYTE PTR [r8]
  449dd4:	or     BYTE PTR [rcx+0x2],dl
  449dd7:	add    ah,ah
  449dd9:	retf   
  449dda:	add    al,0x0
  449ddc:	adc    BYTE PTR [rcx+0x2],dl
  449ddf:	add    BYTE PTR [rbp+0x51],bh
  449de2:	add    al,BYTE PTR [rax]
  449de4:	in     al,dx
  449de5:	retf   
  449de6:	add    al,0x0
  449de8:	adc    BYTE PTR [rcx+0x2],0x0
  449dec:	call   QWORD PTR [rcx+0x2]
  449def:	add    ah,bh
  449df1:	retf   
  449df2:	add    al,0x0
  449df4:	add    BYTE PTR [rdx+0x2],dl
  449df7:	add    BYTE PTR [rdi+0x8000252],bl
  449dfd:	int3   
  449dfe:	add    al,0x0
  449e00:	movabs al,ds:0x100002537a000252
  449e09:	int3   
  449e0a:	add    al,0x0
  449e0c:	adc    BYTE PTR [rbx+0x2],0x0
  449e10:	lahf   
  449e11:	push   rbx
  449e12:	add    al,BYTE PTR [rax]
  449e14:	sbb    ah,cl
  449e16:	add    al,0x0
  449e18:	movabs al,ds:0x1c000253b2000253
  449e21:	int3   
  449e22:	add    al,0x0
  449e24:	rcl    BYTE PTR [rbx+0x2],0x0
  449e28:	add    eax,0x20000254
  449e2d:	int3   
  449e2e:	add    al,0x0
  449e30:	adc    BYTE PTR [rdx+rax*1+0x0],dl
  449e34:	scas   al,BYTE PTR es:[rdi]
  449e35:	push   rsp
  449e36:	add    al,BYTE PTR [rax]
  449e38:	and    al,0xcc
  449e3a:	add    al,0x0
  449e3c:	mov    al,0x54
  449e3e:	add    al,BYTE PTR [rax]
  449e40:	repz push rsp
  449e42:	add    al,BYTE PTR [rax]
  449e44:	xor    ah,cl
  449e46:	add    al,0x0
  449e48:	add    BYTE PTR [rbp+0x2],dl
  449e4b:	add    BYTE PTR [rbx],bh
  449e4d:	push   rbp
  449e4e:	add    al,BYTE PTR [rax]
  449e50:	cmp    al,0xcc
  449e52:	add    al,0x0
  449e54:	rex push rbp
  449e56:	add    al,BYTE PTR [rax]
  449e58:	(bad)  
  449e59:	push   rbp
  449e5a:	add    al,BYTE PTR [rax]
  449e5c:	rex.R int3 
  449e5e:	add    al,0x0
  449e60:	rcl    BYTE PTR [rbp+0x2],1
  449e63:	add    BYTE PTR [rax],cl
  449e65:	push   rsi
  449e66:	add    al,BYTE PTR [rax]
  449e68:	push   rax
  449e69:	int3   
  449e6a:	add    al,0x0
  449e6c:	adc    BYTE PTR [rsi+0x2],dl
  449e6f:	add    BYTE PTR [rbp+0x56],ah
  449e72:	add    al,BYTE PTR [rax]
  449e74:	pop    rsp
  449e75:	int3   
  449e76:	add    al,0x0
  449e78:	jo     0x449ed0
  449e7a:	add    al,BYTE PTR [rax]
  449e7c:	(bad)  
  449e7d:	push   rdi
  449e7e:	add    al,BYTE PTR [rax]
  449e80:	push   0xffffffff800004cc
  449e85:	push   rdi
  449e86:	add    al,BYTE PTR [rax]
  449e88:	(bad)  
  449e89:	pop    rax
  449e8a:	add    al,BYTE PTR [rax]
  449e8c:	js     0x449e5a
  449e8e:	add    al,0x0
  449e90:	and    BYTE PTR [rax+0x2],bl
  449e93:	add    BYTE PTR [rbp+0x58],ch
  449e96:	add    al,BYTE PTR [rax]
  449e98:	test   ah,cl
  449e9a:	add    al,0x0
  449e9c:	jo     0x449ef6
  449e9e:	add    al,BYTE PTR [rax]
  449ea0:	mov    ebp,0x8c000258
  449ea5:	int3   
  449ea6:	add    al,0x0
  449ea8:	rcr    BYTE PTR [rax+0x2],0x0
  449eac:	(bad)
  449eaf:	add    BYTE PTR [rsp+rcx*8+0x58d00004],dl
  449eb6:	add    al,BYTE PTR [rax]
  449eb8:	icebp  
  449eb9:	pop    rax
  449eba:	add    al,BYTE PTR [rax]
  449ebc:	cwde   
  449ebd:	int3   
  449ebe:	add    al,0x0
  449ec0:	add    BYTE PTR [rcx+0x2],bl
  449ec3:	add    BYTE PTR [rcx],dh
  449ec5:	pop    rcx
  449ec6:	add    al,BYTE PTR [rax]
  449ec8:	movabs al,ds:0x9c000259400004cc
  449ed1:	pop    rcx
  449ed2:	add    al,BYTE PTR [rax]
  449ed4:	lods   al,BYTE PTR ds:[rsi]
  449ed5:	int3   
  449ed6:	add    al,0x0
  449ed8:	movabs al,ds:0xb8000259cd000259
  449ee1:	int3   
  449ee2:	add    al,0x0
  449ee4:	rcr    BYTE PTR [rcx+0x2],1
  449ee7:	add    BYTE PTR [rdi+0x5a],al
  449eea:	add    al,BYTE PTR [rax]
  449eec:	ror    ah,0x4
  449eef:	add    BYTE PTR [rax+0x5a],dl
  449ef2:	add    al,BYTE PTR [rax]
  449ef4:	rex.RX pop rbx
  449ef6:	add    al,BYTE PTR [rax]
  449ef8:	ror    ah,1
  449efa:	add    al,0x0
  449efc:	push   rax
  449efd:	pop    rbx
  449efe:	add    al,BYTE PTR [rax]
  449f00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  449f01:	pop    rbx
  449f02:	add    al,BYTE PTR [rax]
  449f04:	fmul   st,st(4)
  449f06:	add    al,0x0
  449f08:	mov    al,0x5b
  449f0a:	add    al,BYTE PTR [rax]
  449f0c:	iret   
  449f0d:	pop    rsp
  449f0e:	add    al,BYTE PTR [rax]
  449f10:	loopne 0x449ede
  449f12:	add    al,0x0
  449f14:	rcr    BYTE PTR [rdx+rax*1+0x0],1
  449f18:	(bad)  
  449f19:	pop    rbp
  449f1a:	add    al,BYTE PTR [rax]
  449f1c:	hlt    
  449f1d:	int3   
  449f1e:	add    al,0x0
  449f20:	loopne 0x449f7f
  449f22:	add    al,BYTE PTR [rax]
  449f24:	jp     0x449f84
  449f26:	add    al,BYTE PTR [rax]
  449f28:	add    ch,cl
  449f2a:	add    al,0x0
  449f2c:	sbb    BYTE PTR [rsi+0x2],0x0
  449f30:	ins    BYTE PTR es:[rdi],dx
  449f31:	pop    rdi
  449f32:	add    al,BYTE PTR [rax]
  449f34:	or     ch,cl
  449f36:	add    al,0x0
  449f38:	jo     0x449f99
  449f3a:	add    al,BYTE PTR [rax]
  449f3c:	int3   
  449f3d:	(bad)  
  449f3f:	add    BYTE PTR [rcx*8+0x62d00004],bl
  449f46:	add    al,BYTE PTR [rax]
  449f48:	mov    cl,0x63
  449f4a:	add    al,BYTE PTR [rax]
  449f4c:	sub    al,0xcd
  449f4e:	add    al,0x0
  449f50:	shl    BYTE PTR [rbx+0x2],0x0
  449f54:	nop
  449f55:	data16 add al,BYTE PTR [rax]
  449f58:	cmp    ch,cl
  449f5a:	add    al,0x0
  449f5c:	nop
  449f5d:	data16 add al,BYTE PTR [rax]
  449f60:	pop    rcx
  449f61:	add    al,BYTE PTR [eax]
  449f64:	rex.WR int 0x4
  449f67:	add    BYTE PTR [rax+0x67],ah
  449f6a:	add    al,BYTE PTR [rax]
  449f6c:	punpckhbw mm0,QWORD PTR [rdx]
  449f6f:	add    BYTE PTR [rax-0x33],bl
  449f72:	add    al,0x0
  449f74:	adc    BYTE PTR [rax+0x2],ch
  449f77:	add    BYTE PTR [rsi+0x64000269],ah
  449f7d:	int    0x4
  449f7f:	add    BYTE PTR [rax+0x68000269],dh
  449f85:	ins    DWORD PTR es:[rdi],dx
  449f86:	add    al,BYTE PTR [rax]
  449f88:	jo     0x449f57
  449f8a:	add    al,0x0
  449f8c:	jo     0x449ffb
  449f8e:	add    al,BYTE PTR [rax]
  449f90:	jnp    0x44a004
  449f92:	add    al,BYTE PTR [rax]
  449f94:	mov    ch,cl
  449f96:	add    al,0x0
  449f98:	xor    BYTE PTR [rdx+0x2],0x0
  449f9c:	sar    BYTE PTR [rdx+rax*1+0x0],cl
  449fa0:	pushf  
  449fa1:	int    0x4
  449fa3:	add    al,ah
  449fa5:	jl     0x449fa9
  449fa7:	add    BYTE PTR [rax],dl
  449fa9:	jge    0x449fad
  449fab:	add    BYTE PTR [rbp+rcx*8+0x7d100004],dh
  449fb2:	add    al,BYTE PTR [rax]
  449fb4:	pop    rax
  449fb5:	jge    0x449fb9
  449fb7:	add    BYTE PTR [rbp+rcx*8+0x7d600004],bh
  449fbe:	add    al,BYTE PTR [rax]
  449fc0:	jl     0x44a03f
  449fc2:	add    al,BYTE PTR [rax]
  449fc4:	enter  0x4cd,0x0
  449fc8:	cmp    BYTE PTR [rbp+0x2],0x0
  449fcc:	cli    
  449fcd:	jle    0x449fd1
  449fcf:	add    ah,cl
  449fd1:	int    0x4
  449fd3:	add    BYTE PTR [rax],al
  449fd5:	jg     0x449fd9
  449fd7:	add    BYTE PTR [rdx-0x6d],ch
  449fda:	add    al,BYTE PTR [rax]
  449fdc:	in     al,0xcd
  449fde:	add    al,0x0
  449fe0:	jo     0x449f75
  449fe2:	add    al,BYTE PTR [rax]
  449fe4:	ins    DWORD PTR es:[rdi],dx
  449fe5:	xchg   esp,eax
  449fe6:	add    al,BYTE PTR [rax]
  449fe8:	add    dh,cl
  449fea:	add    al,0x0
  449fec:	jo     0x449f82
  449fee:	add    al,BYTE PTR [rax]
  449ff0:	scas   al,BYTE PTR es:[rdi]
  449ff1:	xchg   esp,eax
  449ff2:	add    al,BYTE PTR [rax]
  449ff4:	or     al,0xce
  449ff6:	add    al,0x0
  449ff8:	mov    al,0x94
  449ffa:	add    al,BYTE PTR [rax]
  449ffc:	jl     0x449f93
  449ffe:	add    al,BYTE PTR [rax]
  44a000:	adc    dh,cl
  44a002:	add    al,0x0
  44a004:	adc    BYTE PTR [rbp-0x6a3dfffe],0x2
  44a00b:	add    BYTE PTR [rsi+rcx*8],bl
  44a00e:	add    al,0x0
  44a010:	rcl    BYTE PTR [rbp-0x6921fffe],1
  44a016:	add    al,BYTE PTR [rax]
  44a018:	and    al,0xce
  44a01a:	add    al,0x0
  44a01c:	loopne 0x449fb4
  44a01e:	add    al,BYTE PTR [rax]
  44a020:	rex.RX xchg edi,eax
  44a022:	add    al,BYTE PTR [rax]
  44a024:	xor    dh,cl
  44a026:	add    al,0x0
  44a028:	push   rax
  44a029:	xchg   edi,eax
  44a02a:	add    al,BYTE PTR [rax]
  44a02c:	add    bl,BYTE PTR [rax-0x31c7fffe]
  44a032:	add    al,0x0
  44a034:	adc    BYTE PTR [rax-0x67c9fffe],bl
  44a03a:	add    al,BYTE PTR [rax]
  44a03c:	rex.W (bad) 
  44a03e:	add    al,0x0
  44a040:	rex cwde 
  44a042:	add    al,BYTE PTR [rax]
  44a044:	jo     0x449fdf
  44a046:	add    al,BYTE PTR [rax]
  44a048:	push   rax
  44a049:	(bad)  
  44a04a:	add    al,0x0
  44a04c:	jo     0x449fe7
  44a04e:	add    al,BYTE PTR [rax]
  44a050:	(bad)  
  44a051:	(bad)  
  44a052:	add    al,BYTE PTR [rax]
  44a054:	fs (bad) 
  44a056:	add    al,0x0
  44a058:	loopne 0x449ff4
  44a05a:	add    al,BYTE PTR [rax]
  44a05c:	repz fwait
  44a05e:	add    al,BYTE PTR [rax]
  44a060:	je     0x44a030
  44a062:	add    al,0x0
  44a064:	add    BYTE PTR [rdx+rax*1+0x29c4400],bl
  44a06b:	add    BYTE PTR [rax+0x500004ce],cl
  44a071:	pushf  
  44a072:	add    al,BYTE PTR [rax]
  44a074:	xchg   BYTE PTR [rbp-0x3173fffe],bl
  44a07a:	add    al,0x0
  44a07c:	nop
  44a07d:	popf   
  44a07e:	add    al,BYTE PTR [rax]
  44a080:	movabs ds:0xb00004ce9800029e,eax
  44a089:	sahf   
  44a08a:	add    al,BYTE PTR [rax]
  44a08c:	mov    ecx,0xa400029f
  44a091:	(bad)  
  44a092:	add    al,0x0
  44a094:	rcr    BYTE PTR [rdi-0x601bfffe],0x2
  44a09b:	add    BYTE PTR [rax-0xffffb32],dh
  44a0a1:	lahf   
  44a0a2:	add    al,BYTE PTR [rax]
  44a0a4:	pop    rbx
  44a0a5:	movabs eax,ds:0xa1600004ceb40002
  44a0ae:	add    al,BYTE PTR [rax]
  44a0b0:	retf   
  44a0b1:	movabs eax,ds:0xa1d00004cec40002
  44a0ba:	add    al,BYTE PTR [rax]
  44a0bc:	repnz movabs ds:0xa3000004ced40002,al
  44a0c6:	add    al,BYTE PTR [rax]
  44a0c8:	pop    rdx
  44a0c9:	movabs ds:0xa3600004ceec0002,eax
  44a0d2:	add    al,BYTE PTR [rax]
  44a0d4:	fbld   TBYTE PTR [rbx-0x3103fffe]
  44a0da:	add    al,0x0
  44a0dc:	loopne 0x44a081
  44a0de:	add    al,BYTE PTR [rax]
  44a0e0:	and    al,0xa4
  44a0e2:	add    al,BYTE PTR [rax]
  44a0e4:	add    al,0xcf
  44a0e6:	add    al,0x0
  44a0e8:	xor    BYTE PTR [rdx+rax*1+0x2a57200],ah
  44a0ef:	add    BYTE PTR [rax],dl
  44a0f1:	iret   
  44a0f2:	add    al,0x0
  44a0f4:	mov    al,0xa7
  44a0f6:	add    al,BYTE PTR [rax]
  44a0f8:	mov    eax,0x240002a7
  44a0fd:	iret   
  44a0fe:	add    al,0x0
  44a100:	shl    BYTE PTR [rdi-0x5834fffe],0x2
  44a107:	add    BYTE PTR [rax],ch
  44a109:	iret   
  44a10a:	add    al,0x0
  44a10c:	shl    BYTE PTR [rdi-0x5828fffe],1
  44a112:	add    al,BYTE PTR [rax]
  44a114:	sub    al,0xcf
  44a116:	add    al,0x0
  44a118:	loopne 0x44a0c1
  44a11a:	add    al,BYTE PTR [rax]
  44a11c:	jmp    0x3044a3c8
  44a121:	iret   
  44a122:	add    al,0x0
  44a124:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44a126:	add    al,BYTE PTR [rax]
  44a128:	xor    ebp,DWORD PTR [rax-0x30cbfffe]
  44a12e:	add    al,0x0
  44a130:	test   al,0x2
  44a133:	add    BYTE PTR [rbp-0x58],bh
  44a136:	add    al,BYTE PTR [rax]
  44a138:	cmp    al,0xcf
  44a13a:	add    al,0x0
  44a13c:	sub    BYTE PTR [rax-0x5775fffe],0x2
  44a143:	add    BYTE PTR [rdi+rcx*8+0x4],al
  44a147:	add    BYTE PTR [rax-0x65fffd58],dl
  44a14d:	test   al,0x2
  44a14f:	add    BYTE PTR [rax-0x31],cl
  44a152:	add    al,0x0
  44a154:	push   rax
  44a155:	stos   BYTE PTR es:[rdi],al
  44a156:	add    al,BYTE PTR [rax]
  44a158:	ja     0x44a104
  44a15a:	add    al,BYTE PTR [rax]
  44a15c:	xor    BYTE PTR [rcx-0x557ffffc],dh
  44a162:	add    al,BYTE PTR [rax]
  44a164:	movabs ds:0xb00004b1280002aa,al
  44a16d:	stos   BYTE PTR es:[rdi],al
  44a16e:	add    al,BYTE PTR [rax]
  44a170:	shr    BYTE PTR [rdx-0x4b1ffffe],cl
  44a176:	add    al,0x0
  44a178:	loopne 0x44a124
  44a17a:	add    al,BYTE PTR [rax]
  44a17c:	sbb    al,0xb5
  44a17e:	add    al,BYTE PTR [rax]
  44a180:	fdiv   DWORD PTR [rdi-0x4adffffc]
  44a186:	add    al,BYTE PTR [rax]
  44a188:	push   rax
  44a189:	mov    ch,0x2
  44a18b:	add    BYTE PTR [rax],dh
  44a18d:	mov    ebp,0xb5500004
  44a192:	add    al,BYTE PTR [rax]
  44a194:	xor    BYTE PTR [rbp-0x41b7fffe],0x4
  44a19b:	add    BYTE PTR [rax-0x4ffffd4b],al
  44a1a1:	mov    ch,0x2
  44a1a3:	add    al,dh
  44a1a5:	rol    DWORD PTR [rax+rax*1],0xb0
  44a1a9:	mov    ch,0x2
  44a1ab:	add    al,ah
  44a1ad:	mov    ch,0x2
  44a1af:	add    al,bh
  44a1b1:	rol    DWORD PTR [rax+rax*1],0xe0
  44a1b5:	mov    ch,0x2
  44a1b7:	add    BYTE PTR [rax],dl
  44a1b9:	mov    dh,0x2
  44a1bb:	.byte 0x0
  44a1bc:	cmp    al,0xc5
  44a1be:	add    al,0x0

Disassembly of section .xdata:

000000000044b000 <.xdata>:
  44b000:	add    DWORD PTR [rax],eax
  44b002:	add    BYTE PTR [rax],al
  44b004:	add    DWORD PTR [rcx+rax*1],eax
  44b007:	add    BYTE PTR [rdx+rax*2],al
  44b00a:	add    BYTE PTR [rax],al
  44b00c:	add    DWORD PTR [rcx+rax*1],eax
  44b00f:	add    BYTE PTR [rdx+riz*2],al
  44b012:	add    BYTE PTR [rax],al
  44b014:	add    DWORD PTR [rdi],ecx
  44b016:	or     BYTE PTR [rax],al
  44b018:	lgdt   [rbx]
  44b01b:	add    BYTE PTR [rax],cl
  44b01d:	xor    BYTE PTR [rdi],al
  44b01f:	(bad)  
  44b020:	(bad)  
  44b021:	jo     0x44b028
  44b023:	push   rax
  44b024:	add    al,0xc0
  44b026:	add    dl,al
  44b028:	or     DWORD PTR [rcx+rax*1],eax
  44b02b:	add    BYTE PTR [rdx+rax*2],al
  44b02e:	add    BYTE PTR [rax],al
  44b030:	test   al,0xa7
  44b032:	add    al,BYTE PTR [rax]
  44b034:	add    DWORD PTR [rax],eax
  44b036:	add    BYTE PTR [rax],al
  44b038:	(bad)  
  44b039:	adc    al,0x0
  44b03b:	add    ah,ch
  44b03d:	adc    al,0x0
  44b03f:	add    BYTE PTR [rax+0x4f],dl
  44b042:	add    al,BYTE PTR [rax]
  44b044:	in     al,dx
  44b045:	adc    al,0x0
  44b047:	add    BYTE PTR [rcx],cl
  44b049:	add    al,0x1
  44b04b:	add    BYTE PTR [rdx+rax*2],al
  44b04e:	add    BYTE PTR [rax],al
  44b050:	test   al,0xa7
  44b052:	add    al,BYTE PTR [rax]
  44b054:	add    DWORD PTR [rax],eax
  44b056:	add    BYTE PTR [rax],al
  44b058:	add    al,0x15
  44b05a:	add    BYTE PTR [rax],al
  44b05c:	sbb    al,0x15
  44b05e:	add    BYTE PTR [rax],al
  44b060:	push   rax
  44b061:	rex.WRXB add r8b,BYTE PTR [r8]
  44b064:	sbb    al,0x15
  44b066:	add    BYTE PTR [rax],al
  44b068:	add    DWORD PTR [rcx+rax*1],eax
  44b06b:	add    BYTE PTR [rdx+riz*2],al
  44b06e:	add    BYTE PTR [rax],al
  44b070:	add    DWORD PTR [rax],eax
  44b072:	add    BYTE PTR [rax],al
  44b074:	add    DWORD PTR [rdx],ecx
  44b076:	(bad)  
  44b077:	add    BYTE PTR [rdx],cl
  44b079:	xor    al,BYTE PTR [rsi]
  44b07b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4b4e1
  44b081:	push   rax
  44b082:	add    al,al
  44b084:	add    DWORD PTR [rdi],eax
  44b086:	add    al,0x0
  44b088:	(bad)  
  44b089:	jb     0x44b08e
  44b08b:	xor    BYTE PTR [rdx],al
  44b08d:	(bad)  
  44b08e:	add    DWORD PTR [rax+0x1],esi
  44b091:	add    eax,0x32050002
  44b096:	add    DWORD PTR [rax],esi
  44b098:	add    DWORD PTR [rax],eax
  44b09a:	add    BYTE PTR [rax],al
  44b09c:	add    DWORD PTR [rcx],eax
  44b09e:	add    DWORD PTR [rax],eax
  44b0a0:	add    DWORD PTR [rax],esi
  44b0a2:	add    BYTE PTR [rax],al
  44b0a4:	add    DWORD PTR [rax],ecx
  44b0a6:	add    eax,DWORD PTR [rax]
  44b0a8:	or     BYTE PTR [rcx],al
  44b0aa:	xchg   BYTE PTR [rax],al
  44b0ac:	add    DWORD PTR [rax],esi
  44b0ae:	add    BYTE PTR [rax],al
  44b0b0:	add    DWORD PTR [rax],ebx
  44b0b2:	or     al,BYTE PTR [rbp-0x5deffce8]
  44b0b8:	or     al,0x30
  44b0ba:	or     esp,DWORD PTR [rax+0xa]
  44b0bd:	jo     0x44b0c8
  44b0bf:	rol    BYTE PTR [rdi],0xd0
  44b0c2:	add    eax,0x1f003e0
  44b0c7:	push   rax
  44b0c8:	add    DWORD PTR [rdi],eax
  44b0ca:	add    al,0x0
  44b0cc:	(bad)  
  44b0cd:	push   rdx
  44b0ce:	add    esi,DWORD PTR [rax]
  44b0d0:	add    ah,BYTE PTR [rax+0x1]
  44b0d3:	jo     0x44b0d6
  44b0d5:	add    eax,0x32050002
  44b0da:	add    DWORD PTR [rax],esi
  44b0dc:	add    DWORD PTR [rsi],eax
  44b0de:	add    eax,DWORD PTR [rax]
  44b0e0:	(bad)  
  44b0e1:	rex.X add sil,BYTE PTR [rax]
  44b0e4:	add    DWORD PTR [rax+0x0],esp
  44b0e7:	add    BYTE PTR [rcx],al
  44b0e9:	add    al,0x1
  44b0eb:	add    BYTE PTR [rdx+rax*2],al
  44b0ee:	add    BYTE PTR [rax],al
  44b0f0:	add    DWORD PTR [rcx+rax*1],eax
  44b0f3:	add    BYTE PTR [rdx+rax*2],al
  44b0f6:	add    BYTE PTR [rax],al
  44b0f8:	add    DWORD PTR [rax],edx
  44b0fa:	or     DWORD PTR [rax],eax
  44b0fc:	adc    dl,al
  44b0fe:	or     al,0x30
  44b100:	or     esp,DWORD PTR [rax+0xa]
  44b103:	jo     0x44b10e
  44b105:	push   rax
  44b106:	or     al,al
  44b108:	(bad)  
  44b109:	rol    BYTE PTR [rax+riz*8],1
  44b10c:	add    dh,al
  44b10e:	add    BYTE PTR [rax],al
  44b110:	add    DWORD PTR [rbx],edx
  44b112:	or     al,BYTE PTR [rax]
  44b114:	adc    eax,DWORD PTR [rcx]
  44b116:	rol    DWORD PTR [rax],cl
  44b118:	or     al,0x30
  44b11a:	or     esp,DWORD PTR [rax+0xa]
  44b11d:	jo     0x44b128
  44b11f:	push   rax
  44b120:	or     al,al
  44b122:	(bad)  
  44b123:	rol    BYTE PTR [rax+riz*8],1
  44b126:	add    dh,al
  44b128:	add    DWORD PTR [rcx+rax*1],eax
  44b12b:	add    BYTE PTR [rdx+riz*2],al
  44b12e:	add    BYTE PTR [rax],al
  44b130:	add    DWORD PTR [rcx+rax*1],eax
  44b133:	add    BYTE PTR [rdx+riz*2],al
  44b136:	add    BYTE PTR [rax],al
  44b138:	add    DWORD PTR [rax],eax
  44b13a:	add    BYTE PTR [rax],al
  44b13c:	add    DWORD PTR [rax],eax
  44b13e:	add    BYTE PTR [rax],al
  44b140:	add    DWORD PTR [rsi],eax
  44b142:	add    eax,DWORD PTR [rax]
  44b144:	(bad)  
  44b145:	rex.X add sil,BYTE PTR [rax]
  44b148:	add    DWORD PTR [rax+0x0],esp
  44b14b:	add    BYTE PTR [rcx],al
  44b14d:	(bad)  
  44b14e:	add    al,0x0
  44b150:	(bad)  
  44b151:	xor    al,BYTE PTR [rbx]
  44b153:	xor    BYTE PTR [rdx],al
  44b155:	(bad)  
  44b156:	add    DWORD PTR [rax+0x1],esi
  44b159:	add    BYTE PTR [rax],al
  44b15b:	add    BYTE PTR [rcx],al
  44b15d:	(bad)  
  44b15e:	add    eax,DWORD PTR [rax]
  44b160:	(bad)  
  44b161:	rex.X add sil,BYTE PTR [rax]
  44b164:	add    DWORD PTR [rax+0x0],esp
  44b167:	add    BYTE PTR [rcx],al
  44b169:	add    BYTE PTR [rax],al
  44b16b:	add    BYTE PTR [rcx],al
  44b16d:	add    BYTE PTR [rax],al
  44b16f:	add    BYTE PTR [rcx],al
  44b171:	or     BYTE PTR [rip+0x4620800],al        # 0x4a6b977
  44b177:	xor    BYTE PTR [rbx],al
  44b179:	(bad)  
  44b17a:	add    dh,BYTE PTR [rax+0x1]
  44b17d:	push   rax
  44b17e:	add    BYTE PTR [rax],al
  44b180:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b188
  44b186:	add    DWORD PTR [rax],esi
  44b188:	add    DWORD PTR [rax],eax
  44b18a:	add    BYTE PTR [rax],al
  44b18c:	add    DWORD PTR [rax],ecx
  44b18e:	add    eax,0x4420800
  44b193:	xor    BYTE PTR [rbx],al
  44b195:	(bad)  
  44b196:	add    dh,BYTE PTR [rax+0x1]
  44b199:	push   rax
  44b19a:	add    BYTE PTR [rax],al
  44b19c:	add    DWORD PTR [rax],ecx
  44b19e:	add    eax,0x4820800
  44b1a3:	xor    BYTE PTR [rbx],al
  44b1a5:	(bad)  
  44b1a6:	add    dh,BYTE PTR [rax+0x1]
  44b1a9:	push   rax
  44b1aa:	add    BYTE PTR [rax],al
  44b1ac:	add    DWORD PTR [rcx+rax*1],eax
  44b1af:	add    BYTE PTR [rdx+riz*2],al
  44b1b2:	add    BYTE PTR [rax],al
  44b1b4:	add    DWORD PTR [rip+0x72050002],eax        # 0x7249b1bc
  44b1ba:	add    DWORD PTR [rax],esi
  44b1bc:	add    DWORD PTR [rax],eax
  44b1be:	add    BYTE PTR [rax],al
  44b1c0:	add    DWORD PTR [rax],eax
  44b1c2:	add    BYTE PTR [rax],al
  44b1c4:	add    DWORD PTR [rax],eax
  44b1c6:	add    BYTE PTR [rax],al
  44b1c8:	add    DWORD PTR [rax],eax
  44b1ca:	add    BYTE PTR [rax],al
  44b1cc:	add    DWORD PTR [rax],eax
  44b1ce:	add    BYTE PTR [rax],al
  44b1d0:	add    DWORD PTR [rax],eax
  44b1d2:	add    BYTE PTR [rax],al
  44b1d4:	add    DWORD PTR [rsi],eax
  44b1d6:	add    eax,DWORD PTR [rax]
  44b1d8:	(bad)  
  44b1d9:	rex.X add sil,BYTE PTR [rax]
  44b1dc:	add    DWORD PTR [rax+0x0],esp
  44b1df:	add    BYTE PTR [rcx],al
  44b1e1:	(bad)  
  44b1e2:	add    al,0x0
  44b1e4:	(bad)  
  44b1e5:	push   rdx
  44b1e6:	add    esi,DWORD PTR [rax]
  44b1e8:	add    ah,BYTE PTR [rax+0x1]
  44b1eb:	jo     0x44b1ee
  44b1ed:	or     BYTE PTR [rip+0x4820800],al        # 0x4c6b9f3
  44b1f3:	xor    BYTE PTR [rbx],al
  44b1f5:	(bad)  
  44b1f6:	add    dh,BYTE PTR [rax+0x1]
  44b1f9:	push   rax
  44b1fa:	add    BYTE PTR [rax],al
  44b1fc:	add    DWORD PTR [rcx+rax*1],eax
  44b1ff:	add    BYTE PTR [rdx+rax*4],al
  44b202:	add    BYTE PTR [rax],al
  44b204:	add    DWORD PTR [rax],eax
  44b206:	add    BYTE PTR [rax],al
  44b208:	add    DWORD PTR [rax],eax
  44b20a:	add    BYTE PTR [rax],al
  44b20c:	add    DWORD PTR [rax],eax
  44b20e:	add    BYTE PTR [rax],al
  44b210:	add    DWORD PTR [rcx+rax*1],eax
  44b213:	add    BYTE PTR [rdx+riz*2],al
  44b216:	add    BYTE PTR [rax],al
  44b218:	add    DWORD PTR [rcx+rax*1],eax
  44b21b:	add    BYTE PTR [rdx+riz*2],al
  44b21e:	add    BYTE PTR [rax],al
  44b220:	add    DWORD PTR [rax],eax
  44b222:	add    BYTE PTR [rax],al
  44b224:	add    DWORD PTR [rdi],eax
  44b226:	add    al,0x0
  44b228:	(bad)  
  44b229:	push   rdx
  44b22a:	add    esi,DWORD PTR [rax]
  44b22c:	add    ah,BYTE PTR [rax+0x1]
  44b22f:	jo     0x44b232
  44b231:	(bad)  
  44b232:	add    eax,DWORD PTR [rax]
  44b234:	(bad)  
  44b235:	(bad)  
  44b237:	xor    BYTE PTR [rcx],al
  44b239:	(bad)  
  44b23a:	add    BYTE PTR [rax],al
  44b23c:	add    DWORD PTR [rcx+rax*1],eax
  44b23f:	add    BYTE PTR [rdx+rax*2],al
  44b242:	add    BYTE PTR [rax],al
  44b244:	add    DWORD PTR [rcx+rax*1],eax
  44b247:	add    BYTE PTR [rdx+rax*4],al
  44b24a:	add    BYTE PTR [rax],al
  44b24c:	add    DWORD PTR [rsi],eax
  44b24e:	add    eax,DWORD PTR [rax]
  44b250:	(bad)  
  44b251:	rex.X add sil,BYTE PTR [rax]
  44b254:	add    DWORD PTR [rax+0x0],esp
  44b257:	add    BYTE PTR [rcx],al
  44b259:	add    eax,0x52050002
  44b25e:	add    DWORD PTR [rax],esi
  44b260:	add    DWORD PTR [rax],ecx
  44b262:	add    eax,0x4620800
  44b267:	xor    BYTE PTR [rbx],al
  44b269:	(bad)  
  44b26a:	add    dh,BYTE PTR [rax+0x1]
  44b26d:	push   rax
  44b26e:	add    BYTE PTR [rax],al
  44b270:	add    DWORD PTR [rcx+rax*1],eax
  44b273:	add    BYTE PTR [rdx+riz*2],al
  44b276:	add    BYTE PTR [rax],al
  44b278:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b280
  44b27e:	add    DWORD PTR [rax],esi
  44b280:	add    DWORD PTR [rsi],eax
  44b282:	add    eax,DWORD PTR [rax]
  44b284:	(bad)  
  44b285:	rex.X add sil,BYTE PTR [rax]
  44b288:	add    DWORD PTR [rax+0x0],esp
  44b28b:	add    BYTE PTR [rcx],al
  44b28d:	(bad)  
  44b28e:	add    eax,DWORD PTR [rax]
  44b290:	(bad)  
  44b291:	(bad)  
  44b293:	xor    BYTE PTR [rcx],al
  44b295:	(bad)  
  44b296:	add    BYTE PTR [rax],al
  44b298:	add    DWORD PTR [rdi+rax*1],ecx
  44b29b:	add    BYTE PTR [rdx+rax*2],cl
  44b29e:	or     BYTE PTR [rax],dh
  44b2a0:	(bad)  
  44b2a1:	(bad)  
  44b2a2:	(bad)  
  44b2a3:	jo     0x44b2aa
  44b2a5:	push   rax
  44b2a6:	add    al,0xc0
  44b2a8:	add    dl,al
  44b2aa:	add    BYTE PTR [rax],al
  44b2ac:	add    DWORD PTR [rax],ecx
  44b2ae:	add    eax,0x4420800
  44b2b3:	xor    BYTE PTR [rbx],al
  44b2b5:	(bad)  
  44b2b6:	add    dh,BYTE PTR [rax+0x1]
  44b2b9:	push   rax
  44b2ba:	add    BYTE PTR [rax],al
  44b2bc:	add    DWORD PTR [rax],ecx
  44b2be:	add    eax,0x4420800
  44b2c3:	xor    BYTE PTR [rbx],al
  44b2c5:	(bad)  
  44b2c6:	add    dh,BYTE PTR [rax+0x1]
  44b2c9:	push   rax
  44b2ca:	add    BYTE PTR [rax],al
  44b2cc:	add    DWORD PTR [rax],eax
  44b2ce:	add    BYTE PTR [rax],al
  44b2d0:	add    DWORD PTR [rax],eax
  44b2d2:	add    BYTE PTR [rax],al
  44b2d4:	add    DWORD PTR [rax],eax
  44b2d6:	add    BYTE PTR [rax],al
  44b2d8:	add    DWORD PTR [rax],eax
  44b2da:	add    BYTE PTR [rax],al
  44b2dc:	add    DWORD PTR [rax],eax
  44b2de:	add    BYTE PTR [rax],al
  44b2e0:	add    DWORD PTR [rsi],eax
  44b2e2:	add    eax,DWORD PTR [rax]
  44b2e4:	(bad)  
  44b2e5:	rex.X add sil,BYTE PTR [rax]
  44b2e8:	add    DWORD PTR [rax+0x0],esp
  44b2eb:	add    BYTE PTR [rcx],al
  44b2ed:	(bad)  
  44b2ee:	add    eax,DWORD PTR [rax]
  44b2f0:	(bad)  
  44b2f1:	rex.X add sil,BYTE PTR [rax]
  44b2f4:	add    DWORD PTR [rax+0x0],esp
  44b2f7:	add    BYTE PTR [rcx],al
  44b2f9:	(bad)  
  44b2fa:	add    eax,DWORD PTR [rax]
  44b2fc:	(bad)  
  44b2fd:	rex.X add sil,BYTE PTR [rax]
  44b300:	add    DWORD PTR [rax+0x0],esp
  44b303:	add    BYTE PTR [rcx],al
  44b305:	add    eax,0x52050002
  44b30a:	add    DWORD PTR [rax],esi
  44b30c:	add    DWORD PTR [rax],eax
  44b30e:	add    BYTE PTR [rax],al
  44b310:	add    DWORD PTR [rcx+rax*1],eax
  44b313:	add    BYTE PTR [rdx+riz*2],al
  44b316:	add    BYTE PTR [rax],al
  44b318:	add    DWORD PTR [rax],eax
  44b31a:	add    BYTE PTR [rax],al
  44b31c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b324
  44b322:	add    DWORD PTR [rax],esi
  44b324:	add    DWORD PTR [rcx+rax*1],eax
  44b327:	add    BYTE PTR [rdx+rax*2],al
  44b32a:	add    BYTE PTR [rax],al
  44b32c:	add    DWORD PTR [rcx+rax*1],eax
  44b32f:	add    BYTE PTR [rdx+rax*2],al
  44b332:	add    BYTE PTR [rax],al
  44b334:	add    DWORD PTR [rax],eax
  44b336:	add    BYTE PTR [rax],al
  44b338:	add    DWORD PTR [rsi],eax
  44b33a:	add    eax,DWORD PTR [rax]
  44b33c:	(bad)  
  44b33d:	rex.X add sil,BYTE PTR [rax]
  44b340:	add    DWORD PTR [rax+0x0],esp
  44b343:	add    BYTE PTR [rcx],al
  44b345:	(bad)  
  44b346:	add    eax,DWORD PTR [rax]
  44b348:	(bad)  
  44b349:	rex.X add sil,BYTE PTR [rax]
  44b34c:	add    DWORD PTR [rax+0x0],esp
  44b34f:	add    BYTE PTR [rcx],al
  44b351:	(bad)  
  44b352:	add    al,0x0
  44b354:	(bad)  
  44b355:	push   rdx
  44b356:	add    esi,DWORD PTR [rax]
  44b358:	add    ah,BYTE PTR [rax+0x1]
  44b35b:	jo     0x44b35e
  44b35d:	(bad)  
  44b35e:	add    eax,DWORD PTR [rax]
  44b360:	(bad)  
  44b361:	movabs ds:0x501000060013002,al
  44b36a:	add    al,BYTE PTR [rax]
  44b36c:	add    eax,0x1300132
  44b371:	adc    BYTE PTR [rcx],cl
  44b373:	add    BYTE PTR [rax],dl
  44b375:	rex.X or al,0x30
  44b378:	or     esp,DWORD PTR [rax+0xa]
  44b37b:	jo     0x44b386
  44b37d:	push   rax
  44b37e:	or     al,al
  44b380:	(bad)  
  44b381:	rol    BYTE PTR [rax+riz*8],1
  44b384:	add    dh,al
  44b386:	add    BYTE PTR [rax],al
  44b388:	add    DWORD PTR [rdx],ecx
  44b38a:	add    eax,0x4c010a00
  44b38f:	add    BYTE PTR [rbx],al
  44b391:	xor    BYTE PTR [rdx],al
  44b393:	(bad)  
  44b394:	add    DWORD PTR [rax+0x0],esi
  44b397:	add    BYTE PTR [rcx],al
  44b399:	add    BYTE PTR [rax],al
  44b39b:	add    BYTE PTR [rcx],al
  44b39d:	add    BYTE PTR [rax],al
  44b39f:	add    BYTE PTR [rcx],al
  44b3a1:	or     al,BYTE PTR [rip+0x3c010a00]        # 0x3c45bda7
  44b3a7:	add    BYTE PTR [rbx],al
  44b3a9:	xor    BYTE PTR [rdx],al
  44b3ab:	(bad)  
  44b3ac:	add    DWORD PTR [rax+0x0],esi
  44b3af:	add    BYTE PTR [rcx],al
  44b3b1:	(bad)  
  44b3b2:	add    eax,DWORD PTR [rax]
  44b3b4:	(bad)  
  44b3b5:	(bad)  
  44b3b6:	add    ah,BYTE PTR [rax+0x1]
  44b3b9:	jo     0x44b3bb
  44b3bb:	add    BYTE PTR [rcx],al
  44b3bd:	add    al,0x1
  44b3bf:	add    BYTE PTR [rdx+rax*2],al
  44b3c2:	add    BYTE PTR [rax],al
  44b3c4:	add    DWORD PTR [rax],ecx
  44b3c6:	add    eax,0x4420800
  44b3cb:	xor    BYTE PTR [rbx],al
  44b3cd:	(bad)  
  44b3ce:	add    dh,BYTE PTR [rax+0x1]
  44b3d1:	push   rax
  44b3d2:	add    BYTE PTR [rax],al
  44b3d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b3dc
  44b3da:	add    DWORD PTR [rax],esi
  44b3dc:	add    DWORD PTR [rdi],eax
  44b3de:	add    al,0x0
  44b3e0:	(bad)  
  44b3e1:	push   rdx
  44b3e2:	add    esi,DWORD PTR [rax]
  44b3e4:	add    ah,BYTE PTR [rax+0x1]
  44b3e7:	jo     0x44b3ea
  44b3e9:	(bad)  
  44b3ea:	add    al,0x0
  44b3ec:	(bad)  
  44b3ed:	jb     0x44b3f2
  44b3ef:	xor    BYTE PTR [rdx],al
  44b3f1:	(bad)  
  44b3f2:	add    DWORD PTR [rax+0x1],esi
  44b3f5:	add    BYTE PTR [rax],al
  44b3f7:	add    BYTE PTR [rcx],al
  44b3f9:	add    eax,0x32050002
  44b3fe:	add    DWORD PTR [rax],esi
  44b400:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b408
  44b406:	add    DWORD PTR [rax],esi
  44b408:	add    DWORD PTR [rax],eax
  44b40a:	add    BYTE PTR [rax],al
  44b40c:	add    DWORD PTR [rax],eax
  44b40e:	add    BYTE PTR [rax],al
  44b410:	add    DWORD PTR [rax],eax
  44b412:	add    BYTE PTR [rax],al
  44b414:	add    DWORD PTR [rax],eax
  44b416:	add    BYTE PTR [rax],al
  44b418:	add    DWORD PTR [rax],edx
  44b41a:	or     DWORD PTR [rax],eax
  44b41c:	adc    BYTE PTR [rdx+0xc],ah
  44b41f:	xor    BYTE PTR [rbx],cl
  44b421:	(bad)  
  44b422:	or     dh,BYTE PTR [rax+0x9]
  44b425:	push   rax
  44b426:	or     al,al
  44b428:	(bad)  
  44b429:	rol    BYTE PTR [rax+riz*8],1
  44b42c:	add    dh,al
  44b42e:	add    BYTE PTR [rax],al
  44b430:	add    DWORD PTR [rax],eax
  44b432:	add    BYTE PTR [rax],al
  44b434:	add    DWORD PTR [rax],eax
  44b436:	add    BYTE PTR [rax],al
  44b438:	add    DWORD PTR [rbx],edx
  44b43a:	or     al,BYTE PTR [rax]
  44b43c:	adc    eax,DWORD PTR [rcx]
  44b43e:	rex.WRB add BYTE PTR [r8+rsi*1],r9b
  44b442:	or     esp,DWORD PTR [rax+0xa]
  44b445:	jo     0x44b450
  44b447:	push   rax
  44b448:	or     al,al
  44b44a:	(bad)  
  44b44b:	rol    BYTE PTR [rax+riz*8],1
  44b44e:	add    dh,al
  44b450:	add    DWORD PTR [rdx],ecx
  44b452:	(bad)  
  44b453:	add    BYTE PTR [rdx],cl
  44b455:	xor    al,BYTE PTR [rsi]
  44b457:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4b8bd
  44b45d:	push   rax
  44b45e:	add    al,al
  44b460:	add    DWORD PTR [rdi+rax*1],ecx
  44b463:	add    BYTE PTR [rdx+rax*2],cl
  44b466:	or     BYTE PTR [rax],dh
  44b468:	(bad)  
  44b469:	(bad)  
  44b46a:	(bad)  
  44b46b:	jo     0x44b472
  44b46d:	push   rax
  44b46e:	add    al,0xc0
  44b470:	add    dl,al
  44b472:	add    BYTE PTR [rax],al
  44b474:	add    DWORD PTR [rsi],ecx
  44b476:	or     BYTE PTR [rax],al
  44b478:	(bad)  
  44b479:	xor    cl,BYTE PTR [rdx]
  44b47b:	xor    BYTE PTR [rcx],cl
  44b47d:	(bad)  
  44b47e:	or     BYTE PTR [rax+0x7],dh
  44b481:	push   rax
  44b482:	(bad)  
  44b483:	rol    BYTE PTR [rax+rdx*8],0x2
  44b487:	loopne 0x44b48a
  44b489:	or     al,BYTE PTR [rsi]
  44b48b:	add    BYTE PTR [rdx],cl
  44b48d:	xor    al,BYTE PTR [rsi]
  44b48f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4b8f5
  44b495:	push   rax
  44b496:	add    al,al
  44b498:	add    DWORD PTR [rdi],eax
  44b49a:	add    al,0x0
  44b49c:	(bad)  
  44b49d:	xor    al,BYTE PTR [rbx]
  44b49f:	xor    BYTE PTR [rdx],al
  44b4a1:	(bad)  
  44b4a2:	add    DWORD PTR [rax+0x1],esi
  44b4a5:	(bad)  
  44b4a6:	add    al,0x0
  44b4a8:	(bad)  
  44b4a9:	xor    al,BYTE PTR [rbx]
  44b4ab:	xor    BYTE PTR [rdx],al
  44b4ad:	(bad)  
  44b4ae:	add    DWORD PTR [rax+0x1],esi
  44b4b1:	(bad)  
  44b4b2:	or     BYTE PTR [rax],al
  44b4b4:	(bad)  
  44b4b5:	push   rdx
  44b4b6:	or     dh,BYTE PTR [rax]
  44b4b8:	or     DWORD PTR [rax+0x8],esp
  44b4bb:	jo     0x44b4c4
  44b4bd:	push   rax
  44b4be:	(bad)  
  44b4bf:	rol    BYTE PTR [rax+rdx*8],0x2
  44b4c3:	loopne 0x44b4c6
  44b4c5:	or     al,BYTE PTR [rsi]
  44b4c7:	add    BYTE PTR [rdx],cl
  44b4c9:	xchg   edx,eax
  44b4ca:	(bad)  
  44b4cb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4b931
  44b4d1:	push   rax
  44b4d2:	add    al,al
  44b4d4:	add    DWORD PTR [rdi],eax
  44b4d6:	add    al,0x0
  44b4d8:	(bad)  
  44b4d9:	xor    al,BYTE PTR [rbx]
  44b4db:	xor    BYTE PTR [rdx],al
  44b4dd:	(bad)  
  44b4de:	add    DWORD PTR [rax+0x1],esi
  44b4e1:	add    al,0x1
  44b4e3:	add    BYTE PTR [rdx+riz*2],al
  44b4e6:	add    BYTE PTR [rax],al
  44b4e8:	add    DWORD PTR [rax],eax
  44b4ea:	add    BYTE PTR [rax],al
  44b4ec:	add    DWORD PTR [rax],eax
  44b4ee:	add    BYTE PTR [rax],al
  44b4f0:	add    DWORD PTR [rax],eax
  44b4f2:	add    BYTE PTR [rax],al
  44b4f4:	add    DWORD PTR [rax],eax
  44b4f6:	add    BYTE PTR [rax],al
  44b4f8:	add    DWORD PTR [rax],eax
  44b4fa:	add    BYTE PTR [rax],al
  44b4fc:	add    DWORD PTR [rax],eax
  44b4fe:	add    BYTE PTR [rax],al
  44b500:	add    DWORD PTR [rax],eax
  44b502:	add    BYTE PTR [rax],al
  44b504:	add    DWORD PTR [rax],eax
  44b506:	add    BYTE PTR [rax],al
  44b508:	add    DWORD PTR [rax],eax
  44b50a:	add    BYTE PTR [rax],al
  44b50c:	add    DWORD PTR [rax],eax
  44b50e:	add    BYTE PTR [rax],al
  44b510:	add    DWORD PTR [rax],eax
  44b512:	add    BYTE PTR [rax],al
  44b514:	add    DWORD PTR [rcx+rax*1],eax
  44b517:	add    BYTE PTR [rdx+riz*2],al
  44b51a:	add    BYTE PTR [rax],al
  44b51c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b524
  44b522:	add    DWORD PTR [rax],esi
  44b524:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b52c
  44b52a:	add    DWORD PTR [rax],esi
  44b52c:	add    DWORD PTR [rax],edx
  44b52e:	or     DWORD PTR [rax],eax
  44b530:	adc    BYTE PTR [rdx+0x600b300c],ah
  44b536:	or     dh,BYTE PTR [rax+0x9]
  44b539:	push   rax
  44b53a:	or     al,al
  44b53c:	(bad)  
  44b53d:	rol    BYTE PTR [rax+riz*8],1
  44b540:	add    dh,al
  44b542:	add    BYTE PTR [rax],al
  44b544:	add    DWORD PTR [rcx+rax*1],eax
  44b547:	add    BYTE PTR [rdx+rax*2],al
  44b54a:	add    BYTE PTR [rax],al
  44b54c:	add    DWORD PTR [rax],edx
  44b54e:	or     DWORD PTR [rax],eax
  44b550:	adc    BYTE PTR [rdx+0xc],al
  44b553:	xor    BYTE PTR [rbx],cl
  44b555:	(bad)  
  44b556:	or     dh,BYTE PTR [rax+0x9]
  44b559:	push   rax
  44b55a:	or     al,al
  44b55c:	(bad)  
  44b55d:	rol    BYTE PTR [rax+riz*8],1
  44b560:	add    dh,al
  44b562:	add    BYTE PTR [rax],al
  44b564:	add    DWORD PTR [rax+rcx*1],edx
  44b567:	test   DWORD PTR [rbx+rax*1],edx
  44b56a:	or     al,0x82
  44b56c:	or     BYTE PTR [rax],dh
  44b56e:	(bad)  
  44b56f:	(bad)  
  44b570:	(bad)  
  44b571:	jo     0x44b578
  44b573:	rol    BYTE PTR [rbx],0xd0
  44b576:	add    DWORD PTR [rax+0x1],edx
  44b579:	or     BYTE PTR [rip+0x4820800],al        # 0x4c6bd7f
  44b57f:	xor    BYTE PTR [rbx],al
  44b581:	(bad)  
  44b582:	add    dh,BYTE PTR [rax+0x1]
  44b585:	push   rax
  44b586:	add    BYTE PTR [rax],al
  44b588:	add    DWORD PTR [rax],ecx
  44b58a:	add    eax,0x4620800
  44b58f:	xor    BYTE PTR [rbx],al
  44b591:	(bad)  
  44b592:	add    dh,BYTE PTR [rax+0x1]
  44b595:	push   rax
  44b596:	add    BYTE PTR [rax],al
  44b598:	add    DWORD PTR [rcx+rax*1],eax
  44b59b:	add    BYTE PTR [rdx+rax*4],al
  44b59e:	add    BYTE PTR [rax],al
  44b5a0:	add    DWORD PTR [rcx+rax*1],eax
  44b5a3:	add    BYTE PTR [rdx+riz*2],al
  44b5a6:	add    BYTE PTR [rax],al
  44b5a8:	add    DWORD PTR [rdi+rax*1],ecx
  44b5ab:	add    BYTE PTR [rdx+rax*2],cl
  44b5ae:	or     BYTE PTR [rax],dh
  44b5b0:	(bad)  
  44b5b1:	(bad)  
  44b5b2:	(bad)  
  44b5b3:	jo     0x44b5ba
  44b5b5:	push   rax
  44b5b6:	add    al,0xc0
  44b5b8:	add    dl,al
  44b5ba:	add    BYTE PTR [rax],al
  44b5bc:	add    DWORD PTR [rdx],ecx
  44b5be:	(bad)  
  44b5bf:	add    BYTE PTR [rdx],cl
  44b5c1:	jb     0x44b5c9
  44b5c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4ba29
  44b5c9:	push   rax
  44b5ca:	add    al,al
  44b5cc:	add    DWORD PTR [rdi+rax*1],ecx
  44b5cf:	add    BYTE PTR [rdx+rax*4],cl
  44b5d2:	or     BYTE PTR [rax],dh
  44b5d4:	(bad)  
  44b5d5:	(bad)  
  44b5d6:	(bad)  
  44b5d7:	jo     0x44b5de
  44b5d9:	push   rax
  44b5da:	add    al,0xc0
  44b5dc:	add    dl,al
  44b5de:	add    BYTE PTR [rax],al
  44b5e0:	add    DWORD PTR [rax],edx
  44b5e2:	or     DWORD PTR [rax],eax
  44b5e4:	adc    BYTE PTR [rdx+0x600b300c],al
  44b5ea:	or     dh,BYTE PTR [rax+0x9]
  44b5ed:	push   rax
  44b5ee:	or     al,al
  44b5f0:	(bad)  
  44b5f1:	rol    BYTE PTR [rax+riz*8],1
  44b5f4:	add    dh,al
  44b5f6:	add    BYTE PTR [rax],al
  44b5f8:	add    DWORD PTR [rax],ecx
  44b5fa:	add    eax,0x4820800
  44b5ff:	xor    BYTE PTR [rbx],al
  44b601:	(bad)  
  44b602:	add    dh,BYTE PTR [rax+0x1]
  44b605:	push   rax
  44b606:	add    BYTE PTR [rax],al
  44b608:	add    DWORD PTR [rax],ecx
  44b60a:	add    eax,0x4820800
  44b60f:	xor    BYTE PTR [rbx],al
  44b611:	(bad)  
  44b612:	add    dh,BYTE PTR [rax+0x1]
  44b615:	push   rax
  44b616:	add    BYTE PTR [rax],al
  44b618:	add    DWORD PTR [rdi],eax
  44b61a:	add    al,0x0
  44b61c:	(bad)  
  44b61d:	push   rdx
  44b61e:	add    esi,DWORD PTR [rax]
  44b620:	add    ah,BYTE PTR [rax+0x1]
  44b623:	jo     0x44b626
  44b625:	add    eax,0x32050002
  44b62a:	add    DWORD PTR [rax],esi
  44b62c:	add    DWORD PTR [rdi],eax
  44b62e:	add    al,0x0
  44b630:	(bad)  
  44b631:	mov    dl,0x3
  44b633:	xor    BYTE PTR [rdx],al
  44b635:	(bad)  
  44b636:	add    DWORD PTR [rax+0x1],esi
  44b639:	adc    al,0xa
  44b63b:	add    eax,0x140114
  44b640:	or     eax,0x9300a03
  44b645:	(bad)  
  44b646:	or     BYTE PTR [rax+0x7],dh
  44b649:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x224ba20
  44b650:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b658
  44b656:	add    DWORD PTR [rax],esi
  44b658:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b660
  44b65e:	add    DWORD PTR [rax],esi
  44b660:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b668
  44b666:	add    DWORD PTR [rax],esi
  44b668:	sbb    DWORD PTR [rdi],eax
  44b66a:	add    al,0x0
  44b66c:	(bad)  
  44b66d:	xor    al,BYTE PTR [rbx]
  44b66f:	xor    BYTE PTR [rdx],al
  44b671:	(bad)  
  44b672:	add    DWORD PTR [rax-0x30],esi
  44b675:	add    al,BYTE PTR [r8]
  44b678:	call   FWORD PTR [rbx+0x72f0141]
  44b67e:	add    eax,0xf0302ab
  44b683:	and    eax,0x370501c8
  44b688:	add    eax,0x4c0302ab
  44b68d:	addr32 enter 0x501,0xf1
  44b692:	add    DWORD PTR [rcx],edx
  44b694:	mov    al,0x2
  44b696:	add    BYTE PTR [rbx+0x502],bh
  44b69c:	(bad)
  44b69f:	xlat   BYTE PTR ds:[rbx]
  44b6a0:	add    al,BYTE PTR [rax]
  44b6a2:	rol    BYTE PTR [rdx],cl
  44b6a4:	add    eax,0x2e20000
  44b6a9:	(bad)  
  44b6aa:	add    BYTE PTR [rax],al
  44b6ac:	add    al,BYTE PTR [rax]
  44b6ae:	add    DWORD PTR [rbp+0x0],edi
  44b6b1:	jge    0x44b6b3
  44b6b3:	add    BYTE PTR [rax],al
  44b6b5:	add    BYTE PTR [rax],al
  44b6b7:	add    BYTE PTR [rax+0x1fffe09],dh
  44b6bd:	(bad)  
  44b6be:	add    al,0x0
  44b6c0:	(bad)  
  44b6c1:	rol    BYTE PTR [rbx],cl
  44b6c3:	xor    BYTE PTR [rdx],al
  44b6c5:	(bad)  
  44b6c6:	add    DWORD PTR [rax+0x1],esi
  44b6c9:	or     eax,0x10d0007
  44b6ce:	adc    al,BYTE PTR [rax]
  44b6d0:	(bad)  
  44b6d1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bb37
  44b6d7:	push   rax
  44b6d8:	add    al,al
  44b6da:	add    BYTE PTR [rax],al
  44b6dc:	add    DWORD PTR [rbx],edx
  44b6de:	or     al,BYTE PTR [rax]
  44b6e0:	adc    eax,DWORD PTR [rcx]
  44b6e2:	adc    eax,0xb300c00
  44b6e7:	(bad)  
  44b6e8:	or     dh,BYTE PTR [rax+0x9]
  44b6eb:	push   rax
  44b6ec:	or     al,al
  44b6ee:	(bad)  
  44b6ef:	rol    BYTE PTR [rax+riz*8],1
  44b6f2:	add    dh,al
  44b6f4:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x151b701
  44b6fa:	sbb    al,BYTE PTR [rax]
  44b6fc:	(bad)  
  44b6fd:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bb63
  44b703:	push   rax
  44b704:	add    al,al
  44b706:	add    BYTE PTR [rax],al
  44b708:	add    DWORD PTR [rax],ecx
  44b70a:	add    eax,0x4420800
  44b70f:	xor    BYTE PTR [rbx],al
  44b711:	(bad)  
  44b712:	add    dh,BYTE PTR [rax+0x1]
  44b715:	push   rax
  44b716:	add    BYTE PTR [rax],al
  44b718:	add    DWORD PTR [rsi],eax
  44b71a:	add    eax,DWORD PTR [rax]
  44b71c:	(bad)  
  44b71d:	(bad)  
  44b71f:	xor    BYTE PTR [rcx],al
  44b721:	(bad)  
  44b722:	add    BYTE PTR [rax],al
  44b724:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b72c
  44b72a:	add    DWORD PTR [rax],esi
  44b72c:	add    DWORD PTR [rcx+rax*1],eax
  44b72f:	add    BYTE PTR [rdx+riz*2],al
  44b732:	add    BYTE PTR [rax],al
  44b734:	add    DWORD PTR [rcx+rax*1],eax
  44b737:	add    BYTE PTR [rdx+riz*2],al
  44b73a:	add    BYTE PTR [rax],al
  44b73c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249b744
  44b742:	add    DWORD PTR [rax],esi
  44b744:	add    DWORD PTR [rdi],eax
  44b746:	add    al,0x0
  44b748:	(bad)  
  44b749:	xchg   edx,eax
  44b74a:	add    esi,DWORD PTR [rax]
  44b74c:	add    ah,BYTE PTR [rax+0x1]
  44b74f:	jo     0x44b752
  44b751:	or     al,BYTE PTR [rsi]
  44b753:	add    BYTE PTR [rdx],cl
  44b755:	jb     0x44b75d
  44b757:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bbbd
  44b75d:	push   rax
  44b75e:	add    al,al
  44b760:	add    DWORD PTR [rsi],eax
  44b762:	add    eax,DWORD PTR [rax]
  44b764:	(bad)  
  44b765:	movabs ds:0x501000060013002,al
  44b76e:	add    al,BYTE PTR [rax]
  44b770:	add    eax,0x1300192
  44b775:	add    eax,0x32050002
  44b77a:	add    DWORD PTR [rax],esi
  44b77c:	add    DWORD PTR [rcx+rax*1],eax
  44b77f:	add    BYTE PTR [rdx+riz*2],al
  44b782:	add    BYTE PTR [rax],al
  44b784:	add    DWORD PTR [rdi],eax
  44b786:	add    al,0x0
  44b788:	(bad)  
  44b789:	push   rdx
  44b78a:	add    esi,DWORD PTR [rax]
  44b78c:	add    ah,BYTE PTR [rax+0x1]
  44b78f:	jo     0x44b792
  44b791:	add    al,0x1
  44b793:	add    BYTE PTR [rdx+rax*2],al
  44b796:	add    BYTE PTR [rax],al
  44b798:	add    DWORD PTR [rbx],edx
  44b79a:	or     al,BYTE PTR [rax]
  44b79c:	adc    eax,DWORD PTR [rcx]
  44b79e:	adc    eax,DWORD PTR [rax]
  44b7a0:	or     al,0x30
  44b7a2:	or     esp,DWORD PTR [rax+0xa]
  44b7a5:	jo     0x44b7b0
  44b7a7:	push   rax
  44b7a8:	or     al,al
  44b7aa:	(bad)  
  44b7ab:	rol    BYTE PTR [rax+riz*8],1
  44b7ae:	add    dh,al
  44b7b0:	add    DWORD PTR [rbx],edx
  44b7b2:	or     al,BYTE PTR [rax]
  44b7b4:	adc    eax,DWORD PTR [rcx]
  44b7b6:	sbb    DWORD PTR [rax],eax
  44b7b8:	or     al,0x30
  44b7ba:	or     esp,DWORD PTR [rax+0xa]
  44b7bd:	jo     0x44b7c8
  44b7bf:	push   rax
  44b7c0:	or     al,al
  44b7c2:	(bad)  
  44b7c3:	rol    BYTE PTR [rax+riz*8],1
  44b7c6:	add    dh,al
  44b7c8:	add    DWORD PTR [rbx],ecx
  44b7ca:	(bad)  
  44b7cb:	add    BYTE PTR [rbx],cl
  44b7cd:	add    DWORD PTR [rcx],edx
  44b7cf:	add    BYTE PTR [rax+rsi*1],al
  44b7d2:	add    esp,DWORD PTR [rax+0x2]
  44b7d5:	jo     0x44b7d8
  44b7d7:	push   rax
  44b7d8:	sbb    DWORD PTR [rax],edx
  44b7da:	or     DWORD PTR [rax],eax
  44b7dc:	adc    dl,al
  44b7de:	or     al,0x30
  44b7e0:	or     esp,DWORD PTR [rax+0xa]
  44b7e3:	jo     0x44b7ee
  44b7e5:	push   rax
  44b7e6:	or     al,al
  44b7e8:	(bad)  
  44b7e9:	rol    BYTE PTR [rax+riz*8],1
  44b7ec:	add    dh,al
  44b7ee:	add    BYTE PTR [rax],al
  44b7f0:	rol    BYTE PTR [rcx+0x2],1
  44b7f3:	add    bh,bh
  44b7f5:	fwait
  44b7f6:	nop
  44b7f7:	add    DWORD PTR [rcx],eax
  44b7f9:	ja     0x44b816
  44b7fb:	add    eax,0xeb0312a9
  44b800:	add    DWORD PTR [rdi+0x50fdd06],edx
  44b806:	(bad)  
  44b807:	or     BYTE PTR [rip+0xffffffff8a0712b1],al        # 0xffffffff8a4bcabe
  44b80d:	or     BYTE PTR [rbx],ch
  44b80f:	cdq    
  44b810:	or     eax,0x8408dd07
  44b815:	add    al,0xdd
  44b817:	syscall 
  44b819:	retf   0x190d
  44b81c:	mov    BYTE PTR [rax*1-0x66a7f159],dl
  44b823:	or     eax,0x50fab07
  44b828:	mov    cl,0x12
  44b82a:	(bad)  
  44b82b:	(bad)  
  44b82c:	movlhps xmm3,xmm5
  44b82f:	syscall 
  44b831:	xchg   edi,eax
  44b832:	adc    BYTE PTR [rip+0xffffffffaa070d99],al        # 0xffffffffaa4bc5d1
  44b838:	adc    BYTE PTR [rdx],ch
  44b83a:	fisttp QWORD PTR [rdi]
  44b83c:	add    eax,0x992b10db
  44b841:	or     eax,0x6f119d07
  44b846:	fisttp QWORD PTR [rdi]
  44b848:	add    eax,0xbf2612c0
  44b84d:	adc    eax,DWORD PTR [rax]
  44b84f:	mov    dl,BYTE PTR [rbx]
  44b851:	add    eax,0x8f0013cf
  44b856:	adc    eax,DWORD PTR [rax+0x0]
  44b859:	add    dl,bl
  44b85b:	adc    eax,DWORD PTR [rip+0x13e60000]        # 0x142ab861
  44b861:	sbb    eax,0x9d051488
  44b866:	adc    al,0x5
  44b868:	lods   al,BYTE PTR ds:[rsi]
  44b869:	adc    al,0x5
  44b86b:	movabs ds:0x10002050fdd0514,al
  44b874:	jge    0x44b876
  44b876:	jge    0x44b87b
  44b878:	jns    0x44b87a
  44b87a:	add    BYTE PTR [rax],al
  44b87c:	hlt    
  44b87d:	(bad)  
  44b87e:	(bad)  
  44b87f:	inc    DWORD PTR [rax]
  44b881:	add    BYTE PTR [rax],al
  44b883:	add    ah,ah
  44b885:	(bad)  
  44b886:	(bad)  
  44b887:	inc    DWORD PTR [rcx]
  44b889:	add    BYTE PTR [rax],al
  44b88b:	add    BYTE PTR [rcx],al
  44b88d:	add    al,0x1
  44b88f:	add    BYTE PTR [rdx+riz*2],al
  44b892:	add    BYTE PTR [rax],al
  44b894:	add    DWORD PTR [rax],eax
  44b896:	add    BYTE PTR [rax],al
  44b898:	add    DWORD PTR [rax],eax
  44b89a:	add    BYTE PTR [rax],al
  44b89c:	add    DWORD PTR [rdi],eax
  44b89e:	add    al,0x0
  44b8a0:	(bad)  
  44b8a1:	xor    al,BYTE PTR [rbx]
  44b8a3:	xor    BYTE PTR [rdx],al
  44b8a5:	(bad)  
  44b8a6:	add    DWORD PTR [rax+0x1],esi
  44b8a9:	add    BYTE PTR [rax],al
  44b8ab:	add    BYTE PTR [rcx],al
  44b8ad:	add    al,0x1
  44b8af:	add    BYTE PTR [rdx+riz*2],al
  44b8b2:	add    BYTE PTR [rax],al
  44b8b4:	add    DWORD PTR [rsi],eax
  44b8b6:	add    eax,DWORD PTR [rax]
  44b8b8:	(bad)  
  44b8b9:	(bad)  
  44b8bb:	xor    BYTE PTR [rcx],al
  44b8bd:	(bad)  
  44b8be:	add    BYTE PTR [rax],al
  44b8c0:	add    DWORD PTR [rax],ecx
  44b8c2:	add    eax,0x4820800
  44b8c7:	xor    BYTE PTR [rbx],al
  44b8c9:	(bad)  
  44b8ca:	add    dh,BYTE PTR [rax+0x1]
  44b8cd:	push   rax
  44b8ce:	add    BYTE PTR [rax],al
  44b8d0:	add    DWORD PTR [rcx+rax*1],eax
  44b8d3:	add    BYTE PTR [rdx+riz*2],al
  44b8d6:	add    BYTE PTR [rax],al
  44b8d8:	add    DWORD PTR [rcx+rax*1],eax
  44b8db:	add    BYTE PTR [rdx+riz*2],al
  44b8de:	add    BYTE PTR [rax],al
  44b8e0:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9249b8e8
  44b8e6:	add    DWORD PTR [rax],esi
  44b8e8:	add    DWORD PTR [rax],ecx
  44b8ea:	add    eax,0x4420800
  44b8ef:	xor    BYTE PTR [rbx],al
  44b8f1:	(bad)  
  44b8f2:	add    dh,BYTE PTR [rax+0x1]
  44b8f5:	push   rax
  44b8f6:	add    BYTE PTR [rax],al
  44b8f8:	add    DWORD PTR [rax],eax
  44b8fa:	add    BYTE PTR [rax],al
  44b8fc:	add    DWORD PTR [rax],eax
  44b8fe:	add    BYTE PTR [rax],al
  44b900:	add    DWORD PTR [rax],ecx
  44b902:	add    eax,0x4420800
  44b907:	xor    BYTE PTR [rbx],al
  44b909:	(bad)  
  44b90a:	add    dh,BYTE PTR [rax+0x1]
  44b90d:	push   rax
  44b90e:	add    BYTE PTR [rax],al
  44b910:	add    DWORD PTR [rax],eax
  44b912:	add    BYTE PTR [rax],al
  44b914:	add    DWORD PTR [rax],ecx
  44b916:	add    eax,0x4620800
  44b91b:	xor    BYTE PTR [rbx],al
  44b91d:	(bad)  
  44b91e:	add    dh,BYTE PTR [rax+0x1]
  44b921:	push   rax
  44b922:	add    BYTE PTR [rax],al
  44b924:	add    DWORD PTR [rdx],ecx
  44b926:	add    eax,0x14010a00
  44b92b:	add    BYTE PTR [rbx],al
  44b92d:	xor    BYTE PTR [rdx],al
  44b92f:	(bad)  
  44b930:	add    DWORD PTR [rax+0x0],esi
  44b933:	add    BYTE PTR [rcx],al
  44b935:	add    al,0x1
  44b937:	add    BYTE PTR [rdx+riz*4],al
  44b93a:	add    BYTE PTR [rax],al
  44b93c:	add    DWORD PTR [rax],eax
  44b93e:	add    BYTE PTR [rax],al
  44b940:	add    DWORD PTR [rsi],eax
  44b942:	add    eax,DWORD PTR [rax]
  44b944:	(bad)  
  44b945:	rex.X add spl,BYTE PTR [rax+0x1]
  44b949:	jo     0x44b94b
  44b94b:	add    BYTE PTR [rcx],al
  44b94d:	(bad)  
  44b94e:	add    al,0x0
  44b950:	(bad)  
  44b951:	xchg   edx,eax
  44b952:	add    esi,DWORD PTR [rax]
  44b954:	add    ah,BYTE PTR [rax+0x1]
  44b957:	jo     0x44b95a
  44b959:	add    eax,0x32050002
  44b95e:	add    DWORD PTR [rax],esi
  44b960:	add    DWORD PTR [rax],eax
  44b962:	add    BYTE PTR [rax],al
  44b964:	add    DWORD PTR [rcx+rax*1],eax
  44b967:	add    BYTE PTR [rdx+rax*4],al
  44b96a:	add    BYTE PTR [rax],al
  44b96c:	add    DWORD PTR [rcx+rax*1],eax
  44b96f:	add    BYTE PTR [rdx+rax*2],al
  44b972:	add    BYTE PTR [rax],al
  44b974:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b97c
  44b97a:	add    DWORD PTR [rax],esi
  44b97c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249b984
  44b982:	add    DWORD PTR [rax+0x1],esi
  44b985:	or     eax,0x320d0507
  44b98a:	or     DWORD PTR [rbx],eax
  44b98c:	(bad)  
  44b98d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bdf3
  44b993:	rol    BYTE PTR [rcx],0x50
  44b996:	add    BYTE PTR [rax],al
  44b998:	add    DWORD PTR [rcx+rax*1],eax
  44b99b:	add    BYTE PTR [rdx+rax*2],al
  44b99e:	add    BYTE PTR [rax],al
  44b9a0:	add    DWORD PTR [rdi],eax
  44b9a2:	add    al,0x0
  44b9a4:	(bad)  
  44b9a5:	xor    al,BYTE PTR [rbx]
  44b9a7:	xor    BYTE PTR [rdx],al
  44b9a9:	(bad)  
  44b9aa:	add    DWORD PTR [rax+0x1],esi
  44b9ad:	or     al,BYTE PTR [rsi]
  44b9af:	add    BYTE PTR [rdx],cl
  44b9b1:	xor    al,BYTE PTR [rsi]
  44b9b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4be19
  44b9b9:	push   rax
  44b9ba:	add    al,al
  44b9bc:	add    DWORD PTR [rdx],ecx
  44b9be:	(bad)  
  44b9bf:	add    BYTE PTR [rdx],cl
  44b9c1:	xor    al,BYTE PTR [rsi]
  44b9c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4be29
  44b9c9:	push   rax
  44b9ca:	add    al,al
  44b9cc:	add    DWORD PTR [rax],eax
  44b9ce:	add    BYTE PTR [rax],al
  44b9d0:	add    DWORD PTR [rax],eax
  44b9d2:	add    BYTE PTR [rax],al
  44b9d4:	add    DWORD PTR [rdx],ecx
  44b9d6:	(bad)  
  44b9d7:	add    BYTE PTR [rdx],cl
  44b9d9:	push   rdx
  44b9da:	(bad)  
  44b9db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4be41
  44b9e1:	push   rax
  44b9e2:	add    al,al
  44b9e4:	add    DWORD PTR [rcx+rax*1],eax
  44b9e7:	add    BYTE PTR [rdx+rax*2],al
  44b9ea:	add    BYTE PTR [rax],al
  44b9ec:	add    DWORD PTR [rax],eax
  44b9ee:	add    BYTE PTR [rax],al
  44b9f0:	add    DWORD PTR [rax],eax
  44b9f2:	add    BYTE PTR [rax],al
  44b9f4:	add    DWORD PTR [rsi],eax
  44b9f6:	add    eax,DWORD PTR [rax]
  44b9f8:	(bad)  
  44b9f9:	(bad)  
  44b9fb:	xor    BYTE PTR [rcx],al
  44b9fd:	(bad)  
  44b9fe:	add    BYTE PTR [rax],al
  44ba00:	add    DWORD PTR [rax],eax
  44ba02:	add    BYTE PTR [rax],al
  44ba04:	add    DWORD PTR [rdi+rax*1],ecx
  44ba07:	add    BYTE PTR [rdx+riz*2],cl
  44ba0a:	or     BYTE PTR [rax],dh
  44ba0c:	(bad)  
  44ba0d:	(bad)  
  44ba0e:	(bad)  
  44ba0f:	jo     0x44ba16
  44ba11:	push   rax
  44ba12:	add    al,0xc0
  44ba14:	add    dl,al
  44ba16:	add    BYTE PTR [rax],al
  44ba18:	add    DWORD PTR [rdi],eax
  44ba1a:	add    al,0x0
  44ba1c:	(bad)  
  44ba1d:	xor    al,BYTE PTR [rbx]
  44ba1f:	xor    BYTE PTR [rdx],al
  44ba21:	(bad)  
  44ba22:	add    DWORD PTR [rax+0x1],esi
  44ba25:	add    al,0x1
  44ba27:	add    BYTE PTR [rdx+riz*2],al
  44ba2a:	add    BYTE PTR [rax],al
  44ba2c:	add    DWORD PTR [rax],eax
  44ba2e:	add    BYTE PTR [rax],al
  44ba30:	add    DWORD PTR [rcx+rax*1],eax
  44ba33:	add    BYTE PTR [rdx+riz*2],al
  44ba36:	add    BYTE PTR [rax],al
  44ba38:	add    DWORD PTR [rcx+rax*1],eax
  44ba3b:	add    BYTE PTR [rdx+riz*2],al
  44ba3e:	add    BYTE PTR [rax],al
  44ba40:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249ba48
  44ba46:	add    DWORD PTR [rax],esi
  44ba48:	add    DWORD PTR [rax],ecx
  44ba4a:	add    eax,0x4420800
  44ba4f:	xor    BYTE PTR [rbx],al
  44ba51:	(bad)  
  44ba52:	add    dh,BYTE PTR [rax+0x1]
  44ba55:	push   rax
  44ba56:	add    BYTE PTR [rax],al
  44ba58:	add    DWORD PTR [rcx+rax*1],eax
  44ba5b:	add    BYTE PTR [rdx+rax*2],al
  44ba5e:	add    BYTE PTR [rax],al
  44ba60:	add    DWORD PTR [rsi],eax
  44ba62:	add    eax,DWORD PTR [rax]
  44ba64:	(bad)  
  44ba65:	rex.X add sil,BYTE PTR [rax]
  44ba68:	add    DWORD PTR [rax+0x0],esp
  44ba6b:	add    BYTE PTR [rcx],al
  44ba6d:	adc    BYTE PTR [rcx],cl
  44ba6f:	add    BYTE PTR [rax],dl
  44ba71:	(bad)  
  44ba72:	or     al,0x30
  44ba74:	or     esp,DWORD PTR [rax+0xa]
  44ba77:	jo     0x44ba82
  44ba79:	push   rax
  44ba7a:	or     al,al
  44ba7c:	(bad)  
  44ba7d:	rol    BYTE PTR [rax+riz*8],1
  44ba80:	add    dh,al
  44ba82:	add    BYTE PTR [rax],al
  44ba84:	add    DWORD PTR [rsi],eax
  44ba86:	add    eax,DWORD PTR [rax]
  44ba88:	(bad)  
  44ba89:	(bad)  
  44ba8a:	add    dh,BYTE PTR [rax]
  44ba8c:	add    DWORD PTR [rax+0x0],esp
  44ba8f:	add    BYTE PTR [rcx],al
  44ba91:	adc    al,0x8
  44ba93:	test   DWORD PTR [rbx+rax*1],edx
  44ba96:	or     al,0x82
  44ba98:	or     BYTE PTR [rax],dh
  44ba9a:	(bad)  
  44ba9b:	(bad)  
  44ba9c:	(bad)  
  44ba9d:	jo     0x44baa4
  44ba9f:	rol    BYTE PTR [rbx],0xd0
  44baa2:	add    DWORD PTR [rax+0x1],edx
  44baa5:	(bad)  
  44baa6:	add    al,0x0
  44baa8:	(bad)  
  44baa9:	xor    al,BYTE PTR [rbx]
  44baab:	xor    BYTE PTR [rdx],al
  44baad:	(bad)  
  44baae:	add    DWORD PTR [rax+0x1],esi
  44bab1:	(bad)  
  44bab2:	add    al,0x0
  44bab4:	(bad)  
  44bab5:	xchg   edx,eax
  44bab6:	add    esi,DWORD PTR [rax]
  44bab8:	add    ah,BYTE PTR [rax+0x1]
  44babb:	jo     0x44babe
  44babd:	(bad)  
  44babe:	add    al,0x0
  44bac0:	(bad)  
  44bac1:	xchg   edx,eax
  44bac2:	add    esi,DWORD PTR [rax]
  44bac4:	add    ah,BYTE PTR [rax+0x1]
  44bac7:	jo     0x44baca
  44bac9:	or     BYTE PTR [rip+0x4420800],al        # 0x486c2cf
  44bacf:	xor    BYTE PTR [rbx],al
  44bad1:	(bad)  
  44bad2:	add    dh,BYTE PTR [rax+0x1]
  44bad5:	push   rax
  44bad6:	add    BYTE PTR [rax],al
  44bad8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bae0
  44bade:	add    DWORD PTR [rax],esi
  44bae0:	add    DWORD PTR [rsi],eax
  44bae2:	add    eax,DWORD PTR [rax]
  44bae4:	(bad)  
  44bae5:	rex.X add sil,BYTE PTR [rax]
  44bae8:	add    DWORD PTR [rax+0x0],esp
  44baeb:	add    BYTE PTR [rcx],al
  44baed:	(bad)  
  44baee:	add    eax,DWORD PTR [rax]
  44baf0:	(bad)  
  44baf1:	(bad)  
  44baf3:	xor    BYTE PTR [rcx],al
  44baf5:	(bad)  
  44baf6:	add    BYTE PTR [rax],al
  44baf8:	add    DWORD PTR [rdi],eax
  44bafa:	add    al,0x0
  44bafc:	(bad)  
  44bafd:	xor    al,BYTE PTR [rbx]
  44baff:	xor    BYTE PTR [rdx],al
  44bb01:	(bad)  
  44bb02:	add    DWORD PTR [rax+0x1],esi
  44bb05:	(bad)  
  44bb06:	add    al,0x0
  44bb08:	(bad)  
  44bb09:	xor    al,BYTE PTR [rbx]
  44bb0b:	xor    BYTE PTR [rdx],al
  44bb0d:	(bad)  
  44bb0e:	add    DWORD PTR [rax+0x1],esi
  44bb11:	add    al,0x1
  44bb13:	add    BYTE PTR [rdx+rax*2],al
  44bb16:	add    BYTE PTR [rax],al
  44bb18:	add    DWORD PTR [rcx+rax*1],eax
  44bb1b:	add    BYTE PTR [rdx+riz*2],al
  44bb1e:	add    BYTE PTR [rax],al
  44bb20:	add    DWORD PTR [rcx+rax*1],eax
  44bb23:	add    BYTE PTR [rdx+rax*2],al
  44bb26:	add    BYTE PTR [rax],al
  44bb28:	add    DWORD PTR [rdx],ecx
  44bb2a:	(bad)  
  44bb2b:	add    BYTE PTR [rdx],cl
  44bb2d:	jb     0x44bb35
  44bb2f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bf95
  44bb35:	push   rax
  44bb36:	add    al,al
  44bb38:	add    DWORD PTR [rdi],eax
  44bb3a:	add    al,0x0
  44bb3c:	(bad)  
  44bb3d:	jb     0x44bb42
  44bb3f:	xor    BYTE PTR [rdx],al
  44bb41:	(bad)  
  44bb42:	add    DWORD PTR [rax+0x1],esi
  44bb45:	add    al,0x1
  44bb47:	add    BYTE PTR [rdx+rax*2],al
  44bb4a:	add    BYTE PTR [rax],al
  44bb4c:	add    DWORD PTR [rip+0x320d0507],ecx        # 0x3251c059
  44bb52:	or     DWORD PTR [rbx],eax
  44bb54:	(bad)  
  44bb55:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4bfbb
  44bb5b:	rol    BYTE PTR [rcx],0x50
  44bb5e:	add    BYTE PTR [rax],al
  44bb60:	add    DWORD PTR [rax],eax
  44bb62:	add    BYTE PTR [rax],al
  44bb64:	add    DWORD PTR [rax+rcx*1],edx
  44bb67:	test   DWORD PTR [rbx+rax*1],edx
  44bb6a:	or     al,0x42
  44bb6c:	or     BYTE PTR [rax],dh
  44bb6e:	(bad)  
  44bb6f:	(bad)  
  44bb70:	(bad)  
  44bb71:	jo     0x44bb78
  44bb73:	rol    BYTE PTR [rbx],0xd0
  44bb76:	add    DWORD PTR [rax+0x1],edx
  44bb79:	or     al,BYTE PTR [rip+0x6320a05]        # 0x676c584
  44bb7f:	add    eax,DWORD PTR [rbx]
  44bb81:	xor    BYTE PTR [rdx],al
  44bb83:	(bad)  
  44bb84:	add    DWORD PTR [rax+0x0],edx
  44bb87:	add    BYTE PTR [rcx],al
  44bb89:	or     al,BYTE PTR [rip+0x6320a05]        # 0x676c594
  44bb8f:	add    eax,DWORD PTR [rbx]
  44bb91:	xor    BYTE PTR [rdx],al
  44bb93:	(bad)  
  44bb94:	add    DWORD PTR [rax+0x0],edx
  44bb97:	add    BYTE PTR [rcx],al
  44bb99:	add    BYTE PTR [rax],al
  44bb9b:	add    BYTE PTR [rcx],al
  44bb9d:	add    eax,0x32050002
  44bba2:	add    DWORD PTR [rax],esi
  44bba4:	add    DWORD PTR [rax],ecx
  44bba6:	add    eax,0x4620800
  44bbab:	xor    BYTE PTR [rbx],al
  44bbad:	(bad)  
  44bbae:	add    dh,BYTE PTR [rax+0x1]
  44bbb1:	push   rax
  44bbb2:	add    BYTE PTR [rax],al
  44bbb4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bbbc
  44bbba:	add    DWORD PTR [rax],esi
  44bbbc:	add    DWORD PTR [rax],ecx
  44bbbe:	add    eax,0x4620800
  44bbc3:	xor    BYTE PTR [rbx],al
  44bbc5:	(bad)  
  44bbc6:	add    dh,BYTE PTR [rax+0x1]
  44bbc9:	push   rax
  44bbca:	add    BYTE PTR [rax],al
  44bbcc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bbd4
  44bbd2:	add    DWORD PTR [rax],esi
  44bbd4:	add    DWORD PTR [rdx],ecx
  44bbd6:	(bad)  
  44bbd7:	add    BYTE PTR [rdx],cl
  44bbd9:	push   rdx
  44bbda:	(bad)  
  44bbdb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c041
  44bbe1:	push   rax
  44bbe2:	add    al,al
  44bbe4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bbec
  44bbea:	add    DWORD PTR [rax],esi
  44bbec:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bbf4
  44bbf2:	add    DWORD PTR [rax],esi
  44bbf4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bbfc
  44bbfa:	add    DWORD PTR [rax],esi
  44bbfc:	add    DWORD PTR [rax],ecx
  44bbfe:	add    eax,0x4820800
  44bc03:	xor    BYTE PTR [rbx],al
  44bc05:	(bad)  
  44bc06:	add    dh,BYTE PTR [rax+0x1]
  44bc09:	push   rax
  44bc0a:	add    BYTE PTR [rax],al
  44bc0c:	add    DWORD PTR [rax],edx
  44bc0e:	or     DWORD PTR [rax],eax
  44bc10:	adc    BYTE PTR [rdx+0x600b300c],al
  44bc16:	or     dh,BYTE PTR [rax+0x9]
  44bc19:	push   rax
  44bc1a:	or     al,al
  44bc1c:	(bad)  
  44bc1d:	rol    BYTE PTR [rax+riz*8],1
  44bc20:	add    dh,al
  44bc22:	add    BYTE PTR [rax],al
  44bc24:	add    DWORD PTR [rdi],eax
  44bc26:	add    al,0x0
  44bc28:	(bad)  
  44bc29:	xor    al,BYTE PTR [rbx]
  44bc2b:	xor    BYTE PTR [rdx],al
  44bc2d:	(bad)  
  44bc2e:	add    DWORD PTR [rax+0x1],esi
  44bc31:	add    eax,0x32050002
  44bc36:	add    DWORD PTR [rax],esi
  44bc38:	add    DWORD PTR [rdi+rax*1],ecx
  44bc3b:	add    BYTE PTR [rdx+riz*4],cl
  44bc3e:	or     BYTE PTR [rax],dh
  44bc40:	(bad)  
  44bc41:	(bad)  
  44bc42:	(bad)  
  44bc43:	jo     0x44bc4a
  44bc45:	push   rax
  44bc46:	add    al,0xc0
  44bc48:	add    dl,al
  44bc4a:	add    BYTE PTR [rax],al
  44bc4c:	add    DWORD PTR [rdi],eax
  44bc4e:	add    al,0x0
  44bc50:	(bad)  
  44bc51:	xor    al,BYTE PTR [rbx]
  44bc53:	xor    BYTE PTR [rdx],al
  44bc55:	(bad)  
  44bc56:	add    DWORD PTR [rax+0x1],esi
  44bc59:	or     BYTE PTR [rip+0x4820800],al        # 0x4c6c45f
  44bc5f:	xor    BYTE PTR [rbx],al
  44bc61:	(bad)  
  44bc62:	add    dh,BYTE PTR [rax+0x1]
  44bc65:	push   rax
  44bc66:	add    BYTE PTR [rax],al
  44bc68:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bc70
  44bc6e:	add    DWORD PTR [rax],esi
  44bc70:	add    DWORD PTR [rax],ecx
  44bc72:	add    eax,0x4a20800
  44bc77:	xor    BYTE PTR [rbx],al
  44bc79:	(bad)  
  44bc7a:	add    dh,BYTE PTR [rax+0x1]
  44bc7d:	push   rax
  44bc7e:	add    BYTE PTR [rax],al
  44bc80:	add    DWORD PTR [rax],ecx
  44bc82:	add    eax,0x4420800
  44bc87:	xor    BYTE PTR [rbx],al
  44bc89:	(bad)  
  44bc8a:	add    dh,BYTE PTR [rax+0x1]
  44bc8d:	push   rax
  44bc8e:	add    BYTE PTR [rax],al
  44bc90:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bc98
  44bc96:	add    DWORD PTR [rax],esi
  44bc98:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bca0
  44bc9e:	add    DWORD PTR [rax],esi
  44bca0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bca8
  44bca6:	add    DWORD PTR [rax],esi
  44bca8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bcb0
  44bcae:	add    DWORD PTR [rax],esi
  44bcb0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bcb8
  44bcb6:	add    DWORD PTR [rax],esi
  44bcb8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bcc0
  44bcbe:	add    DWORD PTR [rax],esi
  44bcc0:	add    DWORD PTR [rdi+rax*1],ecx
  44bcc3:	add    BYTE PTR [rdx+rax*4],cl
  44bcc6:	or     BYTE PTR [rax],dh
  44bcc8:	(bad)  
  44bcc9:	(bad)  
  44bcca:	(bad)  
  44bccb:	jo     0x44bcd2
  44bccd:	push   rax
  44bcce:	add    al,0xc0
  44bcd0:	add    dl,al
  44bcd2:	add    BYTE PTR [rax],al
  44bcd4:	add    DWORD PTR [rax],edx
  44bcd6:	or     DWORD PTR [rax],eax
  44bcd8:	adc    BYTE PTR [rdx+0x600b300c],ah
  44bcde:	or     dh,BYTE PTR [rax+0x9]
  44bce1:	push   rax
  44bce2:	or     al,al
  44bce4:	(bad)  
  44bce5:	rol    BYTE PTR [rax+riz*8],1
  44bce8:	add    dh,al
  44bcea:	add    BYTE PTR [rax],al
  44bcec:	add    DWORD PTR [rax],edx
  44bcee:	or     DWORD PTR [rax],eax
  44bcf0:	adc    dl,al
  44bcf2:	or     al,0x30
  44bcf4:	or     esp,DWORD PTR [rax+0xa]
  44bcf7:	jo     0x44bd02
  44bcf9:	push   rax
  44bcfa:	or     al,al
  44bcfc:	(bad)  
  44bcfd:	rol    BYTE PTR [rax+riz*8],1
  44bd00:	add    dh,al
  44bd02:	add    BYTE PTR [rax],al
  44bd04:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bd0c
  44bd0a:	add    DWORD PTR [rax],esi
  44bd0c:	add    DWORD PTR [rax],eax
  44bd0e:	add    BYTE PTR [rax],al
  44bd10:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bd18
  44bd16:	add    DWORD PTR [rax],esi
  44bd18:	add    DWORD PTR [rax],edx
  44bd1a:	or     DWORD PTR [rax],eax
  44bd1c:	adc    BYTE PTR [rdx+0x600b300c],al
  44bd22:	or     dh,BYTE PTR [rax+0x9]
  44bd25:	push   rax
  44bd26:	or     al,al
  44bd28:	(bad)  
  44bd29:	rol    BYTE PTR [rax+riz*8],1
  44bd2c:	add    dh,al
  44bd2e:	add    BYTE PTR [rax],al
  44bd30:	add    DWORD PTR [rcx+rax*1],eax
  44bd33:	add    BYTE PTR [rdx+riz*2],al
  44bd36:	add    BYTE PTR [rax],al
  44bd38:	add    DWORD PTR [rcx],eax
  44bd3a:	add    DWORD PTR [rax],eax
  44bd3c:	add    DWORD PTR [rax],esi
  44bd3e:	add    BYTE PTR [rax],al
  44bd40:	add    DWORD PTR [rax],eax
  44bd42:	add    BYTE PTR [rax],al
  44bd44:	add    DWORD PTR [rdx],ecx
  44bd46:	add    eax,0x2a010a00
  44bd4b:	add    BYTE PTR [rbx],al
  44bd4d:	xor    BYTE PTR [rdx],al
  44bd4f:	(bad)  
  44bd50:	add    DWORD PTR [rax+0x0],esi
  44bd53:	add    BYTE PTR [rcx],al
  44bd55:	or     DWORD PTR [rax+rax*1],eax
  44bd58:	or     DWORD PTR [rcx],eax
  44bd5a:	sub    DWORD PTR [rax],eax
  44bd5c:	add    dh,BYTE PTR [rax]
  44bd5e:	add    DWORD PTR [rax+0x1],esp
  44bd61:	or     al,BYTE PTR [rsi]
  44bd63:	add    BYTE PTR [rdx],cl
  44bd65:	xor    al,BYTE PTR [rsi]
  44bd67:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c1cd
  44bd6d:	push   rax
  44bd6e:	add    al,al
  44bd70:	add    DWORD PTR [rbx],ecx
  44bd72:	(bad)  
  44bd73:	add    BYTE PTR [rbx],cl
  44bd75:	add    DWORD PTR [rbx+0x0],ecx
  44bd78:	add    al,0x30
  44bd7a:	add    esp,DWORD PTR [rax+0x2]
  44bd7d:	jo     0x44bd80
  44bd7f:	push   rax
  44bd80:	add    DWORD PTR [rax],eax
  44bd82:	add    BYTE PTR [rax],al
  44bd84:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x151bd91
  44bd8a:	(bad)  
  44bd8b:	add    BYTE PTR [rsi],al
  44bd8d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c1f3
  44bd93:	push   rax
  44bd94:	add    al,al
  44bd96:	add    BYTE PTR [rax],al
  44bd98:	add    DWORD PTR [rax],eax
  44bd9a:	add    BYTE PTR [rax],al
  44bd9c:	add    DWORD PTR [rsi],eax
  44bd9e:	add    eax,DWORD PTR [rax]
  44bda0:	(bad)  
  44bda1:	rex.X add sil,BYTE PTR [rax]
  44bda4:	add    DWORD PTR [rax+0x0],esp
  44bda7:	add    BYTE PTR [rcx],al
  44bda9:	(bad)  
  44bdaa:	add    eax,DWORD PTR [rax]
  44bdac:	(bad)  
  44bdad:	(bad)  
  44bdaf:	xor    BYTE PTR [rcx],al
  44bdb1:	(bad)  
  44bdb2:	add    BYTE PTR [rax],al
  44bdb4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249bdbc
  44bdba:	add    DWORD PTR [rax],esi
  44bdbc:	add    DWORD PTR [rcx+rax*1],eax
  44bdbf:	add    BYTE PTR [rdx+riz*2],al
  44bdc2:	add    BYTE PTR [rax],al
  44bdc4:	add    DWORD PTR [rcx+rax*1],eax
  44bdc7:	add    BYTE PTR [rdx+rax*2],al
  44bdca:	add    BYTE PTR [rax],al
  44bdcc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249bdd4
  44bdd2:	add    DWORD PTR [rax],esi
  44bdd4:	add    DWORD PTR [rdx],ecx
  44bdd6:	(bad)  
  44bdd7:	add    BYTE PTR [rdx],cl
  44bdd9:	jb     0x44bde1
  44bddb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c241
  44bde1:	push   rax
  44bde2:	add    al,al
  44bde4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bdec
  44bdea:	add    DWORD PTR [rax],esi
  44bdec:	add    DWORD PTR [rcx+rax*1],eax
  44bdef:	add    BYTE PTR [rdx+riz*2],al
  44bdf2:	add    BYTE PTR [rax],al
  44bdf4:	add    DWORD PTR [rdi],eax
  44bdf6:	add    al,0x0
  44bdf8:	(bad)  
  44bdf9:	push   rdx
  44bdfa:	add    esi,DWORD PTR [rax]
  44bdfc:	add    ah,BYTE PTR [rax+0x1]
  44bdff:	jo     0x44be02
  44be01:	add    al,0x1
  44be03:	add    BYTE PTR [rdx+rax*2],al
  44be06:	add    BYTE PTR [rax],al
  44be08:	add    DWORD PTR [rsi],eax
  44be0a:	add    eax,DWORD PTR [rax]
  44be0c:	(bad)  
  44be0d:	rex.X add sil,BYTE PTR [rax]
  44be10:	add    DWORD PTR [rax+0x0],esp
  44be13:	add    BYTE PTR [rcx],al
  44be15:	add    BYTE PTR [rax],al
  44be17:	add    BYTE PTR [rcx],al
  44be19:	or     BYTE PTR [rip+0x4420800],al        # 0x486c61f
  44be1f:	xor    BYTE PTR [rbx],al
  44be21:	(bad)  
  44be22:	add    dh,BYTE PTR [rax+0x1]
  44be25:	push   rax
  44be26:	add    BYTE PTR [rax],al
  44be28:	add    DWORD PTR [rax],ecx
  44be2a:	add    eax,0x4420800
  44be2f:	xor    BYTE PTR [rbx],al
  44be31:	(bad)  
  44be32:	add    dh,BYTE PTR [rax+0x1]
  44be35:	push   rax
  44be36:	add    BYTE PTR [rax],al
  44be38:	add    DWORD PTR [rax],ecx
  44be3a:	add    eax,0x4620800
  44be3f:	xor    BYTE PTR [rbx],al
  44be41:	(bad)  
  44be42:	add    dh,BYTE PTR [rax+0x1]
  44be45:	push   rax
  44be46:	add    BYTE PTR [rax],al
  44be48:	add    DWORD PTR [rcx+rax*1],eax
  44be4b:	add    BYTE PTR [rdx+riz*2],al
  44be4e:	add    BYTE PTR [rax],al
  44be50:	add    DWORD PTR [rcx],eax
  44be52:	add    DWORD PTR [rax],eax
  44be54:	add    DWORD PTR [rax],esi
  44be56:	add    BYTE PTR [rax],al
  44be58:	add    DWORD PTR [rax],eax
  44be5a:	add    BYTE PTR [rax],al
  44be5c:	add    DWORD PTR [rax],ecx
  44be5e:	add    eax,0x4820800
  44be63:	xor    BYTE PTR [rbx],al
  44be65:	(bad)  
  44be66:	add    dh,BYTE PTR [rax+0x1]
  44be69:	push   rax
  44be6a:	add    BYTE PTR [rax],al
  44be6c:	add    DWORD PTR [rsi],eax
  44be6e:	add    eax,DWORD PTR [rax]
  44be70:	(bad)  
  44be71:	rex.X add sil,BYTE PTR [rax]
  44be74:	add    DWORD PTR [rax+0x0],esp
  44be77:	add    BYTE PTR [rcx],al
  44be79:	(bad)  
  44be7a:	add    al,0x0
  44be7c:	(bad)  
  44be7d:	push   rdx
  44be7e:	add    esi,DWORD PTR [rax]
  44be80:	add    ah,BYTE PTR [rax+0x1]
  44be83:	jo     0x44be86
  44be85:	add    al,0x1
  44be87:	add    BYTE PTR [rdx+riz*2],al
  44be8a:	add    BYTE PTR [rax],al
  44be8c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249be94
  44be92:	add    DWORD PTR [rax],esi
  44be94:	add    DWORD PTR [rax],ecx
  44be96:	add    eax,0x4620800
  44be9b:	xor    BYTE PTR [rbx],al
  44be9d:	(bad)  
  44be9e:	add    dh,BYTE PTR [rax+0x1]
  44bea1:	push   rax
  44bea2:	add    BYTE PTR [rax],al
  44bea4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249beac
  44beaa:	add    DWORD PTR [rax],esi
  44beac:	add    DWORD PTR [rcx+rax*1],eax
  44beaf:	add    BYTE PTR [rdx+rax*2],al
  44beb2:	add    BYTE PTR [rax],al
  44beb4:	add    DWORD PTR [rcx+rax*1],eax
  44beb7:	add    BYTE PTR [rdx+rax*4],al
  44beba:	add    BYTE PTR [rax],al
  44bebc:	add    DWORD PTR [rax],eax
  44bebe:	add    BYTE PTR [rax],al
  44bec0:	add    DWORD PTR [rax],ecx
  44bec2:	add    eax,0x4820800
  44bec7:	xor    BYTE PTR [rbx],al
  44bec9:	(bad)  
  44beca:	add    dh,BYTE PTR [rax+0x1]
  44becd:	push   rax
  44bece:	add    BYTE PTR [rax],al
  44bed0:	add    DWORD PTR [rcx+rax*1],eax
  44bed3:	add    BYTE PTR [rdx+rax*2],al
  44bed6:	add    BYTE PTR [rax],al
  44bed8:	add    DWORD PTR [rcx+rax*1],eax
  44bedb:	add    BYTE PTR [rdx+rax*2],al
  44bede:	add    BYTE PTR [rax],al
  44bee0:	add    DWORD PTR [rdx],ecx
  44bee2:	(bad)  
  44bee3:	add    BYTE PTR [rdx],cl
  44bee5:	push   rdx
  44bee6:	(bad)  
  44bee7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c34d
  44beed:	push   rax
  44beee:	add    al,al
  44bef0:	add    DWORD PTR [rcx+rax*1],eax
  44bef3:	add    BYTE PTR [rdx+rax*2],al
  44bef6:	add    BYTE PTR [rax],al
  44bef8:	add    DWORD PTR [rcx+rax*1],eax
  44befb:	add    BYTE PTR [rdx+riz*2],al
  44befe:	add    BYTE PTR [rax],al
  44bf00:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249bf08
  44bf06:	add    DWORD PTR [rax],esi
  44bf08:	add    DWORD PTR [rdi],eax
  44bf0a:	add    al,0x0
  44bf0c:	(bad)  
  44bf0d:	push   rdx
  44bf0e:	add    esi,DWORD PTR [rax]
  44bf10:	add    ah,BYTE PTR [rax+0x1]
  44bf13:	jo     0x44bf16
  44bf15:	adc    DWORD PTR [rcx],ecx
  44bf17:	add    BYTE PTR [rcx],dl
  44bf19:	add    DWORD PTR [rdx],esp
  44bf1b:	add    BYTE PTR [rdx],cl
  44bf1d:	xor    BYTE PTR [rcx],cl
  44bf1f:	(bad)  
  44bf20:	or     BYTE PTR [rax+0x7],dh
  44bf23:	push   rax
  44bf24:	(bad)  
  44bf25:	rol    BYTE PTR [rax+rdx*8],0x2
  44bf29:	loopne 0x44bf2b
  44bf2b:	add    BYTE PTR [rcx],al
  44bf2d:	add    eax,0x32050002
  44bf32:	add    DWORD PTR [rax],esi
  44bf34:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x151bf41
  44bf3a:	sbb    BYTE PTR [rax],al
  44bf3c:	(bad)  
  44bf3d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c3a3
  44bf43:	push   rax
  44bf44:	add    al,al
  44bf46:	add    BYTE PTR [rax],al
  44bf48:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bf50
  44bf4e:	add    DWORD PTR [rax],esi
  44bf50:	add    DWORD PTR [rax],edx
  44bf52:	or     DWORD PTR [rax],eax
  44bf54:	adc    BYTE PTR [rdx+0xc],al
  44bf57:	xor    BYTE PTR [rbx],cl
  44bf59:	(bad)  
  44bf5a:	or     dh,BYTE PTR [rax+0x9]
  44bf5d:	push   rax
  44bf5e:	or     al,al
  44bf60:	(bad)  
  44bf61:	rol    BYTE PTR [rax+riz*8],1
  44bf64:	add    dh,al
  44bf66:	add    BYTE PTR [rax],al
  44bf68:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9249bf70
  44bf6e:	add    DWORD PTR [rax],esi
  44bf70:	add    DWORD PTR [rsi],ecx
  44bf72:	or     BYTE PTR [rax],al
  44bf74:	(bad)  
  44bf75:	jb     0x44bf81
  44bf77:	xor    BYTE PTR [rcx],cl
  44bf79:	(bad)  
  44bf7a:	or     BYTE PTR [rax+0x7],dh
  44bf7d:	push   rax
  44bf7e:	(bad)  
  44bf7f:	rol    BYTE PTR [rax+rdx*8],0x2
  44bf83:	loopne 0x44bf86
  44bf85:	(bad)  
  44bf86:	add    al,0x0
  44bf88:	(bad)  
  44bf89:	xor    al,BYTE PTR [rbx]
  44bf8b:	xor    BYTE PTR [rdx],al
  44bf8d:	(bad)  
  44bf8e:	add    DWORD PTR [rax+0x1],esi
  44bf91:	or     al,0x7
  44bf93:	add    BYTE PTR [rdx+rax*2],cl
  44bf96:	or     BYTE PTR [rax],dh
  44bf98:	(bad)  
  44bf99:	(bad)  
  44bf9a:	(bad)  
  44bf9b:	jo     0x44bfa2
  44bf9d:	push   rax
  44bf9e:	add    al,0xc0
  44bfa0:	add    dl,al
  44bfa2:	add    BYTE PTR [rax],al
  44bfa4:	add    DWORD PTR [rdi+rax*1],ecx
  44bfa7:	add    BYTE PTR [rdx+rax*4],cl
  44bfaa:	or     BYTE PTR [rax],dh
  44bfac:	(bad)  
  44bfad:	(bad)  
  44bfae:	(bad)  
  44bfaf:	jo     0x44bfb6
  44bfb1:	push   rax
  44bfb2:	add    al,0xc0
  44bfb4:	add    dl,al
  44bfb6:	add    BYTE PTR [rax],al
  44bfb8:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x151bfc5
  44bfbe:	test   BYTE PTR [rax],al
  44bfc0:	(bad)  
  44bfc1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c427
  44bfc7:	push   rax
  44bfc8:	add    al,al
  44bfca:	add    BYTE PTR [rax],al
  44bfcc:	add    DWORD PTR [rax],ecx
  44bfce:	add    eax,DWORD PTR [rax]
  44bfd0:	or     BYTE PTR [rcx],al
  44bfd2:	test   BYTE PTR [rax],al
  44bfd4:	add    DWORD PTR [rax],esi
  44bfd6:	add    BYTE PTR [rax],al
  44bfd8:	add    DWORD PTR [rax],ecx
  44bfda:	add    eax,0x4420800
  44bfdf:	xor    BYTE PTR [rbx],al
  44bfe1:	(bad)  
  44bfe2:	add    dh,BYTE PTR [rax+0x1]
  44bfe5:	push   rax
  44bfe6:	add    BYTE PTR [rax],al
  44bfe8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249bff0
  44bfee:	add    DWORD PTR [rax],esi
  44bff0:	add    DWORD PTR [rcx],ecx
  44bff2:	add    al,0x0
  44bff4:	or     DWORD PTR [rcx],eax
  44bff6:	test   DWORD PTR [rax],eax
  44bff8:	add    dh,BYTE PTR [rax]
  44bffa:	add    DWORD PTR [rax+0x1],esp
  44bffd:	or     al,BYTE PTR [rsi]
  44bfff:	add    BYTE PTR [rdx],cl
  44c001:	jb     0x44c009
  44c003:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c469
  44c009:	push   rax
  44c00a:	add    al,al
  44c00c:	add    DWORD PTR [rax],ebx
  44c00e:	or     al,BYTE PTR [rbp-0x7deffce8]
  44c014:	or     al,0x30
  44c016:	or     esp,DWORD PTR [rax+0xa]
  44c019:	jo     0x44c024
  44c01b:	rol    BYTE PTR [rdi],0xd0
  44c01e:	add    eax,0x1f003e0
  44c023:	push   rax
  44c024:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x5251c531
  44c02a:	or     DWORD PTR [rbx],eax
  44c02c:	(bad)  
  44c02d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c493
  44c033:	rol    BYTE PTR [rcx],0x50
  44c036:	add    BYTE PTR [rax],al
  44c038:	add    DWORD PTR [rax],ecx
  44c03a:	add    eax,0x4420800
  44c03f:	xor    BYTE PTR [rbx],al
  44c041:	(bad)  
  44c042:	add    dh,BYTE PTR [rax+0x1]
  44c045:	push   rax
  44c046:	add    BYTE PTR [rax],al
  44c048:	add    DWORD PTR [rsi],eax
  44c04a:	add    eax,DWORD PTR [rax]
  44c04c:	(bad)  
  44c04d:	rex.X add sil,BYTE PTR [rax]
  44c050:	add    DWORD PTR [rax+0x0],esp
  44c053:	add    BYTE PTR [rcx],al
  44c055:	add    al,0x1
  44c057:	add    BYTE PTR [rdx+rax*2],al
  44c05a:	add    BYTE PTR [rax],al
  44c05c:	add    DWORD PTR [rax],eax
  44c05e:	add    BYTE PTR [rax],al
  44c060:	add    DWORD PTR [rax],eax
  44c062:	add    BYTE PTR [rax],al
  44c064:	add    DWORD PTR [rax],eax
  44c066:	add    BYTE PTR [rax],al
  44c068:	add    DWORD PTR [rdi],eax
  44c06a:	add    al,0x0
  44c06c:	(bad)  
  44c06d:	push   rdx
  44c06e:	add    esi,DWORD PTR [rax]
  44c070:	add    ah,BYTE PTR [rax+0x1]
  44c073:	jo     0x44c076
  44c075:	(bad)  
  44c076:	add    eax,DWORD PTR [rax]
  44c078:	(bad)  
  44c079:	(bad)  
  44c07a:	add    dh,BYTE PTR [rax]
  44c07c:	add    DWORD PTR [rax+0x0],esp
  44c07f:	add    BYTE PTR [rcx],al
  44c081:	(bad)  
  44c082:	add    eax,DWORD PTR [rax]
  44c084:	(bad)  
  44c085:	(bad)  
  44c087:	xor    BYTE PTR [rcx],al
  44c089:	(bad)  
  44c08a:	add    BYTE PTR [rax],al
  44c08c:	add    DWORD PTR [rbx],edx
  44c08e:	or     al,BYTE PTR [rax]
  44c090:	adc    eax,DWORD PTR [rcx]
  44c092:	adc    eax,0xb300c00
  44c097:	(bad)  
  44c098:	or     dh,BYTE PTR [rax+0x9]
  44c09b:	push   rax
  44c09c:	or     al,al
  44c09e:	(bad)  
  44c09f:	rol    BYTE PTR [rax+riz*8],1
  44c0a2:	add    dh,al
  44c0a4:	add    DWORD PTR [rbx],ebx
  44c0a6:	or     eax,DWORD PTR [rbp+0x113031b]
  44c0ac:	adc    DWORD PTR [rax],eax
  44c0ae:	or     al,0x30
  44c0b0:	or     esp,DWORD PTR [rax+0xa]
  44c0b3:	jo     0x44c0be
  44c0b5:	rol    BYTE PTR [rdi],0xd0
  44c0b8:	add    eax,0x1f003e0
  44c0bd:	push   rax
  44c0be:	add    BYTE PTR [rax],al
  44c0c0:	add    DWORD PTR [rcx],ecx
  44c0c2:	add    al,0x0
  44c0c4:	or     DWORD PTR [rcx],eax
  44c0c6:	test   DWORD PTR [rax],eax
  44c0c8:	add    dh,BYTE PTR [rax]
  44c0ca:	add    DWORD PTR [rax+0x1],esp
  44c0cd:	adc    ecx,DWORD PTR [rdx]
  44c0cf:	add    BYTE PTR [rbx],dl
  44c0d1:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb74ccd7
  44c0d7:	(bad)  
  44c0d8:	or     dh,BYTE PTR [rax+0x9]
  44c0db:	push   rax
  44c0dc:	or     al,al
  44c0de:	(bad)  
  44c0df:	rol    BYTE PTR [rax+riz*8],1
  44c0e2:	add    dh,al
  44c0e4:	add    DWORD PTR [rax],edx
  44c0e6:	or     DWORD PTR [rax],eax
  44c0e8:	adc    dl,al
  44c0ea:	or     al,0x30
  44c0ec:	or     esp,DWORD PTR [rax+0xa]
  44c0ef:	jo     0x44c0fa
  44c0f1:	push   rax
  44c0f2:	or     al,al
  44c0f4:	(bad)  
  44c0f5:	rol    BYTE PTR [rax+riz*8],1
  44c0f8:	add    dh,al
  44c0fa:	add    BYTE PTR [rax],al
  44c0fc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c104
  44c102:	add    DWORD PTR [rax],esi
  44c104:	add    DWORD PTR [rax],edx
  44c106:	or     DWORD PTR [rax],eax
  44c108:	adc    dl,ah
  44c10a:	or     al,0x30
  44c10c:	or     esp,DWORD PTR [rax+0xa]
  44c10f:	jo     0x44c11a
  44c111:	push   rax
  44c112:	or     al,al
  44c114:	(bad)  
  44c115:	rol    BYTE PTR [rax+riz*8],1
  44c118:	add    dh,al
  44c11a:	add    BYTE PTR [rax],al
  44c11c:	add    DWORD PTR [rdi],eax
  44c11e:	add    al,0x0
  44c120:	(bad)  
  44c121:	mov    dl,0x3
  44c123:	xor    BYTE PTR [rdx],al
  44c125:	(bad)  
  44c126:	add    DWORD PTR [rax+0x1],esi
  44c129:	adc    ecx,DWORD PTR [rdx]
  44c12b:	add    BYTE PTR [rbx],dl
  44c12d:	add    DWORD PTR [rip+0xb300c00],edx        # 0xb74cd33
  44c133:	(bad)  
  44c134:	or     dh,BYTE PTR [rax+0x9]
  44c137:	push   rax
  44c138:	or     al,al
  44c13a:	(bad)  
  44c13b:	rol    BYTE PTR [rax+riz*8],1
  44c13e:	add    dh,al
  44c140:	add    DWORD PTR [rcx+rax*1],eax
  44c143:	add    BYTE PTR [rdx+rax*2],al
  44c146:	add    BYTE PTR [rax],al
  44c148:	add    DWORD PTR [rax],edx
  44c14a:	or     DWORD PTR [rax],eax
  44c14c:	adc    BYTE PTR [rdx+0xc],ah
  44c14f:	xor    BYTE PTR [rbx],cl
  44c151:	(bad)  
  44c152:	or     dh,BYTE PTR [rax+0x9]
  44c155:	push   rax
  44c156:	or     al,al
  44c158:	(bad)  
  44c159:	rol    BYTE PTR [rax+riz*8],1
  44c15c:	add    dh,al
  44c15e:	add    BYTE PTR [rax],al
  44c160:	add    DWORD PTR [rdi],eax
  44c162:	add    al,0x0
  44c164:	(bad)  
  44c165:	xor    al,BYTE PTR [rbx]
  44c167:	xor    BYTE PTR [rdx],al
  44c169:	(bad)  
  44c16a:	add    DWORD PTR [rax+0x1],esi
  44c16d:	(bad)  
  44c16e:	add    al,0x0
  44c170:	(bad)  
  44c171:	push   rdx
  44c172:	add    esi,DWORD PTR [rax]
  44c174:	add    ah,BYTE PTR [rax+0x1]
  44c177:	jo     0x44c17a
  44c179:	adc    BYTE PTR [rcx],cl
  44c17b:	add    BYTE PTR [rax],dl
  44c17d:	movabs ds:0x5009700a600b300c,al
  44c186:	or     al,al
  44c188:	(bad)  
  44c189:	rol    BYTE PTR [rax+riz*8],1
  44c18c:	add    dh,al
  44c18e:	add    BYTE PTR [rax],al
  44c190:	add    DWORD PTR [rdx],ecx
  44c192:	(bad)  
  44c193:	add    BYTE PTR [rdx],cl
  44c195:	jb     0x44c19d
  44c197:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c5fd
  44c19d:	push   rax
  44c19e:	add    al,al
  44c1a0:	add    DWORD PTR [rax],ecx
  44c1a2:	add    eax,0x4620800
  44c1a7:	xor    BYTE PTR [rbx],al
  44c1a9:	(bad)  
  44c1aa:	add    dh,BYTE PTR [rax+0x1]
  44c1ad:	push   rax
  44c1ae:	add    BYTE PTR [rax],al
  44c1b0:	add    DWORD PTR [rcx+rax*1],eax
  44c1b3:	add    BYTE PTR [rdx+riz*2],al
  44c1b6:	add    BYTE PTR [rax],al
  44c1b8:	add    DWORD PTR [rbx],edx
  44c1ba:	or     al,BYTE PTR [rax]
  44c1bc:	adc    eax,DWORD PTR [rcx]
  44c1be:	adc    DWORD PTR [rax],eax
  44c1c0:	or     al,0x30
  44c1c2:	or     esp,DWORD PTR [rax+0xa]
  44c1c5:	jo     0x44c1d0
  44c1c7:	push   rax
  44c1c8:	or     al,al
  44c1ca:	(bad)  
  44c1cb:	rol    BYTE PTR [rax+riz*8],1
  44c1ce:	add    dh,al
  44c1d0:	add    DWORD PTR [rcx+rax*1],eax
  44c1d3:	add    BYTE PTR [rdx+riz*2],al
  44c1d6:	add    BYTE PTR [rax],al
  44c1d8:	add    DWORD PTR [rcx+rax*1],eax
  44c1db:	add    BYTE PTR [rdx+riz*2],al
  44c1de:	add    BYTE PTR [rax],al
  44c1e0:	add    DWORD PTR [rcx+rax*1],eax
  44c1e3:	add    BYTE PTR [rdx+riz*2],al
  44c1e6:	add    BYTE PTR [rax],al
  44c1e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c1f0
  44c1ee:	add    DWORD PTR [rax],esi
  44c1f0:	add    DWORD PTR [rcx+rax*1],eax
  44c1f3:	add    BYTE PTR [rdx+riz*2],al
  44c1f6:	add    BYTE PTR [rax],al
  44c1f8:	add    DWORD PTR [rcx+rax*1],eax
  44c1fb:	add    BYTE PTR [rdx+riz*2],al
  44c1fe:	add    BYTE PTR [rax],al
  44c200:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c208
  44c206:	add    DWORD PTR [rax],esi
  44c208:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c210
  44c20e:	add    DWORD PTR [rax],esi
  44c210:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c218
  44c216:	add    DWORD PTR [rax],esi
  44c218:	add    DWORD PTR [rsi],eax
  44c21a:	add    eax,DWORD PTR [rax]
  44c21c:	(bad)  
  44c21d:	rex.X add sil,BYTE PTR [rax]
  44c220:	add    DWORD PTR [rax+0x0],esp
  44c223:	add    BYTE PTR [rcx],al
  44c225:	add    BYTE PTR [rax],al
  44c227:	add    BYTE PTR [rcx],al
  44c229:	add    BYTE PTR [rax],al
  44c22b:	add    BYTE PTR [rcx],al
  44c22d:	add    al,0x1
  44c22f:	add    BYTE PTR [rdx+rax*2],al
  44c232:	add    BYTE PTR [rax],al
  44c234:	add    DWORD PTR [rcx+rax*1],eax
  44c237:	add    BYTE PTR [rdx+riz*2],al
  44c23a:	add    BYTE PTR [rax],al
  44c23c:	add    DWORD PTR [rcx+rax*1],eax
  44c23f:	add    BYTE PTR [rdx+riz*2],al
  44c242:	add    BYTE PTR [rax],al
  44c244:	add    DWORD PTR [rip+0x72050002],eax        # 0x7249c24c
  44c24a:	add    DWORD PTR [rax],esi
  44c24c:	add    DWORD PTR [rsi],eax
  44c24e:	add    eax,DWORD PTR [rax]
  44c250:	(bad)  
  44c251:	rex.X add sil,BYTE PTR [rax]
  44c254:	add    DWORD PTR [rax+0x0],esp
  44c257:	add    BYTE PTR [rcx],al
  44c259:	adc    BYTE PTR [rcx],cl
  44c25b:	add    BYTE PTR [rax],dl
  44c25d:	(bad)  
  44c25e:	or     al,0x30
  44c260:	or     esp,DWORD PTR [rax+0xa]
  44c263:	jo     0x44c26e
  44c265:	push   rax
  44c266:	or     al,al
  44c268:	(bad)  
  44c269:	rol    BYTE PTR [rax+riz*8],1
  44c26c:	add    dh,al
  44c26e:	add    BYTE PTR [rax],al
  44c270:	add    DWORD PTR [rsi],eax
  44c272:	add    eax,DWORD PTR [rax]
  44c274:	(bad)  
  44c275:	rex.X add sil,BYTE PTR [rax]
  44c278:	add    DWORD PTR [rax+0x0],esp
  44c27b:	add    BYTE PTR [rcx],al
  44c27d:	(bad)  
  44c27e:	add    eax,DWORD PTR [rax]
  44c280:	(bad)  
  44c281:	rex.X add sil,BYTE PTR [rax]
  44c284:	add    DWORD PTR [rax+0x0],esp
  44c287:	add    BYTE PTR [rcx],al
  44c289:	(bad)  
  44c28a:	add    eax,DWORD PTR [rax]
  44c28c:	(bad)  
  44c28d:	rex.X add sil,BYTE PTR [rax]
  44c290:	add    DWORD PTR [rax+0x0],esp
  44c293:	add    BYTE PTR [rcx],al
  44c295:	add    BYTE PTR [rax],al
  44c297:	add    BYTE PTR [rcx],al
  44c299:	add    BYTE PTR [rax],al
  44c29b:	add    BYTE PTR [rcx],al
  44c29d:	add    BYTE PTR [rax],al
  44c29f:	add    BYTE PTR [rcx],al
  44c2a1:	add    BYTE PTR [rax],al
  44c2a3:	add    BYTE PTR [rcx],al
  44c2a5:	add    BYTE PTR [rax],al
  44c2a7:	add    BYTE PTR [rcx],al
  44c2a9:	add    BYTE PTR [rax],al
  44c2ab:	add    BYTE PTR [rcx],al
  44c2ad:	add    BYTE PTR [rax],al
  44c2af:	add    BYTE PTR [rcx],al
  44c2b1:	add    BYTE PTR [rax],al
  44c2b3:	add    BYTE PTR [rcx],al
  44c2b5:	add    BYTE PTR [rax],al
  44c2b7:	add    BYTE PTR [rcx],al
  44c2b9:	or     al,BYTE PTR [rsi]
  44c2bb:	add    BYTE PTR [rdx],cl
  44c2bd:	push   rdx
  44c2be:	(bad)  
  44c2bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c725
  44c2c5:	push   rax
  44c2c6:	add    al,al
  44c2c8:	add    DWORD PTR [rdx],ecx
  44c2ca:	(bad)  
  44c2cb:	add    BYTE PTR [rdx],cl
  44c2cd:	xor    al,BYTE PTR [rsi]
  44c2cf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c735
  44c2d5:	push   rax
  44c2d6:	add    al,al
  44c2d8:	add    DWORD PTR [rax],eax
  44c2da:	add    BYTE PTR [rax],al
  44c2dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c2e4
  44c2e2:	add    DWORD PTR [rax],esi
  44c2e4:	add    DWORD PTR [rax],eax
  44c2e6:	add    BYTE PTR [rax],al
  44c2e8:	add    DWORD PTR [rax],eax
  44c2ea:	add    BYTE PTR [rax],al
  44c2ec:	add    DWORD PTR [rax],edx
  44c2ee:	or     DWORD PTR [rax],eax
  44c2f0:	adc    BYTE PTR [rdx+0x600b300c],ah
  44c2f6:	or     dh,BYTE PTR [rax+0x9]
  44c2f9:	push   rax
  44c2fa:	or     al,al
  44c2fc:	(bad)  
  44c2fd:	rol    BYTE PTR [rax+riz*8],1
  44c300:	add    dh,al
  44c302:	add    BYTE PTR [rax],al
  44c304:	add    DWORD PTR [rax],ebx
  44c306:	or     al,BYTE PTR [rbp-0x7deffce8]
  44c30c:	or     al,0x30
  44c30e:	or     esp,DWORD PTR [rax+0xa]
  44c311:	jo     0x44c31c
  44c313:	rol    BYTE PTR [rdi],0xd0
  44c316:	add    eax,0x1f003e0
  44c31b:	push   rax
  44c31c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c324
  44c322:	add    DWORD PTR [rax],esi
  44c324:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c32c
  44c32a:	add    DWORD PTR [rax],esi
  44c32c:	add    DWORD PTR [rax],eax
  44c32e:	add    BYTE PTR [rax],al
  44c330:	add    DWORD PTR [rax],eax
  44c332:	add    BYTE PTR [rax],al
  44c334:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249c33c
  44c33a:	add    DWORD PTR [rax],esi
  44c33c:	add    DWORD PTR [rcx+rax*1],eax
  44c33f:	add    BYTE PTR [rdx+riz*2],al
  44c342:	add    BYTE PTR [rax],al
  44c344:	add    DWORD PTR [rax],eax
  44c346:	add    BYTE PTR [rax],al
  44c348:	add    DWORD PTR [rax],eax
  44c34a:	add    BYTE PTR [rax],al
  44c34c:	add    DWORD PTR [rax],edx
  44c34e:	(bad)  
  44c34f:	test   DWORD PTR [rax],edx
  44c351:	add    ecx,DWORD PTR [rax]
  44c353:	rex.X add al,0x30
  44c356:	add    esp,DWORD PTR [rax+0x2]
  44c359:	jo     0x44c35c
  44c35b:	push   rax
  44c35c:	add    DWORD PTR [rcx+rax*1],eax
  44c35f:	add    BYTE PTR [rdx+riz*2],al
  44c362:	add    BYTE PTR [rax],al
  44c364:	add    DWORD PTR [rcx+rax*1],eax
  44c367:	add    BYTE PTR [rdx+rax*2],al
  44c36a:	add    BYTE PTR [rax],al
  44c36c:	add    DWORD PTR [rcx+rax*1],eax
  44c36f:	add    BYTE PTR [rdx+riz*2],al
  44c372:	add    BYTE PTR [rax],al
  44c374:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c37c
  44c37a:	add    DWORD PTR [rax],esi
  44c37c:	add    DWORD PTR [rcx+rax*1],eax
  44c37f:	add    BYTE PTR [rdx+rax*2],al
  44c382:	add    BYTE PTR [rax],al
  44c384:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c38c
  44c38a:	add    DWORD PTR [rax],esi
  44c38c:	add    DWORD PTR [rdi],eax
  44c38e:	add    al,0x0
  44c390:	(bad)  
  44c391:	xor    al,BYTE PTR [rbx]
  44c393:	xor    BYTE PTR [rdx],al
  44c395:	(bad)  
  44c396:	add    DWORD PTR [rax+0x1],esi
  44c399:	add    eax,0x92050002
  44c39e:	add    DWORD PTR [rax],esi
  44c3a0:	add    DWORD PTR [rcx+rax*1],eax
  44c3a3:	add    BYTE PTR [rdx+rax*2],al
  44c3a6:	add    BYTE PTR [rax],al
  44c3a8:	add    DWORD PTR [rax],eax
  44c3aa:	add    BYTE PTR [rax],al
  44c3ac:	add    DWORD PTR [rsi],eax
  44c3ae:	add    eax,DWORD PTR [rax]
  44c3b0:	(bad)  
  44c3b1:	rex.X add sil,BYTE PTR [rax]
  44c3b4:	add    DWORD PTR [rax+0x0],esp
  44c3b7:	add    BYTE PTR [rcx],al
  44c3b9:	or     al,BYTE PTR [rsi]
  44c3bb:	add    BYTE PTR [rdx],cl
  44c3bd:	xor    al,BYTE PTR [rsi]
  44c3bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c825
  44c3c5:	push   rax
  44c3c6:	add    al,al
  44c3c8:	add    DWORD PTR [rsi],eax
  44c3ca:	add    eax,DWORD PTR [rax]
  44c3cc:	(bad)  
  44c3cd:	rex.X add sil,BYTE PTR [rax]
  44c3d0:	add    DWORD PTR [rax+0x0],esp
  44c3d3:	add    BYTE PTR [rcx],al
  44c3d5:	adc    BYTE PTR [rip+0x4011000],al        # 0x445d3db
  44c3db:	or     BYTE PTR [rax],cl
  44c3dd:	xor    BYTE PTR [rdx],al
  44c3df:	(bad)  
  44c3e0:	add    DWORD PTR [rax+0x0],esi
  44c3e3:	add    BYTE PTR [rcx],al
  44c3e5:	add    al,0x1
  44c3e7:	add    BYTE PTR [rdx+rax*2],al
  44c3ea:	add    BYTE PTR [rax],al
  44c3ec:	add    DWORD PTR [rcx+rax*1],eax
  44c3ef:	add    BYTE PTR [rdx+riz*2],al
  44c3f2:	add    BYTE PTR [rax],al
  44c3f4:	add    DWORD PTR [rax],eax
  44c3f6:	add    BYTE PTR [rax],al
  44c3f8:	add    DWORD PTR [rcx+rax*1],eax
  44c3fb:	add    BYTE PTR [rdx+rax*2],al
  44c3fe:	add    BYTE PTR [rax],al
  44c400:	add    DWORD PTR [rdi],eax
  44c402:	add    al,0x0
  44c404:	(bad)  
  44c405:	xchg   edx,eax
  44c406:	add    esi,DWORD PTR [rax]
  44c408:	add    ah,BYTE PTR [rax+0x1]
  44c40b:	jo     0x44c40e
  44c40d:	add    BYTE PTR [rax],al
  44c40f:	add    BYTE PTR [rcx],al
  44c411:	add    BYTE PTR [rax],al
  44c413:	add    BYTE PTR [rcx],al
  44c415:	add    BYTE PTR [rax],al
  44c417:	add    BYTE PTR [rcx],al
  44c419:	add    eax,0x52050002
  44c41e:	add    DWORD PTR [rax],esi
  44c420:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249c428
  44c426:	add    DWORD PTR [rax],esi
  44c428:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c430
  44c42e:	add    DWORD PTR [rax],esi
  44c430:	add    DWORD PTR [rdi],eax
  44c432:	add    al,0x0
  44c434:	(bad)  
  44c435:	xor    al,BYTE PTR [rbx]
  44c437:	xor    BYTE PTR [rdx],al
  44c439:	(bad)  
  44c43a:	add    DWORD PTR [rax+0x1],esi
  44c43d:	(bad)  
  44c43e:	add    al,0x0
  44c440:	(bad)  
  44c441:	xchg   edx,eax
  44c442:	add    esi,DWORD PTR [rax]
  44c444:	add    ah,BYTE PTR [rax+0x1]
  44c447:	jo     0x44c44a
  44c449:	add    eax,0x32050002
  44c44e:	add    DWORD PTR [rax],esi
  44c450:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c458
  44c456:	add    DWORD PTR [rax],esi
  44c458:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c460
  44c45e:	add    DWORD PTR [rax],esi
  44c460:	add    DWORD PTR [rcx+rax*1],eax
  44c463:	add    BYTE PTR [rdx+rax*2],al
  44c466:	add    BYTE PTR [rax],al
  44c468:	add    DWORD PTR [rax],eax
  44c46a:	add    BYTE PTR [rax],al
  44c46c:	add    DWORD PTR [rax],eax
  44c46e:	add    BYTE PTR [rax],al
  44c470:	add    DWORD PTR [rax],eax
  44c472:	add    BYTE PTR [rax],al
  44c474:	add    DWORD PTR [rax],eax
  44c476:	add    BYTE PTR [rax],al
  44c478:	add    DWORD PTR [rdx],ecx
  44c47a:	(bad)  
  44c47b:	add    BYTE PTR [rdx],cl
  44c47d:	xor    al,BYTE PTR [rsi]
  44c47f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c8e5
  44c485:	push   rax
  44c486:	add    al,al
  44c488:	add    DWORD PTR [rcx],eax
  44c48a:	add    DWORD PTR [rax],eax
  44c48c:	add    DWORD PTR [rax],esi
  44c48e:	add    BYTE PTR [rax],al
  44c490:	add    DWORD PTR [rax],ecx
  44c492:	(bad)  
  44c493:	add    BYTE PTR [rax],cl
  44c495:	xor    BYTE PTR [rdi],al
  44c497:	(bad)  
  44c498:	(bad)  
  44c499:	jo     0x44c4a0
  44c49b:	push   rax
  44c49c:	add    al,0xc0
  44c49e:	add    dl,al
  44c4a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c4a8
  44c4a6:	add    DWORD PTR [rax],esi
  44c4a8:	add    DWORD PTR [rcx+rax*1],eax
  44c4ab:	add    BYTE PTR [rdx+riz*2],al
  44c4ae:	add    BYTE PTR [rax],al
  44c4b0:	add    DWORD PTR [rcx+rax*1],eax
  44c4b3:	add    BYTE PTR [rdx+riz*2],al
  44c4b6:	add    BYTE PTR [rax],al
  44c4b8:	add    DWORD PTR [rcx+rax*1],eax
  44c4bb:	add    BYTE PTR [rdx+riz*2],al
  44c4be:	add    BYTE PTR [rax],al
  44c4c0:	add    DWORD PTR [rcx+rax*1],eax
  44c4c3:	add    BYTE PTR [rdx+riz*2],al
  44c4c6:	add    BYTE PTR [rax],al
  44c4c8:	add    DWORD PTR [rcx+rax*1],eax
  44c4cb:	add    BYTE PTR [rdx+riz*2],al
  44c4ce:	add    BYTE PTR [rax],al
  44c4d0:	add    DWORD PTR [rdi],eax
  44c4d2:	add    al,0x0
  44c4d4:	(bad)  
  44c4d5:	xor    al,BYTE PTR [rbx]
  44c4d7:	xor    BYTE PTR [rdx],al
  44c4d9:	(bad)  
  44c4da:	add    DWORD PTR [rax+0x1],esi
  44c4dd:	(bad)  
  44c4de:	add    al,0x0
  44c4e0:	(bad)  
  44c4e1:	xor    al,BYTE PTR [rbx]
  44c4e3:	xor    BYTE PTR [rdx],al
  44c4e5:	(bad)  
  44c4e6:	add    DWORD PTR [rax+0x1],esi
  44c4e9:	(bad)  
  44c4ea:	add    eax,DWORD PTR [rax]
  44c4ec:	(bad)  
  44c4ed:	rex.X add sil,BYTE PTR [rax]
  44c4f0:	add    DWORD PTR [rax+0x0],esp
  44c4f3:	add    BYTE PTR [rcx],al
  44c4f5:	(bad)  
  44c4f6:	add    al,0x0
  44c4f8:	(bad)  
  44c4f9:	xor    al,BYTE PTR [rbx]
  44c4fb:	xor    BYTE PTR [rdx],al
  44c4fd:	(bad)  
  44c4fe:	add    DWORD PTR [rax+0x1],esi
  44c501:	(bad)  
  44c502:	add    eax,DWORD PTR [rax]
  44c504:	(bad)  
  44c505:	rex.X add sil,BYTE PTR [rax]
  44c508:	add    DWORD PTR [rax+0x0],esp
  44c50b:	add    BYTE PTR [rcx],al
  44c50d:	add    BYTE PTR [rax],al
  44c50f:	add    BYTE PTR [rcx],al
  44c511:	add    BYTE PTR [rax],al
  44c513:	add    BYTE PTR [rcx],al
  44c515:	add    BYTE PTR [rax],al
  44c517:	add    BYTE PTR [rcx],al
  44c519:	add    BYTE PTR [rax],al
  44c51b:	add    BYTE PTR [rcx],al
  44c51d:	add    BYTE PTR [rax],al
  44c51f:	add    BYTE PTR [rcx],al
  44c521:	add    BYTE PTR [rax],al
  44c523:	add    BYTE PTR [rcx],al
  44c525:	add    BYTE PTR [rax],al
  44c527:	add    BYTE PTR [rcx],al
  44c529:	add    eax,0x32050002
  44c52e:	add    DWORD PTR [rax],esi
  44c530:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c538
  44c536:	add    DWORD PTR [rax],esi
  44c538:	add    DWORD PTR [rax],eax
  44c53a:	add    BYTE PTR [rax],al
  44c53c:	add    DWORD PTR [rcx+rax*1],eax
  44c53f:	add    BYTE PTR [rdx+riz*2],al
  44c542:	add    BYTE PTR [rax],al
  44c544:	add    DWORD PTR [rcx+rax*1],eax
  44c547:	add    BYTE PTR [rdx+rax*2],al
  44c54a:	add    BYTE PTR [rax],al
  44c54c:	add    DWORD PTR [rdi],eax
  44c54e:	add    al,0x0
  44c550:	(bad)  
  44c551:	push   rdx
  44c552:	add    esi,DWORD PTR [rax]
  44c554:	add    ah,BYTE PTR [rax+0x1]
  44c557:	jo     0x44c55a
  44c559:	or     al,BYTE PTR [rsi]
  44c55b:	add    BYTE PTR [rdx],cl
  44c55d:	jb     0x44c565
  44c55f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4c9c5
  44c565:	push   rax
  44c566:	add    al,al
  44c568:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c570
  44c56e:	add    DWORD PTR [rax],esi
  44c570:	add    DWORD PTR [rax],eax
  44c572:	add    BYTE PTR [rax],al
  44c574:	add    DWORD PTR [rax],eax
  44c576:	add    BYTE PTR [rax],al
  44c578:	add    DWORD PTR [rax],eax
  44c57a:	add    BYTE PTR [rax],al
  44c57c:	add    DWORD PTR [rcx+rax*1],eax
  44c57f:	add    BYTE PTR [rdx+rax*2],al
  44c582:	add    BYTE PTR [rax],al
  44c584:	add    DWORD PTR [rcx+rax*1],eax
  44c587:	add    BYTE PTR [rdx+rax*2],al
  44c58a:	add    BYTE PTR [rax],al
  44c58c:	add    DWORD PTR [rsi],eax
  44c58e:	add    eax,DWORD PTR [rax]
  44c590:	(bad)  
  44c591:	rex.X add sil,BYTE PTR [rax]
  44c594:	add    DWORD PTR [rax+0x0],esp
  44c597:	add    BYTE PTR [rcx],al
  44c599:	(bad)  
  44c59a:	add    al,0x0
  44c59c:	(bad)  
  44c59d:	push   rdx
  44c59e:	add    esi,DWORD PTR [rax]
  44c5a0:	add    ah,BYTE PTR [rax+0x1]
  44c5a3:	jo     0x44c5a6
  44c5a5:	add    al,0x1
  44c5a7:	add    BYTE PTR [rdx+riz*2],al
  44c5aa:	add    BYTE PTR [rax],al
  44c5ac:	add    DWORD PTR [rcx+rax*1],eax
  44c5af:	add    BYTE PTR [rdx+rax*2],al
  44c5b2:	add    BYTE PTR [rax],al
  44c5b4:	add    DWORD PTR [rcx+rax*1],eax
  44c5b7:	add    BYTE PTR [rdx+rax*2],al
  44c5ba:	add    BYTE PTR [rax],al
  44c5bc:	add    DWORD PTR [rcx+rax*1],eax
  44c5bf:	add    BYTE PTR [rdx+riz*2],al
  44c5c2:	add    BYTE PTR [rax],al
  44c5c4:	add    DWORD PTR [rcx+rax*1],eax
  44c5c7:	add    BYTE PTR [rdx+riz*2],al
  44c5ca:	add    BYTE PTR [rax],al
  44c5cc:	add    DWORD PTR [rcx+rax*1],eax
  44c5cf:	add    BYTE PTR [rdx+riz*2],al
  44c5d2:	add    BYTE PTR [rax],al
  44c5d4:	add    DWORD PTR [rcx+rax*1],eax
  44c5d7:	add    BYTE PTR [rdx+rax*2],al
  44c5da:	add    BYTE PTR [rax],al
  44c5dc:	add    DWORD PTR [rcx+rax*1],eax
  44c5df:	add    BYTE PTR [rdx+rax*2],al
  44c5e2:	add    BYTE PTR [rax],al
  44c5e4:	add    DWORD PTR [rax],eax
  44c5e6:	add    BYTE PTR [rax],al
  44c5e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c5f0
  44c5ee:	add    DWORD PTR [rax],esi
  44c5f0:	add    DWORD PTR [rcx+rax*1],eax
  44c5f3:	add    BYTE PTR [rdx+rax*2],al
  44c5f6:	add    BYTE PTR [rax],al
  44c5f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c600
  44c5fe:	add    DWORD PTR [rax],esi
  44c600:	add    DWORD PTR [rdi+rax*1],ecx
  44c603:	add    BYTE PTR [rdx+riz*2],cl
  44c606:	or     BYTE PTR [rax],dh
  44c608:	(bad)  
  44c609:	(bad)  
  44c60a:	(bad)  
  44c60b:	jo     0x44c612
  44c60d:	push   rax
  44c60e:	add    al,0xc0
  44c610:	add    dl,al
  44c612:	add    BYTE PTR [rax],al
  44c614:	add    DWORD PTR [rax],eax
  44c616:	add    BYTE PTR [rax],al
  44c618:	add    DWORD PTR [rax],eax
  44c61a:	add    BYTE PTR [rax],al
  44c61c:	add    DWORD PTR [rax],eax
  44c61e:	add    BYTE PTR [rax],al
  44c620:	add    DWORD PTR [rax],eax
  44c622:	add    BYTE PTR [rax],al
  44c624:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249c62c
  44c62a:	add    DWORD PTR [rax],esi
  44c62c:	add    DWORD PTR [rax],eax
  44c62e:	add    BYTE PTR [rax],al
  44c630:	add    DWORD PTR [rax],eax
  44c632:	add    BYTE PTR [rax],al
  44c634:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c63c
  44c63a:	add    DWORD PTR [rax],esi
  44c63c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c644
  44c642:	add    DWORD PTR [rax],esi
  44c644:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c64c
  44c64a:	add    DWORD PTR [rax],esi
  44c64c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c654
  44c652:	add    DWORD PTR [rax],esi
  44c654:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c65c
  44c65a:	add    DWORD PTR [rax],esi
  44c65c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c664
  44c662:	add    DWORD PTR [rax],esi
  44c664:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c66c
  44c66a:	add    DWORD PTR [rax],esi
  44c66c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c674
  44c672:	add    DWORD PTR [rax],esi
  44c674:	add    DWORD PTR [rax],eax
  44c676:	add    BYTE PTR [rax],al
  44c678:	add    DWORD PTR [rbx],eax
  44c67a:	add    eax,DWORD PTR [rax]
  44c67c:	add    esi,DWORD PTR [rax]
  44c67e:	add    ah,BYTE PTR [rax+0x1]
  44c681:	jo     0x44c683
  44c683:	add    BYTE PTR [rcx],al
  44c685:	or     al,0x7
  44c687:	add    BYTE PTR [rdx+riz*2],cl
  44c68a:	or     BYTE PTR [rax],dh
  44c68c:	(bad)  
  44c68d:	(bad)  
  44c68e:	(bad)  
  44c68f:	jo     0x44c696
  44c691:	push   rax
  44c692:	add    al,0xc0
  44c694:	add    ah,al
  44c696:	add    BYTE PTR [rax],al
  44c698:	add    DWORD PTR [rdx],ecx
  44c69a:	(bad)  
  44c69b:	add    BYTE PTR [rdx],cl
  44c69d:	push   rdx
  44c69e:	(bad)  
  44c69f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cb05
  44c6a5:	push   rax
  44c6a6:	add    al,al
  44c6a8:	add    DWORD PTR [rsi],ecx
  44c6aa:	or     BYTE PTR [rax],al
  44c6ac:	(bad)  
  44c6ad:	jb     0x44c6b9
  44c6af:	xor    BYTE PTR [rcx],cl
  44c6b1:	(bad)  
  44c6b2:	or     BYTE PTR [rax+0x7],dh
  44c6b5:	push   rax
  44c6b6:	(bad)  
  44c6b7:	rol    BYTE PTR [rax+rdx*8],0x2
  44c6bb:	loopne 0x44c6be
  44c6bd:	add    al,0x1
  44c6bf:	add    BYTE PTR [rdx+rax*2],al
  44c6c2:	add    BYTE PTR [rax],al
  44c6c4:	add    DWORD PTR [rbx],edx
  44c6c6:	or     al,BYTE PTR [rax]
  44c6c8:	adc    eax,DWORD PTR [rcx]
  44c6ca:	adc    eax,DWORD PTR [rax]
  44c6cc:	or     al,0x30
  44c6ce:	or     esp,DWORD PTR [rax+0xa]
  44c6d1:	jo     0x44c6dc
  44c6d3:	push   rax
  44c6d4:	or     al,al
  44c6d6:	(bad)  
  44c6d7:	rol    BYTE PTR [rax+riz*8],1
  44c6da:	add    dh,al
  44c6dc:	add    DWORD PTR [rbx],edx
  44c6de:	or     al,BYTE PTR [rax]
  44c6e0:	adc    eax,DWORD PTR [rcx]
  44c6e2:	adc    DWORD PTR [rax],eax
  44c6e4:	or     al,0x30
  44c6e6:	or     esp,DWORD PTR [rax+0xa]
  44c6e9:	jo     0x44c6f4
  44c6eb:	push   rax
  44c6ec:	or     al,al
  44c6ee:	(bad)  
  44c6ef:	rol    BYTE PTR [rax+riz*8],1
  44c6f2:	add    dh,al
  44c6f4:	add    DWORD PTR [rbx],eax
  44c6f6:	add    eax,DWORD PTR [rax]
  44c6f8:	add    esi,DWORD PTR [rax]
  44c6fa:	add    ah,BYTE PTR [rax+0x1]
  44c6fd:	jo     0x44c6ff
  44c6ff:	add    BYTE PTR [rcx],al
  44c701:	adc    BYTE PTR [rcx],cl
  44c703:	add    BYTE PTR [rax],dl
  44c705:	(bad)  
  44c706:	or     al,0x30
  44c708:	or     esp,DWORD PTR [rax+0xa]
  44c70b:	jo     0x44c716
  44c70d:	push   rax
  44c70e:	or     al,al
  44c710:	(bad)  
  44c711:	rol    BYTE PTR [rax+riz*8],1
  44c714:	add    dh,al
  44c716:	add    BYTE PTR [rax],al
  44c718:	add    DWORD PTR [rcx+rax*1],eax
  44c71b:	add    BYTE PTR [rdx+riz*2],al
  44c71e:	add    BYTE PTR [rax],al
  44c720:	add    DWORD PTR [rbx],eax
  44c722:	add    eax,DWORD PTR [rax]
  44c724:	add    esi,DWORD PTR [rax]
  44c726:	add    ah,BYTE PTR [rax+0x1]
  44c729:	jo     0x44c72b
  44c72b:	add    BYTE PTR [rcx],al
  44c72d:	or     al,BYTE PTR [rsi]
  44c72f:	add    BYTE PTR [rdx],cl
  44c731:	push   rdx
  44c732:	(bad)  
  44c733:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cb99
  44c739:	push   rax
  44c73a:	add    al,al
  44c73c:	add    DWORD PTR [rdx],ecx
  44c73e:	(bad)  
  44c73f:	add    BYTE PTR [rdx],cl
  44c741:	push   rdx
  44c742:	(bad)  
  44c743:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cba9
  44c749:	push   rax
  44c74a:	add    al,al
  44c74c:	add    DWORD PTR [rsi],ecx
  44c74e:	or     BYTE PTR [rax],al
  44c750:	(bad)  
  44c751:	push   rdx
  44c752:	or     dh,BYTE PTR [rax]
  44c754:	or     DWORD PTR [rax+0x8],esp
  44c757:	jo     0x44c760
  44c759:	push   rax
  44c75a:	(bad)  
  44c75b:	rol    BYTE PTR [rax+rdx*8],0x2
  44c75f:	loopne 0x44c762
  44c761:	adc    BYTE PTR [rcx],cl
  44c763:	add    BYTE PTR [rax],dl
  44c765:	loop   0x44c773
  44c767:	xor    BYTE PTR [rbx],cl
  44c769:	(bad)  
  44c76a:	or     dh,BYTE PTR [rax+0x9]
  44c76d:	push   rax
  44c76e:	or     al,al
  44c770:	(bad)  
  44c771:	rol    BYTE PTR [rax+riz*8],1
  44c774:	add    dh,al
  44c776:	add    BYTE PTR [rax],al
  44c778:	add    DWORD PTR [rsi],ecx
  44c77a:	or     BYTE PTR [rax],al
  44c77c:	(bad)  
  44c77d:	push   rdx
  44c77e:	or     dh,BYTE PTR [rax]
  44c780:	or     DWORD PTR [rax+0x8],esp
  44c783:	jo     0x44c78c
  44c785:	push   rax
  44c786:	(bad)  
  44c787:	rol    BYTE PTR [rax+rdx*8],0x2
  44c78b:	loopne 0x44c78e
  44c78d:	adc    BYTE PTR [rcx],cl
  44c78f:	add    BYTE PTR [rax],dl
  44c791:	(bad)  
  44c792:	or     al,0x30
  44c794:	or     esp,DWORD PTR [rax+0xa]
  44c797:	jo     0x44c7a2
  44c799:	push   rax
  44c79a:	or     al,al
  44c79c:	(bad)  
  44c79d:	rol    BYTE PTR [rax+riz*8],1
  44c7a0:	add    dh,al
  44c7a2:	add    BYTE PTR [rax],al
  44c7a4:	add    DWORD PTR [rcx+rax*1],eax
  44c7a7:	add    BYTE PTR [rdx+rax*2],al
  44c7aa:	add    BYTE PTR [rax],al
  44c7ac:	add    DWORD PTR [rax],eax
  44c7ae:	add    BYTE PTR [rax],al
  44c7b0:	add    DWORD PTR [rax],eax
  44c7b2:	add    BYTE PTR [rax],al
  44c7b4:	add    DWORD PTR [rax],eax
  44c7b6:	add    BYTE PTR [rax],al
  44c7b8:	add    DWORD PTR [rax],eax
  44c7ba:	add    BYTE PTR [rax],al
  44c7bc:	add    DWORD PTR [rax],eax
  44c7be:	add    BYTE PTR [rax],al
  44c7c0:	add    DWORD PTR [rcx+rax*1],eax
  44c7c3:	add    BYTE PTR [rdx+riz*2],al
  44c7c6:	add    BYTE PTR [rax],al
  44c7c8:	add    DWORD PTR [rsi],eax
  44c7ca:	add    eax,DWORD PTR [rax]
  44c7cc:	(bad)  
  44c7cd:	rex.X add sil,BYTE PTR [rax]
  44c7d0:	add    DWORD PTR [rax+0x0],esp
  44c7d3:	add    BYTE PTR [rcx],al
  44c7d5:	(bad)  
  44c7d6:	add    eax,DWORD PTR [rax]
  44c7d8:	(bad)  
  44c7d9:	rex.X add sil,BYTE PTR [rax]
  44c7dc:	add    DWORD PTR [rax+0x0],esp
  44c7df:	add    BYTE PTR [rcx],al
  44c7e1:	sbb    BYTE PTR [rdx],cl
  44c7e3:	test   DWORD PTR [rax],ebx
  44c7e5:	add    edx,DWORD PTR [rax]
  44c7e7:	loop   0x44c7f5
  44c7e9:	xor    BYTE PTR [rbx],cl
  44c7eb:	(bad)  
  44c7ec:	or     dh,BYTE PTR [rax+0x9]
  44c7ef:	rol    BYTE PTR [rdi],0xd0
  44c7f2:	add    eax,0x1f003e0
  44c7f7:	push   rax
  44c7f8:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x151c805
  44c7fe:	jb     0x44c800
  44c800:	(bad)  
  44c801:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cc67
  44c807:	push   rax
  44c808:	add    al,al
  44c80a:	add    BYTE PTR [rax],al
  44c80c:	add    DWORD PTR [rcx+rax*1],eax
  44c80f:	add    BYTE PTR [rdx+rax*2],al
  44c812:	add    BYTE PTR [rax],al
  44c814:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c81c
  44c81a:	add    DWORD PTR [rax],esi
  44c81c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c824
  44c822:	add    DWORD PTR [rax],esi
  44c824:	add    DWORD PTR [rax],eax
  44c826:	add    BYTE PTR [rax],al
  44c828:	add    DWORD PTR [rip+0x3158508],edx        # 0x35a4d36
  44c82e:	or     eax,0x6002e01
  44c833:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cc99
  44c839:	rol    BYTE PTR [rcx],0x50
  44c83c:	add    DWORD PTR [rax],ecx
  44c83e:	add    eax,DWORD PTR [rax]
  44c840:	or     BYTE PTR [rcx],al
  44c842:	sbb    BYTE PTR [rax],al
  44c844:	add    DWORD PTR [rax+0x0],esi
  44c847:	add    BYTE PTR [rcx],al
  44c849:	add    eax,0x72050002
  44c84e:	add    DWORD PTR [rax],esi
  44c850:	add    DWORD PTR [rax],ecx
  44c852:	add    eax,0x4820800
  44c857:	xor    BYTE PTR [rbx],al
  44c859:	(bad)  
  44c85a:	add    dh,BYTE PTR [rax+0x1]
  44c85d:	push   rax
  44c85e:	add    BYTE PTR [rax],al
  44c860:	add    DWORD PTR [rbx],ecx
  44c862:	(bad)  
  44c863:	add    BYTE PTR [rbx],cl
  44c865:	add    DWORD PTR [rdi],eax
  44c867:	add    DWORD PTR [rax+rsi*1],eax
  44c86a:	add    esp,DWORD PTR [rax+0x2]
  44c86d:	jo     0x44c870
  44c86f:	push   rax
  44c870:	add    DWORD PTR [rsi],eax
  44c872:	add    eax,DWORD PTR [rax]
  44c874:	(bad)  
  44c875:	rex.X add sil,BYTE PTR [rax]
  44c878:	add    DWORD PTR [rax+0x0],esp
  44c87b:	add    BYTE PTR [rcx],al
  44c87d:	(bad)  
  44c87e:	add    eax,DWORD PTR [rax]
  44c880:	(bad)  
  44c881:	movabs ds:0x601000060013002,al
  44c88a:	add    eax,DWORD PTR [rax]
  44c88c:	(bad)  
  44c88d:	rex.X add sil,BYTE PTR [rax]
  44c890:	add    DWORD PTR [rax+0x0],esi
  44c893:	add    BYTE PTR [rcx],al
  44c895:	add    BYTE PTR [rax],al
  44c897:	add    BYTE PTR [rcx],al
  44c899:	add    eax,0x72050002
  44c89e:	add    DWORD PTR [rax],esi
  44c8a0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249c8a8
  44c8a6:	add    DWORD PTR [rax],esi
  44c8a8:	add    DWORD PTR [rdi+rax*1],ecx
  44c8ab:	add    BYTE PTR [rdx+rax*4],cl
  44c8ae:	or     BYTE PTR [rax],dh
  44c8b0:	(bad)  
  44c8b1:	(bad)  
  44c8b2:	(bad)  
  44c8b3:	jo     0x44c8ba
  44c8b5:	push   rax
  44c8b6:	add    al,0xc0
  44c8b8:	add    dl,al
  44c8ba:	add    BYTE PTR [rax],al
  44c8bc:	add    DWORD PTR [rdi+rax*1],ecx
  44c8bf:	add    BYTE PTR [rdx+rax*4],cl
  44c8c2:	or     BYTE PTR [rax],dh
  44c8c4:	(bad)  
  44c8c5:	(bad)  
  44c8c6:	(bad)  
  44c8c7:	jo     0x44c8ce
  44c8c9:	push   rax
  44c8ca:	add    al,0xc0
  44c8cc:	add    dl,al
  44c8ce:	add    BYTE PTR [rax],al
  44c8d0:	add    DWORD PTR [rax],eax
  44c8d2:	add    BYTE PTR [rax],al
  44c8d4:	add    DWORD PTR [rdx],ecx
  44c8d6:	(bad)  
  44c8d7:	add    BYTE PTR [rdx],cl
  44c8d9:	xchg   edx,eax
  44c8da:	(bad)  
  44c8db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cd41
  44c8e1:	push   rax
  44c8e2:	add    al,al
  44c8e4:	add    DWORD PTR [rax],edx
  44c8e6:	or     DWORD PTR [rax],eax
  44c8e8:	adc    dl,ah
  44c8ea:	or     al,0x30
  44c8ec:	or     esp,DWORD PTR [rax+0xa]
  44c8ef:	jo     0x44c8fa
  44c8f1:	push   rax
  44c8f2:	or     al,al
  44c8f4:	(bad)  
  44c8f5:	rol    BYTE PTR [rax+riz*8],1
  44c8f8:	add    dh,al
  44c8fa:	add    BYTE PTR [rax],al
  44c8fc:	add    DWORD PTR [rdx],ecx
  44c8fe:	(bad)  
  44c8ff:	add    BYTE PTR [rdx],cl
  44c901:	mov    dl,0x6
  44c903:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cd69
  44c909:	push   rax
  44c90a:	add    al,al
  44c90c:	add    DWORD PTR [rax],ecx
  44c90e:	add    eax,0x4a20800
  44c913:	xor    BYTE PTR [rbx],al
  44c915:	(bad)  
  44c916:	add    dh,BYTE PTR [rax+0x1]
  44c919:	push   rax
  44c91a:	add    BYTE PTR [rax],al
  44c91c:	add    DWORD PTR [rbx],ecx
  44c91e:	(bad)  
  44c91f:	add    BYTE PTR [rbx],cl
  44c921:	add    DWORD PTR [rcx],edx
  44c923:	add    BYTE PTR [rax+rsi*1],al
  44c926:	add    esp,DWORD PTR [rax+0x2]
  44c929:	jo     0x44c92c
  44c92b:	push   rax
  44c92c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c934
  44c932:	add    DWORD PTR [rax],esi
  44c934:	add    DWORD PTR [rsi],eax
  44c936:	add    eax,DWORD PTR [rax]
  44c938:	(bad)  
  44c939:	rex.X add sil,BYTE PTR [rax]
  44c93c:	add    DWORD PTR [rax+0x0],esp
  44c93f:	add    BYTE PTR [rcx],al
  44c941:	(bad)  
  44c942:	add    al,0x0
  44c944:	(bad)  
  44c945:	xor    al,BYTE PTR [rbx]
  44c947:	xor    BYTE PTR [rdx],al
  44c949:	(bad)  
  44c94a:	add    DWORD PTR [rax+0x1],esi
  44c94d:	sbb    BYTE PTR [rdx],cl
  44c94f:	test   DWORD PTR [rax],ebx
  44c951:	add    edx,DWORD PTR [rax]
  44c953:	movabs ds:0xc009700a600b300c,al
  44c95c:	(bad)  
  44c95d:	rol    BYTE PTR [rip+0x1f003e0],1        # 0x234cd43
  44c963:	push   rax
  44c964:	add    DWORD PTR [rcx+rax*1],eax
  44c967:	add    BYTE PTR [rdx+rax*2],al
  44c96a:	add    BYTE PTR [rax],al
  44c96c:	add    DWORD PTR [rax],eax
  44c96e:	add    BYTE PTR [rax],al
  44c970:	add    DWORD PTR [rax],eax
  44c972:	add    BYTE PTR [rax],al
  44c974:	add    DWORD PTR [rax],eax
  44c976:	add    BYTE PTR [rax],al
  44c978:	add    DWORD PTR [rdi],eax
  44c97a:	add    al,0x0
  44c97c:	(bad)  
  44c97d:	push   rdx
  44c97e:	add    esi,DWORD PTR [rax]
  44c980:	add    ah,BYTE PTR [rax+0x1]
  44c983:	jo     0x44c986
  44c985:	add    al,0x1
  44c987:	add    BYTE PTR [rdx+rax*4],al
  44c98a:	add    BYTE PTR [rax],al
  44c98c:	add    DWORD PTR [rcx+rax*1],eax
  44c98f:	add    BYTE PTR [rdx+riz*2],al
  44c992:	add    BYTE PTR [rax],al
  44c994:	add    DWORD PTR [rax],eax
  44c996:	add    BYTE PTR [rax],al
  44c998:	add    DWORD PTR [rax],eax
  44c99a:	add    BYTE PTR [rax],al
  44c99c:	add    DWORD PTR [rcx+rax*1],eax
  44c99f:	add    BYTE PTR [rdx+riz*2],al
  44c9a2:	add    BYTE PTR [rax],al
  44c9a4:	add    DWORD PTR [rax],ecx
  44c9a6:	add    eax,0x4420800
  44c9ab:	xor    BYTE PTR [rbx],al
  44c9ad:	(bad)  
  44c9ae:	add    dh,BYTE PTR [rax+0x1]
  44c9b1:	push   rax
  44c9b2:	add    BYTE PTR [rax],al
  44c9b4:	add    DWORD PTR [rax],eax
  44c9b6:	add    BYTE PTR [rax],al
  44c9b8:	add    DWORD PTR [rcx+rax*1],eax
  44c9bb:	add    BYTE PTR [rdx+rax*2],al
  44c9be:	add    BYTE PTR [rax],al
  44c9c0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249c9c8
  44c9c6:	add    DWORD PTR [rax],esi
  44c9c8:	add    DWORD PTR [rsi],eax
  44c9ca:	add    eax,DWORD PTR [rax]
  44c9cc:	(bad)  
  44c9cd:	(bad)  
  44c9cf:	xor    BYTE PTR [rcx],al
  44c9d1:	(bad)  
  44c9d2:	add    BYTE PTR [rax],al
  44c9d4:	add    DWORD PTR [rcx+rax*1],eax
  44c9d7:	add    BYTE PTR [rdx+rax*2],al
  44c9da:	add    BYTE PTR [rax],al
  44c9dc:	add    DWORD PTR [rcx+rax*1],eax
  44c9df:	add    BYTE PTR [rdx+rax*2],al
  44c9e2:	add    BYTE PTR [rax],al
  44c9e4:	add    DWORD PTR [rcx+rax*1],eax
  44c9e7:	add    BYTE PTR [rdx+riz*2],al
  44c9ea:	add    BYTE PTR [rax],al
  44c9ec:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9249c9f4
  44c9f2:	add    DWORD PTR [rax],esi
  44c9f4:	add    DWORD PTR [rsi],eax
  44c9f6:	add    eax,DWORD PTR [rax]
  44c9f8:	(bad)  
  44c9f9:	rex.X add sil,BYTE PTR [rax]
  44c9fc:	add    DWORD PTR [rax+0x0],esp
  44c9ff:	add    BYTE PTR [rcx],al
  44ca01:	(bad)  
  44ca02:	add    eax,DWORD PTR [rax]
  44ca04:	(bad)  
  44ca05:	rex.X add sil,BYTE PTR [rax]
  44ca08:	add    DWORD PTR [rax+0x0],esp
  44ca0b:	add    BYTE PTR [rcx],al
  44ca0d:	add    eax,0x32050002
  44ca12:	add    DWORD PTR [rax],esi
  44ca14:	add    DWORD PTR [rdi],eax
  44ca16:	add    al,0x0
  44ca18:	(bad)  
  44ca19:	jb     0x44ca1e
  44ca1b:	xor    BYTE PTR [rdx],al
  44ca1d:	(bad)  
  44ca1e:	add    DWORD PTR [rax+0x1],esi
  44ca21:	add    eax,0x32050002
  44ca26:	add    DWORD PTR [rax],esi
  44ca28:	add    DWORD PTR [rbx],eax
  44ca2a:	add    eax,DWORD PTR [rax]
  44ca2c:	add    esi,DWORD PTR [rax]
  44ca2e:	add    ah,BYTE PTR [rax+0x1]
  44ca31:	jo     0x44ca33
  44ca33:	add    BYTE PTR [rcx],al
  44ca35:	adc    ecx,DWORD PTR [rdx]
  44ca37:	add    BYTE PTR [rbx],dl
  44ca39:	add    DWORD PTR [rcx],ecx
  44ca3b:	add    DWORD PTR [rax+rsi*1],ecx
  44ca3e:	or     esp,DWORD PTR [rax+0xa]
  44ca41:	jo     0x44ca4c
  44ca43:	push   rax
  44ca44:	or     al,al
  44ca46:	(bad)  
  44ca47:	rol    BYTE PTR [rax+riz*8],1
  44ca4a:	add    dh,al
  44ca4c:	add    DWORD PTR [rax],edx
  44ca4e:	or     DWORD PTR [rax],eax
  44ca50:	adc    BYTE PTR [rdx+0x600b300c],al
  44ca56:	or     dh,BYTE PTR [rax+0x9]
  44ca59:	push   rax
  44ca5a:	or     al,al
  44ca5c:	(bad)  
  44ca5d:	rol    BYTE PTR [rax+riz*8],1
  44ca60:	add    dh,al
  44ca62:	add    BYTE PTR [rax],al
  44ca64:	add    DWORD PTR [rcx+rax*1],eax
  44ca67:	add    BYTE PTR [rdx+rax*8],al
  44ca6a:	add    BYTE PTR [rax],al
  44ca6c:	add    DWORD PTR [rcx],edx
  44ca6e:	or     DWORD PTR [rax],eax
  44ca70:	adc    DWORD PTR [rcx],eax
  44ca72:	add    BYTE PTR es:[rdx],cl
  44ca75:	xor    BYTE PTR [rcx],cl
  44ca77:	(bad)  
  44ca78:	or     BYTE PTR [rax+0x7],dh
  44ca7b:	push   rax
  44ca7c:	(bad)  
  44ca7d:	rol    BYTE PTR [rax+rdx*8],0x2
  44ca81:	loopne 0x44ca83
  44ca83:	add    BYTE PTR [rcx],al
  44ca85:	add    DWORD PTR [rcx],eax
  44ca87:	add    BYTE PTR [rcx],al
  44ca89:	xor    BYTE PTR [rax],al
  44ca8b:	add    BYTE PTR [rcx],al
  44ca8d:	add    BYTE PTR [rax],al
  44ca8f:	add    BYTE PTR [rcx],al
  44ca91:	add    BYTE PTR [rax],al
  44ca93:	add    BYTE PTR [rcx],al
  44ca95:	(bad)  
  44ca96:	add    al,0x0
  44ca98:	(bad)  
  44ca99:	xor    al,BYTE PTR [rbx]
  44ca9b:	xor    BYTE PTR [rdx],al
  44ca9d:	(bad)  
  44ca9e:	add    DWORD PTR [rax+0x1],esi
  44caa1:	(bad)  
  44caa2:	add    eax,DWORD PTR [rax]
  44caa4:	(bad)  
  44caa5:	rex.X add sil,BYTE PTR [rax]
  44caa8:	add    DWORD PTR [rax+0x0],esp
  44caab:	add    BYTE PTR [rcx],al
  44caad:	adc    BYTE PTR [rcx],cl
  44caaf:	add    BYTE PTR [rax],dl
  44cab1:	(bad)  
  44cab2:	or     al,0x30
  44cab4:	or     esp,DWORD PTR [rax+0xa]
  44cab7:	jo     0x44cac2
  44cab9:	push   rax
  44caba:	or     al,al
  44cabc:	(bad)  
  44cabd:	rol    BYTE PTR [rax+riz*8],1
  44cac0:	add    dh,al
  44cac2:	add    BYTE PTR [rax],al
  44cac4:	add    DWORD PTR [rdx],ecx
  44cac6:	(bad)  
  44cac7:	add    BYTE PTR [rdx],cl
  44cac9:	xor    al,BYTE PTR [rsi]
  44cacb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cf31
  44cad1:	push   rax
  44cad2:	add    al,al
  44cad4:	add    DWORD PTR [rax],edx
  44cad6:	or     DWORD PTR [rax],eax
  44cad8:	adc    BYTE PTR [rdx+0x600b300c],al
  44cade:	or     dh,BYTE PTR [rax+0x9]
  44cae1:	push   rax
  44cae2:	or     al,al
  44cae4:	(bad)  
  44cae5:	rol    BYTE PTR [rax+riz*8],1
  44cae8:	add    dh,al
  44caea:	add    BYTE PTR [rax],al
  44caec:	add    DWORD PTR [rax],eax
  44caee:	add    BYTE PTR [rax],al
  44caf0:	add    DWORD PTR [rax],eax
  44caf2:	add    BYTE PTR [rax],al
  44caf4:	add    DWORD PTR [rcx+rax*1],eax
  44caf7:	add    BYTE PTR [rdx+riz*2],al
  44cafa:	add    BYTE PTR [rax],al
  44cafc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249cb04
  44cb02:	add    DWORD PTR [rax],esi
  44cb04:	add    DWORD PTR [rcx+rax*1],eax
  44cb07:	add    BYTE PTR [rdx+rax*2],al
  44cb0a:	add    BYTE PTR [rax],al
  44cb0c:	add    DWORD PTR [rcx+rax*1],eax
  44cb0f:	add    BYTE PTR [rdx+rax*2],al
  44cb12:	add    BYTE PTR [rax],al
  44cb14:	add    DWORD PTR [rsi],eax
  44cb16:	add    eax,DWORD PTR [rax]
  44cb18:	(bad)  
  44cb19:	rex.X add sil,BYTE PTR [rax]
  44cb1c:	add    DWORD PTR [rax+0x0],esp
  44cb1f:	add    BYTE PTR [rcx],al
  44cb21:	add    BYTE PTR [rax],al
  44cb23:	add    BYTE PTR [rcx],al
  44cb25:	add    BYTE PTR [rax],al
  44cb27:	add    BYTE PTR [rcx],al
  44cb29:	add    BYTE PTR [rax],al
  44cb2b:	add    BYTE PTR [rcx],al
  44cb2d:	or     al,BYTE PTR [rsi]
  44cb2f:	add    BYTE PTR [rdx],cl
  44cb31:	jb     0x44cb39
  44cb33:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4cf99
  44cb39:	push   rax
  44cb3a:	add    al,al
  44cb3c:	add    DWORD PTR [rdx],ecx
  44cb3e:	add    eax,0x6d20a05
  44cb43:	add    eax,DWORD PTR [rbx]
  44cb45:	xor    BYTE PTR [rdx],al
  44cb47:	(bad)  
  44cb48:	add    DWORD PTR [rax+0x0],edx
  44cb4b:	add    BYTE PTR [rcx],al
  44cb4d:	add    al,0x1
  44cb4f:	add    BYTE PTR [rdx+rax*2],al
  44cb52:	add    BYTE PTR [rax],al
  44cb54:	add    DWORD PTR [rsi],eax
  44cb56:	add    eax,DWORD PTR [rax]
  44cb58:	(bad)  
  44cb59:	rex.X add sil,BYTE PTR [rax]
  44cb5c:	add    DWORD PTR [rax+0x0],esp
  44cb5f:	add    BYTE PTR [rcx],al
  44cb61:	add    BYTE PTR [rax],al
  44cb63:	add    BYTE PTR [rcx],al
  44cb65:	add    al,0x1
  44cb67:	add    BYTE PTR [rdx+riz*4],al
  44cb6a:	add    BYTE PTR [rax],al
  44cb6c:	add    DWORD PTR [rax],eax
  44cb6e:	add    BYTE PTR [rax],al
  44cb70:	add    DWORD PTR [rsi],edx
  44cb72:	or     DWORD PTR [rax],eax
  44cb74:	(bad)  
  44cb75:	mov    BYTE PTR [rsi],al
  44cb77:	add    BYTE PTR [rax],dl
  44cb79:	js     0x44cb80
  44cb7b:	add    BYTE PTR [rbx],cl
  44cb7d:	push   0xffffffffe2060004
  44cb82:	add    dh,BYTE PTR [rax]
  44cb84:	add    DWORD PTR [rax+0x0],esp
  44cb87:	add    BYTE PTR [rcx],al
  44cb89:	add    BYTE PTR [rax],al
  44cb8b:	add    BYTE PTR [rcx],al
  44cb8d:	add    BYTE PTR [rax],al
  44cb8f:	add    BYTE PTR [rcx],al
  44cb91:	add    BYTE PTR [rax],al
  44cb93:	add    BYTE PTR [rcx],al
  44cb95:	(bad)  
  44cb96:	add    eax,DWORD PTR [rax]
  44cb98:	(bad)  
  44cb99:	(bad)  
  44cb9b:	xor    BYTE PTR [rcx],al
  44cb9d:	(bad)  
  44cb9e:	add    BYTE PTR [rax],al
  44cba0:	add    DWORD PTR [rdi+rax*1],ecx
  44cba3:	add    BYTE PTR [rdx+riz*4],cl
  44cba6:	or     BYTE PTR [rax],dh
  44cba8:	(bad)  
  44cba9:	(bad)  
  44cbaa:	(bad)  
  44cbab:	jo     0x44cbb2
  44cbad:	push   rax
  44cbae:	add    al,0xc0
  44cbb0:	add    dl,al
  44cbb2:	add    BYTE PTR [rax],al
  44cbb4:	add    DWORD PTR [rcx],edx
  44cbb6:	or     DWORD PTR [rip+0x30db211],eax        # 0x3527dcd
  44cbbc:	or     dh,BYTE PTR [rax]
  44cbbe:	or     DWORD PTR [rax+0x8],esp
  44cbc1:	jo     0x44cbca
  44cbc3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x224cf9a
  44cbca:	add    BYTE PTR [rax],al
  44cbcc:	add    DWORD PTR [rcx+rax*1],eax
  44cbcf:	add    BYTE PTR [rdx+rax*2],al
  44cbd2:	add    BYTE PTR [rax],al
  44cbd4:	add    DWORD PTR [rdx],ecx
  44cbd6:	(bad)  
  44cbd7:	add    BYTE PTR [rdx],cl
  44cbd9:	xor    al,BYTE PTR [rsi]
  44cbdb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4d041
  44cbe1:	push   rax
  44cbe2:	add    al,al
  44cbe4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249cbec
  44cbea:	add    DWORD PTR [rax],esi
  44cbec:	add    DWORD PTR [rax],ecx
  44cbee:	add    eax,0x4420800
  44cbf3:	xor    BYTE PTR [rbx],al
  44cbf5:	(bad)  
  44cbf6:	add    dh,BYTE PTR [rax+0x1]
  44cbf9:	push   rax
  44cbfa:	add    BYTE PTR [rax],al
  44cbfc:	add    DWORD PTR [rdi],eax
  44cbfe:	add    al,0x0
  44cc00:	(bad)  
  44cc01:	xor    al,BYTE PTR [rbx]
  44cc03:	xor    BYTE PTR [rdx],al
  44cc05:	(bad)  
  44cc06:	add    DWORD PTR [rax+0x1],esi
  44cc09:	add    eax,0x32050002
  44cc0e:	add    DWORD PTR [rax],esi
  44cc10:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249cc18
  44cc16:	add    DWORD PTR [rax],esi
  44cc18:	add    DWORD PTR [rax],eax
  44cc1a:	add    BYTE PTR [rax],al
  44cc1c:	add    DWORD PTR [rax],eax
  44cc1e:	add    BYTE PTR [rax],al
  44cc20:	add    DWORD PTR [rax],eax
  44cc22:	add    BYTE PTR [rax],al
  44cc24:	add    DWORD PTR [rdi],eax
  44cc26:	add    al,0x0
  44cc28:	(bad)  
  44cc29:	xor    al,BYTE PTR [rbx]
  44cc2b:	xor    BYTE PTR [rdx],al
  44cc2d:	(bad)  
  44cc2e:	add    DWORD PTR [rax+0x1],esi
  44cc31:	(bad)  
  44cc32:	add    eax,DWORD PTR [rax]
  44cc34:	(bad)  
  44cc35:	rex.X add sil,BYTE PTR [rax]
  44cc38:	add    DWORD PTR [rax+0x0],esp
  44cc3b:	add    BYTE PTR [rcx],al
  44cc3d:	add    eax,0x32050002
  44cc42:	add    DWORD PTR [rax],esi
  44cc44:	add    DWORD PTR [rdi],eax
  44cc46:	add    al,0x0
  44cc48:	(bad)  
  44cc49:	xor    al,BYTE PTR [rbx]
  44cc4b:	xor    BYTE PTR [rdx],al
  44cc4d:	(bad)  
  44cc4e:	add    DWORD PTR [rax+0x1],esi
  44cc51:	(bad)  
  44cc52:	add    eax,DWORD PTR [rax]
  44cc54:	(bad)  
  44cc55:	rex.X add sil,BYTE PTR [rax]
  44cc58:	add    DWORD PTR [rax+0x0],esp
  44cc5b:	add    BYTE PTR [rcx],al
  44cc5d:	(bad)  
  44cc5e:	add    eax,DWORD PTR [rax]
  44cc60:	(bad)  
  44cc61:	rex.X add sil,BYTE PTR [rax]
  44cc64:	add    DWORD PTR [rax+0x0],esp
  44cc67:	add    BYTE PTR [rcx],al
  44cc69:	or     BYTE PTR [rip+0x4420800],al        # 0x486d46f
  44cc6f:	xor    BYTE PTR [rbx],al
  44cc71:	(bad)  
  44cc72:	add    dh,BYTE PTR [rax+0x1]
  44cc75:	push   rax
  44cc76:	add    BYTE PTR [rax],al
  44cc78:	add    DWORD PTR [rcx],ecx
  44cc7a:	add    al,0x0
  44cc7c:	or     DWORD PTR [rcx],eax
  44cc7e:	sbb    eax,0x1300200
  44cc83:	(bad)  
  44cc84:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249cc8c
  44cc8a:	add    DWORD PTR [rax],esi
  44cc8c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249cc94
  44cc92:	add    DWORD PTR [rax],esi
  44cc94:	add    DWORD PTR [rax],eax
  44cc96:	add    BYTE PTR [rax],al
  44cc98:	add    DWORD PTR [rcx+rax*1],eax
  44cc9b:	add    BYTE PTR [rdx+riz*2],al
  44cc9e:	add    BYTE PTR [rax],al
  44cca0:	add    DWORD PTR [rsi],eax
  44cca2:	add    eax,DWORD PTR [rax]
  44cca4:	(bad)  
  44cca5:	(bad)  
  44cca7:	xor    BYTE PTR [rcx],al
  44cca9:	(bad)  
  44ccaa:	add    BYTE PTR [rax],al
  44ccac:	add    DWORD PTR [rsi],eax
  44ccae:	add    eax,DWORD PTR [rax]
  44ccb0:	(bad)  
  44ccb1:	(bad)  
  44ccb3:	xor    BYTE PTR [rcx],al
  44ccb5:	(bad)  
  44ccb6:	add    BYTE PTR [rax],al
  44ccb8:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249ccc0
  44ccbe:	add    DWORD PTR [rax],esi
  44ccc0:	add    DWORD PTR [rdx],ecx
  44ccc2:	(bad)  
  44ccc3:	add    BYTE PTR [rdx],cl
  44ccc5:	xor    al,BYTE PTR [rsi]
  44ccc7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4d12d
  44cccd:	push   rax
  44ccce:	add    al,al
  44ccd0:	add    DWORD PTR [rcx+rax*1],eax
  44ccd3:	add    BYTE PTR [rdx+riz*4],al
  44ccd6:	add    BYTE PTR [rax],al
  44ccd8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249cce0
  44ccde:	add    DWORD PTR [rax],esi
  44cce0:	add    DWORD PTR [rsi],ecx
  44cce2:	or     BYTE PTR [rax],al
  44cce4:	(bad)  
  44cce5:	jb     0x44ccf1
  44cce7:	xor    BYTE PTR [rcx],cl
  44cce9:	(bad)  
  44ccea:	or     BYTE PTR [rax+0x7],dh
  44cced:	push   rax
  44ccee:	(bad)  
  44ccef:	rol    BYTE PTR [rax+rdx*8],0x2
  44ccf3:	loopne 0x44ccf6
  44ccf5:	(bad)  
  44ccf6:	add    al,0x0
  44ccf8:	(bad)  
  44ccf9:	xor    al,BYTE PTR [rbx]
  44ccfb:	xor    BYTE PTR [rdx],al
  44ccfd:	(bad)  
  44ccfe:	add    DWORD PTR [rax+0x1],esi
  44cd01:	add    al,0x1
  44cd03:	add    BYTE PTR [rdx+riz*2],al
  44cd06:	add    BYTE PTR [rax],al
  44cd08:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x5251d215
  44cd0e:	or     DWORD PTR [rbx],eax
  44cd10:	(bad)  
  44cd11:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4d177
  44cd17:	rol    BYTE PTR [rcx],0x50
  44cd1a:	add    BYTE PTR [rax],al
  44cd1c:	add    DWORD PTR [rdx],ecx
  44cd1e:	(bad)  
  44cd1f:	add    BYTE PTR [rdx],cl
  44cd21:	xor    al,BYTE PTR [rsi]
  44cd23:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4d189
  44cd29:	push   rax
  44cd2a:	add    al,al
  44cd2c:	add    DWORD PTR [rsi],eax
  44cd2e:	add    eax,DWORD PTR [rax]
  44cd30:	(bad)  
  44cd31:	ret    0x3002
  44cd34:	add    DWORD PTR [rax+0x0],esp
  44cd37:	add    BYTE PTR [rcx],al
  44cd39:	adc    al,0x8
  44cd3b:	test   DWORD PTR [rbx+rax*1],edx
  44cd3e:	or     al,0x42
  44cd40:	or     BYTE PTR [rax],dh
  44cd42:	(bad)  
  44cd43:	(bad)  
  44cd44:	(bad)  
  44cd45:	jo     0x44cd4c
  44cd47:	rol    BYTE PTR [rbx],0xd0
  44cd4a:	add    DWORD PTR [rax+0x1],edx
  44cd4d:	(bad)  
  44cd4e:	add    al,0x0
  44cd50:	(bad)  
  44cd51:	xor    al,BYTE PTR [rbx]
  44cd53:	xor    BYTE PTR [rdx],al
  44cd55:	(bad)  
  44cd56:	add    DWORD PTR [rax+0x1],esi
  44cd59:	(bad)  
  44cd5a:	add    eax,DWORD PTR [rax]
  44cd5c:	(bad)  
  44cd5d:	ret    0x3002
  44cd60:	add    DWORD PTR [rax+0x0],esp
  44cd63:	add    BYTE PTR [rcx],al
  44cd65:	(bad)  
  44cd66:	add    eax,DWORD PTR [rax]
  44cd68:	(bad)  
  44cd69:	loop   0x44cd6d
  44cd6b:	xor    BYTE PTR [rcx],al
  44cd6d:	(bad)  
  44cd6e:	add    BYTE PTR [rax],al
  44cd70:	add    DWORD PTR [rcx],edx
  44cd72:	or     DWORD PTR [rip+0x30d3211],eax        # 0x351ff89
  44cd78:	or     dh,BYTE PTR [rax]
  44cd7a:	or     DWORD PTR [rax+0x8],esp
  44cd7d:	jo     0x44cd86
  44cd7f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x224d156
  44cd86:	add    BYTE PTR [rax],al
  44cd88:	add    DWORD PTR [rdi+rax*1],ecx
  44cd8b:	add    BYTE PTR [rdx+rax*8],cl
  44cd8e:	or     BYTE PTR [rax],dh
  44cd90:	(bad)  
  44cd91:	(bad)  
  44cd92:	(bad)  
  44cd93:	jo     0x44cd9a
  44cd95:	push   rax
  44cd96:	add    al,0xc0
  44cd98:	add    dl,al
  44cd9a:	add    BYTE PTR [rax],al
  44cd9c:	add    DWORD PTR [rbx],edx
  44cd9e:	or     al,BYTE PTR [rax]
  44cda0:	adc    eax,DWORD PTR [rcx]
  44cda2:	(bad)  
  44cda3:	add    BYTE PTR [rax+rsi*1],cl
  44cda6:	or     esp,DWORD PTR [rax+0xa]
  44cda9:	jo     0x44cdb4
  44cdab:	push   rax
  44cdac:	or     al,al
  44cdae:	(bad)  
  44cdaf:	rol    BYTE PTR [rax+riz*8],1
  44cdb2:	add    dh,al
  44cdb4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249cdbc
  44cdba:	add    DWORD PTR [rax],esi
  44cdbc:	add    DWORD PTR [rsi],eax
  44cdbe:	add    eax,DWORD PTR [rax]
  44cdc0:	(bad)  
  44cdc1:	rex.X add sil,BYTE PTR [rax]
  44cdc4:	add    DWORD PTR [rax+0x0],esp
  44cdc7:	add    BYTE PTR [rcx],al
  44cdc9:	add    BYTE PTR [rax],al
  44cdcb:	add    BYTE PTR [rcx],al
  44cdcd:	adc    BYTE PTR [rcx],cl
  44cdcf:	add    BYTE PTR [rax],dl
  44cdd1:	(bad)  
  44cdd2:	or     al,0x30
  44cdd4:	or     esp,DWORD PTR [rax+0xa]
  44cdd7:	jo     0x44cde2
  44cdd9:	push   rax
  44cdda:	or     al,al
  44cddc:	(bad)  
  44cddd:	rol    BYTE PTR [rax+riz*8],1
  44cde0:	add    dh,al
  44cde2:	add    BYTE PTR [rax],al
  44cde4:	add    DWORD PTR [rbx],ebx
  44cde6:	or     al,0x0
  44cde8:	sbb    ebp,DWORD PTR [rax+0xa]
  44cdeb:	add    BYTE PTR [rbx],dl
  44cded:	add    DWORD PTR [rdi],edx
  44cdef:	add    BYTE PTR [rax+rsi*1],cl
  44cdf2:	or     esp,DWORD PTR [rax+0xa]
  44cdf5:	jo     0x44ce00
  44cdf7:	push   rax
  44cdf8:	or     al,al
  44cdfa:	(bad)  
  44cdfb:	rol    BYTE PTR [rax+riz*8],1
  44cdfe:	add    dh,al
  44ce00:	add    DWORD PTR [rsp+rax*1],eax
  44ce03:	add    BYTE PTR [rax+rsi*1],al
  44ce06:	add    esp,DWORD PTR [rax+0x2]
  44ce09:	jo     0x44ce0c
  44ce0b:	push   rax
  44ce0c:	add    DWORD PTR [rax],eax
  44ce0e:	add    BYTE PTR [rax],al
  44ce10:	add    DWORD PTR [rsi],eax
  44ce12:	add    eax,DWORD PTR [rax]
  44ce14:	(bad)  
  44ce15:	rex.X add sil,BYTE PTR [rax]
  44ce18:	add    DWORD PTR [rax+0x0],esp
  44ce1b:	add    BYTE PTR [rcx],al
  44ce1d:	add    eax,0x32050002
  44ce22:	add    DWORD PTR [rax],esi
  44ce24:	add    DWORD PTR [rdi],eax
  44ce26:	add    al,0x0
  44ce28:	(bad)  
  44ce29:	xor    al,BYTE PTR [rbx]
  44ce2b:	xor    BYTE PTR [rdx],al
  44ce2d:	(bad)  
  44ce2e:	add    DWORD PTR [rax+0x1],esi
  44ce31:	add    eax,0x32050002
  44ce36:	add    DWORD PTR [rax],esi
  44ce38:	add    DWORD PTR [rax],ecx
  44ce3a:	add    eax,0x4420800
  44ce3f:	xor    BYTE PTR [rbx],al
  44ce41:	(bad)  
  44ce42:	add    dh,BYTE PTR [rax+0x1]
  44ce45:	push   rax
  44ce46:	add    BYTE PTR [rax],al
  44ce48:	add    DWORD PTR [rip+0x32050002],eax        # 0x3249ce50
  44ce4e:	add    DWORD PTR [rax],esi
  44ce50:	add    DWORD PTR [rsi],ecx
  44ce52:	or     BYTE PTR [rax],al
  44ce54:	(bad)  
  44ce55:	xor    cl,BYTE PTR [rdx]
  44ce57:	xor    BYTE PTR [rcx],cl
  44ce59:	(bad)  
  44ce5a:	or     BYTE PTR [rax+0x7],dh
  44ce5d:	push   rax
  44ce5e:	(bad)  
  44ce5f:	rol    BYTE PTR [rax+rdx*8],0x2
  44ce63:	loopne 0x44ce66
  44ce65:	or     BYTE PTR [rip+0x4420800],al        # 0x486d66b
  44ce6b:	xor    BYTE PTR [rbx],al
  44ce6d:	(bad)  
  44ce6e:	add    dh,BYTE PTR [rax+0x1]
  44ce71:	push   rax
  44ce72:	add    BYTE PTR [rax],al
  44ce74:	add    DWORD PTR [rdi+rax*1],ecx
  44ce77:	add    BYTE PTR [rdx+rax*2],cl
  44ce7a:	or     BYTE PTR [rax],dh
  44ce7c:	(bad)  
  44ce7d:	(bad)  
  44ce7e:	(bad)  
  44ce7f:	jo     0x44ce86
  44ce81:	push   rax
  44ce82:	add    al,0xc0
  44ce84:	add    dl,al
  44ce86:	add    BYTE PTR [rax],al
  44ce88:	add    DWORD PTR [rax],eax
  44ce8a:	add    BYTE PTR [rax],al
  44ce8c:	add    DWORD PTR [rdi],eax
  44ce8e:	add    al,0x0
  44ce90:	(bad)  
  44ce91:	xor    al,BYTE PTR [rbx]
  44ce93:	xor    BYTE PTR [rdx],al
  44ce95:	(bad)  
  44ce96:	add    DWORD PTR [rax+0x1],esi
  44ce99:	(bad)  
  44ce9a:	add    eax,DWORD PTR [rax]
  44ce9c:	(bad)  
  44ce9d:	and    al,BYTE PTR [rdx]
  44ce9f:	xor    BYTE PTR [rcx],al
  44cea1:	(bad)  
  44cea2:	add    BYTE PTR [rax],al
  44cea4:	add    DWORD PTR [rdi],eax
  44cea6:	add    al,0x0
  44cea8:	(bad)  
  44cea9:	xor    al,BYTE PTR [rbx]
  44ceab:	xor    BYTE PTR [rdx],al
  44cead:	(bad)  
  44ceae:	add    DWORD PTR [rax+0x1],esi
  44ceb1:	add    BYTE PTR [rax],al
  44ceb3:	add    BYTE PTR [rcx],al
  44ceb5:	or     BYTE PTR [rip+0x4820800],al        # 0x4c6d6bb
  44cebb:	xor    BYTE PTR [rbx],al
  44cebd:	(bad)  
  44cebe:	add    dh,BYTE PTR [rax+0x1]
  44cec1:	push   rax
  44cec2:	add    BYTE PTR [rax],al
  44cec4:	add    DWORD PTR [rax],ecx
  44cec6:	add    eax,0x4a20800
  44cecb:	xor    BYTE PTR [rbx],al
  44cecd:	(bad)  
  44cece:	add    dh,BYTE PTR [rax+0x1]
  44ced1:	push   rax
  44ced2:	add    BYTE PTR [rax],al
  44ced4:	add    DWORD PTR [rax],edx
  44ced6:	or     DWORD PTR [rax],eax
  44ced8:	adc    BYTE PTR [rdx+0x600b300c],al
  44cede:	or     dh,BYTE PTR [rax+0x9]
  44cee1:	push   rax
  44cee2:	or     al,al
  44cee4:	(bad)  
  44cee5:	rol    BYTE PTR [rax+riz*8],1
  44cee8:	add    dh,al
  44ceea:	add    BYTE PTR [rax],al
  44ceec:	add    DWORD PTR [rax],ecx
  44ceee:	add    eax,0x4820800
  44cef3:	xor    BYTE PTR [rbx],al
  44cef5:	(bad)  
  44cef6:	add    dh,BYTE PTR [rax+0x1]
  44cef9:	push   rax
  44cefa:	add    BYTE PTR [rax],al
  44cefc:	add    DWORD PTR [rcx+rax*1],eax
  44ceff:	add    BYTE PTR [rdx+riz*4],al
  44cf02:	add    BYTE PTR [rax],al
  44cf04:	add    DWORD PTR [rdi],eax
  44cf06:	add    al,0x0
  44cf08:	(bad)  
  44cf09:	push   rdx
  44cf0a:	add    esi,DWORD PTR [rax]
  44cf0c:	add    ah,BYTE PTR [rax+0x1]
  44cf0f:	jo     0x44cf12
  44cf11:	(bad)  
  44cf12:	or     BYTE PTR [rax],al
  44cf14:	(bad)  
  44cf15:	push   rdx
  44cf16:	or     dh,BYTE PTR [rax]
  44cf18:	or     DWORD PTR [rax+0x8],esp
  44cf1b:	jo     0x44cf24
  44cf1d:	push   rax
  44cf1e:	(bad)  
  44cf1f:	rol    BYTE PTR [rax+rdx*8],0x2
  44cf23:	loopne 0x44cf26
  44cf25:	add    BYTE PTR [rax],al
  44cf27:	add    BYTE PTR [rcx],al
  44cf29:	add    BYTE PTR [rax],al
  44cf2b:	add    BYTE PTR [rcx],al
  44cf2d:	add    BYTE PTR [rax],al
  44cf2f:	add    BYTE PTR [rcx],al
  44cf31:	add    BYTE PTR [rax],al
  44cf33:	add    BYTE PTR [rcx],al
  44cf35:	add    eax,0x32050002
  44cf3a:	add    DWORD PTR [rax],esi
  44cf3c:	add    DWORD PTR [rcx+rax*1],eax
  44cf3f:	add    BYTE PTR [rdx+rax*2],al
  44cf42:	add    BYTE PTR [rax],al
  44cf44:	add    DWORD PTR [rax],eax
  44cf46:	add    BYTE PTR [rax],al
  44cf48:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000044d000 <.bss>:
	...

Disassembly of section .idata:

0000000000451000 <.idata>:
  451000:	js     0x451012
  451002:	add    eax,0x0
  451007:	add    BYTE PTR [rax],al
  451009:	add    BYTE PTR [rax],al
  45100b:	add    BYTE PTR [rax+0x24],dl
  45100e:	add    eax,0x5157000
  451013:	add    BYTE PTR [rax],dh
  451015:	adc    al,BYTE PTR [rip+0x0]        # 0x45101b
  45101b:	add    BYTE PTR [rax],al
  45101d:	add    BYTE PTR [rax],al
  45101f:	add    BYTE PTR [rax+0x28000525],dl
  451025:	(bad)  
  451026:	add    eax,0x5149800
	...
  451033:	add    al,bl
  451035:	and    eax,0x19900005
  45103a:	add    eax,0x5151800
	...
  451047:	add    al,ch
  451049:	and    eax,0x1a100005
  45104e:	add    eax,0x5152800
	...
  45105b:	add    BYTE PTR [rsi+riz*1],bl
  45105e:	add    eax,0x51a2000
	...
  451077:	add    BYTE PTR [rax+0x1a],ch
  45107a:	add    eax,0x0
  45107f:	add    BYTE PTR [rsi+0x1a],dh
  451082:	add    eax,0x0
  451087:	add    BYTE PTR [rdx+rbx*1+0x5],cl
  45108e:	add    BYTE PTR [rax],al
  451090:	sahf   
  451091:	sbb    al,BYTE PTR [rip+0x0]        # 0x451097
  451097:	add    BYTE PTR [rdx+rbx*1+0x5],dh
  45109e:	add    BYTE PTR [rax],al
  4510a0:	int3   
  4510a1:	sbb    al,BYTE PTR [rip+0x0]        # 0x4510a7
  4510a7:	add    ah,ah
  4510a9:	sbb    al,BYTE PTR [rip+0x0]        # 0x4510af
  4510af:	add    al,dh
  4510b1:	sbb    al,BYTE PTR [rip+0x0]        # 0x4510b7
  4510b7:	add    BYTE PTR [rdx],al
  4510b9:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4510bf
  4510bf:	add    BYTE PTR [rdx],bl
  4510c1:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4510c7
  4510c7:	add    BYTE PTR [rbx+rbx*1],ch
  4510ca:	add    eax,0x0
  4510cf:	add    BYTE PTR [rbx+rbx*1+0x5],al
  4510d3:	add    BYTE PTR [rax],al
  4510d5:	add    BYTE PTR [rax],al
  4510d7:	add    BYTE PTR [rax+0x1b],bl
  4510da:	add    eax,0x0
  4510df:	add    BYTE PTR [rsi+0x1b],ch
  4510e2:	add    eax,0x0
  4510e7:	add    BYTE PTR [rbx+rbx*1+0x5],al
  4510ee:	add    BYTE PTR [rax],al
  4510f0:	cwde   
  4510f1:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4510f7
  4510f7:	add    BYTE PTR [rax+0x51b],ch
  4510fd:	add    BYTE PTR [rax],al
  4510ff:	add    BYTE PTR [rbx+rbx*1+0x5],bh
  451106:	add    BYTE PTR [rax],al
  451108:	rcr    BYTE PTR [rbx],1
  45110a:	add    eax,0x0
  45110f:	add    dl,ah
  451111:	sbb    eax,DWORD PTR [rip+0x0]        # 0x451117
  451117:	add    ah,dh
  451119:	sbb    eax,DWORD PTR [rip+0x0]        # 0x45111f
  45111f:	add    BYTE PTR [rdx],cl
  451121:	sbb    al,0x5
  451123:	add    BYTE PTR [rax],al
  451125:	add    BYTE PTR [rax],al
  451127:	add    BYTE PTR [rsp+rbx*1],ah
  45112a:	add    eax,0x0
  45112f:	add    BYTE PTR [rax],bh
  451131:	sbb    al,0x5
  451133:	add    BYTE PTR [rax],al
  451135:	add    BYTE PTR [rax],al
  451137:	add    BYTE PTR [rax+0x1c],cl
  45113a:	add    eax,0x0
  45113f:	add    BYTE PTR [rdx+0x1c],ah
  451142:	add    eax,0x0
  451147:	add    BYTE PTR [rsi+0x1c],bh
  45114a:	add    eax,0x0
  45114f:	add    BYTE PTR [rdx+0x51c],dl
  451155:	add    BYTE PTR [rax],al
  451157:	add    BYTE PTR [rdx+0x51c],ch
  45115d:	add    BYTE PTR [rax],al
  45115f:	add    BYTE PTR [rdx+0x51c],bh
  451165:	add    BYTE PTR [rax],al
  451167:	add    dh,al
  451169:	sbb    al,0x5
  45116b:	add    BYTE PTR [rax],al
  45116d:	add    BYTE PTR [rax],al
  45116f:	add    ah,bl
  451171:	sbb    al,0x5
  451173:	add    BYTE PTR [rax],al
  451175:	add    BYTE PTR [rax],al
  451177:	add    dl,ch
  451179:	sbb    al,0x5
  45117b:	add    BYTE PTR [rax],al
  45117d:	add    BYTE PTR [rax],al
  45117f:	add    BYTE PTR [rbx*1+0x5],al
  451186:	add    BYTE PTR [rax],al
  451188:	sbb    BYTE PTR [rip+0x5],bl        # 0x451193
  45118e:	add    BYTE PTR [rax],al
  451190:	sub    BYTE PTR [rip+0x5],bl        # 0x45119b
  451196:	add    BYTE PTR [rax],al
  451198:	ds sbb eax,0x5
  45119e:	add    BYTE PTR [rax],al
  4511a0:	push   rdx
  4511a1:	sbb    eax,0x5
  4511a6:	add    BYTE PTR [rax],al
  4511a8:	ins    BYTE PTR es:[rdi],dx
  4511a9:	sbb    eax,0x5
  4511ae:	add    BYTE PTR [rax],al
  4511b0:	sbb    BYTE PTR [rip+0x5],0x0        # 0x4511bc
  4511b7:	add    BYTE PTR [rax+0x51d],bl
  4511bd:	add    BYTE PTR [rax],al
  4511bf:	add    BYTE PTR [rax+0x51d],ch
  4511c5:	add    BYTE PTR [rax],al
  4511c7:	add    BYTE PTR [rbp+rbx*1+0x5],bh
  4511ce:	add    BYTE PTR [rax],al
  4511d0:	ficomp DWORD PTR [rip+0x5]        # 0x4511db
  4511d6:	add    BYTE PTR [rax],al
  4511d8:	loop   0x4511f7
  4511da:	add    eax,0x0
  4511df:	add    dl,dh
  4511e1:	sbb    eax,0x5
  4511e6:	add    BYTE PTR [rax],al
  4511e8:	(bad)  
  4511e9:	(bad)  
  4511ea:	add    eax,0x0
  4511ef:	add    BYTE PTR [rsi+rbx*1],dl
  4511f2:	add    eax,0x0
  4511f7:	add    BYTE PTR [rax],dh
  4511f9:	(bad)  
  4511fa:	add    eax,0x0
  4511ff:	add    BYTE PTR [rdx+0x1e],al
  451202:	add    eax,0x0
  451207:	add    BYTE PTR [rdx+0x1e],dl
  45120a:	add    eax,0x0
  45120f:	add    BYTE PTR [rsi+0x1e],ah
  451212:	add    eax,0x0
  451217:	add    BYTE PTR [rsi+rbx*1+0x5],bh
  45121b:	add    BYTE PTR [rax],al
  45121d:	add    BYTE PTR [rax],al
  45121f:	add    BYTE PTR [rdx+0x51e],dl
	...
  45122d:	add    BYTE PTR [rax],al
  45122f:	add    BYTE PTR [rax+0x51e],ch
  451235:	add    BYTE PTR [rax],al
  451237:	add    al,al
  451239:	(bad)  
  45123a:	add    eax,0x0
  45123f:	add    dh,dl
  451241:	(bad)  
  451242:	add    eax,0x0
  451247:	add    ah,ah
  451249:	(bad)  
  45124a:	add    eax,0x0
  45124f:	add    ah,dh
  451251:	(bad)  
  451252:	add    eax,0x0
  451257:	add    BYTE PTR [rax],al
  451259:	(bad)  
  45125a:	add    eax,0x0
  45125f:	add    BYTE PTR [rsi],cl
  451261:	(bad)  
  451262:	add    eax,0x0
  451267:	add    BYTE PTR [rsi],bl
  451269:	(bad)  
  45126a:	add    eax,0x0
  45126f:	add    BYTE PTR [rsi],ch
  451271:	(bad)  
  451272:	add    eax,0x0
  451277:	add    BYTE PTR [rax+0x1f],al
  45127a:	add    eax,0x0
  45127f:	add    BYTE PTR [rdi+rbx*1+0x5],dl
  451283:	add    BYTE PTR [rax],al
  451285:	add    BYTE PTR [rax],al
  451287:	add    BYTE PTR [rsi+0x1f],bl
  45128a:	add    eax,0x0
  45128f:	add    BYTE PTR [rdi+rbx*1+0x5],ch
  451293:	add    BYTE PTR [rax],al
  451295:	add    BYTE PTR [rax],al
  451297:	add    BYTE PTR [rsi+0x1f],dh
  45129a:	add    eax,0x0
  45129f:	add    BYTE PTR [rax+0x51f],al
  4512a5:	add    BYTE PTR [rax],al
  4512a7:	add    BYTE PTR [rdx+0x51f],cl
  4512ad:	add    BYTE PTR [rax],al
  4512af:	add    BYTE PTR [rsi+0x51f],dl
  4512b5:	add    BYTE PTR [rax],al
  4512b7:	add    BYTE PTR [rdx+0x51f],ah
  4512bd:	add    BYTE PTR [rax],al
  4512bf:	add    BYTE PTR [rdx+0x51f],ch
  4512c5:	add    BYTE PTR [rax],al
  4512c7:	add    BYTE PTR [rsi+0x51f],dh
  4512cd:	add    BYTE PTR [rax],al
  4512cf:	add    al,al
  4512d1:	(bad)  
  4512d2:	add    eax,0x0
  4512d7:	add    ah,cl
  4512d9:	(bad)  
  4512da:	add    eax,0x0
  4512df:	add    al,bl
  4512e1:	(bad)  
  4512e2:	add    eax,0x0
  4512e7:	add    dl,ah
  4512e9:	(bad)  
  4512ea:	add    eax,0x0
  4512ef:	add    dl,ch
  4512f1:	(bad)  
  4512f2:	add    eax,0x0
  4512f7:	add    ah,dh
  4512f9:	(bad)  
  4512fa:	add    eax,0x0
  4512ff:	add    ah,bh
  451301:	(bad)  
  451302:	add    eax,0x0
  451307:	add    BYTE PTR [rsi],al
  451309:	and    BYTE PTR [rip+0x0],al        # 0x45130f
  45130f:	add    BYTE PTR [rax],dl
  451311:	and    BYTE PTR [rip+0x0],al        # 0x451317
  451317:	add    BYTE PTR [rdx],bl
  451319:	and    BYTE PTR [rip+0x0],al        # 0x45131f
  45131f:	add    BYTE PTR [rdx],ah
  451321:	and    BYTE PTR [rip+0x0],al        # 0x451327
  451327:	add    BYTE PTR [rax+riz*1],ch
  45132a:	add    eax,0x0
  45132f:	add    BYTE PTR [rax+riz*1],dh
  451332:	add    eax,0x0
  451337:	add    BYTE PTR [rax+riz*1],bh
  45133a:	add    eax,0x0
  45133f:	add    BYTE PTR [rax+riz*1+0x5],al
  451343:	add    BYTE PTR [rax],al
  451345:	add    BYTE PTR [rax],al
  451347:	add    BYTE PTR [rax+riz*1+0x5],cl
  45134b:	add    BYTE PTR [rax],al
  45134d:	add    BYTE PTR [rax],al
  45134f:	add    BYTE PTR [rax+riz*1+0x5],dl
  451353:	add    BYTE PTR [rax],al
  451355:	add    BYTE PTR [rax],al
  451357:	add    BYTE PTR [rsi+0x20],bl
  45135a:	add    eax,0x0
  45135f:	add    BYTE PTR [rax+0x20],ch
  451362:	add    eax,0x0
  451367:	add    BYTE PTR [rdx+0x20],dh
  45136a:	add    eax,0x0
  45136f:	add    BYTE PTR [rax+riz*1+0x5],bh
  451373:	add    BYTE PTR [rax],al
  451375:	add    BYTE PTR [rax],al
  451377:	add    BYTE PTR [rsi+0x520],al
  45137d:	add    BYTE PTR [rax],al
  45137f:	add    BYTE PTR [rdx+0x520],dl
  451385:	add    BYTE PTR [rax],al
  451387:	add    BYTE PTR [rax+0x520],ah
  45138d:	add    BYTE PTR [rax],al
  45138f:	add    BYTE PTR [rdx+0x520],ch
  451395:	add    BYTE PTR [rax],al
  451397:	add    BYTE PTR [rax+riz*1+0x5],dh
  45139e:	add    BYTE PTR [rax],al
  4513a0:	mov    esi,0x520
  4513a5:	add    BYTE PTR [rax],al
  4513a7:	add    al,cl
  4513a9:	and    BYTE PTR [rip+0x0],al        # 0x4513af
  4513af:	add    dl,dl
  4513b1:	and    BYTE PTR [rip+0x0],al        # 0x4513b7
  4513b7:	add    ah,bl
  4513b9:	and    BYTE PTR [rip+0x0],al        # 0x4513bf
  4513bf:	add    dh,ah
  4513c1:	and    BYTE PTR [rip+0x0],al        # 0x4513c7
  4513c7:	add    al,dh
  4513c9:	and    BYTE PTR [rip+0x0],al        # 0x4513cf
  4513cf:	add    dl,bh
  4513d1:	and    BYTE PTR [rip+0x0],al        # 0x4513d7
  4513d7:	add    BYTE PTR [rcx+riz*1],al
  4513da:	add    eax,0x0
  4513df:	add    BYTE PTR [rsi],cl
  4513e1:	and    DWORD PTR [rip+0x0],eax        # 0x4513e7
  4513e7:	add    BYTE PTR [rax],bl
  4513e9:	and    DWORD PTR [rip+0x0],eax        # 0x4513ef
  4513ef:	add    BYTE PTR [rcx+riz*1],ah
  4513f2:	add    eax,0x0
  4513f7:	add    BYTE PTR [rsi],ch
  4513f9:	and    DWORD PTR [rip+0x0],eax        # 0x4513ff
  4513ff:	add    BYTE PTR [rax],bh
  451401:	and    DWORD PTR [rip+0x0],eax        # 0x451407
  451407:	add    BYTE PTR [rdx+0x21],al
  45140a:	add    eax,0x0
  45140f:	add    BYTE PTR [rcx+riz*1+0x5],cl
  451413:	add    BYTE PTR [rax],al
  451415:	add    BYTE PTR [rax],al
  451417:	add    BYTE PTR [rsi+0x21],dl
  45141a:	add    eax,0x0
  45141f:	add    BYTE PTR [rax+0x21],ah
  451422:	add    eax,0x0
  451427:	add    BYTE PTR [rdx+0x21],ch
  45142a:	add    eax,0x0
  45142f:	add    BYTE PTR [rcx+riz*1+0x5],dh
  451433:	add    BYTE PTR [rax],al
  451435:	add    BYTE PTR [rax],al
  451437:	add    BYTE PTR [rax+0x521],al
  45143d:	add    BYTE PTR [rax],al
  45143f:	add    BYTE PTR [rdx+0x521],cl
  451445:	add    BYTE PTR [rax],al
  451447:	add    BYTE PTR [rsi+0x521],dl
  45144d:	add    BYTE PTR [rax],al
  45144f:	add    BYTE PTR [rax+0x521],ah
  451455:	add    BYTE PTR [rax],al
  451457:	add    BYTE PTR [rdx+0x521],ch
  45145d:	add    BYTE PTR [rax],al
  45145f:	add    BYTE PTR [rcx+riz*1+0x5],dh
  451466:	add    BYTE PTR [rax],al
  451468:	mov    esi,0x521
  45146d:	add    BYTE PTR [rax],al
  45146f:	add    al,cl
  451471:	and    DWORD PTR [rip+0x0],eax        # 0x451477
  451477:	add    al,dl
  451479:	and    DWORD PTR [rip+0x0],eax        # 0x45147f
  45147f:	add    al,bl
  451481:	and    DWORD PTR [rip+0x0],eax        # 0x451487
  451487:	add    dl,ah
  451489:	and    DWORD PTR [rip+0x0],eax        # 0x45148f
	...
  451497:	add    ah,ch
  451499:	and    DWORD PTR [rip+0x0],eax        # 0x45149f
  45149f:	add    dl,bh
  4514a1:	and    DWORD PTR [rip+0x0],eax        # 0x4514a7
  4514a7:	add    BYTE PTR [rdx],cl
  4514a9:	and    al,BYTE PTR [rip+0x0]        # 0x4514af
  4514af:	add    BYTE PTR [rdx+riz*1],dl
  4514b2:	add    eax,0x0
  4514b7:	add    BYTE PTR [rdx+riz*1],bl
  4514ba:	add    eax,0x0
  4514bf:	add    BYTE PTR [rdx],ch
  4514c1:	and    al,BYTE PTR [rip+0x0]        # 0x4514c7
  4514c7:	add    BYTE PTR [rax],bh
  4514c9:	and    al,BYTE PTR [rip+0x0]        # 0x4514cf
  4514cf:	add    BYTE PTR [rax+0x22],al
  4514d2:	add    eax,0x0
  4514d7:	add    BYTE PTR [rdx+riz*1+0x5],cl
  4514db:	add    BYTE PTR [rax],al
  4514dd:	add    BYTE PTR [rax],al
  4514df:	add    BYTE PTR [rsi+0x22],dl
  4514e2:	add    eax,0x0
  4514e7:	add    BYTE PTR [rsi+0x22],bl
  4514ea:	add    eax,0x0
  4514ef:	add    BYTE PTR [rsi+0x22],ah
  4514f2:	add    eax,0x0
  4514f7:	add    BYTE PTR [rax+0x22],dh
  4514fa:	add    eax,0x0
  4514ff:	add    BYTE PTR [rax+0x22],bh
  451502:	add    eax,0x0
  451507:	add    BYTE PTR [rsi+0x522],al
	...
  451515:	add    BYTE PTR [rax],al
  451517:	add    BYTE PTR [rax+0x522],dl
	...
  451525:	add    BYTE PTR [rax],al
  451527:	add    BYTE PTR [rdx+riz*1+0x5],ah
  45152e:	add    BYTE PTR [rax],al
  451530:	int3   
  451531:	and    al,BYTE PTR [rip+0x0]        # 0x451537
  451537:	add    al,bh
  451539:	and    al,BYTE PTR [rip+0x0]        # 0x45153f
  45153f:	add    BYTE PTR [rbx+riz*1],dl
  451542:	add    eax,0x0
  451547:	add    BYTE PTR [rax],ch
  451549:	and    eax,DWORD PTR [rip+0x0]        # 0x45154f
  45154f:	add    BYTE PTR [rbx+riz*1],bh
  451552:	add    eax,0x0
  451557:	add    BYTE PTR [rbx+riz*1+0x5],cl
  45155b:	add    BYTE PTR [rax],al
  45155d:	add    BYTE PTR [rax],al
  45155f:	add    BYTE PTR [rbx+riz*1+0x5],bl
	...
  45156f:	add    BYTE PTR [rax+0x1a],ch
  451572:	add    eax,0x0
  451577:	add    BYTE PTR [rsi+0x1a],dh
  45157a:	add    eax,0x0
  45157f:	add    BYTE PTR [rdx+rbx*1+0x5],cl
  451586:	add    BYTE PTR [rax],al
  451588:	sahf   
  451589:	sbb    al,BYTE PTR [rip+0x0]        # 0x45158f
  45158f:	add    BYTE PTR [rdx+rbx*1+0x5],dh
  451596:	add    BYTE PTR [rax],al
  451598:	int3   
  451599:	sbb    al,BYTE PTR [rip+0x0]        # 0x45159f
  45159f:	add    ah,ah
  4515a1:	sbb    al,BYTE PTR [rip+0x0]        # 0x4515a7
  4515a7:	add    al,dh
  4515a9:	sbb    al,BYTE PTR [rip+0x0]        # 0x4515af
  4515af:	add    BYTE PTR [rdx],al
  4515b1:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4515b7
  4515b7:	add    BYTE PTR [rdx],bl
  4515b9:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4515bf
  4515bf:	add    BYTE PTR [rbx+rbx*1],ch
  4515c2:	add    eax,0x0
  4515c7:	add    BYTE PTR [rbx+rbx*1+0x5],al
  4515cb:	add    BYTE PTR [rax],al
  4515cd:	add    BYTE PTR [rax],al
  4515cf:	add    BYTE PTR [rax+0x1b],bl
  4515d2:	add    eax,0x0
  4515d7:	add    BYTE PTR [rsi+0x1b],ch
  4515da:	add    eax,0x0
  4515df:	add    BYTE PTR [rbx+rbx*1+0x5],al
  4515e6:	add    BYTE PTR [rax],al
  4515e8:	cwde   
  4515e9:	sbb    eax,DWORD PTR [rip+0x0]        # 0x4515ef
  4515ef:	add    BYTE PTR [rax+0x51b],ch
  4515f5:	add    BYTE PTR [rax],al
  4515f7:	add    BYTE PTR [rbx+rbx*1+0x5],bh
  4515fe:	add    BYTE PTR [rax],al
  451600:	rcr    BYTE PTR [rbx],1
  451602:	add    eax,0x0
  451607:	add    dl,ah
  451609:	sbb    eax,DWORD PTR [rip+0x0]        # 0x45160f
  45160f:	add    ah,dh
  451611:	sbb    eax,DWORD PTR [rip+0x0]        # 0x451617
  451617:	add    BYTE PTR [rdx],cl
  451619:	sbb    al,0x5
  45161b:	add    BYTE PTR [rax],al
  45161d:	add    BYTE PTR [rax],al
  45161f:	add    BYTE PTR [rsp+rbx*1],ah
  451622:	add    eax,0x0
  451627:	add    BYTE PTR [rax],bh
  451629:	sbb    al,0x5
  45162b:	add    BYTE PTR [rax],al
  45162d:	add    BYTE PTR [rax],al
  45162f:	add    BYTE PTR [rax+0x1c],cl
  451632:	add    eax,0x0
  451637:	add    BYTE PTR [rdx+0x1c],ah
  45163a:	add    eax,0x0
  45163f:	add    BYTE PTR [rsi+0x1c],bh
  451642:	add    eax,0x0
  451647:	add    BYTE PTR [rdx+0x51c],dl
  45164d:	add    BYTE PTR [rax],al
  45164f:	add    BYTE PTR [rdx+0x51c],ch
  451655:	add    BYTE PTR [rax],al
  451657:	add    BYTE PTR [rdx+0x51c],bh
  45165d:	add    BYTE PTR [rax],al
  45165f:	add    dh,al
  451661:	sbb    al,0x5
  451663:	add    BYTE PTR [rax],al
  451665:	add    BYTE PTR [rax],al
  451667:	add    ah,bl
  451669:	sbb    al,0x5
  45166b:	add    BYTE PTR [rax],al
  45166d:	add    BYTE PTR [rax],al
  45166f:	add    dl,ch
  451671:	sbb    al,0x5
  451673:	add    BYTE PTR [rax],al
  451675:	add    BYTE PTR [rax],al
  451677:	add    BYTE PTR [rbx*1+0x5],al
  45167e:	add    BYTE PTR [rax],al
  451680:	sbb    BYTE PTR [rip+0x5],bl        # 0x45168b
  451686:	add    BYTE PTR [rax],al
  451688:	sub    BYTE PTR [rip+0x5],bl        # 0x451693
  45168e:	add    BYTE PTR [rax],al
  451690:	ds sbb eax,0x5
  451696:	add    BYTE PTR [rax],al
  451698:	push   rdx
  451699:	sbb    eax,0x5
  45169e:	add    BYTE PTR [rax],al
  4516a0:	ins    BYTE PTR es:[rdi],dx
  4516a1:	sbb    eax,0x5
  4516a6:	add    BYTE PTR [rax],al
  4516a8:	sbb    BYTE PTR [rip+0x5],0x0        # 0x4516b4
  4516af:	add    BYTE PTR [rax+0x51d],bl
  4516b5:	add    BYTE PTR [rax],al
  4516b7:	add    BYTE PTR [rax+0x51d],ch
  4516bd:	add    BYTE PTR [rax],al
  4516bf:	add    BYTE PTR [rbp+rbx*1+0x5],bh
  4516c6:	add    BYTE PTR [rax],al
  4516c8:	ficomp DWORD PTR [rip+0x5]        # 0x4516d3
  4516ce:	add    BYTE PTR [rax],al
  4516d0:	loop   0x4516ef
  4516d2:	add    eax,0x0
  4516d7:	add    dl,dh
  4516d9:	sbb    eax,0x5
  4516de:	add    BYTE PTR [rax],al
  4516e0:	(bad)  
  4516e1:	(bad)  
  4516e2:	add    eax,0x0
  4516e7:	add    BYTE PTR [rsi+rbx*1],dl
  4516ea:	add    eax,0x0
  4516ef:	add    BYTE PTR [rax],dh
  4516f1:	(bad)  
  4516f2:	add    eax,0x0
  4516f7:	add    BYTE PTR [rdx+0x1e],al
  4516fa:	add    eax,0x0
  4516ff:	add    BYTE PTR [rdx+0x1e],dl
  451702:	add    eax,0x0
  451707:	add    BYTE PTR [rsi+0x1e],ah
  45170a:	add    eax,0x0
  45170f:	add    BYTE PTR [rsi+rbx*1+0x5],bh
  451713:	add    BYTE PTR [rax],al
  451715:	add    BYTE PTR [rax],al
  451717:	add    BYTE PTR [rdx+0x51e],dl
	...
  451725:	add    BYTE PTR [rax],al
  451727:	add    BYTE PTR [rax+0x51e],ch
  45172d:	add    BYTE PTR [rax],al
  45172f:	add    al,al
  451731:	(bad)  
  451732:	add    eax,0x0
  451737:	add    dh,dl
  451739:	(bad)  
  45173a:	add    eax,0x0
  45173f:	add    ah,ah
  451741:	(bad)  
  451742:	add    eax,0x0
  451747:	add    ah,dh
  451749:	(bad)  
  45174a:	add    eax,0x0
  45174f:	add    BYTE PTR [rax],al
  451751:	(bad)  
  451752:	add    eax,0x0
  451757:	add    BYTE PTR [rsi],cl
  451759:	(bad)  
  45175a:	add    eax,0x0
  45175f:	add    BYTE PTR [rsi],bl
  451761:	(bad)  
  451762:	add    eax,0x0
  451767:	add    BYTE PTR [rsi],ch
  451769:	(bad)  
  45176a:	add    eax,0x0
  45176f:	add    BYTE PTR [rax+0x1f],al
  451772:	add    eax,0x0
  451777:	add    BYTE PTR [rdi+rbx*1+0x5],dl
  45177b:	add    BYTE PTR [rax],al
  45177d:	add    BYTE PTR [rax],al
  45177f:	add    BYTE PTR [rsi+0x1f],bl
  451782:	add    eax,0x0
  451787:	add    BYTE PTR [rdi+rbx*1+0x5],ch
  45178b:	add    BYTE PTR [rax],al
  45178d:	add    BYTE PTR [rax],al
  45178f:	add    BYTE PTR [rsi+0x1f],dh
  451792:	add    eax,0x0
  451797:	add    BYTE PTR [rax+0x51f],al
  45179d:	add    BYTE PTR [rax],al
  45179f:	add    BYTE PTR [rdx+0x51f],cl
  4517a5:	add    BYTE PTR [rax],al
  4517a7:	add    BYTE PTR [rsi+0x51f],dl
  4517ad:	add    BYTE PTR [rax],al
  4517af:	add    BYTE PTR [rdx+0x51f],ah
  4517b5:	add    BYTE PTR [rax],al
  4517b7:	add    BYTE PTR [rdx+0x51f],ch
  4517bd:	add    BYTE PTR [rax],al
  4517bf:	add    BYTE PTR [rsi+0x51f],dh
  4517c5:	add    BYTE PTR [rax],al
  4517c7:	add    al,al
  4517c9:	(bad)  
  4517ca:	add    eax,0x0
  4517cf:	add    ah,cl
  4517d1:	(bad)  
  4517d2:	add    eax,0x0
  4517d7:	add    al,bl
  4517d9:	(bad)  
  4517da:	add    eax,0x0
  4517df:	add    dl,ah
  4517e1:	(bad)  
  4517e2:	add    eax,0x0
  4517e7:	add    dl,ch
  4517e9:	(bad)  
  4517ea:	add    eax,0x0
  4517ef:	add    ah,dh
  4517f1:	(bad)  
  4517f2:	add    eax,0x0
  4517f7:	add    ah,bh
  4517f9:	(bad)  
  4517fa:	add    eax,0x0
  4517ff:	add    BYTE PTR [rsi],al
  451801:	and    BYTE PTR [rip+0x0],al        # 0x451807
  451807:	add    BYTE PTR [rax],dl
  451809:	and    BYTE PTR [rip+0x0],al        # 0x45180f
  45180f:	add    BYTE PTR [rdx],bl
  451811:	and    BYTE PTR [rip+0x0],al        # 0x451817
  451817:	add    BYTE PTR [rdx],ah
  451819:	and    BYTE PTR [rip+0x0],al        # 0x45181f
  45181f:	add    BYTE PTR [rax+riz*1],ch
  451822:	add    eax,0x0
  451827:	add    BYTE PTR [rax+riz*1],dh
  45182a:	add    eax,0x0
  45182f:	add    BYTE PTR [rax+riz*1],bh
  451832:	add    eax,0x0
  451837:	add    BYTE PTR [rax+riz*1+0x5],al
  45183b:	add    BYTE PTR [rax],al
  45183d:	add    BYTE PTR [rax],al
  45183f:	add    BYTE PTR [rax+riz*1+0x5],cl
  451843:	add    BYTE PTR [rax],al
  451845:	add    BYTE PTR [rax],al
  451847:	add    BYTE PTR [rax+riz*1+0x5],dl
  45184b:	add    BYTE PTR [rax],al
  45184d:	add    BYTE PTR [rax],al
  45184f:	add    BYTE PTR [rsi+0x20],bl
  451852:	add    eax,0x0
  451857:	add    BYTE PTR [rax+0x20],ch
  45185a:	add    eax,0x0
  45185f:	add    BYTE PTR [rdx+0x20],dh
  451862:	add    eax,0x0
  451867:	add    BYTE PTR [rax+riz*1+0x5],bh
  45186b:	add    BYTE PTR [rax],al
  45186d:	add    BYTE PTR [rax],al
  45186f:	add    BYTE PTR [rsi+0x520],al
  451875:	add    BYTE PTR [rax],al
  451877:	add    BYTE PTR [rdx+0x520],dl
  45187d:	add    BYTE PTR [rax],al
  45187f:	add    BYTE PTR [rax+0x520],ah
  451885:	add    BYTE PTR [rax],al
  451887:	add    BYTE PTR [rdx+0x520],ch
  45188d:	add    BYTE PTR [rax],al
  45188f:	add    BYTE PTR [rax+riz*1+0x5],dh
  451896:	add    BYTE PTR [rax],al
  451898:	mov    esi,0x520
  45189d:	add    BYTE PTR [rax],al
  45189f:	add    al,cl
  4518a1:	and    BYTE PTR [rip+0x0],al        # 0x4518a7
  4518a7:	add    dl,dl
  4518a9:	and    BYTE PTR [rip+0x0],al        # 0x4518af
  4518af:	add    ah,bl
  4518b1:	and    BYTE PTR [rip+0x0],al        # 0x4518b7
  4518b7:	add    dh,ah
  4518b9:	and    BYTE PTR [rip+0x0],al        # 0x4518bf
  4518bf:	add    al,dh
  4518c1:	and    BYTE PTR [rip+0x0],al        # 0x4518c7
  4518c7:	add    dl,bh
  4518c9:	and    BYTE PTR [rip+0x0],al        # 0x4518cf
  4518cf:	add    BYTE PTR [rcx+riz*1],al
  4518d2:	add    eax,0x0
  4518d7:	add    BYTE PTR [rsi],cl
  4518d9:	and    DWORD PTR [rip+0x0],eax        # 0x4518df
  4518df:	add    BYTE PTR [rax],bl
  4518e1:	and    DWORD PTR [rip+0x0],eax        # 0x4518e7
  4518e7:	add    BYTE PTR [rcx+riz*1],ah
  4518ea:	add    eax,0x0
  4518ef:	add    BYTE PTR [rsi],ch
  4518f1:	and    DWORD PTR [rip+0x0],eax        # 0x4518f7
  4518f7:	add    BYTE PTR [rax],bh
  4518f9:	and    DWORD PTR [rip+0x0],eax        # 0x4518ff
  4518ff:	add    BYTE PTR [rdx+0x21],al
  451902:	add    eax,0x0
  451907:	add    BYTE PTR [rcx+riz*1+0x5],cl
  45190b:	add    BYTE PTR [rax],al
  45190d:	add    BYTE PTR [rax],al
  45190f:	add    BYTE PTR [rsi+0x21],dl
  451912:	add    eax,0x0
  451917:	add    BYTE PTR [rax+0x21],ah
  45191a:	add    eax,0x0
  45191f:	add    BYTE PTR [rdx+0x21],ch
  451922:	add    eax,0x0
  451927:	add    BYTE PTR [rcx+riz*1+0x5],dh
  45192b:	add    BYTE PTR [rax],al
  45192d:	add    BYTE PTR [rax],al
  45192f:	add    BYTE PTR [rax+0x521],al
  451935:	add    BYTE PTR [rax],al
  451937:	add    BYTE PTR [rdx+0x521],cl
  45193d:	add    BYTE PTR [rax],al
  45193f:	add    BYTE PTR [rsi+0x521],dl
  451945:	add    BYTE PTR [rax],al
  451947:	add    BYTE PTR [rax+0x521],ah
  45194d:	add    BYTE PTR [rax],al
  45194f:	add    BYTE PTR [rdx+0x521],ch
  451955:	add    BYTE PTR [rax],al
  451957:	add    BYTE PTR [rcx+riz*1+0x5],dh
  45195e:	add    BYTE PTR [rax],al
  451960:	mov    esi,0x521
  451965:	add    BYTE PTR [rax],al
  451967:	add    al,cl
  451969:	and    DWORD PTR [rip+0x0],eax        # 0x45196f
  45196f:	add    al,dl
  451971:	and    DWORD PTR [rip+0x0],eax        # 0x451977
  451977:	add    al,bl
  451979:	and    DWORD PTR [rip+0x0],eax        # 0x45197f
  45197f:	add    dl,ah
  451981:	and    DWORD PTR [rip+0x0],eax        # 0x451987
	...
  45198f:	add    ah,ch
  451991:	and    DWORD PTR [rip+0x0],eax        # 0x451997
  451997:	add    dl,bh
  451999:	and    DWORD PTR [rip+0x0],eax        # 0x45199f
  45199f:	add    BYTE PTR [rdx],cl
  4519a1:	and    al,BYTE PTR [rip+0x0]        # 0x4519a7
  4519a7:	add    BYTE PTR [rdx+riz*1],dl
  4519aa:	add    eax,0x0
  4519af:	add    BYTE PTR [rdx+riz*1],bl
  4519b2:	add    eax,0x0
  4519b7:	add    BYTE PTR [rdx],ch
  4519b9:	and    al,BYTE PTR [rip+0x0]        # 0x4519bf
  4519bf:	add    BYTE PTR [rax],bh
  4519c1:	and    al,BYTE PTR [rip+0x0]        # 0x4519c7
  4519c7:	add    BYTE PTR [rax+0x22],al
  4519ca:	add    eax,0x0
  4519cf:	add    BYTE PTR [rdx+riz*1+0x5],cl
  4519d3:	add    BYTE PTR [rax],al
  4519d5:	add    BYTE PTR [rax],al
  4519d7:	add    BYTE PTR [rsi+0x22],dl
  4519da:	add    eax,0x0
  4519df:	add    BYTE PTR [rsi+0x22],bl
  4519e2:	add    eax,0x0
  4519e7:	add    BYTE PTR [rsi+0x22],ah
  4519ea:	add    eax,0x0
  4519ef:	add    BYTE PTR [rax+0x22],dh
  4519f2:	add    eax,0x0
  4519f7:	add    BYTE PTR [rax+0x22],bh
  4519fa:	add    eax,0x0
  4519ff:	add    BYTE PTR [rsi+0x522],al
	...
  451a0d:	add    BYTE PTR [rax],al
  451a0f:	add    BYTE PTR [rax+0x522],dl
	...
  451a1d:	add    BYTE PTR [rax],al
  451a1f:	add    BYTE PTR [rdx+riz*1+0x5],ah
  451a26:	add    BYTE PTR [rax],al
  451a28:	int3   
  451a29:	and    al,BYTE PTR [rip+0x0]        # 0x451a2f
  451a2f:	add    al,bh
  451a31:	and    al,BYTE PTR [rip+0x0]        # 0x451a37
  451a37:	add    BYTE PTR [rbx+riz*1],dl
  451a3a:	add    eax,0x0
  451a3f:	add    BYTE PTR [rax],ch
  451a41:	and    eax,DWORD PTR [rip+0x0]        # 0x451a47
  451a47:	add    BYTE PTR [rbx+riz*1],bh
  451a4a:	add    eax,0x0
  451a4f:	add    BYTE PTR [rbx+riz*1+0x5],cl
  451a53:	add    BYTE PTR [rax],al
  451a55:	add    BYTE PTR [rax],al
  451a57:	add    BYTE PTR [rbx+riz*1+0x5],bl
	...
  451a67:	add    BYTE PTR [rbp+0x0],dl
  451a6a:	rex.XB ins BYTE PTR es:[rdi],dx
  451a6c:	outs   dx,DWORD PTR ds:[rsi]
  451a6d:	jae    0x451ad4
  451a6f:	rex.W (bad) 
  451a71:	outs   dx,BYTE PTR ds:[rsi]
  451a72:	fs ins BYTE PTR es:[rdi],dx
  451a74:	add    BYTE PTR gs:[rbx+0x0],ch
  451a78:	rex.XB outs dx,DWORD PTR ds:[rsi]
  451a7a:	outs   dx,BYTE PTR ds:[rsi]
  451a7b:	je     0x451ae6
  451a7d:	outs   dx,BYTE PTR ds:[rsi]
  451a7e:	jne    0x451ae5
  451a80:	rex.R
  451a81:	gs (bad) 
  451a83:	jne    0x451aec
  451a85:	rex.RB jbe 0x451aed
  451a88:	outs   dx,BYTE PTR ds:[rsi]
  451a89:	je     0x451a8b
  451a8b:	add    BYTE PTR [rdx+0x65724300],ch
  451a91:	(bad)  
  451a92:	je     0x451af9
  451a94:	push   rax
  451a95:	jb     0x451b06
  451a97:	movsxd esp,DWORD PTR [rbp+0x73]
  451a9a:	jae    0x451add
  451a9c:	add    BYTE PTR [rax],al
  451a9e:	int3   
  451a9f:	add    BYTE PTR [rbp+riz*2+0x62],al
  451aa3:	jne    0x451b0c
  451aa5:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
  451aaa:	gs push rax
  451aac:	jb     0x451b1d
  451aae:	movsxd esp,DWORD PTR [rbp+0x73]
  451ab1:	jae    0x451ab3
  451ab3:	add    al,bl
  451ab5:	add    BYTE PTR [rbp+riz*2+0x6c],al
  451ab9:	gs je  0x451b21
  451abc:	rex.XB jb 0x451b28
  451abf:	je     0x451b2a
  451ac1:	movsxd esp,DWORD PTR [rcx+0x6c]
  451ac4:	push   rbx
  451ac5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  451aca:	outs   dx,BYTE PTR ds:[rsi]
  451acb:	add    al,bh
  451acd:	add    BYTE PTR [rbp+0x6e],al
  451ad0:	je     0x451b37
  451ad2:	jb     0x451b17
  451ad4:	jb     0x451b3f
  451ad6:	je     0x451b41
  451ad8:	movsxd esp,DWORD PTR [rcx+0x6c]
  451adb:	push   rbx
  451adc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  451ae1:	outs   dx,BYTE PTR ds:[rsi]
  451ae2:	add    BYTE PTR [rax],al
  451ae4:	cmp    al,BYTE PTR [rcx]
  451ae6:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
  451aee:	add    BYTE PTR gs:[rsi],bh
  451af1:	add    DWORD PTR [rsi+0x69],eax
  451af4:	outs   dx,BYTE PTR ds:[rsi]
  451af5:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
  451afe:	add    BYTE PTR gs:[r8],al
  451b02:	add    DWORD PTR fs:[rsi+0x6c],eax
  451b06:	jne    0x451b7b
  451b08:	push   0x74736e49
  451b0d:	jb     0x451b84
  451b0f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  451b13:	outs   dx,BYTE PTR ds:[rsi]
  451b14:	rex.XB (bad) 
  451b16:	movsxd ebp,DWORD PTR [rax+0x65]
  451b19:	add    BYTE PTR [rcx+0x1],ch
  451b1c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  451b1e:	jb     0x451b8d
  451b20:	(bad)  
  451b21:	je     0x451b70
  451b23:	gs jae 0x451b99
  451b26:	(bad)  
  451b27:	add    BYTE PTR gs:[r8d],al
  451b2c:	retf   
  451b2d:	add    DWORD PTR [rdi+0x65],eax
  451b30:	je     0x451b75
  451b32:	jne    0x451ba6
  451b34:	jb     0x451b9b
  451b36:	outs   dx,BYTE PTR ds:[rsi]
  451b37:	je     0x451b7d
  451b39:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  451b40:	jns    0x451b83
  451b42:	add    BYTE PTR [rax],al
  451b44:	int    0x1
  451b46:	rex.RXB
  451b47:	gs je  0x451b8d
  451b4a:	jne    0x451bbe
  451b4c:	jb     0x451bb3
  451b4e:	outs   dx,BYTE PTR ds:[rsi]
  451b4f:	je     0x451ba1
  451b51:	jb     0x451bc2
  451b53:	movsxd esp,DWORD PTR [rbp+0x73]
  451b56:	jae    0x451b58
  451b58:	(bad)  
  451b59:	add    DWORD PTR [rdi+0x65],eax
  451b5c:	je     0x451ba1
  451b5e:	jne    0x451bd2
  451b60:	jb     0x451bc7
  451b62:	outs   dx,BYTE PTR ds:[rsi]
  451b63:	je     0x451bb5
  451b65:	jb     0x451bd6
  451b67:	movsxd esp,DWORD PTR [rbp+0x73]
  451b6a:	jae    0x451bb5
  451b6c:	fs add dl,dl
  451b6f:	add    DWORD PTR [rdi+0x65],eax
  451b72:	je     0x451bb7
  451b74:	jne    0x451be8
  451b76:	jb     0x451bdd
  451b78:	outs   dx,BYTE PTR ds:[rsi]
  451b79:	je     0x451bcf
  451b7b:	push   0x64616572
  451b80:	rex.WB
  451b81:	add    BYTE PTR fs:[rax],al
  451b84:	(bad)  
  451b85:	add    al,BYTE PTR [rdi+0x65]
  451b88:	je     0x451bd0
  451b8a:	jne    0x451bf8
  451b8c:	ins    BYTE PTR es:[rdi],dx
  451b8d:	push   rax
  451b8e:	(bad)  
  451b8f:	je     0x451bf9
  451b91:	rex.WRX (bad) 
  451b93:	ins    DWORD PTR es:[rdi],dx
  451b94:	add    BYTE PTR gs:[r8],al
  451b98:	adc    BYTE PTR [rdx],al
  451b9a:	rex.RXB
  451b9b:	gs je  0x451bea
  451b9e:	(bad)  
  451b9f:	jae    0x451c15
  451ba1:	rex.RB jb 0x451c16
  451ba4:	outs   dx,DWORD PTR ds:[rsi]
  451ba5:	jb     0x451ba7
  451ba7:	add    BYTE PTR [rdx+rax*1],ah
  451baa:	rex.RXB
  451bab:	gs je  0x451bfb
  451bae:	outs   dx,DWORD PTR ds:[rsi]
  451baf:	fs jne 0x451c1e
  451bb2:	gs rex.W (bad) 
  451bb5:	outs   dx,BYTE PTR ds:[rsi]
  451bb6:	fs ins BYTE PTR es:[rdi],dx
  451bb8:	add    BYTE PTR gs:[r8],al
  451bbc:	(bad)  
  451bbd:	add    al,BYTE PTR [rdi+0x65]
  451bc0:	je     0x451c0f
  451bc2:	outs   dx,DWORD PTR ds:[rsi]
  451bc3:	fs jne 0x451c32
  451bc6:	gs rex.W (bad) 
  451bc9:	outs   dx,BYTE PTR ds:[rsi]
  451bca:	fs ins BYTE PTR es:[rdi],dx
  451bcc:	gs push rdi
  451bce:	add    BYTE PTR [rax],al
  451bd0:	push   rsi
  451bd1:	add    al,BYTE PTR [rdi+0x65]
  451bd4:	je     0x451c26
  451bd6:	jb     0x451c47
  451bd8:	movsxd eax,DWORD PTR [rcx+0x64]
  451bdb:	fs jb  0x451c43
  451bde:	jae    0x451c53
  451be0:	add    BYTE PTR [rax],al
  451be2:	jae    0x451be6
  451be4:	rex.RXB
  451be5:	gs je  0x451c3b
  451be8:	je     0x451c4b
  451bea:	jb     0x451c60
  451bec:	jne    0x451c5e
  451bee:	rex.WB outs dx,BYTE PTR ds:[rsi]
  451bf0:	outs   dx,WORD PTR ds:[rsi]
  451bf2:	add    BYTE PTR [r8+0x74654702],al
  451bf9:	push   rbx
  451bfa:	jns    0x451c6f
  451bfc:	je     0x451c63
  451bfe:	ins    DWORD PTR es:[rdi],dx
  451bff:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  451c07:	jns    0x451c4a
  451c09:	add    BYTE PTR [rdx+0x74654702],cl
  451c0f:	push   rbx
  451c10:	jns    0x451c85
  451c12:	je     0x451c79
  451c14:	ins    DWORD PTR es:[rdi],dx
  451c15:	push   rsp
  451c16:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  451c1d:	ins    BYTE PTR es:[rdi],dx
  451c1e:	gs push rsp
  451c20:	imul   ebp,DWORD PTR [rbp+0x65],0x47029800
  451c27:	gs je  0x451c7e
  451c2a:	push   0x64616572
  451c2f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  451c31:	outs   dx,BYTE PTR ds:[rsi]
  451c32:	je     0x451c99
  451c34:	js     0x451caa
  451c36:	add    BYTE PTR [rax],al
  451c38:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  451c39:	add    al,BYTE PTR [rdi+0x65]
  451c3c:	je     0x451c92
  451c3e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  451c45:	je     0x451c47
  451c47:	add    BYTE PTR [rdx+0x74654702],ch
  451c4d:	push   rsp
  451c4e:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
  451c55:	rex.WB outs dx,BYTE PTR ds:[rsi]
  451c57:	outs   dx,WORD PTR ds:[rsi]
  451c59:	jb     0x451cc8
  451c5b:	(bad)  
  451c5c:	je     0x451cc7
  451c5e:	outs   dx,DWORD PTR ds:[rsi]
  451c5f:	outs   dx,BYTE PTR ds:[rsi]
  451c60:	add    BYTE PTR [rax],al
  451c62:	stc    
  451c63:	add    cl,BYTE PTR [rcx+0x6e]
  451c66:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  451c6e:	rex.XB jb 0x451cda
  451c71:	je     0x451cdc
  451c73:	movsxd esp,DWORD PTR [rcx+0x6c]
  451c76:	push   rbx
  451c77:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  451c7c:	outs   dx,BYTE PTR ds:[rsi]
  451c7d:	add    BYTE PTR [rax],dl
  451c7f:	add    ecx,DWORD PTR [rcx+0x73]
  451c82:	rex.R
  451c83:	rex.X
  451c84:	rex.XB push r11
  451c86:	rex.WR
  451c87:	gs (bad) 
  451c89:	fs rex.X jns 0x451d01
  451c8d:	gs rex.RB js 0x451c91
  451c91:	add    BYTE PTR [rbx+0x3],cl
  451c94:	rex.WR
  451c95:	gs (bad) 
  451c97:	jbe    0x451cfe
  451c99:	rex.XB jb 0x451d05
  451c9c:	je     0x451d07
  451c9e:	movsxd esp,DWORD PTR [rcx+0x6c]
  451ca1:	push   rbx
  451ca2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  451ca7:	outs   dx,BYTE PTR ds:[rsi]
  451ca8:	add    BYTE PTR [rax],al
  451caa:	add    r9,QWORD PTR [rdi+r13*2+0x61]
  451caf:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
  451cb8:	add    BYTE PTR [rax],al
  451cba:	pop    rbx
  451cbb:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  451cbf:	(bad)  
  451cc0:	ins    BYTE PTR es:[rdi],dx
  451cc1:	rex.RX jb 0x451d29
  451cc4:	add    BYTE PTR gs:[rdx+0x3],bh
  451cc8:	rex.WRB jne 0x451d37
  451ccb:	je     0x451d36
  451ccd:	rex.X jns 0x451d44
  451cd0:	gs push rsp
  451cd2:	outs   dx,DWORD PTR ds:[rsi]
  451cd3:	push   rdi
  451cd4:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  451cdc:	xchg   esi,eax
  451cdd:	add    ecx,DWORD PTR [rdi+0x70]
  451ce0:	outs   dx,BYTE PTR gs:[rsi]
  451ce2:	push   rax
  451ce3:	jb     0x451d54
  451ce5:	movsxd esp,DWORD PTR [rbp+0x73]
  451ce8:	jae    0x451cea
  451cea:	mov    ebx,0x65755103
  451cef:	jb     0x451d6a
  451cf1:	push   rax
  451cf2:	gs jb  0x451d5b
  451cf5:	outs   dx,DWORD PTR ds:[rsi]
  451cf6:	jb     0x451d65
  451cf8:	(bad)  
  451cf9:	outs   dx,BYTE PTR ds:[rsi]
  451cfa:	movsxd esp,DWORD PTR [rbp+0x43]
  451cfd:	outs   dx,DWORD PTR ds:[rsi]
  451cfe:	jne    0x451d6e
  451d00:	je     0x451d67
  451d02:	jb     0x451d04
  451d04:	fadd   DWORD PTR [rbx]
  451d06:	push   rdx
  451d07:	gs (bad) 
  451d09:	fs push rax
  451d0b:	jb     0x451d7c
  451d0d:	movsxd esp,DWORD PTR [rbp+0x73]
  451d10:	jae    0x451d5f
  451d12:	gs ins DWORD PTR es:[rdi],dx
  451d14:	outs   dx,DWORD PTR ds:[rsi]
  451d15:	jb     0x451d90
  451d17:	add    BYTE PTR [rax],al
  451d19:	add    al,0x52
  451d1b:	gs jae 0x451d93
  451d1e:	ins    DWORD PTR es:[rdi],dx
  451d1f:	gs push rsp
  451d21:	push   0x64616572
  451d26:	add    BYTE PTR [rax],al
  451d28:	add    DWORD PTR [rdx+rdx*2],eax
  451d2b:	je     0x451d99
  451d2d:	rex.B
  451d2e:	fs fs rex.RX jne 0x451da1
  451d33:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  451d37:	outs   dx,BYTE PTR ds:[rsi]
  451d38:	push   rsp
  451d39:	(bad)  
  451d3a:	(bad)  
  451d3b:	ins    BYTE PTR es:[rdi],dx
  451d3c:	add    BYTE PTR gs:[rdx],al
  451d3f:	add    al,0x52
  451d41:	je     0x451daf
  451d43:	rex.XB (bad) 
  451d45:	jo     0x451dbb
  451d47:	jne    0x451dbb
  451d49:	rex.XB outs dx,DWORD PTR gs:[rsi]
  451d4c:	outs   dx,BYTE PTR ds:[rsi]
  451d4d:	je     0x451db4
  451d4f:	js     0x451dc5
  451d51:	add    BYTE PTR [rcx],cl
  451d53:	add    al,0x52
  451d55:	je     0x451dc3
  451d57:	rex.WR outs dx,DWORD PTR ds:[rsi]
  451d59:	outs   dx,DWORD PTR ds:[rsi]
  451d5a:	imul   esi,DWORD PTR [rbp+0x70],0x46
  451d5e:	jne    0x451dce
  451d60:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  451d64:	outs   dx,BYTE PTR ds:[rsi]
  451d65:	rex.RB outs dx,BYTE PTR ds:[rsi]
  451d67:	je     0x451ddb
  451d69:	jns    0x451d6b
  451d6b:	add    BYTE PTR [rax],dl
  451d6d:	add    al,0x52
  451d6f:	je     0x451ddd
  451d71:	push   rsi
  451d72:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  451d79:	outs   dx,BYTE PTR ds:[rsi]
  451d7a:	ja     0x451de5
  451d7c:	outs   dx,BYTE PTR ds:[rsi]
  451d7d:	add    BYTE PTR fs:[rax],al
  451d80:	rex.RX add al,0x53
  451d83:	gs je  0x451dc9
  451d86:	jne    0x451dfa
  451d88:	jb     0x451def
  451d8a:	outs   dx,BYTE PTR ds:[rsi]
  451d8b:	je     0x451dd1
  451d8d:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  451d94:	jns    0x451dd7
  451d96:	add    BYTE PTR [rax],al
  451d98:	ins    BYTE PTR es:[rdi],dx
  451d99:	add    al,0x53
  451d9b:	gs je  0x451dea
  451d9e:	(bad)  
  451d9f:	jae    0x451e15
  451da1:	rex.RB jb 0x451e16
  451da4:	outs   dx,DWORD PTR ds:[rsi]
  451da5:	jb     0x451da7
  451da7:	add    BYTE PTR [rdx+0x74655304],cl
  451dad:	push   rsp
  451dae:	push   0x64616572
  451db3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  451db5:	outs   dx,BYTE PTR ds:[rsi]
  451db6:	je     0x451e1d
  451db8:	js     0x451e2e
  451dba:	add    BYTE PTR [rax],al
  451dbc:	lahf   
  451dbd:	add    al,0x53
  451dbf:	gs je  0x451e17
  451dc2:	outs   dx,BYTE PTR ds:[rsi]
  451dc3:	push   0x6c646e61
  451dc8:	gs fs rex.RB js 0x451e30
  451dcd:	gs jo  0x451e44
  451dd0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  451dd7:	gs jb  0x451dda
  451dda:	lods   al,BYTE PTR ds:[rsi]
  451ddb:	add    al,0x53
  451ddd:	ins    BYTE PTR es:[rdi],dx
  451dde:	gs gs jo 0x451de2
  451de2:	mov    ah,0x4
  451de4:	push   rbx
  451de5:	jne    0x451e5a
  451de7:	jo     0x451e4e
  451de9:	outs   dx,BYTE PTR ds:[rsi]
  451dea:	fs push rsp
  451dec:	push   0x64616572
  451df1:	add    BYTE PTR [rdx+0x72655404],bh
  451df7:	ins    DWORD PTR es:[rdi],dx
  451df8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  451dff:	outs   dx,DWORD PTR ds:[rsi]
  451e00:	movsxd esp,DWORD PTR [rbp+0x73]
  451e03:	jae    0x451e05
  451e05:	add    cl,al
  451e07:	add    al,0x54
  451e09:	ins    BYTE PTR es:[rdi],dx
  451e0a:	jae    0x451e53
  451e0c:	gs je  0x451e65
  451e0f:	(bad)  
  451e10:	ins    BYTE PTR es:[rdi],dx
  451e11:	jne    0x451e78
  451e13:	add    dh,cl
  451e15:	add    al,0x55
  451e17:	outs   dx,BYTE PTR ds:[rsi]
  451e18:	push   0x6c646e61
  451e1d:	gs fs rex.RB js 0x451e85
  451e22:	gs jo  0x451e99
  451e25:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  451e2c:	gs jb  0x451e2f
  451e2f:	add    ah,ch
  451e31:	add    al,0x56
  451e33:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  451e3a:	jb     0x451eab
  451e3c:	je     0x451ea3
  451e3e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  451e42:	out    dx,al
  451e43:	add    al,0x56
  451e45:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  451e4c:	jne    0x451eb3
  451e4e:	jb     0x451ec9
  451e50:	add    BYTE PTR [rax],al
  451e52:	repz add al,0x57
  451e55:	(bad)  
  451e56:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x62654472
  451e5e:	jne    0x451ec7
  451e60:	rex.RB jbe 0x451ec8
  451e63:	outs   dx,BYTE PTR ds:[rsi]
  451e64:	je     0x451e66
  451e66:	test   BYTE PTR [rdi+rdx*2],0x61
  451e6a:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  451e72:	ins    BYTE PTR es:[edi],dx
  451e74:	gs rex.WRXB (bad) 
  451e77:	push   0x65
  451e79:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  451e7d:	add    eax,0x65646957
  451e82:	rex.XB push 0x6f547261
  451e88:	rex.WRB jne 0x451ef7
  451e8b:	je     0x451ef6
  451e8d:	rex.X jns 0x451f04
  451e90:	add    BYTE PTR gs:[rbx],ch
  451e93:	add    eax,0x74697257
  451e98:	gs push rax
  451e9a:	jb     0x451f0b
  451e9c:	movsxd esp,DWORD PTR [rbp+0x73]
  451e9f:	jae    0x451eee
  451ea1:	gs ins DWORD PTR es:[rdi],dx
  451ea3:	outs   dx,DWORD PTR ds:[rsi]
  451ea4:	jb     0x451f1f
  451ea6:	add    BYTE PTR [rax],al
  451ea8:	(bad)  
  451ea9:	add    BYTE PTR [rdi+0x5f],bl
  451eac:	rex.XB pop r15
  451eae:	jae    0x451f20
  451eb0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  451eb4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  451ebb:	ins    BYTE PTR es:[rdi],dx
  451ebc:	gs jb  0x451ebf
  451ebf:	add    BYTE PTR [rdi],bh
  451ec1:	add    BYTE PTR [rdi+0x5f],bl
  451ec4:	pop    rdi
  451ec5:	ins    BYTE PTR es:[rdi],dx
  451ec6:	movsxd ebx,DWORD PTR [rdi+0x63]
  451ec9:	outs   dx,DWORD PTR ds:[rsi]
  451eca:	fs gs jo 0x451f2f
  451ece:	addr32 gs pop rdi
  451ed1:	data16 jne 0x451f42
  451ed4:	movsxd eax,DWORD PTR [rax]
  451ed6:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  451eda:	fs ins BYTE PTR es:[rdi],dx
  451edc:	ins    BYTE PTR es:[rdi],dx
  451edd:	outs   dx,DWORD PTR ds:[rsi]
  451ede:	outs   dx,BYTE PTR ds:[rsi]
  451edf:	gs js  0x451f4b
  451ee2:	je     0x451ee4
  451ee4:	push   rcx
  451ee5:	add    BYTE PTR [rdi+0x5f],bl
  451ee8:	addr32 gs je 0x451f59
  451eec:	(bad)  
  451eed:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  451ef4:	push   rdx
  451ef5:	add    BYTE PTR [rdi+0x5f],bl
  451ef8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  451eff:	add    BYTE PTR [rbx+0x0],dl
  451f02:	pop    rdi
  451f03:	pop    rdi
  451f04:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  451f0b:	movsxd eax,DWORD PTR [rax]
  451f0d:	add    BYTE PTR [rdx+0x0],bl
  451f10:	pop    rdi
  451f11:	pop    rdi
  451f12:	ins    BYTE PTR es:[rdi],dx
  451f13:	movsxd ebp,DWORD PTR [rdi+0x6e]
  451f16:	jbe    0x451f77
  451f18:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  451f1f:	add    BYTE PTR [rdi+0x5f],bl
  451f22:	ins    DWORD PTR es:[rdi],dx
  451f23:	(bad)  
  451f24:	pop    rdi
  451f25:	movsxd esi,DWORD PTR [rbp+0x72]
  451f28:	pop    rdi
  451f29:	ins    DWORD PTR es:[rdi],dx
  451f2a:	(bad)  
  451f2b:	js     0x451f2d
  451f2d:	add    BYTE PTR [rax+0x0],ah
  451f30:	pop    rdi
  451f31:	pop    rdi
  451f32:	jae    0x451f99
  451f34:	je     0x451f95
  451f36:	(bad)  
  451f37:	jo     0x451fa9
  451f39:	pop    rdi
  451f3a:	je     0x451fb5
  451f3c:	jo     0x451fa3
  451f3e:	add    BYTE PTR [rax],al
  451f40:	(bad)  
  451f41:	add    BYTE PTR [rdi+0x5f],bl
  451f44:	jae    0x451fab
  451f46:	je     0x451fbd
  451f48:	jae    0x451faf
  451f4a:	jb     0x451fb9
  451f4c:	(bad)  
  451f4d:	je     0x451fb7
  451f4f:	gs jb  0x451fc4
  451f52:	add    BYTE PTR [rax],al
  451f54:	jno    0x451f56
  451f56:	pop    rdi
  451f57:	(bad)  
  451f58:	movsxd ebp,DWORD PTR [rbp+0x64]
  451f5b:	ins    BYTE PTR es:[rdi],dx
  451f5c:	outs   dx,BYTE PTR ds:[rsi]
  451f5d:	add    BYTE PTR [rax+0x0],bh
  451f60:	pop    rdi
  451f61:	(bad)  
  451f62:	ins    DWORD PTR es:[rdi],dx
  451f63:	jae    0x451fcc
  451f65:	pop    rdi
  451f66:	gs js  0x451fd2
  451f69:	je     0x451f6b
  451f6b:	add    BYTE PTR [rdx+0x65635f00],cl
  451f71:	js     0x451fdc
  451f73:	je     0x451f75
  451f75:	add    BYTE PTR [rdx+0x72655f00],bh
  451f7b:	jb     0x451feb
  451f7d:	outs   dx,DWORD PTR ds:[rsi]
  451f7e:	add    BYTE PTR [rax],al
  451f80:	fiadd  DWORD PTR [rax]
  451f82:	pop    rdi
  451f83:	ins    WORD PTR es:[rdi],dx
  451f85:	outs   dx,DWORD PTR ds:[rsi]
  451f86:	fs add BYTE PTR gs:[rax],al
  451f8a:	call   0x73ab7e8f
  451f8f:	je     0x451ff2
  451f91:	je     0x451fc9
  451f93:	xor    al,0x0
  451f95:	add    BYTE PTR [rdx],bl
  451f97:	add    DWORD PTR [rdi+0x69],ebx
  451f9a:	outs   dx,BYTE PTR ds:[rsi]
  451f9b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x80006d72
  451fa3:	add    DWORD PTR [rdi+0x6c],ebx
  451fa6:	outs   dx,DWORD PTR ds:[rsi]
  451fa7:	movsxd ebp,DWORD PTR [rbx+0x0]
  451faa:	mov    DWORD PTR [rcx],eax
  451fac:	pop    rdi
  451fad:	ins    BYTE PTR es:[rdi],dx
  451fae:	jae    0x452015
  451fb0:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  451fb5:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eb47ebd
  451fbb:	gs js  0x452027
  451fbe:	je     0x451fc0
  451fc0:	add    DWORD PTR [rdx],0x5f
  451fc3:	jae    0x452039
  451fc5:	jb     0x452030
  451fc7:	movsxd ebp,DWORD PTR [rbp+0x70]
  451fca:	add    BYTE PTR [rax],al
  451fcc:	stos   DWORD PTR es:[rdi],eax
  451fcd:	add    bl,BYTE PTR [rdi+0x73]
  451fd0:	jns    0x452045
  451fd2:	pop    rdi
  451fd3:	outs   dx,BYTE PTR ds:[rsi]
  451fd4:	gs jb  0x452049
  451fd7:	add    ah,al
  451fd9:	add    bl,BYTE PTR [rdi+0x75]
  451fdc:	outs   dx,BYTE PTR ds:[rsi]
  451fdd:	ins    BYTE PTR es:[rdi],dx
  451fde:	outs   dx,DWORD PTR ds:[rsi]
  451fdf:	movsxd ebp,DWORD PTR [rbx+0x0]
  451fe2:	jg     0x451fe7
  451fe4:	(bad)  
  451fe5:	(bad)  
  451fe6:	outs   dx,DWORD PTR ds:[rsi]
  451fe7:	jb     0x45205d
  451fe9:	add    BYTE PTR [rax+0x6c616303],dl
  451fef:	ins    BYTE PTR es:[rdi],dx
  451ff0:	outs   dx,DWORD PTR ds:[rsi]
  451ff1:	movsxd eax,DWORD PTR [rax]
  451ff3:	add    BYTE PTR [rbp+0x69786503],bl
  451ff9:	je     0x451ffb
  451ffb:	add    BYTE PTR [rcx+0x6c636603],ah
  452001:	outs   dx,DWORD PTR ds:[rsi]
  452002:	jae    0x452069
  452004:	add    BYTE PTR [rax],al
  452006:	movabs ds:0x726f7272656603,eax
  45200f:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  452016:	jae    0x452080
  452018:	add    BYTE PTR [rax],al
  45201a:	scas   al,BYTE PTR es:[rdi]
  45201b:	add    esp,DWORD PTR [rsi+0x6f]
  45201e:	jo     0x452085
  452020:	outs   dx,BYTE PTR ds:[rsi]
  452021:	add    BYTE PTR [rax+0x72706603],dh
  452027:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  45202e:	data16 jo 0x4520a6
  452031:	je     0x452096
  452033:	add    BYTE PTR [rsi+0x65726603],dh
  452039:	(bad)  
  45203a:	add    BYTE PTR fs:[rdi+0x65726603],dh
  452041:	add    BYTE PTR gs:[rax],al
  452044:	mov    ebp,0x65736603
  452049:	imul   eax,DWORD PTR gs:[rax],0xffffffbf
  45204d:	add    esp,DWORD PTR [rsi+0x74]
  452050:	gs ins BYTE PTR es:[rdi],dx
  452052:	ins    BYTE PTR es:[rdi],dx
  452053:	add    dl,al
  452055:	add    esp,DWORD PTR [rsi+0x77]
  452058:	jb     0x4520c3
  45205a:	je     0x4520c1
  45205c:	add    BYTE PTR [rax],al
  45205e:	mov    DWORD PTR [rbx],0x65746567
  452064:	outs   dx,BYTE PTR ds:[rsi]
  452065:	jbe    0x452067
  452067:	add    dh,cl
  452069:	add    ebp,DWORD PTR [rcx+0x73]
  45206c:	(bad)  
  45206d:	ins    BYTE PTR es:[rdi],dx
  45206e:	outs   dx,BYTE PTR ds:[rsi]
  45206f:	jne    0x4520de
  452071:	add    ch,dl
  452073:	add    ebp,DWORD PTR [rcx+0x73]
  452076:	jo     0x4520ea
  452078:	imul   ebp,DWORD PTR [rsi+0x74],0x6903d700
  45207f:	jae    0x4520f4
  452081:	jo     0x4520e4
  452083:	movsxd esp,DWORD PTR [rbp+0x0]
  452086:	out    0x3,al
  452088:	imul   esi,DWORD PTR [rbx+0x78],0x69676964
  45208f:	je     0x452091
  452091:	add    dl,ch
  452093:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  452097:	(bad)  
  452098:	ins    BYTE PTR es:[rdi],dx
  452099:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  45209d:	jbe    0x45209f
  45209f:	add    al,dh
  4520a1:	add    ebp,DWORD PTR [rbp+0x61]
  4520a4:	ins    BYTE PTR es:[rdi],dx
  4520a5:	ins    BYTE PTR es:[rdi],dx
  4520a6:	outs   dx,DWORD PTR ds:[rsi]
  4520a7:	movsxd eax,DWORD PTR [rax]
  4520a9:	add    bh,dh
  4520ab:	add    ebp,DWORD PTR [rbp+0x65]
  4520ae:	ins    DWORD PTR es:[rdi],dx
  4520af:	movsxd ebp,DWORD PTR [rbp+0x70]
  4520b2:	add    BYTE PTR [rax],al
  4520b4:	clc    
  4520b5:	add    ebp,DWORD PTR [rbp+0x65]
  4520b8:	ins    DWORD PTR es:[rdi],dx
  4520b9:	movsxd esi,DWORD PTR [rax+0x79]
  4520bc:	add    BYTE PTR [rax],al
  4520be:	stc    
  4520bf:	add    ebp,DWORD PTR [rbp+0x65]
  4520c2:	ins    DWORD PTR es:[rdi],dx
  4520c3:	ins    DWORD PTR es:[rdi],dx
  4520c4:	outs   dx,DWORD PTR ds:[rsi]
  4520c5:	jbe    0x45212c
  4520c7:	add    dl,bh
  4520c9:	add    ebp,DWORD PTR [rbp+0x65]
  4520cc:	ins    DWORD PTR es:[rdi],dx
  4520cd:	jae    0x452134
  4520cf:	je     0x4520d1
  4520d1:	add    dh,bh
  4520d3:	add    esi,DWORD PTR [rax+0x65]
  4520d6:	jb     0x45214a
  4520d8:	outs   dx,DWORD PTR ds:[rsi]
  4520d9:	jb     0x4520db
  4520db:	add    BYTE PTR [rsp+rax*1],cl
  4520de:	jb     0x452145
  4520e0:	(bad)  
  4520e1:	ins    BYTE PTR es:[rdi],dx
  4520e2:	ins    BYTE PTR es:[rdi],dx
  4520e3:	outs   dx,DWORD PTR ds:[rsi]
  4520e4:	movsxd eax,DWORD PTR [rax]
  4520e6:	(bad)  
  4520e7:	add    al,0x73
  4520e9:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4520f0:	and    DWORD PTR [rbx+rsi*2],eax
  4520f3:	je     0x452167
  4520f5:	movsxd esp,DWORD PTR [rcx+0x74]
  4520f8:	add    BYTE PTR [rax],al
  4520fa:	and    eax,DWORD PTR [rbx+rsi*2]
  4520fd:	je     0x452171
  4520ff:	movsxd ebp,DWORD PTR [rax+0x72]
  452102:	add    BYTE PTR [rax],al
  452104:	and    al,0x4
  452106:	jae    0x45217c
  452108:	jb     0x45216d
  45210a:	ins    DWORD PTR es:[rdi],dx
  45210b:	jo     0x45210d
  45210d:	add    BYTE PTR [rsi],ah
  45210f:	add    al,0x73
  452111:	je     0x452185
  452113:	movsxd esi,DWORD PTR [rax+0x79]
  452116:	add    BYTE PTR [rax],al
  452118:	sub    DWORD PTR [rbx+rsi*2],eax
  45211b:	je     0x45218f
  45211d:	gs jb  0x452192
  452120:	outs   dx,DWORD PTR ds:[rsi]
  452121:	jb     0x452123
  452123:	add    BYTE PTR [rbx],ch
  452125:	add    al,0x73
  452127:	je     0x45219b
  452129:	ins    BYTE PTR es:[rdi],dx
  45212a:	outs   dx,BYTE PTR gs:[rsi]
  45212c:	add    BYTE PTR [rax],al
  45212e:	cs add al,0x73
  452131:	je     0x4521a5
  452133:	outs   dx,BYTE PTR ds:[rsi]
  452134:	movsxd ebp,DWORD PTR [rbp+0x70]
  452137:	add    BYTE PTR [rdi],ch
  452139:	add    al,0x73
  45213b:	je     0x4521af
  45213d:	outs   dx,BYTE PTR ds:[rsi]
  45213e:	movsxd esi,DWORD PTR [rax+0x79]
  452141:	add    BYTE PTR [rdx],dh
  452143:	add    al,0x73
  452145:	je     0x4521b9
  452147:	jb     0x4521ac
  452149:	push   0x4360072
  45214e:	jae    0x4521c4
  452150:	jb     0x4521c6
  452152:	outs   dx,DWORD PTR ds:[rsi]
  452153:	imul   eax,DWORD PTR [rax],0x0
  452156:	cmp    BYTE PTR [rbx+rsi*2],al
  452159:	je     0x4521cd
  45215b:	je     0x4521cc
  45215d:	ins    BYTE PTR es:[rdi],dx
  45215e:	add    BYTE PTR [rax],al
  452160:	cmp    DWORD PTR [rbx+rsi*2],eax
  452163:	je     0x4521d7
  452165:	je     0x4521d6
  452167:	jne    0x4521d5
  452169:	add    BYTE PTR [rax+0x4],cl
  45216c:	je     0x4521dd
  45216e:	ins    BYTE PTR es:[rdi],dx
  45216f:	outs   dx,DWORD PTR ds:[rsi]
  452170:	ja     0x4521d7
  452172:	jb     0x452174
  452174:	rex.WRX add al,0x76
  452177:	data16 jo 0x4521ec
  45217a:	imul   ebp,DWORD PTR [rsi+0x74],0x61000066
  452181:	add    al,0x77
  452183:	movsxd esi,DWORD PTR [rbx+0x6c]
  452186:	outs   dx,BYTE PTR gs:[rsi]
  452188:	add    BYTE PTR [rax],al
  45218a:	jno    0x452190
  45218c:	ja     0x4521f1
  45218e:	jae    0x452204
  452190:	outs   dx,DWORD PTR ds:[rsi]
  452191:	ins    DWORD PTR es:[rdi],dx
  452192:	(bad)  
  452194:	add    BYTE PTR [rax],al
  452196:	mov    DWORD PTR [rdi+rbx*2],eax
  452199:	jae    0x45220f
  45219b:	(bad)  
  45219c:	je     0x4521d4
  45219e:	xor    al,0x0
  4521a0:	xchg   ecx,eax
  4521a1:	add    al,0x6c
  4521a3:	outs   dx,DWORD PTR ds:[rsi]
  4521a4:	outs   dx,BYTE PTR ds:[rsi]
  4521a5:	addr32 push 0x6d
  4521a8:	jo     0x4521aa
  4521aa:	movabs ds:0x65746972775f04,eax
  4521b3:	add    BYTE PTR [rdi+0x6e755f04],ch
  4521b9:	ins    BYTE PTR es:[rdi],dx
  4521ba:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04be00
  4521c1:	jae    0x452237
  4521c3:	jb     0x452229
  4521c5:	jne    0x452237
  4521c7:	add    ch,cl
  4521c9:	add    al,0x5f
  4521cb:	jb     0x452232
  4521cd:	(bad)  
  4521ce:	fs add bl,dl
  4521d1:	add    al,0x5f
  4521d3:	outs   dx,DWORD PTR ds:[rsi]
  4521d4:	jo     0x45223b
  4521d6:	outs   dx,BYTE PTR ds:[rsi]
  4521d7:	add    al,ch
  4521d9:	add    al,0x5f
  4521db:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  4521e2:	cld    
  4521e3:	add    al,0x5f
  4521e5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4521e9:	add    BYTE PTR gs:[rax],al
  4521ec:	push   rsp
  4521ed:	add    BYTE PTR [rdi+0x53],dl
  4521f0:	push   r11
  4521f2:	je     0x452255
  4521f4:	jb     0x45226a
  4521f6:	jne    0x452268
  4521f8:	add    BYTE PTR [rax],al
  4521fa:	xchg   edx,eax
  4521fb:	add    BYTE PTR [rdi+0x5f],bl
  4521fe:	push   rdi
  4521ff:	push   rbx
  452200:	rex.B
  452201:	rex.RX
  452202:	rex.R
  452203:	rex.WB jae 0x452259
  452206:	gs je  0x452209
  452209:	add    BYTE PTR [rbx+0x63636100],dl
  45220f:	gs jo  0x452286
  452212:	add    BYTE PTR [rax],al
  452214:	xchg   esp,eax
  452215:	add    BYTE PTR [rdx+0x69],ah
  452218:	outs   dx,BYTE PTR ds:[rsi]
  452219:	add    BYTE PTR fs:[rax],al
  45221c:	xchg   ebp,eax
  45221d:	add    BYTE PTR [rbx+0x6c],ah
  452220:	outs   dx,DWORD PTR ds:[rsi]
  452221:	jae    0x452288
  452223:	jae    0x452294
  452225:	movsxd ebp,DWORD PTR [rbx+0x65]
  452228:	je     0x45222a
  45222a:	movabs ds:0x6b636f7374656700,al
  452233:	outs   dx,BYTE PTR ds:[rsi]
  452234:	(bad)  
  452235:	ins    DWORD PTR es:[rdi],dx
  452236:	add    BYTE PTR gs:[rbp+0x6f746800],ah
  45223d:	outs   dx,BYTE PTR ds:[rsi]
  45223e:	jae    0x452240
  452240:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  452241:	add    BYTE PTR [rcx+0x6e],ch
  452244:	gs je  0x4522a6
  452247:	outs   dx,BYTE PTR ds:[rsi]
  452248:	je     0x4522b9
  45224a:	(bad)  
  45224b:	add    BYTE PTR [rbx+0x73696c00],ch
  452251:	je     0x4522b8
  452253:	outs   dx,BYTE PTR ds:[rsi]
  452254:	add    BYTE PTR [rax],al
  452256:	lods   eax,DWORD PTR ds:[rsi]
  452257:	add    BYTE PTR [rsi+0x74],ch
  45225a:	outs   dx,DWORD PTR ds:[rsi]
  45225b:	push   0xae0073
  452260:	jb     0x4522c7
  452262:	movsxd esi,DWORD PTR [rsi+0x0]
  452265:	add    BYTE PTR [rax+0x6c657300],dh
  45226b:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  452270:	mov    cl,0x0
  452272:	jae    0x4522d9
  452274:	outs   dx,BYTE PTR ds:[rsi]
  452275:	add    BYTE PTR fs:[rax],al
  452278:	mov    bl,0x0
  45227a:	jae    0x4522e1
  45227c:	je     0x4522f1
  45227e:	outs   dx,DWORD PTR ds:[rsi]
  45227f:	movsxd ebp,DWORD PTR [rbx+0x6f]
  452282:	jo     0x4522f8
  452284:	add    BYTE PTR [rax],al
  452286:	mov    ch,0x0
  452288:	jae    0x4522f9
  45228a:	movsxd ebp,DWORD PTR [rbx+0x65]
  45228d:	je     0x45228f
  45228f:	add    BYTE PTR [rsi],cl
  452291:	add    BYTE PTR [rdi+0x55],bl
  452294:	outs   dx,BYTE PTR ds:[rsi]
  452295:	ja     0x452300
  452297:	outs   dx,BYTE PTR ds:[rsi]
  452298:	fs pop rdi
  45229a:	push   rdx
  45229b:	gs jae 0x452313
  45229e:	ins    DWORD PTR es:[rdi],dx
  45229f:	add    BYTE PTR gs:[rax],al
  4522a2:	add    BYTE PTR [rax],al
  4522a4:	cmp    eax,0x545a5f0d
  4522a9:	push   rsi
  4522aa:	rex.WRX xor QWORD PTR [rax],r14
  4522ad:	pop    rdi
  4522ae:	pop    rdi
  4522af:	movsxd edi,DWORD PTR [rax+0x78]
  4522b2:	(bad)  
  4522b3:	(bad)  
  4522b4:	imul   esi,DWORD PTR [rsi+0x31],0x5f5f3731
  4522bb:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4522bf:	jae    0x452320
  4522c1:	je     0x45233c
  4522c3:	jo     0x45232a
  4522c5:	pop    rdi
  4522c6:	imul   ebp,DWORD PTR [rsi+0x66],0x4100456f
  4522cd:	or     eax,0x56545a5f
  4522d2:	rex.WRX xor QWORD PTR [rax],r14
  4522d5:	pop    rdi
  4522d6:	pop    rdi
  4522d7:	movsxd edi,DWORD PTR [rax+0x78]
  4522da:	(bad)  
  4522db:	(bad)  
  4522dc:	imul   esi,DWORD PTR [rsi+0x31],0x5f5f3032
  4522e3:	jae    0x45234e
  4522e5:	pop    rdi
  4522e6:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4522ea:	jae    0x45234b
  4522ec:	je     0x452367
  4522ee:	jo     0x452355
  4522f0:	pop    rdi
  4522f1:	imul   ebp,DWORD PTR [rsi+0x66],0x456f
  4522f8:	repz or eax,0x78635f5f
  4522fe:	(bad)  
  4522ff:	pop    rdi
  452300:	(bad)  
  452301:	ins    BYTE PTR es:[rdi],dx
  452302:	ins    BYTE PTR es:[rdi],dx
  452303:	outs   dx,DWORD PTR ds:[rsi]
  452304:	movsxd esp,DWORD PTR [rcx+0x74]
  452307:	gs pop rdi
  452309:	gs js  0x45236f
  45230c:	gs jo  0x452383
  45230f:	imul   ebp,DWORD PTR [rdi+0x6e],0xdf60000
  452316:	pop    rdi
  452317:	pop    rdi
  452318:	movsxd edi,DWORD PTR [rax+0x61]
  45231b:	pop    rdi
  45231c:	(bad)  
  45231d:	imul   ebp,DWORD PTR gs:[esi+0x5f],0x63746163
  452326:	push   0x5f0dfb00
  45232b:	pop    rdi
  45232c:	movsxd edi,DWORD PTR [rax+0x61]
  45232f:	pop    rdi
  452330:	outs   dx,BYTE PTR gs:[rsi]
  452332:	fs pop rdi
  452334:	movsxd esp,DWORD PTR [rcx+0x74]
  452337:	movsxd ebp,DWORD PTR [rax+0x0]
  45233a:	add    BYTE PTR [rax],al
  45233c:	add    eax,0x635f5f0e
  452341:	js     0x4523a4
  452343:	pop    rdi
  452344:	jb     0x4523ab
  452346:	je     0x4523b0
  452348:	jb     0x4523b9
  45234a:	ja     0x45234c
  45234c:	(bad)  
  45234d:	(bad)  
  45234e:	pop    rdi
  45234f:	pop    rdi
  452350:	movsxd edi,DWORD PTR [rax+0x61]
  452353:	pop    rdi
  452354:	je     0x4523be
  452356:	jb     0x4523c7
  452358:	ja     0x45235a
  45235a:	add    BYTE PTR [rax],al
  45235c:	(bad)  
  45235d:	(bad)  
  45235e:	pop    rdi
  45235f:	pop    rdi
  452360:	addr32 js 0x4523db
  452363:	pop    rdi
  452364:	jo     0x4523cb
  452366:	jb     0x4523db
  452368:	outs   dx,DWORD PTR ds:[rsi]
  452369:	outs   dx,BYTE PTR ds:[rsi]
  45236a:	(bad)  
  45236b:	ins    BYTE PTR es:[rdi],dx
  45236c:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  452374:	add    BYTE PTR [rax],al
  452376:	add    BYTE PTR [rax],al
  452378:	add    BYTE PTR [rax],dl
  45237a:	add    eax,0x5100000
  45237f:	add    BYTE PTR [rax],al
  452381:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552387
  452387:	add    BYTE PTR [rax],al
  452389:	adc    BYTE PTR [rip+0x5100000],al        # 0x555238f
  45238f:	add    BYTE PTR [rax],al
  452391:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552397
  452397:	add    BYTE PTR [rax],al
  452399:	adc    BYTE PTR [rip+0x5100000],al        # 0x555239f
  45239f:	add    BYTE PTR [rax],al
  4523a1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523a7
  4523a7:	add    BYTE PTR [rax],al
  4523a9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523af
  4523af:	add    BYTE PTR [rax],al
  4523b1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523b7
  4523b7:	add    BYTE PTR [rax],al
  4523b9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523bf
  4523bf:	add    BYTE PTR [rax],al
  4523c1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523c7
  4523c7:	add    BYTE PTR [rax],al
  4523c9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523cf
  4523cf:	add    BYTE PTR [rax],al
  4523d1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523d7
  4523d7:	add    BYTE PTR [rax],al
  4523d9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523df
  4523df:	add    BYTE PTR [rax],al
  4523e1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523e7
  4523e7:	add    BYTE PTR [rax],al
  4523e9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523ef
  4523ef:	add    BYTE PTR [rax],al
  4523f1:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523f7
  4523f7:	add    BYTE PTR [rax],al
  4523f9:	adc    BYTE PTR [rip+0x5100000],al        # 0x55523ff
  4523ff:	add    BYTE PTR [rax],al
  452401:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552407
  452407:	add    BYTE PTR [rax],al
  452409:	adc    BYTE PTR [rip+0x5100000],al        # 0x555240f
  45240f:	add    BYTE PTR [rax],al
  452411:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552417
  452417:	add    BYTE PTR [rax],al
  452419:	adc    BYTE PTR [rip+0x5100000],al        # 0x555241f
  45241f:	add    BYTE PTR [rax],al
  452421:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552427
  452427:	add    BYTE PTR [rax],al
  452429:	adc    BYTE PTR [rip+0x5100000],al        # 0x555242f
  45242f:	add    BYTE PTR [rax],al
  452431:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552437
  452437:	add    BYTE PTR [rax],al
  452439:	adc    BYTE PTR [rip+0x5100000],al        # 0x555243f
  45243f:	add    BYTE PTR [rax],al
  452441:	adc    BYTE PTR [rip+0x5100000],al        # 0x5552447
  452447:	add    BYTE PTR [rax],al
  452449:	adc    BYTE PTR [rip+0x5100000],al        # 0x555244f
  45244f:	add    BYTE PTR [rbx+0x45],cl
  452452:	push   rdx
  452453:	rex.WRX
  452454:	rex.RB
  452455:	xor    r14,QWORD PTR [rdx]
  452458:	cs fs ins BYTE PTR es:[rdi],dx
  45245b:	ins    BYTE PTR es:[rdi],dx
  45245c:	add    BYTE PTR [rax],al
  45245e:	add    BYTE PTR [rax],al
  452460:	adc    al,0x10
  452462:	add    eax,0x5101400
  452467:	add    BYTE PTR [rax+rdx*1],dl
  45246a:	add    eax,0x5101400
  45246f:	add    BYTE PTR [rax+rdx*1],dl
  452472:	add    eax,0x5101400
  452477:	add    BYTE PTR [rax+rdx*1],dl
  45247a:	add    eax,0x5101400
  45247f:	add    BYTE PTR [rax+rdx*1],dl
  452482:	add    eax,0x5101400
  452487:	add    BYTE PTR [rax+rdx*1],dl
  45248a:	add    eax,0x5101400
  45248f:	add    BYTE PTR [rax+rdx*1],dl
  452492:	add    eax,0x5101400
  452497:	add    BYTE PTR [rax+rdx*1],dl
  45249a:	add    eax,0x5101400
  45249f:	add    BYTE PTR [rax+rdx*1],dl
  4524a2:	add    eax,0x5101400
  4524a7:	add    BYTE PTR [rax+rdx*1],dl
  4524aa:	add    eax,0x5101400
  4524af:	add    BYTE PTR [rax+rdx*1],dl
  4524b2:	add    eax,0x5101400
  4524b7:	add    BYTE PTR [rax+rdx*1],dl
  4524ba:	add    eax,0x5101400
  4524bf:	add    BYTE PTR [rax+rdx*1],dl
  4524c2:	add    eax,0x5101400
  4524c7:	add    BYTE PTR [rax+rdx*1],dl
  4524ca:	add    eax,0x5101400
  4524cf:	add    BYTE PTR [rax+rdx*1],dl
  4524d2:	add    eax,0x5101400
  4524d7:	add    BYTE PTR [rax+rdx*1],dl
  4524da:	add    eax,0x5101400
  4524df:	add    BYTE PTR [rax+rdx*1],dl
  4524e2:	add    eax,0x5101400
  4524e7:	add    BYTE PTR [rax+rdx*1],dl
  4524ea:	add    eax,0x5101400
  4524ef:	add    BYTE PTR [rax+rdx*1],dl
  4524f2:	add    eax,0x5101400
  4524f7:	add    BYTE PTR [rax+rdx*1],dl
  4524fa:	add    eax,0x5101400
  4524ff:	add    BYTE PTR [rax+rdx*1],dl
  452502:	add    eax,0x5101400
  452507:	add    BYTE PTR [rax+rdx*1],dl
  45250a:	add    eax,0x5101400
  45250f:	add    BYTE PTR [rax+rdx*1],dl
  452512:	add    eax,0x5101400
  452517:	add    BYTE PTR [rax+rdx*1],dl
  45251a:	add    eax,0x5101400
  45251f:	add    BYTE PTR [rax+rdx*1],dl
  452522:	add    eax,0x5101400
  452527:	add    BYTE PTR [rax+rdx*1],dl
  45252a:	add    eax,0x5101400
  45252f:	add    BYTE PTR [rax+rdx*1],dl
  452532:	add    eax,0x5101400
  452537:	add    BYTE PTR [rax+rdx*1],dl
  45253a:	add    eax,0x5101400
  45253f:	add    BYTE PTR [rax+rdx*1],dl
  452542:	add    eax,0x5101400
  452547:	add    BYTE PTR [rax+rdx*1],dl
  45254a:	add    eax,0x5101400
  45254f:	add    BYTE PTR [rax+rdx*1],dl
  452552:	add    eax,0x5101400
  452557:	add    BYTE PTR [rax+rdx*1],dl
  45255a:	add    eax,0x5101400
  45255f:	add    BYTE PTR [rax+rdx*1],dl
  452562:	add    eax,0x5101400
  452567:	add    BYTE PTR [rax+rdx*1],dl
  45256a:	add    eax,0x5101400
  45256f:	add    BYTE PTR [rax+rdx*1],dl
  452572:	add    eax,0x5101400
  452577:	add    BYTE PTR [rax+rdx*1],dl
  45257a:	add    eax,0x5101400
  45257f:	add    BYTE PTR [rax+rdx*1],dl
  452582:	add    eax,0x5101400
  452587:	add    BYTE PTR [rax+rdx*1],dl
  45258a:	add    eax,0x5101400
  45258f:	add    BYTE PTR [rbp+0x73],ch
  452592:	jbe    0x4525f7
  452594:	jb     0x45260a
  452596:	cs fs ins BYTE PTR es:[rdi],dx
  452599:	ins    BYTE PTR es:[rdi],dx
  45259a:	add    BYTE PTR [rax],al
  45259c:	sub    BYTE PTR [rax],dl
  45259e:	add    eax,0x5102800
  4525a3:	add    BYTE PTR [rax],ch
  4525a5:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554dab
  4525ab:	add    BYTE PTR [rax],ch
  4525ad:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554db3
  4525b3:	add    BYTE PTR [rax],ch
  4525b5:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554dbb
  4525bb:	add    BYTE PTR [rax],ch
  4525bd:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554dc3
  4525c3:	add    BYTE PTR [rax],ch
  4525c5:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554dcb
  4525cb:	add    BYTE PTR [rax],ch
  4525cd:	adc    BYTE PTR [rip+0x5102800],al        # 0x5554dd3
  4525d3:	add    BYTE PTR [rax],ch
  4525d5:	adc    BYTE PTR [rip+0x32535700],al        # 0x32987cdb
  4525db:	pop    rdi
  4525dc:	xor    esi,DWORD PTR [rdx]
  4525de:	cs fs ins BYTE PTR es:[rdi],dx
  4525e1:	ins    BYTE PTR es:[rdi],dx
  4525e2:	add    BYTE PTR [rax],al
  4525e4:	cmp    al,0x10
  4525e6:	add    eax,0x62696c00
  4525eb:	movsxd esp,DWORD PTR [ebx+0x5f]
  4525ef:	jae    0x452650
  4525f1:	jae    0x452658
  4525f3:	push   0x642e312d
  4525f8:	ins    BYTE PTR es:[rdi],dx
  4525f9:	ins    BYTE PTR es:[rdi],dx
  4525fa:	add    BYTE PTR [rax],al
  4525fc:	push   rax
  4525fd:	adc    BYTE PTR [rip+0x5105000],al        # 0x5557603
  452603:	add    BYTE PTR [rax+0x10],dl
  452606:	add    eax,0x5105000
  45260b:	add    BYTE PTR [rax+0x10],dl
  45260e:	add    eax,0x5105000
  452613:	add    BYTE PTR [rax+0x10],dl
  452616:	add    eax,0x5105000
  45261b:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  45261f:	jae    0x452695
  452621:	movsxd ebp,DWORD PTR fs:[rbx]
  452624:	sub    ebp,DWORD PTR [rip+0x6c642e36]        # 0x6ca95460
  45262a:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000453000 <.CRT>:
	...
  453008:	(bad)  
  453009:	adc    DWORD PTR [rax+0x0],eax
	...
  453020:	adc    BYTE PTR [rax],dl
  453022:	add    BYTE PTR [rax],al
  453025:	add    BYTE PTR [rax],al
  453027:	add    BYTE PTR [rax+0x4243],dl
	...
  45303d:	add    BYTE PTR [rax],al
  45303f:	add    al,al
  453041:	rex.RB
  453042:	rex.X add BYTE PTR [rax],al
  453045:	add    BYTE PTR [rax],al
  453047:	add    BYTE PTR [rax+0x4245],dl
	...

Disassembly of section .tls:

0000000000454000 <.tls>:
	...
  454020:	add    BYTE PTR [rax+0x45],al
  454023:	add    BYTE PTR [rax],al
  454025:	add    BYTE PTR [rax],al
  454027:	add    BYTE PTR [rax+0x40],ah
  45402a:	add    BYTE PTR [r8],r8b
  45402d:	add    BYTE PTR [rax],al
  45402f:	add    BYTE PTR [rsi+rdi*8],bl
  454032:	add    BYTE PTR [rax],r8b
  454035:	add    BYTE PTR [rax],al
  454037:	add    BYTE PTR [rax+0x30],al
  45403a:	add    BYTE PTR [r8],r8b
	...
