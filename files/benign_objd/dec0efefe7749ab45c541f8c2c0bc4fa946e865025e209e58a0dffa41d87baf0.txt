
dec0efefe7749ab45c541f8c2c0bc4fa946e865025e209e58a0dffa41d87baf0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x17449]        # 0x140018450
   140001007:	mov    QWORD PTR [rcx],rax
   14000100a:	jmp    0x140008178
   14000100f:	int3   
   140001010:	mov    QWORD PTR [rsp+0x8],rbx
   140001015:	push   rdi
   140001016:	sub    rsp,0x20
   14000101a:	lea    rax,[rip+0x1742f]        # 0x140018450
   140001021:	mov    ebx,edx
   140001023:	mov    rdi,rcx
   140001026:	mov    QWORD PTR [rcx],rax
   140001029:	call   0x140008178
   14000102e:	test   bl,0x1
   140001031:	je     0x14000103b
   140001033:	mov    rcx,rdi
   140001036:	call   0x14000872c
   14000103b:	mov    rax,rdi
   14000103e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001043:	add    rsp,0x20
   140001047:	pop    rdi
   140001048:	ret    
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	ret    0x0
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	jmp    0x140008178
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex push rbx
   140001072:	sub    rsp,0x20
   140001076:	mov    rbx,rcx
   140001079:	call   0x1400081b4
   14000107e:	lea    r11,[rip+0x175cb]        # 0x140018650
   140001085:	mov    QWORD PTR [rbx],r11
   140001088:	mov    rax,rbx
   14000108b:	add    rsp,0x20
   14000108f:	pop    rbx
   140001090:	ret    
   140001091:	int3   
   140001092:	int3   
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	lea    rax,[rip+0x17491]        # 0x140018538
   1400010a7:	mov    QWORD PTR [rcx],rax
   1400010aa:	ret    
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	rex push rbx
   1400010b2:	sub    rsp,0x20
   1400010b6:	mov    rbx,QWORD PTR [rcx]
   1400010b9:	test   rbx,rbx
   1400010bc:	je     0x140001110
   1400010be:	lea    rcx,[rsp+0x30]
   1400010c3:	xor    edx,edx
   1400010c5:	mov    QWORD PTR [rsp+0x38],rdi
   1400010ca:	call   0x1400076a4
   1400010cf:	mov    rax,QWORD PTR [rbx+0x8]
   1400010d3:	test   rax,rax
   1400010d6:	je     0x1400010e5
   1400010d8:	cmp    rax,0xffffffffffffffff
   1400010dc:	jae    0x1400010e5
   1400010de:	dec    rax
   1400010e1:	mov    QWORD PTR [rbx+0x8],rax
   1400010e5:	xor    edi,edi
   1400010e7:	lea    rcx,[rsp+0x30]
   1400010ec:	cmp    QWORD PTR [rbx+0x8],rdi
   1400010f0:	cmove  rdi,rbx
   1400010f4:	call   0x1400076d4
   1400010f9:	test   rdi,rdi
   1400010fc:	je     0x14000110b
   1400010fe:	mov    rax,QWORD PTR [rdi]
   140001101:	mov    edx,0x1
   140001106:	mov    rcx,rdi
   140001109:	call   QWORD PTR [rax]
   14000110b:	mov    rdi,QWORD PTR [rsp+0x38]
   140001110:	add    rsp,0x20
   140001114:	pop    rbx
   140001115:	ret    
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	rex push rbx
   140001122:	sub    rsp,0x20
   140001126:	lea    rax,[rip+0x1740b]        # 0x140018538
   14000112d:	mov    rbx,rcx
   140001130:	mov    QWORD PTR [rcx],rax
   140001133:	test   dl,0x1
   140001136:	je     0x14000113d
   140001138:	call   0x14000872c
   14000113d:	mov    rax,rbx
   140001140:	add    rsp,0x20
   140001144:	pop    rbx
   140001145:	ret    
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rbp
   140001152:	push   rsi
   140001153:	push   rdi
   140001154:	push   r12
   140001156:	push   r13
   140001158:	lea    rbp,[rsp-0x37]
   14000115d:	sub    rsp,0x90
   140001164:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   14000116c:	mov    QWORD PTR [rsp+0xc8],rbx
   140001174:	mov    r12,rdx
   140001177:	mov    rsi,rcx
   14000117a:	xor    r13d,r13d
   14000117d:	mov    edi,r13d
   140001180:	mov    DWORD PTR [rbp+0x67],r13d
   140001184:	cmp    QWORD PTR [rcx],rdi
   140001187:	jne    0x1400012ce
   14000118d:	lea    ecx,[r13+0x30]
   140001191:	call   0x140008790
   140001196:	mov    rbx,rax
   140001199:	mov    QWORD PTR [rbp+0x77],rax
   14000119d:	test   rax,rax
   1400011a0:	je     0x140001267
   1400011a6:	mov    rax,QWORD PTR [r12]
   1400011aa:	mov    rdi,QWORD PTR [rax+0x28]
   1400011ae:	test   rdi,rdi
   1400011b1:	jne    0x1400011b7
   1400011b3:	lea    rdi,[rax+0x30]
   1400011b7:	xor    edx,edx
   1400011b9:	lea    rcx,[rbp-0x19]
   1400011bd:	call   0x1400076a4
   1400011c2:	nop
   1400011c3:	mov    QWORD PTR [rbp-0x11],r13
   1400011c7:	mov    BYTE PTR [rbp-0x9],0x0
   1400011cb:	mov    QWORD PTR [rbp-0x1],r13
   1400011cf:	mov    BYTE PTR [rbp+0x7],0x0
   1400011d3:	mov    QWORD PTR [rbp+0xf],r13
   1400011d7:	mov    BYTE PTR [rbp+0x17],0x0
   1400011db:	mov    QWORD PTR [rbp+0x1f],r13
   1400011df:	mov    BYTE PTR [rbp+0x27],0x0
   1400011e3:	test   rdi,rdi
   1400011e6:	jne    0x14000121c
   1400011e8:	lea    rax,[rip+0x1a9c9]        # 0x14001bbb8
   1400011ef:	mov    QWORD PTR [rbp+0x67],rax
   1400011f3:	lea    rdx,[rbp+0x67]
   1400011f7:	lea    rcx,[rbp-0x31]
   1400011fb:	call   0x140008104
   140001200:	lea    r11,[rip+0x17449]        # 0x140018650
   140001207:	mov    QWORD PTR [rbp-0x31],r11
   14000120b:	lea    rdx,[rip+0x1e336]        # 0x14001f548
   140001212:	lea    rcx,[rbp-0x31]
   140001216:	call   0x140009498
   14000121b:	int3   
   14000121c:	mov    rdx,rdi
   14000121f:	lea    rcx,[rbp-0x19]
   140001223:	call   0x140007338
   140001228:	nop
   140001229:	mov    edi,0x1
   14000122e:	mov    QWORD PTR [rbx+0x8],r13
   140001232:	lea    rax,[rip+0x1abff]        # 0x14001be38
   140001239:	mov    QWORD PTR [rbx],rax
   14000123c:	lea    rcx,[rbp-0x31]
   140001240:	call   0x140007bd8
   140001245:	mov    rcx,QWORD PTR [rax]
   140001248:	mov    QWORD PTR [rbx+0x10],rcx
   14000124c:	mov    rcx,QWORD PTR [rax+0x8]
   140001250:	mov    QWORD PTR [rbx+0x18],rcx
   140001254:	mov    rax,QWORD PTR [rax+0x10]
   140001258:	mov    QWORD PTR [rbx+0x20],rax
   14000125c:	call   0x140006a80
   140001261:	mov    QWORD PTR [rbx+0x28],rax
   140001265:	jmp    0x14000126a
   140001267:	mov    rbx,r13
   14000126a:	mov    QWORD PTR [rsi],rbx
   14000126d:	test   dil,0x1
   140001271:	je     0x1400012ce
   140001273:	lea    rcx,[rbp-0x19]
   140001277:	call   0x1400072a4
   14000127c:	nop
   14000127d:	mov    rcx,QWORD PTR [rbp+0x1f]
   140001281:	test   rcx,rcx
   140001284:	je     0x14000128b
   140001286:	call   0x140008584
   14000128b:	mov    QWORD PTR [rbp+0x1f],r13
   14000128f:	mov    rcx,QWORD PTR [rbp+0xf]
   140001293:	test   rcx,rcx
   140001296:	je     0x14000129d
   140001298:	call   0x140008584
   14000129d:	mov    QWORD PTR [rbp+0xf],r13
   1400012a1:	mov    rcx,QWORD PTR [rbp-0x1]
   1400012a5:	test   rcx,rcx
   1400012a8:	je     0x1400012af
   1400012aa:	call   0x140008584
   1400012af:	mov    QWORD PTR [rbp-0x1],r13
   1400012b3:	mov    rcx,QWORD PTR [rbp-0x11]
   1400012b7:	test   rcx,rcx
   1400012ba:	je     0x1400012c1
   1400012bc:	call   0x140008584
   1400012c1:	mov    QWORD PTR [rbp-0x11],r13
   1400012c5:	lea    rcx,[rbp-0x19]
   1400012c9:	call   0x1400076d4
   1400012ce:	mov    eax,0x2
   1400012d3:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400012db:	add    rsp,0x90
   1400012e2:	pop    r13
   1400012e4:	pop    r12
   1400012e6:	pop    rdi
   1400012e7:	pop    rsi
   1400012e8:	pop    rbp
   1400012e9:	ret    
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	rex push rbx
   1400012f2:	sub    rsp,0x20
   1400012f6:	movzx  ebx,dx
   1400012f9:	lea    rdx,[rcx+0x10]
   1400012fd:	movzx  ecx,r8w
   140001301:	call   0x140007c44
   140001306:	test   bx,ax
   140001309:	setne  al
   14000130c:	add    rsp,0x20
   140001310:	pop    rbx
   140001311:	ret    
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	mov    rax,r9
   140001323:	mov    r10,r8
   140001326:	mov    r11,rdx
   140001329:	lea    r9,[rcx+0x10]
   14000132d:	mov    r8,rax
   140001330:	mov    rdx,r10
   140001333:	mov    rcx,r11
   140001336:	jmp    0x140007c78
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    QWORD PTR [rsp+0x8],rbx
   140001345:	mov    QWORD PTR [rsp+0x10],rbp
   14000134a:	mov    QWORD PTR [rsp+0x18],rsi
   14000134f:	push   rdi
   140001350:	sub    rsp,0x20
   140001354:	mov    rdi,r9
   140001357:	mov    rbx,r8
   14000135a:	movzx  ebp,dx
   14000135d:	mov    rsi,rcx
   140001360:	cmp    r8,r9
   140001363:	je     0x14000138d
   140001365:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001370:	mov    rax,QWORD PTR [rsi]
   140001373:	movzx  r8d,WORD PTR [rbx]
   140001377:	movzx  edx,bp
   14000137a:	mov    rcx,rsi
   14000137d:	call   QWORD PTR [rax+0x10]
   140001380:	test   al,al
   140001382:	jne    0x14000138d
   140001384:	add    rbx,0x2
   140001388:	cmp    rbx,rdi
   14000138b:	jne    0x140001370
   14000138d:	mov    rbp,QWORD PTR [rsp+0x38]
   140001392:	mov    rsi,QWORD PTR [rsp+0x40]
   140001397:	mov    rax,rbx
   14000139a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000139f:	add    rsp,0x20
   1400013a3:	pop    rdi
   1400013a4:	ret    
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400013ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400013bf:	push   rdi
   1400013c0:	sub    rsp,0x20
   1400013c4:	mov    rdi,r9
   1400013c7:	mov    rbx,r8
   1400013ca:	movzx  ebp,dx
   1400013cd:	mov    rsi,rcx
   1400013d0:	cmp    r8,r9
   1400013d3:	je     0x1400013fd
   1400013d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400013e0:	mov    rax,QWORD PTR [rsi]
   1400013e3:	movzx  r8d,WORD PTR [rbx]
   1400013e7:	movzx  edx,bp
   1400013ea:	mov    rcx,rsi
   1400013ed:	call   QWORD PTR [rax+0x10]
   1400013f0:	test   al,al
   1400013f2:	je     0x1400013fd
   1400013f4:	add    rbx,0x2
   1400013f8:	cmp    rbx,rdi
   1400013fb:	jne    0x1400013e0
   1400013fd:	mov    rbp,QWORD PTR [rsp+0x38]
   140001402:	mov    rsi,QWORD PTR [rsp+0x40]
   140001407:	mov    rax,rbx
   14000140a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000140f:	add    rsp,0x20
   140001413:	pop    rdi
   140001414:	ret    
   140001415:	int3   
   140001416:	int3   
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	movzx  eax,dx
   140001423:	lea    rdx,[rcx+0x10]
   140001427:	movzx  ecx,ax
   14000142a:	jmp    0x14000775c
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x10],rbx
   140001435:	push   rsi
   140001436:	sub    rsp,0x20
   14000143a:	mov    rsi,r8
   14000143d:	mov    rbx,rdx
   140001440:	cmp    rdx,r8
   140001443:	je     0x14000146d
   140001445:	mov    QWORD PTR [rsp+0x30],rdi
   14000144a:	lea    rdi,[rcx+0x10]
   14000144e:	xchg   ax,ax
   140001450:	movzx  ecx,WORD PTR [rbx]
   140001453:	mov    rdx,rdi
   140001456:	call   0x14000775c
   14000145b:	add    rbx,0x2
   14000145f:	mov    WORD PTR [rbx-0x2],ax
   140001463:	cmp    rbx,rsi
   140001466:	jne    0x140001450
   140001468:	mov    rdi,QWORD PTR [rsp+0x30]
   14000146d:	mov    rax,rbx
   140001470:	mov    rbx,QWORD PTR [rsp+0x38]
   140001475:	add    rsp,0x20
   140001479:	pop    rsi
   14000147a:	ret    
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	movzx  eax,dx
   140001483:	lea    rdx,[rcx+0x10]
   140001487:	movzx  ecx,ax
   14000148a:	jmp    0x1400077cc
   14000148f:	int3   
   140001490:	mov    QWORD PTR [rsp+0x10],rbx
   140001495:	push   rsi
   140001496:	sub    rsp,0x20
   14000149a:	mov    rsi,r8
   14000149d:	mov    rbx,rdx
   1400014a0:	cmp    rdx,r8
   1400014a3:	je     0x1400014cd
   1400014a5:	mov    QWORD PTR [rsp+0x30],rdi
   1400014aa:	lea    rdi,[rcx+0x10]
   1400014ae:	xchg   ax,ax
   1400014b0:	movzx  ecx,WORD PTR [rbx]
   1400014b3:	mov    rdx,rdi
   1400014b6:	call   0x1400077cc
   1400014bb:	add    rbx,0x2
   1400014bf:	mov    WORD PTR [rbx-0x2],ax
   1400014c3:	cmp    rbx,rsi
   1400014c6:	jne    0x1400014b0
   1400014c8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400014cd:	mov    rax,rbx
   1400014d0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014d5:	add    rsp,0x20
   1400014d9:	pop    rsi
   1400014da:	ret    
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	sub    rsp,0x38
   1400014e4:	lea    rax,[rcx+0x28]
   1400014e8:	mov    BYTE PTR [rsp+0x48],dl
   1400014ec:	lea    r9,[rsp+0x50]
   1400014f1:	lea    rdx,[rsp+0x48]
   1400014f6:	lea    rcx,[rsp+0x40]
   1400014fb:	mov    r8d,0x1
   140001501:	mov    QWORD PTR [rsp+0x20],rax
   140001506:	mov    DWORD PTR [rsp+0x50],0x0
   14000150e:	call   0x1400079ec
   140001513:	movzx  ecx,WORD PTR [rsp+0x40]
   140001518:	test   eax,eax
   14000151a:	mov    edx,0xffff
   14000151f:	cmovs  cx,dx
   140001523:	movzx  eax,cx
   140001526:	add    rsp,0x38
   14000152a:	ret    
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	rex push rbx
   140001532:	push   rsi
   140001533:	push   rdi
   140001534:	sub    rsp,0x50
   140001538:	mov    rsi,r9
   14000153b:	mov    rdi,r8
   14000153e:	mov    rbx,rdx
   140001541:	cmp    rdx,r8
   140001544:	je     0x1400015be
   140001546:	mov    QWORD PTR [rsp+0x70],rbp
   14000154b:	mov    QWORD PTR [rsp+0x48],r12
   140001550:	mov    QWORD PTR [rsp+0x40],r13
   140001555:	mov    r13d,0xffff
   14000155b:	lea    rbp,[rcx+0x28]
   14000155f:	xor    r12d,r12d
   140001562:	movzx  eax,BYTE PTR [rbx]
   140001565:	lea    r9,[rsp+0x30]
   14000156a:	lea    rdx,[rsp+0x78]
   14000156f:	lea    rcx,[rsp+0x80]
   140001577:	mov    r8d,0x1
   14000157d:	mov    DWORD PTR [rsp+0x30],r12d
   140001582:	mov    BYTE PTR [rsp+0x78],al
   140001586:	mov    QWORD PTR [rsp+0x20],rbp
   14000158b:	call   0x1400079ec
   140001590:	movzx  ecx,WORD PTR [rsp+0x80]
   140001598:	test   eax,eax
   14000159a:	cmovs  cx,r13w
   14000159f:	inc    rbx
   1400015a2:	add    rsi,0x2
   1400015a6:	mov    WORD PTR [rsi-0x2],cx
   1400015aa:	cmp    rbx,rdi
   1400015ad:	jne    0x140001562
   1400015af:	mov    r13,QWORD PTR [rsp+0x40]
   1400015b4:	mov    r12,QWORD PTR [rsp+0x48]
   1400015b9:	mov    rbp,QWORD PTR [rsp+0x70]
   1400015be:	mov    rax,rbx
   1400015c1:	add    rsp,0x50
   1400015c5:	pop    rdi
   1400015c6:	pop    rsi
   1400015c7:	pop    rbx
   1400015c8:	ret    
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	rex push rbx
   1400015d2:	sub    rsp,0x40
   1400015d6:	mov    rax,QWORD PTR [rip+0x1fe33]        # 0x140021410
   1400015dd:	xor    rax,rsp
   1400015e0:	mov    QWORD PTR [rsp+0x30],rax
   1400015e5:	movzx  ebx,r8b
   1400015e9:	lea    r9,[rcx+0x28]
   1400015ed:	lea    r8,[rsp+0x20]
   1400015f2:	lea    rcx,[rsp+0x24]
   1400015f7:	mov    DWORD PTR [rsp+0x20],0x0
   1400015ff:	call   0x1400069c4
   140001604:	movzx  edx,BYTE PTR [rsp+0x24]
   140001609:	cmp    eax,0x1
   14000160c:	cmovne edx,ebx
   14000160f:	movzx  eax,dl
   140001612:	mov    rcx,QWORD PTR [rsp+0x30]
   140001617:	xor    rcx,rsp
   14000161a:	call   0x140007d20
   14000161f:	add    rsp,0x40
   140001623:	pop    rbx
   140001624:	ret    
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	rex push rbx
   140001632:	push   rsi
   140001633:	push   rdi
   140001634:	push   r12
   140001636:	sub    rsp,0x48
   14000163a:	mov    rax,QWORD PTR [rip+0x1fdcf]        # 0x140021410
   140001641:	xor    rax,rsp
   140001644:	mov    QWORD PTR [rsp+0x30],rax
   140001649:	mov    rdi,QWORD PTR [rsp+0x90]
   140001651:	movzx  r12d,r9b
   140001655:	mov    rsi,r8
   140001658:	mov    rbx,rdx
   14000165b:	cmp    rdx,r8
   14000165e:	je     0x1400016c5
   140001660:	mov    QWORD PTR [rsp+0x80],rbp
   140001668:	mov    QWORD PTR [rsp+0x40],r13
   14000166d:	xor    r13d,r13d
   140001670:	lea    rbp,[rcx+0x28]
   140001674:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001680:	movzx  edx,WORD PTR [rbx]
   140001683:	lea    r8,[rsp+0x20]
   140001688:	lea    rcx,[rsp+0x24]
   14000168d:	mov    r9,rbp
   140001690:	mov    DWORD PTR [rsp+0x20],r13d
   140001695:	call   0x1400069c4
   14000169a:	movzx  edx,BYTE PTR [rsp+0x24]
   14000169f:	movzx  ecx,r12b
   1400016a3:	cmp    eax,0x1
   1400016a6:	cmovne edx,ecx
   1400016a9:	add    rbx,0x2
   1400016ad:	inc    rdi
   1400016b0:	mov    BYTE PTR [rdi-0x1],dl
   1400016b3:	cmp    rbx,rsi
   1400016b6:	jne    0x140001680
   1400016b8:	mov    r13,QWORD PTR [rsp+0x40]
   1400016bd:	mov    rbp,QWORD PTR [rsp+0x80]
   1400016c5:	mov    rax,rbx
   1400016c8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400016cd:	xor    rcx,rsp
   1400016d0:	call   0x140007d20
   1400016d5:	add    rsp,0x48
   1400016d9:	pop    r12
   1400016db:	pop    rdi
   1400016dc:	pop    rsi
   1400016dd:	pop    rbx
   1400016de:	ret    
   1400016df:	int3   
   1400016e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016e5:	push   rdi
   1400016e6:	sub    rsp,0x20
   1400016ea:	cmp    DWORD PTR [rcx+0x20],0x0
   1400016ee:	lea    rax,[rip+0x1a743]        # 0x14001be38
   1400016f5:	mov    edi,edx
   1400016f7:	mov    QWORD PTR [rcx],rax
   1400016fa:	mov    rbx,rcx
   1400016fd:	je     0x140001708
   1400016ff:	mov    rcx,QWORD PTR [rcx+0x18]
   140001703:	call   0x140008584
   140001708:	lea    rax,[rip+0x16e29]        # 0x140018538
   14000170f:	mov    QWORD PTR [rbx],rax
   140001712:	test   dil,0x1
   140001716:	je     0x140001720
   140001718:	mov    rcx,rbx
   14000171b:	call   0x14000872c
   140001720:	mov    rax,rbx
   140001723:	mov    rbx,QWORD PTR [rsp+0x30]
   140001728:	add    rsp,0x20
   14000172c:	pop    rdi
   14000172d:	ret    
   14000172e:	int3   
   14000172f:	int3   
   140001730:	rex push rbp
   140001732:	mov    rbp,rsp
   140001735:	sub    rsp,0x60
   140001739:	mov    eax,DWORD PTR [rcx+0x14]
   14000173c:	and    edx,0x17
   14000173f:	and    eax,edx
   140001741:	mov    DWORD PTR [rcx+0x10],edx
   140001744:	je     0x140001845
   14000174a:	test   r8b,r8b
   14000174d:	je     0x140001759
   14000174f:	xor    edx,edx
   140001751:	xor    ecx,ecx
   140001753:	call   0x140009498
   140001758:	int3   
   140001759:	mov    QWORD PTR [rsp+0x78],rbx
   14000175e:	mov    DWORD PTR [rbp-0x40],0x1
   140001765:	test   al,0x4
   140001767:	je     0x1400017b1
   140001769:	call   0x140006b34
   14000176e:	lea    rdx,[rbp+0x10]
   140001772:	lea    rcx,[rbp-0x30]
   140001776:	mov    rbx,rax
   140001779:	lea    rax,[rip+0x1a448]        # 0x14001bbc8
   140001780:	mov    QWORD PTR [rbp+0x10],rax
   140001784:	call   0x140008104
   140001789:	mov    rcx,QWORD PTR [rbp-0x40]
   14000178d:	mov    QWORD PTR [rbp-0x18],rcx
   140001791:	lea    rax,[rip+0x1a728]        # 0x14001bec0
   140001798:	lea    rdx,[rip+0x1de41]        # 0x14001f5e0
   14000179f:	lea    rcx,[rbp-0x30]
   1400017a3:	mov    QWORD PTR [rbp-0x10],rbx
   1400017a7:	mov    QWORD PTR [rbp-0x30],rax
   1400017ab:	call   0x140009498
   1400017b0:	int3   
   1400017b1:	test   al,0x2
   1400017b3:	je     0x1400017fd
   1400017b5:	call   0x140006b34
   1400017ba:	lea    rdx,[rbp+0x10]
   1400017be:	lea    rcx,[rbp-0x30]
   1400017c2:	mov    rbx,rax
   1400017c5:	lea    rax,[rip+0x1a414]        # 0x14001bbe0
   1400017cc:	mov    QWORD PTR [rbp+0x10],rax
   1400017d0:	call   0x140008104
   1400017d5:	mov    rcx,QWORD PTR [rbp-0x40]
   1400017d9:	mov    QWORD PTR [rbp-0x18],rcx
   1400017dd:	lea    rax,[rip+0x1a6dc]        # 0x14001bec0
   1400017e4:	lea    rdx,[rip+0x1ddf5]        # 0x14001f5e0
   1400017eb:	lea    rcx,[rbp-0x30]
   1400017ef:	mov    QWORD PTR [rbp-0x10],rbx
   1400017f3:	mov    QWORD PTR [rbp-0x30],rax
   1400017f7:	call   0x140009498
   1400017fc:	int3   
   1400017fd:	call   0x140006b34
   140001802:	lea    rdx,[rbp+0x10]
   140001806:	lea    rcx,[rbp-0x30]
   14000180a:	mov    rbx,rax
   14000180d:	lea    rax,[rip+0x1a3e4]        # 0x14001bbf8
   140001814:	mov    QWORD PTR [rbp+0x10],rax
   140001818:	call   0x140008104
   14000181d:	mov    rcx,QWORD PTR [rbp-0x40]
   140001821:	mov    QWORD PTR [rbp-0x18],rcx
   140001825:	lea    rax,[rip+0x1a694]        # 0x14001bec0
   14000182c:	lea    rdx,[rip+0x1ddad]        # 0x14001f5e0
   140001833:	lea    rcx,[rbp-0x30]
   140001837:	mov    QWORD PTR [rbp-0x10],rbx
   14000183b:	mov    QWORD PTR [rbp-0x30],rax
   14000183f:	call   0x140009498
   140001844:	int3   
   140001845:	add    rsp,0x60
   140001849:	pop    rbp
   14000184a:	ret    
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x10],rbx
   140001855:	push   rdi
   140001856:	sub    rsp,0x20
   14000185a:	mov    rax,QWORD PTR [rcx+0x40]
   14000185e:	mov    rbx,rdx
   140001861:	lea    rcx,[rsp+0x30]
   140001866:	mov    rdi,QWORD PTR [rax]
   140001869:	mov    QWORD PTR [rdx],rdi
   14000186c:	xor    edx,edx
   14000186e:	call   0x1400076a4
   140001873:	mov    rax,QWORD PTR [rdi+0x8]
   140001877:	cmp    rax,0xffffffffffffffff
   14000187b:	jae    0x140001884
   14000187d:	inc    rax
   140001880:	mov    QWORD PTR [rdi+0x8],rax
   140001884:	lea    rcx,[rsp+0x30]
   140001889:	call   0x1400076d4
   14000188e:	mov    rax,rbx
   140001891:	mov    rbx,QWORD PTR [rsp+0x38]
   140001896:	add    rsp,0x20
   14000189a:	pop    rdi
   14000189b:	ret    
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400018a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400018aa:	push   rdi
   1400018ab:	sub    rsp,0x20
   1400018af:	xor    esi,esi
   1400018b1:	xor    r8d,r8d
   1400018b4:	xor    edx,edx
   1400018b6:	mov    rbx,rcx
   1400018b9:	mov    DWORD PTR [rcx+0x18],0x201
   1400018c0:	mov    QWORD PTR [rcx+0x20],0x6
   1400018c8:	mov    QWORD PTR [rcx+0x40],rsi
   1400018cc:	mov    QWORD PTR [rcx+0x8],rsi
   1400018d0:	mov    DWORD PTR [rcx+0x14],esi
   1400018d3:	mov    QWORD PTR [rcx+0x28],rsi
   1400018d7:	mov    QWORD PTR [rcx+0x30],rsi
   1400018db:	mov    QWORD PTR [rcx+0x38],rsi
   1400018df:	call   0x140001730
   1400018e4:	lea    ecx,[rsi+0x8]
   1400018e7:	call   0x140008790
   1400018ec:	mov    rdi,rax
   1400018ef:	test   rax,rax
   1400018f2:	je     0x14000193f
   1400018f4:	call   0x14000740c
   1400018f9:	mov    QWORD PTR [rdi],rax
   1400018fc:	call   0x1400071bc
   140001901:	lea    rcx,[rsp+0x30]
   140001906:	xor    edx,edx
   140001908:	mov    rsi,rax
   14000190b:	call   0x1400076a4
   140001910:	mov    rcx,QWORD PTR [rsi+0x8]
   140001914:	cmp    rcx,0xffffffffffffffff
   140001918:	jae    0x140001921
   14000191a:	inc    rcx
   14000191d:	mov    QWORD PTR [rsi+0x8],rcx
   140001921:	lea    rcx,[rsp+0x30]
   140001926:	call   0x1400076d4
   14000192b:	mov    QWORD PTR [rbx+0x40],rdi
   14000192f:	mov    rbx,QWORD PTR [rsp+0x38]
   140001934:	mov    rsi,QWORD PTR [rsp+0x40]
   140001939:	add    rsp,0x20
   14000193d:	pop    rdi
   14000193e:	ret    
   14000193f:	mov    QWORD PTR [rbx+0x40],rsi
   140001943:	mov    rbx,QWORD PTR [rsp+0x38]
   140001948:	mov    rsi,QWORD PTR [rsp+0x40]
   14000194d:	add    rsp,0x20
   140001951:	pop    rdi
   140001952:	ret    
   140001953:	int3   
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x8],rbx
   140001965:	push   rdi
   140001966:	sub    rsp,0x20
   14000196a:	mov    ebx,edx
   14000196c:	mov    rdi,rcx
   14000196f:	call   0x140008178
   140001974:	test   bl,0x1
   140001977:	je     0x140001981
   140001979:	mov    rcx,rdi
   14000197c:	call   0x14000872c
   140001981:	mov    rax,rdi
   140001984:	mov    rbx,QWORD PTR [rsp+0x30]
   140001989:	add    rsp,0x20
   14000198d:	pop    rdi
   14000198e:	ret    
   14000198f:	int3   
   140001990:	mov    QWORD PTR [rsp+0x8],rbx
   140001995:	push   rdi
   140001996:	sub    rsp,0x20
   14000199a:	mov    rbx,rdx
   14000199d:	mov    rdi,rcx
   1400019a0:	call   0x1400081b4
   1400019a5:	lea    r11,[rip+0x1a4fc]        # 0x14001bea8
   1400019ac:	mov    QWORD PTR [rdi],r11
   1400019af:	mov    rax,QWORD PTR [rbx+0x18]
   1400019b3:	mov    QWORD PTR [rdi+0x18],rax
   1400019b7:	mov    rax,QWORD PTR [rbx+0x20]
   1400019bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019c0:	mov    QWORD PTR [rdi+0x20],rax
   1400019c4:	lea    rax,[rip+0x1a4f5]        # 0x14001bec0
   1400019cb:	mov    QWORD PTR [rdi],rax
   1400019ce:	mov    rax,rdi
   1400019d1:	add    rsp,0x20
   1400019d5:	pop    rdi
   1400019d6:	ret    
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019e5:	push   rdi
   1400019e6:	sub    rsp,0x20
   1400019ea:	mov    rbx,rdx
   1400019ed:	mov    rdi,rcx
   1400019f0:	call   0x1400081b4
   1400019f5:	lea    r11,[rip+0x1a4ac]        # 0x14001bea8
   1400019fc:	mov    QWORD PTR [rdi],r11
   1400019ff:	mov    rax,QWORD PTR [rbx+0x18]
   140001a03:	mov    QWORD PTR [rdi+0x18],rax
   140001a07:	mov    rax,QWORD PTR [rbx+0x20]
   140001a0b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a10:	mov    QWORD PTR [rdi+0x20],rax
   140001a14:	mov    rax,rdi
   140001a17:	add    rsp,0x20
   140001a1b:	pop    rdi
   140001a1c:	ret    
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    QWORD PTR [rsp+0x8],rbx
   140001a25:	push   rdi
   140001a26:	sub    rsp,0x20
   140001a2a:	lea    rax,[rip+0x1a28f]        # 0x14001bcc0
   140001a31:	mov    ebx,edx
   140001a33:	mov    rdi,rcx
   140001a36:	mov    QWORD PTR [rcx],rax
   140001a39:	call   0x14000703c
   140001a3e:	test   bl,0x1
   140001a41:	je     0x140001a4b
   140001a43:	mov    rcx,rdi
   140001a46:	call   0x14000872c
   140001a4b:	mov    rax,rdi
   140001a4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a53:	add    rsp,0x20
   140001a57:	pop    rdi
   140001a58:	ret    
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	rex push rbx
   140001a62:	sub    rsp,0x30
   140001a66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a6f:	lea    rbx,[rip+0x2279a]        # 0x140024210
   140001a76:	mov    QWORD PTR [rsp+0x40],rbx
   140001a7b:	lea    rcx,[rip+0x228ce]        # 0x140024350
   140001a82:	mov    QWORD PTR [rsp+0x48],rcx
   140001a87:	mov    r8,QWORD PTR [rip+0x228ca]        # 0x140024358
   140001a8e:	mov    r9,r8
   140001a91:	mov    r8,QWORD PTR [r8]
   140001a94:	lea    rdx,[rsp+0x50]
   140001a99:	call   0x140003870
   140001a9e:	nop
   140001a9f:	mov    rcx,QWORD PTR [rip+0x228b2]        # 0x140024358
   140001aa6:	call   0x14000872c
   140001aab:	nop
   140001aac:	cmp    QWORD PTR [rip+0x2288c],0x8        # 0x140024340
   140001ab4:	jb     0x140001ac2
   140001ab6:	mov    rcx,QWORD PTR [rip+0x2286b]        # 0x140024328
   140001abd:	call   0x14000872c
   140001ac2:	mov    QWORD PTR [rip+0x22873],0x7        # 0x140024340
   140001acd:	xor    eax,eax
   140001acf:	mov    QWORD PTR [rip+0x22862],rax        # 0x140024338
   140001ad6:	mov    WORD PTR [rip+0x2284b],ax        # 0x140024328
   140001add:	lea    rcx,[rip+0x227e4]        # 0x1400242c8
   140001ae4:	call   0x140002940
   140001ae9:	lea    r11,[rip+0x1a1d0]        # 0x14001bcc0
   140001af0:	mov    QWORD PTR [rip+0x227d1],r11        # 0x1400242c8
   140001af7:	lea    rcx,[rip+0x227ca]        # 0x1400242c8
   140001afe:	call   0x14000703c
   140001b03:	nop
   140001b04:	mov    r8,QWORD PTR [rip+0x2270d]        # 0x140024218
   140001b0b:	mov    r9,r8
   140001b0e:	mov    r8,QWORD PTR [r8]
   140001b11:	lea    rdx,[rsp+0x48]
   140001b16:	mov    rcx,rbx
   140001b19:	call   0x140003870
   140001b1e:	nop
   140001b1f:	mov    rcx,QWORD PTR [rip+0x226f2]        # 0x140024218
   140001b26:	add    rsp,0x30
   140001b2a:	pop    rbx
   140001b2b:	jmp    0x14000872c
   140001b30:	mov    QWORD PTR [rsp+0x8],rcx
   140001b35:	push   rbx
   140001b36:	sub    rsp,0x30
   140001b3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001b43:	mov    rbx,rcx
   140001b46:	mov    r8,QWORD PTR [rcx+0x8]
   140001b4a:	mov    r9,r8
   140001b4d:	mov    r8,QWORD PTR [r8]
   140001b50:	lea    rdx,[rsp+0x48]
   140001b55:	call   0x140003870
   140001b5a:	nop
   140001b5b:	mov    rcx,QWORD PTR [rbx+0x8]
   140001b5f:	add    rsp,0x30
   140001b63:	pop    rbx
   140001b64:	jmp    0x14000872c
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	rex push rbx
   140001b72:	sub    rsp,0x20
   140001b76:	lea    rbx,[rcx+0x98]
   140001b7d:	mov    rcx,rbx
   140001b80:	call   0x140002940
   140001b85:	lea    r11,[rip+0x1a134]        # 0x14001bcc0
   140001b8c:	mov    rcx,rbx
   140001b8f:	mov    QWORD PTR [rbx],r11
   140001b92:	add    rsp,0x20
   140001b96:	pop    rbx
   140001b97:	jmp    0x14000703c
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ba5:	mov    QWORD PTR [rsp+0x10],rbp
   140001baa:	mov    QWORD PTR [rsp+0x18],rsi
   140001baf:	mov    QWORD PTR [rsp+0x20],rdi
   140001bb4:	push   r12
   140001bb6:	sub    rsp,0x20
   140001bba:	xor    edi,edi
   140001bbc:	xor    ebx,ebx
   140001bbe:	mov    rbp,rdx
   140001bc1:	mov    DWORD PTR [rdx],edi
   140001bc3:	cmp    QWORD PTR [rip+0x20ea6],rbx        # 0x140022a70
   140001bca:	mov    rsi,rcx
   140001bcd:	je     0x140001c04
   140001bcf:	lea    r12,[rip+0x20e9a]        # 0x140022a70
   140001bd6:	mov    rax,r12
   140001bd9:	nop    DWORD PTR [rax+0x0]
   140001be0:	mov    rdx,QWORD PTR [rax]
   140001be3:	mov    rcx,rsi
   140001be6:	call   0x140007ee8
   140001beb:	test   eax,eax
   140001bed:	je     0x140001c61
   140001bef:	inc    rbx
   140001bf2:	inc    edi
   140001bf4:	mov    rax,rbx
   140001bf7:	shl    rax,0x4
   140001bfb:	add    rax,r12
   140001bfe:	cmp    QWORD PTR [rax],0x0
   140001c02:	jne    0x140001be0
   140001c04:	xor    ebx,ebx
   140001c06:	xor    edi,edi
   140001c08:	cmp    QWORD PTR [rip+0x20ee1],rbx        # 0x140022af0
   140001c0f:	je     0x140001c44
   140001c11:	lea    r12,[rip+0x20ed8]        # 0x140022af0
   140001c18:	mov    rax,r12
   140001c1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001c20:	mov    rdx,QWORD PTR [rax]
   140001c23:	mov    rcx,rsi
   140001c26:	call   0x140007ee8
   140001c2b:	test   eax,eax
   140001c2d:	je     0x140001c61
   140001c2f:	inc    rbx
   140001c32:	inc    edi
   140001c34:	mov    rax,rbx
   140001c37:	shl    rax,0x4
   140001c3b:	add    rax,r12
   140001c3e:	cmp    QWORD PTR [rax],0x0
   140001c42:	jne    0x140001c20
   140001c44:	xor    eax,eax
   140001c46:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c4b:	mov    rbp,QWORD PTR [rsp+0x38]
   140001c50:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c55:	mov    rdi,QWORD PTR [rsp+0x48]
   140001c5a:	add    rsp,0x20
   140001c5e:	pop    r12
   140001c60:	ret    
   140001c61:	movsxd rax,edi
   140001c64:	add    rax,rax
   140001c67:	mov    eax,DWORD PTR [r12+rax*8+0x8]
   140001c6c:	mov    DWORD PTR [rbp+0x0],eax
   140001c6f:	mov    eax,0x1
   140001c74:	jmp    0x140001c46
   140001c76:	int3   
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	mov    rax,rsp
   140001c83:	push   rbp
   140001c84:	push   r12
   140001c86:	push   r13
   140001c88:	push   r14
   140001c8a:	push   r15
   140001c8c:	lea    rbp,[rax-0x5f]
   140001c90:	sub    rsp,0xc0
   140001c97:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   140001c9f:	mov    QWORD PTR [rax+0x10],rbx
   140001ca3:	mov    QWORD PTR [rax+0x18],rsi
   140001ca7:	mov    QWORD PTR [rax+0x20],rdi
   140001cab:	mov    rax,QWORD PTR [rip+0x1f75e]        # 0x140021410
   140001cb2:	xor    rax,rsp
   140001cb5:	mov    QWORD PTR [rbp+0x27],rax
   140001cb9:	mov    rdx,rcx
   140001cbc:	mov    QWORD PTR [rbp-0x39],0x7
   140001cc4:	xor    r15d,r15d
   140001cc7:	mov    QWORD PTR [rbp-0x41],r15
   140001ccb:	mov    WORD PTR [rbp-0x51],r15w
   140001cd0:	mov    esi,r15d
   140001cd3:	mov    QWORD PTR [rbp-0x11],0x7
   140001cdb:	mov    QWORD PTR [rbp-0x19],r15
   140001cdf:	mov    WORD PTR [rbp-0x29],r15w
   140001ce4:	xor    eax,eax
   140001ce6:	or     rcx,0xffffffffffffffff
   140001cea:	mov    rdi,rdx
   140001ced:	repnz scas ax,WORD PTR es:[rdi]
   140001cf0:	not    rcx
   140001cf3:	lea    r8,[rcx-0x1]
   140001cf7:	lea    rcx,[rip+0x2262a]        # 0x140024328
   140001cfe:	call   0x140003f20
   140001d03:	lea    r8d,[r15+0x3]
   140001d07:	lea    rdx,[rip+0x19f0a]        # 0x14001bc18
   140001d0e:	lea    rcx,[rip+0x22613]        # 0x140024328
   140001d15:	call   0x140003670
   140001d1a:	cmp    rax,0xffffffffffffffff
   140001d1e:	je     0x140001d3a
   140001d20:	lea    r9d,[r15+0x4]
   140001d24:	lea    r8,[rip+0x19ef5]        # 0x14001bc20
   140001d2b:	mov    rdx,rax
   140001d2e:	lea    rcx,[rip+0x225f3]        # 0x140024328
   140001d35:	call   0x1400034a0
   140001d3a:	mov    r8d,0x3
   140001d40:	lea    rdx,[rip+0x19ee9]        # 0x14001bc30
   140001d47:	lea    rcx,[rip+0x225da]        # 0x140024328
   140001d4e:	call   0x140003670
   140001d53:	cmp    rax,0xffffffffffffffff
   140001d57:	je     0x140001d75
   140001d59:	mov    r9d,0x4
   140001d5f:	lea    r8,[rip+0x19ed2]        # 0x14001bc38
   140001d66:	mov    rdx,rax
   140001d69:	lea    rcx,[rip+0x225b8]        # 0x140024328
   140001d70:	call   0x1400034a0
   140001d75:	cmp    QWORD PTR [rip+0x225bb],0x0        # 0x140024338
   140001d7d:	je     0x140002009
   140001d83:	lea    rcx,[rip+0x2259e]        # 0x140024328
   140001d8a:	cmp    QWORD PTR [rip+0x225ae],0x8        # 0x140024340
   140001d92:	cmovae rcx,QWORD PTR [rip+0x2258e]        # 0x140024328
   140001d9a:	lea    rdx,[rbp-0x69]
   140001d9e:	call   QWORD PTR [rip+0x16524]        # 0x1400182c8
   140001da4:	mov    r14,rax
   140001da7:	mov    QWORD PTR [rbp-0x61],rax
   140001dab:	test   rax,rax
   140001dae:	je     0x140001ff6
   140001db4:	mov    r12d,r15d
   140001db7:	cmp    DWORD PTR [rbp-0x69],r15d
   140001dbb:	jle    0x140001fe3
   140001dc1:	mov    r13,rax
   140001dc4:	or     r14,0xffffffffffffffff
   140001dc8:	nop    DWORD PTR [rax+rax*1+0x0]
   140001dd0:	mov    rdx,QWORD PTR [r13+0x0]
   140001dd4:	movzx  eax,WORD PTR [rdx]
   140001dd7:	cmp    ax,0x2d
   140001ddb:	je     0x140001de8
   140001ddd:	cmp    ax,0x2f
   140001de1:	je     0x140001de8
   140001de3:	mov    ebx,r15d
   140001de6:	jmp    0x140001df1
   140001de8:	mov    ebx,0x1
   140001ded:	add    rdx,0x2
   140001df1:	xor    eax,eax
   140001df3:	mov    rcx,r14
   140001df6:	mov    rdi,rdx
   140001df9:	repnz scas ax,WORD PTR es:[rdi]
   140001dfc:	not    rcx
   140001dff:	lea    r8,[rcx-0x1]
   140001e03:	lea    rcx,[rbp-0x51]
   140001e07:	call   0x140004030
   140001e0c:	test   esi,esi
   140001e0e:	je     0x140001ec0
   140001e14:	test   ebx,ebx
   140001e16:	je     0x140001e35
   140001e18:	lea    rdx,[rbp-0x51]
   140001e1c:	lea    rcx,[rip+0x2241d]        # 0x140024240
   140001e23:	call   0x1400052a0
   140001e28:	mov    rcx,rax
   140001e2b:	call   0x1400054f0
   140001e30:	jmp    0x140001eb8
   140001e35:	lea    rcx,[rbp-0x29]
   140001e39:	call   0x1400026b0
   140001e3e:	mov    rdi,rax
   140001e41:	mov    rbx,QWORD PTR [rbp-0x41]
   140001e45:	cmp    rbx,0xffffffffffffffff
   140001e49:	cmova  rbx,r14
   140001e4d:	lea    rax,[rbp-0x51]
   140001e51:	mov    rdx,rbx
   140001e54:	mov    rcx,rdi
   140001e57:	cmp    rdi,rax
   140001e5a:	jne    0x140001e73
   140001e5c:	mov    r8,r14
   140001e5f:	call   0x140004190
   140001e64:	xor    r8d,r8d
   140001e67:	xor    edx,edx
   140001e69:	mov    rcx,rdi
   140001e6c:	call   0x140004190
   140001e71:	jmp    0x140001eb8
   140001e73:	call   0x140004570
   140001e78:	test   al,al
   140001e7a:	je     0x140001eb8
   140001e7c:	lea    rdx,[rbp-0x51]
   140001e80:	cmp    QWORD PTR [rbp-0x39],0x8
   140001e85:	cmovae rdx,QWORD PTR [rbp-0x51]
   140001e8a:	cmp    QWORD PTR [rdi+0x18],0x8
   140001e8f:	jb     0x140001e96
   140001e91:	mov    rcx,QWORD PTR [rdi]
   140001e94:	jmp    0x140001e99
   140001e96:	mov    rcx,rdi
   140001e99:	lea    rsi,[rbx+rbx*1]
   140001e9d:	mov    r8,rsi
   140001ea0:	call   0x140008250
   140001ea5:	mov    QWORD PTR [rdi+0x10],rbx
   140001ea9:	cmp    QWORD PTR [rdi+0x18],0x8
   140001eae:	jb     0x140001eb3
   140001eb0:	mov    rdi,QWORD PTR [rdi]
   140001eb3:	mov    WORD PTR [rdi+rsi*1],r15w
   140001eb8:	mov    esi,r15d
   140001ebb:	jmp    0x140001fce
   140001ec0:	test   ebx,ebx
   140001ec2:	je     0x140001fb6
   140001ec8:	mov    rbx,r15
   140001ecb:	cmp    QWORD PTR [rbp-0x41],rbx
   140001ecf:	jbe    0x140001f12
   140001ed1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001ee0:	lea    rcx,[rbp-0x51]
   140001ee4:	mov    rdx,QWORD PTR [rbp-0x51]
   140001ee8:	mov    rax,QWORD PTR [rbp-0x39]
   140001eec:	cmp    rax,0x8
   140001ef0:	cmovae rcx,rdx
   140001ef4:	lea    rdi,[rbp-0x51]
   140001ef8:	cmovae rdi,rdx
   140001efc:	movzx  ecx,WORD PTR [rcx+rbx*2]
   140001f00:	call   0x140008048
   140001f05:	mov    WORD PTR [rdi+rbx*2],ax
   140001f09:	inc    rbx
   140001f0c:	cmp    rbx,QWORD PTR [rbp-0x41]
   140001f10:	jb     0x140001ee0
   140001f12:	lea    rcx,[rbp-0x51]
   140001f16:	cmp    QWORD PTR [rbp-0x39],0x8
   140001f1b:	cmovae rcx,QWORD PTR [rbp-0x51]
   140001f20:	lea    rdx,[rbp-0x65]
   140001f24:	call   0x140001ba0
   140001f29:	test   eax,eax
   140001f2b:	je     0x140001fb6
   140001f31:	cmp    DWORD PTR [rbp-0x65],0x0
   140001f35:	je     0x140001f99
   140001f37:	mov    rbx,QWORD PTR [rbp-0x41]
   140001f3b:	cmp    rbx,0xffffffffffffffff
   140001f3f:	cmova  rbx,r14
   140001f43:	mov    rdx,rbx
   140001f46:	lea    rcx,[rbp-0x29]
   140001f4a:	call   0x140004570
   140001f4f:	test   al,al
   140001f51:	je     0x140001f92
   140001f53:	lea    rdx,[rbp-0x51]
   140001f57:	cmp    QWORD PTR [rbp-0x39],0x8
   140001f5c:	cmovae rdx,QWORD PTR [rbp-0x51]
   140001f61:	lea    rcx,[rbp-0x29]
   140001f65:	cmp    QWORD PTR [rbp-0x11],0x8
   140001f6a:	cmovae rcx,QWORD PTR [rbp-0x29]
   140001f6f:	lea    rdi,[rbx+rbx*1]
   140001f73:	mov    r8,rdi
   140001f76:	call   0x140008250
   140001f7b:	mov    QWORD PTR [rbp-0x19],rbx
   140001f7f:	lea    rax,[rbp-0x29]
   140001f83:	cmp    QWORD PTR [rbp-0x11],0x8
   140001f88:	cmovae rax,QWORD PTR [rbp-0x29]
   140001f8d:	mov    WORD PTR [rax+rdi*1],r15w
   140001f92:	mov    esi,0x1
   140001f97:	jmp    0x140001fce
   140001f99:	lea    rcx,[rbp-0x51]
   140001f9d:	call   0x1400026b0
   140001fa2:	xor    r8d,r8d
   140001fa5:	lea    rdx,[rip+0x19c64]        # 0x14001bc10
   140001fac:	mov    rcx,rax
   140001faf:	call   0x140004030
   140001fb4:	jmp    0x140001fce
   140001fb6:	lea    rdx,[rbp-0x51]
   140001fba:	lea    rcx,[rip+0x2227f]        # 0x140024240
   140001fc1:	call   0x1400052a0
   140001fc6:	mov    rcx,rax
   140001fc9:	call   0x1400054f0
   140001fce:	inc    r12d
   140001fd1:	add    r13,0x8
   140001fd5:	cmp    r12d,DWORD PTR [rbp-0x69]
   140001fd9:	jl     0x140001dd0
   140001fdf:	mov    r14,QWORD PTR [rbp-0x61]
   140001fe3:	mov    rcx,r14
   140001fe6:	call   QWORD PTR [rip+0x1607c]        # 0x140018068
   140001fec:	test   esi,esi
   140001fee:	je     0x140002009
   140001ff0:	lea    rdx,[rbp-0x51]
   140001ff4:	jmp    0x140001ffd
   140001ff6:	lea    rdx,[rip+0x2232b]        # 0x140024328
   140001ffd:	lea    rcx,[rip+0x2223c]        # 0x140024240
   140002004:	call   0x1400052a0
   140002009:	lea    rdx,[rbp-0x1]
   14000200d:	lea    rcx,[rip+0x2221c]        # 0x140024230
   140002014:	call   0x140002a10
   140002019:	mov    edi,r15d
   14000201c:	cmp    QWORD PTR [rax+0x10],rdi
   140002020:	sete   dil
   140002024:	cmp    QWORD PTR [rbp+0x17],0x8
   140002029:	jb     0x140002034
   14000202b:	mov    rcx,QWORD PTR [rbp-0x1]
   14000202f:	call   0x14000872c
   140002034:	mov    QWORD PTR [rbp+0x17],0x7
   14000203c:	mov    QWORD PTR [rbp+0xf],r15
   140002040:	mov    WORD PTR [rbp-0x1],r15w
   140002045:	cmp    QWORD PTR [rbp-0x11],0x8
   14000204a:	jb     0x140002055
   14000204c:	mov    rcx,QWORD PTR [rbp-0x29]
   140002050:	call   0x14000872c
   140002055:	mov    QWORD PTR [rbp-0x11],0x7
   14000205d:	mov    QWORD PTR [rbp-0x19],r15
   140002061:	mov    WORD PTR [rbp-0x29],r15w
   140002066:	cmp    QWORD PTR [rbp-0x39],0x8
   14000206b:	jb     0x140002076
   14000206d:	mov    rcx,QWORD PTR [rbp-0x51]
   140002071:	call   0x14000872c
   140002076:	mov    eax,edi
   140002078:	mov    rcx,QWORD PTR [rbp+0x27]
   14000207c:	xor    rcx,rsp
   14000207f:	call   0x140007d20
   140002084:	lea    r11,[rsp+0xc0]
   14000208c:	mov    rbx,QWORD PTR [r11+0x38]
   140002090:	mov    rsi,QWORD PTR [r11+0x40]
   140002094:	mov    rdi,QWORD PTR [r11+0x48]
   140002098:	mov    rsp,r11
   14000209b:	pop    r15
   14000209d:	pop    r14
   14000209f:	pop    r13
   1400020a1:	pop    r12
   1400020a3:	pop    rbp
   1400020a4:	ret    
   1400020a5:	int3   
   1400020a6:	int3   
   1400020a7:	int3   
   1400020a8:	int3   
   1400020a9:	int3   
   1400020aa:	int3   
   1400020ab:	int3   
   1400020ac:	int3   
   1400020ad:	int3   
   1400020ae:	int3   
   1400020af:	int3   
   1400020b0:	mov    r11,rsp
   1400020b3:	push   rdi
   1400020b4:	sub    rsp,0x70
   1400020b8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400020c1:	mov    QWORD PTR [r11+0x10],rbx
   1400020c5:	mov    rax,QWORD PTR [rip+0x1f344]        # 0x140021410
   1400020cc:	xor    rax,rsp
   1400020cf:	mov    QWORD PTR [rsp+0x60],rax
   1400020d4:	mov    rdx,rcx
   1400020d7:	mov    QWORD PTR [r11-0x28],0x7
   1400020df:	xor    ebx,ebx
   1400020e1:	mov    QWORD PTR [r11-0x30],rbx
   1400020e5:	mov    WORD PTR [rsp+0x38],bx
   1400020ea:	xor    eax,eax
   1400020ec:	or     rcx,0xffffffffffffffff
   1400020f0:	mov    rdi,rdx
   1400020f3:	repnz scas ax,WORD PTR es:[rdi]
   1400020f6:	not    rcx
   1400020f9:	lea    r8,[rcx-0x1]
   1400020fd:	lea    rcx,[r11-0x40]
   140002101:	call   0x140004030
   140002106:	nop
   140002107:	lea    rdx,[rsp+0x38]
   14000210c:	lea    rcx,[rsp+0x20]
   140002111:	call   0x1400049b0
   140002116:	mov    edi,ebx
   140002118:	mov    rax,QWORD PTR [rsp+0x20]
   14000211d:	mov    rcx,QWORD PTR [rsp+0x28]
   140002122:	cmp    rax,rcx
   140002125:	je     0x140002183
   140002127:	inc    rdi
   14000212a:	cmp    BYTE PTR [rax+0x69],0x0
   14000212e:	jne    0x14000217e
   140002130:	mov    rdx,QWORD PTR [rax+0x10]
   140002134:	cmp    BYTE PTR [rdx+0x69],0x0
   140002138:	jne    0x14000215e
   14000213a:	mov    rax,rdx
   14000213d:	mov    rdx,QWORD PTR [rdx]
   140002140:	cmp    BYTE PTR [rdx+0x69],0x0
   140002144:	jne    0x14000217e
   140002146:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002150:	mov    rax,rdx
   140002153:	mov    rdx,QWORD PTR [rdx]
   140002156:	cmp    BYTE PTR [rdx+0x69],0x0
   14000215a:	je     0x140002150
   14000215c:	jmp    0x14000217e
   14000215e:	mov    rdx,QWORD PTR [rax+0x8]
   140002162:	cmp    BYTE PTR [rdx+0x69],0x0
   140002166:	jne    0x14000217b
   140002168:	cmp    rax,QWORD PTR [rdx+0x10]
   14000216c:	jne    0x14000217b
   14000216e:	mov    rax,rdx
   140002171:	mov    rdx,QWORD PTR [rdx+0x8]
   140002175:	cmp    BYTE PTR [rdx+0x69],0x0
   140002179:	je     0x140002168
   14000217b:	mov    rax,rdx
   14000217e:	cmp    rax,rcx
   140002181:	jne    0x140002127
   140002183:	test   rdi,rdi
   140002186:	setne  bl
   140002189:	cmp    QWORD PTR [rsp+0x50],0x8
   14000218f:	jb     0x14000219b
   140002191:	mov    rcx,QWORD PTR [rsp+0x38]
   140002196:	call   0x14000872c
   14000219b:	mov    eax,ebx
   14000219d:	mov    rcx,QWORD PTR [rsp+0x60]
   1400021a2:	xor    rcx,rsp
   1400021a5:	call   0x140007d20
   1400021aa:	mov    rbx,QWORD PTR [rsp+0x88]
   1400021b2:	add    rsp,0x70
   1400021b6:	pop    rdi
   1400021b7:	ret    
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	rex push rdi
   1400021c2:	sub    rsp,0x60
   1400021c6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400021cf:	mov    QWORD PTR [rsp+0x78],rbx
   1400021d4:	mov    QWORD PTR [rsp+0x80],rsi
   1400021dc:	mov    rax,QWORD PTR [rip+0x1f22d]        # 0x140021410
   1400021e3:	xor    rax,rsp
   1400021e6:	mov    QWORD PTR [rsp+0x58],rax
   1400021eb:	mov    rsi,rcx
   1400021ee:	xor    ebx,ebx
   1400021f0:	mov    DWORD PTR [rsp+0x20],ebx
   1400021f4:	call   0x1400020b0
   1400021f9:	test   eax,eax
   1400021fb:	je     0x140002253
   1400021fd:	mov    QWORD PTR [rsp+0x48],0x7
   140002206:	mov    QWORD PTR [rsp+0x40],rbx
   14000220b:	mov    WORD PTR [rsp+0x30],bx
   140002210:	xor    eax,eax
   140002212:	or     rcx,0xffffffffffffffff
   140002216:	mov    rdi,rsi
   140002219:	repnz scas ax,WORD PTR es:[rdi]
   14000221c:	not    rcx
   14000221f:	lea    r8,[rcx-0x1]
   140002223:	mov    rdx,rsi
   140002226:	lea    rcx,[rsp+0x30]
   14000222b:	call   0x140004030
   140002230:	nop
   140002231:	mov    ebx,0x1
   140002236:	mov    DWORD PTR [rsp+0x20],ebx
   14000223a:	lea    rcx,[rsp+0x30]
   14000223f:	call   0x1400026b0
   140002244:	mov    rdi,rax
   140002247:	cmp    QWORD PTR [rax+0x18],0x8
   14000224c:	jb     0x14000225a
   14000224e:	mov    rdi,QWORD PTR [rax]
   140002251:	jmp    0x14000225a
   140002253:	lea    rdi,[rip+0x199b6]        # 0x14001bc10
   14000225a:	test   bl,0x1
   14000225d:	je     0x140002271
   14000225f:	cmp    QWORD PTR [rsp+0x48],0x8
   140002265:	jb     0x140002271
   140002267:	mov    rcx,QWORD PTR [rsp+0x30]
   14000226c:	call   0x14000872c
   140002271:	mov    rax,rdi
   140002274:	mov    rcx,QWORD PTR [rsp+0x58]
   140002279:	xor    rcx,rsp
   14000227c:	call   0x140007d20
   140002281:	mov    rbx,QWORD PTR [rsp+0x78]
   140002286:	mov    rsi,QWORD PTR [rsp+0x80]
   14000228e:	add    rsp,0x60
   140002292:	pop    rdi
   140002293:	ret    
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	rex push rbx
   1400022a2:	sub    rsp,0x20
   1400022a6:	mov    rbx,rcx
   1400022a9:	mov    rcx,QWORD PTR [rcx]
   1400022ac:	test   rcx,rcx
   1400022af:	je     0x1400022b6
   1400022b1:	call   0x140008584
   1400022b6:	mov    QWORD PTR [rbx],0x0
   1400022bd:	add    rsp,0x20
   1400022c1:	pop    rbx
   1400022c2:	ret    
   1400022c3:	int3   
   1400022c4:	int3   
   1400022c5:	int3   
   1400022c6:	int3   
   1400022c7:	int3   
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022d5:	push   rdi
   1400022d6:	sub    rsp,0x20
   1400022da:	mov    rax,QWORD PTR [rcx]
   1400022dd:	mov    rbx,rcx
   1400022e0:	xor    edi,edi
   1400022e2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400022e6:	test   BYTE PTR [rcx+rbx*1+0x10],0x6
   1400022eb:	jne    0x140002303
   1400022ed:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   1400022f2:	mov    rax,QWORD PTR [rcx]
   1400022f5:	call   QWORD PTR [rax+0x68]
   1400022f8:	mov    ecx,0x4
   1400022fd:	cmp    eax,0xffffffff
   140002300:	cmove  edi,ecx
   140002303:	mov    rax,QWORD PTR [rbx]
   140002306:	movsxd rcx,DWORD PTR [rax+0x4]
   14000230a:	add    rcx,rbx
   14000230d:	test   edi,edi
   14000230f:	je     0x140002328
   140002311:	mov    edx,DWORD PTR [rcx+0x10]
   140002314:	or     edx,edi
   140002316:	cmp    QWORD PTR [rcx+0x48],0x0
   14000231b:	jne    0x140002320
   14000231d:	or     edx,0x4
   140002320:	xor    r8d,r8d
   140002323:	call   0x140001730
   140002328:	mov    rax,rbx
   14000232b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002330:	add    rsp,0x20
   140002334:	pop    rdi
   140002335:	ret    
   140002336:	int3   
   140002337:	int3   
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	lea    rax,[rip+0x19979]        # 0x14001bcc0
   140002347:	mov    QWORD PTR [rcx],rax
   14000234a:	jmp    0x14000703c
   14000234f:	int3   
   140002350:	mov    rax,QWORD PTR [rcx-0x10]
   140002354:	movsxd rdx,DWORD PTR [rax+0x4]
   140002358:	lea    rax,[rip+0x19a09]        # 0x14001bd68
   14000235f:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   140002364:	ret    
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    QWORD PTR [rsp+0x20],rbx
   140002375:	push   rsi
   140002376:	sub    rsp,0x20
   14000237a:	mov    rbx,QWORD PTR [rcx+0x68]
   14000237e:	lea    rax,[rip+0x19963]        # 0x14001bce8
   140002385:	mov    rsi,rcx
   140002388:	mov    QWORD PTR [rcx],rax
   14000238b:	test   rbx,rbx
   14000238e:	je     0x1400023fd
   140002390:	mov    QWORD PTR [rsp+0x40],rdi
   140002395:	mov    rdi,QWORD PTR [rbx]
   140002398:	test   rdi,rdi
   14000239b:	je     0x1400023f0
   14000239d:	lea    rcx,[rsp+0x30]
   1400023a2:	xor    edx,edx
   1400023a4:	mov    QWORD PTR [rsp+0x38],rbp
   1400023a9:	call   0x1400076a4
   1400023ae:	mov    rax,QWORD PTR [rdi+0x8]
   1400023b2:	test   rax,rax
   1400023b5:	je     0x1400023c4
   1400023b7:	cmp    rax,0xffffffffffffffff
   1400023bb:	jae    0x1400023c4
   1400023bd:	dec    rax
   1400023c0:	mov    QWORD PTR [rdi+0x8],rax
   1400023c4:	xor    ebp,ebp
   1400023c6:	lea    rcx,[rsp+0x30]
   1400023cb:	cmp    QWORD PTR [rdi+0x8],rbp
   1400023cf:	cmove  rbp,rdi
   1400023d3:	call   0x1400076d4
   1400023d8:	test   rbp,rbp
   1400023db:	je     0x1400023eb
   1400023dd:	mov    rax,QWORD PTR [rbp+0x0]
   1400023e1:	mov    edx,0x1
   1400023e6:	mov    rcx,rbp
   1400023e9:	call   QWORD PTR [rax]
   1400023eb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400023f0:	mov    rcx,rbx
   1400023f3:	call   0x14000872c
   1400023f8:	mov    rdi,QWORD PTR [rsp+0x40]
   1400023fd:	lea    rcx,[rsi+0x8]
   140002401:	mov    rbx,QWORD PTR [rsp+0x48]
   140002406:	add    rsp,0x20
   14000240a:	pop    rsi
   14000240b:	jmp    0x140007724
   140002410:	add    rcx,0x8
   140002414:	jmp    0x140007744
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	add    rcx,0x8
   140002424:	jmp    0x14000774c
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	mov    eax,0xffff
   140002435:	ret    
   140002436:	int3   
   140002437:	int3   
   140002438:	int3   
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	rex push rbx
   140002442:	sub    rsp,0x20
   140002446:	mov    rax,QWORD PTR [rcx]
   140002449:	mov    rbx,rcx
   14000244c:	call   QWORD PTR [rax+0x30]
   14000244f:	mov    ecx,0xffff
   140002454:	cmp    cx,ax
   140002457:	jne    0x140002462
   140002459:	movzx  eax,cx
   14000245c:	add    rsp,0x20
   140002460:	pop    rbx
   140002461:	ret    
   140002462:	mov    rax,QWORD PTR [rbx+0x58]
   140002466:	dec    DWORD PTR [rax]
   140002468:	mov    rcx,QWORD PTR [rbx+0x40]
   14000246c:	mov    rdx,QWORD PTR [rcx]
   14000246f:	lea    rax,[rdx+0x2]
   140002473:	mov    QWORD PTR [rcx],rax
   140002476:	movzx  eax,WORD PTR [rdx]
   140002479:	add    rsp,0x20
   14000247d:	pop    rbx
   14000247e:	ret    
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x20],rbp
   140002485:	push   rsi
   140002486:	push   rdi
   140002487:	push   r12
   140002489:	sub    rsp,0x20
   14000248d:	xor    ebp,ebp
   14000248f:	mov    rdi,r8
   140002492:	mov    rsi,rdx
   140002495:	mov    r12,rcx
   140002498:	test   r8,r8
   14000249b:	jle    0x140002548
   1400024a1:	mov    QWORD PTR [rsp+0x48],r13
   1400024a6:	mov    QWORD PTR [rsp+0x50],r14
   1400024ab:	mov    r14d,0xffff
   1400024b1:	mov    QWORD PTR [rsp+0x40],rbx
   1400024b6:	mov    rcx,r12
   1400024b9:	call   0x140003390
   1400024be:	mov    r13,rax
   1400024c1:	test   rax,rax
   1400024c4:	jle    0x140002506
   1400024c6:	mov    rdx,QWORD PTR [r12+0x40]
   1400024cb:	cmp    rdi,rax
   1400024ce:	mov    rcx,rsi
   1400024d1:	mov    rdx,QWORD PTR [rdx]
   1400024d4:	cmovl  r13,rdi
   1400024d8:	lea    rbx,[r13+r13*1+0x0]
   1400024dd:	mov    r8,rbx
   1400024e0:	call   0x140008250
   1400024e5:	mov    rax,QWORD PTR [r12+0x58]
   1400024ea:	add    rsi,rbx
   1400024ed:	sub    DWORD PTR [rax],r13d
   1400024f0:	mov    rcx,QWORD PTR [r12+0x40]
   1400024f5:	movsxd rax,r13d
   1400024f8:	add    rax,rax
   1400024fb:	add    rbp,r13
   1400024fe:	sub    rdi,r13
   140002501:	add    QWORD PTR [rcx],rax
   140002504:	jmp    0x140002523
   140002506:	mov    rax,QWORD PTR [r12]
   14000250a:	mov    rcx,r12
   14000250d:	call   QWORD PTR [rax+0x38]
   140002510:	cmp    r14w,ax
   140002514:	je     0x140002528
   140002516:	mov    WORD PTR [rsi],ax
   140002519:	add    rsi,0x2
   14000251d:	inc    rbp
   140002520:	dec    rdi
   140002523:	test   rdi,rdi
   140002526:	jg     0x1400024b6
   140002528:	mov    rbx,QWORD PTR [rsp+0x40]
   14000252d:	mov    r13,QWORD PTR [rsp+0x48]
   140002532:	mov    r14,QWORD PTR [rsp+0x50]
   140002537:	mov    rax,rbp
   14000253a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000253f:	add    rsp,0x20
   140002543:	pop    r12
   140002545:	pop    rdi
   140002546:	pop    rsi
   140002547:	ret    
   140002548:	mov    rax,rbp
   14000254b:	mov    rbp,QWORD PTR [rsp+0x58]
   140002550:	add    rsp,0x20
   140002554:	pop    r12
   140002556:	pop    rdi
   140002557:	pop    rsi
   140002558:	ret    
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    QWORD PTR [rsp+0x20],rbp
   140002565:	push   rsi
   140002566:	push   rdi
   140002567:	push   r13
   140002569:	sub    rsp,0x20
   14000256d:	xor    esi,esi
   14000256f:	mov    rdi,r8
   140002572:	mov    rbp,rdx
   140002575:	mov    r13,rcx
   140002578:	test   r8,r8
   14000257b:	jle    0x140002626
   140002581:	mov    QWORD PTR [rsp+0x48],r12
   140002586:	mov    QWORD PTR [rsp+0x50],r14
   14000258b:	mov    r14d,0xffff
   140002591:	mov    QWORD PTR [rsp+0x40],rbx
   140002596:	mov    rcx,r13
   140002599:	call   0x1400033b0
   14000259e:	mov    r12,rax
   1400025a1:	test   rax,rax
   1400025a4:	jle    0x1400025e2
   1400025a6:	mov    rcx,QWORD PTR [r13+0x48]
   1400025aa:	cmp    rdi,rax
   1400025ad:	mov    rdx,rbp
   1400025b0:	mov    rcx,QWORD PTR [rcx]
   1400025b3:	cmovl  r12,rdi
   1400025b7:	lea    rbx,[r12+r12*1]
   1400025bb:	mov    r8,rbx
   1400025be:	call   0x140008250
   1400025c3:	mov    rax,QWORD PTR [r13+0x60]
   1400025c7:	add    rbp,rbx
   1400025ca:	sub    DWORD PTR [rax],r12d
   1400025cd:	mov    rcx,QWORD PTR [r13+0x48]
   1400025d1:	movsxd rax,r12d
   1400025d4:	add    rax,rax
   1400025d7:	add    rsi,r12
   1400025da:	sub    rdi,r12
   1400025dd:	add    QWORD PTR [rcx],rax
   1400025e0:	jmp    0x140002601
   1400025e2:	mov    r8,QWORD PTR [r13+0x0]
   1400025e6:	movzx  edx,WORD PTR [rbp+0x0]
   1400025ea:	mov    rcx,r13
   1400025ed:	call   QWORD PTR [r8+0x18]
   1400025f1:	cmp    r14w,ax
   1400025f5:	je     0x140002606
   1400025f7:	add    rbp,0x2
   1400025fb:	inc    rsi
   1400025fe:	dec    rdi
   140002601:	test   rdi,rdi
   140002604:	jg     0x140002596
   140002606:	mov    rbx,QWORD PTR [rsp+0x40]
   14000260b:	mov    r12,QWORD PTR [rsp+0x48]
   140002610:	mov    r14,QWORD PTR [rsp+0x50]
   140002615:	mov    rax,rsi
   140002618:	mov    rbp,QWORD PTR [rsp+0x58]
   14000261d:	add    rsp,0x20
   140002621:	pop    r13
   140002623:	pop    rdi
   140002624:	pop    rsi
   140002625:	ret    
   140002626:	mov    rax,rsi
   140002629:	mov    rbp,QWORD PTR [rsp+0x58]
   14000262e:	add    rsp,0x20
   140002632:	pop    r13
   140002634:	pop    rdi
   140002635:	pop    rsi
   140002636:	ret    
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rax,QWORD PTR [rip+0x15ee1]        # 0x140018528
   140002647:	mov    QWORD PTR [rdx],rax
   14000264a:	xor    eax,eax
   14000264c:	mov    QWORD PTR [rdx+0x8],rax
   140002650:	mov    DWORD PTR [rdx+0x10],eax
   140002653:	mov    rax,rdx
   140002656:	ret    
   140002657:	int3   
   140002658:	int3   
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	mov    rax,rcx
   140002663:	ret    
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	xor    eax,eax
   140002672:	ret    
   140002673:	int3   
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	rex push rbx
   140002682:	sub    rsp,0x20
   140002686:	cmp    QWORD PTR [rcx+0x18],0x8
   14000268b:	mov    rbx,rcx
   14000268e:	jb     0x140002698
   140002690:	mov    rcx,QWORD PTR [rcx]
   140002693:	call   0x14000872c
   140002698:	xor    eax,eax
   14000269a:	mov    QWORD PTR [rbx+0x18],0x7
   1400026a2:	mov    QWORD PTR [rbx+0x10],rax
   1400026a6:	mov    WORD PTR [rbx],ax
   1400026a9:	add    rsp,0x20
   1400026ad:	pop    rbx
   1400026ae:	ret    
   1400026af:	int3   
   1400026b0:	mov    rax,rsp
   1400026b3:	push   rbp
   1400026b4:	push   r12
   1400026b6:	push   r13
   1400026b8:	lea    rbp,[rax-0x5f]
   1400026bc:	sub    rsp,0xb0
   1400026c3:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   1400026cb:	mov    QWORD PTR [rax+0x10],rbx
   1400026cf:	mov    QWORD PTR [rax+0x18],rsi
   1400026d3:	mov    QWORD PTR [rax+0x20],rdi
   1400026d7:	mov    rax,QWORD PTR [rip+0x1ed32]        # 0x140021410
   1400026de:	xor    rax,rsp
   1400026e1:	mov    QWORD PTR [rbp+0x3f],rax
   1400026e5:	mov    rsi,rcx
   1400026e8:	call   0x140004c10
   1400026ed:	mov    rbx,rax
   1400026f0:	cmp    rax,QWORD PTR [rip+0x21b21]        # 0x140024218
   1400026f7:	je     0x14000270d
   1400026f9:	lea    rdx,[rax+0x18]
   1400026fd:	mov    rcx,rsi
   140002700:	call   0x1400057c0
   140002705:	test   eax,eax
   140002707:	jns    0x14000283a
   14000270d:	mov    QWORD PTR [rbp+0x2f],0x7
   140002715:	xor    r13d,r13d
   140002718:	mov    QWORD PTR [rbp+0x27],r13
   14000271c:	mov    WORD PTR [rbp+0x17],r13w
   140002721:	mov    QWORD PTR [rbp-0x21],0x7
   140002729:	mov    QWORD PTR [rbp-0x29],r13
   14000272d:	mov    WORD PTR [rbp-0x39],r13w
   140002732:	mov    r12,QWORD PTR [rsi+0x10]
   140002736:	or     r8,0xffffffffffffffff
   14000273a:	cmp    r12,r8
   14000273d:	cmova  r12,r8
   140002741:	lea    rax,[rbp-0x39]
   140002745:	mov    rdx,r12
   140002748:	lea    rcx,[rbp-0x39]
   14000274c:	cmp    rax,rsi
   14000274f:	jne    0x140002766
   140002751:	call   0x140004190
   140002756:	xor    r8d,r8d
   140002759:	xor    edx,edx
   14000275b:	lea    rcx,[rbp-0x39]
   14000275f:	call   0x140004190
   140002764:	jmp    0x1400027ad
   140002766:	call   0x140004570
   14000276b:	test   al,al
   14000276d:	je     0x1400027ad
   14000276f:	cmp    QWORD PTR [rsi+0x18],0x8
   140002774:	jb     0x140002779
   140002776:	mov    rsi,QWORD PTR [rsi]
   140002779:	lea    rcx,[rbp-0x39]
   14000277d:	cmp    QWORD PTR [rbp-0x21],0x8
   140002782:	cmovae rcx,QWORD PTR [rbp-0x39]
   140002787:	lea    rdi,[r12+r12*1]
   14000278b:	mov    r8,rdi
   14000278e:	mov    rdx,rsi
   140002791:	call   0x140008250
   140002796:	mov    QWORD PTR [rbp-0x29],r12
   14000279a:	lea    rax,[rbp-0x39]
   14000279e:	cmp    QWORD PTR [rbp-0x21],0x8
   1400027a3:	cmovae rax,QWORD PTR [rbp-0x39]
   1400027a8:	mov    WORD PTR [rdi+rax*1],r13w
   1400027ad:	mov    QWORD PTR [rbp+0x7],0x7
   1400027b5:	mov    QWORD PTR [rbp-0x1],r13
   1400027b9:	mov    WORD PTR [rbp-0x11],r13w
   1400027be:	lea    rdx,[rbp+0x17]
   1400027c2:	lea    rcx,[rbp-0x11]
   1400027c6:	call   0x140004d20
   1400027cb:	nop
   1400027cc:	lea    rcx,[rbp-0x39]
   1400027d0:	call   0x140005fa0
   1400027d5:	mov    r8,rax
   1400027d8:	mov    rdx,rbx
   1400027db:	lea    rcx,[rbp-0x49]
   1400027df:	call   0x140005850
   1400027e4:	mov    rbx,QWORD PTR [rbp-0x49]
   1400027e8:	cmp    QWORD PTR [rbp+0x7],0x8
   1400027ed:	jb     0x1400027f8
   1400027ef:	mov    rcx,QWORD PTR [rbp-0x11]
   1400027f3:	call   0x14000872c
   1400027f8:	mov    QWORD PTR [rbp+0x7],0x7
   140002800:	mov    QWORD PTR [rbp-0x1],r13
   140002804:	mov    WORD PTR [rbp-0x11],r13w
   140002809:	cmp    QWORD PTR [rbp-0x21],0x8
   14000280e:	jb     0x140002819
   140002810:	mov    rcx,QWORD PTR [rbp-0x39]
   140002814:	call   0x14000872c
   140002819:	mov    QWORD PTR [rbp-0x21],0x7
   140002821:	mov    QWORD PTR [rbp-0x29],r13
   140002825:	mov    WORD PTR [rbp-0x39],r13w
   14000282a:	cmp    QWORD PTR [rbp+0x2f],0x8
   14000282f:	jb     0x14000283a
   140002831:	mov    rcx,QWORD PTR [rbp+0x17]
   140002835:	call   0x14000872c
   14000283a:	lea    rax,[rbx+0x40]
   14000283e:	mov    rcx,QWORD PTR [rbp+0x3f]
   140002842:	xor    rcx,rsp
   140002845:	call   0x140007d20
   14000284a:	lea    r11,[rsp+0xb0]
   140002852:	mov    rbx,QWORD PTR [r11+0x28]
   140002856:	mov    rsi,QWORD PTR [r11+0x30]
   14000285a:	mov    rdi,QWORD PTR [r11+0x38]
   14000285e:	mov    rsp,r11
   140002861:	pop    r13
   140002863:	pop    r12
   140002865:	pop    rbp
   140002866:	ret    
   140002867:	int3   
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    QWORD PTR [rsp+0x8],rcx
   140002875:	push   rdi
   140002876:	sub    rsp,0x30
   14000287a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002883:	mov    QWORD PTR [rsp+0x50],rbx
   140002888:	mov    rdi,rcx
   14000288b:	mov    DWORD PTR [rsp+0x48],0x0
   140002893:	lea    rax,[rip+0x19586]        # 0x14001be20
   14000289a:	mov    QWORD PTR [rcx],rax
   14000289d:	lea    rax,[rip+0x19584]        # 0x14001be28
   1400028a4:	mov    QWORD PTR [rcx+0x10],rax
   1400028a8:	lea    rax,[rip+0x19421]        # 0x14001bcd0
   1400028af:	mov    QWORD PTR [rcx+0x98],rax
   1400028b6:	mov    DWORD PTR [rsp+0x48],0x1
   1400028be:	lea    rdx,[rcx+0x18]
   1400028c2:	call   0x140003d90
   1400028c7:	nop
   1400028c8:	mov    rax,QWORD PTR [rdi+0x10]
   1400028cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400028d0:	lea    rax,[rip+0x194a1]        # 0x14001bd78
   1400028d7:	mov    QWORD PTR [rcx+rdi*1+0x10],rax
   1400028dc:	mov    rax,QWORD PTR [rdi]
   1400028df:	movsxd rcx,DWORD PTR [rax+0x4]
   1400028e3:	lea    rax,[rip+0x1949e]        # 0x14001bd88
   1400028ea:	mov    QWORD PTR [rcx+rdi*1],rax
   1400028ee:	mov    rax,QWORD PTR [rdi]
   1400028f1:	movsxd rcx,DWORD PTR [rax+0x4]
   1400028f5:	lea    rax,[rip+0x1951c]        # 0x14001be18
   1400028fc:	mov    QWORD PTR [rcx+rdi*1],rax
   140002900:	lea    rcx,[rdi+0x18]
   140002904:	call   0x140003e30
   140002909:	nop
   14000290a:	lea    rax,[rip+0x19487]        # 0x14001bd98
   140002911:	mov    QWORD PTR [rdi+0x18],rax
   140002915:	mov    QWORD PTR [rdi+0x88],0x0
   140002920:	mov    DWORD PTR [rdi+0x90],0x0
   14000292a:	mov    rax,rdi
   14000292d:	mov    rbx,QWORD PTR [rsp+0x50]
   140002932:	add    rsp,0x30
   140002936:	pop    rdi
   140002937:	ret    
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	mov    QWORD PTR [rsp+0x8],rcx
   140002945:	push   rbx
   140002946:	sub    rsp,0x30
   14000294a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002953:	mov    rax,QWORD PTR [rcx-0x98]
   14000295a:	movsxd rdx,DWORD PTR [rax+0x4]
   14000295e:	lea    rax,[rip+0x194b3]        # 0x14001be18
   140002965:	mov    QWORD PTR [rdx+rcx*1-0x98],rax
   14000296d:	lea    rbx,[rcx-0x80]
   140002971:	lea    rax,[rip+0x19420]        # 0x14001bd98
   140002978:	mov    QWORD PTR [rbx],rax
   14000297b:	test   BYTE PTR [rbx+0x78],0x1
   14000297f:	je     0x14000298d
   140002981:	mov    rax,QWORD PTR [rbx+0x20]
   140002985:	mov    rcx,QWORD PTR [rax]
   140002988:	call   0x14000872c
   14000298d:	mov    rax,QWORD PTR [rbx+0x20]
   140002991:	xor    ecx,ecx
   140002993:	mov    QWORD PTR [rax],rcx
   140002996:	mov    rax,QWORD PTR [rbx+0x40]
   14000299a:	mov    QWORD PTR [rax],rcx
   14000299d:	mov    rax,QWORD PTR [rbx+0x58]
   1400029a1:	mov    DWORD PTR [rax],ecx
   1400029a3:	mov    rax,QWORD PTR [rbx+0x28]
   1400029a7:	mov    QWORD PTR [rax],rcx
   1400029aa:	mov    rax,QWORD PTR [rbx+0x48]
   1400029ae:	mov    QWORD PTR [rax],rcx
   1400029b1:	mov    rax,QWORD PTR [rbx+0x60]
   1400029b5:	mov    DWORD PTR [rax],ecx
   1400029b7:	mov    QWORD PTR [rbx+0x70],rcx
   1400029bb:	and    DWORD PTR [rbx+0x78],0xfffffffe
   1400029bf:	mov    rcx,rbx
   1400029c2:	call   0x140002370
   1400029c7:	nop
   1400029c8:	mov    rax,QWORD PTR [rbx-0x18]
   1400029cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400029d0:	lea    rax,[rip+0x193b1]        # 0x14001bd88
   1400029d7:	mov    QWORD PTR [rcx+rbx*1-0x18],rax
   1400029dc:	mov    rax,QWORD PTR [rbx-0x8]
   1400029e0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400029e4:	lea    rax,[rip+0x1938d]        # 0x14001bd78
   1400029eb:	mov    QWORD PTR [rcx+rbx*1-0x8],rax
   1400029f0:	mov    rax,QWORD PTR [rbx-0x18]
   1400029f4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400029f8:	lea    rax,[rip+0x19369]        # 0x14001bd68
   1400029ff:	mov    QWORD PTR [rcx+rbx*1-0x18],rax
   140002a04:	add    rsp,0x30
   140002a08:	pop    rbx
   140002a09:	ret    
   140002a0a:	int3   
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	rex push rbx
   140002a12:	sub    rsp,0x20
   140002a16:	add    rcx,0x18
   140002a1a:	mov    rbx,rdx
   140002a1d:	mov    DWORD PTR [rsp+0x30],0x0
   140002a25:	call   0x140003a30
   140002a2a:	mov    rax,rbx
   140002a2d:	add    rsp,0x20
   140002a31:	pop    rbx
   140002a32:	ret    
   140002a33:	int3   
   140002a34:	int3   
   140002a35:	int3   
   140002a36:	int3   
   140002a37:	int3   
   140002a38:	int3   
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	mov    rax,QWORD PTR [rcx-0x18]
   140002a44:	movsxd rdx,DWORD PTR [rax+0x4]
   140002a48:	lea    rax,[rip+0x19339]        # 0x14001bd88
   140002a4f:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140002a54:	mov    rax,QWORD PTR [rcx-0x8]
   140002a58:	movsxd rdx,DWORD PTR [rax+0x4]
   140002a5c:	lea    rax,[rip+0x19315]        # 0x14001bd78
   140002a63:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   140002a68:	mov    rax,QWORD PTR [rcx-0x18]
   140002a6c:	movsxd rdx,DWORD PTR [rax+0x4]
   140002a70:	lea    rax,[rip+0x192f1]        # 0x14001bd68
   140002a77:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140002a7c:	ret    
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	rex push rbx
   140002a82:	push   r12
   140002a84:	sub    rsp,0x28
   140002a88:	test   BYTE PTR [rcx+0x78],0x8
   140002a8c:	movzx  r12d,dx
   140002a90:	mov    rbx,rcx
   140002a93:	je     0x140002ac4
   140002a95:	mov    r10,QWORD PTR [rcx+0x48]
   140002a99:	mov    r8,QWORD PTR [r10]
   140002a9c:	test   r8,r8
   140002a9f:	je     0x140002ac4
   140002aa1:	mov    r9,QWORD PTR [rcx+0x70]
   140002aa5:	cmp    r8,r9
   140002aa8:	jae    0x140002ac4
   140002aaa:	mov    rax,QWORD PTR [rcx+0x60]
   140002aae:	movsxd rcx,DWORD PTR [rax]
   140002ab1:	mov    QWORD PTR [r10],r9
   140002ab4:	mov    rax,QWORD PTR [rbx+0x60]
   140002ab8:	lea    rdx,[r8+rcx*2]
   140002abc:	sub    rdx,r9
   140002abf:	sar    rdx,1
   140002ac2:	mov    DWORD PTR [rax],edx
   140002ac4:	mov    r10d,0xffff
   140002aca:	mov    QWORD PTR [rsp+0x40],rbp
   140002acf:	cmp    r10w,r12w
   140002ad3:	jne    0x140002ae7
   140002ad5:	xor    ebp,ebp
   140002ad7:	movzx  eax,bp
   140002ada:	mov    rbp,QWORD PTR [rsp+0x40]
   140002adf:	add    rsp,0x28
   140002ae3:	pop    r12
   140002ae5:	pop    rbx
   140002ae6:	ret    
   140002ae7:	mov    rdx,QWORD PTR [rbx+0x48]
   140002aeb:	mov    r9,QWORD PTR [rdx]
   140002aee:	test   r9,r9
   140002af1:	je     0x140002b29
   140002af3:	mov    r8,QWORD PTR [rbx+0x60]
   140002af7:	movsxd rax,DWORD PTR [r8]
   140002afa:	lea    rcx,[r9+rax*2]
   140002afe:	cmp    r9,rcx
   140002b01:	jae    0x140002b29
   140002b03:	dec    DWORD PTR [r8]
   140002b06:	mov    rcx,QWORD PTR [rbx+0x48]
   140002b0a:	mov    rdx,QWORD PTR [rcx]
   140002b0d:	lea    rax,[rdx+0x2]
   140002b11:	mov    QWORD PTR [rcx],rax
   140002b14:	mov    WORD PTR [rdx],r12w
   140002b18:	movzx  eax,r12w
   140002b1c:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b21:	add    rsp,0x28
   140002b25:	pop    r12
   140002b27:	pop    rbx
   140002b28:	ret    
   140002b29:	test   BYTE PTR [rbx+0x78],0x2
   140002b2d:	je     0x140002b40
   140002b2f:	movzx  eax,r10w
   140002b33:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b38:	add    rsp,0x28
   140002b3c:	pop    r12
   140002b3e:	pop    rbx
   140002b3f:	ret    
   140002b40:	xor    ebp,ebp
   140002b42:	mov    QWORD PTR [rsp+0x50],rdi
   140002b47:	test   r9,r9
   140002b4a:	jne    0x140002b50
   140002b4c:	mov    edi,ebp
   140002b4e:	jmp    0x140002b67
   140002b50:	mov    rax,QWORD PTR [rbx+0x60]
   140002b54:	movsxd rdi,DWORD PTR [rax]
   140002b57:	mov    rax,QWORD PTR [rbx+0x20]
   140002b5b:	add    rdi,rdi
   140002b5e:	sub    rdi,QWORD PTR [rax]
   140002b61:	add    rdi,r9
   140002b64:	sar    rdi,1
   140002b67:	mov    rax,rdi
   140002b6a:	shr    rax,1
   140002b6d:	cmp    rax,0x20
   140002b71:	jae    0x140002b7a
   140002b73:	mov    eax,0x20
   140002b78:	jmp    0x140002b80
   140002b7a:	test   rax,rax
   140002b7d:	je     0x140002b97
   140002b7f:	nop
   140002b80:	mov    ecx,0x7fffffff
   140002b85:	sub    rcx,rax
   140002b88:	cmp    rcx,rdi
   140002b8b:	jae    0x140002b92
   140002b8d:	shr    rax,1
   140002b90:	jne    0x140002b80
   140002b92:	test   rax,rax
   140002b95:	jne    0x140002bad
   140002b97:	movzx  eax,r10w
   140002b9b:	mov    rdi,QWORD PTR [rsp+0x50]
   140002ba0:	mov    rbp,QWORD PTR [rsp+0x40]
   140002ba5:	add    rsp,0x28
   140002ba9:	pop    r12
   140002bab:	pop    rbx
   140002bac:	ret    
   140002bad:	mov    QWORD PTR [rsp+0x48],rsi
   140002bb2:	mov    QWORD PTR [rsp+0x58],r13
   140002bb7:	mov    QWORD PTR [rsp+0x20],r14
   140002bbc:	lea    r14,[rax+rdi*1]
   140002bc0:	mov    rcx,r14
   140002bc3:	call   0x140003770
   140002bc8:	mov    rcx,QWORD PTR [rbx+0x20]
   140002bcc:	mov    r13,QWORD PTR [rcx]
   140002bcf:	mov    rsi,rax
   140002bd2:	test   rdi,rdi
   140002bd5:	je     0x140002beb
   140002bd7:	lea    r8,[rdi+rdi*1]
   140002bdb:	mov    rdx,r13
   140002bde:	mov    rcx,rax
   140002be1:	call   0x140008250
   140002be6:	test   rdi,rdi
   140002be9:	jne    0x140002c3e
   140002beb:	mov    rax,QWORD PTR [rbx+0x28]
   140002bef:	mov    QWORD PTR [rbx+0x70],rsi
   140002bf3:	lea    rcx,[r14+r14*1]
   140002bf7:	mov    QWORD PTR [rax],rsi
   140002bfa:	mov    rax,QWORD PTR [rbx+0x48]
   140002bfe:	sar    rcx,1
   140002c01:	mov    QWORD PTR [rax],rsi
   140002c04:	mov    rax,QWORD PTR [rbx+0x60]
   140002c08:	mov    DWORD PTR [rax],ecx
   140002c0a:	mov    rax,QWORD PTR [rbx+0x20]
   140002c0e:	test   BYTE PTR [rbx+0x78],0x4
   140002c12:	mov    QWORD PTR [rax],rsi
   140002c15:	mov    rax,QWORD PTR [rbx+0x40]
   140002c19:	je     0x140002c2c
   140002c1b:	mov    QWORD PTR [rax],rbp
   140002c1e:	mov    rax,QWORD PTR [rbx+0x58]
   140002c22:	sar    rsi,1
   140002c25:	mov    DWORD PTR [rax],esi
   140002c27:	jmp    0x140002ce5
   140002c2c:	mov    QWORD PTR [rax],rsi
   140002c2f:	mov    rax,QWORD PTR [rbx+0x58]
   140002c33:	mov    DWORD PTR [rax],0x1
   140002c39:	jmp    0x140002ce5
   140002c3e:	mov    rax,QWORD PTR [rbx+0x70]
   140002c42:	sub    rax,r13
   140002c45:	sar    rax,1
   140002c48:	lea    rax,[rsi+rax*2]
   140002c4c:	mov    QWORD PTR [rbx+0x70],rax
   140002c50:	mov    rax,QWORD PTR [rbx+0x48]
   140002c54:	mov    rcx,QWORD PTR [rax]
   140002c57:	sub    rcx,r13
   140002c5a:	sar    rcx,1
   140002c5d:	lea    rdx,[rsi+rcx*2]
   140002c61:	mov    rcx,QWORD PTR [rbx+0x28]
   140002c65:	mov    rax,QWORD PTR [rcx]
   140002c68:	sub    rax,r13
   140002c6b:	sar    rax,1
   140002c6e:	lea    rax,[rsi+rax*2]
   140002c72:	mov    QWORD PTR [rcx],rax
   140002c75:	mov    rax,QWORD PTR [rbx+0x48]
   140002c79:	lea    rcx,[r14+r14*1]
   140002c7d:	sub    rcx,rdx
   140002c80:	mov    QWORD PTR [rax],rdx
   140002c83:	mov    rax,QWORD PTR [rbx+0x60]
   140002c87:	add    rcx,rsi
   140002c8a:	sar    rcx,1
   140002c8d:	mov    DWORD PTR [rax],ecx
   140002c8f:	test   BYTE PTR [rbx+0x78],0x4
   140002c93:	je     0x140002cae
   140002c95:	mov    rax,QWORD PTR [rbx+0x20]
   140002c99:	mov    QWORD PTR [rax],rsi
   140002c9c:	mov    rax,QWORD PTR [rbx+0x40]
   140002ca0:	sar    rsi,1
   140002ca3:	mov    QWORD PTR [rax],rbp
   140002ca6:	mov    rax,QWORD PTR [rbx+0x58]
   140002caa:	mov    DWORD PTR [rax],esi
   140002cac:	jmp    0x140002ce5
   140002cae:	mov    rax,QWORD PTR [rbx+0x48]
   140002cb2:	mov    r8,QWORD PTR [rax]
   140002cb5:	mov    rax,QWORD PTR [rbx+0x40]
   140002cb9:	mov    rcx,QWORD PTR [rax]
   140002cbc:	mov    rax,QWORD PTR [rbx+0x20]
   140002cc0:	mov    QWORD PTR [rax],rsi
   140002cc3:	mov    rax,QWORD PTR [rbx+0x40]
   140002cc7:	sub    rcx,r13
   140002cca:	sar    rcx,1
   140002ccd:	lea    rdx,[rsi+rcx*2]
   140002cd1:	sub    r8,rdx
   140002cd4:	mov    QWORD PTR [rax],rdx
   140002cd7:	mov    rax,QWORD PTR [rbx+0x58]
   140002cdb:	add    r8,0x2
   140002cdf:	sar    r8,1
   140002ce2:	mov    DWORD PTR [rax],r8d
   140002ce5:	test   BYTE PTR [rbx+0x78],0x1
   140002ce9:	mov    r14,QWORD PTR [rsp+0x20]
   140002cee:	mov    rsi,QWORD PTR [rsp+0x48]
   140002cf3:	je     0x140002cfd
   140002cf5:	mov    rcx,r13
   140002cf8:	call   0x14000872c
   140002cfd:	mov    rax,QWORD PTR [rbx+0x60]
   140002d01:	or     DWORD PTR [rbx+0x78],0x1
   140002d05:	mov    r13,QWORD PTR [rsp+0x58]
   140002d0a:	dec    DWORD PTR [rax]
   140002d0c:	mov    rcx,QWORD PTR [rbx+0x48]
   140002d10:	mov    rdi,QWORD PTR [rsp+0x50]
   140002d15:	mov    rdx,QWORD PTR [rcx]
   140002d18:	mov    rbp,QWORD PTR [rsp+0x40]
   140002d1d:	lea    rax,[rdx+0x2]
   140002d21:	mov    QWORD PTR [rcx],rax
   140002d24:	mov    WORD PTR [rdx],r12w
   140002d28:	movzx  eax,r12w
   140002d2c:	add    rsp,0x28
   140002d30:	pop    r12
   140002d32:	pop    rbx
   140002d33:	ret    
   140002d34:	int3   
   140002d35:	int3   
   140002d36:	int3   
   140002d37:	int3   
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    rax,QWORD PTR [rcx+0x40]
   140002d44:	mov    r9d,0xffff
   140002d4a:	mov    r8,QWORD PTR [rax]
   140002d4d:	test   r8,r8
   140002d50:	je     0x140002d93
   140002d52:	mov    rax,QWORD PTR [rcx+0x20]
   140002d56:	cmp    r8,QWORD PTR [rax]
   140002d59:	jbe    0x140002d93
   140002d5b:	cmp    r9w,dx
   140002d5f:	je     0x140002d6e
   140002d61:	cmp    dx,WORD PTR [r8-0x2]
   140002d66:	je     0x140002d6e
   140002d68:	test   BYTE PTR [rcx+0x78],0x2
   140002d6c:	jne    0x140002d93
   140002d6e:	mov    rax,QWORD PTR [rcx+0x58]
   140002d72:	inc    DWORD PTR [rax]
   140002d74:	mov    rax,QWORD PTR [rcx+0x40]
   140002d78:	add    QWORD PTR [rax],0xfffffffffffffffe
   140002d7c:	cmp    r9w,dx
   140002d80:	je     0x140002d90
   140002d82:	mov    rax,QWORD PTR [rcx+0x40]
   140002d86:	mov    rcx,QWORD PTR [rax]
   140002d89:	movzx  eax,dx
   140002d8c:	mov    WORD PTR [rcx],dx
   140002d8f:	ret    
   140002d90:	xor    eax,eax
   140002d92:	ret    
   140002d93:	movzx  eax,r9w
   140002d97:	ret    
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	sub    rsp,0x8
   140002da4:	mov    r11,QWORD PTR [rcx+0x40]
   140002da8:	mov    r9,rcx
   140002dab:	mov    r10,QWORD PTR [r11]
   140002dae:	test   r10,r10
   140002db1:	jne    0x140002dbd
   140002db3:	mov    eax,0xffff
   140002db8:	add    rsp,0x8
   140002dbc:	ret    
   140002dbd:	mov    QWORD PTR [rsp],rbx
   140002dc1:	mov    rbx,QWORD PTR [rcx+0x58]
   140002dc5:	movsxd rcx,DWORD PTR [rbx]
   140002dc8:	lea    rdx,[r10+rcx*2]
   140002dcc:	cmp    r10,rdx
   140002dcf:	jae    0x140002dde
   140002dd1:	movzx  eax,WORD PTR [r10]
   140002dd5:	mov    rbx,QWORD PTR [rsp]
   140002dd9:	add    rsp,0x8
   140002ddd:	ret    
   140002dde:	test   BYTE PTR [r9+0x78],0x4
   140002de3:	jne    0x140002e25
   140002de5:	mov    rax,QWORD PTR [r9+0x48]
   140002de9:	mov    rcx,QWORD PTR [rax]
   140002dec:	test   rcx,rcx
   140002def:	je     0x140002e25
   140002df1:	cmp    rcx,r10
   140002df4:	ja     0x140002dfc
   140002df6:	cmp    QWORD PTR [r9+0x70],r10
   140002dfa:	jbe    0x140002e25
   140002dfc:	cmp    QWORD PTR [r9+0x70],rcx
   140002e00:	jae    0x140002e06
   140002e02:	mov    QWORD PTR [r9+0x70],rcx
   140002e06:	mov    rax,QWORD PTR [r9+0x70]
   140002e0a:	sub    rax,QWORD PTR [r11]
   140002e0d:	sar    rax,1
   140002e10:	mov    DWORD PTR [rbx],eax
   140002e12:	mov    rax,QWORD PTR [r9+0x40]
   140002e16:	mov    rbx,QWORD PTR [rsp]
   140002e1a:	mov    rcx,QWORD PTR [rax]
   140002e1d:	movzx  eax,WORD PTR [rcx]
   140002e20:	add    rsp,0x8
   140002e24:	ret    
   140002e25:	mov    eax,0xffff
   140002e2a:	mov    rbx,QWORD PTR [rsp]
   140002e2e:	add    rsp,0x8
   140002e32:	ret    
   140002e33:	int3   
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	rex push rbx
   140002e42:	mov    r10,r8
   140002e45:	mov    r8,QWORD PTR [rcx+0x48]
   140002e49:	mov    rbx,rdx
   140002e4c:	mov    rax,QWORD PTR [r8]
   140002e4f:	mov    r11,rcx
   140002e52:	test   rax,rax
   140002e55:	je     0x140002e61
   140002e57:	cmp    QWORD PTR [rcx+0x70],rax
   140002e5b:	jae    0x140002e61
   140002e5d:	mov    QWORD PTR [rcx+0x70],rax
   140002e61:	mov    edx,DWORD PTR [rsp+0x30]
   140002e65:	mov    QWORD PTR [rsp+0x10],rdi
   140002e6a:	test   dl,0x1
   140002e6d:	je     0x140002f48
   140002e73:	mov    rax,QWORD PTR [rcx+0x40]
   140002e77:	mov    rdi,QWORD PTR [rax]
   140002e7a:	test   rdi,rdi
   140002e7d:	je     0x140002f48
   140002e83:	mov    r8,QWORD PTR [rip+0x1569e]        # 0x140018528
   140002e8a:	cmp    r9d,0x2
   140002e8e:	jne    0x140002ea3
   140002e90:	mov    rax,QWORD PTR [rcx+0x20]
   140002e94:	mov    rcx,QWORD PTR [rcx+0x70]
   140002e98:	sub    rcx,QWORD PTR [rax]
   140002e9b:	sar    rcx,1
   140002e9e:	add    r10,rcx
   140002ea1:	jmp    0x140002ec8
   140002ea3:	cmp    r9d,0x1
   140002ea7:	jne    0x140002ec0
   140002ea9:	test   dl,0x2
   140002eac:	jne    0x140002ec5
   140002eae:	mov    rax,QWORD PTR [rcx+0x20]
   140002eb2:	mov    rcx,rdi
   140002eb5:	sub    rcx,QWORD PTR [rax]
   140002eb8:	sar    rcx,1
   140002ebb:	add    r10,rcx
   140002ebe:	jmp    0x140002ec8
   140002ec0:	test   r9d,r9d
   140002ec3:	je     0x140002ec8
   140002ec5:	mov    r10,r8
   140002ec8:	test   r10,r10
   140002ecb:	js     0x140002f40
   140002ecd:	mov    rax,QWORD PTR [r11+0x20]
   140002ed1:	mov    r9,QWORD PTR [rax]
   140002ed4:	mov    rax,QWORD PTR [r11+0x70]
   140002ed8:	sub    rax,r9
   140002edb:	sar    rax,1
   140002ede:	cmp    r10,rax
   140002ee1:	jg     0x140002f40
   140002ee3:	mov    rax,QWORD PTR [r11+0x58]
   140002ee7:	sub    r9,rdi
   140002eea:	sar    r9,1
   140002eed:	add    r9d,r10d
   140002ef0:	sub    DWORD PTR [rax],r9d
   140002ef3:	mov    rcx,QWORD PTR [r11+0x40]
   140002ef7:	movsxd rax,r9d
   140002efa:	add    rax,rax
   140002efd:	add    QWORD PTR [rcx],rax
   140002f00:	test   dl,0x2
   140002f03:	je     0x140002fe1
   140002f09:	mov    r9,QWORD PTR [r11+0x48]
   140002f0d:	mov    r8,QWORD PTR [r9]
   140002f10:	test   r8,r8
   140002f13:	je     0x140002fe1
   140002f19:	mov    rax,QWORD PTR [r11+0x40]
   140002f1d:	mov    rdx,QWORD PTR [rax]
   140002f20:	mov    rax,QWORD PTR [r11+0x60]
   140002f24:	movsxd rcx,DWORD PTR [rax]
   140002f27:	mov    QWORD PTR [r9],rdx
   140002f2a:	mov    rax,QWORD PTR [r11+0x60]
   140002f2e:	lea    r8,[r8+rcx*2]
   140002f32:	sub    r8,rdx
   140002f35:	sar    r8,1
   140002f38:	mov    DWORD PTR [rax],r8d
   140002f3b:	jmp    0x140002fe1
   140002f40:	mov    r10,r8
   140002f43:	jmp    0x140002fe1
   140002f48:	test   dl,0x2
   140002f4b:	je     0x140002fd6
   140002f51:	mov    r8,QWORD PTR [r8]
   140002f54:	test   r8,r8
   140002f57:	je     0x140002fd6
   140002f59:	mov    rdi,QWORD PTR [rip+0x155c8]        # 0x140018528
   140002f60:	cmp    r9d,0x2
   140002f64:	jne    0x140002f79
   140002f66:	mov    rax,QWORD PTR [rcx+0x20]
   140002f6a:	mov    rcx,QWORD PTR [rcx+0x70]
   140002f6e:	sub    rcx,QWORD PTR [rax]
   140002f71:	sar    rcx,1
   140002f74:	add    r10,rcx
   140002f77:	jmp    0x140002f98
   140002f79:	cmp    r9d,0x1
   140002f7d:	jne    0x140002f91
   140002f7f:	mov    rax,QWORD PTR [rcx+0x20]
   140002f83:	mov    rcx,r8
   140002f86:	sub    rcx,QWORD PTR [rax]
   140002f89:	sar    rcx,1
   140002f8c:	add    r10,rcx
   140002f8f:	jmp    0x140002f98
   140002f91:	test   r9d,r9d
   140002f94:	cmovne r10,rdi
   140002f98:	test   r10,r10
   140002f9b:	js     0x140002fd1
   140002f9d:	mov    rax,QWORD PTR [r11+0x20]
   140002fa1:	mov    rdx,QWORD PTR [rax]
   140002fa4:	mov    rax,QWORD PTR [r11+0x70]
   140002fa8:	sub    rax,rdx
   140002fab:	sar    rax,1
   140002fae:	cmp    r10,rax
   140002fb1:	jg     0x140002fd1
   140002fb3:	mov    rax,QWORD PTR [r11+0x60]
   140002fb7:	sub    rdx,r8
   140002fba:	sar    rdx,1
   140002fbd:	add    edx,r10d
   140002fc0:	sub    DWORD PTR [rax],edx
   140002fc2:	mov    rcx,QWORD PTR [r11+0x48]
   140002fc6:	movsxd rax,edx
   140002fc9:	add    rax,rax
   140002fcc:	add    QWORD PTR [rcx],rax
   140002fcf:	jmp    0x140002fe1
   140002fd1:	mov    r10,rdi
   140002fd4:	jmp    0x140002fe1
   140002fd6:	test   r10,r10
   140002fd9:	cmovne r10,QWORD PTR [rip+0x15547]        # 0x140018528
   140002fe1:	mov    rdi,QWORD PTR [rsp+0x10]
   140002fe6:	xor    eax,eax
   140002fe8:	mov    QWORD PTR [rbx],r10
   140002feb:	mov    QWORD PTR [rbx+0x8],rax
   140002fef:	mov    DWORD PTR [rbx+0x10],eax
   140002ff2:	mov    rax,rbx
   140002ff5:	pop    rbx
   140002ff6:	ret    
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	mov    QWORD PTR [rsp+0x8],rbx
   140003005:	movsxd r10,DWORD PTR [r8+0x8]
   140003009:	mov    ebx,r9d
   14000300c:	mov    r9,rdx
   14000300f:	mov    rdx,QWORD PTR [rcx+0x48]
   140003013:	add    r10,QWORD PTR [r8]
   140003016:	mov    r11,rcx
   140003019:	mov    rax,QWORD PTR [rdx]
   14000301c:	test   rax,rax
   14000301f:	je     0x14000302b
   140003021:	cmp    QWORD PTR [rcx+0x70],rax
   140003025:	jae    0x14000302b
   140003027:	mov    QWORD PTR [rcx+0x70],rax
   14000302b:	mov    rcx,QWORD PTR [rip+0x154f6]        # 0x140018528
   140003032:	cmp    r10,rcx
   140003035:	je     0x14000310d
   14000303b:	test   bl,0x1
   14000303e:	je     0x1400030c4
   140003044:	mov    rax,QWORD PTR [r11+0x40]
   140003048:	mov    r8,QWORD PTR [rax]
   14000304b:	test   r8,r8
   14000304e:	je     0x1400030c4
   140003050:	test   r10,r10
   140003053:	js     0x14000310a
   140003059:	mov    rax,QWORD PTR [r11+0x20]
   14000305d:	mov    rdx,QWORD PTR [rax]
   140003060:	mov    rax,QWORD PTR [r11+0x70]
   140003064:	sub    rax,rdx
   140003067:	sar    rax,1
   14000306a:	cmp    r10,rax
   14000306d:	jg     0x14000310a
   140003073:	mov    rax,QWORD PTR [r11+0x58]
   140003077:	sub    rdx,r8
   14000307a:	sar    rdx,1
   14000307d:	add    edx,r10d
   140003080:	sub    DWORD PTR [rax],edx
   140003082:	mov    rcx,QWORD PTR [r11+0x40]
   140003086:	movsxd rax,edx
   140003089:	add    rax,rax
   14000308c:	add    QWORD PTR [rcx],rax
   14000308f:	test   bl,0x2
   140003092:	je     0x14000310d
   140003094:	mov    rbx,QWORD PTR [r11+0x48]
   140003098:	mov    r8,QWORD PTR [rbx]
   14000309b:	test   r8,r8
   14000309e:	je     0x14000310d
   1400030a0:	mov    rax,QWORD PTR [r11+0x40]
   1400030a4:	mov    rdx,QWORD PTR [rax]
   1400030a7:	mov    rax,QWORD PTR [r11+0x60]
   1400030ab:	movsxd rcx,DWORD PTR [rax]
   1400030ae:	mov    QWORD PTR [rbx],rdx
   1400030b1:	mov    rax,QWORD PTR [r11+0x60]
   1400030b5:	lea    r8,[r8+rcx*2]
   1400030b9:	sub    r8,rdx
   1400030bc:	sar    r8,1
   1400030bf:	mov    DWORD PTR [rax],r8d
   1400030c2:	jmp    0x14000310d
   1400030c4:	test   bl,0x2
   1400030c7:	je     0x14000310a
   1400030c9:	mov    r8,QWORD PTR [rdx]
   1400030cc:	test   r8,r8
   1400030cf:	je     0x14000310a
   1400030d1:	test   r10,r10
   1400030d4:	js     0x14000310a
   1400030d6:	mov    rax,QWORD PTR [r11+0x20]
   1400030da:	mov    rdx,QWORD PTR [rax]
   1400030dd:	mov    rax,QWORD PTR [r11+0x70]
   1400030e1:	sub    rax,rdx
   1400030e4:	sar    rax,1
   1400030e7:	cmp    r10,rax
   1400030ea:	jg     0x14000310a
   1400030ec:	mov    rax,QWORD PTR [r11+0x60]
   1400030f0:	sub    rdx,r8
   1400030f3:	sar    rdx,1
   1400030f6:	add    edx,r10d
   1400030f9:	sub    DWORD PTR [rax],edx
   1400030fb:	mov    rcx,QWORD PTR [r11+0x48]
   1400030ff:	movsxd rax,edx
   140003102:	add    rax,rax
   140003105:	add    QWORD PTR [rcx],rax
   140003108:	jmp    0x14000310d
   14000310a:	mov    r10,rcx
   14000310d:	mov    rbx,QWORD PTR [rsp+0x8]
   140003112:	xor    eax,eax
   140003114:	mov    QWORD PTR [r9],r10
   140003117:	mov    QWORD PTR [r9+0x8],rax
   14000311b:	mov    DWORD PTR [r9+0x10],eax
   14000311f:	mov    rax,r9
   140003122:	ret    
   140003123:	int3   
   140003124:	int3   
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x8],rbx
   140003135:	push   rdi
   140003136:	sub    rsp,0x20
   14000313a:	lea    rdi,[rcx-0x8]
   14000313e:	lea    rax,[rip+0x18c33]        # 0x14001bd78
   140003145:	mov    ebx,edx
   140003147:	mov    r8,QWORD PTR [rdi]
   14000314a:	lea    rcx,[rdi+0x8]
   14000314e:	movsxd r9,DWORD PTR [r8+0x4]
   140003152:	mov    QWORD PTR [r9+rcx*1-0x8],rax
   140003157:	lea    rax,[rip+0x18b62]        # 0x14001bcc0
   14000315e:	mov    QWORD PTR [rcx],rax
   140003161:	call   0x14000703c
   140003166:	test   bl,0x1
   140003169:	je     0x140003173
   14000316b:	mov    rcx,rdi
   14000316e:	call   0x14000872c
   140003173:	mov    rax,rdi
   140003176:	mov    rbx,QWORD PTR [rsp+0x30]
   14000317b:	add    rsp,0x20
   14000317f:	pop    rdi
   140003180:	ret    
   140003181:	int3   
   140003182:	int3   
   140003183:	int3   
   140003184:	int3   
   140003185:	int3   
   140003186:	int3   
   140003187:	int3   
   140003188:	int3   
   140003189:	int3   
   14000318a:	int3   
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	mov    QWORD PTR [rsp+0x8],rbx
   140003195:	push   rdi
   140003196:	sub    rsp,0x20
   14000319a:	lea    rdi,[rcx-0x10]
   14000319e:	lea    rax,[rip+0x18bc3]        # 0x14001bd68
   1400031a5:	mov    ebx,edx
   1400031a7:	mov    r8,QWORD PTR [rdi]
   1400031aa:	lea    rcx,[rdi+0x10]
   1400031ae:	movsxd r9,DWORD PTR [r8+0x4]
   1400031b2:	mov    QWORD PTR [r9+rcx*1-0x10],rax
   1400031b7:	lea    rax,[rip+0x18b02]        # 0x14001bcc0
   1400031be:	mov    QWORD PTR [rcx],rax
   1400031c1:	call   0x14000703c
   1400031c6:	test   bl,0x1
   1400031c9:	je     0x1400031d3
   1400031cb:	mov    rcx,rdi
   1400031ce:	call   0x14000872c
   1400031d3:	mov    rax,rdi
   1400031d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031db:	add    rsp,0x20
   1400031df:	pop    rdi
   1400031e0:	ret    
   1400031e1:	int3   
   1400031e2:	int3   
   1400031e3:	int3   
   1400031e4:	int3   
   1400031e5:	int3   
   1400031e6:	int3   
   1400031e7:	int3   
   1400031e8:	int3   
   1400031e9:	int3   
   1400031ea:	int3   
   1400031eb:	int3   
   1400031ec:	int3   
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031f5:	push   rdi
   1400031f6:	sub    rsp,0x20
   1400031fa:	mov    ebx,edx
   1400031fc:	mov    rdi,rcx
   1400031ff:	call   0x140002370
   140003204:	test   bl,0x1
   140003207:	je     0x140003211
   140003209:	mov    rcx,rdi
   14000320c:	call   0x14000872c
   140003211:	mov    rax,rdi
   140003214:	mov    rbx,QWORD PTR [rsp+0x30]
   140003219:	add    rsp,0x20
   14000321d:	pop    rdi
   14000321e:	ret    
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x8],rbx
   140003225:	mov    QWORD PTR [rsp+0x10],rsi
   14000322a:	push   rdi
   14000322b:	sub    rsp,0x20
   14000322f:	lea    rsi,[rcx-0x98]
   140003236:	mov    edi,edx
   140003238:	lea    rcx,[rsi+0x98]
   14000323f:	call   0x140002940
   140003244:	lea    rax,[rip+0x18a75]        # 0x14001bcc0
   14000324b:	lea    rcx,[rsi+0x98]
   140003252:	mov    QWORD PTR [rsi+0x98],rax
   140003259:	call   0x14000703c
   14000325e:	test   dil,0x1
   140003262:	je     0x14000326c
   140003264:	mov    rcx,rsi
   140003267:	call   0x14000872c
   14000326c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003271:	mov    rax,rsi
   140003274:	mov    rsi,QWORD PTR [rsp+0x38]
   140003279:	add    rsp,0x20
   14000327d:	pop    rdi
   14000327e:	ret    
   14000327f:	int3   
   140003280:	mov    QWORD PTR [rsp+0x8],rbx
   140003285:	push   rdi
   140003286:	sub    rsp,0x20
   14000328a:	lea    rdi,[rcx-0x18]
   14000328e:	mov    ebx,edx
   140003290:	mov    rax,QWORD PTR [rdi]
   140003293:	lea    rcx,[rdi+0x18]
   140003297:	movsxd r8,DWORD PTR [rax+0x4]
   14000329b:	lea    rax,[rip+0x18ae6]        # 0x14001bd88
   1400032a2:	mov    QWORD PTR [r8+rcx*1-0x18],rax
   1400032a7:	mov    rax,QWORD PTR [rcx-0x8]
   1400032ab:	movsxd r8,DWORD PTR [rax+0x4]
   1400032af:	lea    rax,[rip+0x18ac2]        # 0x14001bd78
   1400032b6:	mov    QWORD PTR [r8+rcx*1-0x8],rax
   1400032bb:	mov    rdx,QWORD PTR [rcx-0x18]
   1400032bf:	lea    rax,[rip+0x18aa2]        # 0x14001bd68
   1400032c6:	movsxd r8,DWORD PTR [rdx+0x4]
   1400032ca:	mov    QWORD PTR [r8+rcx*1-0x18],rax
   1400032cf:	lea    rax,[rip+0x189ea]        # 0x14001bcc0
   1400032d6:	mov    QWORD PTR [rcx],rax
   1400032d9:	call   0x14000703c
   1400032de:	test   bl,0x1
   1400032e1:	je     0x1400032eb
   1400032e3:	mov    rcx,rdi
   1400032e6:	call   0x14000872c
   1400032eb:	mov    rax,rdi
   1400032ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032f3:	add    rsp,0x20
   1400032f7:	pop    rdi
   1400032f8:	ret    
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	mov    QWORD PTR [rsp+0x8],rbx
   140003305:	push   rdi
   140003306:	sub    rsp,0x20
   14000330a:	test   BYTE PTR [rcx+0x78],0x1
   14000330e:	lea    rax,[rip+0x18a83]        # 0x14001bd98
   140003315:	mov    edi,edx
   140003317:	mov    QWORD PTR [rcx],rax
   14000331a:	mov    rbx,rcx
   14000331d:	je     0x14000332b
   14000331f:	mov    rcx,QWORD PTR [rcx+0x20]
   140003323:	mov    rcx,QWORD PTR [rcx]
   140003326:	call   0x14000872c
   14000332b:	mov    rax,QWORD PTR [rbx+0x20]
   14000332f:	xor    ecx,ecx
   140003331:	mov    QWORD PTR [rax],rcx
   140003334:	mov    rax,QWORD PTR [rbx+0x40]
   140003338:	mov    QWORD PTR [rax],rcx
   14000333b:	mov    rax,QWORD PTR [rbx+0x58]
   14000333f:	mov    DWORD PTR [rax],ecx
   140003341:	mov    rax,QWORD PTR [rbx+0x28]
   140003345:	mov    QWORD PTR [rax],rcx
   140003348:	mov    rax,QWORD PTR [rbx+0x48]
   14000334c:	mov    QWORD PTR [rax],rcx
   14000334f:	mov    rax,QWORD PTR [rbx+0x60]
   140003353:	mov    DWORD PTR [rax],ecx
   140003355:	and    DWORD PTR [rbx+0x78],0xfffffffe
   140003359:	mov    QWORD PTR [rbx+0x70],rcx
   14000335d:	mov    rcx,rbx
   140003360:	call   0x140002370
   140003365:	test   dil,0x1
   140003369:	je     0x140003373
   14000336b:	mov    rcx,rbx
   14000336e:	call   0x14000872c
   140003373:	mov    rax,rbx
   140003376:	mov    rbx,QWORD PTR [rsp+0x30]
   14000337b:	add    rsp,0x20
   14000337f:	pop    rdi
   140003380:	ret    
   140003381:	int3   
   140003382:	int3   
   140003383:	int3   
   140003384:	int3   
   140003385:	int3   
   140003386:	int3   
   140003387:	int3   
   140003388:	int3   
   140003389:	int3   
   14000338a:	int3   
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    rax,QWORD PTR [rcx+0x40]
   140003394:	cmp    QWORD PTR [rax],0x0
   140003398:	je     0x1400033a2
   14000339a:	mov    rax,QWORD PTR [rcx+0x58]
   14000339e:	movsxd rax,DWORD PTR [rax]
   1400033a1:	ret    
   1400033a2:	xor    eax,eax
   1400033a4:	cdqe   
   1400033a6:	ret    
   1400033a7:	int3   
   1400033a8:	int3   
   1400033a9:	int3   
   1400033aa:	int3   
   1400033ab:	int3   
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	mov    rax,QWORD PTR [rcx+0x48]
   1400033b4:	cmp    QWORD PTR [rax],0x0
   1400033b8:	je     0x1400033c2
   1400033ba:	mov    rax,QWORD PTR [rcx+0x60]
   1400033be:	movsxd rax,DWORD PTR [rax]
   1400033c1:	ret    
   1400033c2:	xor    eax,eax
   1400033c4:	cdqe   
   1400033c6:	ret    
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400033da:	mov    QWORD PTR [rsp+0x20],rdi
   1400033df:	push   r12
   1400033e1:	sub    rsp,0x20
   1400033e5:	mov    rsi,QWORD PTR [rdx+0x10]
   1400033e9:	mov    r12,r8
   1400033ec:	mov    rdi,rdx
   1400033ef:	mov    rbx,rcx
   1400033f2:	cmp    rsi,r8
   1400033f5:	jae    0x140003404
   1400033f7:	lea    rcx,[rip+0x1884a]        # 0x14001bc48
   1400033fe:	call   0x140007590
   140003403:	int3   
   140003404:	sub    rsi,r8
   140003407:	cmp    r9,rsi
   14000340a:	cmovb  rsi,r9
   14000340e:	cmp    rcx,rdx
   140003411:	jne    0x14000342f
   140003413:	lea    rdx,[rsi+r8*1]
   140003417:	or     r8,0xffffffffffffffff
   14000341b:	call   0x140004190
   140003420:	mov    r8,r12
   140003423:	xor    edx,edx
   140003425:	mov    rcx,rbx
   140003428:	call   0x140004190
   14000342d:	jmp    0x140003487
   14000342f:	mov    rdx,rsi
   140003432:	call   0x140004570
   140003437:	test   al,al
   140003439:	je     0x140003487
   14000343b:	cmp    QWORD PTR [rdi+0x18],0x8
   140003440:	mov    QWORD PTR [rsp+0x30],rbp
   140003445:	jb     0x14000344a
   140003447:	mov    rdi,QWORD PTR [rdi]
   14000344a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000344f:	jb     0x140003456
   140003451:	mov    rcx,QWORD PTR [rbx]
   140003454:	jmp    0x140003459
   140003456:	mov    rcx,rbx
   140003459:	lea    rbp,[rsi+rsi*1]
   14000345d:	lea    rdx,[rdi+r12*2]
   140003461:	mov    r8,rbp
   140003464:	call   0x140008250
   140003469:	cmp    QWORD PTR [rbx+0x18],0x8
   14000346e:	mov    QWORD PTR [rbx+0x10],rsi
   140003472:	jb     0x140003479
   140003474:	mov    rax,QWORD PTR [rbx]
   140003477:	jmp    0x14000347c
   140003479:	mov    rax,rbx
   14000347c:	xor    ecx,ecx
   14000347e:	mov    WORD PTR [rax+rbp*1],cx
   140003482:	mov    rbp,QWORD PTR [rsp+0x30]
   140003487:	mov    rsi,QWORD PTR [rsp+0x40]
   14000348c:	mov    rdi,QWORD PTR [rsp+0x48]
   140003491:	mov    rax,rbx
   140003494:	mov    rbx,QWORD PTR [rsp+0x38]
   140003499:	add    rsp,0x20
   14000349d:	pop    r12
   14000349f:	ret    
   1400034a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400034a5:	mov    QWORD PTR [rsp+0x20],rsi
   1400034aa:	push   rdi
   1400034ab:	push   r12
   1400034ad:	push   r14
   1400034af:	sub    rsp,0x30
   1400034b3:	mov    rsi,r9
   1400034b6:	mov    r12,r8
   1400034b9:	mov    r14,rdx
   1400034bc:	mov    rbx,rcx
   1400034bf:	mov    edi,0x3
   1400034c4:	test   r8,r8
   1400034c7:	je     0x140003522
   1400034c9:	mov    r10,QWORD PTR [rcx+0x18]
   1400034cd:	cmp    r10,0x8
   1400034d1:	jb     0x1400034d8
   1400034d3:	mov    rax,QWORD PTR [rcx]
   1400034d6:	jmp    0x1400034db
   1400034d8:	mov    rax,rcx
   1400034db:	cmp    r8,rax
   1400034de:	jb     0x140003522
   1400034e0:	cmp    r10,0x8
   1400034e4:	jb     0x1400034e9
   1400034e6:	mov    rcx,QWORD PTR [rcx]
   1400034e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400034ed:	lea    rcx,[rcx+rax*2]
   1400034f1:	cmp    rcx,r8
   1400034f4:	jbe    0x140003522
   1400034f6:	cmp    r10,0x8
   1400034fa:	jb     0x140003501
   1400034fc:	mov    rax,QWORD PTR [rbx]
   1400034ff:	jmp    0x140003504
   140003501:	mov    rax,rbx
   140003504:	sub    r12,rax
   140003507:	mov    QWORD PTR [rsp+0x20],r9
   14000350c:	mov    r8,rbx
   14000350f:	sar    r12,1
   140003512:	mov    rcx,rbx
   140003515:	mov    r9,r12
   140003518:	call   0x140004230
   14000351d:	jmp    0x140003658
   140003522:	mov    rcx,QWORD PTR [rbx+0x10]
   140003526:	cmp    rcx,rdx
   140003529:	jae    0x140003538
   14000352b:	lea    rcx,[rip+0x18716]        # 0x14001bc48
   140003532:	call   0x140007590
   140003537:	int3   
   140003538:	mov    QWORD PTR [rsp+0x58],r13
   14000353d:	mov    r13,rcx
   140003540:	sub    r13,rdx
   140003543:	cmp    r13,rdi
   140003546:	cmovb  rdi,r13
   14000354a:	or     rax,0xffffffffffffffff
   14000354e:	sub    rax,r9
   140003551:	sub    rcx,rdi
   140003554:	cmp    rax,rcx
   140003557:	ja     0x140003566
   140003559:	lea    rcx,[rip+0x18700]        # 0x14001bc60
   140003560:	call   0x140007534
   140003565:	int3   
   140003566:	sub    r13,rdi
   140003569:	cmp    r9,rdi
   14000356c:	jae    0x1400035a8
   14000356e:	mov    rax,QWORD PTR [rbx+0x18]
   140003572:	cmp    rax,0x8
   140003576:	jb     0x14000357d
   140003578:	mov    rdx,QWORD PTR [rbx]
   14000357b:	jmp    0x140003580
   14000357d:	mov    rdx,rbx
   140003580:	cmp    rax,0x8
   140003584:	jb     0x14000358b
   140003586:	mov    rcx,QWORD PTR [rbx]
   140003589:	jmp    0x14000358e
   14000358b:	mov    rcx,rbx
   14000358e:	lea    rax,[r14+rdi*1]
   140003592:	lea    r8,[r13+r13*1+0x0]
   140003597:	lea    rdx,[rdx+rax*2]
   14000359b:	lea    rax,[r14+r9*1]
   14000359f:	lea    rcx,[rcx+rax*2]
   1400035a3:	call   0x140008250
   1400035a8:	test   rsi,rsi
   1400035ab:	jne    0x1400035b6
   1400035ad:	test   rdi,rdi
   1400035b0:	je     0x140003650
   1400035b6:	mov    QWORD PTR [rsp+0x50],rbp
   1400035bb:	mov    rbp,rsi
   1400035be:	mov    rcx,rbx
   1400035c1:	sub    rbp,rdi
   1400035c4:	add    rbp,QWORD PTR [rbx+0x10]
   1400035c8:	mov    rdx,rbp
   1400035cb:	call   0x140004570
   1400035d0:	test   al,al
   1400035d2:	je     0x14000364b
   1400035d4:	cmp    rdi,rsi
   1400035d7:	jae    0x140003613
   1400035d9:	mov    rax,QWORD PTR [rbx+0x18]
   1400035dd:	cmp    rax,0x8
   1400035e1:	jb     0x1400035e8
   1400035e3:	mov    rdx,QWORD PTR [rbx]
   1400035e6:	jmp    0x1400035eb
   1400035e8:	mov    rdx,rbx
   1400035eb:	cmp    rax,0x8
   1400035ef:	jb     0x1400035f6
   1400035f1:	mov    rcx,QWORD PTR [rbx]
   1400035f4:	jmp    0x1400035f9
   1400035f6:	mov    rcx,rbx
   1400035f9:	lea    rax,[r14+rdi*1]
   1400035fd:	lea    r8,[r13+r13*1+0x0]
   140003602:	lea    rdx,[rdx+rax*2]
   140003606:	lea    rax,[r14+rsi*1]
   14000360a:	lea    rcx,[rcx+rax*2]
   14000360e:	call   0x140008250
   140003613:	cmp    QWORD PTR [rbx+0x18],0x8
   140003618:	jb     0x14000361f
   14000361a:	mov    rax,QWORD PTR [rbx]
   14000361d:	jmp    0x140003622
   14000361f:	mov    rax,rbx
   140003622:	lea    r8,[rsi+rsi*1]
   140003626:	lea    rcx,[rax+r14*2]
   14000362a:	mov    rdx,r12
   14000362d:	call   0x140008250
   140003632:	cmp    QWORD PTR [rbx+0x18],0x8
   140003637:	mov    QWORD PTR [rbx+0x10],rbp
   14000363b:	jb     0x140003642
   14000363d:	mov    rax,QWORD PTR [rbx]
   140003640:	jmp    0x140003645
   140003642:	mov    rax,rbx
   140003645:	xor    ecx,ecx
   140003647:	mov    WORD PTR [rax+rbp*2],cx
   14000364b:	mov    rbp,QWORD PTR [rsp+0x50]
   140003650:	mov    r13,QWORD PTR [rsp+0x58]
   140003655:	mov    rax,rbx
   140003658:	mov    rbx,QWORD PTR [rsp+0x60]
   14000365d:	mov    rsi,QWORD PTR [rsp+0x68]
   140003662:	add    rsp,0x30
   140003666:	pop    r14
   140003668:	pop    r12
   14000366a:	pop    rdi
   14000366b:	ret    
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	mov    QWORD PTR [rsp+0x18],rbx
   140003675:	push   rsi
   140003676:	mov    rbx,r8
   140003679:	mov    rsi,rdx
   14000367c:	mov    r11,rcx
   14000367f:	test   r8,r8
   140003682:	jne    0x14000368d
   140003684:	xor    eax,eax
   140003686:	mov    rbx,QWORD PTR [rsp+0x20]
   14000368b:	pop    rsi
   14000368c:	ret    
   14000368d:	mov    r10,QWORD PTR [rcx+0x10]
   140003691:	mov    QWORD PTR [rsp+0x10],rdi
   140003696:	mov    QWORD PTR [rsp+0x18],r12
   14000369b:	or     r12,0xffffffffffffffff
   14000369f:	test   r10,r10
   1400036a2:	je     0x1400036df
   1400036a4:	cmp    rbx,r10
   1400036a7:	ja     0x1400036df
   1400036a9:	mov    eax,0x1
   1400036ae:	sub    rax,rbx
   1400036b1:	add    r10,rax
   1400036b4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400036b9:	jb     0x1400036c0
   1400036bb:	mov    rdi,QWORD PTR [rcx]
   1400036be:	jmp    0x1400036c3
   1400036c0:	mov    rdi,rcx
   1400036c3:	mov    rax,r10
   1400036c6:	mov    rdx,rdi
   1400036c9:	test   r10,r10
   1400036cc:	je     0x1400036df
   1400036ce:	movzx  ecx,WORD PTR [rsi]
   1400036d1:	cmp    WORD PTR [rdx],cx
   1400036d4:	je     0x1400036f3
   1400036d6:	add    rdx,0x2
   1400036da:	dec    rax
   1400036dd:	jne    0x1400036d1
   1400036df:	mov    rdi,QWORD PTR [rsp+0x10]
   1400036e4:	mov    rax,r12
   1400036e7:	mov    r12,QWORD PTR [rsp+0x18]
   1400036ec:	mov    rbx,QWORD PTR [rsp+0x20]
   1400036f1:	pop    rsi
   1400036f2:	ret    
   1400036f3:	test   rdx,rdx
   1400036f6:	je     0x1400036df
   1400036f8:	mov    rcx,rbx
   1400036fb:	mov    r8,rsi
   1400036fe:	mov    r9,rdx
   140003701:	test   rbx,rbx
   140003704:	je     0x14000371d
   140003706:	movzx  eax,WORD PTR [r8]
   14000370a:	cmp    WORD PTR [r9],ax
   14000370e:	jne    0x140003741
   140003710:	add    r9,0x2
   140003714:	add    r8,0x2
   140003718:	dec    rcx
   14000371b:	jne    0x140003706
   14000371d:	cmp    QWORD PTR [r11+0x18],0x8
   140003722:	jb     0x140003727
   140003724:	mov    r11,QWORD PTR [r11]
   140003727:	mov    rdi,QWORD PTR [rsp+0x10]
   14000372c:	mov    r12,QWORD PTR [rsp+0x18]
   140003731:	mov    rbx,QWORD PTR [rsp+0x20]
   140003736:	sub    rdx,r11
   140003739:	sar    rdx,1
   14000373c:	mov    rax,rdx
   14000373f:	pop    rsi
   140003740:	ret    
   140003741:	cmp    WORD PTR [r9],ax
   140003745:	mov    ecx,0x1
   14000374a:	cmovb  ecx,r12d
   14000374e:	test   ecx,ecx
   140003750:	je     0x14000371d
   140003752:	mov    rcx,rdx
   140003755:	mov    rax,r12
   140003758:	sub    rcx,rdi
   14000375b:	lea    rdi,[rdx+0x2]
   14000375f:	sar    rcx,1
   140003762:	sub    rax,rcx
   140003765:	add    r10,rax
   140003768:	jmp    0x1400036c3
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	sub    rsp,0x48
   140003774:	xor    eax,eax
   140003776:	test   rcx,rcx
   140003779:	je     0x1400037cd
   14000377b:	movabs rax,0x7fffffffffffffff
   140003785:	cmp    rcx,rax
   140003788:	ja     0x140003797
   14000378a:	add    rcx,rcx
   14000378d:	call   0x140008790
   140003792:	test   rax,rax
   140003795:	jne    0x1400037cd
   140003797:	lea    rdx,[rsp+0x50]
   14000379c:	lea    rcx,[rsp+0x20]
   1400037a1:	mov    QWORD PTR [rsp+0x50],0x0
   1400037aa:	call   0x140008104
   1400037af:	lea    r11,[rip+0x14c9a]        # 0x140018450
   1400037b6:	lea    rdx,[rip+0x1bee3]        # 0x14001f6a0
   1400037bd:	lea    rcx,[rsp+0x20]
   1400037c2:	mov    QWORD PTR [rsp+0x20],r11
   1400037c7:	call   0x140009498
   1400037cc:	int3   
   1400037cd:	add    rsp,0x48
   1400037d1:	ret    
   1400037d2:	int3   
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	rex push rbx
   1400037e2:	sub    rsp,0x40
   1400037e6:	mov    rbx,rcx
   1400037e9:	mov    QWORD PTR [rcx+0x10],0x0
   1400037f1:	mov    ecx,0x70
   1400037f6:	call   0x140008790
   1400037fb:	test   rax,rax
   1400037fe:	je     0x140003830
   140003800:	mov    QWORD PTR [rbx+0x8],rax
   140003804:	mov    QWORD PTR [rax],rax
   140003807:	mov    rax,QWORD PTR [rbx+0x8]
   14000380b:	mov    QWORD PTR [rax+0x8],rax
   14000380f:	mov    rax,QWORD PTR [rbx+0x8]
   140003813:	mov    QWORD PTR [rax+0x10],rax
   140003817:	mov    rax,QWORD PTR [rbx+0x8]
   14000381b:	mov    BYTE PTR [rax+0x68],0x1
   14000381f:	mov    rax,QWORD PTR [rbx+0x8]
   140003823:	mov    BYTE PTR [rax+0x69],0x1
   140003827:	mov    rax,rbx
   14000382a:	add    rsp,0x40
   14000382e:	pop    rbx
   14000382f:	ret    
   140003830:	lea    rdx,[rsp+0x50]
   140003835:	lea    rcx,[rsp+0x20]
   14000383a:	mov    QWORD PTR [rsp+0x50],0x0
   140003843:	call   0x140008104
   140003848:	lea    r11,[rip+0x14c01]        # 0x140018450
   14000384f:	lea    rdx,[rip+0x1be4a]        # 0x14001f6a0
   140003856:	lea    rcx,[rsp+0x20]
   14000385b:	mov    QWORD PTR [rsp+0x20],r11
   140003860:	call   0x140009498
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x10],rbx
   140003875:	mov    QWORD PTR [rsp+0x20],r9
   14000387a:	mov    QWORD PTR [rsp+0x18],r8
   14000387f:	push   rdi
   140003880:	sub    rsp,0x20
   140003884:	mov    rdi,rdx
   140003887:	mov    rdx,QWORD PTR [rcx+0x8]
   14000388b:	mov    rbx,rcx
   14000388e:	cmp    r8,QWORD PTR [rdx]
   140003891:	jne    0x1400038d8
   140003893:	cmp    r9,rdx
   140003896:	jne    0x1400038d8
   140003898:	mov    rdx,QWORD PTR [rdx+0x8]
   14000389c:	call   0x140003970
   1400038a1:	mov    r11,QWORD PTR [rbx+0x8]
   1400038a5:	mov    QWORD PTR [r11+0x8],r11
   1400038a9:	mov    rax,QWORD PTR [rbx+0x8]
   1400038ad:	mov    QWORD PTR [rax],rax
   1400038b0:	mov    rax,QWORD PTR [rbx+0x8]
   1400038b4:	mov    QWORD PTR [rax+0x10],rax
   1400038b8:	mov    rax,QWORD PTR [rbx+0x8]
   1400038bc:	mov    QWORD PTR [rbx+0x10],0x0
   1400038c4:	mov    rcx,QWORD PTR [rax]
   1400038c7:	mov    rax,rdi
   1400038ca:	mov    QWORD PTR [rdi],rcx
   1400038cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400038d2:	add    rsp,0x20
   1400038d6:	pop    rdi
   1400038d7:	ret    
   1400038d8:	cmp    r8,r9
   1400038db:	je     0x140003959
   1400038dd:	nop    DWORD PTR [rax]
   1400038e0:	cmp    BYTE PTR [r8+0x69],0x0
   1400038e5:	mov    rax,r8
   1400038e8:	jne    0x14000393d
   1400038ea:	mov    rdx,QWORD PTR [r8+0x10]
   1400038ee:	cmp    BYTE PTR [rdx+0x69],0x0
   1400038f2:	jne    0x140003913
   1400038f4:	mov    rcx,QWORD PTR [rdx]
   1400038f7:	cmp    BYTE PTR [rcx+0x69],0x0
   1400038fb:	jne    0x14000390c
   1400038fd:	nop    DWORD PTR [rax]
   140003900:	mov    rdx,rcx
   140003903:	mov    rcx,QWORD PTR [rcx]
   140003906:	cmp    BYTE PTR [rcx+0x69],0x0
   14000390a:	je     0x140003900
   14000390c:	mov    QWORD PTR [rsp+0x40],rdx
   140003911:	jmp    0x14000393d
   140003913:	mov    rcx,QWORD PTR [r8+0x8]
   140003917:	cmp    BYTE PTR [rcx+0x69],0x0
   14000391b:	jne    0x140003938
   14000391d:	nop    DWORD PTR [rax]
   140003920:	cmp    r8,QWORD PTR [rcx+0x10]
   140003924:	jne    0x140003938
   140003926:	mov    QWORD PTR [rsp+0x40],rcx
   14000392b:	mov    r8,rcx
   14000392e:	mov    rcx,QWORD PTR [rcx+0x8]
   140003932:	cmp    BYTE PTR [rcx+0x69],0x0
   140003936:	je     0x140003920
   140003938:	mov    QWORD PTR [rsp+0x40],rcx
   14000393d:	lea    rdx,[rsp+0x30]
   140003942:	mov    r8,rax
   140003945:	mov    rcx,rbx
   140003948:	call   0x1400045f0
   14000394d:	mov    r8,QWORD PTR [rsp+0x40]
   140003952:	cmp    r8,QWORD PTR [rsp+0x48]
   140003957:	jne    0x1400038e0
   140003959:	mov    rbx,QWORD PTR [rsp+0x38]
   14000395e:	mov    QWORD PTR [rdi],r8
   140003961:	mov    rax,rdi
   140003964:	add    rsp,0x20
   140003968:	pop    rdi
   140003969:	ret    
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x10],rbx
   140003975:	mov    QWORD PTR [rsp+0x18],rsi
   14000397a:	push   rdi
   14000397b:	sub    rsp,0x20
   14000397f:	cmp    BYTE PTR [rdx+0x69],0x0
   140003983:	mov    rbx,rdx
   140003986:	mov    rsi,rcx
   140003989:	mov    rdi,rdx
   14000398c:	jne    0x140003a05
   14000398e:	mov    QWORD PTR [rsp+0x30],rbp
   140003993:	xor    ebp,ebp
   140003995:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400039a0:	mov    rdx,QWORD PTR [rdi+0x10]
   1400039a4:	mov    rcx,rsi
   1400039a7:	call   0x140003970
   1400039ac:	cmp    QWORD PTR [rbx+0x58],0x8
   1400039b1:	mov    rdi,QWORD PTR [rdi]
   1400039b4:	jb     0x1400039bf
   1400039b6:	mov    rcx,QWORD PTR [rbx+0x40]
   1400039ba:	call   0x14000872c
   1400039bf:	mov    QWORD PTR [rbx+0x58],0x7
   1400039c7:	mov    QWORD PTR [rbx+0x50],rbp
   1400039cb:	mov    WORD PTR [rbx+0x40],bp
   1400039cf:	cmp    QWORD PTR [rbx+0x30],0x8
   1400039d4:	jb     0x1400039df
   1400039d6:	mov    rcx,QWORD PTR [rbx+0x18]
   1400039da:	call   0x14000872c
   1400039df:	mov    QWORD PTR [rbx+0x30],0x7
   1400039e7:	mov    QWORD PTR [rbx+0x28],rbp
   1400039eb:	mov    rcx,rbx
   1400039ee:	mov    WORD PTR [rbx+0x18],bp
   1400039f2:	call   0x14000872c
   1400039f7:	mov    rbx,rdi
   1400039fa:	cmp    BYTE PTR [rdi+0x69],bpl
   1400039fe:	je     0x1400039a0
   140003a00:	mov    rbp,QWORD PTR [rsp+0x30]
   140003a05:	mov    rbx,QWORD PTR [rsp+0x38]
   140003a0a:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a0f:	add    rsp,0x20
   140003a13:	pop    rdi
   140003a14:	ret    
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	mov    rcx,QWORD PTR [rcx+0x8]
   140003a24:	jmp    0x14000872c
   140003a29:	int3   
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	rex push rbp
   140003a32:	push   rsi
   140003a33:	push   rdi
   140003a34:	mov    rbp,rsp
   140003a37:	sub    rsp,0x60
   140003a3b:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140003a43:	mov    QWORD PTR [rsp+0x90],rbx
   140003a4b:	mov    rax,QWORD PTR [rip+0x1d9be]        # 0x140021410
   140003a52:	xor    rax,rsp
   140003a55:	mov    QWORD PTR [rbp-0x8],rax
   140003a59:	mov    rbx,rdx
   140003a5c:	mov    rdx,rcx
   140003a5f:	xor    esi,esi
   140003a61:	mov    DWORD PTR [rbp-0x40],esi
   140003a64:	mov    eax,DWORD PTR [rcx+0x78]
   140003a67:	test   al,0x2
   140003a69:	jne    0x140003b33
   140003a6f:	mov    rcx,QWORD PTR [rcx+0x48]
   140003a73:	cmp    QWORD PTR [rcx],rsi
   140003a76:	je     0x140003b33
   140003a7c:	mov    rax,QWORD PTR [rcx]
   140003a7f:	mov    r8,QWORD PTR [rdx+0x70]
   140003a83:	cmp    r8,rax
   140003a86:	cmovb  r8,rax
   140003a8a:	mov    rax,QWORD PTR [rdx+0x28]
   140003a8e:	mov    rdx,QWORD PTR [rax]
   140003a91:	mov    edi,0x7
   140003a96:	mov    QWORD PTR [rbp-0x18],rdi
   140003a9a:	mov    QWORD PTR [rbp-0x20],rsi
   140003a9e:	mov    WORD PTR [rbp-0x30],si
   140003aa2:	sub    r8,rdx
   140003aa5:	sar    r8,1
   140003aa8:	lea    rcx,[rbp-0x30]
   140003aac:	call   0x140004030
   140003ab1:	nop
   140003ab2:	mov    QWORD PTR [rbx+0x18],rdi
   140003ab6:	mov    QWORD PTR [rbx+0x10],rsi
   140003aba:	mov    WORD PTR [rbx],si
   140003abd:	lea    rax,[rbp-0x30]
   140003ac1:	cmp    rbx,rax
   140003ac4:	je     0x140003b2a
   140003ac6:	cmp    QWORD PTR [rbx+0x18],0x8
   140003acb:	jb     0x140003ad5
   140003acd:	mov    rcx,QWORD PTR [rbx]
   140003ad0:	call   0x14000872c
   140003ad5:	mov    QWORD PTR [rbx+0x18],rdi
   140003ad9:	mov    QWORD PTR [rbx+0x10],rsi
   140003add:	mov    WORD PTR [rbx],si
   140003ae0:	mov    rcx,QWORD PTR [rbp-0x18]
   140003ae4:	cmp    rcx,0x8
   140003ae8:	jae    0x140003b05
   140003aea:	mov    r8,QWORD PTR [rbp-0x20]
   140003aee:	lea    r8,[r8+r8*1+0x2]
   140003af3:	lea    rdx,[rbp-0x30]
   140003af7:	mov    rcx,rbx
   140003afa:	call   0x140008250
   140003aff:	mov    rcx,QWORD PTR [rbp-0x18]
   140003b03:	jmp    0x140003b10
   140003b05:	mov    rax,QWORD PTR [rbp-0x30]
   140003b09:	mov    QWORD PTR [rbx],rax
   140003b0c:	mov    QWORD PTR [rbp-0x30],rsi
   140003b10:	mov    rax,QWORD PTR [rbp-0x20]
   140003b14:	mov    QWORD PTR [rbx+0x10],rax
   140003b18:	mov    QWORD PTR [rbx+0x18],rcx
   140003b1c:	mov    QWORD PTR [rbp-0x18],rdi
   140003b20:	mov    QWORD PTR [rbp-0x20],rsi
   140003b24:	mov    WORD PTR [rbp-0x30],si
   140003b28:	jmp    0x140003b2e
   140003b2a:	mov    rdi,QWORD PTR [rbp-0x18]
   140003b2e:	jmp    0x140003c8c
   140003b33:	test   al,0x4
   140003b35:	jne    0x140003bff
   140003b3b:	mov    r8,QWORD PTR [rdx+0x40]
   140003b3f:	cmp    QWORD PTR [r8],rsi
   140003b42:	je     0x140003bff
   140003b48:	mov    rax,QWORD PTR [rdx+0x58]
   140003b4c:	movsxd rcx,DWORD PTR [rax]
   140003b4f:	mov    rax,QWORD PTR [r8]
   140003b52:	lea    r8,[rax+rcx*2]
   140003b56:	mov    rax,QWORD PTR [rdx+0x20]
   140003b5a:	mov    rdx,QWORD PTR [rax]
   140003b5d:	mov    edi,0x7
   140003b62:	mov    QWORD PTR [rbp-0x18],rdi
   140003b66:	mov    QWORD PTR [rbp-0x20],rsi
   140003b6a:	mov    WORD PTR [rbp-0x30],si
   140003b6e:	sub    r8,rdx
   140003b71:	sar    r8,1
   140003b74:	lea    rcx,[rbp-0x30]
   140003b78:	call   0x140004030
   140003b7d:	nop
   140003b7e:	mov    QWORD PTR [rbx+0x18],rdi
   140003b82:	mov    QWORD PTR [rbx+0x10],rsi
   140003b86:	mov    WORD PTR [rbx],si
   140003b89:	lea    rax,[rbp-0x30]
   140003b8d:	cmp    rbx,rax
   140003b90:	je     0x140003bf6
   140003b92:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b97:	jb     0x140003ba1
   140003b99:	mov    rcx,QWORD PTR [rbx]
   140003b9c:	call   0x14000872c
   140003ba1:	mov    QWORD PTR [rbx+0x18],rdi
   140003ba5:	mov    QWORD PTR [rbx+0x10],rsi
   140003ba9:	mov    WORD PTR [rbx],si
   140003bac:	mov    rcx,QWORD PTR [rbp-0x18]
   140003bb0:	cmp    rcx,0x8
   140003bb4:	jae    0x140003bd1
   140003bb6:	mov    r8,QWORD PTR [rbp-0x20]
   140003bba:	lea    r8,[r8+r8*1+0x2]
   140003bbf:	lea    rdx,[rbp-0x30]
   140003bc3:	mov    rcx,rbx
   140003bc6:	call   0x140008250
   140003bcb:	mov    rcx,QWORD PTR [rbp-0x18]
   140003bcf:	jmp    0x140003bdc
   140003bd1:	mov    rax,QWORD PTR [rbp-0x30]
   140003bd5:	mov    QWORD PTR [rbx],rax
   140003bd8:	mov    QWORD PTR [rbp-0x30],rsi
   140003bdc:	mov    rax,QWORD PTR [rbp-0x20]
   140003be0:	mov    QWORD PTR [rbx+0x10],rax
   140003be4:	mov    QWORD PTR [rbx+0x18],rcx
   140003be8:	mov    QWORD PTR [rbp-0x18],rdi
   140003bec:	mov    QWORD PTR [rbp-0x20],rsi
   140003bf0:	mov    WORD PTR [rbp-0x30],si
   140003bf4:	jmp    0x140003bfa
   140003bf6:	mov    rdi,QWORD PTR [rbp-0x18]
   140003bfa:	jmp    0x140003c8c
   140003bff:	mov    edi,0x7
   140003c04:	mov    QWORD PTR [rbp-0x18],rdi
   140003c08:	mov    QWORD PTR [rbp-0x20],rsi
   140003c0c:	mov    WORD PTR [rbp-0x30],si
   140003c10:	mov    QWORD PTR [rbx+0x18],rdi
   140003c14:	mov    QWORD PTR [rbx+0x10],rsi
   140003c18:	mov    WORD PTR [rbx],si
   140003c1b:	lea    rax,[rbp-0x30]
   140003c1f:	cmp    rbx,rax
   140003c22:	je     0x140003c88
   140003c24:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c29:	jb     0x140003c33
   140003c2b:	mov    rcx,QWORD PTR [rbx]
   140003c2e:	call   0x14000872c
   140003c33:	mov    QWORD PTR [rbx+0x18],rdi
   140003c37:	mov    QWORD PTR [rbx+0x10],rsi
   140003c3b:	mov    WORD PTR [rbx],si
   140003c3e:	mov    rcx,QWORD PTR [rbp-0x18]
   140003c42:	cmp    rcx,0x8
   140003c46:	jae    0x140003c63
   140003c48:	mov    r8,QWORD PTR [rbp-0x20]
   140003c4c:	lea    r8,[r8+r8*1+0x2]
   140003c51:	lea    rdx,[rbp-0x30]
   140003c55:	mov    rcx,rbx
   140003c58:	call   0x140008250
   140003c5d:	mov    rcx,QWORD PTR [rbp-0x18]
   140003c61:	jmp    0x140003c6e
   140003c63:	mov    rax,QWORD PTR [rbp-0x30]
   140003c67:	mov    QWORD PTR [rbx],rax
   140003c6a:	mov    QWORD PTR [rbp-0x30],rsi
   140003c6e:	mov    rax,QWORD PTR [rbp-0x20]
   140003c72:	mov    QWORD PTR [rbx+0x10],rax
   140003c76:	mov    QWORD PTR [rbx+0x18],rcx
   140003c7a:	mov    QWORD PTR [rbp-0x18],rdi
   140003c7e:	mov    QWORD PTR [rbp-0x20],rsi
   140003c82:	mov    WORD PTR [rbp-0x30],si
   140003c86:	jmp    0x140003c8c
   140003c88:	mov    rdi,QWORD PTR [rbp-0x18]
   140003c8c:	cmp    rdi,0x8
   140003c90:	jb     0x140003c9b
   140003c92:	mov    rcx,QWORD PTR [rbp-0x30]
   140003c96:	call   0x14000872c
   140003c9b:	mov    rax,rbx
   140003c9e:	mov    rcx,QWORD PTR [rbp-0x8]
   140003ca2:	xor    rcx,rsp
   140003ca5:	call   0x140007d20
   140003caa:	mov    rbx,QWORD PTR [rsp+0x90]
   140003cb2:	add    rsp,0x60
   140003cb6:	pop    rdi
   140003cb7:	pop    rsi
   140003cb8:	pop    rbp
   140003cb9:	ret    
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    QWORD PTR [rsp+0x8],rcx
   140003cc5:	push   rbx
   140003cc6:	sub    rsp,0x30
   140003cca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003cd3:	mov    rbx,rcx
   140003cd6:	call   0x140007754
   140003cdb:	test   al,al
   140003cdd:	jne    0x140003ce8
   140003cdf:	mov    rcx,QWORD PTR [rbx]
   140003ce2:	call   0x140003d10
   140003ce7:	nop
   140003ce8:	mov    rdx,QWORD PTR [rbx]
   140003ceb:	mov    rax,QWORD PTR [rdx]
   140003cee:	movsxd rcx,DWORD PTR [rax+0x4]
   140003cf2:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140003cf7:	test   rcx,rcx
   140003cfa:	je     0x140003d02
   140003cfc:	mov    rax,QWORD PTR [rcx]
   140003cff:	call   QWORD PTR [rax+0x10]
   140003d02:	add    rsp,0x30
   140003d06:	pop    rbx
   140003d07:	ret    
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	rex push rdi
   140003d12:	sub    rsp,0x30
   140003d16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003d1f:	mov    QWORD PTR [rsp+0x40],rbx
   140003d24:	mov    rbx,rcx
   140003d27:	mov    rax,QWORD PTR [rcx]
   140003d2a:	movsxd rcx,DWORD PTR [rax+0x4]
   140003d2e:	test   BYTE PTR [rcx+rbx*1+0x18],0x2
   140003d33:	je     0x140003d7a
   140003d35:	xor    edi,edi
   140003d37:	test   BYTE PTR [rcx+rbx*1+0x10],0x6
   140003d3c:	jne    0x140003d54
   140003d3e:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   140003d43:	mov    rax,QWORD PTR [rcx]
   140003d46:	call   QWORD PTR [rax+0x68]
   140003d49:	mov    ecx,0x4
   140003d4e:	cmp    eax,0xffffffff
   140003d51:	cmove  edi,ecx
   140003d54:	mov    rax,QWORD PTR [rbx]
   140003d57:	movsxd rcx,DWORD PTR [rax+0x4]
   140003d5b:	add    rcx,rbx
   140003d5e:	test   edi,edi
   140003d60:	je     0x140003d7a
   140003d62:	mov    edx,DWORD PTR [rcx+0x10]
   140003d65:	or     edx,edi
   140003d67:	cmp    QWORD PTR [rcx+0x48],0x0
   140003d6c:	jne    0x140003d71
   140003d6e:	or     edx,0x4
   140003d71:	xor    r8d,r8d
   140003d74:	call   0x140001730
   140003d79:	nop
   140003d7a:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d7f:	add    rsp,0x30
   140003d83:	pop    rdi
   140003d84:	ret    
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	rex push rdi
   140003d92:	sub    rsp,0x30
   140003d96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003d9f:	mov    QWORD PTR [rsp+0x40],rbx
   140003da4:	mov    QWORD PTR [rsp+0x50],rsi
   140003da9:	mov    rbx,rdx
   140003dac:	mov    rdi,rcx
   140003daf:	mov    DWORD PTR [rsp+0x48],0x0
   140003db7:	mov    rax,QWORD PTR [rcx]
   140003dba:	movsxd r8,DWORD PTR [rax+0x4]
   140003dbe:	lea    rax,[rip+0x17fa3]        # 0x14001bd68
   140003dc5:	mov    QWORD PTR [r8+rcx*1],rax
   140003dc9:	mov    QWORD PTR [rcx+0x8],0x0
   140003dd1:	mov    rax,QWORD PTR [rcx]
   140003dd4:	movsxd rsi,DWORD PTR [rax+0x4]
   140003dd8:	add    rsi,rcx
   140003ddb:	mov    rcx,rsi
   140003dde:	call   0x1400018a0
   140003de3:	mov    QWORD PTR [rsi+0x48],rbx
   140003de7:	mov    QWORD PTR [rsi+0x50],0x0
   140003def:	mov    rcx,rsi
   140003df2:	call   0x1400050b0
   140003df7:	mov    WORD PTR [rsi+0x58],ax
   140003dfb:	cmp    QWORD PTR [rsi+0x48],0x0
   140003e00:	jne    0x140003e15
   140003e02:	mov    edx,DWORD PTR [rsi+0x10]
   140003e05:	or     edx,0x4
   140003e08:	xor    r8d,r8d
   140003e0b:	mov    rcx,rsi
   140003e0e:	call   0x140001730
   140003e13:	jmp    0x140003e15
   140003e15:	mov    rax,rdi
   140003e18:	mov    rbx,QWORD PTR [rsp+0x40]
   140003e1d:	mov    rsi,QWORD PTR [rsp+0x50]
   140003e22:	add    rsp,0x30
   140003e26:	pop    rdi
   140003e27:	ret    
   140003e28:	int3   
   140003e29:	int3   
   140003e2a:	int3   
   140003e2b:	int3   
   140003e2c:	int3   
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	mov    QWORD PTR [rsp+0x8],rcx
   140003e35:	push   rbp
   140003e36:	push   rsi
   140003e37:	push   rdi
   140003e38:	sub    rsp,0x30
   140003e3c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003e45:	mov    QWORD PTR [rsp+0x60],rbx
   140003e4a:	mov    rbx,rcx
   140003e4d:	lea    rax,[rip+0x17e94]        # 0x14001bce8
   140003e54:	mov    QWORD PTR [rcx],rax
   140003e57:	add    rcx,0x8
   140003e5b:	call   0x1400076fc
   140003e60:	nop
   140003e61:	mov    ecx,0x8
   140003e66:	call   0x140008790
   140003e6b:	mov    rdi,rax
   140003e6e:	xor    ebp,ebp
   140003e70:	test   rax,rax
   140003e73:	je     0x140003eae
   140003e75:	call   0x14000740c
   140003e7a:	mov    QWORD PTR [rdi],rax
   140003e7d:	call   0x1400071bc
   140003e82:	mov    rsi,rax
   140003e85:	xor    edx,edx
   140003e87:	lea    rcx,[rsp+0x58]
   140003e8c:	call   0x1400076a4
   140003e91:	mov    rcx,QWORD PTR [rsi+0x8]
   140003e95:	cmp    rcx,0xffffffffffffffff
   140003e99:	jae    0x140003ea2
   140003e9b:	inc    rcx
   140003e9e:	mov    QWORD PTR [rsi+0x8],rcx
   140003ea2:	lea    rcx,[rsp+0x58]
   140003ea7:	call   0x1400076d4
   140003eac:	jmp    0x140003eb1
   140003eae:	mov    rdi,rbp
   140003eb1:	mov    QWORD PTR [rbx+0x68],rdi
   140003eb5:	lea    rax,[rbx+0x10]
   140003eb9:	mov    QWORD PTR [rbx+0x20],rax
   140003ebd:	lea    rcx,[rbx+0x18]
   140003ec1:	mov    QWORD PTR [rbx+0x28],rcx
   140003ec5:	lea    rax,[rbx+0x30]
   140003ec9:	mov    QWORD PTR [rbx+0x40],rax
   140003ecd:	lea    rax,[rbx+0x38]
   140003ed1:	mov    QWORD PTR [rbx+0x48],rax
   140003ed5:	lea    rax,[rbx+0x50]
   140003ed9:	mov    QWORD PTR [rbx+0x58],rax
   140003edd:	lea    rax,[rbx+0x54]
   140003ee1:	mov    QWORD PTR [rbx+0x60],rax
   140003ee5:	mov    QWORD PTR [rcx],rbp
   140003ee8:	mov    rax,QWORD PTR [rbx+0x48]
   140003eec:	mov    QWORD PTR [rax],rbp
   140003eef:	mov    rax,QWORD PTR [rbx+0x60]
   140003ef3:	mov    DWORD PTR [rax],ebp
   140003ef5:	mov    rax,QWORD PTR [rbx+0x20]
   140003ef9:	mov    QWORD PTR [rax],rbp
   140003efc:	mov    rax,QWORD PTR [rbx+0x40]
   140003f00:	mov    QWORD PTR [rax],rbp
   140003f03:	mov    rax,QWORD PTR [rbx+0x58]
   140003f07:	mov    DWORD PTR [rax],ebp
   140003f09:	mov    rax,rbx
   140003f0c:	mov    rbx,QWORD PTR [rsp+0x60]
   140003f11:	add    rsp,0x30
   140003f15:	pop    rdi
   140003f16:	pop    rsi
   140003f17:	pop    rbp
   140003f18:	ret    
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	mov    QWORD PTR [rsp+0x10],rbx
   140003f25:	mov    QWORD PTR [rsp+0x18],rsi
   140003f2a:	push   rdi
   140003f2b:	sub    rsp,0x20
   140003f2f:	mov    rsi,r8
   140003f32:	mov    rdi,rdx
   140003f35:	mov    rbx,rcx
   140003f38:	test   rdx,rdx
   140003f3b:	je     0x140003f9e
   140003f3d:	mov    r9,QWORD PTR [rcx+0x18]
   140003f41:	cmp    r9,0x8
   140003f45:	jb     0x140003f4c
   140003f47:	mov    rax,QWORD PTR [rcx]
   140003f4a:	jmp    0x140003f4f
   140003f4c:	mov    rax,rcx
   140003f4f:	cmp    rdx,rax
   140003f52:	jb     0x140003f9e
   140003f54:	cmp    r9,0x8
   140003f58:	jb     0x140003f5d
   140003f5a:	mov    rcx,QWORD PTR [rcx]
   140003f5d:	mov    rax,QWORD PTR [rbx+0x10]
   140003f61:	lea    rcx,[rcx+rax*2]
   140003f65:	cmp    rcx,rdx
   140003f68:	jbe    0x140003f9e
   140003f6a:	cmp    r9,0x8
   140003f6e:	jb     0x140003f75
   140003f70:	mov    rax,QWORD PTR [rbx]
   140003f73:	jmp    0x140003f78
   140003f75:	mov    rax,rbx
   140003f78:	sub    rdi,rax
   140003f7b:	mov    r9,r8
   140003f7e:	mov    rdx,rbx
   140003f81:	sar    rdi,1
   140003f84:	mov    rcx,rbx
   140003f87:	mov    r8,rdi
   140003f8a:	mov    rbx,QWORD PTR [rsp+0x38]
   140003f8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003f94:	add    rsp,0x20
   140003f98:	pop    rdi
   140003f99:	jmp    0x140004dc0
   140003f9e:	mov    rcx,QWORD PTR [rbx+0x10]
   140003fa2:	or     rax,0xffffffffffffffff
   140003fa6:	sub    rax,rcx
   140003fa9:	cmp    rax,r8
   140003fac:	ja     0x140003fbb
   140003fae:	lea    rcx,[rip+0x17cab]        # 0x14001bc60
   140003fb5:	call   0x140007534
   140003fba:	int3   
   140003fbb:	test   r8,r8
   140003fbe:	je     0x140004019
   140003fc0:	mov    QWORD PTR [rsp+0x30],rbp
   140003fc5:	lea    rbp,[rcx+r8*1]
   140003fc9:	mov    rcx,rbx
   140003fcc:	mov    rdx,rbp
   140003fcf:	call   0x140004570
   140003fd4:	test   al,al
   140003fd6:	je     0x140004014
   140003fd8:	cmp    QWORD PTR [rbx+0x18],0x8
   140003fdd:	jb     0x140003fe4
   140003fdf:	mov    rcx,QWORD PTR [rbx]
   140003fe2:	jmp    0x140003fe7
   140003fe4:	mov    rcx,rbx
   140003fe7:	mov    rax,QWORD PTR [rbx+0x10]
   140003feb:	lea    r8,[rsi+rsi*1]
   140003fef:	mov    rdx,rdi
   140003ff2:	lea    rcx,[rcx+rax*2]
   140003ff6:	call   0x140008250
   140003ffb:	cmp    QWORD PTR [rbx+0x18],0x8
   140004000:	mov    QWORD PTR [rbx+0x10],rbp
   140004004:	jb     0x14000400b
   140004006:	mov    rax,QWORD PTR [rbx]
   140004009:	jmp    0x14000400e
   14000400b:	mov    rax,rbx
   14000400e:	xor    ecx,ecx
   140004010:	mov    WORD PTR [rax+rbp*2],cx
   140004014:	mov    rbp,QWORD PTR [rsp+0x30]
   140004019:	mov    rsi,QWORD PTR [rsp+0x40]
   14000401e:	mov    rax,rbx
   140004021:	mov    rbx,QWORD PTR [rsp+0x38]
   140004026:	add    rsp,0x20
   14000402a:	pop    rdi
   14000402b:	ret    
   14000402c:	int3   
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	mov    QWORD PTR [rsp+0x10],rbx
   140004035:	mov    QWORD PTR [rsp+0x18],rsi
   14000403a:	push   rdi
   14000403b:	sub    rsp,0x20
   14000403f:	mov    rdi,r8
   140004042:	mov    rsi,rdx
   140004045:	mov    rbx,rcx
   140004048:	test   rdx,rdx
   14000404b:	je     0x1400040ae
   14000404d:	mov    r8,QWORD PTR [rcx+0x18]
   140004051:	cmp    r8,0x8
   140004055:	jb     0x14000405c
   140004057:	mov    rax,QWORD PTR [rcx]
   14000405a:	jmp    0x14000405f
   14000405c:	mov    rax,rcx
   14000405f:	cmp    rdx,rax
   140004062:	jb     0x1400040ae
   140004064:	cmp    r8,0x8
   140004068:	jb     0x14000406d
   14000406a:	mov    rcx,QWORD PTR [rcx]
   14000406d:	mov    rax,QWORD PTR [rbx+0x10]
   140004071:	lea    rcx,[rcx+rax*2]
   140004075:	cmp    rcx,rdx
   140004078:	jbe    0x1400040ae
   14000407a:	cmp    r8,0x8
   14000407e:	jb     0x140004085
   140004080:	mov    rax,QWORD PTR [rbx]
   140004083:	jmp    0x140004088
   140004085:	mov    rax,rbx
   140004088:	sub    rsi,rax
   14000408b:	mov    r9,rdi
   14000408e:	mov    rdx,rbx
   140004091:	sar    rsi,1
   140004094:	mov    rcx,rbx
   140004097:	mov    r8,rsi
   14000409a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000409f:	mov    rsi,QWORD PTR [rsp+0x40]
   1400040a4:	add    rsp,0x20
   1400040a8:	pop    rdi
   1400040a9:	jmp    0x1400033d0
   1400040ae:	movabs rax,0x7ffffffffffffffe
   1400040b8:	cmp    rdi,rax
   1400040bb:	jbe    0x1400040ca
   1400040bd:	lea    rcx,[rip+0x17b9c]        # 0x14001bc60
   1400040c4:	call   0x140007534
   1400040c9:	int3   
   1400040ca:	mov    rcx,QWORD PTR [rbx+0x18]
   1400040ce:	cmp    rcx,rdi
   1400040d1:	jae    0x1400040fc
   1400040d3:	mov    r8,QWORD PTR [rbx+0x10]
   1400040d7:	mov    rdx,rdi
   1400040da:	mov    rcx,rbx
   1400040dd:	call   0x140004ea0
   1400040e2:	test   rdi,rdi
   1400040e5:	je     0x14000416f
   1400040eb:	cmp    QWORD PTR [rbx+0x18],0x8
   1400040f0:	mov    QWORD PTR [rsp+0x30],rbp
   1400040f5:	jb     0x14000413f
   1400040f7:	mov    rcx,QWORD PTR [rbx]
   1400040fa:	jmp    0x140004142
   1400040fc:	test   rdi,rdi
   1400040ff:	jne    0x1400040eb
   140004101:	xor    eax,eax
   140004103:	mov    QWORD PTR [rbx+0x10],rax
   140004107:	cmp    rcx,0x8
   14000410b:	jb     0x140004126
   14000410d:	mov    rcx,QWORD PTR [rbx]
   140004110:	mov    WORD PTR [rcx],ax
   140004113:	mov    rax,rbx
   140004116:	mov    rbx,QWORD PTR [rsp+0x38]
   14000411b:	mov    rsi,QWORD PTR [rsp+0x40]
   140004120:	add    rsp,0x20
   140004124:	pop    rdi
   140004125:	ret    
   140004126:	mov    WORD PTR [rbx],ax
   140004129:	mov    rcx,rbx
   14000412c:	mov    rax,rbx
   14000412f:	mov    rbx,QWORD PTR [rsp+0x38]
   140004134:	mov    rsi,QWORD PTR [rsp+0x40]
   140004139:	add    rsp,0x20
   14000413d:	pop    rdi
   14000413e:	ret    
   14000413f:	mov    rcx,rbx
   140004142:	lea    rbp,[rdi+rdi*1]
   140004146:	mov    rdx,rsi
   140004149:	mov    r8,rbp
   14000414c:	call   0x140008250
   140004151:	cmp    QWORD PTR [rbx+0x18],0x8
   140004156:	mov    QWORD PTR [rbx+0x10],rdi
   14000415a:	jb     0x140004161
   14000415c:	mov    rcx,QWORD PTR [rbx]
   14000415f:	jmp    0x140004164
   140004161:	mov    rcx,rbx
   140004164:	xor    eax,eax
   140004166:	mov    WORD PTR [rcx+rbp*1],ax
   14000416a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000416f:	mov    rsi,QWORD PTR [rsp+0x40]
   140004174:	mov    rax,rbx
   140004177:	mov    rbx,QWORD PTR [rsp+0x38]
   14000417c:	add    rsp,0x20
   140004180:	pop    rdi
   140004181:	ret    
   140004182:	int3   
   140004183:	int3   
   140004184:	int3   
   140004185:	int3   
   140004186:	int3   
   140004187:	int3   
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	mov    QWORD PTR [rsp+0x8],rbx
   140004195:	push   rdi
   140004196:	sub    rsp,0x20
   14000419a:	mov    rdi,r8
   14000419d:	mov    r8,QWORD PTR [rcx+0x10]
   1400041a1:	mov    r9,rdx
   1400041a4:	mov    rbx,rcx
   1400041a7:	cmp    r8,rdx
   1400041aa:	jae    0x1400041b9
   1400041ac:	lea    rcx,[rip+0x17a95]        # 0x14001bc48
   1400041b3:	call   0x140007590
   1400041b8:	int3   
   1400041b9:	sub    r8,rdx
   1400041bc:	cmp    r8,rdi
   1400041bf:	cmovb  rdi,r8
   1400041c3:	test   rdi,rdi
   1400041c6:	je     0x14000421b
   1400041c8:	mov    rax,QWORD PTR [rcx+0x18]
   1400041cc:	cmp    rax,0x8
   1400041d0:	jb     0x1400041d7
   1400041d2:	mov    rdx,QWORD PTR [rcx]
   1400041d5:	jmp    0x1400041da
   1400041d7:	mov    rdx,rcx
   1400041da:	cmp    rax,0x8
   1400041de:	jb     0x1400041e3
   1400041e0:	mov    rcx,QWORD PTR [rcx]
   1400041e3:	lea    rax,[r9+rdi*1]
   1400041e7:	sub    r8,rdi
   1400041ea:	lea    rcx,[rcx+r9*2]
   1400041ee:	lea    rdx,[rdx+rax*2]
   1400041f2:	add    r8,r8
   1400041f5:	call   0x140008250
   1400041fa:	mov    r11,QWORD PTR [rbx+0x10]
   1400041fe:	sub    r11,rdi
   140004201:	cmp    QWORD PTR [rbx+0x18],0x8
   140004206:	mov    QWORD PTR [rbx+0x10],r11
   14000420a:	jb     0x140004211
   14000420c:	mov    rax,QWORD PTR [rbx]
   14000420f:	jmp    0x140004214
   140004211:	mov    rax,rbx
   140004214:	xor    ecx,ecx
   140004216:	mov    WORD PTR [rax+r11*2],cx
   14000421b:	mov    rax,rbx
   14000421e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004223:	add    rsp,0x20
   140004227:	pop    rdi
   140004228:	ret    
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	rex push rbx
   140004232:	push   rbp
   140004233:	push   rsi
   140004234:	push   rdi
   140004235:	push   r13
   140004237:	sub    rsp,0x20
   14000423b:	mov    rbx,rcx
   14000423e:	mov    rcx,QWORD PTR [rcx+0x10]
   140004242:	mov    rbp,r9
   140004245:	mov    rsi,r8
   140004248:	mov    rdi,rdx
   14000424b:	mov    r13d,0x3
   140004251:	cmp    rcx,rdx
   140004254:	jb     0x14000455f
   14000425a:	mov    rax,QWORD PTR [r8+0x10]
   14000425e:	cmp    rax,r9
   140004261:	jb     0x14000455f
   140004267:	mov    QWORD PTR [rsp+0x50],r12
   14000426c:	mov    r12,QWORD PTR [rsp+0x70]
   140004271:	mov    QWORD PTR [rsp+0x58],r14
   140004276:	mov    r14,rcx
   140004279:	sub    r14,rdx
   14000427c:	mov    rdx,rcx
   14000427f:	cmp    r14,r13
   140004282:	cmovb  r13,r14
   140004286:	sub    rax,r9
   140004289:	cmp    rax,r12
   14000428c:	cmovb  r12,rax
   140004290:	or     rax,0xffffffffffffffff
   140004294:	sub    rdx,r13
   140004297:	sub    rax,r12
   14000429a:	cmp    rax,rdx
   14000429d:	ja     0x1400042ac
   14000429f:	lea    rcx,[rip+0x179ba]        # 0x14001bc60
   1400042a6:	call   0x140007534
   1400042ab:	int3   
   1400042ac:	mov    QWORD PTR [rsp+0x60],r15
   1400042b1:	lea    r15,[rdx+r12*1]
   1400042b5:	sub    r14,r13
   1400042b8:	cmp    rcx,r15
   1400042bb:	jae    0x1400042c8
   1400042bd:	mov    rdx,r15
   1400042c0:	mov    rcx,rbx
   1400042c3:	call   0x140004570
   1400042c8:	mov    rax,QWORD PTR [rbx+0x18]
   1400042cc:	cmp    rbx,rsi
   1400042cf:	je     0x140004335
   1400042d1:	cmp    rax,0x8
   1400042d5:	jb     0x1400042dc
   1400042d7:	mov    rdx,QWORD PTR [rbx]
   1400042da:	jmp    0x1400042df
   1400042dc:	mov    rdx,rbx
   1400042df:	cmp    rax,0x8
   1400042e3:	jb     0x1400042ea
   1400042e5:	mov    rcx,QWORD PTR [rbx]
   1400042e8:	jmp    0x1400042ed
   1400042ea:	mov    rcx,rbx
   1400042ed:	lea    rax,[rdi+r13*1]
   1400042f1:	lea    r8,[r14+r14*1]
   1400042f5:	lea    rdx,[rdx+rax*2]
   1400042f9:	lea    rax,[rdi+r12*1]
   1400042fd:	lea    rcx,[rcx+rax*2]
   140004301:	call   0x140008250
   140004306:	cmp    QWORD PTR [rsi+0x18],0x8
   14000430b:	jb     0x140004310
   14000430d:	mov    rsi,QWORD PTR [rsi]
   140004310:	cmp    QWORD PTR [rbx+0x18],0x8
   140004315:	jb     0x14000431c
   140004317:	mov    rax,QWORD PTR [rbx]
   14000431a:	jmp    0x14000431f
   14000431c:	mov    rax,rbx
   14000431f:	lea    r8,[r12+r12*1]
   140004323:	lea    rdx,[rsi+rbp*2]
   140004327:	lea    rcx,[rax+rdi*2]
   14000432b:	call   0x140008250
   140004330:	jmp    0x140004528
   140004335:	cmp    r12,r13
   140004338:	ja     0x1400043a0
   14000433a:	cmp    rax,0x8
   14000433e:	jb     0x140004345
   140004340:	mov    rcx,QWORD PTR [rbx]
   140004343:	jmp    0x140004348
   140004345:	mov    rcx,rbx
   140004348:	cmp    rax,0x8
   14000434c:	jb     0x140004353
   14000434e:	mov    rax,QWORD PTR [rbx]
   140004351:	jmp    0x140004356
   140004353:	mov    rax,rbx
   140004356:	lea    rdx,[rcx+rbp*2]
   14000435a:	lea    r8,[r12+r12*1]
   14000435e:	lea    rcx,[rax+rdi*2]
   140004362:	call   0x140008250
   140004367:	mov    r11,QWORD PTR [rbx+0x18]
   14000436b:	cmp    r11,0x8
   14000436f:	jb     0x140004376
   140004371:	mov    rdx,QWORD PTR [rbx]
   140004374:	jmp    0x140004379
   140004376:	mov    rdx,rbx
   140004379:	cmp    r11,0x8
   14000437d:	jb     0x140004384
   14000437f:	mov    rcx,QWORD PTR [rbx]
   140004382:	jmp    0x140004387
   140004384:	mov    rcx,rbx
   140004387:	lea    rax,[rdi+r13*1]
   14000438b:	lea    r8,[r14+r14*1]
   14000438f:	lea    rdx,[rdx+rax*2]
   140004393:	lea    rax,[rdi+r12*1]
   140004397:	lea    rcx,[rcx+rax*2]
   14000439b:	jmp    0x140004523
   1400043a0:	cmp    rbp,rdi
   1400043a3:	ja     0x14000441a
   1400043a5:	cmp    rax,0x8
   1400043a9:	jb     0x1400043b0
   1400043ab:	mov    rdx,QWORD PTR [rbx]
   1400043ae:	jmp    0x1400043b3
   1400043b0:	mov    rdx,rbx
   1400043b3:	cmp    rax,0x8
   1400043b7:	jb     0x1400043be
   1400043b9:	mov    rcx,QWORD PTR [rbx]
   1400043bc:	jmp    0x1400043c1
   1400043be:	mov    rcx,rbx
   1400043c1:	lea    rax,[rdi+r13*1]
   1400043c5:	lea    r8,[r14+r14*1]
   1400043c9:	lea    rdx,[rdx+rax*2]
   1400043cd:	lea    rax,[rdi+r12*1]
   1400043d1:	lea    rcx,[rcx+rax*2]
   1400043d5:	call   0x140008250
   1400043da:	mov    r11,QWORD PTR [rbx+0x18]
   1400043de:	cmp    r11,0x8
   1400043e2:	jb     0x1400043e9
   1400043e4:	mov    rcx,QWORD PTR [rbx]
   1400043e7:	jmp    0x1400043ec
   1400043e9:	mov    rcx,rbx
   1400043ec:	cmp    r11,0x8
   1400043f0:	jb     0x140004406
   1400043f2:	mov    rax,QWORD PTR [rbx]
   1400043f5:	lea    rdx,[rcx+rbp*2]
   1400043f9:	lea    r8,[r12+r12*1]
   1400043fd:	lea    rcx,[rax+rdi*2]
   140004401:	jmp    0x140004523
   140004406:	lea    rdx,[rcx+rbp*2]
   14000440a:	mov    rax,rbx
   14000440d:	lea    r8,[r12+r12*1]
   140004411:	lea    rcx,[rbx+rdi*2]
   140004415:	jmp    0x140004523
   14000441a:	lea    rsi,[rdi+r13*1]
   14000441e:	cmp    rsi,rbp
   140004421:	ja     0x14000448b
   140004423:	cmp    rax,0x8
   140004427:	jb     0x14000442e
   140004429:	mov    rdx,QWORD PTR [rbx]
   14000442c:	jmp    0x140004431
   14000442e:	mov    rdx,rbx
   140004431:	cmp    rax,0x8
   140004435:	jb     0x14000443c
   140004437:	mov    rcx,QWORD PTR [rbx]
   14000443a:	jmp    0x14000443f
   14000443c:	mov    rcx,rbx
   14000443f:	lea    rax,[rdi+r12*1]
   140004443:	lea    r8,[r14+r14*1]
   140004447:	lea    rdx,[rdx+rsi*2]
   14000444b:	lea    rcx,[rcx+rax*2]
   14000444f:	call   0x140008250
   140004454:	mov    r11,QWORD PTR [rbx+0x18]
   140004458:	cmp    r11,0x8
   14000445c:	jb     0x140004463
   14000445e:	mov    rcx,QWORD PTR [rbx]
   140004461:	jmp    0x140004466
   140004463:	mov    rcx,rbx
   140004466:	cmp    r11,0x8
   14000446a:	jb     0x140004471
   14000446c:	mov    rax,QWORD PTR [rbx]
   14000446f:	jmp    0x140004474
   140004471:	mov    rax,rbx
   140004474:	sub    rbp,r13
   140004477:	lea    r8,[r12+r12*1]
   14000447b:	add    rbp,r12
   14000447e:	lea    rdx,[rcx+rbp*2]
   140004482:	lea    rcx,[rax+rdi*2]
   140004486:	jmp    0x140004523
   14000448b:	cmp    rax,0x8
   14000448f:	jb     0x140004496
   140004491:	mov    rcx,QWORD PTR [rbx]
   140004494:	jmp    0x140004499
   140004496:	mov    rcx,rbx
   140004499:	cmp    rax,0x8
   14000449d:	jb     0x1400044a4
   14000449f:	mov    rax,QWORD PTR [rbx]
   1400044a2:	jmp    0x1400044a7
   1400044a4:	mov    rax,rbx
   1400044a7:	lea    rdx,[rcx+rbp*2]
   1400044ab:	lea    r8,[r13+r13*1+0x0]
   1400044b0:	lea    rcx,[rax+rdi*2]
   1400044b4:	call   0x140008250
   1400044b9:	mov    r11,QWORD PTR [rbx+0x18]
   1400044bd:	cmp    r11,0x8
   1400044c1:	jb     0x1400044c8
   1400044c3:	mov    rax,QWORD PTR [rbx]
   1400044c6:	jmp    0x1400044cb
   1400044c8:	mov    rax,rbx
   1400044cb:	cmp    r11,0x8
   1400044cf:	jb     0x1400044d6
   1400044d1:	mov    rcx,QWORD PTR [rbx]
   1400044d4:	jmp    0x1400044d9
   1400044d6:	mov    rcx,rbx
   1400044d9:	lea    rdx,[rax+rsi*2]
   1400044dd:	lea    rax,[rdi+r12*1]
   1400044e1:	lea    r8,[r14+r14*1]
   1400044e5:	lea    rcx,[rcx+rax*2]
   1400044e9:	call   0x140008250
   1400044ee:	mov    r11,QWORD PTR [rbx+0x18]
   1400044f2:	cmp    r11,0x8
   1400044f6:	jb     0x1400044fd
   1400044f8:	mov    rdx,QWORD PTR [rbx]
   1400044fb:	jmp    0x140004500
   1400044fd:	mov    rdx,rbx
   140004500:	cmp    r11,0x8
   140004504:	jb     0x14000450b
   140004506:	mov    rcx,QWORD PTR [rbx]
   140004509:	jmp    0x14000450e
   14000450b:	mov    rcx,rbx
   14000450e:	mov    r8,r12
   140004511:	lea    rax,[r12+rbp*1]
   140004515:	lea    rcx,[rcx+rsi*2]
   140004519:	sub    r8,r13
   14000451c:	lea    rdx,[rdx+rax*2]
   140004520:	add    r8,r8
   140004523:	call   0x140008250
   140004528:	cmp    QWORD PTR [rbx+0x18],0x8
   14000452d:	mov    QWORD PTR [rbx+0x10],r15
   140004531:	jb     0x140004538
   140004533:	mov    rax,QWORD PTR [rbx]
   140004536:	jmp    0x14000453b
   140004538:	mov    rax,rbx
   14000453b:	mov    r12,QWORD PTR [rsp+0x50]
   140004540:	mov    r14,QWORD PTR [rsp+0x58]
   140004545:	xor    ecx,ecx
   140004547:	mov    WORD PTR [rax+r15*2],cx
   14000454c:	mov    r15,QWORD PTR [rsp+0x60]
   140004551:	mov    rax,rbx
   140004554:	add    rsp,0x20
   140004558:	pop    r13
   14000455a:	pop    rdi
   14000455b:	pop    rsi
   14000455c:	pop    rbp
   14000455d:	pop    rbx
   14000455e:	ret    
   14000455f:	lea    rcx,[rip+0x176e2]        # 0x14001bc48
   140004566:	call   0x140007590
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	rex push rdi
   140004572:	sub    rsp,0x20
   140004576:	movabs rax,0x7ffffffffffffffe
   140004580:	mov    rdi,rdx
   140004583:	cmp    rdx,rax
   140004586:	jbe    0x140004595
   140004588:	lea    rcx,[rip+0x176d1]        # 0x14001bc60
   14000458f:	call   0x140007534
   140004594:	int3   
   140004595:	mov    rax,QWORD PTR [rcx+0x18]
   140004599:	mov    QWORD PTR [rsp+0x30],rbx
   14000459e:	xor    ebx,ebx
   1400045a0:	cmp    rax,rdx
   1400045a3:	jae    0x1400045bf
   1400045a5:	mov    r8,QWORD PTR [rcx+0x10]
   1400045a9:	call   0x140004ea0
   1400045ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045b3:	test   rdi,rdi
   1400045b6:	setne  al
   1400045b9:	add    rsp,0x20
   1400045bd:	pop    rdi
   1400045be:	ret    
   1400045bf:	test   rdx,rdx
   1400045c2:	jne    0x1400045d4
   1400045c4:	mov    QWORD PTR [rcx+0x10],rbx
   1400045c8:	cmp    rax,0x8
   1400045cc:	jb     0x1400045d1
   1400045ce:	mov    rcx,QWORD PTR [rcx]
   1400045d1:	mov    WORD PTR [rcx],bx
   1400045d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045d9:	test   rdi,rdi
   1400045dc:	setne  al
   1400045df:	add    rsp,0x20
   1400045e3:	pop    rdi
   1400045e4:	ret    
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    QWORD PTR [rsp+0x18],r8
   1400045f5:	push   rbp
   1400045f6:	push   r12
   1400045f8:	sub    rsp,0x28
   1400045fc:	cmp    BYTE PTR [r8+0x69],0x0
   140004601:	mov    r12,rdx
   140004604:	mov    rbp,rcx
   140004607:	je     0x140004616
   140004609:	lea    rcx,[rip+0x17660]        # 0x14001bc70
   140004610:	call   0x140007590
   140004615:	int3   
   140004616:	mov    rdx,QWORD PTR [r8+0x10]
   14000461a:	lea    r9,[r8+0x10]
   14000461e:	mov    QWORD PTR [rsp+0x40],rbx
   140004623:	cmp    BYTE PTR [rdx+0x69],0x0
   140004627:	mov    QWORD PTR [rsp+0x48],rsi
   14000462c:	mov    rsi,r8
   14000462f:	jne    0x14000464e
   140004631:	mov    rax,QWORD PTR [rdx]
   140004634:	cmp    BYTE PTR [rax+0x69],0x0
   140004638:	jne    0x140004670
   14000463a:	nop    WORD PTR [rax+rax*1+0x0]
   140004640:	mov    rdx,rax
   140004643:	mov    rax,QWORD PTR [rax]
   140004646:	cmp    BYTE PTR [rax+0x69],0x0
   14000464a:	je     0x140004640
   14000464c:	jmp    0x140004670
   14000464e:	mov    rdx,QWORD PTR [r8+0x8]
   140004652:	cmp    BYTE PTR [rdx+0x69],0x0
   140004656:	jne    0x140004670
   140004658:	cmp    r8,QWORD PTR [rdx+0x10]
   14000465c:	jne    0x140004670
   14000465e:	mov    QWORD PTR [rsp+0x50],rdx
   140004663:	mov    r8,rdx
   140004666:	mov    rdx,QWORD PTR [rdx+0x8]
   14000466a:	cmp    BYTE PTR [rdx+0x69],0x0
   14000466e:	je     0x140004658
   140004670:	mov    QWORD PTR [rsp+0x50],rdx
   140004675:	mov    rcx,QWORD PTR [rsi]
   140004678:	mov    QWORD PTR [rsp+0x20],rdi
   14000467d:	cmp    BYTE PTR [rcx+0x69],0x0
   140004681:	je     0x140004688
   140004683:	mov    rdi,QWORD PTR [r9]
   140004686:	jmp    0x1400046a3
   140004688:	mov    rax,QWORD PTR [r9]
   14000468b:	cmp    BYTE PTR [rax+0x69],0x0
   14000468f:	je     0x140004696
   140004691:	mov    rdi,rcx
   140004694:	jmp    0x1400046a3
   140004696:	mov    rdi,QWORD PTR [rdx+0x10]
   14000469a:	cmp    rdx,rsi
   14000469d:	jne    0x140004743
   1400046a3:	cmp    BYTE PTR [rdi+0x69],0x0
   1400046a7:	mov    rbx,QWORD PTR [rsi+0x8]
   1400046ab:	jne    0x1400046b1
   1400046ad:	mov    QWORD PTR [rdi+0x8],rbx
   1400046b1:	mov    rax,QWORD PTR [rbp+0x8]
   1400046b5:	cmp    QWORD PTR [rax+0x8],rsi
   1400046b9:	jne    0x1400046c1
   1400046bb:	mov    QWORD PTR [rax+0x8],rdi
   1400046bf:	jmp    0x1400046cf
   1400046c1:	cmp    QWORD PTR [rbx],rsi
   1400046c4:	jne    0x1400046cb
   1400046c6:	mov    QWORD PTR [rbx],rdi
   1400046c9:	jmp    0x1400046cf
   1400046cb:	mov    QWORD PTR [rbx+0x10],rdi
   1400046cf:	mov    rdx,QWORD PTR [rbp+0x8]
   1400046d3:	cmp    QWORD PTR [rdx],rsi
   1400046d6:	jne    0x1400046ff
   1400046d8:	cmp    BYTE PTR [rdi+0x69],0x0
   1400046dc:	je     0x1400046e3
   1400046de:	mov    rcx,rbx
   1400046e1:	jmp    0x1400046fc
   1400046e3:	mov    rax,QWORD PTR [rdi]
   1400046e6:	mov    rcx,rdi
   1400046e9:	cmp    BYTE PTR [rax+0x69],0x0
   1400046ed:	jne    0x1400046fc
   1400046ef:	nop
   1400046f0:	mov    rcx,rax
   1400046f3:	mov    rax,QWORD PTR [rax]
   1400046f6:	cmp    BYTE PTR [rax+0x69],0x0
   1400046fa:	je     0x1400046f0
   1400046fc:	mov    QWORD PTR [rdx],rcx
   1400046ff:	mov    rdx,QWORD PTR [rbp+0x8]
   140004703:	cmp    QWORD PTR [rdx+0x10],rsi
   140004707:	jne    0x1400047ae
   14000470d:	cmp    BYTE PTR [rdi+0x69],0x0
   140004711:	je     0x14000471f
   140004713:	mov    rcx,rbx
   140004716:	mov    QWORD PTR [rdx+0x10],rbx
   14000471a:	jmp    0x1400047ae
   14000471f:	mov    rax,QWORD PTR [rdi+0x10]
   140004723:	mov    rcx,rdi
   140004726:	cmp    BYTE PTR [rax+0x69],0x0
   14000472a:	jne    0x14000473d
   14000472c:	nop    DWORD PTR [rax+0x0]
   140004730:	mov    rcx,rax
   140004733:	mov    rax,QWORD PTR [rax+0x10]
   140004737:	cmp    BYTE PTR [rax+0x69],0x0
   14000473b:	je     0x140004730
   14000473d:	mov    QWORD PTR [rdx+0x10],rcx
   140004741:	jmp    0x1400047ae
   140004743:	mov    QWORD PTR [rcx+0x8],rdx
   140004747:	mov    rax,QWORD PTR [rsi]
   14000474a:	mov    QWORD PTR [rdx],rax
   14000474d:	cmp    rdx,QWORD PTR [r9]
   140004750:	jne    0x140004757
   140004752:	mov    rbx,rdx
   140004755:	jmp    0x140004776
   140004757:	cmp    BYTE PTR [rdi+0x69],0x0
   14000475b:	mov    rbx,QWORD PTR [rdx+0x8]
   14000475f:	jne    0x140004765
   140004761:	mov    QWORD PTR [rdi+0x8],rbx
   140004765:	mov    QWORD PTR [rbx],rdi
   140004768:	mov    rax,QWORD PTR [r9]
   14000476b:	mov    QWORD PTR [rdx+0x10],rax
   14000476f:	mov    rax,QWORD PTR [r9]
   140004772:	mov    QWORD PTR [rax+0x8],rdx
   140004776:	mov    rax,QWORD PTR [rbp+0x8]
   14000477a:	cmp    QWORD PTR [rax+0x8],rsi
   14000477e:	jne    0x140004786
   140004780:	mov    QWORD PTR [rax+0x8],rdx
   140004784:	jmp    0x140004798
   140004786:	mov    rax,QWORD PTR [rsi+0x8]
   14000478a:	cmp    QWORD PTR [rax],rsi
   14000478d:	jne    0x140004794
   14000478f:	mov    QWORD PTR [rax],rdx
   140004792:	jmp    0x140004798
   140004794:	mov    QWORD PTR [rax+0x10],rdx
   140004798:	mov    rax,QWORD PTR [rsi+0x8]
   14000479c:	mov    QWORD PTR [rdx+0x8],rax
   1400047a0:	movzx  eax,BYTE PTR [rsi+0x68]
   1400047a4:	movzx  ecx,BYTE PTR [rdx+0x68]
   1400047a8:	mov    BYTE PTR [rdx+0x68],al
   1400047ab:	mov    BYTE PTR [rsi+0x68],cl
   1400047ae:	cmp    BYTE PTR [rsi+0x68],0x1
   1400047b2:	jne    0x140004933
   1400047b8:	mov    rax,QWORD PTR [rbp+0x8]
   1400047bc:	cmp    rdi,QWORD PTR [rax+0x8]
   1400047c0:	je     0x14000492f
   1400047c6:	cmp    BYTE PTR [rdi+0x68],0x1
   1400047ca:	jne    0x14000492f
   1400047d0:	mov    rcx,QWORD PTR [rbx]
   1400047d3:	cmp    rdi,rcx
   1400047d6:	jne    0x14000489f
   1400047dc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400047e0:	cmp    BYTE PTR [rcx+0x68],0x0
   1400047e4:	jne    0x14000483b
   1400047e6:	mov    BYTE PTR [rcx+0x68],0x1
   1400047ea:	mov    rcx,QWORD PTR [rbx+0x10]
   1400047ee:	mov    BYTE PTR [rbx+0x68],0x0
   1400047f2:	mov    rax,QWORD PTR [rcx]
   1400047f5:	mov    QWORD PTR [rbx+0x10],rax
   1400047f9:	mov    rax,QWORD PTR [rcx]
   1400047fc:	cmp    BYTE PTR [rax+0x69],0x0
   140004800:	jne    0x140004806
   140004802:	mov    QWORD PTR [rax+0x8],rbx
   140004806:	mov    rax,QWORD PTR [rbx+0x8]
   14000480a:	mov    QWORD PTR [rcx+0x8],rax
   14000480e:	mov    rax,QWORD PTR [rbp+0x8]
   140004812:	cmp    rbx,QWORD PTR [rax+0x8]
   140004816:	jne    0x14000481e
   140004818:	mov    QWORD PTR [rax+0x8],rcx
   14000481c:	jmp    0x140004830
   14000481e:	mov    rax,QWORD PTR [rbx+0x8]
   140004822:	cmp    rbx,QWORD PTR [rax]
   140004825:	jne    0x14000482c
   140004827:	mov    QWORD PTR [rax],rcx
   14000482a:	jmp    0x140004830
   14000482c:	mov    QWORD PTR [rax+0x10],rcx
   140004830:	mov    QWORD PTR [rcx],rbx
   140004833:	mov    QWORD PTR [rbx+0x8],rcx
   140004837:	mov    rcx,QWORD PTR [rbx+0x10]
   14000483b:	cmp    BYTE PTR [rcx+0x69],0x0
   14000483f:	jne    0x1400048d8
   140004845:	mov    rax,QWORD PTR [rcx]
   140004848:	cmp    BYTE PTR [rax+0x68],0x1
   14000484c:	jne    0x140004858
   14000484e:	mov    rax,QWORD PTR [rcx+0x10]
   140004852:	cmp    BYTE PTR [rax+0x68],0x1
   140004856:	je     0x1400048d4
   140004858:	mov    rax,QWORD PTR [rcx+0x10]
   14000485c:	cmp    BYTE PTR [rax+0x68],0x1
   140004860:	jne    0x14000487c
   140004862:	mov    rax,QWORD PTR [rcx]
   140004865:	mov    rdx,rcx
   140004868:	mov    BYTE PTR [rax+0x68],0x1
   14000486c:	mov    BYTE PTR [rcx+0x68],0x0
   140004870:	mov    rcx,rbp
   140004873:	call   0x140005050
   140004878:	mov    rcx,QWORD PTR [rbx+0x10]
   14000487c:	movzx  eax,BYTE PTR [rbx+0x68]
   140004880:	mov    rdx,rbx
   140004883:	mov    BYTE PTR [rcx+0x68],al
   140004886:	mov    BYTE PTR [rbx+0x68],0x1
   14000488a:	mov    rax,QWORD PTR [rcx+0x10]
   14000488e:	mov    rcx,rbp
   140004891:	mov    BYTE PTR [rax+0x68],0x1
   140004895:	call   0x140004ff0
   14000489a:	jmp    0x14000492f
   14000489f:	cmp    BYTE PTR [rcx+0x68],0x0
   1400048a3:	jne    0x1400048bb
   1400048a5:	mov    BYTE PTR [rcx+0x68],0x1
   1400048a9:	mov    rdx,rbx
   1400048ac:	mov    rcx,rbp
   1400048af:	mov    BYTE PTR [rbx+0x68],0x0
   1400048b3:	call   0x140005050
   1400048b8:	mov    rcx,QWORD PTR [rbx]
   1400048bb:	cmp    BYTE PTR [rcx+0x69],0x0
   1400048bf:	jne    0x1400048d8
   1400048c1:	mov    rax,QWORD PTR [rcx+0x10]
   1400048c5:	cmp    BYTE PTR [rax+0x68],0x1
   1400048c9:	jne    0x1400048ef
   1400048cb:	mov    rax,QWORD PTR [rcx]
   1400048ce:	cmp    BYTE PTR [rax+0x68],0x1
   1400048d2:	jne    0x1400048ef
   1400048d4:	mov    BYTE PTR [rcx+0x68],0x0
   1400048d8:	mov    rax,QWORD PTR [rbp+0x8]
   1400048dc:	mov    rdi,rbx
   1400048df:	mov    rbx,QWORD PTR [rbx+0x8]
   1400048e3:	cmp    rdi,QWORD PTR [rax+0x8]
   1400048e7:	jne    0x1400047c6
   1400048ed:	jmp    0x14000492f
   1400048ef:	mov    rax,QWORD PTR [rcx]
   1400048f2:	cmp    BYTE PTR [rax+0x68],0x1
   1400048f6:	jne    0x140004912
   1400048f8:	mov    rax,QWORD PTR [rcx+0x10]
   1400048fc:	mov    rdx,rcx
   1400048ff:	mov    BYTE PTR [rax+0x68],0x1
   140004903:	mov    BYTE PTR [rcx+0x68],0x0
   140004907:	mov    rcx,rbp
   14000490a:	call   0x140004ff0
   14000490f:	mov    rcx,QWORD PTR [rbx]
   140004912:	movzx  eax,BYTE PTR [rbx+0x68]
   140004916:	mov    rdx,rbx
   140004919:	mov    BYTE PTR [rcx+0x68],al
   14000491c:	mov    BYTE PTR [rbx+0x68],0x1
   140004920:	mov    rax,QWORD PTR [rcx]
   140004923:	mov    rcx,rbp
   140004926:	mov    BYTE PTR [rax+0x68],0x1
   14000492a:	call   0x140005050
   14000492f:	mov    BYTE PTR [rdi+0x68],0x1
   140004933:	cmp    QWORD PTR [rsi+0x58],0x8
   140004938:	mov    rdi,QWORD PTR [rsp+0x20]
   14000493d:	jb     0x140004948
   14000493f:	mov    rcx,QWORD PTR [rsi+0x40]
   140004943:	call   0x14000872c
   140004948:	xor    ebx,ebx
   14000494a:	mov    QWORD PTR [rsi+0x58],0x7
   140004952:	mov    QWORD PTR [rsi+0x50],rbx
   140004956:	mov    WORD PTR [rsi+0x40],bx
   14000495a:	cmp    QWORD PTR [rsi+0x30],0x8
   14000495f:	jb     0x14000496a
   140004961:	mov    rcx,QWORD PTR [rsi+0x18]
   140004965:	call   0x14000872c
   14000496a:	mov    QWORD PTR [rsi+0x30],0x7
   140004972:	mov    QWORD PTR [rsi+0x28],rbx
   140004976:	mov    rcx,rsi
   140004979:	mov    WORD PTR [rsi+0x18],bx
   14000497d:	call   0x14000872c
   140004982:	mov    rax,QWORD PTR [rbp+0x10]
   140004986:	mov    rsi,QWORD PTR [rsp+0x48]
   14000498b:	mov    rbx,QWORD PTR [rsp+0x40]
   140004990:	test   rax,rax
   140004993:	je     0x14000499c
   140004995:	dec    rax
   140004998:	mov    QWORD PTR [rbp+0x10],rax
   14000499c:	mov    rax,QWORD PTR [rsp+0x50]
   1400049a1:	mov    QWORD PTR [r12],rax
   1400049a5:	mov    rax,r12
   1400049a8:	add    rsp,0x28
   1400049ac:	pop    r12
   1400049ae:	pop    rbp
   1400049af:	ret    
   1400049b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400049b5:	mov    QWORD PTR [rsp+0x20],rbp
   1400049ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400049bf:	push   rsi
   1400049c0:	push   rdi
   1400049c1:	push   r12
   1400049c3:	push   r13
   1400049c5:	push   r14
   1400049c7:	push   r15
   1400049c9:	mov    r13,QWORD PTR [rip+0x1f848]        # 0x140024218
   1400049d0:	or     r14d,0xffffffff
   1400049d4:	mov    rbp,rdx
   1400049d7:	mov    rsi,QWORD PTR [r13+0x8]
   1400049db:	mov    r12,rcx
   1400049de:	mov    r15,r13
   1400049e1:	cmp    BYTE PTR [rsi+0x69],0x0
   1400049e5:	mov    QWORD PTR [rsp+0x48],rsi
   1400049ea:	mov    r10,rsi
   1400049ed:	jne    0x140004b2a
   1400049f3:	mov    r12,QWORD PTR [rdx+0x10]
   1400049f7:	mov    r14,QWORD PTR [rdx+0x18]
   1400049fb:	or     esi,0xffffffff
   1400049fe:	xchg   ax,ax
   140004a00:	lea    rdx,[r10+0x18]
   140004a04:	cmp    r14,0x8
   140004a08:	jb     0x140004a10
   140004a0a:	mov    rcx,QWORD PTR [rbp+0x0]
   140004a0e:	jmp    0x140004a13
   140004a10:	mov    rcx,rbp
   140004a13:	mov    r11,QWORD PTR [rdx+0x10]
   140004a17:	mov    rbx,QWORD PTR [rdx+0x18]
   140004a1b:	cmp    r11,r11
   140004a1e:	mov    rdi,r11
   140004a21:	cmp    rbx,0x8
   140004a25:	jb     0x140004a2c
   140004a27:	mov    r8,QWORD PTR [rdx]
   140004a2a:	jmp    0x140004a2f
   140004a2c:	mov    r8,rdx
   140004a2f:	cmp    r11,r12
   140004a32:	mov    r9,r12
   140004a35:	cmovb  r9,r11
   140004a39:	test   r9,r9
   140004a3c:	je     0x140004a56
   140004a3e:	xchg   ax,ax
   140004a40:	movzx  eax,WORD PTR [rcx]
   140004a43:	cmp    WORD PTR [r8],ax
   140004a47:	jne    0x140004aa0
   140004a49:	add    r8,0x2
   140004a4d:	add    rcx,0x2
   140004a51:	dec    r9
   140004a54:	jne    0x140004a40
   140004a56:	xor    r9d,r9d
   140004a59:	movsxd rax,r9d
   140004a5c:	test   r9d,r9d
   140004a5f:	jne    0x140004a72
   140004a61:	cmp    r11,r12
   140004a64:	jb     0x140004b0d
   140004a6a:	xor    eax,eax
   140004a6c:	cmp    r11,r12
   140004a6f:	setne  al
   140004a72:	test   eax,eax
   140004a74:	js     0x140004b0d
   140004a7a:	cmp    BYTE PTR [r15+0x69],0x0
   140004a7f:	je     0x140004af6
   140004a81:	cmp    rbx,0x8
   140004a85:	jb     0x140004a8a
   140004a87:	mov    rdx,QWORD PTR [rdx]
   140004a8a:	cmp    r12,r12
   140004a8d:	mov    r9,r12
   140004a90:	cmovb  r9,r12
   140004a94:	cmp    r14,0x8
   140004a98:	jb     0x140004ab0
   140004a9a:	mov    rcx,QWORD PTR [rbp+0x0]
   140004a9e:	jmp    0x140004ab3
   140004aa0:	cmp    WORD PTR [r8],ax
   140004aa4:	mov    r9d,0x1
   140004aaa:	cmovb  r9d,esi
   140004aae:	jmp    0x140004a59
   140004ab0:	mov    rcx,rbp
   140004ab3:	cmp    r9,rdi
   140004ab6:	mov    r8,rdi
   140004ab9:	cmovb  r8,r9
   140004abd:	test   r8,r8
   140004ac0:	je     0x140004ad7
   140004ac2:	movzx  eax,WORD PTR [rdx]
   140004ac5:	cmp    WORD PTR [rcx],ax
   140004ac8:	jne    0x140004afe
   140004aca:	add    rcx,0x2
   140004ace:	add    rdx,0x2
   140004ad2:	dec    r8
   140004ad5:	jne    0x140004ac2
   140004ad7:	xor    r8d,r8d
   140004ada:	movsxd rax,r8d
   140004add:	test   r8d,r8d
   140004ae0:	jne    0x140004aef
   140004ae2:	cmp    r9,rdi
   140004ae5:	jb     0x140004af3
   140004ae7:	xor    eax,eax
   140004ae9:	cmp    r9,rdi
   140004aec:	setne  al
   140004aef:	test   eax,eax
   140004af1:	jns    0x140004af6
   140004af3:	mov    r15,r10
   140004af6:	mov    r13,r10
   140004af9:	mov    r10,QWORD PTR [r10]
   140004afc:	jmp    0x140004b11
   140004afe:	cmp    WORD PTR [rcx],ax
   140004b01:	mov    r8d,0x1
   140004b07:	cmovb  r8d,esi
   140004b0b:	jmp    0x140004ada
   140004b0d:	mov    r10,QWORD PTR [r10+0x10]
   140004b11:	cmp    BYTE PTR [r10+0x69],0x0
   140004b16:	je     0x140004a00
   140004b1c:	mov    rsi,QWORD PTR [rsp+0x48]
   140004b21:	mov    r12,QWORD PTR [rsp+0x38]
   140004b26:	or     r14d,0xffffffff
   140004b2a:	cmp    BYTE PTR [r15+0x69],0x0
   140004b2f:	jne    0x140004b34
   140004b31:	mov    rsi,QWORD PTR [r15]
   140004b34:	cmp    BYTE PTR [rsi+0x69],0x0
   140004b38:	jne    0x140004be6
   140004b3e:	mov    r11,QWORD PTR [rbp+0x10]
   140004b42:	mov    rdi,QWORD PTR [rbp+0x18]
   140004b46:	mov    rbx,r11
   140004b49:	nop    DWORD PTR [rax+0x0]
   140004b50:	cmp    QWORD PTR [rsi+0x30],0x8
   140004b55:	mov    r10,QWORD PTR [rsi+0x28]
   140004b59:	lea    rcx,[rsi+0x18]
   140004b5d:	jb     0x140004b62
   140004b5f:	mov    rcx,QWORD PTR [rcx]
   140004b62:	cmp    rbx,r11
   140004b65:	mov    r9,r11
   140004b68:	cmovb  r9,rbx
   140004b6c:	cmp    rdi,0x8
   140004b70:	jb     0x140004b78
   140004b72:	mov    rdx,QWORD PTR [rbp+0x0]
   140004b76:	jmp    0x140004b7b
   140004b78:	mov    rdx,rbp
   140004b7b:	cmp    r9,r10
   140004b7e:	mov    r8,r10
   140004b81:	cmovb  r8,r9
   140004b85:	test   r8,r8
   140004b88:	je     0x140004ba5
   140004b8a:	nop    WORD PTR [rax+rax*1+0x0]
   140004b90:	movzx  eax,WORD PTR [rcx]
   140004b93:	cmp    WORD PTR [rdx],ax
   140004b96:	jne    0x140004bc7
   140004b98:	add    rdx,0x2
   140004b9c:	add    rcx,0x2
   140004ba0:	dec    r8
   140004ba3:	jne    0x140004b90
   140004ba5:	xor    r8d,r8d
   140004ba8:	movsxd rax,r8d
   140004bab:	test   r8d,r8d
   140004bae:	jne    0x140004bbd
   140004bb0:	cmp    r9,r10
   140004bb3:	jb     0x140004bd6
   140004bb5:	xor    eax,eax
   140004bb7:	cmp    r9,r10
   140004bba:	setne  al
   140004bbd:	test   eax,eax
   140004bbf:	js     0x140004bd6
   140004bc1:	mov    rsi,QWORD PTR [rsi+0x10]
   140004bc5:	jmp    0x140004bdc
   140004bc7:	cmp    WORD PTR [rdx],ax
   140004bca:	mov    r8d,0x1
   140004bd0:	cmovb  r8d,r14d
   140004bd4:	jmp    0x140004ba8
   140004bd6:	mov    r15,rsi
   140004bd9:	mov    rsi,QWORD PTR [rsi]
   140004bdc:	cmp    BYTE PTR [rsi+0x69],0x0
   140004be0:	je     0x140004b50
   140004be6:	mov    rbx,QWORD PTR [rsp+0x40]
   140004beb:	mov    rbp,QWORD PTR [rsp+0x50]
   140004bf0:	mov    QWORD PTR [r12],r13
   140004bf4:	mov    QWORD PTR [r12+0x8],r15
   140004bf9:	mov    rax,r12
   140004bfc:	pop    r15
   140004bfe:	pop    r14
   140004c00:	pop    r13
   140004c02:	pop    r12
   140004c04:	pop    rdi
   140004c05:	pop    rsi
   140004c06:	ret    
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x18],rbx
   140004c15:	push   rdi
   140004c16:	mov    rdi,QWORD PTR [rip+0x1f5fb]        # 0x140024218
   140004c1d:	mov    rbx,rcx
   140004c20:	mov    r9,QWORD PTR [rdi+0x8]
   140004c24:	cmp    BYTE PTR [r9+0x69],0x0
   140004c29:	jne    0x140004cd7
   140004c2f:	mov    r11,QWORD PTR [rcx+0x10]
   140004c33:	mov    QWORD PTR [rsp+0x10],rbp
   140004c38:	mov    QWORD PTR [rsp+0x18],rsi
   140004c3d:	mov    rsi,QWORD PTR [rcx+0x18]
   140004c41:	or     ebp,0xffffffff
   140004c44:	lea    rcx,[r9+0x18]
   140004c48:	cmp    rsi,0x8
   140004c4c:	jb     0x140004c53
   140004c4e:	mov    rdx,QWORD PTR [rbx]
   140004c51:	jmp    0x140004c56
   140004c53:	mov    rdx,rbx
   140004c56:	mov    r10,QWORD PTR [rcx+0x10]
   140004c5a:	cmp    r10,r10
   140004c5d:	cmp    QWORD PTR [rcx+0x18],0x8
   140004c62:	jb     0x140004c67
   140004c64:	mov    rcx,QWORD PTR [rcx]
   140004c67:	cmp    r10,r11
   140004c6a:	mov    r8,r11
   140004c6d:	cmovb  r8,r10
   140004c71:	test   r8,r8
   140004c74:	je     0x140004c8b
   140004c76:	movzx  eax,WORD PTR [rdx]
   140004c79:	cmp    WORD PTR [rcx],ax
   140004c7c:	jne    0x140004caf
   140004c7e:	add    rcx,0x2
   140004c82:	add    rdx,0x2
   140004c86:	dec    r8
   140004c89:	jne    0x140004c76
   140004c8b:	xor    r8d,r8d
   140004c8e:	movsxd rax,r8d
   140004c91:	test   r8d,r8d
   140004c94:	jne    0x140004ca3
   140004c96:	cmp    r10,r11
   140004c99:	jb     0x140004cbe
   140004c9b:	xor    eax,eax
   140004c9d:	cmp    r10,r11
   140004ca0:	setne  al
   140004ca3:	test   eax,eax
   140004ca5:	js     0x140004cbe
   140004ca7:	mov    rdi,r9
   140004caa:	mov    r9,QWORD PTR [r9]
   140004cad:	jmp    0x140004cc2
   140004caf:	cmp    WORD PTR [rcx],ax
   140004cb2:	mov    r8d,0x1
   140004cb8:	cmovb  r8d,ebp
   140004cbc:	jmp    0x140004c8e
   140004cbe:	mov    r9,QWORD PTR [r9+0x10]
   140004cc2:	cmp    BYTE PTR [r9+0x69],0x0
   140004cc7:	je     0x140004c44
   140004ccd:	mov    rsi,QWORD PTR [rsp+0x18]
   140004cd2:	mov    rbp,QWORD PTR [rsp+0x10]
   140004cd7:	mov    rax,rdi
   140004cda:	mov    rbx,QWORD PTR [rsp+0x20]
   140004cdf:	pop    rdi
   140004ce0:	ret    
   140004ce1:	int3   
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	sub    rsp,0x28
   140004cf4:	mov    rdx,QWORD PTR [rcx]
   140004cf7:	mov    rax,QWORD PTR [rdx]
   140004cfa:	movsxd rcx,DWORD PTR [rax+0x4]
   140004cfe:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140004d03:	test   rcx,rcx
   140004d06:	je     0x140004d0e
   140004d08:	mov    rax,QWORD PTR [rcx]
   140004d0b:	call   QWORD PTR [rax+0x10]
   140004d0e:	add    rsp,0x28
   140004d12:	ret    
   140004d13:	int3   
   140004d14:	int3   
   140004d15:	int3   
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	int3   
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	mov    QWORD PTR [rsp+0x10],rbx
   140004d25:	push   rdi
   140004d26:	sub    rsp,0x20
   140004d2a:	mov    rdi,rdx
   140004d2d:	mov    rbx,rcx
   140004d30:	cmp    rcx,rdx
   140004d33:	je     0x140004da4
   140004d35:	cmp    QWORD PTR [rcx+0x18],0x8
   140004d3a:	mov    QWORD PTR [rsp+0x30],rsi
   140004d3f:	jb     0x140004d49
   140004d41:	mov    rcx,QWORD PTR [rcx]
   140004d44:	call   0x14000872c
   140004d49:	xor    esi,esi
   140004d4b:	mov    QWORD PTR [rbx+0x18],0x7
   140004d53:	mov    QWORD PTR [rbx+0x10],rsi
   140004d57:	mov    WORD PTR [rbx],si
   140004d5a:	cmp    QWORD PTR [rdi+0x18],0x8
   140004d5f:	jae    0x140004d77
   140004d61:	mov    r8,QWORD PTR [rdi+0x10]
   140004d65:	mov    rdx,rdi
   140004d68:	mov    rcx,rbx
   140004d6b:	lea    r8,[r8+r8*1+0x2]
   140004d70:	call   0x140008250
   140004d75:	jmp    0x140004d80
   140004d77:	mov    rax,QWORD PTR [rdi]
   140004d7a:	mov    QWORD PTR [rbx],rax
   140004d7d:	mov    QWORD PTR [rdi],rsi
   140004d80:	mov    rax,QWORD PTR [rdi+0x10]
   140004d84:	mov    QWORD PTR [rbx+0x10],rax
   140004d88:	mov    rax,QWORD PTR [rdi+0x18]
   140004d8c:	mov    QWORD PTR [rbx+0x18],rax
   140004d90:	mov    QWORD PTR [rdi+0x10],rsi
   140004d94:	mov    QWORD PTR [rdi+0x18],0x7
   140004d9c:	mov    WORD PTR [rdi],si
   140004d9f:	mov    rsi,QWORD PTR [rsp+0x30]
   140004da4:	mov    rax,rbx
   140004da7:	mov    rbx,QWORD PTR [rsp+0x38]
   140004dac:	add    rsp,0x20
   140004db0:	pop    rdi
   140004db1:	ret    
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	mov    QWORD PTR [rsp+0x10],rbx
   140004dc5:	mov    QWORD PTR [rsp+0x18],rsi
   140004dca:	mov    QWORD PTR [rsp+0x20],rdi
   140004dcf:	push   r12
   140004dd1:	sub    rsp,0x20
   140004dd5:	mov    rax,QWORD PTR [rdx+0x10]
   140004dd9:	mov    rsi,r9
   140004ddc:	mov    r12,r8
   140004ddf:	mov    rdi,rdx
   140004de2:	mov    rbx,rcx
   140004de5:	cmp    rax,r8
   140004de8:	jae    0x140004df7
   140004dea:	lea    rcx,[rip+0x16e57]        # 0x14001bc48
   140004df1:	call   0x140007590
   140004df6:	int3   
   140004df7:	mov    rcx,QWORD PTR [rcx+0x10]
   140004dfb:	sub    rax,r8
   140004dfe:	cmp    rax,r9
   140004e01:	cmovb  rsi,rax
   140004e05:	or     rax,0xffffffffffffffff
   140004e09:	sub    rax,rcx
   140004e0c:	cmp    rax,rsi
   140004e0f:	ja     0x140004e1e
   140004e11:	lea    rcx,[rip+0x16e48]        # 0x14001bc60
   140004e18:	call   0x140007534
   140004e1d:	int3   
   140004e1e:	test   rsi,rsi
   140004e21:	je     0x140004e87
   140004e23:	mov    QWORD PTR [rsp+0x30],rbp
   140004e28:	lea    rbp,[rcx+rsi*1]
   140004e2c:	mov    rcx,rbx
   140004e2f:	mov    rdx,rbp
   140004e32:	call   0x140004570
   140004e37:	test   al,al
   140004e39:	je     0x140004e82
   140004e3b:	cmp    QWORD PTR [rdi+0x18],0x8
   140004e40:	jb     0x140004e45
   140004e42:	mov    rdi,QWORD PTR [rdi]
   140004e45:	cmp    QWORD PTR [rbx+0x18],0x8
   140004e4a:	jb     0x140004e51
   140004e4c:	mov    rcx,QWORD PTR [rbx]
   140004e4f:	jmp    0x140004e54
   140004e51:	mov    rcx,rbx
   140004e54:	mov    rax,QWORD PTR [rbx+0x10]
   140004e58:	lea    r8,[rsi+rsi*1]
   140004e5c:	lea    rdx,[rdi+r12*2]
   140004e60:	lea    rcx,[rcx+rax*2]
   140004e64:	call   0x140008250
   140004e69:	cmp    QWORD PTR [rbx+0x18],0x8
   140004e6e:	mov    QWORD PTR [rbx+0x10],rbp
   140004e72:	jb     0x140004e79
   140004e74:	mov    rax,QWORD PTR [rbx]
   140004e77:	jmp    0x140004e7c
   140004e79:	mov    rax,rbx
   140004e7c:	xor    ecx,ecx
   140004e7e:	mov    WORD PTR [rax+rbp*2],cx
   140004e82:	mov    rbp,QWORD PTR [rsp+0x30]
   140004e87:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e8c:	mov    rdi,QWORD PTR [rsp+0x48]
   140004e91:	mov    rax,rbx
   140004e94:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e99:	add    rsp,0x20
   140004e9d:	pop    r12
   140004e9f:	ret    
   140004ea0:	mov    QWORD PTR [rsp+0x18],r8
   140004ea5:	mov    QWORD PTR [rsp+0x10],rdx
   140004eaa:	mov    QWORD PTR [rsp+0x8],rcx
   140004eaf:	push   rbx
   140004eb0:	push   rsi
   140004eb1:	push   rdi
   140004eb2:	push   r12
   140004eb4:	push   r13
   140004eb6:	sub    rsp,0x40
   140004eba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004ec3:	mov    r13,r8
   140004ec6:	mov    rbx,rcx
   140004ec9:	mov    rdi,rdx
   140004ecc:	or     rdi,0x7
   140004ed0:	movabs r9,0x7ffffffffffffffe
   140004eda:	cmp    rdi,r9
   140004edd:	jbe    0x140004ee4
   140004edf:	mov    rdi,rdx
   140004ee2:	jmp    0x140004f15
   140004ee4:	mov    r8,QWORD PTR [rcx+0x18]
   140004ee8:	mov    rcx,r8
   140004eeb:	shr    rcx,1
   140004eee:	movabs rax,0xaaaaaaaaaaaaaaab
   140004ef8:	mul    rdi
   140004efb:	shr    rdx,1
   140004efe:	cmp    rcx,rdx
   140004f01:	jbe    0x140004f15
   140004f03:	mov    rax,r9
   140004f06:	sub    rax,rcx
   140004f09:	cmp    r8,rax
   140004f0c:	lea    rdi,[rcx+r8*1]
   140004f10:	jbe    0x140004f15
   140004f12:	mov    rdi,r9
   140004f15:	lea    rcx,[rdi+0x1]
   140004f19:	xor    r12d,r12d
   140004f1c:	mov    esi,r12d
   140004f1f:	test   rcx,rcx
   140004f22:	je     0x140004f7b
   140004f24:	movabs rax,0x7fffffffffffffff
   140004f2e:	cmp    rcx,rax
   140004f31:	ja     0x140004f43
   140004f33:	add    rcx,rcx
   140004f36:	call   0x140008790
   140004f3b:	mov    rsi,rax
   140004f3e:	test   rax,rax
   140004f41:	jne    0x140004f7b
   140004f43:	mov    QWORD PTR [rsp+0x88],r12
   140004f4b:	lea    rdx,[rsp+0x88]
   140004f53:	lea    rcx,[rsp+0x28]
   140004f58:	call   0x140008104
   140004f5d:	lea    rax,[rip+0x134ec]        # 0x140018450
   140004f64:	mov    QWORD PTR [rsp+0x28],rax
   140004f69:	lea    rdx,[rip+0x1a730]        # 0x14001f6a0
   140004f70:	lea    rcx,[rsp+0x28]
   140004f75:	call   0x140009498
   140004f7a:	nop
   140004f7b:	jmp    0x140004f9a
   140004f7d:	xor    r12d,r12d
   140004f80:	mov    rbx,QWORD PTR [rsp+0x70]
   140004f85:	mov    r13,QWORD PTR [rsp+0x80]
   140004f8d:	mov    rdi,QWORD PTR [rsp+0x78]
   140004f92:	mov    rsi,QWORD PTR [rsp+0x88]
   140004f9a:	test   r13,r13
   140004f9d:	je     0x140004fbb
   140004f9f:	cmp    QWORD PTR [rbx+0x18],0x8
   140004fa4:	jb     0x140004fab
   140004fa6:	mov    rdx,QWORD PTR [rbx]
   140004fa9:	jmp    0x140004fae
   140004fab:	mov    rdx,rbx
   140004fae:	lea    r8,[r13+r13*1+0x0]
   140004fb3:	mov    rcx,rsi
   140004fb6:	call   0x140008250
   140004fbb:	cmp    QWORD PTR [rbx+0x18],0x8
   140004fc0:	jb     0x140004fca
   140004fc2:	mov    rcx,QWORD PTR [rbx]
   140004fc5:	call   0x14000872c
   140004fca:	mov    QWORD PTR [rbx],rsi
   140004fcd:	mov    QWORD PTR [rbx+0x18],rdi
   140004fd1:	mov    QWORD PTR [rbx+0x10],r13
   140004fd5:	cmp    rdi,0x8
   140004fd9:	cmovae rbx,rsi
   140004fdd:	mov    WORD PTR [rbx+r13*2],r12w
   140004fe2:	add    rsp,0x40
   140004fe6:	pop    r13
   140004fe8:	pop    r12
   140004fea:	pop    rdi
   140004feb:	pop    rsi
   140004fec:	pop    rbx
   140004fed:	ret    
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	mov    r8,QWORD PTR [rdx+0x10]
   140004ff4:	mov    rax,QWORD PTR [r8]
   140004ff7:	mov    QWORD PTR [rdx+0x10],rax
   140004ffb:	mov    rax,QWORD PTR [r8]
   140004ffe:	cmp    BYTE PTR [rax+0x69],0x0
   140005002:	jne    0x140005008
   140005004:	mov    QWORD PTR [rax+0x8],rdx
   140005008:	mov    rax,QWORD PTR [rdx+0x8]
   14000500c:	mov    QWORD PTR [r8+0x8],rax
   140005010:	mov    rax,QWORD PTR [rcx+0x8]
   140005014:	cmp    rdx,QWORD PTR [rax+0x8]
   140005018:	jne    0x140005026
   14000501a:	mov    QWORD PTR [rax+0x8],r8
   14000501e:	mov    QWORD PTR [r8],rdx
   140005021:	mov    QWORD PTR [rdx+0x8],r8
   140005025:	ret    
   140005026:	mov    rax,QWORD PTR [rdx+0x8]
   14000502a:	cmp    rdx,QWORD PTR [rax]
   14000502d:	jne    0x14000503a
   14000502f:	mov    QWORD PTR [rax],r8
   140005032:	mov    QWORD PTR [r8],rdx
   140005035:	mov    QWORD PTR [rdx+0x8],r8
   140005039:	ret    
   14000503a:	mov    QWORD PTR [rax+0x10],r8
   14000503e:	mov    QWORD PTR [r8],rdx
   140005041:	mov    QWORD PTR [rdx+0x8],r8
   140005045:	ret    
   140005046:	int3   
   140005047:	int3   
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	mov    r8,QWORD PTR [rdx]
   140005053:	mov    rax,QWORD PTR [r8+0x10]
   140005057:	mov    QWORD PTR [rdx],rax
   14000505a:	mov    rax,QWORD PTR [r8+0x10]
   14000505e:	cmp    BYTE PTR [rax+0x69],0x0
   140005062:	jne    0x140005068
   140005064:	mov    QWORD PTR [rax+0x8],rdx
   140005068:	mov    rax,QWORD PTR [rdx+0x8]
   14000506c:	mov    QWORD PTR [r8+0x8],rax
   140005070:	mov    rax,QWORD PTR [rcx+0x8]
   140005074:	cmp    rdx,QWORD PTR [rax+0x8]
   140005078:	jne    0x140005087
   14000507a:	mov    QWORD PTR [rax+0x8],r8
   14000507e:	mov    QWORD PTR [r8+0x10],rdx
   140005082:	mov    QWORD PTR [rdx+0x8],r8
   140005086:	ret    
   140005087:	mov    rax,QWORD PTR [rdx+0x8]
   14000508b:	cmp    rdx,QWORD PTR [rax+0x10]
   14000508f:	jne    0x14000509e
   140005091:	mov    QWORD PTR [rax+0x10],r8
   140005095:	mov    QWORD PTR [r8+0x10],rdx
   140005099:	mov    QWORD PTR [rdx+0x8],r8
   14000509d:	ret    
   14000509e:	mov    QWORD PTR [rax],r8
   1400050a1:	mov    QWORD PTR [r8+0x10],rdx
   1400050a5:	mov    QWORD PTR [rdx+0x8],r8
   1400050a9:	ret    
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	int3   
   1400050ad:	int3   
   1400050ae:	int3   
   1400050af:	int3   
   1400050b0:	rex push rdi
   1400050b2:	sub    rsp,0x30
   1400050b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400050bf:	mov    QWORD PTR [rsp+0x40],rbx
   1400050c4:	mov    QWORD PTR [rsp+0x58],rsi
   1400050c9:	lea    rdx,[rsp+0x50]
   1400050ce:	call   0x140001850
   1400050d3:	nop
   1400050d4:	mov    rcx,rax
   1400050d7:	call   0x140005150
   1400050dc:	mov    rsi,rax
   1400050df:	mov    rdi,QWORD PTR [rsp+0x50]
   1400050e4:	test   rdi,rdi
   1400050e7:	je     0x140005131
   1400050e9:	xor    edx,edx
   1400050eb:	lea    rcx,[rsp+0x48]
   1400050f0:	call   0x1400076a4
   1400050f5:	mov    rax,QWORD PTR [rdi+0x8]
   1400050f9:	test   rax,rax
   1400050fc:	je     0x14000510b
   1400050fe:	cmp    rax,0xffffffffffffffff
   140005102:	jae    0x14000510b
   140005104:	dec    rax
   140005107:	mov    QWORD PTR [rdi+0x8],rax
   14000510b:	xor    ebx,ebx
   14000510d:	cmp    QWORD PTR [rdi+0x8],rbx
   140005111:	cmove  rbx,rdi
   140005115:	lea    rcx,[rsp+0x48]
   14000511a:	call   0x1400076d4
   14000511f:	test   rbx,rbx
   140005122:	je     0x140005131
   140005124:	mov    rax,QWORD PTR [rbx]
   140005127:	mov    edx,0x1
   14000512c:	mov    rcx,rbx
   14000512f:	call   QWORD PTR [rax]
   140005131:	mov    rax,QWORD PTR [rsi]
   140005134:	mov    dl,0x20
   140005136:	mov    rcx,rsi
   140005139:	call   QWORD PTR [rax+0x50]
   14000513c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005141:	mov    rsi,QWORD PTR [rsp+0x58]
   140005146:	add    rsp,0x30
   14000514a:	pop    rdi
   14000514b:	ret    
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	rex push rbp
   140005152:	push   rsi
   140005153:	push   rdi
   140005154:	sub    rsp,0x40
   140005158:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005161:	mov    QWORD PTR [rsp+0x78],rbx
   140005166:	mov    rbp,rcx
   140005169:	xor    edx,edx
   14000516b:	lea    rcx,[rsp+0x68]
   140005170:	call   0x1400076a4
   140005175:	nop
   140005176:	mov    rsi,QWORD PTR [rip+0x1f07b]        # 0x1400241f8
   14000517d:	mov    QWORD PTR [rsp+0x70],rsi
   140005182:	mov    rdi,QWORD PTR [rip+0x1db4f]        # 0x140022cd8
   140005189:	test   rdi,rdi
   14000518c:	jne    0x1400051cb
   14000518e:	xor    edx,edx
   140005190:	lea    rcx,[rsp+0x60]
   140005195:	call   0x1400076a4
   14000519a:	cmp    QWORD PTR [rip+0x1db37],rdi        # 0x140022cd8
   1400051a1:	jne    0x1400051ba
   1400051a3:	mov    eax,DWORD PTR [rip+0x1daff]        # 0x140022ca8
   1400051a9:	inc    eax
   1400051ab:	mov    DWORD PTR [rip+0x1daf7],eax        # 0x140022ca8
   1400051b1:	cdqe   
   1400051b3:	mov    QWORD PTR [rip+0x1db1e],rax        # 0x140022cd8
   1400051ba:	lea    rcx,[rsp+0x60]
   1400051bf:	call   0x1400076d4
   1400051c4:	mov    rdi,QWORD PTR [rip+0x1db0d]        # 0x140022cd8
   1400051cb:	mov    rcx,QWORD PTR [rbp+0x0]
   1400051cf:	cmp    rdi,QWORD PTR [rcx+0x18]
   1400051d3:	jae    0x1400051e8
   1400051d5:	mov    rax,QWORD PTR [rcx+0x10]
   1400051d9:	mov    rbx,QWORD PTR [rax+rdi*8]
   1400051dd:	test   rbx,rbx
   1400051e0:	jne    0x140005284
   1400051e6:	jmp    0x1400051ea
   1400051e8:	xor    ebx,ebx
   1400051ea:	cmp    BYTE PTR [rcx+0x24],0x0
   1400051ee:	je     0x140005203
   1400051f0:	call   0x1400071bc
   1400051f5:	cmp    rdi,QWORD PTR [rax+0x18]
   1400051f9:	jae    0x140005208
   1400051fb:	mov    rax,QWORD PTR [rax+0x10]
   1400051ff:	mov    rbx,QWORD PTR [rax+rdi*8]
   140005203:	test   rbx,rbx
   140005206:	jne    0x140005284
   140005208:	test   rsi,rsi
   14000520b:	je     0x140005212
   14000520d:	mov    rbx,rsi
   140005210:	jmp    0x140005284
   140005212:	mov    rdx,rbp
   140005215:	lea    rcx,[rsp+0x70]
   14000521a:	call   0x140001150
   14000521f:	cmp    rax,0xffffffffffffffff
   140005223:	jne    0x140005248
   140005225:	lea    rdx,[rip+0x16a64]        # 0x14001bc90
   14000522c:	lea    rcx,[rsp+0x28]
   140005231:	call   0x140008188
   140005236:	lea    rdx,[rip+0x1a403]        # 0x14001f640
   14000523d:	lea    rcx,[rsp+0x28]
   140005242:	call   0x140009498
   140005247:	int3   
   140005248:	mov    rbx,QWORD PTR [rsp+0x70]
   14000524d:	mov    QWORD PTR [rip+0x1efa4],rbx        # 0x1400241f8
   140005254:	xor    edx,edx
   140005256:	lea    rcx,[rsp+0x60]
   14000525b:	call   0x1400076a4
   140005260:	mov    rcx,QWORD PTR [rbx+0x8]
   140005264:	cmp    rcx,0xffffffffffffffff
   140005268:	jae    0x140005271
   14000526a:	inc    rcx
   14000526d:	mov    QWORD PTR [rbx+0x8],rcx
   140005271:	lea    rcx,[rsp+0x60]
   140005276:	call   0x1400076d4
   14000527b:	mov    rcx,rbx
   14000527e:	call   0x1400070ec
   140005283:	nop
   140005284:	lea    rcx,[rsp+0x68]
   140005289:	call   0x1400076d4
   14000528e:	mov    rax,rbx
   140005291:	mov    rbx,QWORD PTR [rsp+0x78]
   140005296:	add    rsp,0x40
   14000529a:	pop    rdi
   14000529b:	pop    rsi
   14000529c:	pop    rbp
   14000529d:	ret    
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	mov    rax,rsp
   1400052a3:	mov    QWORD PTR [rax+0x8],rcx
   1400052a7:	push   rdi
   1400052a8:	push   r12
   1400052aa:	push   r13
   1400052ac:	push   r14
   1400052ae:	push   r15
   1400052b0:	sub    rsp,0x40
   1400052b4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400052bd:	mov    QWORD PTR [rax+0x18],rbx
   1400052c1:	mov    QWORD PTR [rax+0x20],rsi
   1400052c5:	mov    r13,rdx
   1400052c8:	mov    rsi,rcx
   1400052cb:	xor    ebx,ebx
   1400052cd:	mov    DWORD PTR [rsp+0x78],ebx
   1400052d1:	mov    r14,QWORD PTR [rdx+0x10]
   1400052d5:	mov    rax,QWORD PTR [rcx]
   1400052d8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400052dc:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400052e1:	test   rdi,rdi
   1400052e4:	jle    0x1400052f0
   1400052e6:	cmp    rdi,r14
   1400052e9:	jbe    0x1400052f0
   1400052eb:	sub    rdi,r14
   1400052ee:	jmp    0x1400052f2
   1400052f0:	xor    edi,edi
   1400052f2:	mov    r15,rsi
   1400052f5:	mov    QWORD PTR [rsp+0x28],rsi
   1400052fa:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400052ff:	test   rcx,rcx
   140005302:	je     0x14000530b
   140005304:	mov    rax,QWORD PTR [rcx]
   140005307:	call   QWORD PTR [rax+0x8]
   14000530a:	nop
   14000530b:	mov    rax,QWORD PTR [rsi]
   14000530e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005312:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140005317:	jne    0x140005328
   140005319:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000531e:	test   rcx,rcx
   140005321:	je     0x140005328
   140005323:	call   0x1400022d0
   140005328:	mov    rax,QWORD PTR [rsi]
   14000532b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000532f:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140005334:	sete   al
   140005337:	mov    BYTE PTR [rsp+0x30],al
   14000533b:	test   al,al
   14000533d:	jne    0x140005349
   14000533f:	mov    ebx,0x4
   140005344:	jmp    0x140005477
   140005349:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   14000534d:	and    eax,0x1c0
   140005352:	mov    r12d,0xffff
   140005358:	cmp    eax,0x40
   14000535b:	je     0x1400053c6
   14000535d:	nop    DWORD PTR [rax]
   140005360:	test   rdi,rdi
   140005363:	je     0x1400053c2
   140005365:	mov    rax,QWORD PTR [rsi]
   140005368:	movsxd rcx,DWORD PTR [rax+0x4]
   14000536c:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   140005372:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005377:	mov    rax,QWORD PTR [rcx+0x48]
   14000537b:	cmp    QWORD PTR [rax],0x0
   14000537f:	je     0x1400053a0
   140005381:	mov    rax,QWORD PTR [rcx+0x60]
   140005385:	cmp    DWORD PTR [rax],0x0
   140005388:	jle    0x1400053a0
   14000538a:	dec    DWORD PTR [rax]
   14000538c:	mov    rcx,QWORD PTR [rcx+0x48]
   140005390:	mov    rdx,QWORD PTR [rcx]
   140005393:	lea    rax,[rdx+0x2]
   140005397:	mov    QWORD PTR [rcx],rax
   14000539a:	mov    WORD PTR [rdx],r8w
   14000539e:	jmp    0x1400053ae
   1400053a0:	mov    rax,QWORD PTR [rcx]
   1400053a3:	movzx  edx,r8w
   1400053a7:	call   QWORD PTR [rax+0x18]
   1400053aa:	movzx  r8d,ax
   1400053ae:	cmp    r12w,r8w
   1400053b2:	jne    0x1400053bd
   1400053b4:	or     ebx,0x4
   1400053b7:	mov    DWORD PTR [rsp+0x78],ebx
   1400053bb:	jmp    0x1400053c2
   1400053bd:	dec    rdi
   1400053c0:	jmp    0x140005360
   1400053c2:	test   ebx,ebx
   1400053c4:	jne    0x1400053f5
   1400053c6:	cmp    QWORD PTR [r13+0x18],0x8
   1400053cb:	jb     0x1400053d1
   1400053cd:	mov    r13,QWORD PTR [r13+0x0]
   1400053d1:	mov    rax,QWORD PTR [rsi]
   1400053d4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400053d8:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400053dd:	mov    rax,QWORD PTR [rcx]
   1400053e0:	mov    r8,r14
   1400053e3:	mov    rdx,r13
   1400053e6:	call   QWORD PTR [rax+0x48]
   1400053e9:	cmp    rax,r14
   1400053ec:	je     0x1400053f5
   1400053ee:	mov    ebx,0x4
   1400053f3:	jmp    0x140005453
   1400053f5:	test   rdi,rdi
   1400053f8:	je     0x140005457
   1400053fa:	mov    rax,QWORD PTR [rsi]
   1400053fd:	movsxd rcx,DWORD PTR [rax+0x4]
   140005401:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   140005407:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000540c:	mov    rax,QWORD PTR [rcx+0x48]
   140005410:	cmp    QWORD PTR [rax],0x0
   140005414:	je     0x140005435
   140005416:	mov    rax,QWORD PTR [rcx+0x60]
   14000541a:	cmp    DWORD PTR [rax],0x0
   14000541d:	jle    0x140005435
   14000541f:	dec    DWORD PTR [rax]
   140005421:	mov    rcx,QWORD PTR [rcx+0x48]
   140005425:	mov    rdx,QWORD PTR [rcx]
   140005428:	lea    rax,[rdx+0x2]
   14000542c:	mov    QWORD PTR [rcx],rax
   14000542f:	mov    WORD PTR [rdx],r8w
   140005433:	jmp    0x140005443
   140005435:	mov    rax,QWORD PTR [rcx]
   140005438:	movzx  edx,r8w
   14000543c:	call   QWORD PTR [rax+0x18]
   14000543f:	movzx  r8d,ax
   140005443:	cmp    r12w,r8w
   140005447:	jne    0x14000544e
   140005449:	or     ebx,0x4
   14000544c:	jmp    0x140005453
   14000544e:	dec    rdi
   140005451:	jmp    0x1400053f5
   140005453:	mov    DWORD PTR [rsp+0x78],ebx
   140005457:	mov    rax,QWORD PTR [rsi]
   14000545a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000545e:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140005467:	jmp    0x140005477
   140005469:	mov    rsi,QWORD PTR [rsp+0x70]
   14000546e:	mov    ebx,DWORD PTR [rsp+0x78]
   140005472:	mov    r15,QWORD PTR [rsp+0x28]
   140005477:	mov    rax,QWORD PTR [rsi]
   14000547a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000547e:	add    rcx,rsi
   140005481:	test   ebx,ebx
   140005483:	je     0x14000549d
   140005485:	mov    edx,DWORD PTR [rcx+0x10]
   140005488:	or     edx,ebx
   14000548a:	cmp    QWORD PTR [rcx+0x48],0x0
   14000548f:	jne    0x140005494
   140005491:	or     edx,0x4
   140005494:	xor    r8d,r8d
   140005497:	call   0x140001730
   14000549c:	nop
   14000549d:	call   0x140007754
   1400054a2:	test   al,al
   1400054a4:	jne    0x1400054af
   1400054a6:	mov    rcx,r15
   1400054a9:	call   0x140003d10
   1400054ae:	nop
   1400054af:	mov    rax,QWORD PTR [r15]
   1400054b2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400054b6:	mov    rcx,QWORD PTR [rcx+r15*1+0x48]
   1400054bb:	test   rcx,rcx
   1400054be:	je     0x1400054c6
   1400054c0:	mov    rax,QWORD PTR [rcx]
   1400054c3:	call   QWORD PTR [rax+0x10]
   1400054c6:	mov    rax,rsi
   1400054c9:	lea    r11,[rsp+0x40]
   1400054ce:	mov    rbx,QWORD PTR [r11+0x40]
   1400054d2:	mov    rsi,QWORD PTR [r11+0x48]
   1400054d6:	mov    rsp,r11
   1400054d9:	pop    r15
   1400054db:	pop    r14
   1400054dd:	pop    r13
   1400054df:	pop    r12
   1400054e1:	pop    rdi
   1400054e2:	ret    
   1400054e3:	int3   
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400054f5:	push   rdi
   1400054f6:	push   r12
   1400054f8:	push   r13
   1400054fa:	sub    rsp,0x40
   1400054fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005507:	mov    QWORD PTR [rsp+0x70],rbx
   14000550c:	mov    QWORD PTR [rsp+0x78],rsi
   140005511:	mov    rsi,rcx
   140005514:	xor    ebx,ebx
   140005516:	mov    DWORD PTR [rsp+0x68],ebx
   14000551a:	mov    rax,QWORD PTR [rcx]
   14000551d:	movsxd rcx,DWORD PTR [rax+0x4]
   140005521:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140005526:	test   rdi,rdi
   140005529:	jle    0x140005536
   14000552b:	cmp    rdi,0x1
   14000552f:	jle    0x140005536
   140005531:	dec    rdi
   140005534:	jmp    0x140005538
   140005536:	xor    edi,edi
   140005538:	mov    r13,rsi
   14000553b:	mov    QWORD PTR [rsp+0x28],rsi
   140005540:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005545:	test   rcx,rcx
   140005548:	je     0x140005551
   14000554a:	mov    rax,QWORD PTR [rcx]
   14000554d:	call   QWORD PTR [rax+0x8]
   140005550:	nop
   140005551:	mov    rax,QWORD PTR [rsi]
   140005554:	movsxd rcx,DWORD PTR [rax+0x4]
   140005558:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000555d:	jne    0x14000556e
   14000555f:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140005564:	test   rcx,rcx
   140005567:	je     0x14000556e
   140005569:	call   0x1400022d0
   14000556e:	mov    rax,QWORD PTR [rsi]
   140005571:	movsxd rcx,DWORD PTR [rax+0x4]
   140005575:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000557a:	sete   al
   14000557d:	mov    BYTE PTR [rsp+0x30],al
   140005581:	test   al,al
   140005583:	jne    0x14000558f
   140005585:	mov    ebx,0x4
   14000558a:	jmp    0x1400056c2
   14000558f:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140005593:	and    eax,0x1c0
   140005598:	mov    r12d,0xffff
   14000559e:	cmp    eax,0x40
   1400055a1:	je     0x14000560d
   1400055a3:	test   rdi,rdi
   1400055a6:	jle    0x140005605
   1400055a8:	mov    rax,QWORD PTR [rsi]
   1400055ab:	movsxd rcx,DWORD PTR [rax+0x4]
   1400055af:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   1400055b5:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400055ba:	mov    rax,QWORD PTR [rcx+0x48]
   1400055be:	cmp    QWORD PTR [rax],0x0
   1400055c2:	je     0x1400055e3
   1400055c4:	mov    rax,QWORD PTR [rcx+0x60]
   1400055c8:	cmp    DWORD PTR [rax],0x0
   1400055cb:	jle    0x1400055e3
   1400055cd:	dec    DWORD PTR [rax]
   1400055cf:	mov    rcx,QWORD PTR [rcx+0x48]
   1400055d3:	mov    rdx,QWORD PTR [rcx]
   1400055d6:	lea    rax,[rdx+0x2]
   1400055da:	mov    QWORD PTR [rcx],rax
   1400055dd:	mov    WORD PTR [rdx],r8w
   1400055e1:	jmp    0x1400055f1
   1400055e3:	mov    rax,QWORD PTR [rcx]
   1400055e6:	movzx  edx,r8w
   1400055ea:	call   QWORD PTR [rax+0x18]
   1400055ed:	movzx  r8d,ax
   1400055f1:	cmp    r12w,r8w
   1400055f5:	jne    0x140005600
   1400055f7:	or     ebx,0x4
   1400055fa:	mov    DWORD PTR [rsp+0x68],ebx
   1400055fe:	jmp    0x140005605
   140005600:	dec    rdi
   140005603:	jmp    0x1400055a3
   140005605:	test   ebx,ebx
   140005607:	jne    0x1400056a2
   14000560d:	mov    rax,QWORD PTR [rsi]
   140005610:	movsxd rcx,DWORD PTR [rax+0x4]
   140005614:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005619:	mov    rax,QWORD PTR [rcx]
   14000561c:	mov    r8d,0x1
   140005622:	lea    rdx,[rip+0x1661b]        # 0x14001bc44
   140005629:	call   QWORD PTR [rax+0x48]
   14000562c:	cmp    rax,0x1
   140005630:	je     0x140005640
   140005632:	mov    ebx,0x4
   140005637:	jmp    0x14000569e
   140005639:	nop    DWORD PTR [rax+0x0]
   140005640:	test   rdi,rdi
   140005643:	jle    0x1400056a2
   140005645:	mov    rax,QWORD PTR [rsi]
   140005648:	movsxd rcx,DWORD PTR [rax+0x4]
   14000564c:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   140005652:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005657:	mov    rax,QWORD PTR [rcx+0x48]
   14000565b:	cmp    QWORD PTR [rax],0x0
   14000565f:	je     0x140005680
   140005661:	mov    rax,QWORD PTR [rcx+0x60]
   140005665:	cmp    DWORD PTR [rax],0x0
   140005668:	jle    0x140005680
   14000566a:	dec    DWORD PTR [rax]
   14000566c:	mov    rcx,QWORD PTR [rcx+0x48]
   140005670:	mov    rdx,QWORD PTR [rcx]
   140005673:	lea    rax,[rdx+0x2]
   140005677:	mov    QWORD PTR [rcx],rax
   14000567a:	mov    WORD PTR [rdx],r8w
   14000567e:	jmp    0x14000568e
   140005680:	mov    rax,QWORD PTR [rcx]
   140005683:	movzx  edx,r8w
   140005687:	call   QWORD PTR [rax+0x18]
   14000568a:	movzx  r8d,ax
   14000568e:	cmp    r12w,r8w
   140005692:	jne    0x140005699
   140005694:	or     ebx,0x4
   140005697:	jmp    0x14000569e
   140005699:	dec    rdi
   14000569c:	jmp    0x140005640
   14000569e:	mov    DWORD PTR [rsp+0x68],ebx
   1400056a2:	mov    rax,QWORD PTR [rsi]
   1400056a5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400056a9:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400056b2:	jmp    0x1400056c2
   1400056b4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400056b9:	mov    ebx,DWORD PTR [rsp+0x68]
   1400056bd:	mov    r13,QWORD PTR [rsp+0x28]
   1400056c2:	mov    rax,QWORD PTR [rsi]
   1400056c5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400056c9:	add    rcx,rsi
   1400056cc:	test   ebx,ebx
   1400056ce:	je     0x1400056e8
   1400056d0:	mov    edx,DWORD PTR [rcx+0x10]
   1400056d3:	or     edx,ebx
   1400056d5:	cmp    QWORD PTR [rcx+0x48],0x0
   1400056da:	jne    0x1400056df
   1400056dc:	or     edx,0x4
   1400056df:	xor    r8d,r8d
   1400056e2:	call   0x140001730
   1400056e7:	nop
   1400056e8:	call   0x140007754
   1400056ed:	test   al,al
   1400056ef:	jne    0x1400056fa
   1400056f1:	mov    rcx,r13
   1400056f4:	call   0x140003d10
   1400056f9:	nop
   1400056fa:	mov    rax,QWORD PTR [r13+0x0]
   1400056fe:	movsxd rcx,DWORD PTR [rax+0x4]
   140005702:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   140005707:	test   rcx,rcx
   14000570a:	je     0x140005712
   14000570c:	mov    rax,QWORD PTR [rcx]
   14000570f:	call   QWORD PTR [rax+0x10]
   140005712:	mov    rax,rsi
   140005715:	mov    rbx,QWORD PTR [rsp+0x70]
   14000571a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000571f:	add    rsp,0x40
   140005723:	pop    r13
   140005725:	pop    r12
   140005727:	pop    rdi
   140005728:	ret    
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	int3   
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	mov    QWORD PTR [rsp+0x8],rbx
   140005735:	push   rdi
   140005736:	sub    rsp,0x20
   14000573a:	cmp    QWORD PTR [rcx+0x40],0x8
   14000573f:	mov    rbx,rcx
   140005742:	jb     0x14000574d
   140005744:	mov    rcx,QWORD PTR [rcx+0x28]
   140005748:	call   0x14000872c
   14000574d:	xor    edi,edi
   14000574f:	mov    QWORD PTR [rbx+0x40],0x7
   140005757:	mov    QWORD PTR [rbx+0x38],rdi
   14000575b:	mov    WORD PTR [rbx+0x28],di
   14000575f:	cmp    QWORD PTR [rbx+0x18],0x8
   140005764:	jb     0x14000576e
   140005766:	mov    rcx,QWORD PTR [rbx]
   140005769:	call   0x14000872c
   14000576e:	mov    QWORD PTR [rbx+0x18],0x7
   140005776:	mov    QWORD PTR [rbx+0x10],rdi
   14000577a:	mov    WORD PTR [rbx],di
   14000577d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005782:	add    rsp,0x20
   140005786:	pop    rdi
   140005787:	ret    
   140005788:	int3   
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	rex push rbx
   140005792:	sub    rsp,0x20
   140005796:	mov    rbx,rcx
   140005799:	call   0x1400081b4
   14000579e:	lea    r11,[rip+0x12cab]        # 0x140018450
   1400057a5:	mov    QWORD PTR [rbx],r11
   1400057a8:	mov    rax,rbx
   1400057ab:	add    rsp,0x20
   1400057af:	pop    rbx
   1400057b0:	ret    
   1400057b1:	int3   
   1400057b2:	int3   
   1400057b3:	int3   
   1400057b4:	int3   
   1400057b5:	int3   
   1400057b6:	int3   
   1400057b7:	int3   
   1400057b8:	int3   
   1400057b9:	int3   
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	int3   
   1400057bd:	int3   
   1400057be:	int3   
   1400057bf:	int3   
   1400057c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400057c5:	cmp    QWORD PTR [rdx+0x18],0x8
   1400057ca:	mov    r11,QWORD PTR [rdx+0x10]
   1400057ce:	jb     0x1400057d3
   1400057d0:	mov    rdx,QWORD PTR [rdx]
   1400057d3:	mov    r9,QWORD PTR [rcx+0x10]
   1400057d7:	cmp    r9,r9
   1400057da:	cmp    QWORD PTR [rcx+0x18],0x8
   1400057df:	jb     0x1400057e4
   1400057e1:	mov    rcx,QWORD PTR [rcx]
   1400057e4:	cmp    r9,r11
   1400057e7:	mov    r8,r11
   1400057ea:	cmovb  r8,r9
   1400057ee:	xor    r10d,r10d
   1400057f1:	or     ebx,0xffffffff
   1400057f4:	test   r8,r8
   1400057f7:	je     0x140005815
   1400057f9:	nop    DWORD PTR [rax+0x0]
   140005800:	movzx  eax,WORD PTR [rdx]
   140005803:	cmp    WORD PTR [rcx],ax
   140005806:	jne    0x14000582d
   140005808:	add    rcx,0x2
   14000580c:	add    rdx,0x2
   140005810:	dec    r8
   140005813:	jne    0x140005800
   140005815:	mov    r8d,r10d
   140005818:	movsxd rax,r8d
   14000581b:	test   r8d,r8d
   14000581e:	jne    0x140005843
   140005820:	cmp    r9,r11
   140005823:	jae    0x14000583c
   140005825:	mov    eax,ebx
   140005827:	mov    rbx,QWORD PTR [rsp+0x8]
   14000582c:	ret    
   14000582d:	cmp    WORD PTR [rcx],ax
   140005830:	mov    r8d,0x1
   140005836:	cmovb  r8d,ebx
   14000583a:	jmp    0x140005818
   14000583c:	setne  r10b
   140005840:	mov    eax,r10d
   140005843:	mov    rbx,QWORD PTR [rsp+0x8]
   140005848:	ret    
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	mov    QWORD PTR [rsp+0x18],rbp
   140005855:	mov    QWORD PTR [rsp+0x20],rsi
   14000585a:	mov    QWORD PTR [rsp+0x10],rdx
   14000585f:	push   rdi
   140005860:	sub    rsp,0x30
   140005864:	cmp    QWORD PTR [rip+0x1e9b4],0x0        # 0x140024220
   14000586c:	mov    rsi,r8
   14000586f:	mov    rdi,rcx
   140005872:	jne    0x140005898
   140005874:	mov    r9,r8
   140005877:	mov    r8,QWORD PTR [rip+0x1e99a]        # 0x140024218
   14000587e:	mov    dl,0x1
   140005880:	call   0x140005ca0
   140005885:	mov    rax,rdi
   140005888:	mov    rbp,QWORD PTR [rsp+0x50]
   14000588d:	mov    rsi,QWORD PTR [rsp+0x58]
   140005892:	add    rsp,0x30
   140005896:	pop    rdi
   140005897:	ret    
   140005898:	mov    rcx,QWORD PTR [rip+0x1e979]        # 0x140024218
   14000589f:	mov    QWORD PTR [rsp+0x40],rbx
   1400058a4:	cmp    rdx,QWORD PTR [rcx]
   1400058a7:	jne    0x1400058d5
   1400058a9:	lea    rcx,[r8+0x18]
   1400058ad:	add    rdx,0x18
   1400058b1:	call   0x1400057c0
   1400058b6:	test   eax,eax
   1400058b8:	jns    0x140005a7d
   1400058be:	mov    r8,QWORD PTR [rsp+0x48]
   1400058c3:	mov    r9,rsi
   1400058c6:	mov    dl,0x1
   1400058c8:	mov    rcx,rdi
   1400058cb:	call   0x140005ca0
   1400058d0:	jmp    0x140005a90
   1400058d5:	cmp    rdx,rcx
   1400058d8:	jne    0x140005910
   1400058da:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058de:	lea    rdx,[r8+0x18]
   1400058e2:	add    rcx,0x18
   1400058e6:	call   0x1400057c0
   1400058eb:	test   eax,eax
   1400058ed:	jns    0x140005a7d
   1400058f3:	mov    r8,QWORD PTR [rip+0x1e91e]        # 0x140024218
   1400058fa:	mov    r9,rsi
   1400058fd:	xor    edx,edx
   1400058ff:	mov    r8,QWORD PTR [r8+0x10]
   140005903:	mov    rcx,rdi
   140005906:	call   0x140005ca0
   14000590b:	jmp    0x140005a90
   140005910:	lea    rcx,[r8+0x18]
   140005914:	add    rdx,0x18
   140005918:	call   0x1400057c0
   14000591d:	test   eax,eax
   14000591f:	jns    0x1400059ce
   140005925:	mov    rax,QWORD PTR [rsp+0x48]
   14000592a:	cmp    BYTE PTR [rax+0x69],0x0
   14000592e:	je     0x140005936
   140005930:	mov    rbx,QWORD PTR [rax+0x10]
   140005934:	jmp    0x14000598d
   140005936:	mov    rbx,QWORD PTR [rax]
   140005939:	cmp    BYTE PTR [rbx+0x69],0x0
   14000593d:	jne    0x14000595f
   14000593f:	mov    rax,QWORD PTR [rbx+0x10]
   140005943:	cmp    BYTE PTR [rax+0x69],0x0
   140005947:	jne    0x14000598d
   140005949:	nop    DWORD PTR [rax+0x0]
   140005950:	mov    rbx,rax
   140005953:	mov    rax,QWORD PTR [rax+0x10]
   140005957:	cmp    BYTE PTR [rax+0x69],0x0
   14000595b:	je     0x140005950
   14000595d:	jmp    0x14000598d
   14000595f:	mov    rcx,QWORD PTR [rax+0x8]
   140005963:	cmp    BYTE PTR [rcx+0x69],0x0
   140005967:	jne    0x140005982
   140005969:	nop    DWORD PTR [rax+0x0]
   140005970:	cmp    rax,QWORD PTR [rcx]
   140005973:	jne    0x140005982
   140005975:	mov    rax,rcx
   140005978:	mov    rcx,QWORD PTR [rcx+0x8]
   14000597c:	cmp    BYTE PTR [rcx+0x69],0x0
   140005980:	je     0x140005970
   140005982:	cmp    BYTE PTR [rax+0x69],0x0
   140005986:	mov    rbx,rax
   140005989:	cmove  rbx,rcx
   14000598d:	lea    rcx,[rbx+0x18]
   140005991:	lea    rdx,[rsi+0x18]
   140005995:	call   0x1400057c0
   14000599a:	test   eax,eax
   14000599c:	jns    0x1400059ce
   14000599e:	mov    rax,QWORD PTR [rbx+0x10]
   1400059a2:	mov    r9,rsi
   1400059a5:	mov    rcx,rdi
   1400059a8:	cmp    BYTE PTR [rax+0x69],0x0
   1400059ac:	je     0x1400059bd
   1400059ae:	mov    r8,rbx
   1400059b1:	xor    edx,edx
   1400059b3:	call   0x140005ca0
   1400059b8:	jmp    0x140005a90
   1400059bd:	mov    r8,QWORD PTR [rsp+0x48]
   1400059c2:	mov    dl,0x1
   1400059c4:	call   0x140005ca0
   1400059c9:	jmp    0x140005a90
   1400059ce:	mov    rcx,QWORD PTR [rsp+0x48]
   1400059d3:	lea    rdx,[rsi+0x18]
   1400059d7:	add    rcx,0x18
   1400059db:	call   0x1400057c0
   1400059e0:	test   eax,eax
   1400059e2:	jns    0x140005a7d
   1400059e8:	mov    r8,QWORD PTR [rsp+0x48]
   1400059ed:	mov    rbx,r8
   1400059f0:	cmp    BYTE PTR [r8+0x69],0x0
   1400059f5:	jne    0x140005a3e
   1400059f7:	mov    rax,QWORD PTR [r8+0x10]
   1400059fb:	cmp    BYTE PTR [rax+0x69],0x0
   1400059ff:	jne    0x140005a1e
   140005a01:	mov    rbx,rax
   140005a04:	mov    rax,QWORD PTR [rax]
   140005a07:	cmp    BYTE PTR [rax+0x69],0x0
   140005a0b:	jne    0x140005a3e
   140005a0d:	nop    DWORD PTR [rax]
   140005a10:	mov    rbx,rax
   140005a13:	mov    rax,QWORD PTR [rax]
   140005a16:	cmp    BYTE PTR [rax+0x69],0x0
   140005a1a:	je     0x140005a10
   140005a1c:	jmp    0x140005a3e
   140005a1e:	mov    rax,QWORD PTR [r8+0x8]
   140005a22:	cmp    BYTE PTR [rax+0x69],0x0
   140005a26:	jne    0x140005a3b
   140005a28:	cmp    rbx,QWORD PTR [rax+0x10]
   140005a2c:	jne    0x140005a3b
   140005a2e:	mov    rbx,rax
   140005a31:	mov    rax,QWORD PTR [rax+0x8]
   140005a35:	cmp    BYTE PTR [rax+0x69],0x0
   140005a39:	je     0x140005a28
   140005a3b:	mov    rbx,rax
   140005a3e:	cmp    rbx,QWORD PTR [rip+0x1e7d3]        # 0x140024218
   140005a45:	je     0x140005a5d
   140005a47:	lea    rdx,[rbx+0x18]
   140005a4b:	lea    rcx,[rsi+0x18]
   140005a4f:	call   0x1400057c0
   140005a54:	test   eax,eax
   140005a56:	jns    0x140005a7d
   140005a58:	mov    r8,QWORD PTR [rsp+0x48]
   140005a5d:	mov    rax,QWORD PTR [r8+0x10]
   140005a61:	mov    r9,rsi
   140005a64:	mov    rcx,rdi
   140005a67:	cmp    BYTE PTR [rax+0x69],0x0
   140005a6b:	jne    0x1400059b1
   140005a71:	mov    r8,rbx
   140005a74:	mov    dl,0x1
   140005a76:	call   0x140005ca0
   140005a7b:	jmp    0x140005a90
   140005a7d:	lea    rcx,[rsp+0x20]
   140005a82:	mov    rdx,rsi
   140005a85:	call   0x140005ab0
   140005a8a:	mov    rcx,QWORD PTR [rax]
   140005a8d:	mov    QWORD PTR [rdi],rcx
   140005a90:	mov    rbx,QWORD PTR [rsp+0x40]
   140005a95:	mov    rbp,QWORD PTR [rsp+0x50]
   140005a9a:	mov    rsi,QWORD PTR [rsp+0x58]
   140005a9f:	mov    rax,rdi
   140005aa2:	add    rsp,0x30
   140005aa6:	pop    rdi
   140005aa7:	ret    
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	int3   
   140005aae:	int3   
   140005aaf:	int3   
   140005ab0:	mov    QWORD PTR [rsp+0x18],rbx
   140005ab5:	mov    QWORD PTR [rsp+0x20],rbp
   140005aba:	push   rsi
   140005abb:	push   rdi
   140005abc:	push   r12
   140005abe:	push   r13
   140005ac0:	push   r15
   140005ac2:	sub    rsp,0x20
   140005ac6:	mov    r13,QWORD PTR [rip+0x1e74b]        # 0x140024218
   140005acd:	mov    r15,rdx
   140005ad0:	mov    rbp,rcx
   140005ad3:	mov    r9,QWORD PTR [r13+0x8]
   140005ad7:	mov    rsi,r13
   140005ada:	mov    dil,0x1
   140005add:	cmp    BYTE PTR [r9+0x69],0x0
   140005ae2:	jne    0x140005bac
   140005ae8:	mov    rbx,QWORD PTR [rdx+0x28]
   140005aec:	mov    QWORD PTR [rsp+0x50],r14
   140005af1:	or     r13d,0xffffffff
   140005af5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005b00:	cmp    QWORD PTR [r9+0x30],0x8
   140005b05:	mov    r11,QWORD PTR [r9+0x28]
   140005b09:	lea    rcx,[r9+0x18]
   140005b0d:	mov    rsi,r9
   140005b10:	jb     0x140005b15
   140005b12:	mov    rcx,QWORD PTR [rcx]
   140005b15:	cmp    rbx,rbx
   140005b18:	mov    r10,rbx
   140005b1b:	cmovb  r10,rbx
   140005b1f:	cmp    QWORD PTR [r15+0x30],0x8
   140005b24:	jb     0x140005b2c
   140005b26:	mov    rdx,QWORD PTR [r15+0x18]
   140005b2a:	jmp    0x140005b30
   140005b2c:	lea    rdx,[r15+0x18]
   140005b30:	cmp    r10,r11
   140005b33:	mov    r8,r11
   140005b36:	cmovb  r8,r10
   140005b3a:	test   r8,r8
   140005b3d:	je     0x140005b55
   140005b3f:	nop
   140005b40:	movzx  eax,WORD PTR [rcx]
   140005b43:	cmp    WORD PTR [rdx],ax
   140005b46:	jne    0x140005b6a
   140005b48:	add    rdx,0x2
   140005b4c:	add    rcx,0x2
   140005b50:	dec    r8
   140005b53:	jne    0x140005b40
   140005b55:	xor    r8d,r8d
   140005b58:	movsxd rax,r8d
   140005b5b:	test   r8d,r8d
   140005b5e:	jne    0x140005b81
   140005b60:	cmp    r10,r11
   140005b63:	jae    0x140005b79
   140005b65:	mov    eax,r13d
   140005b68:	jmp    0x140005b81
   140005b6a:	cmp    WORD PTR [rdx],ax
   140005b6d:	mov    r8d,0x1
   140005b73:	cmovb  r8d,r13d
   140005b77:	jmp    0x140005b58
   140005b79:	xor    eax,eax
   140005b7b:	cmp    r10,r11
   140005b7e:	setne  al
   140005b81:	test   eax,eax
   140005b83:	sets   dil
   140005b87:	test   dil,dil
   140005b8a:	je     0x140005b91
   140005b8c:	mov    r9,QWORD PTR [r9]
   140005b8f:	jmp    0x140005b95
   140005b91:	mov    r9,QWORD PTR [r9+0x10]
   140005b95:	cmp    BYTE PTR [r9+0x69],0x0
   140005b9a:	je     0x140005b00
   140005ba0:	mov    r13,QWORD PTR [rip+0x1e671]        # 0x140024218
   140005ba7:	mov    r14,QWORD PTR [rsp+0x50]
   140005bac:	mov    rbx,rsi
   140005baf:	test   dil,dil
   140005bb2:	je     0x140005c3a
   140005bb8:	cmp    rsi,QWORD PTR [r13+0x0]
   140005bbc:	jne    0x140005be0
   140005bbe:	lea    rcx,[rsp+0x58]
   140005bc3:	mov    r9,r15
   140005bc6:	mov    r8,rsi
   140005bc9:	mov    dl,0x1
   140005bcb:	call   0x140005ca0
   140005bd0:	mov    BYTE PTR [rbp+0x8],0x1
   140005bd4:	mov    rcx,QWORD PTR [rax]
   140005bd7:	mov    QWORD PTR [rbp+0x0],rcx
   140005bdb:	jmp    0x140005c85
   140005be0:	cmp    BYTE PTR [rsi+0x69],0x0
   140005be4:	je     0x140005bec
   140005be6:	mov    rbx,QWORD PTR [rsi+0x10]
   140005bea:	jmp    0x140005c3a
   140005bec:	mov    rax,QWORD PTR [rsi]
   140005bef:	cmp    BYTE PTR [rax+0x69],0x0
   140005bf3:	jne    0x140005c11
   140005bf5:	mov    rbx,rax
   140005bf8:	mov    rax,QWORD PTR [rax+0x10]
   140005bfc:	cmp    BYTE PTR [rax+0x69],0x0
   140005c00:	jne    0x140005c3a
   140005c02:	mov    rbx,rax
   140005c05:	mov    rax,QWORD PTR [rax+0x10]
   140005c09:	cmp    BYTE PTR [rax+0x69],0x0
   140005c0d:	je     0x140005c02
   140005c0f:	jmp    0x140005c3a
   140005c11:	mov    rax,QWORD PTR [rsi+0x8]
   140005c15:	cmp    BYTE PTR [rax+0x69],0x0
   140005c19:	jne    0x140005c32
   140005c1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005c20:	cmp    rbx,QWORD PTR [rax]
   140005c23:	jne    0x140005c32
   140005c25:	mov    rbx,rax
   140005c28:	mov    rax,QWORD PTR [rax+0x8]
   140005c2c:	cmp    BYTE PTR [rax+0x69],0x0
   140005c30:	je     0x140005c20
   140005c32:	cmp    BYTE PTR [rbx+0x69],0x0
   140005c36:	cmove  rbx,rax
   140005c3a:	lea    rcx,[rbx+0x18]
   140005c3e:	lea    rdx,[r15+0x18]
   140005c42:	call   0x1400057c0
   140005c47:	test   eax,eax
   140005c49:	jns    0x140005c6c
   140005c4b:	lea    rcx,[rsp+0x58]
   140005c50:	mov    r9,r15
   140005c53:	mov    r8,rsi
   140005c56:	movzx  edx,dil
   140005c5a:	call   0x140005ca0
   140005c5f:	mov    BYTE PTR [rbp+0x8],0x1
   140005c63:	mov    rcx,QWORD PTR [rax]
   140005c66:	mov    QWORD PTR [rbp+0x0],rcx
   140005c6a:	jmp    0x140005c85
   140005c6c:	lea    rcx,[r15+0x18]
   140005c70:	call   0x140005730
   140005c75:	mov    rcx,r15
   140005c78:	call   0x14000872c
   140005c7d:	mov    QWORD PTR [rbp+0x0],rbx
   140005c81:	mov    BYTE PTR [rbp+0x8],0x0
   140005c85:	mov    rbx,QWORD PTR [rsp+0x60]
   140005c8a:	mov    rax,rbp
   140005c8d:	mov    rbp,QWORD PTR [rsp+0x68]
   140005c92:	add    rsp,0x20
   140005c96:	pop    r15
   140005c98:	pop    r13
   140005c9a:	pop    r12
   140005c9c:	pop    rdi
   140005c9d:	pop    rsi
   140005c9e:	ret    
   140005c9f:	int3   
   140005ca0:	rex push rbx
   140005ca2:	sub    rsp,0x20
   140005ca6:	mov    rax,QWORD PTR [rip+0x1e573]        # 0x140024220
   140005cad:	mov    rbx,r9
   140005cb0:	mov    r9,rcx
   140005cb3:	movabs rcx,0x333333333333332
   140005cbd:	cmp    rax,rcx
   140005cc0:	jb     0x140005d22
   140005cc2:	cmp    QWORD PTR [rbx+0x58],0x8
   140005cc7:	mov    QWORD PTR [rsp+0x30],rdi
   140005ccc:	jb     0x140005cd7
   140005cce:	mov    rcx,QWORD PTR [rbx+0x40]
   140005cd2:	call   0x14000872c
   140005cd7:	xor    edi,edi
   140005cd9:	mov    QWORD PTR [rbx+0x58],0x7
   140005ce1:	mov    QWORD PTR [rbx+0x50],rdi
   140005ce5:	mov    WORD PTR [rbx+0x40],di
   140005ce9:	cmp    QWORD PTR [rbx+0x30],0x8
   140005cee:	jb     0x140005cf9
   140005cf0:	mov    rcx,QWORD PTR [rbx+0x18]
   140005cf4:	call   0x14000872c
   140005cf9:	mov    QWORD PTR [rbx+0x30],0x7
   140005d01:	mov    QWORD PTR [rbx+0x28],rdi
   140005d05:	mov    rcx,rbx
   140005d08:	mov    WORD PTR [rbx+0x18],di
   140005d0c:	call   0x14000872c
   140005d11:	lea    rcx,[rip+0x15f88]        # 0x14001bca0
   140005d18:	call   0x140007534
   140005d1d:	mov    rdi,QWORD PTR [rsp+0x30]
   140005d22:	inc    rax
   140005d25:	mov    QWORD PTR [rip+0x1e4f4],rax        # 0x140024220
   140005d2c:	mov    QWORD PTR [rbx+0x8],r8
   140005d30:	mov    rax,QWORD PTR [rip+0x1e4e1]        # 0x140024218
   140005d37:	cmp    r8,rax
   140005d3a:	jne    0x140005d53
   140005d3c:	mov    QWORD PTR [rax+0x8],rbx
   140005d40:	mov    rax,QWORD PTR [rip+0x1e4d1]        # 0x140024218
   140005d47:	mov    QWORD PTR [rax],rbx
   140005d4a:	mov    rax,QWORD PTR [rip+0x1e4c7]        # 0x140024218
   140005d51:	jmp    0x140005d7c
   140005d53:	test   dl,dl
   140005d55:	je     0x140005d6b
   140005d57:	mov    QWORD PTR [r8],rbx
   140005d5a:	mov    rax,QWORD PTR [rip+0x1e4b7]        # 0x140024218
   140005d61:	cmp    r8,QWORD PTR [rax]
   140005d64:	jne    0x140005d80
   140005d66:	mov    QWORD PTR [rax],rbx
   140005d69:	jmp    0x140005d80
   140005d6b:	mov    QWORD PTR [r8+0x10],rbx
   140005d6f:	mov    rax,QWORD PTR [rip+0x1e4a2]        # 0x140024218
   140005d76:	cmp    r8,QWORD PTR [rax+0x10]
   140005d7a:	jne    0x140005d80
   140005d7c:	mov    QWORD PTR [rax+0x10],rbx
   140005d80:	mov    rax,QWORD PTR [rbx+0x8]
   140005d84:	mov    rdx,rbx
   140005d87:	cmp    BYTE PTR [rax+0x68],0x0
   140005d8b:	jne    0x140005f77
   140005d91:	mov    rax,QWORD PTR [rdx+0x8]
   140005d95:	mov    rcx,QWORD PTR [rax+0x8]
   140005d99:	cmp    rax,QWORD PTR [rcx]
   140005d9c:	jne    0x140005e7f
   140005da2:	mov    r8,QWORD PTR [rcx+0x10]
   140005da6:	cmp    BYTE PTR [r8+0x68],0x0
   140005dab:	je     0x140005e89
   140005db1:	cmp    rdx,QWORD PTR [rax+0x10]
   140005db5:	jne    0x140005e06
   140005db7:	mov    rcx,QWORD PTR [rax+0x10]
   140005dbb:	mov    rdx,rax
   140005dbe:	mov    rax,QWORD PTR [rcx]
   140005dc1:	mov    QWORD PTR [rdx+0x10],rax
   140005dc5:	mov    rax,QWORD PTR [rcx]
   140005dc8:	cmp    BYTE PTR [rax+0x69],0x0
   140005dcc:	jne    0x140005dd2
   140005dce:	mov    QWORD PTR [rax+0x8],rdx
   140005dd2:	mov    rax,QWORD PTR [rdx+0x8]
   140005dd6:	mov    QWORD PTR [rcx+0x8],rax
   140005dda:	mov    rax,QWORD PTR [rip+0x1e437]        # 0x140024218
   140005de1:	cmp    rdx,QWORD PTR [rax+0x8]
   140005de5:	jne    0x140005ded
   140005de7:	mov    QWORD PTR [rax+0x8],rcx
   140005deb:	jmp    0x140005dff
   140005ded:	mov    rax,QWORD PTR [rdx+0x8]
   140005df1:	cmp    rdx,QWORD PTR [rax]
   140005df4:	jne    0x140005dfb
   140005df6:	mov    QWORD PTR [rax],rcx
   140005df9:	jmp    0x140005dff
   140005dfb:	mov    QWORD PTR [rax+0x10],rcx
   140005dff:	mov    QWORD PTR [rcx],rdx
   140005e02:	mov    QWORD PTR [rdx+0x8],rcx
   140005e06:	mov    rax,QWORD PTR [rdx+0x8]
   140005e0a:	mov    BYTE PTR [rax+0x68],0x1
   140005e0e:	mov    rax,QWORD PTR [rdx+0x8]
   140005e12:	mov    rcx,QWORD PTR [rax+0x8]
   140005e16:	mov    BYTE PTR [rcx+0x68],0x0
   140005e1a:	mov    rax,QWORD PTR [rdx+0x8]
   140005e1e:	mov    rcx,QWORD PTR [rax+0x8]
   140005e22:	mov    r8,QWORD PTR [rcx]
   140005e25:	mov    rax,QWORD PTR [r8+0x10]
   140005e29:	mov    QWORD PTR [rcx],rax
   140005e2c:	mov    rax,QWORD PTR [r8+0x10]
   140005e30:	cmp    BYTE PTR [rax+0x69],0x0
   140005e34:	jne    0x140005e3a
   140005e36:	mov    QWORD PTR [rax+0x8],rcx
   140005e3a:	mov    rax,QWORD PTR [rcx+0x8]
   140005e3e:	mov    QWORD PTR [r8+0x8],rax
   140005e42:	mov    rax,QWORD PTR [rip+0x1e3cf]        # 0x140024218
   140005e49:	cmp    rcx,QWORD PTR [rax+0x8]
   140005e4d:	jne    0x140005e5c
   140005e4f:	mov    QWORD PTR [rax+0x8],r8
   140005e53:	mov    QWORD PTR [r8+0x10],rcx
   140005e57:	jmp    0x140005f65
   140005e5c:	mov    rax,QWORD PTR [rcx+0x8]
   140005e60:	cmp    rcx,QWORD PTR [rax+0x10]
   140005e64:	jne    0x140005e73
   140005e66:	mov    QWORD PTR [rax+0x10],r8
   140005e6a:	mov    QWORD PTR [r8+0x10],rcx
   140005e6e:	jmp    0x140005f65
   140005e73:	mov    QWORD PTR [rax],r8
   140005e76:	mov    QWORD PTR [r8+0x10],rcx
   140005e7a:	jmp    0x140005f65
   140005e7f:	mov    r8,QWORD PTR [rcx]
   140005e82:	cmp    BYTE PTR [r8+0x68],0x0
   140005e87:	jne    0x140005eab
   140005e89:	mov    BYTE PTR [rax+0x68],0x1
   140005e8d:	mov    BYTE PTR [r8+0x68],0x1
   140005e92:	mov    rax,QWORD PTR [rdx+0x8]
   140005e96:	mov    rcx,QWORD PTR [rax+0x8]
   140005e9a:	mov    BYTE PTR [rcx+0x68],0x0
   140005e9e:	mov    rax,QWORD PTR [rdx+0x8]
   140005ea2:	mov    rdx,QWORD PTR [rax+0x8]
   140005ea6:	jmp    0x140005f69
   140005eab:	cmp    rdx,QWORD PTR [rax]
   140005eae:	jne    0x140005f01
   140005eb0:	mov    rcx,QWORD PTR [rax]
   140005eb3:	mov    rdx,rax
   140005eb6:	mov    rax,QWORD PTR [rcx+0x10]
   140005eba:	mov    QWORD PTR [rdx],rax
   140005ebd:	mov    rax,QWORD PTR [rcx+0x10]
   140005ec1:	cmp    BYTE PTR [rax+0x69],0x0
   140005ec5:	jne    0x140005ecb
   140005ec7:	mov    QWORD PTR [rax+0x8],rdx
   140005ecb:	mov    rax,QWORD PTR [rdx+0x8]
   140005ecf:	mov    QWORD PTR [rcx+0x8],rax
   140005ed3:	mov    rax,QWORD PTR [rip+0x1e33e]        # 0x140024218
   140005eda:	cmp    rdx,QWORD PTR [rax+0x8]
   140005ede:	jne    0x140005ee6
   140005ee0:	mov    QWORD PTR [rax+0x8],rcx
   140005ee4:	jmp    0x140005ef9
   140005ee6:	mov    rax,QWORD PTR [rdx+0x8]
   140005eea:	cmp    rdx,QWORD PTR [rax+0x10]
   140005eee:	jne    0x140005ef6
   140005ef0:	mov    QWORD PTR [rax+0x10],rcx
   140005ef4:	jmp    0x140005ef9
   140005ef6:	mov    QWORD PTR [rax],rcx
   140005ef9:	mov    QWORD PTR [rcx+0x10],rdx
   140005efd:	mov    QWORD PTR [rdx+0x8],rcx
   140005f01:	mov    rax,QWORD PTR [rdx+0x8]
   140005f05:	mov    BYTE PTR [rax+0x68],0x1
   140005f09:	mov    rax,QWORD PTR [rdx+0x8]
   140005f0d:	mov    rcx,QWORD PTR [rax+0x8]
   140005f11:	mov    BYTE PTR [rcx+0x68],0x0
   140005f15:	mov    rax,QWORD PTR [rdx+0x8]
   140005f19:	mov    rcx,QWORD PTR [rax+0x8]
   140005f1d:	mov    r8,QWORD PTR [rcx+0x10]
   140005f21:	mov    rax,QWORD PTR [r8]
   140005f24:	mov    QWORD PTR [rcx+0x10],rax
   140005f28:	mov    rax,QWORD PTR [r8]
   140005f2b:	cmp    BYTE PTR [rax+0x69],0x0
   140005f2f:	jne    0x140005f35
   140005f31:	mov    QWORD PTR [rax+0x8],rcx
   140005f35:	mov    rax,QWORD PTR [rcx+0x8]
   140005f39:	mov    QWORD PTR [r8+0x8],rax
   140005f3d:	mov    rax,QWORD PTR [rip+0x1e2d4]        # 0x140024218
   140005f44:	cmp    rcx,QWORD PTR [rax+0x8]
   140005f48:	jne    0x140005f50
   140005f4a:	mov    QWORD PTR [rax+0x8],r8
   140005f4e:	jmp    0x140005f62
   140005f50:	mov    rax,QWORD PTR [rcx+0x8]
   140005f54:	cmp    rcx,QWORD PTR [rax]
   140005f57:	jne    0x140005f5e
   140005f59:	mov    QWORD PTR [rax],r8
   140005f5c:	jmp    0x140005f62
   140005f5e:	mov    QWORD PTR [rax+0x10],r8
   140005f62:	mov    QWORD PTR [r8],rcx
   140005f65:	mov    QWORD PTR [rcx+0x8],r8
   140005f69:	mov    rax,QWORD PTR [rdx+0x8]
   140005f6d:	cmp    BYTE PTR [rax+0x68],0x0
   140005f71:	je     0x140005d91
   140005f77:	mov    rax,QWORD PTR [rip+0x1e29a]        # 0x140024218
   140005f7e:	mov    QWORD PTR [r9],rbx
   140005f81:	mov    rcx,QWORD PTR [rax+0x8]
   140005f85:	mov    rax,r9
   140005f88:	mov    BYTE PTR [rcx+0x68],0x1
   140005f8c:	add    rsp,0x20
   140005f90:	pop    rbx
   140005f91:	ret    
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	rex push rsi
   140005fa2:	push   rdi
   140005fa3:	push   r12
   140005fa5:	sub    rsp,0x40
   140005fa9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005fb2:	mov    QWORD PTR [rsp+0x60],rbx
   140005fb7:	mov    r12,rcx
   140005fba:	mov    ecx,0x70
   140005fbf:	call   0x140008790
   140005fc4:	mov    rbx,rax
   140005fc7:	mov    QWORD PTR [rsp+0x68],rax
   140005fcc:	test   rax,rax
   140005fcf:	je     0x140006055
   140005fd5:	mov    rdx,QWORD PTR [rip+0x1e23c]        # 0x140024218
   140005fdc:	mov    QWORD PTR [rax],rdx
   140005fdf:	mov    rdx,QWORD PTR [rip+0x1e232]        # 0x140024218
   140005fe6:	mov    QWORD PTR [rax+0x8],rdx
   140005fea:	mov    rdx,QWORD PTR [rip+0x1e227]        # 0x140024218
   140005ff1:	mov    QWORD PTR [rax+0x10],rdx
   140005ff5:	mov    WORD PTR [rax+0x68],0x0
   140005ffb:	lea    rdi,[rax+0x18]
   140005fff:	mov    QWORD PTR [rsp+0x70],rdi
   140006004:	mov    QWORD PTR [rsp+0x78],rdi
   140006009:	test   rdi,rdi
   14000600c:	je     0x140006050
   14000600e:	mov    QWORD PTR [rdi+0x18],0x7
   140006016:	xor    esi,esi
   140006018:	mov    QWORD PTR [rdi+0x10],rsi
   14000601c:	mov    WORD PTR [rdi],si
   14000601f:	or     r9,0xffffffffffffffff
   140006023:	xor    r8d,r8d
   140006026:	mov    rdx,r12
   140006029:	mov    rcx,rdi
   14000602c:	call   0x1400033d0
   140006031:	nop
   140006032:	lea    rcx,[rdi+0x28]
   140006036:	mov    QWORD PTR [rcx+0x18],0x7
   14000603e:	mov    QWORD PTR [rcx+0x10],rsi
   140006042:	mov    WORD PTR [rcx],si
   140006045:	lea    rdx,[r12+0x28]
   14000604a:	call   0x140004d20
   14000604f:	nop
   140006050:	mov    rax,rbx
   140006053:	jmp    0x140006089
   140006055:	xor    esi,esi
   140006057:	mov    QWORD PTR [rsp+0x68],rsi
   14000605c:	lea    rdx,[rsp+0x68]
   140006061:	lea    rcx,[rsp+0x28]
   140006066:	call   0x140008104
   14000606b:	lea    r11,[rip+0x123de]        # 0x140018450
   140006072:	mov    QWORD PTR [rsp+0x28],r11
   140006077:	lea    rdx,[rip+0x19622]        # 0x14001f6a0
   14000607e:	lea    rcx,[rsp+0x28]
   140006083:	call   0x140009498
   140006088:	int3   
   140006089:	mov    rbx,QWORD PTR [rsp+0x60]
   14000608e:	add    rsp,0x40
   140006092:	pop    r12
   140006094:	pop    rdi
   140006095:	pop    rsi
   140006096:	ret    
   140006097:	int3   
   140006098:	int3   
   140006099:	int3   
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	mov    rax,rsp
   1400060a3:	mov    QWORD PTR [rax+0x8],rcx
   1400060a7:	mov    QWORD PTR [rax+0x10],rdx
   1400060ab:	mov    QWORD PTR [rax+0x18],r8
   1400060af:	mov    QWORD PTR [rax+0x20],r9
   1400060b3:	sub    rsp,0x68
   1400060b7:	cmp    QWORD PTR [rip+0x1e141],0x0        # 0x140024200
   1400060bf:	je     0x140006162
   1400060c5:	mov    QWORD PTR [rax-0x8],rbx
   1400060c9:	mov    QWORD PTR [rax-0x10],rbp
   1400060cd:	lea    rbp,[rax+0x10]
   1400060d1:	mov    QWORD PTR [rax-0x18],rsi
   1400060d5:	mov    rdx,rbp
   1400060d8:	mov    QWORD PTR [rax-0x20],rdi
   1400060dc:	call   0x1400088c4
   1400060e1:	mov    rcx,0xffffffffffffffff
   1400060e8:	lea    esi,[rax+0x1]
   1400060eb:	mov    eax,0x2
   1400060f0:	movsxd rbx,esi
   1400060f3:	mul    rbx
   1400060f6:	cmovo  rax,rcx
   1400060fa:	mov    rcx,rax
   1400060fd:	call   0x140007ca8
   140006102:	mov    r8,QWORD PTR [rsp+0x70]
   140006107:	mov    r9,rbp
   14000610a:	mov    rcx,rax
   14000610d:	mov    rdx,rbx
   140006110:	mov    rdi,rax
   140006113:	call   0x140008c30
   140006118:	lea    ecx,[rsi+rsi*1]
   14000611b:	xor    r8d,r8d
   14000611e:	mov    DWORD PTR [rsp+0x28],ecx
   140006122:	mov    rcx,QWORD PTR [rip+0x1e0d7]        # 0x140024200
   140006129:	lea    r9,[rsp+0x20]
   14000612e:	lea    edx,[r8+0x4a]
   140006132:	mov    QWORD PTR [rsp+0x20],0x1
   14000613b:	mov    QWORD PTR [rsp+0x30],rdi
   140006140:	call   QWORD PTR [rip+0x12192]        # 0x1400182d8
   140006146:	mov    rcx,rdi
   140006149:	call   0x14000872c
   14000614e:	mov    rdi,QWORD PTR [rsp+0x48]
   140006153:	mov    rsi,QWORD PTR [rsp+0x50]
   140006158:	mov    rbp,QWORD PTR [rsp+0x58]
   14000615d:	mov    rbx,QWORD PTR [rsp+0x60]
   140006162:	add    rsp,0x68
   140006166:	ret    
   140006167:	int3   
   140006168:	int3   
   140006169:	int3   
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	rex push rbx
   140006172:	push   rbp
   140006173:	push   rsi
   140006174:	push   rdi
   140006175:	push   r12
   140006177:	push   r13
   140006179:	sub    rsp,0x2e8
   140006180:	mov    rax,QWORD PTR [rip+0x1b289]        # 0x140021410
   140006187:	xor    rax,rsp
   14000618a:	mov    QWORD PTR [rsp+0x2d0],rax
   140006192:	xor    ebx,ebx
   140006194:	mov    QWORD PTR [rsp+0x48],rdx
   140006199:	mov    r12,rcx
   14000619c:	lea    r9d,[rbx+0x6]
   1400061a0:	xor    r8d,r8d
   1400061a3:	xor    edx,edx
   1400061a5:	xor    ecx,ecx
   1400061a7:	mov    ebp,ebx
   1400061a9:	mov    esi,ebx
   1400061ab:	mov    DWORD PTR [rsp+0x40],ebx
   1400061af:	call   QWORD PTR [rip+0x120eb]        # 0x1400182a0
   1400061b5:	mov    r13,rax
   1400061b8:	cmp    rax,0xffffffffffffffff
   1400061bc:	jne    0x1400061db
   1400061be:	call   QWORD PTR [rip+0x11e9c]        # 0x140018060
   1400061c4:	lea    rcx,[rip+0x15d95]        # 0x14001bf60
   1400061cb:	mov    edx,eax
   1400061cd:	mov    edi,eax
   1400061cf:	call   0x1400060a0
   1400061d4:	mov    eax,edi
   1400061d6:	jmp    0x140006436
   1400061db:	mov    QWORD PTR [rsp+0x330],r14
   1400061e3:	mov    QWORD PTR [rsp+0x2e0],r15
   1400061eb:	xor    r15b,r15b
   1400061ee:	or     rdi,0xffffffffffffffff
   1400061f2:	mov    DWORD PTR [rsp+0x60],0x20
   1400061fa:	mov    r14d,ebx
   1400061fd:	nop    DWORD PTR [rax]
   140006200:	lea    r8,[rsp+0x60]
   140006205:	mov    edx,r14d
   140006208:	mov    rcx,r13
   14000620b:	call   QWORD PTR [rip+0x12097]        # 0x1400182a8
   140006211:	test   eax,eax
   140006213:	je     0x140006356
   140006219:	lea    rax,[rsp+0x40]
   14000621e:	xor    r9d,r9d
   140006221:	lea    rdx,[rsp+0x60]
   140006226:	mov    QWORD PTR [rsp+0x30],rax
   14000622b:	mov    eax,DWORD PTR [rsp+0x40]
   14000622f:	lea    r8d,[r9+0x1]
   140006233:	mov    DWORD PTR [rsp+0x28],eax
   140006237:	mov    rcx,r13
   14000623a:	mov    QWORD PTR [rsp+0x20],rsi
   14000623f:	call   QWORD PTR [rip+0x1206b]        # 0x1400182b0
   140006245:	test   eax,eax
   140006247:	jne    0x1400062d6
   14000624d:	mov    ebp,ebx
   14000624f:	nop
   140006250:	call   QWORD PTR [rip+0x11e0a]        # 0x140018060
   140006256:	cmp    eax,0x7a
   140006259:	jne    0x1400062b5
   14000625b:	test   rsi,rsi
   14000625e:	je     0x140006268
   140006260:	mov    rcx,rsi
   140006263:	call   0x14000872c
   140006268:	mov    ecx,DWORD PTR [rsp+0x40]
   14000626c:	mov    eax,0x2
   140006271:	mul    rcx
   140006274:	cmovo  rax,rdi
   140006278:	mov    rcx,rax
   14000627b:	call   0x140007ca8
   140006280:	xor    r9d,r9d
   140006283:	lea    rdx,[rsp+0x60]
   140006288:	mov    rsi,rax
   14000628b:	lea    rax,[rsp+0x40]
   140006290:	lea    r8d,[r9+0x1]
   140006294:	mov    QWORD PTR [rsp+0x30],rax
   140006299:	mov    eax,DWORD PTR [rsp+0x40]
   14000629d:	mov    rcx,r13
   1400062a0:	mov    DWORD PTR [rsp+0x28],eax
   1400062a4:	mov    QWORD PTR [rsp+0x20],rsi
   1400062a9:	call   QWORD PTR [rip+0x12001]        # 0x1400182b0
   1400062af:	test   eax,eax
   1400062b1:	je     0x140006250
   1400062b3:	jmp    0x1400062d6
   1400062b5:	call   QWORD PTR [rip+0x11da5]        # 0x140018060
   1400062bb:	cmp    eax,0xd
   1400062be:	je     0x1400062ce
   1400062c0:	lea    rcx,[rip+0x15cf9]        # 0x14001bfc0
   1400062c7:	mov    edx,eax
   1400062c9:	call   0x1400060a0
   1400062ce:	test   rsi,rsi
   1400062d1:	je     0x14000634a
   1400062d3:	mov    WORD PTR [rsi],bx
   1400062d6:	test   rsi,rsi
   1400062d9:	je     0x14000634a
   1400062db:	cmp    WORD PTR [rsi],0x0
   1400062df:	mov    rbx,rsi
   1400062e2:	je     0x140006348
   1400062e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400062f0:	mov    rcx,rdi
   1400062f3:	xor    eax,eax
   1400062f5:	mov    rdi,r12
   1400062f8:	repnz scas ax,WORD PTR es:[rdi]
   1400062fb:	mov    rdx,r12
   1400062fe:	not    rcx
   140006301:	lea    r8,[rcx-0x1]
   140006305:	mov    rcx,rbx
   140006308:	call   0x140008a00
   14000630d:	test   eax,eax
   14000630f:	je     0x140006332
   140006311:	xor    eax,eax
   140006313:	or     rcx,0xffffffffffffffff
   140006317:	mov    rdi,rbx
   14000631a:	repnz scas ax,WORD PTR es:[rdi]
   14000631d:	lea    rdi,[rax-0x1]
   140006321:	not    rcx
   140006324:	lea    rbx,[rbx+rcx*2]
   140006328:	cmp    WORD PTR [rbx],ax
   14000632b:	jne    0x1400062f0
   14000632d:	or     rdi,rdi
   140006330:	jmp    0x140006348
   140006332:	lea    rcx,[rip+0x15cd7]        # 0x14001c010
   140006339:	mov    rdx,rbx
   14000633c:	mov    r15b,0x1
   14000633f:	call   0x1400060a0
   140006344:	or     rdi,0xffffffffffffffff
   140006348:	xor    ebx,ebx
   14000634a:	inc    r14d
   14000634d:	test   r15b,r15b
   140006350:	je     0x140006200
   140006356:	mov    r14,QWORD PTR [rsp+0x330]
   14000635e:	test   rsi,rsi
   140006361:	je     0x14000636b
   140006363:	mov    rcx,rsi
   140006366:	call   0x14000872c
   14000636b:	test   r15b,r15b
   14000636e:	mov    r15,QWORD PTR [rsp+0x2e0]
   140006376:	je     0x140006434
   14000637c:	lea    rcx,[rip+0x15ccd]        # 0x14001c050
   140006383:	call   0x1400060a0
   140006388:	lea    r8,[rsp+0x50]
   14000638d:	lea    rdx,[rsp+0x60]
   140006392:	mov    r9d,0x10
   140006398:	mov    rcx,r13
   14000639b:	mov    DWORD PTR [rsp+0x50],0x8
   1400063a3:	mov    DWORD PTR [rsp+0x54],0x5
   1400063ab:	mov    QWORD PTR [rsp+0x58],0x1
   1400063b4:	call   QWORD PTR [rip+0x11ede]        # 0x140018298
   1400063ba:	test   eax,eax
   1400063bc:	je     0x14000641e
   1400063be:	lea    r8,[rsp+0x60]
   1400063c3:	mov    rdx,r13
   1400063c6:	mov    ecx,0x5
   1400063cb:	call   QWORD PTR [rip+0x11ee7]        # 0x1400182b8
   1400063d1:	test   eax,eax
   1400063d3:	je     0x14000640f
   1400063d5:	lea    r8,[rsp+0x80]
   1400063dd:	lea    rdx,[rsp+0x60]
   1400063e2:	mov    rcx,r13
   1400063e5:	mov    DWORD PTR [rsp+0x80],0x248
   1400063f0:	call   QWORD PTR [rip+0x11e9a]        # 0x140018290
   1400063f6:	test   eax,eax
   1400063f8:	je     0x140006434
   1400063fa:	mov    eax,DWORD PTR [rsp+0x84]
   140006401:	mov    rcx,QWORD PTR [rsp+0x48]
   140006406:	and    eax,0x180
   14000640b:	mov    DWORD PTR [rcx],eax
   14000640d:	jmp    0x140006434
   14000640f:	call   QWORD PTR [rip+0x11c4b]        # 0x140018060
   140006415:	lea    rcx,[rip+0x15c74]        # 0x14001c090
   14000641c:	jmp    0x14000642b
   14000641e:	call   QWORD PTR [rip+0x11c3c]        # 0x140018060
   140006424:	lea    rcx,[rip+0x15cb5]        # 0x14001c0e0
   14000642b:	mov    edx,eax
   14000642d:	mov    ebp,eax
   14000642f:	call   0x1400060a0
   140006434:	mov    eax,ebp
   140006436:	mov    rcx,QWORD PTR [rsp+0x2d0]
   14000643e:	xor    rcx,rsp
   140006441:	call   0x140007d20
   140006446:	add    rsp,0x2e8
   14000644d:	pop    r13
   14000644f:	pop    r12
   140006451:	pop    rdi
   140006452:	pop    rsi
   140006453:	pop    rbp
   140006454:	pop    rbx
   140006455:	ret    
   140006456:	int3   
   140006457:	int3   
   140006458:	int3   
   140006459:	int3   
   14000645a:	int3   
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	mov    r11,rsp
   140006463:	push   rdi
   140006464:	sub    rsp,0xa0
   14000646b:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140006474:	mov    QWORD PTR [r11+0x8],rbx
   140006478:	mov    rax,QWORD PTR [rip+0x1af91]        # 0x140021410
   14000647f:	xor    rax,rsp
   140006482:	mov    QWORD PTR [rsp+0x98],rax
   14000648a:	mov    QWORD PTR [r11-0x20],0x7
   140006492:	xor    ebx,ebx
   140006494:	mov    QWORD PTR [r11-0x28],rbx
   140006498:	mov    WORD PTR [rsp+0x70],bx
   14000649d:	mov    DWORD PTR [rsp+0x50],ebx
   1400064a1:	mov    DWORD PTR [rsp+0x54],ebx
   1400064a5:	lea    rcx,[rip+0x15a3c]        # 0x14001bee8
   1400064ac:	call   0x1400021c0
   1400064b1:	mov    rdx,rax
   1400064b4:	xor    eax,eax
   1400064b6:	or     rcx,0xffffffffffffffff
   1400064ba:	mov    rdi,rdx
   1400064bd:	repnz scas ax,WORD PTR es:[rdi]
   1400064c0:	not    rcx
   1400064c3:	lea    r8,[rcx-0x1]
   1400064c7:	lea    rcx,[rsp+0x70]
   1400064cc:	call   0x140004030
   1400064d1:	lea    rcx,[rsp+0x70]
   1400064d6:	cmp    QWORD PTR [rsp+0x88],0x8
   1400064df:	cmovae rcx,QWORD PTR [rsp+0x70]
   1400064e5:	lea    rdx,[rsp+0x50]
   1400064ea:	call   0x140006170
   1400064ef:	mov    DWORD PTR [rsp+0x58],eax
   1400064f3:	test   eax,eax
   1400064f5:	jne    0x140006510
   1400064f7:	lea    rcx,[rip+0x15c42]        # 0x14001c140
   1400064fe:	call   0x1400060a0
   140006503:	mov    edx,ebx
   140006505:	cmp    DWORD PTR [rsp+0x50],ebx
   140006509:	setne  dl
   14000650c:	mov    DWORD PTR [rsp+0x54],edx
   140006510:	mov    QWORD PTR [rsp+0x40],rbx
   140006515:	lea    rax,[rsp+0x60]
   14000651a:	mov    QWORD PTR [rsp+0x38],rax
   14000651f:	mov    QWORD PTR [rsp+0x30],rbx
   140006524:	mov    DWORD PTR [rsp+0x28],0xf023f
   14000652c:	mov    DWORD PTR [rsp+0x20],ebx
   140006530:	xor    r9d,r9d
   140006533:	xor    r8d,r8d
   140006536:	lea    rdx,[rip+0x15c3b]        # 0x14001c178
   14000653d:	mov    rcx,0xffffffff80000002
   140006544:	call   QWORD PTR [rip+0x11ac6]        # 0x140018010
   14000654a:	mov    DWORD PTR [rsp+0x28],0x4
   140006552:	lea    rax,[rsp+0x58]
   140006557:	mov    QWORD PTR [rsp+0x20],rax
   14000655c:	mov    r9d,0x4
   140006562:	xor    r8d,r8d
   140006565:	lea    rdx,[rip+0x15c3c]        # 0x14001c1a8
   14000656c:	mov    rcx,QWORD PTR [rsp+0x60]
   140006571:	call   QWORD PTR [rip+0x11a89]        # 0x140018000
   140006577:	mov    DWORD PTR [rsp+0x28],0x4
   14000657f:	lea    rax,[rsp+0x54]
   140006584:	mov    QWORD PTR [rsp+0x20],rax
   140006589:	mov    r9d,0x4
   14000658f:	xor    r8d,r8d
   140006592:	lea    rdx,[rip+0x15c1f]        # 0x14001c1b8
   140006599:	mov    rcx,QWORD PTR [rsp+0x60]
   14000659e:	call   QWORD PTR [rip+0x11a5c]        # 0x140018000
   1400065a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400065a9:	call   QWORD PTR [rip+0x11a59]        # 0x140018008
   1400065af:	nop
   1400065b0:	cmp    QWORD PTR [rsp+0x88],0x8
   1400065b9:	jb     0x1400065c5
   1400065bb:	mov    rcx,QWORD PTR [rsp+0x70]
   1400065c0:	call   0x14000872c
   1400065c5:	mov    rcx,QWORD PTR [rsp+0x98]
   1400065cd:	xor    rcx,rsp
   1400065d0:	call   0x140007d20
   1400065d5:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400065dd:	add    rsp,0xa0
   1400065e4:	pop    rdi
   1400065e5:	ret    
   1400065e6:	int3   
   1400065e7:	int3   
   1400065e8:	int3   
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	int3   
   1400065ed:	int3   
   1400065ee:	int3   
   1400065ef:	int3   
   1400065f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400065f5:	push   rbp
   1400065f6:	lea    rbp,[rsp-0x1b0]
   1400065fe:	sub    rsp,0x2b0
   140006605:	mov    rax,QWORD PTR [rip+0x1ae04]        # 0x140021410
   14000660c:	xor    rax,rsp
   14000660f:	mov    QWORD PTR [rbp+0x1a0],rax
   140006616:	xor    ebx,ebx
   140006618:	mov    rcx,r8
   14000661b:	mov    QWORD PTR [rbp-0x80],0x7
   140006623:	mov    QWORD PTR [rsp+0x78],rbx
   140006628:	mov    WORD PTR [rsp+0x68],bx
   14000662d:	mov    DWORD PTR [rsp+0x50],ebx
   140006631:	mov    DWORD PTR [rsp+0x64],0x104
   140006639:	call   0x140001c80
   14000663e:	lea    rcx,[rip+0x158db]        # 0x14001bf20
   140006645:	call   0x1400020b0
   14000664a:	test   eax,eax
   14000664c:	je     0x14000666c
   14000664e:	lea    rcx,[rip+0x158cb]        # 0x14001bf20
   140006655:	call   0x1400021c0
   14000665a:	mov    rcx,rax
   14000665d:	call   0x1400088dc
   140006662:	movsxd rcx,eax
   140006665:	mov    QWORD PTR [rip+0x1db94],rcx        # 0x140024200
   14000666c:	lea    rcx,[rip+0x15875]        # 0x14001bee8
   140006673:	call   0x1400020b0
   140006678:	test   eax,eax
   14000667a:	je     0x140006699
   14000667c:	call   0x140006460
   140006681:	cmp    QWORD PTR [rbp-0x80],0x8
   140006686:	jb     0x140006692
   140006688:	mov    rcx,QWORD PTR [rsp+0x68]
   14000668d:	call   0x14000872c
   140006692:	xor    eax,eax
   140006694:	jmp    0x1400069a2
   140006699:	lea    rcx,[rip+0x15830]        # 0x14001bed0
   1400066a0:	mov    QWORD PTR [rsp+0x2c0],rdi
   1400066a8:	call   0x1400020b0
   1400066ad:	test   eax,eax
   1400066af:	je     0x14000678f
   1400066b5:	lea    rcx,[rip+0x15874]        # 0x14001bf30
   1400066bc:	call   0x1400021c0
   1400066c1:	mov    rcx,rax
   1400066c4:	call   0x1400088dc
   1400066c9:	lea    rcx,[rip+0x15870]        # 0x14001bf40
   1400066d0:	mov    edi,eax
   1400066d2:	call   0x1400021c0
   1400066d7:	lea    r9,[rsp+0x50]
   1400066dc:	xor    r8d,r8d
   1400066df:	mov    edx,edi
   1400066e1:	mov    rcx,rax
   1400066e4:	call   QWORD PTR [rip+0x11946]        # 0x140018030
   1400066ea:	lea    rcx,[rip+0x1581f]        # 0x14001bf10
   1400066f1:	mov    DWORD PTR [rsp+0x54],eax
   1400066f5:	call   0x1400021c0
   1400066fa:	mov    QWORD PTR [rsp+0x40],rbx
   1400066ff:	mov    rdx,rax
   140006702:	lea    rax,[rsp+0x58]
   140006707:	xor    r9d,r9d
   14000670a:	mov    QWORD PTR [rsp+0x38],rax
   14000670f:	mov    QWORD PTR [rsp+0x30],rbx
   140006714:	xor    r8d,r8d
   140006717:	mov    rcx,0xffffffff80000002
   14000671e:	mov    DWORD PTR [rsp+0x28],0xf023f
   140006726:	mov    DWORD PTR [rsp+0x20],ebx
   14000672a:	call   QWORD PTR [rip+0x118e0]        # 0x140018010
   140006730:	test   eax,eax
   140006732:	jne    0x14000696f
   140006738:	mov    rcx,QWORD PTR [rsp+0x58]
   14000673d:	lea    rax,[rsp+0x54]
   140006742:	lea    rdx,[rip+0x15a5f]        # 0x14001c1a8
   140006749:	mov    r9d,0x4
   14000674f:	xor    r8d,r8d
   140006752:	mov    DWORD PTR [rsp+0x28],0x4
   14000675a:	mov    QWORD PTR [rsp+0x20],rax
   14000675f:	call   QWORD PTR [rip+0x1189b]        # 0x140018000
   140006765:	cmp    DWORD PTR [rsp+0x50],ebx
   140006769:	setne  bl
   14000676c:	mov    DWORD PTR [rsp+0x28],0x4
   140006774:	lea    rax,[rsp+0x60]
   140006779:	mov    r9d,0x4
   14000677f:	lea    rdx,[rip+0x15a32]        # 0x14001c1b8
   140006786:	mov    DWORD PTR [rsp+0x60],ebx
   14000678a:	jmp    0x140006951
   14000678f:	lea    rcx,[rip+0x157aa]        # 0x14001bf40
   140006796:	call   0x1400020b0
   14000679b:	test   eax,eax
   14000679d:	je     0x140006984
   1400067a3:	lea    rcx,[rip+0x15786]        # 0x14001bf30
   1400067aa:	call   0x1400020b0
   1400067af:	test   eax,eax
   1400067b1:	je     0x140006984
   1400067b7:	lea    rcx,[rip+0x15752]        # 0x14001bf10
   1400067be:	call   0x1400020b0
   1400067c3:	test   eax,eax
   1400067c5:	je     0x140006984
   1400067cb:	lea    rcx,[rip+0x1576e]        # 0x14001bf40
   1400067d2:	call   0x1400021c0
   1400067d7:	or     rcx,0xffffffffffffffff
   1400067db:	mov    rdx,rax
   1400067de:	xor    eax,eax
   1400067e0:	mov    rdi,rdx
   1400067e3:	repnz scas ax,WORD PTR es:[rdi]
   1400067e6:	not    rcx
   1400067e9:	lea    r8,[rcx-0x1]
   1400067ed:	lea    rcx,[rsp+0x68]
   1400067f2:	call   0x140004030
   1400067f7:	lea    rcx,[rip+0x15732]        # 0x14001bf30
   1400067fe:	call   0x1400021c0
   140006803:	mov    rcx,rax
   140006806:	call   0x1400088dc
   14000680b:	lea    rcx,[rip+0x156e6]        # 0x14001bef8
   140006812:	mov    edi,eax
   140006814:	call   0x1400020b0
   140006819:	lea    rcx,[rsp+0x68]
   14000681e:	test   eax,eax
   140006820:	je     0x14000683a
   140006822:	cmp    QWORD PTR [rbp-0x80],0x8
   140006827:	cmovae rcx,QWORD PTR [rsp+0x68]
   14000682d:	or     edi,0x1
   140006830:	mov    edx,edi
   140006832:	call   QWORD PTR [rip+0x117f0]        # 0x140018028
   140006838:	jmp    0x140006855
   14000683a:	cmp    QWORD PTR [rbp-0x80],0x8
   14000683f:	lea    r9,[rsp+0x50]
   140006844:	mov    edx,edi
   140006846:	cmovae rcx,QWORD PTR [rsp+0x68]
   14000684c:	xor    r8d,r8d
   14000684f:	call   QWORD PTR [rip+0x117e3]        # 0x140018038
   140006855:	cmp    QWORD PTR [rbp-0x80],0x8
   14000685a:	lea    rcx,[rsp+0x68]
   14000685f:	lea    r8,[rsp+0x64]
   140006864:	cmovae rcx,QWORD PTR [rsp+0x68]
   14000686a:	lea    rdx,[rbp-0x70]
   14000686e:	mov    DWORD PTR [rsp+0x54],eax
   140006872:	call   QWORD PTR [rip+0x117a8]        # 0x140018020
   140006878:	lea    rcx,[rip+0x15691]        # 0x14001bf10
   14000687f:	call   0x1400021c0
   140006884:	mov    QWORD PTR [rsp+0x40],rbx
   140006889:	xor    r9d,r9d
   14000688c:	mov    rdx,rax
   14000688f:	lea    rax,[rsp+0x58]
   140006894:	xor    r8d,r8d
   140006897:	mov    QWORD PTR [rsp+0x38],rax
   14000689c:	mov    QWORD PTR [rsp+0x30],rbx
   1400068a1:	mov    rcx,0xffffffff80000002
   1400068a8:	mov    DWORD PTR [rsp+0x28],0xf023f
   1400068b0:	mov    DWORD PTR [rsp+0x20],ebx
   1400068b4:	call   QWORD PTR [rip+0x11756]        # 0x140018010
   1400068ba:	test   eax,eax
   1400068bc:	jne    0x14000696f
   1400068c2:	mov    rcx,QWORD PTR [rsp+0x58]
   1400068c7:	lea    rax,[rsp+0x54]
   1400068cc:	lea    rdx,[rip+0x158d5]        # 0x14001c1a8
   1400068d3:	mov    r9d,0x4
   1400068d9:	xor    r8d,r8d
   1400068dc:	mov    DWORD PTR [rsp+0x28],0x4
   1400068e4:	mov    QWORD PTR [rsp+0x20],rax
   1400068e9:	call   QWORD PTR [rip+0x11711]        # 0x140018000
   1400068ef:	cmp    DWORD PTR [rsp+0x50],ebx
   1400068f3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400068f8:	setne  bl
   1400068fb:	lea    rax,[rsp+0x60]
   140006900:	lea    rdx,[rip+0x158b1]        # 0x14001c1b8
   140006907:	xor    r8d,r8d
   14000690a:	mov    r9d,0x4
   140006910:	mov    DWORD PTR [rsp+0x28],0x4
   140006918:	mov    DWORD PTR [rsp+0x60],ebx
   14000691c:	mov    QWORD PTR [rsp+0x20],rax
   140006921:	call   QWORD PTR [rip+0x116d9]        # 0x140018000
   140006927:	or     rcx,0xffffffffffffffff
   14000692b:	xor    eax,eax
   14000692d:	lea    rdi,[rbp-0x70]
   140006931:	mov    r9d,0x1
   140006937:	lea    rdx,[rip+0x1588a]        # 0x14001c1c8
   14000693e:	repnz scas ax,WORD PTR es:[rdi]
   140006941:	lea    rax,[rbp-0x70]
   140006945:	not    rcx
   140006948:	dec    rcx
   14000694b:	add    ecx,ecx
   14000694d:	mov    DWORD PTR [rsp+0x28],ecx
   140006951:	mov    rcx,QWORD PTR [rsp+0x58]
   140006956:	xor    r8d,r8d
   140006959:	mov    QWORD PTR [rsp+0x20],rax
   14000695e:	call   QWORD PTR [rip+0x1169c]        # 0x140018000
   140006964:	mov    rcx,QWORD PTR [rsp+0x58]
   140006969:	call   QWORD PTR [rip+0x11699]        # 0x140018008
   14000696f:	cmp    QWORD PTR [rbp-0x80],0x8
   140006974:	jb     0x140006980
   140006976:	mov    rcx,QWORD PTR [rsp+0x68]
   14000697b:	call   0x14000872c
   140006980:	xor    eax,eax
   140006982:	jmp    0x14000699a
   140006984:	cmp    QWORD PTR [rbp-0x80],0x8
   140006989:	jb     0x140006995
   14000698b:	mov    rcx,QWORD PTR [rsp+0x68]
   140006990:	call   0x14000872c
   140006995:	mov    eax,0x1
   14000699a:	mov    rdi,QWORD PTR [rsp+0x2c0]
   1400069a2:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400069a9:	xor    rcx,rsp
   1400069ac:	call   0x140007d20
   1400069b1:	mov    rbx,QWORD PTR [rsp+0x2c8]
   1400069b9:	add    rsp,0x2b0
   1400069c0:	pop    rbp
   1400069c1:	ret    
   1400069c2:	int3   
   1400069c3:	int3   
   1400069c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400069c9:	mov    QWORD PTR [rsp+0x18],rsi
   1400069ce:	mov    WORD PTR [rsp+0x10],dx
   1400069d3:	push   rdi
   1400069d4:	sub    rsp,0x40
   1400069d8:	mov    rsi,rcx
   1400069db:	test   r9,r9
   1400069de:	jne    0x1400069f6
   1400069e0:	call   0x140009370
   1400069e5:	mov    ebx,DWORD PTR [rax+0x8]
   1400069e8:	call   0x140009338
   1400069ed:	movzx  edx,WORD PTR [rsp+0x58]
   1400069f2:	mov    edi,eax
   1400069f4:	jmp    0x1400069fd
   1400069f6:	mov    ebx,DWORD PTR [r9]
   1400069f9:	mov    edi,DWORD PTR [r9+0x4]
   1400069fd:	test   ebx,ebx
   1400069ff:	jne    0x140006a12
   140006a01:	mov    eax,0xff
   140006a06:	cmp    dx,ax
   140006a09:	ja     0x140006a5f
   140006a0b:	mov    BYTE PTR [rsi],dl
   140006a0d:	lea    eax,[rbx+0x1]
   140006a10:	jmp    0x140006a6d
   140006a12:	and    DWORD PTR [rsp+0x68],0x0
   140006a17:	mov    ecx,edi
   140006a19:	call   0x14000788c
   140006a1e:	mov    rcx,rax
   140006a21:	call   0x140009324
   140006a26:	lea    rcx,[rsp+0x68]
   140006a2b:	lea    r8,[rsp+0x58]
   140006a30:	mov    QWORD PTR [rsp+0x38],rcx
   140006a35:	and    QWORD PTR [rsp+0x30],0x0
   140006a3b:	mov    DWORD PTR [rsp+0x28],eax
   140006a3f:	mov    ecx,edi
   140006a41:	mov    r9d,0x1
   140006a47:	xor    edx,edx
   140006a49:	mov    QWORD PTR [rsp+0x20],rsi
   140006a4e:	call   QWORD PTR [rip+0x1164c]        # 0x1400180a0
   140006a54:	test   eax,eax
   140006a56:	je     0x140006a5f
   140006a58:	cmp    DWORD PTR [rsp+0x68],0x0
   140006a5d:	je     0x140006a6d
   140006a5f:	call   0x140008e40
   140006a64:	mov    DWORD PTR [rax],0x2a
   140006a6a:	or     eax,0xffffffff
   140006a6d:	mov    rbx,QWORD PTR [rsp+0x50]
   140006a72:	mov    rsi,QWORD PTR [rsp+0x60]
   140006a77:	add    rsp,0x40
   140006a7b:	pop    rdi
   140006a7c:	ret    
   140006a7d:	int3   
   140006a7e:	int3   
   140006a7f:	int3   
   140006a80:	sub    rsp,0x28
   140006a84:	call   0x140009370
   140006a89:	mov    ecx,DWORD PTR [rax+0x8]
   140006a8c:	mov    DWORD PTR [rsp+0x30],ecx
   140006a90:	call   0x140009338
   140006a95:	mov    DWORD PTR [rsp+0x34],eax
   140006a99:	mov    rax,QWORD PTR [rsp+0x30]
   140006a9e:	add    rsp,0x28
   140006aa2:	ret    
   140006aa3:	int3   
   140006aa4:	rex push rbx
   140006aa6:	sub    rsp,0x20
   140006aaa:	lea    rax,[rip+0x11927]        # 0x1400183d8
   140006ab1:	mov    rbx,rcx
   140006ab4:	mov    QWORD PTR [rcx],rax
   140006ab7:	test   dl,0x1
   140006aba:	je     0x140006ac1
   140006abc:	call   0x14000872c
   140006ac1:	mov    rax,rbx
   140006ac4:	add    rsp,0x20
   140006ac8:	pop    rbx
   140006ac9:	ret    
   140006aca:	int3   
   140006acb:	int3   
   140006acc:	rex push rbx
   140006ace:	sub    rsp,0x30
   140006ad2:	mov    rax,QWORD PTR [rcx]
   140006ad5:	mov    rbx,r8
   140006ad8:	mov    r8d,edx
   140006adb:	lea    rdx,[rsp+0x20]
   140006ae0:	call   QWORD PTR [rax+0x18]
   140006ae3:	mov    rcx,QWORD PTR [rbx+0x8]
   140006ae7:	cmp    QWORD PTR [rax+0x8],rcx
   140006aeb:	jne    0x140006afa
   140006aed:	mov    ecx,DWORD PTR [rbx]
   140006aef:	cmp    DWORD PTR [rax],ecx
   140006af1:	jne    0x140006afa
   140006af3:	mov    eax,0x1
   140006af8:	jmp    0x140006afc
   140006afa:	xor    eax,eax
   140006afc:	add    rsp,0x30
   140006b00:	pop    rbx
   140006b01:	ret    
   140006b02:	int3   
   140006b03:	int3   
   140006b04:	cmp    rcx,QWORD PTR [rdx+0x8]
   140006b08:	jne    0x140006b15
   140006b0a:	cmp    DWORD PTR [rdx],r8d
   140006b0d:	jne    0x140006b15
   140006b0f:	mov    eax,0x1
   140006b14:	ret    
   140006b15:	xor    eax,eax
   140006b17:	ret    
   140006b18:	mov    rax,QWORD PTR [rcx+0x8]
   140006b1c:	ret    
   140006b1d:	int3   
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	mov    rax,QWORD PTR [rcx+0x10]
   140006b24:	ret    
   140006b25:	int3   
   140006b26:	int3   
   140006b27:	int3   
   140006b28:	mov    DWORD PTR [rdx],r8d
   140006b2b:	mov    QWORD PTR [rdx+0x8],rcx
   140006b2f:	mov    rax,rdx
   140006b32:	ret    
   140006b33:	int3   
   140006b34:	lea    rax,[rip+0x1a5ad]        # 0x1400210e8
   140006b3b:	ret    
   140006b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140006b41:	push   rdi
   140006b42:	sub    rsp,0x20
   140006b46:	mov    rdi,r8
   140006b49:	mov    r8,QWORD PTR [rcx+0x10]
   140006b4d:	mov    rax,rdx
   140006b50:	mov    rbx,rcx
   140006b53:	cmp    r8,rdx
   140006b56:	jae    0x140006b65
   140006b58:	lea    rcx,[rip+0x150e9]        # 0x14001bc48
   140006b5f:	call   0x140007590
   140006b64:	int3   
   140006b65:	sub    r8,rax
   140006b68:	cmp    r8,rdi
   140006b6b:	cmovb  rdi,r8
   140006b6f:	test   rdi,rdi
   140006b72:	je     0x140006bbd
   140006b74:	cmp    QWORD PTR [rcx+0x18],0x10
   140006b79:	jb     0x140006b80
   140006b7b:	mov    rdx,QWORD PTR [rcx]
   140006b7e:	jmp    0x140006b83
   140006b80:	mov    rdx,rcx
   140006b83:	cmp    QWORD PTR [rcx+0x18],0x10
   140006b88:	jb     0x140006b8d
   140006b8a:	mov    rcx,QWORD PTR [rcx]
   140006b8d:	add    rdx,rax
   140006b90:	sub    r8,rdi
   140006b93:	add    rcx,rax
   140006b96:	add    rdx,rdi
   140006b99:	call   0x140008250
   140006b9e:	mov    r11,QWORD PTR [rbx+0x10]
   140006ba2:	sub    r11,rdi
   140006ba5:	cmp    QWORD PTR [rbx+0x18],0x10
   140006baa:	mov    QWORD PTR [rbx+0x10],r11
   140006bae:	jb     0x140006bb5
   140006bb0:	mov    rax,QWORD PTR [rbx]
   140006bb3:	jmp    0x140006bb8
   140006bb5:	mov    rax,rbx
   140006bb8:	mov    BYTE PTR [rax+r11*1],0x0
   140006bbd:	mov    rax,rbx
   140006bc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bc5:	add    rsp,0x20
   140006bc9:	pop    rdi
   140006bca:	ret    
   140006bcb:	int3   
   140006bcc:	mov    QWORD PTR [rsp+0x18],r8
   140006bd1:	mov    QWORD PTR [rsp+0x10],rdx
   140006bd6:	mov    QWORD PTR [rsp+0x8],rcx
   140006bdb:	push   rbx
   140006bdc:	push   rsi
   140006bdd:	push   rdi
   140006bde:	push   r12
   140006be0:	sub    rsp,0x68
   140006be4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bed:	mov    r12,r8
   140006bf0:	mov    rdi,rcx
   140006bf3:	mov    rbx,rdx
   140006bf6:	or     rbx,0xf
   140006bfa:	mov    r9,0xfffffffffffffffe
   140006c01:	cmp    rbx,r9
   140006c04:	jbe    0x140006c0b
   140006c06:	mov    rbx,rdx
   140006c09:	jmp    0x140006c3c
   140006c0b:	mov    r8,QWORD PTR [rcx+0x18]
   140006c0f:	mov    rcx,r8
   140006c12:	shr    rcx,1
   140006c15:	movabs rax,0xaaaaaaaaaaaaaaab
   140006c1f:	mul    rbx
   140006c22:	shr    rdx,1
   140006c25:	cmp    rcx,rdx
   140006c28:	jbe    0x140006c3c
   140006c2a:	mov    rax,r9
   140006c2d:	sub    rax,rcx
   140006c30:	cmp    r8,rax
   140006c33:	lea    rbx,[rcx+r8*1]
   140006c37:	jbe    0x140006c3c
   140006c39:	mov    rbx,r9
   140006c3c:	lea    rcx,[rbx+0x1]
   140006c40:	xor    esi,esi
   140006c42:	test   rcx,rcx
   140006c45:	je     0x140006c93
   140006c47:	cmp    rcx,0xffffffffffffffff
   140006c4b:	ja     0x140006c5a
   140006c4d:	call   0x140008790
   140006c52:	mov    rsi,rax
   140006c55:	test   rax,rax
   140006c58:	jne    0x140006c93
   140006c5a:	and    QWORD PTR [rsp+0xa8],0x0
   140006c63:	lea    rdx,[rsp+0xa8]
   140006c6b:	lea    rcx,[rsp+0x28]
   140006c70:	call   0x140008104
   140006c75:	lea    rax,[rip+0x117d4]        # 0x140018450
   140006c7c:	mov    QWORD PTR [rsp+0x28],rax
   140006c81:	lea    rdx,[rip+0x18a18]        # 0x14001f6a0
   140006c88:	lea    rcx,[rsp+0x28]
   140006c8d:	call   0x140009498
   140006c92:	nop
   140006c93:	jmp    0x140006cb5
   140006c95:	mov    rdi,QWORD PTR [rsp+0x90]
   140006c9d:	mov    r12,QWORD PTR [rsp+0xa0]
   140006ca5:	mov    rbx,QWORD PTR [rsp+0x98]
   140006cad:	mov    rsi,QWORD PTR [rsp+0xa8]
   140006cb5:	test   r12,r12
   140006cb8:	je     0x140006cd4
   140006cba:	cmp    QWORD PTR [rdi+0x18],0x10
   140006cbf:	jb     0x140006cc6
   140006cc1:	mov    rdx,QWORD PTR [rdi]
   140006cc4:	jmp    0x140006cc9
   140006cc6:	mov    rdx,rdi
   140006cc9:	mov    r8,r12
   140006ccc:	mov    rcx,rsi
   140006ccf:	call   0x140008250
   140006cd4:	cmp    QWORD PTR [rdi+0x18],0x10
   140006cd9:	jb     0x140006ce3
   140006cdb:	mov    rcx,QWORD PTR [rdi]
   140006cde:	call   0x14000872c
   140006ce3:	mov    BYTE PTR [rdi],0x0
   140006ce6:	mov    QWORD PTR [rdi],rsi
   140006ce9:	mov    QWORD PTR [rdi+0x18],rbx
   140006ced:	mov    QWORD PTR [rdi+0x10],r12
   140006cf1:	cmp    rbx,0x10
   140006cf5:	cmovae rdi,rsi
   140006cf9:	mov    BYTE PTR [rdi+r12*1],0x0
   140006cfe:	add    rsp,0x68
   140006d02:	pop    r12
   140006d04:	pop    rdi
   140006d05:	pop    rsi
   140006d06:	pop    rbx
   140006d07:	ret    
   140006d08:	mov    QWORD PTR [rsp+0x8],rbx
   140006d0d:	mov    QWORD PTR [rsp+0x10],rbp
   140006d12:	mov    QWORD PTR [rsp+0x18],rsi
   140006d17:	push   rdi
   140006d18:	sub    rsp,0x20
   140006d1c:	mov    rdi,QWORD PTR [rdx+0x10]
   140006d20:	mov    rbp,r8
   140006d23:	mov    rsi,rdx
   140006d26:	mov    rbx,rcx
   140006d29:	cmp    rdi,r8
   140006d2c:	jae    0x140006d3b
   140006d2e:	lea    rcx,[rip+0x14f13]        # 0x14001bc48
   140006d35:	call   0x140007590
   140006d3a:	int3   
   140006d3b:	sub    rdi,r8
   140006d3e:	cmp    r9,rdi
   140006d41:	cmovb  rdi,r9
   140006d45:	cmp    rcx,rdx
   140006d48:	jne    0x140006d69
   140006d4a:	lea    rdx,[rdi+r8*1]
   140006d4e:	or     r8,0xffffffffffffffff
   140006d52:	call   0x140006b3c
   140006d57:	mov    r8,rbp
   140006d5a:	xor    edx,edx
   140006d5c:	mov    rcx,rbx
   140006d5f:	call   0x140006b3c
   140006d64:	jmp    0x140006dec
   140006d69:	cmp    rdi,0xfffffffffffffffe
   140006d6d:	jbe    0x140006d7c
   140006d6f:	lea    rcx,[rip+0x14eea]        # 0x14001bc60
   140006d76:	call   0x140007534
   140006d7b:	int3   
   140006d7c:	cmp    QWORD PTR [rcx+0x18],rdi
   140006d80:	jae    0x140006d90
   140006d82:	mov    r8,QWORD PTR [rcx+0x10]
   140006d86:	mov    rdx,rdi
   140006d89:	call   0x140006bcc
   140006d8e:	jmp    0x140006dab
   140006d90:	test   rdi,rdi
   140006d93:	jne    0x140006db0
   140006d95:	and    QWORD PTR [rcx+0x10],rdi
   140006d99:	cmp    QWORD PTR [rcx+0x18],0x10
   140006d9e:	jb     0x140006da5
   140006da0:	mov    rax,QWORD PTR [rcx]
   140006da3:	jmp    0x140006da8
   140006da5:	mov    rax,rcx
   140006da8:	mov    BYTE PTR [rax],0x0
   140006dab:	test   rdi,rdi
   140006dae:	je     0x140006dec
   140006db0:	cmp    QWORD PTR [rsi+0x18],0x10
   140006db5:	jb     0x140006dba
   140006db7:	mov    rsi,QWORD PTR [rsi]
   140006dba:	cmp    QWORD PTR [rbx+0x18],0x10
   140006dbf:	jb     0x140006dc6
   140006dc1:	mov    rcx,QWORD PTR [rbx]
   140006dc4:	jmp    0x140006dc9
   140006dc6:	mov    rcx,rbx
   140006dc9:	lea    rdx,[rsi+rbp*1]
   140006dcd:	mov    r8,rdi
   140006dd0:	call   0x140008250
   140006dd5:	cmp    QWORD PTR [rbx+0x18],0x10
   140006dda:	mov    QWORD PTR [rbx+0x10],rdi
   140006dde:	jb     0x140006de5
   140006de0:	mov    rax,QWORD PTR [rbx]
   140006de3:	jmp    0x140006de8
   140006de5:	mov    rax,rbx
   140006de8:	mov    BYTE PTR [rax+rdi*1],0x0
   140006dec:	mov    rbp,QWORD PTR [rsp+0x38]
   140006df1:	mov    rsi,QWORD PTR [rsp+0x40]
   140006df6:	mov    rax,rbx
   140006df9:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dfe:	add    rsp,0x20
   140006e02:	pop    rdi
   140006e03:	ret    
   140006e04:	mov    QWORD PTR [rsp+0x8],rbx
   140006e09:	mov    QWORD PTR [rsp+0x10],rsi
   140006e0e:	push   rdi
   140006e0f:	sub    rsp,0x20
   140006e13:	mov    rdi,r8
   140006e16:	mov    rsi,rdx
   140006e19:	mov    rbx,rcx
   140006e1c:	test   rdx,rdx
   140006e1f:	je     0x140006e6d
   140006e21:	cmp    QWORD PTR [rcx+0x18],0x10
   140006e26:	jb     0x140006e2d
   140006e28:	mov    rax,QWORD PTR [rcx]
   140006e2b:	jmp    0x140006e30
   140006e2d:	mov    rax,rcx
   140006e30:	cmp    rdx,rax
   140006e33:	jb     0x140006e6d
   140006e35:	cmp    QWORD PTR [rcx+0x18],0x10
   140006e3a:	jb     0x140006e3f
   140006e3c:	mov    rcx,QWORD PTR [rcx]
   140006e3f:	add    rcx,QWORD PTR [rbx+0x10]
   140006e43:	cmp    rcx,rdx
   140006e46:	jbe    0x140006e6d
   140006e48:	cmp    QWORD PTR [rbx+0x18],0x10
   140006e4d:	jb     0x140006e54
   140006e4f:	mov    rax,QWORD PTR [rbx]
   140006e52:	jmp    0x140006e57
   140006e54:	mov    rax,rbx
   140006e57:	sub    rsi,rax
   140006e5a:	mov    r9,r8
   140006e5d:	mov    rdx,rbx
   140006e60:	mov    r8,rsi
   140006e63:	mov    rcx,rbx
   140006e66:	call   0x140006d08
   140006e6b:	jmp    0x140006eeb
   140006e6d:	cmp    r8,0xfffffffffffffffe
   140006e71:	jbe    0x140006e80
   140006e73:	lea    rcx,[rip+0x14de6]        # 0x14001bc60
   140006e7a:	call   0x140007534
   140006e7f:	int3   
   140006e80:	cmp    QWORD PTR [rbx+0x18],r8
   140006e84:	jae    0x140006e97
   140006e86:	mov    r8,QWORD PTR [rbx+0x10]
   140006e8a:	mov    rdx,rdi
   140006e8d:	mov    rcx,rbx
   140006e90:	call   0x140006bcc
   140006e95:	jmp    0x140006eb2
   140006e97:	test   r8,r8
   140006e9a:	jne    0x140006eb2
   140006e9c:	and    QWORD PTR [rbx+0x10],r8
   140006ea0:	cmp    QWORD PTR [rbx+0x18],0x10
   140006ea5:	jb     0x140006eac
   140006ea7:	mov    rax,QWORD PTR [rbx]
   140006eaa:	jmp    0x140006eaf
   140006eac:	mov    rax,rbx
   140006eaf:	mov    BYTE PTR [rax],0x0
   140006eb2:	test   rdi,rdi
   140006eb5:	je     0x140006ee8
   140006eb7:	cmp    QWORD PTR [rbx+0x18],0x10
   140006ebc:	jb     0x140006ec3
   140006ebe:	mov    rcx,QWORD PTR [rbx]
   140006ec1:	jmp    0x140006ec6
   140006ec3:	mov    rcx,rbx
   140006ec6:	mov    r8,rdi
   140006ec9:	mov    rdx,rsi
   140006ecc:	call   0x140008250
   140006ed1:	cmp    QWORD PTR [rbx+0x18],0x10
   140006ed6:	mov    QWORD PTR [rbx+0x10],rdi
   140006eda:	jb     0x140006ee1
   140006edc:	mov    rax,QWORD PTR [rbx]
   140006edf:	jmp    0x140006ee4
   140006ee1:	mov    rax,rbx
   140006ee4:	mov    BYTE PTR [rax+rdi*1],0x0
   140006ee8:	mov    rax,rbx
   140006eeb:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ef0:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ef5:	add    rsp,0x20
   140006ef9:	pop    rdi
   140006efa:	ret    
   140006efb:	int3   
   140006efc:	mov    QWORD PTR [rsp+0x8],rbx
   140006f01:	push   rdi
   140006f02:	sub    rsp,0x20
   140006f06:	and    DWORD PTR [rsp+0x38],0x0
   140006f0b:	mov    ecx,r8d
   140006f0e:	mov    rdi,rdx
   140006f11:	call   0x140009ba0
   140006f16:	and    QWORD PTR [rdi+0x10],0x0
   140006f1b:	mov    QWORD PTR [rdi+0x18],0xf
   140006f23:	mov    rcx,rax
   140006f26:	mov    rbx,rax
   140006f29:	mov    BYTE PTR [rdi],0x0
   140006f2c:	call   0x1400093f0
   140006f31:	mov    rdx,rbx
   140006f34:	mov    rcx,rdi
   140006f37:	mov    r8,rax
   140006f3a:	call   0x140006e04
   140006f3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f44:	mov    rax,rdi
   140006f47:	add    rsp,0x20
   140006f4b:	pop    rdi
   140006f4c:	ret    
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	mov    QWORD PTR [rsp+0x8],rbx
   140006f55:	push   rdi
   140006f56:	sub    rsp,0x20
   140006f5a:	and    DWORD PTR [rsp+0x40],0x0
   140006f5f:	mov    rdi,rdx
   140006f62:	cmp    r8d,0x1
   140006f66:	jne    0x140006f8d
   140006f68:	and    QWORD PTR [rdx+0x10],0x0
   140006f6d:	mov    QWORD PTR [rdx+0x18],0xf
   140006f75:	lea    rcx,[rip+0x11594]        # 0x140018510
   140006f7c:	mov    BYTE PTR [rdx],0x0
   140006f7f:	call   0x1400093f0
   140006f84:	lea    rdx,[rip+0x11585]        # 0x140018510
   140006f8b:	jmp    0x140006fb3
   140006f8d:	mov    ecx,r8d
   140006f90:	call   0x140009ba0
   140006f95:	and    QWORD PTR [rdi+0x10],0x0
   140006f9a:	mov    QWORD PTR [rdi+0x18],0xf
   140006fa2:	mov    rcx,rax
   140006fa5:	mov    rbx,rax
   140006fa8:	mov    BYTE PTR [rdi],0x0
   140006fab:	call   0x1400093f0
   140006fb0:	mov    rdx,rbx
   140006fb3:	mov    r8,rax
   140006fb6:	mov    rcx,rdi
   140006fb9:	call   0x140006e04
   140006fbe:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fc3:	mov    rax,rdi
   140006fc6:	add    rsp,0x20
   140006fca:	pop    rdi
   140006fcb:	ret    
   140006fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140006fd1:	push   rdi
   140006fd2:	sub    rsp,0x20
   140006fd6:	mov    rbx,QWORD PTR [rcx+0x38]
   140006fda:	mov    rdi,rcx
   140006fdd:	jmp    0x140006fee
   140006fdf:	mov    r8d,DWORD PTR [rbx+0x8]
   140006fe3:	mov    rdx,rdi
   140006fe6:	xor    ecx,ecx
   140006fe8:	call   QWORD PTR [rbx+0x10]
   140006feb:	mov    rbx,QWORD PTR [rbx]
   140006fee:	test   rbx,rbx
   140006ff1:	jne    0x140006fdf
   140006ff3:	mov    rcx,QWORD PTR [rdi+0x30]
   140006ff7:	test   rcx,rcx
   140006ffa:	je     0x14000700c
   140006ffc:	mov    rbx,QWORD PTR [rcx]
   140006fff:	call   0x14000872c
   140007004:	mov    rcx,rbx
   140007007:	test   rbx,rbx
   14000700a:	jne    0x140006ffc
   14000700c:	mov    rcx,QWORD PTR [rdi+0x38]
   140007010:	and    QWORD PTR [rdi+0x30],0x0
   140007015:	test   rcx,rcx
   140007018:	je     0x14000702a
   14000701a:	mov    rbx,QWORD PTR [rcx]
   14000701d:	call   0x14000872c
   140007022:	mov    rcx,rbx
   140007025:	test   rbx,rbx
   140007028:	jne    0x14000701a
   14000702a:	and    QWORD PTR [rdi+0x38],0x0
   14000702f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007034:	add    rsp,0x20
   140007038:	pop    rdi
   140007039:	ret    
   14000703a:	int3   
   14000703b:	int3   
   14000703c:	rex push rbx
   14000703e:	sub    rsp,0x20
   140007042:	cmp    QWORD PTR [rcx+0x8],0x0
   140007047:	mov    rbx,rcx
   14000704a:	jbe    0x140007060
   14000704c:	mov    rax,QWORD PTR [rbx+0x8]
   140007050:	lea    rcx,[rip+0x1bc29]        # 0x140022c80
   140007057:	dec    BYTE PTR [rcx+rax*1]
   14000705a:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000705e:	jg     0x140007081
   140007060:	mov    rcx,rbx
   140007063:	call   0x140006fcc
   140007068:	mov    rbx,QWORD PTR [rbx+0x40]
   14000706c:	test   rbx,rbx
   14000706f:	je     0x140007081
   140007071:	mov    rcx,rbx
   140007074:	call   0x1400010b0
   140007079:	mov    rcx,rbx
   14000707c:	call   0x14000872c
   140007081:	add    rsp,0x20
   140007085:	pop    rbx
   140007086:	ret    
   140007087:	int3   
   140007088:	mov    QWORD PTR [rsp+0x10],rbx
   14000708d:	push   rdi
   14000708e:	sub    rsp,0x20
   140007092:	mov    rdi,QWORD PTR [rcx+0x8]
   140007096:	lea    rcx,[rsp+0x30]
   14000709b:	xor    edx,edx
   14000709d:	call   0x1400076a4
   1400070a2:	mov    rax,QWORD PTR [rdi+0x8]
   1400070a6:	test   rax,rax
   1400070a9:	je     0x1400070b8
   1400070ab:	cmp    rax,0xffffffffffffffff
   1400070af:	jae    0x1400070b8
   1400070b1:	dec    rax
   1400070b4:	mov    QWORD PTR [rdi+0x8],rax
   1400070b8:	xor    ebx,ebx
   1400070ba:	lea    rcx,[rsp+0x30]
   1400070bf:	cmp    QWORD PTR [rdi+0x8],rbx
   1400070c3:	cmove  rbx,rdi
   1400070c7:	call   0x1400076d4
   1400070cc:	test   rbx,rbx
   1400070cf:	je     0x1400070de
   1400070d1:	mov    rax,QWORD PTR [rbx]
   1400070d4:	mov    edx,0x1
   1400070d9:	mov    rcx,rbx
   1400070dc:	call   QWORD PTR [rax]
   1400070de:	mov    rbx,QWORD PTR [rsp+0x38]
   1400070e3:	add    rsp,0x20
   1400070e7:	pop    rdi
   1400070e8:	ret    
   1400070e9:	int3   
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	rex push rbx
   1400070ee:	sub    rsp,0x20
   1400070f2:	mov    rbx,rcx
   1400070f5:	mov    ecx,0x10
   1400070fa:	call   0x140008790
   1400070ff:	test   rax,rax
   140007102:	je     0x140007112
   140007104:	mov    rdx,QWORD PTR [rip+0x1bb85]        # 0x140022c90
   14000710b:	mov    QWORD PTR [rax+0x8],rbx
   14000710f:	mov    QWORD PTR [rax],rdx
   140007112:	mov    QWORD PTR [rip+0x1bb77],rax        # 0x140022c90
   140007119:	add    rsp,0x20
   14000711d:	pop    rbx
   14000711e:	ret    
   14000711f:	int3   
   140007120:	mov    QWORD PTR [rsp+0x10],rbx
   140007125:	push   rdi
   140007126:	sub    rsp,0x20
   14000712a:	mov    rbx,QWORD PTR [rcx]
   14000712d:	test   rbx,rbx
   140007130:	je     0x14000717a
   140007132:	lea    rcx,[rsp+0x30]
   140007137:	xor    edx,edx
   140007139:	call   0x1400076a4
   14000713e:	mov    rax,QWORD PTR [rbx+0x8]
   140007142:	test   rax,rax
   140007145:	je     0x140007154
   140007147:	cmp    rax,0xffffffffffffffff
   14000714b:	jae    0x140007154
   14000714d:	dec    rax
   140007150:	mov    QWORD PTR [rbx+0x8],rax
   140007154:	xor    edi,edi
   140007156:	lea    rcx,[rsp+0x30]
   14000715b:	cmp    QWORD PTR [rbx+0x8],rdi
   14000715f:	cmove  rdi,rbx
   140007163:	call   0x1400076d4
   140007168:	test   rdi,rdi
   14000716b:	je     0x14000717a
   14000716d:	mov    rax,QWORD PTR [rdi]
   140007170:	mov    edx,0x1
   140007175:	mov    rcx,rdi
   140007178:	call   QWORD PTR [rax]
   14000717a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000717f:	add    rsp,0x20
   140007183:	pop    rdi
   140007184:	ret    
   140007185:	int3   
   140007186:	int3   
   140007187:	int3   
   140007188:	sub    rsp,0x28
   14000718c:	lea    rcx,[rsp+0x30]
   140007191:	xor    edx,edx
   140007193:	call   0x1400076a4
   140007198:	lea    rcx,[rip+0x1baf9]        # 0x140022c98
   14000719f:	call   0x140007120
   1400071a4:	and    QWORD PTR [rip+0x1baec],0x0        # 0x140022c98
   1400071ac:	lea    rcx,[rsp+0x30]
   1400071b1:	call   0x1400076d4
   1400071b6:	add    rsp,0x28
   1400071ba:	ret    
   1400071bb:	int3   
   1400071bc:	mov    rax,QWORD PTR [rip+0x1bad5]        # 0x140022c98
   1400071c3:	ret    
   1400071c4:	rex push rbx
   1400071c6:	sub    rsp,0x20
   1400071ca:	cmp    BYTE PTR [rip+0x1bb0f],0x0        # 0x140022ce0
   1400071d1:	mov    rbx,rcx
   1400071d4:	jne    0x1400071e9
   1400071d6:	lea    rcx,[rip+0xffffffffffffffab]        # 0x140007188
   1400071dd:	mov    BYTE PTR [rip+0x1bafc],0x1        # 0x140022ce0
   1400071e4:	call   0x140007cb0
   1400071e9:	mov    QWORD PTR [rip+0x1baa8],rbx        # 0x140022c98
   1400071f0:	add    rsp,0x20
   1400071f4:	pop    rbx
   1400071f5:	ret    
   1400071f6:	int3   
   1400071f7:	int3   
   1400071f8:	rex push rbp
   1400071fa:	push   rsi
   1400071fb:	push   rdi
   1400071fc:	sub    rsp,0x30
   140007200:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007209:	mov    QWORD PTR [rsp+0x60],rbx
   14000720e:	mov    rdi,rcx
   140007211:	xor    edx,edx
   140007213:	lea    rcx,[rsp+0x58]
   140007218:	call   0x1400076a4
   14000721d:	nop
   14000721e:	mov    rbx,QWORD PTR [rdi+0x18]
   140007222:	jmp    0x14000727e
   140007224:	dec    rbx
   140007227:	mov    rax,QWORD PTR [rdi+0x10]
   14000722b:	cmp    QWORD PTR [rax+rbx*8],0x0
   140007230:	je     0x14000727e
   140007232:	mov    rbp,QWORD PTR [rax+rbx*8]
   140007236:	xor    edx,edx
   140007238:	lea    rcx,[rsp+0x50]
   14000723d:	call   0x1400076a4
   140007242:	mov    rax,QWORD PTR [rbp+0x8]
   140007246:	test   rax,rax
   140007249:	je     0x140007258
   14000724b:	cmp    rax,0xffffffffffffffff
   14000724f:	jae    0x140007258
   140007251:	dec    rax
   140007254:	mov    QWORD PTR [rbp+0x8],rax
   140007258:	xor    esi,esi
   14000725a:	cmp    QWORD PTR [rbp+0x8],rsi
   14000725e:	cmove  rsi,rbp
   140007262:	lea    rcx,[rsp+0x50]
   140007267:	call   0x1400076d4
   14000726c:	test   rsi,rsi
   14000726f:	je     0x14000727e
   140007271:	mov    rax,QWORD PTR [rsi]
   140007274:	mov    edx,0x1
   140007279:	mov    rcx,rsi
   14000727c:	call   QWORD PTR [rax]
   14000727e:	test   rbx,rbx
   140007281:	jne    0x140007224
   140007283:	mov    rcx,QWORD PTR [rdi+0x10]
   140007287:	call   0x140008584
   14000728c:	nop
   14000728d:	lea    rcx,[rsp+0x58]
   140007292:	call   0x1400076d4
   140007297:	mov    rbx,QWORD PTR [rsp+0x60]
   14000729c:	add    rsp,0x30
   1400072a0:	pop    rdi
   1400072a1:	pop    rsi
   1400072a2:	pop    rbp
   1400072a3:	ret    
   1400072a4:	sub    rsp,0x28
   1400072a8:	mov    rdx,QWORD PTR [rcx+0x28]
   1400072ac:	test   rdx,rdx
   1400072af:	je     0x1400072b8
   1400072b1:	xor    ecx,ecx
   1400072b3:	call   0x14000aa18
   1400072b8:	add    rsp,0x28
   1400072bc:	ret    
   1400072bd:	int3   
   1400072be:	int3   
   1400072bf:	int3   
   1400072c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400072c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400072ca:	push   rdi
   1400072cb:	sub    rsp,0x20
   1400072cf:	mov    rsi,rcx
   1400072d2:	mov    rcx,QWORD PTR [rcx]
   1400072d5:	mov    rbx,rdx
   1400072d8:	cmp    rcx,rdx
   1400072db:	je     0x140007323
   1400072dd:	test   rcx,rcx
   1400072e0:	je     0x1400072e7
   1400072e2:	call   0x140008584
   1400072e7:	and    QWORD PTR [rsi],0x0
   1400072eb:	test   rbx,rbx
   1400072ee:	je     0x140007323
   1400072f0:	cmp    BYTE PTR [rbx],0x0
   1400072f3:	mov    rdi,rbx
   1400072f6:	je     0x140007300
   1400072f8:	inc    rdi
   1400072fb:	cmp    BYTE PTR [rdi],0x0
   1400072fe:	jne    0x1400072f8
   140007300:	sub    rdi,rbx
   140007303:	lea    rcx,[rdi+0x1]
   140007307:	call   0x14000abd4
   14000730c:	mov    QWORD PTR [rsi],rax
   14000730f:	test   rax,rax
   140007312:	je     0x140007323
   140007314:	lea    r8,[rdi+0x1]
   140007318:	mov    rdx,rbx
   14000731b:	mov    rcx,rax
   14000731e:	call   0x140008250
   140007323:	mov    rbx,QWORD PTR [rsp+0x30]
   140007328:	mov    rax,rsi
   14000732b:	mov    rsi,QWORD PTR [rsp+0x38]
   140007330:	add    rsp,0x20
   140007334:	pop    rdi
   140007335:	ret    
   140007336:	int3   
   140007337:	int3   
   140007338:	mov    QWORD PTR [rsp+0x8],rbx
   14000733d:	push   rdi
   14000733e:	sub    rsp,0x20
   140007342:	mov    rbx,rdx
   140007345:	mov    rdi,rcx
   140007348:	xor    edx,edx
   14000734a:	xor    ecx,ecx
   14000734c:	call   0x14000aa18
   140007351:	lea    rcx,[rip+0x11212]        # 0x14001856a
   140007358:	test   rax,rax
   14000735b:	cmove  rax,rcx
   14000735f:	lea    rcx,[rdi+0x28]
   140007363:	mov    rdx,rax
   140007366:	call   0x1400072c0
   14000736b:	test   rbx,rbx
   14000736e:	je     0x14000737d
   140007370:	mov    rdx,rbx
   140007373:	xor    ecx,ecx
   140007375:	call   0x14000aa18
   14000737a:	mov    rbx,rax
   14000737d:	lea    rax,[rip+0x111e4]        # 0x140018568
   140007384:	test   rbx,rbx
   140007387:	lea    rcx,[rdi+0x38]
   14000738b:	cmove  rbx,rax
   14000738f:	mov    rdx,rbx
   140007392:	mov    rbx,QWORD PTR [rsp+0x30]
   140007397:	add    rsp,0x20
   14000739b:	pop    rdi
   14000739c:	jmp    0x1400072c0
   1400073a1:	int3   
   1400073a2:	int3   
   1400073a3:	int3   
   1400073a4:	mov    QWORD PTR [rsp+0x8],rcx
   1400073a9:	push   rdi
   1400073aa:	sub    rsp,0x30
   1400073ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400073b7:	mov    QWORD PTR [rsp+0x48],rbx
   1400073bc:	mov    edi,edx
   1400073be:	mov    rbx,rcx
   1400073c1:	lea    rax,[rip+0x111b0]        # 0x140018578
   1400073c8:	mov    QWORD PTR [rcx],rax
   1400073cb:	call   0x1400071f8
   1400073d0:	nop
   1400073d1:	mov    rcx,QWORD PTR [rbx+0x28]
   1400073d5:	test   rcx,rcx
   1400073d8:	je     0x1400073df
   1400073da:	call   0x140008584
   1400073df:	and    QWORD PTR [rbx+0x28],0x0
   1400073e4:	lea    rax,[rip+0x1114d]        # 0x140018538
   1400073eb:	mov    QWORD PTR [rbx],rax
   1400073ee:	test   dil,0x1
   1400073f2:	je     0x1400073fc
   1400073f4:	mov    rcx,rbx
   1400073f7:	call   0x14000872c
   1400073fc:	mov    rax,rbx
   1400073ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140007404:	add    rsp,0x30
   140007408:	pop    rdi
   140007409:	ret    
   14000740a:	int3   
   14000740b:	int3   
   14000740c:	rex push rbx
   14000740e:	sub    rsp,0x30
   140007412:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000741b:	mov    rbx,QWORD PTR [rip+0x1b876]        # 0x140022c98
   140007422:	test   rbx,rbx
   140007425:	jne    0x1400074fd
   14000742b:	xor    edx,edx
   14000742d:	lea    rcx,[rsp+0x48]
   140007432:	call   0x1400076a4
   140007437:	nop
   140007438:	mov    rbx,QWORD PTR [rip+0x1b859]        # 0x140022c98
   14000743f:	test   rbx,rbx
   140007442:	jne    0x1400074f3
   140007448:	lea    ecx,[rbx+0x38]
   14000744b:	call   0x140008790
   140007450:	mov    rbx,rax
   140007453:	test   rax,rax
   140007456:	je     0x140007496
   140007458:	mov    QWORD PTR [rax+0x8],0x1
   140007460:	lea    rax,[rip+0x11111]        # 0x140018578
   140007467:	mov    QWORD PTR [rbx],rax
   14000746a:	and    QWORD PTR [rbx+0x10],0x0
   14000746f:	and    QWORD PTR [rbx+0x18],0x0
   140007474:	and    DWORD PTR [rbx+0x20],0x0
   140007478:	mov    BYTE PTR [rbx+0x24],0x0
   14000747c:	lea    rcx,[rbx+0x28]
   140007480:	and    QWORD PTR [rcx],0x0
   140007484:	mov    BYTE PTR [rcx+0x8],0x0
   140007488:	lea    rdx,[rip+0x110d9]        # 0x140018568
   14000748f:	call   0x1400072c0
   140007494:	jmp    0x140007498
   140007496:	xor    ebx,ebx
   140007498:	mov    rcx,rbx
   14000749b:	call   0x1400071c4
   1400074a0:	mov    DWORD PTR [rbx+0x20],0x3f
   1400074a7:	lea    rcx,[rbx+0x28]
   1400074ab:	lea    rdx,[rip+0x1111e]        # 0x1400185d0
   1400074b2:	call   0x1400072c0
   1400074b7:	mov    QWORD PTR [rip+0x1b7e2],rbx        # 0x140022ca0
   1400074be:	xor    edx,edx
   1400074c0:	lea    rcx,[rsp+0x40]
   1400074c5:	call   0x1400076a4
   1400074ca:	mov    rcx,QWORD PTR [rbx+0x8]
   1400074ce:	cmp    rcx,0xffffffffffffffff
   1400074d2:	jae    0x1400074db
   1400074d4:	inc    rcx
   1400074d7:	mov    QWORD PTR [rbx+0x8],rcx
   1400074db:	lea    rcx,[rsp+0x40]
   1400074e0:	call   0x1400076d4
   1400074e5:	mov    r11,QWORD PTR [rip+0x1b7b4]        # 0x140022ca0
   1400074ec:	mov    QWORD PTR [rip+0x1b7d5],r11        # 0x140022cc8
   1400074f3:	lea    rcx,[rsp+0x48]
   1400074f8:	call   0x1400076d4
   1400074fd:	mov    rax,rbx
   140007500:	add    rsp,0x30
   140007504:	pop    rbx
   140007505:	ret    
   140007506:	int3   
   140007507:	int3   
   140007508:	jmp    0x140008178
   14000750d:	int3   
   14000750e:	int3   
   14000750f:	int3   
   140007510:	rex push rbx
   140007512:	sub    rsp,0x20
   140007516:	mov    rbx,rcx
   140007519:	call   0x1400081b4
   14000751e:	lea    r11,[rip+0x110e3]        # 0x140018608
   140007525:	mov    QWORD PTR [rbx],r11
   140007528:	mov    rax,rbx
   14000752b:	add    rsp,0x20
   14000752f:	pop    rbx
   140007530:	ret    
   140007531:	int3   
   140007532:	int3   
   140007533:	int3   
   140007534:	sub    rsp,0x48
   140007538:	mov    QWORD PTR [rsp+0x50],rcx
   14000753d:	lea    rdx,[rsp+0x50]
   140007542:	lea    rcx,[rsp+0x20]
   140007547:	call   0x140008104
   14000754c:	lea    r11,[rip+0x110cd]        # 0x140018620
   140007553:	lea    rdx,[rip+0x17e56]        # 0x14001f3b0
   14000755a:	lea    rcx,[rsp+0x20]
   14000755f:	mov    QWORD PTR [rsp+0x20],r11
   140007564:	call   0x140009498
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	rex push rbx
   14000756e:	sub    rsp,0x20
   140007572:	mov    rbx,rcx
   140007575:	call   0x1400081b4
   14000757a:	lea    r11,[rip+0x1109f]        # 0x140018620
   140007581:	mov    QWORD PTR [rbx],r11
   140007584:	mov    rax,rbx
   140007587:	add    rsp,0x20
   14000758b:	pop    rbx
   14000758c:	ret    
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	sub    rsp,0x48
   140007594:	mov    QWORD PTR [rsp+0x50],rcx
   140007599:	lea    rdx,[rsp+0x50]
   14000759e:	lea    rcx,[rsp+0x20]
   1400075a3:	call   0x140008104
   1400075a8:	lea    r11,[rip+0x11089]        # 0x140018638
   1400075af:	lea    rdx,[rip+0x17e62]        # 0x14001f418
   1400075b6:	lea    rcx,[rsp+0x20]
   1400075bb:	mov    QWORD PTR [rsp+0x20],r11
   1400075c0:	call   0x140009498
   1400075c5:	int3   
   1400075c6:	int3   
   1400075c7:	int3   
   1400075c8:	rex push rbx
   1400075ca:	sub    rsp,0x20
   1400075ce:	mov    rbx,rcx
   1400075d1:	call   0x1400081b4
   1400075d6:	lea    r11,[rip+0x1105b]        # 0x140018638
   1400075dd:	mov    QWORD PTR [rbx],r11
   1400075e0:	mov    rax,rbx
   1400075e3:	add    rsp,0x20
   1400075e7:	pop    rbx
   1400075e8:	ret    
   1400075e9:	int3   
   1400075ea:	int3   
   1400075eb:	int3   
   1400075ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400075f1:	push   rdi
   1400075f2:	sub    rsp,0x20
   1400075f6:	mov    ebx,edx
   1400075f8:	mov    rdi,rcx
   1400075fb:	call   0x140008178
   140007600:	test   bl,0x1
   140007603:	je     0x14000760d
   140007605:	mov    rcx,rdi
   140007608:	call   0x14000872c
   14000760d:	mov    rax,rdi
   140007610:	mov    rbx,QWORD PTR [rsp+0x30]
   140007615:	add    rsp,0x20
   140007619:	pop    rdi
   14000761a:	ret    
   14000761b:	int3   
   14000761c:	mov    QWORD PTR [rsp+0x8],rbx
   140007621:	mov    QWORD PTR [rsp+0x10],rsi
   140007626:	push   rdi
   140007627:	sub    rsp,0x20
   14000762b:	mov    rbx,rcx
   14000762e:	lock inc DWORD PTR [rip+0x19b8b]        # 0x1400211c0
   140007635:	jne    0x140007654
   140007637:	lea    rdi,[rip+0x1b6b2]        # 0x140022cf0
   14000763e:	mov    esi,0x4
   140007643:	mov    rcx,rdi
   140007646:	call   0x140007cf0
   14000764b:	add    rdi,0x28
   14000764f:	dec    rsi
   140007652:	jne    0x140007643
   140007654:	mov    rsi,QWORD PTR [rsp+0x38]
   140007659:	mov    rax,rbx
   14000765c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007661:	add    rsp,0x20
   140007665:	pop    rdi
   140007666:	ret    
   140007667:	int3   
   140007668:	mov    QWORD PTR [rsp+0x8],rbx
   14000766d:	push   rdi
   14000766e:	sub    rsp,0x20
   140007672:	lock add DWORD PTR [rip+0x19b46],0xffffffff        # 0x1400211c0
   14000767a:	jns    0x140007699
   14000767c:	lea    rbx,[rip+0x1b66d]        # 0x140022cf0
   140007683:	mov    edi,0x4
   140007688:	mov    rcx,rbx
   14000768b:	call   0x140007cf8
   140007690:	add    rbx,0x28
   140007694:	dec    rdi
   140007697:	jne    0x140007688
   140007699:	mov    rbx,QWORD PTR [rsp+0x30]
   14000769e:	add    rsp,0x20
   1400076a2:	pop    rdi
   1400076a3:	ret    
   1400076a4:	rex push rbx
   1400076a6:	sub    rsp,0x20
   1400076aa:	mov    rbx,rcx
   1400076ad:	mov    DWORD PTR [rcx],edx
   1400076af:	cmp    edx,0x4
   1400076b2:	jge    0x1400076cb
   1400076b4:	movsxd rax,edx
   1400076b7:	lea    rdx,[rax+rax*4]
   1400076bb:	lea    rax,[rip+0x1b62e]        # 0x140022cf0
   1400076c2:	lea    rcx,[rax+rdx*8]
   1400076c6:	call   0x140007d00
   1400076cb:	mov    rax,rbx
   1400076ce:	add    rsp,0x20
   1400076d2:	pop    rbx
   1400076d3:	ret    
   1400076d4:	sub    rsp,0x28
   1400076d8:	cmp    DWORD PTR [rcx],0x4
   1400076db:	jge    0x1400076f4
   1400076dd:	movsxd rax,DWORD PTR [rcx]
   1400076e0:	lea    rcx,[rax+rax*4]
   1400076e4:	lea    rax,[rip+0x1b605]        # 0x140022cf0
   1400076eb:	lea    rcx,[rax+rcx*8]
   1400076ef:	call   0x140007d08
   1400076f4:	add    rsp,0x28
   1400076f8:	ret    
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	rex push rbx
   1400076fe:	sub    rsp,0x20
   140007702:	mov    rbx,rcx
   140007705:	mov    ecx,0x28
   14000770a:	call   0x140008790
   14000770f:	mov    rcx,rax
   140007712:	mov    QWORD PTR [rbx],rax
   140007715:	call   0x140007cf0
   14000771a:	mov    rax,rbx
   14000771d:	add    rsp,0x20
   140007721:	pop    rbx
   140007722:	ret    
   140007723:	int3   
   140007724:	rex push rbx
   140007726:	sub    rsp,0x20
   14000772a:	mov    rbx,rcx
   14000772d:	mov    rcx,QWORD PTR [rcx]
   140007730:	call   0x140007cf8
   140007735:	mov    rcx,QWORD PTR [rbx]
   140007738:	add    rsp,0x20
   14000773c:	pop    rbx
   14000773d:	jmp    0x14000872c
   140007742:	int3   
   140007743:	int3   
   140007744:	mov    rcx,QWORD PTR [rcx]
   140007747:	jmp    0x140007d00
   14000774c:	mov    rcx,QWORD PTR [rcx]
   14000774f:	jmp    0x140007d08
   140007754:	jmp    0x14000b044
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	mov    WORD PTR [rsp+0x8],cx
   140007761:	sub    rsp,0x38
   140007765:	mov    rax,rdx
   140007768:	mov    edx,0xffff
   14000776d:	mov    WORD PTR [rsp+0x50],cx
   140007772:	cmp    cx,dx
   140007775:	je     0x1400077c3
   140007777:	cmp    DWORD PTR [rax],0x0
   14000777a:	mov    edx,0x100
   14000777f:	jne    0x140007795
   140007781:	cmp    cx,dx
   140007784:	jae    0x140007795
   140007786:	lea    eax,[rcx-0x41]
   140007789:	cmp    ax,0x19
   14000778d:	ja     0x1400077c3
   14000778f:	add    cx,0x20
   140007793:	jmp    0x1400077c3
   140007795:	lea    rcx,[rsp+0x50]
   14000779a:	mov    r9d,0x1
   1400077a0:	lea    r8,[rsp+0x40]
   1400077a5:	mov    DWORD PTR [rsp+0x28],r9d
   1400077aa:	mov    QWORD PTR [rsp+0x20],rcx
   1400077af:	mov    ecx,DWORD PTR [rax]
   1400077b1:	call   0x14000c014
   1400077b6:	movzx  ecx,WORD PTR [rsp+0x50]
   1400077bb:	test   eax,eax
   1400077bd:	cmove  cx,WORD PTR [rsp+0x40]
   1400077c3:	movzx  eax,cx
   1400077c6:	add    rsp,0x38
   1400077ca:	ret    
   1400077cb:	int3   
   1400077cc:	mov    WORD PTR [rsp+0x8],cx
   1400077d1:	sub    rsp,0x38
   1400077d5:	mov    rax,rdx
   1400077d8:	mov    edx,0xffff
   1400077dd:	mov    WORD PTR [rsp+0x50],cx
   1400077e2:	cmp    cx,dx
   1400077e5:	je     0x140007838
   1400077e7:	cmp    DWORD PTR [rax],0x0
   1400077ea:	jne    0x140007805
   1400077ec:	mov    edx,0x100
   1400077f1:	cmp    cx,dx
   1400077f4:	jae    0x140007805
   1400077f6:	lea    eax,[rcx-0x61]
   1400077f9:	cmp    ax,0x19
   1400077fd:	ja     0x140007838
   1400077ff:	sub    cx,0x20
   140007803:	jmp    0x140007838
   140007805:	lea    rcx,[rsp+0x50]
   14000780a:	mov    r9d,0x1
   140007810:	lea    r8,[rsp+0x40]
   140007815:	mov    DWORD PTR [rsp+0x28],r9d
   14000781a:	mov    QWORD PTR [rsp+0x20],rcx
   14000781f:	mov    ecx,DWORD PTR [rax]
   140007821:	mov    edx,0x200
   140007826:	call   0x14000c014
   14000782b:	movzx  ecx,WORD PTR [rsp+0x50]
   140007830:	test   eax,eax
   140007832:	cmove  cx,WORD PTR [rsp+0x40]
   140007838:	movzx  eax,cx
   14000783b:	add    rsp,0x38
   14000783f:	ret    
   140007840:	sub    rsp,0x58
   140007844:	mov    rax,QWORD PTR [rip+0x19bc5]        # 0x140021410
   14000784b:	xor    rax,rsp
   14000784e:	mov    QWORD PTR [rsp+0x40],rax
   140007853:	mov    r9d,0xa
   140007859:	lea    rdx,[rsp+0x21]
   14000785e:	mov    ecx,ecx
   140007860:	lea    r8d,[r9+0x15]
   140007864:	mov    BYTE PTR [rsp+0x20],0x2e
   140007869:	call   0x14000c30c
   14000786e:	lea    rdx,[rsp+0x20]
   140007873:	xor    ecx,ecx
   140007875:	call   0x14000a8e0
   14000787a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000787f:	xor    rcx,rsp
   140007882:	call   0x140007d20
   140007887:	add    rsp,0x58
   14000788b:	ret    
   14000788c:	mov    QWORD PTR [rsp+0x8],rbx
   140007891:	mov    QWORD PTR [rsp+0x10],rbp
   140007896:	mov    QWORD PTR [rsp+0x18],rsi
   14000789b:	push   rdi
   14000789c:	push   r12
   14000789e:	push   r13
   1400078a0:	sub    rsp,0x20
   1400078a4:	mov    eax,0x8421085
   1400078a9:	mov    r8d,ecx
   1400078ac:	mov    r12d,ecx
   1400078af:	mov    ebp,ecx
   1400078b1:	lea    r13,[rip+0x1b4e8]        # 0x140022da0
   1400078b8:	mul    ecx
   1400078ba:	sub    r8d,edx
   1400078bd:	shr    r8d,1
   1400078c0:	add    r8d,edx
   1400078c3:	shr    r8d,0x5
   1400078c7:	imul   r8d,r8d,0x3e
   1400078cb:	sub    r12d,r8d
   1400078ce:	xor    ebx,ebx
   1400078d0:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   1400078d5:	mov    rdi,rsi
   1400078d8:	test   rsi,rsi
   1400078db:	je     0x1400078ea
   1400078dd:	cmp    DWORD PTR [rdi+0x8],ebp
   1400078e0:	je     0x14000793e
   1400078e2:	mov    rdi,QWORD PTR [rdi]
   1400078e5:	test   rdi,rdi
   1400078e8:	jne    0x1400078dd
   1400078ea:	test   rbx,rbx
   1400078ed:	jne    0x140007912
   1400078ef:	lea    ecx,[rbx+0x18]
   1400078f2:	call   0x14000c320
   1400078f7:	mov    rbx,rax
   1400078fa:	test   rax,rax
   1400078fd:	je     0x140007962
   1400078ff:	mov    ecx,ebp
   140007901:	call   0x140007840
   140007906:	mov    QWORD PTR [rbx+0x10],rax
   14000790a:	test   rax,rax
   14000790d:	je     0x14000795a
   14000790f:	mov    DWORD PTR [rbx+0x8],ebp
   140007912:	mov    QWORD PTR [rbx],rsi
   140007915:	mov    rax,rsi
   140007918:	lock cmpxchg QWORD PTR [r13+r12*8+0x0],rbx
   14000791f:	jne    0x1400078d0
   140007921:	mov    rax,QWORD PTR [rbx+0x10]
   140007925:	mov    rbx,QWORD PTR [rsp+0x40]
   14000792a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000792f:	mov    rsi,QWORD PTR [rsp+0x50]
   140007934:	add    rsp,0x20
   140007938:	pop    r13
   14000793a:	pop    r12
   14000793c:	pop    rdi
   14000793d:	ret    
   14000793e:	test   rbx,rbx
   140007941:	je     0x140007954
   140007943:	mov    rcx,QWORD PTR [rbx+0x10]
   140007947:	call   0x140009c3c
   14000794c:	mov    rcx,rbx
   14000794f:	call   0x140008584
   140007954:	mov    rax,QWORD PTR [rdi+0x10]
   140007958:	jmp    0x140007925
   14000795a:	mov    rcx,rbx
   14000795d:	call   0x140008584
   140007962:	xor    eax,eax
   140007964:	jmp    0x140007925
   140007966:	int3   
   140007967:	int3   
   140007968:	mov    QWORD PTR [rsp+0x8],rbx
   14000796d:	mov    QWORD PTR [rsp+0x10],rbp
   140007972:	mov    QWORD PTR [rsp+0x18],rsi
   140007977:	push   rdi
   140007978:	sub    rsp,0x20
   14000797c:	lea    rdi,[rip+0x1b41d]        # 0x140022da0
   140007983:	mov    esi,0x3e
   140007988:	xor    ebp,ebp
   14000798a:	xchg   QWORD PTR [rdi],rbp
   14000798d:	test   rbp,rbp
   140007990:	je     0x1400079af
   140007992:	mov    rcx,QWORD PTR [rbp+0x10]
   140007996:	mov    rbx,QWORD PTR [rbp+0x0]
   14000799a:	call   0x140009c3c
   14000799f:	mov    rcx,rbp
   1400079a2:	call   0x140008584
   1400079a7:	mov    rbp,rbx
   1400079aa:	test   rbx,rbx
   1400079ad:	jne    0x140007992
   1400079af:	add    rdi,0x8
   1400079b3:	dec    rsi
   1400079b6:	jne    0x140007988
   1400079b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079bd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400079c2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400079c7:	add    rsp,0x20
   1400079cb:	pop    rdi
   1400079cc:	ret    
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	sub    rsp,0x28
   1400079d4:	lea    rcx,[rip+0xffffffffffffff8d]        # 0x140007968
   1400079db:	call   0x140008714
   1400079e0:	neg    eax
   1400079e2:	sbb    eax,eax
   1400079e4:	and    eax,0x18
   1400079e7:	add    rsp,0x28
   1400079eb:	ret    
   1400079ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400079f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400079f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400079fb:	push   rdi
   1400079fc:	push   r12
   1400079fe:	push   r13
   140007a00:	push   r14
   140007a02:	push   r15
   140007a04:	sub    rsp,0x30
   140007a08:	xor    r15d,r15d
   140007a0b:	mov    r12,r9
   140007a0e:	mov    r14,r8
   140007a11:	mov    rdi,rdx
   140007a14:	mov    rsi,rcx
   140007a17:	test   rdx,rdx
   140007a1a:	je     0x140007a2f
   140007a1c:	test   r8,r8
   140007a1f:	je     0x140007a2f
   140007a21:	cmp    BYTE PTR [rdx],r15b
   140007a24:	jne    0x140007a4e
   140007a26:	test   rcx,rcx
   140007a29:	je     0x140007a2f
   140007a2b:	mov    WORD PTR [rcx],r15w
   140007a2f:	xor    eax,eax
   140007a31:	mov    rbx,QWORD PTR [rsp+0x60]
   140007a36:	mov    rbp,QWORD PTR [rsp+0x68]
   140007a3b:	mov    rsi,QWORD PTR [rsp+0x70]
   140007a40:	add    rsp,0x30
   140007a44:	pop    r15
   140007a46:	pop    r14
   140007a48:	pop    r13
   140007a4a:	pop    r12
   140007a4c:	pop    rdi
   140007a4d:	ret    
   140007a4e:	mov    rax,QWORD PTR [rsp+0x80]
   140007a56:	test   rax,rax
   140007a59:	jne    0x140007a6d
   140007a5b:	call   0x140009370
   140007a60:	mov    ebx,DWORD PTR [rax+0x8]
   140007a63:	call   0x140009338
   140007a68:	mov    r13d,eax
   140007a6b:	jmp    0x140007a73
   140007a6d:	mov    ebx,DWORD PTR [rax]
   140007a6f:	mov    r13d,DWORD PTR [rax+0x4]
   140007a73:	test   ebx,ebx
   140007a75:	jne    0x140007a89
   140007a77:	test   rsi,rsi
   140007a7a:	je     0x140007a82
   140007a7c:	movzx  eax,BYTE PTR [rdi]
   140007a7f:	mov    WORD PTR [rsi],ax
   140007a82:	mov    eax,0x1
   140007a87:	jmp    0x140007a31
   140007a89:	mov    ecx,r13d
   140007a8c:	call   0x14000788c
   140007a91:	mov    rbp,rax
   140007a94:	cmp    DWORD PTR [r12],r15d
   140007a98:	je     0x140007b02
   140007a9a:	mov    cl,BYTE PTR [rdi]
   140007a9c:	mov    BYTE PTR [r12+0x1],cl
   140007aa1:	mov    rcx,rax
   140007aa4:	call   0x140009324
   140007aa9:	cmp    eax,0x1
   140007aac:	jle    0x140007aeb
   140007aae:	mov    ecx,r15d
   140007ab1:	mov    r9d,0x2
   140007ab7:	test   rsi,rsi
   140007aba:	setne  cl
   140007abd:	lea    edx,[r9+0x7]
   140007ac1:	mov    r8,r12
   140007ac4:	mov    DWORD PTR [rsp+0x28],ecx
   140007ac8:	mov    ecx,r13d
   140007acb:	mov    QWORD PTR [rsp+0x20],rsi
   140007ad0:	call   QWORD PTR [rip+0x105d2]        # 0x1400180a8
   140007ad6:	test   eax,eax
   140007ad8:	je     0x140007aeb
   140007ada:	mov    DWORD PTR [r12],r15d
   140007ade:	mov    rcx,rbp
   140007ae1:	call   0x140009324
   140007ae6:	jmp    0x140007a31
   140007aeb:	mov    DWORD PTR [r12],r15d
   140007aef:	call   0x140008e40
   140007af4:	mov    DWORD PTR [rax],0x2a
   140007afa:	or     eax,0xffffffff
   140007afd:	jmp    0x140007a31
   140007b02:	test   rax,rax
   140007b05:	jne    0x140007b1b
   140007b07:	call   0x14000c4ac
   140007b0c:	movzx  ecx,BYTE PTR [rdi]
   140007b0f:	movzx  edx,WORD PTR [rax+rcx*2]
   140007b13:	and    edx,0x8000
   140007b19:	jmp    0x140007b2a
   140007b1b:	movzx  ecx,BYTE PTR [rdi]
   140007b1e:	mov    rax,QWORD PTR [rax+0x8]
   140007b22:	movzx  edx,BYTE PTR [rax+rcx*1+0x1d]
   140007b27:	and    edx,0x4
   140007b2a:	test   edx,edx
   140007b2c:	je     0x140007ba0
   140007b2e:	mov    rcx,rbp
   140007b31:	call   0x140009324
   140007b36:	movsxd rcx,eax
   140007b39:	cmp    r14,rcx
   140007b3c:	jae    0x140007b4e
   140007b3e:	mov    al,BYTE PTR [rdi]
   140007b40:	mov    BYTE PTR [r12],al
   140007b44:	mov    eax,0xfffffffe
   140007b49:	jmp    0x140007a31
   140007b4e:	mov    rcx,rbp
   140007b51:	call   0x140009324
   140007b56:	cmp    eax,0x1
   140007b59:	jle    0x140007b91
   140007b5b:	test   rsi,rsi
   140007b5e:	mov    rcx,rbp
   140007b61:	mov    ebx,r15d
   140007b64:	setne  bl
   140007b67:	call   0x140009324
   140007b6c:	mov    r8,rdi
   140007b6f:	mov    edx,0x9
   140007b74:	mov    ecx,r13d
   140007b77:	mov    r9d,eax
   140007b7a:	mov    DWORD PTR [rsp+0x28],ebx
   140007b7e:	mov    QWORD PTR [rsp+0x20],rsi
   140007b83:	call   QWORD PTR [rip+0x1051f]        # 0x1400180a8
   140007b89:	test   eax,eax
   140007b8b:	jne    0x140007ade
   140007b91:	cmp    BYTE PTR [rdi+0x1],r15b
   140007b95:	jne    0x140007ade
   140007b9b:	jmp    0x140007aeb
   140007ba0:	mov    eax,r15d
   140007ba3:	mov    r9d,0x1
   140007ba9:	test   rsi,rsi
   140007bac:	setne  al
   140007baf:	lea    edx,[r9+0x8]
   140007bb3:	mov    r8,rdi
   140007bb6:	mov    DWORD PTR [rsp+0x28],eax
   140007bba:	mov    ecx,r13d
   140007bbd:	mov    QWORD PTR [rsp+0x20],rsi
   140007bc2:	call   QWORD PTR [rip+0x104e0]        # 0x1400180a8
   140007bc8:	test   eax,eax
   140007bca:	jne    0x140007a82
   140007bd0:	jmp    0x140007aef
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	rex push rbx
   140007bda:	sub    rsp,0x20
   140007bde:	mov    rbx,rcx
   140007be1:	call   0x140009370
   140007be6:	mov    edx,DWORD PTR [rax+0x4]
   140007be9:	mov    DWORD PTR [rbx],edx
   140007beb:	call   0x140009338
   140007bf0:	mov    edx,0x2
   140007bf5:	mov    ecx,0x100
   140007bfa:	mov    DWORD PTR [rbx+0x4],eax
   140007bfd:	call   0x14000c3a0
   140007c02:	mov    QWORD PTR [rbx+0x8],rax
   140007c06:	test   rax,rax
   140007c09:	je     0x140007c2b
   140007c0b:	call   0x14000c4ac
   140007c10:	mov    rcx,QWORD PTR [rbx+0x8]
   140007c14:	mov    r8d,0x200
   140007c1a:	mov    rdx,rax
   140007c1d:	call   0x140008250
   140007c22:	mov    DWORD PTR [rbx+0x10],0x1
   140007c29:	jmp    0x140007c38
   140007c2b:	call   0x14000c4ac
   140007c30:	and    DWORD PTR [rbx+0x10],0x0
   140007c34:	mov    QWORD PTR [rbx+0x8],rax
   140007c38:	mov    rax,rbx
   140007c3b:	add    rsp,0x20
   140007c3f:	pop    rbx
   140007c40:	ret    
   140007c41:	int3   
   140007c42:	int3   
   140007c43:	int3   
   140007c44:	mov    WORD PTR [rsp+0x8],cx
   140007c49:	sub    rsp,0x28
   140007c4d:	mov    ecx,0x1
   140007c52:	lea    r9,[rsp+0x40]
   140007c57:	lea    rdx,[rsp+0x30]
   140007c5c:	mov    r8d,ecx
   140007c5f:	call   QWORD PTR [rip+0x1044b]        # 0x1400180b0
   140007c65:	movsx  edx,WORD PTR [rsp+0x40]
   140007c6a:	neg    eax
   140007c6c:	sbb    ecx,ecx
   140007c6e:	and    ecx,edx
   140007c70:	movzx  eax,cx
   140007c73:	add    rsp,0x28
   140007c77:	ret    
   140007c78:	rex push rbx
   140007c7a:	sub    rsp,0x20
   140007c7e:	mov    rax,rdx
   140007c81:	mov    rbx,rdx
   140007c84:	mov    r9,r8
   140007c87:	sub    rax,rcx
   140007c8a:	mov    rdx,rcx
   140007c8d:	mov    ecx,0x1
   140007c92:	sar    rax,1
   140007c95:	mov    r8d,eax
   140007c98:	call   QWORD PTR [rip+0x10412]        # 0x1400180b0
   140007c9e:	mov    rax,rbx
   140007ca1:	add    rsp,0x20
   140007ca5:	pop    rbx
   140007ca6:	ret    
   140007ca7:	int3   
   140007ca8:	jmp    0x140008790
   140007cad:	int3   
   140007cae:	int3   
   140007caf:	int3   
   140007cb0:	sub    rsp,0x28
   140007cb4:	mov    rax,QWORD PTR [rip+0x19515]        # 0x1400211d0
   140007cbb:	test   rax,rax
   140007cbe:	jne    0x140007cc9
   140007cc0:	add    rsp,0x28
   140007cc4:	jmp    0x14000c84c
   140007cc9:	dec    rax
   140007ccc:	mov    QWORD PTR [rip+0x194fd],rax        # 0x1400211d0
   140007cd3:	call   QWORD PTR [rip+0x103df]        # 0x1400180b8
   140007cd9:	mov    rcx,QWORD PTR [rip+0x194f0]        # 0x1400211d0
   140007ce0:	lea    rdx,[rip+0x1b2e9]        # 0x140022fd0
   140007ce7:	mov    QWORD PTR [rdx+rcx*8],rax
   140007ceb:	add    rsp,0x28
   140007cef:	ret    
   140007cf0:	rex.W jmp QWORD PTR [rip+0x103d9]        # 0x1400180d0
   140007cf7:	int3   
   140007cf8:	rex.W jmp QWORD PTR [rip+0x103d9]        # 0x1400180d8
   140007cff:	int3   
   140007d00:	rex.W jmp QWORD PTR [rip+0x103d9]        # 0x1400180e0
   140007d07:	int3   
   140007d08:	rex.W jmp QWORD PTR [rip+0x103d9]        # 0x1400180e8
   140007d0f:	int3   
   140007d10:	int3   
   140007d11:	int3   
   140007d12:	int3   
   140007d13:	int3   
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007d20:	cmp    rcx,QWORD PTR [rip+0x196e9]        # 0x140021410
   140007d27:	jne    0x140007d3a
   140007d29:	rol    rcx,0x10
   140007d2d:	test   cx,0xffff
   140007d32:	jne    0x140007d36
   140007d34:	repz ret 
   140007d36:	ror    rcx,0x10
   140007d3a:	jmp    0x14000c8a8
   140007d3f:	int3   
   140007d40:	rex push rbx
   140007d42:	sub    rsp,0x20
   140007d46:	mov    rbx,rcx
   140007d49:	mov    BYTE PTR [rcx+0x18],0x0
   140007d4d:	test   rdx,rdx
   140007d50:	jne    0x140007dd1
   140007d52:	call   0x14000d728
   140007d57:	mov    QWORD PTR [rbx+0x10],rax
   140007d5b:	mov    rdx,QWORD PTR [rax+0xc0]
   140007d62:	mov    QWORD PTR [rbx],rdx
   140007d65:	mov    rcx,QWORD PTR [rax+0xb8]
   140007d6c:	mov    QWORD PTR [rbx+0x8],rcx
   140007d70:	cmp    rdx,QWORD PTR [rip+0x1a029]        # 0x140021da0
   140007d77:	je     0x140007d8f
   140007d79:	mov    eax,DWORD PTR [rax+0xc8]
   140007d7f:	test   DWORD PTR [rip+0x19beb],eax        # 0x140021970
   140007d85:	jne    0x140007d8f
   140007d87:	call   0x14000d540
   140007d8c:	mov    QWORD PTR [rbx],rax
   140007d8f:	mov    rax,QWORD PTR [rip+0x19ada]        # 0x140021870
   140007d96:	cmp    QWORD PTR [rbx+0x8],rax
   140007d9a:	je     0x140007db7
   140007d9c:	mov    rax,QWORD PTR [rbx+0x10]
   140007da0:	mov    ecx,DWORD PTR [rax+0xc8]
   140007da6:	test   DWORD PTR [rip+0x19bc4],ecx        # 0x140021970
   140007dac:	jne    0x140007db7
   140007dae:	call   0x14000cc70
   140007db3:	mov    QWORD PTR [rbx+0x8],rax
   140007db7:	mov    rax,QWORD PTR [rbx+0x10]
   140007dbb:	test   BYTE PTR [rax+0xc8],0x2
   140007dc2:	jne    0x140007dd8
   140007dc4:	or     DWORD PTR [rax+0xc8],0x2
   140007dcb:	mov    BYTE PTR [rbx+0x18],0x1
   140007dcf:	jmp    0x140007dd8
   140007dd1:	movups xmm0,XMMWORD PTR [rdx]
   140007dd4:	movdqu XMMWORD PTR [rcx],xmm0
   140007dd8:	mov    rax,rbx
   140007ddb:	add    rsp,0x20
   140007ddf:	pop    rbx
   140007de0:	ret    
   140007de1:	int3   
   140007de2:	int3   
   140007de3:	int3   
   140007de4:	mov    rax,rsp
   140007de7:	mov    QWORD PTR [rax+0x8],rbx
   140007deb:	mov    QWORD PTR [rax+0x10],rbp
   140007def:	mov    QWORD PTR [rax+0x18],rsi
   140007df3:	push   rdi
   140007df4:	sub    rsp,0x40
   140007df8:	mov    rsi,rcx
   140007dfb:	mov    rdi,rdx
   140007dfe:	lea    rcx,[rax-0x28]
   140007e02:	mov    rdx,r8
   140007e05:	call   0x140007d40
   140007e0a:	xor    ebp,ebp
   140007e0c:	test   rsi,rsi
   140007e0f:	jne    0x140007e3e
   140007e11:	call   0x140008e40
   140007e16:	mov    DWORD PTR [rax],0x16
   140007e1c:	call   0x14000dafc
   140007e21:	cmp    BYTE PTR [rsp+0x38],bpl
   140007e26:	je     0x140007e34
   140007e28:	mov    rax,QWORD PTR [rsp+0x30]
   140007e2d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140007e34:	mov    eax,0x7fffffff
   140007e39:	jmp    0x140007ed1
   140007e3e:	test   rdi,rdi
   140007e41:	je     0x140007e11
   140007e43:	mov    rax,QWORD PTR [rsp+0x20]
   140007e48:	cmp    DWORD PTR [rax+0x14],ebp
   140007e4b:	jne    0x140007e87
   140007e4d:	sub    rsi,rdi
   140007e50:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140007e54:	cmp    bx,0x41
   140007e58:	jb     0x140007e64
   140007e5a:	cmp    bx,0x5a
   140007e5e:	ja     0x140007e64
   140007e60:	add    bx,0x20
   140007e64:	movzx  eax,WORD PTR [rdi]
   140007e67:	cmp    ax,0x41
   140007e6b:	jb     0x140007e77
   140007e6d:	cmp    ax,0x5a
   140007e71:	ja     0x140007e77
   140007e73:	add    ax,0x20
   140007e77:	add    rdi,0x2
   140007e7b:	test   bx,bx
   140007e7e:	je     0x140007eb6
   140007e80:	cmp    bx,ax
   140007e83:	je     0x140007e50
   140007e85:	jmp    0x140007eb6
   140007e87:	movzx  ecx,WORD PTR [rsi]
   140007e8a:	lea    rdx,[rsp+0x20]
   140007e8f:	call   0x140007f70
   140007e94:	movzx  ecx,WORD PTR [rdi]
   140007e97:	lea    rdx,[rsp+0x20]
   140007e9c:	movzx  ebx,ax
   140007e9f:	add    rsi,0x2
   140007ea3:	call   0x140007f70
   140007ea8:	add    rdi,0x2
   140007eac:	test   bx,bx
   140007eaf:	je     0x140007eb6
   140007eb1:	cmp    bx,ax
   140007eb4:	je     0x140007e87
   140007eb6:	movzx  ecx,ax
   140007eb9:	movzx  eax,bx
   140007ebc:	sub    eax,ecx
   140007ebe:	cmp    BYTE PTR [rsp+0x38],bpl
   140007ec3:	je     0x140007ed1
   140007ec5:	mov    rcx,QWORD PTR [rsp+0x30]
   140007eca:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007ed1:	mov    rbx,QWORD PTR [rsp+0x50]
   140007ed6:	mov    rbp,QWORD PTR [rsp+0x58]
   140007edb:	mov    rsi,QWORD PTR [rsp+0x60]
   140007ee0:	add    rsp,0x40
   140007ee4:	pop    rdi
   140007ee5:	ret    
   140007ee6:	int3   
   140007ee7:	int3   
   140007ee8:	sub    rsp,0x28
   140007eec:	xor    r8d,r8d
   140007eef:	mov    r9,rcx
   140007ef2:	cmp    DWORD PTR [rip+0x1b163],r8d        # 0x14002305c
   140007ef9:	jne    0x140007f65
   140007efb:	test   rcx,rcx
   140007efe:	jne    0x140007f1a
   140007f00:	call   0x140008e40
   140007f05:	mov    DWORD PTR [rax],0x16
   140007f0b:	call   0x14000dafc
   140007f10:	mov    eax,0x7fffffff
   140007f15:	add    rsp,0x28
   140007f19:	ret    
   140007f1a:	test   rdx,rdx
   140007f1d:	je     0x140007f00
   140007f1f:	sub    r9,rdx
   140007f22:	movzx  eax,WORD PTR [r9+rdx*1]
   140007f27:	cmp    ax,0x41
   140007f2b:	jb     0x140007f37
   140007f2d:	cmp    ax,0x5a
   140007f31:	ja     0x140007f37
   140007f33:	add    ax,0x20
   140007f37:	movzx  ecx,WORD PTR [rdx]
   140007f3a:	cmp    cx,0x41
   140007f3e:	jb     0x140007f4a
   140007f40:	cmp    cx,0x5a
   140007f44:	ja     0x140007f4a
   140007f46:	add    cx,0x20
   140007f4a:	add    rdx,0x2
   140007f4e:	test   ax,ax
   140007f51:	je     0x140007f58
   140007f53:	cmp    ax,cx
   140007f56:	je     0x140007f22
   140007f58:	movzx  ecx,cx
   140007f5b:	movzx  eax,ax
   140007f5e:	sub    eax,ecx
   140007f60:	add    rsp,0x28
   140007f64:	ret    
   140007f65:	add    rsp,0x28
   140007f69:	jmp    0x140007de4
   140007f6e:	int3   
   140007f6f:	int3   
   140007f70:	mov    QWORD PTR [rsp+0x10],rbx
   140007f75:	mov    WORD PTR [rsp+0x8],cx
   140007f7a:	push   rbp
   140007f7b:	mov    rbp,rsp
   140007f7e:	sub    rsp,0x50
   140007f82:	mov    eax,0xffff
   140007f87:	cmp    cx,ax
   140007f8a:	je     0x14000803a
   140007f90:	lea    rcx,[rbp-0x20]
   140007f94:	call   0x140007d40
   140007f99:	mov    rbx,QWORD PTR [rbp-0x20]
   140007f9d:	cmp    DWORD PTR [rbx+0x14],0x0
   140007fa1:	jne    0x140007fca
   140007fa3:	movzx  edx,WORD PTR [rbp+0x10]
   140007fa7:	lea    eax,[rdx-0x41]
   140007faa:	cmp    ax,0x19
   140007fae:	ja     0x140007fb4
   140007fb0:	add    dx,0x20
   140007fb4:	cmp    BYTE PTR [rbp-0x8],0x0
   140007fb8:	je     0x140007fc5
   140007fba:	mov    rcx,QWORD PTR [rbp-0x10]
   140007fbe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007fc5:	movzx  eax,dx
   140007fc8:	jmp    0x14000803a
   140007fca:	movzx  ecx,WORD PTR [rbp+0x10]
   140007fce:	mov    edx,0x100
   140007fd3:	cmp    cx,dx
   140007fd6:	jae    0x140007ffd
   140007fd8:	mov    edx,0x1
   140007fdd:	call   0x14000db1c
   140007fe2:	test   eax,eax
   140007fe4:	jne    0x140007fec
   140007fe6:	movzx  eax,WORD PTR [rbp+0x10]
   140007fea:	jmp    0x140008029
   140007fec:	movzx  ecx,WORD PTR [rbp+0x10]
   140007ff0:	mov    rax,QWORD PTR [rbx+0x148]
   140007ff7:	movzx  eax,BYTE PTR [rax+rcx*1]
   140007ffb:	jmp    0x140008029
   140007ffd:	mov    ecx,DWORD PTR [rbx+0x14]
   140008000:	lea    rax,[rbp+0x20]
   140008004:	mov    r9d,0x1
   14000800a:	mov    DWORD PTR [rsp+0x28],r9d
   14000800f:	lea    r8,[rbp+0x10]
   140008013:	mov    QWORD PTR [rsp+0x20],rax
   140008018:	call   0x14000c014
   14000801d:	test   eax,eax
   14000801f:	movzx  eax,WORD PTR [rbp+0x10]
   140008023:	je     0x140008029
   140008025:	movzx  eax,WORD PTR [rbp+0x20]
   140008029:	cmp    BYTE PTR [rbp-0x8],0x0
   14000802d:	je     0x14000803a
   14000802f:	mov    rcx,QWORD PTR [rbp-0x10]
   140008033:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000803a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000803f:	add    rsp,0x50
   140008043:	pop    rbp
   140008044:	ret    
   140008045:	int3   
   140008046:	int3   
   140008047:	int3   
   140008048:	xor    edx,edx
   14000804a:	jmp    0x140007f70
   14000804f:	int3   
   140008050:	lea    rax,[rip+0x10611]        # 0x140018668
   140008057:	mov    QWORD PTR [rcx],rax
   14000805a:	mov    rax,QWORD PTR [rdx]
   14000805d:	mov    BYTE PTR [rcx+0x10],0x0
   140008061:	mov    QWORD PTR [rcx+0x8],rax
   140008065:	mov    rax,rcx
   140008068:	ret    
   140008069:	int3   
   14000806a:	int3   
   14000806b:	int3   
   14000806c:	cmp    QWORD PTR [rcx+0x8],0x0
   140008071:	lea    rax,[rip+0x10600]        # 0x140018678
   140008078:	cmovne rax,QWORD PTR [rcx+0x8]
   14000807d:	ret    
   14000807e:	int3   
   14000807f:	int3   
   140008080:	test   rdx,rdx
   140008083:	je     0x1400080d9
   140008085:	mov    QWORD PTR [rsp+0x8],rbx
   14000808a:	mov    QWORD PTR [rsp+0x10],rsi
   14000808f:	push   rdi
   140008090:	sub    rsp,0x20
   140008094:	mov    rdi,rcx
   140008097:	mov    rcx,rdx
   14000809a:	mov    rbx,rdx
   14000809d:	call   0x1400093f0
   1400080a2:	mov    rsi,rax
   1400080a5:	lea    rcx,[rax+0x1]
   1400080a9:	call   0x14000abd4
   1400080ae:	mov    QWORD PTR [rdi+0x8],rax
   1400080b2:	test   rax,rax
   1400080b5:	je     0x1400080ca
   1400080b7:	lea    rdx,[rsi+0x1]
   1400080bb:	mov    r8,rbx
   1400080be:	mov    rcx,rax
   1400080c1:	call   0x14000db84
   1400080c6:	mov    BYTE PTR [rdi+0x10],0x1
   1400080ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400080d4:	add    rsp,0x20
   1400080d8:	pop    rdi
   1400080d9:	ret    
   1400080da:	int3   
   1400080db:	int3   
   1400080dc:	rex push rbx
   1400080de:	sub    rsp,0x20
   1400080e2:	cmp    BYTE PTR [rcx+0x10],0x0
   1400080e6:	mov    rbx,rcx
   1400080e9:	je     0x1400080f4
   1400080eb:	mov    rcx,QWORD PTR [rcx+0x8]
   1400080ef:	call   0x140008584
   1400080f4:	and    QWORD PTR [rbx+0x8],0x0
   1400080f9:	mov    BYTE PTR [rbx+0x10],0x0
   1400080fd:	add    rsp,0x20
   140008101:	pop    rbx
   140008102:	ret    
   140008103:	int3   
   140008104:	rex push rbx
   140008106:	sub    rsp,0x20
   14000810a:	and    QWORD PTR [rcx+0x8],0x0
   14000810f:	lea    rax,[rip+0x10552]        # 0x140018668
   140008116:	mov    BYTE PTR [rcx+0x10],0x0
   14000811a:	mov    QWORD PTR [rcx],rax
   14000811d:	mov    rdx,QWORD PTR [rdx]
   140008120:	mov    rbx,rcx
   140008123:	call   0x140008080
   140008128:	mov    rax,rbx
   14000812b:	add    rsp,0x20
   14000812f:	pop    rbx
   140008130:	ret    
   140008131:	int3   
   140008132:	int3   
   140008133:	int3   
   140008134:	mov    QWORD PTR [rsp+0x8],rbx
   140008139:	push   rdi
   14000813a:	sub    rsp,0x20
   14000813e:	mov    rdi,rdx
   140008141:	mov    rbx,rcx
   140008144:	cmp    rcx,rdx
   140008147:	je     0x14000816a
   140008149:	call   0x1400080dc
   14000814e:	cmp    BYTE PTR [rdi+0x10],0x0
   140008152:	je     0x140008162
   140008154:	mov    rdx,QWORD PTR [rdi+0x8]
   140008158:	mov    rcx,rbx
   14000815b:	call   0x140008080
   140008160:	jmp    0x14000816a
   140008162:	mov    rax,QWORD PTR [rdi+0x8]
   140008166:	mov    QWORD PTR [rbx+0x8],rax
   14000816a:	mov    rax,rbx
   14000816d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008172:	add    rsp,0x20
   140008176:	pop    rdi
   140008177:	ret    
   140008178:	lea    rax,[rip+0x104e9]        # 0x140018668
   14000817f:	mov    QWORD PTR [rcx],rax
   140008182:	jmp    0x1400080dc
   140008187:	int3   
   140008188:	mov    QWORD PTR [rsp+0x10],rdx
   14000818d:	push   rbx
   14000818e:	sub    rsp,0x20
   140008192:	lea    rdx,[rsp+0x38]
   140008197:	mov    rbx,rcx
   14000819a:	call   0x140008104
   14000819f:	lea    r11,[rip+0x104f2]        # 0x140018698
   1400081a6:	mov    rax,rbx
   1400081a9:	mov    QWORD PTR [rbx],r11
   1400081ac:	add    rsp,0x20
   1400081b0:	pop    rbx
   1400081b1:	ret    
   1400081b2:	int3   
   1400081b3:	int3   
   1400081b4:	rex push rbx
   1400081b6:	sub    rsp,0x20
   1400081ba:	and    QWORD PTR [rcx+0x8],0x0
   1400081bf:	lea    rax,[rip+0x104a2]        # 0x140018668
   1400081c6:	mov    rbx,rcx
   1400081c9:	mov    QWORD PTR [rcx],rax
   1400081cc:	mov    BYTE PTR [rcx+0x10],0x0
   1400081d0:	call   0x140008134
   1400081d5:	mov    rax,rbx
   1400081d8:	add    rsp,0x20
   1400081dc:	pop    rbx
   1400081dd:	ret    
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081e5:	push   rdi
   1400081e6:	sub    rsp,0x20
   1400081ea:	lea    rax,[rip+0x10477]        # 0x140018668
   1400081f1:	mov    ebx,edx
   1400081f3:	mov    rdi,rcx
   1400081f6:	mov    QWORD PTR [rcx],rax
   1400081f9:	call   0x1400080dc
   1400081fe:	test   bl,0x1
   140008201:	je     0x14000820b
   140008203:	mov    rcx,rdi
   140008206:	call   0x14000872c
   14000820b:	mov    rax,rdi
   14000820e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008213:	add    rsp,0x20
   140008217:	pop    rdi
   140008218:	ret    
   140008219:	int3   
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	rex push rbx
   14000821e:	sub    rsp,0x20
   140008222:	mov    rbx,rcx
   140008225:	call   0x1400081b4
   14000822a:	lea    r11,[rip+0x10467]        # 0x140018698
   140008231:	mov    QWORD PTR [rbx],r11
   140008234:	mov    rax,rbx
   140008237:	add    rsp,0x20
   14000823b:	pop    rbx
   14000823c:	ret    
   14000823d:	int3   
   14000823e:	int3   
   14000823f:	int3   
   140008240:	int3   
   140008241:	int3   
   140008242:	int3   
   140008243:	int3   
   140008244:	int3   
   140008245:	int3   
   140008246:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008250:	mov    r11,rcx
   140008253:	sub    rdx,rcx
   140008256:	jb     0x1400083fa
   14000825c:	cmp    r8,0x8
   140008260:	jb     0x1400082c3
   140008262:	test   cl,0x7
   140008265:	je     0x14000829d
   140008267:	test   cl,0x1
   14000826a:	je     0x140008277
   14000826c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000826f:	dec    r8
   140008272:	mov    BYTE PTR [rcx],al
   140008274:	inc    rcx
   140008277:	test   cl,0x2
   14000827a:	je     0x14000828b
   14000827c:	mov    ax,WORD PTR [rdx+rcx*1]
   140008280:	sub    r8,0x2
   140008284:	mov    WORD PTR [rcx],ax
   140008287:	add    rcx,0x2
   14000828b:	test   cl,0x4
   14000828e:	je     0x14000829d
   140008290:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008293:	sub    r8,0x4
   140008297:	mov    DWORD PTR [rcx],eax
   140008299:	add    rcx,0x4
   14000829d:	mov    r9,r8
   1400082a0:	shr    r9,0x5
   1400082a4:	jne    0x1400082f7
   1400082a6:	mov    r9,r8
   1400082a9:	shr    r9,0x3
   1400082ad:	je     0x1400082c3
   1400082af:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400082b3:	mov    QWORD PTR [rcx],rax
   1400082b6:	add    rcx,0x8
   1400082ba:	dec    r9
   1400082bd:	jne    0x1400082af
   1400082bf:	and    r8,0x7
   1400082c3:	test   r8,r8
   1400082c6:	jne    0x1400082d0
   1400082c8:	mov    rax,r11
   1400082cb:	ret    
   1400082cc:	nop    DWORD PTR [rax+0x0]
   1400082d0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400082d3:	mov    BYTE PTR [rcx],al
   1400082d5:	inc    rcx
   1400082d8:	dec    r8
   1400082db:	jne    0x1400082d0
   1400082dd:	mov    rax,r11
   1400082e0:	ret    
   1400082e1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400082f0:	data16 data16 xchg ax,ax
   1400082f4:	data16 xchg ax,ax
   1400082f7:	cmp    r9,0x2000
   1400082fe:	jae    0x140008342
   140008300:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008304:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008309:	add    rcx,0x20
   14000830d:	mov    QWORD PTR [rcx-0x20],rax
   140008311:	mov    QWORD PTR [rcx-0x18],r10
   140008315:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000831a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000831f:	dec    r9
   140008322:	mov    QWORD PTR [rcx-0x10],rax
   140008326:	mov    QWORD PTR [rcx-0x8],r10
   14000832a:	jne    0x140008300
   14000832c:	and    r8,0x1f
   140008330:	jmp    0x1400082a6
   140008335:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008340:	xchg   ax,ax
   140008342:	cmp    rdx,0x1000
   140008349:	jb     0x140008300
   14000834b:	mov    eax,0x20
   140008350:	prefetchnta BYTE PTR [rdx+rcx*1]
   140008354:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008359:	add    rcx,0x80
   140008360:	dec    eax
   140008362:	jne    0x140008350
   140008364:	sub    rcx,0x1000
   14000836b:	mov    eax,0x40
   140008370:	mov    r9,QWORD PTR [rdx+rcx*1]
   140008374:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008379:	movnti QWORD PTR [rcx],r9
   14000837d:	movnti QWORD PTR [rcx+0x8],r10
   140008382:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140008387:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000838c:	movnti QWORD PTR [rcx+0x10],r9
   140008391:	movnti QWORD PTR [rcx+0x18],r10
   140008396:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000839b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400083a0:	add    rcx,0x40
   1400083a4:	movnti QWORD PTR [rcx-0x20],r9
   1400083a9:	movnti QWORD PTR [rcx-0x18],r10
   1400083ae:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400083b3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400083b8:	dec    eax
   1400083ba:	movnti QWORD PTR [rcx-0x10],r9
   1400083bf:	movnti QWORD PTR [rcx-0x8],r10
   1400083c4:	jne    0x140008370
   1400083c6:	sub    r8,0x1000
   1400083cd:	cmp    r8,0x1000
   1400083d4:	jae    0x14000834b
   1400083da:	lock or BYTE PTR [rsp],0x0
   1400083df:	jmp    0x14000829d
   1400083e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400083f0:	data16 data16 xchg ax,ax
   1400083f4:	data16 data16 xchg ax,ax
   1400083f8:	xchg   ax,ax
   1400083fa:	add    rcx,r8
   1400083fd:	cmp    r8,0x8
   140008401:	jb     0x140008464
   140008403:	test   cl,0x7
   140008406:	je     0x14000843e
   140008408:	test   cl,0x1
   14000840b:	je     0x140008418
   14000840d:	dec    rcx
   140008410:	mov    al,BYTE PTR [rdx+rcx*1]
   140008413:	dec    r8
   140008416:	mov    BYTE PTR [rcx],al
   140008418:	test   cl,0x2
   14000841b:	je     0x14000842c
   14000841d:	sub    rcx,0x2
   140008421:	mov    ax,WORD PTR [rdx+rcx*1]
   140008425:	sub    r8,0x2
   140008429:	mov    WORD PTR [rcx],ax
   14000842c:	test   cl,0x4
   14000842f:	je     0x14000843e
   140008431:	sub    rcx,0x4
   140008435:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008438:	sub    r8,0x4
   14000843c:	mov    DWORD PTR [rcx],eax
   14000843e:	mov    r9,r8
   140008441:	shr    r9,0x5
   140008445:	jne    0x140008497
   140008447:	mov    r9,r8
   14000844a:	shr    r9,0x3
   14000844e:	je     0x140008464
   140008450:	sub    rcx,0x8
   140008454:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008458:	dec    r9
   14000845b:	mov    QWORD PTR [rcx],rax
   14000845e:	jne    0x140008450
   140008460:	and    r8,0x7
   140008464:	test   r8,r8
   140008467:	jne    0x140008470
   140008469:	mov    rax,r11
   14000846c:	ret    
   14000846d:	nop    DWORD PTR [rax]
   140008470:	dec    rcx
   140008473:	mov    al,BYTE PTR [rdx+rcx*1]
   140008476:	dec    r8
   140008479:	mov    BYTE PTR [rcx],al
   14000847b:	jne    0x140008470
   14000847d:	mov    rax,r11
   140008480:	ret    
   140008481:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008490:	data16 data16 xchg ax,ax
   140008494:	data16 xchg ax,ax
   140008497:	cmp    r9,0x2000
   14000849e:	jae    0x1400084e2
   1400084a0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   1400084a5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400084aa:	sub    rcx,0x20
   1400084ae:	mov    QWORD PTR [rcx+0x18],rax
   1400084b2:	mov    QWORD PTR [rcx+0x10],r10
   1400084b6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400084bb:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400084bf:	dec    r9
   1400084c2:	mov    QWORD PTR [rcx+0x8],rax
   1400084c6:	mov    QWORD PTR [rcx],r10
   1400084c9:	jne    0x1400084a0
   1400084cb:	and    r8,0x1f
   1400084cf:	jmp    0x140008447
   1400084d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400084e0:	xchg   ax,ax
   1400084e2:	cmp    rdx,0xfffffffffffff000
   1400084e9:	ja     0x1400084a0
   1400084eb:	mov    eax,0x20
   1400084f0:	sub    rcx,0x80
   1400084f7:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400084fb:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008500:	dec    eax
   140008502:	jne    0x1400084f0
   140008504:	add    rcx,0x1000
   14000850b:	mov    eax,0x40
   140008510:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140008515:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000851a:	movnti QWORD PTR [rcx-0x8],r9
   14000851f:	movnti QWORD PTR [rcx-0x10],r10
   140008524:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140008529:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000852e:	movnti QWORD PTR [rcx-0x18],r9
   140008533:	movnti QWORD PTR [rcx-0x20],r10
   140008538:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000853d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140008542:	sub    rcx,0x40
   140008546:	movnti QWORD PTR [rcx+0x18],r9
   14000854b:	movnti QWORD PTR [rcx+0x10],r10
   140008550:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140008555:	mov    r10,QWORD PTR [rdx+rcx*1]
   140008559:	dec    eax
   14000855b:	movnti QWORD PTR [rcx+0x8],r9
   140008560:	movnti QWORD PTR [rcx],r10
   140008564:	jne    0x140008510
   140008566:	sub    r8,0x1000
   14000856d:	cmp    r8,0x1000
   140008574:	jae    0x1400084eb
   14000857a:	lock or BYTE PTR [rsp],0x0
   14000857f:	jmp    0x14000843e
   140008584:	test   rcx,rcx
   140008587:	je     0x1400085c0
   140008589:	push   rbx
   14000858a:	sub    rsp,0x20
   14000858e:	mov    r8,rcx
   140008591:	mov    rcx,QWORD PTR [rip+0x1b070]        # 0x140023608
   140008598:	xor    edx,edx
   14000859a:	call   QWORD PTR [rip+0xfb50]        # 0x1400180f0
   1400085a0:	test   eax,eax
   1400085a2:	jne    0x1400085bb
   1400085a4:	call   0x140008e40
   1400085a9:	mov    rbx,rax
   1400085ac:	call   QWORD PTR [rip+0xfaae]        # 0x140018060
   1400085b2:	mov    ecx,eax
   1400085b4:	call   0x140008df8
   1400085b9:	mov    DWORD PTR [rbx],eax
   1400085bb:	add    rsp,0x20
   1400085bf:	pop    rbx
   1400085c0:	ret    
   1400085c1:	int3   
   1400085c2:	int3   
   1400085c3:	int3   
   1400085c4:	rex push rbx
   1400085c6:	sub    rsp,0x20
   1400085ca:	mov    edx,0x8
   1400085cf:	lea    ecx,[rdx+0x18]
   1400085d2:	call   0x14000c3a0
   1400085d7:	mov    rcx,rax
   1400085da:	mov    rbx,rax
   1400085dd:	call   QWORD PTR [rip+0xfad5]        # 0x1400180b8
   1400085e3:	mov    QWORD PTR [rip+0x1cfc6],rax        # 0x1400255b0
   1400085ea:	mov    QWORD PTR [rip+0x1cfb7],rax        # 0x1400255a8
   1400085f1:	test   rbx,rbx
   1400085f4:	jne    0x1400085fb
   1400085f6:	lea    eax,[rbx+0x18]
   1400085f9:	jmp    0x140008601
   1400085fb:	and    QWORD PTR [rbx],0x0
   1400085ff:	xor    eax,eax
   140008601:	add    rsp,0x20
   140008605:	pop    rbx
   140008606:	ret    
   140008607:	int3   
   140008608:	mov    QWORD PTR [rsp+0x8],rbx
   14000860d:	mov    QWORD PTR [rsp+0x10],rsi
   140008612:	mov    QWORD PTR [rsp+0x18],rdi
   140008617:	push   r12
   140008619:	push   r13
   14000861b:	push   r14
   14000861d:	sub    rsp,0x20
   140008621:	mov    r14,rcx
   140008624:	call   0x14000dcd0
   140008629:	nop
   14000862a:	mov    rcx,QWORD PTR [rip+0x1cf7f]        # 0x1400255b0
   140008631:	call   QWORD PTR [rip+0xfa89]        # 0x1400180c0
   140008637:	mov    r12,rax
   14000863a:	mov    rcx,QWORD PTR [rip+0x1cf67]        # 0x1400255a8
   140008641:	call   QWORD PTR [rip+0xfa79]        # 0x1400180c0
   140008647:	mov    rbx,rax
   14000864a:	cmp    rax,r12
   14000864d:	jb     0x1400086ee
   140008653:	mov    rdi,rax
   140008656:	sub    rdi,r12
   140008659:	lea    r13,[rdi+0x8]
   14000865d:	cmp    r13,0x8
   140008661:	jb     0x1400086ee
   140008667:	mov    rcx,r12
   14000866a:	call   0x14000dc40
   14000866f:	mov    rsi,rax
   140008672:	cmp    rax,r13
   140008675:	jae    0x1400086cc
   140008677:	mov    edx,0x1000
   14000867c:	cmp    rax,rdx
   14000867f:	cmovb  rdx,rax
   140008683:	add    rdx,rax
   140008686:	cmp    rdx,rax
   140008689:	jb     0x14000869c
   14000868b:	mov    rcx,r12
   14000868e:	call   0x14000c424
   140008693:	xor    ebx,ebx
   140008695:	test   rax,rax
   140008698:	jne    0x1400086b4
   14000869a:	jmp    0x14000869e
   14000869c:	xor    ebx,ebx
   14000869e:	lea    rdx,[rsi+0x20]
   1400086a2:	cmp    rdx,rsi
   1400086a5:	jb     0x1400086f0
   1400086a7:	mov    rcx,r12
   1400086aa:	call   0x14000c424
   1400086af:	test   rax,rax
   1400086b2:	je     0x1400086f0
   1400086b4:	sar    rdi,0x3
   1400086b8:	lea    rbx,[rax+rdi*8]
   1400086bc:	mov    rcx,rax
   1400086bf:	call   QWORD PTR [rip+0xf9f3]        # 0x1400180b8
   1400086c5:	mov    QWORD PTR [rip+0x1cee4],rax        # 0x1400255b0
   1400086cc:	mov    rcx,r14
   1400086cf:	call   QWORD PTR [rip+0xf9e3]        # 0x1400180b8
   1400086d5:	mov    QWORD PTR [rbx],rax
   1400086d8:	lea    rcx,[rbx+0x8]
   1400086dc:	call   QWORD PTR [rip+0xf9d6]        # 0x1400180b8
   1400086e2:	mov    QWORD PTR [rip+0x1cebf],rax        # 0x1400255a8
   1400086e9:	mov    rbx,r14
   1400086ec:	jmp    0x1400086f0
   1400086ee:	xor    ebx,ebx
   1400086f0:	call   0x14000dcdc
   1400086f5:	mov    rax,rbx
   1400086f8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400086fd:	mov    rsi,QWORD PTR [rsp+0x48]
   140008702:	mov    rdi,QWORD PTR [rsp+0x50]
   140008707:	add    rsp,0x20
   14000870b:	pop    r14
   14000870d:	pop    r13
   14000870f:	pop    r12
   140008711:	ret    
   140008712:	int3   
   140008713:	int3   
   140008714:	sub    rsp,0x28
   140008718:	call   0x140008608
   14000871d:	neg    rax
   140008720:	sbb    eax,eax
   140008722:	neg    eax
   140008724:	dec    eax
   140008726:	add    rsp,0x28
   14000872a:	ret    
   14000872b:	int3   
   14000872c:	jmp    0x140008584
   140008731:	int3   
   140008732:	int3   
   140008733:	int3   
   140008734:	mov    QWORD PTR [rsp+0x8],rbx
   140008739:	push   rdi
   14000873a:	sub    rsp,0x20
   14000873e:	lea    rax,[rip+0xff6b]        # 0x1400186b0
   140008745:	mov    ebx,edx
   140008747:	mov    rdi,rcx
   14000874a:	mov    QWORD PTR [rcx],rax
   14000874d:	call   0x14000e23c
   140008752:	test   bl,0x1
   140008755:	je     0x14000875f
   140008757:	mov    rcx,rdi
   14000875a:	call   0x14000872c
   14000875f:	mov    rax,rdi
   140008762:	mov    rbx,QWORD PTR [rsp+0x30]
   140008767:	add    rsp,0x20
   14000876b:	pop    rdi
   14000876c:	ret    
   14000876d:	int3   
   14000876e:	int3   
   14000876f:	int3   
   140008770:	sub    rsp,0x28
   140008774:	mov    rax,rdx
   140008777:	lea    rdx,[rcx+0x11]
   14000877b:	lea    rcx,[rax+0x11]
   14000877f:	call   0x14000e2c0
   140008784:	test   eax,eax
   140008786:	sete   al
   140008789:	add    rsp,0x28
   14000878d:	ret    
   14000878e:	int3   
   14000878f:	int3   
   140008790:	rex push rbx
   140008792:	sub    rsp,0x40
   140008796:	mov    rbx,rcx
   140008799:	jmp    0x1400087aa
   14000879b:	mov    rcx,rbx
   14000879e:	call   0x14000e378
   1400087a3:	test   eax,eax
   1400087a5:	je     0x1400087ba
   1400087a7:	mov    rcx,rbx
   1400087aa:	call   0x14000abd4
   1400087af:	test   rax,rax
   1400087b2:	je     0x14000879b
   1400087b4:	add    rsp,0x40
   1400087b8:	pop    rbx
   1400087b9:	ret    
   1400087ba:	mov    eax,DWORD PTR [rip+0x1a880]        # 0x140023040
   1400087c0:	mov    r8d,0x1
   1400087c6:	lea    rbx,[rip+0xfc83]        # 0x140018450
   1400087cd:	test   r8b,al
   1400087d0:	jne    0x14000880b
   1400087d2:	or     eax,r8d
   1400087d5:	lea    rdx,[rsp+0x58]
   1400087da:	lea    rcx,[rip+0x1a847]        # 0x140023028
   1400087e1:	mov    DWORD PTR [rip+0x1a859],eax        # 0x140023040
   1400087e7:	lea    rax,[rip+0xfeca]        # 0x1400186b8
   1400087ee:	mov    QWORD PTR [rsp+0x58],rax
   1400087f3:	call   0x140008050
   1400087f8:	lea    rcx,[rip+0xf3ed]        # 0x140017bec
   1400087ff:	mov    QWORD PTR [rip+0x1a822],rbx        # 0x140023028
   140008806:	call   0x140008714
   14000880b:	lea    rdx,[rip+0x1a816]        # 0x140023028
   140008812:	lea    rcx,[rsp+0x20]
   140008817:	call   0x1400081b4
   14000881c:	lea    rdx,[rip+0x16e7d]        # 0x14001f6a0
   140008823:	lea    rcx,[rsp+0x20]
   140008828:	mov    QWORD PTR [rsp+0x20],rbx
   14000882d:	call   0x140009498
   140008832:	int3   
   140008833:	int3   
   140008834:	mov    rax,rsp
   140008837:	mov    QWORD PTR [rax+0x8],rbx
   14000883b:	mov    QWORD PTR [rax+0x10],rbp
   14000883f:	mov    QWORD PTR [rax+0x18],rsi
   140008843:	push   rdi
   140008844:	sub    rsp,0x50
   140008848:	and    QWORD PTR [rax-0x38],0x0
   14000884d:	mov    rbx,rdx
   140008850:	xor    edx,edx
   140008852:	mov    rsi,r8
   140008855:	mov    rbp,rcx
   140008858:	lea    r8d,[rdx+0x28]
   14000885c:	lea    rcx,[rax-0x30]
   140008860:	mov    rdi,r9
   140008863:	call   0x14000f080
   140008868:	test   rbx,rbx
   14000886b:	jne    0x140008882
   14000886d:	call   0x140008e40
   140008872:	mov    DWORD PTR [rax],0x16
   140008878:	call   0x14000dafc
   14000887d:	or     eax,0xffffffff
   140008880:	jmp    0x1400088ae
   140008882:	and    QWORD PTR [rsp+0x30],0x0
   140008888:	and    QWORD PTR [rsp+0x20],0x0
   14000888e:	lea    rcx,[rsp+0x20]
   140008893:	mov    r9,rdi
   140008896:	mov    r8,rsi
   140008899:	mov    rdx,rbx
   14000889c:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   1400088a4:	mov    DWORD PTR [rsp+0x38],0x42
   1400088ac:	call   rbp
   1400088ae:	mov    rbx,QWORD PTR [rsp+0x60]
   1400088b3:	mov    rbp,QWORD PTR [rsp+0x68]
   1400088b8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400088bd:	add    rsp,0x50
   1400088c1:	pop    rdi
   1400088c2:	ret    
   1400088c3:	int3   
   1400088c4:	mov    r9,rdx
   1400088c7:	mov    rdx,rcx
   1400088ca:	lea    rcx,[rip+0x5ca3]        # 0x14000e574
   1400088d1:	xor    r8d,r8d
   1400088d4:	jmp    0x140008834
   1400088d9:	int3   
   1400088da:	int3   
   1400088db:	int3   
   1400088dc:	xor    edx,edx
   1400088de:	lea    r8d,[rdx+0xa]
   1400088e2:	jmp    0x14000f354
   1400088e7:	int3   
   1400088e8:	mov    rax,rsp
   1400088eb:	mov    QWORD PTR [rax+0x8],rbx
   1400088ef:	mov    QWORD PTR [rax+0x10],rbp
   1400088f3:	mov    QWORD PTR [rax+0x18],rsi
   1400088f7:	mov    QWORD PTR [rax+0x20],rdi
   1400088fb:	push   r12
   1400088fd:	sub    rsp,0x40
   140008901:	xor    r12d,r12d
   140008904:	mov    rbp,r8
   140008907:	mov    rdi,rdx
   14000890a:	mov    rsi,rcx
   14000890d:	mov    eax,r12d
   140008910:	test   r8,r8
   140008913:	je     0x1400089e3
   140008919:	test   rcx,rcx
   14000891c:	jne    0x140008938
   14000891e:	call   0x140008e40
   140008923:	mov    DWORD PTR [rax],0x16
   140008929:	call   0x14000dafc
   14000892e:	mov    eax,0x7fffffff
   140008933:	jmp    0x1400089e3
   140008938:	test   rdx,rdx
   14000893b:	je     0x14000891e
   14000893d:	lea    rcx,[rsp+0x20]
   140008942:	mov    rdx,r9
   140008945:	call   0x140007d40
   14000894a:	mov    r11,QWORD PTR [rsp+0x20]
   14000894f:	cmp    DWORD PTR [r11+0x14],r12d
   140008953:	jne    0x140008994
   140008955:	sub    rsi,rdi
   140008958:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14000895c:	cmp    bx,0x41
   140008960:	jb     0x14000896c
   140008962:	cmp    bx,0x5a
   140008966:	ja     0x14000896c
   140008968:	add    bx,0x20
   14000896c:	movzx  eax,WORD PTR [rdi]
   14000896f:	cmp    ax,0x41
   140008973:	jb     0x14000897f
   140008975:	cmp    ax,0x5a
   140008979:	ja     0x14000897f
   14000897b:	add    ax,0x20
   14000897f:	add    rdi,0x2
   140008983:	dec    rbp
   140008986:	je     0x1400089c8
   140008988:	test   bx,bx
   14000898b:	je     0x1400089c8
   14000898d:	cmp    bx,ax
   140008990:	je     0x140008958
   140008992:	jmp    0x1400089c8
   140008994:	movzx  ecx,WORD PTR [rsi]
   140008997:	lea    rdx,[rsp+0x20]
   14000899c:	call   0x140007f70
   1400089a1:	movzx  ecx,WORD PTR [rdi]
   1400089a4:	lea    rdx,[rsp+0x20]
   1400089a9:	movzx  ebx,ax
   1400089ac:	call   0x140007f70
   1400089b1:	add    rsi,0x2
   1400089b5:	add    rdi,0x2
   1400089b9:	dec    rbp
   1400089bc:	je     0x1400089c8
   1400089be:	test   bx,bx
   1400089c1:	je     0x1400089c8
   1400089c3:	cmp    bx,ax
   1400089c6:	je     0x140008994
   1400089c8:	movzx  ecx,ax
   1400089cb:	movzx  eax,bx
   1400089ce:	sub    eax,ecx
   1400089d0:	cmp    BYTE PTR [rsp+0x38],r12b
   1400089d5:	je     0x1400089e3
   1400089d7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400089dc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400089e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400089e8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400089ed:	mov    rsi,QWORD PTR [rsp+0x60]
   1400089f2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400089f7:	add    rsp,0x40
   1400089fb:	pop    r12
   1400089fd:	ret    
   1400089fe:	int3   
   1400089ff:	int3   
   140008a00:	sub    rsp,0x28
   140008a04:	xor    eax,eax
   140008a06:	mov    r10,rdx
   140008a09:	mov    r11,rcx
   140008a0c:	cmp    DWORD PTR [rip+0x1a64a],eax        # 0x14002305c
   140008a12:	jne    0x140008a8b
   140008a14:	test   r8,r8
   140008a17:	je     0x140008a93
   140008a19:	test   rcx,rcx
   140008a1c:	jne    0x140008a38
   140008a1e:	call   0x140008e40
   140008a23:	mov    DWORD PTR [rax],0x16
   140008a29:	call   0x14000dafc
   140008a2e:	mov    eax,0x7fffffff
   140008a33:	add    rsp,0x28
   140008a37:	ret    
   140008a38:	test   rdx,rdx
   140008a3b:	je     0x140008a1e
   140008a3d:	sub    r11,rdx
   140008a40:	movzx  ecx,WORD PTR [r11+r10*1]
   140008a45:	cmp    cx,0x41
   140008a49:	jb     0x140008a55
   140008a4b:	cmp    cx,0x5a
   140008a4f:	ja     0x140008a55
   140008a51:	add    cx,0x20
   140008a55:	movzx  edx,WORD PTR [r10]
   140008a59:	cmp    dx,0x41
   140008a5d:	jb     0x140008a69
   140008a5f:	cmp    dx,0x5a
   140008a63:	ja     0x140008a69
   140008a65:	add    dx,0x20
   140008a69:	add    r10,0x2
   140008a6d:	dec    r8
   140008a70:	je     0x140008a7c
   140008a72:	test   cx,cx
   140008a75:	je     0x140008a7c
   140008a77:	cmp    cx,dx
   140008a7a:	je     0x140008a40
   140008a7c:	movzx  eax,dx
   140008a7f:	movzx  ecx,cx
   140008a82:	sub    ecx,eax
   140008a84:	mov    eax,ecx
   140008a86:	add    rsp,0x28
   140008a8a:	ret    
   140008a8b:	xor    r9d,r9d
   140008a8e:	call   0x1400088e8
   140008a93:	add    rsp,0x28
   140008a97:	ret    
   140008a98:	mov    QWORD PTR [rsp+0x8],rbx
   140008a9d:	mov    QWORD PTR [rsp+0x10],rsi
   140008aa2:	mov    QWORD PTR [rsp+0x18],rdi
   140008aa7:	push   rbp
   140008aa8:	push   r12
   140008aaa:	push   r13
   140008aac:	mov    rbp,rsp
   140008aaf:	sub    rsp,0x50
   140008ab3:	xor    ebx,ebx
   140008ab5:	mov    r12,r8
   140008ab8:	mov    r13,rcx
   140008abb:	mov    rsi,rdx
   140008abe:	lea    rcx,[rbp-0x28]
   140008ac2:	lea    r8d,[rbx+0x28]
   140008ac6:	xor    edx,edx
   140008ac8:	mov    rdi,r9
   140008acb:	mov    QWORD PTR [rbp-0x30],rbx
   140008acf:	call   0x14000f080
   140008ad4:	test   rdi,rdi
   140008ad7:	jne    0x140008af1
   140008ad9:	call   0x140008e40
   140008ade:	mov    DWORD PTR [rax],0x16
   140008ae4:	call   0x14000dafc
   140008ae9:	or     eax,0xffffffff
   140008aec:	jmp    0x140008b98
   140008af1:	test   r12,r12
   140008af4:	je     0x140008afb
   140008af6:	test   rsi,rsi
   140008af9:	je     0x140008ad9
   140008afb:	mov    DWORD PTR [rbp-0x18],0x42
   140008b02:	mov    QWORD PTR [rbp-0x20],rsi
   140008b06:	mov    QWORD PTR [rbp-0x30],rsi
   140008b0a:	cmp    r12,0x3fffffff
   140008b11:	jbe    0x140008b1c
   140008b13:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140008b1a:	jmp    0x140008b23
   140008b1c:	lea    eax,[r12+r12*1]
   140008b20:	mov    DWORD PTR [rbp-0x28],eax
   140008b23:	mov    r9,QWORD PTR [rbp+0x48]
   140008b27:	mov    r8,QWORD PTR [rbp+0x40]
   140008b2b:	lea    rcx,[rbp-0x30]
   140008b2f:	mov    rdx,rdi
   140008b32:	call   r13
   140008b35:	mov    edi,eax
   140008b37:	test   rsi,rsi
   140008b3a:	je     0x140008b98
   140008b3c:	test   eax,eax
   140008b3e:	js     0x140008b89
   140008b40:	dec    DWORD PTR [rbp-0x28]
   140008b43:	js     0x140008b58
   140008b45:	mov    rax,QWORD PTR [rbp-0x30]
   140008b49:	mov    BYTE PTR [rax],bl
   140008b4b:	mov    rax,QWORD PTR [rbp-0x30]
   140008b4f:	inc    rax
   140008b52:	mov    QWORD PTR [rbp-0x30],rax
   140008b56:	jmp    0x140008b6c
   140008b58:	lea    rdx,[rbp-0x30]
   140008b5c:	xor    ecx,ecx
   140008b5e:	call   0x14000e3ac
   140008b63:	cmp    eax,0xffffffff
   140008b66:	je     0x140008b89
   140008b68:	mov    rax,QWORD PTR [rbp-0x30]
   140008b6c:	dec    DWORD PTR [rbp-0x28]
   140008b6f:	js     0x140008b75
   140008b71:	mov    BYTE PTR [rax],bl
   140008b73:	jmp    0x140008b85
   140008b75:	lea    rdx,[rbp-0x30]
   140008b79:	xor    ecx,ecx
   140008b7b:	call   0x14000e3ac
   140008b80:	cmp    eax,0xffffffff
   140008b83:	je     0x140008b89
   140008b85:	mov    eax,edi
   140008b87:	jmp    0x140008b98
   140008b89:	cmp    DWORD PTR [rbp-0x28],ebx
   140008b8c:	mov    WORD PTR [rsi+r12*2-0x2],bx
   140008b92:	setge  bl
   140008b95:	lea    eax,[rbx-0x2]
   140008b98:	lea    r11,[rsp+0x50]
   140008b9d:	mov    rbx,QWORD PTR [r11+0x20]
   140008ba1:	mov    rsi,QWORD PTR [r11+0x28]
   140008ba5:	mov    rdi,QWORD PTR [r11+0x30]
   140008ba9:	mov    rsp,r11
   140008bac:	pop    r13
   140008bae:	pop    r12
   140008bb0:	pop    rbp
   140008bb1:	ret    
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	mov    QWORD PTR [rsp+0x8],rbx
   140008bb9:	push   rdi
   140008bba:	sub    rsp,0x30
   140008bbe:	xor    edi,edi
   140008bc0:	mov    rbx,rcx
   140008bc3:	test   r8,r8
   140008bc6:	je     0x140008c0f
   140008bc8:	test   rcx,rcx
   140008bcb:	je     0x140008c0f
   140008bcd:	test   rdx,rdx
   140008bd0:	je     0x140008c0f
   140008bd2:	mov    rax,QWORD PTR [rsp+0x60]
   140008bd7:	mov    QWORD PTR [rsp+0x28],rax
   140008bdc:	mov    QWORD PTR [rsp+0x20],r9
   140008be1:	mov    r9,r8
   140008be4:	mov    r8,rdx
   140008be7:	mov    rdx,rcx
   140008bea:	lea    rcx,[rip+0x685b]        # 0x14000f44c
   140008bf1:	call   0x140008a98
   140008bf6:	test   eax,eax
   140008bf8:	jns    0x140008bfd
   140008bfa:	mov    WORD PTR [rbx],di
   140008bfd:	cmp    eax,0xfffffffe
   140008c00:	jne    0x140008c22
   140008c02:	call   0x140008e40
   140008c07:	mov    DWORD PTR [rax],0x22
   140008c0d:	jmp    0x140008c1a
   140008c0f:	call   0x140008e40
   140008c14:	mov    DWORD PTR [rax],0x16
   140008c1a:	call   0x14000dafc
   140008c1f:	or     eax,0xffffffff
   140008c22:	mov    rbx,QWORD PTR [rsp+0x40]
   140008c27:	add    rsp,0x30
   140008c2b:	pop    rdi
   140008c2c:	ret    
   140008c2d:	int3   
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	sub    rsp,0x38
   140008c34:	mov    QWORD PTR [rsp+0x20],r9
   140008c39:	xor    r9d,r9d
   140008c3c:	call   0x140008bb4
   140008c41:	add    rsp,0x38
   140008c45:	ret    
   140008c46:	int3   
   140008c47:	int3   
   140008c48:	mov    QWORD PTR [rsp+0x10],rbx
   140008c4d:	push   rdi
   140008c4e:	sub    rsp,0xa0
   140008c55:	lea    rcx,[rsp+0x30]
   140008c5a:	call   QWORD PTR [rip+0xf4a0]        # 0x140018100
   140008c60:	mov    r11d,0x5a4d
   140008c66:	lea    rdi,[rip+0xffffffffffff7393]        # 0x140000000
   140008c6d:	cmp    WORD PTR [rip+0xffffffffffff738b],r11w        # 0x140000000
   140008c75:	je     0x140008c7b
   140008c77:	xor    ebx,ebx
   140008c79:	jmp    0x140008cac
   140008c7b:	movsxd rax,DWORD PTR [rip+0xffffffffffff73ba]        # 0x14000003c
   140008c82:	add    rax,rdi
   140008c85:	cmp    DWORD PTR [rax],0x4550
   140008c8b:	jne    0x140008c77
   140008c8d:	mov    ecx,0x20b
   140008c92:	cmp    WORD PTR [rax+0x18],cx
   140008c96:	jne    0x140008c77
   140008c98:	xor    ebx,ebx
   140008c9a:	cmp    DWORD PTR [rax+0x84],0xe
   140008ca1:	jbe    0x140008cac
   140008ca3:	cmp    DWORD PTR [rax+0xf8],ebx
   140008ca9:	setne  bl
   140008cac:	mov    DWORD PTR [rsp+0xb0],ebx
   140008cb3:	call   0x14000dbe8
   140008cb8:	test   eax,eax
   140008cba:	jne    0x140008cde
   140008cbc:	cmp    DWORD PTR [rip+0x1a395],0x1        # 0x140023058
   140008cc3:	jne    0x140008cca
   140008cc5:	call   0x140010290
   140008cca:	mov    ecx,0x1c
   140008ccf:	call   0x140010030
   140008cd4:	mov    ecx,0xff
   140008cd9:	call   0x14000dcb8
   140008cde:	call   0x14000d880
   140008ce3:	test   eax,eax
   140008ce5:	jne    0x140008d09
   140008ce7:	cmp    DWORD PTR [rip+0x1a36a],0x1        # 0x140023058
   140008cee:	jne    0x140008cf5
   140008cf0:	call   0x140010290
   140008cf5:	mov    ecx,0x10
   140008cfa:	call   0x140010030
   140008cff:	mov    ecx,0xff
   140008d04:	call   0x14000dcb8
   140008d09:	call   0x140010c18
   140008d0e:	nop
   140008d0f:	call   0x140010944
   140008d14:	test   eax,eax
   140008d16:	jns    0x140008d22
   140008d18:	mov    ecx,0x1b
   140008d1d:	call   0x14000e014
   140008d22:	call   QWORD PTR [rip+0xf3d0]        # 0x1400180f8
   140008d28:	mov    QWORD PTR [rip+0x1c8a1],rax        # 0x1400255d0
   140008d2f:	call   0x1400108bc
   140008d34:	mov    QWORD PTR [rip+0x1a315],rax        # 0x140023050
   140008d3b:	call   0x1400107cc
   140008d40:	test   eax,eax
   140008d42:	jns    0x140008d4e
   140008d44:	mov    ecx,0x8
   140008d49:	call   0x14000e014
   140008d4e:	call   0x1400104fc
   140008d53:	test   eax,eax
   140008d55:	jns    0x140008d61
   140008d57:	mov    ecx,0x9
   140008d5c:	call   0x14000e014
   140008d61:	mov    ecx,0x1
   140008d66:	call   0x14000dd9c
   140008d6b:	test   eax,eax
   140008d6d:	je     0x140008d76
   140008d6f:	mov    ecx,eax
   140008d71:	call   0x14000e014
   140008d76:	call   0x1400104a4
   140008d7b:	test   BYTE PTR [rsp+0x6c],0x1
   140008d80:	movzx  edx,WORD PTR [rsp+0x70]
   140008d85:	mov    r9d,0xa
   140008d8b:	cmovne r9d,edx
   140008d8f:	mov    r8,rax
   140008d92:	xor    edx,edx
   140008d94:	mov    rcx,rdi
   140008d97:	call   0x1400065f0
   140008d9c:	mov    edi,eax
   140008d9e:	mov    DWORD PTR [rsp+0x20],eax
   140008da2:	test   ebx,ebx
   140008da4:	jne    0x140008dad
   140008da6:	mov    ecx,eax
   140008da8:	call   0x14000dfdc
   140008dad:	call   0x14000dff4
   140008db2:	jmp    0x140008dce
   140008db4:	mov    edi,eax
   140008db6:	cmp    DWORD PTR [rsp+0xb0],0x0
   140008dbe:	jne    0x140008dc8
   140008dc0:	mov    ecx,eax
   140008dc2:	call   0x14000dfe8
   140008dc7:	int3   
   140008dc8:	call   0x14000e004
   140008dcd:	nop
   140008dce:	mov    eax,edi
   140008dd0:	mov    rbx,QWORD PTR [rsp+0xb8]
   140008dd8:	add    rsp,0xa0
   140008ddf:	pop    rdi
   140008de0:	ret    
   140008de1:	int3   
   140008de2:	int3   
   140008de3:	int3   
   140008de4:	sub    rsp,0x28
   140008de8:	call   0x140010c88
   140008ded:	add    rsp,0x28
   140008df1:	jmp    0x140008c48
   140008df6:	int3   
   140008df7:	int3   
   140008df8:	lea    r9,[rip+0x18471]        # 0x140021270
   140008dff:	xor    eax,eax
   140008e01:	mov    rdx,r9
   140008e04:	lea    r8d,[rax+0x8]
   140008e08:	cmp    ecx,DWORD PTR [rdx]
   140008e0a:	je     0x140008e37
   140008e0c:	inc    eax
   140008e0e:	add    rdx,r8
   140008e11:	cmp    eax,0x2d
   140008e14:	jb     0x140008e08
   140008e16:	lea    eax,[rcx-0x13]
   140008e19:	cmp    eax,0x11
   140008e1c:	ja     0x140008e24
   140008e1e:	mov    eax,0xd
   140008e23:	ret    
   140008e24:	add    ecx,0xffffff44
   140008e2a:	mov    eax,0x16
   140008e2f:	cmp    ecx,0xe
   140008e32:	cmovbe eax,r8d
   140008e36:	ret    
   140008e37:	cdqe   
   140008e39:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140008e3e:	ret    
   140008e3f:	int3   
   140008e40:	sub    rsp,0x28
   140008e44:	call   0x14000d6a4
   140008e49:	test   rax,rax
   140008e4c:	jne    0x140008e57
   140008e4e:	lea    rax,[rip+0x18583]        # 0x1400213d8
   140008e55:	jmp    0x140008e5b
   140008e57:	add    rax,0x10
   140008e5b:	add    rsp,0x28
   140008e5f:	ret    
   140008e60:	sub    rsp,0x28
   140008e64:	call   0x14000d6a4
   140008e69:	test   rax,rax
   140008e6c:	jne    0x140008e77
   140008e6e:	lea    rax,[rip+0x18567]        # 0x1400213dc
   140008e75:	jmp    0x140008e7b
   140008e77:	add    rax,0x14
   140008e7b:	add    rsp,0x28
   140008e7f:	ret    
   140008e80:	rex push rbx
   140008e82:	sub    rsp,0x20
   140008e86:	mov    ebx,ecx
   140008e88:	call   0x14000d6a4
   140008e8d:	test   rax,rax
   140008e90:	jne    0x140008e9b
   140008e92:	lea    rax,[rip+0x18543]        # 0x1400213dc
   140008e99:	jmp    0x140008e9f
   140008e9b:	add    rax,0x14
   140008e9f:	mov    DWORD PTR [rax],ebx
   140008ea1:	call   0x14000d6a4
   140008ea6:	lea    r10,[rip+0x1852b]        # 0x1400213d8
   140008ead:	test   rax,rax
   140008eb0:	je     0x140008eb6
   140008eb2:	lea    r10,[rax+0x10]
   140008eb6:	mov    ecx,ebx
   140008eb8:	call   0x140008df8
   140008ebd:	mov    DWORD PTR [r10],eax
   140008ec0:	add    rsp,0x20
   140008ec4:	pop    rbx
   140008ec5:	ret    
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	mov    r11,rsp
   140008ecb:	mov    QWORD PTR [r11+0x10],rbx
   140008ecf:	mov    QWORD PTR [r11+0x18],rbp
   140008ed3:	mov    QWORD PTR [r11+0x20],rsi
   140008ed7:	push   rdi
   140008ed8:	push   r12
   140008eda:	push   r13
   140008edc:	push   r14
   140008ede:	push   r15
   140008ee0:	sub    rsp,0x90
   140008ee7:	mov    rax,QWORD PTR [rip+0x18522]        # 0x140021410
   140008eee:	xor    rax,rsp
   140008ef1:	mov    QWORD PTR [rsp+0x88],rax
   140008ef9:	xor    ebx,ebx
   140008efb:	mov    rdi,rcx
   140008efe:	mov    QWORD PTR [r11-0x58],rcx
   140008f02:	mov    QWORD PTR [rsp+0x58],rbx
   140008f07:	mov    r13d,ebx
   140008f0a:	mov    r15d,ebx
   140008f0d:	mov    r14d,ebx
   140008f10:	mov    r12d,ebx
   140008f13:	mov    QWORD PTR [r11-0x50],rbx
   140008f17:	cmp    DWORD PTR [rcx+0x14],ebx
   140008f1a:	je     0x140009263
   140008f20:	lea    rbp,[rcx+0x4]
   140008f24:	lea    esi,[rbx+0x1]
   140008f27:	cmp    DWORD PTR [rbp+0x0],ebx
   140008f2a:	jne    0x140008f4f
   140008f2c:	movzx  r8d,WORD PTR [rcx+0x30]
   140008f31:	lea    rcx,[r11-0x58]
   140008f35:	xor    edx,edx
   140008f37:	mov    r9d,0x1004
   140008f3d:	mov    QWORD PTR [rsp+0x20],rbp
   140008f42:	call   0x140010f1c
   140008f47:	test   eax,eax
   140008f49:	jne    0x140009233
   140008f4f:	mov    ecx,0x4
   140008f54:	call   0x14000c320
   140008f59:	mov    r12d,0x180
   140008f5f:	mov    edx,0x2
   140008f64:	mov    ecx,r12d
   140008f67:	mov    QWORD PTR [rsp+0x58],rax
   140008f6c:	call   0x14000c3a0
   140008f71:	mov    rdx,rsi
   140008f74:	mov    ecx,r12d
   140008f77:	mov    r13,rax
   140008f7a:	call   0x14000c3a0
   140008f7f:	mov    rdx,rsi
   140008f82:	mov    ecx,r12d
   140008f85:	mov    r15,rax
   140008f88:	call   0x14000c3a0
   140008f8d:	lea    ecx,[r12-0x7f]
   140008f92:	mov    rdx,rsi
   140008f95:	mov    r14,rax
   140008f98:	call   0x14000c3a0
   140008f9d:	mov    r12,rax
   140008fa0:	mov    rax,QWORD PTR [rsp+0x58]
   140008fa5:	test   rax,rax
   140008fa8:	je     0x140009233
   140008fae:	test   r13,r13
   140008fb1:	je     0x140009233
   140008fb7:	test   r12,r12
   140008fba:	je     0x140009233
   140008fc0:	test   r15,r15
   140008fc3:	je     0x140009233
   140008fc9:	test   r14,r14
   140008fcc:	je     0x140009233
   140008fd2:	mov    DWORD PTR [rax],ebx
   140008fd4:	mov    rcx,r12
   140008fd7:	mov    eax,ebx
   140008fd9:	mov    BYTE PTR [rcx],al
   140008fdb:	add    eax,esi
   140008fdd:	add    rcx,rsi
   140008fe0:	cmp    eax,0x100
   140008fe5:	jl     0x140008fd9
   140008fe7:	mov    ecx,DWORD PTR [rbp+0x0]
   140008fea:	lea    rdx,[rsp+0x70]
   140008fef:	call   QWORD PTR [rip+0xf113]        # 0x140018108
   140008ff5:	test   eax,eax
   140008ff7:	je     0x140009233
   140008ffd:	cmp    DWORD PTR [rsp+0x70],0x5
   140009002:	ja     0x140009233
   140009008:	movzx  eax,WORD PTR [rsp+0x70]
   14000900d:	mov    DWORD PTR [rsp+0x50],eax
   140009011:	cmp    eax,esi
   140009013:	jle    0x140009044
   140009015:	cmp    BYTE PTR [rsp+0x76],bl
   140009019:	je     0x140009044
   14000901b:	lea    rcx,[rsp+0x77]
   140009020:	cmp    BYTE PTR [rcx],bl
   140009022:	je     0x140009044
   140009024:	movzx  edx,BYTE PTR [rcx-0x1]
   140009028:	jmp    0x140009034
   14000902a:	movsxd rax,edx
   14000902d:	add    edx,esi
   14000902f:	mov    BYTE PTR [rax+r12*1],0x20
   140009034:	movzx  eax,BYTE PTR [rcx]
   140009037:	cmp    edx,eax
   140009039:	jle    0x14000902a
   14000903b:	add    rcx,0x2
   14000903f:	cmp    BYTE PTR [rcx-0x1],bl
   140009042:	jne    0x140009020
   140009044:	mov    eax,DWORD PTR [rbp+0x0]
   140009047:	mov    DWORD PTR [rsp+0x38],ebx
   14000904b:	lea    rcx,[r13+0x100]
   140009052:	mov    DWORD PTR [rsp+0x30],ebx
   140009056:	mov    DWORD PTR [rsp+0x28],eax
   14000905a:	mov    QWORD PTR [rsp+0x20],rcx
   14000905f:	xor    ecx,ecx
   140009061:	mov    r9d,0x100
   140009067:	mov    r8,r12
   14000906a:	mov    edx,esi
   14000906c:	call   0x140010e9c
   140009071:	test   eax,eax
   140009073:	je     0x140009233
   140009079:	mov    eax,DWORD PTR [rbp+0x0]
   14000907c:	mov    edx,DWORD PTR [rdi+0x14]
   14000907f:	mov    DWORD PTR [rsp+0x40],ebx
   140009083:	mov    DWORD PTR [rsp+0x38],eax
   140009087:	mov    eax,0xff
   14000908c:	lea    rcx,[r15+0x81]
   140009093:	mov    DWORD PTR [rsp+0x30],eax
   140009097:	mov    QWORD PTR [rsp+0x28],rcx
   14000909c:	lea    r8d,[rax+0x1]
   1400090a0:	lea    r9,[r12+0x1]
   1400090a5:	xor    ecx,ecx
   1400090a7:	mov    DWORD PTR [rsp+0x20],eax
   1400090ab:	call   0x14000c7b4
   1400090b0:	test   eax,eax
   1400090b2:	je     0x140009233
   1400090b8:	mov    eax,DWORD PTR [rbp+0x0]
   1400090bb:	mov    edx,DWORD PTR [rdi+0x14]
   1400090be:	mov    DWORD PTR [rsp+0x40],ebx
   1400090c2:	mov    DWORD PTR [rsp+0x38],eax
   1400090c6:	mov    eax,0xff
   1400090cb:	lea    rcx,[r14+0x81]
   1400090d2:	mov    DWORD PTR [rsp+0x30],eax
   1400090d6:	mov    QWORD PTR [rsp+0x28],rcx
   1400090db:	lea    r9,[r12+0x1]
   1400090e0:	xor    ecx,ecx
   1400090e2:	mov    r8d,0x200
   1400090e8:	mov    DWORD PTR [rsp+0x20],eax
   1400090ec:	call   0x14000c7b4
   1400090f1:	test   eax,eax
   1400090f3:	je     0x140009233
   1400090f9:	lea    rbp,[r13+0xfe]
   140009100:	mov    WORD PTR [rbp+0x0],bx
   140009104:	mov    BYTE PTR [r15+0x7f],bl
   140009108:	mov    BYTE PTR [r14+0x7f],bl
   14000910c:	mov    BYTE PTR [r15+0x80],bl
   140009113:	mov    BYTE PTR [r14+0x80],bl
   14000911a:	cmp    DWORD PTR [rsp+0x50],esi
   14000911e:	jle    0x140009159
   140009120:	cmp    BYTE PTR [rsp+0x76],bl
   140009124:	je     0x140009159
   140009126:	lea    rcx,[rsp+0x77]
   14000912b:	cmp    BYTE PTR [rcx],bl
   14000912d:	je     0x140009159
   14000912f:	movzx  edx,BYTE PTR [rcx-0x1]
   140009133:	jmp    0x140009149
   140009135:	movsxd rax,edx
   140009138:	mov    r8d,0x8000
   14000913e:	add    edx,esi
   140009140:	mov    WORD PTR [r13+rax*2+0x100],r8w
   140009149:	movzx  eax,BYTE PTR [rcx]
   14000914c:	cmp    edx,eax
   14000914e:	jle    0x140009135
   140009150:	add    rcx,0x2
   140009154:	cmp    BYTE PTR [rcx-0x1],bl
   140009157:	jne    0x14000912b
   140009159:	lea    rdx,[r13+0x200]
   140009160:	mov    r8d,0xfe
   140009166:	mov    rcx,r13
   140009169:	call   0x140008250
   14000916e:	lea    rdx,[r15+0x100]
   140009175:	mov    r8d,0x7f
   14000917b:	mov    rcx,r15
   14000917e:	call   0x140008250
   140009183:	lea    rdx,[r14+0x100]
   14000918a:	mov    r8d,0x7f
   140009190:	mov    rcx,r14
   140009193:	call   0x140008250
   140009198:	mov    rcx,QWORD PTR [rdi+0x130]
   14000919f:	test   rcx,rcx
   1400091a2:	je     0x1400091e8
   1400091a4:	lock dec DWORD PTR [rcx]
   1400091a7:	jne    0x1400091e8
   1400091a9:	mov    rcx,QWORD PTR [rdi+0x138]
   1400091b0:	sub    rcx,0xfe
   1400091b7:	call   0x140008584
   1400091bc:	mov    rcx,QWORD PTR [rdi+0x148]
   1400091c3:	add    rcx,0xffffffffffffff80
   1400091c7:	call   0x140008584
   1400091cc:	mov    rcx,QWORD PTR [rdi+0x150]
   1400091d3:	add    rcx,0xffffffffffffff80
   1400091d7:	call   0x140008584
   1400091dc:	mov    rcx,QWORD PTR [rdi+0x130]
   1400091e3:	call   0x140008584
   1400091e8:	mov    rax,QWORD PTR [rsp+0x58]
   1400091ed:	mov    DWORD PTR [rax],esi
   1400091ef:	mov    QWORD PTR [rdi+0x130],rax
   1400091f6:	lea    rax,[r13+0x100]
   1400091fd:	mov    QWORD PTR [rdi+0x140],rax
   140009204:	lea    rax,[r15+0x80]
   14000920b:	mov    QWORD PTR [rdi+0x138],rbp
   140009212:	mov    QWORD PTR [rdi+0x148],rax
   140009219:	lea    rax,[r14+0x80]
   140009220:	mov    QWORD PTR [rdi+0x150],rax
   140009227:	mov    eax,DWORD PTR [rsp+0x50]
   14000922b:	mov    DWORD PTR [rdi+0x10c],eax
   140009231:	jmp    0x140009257
   140009233:	mov    rcx,QWORD PTR [rsp+0x58]
   140009238:	call   0x140008584
   14000923d:	mov    rcx,r13
   140009240:	call   0x140008584
   140009245:	mov    rcx,r15
   140009248:	call   0x140008584
   14000924d:	mov    rcx,r14
   140009250:	call   0x140008584
   140009255:	mov    ebx,esi
   140009257:	mov    rcx,r12
   14000925a:	call   0x140008584
   14000925f:	mov    eax,ebx
   140009261:	jmp    0x1400092b7
   140009263:	mov    rax,QWORD PTR [rcx+0x130]
   14000926a:	test   rax,rax
   14000926d:	je     0x140009272
   14000926f:	lock dec DWORD PTR [rax]
   140009272:	lea    rax,[rip+0xf827]        # 0x140018aa0
   140009279:	mov    esi,0x1
   14000927e:	mov    QWORD PTR [rcx+0x130],rbx
   140009285:	mov    QWORD PTR [rcx+0x140],rax
   14000928c:	lea    rax,[rip+0xfc9d]        # 0x140018f30
   140009293:	mov    QWORD PTR [rcx+0x138],rbx
   14000929a:	mov    QWORD PTR [rcx+0x148],rax
   1400092a1:	lea    rax,[rip+0xfe08]        # 0x1400190b0
   1400092a8:	mov    DWORD PTR [rcx+0x10c],esi
   1400092ae:	mov    QWORD PTR [rcx+0x150],rax
   1400092b5:	xor    eax,eax
   1400092b7:	mov    rcx,QWORD PTR [rsp+0x88]
   1400092bf:	xor    rcx,rsp
   1400092c2:	call   0x140007d20
   1400092c7:	lea    r11,[rsp+0x90]
   1400092cf:	mov    rbx,QWORD PTR [r11+0x38]
   1400092d3:	mov    rbp,QWORD PTR [r11+0x40]
   1400092d7:	mov    rsi,QWORD PTR [r11+0x48]
   1400092db:	mov    rsp,r11
   1400092de:	pop    r15
   1400092e0:	pop    r14
   1400092e2:	pop    r13
   1400092e4:	pop    r12
   1400092e6:	pop    rdi
   1400092e7:	ret    
   1400092e8:	sub    rsp,0x28
   1400092ec:	call   0x14000d728
   1400092f1:	mov    rcx,QWORD PTR [rax+0xc0]
   1400092f8:	cmp    rcx,QWORD PTR [rip+0x18aa1]        # 0x140021da0
   1400092ff:	je     0x140009317
   140009301:	mov    eax,DWORD PTR [rax+0xc8]
   140009307:	test   DWORD PTR [rip+0x18663],eax        # 0x140021970
   14000930d:	jne    0x140009317
   14000930f:	call   0x14000d540
   140009314:	mov    rcx,rax
   140009317:	mov    eax,DWORD PTR [rcx+0x10c]
   14000931d:	add    rsp,0x28
   140009321:	ret    
   140009322:	int3   
   140009323:	int3   
   140009324:	test   rcx,rcx
   140009327:	jne    0x14000932e
   140009329:	jmp    0x1400092e8
   14000932e:	mov    rax,QWORD PTR [rcx]
   140009331:	mov    eax,DWORD PTR [rax+0x10c]
   140009337:	ret    
   140009338:	sub    rsp,0x28
   14000933c:	call   0x14000d728
   140009341:	mov    rcx,QWORD PTR [rax+0xc0]
   140009348:	cmp    rcx,QWORD PTR [rip+0x18a51]        # 0x140021da0
   14000934f:	je     0x140009367
   140009351:	mov    eax,DWORD PTR [rax+0xc8]
   140009357:	test   DWORD PTR [rip+0x18613],eax        # 0x140021970
   14000935d:	jne    0x140009367
   14000935f:	call   0x14000d540
   140009364:	mov    rcx,rax
   140009367:	mov    eax,DWORD PTR [rcx+0x4]
   14000936a:	add    rsp,0x28
   14000936e:	ret    
   14000936f:	int3   
   140009370:	sub    rsp,0x28
   140009374:	call   0x14000d728
   140009379:	mov    rcx,QWORD PTR [rax+0xc0]
   140009380:	cmp    rcx,QWORD PTR [rip+0x18a19]        # 0x140021da0
   140009387:	je     0x14000939f
   140009389:	mov    eax,DWORD PTR [rax+0xc8]
   14000938f:	test   DWORD PTR [rip+0x185db],eax        # 0x140021970
   140009395:	jne    0x14000939f
   140009397:	call   0x14000d540
   14000939c:	mov    rcx,rax
   14000939f:	lea    rax,[rcx+0xc]
   1400093a3:	add    rsp,0x28
   1400093a7:	ret    
   1400093a8:	sub    rsp,0x28
   1400093ac:	mov    rcx,QWORD PTR [rip+0x1ab0d]        # 0x140023ec0
   1400093b3:	call   QWORD PTR [rip+0xed07]        # 0x1400180c0
   1400093b9:	test   rax,rax
   1400093bc:	je     0x1400093c0
   1400093be:	call   rax
   1400093c0:	mov    ecx,0x19
   1400093c5:	call   0x140010030
   1400093ca:	mov    edx,0x1
   1400093cf:	xor    ecx,ecx
   1400093d1:	call   0x14000c88c
   1400093d6:	add    rsp,0x28
   1400093da:	jmp    0x14000c84c
   1400093df:	int3   
   1400093e0:	int3   
   1400093e1:	int3   
   1400093e2:	int3   
   1400093e3:	int3   
   1400093e4:	int3   
   1400093e5:	int3   
   1400093e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400093f0:	mov    rax,rcx
   1400093f3:	neg    rcx
   1400093f6:	test   rax,0x7
   1400093fc:	je     0x14000940d
   1400093fe:	xchg   ax,ax
   140009400:	mov    dl,BYTE PTR [rax]
   140009402:	inc    rax
   140009405:	test   dl,dl
   140009407:	je     0x140009468
   140009409:	test   al,0x7
   14000940b:	jne    0x140009400
   14000940d:	movabs r8,0x7efefefefefefeff
   140009417:	movabs r11,0x8101010101010100
   140009421:	mov    rdx,QWORD PTR [rax]
   140009424:	mov    r9,r8
   140009427:	add    rax,0x8
   14000942b:	add    r9,rdx
   14000942e:	not    rdx
   140009431:	xor    rdx,r9
   140009434:	and    rdx,r11
   140009437:	je     0x140009421
   140009439:	mov    rdx,QWORD PTR [rax-0x8]
   14000943d:	test   dl,dl
   14000943f:	je     0x140009492
   140009441:	test   dh,dh
   140009443:	je     0x14000948c
   140009445:	shr    rdx,0x10
   140009449:	test   dl,dl
   14000944b:	je     0x140009486
   14000944d:	test   dh,dh
   14000944f:	je     0x140009480
   140009451:	shr    rdx,0x10
   140009455:	test   dl,dl
   140009457:	je     0x14000947a
   140009459:	test   dh,dh
   14000945b:	je     0x140009474
   14000945d:	shr    edx,0x10
   140009460:	test   dl,dl
   140009462:	je     0x14000946e
   140009464:	test   dh,dh
   140009466:	jne    0x140009421
   140009468:	lea    rax,[rcx+rax*1-0x1]
   14000946d:	ret    
   14000946e:	lea    rax,[rcx+rax*1-0x2]
   140009473:	ret    
   140009474:	lea    rax,[rcx+rax*1-0x3]
   140009479:	ret    
   14000947a:	lea    rax,[rcx+rax*1-0x4]
   14000947f:	ret    
   140009480:	lea    rax,[rcx+rax*1-0x5]
   140009485:	ret    
   140009486:	lea    rax,[rcx+rax*1-0x6]
   14000948b:	ret    
   14000948c:	lea    rax,[rcx+rax*1-0x7]
   140009491:	ret    
   140009492:	lea    rax,[rcx+rax*1-0x8]
   140009497:	ret    
   140009498:	mov    QWORD PTR [rsp+0x10],rbx
   14000949d:	mov    QWORD PTR [rsp+0x18],rdi
   1400094a2:	push   rbp
   1400094a3:	mov    rbp,rsp
   1400094a6:	sub    rsp,0x60
   1400094aa:	mov    rdi,rdx
   1400094ad:	mov    rbx,rcx
   1400094b0:	lea    rcx,[rbp-0x40]
   1400094b4:	lea    rdx,[rip+0xf215]        # 0x1400186d0
   1400094bb:	mov    r8d,0x40
   1400094c1:	call   0x140008250
   1400094c6:	lea    rdx,[rbp+0x10]
   1400094ca:	mov    rcx,rdi
   1400094cd:	mov    QWORD PTR [rbp-0x18],rbx
   1400094d1:	mov    QWORD PTR [rbp-0x10],rdi
   1400094d5:	call   0x140016e68
   1400094da:	mov    r11,rax
   1400094dd:	mov    QWORD PTR [rbp+0x10],rax
   1400094e1:	mov    QWORD PTR [rbp-0x8],rax
   1400094e5:	test   rdi,rdi
   1400094e8:	je     0x140009505
   1400094ea:	test   BYTE PTR [rdi],0x8
   1400094ed:	mov    ecx,0x1994000
   1400094f2:	je     0x1400094f9
   1400094f4:	mov    DWORD PTR [rbp-0x20],ecx
   1400094f7:	jmp    0x140009505
   1400094f9:	mov    eax,DWORD PTR [rbp-0x20]
   1400094fc:	test   r11,r11
   1400094ff:	cmove  eax,ecx
   140009502:	mov    DWORD PTR [rbp-0x20],eax
   140009505:	mov    r8d,DWORD PTR [rbp-0x28]
   140009509:	mov    edx,DWORD PTR [rbp-0x3c]
   14000950c:	mov    ecx,DWORD PTR [rbp-0x40]
   14000950f:	lea    r9,[rbp-0x20]
   140009513:	call   QWORD PTR [rip+0xebf7]        # 0x140018110
   140009519:	lea    r11,[rsp+0x60]
   14000951e:	mov    rbx,QWORD PTR [r11+0x18]
   140009522:	mov    rdi,QWORD PTR [r11+0x20]
   140009526:	mov    rsp,r11
   140009529:	pop    rbp
   14000952a:	ret    
   14000952b:	int3   
   14000952c:	mov    QWORD PTR [rsp+0x10],rbx
   140009531:	mov    QWORD PTR [rsp+0x18],rbp
   140009536:	mov    QWORD PTR [rsp+0x20],rsi
   14000953b:	push   rdi
   14000953c:	push   r12
   14000953e:	push   r13
   140009540:	push   r14
   140009542:	push   r15
   140009544:	sub    rsp,0x20
   140009548:	movsxd rdi,DWORD PTR [r8+0xc]
   14000954c:	mov    r15,rcx
   14000954f:	mov    rcx,r8
   140009552:	mov    rbp,r9
   140009555:	mov    r13,r8
   140009558:	mov    r14,rdx
   14000955b:	call   0x14001118c
   140009560:	mov    r10,QWORD PTR [r15]
   140009563:	mov    QWORD PTR [rbp+0x0],r10
   140009567:	mov    r12d,eax
   14000956a:	test   edi,edi
   14000956c:	je     0x1400095f6
   140009572:	lea    rcx,[rdi+rdi*4]
   140009576:	lea    rsi,[rcx*4-0x14]
   14000957e:	movsxd rbx,DWORD PTR [r13+0x10]
   140009582:	add    rbx,QWORD PTR [r14+0x8]
   140009586:	add    rbx,rsi
   140009589:	cmp    r12d,DWORD PTR [rbx+0x4]
   14000958d:	jle    0x1400095d8
   14000958f:	cmp    r12d,DWORD PTR [rbx+0x8]
   140009593:	jg     0x1400095d8
   140009595:	mov    rcx,QWORD PTR [r14]
   140009598:	lea    rdx,[rsp+0x50]
   14000959d:	xor    r8d,r8d
   1400095a0:	call   0x140016e6e
   1400095a5:	movsxd r8,DWORD PTR [rbx+0x10]
   1400095a9:	mov    r9d,DWORD PTR [rbx+0xc]
   1400095ad:	add    r8,QWORD PTR [rsp+0x50]
   1400095b2:	mov    r10d,DWORD PTR [rax]
   1400095b5:	xor    ecx,ecx
   1400095b7:	test   r9d,r9d
   1400095ba:	je     0x1400095d3
   1400095bc:	lea    rdx,[r8+0xc]
   1400095c0:	movsxd rax,DWORD PTR [rdx]
   1400095c3:	cmp    rax,r10
   1400095c6:	je     0x1400095d3
   1400095c8:	inc    ecx
   1400095ca:	add    rdx,0x14
   1400095ce:	cmp    ecx,r9d
   1400095d1:	jb     0x1400095c0
   1400095d3:	cmp    ecx,r9d
   1400095d6:	jb     0x1400095e2
   1400095d8:	sub    rsi,0x14
   1400095dc:	dec    edi
   1400095de:	je     0x1400095f6
   1400095e0:	jmp    0x14000957e
   1400095e2:	mov    rax,QWORD PTR [r15]
   1400095e5:	lea    rcx,[rcx+rcx*4]
   1400095e9:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400095ee:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400095f2:	mov    QWORD PTR [rbp+0x0],rcx
   1400095f6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400095fb:	mov    rsi,QWORD PTR [rsp+0x68]
   140009600:	mov    rax,rbp
   140009603:	mov    rbp,QWORD PTR [rsp+0x60]
   140009608:	add    rsp,0x20
   14000960c:	pop    r15
   14000960e:	pop    r14
   140009610:	pop    r13
   140009612:	pop    r12
   140009614:	pop    rdi
   140009615:	ret    
   140009616:	int3   
   140009617:	int3   
   140009618:	sub    rsp,0x28
   14000961c:	call   0x14000d728
   140009621:	mov    rax,QWORD PTR [rax+0x128]
   140009628:	add    rsp,0x28
   14000962c:	ret    
   14000962d:	int3   
   14000962e:	int3   
   14000962f:	int3   
   140009630:	sub    rsp,0x28
   140009634:	call   0x14000d728
   140009639:	mov    rax,QWORD PTR [rax+0x130]
   140009640:	add    rsp,0x28
   140009644:	ret    
   140009645:	int3   
   140009646:	int3   
   140009647:	int3   
   140009648:	rex push rbx
   14000964a:	sub    rsp,0x20
   14000964e:	mov    rbx,rcx
   140009651:	call   0x14000d728
   140009656:	mov    QWORD PTR [rax+0x128],rbx
   14000965d:	add    rsp,0x20
   140009661:	pop    rbx
   140009662:	ret    
   140009663:	int3   
   140009664:	rex push rbx
   140009666:	sub    rsp,0x20
   14000966a:	mov    rbx,rcx
   14000966d:	call   0x14000d728
   140009672:	mov    QWORD PTR [rax+0x130],rbx
   140009679:	add    rsp,0x20
   14000967d:	pop    rbx
   14000967e:	ret    
   14000967f:	int3   
   140009680:	mov    rax,rsp
   140009683:	mov    QWORD PTR [rax+0x8],rbx
   140009687:	mov    QWORD PTR [rax+0x10],rbp
   14000968b:	mov    QWORD PTR [rax+0x20],rsi
   14000968f:	push   rdi
   140009690:	push   r12
   140009692:	push   r13
   140009694:	sub    rsp,0x20
   140009698:	lea    r9,[rax+0x18]
   14000969c:	mov    rbp,r8
   14000969f:	mov    r12,rdx
   1400096a2:	call   0x14000952c
   1400096a7:	mov    rdx,r12
   1400096aa:	mov    rcx,rbp
   1400096ad:	mov    r13,rax
   1400096b0:	call   0x14001118c
   1400096b5:	movsxd rdi,DWORD PTR [rbp+0xc]
   1400096b9:	mov    esi,eax
   1400096bb:	test   edi,edi
   1400096bd:	je     0x1400096f3
   1400096bf:	lea    rcx,[rdi+rdi*4]
   1400096c3:	lea    rbx,[rcx*4-0x14]
   1400096cb:	call   0x14000d728
   1400096d0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400096d4:	mov    rdx,QWORD PTR [rax+0x128]
   1400096db:	add    rdx,rcx
   1400096de:	add    rdx,rbx
   1400096e1:	cmp    esi,DWORD PTR [rdx+0x4]
   1400096e4:	jle    0x1400096eb
   1400096e6:	cmp    esi,DWORD PTR [rdx+0x8]
   1400096e9:	jle    0x1400096f5
   1400096eb:	sub    rbx,0x14
   1400096ef:	dec    edi
   1400096f1:	jne    0x1400096cb
   1400096f3:	xor    edx,edx
   1400096f5:	test   rdx,rdx
   1400096f8:	jne    0x140009700
   1400096fa:	or     r9d,0xffffffff
   1400096fe:	jmp    0x140009704
   140009700:	mov    r9d,DWORD PTR [rdx+0x4]
   140009704:	mov    r8,rbp
   140009707:	mov    rdx,r12
   14000970a:	mov    rcx,r13
   14000970d:	call   0x14000ae50
   140009712:	mov    rbx,QWORD PTR [rsp+0x40]
   140009717:	mov    rbp,QWORD PTR [rsp+0x48]
   14000971c:	mov    rsi,QWORD PTR [rsp+0x58]
   140009721:	add    rsp,0x20
   140009725:	pop    r13
   140009727:	pop    r12
   140009729:	pop    rdi
   14000972a:	ret    
   14000972b:	int3   
   14000972c:	mov    QWORD PTR [rsp+0x10],rbx
   140009731:	mov    QWORD PTR [rsp+0x18],rsi
   140009736:	push   rdi
   140009737:	sub    rsp,0x40
   14000973b:	mov    rbx,r9
   14000973e:	mov    rdi,r8
   140009741:	mov    rsi,rcx
   140009744:	mov    QWORD PTR [rsp+0x50],rdx
   140009749:	call   0x14000d728
   14000974e:	mov    rdx,QWORD PTR [rbx+0x8]
   140009752:	mov    QWORD PTR [rax+0x128],rdx
   140009759:	call   0x14000d728
   14000975e:	mov    rdx,QWORD PTR [rsi+0x38]
   140009762:	mov    QWORD PTR [rax+0x130],rdx
   140009769:	call   0x14000d728
   14000976e:	mov    rdx,QWORD PTR [rbx+0x38]
   140009772:	mov    r8d,DWORD PTR [rdx]
   140009775:	lea    rdx,[rsp+0x50]
   14000977a:	mov    r9,rbx
   14000977d:	add    r8,QWORD PTR [rax+0x128]
   140009784:	xor    eax,eax
   140009786:	mov    rcx,rsi
   140009789:	mov    DWORD PTR [rsp+0x38],eax
   14000978d:	mov    QWORD PTR [rsp+0x30],rax
   140009792:	mov    DWORD PTR [rsp+0x28],eax
   140009796:	mov    QWORD PTR [rsp+0x20],r8
   14000979b:	mov    r8,rdi
   14000979e:	call   0x14000bdec
   1400097a3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400097a8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400097ad:	add    rsp,0x40
   1400097b1:	pop    rdi
   1400097b2:	ret    
   1400097b3:	int3   
   1400097b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400097b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400097be:	mov    QWORD PTR [rsp+0x18],rsi
   1400097c3:	push   rdi
   1400097c4:	sub    rsp,0x40
   1400097c8:	mov    rsi,r9
   1400097cb:	mov    rbp,r8
   1400097ce:	mov    rbx,rdx
   1400097d1:	mov    rdi,rcx
   1400097d4:	call   0x14000d728
   1400097d9:	mov    QWORD PTR [rax+0x138],rbx
   1400097e0:	mov    rbx,QWORD PTR [rdi]
   1400097e3:	call   0x14000d728
   1400097e8:	mov    rdx,QWORD PTR [rbx+0x38]
   1400097ec:	mov    rcx,QWORD PTR [rsp+0x78]
   1400097f1:	mov    r9,QWORD PTR [rsp+0x70]
   1400097f6:	mov    DWORD PTR [rsp+0x38],0x1
   1400097fe:	mov    QWORD PTR [rax+0x130],rdx
   140009805:	xor    ebx,ebx
   140009807:	mov    QWORD PTR [rsp+0x30],rbx
   14000980c:	mov    DWORD PTR [rsp+0x28],ebx
   140009810:	mov    QWORD PTR [rsp+0x20],rcx
   140009815:	mov    rcx,QWORD PTR [rdi]
   140009818:	mov    r8,rsi
   14000981b:	mov    rdx,rbp
   14000981e:	call   0x14000bdec
   140009823:	call   0x14000d728
   140009828:	mov    rcx,QWORD PTR [rsp+0x80]
   140009830:	mov    rbp,QWORD PTR [rsp+0x58]
   140009835:	mov    rsi,QWORD PTR [rsp+0x60]
   14000983a:	mov    QWORD PTR [rax+0x138],rbx
   140009841:	lea    eax,[rbx+0x1]
   140009844:	mov    rbx,QWORD PTR [rsp+0x50]
   140009849:	mov    DWORD PTR [rcx],0x1
   14000984f:	add    rsp,0x40
   140009853:	pop    rdi
   140009854:	ret    
   140009855:	int3   
   140009856:	int3   
   140009857:	int3   
   140009858:	mov    rax,rsp
   14000985b:	mov    QWORD PTR [rax+0x20],r9
   14000985f:	mov    QWORD PTR [rax+0x18],r8
   140009863:	mov    QWORD PTR [rax+0x10],rdx
   140009867:	mov    QWORD PTR [rax+0x8],rcx
   14000986b:	push   rbx
   14000986c:	sub    rsp,0x60
   140009870:	mov    rbx,rcx
   140009873:	and    DWORD PTR [rax-0x28],0x0
   140009877:	mov    QWORD PTR [rax-0x20],rcx
   14000987b:	mov    QWORD PTR [rax-0x18],r8
   14000987f:	call   0x14000d728
   140009884:	mov    r8,QWORD PTR [rax+0xe0]
   14000988b:	lea    rdx,[rsp+0x48]
   140009890:	mov    ecx,DWORD PTR [rbx]
   140009892:	call   r8
   140009895:	mov    DWORD PTR [rsp+0x40],0x0
   14000989d:	jmp    0x14000989f
   14000989f:	mov    eax,DWORD PTR [rsp+0x40]
   1400098a3:	add    rsp,0x60
   1400098a7:	pop    rbx
   1400098a8:	ret    
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400098b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400098b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400098bb:	push   rdi
   1400098bc:	push   r12
   1400098be:	push   r13
   1400098c0:	sub    rsp,0x20
   1400098c4:	movsxd rbx,DWORD PTR [rdx+0xc]
   1400098c8:	mov    r12,QWORD PTR [rsp+0x70]
   1400098cd:	mov    rdi,rdx
   1400098d0:	mov    rcx,rdi
   1400098d3:	mov    rdx,r12
   1400098d6:	mov    r13d,r9d
   1400098d9:	xor    ebp,ebp
   1400098db:	call   0x14001118c
   1400098e0:	mov    esi,eax
   1400098e2:	test   ebx,ebx
   1400098e4:	jne    0x1400098eb
   1400098e6:	call   0x140011254
   1400098eb:	mov    r10,QWORD PTR [rsp+0x68]
   1400098f0:	mov    r8,QWORD PTR [rsp+0x60]
   1400098f5:	or     r11d,0xffffffff
   1400098f9:	mov    DWORD PTR [r10],r11d
   1400098fc:	mov    edx,ebx
   1400098fe:	mov    DWORD PTR [r8],r11d
   140009901:	test   ebx,ebx
   140009903:	je     0x14000992f
   140009905:	movsxd rcx,DWORD PTR [rdi+0x10]
   140009909:	lea    rax,[rbx+rbx*4]
   14000990d:	lea    rcx,[rcx+rax*4]
   140009911:	mov    rax,QWORD PTR [r12+0x8]
   140009916:	lea    r9,[rcx+rax*1-0xc]
   14000991b:	cmp    esi,DWORD PTR [r9-0x4]
   14000991f:	jle    0x140009926
   140009921:	cmp    esi,DWORD PTR [r9]
   140009924:	jle    0x14000992f
   140009926:	sub    r9,0x14
   14000992a:	add    edx,r11d
   14000992d:	jne    0x14000991b
   14000992f:	test   edx,edx
   140009931:	je     0x140009947
   140009933:	lea    eax,[rdx-0x1]
   140009936:	lea    rdx,[rax+rax*4]
   14000993a:	movsxd rax,DWORD PTR [rdi+0x10]
   14000993e:	lea    rbp,[rax+rdx*4]
   140009942:	add    rbp,QWORD PTR [r12+0x8]
   140009947:	xor    edx,edx
   140009949:	test   ebx,ebx
   14000994b:	je     0x1400099b2
   14000994d:	xor    r9d,r9d
   140009950:	movsxd rcx,DWORD PTR [rdi+0x10]
   140009954:	add    rcx,QWORD PTR [r12+0x8]
   140009959:	add    rcx,r9
   14000995c:	test   rbp,rbp
   14000995f:	je     0x140009970
   140009961:	mov    eax,DWORD PTR [rbp+0x4]
   140009964:	cmp    DWORD PTR [rcx],eax
   140009966:	jle    0x14000998d
   140009968:	mov    eax,DWORD PTR [rbp+0x8]
   14000996b:	cmp    DWORD PTR [rcx+0x4],eax
   14000996e:	jg     0x14000998d
   140009970:	cmp    r13d,DWORD PTR [rcx]
   140009973:	jl     0x14000998d
   140009975:	cmp    r13d,DWORD PTR [rcx+0x4]
   140009979:	jg     0x14000998d
   14000997b:	mov    eax,DWORD PTR [r8]
   14000997e:	cmp    eax,r11d
   140009981:	cmove  eax,edx
   140009984:	mov    DWORD PTR [r8],eax
   140009987:	lea    eax,[rdx+0x1]
   14000998a:	mov    DWORD PTR [r10],eax
   14000998d:	inc    edx
   14000998f:	add    r9,0x14
   140009993:	cmp    edx,ebx
   140009995:	jb     0x140009950
   140009997:	cmp    DWORD PTR [r8],r11d
   14000999a:	je     0x1400099b2
   14000999c:	mov    eax,DWORD PTR [r8]
   14000999f:	lea    rcx,[rax+rax*4]
   1400099a3:	movsxd rax,DWORD PTR [rdi+0x10]
   1400099a7:	lea    rax,[rax+rcx*4]
   1400099ab:	add    rax,QWORD PTR [r12+0x8]
   1400099b0:	jmp    0x1400099bc
   1400099b2:	and    DWORD PTR [r8],0x0
   1400099b6:	and    DWORD PTR [r10],0x0
   1400099ba:	xor    eax,eax
   1400099bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400099c1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400099c6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400099cb:	add    rsp,0x20
   1400099cf:	pop    r13
   1400099d1:	pop    r12
   1400099d3:	pop    rdi
   1400099d4:	ret    
   1400099d5:	int3   
   1400099d6:	int3   
   1400099d7:	int3   
   1400099d8:	rex push rbx
   1400099da:	sub    rsp,0x20
   1400099de:	mov    rbx,rcx
   1400099e1:	mov    QWORD PTR [rcx],rdx
   1400099e4:	call   0x14000d728
   1400099e9:	cmp    rbx,QWORD PTR [rax+0x120]
   1400099f0:	jae    0x140009a00
   1400099f2:	call   0x14000d728
   1400099f7:	mov    rcx,QWORD PTR [rax+0x120]
   1400099fe:	jmp    0x140009a02
   140009a00:	xor    ecx,ecx
   140009a02:	mov    QWORD PTR [rbx+0x8],rcx
   140009a06:	call   0x14000d728
   140009a0b:	mov    QWORD PTR [rax+0x120],rbx
   140009a12:	mov    rax,rbx
   140009a15:	add    rsp,0x20
   140009a19:	pop    rbx
   140009a1a:	ret    
   140009a1b:	int3   
   140009a1c:	rex push rbx
   140009a1e:	sub    rsp,0x20
   140009a22:	mov    rbx,rcx
   140009a25:	call   0x14000d728
   140009a2a:	mov    rdx,QWORD PTR [rax+0x120]
   140009a31:	jmp    0x140009a3c
   140009a33:	cmp    QWORD PTR [rdx],rbx
   140009a36:	je     0x140009a4a
   140009a38:	mov    rdx,QWORD PTR [rdx+0x8]
   140009a3c:	test   rdx,rdx
   140009a3f:	jne    0x140009a33
   140009a41:	lea    eax,[rdx+0x1]
   140009a44:	add    rsp,0x20
   140009a48:	pop    rbx
   140009a49:	ret    
   140009a4a:	xor    eax,eax
   140009a4c:	jmp    0x140009a44
   140009a4e:	int3   
   140009a4f:	int3   
   140009a50:	mov    QWORD PTR [rsp+0x8],rbx
   140009a55:	push   rdi
   140009a56:	sub    rsp,0x20
   140009a5a:	mov    rdi,rcx
   140009a5d:	call   0x14000d728
   140009a62:	cmp    rdi,QWORD PTR [rax+0x120]
   140009a69:	je     0x140009a70
   140009a6b:	call   0x140011254
   140009a70:	call   0x14000d728
   140009a75:	mov    rbx,QWORD PTR [rax+0x120]
   140009a7c:	jmp    0x140009a87
   140009a7e:	cmp    rdi,rbx
   140009a81:	je     0x140009a9c
   140009a83:	mov    rbx,QWORD PTR [rbx+0x8]
   140009a87:	test   rbx,rbx
   140009a8a:	jne    0x140009a7e
   140009a8c:	call   0x140011254
   140009a91:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a96:	add    rsp,0x20
   140009a9a:	pop    rdi
   140009a9b:	ret    
   140009a9c:	call   0x14000d728
   140009aa1:	mov    rcx,QWORD PTR [rbx+0x8]
   140009aa5:	mov    QWORD PTR [rax+0x120],rcx
   140009aac:	jmp    0x140009a91
   140009aae:	int3   
   140009aaf:	int3   
   140009ab0:	rex push rbp
   140009ab2:	push   rbx
   140009ab3:	push   rsi
   140009ab4:	push   rdi
   140009ab5:	push   r12
   140009ab7:	push   r13
   140009ab9:	push   r14
   140009abb:	push   r15
   140009abd:	lea    rbp,[rsp-0x4b8]
   140009ac5:	sub    rsp,0x5b8
   140009acc:	mov    rax,QWORD PTR [rip+0x1793d]        # 0x140021410
   140009ad3:	xor    rax,rsp
   140009ad6:	mov    QWORD PTR [rbp+0x4a0],rax
   140009add:	mov    rbx,QWORD PTR [rbp+0x520]
   140009ae4:	mov    rdi,QWORD PTR [rbp+0x530]
   140009aeb:	mov    r14,QWORD PTR [rbp+0x538]
   140009af2:	mov    r13,rdx
   140009af5:	mov    r15,rcx
   140009af8:	mov    r12,r8
   140009afb:	lea    rcx,[rsp+0x30]
   140009b00:	lea    rdx,[rip+0xec09]        # 0x140018710
   140009b07:	mov    r8d,0x98
   140009b0d:	mov    rsi,r9
   140009b10:	call   0x140008250
   140009b15:	movsxd rax,DWORD PTR [rbp+0x528]
   140009b1c:	mov    rdx,QWORD PTR [r14]
   140009b1f:	mov    rcx,QWORD PTR [r15]
   140009b22:	mov    QWORD PTR [rsp+0x68],rax
   140009b27:	movzx  eax,BYTE PTR [rbp+0x540]
   140009b2e:	lea    r11,[rip+0x15ff]        # 0x14000b134
   140009b35:	lea    r8,[rsp+0x30]
   140009b3a:	mov    QWORD PTR [rbp-0x78],rax
   140009b3e:	mov    rax,QWORD PTR [r14+0x40]
   140009b42:	xor    r9d,r9d
   140009b45:	mov    QWORD PTR [rsp+0x28],rax
   140009b4a:	lea    rax,[rbp-0x30]
   140009b4e:	mov    QWORD PTR [rsp+0x50],r11
   140009b53:	mov    QWORD PTR [rsp+0x58],rsi
   140009b58:	mov    QWORD PTR [rsp+0x60],rbx
   140009b5d:	mov    QWORD PTR [rsp+0x70],r12
   140009b62:	mov    QWORD PTR [rsp+0x20],rax
   140009b67:	mov    QWORD PTR [rsp+0x78],rdi
   140009b6c:	mov    QWORD PTR [rbp-0x80],r13
   140009b70:	mov    QWORD PTR [rbp-0x70],0x19930520
   140009b78:	call   0x140016e74
   140009b7d:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140009b84:	xor    rcx,rsp
   140009b87:	call   0x140007d20
   140009b8c:	add    rsp,0x5b8
   140009b93:	pop    r15
   140009b95:	pop    r14
   140009b97:	pop    r13
   140009b99:	pop    r12
   140009b9b:	pop    rdi
   140009b9c:	pop    rsi
   140009b9d:	pop    rbx
   140009b9e:	pop    rbp
   140009b9f:	ret    
   140009ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140009ba5:	push   rdi
   140009ba6:	sub    rsp,0x30
   140009baa:	mov    edi,ecx
   140009bac:	call   0x14000d6a4
   140009bb1:	mov    rbx,rax
   140009bb4:	test   rax,rax
   140009bb7:	jne    0x140009bcb
   140009bb9:	lea    rax,[rip+0xebf0]        # 0x1400187b0
   140009bc0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009bc5:	add    rsp,0x30
   140009bc9:	pop    rdi
   140009bca:	ret    
   140009bcb:	cmp    QWORD PTR [rax+0x38],0x0
   140009bd0:	jne    0x140009bea
   140009bd2:	mov    edx,0x1
   140009bd7:	mov    ecx,0x86
   140009bdc:	call   0x14000c3a0
   140009be1:	mov    QWORD PTR [rbx+0x38],rax
   140009be5:	test   rax,rax
   140009be8:	je     0x140009bb9
   140009bea:	mov    rbx,QWORD PTR [rbx+0x38]
   140009bee:	test   edi,edi
   140009bf0:	js     0x140009bfb
   140009bf2:	call   0x14001129c
   140009bf7:	cmp    edi,DWORD PTR [rax]
   140009bf9:	jl     0x140009c02
   140009bfb:	call   0x14001129c
   140009c00:	mov    edi,DWORD PTR [rax]
   140009c02:	call   0x1400112a4
   140009c07:	movsxd rcx,edi
   140009c0a:	mov    edx,0x86
   140009c0f:	mov    r8,QWORD PTR [rax+rcx*8]
   140009c13:	mov    rcx,rbx
   140009c16:	call   0x14000db84
   140009c1b:	test   eax,eax
   140009c1d:	jne    0x140009c24
   140009c1f:	mov    rax,rbx
   140009c22:	jmp    0x140009bc0
   140009c24:	and    QWORD PTR [rsp+0x20],0x0
   140009c2a:	xor    r9d,r9d
   140009c2d:	xor    r8d,r8d
   140009c30:	xor    edx,edx
   140009c32:	xor    ecx,ecx
   140009c34:	call   0x14000da58
   140009c39:	int3   
   140009c3a:	int3   
   140009c3b:	int3   
   140009c3c:	test   rcx,rcx
   140009c3f:	je     0x140009ce1
   140009c45:	push   rbx
   140009c46:	sub    rsp,0x20
   140009c4a:	mov    rbx,rcx
   140009c4d:	mov    ecx,0xd
   140009c52:	call   0x140012e0c
   140009c57:	nop
   140009c58:	mov    rcx,QWORD PTR [rbx+0x8]
   140009c5c:	test   rcx,rcx
   140009c5f:	je     0x140009c7c
   140009c61:	lock dec DWORD PTR [rcx]
   140009c64:	jne    0x140009c7c
   140009c66:	mov    rcx,QWORD PTR [rbx+0x8]
   140009c6a:	lea    rax,[rip+0x177cf]        # 0x140021440
   140009c71:	cmp    rcx,rax
   140009c74:	je     0x140009c7c
   140009c76:	call   0x140008584
   140009c7b:	nop
   140009c7c:	mov    ecx,0xd
   140009c81:	call   0x140012d0c
   140009c86:	cmp    QWORD PTR [rbx],0x0
   140009c8a:	je     0x140009cc8
   140009c8c:	mov    ecx,0xc
   140009c91:	call   0x140012e0c
   140009c96:	nop
   140009c97:	mov    rcx,QWORD PTR [rbx]
   140009c9a:	call   0x14000d2c8
   140009c9f:	mov    rcx,QWORD PTR [rbx]
   140009ca2:	test   rcx,rcx
   140009ca5:	je     0x140009cbe
   140009ca7:	cmp    DWORD PTR [rcx],0x0
   140009caa:	jne    0x140009cbe
   140009cac:	lea    rax,[rip+0x17f8d]        # 0x140021c40
   140009cb3:	cmp    rcx,rax
   140009cb6:	je     0x140009cbe
   140009cb8:	call   0x14000d36c
   140009cbd:	nop
   140009cbe:	mov    ecx,0xc
   140009cc3:	call   0x140012d0c
   140009cc8:	mov    eax,0xbaadf00d
   140009ccd:	mov    QWORD PTR [rbx],rax
   140009cd0:	mov    QWORD PTR [rbx+0x8],rax
   140009cd4:	mov    rcx,rbx
   140009cd7:	call   0x140008584
   140009cdc:	add    rsp,0x20
   140009ce0:	pop    rbx
   140009ce1:	ret    
   140009ce2:	int3   
   140009ce3:	int3   
   140009ce4:	test   r8d,r8d
   140009ce7:	jle    0x140009d32
   140009ce9:	mov    DWORD PTR [rsp+0x18],r8d
   140009cee:	mov    QWORD PTR [rsp+0x20],r9
   140009cf3:	push   rbx
   140009cf4:	push   rbp
   140009cf5:	push   rsi
   140009cf6:	push   rdi
   140009cf7:	sub    rsp,0x38
   140009cfb:	lea    rdi,[rsp+0x78]
   140009d00:	xor    ebx,ebx
   140009d02:	mov    rsi,rdx
   140009d05:	add    rdi,0xfffffffffffffff8
   140009d09:	mov    rbp,rcx
   140009d0c:	add    rdi,0x8
   140009d10:	mov    rdx,rsi
   140009d13:	mov    rcx,rbp
   140009d16:	mov    r8,QWORD PTR [rdi]
   140009d19:	call   0x140012e50
   140009d1e:	test   eax,eax
   140009d20:	jne    0x140009d33
   140009d22:	inc    ebx
   140009d24:	cmp    ebx,DWORD PTR [rsp+0x70]
   140009d28:	jl     0x140009d0c
   140009d2a:	add    rsp,0x38
   140009d2e:	pop    rdi
   140009d2f:	pop    rsi
   140009d30:	pop    rbp
   140009d31:	pop    rbx
   140009d32:	ret    
   140009d33:	and    QWORD PTR [rsp+0x20],0x0
   140009d39:	xor    r9d,r9d
   140009d3c:	xor    r8d,r8d
   140009d3f:	xor    edx,edx
   140009d41:	xor    ecx,ecx
   140009d43:	call   0x14000da58
   140009d48:	int3   
   140009d49:	int3   
   140009d4a:	int3   
   140009d4b:	int3   
   140009d4c:	mov    rax,rsp
   140009d4f:	mov    QWORD PTR [rax+0x8],rbx
   140009d53:	mov    QWORD PTR [rax+0x10],rbp
   140009d57:	mov    QWORD PTR [rax+0x18],rsi
   140009d5b:	mov    QWORD PTR [rax+0x20],rdi
   140009d5f:	push   r12
   140009d61:	sub    rsp,0x30
   140009d65:	mov    rbx,rdx
   140009d68:	mov    r8d,0x90
   140009d6e:	xor    edx,edx
   140009d70:	mov    rsi,rcx
   140009d73:	call   0x14000f080
   140009d78:	cmp    BYTE PTR [rbx],0x0
   140009d7b:	jne    0x140009d84
   140009d7d:	xor    eax,eax
   140009d7f:	jmp    0x140009ee1
   140009d84:	cmp    BYTE PTR [rbx],0x2e
   140009d87:	jne    0x140009dca
   140009d89:	lea    r8,[rbx+0x1]
   140009d8d:	cmp    BYTE PTR [r8],0x0
   140009d91:	je     0x140009dca
   140009d93:	mov    edx,0x10
   140009d98:	lea    rcx,[rsi+0x80]
   140009d9f:	lea    r9d,[rdx-0x1]
   140009da3:	call   0x1400112ac
   140009da8:	test   eax,eax
   140009daa:	jne    0x140009db4
   140009dac:	mov    BYTE PTR [rsi+0x8f],al
   140009db2:	jmp    0x140009d7d
   140009db4:	and    QWORD PTR [rsp+0x20],0x0
   140009dba:	xor    r9d,r9d
   140009dbd:	xor    r8d,r8d
   140009dc0:	xor    edx,edx
   140009dc2:	xor    ecx,ecx
   140009dc4:	call   0x14000da58
   140009dc9:	int3   
   140009dca:	xor    ebp,ebp
   140009dcc:	lea    rdx,[rip+0xeb7d]        # 0x140018950
   140009dd3:	mov    rcx,rbx
   140009dd6:	call   0x140012ecc
   140009ddb:	test   rax,rax
   140009dde:	je     0x140009ede
   140009de4:	lea    r12,[rax+rbx*1]
   140009de8:	mov    dil,BYTE PTR [r12]
   140009dec:	test   ebp,ebp
   140009dee:	jne    0x140009e33
   140009df0:	cmp    rax,0x40
   140009df4:	jae    0x140009ede
   140009dfa:	cmp    dil,0x2e
   140009dfe:	je     0x140009ede
   140009e04:	lea    edx,[rbp+0x40]
   140009e07:	mov    r9,rax
   140009e0a:	mov    r8,rbx
   140009e0d:	mov    rcx,rsi
   140009e10:	call   0x1400112ac
   140009e15:	test   eax,eax
   140009e17:	je     0x140009ea9
   140009e1d:	and    QWORD PTR [rsp+0x20],0x0
   140009e23:	xor    r9d,r9d
   140009e26:	xor    r8d,r8d
   140009e29:	xor    edx,edx
   140009e2b:	xor    ecx,ecx
   140009e2d:	call   0x14000da58
   140009e32:	int3   
   140009e33:	cmp    ebp,0x1
   140009e36:	jne    0x140009e78
   140009e38:	cmp    rax,0x40
   140009e3c:	jae    0x140009ede
   140009e42:	cmp    dil,0x5f
   140009e46:	je     0x140009ede
   140009e4c:	lea    rcx,[rsi+0x40]
   140009e50:	lea    edx,[rbp+0x3f]
   140009e53:	mov    r9,rax
   140009e56:	mov    r8,rbx
   140009e59:	call   0x1400112ac
   140009e5e:	test   eax,eax
   140009e60:	je     0x140009ea9
   140009e62:	and    QWORD PTR [rsp+0x20],0x0
   140009e68:	xor    r9d,r9d
   140009e6b:	xor    r8d,r8d
   140009e6e:	xor    edx,edx
   140009e70:	xor    ecx,ecx
   140009e72:	call   0x14000da58
   140009e77:	int3   
   140009e78:	cmp    ebp,0x2
   140009e7b:	jne    0x140009ede
   140009e7d:	cmp    rax,0x10
   140009e81:	jae    0x140009ede
   140009e83:	test   dil,dil
   140009e86:	je     0x140009e8e
   140009e88:	cmp    dil,0x2c
   140009e8c:	jne    0x140009ede
   140009e8e:	lea    rcx,[rsi+0x80]
   140009e95:	mov    r9,rax
   140009e98:	mov    r8,rbx
   140009e9b:	mov    edx,0x10
   140009ea0:	call   0x1400112ac
   140009ea5:	test   eax,eax
   140009ea7:	jne    0x140009ec8
   140009ea9:	cmp    dil,0x2c
   140009ead:	je     0x140009d7d
   140009eb3:	test   dil,dil
   140009eb6:	je     0x140009d7d
   140009ebc:	lea    rbx,[r12+0x1]
   140009ec1:	inc    ebp
   140009ec3:	jmp    0x140009dcc
   140009ec8:	and    QWORD PTR [rsp+0x20],0x0
   140009ece:	xor    r9d,r9d
   140009ed1:	xor    r8d,r8d
   140009ed4:	xor    edx,edx
   140009ed6:	xor    ecx,ecx
   140009ed8:	call   0x14000da58
   140009edd:	int3   
   140009ede:	or     eax,0xffffffff
   140009ee1:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ee6:	mov    rbp,QWORD PTR [rsp+0x48]
   140009eeb:	mov    rsi,QWORD PTR [rsp+0x50]
   140009ef0:	mov    rdi,QWORD PTR [rsp+0x58]
   140009ef5:	add    rsp,0x30
   140009ef9:	pop    r12
   140009efb:	ret    
   140009efc:	mov    QWORD PTR [rsp+0x8],rbx
   140009f01:	mov    QWORD PTR [rsp+0x10],rsi
   140009f06:	push   rdi
   140009f07:	sub    rsp,0x30
   140009f0b:	mov    rbx,r8
   140009f0e:	mov    rdi,rdx
   140009f11:	mov    rsi,rcx
   140009f14:	call   0x14000db84
   140009f19:	test   eax,eax
   140009f1b:	jne    0x140009f7c
   140009f1d:	lea    rax,[rbx+0x40]
   140009f21:	cmp    BYTE PTR [rax],0x0
   140009f24:	je     0x140009f43
   140009f26:	lea    r9,[rip+0xea2b]        # 0x140018958
   140009f2d:	mov    r8d,0x2
   140009f33:	mov    rdx,rdi
   140009f36:	mov    rcx,rsi
   140009f39:	mov    QWORD PTR [rsp+0x20],rax
   140009f3e:	call   0x140009ce4
   140009f43:	lea    rax,[rbx+0x80]
   140009f4a:	cmp    BYTE PTR [rax],0x0
   140009f4d:	je     0x140009f6c
   140009f4f:	lea    r9,[rip+0xe9fe]        # 0x140018954
   140009f56:	mov    r8d,0x2
   140009f5c:	mov    rdx,rdi
   140009f5f:	mov    rcx,rsi
   140009f62:	mov    QWORD PTR [rsp+0x20],rax
   140009f67:	call   0x140009ce4
   140009f6c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009f71:	mov    rsi,QWORD PTR [rsp+0x48]
   140009f76:	add    rsp,0x30
   140009f7a:	pop    rdi
   140009f7b:	ret    
   140009f7c:	and    QWORD PTR [rsp+0x20],0x0
   140009f82:	xor    r9d,r9d
   140009f85:	xor    r8d,r8d
   140009f88:	xor    edx,edx
   140009f8a:	xor    ecx,ecx
   140009f8c:	call   0x14000da58
   140009f91:	int3   
   140009f92:	int3   
   140009f93:	int3   
   140009f94:	mov    QWORD PTR [rsp+0x8],rbx
   140009f99:	mov    QWORD PTR [rsp+0x10],rbp
   140009f9e:	mov    QWORD PTR [rsp+0x18],rsi
   140009fa3:	push   rdi
   140009fa4:	push   r12
   140009fa6:	push   r13
   140009fa8:	push   r14
   140009faa:	push   r15
   140009fac:	sub    rsp,0x30
   140009fb0:	mov    rdi,rcx
   140009fb3:	mov    ecx,0x355
   140009fb8:	mov    r12d,0x1
   140009fbe:	call   0x14000c320
   140009fc3:	xor    r15d,r15d
   140009fc6:	mov    rsi,rax
   140009fc9:	test   rax,rax
   140009fcc:	jne    0x140009feb
   140009fce:	mov    rbx,QWORD PTR [rsp+0x60]
   140009fd3:	mov    rbp,QWORD PTR [rsp+0x68]
   140009fd8:	mov    rsi,QWORD PTR [rsp+0x70]
   140009fdd:	add    rsp,0x30
   140009fe1:	pop    r15
   140009fe3:	pop    r14
   140009fe5:	pop    r13
   140009fe7:	pop    r12
   140009fe9:	pop    rdi
   140009fea:	ret    
   140009feb:	lea    rbp,[rax+0x4]
   140009fef:	mov    ebx,0x351
   140009ff4:	mov    r8d,0x3
   140009ffa:	mov    BYTE PTR [rbp+0x0],r15b
   140009ffe:	mov    DWORD PTR [rax],r12d
   14000a001:	mov    rax,QWORD PTR [rdi+0x68]
   14000a005:	mov    r9,QWORD PTR [rip+0xe84c]        # 0x140018858
   14000a00c:	mov    QWORD PTR [rsp+0x28],rax
   14000a011:	lea    rax,[rip+0xe948]        # 0x140018960
   14000a018:	mov    edx,ebx
   14000a01a:	mov    rcx,rbp
   14000a01d:	mov    QWORD PTR [rsp+0x20],rax
   14000a022:	call   0x140009ce4
   14000a027:	lea    r13,[rip+0xe82a]        # 0x140018858
   14000a02e:	lea    r14,[rdi+0x68]
   14000a032:	lea    r8,[rip+0xe923]        # 0x14001895c
   14000a039:	mov    rdx,rbx
   14000a03c:	mov    rcx,rbp
   14000a03f:	call   0x140012e50
   14000a044:	test   eax,eax
   14000a046:	jne    0x14000a158
   14000a04c:	mov    rcx,QWORD PTR [r14]
   14000a04f:	lea    rbx,[r14+0x20]
   14000a053:	mov    rdx,QWORD PTR [rbx]
   14000a056:	call   0x14000e2c0
   14000a05b:	mov    r14,rbx
   14000a05e:	mov    r8d,0x3
   14000a064:	test   eax,eax
   14000a066:	mov    rax,QWORD PTR [rbx]
   14000a069:	mov    ebx,0x351
   14000a06e:	mov    QWORD PTR [rsp+0x28],rax
   14000a073:	cmovne r12d,r15d
   14000a077:	lea    rax,[rip+0xe8e2]        # 0x140018960
   14000a07e:	add    r13,0x18
   14000a082:	mov    edx,ebx
   14000a084:	mov    rcx,rbp
   14000a087:	mov    r9,QWORD PTR [r13+0x0]
   14000a08b:	mov    QWORD PTR [rsp+0x20],rax
   14000a090:	call   0x140009ce4
   14000a095:	lea    r11,[rip+0xe81c]        # 0x1400188b8
   14000a09c:	cmp    r13,r11
   14000a09f:	jl     0x14000a032
   14000a0a1:	test   r12d,r12d
   14000a0a4:	jne    0x14000a0f9
   14000a0a6:	mov    rcx,QWORD PTR [rdi+0x58]
   14000a0aa:	or     ebx,0xffffffff
   14000a0ad:	test   rcx,rcx
   14000a0b0:	je     0x14000a0c5
   14000a0b2:	mov    eax,ebx
   14000a0b4:	lock xadd DWORD PTR [rcx],eax
   14000a0b8:	add    eax,ebx
   14000a0ba:	jne    0x14000a0c5
   14000a0bc:	mov    rcx,QWORD PTR [rdi+0x58]
   14000a0c0:	call   0x140008584
   14000a0c5:	mov    rax,QWORD PTR [rdi+0x60]
   14000a0c9:	test   rax,rax
   14000a0cc:	je     0x14000a0e1
   14000a0ce:	mov    ecx,ebx
   14000a0d0:	lock xadd DWORD PTR [rax],ecx
   14000a0d4:	add    ecx,ebx
   14000a0d6:	jne    0x14000a0e1
   14000a0d8:	mov    rcx,QWORD PTR [rdi+0x60]
   14000a0dc:	call   0x140008584
   14000a0e1:	mov    QWORD PTR [rdi+0x60],r15
   14000a0e5:	mov    QWORD PTR [rdi+0x50],r15
   14000a0e9:	mov    QWORD PTR [rdi+0x58],rsi
   14000a0ed:	mov    QWORD PTR [rdi+0x48],rbp
   14000a0f1:	mov    rax,rbp
   14000a0f4:	jmp    0x140009fce
   14000a0f9:	mov    rcx,rsi
   14000a0fc:	call   0x140008584
   14000a101:	mov    rcx,QWORD PTR [rdi+0x58]
   14000a105:	or     ebx,0xffffffff
   14000a108:	test   rcx,rcx
   14000a10b:	je     0x14000a120
   14000a10d:	mov    eax,ebx
   14000a10f:	lock xadd DWORD PTR [rcx],eax
   14000a113:	add    eax,ebx
   14000a115:	jne    0x14000a120
   14000a117:	mov    rcx,QWORD PTR [rdi+0x58]
   14000a11b:	call   0x140008584
   14000a120:	mov    rcx,QWORD PTR [rdi+0x60]
   14000a124:	test   rcx,rcx
   14000a127:	je     0x14000a13c
   14000a129:	mov    eax,ebx
   14000a12b:	lock xadd DWORD PTR [rcx],eax
   14000a12f:	add    eax,ebx
   14000a131:	jne    0x14000a13c
   14000a133:	mov    rcx,QWORD PTR [rdi+0x60]
   14000a137:	call   0x140008584
   14000a13c:	mov    rax,QWORD PTR [rdi+0x88]
   14000a143:	mov    QWORD PTR [rdi+0x60],r15
   14000a147:	mov    QWORD PTR [rdi+0x50],r15
   14000a14b:	mov    QWORD PTR [rdi+0x58],r15
   14000a14f:	mov    QWORD PTR [rdi+0x48],r15
   14000a153:	jmp    0x140009fce
   14000a158:	xor    r9d,r9d
   14000a15b:	xor    r8d,r8d
   14000a15e:	xor    edx,edx
   14000a160:	xor    ecx,ecx
   14000a162:	mov    QWORD PTR [rsp+0x20],r15
   14000a167:	call   0x14000da58
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	rex push rbx
   14000a172:	push   rbp
   14000a173:	push   rsi
   14000a174:	push   rdi
   14000a175:	push   r12
   14000a177:	push   r13
   14000a179:	push   r14
   14000a17b:	push   r15
   14000a17d:	sub    rsp,0xf8
   14000a184:	mov    rax,QWORD PTR [rip+0x17285]        # 0x140021410
   14000a18b:	xor    rax,rsp
   14000a18e:	mov    QWORD PTR [rsp+0xe0],rax
   14000a196:	mov    rsi,QWORD PTR [rsp+0x160]
   14000a19e:	mov    rbx,r9
   14000a1a1:	mov    r14,r8
   14000a1a4:	mov    rbp,rdx
   14000a1a7:	mov    rdi,rcx
   14000a1aa:	call   0x14000d728
   14000a1af:	lea    rcx,[rax+0x170]
   14000a1b6:	lea    r15,[rax+0x168]
   14000a1bd:	xor    r12d,r12d
   14000a1c0:	mov    QWORD PTR [rsp+0x40],rcx
   14000a1c5:	lea    rcx,[rax+0x174]
   14000a1cc:	lea    r13,[rax+0x1f7]
   14000a1d3:	mov    QWORD PTR [rsp+0x30],r15
   14000a1d8:	mov    QWORD PTR [rsp+0x38],rcx
   14000a1dd:	test   rdi,rdi
   14000a1e0:	je     0x14000a386
   14000a1e6:	test   rbp,rbp
   14000a1e9:	je     0x14000a386
   14000a1ef:	test   r14,r14
   14000a1f2:	je     0x14000a386
   14000a1f8:	cmp    BYTE PTR [rdi],0x43
   14000a1fb:	jne    0x14000a24b
   14000a1fd:	cmp    BYTE PTR [rdi+0x1],r12b
   14000a201:	jne    0x14000a24b
   14000a203:	lea    r8,[rip+0xe3c6]        # 0x1400185d0
   14000a20a:	mov    rdx,r14
   14000a20d:	mov    rcx,rbp
   14000a210:	call   0x14000db84
   14000a215:	test   eax,eax
   14000a217:	jne    0x14000a236
   14000a219:	test   rbx,rbx
   14000a21c:	je     0x14000a226
   14000a21e:	mov    DWORD PTR [rbx],r12d
   14000a221:	mov    WORD PTR [rbx+0x4],r12w
   14000a226:	test   rsi,rsi
   14000a229:	je     0x14000a22e
   14000a22b:	mov    DWORD PTR [rsi],r12d
   14000a22e:	mov    rax,rbp
   14000a231:	jmp    0x14000a388
   14000a236:	xor    r9d,r9d
   14000a239:	xor    r8d,r8d
   14000a23c:	xor    edx,edx
   14000a23e:	xor    ecx,ecx
   14000a240:	mov    QWORD PTR [rsp+0x20],r12
   14000a245:	call   0x14000da58
   14000a24a:	int3   
   14000a24b:	mov    rcx,rdi
   14000a24e:	call   0x1400093f0
   14000a253:	mov    r12,rax
   14000a256:	cmp    rax,0x83
   14000a25c:	jae    0x14000a286
   14000a25e:	mov    rdx,rdi
   14000a261:	mov    rcx,r13
   14000a264:	call   0x14000e2c0
   14000a269:	test   eax,eax
   14000a26b:	je     0x14000a315
   14000a271:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a276:	mov    rdx,rdi
   14000a279:	call   0x14000e2c0
   14000a27e:	test   eax,eax
   14000a280:	je     0x14000a315
   14000a286:	lea    rcx,[rsp+0x50]
   14000a28b:	mov    rdx,rdi
   14000a28e:	xor    r15d,r15d
   14000a291:	call   0x140009d4c
   14000a296:	test   eax,eax
   14000a298:	jne    0x14000a386
   14000a29e:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a2a3:	lea    r8,[rsp+0x50]
   14000a2a8:	lea    rcx,[rsp+0x50]
   14000a2ad:	call   0x1400136b0
   14000a2b2:	test   eax,eax
   14000a2b4:	je     0x14000a386
   14000a2ba:	mov    rax,QWORD PTR [rsp+0x30]
   14000a2bf:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a2c4:	lea    r8,[rsp+0x50]
   14000a2c9:	movzx  eax,WORD PTR [rax+0x4]
   14000a2cd:	mov    edx,0x83
   14000a2d2:	mov    DWORD PTR [rcx],eax
   14000a2d4:	mov    rcx,r13
   14000a2d7:	call   0x140009efc
   14000a2dc:	cmp    BYTE PTR [rdi],r15b
   14000a2df:	je     0x14000a2ef
   14000a2e1:	cmp    r12,0x83
   14000a2e8:	jae    0x14000a2ef
   14000a2ea:	mov    r15,r12
   14000a2ed:	jmp    0x14000a2f6
   14000a2ef:	lea    rdi,[rip+0xe274]        # 0x14001856a
   14000a2f6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a2fb:	lea    r9,[r15+0x1]
   14000a2ff:	mov    r8,rdi
   14000a302:	mov    edx,0x83
   14000a307:	call   0x1400112ac
   14000a30c:	test   eax,eax
   14000a30e:	jne    0x14000a370
   14000a310:	mov    r15,QWORD PTR [rsp+0x30]
   14000a315:	test   rbx,rbx
   14000a318:	je     0x14000a32b
   14000a31a:	mov    r8d,0x6
   14000a320:	mov    rdx,r15
   14000a323:	mov    rcx,rbx
   14000a326:	call   0x140008250
   14000a32b:	test   rsi,rsi
   14000a32e:	je     0x14000a343
   14000a330:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a335:	mov    r8d,0x4
   14000a33b:	mov    rcx,rsi
   14000a33e:	call   0x140008250
   14000a343:	mov    r8,r13
   14000a346:	mov    rdx,r14
   14000a349:	mov    rcx,rbp
   14000a34c:	call   0x14000db84
   14000a351:	test   eax,eax
   14000a353:	jne    0x14000a35a
   14000a355:	mov    rax,r13
   14000a358:	jmp    0x14000a388
   14000a35a:	and    QWORD PTR [rsp+0x20],0x0
   14000a360:	xor    r9d,r9d
   14000a363:	xor    r8d,r8d
   14000a366:	xor    edx,edx
   14000a368:	xor    ecx,ecx
   14000a36a:	call   0x14000da58
   14000a36f:	int3   
   14000a370:	and    QWORD PTR [rsp+0x20],0x0
   14000a376:	xor    r9d,r9d
   14000a379:	xor    r8d,r8d
   14000a37c:	xor    edx,edx
   14000a37e:	xor    ecx,ecx
   14000a380:	call   0x14000da58
   14000a385:	int3   
   14000a386:	xor    eax,eax
   14000a388:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a390:	xor    rcx,rsp
   14000a393:	call   0x140007d20
   14000a398:	add    rsp,0xf8
   14000a39f:	pop    r15
   14000a3a1:	pop    r14
   14000a3a3:	pop    r13
   14000a3a5:	pop    r12
   14000a3a7:	pop    rdi
   14000a3a8:	pop    rsi
   14000a3a9:	pop    rbp
   14000a3aa:	pop    rbx
   14000a3ab:	ret    
   14000a3ac:	mov    QWORD PTR [rsp+0x20],rbx
   14000a3b1:	push   rbp
   14000a3b2:	push   rsi
   14000a3b3:	push   rdi
   14000a3b4:	push   r12
   14000a3b6:	push   r13
   14000a3b8:	push   r14
   14000a3ba:	push   r15
   14000a3bc:	lea    rbp,[rsp-0x110]
   14000a3c4:	sub    rsp,0x210
   14000a3cb:	mov    rax,QWORD PTR [rip+0x1703e]        # 0x140021410
   14000a3d2:	xor    rax,rsp
   14000a3d5:	mov    QWORD PTR [rbp+0x100],rax
   14000a3dc:	mov    rbx,r8
   14000a3df:	movsxd r12,edx
   14000a3e2:	mov    rdi,rcx
   14000a3e5:	call   0x14000d728
   14000a3ea:	lea    r9,[rsp+0x48]
   14000a3ef:	lea    rdx,[rsp+0x70]
   14000a3f4:	mov    rsi,rax
   14000a3f7:	lea    rax,[rsp+0x44]
   14000a3fc:	mov    r8d,0x83
   14000a402:	mov    rcx,rbx
   14000a405:	mov    DWORD PTR [rsp+0x28],r12d
   14000a40a:	mov    QWORD PTR [rsp+0x20],rax
   14000a40f:	call   0x14000a170
   14000a414:	test   rax,rax
   14000a417:	jne    0x14000a445
   14000a419:	xor    eax,eax
   14000a41b:	mov    rcx,QWORD PTR [rbp+0x100]
   14000a422:	xor    rcx,rsp
   14000a425:	call   0x140007d20
   14000a42a:	mov    rbx,QWORD PTR [rsp+0x268]
   14000a432:	add    rsp,0x210
   14000a439:	pop    r15
   14000a43b:	pop    r14
   14000a43d:	pop    r13
   14000a43f:	pop    r12
   14000a441:	pop    rdi
   14000a442:	pop    rsi
   14000a443:	pop    rbp
   14000a444:	ret    
   14000a445:	mov    rbx,r12
   14000a448:	lea    rcx,[rsp+0x70]
   14000a44d:	mov    r15,r12
   14000a450:	shl    rbx,0x5
   14000a454:	mov    rdx,QWORD PTR [rbx+rdi*1+0x48]
   14000a459:	call   0x14000e2c0
   14000a45e:	test   eax,eax
   14000a460:	jne    0x14000a469
   14000a462:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   14000a467:	jmp    0x14000a41b
   14000a469:	lea    rcx,[rsp+0x70]
   14000a46e:	call   0x1400093f0
   14000a473:	mov    r12,rax
   14000a476:	lea    rcx,[rax+0x5]
   14000a47a:	call   0x14000c320
   14000a47f:	mov    r13,rax
   14000a482:	test   rax,rax
   14000a485:	je     0x14000a419
   14000a487:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   14000a48c:	lea    r14,[r15+0x3]
   14000a490:	lea    rcx,[rsp+0x68]
   14000a495:	mov    QWORD PTR [rsp+0x58],rax
   14000a49a:	mov    eax,DWORD PTR [rdi+r14*4]
   14000a49e:	mov    r8d,0x6
   14000a4a4:	mov    DWORD PTR [rsp+0x54],eax
   14000a4a8:	lea    rax,[r15+r15*2+0x12]
   14000a4ad:	lea    rax,[rdi+rax*2]
   14000a4b1:	mov    rdx,rax
   14000a4b4:	mov    QWORD PTR [rsp+0x60],rax
   14000a4b9:	call   0x140008250
   14000a4be:	mov    eax,DWORD PTR [rdi+0x4]
   14000a4c1:	lea    rdx,[r12+0x1]
   14000a4c6:	lea    r8,[rsp+0x70]
   14000a4cb:	lea    rcx,[r13+0x4]
   14000a4cf:	mov    DWORD PTR [rsp+0x50],eax
   14000a4d3:	call   0x14000db84
   14000a4d8:	test   eax,eax
   14000a4da:	jne    0x14000a6a3
   14000a4e0:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a4e5:	lea    rax,[r13+0x4]
   14000a4e9:	lea    rdx,[rsp+0x48]
   14000a4ee:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   14000a4f3:	movzx  eax,WORD PTR [rsp+0x48]
   14000a4f8:	mov    r8d,0x6
   14000a4fe:	mov    DWORD PTR [rdi+r14*4],eax
   14000a502:	call   0x140008250
   14000a507:	mov    r9d,r15d
   14000a50a:	cmp    r15d,0x2
   14000a50e:	jne    0x14000a613
   14000a514:	mov    eax,DWORD PTR [rsp+0x44]
   14000a518:	xor    r8d,r8d
   14000a51b:	xor    edx,edx
   14000a51d:	mov    DWORD PTR [rdi+0x4],eax
   14000a520:	mov    rcx,QWORD PTR [rsi+0x29c]
   14000a527:	mov    eax,DWORD PTR [rsi+rdx*8+0x27c]
   14000a52e:	cmp    DWORD PTR [rdi+0x4],eax
   14000a531:	je     0x14000a554
   14000a533:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   14000a53b:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14000a543:	inc    rdx
   14000a546:	inc    r8d
   14000a549:	mov    rcx,rax
   14000a54c:	cmp    rdx,0x5
   14000a550:	jl     0x14000a527
   14000a552:	jmp    0x14000a573
   14000a554:	test   r8d,r8d
   14000a557:	je     0x14000a573
   14000a559:	movsxd rdx,r8d
   14000a55c:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   14000a564:	mov    QWORD PTR [rsi+0x27c],rax
   14000a56b:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14000a573:	cmp    r8d,0x5
   14000a577:	jne    0x14000a607
   14000a57d:	mov    eax,DWORD PTR [rdi+0x14]
   14000a580:	lea    r12d,[r8+0x7a]
   14000a584:	mov    DWORD PTR [rsp+0x38],0x1
   14000a58c:	mov    DWORD PTR [rsp+0x30],eax
   14000a590:	mov    eax,DWORD PTR [rdi+0x4]
   14000a593:	lea    r8,[rip+0xe336]        # 0x1400188d0
   14000a59a:	mov    DWORD PTR [rsp+0x28],eax
   14000a59e:	lea    rax,[rbp+0x0]
   14000a5a2:	lea    edx,[r12-0x7e]
   14000a5a7:	mov    r9d,r12d
   14000a5aa:	xor    ecx,ecx
   14000a5ac:	mov    QWORD PTR [rsp+0x20],rax
   14000a5b1:	call   0x140010e9c
   14000a5b6:	test   eax,eax
   14000a5b8:	je     0x14000a5f4
   14000a5ba:	lea    rax,[rbp+0x0]
   14000a5be:	mov    ecx,0x1ff
   14000a5c3:	and    WORD PTR [rax],cx
   14000a5c6:	add    rax,0x2
   14000a5ca:	dec    r12
   14000a5cd:	jne    0x14000a5be
   14000a5cf:	mov    rdx,QWORD PTR [rip+0x16e0a]        # 0x1400213e0
   14000a5d6:	lea    rcx,[rbp+0x0]
   14000a5da:	mov    r8d,0xfe
   14000a5e0:	call   0x1400139a0
   14000a5e5:	xor    ecx,ecx
   14000a5e7:	test   eax,eax
   14000a5e9:	sete   cl
   14000a5ec:	mov    DWORD PTR [rsi+0x280],ecx
   14000a5f2:	jmp    0x14000a5fb
   14000a5f4:	and    DWORD PTR [rsi+0x280],0x0
   14000a5fb:	mov    eax,DWORD PTR [rdi+0x4]
   14000a5fe:	mov    r9d,r15d
   14000a601:	mov    DWORD PTR [rsi+0x27c],eax
   14000a607:	mov    eax,DWORD PTR [rsi+0x280]
   14000a60d:	mov    DWORD PTR [rdi+0x108],eax
   14000a613:	cmp    r9d,0x1
   14000a617:	jne    0x14000a620
   14000a619:	mov    eax,DWORD PTR [rsp+0x44]
   14000a61d:	mov    DWORD PTR [rdi+0x8],eax
   14000a620:	lea    rax,[r15+r15*2]
   14000a624:	lea    rdx,[rip+0xe225]        # 0x140018850
   14000a62b:	mov    rcx,rdi
   14000a62e:	call   QWORD PTR [rdx+rax*8]
   14000a631:	test   eax,eax
   14000a633:	je     0x14000a65c
   14000a635:	mov    rax,QWORD PTR [rsp+0x58]
   14000a63a:	mov    rcx,r13
   14000a63d:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   14000a642:	call   0x140008584
   14000a647:	mov    r11d,DWORD PTR [rsp+0x54]
   14000a64c:	mov    eax,DWORD PTR [rsp+0x50]
   14000a650:	mov    DWORD PTR [rdi+r14*4],r11d
   14000a654:	mov    DWORD PTR [rdi+0x4],eax
   14000a657:	jmp    0x14000a419
   14000a65c:	lea    rcx,[rip+0x17311]        # 0x140021974
   14000a663:	cmp    QWORD PTR [rsp+0x58],rcx
   14000a668:	je     0x14000a691
   14000a66a:	mov    rdx,QWORD PTR [rbx+rdi*1+0x58]
   14000a66f:	lock dec DWORD PTR [rdx]
   14000a672:	jne    0x14000a691
   14000a674:	mov    rcx,QWORD PTR [rbx+rdi*1+0x58]
   14000a679:	call   0x140008584
   14000a67e:	shl    r14,0x5
   14000a682:	mov    rcx,QWORD PTR [r14+rdi*1]
   14000a686:	call   0x140008584
   14000a68b:	and    QWORD PTR [rbx+rdi*1+0x50],0x0
   14000a691:	mov    DWORD PTR [r13+0x0],0x1
   14000a699:	mov    QWORD PTR [rbx+rdi*1+0x58],r13
   14000a69e:	jmp    0x14000a462
   14000a6a3:	and    QWORD PTR [rsp+0x20],0x0
   14000a6a9:	xor    r9d,r9d
   14000a6ac:	xor    r8d,r8d
   14000a6af:	xor    edx,edx
   14000a6b1:	xor    ecx,ecx
   14000a6b3:	call   0x14000da58
   14000a6b8:	int3   
   14000a6b9:	int3   
   14000a6ba:	int3   
   14000a6bb:	int3   
   14000a6bc:	rex push rbx
   14000a6be:	push   rbp
   14000a6bf:	push   rsi
   14000a6c0:	push   rdi
   14000a6c1:	push   r12
   14000a6c3:	push   r13
   14000a6c5:	push   r14
   14000a6c7:	sub    rsp,0xd0
   14000a6ce:	mov    rax,QWORD PTR [rip+0x16d3b]        # 0x140021410
   14000a6d5:	xor    rax,rsp
   14000a6d8:	mov    QWORD PTR [rsp+0xc0],rax
   14000a6e0:	mov    rbx,r8
   14000a6e3:	mov    rdi,rcx
   14000a6e6:	test   edx,edx
   14000a6e8:	je     0x14000a70a
   14000a6ea:	test   rbx,rbx
   14000a6ed:	je     0x14000a6f9
   14000a6ef:	call   0x14000a3ac
   14000a6f4:	jmp    0x14000a82c
   14000a6f9:	movsxd rax,edx
   14000a6fc:	shl    rax,0x5
   14000a700:	mov    rax,QWORD PTR [rax+rcx*1+0x48]
   14000a705:	jmp    0x14000a82c
   14000a70a:	xor    esi,esi
   14000a70c:	lea    r12d,[rsi+0x1]
   14000a710:	test   rbx,rbx
   14000a713:	je     0x14000a827
   14000a719:	cmp    BYTE PTR [r8],0x4c
   14000a71d:	jne    0x14000a864
   14000a723:	cmp    BYTE PTR [r8+0x1],0x43
   14000a728:	jne    0x14000a864
   14000a72e:	cmp    BYTE PTR [r8+0x2],0x5f
   14000a733:	jne    0x14000a864
   14000a739:	lea    rdx,[rip+0xe224]        # 0x140018964
   14000a740:	mov    rcx,rbx
   14000a743:	call   0x140013b38
   14000a748:	mov    rbp,rax
   14000a74b:	test   rax,rax
   14000a74e:	je     0x14000a8d8
   14000a754:	mov    r13,rax
   14000a757:	sub    r13,rbx
   14000a75a:	je     0x14000a8d8
   14000a760:	cmp    BYTE PTR [rax],0x3b
   14000a763:	je     0x14000a8d8
   14000a769:	mov    r14d,0x1
   14000a76f:	lea    r12,[rip+0xe0e2]        # 0x140018858
   14000a776:	mov    rcx,QWORD PTR [r12]
   14000a77a:	mov    r8,r13
   14000a77d:	mov    rdx,rbx
   14000a780:	call   0x140013a80
   14000a785:	test   eax,eax
   14000a787:	jne    0x14000a797
   14000a789:	mov    rcx,QWORD PTR [r12]
   14000a78d:	call   0x1400093f0
   14000a792:	cmp    r13,rax
   14000a795:	je     0x14000a7aa
   14000a797:	lea    rax,[rip+0xe11a]        # 0x1400188b8
   14000a79e:	add    r12,0x18
   14000a7a2:	inc    r14d
   14000a7a5:	cmp    r12,rax
   14000a7a8:	jle    0x14000a776
   14000a7aa:	inc    rbp
   14000a7ad:	lea    rdx,[rip+0xe1a8]        # 0x14001895c
   14000a7b4:	mov    rcx,rbp
   14000a7b7:	call   0x140012ecc
   14000a7bc:	mov    rbx,rax
   14000a7bf:	test   rax,rax
   14000a7c2:	jne    0x14000a7ce
   14000a7c4:	cmp    BYTE PTR [rbp+0x0],0x3b
   14000a7c8:	jne    0x14000a8d8
   14000a7ce:	cmp    r14d,0x5
   14000a7d2:	jg     0x14000a808
   14000a7d4:	lea    rcx,[rsp+0x30]
   14000a7d9:	mov    r9,rax
   14000a7dc:	mov    r8,rbp
   14000a7df:	mov    edx,0x83
   14000a7e4:	call   0x1400112ac
   14000a7e9:	test   eax,eax
   14000a7eb:	jne    0x14000a84e
   14000a7ed:	lea    r8,[rsp+0x30]
   14000a7f2:	mov    edx,r14d
   14000a7f5:	mov    rcx,rdi
   14000a7f8:	mov    BYTE PTR [rsp+rbx*1+0x30],al
   14000a7fc:	call   0x14000a3ac
   14000a801:	test   rax,rax
   14000a804:	je     0x14000a808
   14000a806:	inc    esi
   14000a808:	add    rbx,rbp
   14000a80b:	cmp    BYTE PTR [rbx],0x0
   14000a80e:	je     0x14000a81c
   14000a810:	inc    rbx
   14000a813:	cmp    BYTE PTR [rbx],0x0
   14000a816:	jne    0x14000a739
   14000a81c:	test   esi,esi
   14000a81e:	je     0x14000a8d8
   14000a824:	mov    rcx,rdi
   14000a827:	call   0x140009f94
   14000a82c:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000a834:	xor    rcx,rsp
   14000a837:	call   0x140007d20
   14000a83c:	add    rsp,0xd0
   14000a843:	pop    r14
   14000a845:	pop    r13
   14000a847:	pop    r12
   14000a849:	pop    rdi
   14000a84a:	pop    rsi
   14000a84b:	pop    rbp
   14000a84c:	pop    rbx
   14000a84d:	ret    
   14000a84e:	and    QWORD PTR [rsp+0x20],0x0
   14000a854:	xor    r9d,r9d
   14000a857:	xor    r8d,r8d
   14000a85a:	xor    edx,edx
   14000a85c:	xor    ecx,ecx
   14000a85e:	call   0x14000da58
   14000a863:	int3   
   14000a864:	and    DWORD PTR [rsp+0x28],esi
   14000a868:	and    QWORD PTR [rsp+0x20],rsi
   14000a86d:	lea    rdx,[rsp+0x30]
   14000a872:	xor    r9d,r9d
   14000a875:	mov    r8d,0x83
   14000a87b:	mov    rcx,rbx
   14000a87e:	call   0x14000a170
   14000a883:	test   rax,rax
   14000a886:	je     0x14000a82c
   14000a888:	xor    ebx,ebx
   14000a88a:	lea    rbp,[rdi+0x48]
   14000a88e:	test   ebx,ebx
   14000a890:	je     0x14000a8bf
   14000a892:	mov    rdx,QWORD PTR [rbp+0x0]
   14000a896:	lea    rcx,[rsp+0x30]
   14000a89b:	call   0x14000e2c0
   14000a8a0:	test   eax,eax
   14000a8a2:	je     0x14000a8bd
   14000a8a4:	lea    r8,[rsp+0x30]
   14000a8a9:	mov    edx,ebx
   14000a8ab:	mov    rcx,rdi
   14000a8ae:	call   0x14000a3ac
   14000a8b3:	test   rax,rax
   14000a8b6:	jne    0x14000a8bd
   14000a8b8:	xor    r12d,r12d
   14000a8bb:	jmp    0x14000a8bf
   14000a8bd:	inc    esi
   14000a8bf:	inc    ebx
   14000a8c1:	add    rbp,0x20
   14000a8c5:	cmp    ebx,0x5
   14000a8c8:	jle    0x14000a88e
   14000a8ca:	test   r12d,r12d
   14000a8cd:	jne    0x14000a824
   14000a8d3:	jmp    0x14000a81c
   14000a8d8:	xor    eax,eax
   14000a8da:	jmp    0x14000a82c
   14000a8df:	int3   
   14000a8e0:	mov    rax,rsp
   14000a8e3:	mov    QWORD PTR [rax+0x8],rbx
   14000a8e7:	mov    QWORD PTR [rax+0x10],rbp
   14000a8eb:	mov    QWORD PTR [rax+0x18],rsi
   14000a8ef:	mov    QWORD PTR [rax+0x20],rdi
   14000a8f3:	push   r12
   14000a8f5:	sub    rsp,0x20
   14000a8f9:	mov    rsi,rdx
   14000a8fc:	mov    ebp,ecx
   14000a8fe:	cmp    ecx,0x5
   14000a901:	ja     0x14000a92e
   14000a903:	test   rdx,rdx
   14000a906:	je     0x14000a92e
   14000a908:	mov    r12d,0x1
   14000a90e:	mov    edx,r12d
   14000a911:	lea    ecx,[r12+0xf]
   14000a916:	call   0x14000c3a0
   14000a91b:	mov    rbx,rax
   14000a91e:	test   rax,rax
   14000a921:	jne    0x14000a94b
   14000a923:	call   0x140008e40
   14000a928:	mov    DWORD PTR [rax],0xc
   14000a92e:	xor    eax,eax
   14000a930:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a935:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a93a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a93f:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a944:	add    rsp,0x20
   14000a948:	pop    r12
   14000a94a:	ret    
   14000a94b:	mov    rdx,r12
   14000a94e:	mov    ecx,0x160
   14000a953:	call   0x14000c3a0
   14000a958:	mov    QWORD PTR [rbx],rax
   14000a95b:	test   rax,rax
   14000a95e:	jne    0x14000a96a
   14000a960:	mov    rcx,rbx
   14000a963:	call   0x140008584
   14000a968:	jmp    0x14000a923
   14000a96a:	mov    rdx,r12
   14000a96d:	mov    ecx,0x220
   14000a972:	call   0x14000c3a0
   14000a977:	mov    QWORD PTR [rbx+0x8],rax
   14000a97b:	test   rax,rax
   14000a97e:	jne    0x14000a98a
   14000a980:	mov    rcx,QWORD PTR [rbx]
   14000a983:	call   0x140008584
   14000a988:	jmp    0x14000a960
   14000a98a:	mov    rdi,QWORD PTR [rbx]
   14000a98d:	test   rdi,rdi
   14000a990:	je     0x14000a9b7
   14000a992:	lea    rdx,[rip+0x172a7]        # 0x140021c40
   14000a999:	cmp    rdi,rdx
   14000a99c:	je     0x14000a9b7
   14000a99e:	mov    rcx,rdi
   14000a9a1:	mov    r8d,0x160
   14000a9a7:	call   0x140008250
   14000a9ac:	and    DWORD PTR [rdi],0x0
   14000a9af:	mov    rcx,rdi
   14000a9b2:	call   0x14000d23c
   14000a9b7:	mov    rcx,QWORD PTR [rbx]
   14000a9ba:	mov    r8,rsi
   14000a9bd:	mov    edx,ebp
   14000a9bf:	call   0x14000a6bc
   14000a9c4:	test   rax,rax
   14000a9c7:	je     0x14000a9e5
   14000a9c9:	mov    rax,QWORD PTR [rbx]
   14000a9cc:	mov    rdx,QWORD PTR [rbx+0x8]
   14000a9d0:	mov    ecx,DWORD PTR [rax+0x4]
   14000a9d3:	call   0x14000cdbc
   14000a9d8:	test   eax,eax
   14000a9da:	je     0x14000aa01
   14000a9dc:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a9e0:	call   0x140008584
   14000a9e5:	mov    rcx,QWORD PTR [rbx]
   14000a9e8:	call   0x14000d2c8
   14000a9ed:	mov    rcx,QWORD PTR [rbx]
   14000a9f0:	call   0x14000d36c
   14000a9f5:	mov    rcx,rbx
   14000a9f8:	call   0x140008584
   14000a9fd:	xor    ebx,ebx
   14000a9ff:	jmp    0x14000aa0f
   14000aa01:	mov    rax,QWORD PTR [rbx+0x8]
   14000aa05:	mov    DWORD PTR [rax],r12d
   14000aa08:	mov    rax,QWORD PTR [rbx+0x8]
   14000aa0c:	mov    DWORD PTR [rax],r12d
   14000aa0f:	mov    rax,rbx
   14000aa12:	jmp    0x14000a930
   14000aa17:	int3   
   14000aa18:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa1d:	mov    QWORD PTR [rsp+0x10],rsi
   14000aa22:	mov    QWORD PTR [rsp+0x20],rdi
   14000aa27:	push   r12
   14000aa29:	push   r13
   14000aa2b:	push   r14
   14000aa2d:	sub    rsp,0x30
   14000aa31:	mov    r13,rdx
   14000aa34:	mov    r12d,ecx
   14000aa37:	xor    esi,esi
   14000aa39:	cmp    ecx,0x5
   14000aa3c:	jbe    0x14000aa55
   14000aa3e:	call   0x140008e40
   14000aa43:	mov    DWORD PTR [rax],0x16
   14000aa49:	call   0x14000dafc
   14000aa4e:	xor    eax,eax
   14000aa50:	jmp    0x14000abba
   14000aa55:	call   0x14000d728
   14000aa5a:	mov    rbx,rax
   14000aa5d:	mov    QWORD PTR [rsp+0x60],rax
   14000aa62:	call   0x14000d540
   14000aa67:	or     DWORD PTR [rbx+0xc8],0x10
   14000aa6e:	mov    edx,0x1
   14000aa73:	mov    ecx,0x160
   14000aa78:	call   0x14000c3a0
   14000aa7d:	mov    rdi,rax
   14000aa80:	test   rax,rax
   14000aa83:	je     0x14000abb0
   14000aa89:	mov    ecx,0xc
   14000aa8e:	call   0x140012e0c
   14000aa93:	nop
   14000aa94:	mov    rdx,QWORD PTR [rbx+0xc0]
   14000aa9b:	test   rdx,rdx
   14000aa9e:	je     0x14000aabf
   14000aaa0:	cmp    rdi,rdx
   14000aaa3:	je     0x14000aabf
   14000aaa5:	mov    rcx,rdi
   14000aaa8:	mov    r8d,0x160
   14000aaae:	call   0x140008250
   14000aab3:	and    DWORD PTR [rdi],0x0
   14000aab6:	mov    rcx,rdi
   14000aab9:	call   0x14000d23c
   14000aabe:	nop
   14000aabf:	mov    ecx,0xc
   14000aac4:	call   0x140012d0c
   14000aac9:	mov    r8,r13
   14000aacc:	mov    edx,r12d
   14000aacf:	mov    rcx,rdi
   14000aad2:	call   0x14000a6bc
   14000aad7:	mov    rsi,rax
   14000aada:	mov    QWORD PTR [rsp+0x20],rax
   14000aadf:	test   rax,rax
   14000aae2:	je     0x14000ab9f
   14000aae8:	test   r13,r13
   14000aaeb:	je     0x14000ab16
   14000aaed:	lea    rdx,[rip+0x16e80]        # 0x140021974
   14000aaf4:	mov    rcx,r13
   14000aaf7:	call   0x14000e2c0
   14000aafc:	mov    ecx,DWORD PTR [rip+0x1855a]        # 0x14002305c
   14000ab02:	test   eax,eax
   14000ab04:	mov    r12d,0x1
   14000ab0a:	cmovne ecx,r12d
   14000ab0e:	mov    DWORD PTR [rip+0x18548],ecx        # 0x14002305c
   14000ab14:	jmp    0x14000ab1c
   14000ab16:	mov    r12d,0x1
   14000ab1c:	mov    ecx,0xc
   14000ab21:	call   0x140012e0c
   14000ab26:	nop
   14000ab27:	mov    rdx,rdi
   14000ab2a:	lea    rcx,[rbx+0xc0]
   14000ab31:	call   0x14000d4e8
   14000ab36:	mov    rcx,rdi
   14000ab39:	call   0x14000d2c8
   14000ab3e:	test   BYTE PTR [rbx+0xc8],0x2
   14000ab45:	jne    0x14000ab93
   14000ab47:	test   BYTE PTR [rip+0x16e22],r12b        # 0x140021970
   14000ab4e:	jne    0x14000ab93
   14000ab50:	mov    rdx,QWORD PTR [rbx+0xc0]
   14000ab57:	lea    rcx,[rip+0x17242]        # 0x140021da0
   14000ab5e:	call   0x14000d4e8
   14000ab63:	mov    r11,QWORD PTR [rip+0x17236]        # 0x140021da0
   14000ab6a:	mov    rax,QWORD PTR [r11+0x128]
   14000ab71:	mov    QWORD PTR [rip+0x17430],rax        # 0x140021fa8
   14000ab78:	mov    rax,QWORD PTR [r11+0x140]
   14000ab7f:	mov    QWORD PTR [rip+0x1689a],rax        # 0x140021420
   14000ab86:	mov    eax,DWORD PTR [r11+0x10c]
   14000ab8d:	mov    DWORD PTR [rip+0x173f5],eax        # 0x140021f88
   14000ab93:	mov    ecx,0xc
   14000ab98:	call   0x140012d0c
   14000ab9d:	jmp    0x14000abb0
   14000ab9f:	mov    rcx,rdi
   14000aba2:	call   0x14000d2c8
   14000aba7:	mov    rcx,rdi
   14000abaa:	call   0x14000d36c
   14000abaf:	nop
   14000abb0:	and    DWORD PTR [rbx+0xc8],0xffffffef
   14000abb7:	mov    rax,rsi
   14000abba:	mov    rbx,QWORD PTR [rsp+0x50]
   14000abbf:	mov    rsi,QWORD PTR [rsp+0x58]
   14000abc4:	mov    rdi,QWORD PTR [rsp+0x68]
   14000abc9:	add    rsp,0x30
   14000abcd:	pop    r14
   14000abcf:	pop    r13
   14000abd1:	pop    r12
   14000abd3:	ret    
   14000abd4:	mov    QWORD PTR [rsp+0x8],rbx
   14000abd9:	mov    QWORD PTR [rsp+0x10],rsi
   14000abde:	push   rdi
   14000abdf:	sub    rsp,0x20
   14000abe3:	mov    rbx,rcx
   14000abe6:	cmp    rcx,0xffffffffffffffe0
   14000abea:	ja     0x14000ac68
   14000abec:	mov    edi,0x1
   14000abf1:	test   rcx,rcx
   14000abf4:	cmovne rdi,rcx
   14000abf8:	mov    rcx,QWORD PTR [rip+0x18a09]        # 0x140023608
   14000abff:	test   rcx,rcx
   14000ac02:	jne    0x14000ac24
   14000ac04:	call   0x140010290
   14000ac09:	mov    ecx,0x1e
   14000ac0e:	call   0x140010030
   14000ac13:	mov    ecx,0xff
   14000ac18:	call   0x14000dcb8
   14000ac1d:	mov    rcx,QWORD PTR [rip+0x189e4]        # 0x140023608
   14000ac24:	mov    r8,rdi
   14000ac27:	xor    edx,edx
   14000ac29:	call   QWORD PTR [rip+0xd501]        # 0x140018130
   14000ac2f:	mov    rsi,rax
   14000ac32:	test   rax,rax
   14000ac35:	jne    0x14000ac63
   14000ac37:	cmp    DWORD PTR [rip+0x194d3],eax        # 0x140024110
   14000ac3d:	je     0x14000ac4d
   14000ac3f:	mov    rcx,rbx
   14000ac42:	call   0x14000e378
   14000ac47:	test   eax,eax
   14000ac49:	je     0x14000ac58
   14000ac4b:	jmp    0x14000abf8
   14000ac4d:	call   0x140008e40
   14000ac52:	mov    DWORD PTR [rax],0xc
   14000ac58:	call   0x140008e40
   14000ac5d:	mov    DWORD PTR [rax],0xc
   14000ac63:	mov    rax,rsi
   14000ac66:	jmp    0x14000ac7a
   14000ac68:	call   0x14000e378
   14000ac6d:	call   0x140008e40
   14000ac72:	mov    DWORD PTR [rax],0xc
   14000ac78:	xor    eax,eax
   14000ac7a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ac7f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ac84:	add    rsp,0x20
   14000ac88:	pop    rdi
   14000ac89:	ret    
   14000ac8a:	int3   
   14000ac8b:	int3   
   14000ac8c:	lea    rax,[rip+0xdce5]        # 0x140018978
   14000ac93:	mov    QWORD PTR [rcx],rax
   14000ac96:	jmp    0x140008178
   14000ac9b:	int3   
   14000ac9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000aca1:	push   rdi
   14000aca2:	sub    rsp,0x20
   14000aca6:	lea    rax,[rip+0xdccb]        # 0x140018978
   14000acad:	mov    ebx,edx
   14000acaf:	mov    rdi,rcx
   14000acb2:	mov    QWORD PTR [rcx],rax
   14000acb5:	call   0x140008178
   14000acba:	test   bl,0x1
   14000acbd:	je     0x14000acc7
   14000acbf:	mov    rcx,rdi
   14000acc2:	call   0x14000872c
   14000acc7:	mov    rax,rdi
   14000acca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000accf:	add    rsp,0x20
   14000acd3:	pop    rdi
   14000acd4:	ret    
   14000acd5:	int3   
   14000acd6:	int3   
   14000acd7:	int3   
   14000acd8:	mov    rax,rsp
   14000acdb:	mov    QWORD PTR [rax+0x8],rbx
   14000acdf:	mov    QWORD PTR [rax+0x10],rbp
   14000ace3:	mov    QWORD PTR [rax+0x18],rsi
   14000ace7:	mov    QWORD PTR [rax+0x20],rdi
   14000aceb:	push   r12
   14000aced:	sub    rsp,0x20
   14000acf1:	mov    esi,DWORD PTR [rcx+0x4]
   14000acf4:	xor    ebx,ebx
   14000acf6:	mov    r12,r8
   14000acf9:	mov    rbp,rdx
   14000acfc:	mov    rdi,rcx
   14000acff:	test   esi,esi
   14000ad01:	je     0x14000ad11
   14000ad03:	movsxd rsi,esi
   14000ad06:	call   0x140009618
   14000ad0b:	lea    r11,[rsi+rax*1]
   14000ad0f:	jmp    0x14000ad14
   14000ad11:	mov    r11,rbx
   14000ad14:	test   r11,r11
   14000ad17:	je     0x14000addb
   14000ad1d:	test   esi,esi
   14000ad1f:	je     0x14000ad30
   14000ad21:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000ad25:	call   0x140009618
   14000ad2a:	lea    r11,[rsi+rax*1]
   14000ad2e:	jmp    0x14000ad33
   14000ad30:	mov    r11,rbx
   14000ad33:	cmp    BYTE PTR [r11+0x10],bl
   14000ad37:	je     0x14000addb
   14000ad3d:	test   esi,esi
   14000ad3f:	je     0x14000ad52
   14000ad41:	call   0x140009618
   14000ad46:	mov    rsi,rax
   14000ad49:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ad4d:	add    rsi,rax
   14000ad50:	jmp    0x14000ad55
   14000ad52:	mov    rsi,rbx
   14000ad55:	call   0x140009630
   14000ad5a:	mov    r11,rax
   14000ad5d:	movsxd rax,DWORD PTR [rbp+0x4]
   14000ad61:	add    r11,rax
   14000ad64:	cmp    rsi,r11
   14000ad67:	je     0x14000ada4
   14000ad69:	cmp    DWORD PTR [rdi+0x4],ebx
   14000ad6c:	je     0x14000ad7f
   14000ad6e:	call   0x140009618
   14000ad73:	mov    rsi,rax
   14000ad76:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ad7a:	add    rsi,rax
   14000ad7d:	jmp    0x14000ad82
   14000ad7f:	mov    rsi,rbx
   14000ad82:	call   0x140009630
   14000ad87:	lea    rcx,[rsi+0x10]
   14000ad8b:	mov    r11,rax
   14000ad8e:	movsxd rax,DWORD PTR [rbp+0x4]
   14000ad92:	lea    rdx,[r11+rax*1+0x10]
   14000ad97:	call   0x14000e2c0
   14000ad9c:	test   eax,eax
   14000ad9e:	je     0x14000ada4
   14000ada0:	xor    eax,eax
   14000ada2:	jmp    0x14000ade0
   14000ada4:	mov    al,0x2
   14000ada6:	test   BYTE PTR [rbp+0x0],al
   14000ada9:	je     0x14000adb0
   14000adab:	test   BYTE PTR [rdi],0x8
   14000adae:	je     0x14000add7
   14000adb0:	test   BYTE PTR [r12],0x1
   14000adb5:	je     0x14000adbc
   14000adb7:	test   BYTE PTR [rdi],0x1
   14000adba:	je     0x14000add7
   14000adbc:	test   BYTE PTR [r12],0x4
   14000adc1:	je     0x14000adc8
   14000adc3:	test   BYTE PTR [rdi],0x4
   14000adc6:	je     0x14000add7
   14000adc8:	test   BYTE PTR [r12],al
   14000adcc:	je     0x14000add2
   14000adce:	test   BYTE PTR [rdi],al
   14000add0:	je     0x14000add7
   14000add2:	mov    ebx,0x1
   14000add7:	mov    eax,ebx
   14000add9:	jmp    0x14000ade0
   14000addb:	mov    eax,0x1
   14000ade0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ade5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000adea:	mov    rsi,QWORD PTR [rsp+0x40]
   14000adef:	mov    rdi,QWORD PTR [rsp+0x48]
   14000adf4:	add    rsp,0x20
   14000adf8:	pop    r12
   14000adfa:	ret    
   14000adfb:	int3   
   14000adfc:	sub    rsp,0x28
   14000ae00:	mov    rax,QWORD PTR [rcx]
   14000ae03:	cmp    DWORD PTR [rax],0xe0434352
   14000ae09:	je     0x14000ae2d
   14000ae0b:	cmp    DWORD PTR [rax],0xe0434f4d
   14000ae11:	je     0x14000ae2d
   14000ae13:	cmp    DWORD PTR [rax],0xe06d7363
   14000ae19:	jne    0x14000ae46
   14000ae1b:	call   0x14000d728
   14000ae20:	and    DWORD PTR [rax+0x100],0x0
   14000ae27:	call   0x140011230
   14000ae2c:	int3   
   14000ae2d:	call   0x14000d728
   14000ae32:	cmp    DWORD PTR [rax+0x100],0x0
   14000ae39:	jle    0x14000ae46
   14000ae3b:	call   0x14000d728
   14000ae40:	dec    DWORD PTR [rax+0x100]
   14000ae46:	xor    eax,eax
   14000ae48:	add    rsp,0x28
   14000ae4c:	ret    
   14000ae4d:	int3   
   14000ae4e:	int3   
   14000ae4f:	int3   
   14000ae50:	mov    rax,rsp
   14000ae53:	mov    DWORD PTR [rax+0x20],r9d
   14000ae57:	mov    QWORD PTR [rax+0x18],r8
   14000ae5b:	mov    QWORD PTR [rax+0x10],rdx
   14000ae5f:	mov    QWORD PTR [rax+0x8],rcx
   14000ae63:	push   rbx
   14000ae64:	push   rsi
   14000ae65:	push   rdi
   14000ae66:	push   r12
   14000ae68:	push   r13
   14000ae6a:	push   r14
   14000ae6c:	push   r15
   14000ae6e:	sub    rsp,0x30
   14000ae72:	mov    r13d,r9d
   14000ae75:	mov    rsi,r8
   14000ae78:	mov    r15,rdx
   14000ae7b:	mov    r14,rcx
   14000ae7e:	call   0x140011194
   14000ae83:	mov    edi,eax
   14000ae85:	call   0x140009618
   14000ae8a:	mov    QWORD PTR [rsp+0x28],rax
   14000ae8f:	call   0x14000d728
   14000ae94:	inc    DWORD PTR [rax+0x100]
   14000ae9a:	cmp    edi,0xffffffff
   14000ae9d:	je     0x14000af90
   14000aea3:	cmp    edi,r13d
   14000aea6:	jle    0x14000af90
   14000aeac:	cmp    edi,0xffffffff
   14000aeaf:	jle    0x14000aeb6
   14000aeb1:	cmp    edi,DWORD PTR [rsi+0x4]
   14000aeb4:	jl     0x14000aebb
   14000aeb6:	call   0x140011254
   14000aebb:	movsxd r12,edi
   14000aebe:	call   0x140009618
   14000aec3:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000aec7:	lea    rax,[rax+r12*8]
   14000aecb:	mov    edi,DWORD PTR [rcx+rax*1]
   14000aece:	mov    DWORD PTR [rsp+0x20],edi
   14000aed2:	call   0x140009618
   14000aed7:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000aedb:	lea    rax,[rax+r12*8]
   14000aedf:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000aee4:	je     0x14000af02
   14000aee6:	call   0x140009618
   14000aeeb:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000aeef:	lea    rax,[rax+r12*8]
   14000aef3:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000aef8:	call   0x140009618
   14000aefd:	add    rax,rbx
   14000af00:	jmp    0x14000af04
   14000af02:	xor    eax,eax
   14000af04:	test   rax,rax
   14000af07:	je     0x14000af67
   14000af09:	mov    r9d,edi
   14000af0c:	mov    r8,rsi
   14000af0f:	mov    rdx,r15
   14000af12:	mov    rcx,r14
   14000af15:	call   0x1400111bc
   14000af1a:	call   0x140009618
   14000af1f:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000af23:	lea    rax,[rax+r12*8]
   14000af27:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000af2c:	je     0x14000af4a
   14000af2e:	call   0x140009618
   14000af33:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000af37:	lea    rax,[rax+r12*8]
   14000af3b:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000af40:	call   0x140009618
   14000af45:	add    rax,rbx
   14000af48:	jmp    0x14000af4c
   14000af4a:	xor    eax,eax
   14000af4c:	mov    r8d,0x103
   14000af52:	mov    rdx,r14
   14000af55:	mov    rcx,rax
   14000af58:	call   0x140013bf0
   14000af5d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000af62:	call   0x140009648
   14000af67:	jmp    0x14000af87
   14000af69:	mov    r13d,DWORD PTR [rsp+0x88]
   14000af71:	mov    rsi,QWORD PTR [rsp+0x80]
   14000af79:	mov    r15,QWORD PTR [rsp+0x78]
   14000af7e:	mov    r14,QWORD PTR [rsp+0x70]
   14000af83:	mov    edi,DWORD PTR [rsp+0x20]
   14000af87:	mov    DWORD PTR [rsp+0x24],edi
   14000af8b:	jmp    0x14000ae9a
   14000af90:	call   0x14000d728
   14000af95:	cmp    DWORD PTR [rax+0x100],0x0
   14000af9c:	jle    0x14000afa9
   14000af9e:	call   0x14000d728
   14000afa3:	dec    DWORD PTR [rax+0x100]
   14000afa9:	cmp    edi,0xffffffff
   14000afac:	je     0x14000afb8
   14000afae:	cmp    edi,r13d
   14000afb1:	jle    0x14000afb8
   14000afb3:	call   0x140011254
   14000afb8:	mov    r9d,edi
   14000afbb:	mov    r8,rsi
   14000afbe:	mov    rdx,r15
   14000afc1:	mov    rcx,r14
   14000afc4:	call   0x1400111bc
   14000afc9:	add    rsp,0x30
   14000afcd:	pop    r15
   14000afcf:	pop    r14
   14000afd1:	pop    r13
   14000afd3:	pop    r12
   14000afd5:	pop    rdi
   14000afd6:	pop    rsi
   14000afd7:	pop    rbx
   14000afd8:	ret    
   14000afd9:	int3   
   14000afda:	int3   
   14000afdb:	int3   
   14000afdc:	test   rcx,rcx
   14000afdf:	je     0x14000b01d
   14000afe1:	mov    BYTE PTR [rsp+0x10],dl
   14000afe5:	sub    rsp,0x28
   14000afe9:	cmp    DWORD PTR [rcx],0xe06d7363
   14000afef:	jne    0x14000b019
   14000aff1:	mov    rax,QWORD PTR [rcx+0x30]
   14000aff5:	test   rax,rax
   14000aff8:	je     0x14000b019
   14000affa:	cmp    DWORD PTR [rax+0x4],0x0
   14000affe:	je     0x14000b019
   14000b000:	movsxd rax,DWORD PTR [rax+0x4]
   14000b004:	mov    rdx,QWORD PTR [rcx+0x38]
   14000b008:	add    rdx,rax
   14000b00b:	mov    rcx,QWORD PTR [rcx+0x28]
   14000b00f:	call   rdx
   14000b011:	jmp    0x14000b019
   14000b013:	call   0x140011230
   14000b018:	nop
   14000b019:	add    rsp,0x28
   14000b01d:	ret    
   14000b01e:	int3   
   14000b01f:	int3   
   14000b020:	movsxd rax,DWORD PTR [rdx]
   14000b023:	add    rax,rcx
   14000b026:	cmp    DWORD PTR [rdx+0x4],0x0
   14000b02a:	jl     0x14000b042
   14000b02c:	movsxd r9,DWORD PTR [rdx+0x4]
   14000b030:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000b034:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000b038:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000b03c:	add    r8,r9
   14000b03f:	add    rax,r8
   14000b042:	ret    
   14000b043:	int3   
   14000b044:	sub    rsp,0x28
   14000b048:	call   0x14000d728
   14000b04d:	xor    ecx,ecx
   14000b04f:	cmp    DWORD PTR [rax+0x100],ecx
   14000b055:	setne  al
   14000b058:	add    rsp,0x28
   14000b05c:	ret    
   14000b05d:	int3   
   14000b05e:	int3   
   14000b05f:	int3   
   14000b060:	mov    QWORD PTR [rsp+0x8],rbx
   14000b065:	mov    QWORD PTR [rsp+0x10],rbp
   14000b06a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b06f:	push   rdi
   14000b070:	push   r12
   14000b072:	push   r13
   14000b074:	push   r14
   14000b076:	push   r15
   14000b078:	sub    rsp,0x20
   14000b07c:	mov    rsi,rdx
   14000b07f:	mov    r14,rcx
   14000b082:	test   rdx,rdx
   14000b085:	jne    0x14000b092
   14000b087:	call   0x140011254
   14000b08c:	call   0x140011230
   14000b091:	int3   
   14000b092:	xor    edi,edi
   14000b094:	xor    r12b,r12b
   14000b097:	cmp    DWORD PTR [rdx],edi
   14000b099:	jle    0x14000b113
   14000b09b:	call   0x140009630
   14000b0a0:	mov    r11,rax
   14000b0a3:	mov    rax,QWORD PTR [r14+0x30]
   14000b0a7:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b0ab:	lea    r13,[r11+rcx*1+0x4]
   14000b0b0:	call   0x140009630
   14000b0b5:	mov    r11,rax
   14000b0b8:	mov    rax,QWORD PTR [r14+0x30]
   14000b0bc:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b0c0:	mov    ebp,DWORD PTR [r11+rcx*1]
   14000b0c4:	test   ebp,ebp
   14000b0c6:	jle    0x14000b10d
   14000b0c8:	movsxd rax,edi
   14000b0cb:	lea    r15,[rax+rax*4]
   14000b0cf:	call   0x140009630
   14000b0d4:	mov    rbx,rax
   14000b0d7:	movsxd rax,DWORD PTR [r13+0x0]
   14000b0db:	add    rbx,rax
   14000b0de:	call   0x140009618
   14000b0e3:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000b0e7:	mov    r8,QWORD PTR [r14+0x30]
   14000b0eb:	lea    rax,[rax+r15*4]
   14000b0ef:	mov    rdx,rbx
   14000b0f2:	add    rcx,rax
   14000b0f5:	call   0x14000acd8
   14000b0fa:	test   eax,eax
   14000b0fc:	jne    0x14000b10a
   14000b0fe:	dec    ebp
   14000b100:	add    r13,0x4
   14000b104:	test   ebp,ebp
   14000b106:	jg     0x14000b0cf
   14000b108:	jmp    0x14000b10d
   14000b10a:	mov    r12b,0x1
   14000b10d:	inc    edi
   14000b10f:	cmp    edi,DWORD PTR [rsi]
   14000b111:	jl     0x14000b09b
   14000b113:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b118:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b11d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b122:	mov    al,r12b
   14000b125:	add    rsp,0x20
   14000b129:	pop    r15
   14000b12b:	pop    r14
   14000b12d:	pop    r13
   14000b12f:	pop    r12
   14000b131:	pop    rdi
   14000b132:	ret    
   14000b133:	int3   
   14000b134:	rex push rbx
   14000b136:	push   rsi
   14000b137:	push   rdi
   14000b138:	push   r12
   14000b13a:	push   r13
   14000b13c:	push   r14
   14000b13e:	push   r15
   14000b140:	sub    rsp,0x80
   14000b147:	mov    rdi,rcx
   14000b14a:	xor    r13d,r13d
   14000b14d:	mov    DWORD PTR [rsp+0x20],r13d
   14000b152:	and    DWORD PTR [rsp+0xc0],r13d
   14000b15a:	and    QWORD PTR [rsp+0x48],r13
   14000b15f:	and    QWORD PTR [rsp+0x40],r13
   14000b164:	call   0x14000d728
   14000b169:	mov    rax,QWORD PTR [rax+0xf8]
   14000b170:	mov    QWORD PTR [rsp+0xd8],rax
   14000b178:	call   0x14000d728
   14000b17d:	mov    rax,QWORD PTR [rax+0xf0]
   14000b184:	mov    QWORD PTR [rsp+0xd0],rax
   14000b18c:	mov    rsi,QWORD PTR [rdi+0x50]
   14000b190:	mov    QWORD PTR [rsp+0xc8],rsi
   14000b198:	mov    rax,QWORD PTR [rdi+0x48]
   14000b19c:	mov    QWORD PTR [rsp+0x38],rax
   14000b1a1:	mov    rbx,QWORD PTR [rdi+0x40]
   14000b1a5:	mov    r15,QWORD PTR [rdi+0x30]
   14000b1a9:	mov    r12,QWORD PTR [rdi+0x28]
   14000b1ad:	mov    QWORD PTR [rsp+0x60],r12
   14000b1b2:	call   0x14000d728
   14000b1b7:	mov    QWORD PTR [rax+0xf0],rsi
   14000b1be:	call   0x14000d728
   14000b1c3:	mov    QWORD PTR [rax+0xf8],rbx
   14000b1ca:	call   0x14000d728
   14000b1cf:	mov    rdx,QWORD PTR [rax+0xf0]
   14000b1d6:	mov    rdx,QWORD PTR [rdx+0x28]
   14000b1da:	lea    rcx,[rsp+0x70]
   14000b1df:	call   0x1400099d8
   14000b1e4:	mov    r14,rax
   14000b1e7:	mov    QWORD PTR [rsp+0x50],rax
   14000b1ec:	cmp    QWORD PTR [rdi+0x58],r13
   14000b1f0:	je     0x14000b20e
   14000b1f2:	mov    DWORD PTR [rsp+0xc0],0x1
   14000b1fd:	call   0x14000d728
   14000b202:	mov    rcx,QWORD PTR [rax+0x138]
   14000b209:	mov    QWORD PTR [rsp+0x40],rcx
   14000b20e:	mov    r8d,0x100
   14000b214:	mov    rdx,r12
   14000b217:	mov    rcx,r15
   14000b21a:	call   0x140013bf0
   14000b21f:	mov    rbx,rax
   14000b222:	mov    QWORD PTR [rsp+0x48],rax
   14000b227:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000b22f:	mov    r15,QWORD PTR [rsp+0xd0]
   14000b237:	jmp    0x14000b2b6
   14000b239:	mov    DWORD PTR [rsp+0x20],0x1
   14000b241:	call   0x14000d728
   14000b246:	and    DWORD PTR [rax+0x2c0],0x0
   14000b24d:	mov    rsi,QWORD PTR [rsp+0xc8]
   14000b255:	cmp    DWORD PTR [rsp+0xc0],0x0
   14000b25d:	je     0x14000b27f
   14000b25f:	mov    dl,0x1
   14000b261:	mov    rcx,rsi
   14000b264:	call   0x14000afdc
   14000b269:	mov    r11,QWORD PTR [rsp+0x40]
   14000b26e:	lea    r9,[r11+0x20]
   14000b272:	mov    r8d,DWORD PTR [r11+0x18]
   14000b276:	mov    edx,DWORD PTR [r11+0x4]
   14000b27a:	mov    ecx,DWORD PTR [r11]
   14000b27d:	jmp    0x14000b28c
   14000b27f:	lea    r9,[rsi+0x20]
   14000b283:	mov    r8d,DWORD PTR [rsi+0x18]
   14000b287:	mov    edx,DWORD PTR [rsi+0x4]
   14000b28a:	mov    ecx,DWORD PTR [rsi]
   14000b28c:	call   QWORD PTR [rip+0xce7e]        # 0x140018110
   14000b292:	mov    r13d,DWORD PTR [rsp+0x20]
   14000b297:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b29c:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000b2a4:	mov    r15,QWORD PTR [rsp+0xd0]
   14000b2ac:	mov    r12,QWORD PTR [rsp+0x60]
   14000b2b1:	mov    r14,QWORD PTR [rsp+0x50]
   14000b2b6:	mov    rcx,r14
   14000b2b9:	call   0x140009a50
   14000b2be:	test   r13d,r13d
   14000b2c1:	jne    0x14000b303
   14000b2c3:	cmp    DWORD PTR [rsi],0xe06d7363
   14000b2c9:	jne    0x14000b303
   14000b2cb:	cmp    DWORD PTR [rsi+0x18],0x4
   14000b2cf:	jne    0x14000b303
   14000b2d1:	cmp    DWORD PTR [rsi+0x20],0x19930520
   14000b2d8:	je     0x14000b2ec
   14000b2da:	cmp    DWORD PTR [rsi+0x20],0x19930521
   14000b2e1:	je     0x14000b2ec
   14000b2e3:	cmp    DWORD PTR [rsi+0x20],0x19930522
   14000b2ea:	jne    0x14000b303
   14000b2ec:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b2f0:	call   0x140009a1c
   14000b2f5:	test   eax,eax
   14000b2f7:	je     0x14000b303
   14000b2f9:	mov    dl,0x1
   14000b2fb:	mov    rcx,rsi
   14000b2fe:	call   0x14000afdc
   14000b303:	call   0x14000d728
   14000b308:	mov    QWORD PTR [rax+0xf0],r15
   14000b30f:	call   0x14000d728
   14000b314:	mov    QWORD PTR [rax+0xf8],rdi
   14000b31b:	mov    rax,QWORD PTR [rsp+0x38]
   14000b320:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000b324:	mov    rax,QWORD PTR [r12]
   14000b328:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000b330:	mov    rax,rbx
   14000b333:	add    rsp,0x80
   14000b33a:	pop    r15
   14000b33c:	pop    r14
   14000b33e:	pop    r13
   14000b340:	pop    r12
   14000b342:	pop    rdi
   14000b343:	pop    rsi
   14000b344:	pop    rbx
   14000b345:	ret    
   14000b346:	int3   
   14000b347:	int3   
   14000b348:	mov    QWORD PTR [rsp+0x8],rbx
   14000b34d:	mov    QWORD PTR [rsp+0x10],rsi
   14000b352:	mov    QWORD PTR [rsp+0x18],rdi
   14000b357:	push   r12
   14000b359:	push   r13
   14000b35b:	push   r14
   14000b35d:	sub    rsp,0x30
   14000b361:	mov    rsi,r9
   14000b364:	mov    rdi,r8
   14000b367:	mov    r12,rdx
   14000b36a:	mov    r14,rcx
   14000b36d:	xor    ebx,ebx
   14000b36f:	mov    r13d,DWORD PTR [r8+0x4]
   14000b373:	test   r13d,r13d
   14000b376:	je     0x14000b387
   14000b378:	movsxd r13,r13d
   14000b37b:	call   0x140009618
   14000b380:	lea    r11,[r13+rax*1+0x0]
   14000b385:	jmp    0x14000b38a
   14000b387:	mov    r11,rbx
   14000b38a:	test   r11,r11
   14000b38d:	je     0x14000b52e
   14000b393:	test   r13d,r13d
   14000b396:	je     0x14000b3a9
   14000b398:	call   0x140009618
   14000b39d:	mov    r11,rax
   14000b3a0:	movsxd rax,DWORD PTR [rdi+0x4]
   14000b3a4:	add    r11,rax
   14000b3a7:	jmp    0x14000b3ac
   14000b3a9:	mov    r11,rbx
   14000b3ac:	cmp    BYTE PTR [r11+0x10],bl
   14000b3b0:	je     0x14000b52e
   14000b3b6:	cmp    DWORD PTR [rdi+0x8],ebx
   14000b3b9:	jne    0x14000b3c7
   14000b3bb:	test   DWORD PTR [rdi],0x80000000
   14000b3c1:	je     0x14000b52e
   14000b3c7:	mov    ecx,DWORD PTR [rdi]
   14000b3c9:	test   ecx,ecx
   14000b3cb:	js     0x14000b3d8
   14000b3cd:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b3d1:	add    rax,QWORD PTR [r12]
   14000b3d5:	mov    r12,rax
   14000b3d8:	mov    edi,0x1
   14000b3dd:	test   cl,0x8
   14000b3e0:	je     0x14000b421
   14000b3e2:	mov    edx,edi
   14000b3e4:	mov    rcx,QWORD PTR [r14+0x28]
   14000b3e8:	call   0x140013c38
   14000b3ed:	test   eax,eax
   14000b3ef:	je     0x14000b51e
   14000b3f5:	mov    edx,edi
   14000b3f7:	mov    rcx,r12
   14000b3fa:	call   0x140013c38
   14000b3ff:	test   eax,eax
   14000b401:	je     0x14000b51e
   14000b407:	mov    rcx,QWORD PTR [r14+0x28]
   14000b40b:	mov    QWORD PTR [r12],rcx
   14000b40f:	lea    rdx,[rsi+0x8]
   14000b413:	call   0x14000b020
   14000b418:	mov    QWORD PTR [r12],rax
   14000b41c:	jmp    0x14000b524
   14000b421:	test   BYTE PTR [rsi],dil
   14000b424:	je     0x14000b475
   14000b426:	mov    edx,edi
   14000b428:	mov    rcx,QWORD PTR [r14+0x28]
   14000b42c:	call   0x140013c38
   14000b431:	test   eax,eax
   14000b433:	je     0x14000b51e
   14000b439:	mov    edx,edi
   14000b43b:	mov    rcx,r12
   14000b43e:	call   0x140013c38
   14000b443:	test   eax,eax
   14000b445:	je     0x14000b51e
   14000b44b:	movsxd r8,DWORD PTR [rsi+0x14]
   14000b44f:	mov    rdx,QWORD PTR [r14+0x28]
   14000b453:	mov    rcx,r12
   14000b456:	call   0x140008250
   14000b45b:	cmp    DWORD PTR [rsi+0x14],0x8
   14000b45f:	jne    0x14000b524
   14000b465:	cmp    QWORD PTR [r12],rbx
   14000b469:	je     0x14000b524
   14000b46f:	mov    rcx,QWORD PTR [r12]
   14000b473:	jmp    0x14000b40f
   14000b475:	cmp    DWORD PTR [rsi+0x18],ebx
   14000b478:	je     0x14000b48b
   14000b47a:	call   0x140009630
   14000b47f:	mov    r11,rax
   14000b482:	movsxd rax,DWORD PTR [rsi+0x18]
   14000b486:	add    r11,rax
   14000b489:	jmp    0x14000b48e
   14000b48b:	mov    r11,rbx
   14000b48e:	mov    edx,edi
   14000b490:	mov    rcx,QWORD PTR [r14+0x28]
   14000b494:	test   r11,r11
   14000b497:	jne    0x14000b4d1
   14000b499:	call   0x140013c38
   14000b49e:	test   eax,eax
   14000b4a0:	je     0x14000b51e
   14000b4a2:	mov    edx,edi
   14000b4a4:	mov    rcx,r12
   14000b4a7:	call   0x140013c38
   14000b4ac:	test   eax,eax
   14000b4ae:	je     0x14000b51e
   14000b4b0:	movsxd r10,DWORD PTR [rsi+0x14]
   14000b4b4:	lea    rdx,[rsi+0x8]
   14000b4b8:	mov    rcx,QWORD PTR [r14+0x28]
   14000b4bc:	call   0x14000b020
   14000b4c1:	mov    rdx,rax
   14000b4c4:	mov    r8,r10
   14000b4c7:	mov    rcx,r12
   14000b4ca:	call   0x140008250
   14000b4cf:	jmp    0x14000b524
   14000b4d1:	call   0x140013c38
   14000b4d6:	test   eax,eax
   14000b4d8:	je     0x14000b51e
   14000b4da:	mov    edx,edi
   14000b4dc:	mov    rcx,r12
   14000b4df:	call   0x140013c38
   14000b4e4:	test   eax,eax
   14000b4e6:	je     0x14000b51e
   14000b4e8:	cmp    DWORD PTR [rsi+0x18],ebx
   14000b4eb:	je     0x14000b4fe
   14000b4ed:	call   0x140009630
   14000b4f2:	mov    rcx,rax
   14000b4f5:	movsxd rax,DWORD PTR [rsi+0x18]
   14000b4f9:	add    rcx,rax
   14000b4fc:	jmp    0x14000b501
   14000b4fe:	mov    rcx,rbx
   14000b501:	call   0x140013c38
   14000b506:	test   eax,eax
   14000b508:	je     0x14000b51e
   14000b50a:	mov    al,BYTE PTR [rsi]
   14000b50c:	and    al,0x4
   14000b50e:	neg    al
   14000b510:	sbb    ecx,ecx
   14000b512:	neg    ecx
   14000b514:	add    ecx,edi
   14000b516:	mov    ebx,ecx
   14000b518:	mov    DWORD PTR [rsp+0x20],ecx
   14000b51c:	jmp    0x14000b524
   14000b51e:	call   0x140011254
   14000b523:	nop
   14000b524:	mov    eax,ebx
   14000b526:	jmp    0x14000b530
   14000b528:	call   0x140011230
   14000b52d:	nop
   14000b52e:	xor    eax,eax
   14000b530:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b535:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b53a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b53f:	add    rsp,0x30
   14000b543:	pop    r14
   14000b545:	pop    r13
   14000b547:	pop    r12
   14000b549:	ret    
   14000b54a:	int3   
   14000b54b:	int3   
   14000b54c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b551:	mov    QWORD PTR [rsp+0x10],rsi
   14000b556:	push   rdi
   14000b557:	sub    rsp,0x20
   14000b55b:	mov    rbx,r9
   14000b55e:	mov    rsi,rcx
   14000b561:	test   DWORD PTR [r8],0x80000000
   14000b568:	je     0x14000b56f
   14000b56a:	mov    rdi,rdx
   14000b56d:	jmp    0x14000b576
   14000b56f:	movsxd rdi,DWORD PTR [r8+0x8]
   14000b573:	add    rdi,QWORD PTR [rdx]
   14000b576:	call   0x14000b348
   14000b57b:	dec    eax
   14000b57d:	je     0x14000b5b9
   14000b57f:	dec    eax
   14000b581:	jne    0x14000b5e4
   14000b583:	xor    r10d,r10d
   14000b586:	cmp    DWORD PTR [rbx+0x18],r10d
   14000b58a:	je     0x14000b59b
   14000b58c:	call   0x140009630
   14000b591:	mov    r10,rax
   14000b594:	movsxd rax,DWORD PTR [rbx+0x18]
   14000b598:	add    r10,rax
   14000b59b:	lea    rdx,[rbx+0x8]
   14000b59f:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b5a3:	call   0x14000b020
   14000b5a8:	mov    rdx,rax
   14000b5ab:	mov    r8d,0x1
   14000b5b1:	mov    rcx,rdi
   14000b5b4:	call   r10
   14000b5b7:	jmp    0x14000b5e4
   14000b5b9:	xor    r10d,r10d
   14000b5bc:	cmp    DWORD PTR [rbx+0x18],r10d
   14000b5c0:	je     0x14000b5ce
   14000b5c2:	call   0x140009630
   14000b5c7:	movsxd r10,DWORD PTR [rbx+0x18]
   14000b5cb:	add    r10,rax
   14000b5ce:	lea    rdx,[rbx+0x8]
   14000b5d2:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b5d6:	call   0x14000b020
   14000b5db:	mov    rdx,rax
   14000b5de:	mov    rcx,rdi
   14000b5e1:	call   r10
   14000b5e4:	jmp    0x14000b5ec
   14000b5e6:	call   0x140011230
   14000b5eb:	nop
   14000b5ec:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5f1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b5f6:	add    rsp,0x20
   14000b5fa:	pop    rdi
   14000b5fb:	ret    
   14000b5fc:	mov    rax,rsp
   14000b5ff:	mov    QWORD PTR [rax+0x8],rbx
   14000b603:	mov    QWORD PTR [rax+0x18],rbp
   14000b607:	push   rsi
   14000b608:	push   rdi
   14000b609:	push   r12
   14000b60b:	push   r13
   14000b60d:	push   r14
   14000b60f:	sub    rsp,0x50
   14000b613:	mov    r13,QWORD PTR [rsp+0xa0]
   14000b61b:	mov    rbp,r9
   14000b61e:	mov    r12,rdx
   14000b621:	mov    r14,r8
   14000b624:	mov    rbx,rcx
   14000b627:	lea    r9,[rax+0x10]
   14000b62b:	mov    r8,r13
   14000b62e:	mov    rdx,rbp
   14000b631:	mov    rcx,r12
   14000b634:	call   0x14000952c
   14000b639:	mov    r9,QWORD PTR [rsp+0xb0]
   14000b641:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b649:	mov    rdi,rax
   14000b64c:	test   r9,r9
   14000b64f:	je     0x14000b65f
   14000b651:	mov    r8,rsi
   14000b654:	mov    rdx,rax
   14000b657:	mov    rcx,rbx
   14000b65a:	call   0x14000b54c
   14000b65f:	call   0x140009618
   14000b664:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000b668:	mov    r9,rdi
   14000b66b:	add    rax,rcx
   14000b66e:	mov    cl,BYTE PTR [rsp+0xc0]
   14000b675:	mov    r8,r14
   14000b678:	mov    BYTE PTR [rsp+0x40],cl
   14000b67c:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000b684:	mov    QWORD PTR [rsp+0x38],rbp
   14000b689:	mov    edx,DWORD PTR [rcx]
   14000b68b:	mov    QWORD PTR [rsp+0x30],r13
   14000b690:	mov    rcx,r12
   14000b693:	mov    DWORD PTR [rsp+0x28],edx
   14000b697:	mov    rdx,rbx
   14000b69a:	mov    QWORD PTR [rsp+0x20],rax
   14000b69f:	call   0x140009ab0
   14000b6a4:	lea    r11,[rsp+0x50]
   14000b6a9:	mov    rbx,QWORD PTR [r11+0x30]
   14000b6ad:	mov    rbp,QWORD PTR [r11+0x40]
   14000b6b1:	mov    rsp,r11
   14000b6b4:	pop    r14
   14000b6b6:	pop    r13
   14000b6b8:	pop    r12
   14000b6ba:	pop    rdi
   14000b6bb:	pop    rsi
   14000b6bc:	ret    
   14000b6bd:	int3   
   14000b6be:	int3   
   14000b6bf:	int3   
   14000b6c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b6c5:	mov    QWORD PTR [rsp+0x18],r8
   14000b6ca:	push   rbp
   14000b6cb:	push   rsi
   14000b6cc:	push   rdi
   14000b6cd:	push   r12
   14000b6cf:	push   r13
   14000b6d1:	push   r14
   14000b6d3:	push   r15
   14000b6d5:	sub    rsp,0x60
   14000b6d9:	cmp    DWORD PTR [rcx],0x80000003
   14000b6df:	mov    r14,r9
   14000b6e2:	mov    r12,r8
   14000b6e5:	mov    r15,rdx
   14000b6e8:	mov    rsi,rcx
   14000b6eb:	je     0x14000b8e0
   14000b6f1:	call   0x14000d728
   14000b6f6:	mov    edi,DWORD PTR [rsp+0xd0]
   14000b6fd:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000b705:	cmp    QWORD PTR [rax+0xe0],0x0
   14000b70d:	je     0x14000b764
   14000b70f:	call   0x14000d728
   14000b714:	mov    rbx,rax
   14000b717:	call   0x14000d5b8
   14000b71c:	cmp    QWORD PTR [rbx+0xe0],rax
   14000b723:	je     0x14000b764
   14000b725:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000b72b:	je     0x14000b764
   14000b72d:	cmp    DWORD PTR [rsi],0xe0434352
   14000b733:	je     0x14000b764
   14000b735:	mov    rax,QWORD PTR [rsp+0xd8]
   14000b73d:	mov    r9,r14
   14000b740:	mov    r8,r12
   14000b743:	mov    QWORD PTR [rsp+0x30],rax
   14000b748:	mov    rdx,r15
   14000b74b:	mov    rcx,rsi
   14000b74e:	mov    DWORD PTR [rsp+0x28],edi
   14000b752:	mov    QWORD PTR [rsp+0x20],rbp
   14000b757:	call   0x140009858
   14000b75c:	test   eax,eax
   14000b75e:	jne    0x14000b8e0
   14000b764:	cmp    DWORD PTR [rbp+0xc],0x0
   14000b768:	jne    0x14000b76f
   14000b76a:	call   0x140011254
   14000b76f:	mov    r12d,DWORD PTR [rsp+0xc8]
   14000b777:	lea    rax,[rsp+0x50]
   14000b77c:	mov    QWORD PTR [rsp+0x30],r14
   14000b781:	mov    QWORD PTR [rsp+0x28],rax
   14000b786:	lea    rax,[rsp+0xa0]
   14000b78e:	mov    r8d,edi
   14000b791:	mov    r9d,r12d
   14000b794:	mov    rdx,rbp
   14000b797:	mov    rcx,r15
   14000b79a:	mov    QWORD PTR [rsp+0x20],rax
   14000b79f:	call   0x1400098ac
   14000b7a4:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000b7ab:	cmp    ecx,DWORD PTR [rsp+0x50]
   14000b7af:	jae    0x14000b8e0
   14000b7b5:	lea    rdi,[rax+0xc]
   14000b7b9:	lea    r13,[rdi-0xc]
   14000b7bd:	cmp    r12d,DWORD PTR [r13+0x0]
   14000b7c1:	jl     0x14000b8c9
   14000b7c7:	cmp    r12d,DWORD PTR [rdi-0x8]
   14000b7cb:	jg     0x14000b8c9
   14000b7d1:	call   0x140009618
   14000b7d6:	movsxd rcx,DWORD PTR [rdi]
   14000b7d9:	lea    rdx,[rcx+rcx*4]
   14000b7dd:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b7e1:	lea    rdx,[rcx+rdx*4]
   14000b7e5:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000b7ea:	je     0x14000b80f
   14000b7ec:	call   0x140009618
   14000b7f1:	movsxd rcx,DWORD PTR [rdi]
   14000b7f4:	lea    rdx,[rcx+rcx*4]
   14000b7f8:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b7fc:	lea    rdx,[rcx+rdx*4]
   14000b800:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000b805:	call   0x140009618
   14000b80a:	add    rax,rbx
   14000b80d:	jmp    0x14000b811
   14000b80f:	xor    eax,eax
   14000b811:	test   rax,rax
   14000b814:	je     0x14000b85c
   14000b816:	call   0x140009618
   14000b81b:	movsxd rcx,DWORD PTR [rdi]
   14000b81e:	lea    rdx,[rcx+rcx*4]
   14000b822:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b826:	lea    rdx,[rcx+rdx*4]
   14000b82a:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000b82f:	je     0x14000b854
   14000b831:	call   0x140009618
   14000b836:	movsxd rcx,DWORD PTR [rdi]
   14000b839:	lea    rdx,[rcx+rcx*4]
   14000b83d:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b841:	lea    rdx,[rcx+rdx*4]
   14000b845:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000b84a:	call   0x140009618
   14000b84f:	add    rax,rbx
   14000b852:	jmp    0x14000b856
   14000b854:	xor    eax,eax
   14000b856:	cmp    BYTE PTR [rax+0x10],0x0
   14000b85a:	jne    0x14000b8c2
   14000b85c:	call   0x140009618
   14000b861:	movsxd rcx,DWORD PTR [rdi]
   14000b864:	lea    rdx,[rcx+rcx*4]
   14000b868:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b86c:	lea    rdx,[rcx+rdx*4]
   14000b870:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000b875:	jne    0x14000b8c2
   14000b877:	call   0x140009618
   14000b87c:	mov    ecx,DWORD PTR [rdi]
   14000b87e:	mov    r8,QWORD PTR [rsp+0xb0]
   14000b886:	dec    ecx
   14000b888:	mov    BYTE PTR [rsp+0x40],0x0
   14000b88d:	mov    QWORD PTR [rsp+0x38],r13
   14000b892:	and    QWORD PTR [rsp+0x30],0x0
   14000b898:	movsxd rcx,ecx
   14000b89b:	mov    r9,r14
   14000b89e:	lea    rdx,[rcx+rcx*4]
   14000b8a2:	lea    rcx,[rax+rdx*4]
   14000b8a6:	movsxd rax,DWORD PTR [rdi+0x4]
   14000b8aa:	mov    rdx,r15
   14000b8ad:	add    rcx,rax
   14000b8b0:	mov    QWORD PTR [rsp+0x28],rcx
   14000b8b5:	mov    rcx,rsi
   14000b8b8:	mov    QWORD PTR [rsp+0x20],rbp
   14000b8bd:	call   0x14000b5fc
   14000b8c2:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000b8c9:	inc    ecx
   14000b8cb:	add    rdi,0x14
   14000b8cf:	mov    DWORD PTR [rsp+0xa0],ecx
   14000b8d6:	cmp    ecx,DWORD PTR [rsp+0x50]
   14000b8da:	jb     0x14000b7b9
   14000b8e0:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000b8e8:	add    rsp,0x60
   14000b8ec:	pop    r15
   14000b8ee:	pop    r14
   14000b8f0:	pop    r13
   14000b8f2:	pop    r12
   14000b8f4:	pop    rdi
   14000b8f5:	pop    rsi
   14000b8f6:	pop    rbp
   14000b8f7:	ret    
   14000b8f8:	mov    rax,rsp
   14000b8fb:	mov    QWORD PTR [rax+0x20],rbx
   14000b8ff:	mov    QWORD PTR [rax+0x18],r8
   14000b903:	mov    QWORD PTR [rax+0x10],rdx
   14000b907:	push   rbp
   14000b908:	push   rsi
   14000b909:	push   rdi
   14000b90a:	push   r12
   14000b90c:	push   r13
   14000b90e:	push   r14
   14000b910:	push   r15
   14000b912:	lea    rbp,[rax-0x3f]
   14000b916:	sub    rsp,0x90
   14000b91d:	mov    rbx,QWORD PTR [rbp+0x67]
   14000b921:	mov    r13,rdx
   14000b924:	mov    rdi,rcx
   14000b927:	xor    r14b,r14b
   14000b92a:	mov    rdx,r9
   14000b92d:	mov    rcx,rbx
   14000b930:	mov    r15,r9
   14000b933:	mov    r12,r8
   14000b936:	mov    BYTE PTR [rbp+0x47],r14b
   14000b93a:	call   0x14001118c
   14000b93f:	lea    r9,[rbp-0x21]
   14000b943:	mov    r8,rbx
   14000b946:	mov    rdx,r15
   14000b949:	mov    rcx,r13
   14000b94c:	mov    esi,eax
   14000b94e:	call   0x14000952c
   14000b953:	mov    r8,rbx
   14000b956:	mov    rdx,r15
   14000b959:	mov    rcx,r13
   14000b95c:	call   0x140011204
   14000b961:	mov    r8,rbx
   14000b964:	mov    rdx,r15
   14000b967:	cmp    esi,eax
   14000b969:	jle    0x14000b98a
   14000b96b:	lea    rcx,[rbp-0x21]
   14000b96f:	mov    r9d,esi
   14000b972:	call   0x1400111bc
   14000b977:	mov    r9d,esi
   14000b97a:	mov    r8,rbx
   14000b97d:	mov    rdx,r15
   14000b980:	mov    rcx,r13
   14000b983:	call   0x1400111c8
   14000b988:	jmp    0x14000b994
   14000b98a:	mov    rcx,r13
   14000b98d:	call   0x140011204
   14000b992:	mov    esi,eax
   14000b994:	cmp    esi,0xffffffff
   14000b997:	jl     0x14000b99e
   14000b999:	cmp    esi,DWORD PTR [rbx+0x4]
   14000b99c:	jl     0x14000b9a3
   14000b99e:	call   0x140011254
   14000b9a3:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b9a9:	jne    0x14000bd87
   14000b9af:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b9b3:	jne    0x14000bb4a
   14000b9b9:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000b9c0:	je     0x14000b9d8
   14000b9c2:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000b9c9:	je     0x14000b9d8
   14000b9cb:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000b9d2:	jne    0x14000bb4a
   14000b9d8:	cmp    QWORD PTR [rdi+0x30],0x0
   14000b9dd:	jne    0x14000bb4a
   14000b9e3:	call   0x14000d728
   14000b9e8:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b9f0:	je     0x14000bd6c
   14000b9f6:	call   0x14000d728
   14000b9fb:	mov    rdi,QWORD PTR [rax+0xf0]
   14000ba02:	call   0x14000d728
   14000ba07:	mov    rcx,QWORD PTR [rdi+0x38]
   14000ba0b:	mov    r12,QWORD PTR [rax+0xf8]
   14000ba12:	mov    QWORD PTR [rbp+0x57],r12
   14000ba16:	call   0x140009664
   14000ba1b:	mov    edx,0x1
   14000ba20:	mov    rcx,rdi
   14000ba23:	call   0x140013c38
   14000ba28:	test   eax,eax
   14000ba2a:	jne    0x14000ba31
   14000ba2c:	call   0x140011254
   14000ba31:	cmp    DWORD PTR [rdi],0xe06d7363
   14000ba37:	jne    0x14000ba66
   14000ba39:	cmp    DWORD PTR [rdi+0x18],0x4
   14000ba3d:	jne    0x14000ba66
   14000ba3f:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000ba46:	je     0x14000ba5a
   14000ba48:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000ba4f:	je     0x14000ba5a
   14000ba51:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000ba58:	jne    0x14000ba66
   14000ba5a:	cmp    QWORD PTR [rdi+0x30],0x0
   14000ba5f:	jne    0x14000ba66
   14000ba61:	call   0x140011254
   14000ba66:	call   0x14000d728
   14000ba6b:	cmp    QWORD PTR [rax+0x108],0x0
   14000ba73:	je     0x14000bb4a
   14000ba79:	call   0x14000d728
   14000ba7e:	mov    r12,QWORD PTR [rax+0x108]
   14000ba85:	call   0x14000d728
   14000ba8a:	mov    rdx,r12
   14000ba8d:	and    QWORD PTR [rax+0x108],0x0
   14000ba95:	mov    rcx,rdi
   14000ba98:	call   0x14000b060
   14000ba9d:	test   al,al
   14000ba9f:	jne    0x14000bb46
   14000baa5:	xor    r13d,r13d
   14000baa8:	cmp    DWORD PTR [r12],r13d
   14000baac:	jle    0x14000bb02
   14000baae:	xor    esi,esi
   14000bab0:	call   0x140009618
   14000bab5:	movsxd rcx,DWORD PTR [r12+0x4]
   14000baba:	add    rax,rsi
   14000babd:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000bac2:	je     0x14000bae0
   14000bac4:	call   0x140009618
   14000bac9:	movsxd rcx,DWORD PTR [r12+0x4]
   14000bace:	add    rax,rsi
   14000bad1:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000bad6:	call   0x140009618
   14000badb:	add    rax,rbx
   14000bade:	jmp    0x14000bae2
   14000bae0:	xor    eax,eax
   14000bae2:	lea    rdx,[rip+0x158ff]        # 0x1400213e8
   14000bae9:	mov    rcx,rax
   14000baec:	call   0x140008770
   14000baf1:	test   al,al
   14000baf3:	jne    0x14000bb08
   14000baf5:	inc    r13d
   14000baf8:	add    rsi,0x14
   14000bafc:	cmp    r13d,DWORD PTR [r12]
   14000bb00:	jl     0x14000bab0
   14000bb02:	call   0x140011230
   14000bb07:	int3   
   14000bb08:	mov    dl,0x1
   14000bb0a:	mov    rcx,rdi
   14000bb0d:	call   0x14000afdc
   14000bb12:	lea    r11,[rip+0xce6f]        # 0x140018988
   14000bb19:	lea    rdx,[rbp+0x47]
   14000bb1d:	lea    rcx,[rbp-0x11]
   14000bb21:	mov    QWORD PTR [rbp+0x47],r11
   14000bb25:	call   0x140008104
   14000bb2a:	lea    r11,[rip+0xce47]        # 0x140018978
   14000bb31:	lea    rdx,[rip+0x13948]        # 0x14001f480
   14000bb38:	lea    rcx,[rbp-0x11]
   14000bb3c:	mov    QWORD PTR [rbp-0x11],r11
   14000bb40:	call   0x140009498
   14000bb45:	int3   
   14000bb46:	mov    r12,QWORD PTR [rbp+0x57]
   14000bb4a:	cmp    DWORD PTR [rdi],0xe06d7363
   14000bb50:	jne    0x14000bd87
   14000bb56:	cmp    DWORD PTR [rdi+0x18],0x4
   14000bb5a:	jne    0x14000bd87
   14000bb60:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000bb67:	je     0x14000bb7f
   14000bb69:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000bb70:	je     0x14000bb7f
   14000bb72:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000bb79:	jne    0x14000bd87
   14000bb7f:	cmp    DWORD PTR [rbx+0xc],0x0
   14000bb83:	jbe    0x14000bccc
   14000bb89:	mov    r8d,DWORD PTR [rbp+0x77]
   14000bb8d:	lea    rax,[rbp-0x31]
   14000bb91:	mov    QWORD PTR [rsp+0x30],r15
   14000bb96:	mov    QWORD PTR [rsp+0x28],rax
   14000bb9b:	lea    rax,[rbp-0x39]
   14000bb9f:	mov    r9d,esi
   14000bba2:	mov    rdx,rbx
   14000bba5:	mov    rcx,r13
   14000bba8:	mov    QWORD PTR [rsp+0x20],rax
   14000bbad:	call   0x1400098ac
   14000bbb2:	mov    ecx,DWORD PTR [rbp-0x39]
   14000bbb5:	mov    edx,DWORD PTR [rbp-0x31]
   14000bbb8:	cmp    ecx,edx
   14000bbba:	jae    0x14000bccc
   14000bbc0:	lea    r12,[rax+0x10]
   14000bbc4:	cmp    DWORD PTR [r12-0x10],esi
   14000bbc9:	jg     0x14000bcb2
   14000bbcf:	cmp    esi,DWORD PTR [r12-0xc]
   14000bbd4:	jg     0x14000bcb2
   14000bbda:	call   0x140009618
   14000bbdf:	movsxd r13,DWORD PTR [r12]
   14000bbe3:	mov    r14d,DWORD PTR [r12-0x4]
   14000bbe8:	add    r13,rax
   14000bbeb:	test   r14d,r14d
   14000bbee:	jle    0x14000bca4
   14000bbf4:	call   0x140009630
   14000bbf9:	mov    rcx,QWORD PTR [rdi+0x30]
   14000bbfd:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000bc01:	lea    rax,[rax+rdx*1+0x4]
   14000bc06:	mov    QWORD PTR [rbp-0x29],rax
   14000bc0a:	call   0x140009630
   14000bc0f:	mov    rcx,QWORD PTR [rdi+0x30]
   14000bc13:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000bc17:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000bc1a:	mov    DWORD PTR [rbp-0x35],ecx
   14000bc1d:	test   ecx,ecx
   14000bc1f:	jle    0x14000bc58
   14000bc21:	call   0x140009630
   14000bc26:	mov    rcx,QWORD PTR [rbp-0x29]
   14000bc2a:	mov    r8,QWORD PTR [rdi+0x30]
   14000bc2e:	movsxd rcx,DWORD PTR [rcx]
   14000bc31:	add    rax,rcx
   14000bc34:	mov    rcx,r13
   14000bc37:	mov    rdx,rax
   14000bc3a:	mov    QWORD PTR [rbp-0x19],rax
   14000bc3e:	call   0x14000acd8
   14000bc43:	test   eax,eax
   14000bc45:	jne    0x14000bc61
   14000bc47:	mov    eax,DWORD PTR [rbp-0x35]
   14000bc4a:	add    QWORD PTR [rbp-0x29],0x4
   14000bc4f:	dec    eax
   14000bc51:	mov    DWORD PTR [rbp-0x35],eax
   14000bc54:	test   eax,eax
   14000bc56:	jg     0x14000bc21
   14000bc58:	dec    r14d
   14000bc5b:	add    r13,0x14
   14000bc5f:	jmp    0x14000bbeb
   14000bc61:	mov    al,BYTE PTR [rbp+0x6f]
   14000bc64:	mov    r8,QWORD PTR [rbp+0x57]
   14000bc68:	mov    r14b,0x1
   14000bc6b:	mov    BYTE PTR [rsp+0x40],al
   14000bc6f:	lea    rax,[r12-0x10]
   14000bc74:	mov    r9,r15
   14000bc77:	mov    QWORD PTR [rsp+0x38],rax
   14000bc7c:	mov    rax,QWORD PTR [rbp-0x19]
   14000bc80:	mov    rcx,rdi
   14000bc83:	mov    QWORD PTR [rsp+0x30],rax
   14000bc88:	mov    QWORD PTR [rsp+0x28],r13
   14000bc8d:	mov    r13,QWORD PTR [rbp+0x4f]
   14000bc91:	mov    rdx,r13
   14000bc94:	mov    BYTE PTR [rbp+0x47],r14b
   14000bc98:	mov    QWORD PTR [rsp+0x20],rbx
   14000bc9d:	call   0x14000b5fc
   14000bca2:	jmp    0x14000bcac
   14000bca4:	mov    r14b,BYTE PTR [rbp+0x47]
   14000bca8:	mov    r13,QWORD PTR [rbp+0x4f]
   14000bcac:	mov    edx,DWORD PTR [rbp-0x31]
   14000bcaf:	mov    ecx,DWORD PTR [rbp-0x39]
   14000bcb2:	inc    ecx
   14000bcb4:	add    r12,0x14
   14000bcb8:	mov    DWORD PTR [rbp-0x39],ecx
   14000bcbb:	cmp    ecx,edx
   14000bcbd:	jb     0x14000bbc4
   14000bcc3:	test   r14b,r14b
   14000bcc6:	jne    0x14000bd58
   14000bccc:	mov    eax,DWORD PTR [rbx]
   14000bcce:	and    eax,0x1fffffff
   14000bcd3:	cmp    eax,0x19930521
   14000bcd8:	jb     0x14000bd58
   14000bcda:	mov    esi,DWORD PTR [rbx+0x20]
   14000bcdd:	test   esi,esi
   14000bcdf:	je     0x14000bcee
   14000bce1:	movsxd rsi,esi
   14000bce4:	call   0x140009618
   14000bce9:	add    rax,rsi
   14000bcec:	jmp    0x14000bcf0
   14000bcee:	xor    eax,eax
   14000bcf0:	test   rax,rax
   14000bcf3:	je     0x14000bd58
   14000bcf5:	test   esi,esi
   14000bcf7:	je     0x14000bd0a
   14000bcf9:	call   0x140009618
   14000bcfe:	mov    rdx,rax
   14000bd01:	movsxd rax,DWORD PTR [rbx+0x20]
   14000bd05:	add    rdx,rax
   14000bd08:	jmp    0x14000bd0c
   14000bd0a:	xor    edx,edx
   14000bd0c:	mov    rcx,rdi
   14000bd0f:	call   0x14000b060
   14000bd14:	test   al,al
   14000bd16:	jne    0x14000bd58
   14000bd18:	lea    r9,[rbp+0x47]
   14000bd1c:	mov    r8,rbx
   14000bd1f:	mov    rdx,r15
   14000bd22:	mov    rcx,r13
   14000bd25:	call   0x14000952c
   14000bd2a:	mov    cl,BYTE PTR [rbp+0x6f]
   14000bd2d:	mov    r8,QWORD PTR [rbp+0x57]
   14000bd31:	mov    BYTE PTR [rsp+0x40],cl
   14000bd35:	mov    QWORD PTR [rsp+0x38],r15
   14000bd3a:	mov    QWORD PTR [rsp+0x30],rbx
   14000bd3f:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000bd44:	and    QWORD PTR [rsp+0x20],0x0
   14000bd4a:	mov    r9,rax
   14000bd4d:	mov    rdx,rdi
   14000bd50:	mov    rcx,r13
   14000bd53:	call   0x140009ab0
   14000bd58:	call   0x14000d728
   14000bd5d:	cmp    QWORD PTR [rax+0x108],0x0
   14000bd65:	je     0x14000bd6c
   14000bd67:	call   0x140011254
   14000bd6c:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000bd74:	add    rsp,0x90
   14000bd7b:	pop    r15
   14000bd7d:	pop    r14
   14000bd7f:	pop    r13
   14000bd81:	pop    r12
   14000bd83:	pop    rdi
   14000bd84:	pop    rsi
   14000bd85:	pop    rbp
   14000bd86:	ret    
   14000bd87:	cmp    DWORD PTR [rbx+0xc],0x0
   14000bd8b:	jbe    0x14000bd58
   14000bd8d:	cmp    BYTE PTR [rbp+0x6f],0x0
   14000bd91:	jne    0x14000bdbf
   14000bd93:	mov    rax,QWORD PTR [rbp+0x7f]
   14000bd97:	mov    r9,r15
   14000bd9a:	mov    r8,r12
   14000bd9d:	mov    QWORD PTR [rsp+0x38],rax
   14000bda2:	mov    eax,DWORD PTR [rbp+0x77]
   14000bda5:	mov    rdx,r13
   14000bda8:	mov    DWORD PTR [rsp+0x30],eax
   14000bdac:	mov    rcx,rdi
   14000bdaf:	mov    DWORD PTR [rsp+0x28],esi
   14000bdb3:	mov    QWORD PTR [rsp+0x20],rbx
   14000bdb8:	call   0x14000b6c0
   14000bdbd:	jmp    0x14000bd58
   14000bdbf:	call   0x140011230
   14000bdc4:	int3   
   14000bdc5:	int3   
   14000bdc6:	int3   
   14000bdc7:	int3   
   14000bdc8:	rex push rbx
   14000bdca:	sub    rsp,0x20
   14000bdce:	mov    rbx,rcx
   14000bdd1:	call   0x1400081b4
   14000bdd6:	lea    r11,[rip+0xcb9b]        # 0x140018978
   14000bddd:	mov    QWORD PTR [rbx],r11
   14000bde0:	mov    rax,rbx
   14000bde3:	add    rsp,0x20
   14000bde7:	pop    rbx
   14000bde8:	ret    
   14000bde9:	int3   
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	mov    QWORD PTR [rsp+0x8],rbx
   14000bdf1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bdf6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdfb:	push   rdi
   14000bdfc:	push   r12
   14000bdfe:	push   r14
   14000be00:	sub    rsp,0x40
   14000be04:	mov    rbp,r9
   14000be07:	mov    r12,r8
   14000be0a:	mov    rsi,rdx
   14000be0d:	mov    rbx,rcx
   14000be10:	call   0x14000d728
   14000be15:	mov    rdi,QWORD PTR [rsp+0x80]
   14000be1d:	cmp    DWORD PTR [rax+0x2c0],0x0
   14000be24:	mov    edx,0x1fffffff
   14000be29:	mov    r8d,0x80000029
   14000be2f:	mov    r9d,0x80000026
   14000be35:	mov    r14d,0x1
   14000be3b:	jne    0x14000be75
   14000be3d:	cmp    DWORD PTR [rbx],0xe06d7363
   14000be43:	je     0x14000be75
   14000be45:	cmp    DWORD PTR [rbx],r8d
   14000be48:	jne    0x14000be5a
   14000be4a:	cmp    DWORD PTR [rbx+0x18],0xf
   14000be4e:	jne    0x14000be5a
   14000be50:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000be58:	je     0x14000be75
   14000be5a:	cmp    DWORD PTR [rbx],r9d
   14000be5d:	je     0x14000be75
   14000be5f:	mov    ecx,DWORD PTR [rdi]
   14000be61:	and    ecx,edx
   14000be63:	cmp    ecx,0x19930522
   14000be69:	jb     0x14000be75
   14000be6b:	test   BYTE PTR [rdi+0x24],r14b
   14000be6f:	jne    0x14000bff5
   14000be75:	mov    eax,DWORD PTR [rbx+0x4]
   14000be78:	test   al,0x66
   14000be7a:	je     0x14000bf13
   14000be80:	cmp    DWORD PTR [rdi+0x4],0x0
   14000be84:	je     0x14000bff5
   14000be8a:	cmp    DWORD PTR [rsp+0x88],0x0
   14000be92:	jne    0x14000bff5
   14000be98:	and    eax,0x20
   14000be9b:	je     0x14000bedc
   14000be9d:	cmp    DWORD PTR [rbx],r9d
   14000bea0:	jne    0x14000bedc
   14000bea2:	mov    r8,QWORD PTR [r12+0xf8]
   14000beaa:	mov    rdx,rbp
   14000bead:	mov    rcx,rdi
   14000beb0:	call   0x140011100
   14000beb5:	mov    ebx,eax
   14000beb7:	cmp    eax,0xffffffff
   14000beba:	jl     0x14000bec1
   14000bebc:	cmp    eax,DWORD PTR [rdi+0x4]
   14000bebf:	jl     0x14000bec6
   14000bec1:	call   0x140011254
   14000bec6:	mov    r9d,ebx
   14000bec9:	mov    rcx,rsi
   14000becc:	mov    rdx,rbp
   14000becf:	mov    r8,rdi
   14000bed2:	call   0x14000ae50
   14000bed7:	jmp    0x14000bff5
   14000bedc:	test   eax,eax
   14000bede:	je     0x14000bf00
   14000bee0:	cmp    DWORD PTR [rbx],r8d
   14000bee3:	jne    0x14000bf00
   14000bee5:	mov    esi,DWORD PTR [rbx+0x38]
   14000bee8:	cmp    esi,0xffffffff
   14000beeb:	jl     0x14000bef2
   14000beed:	cmp    esi,DWORD PTR [rdi+0x4]
   14000bef0:	jl     0x14000bef7
   14000bef2:	call   0x140011254
   14000bef7:	mov    rcx,QWORD PTR [rbx+0x28]
   14000befb:	mov    r9d,esi
   14000befe:	jmp    0x14000becc
   14000bf00:	mov    r8,rdi
   14000bf03:	mov    rdx,rbp
   14000bf06:	mov    rcx,rsi
   14000bf09:	call   0x140009680
   14000bf0e:	jmp    0x14000bff5
   14000bf13:	cmp    DWORD PTR [rdi+0xc],0x0
   14000bf17:	jne    0x14000bf47
   14000bf19:	mov    eax,DWORD PTR [rdi]
   14000bf1b:	and    eax,edx
   14000bf1d:	cmp    eax,0x19930521
   14000bf22:	jb     0x14000bff5
   14000bf28:	cmp    DWORD PTR [rdi+0x20],0x0
   14000bf2c:	je     0x14000bf3c
   14000bf2e:	call   0x140009618
   14000bf33:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000bf37:	add    rax,rcx
   14000bf3a:	jmp    0x14000bf3e
   14000bf3c:	xor    eax,eax
   14000bf3e:	test   rax,rax
   14000bf41:	je     0x14000bff5
   14000bf47:	cmp    DWORD PTR [rbx],0xe06d7363
   14000bf4d:	jne    0x14000bfbc
   14000bf4f:	cmp    DWORD PTR [rbx+0x18],0x3
   14000bf53:	jb     0x14000bfbc
   14000bf55:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000bf5c:	jbe    0x14000bfbc
   14000bf5e:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf62:	cmp    DWORD PTR [rax+0x8],0x0
   14000bf66:	je     0x14000bf7a
   14000bf68:	call   0x140009630
   14000bf6d:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bf71:	movsxd r11,DWORD PTR [rcx+0x8]
   14000bf75:	add    r11,rax
   14000bf78:	jmp    0x14000bf7d
   14000bf7a:	xor    r11d,r11d
   14000bf7d:	test   r11,r11
   14000bf80:	je     0x14000bfbc
   14000bf82:	movzx  eax,BYTE PTR [rsp+0x98]
   14000bf8a:	mov    r9,rbp
   14000bf8d:	mov    r8,r12
   14000bf90:	mov    DWORD PTR [rsp+0x38],eax
   14000bf94:	mov    rax,QWORD PTR [rsp+0x90]
   14000bf9c:	mov    rdx,rsi
   14000bf9f:	mov    QWORD PTR [rsp+0x30],rax
   14000bfa4:	mov    eax,DWORD PTR [rsp+0x88]
   14000bfab:	mov    rcx,rbx
   14000bfae:	mov    DWORD PTR [rsp+0x28],eax
   14000bfb2:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfb7:	call   r11
   14000bfba:	jmp    0x14000bff8
   14000bfbc:	mov    rax,QWORD PTR [rsp+0x90]
   14000bfc4:	mov    r9,rbp
   14000bfc7:	mov    r8,r12
   14000bfca:	mov    QWORD PTR [rsp+0x38],rax
   14000bfcf:	mov    eax,DWORD PTR [rsp+0x88]
   14000bfd6:	mov    rdx,rsi
   14000bfd9:	mov    DWORD PTR [rsp+0x30],eax
   14000bfdd:	mov    al,BYTE PTR [rsp+0x98]
   14000bfe4:	mov    rcx,rbx
   14000bfe7:	mov    BYTE PTR [rsp+0x28],al
   14000bfeb:	mov    QWORD PTR [rsp+0x20],rdi
   14000bff0:	call   0x14000b8f8
   14000bff5:	mov    eax,r14d
   14000bff8:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bffd:	mov    rbp,QWORD PTR [rsp+0x68]
   14000c002:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c007:	add    rsp,0x40
   14000c00b:	pop    r14
   14000c00d:	pop    r12
   14000c00f:	pop    rdi
   14000c010:	ret    
   14000c011:	int3   
   14000c012:	int3   
   14000c013:	int3   
   14000c014:	mov    QWORD PTR [rsp+0x8],rbx
   14000c019:	mov    QWORD PTR [rsp+0x10],rsi
   14000c01e:	push   rdi
   14000c01f:	sub    rsp,0x30
   14000c023:	movsxd rax,r9d
   14000c026:	mov    rbx,r8
   14000c029:	mov    edi,edx
   14000c02b:	mov    esi,ecx
   14000c02d:	test   r9d,r9d
   14000c030:	jle    0x14000c03d
   14000c032:	mov    rdx,rax
   14000c035:	mov    rcx,rbx
   14000c038:	call   0x140013cc4
   14000c03d:	mov    r9d,DWORD PTR [rsp+0x68]
   14000c042:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c047:	mov    r8,rbx
   14000c04a:	mov    DWORD PTR [rsp+0x28],r9d
   14000c04f:	mov    QWORD PTR [rsp+0x20],rdx
   14000c054:	mov    edx,edi
   14000c056:	mov    r9d,eax
   14000c059:	mov    ecx,esi
   14000c05b:	call   QWORD PTR [rip+0xc0d7]        # 0x140018138
   14000c061:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c066:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c06b:	add    rsp,0x30
   14000c06f:	pop    rdi
   14000c070:	ret    
   14000c071:	int3   
   14000c072:	int3   
   14000c073:	int3   
   14000c074:	rex push rbx
   14000c076:	sub    rsp,0x20
   14000c07a:	mov    r11d,DWORD PTR [r8]
   14000c07d:	mov    rbx,rdx
   14000c080:	mov    r9,rcx
   14000c083:	and    r11d,0xfffffff8
   14000c087:	test   BYTE PTR [r8],0x4
   14000c08b:	mov    r10,rcx
   14000c08e:	je     0x14000c0a3
   14000c090:	mov    eax,DWORD PTR [r8+0x8]
   14000c094:	movsxd r10,DWORD PTR [r8+0x4]
   14000c098:	neg    eax
   14000c09a:	add    r10,rcx
   14000c09d:	movsxd rcx,eax
   14000c0a0:	and    r10,rcx
   14000c0a3:	movsxd rax,r11d
   14000c0a6:	mov    rdx,QWORD PTR [rax+r10*1]
   14000c0aa:	mov    rax,QWORD PTR [rbx+0x10]
   14000c0ae:	mov    ecx,DWORD PTR [rax+0x8]
   14000c0b1:	add    rcx,QWORD PTR [rbx+0x8]
   14000c0b5:	test   BYTE PTR [rcx+0x3],0xf
   14000c0b9:	je     0x14000c0c7
   14000c0bb:	movzx  eax,BYTE PTR [rcx+0x3]
   14000c0bf:	and    eax,0xfffffff0
   14000c0c2:	cdqe   
   14000c0c4:	add    r9,rax
   14000c0c7:	xor    r9,rdx
   14000c0ca:	mov    rcx,r9
   14000c0cd:	add    rsp,0x20
   14000c0d1:	pop    rbx
   14000c0d2:	jmp    0x140007d20
   14000c0d7:	int3   
   14000c0d8:	sub    rsp,0x28
   14000c0dc:	mov    r8,QWORD PTR [r9+0x38]
   14000c0e0:	mov    rcx,rdx
   14000c0e3:	mov    rdx,r9
   14000c0e6:	call   0x14000c074
   14000c0eb:	mov    eax,0x1
   14000c0f0:	add    rsp,0x28
   14000c0f4:	ret    
   14000c0f5:	int3   
   14000c0f6:	int3   
   14000c0f7:	int3   
   14000c0f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0fd:	mov    QWORD PTR [rsp+0x10],rsi
   14000c102:	push   rdi
   14000c103:	sub    rsp,0x20
   14000c107:	mov    esi,r9d
   14000c10a:	mov    r11,r8
   14000c10d:	mov    r10,rdx
   14000c110:	mov    edi,ecx
   14000c112:	test   rdx,rdx
   14000c115:	jne    0x14000c12f
   14000c117:	call   0x140008e40
   14000c11c:	mov    ebx,0x16
   14000c121:	mov    DWORD PTR [rax],ebx
   14000c123:	call   0x14000dafc
   14000c128:	mov    eax,ebx
   14000c12a:	jmp    0x14000c1d9
   14000c12f:	test   r8,r8
   14000c132:	je     0x14000c117
   14000c134:	mov    BYTE PTR [rdx],0x0
   14000c137:	mov    edx,DWORD PTR [rsp+0x50]
   14000c13b:	mov    eax,edx
   14000c13d:	neg    eax
   14000c13f:	sbb    rcx,rcx
   14000c142:	neg    rcx
   14000c145:	inc    rcx
   14000c148:	cmp    r8,rcx
   14000c14b:	ja     0x14000c159
   14000c14d:	call   0x140008e40
   14000c152:	mov    ebx,0x22
   14000c157:	jmp    0x14000c121
   14000c159:	lea    eax,[r9-0x2]
   14000c15d:	mov    ebx,0x22
   14000c162:	cmp    eax,ebx
   14000c164:	ja     0x14000c117
   14000c166:	xor    ecx,ecx
   14000c168:	mov    r8,r10
   14000c16b:	test   edx,edx
   14000c16d:	je     0x14000c17c
   14000c16f:	mov    BYTE PTR [r10],0x2d
   14000c173:	lea    r8,[r10+0x1]
   14000c177:	lea    ecx,[rbx-0x21]
   14000c17a:	neg    edi
   14000c17c:	mov    r9,r8
   14000c17f:	xor    edx,edx
   14000c181:	mov    eax,edi
   14000c183:	div    esi
   14000c185:	mov    edi,eax
   14000c187:	cmp    edx,0x9
   14000c18a:	jbe    0x14000c191
   14000c18c:	add    dl,0x57
   14000c18f:	jmp    0x14000c194
   14000c191:	add    dl,0x30
   14000c194:	mov    BYTE PTR [r8],dl
   14000c197:	inc    rcx
   14000c19a:	inc    r8
   14000c19d:	test   eax,eax
   14000c19f:	je     0x14000c1a6
   14000c1a1:	cmp    rcx,r11
   14000c1a4:	jb     0x14000c17f
   14000c1a6:	cmp    rcx,r11
   14000c1a9:	jb     0x14000c1b9
   14000c1ab:	mov    BYTE PTR [r10],0x0
   14000c1af:	call   0x140008e40
   14000c1b4:	jmp    0x14000c121
   14000c1b9:	mov    BYTE PTR [r8],0x0
   14000c1bd:	dec    r8
   14000c1c0:	mov    al,BYTE PTR [r9]
   14000c1c3:	mov    cl,BYTE PTR [r8]
   14000c1c6:	mov    BYTE PTR [r8],al
   14000c1c9:	mov    BYTE PTR [r9],cl
   14000c1cc:	inc    r9
   14000c1cf:	dec    r8
   14000c1d2:	cmp    r9,r8
   14000c1d5:	jb     0x14000c1c0
   14000c1d7:	xor    eax,eax
   14000c1d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c1de:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c1e3:	add    rsp,0x20
   14000c1e7:	pop    rdi
   14000c1e8:	ret    
   14000c1e9:	int3   
   14000c1ea:	int3   
   14000c1eb:	int3   
   14000c1ec:	sub    rsp,0x38
   14000c1f0:	cmp    r9d,0xa
   14000c1f4:	jne    0x14000c204
   14000c1f6:	test   ecx,ecx
   14000c1f8:	jns    0x14000c204
   14000c1fa:	mov    DWORD PTR [rsp+0x20],0x1
   14000c202:	jmp    0x14000c209
   14000c204:	and    DWORD PTR [rsp+0x20],0x0
   14000c209:	call   0x14000c0f8
   14000c20e:	add    rsp,0x38
   14000c212:	ret    
   14000c213:	int3   
   14000c214:	mov    QWORD PTR [rsp+0x8],rbx
   14000c219:	mov    QWORD PTR [rsp+0x10],rsi
   14000c21e:	push   rdi
   14000c21f:	sub    rsp,0x20
   14000c223:	mov    esi,r9d
   14000c226:	mov    r11,r8
   14000c229:	mov    r10,rdx
   14000c22c:	mov    rdi,rcx
   14000c22f:	test   rdx,rdx
   14000c232:	jne    0x14000c24c
   14000c234:	call   0x140008e40
   14000c239:	mov    ebx,0x16
   14000c23e:	mov    DWORD PTR [rax],ebx
   14000c240:	call   0x14000dafc
   14000c245:	mov    eax,ebx
   14000c247:	jmp    0x14000c2fa
   14000c24c:	test   r8,r8
   14000c24f:	je     0x14000c234
   14000c251:	mov    BYTE PTR [rdx],0x0
   14000c254:	mov    edx,DWORD PTR [rsp+0x50]
   14000c258:	mov    eax,edx
   14000c25a:	neg    eax
   14000c25c:	sbb    rcx,rcx
   14000c25f:	neg    rcx
   14000c262:	inc    rcx
   14000c265:	cmp    r8,rcx
   14000c268:	ja     0x14000c276
   14000c26a:	call   0x140008e40
   14000c26f:	mov    ebx,0x22
   14000c274:	jmp    0x14000c23e
   14000c276:	lea    eax,[rsi-0x2]
   14000c279:	mov    ebx,0x22
   14000c27e:	cmp    eax,ebx
   14000c280:	ja     0x14000c234
   14000c282:	xor    ecx,ecx
   14000c284:	mov    r8,r10
   14000c287:	test   edx,edx
   14000c289:	je     0x14000c299
   14000c28b:	mov    BYTE PTR [r10],0x2d
   14000c28f:	lea    r8,[r10+0x1]
   14000c293:	lea    ecx,[rbx-0x21]
   14000c296:	neg    rdi
   14000c299:	mov    r9,r8
   14000c29c:	xor    edx,edx
   14000c29e:	mov    rax,rdi
   14000c2a1:	div    rsi
   14000c2a4:	mov    rdi,rax
   14000c2a7:	cmp    edx,0x9
   14000c2aa:	jbe    0x14000c2b1
   14000c2ac:	add    dl,0x57
   14000c2af:	jmp    0x14000c2b4
   14000c2b1:	add    dl,0x30
   14000c2b4:	mov    BYTE PTR [r8],dl
   14000c2b7:	inc    rcx
   14000c2ba:	inc    r8
   14000c2bd:	test   rax,rax
   14000c2c0:	je     0x14000c2c7
   14000c2c2:	cmp    rcx,r11
   14000c2c5:	jb     0x14000c29c
   14000c2c7:	cmp    rcx,r11
   14000c2ca:	jb     0x14000c2da
   14000c2cc:	mov    BYTE PTR [r10],0x0
   14000c2d0:	call   0x140008e40
   14000c2d5:	jmp    0x14000c23e
   14000c2da:	mov    BYTE PTR [r8],0x0
   14000c2de:	dec    r8
   14000c2e1:	mov    al,BYTE PTR [r9]
   14000c2e4:	mov    cl,BYTE PTR [r8]
   14000c2e7:	mov    BYTE PTR [r8],al
   14000c2ea:	mov    BYTE PTR [r9],cl
   14000c2ed:	inc    r9
   14000c2f0:	dec    r8
   14000c2f3:	cmp    r9,r8
   14000c2f6:	jb     0x14000c2e1
   14000c2f8:	xor    eax,eax
   14000c2fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c2ff:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c304:	add    rsp,0x20
   14000c308:	pop    rdi
   14000c309:	ret    
   14000c30a:	int3   
   14000c30b:	int3   
   14000c30c:	sub    rsp,0x38
   14000c310:	and    DWORD PTR [rsp+0x20],0x0
   14000c315:	call   0x14000c214
   14000c31a:	add    rsp,0x38
   14000c31e:	ret    
   14000c31f:	int3   
   14000c320:	mov    rax,rsp
   14000c323:	mov    QWORD PTR [rax+0x8],rbx
   14000c327:	mov    QWORD PTR [rax+0x10],rbp
   14000c32b:	mov    QWORD PTR [rax+0x18],rsi
   14000c32f:	mov    QWORD PTR [rax+0x20],rdi
   14000c333:	push   r12
   14000c335:	sub    rsp,0x20
   14000c339:	mov    edi,DWORD PTR [rip+0x16d21]        # 0x140023060
   14000c33f:	xor    ebp,ebp
   14000c341:	mov    rsi,rcx
   14000c344:	or     r12d,0xffffffff
   14000c348:	mov    rcx,rsi
   14000c34b:	call   0x14000abd4
   14000c350:	mov    rbx,rax
   14000c353:	test   rax,rax
   14000c356:	jne    0x14000c380
   14000c358:	test   edi,edi
   14000c35a:	je     0x14000c380
   14000c35c:	mov    ecx,ebp
   14000c35e:	call   QWORD PTR [rip+0xbd64]        # 0x1400180c8
   14000c364:	mov    edi,DWORD PTR [rip+0x16cf6]        # 0x140023060
   14000c36a:	lea    r11d,[rbp+0x3e8]
   14000c371:	cmp    r11d,edi
   14000c374:	mov    ebp,r11d
   14000c377:	cmova  ebp,r12d
   14000c37b:	cmp    ebp,r12d
   14000c37e:	jne    0x14000c348
   14000c380:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c385:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c38a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c38f:	mov    rax,rbx
   14000c392:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c397:	add    rsp,0x20
   14000c39b:	pop    r12
   14000c39d:	ret    
   14000c39e:	int3   
   14000c39f:	int3   
   14000c3a0:	mov    rax,rsp
   14000c3a3:	mov    QWORD PTR [rax+0x8],rbx
   14000c3a7:	mov    QWORD PTR [rax+0x10],rbp
   14000c3ab:	mov    QWORD PTR [rax+0x18],rsi
   14000c3af:	mov    QWORD PTR [rax+0x20],rdi
   14000c3b3:	push   r12
   14000c3b5:	sub    rsp,0x20
   14000c3b9:	xor    edi,edi
   14000c3bb:	mov    rsi,rdx
   14000c3be:	mov    rbp,rcx
   14000c3c1:	or     r12d,0xffffffff
   14000c3c5:	xor    r8d,r8d
   14000c3c8:	mov    rdx,rsi
   14000c3cb:	mov    rcx,rbp
   14000c3ce:	call   0x140013ce4
   14000c3d3:	mov    rbx,rax
   14000c3d6:	test   rax,rax
   14000c3d9:	jne    0x14000c405
   14000c3db:	cmp    DWORD PTR [rip+0x16c7f],eax        # 0x140023060
   14000c3e1:	jbe    0x14000c405
   14000c3e3:	mov    ecx,edi
   14000c3e5:	call   QWORD PTR [rip+0xbcdd]        # 0x1400180c8
   14000c3eb:	lea    r11d,[rdi+0x3e8]
   14000c3f2:	cmp    r11d,DWORD PTR [rip+0x16c67]        # 0x140023060
   14000c3f9:	mov    edi,r11d
   14000c3fc:	cmova  edi,r12d
   14000c400:	cmp    edi,r12d
   14000c403:	jne    0x14000c3c5
   14000c405:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c40a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c40f:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c414:	mov    rax,rbx
   14000c417:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c41c:	add    rsp,0x20
   14000c420:	pop    r12
   14000c422:	ret    
   14000c423:	int3   
   14000c424:	mov    rax,rsp
   14000c427:	mov    QWORD PTR [rax+0x8],rbx
   14000c42b:	mov    QWORD PTR [rax+0x10],rbp
   14000c42f:	mov    QWORD PTR [rax+0x18],rsi
   14000c433:	mov    QWORD PTR [rax+0x20],rdi
   14000c437:	push   r12
   14000c439:	sub    rsp,0x20
   14000c43d:	xor    esi,esi
   14000c43f:	mov    rdi,rdx
   14000c442:	mov    rbp,rcx
   14000c445:	or     r12d,0xffffffff
   14000c449:	mov    rdx,rdi
   14000c44c:	mov    rcx,rbp
   14000c44f:	call   0x140013d80
   14000c454:	mov    rbx,rax
   14000c457:	test   rax,rax
   14000c45a:	jne    0x14000c48b
   14000c45c:	test   rdi,rdi
   14000c45f:	je     0x14000c48b
   14000c461:	cmp    DWORD PTR [rip+0x16bf9],eax        # 0x140023060
   14000c467:	jbe    0x14000c48b
   14000c469:	mov    ecx,esi
   14000c46b:	call   QWORD PTR [rip+0xbc57]        # 0x1400180c8
   14000c471:	lea    r11d,[rsi+0x3e8]
   14000c478:	cmp    r11d,DWORD PTR [rip+0x16be1]        # 0x140023060
   14000c47f:	mov    esi,r11d
   14000c482:	cmova  esi,r12d
   14000c486:	cmp    esi,r12d
   14000c489:	jne    0x14000c449
   14000c48b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c490:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c495:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c49a:	mov    rax,rbx
   14000c49d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c4a2:	add    rsp,0x20
   14000c4a6:	pop    r12
   14000c4a8:	ret    
   14000c4a9:	int3   
   14000c4aa:	int3   
   14000c4ab:	int3   
   14000c4ac:	sub    rsp,0x28
   14000c4b0:	call   0x14000d728
   14000c4b5:	mov    rcx,QWORD PTR [rax+0xc0]
   14000c4bc:	cmp    rcx,QWORD PTR [rip+0x158dd]        # 0x140021da0
   14000c4c3:	je     0x14000c4db
   14000c4c5:	mov    eax,DWORD PTR [rax+0xc8]
   14000c4cb:	test   DWORD PTR [rip+0x1549f],eax        # 0x140021970
   14000c4d1:	jne    0x14000c4db
   14000c4d3:	call   0x14000d540
   14000c4d8:	mov    rcx,rax
   14000c4db:	mov    rax,QWORD PTR [rcx+0x140]
   14000c4e2:	add    rsp,0x28
   14000c4e6:	ret    
   14000c4e7:	int3   
   14000c4e8:	rex push rbp
   14000c4ea:	push   r12
   14000c4ec:	push   r13
   14000c4ee:	push   r14
   14000c4f0:	push   r15
   14000c4f2:	sub    rsp,0x50
   14000c4f6:	lea    rbp,[rsp+0x40]
   14000c4fb:	mov    QWORD PTR [rbp+0x40],rbx
   14000c4ff:	mov    QWORD PTR [rbp+0x48],rsi
   14000c503:	mov    QWORD PTR [rbp+0x50],rdi
   14000c507:	mov    rax,QWORD PTR [rip+0x14f02]        # 0x140021410
   14000c50e:	xor    rax,rbp
   14000c511:	mov    QWORD PTR [rbp+0x8],rax
   14000c515:	mov    ebx,DWORD PTR [rbp+0x60]
   14000c518:	xor    edi,edi
   14000c51a:	mov    r14,r9
   14000c51d:	mov    r15d,r8d
   14000c520:	mov    DWORD PTR [rbp+0x0],edx
   14000c523:	test   ebx,ebx
   14000c525:	jle    0x14000c551
   14000c527:	mov    r10d,ebx
   14000c52a:	mov    rax,r9
   14000c52d:	dec    r10d
   14000c530:	cmp    BYTE PTR [rax],dil
   14000c533:	je     0x14000c541
   14000c535:	inc    rax
   14000c538:	test   r10d,r10d
   14000c53b:	jne    0x14000c52d
   14000c53d:	or     r10d,0xffffffff
   14000c541:	mov    eax,ebx
   14000c543:	sub    eax,r10d
   14000c546:	dec    eax
   14000c548:	cmp    eax,ebx
   14000c54a:	lea    ebx,[rax+0x1]
   14000c54d:	jl     0x14000c551
   14000c54f:	mov    ebx,eax
   14000c551:	mov    r12d,DWORD PTR [rbp+0x78]
   14000c555:	mov    esi,edi
   14000c557:	test   r12d,r12d
   14000c55a:	jne    0x14000c563
   14000c55c:	mov    rax,QWORD PTR [rcx]
   14000c55f:	mov    r12d,DWORD PTR [rax+0x4]
   14000c563:	neg    DWORD PTR [rbp+0x80]
   14000c569:	mov    r9d,ebx
   14000c56c:	mov    r8,r14
   14000c56f:	sbb    edx,edx
   14000c571:	mov    ecx,r12d
   14000c574:	mov    DWORD PTR [rsp+0x28],edi
   14000c578:	and    edx,0x8
   14000c57b:	mov    QWORD PTR [rsp+0x20],rdi
   14000c580:	inc    edx
   14000c582:	call   QWORD PTR [rip+0xbb20]        # 0x1400180a8
   14000c588:	movsxd r13,eax
   14000c58b:	test   eax,eax
   14000c58d:	jne    0x14000c596
   14000c58f:	xor    eax,eax
   14000c591:	jmp    0x14000c78c
   14000c596:	movabs r8,0xffffffffffffff0
   14000c5a0:	test   eax,eax
   14000c5a2:	jle    0x14000c602
   14000c5a4:	xor    edx,edx
   14000c5a6:	lea    rax,[rdx-0x20]
   14000c5aa:	div    r13
   14000c5ad:	cmp    rax,0x2
   14000c5b1:	jb     0x14000c602
   14000c5b3:	lea    rcx,[r13+r13*1+0x10]
   14000c5b8:	cmp    rcx,0x400
   14000c5bf:	ja     0x14000c5eb
   14000c5c1:	lea    rax,[rcx+0xf]
   14000c5c5:	cmp    rax,rcx
   14000c5c8:	ja     0x14000c5cd
   14000c5ca:	mov    rax,r8
   14000c5cd:	and    rax,0xfffffffffffffff0
   14000c5d1:	call   0x140013e70
   14000c5d6:	sub    rsp,rax
   14000c5d9:	lea    rdi,[rsp+0x40]
   14000c5de:	test   rdi,rdi
   14000c5e1:	je     0x14000c58f
   14000c5e3:	mov    DWORD PTR [rdi],0xcccc
   14000c5e9:	jmp    0x14000c5fe
   14000c5eb:	call   0x14000abd4
   14000c5f0:	mov    rdi,rax
   14000c5f3:	test   rax,rax
   14000c5f6:	je     0x14000c602
   14000c5f8:	mov    DWORD PTR [rax],0xdddd
   14000c5fe:	add    rdi,0x10
   14000c602:	test   rdi,rdi
   14000c605:	je     0x14000c58f
   14000c607:	mov    r9d,ebx
   14000c60a:	mov    r8,r14
   14000c60d:	mov    edx,0x1
   14000c612:	mov    ecx,r12d
   14000c615:	mov    DWORD PTR [rsp+0x28],r13d
   14000c61a:	mov    QWORD PTR [rsp+0x20],rdi
   14000c61f:	call   QWORD PTR [rip+0xba83]        # 0x1400180a8
   14000c625:	test   eax,eax
   14000c627:	je     0x14000c779
   14000c62d:	mov    r14d,DWORD PTR [rbp+0x0]
   14000c631:	and    DWORD PTR [rsp+0x28],esi
   14000c635:	and    QWORD PTR [rsp+0x20],rsi
   14000c63a:	mov    ecx,r14d
   14000c63d:	mov    r9d,r13d
   14000c640:	mov    r8,rdi
   14000c643:	mov    edx,r15d
   14000c646:	call   QWORD PTR [rip+0xbaec]        # 0x140018138
   14000c64c:	movsxd rsi,eax
   14000c64f:	test   eax,eax
   14000c651:	je     0x14000c779
   14000c657:	mov    r8d,0x400
   14000c65d:	test   r8d,r15d
   14000c660:	je     0x14000c699
   14000c662:	mov    ecx,DWORD PTR [rbp+0x70]
   14000c665:	test   ecx,ecx
   14000c667:	je     0x14000c779
   14000c66d:	cmp    esi,ecx
   14000c66f:	jg     0x14000c779
   14000c675:	mov    rax,QWORD PTR [rbp+0x68]
   14000c679:	mov    DWORD PTR [rsp+0x28],ecx
   14000c67d:	mov    r9d,r13d
   14000c680:	mov    r8,rdi
   14000c683:	mov    edx,r15d
   14000c686:	mov    ecx,r14d
   14000c689:	mov    QWORD PTR [rsp+0x20],rax
   14000c68e:	call   QWORD PTR [rip+0xbaa4]        # 0x140018138
   14000c694:	jmp    0x14000c779
   14000c699:	test   eax,eax
   14000c69b:	jle    0x14000c704
   14000c69d:	xor    edx,edx
   14000c69f:	lea    rax,[rdx-0x20]
   14000c6a3:	div    rsi
   14000c6a6:	cmp    rax,0x2
   14000c6aa:	jb     0x14000c704
   14000c6ac:	lea    rcx,[rsi+rsi*1+0x10]
   14000c6b1:	cmp    rcx,r8
   14000c6b4:	ja     0x14000c6eb
   14000c6b6:	lea    rax,[rcx+0xf]
   14000c6ba:	cmp    rax,rcx
   14000c6bd:	ja     0x14000c6c9
   14000c6bf:	movabs rax,0xffffffffffffff0
   14000c6c9:	and    rax,0xfffffffffffffff0
   14000c6cd:	call   0x140013e70
   14000c6d2:	sub    rsp,rax
   14000c6d5:	lea    rbx,[rsp+0x40]
   14000c6da:	test   rbx,rbx
   14000c6dd:	je     0x14000c779
   14000c6e3:	mov    DWORD PTR [rbx],0xcccc
   14000c6e9:	jmp    0x14000c6fe
   14000c6eb:	call   0x14000abd4
   14000c6f0:	mov    rbx,rax
   14000c6f3:	test   rax,rax
   14000c6f6:	je     0x14000c706
   14000c6f8:	mov    DWORD PTR [rax],0xdddd
   14000c6fe:	add    rbx,0x10
   14000c702:	jmp    0x14000c706
   14000c704:	xor    ebx,ebx
   14000c706:	test   rbx,rbx
   14000c709:	je     0x14000c779
   14000c70b:	mov    r9d,r13d
   14000c70e:	mov    r8,rdi
   14000c711:	mov    edx,r15d
   14000c714:	mov    ecx,r14d
   14000c717:	mov    DWORD PTR [rsp+0x28],esi
   14000c71b:	mov    QWORD PTR [rsp+0x20],rbx
   14000c720:	call   QWORD PTR [rip+0xba12]        # 0x140018138
   14000c726:	xor    ecx,ecx
   14000c728:	test   eax,eax
   14000c72a:	je     0x14000c768
   14000c72c:	mov    eax,DWORD PTR [rbp+0x70]
   14000c72f:	xor    edx,edx
   14000c731:	mov    QWORD PTR [rsp+0x38],rcx
   14000c736:	mov    r9d,esi
   14000c739:	mov    r8,rbx
   14000c73c:	mov    QWORD PTR [rsp+0x30],rcx
   14000c741:	test   eax,eax
   14000c743:	jne    0x14000c750
   14000c745:	mov    DWORD PTR [rsp+0x28],ecx
   14000c749:	mov    QWORD PTR [rsp+0x20],rcx
   14000c74e:	jmp    0x14000c75d
   14000c750:	mov    DWORD PTR [rsp+0x28],eax
   14000c754:	mov    rax,QWORD PTR [rbp+0x68]
   14000c758:	mov    QWORD PTR [rsp+0x20],rax
   14000c75d:	mov    ecx,r12d
   14000c760:	call   QWORD PTR [rip+0xb93a]        # 0x1400180a0
   14000c766:	mov    esi,eax
   14000c768:	lea    rcx,[rbx-0x10]
   14000c76c:	cmp    DWORD PTR [rcx],0xdddd
   14000c772:	jne    0x14000c779
   14000c774:	call   0x140008584
   14000c779:	lea    rcx,[rdi-0x10]
   14000c77d:	cmp    DWORD PTR [rcx],0xdddd
   14000c783:	jne    0x14000c78a
   14000c785:	call   0x140008584
   14000c78a:	mov    eax,esi
   14000c78c:	mov    rcx,QWORD PTR [rbp+0x8]
   14000c790:	xor    rcx,rbp
   14000c793:	call   0x140007d20
   14000c798:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c79c:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c7a0:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c7a4:	lea    rsp,[rbp+0x10]
   14000c7a8:	pop    r15
   14000c7aa:	pop    r14
   14000c7ac:	pop    r13
   14000c7ae:	pop    r12
   14000c7b0:	pop    rbp
   14000c7b1:	ret    
   14000c7b2:	int3   
   14000c7b3:	int3   
   14000c7b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7b9:	mov    QWORD PTR [rsp+0x10],rsi
   14000c7be:	push   rdi
   14000c7bf:	sub    rsp,0x70
   14000c7c3:	mov    esi,edx
   14000c7c5:	mov    rdx,rcx
   14000c7c8:	lea    rcx,[rsp+0x50]
   14000c7cd:	mov    rbx,r9
   14000c7d0:	mov    edi,r8d
   14000c7d3:	call   0x140007d40
   14000c7d8:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c7df:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000c7e7:	lea    rcx,[rsp+0x50]
   14000c7ec:	mov    DWORD PTR [rsp+0x40],r11d
   14000c7f1:	mov    DWORD PTR [rsp+0x38],eax
   14000c7f5:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c7fc:	mov    DWORD PTR [rsp+0x30],eax
   14000c800:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c808:	mov    r9,rbx
   14000c80b:	mov    QWORD PTR [rsp+0x28],rax
   14000c810:	mov    eax,DWORD PTR [rsp+0xa0]
   14000c817:	mov    r8d,edi
   14000c81a:	mov    edx,esi
   14000c81c:	mov    DWORD PTR [rsp+0x20],eax
   14000c820:	call   0x14000c4e8
   14000c825:	cmp    BYTE PTR [rsp+0x68],0x0
   14000c82a:	je     0x14000c838
   14000c82c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c831:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c838:	lea    r11,[rsp+0x70]
   14000c83d:	mov    rbx,QWORD PTR [r11+0x10]
   14000c841:	mov    rsi,QWORD PTR [r11+0x18]
   14000c845:	mov    rsp,r11
   14000c848:	pop    rdi
   14000c849:	ret    
   14000c84a:	int3   
   14000c84b:	int3   
   14000c84c:	sub    rsp,0x28
   14000c850:	call   0x140013fc8
   14000c855:	test   rax,rax
   14000c858:	je     0x14000c864
   14000c85a:	mov    ecx,0x16
   14000c85f:	call   0x140013fd8
   14000c864:	test   BYTE PTR [rip+0x14bc5],0x2        # 0x140021430
   14000c86b:	je     0x14000c881
   14000c86d:	mov    r8d,0x1
   14000c873:	mov    edx,0x40000015
   14000c878:	lea    ecx,[r8+0x2]
   14000c87c:	call   0x14000d90c
   14000c881:	mov    ecx,0x3
   14000c886:	call   0x14000dfe8
   14000c88b:	int3   
   14000c88c:	mov    eax,DWORD PTR [rip+0x14b9e]        # 0x140021430
   14000c892:	mov    r8d,edx
   14000c895:	and    ecx,edx
   14000c897:	not    r8d
   14000c89a:	and    r8d,eax
   14000c89d:	or     r8d,ecx
   14000c8a0:	mov    DWORD PTR [rip+0x14b89],r8d        # 0x140021430
   14000c8a7:	ret    
   14000c8a8:	mov    QWORD PTR [rsp+0x8],rcx
   14000c8ad:	sub    rsp,0x88
   14000c8b4:	lea    rcx,[rip+0x16855]        # 0x140023110
   14000c8bb:	call   QWORD PTR [rip+0xb8af]        # 0x140018170
   14000c8c1:	mov    rax,QWORD PTR [rip+0x16940]        # 0x140023208
   14000c8c8:	mov    QWORD PTR [rsp+0x58],rax
   14000c8cd:	xor    r8d,r8d
   14000c8d0:	lea    rdx,[rsp+0x60]
   14000c8d5:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c8da:	call   0x140016e6e
   14000c8df:	mov    QWORD PTR [rsp+0x50],rax
   14000c8e4:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c8ea:	je     0x14000c92d
   14000c8ec:	mov    QWORD PTR [rsp+0x38],0x0
   14000c8f5:	lea    rax,[rsp+0x48]
   14000c8fa:	mov    QWORD PTR [rsp+0x30],rax
   14000c8ff:	lea    rax,[rsp+0x40]
   14000c904:	mov    QWORD PTR [rsp+0x28],rax
   14000c909:	lea    rax,[rip+0x16800]        # 0x140023110
   14000c910:	mov    QWORD PTR [rsp+0x20],rax
   14000c915:	mov    r9,QWORD PTR [rsp+0x50]
   14000c91a:	mov    r8,QWORD PTR [rsp+0x58]
   14000c91f:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c924:	xor    ecx,ecx
   14000c926:	call   0x140016e7a
   14000c92b:	jmp    0x14000c94f
   14000c92d:	mov    rax,QWORD PTR [rsp+0x88]
   14000c935:	mov    QWORD PTR [rip+0x168cc],rax        # 0x140023208
   14000c93c:	lea    rax,[rsp+0x88]
   14000c944:	add    rax,0x8
   14000c948:	mov    QWORD PTR [rip+0x16859],rax        # 0x1400231a8
   14000c94f:	mov    rax,QWORD PTR [rip+0x168b2]        # 0x140023208
   14000c956:	mov    QWORD PTR [rip+0x16723],rax        # 0x140023080
   14000c95d:	mov    rax,QWORD PTR [rsp+0x90]
   14000c965:	mov    QWORD PTR [rip+0x16824],rax        # 0x140023190
   14000c96c:	mov    DWORD PTR [rip+0x166fa],0xc0000409        # 0x140023070
   14000c976:	mov    DWORD PTR [rip+0x166f4],0x1        # 0x140023074
   14000c980:	mov    rax,QWORD PTR [rip+0x14a89]        # 0x140021410
   14000c987:	mov    QWORD PTR [rsp+0x68],rax
   14000c98c:	mov    rax,QWORD PTR [rip+0x14a85]        # 0x140021418
   14000c993:	mov    QWORD PTR [rsp+0x70],rax
   14000c998:	call   QWORD PTR [rip+0xb7c2]        # 0x140018160
   14000c99e:	mov    DWORD PTR [rip+0x16764],eax        # 0x140023108
   14000c9a4:	mov    ecx,0x1
   14000c9a9:	call   0x14001420c
   14000c9ae:	xor    ecx,ecx
   14000c9b0:	call   QWORD PTR [rip+0xb7a2]        # 0x140018158
   14000c9b6:	lea    rcx,[rip+0xc7f3]        # 0x1400191b0
   14000c9bd:	call   QWORD PTR [rip+0xb78d]        # 0x140018150
   14000c9c3:	cmp    DWORD PTR [rip+0x1673e],0x0        # 0x140023108
   14000c9ca:	jne    0x14000c9d6
   14000c9cc:	mov    ecx,0x1
   14000c9d1:	call   0x14001420c
   14000c9d6:	call   QWORD PTR [rip+0xb76c]        # 0x140018148
   14000c9dc:	mov    edx,0xc0000409
   14000c9e1:	mov    rcx,rax
   14000c9e4:	call   QWORD PTR [rip+0xb756]        # 0x140018140
   14000c9ea:	add    rsp,0x88
   14000c9f1:	ret    
   14000c9f2:	int3   
   14000c9f3:	int3   
   14000c9f4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9f9:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9fe:	mov    QWORD PTR [rsp+0x18],rsi
   14000ca03:	push   rdi
   14000ca04:	sub    rsp,0x20
   14000ca08:	lea    rbx,[rcx+0x1c]
   14000ca0c:	mov    rbp,rcx
   14000ca0f:	mov    esi,0x101
   14000ca14:	mov    rcx,rbx
   14000ca17:	mov    r8d,esi
   14000ca1a:	xor    edx,edx
   14000ca1c:	call   0x14000f080
   14000ca21:	xor    r11d,r11d
   14000ca24:	lea    rdi,[rbp+0x10]
   14000ca28:	lea    ecx,[r11+0x6]
   14000ca2c:	movzx  eax,r11w
   14000ca30:	mov    DWORD PTR [rbp+0xc],r11d
   14000ca34:	mov    QWORD PTR [rbp+0x4],r11
   14000ca38:	rep stos WORD PTR es:[rdi],ax
   14000ca3b:	lea    rdi,[rip+0x149fe]        # 0x140021440
   14000ca42:	sub    rdi,rbp
   14000ca45:	mov    al,BYTE PTR [rdi+rbx*1]
   14000ca48:	mov    BYTE PTR [rbx],al
   14000ca4a:	inc    rbx
   14000ca4d:	dec    rsi
   14000ca50:	jne    0x14000ca45
   14000ca52:	lea    rcx,[rbp+0x11d]
   14000ca59:	mov    edx,0x100
   14000ca5e:	mov    al,BYTE PTR [rcx+rdi*1]
   14000ca61:	mov    BYTE PTR [rcx],al
   14000ca63:	inc    rcx
   14000ca66:	dec    rdx
   14000ca69:	jne    0x14000ca5e
   14000ca6b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca70:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca75:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca7a:	add    rsp,0x20
   14000ca7e:	pop    rdi
   14000ca7f:	ret    
   14000ca80:	mov    rax,rsp
   14000ca83:	mov    QWORD PTR [rax+0x10],rbx
   14000ca87:	mov    QWORD PTR [rax+0x18],rsi
   14000ca8b:	mov    QWORD PTR [rax+0x20],rdi
   14000ca8f:	push   rbp
   14000ca90:	lea    rbp,[rax-0x488]
   14000ca97:	sub    rsp,0x580
   14000ca9e:	mov    rax,QWORD PTR [rip+0x1496b]        # 0x140021410
   14000caa5:	xor    rax,rsp
   14000caa8:	mov    QWORD PTR [rbp+0x470],rax
   14000caaf:	mov    rsi,rcx
   14000cab2:	mov    ecx,DWORD PTR [rcx+0x4]
   14000cab5:	lea    rdx,[rsp+0x50]
   14000caba:	call   QWORD PTR [rip+0xb648]        # 0x140018108
   14000cac0:	mov    ebx,0x100
   14000cac5:	test   eax,eax
   14000cac7:	je     0x14000cc09
   14000cacd:	xor    eax,eax
   14000cacf:	lea    rcx,[rsp+0x70]
   14000cad4:	mov    BYTE PTR [rcx],al
   14000cad6:	inc    eax
   14000cad8:	inc    rcx
   14000cadb:	cmp    eax,ebx
   14000cadd:	jb     0x14000cad4
   14000cadf:	mov    al,BYTE PTR [rsp+0x56]
   14000cae3:	mov    BYTE PTR [rsp+0x70],0x20
   14000cae8:	lea    rdi,[rsp+0x56]
   14000caed:	jmp    0x14000cb18
   14000caef:	movzx  edx,BYTE PTR [rdi+0x1]
   14000caf3:	movzx  r8d,al
   14000caf7:	cmp    r8d,edx
   14000cafa:	ja     0x14000cb12
   14000cafc:	sub    edx,r8d
   14000caff:	mov    eax,r8d
   14000cb02:	lea    rcx,[rsp+r8*1+0x70]
   14000cb07:	lea    r8d,[rdx+0x1]
   14000cb0b:	mov    dl,0x20
   14000cb0d:	call   0x14000f080
   14000cb12:	add    rdi,0x2
   14000cb16:	mov    al,BYTE PTR [rdi]
   14000cb18:	test   al,al
   14000cb1a:	jne    0x14000caef
   14000cb1c:	mov    eax,DWORD PTR [rsi+0xc]
   14000cb1f:	and    DWORD PTR [rsp+0x38],0x0
   14000cb24:	lea    r8,[rsp+0x70]
   14000cb29:	mov    DWORD PTR [rsp+0x30],eax
   14000cb2d:	mov    eax,DWORD PTR [rsi+0x4]
   14000cb30:	mov    r9d,ebx
   14000cb33:	mov    DWORD PTR [rsp+0x28],eax
   14000cb37:	lea    rax,[rbp+0x270]
   14000cb3e:	mov    edx,0x1
   14000cb43:	xor    ecx,ecx
   14000cb45:	mov    QWORD PTR [rsp+0x20],rax
   14000cb4a:	call   0x140010e9c
   14000cb4f:	and    DWORD PTR [rsp+0x40],0x0
   14000cb54:	mov    eax,DWORD PTR [rsi+0x4]
   14000cb57:	mov    edx,DWORD PTR [rsi+0xc]
   14000cb5a:	mov    DWORD PTR [rsp+0x38],eax
   14000cb5e:	lea    rax,[rbp+0x70]
   14000cb62:	mov    DWORD PTR [rsp+0x30],ebx
   14000cb66:	mov    QWORD PTR [rsp+0x28],rax
   14000cb6b:	lea    r9,[rsp+0x70]
   14000cb70:	mov    r8d,ebx
   14000cb73:	xor    ecx,ecx
   14000cb75:	mov    DWORD PTR [rsp+0x20],ebx
   14000cb79:	call   0x14000c7b4
   14000cb7e:	and    DWORD PTR [rsp+0x40],0x0
   14000cb83:	mov    eax,DWORD PTR [rsi+0x4]
   14000cb86:	mov    edx,DWORD PTR [rsi+0xc]
   14000cb89:	mov    DWORD PTR [rsp+0x38],eax
   14000cb8d:	lea    rax,[rbp+0x170]
   14000cb94:	mov    DWORD PTR [rsp+0x30],ebx
   14000cb98:	mov    QWORD PTR [rsp+0x28],rax
   14000cb9d:	lea    r9,[rsp+0x70]
   14000cba2:	mov    r8d,0x200
   14000cba8:	xor    ecx,ecx
   14000cbaa:	mov    DWORD PTR [rsp+0x20],ebx
   14000cbae:	call   0x14000c7b4
   14000cbb3:	lea    rdx,[rbp+0x70]
   14000cbb7:	lea    r8,[rbp+0x170]
   14000cbbe:	sub    rdx,rsi
   14000cbc1:	lea    r11,[rbp+0x270]
   14000cbc8:	lea    rcx,[rsi+0x1d]
   14000cbcc:	sub    r8,rsi
   14000cbcf:	test   BYTE PTR [r11],0x1
   14000cbd3:	je     0x14000cbde
   14000cbd5:	or     BYTE PTR [rcx],0x10
   14000cbd8:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   14000cbdc:	jmp    0x14000cbec
   14000cbde:	test   BYTE PTR [r11],0x2
   14000cbe2:	je     0x14000cbf4
   14000cbe4:	or     BYTE PTR [rcx],0x20
   14000cbe7:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   14000cbec:	mov    BYTE PTR [rcx+0x100],al
   14000cbf2:	jmp    0x14000cbfb
   14000cbf4:	mov    BYTE PTR [rcx+0x100],0x0
   14000cbfb:	inc    rcx
   14000cbfe:	add    r11,0x2
   14000cc02:	dec    rbx
   14000cc05:	jne    0x14000cbcf
   14000cc07:	jmp    0x14000cc48
   14000cc09:	xor    edx,edx
   14000cc0b:	lea    rcx,[rsi+0x1d]
   14000cc0f:	lea    r8d,[rdx-0x61]
   14000cc13:	lea    eax,[r8+0x20]
   14000cc17:	cmp    eax,0x19
   14000cc1a:	ja     0x14000cc24
   14000cc1c:	or     BYTE PTR [rcx],0x10
   14000cc1f:	lea    eax,[rdx+0x20]
   14000cc22:	jmp    0x14000cc30
   14000cc24:	cmp    r8d,0x19
   14000cc28:	ja     0x14000cc38
   14000cc2a:	or     BYTE PTR [rcx],0x20
   14000cc2d:	lea    eax,[rdx-0x20]
   14000cc30:	mov    BYTE PTR [rcx+0x100],al
   14000cc36:	jmp    0x14000cc3f
   14000cc38:	mov    BYTE PTR [rcx+0x100],0x0
   14000cc3f:	inc    edx
   14000cc41:	inc    rcx
   14000cc44:	cmp    edx,ebx
   14000cc46:	jb     0x14000cc0f
   14000cc48:	mov    rcx,QWORD PTR [rbp+0x470]
   14000cc4f:	xor    rcx,rsp
   14000cc52:	call   0x140007d20
   14000cc57:	lea    r11,[rsp+0x580]
   14000cc5f:	mov    rbx,QWORD PTR [r11+0x18]
   14000cc63:	mov    rsi,QWORD PTR [r11+0x20]
   14000cc67:	mov    rdi,QWORD PTR [r11+0x28]
   14000cc6b:	mov    rsp,r11
   14000cc6e:	pop    rbp
   14000cc6f:	ret    
   14000cc70:	mov    QWORD PTR [rsp+0x10],rbx
   14000cc75:	push   rdi
   14000cc76:	sub    rsp,0x20
   14000cc7a:	call   0x14000d728
   14000cc7f:	mov    rdi,rax
   14000cc82:	mov    ecx,DWORD PTR [rax+0xc8]
   14000cc88:	test   DWORD PTR [rip+0x14ce2],ecx        # 0x140021970
   14000cc8e:	je     0x14000cca3
   14000cc90:	cmp    QWORD PTR [rax+0xc0],0x0
   14000cc98:	je     0x14000cca3
   14000cc9a:	mov    rbx,QWORD PTR [rax+0xb8]
   14000cca1:	jmp    0x14000cd0f
   14000cca3:	mov    ecx,0xd
   14000cca8:	call   0x140012e0c
   14000ccad:	nop
   14000ccae:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000ccb5:	mov    QWORD PTR [rsp+0x30],rbx
   14000ccba:	cmp    rbx,QWORD PTR [rip+0x14baf]        # 0x140021870
   14000ccc1:	je     0x14000cd05
   14000ccc3:	test   rbx,rbx
   14000ccc6:	je     0x14000cce3
   14000ccc8:	lock dec DWORD PTR [rbx]
   14000cccb:	jne    0x14000cce3
   14000cccd:	lea    rax,[rip+0x1476c]        # 0x140021440
   14000ccd4:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ccd9:	cmp    rcx,rax
   14000ccdc:	je     0x14000cce3
   14000ccde:	call   0x140008584
   14000cce3:	mov    rax,QWORD PTR [rip+0x14b86]        # 0x140021870
   14000ccea:	mov    QWORD PTR [rdi+0xb8],rax
   14000ccf1:	mov    rax,QWORD PTR [rip+0x14b78]        # 0x140021870
   14000ccf8:	mov    QWORD PTR [rsp+0x30],rax
   14000ccfd:	lock inc DWORD PTR [rax]
   14000cd00:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd05:	mov    ecx,0xd
   14000cd0a:	call   0x140012d0c
   14000cd0f:	test   rbx,rbx
   14000cd12:	jne    0x14000cd1c
   14000cd14:	lea    ecx,[rbx+0x20]
   14000cd17:	call   0x14000e014
   14000cd1c:	mov    rax,rbx
   14000cd1f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cd24:	add    rsp,0x20
   14000cd28:	pop    rdi
   14000cd29:	ret    
   14000cd2a:	int3   
   14000cd2b:	int3   
   14000cd2c:	rex push rbx
   14000cd2e:	sub    rsp,0x40
   14000cd32:	mov    ebx,ecx
   14000cd34:	lea    rcx,[rsp+0x20]
   14000cd39:	xor    edx,edx
   14000cd3b:	call   0x140007d40
   14000cd40:	and    DWORD PTR [rip+0x16899],0x0        # 0x1400235e0
   14000cd47:	cmp    ebx,0xfffffffe
   14000cd4a:	jne    0x14000cd71
   14000cd4c:	mov    DWORD PTR [rip+0x1688a],0x1        # 0x1400235e0
   14000cd56:	call   QWORD PTR [rip+0xb424]        # 0x140018180
   14000cd5c:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cd61:	je     0x14000cdb6
   14000cd63:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cd68:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cd6f:	jmp    0x14000cdb6
   14000cd71:	cmp    ebx,0xfffffffd
   14000cd74:	jne    0x14000cd88
   14000cd76:	mov    DWORD PTR [rip+0x16860],0x1        # 0x1400235e0
   14000cd80:	call   QWORD PTR [rip+0xb3f2]        # 0x140018178
   14000cd86:	jmp    0x14000cd5c
   14000cd88:	cmp    ebx,0xfffffffc
   14000cd8b:	jne    0x14000cda1
   14000cd8d:	mov    rax,QWORD PTR [rsp+0x20]
   14000cd92:	mov    DWORD PTR [rip+0x16844],0x1        # 0x1400235e0
   14000cd9c:	mov    eax,DWORD PTR [rax+0x4]
   14000cd9f:	jmp    0x14000cd5c
   14000cda1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cda6:	je     0x14000cdb4
   14000cda8:	mov    rax,QWORD PTR [rsp+0x30]
   14000cdad:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cdb4:	mov    eax,ebx
   14000cdb6:	add    rsp,0x40
   14000cdba:	pop    rbx
   14000cdbb:	ret    
   14000cdbc:	mov    QWORD PTR [rsp+0x18],rbx
   14000cdc1:	push   rbp
   14000cdc2:	push   rsi
   14000cdc3:	push   rdi
   14000cdc4:	push   r12
   14000cdc6:	push   r13
   14000cdc8:	sub    rsp,0x40
   14000cdcc:	mov    rax,QWORD PTR [rip+0x1463d]        # 0x140021410
   14000cdd3:	xor    rax,rsp
   14000cdd6:	mov    QWORD PTR [rsp+0x38],rax
   14000cddb:	mov    rsi,rdx
   14000cdde:	call   0x14000cd2c
   14000cde3:	xor    ebx,ebx
   14000cde5:	mov    edi,eax
   14000cde7:	test   eax,eax
   14000cde9:	jne    0x14000cdf8
   14000cdeb:	mov    rcx,rsi
   14000cdee:	call   0x14000c9f4
   14000cdf3:	jmp    0x14000d00e
   14000cdf8:	lea    r13,[rip+0x14a81]        # 0x140021880
   14000cdff:	mov    ecx,ebx
   14000ce01:	mov    rbp,rbx
   14000ce04:	mov    rax,r13
   14000ce07:	mov    r12d,0x1
   14000ce0d:	cmp    DWORD PTR [rax],edi
   14000ce0f:	je     0x14000cf3b
   14000ce15:	add    ecx,r12d
   14000ce18:	add    rbp,r12
   14000ce1b:	add    rax,0x30
   14000ce1f:	cmp    ecx,0x5
   14000ce22:	jb     0x14000ce0d
   14000ce24:	cmp    edi,0xfde8
   14000ce2a:	je     0x14000cf33
   14000ce30:	cmp    edi,0xfde9
   14000ce36:	je     0x14000cf33
   14000ce3c:	movzx  ecx,di
   14000ce3f:	call   QWORD PTR [rip+0xb343]        # 0x140018188
   14000ce45:	test   eax,eax
   14000ce47:	je     0x14000cf33
   14000ce4d:	lea    rdx,[rsp+0x20]
   14000ce52:	mov    ecx,edi
   14000ce54:	call   QWORD PTR [rip+0xb2ae]        # 0x140018108
   14000ce5a:	test   eax,eax
   14000ce5c:	je     0x14000cf27
   14000ce62:	lea    rcx,[rsi+0x1c]
   14000ce66:	xor    edx,edx
   14000ce68:	mov    r8d,0x101
   14000ce6e:	call   0x14000f080
   14000ce73:	mov    DWORD PTR [rsi+0x4],edi
   14000ce76:	mov    DWORD PTR [rsi+0xc],ebx
   14000ce79:	cmp    DWORD PTR [rsp+0x20],r12d
   14000ce7e:	jbe    0x14000cf10
   14000ce84:	lea    rax,[rsp+0x26]
   14000ce89:	cmp    BYTE PTR [rsp+0x26],bl
   14000ce8d:	je     0x14000cebc
   14000ce8f:	cmp    BYTE PTR [rax+0x1],bl
   14000ce92:	je     0x14000cebc
   14000ce94:	movzx  edi,BYTE PTR [rax]
   14000ce97:	movzx  ecx,BYTE PTR [rax+0x1]
   14000ce9b:	cmp    edi,ecx
   14000ce9d:	ja     0x14000ceb4
   14000ce9f:	sub    ecx,edi
   14000cea1:	lea    rdx,[rdi+rsi*1+0x1d]
   14000cea6:	add    ecx,r12d
   14000cea9:	or     BYTE PTR [rdx],0x4
   14000ceac:	add    rdx,r12
   14000ceaf:	sub    rcx,r12
   14000ceb2:	jne    0x14000cea9
   14000ceb4:	add    rax,0x2
   14000ceb8:	cmp    BYTE PTR [rax],bl
   14000ceba:	jne    0x14000ce8f
   14000cebc:	lea    rax,[rsi+0x1e]
   14000cec0:	mov    ecx,0xfe
   14000cec5:	or     BYTE PTR [rax],0x8
   14000cec8:	add    rax,r12
   14000cecb:	sub    rcx,r12
   14000cece:	jne    0x14000cec5
   14000ced0:	mov    ecx,DWORD PTR [rsi+0x4]
   14000ced3:	sub    ecx,0x3a4
   14000ced9:	je     0x14000cf02
   14000cedb:	sub    ecx,0x4
   14000cede:	je     0x14000cefb
   14000cee0:	sub    ecx,0xd
   14000cee3:	je     0x14000cef4
   14000cee5:	dec    ecx
   14000cee7:	je     0x14000ceed
   14000cee9:	mov    eax,ebx
   14000ceeb:	jmp    0x14000cf07
   14000ceed:	mov    eax,0x404
   14000cef2:	jmp    0x14000cf07
   14000cef4:	mov    eax,0x412
   14000cef9:	jmp    0x14000cf07
   14000cefb:	mov    eax,0x804
   14000cf00:	jmp    0x14000cf07
   14000cf02:	mov    eax,0x411
   14000cf07:	mov    DWORD PTR [rsi+0xc],eax
   14000cf0a:	mov    DWORD PTR [rsi+0x8],r12d
   14000cf0e:	jmp    0x14000cf13
   14000cf10:	mov    DWORD PTR [rsi+0x8],ebx
   14000cf13:	lea    rdi,[rsi+0x10]
   14000cf17:	movzx  eax,bx
   14000cf1a:	mov    ecx,0x6
   14000cf1f:	rep stos WORD PTR es:[rdi],ax
   14000cf22:	jmp    0x14000d006
   14000cf27:	cmp    DWORD PTR [rip+0x166b3],ebx        # 0x1400235e0
   14000cf2d:	jne    0x14000cdeb
   14000cf33:	or     eax,0xffffffff
   14000cf36:	jmp    0x14000d010
   14000cf3b:	lea    rcx,[rsi+0x1c]
   14000cf3f:	xor    edx,edx
   14000cf41:	mov    r8d,0x101
   14000cf47:	call   0x14000f080
   14000cf4c:	lea    r10,[rbp+rbp*2+0x0]
   14000cf51:	lea    r11,[rip+0x14920]        # 0x140021878
   14000cf58:	shl    r10,0x4
   14000cf5c:	mov    ebp,0x4
   14000cf61:	lea    r8,[r10+r13*1+0x10]
   14000cf66:	mov    rcx,r8
   14000cf69:	cmp    BYTE PTR [r8],bl
   14000cf6c:	je     0x14000cf9f
   14000cf6e:	cmp    BYTE PTR [rcx+0x1],bl
   14000cf71:	je     0x14000cf9f
   14000cf73:	movzx  edx,BYTE PTR [rcx]
   14000cf76:	movzx  eax,BYTE PTR [rcx+0x1]
   14000cf7a:	cmp    edx,eax
   14000cf7c:	ja     0x14000cf97
   14000cf7e:	lea    r9,[rdx+rsi*1+0x1d]
   14000cf83:	mov    al,BYTE PTR [r11]
   14000cf86:	add    edx,r12d
   14000cf89:	or     BYTE PTR [r9],al
   14000cf8c:	movzx  eax,BYTE PTR [rcx+0x1]
   14000cf90:	add    r9,r12
   14000cf93:	cmp    edx,eax
   14000cf95:	jbe    0x14000cf83
   14000cf97:	add    rcx,0x2
   14000cf9b:	cmp    BYTE PTR [rcx],bl
   14000cf9d:	jne    0x14000cf6e
   14000cf9f:	add    r8,0x8
   14000cfa3:	add    r11,r12
   14000cfa6:	sub    rbp,r12
   14000cfa9:	jne    0x14000cf66
   14000cfab:	mov    DWORD PTR [rsi+0x4],edi
   14000cfae:	sub    edi,0x3a4
   14000cfb4:	mov    DWORD PTR [rsi+0x8],r12d
   14000cfb8:	je     0x14000cfdd
   14000cfba:	sub    edi,0x4
   14000cfbd:	je     0x14000cfd6
   14000cfbf:	sub    edi,0xd
   14000cfc2:	je     0x14000cfcf
   14000cfc4:	dec    edi
   14000cfc6:	jne    0x14000cfe2
   14000cfc8:	mov    ebx,0x404
   14000cfcd:	jmp    0x14000cfe2
   14000cfcf:	mov    ebx,0x412
   14000cfd4:	jmp    0x14000cfe2
   14000cfd6:	mov    ebx,0x804
   14000cfdb:	jmp    0x14000cfe2
   14000cfdd:	mov    ebx,0x411
   14000cfe2:	sub    r10,rsi
   14000cfe5:	mov    DWORD PTR [rsi+0xc],ebx
   14000cfe8:	lea    rcx,[rsi+0x10]
   14000cfec:	lea    rdi,[r10+r13*1-0xc]
   14000cff1:	mov    edx,0x6
   14000cff6:	movzx  eax,WORD PTR [rdi+rcx*1]
   14000cffa:	mov    WORD PTR [rcx],ax
   14000cffd:	add    rcx,0x2
   14000d001:	sub    rdx,r12
   14000d004:	jne    0x14000cff6
   14000d006:	mov    rcx,rsi
   14000d009:	call   0x14000ca80
   14000d00e:	xor    eax,eax
   14000d010:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d015:	xor    rcx,rsp
   14000d018:	call   0x140007d20
   14000d01d:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d025:	add    rsp,0x40
   14000d029:	pop    r13
   14000d02b:	pop    r12
   14000d02d:	pop    rdi
   14000d02e:	pop    rsi
   14000d02f:	pop    rbp
   14000d030:	ret    
   14000d031:	int3   
   14000d032:	int3   
   14000d033:	int3   
   14000d034:	mov    rax,rsp
   14000d037:	mov    QWORD PTR [rax+0x8],rbx
   14000d03b:	mov    QWORD PTR [rax+0x10],rsi
   14000d03f:	mov    QWORD PTR [rax+0x18],rdi
   14000d043:	mov    QWORD PTR [rax+0x20],r12
   14000d047:	push   r13
   14000d049:	sub    rsp,0x30
   14000d04d:	mov    edi,ecx
   14000d04f:	or     r13d,0xffffffff
   14000d053:	call   0x14000d728
   14000d058:	mov    rsi,rax
   14000d05b:	call   0x14000cc70
   14000d060:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000d067:	mov    ecx,edi
   14000d069:	call   0x14000cd2c
   14000d06e:	mov    r12d,eax
   14000d071:	cmp    eax,DWORD PTR [rbx+0x4]
   14000d074:	je     0x14000d1ef
   14000d07a:	mov    ecx,0x220
   14000d07f:	call   0x14000c320
   14000d084:	mov    rbx,rax
   14000d087:	xor    edi,edi
   14000d089:	test   rax,rax
   14000d08c:	je     0x14000d1f4
   14000d092:	mov    rdx,QWORD PTR [rsi+0xb8]
   14000d099:	mov    rcx,rax
   14000d09c:	mov    r8d,0x220
   14000d0a2:	call   0x140008250
   14000d0a7:	mov    DWORD PTR [rbx],edi
   14000d0a9:	mov    rdx,rbx
   14000d0ac:	mov    ecx,r12d
   14000d0af:	call   0x14000cdbc
   14000d0b4:	mov    r13d,eax
   14000d0b7:	test   eax,eax
   14000d0b9:	jne    0x14000d1c9
   14000d0bf:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000d0c6:	lea    r12,[rip+0x14373]        # 0x140021440
   14000d0cd:	lock dec DWORD PTR [rcx]
   14000d0d0:	jne    0x14000d0e3
   14000d0d2:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000d0d9:	cmp    rcx,r12
   14000d0dc:	je     0x14000d0e3
   14000d0de:	call   0x140008584
   14000d0e3:	mov    QWORD PTR [rsi+0xb8],rbx
   14000d0ea:	lock inc DWORD PTR [rbx]
   14000d0ed:	test   BYTE PTR [rsi+0xc8],0x2
   14000d0f4:	jne    0x14000d1f4
   14000d0fa:	test   BYTE PTR [rip+0x1486f],0x1        # 0x140021970
   14000d101:	jne    0x14000d1f4
   14000d107:	mov    esi,0xd
   14000d10c:	mov    ecx,esi
   14000d10e:	call   0x140012e0c
   14000d113:	nop
   14000d114:	mov    eax,DWORD PTR [rbx+0x4]
   14000d117:	mov    DWORD PTR [rip+0x164d7],eax        # 0x1400235f4
   14000d11d:	mov    eax,DWORD PTR [rbx+0x8]
   14000d120:	mov    DWORD PTR [rip+0x164d2],eax        # 0x1400235f8
   14000d126:	mov    eax,DWORD PTR [rbx+0xc]
   14000d129:	mov    DWORD PTR [rip+0x164cd],eax        # 0x1400235fc
   14000d12f:	mov    edx,edi
   14000d131:	lea    r8,[rip+0xffffffffffff2ec8]        # 0x140000000
   14000d138:	mov    DWORD PTR [rsp+0x20],edx
   14000d13c:	cmp    edx,0x5
   14000d13f:	jge    0x14000d156
   14000d141:	movsxd rcx,edx
   14000d144:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14000d149:	mov    WORD PTR [r8+rcx*2+0x235e8],ax
   14000d152:	inc    edx
   14000d154:	jmp    0x14000d138
   14000d156:	mov    edx,edi
   14000d158:	mov    DWORD PTR [rsp+0x20],edx
   14000d15c:	cmp    edx,0x101
   14000d162:	jge    0x14000d177
   14000d164:	movsxd rcx,edx
   14000d167:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14000d16b:	mov    BYTE PTR [rcx+r8*1+0x21660],al
   14000d173:	inc    edx
   14000d175:	jmp    0x14000d158
   14000d177:	mov    DWORD PTR [rsp+0x20],edi
   14000d17b:	cmp    edi,0x100
   14000d181:	jge    0x14000d199
   14000d183:	movsxd rcx,edi
   14000d186:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   14000d18d:	mov    BYTE PTR [rcx+r8*1+0x21770],al
   14000d195:	inc    edi
   14000d197:	jmp    0x14000d177
   14000d199:	mov    rax,QWORD PTR [rip+0x146d0]        # 0x140021870
   14000d1a0:	lock dec DWORD PTR [rax]
   14000d1a3:	jne    0x14000d1b6
   14000d1a5:	mov    rcx,QWORD PTR [rip+0x146c4]        # 0x140021870
   14000d1ac:	cmp    rcx,r12
   14000d1af:	je     0x14000d1b6
   14000d1b1:	call   0x140008584
   14000d1b6:	mov    QWORD PTR [rip+0x146b3],rbx        # 0x140021870
   14000d1bd:	lock inc DWORD PTR [rbx]
   14000d1c0:	mov    ecx,esi
   14000d1c2:	call   0x140012d0c
   14000d1c7:	jmp    0x14000d1f4
   14000d1c9:	cmp    eax,0xffffffff
   14000d1cc:	jne    0x14000d1f4
   14000d1ce:	lea    r12,[rip+0x1426b]        # 0x140021440
   14000d1d5:	cmp    rbx,r12
   14000d1d8:	je     0x14000d1e2
   14000d1da:	mov    rcx,rbx
   14000d1dd:	call   0x140008584
   14000d1e2:	call   0x140008e40
   14000d1e7:	mov    DWORD PTR [rax],0x16
   14000d1ed:	jmp    0x14000d1f4
   14000d1ef:	xor    edi,edi
   14000d1f1:	mov    r13d,edi
   14000d1f4:	mov    eax,r13d
   14000d1f7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d1fc:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d201:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d206:	mov    r12,QWORD PTR [rsp+0x58]
   14000d20b:	add    rsp,0x30
   14000d20f:	pop    r13
   14000d211:	ret    
   14000d212:	int3   
   14000d213:	int3   
   14000d214:	sub    rsp,0x28
   14000d218:	cmp    DWORD PTR [rip+0x18399],0x0        # 0x1400255b8
   14000d21f:	jne    0x14000d235
   14000d221:	mov    ecx,0xfffffffd
   14000d226:	call   0x14000d034
   14000d22b:	mov    DWORD PTR [rip+0x18383],0x1        # 0x1400255b8
   14000d235:	xor    eax,eax
   14000d237:	add    rsp,0x28
   14000d23b:	ret    
   14000d23c:	lock inc DWORD PTR [rcx]
   14000d23f:	mov    rax,QWORD PTR [rcx+0x110]
   14000d246:	test   rax,rax
   14000d249:	je     0x14000d24e
   14000d24b:	lock inc DWORD PTR [rax]
   14000d24e:	mov    rax,QWORD PTR [rcx+0x120]
   14000d255:	test   rax,rax
   14000d258:	je     0x14000d25d
   14000d25a:	lock inc DWORD PTR [rax]
   14000d25d:	mov    rax,QWORD PTR [rcx+0x118]
   14000d264:	test   rax,rax
   14000d267:	je     0x14000d26c
   14000d269:	lock inc DWORD PTR [rax]
   14000d26c:	mov    rax,QWORD PTR [rcx+0x130]
   14000d273:	test   rax,rax
   14000d276:	je     0x14000d27b
   14000d278:	lock inc DWORD PTR [rax]
   14000d27b:	lea    rax,[rcx+0x58]
   14000d27f:	mov    r8d,0x6
   14000d285:	lea    rdx,[rip+0x146e8]        # 0x140021974
   14000d28c:	cmp    QWORD PTR [rax-0x10],rdx
   14000d290:	je     0x14000d29d
   14000d292:	mov    rdx,QWORD PTR [rax]
   14000d295:	test   rdx,rdx
   14000d298:	je     0x14000d29d
   14000d29a:	lock inc DWORD PTR [rdx]
   14000d29d:	cmp    QWORD PTR [rax-0x8],0x0
   14000d2a2:	je     0x14000d2b0
   14000d2a4:	mov    rdx,QWORD PTR [rax+0x8]
   14000d2a8:	test   rdx,rdx
   14000d2ab:	je     0x14000d2b0
   14000d2ad:	lock inc DWORD PTR [rdx]
   14000d2b0:	add    rax,0x20
   14000d2b4:	dec    r8
   14000d2b7:	jne    0x14000d285
   14000d2b9:	mov    rax,QWORD PTR [rcx+0x158]
   14000d2c0:	lock inc DWORD PTR [rax+0x160]
   14000d2c7:	ret    
   14000d2c8:	test   rcx,rcx
   14000d2cb:	je     0x14000d368
   14000d2d1:	or     r9d,0xffffffff
   14000d2d5:	lock add DWORD PTR [rcx],r9d
   14000d2d9:	mov    rax,QWORD PTR [rcx+0x110]
   14000d2e0:	test   rax,rax
   14000d2e3:	je     0x14000d2e9
   14000d2e5:	lock add DWORD PTR [rax],r9d
   14000d2e9:	mov    rax,QWORD PTR [rcx+0x120]
   14000d2f0:	test   rax,rax
   14000d2f3:	je     0x14000d2f9
   14000d2f5:	lock add DWORD PTR [rax],r9d
   14000d2f9:	mov    rax,QWORD PTR [rcx+0x118]
   14000d300:	test   rax,rax
   14000d303:	je     0x14000d309
   14000d305:	lock add DWORD PTR [rax],r9d
   14000d309:	mov    rax,QWORD PTR [rcx+0x130]
   14000d310:	test   rax,rax
   14000d313:	je     0x14000d319
   14000d315:	lock add DWORD PTR [rax],r9d
   14000d319:	lea    rax,[rcx+0x58]
   14000d31d:	mov    r8d,0x6
   14000d323:	lea    rdx,[rip+0x1464a]        # 0x140021974
   14000d32a:	cmp    QWORD PTR [rax-0x10],rdx
   14000d32e:	je     0x14000d33c
   14000d330:	mov    rdx,QWORD PTR [rax]
   14000d333:	test   rdx,rdx
   14000d336:	je     0x14000d33c
   14000d338:	lock add DWORD PTR [rdx],r9d
   14000d33c:	cmp    QWORD PTR [rax-0x8],0x0
   14000d341:	je     0x14000d350
   14000d343:	mov    rdx,QWORD PTR [rax+0x8]
   14000d347:	test   rdx,rdx
   14000d34a:	je     0x14000d350
   14000d34c:	lock add DWORD PTR [rdx],r9d
   14000d350:	add    rax,0x20
   14000d354:	dec    r8
   14000d357:	jne    0x14000d323
   14000d359:	mov    rax,QWORD PTR [rcx+0x158]
   14000d360:	lock add DWORD PTR [rax+0x160],r9d
   14000d368:	mov    rax,rcx
   14000d36b:	ret    
   14000d36c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d371:	mov    QWORD PTR [rsp+0x10],rsi
   14000d376:	push   rdi
   14000d377:	sub    rsp,0x20
   14000d37b:	mov    rax,QWORD PTR [rcx+0x128]
   14000d382:	mov    rbx,rcx
   14000d385:	test   rax,rax
   14000d388:	je     0x14000d403
   14000d38a:	lea    rcx,[rip+0x14c1f]        # 0x140021fb0
   14000d391:	cmp    rax,rcx
   14000d394:	je     0x14000d403
   14000d396:	mov    rax,QWORD PTR [rbx+0x110]
   14000d39d:	test   rax,rax
   14000d3a0:	je     0x14000d403
   14000d3a2:	cmp    DWORD PTR [rax],0x0
   14000d3a5:	jne    0x14000d403
   14000d3a7:	mov    rcx,QWORD PTR [rbx+0x120]
   14000d3ae:	test   rcx,rcx
   14000d3b1:	je     0x14000d3c9
   14000d3b3:	cmp    DWORD PTR [rcx],0x0
   14000d3b6:	jne    0x14000d3c9
   14000d3b8:	call   0x140008584
   14000d3bd:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d3c4:	call   0x14001263c
   14000d3c9:	mov    rcx,QWORD PTR [rbx+0x118]
   14000d3d0:	test   rcx,rcx
   14000d3d3:	je     0x14000d3eb
   14000d3d5:	cmp    DWORD PTR [rcx],0x0
   14000d3d8:	jne    0x14000d3eb
   14000d3da:	call   0x140008584
   14000d3df:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d3e6:	call   0x140012368
   14000d3eb:	mov    rcx,QWORD PTR [rbx+0x110]
   14000d3f2:	call   0x140008584
   14000d3f7:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d3fe:	call   0x140008584
   14000d403:	mov    rax,QWORD PTR [rbx+0x130]
   14000d40a:	test   rax,rax
   14000d40d:	je     0x14000d456
   14000d40f:	cmp    DWORD PTR [rax],0x0
   14000d412:	jne    0x14000d456
   14000d414:	mov    rcx,QWORD PTR [rbx+0x138]
   14000d41b:	sub    rcx,0xfe
   14000d422:	call   0x140008584
   14000d427:	mov    rcx,QWORD PTR [rbx+0x148]
   14000d42e:	mov    edi,0x80
   14000d433:	sub    rcx,rdi
   14000d436:	call   0x140008584
   14000d43b:	mov    rcx,QWORD PTR [rbx+0x150]
   14000d442:	sub    rcx,rdi
   14000d445:	call   0x140008584
   14000d44a:	mov    rcx,QWORD PTR [rbx+0x130]
   14000d451:	call   0x140008584
   14000d456:	mov    rcx,QWORD PTR [rbx+0x158]
   14000d45d:	lea    rax,[rip+0x1451c]        # 0x140021980
   14000d464:	cmp    rcx,rax
   14000d467:	je     0x14000d483
   14000d469:	cmp    DWORD PTR [rcx+0x160],0x0
   14000d470:	jne    0x14000d483
   14000d472:	call   0x140011edc
   14000d477:	mov    rcx,QWORD PTR [rbx+0x158]
   14000d47e:	call   0x140008584
   14000d483:	lea    rdi,[rbx+0x58]
   14000d487:	mov    esi,0x6
   14000d48c:	lea    rax,[rip+0x144e1]        # 0x140021974
   14000d493:	cmp    QWORD PTR [rdi-0x10],rax
   14000d497:	je     0x14000d4ab
   14000d499:	mov    rcx,QWORD PTR [rdi]
   14000d49c:	test   rcx,rcx
   14000d49f:	je     0x14000d4ab
   14000d4a1:	cmp    DWORD PTR [rcx],0x0
   14000d4a4:	jne    0x14000d4ab
   14000d4a6:	call   0x140008584
   14000d4ab:	cmp    QWORD PTR [rdi-0x8],0x0
   14000d4b0:	je     0x14000d4c5
   14000d4b2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000d4b6:	test   rcx,rcx
   14000d4b9:	je     0x14000d4c5
   14000d4bb:	cmp    DWORD PTR [rcx],0x0
   14000d4be:	jne    0x14000d4c5
   14000d4c0:	call   0x140008584
   14000d4c5:	add    rdi,0x20
   14000d4c9:	dec    rsi
   14000d4cc:	jne    0x14000d48c
   14000d4ce:	mov    rcx,rbx
   14000d4d1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4d6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d4db:	add    rsp,0x20
   14000d4df:	pop    rdi
   14000d4e0:	jmp    0x140008584
   14000d4e5:	int3   
   14000d4e6:	int3   
   14000d4e7:	int3   
   14000d4e8:	rex push rbx
   14000d4ea:	sub    rsp,0x20
   14000d4ee:	mov    rbx,rdx
   14000d4f1:	test   rdx,rdx
   14000d4f4:	je     0x14000d537
   14000d4f6:	test   rcx,rcx
   14000d4f9:	je     0x14000d537
   14000d4fb:	mov    r10,QWORD PTR [rcx]
   14000d4fe:	cmp    r10,rdx
   14000d501:	je     0x14000d532
   14000d503:	mov    QWORD PTR [rcx],rdx
   14000d506:	mov    rcx,rdx
   14000d509:	call   0x14000d23c
   14000d50e:	test   r10,r10
   14000d511:	je     0x14000d532
   14000d513:	mov    rcx,r10
   14000d516:	call   0x14000d2c8
   14000d51b:	cmp    DWORD PTR [r10],0x0
   14000d51f:	jne    0x14000d532
   14000d521:	lea    rax,[rip+0x14718]        # 0x140021c40
   14000d528:	cmp    r10,rax
   14000d52b:	je     0x14000d532
   14000d52d:	call   0x14000d36c
   14000d532:	mov    rax,rbx
   14000d535:	jmp    0x14000d539
   14000d537:	xor    eax,eax
   14000d539:	add    rsp,0x20
   14000d53d:	pop    rbx
   14000d53e:	ret    
   14000d53f:	int3   
   14000d540:	rex push rbx
   14000d542:	sub    rsp,0x20
   14000d546:	call   0x14000d728
   14000d54b:	mov    rbx,rax
   14000d54e:	mov    ecx,DWORD PTR [rax+0xc8]
   14000d554:	test   DWORD PTR [rip+0x14416],ecx        # 0x140021970
   14000d55a:	je     0x14000d574
   14000d55c:	cmp    QWORD PTR [rax+0xc0],0x0
   14000d564:	je     0x14000d574
   14000d566:	call   0x14000d728
   14000d56b:	mov    rbx,QWORD PTR [rax+0xc0]
   14000d572:	jmp    0x14000d59f
   14000d574:	mov    ecx,0xc
   14000d579:	call   0x140012e0c
   14000d57e:	nop
   14000d57f:	lea    rcx,[rbx+0xc0]
   14000d586:	mov    rdx,QWORD PTR [rip+0x14813]        # 0x140021da0
   14000d58d:	call   0x14000d4e8
   14000d592:	mov    rbx,rax
   14000d595:	mov    ecx,0xc
   14000d59a:	call   0x140012d0c
   14000d59f:	test   rbx,rbx
   14000d5a2:	jne    0x14000d5ac
   14000d5a4:	lea    ecx,[rbx+0x20]
   14000d5a7:	call   0x14000e014
   14000d5ac:	mov    rax,rbx
   14000d5af:	add    rsp,0x20
   14000d5b3:	pop    rbx
   14000d5b4:	ret    
   14000d5b5:	int3   
   14000d5b6:	int3   
   14000d5b7:	int3   
   14000d5b8:	xor    ecx,ecx
   14000d5ba:	rex.W jmp QWORD PTR [rip+0xaaf7]        # 0x1400180b8
   14000d5c1:	int3   
   14000d5c2:	int3   
   14000d5c3:	int3   
   14000d5c4:	sub    rsp,0x28
   14000d5c8:	mov    ecx,DWORD PTR [rip+0x147ea]        # 0x140021db8
   14000d5ce:	cmp    ecx,0xffffffff
   14000d5d1:	je     0x14000d5e0
   14000d5d3:	call   QWORD PTR [rip+0xabc7]        # 0x1400181a0
   14000d5d9:	or     DWORD PTR [rip+0x147d8],0xffffffff        # 0x140021db8
   14000d5e0:	add    rsp,0x28
   14000d5e4:	jmp    0x140012c84
   14000d5e9:	int3   
   14000d5ea:	int3   
   14000d5eb:	int3   
   14000d5ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5f1:	push   rdi
   14000d5f2:	sub    rsp,0x20
   14000d5f6:	mov    rdi,rdx
   14000d5f9:	mov    rbx,rcx
   14000d5fc:	lea    rax,[rip+0xca8d]        # 0x14001a090
   14000d603:	mov    QWORD PTR [rcx+0xa0],rax
   14000d60a:	and    DWORD PTR [rcx+0x10],0x0
   14000d60e:	mov    DWORD PTR [rcx+0x1c],0x1
   14000d615:	mov    DWORD PTR [rcx+0xc8],0x1
   14000d61f:	mov    BYTE PTR [rcx+0x174],0x43
   14000d626:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000d62d:	lea    rax,[rip+0x13e0c]        # 0x140021440
   14000d634:	mov    QWORD PTR [rcx+0xb8],rax
   14000d63b:	mov    ecx,0xd
   14000d640:	call   0x140012e0c
   14000d645:	nop
   14000d646:	mov    rax,QWORD PTR [rbx+0xb8]
   14000d64d:	lock inc DWORD PTR [rax]
   14000d650:	mov    ecx,0xd
   14000d655:	call   0x140012d0c
   14000d65a:	mov    ecx,0xc
   14000d65f:	call   0x140012e0c
   14000d664:	nop
   14000d665:	mov    QWORD PTR [rbx+0xc0],rdi
   14000d66c:	test   rdi,rdi
   14000d66f:	jne    0x14000d67f
   14000d671:	mov    rax,QWORD PTR [rip+0x14728]        # 0x140021da0
   14000d678:	mov    QWORD PTR [rbx+0xc0],rax
   14000d67f:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d686:	call   0x14000d23c
   14000d68b:	nop
   14000d68c:	mov    ecx,0xc
   14000d691:	call   0x140012d0c
   14000d696:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d69b:	add    rsp,0x20
   14000d69f:	pop    rdi
   14000d6a0:	ret    
   14000d6a1:	int3   
   14000d6a2:	int3   
   14000d6a3:	int3   
   14000d6a4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d6a9:	push   rdi
   14000d6aa:	sub    rsp,0x20
   14000d6ae:	call   QWORD PTR [rip+0xa9ac]        # 0x140018060
   14000d6b4:	mov    ecx,DWORD PTR [rip+0x146fe]        # 0x140021db8
   14000d6ba:	mov    edi,eax
   14000d6bc:	call   QWORD PTR [rip+0xaace]        # 0x140018190
   14000d6c2:	mov    rbx,rax
   14000d6c5:	test   rax,rax
   14000d6c8:	jne    0x14000d712
   14000d6ca:	lea    ecx,[rax+0x1]
   14000d6cd:	mov    edx,0x2c8
   14000d6d2:	call   0x14000c3a0
   14000d6d7:	mov    rbx,rax
   14000d6da:	test   rax,rax
   14000d6dd:	je     0x14000d712
   14000d6df:	mov    ecx,DWORD PTR [rip+0x146d3]        # 0x140021db8
   14000d6e5:	mov    rdx,rax
   14000d6e8:	call   QWORD PTR [rip+0xaaaa]        # 0x140018198
   14000d6ee:	mov    rcx,rbx
   14000d6f1:	test   eax,eax
   14000d6f3:	je     0x14000d70b
   14000d6f5:	xor    edx,edx
   14000d6f7:	call   0x14000d5ec
   14000d6fc:	call   QWORD PTR [rip+0xaaae]        # 0x1400181b0
   14000d702:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d707:	mov    DWORD PTR [rbx],eax
   14000d709:	jmp    0x14000d712
   14000d70b:	call   0x140008584
   14000d710:	xor    ebx,ebx
   14000d712:	mov    ecx,edi
   14000d714:	call   QWORD PTR [rip+0xaa8e]        # 0x1400181a8
   14000d71a:	mov    rax,rbx
   14000d71d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d722:	add    rsp,0x20
   14000d726:	pop    rdi
   14000d727:	ret    
   14000d728:	rex push rbx
   14000d72a:	sub    rsp,0x20
   14000d72e:	call   0x14000d6a4
   14000d733:	mov    rbx,rax
   14000d736:	test   rax,rax
   14000d739:	jne    0x14000d743
   14000d73b:	lea    ecx,[rax+0x10]
   14000d73e:	call   0x14000e014
   14000d743:	mov    rax,rbx
   14000d746:	add    rsp,0x20
   14000d74a:	pop    rbx
   14000d74b:	ret    
   14000d74c:	test   rcx,rcx
   14000d74f:	je     0x14000d87e
   14000d755:	mov    QWORD PTR [rsp+0x10],rbx
   14000d75a:	push   rdi
   14000d75b:	sub    rsp,0x20
   14000d75f:	mov    rbx,rcx
   14000d762:	mov    rcx,QWORD PTR [rcx+0x38]
   14000d766:	test   rcx,rcx
   14000d769:	je     0x14000d770
   14000d76b:	call   0x140008584
   14000d770:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d774:	test   rcx,rcx
   14000d777:	je     0x14000d77e
   14000d779:	call   0x140008584
   14000d77e:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d782:	test   rcx,rcx
   14000d785:	je     0x14000d78c
   14000d787:	call   0x140008584
   14000d78c:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d790:	test   rcx,rcx
   14000d793:	je     0x14000d79a
   14000d795:	call   0x140008584
   14000d79a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d79e:	test   rcx,rcx
   14000d7a1:	je     0x14000d7a8
   14000d7a3:	call   0x140008584
   14000d7a8:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d7ac:	test   rcx,rcx
   14000d7af:	je     0x14000d7b6
   14000d7b1:	call   0x140008584
   14000d7b6:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d7bd:	test   rcx,rcx
   14000d7c0:	je     0x14000d7c7
   14000d7c2:	call   0x140008584
   14000d7c7:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d7ce:	lea    rax,[rip+0xc8bb]        # 0x14001a090
   14000d7d5:	cmp    rcx,rax
   14000d7d8:	je     0x14000d7df
   14000d7da:	call   0x140008584
   14000d7df:	mov    edi,0xd
   14000d7e4:	mov    ecx,edi
   14000d7e6:	call   0x140012e0c
   14000d7eb:	nop
   14000d7ec:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d7f3:	mov    QWORD PTR [rsp+0x30],rcx
   14000d7f8:	test   rcx,rcx
   14000d7fb:	je     0x14000d819
   14000d7fd:	lock dec DWORD PTR [rcx]
   14000d800:	jne    0x14000d819
   14000d802:	lea    rax,[rip+0x13c37]        # 0x140021440
   14000d809:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d80e:	cmp    rcx,rax
   14000d811:	je     0x14000d819
   14000d813:	call   0x140008584
   14000d818:	nop
   14000d819:	mov    ecx,edi
   14000d81b:	call   0x140012d0c
   14000d820:	mov    ecx,0xc
   14000d825:	call   0x140012e0c
   14000d82a:	nop
   14000d82b:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000d832:	test   rdi,rdi
   14000d835:	je     0x14000d862
   14000d837:	mov    rcx,rdi
   14000d83a:	call   0x14000d2c8
   14000d83f:	cmp    rdi,QWORD PTR [rip+0x1455a]        # 0x140021da0
   14000d846:	je     0x14000d862
   14000d848:	lea    rax,[rip+0x143f1]        # 0x140021c40
   14000d84f:	cmp    rdi,rax
   14000d852:	je     0x14000d862
   14000d854:	cmp    DWORD PTR [rdi],0x0
   14000d857:	jne    0x14000d862
   14000d859:	mov    rcx,rdi
   14000d85c:	call   0x14000d36c
   14000d861:	nop
   14000d862:	mov    ecx,0xc
   14000d867:	call   0x140012d0c
   14000d86c:	mov    rcx,rbx
   14000d86f:	call   0x140008584
   14000d874:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d879:	add    rsp,0x20
   14000d87d:	pop    rdi
   14000d87e:	ret    
   14000d87f:	int3   
   14000d880:	rex push rbx
   14000d882:	sub    rsp,0x20
   14000d886:	call   0x14000dce8
   14000d88b:	call   0x140012c00
   14000d890:	test   eax,eax
   14000d892:	je     0x14000d8f4
   14000d894:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x14000d74c
   14000d89b:	call   QWORD PTR [rip+0xa917]        # 0x1400181b8
   14000d8a1:	mov    DWORD PTR [rip+0x14511],eax        # 0x140021db8
   14000d8a7:	cmp    eax,0xffffffff
   14000d8aa:	je     0x14000d8f4
   14000d8ac:	mov    edx,0x2c8
   14000d8b1:	mov    ecx,0x1
   14000d8b6:	call   0x14000c3a0
   14000d8bb:	mov    rbx,rax
   14000d8be:	test   rax,rax
   14000d8c1:	je     0x14000d8f4
   14000d8c3:	mov    ecx,DWORD PTR [rip+0x144ef]        # 0x140021db8
   14000d8c9:	mov    rdx,rax
   14000d8cc:	call   QWORD PTR [rip+0xa8c6]        # 0x140018198
   14000d8d2:	test   eax,eax
   14000d8d4:	je     0x14000d8f4
   14000d8d6:	xor    edx,edx
   14000d8d8:	mov    rcx,rbx
   14000d8db:	call   0x14000d5ec
   14000d8e0:	call   QWORD PTR [rip+0xa8ca]        # 0x1400181b0
   14000d8e6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d8eb:	mov    DWORD PTR [rbx],eax
   14000d8ed:	mov    eax,0x1
   14000d8f2:	jmp    0x14000d8fb
   14000d8f4:	call   0x14000d5c4
   14000d8f9:	xor    eax,eax
   14000d8fb:	add    rsp,0x20
   14000d8ff:	pop    rbx
   14000d900:	ret    
   14000d901:	int3   
   14000d902:	int3   
   14000d903:	int3   
   14000d904:	mov    QWORD PTR [rip+0x15cf5],rcx        # 0x140023600
   14000d90b:	ret    
   14000d90c:	mov    QWORD PTR [rsp+0x10],rbx
   14000d911:	mov    QWORD PTR [rsp+0x18],rsi
   14000d916:	push   rbp
   14000d917:	push   rdi
   14000d918:	push   r12
   14000d91a:	lea    rbp,[rsp-0x4f0]
   14000d922:	sub    rsp,0x5f0
   14000d929:	mov    rax,QWORD PTR [rip+0x13ae0]        # 0x140021410
   14000d930:	xor    rax,rsp
   14000d933:	mov    QWORD PTR [rbp+0x4e0],rax
   14000d93a:	mov    edi,r8d
   14000d93d:	mov    esi,edx
   14000d93f:	mov    ebx,ecx
   14000d941:	cmp    ecx,0xffffffff
   14000d944:	je     0x14000d94b
   14000d946:	call   0x14001420c
   14000d94b:	and    DWORD PTR [rsp+0x70],0x0
   14000d950:	lea    rcx,[rsp+0x74]
   14000d955:	xor    edx,edx
   14000d957:	mov    r8d,0x94
   14000d95d:	call   0x14000f080
   14000d962:	lea    r11,[rsp+0x70]
   14000d967:	lea    rax,[rbp+0x10]
   14000d96b:	lea    rcx,[rbp+0x10]
   14000d96f:	mov    QWORD PTR [rsp+0x48],r11
   14000d974:	mov    QWORD PTR [rsp+0x50],rax
   14000d979:	call   QWORD PTR [rip+0xa7f1]        # 0x140018170
   14000d97f:	mov    r12,QWORD PTR [rbp+0x108]
   14000d986:	lea    rdx,[rsp+0x40]
   14000d98b:	mov    rcx,r12
   14000d98e:	xor    r8d,r8d
   14000d991:	call   0x140016e6e
   14000d996:	test   rax,rax
   14000d999:	je     0x14000d9d2
   14000d99b:	and    QWORD PTR [rsp+0x38],0x0
   14000d9a1:	mov    rdx,QWORD PTR [rsp+0x40]
   14000d9a6:	lea    rcx,[rsp+0x60]
   14000d9ab:	mov    QWORD PTR [rsp+0x30],rcx
   14000d9b0:	lea    rcx,[rsp+0x58]
   14000d9b5:	mov    r9,rax
   14000d9b8:	mov    QWORD PTR [rsp+0x28],rcx
   14000d9bd:	lea    rcx,[rbp+0x10]
   14000d9c1:	mov    r8,r12
   14000d9c4:	mov    QWORD PTR [rsp+0x20],rcx
   14000d9c9:	xor    ecx,ecx
   14000d9cb:	call   0x140016e7a
   14000d9d0:	jmp    0x14000d9ee
   14000d9d2:	mov    rax,QWORD PTR [rbp+0x508]
   14000d9d9:	mov    QWORD PTR [rbp+0x108],rax
   14000d9e0:	lea    rax,[rbp+0x508]
   14000d9e7:	mov    QWORD PTR [rbp+0xa8],rax
   14000d9ee:	mov    rax,QWORD PTR [rbp+0x508]
   14000d9f5:	mov    DWORD PTR [rsp+0x70],esi
   14000d9f9:	mov    DWORD PTR [rsp+0x74],edi
   14000d9fd:	mov    QWORD PTR [rbp-0x80],rax
   14000da01:	call   QWORD PTR [rip+0xa759]        # 0x140018160
   14000da07:	xor    ecx,ecx
   14000da09:	mov    edi,eax
   14000da0b:	call   QWORD PTR [rip+0xa747]        # 0x140018158
   14000da11:	lea    rcx,[rsp+0x48]
   14000da16:	call   QWORD PTR [rip+0xa734]        # 0x140018150
   14000da1c:	test   eax,eax
   14000da1e:	jne    0x14000da30
   14000da20:	test   edi,edi
   14000da22:	jne    0x14000da30
   14000da24:	cmp    ebx,0xffffffff
   14000da27:	je     0x14000da30
   14000da29:	mov    ecx,ebx
   14000da2b:	call   0x14001420c
   14000da30:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000da37:	xor    rcx,rsp
   14000da3a:	call   0x140007d20
   14000da3f:	lea    r11,[rsp+0x5f0]
   14000da47:	mov    rbx,QWORD PTR [r11+0x28]
   14000da4b:	mov    rsi,QWORD PTR [r11+0x30]
   14000da4f:	mov    rsp,r11
   14000da52:	pop    r12
   14000da54:	pop    rdi
   14000da55:	pop    rbp
   14000da56:	ret    
   14000da57:	int3   
   14000da58:	sub    rsp,0x28
   14000da5c:	mov    r8d,0x1
   14000da62:	mov    edx,0xc0000417
   14000da67:	lea    ecx,[r8+0x1]
   14000da6b:	call   0x14000d90c
   14000da70:	call   QWORD PTR [rip+0xa6d2]        # 0x140018148
   14000da76:	mov    edx,0xc0000417
   14000da7b:	mov    rcx,rax
   14000da7e:	add    rsp,0x28
   14000da82:	rex.W jmp QWORD PTR [rip+0xa6b7]        # 0x140018140
   14000da89:	int3   
   14000da8a:	int3   
   14000da8b:	int3   
   14000da8c:	mov    QWORD PTR [rsp+0x8],rbx
   14000da91:	mov    QWORD PTR [rsp+0x10],rbp
   14000da96:	mov    QWORD PTR [rsp+0x18],rsi
   14000da9b:	push   rdi
   14000da9c:	sub    rsp,0x30
   14000daa0:	mov    rbp,rcx
   14000daa3:	mov    rcx,QWORD PTR [rip+0x15b56]        # 0x140023600
   14000daaa:	mov    ebx,r9d
   14000daad:	mov    rdi,r8
   14000dab0:	mov    rsi,rdx
   14000dab3:	call   QWORD PTR [rip+0xa607]        # 0x1400180c0
   14000dab9:	mov    r9d,ebx
   14000dabc:	mov    r8,rdi
   14000dabf:	mov    rdx,rsi
   14000dac2:	mov    rcx,rbp
   14000dac5:	test   rax,rax
   14000dac8:	je     0x14000daeb
   14000daca:	mov    r10,QWORD PTR [rsp+0x60]
   14000dacf:	mov    QWORD PTR [rsp+0x20],r10
   14000dad4:	call   rax
   14000dad6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dadb:	mov    rbp,QWORD PTR [rsp+0x48]
   14000dae0:	mov    rsi,QWORD PTR [rsp+0x50]
   14000dae5:	add    rsp,0x30
   14000dae9:	pop    rdi
   14000daea:	ret    
   14000daeb:	mov    rax,QWORD PTR [rsp+0x60]
   14000daf0:	mov    QWORD PTR [rsp+0x20],rax
   14000daf5:	call   0x14000da58
   14000dafa:	int3   
   14000dafb:	int3   
   14000dafc:	sub    rsp,0x38
   14000db00:	and    QWORD PTR [rsp+0x20],0x0
   14000db06:	xor    r9d,r9d
   14000db09:	xor    r8d,r8d
   14000db0c:	xor    edx,edx
   14000db0e:	xor    ecx,ecx
   14000db10:	call   0x14000da8c
   14000db15:	add    rsp,0x38
   14000db19:	ret    
   14000db1a:	int3   
   14000db1b:	int3   
   14000db1c:	mov    WORD PTR [rsp+0x8],cx
   14000db21:	push   rbx
   14000db22:	sub    rsp,0x20
   14000db26:	mov    eax,0xffff
   14000db2b:	movzx  ebx,dx
   14000db2e:	cmp    cx,ax
   14000db31:	jne    0x14000db37
   14000db33:	xor    eax,eax
   14000db35:	jmp    0x14000db7c
   14000db37:	mov    eax,0x100
   14000db3c:	cmp    cx,ax
   14000db3f:	jae    0x14000db51
   14000db41:	mov    rax,QWORD PTR [rip+0x138e0]        # 0x140021428
   14000db48:	movzx  ecx,cx
   14000db4b:	movzx  eax,WORD PTR [rax+rcx*2]
   14000db4f:	jmp    0x14000db77
   14000db51:	mov    ecx,0x1
   14000db56:	lea    r9,[rsp+0x40]
   14000db5b:	lea    rdx,[rsp+0x30]
   14000db60:	mov    r8d,ecx
   14000db63:	call   QWORD PTR [rip+0xa547]        # 0x1400180b0
   14000db69:	xor    ecx,ecx
   14000db6b:	test   eax,eax
   14000db6d:	je     0x14000db74
   14000db6f:	movzx  ecx,WORD PTR [rsp+0x40]
   14000db74:	movzx  eax,cx
   14000db77:	movzx  ecx,bx
   14000db7a:	and    eax,ecx
   14000db7c:	add    rsp,0x20
   14000db80:	pop    rbx
   14000db81:	ret    
   14000db82:	int3   
   14000db83:	int3   
   14000db84:	rex push rbx
   14000db86:	sub    rsp,0x20
   14000db8a:	test   rcx,rcx
   14000db8d:	je     0x14000db9c
   14000db8f:	test   rdx,rdx
   14000db92:	je     0x14000db9c
   14000db94:	test   r8,r8
   14000db97:	jne    0x14000dbb5
   14000db99:	mov    BYTE PTR [rcx],r8b
   14000db9c:	call   0x140008e40
   14000dba1:	mov    ebx,0x16
   14000dba6:	mov    DWORD PTR [rax],ebx
   14000dba8:	call   0x14000dafc
   14000dbad:	mov    eax,ebx
   14000dbaf:	add    rsp,0x20
   14000dbb3:	pop    rbx
   14000dbb4:	ret    
   14000dbb5:	mov    r9,rcx
   14000dbb8:	sub    r9,r8
   14000dbbb:	mov    al,BYTE PTR [r8]
   14000dbbe:	mov    BYTE PTR [r9+r8*1],al
   14000dbc2:	inc    r8
   14000dbc5:	test   al,al
   14000dbc7:	je     0x14000dbce
   14000dbc9:	dec    rdx
   14000dbcc:	jne    0x14000dbbb
   14000dbce:	test   rdx,rdx
   14000dbd1:	jne    0x14000dbe1
   14000dbd3:	mov    BYTE PTR [rcx],dl
   14000dbd5:	call   0x140008e40
   14000dbda:	mov    ebx,0x22
   14000dbdf:	jmp    0x14000dba6
   14000dbe1:	xor    eax,eax
   14000dbe3:	jmp    0x14000dbaf
   14000dbe5:	int3   
   14000dbe6:	int3   
   14000dbe7:	int3   
   14000dbe8:	sub    rsp,0x28
   14000dbec:	xor    r8d,r8d
   14000dbef:	mov    edx,0x1000
   14000dbf4:	xor    ecx,ecx
   14000dbf6:	mov    DWORD PTR [rsp+0x30],0x2
   14000dbfe:	call   QWORD PTR [rip+0xa5cc]        # 0x1400181d0
   14000dc04:	mov    QWORD PTR [rip+0x159fd],rax        # 0x140023608
   14000dc0b:	test   rax,rax
   14000dc0e:	je     0x14000dc39
   14000dc10:	call   QWORD PTR [rip+0xa5b2]        # 0x1400181c8
   14000dc16:	cmp    al,0x6
   14000dc18:	jae    0x14000dc34
   14000dc1a:	mov    rcx,QWORD PTR [rip+0x159e7]        # 0x140023608
   14000dc21:	lea    r8,[rsp+0x30]
   14000dc26:	mov    r9d,0x4
   14000dc2c:	xor    edx,edx
   14000dc2e:	call   QWORD PTR [rip+0xa58c]        # 0x1400181c0
   14000dc34:	mov    eax,0x1
   14000dc39:	add    rsp,0x28
   14000dc3d:	ret    
   14000dc3e:	int3   
   14000dc3f:	int3   
   14000dc40:	sub    rsp,0x28
   14000dc44:	test   rcx,rcx
   14000dc47:	jne    0x14000dc62
   14000dc49:	call   0x140008e40
   14000dc4e:	mov    DWORD PTR [rax],0x16
   14000dc54:	call   0x14000dafc
   14000dc59:	or     rax,0xffffffffffffffff
   14000dc5d:	add    rsp,0x28
   14000dc61:	ret    
   14000dc62:	mov    r8,rcx
   14000dc65:	mov    rcx,QWORD PTR [rip+0x1599c]        # 0x140023608
   14000dc6c:	xor    edx,edx
   14000dc6e:	add    rsp,0x28
   14000dc72:	rex.W jmp QWORD PTR [rip+0xa55f]        # 0x1400181d8
   14000dc79:	int3   
   14000dc7a:	int3   
   14000dc7b:	int3   
   14000dc7c:	rex push rbx
   14000dc7e:	sub    rsp,0x20
   14000dc82:	mov    ebx,ecx
   14000dc84:	lea    rcx,[rip+0xb8f5]        # 0x140019580
   14000dc8b:	call   QWORD PTR [rip+0xa557]        # 0x1400181e8
   14000dc91:	test   rax,rax
   14000dc94:	je     0x14000dcaf
   14000dc96:	lea    rdx,[rip+0xb8d3]        # 0x140019570
   14000dc9d:	mov    rcx,rax
   14000dca0:	call   QWORD PTR [rip+0xa53a]        # 0x1400181e0
   14000dca6:	test   rax,rax
   14000dca9:	je     0x14000dcaf
   14000dcab:	mov    ecx,ebx
   14000dcad:	call   rax
   14000dcaf:	add    rsp,0x20
   14000dcb3:	pop    rbx
   14000dcb4:	ret    
   14000dcb5:	int3   
   14000dcb6:	int3   
   14000dcb7:	int3   
   14000dcb8:	rex push rbx
   14000dcba:	sub    rsp,0x20
   14000dcbe:	mov    ebx,ecx
   14000dcc0:	call   0x14000dc7c
   14000dcc5:	mov    ecx,ebx
   14000dcc7:	call   QWORD PTR [rip+0xa523]        # 0x1400181f0
   14000dccd:	int3   
   14000dcce:	int3   
   14000dccf:	int3   
   14000dcd0:	mov    ecx,0x8
   14000dcd5:	jmp    0x140012e0c
   14000dcda:	int3   
   14000dcdb:	int3   
   14000dcdc:	mov    ecx,0x8
   14000dce1:	jmp    0x140012d0c
   14000dce6:	int3   
   14000dce7:	int3   
   14000dce8:	rex push rbx
   14000dcea:	sub    rsp,0x20
   14000dcee:	call   0x14000d5b8
   14000dcf3:	mov    rcx,rax
   14000dcf6:	mov    rbx,rax
   14000dcf9:	call   0x14000e370
   14000dcfe:	mov    rcx,rbx
   14000dd01:	call   0x14000d904
   14000dd06:	mov    rcx,rbx
   14000dd09:	call   0x1400110f8
   14000dd0e:	mov    rcx,rbx
   14000dd11:	call   0x140014214
   14000dd16:	mov    rcx,rbx
   14000dd19:	call   0x140013fa8
   14000dd1e:	mov    rcx,rbx
   14000dd21:	add    rsp,0x20
   14000dd25:	pop    rbx
   14000dd26:	jmp    0x14001127c
   14000dd2b:	int3   
   14000dd2c:	cmp    rcx,rdx
   14000dd2f:	jae    0x14000dd5e
   14000dd31:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd36:	push   rdi
   14000dd37:	sub    rsp,0x20
   14000dd3b:	mov    rdi,rdx
   14000dd3e:	mov    rbx,rcx
   14000dd41:	mov    rax,QWORD PTR [rbx]
   14000dd44:	test   rax,rax
   14000dd47:	je     0x14000dd4b
   14000dd49:	call   rax
   14000dd4b:	add    rbx,0x8
   14000dd4f:	cmp    rbx,rdi
   14000dd52:	jb     0x14000dd41
   14000dd54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd59:	add    rsp,0x20
   14000dd5d:	pop    rdi
   14000dd5e:	ret    
   14000dd5f:	int3   
   14000dd60:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd65:	push   rdi
   14000dd66:	sub    rsp,0x20
   14000dd6a:	xor    eax,eax
   14000dd6c:	mov    rdi,rdx
   14000dd6f:	mov    rbx,rcx
   14000dd72:	cmp    rcx,rdx
   14000dd75:	jae    0x14000dd8e
   14000dd77:	test   eax,eax
   14000dd79:	jne    0x14000dd8e
   14000dd7b:	mov    rcx,QWORD PTR [rbx]
   14000dd7e:	test   rcx,rcx
   14000dd81:	je     0x14000dd85
   14000dd83:	call   rcx
   14000dd85:	add    rbx,0x8
   14000dd89:	cmp    rbx,rdi
   14000dd8c:	jb     0x14000dd77
   14000dd8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd93:	add    rsp,0x20
   14000dd97:	pop    rdi
   14000dd98:	ret    
   14000dd99:	int3   
   14000dd9a:	int3   
   14000dd9b:	int3   
   14000dd9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dda1:	push   rdi
   14000dda2:	sub    rsp,0x20
   14000dda6:	cmp    QWORD PTR [rip+0x17812],0x0        # 0x1400255c0
   14000ddae:	mov    ebx,ecx
   14000ddb0:	je     0x14000ddca
   14000ddb2:	lea    rcx,[rip+0x17807]        # 0x1400255c0
   14000ddb9:	call   0x1400142e0
   14000ddbe:	test   eax,eax
   14000ddc0:	je     0x14000ddca
   14000ddc2:	mov    ecx,ebx
   14000ddc4:	call   QWORD PTR [rip+0x177f6]        # 0x1400255c0
   14000ddca:	call   0x14001421c
   14000ddcf:	lea    rdx,[rip+0xa59a]        # 0x140018370
   14000ddd6:	lea    rcx,[rip+0xa563]        # 0x140018340
   14000dddd:	call   0x14000dd60
   14000dde2:	test   eax,eax
   14000dde4:	jne    0x14000de40
   14000dde6:	lea    rcx,[rip+0x2e63]        # 0x140010c50
   14000dded:	call   0x140008714
   14000ddf2:	lea    rbx,[rip+0xa4ef]        # 0x1400182e8
   14000ddf9:	lea    rdi,[rip+0xa538]        # 0x140018338
   14000de00:	jmp    0x14000de10
   14000de02:	mov    rax,QWORD PTR [rbx]
   14000de05:	test   rax,rax
   14000de08:	je     0x14000de0c
   14000de0a:	call   rax
   14000de0c:	add    rbx,0x8
   14000de10:	cmp    rbx,rdi
   14000de13:	jb     0x14000de02
   14000de15:	cmp    QWORD PTR [rip+0x177ab],0x0        # 0x1400255c8
   14000de1d:	je     0x14000de3e
   14000de1f:	lea    rcx,[rip+0x177a2]        # 0x1400255c8
   14000de26:	call   0x1400142e0
   14000de2b:	test   eax,eax
   14000de2d:	je     0x14000de3e
   14000de2f:	xor    r8d,r8d
   14000de32:	xor    ecx,ecx
   14000de34:	lea    edx,[r8+0x2]
   14000de38:	call   QWORD PTR [rip+0x1778a]        # 0x1400255c8
   14000de3e:	xor    eax,eax
   14000de40:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de45:	add    rsp,0x20
   14000de49:	pop    rdi
   14000de4a:	ret    
   14000de4b:	int3   
   14000de4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de51:	mov    QWORD PTR [rsp+0x10],rsi
   14000de56:	mov    DWORD PTR [rsp+0x18],r8d
   14000de5b:	push   rdi
   14000de5c:	push   r12
   14000de5e:	push   r13
   14000de60:	push   r14
   14000de62:	push   r15
   14000de64:	sub    rsp,0x40
   14000de68:	mov    r12d,r8d
   14000de6b:	mov    ebx,edx
   14000de6d:	mov    r15d,ecx
   14000de70:	mov    ecx,0x8
   14000de75:	call   0x140012e0c
   14000de7a:	nop
   14000de7b:	cmp    DWORD PTR [rip+0x157de],0x1        # 0x140023660
   14000de82:	je     0x14000df89
   14000de88:	mov    DWORD PTR [rip+0x157ca],0x1        # 0x14002365c
   14000de92:	mov    BYTE PTR [rip+0x157bf],r12b        # 0x140023658
   14000de99:	test   ebx,ebx
   14000de9b:	jne    0x14000df75
   14000dea1:	mov    rcx,QWORD PTR [rip+0x17708]        # 0x1400255b0
   14000dea8:	call   QWORD PTR [rip+0xa212]        # 0x1400180c0
   14000deae:	mov    rsi,rax
   14000deb1:	mov    QWORD PTR [rsp+0x30],rax
   14000deb6:	test   rax,rax
   14000deb9:	je     0x14000df62
   14000debf:	mov    rcx,QWORD PTR [rip+0x176e2]        # 0x1400255a8
   14000dec6:	call   QWORD PTR [rip+0xa1f4]        # 0x1400180c0
   14000decc:	mov    rdi,rax
   14000decf:	mov    QWORD PTR [rsp+0x20],rax
   14000ded4:	mov    r14,rsi
   14000ded7:	mov    QWORD PTR [rsp+0x28],rsi
   14000dedc:	mov    r13,rax
   14000dedf:	mov    QWORD PTR [rsp+0x38],rax
   14000dee4:	sub    rdi,0x8
   14000dee8:	mov    QWORD PTR [rsp+0x20],rdi
   14000deed:	cmp    rdi,rsi
   14000def0:	jb     0x14000df62
   14000def2:	call   0x14000d5b8
   14000def7:	cmp    QWORD PTR [rdi],rax
   14000defa:	jne    0x14000defe
   14000defc:	jmp    0x14000dee4
   14000defe:	cmp    rdi,rsi
   14000df01:	jb     0x14000df62
   14000df03:	mov    rcx,QWORD PTR [rdi]
   14000df06:	call   QWORD PTR [rip+0xa1b4]        # 0x1400180c0
   14000df0c:	mov    rbx,rax
   14000df0f:	call   0x14000d5b8
   14000df14:	mov    QWORD PTR [rdi],rax
   14000df17:	call   rbx
   14000df19:	mov    rcx,QWORD PTR [rip+0x17690]        # 0x1400255b0
   14000df20:	call   QWORD PTR [rip+0xa19a]        # 0x1400180c0
   14000df26:	mov    rbx,rax
   14000df29:	mov    rcx,QWORD PTR [rip+0x17678]        # 0x1400255a8
   14000df30:	call   QWORD PTR [rip+0xa18a]        # 0x1400180c0
   14000df36:	cmp    r14,rbx
   14000df39:	jne    0x14000df40
   14000df3b:	cmp    r13,rax
   14000df3e:	je     0x14000defc
   14000df40:	mov    r14,rbx
   14000df43:	mov    QWORD PTR [rsp+0x28],rbx
   14000df48:	mov    rsi,rbx
   14000df4b:	mov    QWORD PTR [rsp+0x30],rbx
   14000df50:	mov    r13,rax
   14000df53:	mov    QWORD PTR [rsp+0x38],rax
   14000df58:	mov    rdi,rax
   14000df5b:	mov    QWORD PTR [rsp+0x20],rax
   14000df60:	jmp    0x14000defc
   14000df62:	lea    rdx,[rip+0xa427]        # 0x140018390
   14000df69:	lea    rcx,[rip+0xa408]        # 0x140018378
   14000df70:	call   0x14000dd2c
   14000df75:	lea    rdx,[rip+0xa424]        # 0x1400183a0
   14000df7c:	lea    rcx,[rip+0xa415]        # 0x140018398
   14000df83:	call   0x14000dd2c
   14000df88:	nop
   14000df89:	test   r12d,r12d
   14000df8c:	je     0x14000df9d
   14000df8e:	mov    ecx,0x8
   14000df93:	call   0x140012d0c
   14000df98:	test   r12d,r12d
   14000df9b:	jne    0x14000dfc3
   14000df9d:	mov    DWORD PTR [rip+0x156b9],0x1        # 0x140023660
   14000dfa7:	mov    ecx,0x8
   14000dfac:	call   0x140012d0c
   14000dfb1:	mov    ecx,r15d
   14000dfb4:	call   0x14000dc7c
   14000dfb9:	mov    ecx,r15d
   14000dfbc:	call   QWORD PTR [rip+0xa22e]        # 0x1400181f0
   14000dfc2:	int3   
   14000dfc3:	mov    rbx,QWORD PTR [rsp+0x70]
   14000dfc8:	mov    rsi,QWORD PTR [rsp+0x78]
   14000dfcd:	add    rsp,0x40
   14000dfd1:	pop    r15
   14000dfd3:	pop    r14
   14000dfd5:	pop    r13
   14000dfd7:	pop    r12
   14000dfd9:	pop    rdi
   14000dfda:	ret    
   14000dfdb:	int3   
   14000dfdc:	xor    r8d,r8d
   14000dfdf:	xor    edx,edx
   14000dfe1:	jmp    0x14000de4c
   14000dfe6:	int3   
   14000dfe7:	int3   
   14000dfe8:	xor    r8d,r8d
   14000dfeb:	lea    edx,[r8+0x1]
   14000dfef:	jmp    0x14000de4c
   14000dff4:	xor    edx,edx
   14000dff6:	xor    ecx,ecx
   14000dff8:	lea    r8d,[rdx+0x1]
   14000dffc:	jmp    0x14000de4c
   14000e001:	int3   
   14000e002:	int3   
   14000e003:	int3   
   14000e004:	mov    edx,0x1
   14000e009:	xor    ecx,ecx
   14000e00b:	mov    r8d,edx
   14000e00e:	jmp    0x14000de4c
   14000e013:	int3   
   14000e014:	rex push rbx
   14000e016:	sub    rsp,0x20
   14000e01a:	mov    ebx,ecx
   14000e01c:	call   0x140010290
   14000e021:	mov    ecx,ebx
   14000e023:	call   0x140010030
   14000e028:	xor    r8d,r8d
   14000e02b:	mov    ecx,0xff
   14000e030:	lea    edx,[r8+0x1]
   14000e034:	call   0x14000de4c
   14000e039:	int3   
   14000e03a:	int3   
   14000e03b:	int3   
   14000e03c:	mov    r11,rsp
   14000e03f:	mov    QWORD PTR [r11+0x8],rbx
   14000e043:	mov    QWORD PTR [r11+0x18],rbp
   14000e047:	mov    QWORD PTR [r11+0x20],rsi
   14000e04b:	mov    QWORD PTR [r11+0x10],rdx
   14000e04f:	push   rdi
   14000e050:	push   r12
   14000e052:	push   r13
   14000e054:	push   r14
   14000e056:	push   r15
   14000e058:	sub    rsp,0x40
   14000e05c:	mov    r15,QWORD PTR [r9+0x8]
   14000e060:	mov    r14,QWORD PTR [r9]
   14000e063:	mov    eax,DWORD PTR [rcx+0x4]
   14000e066:	mov    rdi,QWORD PTR [r9+0x38]
   14000e06a:	sub    r14,r15
   14000e06d:	mov    r12,r9
   14000e070:	mov    r13,rdx
   14000e073:	mov    rbp,rcx
   14000e076:	test   al,0x66
   14000e078:	jne    0x14000e16b
   14000e07e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000e082:	mov    QWORD PTR [r11-0x38],rcx
   14000e086:	mov    QWORD PTR [r11-0x30],r8
   14000e08a:	mov    rax,rsi
   14000e08d:	cmp    esi,DWORD PTR [rdi]
   14000e08f:	jae    0x14000e216
   14000e095:	add    rax,rax
   14000e098:	lea    rbx,[rdi+rax*8+0xc]
   14000e09d:	mov    eax,DWORD PTR [rbx-0x8]
   14000e0a0:	cmp    r14,rax
   14000e0a3:	jb     0x14000e151
   14000e0a9:	mov    eax,DWORD PTR [rbx-0x4]
   14000e0ac:	cmp    r14,rax
   14000e0af:	jae    0x14000e151
   14000e0b5:	cmp    DWORD PTR [rbx+0x4],0x0
   14000e0b9:	je     0x14000e151
   14000e0bf:	cmp    DWORD PTR [rbx],0x1
   14000e0c2:	je     0x14000e0dd
   14000e0c4:	mov    eax,DWORD PTR [rbx]
   14000e0c6:	lea    rcx,[rsp+0x30]
   14000e0cb:	mov    rdx,r13
   14000e0ce:	add    rax,r15
   14000e0d1:	call   rax
   14000e0d3:	test   eax,eax
   14000e0d5:	js     0x14000e164
   14000e0db:	jle    0x14000e151
   14000e0dd:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000e0e4:	jne    0x14000e10e
   14000e0e6:	cmp    QWORD PTR [rip+0xa87a],0x0        # 0x140018968
   14000e0ee:	je     0x14000e10e
   14000e0f0:	lea    rcx,[rip+0xa871]        # 0x140018968
   14000e0f7:	call   0x1400142e0
   14000e0fc:	test   eax,eax
   14000e0fe:	je     0x14000e10e
   14000e100:	mov    edx,0x1
   14000e105:	mov    rcx,rbp
   14000e108:	call   QWORD PTR [rip+0xa85a]        # 0x140018968
   14000e10e:	mov    ecx,DWORD PTR [rbx+0x4]
   14000e111:	mov    r8d,0x1
   14000e117:	mov    rdx,r13
   14000e11a:	add    rcx,r15
   14000e11d:	call   0x140013c90
   14000e122:	mov    rax,QWORD PTR [r12+0x40]
   14000e127:	mov    edx,DWORD PTR [rbx+0x4]
   14000e12a:	movsxd r9,DWORD PTR [rbp+0x0]
   14000e12e:	mov    QWORD PTR [rsp+0x28],rax
   14000e133:	mov    rax,QWORD PTR [r12+0x28]
   14000e138:	add    rdx,r15
   14000e13b:	mov    r8,rbp
   14000e13e:	mov    rcx,r13
   14000e141:	mov    QWORD PTR [rsp+0x20],rax
   14000e146:	call   QWORD PTR [rip+0x9fdc]        # 0x140018128
   14000e14c:	call   0x140013cc0
   14000e151:	inc    esi
   14000e153:	add    rbx,0x10
   14000e157:	cmp    esi,DWORD PTR [rdi]
   14000e159:	jae    0x14000e216
   14000e15f:	jmp    0x14000e09d
   14000e164:	xor    eax,eax
   14000e166:	jmp    0x14000e21b
   14000e16b:	mov    r8,QWORD PTR [r9+0x20]
   14000e16f:	xor    ebp,ebp
   14000e171:	xor    r13d,r13d
   14000e174:	sub    r8,r15
   14000e177:	test   al,0x20
   14000e179:	je     0x14000e1b6
   14000e17b:	xor    edx,edx
   14000e17d:	cmp    DWORD PTR [rdi],edx
   14000e17f:	jbe    0x14000e1b6
   14000e181:	lea    rcx,[rdi+0x8]
   14000e185:	mov    eax,DWORD PTR [rcx-0x4]
   14000e188:	cmp    r8,rax
   14000e18b:	jb     0x14000e194
   14000e18d:	mov    eax,DWORD PTR [rcx]
   14000e18f:	cmp    r8,rax
   14000e192:	jbe    0x14000e1a0
   14000e194:	inc    edx
   14000e196:	add    rcx,0x10
   14000e19a:	cmp    edx,DWORD PTR [rdi]
   14000e19c:	jae    0x14000e1b6
   14000e19e:	jmp    0x14000e185
   14000e1a0:	mov    eax,edx
   14000e1a2:	add    rax,rax
   14000e1a5:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000e1a9:	test   ecx,ecx
   14000e1ab:	jne    0x14000e1b3
   14000e1ad:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000e1b1:	jmp    0x14000e1b6
   14000e1b3:	mov    r13d,ecx
   14000e1b6:	movsxd rsi,DWORD PTR [r9+0x48]
   14000e1ba:	mov    rbx,rsi
   14000e1bd:	cmp    esi,DWORD PTR [rdi]
   14000e1bf:	jae    0x14000e216
   14000e1c1:	inc    rbx
   14000e1c4:	shl    rbx,0x4
   14000e1c8:	add    rbx,rdi
   14000e1cb:	mov    eax,DWORD PTR [rbx-0xc]
   14000e1ce:	cmp    r14,rax
   14000e1d1:	jb     0x14000e20c
   14000e1d3:	mov    eax,DWORD PTR [rbx-0x8]
   14000e1d6:	cmp    r14,rax
   14000e1d9:	jae    0x14000e20c
   14000e1db:	test   r13d,r13d
   14000e1de:	je     0x14000e1e5
   14000e1e0:	cmp    r13d,DWORD PTR [rbx]
   14000e1e3:	je     0x14000e216
   14000e1e5:	test   ebp,ebp
   14000e1e7:	je     0x14000e1ee
   14000e1e9:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000e1ec:	je     0x14000e216
   14000e1ee:	cmp    DWORD PTR [rbx],0x0
   14000e1f1:	jne    0x14000e20c
   14000e1f3:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e1f8:	lea    eax,[rsi+0x1]
   14000e1fb:	mov    cl,0x1
   14000e1fd:	mov    DWORD PTR [r12+0x48],eax
   14000e202:	mov    r8d,DWORD PTR [rbx-0x4]
   14000e206:	add    r8,r15
   14000e209:	call   r8
   14000e20c:	inc    esi
   14000e20e:	add    rbx,0x10
   14000e212:	cmp    esi,DWORD PTR [rdi]
   14000e214:	jb     0x14000e1cb
   14000e216:	mov    eax,0x1
   14000e21b:	lea    r11,[rsp+0x40]
   14000e220:	mov    rbx,QWORD PTR [r11+0x30]
   14000e224:	mov    rbp,QWORD PTR [r11+0x40]
   14000e228:	mov    rsi,QWORD PTR [r11+0x48]
   14000e22c:	mov    rsp,r11
   14000e22f:	pop    r15
   14000e231:	pop    r14
   14000e233:	pop    r13
   14000e235:	pop    r12
   14000e237:	pop    rdi
   14000e238:	ret    
   14000e239:	int3   
   14000e23a:	int3   
   14000e23b:	int3   
   14000e23c:	rex push rbx
   14000e23e:	sub    rsp,0x30
   14000e242:	mov    rbx,rcx
   14000e245:	mov    ecx,0xe
   14000e24a:	call   0x140012e0c
   14000e24f:	nop
   14000e250:	mov    rax,QWORD PTR [rbx+0x8]
   14000e254:	test   rax,rax
   14000e257:	je     0x14000e298
   14000e259:	mov    rcx,QWORD PTR [rip+0x15410]        # 0x140023670
   14000e260:	lea    rdx,[rip+0x15401]        # 0x140023668
   14000e267:	mov    QWORD PTR [rsp+0x20],rcx
   14000e26c:	test   rcx,rcx
   14000e26f:	je     0x14000e28a
   14000e271:	cmp    QWORD PTR [rcx],rax
   14000e274:	jne    0x14000e285
   14000e276:	mov    rax,QWORD PTR [rcx+0x8]
   14000e27a:	mov    QWORD PTR [rdx+0x8],rax
   14000e27e:	call   0x140008584
   14000e283:	jmp    0x14000e28a
   14000e285:	mov    rdx,rcx
   14000e288:	jmp    0x14000e267
   14000e28a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e28e:	call   0x140008584
   14000e293:	and    QWORD PTR [rbx+0x8],0x0
   14000e298:	mov    ecx,0xe
   14000e29d:	call   0x140012d0c
   14000e2a2:	add    rsp,0x30
   14000e2a6:	pop    rbx
   14000e2a7:	ret    
   14000e2a8:	int3   
   14000e2a9:	int3   
   14000e2aa:	int3   
   14000e2ab:	int3   
   14000e2ac:	int3   
   14000e2ad:	int3   
   14000e2ae:	int3   
   14000e2af:	int3   
   14000e2b0:	int3   
   14000e2b1:	int3   
   14000e2b2:	int3   
   14000e2b3:	int3   
   14000e2b4:	int3   
   14000e2b5:	int3   
   14000e2b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e2c0:	sub    rdx,rcx
   14000e2c3:	mov    r9,rdx
   14000e2c6:	test   cl,0x7
   14000e2c9:	je     0x14000e2e6
   14000e2cb:	mov    al,BYTE PTR [rcx]
   14000e2cd:	mov    dl,BYTE PTR [rcx+r9*1]
   14000e2d1:	cmp    al,dl
   14000e2d3:	jne    0x14000e32b
   14000e2d5:	inc    rcx
   14000e2d8:	test   al,al
   14000e2da:	je     0x14000e333
   14000e2dc:	test   rcx,0x7
   14000e2e3:	jne    0x14000e2cb
   14000e2e5:	nop
   14000e2e6:	movabs r11,0x8101010101010100
   14000e2f0:	lea    rdx,[rcx+r9*1]
   14000e2f4:	and    dx,0xfff
   14000e2f9:	cmp    dx,0xff8
   14000e2fe:	ja     0x14000e2cb
   14000e300:	mov    rax,QWORD PTR [rcx]
   14000e303:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000e307:	cmp    rax,rdx
   14000e30a:	jne    0x14000e2cb
   14000e30c:	movabs r10,0x7efefefefefefeff
   14000e316:	add    r10,rdx
   14000e319:	xor    rax,0xffffffffffffffff
   14000e31d:	add    rcx,0x8
   14000e321:	xor    rax,r10
   14000e324:	test   r11,rax
   14000e327:	je     0x14000e2f0
   14000e329:	jmp    0x14000e33a
   14000e32b:	sbb    rax,rax
   14000e32e:	sbb    rax,0xffffffffffffffff
   14000e332:	ret    
   14000e333:	xor    eax,eax
   14000e335:	ret    
   14000e336:	data16 data16 xchg ax,ax
   14000e33a:	test   dl,dl
   14000e33c:	je     0x14000e365
   14000e33e:	test   dh,dh
   14000e340:	je     0x14000e365
   14000e342:	shr    rdx,0x10
   14000e346:	test   dl,dl
   14000e348:	je     0x14000e365
   14000e34a:	test   dh,dh
   14000e34c:	je     0x14000e365
   14000e34e:	shr    rdx,0x10
   14000e352:	test   dl,dl
   14000e354:	je     0x14000e365
   14000e356:	test   dh,dh
   14000e358:	je     0x14000e365
   14000e35a:	shr    edx,0x10
   14000e35d:	test   dl,dl
   14000e35f:	je     0x14000e365
   14000e361:	test   dh,dh
   14000e363:	jne    0x14000e2f0
   14000e365:	xor    eax,eax
   14000e367:	ret    
   14000e368:	sbb    rax,rax
   14000e36b:	sbb    rax,0xffffffffffffffff
   14000e36f:	ret    
   14000e370:	mov    QWORD PTR [rip+0x15301],rcx        # 0x140023678
   14000e377:	ret    
   14000e378:	rex push rbx
   14000e37a:	sub    rsp,0x20
   14000e37e:	mov    rbx,rcx
   14000e381:	mov    rcx,QWORD PTR [rip+0x152f0]        # 0x140023678
   14000e388:	call   QWORD PTR [rip+0x9d32]        # 0x1400180c0
   14000e38e:	test   rax,rax
   14000e391:	je     0x14000e3a3
   14000e393:	mov    rcx,rbx
   14000e396:	call   rax
   14000e398:	test   eax,eax
   14000e39a:	je     0x14000e3a3
   14000e39c:	mov    eax,0x1
   14000e3a1:	jmp    0x14000e3a5
   14000e3a3:	xor    eax,eax
   14000e3a5:	add    rsp,0x20
   14000e3a9:	pop    rbx
   14000e3aa:	ret    
   14000e3ab:	int3   
   14000e3ac:	mov    rax,rsp
   14000e3af:	mov    QWORD PTR [rax+0x10],rbx
   14000e3b3:	mov    QWORD PTR [rax+0x18],rbp
   14000e3b7:	mov    QWORD PTR [rax+0x20],rsi
   14000e3bb:	mov    DWORD PTR [rax+0x8],ecx
   14000e3be:	push   rdi
   14000e3bf:	sub    rsp,0x20
   14000e3c3:	mov    rcx,rdx
   14000e3c6:	mov    rbx,rdx
   14000e3c9:	call   0x140014fa8
   14000e3ce:	mov    ecx,DWORD PTR [rbx+0x18]
   14000e3d1:	movsxd rsi,eax
   14000e3d4:	test   cl,0x82
   14000e3d7:	jne    0x14000e3f0
   14000e3d9:	call   0x140008e40
   14000e3de:	mov    DWORD PTR [rax],0x9
   14000e3e4:	or     DWORD PTR [rbx+0x18],0x20
   14000e3e8:	or     eax,0xffffffff
   14000e3eb:	jmp    0x14000e524
   14000e3f0:	test   cl,0x40
   14000e3f3:	je     0x14000e402
   14000e3f5:	call   0x140008e40
   14000e3fa:	mov    DWORD PTR [rax],0x22
   14000e400:	jmp    0x14000e3e4
   14000e402:	xor    edi,edi
   14000e404:	test   cl,0x1
   14000e407:	je     0x14000e422
   14000e409:	mov    DWORD PTR [rbx+0x8],edi
   14000e40c:	test   cl,0x10
   14000e40f:	je     0x14000e49e
   14000e415:	mov    rax,QWORD PTR [rbx+0x10]
   14000e419:	and    ecx,0xfffffffe
   14000e41c:	mov    QWORD PTR [rbx],rax
   14000e41f:	mov    DWORD PTR [rbx+0x18],ecx
   14000e422:	mov    eax,DWORD PTR [rbx+0x18]
   14000e425:	mov    DWORD PTR [rbx+0x8],edi
   14000e428:	and    eax,0xffffffef
   14000e42b:	or     eax,0x2
   14000e42e:	mov    DWORD PTR [rbx+0x18],eax
   14000e431:	test   eax,0x10c
   14000e436:	jne    0x14000e467
   14000e438:	call   0x140014d94
   14000e43d:	add    rax,0x30
   14000e441:	cmp    rbx,rax
   14000e444:	je     0x14000e454
   14000e446:	call   0x140014d94
   14000e44b:	add    rax,0x60
   14000e44f:	cmp    rbx,rax
   14000e452:	jne    0x14000e45f
   14000e454:	mov    ecx,esi
   14000e456:	call   0x140014d34
   14000e45b:	test   eax,eax
   14000e45d:	jne    0x14000e467
   14000e45f:	mov    rcx,rbx
   14000e462:	call   0x140014ce0
   14000e467:	test   DWORD PTR [rbx+0x18],0x108
   14000e46e:	je     0x14000e501
   14000e474:	mov    ebp,DWORD PTR [rbx]
   14000e476:	mov    rdx,QWORD PTR [rbx+0x10]
   14000e47a:	sub    ebp,DWORD PTR [rbx+0x10]
   14000e47d:	lea    rax,[rdx+0x1]
   14000e481:	mov    QWORD PTR [rbx],rax
   14000e484:	mov    eax,DWORD PTR [rbx+0x24]
   14000e487:	dec    eax
   14000e489:	mov    DWORD PTR [rbx+0x8],eax
   14000e48c:	test   ebp,ebp
   14000e48e:	jle    0x14000e4a9
   14000e490:	mov    r8d,ebp
   14000e493:	mov    ecx,esi
   14000e495:	call   0x140014c00
   14000e49a:	mov    edi,eax
   14000e49c:	jmp    0x14000e4f5
   14000e49e:	or     ecx,0x20
   14000e4a1:	mov    DWORD PTR [rbx+0x18],ecx
   14000e4a4:	jmp    0x14000e3e8
   14000e4a9:	cmp    esi,0xffffffff
   14000e4ac:	je     0x14000e4d1
   14000e4ae:	cmp    esi,0xfffffffe
   14000e4b1:	je     0x14000e4d1
   14000e4b3:	mov    rcx,rsi
   14000e4b6:	mov    rax,rsi
   14000e4b9:	lea    rdx,[rip+0x16ee0]        # 0x1400253a0
   14000e4c0:	and    ecx,0x1f
   14000e4c3:	sar    rax,0x5
   14000e4c7:	imul   rcx,rcx,0x58
   14000e4cb:	add    rcx,QWORD PTR [rdx+rax*8]
   14000e4cf:	jmp    0x14000e4d8
   14000e4d1:	lea    rcx,[rip+0x138e8]        # 0x140021dc0
   14000e4d8:	test   BYTE PTR [rcx+0x8],0x20
   14000e4dc:	je     0x14000e4f5
   14000e4de:	xor    edx,edx
   14000e4e0:	mov    ecx,esi
   14000e4e2:	lea    r8d,[rdx+0x2]
   14000e4e6:	call   0x1400143bc
   14000e4eb:	cmp    rax,0xffffffffffffffff
   14000e4ef:	je     0x14000e3e4
   14000e4f5:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e4f9:	mov    al,BYTE PTR [rsp+0x30]
   14000e4fd:	mov    BYTE PTR [rcx],al
   14000e4ff:	jmp    0x14000e517
   14000e501:	mov    ebp,0x1
   14000e506:	lea    rdx,[rsp+0x30]
   14000e50b:	mov    ecx,esi
   14000e50d:	mov    r8d,ebp
   14000e510:	call   0x140014c00
   14000e515:	mov    edi,eax
   14000e517:	cmp    edi,ebp
   14000e519:	jne    0x14000e3e4
   14000e51f:	movzx  eax,BYTE PTR [rsp+0x30]
   14000e524:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e529:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e52e:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e533:	add    rsp,0x20
   14000e537:	pop    rdi
   14000e538:	ret    
   14000e539:	int3   
   14000e53a:	int3   
   14000e53b:	int3   
   14000e53c:	rex push rbx
   14000e53e:	sub    rsp,0x20
   14000e542:	test   BYTE PTR [rdx+0x18],0x40
   14000e546:	mov    rbx,r8
   14000e549:	je     0x14000e557
   14000e54b:	cmp    QWORD PTR [rdx+0x10],0x0
   14000e550:	jne    0x14000e557
   14000e552:	inc    DWORD PTR [r8]
   14000e555:	jmp    0x14000e56d
   14000e557:	call   0x140014fd0
   14000e55c:	mov    ecx,0xffff
   14000e561:	cmp    ax,cx
   14000e564:	jne    0x14000e56b
   14000e566:	or     DWORD PTR [rbx],0xffffffff
   14000e569:	jmp    0x14000e56d
   14000e56b:	inc    DWORD PTR [rbx]
   14000e56d:	add    rsp,0x20
   14000e571:	pop    rbx
   14000e572:	ret    
   14000e573:	int3   
   14000e574:	mov    QWORD PTR [rsp+0x18],rbx
   14000e579:	push   rbp
   14000e57a:	push   rsi
   14000e57b:	push   rdi
   14000e57c:	push   r12
   14000e57e:	push   r13
   14000e580:	push   r14
   14000e582:	push   r15
   14000e584:	lea    rbp,[rsp-0x3e0]
   14000e58c:	sub    rsp,0x4e0
   14000e593:	mov    rax,QWORD PTR [rip+0x12e76]        # 0x140021410
   14000e59a:	xor    rax,rsp
   14000e59d:	mov    QWORD PTR [rbp+0x3d0],rax
   14000e5a4:	xor    eax,eax
   14000e5a6:	mov    rbx,rcx
   14000e5a9:	mov    QWORD PTR [rsp+0x78],rcx
   14000e5ae:	mov    QWORD PTR [rbp-0x80],rdx
   14000e5b2:	lea    rcx,[rbp-0x70]
   14000e5b6:	mov    rdx,r8
   14000e5b9:	mov    r14,r9
   14000e5bc:	mov    QWORD PTR [rsp+0x50],r9
   14000e5c1:	mov    DWORD PTR [rsp+0x74],eax
   14000e5c5:	mov    r12d,eax
   14000e5c8:	mov    DWORD PTR [rsp+0x5c],eax
   14000e5cc:	mov    edi,eax
   14000e5ce:	mov    DWORD PTR [rsp+0x44],eax
   14000e5d2:	mov    DWORD PTR [rsp+0x48],eax
   14000e5d6:	mov    DWORD PTR [rsp+0x70],eax
   14000e5da:	mov    DWORD PTR [rsp+0x58],eax
   14000e5de:	call   0x140007d40
   14000e5e3:	call   0x140008e40
   14000e5e8:	xor    r10d,r10d
   14000e5eb:	mov    QWORD PTR [rbp-0x48],rax
   14000e5ef:	test   rbx,rbx
   14000e5f2:	jne    0x14000e620
   14000e5f4:	call   0x140008e40
   14000e5f9:	mov    DWORD PTR [rax],0x16
   14000e5ff:	call   0x14000dafc
   14000e604:	xor    r11d,r11d
   14000e607:	cmp    BYTE PTR [rbp-0x58],r11b
   14000e60b:	je     0x14000e618
   14000e60d:	mov    rax,QWORD PTR [rbp-0x60]
   14000e611:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e618:	or     eax,0xffffffff
   14000e61b:	jmp    0x14000f03e
   14000e620:	mov    r8,QWORD PTR [rbp-0x80]
   14000e624:	test   r8,r8
   14000e627:	je     0x14000e5f4
   14000e629:	movzx  r13d,WORD PTR [r8]
   14000e62d:	mov    esi,r10d
   14000e630:	mov    DWORD PTR [rsp+0x40],r10d
   14000e635:	mov    r15d,r10d
   14000e638:	mov    edx,r10d
   14000e63b:	mov    QWORD PTR [rbp-0x50],r10
   14000e63f:	test   r13w,r13w
   14000e643:	je     0x14000f02b
   14000e649:	mov    rbx,QWORD PTR [rbp-0x48]
   14000e64d:	mov    ecx,0x58
   14000e652:	mov    r9d,0x200
   14000e658:	lea    r11d,[rcx-0x38]
   14000e65c:	add    r8,0x2
   14000e660:	mov    QWORD PTR [rbp-0x80],r8
   14000e664:	test   esi,esi
   14000e666:	js     0x14000f02b
   14000e66c:	movzx  eax,r13w
   14000e670:	sub    ax,r11w
   14000e674:	cmp    ax,cx
   14000e677:	ja     0x14000e68e
   14000e679:	lea    rcx,[rip+0xd330]        # 0x14001b9b0
   14000e680:	movzx  eax,r13w
   14000e684:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000e689:	and    ecx,0xf
   14000e68c:	jmp    0x14000e691
   14000e68e:	mov    ecx,r10d
   14000e691:	movsxd rax,edx
   14000e694:	movsxd rcx,ecx
   14000e697:	lea    rdx,[rax+rcx*8]
   14000e69b:	lea    rax,[rip+0xd30e]        # 0x14001b9b0
   14000e6a2:	movsx  edx,BYTE PTR [rdx+rax*1]
   14000e6a6:	sar    edx,0x4
   14000e6a9:	mov    DWORD PTR [rsp+0x6c],edx
   14000e6ad:	mov    ecx,edx
   14000e6af:	test   edx,edx
   14000e6b1:	je     0x14000eed2
   14000e6b7:	dec    ecx
   14000e6b9:	je     0x14000efe2
   14000e6bf:	dec    ecx
   14000e6c1:	je     0x14000ef95
   14000e6c7:	dec    ecx
   14000e6c9:	je     0x14000ef4a
   14000e6cf:	dec    ecx
   14000e6d1:	je     0x14000ef3d
   14000e6d7:	dec    ecx
   14000e6d9:	je     0x14000eef9
   14000e6df:	dec    ecx
   14000e6e1:	je     0x14000eddf
   14000e6e7:	dec    ecx
   14000e6e9:	jne    0x14000f018
   14000e6ef:	movzx  eax,r13w
   14000e6f3:	mov    ecx,0x64
   14000e6f8:	cmp    eax,ecx
   14000e6fa:	jg     0x14000e908
   14000e700:	je     0x14000ea2a
   14000e706:	cmp    eax,0x41
   14000e709:	je     0x14000e8d5
   14000e70f:	cmp    eax,0x43
   14000e712:	je     0x14000e860
   14000e718:	cmp    eax,0x45
   14000e71b:	je     0x14000e8d5
   14000e721:	cmp    eax,0x47
   14000e724:	je     0x14000e8d5
   14000e72a:	cmp    eax,0x53
   14000e72d:	je     0x14000e7bb
   14000e733:	cmp    eax,0x58
   14000e736:	je     0x14000e9aa
   14000e73c:	cmp    eax,0x5a
   14000e73f:	je     0x14000e758
   14000e741:	cmp    eax,0x61
   14000e744:	je     0x14000e8e0
   14000e74a:	cmp    eax,0x63
   14000e74d:	je     0x14000e86c
   14000e753:	jmp    0x14000e828
   14000e758:	mov    rax,QWORD PTR [r14]
   14000e75b:	add    r14,0x8
   14000e75f:	mov    QWORD PTR [rsp+0x50],r14
   14000e764:	test   rax,rax
   14000e767:	je     0x14000e7a4
   14000e769:	mov    rbx,QWORD PTR [rax+0x8]
   14000e76d:	test   rbx,rbx
   14000e770:	je     0x14000e7a4
   14000e772:	mov    edi,0x2d
   14000e777:	bt     r12d,0xb
   14000e77c:	jae    0x14000e796
   14000e77e:	movsx  eax,WORD PTR [rax]
   14000e781:	mov    DWORD PTR [rsp+0x58],0x1
   14000e789:	cdq    
   14000e78a:	sub    eax,edx
   14000e78c:	sar    eax,1
   14000e78e:	mov    r15d,eax
   14000e791:	jmp    0x14000e82d
   14000e796:	movsx  r15d,WORD PTR [rax]
   14000e79a:	mov    DWORD PTR [rsp+0x58],r10d
   14000e79f:	jmp    0x14000e82d
   14000e7a4:	mov    rbx,QWORD PTR [rip+0x13ef5]        # 0x1400226a0
   14000e7ab:	mov    rcx,rbx
   14000e7ae:	call   0x1400093f0
   14000e7b3:	xor    r10d,r10d
   14000e7b6:	mov    r15,rax
   14000e7b9:	jmp    0x14000e828
   14000e7bb:	test   r12d,0x830
   14000e7c2:	jne    0x14000e7c7
   14000e7c4:	or     r12d,r11d
   14000e7c7:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   14000e7cc:	mov    rbx,QWORD PTR [r14]
   14000e7cf:	mov    eax,0x7fffffff
   14000e7d4:	cmove  edi,eax
   14000e7d7:	add    r14,0x8
   14000e7db:	mov    QWORD PTR [rsp+0x50],r14
   14000e7e0:	test   r11b,r12b
   14000e7e3:	je     0x14000e96a
   14000e7e9:	test   rbx,rbx
   14000e7ec:	mov    r15d,r10d
   14000e7ef:	cmove  rbx,QWORD PTR [rip+0x13ea9]        # 0x1400226a0
   14000e7f7:	mov    rsi,rbx
   14000e7fa:	test   edi,edi
   14000e7fc:	jle    0x14000e824
   14000e7fe:	cmp    BYTE PTR [rsi],r10b
   14000e801:	je     0x14000e824
   14000e803:	movzx  ecx,BYTE PTR [rsi]
   14000e806:	lea    rdx,[rbp-0x70]
   14000e80a:	call   0x140015368
   14000e80f:	xor    r10d,r10d
   14000e812:	test   eax,eax
   14000e814:	je     0x14000e819
   14000e816:	inc    rsi
   14000e819:	inc    r15d
   14000e81c:	inc    rsi
   14000e81f:	cmp    r15d,edi
   14000e822:	jl     0x14000e7fe
   14000e824:	mov    esi,DWORD PTR [rsp+0x40]
   14000e828:	mov    edi,0x2d
   14000e82d:	cmp    DWORD PTR [rsp+0x70],r10d
   14000e832:	jne    0x14000edae
   14000e838:	test   r12b,0x40
   14000e83c:	je     0x14000ec87
   14000e842:	bt     r12d,0x8
   14000e847:	jae    0x14000ec59
   14000e84d:	mov    WORD PTR [rsp+0x60],di
   14000e852:	mov    edi,0x1
   14000e857:	mov    DWORD PTR [rsp+0x48],edi
   14000e85b:	jmp    0x14000ec8b
   14000e860:	test   r12d,0x830
   14000e867:	jne    0x14000e86c
   14000e869:	or     r12d,r11d
   14000e86c:	movzx  eax,WORD PTR [r14]
   14000e870:	add    r14,0x8
   14000e874:	mov    DWORD PTR [rsp+0x58],0x1
   14000e87c:	mov    QWORD PTR [rsp+0x50],r14
   14000e881:	mov    WORD PTR [rsp+0x64],ax
   14000e886:	test   r11b,r12b
   14000e889:	je     0x14000e8c2
   14000e88b:	mov    BYTE PTR [rsp+0x68],al
   14000e88f:	mov    rax,QWORD PTR [rbp-0x70]
   14000e893:	mov    BYTE PTR [rsp+0x69],r10b
   14000e898:	movsxd r8,DWORD PTR [rax+0x10c]
   14000e89f:	lea    r9,[rbp-0x70]
   14000e8a3:	lea    rdx,[rsp+0x68]
   14000e8a8:	lea    rcx,[rbp-0x30]
   14000e8ac:	call   0x1400151e8
   14000e8b1:	xor    r10d,r10d
   14000e8b4:	test   eax,eax
   14000e8b6:	jns    0x14000e8c6
   14000e8b8:	mov    DWORD PTR [rsp+0x70],0x1
   14000e8c0:	jmp    0x14000e8c6
   14000e8c2:	mov    WORD PTR [rbp-0x30],ax
   14000e8c6:	lea    rbx,[rbp-0x30]
   14000e8ca:	mov    r15d,0x1
   14000e8d0:	jmp    0x14000e828
   14000e8d5:	mov    DWORD PTR [rbp-0x78],0x1
   14000e8dc:	add    r13w,r11w
   14000e8e0:	mov    ecx,0x67
   14000e8e5:	or     r12d,0x40
   14000e8e9:	lea    rbx,[rbp-0x30]
   14000e8ed:	mov    esi,r9d
   14000e8f0:	test   edi,edi
   14000e8f2:	jns    0x14000eb4a
   14000e8f8:	mov    r15d,0x6
   14000e8fe:	mov    DWORD PTR [rsp+0x44],r15d
   14000e903:	jmp    0x14000eb9d
   14000e908:	cmp    eax,0x65
   14000e90b:	jl     0x14000e828
   14000e911:	mov    ecx,0x67
   14000e916:	cmp    eax,ecx
   14000e918:	jle    0x14000e8e5
   14000e91a:	mov    ecx,0x69
   14000e91f:	cmp    eax,ecx
   14000e921:	je     0x14000ea2a
   14000e927:	cmp    eax,0x6e
   14000e92a:	je     0x14000e9f1
   14000e930:	mov    ecx,0x6f
   14000e935:	cmp    eax,ecx
   14000e937:	je     0x14000e9db
   14000e93d:	cmp    eax,0x70
   14000e940:	je     0x14000e9a0
   14000e942:	cmp    eax,0x73
   14000e945:	je     0x14000e7c7
   14000e94b:	mov    ecx,0x75
   14000e950:	cmp    eax,ecx
   14000e952:	je     0x14000ea2e
   14000e958:	mov    ecx,0x78
   14000e95d:	cmp    eax,ecx
   14000e95f:	jne    0x14000e828
   14000e965:	lea    eax,[rcx-0x51]
   14000e968:	jmp    0x14000e9af
   14000e96a:	test   rbx,rbx
   14000e96d:	mov    DWORD PTR [rsp+0x58],0x1
   14000e975:	cmove  rbx,QWORD PTR [rip+0x13d2b]        # 0x1400226a8
   14000e97d:	mov    rax,rbx
   14000e980:	jmp    0x14000e98e
   14000e982:	dec    edi
   14000e984:	cmp    WORD PTR [rax],r10w
   14000e988:	je     0x14000e992
   14000e98a:	add    rax,0x2
   14000e98e:	test   edi,edi
   14000e990:	jne    0x14000e982
   14000e992:	sub    rax,rbx
   14000e995:	sar    rax,1
   14000e998:	mov    r15d,eax
   14000e99b:	jmp    0x14000e828
   14000e9a0:	mov    edi,0x10
   14000e9a5:	bts    r12d,0xf
   14000e9aa:	mov    eax,0x7
   14000e9af:	mov    DWORD PTR [rsp+0x74],eax
   14000e9b3:	mov    r9d,0x10
   14000e9b9:	mov    r13d,0x200
   14000e9bf:	test   r12b,r12b
   14000e9c2:	jns    0x14000ea3a
   14000e9c4:	lea    ecx,[r9+0x20]
   14000e9c8:	add    ax,0x51
   14000e9cc:	lea    edx,[rcx-0x2e]
   14000e9cf:	mov    WORD PTR [rsp+0x60],cx
   14000e9d4:	mov    WORD PTR [rsp+0x62],ax
   14000e9d9:	jmp    0x14000ea3e
   14000e9db:	mov    r9d,0x8
   14000e9e1:	test   r12b,r12b
   14000e9e4:	jns    0x14000ea34
   14000e9e6:	mov    r13d,0x200
   14000e9ec:	or     r12d,r13d
   14000e9ef:	jmp    0x14000ea3a
   14000e9f1:	mov    rdi,QWORD PTR [r14]
   14000e9f4:	add    r14,0x8
   14000e9f8:	mov    QWORD PTR [rsp+0x50],r14
   14000e9fd:	call   0x1400151d0
   14000ea02:	xor    r10d,r10d
   14000ea05:	test   eax,eax
   14000ea07:	je     0x14000e5f4
   14000ea0d:	lea    r11d,[r10+0x20]
   14000ea11:	test   r11b,r12b
   14000ea14:	je     0x14000ea1b
   14000ea16:	mov    WORD PTR [rdi],si
   14000ea19:	jmp    0x14000ea1d
   14000ea1b:	mov    DWORD PTR [rdi],esi
   14000ea1d:	mov    DWORD PTR [rsp+0x70],0x1
   14000ea25:	jmp    0x14000edb4
   14000ea2a:	or     r12d,0x40
   14000ea2e:	mov    r9d,0xa
   14000ea34:	mov    r13d,0x200
   14000ea3a:	mov    edx,DWORD PTR [rsp+0x48]
   14000ea3e:	mov    eax,0x8000
   14000ea43:	test   eax,r12d
   14000ea46:	je     0x14000ea51
   14000ea48:	mov    r8,QWORD PTR [r14]
   14000ea4b:	add    r14,0x8
   14000ea4f:	jmp    0x14000ea8a
   14000ea51:	bt     r12d,0xc
   14000ea56:	jb     0x14000ea48
   14000ea58:	add    r14,0x8
   14000ea5c:	test   r11b,r12b
   14000ea5f:	je     0x14000ea7a
   14000ea61:	mov    QWORD PTR [rsp+0x50],r14
   14000ea66:	test   r12b,0x40
   14000ea6a:	je     0x14000ea73
   14000ea6c:	movsx  r8,WORD PTR [r14-0x8]
   14000ea71:	jmp    0x14000ea8f
   14000ea73:	movzx  r8d,WORD PTR [r14-0x8]
   14000ea78:	jmp    0x14000ea8f
   14000ea7a:	test   r12b,0x40
   14000ea7e:	je     0x14000ea86
   14000ea80:	movsxd r8,DWORD PTR [r14-0x8]
   14000ea84:	jmp    0x14000ea8a
   14000ea86:	mov    r8d,DWORD PTR [r14-0x8]
   14000ea8a:	mov    QWORD PTR [rsp+0x50],r14
   14000ea8f:	test   r12b,0x40
   14000ea93:	je     0x14000eaa2
   14000ea95:	test   r8,r8
   14000ea98:	jns    0x14000eaa2
   14000ea9a:	neg    r8
   14000ea9d:	bts    r12d,0x8
   14000eaa2:	test   eax,r12d
   14000eaa5:	jne    0x14000eab1
   14000eaa7:	bt     r12d,0xc
   14000eaac:	jb     0x14000eab1
   14000eaae:	mov    r8d,r8d
   14000eab1:	test   edi,edi
   14000eab3:	jns    0x14000eabc
   14000eab5:	mov    edi,0x1
   14000eaba:	jmp    0x14000eac7
   14000eabc:	and    r12d,0xfffffff7
   14000eac0:	cmp    edi,r13d
   14000eac3:	cmovg  edi,r13d
   14000eac7:	mov    esi,DWORD PTR [rsp+0x74]
   14000eacb:	mov    rax,r8
   14000eace:	lea    rbx,[rbp+0x1cf]
   14000ead5:	neg    rax
   14000ead8:	sbb    ecx,ecx
   14000eada:	and    ecx,edx
   14000eadc:	mov    DWORD PTR [rsp+0x48],ecx
   14000eae0:	mov    ecx,edi
   14000eae2:	dec    edi
   14000eae4:	test   ecx,ecx
   14000eae6:	jg     0x14000eaed
   14000eae8:	test   r8,r8
   14000eaeb:	je     0x14000eb0c
   14000eaed:	xor    edx,edx
   14000eaef:	mov    rax,r8
   14000eaf2:	movsxd rcx,r9d
   14000eaf5:	div    rcx
   14000eaf8:	mov    r8,rax
   14000eafb:	lea    eax,[rdx+0x30]
   14000eafe:	cmp    eax,0x39
   14000eb01:	jle    0x14000eb05
   14000eb03:	add    eax,esi
   14000eb05:	mov    BYTE PTR [rbx],al
   14000eb07:	dec    rbx
   14000eb0a:	jmp    0x14000eae0
   14000eb0c:	mov    esi,DWORD PTR [rsp+0x40]
   14000eb10:	lea    rax,[rbp+0x1cf]
   14000eb17:	mov    DWORD PTR [rsp+0x44],edi
   14000eb1b:	sub    eax,ebx
   14000eb1d:	inc    rbx
   14000eb20:	mov    r15d,eax
   14000eb23:	test   r13d,r12d
   14000eb26:	je     0x14000e828
   14000eb2c:	test   eax,eax
   14000eb2e:	mov    eax,0x30
   14000eb33:	je     0x14000eb3d
   14000eb35:	cmp    BYTE PTR [rbx],al
   14000eb37:	je     0x14000e828
   14000eb3d:	dec    rbx
   14000eb40:	inc    r15d
   14000eb43:	mov    BYTE PTR [rbx],al
   14000eb45:	jmp    0x14000e828
   14000eb4a:	jne    0x14000eb5d
   14000eb4c:	cmp    r13w,cx
   14000eb50:	jne    0x14000eb93
   14000eb52:	mov    r15d,0x1
   14000eb58:	jmp    0x14000e8fe
   14000eb5d:	cmp    edi,r9d
   14000eb60:	mov    r15d,0xa3
   14000eb66:	cmovg  edi,r9d
   14000eb6a:	mov    DWORD PTR [rsp+0x44],edi
   14000eb6e:	cmp    edi,r15d
   14000eb71:	jle    0x14000eb9a
   14000eb73:	add    edi,0x15d
   14000eb79:	movsxd rcx,edi
   14000eb7c:	call   0x14000c320
   14000eb81:	mov    QWORD PTR [rbp-0x50],rax
   14000eb85:	test   rax,rax
   14000eb88:	je     0x14000e8fe
   14000eb8e:	mov    rbx,rax
   14000eb91:	mov    esi,edi
   14000eb93:	mov    r15d,DWORD PTR [rsp+0x44]
   14000eb98:	jmp    0x14000eb9d
   14000eb9a:	mov    r15d,edi
   14000eb9d:	mov    rax,QWORD PTR [r14]
   14000eba0:	mov    rcx,QWORD PTR [rip+0x13719]        # 0x1400222c0
   14000eba7:	add    r14,0x8
   14000ebab:	mov    QWORD PTR [rsp+0x50],r14
   14000ebb0:	movsx  edi,r13b
   14000ebb4:	movsxd rsi,esi
   14000ebb7:	mov    QWORD PTR [rbp-0x40],rax
   14000ebbb:	call   QWORD PTR [rip+0x94ff]        # 0x1400180c0
   14000ebc1:	lea    rcx,[rbp-0x70]
   14000ebc5:	mov    QWORD PTR [rsp+0x30],rcx
   14000ebca:	mov    ecx,DWORD PTR [rbp-0x78]
   14000ebcd:	mov    r9d,edi
   14000ebd0:	mov    DWORD PTR [rsp+0x28],ecx
   14000ebd4:	lea    rcx,[rbp-0x40]
   14000ebd8:	mov    r8,rsi
   14000ebdb:	mov    rdx,rbx
   14000ebde:	mov    DWORD PTR [rsp+0x20],r15d
   14000ebe3:	call   rax
   14000ebe5:	mov    edi,r12d
   14000ebe8:	and    edi,0x80
   14000ebee:	je     0x14000ec0b
   14000ebf0:	test   r15d,r15d
   14000ebf3:	jne    0x14000ec0b
   14000ebf5:	mov    rcx,QWORD PTR [rip+0x136dc]        # 0x1400222d8
   14000ebfc:	call   QWORD PTR [rip+0x94be]        # 0x1400180c0
   14000ec02:	lea    rdx,[rbp-0x70]
   14000ec06:	mov    rcx,rbx
   14000ec09:	call   rax
   14000ec0b:	mov    ecx,0x67
   14000ec10:	cmp    r13w,cx
   14000ec14:	jne    0x14000ec30
   14000ec16:	test   edi,edi
   14000ec18:	jne    0x14000ec30
   14000ec1a:	mov    rcx,QWORD PTR [rip+0x136af]        # 0x1400222d0
   14000ec21:	call   QWORD PTR [rip+0x9499]        # 0x1400180c0
   14000ec27:	lea    rdx,[rbp-0x70]
   14000ec2b:	mov    rcx,rbx
   14000ec2e:	call   rax
   14000ec30:	mov    edi,0x2d
   14000ec35:	cmp    BYTE PTR [rbx],dil
   14000ec38:	jne    0x14000ec42
   14000ec3a:	bts    r12d,0x8
   14000ec3f:	inc    rbx
   14000ec42:	mov    rcx,rbx
   14000ec45:	call   0x1400093f0
   14000ec4a:	mov    esi,DWORD PTR [rsp+0x40]
   14000ec4e:	xor    r10d,r10d
   14000ec51:	mov    r15d,eax
   14000ec54:	jmp    0x14000e82d
   14000ec59:	test   r12b,0x1
   14000ec5d:	je     0x14000ec6e
   14000ec5f:	mov    eax,0x2b
   14000ec64:	mov    WORD PTR [rsp+0x60],ax
   14000ec69:	jmp    0x14000e852
   14000ec6e:	test   r12b,0x2
   14000ec72:	je     0x14000ec87
   14000ec74:	mov    eax,0x20
   14000ec79:	mov    WORD PTR [rsp+0x60],ax
   14000ec7e:	lea    edi,[rax-0x1f]
   14000ec81:	mov    DWORD PTR [rsp+0x48],edi
   14000ec85:	jmp    0x14000ec90
   14000ec87:	mov    edi,DWORD PTR [rsp+0x48]
   14000ec8b:	mov    eax,0x20
   14000ec90:	mov    r14d,DWORD PTR [rsp+0x5c]
   14000ec95:	mov    r13,QWORD PTR [rsp+0x78]
   14000ec9a:	sub    r14d,r15d
   14000ec9d:	sub    r14d,edi
   14000eca0:	test   r12b,0xc
   14000eca4:	jne    0x14000ecb8
   14000eca6:	lea    r9,[rsp+0x40]
   14000ecab:	mov    ecx,eax
   14000ecad:	mov    r8,r13
   14000ecb0:	mov    edx,r14d
   14000ecb3:	call   0x14000f35c
   14000ecb8:	mov    rsi,QWORD PTR [rbp-0x48]
   14000ecbc:	lea    r9,[rsp+0x40]
   14000ecc1:	lea    rcx,[rsp+0x60]
   14000ecc6:	mov    r8,r13
   14000ecc9:	mov    edx,edi
   14000eccb:	mov    QWORD PTR [rsp+0x20],rsi
   14000ecd0:	call   0x14000f3b0
   14000ecd5:	test   r12b,0x8
   14000ecd9:	je     0x14000ecf6
   14000ecdb:	test   r12b,0x4
   14000ecdf:	jne    0x14000ecf6
   14000ece1:	lea    r9,[rsp+0x40]
   14000ece6:	mov    ecx,0x30
   14000eceb:	mov    r8,r13
   14000ecee:	mov    edx,r14d
   14000ecf1:	call   0x14000f35c
   14000ecf6:	xor    eax,eax
   14000ecf8:	cmp    DWORD PTR [rsp+0x58],eax
   14000ecfc:	jne    0x14000ed64
   14000ecfe:	test   r15d,r15d
   14000ed01:	jle    0x14000ed64
   14000ed03:	mov    rdi,rbx
   14000ed06:	mov    esi,r15d
   14000ed09:	mov    rax,QWORD PTR [rbp-0x70]
   14000ed0d:	lea    r9,[rbp-0x70]
   14000ed11:	lea    rcx,[rsp+0x64]
   14000ed16:	movsxd r8,DWORD PTR [rax+0x10c]
   14000ed1d:	mov    rdx,rdi
   14000ed20:	dec    esi
   14000ed22:	call   0x1400151e8
   14000ed27:	xor    r10d,r10d
   14000ed2a:	movsxd r13,eax
   14000ed2d:	test   eax,eax
   14000ed2f:	jle    0x14000ed56
   14000ed31:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ed36:	movzx  ecx,WORD PTR [rsp+0x64]
   14000ed3b:	lea    r8,[rsp+0x40]
   14000ed40:	call   0x14000e53c
   14000ed45:	add    rdi,r13
   14000ed48:	xor    r10d,r10d
   14000ed4b:	test   esi,esi
   14000ed4d:	jg     0x14000ed09
   14000ed4f:	mov    r13,QWORD PTR [rsp+0x78]
   14000ed54:	jmp    0x14000ed7f
   14000ed56:	mov    r13,QWORD PTR [rsp+0x78]
   14000ed5b:	or     esi,0xffffffff
   14000ed5e:	mov    DWORD PTR [rsp+0x40],esi
   14000ed62:	jmp    0x14000ed83
   14000ed64:	lea    r9,[rsp+0x40]
   14000ed69:	mov    r8,r13
   14000ed6c:	mov    edx,r15d
   14000ed6f:	mov    rcx,rbx
   14000ed72:	mov    QWORD PTR [rsp+0x20],rsi
   14000ed77:	call   0x14000f3b0
   14000ed7c:	xor    r10d,r10d
   14000ed7f:	mov    esi,DWORD PTR [rsp+0x40]
   14000ed83:	test   esi,esi
   14000ed85:	js     0x14000eda9
   14000ed87:	test   r12b,0x4
   14000ed8b:	je     0x14000eda9
   14000ed8d:	lea    r9,[rsp+0x40]
   14000ed92:	mov    ecx,0x20
   14000ed97:	mov    r8,r13
   14000ed9a:	mov    edx,r14d
   14000ed9d:	call   0x14000f35c
   14000eda2:	mov    esi,DWORD PTR [rsp+0x40]
   14000eda6:	xor    r10d,r10d
   14000eda9:	mov    r14,QWORD PTR [rsp+0x50]
   14000edae:	mov    r11d,0x20
   14000edb4:	mov    rax,QWORD PTR [rbp-0x50]
   14000edb8:	test   rax,rax
   14000edbb:	je     0x14000f006
   14000edc1:	mov    rcx,rax
   14000edc4:	call   0x140008584
   14000edc9:	mov    edi,DWORD PTR [rsp+0x44]
   14000edcd:	xor    r10d,r10d
   14000edd0:	mov    QWORD PTR [rbp-0x50],r10
   14000edd4:	mov    r11d,0x20
   14000edda:	jmp    0x14000f00a
   14000eddf:	movzx  eax,r13w
   14000ede3:	cmp    eax,0x49
   14000ede6:	je     0x14000ee38
   14000ede8:	cmp    eax,0x68
   14000edeb:	je     0x14000ee30
   14000eded:	mov    ecx,0x6c
   14000edf2:	cmp    eax,ecx
   14000edf4:	je     0x14000ee0e
   14000edf6:	mov    ecx,0x58
   14000edfb:	cmp    eax,0x77
   14000edfe:	jne    0x14000f01d
   14000ee04:	bts    r12d,0xb
   14000ee09:	jmp    0x14000f01d
   14000ee0e:	cmp    WORD PTR [r8],cx
   14000ee12:	mov    ecx,0x58
   14000ee17:	jne    0x14000ee27
   14000ee19:	add    r8,0x2
   14000ee1d:	bts    r12d,0xc
   14000ee22:	jmp    0x14000f01d
   14000ee27:	or     r12d,0x10
   14000ee2b:	jmp    0x14000f01d
   14000ee30:	or     r12d,r11d
   14000ee33:	jmp    0x14000f018
   14000ee38:	bts    r12d,0xf
   14000ee3d:	cmp    WORD PTR [r8],0x36
   14000ee42:	jne    0x14000ee5a
   14000ee44:	cmp    WORD PTR [r8+0x2],0x34
   14000ee4a:	jne    0x14000ee5a
   14000ee4c:	add    r8,0x4
   14000ee50:	bts    r12d,0xf
   14000ee55:	jmp    0x14000f018
   14000ee5a:	cmp    WORD PTR [r8],0x33
   14000ee5f:	jne    0x14000ee77
   14000ee61:	cmp    WORD PTR [r8+0x2],0x32
   14000ee67:	jne    0x14000ee77
   14000ee69:	add    r8,0x4
   14000ee6d:	btr    r12d,0xf
   14000ee72:	jmp    0x14000f018
   14000ee77:	mov    eax,0x64
   14000ee7c:	cmp    WORD PTR [r8],ax
   14000ee80:	je     0x14000f018
   14000ee86:	mov    eax,0x69
   14000ee8b:	cmp    WORD PTR [r8],ax
   14000ee8f:	je     0x14000f018
   14000ee95:	mov    eax,0x6f
   14000ee9a:	cmp    WORD PTR [r8],ax
   14000ee9e:	je     0x14000f018
   14000eea4:	mov    eax,0x75
   14000eea9:	lea    ecx,[rax-0x1d]
   14000eeac:	cmp    WORD PTR [r8],ax
   14000eeb0:	je     0x14000f01d
   14000eeb6:	lea    eax,[rcx+0x20]
   14000eeb9:	cmp    WORD PTR [r8],ax
   14000eebd:	je     0x14000f01d
   14000eec3:	cmp    WORD PTR [r8],cx
   14000eec7:	je     0x14000f01d
   14000eecd:	mov    DWORD PTR [rsp+0x6c],r10d
   14000eed2:	mov    rdx,QWORD PTR [rsp+0x78]
   14000eed7:	lea    r8,[rsp+0x40]
   14000eedc:	movzx  ecx,r13w
   14000eee0:	mov    DWORD PTR [rsp+0x58],0x1
   14000eee8:	call   0x14000e53c
   14000eeed:	mov    esi,DWORD PTR [rsp+0x40]
   14000eef1:	xor    r10d,r10d
   14000eef4:	jmp    0x14000edd4
   14000eef9:	cmp    r13w,0x2a
   14000eefe:	jne    0x14000ef29
   14000ef00:	mov    edi,DWORD PTR [r14]
   14000ef03:	add    r14,0x8
   14000ef07:	mov    ecx,0x58
   14000ef0c:	mov    QWORD PTR [rsp+0x50],r14
   14000ef11:	mov    DWORD PTR [rsp+0x44],edi
   14000ef15:	test   edi,edi
   14000ef17:	jns    0x14000f01d
   14000ef1d:	or     edi,0xffffffff
   14000ef20:	mov    DWORD PTR [rsp+0x44],edi
   14000ef24:	jmp    0x14000f01d
   14000ef29:	lea    ecx,[rdi+rdi*4]
   14000ef2c:	movzx  eax,r13w
   14000ef30:	lea    edi,[rax+rcx*2-0x30]
   14000ef34:	mov    DWORD PTR [rsp+0x44],edi
   14000ef38:	jmp    0x14000f018
   14000ef3d:	mov    edi,r10d
   14000ef40:	mov    DWORD PTR [rsp+0x44],r10d
   14000ef45:	jmp    0x14000f018
   14000ef4a:	cmp    r13w,0x2a
   14000ef4f:	jne    0x14000ef7d
   14000ef51:	mov    eax,DWORD PTR [r14]
   14000ef54:	add    r14,0x8
   14000ef58:	mov    ecx,0x58
   14000ef5d:	mov    QWORD PTR [rsp+0x50],r14
   14000ef62:	mov    DWORD PTR [rsp+0x5c],eax
   14000ef66:	test   eax,eax
   14000ef68:	jns    0x14000f01d
   14000ef6e:	or     r12d,0x4
   14000ef72:	neg    eax
   14000ef74:	mov    DWORD PTR [rsp+0x5c],eax
   14000ef78:	jmp    0x14000f01d
   14000ef7d:	mov    eax,DWORD PTR [rsp+0x5c]
   14000ef81:	lea    ecx,[rax+rax*4]
   14000ef84:	movzx  eax,r13w
   14000ef88:	lea    eax,[rax+rcx*2-0x30]
   14000ef8c:	mov    DWORD PTR [rsp+0x5c],eax
   14000ef90:	jmp    0x14000f018
   14000ef95:	movzx  eax,r13w
   14000ef99:	cmp    eax,r11d
   14000ef9c:	je     0x14000efdc
   14000ef9e:	cmp    eax,0x23
   14000efa1:	je     0x14000efd5
   14000efa3:	mov    ecx,0x2b
   14000efa8:	cmp    eax,ecx
   14000efaa:	je     0x14000efcf
   14000efac:	mov    ecx,0x2d
   14000efb1:	cmp    eax,ecx
   14000efb3:	je     0x14000efc9
   14000efb5:	mov    ecx,0x30
   14000efba:	cmp    eax,ecx
   14000efbc:	mov    ecx,0x58
   14000efc1:	jne    0x14000f01d
   14000efc3:	or     r12d,0x8
   14000efc7:	jmp    0x14000f01d
   14000efc9:	or     r12d,0x4
   14000efcd:	jmp    0x14000f018
   14000efcf:	or     r12d,0x1
   14000efd3:	jmp    0x14000f018
   14000efd5:	bts    r12d,0x7
   14000efda:	jmp    0x14000f018
   14000efdc:	or     r12d,0x2
   14000efe0:	jmp    0x14000f018
   14000efe2:	or     edi,0xffffffff
   14000efe5:	mov    DWORD PTR [rbp-0x78],r10d
   14000efe9:	mov    DWORD PTR [rsp+0x70],r10d
   14000efee:	mov    DWORD PTR [rsp+0x5c],r10d
   14000eff3:	mov    DWORD PTR [rsp+0x48],r10d
   14000eff8:	mov    r12d,r10d
   14000effb:	mov    DWORD PTR [rsp+0x44],edi
   14000efff:	mov    DWORD PTR [rsp+0x58],r10d
   14000f004:	jmp    0x14000f018
   14000f006:	mov    edi,DWORD PTR [rsp+0x44]
   14000f00a:	mov    edx,DWORD PTR [rsp+0x6c]
   14000f00e:	mov    r8,QWORD PTR [rbp-0x80]
   14000f012:	mov    r9d,0x200
   14000f018:	mov    ecx,0x58
   14000f01d:	movzx  r13d,WORD PTR [r8]
   14000f021:	test   r13w,r13w
   14000f025:	jne    0x14000e65c
   14000f02b:	cmp    BYTE PTR [rbp-0x58],r10b
   14000f02f:	je     0x14000f03c
   14000f031:	mov    rcx,QWORD PTR [rbp-0x60]
   14000f035:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f03c:	mov    eax,esi
   14000f03e:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000f045:	xor    rcx,rsp
   14000f048:	call   0x140007d20
   14000f04d:	mov    rbx,QWORD PTR [rsp+0x530]
   14000f055:	add    rsp,0x4e0
   14000f05c:	pop    r15
   14000f05e:	pop    r14
   14000f060:	pop    r13
   14000f062:	pop    r12
   14000f064:	pop    rdi
   14000f065:	pop    rsi
   14000f066:	pop    rbp
   14000f067:	ret    
   14000f068:	int3   
   14000f069:	int3   
   14000f06a:	int3   
   14000f06b:	int3   
   14000f06c:	int3   
   14000f06d:	int3   
   14000f06e:	int3   
   14000f06f:	int3   
   14000f070:	int3   
   14000f071:	int3   
   14000f072:	int3   
   14000f073:	int3   
   14000f074:	int3   
   14000f075:	int3   
   14000f076:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f080:	mov    rax,rcx
   14000f083:	cmp    r8,0x8
   14000f087:	jb     0x14000f0dc
   14000f089:	movzx  edx,dl
   14000f08c:	movabs r9,0x101010101010101
   14000f096:	imul   rdx,r9
   14000f09a:	cmp    r8,0x40
   14000f09e:	jb     0x14000f0be
   14000f0a0:	neg    rcx
   14000f0a3:	and    ecx,0x7
   14000f0a6:	je     0x14000f0ae
   14000f0a8:	sub    r8,rcx
   14000f0ab:	mov    QWORD PTR [rax],rdx
   14000f0ae:	add    rcx,rax
   14000f0b1:	mov    r9,r8
   14000f0b4:	and    r8,0x3f
   14000f0b8:	shr    r9,0x6
   14000f0bc:	jne    0x14000f0f7
   14000f0be:	mov    r9,r8
   14000f0c1:	and    r8,0x7
   14000f0c5:	shr    r9,0x3
   14000f0c9:	je     0x14000f0dc
   14000f0cb:	data16 data16 xchg ax,ax
   14000f0cf:	nop
   14000f0d0:	mov    QWORD PTR [rcx],rdx
   14000f0d3:	add    rcx,0x8
   14000f0d7:	dec    r9
   14000f0da:	jne    0x14000f0d0
   14000f0dc:	test   r8,r8
   14000f0df:	je     0x14000f0eb
   14000f0e1:	mov    BYTE PTR [rcx],dl
   14000f0e3:	inc    rcx
   14000f0e6:	dec    r8
   14000f0e9:	jne    0x14000f0e1
   14000f0eb:	ret    
   14000f0ec:	nop    DWORD PTR [rax+0x0]
   14000f0f0:	data16 data16 xchg ax,ax
   14000f0f4:	data16 xchg ax,ax
   14000f0f7:	cmp    r9,0x1c00
   14000f0fe:	jae    0x14000f130
   14000f100:	mov    QWORD PTR [rcx],rdx
   14000f103:	mov    QWORD PTR [rcx+0x8],rdx
   14000f107:	mov    QWORD PTR [rcx+0x10],rdx
   14000f10b:	add    rcx,0x40
   14000f10f:	mov    QWORD PTR [rcx-0x28],rdx
   14000f113:	mov    QWORD PTR [rcx-0x20],rdx
   14000f117:	dec    r9
   14000f11a:	mov    QWORD PTR [rcx-0x18],rdx
   14000f11e:	mov    QWORD PTR [rcx-0x10],rdx
   14000f122:	mov    QWORD PTR [rcx-0x8],rdx
   14000f126:	jne    0x14000f100
   14000f128:	jmp    0x14000f0be
   14000f12a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f130:	movnti QWORD PTR [rcx],rdx
   14000f134:	movnti QWORD PTR [rcx+0x8],rdx
   14000f139:	movnti QWORD PTR [rcx+0x10],rdx
   14000f13e:	add    rcx,0x40
   14000f142:	movnti QWORD PTR [rcx-0x28],rdx
   14000f147:	movnti QWORD PTR [rcx-0x20],rdx
   14000f14c:	dec    r9
   14000f14f:	movnti QWORD PTR [rcx-0x18],rdx
   14000f154:	movnti QWORD PTR [rcx-0x10],rdx
   14000f159:	movnti QWORD PTR [rcx-0x8],rdx
   14000f15e:	jne    0x14000f130
   14000f160:	lock or BYTE PTR [rsp],0x0
   14000f165:	jmp    0x14000f0be
   14000f16a:	int3   
   14000f16b:	int3   
   14000f16c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f171:	mov    QWORD PTR [rsp+0x8],rcx
   14000f176:	push   rbp
   14000f177:	push   rsi
   14000f178:	push   rdi
   14000f179:	push   r12
   14000f17b:	push   r13
   14000f17d:	push   r14
   14000f17f:	push   r15
   14000f181:	sub    rsp,0x20
   14000f185:	mov    ebp,r9d
   14000f188:	mov    r12d,r8d
   14000f18b:	mov    r13,rdx
   14000f18e:	test   rdx,rdx
   14000f191:	je     0x14000f196
   14000f193:	mov    QWORD PTR [rdx],rcx
   14000f196:	test   rcx,rcx
   14000f199:	jne    0x14000f1b2
   14000f19b:	call   0x140008e40
   14000f1a0:	mov    DWORD PTR [rax],0x16
   14000f1a6:	call   0x14000dafc
   14000f1ab:	xor    eax,eax
   14000f1ad:	jmp    0x14000f33f
   14000f1b2:	test   r8d,r8d
   14000f1b5:	je     0x14000f1c3
   14000f1b7:	cmp    r8d,0x2
   14000f1bb:	jl     0x14000f19b
   14000f1bd:	cmp    r8d,0x24
   14000f1c1:	jg     0x14000f19b
   14000f1c3:	movzx  esi,WORD PTR [rcx]
   14000f1c6:	xor    edi,edi
   14000f1c8:	lea    rbx,[rcx+0x2]
   14000f1cc:	lea    r15d,[rdi+0x8]
   14000f1d0:	jmp    0x14000f1d9
   14000f1d2:	movzx  esi,WORD PTR [rbx]
   14000f1d5:	add    rbx,0x2
   14000f1d9:	mov    edx,r15d
   14000f1dc:	movzx  ecx,si
   14000f1df:	call   0x14000db1c
   14000f1e4:	test   eax,eax
   14000f1e6:	jne    0x14000f1d2
   14000f1e8:	cmp    si,0x2d
   14000f1ec:	jne    0x14000f1f3
   14000f1ee:	or     ebp,0x2
   14000f1f1:	jmp    0x14000f1f9
   14000f1f3:	cmp    si,0x2b
   14000f1f7:	jne    0x14000f200
   14000f1f9:	movzx  esi,WORD PTR [rbx]
   14000f1fc:	add    rbx,0x2
   14000f200:	test   r12d,r12d
   14000f203:	jne    0x14000f230
   14000f205:	movzx  ecx,si
   14000f208:	call   0x1400153f8
   14000f20d:	test   eax,eax
   14000f20f:	je     0x14000f219
   14000f211:	mov    r12d,0xa
   14000f217:	jmp    0x14000f256
   14000f219:	cmp    WORD PTR [rbx],0x78
   14000f21d:	je     0x14000f22a
   14000f21f:	cmp    WORD PTR [rbx],0x58
   14000f223:	je     0x14000f22a
   14000f225:	mov    r12d,r15d
   14000f228:	jmp    0x14000f256
   14000f22a:	mov    r12d,0x10
   14000f230:	cmp    r12d,0x10
   14000f234:	jne    0x14000f256
   14000f236:	movzx  ecx,si
   14000f239:	call   0x1400153f8
   14000f23e:	test   eax,eax
   14000f240:	jne    0x14000f256
   14000f242:	cmp    WORD PTR [rbx],0x78
   14000f246:	je     0x14000f24e
   14000f248:	cmp    WORD PTR [rbx],0x58
   14000f24c:	jne    0x14000f256
   14000f24e:	movzx  esi,WORD PTR [rbx+0x2]
   14000f252:	add    rbx,0x4
   14000f256:	xor    edx,edx
   14000f258:	or     eax,0xffffffff
   14000f25b:	div    r12d
   14000f25e:	mov    r15d,eax
   14000f261:	mov    r14d,edx
   14000f264:	movzx  ecx,si
   14000f267:	call   0x1400153f8
   14000f26c:	cmp    eax,0xffffffff
   14000f26f:	jne    0x14000f29c
   14000f271:	mov    eax,0x41
   14000f276:	cmp    ax,si
   14000f279:	ja     0x14000f281
   14000f27b:	cmp    si,0x5a
   14000f27f:	jbe    0x14000f28a
   14000f281:	lea    eax,[rsi-0x61]
   14000f284:	cmp    ax,0x19
   14000f288:	ja     0x14000f2b8
   14000f28a:	lea    eax,[rsi-0x61]
   14000f28d:	cmp    ax,0x19
   14000f291:	movzx  eax,si
   14000f294:	ja     0x14000f299
   14000f296:	sub    eax,0x20
   14000f299:	add    eax,0xffffffc9
   14000f29c:	cmp    eax,r12d
   14000f29f:	jae    0x14000f2b8
   14000f2a1:	or     ebp,0x8
   14000f2a4:	cmp    edi,r15d
   14000f2a7:	jb     0x14000f2d2
   14000f2a9:	jne    0x14000f2b0
   14000f2ab:	cmp    eax,r14d
   14000f2ae:	jbe    0x14000f2d2
   14000f2b0:	or     ebp,0x4
   14000f2b3:	test   r13,r13
   14000f2b6:	jne    0x14000f2d8
   14000f2b8:	mov    r14,QWORD PTR [rsp+0x60]
   14000f2bd:	sub    rbx,0x2
   14000f2c1:	test   bpl,0x8
   14000f2c5:	jne    0x14000f2e1
   14000f2c7:	test   r13,r13
   14000f2ca:	cmovne rbx,r14
   14000f2ce:	xor    edi,edi
   14000f2d0:	jmp    0x14000f32c
   14000f2d2:	imul   edi,r12d
   14000f2d6:	add    edi,eax
   14000f2d8:	movzx  esi,WORD PTR [rbx]
   14000f2db:	add    rbx,0x2
   14000f2df:	jmp    0x14000f264
   14000f2e1:	mov    esi,0x7fffffff
   14000f2e6:	test   bpl,0x4
   14000f2ea:	jne    0x14000f309
   14000f2ec:	test   bpl,0x1
   14000f2f0:	jne    0x14000f32c
   14000f2f2:	mov    eax,ebp
   14000f2f4:	and    eax,0x2
   14000f2f7:	je     0x14000f301
   14000f2f9:	cmp    edi,0x80000000
   14000f2ff:	ja     0x14000f309
   14000f301:	test   eax,eax
   14000f303:	jne    0x14000f32c
   14000f305:	cmp    edi,esi
   14000f307:	jbe    0x14000f32c
   14000f309:	call   0x140008e40
   14000f30e:	mov    DWORD PTR [rax],0x22
   14000f314:	test   bpl,0x1
   14000f318:	je     0x14000f31f
   14000f31a:	or     edi,0xffffffff
   14000f31d:	jmp    0x14000f32c
   14000f31f:	mov    al,bpl
   14000f322:	and    al,0x2
   14000f324:	neg    al
   14000f326:	sbb    edi,edi
   14000f328:	neg    edi
   14000f32a:	add    edi,esi
   14000f32c:	test   r13,r13
   14000f32f:	je     0x14000f335
   14000f331:	mov    QWORD PTR [r13+0x0],rbx
   14000f335:	test   bpl,0x2
   14000f339:	je     0x14000f33d
   14000f33b:	neg    edi
   14000f33d:	mov    eax,edi
   14000f33f:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f344:	add    rsp,0x20
   14000f348:	pop    r15
   14000f34a:	pop    r14
   14000f34c:	pop    r13
   14000f34e:	pop    r12
   14000f350:	pop    rdi
   14000f351:	pop    rsi
   14000f352:	pop    rbp
   14000f353:	ret    
   14000f354:	xor    r9d,r9d
   14000f357:	jmp    0x14000f16c
   14000f35c:	test   edx,edx
   14000f35e:	jle    0x14000f3ac
   14000f360:	mov    QWORD PTR [rsp+0x8],rbx
   14000f365:	mov    QWORD PTR [rsp+0x10],rbp
   14000f36a:	mov    QWORD PTR [rsp+0x18],rsi
   14000f36f:	push   rdi
   14000f370:	sub    rsp,0x20
   14000f374:	mov    rdi,r9
   14000f377:	mov    rsi,r8
   14000f37a:	mov    ebx,edx
   14000f37c:	movzx  ebp,cx
   14000f37f:	mov    r8,rdi
   14000f382:	mov    rdx,rsi
   14000f385:	movzx  ecx,bp
   14000f388:	dec    ebx
   14000f38a:	call   0x14000e53c
   14000f38f:	cmp    DWORD PTR [rdi],0xffffffff
   14000f392:	je     0x14000f398
   14000f394:	test   ebx,ebx
   14000f396:	jg     0x14000f37f
   14000f398:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f39d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f3a2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f3a7:	add    rsp,0x20
   14000f3ab:	pop    rdi
   14000f3ac:	ret    
   14000f3ad:	int3   
   14000f3ae:	int3   
   14000f3af:	int3   
   14000f3b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f3ba:	mov    QWORD PTR [rsp+0x18],rsi
   14000f3bf:	push   rdi
   14000f3c0:	push   r12
   14000f3c2:	push   r13
   14000f3c4:	sub    rsp,0x20
   14000f3c8:	test   BYTE PTR [r8+0x18],0x40
   14000f3cd:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f3d2:	mov    rdi,r9
   14000f3d5:	mov    r12d,DWORD PTR [rbx]
   14000f3d8:	mov    rbp,r8
   14000f3db:	mov    esi,edx
   14000f3dd:	mov    r13,rcx
   14000f3e0:	je     0x14000f3ee
   14000f3e2:	cmp    QWORD PTR [r8+0x10],0x0
   14000f3e7:	jne    0x14000f3ee
   14000f3e9:	add    DWORD PTR [r9],edx
   14000f3ec:	jmp    0x14000f431
   14000f3ee:	and    DWORD PTR [rbx],0x0
   14000f3f1:	test   edx,edx
   14000f3f3:	jle    0x14000f42e
   14000f3f5:	movzx  ecx,WORD PTR [r13+0x0]
   14000f3fa:	mov    r8,rdi
   14000f3fd:	mov    rdx,rbp
   14000f400:	dec    esi
   14000f402:	call   0x14000e53c
   14000f407:	add    r13,0x2
   14000f40b:	cmp    DWORD PTR [rdi],0xffffffff
   14000f40e:	jne    0x14000f425
   14000f410:	cmp    DWORD PTR [rbx],0x2a
   14000f413:	jne    0x14000f429
   14000f415:	mov    ecx,0x3f
   14000f41a:	mov    r8,rdi
   14000f41d:	mov    rdx,rbp
   14000f420:	call   0x14000e53c
   14000f425:	test   esi,esi
   14000f427:	jg     0x14000f3f5
   14000f429:	cmp    DWORD PTR [rbx],0x0
   14000f42c:	jne    0x14000f431
   14000f42e:	mov    DWORD PTR [rbx],r12d
   14000f431:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f436:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f43b:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f440:	add    rsp,0x20
   14000f444:	pop    r13
   14000f446:	pop    r12
   14000f448:	pop    rdi
   14000f449:	ret    
   14000f44a:	int3   
   14000f44b:	int3   
   14000f44c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f451:	push   rbp
   14000f452:	push   rsi
   14000f453:	push   rdi
   14000f454:	push   r12
   14000f456:	push   r13
   14000f458:	push   r14
   14000f45a:	push   r15
   14000f45c:	lea    rbp,[rsp-0x3e0]
   14000f464:	sub    rsp,0x4e0
   14000f46b:	mov    rax,QWORD PTR [rip+0x11f9e]        # 0x140021410
   14000f472:	xor    rax,rsp
   14000f475:	mov    QWORD PTR [rbp+0x3d0],rax
   14000f47c:	xor    eax,eax
   14000f47e:	mov    rbx,rcx
   14000f481:	mov    QWORD PTR [rsp+0x78],rcx
   14000f486:	mov    QWORD PTR [rbp-0x80],rdx
   14000f48a:	lea    rcx,[rbp-0x70]
   14000f48e:	mov    rdx,r8
   14000f491:	mov    r14,r9
   14000f494:	mov    QWORD PTR [rsp+0x50],r9
   14000f499:	mov    DWORD PTR [rsp+0x70],eax
   14000f49d:	mov    r12d,eax
   14000f4a0:	mov    DWORD PTR [rsp+0x58],eax
   14000f4a4:	mov    edi,eax
   14000f4a6:	mov    DWORD PTR [rsp+0x48],eax
   14000f4aa:	mov    DWORD PTR [rsp+0x4c],eax
   14000f4ae:	mov    DWORD PTR [rsp+0x6c],eax
   14000f4b2:	mov    DWORD PTR [rsp+0x44],eax
   14000f4b6:	call   0x140007d40
   14000f4bb:	call   0x140008e40
   14000f4c0:	xor    r10d,r10d
   14000f4c3:	mov    QWORD PTR [rbp-0x48],rax
   14000f4c7:	test   rbx,rbx
   14000f4ca:	jne    0x14000f4f8
   14000f4cc:	call   0x140008e40
   14000f4d1:	mov    DWORD PTR [rax],0x16
   14000f4d7:	call   0x14000dafc
   14000f4dc:	xor    r11d,r11d
   14000f4df:	cmp    BYTE PTR [rbp-0x58],r11b
   14000f4e3:	je     0x14000f4f0
   14000f4e5:	mov    rax,QWORD PTR [rbp-0x60]
   14000f4e9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000f4f0:	or     eax,0xffffffff
   14000f4f3:	jmp    0x14000ff54
   14000f4f8:	mov    r8,QWORD PTR [rbp-0x80]
   14000f4fc:	test   r8,r8
   14000f4ff:	je     0x14000f4cc
   14000f501:	movzx  r13d,WORD PTR [r8]
   14000f505:	mov    edx,r10d
   14000f508:	mov    r15d,r10d
   14000f50b:	mov    r9d,r10d
   14000f50e:	mov    QWORD PTR [rbp-0x50],r10
   14000f512:	mov    DWORD PTR [rsp+0x40],edx
   14000f516:	test   r13w,r13w
   14000f51a:	je     0x14000ff41
   14000f520:	mov    rbx,QWORD PTR [rbp-0x40]
   14000f524:	or     esi,0xffffffff
   14000f527:	lea    ecx,[rsi+0x59]
   14000f52a:	lea    r11d,[rsi+0x21]
   14000f52e:	add    r8,0x2
   14000f532:	mov    QWORD PTR [rbp-0x80],r8
   14000f536:	test   edx,edx
   14000f538:	js     0x14000ff36
   14000f53e:	movzx  eax,r13w
   14000f542:	sub    ax,r11w
   14000f546:	cmp    ax,cx
   14000f549:	ja     0x14000f560
   14000f54b:	lea    rcx,[rip+0xc4be]        # 0x14001ba10
   14000f552:	movzx  eax,r13w
   14000f556:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000f55b:	and    ecx,0xf
   14000f55e:	jmp    0x14000f563
   14000f560:	mov    ecx,r10d
   14000f563:	movsxd rax,ecx
   14000f566:	lea    rcx,[rax+rax*8]
   14000f56a:	movsxd rax,r9d
   14000f56d:	add    rcx,rax
   14000f570:	lea    rax,[rip+0xc499]        # 0x14001ba10
   14000f577:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14000f57c:	shr    r9d,0x4
   14000f580:	mov    DWORD PTR [rsp+0x68],r9d
   14000f585:	cmp    r9d,0x8
   14000f589:	je     0x14000ff7e
   14000f58f:	mov    ecx,r9d
   14000f592:	test   r9d,r9d
   14000f595:	je     0x14000fde5
   14000f59b:	dec    ecx
   14000f59d:	je     0x14000fef0
   14000f5a3:	dec    ecx
   14000f5a5:	je     0x14000fea3
   14000f5ab:	dec    ecx
   14000f5ad:	je     0x14000fe58
   14000f5b3:	dec    ecx
   14000f5b5:	je     0x14000fe4b
   14000f5bb:	dec    ecx
   14000f5bd:	je     0x14000fe08
   14000f5c3:	dec    ecx
   14000f5c5:	je     0x14000fcf2
   14000f5cb:	dec    ecx
   14000f5cd:	jne    0x14000ff23
   14000f5d3:	movzx  eax,r13w
   14000f5d7:	mov    ecx,0x64
   14000f5dc:	cmp    eax,ecx
   14000f5de:	jg     0x14000f7f6
   14000f5e4:	je     0x14000f91f
   14000f5ea:	cmp    eax,0x41
   14000f5ed:	je     0x14000f7bf
   14000f5f3:	cmp    eax,0x43
   14000f5f6:	je     0x14000f74d
   14000f5fc:	cmp    eax,0x45
   14000f5ff:	je     0x14000f7bf
   14000f605:	cmp    eax,0x47
   14000f608:	je     0x14000f7bf
   14000f60e:	cmp    eax,0x53
   14000f611:	je     0x14000f6d8
   14000f617:	cmp    eax,0x58
   14000f61a:	je     0x14000f89b
   14000f620:	cmp    eax,0x5a
   14000f623:	je     0x14000f674
   14000f625:	cmp    eax,0x61
   14000f628:	je     0x14000f7ca
   14000f62e:	cmp    eax,0x63
   14000f631:	je     0x14000f759
   14000f637:	mov    r13d,DWORD PTR [rsp+0x44]
   14000f63c:	mov    edi,0x2d
   14000f641:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000f646:	jne    0x14000fca9
   14000f64c:	test   r12b,0x40
   14000f650:	je     0x14000fb85
   14000f656:	bt     r12d,0x8
   14000f65b:	jae    0x14000fb57
   14000f661:	mov    WORD PTR [rsp+0x5c],di
   14000f666:	mov    edi,0x1
   14000f66b:	mov    DWORD PTR [rsp+0x4c],edi
   14000f66f:	jmp    0x14000fb89
   14000f674:	mov    rax,QWORD PTR [r14]
   14000f677:	add    r14,0x8
   14000f67b:	mov    QWORD PTR [rsp+0x50],r14
   14000f680:	test   rax,rax
   14000f683:	je     0x14000f6be
   14000f685:	mov    rbx,QWORD PTR [rax+0x8]
   14000f689:	test   rbx,rbx
   14000f68c:	je     0x14000f6be
   14000f68e:	mov    edi,0x2d
   14000f693:	bt     r12d,0xb
   14000f698:	jae    0x14000f6b0
   14000f69a:	movsx  eax,WORD PTR [rax]
   14000f69d:	lea    r13d,[rdi-0x2c]
   14000f6a1:	cdq    
   14000f6a2:	mov    DWORD PTR [rsp+0x44],r13d
   14000f6a7:	sub    eax,edx
   14000f6a9:	sar    eax,1
   14000f6ab:	mov    r15d,eax
   14000f6ae:	jmp    0x14000f641
   14000f6b0:	movsx  r15d,WORD PTR [rax]
   14000f6b4:	mov    r13d,r10d
   14000f6b7:	mov    DWORD PTR [rsp+0x44],r10d
   14000f6bc:	jmp    0x14000f641
   14000f6be:	mov    rbx,QWORD PTR [rip+0x12fdb]        # 0x1400226a0
   14000f6c5:	mov    rcx,rbx
   14000f6c8:	call   0x1400093f0
   14000f6cd:	xor    r10d,r10d
   14000f6d0:	mov    r15,rax
   14000f6d3:	jmp    0x14000f637
   14000f6d8:	test   r12d,0x830
   14000f6df:	jne    0x14000f6e4
   14000f6e1:	or     r12d,r11d
   14000f6e4:	cmp    DWORD PTR [rsp+0x48],esi
   14000f6e8:	mov    rbx,QWORD PTR [r14]
   14000f6eb:	mov    eax,0x7fffffff
   14000f6f0:	cmove  edi,eax
   14000f6f3:	add    r14,0x8
   14000f6f7:	mov    QWORD PTR [rsp+0x50],r14
   14000f6fc:	test   r11b,r12b
   14000f6ff:	je     0x14000f858
   14000f705:	test   rbx,rbx
   14000f708:	mov    r15d,r10d
   14000f70b:	cmove  rbx,QWORD PTR [rip+0x12f8d]        # 0x1400226a0
   14000f713:	mov    rsi,rbx
   14000f716:	test   edi,edi
   14000f718:	jle    0x14000f637
   14000f71e:	cmp    BYTE PTR [rsi],r10b
   14000f721:	je     0x14000f637
   14000f727:	movzx  ecx,BYTE PTR [rsi]
   14000f72a:	lea    rdx,[rbp-0x70]
   14000f72e:	call   0x140015368
   14000f733:	xor    r10d,r10d
   14000f736:	test   eax,eax
   14000f738:	je     0x14000f73d
   14000f73a:	inc    rsi
   14000f73d:	inc    r15d
   14000f740:	inc    rsi
   14000f743:	cmp    r15d,edi
   14000f746:	jl     0x14000f71e
   14000f748:	jmp    0x14000f637
   14000f74d:	test   r12d,0x830
   14000f754:	jne    0x14000f759
   14000f756:	or     r12d,r11d
   14000f759:	movzx  eax,WORD PTR [r14]
   14000f75d:	add    r14,0x8
   14000f761:	mov    r13d,0x1
   14000f767:	mov    WORD PTR [rsp+0x60],ax
   14000f76c:	mov    DWORD PTR [rsp+0x44],r13d
   14000f771:	mov    QWORD PTR [rsp+0x50],r14
   14000f776:	test   r11b,r12b
   14000f779:	je     0x14000f7af
   14000f77b:	mov    BYTE PTR [rsp+0x64],al
   14000f77f:	mov    rax,QWORD PTR [rbp-0x70]
   14000f783:	mov    BYTE PTR [rsp+0x65],r10b
   14000f788:	movsxd r8,DWORD PTR [rax+0x10c]
   14000f78f:	lea    r9,[rbp-0x70]
   14000f793:	lea    rdx,[rsp+0x64]
   14000f798:	lea    rcx,[rbp-0x30]
   14000f79c:	call   0x1400151e8
   14000f7a1:	xor    r10d,r10d
   14000f7a4:	test   eax,eax
   14000f7a6:	jns    0x14000f7b3
   14000f7a8:	mov    DWORD PTR [rsp+0x6c],r13d
   14000f7ad:	jmp    0x14000f7b3
   14000f7af:	mov    WORD PTR [rbp-0x30],ax
   14000f7b3:	lea    rbx,[rbp-0x30]
   14000f7b7:	mov    r15d,r13d
   14000f7ba:	jmp    0x14000f63c
   14000f7bf:	mov    DWORD PTR [rbp-0x78],0x1
   14000f7c6:	add    r13w,r11w
   14000f7ca:	mov    ecx,0x67
   14000f7cf:	mov    eax,0x200
   14000f7d4:	or     r12d,0x40
   14000f7d8:	lea    rbx,[rbp-0x30]
   14000f7dc:	mov    esi,eax
   14000f7de:	test   edi,edi
   14000f7e0:	jns    0x14000fa42
   14000f7e6:	mov    r15d,0x6
   14000f7ec:	mov    DWORD PTR [rsp+0x48],r15d
   14000f7f1:	jmp    0x14000fa93
   14000f7f6:	cmp    eax,0x65
   14000f7f9:	jl     0x14000f637
   14000f7ff:	mov    ecx,0x67
   14000f804:	cmp    eax,ecx
   14000f806:	jle    0x14000f7cf
   14000f808:	mov    ecx,0x69
   14000f80d:	cmp    eax,ecx
   14000f80f:	je     0x14000f91f
   14000f815:	cmp    eax,0x6e
   14000f818:	je     0x14000f8e2
   14000f81e:	mov    ecx,0x6f
   14000f823:	cmp    eax,ecx
   14000f825:	je     0x14000f8cd
   14000f82b:	cmp    eax,0x70
   14000f82e:	je     0x14000f891
   14000f830:	cmp    eax,0x73
   14000f833:	je     0x14000f6e4
   14000f839:	mov    ecx,0x75
   14000f83e:	cmp    eax,ecx
   14000f840:	je     0x14000f923
   14000f846:	mov    ecx,0x78
   14000f84b:	cmp    eax,ecx
   14000f84d:	jne    0x14000fb48
   14000f853:	lea    eax,[rcx-0x51]
   14000f856:	jmp    0x14000f8a0
   14000f858:	test   rbx,rbx
   14000f85b:	mov    r13d,0x1
   14000f861:	cmove  rbx,QWORD PTR [rip+0x12e3f]        # 0x1400226a8
   14000f869:	mov    DWORD PTR [rsp+0x44],r13d
   14000f86e:	mov    rax,rbx
   14000f871:	jmp    0x14000f87f
   14000f873:	dec    edi
   14000f875:	cmp    WORD PTR [rax],r10w
   14000f879:	je     0x14000f883
   14000f87b:	add    rax,0x2
   14000f87f:	test   edi,edi
   14000f881:	jne    0x14000f873
   14000f883:	sub    rax,rbx
   14000f886:	sar    rax,1
   14000f889:	mov    r15d,eax
   14000f88c:	jmp    0x14000f63c
   14000f891:	mov    edi,0x10
   14000f896:	bts    r12d,0xf
   14000f89b:	mov    eax,0x7
   14000f8a0:	mov    r9d,0x10
   14000f8a6:	mov    DWORD PTR [rsp+0x70],eax
   14000f8aa:	mov    esi,0x200
   14000f8af:	lea    r13d,[r9+0x20]
   14000f8b3:	test   r12b,r12b
   14000f8b6:	jns    0x14000f934
   14000f8b8:	add    ax,0x51
   14000f8bc:	mov    WORD PTR [rsp+0x5c],r13w
   14000f8c2:	lea    edx,[r9-0xe]
   14000f8c6:	mov    WORD PTR [rsp+0x5e],ax
   14000f8cb:	jmp    0x14000f938
   14000f8cd:	mov    r9d,0x8
   14000f8d3:	test   r12b,r12b
   14000f8d6:	jns    0x14000f929
   14000f8d8:	mov    esi,0x200
   14000f8dd:	or     r12d,esi
   14000f8e0:	jmp    0x14000f92e
   14000f8e2:	mov    rdi,QWORD PTR [r14]
   14000f8e5:	add    r14,0x8
   14000f8e9:	mov    QWORD PTR [rsp+0x50],r14
   14000f8ee:	call   0x1400151d0
   14000f8f3:	xor    r10d,r10d
   14000f8f6:	test   eax,eax
   14000f8f8:	je     0x14000ff7e
   14000f8fe:	mov    eax,DWORD PTR [rsp+0x40]
   14000f902:	lea    r11d,[r10+0x20]
   14000f906:	test   r11b,r12b
   14000f909:	je     0x14000f910
   14000f90b:	mov    WORD PTR [rdi],ax
   14000f90e:	jmp    0x14000f912
   14000f910:	mov    DWORD PTR [rdi],eax
   14000f912:	mov    DWORD PTR [rsp+0x6c],0x1
   14000f91a:	jmp    0x14000fcaf
   14000f91f:	or     r12d,0x40
   14000f923:	mov    r9d,0xa
   14000f929:	mov    esi,0x200
   14000f92e:	mov    r13d,0x30
   14000f934:	mov    edx,DWORD PTR [rsp+0x4c]
   14000f938:	mov    eax,0x8000
   14000f93d:	test   eax,r12d
   14000f940:	je     0x14000f94b
   14000f942:	mov    r8,QWORD PTR [r14]
   14000f945:	add    r14,0x8
   14000f949:	jmp    0x14000f984
   14000f94b:	bt     r12d,0xc
   14000f950:	jb     0x14000f942
   14000f952:	add    r14,0x8
   14000f956:	test   r11b,r12b
   14000f959:	je     0x14000f974
   14000f95b:	mov    QWORD PTR [rsp+0x50],r14
   14000f960:	test   r12b,0x40
   14000f964:	je     0x14000f96d
   14000f966:	movsx  r8,WORD PTR [r14-0x8]
   14000f96b:	jmp    0x14000f989
   14000f96d:	movzx  r8d,WORD PTR [r14-0x8]
   14000f972:	jmp    0x14000f989
   14000f974:	test   r12b,0x40
   14000f978:	je     0x14000f980
   14000f97a:	movsxd r8,DWORD PTR [r14-0x8]
   14000f97e:	jmp    0x14000f984
   14000f980:	mov    r8d,DWORD PTR [r14-0x8]
   14000f984:	mov    QWORD PTR [rsp+0x50],r14
   14000f989:	test   r12b,0x40
   14000f98d:	je     0x14000f99c
   14000f98f:	test   r8,r8
   14000f992:	jns    0x14000f99c
   14000f994:	neg    r8
   14000f997:	bts    r12d,0x8
   14000f99c:	test   eax,r12d
   14000f99f:	jne    0x14000f9ab
   14000f9a1:	bt     r12d,0xc
   14000f9a6:	jb     0x14000f9ab
   14000f9a8:	mov    r8d,r8d
   14000f9ab:	test   edi,edi
   14000f9ad:	jns    0x14000f9b6
   14000f9af:	mov    edi,0x1
   14000f9b4:	jmp    0x14000f9bf
   14000f9b6:	and    r12d,0xfffffff7
   14000f9ba:	cmp    edi,esi
   14000f9bc:	cmovg  edi,esi
   14000f9bf:	mov    r14d,DWORD PTR [rsp+0x70]
   14000f9c4:	mov    rax,r8
   14000f9c7:	lea    rbx,[rbp+0x1cf]
   14000f9ce:	neg    rax
   14000f9d1:	sbb    ecx,ecx
   14000f9d3:	and    ecx,edx
   14000f9d5:	mov    DWORD PTR [rsp+0x4c],ecx
   14000f9d9:	mov    ecx,edi
   14000f9db:	dec    edi
   14000f9dd:	test   ecx,ecx
   14000f9df:	jg     0x14000f9e6
   14000f9e1:	test   r8,r8
   14000f9e4:	je     0x14000fa06
   14000f9e6:	xor    edx,edx
   14000f9e8:	mov    rax,r8
   14000f9eb:	movsxd rcx,r9d
   14000f9ee:	div    rcx
   14000f9f1:	mov    r8,rax
   14000f9f4:	lea    eax,[rdx+0x30]
   14000f9f7:	cmp    eax,0x39
   14000f9fa:	jle    0x14000f9ff
   14000f9fc:	add    eax,r14d
   14000f9ff:	mov    BYTE PTR [rbx],al
   14000fa01:	dec    rbx
   14000fa04:	jmp    0x14000f9d9
   14000fa06:	mov    r14,QWORD PTR [rsp+0x50]
   14000fa0b:	lea    rax,[rbp+0x1cf]
   14000fa12:	mov    DWORD PTR [rsp+0x48],edi
   14000fa16:	sub    eax,ebx
   14000fa18:	inc    rbx
   14000fa1b:	mov    r15d,eax
   14000fa1e:	test   esi,r12d
   14000fa21:	je     0x14000f637
   14000fa27:	test   eax,eax
   14000fa29:	je     0x14000fa34
   14000fa2b:	cmp    BYTE PTR [rbx],r13b
   14000fa2e:	je     0x14000f637
   14000fa34:	dec    rbx
   14000fa37:	inc    r15d
   14000fa3a:	mov    BYTE PTR [rbx],r13b
   14000fa3d:	jmp    0x14000f637
   14000fa42:	jne    0x14000fa55
   14000fa44:	cmp    r13w,cx
   14000fa48:	jne    0x14000fa89
   14000fa4a:	mov    r15d,0x1
   14000fa50:	jmp    0x14000f7ec
   14000fa55:	cmp    edi,eax
   14000fa57:	mov    r15d,0xa3
   14000fa5d:	cmovg  edi,eax
   14000fa60:	mov    DWORD PTR [rsp+0x48],edi
   14000fa64:	cmp    edi,r15d
   14000fa67:	jle    0x14000fa90
   14000fa69:	add    edi,0x15d
   14000fa6f:	movsxd rcx,edi
   14000fa72:	call   0x14000c320
   14000fa77:	mov    QWORD PTR [rbp-0x50],rax
   14000fa7b:	test   rax,rax
   14000fa7e:	je     0x14000f7ec
   14000fa84:	mov    rbx,rax
   14000fa87:	mov    esi,edi
   14000fa89:	mov    r15d,DWORD PTR [rsp+0x48]
   14000fa8e:	jmp    0x14000fa93
   14000fa90:	mov    r15d,edi
   14000fa93:	mov    rax,QWORD PTR [r14]
   14000fa96:	mov    rcx,QWORD PTR [rip+0x12823]        # 0x1400222c0
   14000fa9d:	add    r14,0x8
   14000faa1:	mov    QWORD PTR [rsp+0x50],r14
   14000faa6:	movsx  edi,r13b
   14000faaa:	movsxd rsi,esi
   14000faad:	mov    QWORD PTR [rbp-0x40],rax
   14000fab1:	call   QWORD PTR [rip+0x8609]        # 0x1400180c0
   14000fab7:	lea    rcx,[rbp-0x70]
   14000fabb:	mov    QWORD PTR [rsp+0x30],rcx
   14000fac0:	mov    ecx,DWORD PTR [rbp-0x78]
   14000fac3:	mov    r9d,edi
   14000fac6:	mov    DWORD PTR [rsp+0x28],ecx
   14000faca:	lea    rcx,[rbp-0x40]
   14000face:	mov    r8,rsi
   14000fad1:	mov    rdx,rbx
   14000fad4:	mov    DWORD PTR [rsp+0x20],r15d
   14000fad9:	call   rax
   14000fadb:	mov    edi,r12d
   14000fade:	and    edi,0x80
   14000fae4:	je     0x14000fb01
   14000fae6:	test   r15d,r15d
   14000fae9:	jne    0x14000fb01
   14000faeb:	mov    rcx,QWORD PTR [rip+0x127e6]        # 0x1400222d8
   14000faf2:	call   QWORD PTR [rip+0x85c8]        # 0x1400180c0
   14000faf8:	lea    rdx,[rbp-0x70]
   14000fafc:	mov    rcx,rbx
   14000faff:	call   rax
   14000fb01:	mov    ecx,0x67
   14000fb06:	cmp    r13w,cx
   14000fb0a:	jne    0x14000fb26
   14000fb0c:	test   edi,edi
   14000fb0e:	jne    0x14000fb26
   14000fb10:	mov    rcx,QWORD PTR [rip+0x127b9]        # 0x1400222d0
   14000fb17:	call   QWORD PTR [rip+0x85a3]        # 0x1400180c0
   14000fb1d:	lea    rdx,[rbp-0x70]
   14000fb21:	mov    rcx,rbx
   14000fb24:	call   rax
   14000fb26:	mov    edi,0x2d
   14000fb2b:	cmp    BYTE PTR [rbx],dil
   14000fb2e:	jne    0x14000fb38
   14000fb30:	bts    r12d,0x8
   14000fb35:	inc    rbx
   14000fb38:	mov    rcx,rbx
   14000fb3b:	call   0x1400093f0
   14000fb40:	xor    r10d,r10d
   14000fb43:	mov    r15d,eax
   14000fb46:	jmp    0x14000fb4d
   14000fb48:	mov    edi,0x2d
   14000fb4d:	mov    r13d,DWORD PTR [rsp+0x44]
   14000fb52:	jmp    0x14000f641
   14000fb57:	test   r12b,0x1
   14000fb5b:	je     0x14000fb6c
   14000fb5d:	mov    eax,0x2b
   14000fb62:	mov    WORD PTR [rsp+0x5c],ax
   14000fb67:	jmp    0x14000f666
   14000fb6c:	test   r12b,0x2
   14000fb70:	je     0x14000fb85
   14000fb72:	mov    eax,0x20
   14000fb77:	mov    WORD PTR [rsp+0x5c],ax
   14000fb7c:	lea    edi,[rax-0x1f]
   14000fb7f:	mov    DWORD PTR [rsp+0x4c],edi
   14000fb83:	jmp    0x14000fb8e
   14000fb85:	mov    edi,DWORD PTR [rsp+0x4c]
   14000fb89:	mov    eax,0x20
   14000fb8e:	mov    r14d,DWORD PTR [rsp+0x58]
   14000fb93:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fb98:	sub    r14d,r15d
   14000fb9b:	sub    r14d,edi
   14000fb9e:	test   r12b,0xc
   14000fba2:	jne    0x14000fbb6
   14000fba4:	lea    r9,[rsp+0x40]
   14000fba9:	mov    ecx,eax
   14000fbab:	mov    r8,rsi
   14000fbae:	mov    edx,r14d
   14000fbb1:	call   0x14000f35c
   14000fbb6:	mov    rax,QWORD PTR [rbp-0x48]
   14000fbba:	lea    r9,[rsp+0x40]
   14000fbbf:	lea    rcx,[rsp+0x5c]
   14000fbc4:	mov    r8,rsi
   14000fbc7:	mov    edx,edi
   14000fbc9:	mov    QWORD PTR [rsp+0x20],rax
   14000fbce:	call   0x14000f3b0
   14000fbd3:	test   r12b,0x8
   14000fbd7:	je     0x14000fbf4
   14000fbd9:	test   r12b,0x4
   14000fbdd:	jne    0x14000fbf4
   14000fbdf:	lea    r9,[rsp+0x40]
   14000fbe4:	mov    ecx,0x30
   14000fbe9:	mov    r8,rsi
   14000fbec:	mov    edx,r14d
   14000fbef:	call   0x14000f35c
   14000fbf4:	test   r13d,r13d
   14000fbf7:	jne    0x14000fc5f
   14000fbf9:	test   r15d,r15d
   14000fbfc:	jle    0x14000fc5f
   14000fbfe:	mov    rdi,rbx
   14000fc01:	mov    esi,r15d
   14000fc04:	mov    rax,QWORD PTR [rbp-0x70]
   14000fc08:	lea    r9,[rbp-0x70]
   14000fc0c:	lea    rcx,[rsp+0x60]
   14000fc11:	movsxd r8,DWORD PTR [rax+0x10c]
   14000fc18:	mov    rdx,rdi
   14000fc1b:	dec    esi
   14000fc1d:	call   0x1400151e8
   14000fc22:	xor    r10d,r10d
   14000fc25:	movsxd r13,eax
   14000fc28:	test   eax,eax
   14000fc2a:	jle    0x14000fc51
   14000fc2c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000fc31:	movzx  ecx,WORD PTR [rsp+0x60]
   14000fc36:	lea    r8,[rsp+0x40]
   14000fc3b:	call   0x14000e53c
   14000fc40:	add    rdi,r13
   14000fc43:	xor    r10d,r10d
   14000fc46:	test   esi,esi
   14000fc48:	jg     0x14000fc04
   14000fc4a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fc4f:	jmp    0x14000fc7e
   14000fc51:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fc56:	or     edx,0xffffffff
   14000fc59:	mov    DWORD PTR [rsp+0x40],edx
   14000fc5d:	jmp    0x14000fc82
   14000fc5f:	mov    rax,QWORD PTR [rbp-0x48]
   14000fc63:	lea    r9,[rsp+0x40]
   14000fc68:	mov    r8,rsi
   14000fc6b:	mov    edx,r15d
   14000fc6e:	mov    rcx,rbx
   14000fc71:	mov    QWORD PTR [rsp+0x20],rax
   14000fc76:	call   0x14000f3b0
   14000fc7b:	xor    r10d,r10d
   14000fc7e:	mov    edx,DWORD PTR [rsp+0x40]
   14000fc82:	test   edx,edx
   14000fc84:	js     0x14000fce5
   14000fc86:	test   r12b,0x4
   14000fc8a:	je     0x14000fce5
   14000fc8c:	lea    r9,[rsp+0x40]
   14000fc91:	mov    ecx,0x20
   14000fc96:	mov    r8,rsi
   14000fc99:	mov    edx,r14d
   14000fc9c:	call   0x14000f35c
   14000fca1:	mov    r14,QWORD PTR [rsp+0x50]
   14000fca6:	xor    r10d,r10d
   14000fca9:	mov    r11d,0x20
   14000fcaf:	mov    edx,DWORD PTR [rsp+0x40]
   14000fcb3:	mov    rax,QWORD PTR [rbp-0x50]
   14000fcb7:	test   rax,rax
   14000fcba:	je     0x14000ff13
   14000fcc0:	mov    rcx,rax
   14000fcc3:	call   0x140008584
   14000fcc8:	mov    edi,DWORD PTR [rsp+0x48]
   14000fccc:	xor    r10d,r10d
   14000fccf:	mov    QWORD PTR [rbp-0x50],r10
   14000fcd3:	or     esi,0xffffffff
   14000fcd6:	mov    edx,DWORD PTR [rsp+0x40]
   14000fcda:	mov    r11d,0x20
   14000fce0:	jmp    0x14000ff1a
   14000fce5:	mov    r14,QWORD PTR [rsp+0x50]
   14000fcea:	mov    r11d,0x20
   14000fcf0:	jmp    0x14000fcb3
   14000fcf2:	movzx  eax,r13w
   14000fcf6:	cmp    eax,0x49
   14000fcf9:	je     0x14000fd4b
   14000fcfb:	cmp    eax,0x68
   14000fcfe:	je     0x14000fd43
   14000fd00:	mov    ecx,0x6c
   14000fd05:	cmp    eax,ecx
   14000fd07:	je     0x14000fd21
   14000fd09:	mov    ecx,0x58
   14000fd0e:	cmp    eax,0x77
   14000fd11:	jne    0x14000ff28
   14000fd17:	bts    r12d,0xb
   14000fd1c:	jmp    0x14000ff28
   14000fd21:	cmp    WORD PTR [r8],cx
   14000fd25:	mov    ecx,0x58
   14000fd2a:	jne    0x14000fd3a
   14000fd2c:	add    r8,0x2
   14000fd30:	bts    r12d,0xc
   14000fd35:	jmp    0x14000ff28
   14000fd3a:	or     r12d,0x10
   14000fd3e:	jmp    0x14000ff28
   14000fd43:	or     r12d,r11d
   14000fd46:	jmp    0x14000ff23
   14000fd4b:	bts    r12d,0xf
   14000fd50:	cmp    WORD PTR [r8],0x36
   14000fd55:	jne    0x14000fd6d
   14000fd57:	cmp    WORD PTR [r8+0x2],0x34
   14000fd5d:	jne    0x14000fd6d
   14000fd5f:	add    r8,0x4
   14000fd63:	bts    r12d,0xf
   14000fd68:	jmp    0x14000ff23
   14000fd6d:	cmp    WORD PTR [r8],0x33
   14000fd72:	jne    0x14000fd8a
   14000fd74:	cmp    WORD PTR [r8+0x2],0x32
   14000fd7a:	jne    0x14000fd8a
   14000fd7c:	add    r8,0x4
   14000fd80:	btr    r12d,0xf
   14000fd85:	jmp    0x14000ff23
   14000fd8a:	mov    eax,0x64
   14000fd8f:	cmp    WORD PTR [r8],ax
   14000fd93:	je     0x14000ff23
   14000fd99:	mov    eax,0x69
   14000fd9e:	cmp    WORD PTR [r8],ax
   14000fda2:	je     0x14000ff23
   14000fda8:	mov    eax,0x6f
   14000fdad:	cmp    WORD PTR [r8],ax
   14000fdb1:	je     0x14000ff23
   14000fdb7:	mov    eax,0x75
   14000fdbc:	lea    ecx,[rax-0x1d]
   14000fdbf:	cmp    WORD PTR [r8],ax
   14000fdc3:	je     0x14000ff28
   14000fdc9:	lea    eax,[rcx+0x20]
   14000fdcc:	cmp    WORD PTR [r8],ax
   14000fdd0:	je     0x14000ff28
   14000fdd6:	cmp    WORD PTR [r8],cx
   14000fdda:	je     0x14000ff28
   14000fde0:	mov    DWORD PTR [rsp+0x68],r10d
   14000fde5:	mov    rdx,QWORD PTR [rsp+0x78]
   14000fdea:	lea    r8,[rsp+0x40]
   14000fdef:	movzx  ecx,r13w
   14000fdf3:	mov    DWORD PTR [rsp+0x44],0x1
   14000fdfb:	call   0x14000e53c
   14000fe00:	xor    r10d,r10d
   14000fe03:	jmp    0x14000fcd6
   14000fe08:	cmp    r13w,0x2a
   14000fe0d:	jne    0x14000fe37
   14000fe0f:	mov    edi,DWORD PTR [r14]
   14000fe12:	add    r14,0x8
   14000fe16:	mov    ecx,0x58
   14000fe1b:	mov    QWORD PTR [rsp+0x50],r14
   14000fe20:	mov    DWORD PTR [rsp+0x48],edi
   14000fe24:	test   edi,edi
   14000fe26:	jns    0x14000ff28
   14000fe2c:	mov    edi,esi
   14000fe2e:	mov    DWORD PTR [rsp+0x48],esi
   14000fe32:	jmp    0x14000ff28
   14000fe37:	lea    ecx,[rdi+rdi*4]
   14000fe3a:	movzx  eax,r13w
   14000fe3e:	lea    edi,[rax+rcx*2-0x30]
   14000fe42:	mov    DWORD PTR [rsp+0x48],edi
   14000fe46:	jmp    0x14000ff23
   14000fe4b:	mov    edi,r10d
   14000fe4e:	mov    DWORD PTR [rsp+0x48],r10d
   14000fe53:	jmp    0x14000ff23
   14000fe58:	cmp    r13w,0x2a
   14000fe5d:	jne    0x14000fe8b
   14000fe5f:	mov    eax,DWORD PTR [r14]
   14000fe62:	add    r14,0x8
   14000fe66:	mov    ecx,0x58
   14000fe6b:	mov    QWORD PTR [rsp+0x50],r14
   14000fe70:	mov    DWORD PTR [rsp+0x58],eax
   14000fe74:	test   eax,eax
   14000fe76:	jns    0x14000ff28
   14000fe7c:	or     r12d,0x4
   14000fe80:	neg    eax
   14000fe82:	mov    DWORD PTR [rsp+0x58],eax
   14000fe86:	jmp    0x14000ff28
   14000fe8b:	mov    eax,DWORD PTR [rsp+0x58]
   14000fe8f:	lea    ecx,[rax+rax*4]
   14000fe92:	movzx  eax,r13w
   14000fe96:	lea    eax,[rax+rcx*2-0x30]
   14000fe9a:	mov    DWORD PTR [rsp+0x58],eax
   14000fe9e:	jmp    0x14000ff23
   14000fea3:	movzx  eax,r13w
   14000fea7:	cmp    eax,r11d
   14000feaa:	je     0x14000feea
   14000feac:	cmp    eax,0x23
   14000feaf:	je     0x14000fee3
   14000feb1:	mov    ecx,0x2b
   14000feb6:	cmp    eax,ecx
   14000feb8:	je     0x14000fedd
   14000feba:	mov    ecx,0x2d
   14000febf:	cmp    eax,ecx
   14000fec1:	je     0x14000fed7
   14000fec3:	mov    ecx,0x30
   14000fec8:	cmp    eax,ecx
   14000feca:	mov    ecx,0x58
   14000fecf:	jne    0x14000ff28
   14000fed1:	or     r12d,0x8
   14000fed5:	jmp    0x14000ff28
   14000fed7:	or     r12d,0x4
   14000fedb:	jmp    0x14000ff23
   14000fedd:	or     r12d,0x1
   14000fee1:	jmp    0x14000ff23
   14000fee3:	bts    r12d,0x7
   14000fee8:	jmp    0x14000ff23
   14000feea:	or     r12d,0x2
   14000feee:	jmp    0x14000ff23
   14000fef0:	mov    DWORD PTR [rbp-0x78],r10d
   14000fef4:	mov    DWORD PTR [rsp+0x6c],r10d
   14000fef9:	mov    DWORD PTR [rsp+0x58],r10d
   14000fefe:	mov    DWORD PTR [rsp+0x4c],r10d
   14000ff03:	mov    r12d,r10d
   14000ff06:	mov    edi,esi
   14000ff08:	mov    DWORD PTR [rsp+0x48],esi
   14000ff0c:	mov    DWORD PTR [rsp+0x44],r10d
   14000ff11:	jmp    0x14000ff23
   14000ff13:	mov    edi,DWORD PTR [rsp+0x48]
   14000ff17:	or     esi,0xffffffff
   14000ff1a:	mov    r9d,DWORD PTR [rsp+0x68]
   14000ff1f:	mov    r8,QWORD PTR [rbp-0x80]
   14000ff23:	mov    ecx,0x58
   14000ff28:	movzx  r13d,WORD PTR [r8]
   14000ff2c:	test   r13w,r13w
   14000ff30:	jne    0x14000f52e
   14000ff36:	test   r9d,r9d
   14000ff39:	je     0x14000ff41
   14000ff3b:	cmp    r9d,0x7
   14000ff3f:	jne    0x14000ff7e
   14000ff41:	cmp    BYTE PTR [rbp-0x58],r10b
   14000ff45:	je     0x14000ff52
   14000ff47:	mov    rcx,QWORD PTR [rbp-0x60]
   14000ff4b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ff52:	mov    eax,edx
   14000ff54:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000ff5b:	xor    rcx,rsp
   14000ff5e:	call   0x140007d20
   14000ff63:	mov    rbx,QWORD PTR [rsp+0x530]
   14000ff6b:	add    rsp,0x4e0
   14000ff72:	pop    r15
   14000ff74:	pop    r14
   14000ff76:	pop    r13
   14000ff78:	pop    r12
   14000ff7a:	pop    rdi
   14000ff7b:	pop    rsi
   14000ff7c:	pop    rbp
   14000ff7d:	ret    
   14000ff7e:	call   0x140008e40
   14000ff83:	mov    DWORD PTR [rax],0x16
   14000ff89:	call   0x14000dafc
   14000ff8e:	xor    r11d,r11d
   14000ff91:	cmp    BYTE PTR [rbp-0x58],r11b
   14000ff95:	je     0x14000ffa2
   14000ff97:	mov    rax,QWORD PTR [rbp-0x60]
   14000ff9b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ffa2:	mov    eax,esi
   14000ffa4:	jmp    0x14000ff54
   14000ffa6:	int3   
   14000ffa7:	int3   
   14000ffa8:	sub    rsp,0x28
   14000ffac:	mov    rax,QWORD PTR [rcx]
   14000ffaf:	cmp    DWORD PTR [rax],0xe06d7363
   14000ffb5:	jne    0x14000ffe2
   14000ffb7:	cmp    DWORD PTR [rax+0x18],0x4
   14000ffbb:	jne    0x14000ffe2
   14000ffbd:	mov    eax,DWORD PTR [rax+0x20]
   14000ffc0:	cmp    eax,0x19930520
   14000ffc5:	je     0x14000ffdc
   14000ffc7:	cmp    eax,0x19930521
   14000ffcc:	je     0x14000ffdc
   14000ffce:	cmp    eax,0x19930522
   14000ffd3:	je     0x14000ffdc
   14000ffd5:	cmp    eax,0x1994000
   14000ffda:	jne    0x14000ffe2
   14000ffdc:	call   0x140011230
   14000ffe1:	int3   
   14000ffe2:	xor    eax,eax
   14000ffe4:	add    rsp,0x28
   14000ffe8:	ret    
   14000ffe9:	int3   
   14000ffea:	int3   
   14000ffeb:	int3   
   14000ffec:	sub    rsp,0x28
   14000fff0:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000ffa8
   14000fff7:	call   QWORD PTR [rip+0x815b]        # 0x140018158
   14000fffd:	xor    eax,eax
   14000ffff:	add    rsp,0x28
   140010003:	ret    
   140010004:	lea    r8,[rip+0x9e55]        # 0x140019e60
   14001000b:	xor    eax,eax
   14001000d:	mov    rdx,r8
   140010010:	cmp    ecx,DWORD PTR [rdx]
   140010012:	je     0x140010022
   140010014:	inc    eax
   140010016:	add    rdx,0x10
   14001001a:	cmp    eax,0x16
   14001001d:	jb     0x140010010
   14001001f:	xor    eax,eax
   140010021:	ret    
   140010022:	cdqe   
   140010024:	add    rax,rax
   140010027:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14001002c:	ret    
   14001002d:	int3   
   14001002e:	int3   
   14001002f:	int3   
   140010030:	mov    QWORD PTR [rsp+0x10],rbx
   140010035:	mov    QWORD PTR [rsp+0x18],rbp
   14001003a:	mov    QWORD PTR [rsp+0x20],rsi
   14001003f:	push   rdi
   140010040:	push   r12
   140010042:	push   r13
   140010044:	sub    rsp,0x250
   14001004b:	mov    rax,QWORD PTR [rip+0x113be]        # 0x140021410
   140010052:	xor    rax,rsp
   140010055:	mov    QWORD PTR [rsp+0x240],rax
   14001005d:	mov    edi,ecx
   14001005f:	call   0x140010004
   140010064:	xor    esi,esi
   140010066:	mov    rbx,rax
   140010069:	test   rax,rax
   14001006c:	je     0x140010260
   140010072:	lea    ecx,[rsi+0x3]
   140010075:	call   0x140015978
   14001007a:	cmp    eax,0x1
   14001007d:	je     0x1400101f8
   140010083:	lea    ecx,[rsi+0x3]
   140010086:	call   0x140015978
   14001008b:	test   eax,eax
   14001008d:	jne    0x14001009c
   14001008f:	cmp    DWORD PTR [rip+0x111ca],0x1        # 0x140021260
   140010096:	je     0x1400101f8
   14001009c:	cmp    edi,0xfc
   1400100a2:	je     0x140010260
   1400100a8:	lea    rbp,[rip+0x135d1]        # 0x140023680
   1400100af:	mov    r12d,0x314
   1400100b5:	lea    r8,[rip+0x9f94]        # 0x14001a050
   1400100bc:	mov    rcx,rbp
   1400100bf:	mov    edx,r12d
   1400100c2:	call   0x14001590c
   1400100c7:	xor    ecx,ecx
   1400100c9:	test   eax,eax
   1400100cb:	jne    0x1400101e5
   1400100d1:	lea    r13,[rip+0x135da]        # 0x1400236b2
   1400100d8:	mov    r8d,0x104
   1400100de:	mov    WORD PTR [rip+0x137d5],si        # 0x1400238ba
   1400100e5:	mov    rdx,r13
   1400100e8:	call   QWORD PTR [rip+0x811a]        # 0x140018208
   1400100ee:	lea    edi,[r12-0x19]
   1400100f3:	test   eax,eax
   1400100f5:	jne    0x140010121
   1400100f7:	lea    r8,[rip+0x9f22]        # 0x14001a020
   1400100fe:	mov    edx,edi
   140010100:	mov    rcx,r13
   140010103:	call   0x14001590c
   140010108:	test   eax,eax
   14001010a:	je     0x140010121
   14001010c:	xor    r9d,r9d
   14001010f:	xor    r8d,r8d
   140010112:	xor    edx,edx
   140010114:	xor    ecx,ecx
   140010116:	mov    QWORD PTR [rsp+0x20],rsi
   14001011b:	call   0x14000da58
   140010120:	int3   
   140010121:	mov    rcx,r13
   140010124:	call   0x1400158f0
   140010129:	inc    rax
   14001012c:	cmp    rax,0x3c
   140010130:	jbe    0x140010179
   140010132:	mov    rcx,r13
   140010135:	call   0x1400158f0
   14001013a:	lea    r8,[rip+0x9ed7]        # 0x14001a018
   140010141:	mov    r9d,0x3
   140010147:	lea    rcx,[rbp+rax*2-0x44]
   14001014c:	mov    rax,rcx
   14001014f:	sub    rax,r13
   140010152:	sar    rax,1
   140010155:	sub    rdi,rax
   140010158:	mov    rdx,rdi
   14001015b:	call   0x140015820
   140010160:	test   eax,eax
   140010162:	je     0x140010179
   140010164:	xor    r9d,r9d
   140010167:	xor    r8d,r8d
   14001016a:	xor    edx,edx
   14001016c:	xor    ecx,ecx
   14001016e:	mov    QWORD PTR [rsp+0x20],rsi
   140010173:	call   0x14000da58
   140010178:	int3   
   140010179:	lea    r8,[rip+0x9e8c]        # 0x14001a00c
   140010180:	mov    rdx,r12
   140010183:	mov    rcx,rbp
   140010186:	call   0x140015798
   14001018b:	test   eax,eax
   14001018d:	jne    0x1400101d0
   14001018f:	mov    r8,rbx
   140010192:	mov    rdx,r12
   140010195:	mov    rcx,rbp
   140010198:	call   0x140015798
   14001019d:	test   eax,eax
   14001019f:	jne    0x1400101bb
   1400101a1:	lea    rdx,[rip+0x9e18]        # 0x140019fc0
   1400101a8:	mov    r8d,0x12010
   1400101ae:	mov    rcx,rbp
   1400101b1:	call   0x140015590
   1400101b6:	jmp    0x140010260
   1400101bb:	xor    r9d,r9d
   1400101be:	xor    r8d,r8d
   1400101c1:	xor    edx,edx
   1400101c3:	xor    ecx,ecx
   1400101c5:	mov    QWORD PTR [rsp+0x20],rsi
   1400101ca:	call   0x14000da58
   1400101cf:	int3   
   1400101d0:	xor    r9d,r9d
   1400101d3:	xor    r8d,r8d
   1400101d6:	xor    edx,edx
   1400101d8:	xor    ecx,ecx
   1400101da:	mov    QWORD PTR [rsp+0x20],rsi
   1400101df:	call   0x14000da58
   1400101e4:	int3   
   1400101e5:	xor    r9d,r9d
   1400101e8:	xor    r8d,r8d
   1400101eb:	xor    edx,edx
   1400101ed:	mov    QWORD PTR [rsp+0x20],rsi
   1400101f2:	call   0x14000da58
   1400101f7:	int3   
   1400101f8:	mov    ecx,0xfffffff4
   1400101fd:	call   QWORD PTR [rip+0x7ffd]        # 0x140018200
   140010203:	mov    rdi,rax
   140010206:	test   rax,rax
   140010209:	je     0x140010260
   14001020b:	cmp    rax,0xffffffffffffffff
   14001020f:	je     0x140010260
   140010211:	mov    edx,esi
   140010213:	lea    r8,[rsp+0x40]
   140010218:	mov    cl,BYTE PTR [rbx]
   14001021a:	mov    BYTE PTR [r8],cl
   14001021d:	cmp    WORD PTR [rbx],si
   140010220:	je     0x140010233
   140010222:	inc    edx
   140010224:	inc    r8
   140010227:	add    rbx,0x2
   14001022b:	cmp    edx,0x1f4
   140010231:	jb     0x140010218
   140010233:	lea    rcx,[rsp+0x40]
   140010238:	mov    BYTE PTR [rsp+0x233],sil
   140010240:	call   0x1400093f0
   140010245:	lea    r9,[rsp+0x30]
   14001024a:	lea    rdx,[rsp+0x40]
   14001024f:	mov    rcx,rdi
   140010252:	mov    r8,rax
   140010255:	mov    QWORD PTR [rsp+0x20],rsi
   14001025a:	call   QWORD PTR [rip+0x7f98]        # 0x1400181f8
   140010260:	mov    rcx,QWORD PTR [rsp+0x240]
   140010268:	xor    rcx,rsp
   14001026b:	call   0x140007d20
   140010270:	lea    r11,[rsp+0x250]
   140010278:	mov    rbx,QWORD PTR [r11+0x28]
   14001027c:	mov    rbp,QWORD PTR [r11+0x30]
   140010280:	mov    rsi,QWORD PTR [r11+0x38]
   140010284:	mov    rsp,r11
   140010287:	pop    r13
   140010289:	pop    r12
   14001028b:	pop    rdi
   14001028c:	ret    
   14001028d:	int3   
   14001028e:	int3   
   14001028f:	int3   
   140010290:	sub    rsp,0x28
   140010294:	mov    ecx,0x3
   140010299:	call   0x140015978
   14001029e:	cmp    eax,0x1
   1400102a1:	je     0x1400102ba
   1400102a3:	mov    ecx,0x3
   1400102a8:	call   0x140015978
   1400102ad:	test   eax,eax
   1400102af:	jne    0x1400102ce
   1400102b1:	cmp    DWORD PTR [rip+0x10fa8],0x1        # 0x140021260
   1400102b8:	jne    0x1400102ce
   1400102ba:	mov    ecx,0xfc
   1400102bf:	call   0x140010030
   1400102c4:	mov    ecx,0xff
   1400102c9:	call   0x140010030
   1400102ce:	add    rsp,0x28
   1400102d2:	ret    
   1400102d3:	int3   
   1400102d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400102d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400102de:	mov    QWORD PTR [rsp+0x18],rsi
   1400102e3:	push   rdi
   1400102e4:	sub    rsp,0x20
   1400102e8:	mov    rsi,rdx
   1400102eb:	mov    edi,ecx
   1400102ed:	call   0x14000d6a4
   1400102f2:	xor    r9d,r9d
   1400102f5:	mov    rbx,rax
   1400102f8:	test   rax,rax
   1400102fb:	je     0x14001048d
   140010301:	mov    rdx,QWORD PTR [rax+0xa0]
   140010308:	mov    rcx,rdx
   14001030b:	cmp    DWORD PTR [rcx],edi
   14001030d:	je     0x14001031f
   14001030f:	lea    rax,[rdx+0xc0]
   140010316:	add    rcx,0x10
   14001031a:	cmp    rcx,rax
   14001031d:	jb     0x14001030b
   14001031f:	lea    rax,[rdx+0xc0]
   140010326:	cmp    rcx,rax
   140010329:	jae    0x14001032f
   14001032b:	cmp    DWORD PTR [rcx],edi
   14001032d:	je     0x140010332
   14001032f:	mov    rcx,r9
   140010332:	test   rcx,rcx
   140010335:	je     0x14001048d
   14001033b:	mov    r8,QWORD PTR [rcx+0x8]
   14001033f:	test   r8,r8
   140010342:	je     0x14001048d
   140010348:	cmp    r8,0x5
   14001034c:	jne    0x14001035b
   14001034e:	mov    QWORD PTR [rcx+0x8],r9
   140010352:	lea    eax,[r8-0x4]
   140010356:	jmp    0x14001048f
   14001035b:	cmp    r8,0x1
   14001035f:	jne    0x140010369
   140010361:	or     eax,0xffffffff
   140010364:	jmp    0x14001048f
   140010369:	mov    rbp,QWORD PTR [rbx+0xa8]
   140010370:	mov    QWORD PTR [rbx+0xa8],rsi
   140010377:	cmp    DWORD PTR [rcx+0x4],0x8
   14001037b:	jne    0x140010477
   140010381:	mov    edx,0x30
   140010386:	mov    rax,QWORD PTR [rbx+0xa0]
   14001038d:	add    rdx,0x10
   140010391:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140010396:	cmp    rdx,0xc0
   14001039d:	jl     0x140010386
   14001039f:	cmp    DWORD PTR [rcx],0xc000008e
   1400103a5:	mov    edi,DWORD PTR [rbx+0xb0]
   1400103ab:	jne    0x1400103bc
   1400103ad:	mov    DWORD PTR [rbx+0xb0],0x83
   1400103b7:	jmp    0x140010461
   1400103bc:	cmp    DWORD PTR [rcx],0xc0000090
   1400103c2:	jne    0x1400103d3
   1400103c4:	mov    DWORD PTR [rbx+0xb0],0x81
   1400103ce:	jmp    0x140010461
   1400103d3:	cmp    DWORD PTR [rcx],0xc0000091
   1400103d9:	jne    0x1400103e7
   1400103db:	mov    DWORD PTR [rbx+0xb0],0x84
   1400103e5:	jmp    0x140010461
   1400103e7:	cmp    DWORD PTR [rcx],0xc0000093
   1400103ed:	jne    0x1400103fb
   1400103ef:	mov    DWORD PTR [rbx+0xb0],0x85
   1400103f9:	jmp    0x140010461
   1400103fb:	cmp    DWORD PTR [rcx],0xc000008d
   140010401:	jne    0x14001040f
   140010403:	mov    DWORD PTR [rbx+0xb0],0x82
   14001040d:	jmp    0x140010461
   14001040f:	cmp    DWORD PTR [rcx],0xc000008f
   140010415:	jne    0x140010423
   140010417:	mov    DWORD PTR [rbx+0xb0],0x86
   140010421:	jmp    0x140010461
   140010423:	cmp    DWORD PTR [rcx],0xc0000092
   140010429:	jne    0x140010437
   14001042b:	mov    DWORD PTR [rbx+0xb0],0x8a
   140010435:	jmp    0x140010461
   140010437:	cmp    DWORD PTR [rcx],0xc00002b5
   14001043d:	jne    0x14001044b
   14001043f:	mov    DWORD PTR [rbx+0xb0],0x8d
   140010449:	jmp    0x140010461
   14001044b:	cmp    DWORD PTR [rcx],0xc00002b4
   140010451:	mov    eax,edi
   140010453:	mov    edx,0x8e
   140010458:	cmove  eax,edx
   14001045b:	mov    DWORD PTR [rbx+0xb0],eax
   140010461:	mov    edx,DWORD PTR [rbx+0xb0]
   140010467:	mov    ecx,0x8
   14001046c:	call   r8
   14001046f:	mov    DWORD PTR [rbx+0xb0],edi
   140010475:	jmp    0x140010481
   140010477:	mov    QWORD PTR [rcx+0x8],r9
   14001047b:	mov    ecx,DWORD PTR [rcx+0x4]
   14001047e:	call   r8
   140010481:	mov    QWORD PTR [rbx+0xa8],rbp
   140010488:	jmp    0x140010361
   14001048d:	xor    eax,eax
   14001048f:	mov    rbx,QWORD PTR [rsp+0x30]
   140010494:	mov    rbp,QWORD PTR [rsp+0x38]
   140010499:	mov    rsi,QWORD PTR [rsp+0x40]
   14001049e:	add    rsp,0x20
   1400104a2:	pop    rdi
   1400104a3:	ret    
   1400104a4:	mov    rcx,QWORD PTR [rip+0x15125]        # 0x1400255d0
   1400104ab:	xor    r8d,r8d
   1400104ae:	lea    rax,[rip+0xb75b]        # 0x14001bc10
   1400104b5:	test   rcx,rcx
   1400104b8:	mov    edx,r8d
   1400104bb:	cmove  rcx,rax
   1400104bf:	cmp    WORD PTR [rcx],0x20
   1400104c3:	ja     0x1400104cf
   1400104c5:	cmp    WORD PTR [rcx],r8w
   1400104c9:	je     0x1400104f7
   1400104cb:	test   edx,edx
   1400104cd:	je     0x1400104ef
   1400104cf:	cmp    WORD PTR [rcx],0x22
   1400104d3:	jne    0x1400104df
   1400104d5:	test   edx,edx
   1400104d7:	mov    eax,r8d
   1400104da:	sete   al
   1400104dd:	mov    edx,eax
   1400104df:	add    rcx,0x2
   1400104e3:	jmp    0x1400104bf
   1400104e5:	cmp    ax,0x20
   1400104e9:	ja     0x1400104f7
   1400104eb:	add    rcx,0x2
   1400104ef:	movzx  eax,WORD PTR [rcx]
   1400104f2:	test   ax,ax
   1400104f5:	jne    0x1400104e5
   1400104f7:	mov    rax,rcx
   1400104fa:	ret    
   1400104fb:	int3   
   1400104fc:	mov    rax,rsp
   1400104ff:	mov    QWORD PTR [rax+0x8],rbx
   140010503:	mov    QWORD PTR [rax+0x10],rbp
   140010507:	mov    QWORD PTR [rax+0x18],rsi
   14001050b:	mov    QWORD PTR [rax+0x20],rdi
   14001050f:	push   r12
   140010511:	sub    rsp,0x30
   140010515:	mov    rbx,QWORD PTR [rip+0x12b34]        # 0x140023050
   14001051c:	xor    r12d,r12d
   14001051f:	mov    edi,r12d
   140010522:	test   rbx,rbx
   140010525:	jne    0x140010544
   140010527:	or     eax,0xffffffff
   14001052a:	jmp    0x1400105e9
   14001052f:	cmp    ax,0x3d
   140010533:	je     0x140010537
   140010535:	inc    edi
   140010537:	mov    rcx,rbx
   14001053a:	call   0x1400158f0
   14001053f:	lea    rbx,[rbx+rax*2+0x2]
   140010544:	movzx  eax,WORD PTR [rbx]
   140010547:	test   ax,ax
   14001054a:	jne    0x14001052f
   14001054c:	lea    eax,[rdi+0x1]
   14001054f:	mov    edx,0x8
   140010554:	movsxd rcx,eax
   140010557:	call   0x14000c3a0
   14001055c:	mov    rdi,rax
   14001055f:	mov    QWORD PTR [rip+0x130d2],rax        # 0x140023638
   140010566:	test   rax,rax
   140010569:	je     0x140010527
   14001056b:	mov    rbx,QWORD PTR [rip+0x12ade]        # 0x140023050
   140010572:	cmp    WORD PTR [rbx],r12w
   140010576:	je     0x1400105cb
   140010578:	mov    rcx,rbx
   14001057b:	call   0x1400158f0
   140010580:	cmp    WORD PTR [rbx],0x3d
   140010584:	lea    esi,[rax+0x1]
   140010587:	je     0x1400105b7
   140010589:	movsxd rbp,esi
   14001058c:	mov    edx,0x2
   140010591:	mov    rcx,rbp
   140010594:	call   0x14000c3a0
   140010599:	mov    QWORD PTR [rdi],rax
   14001059c:	test   rax,rax
   14001059f:	je     0x140010619
   1400105a1:	mov    r8,rbx
   1400105a4:	mov    rdx,rbp
   1400105a7:	mov    rcx,rax
   1400105aa:	call   0x14001590c
   1400105af:	test   eax,eax
   1400105b1:	jne    0x140010604
   1400105b3:	add    rdi,0x8
   1400105b7:	movsxd rax,esi
   1400105ba:	lea    rbx,[rbx+rax*2]
   1400105be:	cmp    WORD PTR [rbx],r12w
   1400105c2:	jne    0x140010578
   1400105c4:	mov    rbx,QWORD PTR [rip+0x12a85]        # 0x140023050
   1400105cb:	mov    rcx,rbx
   1400105ce:	call   0x140008584
   1400105d3:	mov    QWORD PTR [rip+0x12a76],r12        # 0x140023050
   1400105da:	mov    QWORD PTR [rdi],r12
   1400105dd:	mov    DWORD PTR [rip+0x14fb9],0x1        # 0x1400255a0
   1400105e7:	xor    eax,eax
   1400105e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400105ee:	mov    rbp,QWORD PTR [rsp+0x48]
   1400105f3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400105f8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400105fd:	add    rsp,0x30
   140010601:	pop    r12
   140010603:	ret    
   140010604:	xor    r9d,r9d
   140010607:	xor    r8d,r8d
   14001060a:	xor    edx,edx
   14001060c:	xor    ecx,ecx
   14001060e:	mov    QWORD PTR [rsp+0x20],r12
   140010613:	call   0x14000da58
   140010618:	int3   
   140010619:	mov    rcx,QWORD PTR [rip+0x13018]        # 0x140023638
   140010620:	call   0x140008584
   140010625:	mov    QWORD PTR [rip+0x1300c],r12        # 0x140023638
   14001062c:	jmp    0x140010527
   140010631:	int3   
   140010632:	int3   
   140010633:	int3   
   140010634:	mov    rax,rsp
   140010637:	mov    QWORD PTR [rax+0x8],rbx
   14001063b:	mov    QWORD PTR [rax+0x10],rsi
   14001063f:	mov    QWORD PTR [rax+0x18],rdi
   140010643:	mov    QWORD PTR [rax+0x20],r13
   140010647:	push   r14
   140010649:	mov    r11,QWORD PTR [rsp+0x30]
   14001064e:	xor    esi,esi
   140010650:	mov    rbx,r9
   140010653:	mov    DWORD PTR [r11],esi
   140010656:	mov    r10,rdx
   140010659:	mov    DWORD PTR [r9],0x1
   140010660:	test   rdx,rdx
   140010663:	je     0x14001066c
   140010665:	mov    QWORD PTR [rdx],r8
   140010668:	add    r10,0x8
   14001066c:	mov    edx,esi
   14001066e:	mov    r14d,0x22
   140010674:	cmp    WORD PTR [rcx],r14w
   140010678:	jne    0x14001068d
   14001067a:	test   edx,edx
   14001067c:	mov    eax,esi
   14001067e:	sete   al
   140010681:	add    rcx,0x2
   140010685:	mov    edx,eax
   140010687:	movzx  eax,r14w
   14001068b:	jmp    0x1400106ac
   14001068d:	inc    DWORD PTR [r11]
   140010690:	test   r8,r8
   140010693:	je     0x1400106a0
   140010695:	movzx  eax,WORD PTR [rcx]
   140010698:	mov    WORD PTR [r8],ax
   14001069c:	add    r8,0x2
   1400106a0:	movzx  eax,WORD PTR [rcx]
   1400106a3:	add    rcx,0x2
   1400106a7:	test   ax,ax
   1400106aa:	je     0x1400106c8
   1400106ac:	test   edx,edx
   1400106ae:	jne    0x140010674
   1400106b0:	cmp    ax,0x20
   1400106b4:	je     0x1400106bc
   1400106b6:	cmp    ax,0x9
   1400106ba:	jne    0x140010674
   1400106bc:	test   r8,r8
   1400106bf:	je     0x1400106cc
   1400106c1:	mov    WORD PTR [r8-0x2],si
   1400106c6:	jmp    0x1400106cc
   1400106c8:	sub    rcx,0x2
   1400106cc:	mov    edi,esi
   1400106ce:	mov    r13d,0x5c
   1400106d4:	cmp    WORD PTR [rcx],si
   1400106d7:	je     0x1400107ab
   1400106dd:	cmp    WORD PTR [rcx],0x20
   1400106e1:	je     0x1400106e9
   1400106e3:	cmp    WORD PTR [rcx],0x9
   1400106e7:	jne    0x1400106ef
   1400106e9:	add    rcx,0x2
   1400106ed:	jmp    0x1400106dd
   1400106ef:	cmp    WORD PTR [rcx],si
   1400106f2:	je     0x1400107ab
   1400106f8:	test   r10,r10
   1400106fb:	je     0x140010704
   1400106fd:	mov    QWORD PTR [r10],r8
   140010700:	add    r10,0x8
   140010704:	inc    DWORD PTR [rbx]
   140010706:	mov    r9d,0x1
   14001070c:	mov    edx,esi
   14001070e:	jmp    0x140010716
   140010710:	add    rcx,0x2
   140010714:	inc    edx
   140010716:	cmp    WORD PTR [rcx],r13w
   14001071a:	je     0x140010710
   14001071c:	cmp    WORD PTR [rcx],r14w
   140010720:	jne    0x14001075c
   140010722:	test   r9b,dl
   140010725:	jne    0x140010746
   140010727:	test   edi,edi
   140010729:	je     0x14001073a
   14001072b:	lea    rax,[rcx+0x2]
   14001072f:	cmp    WORD PTR [rax],r14w
   140010733:	jne    0x14001073a
   140010735:	mov    rcx,rax
   140010738:	jmp    0x140010746
   14001073a:	test   edi,edi
   14001073c:	mov    eax,esi
   14001073e:	mov    r9d,esi
   140010741:	sete   al
   140010744:	mov    edi,eax
   140010746:	shr    edx,1
   140010748:	jmp    0x14001075c
   14001074a:	dec    edx
   14001074c:	test   r8,r8
   14001074f:	je     0x140010759
   140010751:	mov    WORD PTR [r8],r13w
   140010755:	add    r8,0x2
   140010759:	inc    DWORD PTR [r11]
   14001075c:	test   edx,edx
   14001075e:	jne    0x14001074a
   140010760:	movzx  eax,WORD PTR [rcx]
   140010763:	test   ax,ax
   140010766:	je     0x140010796
   140010768:	test   edi,edi
   14001076a:	jne    0x140010778
   14001076c:	cmp    ax,0x20
   140010770:	je     0x140010796
   140010772:	cmp    ax,0x9
   140010776:	je     0x140010796
   140010778:	test   r9d,r9d
   14001077b:	je     0x14001078d
   14001077d:	test   r8,r8
   140010780:	je     0x14001078a
   140010782:	mov    WORD PTR [r8],ax
   140010786:	add    r8,0x2
   14001078a:	inc    DWORD PTR [r11]
   14001078d:	add    rcx,0x2
   140010791:	jmp    0x140010706
   140010796:	test   r8,r8
   140010799:	je     0x1400107a3
   14001079b:	mov    WORD PTR [r8],si
   14001079f:	add    r8,0x2
   1400107a3:	inc    DWORD PTR [r11]
   1400107a6:	jmp    0x1400106d4
   1400107ab:	test   r10,r10
   1400107ae:	je     0x1400107b3
   1400107b0:	mov    QWORD PTR [r10],rsi
   1400107b3:	inc    DWORD PTR [rbx]
   1400107b5:	mov    rsi,QWORD PTR [rsp+0x18]
   1400107ba:	mov    rdi,QWORD PTR [rsp+0x20]
   1400107bf:	mov    rbx,QWORD PTR [rsp+0x10]
   1400107c4:	mov    r13,QWORD PTR [rsp+0x28]
   1400107c9:	pop    r14
   1400107cb:	ret    
   1400107cc:	mov    QWORD PTR [rsp+0x18],rbx
   1400107d1:	push   rbp
   1400107d2:	push   rsi
   1400107d3:	push   rdi
   1400107d4:	sub    rsp,0x30
   1400107d8:	lea    rdi,[rip+0x134d1]        # 0x140023cb0
   1400107df:	xor    ebp,ebp
   1400107e1:	mov    r8d,0x104
   1400107e7:	mov    rdx,rdi
   1400107ea:	xor    ecx,ecx
   1400107ec:	mov    WORD PTR [rip+0x136c5],bp        # 0x140023eb8
   1400107f3:	call   QWORD PTR [rip+0x7a0f]        # 0x140018208
   1400107f9:	mov    rbx,QWORD PTR [rip+0x14dd0]        # 0x1400255d0
   140010800:	mov    QWORD PTR [rip+0x12e49],rdi        # 0x140023650
   140010807:	test   rbx,rbx
   14001080a:	je     0x140010811
   14001080c:	cmp    WORD PTR [rbx],bp
   14001080f:	jne    0x140010814
   140010811:	mov    rbx,rdi
   140010814:	lea    rax,[rsp+0x58]
   140010819:	lea    r9,[rsp+0x50]
   14001081e:	xor    r8d,r8d
   140010821:	xor    edx,edx
   140010823:	mov    rcx,rbx
   140010826:	mov    QWORD PTR [rsp+0x20],rax
   14001082b:	call   0x140010634
   140010830:	movsxd rsi,DWORD PTR [rsp+0x50]
   140010835:	movabs rax,0x1fffffffffffffff
   14001083f:	cmp    rsi,rax
   140010842:	jae    0x1400108ac
   140010844:	movsxd rax,DWORD PTR [rsp+0x58]
   140010849:	movabs rcx,0x7fffffffffffffff
   140010853:	cmp    rax,rcx
   140010856:	jae    0x1400108ac
   140010858:	lea    rcx,[rax+rsi*4]
   14001085c:	add    rax,rax
   14001085f:	add    rcx,rcx
   140010862:	cmp    rcx,rax
   140010865:	jb     0x1400108ac
   140010867:	call   0x14000c320
   14001086c:	mov    rdi,rax
   14001086f:	test   rax,rax
   140010872:	je     0x1400108ac
   140010874:	lea    r8,[rax+rsi*8]
   140010878:	lea    rax,[rsp+0x58]
   14001087d:	lea    r9,[rsp+0x50]
   140010882:	mov    rdx,rdi
   140010885:	mov    rcx,rbx
   140010888:	mov    QWORD PTR [rsp+0x20],rax
   14001088d:	call   0x140010634
   140010892:	mov    r11d,DWORD PTR [rsp+0x50]
   140010897:	mov    QWORD PTR [rip+0x12d82],rdi        # 0x140023620
   14001089e:	dec    r11d
   1400108a1:	xor    eax,eax
   1400108a3:	mov    DWORD PTR [rip+0x12d6a],r11d        # 0x140023614
   1400108aa:	jmp    0x1400108af
   1400108ac:	or     eax,0xffffffff
   1400108af:	mov    rbx,QWORD PTR [rsp+0x60]
   1400108b4:	add    rsp,0x30
   1400108b8:	pop    rdi
   1400108b9:	pop    rsi
   1400108ba:	pop    rbp
   1400108bb:	ret    
   1400108bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400108c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400108c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400108cb:	push   rdi
   1400108cc:	sub    rsp,0x20
   1400108d0:	call   QWORD PTR [rip+0x7942]        # 0x140018218
   1400108d6:	xor    ebx,ebx
   1400108d8:	mov    rdi,rax
   1400108db:	test   rax,rax
   1400108de:	je     0x14001092c
   1400108e0:	cmp    WORD PTR [rdi],bx
   1400108e3:	je     0x1400108f7
   1400108e5:	add    rax,0x2
   1400108e9:	cmp    WORD PTR [rax],bx
   1400108ec:	jne    0x1400108e5
   1400108ee:	add    rax,0x2
   1400108f2:	cmp    WORD PTR [rax],bx
   1400108f5:	jne    0x1400108e5
   1400108f7:	sub    eax,edi
   1400108f9:	add    eax,0x2
   1400108fc:	movsxd rbp,eax
   1400108ff:	mov    rcx,rbp
   140010902:	call   0x14000c320
   140010907:	mov    rsi,rax
   14001090a:	test   rax,rax
   14001090d:	je     0x140010920
   14001090f:	mov    r8,rbp
   140010912:	mov    rdx,rdi
   140010915:	mov    rcx,rax
   140010918:	call   0x140008250
   14001091d:	mov    rbx,rsi
   140010920:	mov    rcx,rdi
   140010923:	call   QWORD PTR [rip+0x78e7]        # 0x140018210
   140010929:	mov    rax,rbx
   14001092c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010931:	mov    rbp,QWORD PTR [rsp+0x38]
   140010936:	mov    rsi,QWORD PTR [rsp+0x40]
   14001093b:	add    rsp,0x20
   14001093f:	pop    rdi
   140010940:	ret    
   140010941:	int3   
   140010942:	int3   
   140010943:	int3   
   140010944:	mov    QWORD PTR [rsp+0x8],rbx
   140010949:	mov    QWORD PTR [rsp+0x10],rbp
   14001094e:	mov    QWORD PTR [rsp+0x18],rdi
   140010953:	push   r12
   140010955:	push   r13
   140010957:	push   r14
   140010959:	sub    rsp,0x90
   140010960:	lea    rcx,[rsp+0x20]
   140010965:	call   QWORD PTR [rip+0x7795]        # 0x140018100
   14001096b:	mov    edx,0x58
   140010970:	lea    ebp,[rdx-0x38]
   140010973:	mov    ecx,ebp
   140010975:	call   0x14000c3a0
   14001097a:	xor    r14d,r14d
   14001097d:	mov    rdx,rax
   140010980:	test   rax,rax
   140010983:	jne    0x14001098d
   140010985:	or     eax,0xffffffff
   140010988:	jmp    0x140010bf8
   14001098d:	mov    QWORD PTR [rip+0x14a0c],rax        # 0x1400253a0
   140010994:	add    rax,0xb00
   14001099a:	mov    ecx,ebp
   14001099c:	mov    DWORD PTR [rip+0x149e6],ecx        # 0x140025388
   1400109a2:	cmp    rdx,rax
   1400109a5:	jae    0x1400109ec
   1400109a7:	add    rdx,0x9
   1400109ab:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   1400109b0:	mov    WORD PTR [rdx-0x1],0xa00
   1400109b6:	mov    DWORD PTR [rdx+0x3],r14d
   1400109ba:	mov    WORD PTR [rdx+0x2f],0xa00
   1400109c0:	mov    BYTE PTR [rdx+0x31],0xa
   1400109c4:	mov    DWORD PTR [rdx+0x47],r14d
   1400109c8:	mov    BYTE PTR [rdx+0x43],r14b
   1400109cc:	mov    rax,QWORD PTR [rip+0x149cd]        # 0x1400253a0
   1400109d3:	add    rdx,0x58
   1400109d7:	lea    rcx,[rdx-0x9]
   1400109db:	add    rax,0xb00
   1400109e1:	cmp    rcx,rax
   1400109e4:	jb     0x1400109ab
   1400109e6:	mov    ecx,DWORD PTR [rip+0x1499c]        # 0x140025388
   1400109ec:	cmp    WORD PTR [rsp+0x62],r14w
   1400109f2:	je     0x140010b2c
   1400109f8:	mov    rax,QWORD PTR [rsp+0x68]
   1400109fd:	test   rax,rax
   140010a00:	je     0x140010b2c
   140010a06:	movsxd r12,DWORD PTR [rax]
   140010a09:	mov    ebx,0x800
   140010a0e:	lea    r13,[rax+0x4]
   140010a12:	add    r12,r13
   140010a15:	cmp    DWORD PTR [rax],ebx
   140010a17:	cmovl  ebx,DWORD PTR [rax]
   140010a1a:	cmp    ecx,ebx
   140010a1c:	jge    0x140010aa9
   140010a22:	lea    rdi,[rip+0x1497f]        # 0x1400253a8
   140010a29:	mov    edx,0x58
   140010a2e:	mov    rcx,rbp
   140010a31:	call   0x14000c3a0
   140010a36:	test   rax,rax
   140010a39:	je     0x140010aa3
   140010a3b:	mov    edx,DWORD PTR [rip+0x14947]        # 0x140025388
   140010a41:	lea    rcx,[rax+0xb00]
   140010a48:	mov    QWORD PTR [rdi],rax
   140010a4b:	add    edx,ebp
   140010a4d:	mov    DWORD PTR [rip+0x14935],edx        # 0x140025388
   140010a53:	cmp    rax,rcx
   140010a56:	jae    0x140010a99
   140010a58:	lea    rdx,[rax+0x9]
   140010a5c:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140010a61:	and    BYTE PTR [rdx+0x2f],0x80
   140010a65:	mov    WORD PTR [rdx-0x1],0xa00
   140010a6b:	mov    DWORD PTR [rdx+0x3],r14d
   140010a6f:	mov    WORD PTR [rdx+0x30],0xa0a
   140010a75:	mov    DWORD PTR [rdx+0x47],r14d
   140010a79:	mov    BYTE PTR [rdx+0x43],r14b
   140010a7d:	mov    rax,QWORD PTR [rdi]
   140010a80:	add    rdx,0x58
   140010a84:	lea    rcx,[rdx-0x9]
   140010a88:	add    rax,0xb00
   140010a8e:	cmp    rcx,rax
   140010a91:	jb     0x140010a5c
   140010a93:	mov    edx,DWORD PTR [rip+0x148ef]        # 0x140025388
   140010a99:	add    rdi,0x8
   140010a9d:	cmp    edx,ebx
   140010a9f:	jl     0x140010a29
   140010aa1:	jmp    0x140010aa9
   140010aa3:	mov    ebx,DWORD PTR [rip+0x148df]        # 0x140025388
   140010aa9:	mov    edi,r14d
   140010aac:	test   ebx,ebx
   140010aae:	jle    0x140010b2c
   140010ab0:	cmp    QWORD PTR [r12],0xffffffffffffffff
   140010ab5:	je     0x140010b1f
   140010ab7:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140010abc:	je     0x140010b1f
   140010abe:	test   BYTE PTR [r13+0x0],0x1
   140010ac3:	je     0x140010b1f
   140010ac5:	test   BYTE PTR [r13+0x0],0x8
   140010aca:	jne    0x140010ada
   140010acc:	mov    rcx,QWORD PTR [r12]
   140010ad0:	call   QWORD PTR [rip+0x775a]        # 0x140018230
   140010ad6:	test   eax,eax
   140010ad8:	je     0x140010b1f
   140010ada:	movsxd rbp,edi
   140010add:	lea    rcx,[rip+0x148bc]        # 0x1400253a0
   140010ae4:	mov    edx,0xfa0
   140010ae9:	mov    rax,rbp
   140010aec:	and    ebp,0x1f
   140010aef:	sar    rax,0x5
   140010af3:	imul   rbp,rbp,0x58
   140010af7:	add    rbp,QWORD PTR [rcx+rax*8]
   140010afb:	mov    rax,QWORD PTR [r12]
   140010aff:	mov    QWORD PTR [rbp+0x0],rax
   140010b03:	mov    al,BYTE PTR [r13+0x0]
   140010b07:	lea    rcx,[rbp+0x10]
   140010b0b:	mov    BYTE PTR [rbp+0x8],al
   140010b0e:	call   QWORD PTR [rip+0x7714]        # 0x140018228
   140010b14:	test   eax,eax
   140010b16:	je     0x140010985
   140010b1c:	inc    DWORD PTR [rbp+0xc]
   140010b1f:	inc    edi
   140010b21:	inc    r13
   140010b24:	add    r12,0x8
   140010b28:	cmp    edi,ebx
   140010b2a:	jl     0x140010ab0
   140010b2c:	mov    r12d,r14d
   140010b2f:	mov    rbx,r14
   140010b32:	mov    rdi,QWORD PTR [rip+0x14867]        # 0x1400253a0
   140010b39:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   140010b3e:	je     0x140010b51
   140010b40:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140010b45:	je     0x140010b51
   140010b47:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   140010b4c:	jmp    0x140010bd6
   140010b51:	lea    eax,[r12-0x1]
   140010b56:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   140010b5b:	neg    eax
   140010b5d:	mov    eax,0xfffffff6
   140010b62:	sbb    ecx,ecx
   140010b64:	add    ecx,0xfffffff5
   140010b67:	test   r12d,r12d
   140010b6a:	cmove  ecx,eax
   140010b6d:	call   QWORD PTR [rip+0x768d]        # 0x140018200
   140010b73:	mov    rbp,rax
   140010b76:	cmp    rax,0xffffffffffffffff
   140010b7a:	je     0x140010bc9
   140010b7c:	test   rax,rax
   140010b7f:	je     0x140010bc9
   140010b81:	mov    rcx,rax
   140010b84:	call   QWORD PTR [rip+0x76a6]        # 0x140018230
   140010b8a:	test   eax,eax
   140010b8c:	je     0x140010bc9
   140010b8e:	movzx  eax,al
   140010b91:	mov    QWORD PTR [rbx+rdi*1],rbp
   140010b95:	cmp    eax,0x2
   140010b98:	jne    0x140010ba1
   140010b9a:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140010b9f:	jmp    0x140010bab
   140010ba1:	cmp    eax,0x3
   140010ba4:	jne    0x140010bab
   140010ba6:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   140010bab:	lea    rcx,[rbx+rdi*1+0x10]
   140010bb0:	mov    edx,0xfa0
   140010bb5:	call   QWORD PTR [rip+0x766d]        # 0x140018228
   140010bbb:	test   eax,eax
   140010bbd:	je     0x140010985
   140010bc3:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140010bc7:	jmp    0x140010bd6
   140010bc9:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140010bce:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140010bd6:	add    rbx,0x58
   140010bda:	inc    r12d
   140010bdd:	cmp    rbx,0x108
   140010be4:	jl     0x140010b32
   140010bea:	mov    ecx,DWORD PTR [rip+0x14798]        # 0x140025388
   140010bf0:	call   QWORD PTR [rip+0x762a]        # 0x140018220
   140010bf6:	xor    eax,eax
   140010bf8:	lea    r11,[rsp+0x90]
   140010c00:	mov    rbx,QWORD PTR [r11+0x20]
   140010c04:	mov    rbp,QWORD PTR [r11+0x28]
   140010c08:	mov    rdi,QWORD PTR [r11+0x30]
   140010c0c:	mov    rsp,r11
   140010c0f:	pop    r14
   140010c11:	pop    r13
   140010c13:	pop    r12
   140010c15:	ret    
   140010c16:	int3   
   140010c17:	int3   
   140010c18:	mov    QWORD PTR [rsp+0x8],rbx
   140010c1d:	push   rdi
   140010c1e:	sub    rsp,0x20
   140010c22:	lea    rbx,[rip+0xc8af]        # 0x14001d4d8
   140010c29:	lea    rdi,[rip+0xc8a8]        # 0x14001d4d8
   140010c30:	jmp    0x140010c40
   140010c32:	mov    rax,QWORD PTR [rbx]
   140010c35:	test   rax,rax
   140010c38:	je     0x140010c3c
   140010c3a:	call   rax
   140010c3c:	add    rbx,0x8
   140010c40:	cmp    rbx,rdi
   140010c43:	jb     0x140010c32
   140010c45:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c4a:	add    rsp,0x20
   140010c4e:	pop    rdi
   140010c4f:	ret    
   140010c50:	mov    QWORD PTR [rsp+0x8],rbx
   140010c55:	push   rdi
   140010c56:	sub    rsp,0x20
   140010c5a:	lea    rbx,[rip+0xc887]        # 0x14001d4e8
   140010c61:	lea    rdi,[rip+0xc880]        # 0x14001d4e8
   140010c68:	jmp    0x140010c78
   140010c6a:	mov    rax,QWORD PTR [rbx]
   140010c6d:	test   rax,rax
   140010c70:	je     0x140010c74
   140010c72:	call   rax
   140010c74:	add    rbx,0x8
   140010c78:	cmp    rbx,rdi
   140010c7b:	jb     0x140010c6a
   140010c7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c82:	add    rsp,0x20
   140010c86:	pop    rdi
   140010c87:	ret    
   140010c88:	mov    QWORD PTR [rsp+0x18],rbx
   140010c8d:	push   rdi
   140010c8e:	sub    rsp,0x20
   140010c92:	mov    rax,QWORD PTR [rip+0x10777]        # 0x140021410
   140010c99:	and    QWORD PTR [rsp+0x30],0x0
   140010c9f:	movabs rdi,0x2b992ddfa232
   140010ca9:	cmp    rax,rdi
   140010cac:	je     0x140010cba
   140010cae:	not    rax
   140010cb1:	mov    QWORD PTR [rip+0x10760],rax        # 0x140021418
   140010cb8:	jmp    0x140010d30
   140010cba:	lea    rcx,[rsp+0x30]
   140010cbf:	call   QWORD PTR [rip+0x758b]        # 0x140018250
   140010cc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140010cca:	call   QWORD PTR [rip+0x7578]        # 0x140018248
   140010cd0:	mov    r11d,eax
   140010cd3:	xor    rbx,r11
   140010cd6:	call   QWORD PTR [rip+0x74d4]        # 0x1400181b0
   140010cdc:	mov    r11d,eax
   140010cdf:	xor    rbx,r11
   140010ce2:	call   QWORD PTR [rip+0x7558]        # 0x140018240
   140010ce8:	lea    rcx,[rsp+0x38]
   140010ced:	mov    r11d,eax
   140010cf0:	xor    rbx,r11
   140010cf3:	call   QWORD PTR [rip+0x753f]        # 0x140018238
   140010cf9:	mov    r11,QWORD PTR [rsp+0x38]
   140010cfe:	xor    r11,rbx
   140010d01:	movabs rax,0xffffffffffff
   140010d0b:	and    r11,rax
   140010d0e:	movabs rax,0x2b992ddfa233
   140010d18:	cmp    r11,rdi
   140010d1b:	cmove  r11,rax
   140010d1f:	mov    QWORD PTR [rip+0x106ea],r11        # 0x140021410
   140010d26:	not    r11
   140010d29:	mov    QWORD PTR [rip+0x106e8],r11        # 0x140021418
   140010d30:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d35:	add    rsp,0x20
   140010d39:	pop    rdi
   140010d3a:	ret    
   140010d3b:	int3   
   140010d3c:	rex push rbp
   140010d3e:	push   r12
   140010d40:	push   r13
   140010d42:	push   r14
   140010d44:	push   r15
   140010d46:	sub    rsp,0x40
   140010d4a:	lea    rbp,[rsp+0x30]
   140010d4f:	mov    QWORD PTR [rbp+0x40],rbx
   140010d53:	mov    QWORD PTR [rbp+0x48],rsi
   140010d57:	mov    QWORD PTR [rbp+0x50],rdi
   140010d5b:	mov    rax,QWORD PTR [rip+0x106ae]        # 0x140021410
   140010d62:	xor    rax,rbp
   140010d65:	mov    QWORD PTR [rbp+0x0],rax
   140010d69:	mov    esi,DWORD PTR [rbp+0x68]
   140010d6c:	xor    edi,edi
   140010d6e:	mov    r13d,r9d
   140010d71:	mov    r14,r8
   140010d74:	mov    r15d,edx
   140010d77:	test   esi,esi
   140010d79:	jne    0x140010d81
   140010d7b:	mov    rax,QWORD PTR [rcx]
   140010d7e:	mov    esi,DWORD PTR [rax+0x4]
   140010d81:	neg    DWORD PTR [rbp+0x70]
   140010d84:	mov    ecx,esi
   140010d86:	mov    DWORD PTR [rsp+0x28],edi
   140010d8a:	sbb    edx,edx
   140010d8c:	mov    QWORD PTR [rsp+0x20],rdi
   140010d91:	and    edx,0x8
   140010d94:	inc    edx
   140010d96:	call   QWORD PTR [rip+0x730c]        # 0x1400180a8
   140010d9c:	movsxd r12,eax
   140010d9f:	test   eax,eax
   140010da1:	jne    0x140010daa
   140010da3:	xor    eax,eax
   140010da5:	jmp    0x140010e74
   140010daa:	jle    0x140010e13
   140010dac:	movabs rax,0x7ffffffffffffff0
   140010db6:	cmp    r12,rax
   140010db9:	ja     0x140010e13
   140010dbb:	lea    rcx,[r12+r12*1+0x10]
   140010dc0:	cmp    rcx,0x400
   140010dc7:	ja     0x140010dfa
   140010dc9:	lea    rax,[rcx+0xf]
   140010dcd:	cmp    rax,rcx
   140010dd0:	ja     0x140010ddc
   140010dd2:	movabs rax,0xffffffffffffff0
   140010ddc:	and    rax,0xfffffffffffffff0
   140010de0:	call   0x140013e70
   140010de5:	sub    rsp,rax
   140010de8:	lea    rbx,[rsp+0x30]
   140010ded:	test   rbx,rbx
   140010df0:	je     0x140010da3
   140010df2:	mov    DWORD PTR [rbx],0xcccc
   140010df8:	jmp    0x140010e0d
   140010dfa:	call   0x14000abd4
   140010dff:	mov    rbx,rax
   140010e02:	test   rax,rax
   140010e05:	je     0x140010e16
   140010e07:	mov    DWORD PTR [rax],0xdddd
   140010e0d:	add    rbx,0x10
   140010e11:	jmp    0x140010e16
   140010e13:	mov    rbx,rdi
   140010e16:	test   rbx,rbx
   140010e19:	je     0x140010da3
   140010e1b:	mov    r8,r12
   140010e1e:	xor    edx,edx
   140010e20:	mov    rcx,rbx
   140010e23:	add    r8,r8
   140010e26:	call   0x14000f080
   140010e2b:	mov    r9d,r13d
   140010e2e:	mov    r8,r14
   140010e31:	mov    edx,0x1
   140010e36:	mov    ecx,esi
   140010e38:	mov    DWORD PTR [rsp+0x28],r12d
   140010e3d:	mov    QWORD PTR [rsp+0x20],rbx
   140010e42:	call   QWORD PTR [rip+0x7260]        # 0x1400180a8
   140010e48:	test   eax,eax
   140010e4a:	je     0x140010e61
   140010e4c:	mov    r9,QWORD PTR [rbp+0x60]
   140010e50:	mov    r8d,eax
   140010e53:	mov    rdx,rbx
   140010e56:	mov    ecx,r15d
   140010e59:	call   QWORD PTR [rip+0x7251]        # 0x1400180b0
   140010e5f:	mov    edi,eax
   140010e61:	lea    rcx,[rbx-0x10]
   140010e65:	cmp    DWORD PTR [rcx],0xdddd
   140010e6b:	jne    0x140010e72
   140010e6d:	call   0x140008584
   140010e72:	mov    eax,edi
   140010e74:	mov    rcx,QWORD PTR [rbp+0x0]
   140010e78:	xor    rcx,rbp
   140010e7b:	call   0x140007d20
   140010e80:	mov    rbx,QWORD PTR [rbp+0x40]
   140010e84:	mov    rsi,QWORD PTR [rbp+0x48]
   140010e88:	mov    rdi,QWORD PTR [rbp+0x50]
   140010e8c:	lea    rsp,[rbp+0x10]
   140010e90:	pop    r15
   140010e92:	pop    r14
   140010e94:	pop    r13
   140010e96:	pop    r12
   140010e98:	pop    rbp
   140010e99:	ret    
   140010e9a:	int3   
   140010e9b:	int3   
   140010e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140010ea1:	mov    QWORD PTR [rsp+0x10],rsi
   140010ea6:	push   rdi
   140010ea7:	sub    rsp,0x60
   140010eab:	mov    esi,edx
   140010ead:	mov    rdx,rcx
   140010eb0:	lea    rcx,[rsp+0x40]
   140010eb5:	mov    ebx,r9d
   140010eb8:	mov    rdi,r8
   140010ebb:	call   0x140007d40
   140010ec0:	mov    r11d,DWORD PTR [rsp+0xa8]
   140010ec8:	mov    eax,DWORD PTR [rsp+0x98]
   140010ecf:	lea    rcx,[rsp+0x40]
   140010ed4:	mov    DWORD PTR [rsp+0x30],r11d
   140010ed9:	mov    DWORD PTR [rsp+0x28],eax
   140010edd:	mov    rax,QWORD PTR [rsp+0x90]
   140010ee5:	mov    r9d,ebx
   140010ee8:	mov    r8,rdi
   140010eeb:	mov    edx,esi
   140010eed:	mov    QWORD PTR [rsp+0x20],rax
   140010ef2:	call   0x140010d3c
   140010ef7:	cmp    BYTE PTR [rsp+0x58],0x0
   140010efc:	je     0x140010f0a
   140010efe:	mov    rcx,QWORD PTR [rsp+0x50]
   140010f03:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010f0a:	mov    rbx,QWORD PTR [rsp+0x70]
   140010f0f:	mov    rsi,QWORD PTR [rsp+0x78]
   140010f14:	add    rsp,0x60
   140010f18:	pop    rdi
   140010f19:	ret    
   140010f1a:	int3   
   140010f1b:	int3   
   140010f1c:	rex push rbx
   140010f1e:	push   rbp
   140010f1f:	push   rsi
   140010f20:	push   rdi
   140010f21:	push   r12
   140010f23:	push   r13
   140010f25:	push   r14
   140010f27:	sub    rsp,0xd0
   140010f2e:	mov    rax,QWORD PTR [rip+0x104db]        # 0x140021410
   140010f35:	xor    rax,rsp
   140010f38:	mov    QWORD PTR [rsp+0xc0],rax
   140010f40:	mov    rbx,QWORD PTR [rsp+0x130]
   140010f48:	mov    esi,r9d
   140010f4b:	mov    r12d,r8d
   140010f4e:	mov    r14,rcx
   140010f51:	cmp    edx,0x1
   140010f54:	jne    0x140011064
   140010f5a:	lea    r9,[rsp+0x40]
   140010f5f:	mov    r8d,esi
   140010f62:	mov    edx,r12d
   140010f65:	lea    rdi,[rsp+0x40]
   140010f6a:	xor    ebp,ebp
   140010f6c:	mov    DWORD PTR [rsp+0x20],0x80
   140010f74:	call   0x140015b10
   140010f79:	mov    r13d,eax
   140010f7c:	test   eax,eax
   140010f7e:	jne    0x140010fdc
   140010f80:	call   QWORD PTR [rip+0x70da]        # 0x140018060
   140010f86:	cmp    eax,0x7a
   140010f89:	jne    0x140011003
   140010f8b:	and    DWORD PTR [rsp+0x20],ebp
   140010f8f:	xor    r9d,r9d
   140010f92:	mov    r8d,esi
   140010f95:	mov    edx,r12d
   140010f98:	mov    rcx,r14
   140010f9b:	call   0x140015b10
   140010fa0:	movsxd r13,eax
   140010fa3:	test   eax,eax
   140010fa5:	je     0x140011003
   140010fa7:	lea    edx,[rbp+0x1]
   140010faa:	mov    rcx,r13
   140010fad:	call   0x14000c3a0
   140010fb2:	mov    rdi,rax
   140010fb5:	test   rax,rax
   140010fb8:	je     0x140011003
   140010fba:	mov    r9,rax
   140010fbd:	mov    r8d,esi
   140010fc0:	mov    edx,r12d
   140010fc3:	mov    rcx,r14
   140010fc6:	mov    ebp,0x1
   140010fcb:	mov    DWORD PTR [rsp+0x20],r13d
   140010fd0:	call   0x140015b10
   140010fd5:	mov    r13d,eax
   140010fd8:	test   eax,eax
   140010fda:	je     0x140010ffb
   140010fdc:	movsxd rsi,r13d
   140010fdf:	mov    edx,0x1
   140010fe4:	mov    rcx,rsi
   140010fe7:	call   0x14000c3a0
   140010fec:	mov    rcx,rax
   140010fef:	mov    QWORD PTR [rbx],rax
   140010ff2:	test   rax,rax
   140010ff5:	jne    0x140011028
   140010ff7:	test   ebp,ebp
   140010ff9:	je     0x140011003
   140010ffb:	mov    rcx,rdi
   140010ffe:	call   0x140008584
   140011003:	or     eax,0xffffffff
   140011006:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001100e:	xor    rcx,rsp
   140011011:	call   0x140007d20
   140011016:	add    rsp,0xd0
   14001101d:	pop    r14
   14001101f:	pop    r13
   140011021:	pop    r12
   140011023:	pop    rdi
   140011024:	pop    rsi
   140011025:	pop    rbp
   140011026:	pop    rbx
   140011027:	ret    
   140011028:	lea    eax,[r13-0x1]
   14001102c:	mov    r8,rdi
   14001102f:	mov    rdx,rsi
   140011032:	movsxd r9,eax
   140011035:	call   0x1400112ac
   14001103a:	test   eax,eax
   14001103c:	jne    0x14001104e
   14001103e:	test   ebp,ebp
   140011040:	je     0x14001104a
   140011042:	mov    rcx,rdi
   140011045:	call   0x140008584
   14001104a:	xor    eax,eax
   14001104c:	jmp    0x140011006
   14001104e:	and    QWORD PTR [rsp+0x20],0x0
   140011054:	xor    r9d,r9d
   140011057:	xor    r8d,r8d
   14001105a:	xor    edx,edx
   14001105c:	xor    ecx,ecx
   14001105e:	call   0x14000da58
   140011063:	int3   
   140011064:	mov    ebp,0x2
   140011069:	cmp    edx,ebp
   14001106b:	jne    0x1400110c1
   14001106d:	and    QWORD PTR [rbx],0x0
   140011071:	xor    r9d,r9d
   140011074:	xor    r8d,r8d
   140011077:	mov    edx,esi
   140011079:	mov    ecx,r12d
   14001107c:	call   QWORD PTR [rip+0x71d6]        # 0x140018258
   140011082:	movsxd rdi,eax
   140011085:	test   eax,eax
   140011087:	je     0x1400110b0
   140011089:	mov    rcx,rdi
   14001108c:	mov    edx,ebp
   14001108e:	call   0x14000c3a0
   140011093:	mov    QWORD PTR [rbx],rax
   140011096:	test   rax,rax
   140011099:	je     0x1400110b0
   14001109b:	mov    r9d,edi
   14001109e:	mov    r8,rax
   1400110a1:	mov    edx,esi
   1400110a3:	mov    ecx,r12d
   1400110a6:	call   QWORD PTR [rip+0x71ac]        # 0x140018258
   1400110ac:	test   eax,eax
   1400110ae:	jne    0x14001104a
   1400110b0:	mov    rcx,QWORD PTR [rbx]
   1400110b3:	call   0x140008584
   1400110b8:	and    QWORD PTR [rbx],0x0
   1400110bc:	jmp    0x140011003
   1400110c1:	test   edx,edx
   1400110c3:	jne    0x140011003
   1400110c9:	and    DWORD PTR [rsp+0x30],edx
   1400110cd:	bts    esi,0x1d
   1400110d1:	lea    r8,[rsp+0x30]
   1400110d6:	mov    edx,esi
   1400110d8:	mov    r9d,ebp
   1400110db:	mov    ecx,r12d
   1400110de:	call   QWORD PTR [rip+0x7174]        # 0x140018258
   1400110e4:	test   eax,eax
   1400110e6:	je     0x140011003
   1400110ec:	mov    al,BYTE PTR [rsp+0x30]
   1400110f0:	mov    BYTE PTR [rbx],al
   1400110f2:	jmp    0x14001104a
   1400110f7:	int3   
   1400110f8:	mov    QWORD PTR [rip+0x12dc1],rcx        # 0x140023ec0
   1400110ff:	ret    
   140011100:	mov    QWORD PTR [rsp+0x8],rbx
   140011105:	mov    QWORD PTR [rsp+0x10],rbp
   14001110a:	mov    QWORD PTR [rsp+0x18],rsi
   14001110f:	push   rdi
   140011110:	sub    rsp,0x20
   140011114:	mov    rbp,r8
   140011117:	mov    rsi,rdx
   14001111a:	mov    rbx,rcx
   14001111d:	test   rcx,rcx
   140011120:	jne    0x140011127
   140011122:	call   0x140011254
   140011127:	movsxd rax,DWORD PTR [rbx+0x18]
   14001112b:	mov    edi,DWORD PTR [rbx+0x14]
   14001112e:	add    rax,QWORD PTR [rsi+0x8]
   140011132:	jne    0x140011139
   140011134:	call   0x140011254
   140011139:	xor    ecx,ecx
   14001113b:	test   edi,edi
   14001113d:	je     0x140011172
   14001113f:	mov    r9,QWORD PTR [rsi+0x8]
   140011143:	movsxd r8,DWORD PTR [rbx+0x18]
   140011147:	lea    rdx,[r9+r8*1]
   14001114b:	movsxd rax,DWORD PTR [rdx]
   14001114e:	add    rax,r9
   140011151:	cmp    rbp,rax
   140011154:	jl     0x140011160
   140011156:	inc    ecx
   140011158:	add    rdx,0x8
   14001115c:	cmp    ecx,edi
   14001115e:	jb     0x14001114b
   140011160:	test   ecx,ecx
   140011162:	je     0x140011172
   140011164:	lea    eax,[rcx-0x1]
   140011167:	lea    rdx,[r8+rax*8]
   14001116b:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   140011170:	jmp    0x140011175
   140011172:	or     eax,0xffffffff
   140011175:	mov    rbx,QWORD PTR [rsp+0x30]
   14001117a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001117f:	mov    rsi,QWORD PTR [rsp+0x40]
   140011184:	add    rsp,0x20
   140011188:	pop    rdi
   140011189:	ret    
   14001118a:	int3   
   14001118b:	int3   
   14001118c:	mov    r8,QWORD PTR [rdx]
   14001118f:	jmp    0x140011100
   140011194:	sub    rsp,0x28
   140011198:	movsxd r9,DWORD PTR [r8+0x1c]
   14001119c:	mov    rax,QWORD PTR [rcx]
   14001119f:	mov    r10,r8
   1400111a2:	mov    eax,DWORD PTR [r9+rax*1]
   1400111a6:	cmp    eax,0xfffffffe
   1400111a9:	jne    0x1400111b6
   1400111ab:	mov    r8,QWORD PTR [rdx]
   1400111ae:	mov    rcx,r10
   1400111b1:	call   0x140011100
   1400111b6:	add    rsp,0x28
   1400111ba:	ret    
   1400111bb:	int3   
   1400111bc:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400111c0:	mov    rax,QWORD PTR [rcx]
   1400111c3:	mov    DWORD PTR [rdx+rax*1],r9d
   1400111c7:	ret    
   1400111c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400111cd:	push   rdi
   1400111ce:	sub    rsp,0x20
   1400111d2:	mov    edi,r9d
   1400111d5:	lea    r9,[rsp+0x40]
   1400111da:	mov    rbx,r8
   1400111dd:	call   0x14000952c
   1400111e2:	mov    rcx,QWORD PTR [rax]
   1400111e5:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400111e9:	mov    QWORD PTR [rsp+0x40],rcx
   1400111ee:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   1400111f2:	jle    0x1400111f8
   1400111f4:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   1400111f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400111fd:	add    rsp,0x20
   140011201:	pop    rdi
   140011202:	ret    
   140011203:	int3   
   140011204:	rex push rbx
   140011206:	sub    rsp,0x20
   14001120a:	lea    r9,[rsp+0x40]
   14001120f:	mov    rbx,r8
   140011212:	call   0x14000952c
   140011217:	mov    rcx,QWORD PTR [rax]
   14001121a:	movsxd rax,DWORD PTR [rbx+0x1c]
   14001121e:	mov    QWORD PTR [rsp+0x40],rcx
   140011223:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140011227:	add    rsp,0x20
   14001122b:	pop    rbx
   14001122c:	ret    
   14001122d:	int3   
   14001122e:	int3   
   14001122f:	int3   
   140011230:	sub    rsp,0x28
   140011234:	call   0x14000d728
   140011239:	mov    rcx,QWORD PTR [rax+0xd0]
   140011240:	test   rcx,rcx
   140011243:	je     0x140011249
   140011245:	call   rcx
   140011247:	jmp    0x140011249
   140011249:	call   0x14000c84c
   14001124e:	add    rsp,0x28
   140011252:	ret    
   140011253:	int3   
   140011254:	sub    rsp,0x28
   140011258:	mov    rcx,QWORD PTR [rip+0x12c69]        # 0x140023ec8
   14001125f:	call   QWORD PTR [rip+0x6e5b]        # 0x1400180c0
   140011265:	test   rax,rax
   140011268:	je     0x14001126e
   14001126a:	call   rax
   14001126c:	jmp    0x14001126e
   14001126e:	call   0x140011230
   140011273:	int3   
   140011274:	add    rsp,0x28
   140011278:	ret    
   140011279:	int3   
   14001127a:	int3   
   14001127b:	int3   
   14001127c:	sub    rsp,0x28
   140011280:	lea    rcx,[rip+0xffffffffffffffa9]        # 0x140011230
   140011287:	call   QWORD PTR [rip+0x6e2b]        # 0x1400180b8
   14001128d:	mov    QWORD PTR [rip+0x12c34],rax        # 0x140023ec8
   140011294:	add    rsp,0x28
   140011298:	ret    
   140011299:	int3   
   14001129a:	int3   
   14001129b:	int3   
   14001129c:	lea    rax,[rip+0x10cdd]        # 0x140021f80
   1400112a3:	ret    
   1400112a4:	lea    rax,[rip+0x10b75]        # 0x140021e20
   1400112ab:	ret    
   1400112ac:	rex push rbx
   1400112ae:	sub    rsp,0x20
   1400112b2:	xor    ebx,ebx
   1400112b4:	mov    r10,r8
   1400112b7:	test   r9,r9
   1400112ba:	jne    0x1400112ca
   1400112bc:	test   rcx,rcx
   1400112bf:	jne    0x1400112cf
   1400112c1:	test   rdx,rdx
   1400112c4:	jne    0x1400112e4
   1400112c6:	xor    eax,eax
   1400112c8:	jmp    0x1400112f7
   1400112ca:	test   rcx,rcx
   1400112cd:	je     0x1400112e4
   1400112cf:	test   rdx,rdx
   1400112d2:	je     0x1400112e4
   1400112d4:	test   r9,r9
   1400112d7:	jne    0x1400112dd
   1400112d9:	mov    BYTE PTR [rcx],bl
   1400112db:	jmp    0x1400112c6
   1400112dd:	test   r8,r8
   1400112e0:	jne    0x1400112fd
   1400112e2:	mov    BYTE PTR [rcx],bl
   1400112e4:	call   0x140008e40
   1400112e9:	mov    ebx,0x16
   1400112ee:	mov    DWORD PTR [rax],ebx
   1400112f0:	call   0x14000dafc
   1400112f5:	mov    eax,ebx
   1400112f7:	add    rsp,0x20
   1400112fb:	pop    rbx
   1400112fc:	ret    
   1400112fd:	mov    r11,rcx
   140011300:	mov    r8,rdx
   140011303:	cmp    r9,0xffffffffffffffff
   140011307:	jne    0x140011321
   140011309:	sub    r11,r10
   14001130c:	mov    al,BYTE PTR [r10]
   14001130f:	mov    BYTE PTR [r11+r10*1],al
   140011313:	inc    r10
   140011316:	test   al,al
   140011318:	je     0x140011344
   14001131a:	dec    r8
   14001131d:	jne    0x14001130c
   14001131f:	jmp    0x140011344
   140011321:	sub    r10,rcx
   140011324:	mov    al,BYTE PTR [r10+r11*1]
   140011328:	mov    BYTE PTR [r11],al
   14001132b:	inc    r11
   14001132e:	test   al,al
   140011330:	je     0x14001133c
   140011332:	dec    r8
   140011335:	je     0x14001133c
   140011337:	dec    r9
   14001133a:	jne    0x140011324
   14001133c:	test   r9,r9
   14001133f:	jne    0x140011344
   140011341:	mov    BYTE PTR [r11],bl
   140011344:	test   r8,r8
   140011347:	jne    0x1400112c6
   14001134d:	cmp    r9,0xffffffffffffffff
   140011351:	jne    0x14001135d
   140011353:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   140011357:	lea    eax,[r8+0x50]
   14001135b:	jmp    0x1400112f7
   14001135d:	mov    BYTE PTR [rcx],bl
   14001135f:	call   0x140008e40
   140011364:	mov    ebx,0x22
   140011369:	jmp    0x1400112ee
   14001136b:	int3   
   14001136c:	mov    QWORD PTR [rsp+0x8],rbx
   140011371:	mov    QWORD PTR [rsp+0x10],rsi
   140011376:	mov    QWORD PTR [rsp+0x18],rdi
   14001137b:	push   rbp
   14001137c:	push   r12
   14001137e:	push   r13
   140011380:	mov    rbp,rsp
   140011383:	sub    rsp,0x40
   140011387:	movzx  esi,WORD PTR [rdx+0x42]
   14001138b:	movzx  r12d,WORD PTR [rdx+0x44]
   140011390:	mov    rdi,rcx
   140011393:	test   rcx,rcx
   140011396:	jne    0x1400113a0
   140011398:	or     eax,0xffffffff
   14001139b:	jmp    0x140011ec2
   1400113a0:	and    QWORD PTR [rbp-0x8],0x0
   1400113a5:	lea    rax,[rcx+0x8]
   1400113a9:	mov    r9d,0x31
   1400113af:	lea    r13d,[r9-0x30]
   1400113b3:	mov    QWORD PTR [rbp-0x10],rdx
   1400113b7:	lea    rcx,[rbp-0x10]
   1400113bb:	mov    r8d,esi
   1400113be:	mov    edx,r13d
   1400113c1:	mov    QWORD PTR [rsp+0x20],rax
   1400113c6:	call   0x140010f1c
   1400113cb:	lea    rcx,[rdi+0x10]
   1400113cf:	lea    r9d,[r13+0x31]
   1400113d3:	mov    QWORD PTR [rsp+0x20],rcx
   1400113d8:	lea    rcx,[rbp-0x10]
   1400113dc:	mov    r8d,esi
   1400113df:	mov    edx,r13d
   1400113e2:	mov    ebx,eax
   1400113e4:	call   0x140010f1c
   1400113e9:	lea    rcx,[rdi+0x18]
   1400113ed:	lea    r9d,[r13+0x32]
   1400113f1:	mov    QWORD PTR [rsp+0x20],rcx
   1400113f6:	lea    rcx,[rbp-0x10]
   1400113fa:	mov    r8d,esi
   1400113fd:	mov    edx,r13d
   140011400:	or     ebx,eax
   140011402:	call   0x140010f1c
   140011407:	lea    r9d,[r13+0x33]
   14001140b:	lea    rcx,[rbp-0x10]
   14001140f:	or     ebx,eax
   140011411:	lea    rax,[rdi+0x20]
   140011415:	mov    r8d,esi
   140011418:	mov    edx,r13d
   14001141b:	mov    QWORD PTR [rsp+0x20],rax
   140011420:	call   0x140010f1c
   140011425:	lea    r9d,[r13+0x34]
   140011429:	lea    rcx,[rbp-0x10]
   14001142d:	or     ebx,eax
   14001142f:	lea    rax,[rdi+0x28]
   140011433:	mov    r8d,esi
   140011436:	mov    edx,r13d
   140011439:	mov    QWORD PTR [rsp+0x20],rax
   14001143e:	call   0x140010f1c
   140011443:	lea    r9d,[r13+0x35]
   140011447:	lea    rcx,[rbp-0x10]
   14001144b:	or     ebx,eax
   14001144d:	lea    rax,[rdi+0x30]
   140011451:	mov    r8d,esi
   140011454:	mov    edx,r13d
   140011457:	mov    QWORD PTR [rsp+0x20],rax
   14001145c:	call   0x140010f1c
   140011461:	lea    r9d,[r13+0x36]
   140011465:	lea    rcx,[rbp-0x10]
   140011469:	mov    r8d,esi
   14001146c:	mov    edx,r13d
   14001146f:	mov    QWORD PTR [rsp+0x20],rdi
   140011474:	or     ebx,eax
   140011476:	call   0x140010f1c
   14001147b:	lea    r9d,[r13+0x29]
   14001147f:	or     ebx,eax
   140011481:	lea    rax,[rdi+0x40]
   140011485:	lea    rcx,[rbp-0x10]
   140011489:	mov    r8d,esi
   14001148c:	mov    edx,r13d
   14001148f:	mov    QWORD PTR [rsp+0x20],rax
   140011494:	call   0x140010f1c
   140011499:	lea    r9d,[r13+0x2a]
   14001149d:	lea    rcx,[rbp-0x10]
   1400114a1:	or     ebx,eax
   1400114a3:	lea    rax,[rdi+0x48]
   1400114a7:	mov    r8d,esi
   1400114aa:	mov    edx,r13d
   1400114ad:	mov    QWORD PTR [rsp+0x20],rax
   1400114b2:	call   0x140010f1c
   1400114b7:	lea    r9d,[r13+0x2b]
   1400114bb:	lea    rcx,[rbp-0x10]
   1400114bf:	or     ebx,eax
   1400114c1:	lea    rax,[rdi+0x50]
   1400114c5:	mov    r8d,esi
   1400114c8:	mov    edx,r13d
   1400114cb:	mov    QWORD PTR [rsp+0x20],rax
   1400114d0:	call   0x140010f1c
   1400114d5:	or     ebx,eax
   1400114d7:	lea    rax,[rdi+0x58]
   1400114db:	lea    r9d,[r13+0x2c]
   1400114df:	lea    rcx,[rbp-0x10]
   1400114e3:	mov    r8d,esi
   1400114e6:	mov    edx,r13d
   1400114e9:	mov    QWORD PTR [rsp+0x20],rax
   1400114ee:	call   0x140010f1c
   1400114f3:	lea    r9d,[r13+0x2d]
   1400114f7:	or     ebx,eax
   1400114f9:	lea    rax,[rdi+0x60]
   1400114fd:	lea    rcx,[rbp-0x10]
   140011501:	mov    r8d,esi
   140011504:	mov    edx,r13d
   140011507:	mov    QWORD PTR [rsp+0x20],rax
   14001150c:	call   0x140010f1c
   140011511:	lea    r9d,[r13+0x2e]
   140011515:	lea    rcx,[rbp-0x10]
   140011519:	or     ebx,eax
   14001151b:	lea    rax,[rdi+0x68]
   14001151f:	mov    r8d,esi
   140011522:	mov    edx,r13d
   140011525:	mov    QWORD PTR [rsp+0x20],rax
   14001152a:	call   0x140010f1c
   14001152f:	lea    r9d,[r13+0x2f]
   140011533:	lea    rcx,[rbp-0x10]
   140011537:	or     ebx,eax
   140011539:	lea    rax,[rdi+0x38]
   14001153d:	mov    r8d,esi
   140011540:	mov    edx,r13d
   140011543:	mov    QWORD PTR [rsp+0x20],rax
   140011548:	call   0x140010f1c
   14001154d:	lea    r9d,[r13+0x43]
   140011551:	lea    rcx,[rbp-0x10]
   140011555:	or     ebx,eax
   140011557:	lea    rax,[rdi+0x70]
   14001155b:	mov    r8d,esi
   14001155e:	mov    edx,r13d
   140011561:	mov    QWORD PTR [rsp+0x20],rax
   140011566:	call   0x140010f1c
   14001156b:	lea    r9d,[r13+0x44]
   14001156f:	lea    rcx,[rbp-0x10]
   140011573:	or     ebx,eax
   140011575:	lea    rax,[rdi+0x78]
   140011579:	mov    r8d,esi
   14001157c:	mov    edx,r13d
   14001157f:	mov    QWORD PTR [rsp+0x20],rax
   140011584:	call   0x140010f1c
   140011589:	lea    r9d,[r13+0x45]
   14001158d:	lea    rcx,[rbp-0x10]
   140011591:	or     ebx,eax
   140011593:	lea    rax,[rdi+0x80]
   14001159a:	mov    r8d,esi
   14001159d:	mov    edx,r13d
   1400115a0:	mov    QWORD PTR [rsp+0x20],rax
   1400115a5:	call   0x140010f1c
   1400115aa:	lea    r9d,[r13+0x46]
   1400115ae:	lea    rcx,[rbp-0x10]
   1400115b2:	or     ebx,eax
   1400115b4:	lea    rax,[rdi+0x88]
   1400115bb:	mov    r8d,esi
   1400115be:	mov    edx,r13d
   1400115c1:	mov    QWORD PTR [rsp+0x20],rax
   1400115c6:	call   0x140010f1c
   1400115cb:	lea    r9d,[r13+0x47]
   1400115cf:	lea    rcx,[rbp-0x10]
   1400115d3:	or     ebx,eax
   1400115d5:	lea    rax,[rdi+0x90]
   1400115dc:	mov    r8d,esi
   1400115df:	mov    edx,r13d
   1400115e2:	mov    QWORD PTR [rsp+0x20],rax
   1400115e7:	call   0x140010f1c
   1400115ec:	lea    r9d,[r13+0x48]
   1400115f0:	lea    rcx,[rbp-0x10]
   1400115f4:	or     ebx,eax
   1400115f6:	lea    rax,[rdi+0x98]
   1400115fd:	mov    r8d,esi
   140011600:	mov    edx,r13d
   140011603:	mov    QWORD PTR [rsp+0x20],rax
   140011608:	call   0x140010f1c
   14001160d:	or     ebx,eax
   14001160f:	lea    rax,[rdi+0xa0]
   140011616:	lea    r9d,[r13+0x49]
   14001161a:	lea    rcx,[rbp-0x10]
   14001161e:	mov    r8d,esi
   140011621:	mov    edx,r13d
   140011624:	mov    QWORD PTR [rsp+0x20],rax
   140011629:	call   0x140010f1c
   14001162e:	lea    r9d,[r13+0x4a]
   140011632:	lea    rcx,[rbp-0x10]
   140011636:	or     ebx,eax
   140011638:	lea    rax,[rdi+0xa8]
   14001163f:	mov    r8d,esi
   140011642:	mov    edx,r13d
   140011645:	mov    QWORD PTR [rsp+0x20],rax
   14001164a:	call   0x140010f1c
   14001164f:	lea    r9d,[r13+0x4b]
   140011653:	lea    rcx,[rbp-0x10]
   140011657:	or     ebx,eax
   140011659:	lea    rax,[rdi+0xb0]
   140011660:	mov    r8d,esi
   140011663:	mov    edx,r13d
   140011666:	mov    QWORD PTR [rsp+0x20],rax
   14001166b:	call   0x140010f1c
   140011670:	lea    r9d,[r13+0x4c]
   140011674:	lea    rcx,[rbp-0x10]
   140011678:	or     ebx,eax
   14001167a:	lea    rax,[rdi+0xb8]
   140011681:	mov    r8d,esi
   140011684:	mov    edx,r13d
   140011687:	mov    QWORD PTR [rsp+0x20],rax
   14001168c:	call   0x140010f1c
   140011691:	lea    r9d,[r13+0x4d]
   140011695:	lea    rcx,[rbp-0x10]
   140011699:	or     ebx,eax
   14001169b:	lea    rax,[rdi+0xc0]
   1400116a2:	mov    r8d,esi
   1400116a5:	mov    edx,r13d
   1400116a8:	mov    QWORD PTR [rsp+0x20],rax
   1400116ad:	call   0x140010f1c
   1400116b2:	lea    r9d,[r13+0x4e]
   1400116b6:	lea    rcx,[rbp-0x10]
   1400116ba:	or     ebx,eax
   1400116bc:	lea    rax,[rdi+0xc8]
   1400116c3:	mov    r8d,esi
   1400116c6:	mov    edx,r13d
   1400116c9:	mov    QWORD PTR [rsp+0x20],rax
   1400116ce:	call   0x140010f1c
   1400116d3:	lea    r9d,[r13+0x37]
   1400116d7:	lea    rcx,[rbp-0x10]
   1400116db:	or     ebx,eax
   1400116dd:	lea    rax,[rdi+0xd0]
   1400116e4:	mov    r8d,esi
   1400116e7:	mov    edx,r13d
   1400116ea:	mov    QWORD PTR [rsp+0x20],rax
   1400116ef:	call   0x140010f1c
   1400116f4:	lea    r9d,[r13+0x38]
   1400116f8:	lea    rcx,[rbp-0x10]
   1400116fc:	or     ebx,eax
   1400116fe:	lea    rax,[rdi+0xd8]
   140011705:	mov    r8d,esi
   140011708:	mov    edx,r13d
   14001170b:	mov    QWORD PTR [rsp+0x20],rax
   140011710:	call   0x140010f1c
   140011715:	lea    r9d,[r13+0x39]
   140011719:	lea    rcx,[rbp-0x10]
   14001171d:	or     ebx,eax
   14001171f:	lea    rax,[rdi+0xe0]
   140011726:	mov    r8d,esi
   140011729:	mov    edx,r13d
   14001172c:	mov    QWORD PTR [rsp+0x20],rax
   140011731:	call   0x140010f1c
   140011736:	lea    r9d,[r13+0x3a]
   14001173a:	lea    rcx,[rbp-0x10]
   14001173e:	or     ebx,eax
   140011740:	lea    rax,[rdi+0xe8]
   140011747:	mov    r8d,esi
   14001174a:	mov    edx,r13d
   14001174d:	mov    QWORD PTR [rsp+0x20],rax
   140011752:	call   0x140010f1c
   140011757:	or     ebx,eax
   140011759:	lea    rax,[rdi+0xf0]
   140011760:	lea    r9d,[r13+0x3b]
   140011764:	lea    rcx,[rbp-0x10]
   140011768:	mov    r8d,esi
   14001176b:	mov    edx,r13d
   14001176e:	mov    QWORD PTR [rsp+0x20],rax
   140011773:	call   0x140010f1c
   140011778:	lea    r9d,[r13+0x3c]
   14001177c:	lea    rcx,[rbp-0x10]
   140011780:	or     ebx,eax
   140011782:	lea    rax,[rdi+0xf8]
   140011789:	mov    r8d,esi
   14001178c:	mov    edx,r13d
   14001178f:	mov    QWORD PTR [rsp+0x20],rax
   140011794:	call   0x140010f1c
   140011799:	lea    r9d,[r13+0x3d]
   14001179d:	lea    rcx,[rbp-0x10]
   1400117a1:	or     ebx,eax
   1400117a3:	lea    rax,[rdi+0x100]
   1400117aa:	mov    r8d,esi
   1400117ad:	mov    edx,r13d
   1400117b0:	mov    QWORD PTR [rsp+0x20],rax
   1400117b5:	call   0x140010f1c
   1400117ba:	lea    r9d,[r13+0x3e]
   1400117be:	lea    rcx,[rbp-0x10]
   1400117c2:	or     ebx,eax
   1400117c4:	lea    rax,[rdi+0x108]
   1400117cb:	mov    r8d,esi
   1400117ce:	mov    edx,r13d
   1400117d1:	mov    QWORD PTR [rsp+0x20],rax
   1400117d6:	call   0x140010f1c
   1400117db:	lea    r9d,[r13+0x3f]
   1400117df:	lea    rcx,[rbp-0x10]
   1400117e3:	or     ebx,eax
   1400117e5:	lea    rax,[rdi+0x110]
   1400117ec:	mov    r8d,esi
   1400117ef:	mov    edx,r13d
   1400117f2:	mov    QWORD PTR [rsp+0x20],rax
   1400117f7:	call   0x140010f1c
   1400117fc:	lea    r9d,[r13+0x40]
   140011800:	lea    rcx,[rbp-0x10]
   140011804:	or     ebx,eax
   140011806:	lea    rax,[rdi+0x118]
   14001180d:	mov    r8d,esi
   140011810:	mov    edx,r13d
   140011813:	mov    QWORD PTR [rsp+0x20],rax
   140011818:	call   0x140010f1c
   14001181d:	lea    r9d,[r13+0x41]
   140011821:	lea    rcx,[rbp-0x10]
   140011825:	or     ebx,eax
   140011827:	lea    rax,[rdi+0x120]
   14001182e:	mov    r8d,esi
   140011831:	mov    edx,r13d
   140011834:	mov    QWORD PTR [rsp+0x20],rax
   140011839:	call   0x140010f1c
   14001183e:	lea    r9d,[r13+0x42]
   140011842:	lea    rcx,[rbp-0x10]
   140011846:	or     ebx,eax
   140011848:	lea    rax,[rdi+0x128]
   14001184f:	mov    r8d,esi
   140011852:	mov    edx,r13d
   140011855:	mov    QWORD PTR [rsp+0x20],rax
   14001185a:	call   0x140010f1c
   14001185f:	lea    r9d,[r13+0x27]
   140011863:	lea    rcx,[rbp-0x10]
   140011867:	or     ebx,eax
   140011869:	lea    rax,[rdi+0x130]
   140011870:	mov    r8d,esi
   140011873:	mov    edx,r13d
   140011876:	mov    QWORD PTR [rsp+0x20],rax
   14001187b:	call   0x140010f1c
   140011880:	lea    r9d,[r13+0x28]
   140011884:	lea    rcx,[rbp-0x10]
   140011888:	or     ebx,eax
   14001188a:	lea    rax,[rdi+0x138]
   140011891:	mov    r8d,esi
   140011894:	mov    edx,r13d
   140011897:	mov    QWORD PTR [rsp+0x20],rax
   14001189c:	call   0x140010f1c
   1400118a1:	or     ebx,eax
   1400118a3:	lea    rax,[rdi+0x140]
   1400118aa:	mov    QWORD PTR [rsp+0x20],rax
   1400118af:	lea    r9d,[r13+0x1e]
   1400118b3:	lea    rcx,[rbp-0x10]
   1400118b7:	mov    r8d,r12d
   1400118ba:	mov    edx,r13d
   1400118bd:	call   0x140010f1c
   1400118c2:	lea    r9d,[r13+0x1f]
   1400118c6:	lea    rcx,[rbp-0x10]
   1400118ca:	or     ebx,eax
   1400118cc:	lea    rax,[rdi+0x148]
   1400118d3:	mov    r8d,r12d
   1400118d6:	mov    edx,r13d
   1400118d9:	mov    QWORD PTR [rsp+0x20],rax
   1400118de:	call   0x140010f1c
   1400118e3:	lea    rcx,[rbp-0x10]
   1400118e7:	mov    r9d,0x1003
   1400118ed:	or     ebx,eax
   1400118ef:	lea    rax,[rdi+0x150]
   1400118f6:	mov    r8d,r12d
   1400118f9:	mov    edx,r13d
   1400118fc:	mov    QWORD PTR [rsp+0x20],rax
   140011901:	call   0x140010f1c
   140011906:	lea    rcx,[rbp-0x10]
   14001190a:	mov    r9d,0x1009
   140011910:	or     ebx,eax
   140011912:	lea    rax,[rdi+0x15c]
   140011919:	mov    r8d,r12d
   14001191c:	xor    edx,edx
   14001191e:	mov    QWORD PTR [rsp+0x20],rax
   140011923:	call   0x140010f1c
   140011928:	lea    r9d,[r13+0x30]
   14001192c:	lea    rcx,[rbp-0x10]
   140011930:	lea    r13d,[r9-0x2f]
   140011934:	or     ebx,eax
   140011936:	lea    rax,[rdi+0x170]
   14001193d:	mov    r8d,esi
   140011940:	mov    edx,r13d
   140011943:	mov    DWORD PTR [rdi+0x158],r12d
   14001194a:	mov    QWORD PTR [rsp+0x20],rax
   14001194f:	call   0x140010f1c
   140011954:	lea    r9d,[r13+0x30]
   140011958:	or     ebx,eax
   14001195a:	lea    rax,[rdi+0x178]
   140011961:	lea    rcx,[rbp-0x10]
   140011965:	mov    r8d,esi
   140011968:	mov    edx,r13d
   14001196b:	mov    QWORD PTR [rsp+0x20],rax
   140011970:	call   0x140010f1c
   140011975:	lea    r9d,[r13+0x31]
   140011979:	lea    rcx,[rbp-0x10]
   14001197d:	or     ebx,eax
   14001197f:	lea    rax,[rdi+0x180]
   140011986:	mov    r8d,esi
   140011989:	mov    edx,r13d
   14001198c:	mov    QWORD PTR [rsp+0x20],rax
   140011991:	call   0x140010f1c
   140011996:	lea    r9d,[r13+0x32]
   14001199a:	lea    rcx,[rbp-0x10]
   14001199e:	or     ebx,eax
   1400119a0:	lea    rax,[rdi+0x188]
   1400119a7:	mov    r8d,esi
   1400119aa:	mov    edx,r13d
   1400119ad:	mov    QWORD PTR [rsp+0x20],rax
   1400119b2:	call   0x140010f1c
   1400119b7:	lea    r9d,[r13+0x33]
   1400119bb:	lea    rcx,[rbp-0x10]
   1400119bf:	or     ebx,eax
   1400119c1:	lea    rax,[rdi+0x190]
   1400119c8:	mov    r8d,esi
   1400119cb:	mov    edx,r13d
   1400119ce:	mov    QWORD PTR [rsp+0x20],rax
   1400119d3:	call   0x140010f1c
   1400119d8:	lea    r9d,[r13+0x34]
   1400119dc:	lea    rcx,[rbp-0x10]
   1400119e0:	or     ebx,eax
   1400119e2:	lea    rax,[rdi+0x198]
   1400119e9:	mov    r8d,esi
   1400119ec:	mov    edx,r13d
   1400119ef:	mov    QWORD PTR [rsp+0x20],rax
   1400119f4:	call   0x140010f1c
   1400119f9:	or     ebx,eax
   1400119fb:	lea    rax,[rdi+0x168]
   140011a02:	lea    r9d,[r13+0x35]
   140011a06:	lea    rcx,[rbp-0x10]
   140011a0a:	mov    r8d,esi
   140011a0d:	mov    edx,r13d
   140011a10:	mov    QWORD PTR [rsp+0x20],rax
   140011a15:	call   0x140010f1c
   140011a1a:	lea    r9d,[r13+0x28]
   140011a1e:	lea    rcx,[rbp-0x10]
   140011a22:	or     ebx,eax
   140011a24:	lea    rax,[rdi+0x1a8]
   140011a2b:	mov    r8d,esi
   140011a2e:	mov    edx,r13d
   140011a31:	mov    QWORD PTR [rsp+0x20],rax
   140011a36:	call   0x140010f1c
   140011a3b:	lea    r9d,[r13+0x29]
   140011a3f:	lea    rcx,[rbp-0x10]
   140011a43:	or     ebx,eax
   140011a45:	lea    rax,[rdi+0x1b0]
   140011a4c:	mov    r8d,esi
   140011a4f:	mov    edx,r13d
   140011a52:	mov    QWORD PTR [rsp+0x20],rax
   140011a57:	call   0x140010f1c
   140011a5c:	lea    r9d,[r13+0x2a]
   140011a60:	lea    rcx,[rbp-0x10]
   140011a64:	or     ebx,eax
   140011a66:	lea    rax,[rdi+0x1b8]
   140011a6d:	mov    r8d,esi
   140011a70:	mov    edx,r13d
   140011a73:	mov    QWORD PTR [rsp+0x20],rax
   140011a78:	call   0x140010f1c
   140011a7d:	lea    r9d,[r13+0x2b]
   140011a81:	lea    rcx,[rbp-0x10]
   140011a85:	or     ebx,eax
   140011a87:	lea    rax,[rdi+0x1c0]
   140011a8e:	mov    r8d,esi
   140011a91:	mov    edx,r13d
   140011a94:	mov    QWORD PTR [rsp+0x20],rax
   140011a99:	call   0x140010f1c
   140011a9e:	lea    r9d,[r13+0x2c]
   140011aa2:	lea    rcx,[rbp-0x10]
   140011aa6:	or     ebx,eax
   140011aa8:	lea    rax,[rdi+0x1c8]
   140011aaf:	mov    r8d,esi
   140011ab2:	mov    edx,r13d
   140011ab5:	mov    QWORD PTR [rsp+0x20],rax
   140011aba:	call   0x140010f1c
   140011abf:	lea    r9d,[r13+0x2d]
   140011ac3:	lea    rcx,[rbp-0x10]
   140011ac7:	or     ebx,eax
   140011ac9:	lea    rax,[rdi+0x1d0]
   140011ad0:	mov    r8d,esi
   140011ad3:	mov    edx,r13d
   140011ad6:	mov    QWORD PTR [rsp+0x20],rax
   140011adb:	call   0x140010f1c
   140011ae0:	lea    r9d,[r13+0x2e]
   140011ae4:	lea    rcx,[rbp-0x10]
   140011ae8:	or     ebx,eax
   140011aea:	lea    rax,[rdi+0x1a0]
   140011af1:	mov    r8d,esi
   140011af4:	mov    edx,r13d
   140011af7:	mov    QWORD PTR [rsp+0x20],rax
   140011afc:	call   0x140010f1c
   140011b01:	lea    r9d,[r13+0x42]
   140011b05:	lea    rcx,[rbp-0x10]
   140011b09:	or     ebx,eax
   140011b0b:	lea    rax,[rdi+0x1d8]
   140011b12:	mov    r8d,esi
   140011b15:	mov    edx,r13d
   140011b18:	mov    QWORD PTR [rsp+0x20],rax
   140011b1d:	call   0x140010f1c
   140011b22:	lea    r9d,[r13+0x43]
   140011b26:	lea    rcx,[rbp-0x10]
   140011b2a:	or     ebx,eax
   140011b2c:	lea    rax,[rdi+0x1e0]
   140011b33:	mov    r8d,esi
   140011b36:	mov    edx,r13d
   140011b39:	mov    QWORD PTR [rsp+0x20],rax
   140011b3e:	call   0x140010f1c
   140011b43:	or     ebx,eax
   140011b45:	lea    rax,[rdi+0x1e8]
   140011b4c:	mov    QWORD PTR [rsp+0x20],rax
   140011b51:	lea    r9d,[r13+0x44]
   140011b55:	lea    rcx,[rbp-0x10]
   140011b59:	mov    r8d,esi
   140011b5c:	mov    edx,r13d
   140011b5f:	call   0x140010f1c
   140011b64:	lea    r9d,[r13+0x45]
   140011b68:	lea    rcx,[rbp-0x10]
   140011b6c:	or     ebx,eax
   140011b6e:	lea    rax,[rdi+0x1f0]
   140011b75:	mov    r8d,esi
   140011b78:	mov    edx,r13d
   140011b7b:	mov    QWORD PTR [rsp+0x20],rax
   140011b80:	call   0x140010f1c
   140011b85:	lea    r9d,[r13+0x46]
   140011b89:	lea    rcx,[rbp-0x10]
   140011b8d:	or     ebx,eax
   140011b8f:	lea    rax,[rdi+0x1f8]
   140011b96:	mov    r8d,esi
   140011b99:	mov    edx,r13d
   140011b9c:	mov    QWORD PTR [rsp+0x20],rax
   140011ba1:	call   0x140010f1c
   140011ba6:	lea    r9d,[r13+0x47]
   140011baa:	lea    rcx,[rbp-0x10]
   140011bae:	or     ebx,eax
   140011bb0:	lea    rax,[rdi+0x200]
   140011bb7:	mov    r8d,esi
   140011bba:	mov    edx,r13d
   140011bbd:	mov    QWORD PTR [rsp+0x20],rax
   140011bc2:	call   0x140010f1c
   140011bc7:	lea    r9d,[r13+0x48]
   140011bcb:	lea    rcx,[rbp-0x10]
   140011bcf:	or     ebx,eax
   140011bd1:	lea    rax,[rdi+0x208]
   140011bd8:	mov    r8d,esi
   140011bdb:	mov    edx,r13d
   140011bde:	mov    QWORD PTR [rsp+0x20],rax
   140011be3:	call   0x140010f1c
   140011be8:	lea    r9d,[r13+0x49]
   140011bec:	lea    rcx,[rbp-0x10]
   140011bf0:	or     ebx,eax
   140011bf2:	lea    rax,[rdi+0x210]
   140011bf9:	mov    r8d,esi
   140011bfc:	mov    edx,r13d
   140011bff:	mov    QWORD PTR [rsp+0x20],rax
   140011c04:	call   0x140010f1c
   140011c09:	lea    r9d,[r13+0x4a]
   140011c0d:	lea    rcx,[rbp-0x10]
   140011c11:	or     ebx,eax
   140011c13:	lea    rax,[rdi+0x218]
   140011c1a:	mov    r8d,esi
   140011c1d:	mov    edx,r13d
   140011c20:	mov    QWORD PTR [rsp+0x20],rax
   140011c25:	call   0x140010f1c
   140011c2a:	lea    r9d,[r13+0x4b]
   140011c2e:	lea    rcx,[rbp-0x10]
   140011c32:	or     ebx,eax
   140011c34:	lea    rax,[rdi+0x220]
   140011c3b:	mov    r8d,esi
   140011c3e:	mov    edx,r13d
   140011c41:	mov    QWORD PTR [rsp+0x20],rax
   140011c46:	call   0x140010f1c
   140011c4b:	lea    r9d,[r13+0x4c]
   140011c4f:	lea    rcx,[rbp-0x10]
   140011c53:	or     ebx,eax
   140011c55:	lea    rax,[rdi+0x228]
   140011c5c:	mov    r8d,esi
   140011c5f:	mov    edx,r13d
   140011c62:	mov    QWORD PTR [rsp+0x20],rax
   140011c67:	call   0x140010f1c
   140011c6c:	lea    r9d,[r13+0x4d]
   140011c70:	lea    rcx,[rbp-0x10]
   140011c74:	or     ebx,eax
   140011c76:	lea    rax,[rdi+0x230]
   140011c7d:	mov    r8d,esi
   140011c80:	mov    edx,r13d
   140011c83:	mov    QWORD PTR [rsp+0x20],rax
   140011c88:	call   0x140010f1c
   140011c8d:	lea    r9d,[r13+0x36]
   140011c91:	or     ebx,eax
   140011c93:	lea    rax,[rdi+0x238]
   140011c9a:	mov    QWORD PTR [rsp+0x20],rax
   140011c9f:	lea    rcx,[rbp-0x10]
   140011ca3:	mov    r8d,esi
   140011ca6:	mov    edx,r13d
   140011ca9:	call   0x140010f1c
   140011cae:	lea    r9d,[r13+0x37]
   140011cb2:	lea    rcx,[rbp-0x10]
   140011cb6:	or     ebx,eax
   140011cb8:	lea    rax,[rdi+0x240]
   140011cbf:	mov    r8d,esi
   140011cc2:	mov    edx,r13d
   140011cc5:	mov    QWORD PTR [rsp+0x20],rax
   140011cca:	call   0x140010f1c
   140011ccf:	lea    r9d,[r13+0x38]
   140011cd3:	lea    rcx,[rbp-0x10]
   140011cd7:	or     ebx,eax
   140011cd9:	lea    rax,[rdi+0x248]
   140011ce0:	mov    r8d,esi
   140011ce3:	mov    edx,r13d
   140011ce6:	mov    QWORD PTR [rsp+0x20],rax
   140011ceb:	call   0x140010f1c
   140011cf0:	lea    r9d,[r13+0x39]
   140011cf4:	lea    rcx,[rbp-0x10]
   140011cf8:	or     ebx,eax
   140011cfa:	lea    rax,[rdi+0x250]
   140011d01:	mov    r8d,esi
   140011d04:	mov    edx,r13d
   140011d07:	mov    QWORD PTR [rsp+0x20],rax
   140011d0c:	call   0x140010f1c
   140011d11:	lea    r9d,[r13+0x3a]
   140011d15:	lea    rcx,[rbp-0x10]
   140011d19:	or     ebx,eax
   140011d1b:	lea    rax,[rdi+0x258]
   140011d22:	mov    r8d,esi
   140011d25:	mov    edx,r13d
   140011d28:	mov    QWORD PTR [rsp+0x20],rax
   140011d2d:	call   0x140010f1c
   140011d32:	lea    r9d,[r13+0x3b]
   140011d36:	lea    rcx,[rbp-0x10]
   140011d3a:	or     ebx,eax
   140011d3c:	lea    rax,[rdi+0x260]
   140011d43:	mov    r8d,esi
   140011d46:	mov    edx,r13d
   140011d49:	mov    QWORD PTR [rsp+0x20],rax
   140011d4e:	call   0x140010f1c
   140011d53:	lea    r9d,[r13+0x3c]
   140011d57:	lea    rcx,[rbp-0x10]
   140011d5b:	or     ebx,eax
   140011d5d:	lea    rax,[rdi+0x268]
   140011d64:	mov    r8d,esi
   140011d67:	mov    edx,r13d
   140011d6a:	mov    QWORD PTR [rsp+0x20],rax
   140011d6f:	call   0x140010f1c
   140011d74:	lea    r9d,[r13+0x3d]
   140011d78:	lea    rcx,[rbp-0x10]
   140011d7c:	or     ebx,eax
   140011d7e:	lea    rax,[rdi+0x270]
   140011d85:	mov    r8d,esi
   140011d88:	mov    edx,r13d
   140011d8b:	mov    QWORD PTR [rsp+0x20],rax
   140011d90:	call   0x140010f1c
   140011d95:	lea    r9d,[r13+0x3e]
   140011d99:	lea    rcx,[rbp-0x10]
   140011d9d:	or     ebx,eax
   140011d9f:	lea    rax,[rdi+0x278]
   140011da6:	mov    r8d,esi
   140011da9:	mov    edx,r13d
   140011dac:	mov    QWORD PTR [rsp+0x20],rax
   140011db1:	call   0x140010f1c
   140011db6:	lea    r9d,[r13+0x3f]
   140011dba:	lea    rcx,[rbp-0x10]
   140011dbe:	or     ebx,eax
   140011dc0:	lea    rax,[rdi+0x280]
   140011dc7:	mov    r8d,esi
   140011dca:	mov    edx,r13d
   140011dcd:	mov    QWORD PTR [rsp+0x20],rax
   140011dd2:	call   0x140010f1c
   140011dd7:	lea    r9d,[r13+0x40]
   140011ddb:	mov    r8d,esi
   140011dde:	or     ebx,eax
   140011de0:	lea    rax,[rdi+0x288]
   140011de7:	mov    QWORD PTR [rsp+0x20],rax
   140011dec:	lea    rcx,[rbp-0x10]
   140011df0:	mov    edx,r13d
   140011df3:	call   0x140010f1c
   140011df8:	lea    r9d,[r13+0x41]
   140011dfc:	lea    rcx,[rbp-0x10]
   140011e00:	or     ebx,eax
   140011e02:	lea    rax,[rdi+0x290]
   140011e09:	mov    r8d,esi
   140011e0c:	mov    edx,r13d
   140011e0f:	mov    QWORD PTR [rsp+0x20],rax
   140011e14:	call   0x140010f1c
   140011e19:	lea    r9d,[r13+0x26]
   140011e1d:	lea    rcx,[rbp-0x10]
   140011e21:	or     ebx,eax
   140011e23:	lea    rax,[rdi+0x298]
   140011e2a:	mov    r8d,esi
   140011e2d:	mov    edx,r13d
   140011e30:	mov    QWORD PTR [rsp+0x20],rax
   140011e35:	call   0x140010f1c
   140011e3a:	lea    r9d,[r13+0x27]
   140011e3e:	lea    rcx,[rbp-0x10]
   140011e42:	or     ebx,eax
   140011e44:	lea    rax,[rdi+0x2a0]
   140011e4b:	mov    r8d,esi
   140011e4e:	mov    edx,r13d
   140011e51:	mov    QWORD PTR [rsp+0x20],rax
   140011e56:	call   0x140010f1c
   140011e5b:	lea    r9d,[r13+0x1d]
   140011e5f:	lea    rcx,[rbp-0x10]
   140011e63:	or     ebx,eax
   140011e65:	lea    rax,[rdi+0x2a8]
   140011e6c:	mov    r8d,r12d
   140011e6f:	mov    edx,r13d
   140011e72:	mov    QWORD PTR [rsp+0x20],rax
   140011e77:	call   0x140010f1c
   140011e7c:	lea    r9d,[r13+0x1e]
   140011e80:	lea    rcx,[rbp-0x10]
   140011e84:	or     ebx,eax
   140011e86:	lea    rax,[rdi+0x2b0]
   140011e8d:	mov    r8d,r12d
   140011e90:	mov    edx,r13d
   140011e93:	mov    QWORD PTR [rsp+0x20],rax
   140011e98:	call   0x140010f1c
   140011e9d:	lea    rcx,[rbp-0x10]
   140011ea1:	mov    r9d,0x1003
   140011ea7:	or     ebx,eax
   140011ea9:	lea    rax,[rdi+0x2b8]
   140011eb0:	mov    r8d,r12d
   140011eb3:	mov    edx,r13d
   140011eb6:	mov    QWORD PTR [rsp+0x20],rax
   140011ebb:	call   0x140010f1c
   140011ec0:	or     eax,ebx
   140011ec2:	mov    rbx,QWORD PTR [rsp+0x60]
   140011ec7:	mov    rsi,QWORD PTR [rsp+0x68]
   140011ecc:	mov    rdi,QWORD PTR [rsp+0x70]
   140011ed1:	add    rsp,0x40
   140011ed5:	pop    r13
   140011ed7:	pop    r12
   140011ed9:	pop    rbp
   140011eda:	ret    
   140011edb:	int3   
   140011edc:	test   rcx,rcx
   140011edf:	je     0x1400122c9
   140011ee5:	push   rbx
   140011ee6:	sub    rsp,0x20
   140011eea:	mov    rbx,rcx
   140011eed:	mov    rcx,QWORD PTR [rcx+0x8]
   140011ef1:	call   0x140008584
   140011ef6:	mov    rcx,QWORD PTR [rbx+0x10]
   140011efa:	call   0x140008584
   140011eff:	mov    rcx,QWORD PTR [rbx+0x18]
   140011f03:	call   0x140008584
   140011f08:	mov    rcx,QWORD PTR [rbx+0x20]
   140011f0c:	call   0x140008584
   140011f11:	mov    rcx,QWORD PTR [rbx+0x28]
   140011f15:	call   0x140008584
   140011f1a:	mov    rcx,QWORD PTR [rbx+0x30]
   140011f1e:	call   0x140008584
   140011f23:	mov    rcx,QWORD PTR [rbx]
   140011f26:	call   0x140008584
   140011f2b:	mov    rcx,QWORD PTR [rbx+0x40]
   140011f2f:	call   0x140008584
   140011f34:	mov    rcx,QWORD PTR [rbx+0x48]
   140011f38:	call   0x140008584
   140011f3d:	mov    rcx,QWORD PTR [rbx+0x50]
   140011f41:	call   0x140008584
   140011f46:	mov    rcx,QWORD PTR [rbx+0x58]
   140011f4a:	call   0x140008584
   140011f4f:	mov    rcx,QWORD PTR [rbx+0x60]
   140011f53:	call   0x140008584
   140011f58:	mov    rcx,QWORD PTR [rbx+0x68]
   140011f5c:	call   0x140008584
   140011f61:	mov    rcx,QWORD PTR [rbx+0x38]
   140011f65:	call   0x140008584
   140011f6a:	mov    rcx,QWORD PTR [rbx+0x70]
   140011f6e:	call   0x140008584
   140011f73:	mov    rcx,QWORD PTR [rbx+0x78]
   140011f77:	call   0x140008584
   140011f7c:	mov    rcx,QWORD PTR [rbx+0x80]
   140011f83:	call   0x140008584
   140011f88:	mov    rcx,QWORD PTR [rbx+0x88]
   140011f8f:	call   0x140008584
   140011f94:	mov    rcx,QWORD PTR [rbx+0x90]
   140011f9b:	call   0x140008584
   140011fa0:	mov    rcx,QWORD PTR [rbx+0x98]
   140011fa7:	call   0x140008584
   140011fac:	mov    rcx,QWORD PTR [rbx+0xa0]
   140011fb3:	call   0x140008584
   140011fb8:	mov    rcx,QWORD PTR [rbx+0xa8]
   140011fbf:	call   0x140008584
   140011fc4:	mov    rcx,QWORD PTR [rbx+0xb0]
   140011fcb:	call   0x140008584
   140011fd0:	mov    rcx,QWORD PTR [rbx+0xb8]
   140011fd7:	call   0x140008584
   140011fdc:	mov    rcx,QWORD PTR [rbx+0xc0]
   140011fe3:	call   0x140008584
   140011fe8:	mov    rcx,QWORD PTR [rbx+0xc8]
   140011fef:	call   0x140008584
   140011ff4:	mov    rcx,QWORD PTR [rbx+0xd0]
   140011ffb:	call   0x140008584
   140012000:	mov    rcx,QWORD PTR [rbx+0xd8]
   140012007:	call   0x140008584
   14001200c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140012013:	call   0x140008584
   140012018:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001201f:	call   0x140008584
   140012024:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001202b:	call   0x140008584
   140012030:	mov    rcx,QWORD PTR [rbx+0xf8]
   140012037:	call   0x140008584
   14001203c:	mov    rcx,QWORD PTR [rbx+0x100]
   140012043:	call   0x140008584
   140012048:	mov    rcx,QWORD PTR [rbx+0x108]
   14001204f:	call   0x140008584
   140012054:	mov    rcx,QWORD PTR [rbx+0x110]
   14001205b:	call   0x140008584
   140012060:	mov    rcx,QWORD PTR [rbx+0x118]
   140012067:	call   0x140008584
   14001206c:	mov    rcx,QWORD PTR [rbx+0x120]
   140012073:	call   0x140008584
   140012078:	mov    rcx,QWORD PTR [rbx+0x128]
   14001207f:	call   0x140008584
   140012084:	mov    rcx,QWORD PTR [rbx+0x130]
   14001208b:	call   0x140008584
   140012090:	mov    rcx,QWORD PTR [rbx+0x138]
   140012097:	call   0x140008584
   14001209c:	mov    rcx,QWORD PTR [rbx+0x140]
   1400120a3:	call   0x140008584
   1400120a8:	mov    rcx,QWORD PTR [rbx+0x148]
   1400120af:	call   0x140008584
   1400120b4:	mov    rcx,QWORD PTR [rbx+0x150]
   1400120bb:	call   0x140008584
   1400120c0:	mov    rcx,QWORD PTR [rbx+0x170]
   1400120c7:	call   0x140008584
   1400120cc:	mov    rcx,QWORD PTR [rbx+0x178]
   1400120d3:	call   0x140008584
   1400120d8:	mov    rcx,QWORD PTR [rbx+0x180]
   1400120df:	call   0x140008584
   1400120e4:	mov    rcx,QWORD PTR [rbx+0x188]
   1400120eb:	call   0x140008584
   1400120f0:	mov    rcx,QWORD PTR [rbx+0x190]
   1400120f7:	call   0x140008584
   1400120fc:	mov    rcx,QWORD PTR [rbx+0x198]
   140012103:	call   0x140008584
   140012108:	mov    rcx,QWORD PTR [rbx+0x168]
   14001210f:	call   0x140008584
   140012114:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001211b:	call   0x140008584
   140012120:	mov    rcx,QWORD PTR [rbx+0x1b0]
   140012127:	call   0x140008584
   14001212c:	mov    rcx,QWORD PTR [rbx+0x1b8]
   140012133:	call   0x140008584
   140012138:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001213f:	call   0x140008584
   140012144:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001214b:	call   0x140008584
   140012150:	mov    rcx,QWORD PTR [rbx+0x1d0]
   140012157:	call   0x140008584
   14001215c:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140012163:	call   0x140008584
   140012168:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001216f:	call   0x140008584
   140012174:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001217b:	call   0x140008584
   140012180:	mov    rcx,QWORD PTR [rbx+0x1e8]
   140012187:	call   0x140008584
   14001218c:	mov    rcx,QWORD PTR [rbx+0x1f0]
   140012193:	call   0x140008584
   140012198:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001219f:	call   0x140008584
   1400121a4:	mov    rcx,QWORD PTR [rbx+0x200]
   1400121ab:	call   0x140008584
   1400121b0:	mov    rcx,QWORD PTR [rbx+0x208]
   1400121b7:	call   0x140008584
   1400121bc:	mov    rcx,QWORD PTR [rbx+0x210]
   1400121c3:	call   0x140008584
   1400121c8:	mov    rcx,QWORD PTR [rbx+0x218]
   1400121cf:	call   0x140008584
   1400121d4:	mov    rcx,QWORD PTR [rbx+0x220]
   1400121db:	call   0x140008584
   1400121e0:	mov    rcx,QWORD PTR [rbx+0x228]
   1400121e7:	call   0x140008584
   1400121ec:	mov    rcx,QWORD PTR [rbx+0x230]
   1400121f3:	call   0x140008584
   1400121f8:	mov    rcx,QWORD PTR [rbx+0x238]
   1400121ff:	call   0x140008584
   140012204:	mov    rcx,QWORD PTR [rbx+0x240]
   14001220b:	call   0x140008584
   140012210:	mov    rcx,QWORD PTR [rbx+0x248]
   140012217:	call   0x140008584
   14001221c:	mov    rcx,QWORD PTR [rbx+0x250]
   140012223:	call   0x140008584
   140012228:	mov    rcx,QWORD PTR [rbx+0x258]
   14001222f:	call   0x140008584
   140012234:	mov    rcx,QWORD PTR [rbx+0x260]
   14001223b:	call   0x140008584
   140012240:	mov    rcx,QWORD PTR [rbx+0x268]
   140012247:	call   0x140008584
   14001224c:	mov    rcx,QWORD PTR [rbx+0x270]
   140012253:	call   0x140008584
   140012258:	mov    rcx,QWORD PTR [rbx+0x278]
   14001225f:	call   0x140008584
   140012264:	mov    rcx,QWORD PTR [rbx+0x280]
   14001226b:	call   0x140008584
   140012270:	mov    rcx,QWORD PTR [rbx+0x288]
   140012277:	call   0x140008584
   14001227c:	mov    rcx,QWORD PTR [rbx+0x290]
   140012283:	call   0x140008584
   140012288:	mov    rcx,QWORD PTR [rbx+0x298]
   14001228f:	call   0x140008584
   140012294:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001229b:	call   0x140008584
   1400122a0:	mov    rcx,QWORD PTR [rbx+0x2a8]
   1400122a7:	call   0x140008584
   1400122ac:	mov    rcx,QWORD PTR [rbx+0x2b0]
   1400122b3:	call   0x140008584
   1400122b8:	mov    rcx,QWORD PTR [rbx+0x2b8]
   1400122bf:	call   0x140008584
   1400122c4:	add    rsp,0x20
   1400122c8:	pop    rbx
   1400122c9:	ret    
   1400122ca:	int3   
   1400122cb:	int3   
   1400122cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400122d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400122d6:	push   rdi
   1400122d7:	sub    rsp,0x20
   1400122db:	cmp    DWORD PTR [rcx+0x20],0x0
   1400122df:	mov    rdi,rcx
   1400122e2:	lea    rbp,[rip+0xf697]        # 0x140021980
   1400122e9:	je     0x140012336
   1400122eb:	mov    edx,0x2c0
   1400122f0:	mov    ecx,0x1
   1400122f5:	call   0x14000c3a0
   1400122fa:	mov    rbx,rax
   1400122fd:	test   rax,rax
   140012300:	jne    0x140012309
   140012302:	mov    eax,0x1
   140012307:	jmp    0x140012355
   140012309:	mov    rdx,rdi
   14001230c:	mov    rcx,rax
   14001230f:	call   0x14001136c
   140012314:	test   eax,eax
   140012316:	je     0x14001232a
   140012318:	mov    rcx,rbx
   14001231b:	call   0x140011edc
   140012320:	mov    rcx,rbx
   140012323:	call   0x140008584
   140012328:	jmp    0x140012302
   14001232a:	mov    DWORD PTR [rbx+0x160],0x1
   140012334:	jmp    0x140012339
   140012336:	mov    rbx,rbp
   140012339:	mov    rax,QWORD PTR [rdi+0x158]
   140012340:	cmp    rax,rbp
   140012343:	je     0x14001234c
   140012345:	lock dec DWORD PTR [rax+0x160]
   14001234c:	mov    QWORD PTR [rdi+0x158],rbx
   140012353:	xor    eax,eax
   140012355:	mov    rbx,QWORD PTR [rsp+0x30]
   14001235a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001235f:	add    rsp,0x20
   140012363:	pop    rdi
   140012364:	ret    
   140012365:	int3   
   140012366:	int3   
   140012367:	int3   
   140012368:	test   rcx,rcx
   14001236b:	je     0x1400123d3
   14001236d:	push   rbx
   14001236e:	sub    rsp,0x20
   140012372:	mov    rbx,rcx
   140012375:	mov    rcx,QWORD PTR [rcx]
   140012378:	cmp    rcx,QWORD PTR [rip+0xfc31]        # 0x140021fb0
   14001237f:	je     0x140012386
   140012381:	call   0x140008584
   140012386:	mov    rcx,QWORD PTR [rbx+0x8]
   14001238a:	cmp    rcx,QWORD PTR [rip+0xfc27]        # 0x140021fb8
   140012391:	je     0x140012398
   140012393:	call   0x140008584
   140012398:	mov    rcx,QWORD PTR [rbx+0x10]
   14001239c:	cmp    rcx,QWORD PTR [rip+0xfc1d]        # 0x140021fc0
   1400123a3:	je     0x1400123aa
   1400123a5:	call   0x140008584
   1400123aa:	mov    rcx,QWORD PTR [rbx+0x58]
   1400123ae:	cmp    rcx,QWORD PTR [rip+0xfc53]        # 0x140022008
   1400123b5:	je     0x1400123bc
   1400123b7:	call   0x140008584
   1400123bc:	mov    rcx,QWORD PTR [rbx+0x60]
   1400123c0:	cmp    rcx,QWORD PTR [rip+0xfc49]        # 0x140022010
   1400123c7:	je     0x1400123ce
   1400123c9:	call   0x140008584
   1400123ce:	add    rsp,0x20
   1400123d2:	pop    rbx
   1400123d3:	ret    
   1400123d4:	mov    rax,rsp
   1400123d7:	mov    QWORD PTR [rax+0x8],rbx
   1400123db:	mov    QWORD PTR [rax+0x10],rbp
   1400123df:	mov    QWORD PTR [rax+0x18],rsi
   1400123e3:	push   rdi
   1400123e4:	push   r12
   1400123e6:	push   r13
   1400123e8:	push   r14
   1400123ea:	push   r15
   1400123ec:	sub    rsp,0x40
   1400123f0:	xor    ebx,ebx
   1400123f2:	mov    rsi,rcx
   1400123f5:	mov    QWORD PTR [rax-0x38],rcx
   1400123f9:	mov    QWORD PTR [rax-0x30],rbx
   1400123fd:	cmp    DWORD PTR [rcx+0x1c],ebx
   140012400:	jne    0x140012419
   140012402:	cmp    DWORD PTR [rcx+0x18],ebx
   140012405:	jne    0x140012419
   140012407:	mov    r13d,ebx
   14001240a:	mov    r14d,ebx
   14001240d:	lea    rbp,[rip+0xfb9c]        # 0x140021fb0
   140012414:	jmp    0x1400125cf
   140012419:	mov    edi,0x98
   14001241e:	mov    r12d,0x1
   140012424:	mov    edx,edi
   140012426:	mov    ecx,r12d
   140012429:	call   0x14000c3a0
   14001242e:	mov    rbp,rax
   140012431:	test   rax,rax
   140012434:	jne    0x14001243e
   140012436:	mov    eax,r12d
   140012439:	jmp    0x14001261e
   14001243e:	mov    rdx,QWORD PTR [rsi+0x128]
   140012445:	mov    rcx,rax
   140012448:	mov    r8,rdi
   14001244b:	call   0x140008250
   140012450:	mov    edi,0x4
   140012455:	mov    ecx,edi
   140012457:	call   0x14000c320
   14001245c:	mov    r14,rax
   14001245f:	test   rax,rax
   140012462:	jne    0x14001246e
   140012464:	mov    rcx,rbp
   140012467:	call   0x140008584
   14001246c:	jmp    0x140012436
   14001246e:	mov    DWORD PTR [rax],ebx
   140012470:	cmp    DWORD PTR [rsi+0x1c],ebx
   140012473:	je     0x140012589
   140012479:	mov    rcx,rdi
   14001247c:	call   0x14000c320
   140012481:	mov    r13,rax
   140012484:	test   rax,rax
   140012487:	je     0x140012544
   14001248d:	mov    DWORD PTR [rax],ebx
   14001248f:	movzx  edi,WORD PTR [rsi+0x3e]
   140012493:	lea    rcx,[rsp+0x30]
   140012498:	mov    r9d,0xe
   14001249e:	mov    edx,r12d
   1400124a1:	mov    r8d,edi
   1400124a4:	mov    QWORD PTR [rsp+0x20],rbp
   1400124a9:	call   0x140010f1c
   1400124ae:	lea    rcx,[rbp+0x8]
   1400124b2:	mov    QWORD PTR [rsp+0x20],rcx
   1400124b7:	lea    rcx,[rsp+0x30]
   1400124bc:	mov    r9d,0xf
   1400124c2:	mov    r8d,edi
   1400124c5:	mov    edx,r12d
   1400124c8:	mov    ebx,eax
   1400124ca:	call   0x140010f1c
   1400124cf:	lea    r15,[rbp+0x10]
   1400124d3:	lea    rcx,[rsp+0x30]
   1400124d8:	mov    r9d,0x10
   1400124de:	mov    r8d,edi
   1400124e1:	mov    edx,r12d
   1400124e4:	or     ebx,eax
   1400124e6:	mov    QWORD PTR [rsp+0x20],r15
   1400124eb:	call   0x140010f1c
   1400124f0:	mov    r9d,0xe
   1400124f6:	or     ebx,eax
   1400124f8:	lea    rax,[rbp+0x58]
   1400124fc:	lea    rcx,[rsp+0x30]
   140012501:	lea    edx,[r9-0xc]
   140012505:	mov    r8d,edi
   140012508:	mov    QWORD PTR [rsp+0x20],rax
   14001250d:	call   0x140010f1c
   140012512:	mov    r9d,0xf
   140012518:	or     ebx,eax
   14001251a:	lea    rax,[rbp+0x60]
   14001251e:	lea    rcx,[rsp+0x30]
   140012523:	lea    edx,[r9-0xd]
   140012527:	mov    r8d,edi
   14001252a:	mov    QWORD PTR [rsp+0x20],rax
   14001252f:	call   0x140010f1c
   140012534:	or     eax,ebx
   140012536:	je     0x140012554
   140012538:	mov    rcx,rbp
   14001253b:	call   0x140012368
   140012540:	or     r12d,0xffffffff
   140012544:	mov    rcx,rbp
   140012547:	call   0x140008584
   14001254c:	mov    rcx,r14
   14001254f:	jmp    0x140012467
   140012554:	mov    rdx,QWORD PTR [r15]
   140012557:	xor    ebx,ebx
   140012559:	jmp    0x14001256c
   14001255b:	mov    al,BYTE PTR [rdx]
   14001255d:	cmp    al,0x30
   14001255f:	jl     0x140012572
   140012561:	cmp    al,0x39
   140012563:	jg     0x140012572
   140012565:	sub    al,0x30
   140012567:	mov    BYTE PTR [rdx],al
   140012569:	add    rdx,r12
   14001256c:	cmp    BYTE PTR [rdx],bl
   14001256e:	jne    0x14001255b
   140012570:	jmp    0x1400125c3
   140012572:	cmp    al,0x3b
   140012574:	jne    0x140012569
   140012576:	mov    r8,rdx
   140012579:	mov    al,BYTE PTR [r8+0x1]
   14001257d:	mov    BYTE PTR [r8],al
   140012580:	inc    r8
   140012583:	test   al,al
   140012585:	jne    0x140012579
   140012587:	jmp    0x14001256c
   140012589:	mov    rax,QWORD PTR [rip+0xfa20]        # 0x140021fb0
   140012590:	mov    r13,rbx
   140012593:	mov    QWORD PTR [rbp+0x0],rax
   140012597:	mov    rax,QWORD PTR [rip+0xfa1a]        # 0x140021fb8
   14001259e:	mov    QWORD PTR [rbp+0x8],rax
   1400125a2:	mov    rax,QWORD PTR [rip+0xfa17]        # 0x140021fc0
   1400125a9:	mov    QWORD PTR [rbp+0x10],rax
   1400125ad:	mov    rax,QWORD PTR [rip+0xfa54]        # 0x140022008
   1400125b4:	mov    QWORD PTR [rbp+0x58],rax
   1400125b8:	mov    rax,QWORD PTR [rip+0xfa51]        # 0x140022010
   1400125bf:	mov    QWORD PTR [rbp+0x60],rax
   1400125c3:	mov    DWORD PTR [r14],r12d
   1400125c6:	test   r13,r13
   1400125c9:	je     0x1400125cf
   1400125cb:	mov    DWORD PTR [r13+0x0],r12d
   1400125cf:	mov    rax,QWORD PTR [rsi+0x118]
   1400125d6:	test   rax,rax
   1400125d9:	je     0x1400125de
   1400125db:	lock dec DWORD PTR [rax]
   1400125de:	mov    rcx,QWORD PTR [rsi+0x110]
   1400125e5:	test   rcx,rcx
   1400125e8:	je     0x140012607
   1400125ea:	lock dec DWORD PTR [rcx]
   1400125ed:	jne    0x140012607
   1400125ef:	mov    rcx,QWORD PTR [rsi+0x110]
   1400125f6:	call   0x140008584
   1400125fb:	mov    rcx,QWORD PTR [rsi+0x128]
   140012602:	call   0x140008584
   140012607:	mov    QWORD PTR [rsi+0x118],r13
   14001260e:	mov    QWORD PTR [rsi+0x110],r14
   140012615:	mov    QWORD PTR [rsi+0x128],rbp
   14001261c:	xor    eax,eax
   14001261e:	lea    r11,[rsp+0x40]
   140012623:	mov    rbx,QWORD PTR [r11+0x30]
   140012627:	mov    rbp,QWORD PTR [r11+0x38]
   14001262b:	mov    rsi,QWORD PTR [r11+0x40]
   14001262f:	mov    rsp,r11
   140012632:	pop    r15
   140012634:	pop    r14
   140012636:	pop    r13
   140012638:	pop    r12
   14001263a:	pop    rdi
   14001263b:	ret    
   14001263c:	test   rcx,rcx
   14001263f:	je     0x140012745
   140012645:	push   rbx
   140012646:	sub    rsp,0x20
   14001264a:	mov    rbx,rcx
   14001264d:	mov    rcx,QWORD PTR [rcx+0x18]
   140012651:	cmp    rcx,QWORD PTR [rip+0xf970]        # 0x140021fc8
   140012658:	je     0x14001265f
   14001265a:	call   0x140008584
   14001265f:	mov    rcx,QWORD PTR [rbx+0x20]
   140012663:	cmp    rcx,QWORD PTR [rip+0xf966]        # 0x140021fd0
   14001266a:	je     0x140012671
   14001266c:	call   0x140008584
   140012671:	mov    rcx,QWORD PTR [rbx+0x28]
   140012675:	cmp    rcx,QWORD PTR [rip+0xf95c]        # 0x140021fd8
   14001267c:	je     0x140012683
   14001267e:	call   0x140008584
   140012683:	mov    rcx,QWORD PTR [rbx+0x30]
   140012687:	cmp    rcx,QWORD PTR [rip+0xf952]        # 0x140021fe0
   14001268e:	je     0x140012695
   140012690:	call   0x140008584
   140012695:	mov    rcx,QWORD PTR [rbx+0x38]
   140012699:	cmp    rcx,QWORD PTR [rip+0xf948]        # 0x140021fe8
   1400126a0:	je     0x1400126a7
   1400126a2:	call   0x140008584
   1400126a7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400126ab:	cmp    rcx,QWORD PTR [rip+0xf93e]        # 0x140021ff0
   1400126b2:	je     0x1400126b9
   1400126b4:	call   0x140008584
   1400126b9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400126bd:	cmp    rcx,QWORD PTR [rip+0xf934]        # 0x140021ff8
   1400126c4:	je     0x1400126cb
   1400126c6:	call   0x140008584
   1400126cb:	mov    rcx,QWORD PTR [rbx+0x68]
   1400126cf:	cmp    rcx,QWORD PTR [rip+0xf942]        # 0x140022018
   1400126d6:	je     0x1400126dd
   1400126d8:	call   0x140008584
   1400126dd:	mov    rcx,QWORD PTR [rbx+0x70]
   1400126e1:	cmp    rcx,QWORD PTR [rip+0xf938]        # 0x140022020
   1400126e8:	je     0x1400126ef
   1400126ea:	call   0x140008584
   1400126ef:	mov    rcx,QWORD PTR [rbx+0x78]
   1400126f3:	cmp    rcx,QWORD PTR [rip+0xf92e]        # 0x140022028
   1400126fa:	je     0x140012701
   1400126fc:	call   0x140008584
   140012701:	mov    rcx,QWORD PTR [rbx+0x80]
   140012708:	cmp    rcx,QWORD PTR [rip+0xf921]        # 0x140022030
   14001270f:	je     0x140012716
   140012711:	call   0x140008584
   140012716:	mov    rcx,QWORD PTR [rbx+0x88]
   14001271d:	cmp    rcx,QWORD PTR [rip+0xf914]        # 0x140022038
   140012724:	je     0x14001272b
   140012726:	call   0x140008584
   14001272b:	mov    rcx,QWORD PTR [rbx+0x90]
   140012732:	cmp    rcx,QWORD PTR [rip+0xf907]        # 0x140022040
   140012739:	je     0x140012740
   14001273b:	call   0x140008584
   140012740:	add    rsp,0x20
   140012744:	pop    rbx
   140012745:	ret    
   140012746:	int3   
   140012747:	int3   
   140012748:	mov    QWORD PTR [rsp+0x8],rbx
   14001274d:	mov    QWORD PTR [rsp+0x10],rsi
   140012752:	mov    QWORD PTR [rsp+0x18],rdi
   140012757:	push   rbp
   140012758:	push   r12
   14001275a:	push   r13
   14001275c:	push   r14
   14001275e:	push   r15
   140012760:	mov    rbp,rsp
   140012763:	sub    rsp,0x40
   140012767:	xor    ebx,ebx
   140012769:	mov    rsi,rcx
   14001276c:	mov    QWORD PTR [rbp-0x10],rcx
   140012770:	mov    r13d,ebx
   140012773:	mov    QWORD PTR [rbp-0x8],rbx
   140012777:	cmp    DWORD PTR [rcx+0x18],ebx
   14001277a:	jne    0x140012790
   14001277c:	cmp    DWORD PTR [rcx+0x1c],ebx
   14001277f:	jne    0x140012790
   140012781:	mov    r14d,ebx
   140012784:	lea    r12,[rip+0xf825]        # 0x140021fb0
   14001278b:	jmp    0x140012b8f
   140012790:	mov    r15d,0x98
   140012796:	mov    ecx,0x1
   14001279b:	mov    edx,r15d
   14001279e:	call   0x14000c3a0
   1400127a3:	mov    r12,rax
   1400127a6:	test   rax,rax
   1400127a9:	jne    0x1400127b5
   1400127ab:	mov    eax,0x1
   1400127b0:	jmp    0x140012bde
   1400127b5:	mov    edi,0x4
   1400127ba:	mov    ecx,edi
   1400127bc:	call   0x14000c320
   1400127c1:	mov    r14,rax
   1400127c4:	test   rax,rax
   1400127c7:	jne    0x1400127d3
   1400127c9:	mov    rcx,r12
   1400127cc:	call   0x140008584
   1400127d1:	jmp    0x1400127ab
   1400127d3:	mov    DWORD PTR [rax],ebx
   1400127d5:	cmp    DWORD PTR [rsi+0x18],ebx
   1400127d8:	je     0x140012b1b
   1400127de:	mov    rcx,rdi
   1400127e1:	call   0x14000c320
   1400127e6:	mov    r13,rax
   1400127e9:	test   rax,rax
   1400127ec:	jne    0x1400127fb
   1400127ee:	mov    rcx,r12
   1400127f1:	call   0x140008584
   1400127f6:	mov    rcx,r14
   1400127f9:	jmp    0x1400127cc
   1400127fb:	mov    DWORD PTR [rax],ebx
   1400127fd:	movzx  edi,WORD PTR [rsi+0x38]
   140012801:	mov    r9d,0x15
   140012807:	lea    rax,[r12+0x18]
   14001280c:	lea    rcx,[rbp-0x10]
   140012810:	lea    edx,[r9-0x14]
   140012814:	mov    r8d,edi
   140012817:	mov    QWORD PTR [rsp+0x20],rax
   14001281c:	call   0x140010f1c
   140012821:	lea    rcx,[r12+0x20]
   140012826:	mov    r9d,0x14
   14001282c:	mov    QWORD PTR [rsp+0x20],rcx
   140012831:	lea    edx,[r9-0x13]
   140012835:	lea    rcx,[rbp-0x10]
   140012839:	mov    r8d,edi
   14001283c:	mov    ebx,eax
   14001283e:	call   0x140010f1c
   140012843:	lea    rcx,[r12+0x28]
   140012848:	mov    r9d,0x16
   14001284e:	mov    QWORD PTR [rsp+0x20],rcx
   140012853:	lea    edx,[r9-0x15]
   140012857:	lea    rcx,[rbp-0x10]
   14001285b:	mov    r8d,edi
   14001285e:	or     ebx,eax
   140012860:	call   0x140010f1c
   140012865:	mov    r9d,0x17
   14001286b:	lea    rcx,[rbp-0x10]
   14001286f:	or     ebx,eax
   140012871:	lea    rax,[r12+0x30]
   140012876:	lea    edx,[r9-0x16]
   14001287a:	mov    r8d,edi
   14001287d:	mov    QWORD PTR [rsp+0x20],rax
   140012882:	call   0x140010f1c
   140012887:	mov    r9d,0x18
   14001288d:	lea    r15,[r12+0x38]
   140012892:	lea    rcx,[rbp-0x10]
   140012896:	lea    edx,[r9-0x17]
   14001289a:	mov    r8d,edi
   14001289d:	or     ebx,eax
   14001289f:	mov    QWORD PTR [rsp+0x20],r15
   1400128a4:	call   0x140010f1c
   1400128a9:	mov    r9d,0x50
   1400128af:	or     ebx,eax
   1400128b1:	lea    rax,[r12+0x40]
   1400128b6:	lea    rcx,[rbp-0x10]
   1400128ba:	lea    edx,[r9-0x4f]
   1400128be:	mov    r8d,edi
   1400128c1:	mov    QWORD PTR [rsp+0x20],rax
   1400128c6:	call   0x140010f1c
   1400128cb:	mov    r9d,0x51
   1400128d1:	or     ebx,eax
   1400128d3:	lea    rax,[r12+0x48]
   1400128d8:	lea    rcx,[rbp-0x10]
   1400128dc:	lea    edx,[r9-0x50]
   1400128e0:	mov    r8d,edi
   1400128e3:	mov    QWORD PTR [rsp+0x20],rax
   1400128e8:	call   0x140010f1c
   1400128ed:	lea    rcx,[rbp-0x10]
   1400128f1:	mov    r9d,0x1a
   1400128f7:	or     ebx,eax
   1400128f9:	lea    rax,[r12+0x50]
   1400128fe:	mov    r8d,edi
   140012901:	xor    edx,edx
   140012903:	mov    QWORD PTR [rsp+0x20],rax
   140012908:	call   0x140010f1c
   14001290d:	lea    rcx,[rbp-0x10]
   140012911:	mov    r9d,0x19
   140012917:	or     ebx,eax
   140012919:	lea    rax,[r12+0x51]
   14001291e:	mov    r8d,edi
   140012921:	xor    edx,edx
   140012923:	mov    QWORD PTR [rsp+0x20],rax
   140012928:	call   0x140010f1c
   14001292d:	lea    rcx,[rbp-0x10]
   140012931:	mov    r9d,0x54
   140012937:	or     ebx,eax
   140012939:	lea    rax,[r12+0x52]
   14001293e:	mov    r8d,edi
   140012941:	xor    edx,edx
   140012943:	mov    QWORD PTR [rsp+0x20],rax
   140012948:	call   0x140010f1c
   14001294d:	or     ebx,eax
   14001294f:	lea    rax,[r12+0x53]
   140012954:	lea    rcx,[rbp-0x10]
   140012958:	mov    r9d,0x55
   14001295e:	mov    r8d,edi
   140012961:	xor    edx,edx
   140012963:	mov    QWORD PTR [rsp+0x20],rax
   140012968:	call   0x140010f1c
   14001296d:	lea    rcx,[rbp-0x10]
   140012971:	or     ebx,eax
   140012973:	lea    rax,[r12+0x54]
   140012978:	mov    r9d,0x56
   14001297e:	mov    r8d,edi
   140012981:	xor    edx,edx
   140012983:	mov    QWORD PTR [rsp+0x20],rax
   140012988:	call   0x140010f1c
   14001298d:	lea    rcx,[rbp-0x10]
   140012991:	mov    r9d,0x57
   140012997:	or     ebx,eax
   140012999:	lea    rax,[r12+0x55]
   14001299e:	mov    r8d,edi
   1400129a1:	xor    edx,edx
   1400129a3:	mov    QWORD PTR [rsp+0x20],rax
   1400129a8:	call   0x140010f1c
   1400129ad:	lea    rcx,[rbp-0x10]
   1400129b1:	mov    r9d,0x52
   1400129b7:	or     ebx,eax
   1400129b9:	lea    rax,[r12+0x56]
   1400129be:	mov    r8d,edi
   1400129c1:	xor    edx,edx
   1400129c3:	mov    QWORD PTR [rsp+0x20],rax
   1400129c8:	call   0x140010f1c
   1400129cd:	lea    rcx,[rbp-0x10]
   1400129d1:	mov    r9d,0x53
   1400129d7:	or     ebx,eax
   1400129d9:	lea    rax,[r12+0x57]
   1400129de:	mov    r8d,edi
   1400129e1:	xor    edx,edx
   1400129e3:	mov    QWORD PTR [rsp+0x20],rax
   1400129e8:	call   0x140010f1c
   1400129ed:	mov    r9d,0x15
   1400129f3:	lea    rcx,[rbp-0x10]
   1400129f7:	or     ebx,eax
   1400129f9:	lea    rax,[r12+0x68]
   1400129fe:	lea    edx,[r9-0x13]
   140012a02:	mov    r8d,edi
   140012a05:	mov    QWORD PTR [rsp+0x20],rax
   140012a0a:	call   0x140010f1c
   140012a0f:	mov    r9d,0x14
   140012a15:	lea    rcx,[rbp-0x10]
   140012a19:	or     ebx,eax
   140012a1b:	lea    rax,[r12+0x70]
   140012a20:	lea    edx,[r9-0x12]
   140012a24:	mov    r8d,edi
   140012a27:	mov    QWORD PTR [rsp+0x20],rax
   140012a2c:	call   0x140010f1c
   140012a31:	mov    r9d,0x16
   140012a37:	lea    rcx,[rbp-0x10]
   140012a3b:	or     ebx,eax
   140012a3d:	lea    rax,[r12+0x78]
   140012a42:	lea    edx,[r9-0x14]
   140012a46:	mov    r8d,edi
   140012a49:	mov    QWORD PTR [rsp+0x20],rax
   140012a4e:	call   0x140010f1c
   140012a53:	mov    r9d,0x17
   140012a59:	lea    rcx,[rbp-0x10]
   140012a5d:	or     ebx,eax
   140012a5f:	lea    rax,[r12+0x80]
   140012a67:	lea    edx,[r9-0x15]
   140012a6b:	mov    r8d,edi
   140012a6e:	mov    QWORD PTR [rsp+0x20],rax
   140012a73:	call   0x140010f1c
   140012a78:	mov    r9d,0x50
   140012a7e:	lea    rcx,[rbp-0x10]
   140012a82:	or     ebx,eax
   140012a84:	lea    rax,[r12+0x88]
   140012a8c:	lea    edx,[r9-0x4e]
   140012a90:	mov    r8d,edi
   140012a93:	mov    QWORD PTR [rsp+0x20],rax
   140012a98:	call   0x140010f1c
   140012a9d:	or     ebx,eax
   140012a9f:	mov    r9d,0x51
   140012aa5:	lea    rax,[r12+0x90]
   140012aad:	lea    rcx,[rbp-0x10]
   140012ab1:	lea    edx,[r9-0x4f]
   140012ab5:	mov    r8d,edi
   140012ab8:	mov    QWORD PTR [rsp+0x20],rax
   140012abd:	call   0x140010f1c
   140012ac2:	or     eax,ebx
   140012ac4:	je     0x140012ae6
   140012ac6:	mov    rcx,r12
   140012ac9:	call   0x14001263c
   140012ace:	mov    rcx,r12
   140012ad1:	call   0x140008584
   140012ad6:	mov    rcx,r14
   140012ad9:	call   0x140008584
   140012ade:	mov    rcx,r13
   140012ae1:	jmp    0x1400127cc
   140012ae6:	mov    rdx,QWORD PTR [r15]
   140012ae9:	xor    ebx,ebx
   140012aeb:	jmp    0x140012afe
   140012aed:	mov    al,BYTE PTR [rdx]
   140012aef:	cmp    al,0x30
   140012af1:	jl     0x140012b04
   140012af3:	cmp    al,0x39
   140012af5:	jg     0x140012b04
   140012af7:	sub    al,0x30
   140012af9:	mov    BYTE PTR [rdx],al
   140012afb:	inc    rdx
   140012afe:	cmp    BYTE PTR [rdx],bl
   140012b00:	jne    0x140012aed
   140012b02:	jmp    0x140012b2d
   140012b04:	cmp    al,0x3b
   140012b06:	jne    0x140012afb
   140012b08:	mov    r8,rdx
   140012b0b:	mov    al,BYTE PTR [r8+0x1]
   140012b0f:	mov    BYTE PTR [r8],al
   140012b12:	inc    r8
   140012b15:	test   al,al
   140012b17:	jne    0x140012b0b
   140012b19:	jmp    0x140012afe
   140012b1b:	lea    rdx,[rip+0xf48e]        # 0x140021fb0
   140012b22:	mov    rcx,r12
   140012b25:	mov    r8,r15
   140012b28:	call   0x140008250
   140012b2d:	mov    rax,QWORD PTR [rsi+0x128]
   140012b34:	mov    rcx,QWORD PTR [rax]
   140012b37:	mov    QWORD PTR [r12],rcx
   140012b3b:	mov    rax,QWORD PTR [rsi+0x128]
   140012b42:	mov    rcx,QWORD PTR [rax+0x8]
   140012b46:	mov    QWORD PTR [r12+0x8],rcx
   140012b4b:	mov    rax,QWORD PTR [rsi+0x128]
   140012b52:	mov    rcx,QWORD PTR [rax+0x10]
   140012b56:	mov    QWORD PTR [r12+0x10],rcx
   140012b5b:	mov    rax,QWORD PTR [rsi+0x128]
   140012b62:	mov    rcx,QWORD PTR [rax+0x58]
   140012b66:	mov    QWORD PTR [r12+0x58],rcx
   140012b6b:	mov    rax,QWORD PTR [rsi+0x128]
   140012b72:	mov    rcx,QWORD PTR [rax+0x60]
   140012b76:	mov    QWORD PTR [r12+0x60],rcx
   140012b7b:	mov    DWORD PTR [r14],0x1
   140012b82:	test   r13,r13
   140012b85:	je     0x140012b8f
   140012b87:	mov    DWORD PTR [r13+0x0],0x1
   140012b8f:	mov    rax,QWORD PTR [rsi+0x120]
   140012b96:	test   rax,rax
   140012b99:	je     0x140012b9e
   140012b9b:	lock dec DWORD PTR [rax]
   140012b9e:	mov    rcx,QWORD PTR [rsi+0x110]
   140012ba5:	test   rcx,rcx
   140012ba8:	je     0x140012bc7
   140012baa:	lock dec DWORD PTR [rcx]
   140012bad:	jne    0x140012bc7
   140012baf:	mov    rcx,QWORD PTR [rsi+0x128]
   140012bb6:	call   0x140008584
   140012bbb:	mov    rcx,QWORD PTR [rsi+0x110]
   140012bc2:	call   0x140008584
   140012bc7:	mov    QWORD PTR [rsi+0x120],r13
   140012bce:	mov    QWORD PTR [rsi+0x110],r14
   140012bd5:	mov    QWORD PTR [rsi+0x128],r12
   140012bdc:	xor    eax,eax
   140012bde:	lea    r11,[rsp+0x40]
   140012be3:	mov    rbx,QWORD PTR [r11+0x30]
   140012be7:	mov    rsi,QWORD PTR [r11+0x38]
   140012beb:	mov    rdi,QWORD PTR [r11+0x40]
   140012bef:	mov    rsp,r11
   140012bf2:	pop    r15
   140012bf4:	pop    r14
   140012bf6:	pop    r13
   140012bf8:	pop    r12
   140012bfa:	pop    rbp
   140012bfb:	ret    
   140012bfc:	xor    eax,eax
   140012bfe:	ret    
   140012bff:	int3   
   140012c00:	mov    QWORD PTR [rsp+0x8],rbx
   140012c05:	mov    QWORD PTR [rsp+0x10],rsi
   140012c0a:	mov    QWORD PTR [rsp+0x18],rdi
   140012c0f:	push   r12
   140012c11:	sub    rsp,0x20
   140012c15:	lea    r12,[rip+0xf434]        # 0x140022050
   140012c1c:	xor    esi,esi
   140012c1e:	xor    ebx,ebx
   140012c20:	mov    rdi,r12
   140012c23:	cmp    DWORD PTR [rdi+0x8],0x1
   140012c27:	jne    0x140012c4f
   140012c29:	movsxd rax,esi
   140012c2c:	mov    edx,0xfa0
   140012c31:	inc    esi
   140012c33:	lea    rcx,[rax+rax*4]
   140012c37:	lea    rax,[rip+0x112a2]        # 0x140023ee0
   140012c3e:	lea    rcx,[rax+rcx*8]
   140012c42:	mov    QWORD PTR [rdi],rcx
   140012c45:	call   QWORD PTR [rip+0x55dd]        # 0x140018228
   140012c4b:	test   eax,eax
   140012c4d:	je     0x140012c75
   140012c4f:	inc    ebx
   140012c51:	add    rdi,0x10
   140012c55:	cmp    ebx,0x24
   140012c58:	jl     0x140012c23
   140012c5a:	mov    eax,0x1
   140012c5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c64:	mov    rsi,QWORD PTR [rsp+0x38]
   140012c69:	mov    rdi,QWORD PTR [rsp+0x40]
   140012c6e:	add    rsp,0x20
   140012c72:	pop    r12
   140012c74:	ret    
   140012c75:	movsxd rax,ebx
   140012c78:	add    rax,rax
   140012c7b:	and    QWORD PTR [r12+rax*8],0x0
   140012c80:	xor    eax,eax
   140012c82:	jmp    0x140012c5f
   140012c84:	mov    QWORD PTR [rsp+0x8],rbx
   140012c89:	mov    QWORD PTR [rsp+0x10],rbp
   140012c8e:	mov    QWORD PTR [rsp+0x18],rsi
   140012c93:	push   rdi
   140012c94:	sub    rsp,0x20
   140012c98:	mov    edi,0x24
   140012c9d:	lea    rbx,[rip+0xf3ac]        # 0x140022050
   140012ca4:	mov    esi,edi
   140012ca6:	mov    rbp,QWORD PTR [rbx]
   140012ca9:	test   rbp,rbp
   140012cac:	je     0x140012cc9
   140012cae:	cmp    DWORD PTR [rbx+0x8],0x1
   140012cb2:	je     0x140012cc9
   140012cb4:	mov    rcx,rbp
   140012cb7:	call   QWORD PTR [rip+0x541b]        # 0x1400180d8
   140012cbd:	mov    rcx,rbp
   140012cc0:	call   0x140008584
   140012cc5:	and    QWORD PTR [rbx],0x0
   140012cc9:	add    rbx,0x10
   140012ccd:	dec    rsi
   140012cd0:	jne    0x140012ca6
   140012cd2:	lea    rbx,[rip+0xf37f]        # 0x140022058
   140012cd9:	mov    rcx,QWORD PTR [rbx-0x8]
   140012cdd:	test   rcx,rcx
   140012ce0:	je     0x140012ced
   140012ce2:	cmp    DWORD PTR [rbx],0x1
   140012ce5:	jne    0x140012ced
   140012ce7:	call   QWORD PTR [rip+0x53eb]        # 0x1400180d8
   140012ced:	add    rbx,0x10
   140012cf1:	dec    rdi
   140012cf4:	jne    0x140012cd9
   140012cf6:	mov    rbx,QWORD PTR [rsp+0x30]
   140012cfb:	mov    rbp,QWORD PTR [rsp+0x38]
   140012d00:	mov    rsi,QWORD PTR [rsp+0x40]
   140012d05:	add    rsp,0x20
   140012d09:	pop    rdi
   140012d0a:	ret    
   140012d0b:	int3   
   140012d0c:	movsxd rcx,ecx
   140012d0f:	lea    rax,[rip+0xf33a]        # 0x140022050
   140012d16:	add    rcx,rcx
   140012d19:	mov    rcx,QWORD PTR [rax+rcx*8]
   140012d1d:	rex.W jmp QWORD PTR [rip+0x53c4]        # 0x1400180e8
   140012d24:	mov    QWORD PTR [rsp+0x8],rbx
   140012d29:	mov    QWORD PTR [rsp+0x10],rsi
   140012d2e:	mov    QWORD PTR [rsp+0x18],rdi
   140012d33:	push   r13
   140012d35:	sub    rsp,0x20
   140012d39:	movsxd rbx,ecx
   140012d3c:	mov    esi,0x1
   140012d41:	cmp    QWORD PTR [rip+0x108bf],0x0        # 0x140023608
   140012d49:	jne    0x140012d62
   140012d4b:	call   0x140010290
   140012d50:	lea    ecx,[rsi+0x1d]
   140012d53:	call   0x140010030
   140012d58:	mov    ecx,0xff
   140012d5d:	call   0x14000dcb8
   140012d62:	mov    rdi,rbx
   140012d65:	add    rdi,rdi
   140012d68:	lea    r13,[rip+0xf2e1]        # 0x140022050
   140012d6f:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140012d75:	je     0x140012d7b
   140012d77:	mov    eax,esi
   140012d79:	jmp    0x140012df4
   140012d7b:	mov    ecx,0x28
   140012d80:	call   0x14000c320
   140012d85:	mov    rbx,rax
   140012d88:	test   rax,rax
   140012d8b:	jne    0x140012d9c
   140012d8d:	call   0x140008e40
   140012d92:	mov    DWORD PTR [rax],0xc
   140012d98:	xor    eax,eax
   140012d9a:	jmp    0x140012df4
   140012d9c:	mov    ecx,0xa
   140012da1:	call   0x140012e0c
   140012da6:	nop
   140012da7:	mov    rcx,rbx
   140012daa:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140012db0:	jne    0x140012ddf
   140012db2:	mov    edx,0xfa0
   140012db7:	call   QWORD PTR [rip+0x546b]        # 0x140018228
   140012dbd:	test   eax,eax
   140012dbf:	jne    0x140012dd8
   140012dc1:	mov    rcx,rbx
   140012dc4:	call   0x140008584
   140012dc9:	call   0x140008e40
   140012dce:	mov    DWORD PTR [rax],0xc
   140012dd4:	xor    esi,esi
   140012dd6:	jmp    0x140012de5
   140012dd8:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140012ddd:	jmp    0x140012de5
   140012ddf:	call   0x140008584
   140012de4:	nop
   140012de5:	mov    rcx,QWORD PTR [rip+0xf304]        # 0x1400220f0
   140012dec:	call   QWORD PTR [rip+0x52f6]        # 0x1400180e8
   140012df2:	jmp    0x140012d77
   140012df4:	mov    rbx,QWORD PTR [rsp+0x30]
   140012df9:	mov    rsi,QWORD PTR [rsp+0x38]
   140012dfe:	mov    rdi,QWORD PTR [rsp+0x40]
   140012e03:	add    rsp,0x20
   140012e07:	pop    r13
   140012e09:	ret    
   140012e0a:	int3   
   140012e0b:	int3   
   140012e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140012e11:	push   rdi
   140012e12:	sub    rsp,0x20
   140012e16:	movsxd rbx,ecx
   140012e19:	lea    rdi,[rip+0xf230]        # 0x140022050
   140012e20:	add    rbx,rbx
   140012e23:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140012e28:	jne    0x140012e3b
   140012e2a:	call   0x140012d24
   140012e2f:	test   eax,eax
   140012e31:	jne    0x140012e3b
   140012e33:	lea    ecx,[rax+0x11]
   140012e36:	call   0x14000e014
   140012e3b:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140012e3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012e44:	add    rsp,0x20
   140012e48:	pop    rdi
   140012e49:	rex.W jmp QWORD PTR [rip+0x5290]        # 0x1400180e0
   140012e50:	rex push rbx
   140012e52:	sub    rsp,0x20
   140012e56:	xor    r10d,r10d
   140012e59:	mov    r9,rcx
   140012e5c:	test   rcx,rcx
   140012e5f:	je     0x140012e6e
   140012e61:	test   rdx,rdx
   140012e64:	je     0x140012e6e
   140012e66:	test   r8,r8
   140012e69:	jne    0x140012e87
   140012e6b:	mov    BYTE PTR [rcx],r10b
   140012e6e:	call   0x140008e40
   140012e73:	mov    ebx,0x16
   140012e78:	mov    DWORD PTR [rax],ebx
   140012e7a:	call   0x14000dafc
   140012e7f:	mov    eax,ebx
   140012e81:	add    rsp,0x20
   140012e85:	pop    rbx
   140012e86:	ret    
   140012e87:	cmp    BYTE PTR [rcx],r10b
   140012e8a:	je     0x140012e94
   140012e8c:	inc    rcx
   140012e8f:	dec    rdx
   140012e92:	jne    0x140012e87
   140012e94:	test   rdx,rdx
   140012e97:	jne    0x140012e9e
   140012e99:	mov    BYTE PTR [r9],r10b
   140012e9c:	jmp    0x140012e6e
   140012e9e:	sub    rcx,r8
   140012ea1:	mov    al,BYTE PTR [r8]
   140012ea4:	mov    BYTE PTR [rcx+r8*1],al
   140012ea8:	inc    r8
   140012eab:	test   al,al
   140012ead:	je     0x140012eb4
   140012eaf:	dec    rdx
   140012eb2:	jne    0x140012ea1
   140012eb4:	test   rdx,rdx
   140012eb7:	jne    0x140012ec8
   140012eb9:	mov    BYTE PTR [r9],r10b
   140012ebc:	call   0x140008e40
   140012ec1:	mov    ebx,0x22
   140012ec6:	jmp    0x140012e78
   140012ec8:	xor    eax,eax
   140012eca:	jmp    0x140012e81
   140012ecc:	sub    rsp,0x38
   140012ed0:	mov    rax,QWORD PTR [rip+0xe539]        # 0x140021410
   140012ed7:	xor    rax,rsp
   140012eda:	mov    QWORD PTR [rsp+0x20],rax
   140012edf:	mov    al,BYTE PTR [rdx]
   140012ee1:	xor    r9d,r9d
   140012ee4:	mov    r11,rdx
   140012ee7:	mov    QWORD PTR [rsp],r9
   140012eeb:	mov    QWORD PTR [rsp+0x8],r9
   140012ef0:	mov    QWORD PTR [rsp+0x10],r9
   140012ef5:	mov    QWORD PTR [rsp+0x18],r9
   140012efa:	mov    r10,rcx
   140012efd:	jmp    0x140012f1b
   140012eff:	movzx  r8d,al
   140012f03:	movzx  eax,al
   140012f06:	and    eax,0x7
   140012f09:	shr    r8,0x3
   140012f0d:	mov    cl,al
   140012f0f:	shl    dl,cl
   140012f11:	or     BYTE PTR [rsp+r8*1],dl
   140012f15:	inc    r11
   140012f18:	mov    al,BYTE PTR [r11]
   140012f1b:	mov    edx,0x1
   140012f20:	test   al,al
   140012f22:	jne    0x140012eff
   140012f24:	or     BYTE PTR [rsp],dl
   140012f27:	jmp    0x140012f34
   140012f29:	inc    r9d
   140012f2c:	mov    edx,0x1
   140012f31:	inc    r10
   140012f34:	movzx  r8d,BYTE PTR [r10]
   140012f38:	mov    ecx,r8d
   140012f3b:	shr    r8,0x3
   140012f3f:	and    ecx,0x7
   140012f42:	shl    edx,cl
   140012f44:	test   BYTE PTR [rsp+r8*1],dl
   140012f48:	je     0x140012f29
   140012f4a:	movsxd rax,r9d
   140012f4d:	mov    rcx,QWORD PTR [rsp+0x20]
   140012f52:	xor    rcx,rsp
   140012f55:	call   0x140007d20
   140012f5a:	add    rsp,0x38
   140012f5e:	ret    
   140012f5f:	int3   
   140012f60:	mov    rax,rsp
   140012f63:	mov    QWORD PTR [rax+0x8],rbx
   140012f67:	mov    QWORD PTR [rax+0x10],rbp
   140012f6b:	mov    QWORD PTR [rax+0x18],rsi
   140012f6f:	mov    QWORD PTR [rax+0x20],rdi
   140012f73:	push   r12
   140012f75:	push   r13
   140012f77:	push   r14
   140012f79:	sub    rsp,0x20
   140012f7d:	xor    ebx,ebx
   140012f7f:	mov    r13,r8
   140012f82:	mov    edi,edx
   140012f84:	mov    r14,rcx
   140012f87:	mov    eax,0x1
   140012f8c:	mov    esi,ebx
   140012f8e:	test   edx,edx
   140012f90:	js     0x140012fd1
   140012f92:	test   eax,eax
   140012f94:	je     0x140012fd3
   140012f96:	mov    rcx,QWORD PTR [r13+0x0]
   140012f9a:	lea    eax,[rsi+rdi*1]
   140012f9d:	cdq    
   140012f9e:	sub    eax,edx
   140012fa0:	sar    eax,1
   140012fa2:	movsxd rbp,eax
   140012fa5:	mov    r12,rbp
   140012fa8:	add    r12,r12
   140012fab:	mov    rdx,QWORD PTR [r14+r12*8]
   140012faf:	call   0x140015c8c
   140012fb4:	test   eax,eax
   140012fb6:	jne    0x140012fc3
   140012fb8:	lea    rcx,[r14+r12*8+0x8]
   140012fbd:	mov    QWORD PTR [r13+0x0],rcx
   140012fc1:	jmp    0x140012fcd
   140012fc3:	jns    0x140012fca
   140012fc5:	lea    edi,[rbp-0x1]
   140012fc8:	jmp    0x140012fcd
   140012fca:	lea    esi,[rbp+0x1]
   140012fcd:	cmp    esi,edi
   140012fcf:	jle    0x140012f92
   140012fd1:	test   eax,eax
   140012fd3:	mov    rbp,QWORD PTR [rsp+0x48]
   140012fd8:	mov    rsi,QWORD PTR [rsp+0x50]
   140012fdd:	mov    rdi,QWORD PTR [rsp+0x58]
   140012fe2:	sete   bl
   140012fe5:	mov    eax,ebx
   140012fe7:	mov    rbx,QWORD PTR [rsp+0x40]
   140012fec:	add    rsp,0x20
   140012ff0:	pop    r14
   140012ff2:	pop    r13
   140012ff4:	pop    r12
   140012ff6:	ret    
   140012ff7:	int3   
   140012ff8:	mov    dl,BYTE PTR [rcx]
   140012ffa:	mov    r8,rcx
   140012ffd:	xor    r9d,r9d
   140013000:	jmp    0x140013029
   140013002:	lea    eax,[rdx-0x61]
   140013005:	inc    r8
   140013008:	cmp    al,0x5
   14001300a:	ja     0x140013011
   14001300c:	add    dl,0xd9
   14001300f:	jmp    0x14001301b
   140013011:	lea    eax,[rdx-0x41]
   140013014:	cmp    al,0x5
   140013016:	ja     0x14001301b
   140013018:	add    dl,0xf9
   14001301b:	movsx  ecx,dl
   14001301e:	mov    dl,BYTE PTR [r8]
   140013021:	add    r9d,r9d
   140013024:	lea    r9d,[rcx+r9*8-0x30]
   140013029:	test   dl,dl
   14001302b:	jne    0x140013002
   14001302d:	mov    eax,r9d
   140013030:	ret    
   140013031:	int3   
   140013032:	int3   
   140013033:	int3   
   140013034:	mov    QWORD PTR [rsp+0x10],rbx
   140013039:	mov    QWORD PTR [rsp+0x18],rsi
   14001303e:	push   rdi
   14001303f:	sub    rsp,0xb0
   140013046:	mov    rax,QWORD PTR [rip+0xe3c3]        # 0x140021410
   14001304d:	xor    rax,rsp
   140013050:	mov    QWORD PTR [rsp+0xa0],rax
   140013058:	mov    rbx,rcx
   14001305b:	call   0x14000d728
   140013060:	mov    rcx,rbx
   140013063:	mov    rdi,rax
   140013066:	call   0x140012ff8
   14001306b:	mov    ecx,DWORD PTR [rdi+0x15c]
   140013071:	neg    ecx
   140013073:	lea    r8,[rsp+0x20]
   140013078:	mov    r9d,0x78
   14001307e:	sbb    edx,edx
   140013080:	mov    ecx,eax
   140013082:	mov    esi,eax
   140013084:	and    edx,0xfffff005
   14001308a:	add    edx,0x1002
   140013090:	call   QWORD PTR [rip+0x51d2]        # 0x140018268
   140013096:	xor    ebx,ebx
   140013098:	test   eax,eax
   14001309a:	jne    0x1400130a7
   14001309c:	mov    DWORD PTR [rdi+0x150],ebx
   1400130a2:	lea    eax,[rbx+0x1]
   1400130a5:	jmp    0x1400130f4
   1400130a7:	mov    rcx,QWORD PTR [rdi+0x148]
   1400130ae:	lea    rdx,[rsp+0x20]
   1400130b3:	call   0x140015c8c
   1400130b8:	test   eax,eax
   1400130ba:	jne    0x1400130e6
   1400130bc:	lea    rax,[rip+0x7f6d]        # 0x14001b030
   1400130c3:	cmp    si,WORD PTR [rax]
   1400130c6:	je     0x1400130e6
   1400130c8:	inc    ebx
   1400130ca:	add    rax,0x2
   1400130ce:	cmp    ebx,0xa
   1400130d1:	jb     0x1400130c3
   1400130d3:	or     DWORD PTR [rdi+0x150],0x4
   1400130da:	mov    DWORD PTR [rdi+0x164],esi
   1400130e0:	mov    DWORD PTR [rdi+0x160],esi
   1400130e6:	mov    eax,DWORD PTR [rdi+0x150]
   1400130ec:	shr    eax,0x2
   1400130ef:	not    eax
   1400130f1:	and    eax,0x1
   1400130f4:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400130fc:	xor    rcx,rsp
   1400130ff:	call   0x140007d20
   140013104:	lea    r11,[rsp+0xb0]
   14001310c:	mov    rbx,QWORD PTR [r11+0x18]
   140013110:	mov    rsi,QWORD PTR [r11+0x20]
   140013114:	mov    rsp,r11
   140013117:	pop    rdi
   140013118:	ret    
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	mov    rax,rsp
   14001311f:	mov    QWORD PTR [rax+0x10],rbx
   140013123:	mov    QWORD PTR [rax+0x18],rbp
   140013127:	mov    QWORD PTR [rax+0x20],rsi
   14001312b:	push   rdi
   14001312c:	sub    rsp,0x20
   140013130:	mov    edi,ecx
   140013132:	mov    rbp,r8
   140013135:	and    ecx,0x3ff
   14001313b:	mov    esi,edx
   14001313d:	lea    r8,[rax+0x8]
   140013141:	mov    r9d,0x2
   140013147:	bts    ecx,0xa
   14001314b:	mov    edx,0x20000001
   140013150:	call   QWORD PTR [rip+0x5102]        # 0x140018258
   140013156:	xor    ebx,ebx
   140013158:	test   eax,eax
   14001315a:	jne    0x140013160
   14001315c:	xor    eax,eax
   14001315e:	jmp    0x140013197
   140013160:	cmp    edi,DWORD PTR [rsp+0x30]
   140013164:	je     0x140013192
   140013166:	test   esi,esi
   140013168:	je     0x140013192
   14001316a:	mov    rcx,QWORD PTR [rbp+0x0]
   14001316e:	mov    al,BYTE PTR [rcx]
   140013170:	inc    rcx
   140013173:	cmp    al,0x41
   140013175:	jl     0x14001317b
   140013177:	cmp    al,0x5a
   140013179:	jle    0x140013181
   14001317b:	sub    al,0x61
   14001317d:	cmp    al,0x19
   14001317f:	ja     0x140013185
   140013181:	inc    ebx
   140013183:	jmp    0x14001316e
   140013185:	mov    rcx,QWORD PTR [rbp+0x0]
   140013189:	call   0x1400093f0
   14001318e:	cmp    ebx,eax
   140013190:	je     0x14001315c
   140013192:	mov    eax,0x1
   140013197:	mov    rbx,QWORD PTR [rsp+0x38]
   14001319c:	mov    rbp,QWORD PTR [rsp+0x40]
   1400131a1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400131a6:	add    rsp,0x20
   1400131aa:	pop    rdi
   1400131ab:	ret    
   1400131ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400131b1:	mov    QWORD PTR [rsp+0x18],rbp
   1400131b6:	push   rdi
   1400131b7:	sub    rsp,0xc0
   1400131be:	mov    rax,QWORD PTR [rip+0xe24b]        # 0x140021410
   1400131c5:	xor    rax,rsp
   1400131c8:	mov    QWORD PTR [rsp+0xb0],rax
   1400131d0:	mov    rbx,rcx
   1400131d3:	call   0x14000d728
   1400131d8:	mov    rcx,rbx
   1400131db:	mov    rdi,rax
   1400131de:	call   0x140012ff8
   1400131e3:	mov    ecx,DWORD PTR [rdi+0x15c]
   1400131e9:	neg    ecx
   1400131eb:	lea    r8,[rsp+0x30]
   1400131f0:	mov    r9d,0x78
   1400131f6:	sbb    edx,edx
   1400131f8:	mov    ecx,eax
   1400131fa:	mov    ebx,eax
   1400131fc:	and    edx,0xfffff005
   140013202:	add    edx,0x1002
   140013208:	call   QWORD PTR [rip+0x505a]        # 0x140018268
   14001320e:	xor    ebp,ebp
   140013210:	test   eax,eax
   140013212:	jne    0x140013224
   140013214:	mov    DWORD PTR [rdi+0x150],ebp
   14001321a:	mov    eax,0x1
   14001321f:	jmp    0x140013454
   140013224:	mov    rcx,QWORD PTR [rdi+0x148]
   14001322b:	lea    rdx,[rsp+0x30]
   140013230:	call   0x140015c8c
   140013235:	test   eax,eax
   140013237:	jne    0x14001331c
   14001323d:	mov    eax,DWORD PTR [rdi+0x158]
   140013243:	lea    r8,[rsp+0x30]
   140013248:	mov    r9d,0x78
   14001324e:	neg    eax
   140013250:	mov    ecx,ebx
   140013252:	sbb    edx,edx
   140013254:	and    edx,0xfffff002
   14001325a:	add    edx,0x1001
   140013260:	call   QWORD PTR [rip+0x5002]        # 0x140018268
   140013266:	test   eax,eax
   140013268:	je     0x140013214
   14001326a:	mov    rcx,QWORD PTR [rdi+0x140]
   140013271:	lea    rdx,[rsp+0x30]
   140013276:	call   0x140015c8c
   14001327b:	test   eax,eax
   14001327d:	jne    0x140013294
   14001327f:	or     DWORD PTR [rdi+0x150],0x304
   140013289:	mov    DWORD PTR [rdi+0x160],ebx
   14001328f:	jmp    0x140013316
   140013294:	test   BYTE PTR [rdi+0x150],0x2
   14001329b:	jne    0x14001331c
   14001329d:	cmp    DWORD PTR [rdi+0x154],ebp
   1400132a3:	je     0x1400132ea
   1400132a5:	movsxd r8,DWORD PTR [rdi+0x154]
   1400132ac:	mov    rcx,QWORD PTR [rdi+0x140]
   1400132b3:	lea    rdx,[rsp+0x30]
   1400132b8:	call   0x140015e2c
   1400132bd:	test   eax,eax
   1400132bf:	jne    0x1400132ea
   1400132c1:	mov    rcx,QWORD PTR [rdi+0x140]
   1400132c8:	or     DWORD PTR [rdi+0x150],0x2
   1400132cf:	mov    DWORD PTR [rdi+0x164],ebx
   1400132d5:	call   0x1400093f0
   1400132da:	cmp    eax,DWORD PTR [rdi+0x154]
   1400132e0:	jne    0x14001331c
   1400132e2:	mov    DWORD PTR [rdi+0x160],ebx
   1400132e8:	jmp    0x14001331c
   1400132ea:	mov    eax,DWORD PTR [rdi+0x150]
   1400132f0:	test   al,0x1
   1400132f2:	jne    0x14001331c
   1400132f4:	mov    edx,ebp
   1400132f6:	lea    rcx,[rip+0x7d33]        # 0x14001b030
   1400132fd:	cmp    bx,WORD PTR [rcx]
   140013300:	je     0x14001331c
   140013302:	inc    edx
   140013304:	add    rcx,0x2
   140013308:	cmp    edx,0xa
   14001330b:	jb     0x1400132fd
   14001330d:	or     eax,0x1
   140013310:	mov    DWORD PTR [rdi+0x150],eax
   140013316:	mov    DWORD PTR [rdi+0x164],ebx
   14001331c:	mov    eax,DWORD PTR [rdi+0x150]
   140013322:	mov    ecx,0x300
   140013327:	and    eax,ecx
   140013329:	cmp    eax,ecx
   14001332b:	je     0x140013446
   140013331:	mov    eax,DWORD PTR [rdi+0x158]
   140013337:	lea    r8,[rsp+0x30]
   14001333c:	mov    r9d,0x78
   140013342:	neg    eax
   140013344:	mov    ecx,ebx
   140013346:	sbb    edx,edx
   140013348:	and    edx,0xfffff002
   14001334e:	add    edx,0x1001
   140013354:	call   QWORD PTR [rip+0x4f0e]        # 0x140018268
   14001335a:	test   eax,eax
   14001335c:	je     0x140013214
   140013362:	mov    rcx,QWORD PTR [rdi+0x140]
   140013369:	lea    rdx,[rsp+0x30]
   14001336e:	call   0x140015c8c
   140013373:	test   eax,eax
   140013375:	jne    0x1400133e4
   140013377:	bts    DWORD PTR [rdi+0x150],0x9
   14001337f:	mov    eax,DWORD PTR [rdi+0x150]
   140013385:	cmp    DWORD PTR [rdi+0x158],ebp
   14001338b:	je     0x140013399
   14001338d:	bts    eax,0x8
   140013391:	mov    DWORD PTR [rdi+0x150],eax
   140013397:	jmp    0x1400133d4
   140013399:	cmp    DWORD PTR [rdi+0x154],ebp
   14001339f:	je     0x1400133cc
   1400133a1:	mov    rcx,QWORD PTR [rdi+0x140]
   1400133a8:	call   0x1400093f0
   1400133ad:	cmp    eax,DWORD PTR [rdi+0x154]
   1400133b3:	jne    0x1400133cc
   1400133b5:	lea    r8,[rdi+0x140]
   1400133bc:	mov    edx,0x1
   1400133c1:	mov    ecx,ebx
   1400133c3:	call   0x14001311c
   1400133c8:	test   eax,eax
   1400133ca:	je     0x140013446
   1400133cc:	bts    DWORD PTR [rdi+0x150],0x8
   1400133d4:	cmp    DWORD PTR [rdi+0x160],ebp
   1400133da:	jne    0x140013446
   1400133dc:	mov    DWORD PTR [rdi+0x160],ebx
   1400133e2:	jmp    0x140013446
   1400133e4:	cmp    DWORD PTR [rdi+0x158],ebp
   1400133ea:	jne    0x140013446
   1400133ec:	cmp    DWORD PTR [rdi+0x154],ebp
   1400133f2:	je     0x140013446
   1400133f4:	mov    rcx,QWORD PTR [rdi+0x140]
   1400133fb:	lea    rdx,[rsp+0x30]
   140013400:	call   0x140015c8c
   140013405:	test   eax,eax
   140013407:	jne    0x140013446
   140013409:	mov    ecx,ebx
   14001340b:	lea    r9d,[rax+0x2]
   14001340f:	lea    r8,[rsp+0x20]
   140013414:	and    ecx,0x3ff
   14001341a:	mov    edx,0x20000001
   14001341f:	bts    ecx,0xa
   140013423:	call   QWORD PTR [rip+0x4e2f]        # 0x140018258
   140013429:	test   eax,eax
   14001342b:	je     0x140013446
   14001342d:	mov    eax,DWORD PTR [rdi+0x160]
   140013433:	bts    DWORD PTR [rdi+0x150],0x8
   14001343b:	test   eax,eax
   14001343d:	cmove  eax,ebx
   140013440:	mov    DWORD PTR [rdi+0x160],eax
   140013446:	mov    eax,DWORD PTR [rdi+0x150]
   14001344c:	shr    eax,0x2
   14001344f:	not    eax
   140013451:	and    eax,0x1
   140013454:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001345c:	xor    rcx,rsp
   14001345f:	call   0x140007d20
   140013464:	lea    r11,[rsp+0xc0]
   14001346c:	mov    rbx,QWORD PTR [r11+0x18]
   140013470:	mov    rbp,QWORD PTR [r11+0x20]
   140013474:	mov    rsp,r11
   140013477:	pop    rdi
   140013478:	ret    
   140013479:	int3   
   14001347a:	int3   
   14001347b:	int3   
   14001347c:	mov    QWORD PTR [rsp+0x10],rbx
   140013481:	push   rdi
   140013482:	sub    rsp,0xc0
   140013489:	mov    rax,QWORD PTR [rip+0xdf80]        # 0x140021410
   140013490:	xor    rax,rsp
   140013493:	mov    QWORD PTR [rsp+0xb0],rax
   14001349b:	mov    rbx,rcx
   14001349e:	call   0x14000d728
   1400134a3:	mov    rcx,rbx
   1400134a6:	mov    rdi,rax
   1400134a9:	call   0x140012ff8
   1400134ae:	mov    ecx,DWORD PTR [rdi+0x158]
   1400134b4:	neg    ecx
   1400134b6:	lea    r8,[rsp+0x30]
   1400134bb:	mov    r9d,0x78
   1400134c1:	sbb    edx,edx
   1400134c3:	mov    ecx,eax
   1400134c5:	mov    ebx,eax
   1400134c7:	and    edx,0xfffff002
   1400134cd:	add    edx,0x1001
   1400134d3:	call   QWORD PTR [rip+0x4d8f]        # 0x140018268
   1400134d9:	test   eax,eax
   1400134db:	jne    0x1400134ed
   1400134dd:	and    DWORD PTR [rdi+0x150],eax
   1400134e3:	mov    eax,0x1
   1400134e8:	jmp    0x140013589
   1400134ed:	mov    rcx,QWORD PTR [rdi+0x140]
   1400134f4:	lea    rdx,[rsp+0x30]
   1400134f9:	call   0x140015c8c
   1400134fe:	test   eax,eax
   140013500:	jne    0x14001351d
   140013502:	cmp    DWORD PTR [rdi+0x158],eax
   140013508:	jne    0x140013568
   14001350a:	lea    r8,[rdi+0x140]
   140013511:	lea    edx,[rax+0x1]
   140013514:	mov    ecx,ebx
   140013516:	call   0x14001311c
   14001351b:	jmp    0x140013564
   14001351d:	cmp    DWORD PTR [rdi+0x158],0x0
   140013524:	jne    0x14001357b
   140013526:	cmp    DWORD PTR [rdi+0x154],0x0
   14001352d:	je     0x14001357b
   14001352f:	mov    rcx,QWORD PTR [rdi+0x140]
   140013536:	lea    rdx,[rsp+0x30]
   14001353b:	call   0x140015c8c
   140013540:	test   eax,eax
   140013542:	jne    0x14001357b
   140013544:	mov    ecx,ebx
   140013546:	lea    r9d,[rax+0x2]
   14001354a:	lea    r8,[rsp+0x20]
   14001354f:	and    ecx,0x3ff
   140013555:	mov    edx,0x20000001
   14001355a:	bts    ecx,0xa
   14001355e:	call   QWORD PTR [rip+0x4cf4]        # 0x140018258
   140013564:	test   eax,eax
   140013566:	je     0x14001357b
   140013568:	or     DWORD PTR [rdi+0x150],0x4
   14001356f:	mov    DWORD PTR [rdi+0x160],ebx
   140013575:	mov    DWORD PTR [rdi+0x164],ebx
   14001357b:	mov    eax,DWORD PTR [rdi+0x150]
   140013581:	shr    eax,0x2
   140013584:	not    eax
   140013586:	and    eax,0x1
   140013589:	mov    rcx,QWORD PTR [rsp+0xb0]
   140013591:	xor    rcx,rsp
   140013594:	call   0x140007d20
   140013599:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400135a1:	add    rsp,0xc0
   1400135a8:	pop    rdi
   1400135a9:	ret    
   1400135aa:	int3   
   1400135ab:	int3   
   1400135ac:	rex push rbx
   1400135ae:	sub    rsp,0x20
   1400135b2:	mov    rbx,rcx
   1400135b5:	mov    rcx,QWORD PTR [rcx]
   1400135b8:	call   0x1400093f0
   1400135bd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400135c1:	xor    edx,edx
   1400135c3:	cmp    rax,0x3
   1400135c7:	sete   dl
   1400135ca:	mov    DWORD PTR [rbx+0x18],edx
   1400135cd:	call   0x1400093f0
   1400135d2:	xor    ecx,ecx
   1400135d4:	cmp    rax,0x3
   1400135d8:	sete   cl
   1400135db:	and    DWORD PTR [rbx+0x20],0x0
   1400135df:	cmp    DWORD PTR [rbx+0x18],0x0
   1400135e3:	mov    DWORD PTR [rbx+0x1c],ecx
   1400135e6:	je     0x140013624
   1400135e8:	mov    edx,0x2
   1400135ed:	mov    DWORD PTR [rbx+0x14],edx
   1400135f0:	lea    rcx,[rip+0xfffffffffffffbb5]        # 0x1400131ac
   1400135f7:	mov    edx,0x1
   1400135fc:	call   QWORD PTR [rip+0x4c6e]        # 0x140018270
   140013602:	test   DWORD PTR [rbx+0x10],0x100
   140013609:	je     0x14001361a
   14001360b:	test   DWORD PTR [rbx+0x10],0x200
   140013612:	je     0x14001361a
   140013614:	test   BYTE PTR [rbx+0x10],0x7
   140013618:	jne    0x14001361e
   14001361a:	and    DWORD PTR [rbx+0x10],0x0
   14001361e:	add    rsp,0x20
   140013622:	pop    rbx
   140013623:	ret    
   140013624:	mov    rax,QWORD PTR [rbx]
   140013627:	xor    edx,edx
   140013629:	mov    cl,BYTE PTR [rax]
   14001362b:	inc    rax
   14001362e:	cmp    cl,0x41
   140013631:	jl     0x140013638
   140013633:	cmp    cl,0x5a
   140013636:	jle    0x140013640
   140013638:	sub    cl,0x61
   14001363b:	cmp    cl,0x19
   14001363e:	ja     0x1400135ed
   140013640:	inc    edx
   140013642:	jmp    0x140013629
   140013644:	rex push rbx
   140013646:	sub    rsp,0x20
   14001364a:	mov    rbx,rcx
   14001364d:	mov    rcx,QWORD PTR [rcx]
   140013650:	call   0x1400093f0
   140013655:	xor    edx,edx
   140013657:	cmp    rax,0x3
   14001365b:	sete   dl
   14001365e:	mov    DWORD PTR [rbx+0x18],edx
   140013661:	test   edx,edx
   140013663:	je     0x14001368f
   140013665:	mov    edx,0x2
   14001366a:	mov    DWORD PTR [rbx+0x14],edx
   14001366d:	lea    rcx,[rip+0xfffffffffffffe08]        # 0x14001347c
   140013674:	mov    edx,0x1
   140013679:	call   QWORD PTR [rip+0x4bf1]        # 0x140018270
   14001367f:	test   BYTE PTR [rbx+0x10],0x4
   140013683:	jne    0x140013689
   140013685:	and    DWORD PTR [rbx+0x10],0x0
   140013689:	add    rsp,0x20
   14001368d:	pop    rbx
   14001368e:	ret    
   14001368f:	mov    rax,QWORD PTR [rbx]
   140013692:	xor    edx,edx
   140013694:	mov    cl,BYTE PTR [rax]
   140013696:	inc    rax
   140013699:	cmp    cl,0x41
   14001369c:	jl     0x1400136a3
   14001369e:	cmp    cl,0x5a
   1400136a1:	jle    0x1400136ab
   1400136a3:	sub    cl,0x61
   1400136a6:	cmp    cl,0x19
   1400136a9:	ja     0x14001366a
   1400136ab:	inc    edx
   1400136ad:	jmp    0x140013694
   1400136af:	int3   
   1400136b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400136b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400136ba:	push   rsi
   1400136bb:	push   rdi
   1400136bc:	push   r12
   1400136be:	sub    rsp,0x30
   1400136c2:	mov    r12,r8
   1400136c5:	mov    rbp,rdx
   1400136c8:	mov    rsi,rcx
   1400136cb:	call   0x14000d728
   1400136d0:	lea    rbx,[rax+0x140]
   1400136d7:	test   rsi,rsi
   1400136da:	jne    0x1400136e8
   1400136dc:	or     DWORD PTR [rbx+0x10],0x104
   1400136e3:	jmp    0x1400137cb
   1400136e8:	lea    rax,[rsi+0x40]
   1400136ec:	mov    QWORD PTR [rbx],rsi
   1400136ef:	mov    QWORD PTR [rbx+0x8],rax
   1400136f3:	test   rax,rax
   1400136f6:	je     0x140013712
   1400136f8:	cmp    BYTE PTR [rax],0x0
   1400136fb:	je     0x140013712
   1400136fd:	lea    r8,[rbx+0x8]
   140013701:	lea    rcx,[rip+0x77b8]        # 0x14001aec0
   140013708:	mov    edx,0x16
   14001370d:	call   0x140012f60
   140013712:	mov    rax,QWORD PTR [rbx]
   140013715:	and    DWORD PTR [rbx+0x10],0x0
   140013719:	test   rax,rax
   14001371c:	je     0x140013787
   14001371e:	cmp    BYTE PTR [rax],0x0
   140013721:	je     0x140013787
   140013723:	mov    rax,QWORD PTR [rbx+0x8]
   140013727:	test   rax,rax
   14001372a:	je     0x14001373b
   14001372c:	cmp    BYTE PTR [rax],0x0
   14001372f:	je     0x14001373b
   140013731:	mov    rcx,rbx
   140013734:	call   0x1400135ac
   140013739:	jmp    0x140013743
   14001373b:	mov    rcx,rbx
   14001373e:	call   0x140013644
   140013743:	cmp    DWORD PTR [rbx+0x10],0x0
   140013747:	jne    0x1400137e1
   14001374d:	lea    rcx,[rip+0x735c]        # 0x14001aab0
   140013754:	mov    r8,rbx
   140013757:	mov    edx,0x40
   14001375c:	call   0x140012f60
   140013761:	test   eax,eax
   140013763:	je     0x1400137d7
   140013765:	mov    rax,QWORD PTR [rbx+0x8]
   140013769:	test   rax,rax
   14001376c:	je     0x14001377d
   14001376e:	cmp    BYTE PTR [rax],0x0
   140013771:	je     0x14001377d
   140013773:	mov    rcx,rbx
   140013776:	call   0x1400135ac
   14001377b:	jmp    0x1400137d7
   14001377d:	mov    rcx,rbx
   140013780:	call   0x140013644
   140013785:	jmp    0x1400137d7
   140013787:	mov    rcx,QWORD PTR [rbx+0x8]
   14001378b:	test   rcx,rcx
   14001378e:	je     0x1400137c4
   140013790:	cmp    BYTE PTR [rcx],0x0
   140013793:	je     0x1400137c4
   140013795:	call   0x1400093f0
   14001379a:	xor    ecx,ecx
   14001379c:	mov    edx,0x1
   1400137a1:	cmp    rax,0x3
   1400137a5:	sete   cl
   1400137a8:	mov    DWORD PTR [rbx+0x1c],ecx
   1400137ab:	lea    rcx,[rip+0xfffffffffffff882]        # 0x140013034
   1400137b2:	call   QWORD PTR [rip+0x4ab8]        # 0x140018270
   1400137b8:	test   BYTE PTR [rbx+0x10],0x4
   1400137bc:	jne    0x1400137d7
   1400137be:	and    DWORD PTR [rbx+0x10],0x0
   1400137c2:	jmp    0x1400137d7
   1400137c4:	mov    DWORD PTR [rbx+0x10],0x104
   1400137cb:	call   QWORD PTR [rip+0x4a8f]        # 0x140018260
   1400137d1:	mov    DWORD PTR [rbx+0x20],eax
   1400137d4:	mov    DWORD PTR [rbx+0x24],eax
   1400137d7:	cmp    DWORD PTR [rbx+0x10],0x0
   1400137db:	je     0x140013978
   1400137e1:	lea    rax,[rsi+0x80]
   1400137e8:	neg    rsi
   1400137eb:	sbb    rdi,rdi
   1400137ee:	and    rdi,rax
   1400137f1:	je     0x14001384d
   1400137f3:	cmp    BYTE PTR [rdi],0x0
   1400137f6:	je     0x14001384d
   1400137f8:	lea    rdx,[rip+0x7849]        # 0x14001b048
   1400137ff:	mov    rcx,rdi
   140013802:	call   0x14000e2c0
   140013807:	test   eax,eax
   140013809:	je     0x14001384d
   14001380b:	lea    rdx,[rip+0x7832]        # 0x14001b044
   140013812:	mov    rcx,rdi
   140013815:	call   0x14000e2c0
   14001381a:	test   eax,eax
   14001381c:	jne    0x140013843
   14001381e:	mov    ecx,DWORD PTR [rbx+0x24]
   140013821:	lea    r9d,[rax+0x2]
   140013825:	lea    r8,[rsp+0x50]
   14001382a:	mov    edx,0x2000000b
   14001382f:	call   QWORD PTR [rip+0x4a23]        # 0x140018258
   140013835:	test   eax,eax
   140013837:	je     0x140013978
   14001383d:	mov    edi,DWORD PTR [rsp+0x50]
   140013841:	jmp    0x14001387e
   140013843:	mov    rcx,rdi
   140013846:	call   0x140015cd4
   14001384b:	jmp    0x14001387c
   14001384d:	mov    ecx,DWORD PTR [rbx+0x24]
   140013850:	lea    r8,[rsp+0x50]
   140013855:	mov    r9d,0x2
   14001385b:	mov    edx,0x20001004
   140013860:	call   QWORD PTR [rip+0x49f2]        # 0x140018258
   140013866:	test   eax,eax
   140013868:	je     0x140013978
   14001386e:	mov    edi,DWORD PTR [rsp+0x50]
   140013872:	test   edi,edi
   140013874:	jne    0x140013886
   140013876:	call   QWORD PTR [rip+0x48fc]        # 0x140018178
   14001387c:	mov    edi,eax
   14001387e:	test   edi,edi
   140013880:	je     0x140013978
   140013886:	cmp    edi,0xfde8
   14001388c:	je     0x140013978
   140013892:	cmp    edi,0xfde9
   140013898:	je     0x140013978
   14001389e:	movzx  ecx,di
   1400138a1:	call   QWORD PTR [rip+0x48e1]        # 0x140018188
   1400138a7:	test   eax,eax
   1400138a9:	je     0x140013978
   1400138af:	mov    ecx,DWORD PTR [rbx+0x20]
   1400138b2:	mov    edx,0x1
   1400138b7:	call   QWORD PTR [rip+0x49bb]        # 0x140018278
   1400138bd:	test   eax,eax
   1400138bf:	je     0x140013978
   1400138c5:	test   rbp,rbp
   1400138c8:	je     0x1400138de
   1400138ca:	movzx  eax,WORD PTR [rbx+0x20]
   1400138ce:	mov    WORD PTR [rbp+0x0],ax
   1400138d2:	movzx  eax,WORD PTR [rbx+0x24]
   1400138d6:	mov    WORD PTR [rbp+0x4],di
   1400138da:	mov    WORD PTR [rbp+0x2],ax
   1400138de:	test   r12,r12
   1400138e1:	je     0x140013971
   1400138e7:	mov    eax,0x814
   1400138ec:	cmp    WORD PTR [rbp+0x0],ax
   1400138f0:	jne    0x140013920
   1400138f2:	lea    r8,[rip+0x7757]        # 0x14001b050
   1400138f9:	mov    edx,0x40
   1400138fe:	mov    rcx,r12
   140013901:	call   0x14000db84
   140013906:	test   eax,eax
   140013908:	je     0x14001393b
   14001390a:	and    QWORD PTR [rsp+0x20],0x0
   140013910:	xor    r9d,r9d
   140013913:	xor    r8d,r8d
   140013916:	xor    edx,edx
   140013918:	xor    ecx,ecx
   14001391a:	call   0x14000da58
   14001391f:	int3   
   140013920:	mov    ecx,DWORD PTR [rbx+0x20]
   140013923:	mov    r9d,0x40
   140013929:	mov    r8,r12
   14001392c:	mov    edx,0x1001
   140013931:	call   QWORD PTR [rip+0x4931]        # 0x140018268
   140013937:	test   eax,eax
   140013939:	je     0x140013978
   14001393b:	mov    ecx,DWORD PTR [rbx+0x24]
   14001393e:	lea    r8,[r12+0x40]
   140013943:	mov    edx,0x1002
   140013948:	mov    r9d,0x40
   14001394e:	call   QWORD PTR [rip+0x4914]        # 0x140018268
   140013954:	test   eax,eax
   140013956:	je     0x140013978
   140013958:	mov    r9d,0xa
   14001395e:	lea    rdx,[r12+0x80]
   140013966:	mov    ecx,edi
   140013968:	lea    r8d,[r9+0x6]
   14001396c:	call   0x14000c1ec
   140013971:	mov    eax,0x1
   140013976:	jmp    0x14001397a
   140013978:	xor    eax,eax
   14001397a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001397f:	mov    rbp,QWORD PTR [rsp+0x60]
   140013984:	add    rsp,0x30
   140013988:	pop    r12
   14001398a:	pop    rdi
   14001398b:	pop    rsi
   14001398c:	ret    
   14001398d:	int3   
   14001398e:	int3   
   14001398f:	int3   
   140013990:	int3   
   140013991:	int3   
   140013992:	int3   
   140013993:	int3   
   140013994:	int3   
   140013995:	int3   
   140013996:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400139a0:	sub    rdx,rcx
   1400139a3:	cmp    r8,0x8
   1400139a7:	jb     0x1400139cb
   1400139a9:	test   cl,0x7
   1400139ac:	je     0x1400139c2
   1400139ae:	xchg   ax,ax
   1400139b0:	mov    al,BYTE PTR [rcx]
   1400139b2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400139b5:	jne    0x1400139e3
   1400139b7:	inc    rcx
   1400139ba:	dec    r8
   1400139bd:	test   cl,0x7
   1400139c0:	jne    0x1400139b0
   1400139c2:	mov    r9,r8
   1400139c5:	shr    r9,0x3
   1400139c9:	jne    0x1400139ea
   1400139cb:	test   r8,r8
   1400139ce:	je     0x1400139df
   1400139d0:	mov    al,BYTE PTR [rcx]
   1400139d2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400139d5:	jne    0x1400139e3
   1400139d7:	inc    rcx
   1400139da:	dec    r8
   1400139dd:	jne    0x1400139d0
   1400139df:	xor    rax,rax
   1400139e2:	ret    
   1400139e3:	sbb    eax,eax
   1400139e5:	sbb    eax,0xffffffff
   1400139e8:	ret    
   1400139e9:	nop
   1400139ea:	shr    r9,0x2
   1400139ee:	je     0x140013a27
   1400139f0:	mov    rax,QWORD PTR [rcx]
   1400139f3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400139f7:	jne    0x140013a54
   1400139f9:	mov    rax,QWORD PTR [rcx+0x8]
   1400139fd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140013a02:	jne    0x140013a50
   140013a04:	mov    rax,QWORD PTR [rcx+0x10]
   140013a08:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140013a0d:	jne    0x140013a4c
   140013a0f:	mov    rax,QWORD PTR [rcx+0x18]
   140013a13:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140013a18:	jne    0x140013a48
   140013a1a:	add    rcx,0x20
   140013a1e:	dec    r9
   140013a21:	jne    0x1400139f0
   140013a23:	and    r8,0x1f
   140013a27:	mov    r9,r8
   140013a2a:	shr    r9,0x3
   140013a2e:	je     0x1400139cb
   140013a30:	mov    rax,QWORD PTR [rcx]
   140013a33:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140013a37:	jne    0x140013a54
   140013a39:	add    rcx,0x8
   140013a3d:	dec    r9
   140013a40:	jne    0x140013a30
   140013a42:	and    r8,0x7
   140013a46:	jmp    0x1400139cb
   140013a48:	add    rcx,0x8
   140013a4c:	add    rcx,0x8
   140013a50:	add    rcx,0x8
   140013a54:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140013a58:	bswap  rax
   140013a5b:	bswap  rcx
   140013a5e:	cmp    rax,rcx
   140013a61:	sbb    eax,eax
   140013a63:	sbb    eax,0xffffffff
   140013a66:	ret    
   140013a67:	int3   
   140013a68:	int3   
   140013a69:	int3   
   140013a6a:	int3   
   140013a6b:	int3   
   140013a6c:	int3   
   140013a6d:	int3   
   140013a6e:	int3   
   140013a6f:	int3   
   140013a70:	int3   
   140013a71:	int3   
   140013a72:	int3   
   140013a73:	int3   
   140013a74:	int3   
   140013a75:	int3   
   140013a76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013a80:	test   r8,r8
   140013a83:	je     0x140013afa
   140013a85:	sub    rdx,rcx
   140013a88:	mov    r9,rdx
   140013a8b:	movabs r11,0x8101010101010100
   140013a95:	test   cl,0x7
   140013a98:	je     0x140013ab9
   140013a9a:	mov    al,BYTE PTR [rcx]
   140013a9c:	mov    dl,BYTE PTR [rcx+r9*1]
   140013aa0:	inc    rcx
   140013aa3:	cmp    al,dl
   140013aa5:	jne    0x140013afe
   140013aa7:	dec    r8
   140013aaa:	je     0x140013afa
   140013aac:	test   al,al
   140013aae:	je     0x140013afa
   140013ab0:	test   rcx,0x7
   140013ab7:	jne    0x140013a9a
   140013ab9:	lea    rdx,[rcx+r9*1]
   140013abd:	and    dx,0xfff
   140013ac2:	cmp    dx,0xff8
   140013ac7:	ja     0x140013a9a
   140013ac9:	mov    rax,QWORD PTR [rcx]
   140013acc:	mov    rdx,QWORD PTR [rcx+r9*1]
   140013ad0:	cmp    rax,rdx
   140013ad3:	jne    0x140013a9a
   140013ad5:	add    rcx,0x8
   140013ad9:	sub    r8,0x8
   140013add:	movabs r10,0x7efefefefefefeff
   140013ae7:	jbe    0x140013afa
   140013ae9:	xor    rax,0xffffffffffffffff
   140013aed:	add    r10,rdx
   140013af0:	xor    rax,r10
   140013af3:	test   r11,rax
   140013af6:	je     0x140013ab9
   140013af8:	jmp    0x140013b06
   140013afa:	xor    rax,rax
   140013afd:	ret    
   140013afe:	sbb    rax,rax
   140013b01:	sbb    rax,0xffffffffffffffff
   140013b05:	ret    
   140013b06:	test   dl,dl
   140013b08:	je     0x140013b31
   140013b0a:	test   dh,dh
   140013b0c:	je     0x140013b31
   140013b0e:	shr    rdx,0x10
   140013b12:	test   dl,dl
   140013b14:	je     0x140013b31
   140013b16:	test   dh,dh
   140013b18:	je     0x140013b31
   140013b1a:	shr    rdx,0x10
   140013b1e:	test   dl,dl
   140013b20:	je     0x140013b31
   140013b22:	test   dh,dh
   140013b24:	je     0x140013b31
   140013b26:	shr    edx,0x10
   140013b29:	test   dl,dl
   140013b2b:	je     0x140013b31
   140013b2d:	test   dh,dh
   140013b2f:	jne    0x140013ab9
   140013b31:	xor    rax,rax
   140013b34:	ret    
   140013b35:	int3   
   140013b36:	int3   
   140013b37:	int3   
   140013b38:	sub    rsp,0x38
   140013b3c:	mov    rax,QWORD PTR [rip+0xd8cd]        # 0x140021410
   140013b43:	xor    rax,rsp
   140013b46:	mov    QWORD PTR [rsp+0x20],rax
   140013b4b:	mov    al,BYTE PTR [rdx]
   140013b4d:	xor    r11d,r11d
   140013b50:	mov    r10,rdx
   140013b53:	mov    QWORD PTR [rsp],r11
   140013b57:	mov    QWORD PTR [rsp+0x8],r11
   140013b5c:	mov    QWORD PTR [rsp+0x10],r11
   140013b61:	mov    QWORD PTR [rsp+0x18],r11
   140013b66:	mov    r9,rcx
   140013b69:	jmp    0x140013b8c
   140013b6b:	movzx  r8d,al
   140013b6f:	movzx  eax,al
   140013b72:	mov    edx,0x1
   140013b77:	and    eax,0x7
   140013b7a:	shr    r8,0x3
   140013b7e:	mov    cl,al
   140013b80:	shl    dl,cl
   140013b82:	or     BYTE PTR [rsp+r8*1],dl
   140013b86:	inc    r10
   140013b89:	mov    al,BYTE PTR [r10]
   140013b8c:	test   al,al
   140013b8e:	jne    0x140013b6b
   140013b90:	jmp    0x140013bb0
   140013b92:	movzx  ecx,r8b
   140013b96:	movzx  eax,r8b
   140013b9a:	mov    edx,0x1
   140013b9f:	and    ecx,0x7
   140013ba2:	shr    rax,0x3
   140013ba6:	shl    edx,cl
   140013ba8:	test   BYTE PTR [rsp+rax*1],dl
   140013bab:	jne    0x140013bcc
   140013bad:	inc    r9
   140013bb0:	mov    r8b,BYTE PTR [r9]
   140013bb3:	test   r8b,r8b
   140013bb6:	jne    0x140013b92
   140013bb8:	xor    eax,eax
   140013bba:	mov    rcx,QWORD PTR [rsp+0x20]
   140013bbf:	xor    rcx,rsp
   140013bc2:	call   0x140007d20
   140013bc7:	add    rsp,0x38
   140013bcb:	ret    
   140013bcc:	mov    rax,r9
   140013bcf:	jmp    0x140013bba
   140013bd1:	int3   
   140013bd2:	int3   
   140013bd3:	int3   
   140013bd4:	int3   
   140013bd5:	int3   
   140013bd6:	int3   
   140013bd7:	int3   
   140013bd8:	int3   
   140013bd9:	int3   
   140013bda:	int3   
   140013bdb:	int3   
   140013bdc:	int3   
   140013bdd:	int3   
   140013bde:	int3   
   140013bdf:	int3   
   140013be0:	int3   
   140013be1:	int3   
   140013be2:	int3   
   140013be3:	int3   
   140013be4:	int3   
   140013be5:	int3   
   140013be6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013bf0:	sub    rsp,0x28
   140013bf4:	mov    QWORD PTR [rsp+0x30],rcx
   140013bf9:	mov    QWORD PTR [rsp+0x38],rdx
   140013bfe:	mov    DWORD PTR [rsp+0x40],r8d
   140013c03:	mov    rdx,QWORD PTR [rdx]
   140013c06:	mov    rax,rcx
   140013c09:	call   0x140013c90
   140013c0e:	call   rax
   140013c10:	call   0x140013cc0
   140013c15:	mov    rcx,rax
   140013c18:	mov    rdx,QWORD PTR [rsp+0x38]
   140013c1d:	mov    rdx,QWORD PTR [rdx]
   140013c20:	mov    r8d,0x2
   140013c26:	call   0x140013c90
   140013c2b:	add    rsp,0x28
   140013c2f:	ret    
   140013c30:	mov    rax,QWORD PTR [rsp]
   140013c34:	mov    QWORD PTR [rcx],rax
   140013c37:	ret    
   140013c38:	neg    rcx
   140013c3b:	sbb    eax,eax
   140013c3d:	and    eax,0x1
   140013c40:	ret    
   140013c41:	int3   
   140013c42:	int3   
   140013c43:	int3   
   140013c44:	int3   
   140013c45:	int3   
   140013c46:	int3   
   140013c47:	int3   
   140013c48:	int3   
   140013c49:	int3   
   140013c4a:	int3   
   140013c4b:	int3   
   140013c4c:	int3   
   140013c4d:	int3   
   140013c4e:	int3   
   140013c4f:	int3   
   140013c50:	int3   
   140013c51:	int3   
   140013c52:	int3   
   140013c53:	int3   
   140013c54:	int3   
   140013c55:	int3   
   140013c56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013c60:	sub    rsp,0x4d8
   140013c67:	xor    r8,r8
   140013c6a:	xor    r9,r9
   140013c6d:	mov    QWORD PTR [rsp+0x20],rsp
   140013c72:	mov    QWORD PTR [rsp+0x28],r8
   140013c77:	call   0x140016e74
   140013c7c:	add    rsp,0x4d8
   140013c83:	ret    
   140013c84:	int3   
   140013c85:	int3   
   140013c86:	int3   
   140013c87:	int3   
   140013c88:	int3   
   140013c89:	int3   
   140013c8a:	nop    WORD PTR [rax+rax*1+0x0]
   140013c90:	mov    QWORD PTR [rsp+0x8],rcx
   140013c95:	mov    QWORD PTR [rsp+0x18],rdx
   140013c9a:	mov    DWORD PTR [rsp+0x10],r8d
   140013c9f:	mov    r9,0x19930520
   140013ca6:	jmp    0x140013cb0
   140013ca8:	int3   
   140013ca9:	int3   
   140013caa:	int3   
   140013cab:	int3   
   140013cac:	int3   
   140013cad:	int3   
   140013cae:	xchg   ax,ax
   140013cb0:	ret    
   140013cb1:	int3   
   140013cb2:	int3   
   140013cb3:	int3   
   140013cb4:	int3   
   140013cb5:	int3   
   140013cb6:	int3   
   140013cb7:	nop    WORD PTR [rax+rax*1+0x0]
   140013cc0:	ret    
   140013cc1:	int3   
   140013cc2:	int3   
   140013cc3:	int3   
   140013cc4:	xor    r8d,r8d
   140013cc7:	mov    eax,r8d
   140013cca:	test   rdx,rdx
   140013ccd:	je     0x140013ce1
   140013ccf:	cmp    WORD PTR [rcx],r8w
   140013cd3:	je     0x140013ce1
   140013cd5:	inc    rax
   140013cd8:	add    rcx,0x2
   140013cdc:	cmp    rax,rdx
   140013cdf:	jb     0x140013ccf
   140013ce1:	repz ret 
   140013ce3:	int3   
   140013ce4:	mov    QWORD PTR [rsp+0x8],rbx
   140013ce9:	push   rdi
   140013cea:	sub    rsp,0x20
   140013cee:	mov    rbx,r8
   140013cf1:	mov    rdi,rdx
   140013cf4:	test   rcx,rcx
   140013cf7:	je     0x140013d16
   140013cf9:	xor    edx,edx
   140013cfb:	lea    rax,[rdx-0x20]
   140013cff:	div    rcx
   140013d02:	cmp    rax,rdi
   140013d05:	jae    0x140013d16
   140013d07:	call   0x140008e40
   140013d0c:	mov    DWORD PTR [rax],0xc
   140013d12:	xor    eax,eax
   140013d14:	jmp    0x140013d73
   140013d16:	imul   rdi,rcx
   140013d1a:	mov    eax,0x1
   140013d1f:	test   rdi,rdi
   140013d22:	cmove  rdi,rax
   140013d26:	xor    eax,eax
   140013d28:	cmp    rdi,0xffffffffffffffe0
   140013d2c:	ja     0x140013d46
   140013d2e:	mov    rcx,QWORD PTR [rip+0xf8d3]        # 0x140023608
   140013d35:	lea    edx,[rax+0x8]
   140013d38:	mov    r8,rdi
   140013d3b:	call   QWORD PTR [rip+0x43ef]        # 0x140018130
   140013d41:	test   rax,rax
   140013d44:	jne    0x140013d73
   140013d46:	cmp    DWORD PTR [rip+0x103c3],0x0        # 0x140024110
   140013d4d:	je     0x140013d68
   140013d4f:	mov    rcx,rdi
   140013d52:	call   0x14000e378
   140013d57:	test   eax,eax
   140013d59:	jne    0x140013d26
   140013d5b:	test   rbx,rbx
   140013d5e:	je     0x140013d12
   140013d60:	mov    DWORD PTR [rbx],0xc
   140013d66:	jmp    0x140013d12
   140013d68:	test   rbx,rbx
   140013d6b:	je     0x140013d73
   140013d6d:	mov    DWORD PTR [rbx],0xc
   140013d73:	mov    rbx,QWORD PTR [rsp+0x30]
   140013d78:	add    rsp,0x20
   140013d7c:	pop    rdi
   140013d7d:	ret    
   140013d7e:	int3   
   140013d7f:	int3   
   140013d80:	mov    QWORD PTR [rsp+0x8],rbx
   140013d85:	mov    QWORD PTR [rsp+0x10],rsi
   140013d8a:	push   rdi
   140013d8b:	sub    rsp,0x20
   140013d8f:	mov    rbx,rdx
   140013d92:	mov    rdi,rcx
   140013d95:	test   rcx,rcx
   140013d98:	jne    0x140013da4
   140013d9a:	mov    rcx,rdx
   140013d9d:	call   0x14000abd4
   140013da2:	jmp    0x140013e0e
   140013da4:	test   rdx,rdx
   140013da7:	jne    0x140013db0
   140013da9:	call   0x140008584
   140013dae:	jmp    0x140013e0c
   140013db0:	cmp    rdx,0xffffffffffffffe0
   140013db4:	ja     0x140013df9
   140013db6:	mov    rcx,QWORD PTR [rip+0xf84b]        # 0x140023608
   140013dbd:	mov    eax,0x1
   140013dc2:	test   rbx,rbx
   140013dc5:	cmove  rbx,rax
   140013dc9:	mov    r8,rdi
   140013dcc:	xor    edx,edx
   140013dce:	mov    r9,rbx
   140013dd1:	call   QWORD PTR [rip+0x42c1]        # 0x140018098
   140013dd7:	mov    rsi,rax
   140013dda:	test   rax,rax
   140013ddd:	jne    0x140013e4e
   140013ddf:	cmp    DWORD PTR [rip+0x1032b],eax        # 0x140024110
   140013de5:	je     0x140013e37
   140013de7:	mov    rcx,rbx
   140013dea:	call   0x14000e378
   140013def:	test   eax,eax
   140013df1:	je     0x140013e1e
   140013df3:	cmp    rbx,0xffffffffffffffe0
   140013df7:	jbe    0x140013db6
   140013df9:	mov    rcx,rbx
   140013dfc:	call   0x14000e378
   140013e01:	call   0x140008e40
   140013e06:	mov    DWORD PTR [rax],0xc
   140013e0c:	xor    eax,eax
   140013e0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013e13:	mov    rsi,QWORD PTR [rsp+0x38]
   140013e18:	add    rsp,0x20
   140013e1c:	pop    rdi
   140013e1d:	ret    
   140013e1e:	call   0x140008e40
   140013e23:	mov    rbx,rax
   140013e26:	call   QWORD PTR [rip+0x4234]        # 0x140018060
   140013e2c:	mov    ecx,eax
   140013e2e:	call   0x140008df8
   140013e33:	mov    DWORD PTR [rbx],eax
   140013e35:	jmp    0x140013e0c
   140013e37:	call   0x140008e40
   140013e3c:	mov    rbx,rax
   140013e3f:	call   QWORD PTR [rip+0x421b]        # 0x140018060
   140013e45:	mov    ecx,eax
   140013e47:	call   0x140008df8
   140013e4c:	mov    DWORD PTR [rbx],eax
   140013e4e:	mov    rax,rsi
   140013e51:	jmp    0x140013e0e
   140013e53:	int3   
   140013e54:	int3   
   140013e55:	int3   
   140013e56:	int3   
   140013e57:	int3   
   140013e58:	int3   
   140013e59:	int3   
   140013e5a:	int3   
   140013e5b:	int3   
   140013e5c:	int3   
   140013e5d:	int3   
   140013e5e:	int3   
   140013e5f:	int3   
   140013e60:	int3   
   140013e61:	int3   
   140013e62:	int3   
   140013e63:	int3   
   140013e64:	int3   
   140013e65:	int3   
   140013e66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013e70:	sub    rsp,0x10
   140013e74:	mov    QWORD PTR [rsp],r10
   140013e78:	mov    QWORD PTR [rsp+0x8],r11
   140013e7d:	xor    r11,r11
   140013e80:	lea    r10,[rsp+0x18]
   140013e85:	sub    r10,rax
   140013e88:	cmovb  r10,r11
   140013e8c:	mov    r11,QWORD PTR gs:0x10
   140013e95:	cmp    r10,r11
   140013e98:	jae    0x140013eb0
   140013e9a:	and    r10w,0xf000
   140013ea0:	lea    r11,[r11-0x1000]
   140013ea7:	mov    BYTE PTR [r11],0x0
   140013eab:	cmp    r10,r11
   140013eae:	jne    0x140013ea0
   140013eb0:	mov    r10,QWORD PTR [rsp]
   140013eb4:	mov    r11,QWORD PTR [rsp+0x8]
   140013eb9:	add    rsp,0x10
   140013ebd:	ret    
   140013ebe:	int3   
   140013ebf:	int3   
   140013ec0:	mov    QWORD PTR [rsp+0x10],rsi
   140013ec5:	push   rbp
   140013ec6:	push   rdi
   140013ec7:	push   r12
   140013ec9:	mov    rbp,rsp
   140013ecc:	sub    rsp,0x60
   140013ed0:	movsxd rdi,ecx
   140013ed3:	mov    r12d,edx
   140013ed6:	lea    rcx,[rbp-0x20]
   140013eda:	mov    rdx,r8
   140013edd:	call   0x140007d40
   140013ee2:	lea    r11d,[rdi+0x1]
   140013ee6:	cmp    r11d,0x100
   140013eed:	ja     0x140013f03
   140013eef:	mov    rax,QWORD PTR [rbp-0x20]
   140013ef3:	mov    rcx,QWORD PTR [rax+0x140]
   140013efa:	movzx  eax,WORD PTR [rcx+rdi*2]
   140013efe:	jmp    0x140013f83
   140013f03:	mov    esi,edi
   140013f05:	lea    rdx,[rbp-0x20]
   140013f09:	sar    esi,0x8
   140013f0c:	movzx  ecx,sil
   140013f10:	call   0x140015368
   140013f15:	mov    edx,0x1
   140013f1a:	test   eax,eax
   140013f1c:	je     0x140013f30
   140013f1e:	mov    BYTE PTR [rbp+0x38],sil
   140013f22:	mov    BYTE PTR [rbp+0x39],dil
   140013f26:	mov    BYTE PTR [rbp+0x3a],0x0
   140013f2a:	lea    r9d,[rdx+0x1]
   140013f2e:	jmp    0x140013f3b
   140013f30:	mov    BYTE PTR [rbp+0x38],dil
   140013f34:	mov    BYTE PTR [rbp+0x39],0x0
   140013f38:	mov    r9d,edx
   140013f3b:	mov    rcx,QWORD PTR [rbp-0x20]
   140013f3f:	mov    DWORD PTR [rsp+0x38],edx
   140013f43:	lea    r8,[rbp+0x38]
   140013f47:	mov    eax,DWORD PTR [rcx+0x14]
   140013f4a:	mov    DWORD PTR [rsp+0x30],eax
   140013f4e:	mov    eax,DWORD PTR [rcx+0x4]
   140013f51:	lea    rcx,[rbp-0x20]
   140013f55:	mov    DWORD PTR [rsp+0x28],eax
   140013f59:	lea    rax,[rbp+0x20]
   140013f5d:	mov    QWORD PTR [rsp+0x20],rax
   140013f62:	call   0x140010e9c
   140013f67:	test   eax,eax
   140013f69:	jne    0x140013f7f
   140013f6b:	cmp    BYTE PTR [rbp-0x8],al
   140013f6e:	je     0x140013f7b
   140013f70:	mov    rax,QWORD PTR [rbp-0x10]
   140013f74:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140013f7b:	xor    eax,eax
   140013f7d:	jmp    0x140013f97
   140013f7f:	movzx  eax,WORD PTR [rbp+0x20]
   140013f83:	and    eax,r12d
   140013f86:	cmp    BYTE PTR [rbp-0x8],0x0
   140013f8a:	je     0x140013f97
   140013f8c:	mov    rcx,QWORD PTR [rbp-0x10]
   140013f90:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140013f97:	mov    rsi,QWORD PTR [rsp+0x88]
   140013f9f:	add    rsp,0x60
   140013fa3:	pop    r12
   140013fa5:	pop    rdi
   140013fa6:	pop    rbp
   140013fa7:	ret    
   140013fa8:	mov    QWORD PTR [rip+0x10169],rcx        # 0x140024118
   140013faf:	mov    QWORD PTR [rip+0x1016a],rcx        # 0x140024120
   140013fb6:	mov    QWORD PTR [rip+0x1016b],rcx        # 0x140024128
   140013fbd:	mov    QWORD PTR [rip+0x1016c],rcx        # 0x140024130
   140013fc4:	ret    
   140013fc5:	int3   
   140013fc6:	int3   
   140013fc7:	int3   
   140013fc8:	mov    rcx,QWORD PTR [rip+0x10159]        # 0x140024128
   140013fcf:	rex.W jmp QWORD PTR [rip+0x40ea]        # 0x1400180c0
   140013fd6:	int3   
   140013fd7:	int3   
   140013fd8:	mov    QWORD PTR [rsp+0x10],rbx
   140013fdd:	mov    QWORD PTR [rsp+0x18],rsi
   140013fe2:	push   rdi
   140013fe3:	push   r12
   140013fe5:	push   r13
   140013fe7:	push   r14
   140013fe9:	push   r15
   140013feb:	sub    rsp,0x30
   140013fef:	mov    ebx,ecx
   140013ff1:	xor    edi,edi
   140013ff3:	mov    DWORD PTR [rsp+0x60],edi
   140013ff7:	xor    esi,esi
   140013ff9:	mov    edx,ecx
   140013ffb:	sub    edx,0x2
   140013ffe:	je     0x1400140c9
   140014004:	sub    edx,0x2
   140014007:	je     0x14001406b
   140014009:	sub    edx,0x2
   14001400c:	je     0x14001405b
   14001400e:	sub    edx,0x2
   140014011:	je     0x14001406b
   140014013:	sub    edx,0x3
   140014016:	je     0x14001406b
   140014018:	sub    edx,0x4
   14001401b:	je     0x14001404b
   14001401d:	sub    edx,0x6
   140014020:	je     0x140014038
   140014022:	dec    edx
   140014024:	je     0x14001405b
   140014026:	call   0x140008e40
   14001402b:	mov    DWORD PTR [rax],0x16
   140014031:	call   0x14000dafc
   140014036:	jmp    0x140014078
   140014038:	lea    r12,[rip+0x100e1]        # 0x140024120
   14001403f:	mov    rcx,QWORD PTR [rip+0x100da]        # 0x140024120
   140014046:	jmp    0x1400140d7
   14001404b:	lea    r12,[rip+0x100de]        # 0x140024130
   140014052:	mov    rcx,QWORD PTR [rip+0x100d7]        # 0x140024130
   140014059:	jmp    0x1400140d7
   14001405b:	lea    r12,[rip+0x100c6]        # 0x140024128
   140014062:	mov    rcx,QWORD PTR [rip+0x100bf]        # 0x140024128
   140014069:	jmp    0x1400140d7
   14001406b:	call   0x14000d6a4
   140014070:	mov    rsi,rax
   140014073:	test   rax,rax
   140014076:	jne    0x140014080
   140014078:	or     eax,0xffffffff
   14001407b:	jmp    0x1400141f2
   140014080:	mov    rdx,QWORD PTR [rax+0xa0]
   140014087:	mov    rcx,rdx
   14001408a:	movsxd r8,DWORD PTR [rip+0x60cb]        # 0x14001a15c
   140014091:	cmp    DWORD PTR [rcx+0x4],ebx
   140014094:	je     0x1400140a9
   140014096:	add    rcx,0x10
   14001409a:	mov    rax,r8
   14001409d:	shl    rax,0x4
   1400140a1:	add    rax,rdx
   1400140a4:	cmp    rcx,rax
   1400140a7:	jb     0x140014091
   1400140a9:	mov    rax,r8
   1400140ac:	shl    rax,0x4
   1400140b0:	add    rax,rdx
   1400140b3:	cmp    rcx,rax
   1400140b6:	jae    0x1400140bd
   1400140b8:	cmp    DWORD PTR [rcx+0x4],ebx
   1400140bb:	je     0x1400140bf
   1400140bd:	xor    ecx,ecx
   1400140bf:	lea    r12,[rcx+0x8]
   1400140c3:	mov    r13,QWORD PTR [r12]
   1400140c7:	jmp    0x1400140e9
   1400140c9:	lea    r12,[rip+0x10048]        # 0x140024118
   1400140d0:	mov    rcx,QWORD PTR [rip+0x10041]        # 0x140024118
   1400140d7:	mov    edi,0x1
   1400140dc:	mov    DWORD PTR [rsp+0x60],edi
   1400140e0:	call   QWORD PTR [rip+0x3fda]        # 0x1400180c0
   1400140e6:	mov    r13,rax
   1400140e9:	cmp    r13,0x1
   1400140ed:	jne    0x1400140f6
   1400140ef:	xor    eax,eax
   1400140f1:	jmp    0x1400141f2
   1400140f6:	test   r13,r13
   1400140f9:	jne    0x140014105
   1400140fb:	lea    ecx,[r13+0x3]
   1400140ff:	call   0x14000dfe8
   140014104:	int3   
   140014105:	test   edi,edi
   140014107:	je     0x140014111
   140014109:	xor    ecx,ecx
   14001410b:	call   0x140012e0c
   140014110:	nop
   140014111:	cmp    ebx,0x8
   140014114:	je     0x140014127
   140014116:	cmp    ebx,0xb
   140014119:	je     0x140014127
   14001411b:	cmp    ebx,0x4
   14001411e:	je     0x140014127
   140014120:	mov    r15,QWORD PTR [rsp+0x28]
   140014125:	jmp    0x140014153
   140014127:	mov    r15,QWORD PTR [rsi+0xa8]
   14001412e:	mov    QWORD PTR [rsp+0x28],r15
   140014133:	and    QWORD PTR [rsi+0xa8],0x0
   14001413b:	cmp    ebx,0x8
   14001413e:	jne    0x140014153
   140014140:	mov    r14d,DWORD PTR [rsi+0xb0]
   140014147:	mov    DWORD PTR [rsi+0xb0],0x8c
   140014151:	jmp    0x140014158
   140014153:	mov    r14d,DWORD PTR [rsp+0x60]
   140014158:	cmp    ebx,0x8
   14001415b:	jne    0x140014196
   14001415d:	mov    ecx,DWORD PTR [rip+0x5fed]        # 0x14001a150
   140014163:	mov    edx,ecx
   140014165:	mov    DWORD PTR [rsp+0x20],ecx
   140014169:	mov    eax,DWORD PTR [rip+0x5fe5]        # 0x14001a154
   14001416f:	add    ecx,eax
   140014171:	cmp    edx,ecx
   140014173:	jge    0x14001419f
   140014175:	movsxd rcx,edx
   140014178:	add    rcx,rcx
   14001417b:	mov    rax,QWORD PTR [rsi+0xa0]
   140014182:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140014188:	inc    edx
   14001418a:	mov    DWORD PTR [rsp+0x20],edx
   14001418e:	mov    ecx,DWORD PTR [rip+0x5fbc]        # 0x14001a150
   140014194:	jmp    0x140014169
   140014196:	call   0x14000d5b8
   14001419b:	mov    QWORD PTR [r12],rax
   14001419f:	test   edi,edi
   1400141a1:	je     0x1400141aa
   1400141a3:	xor    ecx,ecx
   1400141a5:	call   0x140012d0c
   1400141aa:	mov    edi,0x8
   1400141af:	cmp    ebx,edi
   1400141b1:	jne    0x1400141c0
   1400141b3:	mov    edx,DWORD PTR [rsi+0xb0]
   1400141b9:	mov    ecx,edi
   1400141bb:	call   r13
   1400141be:	jmp    0x1400141c5
   1400141c0:	mov    ecx,ebx
   1400141c2:	call   r13
   1400141c5:	cmp    ebx,edi
   1400141c7:	je     0x1400141d7
   1400141c9:	cmp    ebx,0xb
   1400141cc:	je     0x1400141d7
   1400141ce:	cmp    ebx,0x4
   1400141d1:	jne    0x1400140ef
   1400141d7:	mov    QWORD PTR [rsi+0xa8],r15
   1400141de:	cmp    ebx,edi
   1400141e0:	jne    0x1400140ef
   1400141e6:	mov    DWORD PTR [rsi+0xb0],r14d
   1400141ed:	jmp    0x1400140ef
   1400141f2:	mov    rbx,QWORD PTR [rsp+0x68]
   1400141f7:	mov    rsi,QWORD PTR [rsp+0x70]
   1400141fc:	add    rsp,0x30
   140014200:	pop    r15
   140014202:	pop    r14
   140014204:	pop    r13
   140014206:	pop    r12
   140014208:	pop    rdi
   140014209:	ret    
   14001420a:	int3   
   14001420b:	int3   
   14001420c:	and    DWORD PTR [rip+0x11171],0x0        # 0x140025384
   140014213:	ret    
   140014214:	mov    QWORD PTR [rip+0xff25],rcx        # 0x140024140
   14001421b:	ret    
   14001421c:	mov    QWORD PTR [rsp+0x8],rbx
   140014221:	push   rdi
   140014222:	sub    rsp,0x20
   140014226:	lea    rbx,[rip+0xe063]        # 0x140022290
   14001422d:	mov    edi,0xa
   140014232:	mov    rcx,QWORD PTR [rbx]
   140014235:	call   QWORD PTR [rip+0x3e7d]        # 0x1400180b8
   14001423b:	mov    QWORD PTR [rbx],rax
   14001423e:	add    rbx,0x8
   140014242:	dec    rdi
   140014245:	jne    0x140014232
   140014247:	mov    rbx,QWORD PTR [rsp+0x30]
   14001424c:	add    rsp,0x20
   140014250:	pop    rdi
   140014251:	ret    
   140014252:	int3   
   140014253:	int3   
   140014254:	int3   
   140014255:	int3   
   140014256:	int3   
   140014257:	int3   
   140014258:	int3   
   140014259:	int3   
   14001425a:	int3   
   14001425b:	int3   
   14001425c:	int3   
   14001425d:	int3   
   14001425e:	int3   
   14001425f:	int3   
   140014260:	mov    rax,rcx
   140014263:	mov    ecx,0x5a4d
   140014268:	cmp    WORD PTR [rax],cx
   14001426b:	je     0x140014270
   14001426d:	xor    eax,eax
   14001426f:	ret    
   140014270:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014274:	add    rcx,rax
   140014277:	xor    eax,eax
   140014279:	cmp    DWORD PTR [rcx],0x4550
   14001427f:	jne    0x14001428d
   140014281:	mov    edx,0x20b
   140014286:	cmp    WORD PTR [rcx+0x18],dx
   14001428a:	sete   al
   14001428d:	repz ret 
   14001428f:	int3   
   140014290:	movsxd r8,DWORD PTR [rcx+0x3c]
   140014294:	xor    r9d,r9d
   140014297:	mov    r10,rdx
   14001429a:	add    r8,rcx
   14001429d:	movzx  eax,WORD PTR [r8+0x14]
   1400142a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400142a7:	lea    rcx,[rax+r8*1+0x18]
   1400142ac:	test   r11d,r11d
   1400142af:	je     0x1400142cf
   1400142b1:	mov    edx,DWORD PTR [rcx+0xc]
   1400142b4:	cmp    r10,rdx
   1400142b7:	jb     0x1400142c3
   1400142b9:	mov    eax,DWORD PTR [rcx+0x8]
   1400142bc:	add    eax,edx
   1400142be:	cmp    r10,rax
   1400142c1:	jb     0x1400142d2
   1400142c3:	inc    r9d
   1400142c6:	add    rcx,0x28
   1400142ca:	cmp    r9d,r11d
   1400142cd:	jb     0x1400142b1
   1400142cf:	xor    eax,eax
   1400142d1:	ret    
   1400142d2:	mov    rax,rcx
   1400142d5:	ret    
   1400142d6:	int3   
   1400142d7:	int3   
   1400142d8:	int3   
   1400142d9:	int3   
   1400142da:	int3   
   1400142db:	int3   
   1400142dc:	int3   
   1400142dd:	int3   
   1400142de:	int3   
   1400142df:	int3   
   1400142e0:	sub    rsp,0x28
   1400142e4:	mov    r8,rcx
   1400142e7:	lea    r9,[rip+0xfffffffffffebd12]        # 0x140000000
   1400142ee:	mov    rcx,r9
   1400142f1:	call   0x140014260
   1400142f6:	test   eax,eax
   1400142f8:	je     0x14001431c
   1400142fa:	sub    r8,r9
   1400142fd:	mov    rdx,r8
   140014300:	mov    rcx,r9
   140014303:	call   0x140014290
   140014308:	test   rax,rax
   14001430b:	je     0x14001431c
   14001430d:	mov    eax,DWORD PTR [rax+0x24]
   140014310:	shr    eax,0x1f
   140014313:	not    eax
   140014315:	and    eax,0x1
   140014318:	jmp    0x14001431c
   14001431a:	xor    eax,eax
   14001431c:	add    rsp,0x28
   140014320:	ret    
   140014321:	int3   
   140014322:	int3   
   140014323:	int3   
   140014324:	mov    QWORD PTR [rsp+0x8],rbx
   140014329:	push   rdi
   14001432a:	sub    rsp,0x20
   14001432e:	movsxd rbx,ecx
   140014331:	mov    edi,r8d
   140014334:	mov    QWORD PTR [rsp+0x38],rdx
   140014339:	mov    ecx,ebx
   14001433b:	call   0x140015f34
   140014340:	cmp    rax,0xffffffffffffffff
   140014344:	jne    0x140014357
   140014346:	call   0x140008e40
   14001434b:	mov    DWORD PTR [rax],0x9
   140014351:	or     rax,0xffffffffffffffff
   140014355:	jmp    0x1400143ae
   140014357:	mov    edx,DWORD PTR [rsp+0x38]
   14001435b:	lea    r8,[rsp+0x3c]
   140014360:	mov    r9d,edi
   140014363:	mov    rcx,rax
   140014366:	call   QWORD PTR [rip+0x3d1c]        # 0x140018088
   14001436c:	mov    DWORD PTR [rsp+0x38],eax
   140014370:	cmp    eax,0xffffffff
   140014373:	jne    0x140014388
   140014375:	call   QWORD PTR [rip+0x3ce5]        # 0x140018060
   14001437b:	test   eax,eax
   14001437d:	je     0x140014388
   14001437f:	mov    ecx,eax
   140014381:	call   0x140008e80
   140014386:	jmp    0x140014351
   140014388:	mov    rcx,rbx
   14001438b:	mov    rax,rbx
   14001438e:	lea    rdx,[rip+0x1100b]        # 0x1400253a0
   140014395:	sar    rax,0x5
   140014399:	and    ecx,0x1f
   14001439c:	mov    rax,QWORD PTR [rdx+rax*8]
   1400143a0:	imul   rcx,rcx,0x58
   1400143a4:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400143a9:	mov    rax,QWORD PTR [rsp+0x38]
   1400143ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400143b3:	add    rsp,0x20
   1400143b7:	pop    rdi
   1400143b8:	ret    
   1400143b9:	int3   
   1400143ba:	int3   
   1400143bb:	int3   
   1400143bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400143c1:	mov    DWORD PTR [rsp+0x8],ecx
   1400143c5:	push   rsi
   1400143c6:	push   rdi
   1400143c7:	push   r12
   1400143c9:	push   r13
   1400143cb:	push   r14
   1400143cd:	sub    rsp,0x20
   1400143d1:	mov    esi,r8d
   1400143d4:	mov    r12,rdx
   1400143d7:	movsxd rdi,ecx
   1400143da:	cmp    edi,0xfffffffe
   1400143dd:	jne    0x1400143f7
   1400143df:	call   0x140008e60
   1400143e4:	and    DWORD PTR [rax],0x0
   1400143e7:	call   0x140008e40
   1400143ec:	mov    DWORD PTR [rax],0x9
   1400143f2:	jmp    0x140014489
   1400143f7:	test   ecx,ecx
   1400143f9:	js     0x140014471
   1400143fb:	cmp    edi,DWORD PTR [rip+0x10f87]        # 0x140025388
   140014401:	jae    0x140014471
   140014403:	mov    rbx,rdi
   140014406:	mov    r13,rdi
   140014409:	sar    r13,0x5
   14001440d:	lea    r14,[rip+0x10f8c]        # 0x1400253a0
   140014414:	and    ebx,0x1f
   140014417:	imul   rbx,rbx,0x58
   14001441b:	mov    rax,QWORD PTR [r14+r13*8]
   14001441f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140014424:	and    ecx,0x1
   140014427:	je     0x140014471
   140014429:	mov    ecx,edi
   14001442b:	call   0x140015fa8
   140014430:	nop
   140014431:	mov    rax,QWORD PTR [r14+r13*8]
   140014435:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001443a:	je     0x14001444e
   14001443c:	mov    r8d,esi
   14001443f:	mov    rdx,r12
   140014442:	mov    ecx,edi
   140014444:	call   0x140014324
   140014449:	mov    rbx,rax
   14001444c:	jmp    0x140014465
   14001444e:	call   0x140008e40
   140014453:	mov    DWORD PTR [rax],0x9
   140014459:	call   0x140008e60
   14001445e:	and    DWORD PTR [rax],0x0
   140014461:	or     rbx,0xffffffffffffffff
   140014465:	mov    ecx,edi
   140014467:	call   0x140016050
   14001446c:	mov    rax,rbx
   14001446f:	jmp    0x14001448d
   140014471:	call   0x140008e60
   140014476:	and    DWORD PTR [rax],0x0
   140014479:	call   0x140008e40
   14001447e:	mov    DWORD PTR [rax],0x9
   140014484:	call   0x14000dafc
   140014489:	or     rax,0xffffffffffffffff
   14001448d:	mov    rbx,QWORD PTR [rsp+0x58]
   140014492:	add    rsp,0x20
   140014496:	pop    r14
   140014498:	pop    r13
   14001449a:	pop    r12
   14001449c:	pop    rdi
   14001449d:	pop    rsi
   14001449e:	ret    
   14001449f:	int3   
   1400144a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400144a5:	push   rbp
   1400144a6:	push   rsi
   1400144a7:	push   rdi
   1400144a8:	push   r12
   1400144aa:	push   r13
   1400144ac:	push   r14
   1400144ae:	push   r15
   1400144b0:	lea    rbp,[rsp-0x1a30]
   1400144b8:	mov    eax,0x1b30
   1400144bd:	call   0x140013e70
   1400144c2:	sub    rsp,rax
   1400144c5:	mov    rax,QWORD PTR [rip+0xcf44]        # 0x140021410
   1400144cc:	xor    rax,rsp
   1400144cf:	mov    QWORD PTR [rbp+0x1a20],rax
   1400144d6:	xor    edi,edi
   1400144d8:	mov    r14d,r8d
   1400144db:	mov    r13,rdx
   1400144de:	and    DWORD PTR [rsp+0x44],edi
   1400144e2:	movsxd rbx,ecx
   1400144e5:	test   r8d,r8d
   1400144e8:	jne    0x1400144f1
   1400144ea:	xor    eax,eax
   1400144ec:	jmp    0x140014bd6
   1400144f1:	test   rdx,rdx
   1400144f4:	jne    0x140014515
   1400144f6:	call   0x140008e60
   1400144fb:	and    DWORD PTR [rax],edi
   1400144fd:	call   0x140008e40
   140014502:	mov    DWORD PTR [rax],0x16
   140014508:	call   0x14000dafc
   14001450d:	or     eax,0xffffffff
   140014510:	jmp    0x140014bd6
   140014515:	mov    r15,rbx
   140014518:	mov    r12,rbx
   14001451b:	lea    rax,[rip+0x10e7e]        # 0x1400253a0
   140014522:	sar    r12,0x5
   140014526:	and    r15d,0x1f
   14001452a:	mov    rcx,QWORD PTR [rax+r12*8]
   14001452e:	mov    QWORD PTR [rsp+0x50],r12
   140014533:	imul   r15,r15,0x58
   140014537:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   14001453c:	mov    QWORD PTR [rsp+0x60],r15
   140014541:	add    sil,sil
   140014544:	sar    sil,1
   140014547:	cmp    sil,0x2
   14001454b:	je     0x140014553
   14001454d:	cmp    sil,0x1
   140014551:	jne    0x14001455c
   140014553:	mov    eax,r14d
   140014556:	not    eax
   140014558:	test   al,0x1
   14001455a:	je     0x1400144f6
   14001455c:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140014562:	je     0x140014571
   140014564:	xor    edx,edx
   140014566:	mov    ecx,ebx
   140014568:	lea    r8d,[rdx+0x2]
   14001456c:	call   0x140014324
   140014571:	mov    ecx,ebx
   140014573:	call   0x140014d34
   140014578:	test   eax,eax
   14001457a:	je     0x14001484a
   140014580:	lea    rax,[rip+0x10e19]        # 0x1400253a0
   140014587:	mov    rax,QWORD PTR [rax+r12*8]
   14001458b:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140014591:	je     0x14001484a
   140014597:	call   0x14000d728
   14001459c:	xor    ebx,ebx
   14001459e:	lea    rdx,[rsp+0x5c]
   1400145a3:	mov    rcx,QWORD PTR [rax+0xc0]
   1400145aa:	lea    rax,[rip+0x10def]        # 0x1400253a0
   1400145b1:	cmp    DWORD PTR [rcx+0x14],ebx
   1400145b4:	mov    rcx,QWORD PTR [rax+r12*8]
   1400145b8:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400145bc:	sete   bl
   1400145bf:	call   QWORD PTR [rip+0x3ab3]        # 0x140018078
   1400145c5:	test   eax,eax
   1400145c7:	je     0x14001484a
   1400145cd:	test   ebx,ebx
   1400145cf:	je     0x1400145da
   1400145d1:	test   sil,sil
   1400145d4:	je     0x14001484a
   1400145da:	call   QWORD PTR [rip+0x3aa0]        # 0x140018080
   1400145e0:	and    DWORD PTR [rsp+0x58],edi
   1400145e4:	mov    rbx,r13
   1400145e7:	mov    DWORD PTR [rsp+0x5c],eax
   1400145eb:	test   r14d,r14d
   1400145ee:	je     0x140014841
   1400145f4:	test   sil,sil
   1400145f7:	jne    0x140014781
   1400145fd:	mov    cl,BYTE PTR [rbx]
   1400145ff:	xor    eax,eax
   140014601:	cmp    cl,0xa
   140014604:	sete   al
   140014607:	mov    DWORD PTR [rsp+0x4c],eax
   14001460b:	lea    rax,[rip+0x10d8e]        # 0x1400253a0
   140014612:	mov    rdx,QWORD PTR [rax+r12*8]
   140014616:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14001461c:	je     0x14001463e
   14001461e:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140014623:	mov    BYTE PTR [rsp+0x61],cl
   140014627:	mov    r8d,0x2
   14001462d:	mov    BYTE PTR [rsp+0x60],al
   140014631:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140014637:	lea    rdx,[rsp+0x60]
   14001463c:	jmp    0x140014687
   14001463e:	movsx  ecx,cl
   140014641:	call   0x1400153b0
   140014646:	test   eax,eax
   140014648:	je     0x14001467e
   14001464a:	mov    rax,r14
   14001464d:	sub    rax,rbx
   140014650:	add    rax,r13
   140014653:	cmp    rax,0x1
   140014657:	jle    0x14001480a
   14001465d:	lea    rcx,[rsp+0x40]
   140014662:	mov    r8d,0x2
   140014668:	mov    rdx,rbx
   14001466b:	call   0x140015360
   140014670:	cmp    eax,0xffffffff
   140014673:	je     0x14001482b
   140014679:	inc    rbx
   14001467c:	jmp    0x14001469a
   14001467e:	mov    r8d,0x1
   140014684:	mov    rdx,rbx
   140014687:	lea    rcx,[rsp+0x40]
   14001468c:	call   0x140015360
   140014691:	cmp    eax,0xffffffff
   140014694:	je     0x14001482b
   14001469a:	and    QWORD PTR [rsp+0x38],0x0
   1400146a0:	and    QWORD PTR [rsp+0x30],0x0
   1400146a6:	mov    ecx,DWORD PTR [rsp+0x5c]
   1400146aa:	lea    rax,[rsp+0x60]
   1400146af:	lea    r8,[rsp+0x40]
   1400146b4:	mov    r9d,0x1
   1400146ba:	xor    edx,edx
   1400146bc:	mov    DWORD PTR [rsp+0x28],0x5
   1400146c4:	inc    rbx
   1400146c7:	mov    QWORD PTR [rsp+0x20],rax
   1400146cc:	call   QWORD PTR [rip+0x39ce]        # 0x1400180a0
   1400146d2:	mov    r12d,eax
   1400146d5:	test   eax,eax
   1400146d7:	je     0x14001482b
   1400146dd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400146e2:	and    QWORD PTR [rsp+0x20],0x0
   1400146e8:	lea    rax,[rip+0x10cb1]        # 0x1400253a0
   1400146ef:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400146f3:	lea    r9,[rsp+0x58]
   1400146f8:	lea    rdx,[rsp+0x60]
   1400146fd:	mov    rcx,QWORD PTR [r15+rcx*1]
   140014701:	mov    r8d,r12d
   140014704:	call   QWORD PTR [rip+0x3aee]        # 0x1400181f8
   14001470a:	test   eax,eax
   14001470c:	je     0x140014834
   140014712:	mov    edi,ebx
   140014714:	sub    edi,r13d
   140014717:	add    edi,DWORD PTR [rsp+0x44]
   14001471b:	cmp    DWORD PTR [rsp+0x58],r12d
   140014720:	jl     0x14001482b
   140014726:	cmp    DWORD PTR [rsp+0x4c],0x0
   14001472b:	mov    r12,QWORD PTR [rsp+0x50]
   140014730:	je     0x1400147fb
   140014736:	and    QWORD PTR [rsp+0x20],0x0
   14001473c:	lea    rax,[rip+0x10c5d]        # 0x1400253a0
   140014743:	mov    BYTE PTR [rsp+0x60],0xd
   140014748:	mov    rcx,QWORD PTR [rax+r12*8]
   14001474c:	lea    r9,[rsp+0x58]
   140014751:	lea    rdx,[rsp+0x60]
   140014756:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001475a:	mov    r8d,0x1
   140014760:	call   QWORD PTR [rip+0x3a92]        # 0x1400181f8
   140014766:	test   eax,eax
   140014768:	je     0x140014834
   14001476e:	cmp    DWORD PTR [rsp+0x58],0x1
   140014773:	jl     0x14001482b
   140014779:	inc    DWORD PTR [rsp+0x44]
   14001477d:	inc    edi
   14001477f:	jmp    0x1400147fb
   140014781:	cmp    sil,0x1
   140014785:	je     0x14001478d
   140014787:	cmp    sil,0x2
   14001478b:	jne    0x1400147ab
   14001478d:	movzx  eax,WORD PTR [rbx]
   140014790:	xor    r12d,r12d
   140014793:	cmp    ax,0xa
   140014797:	mov    WORD PTR [rsp+0x40],ax
   14001479c:	sete   r12b
   1400147a0:	add    rbx,0x2
   1400147a4:	mov    DWORD PTR [rsp+0x4c],r12d
   1400147a9:	jmp    0x1400147b0
   1400147ab:	mov    r12d,DWORD PTR [rsp+0x4c]
   1400147b0:	cmp    sil,0x1
   1400147b4:	je     0x1400147bc
   1400147b6:	cmp    sil,0x2
   1400147ba:	jne    0x1400147f6
   1400147bc:	movzx  ecx,WORD PTR [rsp+0x40]
   1400147c1:	call   0x140016078
   1400147c6:	cmp    ax,WORD PTR [rsp+0x40]
   1400147cb:	jne    0x140014834
   1400147cd:	add    edi,0x2
   1400147d0:	test   r12d,r12d
   1400147d3:	je     0x1400147f6
   1400147d5:	mov    r12d,0xd
   1400147db:	mov    ecx,r12d
   1400147de:	mov    WORD PTR [rsp+0x40],r12w
   1400147e4:	call   0x140016078
   1400147e9:	cmp    ax,WORD PTR [rsp+0x40]
   1400147ee:	jne    0x140014834
   1400147f0:	inc    edi
   1400147f2:	inc    DWORD PTR [rsp+0x44]
   1400147f6:	mov    r12,QWORD PTR [rsp+0x50]
   1400147fb:	mov    eax,ebx
   1400147fd:	sub    eax,r13d
   140014800:	cmp    eax,r14d
   140014803:	jae    0x14001482b
   140014805:	jmp    0x1400145f4
   14001480a:	mov    al,BYTE PTR [rbx]
   14001480c:	lea    rdx,[rip+0x10b8d]        # 0x1400253a0
   140014813:	inc    edi
   140014815:	mov    rcx,QWORD PTR [rdx+r12*8]
   140014819:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   14001481e:	mov    rax,QWORD PTR [rdx+r12*8]
   140014822:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   14001482b:	mov    ebx,DWORD PTR [rsp+0x4c]
   14001482f:	jmp    0x140014b2d
   140014834:	call   QWORD PTR [rip+0x3826]        # 0x140018060
   14001483a:	mov    ebx,eax
   14001483c:	jmp    0x140014b2d
   140014841:	mov    ebx,DWORD PTR [rsp+0x4c]
   140014845:	jmp    0x140014b35
   14001484a:	lea    rax,[rip+0x10b4f]        # 0x1400253a0
   140014851:	mov    rcx,QWORD PTR [rax+r12*8]
   140014855:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   14001485b:	je     0x140014b5f
   140014861:	xor    ebx,ebx
   140014863:	mov    r12,r13
   140014866:	test   sil,sil
   140014869:	jne    0x14001493a
   14001486f:	test   r14d,r14d
   140014872:	je     0x140014b95
   140014878:	lea    edx,[rbx+0xd]
   14001487b:	mov    r15d,DWORD PTR [rsp+0x44]
   140014880:	lea    rsi,[rbp+0x620]
   140014887:	xor    ecx,ecx
   140014889:	mov    eax,r12d
   14001488c:	sub    eax,r13d
   14001488f:	cmp    eax,r14d
   140014892:	jae    0x1400148bb
   140014894:	mov    al,BYTE PTR [r12]
   140014898:	inc    r12
   14001489b:	cmp    al,0xa
   14001489d:	jne    0x1400148aa
   14001489f:	mov    BYTE PTR [rsi],dl
   1400148a1:	inc    r15d
   1400148a4:	inc    rsi
   1400148a7:	inc    rcx
   1400148aa:	inc    rcx
   1400148ad:	mov    BYTE PTR [rsi],al
   1400148af:	inc    rsi
   1400148b2:	cmp    rcx,0x13ff
   1400148b9:	jb     0x140014889
   1400148bb:	and    QWORD PTR [rsp+0x20],rbx
   1400148c0:	lea    rax,[rbp+0x620]
   1400148c7:	mov    r8d,esi
   1400148ca:	sub    r8d,eax
   1400148cd:	mov    rax,QWORD PTR [rsp+0x50]
   1400148d2:	lea    rcx,[rip+0x10ac7]        # 0x1400253a0
   1400148d9:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400148dd:	mov    DWORD PTR [rsp+0x44],r15d
   1400148e2:	mov    r15,QWORD PTR [rsp+0x60]
   1400148e7:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400148eb:	lea    r9,[rsp+0x48]
   1400148f0:	lea    rdx,[rbp+0x620]
   1400148f7:	call   QWORD PTR [rip+0x38fb]        # 0x1400181f8
   1400148fd:	test   eax,eax
   1400148ff:	je     0x140014834
   140014905:	add    edi,DWORD PTR [rsp+0x48]
   140014909:	lea    rax,[rbp+0x620]
   140014910:	sub    rsi,rax
   140014913:	movsxd rax,DWORD PTR [rsp+0x48]
   140014918:	cmp    rax,rsi
   14001491b:	jl     0x140014b2d
   140014921:	mov    eax,r12d
   140014924:	mov    edx,0xd
   140014929:	sub    eax,r13d
   14001492c:	cmp    eax,r14d
   14001492f:	jb     0x14001487b
   140014935:	jmp    0x140014b2d
   14001493a:	cmp    sil,0x2
   14001493e:	jne    0x140014a1c
   140014944:	test   r14d,r14d
   140014947:	je     0x140014b95
   14001494d:	mov    edx,0xd
   140014952:	mov    r15d,DWORD PTR [rsp+0x44]
   140014957:	lea    rsi,[rbp+0x620]
   14001495e:	xor    ecx,ecx
   140014960:	mov    eax,r12d
   140014963:	sub    eax,r13d
   140014966:	cmp    eax,r14d
   140014969:	jae    0x14001499d
   14001496b:	movzx  eax,WORD PTR [r12]
   140014970:	add    r12,0x2
   140014974:	cmp    ax,0xa
   140014978:	jne    0x140014989
   14001497a:	mov    WORD PTR [rsi],dx
   14001497d:	add    r15d,0x2
   140014981:	add    rsi,0x2
   140014985:	add    rcx,0x2
   140014989:	add    rcx,0x2
   14001498d:	mov    WORD PTR [rsi],ax
   140014990:	add    rsi,0x2
   140014994:	cmp    rcx,0x13fe
   14001499b:	jb     0x140014960
   14001499d:	and    QWORD PTR [rsp+0x20],rbx
   1400149a2:	lea    rax,[rbp+0x620]
   1400149a9:	mov    r8d,esi
   1400149ac:	sub    r8d,eax
   1400149af:	mov    rax,QWORD PTR [rsp+0x50]
   1400149b4:	lea    rcx,[rip+0x109e5]        # 0x1400253a0
   1400149bb:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400149bf:	mov    DWORD PTR [rsp+0x44],r15d
   1400149c4:	mov    r15,QWORD PTR [rsp+0x60]
   1400149c9:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400149cd:	lea    r9,[rsp+0x48]
   1400149d2:	lea    rdx,[rbp+0x620]
   1400149d9:	call   QWORD PTR [rip+0x3819]        # 0x1400181f8
   1400149df:	test   eax,eax
   1400149e1:	je     0x140014834
   1400149e7:	add    edi,DWORD PTR [rsp+0x48]
   1400149eb:	lea    rax,[rbp+0x620]
   1400149f2:	sub    rsi,rax
   1400149f5:	movsxd rax,DWORD PTR [rsp+0x48]
   1400149fa:	cmp    rax,rsi
   1400149fd:	jl     0x140014b2d
   140014a03:	mov    eax,r12d
   140014a06:	mov    edx,0xd
   140014a0b:	sub    eax,r13d
   140014a0e:	cmp    eax,r14d
   140014a11:	jb     0x140014952
   140014a17:	jmp    0x140014b2d
   140014a1c:	test   r14d,r14d
   140014a1f:	je     0x140014b95
   140014a25:	mov    r8d,0xd
   140014a2b:	lea    rcx,[rsp+0x70]
   140014a30:	xor    edx,edx
   140014a32:	mov    eax,r12d
   140014a35:	sub    eax,r13d
   140014a38:	cmp    eax,r14d
   140014a3b:	jae    0x140014a6c
   140014a3d:	movzx  eax,WORD PTR [r12]
   140014a42:	add    r12,0x2
   140014a46:	cmp    ax,0xa
   140014a4a:	jne    0x140014a58
   140014a4c:	mov    WORD PTR [rcx],r8w
   140014a50:	add    rcx,0x2
   140014a54:	add    rdx,0x2
   140014a58:	add    rdx,0x2
   140014a5c:	mov    WORD PTR [rcx],ax
   140014a5f:	add    rcx,0x2
   140014a63:	cmp    rdx,0x6a8
   140014a6a:	jb     0x140014a32
   140014a6c:	and    QWORD PTR [rsp+0x38],0x0
   140014a72:	and    QWORD PTR [rsp+0x30],0x0
   140014a78:	lea    rax,[rsp+0x70]
   140014a7d:	sub    ecx,eax
   140014a7f:	lea    r8,[rsp+0x70]
   140014a84:	mov    DWORD PTR [rsp+0x28],0xd55
   140014a8c:	mov    eax,ecx
   140014a8e:	mov    ecx,0xfde9
   140014a93:	cdq    
   140014a94:	sub    eax,edx
   140014a96:	xor    edx,edx
   140014a98:	sar    eax,1
   140014a9a:	mov    r9d,eax
   140014a9d:	lea    rax,[rbp+0x620]
   140014aa4:	mov    QWORD PTR [rsp+0x20],rax
   140014aa9:	call   QWORD PTR [rip+0x35f1]        # 0x1400180a0
   140014aaf:	mov    r15d,eax
   140014ab2:	test   eax,eax
   140014ab4:	je     0x140014b55
   140014aba:	xor    esi,esi
   140014abc:	mov    rax,QWORD PTR [rsp+0x50]
   140014ac1:	and    QWORD PTR [rsp+0x20],0x0
   140014ac7:	movsxd rcx,esi
   140014aca:	lea    rdx,[rbp+rcx*1+0x620]
   140014ad2:	mov    r8d,r15d
   140014ad5:	lea    rcx,[rip+0x108c4]        # 0x1400253a0
   140014adc:	mov    rcx,QWORD PTR [rcx+rax*8]
   140014ae0:	mov    rax,QWORD PTR [rsp+0x60]
   140014ae5:	lea    r9,[rsp+0x48]
   140014aea:	mov    rcx,QWORD PTR [rax+rcx*1]
   140014aee:	sub    r8d,esi
   140014af1:	call   QWORD PTR [rip+0x3701]        # 0x1400181f8
   140014af7:	test   eax,eax
   140014af9:	je     0x140014b06
   140014afb:	add    esi,DWORD PTR [rsp+0x48]
   140014aff:	cmp    r15d,esi
   140014b02:	jg     0x140014abc
   140014b04:	jmp    0x140014b0e
   140014b06:	call   QWORD PTR [rip+0x3554]        # 0x140018060
   140014b0c:	mov    ebx,eax
   140014b0e:	cmp    r15d,esi
   140014b11:	jg     0x140014b28
   140014b13:	mov    edi,r12d
   140014b16:	mov    r8d,0xd
   140014b1c:	sub    edi,r13d
   140014b1f:	cmp    edi,r14d
   140014b22:	jb     0x140014a2b
   140014b28:	mov    r15,QWORD PTR [rsp+0x60]
   140014b2d:	test   edi,edi
   140014b2f:	jne    0x140014bd0
   140014b35:	test   ebx,ebx
   140014b37:	je     0x140014b95
   140014b39:	cmp    ebx,0x5
   140014b3c:	jne    0x140014b89
   140014b3e:	call   0x140008e40
   140014b43:	mov    DWORD PTR [rax],0x9
   140014b49:	call   0x140008e60
   140014b4e:	mov    DWORD PTR [rax],ebx
   140014b50:	jmp    0x14001450d
   140014b55:	call   QWORD PTR [rip+0x3505]        # 0x140018060
   140014b5b:	mov    ebx,eax
   140014b5d:	jmp    0x140014b28
   140014b5f:	mov    rcx,QWORD PTR [r15+rcx*1]
   140014b63:	and    QWORD PTR [rsp+0x20],rdi
   140014b68:	lea    r9,[rsp+0x48]
   140014b6d:	mov    r8d,r14d
   140014b70:	mov    rdx,r13
   140014b73:	call   QWORD PTR [rip+0x367f]        # 0x1400181f8
   140014b79:	test   eax,eax
   140014b7b:	je     0x140014834
   140014b81:	mov    edi,DWORD PTR [rsp+0x48]
   140014b85:	xor    ebx,ebx
   140014b87:	jmp    0x140014b2d
   140014b89:	mov    ecx,ebx
   140014b8b:	call   0x140008e80
   140014b90:	jmp    0x14001450d
   140014b95:	mov    rax,QWORD PTR [rsp+0x50]
   140014b9a:	lea    rcx,[rip+0x107ff]        # 0x1400253a0
   140014ba1:	mov    rax,QWORD PTR [rcx+rax*8]
   140014ba5:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140014bab:	je     0x140014bb8
   140014bad:	cmp    BYTE PTR [r13+0x0],0x1a
   140014bb2:	je     0x1400144ea
   140014bb8:	call   0x140008e40
   140014bbd:	mov    DWORD PTR [rax],0x1c
   140014bc3:	call   0x140008e60
   140014bc8:	and    DWORD PTR [rax],0x0
   140014bcb:	jmp    0x14001450d
   140014bd0:	sub    edi,DWORD PTR [rsp+0x44]
   140014bd4:	mov    eax,edi
   140014bd6:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140014bdd:	xor    rcx,rsp
   140014be0:	call   0x140007d20
   140014be5:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140014bed:	add    rsp,0x1b30
   140014bf4:	pop    r15
   140014bf6:	pop    r14
   140014bf8:	pop    r13
   140014bfa:	pop    r12
   140014bfc:	pop    rdi
   140014bfd:	pop    rsi
   140014bfe:	pop    rbp
   140014bff:	ret    
   140014c00:	mov    QWORD PTR [rsp+0x10],rbx
   140014c05:	mov    DWORD PTR [rsp+0x8],ecx
   140014c09:	push   rsi
   140014c0a:	push   rdi
   140014c0b:	push   r12
   140014c0d:	push   r13
   140014c0f:	push   r14
   140014c11:	sub    rsp,0x20
   140014c15:	mov    esi,r8d
   140014c18:	mov    r12,rdx
   140014c1b:	movsxd rdi,ecx
   140014c1e:	cmp    edi,0xfffffffe
   140014c21:	jne    0x140014c3b
   140014c23:	call   0x140008e60
   140014c28:	and    DWORD PTR [rax],0x0
   140014c2b:	call   0x140008e40
   140014c30:	mov    DWORD PTR [rax],0x9
   140014c36:	jmp    0x140014cca
   140014c3b:	test   ecx,ecx
   140014c3d:	js     0x140014cb2
   140014c3f:	cmp    edi,DWORD PTR [rip+0x10743]        # 0x140025388
   140014c45:	jae    0x140014cb2
   140014c47:	mov    rbx,rdi
   140014c4a:	mov    r13,rdi
   140014c4d:	sar    r13,0x5
   140014c51:	lea    r14,[rip+0x10748]        # 0x1400253a0
   140014c58:	and    ebx,0x1f
   140014c5b:	imul   rbx,rbx,0x58
   140014c5f:	mov    rax,QWORD PTR [r14+r13*8]
   140014c63:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140014c68:	and    ecx,0x1
   140014c6b:	je     0x140014cb2
   140014c6d:	mov    ecx,edi
   140014c6f:	call   0x140015fa8
   140014c74:	nop
   140014c75:	mov    rax,QWORD PTR [r14+r13*8]
   140014c79:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140014c7e:	je     0x140014c91
   140014c80:	mov    r8d,esi
   140014c83:	mov    rdx,r12
   140014c86:	mov    ecx,edi
   140014c88:	call   0x1400144a0
   140014c8d:	mov    ebx,eax
   140014c8f:	jmp    0x140014ca7
   140014c91:	call   0x140008e40
   140014c96:	mov    DWORD PTR [rax],0x9
   140014c9c:	call   0x140008e60
   140014ca1:	and    DWORD PTR [rax],0x0
   140014ca4:	or     ebx,0xffffffff
   140014ca7:	mov    ecx,edi
   140014ca9:	call   0x140016050
   140014cae:	mov    eax,ebx
   140014cb0:	jmp    0x140014ccd
   140014cb2:	call   0x140008e60
   140014cb7:	and    DWORD PTR [rax],0x0
   140014cba:	call   0x140008e40
   140014cbf:	mov    DWORD PTR [rax],0x9
   140014cc5:	call   0x14000dafc
   140014cca:	or     eax,0xffffffff
   140014ccd:	mov    rbx,QWORD PTR [rsp+0x58]
   140014cd2:	add    rsp,0x20
   140014cd6:	pop    r14
   140014cd8:	pop    r13
   140014cda:	pop    r12
   140014cdc:	pop    rdi
   140014cdd:	pop    rsi
   140014cde:	ret    
   140014cdf:	int3   
   140014ce0:	rex push rbx
   140014ce2:	sub    rsp,0x20
   140014ce6:	inc    DWORD PTR [rip+0xf4c8]        # 0x1400241b4
   140014cec:	mov    rbx,rcx
   140014cef:	mov    ecx,0x1000
   140014cf4:	call   0x14000c320
   140014cf9:	mov    QWORD PTR [rbx+0x10],rax
   140014cfd:	test   rax,rax
   140014d00:	je     0x140014d0f
   140014d02:	or     DWORD PTR [rbx+0x18],0x8
   140014d06:	mov    DWORD PTR [rbx+0x24],0x1000
   140014d0d:	jmp    0x140014d22
   140014d0f:	or     DWORD PTR [rbx+0x18],0x4
   140014d13:	lea    rax,[rbx+0x20]
   140014d17:	mov    DWORD PTR [rbx+0x24],0x2
   140014d1e:	mov    QWORD PTR [rbx+0x10],rax
   140014d22:	mov    rax,QWORD PTR [rbx+0x10]
   140014d26:	and    DWORD PTR [rbx+0x8],0x0
   140014d2a:	mov    QWORD PTR [rbx],rax
   140014d2d:	add    rsp,0x20
   140014d31:	pop    rbx
   140014d32:	ret    
   140014d33:	int3   
   140014d34:	sub    rsp,0x28
   140014d38:	cmp    ecx,0xfffffffe
   140014d3b:	jne    0x140014d4a
   140014d3d:	call   0x140008e40
   140014d42:	mov    DWORD PTR [rax],0x9
   140014d48:	jmp    0x140014d8c
   140014d4a:	test   ecx,ecx
   140014d4c:	js     0x140014d7c
   140014d4e:	cmp    ecx,DWORD PTR [rip+0x10634]        # 0x140025388
   140014d54:	jae    0x140014d7c
   140014d56:	movsxd rcx,ecx
   140014d59:	lea    rdx,[rip+0x10640]        # 0x1400253a0
   140014d60:	mov    rax,rcx
   140014d63:	and    ecx,0x1f
   140014d66:	sar    rax,0x5
   140014d6a:	imul   rcx,rcx,0x58
   140014d6e:	mov    rax,QWORD PTR [rdx+rax*8]
   140014d72:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140014d77:	and    eax,0x40
   140014d7a:	jmp    0x140014d8e
   140014d7c:	call   0x140008e40
   140014d81:	mov    DWORD PTR [rax],0x9
   140014d87:	call   0x14000dafc
   140014d8c:	xor    eax,eax
   140014d8e:	add    rsp,0x28
   140014d92:	ret    
   140014d93:	int3   
   140014d94:	lea    rax,[rip+0xd545]        # 0x1400222e0
   140014d9b:	ret    
   140014d9c:	rex push rbx
   140014d9e:	sub    rsp,0x20
   140014da2:	mov    eax,DWORD PTR [rip+0x105d8]        # 0x140025380
   140014da8:	mov    ebx,0x14
   140014dad:	test   eax,eax
   140014daf:	jne    0x140014db8
   140014db1:	mov    eax,0x200
   140014db6:	jmp    0x140014dbd
   140014db8:	cmp    eax,ebx
   140014dba:	cmovl  eax,ebx
   140014dbd:	movsxd rcx,eax
   140014dc0:	mov    edx,0x8
   140014dc5:	mov    DWORD PTR [rip+0x105b5],eax        # 0x140025380
   140014dcb:	call   0x14000c3a0
   140014dd0:	mov    QWORD PTR [rip+0xf599],rax        # 0x140024370
   140014dd7:	test   rax,rax
   140014dda:	jne    0x140014e00
   140014ddc:	lea    edx,[rax+0x8]
   140014ddf:	mov    rcx,rbx
   140014de2:	mov    DWORD PTR [rip+0x10598],ebx        # 0x140025380
   140014de8:	call   0x14000c3a0
   140014ded:	mov    QWORD PTR [rip+0xf57c],rax        # 0x140024370
   140014df4:	test   rax,rax
   140014df7:	jne    0x140014e00
   140014df9:	mov    eax,0x1a
   140014dfe:	jmp    0x140014e76
   140014e00:	xor    ecx,ecx
   140014e02:	lea    rdx,[rip+0xd4d7]        # 0x1400222e0
   140014e09:	mov    QWORD PTR [rcx+rax*1],rdx
   140014e0d:	add    rdx,0x30
   140014e11:	add    rcx,0x8
   140014e15:	dec    rbx
   140014e18:	je     0x140014e23
   140014e1a:	mov    rax,QWORD PTR [rip+0xf54f]        # 0x140024370
   140014e21:	jmp    0x140014e09
   140014e23:	xor    r8d,r8d
   140014e26:	lea    rdx,[rip+0xd4cf]        # 0x1400222fc
   140014e2d:	lea    r9d,[r8+0x3]
   140014e31:	mov    rcx,r8
   140014e34:	lea    r10,[rip+0x10565]        # 0x1400253a0
   140014e3b:	mov    rax,r8
   140014e3e:	sar    rax,0x5
   140014e42:	and    ecx,0x1f
   140014e45:	mov    rax,QWORD PTR [r10+rax*8]
   140014e49:	imul   rcx,rcx,0x58
   140014e4d:	mov    r10,QWORD PTR [rcx+rax*1]
   140014e51:	cmp    r10,0xffffffffffffffff
   140014e55:	je     0x140014e62
   140014e57:	cmp    r10,0xfffffffffffffffe
   140014e5b:	je     0x140014e62
   140014e5d:	test   r10,r10
   140014e60:	jne    0x140014e68
   140014e62:	mov    DWORD PTR [rdx],0xfffffffe
   140014e68:	inc    r8
   140014e6b:	add    rdx,0x30
   140014e6f:	dec    r9
   140014e72:	jne    0x140014e31
   140014e74:	xor    eax,eax
   140014e76:	add    rsp,0x20
   140014e7a:	pop    rbx
   140014e7b:	ret    
   140014e7c:	sub    rsp,0x28
   140014e80:	call   0x140016334
   140014e85:	cmp    BYTE PTR [rip+0xe7cc],0x0        # 0x140023658
   140014e8c:	je     0x140014e93
   140014e8e:	call   0x1400160d4
   140014e93:	mov    rcx,QWORD PTR [rip+0xf4d6]        # 0x140024370
   140014e9a:	add    rsp,0x28
   140014e9e:	jmp    0x140008584
   140014ea3:	int3   
   140014ea4:	rex push rbx
   140014ea6:	sub    rsp,0x20
   140014eaa:	mov    rbx,rcx
   140014ead:	lea    rcx,[rip+0xd42c]        # 0x1400222e0
   140014eb4:	cmp    rbx,rcx
   140014eb7:	jb     0x140014ef7
   140014eb9:	lea    rax,[rip+0xd7b0]        # 0x140022670
   140014ec0:	cmp    rbx,rax
   140014ec3:	ja     0x140014ef7
   140014ec5:	mov    rdx,rbx
   140014ec8:	movabs rax,0x2aaaaaaaaaaaaaab
   140014ed2:	sub    rdx,rcx
   140014ed5:	imul   rdx
   140014ed8:	sar    rdx,0x3
   140014edc:	mov    rcx,rdx
   140014edf:	shr    rcx,0x3f
   140014ee3:	lea    ecx,[rcx+rdx*1+0x10]
   140014ee7:	call   0x140012e0c
   140014eec:	bts    DWORD PTR [rbx+0x18],0xf
   140014ef1:	add    rsp,0x20
   140014ef5:	pop    rbx
   140014ef6:	ret    
   140014ef7:	lea    rcx,[rbx+0x30]
   140014efb:	add    rsp,0x20
   140014eff:	pop    rbx
   140014f00:	rex.W jmp QWORD PTR [rip+0x31d9]        # 0x1400180e0
   140014f07:	int3   
   140014f08:	rex push rbx
   140014f0a:	sub    rsp,0x20
   140014f0e:	mov    rbx,rdx
   140014f11:	cmp    ecx,0x14
   140014f14:	jge    0x140014f29
   140014f16:	add    ecx,0x10
   140014f19:	call   0x140012e0c
   140014f1e:	bts    DWORD PTR [rbx+0x18],0xf
   140014f23:	add    rsp,0x20
   140014f27:	pop    rbx
   140014f28:	ret    
   140014f29:	lea    rcx,[rdx+0x30]
   140014f2d:	add    rsp,0x20
   140014f31:	pop    rbx
   140014f32:	rex.W jmp QWORD PTR [rip+0x31a7]        # 0x1400180e0
   140014f39:	int3   
   140014f3a:	int3   
   140014f3b:	int3   
   140014f3c:	lea    rdx,[rip+0xd39d]        # 0x1400222e0
   140014f43:	cmp    rcx,rdx
   140014f46:	jb     0x140014f7d
   140014f48:	lea    rax,[rip+0xd721]        # 0x140022670
   140014f4f:	cmp    rcx,rax
   140014f52:	ja     0x140014f7d
   140014f54:	btr    DWORD PTR [rcx+0x18],0xf
   140014f59:	sub    rcx,rdx
   140014f5c:	movabs rax,0x2aaaaaaaaaaaaaab
   140014f66:	imul   rcx
   140014f69:	sar    rdx,0x3
   140014f6d:	mov    rcx,rdx
   140014f70:	shr    rcx,0x3f
   140014f74:	lea    ecx,[rcx+rdx*1+0x10]
   140014f78:	jmp    0x140012d0c
   140014f7d:	add    rcx,0x30
   140014f81:	rex.W jmp QWORD PTR [rip+0x3160]        # 0x1400180e8
   140014f88:	cmp    ecx,0x14
   140014f8b:	jge    0x140014f9a
   140014f8d:	btr    DWORD PTR [rdx+0x18],0xf
   140014f92:	add    ecx,0x10
   140014f95:	jmp    0x140012d0c
   140014f9a:	lea    rcx,[rdx+0x30]
   140014f9e:	rex.W jmp QWORD PTR [rip+0x3143]        # 0x1400180e8
   140014fa5:	int3   
   140014fa6:	int3   
   140014fa7:	int3   
   140014fa8:	sub    rsp,0x28
   140014fac:	test   rcx,rcx
   140014faf:	jne    0x140014fc6
   140014fb1:	call   0x140008e40
   140014fb6:	mov    DWORD PTR [rax],0x16
   140014fbc:	call   0x14000dafc
   140014fc1:	or     eax,0xffffffff
   140014fc4:	jmp    0x140014fc9
   140014fc6:	mov    eax,DWORD PTR [rcx+0x1c]
   140014fc9:	add    rsp,0x28
   140014fcd:	ret    
   140014fce:	int3   
   140014fcf:	int3   
   140014fd0:	mov    QWORD PTR [rsp+0x18],rbx
   140014fd5:	mov    QWORD PTR [rsp+0x20],rbp
   140014fda:	push   rsi
   140014fdb:	push   rdi
   140014fdc:	push   r12
   140014fde:	sub    rsp,0x40
   140014fe2:	mov    rax,QWORD PTR [rip+0xc427]        # 0x140021410
   140014fe9:	xor    rax,rsp
   140014fec:	mov    QWORD PTR [rsp+0x30],rax
   140014ff1:	test   BYTE PTR [rdx+0x18],0x40
   140014ff5:	mov    rdi,rdx
   140014ff8:	movzx  esi,cx
   140014ffb:	jne    0x140015186
   140015001:	mov    rcx,rdx
   140015004:	call   0x140014fa8
   140015009:	lea    rbp,[rip+0xcdb0]        # 0x140021dc0
   140015010:	lea    r12,[rip+0x10389]        # 0x1400253a0
   140015017:	cmp    eax,0xffffffff
   14001501a:	je     0x140015051
   14001501c:	mov    rcx,rdi
   14001501f:	call   0x140014fa8
   140015024:	cmp    eax,0xfffffffe
   140015027:	je     0x140015051
   140015029:	mov    rcx,rdi
   14001502c:	call   0x140014fa8
   140015031:	mov    rcx,rdi
   140015034:	movsxd rbx,eax
   140015037:	sar    rbx,0x5
   14001503b:	call   0x140014fa8
   140015040:	mov    r11d,eax
   140015043:	and    r11d,0x1f
   140015047:	imul   r11,r11,0x58
   14001504b:	add    r11,QWORD PTR [r12+rbx*8]
   14001504f:	jmp    0x140015054
   140015051:	mov    r11,rbp
   140015054:	mov    al,BYTE PTR [r11+0x38]
   140015058:	and    al,0x7f
   14001505a:	cmp    al,0x2
   14001505c:	je     0x14001516f
   140015062:	mov    rcx,rdi
   140015065:	call   0x140014fa8
   14001506a:	cmp    eax,0xffffffff
   14001506d:	je     0x1400150a4
   14001506f:	mov    rcx,rdi
   140015072:	call   0x140014fa8
   140015077:	cmp    eax,0xfffffffe
   14001507a:	je     0x1400150a4
   14001507c:	mov    rcx,rdi
   14001507f:	call   0x140014fa8
   140015084:	mov    rcx,rdi
   140015087:	movsxd rbx,eax
   14001508a:	sar    rbx,0x5
   14001508e:	call   0x140014fa8
   140015093:	mov    r11d,eax
   140015096:	and    r11d,0x1f
   14001509a:	imul   r11,r11,0x58
   14001509e:	add    r11,QWORD PTR [r12+rbx*8]
   1400150a2:	jmp    0x1400150a7
   1400150a4:	mov    r11,rbp
   1400150a7:	mov    al,BYTE PTR [r11+0x38]
   1400150ab:	and    al,0x7f
   1400150ad:	cmp    al,0x1
   1400150af:	je     0x14001516f
   1400150b5:	mov    rcx,rdi
   1400150b8:	call   0x140014fa8
   1400150bd:	cmp    eax,0xffffffff
   1400150c0:	je     0x1400150f3
   1400150c2:	mov    rcx,rdi
   1400150c5:	call   0x140014fa8
   1400150ca:	cmp    eax,0xfffffffe
   1400150cd:	je     0x1400150f3
   1400150cf:	mov    rcx,rdi
   1400150d2:	call   0x140014fa8
   1400150d7:	mov    rcx,rdi
   1400150da:	movsxd rbx,eax
   1400150dd:	sar    rbx,0x5
   1400150e1:	call   0x140014fa8
   1400150e6:	mov    ebp,eax
   1400150e8:	and    ebp,0x1f
   1400150eb:	imul   rbp,rbp,0x58
   1400150ef:	add    rbp,QWORD PTR [r12+rbx*8]
   1400150f3:	test   BYTE PTR [rbp+0x8],0x80
   1400150f7:	je     0x140015186
   1400150fd:	lea    rdx,[rsp+0x24]
   140015102:	lea    rcx,[rsp+0x20]
   140015107:	movzx  r9d,si
   14001510b:	mov    r8d,0x5
   140015111:	call   0x140016694
   140015116:	xor    ebx,ebx
   140015118:	test   eax,eax
   14001511a:	je     0x140015126
   14001511c:	mov    eax,0xffff
   140015121:	jmp    0x1400151af
   140015126:	cmp    DWORD PTR [rsp+0x20],ebx
   14001512a:	jle    0x14001516a
   14001512c:	lea    rbp,[rsp+0x24]
   140015131:	dec    DWORD PTR [rdi+0x8]
   140015134:	js     0x14001514c
   140015136:	mov    rcx,QWORD PTR [rdi]
   140015139:	mov    al,BYTE PTR [rbp+0x0]
   14001513c:	mov    BYTE PTR [rcx],al
   14001513e:	mov    rax,QWORD PTR [rdi]
   140015141:	movzx  ecx,BYTE PTR [rax]
   140015144:	inc    rax
   140015147:	mov    QWORD PTR [rdi],rax
   14001514a:	jmp    0x14001515a
   14001514c:	movsx  ecx,BYTE PTR [rbp+0x0]
   140015150:	mov    rdx,rdi
   140015153:	call   0x14000e3ac
   140015158:	mov    ecx,eax
   14001515a:	cmp    ecx,0xffffffff
   14001515d:	je     0x14001511c
   14001515f:	inc    ebx
   140015161:	inc    rbp
   140015164:	cmp    ebx,DWORD PTR [rsp+0x20]
   140015168:	jl     0x140015131
   14001516a:	movzx  eax,si
   14001516d:	jmp    0x1400151af
   14001516f:	movsxd rcx,DWORD PTR [rdi+0x8]
   140015173:	add    rcx,0xfffffffffffffffe
   140015177:	mov    DWORD PTR [rdi+0x8],ecx
   14001517a:	test   ecx,ecx
   14001517c:	js     0x1400151a4
   14001517e:	mov    rcx,QWORD PTR [rdi]
   140015181:	mov    WORD PTR [rcx],si
   140015184:	jmp    0x14001519b
   140015186:	movsxd rax,DWORD PTR [rdi+0x8]
   14001518a:	add    rax,0xfffffffffffffffe
   14001518e:	mov    DWORD PTR [rdi+0x8],eax
   140015191:	test   eax,eax
   140015193:	js     0x1400151a4
   140015195:	mov    rax,QWORD PTR [rdi]
   140015198:	mov    WORD PTR [rax],si
   14001519b:	add    QWORD PTR [rdi],0x2
   14001519f:	movzx  eax,si
   1400151a2:	jmp    0x1400151af
   1400151a4:	mov    rdx,rdi
   1400151a7:	movzx  ecx,si
   1400151aa:	call   0x140016340
   1400151af:	mov    rcx,QWORD PTR [rsp+0x30]
   1400151b4:	xor    rcx,rsp
   1400151b7:	call   0x140007d20
   1400151bc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400151c1:	mov    rbp,QWORD PTR [rsp+0x78]
   1400151c6:	add    rsp,0x40
   1400151ca:	pop    r12
   1400151cc:	pop    rdi
   1400151cd:	pop    rsi
   1400151ce:	ret    
   1400151cf:	int3   
   1400151d0:	mov    rcx,QWORD PTR [rip+0xc239]        # 0x140021410
   1400151d7:	xor    eax,eax
   1400151d9:	or     rcx,0x1
   1400151dd:	cmp    QWORD PTR [rip+0xefd4],rcx        # 0x1400241b8
   1400151e4:	sete   al
   1400151e7:	ret    
   1400151e8:	mov    rax,rsp
   1400151eb:	mov    QWORD PTR [rax+0x8],rbx
   1400151ef:	mov    QWORD PTR [rax+0x10],rsi
   1400151f3:	mov    QWORD PTR [rax+0x18],rdi
   1400151f7:	mov    QWORD PTR [rax+0x20],r12
   1400151fb:	push   rbp
   1400151fc:	mov    rbp,rsp
   1400151ff:	sub    rsp,0x50
   140015203:	xor    r12d,r12d
   140015206:	mov    rsi,r8
   140015209:	mov    rdi,rdx
   14001520c:	mov    rbx,rcx
   14001520f:	test   rdx,rdx
   140015212:	je     0x140015227
   140015214:	test   r8,r8
   140015217:	je     0x140015227
   140015219:	cmp    BYTE PTR [rdx],r12b
   14001521c:	jne    0x140015243
   14001521e:	test   rcx,rcx
   140015221:	je     0x140015227
   140015223:	mov    WORD PTR [rcx],r12w
   140015227:	xor    eax,eax
   140015229:	mov    rbx,QWORD PTR [rsp+0x60]
   14001522e:	mov    rsi,QWORD PTR [rsp+0x68]
   140015233:	mov    rdi,QWORD PTR [rsp+0x70]
   140015238:	mov    r12,QWORD PTR [rsp+0x78]
   14001523d:	add    rsp,0x50
   140015241:	pop    rbp
   140015242:	ret    
   140015243:	lea    rcx,[rbp-0x20]
   140015247:	mov    rdx,r9
   14001524a:	call   0x140007d40
   14001524f:	mov    r11,QWORD PTR [rbp-0x20]
   140015253:	cmp    DWORD PTR [r11+0x14],r12d
   140015257:	jne    0x14001527c
   140015259:	test   rbx,rbx
   14001525c:	je     0x140015264
   14001525e:	movzx  eax,BYTE PTR [rdi]
   140015261:	mov    WORD PTR [rbx],ax
   140015264:	cmp    BYTE PTR [rbp-0x8],r12b
   140015268:	je     0x140015275
   14001526a:	mov    rax,QWORD PTR [rbp-0x10]
   14001526e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015275:	mov    eax,0x1
   14001527a:	jmp    0x140015229
   14001527c:	movzx  ecx,BYTE PTR [rdi]
   14001527f:	lea    rdx,[rbp-0x20]
   140015283:	call   0x140015368
   140015288:	test   eax,eax
   14001528a:	je     0x140015327
   140015290:	mov    rcx,QWORD PTR [rbp-0x20]
   140015294:	mov    r9d,DWORD PTR [rcx+0x10c]
   14001529b:	cmp    r9d,0x1
   14001529f:	jle    0x1400152d1
   1400152a1:	cmp    esi,r9d
   1400152a4:	jl     0x1400152d1
   1400152a6:	mov    ecx,DWORD PTR [rcx+0x4]
   1400152a9:	mov    eax,r12d
   1400152ac:	test   rbx,rbx
   1400152af:	setne  al
   1400152b2:	mov    r8,rdi
   1400152b5:	mov    edx,0x9
   1400152ba:	mov    DWORD PTR [rsp+0x28],eax
   1400152be:	mov    QWORD PTR [rsp+0x20],rbx
   1400152c3:	call   QWORD PTR [rip+0x2ddf]        # 0x1400180a8
   1400152c9:	mov    rcx,QWORD PTR [rbp-0x20]
   1400152cd:	test   eax,eax
   1400152cf:	jne    0x1400152e3
   1400152d1:	movsxd rax,DWORD PTR [rcx+0x10c]
   1400152d8:	cmp    rsi,rax
   1400152db:	jb     0x140015303
   1400152dd:	cmp    BYTE PTR [rdi+0x1],r12b
   1400152e1:	je     0x140015303
   1400152e3:	mov    eax,DWORD PTR [rcx+0x10c]
   1400152e9:	cmp    BYTE PTR [rbp-0x8],r12b
   1400152ed:	je     0x140015229
   1400152f3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400152f7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400152fe:	jmp    0x140015229
   140015303:	call   0x140008e40
   140015308:	mov    DWORD PTR [rax],0x2a
   14001530e:	cmp    BYTE PTR [rbp-0x8],r12b
   140015312:	je     0x14001531f
   140015314:	mov    rax,QWORD PTR [rbp-0x10]
   140015318:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001531f:	or     eax,0xffffffff
   140015322:	jmp    0x140015229
   140015327:	mov    eax,r12d
   14001532a:	mov    r9d,0x1
   140015330:	test   rbx,rbx
   140015333:	setne  al
   140015336:	lea    edx,[r9+0x8]
   14001533a:	mov    r8,rdi
   14001533d:	mov    DWORD PTR [rsp+0x28],eax
   140015341:	mov    rax,QWORD PTR [rbp-0x20]
   140015345:	mov    QWORD PTR [rsp+0x20],rbx
   14001534a:	mov    ecx,DWORD PTR [rax+0x4]
   14001534d:	call   QWORD PTR [rip+0x2d55]        # 0x1400180a8
   140015353:	test   eax,eax
   140015355:	jne    0x140015264
   14001535b:	jmp    0x140015303
   14001535d:	int3   
   14001535e:	int3   
   14001535f:	int3   
   140015360:	xor    r9d,r9d
   140015363:	jmp    0x1400151e8
   140015368:	rex push rbx
   14001536a:	sub    rsp,0x40
   14001536e:	mov    ebx,ecx
   140015370:	lea    rcx,[rsp+0x20]
   140015375:	call   0x140007d40
   14001537a:	mov    rax,QWORD PTR [rsp+0x20]
   14001537f:	movzx  r11d,bl
   140015383:	mov    rcx,QWORD PTR [rax+0x140]
   14001538a:	movzx  eax,WORD PTR [rcx+r11*2]
   14001538f:	and    eax,0x8000
   140015394:	cmp    BYTE PTR [rsp+0x38],0x0
   140015399:	je     0x1400153a7
   14001539b:	mov    rcx,QWORD PTR [rsp+0x30]
   1400153a0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153a7:	add    rsp,0x40
   1400153ab:	pop    rbx
   1400153ac:	ret    
   1400153ad:	int3   
   1400153ae:	int3   
   1400153af:	int3   
   1400153b0:	rex push rbx
   1400153b2:	sub    rsp,0x40
   1400153b6:	mov    ebx,ecx
   1400153b8:	lea    rcx,[rsp+0x20]
   1400153bd:	xor    edx,edx
   1400153bf:	call   0x140007d40
   1400153c4:	mov    rax,QWORD PTR [rsp+0x20]
   1400153c9:	movzx  r11d,bl
   1400153cd:	mov    rcx,QWORD PTR [rax+0x140]
   1400153d4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400153d9:	and    eax,0x8000
   1400153de:	cmp    BYTE PTR [rsp+0x38],0x0
   1400153e3:	je     0x1400153f1
   1400153e5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400153ea:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153f1:	add    rsp,0x40
   1400153f5:	pop    rbx
   1400153f6:	ret    
   1400153f7:	int3   
   1400153f8:	mov    edx,0x30
   1400153fd:	cmp    cx,dx
   140015400:	jb     0x140015589
   140015406:	cmp    cx,0x3a
   14001540a:	jae    0x140015412
   14001540c:	movzx  eax,cx
   14001540f:	sub    eax,edx
   140015411:	ret    
   140015412:	mov    edx,0xff10
   140015417:	cmp    cx,dx
   14001541a:	jae    0x14001557b
   140015420:	mov    edx,0x660
   140015425:	cmp    cx,dx
   140015428:	jb     0x140015589
   14001542e:	lea    eax,[rdx+0xa]
   140015431:	cmp    cx,ax
   140015434:	jb     0x14001540c
   140015436:	mov    edx,0x6f0
   14001543b:	cmp    cx,dx
   14001543e:	jb     0x140015589
   140015444:	lea    eax,[rdx+0xa]
   140015447:	cmp    cx,ax
   14001544a:	jb     0x14001540c
   14001544c:	mov    edx,0x966
   140015451:	cmp    cx,dx
   140015454:	jb     0x140015589
   14001545a:	lea    eax,[rdx+0xa]
   14001545d:	cmp    cx,ax
   140015460:	jb     0x14001540c
   140015462:	lea    edx,[rax+0x76]
   140015465:	cmp    cx,dx
   140015468:	jb     0x140015589
   14001546e:	lea    eax,[rdx+0xa]
   140015471:	cmp    cx,ax
   140015474:	jb     0x14001540c
   140015476:	lea    edx,[rax+0x76]
   140015479:	cmp    cx,dx
   14001547c:	jb     0x140015589
   140015482:	lea    eax,[rdx+0xa]
   140015485:	cmp    cx,ax
   140015488:	jb     0x14001540c
   14001548a:	lea    edx,[rax+0x76]
   14001548d:	cmp    cx,dx
   140015490:	jb     0x140015589
   140015496:	lea    eax,[rdx+0xa]
   140015499:	cmp    cx,ax
   14001549c:	jb     0x14001540c
   1400154a2:	lea    edx,[rax+0x76]
   1400154a5:	cmp    cx,dx
   1400154a8:	jb     0x140015589
   1400154ae:	lea    eax,[rdx+0xa]
   1400154b1:	cmp    cx,ax
   1400154b4:	jb     0x14001540c
   1400154ba:	mov    edx,0xc66
   1400154bf:	cmp    cx,dx
   1400154c2:	jb     0x140015589
   1400154c8:	lea    eax,[rdx+0xa]
   1400154cb:	cmp    cx,ax
   1400154ce:	jb     0x14001540c
   1400154d4:	lea    edx,[rax+0x76]
   1400154d7:	cmp    cx,dx
   1400154da:	jb     0x140015589
   1400154e0:	lea    eax,[rdx+0xa]
   1400154e3:	cmp    cx,ax
   1400154e6:	jb     0x14001540c
   1400154ec:	lea    edx,[rax+0x76]
   1400154ef:	cmp    cx,dx
   1400154f2:	jb     0x140015589
   1400154f8:	lea    eax,[rdx+0xa]
   1400154fb:	cmp    cx,ax
   1400154fe:	jb     0x14001540c
   140015504:	mov    edx,0xe50
   140015509:	cmp    cx,dx
   14001550c:	jb     0x140015589
   14001550e:	lea    eax,[rdx+0xa]
   140015511:	cmp    cx,ax
   140015514:	jb     0x14001540c
   14001551a:	lea    edx,[rax+0x76]
   14001551d:	cmp    cx,dx
   140015520:	jb     0x140015589
   140015522:	lea    eax,[rdx+0xa]
   140015525:	cmp    cx,ax
   140015528:	jb     0x14001540c
   14001552e:	lea    edx,[rax+0x46]
   140015531:	cmp    cx,dx
   140015534:	jb     0x140015589
   140015536:	lea    eax,[rdx+0xa]
   140015539:	cmp    cx,ax
   14001553c:	jb     0x14001540c
   140015542:	mov    edx,0x1040
   140015547:	cmp    cx,dx
   14001554a:	jb     0x140015589
   14001554c:	lea    eax,[rdx+0xa]
   14001554f:	cmp    cx,ax
   140015552:	jb     0x14001540c
   140015558:	mov    edx,0x17e0
   14001555d:	cmp    cx,dx
   140015560:	jb     0x140015589
   140015562:	lea    eax,[rdx+0xa]
   140015565:	cmp    cx,ax
   140015568:	jb     0x14001540c
   14001556e:	lea    edx,[rax+0x26]
   140015571:	cmp    cx,dx
   140015574:	jb     0x140015589
   140015576:	lea    eax,[rdx+0xa]
   140015579:	jmp    0x140015580
   14001557b:	mov    eax,0xff1a
   140015580:	cmp    cx,ax
   140015583:	jb     0x14001540c
   140015589:	or     eax,0xffffffff
   14001558c:	ret    
   14001558d:	int3   
   14001558e:	int3   
   14001558f:	int3   
   140015590:	rex push rbx
   140015592:	push   rbp
   140015593:	push   rsi
   140015594:	push   rdi
   140015595:	push   r12
   140015597:	push   r13
   140015599:	push   r14
   14001559b:	sub    rsp,0x50
   14001559f:	mov    rax,QWORD PTR [rip+0xbe6a]        # 0x140021410
   1400155a6:	xor    rax,rsp
   1400155a9:	mov    QWORD PTR [rsp+0x48],rax
   1400155ae:	mov    ebp,r8d
   1400155b1:	mov    r14,rdx
   1400155b4:	mov    r13,rcx
   1400155b7:	call   0x14000d5b8
   1400155bc:	xor    ebx,ebx
   1400155be:	cmp    QWORD PTR [rip+0xebfb],rbx        # 0x1400241c0
   1400155c5:	mov    rdi,rax
   1400155c8:	jne    0x1400156a3
   1400155ce:	lea    rcx,[rip+0x650b]        # 0x14001bae0
   1400155d5:	call   QWORD PTR [rip+0x2ab5]        # 0x140018090
   1400155db:	mov    rsi,rax
   1400155de:	test   rax,rax
   1400155e1:	je     0x14001577a
   1400155e7:	lea    rdx,[rip+0x64e2]        # 0x14001bad0
   1400155ee:	mov    rcx,rax
   1400155f1:	call   QWORD PTR [rip+0x2be9]        # 0x1400181e0
   1400155f7:	test   rax,rax
   1400155fa:	je     0x14001577a
   140015600:	mov    rcx,rax
   140015603:	call   QWORD PTR [rip+0x2aaf]        # 0x1400180b8
   140015609:	lea    rdx,[rip+0x64b0]        # 0x14001bac0
   140015610:	mov    rcx,rsi
   140015613:	mov    QWORD PTR [rip+0xeba6],rax        # 0x1400241c0
   14001561a:	call   QWORD PTR [rip+0x2bc0]        # 0x1400181e0
   140015620:	mov    rcx,rax
   140015623:	call   QWORD PTR [rip+0x2a8f]        # 0x1400180b8
   140015629:	lea    rdx,[rip+0x6478]        # 0x14001baa8
   140015630:	mov    rcx,rsi
   140015633:	mov    QWORD PTR [rip+0xeb8e],rax        # 0x1400241c8
   14001563a:	call   QWORD PTR [rip+0x2ba0]        # 0x1400181e0
   140015640:	mov    rcx,rax
   140015643:	call   QWORD PTR [rip+0x2a6f]        # 0x1400180b8
   140015649:	lea    rdx,[rip+0x6438]        # 0x14001ba88
   140015650:	mov    rcx,rsi
   140015653:	mov    QWORD PTR [rip+0xeb76],rax        # 0x1400241d0
   14001565a:	call   QWORD PTR [rip+0x2b80]        # 0x1400181e0
   140015660:	mov    rcx,rax
   140015663:	call   QWORD PTR [rip+0x2a4f]        # 0x1400180b8
   140015669:	mov    r11,rax
   14001566c:	mov    QWORD PTR [rip+0xeb6d],rax        # 0x1400241e0
   140015673:	test   rax,rax
   140015676:	je     0x14001569a
   140015678:	lea    rdx,[rip+0x63f1]        # 0x14001ba70
   14001567f:	mov    rcx,rsi
   140015682:	call   QWORD PTR [rip+0x2b58]        # 0x1400181e0
   140015688:	mov    rcx,rax
   14001568b:	call   QWORD PTR [rip+0x2a27]        # 0x1400180b8
   140015691:	mov    QWORD PTR [rip+0xeb40],rax        # 0x1400241d8
   140015698:	jmp    0x1400156aa
   14001569a:	mov    rax,QWORD PTR [rip+0xeb37]        # 0x1400241d8
   1400156a1:	jmp    0x1400156b1
   1400156a3:	mov    rax,QWORD PTR [rip+0xeb2e]        # 0x1400241d8
   1400156aa:	mov    r11,QWORD PTR [rip+0xeb2f]        # 0x1400241e0
   1400156b1:	cmp    rax,rdi
   1400156b4:	je     0x140015718
   1400156b6:	cmp    r11,rdi
   1400156b9:	je     0x140015718
   1400156bb:	mov    rcx,rax
   1400156be:	call   QWORD PTR [rip+0x29fc]        # 0x1400180c0
   1400156c4:	mov    rcx,QWORD PTR [rip+0xeb15]        # 0x1400241e0
   1400156cb:	mov    rsi,rax
   1400156ce:	call   QWORD PTR [rip+0x29ec]        # 0x1400180c0
   1400156d4:	mov    r12,rax
   1400156d7:	test   rsi,rsi
   1400156da:	je     0x140015718
   1400156dc:	test   rax,rax
   1400156df:	je     0x140015718
   1400156e1:	call   rsi
   1400156e3:	test   rax,rax
   1400156e6:	je     0x140015712
   1400156e8:	lea    rcx,[rsp+0x30]
   1400156ed:	mov    r9d,0xc
   1400156f3:	lea    r8,[rsp+0x38]
   1400156f8:	mov    QWORD PTR [rsp+0x20],rcx
   1400156fd:	lea    edx,[r9-0xb]
   140015701:	mov    rcx,rax
   140015704:	call   r12
   140015707:	test   eax,eax
   140015709:	je     0x140015712
   14001570b:	test   BYTE PTR [rsp+0x40],0x1
   140015710:	jne    0x140015718
   140015712:	bts    ebp,0x15
   140015716:	jmp    0x140015758
   140015718:	mov    rcx,QWORD PTR [rip+0xeaa9]        # 0x1400241c8
   14001571f:	cmp    rcx,rdi
   140015722:	je     0x140015758
   140015724:	call   QWORD PTR [rip+0x2996]        # 0x1400180c0
   14001572a:	test   rax,rax
   14001572d:	je     0x140015758
   14001572f:	call   rax
   140015731:	mov    rbx,rax
   140015734:	test   rax,rax
   140015737:	je     0x140015758
   140015739:	mov    rcx,QWORD PTR [rip+0xea90]        # 0x1400241d0
   140015740:	cmp    rcx,rdi
   140015743:	je     0x140015758
   140015745:	call   QWORD PTR [rip+0x2975]        # 0x1400180c0
   14001574b:	test   rax,rax
   14001574e:	je     0x140015758
   140015750:	mov    rcx,rbx
   140015753:	call   rax
   140015755:	mov    rbx,rax
   140015758:	mov    rcx,QWORD PTR [rip+0xea61]        # 0x1400241c0
   14001575f:	call   QWORD PTR [rip+0x295b]        # 0x1400180c0
   140015765:	test   rax,rax
   140015768:	je     0x14001577a
   14001576a:	mov    r9d,ebp
   14001576d:	mov    r8,r14
   140015770:	mov    rdx,r13
   140015773:	mov    rcx,rbx
   140015776:	call   rax
   140015778:	jmp    0x14001577c
   14001577a:	xor    eax,eax
   14001577c:	mov    rcx,QWORD PTR [rsp+0x48]
   140015781:	xor    rcx,rsp
   140015784:	call   0x140007d20
   140015789:	add    rsp,0x50
   14001578d:	pop    r14
   14001578f:	pop    r13
   140015791:	pop    r12
   140015793:	pop    rdi
   140015794:	pop    rsi
   140015795:	pop    rbp
   140015796:	pop    rbx
   140015797:	ret    
   140015798:	rex push rbx
   14001579a:	sub    rsp,0x20
   14001579e:	xor    r10d,r10d
   1400157a1:	mov    r9,rcx
   1400157a4:	test   rcx,rcx
   1400157a7:	je     0x1400157b7
   1400157a9:	test   rdx,rdx
   1400157ac:	je     0x1400157b7
   1400157ae:	test   r8,r8
   1400157b1:	jne    0x1400157d0
   1400157b3:	mov    WORD PTR [rcx],r10w
   1400157b7:	call   0x140008e40
   1400157bc:	mov    ebx,0x16
   1400157c1:	mov    DWORD PTR [rax],ebx
   1400157c3:	call   0x14000dafc
   1400157c8:	mov    eax,ebx
   1400157ca:	add    rsp,0x20
   1400157ce:	pop    rbx
   1400157cf:	ret    
   1400157d0:	cmp    WORD PTR [rcx],r10w
   1400157d4:	je     0x1400157df
   1400157d6:	add    rcx,0x2
   1400157da:	dec    rdx
   1400157dd:	jne    0x1400157d0
   1400157df:	test   rdx,rdx
   1400157e2:	jne    0x1400157ea
   1400157e4:	mov    WORD PTR [r9],r10w
   1400157e8:	jmp    0x1400157b7
   1400157ea:	sub    rcx,r8
   1400157ed:	movzx  eax,WORD PTR [r8]
   1400157f1:	mov    WORD PTR [rcx+r8*1],ax
   1400157f6:	add    r8,0x2
   1400157fa:	test   ax,ax
   1400157fd:	je     0x140015804
   1400157ff:	dec    rdx
   140015802:	jne    0x1400157ed
   140015804:	test   rdx,rdx
   140015807:	jne    0x140015819
   140015809:	mov    WORD PTR [r9],r10w
   14001580d:	call   0x140008e40
   140015812:	mov    ebx,0x22
   140015817:	jmp    0x1400157c1
   140015819:	xor    eax,eax
   14001581b:	jmp    0x1400157ca
   14001581d:	int3   
   14001581e:	int3   
   14001581f:	int3   
   140015820:	rex push rbx
   140015822:	sub    rsp,0x20
   140015826:	xor    ebx,ebx
   140015828:	mov    r10,r8
   14001582b:	test   r9,r9
   14001582e:	jne    0x14001583e
   140015830:	test   rcx,rcx
   140015833:	jne    0x140015843
   140015835:	test   rdx,rdx
   140015838:	jne    0x14001585a
   14001583a:	xor    eax,eax
   14001583c:	jmp    0x14001586d
   14001583e:	test   rcx,rcx
   140015841:	je     0x14001585a
   140015843:	test   rdx,rdx
   140015846:	je     0x14001585a
   140015848:	test   r9,r9
   14001584b:	jne    0x140015852
   14001584d:	mov    WORD PTR [rcx],bx
   140015850:	jmp    0x14001583a
   140015852:	test   r8,r8
   140015855:	jne    0x140015873
   140015857:	mov    WORD PTR [rcx],bx
   14001585a:	call   0x140008e40
   14001585f:	mov    ebx,0x16
   140015864:	mov    DWORD PTR [rax],ebx
   140015866:	call   0x14000dafc
   14001586b:	mov    eax,ebx
   14001586d:	add    rsp,0x20
   140015871:	pop    rbx
   140015872:	ret    
   140015873:	mov    r11,rcx
   140015876:	mov    r8,rdx
   140015879:	cmp    r9,0xffffffffffffffff
   14001587d:	jne    0x14001589b
   14001587f:	sub    r11,r10
   140015882:	movzx  eax,WORD PTR [r10]
   140015886:	mov    WORD PTR [r11+r10*1],ax
   14001588b:	add    r10,0x2
   14001588f:	test   ax,ax
   140015892:	je     0x1400158c3
   140015894:	dec    r8
   140015897:	jne    0x140015882
   140015899:	jmp    0x1400158c3
   14001589b:	sub    r10,rcx
   14001589e:	movzx  eax,WORD PTR [r10+r11*1]
   1400158a3:	mov    WORD PTR [r11],ax
   1400158a7:	add    r11,0x2
   1400158ab:	test   ax,ax
   1400158ae:	je     0x1400158ba
   1400158b0:	dec    r8
   1400158b3:	je     0x1400158ba
   1400158b5:	dec    r9
   1400158b8:	jne    0x14001589e
   1400158ba:	test   r9,r9
   1400158bd:	jne    0x1400158c3
   1400158bf:	mov    WORD PTR [r11],bx
   1400158c3:	test   r8,r8
   1400158c6:	jne    0x14001583a
   1400158cc:	cmp    r9,0xffffffffffffffff
   1400158d0:	jne    0x1400158dd
   1400158d2:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   1400158d7:	lea    eax,[r8+0x50]
   1400158db:	jmp    0x14001586d
   1400158dd:	mov    WORD PTR [rcx],bx
   1400158e0:	call   0x140008e40
   1400158e5:	mov    ebx,0x22
   1400158ea:	jmp    0x140015864
   1400158ef:	int3   
   1400158f0:	mov    rax,rcx
   1400158f3:	movzx  edx,WORD PTR [rax]
   1400158f6:	add    rax,0x2
   1400158fa:	test   dx,dx
   1400158fd:	jne    0x1400158f3
   1400158ff:	sub    rax,rcx
   140015902:	sar    rax,1
   140015905:	dec    rax
   140015908:	ret    
   140015909:	int3   
   14001590a:	int3   
   14001590b:	int3   
   14001590c:	rex push rbx
   14001590e:	sub    rsp,0x20
   140015912:	xor    r10d,r10d
   140015915:	mov    r9,rcx
   140015918:	test   rcx,rcx
   14001591b:	je     0x14001592b
   14001591d:	test   rdx,rdx
   140015920:	je     0x14001592b
   140015922:	test   r8,r8
   140015925:	jne    0x140015944
   140015927:	mov    WORD PTR [rcx],r10w
   14001592b:	call   0x140008e40
   140015930:	mov    ebx,0x16
   140015935:	mov    DWORD PTR [rax],ebx
   140015937:	call   0x14000dafc
   14001593c:	mov    eax,ebx
   14001593e:	add    rsp,0x20
   140015942:	pop    rbx
   140015943:	ret    
   140015944:	sub    rcx,r8
   140015947:	movzx  eax,WORD PTR [r8]
   14001594b:	mov    WORD PTR [rcx+r8*1],ax
   140015950:	add    r8,0x2
   140015954:	test   ax,ax
   140015957:	je     0x14001595e
   140015959:	dec    rdx
   14001595c:	jne    0x140015947
   14001595e:	test   rdx,rdx
   140015961:	jne    0x140015973
   140015963:	mov    WORD PTR [r9],r10w
   140015967:	call   0x140008e40
   14001596c:	mov    ebx,0x22
   140015971:	jmp    0x140015935
   140015973:	xor    eax,eax
   140015975:	jmp    0x14001593e
   140015977:	int3   
   140015978:	sub    rsp,0x28
   14001597c:	test   ecx,ecx
   14001597e:	js     0x1400159a0
   140015980:	cmp    ecx,0x2
   140015983:	jle    0x140015992
   140015985:	cmp    ecx,0x3
   140015988:	jne    0x1400159a0
   14001598a:	mov    eax,DWORD PTR [rip+0xd6c8]        # 0x140023058
   140015990:	jmp    0x1400159b3
   140015992:	mov    eax,DWORD PTR [rip+0xd6c0]        # 0x140023058
   140015998:	mov    DWORD PTR [rip+0xd6ba],ecx        # 0x140023058
   14001599e:	jmp    0x1400159b3
   1400159a0:	call   0x140008e40
   1400159a5:	mov    DWORD PTR [rax],0x16
   1400159ab:	call   0x14000dafc
   1400159b0:	or     eax,0xffffffff
   1400159b3:	add    rsp,0x28
   1400159b7:	ret    
   1400159b8:	rex push rbp
   1400159ba:	push   r12
   1400159bc:	push   r13
   1400159be:	push   r14
   1400159c0:	push   r15
   1400159c2:	sub    rsp,0x50
   1400159c6:	lea    rbp,[rsp+0x40]
   1400159cb:	mov    QWORD PTR [rbp+0x40],rbx
   1400159cf:	mov    QWORD PTR [rbp+0x48],rsi
   1400159d3:	mov    QWORD PTR [rbp+0x50],rdi
   1400159d7:	mov    rax,QWORD PTR [rip+0xba32]        # 0x140021410
   1400159de:	xor    rax,rbp
   1400159e1:	mov    QWORD PTR [rbp+0x0],rax
   1400159e5:	mov    rax,QWORD PTR [rcx]
   1400159e8:	mov    r13d,r8d
   1400159eb:	mov    r14d,edx
   1400159ee:	mov    r12d,DWORD PTR [rax+0x4]
   1400159f2:	mov    r15,r9
   1400159f5:	xor    r8d,r8d
   1400159f8:	xor    r9d,r9d
   1400159fb:	mov    edx,r13d
   1400159fe:	mov    ecx,r14d
   140015a01:	xor    edi,edi
   140015a03:	call   QWORD PTR [rip+0x284f]        # 0x140018258
   140015a09:	movsxd rsi,eax
   140015a0c:	test   eax,eax
   140015a0e:	jne    0x140015a17
   140015a10:	xor    eax,eax
   140015a12:	jmp    0x140015aea
   140015a17:	jle    0x140015a80
   140015a19:	xor    edx,edx
   140015a1b:	lea    rax,[rdx-0x20]
   140015a1f:	div    rsi
   140015a22:	cmp    rax,0x2
   140015a26:	jb     0x140015a80
   140015a28:	lea    rcx,[rsi+rsi*1+0x10]
   140015a2d:	cmp    rcx,0x400
   140015a34:	ja     0x140015a67
   140015a36:	lea    rax,[rcx+0xf]
   140015a3a:	cmp    rax,rcx
   140015a3d:	ja     0x140015a49
   140015a3f:	movabs rax,0xffffffffffffff0
   140015a49:	and    rax,0xfffffffffffffff0
   140015a4d:	call   0x140013e70
   140015a52:	sub    rsp,rax
   140015a55:	lea    rbx,[rsp+0x40]
   140015a5a:	test   rbx,rbx
   140015a5d:	je     0x140015a10
   140015a5f:	mov    DWORD PTR [rbx],0xcccc
   140015a65:	jmp    0x140015a7a
   140015a67:	call   0x14000abd4
   140015a6c:	mov    rbx,rax
   140015a6f:	test   rax,rax
   140015a72:	je     0x140015a83
   140015a74:	mov    DWORD PTR [rax],0xdddd
   140015a7a:	add    rbx,0x10
   140015a7e:	jmp    0x140015a83
   140015a80:	mov    rbx,rdi
   140015a83:	test   rbx,rbx
   140015a86:	je     0x140015a10
   140015a88:	mov    r9d,esi
   140015a8b:	mov    r8,rbx
   140015a8e:	mov    edx,r13d
   140015a91:	mov    ecx,r14d
   140015a94:	call   QWORD PTR [rip+0x27be]        # 0x140018258
   140015a9a:	test   eax,eax
   140015a9c:	je     0x140015ad7
   140015a9e:	mov    eax,DWORD PTR [rbp+0x60]
   140015aa1:	or     r9d,0xffffffff
   140015aa5:	xor    edx,edx
   140015aa7:	mov    QWORD PTR [rsp+0x38],rdi
   140015aac:	mov    r8,rbx
   140015aaf:	mov    ecx,r12d
   140015ab2:	mov    QWORD PTR [rsp+0x30],rdi
   140015ab7:	test   eax,eax
   140015ab9:	jne    0x140015ac6
   140015abb:	mov    DWORD PTR [rsp+0x28],edi
   140015abf:	mov    QWORD PTR [rsp+0x20],rdi
   140015ac4:	jmp    0x140015acf
   140015ac6:	mov    DWORD PTR [rsp+0x28],eax
   140015aca:	mov    QWORD PTR [rsp+0x20],r15
   140015acf:	call   QWORD PTR [rip+0x25cb]        # 0x1400180a0
   140015ad5:	mov    edi,eax
   140015ad7:	lea    rcx,[rbx-0x10]
   140015adb:	cmp    DWORD PTR [rcx],0xdddd
   140015ae1:	jne    0x140015ae8
   140015ae3:	call   0x140008584
   140015ae8:	mov    eax,edi
   140015aea:	mov    rcx,QWORD PTR [rbp+0x0]
   140015aee:	xor    rcx,rbp
   140015af1:	call   0x140007d20
   140015af6:	mov    rbx,QWORD PTR [rbp+0x40]
   140015afa:	mov    rsi,QWORD PTR [rbp+0x48]
   140015afe:	mov    rdi,QWORD PTR [rbp+0x50]
   140015b02:	lea    rsp,[rbp+0x10]
   140015b06:	pop    r15
   140015b08:	pop    r14
   140015b0a:	pop    r13
   140015b0c:	pop    r12
   140015b0e:	pop    rbp
   140015b0f:	ret    
   140015b10:	mov    QWORD PTR [rsp+0x8],rbx
   140015b15:	mov    QWORD PTR [rsp+0x10],rsi
   140015b1a:	push   rdi
   140015b1b:	sub    rsp,0x50
   140015b1f:	mov    esi,edx
   140015b21:	mov    rdx,rcx
   140015b24:	lea    rcx,[rsp+0x30]
   140015b29:	mov    rbx,r9
   140015b2c:	mov    edi,r8d
   140015b2f:	call   0x140007d40
   140015b34:	mov    r11d,DWORD PTR [rsp+0x80]
   140015b3c:	lea    rcx,[rsp+0x30]
   140015b41:	mov    r9,rbx
   140015b44:	mov    r8d,edi
   140015b47:	mov    edx,esi
   140015b49:	mov    DWORD PTR [rsp+0x20],r11d
   140015b4e:	call   0x1400159b8
   140015b53:	cmp    BYTE PTR [rsp+0x48],0x0
   140015b58:	je     0x140015b66
   140015b5a:	mov    rcx,QWORD PTR [rsp+0x40]
   140015b5f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015b66:	mov    rbx,QWORD PTR [rsp+0x60]
   140015b6b:	mov    rsi,QWORD PTR [rsp+0x68]
   140015b70:	add    rsp,0x50
   140015b74:	pop    rdi
   140015b75:	ret    
   140015b76:	int3   
   140015b77:	int3   
   140015b78:	mov    r9,rcx
   140015b7b:	movzx  r8d,BYTE PTR [r9]
   140015b7f:	inc    r9
   140015b82:	lea    eax,[r8-0x41]
   140015b86:	cmp    eax,0x19
   140015b89:	ja     0x140015b8f
   140015b8b:	add    r8d,0x20
   140015b8f:	movzx  ecx,BYTE PTR [rdx]
   140015b92:	inc    rdx
   140015b95:	lea    eax,[rcx-0x41]
   140015b98:	cmp    eax,0x19
   140015b9b:	ja     0x140015ba0
   140015b9d:	add    ecx,0x20
   140015ba0:	test   r8d,r8d
   140015ba3:	je     0x140015baa
   140015ba5:	cmp    r8d,ecx
   140015ba8:	je     0x140015b7b
   140015baa:	sub    r8d,ecx
   140015bad:	mov    eax,r8d
   140015bb0:	ret    
   140015bb1:	int3   
   140015bb2:	int3   
   140015bb3:	int3   
   140015bb4:	mov    QWORD PTR [rsp+0x8],rbx
   140015bb9:	mov    QWORD PTR [rsp+0x10],rsi
   140015bbe:	mov    QWORD PTR [rsp+0x18],rdi
   140015bc3:	push   rbp
   140015bc4:	mov    rbp,rsp
   140015bc7:	sub    rsp,0x40
   140015bcb:	mov    rsi,rcx
   140015bce:	mov    rdi,rdx
   140015bd1:	lea    rcx,[rbp-0x20]
   140015bd5:	mov    rdx,r8
   140015bd8:	call   0x140007d40
   140015bdd:	test   rsi,rsi
   140015be0:	jne    0x140015c0a
   140015be2:	call   0x140008e40
   140015be7:	mov    DWORD PTR [rax],0x16
   140015bed:	call   0x14000dafc
   140015bf2:	cmp    BYTE PTR [rbp-0x8],0x0
   140015bf6:	je     0x140015c03
   140015bf8:	mov    rax,QWORD PTR [rbp-0x10]
   140015bfc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015c03:	mov    eax,0x7fffffff
   140015c08:	jmp    0x140015c75
   140015c0a:	test   rdi,rdi
   140015c0d:	je     0x140015be2
   140015c0f:	mov    rax,QWORD PTR [rbp-0x20]
   140015c13:	cmp    DWORD PTR [rax+0x14],0x0
   140015c17:	jne    0x140015c37
   140015c19:	mov    rdx,rdi
   140015c1c:	mov    rcx,rsi
   140015c1f:	call   0x140015b78
   140015c24:	cmp    BYTE PTR [rbp-0x8],0x0
   140015c28:	je     0x140015c75
   140015c2a:	mov    rcx,QWORD PTR [rbp-0x10]
   140015c2e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015c35:	jmp    0x140015c75
   140015c37:	sub    rsi,rdi
   140015c3a:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140015c3e:	lea    rdx,[rbp-0x20]
   140015c42:	call   0x140016944
   140015c47:	movzx  ecx,BYTE PTR [rdi]
   140015c4a:	lea    rdx,[rbp-0x20]
   140015c4e:	mov    ebx,eax
   140015c50:	call   0x140016944
   140015c55:	inc    rdi
   140015c58:	test   ebx,ebx
   140015c5a:	je     0x140015c60
   140015c5c:	cmp    ebx,eax
   140015c5e:	je     0x140015c3a
   140015c60:	sub    ebx,eax
   140015c62:	cmp    BYTE PTR [rbp-0x8],0x0
   140015c66:	je     0x140015c73
   140015c68:	mov    rcx,QWORD PTR [rbp-0x10]
   140015c6c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015c73:	mov    eax,ebx
   140015c75:	mov    rbx,QWORD PTR [rsp+0x50]
   140015c7a:	mov    rsi,QWORD PTR [rsp+0x58]
   140015c7f:	mov    rdi,QWORD PTR [rsp+0x60]
   140015c84:	add    rsp,0x40
   140015c88:	pop    rbp
   140015c89:	ret    
   140015c8a:	int3   
   140015c8b:	int3   
   140015c8c:	sub    rsp,0x28
   140015c90:	cmp    DWORD PTR [rip+0xd3c5],0x0        # 0x14002305c
   140015c97:	jne    0x140015cc6
   140015c99:	test   rcx,rcx
   140015c9c:	jne    0x140015cb8
   140015c9e:	call   0x140008e40
   140015ca3:	mov    DWORD PTR [rax],0x16
   140015ca9:	call   0x14000dafc
   140015cae:	mov    eax,0x7fffffff
   140015cb3:	add    rsp,0x28
   140015cb7:	ret    
   140015cb8:	test   rdx,rdx
   140015cbb:	je     0x140015c9e
   140015cbd:	add    rsp,0x28
   140015cc1:	jmp    0x140015b78
   140015cc6:	xor    r8d,r8d
   140015cc9:	add    rsp,0x28
   140015ccd:	jmp    0x140015bb4
   140015cd2:	int3   
   140015cd3:	int3   
   140015cd4:	xor    edx,edx
   140015cd6:	lea    r8d,[rdx+0xa]
   140015cda:	jmp    0x140016914
   140015cdf:	int3   
   140015ce0:	mov    r10,rcx
   140015ce3:	test   r8,r8
   140015ce6:	je     0x140015d23
   140015ce8:	movzx  r9d,BYTE PTR [r10]
   140015cec:	inc    r10
   140015cef:	lea    eax,[r9-0x41]
   140015cf3:	cmp    eax,0x19
   140015cf6:	ja     0x140015cfc
   140015cf8:	add    r9d,0x20
   140015cfc:	movzx  ecx,BYTE PTR [rdx]
   140015cff:	inc    rdx
   140015d02:	lea    eax,[rcx-0x41]
   140015d05:	cmp    eax,0x19
   140015d08:	ja     0x140015d0d
   140015d0a:	add    ecx,0x20
   140015d0d:	dec    r8
   140015d10:	je     0x140015d1c
   140015d12:	test   r9d,r9d
   140015d15:	je     0x140015d1c
   140015d17:	cmp    r9d,ecx
   140015d1a:	je     0x140015ce8
   140015d1c:	sub    r9d,ecx
   140015d1f:	mov    eax,r9d
   140015d22:	ret    
   140015d23:	xor    eax,eax
   140015d25:	ret    
   140015d26:	int3   
   140015d27:	int3   
   140015d28:	mov    rax,rsp
   140015d2b:	mov    QWORD PTR [rax+0x8],rbx
   140015d2f:	mov    QWORD PTR [rax+0x10],rsi
   140015d33:	mov    QWORD PTR [rax+0x18],rdi
   140015d37:	mov    QWORD PTR [rax+0x20],r12
   140015d3b:	push   rbp
   140015d3c:	mov    rbp,rsp
   140015d3f:	sub    rsp,0x40
   140015d43:	mov    r12,r8
   140015d46:	mov    rsi,rdx
   140015d49:	mov    rdi,rcx
   140015d4c:	test   r8,r8
   140015d4f:	je     0x140015e0f
   140015d55:	lea    rcx,[rbp-0x20]
   140015d59:	mov    rdx,r9
   140015d5c:	call   0x140007d40
   140015d61:	test   rdi,rdi
   140015d64:	jne    0x140015d91
   140015d66:	call   0x140008e40
   140015d6b:	mov    DWORD PTR [rax],0x16
   140015d71:	call   0x14000dafc
   140015d76:	cmp    BYTE PTR [rbp-0x8],0x0
   140015d7a:	je     0x140015d87
   140015d7c:	mov    rax,QWORD PTR [rbp-0x10]
   140015d80:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015d87:	mov    eax,0x7fffffff
   140015d8c:	jmp    0x140015e11
   140015d91:	test   rsi,rsi
   140015d94:	je     0x140015d66
   140015d96:	cmp    r12,0x7fffffff
   140015d9d:	ja     0x140015d66
   140015d9f:	mov    rax,QWORD PTR [rbp-0x20]
   140015da3:	cmp    DWORD PTR [rax+0x14],0x0
   140015da7:	jne    0x140015dca
   140015da9:	mov    r8,r12
   140015dac:	mov    rdx,rsi
   140015daf:	mov    rcx,rdi
   140015db2:	call   0x140015ce0
   140015db7:	cmp    BYTE PTR [rbp-0x8],0x0
   140015dbb:	je     0x140015e11
   140015dbd:	mov    rcx,QWORD PTR [rbp-0x10]
   140015dc1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015dc8:	jmp    0x140015e11
   140015dca:	sub    rdi,rsi
   140015dcd:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140015dd1:	lea    rdx,[rbp-0x20]
   140015dd5:	call   0x140016944
   140015dda:	movzx  ecx,BYTE PTR [rsi]
   140015ddd:	lea    rdx,[rbp-0x20]
   140015de1:	mov    ebx,eax
   140015de3:	call   0x140016944
   140015de8:	inc    rsi
   140015deb:	dec    r12
   140015dee:	je     0x140015df8
   140015df0:	test   ebx,ebx
   140015df2:	je     0x140015df8
   140015df4:	cmp    ebx,eax
   140015df6:	je     0x140015dcd
   140015df8:	sub    ebx,eax
   140015dfa:	cmp    BYTE PTR [rbp-0x8],0x0
   140015dfe:	je     0x140015e0b
   140015e00:	mov    rcx,QWORD PTR [rbp-0x10]
   140015e04:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015e0b:	mov    eax,ebx
   140015e0d:	jmp    0x140015e11
   140015e0f:	xor    eax,eax
   140015e11:	mov    rbx,QWORD PTR [rsp+0x50]
   140015e16:	mov    rsi,QWORD PTR [rsp+0x58]
   140015e1b:	mov    rdi,QWORD PTR [rsp+0x60]
   140015e20:	mov    r12,QWORD PTR [rsp+0x68]
   140015e25:	add    rsp,0x40
   140015e29:	pop    rbp
   140015e2a:	ret    
   140015e2b:	int3   
   140015e2c:	sub    rsp,0x28
   140015e30:	cmp    DWORD PTR [rip+0xd225],0x0        # 0x14002305c
   140015e37:	jne    0x140015e6f
   140015e39:	test   rcx,rcx
   140015e3c:	jne    0x140015e58
   140015e3e:	call   0x140008e40
   140015e43:	mov    DWORD PTR [rax],0x16
   140015e49:	call   0x14000dafc
   140015e4e:	mov    eax,0x7fffffff
   140015e53:	add    rsp,0x28
   140015e57:	ret    
   140015e58:	test   rdx,rdx
   140015e5b:	je     0x140015e3e
   140015e5d:	cmp    r8,0x7fffffff
   140015e64:	ja     0x140015e3e
   140015e66:	add    rsp,0x28
   140015e6a:	jmp    0x140015ce0
   140015e6f:	xor    r9d,r9d
   140015e72:	add    rsp,0x28
   140015e76:	jmp    0x140015d28
   140015e7b:	int3   
   140015e7c:	mov    ecx,0x2
   140015e81:	jmp    0x14000e014
   140015e86:	int3   
   140015e87:	int3   
   140015e88:	mov    QWORD PTR [rsp+0x8],rbx
   140015e8d:	mov    QWORD PTR [rsp+0x10],rbp
   140015e92:	push   rdi
   140015e93:	sub    rsp,0x20
   140015e97:	test   ecx,ecx
   140015e99:	js     0x140015f0c
   140015e9b:	cmp    ecx,DWORD PTR [rip+0xf4e7]        # 0x140025388
   140015ea1:	jae    0x140015f0c
   140015ea3:	movsxd rbx,ecx
   140015ea6:	lea    rbp,[rip+0xf4f3]        # 0x1400253a0
   140015ead:	mov    rdi,rbx
   140015eb0:	and    ebx,0x1f
   140015eb3:	sar    rdi,0x5
   140015eb7:	imul   rbx,rbx,0x58
   140015ebb:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140015ec0:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140015ec5:	je     0x140015f0c
   140015ec7:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   140015ecc:	je     0x140015f0c
   140015ece:	cmp    DWORD PTR [rip+0xb38b],0x1        # 0x140021260
   140015ed5:	jne    0x140015efe
   140015ed7:	test   ecx,ecx
   140015ed9:	je     0x140015ef1
   140015edb:	dec    ecx
   140015edd:	je     0x140015eea
   140015edf:	dec    ecx
   140015ee1:	jne    0x140015efe
   140015ee3:	mov    ecx,0xfffffff4
   140015ee8:	jmp    0x140015ef6
   140015eea:	mov    ecx,0xfffffff5
   140015eef:	jmp    0x140015ef6
   140015ef1:	mov    ecx,0xfffffff6
   140015ef6:	xor    edx,edx
   140015ef8:	call   QWORD PTR [rip+0x214a]        # 0x140018048
   140015efe:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140015f03:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140015f08:	xor    eax,eax
   140015f0a:	jmp    0x140015f22
   140015f0c:	call   0x140008e40
   140015f11:	mov    DWORD PTR [rax],0x9
   140015f17:	call   0x140008e60
   140015f1c:	and    DWORD PTR [rax],0x0
   140015f1f:	or     eax,0xffffffff
   140015f22:	mov    rbx,QWORD PTR [rsp+0x30]
   140015f27:	mov    rbp,QWORD PTR [rsp+0x38]
   140015f2c:	add    rsp,0x20
   140015f30:	pop    rdi
   140015f31:	ret    
   140015f32:	int3   
   140015f33:	int3   
   140015f34:	sub    rsp,0x28
   140015f38:	cmp    ecx,0xfffffffe
   140015f3b:	jne    0x140015f52
   140015f3d:	call   0x140008e60
   140015f42:	and    DWORD PTR [rax],0x0
   140015f45:	call   0x140008e40
   140015f4a:	mov    DWORD PTR [rax],0x9
   140015f50:	jmp    0x140015f9f
   140015f52:	test   ecx,ecx
   140015f54:	js     0x140015f87
   140015f56:	cmp    ecx,DWORD PTR [rip+0xf42c]        # 0x140025388
   140015f5c:	jae    0x140015f87
   140015f5e:	movsxd rdx,ecx
   140015f61:	lea    rcx,[rip+0xf438]        # 0x1400253a0
   140015f68:	mov    rax,rdx
   140015f6b:	and    edx,0x1f
   140015f6e:	sar    rax,0x5
   140015f72:	imul   rdx,rdx,0x58
   140015f76:	mov    rax,QWORD PTR [rcx+rax*8]
   140015f7a:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140015f7f:	je     0x140015f87
   140015f81:	mov    rax,QWORD PTR [rax+rdx*1]
   140015f85:	jmp    0x140015fa3
   140015f87:	call   0x140008e60
   140015f8c:	and    DWORD PTR [rax],0x0
   140015f8f:	call   0x140008e40
   140015f94:	mov    DWORD PTR [rax],0x9
   140015f9a:	call   0x14000dafc
   140015f9f:	or     rax,0xffffffffffffffff
   140015fa3:	add    rsp,0x28
   140015fa7:	ret    
   140015fa8:	mov    rax,rsp
   140015fab:	mov    QWORD PTR [rax+0x8],rbx
   140015faf:	mov    QWORD PTR [rax+0x10],rsi
   140015fb3:	mov    QWORD PTR [rax+0x18],rdi
   140015fb7:	mov    QWORD PTR [rax+0x20],r12
   140015fbb:	push   r14
   140015fbd:	sub    rsp,0x20
   140015fc1:	movsxd rbx,ecx
   140015fc4:	mov    r12,rbx
   140015fc7:	sar    r12,0x5
   140015fcb:	lea    r14,[rip+0xf3ce]        # 0x1400253a0
   140015fd2:	and    ebx,0x1f
   140015fd5:	imul   rbx,rbx,0x58
   140015fd9:	mov    rsi,QWORD PTR [r14+r12*8]
   140015fdd:	mov    edi,0x1
   140015fe2:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140015fe7:	jne    0x14001601d
   140015fe9:	lea    ecx,[rdi+0x9]
   140015fec:	call   0x140012e0c
   140015ff1:	nop
   140015ff2:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140015ff7:	jne    0x140016013
   140015ff9:	lea    rcx,[rbx+rsi*1+0x10]
   140015ffe:	mov    edx,0xfa0
   140016003:	call   QWORD PTR [rip+0x221f]        # 0x140018228
   140016009:	neg    eax
   14001600b:	sbb    edx,edx
   14001600d:	and    edi,edx
   14001600f:	inc    DWORD PTR [rbx+rsi*1+0xc]
   140016013:	mov    ecx,0xa
   140016018:	call   0x140012d0c
   14001601d:	test   edi,edi
   14001601f:	je     0x140016030
   140016021:	mov    rcx,QWORD PTR [r14+r12*8]
   140016025:	lea    rcx,[rcx+rbx*1+0x10]
   14001602a:	call   QWORD PTR [rip+0x20b0]        # 0x1400180e0
   140016030:	mov    eax,edi
   140016032:	mov    rbx,QWORD PTR [rsp+0x30]
   140016037:	mov    rsi,QWORD PTR [rsp+0x38]
   14001603c:	mov    rdi,QWORD PTR [rsp+0x40]
   140016041:	mov    r12,QWORD PTR [rsp+0x48]
   140016046:	add    rsp,0x20
   14001604a:	pop    r14
   14001604c:	ret    
   14001604d:	int3   
   14001604e:	int3   
   14001604f:	int3   
   140016050:	movsxd rdx,ecx
   140016053:	lea    rcx,[rip+0xf346]        # 0x1400253a0
   14001605a:	mov    rax,rdx
   14001605d:	and    edx,0x1f
   140016060:	sar    rax,0x5
   140016064:	imul   rdx,rdx,0x58
   140016068:	mov    rax,QWORD PTR [rcx+rax*8]
   14001606c:	lea    rcx,[rax+rdx*1+0x10]
   140016071:	rex.W jmp QWORD PTR [rip+0x2070]        # 0x1400180e8
   140016078:	mov    WORD PTR [rsp+0x8],cx
   14001607d:	sub    rsp,0x38
   140016081:	mov    rcx,QWORD PTR [rip+0xc628]        # 0x1400226b0
   140016088:	cmp    rcx,0xfffffffffffffffe
   14001608c:	jne    0x14001609a
   14001608e:	call   0x140016a94
   140016093:	mov    rcx,QWORD PTR [rip+0xc616]        # 0x1400226b0
   14001609a:	cmp    rcx,0xffffffffffffffff
   14001609e:	jne    0x1400160a7
   1400160a0:	mov    eax,0xffff
   1400160a5:	jmp    0x1400160cc
   1400160a7:	and    QWORD PTR [rsp+0x20],0x0
   1400160ad:	lea    r9,[rsp+0x48]
   1400160b2:	lea    rdx,[rsp+0x40]
   1400160b7:	mov    r8d,0x1
   1400160bd:	call   QWORD PTR [rip+0x1fad]        # 0x140018070
   1400160c3:	test   eax,eax
   1400160c5:	je     0x1400160a0
   1400160c7:	movzx  eax,WORD PTR [rsp+0x40]
   1400160cc:	add    rsp,0x38
   1400160d0:	ret    
   1400160d1:	int3   
   1400160d2:	int3   
   1400160d3:	int3   
   1400160d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400160d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400160de:	push   rdi
   1400160df:	sub    rsp,0x30
   1400160e3:	xor    edi,edi
   1400160e5:	lea    ecx,[rdi+0x1]
   1400160e8:	call   0x140012e0c
   1400160ed:	nop
   1400160ee:	lea    ebx,[rdi+0x3]
   1400160f1:	mov    DWORD PTR [rsp+0x20],ebx
   1400160f5:	cmp    ebx,DWORD PTR [rip+0xf285]        # 0x140025380
   1400160fb:	jge    0x140016162
   1400160fd:	movsxd rsi,ebx
   140016100:	mov    rax,QWORD PTR [rip+0xe269]        # 0x140024370
   140016107:	cmp    QWORD PTR [rax+rsi*8],0x0
   14001610c:	je     0x14001615e
   14001610e:	mov    rcx,QWORD PTR [rax+rsi*8]
   140016112:	test   BYTE PTR [rcx+0x18],0x83
   140016116:	je     0x140016128
   140016118:	call   0x140016b70
   14001611d:	cmp    eax,0xffffffff
   140016120:	je     0x140016128
   140016122:	inc    edi
   140016124:	mov    DWORD PTR [rsp+0x24],edi
   140016128:	cmp    ebx,0x14
   14001612b:	jl     0x14001615e
   14001612d:	mov    rax,QWORD PTR [rip+0xe23c]        # 0x140024370
   140016134:	mov    rcx,QWORD PTR [rax+rsi*8]
   140016138:	add    rcx,0x30
   14001613c:	call   QWORD PTR [rip+0x1f96]        # 0x1400180d8
   140016142:	mov    rcx,QWORD PTR [rip+0xe227]        # 0x140024370
   140016149:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001614d:	call   0x140008584
   140016152:	mov    r11,QWORD PTR [rip+0xe217]        # 0x140024370
   140016159:	and    QWORD PTR [r11+rsi*8],0x0
   14001615e:	inc    ebx
   140016160:	jmp    0x1400160f1
   140016162:	mov    ecx,0x1
   140016167:	call   0x140012d0c
   14001616c:	mov    eax,edi
   14001616e:	mov    rbx,QWORD PTR [rsp+0x40]
   140016173:	mov    rsi,QWORD PTR [rsp+0x48]
   140016178:	add    rsp,0x30
   14001617c:	pop    rdi
   14001617d:	ret    
   14001617e:	int3   
   14001617f:	int3   
   140016180:	mov    QWORD PTR [rsp+0x8],rbx
   140016185:	mov    QWORD PTR [rsp+0x10],rsi
   14001618a:	push   rdi
   14001618b:	sub    rsp,0x20
   14001618f:	mov    eax,DWORD PTR [rcx+0x18]
   140016192:	xor    esi,esi
   140016194:	mov    rbx,rcx
   140016197:	and    al,0x3
   140016199:	cmp    al,0x2
   14001619b:	jne    0x1400161dc
   14001619d:	test   DWORD PTR [rcx+0x18],0x108
   1400161a4:	je     0x1400161dc
   1400161a6:	mov    edi,DWORD PTR [rcx]
   1400161a8:	sub    edi,DWORD PTR [rcx+0x10]
   1400161ab:	test   edi,edi
   1400161ad:	jle    0x1400161dc
   1400161af:	call   0x140014fa8
   1400161b4:	mov    rdx,QWORD PTR [rbx+0x10]
   1400161b8:	mov    r8d,edi
   1400161bb:	mov    ecx,eax
   1400161bd:	call   0x140014c00
   1400161c2:	cmp    eax,edi
   1400161c4:	jne    0x1400161d5
   1400161c6:	mov    eax,DWORD PTR [rbx+0x18]
   1400161c9:	test   al,al
   1400161cb:	jns    0x1400161dc
   1400161cd:	and    eax,0xfffffffd
   1400161d0:	mov    DWORD PTR [rbx+0x18],eax
   1400161d3:	jmp    0x1400161dc
   1400161d5:	or     DWORD PTR [rbx+0x18],0x20
   1400161d9:	or     esi,0xffffffff
   1400161dc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400161e0:	and    DWORD PTR [rbx+0x8],0x0
   1400161e4:	mov    eax,esi
   1400161e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400161eb:	mov    QWORD PTR [rbx],rcx
   1400161ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400161f3:	add    rsp,0x20
   1400161f7:	pop    rdi
   1400161f8:	ret    
   1400161f9:	int3   
   1400161fa:	int3   
   1400161fb:	int3   
   1400161fc:	rex push rbx
   1400161fe:	sub    rsp,0x20
   140016202:	mov    rbx,rcx
   140016205:	test   rcx,rcx
   140016208:	jne    0x140016214
   14001620a:	add    rsp,0x20
   14001620e:	pop    rbx
   14001620f:	jmp    0x140016248
   140016214:	call   0x140016180
   140016219:	test   eax,eax
   14001621b:	je     0x140016222
   14001621d:	or     eax,0xffffffff
   140016220:	jmp    0x140016242
   140016222:	test   DWORD PTR [rbx+0x18],0x4000
   140016229:	je     0x140016240
   14001622b:	mov    rcx,rbx
   14001622e:	call   0x140014fa8
   140016233:	mov    ecx,eax
   140016235:	call   0x140016bd8
   14001623a:	neg    eax
   14001623c:	sbb    eax,eax
   14001623e:	jmp    0x140016242
   140016240:	xor    eax,eax
   140016242:	add    rsp,0x20
   140016246:	pop    rbx
   140016247:	ret    
   140016248:	mov    QWORD PTR [rsp+0x8],rbx
   14001624d:	mov    QWORD PTR [rsp+0x10],rsi
   140016252:	mov    QWORD PTR [rsp+0x18],rdi
   140016257:	push   r12
   140016259:	push   r13
   14001625b:	push   r15
   14001625d:	sub    rsp,0x30
   140016261:	mov    r13d,ecx
   140016264:	xor    esi,esi
   140016266:	xor    edi,edi
   140016268:	lea    ecx,[rsi+0x1]
   14001626b:	call   0x140012e0c
   140016270:	nop
   140016271:	xor    ebx,ebx
   140016273:	or     r15d,0xffffffff
   140016277:	mov    DWORD PTR [rsp+0x20],ebx
   14001627b:	cmp    ebx,DWORD PTR [rip+0xf0ff]        # 0x140025380
   140016281:	jge    0x140016307
   140016287:	movsxd r12,ebx
   14001628a:	mov    rax,QWORD PTR [rip+0xe0df]        # 0x140024370
   140016291:	cmp    QWORD PTR [rax+r12*8],0x0
   140016296:	je     0x140016300
   140016298:	mov    rdx,QWORD PTR [rax+r12*8]
   14001629c:	test   BYTE PTR [rdx+0x18],0x83
   1400162a0:	je     0x140016300
   1400162a2:	mov    ecx,ebx
   1400162a4:	call   0x140014f08
   1400162a9:	nop
   1400162aa:	mov    rax,QWORD PTR [rip+0xe0bf]        # 0x140024370
   1400162b1:	mov    rcx,QWORD PTR [rax+r12*8]
   1400162b5:	test   BYTE PTR [rcx+0x18],0x83
   1400162b9:	je     0x1400162ee
   1400162bb:	cmp    r13d,0x1
   1400162bf:	jne    0x1400162d3
   1400162c1:	call   0x1400161fc
   1400162c6:	cmp    eax,r15d
   1400162c9:	je     0x1400162ee
   1400162cb:	inc    esi
   1400162cd:	mov    DWORD PTR [rsp+0x24],esi
   1400162d1:	jmp    0x1400162ee
   1400162d3:	test   r13d,r13d
   1400162d6:	jne    0x1400162ee
   1400162d8:	test   BYTE PTR [rcx+0x18],0x2
   1400162dc:	je     0x1400162ee
   1400162de:	call   0x1400161fc
   1400162e3:	cmp    eax,r15d
   1400162e6:	cmove  edi,r15d
   1400162ea:	mov    DWORD PTR [rsp+0x28],edi
   1400162ee:	mov    rdx,QWORD PTR [rip+0xe07b]        # 0x140024370
   1400162f5:	mov    rdx,QWORD PTR [rdx+r12*8]
   1400162f9:	mov    ecx,ebx
   1400162fb:	call   0x140014f88
   140016300:	inc    ebx
   140016302:	jmp    0x140016277
   140016307:	mov    ecx,0x1
   14001630c:	call   0x140012d0c
   140016311:	cmp    r13d,0x1
   140016315:	cmove  edi,esi
   140016318:	mov    eax,edi
   14001631a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001631f:	mov    rsi,QWORD PTR [rsp+0x58]
   140016324:	mov    rdi,QWORD PTR [rsp+0x60]
   140016329:	add    rsp,0x30
   14001632d:	pop    r15
   14001632f:	pop    r13
   140016331:	pop    r12
   140016333:	ret    
   140016334:	mov    ecx,0x1
   140016339:	jmp    0x140016248
   14001633e:	int3   
   14001633f:	int3   
   140016340:	mov    QWORD PTR [rsp+0x8],rbx
   140016345:	mov    QWORD PTR [rsp+0x18],rbp
   14001634a:	push   rsi
   14001634b:	push   rdi
   14001634c:	push   r12
   14001634e:	sub    rsp,0x20
   140016352:	mov    r12d,ecx
   140016355:	mov    rcx,rdx
   140016358:	mov    rbx,rdx
   14001635b:	call   0x140014fa8
   140016360:	mov    edx,DWORD PTR [rbx+0x18]
   140016363:	movsxd rsi,eax
   140016366:	test   dl,0x82
   140016369:	jne    0x140016384
   14001636b:	call   0x140008e40
   140016370:	mov    DWORD PTR [rax],0x9
   140016376:	or     DWORD PTR [rbx+0x18],0x20
   14001637a:	mov    eax,0xffff
   14001637f:	jmp    0x1400164bc
   140016384:	test   dl,0x40
   140016387:	je     0x140016396
   140016389:	call   0x140008e40
   14001638e:	mov    DWORD PTR [rax],0x22
   140016394:	jmp    0x140016376
   140016396:	xor    edi,edi
   140016398:	test   dl,0x1
   14001639b:	je     0x1400163b6
   14001639d:	mov    DWORD PTR [rbx+0x8],edi
   1400163a0:	test   dl,0x10
   1400163a3:	je     0x140016433
   1400163a9:	mov    rax,QWORD PTR [rbx+0x10]
   1400163ad:	and    edx,0xfffffffe
   1400163b0:	mov    QWORD PTR [rbx],rax
   1400163b3:	mov    DWORD PTR [rbx+0x18],edx
   1400163b6:	mov    eax,DWORD PTR [rbx+0x18]
   1400163b9:	mov    DWORD PTR [rbx+0x8],edi
   1400163bc:	and    eax,0xffffffef
   1400163bf:	or     eax,0x2
   1400163c2:	mov    DWORD PTR [rbx+0x18],eax
   1400163c5:	test   eax,0x10c
   1400163ca:	jne    0x1400163fb
   1400163cc:	call   0x140014d94
   1400163d1:	add    rax,0x30
   1400163d5:	cmp    rbx,rax
   1400163d8:	je     0x1400163e8
   1400163da:	call   0x140014d94
   1400163df:	add    rax,0x60
   1400163e3:	cmp    rbx,rax
   1400163e6:	jne    0x1400163f3
   1400163e8:	mov    ecx,esi
   1400163ea:	call   0x140014d34
   1400163ef:	test   eax,eax
   1400163f1:	jne    0x1400163fb
   1400163f3:	mov    rcx,rbx
   1400163f6:	call   0x140014ce0
   1400163fb:	test   DWORD PTR [rbx+0x18],0x108
   140016402:	je     0x140016494
   140016408:	mov    ebp,DWORD PTR [rbx]
   14001640a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001640e:	sub    ebp,DWORD PTR [rbx+0x10]
   140016411:	lea    rax,[rdx+0x2]
   140016415:	mov    QWORD PTR [rbx],rax
   140016418:	mov    eax,DWORD PTR [rbx+0x24]
   14001641b:	sub    eax,0x2
   14001641e:	mov    DWORD PTR [rbx+0x8],eax
   140016421:	test   ebp,ebp
   140016423:	jle    0x14001643e
   140016425:	mov    r8d,ebp
   140016428:	mov    ecx,esi
   14001642a:	call   0x140014c00
   14001642f:	mov    edi,eax
   140016431:	jmp    0x14001648a
   140016433:	or     edx,0x20
   140016436:	mov    DWORD PTR [rbx+0x18],edx
   140016439:	jmp    0x14001637a
   14001643e:	cmp    esi,0xffffffff
   140016441:	je     0x140016466
   140016443:	cmp    esi,0xfffffffe
   140016446:	je     0x140016466
   140016448:	mov    rcx,rsi
   14001644b:	mov    rax,rsi
   14001644e:	lea    rdx,[rip+0xef4b]        # 0x1400253a0
   140016455:	and    ecx,0x1f
   140016458:	sar    rax,0x5
   14001645c:	imul   rcx,rcx,0x58
   140016460:	add    rcx,QWORD PTR [rdx+rax*8]
   140016464:	jmp    0x14001646d
   140016466:	lea    rcx,[rip+0xb953]        # 0x140021dc0
   14001646d:	test   BYTE PTR [rcx+0x8],0x20
   140016471:	je     0x14001648a
   140016473:	xor    edx,edx
   140016475:	mov    ecx,esi
   140016477:	lea    r8d,[rdx+0x2]
   14001647b:	call   0x1400143bc
   140016480:	cmp    rax,0xffffffffffffffff
   140016484:	je     0x140016376
   14001648a:	mov    rax,QWORD PTR [rbx+0x10]
   14001648e:	mov    WORD PTR [rax],r12w
   140016492:	jmp    0x1400164b0
   140016494:	mov    ebp,0x2
   140016499:	lea    rdx,[rsp+0x48]
   14001649e:	mov    ecx,esi
   1400164a0:	mov    r8d,ebp
   1400164a3:	mov    WORD PTR [rsp+0x48],r12w
   1400164a9:	call   0x140014c00
   1400164ae:	mov    edi,eax
   1400164b0:	cmp    edi,ebp
   1400164b2:	jne    0x140016376
   1400164b8:	movzx  eax,r12w
   1400164bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400164c1:	mov    rbp,QWORD PTR [rsp+0x50]
   1400164c6:	add    rsp,0x20
   1400164ca:	pop    r12
   1400164cc:	pop    rdi
   1400164cd:	pop    rsi
   1400164ce:	ret    
   1400164cf:	int3   
   1400164d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400164d5:	mov    WORD PTR [rsp+0x20],r9w
   1400164db:	push   rbp
   1400164dc:	push   rsi
   1400164dd:	push   rdi
   1400164de:	mov    rbp,rsp
   1400164e1:	sub    rsp,0x60
   1400164e5:	mov    rdi,r8
   1400164e8:	mov    rsi,rdx
   1400164eb:	mov    rbx,rcx
   1400164ee:	test   rdx,rdx
   1400164f1:	jne    0x140016506
   1400164f3:	test   r8,r8
   1400164f6:	je     0x140016506
   1400164f8:	test   rcx,rcx
   1400164fb:	je     0x1400164ff
   1400164fd:	and    DWORD PTR [rcx],edx
   1400164ff:	xor    eax,eax
   140016501:	jmp    0x140016590
   140016506:	test   rcx,rcx
   140016509:	je     0x14001650e
   14001650b:	or     DWORD PTR [rcx],0xffffffff
   14001650e:	cmp    r8,0x7fffffff
   140016515:	jbe    0x14001652c
   140016517:	call   0x140008e40
   14001651c:	mov    ebx,0x16
   140016521:	mov    DWORD PTR [rax],ebx
   140016523:	call   0x14000dafc
   140016528:	mov    eax,ebx
   14001652a:	jmp    0x140016590
   14001652c:	mov    rdx,QWORD PTR [rbp+0x40]
   140016530:	lea    rcx,[rbp-0x20]
   140016534:	call   0x140007d40
   140016539:	mov    r11,QWORD PTR [rbp-0x20]
   14001653d:	cmp    DWORD PTR [r11+0x14],0x0
   140016542:	jne    0x1400165fa
   140016548:	movzx  eax,WORD PTR [rbp+0x38]
   14001654c:	mov    ecx,0xff
   140016551:	cmp    ax,cx
   140016554:	jbe    0x1400165a0
   140016556:	test   rsi,rsi
   140016559:	je     0x14001656d
   14001655b:	test   rdi,rdi
   14001655e:	je     0x14001656d
   140016560:	mov    r8,rdi
   140016563:	xor    edx,edx
   140016565:	mov    rcx,rsi
   140016568:	call   0x14000f080
   14001656d:	call   0x140008e40
   140016572:	mov    DWORD PTR [rax],0x2a
   140016578:	call   0x140008e40
   14001657d:	cmp    BYTE PTR [rbp-0x8],0x0
   140016581:	mov    eax,DWORD PTR [rax]
   140016583:	je     0x140016590
   140016585:	mov    rcx,QWORD PTR [rbp-0x10]
   140016589:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016590:	mov    rbx,QWORD PTR [rsp+0x80]
   140016598:	add    rsp,0x60
   14001659c:	pop    rdi
   14001659d:	pop    rsi
   14001659e:	pop    rbp
   14001659f:	ret    
   1400165a0:	test   rsi,rsi
   1400165a3:	je     0x1400165d5
   1400165a5:	test   rdi,rdi
   1400165a8:	jne    0x1400165d3
   1400165aa:	call   0x140008e40
   1400165af:	lea    ebx,[rdi+0x22]
   1400165b2:	mov    DWORD PTR [rax],ebx
   1400165b4:	call   0x14000dafc
   1400165b9:	cmp    BYTE PTR [rbp-0x8],dil
   1400165bd:	je     0x140016528
   1400165c3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400165c7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400165ce:	jmp    0x140016528
   1400165d3:	mov    BYTE PTR [rsi],al
   1400165d5:	test   rbx,rbx
   1400165d8:	je     0x1400165e0
   1400165da:	mov    DWORD PTR [rbx],0x1
   1400165e0:	cmp    BYTE PTR [rbp-0x8],0x0
   1400165e4:	je     0x1400164ff
   1400165ea:	mov    rax,QWORD PTR [rbp-0x10]
   1400165ee:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400165f5:	jmp    0x1400164ff
   1400165fa:	and    DWORD PTR [rbp+0x28],0x0
   1400165fe:	mov    ecx,DWORD PTR [r11+0x4]
   140016602:	lea    rax,[rbp+0x28]
   140016606:	mov    QWORD PTR [rsp+0x38],rax
   14001660b:	and    QWORD PTR [rsp+0x30],0x0
   140016611:	lea    r8,[rbp+0x38]
   140016615:	mov    r9d,0x1
   14001661b:	xor    edx,edx
   14001661d:	mov    DWORD PTR [rsp+0x28],edi
   140016621:	mov    QWORD PTR [rsp+0x20],rsi
   140016626:	call   QWORD PTR [rip+0x1a74]        # 0x1400180a0
   14001662c:	test   eax,eax
   14001662e:	je     0x140016643
   140016630:	cmp    DWORD PTR [rbp+0x28],0x0
   140016634:	jne    0x14001656d
   14001663a:	test   rbx,rbx
   14001663d:	je     0x1400165e0
   14001663f:	mov    DWORD PTR [rbx],eax
   140016641:	jmp    0x1400165e0
   140016643:	call   QWORD PTR [rip+0x1a17]        # 0x140018060
   140016649:	cmp    eax,0x7a
   14001664c:	jne    0x14001656d
   140016652:	test   rsi,rsi
   140016655:	je     0x140016669
   140016657:	test   rdi,rdi
   14001665a:	je     0x140016669
   14001665c:	mov    r8,rdi
   14001665f:	xor    edx,edx
   140016661:	mov    rcx,rsi
   140016664:	call   0x14000f080
   140016669:	call   0x140008e40
   14001666e:	mov    ebx,0x22
   140016673:	mov    DWORD PTR [rax],ebx
   140016675:	call   0x14000dafc
   14001667a:	cmp    BYTE PTR [rbp-0x8],0x0
   14001667e:	je     0x140016528
   140016684:	mov    rax,QWORD PTR [rbp-0x10]
   140016688:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001668f:	jmp    0x140016528
   140016694:	sub    rsp,0x38
   140016698:	and    QWORD PTR [rsp+0x20],0x0
   14001669e:	call   0x1400164d0
   1400166a3:	add    rsp,0x38
   1400166a7:	ret    
   1400166a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400166ad:	mov    QWORD PTR [rsp+0x18],rsi
   1400166b2:	mov    QWORD PTR [rsp+0x20],rdi
   1400166b7:	push   rbp
   1400166b8:	push   r12
   1400166ba:	push   r13
   1400166bc:	push   r14
   1400166be:	push   r15
   1400166c0:	mov    rbp,rsp
   1400166c3:	sub    rsp,0x40
   1400166c7:	mov    r15,rdx
   1400166ca:	mov    rdx,rcx
   1400166cd:	lea    rcx,[rbp-0x20]
   1400166d1:	mov    r13d,r9d
   1400166d4:	mov    r14,r8
   1400166d7:	call   0x140007d40
   1400166dc:	test   r14,r14
   1400166df:	je     0x1400166e4
   1400166e1:	mov    QWORD PTR [r14],r15
   1400166e4:	test   r15,r15
   1400166e7:	jne    0x140016702
   1400166e9:	call   0x140008e40
   1400166ee:	mov    DWORD PTR [rax],0x16
   1400166f4:	call   0x14000dafc
   1400166f9:	cmp    BYTE PTR [rbp-0x8],0x0
   1400166fd:	jmp    0x1400168e6
   140016702:	test   r13d,r13d
   140016705:	je     0x140016713
   140016707:	cmp    r13d,0x2
   14001670b:	jl     0x1400166e9
   14001670d:	cmp    r13d,0x24
   140016711:	jg     0x1400166e9
   140016713:	mov    r12b,BYTE PTR [r15]
   140016716:	mov    r8,QWORD PTR [rbp-0x20]
   14001671a:	xor    edi,edi
   14001671c:	lea    rbx,[r15+0x1]
   140016720:	cmp    DWORD PTR [r8+0x10c],0x1
   140016728:	jle    0x140016742
   14001672a:	lea    r8,[rbp-0x20]
   14001672e:	movzx  ecx,r12b
   140016732:	mov    edx,0x8
   140016737:	call   0x140013ec0
   14001673c:	mov    r8,QWORD PTR [rbp-0x20]
   140016740:	jmp    0x140016754
   140016742:	mov    rax,QWORD PTR [r8+0x140]
   140016749:	movzx  ecx,r12b
   14001674d:	movzx  eax,WORD PTR [rax+rcx*2]
   140016751:	and    eax,0x8
   140016754:	test   eax,eax
   140016756:	je     0x140016760
   140016758:	mov    r12b,BYTE PTR [rbx]
   14001675b:	inc    rbx
   14001675e:	jmp    0x140016720
   140016760:	mov    esi,DWORD PTR [rbp+0x50]
   140016763:	cmp    r12b,0x2d
   140016767:	jne    0x14001676e
   140016769:	or     esi,0x2
   14001676c:	jmp    0x140016774
   14001676e:	cmp    r12b,0x2b
   140016772:	jne    0x14001677a
   140016774:	mov    r12b,BYTE PTR [rbx]
   140016777:	inc    rbx
   14001677a:	test   r13d,r13d
   14001677d:	js     0x1400168da
   140016783:	cmp    r13d,0x1
   140016787:	je     0x1400168da
   14001678d:	cmp    r13d,0x24
   140016791:	jg     0x1400168da
   140016797:	test   r13d,r13d
   14001679a:	jne    0x1400167c4
   14001679c:	cmp    r12b,0x30
   1400167a0:	je     0x1400167aa
   1400167a2:	mov    r13d,0xa
   1400167a8:	jmp    0x1400167e2
   1400167aa:	cmp    BYTE PTR [rbx],0x78
   1400167ad:	je     0x1400167bc
   1400167af:	cmp    BYTE PTR [rbx],0x58
   1400167b2:	je     0x1400167bc
   1400167b4:	mov    r13d,0x8
   1400167ba:	jmp    0x1400167e2
   1400167bc:	mov    r13d,0x10
   1400167c2:	jmp    0x1400167d0
   1400167c4:	cmp    r13d,0x10
   1400167c8:	jne    0x1400167e2
   1400167ca:	cmp    r12b,0x30
   1400167ce:	jne    0x1400167e2
   1400167d0:	cmp    BYTE PTR [rbx],0x78
   1400167d3:	je     0x1400167da
   1400167d5:	cmp    BYTE PTR [rbx],0x58
   1400167d8:	jne    0x1400167e2
   1400167da:	mov    r12b,BYTE PTR [rbx+0x1]
   1400167de:	add    rbx,0x2
   1400167e2:	mov    r10,QWORD PTR [r8+0x140]
   1400167e9:	xor    edx,edx
   1400167eb:	or     eax,0xffffffff
   1400167ee:	div    r13d
   1400167f1:	mov    r9d,eax
   1400167f4:	movzx  ecx,r12b
   1400167f8:	movzx  r8d,WORD PTR [r10+rcx*2]
   1400167fd:	mov    ecx,r8d
   140016800:	and    ecx,0x4
   140016803:	je     0x14001680e
   140016805:	movsx  ecx,r12b
   140016809:	sub    ecx,0x30
   14001680c:	jmp    0x14001682a
   14001680e:	and    r8d,0x103
   140016815:	je     0x140016845
   140016817:	lea    eax,[r12-0x61]
   14001681c:	movsx  ecx,r12b
   140016820:	cmp    al,0x19
   140016822:	ja     0x140016827
   140016824:	sub    ecx,0x20
   140016827:	add    ecx,0xffffffc9
   14001682a:	cmp    ecx,r13d
   14001682d:	jae    0x140016845
   14001682f:	or     esi,0x8
   140016832:	cmp    edi,r9d
   140016835:	jb     0x140016859
   140016837:	jne    0x14001683d
   140016839:	cmp    ecx,edx
   14001683b:	jbe    0x140016859
   14001683d:	or     esi,0x4
   140016840:	test   r14,r14
   140016843:	jne    0x14001685f
   140016845:	dec    rbx
   140016848:	test   sil,0x8
   14001684c:	jne    0x140016867
   14001684e:	test   r14,r14
   140016851:	cmovne rbx,r15
   140016855:	xor    edi,edi
   140016857:	jmp    0x1400168b5
   140016859:	imul   edi,r13d
   14001685d:	add    edi,ecx
   14001685f:	mov    r12b,BYTE PTR [rbx]
   140016862:	inc    rbx
   140016865:	jmp    0x1400167f4
   140016867:	mov    r12d,0x7fffffff
   14001686d:	test   sil,0x4
   140016871:	jne    0x140016891
   140016873:	test   sil,0x1
   140016877:	jne    0x1400168b5
   140016879:	mov    eax,esi
   14001687b:	and    eax,0x2
   14001687e:	je     0x140016888
   140016880:	cmp    edi,0x80000000
   140016886:	ja     0x140016891
   140016888:	test   eax,eax
   14001688a:	jne    0x1400168b5
   14001688c:	cmp    edi,r12d
   14001688f:	jbe    0x1400168b5
   140016891:	call   0x140008e40
   140016896:	mov    DWORD PTR [rax],0x22
   14001689c:	test   sil,0x1
   1400168a0:	je     0x1400168a7
   1400168a2:	or     edi,0xffffffff
   1400168a5:	jmp    0x1400168b5
   1400168a7:	mov    al,sil
   1400168aa:	and    al,0x2
   1400168ac:	neg    al
   1400168ae:	sbb    edi,edi
   1400168b0:	neg    edi
   1400168b2:	add    edi,r12d
   1400168b5:	test   r14,r14
   1400168b8:	je     0x1400168bd
   1400168ba:	mov    QWORD PTR [r14],rbx
   1400168bd:	test   sil,0x2
   1400168c1:	je     0x1400168c5
   1400168c3:	neg    edi
   1400168c5:	cmp    BYTE PTR [rbp-0x8],0x0
   1400168c9:	je     0x1400168d6
   1400168cb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400168cf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400168d6:	mov    eax,edi
   1400168d8:	jmp    0x1400168f5
   1400168da:	test   r14,r14
   1400168dd:	je     0x1400168e2
   1400168df:	mov    QWORD PTR [r14],r15
   1400168e2:	cmp    BYTE PTR [rbp-0x8],dil
   1400168e6:	je     0x1400168f3
   1400168e8:	mov    rax,QWORD PTR [rbp-0x10]
   1400168ec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400168f3:	xor    eax,eax
   1400168f5:	lea    r11,[rsp+0x40]
   1400168fa:	mov    rbx,QWORD PTR [r11+0x30]
   1400168fe:	mov    rsi,QWORD PTR [r11+0x40]
   140016902:	mov    rdi,QWORD PTR [r11+0x48]
   140016906:	mov    rsp,r11
   140016909:	pop    r15
   14001690b:	pop    r14
   14001690d:	pop    r13
   14001690f:	pop    r12
   140016911:	pop    rbp
   140016912:	ret    
   140016913:	int3   
   140016914:	sub    rsp,0x38
   140016918:	xor    eax,eax
   14001691a:	mov    r9d,r8d
   14001691d:	mov    r8,rdx
   140016920:	cmp    DWORD PTR [rip+0xc736],eax        # 0x14002305c
   140016926:	mov    DWORD PTR [rsp+0x20],eax
   14001692a:	mov    rdx,rcx
   14001692d:	jne    0x140016938
   14001692f:	lea    rcx,[rip+0xb472]        # 0x140021da8
   140016936:	jmp    0x14001693a
   140016938:	xor    ecx,ecx
   14001693a:	call   0x1400166a8
   14001693f:	add    rsp,0x38
   140016943:	ret    
   140016944:	mov    QWORD PTR [rsp+0x10],rdi
   140016949:	mov    QWORD PTR [rsp+0x20],r12
   14001694e:	push   rbp
   14001694f:	mov    rbp,rsp
   140016952:	sub    rsp,0x70
   140016956:	movsxd rdi,ecx
   140016959:	lea    rcx,[rbp-0x20]
   14001695d:	call   0x140007d40
   140016962:	cmp    edi,0x100
   140016968:	jae    0x1400169c7
   14001696a:	mov    rdx,QWORD PTR [rbp-0x20]
   14001696e:	cmp    DWORD PTR [rdx+0x10c],0x1
   140016975:	jle    0x14001698d
   140016977:	lea    r8,[rbp-0x20]
   14001697b:	mov    edx,0x1
   140016980:	mov    ecx,edi
   140016982:	call   0x140013ec0
   140016987:	mov    rdx,QWORD PTR [rbp-0x20]
   14001698b:	jmp    0x14001699b
   14001698d:	mov    rax,QWORD PTR [rdx+0x140]
   140016994:	movzx  eax,WORD PTR [rax+rdi*2]
   140016998:	and    eax,0x1
   14001699b:	test   eax,eax
   14001699d:	je     0x1400169af
   14001699f:	mov    rax,QWORD PTR [rdx+0x148]
   1400169a6:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400169aa:	jmp    0x140016a6f
   1400169af:	cmp    BYTE PTR [rbp-0x8],0x0
   1400169b3:	je     0x1400169c0
   1400169b5:	mov    rax,QWORD PTR [rbp-0x10]
   1400169b9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400169c0:	mov    eax,edi
   1400169c2:	jmp    0x140016a80
   1400169c7:	mov    rax,QWORD PTR [rbp-0x20]
   1400169cb:	cmp    DWORD PTR [rax+0x10c],0x1
   1400169d2:	jle    0x1400169ff
   1400169d4:	mov    r12d,edi
   1400169d7:	lea    rdx,[rbp-0x20]
   1400169db:	sar    r12d,0x8
   1400169df:	movzx  ecx,r12b
   1400169e3:	call   0x140015368
   1400169e8:	test   eax,eax
   1400169ea:	je     0x1400169ff
   1400169ec:	mov    BYTE PTR [rbp+0x10],r12b
   1400169f0:	mov    BYTE PTR [rbp+0x11],dil
   1400169f4:	mov    BYTE PTR [rbp+0x12],0x0
   1400169f8:	mov    edx,0x2
   1400169fd:	jmp    0x140016a17
   1400169ff:	call   0x140008e40
   140016a04:	mov    edx,0x1
   140016a09:	mov    DWORD PTR [rax],0x2a
   140016a0f:	mov    BYTE PTR [rbp+0x10],dil
   140016a13:	mov    BYTE PTR [rbp+0x11],0x0
   140016a17:	mov    rcx,QWORD PTR [rbp-0x20]
   140016a1b:	mov    DWORD PTR [rsp+0x40],0x1
   140016a23:	lea    r9,[rbp+0x10]
   140016a27:	mov    eax,DWORD PTR [rcx+0x4]
   140016a2a:	mov    r8d,0x100
   140016a30:	mov    DWORD PTR [rsp+0x38],eax
   140016a34:	lea    rax,[rbp+0x20]
   140016a38:	mov    DWORD PTR [rsp+0x30],0x3
   140016a40:	mov    QWORD PTR [rsp+0x28],rax
   140016a45:	mov    DWORD PTR [rsp+0x20],edx
   140016a49:	mov    edx,DWORD PTR [rcx+0x14]
   140016a4c:	lea    rcx,[rbp-0x20]
   140016a50:	call   0x14000c7b4
   140016a55:	test   eax,eax
   140016a57:	je     0x1400169af
   140016a5d:	cmp    eax,0x1
   140016a60:	movzx  eax,BYTE PTR [rbp+0x20]
   140016a64:	je     0x140016a6f
   140016a66:	movzx  ecx,BYTE PTR [rbp+0x21]
   140016a6a:	shl    eax,0x8
   140016a6d:	or     eax,ecx
   140016a6f:	cmp    BYTE PTR [rbp-0x8],0x0
   140016a73:	je     0x140016a80
   140016a75:	mov    rcx,QWORD PTR [rbp-0x10]
   140016a79:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016a80:	lea    r11,[rsp+0x70]
   140016a85:	mov    rdi,QWORD PTR [r11+0x18]
   140016a89:	mov    r12,QWORD PTR [r11+0x28]
   140016a8d:	mov    rsp,r11
   140016a90:	pop    rbp
   140016a91:	ret    
   140016a92:	int3   
   140016a93:	int3   
   140016a94:	sub    rsp,0x48
   140016a98:	and    QWORD PTR [rsp+0x30],0x0
   140016a9e:	and    DWORD PTR [rsp+0x28],0x0
   140016aa3:	mov    r8d,0x3
   140016aa9:	lea    rcx,[rip+0x5048]        # 0x14001baf8
   140016ab0:	xor    r9d,r9d
   140016ab3:	mov    edx,0x40000000
   140016ab8:	mov    DWORD PTR [rsp+0x20],r8d
   140016abd:	call   QWORD PTR [rip+0x158d]        # 0x140018050
   140016ac3:	mov    QWORD PTR [rip+0xbbe6],rax        # 0x1400226b0
   140016aca:	add    rsp,0x48
   140016ace:	ret    
   140016acf:	int3   
   140016ad0:	sub    rsp,0x28
   140016ad4:	mov    rcx,QWORD PTR [rip+0xbbd5]        # 0x1400226b0
   140016adb:	cmp    rcx,0xffffffffffffffff
   140016adf:	je     0x140016aed
   140016ae1:	cmp    rcx,0xfffffffffffffffe
   140016ae5:	je     0x140016aed
   140016ae7:	call   QWORD PTR [rip+0x156b]        # 0x140018058
   140016aed:	add    rsp,0x28
   140016af1:	ret    
   140016af2:	int3   
   140016af3:	int3   
   140016af4:	mov    QWORD PTR [rsp+0x8],rbx
   140016af9:	push   rdi
   140016afa:	sub    rsp,0x20
   140016afe:	or     edi,0xffffffff
   140016b01:	mov    rbx,rcx
   140016b04:	test   rcx,rcx
   140016b07:	jne    0x140016b1d
   140016b09:	call   0x140008e40
   140016b0e:	mov    DWORD PTR [rax],0x16
   140016b14:	call   0x14000dafc
   140016b19:	or     eax,edi
   140016b1b:	jmp    0x140016b63
   140016b1d:	test   BYTE PTR [rcx+0x18],0x83
   140016b21:	je     0x140016b5d
   140016b23:	call   0x140016180
   140016b28:	mov    rcx,rbx
   140016b2b:	mov    edi,eax
   140016b2d:	call   0x140016e30
   140016b32:	mov    rcx,rbx
   140016b35:	call   0x140014fa8
   140016b3a:	mov    ecx,eax
   140016b3c:	call   0x140016d6c
   140016b41:	test   eax,eax
   140016b43:	jns    0x140016b4a
   140016b45:	or     edi,0xffffffff
   140016b48:	jmp    0x140016b5d
   140016b4a:	mov    rcx,QWORD PTR [rbx+0x28]
   140016b4e:	test   rcx,rcx
   140016b51:	je     0x140016b5d
   140016b53:	call   0x140008584
   140016b58:	and    QWORD PTR [rbx+0x28],0x0
   140016b5d:	and    DWORD PTR [rbx+0x18],0x0
   140016b61:	mov    eax,edi
   140016b63:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b68:	add    rsp,0x20
   140016b6c:	pop    rdi
   140016b6d:	ret    
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	mov    QWORD PTR [rsp+0x10],rbx
   140016b75:	mov    QWORD PTR [rsp+0x8],rcx
   140016b7a:	push   rdi
   140016b7b:	sub    rsp,0x20
   140016b7f:	mov    rbx,rcx
   140016b82:	or     edi,0xffffffff
   140016b85:	xor    eax,eax
   140016b87:	test   rcx,rcx
   140016b8a:	setne  al
   140016b8d:	test   eax,eax
   140016b8f:	jne    0x140016ba5
   140016b91:	call   0x140008e40
   140016b96:	mov    DWORD PTR [rax],0x16
   140016b9c:	call   0x14000dafc
   140016ba1:	mov    eax,edi
   140016ba3:	jmp    0x140016bcb
   140016ba5:	test   BYTE PTR [rcx+0x18],0x40
   140016ba9:	je     0x140016bb1
   140016bab:	and    DWORD PTR [rcx+0x18],0x0
   140016baf:	jmp    0x140016ba1
   140016bb1:	call   0x140014ea4
   140016bb6:	nop
   140016bb7:	mov    rcx,rbx
   140016bba:	call   0x140016af4
   140016bbf:	mov    edi,eax
   140016bc1:	mov    rcx,rbx
   140016bc4:	call   0x140014f3c
   140016bc9:	jmp    0x140016ba1
   140016bcb:	mov    rbx,QWORD PTR [rsp+0x38]
   140016bd0:	add    rsp,0x20
   140016bd4:	pop    rdi
   140016bd5:	ret    
   140016bd6:	int3   
   140016bd7:	int3   
   140016bd8:	mov    QWORD PTR [rsp+0x18],rbx
   140016bdd:	mov    DWORD PTR [rsp+0x8],ecx
   140016be1:	push   rsi
   140016be2:	push   rdi
   140016be3:	push   r12
   140016be5:	sub    rsp,0x20
   140016be9:	movsxd rdi,ecx
   140016bec:	cmp    edi,0xfffffffe
   140016bef:	jne    0x140016c01
   140016bf1:	call   0x140008e40
   140016bf6:	mov    DWORD PTR [rax],0x9
   140016bfc:	jmp    0x140016c9e
   140016c01:	test   ecx,ecx
   140016c03:	js     0x140016c8e
   140016c09:	cmp    edi,DWORD PTR [rip+0xe779]        # 0x140025388
   140016c0f:	jae    0x140016c8e
   140016c11:	mov    rbx,rdi
   140016c14:	mov    rsi,rdi
   140016c17:	sar    rsi,0x5
   140016c1b:	lea    r12,[rip+0xe77e]        # 0x1400253a0
   140016c22:	and    ebx,0x1f
   140016c25:	imul   rbx,rbx,0x58
   140016c29:	mov    rax,QWORD PTR [r12+rsi*8]
   140016c2d:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140016c32:	and    ecx,0x1
   140016c35:	je     0x140016c8e
   140016c37:	mov    ecx,edi
   140016c39:	call   0x140015fa8
   140016c3e:	nop
   140016c3f:	mov    rax,QWORD PTR [r12+rsi*8]
   140016c43:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140016c48:	je     0x140016c75
   140016c4a:	mov    ecx,edi
   140016c4c:	call   0x140015f34
   140016c51:	mov    rcx,rax
   140016c54:	call   QWORD PTR [rip+0x1626]        # 0x140018280
   140016c5a:	test   eax,eax
   140016c5c:	jne    0x140016c68
   140016c5e:	call   QWORD PTR [rip+0x13fc]        # 0x140018060
   140016c64:	mov    ebx,eax
   140016c66:	jmp    0x140016c6a
   140016c68:	xor    ebx,ebx
   140016c6a:	test   ebx,ebx
   140016c6c:	je     0x140016c83
   140016c6e:	call   0x140008e60
   140016c73:	mov    DWORD PTR [rax],ebx
   140016c75:	call   0x140008e40
   140016c7a:	mov    DWORD PTR [rax],0x9
   140016c80:	or     ebx,0xffffffff
   140016c83:	mov    ecx,edi
   140016c85:	call   0x140016050
   140016c8a:	mov    eax,ebx
   140016c8c:	jmp    0x140016ca1
   140016c8e:	call   0x140008e40
   140016c93:	mov    DWORD PTR [rax],0x9
   140016c99:	call   0x14000dafc
   140016c9e:	or     eax,0xffffffff
   140016ca1:	mov    rbx,QWORD PTR [rsp+0x50]
   140016ca6:	add    rsp,0x20
   140016caa:	pop    r12
   140016cac:	pop    rdi
   140016cad:	pop    rsi
   140016cae:	ret    
   140016caf:	int3   
   140016cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140016cb5:	push   rdi
   140016cb6:	sub    rsp,0x20
   140016cba:	movsxd rdi,ecx
   140016cbd:	mov    ecx,edi
   140016cbf:	call   0x140015f34
   140016cc4:	cmp    rax,0xffffffffffffffff
   140016cc8:	je     0x140016d23
   140016cca:	mov    rax,QWORD PTR [rip+0xe6cf]        # 0x1400253a0
   140016cd1:	mov    ecx,0x2
   140016cd6:	cmp    edi,0x1
   140016cd9:	jne    0x140016ce4
   140016cdb:	test   BYTE PTR [rax+0xb8],dil
   140016ce2:	jne    0x140016cee
   140016ce4:	cmp    edi,ecx
   140016ce6:	jne    0x140016d05
   140016ce8:	test   BYTE PTR [rax+0x60],0x1
   140016cec:	je     0x140016d05
   140016cee:	call   0x140015f34
   140016cf3:	mov    ecx,0x1
   140016cf8:	mov    rbx,rax
   140016cfb:	call   0x140015f34
   140016d00:	cmp    rax,rbx
   140016d03:	je     0x140016d23
   140016d05:	mov    ecx,edi
   140016d07:	call   0x140015f34
   140016d0c:	mov    rcx,rax
   140016d0f:	call   QWORD PTR [rip+0x1343]        # 0x140018058
   140016d15:	test   eax,eax
   140016d17:	jne    0x140016d23
   140016d19:	call   QWORD PTR [rip+0x1341]        # 0x140018060
   140016d1f:	mov    ebx,eax
   140016d21:	jmp    0x140016d25
   140016d23:	xor    ebx,ebx
   140016d25:	mov    ecx,edi
   140016d27:	call   0x140015e88
   140016d2c:	mov    r11,rdi
   140016d2f:	mov    rcx,rdi
   140016d32:	sar    rcx,0x5
   140016d36:	and    r11d,0x1f
   140016d3a:	lea    rdx,[rip+0xe65f]        # 0x1400253a0
   140016d41:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140016d45:	imul   r11,r11,0x58
   140016d49:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140016d4f:	test   ebx,ebx
   140016d51:	je     0x140016d5f
   140016d53:	mov    ecx,ebx
   140016d55:	call   0x140008e80
   140016d5a:	or     eax,0xffffffff
   140016d5d:	jmp    0x140016d61
   140016d5f:	xor    eax,eax
   140016d61:	mov    rbx,QWORD PTR [rsp+0x30]
   140016d66:	add    rsp,0x20
   140016d6a:	pop    rdi
   140016d6b:	ret    
   140016d6c:	mov    QWORD PTR [rsp+0x18],rbx
   140016d71:	mov    DWORD PTR [rsp+0x8],ecx
   140016d75:	push   rsi
   140016d76:	push   rdi
   140016d77:	push   r12
   140016d79:	sub    rsp,0x20
   140016d7d:	movsxd rbx,ecx
   140016d80:	cmp    ebx,0xfffffffe
   140016d83:	jne    0x140016d9d
   140016d85:	call   0x140008e60
   140016d8a:	and    DWORD PTR [rax],0x0
   140016d8d:	call   0x140008e40
   140016d92:	mov    DWORD PTR [rax],0x9
   140016d98:	jmp    0x140016e1e
   140016d9d:	test   ecx,ecx
   140016d9f:	js     0x140016e06
   140016da1:	cmp    ebx,DWORD PTR [rip+0xe5e1]        # 0x140025388
   140016da7:	jae    0x140016e06
   140016da9:	mov    rdi,rbx
   140016dac:	mov    rsi,rbx
   140016daf:	sar    rsi,0x5
   140016db3:	lea    r12,[rip+0xe5e6]        # 0x1400253a0
   140016dba:	and    edi,0x1f
   140016dbd:	imul   rdi,rdi,0x58
   140016dc1:	mov    rax,QWORD PTR [r12+rsi*8]
   140016dc5:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140016dca:	and    ecx,0x1
   140016dcd:	je     0x140016e06
   140016dcf:	mov    ecx,ebx
   140016dd1:	call   0x140015fa8
   140016dd6:	nop
   140016dd7:	mov    rax,QWORD PTR [r12+rsi*8]
   140016ddb:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140016de0:	je     0x140016ded
   140016de2:	mov    ecx,ebx
   140016de4:	call   0x140016cb0
   140016de9:	mov    edi,eax
   140016deb:	jmp    0x140016dfb
   140016ded:	call   0x140008e40
   140016df2:	mov    DWORD PTR [rax],0x9
   140016df8:	or     edi,0xffffffff
   140016dfb:	mov    ecx,ebx
   140016dfd:	call   0x140016050
   140016e02:	mov    eax,edi
   140016e04:	jmp    0x140016e21
   140016e06:	call   0x140008e60
   140016e0b:	and    DWORD PTR [rax],0x0
   140016e0e:	call   0x140008e40
   140016e13:	mov    DWORD PTR [rax],0x9
   140016e19:	call   0x14000dafc
   140016e1e:	or     eax,0xffffffff
   140016e21:	mov    rbx,QWORD PTR [rsp+0x50]
   140016e26:	add    rsp,0x20
   140016e2a:	pop    r12
   140016e2c:	pop    rdi
   140016e2d:	pop    rsi
   140016e2e:	ret    
   140016e2f:	int3   
   140016e30:	rex push rbx
   140016e32:	sub    rsp,0x20
   140016e36:	test   BYTE PTR [rcx+0x18],0x83
   140016e3a:	mov    rbx,rcx
   140016e3d:	je     0x140016e61
   140016e3f:	test   BYTE PTR [rcx+0x18],0x8
   140016e43:	je     0x140016e61
   140016e45:	mov    rcx,QWORD PTR [rcx+0x10]
   140016e49:	call   0x140008584
   140016e4e:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140016e55:	xor    eax,eax
   140016e57:	mov    QWORD PTR [rbx],rax
   140016e5a:	mov    QWORD PTR [rbx+0x10],rax
   140016e5e:	mov    DWORD PTR [rbx+0x8],eax
   140016e61:	add    rsp,0x20
   140016e65:	pop    rbx
   140016e66:	ret    
   140016e67:	int3   
   140016e68:	jmp    QWORD PTR [rip+0x12aa]        # 0x140018118
   140016e6e:	jmp    QWORD PTR [rip+0x12ac]        # 0x140018120
   140016e74:	jmp    QWORD PTR [rip+0x12ae]        # 0x140018128
   140016e7a:	jmp    QWORD PTR [rip+0x12e8]        # 0x140018168
   140016e80:	mov    rax,rsp
   140016e83:	mov    QWORD PTR [rax+0x8],rbx
   140016e87:	mov    QWORD PTR [rax+0x10],rbp
   140016e8b:	mov    QWORD PTR [rax+0x18],rsi
   140016e8f:	mov    QWORD PTR [rax+0x20],rdi
   140016e93:	push   r12
   140016e95:	sub    rsp,0x20
   140016e99:	mov    rbx,QWORD PTR [r9+0x38]
   140016e9d:	mov    rsi,rdx
   140016ea0:	mov    r12,r8
   140016ea3:	mov    rbp,rcx
   140016ea6:	lea    r8,[rbx+0x4]
   140016eaa:	mov    rdx,r9
   140016ead:	mov    rcx,rsi
   140016eb0:	mov    rdi,r9
   140016eb3:	call   0x14000c074
   140016eb8:	mov    r11d,DWORD PTR [rbx+0x4]
   140016ebc:	mov    r10d,DWORD PTR [rbp+0x4]
   140016ec0:	mov    eax,r11d
   140016ec3:	and    r11d,0x2
   140016ec7:	mov    r8d,0x1
   140016ecd:	and    eax,r8d
   140016ed0:	and    r10b,0x66
   140016ed4:	cmove  r11d,eax
   140016ed8:	test   r11d,r11d
   140016edb:	je     0x140016ef1
   140016edd:	mov    r9,rdi
   140016ee0:	mov    r8,r12
   140016ee3:	mov    rdx,rsi
   140016ee6:	mov    rcx,rbp
   140016ee9:	call   0x14000972c
   140016eee:	mov    r8d,eax
   140016ef1:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ef6:	mov    rbp,QWORD PTR [rsp+0x38]
   140016efb:	mov    rsi,QWORD PTR [rsp+0x40]
   140016f00:	mov    rdi,QWORD PTR [rsp+0x48]
   140016f05:	mov    eax,r8d
   140016f08:	add    rsp,0x20
   140016f0c:	pop    r12
   140016f0e:	ret    
   140016f0f:	int3   
   140016f10:	mov    QWORD PTR [rsp+0x10],rdx
   140016f15:	push   rbp
   140016f16:	sub    rsp,0x20
   140016f1a:	mov    rbp,rdx
   140016f1d:	mov    rcx,QWORD PTR [rbp+0x98]
   140016f24:	mov    QWORD PTR [rbp+0x98],rcx
   140016f2b:	xor    eax,eax
   140016f2d:	inc    rcx
   140016f30:	je     0x140016f75
   140016f32:	cmp    rcx,0xffffffffffffffff
   140016f36:	ja     0x140016f42
   140016f38:	call   0x140008790
   140016f3d:	test   rax,rax
   140016f40:	jne    0x140016f75
   140016f42:	and    QWORD PTR [rbp+0x98],0x0
   140016f4a:	lea    rdx,[rbp+0x98]
   140016f51:	lea    rcx,[rbp+0x40]
   140016f55:	call   0x140008104
   140016f5a:	lea    rax,[rip+0x14ef]        # 0x140018450
   140016f61:	mov    QWORD PTR [rbp+0x40],rax
   140016f65:	lea    rdx,[rip+0x8734]        # 0x14001f6a0
   140016f6c:	lea    rcx,[rbp+0x40]
   140016f70:	call   0x140009498
   140016f75:	mov    QWORD PTR [rbp+0xa8],rax
   140016f7c:	lea    rax,[rip+0xfffffffffffefd12]        # 0x140006c95
   140016f83:	add    rsp,0x20
   140016f87:	pop    rbp
   140016f88:	ret    
   140016f89:	int3   
   140016f8a:	int3   
   140016f8b:	int3   
   140016f8c:	int3   
   140016f8d:	int3   
   140016f8e:	int3   
   140016f8f:	int3   
   140016f90:	mov    QWORD PTR [rsp+0x10],rdx
   140016f95:	push   rbx
   140016f96:	push   rbp
   140016f97:	sub    rsp,0x28
   140016f9b:	mov    rbp,rdx
   140016f9e:	mov    rbx,QWORD PTR [rbp+0x90]
   140016fa5:	cmp    QWORD PTR [rbx+0x18],0x10
   140016faa:	jb     0x140016fb4
   140016fac:	mov    rcx,QWORD PTR [rbx]
   140016faf:	call   0x14000872c
   140016fb4:	mov    QWORD PTR [rbx+0x18],0xf
   140016fbc:	and    QWORD PTR [rbx+0x10],0x0
   140016fc1:	mov    BYTE PTR [rbx],0x0
   140016fc4:	xor    edx,edx
   140016fc6:	xor    ecx,ecx
   140016fc8:	call   0x140009498
   140016fcd:	nop
   140016fce:	lea    rcx,[rdx+0x58]
   140016fd5:	jmp    0x1400076d4
   140016fda:	mov    rcx,QWORD PTR [rdx+0x40]
   140016fe1:	jmp    0x1400010a0
   140016fe6:	int3   
   140016fe7:	int3   
   140016fe8:	int3   
   140016fe9:	int3   
   140016fea:	mov    rcx,QWORD PTR [rdx+0x40]
   140016ff1:	add    rcx,0x28
   140016ff5:	jmp    0x1400022a0
   140016ffa:	lea    rcx,[rdx+0x48]
   140017001:	jmp    0x1400076d4
   140017006:	lea    rcx,[rdx+0x40]
   14001700d:	jmp    0x1400076d4
   140017012:	rex push rbp
   140017014:	sub    rsp,0x20
   140017018:	mov    rbp,rdx
   14001701b:	call   0x14000dcdc
   140017020:	nop
   140017021:	add    rsp,0x20
   140017025:	pop    rbp
   140017026:	ret    
   140017027:	int3   
   140017028:	rex push rbp
   14001702a:	sub    rsp,0x20
   14001702e:	mov    rbp,rdx
   140017031:	mov    rax,QWORD PTR [rcx]
   140017034:	mov    rdx,rcx
   140017037:	mov    ecx,DWORD PTR [rax]
   140017039:	call   0x1400102d4
   14001703e:	nop
   14001703f:	add    rsp,0x20
   140017043:	pop    rbp
   140017044:	ret    
   140017045:	int3   
   140017046:	rex push rbp
   140017048:	sub    rsp,0x40
   14001704c:	mov    rbp,rdx
   14001704f:	lea    rax,[rbp+0x40]
   140017053:	mov    QWORD PTR [rsp+0x30],rax
   140017058:	mov    rax,QWORD PTR [rbp+0x90]
   14001705f:	mov    QWORD PTR [rsp+0x28],rax
   140017064:	mov    rax,QWORD PTR [rbp+0x88]
   14001706b:	mov    QWORD PTR [rsp+0x20],rax
   140017070:	mov    r9,QWORD PTR [rbp+0x80]
   140017077:	mov    r8,QWORD PTR [rbp+0x78]
   14001707b:	mov    rdx,QWORD PTR [rbp+0x70]
   14001707f:	call   0x1400097b4
   140017084:	nop
   140017085:	add    rsp,0x40
   140017089:	pop    rbp
   14001708a:	ret    
   14001708b:	int3   
   14001708c:	rex push rbp
   14001708e:	sub    rsp,0x20
   140017092:	mov    rbp,rdx
   140017095:	mov    ecx,0xd
   14001709a:	call   0x140012d0c
   14001709f:	nop
   1400170a0:	add    rsp,0x20
   1400170a4:	pop    rbp
   1400170a5:	ret    
   1400170a6:	int3   
   1400170a7:	int3   
   1400170a8:	int3   
   1400170a9:	int3   
   1400170aa:	int3   
   1400170ab:	int3   
   1400170ac:	rex push rbp
   1400170ae:	sub    rsp,0x20
   1400170b2:	mov    rbp,rdx
   1400170b5:	mov    ecx,0xc
   1400170ba:	call   0x140012d0c
   1400170bf:	nop
   1400170c0:	add    rsp,0x20
   1400170c4:	pop    rbp
   1400170c5:	ret    
   1400170c6:	int3   
   1400170c7:	rex push rbp
   1400170c9:	sub    rsp,0x20
   1400170cd:	mov    rbp,rdx
   1400170d0:	mov    ecx,0xc
   1400170d5:	call   0x140012d0c
   1400170da:	nop
   1400170db:	add    rsp,0x20
   1400170df:	pop    rbp
   1400170e0:	ret    
   1400170e1:	int3   
   1400170e2:	int3   
   1400170e3:	int3   
   1400170e4:	int3   
   1400170e5:	int3   
   1400170e6:	int3   
   1400170e7:	rex push rbp
   1400170e9:	sub    rsp,0x20
   1400170ed:	mov    rbp,rdx
   1400170f0:	mov    ecx,0xc
   1400170f5:	call   0x140012d0c
   1400170fa:	nop
   1400170fb:	add    rsp,0x20
   1400170ff:	pop    rbp
   140017100:	ret    
   140017101:	int3   
   140017102:	int3   
   140017103:	int3   
   140017104:	int3   
   140017105:	int3   
   140017106:	int3   
   140017107:	rex push rbp
   140017109:	sub    rsp,0x20
   14001710d:	mov    rbp,rdx
   140017110:	mov    rax,QWORD PTR [rbp+0x60]
   140017114:	and    DWORD PTR [rax+0xc8],0xffffffef
   14001711b:	add    rsp,0x20
   14001711f:	pop    rbp
   140017120:	ret    
   140017121:	int3   
   140017122:	rex push rbp
   140017124:	sub    rsp,0x20
   140017128:	mov    rbp,rdx
   14001712b:	call   0x14000adfc
   140017130:	nop
   140017131:	add    rsp,0x20
   140017135:	pop    rbp
   140017136:	ret    
   140017137:	int3   
   140017138:	int3   
   140017139:	int3   
   14001713a:	int3   
   14001713b:	int3   
   14001713c:	int3   
   14001713d:	int3   
   14001713e:	int3   
   14001713f:	int3   
   140017140:	int3   
   140017141:	int3   
   140017142:	rex push rbp
   140017144:	sub    rsp,0x20
   140017148:	mov    rbp,rdx
   14001714b:	call   0x14000d728
   140017150:	cmp    DWORD PTR [rax+0x100],0x0
   140017157:	jle    0x140017164
   140017159:	call   0x14000d728
   14001715e:	dec    DWORD PTR [rax+0x100]
   140017164:	add    rsp,0x20
   140017168:	pop    rbp
   140017169:	ret    
   14001716a:	int3   
   14001716b:	rex push rbp
   14001716d:	sub    rsp,0x20
   140017171:	mov    rbp,rdx
   140017174:	xor    eax,eax
   140017176:	cmp    BYTE PTR [rbp+0x38],al
   140017179:	setne  al
   14001717c:	add    rsp,0x20
   140017180:	pop    rbp
   140017181:	ret    
   140017182:	int3   
   140017183:	rex push rbp
   140017185:	sub    rsp,0x20
   140017189:	mov    rbp,rdx
   14001718c:	mov    QWORD PTR [rbp+0x68],rcx
   140017190:	mov    QWORD PTR [rbp+0x58],rcx
   140017194:	mov    rax,QWORD PTR [rbp+0x58]
   140017198:	mov    rcx,QWORD PTR [rax]
   14001719b:	mov    QWORD PTR [rbp+0x28],rcx
   14001719f:	mov    DWORD PTR [rbp+0x20],0x0
   1400171a6:	mov    rax,QWORD PTR [rbp+0x28]
   1400171aa:	cmp    DWORD PTR [rax],0xe06d7363
   1400171b0:	jne    0x1400171ff
   1400171b2:	mov    rax,QWORD PTR [rbp+0x28]
   1400171b6:	cmp    DWORD PTR [rax+0x18],0x4
   1400171ba:	jne    0x1400171ff
   1400171bc:	mov    rax,QWORD PTR [rbp+0x28]
   1400171c0:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400171c7:	je     0x1400171e3
   1400171c9:	mov    rax,QWORD PTR [rbp+0x28]
   1400171cd:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400171d4:	je     0x1400171e3
   1400171d6:	mov    rax,QWORD PTR [rbp+0x28]
   1400171da:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400171e1:	jne    0x1400171ff
   1400171e3:	mov    rdx,QWORD PTR [rbp+0x28]
   1400171e7:	mov    rax,QWORD PTR [rbp+0xc8]
   1400171ee:	mov    rcx,QWORD PTR [rax+0x28]
   1400171f2:	cmp    QWORD PTR [rdx+0x28],rcx
   1400171f6:	jne    0x1400171ff
   1400171f8:	mov    DWORD PTR [rbp+0x20],0x1
   1400171ff:	mov    rax,QWORD PTR [rbp+0x28]
   140017203:	cmp    DWORD PTR [rax],0xe06d7363
   140017209:	jne    0x140017266
   14001720b:	mov    rax,QWORD PTR [rbp+0x28]
   14001720f:	cmp    DWORD PTR [rax+0x18],0x4
   140017213:	jne    0x140017266
   140017215:	mov    rax,QWORD PTR [rbp+0x28]
   140017219:	cmp    DWORD PTR [rax+0x20],0x19930520
   140017220:	je     0x14001723c
   140017222:	mov    rax,QWORD PTR [rbp+0x28]
   140017226:	cmp    DWORD PTR [rax+0x20],0x19930521
   14001722d:	je     0x14001723c
   14001722f:	mov    rax,QWORD PTR [rbp+0x28]
   140017233:	cmp    DWORD PTR [rax+0x20],0x19930522
   14001723a:	jne    0x140017266
   14001723c:	mov    rax,QWORD PTR [rbp+0x28]
   140017240:	cmp    QWORD PTR [rax+0x30],0x0
   140017245:	jne    0x140017266
   140017247:	call   0x14000d728
   14001724c:	mov    DWORD PTR [rax+0x2c0],0x1
   140017256:	mov    DWORD PTR [rbp+0x20],0x1
   14001725d:	mov    DWORD PTR [rbp+0x30],0x1
   140017264:	jmp    0x14001726d
   140017266:	mov    DWORD PTR [rbp+0x30],0x0
   14001726d:	mov    eax,DWORD PTR [rbp+0x30]
   140017270:	add    rsp,0x20
   140017274:	pop    rbp
   140017275:	ret    
   140017276:	int3   
   140017277:	int3   
   140017278:	int3   
   140017279:	int3   
   14001727a:	int3   
   14001727b:	int3   
   14001727c:	int3   
   14001727d:	int3   
   14001727e:	int3   
   14001727f:	int3   
   140017280:	int3   
   140017281:	int3   
   140017282:	int3   
   140017283:	rex push rbx
   140017285:	push   rbp
   140017286:	sub    rsp,0x28
   14001728a:	mov    rbp,rdx
   14001728d:	mov    rcx,QWORD PTR [rbp+0x50]
   140017291:	call   0x140009a50
   140017296:	cmp    DWORD PTR [rbp+0x20],0x0
   14001729a:	jne    0x1400172e4
   14001729c:	mov    rbx,QWORD PTR [rbp+0xc8]
   1400172a3:	cmp    DWORD PTR [rbx],0xe06d7363
   1400172a9:	jne    0x1400172e4
   1400172ab:	cmp    DWORD PTR [rbx+0x18],0x4
   1400172af:	jne    0x1400172e4
   1400172b1:	cmp    DWORD PTR [rbx+0x20],0x19930520
   1400172b8:	je     0x1400172cc
   1400172ba:	cmp    DWORD PTR [rbx+0x20],0x19930521
   1400172c1:	je     0x1400172cc
   1400172c3:	cmp    DWORD PTR [rbx+0x20],0x19930522
   1400172ca:	jne    0x1400172e4
   1400172cc:	mov    rcx,QWORD PTR [rbx+0x28]
   1400172d0:	call   0x140009a1c
   1400172d5:	test   eax,eax
   1400172d7:	je     0x1400172e4
   1400172d9:	mov    dl,0x1
   1400172db:	mov    rcx,rbx
   1400172de:	call   0x14000afdc
   1400172e3:	nop
   1400172e4:	call   0x14000d728
   1400172e9:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400172f0:	mov    QWORD PTR [rax+0xf0],rcx
   1400172f7:	call   0x14000d728
   1400172fc:	mov    rcx,QWORD PTR [rbp+0xd8]
   140017303:	mov    QWORD PTR [rax+0xf8],rcx
   14001730a:	add    rsp,0x28
   14001730e:	pop    rbp
   14001730f:	pop    rbx
   140017310:	ret    
   140017311:	int3   
   140017312:	rex push rbp
   140017314:	sub    rsp,0x20
   140017318:	mov    rbp,rdx
   14001731b:	mov    ecx,0xd
   140017320:	call   0x140012d0c
   140017325:	nop
   140017326:	add    rsp,0x20
   14001732a:	pop    rbp
   14001732b:	ret    
   14001732c:	int3   
   14001732d:	rex push rbp
   14001732f:	sub    rsp,0x20
   140017333:	mov    rbp,rdx
   140017336:	mov    ecx,0xc
   14001733b:	call   0x140012d0c
   140017340:	nop
   140017341:	add    rsp,0x20
   140017345:	pop    rbp
   140017346:	ret    
   140017347:	int3   
   140017348:	rex push rbp
   14001734a:	sub    rsp,0x20
   14001734e:	mov    rbp,rdx
   140017351:	cmp    DWORD PTR [rbp+0x80],0x0
   140017358:	je     0x140017365
   14001735a:	mov    ecx,0x8
   14001735f:	call   0x140012d0c
   140017364:	nop
   140017365:	add    rsp,0x20
   140017369:	pop    rbp
   14001736a:	ret    
   14001736b:	int3   
   14001736c:	rex push rbp
   14001736e:	sub    rsp,0x20
   140017372:	mov    rbp,rdx
   140017375:	mov    ecx,0xe
   14001737a:	call   0x140012d0c
   14001737f:	nop
   140017380:	add    rsp,0x20
   140017384:	pop    rbp
   140017385:	ret    
   140017386:	int3   
   140017387:	rex push rbp
   140017389:	sub    rsp,0x20
   14001738d:	mov    rbp,rdx
   140017390:	mov    rcx,QWORD PTR [rip+0xad59]        # 0x1400220f0
   140017397:	call   QWORD PTR [rip+0xd4b]        # 0x1400180e8
   14001739d:	nop
   14001739e:	add    rsp,0x20
   1400173a2:	pop    rbp
   1400173a3:	ret    
   1400173a4:	int3   
   1400173a5:	rex push rbp
   1400173a7:	sub    rsp,0x20
   1400173ab:	mov    rbp,rdx
   1400173ae:	cmp    DWORD PTR [rbp+0x60],0x0
   1400173b2:	je     0x1400173bc
   1400173b4:	xor    ecx,ecx
   1400173b6:	call   0x140012d0c
   1400173bb:	nop
   1400173bc:	add    rsp,0x20
   1400173c0:	pop    rbp
   1400173c1:	ret    
   1400173c2:	int3   
   1400173c3:	int3   
   1400173c4:	int3   
   1400173c5:	int3   
   1400173c6:	int3   
   1400173c7:	int3   
   1400173c8:	int3   
   1400173c9:	int3   
   1400173ca:	int3   
   1400173cb:	int3   
   1400173cc:	int3   
   1400173cd:	int3   
   1400173ce:	int3   
   1400173cf:	int3   
   1400173d0:	rex push rbp
   1400173d2:	sub    rsp,0x20
   1400173d6:	mov    rbp,rdx
   1400173d9:	mov    rax,QWORD PTR [rcx]
   1400173dc:	xor    ecx,ecx
   1400173de:	cmp    DWORD PTR [rax],0xc0000005
   1400173e4:	sete   cl
   1400173e7:	mov    eax,ecx
   1400173e9:	mov    eax,ecx
   1400173eb:	add    rsp,0x20
   1400173ef:	pop    rbp
   1400173f0:	ret    
   1400173f1:	int3   
   1400173f2:	rex push rbp
   1400173f4:	sub    rsp,0x20
   1400173f8:	mov    rbp,rdx
   1400173fb:	mov    ecx,DWORD PTR [rbp+0x50]
   1400173fe:	call   0x140016050
   140017403:	nop
   140017404:	add    rsp,0x20
   140017408:	pop    rbp
   140017409:	ret    
   14001740a:	int3   
   14001740b:	rex push rbp
   14001740d:	sub    rsp,0x20
   140017411:	mov    rbp,rdx
   140017414:	mov    ecx,0xa
   140017419:	call   0x140012d0c
   14001741e:	nop
   14001741f:	add    rsp,0x20
   140017423:	pop    rbp
   140017424:	ret    
   140017425:	int3   
   140017426:	rex push rbp
   140017428:	sub    rsp,0x20
   14001742c:	mov    rbp,rdx
   14001742f:	mov    ecx,0x1
   140017434:	call   0x140012d0c
   140017439:	nop
   14001743a:	add    rsp,0x20
   14001743e:	pop    rbp
   14001743f:	ret    
   140017440:	int3   
   140017441:	rex push rbp
   140017443:	sub    rsp,0x20
   140017447:	mov    rbp,rdx
   14001744a:	movsxd rcx,DWORD PTR [rbp+0x20]
   14001744e:	mov    rax,rcx
   140017451:	mov    rdx,QWORD PTR [rip+0xcf18]        # 0x140024370
   140017458:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14001745c:	call   0x140014f88
   140017461:	nop
   140017462:	add    rsp,0x20
   140017466:	pop    rbp
   140017467:	ret    
   140017468:	int3   
   140017469:	int3   
   14001746a:	int3   
   14001746b:	int3   
   14001746c:	int3   
   14001746d:	int3   
   14001746e:	int3   
   14001746f:	int3   
   140017470:	int3   
   140017471:	rex push rbp
   140017473:	sub    rsp,0x20
   140017477:	mov    rbp,rdx
   14001747a:	mov    ecx,0x1
   14001747f:	call   0x140012d0c
   140017484:	nop
   140017485:	add    rsp,0x20
   140017489:	pop    rbp
   14001748a:	ret    
   14001748b:	int3   
   14001748c:	rex push rbp
   14001748e:	sub    rsp,0x20
   140017492:	mov    rbp,rdx
   140017495:	mov    rcx,QWORD PTR [rbp+0x30]
   140017499:	call   0x140014f3c
   14001749e:	nop
   14001749f:	add    rsp,0x20
   1400174a3:	pop    rbp
   1400174a4:	ret    
   1400174a5:	int3   
   1400174a6:	rex push rbp
   1400174a8:	sub    rsp,0x20
   1400174ac:	mov    rbp,rdx
   1400174af:	mov    ecx,DWORD PTR [rbp+0x40]
   1400174b2:	call   0x140016050
   1400174b7:	nop
   1400174b8:	add    rsp,0x20
   1400174bc:	pop    rbp
   1400174bd:	ret    
   1400174be:	int3   
   1400174bf:	int3   
   1400174c0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400174c7:	add    rcx,0x8
   1400174cb:	jmp    0x140007724
   1400174d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400174d5:	push   rbp
   1400174d6:	sub    rsp,0x20
   1400174da:	mov    rbp,rdx
   1400174dd:	mov    rcx,QWORD PTR [rbp+0x78]
   1400174e1:	mov    QWORD PTR [rbp+0x78],rcx
   1400174e5:	inc    rcx
   1400174e8:	call   0x140003770
   1400174ed:	mov    QWORD PTR [rbp+0x88],rax
   1400174f4:	lea    rax,[rip+0xfffffffffffeda82]        # 0x140004f7d
   1400174fb:	add    rsp,0x20
   1400174ff:	pop    rbp
   140017500:	ret    
   140017501:	int3   
   140017502:	int3   
   140017503:	int3   
   140017504:	int3   
   140017505:	int3   
   140017506:	int3   
   140017507:	int3   
   140017508:	int3   
   140017509:	int3   
   14001750a:	int3   
   14001750b:	int3   
   14001750c:	int3   
   14001750d:	int3   
   14001750e:	int3   
   14001750f:	int3   
   140017510:	mov    QWORD PTR [rsp+0x10],rdx
   140017515:	push   rbx
   140017516:	push   rbp
   140017517:	sub    rsp,0x28
   14001751b:	mov    rbp,rdx
   14001751e:	mov    rbx,QWORD PTR [rbp+0x70]
   140017522:	cmp    QWORD PTR [rbx+0x18],0x8
   140017527:	jb     0x140017531
   140017529:	mov    rcx,QWORD PTR [rbx]
   14001752c:	call   0x14000872c
   140017531:	mov    QWORD PTR [rbx+0x18],0x7
   140017539:	mov    QWORD PTR [rbx+0x10],0x0
   140017541:	xor    eax,eax
   140017543:	mov    WORD PTR [rbx],ax
   140017546:	xor    edx,edx
   140017548:	xor    ecx,ecx
   14001754a:	call   0x140009498
   14001754f:	nop
   140017550:	mov    rcx,QWORD PTR [rdx+0x40]
   140017557:	sub    rcx,0x98
   14001755e:	add    rcx,0x18
   140017562:	jmp    0x140002a40
   140017567:	int3   
   140017568:	int3   
   140017569:	int3   
   14001756a:	int3   
   14001756b:	int3   
   14001756c:	int3   
   14001756d:	int3   
   14001756e:	int3   
   14001756f:	int3   
   140017570:	mov    rcx,QWORD PTR [rdx+0xd0]
   140017577:	jmp    0x14000872c
   14001757c:	int3   
   14001757d:	int3   
   14001757e:	int3   
   14001757f:	int3   
   140017580:	lea    rcx,[rdx+0x40]
   140017587:	jmp    0x1400076d4
   14001758c:	int3   
   14001758d:	int3   
   14001758e:	int3   
   14001758f:	int3   
   140017590:	lea    rcx,[rdx+0x40]
   140017597:	add    rcx,0x8
   14001759b:	jmp    0x1400022a0
   1400175a0:	lea    rcx,[rdx+0x40]
   1400175a7:	add    rcx,0x18
   1400175ab:	jmp    0x1400022a0
   1400175b0:	lea    rcx,[rdx+0x40]
   1400175b7:	add    rcx,0x28
   1400175bb:	jmp    0x1400022a0
   1400175c0:	lea    rcx,[rdx+0x40]
   1400175c7:	add    rcx,0x38
   1400175cb:	jmp    0x1400022a0
   1400175d0:	lea    rcx,[rdx+0x40]
   1400175d7:	jmp    0x1400076d4
   1400175dc:	int3   
   1400175dd:	int3   
   1400175de:	int3   
   1400175df:	int3   
   1400175e0:	lea    rcx,[rdx+0x40]
   1400175e7:	add    rcx,0x8
   1400175eb:	jmp    0x1400022a0
   1400175f0:	lea    rcx,[rdx+0x40]
   1400175f7:	add    rcx,0x18
   1400175fb:	jmp    0x1400022a0
   140017600:	lea    rcx,[rdx+0x40]
   140017607:	add    rcx,0x28
   14001760b:	jmp    0x1400022a0
   140017610:	lea    rcx,[rdx+0x40]
   140017617:	add    rcx,0x38
   14001761b:	jmp    0x1400022a0
   140017620:	lea    rcx,[rdx+0x68]
   140017627:	jmp    0x1400076d4
   14001762c:	int3   
   14001762d:	int3   
   14001762e:	int3   
   14001762f:	int3   
   140017630:	lea    rcx,[rdx+0x50]
   140017637:	jmp    0x1400010b0
   14001763c:	int3   
   14001763d:	int3   
   14001763e:	int3   
   14001763f:	int3   
   140017640:	lea    rcx,[rdx+0x30]
   140017647:	jmp    0x140002680
   14001764c:	int3   
   14001764d:	int3   
   14001764e:	int3   
   14001764f:	int3   
   140017650:	lea    rcx,[rdx+0x30]
   140017657:	jmp    0x140002680
   14001765c:	int3   
   14001765d:	int3   
   14001765e:	int3   
   14001765f:	int3   
   140017660:	lea    rcx,[rdx+0x30]
   140017667:	jmp    0x140002680
   14001766c:	int3   
   14001766d:	int3   
   14001766e:	int3   
   14001766f:	int3   
   140017670:	lea    rcx,[rdx+0x38]
   140017677:	jmp    0x140002680
   14001767c:	int3   
   14001767d:	int3   
   14001767e:	int3   
   14001767f:	int3   
   140017680:	rex push rbp
   140017682:	sub    rsp,0x20
   140017686:	mov    rbp,rdx
   140017689:	mov    rdx,QWORD PTR [rbp+0x70]
   14001768d:	mov    rcx,QWORD PTR [rbp+0x78]
   140017691:	call   0x140001050
   140017696:	add    rsp,0x20
   14001769a:	pop    rbp
   14001769b:	ret    
   14001769c:	int3   
   14001769d:	int3   
   14001769e:	int3   
   14001769f:	int3   
   1400176a0:	mov    rcx,QWORD PTR [rdx+0x78]
   1400176a7:	jmp    0x140002680
   1400176ac:	int3   
   1400176ad:	int3   
   1400176ae:	int3   
   1400176af:	int3   
   1400176b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400176b5:	push   rbp
   1400176b6:	sub    rsp,0x20
   1400176ba:	mov    rbp,rdx
   1400176bd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400176c1:	call   0x14000872c
   1400176c6:	xor    edx,edx
   1400176c8:	xor    ecx,ecx
   1400176ca:	call   0x140009498
   1400176cf:	nop
   1400176d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400176d5:	push   rbp
   1400176d6:	sub    rsp,0x20
   1400176da:	mov    rbp,rdx
   1400176dd:	lea    rax,[rip+0xfffffffffffec696]        # 0x140003d7a
   1400176e4:	add    rsp,0x20
   1400176e8:	pop    rbp
   1400176e9:	ret    
   1400176ea:	int3   
   1400176eb:	int3   
   1400176ec:	int3   
   1400176ed:	int3   
   1400176ee:	int3   
   1400176ef:	int3   
   1400176f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400176f7:	jmp    0x140004cf0
   1400176fc:	int3   
   1400176fd:	int3   
   1400176fe:	int3   
   1400176ff:	int3   
   140017700:	lea    rcx,[rdx+0x80]
   140017707:	jmp    0x140002680
   14001770c:	int3   
   14001770d:	int3   
   14001770e:	int3   
   14001770f:	int3   
   140017710:	lea    rcx,[rdx+0x30]
   140017717:	jmp    0x140002680
   14001771c:	int3   
   14001771d:	int3   
   14001771e:	int3   
   14001771f:	int3   
   140017720:	lea    rcx,[rdx+0x30]
   140017727:	jmp    0x140005730
   14001772c:	int3   
   14001772d:	int3   
   14001772e:	int3   
   14001772f:	int3   
   140017730:	rex push rbp
   140017732:	sub    rsp,0x20
   140017736:	mov    rbp,rdx
   140017739:	mov    eax,DWORD PTR [rbp+0x20]
   14001773c:	and    eax,0x1
   14001773f:	test   eax,eax
   140017741:	je     0x140017750
   140017743:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140017747:	lea    rcx,[rbp+0x30]
   14001774b:	call   0x140002680
   140017750:	add    rsp,0x20
   140017754:	pop    rbp
   140017755:	ret    
   140017756:	int3   
   140017757:	int3   
   140017758:	int3   
   140017759:	int3   
   14001775a:	int3   
   14001775b:	int3   
   14001775c:	int3   
   14001775d:	int3   
   14001775e:	int3   
   14001775f:	int3   
   140017760:	lea    rcx,[rdx+0x70]
   140017767:	jmp    0x140002680
   14001776c:	int3   
   14001776d:	int3   
   14001776e:	int3   
   14001776f:	int3   
   140017770:	lea    rcx,[rdx+0x28]
   140017777:	jmp    0x140004cf0
   14001777c:	int3   
   14001777d:	int3   
   14001777e:	int3   
   14001777f:	int3   
   140017780:	lea    rcx,[rdx+0x28]
   140017787:	jmp    0x140003cc0
   14001778c:	int3   
   14001778d:	int3   
   14001778e:	int3   
   14001778f:	int3   
   140017790:	mov    QWORD PTR [rsp+0x10],rdx
   140017795:	push   rbp
   140017796:	sub    rsp,0x20
   14001779a:	mov    rbp,rdx
   14001779d:	mov    rcx,QWORD PTR [rbp+0x60]
   1400177a1:	mov    rax,QWORD PTR [rcx]
   1400177a4:	movsxd rdx,DWORD PTR [rax+0x4]
   1400177a8:	add    rdx,rcx
   1400177ab:	mov    eax,DWORD PTR [rdx+0x10]
   1400177ae:	or     eax,0x4
   1400177b1:	cmp    QWORD PTR [rdx+0x48],0x0
   1400177b6:	jne    0x1400177bb
   1400177b8:	or     eax,0x4
   1400177bb:	and    eax,0x17
   1400177be:	mov    DWORD PTR [rdx+0x10],eax
   1400177c1:	test   DWORD PTR [rdx+0x14],eax
   1400177c4:	jne    0x1400177cf
   1400177c6:	lea    rax,[rip+0xfffffffffffedee7]        # 0x1400056b4
   1400177cd:	jmp    0x1400177d9
   1400177cf:	xor    edx,edx
   1400177d1:	xor    ecx,ecx
   1400177d3:	call   0x140009498
   1400177d8:	nop
   1400177d9:	add    rsp,0x20
   1400177dd:	pop    rbp
   1400177de:	ret    
   1400177df:	int3   
   1400177e0:	lea    rcx,[rdx+0x28]
   1400177e7:	jmp    0x140004cf0
   1400177ec:	int3   
   1400177ed:	int3   
   1400177ee:	int3   
   1400177ef:	int3   
   1400177f0:	lea    rcx,[rdx+0x28]
   1400177f7:	jmp    0x140004cf0
   1400177fc:	int3   
   1400177fd:	int3   
   1400177fe:	int3   
   1400177ff:	int3   
   140017800:	lea    rcx,[rdx+0x28]
   140017807:	jmp    0x140003cc0
   14001780c:	int3   
   14001780d:	int3   
   14001780e:	int3   
   14001780f:	int3   
   140017810:	mov    QWORD PTR [rsp+0x10],rdx
   140017815:	push   rbp
   140017816:	sub    rsp,0x20
   14001781a:	mov    rbp,rdx
   14001781d:	mov    rcx,QWORD PTR [rbp+0x70]
   140017821:	mov    rax,QWORD PTR [rcx]
   140017824:	movsxd rdx,DWORD PTR [rax+0x4]
   140017828:	add    rdx,rcx
   14001782b:	mov    eax,DWORD PTR [rdx+0x10]
   14001782e:	or     eax,0x4
   140017831:	cmp    QWORD PTR [rdx+0x48],0x0
   140017836:	jne    0x14001783b
   140017838:	or     eax,0x4
   14001783b:	and    eax,0x17
   14001783e:	mov    DWORD PTR [rdx+0x10],eax
   140017841:	test   DWORD PTR [rdx+0x14],eax
   140017844:	jne    0x14001784f
   140017846:	lea    rax,[rip+0xfffffffffffedc1c]        # 0x140005469
   14001784d:	jmp    0x140017859
   14001784f:	xor    edx,edx
   140017851:	xor    ecx,ecx
   140017853:	call   0x140009498
   140017858:	nop
   140017859:	add    rsp,0x20
   14001785d:	pop    rbp
   14001785e:	ret    
   14001785f:	int3   
   140017860:	lea    rcx,[rdx+0x28]
   140017867:	jmp    0x140004cf0
   14001786c:	int3   
   14001786d:	int3   
   14001786e:	int3   
   14001786f:	int3   
   140017870:	rex push rbp
   140017872:	sub    rsp,0x20
   140017876:	mov    rbp,rdx
   140017879:	mov    eax,DWORD PTR [rbp+0x48]
   14001787c:	and    eax,0x1
   14001787f:	test   eax,eax
   140017881:	je     0x140017897
   140017883:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140017887:	mov    rcx,QWORD PTR [rbp+0x40]
   14001788b:	add    rcx,0x98
   140017892:	call   0x140002340
   140017897:	add    rsp,0x20
   14001789b:	pop    rbp
   14001789c:	ret    
   14001789d:	int3   
   14001789e:	int3   
   14001789f:	int3   
   1400178a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400178a7:	add    rcx,0x10
   1400178ab:	jmp    0x140002350
   1400178b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400178b7:	add    rcx,0x18
   1400178bb:	jmp    0x140002a40
   1400178c0:	mov    rcx,QWORD PTR [rdx+0x28]
   1400178c7:	jmp    0x140002370
   1400178cc:	int3   
   1400178cd:	int3   
   1400178ce:	int3   
   1400178cf:	int3   
   1400178d0:	lea    rcx,[rdx+0x38]
   1400178d7:	jmp    0x140002680
   1400178dc:	int3   
   1400178dd:	int3   
   1400178de:	int3   
   1400178df:	int3   
   1400178e0:	lea    rcx,[rdx+0x60]
   1400178e7:	jmp    0x140002680
   1400178ec:	int3   
   1400178ed:	int3   
   1400178ee:	int3   
   1400178ef:	int3   
   1400178f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400178f7:	jmp    0x140003a20
   1400178fc:	int3   
   1400178fd:	int3   
   1400178fe:	int3   
   1400178ff:	int3   
   140017900:	mov    rcx,QWORD PTR [rdx+0x40]
   140017907:	jmp    0x140001b30
   14001790c:	int3   
   14001790d:	int3   
   14001790e:	int3   
   14001790f:	int3   
   140017910:	mov    rcx,QWORD PTR [rdx+0x40]
   140017917:	add    rcx,0x20
   14001791b:	jmp    0x140001b70
   140017920:	mov    rcx,QWORD PTR [rdx+0x40]
   140017927:	add    rcx,0x118
   14001792e:	jmp    0x140002680
   140017933:	int3   
   140017934:	int3   
   140017935:	int3   
   140017936:	int3   
   140017937:	int3   
   140017938:	int3   
   140017939:	int3   
   14001793a:	int3   
   14001793b:	int3   
   14001793c:	int3   
   14001793d:	int3   
   14001793e:	int3   
   14001793f:	int3   
   140017940:	mov    rcx,QWORD PTR [rdx+0x48]
   140017947:	jmp    0x140003a20
   14001794c:	int3   
   14001794d:	int3   
   14001794e:	int3   
   14001794f:	int3   
   140017950:	mov    rcx,QWORD PTR [rdx+0x40]
   140017957:	jmp    0x140003a20
   14001795c:	int3   
   14001795d:	int3   
   14001795e:	int3   
   14001795f:	int3   
   140017960:	lea    rcx,[rip+0xc8a9]        # 0x140024210
   140017967:	jmp    0x140001b30
   14001796c:	int3   
   14001796d:	int3   
   14001796e:	int3   
   14001796f:	int3   
   140017970:	lea    rcx,[rip+0xc899]        # 0x140024210
   140017977:	add    rcx,0x20
   14001797b:	jmp    0x140001b70
   140017980:	lea    rcx,[rip+0xc889]        # 0x140024210
   140017987:	add    rcx,0x118
   14001798e:	jmp    0x140002680
   140017993:	int3   
   140017994:	int3   
   140017995:	int3   
   140017996:	int3   
   140017997:	int3   
   140017998:	int3   
   140017999:	int3   
   14001799a:	int3   
   14001799b:	int3   
   14001799c:	int3   
   14001799d:	int3   
   14001799e:	int3   
   14001799f:	int3   
   1400179a0:	sub    rsp,0x48
   1400179a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400179ad:	mov    ecx,0x70
   1400179b2:	call   0x140008790
   1400179b7:	test   rax,rax
   1400179ba:	je     0x140017a35
   1400179bc:	mov    QWORD PTR [rip+0xc855],rax        # 0x140024218
   1400179c3:	mov    QWORD PTR [rax],rax
   1400179c6:	mov    rax,QWORD PTR [rip+0xc84b]        # 0x140024218
   1400179cd:	mov    QWORD PTR [rax+0x8],rax
   1400179d1:	mov    rax,QWORD PTR [rip+0xc840]        # 0x140024218
   1400179d8:	mov    QWORD PTR [rax+0x10],rax
   1400179dc:	mov    rax,QWORD PTR [rip+0xc835]        # 0x140024218
   1400179e3:	mov    BYTE PTR [rax+0x68],0x1
   1400179e7:	mov    rax,QWORD PTR [rip+0xc82a]        # 0x140024218
   1400179ee:	mov    BYTE PTR [rax+0x69],0x1
   1400179f2:	lea    rcx,[rip+0xc837]        # 0x140024230
   1400179f9:	call   0x140002870
   1400179fe:	nop
   1400179ff:	mov    QWORD PTR [rip+0xc936],0x7        # 0x140024340
   140017a0a:	xor    eax,eax
   140017a0c:	mov    QWORD PTR [rip+0xc925],rax        # 0x140024338
   140017a13:	mov    WORD PTR [rip+0xc90e],ax        # 0x140024328
   140017a1a:	lea    rcx,[rip+0xc92f]        # 0x140024350
   140017a21:	call   0x1400037e0
   140017a26:	nop
   140017a27:	lea    rcx,[rip+0xd2]        # 0x140017b00
   140017a2e:	call   0x140008714
   140017a33:	jmp    0x140017a67
   140017a35:	mov    QWORD PTR [rsp+0x50],rax
   140017a3a:	lea    rdx,[rsp+0x50]
   140017a3f:	lea    rcx,[rsp+0x28]
   140017a44:	call   0x140008104
   140017a49:	lea    r11,[rip+0xa00]        # 0x140018450
   140017a50:	mov    QWORD PTR [rsp+0x28],r11
   140017a55:	lea    rdx,[rip+0x7c44]        # 0x14001f6a0
   140017a5c:	lea    rcx,[rsp+0x28]
   140017a61:	call   0x140009498
   140017a66:	int3   
   140017a67:	add    rsp,0x48
   140017a6b:	ret    
   140017a6c:	lea    rcx,[rip+0x95]        # 0x140017b08
   140017a73:	jmp    0x140008714
   140017a78:	lea    rcx,[rip+0x99]        # 0x140017b18
   140017a7f:	jmp    0x140008714
   140017a84:	lea    rcx,[rip+0x9d]        # 0x140017b28
   140017a8b:	jmp    0x140008714
   140017a90:	lea    rcx,[rip+0xad]        # 0x140017b44
   140017a97:	jmp    0x140008714
   140017a9c:	lea    rcx,[rip+0x95]        # 0x140017b38
   140017aa3:	jmp    0x140008714
   140017aa8:	sub    rsp,0x28
   140017aac:	lea    rcx,[rip+0xb2dd]        # 0x140022d90
   140017ab3:	call   0x14000761c
   140017ab8:	lea    rcx,[rip+0xd9]        # 0x140017b98
   140017abf:	add    rsp,0x28
   140017ac3:	jmp    0x140008714
   140017ac8:	sub    rsp,0x28
   140017acc:	lea    rcx,[rip+0xb54d]        # 0x140023020
   140017ad3:	call   0x14000761c
   140017ad8:	lea    rcx,[rip+0xc5]        # 0x140017ba4
   140017adf:	add    rsp,0x28
   140017ae3:	jmp    0x140008714
   140017ae8:	lea    rcx,[rip+0xc1]        # 0x140017bb0
   140017aef:	jmp    0x140008714
   140017af4:	int3   
   140017af5:	int3   
   140017af6:	int3   
   140017af7:	int3   
   140017af8:	int3   
   140017af9:	int3   
   140017afa:	int3   
   140017afb:	int3   
   140017afc:	int3   
   140017afd:	int3   
   140017afe:	int3   
   140017aff:	int3   
   140017b00:	jmp    0x140001a60
   140017b05:	int3   
   140017b06:	int3   
   140017b07:	int3   
   140017b08:	lea    rax,[rip+0x8c9]        # 0x1400183d8
   140017b0f:	mov    QWORD PTR [rip+0x95c2],rax        # 0x1400210d8
   140017b16:	ret    
   140017b17:	int3   
   140017b18:	lea    rax,[rip+0x8b9]        # 0x1400183d8
   140017b1f:	mov    QWORD PTR [rip+0x95c2],rax        # 0x1400210e8
   140017b26:	ret    
   140017b27:	int3   
   140017b28:	lea    rax,[rip+0x8a9]        # 0x1400183d8
   140017b2f:	mov    QWORD PTR [rip+0x95c2],rax        # 0x1400210f8
   140017b36:	ret    
   140017b37:	int3   
   140017b38:	lea    rcx,[rip+0xb189]        # 0x140022cc8
   140017b3f:	jmp    0x1400010b0
   140017b44:	rex push rbx
   140017b46:	sub    rsp,0x30
   140017b4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017b53:	xor    edx,edx
   140017b55:	lea    rcx,[rsp+0x40]
   140017b5a:	call   0x1400076a4
   140017b5f:	nop
   140017b60:	jmp    0x140017b7c
   140017b62:	mov    rax,QWORD PTR [rbx]
   140017b65:	mov    QWORD PTR [rip+0xb124],rax        # 0x140022c90
   140017b6c:	mov    rcx,rbx
   140017b6f:	call   0x140007088
   140017b74:	mov    rcx,rbx
   140017b77:	call   0x14000872c
   140017b7c:	mov    rbx,QWORD PTR [rip+0xb10d]        # 0x140022c90
   140017b83:	test   rbx,rbx
   140017b86:	jne    0x140017b62
   140017b88:	lea    rcx,[rsp+0x40]
   140017b8d:	call   0x1400076d4
   140017b92:	add    rsp,0x30
   140017b96:	pop    rbx
   140017b97:	ret    
   140017b98:	lea    rcx,[rip+0xb1f1]        # 0x140022d90
   140017b9f:	jmp    0x140007668
   140017ba4:	lea    rcx,[rip+0xb475]        # 0x140023020
   140017bab:	jmp    0x140007668
   140017bb0:	sub    rsp,0x28
   140017bb4:	jmp    0x140017bd8
   140017bb6:	lea    rcx,[rip+0xb413]        # 0x140022fd0
   140017bbd:	mov    rcx,QWORD PTR [rcx+rax*8]
   140017bc1:	inc    rax
   140017bc4:	mov    QWORD PTR [rip+0x9605],rax        # 0x1400211d0
   140017bcb:	call   QWORD PTR [rip+0x4ef]        # 0x1400180c0
   140017bd1:	test   rax,rax
   140017bd4:	je     0x140017bd8
   140017bd6:	call   rax
   140017bd8:	mov    rax,QWORD PTR [rip+0x95f1]        # 0x1400211d0
   140017bdf:	cmp    rax,0xa
   140017be3:	jb     0x140017bb6
   140017be5:	add    rsp,0x28
   140017be9:	ret    
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	lea    rax,[rip+0x85d]        # 0x140018450
   140017bf3:	lea    rcx,[rip+0xb42e]        # 0x140023028
   140017bfa:	mov    QWORD PTR [rip+0xb427],rax        # 0x140023028
   140017c01:	jmp    0x140008178
