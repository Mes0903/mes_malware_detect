
f9ed0155b6015f11ff8036c67adecc85fc6ae1256420cc0564a15f452d124cc9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x6ee5]        # 0x407f00
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x6ee6]        # 0x407f10
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x6ee9]        # 0x407f20
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x6eac]        # 0x407ef0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x6d4f]        # 0x407da0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x6e81]        # 0x407ee0
  40105f:	mov    DWORD PTR [rip+0x9fa3],edx        # 0x40b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404440
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402180
  401081:	mov    rdx,QWORD PTR [rip+0x6db8]        # 0x407e40
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x6d9e]        # 0x407e30
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x6e04]        # 0x407ea0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x6d3b]        # 0x407de0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401d60
  4010af:	mov    rax,QWORD PTR [rip+0x6c9a]        # 0x407d50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404440
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xf39]        # 0x402060
  401127:	call   0x402050
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x6d65]        # 0x407ed0
  40116b:	lea    r8,[rip+0x9ea6]        # 0x40b018
  401172:	lea    rdx,[rip+0x9ea7]        # 0x40b020
  401179:	lea    rcx,[rip+0x9ea8]        # 0x40b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x9e78],eax        # 0x40b000
  401188:	lea    rax,[rip+0x9e71]        # 0x40b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x6cf5]        # 0x407e90
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404458
  4011a3:	mov    DWORD PTR [rip+0x9e67],eax        # 0x40b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x6d1a]        # 0x407ee0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x6c1b]        # 0x407e10
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xb346]        # 0x40c548
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x6bf7]        # 0x407e20
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x9dba],0x1        # 0x40b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x6b2c]        # 0x407d90
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402370
  40127d:	lea    rcx,[rip+0x168c]        # 0x402910
  401284:	call   QWORD PTR [rip+0xb2b6]        # 0x40c540
  40128a:	mov    rdx,QWORD PTR [rip+0x6b6f]        # 0x407e00
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402820
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x404480
  4012a5:	call   0x402160
  4012aa:	mov    rax,QWORD PTR [rip+0x6aef]        # 0x407da0
  4012b1:	mov    QWORD PTR [rip+0xaa20],rax        # 0x40bcd8
  4012b8:	mov    rax,QWORD PTR [rip+0x6b11]        # 0x407dd0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xa9b9],rax        # 0x40bcd0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0x9ceb]        # 0x40b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404360
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x9cc2]        # 0x40b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4042e8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404360
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404350
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x9c6a],rbp        # 0x40b020
  4013b6:	call   0x401d30
  4013bb:	mov    rax,QWORD PTR [rip+0x69fe]        # 0x407dc0
  4013c2:	mov    rdx,QWORD PTR [rip+0x9c4f]        # 0x40b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x9c59]        # 0x40b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x9c3c]        # 0x40b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x9c3d]        # 0x40b020
  4013e3:	call   0x404560
  4013e8:	mov    ecx,DWORD PTR [rip+0x9c1a]        # 0x40b008
  4013ee:	mov    DWORD PTR [rip+0x9c18],eax        # 0x40b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x9c02]        # 0x40b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404428
  40140b:	mov    eax,DWORD PTR [rip+0x9bfb]        # 0x40b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x69e9]        # 0x407e20
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404430
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x69fd]        # 0x407e60
  401463:	mov    rcx,QWORD PTR [rip+0x69e6]        # 0x407e50
  40146a:	call   0x404410
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xb057]        # 0x40c4f0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x69d9]        # 0x407e80
  4014a7:	mov    rcx,QWORD PTR [rip+0x69c2]        # 0x407e70
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404410
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4043c0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x6a05]        # 0x407ee0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401d70
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x69d5]        # 0x407ee0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401d70
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x20
  401535:	cmp    edx,0x1645
  40153b:	je     0x401562
  40153d:	cmp    edx,0x1647
  401543:	je     0x40155a
  401545:	test   edx,edx
  401547:	je     0x40155a
  401549:	mov    rdx,QWORD PTR [rsp+0x50]
  40154e:	lea    rcx,[rip+0x5ab7]        # 0x40700c
  401555:	call   0x404338
  40155a:	xor    eax,eax
  40155c:	add    rsp,0x20
  401560:	pop    rbx
  401561:	ret    
  401562:	mov    rcx,QWORD PTR [rsp+0x50]
  401567:	mov    edx,0x27
  40156c:	call   0x4042f8
  401571:	test   rax,rax
  401574:	je     0x401549
  401576:	lea    rbx,[rax+0x1]
  40157a:	mov    edx,0x27
  40157f:	mov    rcx,rbx
  401582:	call   0x4042f8
  401587:	test   rax,rax
  40158a:	je     0x401549
  40158c:	lea    rdx,[rip+0x5a6d]        # 0x407000
  401593:	lea    rcx,[rip+0x9aa6]        # 0x40b040
  40159a:	mov    r8,rbx
  40159d:	mov    BYTE PTR [rax],0x0
  4015a0:	call   0x404300
  4015a5:	xor    eax,eax
  4015a7:	add    rsp,0x20
  4015ab:	pop    rbx
  4015ac:	ret    
  4015ad:	nop    DWORD PTR [rax]
  4015b0:	push   r15
  4015b2:	push   r14
  4015b4:	mov    eax,0x3ed8
  4015b9:	push   r13
  4015bb:	push   r12
  4015bd:	push   rbp
  4015be:	push   rdi
  4015bf:	push   rsi
  4015c0:	push   rbx
  4015c1:	call   0x4030e0
  4015c6:	sub    rsp,rax
  4015c9:	xor    ebx,ebx
  4015cb:	mov    rbp,QWORD PTR [rip+0xafd6]        # 0x40c5a8
  4015d2:	mov    edi,0x1
  4015d7:	lea    rax,[rsp+0x44]
  4015dc:	mov    rsi,rcx
  4015df:	mov    r13d,0x1
  4015e5:	mov    rcx,rsi
  4015e8:	lea    r12,[rsp+0x50]
  4015ed:	lea    r15,[rsp+0x48]
  4015f2:	mov    QWORD PTR [rsp+0x30],rax
  4015f7:	lea    rax,[rsp+0x4c]
  4015fc:	mov    QWORD PTR [rsp+0x38],rax
  401601:	call   0x401a20
  401606:	cmp    eax,0x2
  401609:	je     0x401793
  40160f:	nop
  401610:	test   eax,eax
  401612:	je     0x401805
  401618:	mov    rcx,rsi
  40161b:	call   0x401a18
  401620:	cmp    eax,0x1
  401623:	jne    0x4017ef
  401629:	mov    edx,0x1
  40162e:	mov    rcx,rsi
  401631:	call   0x401a80
  401636:	cmp    eax,0x3e7f
  40163b:	ja     0x4017c2
  401641:	xor    r9d,r9d
  401644:	mov    QWORD PTR [rsp+0x20],r12
  401649:	mov    r8d,0x1
  40164f:	mov    edx,0x1
  401654:	mov    rcx,rsi
  401657:	call   0x401a88
  40165c:	test   eax,eax
  40165e:	je     0x401837
  401664:	mov    r8,QWORD PTR [rsp+0x30]
  401669:	mov    edx,0x1
  40166e:	mov    rcx,rsi
  401671:	call   0x401a30
  401676:	test   eax,eax
  401678:	je     0x4018a4
  40167e:	mov    QWORD PTR [rsp+0x20],r15
  401683:	mov    r9d,0xffffffff
  401689:	mov    r8d,0x8
  40168f:	mov    edx,0x2
  401694:	mov    rcx,rsi
  401697:	call   0x401a88
  40169c:	test   eax,eax
  40169e:	je     0x40186c
  4016a4:	mov    r8,QWORD PTR [rsp+0x38]
  4016a9:	mov    edx,0x2
  4016ae:	mov    rcx,rsi
  4016b1:	call   0x401a30
  4016b6:	test   eax,eax
  4016b8:	je     0x4018dc
  4016be:	call   rbp
  4016c0:	lea    rcx,[rip+0x9979]        # 0x40b040
  4016c7:	lea    rdx,[rax+0x30]
  4016cb:	call   0x404390
  4016d0:	jmp    0x401715
  4016d2:	cmp    DWORD PTR [rsp+0x44],0xffffffff
  4016d7:	je     0x4017a0
  4016dd:	cmp    edi,DWORD PTR [rsp+0x48]
  4016e1:	je     0x401700
  4016e3:	call   rbp
  4016e5:	lea    rcx,[rip+0x5a16]        # 0x407102
  4016ec:	lea    r9,[rax+0x30]
  4016f0:	mov    r8d,0x4
  4016f6:	mov    edx,0x1
  4016fb:	call   0x404370
  401700:	call   rbp
  401702:	lea    rdx,[rax+0x30]
  401706:	mov    rcx,r12
  401709:	call   0x404390
  40170e:	mov    edi,DWORD PTR [rsp+0x48]
  401712:	add    ebx,0x1
  401715:	mov    rcx,rsi
  401718:	call   0x401a38
  40171d:	cmp    eax,0xfffffffe
  401720:	mov    r14d,eax
  401723:	je     0x401761
  401725:	cmp    r14d,0xffffffff
  401729:	je     0x4016d2
  40172b:	call   rbp
  40172d:	lea    rdx,[rip+0x59d4]        # 0x407108
  401734:	lea    rcx,[rax+0x60]
  401738:	mov    r9d,r14d
  40173b:	mov    r8d,0xffffffff
  401741:	call   0x4043a0
  401746:	lea    rdx,[rip+0x58f5]        # 0x407042
  40174d:	lea    rcx,[rip+0x59ec]        # 0x407140
  401754:	mov    r8d,0x26d
  40175a:	call   0x404160
  40175f:	jmp    0x40170e
  401761:	call   rbp
  401763:	lea    rcx,[rip+0x5998]        # 0x407102
  40176a:	lea    r9,[rax+0x30]
  40176e:	mov    r8d,0x4
  401774:	mov    edx,0x1
  401779:	add    r13d,0x1
  40177d:	call   0x404370
  401782:	mov    rcx,rsi
  401785:	call   0x401a20
  40178a:	cmp    eax,0x2
  40178d:	jne    0x401610
  401793:	mov    eax,ebx
  401795:	jmp    0x4017f1
  401797:	nop    WORD PTR [rax+rax*1+0x0]
  4017a0:	call   rbp
  4017a2:	lea    rcx,[rip+0x5927]        # 0x4070d0
  4017a9:	lea    r9,[rax+0x60]
  4017ad:	mov    r8d,0x31
  4017b3:	mov    edx,0x1
  4017b8:	call   0x404370
  4017bd:	jmp    0x40170e
  4017c2:	mov    edx,0x1
  4017c7:	mov    rcx,rsi
  4017ca:	call   0x401a80
  4017cf:	cmp    eax,0x3e7f
  4017d4:	jbe    0x4017ef
  4017d6:	lea    rdx,[rip+0x5865]        # 0x407042
  4017dd:	lea    rcx,[rip+0x586c]        # 0x407050
  4017e4:	mov    r8d,0x242
  4017ea:	call   0x404160
  4017ef:	xor    eax,eax
  4017f1:	add    rsp,0x3ed8
  4017f8:	pop    rbx
  4017f9:	pop    rsi
  4017fa:	pop    rdi
  4017fb:	pop    rbp
  4017fc:	pop    r12
  4017fe:	pop    r13
  401800:	pop    r14
  401802:	pop    r15
  401804:	ret    
  401805:	mov    rbx,QWORD PTR [rip+0x9a4c]        # 0x40b258
  40180c:	call   QWORD PTR [rip+0xad96]        # 0x40c5a8
  401812:	lea    rdx,[rip+0x57ff]        # 0x407018
  401819:	lea    rcx,[rax+0x60]
  40181d:	mov    DWORD PTR [rsp+0x20],r13d
  401822:	mov    r9d,0x236
  401828:	mov    r8,rbx
  40182b:	call   0x4043a0
  401830:	mov    eax,0xffffffff
  401835:	jmp    0x4017f1
  401837:	mov    rbx,QWORD PTR [rip+0x9a1a]        # 0x40b258
  40183e:	call   QWORD PTR [rip+0xad64]        # 0x40c5a8
  401844:	lea    rdx,[rip+0x5835]        # 0x407080
  40184b:	lea    rcx,[rax+0x60]
  40184f:	mov    DWORD PTR [rsp+0x20],0x1
  401857:	mov    r9d,0x247
  40185d:	mov    r8,rbx
  401860:	call   0x4043a0
  401865:	mov    eax,0xffffffff
  40186a:	jmp    0x4017f1
  40186c:	mov    rbx,QWORD PTR [rip+0x99e5]        # 0x40b258
  401873:	call   QWORD PTR [rip+0xad2f]        # 0x40c5a8
  401879:	lea    rdx,[rip+0x5800]        # 0x407080
  401880:	lea    rcx,[rax+0x60]
  401884:	mov    DWORD PTR [rsp+0x20],0x2
  40188c:	mov    r9d,0x252
  401892:	mov    r8,rbx
  401895:	call   0x4043a0
  40189a:	mov    eax,0xffffffff
  40189f:	jmp    0x4017f1
  4018a4:	mov    rbx,QWORD PTR [rip+0x99ad]        # 0x40b258
  4018ab:	call   QWORD PTR [rip+0xacf7]        # 0x40c5a8
  4018b1:	lea    rdx,[rip+0x57f0]        # 0x4070a8
  4018b8:	lea    rcx,[rax+0x60]
  4018bc:	mov    DWORD PTR [rsp+0x20],0x1
  4018c4:	mov    r9d,0x24c
  4018ca:	mov    r8,rbx
  4018cd:	call   0x4043a0
  4018d2:	mov    eax,0xffffffff
  4018d7:	jmp    0x4017f1
  4018dc:	mov    rbx,QWORD PTR [rip+0x9975]        # 0x40b258
  4018e3:	call   QWORD PTR [rip+0xacbf]        # 0x40c5a8
  4018e9:	lea    rdx,[rip+0x57b8]        # 0x4070a8
  4018f0:	lea    rcx,[rax+0x60]
  4018f4:	mov    DWORD PTR [rsp+0x20],0x2
  4018fc:	mov    r9d,0x257
  401902:	mov    r8,rbx
  401905:	call   0x4043a0
  40190a:	mov    eax,0xffffffff
  40190f:	jmp    0x4017f1
  401914:	xchg   ax,ax
  401916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401920:	push   rbp
  401921:	push   rdi
  401922:	push   rsi
  401923:	push   rbx
  401924:	sub    rsp,0x48
  401928:	test   r8d,r8d
  40192b:	mov    esi,edx
  40192d:	jne    0x401980
  40192f:	mov    rsi,QWORD PTR [rip+0x9922]        # 0x40b258
  401936:	mov    rbx,QWORD PTR [rip+0xac6b]        # 0x40c5a8
  40193d:	call   rbx
  40193f:	lea    rdx,[rip+0x5829]        # 0x40716f
  401946:	lea    rcx,[rax+0x60]
  40194a:	mov    r8,rsi
  40194d:	call   0x4043a0
  401952:	call   rbx
  401954:	mov    r8,QWORD PTR [rsp+0x90]
  40195c:	lea    rcx,[rax+0x60]
  401960:	lea    rdx,[rip+0x5820]        # 0x407187
  401967:	call   0x4043a0
  40196c:	mov    eax,0x2
  401971:	add    rsp,0x48
  401975:	pop    rbx
  401976:	pop    rsi
  401977:	pop    rdi
  401978:	pop    rbp
  401979:	ret    
  40197a:	nop    WORD PTR [rax+rax*1+0x0]
  401980:	mov    DWORD PTR [rsp+0x3c],r8d
  401985:	mov    rbp,QWORD PTR [rip+0x98cc]        # 0x40b258
  40198c:	mov    rdi,QWORD PTR [rip+0xac15]        # 0x40c5a8
  401993:	call   rdi
  401995:	mov    r8d,DWORD PTR [rsp+0x3c]
  40199a:	lea    rcx,[rax+0x60]
  40199e:	lea    rdx,[rip+0x57af]        # 0x407154
  4019a5:	mov    DWORD PTR [rsp+0x20],esi
  4019a9:	mov    r9d,r8d
  4019ac:	mov    r8,rbp
  4019af:	call   0x4043a0
  4019b4:	call   rdi
  4019b6:	mov    r8,QWORD PTR [rsp+0x90]
  4019be:	lea    rcx,[rax+0x60]
  4019c2:	lea    rdx,[rip+0x57a1]        # 0x40716a
  4019c9:	call   0x4043a0
  4019ce:	mov    eax,0x2
  4019d3:	add    rsp,0x48
  4019d7:	pop    rbx
  4019d8:	pop    rsi
  4019d9:	pop    rdi
  4019da:	pop    rbp
  4019db:	ret    
  4019dc:	nop
  4019dd:	nop
  4019de:	nop
  4019df:	nop
  4019e0:	jmp    QWORD PTR [rip+0xaac2]        # 0x40c4a8
  4019e6:	nop
  4019e7:	nop
  4019e8:	jmp    QWORD PTR [rip+0xaab2]        # 0x40c4a0
  4019ee:	nop
  4019ef:	nop
  4019f0:	jmp    QWORD PTR [rip+0xaaa2]        # 0x40c498
  4019f6:	nop
  4019f7:	nop
  4019f8:	jmp    QWORD PTR [rip+0xaa92]        # 0x40c490
  4019fe:	nop
  4019ff:	nop
  401a00:	jmp    QWORD PTR [rip+0xaa82]        # 0x40c488
  401a06:	nop
  401a07:	nop
  401a08:	jmp    QWORD PTR [rip+0xaa72]        # 0x40c480
  401a0e:	nop
  401a0f:	nop
  401a10:	jmp    QWORD PTR [rip+0xaa62]        # 0x40c478
  401a16:	nop
  401a17:	nop
  401a18:	jmp    QWORD PTR [rip+0xaa52]        # 0x40c470
  401a1e:	nop
  401a1f:	nop
  401a20:	jmp    QWORD PTR [rip+0xaa42]        # 0x40c468
  401a26:	nop
  401a27:	nop
  401a28:	jmp    QWORD PTR [rip+0xaa32]        # 0x40c460
  401a2e:	nop
  401a2f:	nop
  401a30:	jmp    QWORD PTR [rip+0xaa22]        # 0x40c458
  401a36:	nop
  401a37:	nop
  401a38:	jmp    QWORD PTR [rip+0xaa12]        # 0x40c450
  401a3e:	nop
  401a3f:	nop
  401a40:	jmp    QWORD PTR [rip+0xaa02]        # 0x40c448
  401a46:	nop
  401a47:	nop
  401a48:	jmp    QWORD PTR [rip+0xa9f2]        # 0x40c440
  401a4e:	nop
  401a4f:	nop
  401a50:	jmp    QWORD PTR [rip+0xa9e2]        # 0x40c438
  401a56:	nop
  401a57:	nop
  401a58:	jmp    QWORD PTR [rip+0xa9d2]        # 0x40c430
  401a5e:	nop
  401a5f:	nop
  401a60:	jmp    QWORD PTR [rip+0xa9c2]        # 0x40c428
  401a66:	nop
  401a67:	nop
  401a68:	jmp    QWORD PTR [rip+0xa9b2]        # 0x40c420
  401a6e:	nop
  401a6f:	nop
  401a70:	jmp    QWORD PTR [rip+0xa9a2]        # 0x40c418
  401a76:	nop
  401a77:	nop
  401a78:	jmp    QWORD PTR [rip+0xa992]        # 0x40c410
  401a7e:	nop
  401a7f:	nop
  401a80:	jmp    QWORD PTR [rip+0xa982]        # 0x40c408
  401a86:	nop
  401a87:	nop
  401a88:	jmp    QWORD PTR [rip+0xa972]        # 0x40c400
  401a8e:	nop
  401a8f:	nop
  401a90:	jmp    QWORD PTR [rip+0xace2]        # 0x40c778
  401a96:	nop
  401a97:	nop
  401a98:	nop    DWORD PTR [rax+rax*1+0x0]
  401aa0:	push   rdi
  401aa1:	push   rsi
  401aa2:	push   rbx
  401aa3:	sub    rsp,0x120
  401aaa:	lea    rdi,[rip+0x5dcf]        # 0x407880
  401ab1:	mov    rbx,rcx
  401ab4:	mov    ecx,0x2
  401ab9:	mov    rsi,rbx
  401abc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401abe:	je     0x401b01
  401ac0:	lea    rsi,[rsp+0x20]
  401ac5:	mov    rcx,rbx
  401ac8:	mov    rdi,rsi
  401acb:	call   QWORD PTR [rip+0xab47]        # 0x40c618
  401ad1:	mov    ecx,0x20
  401ad6:	mov    r8,rax
  401ad9:	xor    eax,eax
  401adb:	rep stos QWORD PTR es:[rdi],rax
  401ade:	mov    rax,r8
  401ae1:	cmp    BYTE PTR [rbx],0x0
  401ae4:	je     0x401af6
  401ae6:	add    rbx,0x1
  401aea:	mov    BYTE PTR [rbx-0x1],0x2a
  401aee:	cmp    BYTE PTR [rbx],0x0
  401af1:	jne    0x401ae6
  401af3:	mov    rax,r8
  401af6:	add    rsp,0x120
  401afd:	pop    rbx
  401afe:	pop    rsi
  401aff:	pop    rdi
  401b00:	ret    
  401b01:	lea    rsi,[rsp+0x20]
  401b06:	call   QWORD PTR [rip+0xaa9c]        # 0x40c5a8
  401b0c:	mov    edx,0x100
  401b11:	mov    r8,rax
  401b14:	mov    rcx,rsi
  401b17:	call   0x4043a8
  401b1c:	test   rax,rax
  401b1f:	je     0x401af6
  401b21:	mov    edx,0xa
  401b26:	mov    rcx,rsi
  401b29:	call   0x4042f8
  401b2e:	test   rax,rax
  401b31:	je     0x401b40
  401b33:	mov    BYTE PTR [rax],0x0
  401b36:	mov    rbx,rsi
  401b39:	jmp    0x401ac5
  401b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	mov    rbx,rsi
  401b43:	jmp    0x401ac5
  401b45:	nop
  401b46:	nop
  401b47:	nop
  401b48:	nop
  401b49:	nop
  401b4a:	nop
  401b4b:	nop
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	push   rbp
  401b51:	push   rdi
  401b52:	push   rsi
  401b53:	push   rbx
  401b54:	sub    rsp,0x28
  401b58:	mov    rsi,r8
  401b5b:	mov    rbp,rcx
  401b5e:	mov    rcx,rdx
  401b61:	mov    rdi,rdx
  401b64:	call   0x4042e8
  401b69:	test   rsi,rsi
  401b6c:	mov    rbx,rax
  401b6f:	je     0x401b89
  401b71:	lea    r8,[rsi-0x1]
  401b75:	cmp    rax,r8
  401b78:	ja     0x401b95
  401b7a:	lea    r8,[rax+0x1]
  401b7e:	mov    rdx,rdi
  401b81:	mov    rcx,rbp
  401b84:	call   0x404350
  401b89:	mov    rax,rbx
  401b8c:	add    rsp,0x28
  401b90:	pop    rbx
  401b91:	pop    rsi
  401b92:	pop    rdi
  401b93:	pop    rbp
  401b94:	ret    
  401b95:	mov    rdx,rdi
  401b98:	mov    rcx,rbp
  401b9b:	call   0x404350
  401ba0:	mov    rax,rbx
  401ba3:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  401ba8:	add    rsp,0x28
  401bac:	pop    rbx
  401bad:	pop    rsi
  401bae:	pop    rdi
  401baf:	pop    rbp
  401bb0:	ret    
  401bb1:	nop
  401bb2:	nop
  401bb3:	nop
  401bb4:	nop
  401bb5:	nop
  401bb6:	nop
  401bb7:	nop
  401bb8:	nop
  401bb9:	nop
  401bba:	nop
  401bbb:	nop
  401bbc:	nop
  401bbd:	nop
  401bbe:	nop
  401bbf:	nop
  401bc0:	push   rbx
  401bc1:	sub    rsp,0x30
  401bc5:	mov    rbx,rcx
  401bc8:	mov    rcx,QWORD PTR [rip+0xa111]        # 0x40bce0
  401bcf:	call   0x402170
  401bd4:	cmp    rax,0xffffffffffffffff
  401bd8:	mov    QWORD PTR [rsp+0x20],rax
  401bdd:	je     0x401c55
  401bdf:	mov    ecx,0x8
  401be4:	call   0x404408
  401be9:	mov    rcx,QWORD PTR [rip+0xa0f0]        # 0x40bce0
  401bf0:	call   0x402170
  401bf5:	mov    rcx,QWORD PTR [rip+0xa0ec]        # 0x40bce8
  401bfc:	mov    QWORD PTR [rsp+0x20],rax
  401c01:	call   0x402170
  401c06:	lea    rdx,[rsp+0x20]
  401c0b:	lea    r8,[rsp+0x28]
  401c10:	mov    rcx,rbx
  401c13:	mov    QWORD PTR [rsp+0x28],rax
  401c18:	call   0x404460
  401c1d:	mov    rcx,QWORD PTR [rsp+0x20]
  401c22:	mov    rbx,rax
  401c25:	call   0x402180
  401c2a:	mov    rcx,QWORD PTR [rsp+0x28]
  401c2f:	mov    QWORD PTR [rip+0xa0aa],rax        # 0x40bce0
  401c36:	call   0x402180
  401c3b:	mov    ecx,0x8
  401c40:	mov    QWORD PTR [rip+0xa0a1],rax        # 0x40bce8
  401c47:	call   0x4043e0
  401c4c:	mov    rax,rbx
  401c4f:	add    rsp,0x30
  401c53:	pop    rbx
  401c54:	ret    
  401c55:	mov    rax,QWORD PTR [rip+0x6194]        # 0x407df0
  401c5c:	mov    rcx,rbx
  401c5f:	call   QWORD PTR [rax]
  401c61:	add    rsp,0x30
  401c65:	pop    rbx
  401c66:	ret    
  401c67:	nop    WORD PTR [rax+rax*1+0x0]
  401c70:	sub    rsp,0x28
  401c74:	call   0x401bc0
  401c79:	test   rax,rax
  401c7c:	sete   al
  401c7f:	movzx  eax,al
  401c82:	neg    eax
  401c84:	add    rsp,0x28
  401c88:	ret    
  401c89:	nop
  401c8a:	nop
  401c8b:	nop
  401c8c:	nop
  401c8d:	nop
  401c8e:	nop
  401c8f:	nop
  401c90:	sub    rsp,0x28
  401c94:	mov    rax,QWORD PTR [rip+0x4465]        # 0x406100
  401c9b:	mov    rax,QWORD PTR [rax]
  401c9e:	test   rax,rax
  401ca1:	je     0x401cc0
  401ca3:	call   rax
  401ca5:	mov    rax,QWORD PTR [rip+0x4454]        # 0x406100
  401cac:	lea    rdx,[rax+0x8]
  401cb0:	mov    rax,QWORD PTR [rax+0x8]
  401cb4:	mov    QWORD PTR [rip+0x4445],rdx        # 0x406100
  401cbb:	test   rax,rax
  401cbe:	jne    0x401ca3
  401cc0:	add    rsp,0x28
  401cc4:	ret    
  401cc5:	nop
  401cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cd0:	push   rsi
  401cd1:	push   rbx
  401cd2:	sub    rsp,0x28
  401cd6:	mov    rsi,QWORD PTR [rip+0x6083]        # 0x407d60
  401cdd:	mov    rax,QWORD PTR [rsi]
  401ce0:	cmp    eax,0xffffffff
  401ce3:	mov    ebx,eax
  401ce5:	je     0x401d10
  401ce7:	test   ebx,ebx
  401ce9:	je     0x401cfa
  401ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cf0:	mov    eax,ebx
  401cf2:	call   QWORD PTR [rsi+rax*8]
  401cf5:	sub    ebx,0x1
  401cf8:	jne    0x401cf0
  401cfa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401c90
  401d01:	add    rsp,0x28
  401d05:	pop    rbx
  401d06:	pop    rsi
  401d07:	jmp    0x401c70
  401d0c:	nop    DWORD PTR [rax+0x0]
  401d10:	xor    ebx,ebx
  401d12:	jmp    0x401d16
  401d14:	mov    ebx,eax
  401d16:	lea    edx,[rbx+0x1]
  401d19:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401d1e:	mov    rax,rdx
  401d21:	jne    0x401d14
  401d23:	jmp    0x401ce7
  401d25:	nop
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	mov    eax,DWORD PTR [rip+0x95ca]        # 0x40b300
  401d36:	test   eax,eax
  401d38:	je     0x401d40
  401d3a:	repz ret 
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	mov    DWORD PTR [rip+0x95b6],0x1        # 0x40b300
  401d4a:	jmp    0x401cd0
  401d4c:	nop
  401d4d:	nop
  401d4e:	nop
  401d4f:	nop
  401d50:	mov    rax,QWORD PTR [rip+0xa859]        # 0x40c5b0
  401d57:	rex.W jmp rax
  401d5a:	nop
  401d5b:	nop
  401d5c:	nop
  401d5d:	nop
  401d5e:	nop
  401d5f:	nop
  401d60:	xor    eax,eax
  401d62:	ret    
  401d63:	nop
  401d64:	nop
  401d65:	nop
  401d66:	nop
  401d67:	nop
  401d68:	nop
  401d69:	nop
  401d6a:	nop
  401d6b:	nop
  401d6c:	nop
  401d6d:	nop
  401d6e:	nop
  401d6f:	nop
  401d70:	push   r12
  401d72:	push   rbp
  401d73:	push   rdi
  401d74:	push   rsi
  401d75:	push   rbx
  401d76:	sub    rsp,0x40
  401d7a:	mov    rbx,QWORD PTR [rip+0x440f]        # 0x406190
  401d81:	movabs rax,0x2b992ddfa232
  401d8b:	mov    QWORD PTR [rsp+0x20],0x0
  401d94:	cmp    rbx,rax
  401d97:	je     0x401db0
  401d99:	not    rbx
  401d9c:	mov    QWORD PTR [rip+0x43fd],rbx        # 0x4061a0
  401da3:	add    rsp,0x40
  401da7:	pop    rbx
  401da8:	pop    rsi
  401da9:	pop    rdi
  401daa:	pop    rbp
  401dab:	pop    r12
  401dad:	ret    
  401dae:	xchg   ax,ax
  401db0:	lea    rcx,[rsp+0x20]
  401db5:	call   QWORD PTR [rip+0xa73d]        # 0x40c4f8
  401dbb:	mov    r12,QWORD PTR [rsp+0x20]
  401dc0:	call   QWORD PTR [rip+0xa70a]        # 0x40c4d0
  401dc6:	mov    ebp,eax
  401dc8:	call   QWORD PTR [rip+0xa70a]        # 0x40c4d8
  401dce:	mov    edi,eax
  401dd0:	call   QWORD PTR [rip+0xa72a]        # 0x40c500
  401dd6:	lea    rcx,[rsp+0x30]
  401ddb:	mov    esi,eax
  401ddd:	call   QWORD PTR [rip+0xa735]        # 0x40c518
  401de3:	xor    r12,QWORD PTR [rsp+0x30]
  401de8:	mov    edx,edi
  401dea:	movabs rax,0xffffffffffff
  401df4:	xor    rbp,r12
  401df7:	mov    rdi,rbp
  401dfa:	xor    rdi,rdx
  401dfd:	mov    edx,esi
  401dff:	xor    rdi,rdx
  401e02:	mov    rsi,rdi
  401e05:	and    rsi,rax
  401e08:	cmp    rsi,rbx
  401e0b:	je     0x401e30
  401e0d:	mov    rax,rsi
  401e10:	not    rax
  401e13:	mov    QWORD PTR [rip+0x4376],rsi        # 0x406190
  401e1a:	mov    QWORD PTR [rip+0x437f],rax        # 0x4061a0
  401e21:	add    rsp,0x40
  401e25:	pop    rbx
  401e26:	pop    rsi
  401e27:	pop    rdi
  401e28:	pop    rbp
  401e29:	pop    r12
  401e2b:	ret    
  401e2c:	nop    DWORD PTR [rax+0x0]
  401e30:	movabs rax,0xffffd466d2205dcc
  401e3a:	movabs rsi,0x2b992ddfa233
  401e44:	jmp    0x401e13
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	push   rbp
  401e51:	push   rsi
  401e52:	push   rbx
  401e53:	mov    rbp,rsp
  401e56:	sub    rsp,0x70
  401e5a:	mov    rsi,rcx
  401e5d:	lea    rcx,[rip+0x94dc]        # 0x40b340
  401e64:	call   QWORD PTR [rip+0xa6be]        # 0x40c528
  401e6a:	mov    rbx,QWORD PTR [rip+0x95c7]        # 0x40b438
  401e71:	xor    r8d,r8d
  401e74:	lea    rdx,[rbp-0x28]
  401e78:	mov    rcx,rbx
  401e7b:	call   QWORD PTR [rip+0xa6af]        # 0x40c530
  401e81:	test   rax,rax
  401e84:	mov    r9,rax
  401e87:	je     0x401f30
  401e8d:	lea    rax,[rbp-0x20]
  401e91:	mov    QWORD PTR [rsp+0x38],0x0
  401e9a:	mov    r8,rbx
  401e9d:	mov    rdx,QWORD PTR [rbp-0x28]
  401ea1:	xor    ecx,ecx
  401ea3:	mov    QWORD PTR [rsp+0x30],rax
  401ea8:	lea    rax,[rbp-0x18]
  401eac:	mov    QWORD PTR [rsp+0x28],rax
  401eb1:	lea    rax,[rip+0x9488]        # 0x40b340
  401eb8:	mov    QWORD PTR [rsp+0x20],rax
  401ebd:	call   QWORD PTR [rip+0xa675]        # 0x40c538
  401ec3:	mov    rax,QWORD PTR [rip+0x956e]        # 0x40b438
  401eca:	xor    ecx,ecx
  401ecc:	mov    QWORD PTR [rip+0x94ed],rsi        # 0x40b3c0
  401ed3:	mov    DWORD PTR [rip+0x9963],0xc0000409        # 0x40b840
  401edd:	mov    DWORD PTR [rip+0x995d],0x1        # 0x40b844
  401ee7:	mov    QWORD PTR [rip+0x9962],rax        # 0x40b850
  401eee:	mov    rax,QWORD PTR [rip+0x429b]        # 0x406190
  401ef5:	mov    QWORD PTR [rbp-0x10],rax
  401ef9:	mov    rax,QWORD PTR [rip+0x42a0]        # 0x4061a0
  401f00:	mov    QWORD PTR [rbp-0x8],rax
  401f04:	call   QWORD PTR [rip+0xa636]        # 0x40c540
  401f0a:	lea    rcx,[rip+0x597f]        # 0x407890
  401f11:	call   QWORD PTR [rip+0xa649]        # 0x40c560
  401f17:	call   QWORD PTR [rip+0xa5ab]        # 0x40c4c8
  401f1d:	mov    edx,0xc0000409
  401f22:	mov    rcx,rax
  401f25:	call   QWORD PTR [rip+0xa625]        # 0x40c550
  401f2b:	call   0x4043d0
  401f30:	mov    rax,QWORD PTR [rbp+0x18]
  401f34:	mov    QWORD PTR [rip+0x94fd],rax        # 0x40b438
  401f3b:	lea    rax,[rbp+0x8]
  401f3f:	mov    QWORD PTR [rip+0x9492],rax        # 0x40b3d8
  401f46:	jmp    0x401ec3
  401f4b:	nop
  401f4c:	nop
  401f4d:	nop
  401f4e:	nop
  401f4f:	nop
  401f50:	sub    rsp,0x28
  401f54:	test   edx,edx
  401f56:	je     0x401f70
  401f58:	cmp    edx,0x3
  401f5b:	je     0x401f70
  401f5d:	mov    eax,0x1
  401f62:	add    rsp,0x28
  401f66:	ret    
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	call   0x402c60
  401f75:	mov    eax,0x1
  401f7a:	add    rsp,0x28
  401f7e:	ret    
  401f7f:	nop
  401f80:	push   rsi
  401f81:	push   rbx
  401f82:	sub    rsp,0x28
  401f86:	mov    rax,QWORD PTR [rip+0x5db3]        # 0x407d40
  401f8d:	cmp    DWORD PTR [rax],0x2
  401f90:	je     0x401f98
  401f92:	mov    DWORD PTR [rax],0x2
  401f98:	cmp    edx,0x2
  401f9b:	je     0x401fb0
  401f9d:	cmp    edx,0x1
  401fa0:	je     0x401fe2
  401fa2:	mov    eax,0x1
  401fa7:	add    rsp,0x28
  401fab:	pop    rbx
  401fac:	pop    rsi
  401fad:	ret    
  401fae:	xchg   ax,ax
  401fb0:	lea    rbx,[rip+0xb0a9]        # 0x40d060
  401fb7:	lea    rsi,[rip+0xb0a2]        # 0x40d060
  401fbe:	cmp    rbx,rsi
  401fc1:	je     0x401fa2
  401fc3:	mov    rax,QWORD PTR [rbx]
  401fc6:	test   rax,rax
  401fc9:	je     0x401fcd
  401fcb:	call   rax
  401fcd:	add    rbx,0x8
  401fd1:	cmp    rbx,rsi
  401fd4:	jne    0x401fc3
  401fd6:	mov    eax,0x1
  401fdb:	add    rsp,0x28
  401fdf:	pop    rbx
  401fe0:	pop    rsi
  401fe1:	ret    
  401fe2:	call   0x402c60
  401fe7:	jmp    0x401fa2
  401fe9:	nop    DWORD PTR [rax+0x0]
  401ff0:	xor    eax,eax
  401ff2:	ret    
  401ff3:	nop
  401ff4:	nop
  401ff5:	nop
  401ff6:	nop
  401ff7:	nop
  401ff8:	nop
  401ff9:	nop
  401ffa:	nop
  401ffb:	nop
  401ffc:	nop
  401ffd:	nop
  401ffe:	nop
  401fff:	nop
  402000:	sub    rsp,0x58
  402004:	mov    rax,QWORD PTR [rip+0x9915]        # 0x40b920
  40200b:	test   rax,rax
  40200e:	je     0x40203c
  402010:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402019:	mov    DWORD PTR [rsp+0x20],ecx
  40201d:	lea    rcx,[rsp+0x20]
  402022:	mov    QWORD PTR [rsp+0x28],rdx
  402027:	movsd  QWORD PTR [rsp+0x30],xmm2
  40202d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402033:	movsd  QWORD PTR [rsp+0x40],xmm0
  402039:	call   rax
  40203b:	nop
  40203c:	add    rsp,0x58
  402040:	ret    
  402041:	nop    DWORD PTR [rax+rax*1+0x0]
  402046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402050:	mov    QWORD PTR [rip+0x98c9],rcx        # 0x40b920
  402057:	jmp    0x404438
  40205c:	nop    DWORD PTR [rax+0x0]
  402060:	push   rsi
  402061:	push   rbx
  402062:	sub    rsp,0x78
  402066:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40206b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402070:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402076:	cmp    DWORD PTR [rcx],0x6
  402079:	ja     0x402150
  40207f:	mov    edx,DWORD PTR [rcx]
  402081:	lea    rax,[rip+0x594c]        # 0x4079d4
  402088:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40208c:	add    rax,rdx
  40208f:	jmp    rax
  402091:	lea    rbx,[rip+0x5818]        # 0x4078b0
  402098:	nop    DWORD PTR [rax+rax*1+0x0]
  4020a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4020a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4020aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4020af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4020b4:	call   0x404450
  4020b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4020c0:	lea    rcx,[rax+0x60]
  4020c4:	lea    rdx,[rip+0x58dd]        # 0x4079a8
  4020cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4020d1:	mov    r9,rsi
  4020d4:	mov    r8,rbx
  4020d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4020dd:	call   0x4043a0
  4020e2:	nop
  4020e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4020e8:	xor    eax,eax
  4020ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4020ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4020f5:	add    rsp,0x78
  4020f9:	pop    rbx
  4020fa:	pop    rsi
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	lea    rbx,[rip+0x57c8]        # 0x4078cf
  402107:	jmp    0x4020a0
  402109:	nop    DWORD PTR [rax+0x0]
  402110:	lea    rbx,[rip+0x57d9]        # 0x4078f0
  402117:	jmp    0x4020a0
  402119:	nop    DWORD PTR [rax+0x0]
  402120:	lea    rbx,[rip+0x5839]        # 0x407960
  402127:	jmp    0x4020a0
  40212c:	nop    DWORD PTR [rax+0x0]
  402130:	lea    rbx,[rip+0x5801]        # 0x407938
  402137:	jmp    0x4020a0
  40213c:	nop    DWORD PTR [rax+0x0]
  402140:	lea    rbx,[rip+0x57c9]        # 0x407910
  402147:	jmp    0x4020a0
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	lea    rbx,[rip+0x583f]        # 0x407996
  402157:	jmp    0x4020a0
  40215c:	nop
  40215d:	nop
  40215e:	nop
  40215f:	nop
  402160:	fninit 
  402162:	ret    
  402163:	nop
  402164:	nop
  402165:	nop
  402166:	nop
  402167:	nop
  402168:	nop
  402169:	nop
  40216a:	nop
  40216b:	nop
  40216c:	nop
  40216d:	nop
  40216e:	nop
  40216f:	nop
  402170:	mov    rax,rcx
  402173:	ret    
  402174:	xchg   ax,ax
  402176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402180:	mov    rax,rcx
  402183:	ret    
  402184:	nop
  402185:	nop
  402186:	nop
  402187:	nop
  402188:	nop
  402189:	nop
  40218a:	nop
  40218b:	nop
  40218c:	nop
  40218d:	nop
  40218e:	nop
  40218f:	nop
  402190:	push   rsi
  402191:	push   rbx
  402192:	sub    rsp,0x38
  402196:	lea    rax,[rsp+0x58]
  40219b:	mov    rbx,rcx
  40219e:	mov    QWORD PTR [rsp+0x58],rdx
  4021a3:	mov    QWORD PTR [rsp+0x60],r8
  4021a8:	mov    QWORD PTR [rsp+0x68],r9
  4021ad:	mov    QWORD PTR [rsp+0x28],rax
  4021b2:	call   0x404450
  4021b7:	lea    rcx,[rip+0x5832]        # 0x4079f0
  4021be:	lea    r9,[rax+0x60]
  4021c2:	mov    r8d,0x1b
  4021c8:	mov    edx,0x1
  4021cd:	call   0x404370
  4021d2:	mov    rsi,QWORD PTR [rsp+0x28]
  4021d7:	call   0x404450
  4021dc:	lea    rcx,[rax+0x60]
  4021e0:	mov    rdx,rbx
  4021e3:	mov    r8,rsi
  4021e6:	call   0x4042c8
  4021eb:	call   0x4043d0
  4021f0:	nop
  4021f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	push   r13
  402202:	push   r12
  402204:	push   rbp
  402205:	push   rdi
  402206:	push   rsi
  402207:	push   rbx
  402208:	sub    rsp,0x58
  40220c:	movsxd rbp,DWORD PTR [rip+0x9731]        # 0x40b944
  402213:	mov    rbx,rcx
  402216:	mov    rsi,rdx
  402219:	mov    rdi,r8
  40221c:	test   ebp,ebp
  40221e:	jle    0x40231a
  402224:	mov    rax,QWORD PTR [rip+0x971d]        # 0x40b948
  40222b:	xor    r9d,r9d
  40222e:	add    rax,0x8
  402232:	mov    r10,QWORD PTR [rax]
  402235:	cmp    rbx,r10
  402238:	jb     0x40224e
  40223a:	mov    rdx,QWORD PTR [rax+0x8]
  40223e:	mov    r11d,DWORD PTR [rdx+0x8]
  402242:	add    r10,r11
  402245:	cmp    rbx,r10
  402248:	jb     0x402300
  40224e:	add    r9d,0x1
  402252:	add    rax,0x18
  402256:	cmp    r9d,ebp
  402259:	jne    0x402232
  40225b:	mov    rcx,rbx
  40225e:	call   0x402e70
  402263:	test   rax,rax
  402266:	mov    r12,rax
  402269:	je     0x402352
  40226f:	lea    rbp,[rbp+rbp*2+0x0]
  402274:	shl    rbp,0x3
  402278:	mov    r13,rbp
  40227b:	add    r13,QWORD PTR [rip+0x96c6]        # 0x40b948
  402282:	mov    QWORD PTR [r13+0x10],rax
  402286:	mov    DWORD PTR [r13+0x0],0x0
  40228e:	call   0x402f90
  402293:	mov    edx,DWORD PTR [r12+0xc]
  402298:	mov    r8d,0x30
  40229e:	add    rax,rdx
  4022a1:	lea    rdx,[rsp+0x20]
  4022a6:	mov    QWORD PTR [r13+0x8],rax
  4022aa:	mov    rax,QWORD PTR [rip+0x9697]        # 0x40b948
  4022b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4022b6:	call   QWORD PTR [rip+0xa2b4]        # 0x40c570
  4022bc:	test   rax,rax
  4022bf:	je     0x402335
  4022c1:	mov    eax,DWORD PTR [rsp+0x44]
  4022c5:	lea    edx,[rax-0x4]
  4022c8:	and    edx,0xfffffffb
  4022cb:	je     0x4022f9
  4022cd:	sub    eax,0x40
  4022d0:	and    eax,0xffffffbf
  4022d3:	je     0x4022f9
  4022d5:	mov    r9,rbp
  4022d8:	add    r9,QWORD PTR [rip+0x9669]        # 0x40b948
  4022df:	mov    r8d,0x40
  4022e5:	mov    rdx,QWORD PTR [rsp+0x38]
  4022ea:	mov    rcx,QWORD PTR [rsp+0x20]
  4022ef:	call   QWORD PTR [rip+0xa273]        # 0x40c568
  4022f5:	test   eax,eax
  4022f7:	je     0x402321
  4022f9:	add    DWORD PTR [rip+0x9644],0x1        # 0x40b944
  402300:	mov    r8,rdi
  402303:	mov    rdx,rsi
  402306:	mov    rcx,rbx
  402309:	add    rsp,0x58
  40230d:	pop    rbx
  40230e:	pop    rsi
  40230f:	pop    rdi
  402310:	pop    rbp
  402311:	pop    r12
  402313:	pop    r13
  402315:	jmp    0x404350
  40231a:	xor    ebp,ebp
  40231c:	jmp    0x40225b
  402321:	call   QWORD PTR [rip+0xa1b9]        # 0x40c4e0
  402327:	lea    rcx,[rip+0x573a]        # 0x407a68
  40232e:	mov    edx,eax
  402330:	call   0x402190
  402335:	mov    rax,QWORD PTR [rip+0x960c]        # 0x40b948
  40233c:	mov    edx,DWORD PTR [r12+0x8]
  402341:	lea    rcx,[rip+0x56e8]        # 0x407a30
  402348:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40234d:	call   0x402190
  402352:	lea    rcx,[rip+0x56b7]        # 0x407a10
  402359:	mov    rdx,rbx
  40235c:	call   0x402190
  402361:	nop
  402362:	nop    DWORD PTR [rax+0x0]
  402366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402370:	push   rbp
  402371:	push   r14
  402373:	push   r13
  402375:	push   r12
  402377:	push   rdi
  402378:	push   rsi
  402379:	push   rbx
  40237a:	mov    rbp,rsp
  40237d:	sub    rsp,0x60
  402381:	mov    ebx,DWORD PTR [rip+0x95b9]        # 0x40b940
  402387:	test   ebx,ebx
  402389:	je     0x4023a0
  40238b:	mov    rsp,rbp
  40238e:	pop    rbx
  40238f:	pop    rsi
  402390:	pop    rdi
  402391:	pop    r12
  402393:	pop    r13
  402395:	pop    r14
  402397:	pop    rbp
  402398:	ret    
  402399:	nop    DWORD PTR [rax+0x0]
  4023a0:	mov    DWORD PTR [rip+0x9596],0x1        # 0x40b940
  4023aa:	call   0x402ec0
  4023af:	cdqe   
  4023b1:	lea    rax,[rax+rax*2]
  4023b5:	lea    rax,[rax*8+0x1e]
  4023bd:	and    rax,0xfffffffffffffff0
  4023c1:	call   0x4030e0
  4023c6:	mov    rsi,QWORD PTR [rip+0x59a3]        # 0x407d70
  4023cd:	mov    rbx,QWORD PTR [rip+0x59ac]        # 0x407d80
  4023d4:	sub    rsp,rax
  4023d7:	mov    DWORD PTR [rip+0x9563],0x0        # 0x40b944
  4023e1:	lea    rax,[rsp+0x20]
  4023e6:	mov    QWORD PTR [rip+0x955b],rax        # 0x40b948
  4023ed:	mov    rax,rsi
  4023f0:	sub    rax,rbx
  4023f3:	cmp    rax,0x7
  4023f7:	jle    0x40238b
  4023f9:	cmp    rax,0xb
  4023fd:	jle    0x402425
  4023ff:	mov    r11d,DWORD PTR [rbx]
  402402:	test   r11d,r11d
  402405:	jne    0x402550
  40240b:	mov    r10d,DWORD PTR [rbx+0x4]
  40240f:	test   r10d,r10d
  402412:	jne    0x402550
  402418:	mov    r9d,DWORD PTR [rbx+0x8]
  40241c:	test   r9d,r9d
  40241f:	jne    0x40243c
  402421:	add    rbx,0xc
  402425:	mov    r8d,DWORD PTR [rbx]
  402428:	test   r8d,r8d
  40242b:	jne    0x402550
  402431:	mov    ecx,DWORD PTR [rbx+0x4]
  402434:	test   ecx,ecx
  402436:	jne    0x402550
  40243c:	mov    edx,DWORD PTR [rbx+0x8]
  40243f:	cmp    edx,0x1
  402442:	jne    0x40265c
  402448:	add    rbx,0xc
  40244c:	cmp    rbx,rsi
  40244f:	jae    0x40238b
  402455:	mov    r12,QWORD PTR [rip+0x5944]        # 0x407da0
  40245c:	lea    r13,[rbp-0x30]
  402460:	movabs r14,0xffffffff00000000
  40246a:	mov    ecx,DWORD PTR [rbx+0x4]
  40246d:	mov    eax,DWORD PTR [rbx]
  40246f:	movzx  edx,BYTE PTR [rbx+0x8]
  402473:	add    rax,r12
  402476:	add    rcx,r12
  402479:	cmp    edx,0x10
  40247c:	mov    r8,QWORD PTR [rax]
  40247f:	je     0x4025c6
  402485:	jbe    0x40258d
  40248b:	cmp    edx,0x20
  40248e:	je     0x40260f
  402494:	cmp    edx,0x40
  402497:	jne    0x4025fb
  40249d:	sub    r8,rax
  4024a0:	mov    rdx,r13
  4024a3:	mov    rdi,r13
  4024a6:	mov    rax,r8
  4024a9:	add    rax,QWORD PTR [rcx]
  4024ac:	mov    r8d,0x8
  4024b2:	mov    QWORD PTR [rbp-0x30],rax
  4024b6:	call   0x402200
  4024bb:	add    rbx,0xc
  4024bf:	cmp    rbx,rsi
  4024c2:	jb     0x40246a
  4024c4:	mov    eax,DWORD PTR [rip+0x947a]        # 0x40b944
  4024ca:	xor    ebx,ebx
  4024cc:	xor    esi,esi
  4024ce:	test   eax,eax
  4024d0:	jle    0x40238b
  4024d6:	mov    r14,QWORD PTR [rip+0xa093]        # 0x40c570
  4024dd:	lea    r13,[rbp-0x34]
  4024e1:	mov    r12,QWORD PTR [rip+0xa080]        # 0x40c568
  4024e8:	jmp    0x402503
  4024ea:	nop    WORD PTR [rax+rax*1+0x0]
  4024f0:	add    esi,0x1
  4024f3:	add    rbx,0x18
  4024f7:	cmp    esi,DWORD PTR [rip+0x9447]        # 0x40b944
  4024fd:	jge    0x40238b
  402503:	mov    rax,rbx
  402506:	add    rax,QWORD PTR [rip+0x943b]        # 0x40b948
  40250d:	mov    edx,DWORD PTR [rax]
  40250f:	test   edx,edx
  402511:	je     0x4024f0
  402513:	mov    rcx,QWORD PTR [rax+0x8]
  402517:	mov    r8d,0x30
  40251d:	mov    rdx,rdi
  402520:	call   r14
  402523:	test   rax,rax
  402526:	je     0x40263e
  40252c:	mov    rax,QWORD PTR [rip+0x9415]        # 0x40b948
  402533:	mov    r9,r13
  402536:	mov    rdx,QWORD PTR [rbp-0x18]
  40253a:	mov    rcx,QWORD PTR [rbp-0x30]
  40253e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402542:	call   r12
  402545:	jmp    0x4024f0
  402547:	nop    WORD PTR [rax+rax*1+0x0]
  402550:	cmp    rbx,rsi
  402553:	jae    0x40238b
  402559:	mov    r12,QWORD PTR [rip+0x5840]        # 0x407da0
  402560:	lea    rdi,[rbp-0x30]
  402564:	mov    ecx,DWORD PTR [rbx+0x4]
  402567:	mov    eax,DWORD PTR [rbx]
  402569:	mov    r8d,0x4
  40256f:	mov    rdx,rdi
  402572:	add    rbx,0x8
  402576:	add    rcx,r12
  402579:	add    eax,DWORD PTR [rcx]
  40257b:	mov    DWORD PTR [rbp-0x30],eax
  40257e:	call   0x402200
  402583:	cmp    rbx,rsi
  402586:	jb     0x402564
  402588:	jmp    0x4024c4
  40258d:	cmp    edx,0x8
  402590:	jne    0x4025fb
  402592:	movzx  edx,BYTE PTR [rcx]
  402595:	mov    rdi,r13
  402598:	mov    r10,rdx
  40259b:	or     r10,0xffffffffffffff00
  4025a2:	test   dl,dl
  4025a4:	cmovs  rdx,r10
  4025a8:	sub    rdx,rax
  4025ab:	lea    rax,[r8+rdx*1]
  4025af:	mov    r8d,0x1
  4025b5:	mov    rdx,r13
  4025b8:	mov    QWORD PTR [rbp-0x30],rax
  4025bc:	call   0x402200
  4025c1:	jmp    0x4024bb
  4025c6:	movzx  edx,WORD PTR [rcx]
  4025c9:	mov    rdi,r13
  4025cc:	mov    r10,rdx
  4025cf:	or     r10,0xffffffffffff0000
  4025d6:	test   dx,dx
  4025d9:	cmovs  rdx,r10
  4025dd:	sub    rdx,rax
  4025e0:	lea    rax,[r8+rdx*1]
  4025e4:	mov    r8d,0x2
  4025ea:	mov    rdx,r13
  4025ed:	mov    QWORD PTR [rbp-0x30],rax
  4025f1:	call   0x402200
  4025f6:	jmp    0x4024bb
  4025fb:	lea    rcx,[rip+0x54c6]        # 0x407ac8
  402602:	mov    QWORD PTR [rbp-0x30],0x0
  40260a:	call   0x402190
  40260f:	mov    edx,DWORD PTR [rcx]
  402611:	mov    rdi,r13
  402614:	mov    r10,rdx
  402617:	or     r10,r14
  40261a:	test   edx,edx
  40261c:	cmovs  rdx,r10
  402620:	sub    rdx,rax
  402623:	lea    rax,[r8+rdx*1]
  402627:	mov    r8d,0x4
  40262d:	mov    rdx,r13
  402630:	mov    QWORD PTR [rbp-0x30],rax
  402634:	call   0x402200
  402639:	jmp    0x4024bb
  40263e:	add    rbx,QWORD PTR [rip+0x9303]        # 0x40b948
  402645:	lea    rcx,[rip+0x53e4]        # 0x407a30
  40264c:	mov    rax,QWORD PTR [rbx+0x10]
  402650:	mov    r8,QWORD PTR [rbx+0x8]
  402654:	mov    edx,DWORD PTR [rax+0x8]
  402657:	call   0x402190
  40265c:	lea    rcx,[rip+0x542d]        # 0x407a90
  402663:	call   0x402190
  402668:	nop
  402669:	nop
  40266a:	nop
  40266b:	nop
  40266c:	nop
  40266d:	nop
  40266e:	nop
  40266f:	nop
  402670:	sub    rsp,0x28
  402674:	mov    eax,DWORD PTR [rcx]
  402676:	cmp    eax,0xc0000091
  40267b:	ja     0x4026e0
  40267d:	cmp    eax,0xc000008d
  402682:	jae    0x4026ff
  402684:	cmp    eax,0xc0000008
  402689:	je     0x4027a0
  40268f:	ja     0x402770
  402695:	cmp    eax,0x80000002
  40269a:	je     0x4027a0
  4026a0:	cmp    eax,0xc0000005
  4026a5:	jne    0x40277e
  4026ab:	xor    edx,edx
  4026ad:	mov    ecx,0xb
  4026b2:	call   0x404308
  4026b7:	cmp    rax,0x1
  4026bb:	je     0x402800
  4026c1:	test   rax,rax
  4026c4:	je     0x4027e0
  4026ca:	mov    ecx,0xb
  4026cf:	call   rax
  4026d1:	xor    eax,eax
  4026d3:	add    rsp,0x28
  4026d7:	ret    
  4026d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026e0:	cmp    eax,0xc0000094
  4026e5:	je     0x4027b0
  4026eb:	ja     0x402730
  4026ed:	cmp    eax,0xc0000092
  4026f2:	je     0x4027a0
  4026f8:	cmp    eax,0xc0000093
  4026fd:	jne    0x40277e
  4026ff:	xor    edx,edx
  402701:	mov    ecx,0x8
  402706:	call   0x404308
  40270b:	cmp    rax,0x1
  40270f:	mov    rdx,rax
  402712:	je     0x402788
  402714:	test   rdx,rdx
  402717:	mov    eax,0x1
  40271c:	je     0x4026d3
  40271e:	mov    ecx,0x8
  402723:	call   rdx
  402725:	xor    eax,eax
  402727:	add    rsp,0x28
  40272b:	ret    
  40272c:	nop    DWORD PTR [rax+0x0]
  402730:	cmp    eax,0xc0000095
  402735:	je     0x4027a0
  402737:	cmp    eax,0xc0000096
  40273c:	jne    0x40277e
  40273e:	xor    edx,edx
  402740:	mov    ecx,0x4
  402745:	call   0x404308
  40274a:	cmp    rax,0x1
  40274e:	je     0x4027ea
  402754:	test   rax,rax
  402757:	je     0x4027e0
  40275d:	mov    ecx,0x4
  402762:	call   rax
  402764:	xor    eax,eax
  402766:	jmp    0x4026d3
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	cmp    eax,0xc000001d
  402775:	je     0x40273e
  402777:	cmp    eax,0xc000008c
  40277c:	je     0x4027a0
  40277e:	mov    eax,0x1
  402783:	add    rsp,0x28
  402787:	ret    
  402788:	mov    edx,0x1
  40278d:	mov    ecx,0x8
  402792:	call   0x404308
  402797:	call   0x402160
  40279c:	nop    DWORD PTR [rax+0x0]
  4027a0:	xor    eax,eax
  4027a2:	add    rsp,0x28
  4027a6:	ret    
  4027a7:	nop    WORD PTR [rax+rax*1+0x0]
  4027b0:	xor    edx,edx
  4027b2:	mov    ecx,0x8
  4027b7:	call   0x404308
  4027bc:	cmp    rax,0x1
  4027c0:	mov    rdx,rax
  4027c3:	jne    0x402714
  4027c9:	mov    edx,0x1
  4027ce:	mov    ecx,0x8
  4027d3:	call   0x404308
  4027d8:	xor    eax,eax
  4027da:	jmp    0x4026d3
  4027df:	nop
  4027e0:	mov    eax,0x4
  4027e5:	add    rsp,0x28
  4027e9:	ret    
  4027ea:	mov    edx,0x1
  4027ef:	mov    ecx,0x4
  4027f4:	call   0x404308
  4027f9:	xor    eax,eax
  4027fb:	jmp    0x4026d3
  402800:	mov    edx,0x1
  402805:	mov    ecx,0xb
  40280a:	call   0x404308
  40280f:	xor    eax,eax
  402811:	jmp    0x4026d3
  402816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402820:	push   r12
  402822:	push   rbp
  402823:	push   rdi
  402824:	push   rsi
  402825:	push   rbx
  402826:	sub    rsp,0x20
  40282a:	call   0x402f90
  40282f:	mov    rbp,rax
  402832:	mov    eax,DWORD PTR [rip+0x9150]        # 0x40b988
  402838:	test   eax,eax
  40283a:	jne    0x402861
  40283c:	test   rbp,rbp
  40283f:	je     0x402861
  402841:	lea    rcx,[rip+0x52b8]        # 0x407b00
  402848:	mov    DWORD PTR [rip+0x9136],0x1        # 0x40b988
  402852:	call   0x402dd0
  402857:	test   rax,rax
  40285a:	je     0x402870
  40285c:	mov    eax,0x1
  402861:	add    rsp,0x20
  402865:	pop    rbx
  402866:	pop    rsi
  402867:	pop    rdi
  402868:	pop    rbp
  402869:	pop    r12
  40286b:	ret    
  40286c:	nop    DWORD PTR [rax+0x0]
  402870:	lea    rbx,[rip+0x9249]        # 0x40bac0
  402877:	mov    ecx,0x30
  40287c:	lea    rdx,[rip+0x913d]        # 0x40b9c0
  402883:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402670
  40288a:	xor    esi,esi
  40288c:	mov    rdi,rbx
  40288f:	rep stos QWORD PTR es:[rdi],rax
  402892:	mov    rdi,rdx
  402895:	sub    r12,rbp
  402898:	mov    cl,0x20
  40289a:	rep stos QWORD PTR es:[rdi],rax
  40289d:	mov    rdi,rdx
  4028a0:	jmp    0x4028d0
  4028a2:	mov    BYTE PTR [rdi],0x9
  4028a5:	mov    DWORD PTR [rdi+0x4],r12d
  4028a9:	add    rsi,0x1
  4028ad:	mov    edx,DWORD PTR [rax+0xc]
  4028b0:	add    rbx,0xc
  4028b4:	mov    DWORD PTR [rbx-0xc],edx
  4028b7:	add    edx,DWORD PTR [rax+0x8]
  4028ba:	mov    rax,rdi
  4028bd:	sub    rax,rbp
  4028c0:	add    rdi,0x8
  4028c4:	mov    DWORD PTR [rbx-0x4],eax
  4028c7:	mov    DWORD PTR [rbx-0x8],edx
  4028ca:	cmp    rsi,0x20
  4028ce:	je     0x402905
  4028d0:	mov    rcx,rsi
  4028d3:	call   0x402f00
  4028d8:	test   rax,rax
  4028db:	jne    0x4028a2
  4028dd:	test   rsi,rsi
  4028e0:	je     0x40285c
  4028e6:	mov    edx,esi
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	mov    r8,rbp
  4028f3:	lea    rcx,[rip+0x91c6]        # 0x40bac0
  4028fa:	call   QWORD PTR [rip+0x9c20]        # 0x40c520
  402900:	jmp    0x40285c
  402905:	mov    edx,0x20
  40290a:	jmp    0x4028f0
  40290c:	nop    DWORD PTR [rax+0x0]
  402910:	push   rbx
  402911:	sub    rsp,0x20
  402915:	mov    rdx,QWORD PTR [rcx]
  402918:	mov    eax,DWORD PTR [rdx]
  40291a:	mov    r8d,eax
  40291d:	and    r8d,0x20ffffff
  402924:	cmp    r8d,0x20474343
  40292b:	je     0x402a30
  402931:	cmp    eax,0xc0000091
  402936:	mov    rbx,rcx
  402939:	ja     0x4029c0
  40293f:	cmp    eax,0xc000008d
  402944:	jae    0x4029d7
  40294a:	cmp    eax,0xc0000008
  40294f:	je     0x402983
  402951:	ja     0x402990
  402953:	cmp    eax,0x80000002
  402958:	je     0x402983
  40295a:	cmp    eax,0xc0000005
  40295f:	jne    0x4029a2
  402961:	xor    edx,edx
  402963:	mov    ecx,0xb
  402968:	call   0x404308
  40296d:	cmp    rax,0x1
  402971:	je     0x402aa0
  402977:	test   rax,rax
  40297a:	je     0x4029a2
  40297c:	mov    ecx,0xb
  402981:	call   rax
  402983:	mov    eax,0xffffffff
  402988:	add    rsp,0x20
  40298c:	pop    rbx
  40298d:	ret    
  40298e:	xchg   ax,ax
  402990:	cmp    eax,0xc000001d
  402995:	je     0x402a56
  40299b:	cmp    eax,0xc000008c
  4029a0:	je     0x402983
  4029a2:	mov    rax,QWORD PTR [rip+0x8fd7]        # 0x40b980
  4029a9:	test   rax,rax
  4029ac:	je     0x402988
  4029ae:	mov    rcx,rbx
  4029b1:	add    rsp,0x20
  4029b5:	pop    rbx
  4029b6:	rex.W jmp rax
  4029b9:	nop    DWORD PTR [rax+0x0]
  4029c0:	cmp    eax,0xc0000094
  4029c5:	je     0x402a02
  4029c7:	ja     0x402a40
  4029c9:	cmp    eax,0xc0000092
  4029ce:	je     0x402983
  4029d0:	cmp    eax,0xc0000093
  4029d5:	jne    0x4029a2
  4029d7:	xor    edx,edx
  4029d9:	mov    ecx,0x8
  4029de:	call   0x404308
  4029e3:	cmp    rax,0x1
  4029e7:	jne    0x402a14
  4029e9:	mov    edx,0x1
  4029ee:	mov    ecx,0x8
  4029f3:	call   0x404308
  4029f8:	call   0x402160
  4029fd:	jmp    0x402983
  402a02:	xor    edx,edx
  402a04:	mov    ecx,0x8
  402a09:	call   0x404308
  402a0e:	cmp    rax,0x1
  402a12:	je     0x402a82
  402a14:	test   rax,rax
  402a17:	je     0x4029a2
  402a19:	mov    ecx,0x8
  402a1e:	call   rax
  402a20:	mov    eax,0xffffffff
  402a25:	jmp    0x402988
  402a2a:	nop    WORD PTR [rax+rax*1+0x0]
  402a30:	test   BYTE PTR [rdx+0x4],0x1
  402a34:	jne    0x402931
  402a3a:	jmp    0x402983
  402a3f:	nop
  402a40:	cmp    eax,0xc0000095
  402a45:	je     0x402983
  402a4b:	cmp    eax,0xc0000096
  402a50:	jne    0x4029a2
  402a56:	xor    edx,edx
  402a58:	mov    ecx,0x4
  402a5d:	call   0x404308
  402a62:	cmp    rax,0x1
  402a66:	je     0x402ab4
  402a68:	test   rax,rax
  402a6b:	je     0x4029a2
  402a71:	mov    ecx,0x4
  402a76:	call   rax
  402a78:	mov    eax,0xffffffff
  402a7d:	jmp    0x402988
  402a82:	mov    edx,0x1
  402a87:	mov    ecx,0x8
  402a8c:	call   0x404308
  402a91:	jmp    0x402983
  402a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402aa0:	mov    edx,0x1
  402aa5:	mov    ecx,0xb
  402aaa:	call   0x404308
  402aaf:	jmp    0x402983
  402ab4:	mov    edx,0x1
  402ab9:	mov    ecx,0x4
  402abe:	call   0x404308
  402ac3:	jmp    0x402983
  402ac8:	nop
  402ac9:	nop
  402aca:	nop
  402acb:	nop
  402acc:	nop
  402acd:	nop
  402ace:	nop
  402acf:	nop
  402ad0:	push   rbp
  402ad1:	push   rdi
  402ad2:	push   rsi
  402ad3:	push   rbx
  402ad4:	sub    rsp,0x28
  402ad8:	lea    rcx,[rip+0x9181]        # 0x40bc60
  402adf:	call   QWORD PTR [rip+0x99db]        # 0x40c4c0
  402ae5:	mov    rbx,QWORD PTR [rip+0x9154]        # 0x40bc40
  402aec:	test   rbx,rbx
  402aef:	je     0x402b24
  402af1:	mov    rbp,QWORD PTR [rip+0x9a60]        # 0x40c558
  402af8:	mov    rdi,QWORD PTR [rip+0x99e1]        # 0x40c4e0
  402aff:	nop
  402b00:	mov    ecx,DWORD PTR [rbx]
  402b02:	call   rbp
  402b04:	mov    rsi,rax
  402b07:	call   rdi
  402b09:	test   eax,eax
  402b0b:	jne    0x402b1b
  402b0d:	test   rsi,rsi
  402b10:	je     0x402b1b
  402b12:	mov    rax,QWORD PTR [rbx+0x8]
  402b16:	mov    rcx,rsi
  402b19:	call   rax
  402b1b:	mov    rbx,QWORD PTR [rbx+0x10]
  402b1f:	test   rbx,rbx
  402b22:	jne    0x402b00
  402b24:	mov    rax,QWORD PTR [rip+0x99e5]        # 0x40c510
  402b2b:	lea    rcx,[rip+0x912e]        # 0x40bc60
  402b32:	add    rsp,0x28
  402b36:	pop    rbx
  402b37:	pop    rsi
  402b38:	pop    rdi
  402b39:	pop    rbp
  402b3a:	rex.W jmp rax
  402b3d:	nop    DWORD PTR [rax]
  402b40:	push   rdi
  402b41:	push   rsi
  402b42:	push   rbx
  402b43:	sub    rsp,0x20
  402b47:	mov    eax,DWORD PTR [rip+0x90fb]        # 0x40bc48
  402b4d:	test   eax,eax
  402b4f:	jne    0x402b60
  402b51:	add    rsp,0x20
  402b55:	pop    rbx
  402b56:	pop    rsi
  402b57:	pop    rdi
  402b58:	ret    
  402b59:	nop    DWORD PTR [rax+0x0]
  402b60:	mov    rsi,rdx
  402b63:	mov    edi,ecx
  402b65:	mov    edx,0x18
  402b6a:	mov    ecx,0x1
  402b6f:	call   0x4043c8
  402b74:	test   rax,rax
  402b77:	mov    rbx,rax
  402b7a:	je     0x402bb8
  402b7c:	mov    DWORD PTR [rax],edi
  402b7e:	mov    QWORD PTR [rax+0x8],rsi
  402b82:	lea    rcx,[rip+0x90d7]        # 0x40bc60
  402b89:	call   QWORD PTR [rip+0x9931]        # 0x40c4c0
  402b8f:	mov    rax,QWORD PTR [rip+0x90aa]        # 0x40bc40
  402b96:	lea    rcx,[rip+0x90c3]        # 0x40bc60
  402b9d:	mov    QWORD PTR [rip+0x909c],rbx        # 0x40bc40
  402ba4:	mov    QWORD PTR [rbx+0x10],rax
  402ba8:	call   QWORD PTR [rip+0x9962]        # 0x40c510
  402bae:	xor    eax,eax
  402bb0:	add    rsp,0x20
  402bb4:	pop    rbx
  402bb5:	pop    rsi
  402bb6:	pop    rdi
  402bb7:	ret    
  402bb8:	mov    eax,0xffffffff
  402bbd:	jmp    0x402b51
  402bbf:	nop
  402bc0:	push   rbx
  402bc1:	sub    rsp,0x20
  402bc5:	mov    eax,DWORD PTR [rip+0x907d]        # 0x40bc48
  402bcb:	test   eax,eax
  402bcd:	jne    0x402be0
  402bcf:	xor    eax,eax
  402bd1:	add    rsp,0x20
  402bd5:	pop    rbx
  402bd6:	ret    
  402bd7:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	mov    ebx,ecx
  402be2:	lea    rcx,[rip+0x9077]        # 0x40bc60
  402be9:	call   QWORD PTR [rip+0x98d1]        # 0x40c4c0
  402bef:	mov    rdx,QWORD PTR [rip+0x904a]        # 0x40bc40
  402bf6:	test   rdx,rdx
  402bf9:	je     0x402c17
  402bfb:	mov    eax,DWORD PTR [rdx]
  402bfd:	cmp    eax,ebx
  402bff:	jne    0x402c0e
  402c01:	jmp    0x402c4f
  402c03:	mov    r8d,DWORD PTR [rax]
  402c06:	cmp    r8d,ebx
  402c09:	je     0x402c30
  402c0b:	mov    rdx,rax
  402c0e:	mov    rax,QWORD PTR [rdx+0x10]
  402c12:	test   rax,rax
  402c15:	jne    0x402c03
  402c17:	lea    rcx,[rip+0x9042]        # 0x40bc60
  402c1e:	call   QWORD PTR [rip+0x98ec]        # 0x40c510
  402c24:	xor    eax,eax
  402c26:	add    rsp,0x20
  402c2a:	pop    rbx
  402c2b:	ret    
  402c2c:	nop    DWORD PTR [rax+0x0]
  402c30:	mov    rcx,rax
  402c33:	mov    rax,QWORD PTR [rax+0x10]
  402c37:	mov    QWORD PTR [rdx+0x10],rax
  402c3b:	call   0x404388
  402c40:	lea    rcx,[rip+0x9019]        # 0x40bc60
  402c47:	call   QWORD PTR [rip+0x98c3]        # 0x40c510
  402c4d:	jmp    0x402c24
  402c4f:	mov    rax,QWORD PTR [rdx+0x10]
  402c53:	mov    rcx,rdx
  402c56:	mov    QWORD PTR [rip+0x8fe3],rax        # 0x40bc40
  402c5d:	jmp    0x402c3b
  402c5f:	nop
  402c60:	push   rbx
  402c61:	sub    rsp,0x20
  402c65:	cmp    edx,0x1
  402c68:	je     0x402d00
  402c6e:	jb     0x402ca0
  402c70:	cmp    edx,0x2
  402c73:	je     0x402c90
  402c75:	cmp    edx,0x3
  402c78:	jne    0x402c95
  402c7a:	mov    eax,DWORD PTR [rip+0x8fc8]        # 0x40bc48
  402c80:	test   eax,eax
  402c82:	je     0x402c95
  402c84:	call   0x402ad0
  402c89:	jmp    0x402c95
  402c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c90:	call   0x402160
  402c95:	mov    eax,0x1
  402c9a:	add    rsp,0x20
  402c9e:	pop    rbx
  402c9f:	ret    
  402ca0:	mov    eax,DWORD PTR [rip+0x8fa2]        # 0x40bc48
  402ca6:	test   eax,eax
  402ca8:	jne    0x402d30
  402cae:	mov    eax,DWORD PTR [rip+0x8f94]        # 0x40bc48
  402cb4:	cmp    eax,0x1
  402cb7:	jne    0x402c95
  402cb9:	mov    rcx,QWORD PTR [rip+0x8f80]        # 0x40bc40
  402cc0:	test   rcx,rcx
  402cc3:	je     0x402cd6
  402cc5:	mov    rbx,QWORD PTR [rcx+0x10]
  402cc9:	call   0x404388
  402cce:	test   rbx,rbx
  402cd1:	mov    rcx,rbx
  402cd4:	jne    0x402cc5
  402cd6:	lea    rcx,[rip+0x8f83]        # 0x40bc60
  402cdd:	mov    QWORD PTR [rip+0x8f58],0x0        # 0x40bc40
  402ce8:	mov    DWORD PTR [rip+0x8f56],0x0        # 0x40bc48
  402cf2:	call   QWORD PTR [rip+0x97c0]        # 0x40c4b8
  402cf8:	jmp    0x402c95
  402cfa:	nop    WORD PTR [rax+rax*1+0x0]
  402d00:	mov    eax,DWORD PTR [rip+0x8f42]        # 0x40bc48
  402d06:	test   eax,eax
  402d08:	je     0x402d20
  402d0a:	mov    eax,0x1
  402d0f:	mov    DWORD PTR [rip+0x8f2f],0x1        # 0x40bc48
  402d19:	add    rsp,0x20
  402d1d:	pop    rbx
  402d1e:	ret    
  402d1f:	nop
  402d20:	lea    rcx,[rip+0x8f39]        # 0x40bc60
  402d27:	call   QWORD PTR [rip+0x97db]        # 0x40c508
  402d2d:	jmp    0x402d0a
  402d2f:	nop
  402d30:	call   0x402ad0
  402d35:	jmp    0x402cae
  402d3a:	nop
  402d3b:	nop
  402d3c:	nop
  402d3d:	nop
  402d3e:	nop
  402d3f:	nop
  402d40:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d44:	add    rcx,rax
  402d47:	xor    eax,eax
  402d49:	cmp    DWORD PTR [rcx],0x4550
  402d4f:	je     0x402d53
  402d51:	repz ret 
  402d53:	xor    eax,eax
  402d55:	cmp    WORD PTR [rcx+0x18],0x20b
  402d5b:	sete   al
  402d5e:	ret    
  402d5f:	nop
  402d60:	cmp    WORD PTR [rcx],0x5a4d
  402d65:	je     0x402d70
  402d67:	xor    eax,eax
  402d69:	ret    
  402d6a:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	jmp    0x402d40
  402d72:	nop    DWORD PTR [rax+0x0]
  402d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d80:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d84:	add    rcx,rax
  402d87:	movzx  eax,WORD PTR [rcx+0x14]
  402d8b:	lea    rax,[rcx+rax*1+0x18]
  402d90:	movzx  ecx,WORD PTR [rcx+0x6]
  402d94:	test   ecx,ecx
  402d96:	je     0x402dc1
  402d98:	sub    ecx,0x1
  402d9b:	lea    rcx,[rcx+rcx*4]
  402d9f:	lea    r9,[rax+rcx*8+0x28]
  402da4:	mov    r8d,DWORD PTR [rax+0xc]
  402da8:	cmp    r8,rdx
  402dab:	mov    rcx,r8
  402dae:	ja     0x402db8
  402db0:	add    ecx,DWORD PTR [rax+0x8]
  402db3:	cmp    rdx,rcx
  402db6:	jb     0x402dc3
  402db8:	add    rax,0x28
  402dbc:	cmp    rax,r9
  402dbf:	jne    0x402da4
  402dc1:	xor    eax,eax
  402dc3:	repz ret 
  402dc5:	nop
  402dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dd0:	push   rdi
  402dd1:	push   rsi
  402dd2:	push   rbx
  402dd3:	sub    rsp,0x20
  402dd7:	mov    rsi,rcx
  402dda:	call   0x4042e8
  402ddf:	cmp    rax,0x8
  402de3:	ja     0x402e00
  402de5:	mov    rbx,QWORD PTR [rip+0x4fb4]        # 0x407da0
  402dec:	xor    edi,edi
  402dee:	cmp    WORD PTR [rbx],0x5a4d
  402df3:	je     0x402e10
  402df5:	mov    rax,rdi
  402df8:	add    rsp,0x20
  402dfc:	pop    rbx
  402dfd:	pop    rsi
  402dfe:	pop    rdi
  402dff:	ret    
  402e00:	xor    edi,edi
  402e02:	mov    rax,rdi
  402e05:	add    rsp,0x20
  402e09:	pop    rbx
  402e0a:	pop    rsi
  402e0b:	pop    rdi
  402e0c:	ret    
  402e0d:	nop    DWORD PTR [rax]
  402e10:	mov    rcx,rbx
  402e13:	call   0x402d40
  402e18:	test   eax,eax
  402e1a:	je     0x402df5
  402e1c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402e20:	add    rdx,rbx
  402e23:	movzx  eax,WORD PTR [rdx+0x14]
  402e27:	lea    rbx,[rdx+rax*1+0x18]
  402e2c:	movzx  eax,WORD PTR [rdx+0x6]
  402e30:	test   eax,eax
  402e32:	je     0x402df5
  402e34:	sub    eax,0x1
  402e37:	lea    rax,[rax+rax*4]
  402e3b:	lea    rdi,[rbx+rax*8+0x28]
  402e40:	jmp    0x402e4b
  402e42:	add    rbx,0x28
  402e46:	cmp    rbx,rdi
  402e49:	je     0x402e00
  402e4b:	mov    r8d,0x8
  402e51:	mov    rdx,rsi
  402e54:	mov    rcx,rbx
  402e57:	call   0x4042e0
  402e5c:	test   eax,eax
  402e5e:	jne    0x402e42
  402e60:	mov    rdi,rbx
  402e63:	mov    rax,rdi
  402e66:	add    rsp,0x20
  402e6a:	pop    rbx
  402e6b:	pop    rsi
  402e6c:	pop    rdi
  402e6d:	ret    
  402e6e:	xchg   ax,ax
  402e70:	push   rsi
  402e71:	push   rbx
  402e72:	sub    rsp,0x28
  402e76:	mov    rbx,QWORD PTR [rip+0x4f23]        # 0x407da0
  402e7d:	cmp    WORD PTR [rbx],0x5a4d
  402e82:	je     0x402e90
  402e84:	xor    eax,eax
  402e86:	add    rsp,0x28
  402e8a:	pop    rbx
  402e8b:	pop    rsi
  402e8c:	ret    
  402e8d:	nop    DWORD PTR [rax]
  402e90:	mov    rsi,rcx
  402e93:	mov    rcx,rbx
  402e96:	call   0x402d40
  402e9b:	test   eax,eax
  402e9d:	je     0x402e84
  402e9f:	sub    rsi,rbx
  402ea2:	mov    rcx,rbx
  402ea5:	mov    rdx,rsi
  402ea8:	add    rsp,0x28
  402eac:	pop    rbx
  402ead:	pop    rsi
  402eae:	jmp    0x402d80
  402eb3:	nop    DWORD PTR [rax]
  402eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ec0:	push   rbx
  402ec1:	sub    rsp,0x20
  402ec5:	mov    rbx,QWORD PTR [rip+0x4ed4]        # 0x407da0
  402ecc:	xor    eax,eax
  402ece:	cmp    WORD PTR [rbx],0x5a4d
  402ed3:	je     0x402ee0
  402ed5:	add    rsp,0x20
  402ed9:	pop    rbx
  402eda:	ret    
  402edb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ee0:	mov    rcx,rbx
  402ee3:	call   0x402d40
  402ee8:	test   eax,eax
  402eea:	je     0x402ed5
  402eec:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ef0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ef5:	add    rsp,0x20
  402ef9:	pop    rbx
  402efa:	ret    
  402efb:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	push   rdi
  402f01:	push   rsi
  402f02:	push   rbx
  402f03:	sub    rsp,0x20
  402f07:	mov    rsi,QWORD PTR [rip+0x4e92]        # 0x407da0
  402f0e:	xor    edi,edi
  402f10:	mov    rbx,rcx
  402f13:	cmp    WORD PTR [rsi],0x5a4d
  402f18:	je     0x402f25
  402f1a:	mov    rax,rdi
  402f1d:	add    rsp,0x20
  402f21:	pop    rbx
  402f22:	pop    rsi
  402f23:	pop    rdi
  402f24:	ret    
  402f25:	mov    rcx,rsi
  402f28:	call   0x402d40
  402f2d:	test   eax,eax
  402f2f:	je     0x402f1a
  402f31:	movsxd rax,DWORD PTR [rsi+0x3c]
  402f35:	add    rsi,rax
  402f38:	movzx  eax,WORD PTR [rsi+0x14]
  402f3c:	lea    rdx,[rsi+rax*1+0x18]
  402f41:	movzx  eax,WORD PTR [rsi+0x6]
  402f45:	test   eax,eax
  402f47:	je     0x402f1a
  402f49:	sub    eax,0x1
  402f4c:	lea    rax,[rax+rax*4]
  402f50:	lea    rax,[rdx+rax*8+0x28]
  402f55:	test   BYTE PTR [rdx+0x27],0x20
  402f59:	je     0x402f64
  402f5b:	test   rbx,rbx
  402f5e:	je     0x402f80
  402f60:	sub    rbx,0x1
  402f64:	add    rdx,0x28
  402f68:	cmp    rdx,rax
  402f6b:	jne    0x402f55
  402f6d:	xor    edi,edi
  402f6f:	mov    rax,rdi
  402f72:	add    rsp,0x20
  402f76:	pop    rbx
  402f77:	pop    rsi
  402f78:	pop    rdi
  402f79:	ret    
  402f7a:	nop    WORD PTR [rax+rax*1+0x0]
  402f80:	mov    rdi,rdx
  402f83:	mov    rax,rdi
  402f86:	add    rsp,0x20
  402f8a:	pop    rbx
  402f8b:	pop    rsi
  402f8c:	pop    rdi
  402f8d:	ret    
  402f8e:	xchg   ax,ax
  402f90:	push   rsi
  402f91:	push   rbx
  402f92:	sub    rsp,0x28
  402f96:	mov    rsi,QWORD PTR [rip+0x4e03]        # 0x407da0
  402f9d:	xor    ebx,ebx
  402f9f:	cmp    WORD PTR [rsi],0x5a4d
  402fa4:	je     0x402fb0
  402fa6:	mov    rax,rbx
  402fa9:	add    rsp,0x28
  402fad:	pop    rbx
  402fae:	pop    rsi
  402faf:	ret    
  402fb0:	mov    rcx,rsi
  402fb3:	call   0x402d40
  402fb8:	test   eax,eax
  402fba:	cmovne rbx,rsi
  402fbe:	mov    rax,rbx
  402fc1:	add    rsp,0x28
  402fc5:	pop    rbx
  402fc6:	pop    rsi
  402fc7:	ret    
  402fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	push   rsi
  402fd1:	push   rbx
  402fd2:	sub    rsp,0x28
  402fd6:	mov    rbx,QWORD PTR [rip+0x4dc3]        # 0x407da0
  402fdd:	xor    eax,eax
  402fdf:	cmp    WORD PTR [rbx],0x5a4d
  402fe4:	je     0x402ff0
  402fe6:	add    rsp,0x28
  402fea:	pop    rbx
  402feb:	pop    rsi
  402fec:	ret    
  402fed:	nop    DWORD PTR [rax]
  402ff0:	mov    rsi,rcx
  402ff3:	mov    rcx,rbx
  402ff6:	call   0x402d40
  402ffb:	test   eax,eax
  402ffd:	je     0x402fe6
  402fff:	sub    rsi,rbx
  403002:	mov    rcx,rbx
  403005:	mov    rdx,rsi
  403008:	call   0x402d80
  40300d:	test   rax,rax
  403010:	je     0x403021
  403012:	mov    eax,DWORD PTR [rax+0x24]
  403015:	not    eax
  403017:	shr    eax,0x1f
  40301a:	add    rsp,0x28
  40301e:	pop    rbx
  40301f:	pop    rsi
  403020:	ret    
  403021:	xor    eax,eax
  403023:	jmp    0x402fe6
  403025:	nop
  403026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403030:	push   rbp
  403031:	push   rdi
  403032:	push   rsi
  403033:	push   rbx
  403034:	sub    rsp,0x28
  403038:	mov    rdi,QWORD PTR [rip+0x4d61]        # 0x407da0
  40303f:	xor    ebp,ebp
  403041:	mov    esi,ecx
  403043:	cmp    WORD PTR [rdi],0x5a4d
  403048:	je     0x403060
  40304a:	mov    rax,rbp
  40304d:	add    rsp,0x28
  403051:	pop    rbx
  403052:	pop    rsi
  403053:	pop    rdi
  403054:	pop    rbp
  403055:	ret    
  403056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403060:	mov    rcx,rdi
  403063:	call   0x402d40
  403068:	test   eax,eax
  40306a:	je     0x40304a
  40306c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403070:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403077:	test   edx,edx
  403079:	je     0x40304a
  40307b:	mov    ebx,edx
  40307d:	mov    rcx,rdi
  403080:	mov    rdx,rbx
  403083:	call   0x402d80
  403088:	test   rax,rax
  40308b:	je     0x40304a
  40308d:	add    rbx,rdi
  403090:	mov    rdx,rbx
  403093:	jne    0x4030a7
  403095:	jmp    0x40304a
  403097:	nop    WORD PTR [rax+rax*1+0x0]
  4030a0:	sub    esi,0x1
  4030a3:	add    rdx,0x14
  4030a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4030aa:	test   ecx,ecx
  4030ac:	jne    0x4030b5
  4030ae:	mov    eax,DWORD PTR [rdx+0xc]
  4030b1:	test   eax,eax
  4030b3:	je     0x4030d0
  4030b5:	test   esi,esi
  4030b7:	jg     0x4030a0
  4030b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4030bc:	add    rbp,rdi
  4030bf:	mov    rax,rbp
  4030c2:	add    rsp,0x28
  4030c6:	pop    rbx
  4030c7:	pop    rsi
  4030c8:	pop    rdi
  4030c9:	pop    rbp
  4030ca:	ret    
  4030cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d0:	xor    ebp,ebp
  4030d2:	mov    rax,rbp
  4030d5:	add    rsp,0x28
  4030d9:	pop    rbx
  4030da:	pop    rsi
  4030db:	pop    rdi
  4030dc:	pop    rbp
  4030dd:	ret    
  4030de:	nop
  4030df:	nop
  4030e0:	push   rcx
  4030e1:	push   rax
  4030e2:	cmp    rax,0x1000
  4030e8:	lea    rcx,[rsp+0x18]
  4030ed:	jb     0x403108
  4030ef:	sub    rcx,0x1000
  4030f6:	or     QWORD PTR [rcx],0x0
  4030fa:	sub    rax,0x1000
  403100:	cmp    rax,0x1000
  403106:	ja     0x4030ef
  403108:	sub    rcx,rax
  40310b:	or     QWORD PTR [rcx],0x0
  40310f:	pop    rax
  403110:	pop    rcx
  403111:	ret    
  403112:	nop
  403113:	nop
  403114:	nop
  403115:	nop
  403116:	nop
  403117:	nop
  403118:	nop
  403119:	nop
  40311a:	nop
  40311b:	nop
  40311c:	nop
  40311d:	nop
  40311e:	nop
  40311f:	nop
  403120:	push   rbp
  403121:	push   r13
  403123:	push   r12
  403125:	push   rdi
  403126:	push   rsi
  403127:	push   rbx
  403128:	sub    rsp,0x28
  40312c:	lea    rbp,[rsp+0x80]
  403134:	xor    edx,edx
  403136:	mov    rbx,rcx
  403139:	mov    ecx,0x2
  40313e:	call   0x404310
  403143:	test   rax,rax
  403146:	mov    rsi,rax
  403149:	je     0x403156
  40314b:	mov    rcx,rax
  40314e:	call   0x4042b0
  403153:	mov    rsi,rax
  403156:	lea    rdx,[rip+0x49b3]        # 0x407b10
  40315d:	mov    ecx,0x2
  403162:	call   0x404310
  403167:	test   rbx,rbx
  40316a:	je     0x403171
  40316c:	cmp    BYTE PTR [rbx],0x0
  40316f:	jne    0x4031e0
  403171:	lea    rdx,[rip+0x499e]        # 0x407b16
  403178:	xor    r8d,r8d
  40317b:	xor    ecx,ecx
  40317d:	call   0x4042b8
  403182:	mov    rcx,QWORD PTR [rip+0x8b27]        # 0x40bcb0
  403189:	lea    rbx,[rax+0x1]
  40318d:	mov    rdx,rbx
  403190:	call   0x404320
  403195:	lea    rdx,[rip+0x497a]        # 0x407b16
  40319c:	mov    r8,rbx
  40319f:	mov    rcx,rax
  4031a2:	mov    QWORD PTR [rip+0x8b07],rax        # 0x40bcb0
  4031a9:	call   0x4042b8
  4031ae:	mov    rdx,rsi
  4031b1:	mov    ecx,0x2
  4031b6:	call   0x404310
  4031bb:	mov    rcx,rsi
  4031be:	call   0x404388
  4031c3:	mov    rax,QWORD PTR [rip+0x8ae6]        # 0x40bcb0
  4031ca:	lea    rsp,[rbp-0x58]
  4031ce:	pop    rbx
  4031cf:	pop    rsi
  4031d0:	pop    rdi
  4031d1:	pop    r12
  4031d3:	pop    r13
  4031d5:	pop    rbp
  4031d6:	ret    
  4031d7:	nop    WORD PTR [rax+rax*1+0x0]
  4031e0:	xor    r8d,r8d
  4031e3:	mov    rdx,rbx
  4031e6:	xor    ecx,ecx
  4031e8:	call   0x404358
  4031ed:	lea    rdx,[rax+rax*1+0x12]
  4031f2:	mov    r8,rax
  4031f5:	mov    rdi,rsp
  4031f8:	mov    rax,rdx
  4031fb:	and    rax,0xfffffffffffffff0
  4031ff:	call   0x4030e0
  403204:	sub    rsp,rax
  403207:	mov    rdx,rbx
  40320a:	lea    r12,[rsp+0x21]
  40320f:	shr    r12,1
  403212:	lea    r13,[r12+r12*1]
  403216:	mov    rcx,r13
  403219:	call   0x404358
  40321e:	cmp    rax,0x1
  403222:	jbe    0x4032a6
  403228:	cmp    WORD PTR [r12+r12*1+0x2],0x3a
  40322f:	lea    rdx,[r13+0x4]
  403233:	cmovne rdx,r13
  403237:	xor    r9d,r9d
  40323a:	mov    WORD PTR [r13+rax*2+0x0],r9w
  403240:	movzx  r11d,WORD PTR [rdx]
  403244:	mov    r12,rdx
  403247:	test   r11w,r11w
  40324b:	je     0x4032bc
  40324d:	mov    r9,r12
  403250:	jmp    0x40326c
  403252:	cmp    r11w,0x2f
  403257:	je     0x403284
  403259:	movzx  r11d,WORD PTR [r9+0x2]
  40325e:	add    r9,0x2
  403262:	test   r11w,r11w
  403266:	je     0x403308
  40326c:	cmp    r11w,0x5c
  403271:	jne    0x403252
  403273:	movzx  r10d,WORD PTR [r9]
  403277:	cmp    r10w,0x5c
  40327c:	jne    0x40328f
  40327e:	xchg   ax,ax
  403280:	add    r9,0x2
  403284:	movzx  r10d,WORD PTR [r9]
  403288:	cmp    r10w,0x5c
  40328d:	je     0x403280
  40328f:	cmp    r10w,0x2f
  403294:	je     0x403280
  403296:	test   r10w,r10w
  40329a:	je     0x4032c4
  40329c:	movzx  r11d,WORD PTR [r9+0x2]
  4032a1:	mov    r12,r9
  4032a4:	jmp    0x40325e
  4032a6:	xor    edx,edx
  4032a8:	mov    WORD PTR [r13+rax*2+0x0],dx
  4032ae:	movzx  r11d,WORD PTR [r12+r12*1]
  4032b3:	mov    r12,r13
  4032b6:	test   r11w,r11w
  4032ba:	jne    0x40324d
  4032bc:	mov    rsp,rdi
  4032bf:	jmp    0x403171
  4032c4:	cmp    r9,r12
  4032c7:	jbe    0x403259
  4032c9:	movzx  edx,WORD PTR [r9-0x2]
  4032ce:	lea    r10,[r9-0x2]
  4032d2:	cmp    dx,0x2f
  4032d6:	je     0x4032e2
  4032d8:	cmp    dx,0x5c
  4032dc:	jne    0x4033c2
  4032e2:	xor    r8d,r8d
  4032e5:	cmp    r12,r10
  4032e8:	mov    WORD PTR [r10],r8w
  4032ec:	jae    0x403380
  4032f2:	sub    r10,0x2
  4032f6:	movzx  r9d,WORD PTR [r10]
  4032fa:	cmp    r9w,0x2f
  4032ff:	je     0x4032e2
  403301:	cmp    r9w,0x5c
  403306:	je     0x4032e2
  403308:	cmp    WORD PTR [r12],0x0
  40330e:	jne    0x403388
  403310:	lea    rdx,[rip+0x47fb]        # 0x407b12
  403317:	xor    r8d,r8d
  40331a:	xor    ecx,ecx
  40331c:	call   0x4042b8
  403321:	mov    rcx,QWORD PTR [rip+0x8988]        # 0x40bcb0
  403328:	lea    r12,[rax+0x1]
  40332c:	mov    rdx,r12
  40332f:	call   0x404320
  403334:	lea    rdx,[rip+0x47d7]        # 0x407b12
  40333b:	mov    r8,r12
  40333e:	mov    rcx,rax
  403341:	mov    rbx,rax
  403344:	mov    QWORD PTR [rip+0x8965],rax        # 0x40bcb0
  40334b:	call   0x4042b8
  403350:	mov    rdx,rsi
  403353:	mov    ecx,0x2
  403358:	call   0x404310
  40335d:	mov    rcx,rsi
  403360:	call   0x404388
  403365:	mov    rax,rbx
  403368:	mov    rsp,rdi
  40336b:	lea    rsp,[rbp-0x58]
  40336f:	pop    rbx
  403370:	pop    rsi
  403371:	pop    rdi
  403372:	pop    r12
  403374:	pop    r13
  403376:	pop    rbp
  403377:	ret    
  403378:	nop    DWORD PTR [rax+rax*1+0x0]
  403380:	mov    r9,r10
  403383:	jmp    0x403259
  403388:	mov    r8,rax
  40338b:	mov    rdx,r13
  40338e:	mov    rcx,rbx
  403391:	call   0x4042b8
  403396:	cmp    rax,0xffffffffffffffff
  40339a:	je     0x4033a0
  40339c:	mov    BYTE PTR [rbx+rax*1],0x0
  4033a0:	xor    ecx,ecx
  4033a2:	xor    r8d,r8d
  4033a5:	mov    rdx,r13
  4033a8:	mov    WORD PTR [r12],cx
  4033ad:	xor    ecx,ecx
  4033af:	call   0x4042b8
  4033b4:	lea    rdx,[rbx+rax*1]
  4033b8:	cmp    rax,0xffffffffffffffff
  4033bc:	cmovne rbx,rdx
  4033c0:	jmp    0x403350
  4033c2:	movzx  r11d,WORD PTR [r9]
  4033c6:	mov    r9,r10
  4033c9:	jmp    0x40325e
  4033ce:	nop
  4033cf:	nop
  4033d0:	push   r13
  4033d2:	push   r12
  4033d4:	push   rbp
  4033d5:	push   rdi
  4033d6:	push   rsi
  4033d7:	push   rbx
  4033d8:	mov    r12d,edx
  4033db:	mov    ebp,r8d
  4033de:	mov    edi,edx
  4033e0:	sub    r12d,ecx
  4033e3:	sub    ebp,edx
  4033e5:	mov    eax,r12d
  4033e8:	cdq    
  4033e9:	idiv   ebp
  4033eb:	test   edx,edx
  4033ed:	mov    r13d,edx
  4033f0:	je     0x403475
  4033f6:	mov    eax,ebp
  4033f8:	jmp    0x403403
  4033fa:	nop    WORD PTR [rax+rax*1+0x0]
  403400:	mov    r13d,edx
  403403:	cdq    
  403404:	idiv   r13d
  403407:	mov    eax,r13d
  40340a:	test   edx,edx
  40340c:	jne    0x403400
  40340e:	mov    eax,r8d
  403411:	sub    eax,ecx
  403413:	cdq    
  403414:	idiv   r13d
  403417:	test   r13d,r13d
  40341a:	jle    0x40346c
  40341c:	movsxd rdx,edi
  40341f:	xor    esi,esi
  403421:	lea    rdx,[r9+rdx*8]
  403425:	test   eax,eax
  403427:	lea    ecx,[rdi+rsi*1]
  40342a:	jle    0x403463
  40342c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  403430:	xor    r10d,r10d
  403433:	mov    r11d,ecx
  403436:	lea    r8d,[rcx+rbp*1]
  40343a:	sub    r11d,r12d
  40343d:	cmp    edi,ecx
  40343f:	mov    ecx,r11d
  403442:	cmovg  ecx,r8d
  403446:	add    r10d,0x1
  40344a:	movsxd r11,ecx
  40344d:	cmp    r10d,eax
  403450:	lea    r8,[r9+r11*8]
  403454:	mov    r11,QWORD PTR [r8]
  403457:	mov    QWORD PTR [r8],rbx
  40345a:	mov    QWORD PTR [rdx+rsi*8],r11
  40345e:	mov    rbx,r11
  403461:	jne    0x403433
  403463:	add    rsi,0x1
  403467:	cmp    r13d,esi
  40346a:	jg     0x403425
  40346c:	pop    rbx
  40346d:	pop    rsi
  40346e:	pop    rdi
  40346f:	pop    rbp
  403470:	pop    r12
  403472:	pop    r13
  403474:	ret    
  403475:	mov    r13d,ebp
  403478:	jmp    0x40340e
  40347a:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	push   rdi
  403481:	push   rsi
  403482:	push   rbx
  403483:	sub    rsp,0x30
  403487:	mov    rax,QWORD PTR [rip+0x4922]        # 0x407db0
  40348e:	mov    QWORD PTR [rsp+0x58],rdx
  403493:	mov    QWORD PTR [rsp+0x60],r8
  403498:	lea    rsi,[rsp+0x58]
  40349d:	mov    QWORD PTR [rsp+0x68],r9
  4034a2:	mov    rbx,rcx
  4034a5:	mov    rax,QWORD PTR [rax]
  4034a8:	mov    QWORD PTR [rsp+0x28],rsi
  4034ad:	mov    rax,QWORD PTR [rax]
  4034b0:	mov    rdi,QWORD PTR [rax]
  4034b3:	call   0x404450
  4034b8:	lea    rdx,[rip+0x4661]        # 0x407b20
  4034bf:	lea    rcx,[rax+0x60]
  4034c3:	mov    r8,rdi
  4034c6:	call   0x4043a0
  4034cb:	test   rbx,rbx
  4034ce:	je     0x4034e4
  4034d0:	call   0x404450
  4034d5:	lea    rcx,[rax+0x60]
  4034d9:	mov    r8,rsi
  4034dc:	mov    rdx,rbx
  4034df:	call   0x4042c8
  4034e4:	call   0x404450
  4034e9:	lea    rdx,[rax+0x60]
  4034ed:	mov    ecx,0xa
  4034f2:	call   0x404398
  4034f7:	nop
  4034f8:	add    rsp,0x30
  4034fc:	pop    rbx
  4034fd:	pop    rsi
  4034fe:	pop    rdi
  4034ff:	ret    
  403500:	push   r15
  403502:	push   r14
  403504:	push   r13
  403506:	push   r12
  403508:	push   rbp
  403509:	push   rdi
  40350a:	push   rsi
  40350b:	push   rbx
  40350c:	sub    rsp,0x48
  403510:	mov    eax,DWORD PTR [rip+0x2c46]        # 0x40615c
  403516:	mov    rbp,QWORD PTR [rip+0x2c33]        # 0x406150
  40351d:	mov    QWORD PTR [rsp+0x90],rcx
  403525:	mov    QWORD PTR [rsp+0x98],rdx
  40352d:	mov    edx,0x3d
  403532:	mov    r14,r8
  403535:	mov    QWORD PTR [rsp+0xa8],r9
  40353d:	mov    r13d,DWORD PTR [rsp+0xb0]
  403545:	mov    DWORD PTR [rsp+0x38],eax
  403549:	mov    rcx,rbp
  40354c:	add    eax,0x1
  40354f:	mov    DWORD PTR [rsp+0x3c],eax
  403553:	mov    DWORD PTR [rip+0x2c03],eax        # 0x40615c
  403559:	call   0x4042f8
  40355e:	test   rax,rax
  403561:	mov    QWORD PTR [rsp+0x30],rax
  403566:	je     0x403744
  40356c:	mov    rdi,rax
  40356f:	add    rax,0x1
  403573:	sub    rdi,rbp
  403576:	mov    QWORD PTR [rsp+0x30],rax
  40357b:	mov    r15,QWORD PTR [r14]
  40357e:	test   r15,r15
  403581:	je     0x40378b
  403587:	lea    rbx,[r14+0x20]
  40358b:	mov    r12d,0xffffffff
  403591:	mov    DWORD PTR [rsp+0x2c],0x0
  403599:	xor    esi,esi
  40359b:	jmp    0x4035b5
  40359d:	nop    DWORD PTR [rax]
  4035a0:	test   r13d,r13d
  4035a3:	je     0x4035de
  4035a5:	add    rbx,0x20
  4035a9:	mov    r15,QWORD PTR [rbx-0x20]
  4035ad:	add    esi,0x1
  4035b0:	test   r15,r15
  4035b3:	je     0x403620
  4035b5:	mov    r8,rdi
  4035b8:	mov    rdx,r15
  4035bb:	mov    rcx,rbp
  4035be:	call   0x4042e0
  4035c3:	test   eax,eax
  4035c5:	jne    0x4035a5
  4035c7:	mov    rcx,r15
  4035ca:	call   0x4042e8
  4035cf:	cmp    rax,rdi
  4035d2:	je     0x4036cd
  4035d8:	cmp    rdi,0x1
  4035dc:	je     0x4035a0
  4035de:	cmp    r12d,0xffffffff
  4035e2:	je     0x403680
  4035e8:	movsxd rax,r12d
  4035eb:	shl    rax,0x5
  4035ef:	add    rax,r14
  4035f2:	mov    edx,DWORD PTR [rax+0x8]
  4035f5:	cmp    DWORD PTR [rbx-0x18],edx
  4035f8:	je     0x403690
  4035fe:	add    rbx,0x20
  403602:	mov    r15,QWORD PTR [rbx-0x20]
  403606:	add    esi,0x1
  403609:	mov    DWORD PTR [rsp+0x2c],0x1
  403611:	test   r15,r15
  403614:	jne    0x4035b5
  403616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403620:	mov    r9d,DWORD PTR [rsp+0x2c]
  403625:	test   r9d,r9d
  403628:	je     0x4036c0
  40362e:	mov    r8d,DWORD PTR [rip+0x2b2b]        # 0x406160
  403635:	test   r8d,r8d
  403638:	je     0x403658
  40363a:	mov    rax,QWORD PTR [rsp+0x98]
  403642:	cmp    BYTE PTR [rax],0x3a
  403645:	je     0x403658
  403647:	lea    rcx,[rip+0x4562]        # 0x407bb0
  40364e:	mov    r8,rbp
  403651:	mov    edx,edi
  403653:	call   0x403480
  403658:	mov    DWORD PTR [rip+0x2af6],0x0        # 0x406158
  403662:	mov    eax,0x3f
  403667:	add    rsp,0x48
  40366b:	pop    rbx
  40366c:	pop    rsi
  40366d:	pop    rdi
  40366e:	pop    rbp
  40366f:	pop    r12
  403671:	pop    r13
  403673:	pop    r14
  403675:	pop    r15
  403677:	ret    
  403678:	nop    DWORD PTR [rax+rax*1+0x0]
  403680:	mov    r12d,esi
  403683:	jmp    0x4035a5
  403688:	nop    DWORD PTR [rax+rax*1+0x0]
  403690:	mov    rdx,QWORD PTR [rax+0x10]
  403694:	cmp    QWORD PTR [rbx-0x10],rdx
  403698:	jne    0x4035fe
  40369e:	mov    eax,DWORD PTR [rax+0x18]
  4036a1:	cmp    DWORD PTR [rbx-0x8],eax
  4036a4:	mov    eax,0x1
  4036a9:	cmove  eax,DWORD PTR [rsp+0x2c]
  4036ae:	mov    DWORD PTR [rsp+0x2c],eax
  4036b2:	jmp    0x4035a5
  4036b7:	nop    WORD PTR [rax+rax*1+0x0]
  4036c0:	cmp    r12d,0xffffffff
  4036c4:	je     0x40378b
  4036ca:	mov    esi,r12d
  4036cd:	movsxd rax,esi
  4036d0:	shl    rax,0x5
  4036d4:	add    r14,rax
  4036d7:	cmp    QWORD PTR [rsp+0x30],0x0
  4036dd:	mov    eax,DWORD PTR [r14+0x8]
  4036e1:	setne  cl
  4036e4:	je     0x403754
  4036e6:	test   eax,eax
  4036e8:	jne    0x403754
  4036ea:	mov    ecx,DWORD PTR [rip+0x2a70]        # 0x406160
  4036f0:	test   ecx,ecx
  4036f2:	jne    0x403724
  4036f4:	cmp    QWORD PTR [r14+0x10],0x0
  4036f9:	je     0x403854
  4036ff:	mov    DWORD PTR [rip+0x2a4f],0x0        # 0x406158
  403709:	mov    rax,QWORD PTR [rsp+0x98]
  403711:	cmp    BYTE PTR [rax],0x3a
  403714:	je     0x403841
  40371a:	mov    eax,0x3f
  40371f:	jmp    0x403667
  403724:	mov    rax,QWORD PTR [rsp+0x98]
  40372c:	cmp    BYTE PTR [rax],0x3a
  40372f:	je     0x4036f4
  403731:	lea    rcx,[rip+0x4448]        # 0x407b80
  403738:	mov    r8,rbp
  40373b:	mov    edx,edi
  40373d:	call   0x403480
  403742:	jmp    0x4036f4
  403744:	mov    rcx,rbp
  403747:	call   0x4042e8
  40374c:	mov    rdi,rax
  40374f:	jmp    0x40357b
  403754:	lea    edx,[rax-0x1]
  403757:	cmp    edx,0x1
  40375a:	jbe    0x4037c7
  40375c:	cmp    QWORD PTR [rsp+0xa8],0x0
  403765:	je     0x403771
  403767:	mov    rax,QWORD PTR [rsp+0xa8]
  40376f:	mov    DWORD PTR [rax],esi
  403771:	mov    rax,QWORD PTR [r14+0x10]
  403775:	test   rax,rax
  403778:	je     0x40384b
  40377e:	mov    edx,DWORD PTR [r14+0x18]
  403782:	mov    DWORD PTR [rax],edx
  403784:	xor    eax,eax
  403786:	jmp    0x403667
  40378b:	test   r13d,r13d
  40378e:	jne    0x4038a2
  403794:	mov    eax,DWORD PTR [rip+0x29c6]        # 0x406160
  40379a:	test   eax,eax
  40379c:	je     0x403658
  4037a2:	mov    rax,QWORD PTR [rsp+0x98]
  4037aa:	cmp    BYTE PTR [rax],0x3a
  4037ad:	je     0x403658
  4037b3:	lea    rcx,[rip+0x4386]        # 0x407b40
  4037ba:	mov    rdx,rbp
  4037bd:	call   0x403480
  4037c2:	jmp    0x403658
  4037c7:	test   cl,cl
  4037c9:	je     0x403863
  4037cf:	mov    rdx,QWORD PTR [rsp+0x30]
  4037d4:	cmp    eax,0x1
  4037d7:	mov    QWORD PTR [rip+0x8542],rdx        # 0x40bd20
  4037de:	jne    0x40375c
  4037e4:	mov    r15,QWORD PTR [rsp+0x30]
  4037e9:	test   r15,r15
  4037ec:	jne    0x40375c
  4037f2:	mov    edx,DWORD PTR [rip+0x2968]        # 0x406160
  4037f8:	test   edx,edx
  4037fa:	je     0x403818
  4037fc:	mov    rax,QWORD PTR [rsp+0x98]
  403804:	cmp    BYTE PTR [rax],0x3a
  403807:	je     0x403818
  403809:	lea    rcx,[rip+0x43d0]        # 0x407be0
  403810:	mov    rdx,rbp
  403813:	call   0x403480
  403818:	cmp    QWORD PTR [r14+0x10],0x0
  40381d:	je     0x403896
  40381f:	mov    DWORD PTR [rip+0x292f],0x0        # 0x406158
  403829:	mov    rax,QWORD PTR [rsp+0x98]
  403831:	sub    DWORD PTR [rip+0x2924],0x1        # 0x40615c
  403838:	cmp    BYTE PTR [rax],0x3a
  40383b:	jne    0x40371a
  403841:	mov    eax,0x3a
  403846:	jmp    0x403667
  40384b:	mov    eax,DWORD PTR [r14+0x18]
  40384f:	jmp    0x403667
  403854:	mov    eax,DWORD PTR [r14+0x18]
  403858:	mov    DWORD PTR [rip+0x28fa],eax        # 0x406158
  40385e:	jmp    0x403709
  403863:	cmp    eax,0x1
  403866:	jne    0x40375c
  40386c:	mov    eax,DWORD PTR [rsp+0x38]
  403870:	mov    rdx,QWORD PTR [rsp+0x90]
  403878:	add    eax,0x2
  40387b:	mov    DWORD PTR [rip+0x28db],eax        # 0x40615c
  403881:	movsxd rax,DWORD PTR [rsp+0x3c]
  403886:	mov    r15,QWORD PTR [rdx+rax*8]
  40388a:	mov    QWORD PTR [rip+0x848f],r15        # 0x40bd20
  403891:	jmp    0x4037e9
  403896:	mov    eax,DWORD PTR [r14+0x18]
  40389a:	mov    DWORD PTR [rip+0x28b8],eax        # 0x406158
  4038a0:	jmp    0x403829
  4038a2:	mov    eax,DWORD PTR [rsp+0x38]
  4038a6:	mov    DWORD PTR [rip+0x28b0],eax        # 0x40615c
  4038ac:	mov    eax,0xffffffff
  4038b1:	jmp    0x403667
  4038b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038c0:	push   r15
  4038c2:	push   r14
  4038c4:	push   r13
  4038c6:	push   r12
  4038c8:	push   rbp
  4038c9:	push   rdi
  4038ca:	push   rsi
  4038cb:	push   rbx
  4038cc:	sub    rsp,0x38
  4038d0:	test   r8,r8
  4038d3:	mov    edi,ecx
  4038d5:	mov    r15,rdx
  4038d8:	mov    QWORD PTR [rsp+0x90],r8
  4038e0:	mov    QWORD PTR [rsp+0x98],r9
  4038e8:	je     0x403bbe
  4038ee:	mov    r9d,DWORD PTR [rip+0x2867]        # 0x40615c
  4038f5:	test   r9d,r9d
  4038f8:	je     0x403b50
  4038fe:	cmp    DWORD PTR [rip+0x283b],0xffffffff        # 0x406140
  403905:	je     0x403ac4
  40390b:	mov    edx,DWORD PTR [rip+0x8417]        # 0x40bd28
  403911:	test   edx,edx
  403913:	jne    0x403ac4
  403919:	mov    rax,QWORD PTR [rsp+0x90]
  403921:	movzx  eax,BYTE PTR [rax]
  403924:	cmp    al,0x2d
  403926:	je     0x403af8
  40392c:	cmp    al,0x2b
  40392e:	je     0x403bd4
  403934:	mov    r8d,DWORD PTR [rip+0x2805]        # 0x406140
  40393b:	test   r8d,r8d
  40393e:	jne    0x403bd4
  403944:	sub    eax,0x2b
  403947:	test   al,0xfd
  403949:	je     0x403b00
  40394f:	test   edx,edx
  403951:	mov    QWORD PTR [rip+0x83c4],0x0        # 0x40bd20
  40395c:	jne    0x403b30
  403962:	mov    r14d,DWORD PTR [rsp+0xa8]
  40396a:	mov    ebp,DWORD PTR [rsp+0xa8]
  403971:	and    r14d,0x2
  403975:	and    ebp,0x1
  403978:	jmp    0x4039fe
  40397d:	nop    DWORD PTR [rax]
  403980:	lea    rax,[rip+0x41ae]        # 0x407b35
  403987:	test   r14d,r14d
  40398a:	mov    edx,r14d
  40398d:	mov    QWORD PTR [rip+0x27bc],rax        # 0x406150
  403994:	jne    0x403ca0
  40399a:	test   ebp,ebp
  40399c:	je     0x403bbe
  4039a2:	mov    r12d,DWORD PTR [rip+0x279f]        # 0x406148
  4039a9:	cmp    r12d,0xffffffff
  4039ad:	je     0x403b20
  4039b3:	mov    r13d,DWORD PTR [rip+0x278a]        # 0x406144
  4039ba:	cmp    r13d,0xffffffff
  4039be:	je     0x4039f5
  4039c0:	mov    edx,r13d
  4039c3:	mov    r9,r15
  4039c6:	mov    r8d,ebx
  4039c9:	mov    ecx,r12d
  4039cc:	call   0x4033d0
  4039d1:	mov    esi,DWORD PTR [rip+0x2785]        # 0x40615c
  4039d7:	mov    eax,r12d
  4039da:	mov    edx,DWORD PTR [rip+0x8348]        # 0x40bd28
  4039e0:	sub    eax,r13d
  4039e3:	mov    DWORD PTR [rip+0x2757],0xffffffff        # 0x406144
  4039ed:	add    eax,esi
  4039ef:	mov    DWORD PTR [rip+0x2753],eax        # 0x406148
  4039f5:	add    esi,0x1
  4039f8:	mov    DWORD PTR [rip+0x275e],esi        # 0x40615c
  4039fe:	test   edx,edx
  403a00:	jne    0x403a14
  403a02:	mov    rsi,QWORD PTR [rip+0x2747]        # 0x406150
  403a09:	movzx  eax,BYTE PTR [rsi]
  403a0c:	test   al,al
  403a0e:	jne    0x403c0e
  403a14:	movsxd rbx,DWORD PTR [rip+0x2741]        # 0x40615c
  403a1b:	mov    DWORD PTR [rip+0x8303],0x0        # 0x40bd28
  403a25:	cmp    ebx,edi
  403a27:	mov    esi,ebx
  403a29:	jge    0x403b70
  403a2f:	movsxd rax,ebx
  403a32:	mov    r13,QWORD PTR [r15+rax*8]
  403a36:	cmp    BYTE PTR [r13+0x0],0x2d
  403a3b:	mov    QWORD PTR [rip+0x270e],r13        # 0x406150
  403a42:	jne    0x403980
  403a48:	movzx  eax,BYTE PTR [r13+0x1]
  403a4d:	test   al,al
  403a4f:	jne    0x403be1
  403a55:	mov    rcx,QWORD PTR [rsp+0x90]
  403a5d:	mov    edx,0x2d
  403a62:	call   0x4042f8
  403a67:	test   rax,rax
  403a6a:	je     0x403980
  403a70:	cmp    DWORD PTR [rip+0x26d1],0xffffffff        # 0x406148
  403a77:	mov    rsi,r13
  403a7a:	je     0x403a94
  403a7c:	cmp    DWORD PTR [rip+0x26c1],0xffffffff        # 0x406144
  403a83:	mov    eax,0x2d
  403a88:	jne    0x403c0e
  403a8e:	mov    DWORD PTR [rip+0x26b0],ebx        # 0x406144
  403a94:	cmp    QWORD PTR [rsp+0x98],0x0
  403a9d:	je     0x403e8c
  403aa3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  403aa7:	mov    eax,0x2d
  403aac:	je     0x403cde
  403ab2:	add    rsi,0x1
  403ab6:	xor    edx,edx
  403ab8:	mov    QWORD PTR [rip+0x2691],rsi        # 0x406150
  403abf:	jmp    0x403c62
  403ac4:	lea    rcx,[rip+0x405a]        # 0x407b25
  403acb:	call   0x404368
  403ad0:	test   rax,rax
  403ad3:	mov    edx,DWORD PTR [rip+0x824f]        # 0x40bd28
  403ad9:	setne  al
  403adc:	movzx  eax,al
  403adf:	mov    DWORD PTR [rip+0x265b],eax        # 0x406140
  403ae5:	mov    rax,QWORD PTR [rsp+0x90]
  403aed:	movzx  eax,BYTE PTR [rax]
  403af0:	cmp    al,0x2d
  403af2:	jne    0x40392c
  403af8:	or     DWORD PTR [rsp+0xa8],0x2
  403b00:	add    QWORD PTR [rsp+0x90],0x1
  403b09:	test   edx,edx
  403b0b:	mov    QWORD PTR [rip+0x820a],0x0        # 0x40bd20
  403b16:	je     0x403962
  403b1c:	jmp    0x403b30
  403b1e:	xchg   ax,ax
  403b20:	mov    DWORD PTR [rip+0x2622],ebx        # 0x406148
  403b26:	jmp    0x4039f5
  403b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b30:	mov    DWORD PTR [rip+0x260a],0xffffffff        # 0x406144
  403b3a:	mov    DWORD PTR [rip+0x2604],0xffffffff        # 0x406148
  403b44:	jmp    0x403962
  403b49:	nop    DWORD PTR [rax+0x0]
  403b50:	mov    DWORD PTR [rip+0x81ce],0x1        # 0x40bd28
  403b5a:	mov    DWORD PTR [rip+0x25f8],0x1        # 0x40615c
  403b64:	jmp    0x4038fe
  403b69:	nop    DWORD PTR [rax+0x0]
  403b70:	mov    esi,DWORD PTR [rip+0x25ce]        # 0x406144
  403b76:	lea    rax,[rip+0x3fb8]        # 0x407b35
  403b7d:	mov    QWORD PTR [rip+0x25cc],rax        # 0x406150
  403b84:	cmp    esi,0xffffffff
  403b87:	je     0x403cba
  403b8d:	mov    edi,DWORD PTR [rip+0x25b5]        # 0x406148
  403b93:	mov    r9,r15
  403b96:	mov    r8d,ebx
  403b99:	mov    edx,esi
  403b9b:	mov    ecx,edi
  403b9d:	sub    edi,esi
  403b9f:	call   0x4033d0
  403ba4:	add    DWORD PTR [rip+0x25b2],edi        # 0x40615c
  403baa:	mov    DWORD PTR [rip+0x2590],0xffffffff        # 0x406144
  403bb4:	mov    DWORD PTR [rip+0x258a],0xffffffff        # 0x406148
  403bbe:	mov    eax,0xffffffff
  403bc3:	add    rsp,0x38
  403bc7:	pop    rbx
  403bc8:	pop    rsi
  403bc9:	pop    rdi
  403bca:	pop    rbp
  403bcb:	pop    r12
  403bcd:	pop    r13
  403bcf:	pop    r14
  403bd1:	pop    r15
  403bd3:	ret    
  403bd4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  403bdc:	jmp    0x403944
  403be1:	mov    ebp,DWORD PTR [rip+0x2561]        # 0x406148
  403be7:	cmp    ebp,0xffffffff
  403bea:	je     0x403bfb
  403bec:	cmp    DWORD PTR [rip+0x2551],0xffffffff        # 0x406144
  403bf3:	jne    0x403bfb
  403bf5:	mov    DWORD PTR [rip+0x2549],ebx        # 0x406144
  403bfb:	lea    rsi,[r13+0x1]
  403bff:	cmp    al,0x2d
  403c01:	mov    QWORD PTR [rip+0x2548],rsi        # 0x406150
  403c08:	je     0x403dbf
  403c0e:	cmp    QWORD PTR [rsp+0x98],0x0
  403c17:	je     0x403cde
  403c1d:	movsxd rdx,DWORD PTR [rip+0x2538]        # 0x40615c
  403c24:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403c28:	je     0x403cde
  403c2e:	cmp    al,0x2d
  403c30:	je     0x403ab2
  403c36:	test   BYTE PTR [rsp+0xa8],0x4
  403c3e:	je     0x403cde
  403c44:	xor    edx,edx
  403c46:	cmp    al,0x3a
  403c48:	je     0x403c62
  403c4a:	mov    rcx,QWORD PTR [rsp+0x90]
  403c52:	movsx  edx,al
  403c55:	call   0x4042f8
  403c5a:	xor    edx,edx
  403c5c:	test   rax,rax
  403c5f:	setne  dl
  403c62:	mov    DWORD PTR [rsp+0x20],edx
  403c66:	mov    r9,QWORD PTR [rsp+0xa0]
  403c6e:	mov    rcx,r15
  403c71:	mov    r8,QWORD PTR [rsp+0x98]
  403c79:	mov    rdx,QWORD PTR [rsp+0x90]
  403c81:	call   0x403500
  403c86:	cmp    eax,0xffffffff
  403c89:	je     0x403cd4
  403c8b:	lea    rcx,[rip+0x3ea3]        # 0x407b35
  403c92:	mov    QWORD PTR [rip+0x24b7],rcx        # 0x406150
  403c99:	jmp    0x403bc3
  403c9e:	xchg   ax,ax
  403ca0:	add    ebx,0x1
  403ca3:	mov    QWORD PTR [rip+0x8076],r13        # 0x40bd20
  403caa:	mov    eax,0x1
  403caf:	mov    DWORD PTR [rip+0x24a7],ebx        # 0x40615c
  403cb5:	jmp    0x403bc3
  403cba:	mov    eax,DWORD PTR [rip+0x2488]        # 0x406148
  403cc0:	cmp    eax,0xffffffff
  403cc3:	je     0x403baa
  403cc9:	mov    DWORD PTR [rip+0x248d],eax        # 0x40615c
  403ccf:	jmp    0x403baa
  403cd4:	mov    rsi,QWORD PTR [rip+0x2475]        # 0x406150
  403cdb:	movzx  eax,BYTE PTR [rsi]
  403cde:	lea    rbp,[rsi+0x1]
  403ce2:	movsx  ebx,al
  403ce5:	cmp    ebx,0x3a
  403ce8:	mov    QWORD PTR [rip+0x2461],rbp        # 0x406150
  403cef:	je     0x403d54
  403cf1:	cmp    ebx,0x2d
  403cf4:	je     0x403e97
  403cfa:	mov    rcx,QWORD PTR [rsp+0x90]
  403d02:	mov    edx,ebx
  403d04:	call   0x4042f8
  403d09:	test   rax,rax
  403d0c:	je     0x403d54
  403d0e:	cmp    ebx,0x57
  403d11:	jne    0x403db6
  403d17:	cmp    QWORD PTR [rsp+0x98],0x0
  403d20:	je     0x403db6
  403d26:	movzx  edx,BYTE PTR [rax+0x1]
  403d2a:	cmp    dl,0x3b
  403d2d:	je     0x403e10
  403d33:	cmp    dl,0x3a
  403d36:	je     0x403eab
  403d3c:	cmp    BYTE PTR [rsi+0x1],0x0
  403d40:	mov    eax,ebx
  403d42:	jne    0x403bc3
  403d48:	add    DWORD PTR [rip+0x240d],0x1        # 0x40615c
  403d4f:	jmp    0x403bc3
  403d54:	cmp    BYTE PTR [rsi+0x1],0x0
  403d58:	jne    0x403d61
  403d5a:	add    DWORD PTR [rip+0x23fb],0x1        # 0x40615c
  403d61:	mov    ecx,DWORD PTR [rip+0x23f9]        # 0x406160
  403d67:	test   ecx,ecx
  403d69:	je     0x403d86
  403d6b:	mov    rax,QWORD PTR [rsp+0x90]
  403d73:	cmp    BYTE PTR [rax],0x3a
  403d76:	je     0x403d86
  403d78:	lea    rcx,[rip+0x3de1]        # 0x407b60
  403d7f:	mov    edx,ebx
  403d81:	call   0x403480
  403d86:	mov    DWORD PTR [rip+0x23cc],ebx        # 0x406158
  403d8c:	mov    eax,0x3f
  403d91:	jmp    0x403bc3
  403d96:	mov    rcx,QWORD PTR [rsp+0x90]
  403d9e:	mov    edx,0x2d
  403da3:	call   0x4042f8
  403da8:	test   rax,rax
  403dab:	je     0x403bbe
  403db1:	mov    ebx,0x2d
  403db6:	movzx  edx,BYTE PTR [rax+0x1]
  403dba:	jmp    0x403d33
  403dbf:	cmp    BYTE PTR [r13+0x2],0x0
  403dc4:	jne    0x403a94
  403dca:	mov    esi,DWORD PTR [rip+0x2374]        # 0x406144
  403dd0:	lea    r8d,[rbx+0x1]
  403dd4:	lea    rax,[rip+0x3d5a]        # 0x407b35
  403ddb:	mov    DWORD PTR [rip+0x237a],r8d        # 0x40615c
  403de2:	mov    QWORD PTR [rip+0x2367],rax        # 0x406150
  403de9:	cmp    esi,0xffffffff
  403dec:	je     0x403baa
  403df2:	mov    ecx,ebp
  403df4:	mov    r9,r15
  403df7:	mov    edx,esi
  403df9:	call   0x4033d0
  403dfe:	sub    ebp,esi
  403e00:	add    DWORD PTR [rip+0x2356],ebp        # 0x40615c
  403e06:	jmp    0x403baa
  403e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	cmp    BYTE PTR [rsi+0x1],0x0
  403e14:	jne    0x403f65
  403e1a:	mov    eax,DWORD PTR [rip+0x233c]        # 0x40615c
  403e20:	add    eax,0x1
  403e23:	cmp    edi,eax
  403e25:	mov    DWORD PTR [rip+0x2331],eax        # 0x40615c
  403e2b:	jg     0x403f58
  403e31:	mov    edx,DWORD PTR [rip+0x2329]        # 0x406160
  403e37:	lea    rax,[rip+0x3cf7]        # 0x407b35
  403e3e:	mov    QWORD PTR [rip+0x230b],rax        # 0x406150
  403e45:	test   edx,edx
  403e47:	je     0x403e67
  403e49:	mov    rax,QWORD PTR [rsp+0x90]
  403e51:	cmp    BYTE PTR [rax],0x3a
  403e54:	je     0x403e67
  403e56:	lea    rcx,[rip+0x3dc3]        # 0x407c20
  403e5d:	mov    edx,0x57
  403e62:	call   0x403480
  403e67:	mov    rax,QWORD PTR [rsp+0x90]
  403e6f:	mov    DWORD PTR [rip+0x22df],0x57        # 0x406158
  403e79:	cmp    BYTE PTR [rax],0x3a
  403e7c:	je     0x403f4e
  403e82:	mov    eax,0x3f
  403e87:	jmp    0x403bc3
  403e8c:	lea    rbp,[rsi+0x1]
  403e90:	mov    QWORD PTR [rip+0x22b9],rbp        # 0x406150
  403e97:	cmp    BYTE PTR [rsi+0x1],0x0
  403e9b:	je     0x403d96
  403ea1:	mov    ebx,0x2d
  403ea6:	jmp    0x403d61
  403eab:	mov    QWORD PTR [rip+0x7e6a],0x0        # 0x40bd20
  403eb6:	cmp    BYTE PTR [rsi+0x1],0x0
  403eba:	je     0x403ee7
  403ebc:	mov    eax,DWORD PTR [rip+0x229a]        # 0x40615c
  403ec2:	mov    QWORD PTR [rip+0x7e57],rbp        # 0x40bd20
  403ec9:	lea    rcx,[rip+0x3c65]        # 0x407b35
  403ed0:	add    eax,0x1
  403ed3:	mov    DWORD PTR [rip+0x2283],eax        # 0x40615c
  403ed9:	mov    eax,ebx
  403edb:	mov    QWORD PTR [rip+0x226e],rcx        # 0x406150
  403ee2:	jmp    0x403bc3
  403ee7:	cmp    BYTE PTR [rax+0x2],0x3a
  403eeb:	mov    eax,DWORD PTR [rip+0x226b]        # 0x40615c
  403ef1:	je     0x403ec9
  403ef3:	add    eax,0x1
  403ef6:	cmp    edi,eax
  403ef8:	mov    DWORD PTR [rip+0x225e],eax        # 0x40615c
  403efe:	jg     0x403f92
  403f04:	lea    rax,[rip+0x3c2a]        # 0x407b35
  403f0b:	mov    QWORD PTR [rip+0x223e],rax        # 0x406150
  403f12:	mov    eax,DWORD PTR [rip+0x2248]        # 0x406160
  403f18:	test   eax,eax
  403f1a:	je     0x403f37
  403f1c:	mov    rax,QWORD PTR [rsp+0x90]
  403f24:	cmp    BYTE PTR [rax],0x3a
  403f27:	je     0x403f37
  403f29:	lea    rcx,[rip+0x3cf0]        # 0x407c20
  403f30:	mov    edx,ebx
  403f32:	call   0x403480
  403f37:	mov    rax,QWORD PTR [rsp+0x90]
  403f3f:	mov    DWORD PTR [rip+0x2213],ebx        # 0x406158
  403f45:	cmp    BYTE PTR [rax],0x3a
  403f48:	jne    0x403e82
  403f4e:	mov    eax,0x3a
  403f53:	jmp    0x403bc3
  403f58:	cdqe   
  403f5a:	mov    rax,QWORD PTR [r15+rax*8]
  403f5e:	mov    QWORD PTR [rip+0x21eb],rax        # 0x406150
  403f65:	mov    r9,QWORD PTR [rsp+0xa0]
  403f6d:	mov    r8,QWORD PTR [rsp+0x98]
  403f75:	mov    rcx,r15
  403f78:	mov    rdx,QWORD PTR [rsp+0x90]
  403f80:	mov    DWORD PTR [rsp+0x20],0x0
  403f88:	call   0x403500
  403f8d:	jmp    0x403c8b
  403f92:	movsxd rdx,eax
  403f95:	mov    rdx,QWORD PTR [r15+rdx*8]
  403f99:	mov    QWORD PTR [rip+0x7d80],rdx        # 0x40bd20
  403fa0:	jmp    0x403ec9
  403fa5:	nop
  403fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fb0:	sub    rsp,0x38
  403fb4:	xor    r9d,r9d
  403fb7:	mov    DWORD PTR [rsp+0x28],0x0
  403fbf:	mov    QWORD PTR [rsp+0x20],0x0
  403fc8:	call   0x4038c0
  403fcd:	add    rsp,0x38
  403fd1:	ret    
  403fd2:	nop    DWORD PTR [rax+0x0]
  403fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fe0:	sub    rsp,0x38
  403fe4:	mov    rax,QWORD PTR [rsp+0x60]
  403fe9:	mov    DWORD PTR [rsp+0x28],0x1
  403ff1:	mov    QWORD PTR [rsp+0x20],rax
  403ff6:	call   0x4038c0
  403ffb:	add    rsp,0x38
  403fff:	ret    
  404000:	sub    rsp,0x38
  404004:	mov    rax,QWORD PTR [rsp+0x60]
  404009:	mov    DWORD PTR [rsp+0x28],0x5
  404011:	mov    QWORD PTR [rsp+0x20],rax
  404016:	call   0x4038c0
  40401b:	add    rsp,0x38
  40401f:	ret    
  404020:	push   r12
  404022:	push   rbp
  404023:	push   rdi
  404024:	push   rsi
  404025:	push   rbx
  404026:	sub    rsp,0x250
  40402d:	mov    rbx,rdx
  404030:	mov    rsi,rcx
  404033:	mov    ecx,0x4000
  404038:	mov    r12d,r8d
  40403b:	call   0x404360
  404040:	test   rbx,rbx
  404043:	mov    rbp,rax
  404046:	je     0x404110
  40404c:	cmp    WORD PTR [rbx],0x0
  404050:	lea    rax,[rip+0x3c09]        # 0x407c60
  404057:	cmove  rbx,rax
  40405b:	test   rsi,rsi
  40405e:	je     0x404101
  404064:	cmp    WORD PTR [rsi],0x0
  404068:	lea    rax,[rip+0x3c05]        # 0x407c74
  40406f:	cmove  rsi,rax
  404073:	lea    rdi,[rsp+0x40]
  404078:	xor    ecx,ecx
  40407a:	mov    r8d,0x104
  404080:	mov    rdx,rdi
  404083:	call   QWORD PTR [rip+0x845f]        # 0x40c4e8
  404089:	test   eax,eax
  40408b:	je     0x4040f0
  40408d:	lea    r8,[rip+0x3be4]        # 0x407c78
  404094:	mov    QWORD PTR [rsp+0x30],rsi
  404099:	mov    DWORD PTR [rsp+0x28],r12d
  40409e:	mov    QWORD PTR [rsp+0x20],rbx
  4040a3:	mov    r9,rdi
  4040a6:	mov    edx,0x1fff
  4040ab:	mov    rcx,rbp
  4040ae:	call   0x4043f8
  4040b3:	mov    rax,QWORD PTR [rip+0x3e26]        # 0x407ee0
  4040ba:	mov    eax,DWORD PTR [rax]
  4040bc:	test   eax,eax
  4040be:	je     0x404135
  4040c0:	xor    ecx,ecx
  4040c2:	mov    r9d,0x12012
  4040c8:	lea    r8,[rip+0x3c41]        # 0x407d10
  4040cf:	mov    rdx,rbp
  4040d2:	call   QWORD PTR [rip+0x8690]        # 0x40c768
  4040d8:	cmp    eax,0x3
  4040db:	je     0x404121
  4040dd:	cmp    eax,0x5
  4040e0:	jne    0x40411c
  4040e2:	add    rsp,0x250
  4040e9:	pop    rbx
  4040ea:	pop    rsi
  4040eb:	pop    rdi
  4040ec:	pop    rbp
  4040ed:	pop    r12
  4040ef:	ret    
  4040f0:	lea    rdx,[rip+0x3b69]        # 0x407c60
  4040f7:	mov    rcx,rdi
  4040fa:	call   0x4042c0
  4040ff:	jmp    0x40408d
  404101:	lea    rsi,[rip+0x3b6c]        # 0x407c74
  404108:	jmp    0x404073
  40410d:	nop    DWORD PTR [rax]
  404110:	lea    rbx,[rip+0x3b49]        # 0x407c60
  404117:	jmp    0x40405b
  40411c:	call   0x4043d0
  404121:	mov    ecx,0x16
  404126:	call   0x404328
  40412b:	mov    ecx,0x3
  404130:	call   0x404418
  404135:	call   0x404450
  40413a:	lea    rdx,[rip+0x3bbf]        # 0x407d00
  404141:	lea    rcx,[rax+0x60]
  404145:	mov    r8,rbp
  404148:	call   0x404378
  40414d:	call   0x4043d0
  404152:	nop
  404153:	nop    DWORD PTR [rax]
  404156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404160:	push   rbp
  404161:	push   rdi
  404162:	push   rsi
  404163:	push   rbx
  404164:	sub    rsp,0x38
  404168:	mov    rdi,rdx
  40416b:	mov    DWORD PTR [rsp+0x2c],r8d
  404170:	mov    rbp,rcx
  404173:	call   0x4042e8
  404178:	lea    rcx,[rax+rax*1+0x2]
  40417d:	call   0x404360
  404182:	mov    rcx,rdi
  404185:	mov    rsi,rax
  404188:	call   0x4042e8
  40418d:	lea    rcx,[rax+rax*1+0x2]
  404192:	call   0x404360
  404197:	movzx  r9d,BYTE PTR [rbp+0x0]
  40419c:	xor    r10d,r10d
  40419f:	mov    rbx,rax
  4041a2:	mov    r8d,DWORD PTR [rsp+0x2c]
  4041a7:	test   r9b,r9b
  4041aa:	je     0x4041c7
  4041ac:	nop    DWORD PTR [rax+0x0]
  4041b0:	mov    WORD PTR [rsi+r10*2],r9w
  4041b5:	add    r10,0x1
  4041b9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  4041bf:	test   r9b,r9b
  4041c2:	jne    0x4041b0
  4041c4:	add    r10,r10
  4041c7:	movzx  r9d,BYTE PTR [rdi]
  4041cb:	xor    edx,edx
  4041cd:	mov    WORD PTR [rsi+r10*1],dx
  4041d2:	xor    r10d,r10d
  4041d5:	test   r9b,r9b
  4041d8:	je     0x4041f6
  4041da:	nop    WORD PTR [rax+rax*1+0x0]
  4041e0:	mov    WORD PTR [rbx+r10*2],r9w
  4041e5:	add    r10,0x1
  4041e9:	movzx  r9d,BYTE PTR [rdi+r10*1]
  4041ee:	test   r9b,r9b
  4041f1:	jne    0x4041e0
  4041f3:	add    r10,r10
  4041f6:	xor    eax,eax
  4041f8:	mov    rdx,rbx
  4041fb:	mov    rcx,rsi
  4041fe:	mov    WORD PTR [rbx+r10*1],ax
  404203:	call   0x404020
  404208:	mov    rcx,rsi
  40420b:	call   0x404388
  404210:	mov    rcx,rbx
  404213:	add    rsp,0x38
  404217:	pop    rbx
  404218:	pop    rsi
  404219:	pop    rdi
  40421a:	pop    rbp
  40421b:	jmp    0x404388
  404220:	push   r12
  404222:	push   rbp
  404223:	push   rdi
  404224:	push   rsi
  404225:	push   rbx
  404226:	sub    rsp,0x30
  40422a:	lea    rsi,[rsp+0x70]
  40422f:	mov    QWORD PTR [rsp+0x70],r8
  404234:	mov    QWORD PTR [rsp+0x78],r9
  404239:	mov    r8,rdx
  40423c:	mov    r12,rcx
  40423f:	mov    rbp,rdx
  404242:	xor    ecx,ecx
  404244:	xor    edx,edx
  404246:	mov    r9,rsi
  404249:	mov    QWORD PTR [rsp+0x28],rsi
  40424e:	call   0x4043d8
  404253:	test   eax,eax
  404255:	mov    ebx,eax
  404257:	js     0x40428c
  404259:	lea    edi,[rax+0x1]
  40425c:	movsxd rdi,edi
  40425f:	mov    rcx,rdi
  404262:	call   0x404360
  404267:	test   rax,rax
  40426a:	mov    QWORD PTR [r12],rax
  40426e:	je     0x4042a0
  404270:	mov    rdx,rdi
  404273:	mov    r9,rsi
  404276:	mov    r8,rbp
  404279:	mov    rcx,rax
  40427c:	call   0x4043d8
  404281:	mov    rdx,QWORD PTR [r12]
  404285:	movsxd rax,ebx
  404288:	mov    BYTE PTR [rdx+rax*1],0x0
  40428c:	mov    eax,ebx
  40428e:	add    rsp,0x30
  404292:	pop    rbx
  404293:	pop    rsi
  404294:	pop    rdi
  404295:	pop    rbp
  404296:	pop    r12
  404298:	ret    
  404299:	nop    DWORD PTR [rax+0x0]
  4042a0:	mov    ebx,0xffffffff
  4042a5:	jmp    0x40428c
  4042a7:	nop
  4042a8:	nop
  4042a9:	nop
  4042aa:	nop
  4042ab:	nop
  4042ac:	nop
  4042ad:	nop
  4042ae:	nop
  4042af:	nop
  4042b0:	jmp    QWORD PTR [rip+0x84a2]        # 0x40c758
  4042b6:	nop
  4042b7:	nop
  4042b8:	jmp    QWORD PTR [rip+0x8492]        # 0x40c750
  4042be:	nop
  4042bf:	nop
  4042c0:	jmp    QWORD PTR [rip+0x8482]        # 0x40c748
  4042c6:	nop
  4042c7:	nop
  4042c8:	jmp    QWORD PTR [rip+0x8472]        # 0x40c740
  4042ce:	nop
  4042cf:	nop
  4042d0:	jmp    QWORD PTR [rip+0x8462]        # 0x40c738
  4042d6:	nop
  4042d7:	nop
  4042d8:	jmp    QWORD PTR [rip+0x8452]        # 0x40c730
  4042de:	nop
  4042df:	nop
  4042e0:	jmp    QWORD PTR [rip+0x8442]        # 0x40c728
  4042e6:	nop
  4042e7:	nop
  4042e8:	jmp    QWORD PTR [rip+0x8432]        # 0x40c720
  4042ee:	nop
  4042ef:	nop
  4042f0:	jmp    QWORD PTR [rip+0x8422]        # 0x40c718
  4042f6:	nop
  4042f7:	nop
  4042f8:	jmp    QWORD PTR [rip+0x8412]        # 0x40c710
  4042fe:	nop
  4042ff:	nop
  404300:	jmp    QWORD PTR [rip+0x8402]        # 0x40c708
  404306:	nop
  404307:	nop
  404308:	jmp    QWORD PTR [rip+0x83f2]        # 0x40c700
  40430e:	nop
  40430f:	nop
  404310:	jmp    QWORD PTR [rip+0x83e2]        # 0x40c6f8
  404316:	nop
  404317:	nop
  404318:	jmp    QWORD PTR [rip+0x83d2]        # 0x40c6f0
  40431e:	nop
  40431f:	nop
  404320:	jmp    QWORD PTR [rip+0x83c2]        # 0x40c6e8
  404326:	nop
  404327:	nop
  404328:	jmp    QWORD PTR [rip+0x83b2]        # 0x40c6e0
  40432e:	nop
  40432f:	nop
  404330:	jmp    QWORD PTR [rip+0x83a2]        # 0x40c6d8
  404336:	nop
  404337:	nop
  404338:	jmp    QWORD PTR [rip+0x8392]        # 0x40c6d0
  40433e:	nop
  40433f:	nop
  404340:	jmp    QWORD PTR [rip+0x8382]        # 0x40c6c8
  404346:	nop
  404347:	nop
  404348:	jmp    QWORD PTR [rip+0x8372]        # 0x40c6c0
  40434e:	nop
  40434f:	nop
  404350:	jmp    QWORD PTR [rip+0x8362]        # 0x40c6b8
  404356:	nop
  404357:	nop
  404358:	jmp    QWORD PTR [rip+0x8352]        # 0x40c6b0
  40435e:	nop
  40435f:	nop
  404360:	jmp    QWORD PTR [rip+0x8342]        # 0x40c6a8
  404366:	nop
  404367:	nop
  404368:	jmp    QWORD PTR [rip+0x8332]        # 0x40c6a0
  40436e:	nop
  40436f:	nop
  404370:	jmp    QWORD PTR [rip+0x8322]        # 0x40c698
  404376:	nop
  404377:	nop
  404378:	jmp    QWORD PTR [rip+0x8312]        # 0x40c690
  40437e:	nop
  40437f:	nop
  404380:	jmp    QWORD PTR [rip+0x8302]        # 0x40c688
  404386:	nop
  404387:	nop
  404388:	jmp    QWORD PTR [rip+0x82f2]        # 0x40c680
  40438e:	nop
  40438f:	nop
  404390:	jmp    QWORD PTR [rip+0x82e2]        # 0x40c678
  404396:	nop
  404397:	nop
  404398:	jmp    QWORD PTR [rip+0x82d2]        # 0x40c670
  40439e:	nop
  40439f:	nop
  4043a0:	jmp    QWORD PTR [rip+0x82c2]        # 0x40c668
  4043a6:	nop
  4043a7:	nop
  4043a8:	jmp    QWORD PTR [rip+0x82b2]        # 0x40c660
  4043ae:	nop
  4043af:	nop
  4043b0:	jmp    QWORD PTR [rip+0x82a2]        # 0x40c658
  4043b6:	nop
  4043b7:	nop
  4043b8:	jmp    QWORD PTR [rip+0x8292]        # 0x40c650
  4043be:	nop
  4043bf:	nop
  4043c0:	jmp    QWORD PTR [rip+0x8282]        # 0x40c648
  4043c6:	nop
  4043c7:	nop
  4043c8:	jmp    QWORD PTR [rip+0x8272]        # 0x40c640
  4043ce:	nop
  4043cf:	nop
  4043d0:	jmp    QWORD PTR [rip+0x8262]        # 0x40c638
  4043d6:	nop
  4043d7:	nop
  4043d8:	jmp    QWORD PTR [rip+0x8252]        # 0x40c630
  4043de:	nop
  4043df:	nop
  4043e0:	jmp    QWORD PTR [rip+0x8242]        # 0x40c628
  4043e6:	nop
  4043e7:	nop
  4043e8:	jmp    QWORD PTR [rip+0x8232]        # 0x40c620
  4043ee:	nop
  4043ef:	nop
  4043f0:	jmp    QWORD PTR [rip+0x8222]        # 0x40c618
  4043f6:	nop
  4043f7:	nop
  4043f8:	jmp    QWORD PTR [rip+0x8212]        # 0x40c610
  4043fe:	nop
  4043ff:	nop
  404400:	jmp    QWORD PTR [rip+0x8202]        # 0x40c608
  404406:	nop
  404407:	nop
  404408:	jmp    QWORD PTR [rip+0x81f2]        # 0x40c600
  40440e:	nop
  40440f:	nop
  404410:	jmp    QWORD PTR [rip+0x81e2]        # 0x40c5f8
  404416:	nop
  404417:	nop
  404418:	jmp    QWORD PTR [rip+0x81ca]        # 0x40c5e8
  40441e:	nop
  40441f:	nop
  404420:	jmp    QWORD PTR [rip+0x81ba]        # 0x40c5e0
  404426:	nop
  404427:	nop
  404428:	jmp    QWORD PTR [rip+0x81aa]        # 0x40c5d8
  40442e:	nop
  40442f:	nop
  404430:	jmp    QWORD PTR [rip+0x819a]        # 0x40c5d0
  404436:	nop
  404437:	nop
  404438:	jmp    QWORD PTR [rip+0x8182]        # 0x40c5c0
  40443e:	nop
  40443f:	nop
  404440:	jmp    QWORD PTR [rip+0x8172]        # 0x40c5b8
  404446:	nop
  404447:	nop
  404448:	jmp    QWORD PTR [rip+0x8162]        # 0x40c5b0
  40444e:	nop
  40444f:	nop
  404450:	jmp    QWORD PTR [rip+0x8152]        # 0x40c5a8
  404456:	nop
  404457:	nop
  404458:	jmp    QWORD PTR [rip+0x813a]        # 0x40c598
  40445e:	nop
  40445f:	nop
  404460:	jmp    QWORD PTR [rip+0x812a]        # 0x40c590
  404466:	nop
  404467:	nop
  404468:	jmp    QWORD PTR [rip+0x8112]        # 0x40c580
  40446e:	nop
  40446f:	nop
  404470:	mov    rax,QWORD PTR [rip+0x7849]        # 0x40bcc0
  404477:	ret    
  404478:	nop    DWORD PTR [rax+rax*1+0x0]
  404480:	mov    rax,rcx
  404483:	xchg   QWORD PTR [rip+0x7836],rax        # 0x40bcc0
  40448a:	ret    
  40448b:	nop
  40448c:	nop
  40448d:	nop
  40448e:	nop
  40448f:	nop
  404490:	jmp    QWORD PTR [rip+0x82d2]        # 0x40c768
  404496:	nop
  404497:	nop
  404498:	nop    DWORD PTR [rax+rax*1+0x0]
  4044a0:	jmp    QWORD PTR [rip+0x80ca]        # 0x40c570
  4044a6:	nop
  4044a7:	nop
  4044a8:	jmp    QWORD PTR [rip+0x80ba]        # 0x40c568
  4044ae:	nop
  4044af:	nop
  4044b0:	jmp    QWORD PTR [rip+0x80aa]        # 0x40c560
  4044b6:	nop
  4044b7:	nop
  4044b8:	jmp    QWORD PTR [rip+0x809a]        # 0x40c558
  4044be:	nop
  4044bf:	nop
  4044c0:	jmp    QWORD PTR [rip+0x808a]        # 0x40c550
  4044c6:	nop
  4044c7:	nop
  4044c8:	jmp    QWORD PTR [rip+0x807a]        # 0x40c548
  4044ce:	nop
  4044cf:	nop
  4044d0:	jmp    QWORD PTR [rip+0x806a]        # 0x40c540
  4044d6:	nop
  4044d7:	nop
  4044d8:	jmp    QWORD PTR [rip+0x805a]        # 0x40c538
  4044de:	nop
  4044df:	nop
  4044e0:	jmp    QWORD PTR [rip+0x804a]        # 0x40c530
  4044e6:	nop
  4044e7:	nop
  4044e8:	jmp    QWORD PTR [rip+0x803a]        # 0x40c528
  4044ee:	nop
  4044ef:	nop
  4044f0:	jmp    QWORD PTR [rip+0x802a]        # 0x40c520
  4044f6:	nop
  4044f7:	nop
  4044f8:	jmp    QWORD PTR [rip+0x801a]        # 0x40c518
  4044fe:	nop
  4044ff:	nop
  404500:	jmp    QWORD PTR [rip+0x800a]        # 0x40c510
  404506:	nop
  404507:	nop
  404508:	jmp    QWORD PTR [rip+0x7ffa]        # 0x40c508
  40450e:	nop
  40450f:	nop
  404510:	jmp    QWORD PTR [rip+0x7fea]        # 0x40c500
  404516:	nop
  404517:	nop
  404518:	jmp    QWORD PTR [rip+0x7fda]        # 0x40c4f8
  40451e:	nop
  40451f:	nop
  404520:	jmp    QWORD PTR [rip+0x7fca]        # 0x40c4f0
  404526:	nop
  404527:	nop
  404528:	jmp    QWORD PTR [rip+0x7fba]        # 0x40c4e8
  40452e:	nop
  40452f:	nop
  404530:	jmp    QWORD PTR [rip+0x7faa]        # 0x40c4e0
  404536:	nop
  404537:	nop
  404538:	jmp    QWORD PTR [rip+0x7f9a]        # 0x40c4d8
  40453e:	nop
  40453f:	nop
  404540:	jmp    QWORD PTR [rip+0x7f8a]        # 0x40c4d0
  404546:	nop
  404547:	nop
  404548:	jmp    QWORD PTR [rip+0x7f7a]        # 0x40c4c8
  40454e:	nop
  40454f:	nop
  404550:	jmp    QWORD PTR [rip+0x7f6a]        # 0x40c4c0
  404556:	nop
  404557:	nop
  404558:	jmp    QWORD PTR [rip+0x7f5a]        # 0x40c4b8
  40455e:	nop
  40455f:	nop
  404560:	push   r15
  404562:	push   r14
  404564:	push   r13
  404566:	push   r12
  404568:	push   rbp
  404569:	push   rdi
  40456a:	push   rsi
  40456b:	push   rbx
  40456c:	sub    rsp,0x4d8
  404573:	mov    DWORD PTR [rsp+0x520],ecx
  40457a:	mov    rbx,rdx
  40457d:	call   0x401d30
  404582:	lea    rdx,[rip+0x2c0d]        # 0x407196
  404589:	xor    ecx,ecx
  40458b:	call   0x404310
  404590:	call   0x401a50
  404595:	test   eax,eax
  404597:	je     0x4053a5
  40459d:	lea    rdx,[rip+0x6c9c]        # 0x40b240
  4045a4:	xor    eax,eax
  4045a6:	mov    ecx,0x16
  4045ab:	test   rbx,rbx
  4045ae:	mov    rdi,rdx
  4045b1:	rep stos QWORD PTR es:[rdi],rax
  4045b4:	je     0x40477c
  4045ba:	mov    rcx,QWORD PTR [rbx]
  4045bd:	call   0x403120
  4045c2:	mov    QWORD PTR [rip+0x6c8f],rax        # 0x40b258
  4045c9:	call   0x401a48
  4045ce:	test   rax,rax
  4045d1:	mov    rsi,rax
  4045d4:	je     0x4053d5
  4045da:	mov    rdx,QWORD PTR [rip+0x6c77]        # 0x40b258
  4045e1:	mov    r8d,0x5
  4045e7:	mov    rcx,rax
  4045ea:	call   0x401a10
  4045ef:	mov    edx,0x80
  4045f4:	lea    rcx,[rip+0x6c65]        # 0x40b260
  4045fb:	call   QWORD PTR [rip+0x8177]        # 0x40c778
  404601:	cmp    eax,0xffffffff
  404604:	je     0x40461b
  404606:	lea    rdx,[rip+0x6c53]        # 0x40b260
  40460d:	mov    r8d,0x1
  404613:	mov    rcx,rsi
  404616:	call   0x401a10
  40461b:	mov    r15,QWORD PTR [rip+0x390e]        # 0x407f30
  404622:	mov    r14,QWORD PTR [rip+0x7fef]        # 0x40c618
  404629:	mov    r13,r15
  40462c:	mov    r12,r14
  40462f:	mov    ecx,DWORD PTR [rsp+0x520]
  404636:	lea    r8,[rip+0x2d48]        # 0x407385
  40463d:	mov    rdx,rbx
  404640:	call   0x403fb0
  404645:	cmp    eax,0xffffffff
  404648:	je     0x40479a
  40464e:	lea    r8d,[rax-0x44]
  404652:	cmp    r8d,0x32
  404656:	ja     0x404752
  40465c:	lea    rax,[rip+0x2fe5]        # 0x407648
  404663:	movsxd rdx,DWORD PTR [rax+r8*4]
  404667:	add    rax,rdx
  40466a:	jmp    rax
  40466c:	mov    rdx,QWORD PTR [rbx]
  40466f:	lea    rcx,[rip+0x2c47]        # 0x4072bd
  404676:	lea    r8,[rip+0x2b73]        # 0x4071f0
  40467d:	call   0x404338
  404682:	mov    ecx,0x1
  404687:	call   0x4043c0
  40468c:	mov    rax,QWORD PTR [rip+0x389d]        # 0x407f30
  404693:	mov    rcx,QWORD PTR [rax]
  404696:	call   QWORD PTR [rip+0x7f7c]        # 0x40c618
  40469c:	mov    QWORD PTR [rip+0x6c45],rax        # 0x40b2e8
  4046a3:	jmp    0x40462f
  4046a5:	mov    rcx,QWORD PTR [r15]
  4046a8:	call   r14
  4046ab:	mov    QWORD PTR [rip+0x6c2e],rax        # 0x40b2e0
  4046b2:	jmp    0x40462f
  4046b7:	mov    rax,QWORD PTR [rip+0x3872]        # 0x407f30
  4046be:	mov    r8d,0x2
  4046c4:	mov    rcx,rsi
  4046c7:	mov    rdx,QWORD PTR [rax]
  4046ca:	call   0x401a10
  4046cf:	jmp    0x40462f
  4046d4:	mov    rax,QWORD PTR [rip+0x3855]        # 0x407f30
  4046db:	mov    rcx,QWORD PTR [rax]
  4046de:	call   QWORD PTR [rip+0x7f34]        # 0x40c618
  4046e4:	mov    QWORD PTR [rip+0x6b5d],rax        # 0x40b248
  4046eb:	jmp    0x40462f
  4046f0:	mov    rax,QWORD PTR [rip+0x3839]        # 0x407f30
  4046f7:	mov    rcx,QWORD PTR [rax]
  4046fa:	call   0x401aa0
  4046ff:	mov    rcx,rsi
  404702:	mov    rbp,rax
  404705:	mov    r8d,0x3
  40470b:	mov    rdx,rax
  40470e:	mov    rdi,rbp
  404711:	call   0x401a10
  404716:	xor    eax,eax
  404718:	or     rcx,0xffffffffffffffff
  40471c:	xor    edx,edx
  40471e:	repnz scas al,BYTE PTR es:[rdi]
  404720:	not    rcx
  404723:	mov    r8,rcx
  404726:	mov    rcx,rbp
  404729:	sub    r8,0x1
  40472d:	call   0x404348
  404732:	mov    rcx,rbp
  404735:	call   0x404388
  40473a:	jmp    0x40462f
  40473f:	mov    rcx,QWORD PTR [r13+0x0]
  404743:	call   r12
  404746:	mov    QWORD PTR [rip+0x6b03],rax        # 0x40b250
  40474d:	jmp    0x40462f
  404752:	mov    rbx,QWORD PTR [rip+0x6aff]        # 0x40b258
  404759:	call   QWORD PTR [rip+0x7e49]        # 0x40c5a8
  40475f:	lea    rdx,[rip+0x2b62]        # 0x4072c8
  404766:	lea    rcx,[rax+0x60]
  40476a:	mov    r8,rbx
  40476d:	call   0x4043a0
  404772:	mov    ecx,0x1
  404777:	call   0x4043c0
  40477c:	lea    rdx,[rip+0x28bf]        # 0x407042
  404783:	lea    rcx,[rip+0x2a29]        # 0x4071b3
  40478a:	mov    r8d,0x2a2
  404790:	call   0x404160
  404795:	jmp    0x4045ba
  40479a:	cmp    QWORD PTR [rip+0x6aa6],0x0        # 0x40b248
  4047a2:	je     0x404752
  4047a4:	mov    rax,QWORD PTR [rip+0x3795]        # 0x407f40
  4047ab:	lea    rcx,[rip+0xffffffffffffd16e]        # 0x401920
  4047b2:	mov    eax,DWORD PTR [rax]
  4047b4:	mov    DWORD PTR [rip+0x6a86],eax        # 0x40b240
  4047ba:	call   0x401a60
  4047bf:	lea    rcx,[rip+0xffffffffffffcd6a]        # 0x401530
  4047c6:	call   0x401a40
  4047cb:	cmp    QWORD PTR [rip+0x6b0d],0x0        # 0x40b2e0
  4047d3:	je     0x4047fd
  4047d5:	mov    rdi,QWORD PTR [rip+0x7dcc]        # 0x40c5a8
  4047dc:	call   rdi
  4047de:	mov    rcx,QWORD PTR [rip+0x6afb]        # 0x40b2e0
  4047e5:	lea    rdx,[rip+0x2ba9]        # 0x407395
  4047ec:	mov    r8,rax
  4047ef:	call   0x404380
  4047f4:	test   rax,rax
  4047f7:	je     0x40538c
  4047fd:	cmp    QWORD PTR [rip+0x6ae3],0x0        # 0x40b2e8
  404805:	je     0x404830
  404807:	mov    rdi,QWORD PTR [rip+0x7d9a]        # 0x40c5a8
  40480e:	call   rdi
  404810:	mov    rcx,QWORD PTR [rip+0x6ad1]        # 0x40b2e8
  404817:	lea    r8,[rax+0x30]
  40481b:	lea    rdx,[rip+0x2b91]        # 0x4073b3
  404822:	call   0x404380
  404827:	test   rax,rax
  40482a:	je     0x40534f
  404830:	mov    rdx,QWORD PTR [rip+0x6a11]        # 0x40b248
  404837:	mov    r8d,0x1
  40483d:	mov    rcx,rsi
  404840:	call   0x4019e0
  404845:	test   rax,rax
  404848:	mov    r13,rax
  40484b:	je     0x40545f
  404851:	mov    rdx,QWORD PTR [rip+0x69f8]        # 0x40b250
  404858:	test   rdx,rdx
  40485b:	je     0x404865
  40485d:	mov    rcx,rax
  404860:	call   0x4019e8
  404865:	movsxd rax,DWORD PTR [rip+0x69d4]        # 0x40b240
  40486c:	lea    r14,[rsp+0xd0]
  404874:	mov    QWORD PTR [rsp+0x68],0x0
  40487d:	mov    DWORD PTR [rsp+0x80],eax
  404884:	lea    rax,[rbx+rax*8]
  404888:	mov    QWORD PTR [rsp+0x78],rax
  40488d:	lea    rax,[rsp+0xa0]
  404895:	mov    QWORD PTR [rsp+0x58],rax
  40489a:	lea    rax,[rsp+0xa3]
  4048a2:	mov    QWORD PTR [rsp+0x70],rax
  4048a7:	mov    rax,QWORD PTR [rip+0x7cfa]        # 0x40c5a8
  4048ae:	mov    QWORD PTR [rsp+0x88],rax
  4048b6:	mov    eax,DWORD PTR [rsp+0x80]
  4048bd:	add    eax,DWORD PTR [rsp+0x68]
  4048c1:	cmp    DWORD PTR [rsp+0x520],eax
  4048c8:	jle    0x4052c9
  4048ce:	mov    rax,QWORD PTR [rsp+0x78]
  4048d3:	mov    rsi,QWORD PTR [rsp+0x68]
  4048d8:	mov    edx,0x2e
  4048dd:	mov    rsi,QWORD PTR [rax+rsi*8]
  4048e1:	mov    rcx,rsi
  4048e4:	call   0x4042f8
  4048e9:	test   rax,rax
  4048ec:	je     0x405265
  4048f2:	mov    rdx,rax
  4048f5:	mov    r8d,0x1ff
  4048fb:	lea    rdi,[r14+0x200]
  404902:	sub    rdx,rsi
  404905:	cmp    rdx,0x1ff
  40490c:	cmovbe r8,rdx
  404910:	cmp    r8d,0x8
  404914:	jb     0x40491f
  404916:	mov    ecx,r8d
  404919:	shr    ecx,0x3
  40491c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40491f:	xor    ecx,ecx
  404921:	test   r8b,0x4
  404925:	je     0x40492d
  404927:	mov    edx,DWORD PTR [rsi]
  404929:	mov    cl,0x4
  40492b:	mov    DWORD PTR [rdi],edx
  40492d:	test   r8b,0x2
  404931:	je     0x40493f
  404933:	movzx  edx,WORD PTR [rsi+rcx*1]
  404937:	mov    WORD PTR [rdi+rcx*1],dx
  40493b:	add    rcx,0x2
  40493f:	test   r8b,0x1
  404943:	je     0x40494c
  404945:	movzx  edx,BYTE PTR [rsi+rcx*1]
  404949:	mov    BYTE PTR [rdi+rcx*1],dl
  40494c:	lea    rdx,[rax+0x1]
  404950:	mov    BYTE PTR [rsp+r8*1+0x2d0],0x0
  404959:	mov    rcx,r14
  40495c:	mov    r8d,0x200
  404962:	call   0x401b50
  404967:	mov    rcx,r13
  40496a:	lea    rbx,[r14+0x200]
  404971:	call   0x4019f0
  404976:	lea    rdx,[rip+0x2819]        # 0x407196
  40497d:	cmp    eax,0x7
  404980:	lea    rax,[rip+0x2804]        # 0x40718b
  404987:	mov    r9,rbx
  40498a:	mov    r8,r14
  40498d:	mov    rcx,r13
  404990:	cmovne rax,rdx
  404994:	lea    rdx,[rip+0x2e25]        # 0x4077c0
  40499b:	mov    QWORD PTR [rsp+0x20],rax
  4049a0:	call   0x401a58
  4049a5:	mov    rcx,r13
  4049a8:	call   0x4019f8
  4049ad:	test   eax,eax
  4049af:	je     0x40531f
  4049b5:	mov    rcx,r13
  4049b8:	call   0x401a00
  4049bd:	test   eax,eax
  4049bf:	je     0x40542f
  4049c5:	mov    rcx,r13
  4049c8:	call   0x4015b0
  4049cd:	test   eax,eax
  4049cf:	mov    DWORD PTR [rsp+0x60],eax
  4049d3:	je     0x404a54
  4049d5:	mov    eax,DWORD PTR [rsp+0x60]
  4049d9:	cmp    eax,0xffffffff
  4049dc:	je     0x404a42
  4049de:	test   eax,eax
  4049e0:	jne    0x404a49
  4049e2:	mov    rdi,QWORD PTR [rip+0x6867]        # 0x40b250
  4049e9:	mov    rsi,QWORD PTR [rip+0x6858]        # 0x40b248
  4049f0:	mov    rbx,QWORD PTR [rip+0x6861]        # 0x40b258
  4049f7:	call   QWORD PTR [rip+0x7bab]        # 0x40c5a8
  4049fd:	lea    rcx,[rax+0x60]
  404a01:	lea    rax,[r14+0x200]
  404a08:	lea    rdx,[rip+0x2bd1]        # 0x4075e0
  404a0f:	mov    QWORD PTR [rsp+0x30],r14
  404a14:	mov    QWORD PTR [rsp+0x20],rdi
  404a19:	mov    r9,rsi
  404a1c:	mov    QWORD PTR [rsp+0x28],rax
  404a21:	mov    r8,rbx
  404a24:	call   0x4043a0
  404a29:	mov    eax,0x2
  404a2e:	add    rsp,0x4d8
  404a35:	pop    rbx
  404a36:	pop    rsi
  404a37:	pop    rdi
  404a38:	pop    rbp
  404a39:	pop    r12
  404a3b:	pop    r13
  404a3d:	pop    r14
  404a3f:	pop    r15
  404a41:	ret    
  404a42:	mov    eax,0x1
  404a47:	jmp    0x404a2e
  404a49:	add    QWORD PTR [rsp+0x68],0x1
  404a4f:	jmp    0x4048b6
  404a54:	lea    rdx,[rip+0x2d15]        # 0x407770
  404a5b:	mov    r9,r14
  404a5e:	mov    r8,rbx
  404a61:	mov    rcx,r13
  404a64:	call   0x401a58
  404a69:	sub    eax,0x1
  404a6c:	je     0x404a87
  404a6e:	lea    rdx,[rip+0x25cd]        # 0x407042
  404a75:	lea    rcx,[rip+0x299f]        # 0x40741b
  404a7c:	mov    r8d,0xfb
  404a82:	call   0x404160
  404a87:	mov    rcx,r13
  404a8a:	call   0x401a08
  404a8f:	test   eax,eax
  404a91:	je     0x4053ff
  404a97:	call   0x4042d0
  404a9c:	test   rax,rax
  404a9f:	mov    r12,rax
  404aa2:	jne    0x404abd
  404aa4:	lea    rdx,[rip+0x2597]        # 0x407042
  404aab:	lea    rcx,[rip+0x2993]        # 0x407445
  404ab2:	mov    r8d,0x153
  404ab8:	call   0x404160
  404abd:	lea    rax,[rsp+0x90]
  404ac5:	mov    DWORD PTR [rsp+0x84],0x0
  404ad0:	mov    DWORD PTR [rsp+0x64],0x1
  404ad8:	mov    QWORD PTR [rsp+0x48],0x0
  404ae1:	xor    ebp,ebp
  404ae3:	mov    QWORD PTR [rsp+0x50],rax
  404ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  404af0:	mov    rcx,r13
  404af3:	call   0x401a20
  404af8:	cmp    eax,0x2
  404afb:	je     0x40505d
  404b01:	test   eax,eax
  404b03:	je     0x404ff6
  404b09:	nop    DWORD PTR [rax+0x0]
  404b10:	mov    rcx,r13
  404b13:	call   0x401a38
  404b18:	cmp    eax,0xfffffffe
  404b1b:	je     0x404cdf
  404b21:	cmp    eax,0xffffffff
  404b24:	je     0x404b3f
  404b26:	lea    rdx,[rip+0x2515]        # 0x407042
  404b2d:	lea    rcx,[rip+0x260c]        # 0x407140
  404b34:	mov    r8d,0x161
  404b3a:	call   0x404160
  404b3f:	mov    rcx,r13
  404b42:	mov    edx,0x1
  404b47:	lea    rsi,[rip+0x2904]        # 0x407452
  404b4e:	call   0x401a78
  404b53:	mov    ecx,0xb
  404b58:	mov    rdi,rax
  404b5b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404b5d:	jne    0x404cf0
  404b63:	mov    rcx,r13
  404b66:	call   0x401a28
  404b6b:	cmp    eax,0x2
  404b6e:	jle    0x404e60
  404b74:	mov    edx,0x1
  404b79:	mov    rcx,r13
  404b7c:	call   0x401a68
  404b81:	lea    edx,[rax+0x1]
  404b84:	mov    ecx,0x1
  404b89:	mov    ebx,eax
  404b8b:	movsxd rdx,edx
  404b8e:	call   0x4043c8
  404b93:	test   rax,rax
  404b96:	mov    rsi,rax
  404b99:	je     0x404fa0
  404b9f:	mov    edx,0x1
  404ba4:	mov    rcx,r13
  404ba7:	call   0x401a70
  404bac:	movsxd r8,ebx
  404baf:	mov    rdx,rax
  404bb2:	mov    rcx,rsi
  404bb5:	call   0x404350
  404bba:	mov    edx,0x2
  404bbf:	mov    rcx,r13
  404bc2:	call   0x401a68
  404bc7:	lea    edx,[rax+0x1]
  404bca:	mov    ecx,0x1
  404bcf:	mov    edi,eax
  404bd1:	movsxd rdx,edx
  404bd4:	call   0x4043c8
  404bd9:	test   rax,rax
  404bdc:	mov    rbx,rax
  404bdf:	je     0x404f80
  404be5:	mov    edx,0x2
  404bea:	mov    rcx,r13
  404bed:	call   0x401a70
  404bf2:	movsxd r8,edi
  404bf5:	mov    rdx,rax
  404bf8:	mov    rcx,rbx
  404bfb:	call   0x404350
  404c00:	mov    edx,0x3
  404c05:	mov    rcx,r13
  404c08:	call   0x401a68
  404c0d:	lea    edx,[rax+0x1]
  404c10:	mov    ecx,0x1
  404c15:	mov    r15d,eax
  404c18:	movsxd rdx,edx
  404c1b:	call   0x4043c8
  404c20:	test   rax,rax
  404c23:	mov    rdi,rax
  404c26:	je     0x404f60
  404c2c:	mov    edx,0x3
  404c31:	mov    rcx,r13
  404c34:	call   0x401a70
  404c39:	movsxd r8,r15d
  404c3c:	mov    rdx,rax
  404c3f:	mov    rcx,rdi
  404c42:	call   0x404350
  404c47:	lea    rdx,[rip+0x2842]        # 0x407490
  404c4e:	mov    rcx,rbx
  404c51:	call   0x4042d8
  404c56:	test   rax,rax
  404c59:	je     0x404c5e
  404c5b:	mov    BYTE PTR [rax],0x0
  404c5e:	lea    rdx,[rip+0x2833]        # 0x407498
  404c65:	mov    rcx,rbx
  404c68:	call   0x4042d8
  404c6d:	test   rax,rax
  404c70:	je     0x404ea0
  404c76:	mov    BYTE PTR [rax],0x0
  404c79:	mov    edx,0x2c
  404c7e:	mov    rcx,rbx
  404c81:	call   0x4042f8
  404c86:	test   rax,rax
  404c89:	je     0x404c8e
  404c8b:	mov    BYTE PTR [rax],0x0
  404c8e:	lea    r8,[r14+0x200]
  404c95:	lea    rdx,[rip+0x296c]        # 0x407608
  404c9c:	mov    QWORD PTR [rsp+0x30],rdi
  404ca1:	mov    QWORD PTR [rsp+0x28],rbx
  404ca6:	mov    QWORD PTR [rsp+0x20],rsi
  404cab:	mov    r9,r14
  404cae:	mov    rcx,r12
  404cb1:	call   0x4043a0
  404cb6:	mov    rcx,rsi
  404cb9:	call   0x404388
  404cbe:	mov    rcx,rbx
  404cc1:	call   0x404388
  404cc6:	mov    rcx,rdi
  404cc9:	call   0x404388
  404cce:	mov    rcx,r13
  404cd1:	call   0x401a38
  404cd6:	cmp    eax,0xfffffffe
  404cd9:	jne    0x404b21
  404cdf:	add    DWORD PTR [rsp+0x64],0x1
  404ce4:	jmp    0x404af0
  404ce9:	nop    DWORD PTR [rax+0x0]
  404cf0:	mov    rcx,r13
  404cf3:	mov    edx,0x1
  404cf8:	lea    rsi,[rip+0x27d6]        # 0x4074d5
  404cff:	call   0x401a78
  404d04:	mov    ecx,0xc
  404d09:	mov    rdi,rax
  404d0c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404d0e:	jne    0x404b10
  404d14:	mov    edx,0x3
  404d19:	mov    rcx,r13
  404d1c:	lea    rsi,[rip+0x27be]        # 0x4074e1
  404d23:	call   0x401a78
  404d28:	mov    ecx,0x9
  404d2d:	mov    rdi,rax
  404d30:	lea    rdx,[rip+0x1389]        # 0x4060c0
  404d37:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404d39:	lea    rax,[rip+0x1360]        # 0x4060a0
  404d40:	mov    rcx,rbp
  404d43:	cmove  rax,rdx
  404d47:	add    DWORD PTR [rsp+0x60],0x1
  404d4c:	mov    QWORD PTR [rsp+0x48],rax
  404d51:	movsxd rax,DWORD PTR [rsp+0x60]
  404d56:	lea    rbx,[rax+rax*2]
  404d5a:	shl    rbx,0x4
  404d5e:	mov    rdx,rbx
  404d61:	call   0x404320
  404d66:	test   rax,rax
  404d69:	mov    rbp,rax
  404d6c:	je     0x4052d0
  404d72:	lea    rdi,[rax+rbx*1-0x30]
  404d77:	mov    rsi,QWORD PTR [rsp+0x48]
  404d7c:	mov    ebx,0x1
  404d81:	lea    rax,[rdi+0x8]
  404d85:	mov    QWORD PTR [rsp+0xa0],rdi
  404d8d:	mov    QWORD PTR [rsp+0xa8],rax
  404d95:	lea    rax,[rdi+0x10]
  404d99:	mov    QWORD PTR [rsp+0xb0],rax
  404da1:	lea    rax,[rdi+0x18]
  404da5:	mov    QWORD PTR [rsp+0xb8],rax
  404dad:	lea    rax,[rdi+0x20]
  404db1:	mov    QWORD PTR [rsp+0xc0],rax
  404db9:	lea    rax,[rdi+0x28]
  404dbd:	mov    QWORD PTR [rsp+0xc8],rax
  404dc5:	jmp    0x404df2
  404dc7:	nop    WORD PTR [rax+rax*1+0x0]
  404dd0:	mov    QWORD PTR [rdi],0x0
  404dd7:	cmp    ebx,0x6
  404dda:	movsxd rdx,ebx
  404ddd:	je     0x404b10
  404de3:	mov    rdi,QWORD PTR [rsp+rdx*8+0xa0]
  404deb:	add    rsi,0x4
  404def:	add    ebx,0x1
  404df2:	mov    edx,DWORD PTR [rsi]
  404df4:	mov    rcx,r13
  404df7:	call   0x401a68
  404dfc:	test   eax,eax
  404dfe:	mov    r15d,eax
  404e01:	js     0x404e80
  404e03:	je     0x404dd0
  404e05:	lea    edx,[r15+0x1]
  404e09:	mov    ecx,0x1
  404e0e:	movsxd rdx,edx
  404e11:	call   0x4043c8
  404e16:	test   rax,rax
  404e19:	mov    QWORD PTR [rdi],rax
  404e1c:	je     0x4052ff
  404e22:	mov    edx,DWORD PTR [rsi]
  404e24:	mov    rcx,r13
  404e27:	call   0x401a70
  404e2c:	mov    rcx,QWORD PTR [rdi]
  404e2f:	movsxd r8,r15d
  404e32:	mov    rdx,rax
  404e35:	call   0x404350
  404e3a:	cmp    ebx,0x1
  404e3d:	jne    0x404dd7
  404e3f:	mov    eax,DWORD PTR [rsp+0x84]
  404e46:	mov    edx,0x1
  404e4b:	cmp    eax,r15d
  404e4e:	cmovge r15d,eax
  404e52:	mov    DWORD PTR [rsp+0x84],r15d
  404e5a:	jmp    0x404de3
  404e5c:	nop    DWORD PTR [rax+0x0]
  404e60:	lea    rdx,[rip+0x21db]        # 0x407042
  404e67:	lea    rcx,[rip+0x25ef]        # 0x40745d
  404e6e:	mov    r8d,0x168
  404e74:	call   0x404160
  404e79:	jmp    0x404b74
  404e7e:	xchg   ax,ax
  404e80:	lea    rdx,[rip+0x21bb]        # 0x407042
  404e87:	lea    rcx,[rip+0x2693]        # 0x407521
  404e8e:	mov    r8d,0x1c0
  404e94:	call   0x404160
  404e99:	jmp    0x404e05
  404e9e:	xchg   ax,ax
  404ea0:	mov    r15,QWORD PTR [rsp+0x58]
  404ea5:	movabs rax,0x7473756c636e6f6e
  404eaf:	mov    rcx,rbx
  404eb2:	mov    QWORD PTR [rsp+0xa0],rax
  404eba:	mov    eax,0x6575
  404ebf:	mov    DWORD PTR [rsp+0xa8],0x64657265
  404eca:	mov    BYTE PTR [rsp+0xac],0x0
  404ed2:	mov    DWORD PTR [rsp+0x90],0x71696e75
  404edd:	mov    rdx,r15
  404ee0:	mov    WORD PTR [rsp+0x94],ax
  404ee8:	mov    BYTE PTR [rsp+0x96],0x0
  404ef0:	call   0x4042d8
  404ef5:	test   rax,rax
  404ef8:	je     0x404fcb
  404efe:	mov    rdx,QWORD PTR [rsp+0x50]
  404f03:	mov    rcx,rbx
  404f06:	call   0x4042d8
  404f0b:	test   rax,rax
  404f0e:	je     0x404fbe
  404f14:	mov    r8,QWORD PTR [rsp+0x50]
  404f19:	lea    rdx,[rip+0x2584]        # 0x4074a4
  404f20:	mov    r9,r15
  404f23:	mov    rcx,rbx
  404f26:	call   0x404300
  404f2b:	lea    rax,[r14+0x200]
  404f32:	lea    rdx,[rip+0x2577]        # 0x4074b0
  404f39:	mov    QWORD PTR [rsp+0x30],rdi
  404f3e:	mov    QWORD PTR [rsp+0x28],r14
  404f43:	mov    r9,rsi
  404f46:	mov    r8,rbx
  404f49:	mov    QWORD PTR [rsp+0x20],rax
  404f4e:	mov    rcx,r12
  404f51:	call   0x4043a0
  404f56:	jmp    0x404cb6
  404f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f60:	lea    rdx,[rip+0x20db]        # 0x407042
  404f67:	lea    rcx,[rip+0x2517]        # 0x407485
  404f6e:	mov    r8d,0x179
  404f74:	call   0x404160
  404f79:	jmp    0x404c2c
  404f7e:	xchg   ax,ax
  404f80:	lea    rdx,[rip+0x20bb]        # 0x407042
  404f87:	lea    rcx,[rip+0x24e5]        # 0x407473
  404f8e:	mov    r8d,0x173
  404f94:	call   0x404160
  404f99:	jmp    0x404be5
  404f9e:	xchg   ax,ax
  404fa0:	lea    rdx,[rip+0x209b]        # 0x407042
  404fa7:	lea    rcx,[rip+0x24a4]        # 0x407452
  404fae:	mov    r8d,0x16d
  404fb4:	call   0x404160
  404fb9:	jmp    0x404b9f
  404fbe:	mov    BYTE PTR [rsp+0x90],0x0
  404fc6:	jmp    0x404f14
  404fcb:	mov    r15,QWORD PTR [rsp+0x70]
  404fd0:	mov    rcx,rbx
  404fd3:	mov    rdx,r15
  404fd6:	call   0x4042d8
  404fdb:	test   rax,rax
  404fde:	jne    0x404efe
  404fe4:	mov    BYTE PTR [rsp+0xa3],0x0
  404fec:	mov    r15,QWORD PTR [rsp+0x70]
  404ff1:	jmp    0x404efe
  404ff6:	mov    rbx,QWORD PTR [rip+0x625b]        # 0x40b258
  404ffd:	mov    rax,QWORD PTR [rsp+0x88]
  405005:	call   rax
  405007:	lea    rcx,[rax+0x60]
  40500b:	mov    eax,DWORD PTR [rsp+0x64]
  40500f:	lea    rdx,[rip+0x2002]        # 0x407018
  405016:	mov    r9d,0x158
  40501c:	mov    r8,rbx
  40501f:	mov    DWORD PTR [rsp+0x20],eax
  405023:	call   0x4043a0
  405028:	movsxd rsi,DWORD PTR [rsp+0x60]
  40502d:	xor    ebx,ebx
  40502f:	imul   rsi,rsi,0x6
  405033:	jmp    0x405043
  405035:	mov    rcx,QWORD PTR [rbp+rbx*8+0x0]
  40503a:	add    rbx,0x1
  40503e:	call   0x404388
  405043:	cmp    rbx,rsi
  405046:	jne    0x405035
  405048:	mov    rcx,rbp
  40504b:	call   0x404388
  405050:	mov    rcx,r12
  405053:	call   0x4043b8
  405058:	jmp    0x4049d5
  40505d:	cmp    DWORD PTR [rsp+0x60],0x0
  405062:	je     0x405028
  405064:	lea    r8,[r14+0x200]
  40506b:	lea    rdx,[rip+0x5fce]        # 0x40b040
  405072:	lea    rcx,[rip+0x24f5]        # 0x40756e
  405079:	mov    r9,r14
  40507c:	lea    rbx,[rbp+0x8]
  405080:	xor    esi,esi
  405082:	call   0x404338
  405087:	lea    rdi,[rip+0x1012]        # 0x4060a0
  40508e:	jmp    0x4051a1
  405093:	mov    rdx,QWORD PTR [rbx+0x10]
  405097:	test   rdx,rdx
  40509a:	je     0x40511a
  40509c:	lea    rcx,[rip+0x24f1]        # 0x407594
  4050a3:	call   QWORD PTR [rip+0x7577]        # 0x40c620
  4050a9:	test   eax,eax
  4050ab:	je     0x40511a
  4050ad:	mov    rcx,QWORD PTR [rbx+0x10]
  4050b1:	mov    edx,0x20
  4050b6:	call   0x4042f8
  4050bb:	test   rax,rax
  4050be:	je     0x4050c3
  4050c0:	mov    BYTE PTR [rax],0x0
  4050c3:	mov    r15,QWORD PTR [rbx+0x18]
  4050c7:	mov    edx,0x20
  4050cc:	mov    rcx,r15
  4050cf:	call   0x4042f8
  4050d4:	test   rax,rax
  4050d7:	je     0x4050e0
  4050d9:	mov    BYTE PTR [rax],0x0
  4050dc:	mov    r15,QWORD PTR [rbx+0x18]
  4050e0:	mov    r9,QWORD PTR [rbx+0x10]
  4050e4:	mov    rcx,QWORD PTR [rsp+0x58]
  4050e9:	lea    rdx,[rip+0x24a9]        # 0x407599
  4050f0:	mov    QWORD PTR [rsp+0x20],r15
  4050f5:	mov    r8,QWORD PTR [rbx]
  4050f8:	call   0x404220
  4050fd:	test   eax,eax
  4050ff:	jns    0x40511a
  405101:	lea    rdx,[rip+0x1f3a]        # 0x407042
  405108:	lea    rcx,[rip+0x249b]        # 0x4075aa
  40510f:	mov    r8d,0x203
  405115:	call   0x404160
  40511a:	cmp    QWORD PTR [rsp+0x48],rdi
  40511f:	je     0x405222
  405125:	mov    rdx,QWORD PTR [rbx+0x20]
  405129:	lea    rcx,[rip+0x2483]        # 0x4075b3
  405130:	call   QWORD PTR [rip+0x74ea]        # 0x40c620
  405136:	test   eax,eax
  405138:	jne    0x405240
  40513e:	lea    rax,[rip+0x2051]        # 0x407196
  405145:	mov    rcx,QWORD PTR [rsp+0xa0]
  40514d:	test   rcx,rcx
  405150:	je     0x405286
  405156:	cmp    esi,0x1
  405159:	mov    r9,QWORD PTR [rbx-0x8]
  40515d:	mov    r8d,DWORD PTR [rsp+0x84]
  405165:	sbb    edx,edx
  405167:	mov    QWORD PTR [rsp+0x20],rcx
  40516c:	lea    rcx,[rip+0x2446]        # 0x4075b9
  405173:	and    edx,0xfffffffc
  405176:	mov    QWORD PTR [rsp+0x28],rax
  40517b:	add    esi,0x1
  40517e:	add    edx,0x2c
  405181:	add    rbx,0x30
  405185:	call   0x404338
  40518a:	mov    rcx,QWORD PTR [rsp+0xa0]
  405192:	call   0x404388
  405197:	cmp    DWORD PTR [rsp+0x60],esi
  40519b:	jle    0x40528e
  4051a1:	mov    QWORD PTR [rsp+0xa0],0x0
  4051ad:	lea    rcx,[rip+0x23d0]        # 0x407584
  4051b4:	mov    rdx,QWORD PTR [rbx]
  4051b7:	call   QWORD PTR [rip+0x7463]        # 0x40c620
  4051bd:	test   eax,eax
  4051bf:	je     0x405093
  4051c5:	mov    rdx,QWORD PTR [rbx]
  4051c8:	lea    rcx,[rip+0x23bd]        # 0x40758c
  4051cf:	lea    r15,[rip+0xe6a]        # 0x406040
  4051d6:	call   QWORD PTR [rip+0x7444]        # 0x40c620
  4051dc:	test   eax,eax
  4051de:	jne    0x4051e9
  4051e0:	jmp    0x405093
  4051e5:	add    r15,0x8
  4051e9:	mov    rcx,QWORD PTR [r15]
  4051ec:	test   rcx,rcx
  4051ef:	je     0x40511a
  4051f5:	mov    rdx,QWORD PTR [rbx]
  4051f8:	call   QWORD PTR [rip+0x7422]        # 0x40c620
  4051fe:	test   eax,eax
  405200:	jne    0x4051e5
  405202:	mov    rax,QWORD PTR [rbx+0x8]
  405206:	mov    r8,QWORD PTR [rbx]
  405209:	lea    rdx,[rip+0x2393]        # 0x4075a3
  405210:	mov    rcx,QWORD PTR [rsp+0x58]
  405215:	mov    r9d,DWORD PTR [rax]
  405218:	call   0x404220
  40521d:	jmp    0x4050fd
  405222:	mov    rax,QWORD PTR [rbx+0x20]
  405226:	lea    rdx,[rip+0x1f6a]        # 0x407197
  40522d:	cmp    DWORD PTR [rax],0x1
  405230:	lea    rax,[rip+0x1f5f]        # 0x407196
  405237:	cmovne rax,rdx
  40523b:	jmp    0x405145
  405240:	mov    rdx,QWORD PTR [rbx+0x20]
  405244:	lea    rcx,[rip+0x236a]        # 0x4075b5
  40524b:	call   QWORD PTR [rip+0x73cf]        # 0x40c620
  405251:	test   eax,eax
  405253:	je     0x40513e
  405259:	lea    rax,[rip+0x1f37]        # 0x407197
  405260:	jmp    0x405145
  405265:	mov    DWORD PTR [r14+0x200],0x6f6264
  405270:	mov    r8d,0x200
  405276:	mov    rdx,rsi
  405279:	mov    rcx,r14
  40527c:	call   0x401b50
  405281:	jmp    0x404967
  405286:	mov    rcx,QWORD PTR [rbx]
  405289:	jmp    0x405156
  40528e:	lea    rcx,[rip+0x233d]        # 0x4075d2
  405295:	call   0x404330
  40529a:	mov    rcx,r12
  40529d:	call   0x404318
  4052a2:	jmp    0x4052b5
  4052a4:	call   QWORD PTR [rip+0x72fe]        # 0x40c5a8
  4052aa:	lea    rdx,[rax+0x30]
  4052ae:	mov    ecx,ebx
  4052b0:	call   0x404398
  4052b5:	mov    rcx,r12
  4052b8:	call   0x4043b0
  4052bd:	cmp    eax,0xffffffff
  4052c0:	mov    ebx,eax
  4052c2:	jne    0x4052a4
  4052c4:	jmp    0x405028
  4052c9:	xor    eax,eax
  4052cb:	jmp    0x404a2e
  4052d0:	lea    rcx,[rip+0x2219]        # 0x4074f0
  4052d7:	call   0x404340
  4052dc:	lea    rcx,[rip+0x2234]        # 0x407517
  4052e3:	lea    rdx,[rip+0x1d58]        # 0x407042
  4052ea:	mov    r8d,0x1b0
  4052f0:	call   0x404160
  4052f5:	mov    ecx,0x1
  4052fa:	call   0x4043c0
  4052ff:	lea    rcx,[rip+0x222a]        # 0x407530
  405306:	call   0x404340
  40530b:	cmp    QWORD PTR [rdi],0x0
  40530f:	je     0x40548a
  405315:	mov    ecx,0x1
  40531a:	call   0x4043c0
  40531f:	mov    rbx,QWORD PTR [rip+0x5f32]        # 0x40b258
  405326:	call   QWORD PTR [rip+0x727c]        # 0x40c5a8
  40532c:	lea    rdx,[rip+0x20b4]        # 0x4073e7
  405333:	lea    rcx,[rax+0x60]
  405337:	mov    r9d,0xeb
  40533d:	mov    r8,rbx
  405340:	call   0x4043a0
  405345:	mov    ecx,0x1
  40534a:	call   0x4043c0
  40534f:	call   QWORD PTR [rip+0x728b]        # 0x40c5e0
  405355:	mov    ecx,DWORD PTR [rax]
  405357:	call   0x4042f0
  40535c:	mov    rsi,QWORD PTR [rip+0x5f85]        # 0x40b2e8
  405363:	mov    rbp,rax
  405366:	mov    rbx,QWORD PTR [rip+0x5eeb]        # 0x40b258
  40536d:	call   rdi
  40536f:	lea    rdx,[rip+0x2022]        # 0x407398
  405376:	lea    rcx,[rax+0x60]
  40537a:	mov    QWORD PTR [rsp+0x20],rbp
  40537f:	mov    r9,rsi
  405382:	mov    r8,rbx
  405385:	call   0x4043a0
  40538a:	jmp    0x405315
  40538c:	call   QWORD PTR [rip+0x724e]        # 0x40c5e0
  405392:	mov    ecx,DWORD PTR [rax]
  405394:	call   0x4042f0
  405399:	mov    rsi,QWORD PTR [rip+0x5f40]        # 0x40b2e0
  4053a0:	mov    rbp,rax
  4053a3:	jmp    0x405366
  4053a5:	mov    rbx,QWORD PTR [rip+0x5eac]        # 0x40b258
  4053ac:	call   QWORD PTR [rip+0x71f6]        # 0x40c5a8
  4053b2:	lea    rdx,[rip+0x1de2]        # 0x40719b
  4053b9:	lea    rcx,[rax+0x60]
  4053bd:	mov    r9d,0xa4
  4053c3:	mov    r8,rbx
  4053c6:	call   0x4043a0
  4053cb:	mov    ecx,0x1
  4053d0:	call   0x4043c0
  4053d5:	mov    rbx,QWORD PTR [rip+0x5e7c]        # 0x40b258
  4053dc:	call   QWORD PTR [rip+0x71c6]        # 0x40c5a8
  4053e2:	lea    rdx,[rip+0x1ddf]        # 0x4071c8
  4053e9:	lea    rcx,[rax+0x60]
  4053ed:	mov    r8,rbx
  4053f0:	call   0x4043a0
  4053f5:	mov    ecx,0x1
  4053fa:	call   0x4043c0
  4053ff:	mov    rbx,QWORD PTR [rip+0x5e52]        # 0x40b258
  405406:	call   QWORD PTR [rip+0x719c]        # 0x40c5a8
  40540c:	lea    rdx,[rip+0x2017]        # 0x40742a
  405413:	lea    rcx,[rax+0x60]
  405417:	mov    r9d,0xfe
  40541d:	mov    r8,rbx
  405420:	call   0x4043a0
  405425:	mov    ecx,0x1
  40542a:	call   0x4043c0
  40542f:	mov    rbx,QWORD PTR [rip+0x5e22]        # 0x40b258
  405436:	call   QWORD PTR [rip+0x716c]        # 0x40c5a8
  40543c:	lea    rdx,[rip+0x1fbf]        # 0x407402
  405443:	lea    rcx,[rax+0x60]
  405447:	mov    r9d,0xf2
  40544d:	mov    r8,rbx
  405450:	call   0x4043a0
  405455:	mov    ecx,0x1
  40545a:	call   0x4043c0
  40545f:	call   QWORD PTR [rip+0x7143]        # 0x40c5a8
  405465:	lea    rcx,[rip+0x1f4c]        # 0x4073b8
  40546c:	lea    r9,[rax+0x60]
  405470:	mov    r8d,0x2e
  405476:	mov    edx,0x1
  40547b:	call   0x404370
  405480:	mov    ecx,0x1
  405485:	call   0x4043c0
  40548a:	lea    rdx,[rip+0x1bb1]        # 0x407042
  405491:	lea    rcx,[rip+0x20c2]        # 0x40755a
  405498:	mov    r8d,0x1ca
  40549e:	call   0x404160
  4054a3:	jmp    0x405315
  4054a8:	nop
  4054a9:	nop
  4054aa:	nop
  4054ab:	nop
  4054ac:	nop
  4054ad:	nop
  4054ae:	nop
  4054af:	nop
  4054b0:	(bad)  
  4054b1:	(bad)  
  4054b2:	(bad)  
  4054b3:	(bad)  
  4054b4:	(bad)  
  4054b5:	(bad)  
  4054b6:	(bad)  
  4054b7:	inc    DWORD PTR [rax]
  4054b9:	add    BYTE PTR [rax],al
  4054bb:	add    BYTE PTR [rax],al
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    bh,bh
  4054c1:	(bad)  
  4054c2:	(bad)  
  4054c3:	(bad)  
  4054c4:	(bad)  
  4054c5:	(bad)  
  4054c6:	(bad)  
  4054c7:	inc    DWORD PTR [rax]
  4054c9:	add    BYTE PTR [rax],al
  4054cb:	add    BYTE PTR [rax],al
  4054cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40603e:	add    BYTE PTR [rax],al
  406040:	adc    al,0x77
  406042:	add    BYTE PTR [rax],al
  406045:	add    BYTE PTR [rax],al
  406047:	add    BYTE PTR [rcx],bl
  406049:	ja     0x40608b
  40604b:	add    BYTE PTR [rax],al
  40604d:	add    BYTE PTR [rax],al
  40604f:	add    BYTE PTR [rdi],bl
  406051:	ja     0x406093
  406053:	add    BYTE PTR [rax],al
  406055:	add    BYTE PTR [rax],al
  406057:	add    BYTE PTR [rdi],ah
  406059:	ja     0x40609b
  40605b:	add    BYTE PTR [rax],al
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    BYTE PTR [rax],dh
  406061:	ja     0x4060a3
  406063:	add    BYTE PTR [rax],al
  406065:	add    BYTE PTR [rax],al
  406067:	add    BYTE PTR [rip+0x4077],dh        # 0x40a0e4
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rbx],bh
  406071:	ja     0x4060b3
  406073:	add    BYTE PTR [rax],al
  406075:	add    BYTE PTR [rax],al
  406077:	add    BYTE PTR [rbx+0x77],al
  40607a:	add    BYTE PTR [rax],al
  40607d:	add    BYTE PTR [rax],al
  40607f:	add    BYTE PTR [rsi+0x77],cl
  406082:	add    BYTE PTR [rax],al
  406085:	add    BYTE PTR [rax],al
  406087:	add    BYTE PTR [rbp+0x77],dl
  40608a:	add    BYTE PTR [rax],al
  40608d:	add    BYTE PTR [rax],al
  40608f:	add    BYTE PTR [rdi+0x77],bl
  406092:	add    BYTE PTR [rax],al
	...
  40609d:	add    BYTE PTR [rax],al
  40609f:	add    BYTE PTR [rcx],al
  4060a1:	add    BYTE PTR [rax],al
  4060a3:	add    BYTE PTR [rdx],al
  4060a5:	add    BYTE PTR [rax],al
  4060a7:	add    BYTE PTR [rbx],al
  4060a9:	add    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rax+rax*1],al
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	add    eax,0x6000000
	...
  4060bd:	add    BYTE PTR [rax],al
  4060bf:	add    BYTE PTR [rcx],al
  4060c1:	add    BYTE PTR [rax],al
  4060c3:	add    BYTE PTR [rdx],al
  4060c5:	add    BYTE PTR [rax],al
  4060c7:	add    BYTE PTR [rax+rax*1],al
  4060ca:	add    BYTE PTR [rax],al
  4060cc:	add    eax,0x6000000
  4060d1:	add    BYTE PTR [rax],al
  4060d3:	add    BYTE PTR [rdi],al
	...
  4060fd:	add    BYTE PTR [rax],al
  4060ff:	add    al,cl
  406101:	push   rsp
  406102:	add    BYTE PTR [rax],al
	...
  40610d:	add    BYTE PTR [rax],al
  40610f:	add    bh,bh
  406111:	(bad)  
  406112:	(bad)  
  406113:	(bad)  
  406114:	(bad)  
  406115:	(bad)  
  406116:	(bad)  
  406117:	inc    DWORD PTR [rax]
  406119:	add    BYTE PTR [rax],al
  40611b:	add    BYTE PTR [rax],al
  40611d:	add    BYTE PTR [rax],al
  40611f:	add    bh,bh
	...
  40612d:	add    BYTE PTR [rax],al
  40612f:	add    BYTE PTR [rdx],al
	...
  40613d:	add    BYTE PTR [rax],al
  40613f:	add    bh,bh
  406141:	(bad)  
  406142:	(bad)  
  406143:	(bad)  
  406144:	(bad)  
  406145:	(bad)  
  406146:	(bad)  
  406147:	(bad)  
  406148:	(bad)  
  406149:	(bad)  
  40614a:	(bad)  
  40614b:	inc    DWORD PTR [rax]
  40614d:	add    BYTE PTR [rax],al
  40614f:	add    BYTE PTR [rip+0x407b],dh        # 0x40a1d0
  406155:	add    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rdi],bh
  406159:	add    BYTE PTR [rax],al
  40615b:	add    BYTE PTR [rcx],al
  40615d:	add    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rcx],al
	...
  40616d:	add    BYTE PTR [rax],al
  40616f:	add    bh,bh
  406171:	(bad)  
  406172:	(bad)  
  406173:	inc    DWORD PTR [rax]
	...
  40617d:	add    BYTE PTR [rax],al
  40617f:	add    BYTE PTR [rax+0x44],dh
  406182:	add    BYTE PTR [rax],al
  406185:	add    BYTE PTR [rax],al
  406187:	add    BYTE PTR [rax+0x4044],al
  40618d:	add    BYTE PTR [rax],al
  40618f:	add    BYTE PTR [rdx],dh
  406191:	movabs ds:0x2b992ddf,al
  40619a:	add    BYTE PTR [rax],al
  40619c:	add    BYTE PTR [rax],al
  40619e:	add    BYTE PTR [rax],al
  4061a0:	int    0x5d
  4061a2:	and    dl,dl
  4061a4:	data16 (bad) 
  4061a6:	(bad)  
  4061a7:	inc    DWORD PTR [rax]
  4061a9:	add    BYTE PTR [rax],al
  4061ab:	add    BYTE PTR [rax],al
  4061ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	push   rbp
  407001:	push   rbx
  407002:	and    BYTE PTR [rip+0x4f470a73],r12b        # 0x4f877a7c
  407009:	or     cl,BYTE PTR [rdx]
  40700b:	add    BYTE PTR [rcx],cl
  40700d:	(bad)  
  40700e:	sub    ah,BYTE PTR [rax]
  407010:	and    eax,0x2f2a2073
  407015:	or     al,BYTE PTR [rax]
  407017:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465aa90
  40701d:	cmp    ah,BYTE PTR [rax]
  40701f:	(bad)
  407025:	ins    BYTE PTR es:[rdi],dx
  407026:	je     0x40709b
  407028:	sub    BYTE PTR [rcx],ch
  40702a:	sub    al,0x20
  40702c:	jb     0x407093
  40702e:	jae    0x4070a5
  407030:	ins    BYTE PTR es:[rdi],dx
  407031:	je     0x407053
  407033:	jae    0x40709a
  407035:	je     0x407057
  407037:	and    eax,0x61662064
  40703c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6564000a
  407044:	data16 outs dx,BYTE PTR ds:[rsi]
  407046:	movsxd ebp,DWORD PTR [rdi+0x70]
  407049:	jns    0x407079
  40704b:	movsxd eax,DWORD PTR [rax]
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rbx+0x69],dh
  407052:	jp     0x4070b9
  407054:	outs   dx,DWORD PTR ds:[rsi]
  407055:	data16 sub BYTE PTR [rbx+0x71],dh
  407059:	ins    BYTE PTR es:[rdi],dx
  40705a:	pop    rdi
  40705b:	je     0x4070c2
  40705d:	js     0x4070d3
  40705f:	sub    DWORD PTR [rax],esp
  407061:	and    BYTE PTR ds:[rdx+riz*2+0x63],ah
  407066:	outs   dx,DWORD PTR ds:[rsi]
  407067:	ins    BYTE PTR es:[rdi],dx
  407068:	ins    BYTE PTR es:[rdi],dx
  407069:	outs   dx,BYTE PTR gs:[rsi]
  40706b:	sub    BYTE PTR [rdx+riz*2+0x70],ah
  40706f:	jb     0x4070e0
  407071:	movsxd ebp,DWORD PTR [rax+riz*1]
  407074:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
  407078:	je     0x4070a3
  40707a:	add    BYTE PTR [rax],al
  40707c:	add    BYTE PTR [rax],al
  40707e:	add    BYTE PTR [rax],al
  407080:	and    eax,0x64253a73
  407085:	cmp    ah,BYTE PTR [rax]
  407087:	fs (bad) 
  40708a:	imul   ebp,DWORD PTR [rsi+0x64],0x202c2928
  407091:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407094:	jne    0x407103
  407096:	outs   dx,BYTE PTR ds:[rsi]
  407097:	and    BYTE PTR [rip+0x61662064],ah        # 0x61a69101
  40709d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465ab20
  4070ad:	cmp    ah,BYTE PTR [rax]
  4070af:	fs (bad) 
  4070b1:	outs   dx,BYTE PTR ds:[rsi]
  4070b2:	jne    0x407120
  4070b4:	ins    BYTE PTR es:[rdi],dx
  4070b5:	(bad)  
  4070b6:	imul   ebp,DWORD PTR [rsi+0x64],0x202c2928
  4070bd:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4070c0:	jne    0x40712f
  4070c2:	outs   dx,BYTE PTR ds:[rsi]
  4070c3:	and    BYTE PTR [rip+0x61662064],ah        # 0x61a6912d
  4070c9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6400000a
  4070d1:	data16 outs dx,BYTE PTR gs:[rsi]
  4070d4:	movsxd ebp,DWORD PTR [rdi+0x70]
  4070d7:	jns    0x407113
  4070d9:	and    BYTE PTR [rbp+0x72],ah
  4070dc:	jb     0x40714d
  4070de:	jb     0x40711a
  4070e0:	and    BYTE PTR [rbp+0x6e],dh
  4070e3:	gs js  0x407156
  4070e6:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4070eb:	and    BYTE PTR [rsi+0x55],cl
  4070ee:	rex.WR
  4070ef:	rex.WR and BYTE PTR [rdx+0x6f],r14b
  4070f3:	ja     0x407115
  4070f5:	imul   ebp,DWORD PTR [rsi+0x20],0x204c5153
  4070fc:	je     0x407163
  4070fe:	js     0x407174
  407100:	or     al,BYTE PTR [rax]
  407102:	or     al,BYTE PTR [rdi+0x4f]
  407105:	or     al,BYTE PTR [rax]
  407107:	add    BYTE PTR [rbp+riz*2+0x66],ah
  40710b:	outs   dx,BYTE PTR ds:[rsi]
  40710c:	movsxd ebp,DWORD PTR [rdi+0x70]
  40710f:	jns    0x40714b
  407111:	and    BYTE PTR [rbp+0x72],ah
  407114:	jb     0x407185
  407116:	jb     0x407152
  407118:	and    BYTE PTR [rbp+0x78],ah
  40711b:	jo     0x407182
  40711d:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  407121:	and    BYTE PTR [rdx+0x45],dl
  407124:	rex.RXB pop r15
  407126:	push   rdx
  407127:	rex.WRXB push r15
  407129:	and    BYTE PTR [rax],ch
  40712b:	and    eax,0x202c2964
  407130:	outs   dx,DWORD PTR ds:[esi]
  407132:	je     0x407154
  407134:	and    eax,0x6e692064
  407139:	jae    0x4071af
  40713b:	gs (bad) 
  40713d:	or     al,BYTE PTR fs:[rax]
  407140:	jb     0x4071b1
  407142:	ja     0x4071a3
  407144:	movsxd ebp,DWORD PTR [rdi+0x64]
  407147:	and    BYTE PTR gs:[rip+0x4552203d],bh        # 0x4592918b
  40714e:	rex.RXB pop r15
  407150:	push   rdx
  407151:	rex.WRXB push r15
  407153:	add    BYTE PTR [rip+0x4d203a73],ah        # 0x4d60abcc
  407159:	jae    0x4071c2
  40715b:	and    BYTE PTR [rip+0x4c202c64],ah        # 0x4c609dc5
  407161:	gs jbe 0x4071c9
  407164:	ins    BYTE PTR es:[rdi],dx
  407165:	and    BYTE PTR [rip+0x25000a64],ah        # 0x25407bcf
  40716b:	jae    0x407177
  40716d:	or     al,BYTE PTR [rax]
  40716f:	and    eax,0x44203a73
  407174:	rex.X sub eax,0x5242494c
  40717a:	push   r10
  40717c:	pop    rcx
  40717d:	and    BYTE PTR [rbp+0x72],ah
  407180:	jb     0x4071f1
  407182:	jb     0x4071be
  407184:	or     cl,BYTE PTR [rcx]
  407186:	add    BYTE PTR [rip+0x63000a73],ah        # 0x63407bff
  40718c:	movsxd ebp,DWORD PTR cs:[rdi+0x6c]
  407190:	imul   esp,DWORD PTR [rdx+rsi*1+0x2c],0x4e000020
  407198:	rex.WRXB push r12
  40719a:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465ac13
  4071a0:	cmp    ah,BYTE PTR [rax]
  4071a2:	fs (bad) 
  4071a4:	imul   ebp,DWORD PTR [rsi+0x69],0x20292874
  4071ab:	data16 (bad) 
  4071ad:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x706f000a
  4071b5:	je     0x407220
  4071b7:	outs   dx,DWORD PTR ds:[rsi]
  4071b8:	outs   dx,BYTE PTR ds:[rsi]
  4071b9:	jae    0x4071db
  4071bb:	es and BYTE PTR es:[rcx+0x72],ah
  4071c0:	addr32 jbe 0x4071c3
  4071c3:	add    BYTE PTR [rax],al
  4071c5:	add    BYTE PTR [rax],al
  4071c7:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7560ac40
  4071cd:	outs   dx,BYTE PTR ds:[rsi]
  4071ce:	(bad)  
  4071cf:	(bad)  
  4071d0:	ins    BYTE PTR es:[rdi],dx
  4071d1:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4071d6:	(bad)  
  4071d7:	ins    BYTE PTR es:[rdi],dx
  4071d8:	ins    BYTE PTR es:[rdi],dx
  4071d9:	outs   dx,DWORD PTR ds:[rsi]
  4071da:	movsxd esp,DWORD PTR [rcx+0x74]
  4071dd:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  4071e2:	imul   ebp,DWORD PTR [rsi+0x20],0x75727473
  4071e9:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4071ed:	or     al,BYTE PTR gs:[rax]
  4071f0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4071f2:	jo     0x40726d
  4071f4:	jb     0x40725f
  4071f6:	addr32 push 0x43282074
  4071fc:	sub    DWORD PTR [rax],esp
  4071fe:	xor    dh,BYTE PTR [rax]
  407200:	xor    BYTE PTR [rax+riz*1],dh
  407203:	and    BYTE PTR [rdx+0x61],cl
  407206:	ins    DWORD PTR es:[rdi],dx
  407207:	gs jae 0x40722a
  40720a:	rex.WXB
  40720b:	and    BYTE PTR cs:[rdi+rbp*2+0x77],cl
  407210:	fs outs dx,BYTE PTR gs:[rsi]
  407213:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  407217:	jae    0x407239
  407219:	jo     0x40728d
  40721b:	outs   dx,DWORD PTR ds:[rsi]
  40721c:	addr32 jb 0x407280
  40721f:	ins    DWORD PTR es:[rdi],dx
  407220:	and    BYTE PTR [rax],ah
  407222:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  407229:	and    BYTE PTR [rbx+0x6f],dh
  40722c:	data16 je 0x4072a6
  40722f:	(bad)  
  407230:	jb     0x407297
  407232:	cmp    esp,DWORD PTR [rax]
  407234:	jns    0x4072a5
  407236:	jne    0x407258
  407238:	movsxd esp,DWORD PTR [rcx+0x6e]
  40723b:	and    BYTE PTR [rdx+0x65],dh
  40723e:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  407246:	je     0x4072ad
  407248:	and    BYTE PTR [rcx+0x74],ch
  40724b:	and    BYTE PTR [rcx+0x6e],ah
  40724e:	fs (bad) 
  407250:	outs   dx,DWORD PTR ds:[rsi]
  407251:	jb     0x40725d
  407253:	ins    DWORD PTR es:[rdi],dx
  407254:	outs   dx,DWORD PTR ds:[rsi]
  407255:	imul   esp,DWORD PTR fs:[rsi+0x79],0x20746920
  40725d:	jne    0x4072cd
  40725f:	fs gs jb 0x407283
  407263:	je     0x4072cd
  407265:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  40726a:	ins    DWORD PTR es:[rdi],dx
  40726b:	jae    0x40728d
  40726d:	outs   dx,DWORD PTR ds:[rsi]
  40726e:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  407273:	and    BYTE PTR [rdi+0x4e],al
  407276:	push   rbp
  407277:	and    BYTE PTR [rdi+0x65],al
  40727a:	outs   dx,BYTE PTR ds:[rsi]
  40727b:	gs jb  0x4072df
  40727e:	ins    BYTE PTR es:[rdi],dx
  40727f:	and    BYTE PTR [rax+0x75],dl
  407282:	(bad)  
  407283:	ins    BYTE PTR es:[rdi],dx
  407284:	imul   esp,DWORD PTR [rbx+0xa],0x6563694c
  40728b:	outs   dx,BYTE PTR ds:[rsi]
  40728c:	jae    0x4072f3
  40728e:	and    BYTE PTR [rcx+0x73],ah
  407291:	and    BYTE PTR [rax+0x75],dh
  407294:	(bad)  
  407295:	ins    BYTE PTR es:[rdi],dx
  407296:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  40729d:	jns    0x4072bf
  40729f:	je     0x407309
  4072a1:	and    BYTE PTR gs:[rsi+0x72],al
  4072a5:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4072aa:	data16 je 0x407324
  4072ad:	(bad)  
  4072ae:	jb     0x407315
  4072b0:	and    BYTE PTR [rsi+0x6f],al
  4072b3:	jne    0x407323
  4072b5:	fs (bad) 
  4072b7:	je     0x407322
  4072b9:	outs   dx,DWORD PTR ds:[rsi]
  4072ba:	outs   dx,BYTE PTR ds:[rsi]
  4072bb:	or     al,BYTE PTR [rax]
  4072bd:	and    eax,0x250a0a73
  4072c2:	jae    0x4072c4
  4072c4:	add    BYTE PTR [rax],al
  4072c6:	add    BYTE PTR [rax],al
  4072c8:	jne    0x40733d
  4072ca:	(bad)  
  4072cb:	cmp    ah,BYTE PTR gs:[eax]
  4072cf:	and    BYTE PTR [rip+0x200a2073],ah        # 0x204a9348
  4072d5:	and    BYTE PTR [rax],ah
  4072d7:	and    BYTE PTR [rax],ah
  4072d9:	and    BYTE PTR [rax],ah
  4072db:	and    BYTE PTR [rbx+0x2d],bl
  4072de:	push   rbp
  4072df:	and    BYTE PTR [rbp+0x73],dh
  4072e2:	gs jb  0x407353
  4072e5:	(bad)  
  4072e6:	ins    DWORD PTR es:[rdi],dx
  4072e7:	gs pop rbp
  4072e9:	and    BYTE PTR [rbx+0x2d],bl
  4072ec:	push   rax
  4072ed:	and    BYTE PTR [rax+0x61],dh
  4072f0:	jae    0x407365
  4072f2:	ja     0x407363
  4072f4:	jb     0x40735a
  4072f6:	pop    rbp
  4072f7:	or     ah,BYTE PTR [rax]
  4072f9:	and    BYTE PTR [rax],ah
  4072fb:	and    BYTE PTR [rax],ah
  4072fd:	and    BYTE PTR [rax],ah
  4072ff:	and    BYTE PTR [rbx+0x2d],bl
  407302:	push   rbx
  407303:	and    BYTE PTR [rbx+0x65],dh
  407306:	jb     0x40737e
  407308:	gs jb  0x407379
  40730b:	(bad)  
  40730c:	ins    DWORD PTR es:[rdi],dx
  40730d:	gs pop rbp
  40730f:	and    BYTE PTR [rbx+0x2d],bl
  407312:	and    BYTE PTR [rcx+riz*2+0x74],r12b
  407317:	(bad)  
  407318:	(bad)  
  40731a:	jae    0x407381
  40731c:	pop    rbp
  40731d:	or     ah,BYTE PTR [rax]
  40731f:	and    BYTE PTR [rax],ah
  407321:	and    BYTE PTR [rax],ah
  407323:	and    BYTE PTR [rax],ah
  407325:	and    BYTE PTR [rbx+0x2d],bl
  407328:	imul   esp,DWORD PTR [rax],0x75706e69
  40732e:	je     0x407350
  407330:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  407337:	gs pop rbp
  407339:	and    BYTE PTR [rbx+0x2d],bl
  40733c:	outs   dx,DWORD PTR ds:[rsi]
  40733d:	and    BYTE PTR [rdi+0x75],ch
  407340:	je     0x4073b2
  407342:	jne    0x4073b8
  407344:	and    BYTE PTR [rsi+0x69],ah
  407347:	ins    BYTE PTR es:[rdi],dx
  407348:	outs   dx,BYTE PTR gs:[rsi]
  40734a:	(bad)  
  40734b:	ins    DWORD PTR es:[rdi],dx
  40734c:	gs pop rbp
  40734e:	or     ah,BYTE PTR [rax]
  407350:	and    BYTE PTR [rax],ah
  407352:	and    BYTE PTR [rax],ah
  407354:	and    BYTE PTR [rax],ah
  407356:	and    BYTE PTR [rbx+0x6f],bl
  407359:	ja     0x4073c9
  40735b:	gs jb  0x40738c
  40735e:	pop    rbp
  40735f:	outs   dx,DWORD PTR ds:[rsi]
  407360:	(bad)  
  407361:	push   0x65
  407363:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
  407367:	(bad)  
  407368:	ins    DWORD PTR es:[rdi],dx
  407369:	and    BYTE PTR gs:[rbx+0x5b],bl
  40736d:	outs   dx,DWORD PTR ds:[rsi]
  40736e:	ja     0x4073de
  407370:	gs jb  0x4073a1
  407373:	pop    rbp
  407374:	outs   dx,DWORD PTR ds:[rsi]
  407375:	(bad)  
  407376:	push   0x65
  407378:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
  40737c:	(bad)  
  40737d:	ins    DWORD PTR es:[rdi],dx
  40737e:	gs cs cs cs pop rbp
  407383:	or     al,BYTE PTR [rax]
  407385:	push   rbp
  407386:	cmp    dl,BYTE PTR [rax+0x3a]
  407389:	push   rbx
  40738a:	cmp    ah,BYTE PTR [rdx+rdi*1+0x44]
  40738e:	cmp    ch,BYTE PTR [rcx+0x3a]
  407391:	outs   dx,DWORD PTR ds:[rsi]
  407392:	cmp    dh,BYTE PTR [rsi+0x0]
  407395:	jb     0x4073f9
  407397:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7560ae10
  40739d:	outs   dx,BYTE PTR ds:[rsi]
  40739e:	(bad)  
  40739f:	(bad)  
  4073a0:	ins    BYTE PTR es:[rdi],dx
  4073a1:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4073a6:	outs   dx,DWORD PTR ds:[rsi]
  4073a7:	jo     0x40740e
  4073a9:	outs   dx,BYTE PTR ds:[rsi]
  4073aa:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2560ae23
  4073b0:	jae    0x4073bc
  4073b2:	add    BYTE PTR [rdi+0x62],dh
  4073b5:	add    BYTE PTR [rax],al
  4073b7:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4073bb:	jb     0x407422
  4073bd:	and    BYTE PTR [rdi+0x61],dh
  4073c0:	jae    0x4073e2
  4073c2:	(bad)  
  4073c3:	and    BYTE PTR [rax+0x72],dh
  4073c6:	outs   dx,DWORD PTR ds:[rsi]
  4073c7:	(bad)  
  4073c8:	ins    BYTE PTR es:[rdi],dx
  4073c9:	gs ins DWORD PTR es:[rdi],dx
  4073cb:	and    BYTE PTR [rbx+0x6f],ah
  4073ce:	outs   dx,BYTE PTR ds:[rsi]
  4073cf:	outs   dx,BYTE PTR ds:[rsi]
  4073d0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4073d5:	and    BYTE PTR [edi+ebp*2+0x20],dh
  4073da:	je     0x407444
  4073dc:	and    BYTE PTR gs:[rbx+0x65],dh
  4073e0:	jb     0x407458
  4073e2:	gs jb  0x407413
  4073e5:	or     al,BYTE PTR [rax]
  4073e7:	and    eax,0x64253a73
  4073ec:	cmp    ah,BYTE PTR [rax]
  4073ee:	fs (bad) 
  4073f1:	jno    0x40745f
  4073f3:	jae    0x40745a
  4073f5:	outs   dx,BYTE PTR ds:[rsi]
  4073f6:	sub    BYTE PTR fs:[rcx],ch
  4073f9:	and    BYTE PTR [rsi+0x61],ah
  4073fc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325000a
  407404:	cmp    ah,BYTE PTR [rip+0x64203a64]        # 0x6460ae6e
  40740a:	(bad)  
  40740c:	jno    0x40747a
  40740e:	outs   dx,DWORD PTR ds:[rsi]
  40740f:	imul   ebp,DWORD PTR [rax],0x29
  407412:	and    BYTE PTR [rsi+0x61],ah
  407415:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5553000a
  40741d:	rex.XB
  40741e:	rex.XB
  40741f:	rex.RB
  407420:	rex.RB
  407421:	and    BYTE PTR [rip+0x7265203d],r15b        # 0x72a59465
  407428:	movsxd eax,DWORD PTR [rax]
  40742a:	and    eax,0x64253a73
  40742f:	cmp    ah,BYTE PTR [rax]
  407431:	fs (bad) 
  407434:	jno    0x4074a2
  407436:	gs js  0x40749e
  407439:	movsxd ebp,DWORD PTR [rax]
  40743b:	sub    DWORD PTR [rax],esp
  40743d:	data16 (bad) 
  40743f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7263000a
  407447:	gs (bad) 
  407449:	je     0x4074b0
  40744b:	pop    rdi
  40744c:	imul   ebp,DWORD PTR [rsi+0x64],0x69007865
  407453:	outs   dx,BYTE PTR ds:[rsi]
  407454:	fs gs js 0x4074b7
  407458:	outs   dx,BYTE PTR ds:[rsi]
  407459:	(bad)  
  40745a:	ins    DWORD PTR es:[rdi],dx
  40745b:	add    BYTE PTR gs:[rdx+riz*2+0x6e],ah
  407460:	jne    0x4074cf
  407462:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407465:	jae    0x40748f
  407467:	fs (bad) 
  407469:	jo     0x4074dd
  40746b:	outs   dx,DWORD PTR ds:[rsi]
  40746c:	movsxd ebp,DWORD PTR [rcx]
  40746e:	and    BYTE PTR [rsi],bh
  407470:	cmp    eax,0x6e690033
  407475:	fs gs js 0x4074d8
  407479:	fs gs jae 0x4074e0
  40747d:	jb     0x4074e8
  40747f:	jo     0x4074f5
  407481:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6900
  407488:	gs js  0x4074ea
  40748b:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40748f:	add    BYTE PTR [rdi+rbp*2+0x63],ch
  407493:	(bad)  
  407494:	je     0x4074fb
  407496:	add    BYTE PTR fs:[rax+0x72],dh
  40749a:	imul   ebp,DWORD PTR [rbp+0x61],0x6b207972
  4074a1:	gs jns 0x4074a4
  4074a4:	and    eax,0x73252073
  4074a9:	add    BYTE PTR [rax],al
  4074ab:	add    BYTE PTR [rax],al
  4074ad:	add    BYTE PTR [rax],al
  4074af:	add    BYTE PTR [rbx+0x52],al
  4074b2:	rex.RB
  4074b3:	push   r12
  4074b5:	and    BYTE PTR [rip+0x4e492073],r12b        # 0x4e89952f
  4074bc:	rex.R
  4074bd:	rex.RB pop r8
  4074bf:	and    BYTE PTR [rip+0x6e6f2073],ah        # 0x6eaf9538
  4074c5:	and    BYTE PTR [rip+0x73252e73],ah        # 0x7365a33e
  4074cb:	sub    BYTE PTR [rip+0x470a2973],ah        # 0x474a9e44
  4074d1:	rex.WRXB or r9b,BYTE PTR [r10]
  4074d4:	add    BYTE PTR [rbx+0x6f],al
  4074d7:	ins    BYTE PTR es:[rdi],dx
  4074d8:	jne    0x407547
  4074da:	outs   dx,BYTE PTR ds:[rsi]
  4074db:	pop    rdi
  4074dc:	outs   dx,BYTE PTR ds:[rsi]
  4074dd:	(bad)  
  4074de:	ins    DWORD PTR es:[rdi],dx
  4074df:	add    BYTE PTR gs:[rbx+0x6f],al
  4074e3:	ins    DWORD PTR es:[rdi],dx
  4074e4:	jo     0x40755b
  4074e6:	je     0x40754d
  4074e8:	add    BYTE PTR fs:[rax],al
  4074eb:	add    BYTE PTR [rax],al
  4074ed:	add    BYTE PTR [rax],al
  4074ef:	add    BYTE PTR [rbp+0x72],ah
  4074f2:	jb     0x407563
  4074f4:	jb     0x407530
  4074f6:	and    BYTE PTR [rcx+0x6e],ch
  4074f9:	jae    0x407570
  4074fb:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  407502:	je     0x407524
  407504:	ins    DWORD PTR es:[rdi],dx
  407505:	gs ins DWORD PTR es:[rdi],dx
  407507:	outs   dx,DWORD PTR ds:[rsi]
  407508:	jb     0x407583
  40750a:	and    BYTE PTR [rsi+0x6f],ah
  40750d:	jb     0x40752f
  40750f:	jb     0x407580
  407511:	ja     0x407533
  407513:	rex.R
  407514:	rex.R
  407515:	rex.WR add BYTE PTR [rax+0x20],r14b
  407519:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c95c33f
  40751f:	rex.WR add BYTE PTR [rcx+riz*2+0x74],r12b
  407524:	ins    BYTE PTR es:[rdi],dx
  407525:	outs   dx,BYTE PTR gs:[rsi]
  407527:	and    BYTE PTR [rsi],bh
  407529:	cmp    eax,0x3020
  40752e:	add    BYTE PTR [rax],al
  407530:	gs jb  0x4075a5
  407533:	outs   dx,DWORD PTR ds:[rsi]
  407534:	jb     0x407570
  407536:	and    BYTE PTR [rcx+0x6e],ch
  407539:	jae    0x4075b0
  40753b:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  407542:	je     0x407564
  407544:	ins    DWORD PTR es:[rdi],dx
  407545:	gs ins DWORD PTR es:[rdi],dx
  407547:	outs   dx,DWORD PTR ds:[rsi]
  407548:	jb     0x4075c3
  40754a:	and    BYTE PTR [rsi+0x6f],ah
  40754d:	jb     0x40756f
  40754f:	jb     0x4075c0
  407551:	ja     0x407573
  407553:	fs gs je 0x4075b8
  407557:	imul   ebp,DWORD PTR [rax+rax*1+0x2a],0x646c6f63
  40755f:	gs jae 0x4075c5
  407562:	pop    rbx
  407563:	imul   ebx,DWORD PTR [rbp+0x20],0x4e203d21
  40756a:	push   rbp
  40756b:	rex.WR
  40756c:	rex.WR add BYTE PTR [rip+0x45524373],r12b        # 0x4592b8e6
  407573:	push   r12
  407575:	and    BYTE PTR [r9+rax*2+0x42],r10b
  40757a:	rex.WR
  40757b:	and    BYTE PTR [rip+0x73252e73],r12b        # 0x7365a3f5
  407582:	or     al,BYTE PTR [rax]
  407584:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
  407589:	(bad)  
  40758a:	ins    BYTE PTR es:[rdi],dx
  40758b:	add    BYTE PTR [rsi+0x75],ch
  40758e:	ins    DWORD PTR es:[rdi],dx
  40758f:	gs jb  0x4075fb
  407592:	movsxd eax,DWORD PTR [rax]
  407594:	rex.WRX push rbp
  407596:	rex.WR
  407597:	rex.WR add BYTE PTR [rip+0x73252873],r12b        # 0x73659e11
  40759e:	sub    al,0x25
  4075a0:	jae    0x4075cb
  4075a2:	add    BYTE PTR [rip+0x64252873],ah        # 0x64659e1b
  4075a8:	sub    DWORD PTR [rax],eax
  4075aa:	jb     0x407611
  4075ac:	je     0x4075ce
  4075ae:	ds cmp eax,0x31003020
  4075b4:	add    BYTE PTR [rcx+0x65],bh
  4075b7:	jae    0x4075b9
  4075b9:	or     DWORD PTR [rip+0x2d252063],esp        # 0x2d659622
  4075bf:	sub    dh,BYTE PTR [rbx+0x20]
  4075c2:	and    eax,0x7335312d
  4075c7:	and    BYTE PTR [rip+0x4e207333],ah        # 0x4e60e900
  4075cd:	push   rbp
  4075ce:	rex.WR
  4075cf:	rex.WR or r8b,BYTE PTR [rax]
  4075d2:	or     DWORD PTR [rcx],ebp
  4075d4:	or     al,BYTE PTR [rdi+0x4f]
  4075d7:	or     al,BYTE PTR [rax]
  4075d9:	add    BYTE PTR [rax],al
  4075db:	add    BYTE PTR [rax],al
  4075dd:	add    BYTE PTR [rax],al
  4075df:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6560b058
  4075e5:	jb     0x407659
  4075e7:	outs   dx,DWORD PTR ds:[rsi]
  4075e8:	jb     0x407624
  4075ea:	and    BYTE PTR [rip+0x73252e73],ah        # 0x7365a463
  4075f0:	cs and eax,0x73252e73
  4075f6:	and    BYTE PTR [rsi+0x6f],ch
  4075f9:	je     0x40761b
  4075fb:	outs   dx,WORD PTR ds:[rsi]
  4075fd:	jne    0x40766d
  4075ff:	or     al,BYTE PTR fs:[rax]
  407602:	add    BYTE PTR [rax],al
  407604:	add    BYTE PTR [rax],al
  407606:	add    BYTE PTR [rax],al
  407608:	rex.B
  407609:	rex.WR push rsp
  40760b:	rex.RB push r10
  40760d:	and    BYTE PTR [rcx+rax*2+0x42],dl
  407611:	rex.WR
  407612:	and    BYTE PTR [rip+0x73252e73],r12b        # 0x7365a48c
  407619:	and    BYTE PTR [rcx+0x44],al
  40761c:	and    BYTE PTR [rbx+0x4f],r8b
  407620:	rex.WRX push rbx
  407622:	push   rsp
  407623:	push   rdx
  407624:	rex.B
  407625:	rex.WB
  407626:	rex.WRX push rsp
  407628:	and    BYTE PTR [rip+0x52502073],ah        # 0x529096a1
  40762e:	rex.WB
  40762f:	rex.WRB
  407630:	push   r10
  407632:	pop    rcx
  407633:	and    BYTE PTR [rbx+0x45],cl
  407636:	pop    rcx
  407637:	and    BYTE PTR [rip+0x25282073],ah        # 0x256896b0
  40763d:	jae    0x407668
  40763f:	or     al,BYTE PTR [rdi+0x4f]
  407642:	or     cl,BYTE PTR [rdx]
  407644:	add    BYTE PTR [rax],al
  407646:	add    BYTE PTR [rax],al
  407648:	not    eax
  40764a:	(bad)  
  40764b:	dec    DWORD PTR [rdx]
  40764d:	sar    edi,1
  40764f:	dec    DWORD PTR [rdx]
  407651:	sar    edi,1
  407653:	dec    DWORD PTR [rdx]
  407655:	sar    edi,1
  407657:	dec    DWORD PTR [rdx]
  407659:	sar    edi,1
  40765b:	dec    DWORD PTR [rdx]
  40765d:	sar    edi,1
  40765f:	dec    DWORD PTR [rdx]
  407661:	sar    edi,1
  407663:	dec    DWORD PTR [rdx]
  407665:	sar    edi,1
  407667:	dec    DWORD PTR [rdx]
  407669:	sar    edi,1
  40766b:	dec    DWORD PTR [rdx]
  40766d:	sar    edi,1
  40766f:	dec    DWORD PTR [rdx]
  407671:	sar    edi,1
  407673:	dec    DWORD PTR [rdx]
  407675:	sar    edi,1
  407677:	jmp    FWORD PTR [rax+0xaffffd0]
  40767d:	sar    edi,1
  40767f:	dec    DWORD PTR [rdx]
  407681:	sar    edi,1
  407683:	dec    DWORD PTR [rax+rdx*8-0x2ef50001]
  40768a:	(bad)  
  40768b:	jmp    FWORD PTR [rdi-0x30]
  40768e:	(bad)  
  40768f:	dec    DWORD PTR [rdx]
  407691:	sar    edi,1
  407693:	dec    DWORD PTR [rdx]
  407695:	sar    edi,1
  407697:	dec    DWORD PTR [rdx]
  407699:	sar    edi,1
  40769b:	dec    DWORD PTR [rdx]
  40769d:	sar    edi,1
  40769f:	dec    DWORD PTR [rdx]
  4076a1:	sar    edi,1
  4076a3:	dec    DWORD PTR [rdx]
  4076a5:	sar    edi,1
  4076a7:	dec    DWORD PTR [rdx]
  4076a9:	sar    edi,1
  4076ab:	dec    DWORD PTR [rdx]
  4076ad:	sar    edi,1
  4076af:	dec    DWORD PTR [rdx]
  4076b1:	sar    edi,1
  4076b3:	dec    DWORD PTR [rdx]
  4076b5:	sar    edi,1
  4076b7:	dec    DWORD PTR [rdx]
  4076b9:	sar    edi,1
  4076bb:	dec    DWORD PTR [rdx]
  4076bd:	sar    edi,1
  4076bf:	dec    DWORD PTR [rdx]
  4076c1:	sar    edi,1
  4076c3:	dec    DWORD PTR [rdx]
  4076c5:	sar    edi,1
  4076c7:	push   rdi
  4076c9:	sar    bh,1
  4076cb:	dec    DWORD PTR [rdx]
  4076cd:	sar    edi,1
  4076cf:	dec    DWORD PTR [rdx]
  4076d1:	sar    edi,1
  4076d3:	dec    DWORD PTR [rdx]
  4076d5:	sar    edi,1
  4076d7:	dec    DWORD PTR [rdx]
  4076d9:	sar    edi,1
  4076db:	call   FWORD PTR [rbp-0x30]
  4076de:	(bad)  
  4076df:	dec    DWORD PTR [rdx]
  4076e1:	sar    edi,1
  4076e3:	dec    DWORD PTR [rdx]
  4076e5:	sar    edi,1
  4076e7:	dec    DWORD PTR [rdx]
  4076e9:	sar    edi,1
  4076eb:	dec    DWORD PTR [rdx]
  4076ed:	sar    edi,1
  4076ef:	dec    DWORD PTR [rdx]
  4076f1:	sar    edi,1
  4076f3:	inc    DWORD PTR [rax+rdx*8-0x1]
  4076f7:	dec    DWORD PTR [rdx]
  4076f9:	sar    edi,1
  4076fb:	dec    DWORD PTR [rdx]
  4076fd:	sar    edi,1
  4076ff:	dec    DWORD PTR [rdx]
  407701:	sar    edi,1
  407703:	dec    DWORD PTR [rdx]
  407705:	sar    edi,1
  407707:	dec    DWORD PTR [rdx]
  407709:	sar    edi,1
  40770b:	dec    DWORD PTR [rdx]
  40770d:	sar    edi,1
  40770f:	jmp    QWORD PTR [rax+rdx*8]
  407712:	(bad)  
  407713:	jmp    QWORD PTR [rbx+0x68]
  407716:	(bad)  
  407717:	jb     0x407719
  407719:	outs   dx,BYTE PTR ds:[rsi]
  40771a:	movsxd ebp,DWORD PTR [rax+0x61]
  40771d:	jb     0x40771f
  40771f:	jbe    0x407782
  407721:	jb     0x407786
  407723:	push   0x6e007261
  407728:	jbe    0x40778b
  40772a:	jb     0x40778f
  40772c:	push   0x74007261
  407731:	gs js  0x4077a8
  407734:	add    BYTE PTR [rsi+0x74],ch
  407737:	gs js  0x4077ae
  40773a:	add    BYTE PTR [rbp+0x6e],dh
  40773d:	imul   esp,DWORD PTR [rbx+0x68],0x75007261
  407744:	outs   dx,BYTE PTR ds:[rsi]
  407745:	imul   esi,DWORD PTR [rsi+0x61],0x61686372
  40774c:	jb     0x40774e
  40774e:	(bad)  
  40774f:	imul   ebp,DWORD PTR [rsi+0x61],0x76007972
  407756:	(bad)  
  407757:	jb     0x4077bb
  407759:	imul   ebp,DWORD PTR [rsi+0x61],0x69007972
  407760:	ins    DWORD PTR es:[rdi],dx
  407761:	(bad)  
  407762:	add    BYTE PTR gs:[eax],al
	...
  40776e:	add    BYTE PTR [rax],al
  407770:	and    BYTE PTR [rbp+0x78],ah
  407773:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  407777:	and    BYTE PTR gs:[rbx+0x70],dh
  40777b:	pop    rdi
  40777c:	push   0x20706c65
  407781:	(bad)  
  407782:	and    eax,0x73252e73
  407787:	(bad)  
  407788:	and    BYTE PTR [rax],al
	...
  4077be:	add    BYTE PTR [rax],al
  4077c0:	and    BYTE PTR [rbx+0x65],dh
  4077c3:	ins    BYTE PTR es:[rdi],dx
  4077c4:	movsxd esi,DWORD PTR gs:[rcx+rcx*1+0x63]
  4077c9:	cs je  0x407831
  4077cc:	js     0x407842
  4077ce:	sub    al,0x20
  4077d0:	outs   dx,BYTE PTR ds:[rsi]
  4077d1:	jne    0x407840
  4077d3:	(bad)  
  4077d4:	gs jb  0x4077f7
  4077d7:	and    BYTE PTR [rsi+0x72],ah
  4077da:	outs   dx,DWORD PTR ds:[rsi]
  4077db:	ins    DWORD PTR es:[rdi],dx
  4077dc:	and    BYTE PTR [rbx+0x79],dh
  4077df:	jae    0x407844
  4077e1:	outs   dx,DWORD PTR ds:[rsi]
  4077e2:	ins    DWORD PTR es:[rdi],dx
  4077e3:	ins    DWORD PTR es:[rdi],dx
  4077e4:	outs   dx,BYTE PTR gs:[rsi]
  4077e6:	je     0x40785b
  4077e8:	and    BYTE PTR [rbx+0x2c],ah
  4077eb:	and    BYTE PTR [rax],ah
  4077ed:	and    BYTE PTR [rax],ah
  4077ef:	and    BYTE PTR [rax],ah
  4077f1:	jae    0x40786c
  4077f3:	jae    0x407864
  4077f5:	(bad)  
  4077f6:	push   0x65
  4077f8:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  4077fc:	outs   dx,DWORD PTR ds:[rsi]
  4077fd:	and    BYTE PTR [rdi+0x68],dh
  407800:	gs jb  0x407868
  407803:	or     DWORD PTR [rdi+0x2e],ebp
  407806:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x692e6320
  40780e:	and    BYTE PTR fs:[rcx+0x6e],ah
  407812:	or     DWORD PTR fs:[rcx],ecx
  407815:	outs   dx,DWORD PTR ds:[rsi]
  407816:	outs   dx,BYTE PTR cs:[rsi]
  407818:	(bad)  
  407819:	ins    DWORD PTR es:[rdi],dx
  40781a:	and    BYTE PTR gs:[rip+0x73252720],bh        # 0x73659f41
  407821:	(bad)  
  407822:	and    BYTE PTR [rcx+0x6e],ah
  407825:	or     DWORD PTR fs:[rcx],ecx
  407828:	outs   dx,DWORD PTR ds:[rsi]
  407829:	cs jne 0x407895
  40782c:	and    BYTE PTR fs:[rip+0x65737520],bh        # 0x65b3ed53
  407833:	jb     0x407894
  407835:	imul   esp,DWORD PTR [rax+rbp*1+0x27],0x29277325
  40783d:	and    BYTE PTR [rcx+0x6e],ah
  407840:	or     DWORD PTR fs:[rcx],ecx
  407843:	outs   dx,DWORD PTR ds:[rsi]
  407844:	cs je  0x4078c0
  407847:	jo     0x4078ae
  407849:	and    BYTE PTR [rsi+0x6f],ch
  40784c:	je     0x40786e
  40784e:	imul   ebp,DWORD PTR [rsi+0x20],0x27552728
  407855:	sub    al,0x20
  407857:	(bad)  
  407858:	push   rbx
  407859:	(bad)  
  40785a:	sub    DWORD PTR [rax],esp
  40785c:	outs   dx,DWORD PTR ds:[rsi]
  40785d:	jb     0x4078c3
  40785f:	gs jb  0x407882
  407862:	(bad)  
  407863:	jns    0x407885
  407865:	or     DWORD PTR [rbx+0x2e],esp
  407868:	outs   dx,BYTE PTR ds:[rsi]
  407869:	jne    0x4078d8
  40786b:	(bad)  
  40786c:	gs jb  0x40789b
  40786f:	and    BYTE PTR [rip+0x632e6373],ah        # 0x636edbe8
  407875:	outs   dx,DWORD PTR ds:[rsi]
  407876:	ins    BYTE PTR es:[rdi],dx
  407877:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x0
  40787f:	add    BYTE PTR [rip+0x0],ch        # 0x407885
	...
  40788d:	add    BYTE PTR [rax],al
  40788f:	add    BYTE PTR [rax-0x48],al
  407892:	add    BYTE PTR [rax],al
  407895:	add    BYTE PTR [rax],al
  407897:	add    BYTE PTR [rax-0x4d],al
  40789a:	add    BYTE PTR [rax],al
  40789d:	add    BYTE PTR [rax],al
  40789f:	add    BYTE PTR [rax+0x401f],al
	...
  4078ad:	add    BYTE PTR [rax],al
  4078af:	add    BYTE PTR [rcx+0x72],al
  4078b2:	addr32 jne 0x407922
  4078b5:	outs   dx,BYTE PTR gs:[rsi]
  4078b7:	je     0x4078d9
  4078b9:	outs   dx,DWORD PTR fs:[rsi]
  4078bb:	ins    DWORD PTR es:[rdi],dx
  4078bc:	(bad)  
  4078bd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4078c4:	jb     0x4078e6
  4078c6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4078ca:	rex.B
  4078cb:	rex.WB
  4078cc:	rex.WRX sub QWORD PTR [rax],r8
  4078cf:	rex.B jb 0x407939
  4078d2:	jne    0x407941
  4078d4:	outs   dx,BYTE PTR gs:[rsi]
  4078d6:	je     0x4078f8
  4078d8:	jae    0x407943
  4078da:	outs   dx,BYTE PTR ds:[rsi]
  4078db:	addr32 jne 0x40794a
  4078de:	(bad)  
  4078df:	jb     0x40794a
  4078e1:	je     0x40795c
  4078e3:	and    BYTE PTR [rax],ch
  4078e5:	push   rbx
  4078e6:	rex.WB
  4078e7:	rex.RXB
  4078e8:	rex.WRX sub QWORD PTR [rax],r8
  4078eb:	add    BYTE PTR [rax],al
  4078ed:	add    BYTE PTR [rax],al
  4078ef:	add    BYTE PTR [rdi+0x76],cl
  4078f2:	gs jb  0x40795b
  4078f5:	ins    BYTE PTR es:[rdi],dx
  4078f6:	outs   dx,DWORD PTR ds:[rsi]
  4078f7:	ja     0x407919
  4078f9:	jb     0x40795c
  4078fb:	outs   dx,BYTE PTR ds:[rsi]
  4078fc:	and    BYTE PTR gs:[ebp+0x72],ah
  407901:	jb     0x407972
  407903:	jb     0x407925
  407905:	sub    BYTE PTR [rdi+0x56],cl
  407908:	rex.RB push r10
  40790a:	rex.RX
  40790b:	rex.WR
  40790c:	rex.WRXB push r15
  40790e:	sub    DWORD PTR [rax],eax
  407910:	push   rax
  407911:	(bad)  
  407912:	jb     0x407988
  407914:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40791b:	jae    0x40793d
  40791d:	outs   dx,DWORD PTR ds:[rsi]
  40791e:	data16 and BYTE PTR [rbx+0x69],dh
  407922:	outs   dx,BYTE PTR ds:[esi]
  407924:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40792b:	and    BYTE PTR gs:[rax],ch
  40792e:	push   rax
  40792f:	rex.WR
  407930:	rex.WRXB push r11
  407932:	push   rbx
  407933:	sub    DWORD PTR [rax],eax
  407935:	add    BYTE PTR [rax],al
  407937:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40793b:	(bad)  
  40793c:	ins    BYTE PTR es:[rdi],dx
  40793d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  407941:	jae    0x407963
  407943:	outs   dx,DWORD PTR ds:[rsi]
  407944:	data16 and BYTE PTR [rbx+0x69],dh
  407948:	outs   dx,BYTE PTR ds:[esi]
  40794a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  407951:	and    BYTE PTR gs:[rax],ch
  407954:	push   rsp
  407955:	rex.WR
  407956:	rex.WRXB push r11
  407958:	push   rbx
  407959:	sub    DWORD PTR [rax],eax
  40795b:	add    BYTE PTR [rax],al
  40795d:	add    BYTE PTR [rax],al
  40795f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  407963:	and    BYTE PTR [rdx+0x65],dh
  407966:	jae    0x4079dd
  407968:	ins    BYTE PTR es:[rdi],dx
  407969:	je     0x40798b
  40796b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  407972:	jae    0x4079e1
  407974:	(bad)  
  407975:	ins    BYTE PTR es:[rdi],dx
  407976:	ins    BYTE PTR es:[rdi],dx
  407977:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40797b:	(bad)  
  40797c:	and    BYTE PTR gs:[rdx+0x65],dh
  407980:	jo     0x4079f4
  407982:	gs jae 0x4079ea
  407985:	outs   dx,BYTE PTR ds:[rsi]
  407986:	je     0x4079ed
  407988:	and    BYTE PTR fs:[rax],ch
  40798b:	push   rbp
  40798c:	rex.WRX
  40798d:	rex.R
  40798e:	rex.RB push r10
  407990:	rex.RX
  407991:	rex.WR
  407992:	rex.WRXB push r15
  407994:	sub    DWORD PTR [rax],eax
  407996:	push   rbp
  407997:	outs   dx,BYTE PTR ds:[rsi]
  407998:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40799c:	outs   dx,BYTE PTR ds:[rsi]
  40799d:	and    BYTE PTR [rbp+0x72],ah
  4079a0:	jb     0x407a11
  4079a2:	jb     0x4079a4
  4079a4:	add    BYTE PTR [rax],al
  4079a6:	add    BYTE PTR [rax],al
  4079a8:	pop    rdi
  4079a9:	ins    DWORD PTR es:[rdi],dx
  4079aa:	(bad)  
  4079ab:	je     0x407a15
  4079ad:	gs jb  0x407a22
  4079b0:	sub    BYTE PTR [rcx],ch
  4079b2:	cmp    ah,BYTE PTR [rax]
  4079b4:	and    eax,0x6e692073
  4079b9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765a232
  4079bf:	sub    al,0x20
  4079c1:	and    eax,0x20202967
  4079c6:	sub    BYTE PTR [rdx+0x65],dh
  4079c9:	je     0x407a41
  4079cb:	(bad)  
  4079cc:	ins    BYTE PTR es:[rdi],dx
  4079cd:	cmp    eax,0xa296725
  4079d2:	add    BYTE PTR [rax],al
  4079d4:	jl     0x40797d
  4079d6:	(bad)  
  4079d7:	(bad)  
  4079d8:	mov    ebp,0x2cffffa6
  4079dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4079de:	(bad)  
  4079df:	(bad)  
  4079e0:	cmp    al,0xa7
  4079e2:	(bad)  
  4079e3:	dec    DWORD PTR [rdi+riz*4-0x1]
  4079e7:	call   FWORD PTR [rdi+riz*4-0x1]
  4079eb:	jmp    FWORD PTR [rdi+riz*4-0x1]
  4079ef:	dec    DWORD PTR [rbp+0x69]
  4079f2:	outs   dx,BYTE PTR ds:[rsi]
  4079f3:	addr32 ja 0x407a23
  4079f6:	ja     0x407a2e
  4079f8:	xor    al,0x20
  4079fa:	jb     0x407a71
  4079fc:	outs   dx,BYTE PTR ds:[rsi]
  4079fd:	je     0x407a68
  4079ff:	ins    DWORD PTR es:[rdi],dx
  407a00:	and    BYTE PTR gs:[rsi+0x61],ah
  407a04:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  407a0c:	add    BYTE PTR [rax],al
  407a0e:	add    BYTE PTR [rax],al
  407a10:	rex.B
  407a11:	fs fs jb 0x407a7a
  407a15:	jae    0x407a8a
  407a17:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a89a8d
  407a1d:	jae    0x407a3f
  407a1f:	outs   dx,BYTE PTR ds:[rsi]
  407a20:	outs   dx,DWORD PTR ds:[rsi]
  407a21:	and    BYTE PTR [rcx+0x6d],ch
  407a24:	(bad)  
  407a25:	addr32 gs sub eax,0x74636573
  407a2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  407a33:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  407a3a:	jne    0x407aa1
  407a3c:	jb     0x407ab7
  407a3e:	and    BYTE PTR [rsi+0x61],ah
  407a41:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  407a49:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a29ab3
  407a4f:	je     0x407ab6
  407a51:	jae    0x407a73
  407a53:	(bad)  
  407a54:	je     0x407a76
  407a56:	(bad)  
  407a57:	fs fs jb 0x407ac0
  407a5b:	jae    0x407ad0
  407a5d:	and    BYTE PTR [rip+0x70],ah        # 0x407ad3
  407a63:	add    BYTE PTR [rax],al
  407a65:	add    BYTE PTR [rax],al
  407a67:	add    BYTE PTR [rax],ah
  407a69:	and    BYTE PTR [rsi+0x69],dl
  407a6c:	jb     0x407ae2
  407a6e:	jne    0x407ad1
  407a70:	ins    BYTE PTR es:[rdi],dx
  407a71:	push   rax
  407a72:	jb     0x407ae3
  407a74:	je     0x407adb
  407a76:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  407a7a:	(bad)  
  407a7b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  407a83:	push   0x646f6320
  407a88:	and    BYTE PTR gs:[rax],dh
  407a8b:	js     0x407ab2
  407a8d:	js     0x407a8f
  407a8f:	add    BYTE PTR [rax],ah
  407a91:	and    BYTE PTR [rbp+0x6e],dl
  407a94:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407a98:	outs   dx,BYTE PTR ds:[rsi]
  407a99:	and    BYTE PTR [rax+0x73],dh
  407a9c:	gs jne 0x407b03
  407a9f:	outs   dx,DWORD PTR ds:[rsi]
  407aa0:	and    BYTE PTR [rdx+0x65],dh
  407aa3:	ins    BYTE PTR es:[rdi],dx
  407aa4:	outs   dx,DWORD PTR ds:[rsi]
  407aa5:	movsxd esp,DWORD PTR [rcx+0x74]
  407aa8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  407aaf:	je     0x407b20
  407ab1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407ab4:	and    BYTE PTR [rsi+0x65],dh
  407ab7:	jb     0x407b2c
  407ab9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  407ac0:	or     al,BYTE PTR [rax]
  407ac2:	add    BYTE PTR [rax],al
  407ac4:	add    BYTE PTR [rax],al
  407ac6:	add    BYTE PTR [rax],al
  407ac8:	and    BYTE PTR [rax],ah
  407aca:	push   rbp
  407acb:	outs   dx,BYTE PTR ds:[rsi]
  407acc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407ad0:	outs   dx,BYTE PTR ds:[rsi]
  407ad1:	and    BYTE PTR [rax+0x73],dh
  407ad4:	gs jne 0x407b3b
  407ad7:	outs   dx,DWORD PTR ds:[rsi]
  407ad8:	and    BYTE PTR [rdx+0x65],dh
  407adb:	ins    BYTE PTR es:[rdi],dx
  407adc:	outs   dx,DWORD PTR ds:[rsi]
  407add:	movsxd esp,DWORD PTR [rcx+0x74]
  407ae0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  407ae7:	and    BYTE PTR [rbx+0x69],dh
  407aea:	jp     0x407b51
  407aec:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4aa956
	...
  407afe:	add    BYTE PTR [rax],al
  407b00:	cs jo  0x407b67
  407b03:	(bad)  
  407b04:	je     0x407b67
	...
  407b12:	(bad)  
  407b13:	add    BYTE PTR [rax],al
  407b15:	add    BYTE PTR [rsi],ch
	...
  407b1f:	add    BYTE PTR [rip+0x203a73],ah        # 0x60b598
  407b25:	push   rax
  407b26:	rex.WRXB push r11
  407b28:	rex.WB pop r8
  407b2a:	rex.WR pop rcx
  407b2c:	pop    rdi
  407b2d:	rex.XB
  407b2e:	rex.WRXB push r10
  407b30:	push   rdx
  407b31:	rex.RB
  407b32:	rex.XB push r12
	...
  407b40:	jne    0x407bb0
  407b42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407b46:	outs   dx,BYTE PTR ds:[rsi]
  407b47:	and    BYTE PTR [rdi+0x70],ch
  407b4a:	je     0x407bb5
  407b4c:	outs   dx,DWORD PTR ds:[rsi]
  407b4d:	outs   dx,BYTE PTR ds:[rsi]
  407b4e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73659b81
	...
  407b60:	jne    0x407bd0
  407b62:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407b66:	outs   dx,BYTE PTR ds:[rsi]
  407b67:	and    BYTE PTR [rdi+0x70],ch
  407b6a:	je     0x407bd5
  407b6c:	outs   dx,DWORD PTR ds:[rsi]
  407b6d:	outs   dx,BYTE PTR ds:[rsi]
  407b6e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63659ba1
	...
  407b80:	outs   dx,DWORD PTR ds:[rsi]
  407b81:	jo     0x407bf7
  407b83:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  407b8a:	jae    0x407bfa
  407b8c:	(bad)  
  407b8d:	je     0x407baf
  407b8f:	je     0x407bf2
  407b91:	imul   esp,DWORD PTR [rbp+0x20],0x61
  407b95:	outs   dx,BYTE PTR ds:[rsi]
  407b96:	and    BYTE PTR [rcx+0x72],ah
  407b99:	addr32 jne 0x407c09
  407b9c:	outs   dx,BYTE PTR gs:[rsi]
  407b9e:	je     0x407bc0
  407ba0:	sub    eax,0x2e25202d
  407ba5:	sub    dh,BYTE PTR [rbx+0x0]
	...
  407bb0:	(bad)  
  407bb1:	ins    DWORD PTR es:[rdi],dx
  407bb2:	(bad)  
  407bb3:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  407bba:	outs   dx,DWORD PTR ds:[rsi]
  407bbb:	jo     0x407c31
  407bbd:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  407bc4:	and    eax,0x732a2e
	...
  407bdd:	add    BYTE PTR [rax],al
  407bdf:	add    BYTE PTR [rdi+0x70],ch
  407be2:	je     0x407c4d
  407be4:	outs   dx,DWORD PTR ds:[rsi]
  407be5:	outs   dx,BYTE PTR ds:[rsi]
  407be6:	and    BYTE PTR [rdx+0x65],dh
  407be9:	jno    0x407c60
  407beb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407bf2:	and    BYTE PTR [rcx+0x72],ah
  407bf5:	addr32 jne 0x407c65
  407bf8:	outs   dx,BYTE PTR gs:[rsi]
  407bfa:	je     0x407c1c
  407bfc:	sub    eax,0x7325202d
	...
  407c1d:	add    BYTE PTR [rax],al
  407c1f:	add    BYTE PTR [rdi+0x70],ch
  407c22:	je     0x407c8d
  407c24:	outs   dx,DWORD PTR ds:[rsi]
  407c25:	outs   dx,BYTE PTR ds:[rsi]
  407c26:	and    BYTE PTR [rdx+0x65],dh
  407c29:	jno    0x407ca0
  407c2b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407c32:	and    BYTE PTR [rcx+0x72],ah
  407c35:	addr32 jne 0x407ca5
  407c38:	outs   dx,BYTE PTR gs:[rsi]
  407c3a:	je     0x407c5c
  407c3c:	sub    eax,0x6325202d
	...
  407c5d:	add    BYTE PTR [rax],al
  407c5f:	add    BYTE PTR [rax+rax*1],bh
  407c62:	jne    0x407c64
  407c64:	outs   dx,BYTE PTR ds:[rsi]
  407c65:	add    BYTE PTR [rbx+0x0],ch
  407c68:	outs   dx,BYTE PTR ds:[rsi]
  407c69:	add    BYTE PTR [rdi+0x0],ch
  407c6c:	ja     0x407c6e
  407c6e:	outs   dx,BYTE PTR ds:[rsi]
  407c6f:	add    BYTE PTR [rsi],bh
  407c71:	add    BYTE PTR [rax],al
  407c73:	add    BYTE PTR [rdi],bh
  407c75:	add    BYTE PTR [rax],al
  407c77:	add    BYTE PTR [rcx+0x0],al
  407c7a:	jae    0x407c7c
  407c7c:	jae    0x407c7e
  407c7e:	add    BYTE PTR gs:[rdx+0x0],dh
  407c82:	je     0x407c84
  407c84:	imul   eax,DWORD PTR [rax],0x6e006f
  407c8a:	and    BYTE PTR [rax],al
  407c8c:	data16 add BYTE PTR [rcx+0x0],ah
  407c90:	imul   eax,DWORD PTR [rax],0x65006c
  407c96:	add    BYTE PTR fs:[rcx],ah
  407c99:	add    BYTE PTR [rdx],cl
  407c9b:	add    BYTE PTR [rdx],cl
  407c9d:	add    BYTE PTR [rax+0x0],dl
  407ca0:	jb     0x407ca2
  407ca2:	outs   dx,DWORD PTR ds:[rsi]
  407ca3:	add    BYTE PTR [rdi+0x0],ah
  407ca6:	jb     0x407ca8
  407ca8:	(bad)  
  407ca9:	add    BYTE PTR [rbp+0x0],ch
  407cac:	cmp    al,BYTE PTR [rax]
  407cae:	and    BYTE PTR [rax],al
  407cb0:	and    eax,0x73007700
  407cb5:	add    BYTE PTR [rdx],cl
  407cb7:	add    BYTE PTR [rsi+0x0],al
  407cba:	imul   eax,DWORD PTR [rax],0x65006c
  407cc0:	cmp    al,BYTE PTR [rax]
  407cc2:	and    BYTE PTR [rax],al
  407cc4:	and    eax,0x73007700
  407cc9:	add    BYTE PTR [rax+rax*1],ch
  407ccc:	and    BYTE PTR [rax],al
  407cce:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407cd2:	outs   dx,BYTE PTR ds:[rsi]
  407cd3:	add    BYTE PTR [rbp+0x0],ah
  407cd6:	and    BYTE PTR [rax],al
  407cd8:	and    eax,0xa007500
  407cdd:	add    BYTE PTR [rdx],cl
  407cdf:	add    BYTE PTR [rbp+0x0],al
  407ce2:	js     0x407ce4
  407ce4:	jo     0x407ce6
  407ce6:	jb     0x407ce8
  407ce8:	add    BYTE PTR gs:[rbx+0x0],dh
  407cec:	jae    0x407cee
  407cee:	imul   eax,DWORD PTR [rax],0x6e006f
  407cf4:	cmp    al,BYTE PTR [rax]
  407cf6:	and    BYTE PTR [rax],al
  407cf8:	and    eax,0x73007700
  407cfd:	add    BYTE PTR [rax],al
  407cff:	add    BYTE PTR [rip+0x73007700],ah        # 0x7340f405
  407d05:	add    BYTE PTR [rdx],cl
	...
  407d0f:	add    BYTE PTR [rbp+0x0],cl
  407d12:	imul   eax,DWORD PTR [rax],0x47006e
  407d18:	push   rdi
  407d19:	add    BYTE PTR [rax],ah
  407d1b:	add    BYTE PTR [rdx+0x0],dl
  407d1e:	jne    0x407d20
  407d20:	outs   dx,BYTE PTR ds:[rsi]
  407d21:	add    BYTE PTR [rax+rax*1+0x69],dh
  407d25:	add    BYTE PTR [rbp+0x0],ch
  407d28:	add    BYTE PTR gs:[rax],ah
  407d2b:	add    BYTE PTR [rcx+0x0],al
  407d2e:	jae    0x407d30
  407d30:	jae    0x407d32
  407d32:	add    BYTE PTR gs:[rdx+0x0],dh
  407d36:	je     0x407d38
  407d38:	imul   eax,DWORD PTR [rax],0x6e006f
  407d3e:	add    BYTE PTR [rax],al
  407d40:	xor    BYTE PTR [rcx+0x40],ah
	...
  407d4f:	add    BYTE PTR [rax+0x61],dh
  407d52:	add    BYTE PTR [rax],al
	...
  407d5d:	add    BYTE PTR [rax],al
  407d5f:	add    BYTE PTR [rax+0x4054],dh
	...
  407d6d:	add    BYTE PTR [rax],al
  407d6f:	add    BYTE PTR [rax-0x7d],dh
  407d72:	add    BYTE PTR [rax],al
	...
  407d7d:	add    BYTE PTR [rax],al
  407d7f:	add    BYTE PTR [rax-0x7d],dh
  407d82:	add    BYTE PTR [rax],al
	...
  407d8d:	add    BYTE PTR [rax],al
  407d8f:	add    BYTE PTR [rax+0x4078],ah
	...
  407da1:	add    BYTE PTR [rax+0x0],al
	...
  407db0:	mov    ch,al
  407db2:	add    BYTE PTR [rax],al
	...
  407dbd:	add    BYTE PTR [rax],al
  407dbf:	add    BYTE PTR [rax+0x40c5],ah
	...
  407dcd:	add    BYTE PTR [rax],al
  407dcf:	add    al,cl
  407dd1:	(bad)
	...
  407de0:	(bad)
	...
  407df0:	or     dh,al
  407df2:	add    BYTE PTR [rax],al
	...
  407dfd:	add    BYTE PTR [rax],al
  407dff:	add    BYTE PTR [rax+0x40b9],al
	...
  407e0d:	add    BYTE PTR [rax],al
  407e0f:	add    al,bh
  407e11:	mov    esp,0x40
	...
  407e1e:	add    BYTE PTR [rax],al
  407e20:	lock mov esp,0x40
	...
  407e2e:	add    BYTE PTR [rax],al
  407e30:	loopne 0x407dee
  407e32:	add    BYTE PTR [rax],al
	...
  407e3d:	add    BYTE PTR [rax],al
  407e3f:	add    al,ch
  407e41:	mov    esp,0x40
	...
  407e4e:	add    BYTE PTR [rax],al
  407e50:	add    al,dl
  407e52:	add    BYTE PTR [rax],al
	...
  407e5d:	add    BYTE PTR [rax],al
  407e5f:	add    BYTE PTR [rax],dl
  407e61:	rol    BYTE PTR [rax+0x0],1
	...
  407e70:	sbb    al,dl
  407e72:	add    BYTE PTR [rax],al
	...
  407e7d:	add    BYTE PTR [rax],al
  407e7f:	add    BYTE PTR [rax],dh
  407e81:	rol    BYTE PTR [rax+0x0],1
	...
  407e90:	adc    BYTE PTR [rbx+0x40],dh
	...
  407e9e:	add    BYTE PTR [rax],al
  407ea0:	push   rax
  407ea1:	mov    ecx,0x40
	...
  407eae:	add    BYTE PTR [rax],al
  407eb0:	adc    BYTE PTR [rcx],ch
  407eb2:	add    BYTE PTR [rax],al
	...
  407ebd:	add    BYTE PTR [rax],al
  407ebf:	add    BYTE PTR [rax+0x20],ah
  407ec2:	add    BYTE PTR [rax],al
	...
  407ed1:	mov    ecx,0x40
	...
  407ede:	add    BYTE PTR [rax],al
  407ee0:	xor    BYTE PTR [rcx+0x40],bh
	...
  407eee:	add    BYTE PTR [rax],al
  407ef0:	and    BYTE PTR [rbx+0x40],dh
	...
  407efe:	add    BYTE PTR [rax],al
  407f00:	sbb    BYTE PTR [rcx+0x40],bh
	...
  407f0e:	add    BYTE PTR [rax],al
  407f10:	adc    al,0xb9
  407f12:	add    BYTE PTR [rax],al
	...
  407f1d:	add    BYTE PTR [rax],al
  407f1f:	add    BYTE PTR [rax],dl
  407f21:	mov    ecx,0x40
	...
  407f2e:	add    BYTE PTR [rax],al
  407f30:	and    BYTE PTR [rbp+0x40],bh
	...
  407f3e:	add    BYTE PTR [rax],al
  407f40:	pop    rsp
  407f41:	(bad)  
  407f42:	add    BYTE PTR [rax],al
	...
  407f4d:	add    BYTE PTR [rax],al
  407f4f:	add    BYTE PTR [rdi+0x43],al
  407f52:	rex.XB cmp spl,BYTE PTR [r8]
  407f55:	sub    BYTE PTR [rdi+0x4e],al
  407f58:	push   rbp
  407f59:	sub    DWORD PTR [rax],esp
  407f5b:	xor    al,0x2e
  407f5d:	cmp    DWORD PTR [rsi],ebp
  407f5f:	xor    al,0x0
	...
  407f6d:	add    BYTE PTR [rax],al
  407f6f:	add    BYTE PTR [rdi+0x43],al
  407f72:	rex.XB cmp spl,BYTE PTR [r8]
  407f75:	sub    BYTE PTR [rdi+0x4e],al
  407f78:	push   rbp
  407f79:	sub    DWORD PTR [rax],esp
  407f7b:	xor    al,0x2e
  407f7d:	cmp    DWORD PTR [rsi],ebp
  407f7f:	xor    al,0x0
	...
  407f8d:	add    BYTE PTR [rax],al
  407f8f:	add    BYTE PTR [rdi+0x43],al
  407f92:	rex.XB cmp spl,BYTE PTR [r8]
  407f95:	sub    BYTE PTR [rdi+0x4e],al
  407f98:	push   rbp
  407f99:	sub    DWORD PTR [rax],esp
  407f9b:	xor    al,0x2e
  407f9d:	cmp    DWORD PTR [rsi],ebp
  407f9f:	xor    al,0x0
	...
  407fad:	add    BYTE PTR [rax],al
  407faf:	add    BYTE PTR [rdi+0x43],al
  407fb2:	rex.XB cmp spl,BYTE PTR [r8]
  407fb5:	sub    BYTE PTR [rdi+0x4e],al
  407fb8:	push   rbp
  407fb9:	sub    DWORD PTR [rax],esp
  407fbb:	xor    al,0x2e
  407fbd:	cmp    DWORD PTR [rsi],ebp
  407fbf:	xor    al,0x0
	...
  407fcd:	add    BYTE PTR [rax],al
  407fcf:	add    BYTE PTR [rdi+0x43],al
  407fd2:	rex.XB cmp spl,BYTE PTR [r8]
  407fd5:	sub    BYTE PTR [rdi+0x4e],al
  407fd8:	push   rbp
  407fd9:	sub    DWORD PTR [rax],esp
  407fdb:	xor    al,0x2e
  407fdd:	cmp    DWORD PTR [rsi],ebp
  407fdf:	xor    al,0x0
	...
  407fed:	add    BYTE PTR [rax],al
  407fef:	add    BYTE PTR [rdi+0x43],al
  407ff2:	rex.XB cmp spl,BYTE PTR [r8]
  407ff5:	sub    BYTE PTR [rdi+0x4e],al
  407ff8:	push   rbp
  407ff9:	sub    DWORD PTR [rax],esp
  407ffb:	xor    al,0x2e
  407ffd:	cmp    DWORD PTR [rsi],ebp
  407fff:	xor    al,0x0
	...
  40800d:	add    BYTE PTR [rax],al
  40800f:	add    BYTE PTR [rdi+0x43],al
  408012:	rex.XB cmp spl,BYTE PTR [r8]
  408015:	sub    BYTE PTR [rdi+0x4e],al
  408018:	push   rbp
  408019:	sub    DWORD PTR [rax],esp
  40801b:	xor    al,0x2e
  40801d:	cmp    DWORD PTR [rsi],ebp
  40801f:	xor    al,0x0
	...
  40802d:	add    BYTE PTR [rax],al
  40802f:	add    BYTE PTR [rdi+0x43],al
  408032:	rex.XB cmp spl,BYTE PTR [r8]
  408035:	sub    BYTE PTR [rdi+0x4e],al
  408038:	push   rbp
  408039:	sub    DWORD PTR [rax],esp
  40803b:	xor    al,0x2e
  40803d:	cmp    DWORD PTR [rsi],ebp
  40803f:	xor    al,0x0
	...
  40804d:	add    BYTE PTR [rax],al
  40804f:	add    BYTE PTR [rdi+0x43],al
  408052:	rex.XB cmp spl,BYTE PTR [r8]
  408055:	sub    BYTE PTR [rdi+0x4e],al
  408058:	push   rbp
  408059:	sub    DWORD PTR [rax],esp
  40805b:	xor    al,0x2e
  40805d:	cmp    DWORD PTR [rsi],ebp
  40805f:	xor    al,0x0
	...
  40806d:	add    BYTE PTR [rax],al
  40806f:	add    BYTE PTR [rdi+0x43],al
  408072:	rex.XB cmp spl,BYTE PTR [r8]
  408075:	sub    BYTE PTR [rdi+0x4e],al
  408078:	push   rbp
  408079:	sub    DWORD PTR [rax],esp
  40807b:	xor    al,0x2e
  40807d:	cmp    DWORD PTR [rsi],ebp
  40807f:	xor    al,0x0
	...
  40808d:	add    BYTE PTR [rax],al
  40808f:	add    BYTE PTR [rdi+0x43],al
  408092:	rex.XB cmp spl,BYTE PTR [r8]
  408095:	sub    BYTE PTR [rdi+0x4e],al
  408098:	push   rbp
  408099:	sub    DWORD PTR [rax],esp
  40809b:	xor    al,0x2e
  40809d:	cmp    DWORD PTR [rsi],ebp
  40809f:	xor    al,0x0
	...
  4080ad:	add    BYTE PTR [rax],al
  4080af:	add    BYTE PTR [rdi+0x43],al
  4080b2:	rex.XB cmp spl,BYTE PTR [r8]
  4080b5:	sub    BYTE PTR [rdi+0x4e],al
  4080b8:	push   rbp
  4080b9:	sub    DWORD PTR [rax],esp
  4080bb:	xor    al,0x2e
  4080bd:	cmp    DWORD PTR [rsi],ebp
  4080bf:	xor    al,0x0
	...
  4080cd:	add    BYTE PTR [rax],al
  4080cf:	add    BYTE PTR [rdi+0x43],al
  4080d2:	rex.XB cmp spl,BYTE PTR [r8]
  4080d5:	sub    BYTE PTR [rdi+0x4e],al
  4080d8:	push   rbp
  4080d9:	sub    DWORD PTR [rax],esp
  4080db:	xor    al,0x2e
  4080dd:	cmp    DWORD PTR [rsi],ebp
  4080df:	xor    al,0x0
	...
  4080ed:	add    BYTE PTR [rax],al
  4080ef:	add    BYTE PTR [rdi+0x43],al
  4080f2:	rex.XB cmp spl,BYTE PTR [r8]
  4080f5:	sub    BYTE PTR [rdi+0x4e],al
  4080f8:	push   rbp
  4080f9:	sub    DWORD PTR [rax],esp
  4080fb:	xor    al,0x2e
  4080fd:	cmp    DWORD PTR [rsi],ebp
  4080ff:	xor    al,0x0
	...
  40810d:	add    BYTE PTR [rax],al
  40810f:	add    BYTE PTR [rdi+0x43],al
  408112:	rex.XB cmp spl,BYTE PTR [r8]
  408115:	sub    BYTE PTR [rdi+0x4e],al
  408118:	push   rbp
  408119:	sub    DWORD PTR [rax],esp
  40811b:	xor    al,0x2e
  40811d:	cmp    DWORD PTR [rsi],ebp
  40811f:	xor    al,0x0
	...
  40812d:	add    BYTE PTR [rax],al
  40812f:	add    BYTE PTR [rdi+0x43],al
  408132:	rex.XB cmp spl,BYTE PTR [r8]
  408135:	sub    BYTE PTR [rdi+0x4e],al
  408138:	push   rbp
  408139:	sub    DWORD PTR [rax],esp
  40813b:	xor    al,0x2e
  40813d:	cmp    DWORD PTR [rsi],ebp
  40813f:	xor    al,0x0
	...
  40814d:	add    BYTE PTR [rax],al
  40814f:	add    BYTE PTR [rdi+0x43],al
  408152:	rex.XB cmp spl,BYTE PTR [r8]
  408155:	sub    BYTE PTR [rdi+0x4e],al
  408158:	push   rbp
  408159:	sub    DWORD PTR [rax],esp
  40815b:	xor    al,0x2e
  40815d:	cmp    DWORD PTR [rsi],ebp
  40815f:	xor    al,0x0
	...
  40816d:	add    BYTE PTR [rax],al
  40816f:	add    BYTE PTR [rdi+0x43],al
  408172:	rex.XB cmp spl,BYTE PTR [r8]
  408175:	sub    BYTE PTR [rdi+0x4e],al
  408178:	push   rbp
  408179:	sub    DWORD PTR [rax],esp
  40817b:	xor    al,0x2e
  40817d:	cmp    DWORD PTR [rsi],ebp
  40817f:	xor    al,0x0
	...
  40818d:	add    BYTE PTR [rax],al
  40818f:	add    BYTE PTR [rdi+0x43],al
  408192:	rex.XB cmp spl,BYTE PTR [r8]
  408195:	sub    BYTE PTR [rdi+0x4e],al
  408198:	push   rbp
  408199:	sub    DWORD PTR [rax],esp
  40819b:	xor    al,0x2e
  40819d:	cmp    DWORD PTR [rsi],ebp
  40819f:	xor    al,0x0
	...
  4081ad:	add    BYTE PTR [rax],al
  4081af:	add    BYTE PTR [rdi+0x43],al
  4081b2:	rex.XB cmp spl,BYTE PTR [r8]
  4081b5:	sub    BYTE PTR [rdi+0x4e],al
  4081b8:	push   rbp
  4081b9:	sub    DWORD PTR [rax],esp
  4081bb:	xor    al,0x2e
  4081bd:	cmp    DWORD PTR [rsi],ebp
  4081bf:	xor    al,0x0
	...
  4081cd:	add    BYTE PTR [rax],al
  4081cf:	add    BYTE PTR [rdi+0x43],al
  4081d2:	rex.XB cmp spl,BYTE PTR [r8]
  4081d5:	sub    BYTE PTR [rdi+0x4e],al
  4081d8:	push   rbp
  4081d9:	sub    DWORD PTR [rax],esp
  4081db:	xor    al,0x2e
  4081dd:	cmp    DWORD PTR [rsi],ebp
  4081df:	xor    al,0x0
	...
  4081ed:	add    BYTE PTR [rax],al
  4081ef:	add    BYTE PTR [rdi+0x43],al
  4081f2:	rex.XB cmp spl,BYTE PTR [r8]
  4081f5:	sub    BYTE PTR [rdi+0x4e],al
  4081f8:	push   rbp
  4081f9:	sub    DWORD PTR [rax],esp
  4081fb:	xor    al,0x2e
  4081fd:	cmp    DWORD PTR [rsi],ebp
  4081ff:	xor    al,0x0
	...
  40820d:	add    BYTE PTR [rax],al
  40820f:	add    BYTE PTR [rdi+0x43],al
  408212:	rex.XB cmp spl,BYTE PTR [r8]
  408215:	sub    BYTE PTR [rdi+0x4e],al
  408218:	push   rbp
  408219:	sub    DWORD PTR [rax],esp
  40821b:	xor    al,0x2e
  40821d:	cmp    DWORD PTR [rsi],ebp
  40821f:	xor    al,0x0
	...
  40822d:	add    BYTE PTR [rax],al
  40822f:	add    BYTE PTR [rdi+0x43],al
  408232:	rex.XB cmp spl,BYTE PTR [r8]
  408235:	sub    BYTE PTR [rdi+0x4e],al
  408238:	push   rbp
  408239:	sub    DWORD PTR [rax],esp
  40823b:	xor    al,0x2e
  40823d:	cmp    DWORD PTR [rsi],ebp
  40823f:	xor    al,0x0
	...
  40824d:	add    BYTE PTR [rax],al
  40824f:	add    BYTE PTR [rdi+0x43],al
  408252:	rex.XB cmp spl,BYTE PTR [r8]
  408255:	sub    BYTE PTR [rdi+0x4e],al
  408258:	push   rbp
  408259:	sub    DWORD PTR [rax],esp
  40825b:	xor    al,0x2e
  40825d:	cmp    DWORD PTR [rsi],ebp
  40825f:	xor    al,0x0
	...
  40826d:	add    BYTE PTR [rax],al
  40826f:	add    BYTE PTR [rdi+0x43],al
  408272:	rex.XB cmp spl,BYTE PTR [r8]
  408275:	sub    BYTE PTR [rdi+0x4e],al
  408278:	push   rbp
  408279:	sub    DWORD PTR [rax],esp
  40827b:	xor    al,0x2e
  40827d:	cmp    DWORD PTR [rsi],ebp
  40827f:	xor    al,0x0
	...
  40828d:	add    BYTE PTR [rax],al
  40828f:	add    BYTE PTR [rdi+0x43],al
  408292:	rex.XB cmp spl,BYTE PTR [r8]
  408295:	sub    BYTE PTR [rdi+0x4e],al
  408298:	push   rbp
  408299:	sub    DWORD PTR [rax],esp
  40829b:	xor    al,0x2e
  40829d:	cmp    DWORD PTR [rsi],ebp
  40829f:	xor    al,0x0
	...
  4082ad:	add    BYTE PTR [rax],al
  4082af:	add    BYTE PTR [rdi+0x43],al
  4082b2:	rex.XB cmp spl,BYTE PTR [r8]
  4082b5:	sub    BYTE PTR [rdi+0x4e],al
  4082b8:	push   rbp
  4082b9:	sub    DWORD PTR [rax],esp
  4082bb:	xor    al,0x2e
  4082bd:	cmp    DWORD PTR [rsi],ebp
  4082bf:	xor    al,0x0
	...
  4082cd:	add    BYTE PTR [rax],al
  4082cf:	add    BYTE PTR [rdi+0x43],al
  4082d2:	rex.XB cmp spl,BYTE PTR [r8]
  4082d5:	sub    BYTE PTR [rdi+0x4e],al
  4082d8:	push   rbp
  4082d9:	sub    DWORD PTR [rax],esp
  4082db:	xor    al,0x2e
  4082dd:	cmp    DWORD PTR [rsi],ebp
  4082df:	xor    al,0x0
	...
  4082ed:	add    BYTE PTR [rax],al
  4082ef:	add    BYTE PTR [rdi+0x43],al
  4082f2:	rex.XB cmp spl,BYTE PTR [r8]
  4082f5:	sub    BYTE PTR [rdi+0x4e],al
  4082f8:	push   rbp
  4082f9:	sub    DWORD PTR [rax],esp
  4082fb:	xor    al,0x2e
  4082fd:	cmp    DWORD PTR [rsi],ebp
  4082ff:	xor    al,0x0
	...
  40830d:	add    BYTE PTR [rax],al
  40830f:	add    BYTE PTR [rdi+0x43],al
  408312:	rex.XB cmp spl,BYTE PTR [r8]
  408315:	sub    BYTE PTR [rdi+0x4e],al
  408318:	push   rbp
  408319:	sub    DWORD PTR [rax],esp
  40831b:	xor    al,0x2e
  40831d:	cmp    DWORD PTR [rsi],ebp
  40831f:	xor    al,0x0
	...
  40832d:	add    BYTE PTR [rax],al
  40832f:	add    BYTE PTR [rdi+0x43],al
  408332:	rex.XB cmp spl,BYTE PTR [r8]
  408335:	sub    BYTE PTR [rdi+0x4e],al
  408338:	push   rbp
  408339:	sub    DWORD PTR [rax],esp
  40833b:	xor    al,0x2e
  40833d:	cmp    DWORD PTR [rsi],ebp
  40833f:	xor    al,0x0
	...
  40834d:	add    BYTE PTR [rax],al
  40834f:	add    BYTE PTR [rdi+0x43],al
  408352:	rex.XB cmp spl,BYTE PTR [r8]
  408355:	sub    BYTE PTR [rdi+0x4e],al
  408358:	push   rbp
  408359:	sub    DWORD PTR [rax],esp
  40835b:	xor    al,0x2e
  40835d:	cmp    DWORD PTR [rsi],ebp
  40835f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000409000 <.pdata>:
  409000:	add    BYTE PTR [rax],dl
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rax],edx
  409006:	add    BYTE PTR [rax],al
  409008:	add    BYTE PTR [rax+0x10100000],ah
  40900e:	add    BYTE PTR [rax],al
  409010:	push   rcx
  409011:	adc    DWORD PTR [rax],eax
  409013:	add    BYTE PTR [rax+riz*4],al
  409016:	add    BYTE PTR [rax],al
  409018:	(bad)  
  409019:	adc    DWORD PTR [rax],eax
  40901b:	add    BYTE PTR [rsi+0xc000011],ch
  409021:	movabs al,ds:0x14ce000011b00000
  40902a:	add    BYTE PTR [rax],al
  40902c:	adc    al,0xa0
  40902e:	add    BYTE PTR [rax],al
  409030:	rcl    BYTE PTR [rax+rax*1],1
  409033:	add    dl,dh
  409035:	adc    al,0x0
  409037:	add    BYTE PTR [rax],ch
  409039:	movabs al,ds:0x1522000015000000
  409042:	add    BYTE PTR [rax],al
  409044:	rex.W movabs al,ds:0x15ad000015300000
  40904e:	add    BYTE PTR [rax],al
  409050:	push   0xffffffffb00000a0
  409055:	adc    eax,0x19140000
  40905a:	add    BYTE PTR [rax],al
  40905c:	jo     0x408ffe
  40905e:	add    BYTE PTR [rax],al
  409060:	and    BYTE PTR [rcx],bl
  409062:	add    BYTE PTR [rax],al
  409064:	fcomp  QWORD PTR [rcx]
  409066:	add    BYTE PTR [rax],al
  409068:	mov    BYTE PTR [rax+0x1aa00000],ah
  40906e:	add    BYTE PTR [rax],al
  409070:	sbb    r8d,DWORD PTR [r8]
  409073:	add    BYTE PTR [rax+0x500000a0],dh
  409079:	sbb    eax,DWORD PTR [rax]
  40907b:	add    BYTE PTR [rcx-0x3fffffe5],dh
  409081:	movabs al,ds:0x1c6700001bc00000
  40908a:	add    BYTE PTR [rax],al
  40908c:	shl    BYTE PTR [rax+0x1c700000],1
  409092:	add    BYTE PTR [rax],al
  409094:	mov    DWORD PTR [rax+rax*1],ebx
  409097:	add    al,bl
  409099:	movabs al,ds:0x1cc500001c900000
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	loopne 0x409046
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	rcr    BYTE PTR [rax+rax*1],1
  4090ab:	add    BYTE PTR [rip+0xffffffffe800001d],ah        # 0xffffffffe84090ce
  4090b1:	movabs al,ds:0x1d4c00001d300000
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	hlt    
  4090bd:	movabs al,ds:0x1d5a00001d500000
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	clc    
  4090c9:	movabs al,ds:0x1d6300001d600000
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	cld    
  4090d5:	movabs al,ds:0x1e4600001d700000
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rcx+0x1e500000],ah
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	rex.WXB (bad) 
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	adc    BYTE PTR [rcx+0x1f500000],ah
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	jg     0x409115
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	and    BYTE PTR [rcx+0x1f800000],ah
  4090fe:	add    BYTE PTR [rax],al
  409100:	jmp    0x28409124
  409105:	movabs eax,ds:0x1ff300001ff00000
  40910e:	add    BYTE PTR [rax],al
  409110:	xor    al,0xa1
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],ah
  409116:	add    BYTE PTR [rax],al
  409118:	and    BYTE PTR [r8],al
  40911b:	add    BYTE PTR [rax],bh
  40911d:	movabs eax,ds:0x205c000020500000
  409126:	add    BYTE PTR [rax],al
  409128:	rex movabs eax,ds:0x215c000020600000
  409132:	add    BYTE PTR [rax],al
  409134:	rex.R movabs eax,ds:0x2163000021600000
  40913e:	add    BYTE PTR [rax],al
  409140:	pop    rsp
  409141:	movabs eax,ds:0x2174000021700000
  40914a:	add    BYTE PTR [rax],al
  40914c:	(bad)  
  40914d:	movabs eax,ds:0x2184000021800000
  409156:	add    BYTE PTR [rax],al
  409158:	movabs eax,fs:0x21f1000021900000
  409162:	add    BYTE PTR [rax],al
  409164:	push   0xa1
  409169:	and    al,BYTE PTR [rax]
  40916b:	add    BYTE PTR [rdx+0x23],ah
  40916e:	add    BYTE PTR [rax],al
  409170:	je     0x409113
  409172:	add    BYTE PTR [rax],al
  409174:	jo     0x409199
  409176:	add    BYTE PTR [rax],al
  409178:	imul   esp,DWORD PTR [rsi],0xa1880000
  40917e:	add    BYTE PTR [rax],al
  409180:	jo     0x4091a8
  409182:	add    BYTE PTR [rax],al
  409184:	(bad)  
  409185:	sub    BYTE PTR [rax],al
  409187:	add    BYTE PTR [rax+0x200000a1],ah
  40918d:	sub    BYTE PTR [rax],al
  40918f:	add    BYTE PTR [rcx+rbp*1],cl
  409192:	add    BYTE PTR [rax],al
  409194:	test   al,0xa1
  409196:	add    BYTE PTR [rax],al
  409198:	adc    BYTE PTR [rcx],ch
  40919a:	add    BYTE PTR [rax],al
  40919c:	enter  0x2a,0x0
  4091a0:	mov    eax,0xd00000a1
  4091a5:	sub    al,BYTE PTR [rax]
  4091a7:	add    BYTE PTR [rip+0xffffffffc000002b],bh        # 0xffffffffc04091d8
  4091ad:	movabs eax,ds:0x2bbf00002b400000
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	shl    BYTE PTR [rcx+0x2bc00000],1
  4091be:	add    BYTE PTR [rax],al
  4091c0:	pop    rdi
  4091c1:	sub    al,0x0
  4091c3:	add    ah,bl
  4091c5:	movabs eax,ds:0x2d3a00002c600000
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	in     al,0xa1
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	rex sub eax,0x2d5f0000
  4091da:	add    BYTE PTR [rax],al
  4091dc:	in     al,dx
  4091dd:	movabs eax,ds:0x2d7200002d600000
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	lock movabs eax,ds:0x2dc500002d800000
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	hlt    
  4091f5:	movabs eax,ds:0x2e6e00002dd00000
  4091fe:	add    BYTE PTR [rax],al
  409200:	clc    
  409201:	movabs eax,ds:0x2eb300002e700000
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    al,0xa2
  40920e:	add    BYTE PTR [rax],al
  409210:	shr    BYTE PTR [rsi],0x0
  409213:	add    bl,bh
  409215:	add    BYTE PTR cs:[rax],al
  409218:	adc    BYTE PTR [rdx+0x2f000000],ah
  40921e:	add    BYTE PTR [rax],al
  409220:	mov    gs,WORD PTR [rdi]
  409222:	add    BYTE PTR [rax],al
  409224:	sbb    BYTE PTR [rdx+0x2f900000],ah
  40922a:	add    BYTE PTR [rax],al
  40922c:	enter  0x2f,0x0
  409230:	and    al,0xa2
  409232:	add    BYTE PTR [rax],al
  409234:	shr    BYTE PTR [rdi],1
  409236:	add    BYTE PTR [rax],al
  409238:	and    eax,0x30000030
  40923d:	movabs ds:0x30de000030300000,al
  409246:	add    BYTE PTR [rax],al
  409248:	cmp    al,0xa2
  40924a:	add    BYTE PTR [rax],al
  40924c:	and    BYTE PTR [rcx],dh
  40924e:	add    BYTE PTR [rax],al
  409250:	(bad)  
  409251:	xor    eax,DWORD PTR [rax]
  409253:	add    BYTE PTR [rdx+riz*4+0x0],cl
  409257:	add    al,dl
  409259:	xor    eax,DWORD PTR [rax]
  40925b:	add    BYTE PTR [rdx+0x34],bh
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	movabs ds:0x3500000034800000,al
  40926a:	add    BYTE PTR [rax],al
  40926c:	jo     0x409210
  40926e:	add    BYTE PTR [rax],al
  409270:	add    BYTE PTR [rip+0x38b60000],dh        # 0x38f69276
  409276:	add    BYTE PTR [rax],al
  409278:	jl     0x40921c
  40927a:	add    BYTE PTR [rax],al
  40927c:	sar    BYTE PTR [rax],0x0
  40927f:	add    BYTE PTR [rbp-0x6bffffc1],ah
  409285:	movabs ds:0x3fd200003fb00000,al
  40928e:	add    BYTE PTR [rax],al
  409290:	lods   al,BYTE PTR ds:[rsi]
  409291:	movabs ds:0x400000003fe00000,al
  40929a:	add    BYTE PTR [rax],al
  40929c:	mov    ah,0xa2
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax+0x0],al
  4092a3:	add    BYTE PTR [rax],ah
  4092a5:	add    BYTE PTR [rax],al
  4092a8:	mov    esp,0x200000a2
  4092ad:	add    BYTE PTR [rax],al
  4092b0:	push   rbx
  4092b1:	add    BYTE PTR [r8],al
  4092b4:	(bad)
  4092b8:	(bad)  
  4092b9:	add    BYTE PTR [r8],al
  4092bc:	and    BYTE PTR [rdx+0x0],al
  4092bf:	add    al,bl
  4092c1:	movabs ds:0x42a7000042200000,al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	call   0x70409373
  4092d1:	add    BYTE PTR [rax],r8b
  4092d4:	js     0x40931a
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	clc    
  4092d9:	movabs ds:0x448b000044800000,al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	cld    
  4092e5:	movabs ds:0x54a8000045600000,al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	cwde   
  4092f1:	.byte 0xa0
	...

Disassembly of section .xdata:

000000000040a000 <.xdata>:
  40a000:	add    DWORD PTR [rax],eax
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rcx+rax*1],eax
  40a007:	add    BYTE PTR [rdx+rax*2],al
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	add    DWORD PTR [rcx+rax*1],eax
  40a00f:	add    BYTE PTR [rdx+riz*2],al
  40a012:	add    BYTE PTR [rax],al
  40a014:	add    DWORD PTR [rdi],ecx
  40a016:	or     BYTE PTR [rax],al
  40a018:	lgdt   [rbx]
  40a01b:	add    BYTE PTR [rax],cl
  40a01d:	xor    BYTE PTR [rdi],al
  40a01f:	(bad)  
  40a020:	(bad)  
  40a021:	jo     0x40a028
  40a023:	push   rax
  40a024:	add    al,0xc0
  40a026:	add    dl,al
  40a028:	or     DWORD PTR [rcx+rax*1],eax
  40a02b:	add    BYTE PTR [rdx+rax*2],al
  40a02e:	add    BYTE PTR [rax],al
  40a030:	push   0x1000044
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    ah,dl
  40a039:	adc    al,0x0
  40a03b:	add    ah,ch
  40a03d:	adc    al,0x0
  40a03f:	add    BYTE PTR [rax],dl
  40a041:	sub    DWORD PTR [rax],eax
  40a043:	add    ah,ch
  40a045:	adc    al,0x0
  40a047:	add    BYTE PTR [rcx],cl
  40a049:	add    al,0x1
  40a04b:	add    BYTE PTR [rdx+rax*2],al
  40a04e:	add    BYTE PTR [rax],al
  40a050:	push   0x1000044
  40a055:	add    BYTE PTR [rax],al
  40a057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40a05e:	add    BYTE PTR [rax],al
  40a060:	adc    BYTE PTR [rcx],ch
  40a062:	add    BYTE PTR [rax],al
  40a064:	sbb    al,0x15
  40a066:	add    BYTE PTR [rax],al
  40a068:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a070
  40a06e:	add    DWORD PTR [rax],esi
  40a070:	add    DWORD PTR [rcx],ebx
  40a072:	or     al,BYTE PTR [rax]
  40a074:	sbb    DWORD PTR [rcx],eax
  40a076:	fild   DWORD PTR [rdi]
  40a078:	adc    DWORD PTR [rax],esi
  40a07a:	adc    BYTE PTR [rax+0xf],ah
  40a07d:	jo     0x40a08d
  40a07f:	push   rax
  40a080:	or     eax,0x4d00bc0
  40a085:	loopne 0x40a089
  40a087:	lock add DWORD PTR [rax],ecx
  40a08a:	add    eax,0x4820800
  40a08f:	xor    BYTE PTR [rbx],al
  40a091:	(bad)  
  40a092:	add    dh,BYTE PTR [rax+0x1]
  40a095:	push   rax
  40a096:	add    BYTE PTR [rax],al
  40a098:	add    DWORD PTR [rbx],edx
  40a09a:	or     al,BYTE PTR [rax]
  40a09c:	adc    eax,DWORD PTR [rcx]
  40a09e:	fwait
  40a09f:	add    BYTE PTR [rax+rsi*1],cl
  40a0a2:	or     esp,DWORD PTR [rax+0xa]
  40a0a5:	jo     0x40a0b0
  40a0a7:	push   rax
  40a0a8:	or     al,al
  40a0aa:	(bad)  
  40a0ab:	rol    BYTE PTR [rax+riz*8],1
  40a0ae:	add    dh,al
  40a0b0:	add    DWORD PTR [rdx],ecx
  40a0b2:	add    eax,0x24010a00
  40a0b7:	add    BYTE PTR [rbx],al
  40a0b9:	xor    BYTE PTR [rdx],al
  40a0bb:	(bad)  
  40a0bc:	add    DWORD PTR [rax+0x0],esi
  40a0bf:	add    BYTE PTR [rcx],al
  40a0c1:	or     BYTE PTR [rip+0x4420800],al        # 0x482a8c7
  40a0c7:	xor    BYTE PTR [rbx],al
  40a0c9:	(bad)  
  40a0ca:	add    dh,BYTE PTR [rax+0x1]
  40a0cd:	push   rax
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245a0d8
  40a0d6:	add    DWORD PTR [rax],esi
  40a0d8:	add    DWORD PTR [rcx+rax*1],eax
  40a0db:	add    BYTE PTR [rdx+rax*2],al
  40a0de:	add    BYTE PTR [rax],al
  40a0e0:	add    DWORD PTR [rcx+rax*1],eax
  40a0e3:	add    BYTE PTR [rdx+rax*2],al
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	add    DWORD PTR [rsi],eax
  40a0ea:	add    eax,DWORD PTR [rax]
  40a0ec:	(bad)  
  40a0ed:	rex.X add sil,BYTE PTR [rax]
  40a0f0:	add    DWORD PTR [rax+0x0],esp
  40a0f3:	add    BYTE PTR [rcx],al
  40a0f5:	add    BYTE PTR [rax],al
  40a0f7:	add    BYTE PTR [rcx],al
  40a0f9:	add    BYTE PTR [rax],al
  40a0fb:	add    BYTE PTR [rcx],al
  40a0fd:	add    BYTE PTR [rax],al
  40a0ff:	add    BYTE PTR [rcx],al
  40a101:	or     al,BYTE PTR [rsi]
  40a103:	add    BYTE PTR [rdx],cl
  40a105:	jb     0x40a10d
  40a107:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a56d
  40a10d:	push   rax
  40a10e:	add    al,al
  40a110:	add    DWORD PTR [rdx],ecx
  40a112:	add    eax,0x6d20a05
  40a117:	add    eax,DWORD PTR [rbx]
  40a119:	xor    BYTE PTR [rdx],al
  40a11b:	(bad)  
  40a11c:	add    DWORD PTR [rax+0x0],edx
  40a11f:	add    BYTE PTR [rcx],al
  40a121:	add    al,0x1
  40a123:	add    BYTE PTR [rdx+rax*2],al
  40a126:	add    BYTE PTR [rax],al
  40a128:	add    DWORD PTR [rsi],eax
  40a12a:	add    eax,DWORD PTR [rax]
  40a12c:	(bad)  
  40a12d:	rex.X add sil,BYTE PTR [rax]
  40a130:	add    DWORD PTR [rax+0x0],esp
  40a133:	add    BYTE PTR [rcx],al
  40a135:	add    BYTE PTR [rax],al
  40a137:	add    BYTE PTR [rcx],al
  40a139:	add    al,0x1
  40a13b:	add    BYTE PTR [rdx+riz*4],al
  40a13e:	add    BYTE PTR [rax],al
  40a140:	add    DWORD PTR [rax],eax
  40a142:	add    BYTE PTR [rax],al
  40a144:	add    DWORD PTR [rsi],edx
  40a146:	or     DWORD PTR [rax],eax
  40a148:	(bad)  
  40a149:	mov    BYTE PTR [rsi],al
  40a14b:	add    BYTE PTR [rax],dl
  40a14d:	js     0x40a154
  40a14f:	add    BYTE PTR [rbx],cl
  40a151:	push   0xffffffffe2060004
  40a156:	add    dh,BYTE PTR [rax]
  40a158:	add    DWORD PTR [rax+0x0],esp
  40a15b:	add    BYTE PTR [rcx],al
  40a15d:	add    BYTE PTR [rax],al
  40a15f:	add    BYTE PTR [rcx],al
  40a161:	add    BYTE PTR [rax],al
  40a163:	add    BYTE PTR [rcx],al
  40a165:	add    BYTE PTR [rax],al
  40a167:	add    BYTE PTR [rcx],al
  40a169:	(bad)  
  40a16a:	add    eax,DWORD PTR [rax]
  40a16c:	(bad)  
  40a16d:	(bad)  
  40a16f:	xor    BYTE PTR [rcx],al
  40a171:	(bad)  
  40a172:	add    BYTE PTR [rax],al
  40a174:	add    DWORD PTR [rdi+rax*1],ecx
  40a177:	add    BYTE PTR [rdx+riz*4],cl
  40a17a:	or     BYTE PTR [rax],dh
  40a17c:	(bad)  
  40a17d:	(bad)  
  40a17e:	(bad)  
  40a17f:	jo     0x40a186
  40a181:	push   rax
  40a182:	add    al,0xc0
  40a184:	add    dl,al
  40a186:	add    BYTE PTR [rax],al
  40a188:	add    DWORD PTR [rcx],edx
  40a18a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e53a1
  40a190:	or     dh,BYTE PTR [rax]
  40a192:	or     DWORD PTR [rax+0x8],esp
  40a195:	jo     0x40a19e
  40a197:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220a56e
  40a19e:	add    BYTE PTR [rax],al
  40a1a0:	add    DWORD PTR [rcx+rax*1],eax
  40a1a3:	add    BYTE PTR [rdx+rax*2],al
  40a1a6:	add    BYTE PTR [rax],al
  40a1a8:	add    DWORD PTR [rdx],ecx
  40a1aa:	(bad)  
  40a1ab:	add    BYTE PTR [rdx],cl
  40a1ad:	xor    al,BYTE PTR [rsi]
  40a1af:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a615
  40a1b5:	push   rax
  40a1b6:	add    al,al
  40a1b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a1c0
  40a1be:	add    DWORD PTR [rax],esi
  40a1c0:	add    DWORD PTR [rax],ecx
  40a1c2:	add    eax,0x4420800
  40a1c7:	xor    BYTE PTR [rbx],al
  40a1c9:	(bad)  
  40a1ca:	add    dh,BYTE PTR [rax+0x1]
  40a1cd:	push   rax
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	add    DWORD PTR [rdi],eax
  40a1d2:	add    al,0x0
  40a1d4:	(bad)  
  40a1d5:	xor    al,BYTE PTR [rbx]
  40a1d7:	xor    BYTE PTR [rdx],al
  40a1d9:	(bad)  
  40a1da:	add    DWORD PTR [rax+0x1],esi
  40a1dd:	add    eax,0x32050002
  40a1e2:	add    DWORD PTR [rax],esi
  40a1e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a1ec
  40a1ea:	add    DWORD PTR [rax],esi
  40a1ec:	add    DWORD PTR [rax],eax
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	add    DWORD PTR [rax],eax
  40a1f2:	add    BYTE PTR [rax],al
  40a1f4:	add    DWORD PTR [rax],eax
  40a1f6:	add    BYTE PTR [rax],al
  40a1f8:	add    DWORD PTR [rdi],eax
  40a1fa:	add    al,0x0
  40a1fc:	(bad)  
  40a1fd:	xor    al,BYTE PTR [rbx]
  40a1ff:	xor    BYTE PTR [rdx],al
  40a201:	(bad)  
  40a202:	add    DWORD PTR [rax+0x1],esi
  40a205:	(bad)  
  40a206:	add    eax,DWORD PTR [rax]
  40a208:	(bad)  
  40a209:	rex.X add sil,BYTE PTR [rax]
  40a20c:	add    DWORD PTR [rax+0x0],esp
  40a20f:	add    BYTE PTR [rcx],al
  40a211:	add    eax,0x32050002
  40a216:	add    DWORD PTR [rax],esi
  40a218:	add    DWORD PTR [rdi],eax
  40a21a:	add    al,0x0
  40a21c:	(bad)  
  40a21d:	xor    al,BYTE PTR [rbx]
  40a21f:	xor    BYTE PTR [rdx],al
  40a221:	(bad)  
  40a222:	add    DWORD PTR [rax+0x1],esi
  40a225:	(bad)  
  40a226:	add    eax,DWORD PTR [rax]
  40a228:	(bad)  
  40a229:	rex.X add sil,BYTE PTR [rax]
  40a22c:	add    DWORD PTR [rax+0x0],esp
  40a22f:	add    BYTE PTR [rcx],al
  40a231:	(bad)  
  40a232:	add    eax,DWORD PTR [rax]
  40a234:	(bad)  
  40a235:	rex.X add sil,BYTE PTR [rax]
  40a238:	add    DWORD PTR [rax+0x0],esp
  40a23b:	add    BYTE PTR [rcx],al
  40a23d:	or     BYTE PTR [rip+0x4420800],al        # 0x482aa43
  40a243:	xor    BYTE PTR [rbx],al
  40a245:	(bad)  
  40a246:	add    dh,BYTE PTR [rax+0x1]
  40a249:	push   rax
  40a24a:	add    BYTE PTR [rax],al
  40a24c:	add    DWORD PTR [rax+rcx*1],edx
  40a24f:	test   DWORD PTR [rbx+rax*1],edx
  40a252:	or     al,0x42
  40a254:	or     BYTE PTR [rax],dh
  40a256:	(bad)  
  40a257:	(bad)  
  40a258:	(bad)  
  40a259:	jo     0x40a260
  40a25b:	rol    BYTE PTR [rbx],0xd0
  40a25e:	add    DWORD PTR [rax+0x1],edx
  40a261:	or     BYTE PTR [rsi],al
  40a263:	add    BYTE PTR [rax],cl
  40a265:	xor    BYTE PTR [rdi],al
  40a267:	(bad)  
  40a268:	(bad)  
  40a269:	jo     0x40a270
  40a26b:	push   rax
  40a26c:	add    al,0xc0
  40a26e:	add    dl,al
  40a270:	add    DWORD PTR [rdi],eax
  40a272:	add    al,0x0
  40a274:	(bad)  
  40a275:	push   rdx
  40a276:	add    esi,DWORD PTR [rax]
  40a278:	add    ah,BYTE PTR [rax+0x1]
  40a27b:	jo     0x40a27e
  40a27d:	adc    BYTE PTR [rcx],cl
  40a27f:	add    BYTE PTR [rax],dl
  40a281:	(bad)  
  40a282:	or     al,0x30
  40a284:	or     esp,DWORD PTR [rax+0xa]
  40a287:	jo     0x40a292
  40a289:	push   rax
  40a28a:	or     al,al
  40a28c:	(bad)  
  40a28d:	rol    BYTE PTR [rax+riz*8],1
  40a290:	add    dh,al
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    DWORD PTR [rax],edx
  40a296:	or     DWORD PTR [rax],eax
  40a298:	adc    BYTE PTR [rdx+0xc],ah
  40a29b:	xor    BYTE PTR [rbx],cl
  40a29d:	(bad)  
  40a29e:	or     dh,BYTE PTR [rax+0x9]
  40a2a1:	push   rax
  40a2a2:	or     al,al
  40a2a4:	(bad)  
  40a2a5:	rol    BYTE PTR [rax+riz*8],1
  40a2a8:	add    dh,al
  40a2aa:	add    BYTE PTR [rax],al
  40a2ac:	add    DWORD PTR [rcx+rax*1],eax
  40a2af:	add    BYTE PTR [rdx+riz*2],al
  40a2b2:	add    BYTE PTR [rax],al
  40a2b4:	add    DWORD PTR [rcx+rax*1],eax
  40a2b7:	add    BYTE PTR [rdx+riz*2],al
  40a2ba:	add    BYTE PTR [rax],al
  40a2bc:	add    DWORD PTR [rcx+rax*1],eax
  40a2bf:	add    BYTE PTR [rdx+riz*2],al
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14da2d1
  40a2ca:	rex.WX add BYTE PTR [rsi],al
  40a2cd:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a733
  40a2d3:	push   rax
  40a2d4:	add    al,al
  40a2d6:	add    BYTE PTR [rax],al
  40a2d8:	add    DWORD PTR [rax],ecx
  40a2da:	add    eax,0x4620800
  40a2df:	xor    BYTE PTR [rbx],al
  40a2e1:	(bad)  
  40a2e2:	add    dh,BYTE PTR [rax+0x1]
  40a2e5:	push   rax
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	add    DWORD PTR [rdx],ecx
  40a2ea:	(bad)  
  40a2eb:	add    BYTE PTR [rdx],cl
  40a2ed:	push   rdx
  40a2ee:	(bad)  
  40a2ef:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a755
  40a2f5:	push   rax
  40a2f6:	add    al,al
  40a2f8:	add    DWORD PTR [rax],eax
  40a2fa:	add    BYTE PTR [rax],al
  40a2fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040b000 <.bss>:
	...

Disassembly of section .idata:

000000000040c000 <.idata>:
  40c000:	js     0x40bfc2
	...
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	movabs al,ds:0x300000c4000000cd
  40c015:	rol    DWORD PTR [rax],0x0
	...
  40c020:	adc    dh,cl
  40c022:	add    BYTE PTR [rax],al
  40c024:	mov    eax,0xf80000c4
  40c029:	rol    DWORD PTR [rax],0x0
	...
  40c034:	adc    bh,cl
  40c036:	add    BYTE PTR [rax],al
  40c038:	add    ch,0x0
  40c03b:	add    al,ah
  40c03d:	ret    
	...
  40c046:	add    BYTE PTR [rax],al
  40c048:	and    bh,cl
  40c04a:	add    BYTE PTR [rax],al
  40c04c:	push   0xfffffffff00000c7
  40c051:	ret    
	...
  40c05a:	add    BYTE PTR [rax],al
  40c05c:	xor    bh,cl
  40c05e:	add    BYTE PTR [rax],al
  40c060:	js     0x40c029
	...
  40c076:	add    BYTE PTR [rax],al
  40c078:	mov    bh,al
  40c07a:	add    BYTE PTR [rax],al
  40c07c:	add    BYTE PTR [rax],al
  40c07e:	add    BYTE PTR [rax],al
  40c080:	xchg   esp,eax
  40c081:	mov    DWORD PTR [rax],0x0
  40c087:	add    BYTE PTR [rax+0xc7],ah
  40c08d:	add    BYTE PTR [rax],al
  40c08f:	add    BYTE PTR [rdi+rax*8+0x0],ch
  40c096:	add    BYTE PTR [rax],al
  40c098:	mov    eax,0xc7
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    ah,al
  40c0a1:	mov    DWORD PTR [rax],0x0
  40c0a7:	add    ah,dl
  40c0a9:	mov    DWORD PTR [rax],0x0
  40c0af:	add    al,ah
  40c0b1:	mov    DWORD PTR [rax],0x0
  40c0b7:	add    ah,ch
  40c0b9:	mov    DWORD PTR [rax],0x0
  40c0bf:	add    al,bh
  40c0c1:	mov    DWORD PTR [rax],0x0
  40c0c7:	add    BYTE PTR [rax],cl
  40c0c9:	enter  0x0,0x0
  40c0cd:	add    BYTE PTR [rax],al
  40c0cf:	add    BYTE PTR [rax+rcx*8],dl
  40c0d2:	add    BYTE PTR [rax],al
  40c0d4:	add    BYTE PTR [rax],al
  40c0d6:	add    BYTE PTR [rax],al
  40c0d8:	and    al,0xc8
  40c0da:	add    BYTE PTR [rax],al
  40c0dc:	add    BYTE PTR [rax],al
  40c0de:	add    BYTE PTR [rax],al
  40c0e0:	xor    al,cl
  40c0e2:	add    BYTE PTR [rax],al
  40c0e4:	add    BYTE PTR [rax],al
  40c0e6:	add    BYTE PTR [rax],al
  40c0e8:	cmp    al,0xc8
  40c0ea:	add    BYTE PTR [rax],al
  40c0ec:	add    BYTE PTR [rax],al
  40c0ee:	add    BYTE PTR [rax],al
  40c0f0:	rex.W enter 0x0,0x0
  40c0f5:	add    BYTE PTR [rax],al
  40c0f7:	add    BYTE PTR [rax-0x38],bl
  40c0fa:	add    BYTE PTR [rax],al
  40c0fc:	add    BYTE PTR [rax],al
  40c0fe:	add    BYTE PTR [rax],al
  40c100:	fs enter 0x0,0x0
  40c105:	add    BYTE PTR [rax],al
  40c107:	add    BYTE PTR [rax-0x38],dh
  40c10a:	add    BYTE PTR [rax],al
  40c10c:	add    BYTE PTR [rax],al
  40c10e:	add    BYTE PTR [rax],al
  40c110:	jl     0x40c0da
  40c112:	add    BYTE PTR [rax],al
  40c114:	add    BYTE PTR [rax],al
  40c116:	add    BYTE PTR [rax],al
  40c118:	test   al,cl
  40c11a:	add    BYTE PTR [rax],al
  40c11c:	add    BYTE PTR [rax],al
  40c11e:	add    BYTE PTR [rax],al
  40c120:	mov    eax,cs
	...
  40c12e:	add    BYTE PTR [rax],al
  40c130:	cwde   
  40c131:	enter  0x0,0x0
  40c135:	add    BYTE PTR [rax],al
  40c137:	add    BYTE PTR [rax+0xc8],dh
  40c13d:	add    BYTE PTR [rax],al
  40c13f:	add    al,cl
  40c141:	enter  0x0,0x0
  40c145:	add    BYTE PTR [rax],al
  40c147:	add    ah,bl
  40c149:	enter  0x0,0x0
  40c14d:	add    BYTE PTR [rax],al
  40c14f:	add    dl,dh
  40c151:	enter  0x0,0x0
  40c155:	add    BYTE PTR [rax],al
  40c157:	add    BYTE PTR [rax],cl
  40c159:	leave  
  40c15a:	add    BYTE PTR [rax],al
  40c15c:	add    BYTE PTR [rax],al
  40c15e:	add    BYTE PTR [rax],al
  40c160:	sbb    cl,cl
  40c162:	add    BYTE PTR [rax],al
  40c164:	add    BYTE PTR [rax],al
  40c166:	add    BYTE PTR [rax],al
  40c168:	cs leave 
  40c16a:	add    BYTE PTR [rax],al
  40c16c:	add    BYTE PTR [rax],al
  40c16e:	add    BYTE PTR [rax],al
  40c170:	rex leave 
  40c172:	add    BYTE PTR [rax],al
  40c174:	add    BYTE PTR [rax],al
  40c176:	add    BYTE PTR [rax],al
  40c178:	pop    rdx
  40c179:	leave  
  40c17a:	add    BYTE PTR [rax],al
  40c17c:	add    BYTE PTR [rax],al
  40c17e:	add    BYTE PTR [rax],al
  40c180:	push   0xffffffffffffffc9
  40c182:	add    BYTE PTR [rax],al
  40c184:	add    BYTE PTR [rax],al
  40c186:	add    BYTE PTR [rax],al
  40c188:	xchg   cl,cl
  40c18a:	add    BYTE PTR [rax],al
  40c18c:	add    BYTE PTR [rax],al
  40c18e:	add    BYTE PTR [rax],al
  40c190:	sahf   
  40c191:	leave  
  40c192:	add    BYTE PTR [rax],al
  40c194:	add    BYTE PTR [rax],al
  40c196:	add    BYTE PTR [rax],al
  40c198:	mov    eax,0xc9
  40c19d:	add    BYTE PTR [rax],al
  40c19f:	add    dh,cl
  40c1a1:	leave  
  40c1a2:	add    BYTE PTR [rax],al
  40c1a4:	add    BYTE PTR [rax],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	loop   0x40c173
  40c1aa:	add    BYTE PTR [rax],al
  40c1ac:	add    BYTE PTR [rax],al
  40c1ae:	add    BYTE PTR [rax],al
  40c1b0:	cld    
  40c1b1:	leave  
  40c1b2:	add    BYTE PTR [rax],al
  40c1b4:	add    BYTE PTR [rax],al
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	adc    dl,cl
  40c1ba:	add    BYTE PTR [rax],al
  40c1bc:	add    BYTE PTR [rax],al
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	cs retf 0x0
  40c1c4:	add    BYTE PTR [rax],al
  40c1c6:	add    BYTE PTR [rax],al
  40c1c8:	ss retf 0x0
  40c1cc:	add    BYTE PTR [rax],al
  40c1ce:	add    BYTE PTR [rax],al
  40c1d0:	rex.WX retf 0x0
  40c1d4:	add    BYTE PTR [rax],al
  40c1d6:	add    BYTE PTR [rax],al
  40c1d8:	pop    rax
  40c1d9:	retf   0x0
  40c1dc:	add    BYTE PTR [rax],al
  40c1de:	add    BYTE PTR [rax],al
  40c1e0:	je     0x40c1ac
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	add    BYTE PTR [rax],al
  40c1e6:	add    BYTE PTR [rax],al
  40c1e8:	xchg   dl,cl
	...
  40c1f6:	add    BYTE PTR [rax],al
  40c1f8:	xchg   esi,eax
  40c1f9:	retf   0x0
  40c1fc:	add    BYTE PTR [rax],al
  40c1fe:	add    BYTE PTR [rax],al
  40c200:	scas   al,BYTE PTR es:[rdi]
  40c201:	retf   0x0
  40c204:	add    BYTE PTR [rax],al
  40c206:	add    BYTE PTR [rax],al
  40c208:	mov    eax,0xca
  40c20d:	add    BYTE PTR [rax],al
  40c20f:	add    dh,al
  40c211:	retf   0x0
  40c214:	add    BYTE PTR [rax],al
  40c216:	add    BYTE PTR [rax],al
  40c218:	(bad)  
  40c219:	retf   0x0
  40c21c:	add    BYTE PTR [rax],al
  40c21e:	add    BYTE PTR [rax],al
  40c220:	loop   0x40c1ec
  40c222:	add    BYTE PTR [rax],al
  40c224:	add    BYTE PTR [rax],al
  40c226:	add    BYTE PTR [rax],al
  40c228:	lock retf 0x0
  40c22c:	add    BYTE PTR [rax],al
  40c22e:	add    BYTE PTR [rax],al
  40c230:	add    bl,cl
  40c232:	add    BYTE PTR [rax],al
  40c234:	add    BYTE PTR [rax],al
  40c236:	add    BYTE PTR [rax],al
  40c238:	adc    cl,bl
  40c23a:	add    BYTE PTR [rax],al
  40c23c:	add    BYTE PTR [rax],al
  40c23e:	add    BYTE PTR [rax],al
  40c240:	es retf 
  40c242:	add    BYTE PTR [rax],al
  40c244:	add    BYTE PTR [rax],al
  40c246:	add    BYTE PTR [rax],al
  40c248:	xor    bl,cl
  40c24a:	add    BYTE PTR [rax],al
  40c24c:	add    BYTE PTR [rax],al
  40c24e:	add    BYTE PTR [rax],al
  40c250:	ds retf 
  40c252:	add    BYTE PTR [rax],al
  40c254:	add    BYTE PTR [rax],al
  40c256:	add    BYTE PTR [rax],al
  40c258:	rex.W retf 
  40c25a:	add    BYTE PTR [rax],al
  40c25c:	add    BYTE PTR [rax],al
  40c25e:	add    BYTE PTR [rax],al
  40c260:	push   rdx
  40c261:	retf   
  40c262:	add    BYTE PTR [rax],al
  40c264:	add    BYTE PTR [rax],al
  40c266:	add    BYTE PTR [rax],al
  40c268:	pop    rdx
  40c269:	retf   
  40c26a:	add    BYTE PTR [rax],al
  40c26c:	add    BYTE PTR [rax],al
  40c26e:	add    BYTE PTR [rax],al
  40c270:	fs retf 
  40c272:	add    BYTE PTR [rax],al
  40c274:	add    BYTE PTR [rax],al
  40c276:	add    BYTE PTR [rax],al
  40c278:	jo     0x40c245
  40c27a:	add    BYTE PTR [rax],al
  40c27c:	add    BYTE PTR [rax],al
  40c27e:	add    BYTE PTR [rax],al
  40c280:	js     0x40c24d
  40c282:	add    BYTE PTR [rax],al
  40c284:	add    BYTE PTR [rax],al
  40c286:	add    BYTE PTR [rax],al
  40c288:	(bad)  
  40c289:	retf   
  40c28a:	add    BYTE PTR [rax],al
  40c28c:	add    BYTE PTR [rax],al
  40c28e:	add    BYTE PTR [rax],al
  40c290:	nop
  40c291:	retf   
  40c292:	add    BYTE PTR [rax],al
  40c294:	add    BYTE PTR [rax],al
  40c296:	add    BYTE PTR [rax],al
  40c298:	(bad)  
  40c299:	retf   
  40c29a:	add    BYTE PTR [rax],al
  40c29c:	add    BYTE PTR [rax],al
  40c29e:	add    BYTE PTR [rax],al
  40c2a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2a1:	retf   
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	add    BYTE PTR [rax],al
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	mov    al,0xcb
  40c2aa:	add    BYTE PTR [rax],al
  40c2ac:	add    BYTE PTR [rax],al
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	mov    esi,0xcb
  40c2b5:	add    BYTE PTR [rax],al
  40c2b7:	add    dh,al
  40c2b9:	retf   
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	add    BYTE PTR [rax],al
  40c2be:	add    BYTE PTR [rax],al
  40c2c0:	ror    bl,1
  40c2c2:	add    BYTE PTR [rax],al
  40c2c4:	add    BYTE PTR [rax],al
  40c2c6:	add    BYTE PTR [rax],al
  40c2c8:	fmul   st,st(3)
  40c2ca:	add    BYTE PTR [rax],al
  40c2cc:	add    BYTE PTR [rax],al
  40c2ce:	add    BYTE PTR [rax],al
  40c2d0:	loop   0x40c29d
  40c2d2:	add    BYTE PTR [rax],al
  40c2d4:	add    BYTE PTR [rax],al
  40c2d6:	add    BYTE PTR [rax],al
  40c2d8:	(bad)  
  40c2d9:	retf   
  40c2da:	add    BYTE PTR [rax],al
  40c2dc:	add    BYTE PTR [rax],al
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	repnz retf 
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	add    BYTE PTR [rax],al
  40c2e6:	add    BYTE PTR [rax],al
  40c2e8:	cld    
  40c2e9:	retf   
  40c2ea:	add    BYTE PTR [rax],al
  40c2ec:	add    BYTE PTR [rax],al
  40c2ee:	add    BYTE PTR [rax],al
  40c2f0:	add    al,0xcc
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	add    BYTE PTR [rax],al
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	or     al,0xcc
  40c2fa:	add    BYTE PTR [rax],al
  40c2fc:	add    BYTE PTR [rax],al
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	adc    al,0xcc
  40c302:	add    BYTE PTR [rax],al
  40c304:	add    BYTE PTR [rax],al
  40c306:	add    BYTE PTR [rax],al
  40c308:	(bad)  
  40c309:	int3   
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	add    BYTE PTR [rax],al
  40c30e:	add    BYTE PTR [rax],al
  40c310:	sub    cl,ah
  40c312:	add    BYTE PTR [rax],al
  40c314:	add    BYTE PTR [rax],al
  40c316:	add    BYTE PTR [rax],al
  40c318:	xor    al,0xcc
  40c31a:	add    BYTE PTR [rax],al
  40c31c:	add    BYTE PTR [rax],al
  40c31e:	add    BYTE PTR [rax],al
  40c320:	ds int3 
  40c322:	add    BYTE PTR [rax],al
  40c324:	add    BYTE PTR [rax],al
  40c326:	add    BYTE PTR [rax],al
  40c328:	rex.W int3 
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	add    BYTE PTR [rax],al
  40c32e:	add    BYTE PTR [rax],al
  40c330:	push   rsp
  40c331:	int3   
  40c332:	add    BYTE PTR [rax],al
  40c334:	add    BYTE PTR [rax],al
  40c336:	add    BYTE PTR [rax],al
  40c338:	pop    rsi
  40c339:	int3   
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	add    BYTE PTR [rax],al
  40c33e:	add    BYTE PTR [rax],al
  40c340:	push   0xcc
  40c345:	add    BYTE PTR [rax],al
  40c347:	add    BYTE PTR [rdx-0x34],dh
  40c34a:	add    BYTE PTR [rax],al
  40c34c:	add    BYTE PTR [rax],al
  40c34e:	add    BYTE PTR [rax],al
  40c350:	jl     0x40c31e
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    BYTE PTR [rax],al
  40c356:	add    BYTE PTR [rax],al
  40c358:	test   ah,cl
  40c35a:	add    BYTE PTR [rax],al
  40c35c:	add    BYTE PTR [rax],al
  40c35e:	add    BYTE PTR [rax],al
  40c360:	mov    esp,cs
  40c362:	add    BYTE PTR [rax],al
  40c364:	add    BYTE PTR [rax],al
  40c366:	add    BYTE PTR [rax],al
  40c368:	xchg   esi,eax
  40c369:	int3   
  40c36a:	add    BYTE PTR [rax],al
  40c36c:	add    BYTE PTR [rax],al
  40c36e:	add    BYTE PTR [rax],al
  40c370:	movabs al,ds:0xac000000000000cc
  40c379:	int3   
  40c37a:	add    BYTE PTR [rax],al
  40c37c:	add    BYTE PTR [rax],al
  40c37e:	add    BYTE PTR [rax],al
  40c380:	mov    dh,0xcc
  40c382:	add    BYTE PTR [rax],al
  40c384:	add    BYTE PTR [rax],al
  40c386:	add    BYTE PTR [rax],al
  40c388:	ror    ah,0x0
  40c38b:	add    BYTE PTR [rax],al
  40c38d:	add    BYTE PTR [rax],al
  40c38f:	add    dl,cl
  40c391:	int3   
  40c392:	add    BYTE PTR [rax],al
  40c394:	add    BYTE PTR [rax],al
  40c396:	add    BYTE PTR [rax],al
  40c398:	(bad)  
  40c399:	int3   
  40c39a:	add    BYTE PTR [rax],al
  40c39c:	add    BYTE PTR [rax],al
  40c39e:	add    BYTE PTR [rax],al
  40c3a0:	loopne 0x40c36e
  40c3a2:	add    BYTE PTR [rax],al
  40c3a4:	add    BYTE PTR [rax],al
  40c3a6:	add    BYTE PTR [rax],al
  40c3a8:	(bad)  
  40c3a9:	int3   
  40c3aa:	add    BYTE PTR [rax],al
  40c3ac:	add    BYTE PTR [rax],al
  40c3ae:	add    BYTE PTR [rax],al
  40c3b0:	hlt    
  40c3b1:	int3   
  40c3b2:	add    BYTE PTR [rax],al
  40c3b4:	add    BYTE PTR [rax],al
  40c3b6:	add    BYTE PTR [rax],al
  40c3b8:	dec    ah
  40c3ba:	add    BYTE PTR [rax],al
  40c3bc:	add    BYTE PTR [rax],al
  40c3be:	add    BYTE PTR [rax],al
  40c3c0:	or     cl,ch
  40c3c2:	add    BYTE PTR [rax],al
  40c3c4:	add    BYTE PTR [rax],al
  40c3c6:	add    BYTE PTR [rax],al
  40c3c8:	adc    al,0xcd
  40c3ca:	add    BYTE PTR [rax],al
  40c3cc:	add    BYTE PTR [rax],al
  40c3ce:	add    BYTE PTR [rax],al
  40c3d0:	and    ch,cl
	...
  40c3de:	add    BYTE PTR [rax],al
  40c3e0:	sub    cl,ch
	...
  40c3ee:	add    BYTE PTR [rax],al
  40c3f0:	cmp    ch,cl
	...
  40c3fe:	add    BYTE PTR [rax],al
  40c400:	mov    bh,al
  40c402:	add    BYTE PTR [rax],al
  40c404:	add    BYTE PTR [rax],al
  40c406:	add    BYTE PTR [rax],al
  40c408:	xchg   esp,eax
  40c409:	mov    DWORD PTR [rax],0x0
  40c40f:	add    BYTE PTR [rax+0xc7],ah
  40c415:	add    BYTE PTR [rax],al
  40c417:	add    BYTE PTR [rdi+rax*8+0x0],ch
  40c41e:	add    BYTE PTR [rax],al
  40c420:	mov    eax,0xc7
  40c425:	add    BYTE PTR [rax],al
  40c427:	add    ah,al
  40c429:	mov    DWORD PTR [rax],0x0
  40c42f:	add    ah,dl
  40c431:	mov    DWORD PTR [rax],0x0
  40c437:	add    al,ah
  40c439:	mov    DWORD PTR [rax],0x0
  40c43f:	add    ah,ch
  40c441:	mov    DWORD PTR [rax],0x0
  40c447:	add    al,bh
  40c449:	mov    DWORD PTR [rax],0x0
  40c44f:	add    BYTE PTR [rax],cl
  40c451:	enter  0x0,0x0
  40c455:	add    BYTE PTR [rax],al
  40c457:	add    BYTE PTR [rax+rcx*8],dl
  40c45a:	add    BYTE PTR [rax],al
  40c45c:	add    BYTE PTR [rax],al
  40c45e:	add    BYTE PTR [rax],al
  40c460:	and    al,0xc8
  40c462:	add    BYTE PTR [rax],al
  40c464:	add    BYTE PTR [rax],al
  40c466:	add    BYTE PTR [rax],al
  40c468:	xor    al,cl
  40c46a:	add    BYTE PTR [rax],al
  40c46c:	add    BYTE PTR [rax],al
  40c46e:	add    BYTE PTR [rax],al
  40c470:	cmp    al,0xc8
  40c472:	add    BYTE PTR [rax],al
  40c474:	add    BYTE PTR [rax],al
  40c476:	add    BYTE PTR [rax],al
  40c478:	rex.W enter 0x0,0x0
  40c47d:	add    BYTE PTR [rax],al
  40c47f:	add    BYTE PTR [rax-0x38],bl
  40c482:	add    BYTE PTR [rax],al
  40c484:	add    BYTE PTR [rax],al
  40c486:	add    BYTE PTR [rax],al
  40c488:	fs enter 0x0,0x0
  40c48d:	add    BYTE PTR [rax],al
  40c48f:	add    BYTE PTR [rax-0x38],dh
  40c492:	add    BYTE PTR [rax],al
  40c494:	add    BYTE PTR [rax],al
  40c496:	add    BYTE PTR [rax],al
  40c498:	jl     0x40c462
  40c49a:	add    BYTE PTR [rax],al
  40c49c:	add    BYTE PTR [rax],al
  40c49e:	add    BYTE PTR [rax],al
  40c4a0:	test   al,cl
  40c4a2:	add    BYTE PTR [rax],al
  40c4a4:	add    BYTE PTR [rax],al
  40c4a6:	add    BYTE PTR [rax],al
  40c4a8:	mov    eax,cs
	...
  40c4b6:	add    BYTE PTR [rax],al
  40c4b8:	cwde   
  40c4b9:	enter  0x0,0x0
  40c4bd:	add    BYTE PTR [rax],al
  40c4bf:	add    BYTE PTR [rax+0xc8],dh
  40c4c5:	add    BYTE PTR [rax],al
  40c4c7:	add    al,cl
  40c4c9:	enter  0x0,0x0
  40c4cd:	add    BYTE PTR [rax],al
  40c4cf:	add    ah,bl
  40c4d1:	enter  0x0,0x0
  40c4d5:	add    BYTE PTR [rax],al
  40c4d7:	add    dl,dh
  40c4d9:	enter  0x0,0x0
  40c4dd:	add    BYTE PTR [rax],al
  40c4df:	add    BYTE PTR [rax],cl
  40c4e1:	leave  
  40c4e2:	add    BYTE PTR [rax],al
  40c4e4:	add    BYTE PTR [rax],al
  40c4e6:	add    BYTE PTR [rax],al
  40c4e8:	sbb    cl,cl
  40c4ea:	add    BYTE PTR [rax],al
  40c4ec:	add    BYTE PTR [rax],al
  40c4ee:	add    BYTE PTR [rax],al
  40c4f0:	cs leave 
  40c4f2:	add    BYTE PTR [rax],al
  40c4f4:	add    BYTE PTR [rax],al
  40c4f6:	add    BYTE PTR [rax],al
  40c4f8:	rex leave 
  40c4fa:	add    BYTE PTR [rax],al
  40c4fc:	add    BYTE PTR [rax],al
  40c4fe:	add    BYTE PTR [rax],al
  40c500:	pop    rdx
  40c501:	leave  
  40c502:	add    BYTE PTR [rax],al
  40c504:	add    BYTE PTR [rax],al
  40c506:	add    BYTE PTR [rax],al
  40c508:	push   0xffffffffffffffc9
  40c50a:	add    BYTE PTR [rax],al
  40c50c:	add    BYTE PTR [rax],al
  40c50e:	add    BYTE PTR [rax],al
  40c510:	xchg   cl,cl
  40c512:	add    BYTE PTR [rax],al
  40c514:	add    BYTE PTR [rax],al
  40c516:	add    BYTE PTR [rax],al
  40c518:	sahf   
  40c519:	leave  
  40c51a:	add    BYTE PTR [rax],al
  40c51c:	add    BYTE PTR [rax],al
  40c51e:	add    BYTE PTR [rax],al
  40c520:	mov    eax,0xc9
  40c525:	add    BYTE PTR [rax],al
  40c527:	add    dh,cl
  40c529:	leave  
  40c52a:	add    BYTE PTR [rax],al
  40c52c:	add    BYTE PTR [rax],al
  40c52e:	add    BYTE PTR [rax],al
  40c530:	loop   0x40c4fb
  40c532:	add    BYTE PTR [rax],al
  40c534:	add    BYTE PTR [rax],al
  40c536:	add    BYTE PTR [rax],al
  40c538:	cld    
  40c539:	leave  
  40c53a:	add    BYTE PTR [rax],al
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	adc    dl,cl
  40c542:	add    BYTE PTR [rax],al
  40c544:	add    BYTE PTR [rax],al
  40c546:	add    BYTE PTR [rax],al
  40c548:	cs retf 0x0
  40c54c:	add    BYTE PTR [rax],al
  40c54e:	add    BYTE PTR [rax],al
  40c550:	ss retf 0x0
  40c554:	add    BYTE PTR [rax],al
  40c556:	add    BYTE PTR [rax],al
  40c558:	rex.WX retf 0x0
  40c55c:	add    BYTE PTR [rax],al
  40c55e:	add    BYTE PTR [rax],al
  40c560:	pop    rax
  40c561:	retf   0x0
  40c564:	add    BYTE PTR [rax],al
  40c566:	add    BYTE PTR [rax],al
  40c568:	je     0x40c534
  40c56a:	add    BYTE PTR [rax],al
  40c56c:	add    BYTE PTR [rax],al
  40c56e:	add    BYTE PTR [rax],al
  40c570:	xchg   dl,cl
	...
  40c57e:	add    BYTE PTR [rax],al
  40c580:	xchg   esi,eax
  40c581:	retf   0x0
  40c584:	add    BYTE PTR [rax],al
  40c586:	add    BYTE PTR [rax],al
  40c588:	scas   al,BYTE PTR es:[rdi]
  40c589:	retf   0x0
  40c58c:	add    BYTE PTR [rax],al
  40c58e:	add    BYTE PTR [rax],al
  40c590:	mov    eax,0xca
  40c595:	add    BYTE PTR [rax],al
  40c597:	add    dh,al
  40c599:	retf   0x0
  40c59c:	add    BYTE PTR [rax],al
  40c59e:	add    BYTE PTR [rax],al
  40c5a0:	(bad)  
  40c5a1:	retf   0x0
  40c5a4:	add    BYTE PTR [rax],al
  40c5a6:	add    BYTE PTR [rax],al
  40c5a8:	loop   0x40c574
  40c5aa:	add    BYTE PTR [rax],al
  40c5ac:	add    BYTE PTR [rax],al
  40c5ae:	add    BYTE PTR [rax],al
  40c5b0:	lock retf 0x0
  40c5b4:	add    BYTE PTR [rax],al
  40c5b6:	add    BYTE PTR [rax],al
  40c5b8:	add    bl,cl
  40c5ba:	add    BYTE PTR [rax],al
  40c5bc:	add    BYTE PTR [rax],al
  40c5be:	add    BYTE PTR [rax],al
  40c5c0:	adc    cl,bl
  40c5c2:	add    BYTE PTR [rax],al
  40c5c4:	add    BYTE PTR [rax],al
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	es retf 
  40c5ca:	add    BYTE PTR [rax],al
  40c5cc:	add    BYTE PTR [rax],al
  40c5ce:	add    BYTE PTR [rax],al
  40c5d0:	xor    bl,cl
  40c5d2:	add    BYTE PTR [rax],al
  40c5d4:	add    BYTE PTR [rax],al
  40c5d6:	add    BYTE PTR [rax],al
  40c5d8:	ds retf 
  40c5da:	add    BYTE PTR [rax],al
  40c5dc:	add    BYTE PTR [rax],al
  40c5de:	add    BYTE PTR [rax],al
  40c5e0:	rex.W retf 
  40c5e2:	add    BYTE PTR [rax],al
  40c5e4:	add    BYTE PTR [rax],al
  40c5e6:	add    BYTE PTR [rax],al
  40c5e8:	push   rdx
  40c5e9:	retf   
  40c5ea:	add    BYTE PTR [rax],al
  40c5ec:	add    BYTE PTR [rax],al
  40c5ee:	add    BYTE PTR [rax],al
  40c5f0:	pop    rdx
  40c5f1:	retf   
  40c5f2:	add    BYTE PTR [rax],al
  40c5f4:	add    BYTE PTR [rax],al
  40c5f6:	add    BYTE PTR [rax],al
  40c5f8:	fs retf 
  40c5fa:	add    BYTE PTR [rax],al
  40c5fc:	add    BYTE PTR [rax],al
  40c5fe:	add    BYTE PTR [rax],al
  40c600:	jo     0x40c5cd
  40c602:	add    BYTE PTR [rax],al
  40c604:	add    BYTE PTR [rax],al
  40c606:	add    BYTE PTR [rax],al
  40c608:	js     0x40c5d5
  40c60a:	add    BYTE PTR [rax],al
  40c60c:	add    BYTE PTR [rax],al
  40c60e:	add    BYTE PTR [rax],al
  40c610:	(bad)  
  40c611:	retf   
  40c612:	add    BYTE PTR [rax],al
  40c614:	add    BYTE PTR [rax],al
  40c616:	add    BYTE PTR [rax],al
  40c618:	nop
  40c619:	retf   
  40c61a:	add    BYTE PTR [rax],al
  40c61c:	add    BYTE PTR [rax],al
  40c61e:	add    BYTE PTR [rax],al
  40c620:	(bad)  
  40c621:	retf   
  40c622:	add    BYTE PTR [rax],al
  40c624:	add    BYTE PTR [rax],al
  40c626:	add    BYTE PTR [rax],al
  40c628:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c629:	retf   
  40c62a:	add    BYTE PTR [rax],al
  40c62c:	add    BYTE PTR [rax],al
  40c62e:	add    BYTE PTR [rax],al
  40c630:	mov    al,0xcb
  40c632:	add    BYTE PTR [rax],al
  40c634:	add    BYTE PTR [rax],al
  40c636:	add    BYTE PTR [rax],al
  40c638:	mov    esi,0xcb
  40c63d:	add    BYTE PTR [rax],al
  40c63f:	add    dh,al
  40c641:	retf   
  40c642:	add    BYTE PTR [rax],al
  40c644:	add    BYTE PTR [rax],al
  40c646:	add    BYTE PTR [rax],al
  40c648:	ror    bl,1
  40c64a:	add    BYTE PTR [rax],al
  40c64c:	add    BYTE PTR [rax],al
  40c64e:	add    BYTE PTR [rax],al
  40c650:	fmul   st,st(3)
  40c652:	add    BYTE PTR [rax],al
  40c654:	add    BYTE PTR [rax],al
  40c656:	add    BYTE PTR [rax],al
  40c658:	loop   0x40c625
  40c65a:	add    BYTE PTR [rax],al
  40c65c:	add    BYTE PTR [rax],al
  40c65e:	add    BYTE PTR [rax],al
  40c660:	(bad)  
  40c661:	retf   
  40c662:	add    BYTE PTR [rax],al
  40c664:	add    BYTE PTR [rax],al
  40c666:	add    BYTE PTR [rax],al
  40c668:	repnz retf 
  40c66a:	add    BYTE PTR [rax],al
  40c66c:	add    BYTE PTR [rax],al
  40c66e:	add    BYTE PTR [rax],al
  40c670:	cld    
  40c671:	retf   
  40c672:	add    BYTE PTR [rax],al
  40c674:	add    BYTE PTR [rax],al
  40c676:	add    BYTE PTR [rax],al
  40c678:	add    al,0xcc
  40c67a:	add    BYTE PTR [rax],al
  40c67c:	add    BYTE PTR [rax],al
  40c67e:	add    BYTE PTR [rax],al
  40c680:	or     al,0xcc
  40c682:	add    BYTE PTR [rax],al
  40c684:	add    BYTE PTR [rax],al
  40c686:	add    BYTE PTR [rax],al
  40c688:	adc    al,0xcc
  40c68a:	add    BYTE PTR [rax],al
  40c68c:	add    BYTE PTR [rax],al
  40c68e:	add    BYTE PTR [rax],al
  40c690:	(bad)  
  40c691:	int3   
  40c692:	add    BYTE PTR [rax],al
  40c694:	add    BYTE PTR [rax],al
  40c696:	add    BYTE PTR [rax],al
  40c698:	sub    cl,ah
  40c69a:	add    BYTE PTR [rax],al
  40c69c:	add    BYTE PTR [rax],al
  40c69e:	add    BYTE PTR [rax],al
  40c6a0:	xor    al,0xcc
  40c6a2:	add    BYTE PTR [rax],al
  40c6a4:	add    BYTE PTR [rax],al
  40c6a6:	add    BYTE PTR [rax],al
  40c6a8:	ds int3 
  40c6aa:	add    BYTE PTR [rax],al
  40c6ac:	add    BYTE PTR [rax],al
  40c6ae:	add    BYTE PTR [rax],al
  40c6b0:	rex.W int3 
  40c6b2:	add    BYTE PTR [rax],al
  40c6b4:	add    BYTE PTR [rax],al
  40c6b6:	add    BYTE PTR [rax],al
  40c6b8:	push   rsp
  40c6b9:	int3   
  40c6ba:	add    BYTE PTR [rax],al
  40c6bc:	add    BYTE PTR [rax],al
  40c6be:	add    BYTE PTR [rax],al
  40c6c0:	pop    rsi
  40c6c1:	int3   
  40c6c2:	add    BYTE PTR [rax],al
  40c6c4:	add    BYTE PTR [rax],al
  40c6c6:	add    BYTE PTR [rax],al
  40c6c8:	push   0xcc
  40c6cd:	add    BYTE PTR [rax],al
  40c6cf:	add    BYTE PTR [rdx-0x34],dh
  40c6d2:	add    BYTE PTR [rax],al
  40c6d4:	add    BYTE PTR [rax],al
  40c6d6:	add    BYTE PTR [rax],al
  40c6d8:	jl     0x40c6a6
  40c6da:	add    BYTE PTR [rax],al
  40c6dc:	add    BYTE PTR [rax],al
  40c6de:	add    BYTE PTR [rax],al
  40c6e0:	test   ah,cl
  40c6e2:	add    BYTE PTR [rax],al
  40c6e4:	add    BYTE PTR [rax],al
  40c6e6:	add    BYTE PTR [rax],al
  40c6e8:	mov    esp,cs
  40c6ea:	add    BYTE PTR [rax],al
  40c6ec:	add    BYTE PTR [rax],al
  40c6ee:	add    BYTE PTR [rax],al
  40c6f0:	xchg   esi,eax
  40c6f1:	int3   
  40c6f2:	add    BYTE PTR [rax],al
  40c6f4:	add    BYTE PTR [rax],al
  40c6f6:	add    BYTE PTR [rax],al
  40c6f8:	movabs al,ds:0xac000000000000cc
  40c701:	int3   
  40c702:	add    BYTE PTR [rax],al
  40c704:	add    BYTE PTR [rax],al
  40c706:	add    BYTE PTR [rax],al
  40c708:	mov    dh,0xcc
  40c70a:	add    BYTE PTR [rax],al
  40c70c:	add    BYTE PTR [rax],al
  40c70e:	add    BYTE PTR [rax],al
  40c710:	ror    ah,0x0
  40c713:	add    BYTE PTR [rax],al
  40c715:	add    BYTE PTR [rax],al
  40c717:	add    dl,cl
  40c719:	int3   
  40c71a:	add    BYTE PTR [rax],al
  40c71c:	add    BYTE PTR [rax],al
  40c71e:	add    BYTE PTR [rax],al
  40c720:	(bad)  
  40c721:	int3   
  40c722:	add    BYTE PTR [rax],al
  40c724:	add    BYTE PTR [rax],al
  40c726:	add    BYTE PTR [rax],al
  40c728:	loopne 0x40c6f6
  40c72a:	add    BYTE PTR [rax],al
  40c72c:	add    BYTE PTR [rax],al
  40c72e:	add    BYTE PTR [rax],al
  40c730:	(bad)  
  40c731:	int3   
  40c732:	add    BYTE PTR [rax],al
  40c734:	add    BYTE PTR [rax],al
  40c736:	add    BYTE PTR [rax],al
  40c738:	hlt    
  40c739:	int3   
  40c73a:	add    BYTE PTR [rax],al
  40c73c:	add    BYTE PTR [rax],al
  40c73e:	add    BYTE PTR [rax],al
  40c740:	dec    ah
  40c742:	add    BYTE PTR [rax],al
  40c744:	add    BYTE PTR [rax],al
  40c746:	add    BYTE PTR [rax],al
  40c748:	or     cl,ch
  40c74a:	add    BYTE PTR [rax],al
  40c74c:	add    BYTE PTR [rax],al
  40c74e:	add    BYTE PTR [rax],al
  40c750:	adc    al,0xcd
  40c752:	add    BYTE PTR [rax],al
  40c754:	add    BYTE PTR [rax],al
  40c756:	add    BYTE PTR [rax],al
  40c758:	and    ch,cl
	...
  40c766:	add    BYTE PTR [rax],al
  40c768:	sub    cl,ch
	...
  40c776:	add    BYTE PTR [rax],al
  40c778:	cmp    ch,cl
	...
  40c786:	add    BYTE PTR [rax],al
  40c788:	sbb    al,BYTE PTR [rax]
  40c78a:	fs (bad) 
  40c78d:	imul   ebp,DWORD PTR [rsi+0x64],0x0
  40c794:	and    eax,0x63626400
  40c799:	outs   dx,DWORD PTR ds:[rsi]
  40c79a:	ins    BYTE PTR es:[rdi],dx
  40c79b:	ins    BYTE PTR es:[rdi],dx
  40c79c:	outs   dx,BYTE PTR gs:[rsi]
  40c79e:	add    BYTE PTR [rax],al
  40c7a0:	add    BYTE PTR es:[rdx+riz*2+0x63],ah
  40c7a5:	outs   dx,DWORD PTR ds:[rsi]
  40c7a6:	ins    BYTE PTR es:[rdi],dx
  40c7a7:	outs   dx,BYTE PTR ds:[rsi]
  40c7a8:	(bad)  
  40c7a9:	ins    DWORD PTR es:[rdi],dx
  40c7aa:	add    BYTE PTR gs:[rax],dh
  40c7ad:	add    BYTE PTR [rdx+riz*2+0x64],ah
  40c7b1:	(bad)  
  40c7b2:	je     0x40c815
  40c7b4:	add    BYTE PTR [rax],al
  40c7b6:	add    BYTE PTR [rax],al
  40c7b8:	xor    eax,DWORD PTR [rax]
  40c7ba:	fs (bad) 
  40c7bc:	fs (bad) 
  40c7be:	je     0x40c82c
  40c7c0:	outs   dx,BYTE PTR gs:[rsi]
  40c7c2:	add    BYTE PTR [rax],al
  40c7c4:	xor    eax,0x65626400
  40c7c9:	jb     0x40c83d
  40c7cb:	push   0x6c646e61
  40c7d0:	add    BYTE PTR gs:[rax],al
  40c7d3:	add    BYTE PTR [rdi],dh
  40c7d5:	add    BYTE PTR [rdx+riz*2+0x66],ah
  40c7d9:	movsxd ebp,DWORD PTR [rbp+0x64]
  40c7dc:	add    BYTE PTR [rax],al
  40c7de:	add    BYTE PTR [rax],al
  40c7e0:	add    BYTE PTR [rdx+r12*2+0x69],spl
  40c7e5:	outs   dx,BYTE PTR ds:[rsi]
  40c7e6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x490000
  40c7ee:	fs (bad) 
  40c7f0:	ins    BYTE PTR es:[rdi],dx
  40c7f1:	outs   dx,DWORD PTR ds:[rsi]
  40c7f2:	imul   ebp,DWORD PTR [esi+0x0],0x5c0000
  40c7fa:	fs (bad) 
  40c7fc:	ins    DWORD PTR es:[rdi],dx
  40c7fd:	jae    0x40c866
  40c7ff:	push   0x6c646e61
  40c804:	add    BYTE PTR gs:[rax],al
  40c807:	add    BYTE PTR [rsi+0x0],bl
  40c80a:	fs (bad) 
  40c80c:	outs   dx,BYTE PTR ds:[rsi]
  40c80d:	gs js  0x40c884
  40c810:	jb     0x40c881
  40c812:	ja     0x40c814
  40c814:	(bad)  
  40c815:	add    BYTE PTR [rdx+riz*2+0x6e],ah
  40c819:	jne    0x40c887
  40c81b:	ins    BYTE PTR es:[rdi],dx
  40c81c:	(bad)  
  40c81d:	imul   ebp,DWORD PTR [rsi+0x64],0x0
  40c824:	(bad)  
  40c825:	add    BYTE PTR [rdx+riz*2+0x6e],ah
  40c829:	jne    0x40c898
  40c82b:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40c82e:	jae    0x40c830
  40c830:	jb     0x40c832
  40c832:	(bad)
  40c838:	ins    BYTE PTR es:[rdi],dx
  40c839:	je     0x40c8ae
  40c83b:	add    BYTE PTR [rax+0x0],bh
  40c83e:	(bad)
  40c844:	add    BYTE PTR [rax],al
  40c846:	add    BYTE PTR [rax],al
  40c848:	test   DWORD PTR [rax],eax
  40c84a:	(bad)
  40c850:	outs   dx,BYTE PTR ds:[rsi]
  40c851:	(bad)  
  40c852:	ins    DWORD PTR es:[rdi],dx
  40c853:	add    BYTE PTR gs:[rax],al
  40c856:	add    BYTE PTR [rax],al
  40c858:	xchg   esp,eax
  40c859:	add    BYTE PTR [rdx+riz*2+0x73],ah
  40c85d:	jno    0x40c8cb
  40c85f:	gs js  0x40c8c7
  40c862:	movsxd eax,DWORD PTR [rax]
  40c864:	xchg   ebp,eax
  40c865:	add    BYTE PTR [rdx+riz*2+0x73],ah
  40c869:	jno    0x40c8d7
  40c86b:	outs   dx,DWORD PTR ds:[rsi]
  40c86c:	imul   eax,DWORD PTR [rax],0x0
  40c86f:	add    BYTE PTR [rsi+0x73626400],dl
  40c875:	jno    0x40c8e3
  40c877:	jae    0x40c8de
  40c879:	outs   dx,BYTE PTR ds:[rsi]
  40c87a:	add    BYTE PTR fs:[rbx+0x74626400],bl
  40c881:	fs jae 0x40c884
  40c884:	sahf   
  40c885:	add    BYTE PTR [rdx+riz*2+0x75],ah
  40c889:	jae    0x40c8f0
  40c88b:	add    BYTE PTR [rbx+0x73647400],ah
  40c891:	fs (bad) 
  40c893:	outs   dx,DWORD PTR ds:[rsi]
  40c894:	jo     0x40c8fb
  40c896:	outs   dx,BYTE PTR ds:[rsi]
  40c897:	add    al,bl
  40c899:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40c89d:	gs je  0x40c905
  40c8a0:	rex.XB jb 0x40c90c
  40c8a3:	je     0x40c90e
  40c8a5:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c8a8:	push   rbx
  40c8a9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c8ae:	outs   dx,BYTE PTR ds:[rsi]
  40c8af:	add    al,bh
  40c8b1:	add    BYTE PTR [rbp+0x6e],al
  40c8b4:	je     0x40c91b
  40c8b6:	jb     0x40c8fb
  40c8b8:	jb     0x40c923
  40c8ba:	je     0x40c925
  40c8bc:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c8bf:	push   rbx
  40c8c0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c8c5:	outs   dx,BYTE PTR ds:[rsi]
  40c8c6:	add    BYTE PTR [rax],al
  40c8c8:	int    0x1
  40c8ca:	rex.RXB
  40c8cb:	gs je  0x40c911
  40c8ce:	jne    0x40c942
  40c8d0:	jb     0x40c937
  40c8d2:	outs   dx,BYTE PTR ds:[rsi]
  40c8d3:	je     0x40c925
  40c8d5:	jb     0x40c946
  40c8d7:	movsxd esp,DWORD PTR [rbp+0x73]
  40c8da:	jae    0x40c8dc
  40c8dc:	(bad)  
  40c8dd:	add    DWORD PTR [rdi+0x65],eax
  40c8e0:	je     0x40c925
  40c8e2:	jne    0x40c956
  40c8e4:	jb     0x40c94b
  40c8e6:	outs   dx,BYTE PTR ds:[rsi]
  40c8e7:	je     0x40c939
  40c8e9:	jb     0x40c95a
  40c8eb:	movsxd esp,DWORD PTR [rbp+0x73]
  40c8ee:	jae    0x40c939
  40c8f0:	fs add dl,dl
  40c8f3:	add    DWORD PTR [rdi+0x65],eax
  40c8f6:	je     0x40c93b
  40c8f8:	jne    0x40c96c
  40c8fa:	jb     0x40c961
  40c8fc:	outs   dx,BYTE PTR ds:[rsi]
  40c8fd:	je     0x40c953
  40c8ff:	push   0x64616572
  40c904:	rex.WB
  40c905:	add    BYTE PTR fs:[rax],al
  40c908:	adc    BYTE PTR [rdx],al
  40c90a:	rex.RXB
  40c90b:	gs je  0x40c95a
  40c90e:	(bad)  
  40c90f:	jae    0x40c985
  40c911:	rex.RB jb 0x40c986
  40c914:	outs   dx,DWORD PTR ds:[rsi]
  40c915:	jb     0x40c917
  40c917:	add    BYTE PTR [rbx],ah
  40c919:	add    al,BYTE PTR [rdi+0x65]
  40c91c:	je     0x40c96b
  40c91e:	outs   dx,DWORD PTR ds:[rsi]
  40c91f:	fs jne 0x40c98e
  40c922:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  40c92c:	add    BYTE PTR [rax],al
  40c92e:	jae    0x40c932
  40c930:	rex.RXB
  40c931:	gs je  0x40c987
  40c934:	je     0x40c997
  40c936:	jb     0x40c9ac
  40c938:	jne    0x40c9aa
  40c93a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40c93c:	outs   dx,WORD PTR ds:[rsi]
  40c93e:	add    BYTE PTR [r10+0x74654702],cl
  40c945:	push   rbx
  40c946:	jns    0x40c9bb
  40c948:	je     0x40c9af
  40c94a:	ins    DWORD PTR es:[rdi],dx
  40c94b:	push   rsp
  40c94c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40c953:	ins    BYTE PTR es:[rdi],dx
  40c954:	gs push rsp
  40c956:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40c95d:	gs je  0x40c9b4
  40c960:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40c967:	je     0x40c969
  40c969:	add    cl,bh
  40c96b:	add    cl,BYTE PTR [rcx+0x6e]
  40c96e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40c976:	rex.XB jb 0x40c9e2
  40c979:	je     0x40c9e4
  40c97b:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c97e:	push   rbx
  40c97f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c984:	outs   dx,BYTE PTR ds:[rsi]
  40c985:	add    BYTE PTR [rbx+0x3],cl
  40c988:	rex.WR
  40c989:	gs (bad) 
  40c98b:	jbe    0x40c9f2
  40c98d:	rex.XB jb 0x40c9f9
  40c990:	je     0x40c9fb
  40c992:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c995:	push   rbx
  40c996:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c99b:	outs   dx,BYTE PTR ds:[rsi]
  40c99c:	add    BYTE PTR [rax],al
  40c99e:	mov    ebx,0x65755103
  40c9a3:	jb     0x40ca1e
  40c9a5:	push   rax
  40c9a6:	gs jb  0x40ca0f
  40c9a9:	outs   dx,DWORD PTR ds:[rsi]
  40c9aa:	jb     0x40ca19
  40c9ac:	(bad)  
  40c9ad:	outs   dx,BYTE PTR ds:[rsi]
  40c9ae:	movsxd esp,DWORD PTR [rbp+0x43]
  40c9b1:	outs   dx,DWORD PTR ds:[rsi]
  40c9b2:	jne    0x40ca22
  40c9b4:	je     0x40ca1b
  40c9b6:	jb     0x40c9b8
  40c9b8:	add    DWORD PTR [rdx+rdx*2],eax
  40c9bb:	je     0x40ca29
  40c9bd:	rex.B
  40c9be:	fs fs rex.RX jne 0x40ca31
  40c9c3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c9c7:	outs   dx,BYTE PTR ds:[rsi]
  40c9c8:	push   rsp
  40c9c9:	(bad)  
  40c9ca:	(bad)  
  40c9cb:	ins    BYTE PTR es:[rdi],dx
  40c9cc:	add    BYTE PTR gs:[rdx],al
  40c9cf:	add    al,0x52
  40c9d1:	je     0x40ca3f
  40c9d3:	rex.XB (bad) 
  40c9d5:	jo     0x40ca4b
  40c9d7:	jne    0x40ca4b
  40c9d9:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40c9dc:	outs   dx,BYTE PTR ds:[rsi]
  40c9dd:	je     0x40ca44
  40c9df:	js     0x40ca55
  40c9e1:	add    BYTE PTR [rcx],cl
  40c9e3:	add    al,0x52
  40c9e5:	je     0x40ca53
  40c9e7:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40c9e9:	outs   dx,DWORD PTR ds:[rsi]
  40c9ea:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40c9ee:	jne    0x40ca5e
  40c9f0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c9f4:	outs   dx,BYTE PTR ds:[rsi]
  40c9f5:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40c9f7:	je     0x40ca6b
  40c9f9:	jns    0x40c9fb
  40c9fb:	add    BYTE PTR [rax],dl
  40c9fd:	add    al,0x52
  40c9ff:	je     0x40ca6d
  40ca01:	push   rsi
  40ca02:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40ca09:	outs   dx,BYTE PTR ds:[rsi]
  40ca0a:	ja     0x40ca75
  40ca0c:	outs   dx,BYTE PTR ds:[rsi]
  40ca0d:	add    BYTE PTR fs:[rax],al
  40ca10:	lahf   
  40ca11:	add    al,0x53
  40ca13:	gs je  0x40ca6b
  40ca16:	outs   dx,BYTE PTR ds:[rsi]
  40ca17:	push   0x6c646e61
  40ca1c:	gs fs rex.RB js 0x40ca84
  40ca21:	gs jo  0x40ca98
  40ca24:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ca2b:	gs jb  0x40ca2e
  40ca2e:	lods   al,BYTE PTR ds:[rsi]
  40ca2f:	add    al,0x53
  40ca31:	ins    BYTE PTR es:[rdi],dx
  40ca32:	gs gs jo 0x40ca36
  40ca36:	mov    edx,0x72655404
  40ca3b:	ins    DWORD PTR es:[rdi],dx
  40ca3c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40ca43:	outs   dx,DWORD PTR ds:[rsi]
  40ca44:	movsxd esp,DWORD PTR [rbp+0x73]
  40ca47:	jae    0x40ca49
  40ca49:	add    cl,al
  40ca4b:	add    al,0x54
  40ca4d:	ins    BYTE PTR es:[rdi],dx
  40ca4e:	jae    0x40ca97
  40ca50:	gs je  0x40caa9
  40ca53:	(bad)  
  40ca54:	ins    BYTE PTR es:[rdi],dx
  40ca55:	jne    0x40cabc
  40ca57:	add    dh,cl
  40ca59:	add    al,0x55
  40ca5b:	outs   dx,BYTE PTR ds:[rsi]
  40ca5c:	push   0x6c646e61
  40ca61:	gs fs rex.RB js 0x40cac9
  40ca66:	gs jo  0x40cadd
  40ca69:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ca70:	gs jb  0x40ca73
  40ca73:	add    ah,ch
  40ca75:	add    al,0x56
  40ca77:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40ca7e:	jb     0x40caef
  40ca80:	je     0x40cae7
  40ca82:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40ca86:	out    dx,al
  40ca87:	add    al,0x56
  40ca89:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ca90:	jne    0x40caf7
  40ca92:	jb     0x40cb0d
  40ca94:	add    BYTE PTR [rax],al
  40ca96:	(bad)  
  40ca97:	add    BYTE PTR [rdi+0x5f],bl
  40ca9a:	rex.XB pop r15
  40ca9c:	jae    0x40cb0e
  40ca9e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40caa2:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40caa9:	ins    BYTE PTR es:[rdi],dx
  40caaa:	gs jb  0x40caad
  40caad:	add    BYTE PTR [rsi+0x0],al
  40cab0:	pop    rdi
  40cab1:	pop    rdi
  40cab2:	(bad)  
  40cab3:	jb     0x40cb1c
  40cab5:	jbe    0x40cab7
  40cab7:	add    BYTE PTR [rsi+0x0],cl
  40caba:	pop    rdi
  40cabb:	pop    rdi
  40cabc:	fs ins BYTE PTR es:[rdi],dx
  40cabe:	ins    BYTE PTR es:[rdi],dx
  40cabf:	outs   dx,DWORD PTR ds:[rsi]
  40cac0:	outs   dx,BYTE PTR ds:[rsi]
  40cac1:	gs js  0x40cb2d
  40cac4:	je     0x40cac6
  40cac6:	push   rcx
  40cac7:	add    BYTE PTR [rdi+0x5f],bl
  40caca:	addr32 gs je 0x40cb3b
  40cace:	(bad)  
  40cacf:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40cad6:	push   rdx
  40cad7:	add    BYTE PTR [rdi+0x5f],bl
  40cada:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40cae1:	add    BYTE PTR [rbx+0x0],dl
  40cae4:	pop    rdi
  40cae5:	pop    rdi
  40cae6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40caed:	movsxd eax,DWORD PTR [rax]
  40caef:	add    BYTE PTR [rdx+0x0],bl
  40caf2:	pop    rdi
  40caf3:	pop    rdi
  40caf4:	ins    BYTE PTR es:[rdi],dx
  40caf5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40caf8:	jbe    0x40cb59
  40cafa:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40cb01:	add    BYTE PTR [rdi+0x5f],bl
  40cb04:	jae    0x40cb6b
  40cb06:	je     0x40cb67
  40cb08:	(bad)  
  40cb09:	jo     0x40cb7b
  40cb0b:	pop    rdi
  40cb0c:	je     0x40cb87
  40cb0e:	jo     0x40cb75
  40cb10:	add    BYTE PTR [rax],al
  40cb12:	(bad)  
  40cb13:	add    BYTE PTR [rdi+0x5f],bl
  40cb16:	jae    0x40cb7d
  40cb18:	je     0x40cb8f
  40cb1a:	jae    0x40cb81
  40cb1c:	jb     0x40cb8b
  40cb1e:	(bad)  
  40cb1f:	je     0x40cb89
  40cb21:	gs jb  0x40cb96
  40cb24:	add    BYTE PTR [rax],al
  40cb26:	jno    0x40cb28
  40cb28:	pop    rdi
  40cb29:	(bad)  
  40cb2a:	movsxd ebp,DWORD PTR [rbp+0x64]
  40cb2d:	ins    BYTE PTR es:[rdi],dx
  40cb2e:	outs   dx,BYTE PTR ds:[rsi]
  40cb2f:	add    BYTE PTR [rax+0x0],bh
  40cb32:	pop    rdi
  40cb33:	(bad)  
  40cb34:	ins    DWORD PTR es:[rdi],dx
  40cb35:	jae    0x40cb9e
  40cb37:	pop    rdi
  40cb38:	gs js  0x40cba4
  40cb3b:	je     0x40cb3d
  40cb3d:	add    BYTE PTR [rdx+0x65635f00],cl
  40cb43:	js     0x40cbae
  40cb45:	je     0x40cb47
  40cb47:	add    BYTE PTR [rdx+0x72655f00],bh
  40cb4d:	jb     0x40cbbd
  40cb4f:	outs   dx,DWORD PTR ds:[rsi]
  40cb50:	add    BYTE PTR [rax],al
  40cb52:	ret    
  40cb53:	add    BYTE PTR [rdi+0x65],bl
  40cb56:	js     0x40cbc1
  40cb58:	je     0x40cb5a
  40cb5a:	fiadd  DWORD PTR [rax]
  40cb5c:	pop    rdi
  40cb5d:	ins    WORD PTR es:[rdi],dx
  40cb5f:	outs   dx,DWORD PTR ds:[rsi]
  40cb60:	fs add BYTE PTR gs:[rax],al
  40cb64:	sbb    al,BYTE PTR [rcx]
  40cb66:	pop    rdi
  40cb67:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40cb6e:	ins    DWORD PTR es:[rdi],dx
  40cb6f:	add    BYTE PTR [rax+0x6f6c5f01],al
  40cb75:	movsxd ebp,DWORD PTR [rbx+0x0]
  40cb78:	and    eax,0x6e6f5f02
  40cb7d:	gs js  0x40cbe9
  40cb80:	je     0x40cb82
  40cb82:	movsxd eax,DWORD PTR [rdx]
  40cb84:	pop    rdi
  40cb85:	jae    0x40cbf5
  40cb87:	ja     0x40cbf9
  40cb89:	jb     0x40cbf4
  40cb8b:	outs   dx,BYTE PTR ds:[rsi]
  40cb8c:	je     0x40cbf4
  40cb8e:	add    BYTE PTR [rax],al
  40cb90:	add    BYTE PTR [rdx],0x5f
  40cb93:	jae    0x40cc09
  40cb95:	jb     0x40cbfb
  40cb97:	jne    0x40cc09
  40cb99:	add    BYTE PTR [rbx+0x74735f02],al
  40cb9f:	jb     0x40cc0a
  40cba1:	movsxd ebp,DWORD PTR [rbp+0x70]
  40cba4:	add    BYTE PTR [rax],al
  40cba6:	(bad)
  40cbaa:	outs   dx,BYTE PTR ds:[rsi]
  40cbab:	ins    BYTE PTR es:[rdi],dx
  40cbac:	outs   dx,DWORD PTR ds:[rsi]
  40cbad:	movsxd ebp,DWORD PTR [rbx+0x0]
  40cbb0:	loope  0x40cbb4
  40cbb2:	pop    rdi
  40cbb3:	jbe    0x40cc28
  40cbb5:	outs   dx,BYTE PTR ds:[rsi]
  40cbb6:	jo     0x40cc2a
  40cbb8:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  40cbbf:	add    esp,DWORD PTR [rcx+0x62]
  40cbc2:	outs   dx,DWORD PTR ds:[rsi]
  40cbc3:	jb     0x40cc39
  40cbc5:	add    BYTE PTR [rax+0x6c616303],dl
  40cbcb:	ins    BYTE PTR es:[rdi],dx
  40cbcc:	outs   dx,DWORD PTR ds:[rsi]
  40cbcd:	movsxd eax,DWORD PTR [rax]
  40cbcf:	add    BYTE PTR [rbp+0x69786503],bl
  40cbd5:	je     0x40cbd7
  40cbd7:	add    BYTE PTR [rcx+0x6c636603],ah
  40cbdd:	outs   dx,DWORD PTR ds:[rsi]
  40cbde:	jae    0x40cc45
  40cbe0:	add    BYTE PTR [rax],al
  40cbe2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40cbe3:	add    esp,DWORD PTR [rsi+0x67]
  40cbe6:	gs je  0x40cc4c
  40cbe9:	add    BYTE PTR [rdi+0x65676603],ah
  40cbef:	je     0x40cc64
  40cbf1:	add    BYTE PTR [rax+0x72706603],dh
  40cbf7:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40cbfe:	data16 jo 0x40cc76
  40cc01:	je     0x40cc66
  40cc03:	add    BYTE PTR [rbx+0x75706603],dh
  40cc09:	je     0x40cc7e
  40cc0b:	add    BYTE PTR [rdi+0x65726603],dh
  40cc11:	add    BYTE PTR gs:[rax],al
  40cc14:	mov    eax,0x65726603
  40cc19:	outs   dx,DWORD PTR ds:[rsi]
  40cc1a:	jo     0x40cc81
  40cc1c:	outs   dx,BYTE PTR ds:[rsi]
  40cc1d:	add    al,al
  40cc1f:	add    esp,DWORD PTR [rsi+0x77]
  40cc22:	jo     0x40cc96
  40cc24:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  40cc2b:	add    esp,DWORD PTR [rsi+0x77]
  40cc2e:	jb     0x40cc99
  40cc30:	je     0x40cc97
  40cc32:	add    BYTE PTR [rax],al
  40cc34:	mov    DWORD PTR [rbx],0x65746567
  40cc3a:	outs   dx,BYTE PTR ds:[rsi]
  40cc3b:	jbe    0x40cc3d
  40cc3d:	add    al,dh
  40cc3f:	add    ebp,DWORD PTR [rbp+0x61]
  40cc42:	ins    BYTE PTR es:[rdi],dx
  40cc43:	ins    BYTE PTR es:[rdi],dx
  40cc44:	outs   dx,DWORD PTR ds:[rsi]
  40cc45:	movsxd eax,DWORD PTR [rax]
  40cc47:	add    bl,dh
  40cc49:	add    ebp,DWORD PTR [rbp+0x62]
  40cc4c:	jae    0x40ccc2
  40cc4e:	outs   dx,DWORD PTR ds:[rsi]
  40cc4f:	ja     0x40ccb4
  40cc51:	jae    0x40cc53
  40cc53:	add    al,bh
  40cc55:	add    ebp,DWORD PTR [rbp+0x65]
  40cc58:	ins    DWORD PTR es:[rdi],dx
  40cc59:	movsxd esi,DWORD PTR [rax+0x79]
  40cc5c:	add    BYTE PTR [rax],al
  40cc5e:	cli    
  40cc5f:	add    ebp,DWORD PTR [rbp+0x65]
  40cc62:	ins    DWORD PTR es:[rdi],dx
  40cc63:	jae    0x40ccca
  40cc65:	je     0x40cc67
  40cc67:	add    dh,bh
  40cc69:	add    esi,DWORD PTR [rax+0x65]
  40cc6c:	jb     0x40cce0
  40cc6e:	outs   dx,DWORD PTR ds:[rsi]
  40cc6f:	jb     0x40cc71
  40cc71:	add    BYTE PTR [rcx],al
  40cc73:	add    al,0x70
  40cc75:	jb     0x40cce0
  40cc77:	outs   dx,BYTE PTR ds:[rsi]
  40cc78:	je     0x40cce0
  40cc7a:	add    BYTE PTR [rax],al
  40cc7c:	add    eax,0x74757004
  40cc81:	jae    0x40cc83
  40cc83:	add    BYTE PTR [rdx],cl
  40cc85:	add    al,0x72
  40cc87:	(bad)  
  40cc88:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  40cc8f:	gs (bad) 
  40cc91:	ins    BYTE PTR es:[rdi],dx
  40cc92:	ins    BYTE PTR es:[rdi],dx
  40cc93:	outs   dx,DWORD PTR ds:[rsi]
  40cc94:	movsxd eax,DWORD PTR [rax]
  40cc96:	(bad)  
  40cc98:	jb     0x40ccff
  40cc9a:	ja     0x40cd05
  40cc9c:	outs   dx,BYTE PTR ds:[rsi]
  40cc9d:	add    BYTE PTR fs:[rax],al
  40cca0:	adc    al,0x4
  40cca2:	jae    0x40cd09
  40cca4:	je     0x40cd12
  40cca6:	outs   dx,DWORD PTR ds:[rsi]
  40cca7:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ccaa:	add    BYTE PTR gs:[rsi],dl
  40ccad:	add    al,0x73
  40ccaf:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40ccb6:	sbb    eax,DWORD PTR [rbx+rsi*2]
  40ccb9:	jo     0x40cd2d
  40ccbb:	imul   ebp,DWORD PTR [rsi+0x74],0x4230066
  40ccc2:	jae    0x40cd38
  40ccc4:	jb     0x40cd29
  40ccc6:	push   0x29000072
  40cccb:	add    al,0x73
  40cccd:	je     0x40cd41
  40cccf:	gs jb  0x40cd44
  40ccd2:	outs   dx,DWORD PTR ds:[rsi]
  40ccd3:	jb     0x40ccd5
  40ccd5:	add    BYTE PTR [rbx],ch
  40ccd7:	add    al,0x73
  40ccd9:	je     0x40cd4d
  40ccdb:	ins    BYTE PTR es:[rdi],dx
  40ccdc:	outs   dx,BYTE PTR gs:[rsi]
  40ccde:	add    BYTE PTR [rax],al
  40cce0:	cs add al,0x73
  40cce3:	je     0x40cd57
  40cce5:	outs   dx,BYTE PTR ds:[rsi]
  40cce6:	movsxd ebp,DWORD PTR [rbp+0x70]
  40cce9:	add    BYTE PTR [rsp+rax*1],dh
  40ccec:	jae    0x40cd62
  40ccee:	jb     0x40cd63
  40ccf0:	je     0x40cd64
  40ccf2:	add    BYTE PTR [rax],al
  40ccf4:	rex.R add al,0x74
  40ccf7:	ins    DWORD PTR es:[rdi],dx
  40ccf8:	jo     0x40cd60
  40ccfa:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6676044e
  40cd02:	jo     0x40cd76
  40cd04:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  40cd0b:	add    al,0x77
  40cd0d:	movsxd esi,DWORD PTR [rbx+0x63]
  40cd10:	jo     0x40cd8b
  40cd12:	add    BYTE PTR [rax],al
  40cd14:	jno    0x40cd1a
  40cd16:	ja     0x40cd7b
  40cd18:	jae    0x40cd8e
  40cd1a:	outs   dx,DWORD PTR ds:[rsi]
  40cd1b:	ins    DWORD PTR es:[rdi],dx
  40cd1c:	(bad)  
  40cd1e:	add    BYTE PTR [rax],al
  40cd20:	mov    esi,0x74735f04
  40cd25:	jb     0x40cd8b
  40cd27:	jne    0x40cd99
  40cd29:	add    al,dh
  40cd2b:	add    DWORD PTR [rbp+0x65],ecx
  40cd2e:	jae    0x40cda3
  40cd30:	(bad)  
  40cd31:	rex.X outs dx,DWORD PTR gs:[esi]
  40cd35:	js     0x40cd8e
  40cd37:	add    BYTE PTR [rbx+0x74656700],bl
  40cd3d:	push   0x6e74736f
  40cd42:	(bad)  
  40cd43:	ins    DWORD PTR es:[rdi],dx
  40cd44:	add    BYTE PTR gs:[rax],al
  40cd47:	add    BYTE PTR [rax],al
  40cd49:	rol    BYTE PTR [rax],0x0
  40cd4c:	add    al,al
  40cd4e:	add    BYTE PTR [rax],al
  40cd50:	add    al,al
  40cd52:	add    BYTE PTR [rax],al
  40cd54:	add    al,al
  40cd56:	add    BYTE PTR [rax],al
  40cd58:	add    al,al
  40cd5a:	add    BYTE PTR [rax],al
  40cd5c:	add    al,al
  40cd5e:	add    BYTE PTR [rax],al
  40cd60:	add    al,al
  40cd62:	add    BYTE PTR [rax],al
  40cd64:	add    al,al
  40cd66:	add    BYTE PTR [rax],al
  40cd68:	add    al,al
  40cd6a:	add    BYTE PTR [rax],al
  40cd6c:	add    al,al
  40cd6e:	add    BYTE PTR [rax],al
  40cd70:	add    al,al
  40cd72:	add    BYTE PTR [rax],al
  40cd74:	add    al,al
  40cd76:	add    BYTE PTR [rax],al
  40cd78:	add    al,al
  40cd7a:	add    BYTE PTR [rax],al
  40cd7c:	add    al,al
  40cd7e:	add    BYTE PTR [rax],al
  40cd80:	add    al,al
  40cd82:	add    BYTE PTR [rax],al
  40cd84:	add    al,al
  40cd86:	add    BYTE PTR [rax],al
  40cd88:	add    al,al
  40cd8a:	add    BYTE PTR [rax],al
  40cd8c:	add    al,al
  40cd8e:	add    BYTE PTR [rax],al
  40cd90:	add    al,al
  40cd92:	add    BYTE PTR [rax],al
  40cd94:	add    al,al
  40cd96:	add    BYTE PTR [rax],al
  40cd98:	add    al,al
  40cd9a:	add    BYTE PTR [rax],al
  40cd9c:	add    al,al
  40cd9e:	add    BYTE PTR [rax],al
  40cda0:	ins    BYTE PTR es:[rdi],dx
  40cda1:	imul   esp,DWORD PTR [rdx+0x73],0x62646279
  40cda8:	sub    eax,0x6c642e35
  40cdad:	ins    BYTE PTR es:[rdi],dx
  40cdae:	add    BYTE PTR [rax],al
  40cdb0:	adc    al,0xc0
  40cdb2:	add    BYTE PTR [rax],al
  40cdb4:	adc    al,0xc0
  40cdb6:	add    BYTE PTR [rax],al
  40cdb8:	adc    al,0xc0
  40cdba:	add    BYTE PTR [rax],al
  40cdbc:	adc    al,0xc0
  40cdbe:	add    BYTE PTR [rax],al
  40cdc0:	adc    al,0xc0
  40cdc2:	add    BYTE PTR [rax],al
  40cdc4:	adc    al,0xc0
  40cdc6:	add    BYTE PTR [rax],al
  40cdc8:	adc    al,0xc0
  40cdca:	add    BYTE PTR [rax],al
  40cdcc:	adc    al,0xc0
  40cdce:	add    BYTE PTR [rax],al
  40cdd0:	adc    al,0xc0
  40cdd2:	add    BYTE PTR [rax],al
  40cdd4:	adc    al,0xc0
  40cdd6:	add    BYTE PTR [rax],al
  40cdd8:	adc    al,0xc0
  40cdda:	add    BYTE PTR [rax],al
  40cddc:	adc    al,0xc0
  40cdde:	add    BYTE PTR [rax],al
  40cde0:	adc    al,0xc0
  40cde2:	add    BYTE PTR [rax],al
  40cde4:	adc    al,0xc0
  40cde6:	add    BYTE PTR [rax],al
  40cde8:	adc    al,0xc0
  40cdea:	add    BYTE PTR [rax],al
  40cdec:	adc    al,0xc0
  40cdee:	add    BYTE PTR [rax],al
  40cdf0:	adc    al,0xc0
  40cdf2:	add    BYTE PTR [rax],al
  40cdf4:	adc    al,0xc0
  40cdf6:	add    BYTE PTR [rax],al
  40cdf8:	adc    al,0xc0
  40cdfa:	add    BYTE PTR [rax],al
  40cdfc:	adc    al,0xc0
  40cdfe:	add    BYTE PTR [rax],al
  40ce00:	adc    al,0xc0
  40ce02:	add    BYTE PTR [rax],al
  40ce04:	adc    al,0xc0
  40ce06:	add    BYTE PTR [rax],al
  40ce08:	adc    al,0xc0
  40ce0a:	add    BYTE PTR [rax],al
  40ce0c:	adc    al,0xc0
  40ce0e:	add    BYTE PTR [rax],al
  40ce10:	rex.WXB
  40ce11:	rex.RB push r10
  40ce13:	rex.WRX
  40ce14:	rex.RB
  40ce15:	xor    r14,QWORD PTR [rdx]
  40ce18:	cs fs ins BYTE PTR es:[rdi],dx
  40ce1b:	ins    BYTE PTR es:[rdi],dx
  40ce1c:	add    BYTE PTR [rax],al
  40ce1e:	add    BYTE PTR [rax],al
  40ce20:	sub    al,al
  40ce22:	add    BYTE PTR [rax],al
  40ce24:	sub    al,al
  40ce26:	add    BYTE PTR [rax],al
  40ce28:	sub    al,al
  40ce2a:	add    BYTE PTR [rax],al
  40ce2c:	sub    al,al
  40ce2e:	add    BYTE PTR [rax],al
  40ce30:	sub    al,al
  40ce32:	add    BYTE PTR [rax],al
  40ce34:	sub    al,al
  40ce36:	add    BYTE PTR [rax],al
  40ce38:	sub    al,al
  40ce3a:	add    BYTE PTR [rax],al
  40ce3c:	sub    al,al
  40ce3e:	add    BYTE PTR [rax],al
  40ce40:	sub    al,al
  40ce42:	add    BYTE PTR [rax],al
  40ce44:	sub    al,al
  40ce46:	add    BYTE PTR [rax],al
  40ce48:	sub    al,al
  40ce4a:	add    BYTE PTR [rax],al
  40ce4c:	sub    al,al
  40ce4e:	add    BYTE PTR [rax],al
  40ce50:	sub    al,al
  40ce52:	add    BYTE PTR [rax],al
  40ce54:	sub    al,al
  40ce56:	add    BYTE PTR [rax],al
  40ce58:	sub    al,al
  40ce5a:	add    BYTE PTR [rax],al
  40ce5c:	sub    al,al
  40ce5e:	add    BYTE PTR [rax],al
  40ce60:	sub    al,al
  40ce62:	add    BYTE PTR [rax],al
  40ce64:	sub    al,al
  40ce66:	add    BYTE PTR [rax],al
  40ce68:	sub    al,al
  40ce6a:	add    BYTE PTR [rax],al
  40ce6c:	sub    al,al
  40ce6e:	add    BYTE PTR [rax],al
  40ce70:	sub    al,al
  40ce72:	add    BYTE PTR [rax],al
  40ce74:	sub    al,al
  40ce76:	add    BYTE PTR [rax],al
  40ce78:	sub    al,al
  40ce7a:	add    BYTE PTR [rax],al
  40ce7c:	sub    al,al
  40ce7e:	add    BYTE PTR [rax],al
  40ce80:	sub    al,al
  40ce82:	add    BYTE PTR [rax],al
  40ce84:	sub    al,al
  40ce86:	add    BYTE PTR [rax],al
  40ce88:	sub    al,al
  40ce8a:	add    BYTE PTR [rax],al
  40ce8c:	sub    al,al
  40ce8e:	add    BYTE PTR [rax],al
  40ce90:	sub    al,al
  40ce92:	add    BYTE PTR [rax],al
  40ce94:	sub    al,al
  40ce96:	add    BYTE PTR [rax],al
  40ce98:	sub    al,al
  40ce9a:	add    BYTE PTR [rax],al
  40ce9c:	sub    al,al
  40ce9e:	add    BYTE PTR [rax],al
  40cea0:	sub    al,al
  40cea2:	add    BYTE PTR [rax],al
  40cea4:	sub    al,al
  40cea6:	add    BYTE PTR [rax],al
  40cea8:	sub    al,al
  40ceaa:	add    BYTE PTR [rax],al
  40ceac:	sub    al,al
  40ceae:	add    BYTE PTR [rax],al
  40ceb0:	sub    al,al
  40ceb2:	add    BYTE PTR [rax],al
  40ceb4:	sub    al,al
  40ceb6:	add    BYTE PTR [rax],al
  40ceb8:	sub    al,al
  40ceba:	add    BYTE PTR [rax],al
  40cebc:	sub    al,al
  40cebe:	add    BYTE PTR [rax],al
  40cec0:	sub    al,al
  40cec2:	add    BYTE PTR [rax],al
  40cec4:	sub    al,al
  40cec6:	add    BYTE PTR [rax],al
  40cec8:	sub    al,al
  40ceca:	add    BYTE PTR [rax],al
  40cecc:	sub    al,al
  40cece:	add    BYTE PTR [rax],al
  40ced0:	sub    al,al
  40ced2:	add    BYTE PTR [rax],al
  40ced4:	sub    al,al
  40ced6:	add    BYTE PTR [rax],al
  40ced8:	sub    al,al
  40ceda:	add    BYTE PTR [rax],al
  40cedc:	sub    al,al
  40cede:	add    BYTE PTR [rax],al
  40cee0:	sub    al,al
  40cee2:	add    BYTE PTR [rax],al
  40cee4:	sub    al,al
  40cee6:	add    BYTE PTR [rax],al
  40cee8:	sub    al,al
  40ceea:	add    BYTE PTR [rax],al
  40ceec:	sub    al,al
  40ceee:	add    BYTE PTR [rax],al
  40cef0:	sub    al,al
  40cef2:	add    BYTE PTR [rax],al
  40cef4:	sub    al,al
  40cef6:	add    BYTE PTR [rax],al
  40cef8:	sub    al,al
  40cefa:	add    BYTE PTR [rax],al
  40cefc:	sub    al,al
  40cefe:	add    BYTE PTR [rax],al
  40cf00:	sub    al,al
  40cf02:	add    BYTE PTR [rax],al
  40cf04:	sub    al,al
  40cf06:	add    BYTE PTR [rax],al
  40cf08:	sub    al,al
  40cf0a:	add    BYTE PTR [rax],al
  40cf0c:	sub    al,al
  40cf0e:	add    BYTE PTR [rax],al
  40cf10:	ins    DWORD PTR es:[rdi],dx
  40cf11:	jae    0x40cf89
  40cf13:	movsxd esi,DWORD PTR [rdx+0x74]
  40cf16:	cs fs ins BYTE PTR es:[rdi],dx
  40cf19:	ins    BYTE PTR es:[rdi],dx
  40cf1a:	add    BYTE PTR [rax],al
  40cf1c:	cmp    al,0xc0
  40cf1e:	add    BYTE PTR [rax],al
  40cf20:	push   rbp
  40cf21:	push   rbx
  40cf22:	rex.RB push r10
  40cf24:	xor    esi,DWORD PTR [rdx]
  40cf26:	cs fs ins BYTE PTR es:[rdi],dx
  40cf29:	ins    BYTE PTR es:[rdi],dx
  40cf2a:	add    BYTE PTR [rax],al
  40cf2c:	push   rax
  40cf2d:	rol    BYTE PTR [rax],0x0
  40cf30:	push   rdi
  40cf31:	push   rbx
  40cf32:	xor    bl,BYTE PTR [rdi+0x33]
  40cf35:	xor    ch,BYTE PTR [rsi]
  40cf37:	fs ins BYTE PTR es:[rdi],dx
  40cf39:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040d000 <.CRT>:
	...
  40d008:	(bad)  
  40d009:	adc    DWORD PTR [rax+0x0],eax
	...
  40d020:	adc    BYTE PTR [rax],dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax+0x1d],dl
  40d02a:	add    BYTE PTR [rax],al
	...
  40d03d:	add    BYTE PTR [rax],al
  40d03f:	add    BYTE PTR [rax+0x401f],al
  40d045:	add    BYTE PTR [rax],al
  40d047:	add    BYTE PTR [rax+0x1f],dl
  40d04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040e000 <.tls>:
	...
  40e020:	add    al,ah
  40e022:	add    BYTE PTR [rax],al
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax-0x20],ah
  40e02a:	add    BYTE PTR [rax],al
  40e02d:	add    BYTE PTR [rax],al
  40e02f:	add    BYTE PTR [rcx+rdi*4],bl
  40e032:	add    BYTE PTR [rax],al
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    BYTE PTR [rax-0x30],al
  40e03a:	add    BYTE PTR [rax],al
	...
