
ce365d04be99efe6734d9364b2ee4507a207809c54d25541787bc2667b508b94.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    eax,0x1
   140001015:	lock xadd DWORD PTR [rcx+0x10],eax
   14000101a:	inc    eax
   14000101c:	ret    
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	int3   
   140001021:	int3   
   140001022:	int3   
   140001023:	int3   
   140001024:	int3   
   140001025:	int3   
   140001026:	int3   
   140001027:	int3   
   140001028:	int3   
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	mov    QWORD PTR [rsp+0x8],rbx
   140001035:	push   rdi
   140001036:	sub    rsp,0x20
   14000103a:	mov    rbx,rcx
   14000103d:	or     edi,0xffffffff
   140001040:	lock xadd DWORD PTR [rcx+0x10],edi
   140001045:	sub    edi,0x1
   140001048:	jne    0x140001076
   14000104a:	test   rcx,rcx
   14000104d:	je     0x140001076
   14000104f:	lea    rax,[rip+0x32fa]        # 0x140004350
   140001056:	mov    QWORD PTR [rcx],rax
   140001059:	mov    rcx,QWORD PTR [rcx+0x8]
   14000105d:	cmp    rcx,0xffffffffffffffff
   140001061:	je     0x14000106e
   140001063:	call   QWORD PTR [rip+0x2fdf]        # 0x140004048
   140001069:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000106e:	mov    rcx,rbx
   140001071:	call   0x1400030fc
   140001076:	mov    eax,edi
   140001078:	mov    rbx,QWORD PTR [rsp+0x30]
   14000107d:	add    rsp,0x20
   140001081:	pop    rdi
   140001082:	ret    
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rbx
   140001095:	mov    QWORD PTR [rsp+0x10],rsi
   14000109a:	mov    QWORD PTR [rsp+0x18],rdi
   14000109f:	push   r14
   1400010a1:	sub    rsp,0x20
   1400010a5:	xor    edi,edi
   1400010a7:	mov    rsi,r8
   1400010aa:	mov    r14,rcx
   1400010ad:	test   r8,r8
   1400010b0:	je     0x140001121
   1400010b2:	mov    QWORD PTR [r8],rdi
   1400010b5:	mov    rax,QWORD PTR [rdx]
   1400010b8:	cmp    rax,QWORD PTR [rip+0x3271]        # 0x140004330
   1400010bf:	jne    0x1400010ce
   1400010c1:	mov    rax,QWORD PTR [rdx+0x8]
   1400010c5:	cmp    rax,QWORD PTR [rip+0x326c]        # 0x140004338
   1400010cc:	je     0x140001100
   1400010ce:	mov    rax,QWORD PTR [rdx]
   1400010d1:	cmp    rax,QWORD PTR [rip+0x3268]        # 0x140004340
   1400010d8:	jne    0x1400010e7
   1400010da:	mov    rax,QWORD PTR [rdx+0x8]
   1400010de:	cmp    rax,QWORD PTR [rip+0x3263]        # 0x140004348
   1400010e5:	je     0x140001100
   1400010e7:	mov    rax,QWORD PTR [rdx]
   1400010ea:	cmp    rax,QWORD PTR [rip+0x321f]        # 0x140004310
   1400010f1:	jne    0x14000111a
   1400010f3:	mov    rax,QWORD PTR [rdx+0x8]
   1400010f7:	cmp    rax,QWORD PTR [rip+0x321a]        # 0x140004318
   1400010fe:	jne    0x14000111a
   140001100:	mov    rax,QWORD PTR [rcx]
   140001103:	mov    rbx,QWORD PTR [rax+0x8]
   140001107:	mov    rcx,rbx
   14000110a:	call   QWORD PTR [rip+0x30a0]        # 0x1400041b0
   140001110:	mov    rcx,r14
   140001113:	call   rbx
   140001115:	mov    QWORD PTR [rsi],r14
   140001118:	jmp    0x140001126
   14000111a:	mov    edi,0x80004002
   14000111f:	jmp    0x140001126
   140001121:	mov    edi,0x80070057
   140001126:	mov    rbx,QWORD PTR [rsp+0x30]
   14000112b:	mov    eax,edi
   14000112d:	mov    rdi,QWORD PTR [rsp+0x40]
   140001132:	mov    rsi,QWORD PTR [rsp+0x38]
   140001137:	add    rsp,0x20
   14000113b:	pop    r14
   14000113d:	ret    
   14000113e:	int3   
   14000113f:	int3   
   140001140:	int3   
   140001141:	int3   
   140001142:	int3   
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rbx
   140001152:	sub    rsp,0x30
   140001156:	mov    rcx,QWORD PTR [rcx+0x8]
   14000115a:	xor    ebx,ebx
   14000115c:	mov    QWORD PTR [rsp+0x20],rbx
   140001161:	call   QWORD PTR [rip+0x2eb1]        # 0x140004018
   140001167:	test   eax,eax
   140001169:	jne    0x14000117f
   14000116b:	call   QWORD PTR [rip+0x2ec7]        # 0x140004038
   140001171:	movzx  ebx,ax
   140001174:	or     ebx,0x80070000
   14000117a:	test   eax,eax
   14000117c:	cmovle ebx,eax
   14000117f:	mov    eax,ebx
   140001181:	add    rsp,0x30
   140001185:	pop    rbx
   140001186:	ret    
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rbx
   140001192:	sub    rsp,0x30
   140001196:	mov    rcx,QWORD PTR [rcx+0x8]
   14000119a:	xor    ebx,ebx
   14000119c:	mov    QWORD PTR [rsp+0x20],rbx
   1400011a1:	call   QWORD PTR [rip+0x2e69]        # 0x140004010
   1400011a7:	test   eax,eax
   1400011a9:	jne    0x1400011bf
   1400011ab:	call   QWORD PTR [rip+0x2e87]        # 0x140004038
   1400011b1:	movzx  ebx,ax
   1400011b4:	or     ebx,0x80070000
   1400011ba:	test   eax,eax
   1400011bc:	cmovle ebx,eax
   1400011bf:	mov    eax,ebx
   1400011c1:	add    rsp,0x30
   1400011c5:	pop    rbx
   1400011c6:	ret    
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    eax,0x80004001
   1400011d5:	ret    
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	rex push rbx
   1400011e2:	sub    rsp,0x20
   1400011e6:	xor    ebx,ebx
   1400011e8:	mov    rax,r9
   1400011eb:	test   r8d,r8d
   1400011ee:	je     0x140001213
   1400011f0:	sub    r8d,0x1
   1400011f4:	je     0x14000120b
   1400011f6:	cmp    r8d,0x1
   1400011fa:	je     0x140001203
   1400011fc:	mov    eax,0x80030001
   140001201:	jmp    0x14000123d
   140001203:	mov    r9d,0x2
   140001209:	jmp    0x140001216
   14000120b:	mov    r9d,0x1
   140001211:	jmp    0x140001216
   140001213:	mov    r9d,ebx
   140001216:	mov    rcx,QWORD PTR [rcx+0x8]
   14000121a:	mov    r8,rax
   14000121d:	call   QWORD PTR [rip+0x2de5]        # 0x140004008
   140001223:	test   eax,eax
   140001225:	jne    0x14000123b
   140001227:	call   QWORD PTR [rip+0x2e0b]        # 0x140004038
   14000122d:	movzx  ebx,ax
   140001230:	or     ebx,0x80070000
   140001236:	test   eax,eax
   140001238:	cmovle ebx,eax
   14000123b:	mov    eax,ebx
   14000123d:	add    rsp,0x20
   140001241:	pop    rbx
   140001242:	ret    
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	rex push rbx
   140001252:	sub    rsp,0x20
   140001256:	mov    rcx,QWORD PTR [rcx+0x8]
   14000125a:	add    rdx,0x10
   14000125e:	xor    ebx,ebx
   140001260:	call   QWORD PTR [rip+0x2dca]        # 0x140004030
   140001266:	test   eax,eax
   140001268:	jne    0x14000127e
   14000126a:	call   QWORD PTR [rip+0x2dc8]        # 0x140004038
   140001270:	movzx  ebx,ax
   140001273:	or     ebx,0x80070000
   140001279:	test   eax,eax
   14000127b:	cmovle ebx,eax
   14000127e:	mov    eax,ebx
   140001280:	add    rsp,0x20
   140001284:	pop    rbx
   140001285:	ret    
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	mov    QWORD PTR [rsp+0x8],rbx
   140001291:	mov    QWORD PTR [rsp+0x10],rsi
   140001296:	push   rbp
   140001297:	push   rdi
   140001298:	push   r15
   14000129a:	mov    rbp,rsp
   14000129d:	sub    rsp,0x60
   1400012a1:	and    QWORD PTR [rbp-0x18],0x0
   1400012a6:	lea    r8,[rbp-0x18]
   1400012aa:	and    QWORD PTR [rbp-0x20],0x0
   1400012af:	xor    edi,edi
   1400012b1:	and    QWORD PTR [rbp+0x30],0x0
   1400012b6:	and    QWORD PTR [rbp+0x38],0x0
   1400012bb:	mov    QWORD PTR [rbp-0x10],rdi
   1400012bf:	call   0x1400015a8
   1400012c4:	mov    r15d,eax
   1400012c7:	test   eax,eax
   1400012c9:	jne    0x140001474
   1400012cf:	xor    edx,edx
   1400012d1:	xor    ecx,ecx
   1400012d3:	call   QWORD PTR [rip+0x2ea7]        # 0x140004180
   1400012d9:	mov    r15d,eax
   1400012dc:	test   eax,eax
   1400012de:	jne    0x140001474
   1400012e4:	lea    rax,[rbp-0x20]
   1400012e8:	xor    edx,edx
   1400012ea:	lea    r9,[rip+0x30ef]        # 0x1400043e0
   1400012f1:	mov    QWORD PTR [rsp+0x20],rax
   1400012f6:	lea    r8d,[rdi+0x17]
   1400012fa:	lea    rcx,[rip+0x30cf]        # 0x1400043d0
   140001301:	call   QWORD PTR [rip+0x2e99]        # 0x1400041a0
   140001307:	mov    r15d,eax
   14000130a:	test   eax,eax
   14000130c:	jne    0x140001474
   140001312:	mov    rbx,QWORD PTR [rbp-0x20]
   140001316:	mov    rax,QWORD PTR [rbx]
   140001319:	mov    rsi,QWORD PTR [rax+0x28]
   14000131d:	mov    rcx,rsi
   140001320:	call   QWORD PTR [rip+0x2e8a]        # 0x1400041b0
   140001326:	lea    rax,[rbp+0x30]
   14000132a:	xor    r9d,r9d
   14000132d:	mov    QWORD PTR [rsp+0x30],rax
   140001332:	lea    rdx,[rip+0x2f37]        # 0x140004270
   140001339:	and    QWORD PTR [rsp+0x28],rdi
   14000133e:	xor    r8d,r8d
   140001341:	and    QWORD PTR [rsp+0x20],rdi
   140001346:	mov    rcx,rbx
   140001349:	call   rsi
   14000134b:	mov    r15d,eax
   14000134e:	test   eax,eax
   140001350:	jne    0x140001474
   140001356:	mov    rbx,QWORD PTR [rbp+0x30]
   14000135a:	mov    rax,QWORD PTR [rbx]
   14000135d:	mov    rsi,QWORD PTR [rax+0x28]
   140001361:	mov    rcx,rsi
   140001364:	call   QWORD PTR [rip+0x2e46]        # 0x1400041b0
   14000136a:	lea    rdx,[rbp+0x38]
   14000136e:	mov    rcx,rbx
   140001371:	call   rsi
   140001373:	mov    rbx,QWORD PTR [rbp+0x30]
   140001377:	mov    r15d,eax
   14000137a:	test   rbx,rbx
   14000137d:	je     0x14000139a
   14000137f:	mov    rax,QWORD PTR [rbx]
   140001382:	mov    rsi,QWORD PTR [rax+0x10]
   140001386:	mov    rcx,rsi
   140001389:	call   QWORD PTR [rip+0x2e21]        # 0x1400041b0
   14000138f:	mov    rcx,rbx
   140001392:	call   rsi
   140001394:	xor    ebx,ebx
   140001396:	mov    QWORD PTR [rbp+0x30],rbx
   14000139a:	test   r15d,r15d
   14000139d:	jne    0x140001478
   1400013a3:	mov    rcx,QWORD PTR [rbp-0x18]
   1400013a7:	lea    rdx,[rbp-0x10]
   1400013ab:	call   0x1400022a4
   1400013b0:	mov    rdi,QWORD PTR [rbp-0x10]
   1400013b4:	mov    r15d,eax
   1400013b7:	test   eax,eax
   1400013b9:	jne    0x140001474
   1400013bf:	mov    rax,QWORD PTR [rdi]
   1400013c2:	mov    rbx,QWORD PTR [rax+0xd8]
   1400013c9:	mov    rcx,rbx
   1400013cc:	call   QWORD PTR [rip+0x2dde]        # 0x1400041b0
   1400013d2:	xor    r9d,r9d
   1400013d5:	lea    r8,[rip+0x2ee4]        # 0x1400042c0
   1400013dc:	xor    edx,edx
   1400013de:	mov    rcx,rdi
   1400013e1:	call   rbx
   1400013e3:	mov    r15d,eax
   1400013e6:	test   eax,eax
   1400013e8:	jne    0x140001474
   1400013ee:	mov    rbx,QWORD PTR [rbp+0x38]
   1400013f2:	mov    QWORD PTR [rbp-0x10],rbx
   1400013f6:	test   rbx,rbx
   1400013f9:	je     0x140001410
   1400013fb:	mov    rax,QWORD PTR [rbx]
   1400013fe:	mov    rsi,QWORD PTR [rax+0x8]
   140001402:	mov    rcx,rsi
   140001405:	call   QWORD PTR [rip+0x2da5]        # 0x1400041b0
   14000140b:	mov    rcx,rbx
   14000140e:	call   rsi
   140001410:	mov    rax,QWORD PTR [rdi]
   140001413:	mov    QWORD PTR [rbp-0x8],rdi
   140001417:	mov    rbx,QWORD PTR [rax+0x8]
   14000141b:	mov    rcx,rbx
   14000141e:	call   QWORD PTR [rip+0x2d8c]        # 0x1400041b0
   140001424:	mov    rcx,rdi
   140001427:	call   rbx
   140001429:	lea    rdx,[rbp-0x10]
   14000142d:	lea    rcx,[rbp-0x8]
   140001431:	call   0x140001834
   140001436:	mov    r15d,eax
   140001439:	test   eax,eax
   14000143b:	jne    0x140001474
   14000143d:	mov    rax,QWORD PTR [rdi]
   140001440:	mov    rbx,QWORD PTR [rax+0x88]
   140001447:	mov    rcx,rbx
   14000144a:	call   QWORD PTR [rip+0x2d60]        # 0x1400041b0
   140001450:	mov    rcx,rdi
   140001453:	call   rbx
   140001455:	mov    r15d,eax
   140001458:	test   eax,eax
   14000145a:	jne    0x140001474
   14000145c:	mov    rax,QWORD PTR [rdi]
   14000145f:	mov    rbx,QWORD PTR [rax+0x70]
   140001463:	mov    rcx,rbx
   140001466:	call   QWORD PTR [rip+0x2d44]        # 0x1400041b0
   14000146c:	mov    rcx,rdi
   14000146f:	call   rbx
   140001471:	mov    r15d,eax
   140001474:	mov    rbx,QWORD PTR [rbp+0x30]
   140001478:	mov    rsi,QWORD PTR [rbp+0x38]
   14000147c:	test   rsi,rsi
   14000147f:	je     0x14000149f
   140001481:	mov    rax,QWORD PTR [rsi]
   140001484:	mov    rbx,QWORD PTR [rax+0x10]
   140001488:	mov    rcx,rbx
   14000148b:	call   QWORD PTR [rip+0x2d1f]        # 0x1400041b0
   140001491:	mov    rcx,rsi
   140001494:	call   rbx
   140001496:	and    QWORD PTR [rbp+0x38],0x0
   14000149b:	mov    rbx,QWORD PTR [rbp+0x30]
   14000149f:	test   rbx,rbx
   1400014a2:	je     0x1400014be
   1400014a4:	mov    rax,QWORD PTR [rbx]
   1400014a7:	mov    rsi,QWORD PTR [rax+0x10]
   1400014ab:	mov    rcx,rsi
   1400014ae:	call   QWORD PTR [rip+0x2cfc]        # 0x1400041b0
   1400014b4:	mov    rcx,rbx
   1400014b7:	call   rsi
   1400014b9:	and    QWORD PTR [rbp+0x30],0x0
   1400014be:	mov    rbx,QWORD PTR [rbp-0x20]
   1400014c2:	test   rbx,rbx
   1400014c5:	je     0x1400014e1
   1400014c7:	mov    rax,QWORD PTR [rbx]
   1400014ca:	mov    rsi,QWORD PTR [rax+0x10]
   1400014ce:	mov    rcx,rsi
   1400014d1:	call   QWORD PTR [rip+0x2cd9]        # 0x1400041b0
   1400014d7:	mov    rcx,rbx
   1400014da:	call   rsi
   1400014dc:	and    QWORD PTR [rbp-0x20],0x0
   1400014e1:	test   rdi,rdi
   1400014e4:	je     0x1400014fd
   1400014e6:	mov    rax,QWORD PTR [rdi]
   1400014e9:	mov    rbx,QWORD PTR [rax+0x10]
   1400014ed:	mov    rcx,rbx
   1400014f0:	call   QWORD PTR [rip+0x2cba]        # 0x1400041b0
   1400014f6:	mov    rcx,rdi
   1400014f9:	call   rbx
   1400014fb:	xor    edi,edi
   1400014fd:	cmp    QWORD PTR [rbp-0x18],0x0
   140001502:	je     0x14000150e
   140001504:	mov    rcx,QWORD PTR [rbp-0x18]
   140001508:	call   QWORD PTR [rip+0x2c82]        # 0x140004190
   14000150e:	call   QWORD PTR [rip+0x2c84]        # 0x140004198
   140001514:	test   rdi,rdi
   140001517:	je     0x14000152e
   140001519:	mov    rax,QWORD PTR [rdi]
   14000151c:	mov    rbx,QWORD PTR [rax+0x10]
   140001520:	mov    rcx,rbx
   140001523:	call   QWORD PTR [rip+0x2c87]        # 0x1400041b0
   140001529:	mov    rcx,rdi
   14000152c:	call   rbx
   14000152e:	mov    rbx,QWORD PTR [rbp+0x38]
   140001532:	test   rbx,rbx
   140001535:	je     0x14000154c
   140001537:	mov    rax,QWORD PTR [rbx]
   14000153a:	mov    rdi,QWORD PTR [rax+0x10]
   14000153e:	mov    rcx,rdi
   140001541:	call   QWORD PTR [rip+0x2c69]        # 0x1400041b0
   140001547:	mov    rcx,rbx
   14000154a:	call   rdi
   14000154c:	mov    rbx,QWORD PTR [rbp+0x30]
   140001550:	test   rbx,rbx
   140001553:	je     0x14000156a
   140001555:	mov    rax,QWORD PTR [rbx]
   140001558:	mov    rdi,QWORD PTR [rax+0x10]
   14000155c:	mov    rcx,rdi
   14000155f:	call   QWORD PTR [rip+0x2c4b]        # 0x1400041b0
   140001565:	mov    rcx,rbx
   140001568:	call   rdi
   14000156a:	mov    rbx,QWORD PTR [rbp-0x20]
   14000156e:	test   rbx,rbx
   140001571:	je     0x140001588
   140001573:	mov    rax,QWORD PTR [rbx]
   140001576:	mov    rdi,QWORD PTR [rax+0x10]
   14000157a:	mov    rcx,rdi
   14000157d:	call   QWORD PTR [rip+0x2c2d]        # 0x1400041b0
   140001583:	mov    rcx,rbx
   140001586:	call   rdi
   140001588:	lea    r11,[rsp+0x60]
   14000158d:	mov    eax,r15d
   140001590:	mov    rbx,QWORD PTR [r11+0x20]
   140001594:	mov    rsi,QWORD PTR [r11+0x28]
   140001598:	mov    rsp,r11
   14000159b:	pop    r15
   14000159d:	pop    rdi
   14000159e:	pop    rbp
   14000159f:	ret    
   1400015a0:	int3   
   1400015a1:	int3   
   1400015a2:	int3   
   1400015a3:	int3   
   1400015a4:	int3   
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	mov    rax,rsp
   1400015ab:	mov    QWORD PTR [rax+0x10],rbx
   1400015af:	mov    QWORD PTR [rax+0x18],rbp
   1400015b3:	mov    QWORD PTR [rax+0x20],rsi
   1400015b7:	mov    DWORD PTR [rax+0x8],ecx
   1400015ba:	push   rdi
   1400015bb:	push   r12
   1400015bd:	push   r13
   1400015bf:	push   r14
   1400015c1:	push   r15
   1400015c3:	sub    rsp,0x20
   1400015c7:	mov    r12,rdx
   1400015ca:	movsxd rsi,ecx
   1400015cd:	xor    edx,edx
   1400015cf:	xor    ecx,ecx
   1400015d1:	mov    r13,r8
   1400015d4:	call   QWORD PTR [rip+0x2a4e]        # 0x140004028
   1400015da:	lea    ebx,[rax+0xc]
   1400015dd:	lea    rcx,[rbx+rbx*1]
   1400015e1:	mov    edi,ebx
   1400015e3:	call   QWORD PTR [rip+0x2b9f]        # 0x140004188
   1400015e9:	xor    ebp,ebp
   1400015eb:	mov    ecx,0x8007000e
   1400015f0:	mov    QWORD PTR [r13+0x0],rax
   1400015f4:	lea    r15d,[rcx+0x49]
   1400015f8:	lea    r14d,[rbp+0x1]
   1400015fc:	test   rax,rax
   1400015ff:	jne    0x140001608
   140001601:	mov    ebx,ecx
   140001603:	jmp    0x1400016d3
   140001608:	mov    rdx,rax
   14000160b:	mov    ecx,ebx
   14000160d:	call   QWORD PTR [rip+0x2a15]        # 0x140004028
   140001613:	test   eax,eax
   140001615:	jne    0x140001633
   140001617:	call   QWORD PTR [rip+0x2a1b]        # 0x140004038
   14000161d:	movzx  ebx,ax
   140001620:	or     ebx,0x80070000
   140001626:	test   eax,eax
   140001628:	cmovle ebx,eax
   14000162b:	test   ebx,ebx
   14000162d:	jne    0x1400016d3
   140001633:	mov    r9,QWORD PTR [r13+0x0]
   140001637:	lea    rax,[rdi-0x1]
   14000163b:	cmp    rax,0x7ffffffe
   140001641:	mov    ebx,ebp
   140001643:	cmova  ebx,r15d
   140001647:	test   ebx,ebx
   140001649:	js     0x140001676
   14000164b:	mov    rax,rdi
   14000164e:	mov    rcx,r9
   140001651:	mov    ebx,ebp
   140001653:	test   rdi,rdi
   140001656:	je     0x140001673
   140001658:	cmp    WORD PTR [rcx],bp
   14000165b:	je     0x140001666
   14000165d:	add    rcx,0x2
   140001661:	sub    rax,r14
   140001664:	jne    0x140001658
   140001666:	test   rax,rax
   140001669:	je     0x140001673
   14000166b:	mov    rdx,rdi
   14000166e:	sub    rdx,rax
   140001671:	jmp    0x140001679
   140001673:	mov    ebx,r15d
   140001676:	mov    rdx,rbp
   140001679:	test   ebx,ebx
   14000167b:	js     0x1400016d3
   14000167d:	mov    r8,rdi
   140001680:	lea    rcx,[r9+rdx*2]
   140001684:	mov    ebx,ebp
   140001686:	sub    r8,rdx
   140001689:	je     0x1400016c7
   14000168b:	mov    rax,r8
   14000168e:	sub    rax,rdi
   140001691:	lea    r9,[rax+0x7ffffffe]
   140001698:	add    r9,rdx
   14000169b:	lea    rdx,[rip+0x2bae]        # 0x140004250
   1400016a2:	sub    rdx,rcx
   1400016a5:	test   r9,r9
   1400016a8:	je     0x1400016c2
   1400016aa:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400016ae:	test   ax,ax
   1400016b1:	je     0x1400016c2
   1400016b3:	mov    WORD PTR [rcx],ax
   1400016b6:	sub    r9,r14
   1400016b9:	add    rcx,0x2
   1400016bd:	sub    r8,r14
   1400016c0:	jne    0x1400016a5
   1400016c2:	test   r8,r8
   1400016c5:	jne    0x1400016d0
   1400016c7:	sub    rcx,0x2
   1400016cb:	mov    ebx,0x8007007a
   1400016d0:	mov    WORD PTR [rcx],bp
   1400016d3:	mov    rdi,r14
   1400016d6:	mov    r15,rsi
   1400016d9:	cmp    r14,rsi
   1400016dc:	jge    0x14000180f
   1400016e2:	mov    ebp,0x2
   1400016e7:	lea    r14,[r12+0x10]
   1400016ec:	mov    rcx,QWORD PTR [r12+rdi*8]
   1400016f0:	lea    rdx,[rip+0x2bd9]        # 0x1400042d0
   1400016f7:	call   QWORD PTR [rip+0x2a53]        # 0x140004150
   1400016fd:	xor    edx,edx
   1400016ff:	test   eax,eax
   140001701:	je     0x14000171e
   140001703:	mov    rcx,QWORD PTR [r12+rdi*8]
   140001707:	lea    rdx,[rip+0x2bca]        # 0x1400042d8
   14000170e:	call   QWORD PTR [rip+0x2a3c]        # 0x140004150
   140001714:	xor    edx,edx
   140001716:	test   eax,eax
   140001718:	jne    0x14000180a
   14000171e:	cmp    ebp,esi
   140001720:	jge    0x14000180a
   140001726:	mov    rax,QWORD PTR [r14]
   140001729:	mov    ecx,0x2d
   14000172e:	cmp    cx,WORD PTR [rax]
   140001731:	je     0x14000180a
   140001737:	mov    rcx,QWORD PTR [r13+0x0]
   14000173b:	test   rcx,rcx
   14000173e:	je     0x14000174c
   140001740:	call   QWORD PTR [rip+0x2a4a]        # 0x140004190
   140001746:	xor    edx,edx
   140001748:	mov    QWORD PTR [r13+0x0],rdx
   14000174c:	mov    rcx,QWORD PTR [r12+rdi*8+0x8]
   140001751:	or     rax,0xffffffffffffffff
   140001755:	inc    rax
   140001758:	cmp    WORD PTR [rcx+rax*2],dx
   14000175c:	jne    0x140001755
   14000175e:	inc    eax
   140001760:	mov    esi,eax
   140001762:	lea    rcx,[rax+rax*1]
   140001766:	call   QWORD PTR [rip+0x2a1c]        # 0x140004188
   14000176c:	xor    r9d,r9d
   14000176f:	mov    QWORD PTR [r13+0x0],rax
   140001773:	test   rax,rax
   140001776:	mov    rdx,rax
   140001779:	mov    eax,0x8007000e
   14000177e:	cmove  ebx,eax
   140001781:	test   ebx,ebx
   140001783:	jne    0x1400017f0
   140001785:	mov    r8,QWORD PTR [r12+rdi*8+0x8]
   14000178a:	lea    rcx,[rsi-0x1]
   14000178e:	mov    r10d,0x7ffffffe
   140001794:	mov    ebx,r9d
   140001797:	cmp    rcx,r10
   14000179a:	mov    eax,0x80070057
   14000179f:	cmova  ebx,eax
   1400017a2:	test   ebx,ebx
   1400017a4:	js     0x1400017e7
   1400017a6:	mov    ebx,r9d
   1400017a9:	test   rsi,rsi
   1400017ac:	je     0x1400017dc
   1400017ae:	mov    ecx,r10d
   1400017b1:	sub    rcx,rsi
   1400017b4:	sub    r8,rdx
   1400017b7:	lea    rax,[rcx+rsi*1]
   1400017bb:	test   rax,rax
   1400017be:	je     0x1400017d7
   1400017c0:	movzx  eax,WORD PTR [r8+rdx*1]
   1400017c5:	test   ax,ax
   1400017c8:	je     0x1400017d7
   1400017ca:	mov    WORD PTR [rdx],ax
   1400017cd:	add    rdx,0x2
   1400017d1:	sub    rsi,0x1
   1400017d5:	jne    0x1400017b7
   1400017d7:	test   rsi,rsi
   1400017da:	jne    0x1400017ec
   1400017dc:	sub    rdx,0x2
   1400017e0:	mov    ebx,0x8007007a
   1400017e5:	jmp    0x1400017ec
   1400017e7:	test   rsi,rsi
   1400017ea:	je     0x1400017f0
   1400017ec:	mov    WORD PTR [rdx],r9w
   1400017f0:	mov    esi,DWORD PTR [rsp+0x50]
   1400017f4:	add    ebp,0x2
   1400017f7:	add    rdi,0x2
   1400017fb:	add    r14,0x10
   1400017ff:	cmp    rdi,r15
   140001802:	jl     0x1400016ec
   140001808:	jmp    0x14000180f
   14000180a:	mov    ebx,0x80070057
   14000180f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001814:	mov    eax,ebx
   140001816:	mov    rbx,QWORD PTR [rsp+0x58]
   14000181b:	mov    rsi,QWORD PTR [rsp+0x68]
   140001820:	add    rsp,0x20
   140001824:	pop    r15
   140001826:	pop    r14
   140001828:	pop    r13
   14000182a:	pop    r12
   14000182c:	pop    rdi
   14000182d:	ret    
   14000182e:	int3   
   14000182f:	int3   
   140001830:	int3   
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	rex push rbp
   140001836:	push   rbx
   140001837:	push   rsi
   140001838:	push   rdi
   140001839:	push   r12
   14000183b:	push   r14
   14000183d:	push   r15
   14000183f:	mov    rbp,rsp
   140001842:	sub    rsp,0x50
   140001846:	and    DWORD PTR [rbp+0x40],0x0
   14000184a:	mov    r12,rdx
   14000184d:	and    QWORD PTR [rbp+0x58],0x0
   140001852:	mov    r14,rcx
   140001855:	and    QWORD PTR [rbp+0x50],0x0
   14000185a:	and    QWORD PTR [rbp-0x18],0x0
   14000185f:	and    QWORD PTR [rbp-0x20],0x0
   140001864:	mov    rdi,QWORD PTR [rcx]
   140001867:	test   rdi,rdi
   14000186a:	je     0x140001bd6
   140001870:	mov    rsi,QWORD PTR [rdx]
   140001873:	test   rsi,rsi
   140001876:	je     0x140001bc1
   14000187c:	mov    rax,QWORD PTR [rsi]
   14000187f:	mov    rbx,QWORD PTR [rax+0x18]
   140001883:	mov    rcx,rbx
   140001886:	call   QWORD PTR [rip+0x2924]        # 0x1400041b0
   14000188c:	lea    rdx,[rbp+0x40]
   140001890:	mov    rcx,rsi
   140001893:	call   rbx
   140001895:	xor    r15d,r15d
   140001898:	mov    esi,eax
   14000189a:	test   eax,eax
   14000189c:	jne    0x140001b14
   1400018a2:	cmp    r15d,DWORD PTR [rbp+0x40]
   1400018a6:	jae    0x140001b14
   1400018ac:	mov    rbx,QWORD PTR [rbp-0x20]
   1400018b0:	test   rbx,rbx
   1400018b3:	je     0x1400018cf
   1400018b5:	mov    rax,QWORD PTR [rbx]
   1400018b8:	mov    rdi,QWORD PTR [rax+0x10]
   1400018bc:	mov    rcx,rdi
   1400018bf:	call   QWORD PTR [rip+0x28eb]        # 0x1400041b0
   1400018c5:	mov    rcx,rbx
   1400018c8:	call   rdi
   1400018ca:	and    QWORD PTR [rbp-0x20],0x0
   1400018cf:	mov    rbx,QWORD PTR [rbp-0x18]
   1400018d3:	test   rbx,rbx
   1400018d6:	je     0x1400018f2
   1400018d8:	mov    rax,QWORD PTR [rbx]
   1400018db:	mov    rdi,QWORD PTR [rax+0x10]
   1400018df:	mov    rcx,rdi
   1400018e2:	call   QWORD PTR [rip+0x28c8]        # 0x1400041b0
   1400018e8:	mov    rcx,rbx
   1400018eb:	call   rdi
   1400018ed:	and    QWORD PTR [rbp-0x18],0x0
   1400018f2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400018f6:	test   rbx,rbx
   1400018f9:	je     0x140001915
   1400018fb:	mov    rax,QWORD PTR [rbx]
   1400018fe:	mov    rdi,QWORD PTR [rax+0x10]
   140001902:	mov    rcx,rdi
   140001905:	call   QWORD PTR [rip+0x28a5]        # 0x1400041b0
   14000190b:	mov    rcx,rbx
   14000190e:	call   rdi
   140001910:	and    QWORD PTR [rbp+0x50],0x0
   140001915:	mov    rcx,QWORD PTR [rbp+0x58]
   140001919:	test   rcx,rcx
   14000191c:	je     0x140001929
   14000191e:	call   QWORD PTR [rip+0x286c]        # 0x140004190
   140001924:	and    QWORD PTR [rbp+0x58],0x0
   140001929:	mov    rdi,QWORD PTR [r12]
   14000192d:	mov    rax,QWORD PTR [rdi]
   140001930:	mov    rbx,QWORD PTR [rax+0x28]
   140001934:	mov    rcx,rbx
   140001937:	call   QWORD PTR [rip+0x2873]        # 0x1400041b0
   14000193d:	lea    r8,[rbp+0x50]
   140001941:	mov    edx,r15d
   140001944:	mov    rcx,rdi
   140001947:	call   rbx
   140001949:	mov    esi,eax
   14000194b:	test   eax,eax
   14000194d:	jne    0x140001b09
   140001953:	mov    rbx,QWORD PTR [rbp+0x50]
   140001957:	mov    rax,QWORD PTR [rbx]
   14000195a:	mov    rdi,QWORD PTR [rax+0x28]
   14000195e:	mov    rcx,rdi
   140001961:	call   QWORD PTR [rip+0x2849]        # 0x1400041b0
   140001967:	lea    rdx,[rbp+0x58]
   14000196b:	mov    rcx,rbx
   14000196e:	call   rdi
   140001970:	mov    esi,eax
   140001972:	test   eax,eax
   140001974:	jne    0x140001b09
   14000197a:	mov    rdi,QWORD PTR [r14]
   14000197d:	mov    rax,QWORD PTR [rdi]
   140001980:	mov    rbx,QWORD PTR [rax+0xd8]
   140001987:	mov    rcx,rbx
   14000198a:	call   QWORD PTR [rip+0x2820]        # 0x1400041b0
   140001990:	xor    r9d,r9d
   140001993:	lea    r8,[rip+0x2946]        # 0x1400042e0
   14000199a:	xor    edx,edx
   14000199c:	mov    rcx,rdi
   14000199f:	call   rbx
   1400019a1:	mov    esi,eax
   1400019a3:	test   eax,eax
   1400019a5:	jne    0x140001b09
   1400019ab:	mov    rdi,QWORD PTR [r14]
   1400019ae:	mov    rax,QWORD PTR [rdi]
   1400019b1:	mov    rbx,QWORD PTR [rax+0x38]
   1400019b5:	mov    rcx,rbx
   1400019b8:	call   QWORD PTR [rip+0x27f2]        # 0x1400041b0
   1400019be:	mov    rax,QWORD PTR [rbp+0x58]
   1400019c2:	lea    r8,[rip+0x291f]        # 0x1400042e8
   1400019c9:	xor    r9d,r9d
   1400019cc:	mov    QWORD PTR [rsp+0x20],rax
   1400019d1:	xor    edx,edx
   1400019d3:	mov    rcx,rdi
   1400019d6:	call   rbx
   1400019d8:	mov    esi,eax
   1400019da:	test   eax,eax
   1400019dc:	jne    0x140001b09
   1400019e2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400019e6:	mov    rax,QWORD PTR [rbx]
   1400019e9:	mov    rdi,QWORD PTR [rax+0x30]
   1400019ed:	mov    rcx,rdi
   1400019f0:	call   QWORD PTR [rip+0x27ba]        # 0x1400041b0
   1400019f6:	lea    r8,[rbp-0x18]
   1400019fa:	xor    edx,edx
   1400019fc:	mov    rcx,rbx
   1400019ff:	call   rdi
   140001a01:	mov    esi,eax
   140001a03:	test   eax,eax
   140001a05:	jne    0x140001b09
   140001a0b:	mov    rbx,QWORD PTR [rbp-0x18]
   140001a0f:	mov    QWORD PTR [rbp-0x10],rbx
   140001a13:	test   rbx,rbx
   140001a16:	je     0x140001a2d
   140001a18:	mov    rax,QWORD PTR [rbx]
   140001a1b:	mov    rdi,QWORD PTR [rax+0x8]
   140001a1f:	mov    rcx,rdi
   140001a22:	call   QWORD PTR [rip+0x2788]        # 0x1400041b0
   140001a28:	mov    rcx,rbx
   140001a2b:	call   rdi
   140001a2d:	mov    rbx,QWORD PTR [r14]
   140001a30:	mov    QWORD PTR [rbp-0x8],rbx
   140001a34:	test   rbx,rbx
   140001a37:	je     0x140001a4e
   140001a39:	mov    rax,QWORD PTR [rbx]
   140001a3c:	mov    rdi,QWORD PTR [rax+0x8]
   140001a40:	mov    rcx,rdi
   140001a43:	call   QWORD PTR [rip+0x2767]        # 0x1400041b0
   140001a49:	mov    rcx,rbx
   140001a4c:	call   rdi
   140001a4e:	lea    rdx,[rbp-0x10]
   140001a52:	lea    rcx,[rbp-0x8]
   140001a56:	call   0x14000268c
   140001a5b:	mov    esi,eax
   140001a5d:	test   eax,eax
   140001a5f:	jne    0x140001b09
   140001a65:	mov    rbx,QWORD PTR [rbp+0x50]
   140001a69:	mov    rax,QWORD PTR [rbx]
   140001a6c:	mov    rdi,QWORD PTR [rax+0x18]
   140001a70:	mov    rcx,rdi
   140001a73:	call   QWORD PTR [rip+0x2737]        # 0x1400041b0
   140001a79:	lea    r9,[rbp-0x20]
   140001a7d:	mov    rcx,rbx
   140001a80:	lea    r8,[rip+0x2939]        # 0x1400043c0
   140001a87:	lea    rdx,[rip+0x5eaa]        # 0x140007938
   140001a8e:	call   rdi
   140001a90:	mov    esi,eax
   140001a92:	test   eax,eax
   140001a94:	jne    0x140001b09
   140001a96:	mov    rbx,QWORD PTR [rbp-0x20]
   140001a9a:	mov    QWORD PTR [rbp-0x8],rbx
   140001a9e:	test   rbx,rbx
   140001aa1:	je     0x140001ab8
   140001aa3:	mov    rax,QWORD PTR [rbx]
   140001aa6:	mov    rdi,QWORD PTR [rax+0x8]
   140001aaa:	mov    rcx,rdi
   140001aad:	call   QWORD PTR [rip+0x26fd]        # 0x1400041b0
   140001ab3:	mov    rcx,rbx
   140001ab6:	call   rdi
   140001ab8:	mov    rbx,QWORD PTR [r14]
   140001abb:	mov    QWORD PTR [rbp-0x10],rbx
   140001abf:	test   rbx,rbx
   140001ac2:	je     0x140001ad9
   140001ac4:	mov    rax,QWORD PTR [rbx]
   140001ac7:	mov    rdi,QWORD PTR [rax+0x8]
   140001acb:	mov    rcx,rdi
   140001ace:	call   QWORD PTR [rip+0x26dc]        # 0x1400041b0
   140001ad4:	mov    rcx,rbx
   140001ad7:	call   rdi
   140001ad9:	lea    rdx,[rbp-0x8]
   140001add:	lea    rcx,[rbp-0x10]
   140001ae1:	call   0x140001c10
   140001ae6:	mov    esi,eax
   140001ae8:	test   eax,eax
   140001aea:	jne    0x140001b09
   140001aec:	mov    rdi,QWORD PTR [r14]
   140001aef:	mov    rax,QWORD PTR [rdi]
   140001af2:	mov    rbx,QWORD PTR [rax+0x88]
   140001af9:	mov    rcx,rbx
   140001afc:	call   QWORD PTR [rip+0x26ae]        # 0x1400041b0
   140001b02:	mov    rcx,rdi
   140001b05:	call   rbx
   140001b07:	mov    esi,eax
   140001b09:	inc    r15d
   140001b0c:	test   esi,esi
   140001b0e:	je     0x1400018a2
   140001b14:	mov    rcx,QWORD PTR [rbp+0x58]
   140001b18:	test   rcx,rcx
   140001b1b:	je     0x140001b28
   140001b1d:	call   QWORD PTR [rip+0x266d]        # 0x140004190
   140001b23:	and    QWORD PTR [rbp+0x58],0x0
   140001b28:	mov    rbx,QWORD PTR [rbp-0x20]
   140001b2c:	test   rbx,rbx
   140001b2f:	je     0x140001b46
   140001b31:	mov    rax,QWORD PTR [rbx]
   140001b34:	mov    rdi,QWORD PTR [rax+0x10]
   140001b38:	mov    rcx,rdi
   140001b3b:	call   QWORD PTR [rip+0x266f]        # 0x1400041b0
   140001b41:	mov    rcx,rbx
   140001b44:	call   rdi
   140001b46:	mov    rbx,QWORD PTR [rbp-0x18]
   140001b4a:	test   rbx,rbx
   140001b4d:	je     0x140001b64
   140001b4f:	mov    rax,QWORD PTR [rbx]
   140001b52:	mov    rdi,QWORD PTR [rax+0x10]
   140001b56:	mov    rcx,rdi
   140001b59:	call   QWORD PTR [rip+0x2651]        # 0x1400041b0
   140001b5f:	mov    rcx,rbx
   140001b62:	call   rdi
   140001b64:	mov    rbx,QWORD PTR [rbp+0x50]
   140001b68:	test   rbx,rbx
   140001b6b:	je     0x140001b82
   140001b6d:	mov    rax,QWORD PTR [rbx]
   140001b70:	mov    rdi,QWORD PTR [rax+0x10]
   140001b74:	mov    rcx,rdi
   140001b77:	call   QWORD PTR [rip+0x2633]        # 0x1400041b0
   140001b7d:	mov    rcx,rbx
   140001b80:	call   rdi
   140001b82:	mov    rdi,QWORD PTR [r14]
   140001b85:	test   rdi,rdi
   140001b88:	je     0x140001b9f
   140001b8a:	mov    rax,QWORD PTR [rdi]
   140001b8d:	mov    rbx,QWORD PTR [rax+0x10]
   140001b91:	mov    rcx,rbx
   140001b94:	call   QWORD PTR [rip+0x2616]        # 0x1400041b0
   140001b9a:	mov    rcx,rdi
   140001b9d:	call   rbx
   140001b9f:	mov    rdi,QWORD PTR [r12]
   140001ba3:	test   rdi,rdi
   140001ba6:	je     0x140001bbd
   140001ba8:	mov    rax,QWORD PTR [rdi]
   140001bab:	mov    rbx,QWORD PTR [rax+0x10]
   140001baf:	mov    rcx,rbx
   140001bb2:	call   QWORD PTR [rip+0x25f8]        # 0x1400041b0
   140001bb8:	mov    rcx,rdi
   140001bbb:	call   rbx
   140001bbd:	mov    eax,esi
   140001bbf:	jmp    0x140001bf9
   140001bc1:	mov    rax,QWORD PTR [rdi]
   140001bc4:	mov    rbx,QWORD PTR [rax+0x10]
   140001bc8:	mov    rcx,rbx
   140001bcb:	call   QWORD PTR [rip+0x25df]        # 0x1400041b0
   140001bd1:	mov    rcx,rdi
   140001bd4:	call   rbx
   140001bd6:	mov    rdi,QWORD PTR [r12]
   140001bda:	test   rdi,rdi
   140001bdd:	je     0x140001bf4
   140001bdf:	mov    rax,QWORD PTR [rdi]
   140001be2:	mov    rbx,QWORD PTR [rax+0x10]
   140001be6:	mov    rcx,rbx
   140001be9:	call   QWORD PTR [rip+0x25c1]        # 0x1400041b0
   140001bef:	mov    rcx,rdi
   140001bf2:	call   rbx
   140001bf4:	mov    eax,0x80070057
   140001bf9:	add    rsp,0x50
   140001bfd:	pop    r15
   140001bff:	pop    r14
   140001c01:	pop    r12
   140001c03:	pop    rdi
   140001c04:	pop    rsi
   140001c05:	pop    rbx
   140001c06:	pop    rbp
   140001c07:	ret    
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	rex push rbp
   140001c12:	push   rbx
   140001c13:	push   rsi
   140001c14:	push   rdi
   140001c15:	push   r12
   140001c17:	push   r14
   140001c19:	push   r15
   140001c1b:	mov    rbp,rsp
   140001c1e:	sub    rsp,0x50
   140001c22:	and    DWORD PTR [rbp+0x40],0x0
   140001c26:	mov    r12,rdx
   140001c29:	and    QWORD PTR [rbp+0x58],0x0
   140001c2e:	mov    r14,rcx
   140001c31:	and    QWORD PTR [rbp+0x50],0x0
   140001c36:	and    QWORD PTR [rbp-0x18],0x0
   140001c3b:	and    QWORD PTR [rbp-0x20],0x0
   140001c40:	mov    rdi,QWORD PTR [rcx]
   140001c43:	test   rdi,rdi
   140001c46:	je     0x140001fb2
   140001c4c:	mov    rsi,QWORD PTR [rdx]
   140001c4f:	test   rsi,rsi
   140001c52:	je     0x140001f9d
   140001c58:	mov    rax,QWORD PTR [rsi]
   140001c5b:	mov    rbx,QWORD PTR [rax+0x18]
   140001c5f:	mov    rcx,rbx
   140001c62:	call   QWORD PTR [rip+0x2548]        # 0x1400041b0
   140001c68:	lea    rdx,[rbp+0x40]
   140001c6c:	mov    rcx,rsi
   140001c6f:	call   rbx
   140001c71:	xor    r15d,r15d
   140001c74:	mov    esi,eax
   140001c76:	test   eax,eax
   140001c78:	jne    0x140001ef0
   140001c7e:	cmp    r15d,DWORD PTR [rbp+0x40]
   140001c82:	jae    0x140001ef0
   140001c88:	mov    rbx,QWORD PTR [rbp-0x20]
   140001c8c:	test   rbx,rbx
   140001c8f:	je     0x140001cab
   140001c91:	mov    rax,QWORD PTR [rbx]
   140001c94:	mov    rdi,QWORD PTR [rax+0x10]
   140001c98:	mov    rcx,rdi
   140001c9b:	call   QWORD PTR [rip+0x250f]        # 0x1400041b0
   140001ca1:	mov    rcx,rbx
   140001ca4:	call   rdi
   140001ca6:	and    QWORD PTR [rbp-0x20],0x0
   140001cab:	mov    rbx,QWORD PTR [rbp-0x18]
   140001caf:	test   rbx,rbx
   140001cb2:	je     0x140001cce
   140001cb4:	mov    rax,QWORD PTR [rbx]
   140001cb7:	mov    rdi,QWORD PTR [rax+0x10]
   140001cbb:	mov    rcx,rdi
   140001cbe:	call   QWORD PTR [rip+0x24ec]        # 0x1400041b0
   140001cc4:	mov    rcx,rbx
   140001cc7:	call   rdi
   140001cc9:	and    QWORD PTR [rbp-0x18],0x0
   140001cce:	mov    rbx,QWORD PTR [rbp+0x50]
   140001cd2:	test   rbx,rbx
   140001cd5:	je     0x140001cf1
   140001cd7:	mov    rax,QWORD PTR [rbx]
   140001cda:	mov    rdi,QWORD PTR [rax+0x10]
   140001cde:	mov    rcx,rdi
   140001ce1:	call   QWORD PTR [rip+0x24c9]        # 0x1400041b0
   140001ce7:	mov    rcx,rbx
   140001cea:	call   rdi
   140001cec:	and    QWORD PTR [rbp+0x50],0x0
   140001cf1:	mov    rcx,QWORD PTR [rbp+0x58]
   140001cf5:	test   rcx,rcx
   140001cf8:	je     0x140001d05
   140001cfa:	call   QWORD PTR [rip+0x2490]        # 0x140004190
   140001d00:	and    QWORD PTR [rbp+0x58],0x0
   140001d05:	mov    rdi,QWORD PTR [r12]
   140001d09:	mov    rax,QWORD PTR [rdi]
   140001d0c:	mov    rbx,QWORD PTR [rax+0x28]
   140001d10:	mov    rcx,rbx
   140001d13:	call   QWORD PTR [rip+0x2497]        # 0x1400041b0
   140001d19:	lea    r8,[rbp+0x50]
   140001d1d:	mov    edx,r15d
   140001d20:	mov    rcx,rdi
   140001d23:	call   rbx
   140001d25:	mov    esi,eax
   140001d27:	test   eax,eax
   140001d29:	jne    0x140001ee5
   140001d2f:	mov    rbx,QWORD PTR [rbp+0x50]
   140001d33:	mov    rax,QWORD PTR [rbx]
   140001d36:	mov    rdi,QWORD PTR [rax+0x28]
   140001d3a:	mov    rcx,rdi
   140001d3d:	call   QWORD PTR [rip+0x246d]        # 0x1400041b0
   140001d43:	lea    rdx,[rbp+0x58]
   140001d47:	mov    rcx,rbx
   140001d4a:	call   rdi
   140001d4c:	mov    esi,eax
   140001d4e:	test   eax,eax
   140001d50:	jne    0x140001ee5
   140001d56:	mov    rdi,QWORD PTR [r14]
   140001d59:	mov    rax,QWORD PTR [rdi]
   140001d5c:	mov    rbx,QWORD PTR [rax+0xd8]
   140001d63:	mov    rcx,rbx
   140001d66:	call   QWORD PTR [rip+0x2444]        # 0x1400041b0
   140001d6c:	xor    r9d,r9d
   140001d6f:	lea    r8,[rip+0x258a]        # 0x140004300
   140001d76:	xor    edx,edx
   140001d78:	mov    rcx,rdi
   140001d7b:	call   rbx
   140001d7d:	mov    esi,eax
   140001d7f:	test   eax,eax
   140001d81:	jne    0x140001ee5
   140001d87:	mov    rdi,QWORD PTR [r14]
   140001d8a:	mov    rax,QWORD PTR [rdi]
   140001d8d:	mov    rbx,QWORD PTR [rax+0x38]
   140001d91:	mov    rcx,rbx
   140001d94:	call   QWORD PTR [rip+0x2416]        # 0x1400041b0
   140001d9a:	mov    rax,QWORD PTR [rbp+0x58]
   140001d9e:	lea    r8,[rip+0x2543]        # 0x1400042e8
   140001da5:	xor    r9d,r9d
   140001da8:	mov    QWORD PTR [rsp+0x20],rax
   140001dad:	xor    edx,edx
   140001daf:	mov    rcx,rdi
   140001db2:	call   rbx
   140001db4:	mov    esi,eax
   140001db6:	test   eax,eax
   140001db8:	jne    0x140001ee5
   140001dbe:	mov    rbx,QWORD PTR [rbp+0x50]
   140001dc2:	mov    rax,QWORD PTR [rbx]
   140001dc5:	mov    rdi,QWORD PTR [rax+0x30]
   140001dc9:	mov    rcx,rdi
   140001dcc:	call   QWORD PTR [rip+0x23de]        # 0x1400041b0
   140001dd2:	lea    r8,[rbp-0x18]
   140001dd6:	xor    edx,edx
   140001dd8:	mov    rcx,rbx
   140001ddb:	call   rdi
   140001ddd:	mov    esi,eax
   140001ddf:	test   eax,eax
   140001de1:	jne    0x140001ee5
   140001de7:	mov    rbx,QWORD PTR [rbp-0x18]
   140001deb:	mov    QWORD PTR [rbp-0x10],rbx
   140001def:	test   rbx,rbx
   140001df2:	je     0x140001e09
   140001df4:	mov    rax,QWORD PTR [rbx]
   140001df7:	mov    rdi,QWORD PTR [rax+0x8]
   140001dfb:	mov    rcx,rdi
   140001dfe:	call   QWORD PTR [rip+0x23ac]        # 0x1400041b0
   140001e04:	mov    rcx,rbx
   140001e07:	call   rdi
   140001e09:	mov    rbx,QWORD PTR [r14]
   140001e0c:	mov    QWORD PTR [rbp-0x8],rbx
   140001e10:	test   rbx,rbx
   140001e13:	je     0x140001e2a
   140001e15:	mov    rax,QWORD PTR [rbx]
   140001e18:	mov    rdi,QWORD PTR [rax+0x8]
   140001e1c:	mov    rcx,rdi
   140001e1f:	call   QWORD PTR [rip+0x238b]        # 0x1400041b0
   140001e25:	mov    rcx,rbx
   140001e28:	call   rdi
   140001e2a:	lea    rdx,[rbp-0x10]
   140001e2e:	lea    rcx,[rbp-0x8]
   140001e32:	call   0x14000268c
   140001e37:	mov    esi,eax
   140001e39:	test   eax,eax
   140001e3b:	jne    0x140001ee5
   140001e41:	mov    rbx,QWORD PTR [rbp+0x50]
   140001e45:	mov    rax,QWORD PTR [rbx]
   140001e48:	mov    rdi,QWORD PTR [rax+0x18]
   140001e4c:	mov    rcx,rdi
   140001e4f:	call   QWORD PTR [rip+0x235b]        # 0x1400041b0
   140001e55:	lea    r9,[rbp-0x20]
   140001e59:	mov    rcx,rbx
   140001e5c:	lea    r8,[rip+0x255d]        # 0x1400043c0
   140001e63:	lea    rdx,[rip+0x5ade]        # 0x140007948
   140001e6a:	call   rdi
   140001e6c:	mov    esi,eax
   140001e6e:	test   eax,eax
   140001e70:	jne    0x140001ee5
   140001e72:	mov    rbx,QWORD PTR [rbp-0x20]
   140001e76:	mov    QWORD PTR [rbp-0x8],rbx
   140001e7a:	test   rbx,rbx
   140001e7d:	je     0x140001e94
   140001e7f:	mov    rax,QWORD PTR [rbx]
   140001e82:	mov    rdi,QWORD PTR [rax+0x8]
   140001e86:	mov    rcx,rdi
   140001e89:	call   QWORD PTR [rip+0x2321]        # 0x1400041b0
   140001e8f:	mov    rcx,rbx
   140001e92:	call   rdi
   140001e94:	mov    rbx,QWORD PTR [r14]
   140001e97:	mov    QWORD PTR [rbp-0x10],rbx
   140001e9b:	test   rbx,rbx
   140001e9e:	je     0x140001eb5
   140001ea0:	mov    rax,QWORD PTR [rbx]
   140001ea3:	mov    rdi,QWORD PTR [rax+0x8]
   140001ea7:	mov    rcx,rdi
   140001eaa:	call   QWORD PTR [rip+0x2300]        # 0x1400041b0
   140001eb0:	mov    rcx,rbx
   140001eb3:	call   rdi
   140001eb5:	lea    rdx,[rbp-0x8]
   140001eb9:	lea    rcx,[rbp-0x10]
   140001ebd:	call   0x140001fec
   140001ec2:	mov    esi,eax
   140001ec4:	test   eax,eax
   140001ec6:	jne    0x140001ee5
   140001ec8:	mov    rdi,QWORD PTR [r14]
   140001ecb:	mov    rax,QWORD PTR [rdi]
   140001ece:	mov    rbx,QWORD PTR [rax+0x88]
   140001ed5:	mov    rcx,rbx
   140001ed8:	call   QWORD PTR [rip+0x22d2]        # 0x1400041b0
   140001ede:	mov    rcx,rdi
   140001ee1:	call   rbx
   140001ee3:	mov    esi,eax
   140001ee5:	inc    r15d
   140001ee8:	test   esi,esi
   140001eea:	je     0x140001c7e
   140001ef0:	mov    rcx,QWORD PTR [rbp+0x58]
   140001ef4:	test   rcx,rcx
   140001ef7:	je     0x140001f04
   140001ef9:	call   QWORD PTR [rip+0x2291]        # 0x140004190
   140001eff:	and    QWORD PTR [rbp+0x58],0x0
   140001f04:	mov    rbx,QWORD PTR [rbp-0x20]
   140001f08:	test   rbx,rbx
   140001f0b:	je     0x140001f22
   140001f0d:	mov    rax,QWORD PTR [rbx]
   140001f10:	mov    rdi,QWORD PTR [rax+0x10]
   140001f14:	mov    rcx,rdi
   140001f17:	call   QWORD PTR [rip+0x2293]        # 0x1400041b0
   140001f1d:	mov    rcx,rbx
   140001f20:	call   rdi
   140001f22:	mov    rbx,QWORD PTR [rbp-0x18]
   140001f26:	test   rbx,rbx
   140001f29:	je     0x140001f40
   140001f2b:	mov    rax,QWORD PTR [rbx]
   140001f2e:	mov    rdi,QWORD PTR [rax+0x10]
   140001f32:	mov    rcx,rdi
   140001f35:	call   QWORD PTR [rip+0x2275]        # 0x1400041b0
   140001f3b:	mov    rcx,rbx
   140001f3e:	call   rdi
   140001f40:	mov    rbx,QWORD PTR [rbp+0x50]
   140001f44:	test   rbx,rbx
   140001f47:	je     0x140001f5e
   140001f49:	mov    rax,QWORD PTR [rbx]
   140001f4c:	mov    rdi,QWORD PTR [rax+0x10]
   140001f50:	mov    rcx,rdi
   140001f53:	call   QWORD PTR [rip+0x2257]        # 0x1400041b0
   140001f59:	mov    rcx,rbx
   140001f5c:	call   rdi
   140001f5e:	mov    rdi,QWORD PTR [r14]
   140001f61:	test   rdi,rdi
   140001f64:	je     0x140001f7b
   140001f66:	mov    rax,QWORD PTR [rdi]
   140001f69:	mov    rbx,QWORD PTR [rax+0x10]
   140001f6d:	mov    rcx,rbx
   140001f70:	call   QWORD PTR [rip+0x223a]        # 0x1400041b0
   140001f76:	mov    rcx,rdi
   140001f79:	call   rbx
   140001f7b:	mov    rdi,QWORD PTR [r12]
   140001f7f:	test   rdi,rdi
   140001f82:	je     0x140001f99
   140001f84:	mov    rax,QWORD PTR [rdi]
   140001f87:	mov    rbx,QWORD PTR [rax+0x10]
   140001f8b:	mov    rcx,rbx
   140001f8e:	call   QWORD PTR [rip+0x221c]        # 0x1400041b0
   140001f94:	mov    rcx,rdi
   140001f97:	call   rbx
   140001f99:	mov    eax,esi
   140001f9b:	jmp    0x140001fd5
   140001f9d:	mov    rax,QWORD PTR [rdi]
   140001fa0:	mov    rbx,QWORD PTR [rax+0x10]
   140001fa4:	mov    rcx,rbx
   140001fa7:	call   QWORD PTR [rip+0x2203]        # 0x1400041b0
   140001fad:	mov    rcx,rdi
   140001fb0:	call   rbx
   140001fb2:	mov    rdi,QWORD PTR [r12]
   140001fb6:	test   rdi,rdi
   140001fb9:	je     0x140001fd0
   140001fbb:	mov    rax,QWORD PTR [rdi]
   140001fbe:	mov    rbx,QWORD PTR [rax+0x10]
   140001fc2:	mov    rcx,rbx
   140001fc5:	call   QWORD PTR [rip+0x21e5]        # 0x1400041b0
   140001fcb:	mov    rcx,rdi
   140001fce:	call   rbx
   140001fd0:	mov    eax,0x80070057
   140001fd5:	add    rsp,0x50
   140001fd9:	pop    r15
   140001fdb:	pop    r14
   140001fdd:	pop    r12
   140001fdf:	pop    rdi
   140001fe0:	pop    rsi
   140001fe1:	pop    rbx
   140001fe2:	pop    rbp
   140001fe3:	ret    
   140001fe4:	int3   
   140001fe5:	int3   
   140001fe6:	int3   
   140001fe7:	int3   
   140001fe8:	int3   
   140001fe9:	int3   
   140001fea:	int3   
   140001feb:	int3   
   140001fec:	rex push rbp
   140001fee:	push   rbx
   140001fef:	push   rsi
   140001ff0:	push   rdi
   140001ff1:	push   r12
   140001ff3:	push   r14
   140001ff5:	push   r15
   140001ff7:	mov    rbp,rsp
   140001ffa:	sub    rsp,0x40
   140001ffe:	mov    rdi,QWORD PTR [rdx]
   140002001:	mov    r15,rcx
   140002004:	and    DWORD PTR [rbp+0x40],0x0
   140002008:	mov    r12,rdx
   14000200b:	and    QWORD PTR [rbp+0x48],0x0
   140002010:	and    QWORD PTR [rbp+0x50],0x0
   140002015:	and    QWORD PTR [rbp+0x58],0x0
   14000201a:	mov    rax,QWORD PTR [rdi]
   14000201d:	mov    rbx,QWORD PTR [rax+0x18]
   140002021:	mov    rcx,rbx
   140002024:	call   QWORD PTR [rip+0x2186]        # 0x1400041b0
   14000202a:	lea    rdx,[rbp+0x40]
   14000202e:	mov    rcx,rdi
   140002031:	call   rbx
   140002033:	xor    r14d,r14d
   140002036:	mov    esi,eax
   140002038:	test   eax,eax
   14000203a:	jne    0x140002200
   140002040:	cmp    r14d,DWORD PTR [rbp+0x40]
   140002044:	jae    0x140002200
   14000204a:	mov    rbx,QWORD PTR [rbp+0x58]
   14000204e:	test   rbx,rbx
   140002051:	je     0x14000206d
   140002053:	mov    rax,QWORD PTR [rbx]
   140002056:	mov    rdi,QWORD PTR [rax+0x10]
   14000205a:	mov    rcx,rdi
   14000205d:	call   QWORD PTR [rip+0x214d]        # 0x1400041b0
   140002063:	mov    rcx,rbx
   140002066:	call   rdi
   140002068:	and    QWORD PTR [rbp+0x58],0x0
   14000206d:	mov    rbx,QWORD PTR [rbp+0x50]
   140002071:	test   rbx,rbx
   140002074:	je     0x140002090
   140002076:	mov    rax,QWORD PTR [rbx]
   140002079:	mov    rdi,QWORD PTR [rax+0x10]
   14000207d:	mov    rcx,rdi
   140002080:	call   QWORD PTR [rip+0x212a]        # 0x1400041b0
   140002086:	mov    rcx,rbx
   140002089:	call   rdi
   14000208b:	and    QWORD PTR [rbp+0x50],0x0
   140002090:	mov    rcx,QWORD PTR [rbp+0x48]
   140002094:	test   rcx,rcx
   140002097:	je     0x1400020a4
   140002099:	call   QWORD PTR [rip+0x20f1]        # 0x140004190
   14000209f:	and    QWORD PTR [rbp+0x48],0x0
   1400020a4:	mov    rdi,QWORD PTR [r12]
   1400020a8:	mov    rax,QWORD PTR [rdi]
   1400020ab:	mov    rbx,QWORD PTR [rax+0x28]
   1400020af:	mov    rcx,rbx
   1400020b2:	call   QWORD PTR [rip+0x20f8]        # 0x1400041b0
   1400020b8:	lea    r8,[rbp+0x50]
   1400020bc:	mov    edx,r14d
   1400020bf:	mov    rcx,rdi
   1400020c2:	call   rbx
   1400020c4:	mov    esi,eax
   1400020c6:	test   eax,eax
   1400020c8:	jne    0x1400021f5
   1400020ce:	mov    rbx,QWORD PTR [rbp+0x50]
   1400020d2:	mov    rax,QWORD PTR [rbx]
   1400020d5:	mov    rdi,QWORD PTR [rax+0x28]
   1400020d9:	mov    rcx,rdi
   1400020dc:	call   QWORD PTR [rip+0x20ce]        # 0x1400041b0
   1400020e2:	lea    rdx,[rbp+0x48]
   1400020e6:	mov    rcx,rbx
   1400020e9:	call   rdi
   1400020eb:	mov    esi,eax
   1400020ed:	test   eax,eax
   1400020ef:	jne    0x1400021f5
   1400020f5:	mov    rdi,QWORD PTR [r15]
   1400020f8:	mov    rax,QWORD PTR [rdi]
   1400020fb:	mov    rbx,QWORD PTR [rax+0xd8]
   140002102:	mov    rcx,rbx
   140002105:	call   QWORD PTR [rip+0x20a5]        # 0x1400041b0
   14000210b:	xor    r9d,r9d
   14000210e:	lea    r8,[rip+0x21f3]        # 0x140004308
   140002115:	xor    edx,edx
   140002117:	mov    rcx,rdi
   14000211a:	call   rbx
   14000211c:	mov    esi,eax
   14000211e:	test   eax,eax
   140002120:	jne    0x1400021f5
   140002126:	mov    rdi,QWORD PTR [r15]
   140002129:	mov    rax,QWORD PTR [rdi]
   14000212c:	mov    rbx,QWORD PTR [rax+0x38]
   140002130:	mov    rcx,rbx
   140002133:	call   QWORD PTR [rip+0x2077]        # 0x1400041b0
   140002139:	mov    rax,QWORD PTR [rbp+0x48]
   14000213d:	lea    r8,[rip+0x21a4]        # 0x1400042e8
   140002144:	xor    r9d,r9d
   140002147:	mov    QWORD PTR [rsp+0x20],rax
   14000214c:	xor    edx,edx
   14000214e:	mov    rcx,rdi
   140002151:	call   rbx
   140002153:	mov    esi,eax
   140002155:	test   eax,eax
   140002157:	jne    0x1400021f5
   14000215d:	mov    rbx,QWORD PTR [rbp+0x50]
   140002161:	mov    rax,QWORD PTR [rbx]
   140002164:	mov    rdi,QWORD PTR [rax+0x30]
   140002168:	mov    rcx,rdi
   14000216b:	call   QWORD PTR [rip+0x203f]        # 0x1400041b0
   140002171:	lea    r8,[rbp+0x58]
   140002175:	xor    edx,edx
   140002177:	mov    rcx,rbx
   14000217a:	call   rdi
   14000217c:	mov    esi,eax
   14000217e:	test   eax,eax
   140002180:	jne    0x1400021f5
   140002182:	mov    rbx,QWORD PTR [rbp+0x58]
   140002186:	mov    QWORD PTR [rbp-0x10],rbx
   14000218a:	test   rbx,rbx
   14000218d:	je     0x1400021a4
   14000218f:	mov    rax,QWORD PTR [rbx]
   140002192:	mov    rdi,QWORD PTR [rax+0x8]
   140002196:	mov    rcx,rdi
   140002199:	call   QWORD PTR [rip+0x2011]        # 0x1400041b0
   14000219f:	mov    rcx,rbx
   1400021a2:	call   rdi
   1400021a4:	mov    rbx,QWORD PTR [r15]
   1400021a7:	mov    QWORD PTR [rbp-0x8],rbx
   1400021ab:	test   rbx,rbx
   1400021ae:	je     0x1400021c5
   1400021b0:	mov    rax,QWORD PTR [rbx]
   1400021b3:	mov    rdi,QWORD PTR [rax+0x8]
   1400021b7:	mov    rcx,rdi
   1400021ba:	call   QWORD PTR [rip+0x1ff0]        # 0x1400041b0
   1400021c0:	mov    rcx,rbx
   1400021c3:	call   rdi
   1400021c5:	lea    rdx,[rbp-0x10]
   1400021c9:	lea    rcx,[rbp-0x8]
   1400021cd:	call   0x14000268c
   1400021d2:	mov    esi,eax
   1400021d4:	test   eax,eax
   1400021d6:	jne    0x1400021f5
   1400021d8:	mov    rdi,QWORD PTR [r15]
   1400021db:	mov    rax,QWORD PTR [rdi]
   1400021de:	mov    rbx,QWORD PTR [rax+0x88]
   1400021e5:	mov    rcx,rbx
   1400021e8:	call   QWORD PTR [rip+0x1fc2]        # 0x1400041b0
   1400021ee:	mov    rcx,rdi
   1400021f1:	call   rbx
   1400021f3:	mov    esi,eax
   1400021f5:	inc    r14d
   1400021f8:	test   esi,esi
   1400021fa:	je     0x140002040
   140002200:	mov    rcx,QWORD PTR [rbp+0x48]
   140002204:	test   rcx,rcx
   140002207:	je     0x140002214
   140002209:	call   QWORD PTR [rip+0x1f81]        # 0x140004190
   14000220f:	and    QWORD PTR [rbp+0x48],0x0
   140002214:	mov    rbx,QWORD PTR [rbp+0x58]
   140002218:	test   rbx,rbx
   14000221b:	je     0x140002232
   14000221d:	mov    rax,QWORD PTR [rbx]
   140002220:	mov    rdi,QWORD PTR [rax+0x10]
   140002224:	mov    rcx,rdi
   140002227:	call   QWORD PTR [rip+0x1f83]        # 0x1400041b0
   14000222d:	mov    rcx,rbx
   140002230:	call   rdi
   140002232:	mov    rbx,QWORD PTR [rbp+0x50]
   140002236:	test   rbx,rbx
   140002239:	je     0x140002250
   14000223b:	mov    rax,QWORD PTR [rbx]
   14000223e:	mov    rdi,QWORD PTR [rax+0x10]
   140002242:	mov    rcx,rdi
   140002245:	call   QWORD PTR [rip+0x1f65]        # 0x1400041b0
   14000224b:	mov    rcx,rbx
   14000224e:	call   rdi
   140002250:	mov    rdi,QWORD PTR [r15]
   140002253:	test   rdi,rdi
   140002256:	je     0x14000226d
   140002258:	mov    rax,QWORD PTR [rdi]
   14000225b:	mov    rbx,QWORD PTR [rax+0x10]
   14000225f:	mov    rcx,rbx
   140002262:	call   QWORD PTR [rip+0x1f48]        # 0x1400041b0
   140002268:	mov    rcx,rdi
   14000226b:	call   rbx
   14000226d:	mov    rdi,QWORD PTR [r12]
   140002271:	test   rdi,rdi
   140002274:	je     0x14000228b
   140002276:	mov    rax,QWORD PTR [rdi]
   140002279:	mov    rbx,QWORD PTR [rax+0x10]
   14000227d:	mov    rcx,rbx
   140002280:	call   QWORD PTR [rip+0x1f2a]        # 0x1400041b0
   140002286:	mov    rcx,rdi
   140002289:	call   rbx
   14000228b:	mov    eax,esi
   14000228d:	add    rsp,0x40
   140002291:	pop    r15
   140002293:	pop    r14
   140002295:	pop    r12
   140002297:	pop    rdi
   140002298:	pop    rsi
   140002299:	pop    rbx
   14000229a:	pop    rbp
   14000229b:	ret    
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	int3   
   1400022a1:	int3   
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	mov    rax,rsp
   1400022a7:	mov    QWORD PTR [rax+0x8],rbx
   1400022ab:	push   rbp
   1400022ac:	push   rsi
   1400022ad:	push   rdi
   1400022ae:	push   r14
   1400022b0:	push   r15
   1400022b2:	sub    rsp,0x40
   1400022b6:	xor    ebx,ebx
   1400022b8:	xor    edi,edi
   1400022ba:	mov    QWORD PTR [rax+0x10],rbx
   1400022be:	mov    r15,rdx
   1400022c1:	test   rdx,rdx
   1400022c4:	je     0x140002490
   1400022ca:	test   rcx,rcx
   1400022cd:	je     0x140002490
   1400022d3:	and    QWORD PTR [rax-0x38],rbx
   1400022d7:	xor    r9d,r9d
   1400022da:	mov    DWORD PTR [rax-0x40],0x80
   1400022e1:	xor    r8d,r8d
   1400022e4:	mov    edx,0x40000000
   1400022e9:	mov    DWORD PTR [rax-0x48],0x2
   1400022f0:	call   QWORD PTR [rip+0x1d2a]        # 0x140004020
   1400022f6:	mov    r14,rax
   1400022f9:	mov    esi,0x80070000
   1400022fe:	cmp    rax,0xffffffffffffffff
   140002302:	jne    0x14000231c
   140002304:	call   QWORD PTR [rip+0x1d2e]        # 0x140004038
   14000230a:	movzx  ebp,ax
   14000230d:	or     ebp,esi
   14000230f:	test   eax,eax
   140002311:	cmovle ebp,eax
   140002314:	test   ebp,ebp
   140002316:	jne    0x140002489
   14000231c:	or     QWORD PTR [rsp+0x80],0xffffffffffffffff
   140002325:	xor    ebp,ebp
   140002327:	call   QWORD PTR [rip+0x1cd3]        # 0x140004000
   14000232d:	mov    rbx,rax
   140002330:	call   QWORD PTR [rip+0x1cca]        # 0x140004000
   140002336:	mov    DWORD PTR [rsp+0x30],0x2
   14000233e:	lea    r9,[rsp+0x80]
   140002346:	and    DWORD PTR [rsp+0x28],edi
   14000234a:	mov    rcx,rax
   14000234d:	and    DWORD PTR [rsp+0x20],edi
   140002351:	mov    r8,rbx
   140002354:	mov    rdx,r14
   140002357:	call   QWORD PTR [rip+0x1ce3]        # 0x140004040
   14000235d:	test   eax,eax
   14000235f:	jne    0x140002375
   140002361:	call   QWORD PTR [rip+0x1cd1]        # 0x140004038
   140002367:	movzx  ebp,ax
   14000236a:	or     ebp,esi
   14000236c:	test   eax,eax
   14000236e:	cmovle ebp,eax
   140002371:	test   ebp,ebp
   140002373:	jne    0x1400023b2
   140002375:	mov    ecx,0x18
   14000237a:	call   0x140003108
   14000237f:	mov    rdi,rax
   140002382:	test   rax,rax
   140002385:	je     0x1400023a6
   140002387:	mov    rax,QWORD PTR [rsp+0x80]
   14000238f:	lea    rcx,[rip+0x1fba]        # 0x140004350
   140002396:	mov    QWORD PTR [rdi],rcx
   140002399:	mov    QWORD PTR [rdi+0x8],rax
   14000239d:	mov    DWORD PTR [rdi+0x10],0x1
   1400023a4:	jmp    0x1400023a8
   1400023a6:	xor    edi,edi
   1400023a8:	test   rdi,rdi
   1400023ab:	jne    0x1400023c6
   1400023ad:	mov    ebp,0x8007000e
   1400023b2:	mov    rcx,QWORD PTR [rsp+0x80]
   1400023ba:	cmp    rcx,0xffffffffffffffff
   1400023be:	je     0x1400023c6
   1400023c0:	call   QWORD PTR [rip+0x1c82]        # 0x140004048
   1400023c6:	test   ebp,ebp
   1400023c8:	jne    0x14000247a
   1400023ce:	xor    r8d,r8d
   1400023d1:	lea    rdx,[rsp+0x78]
   1400023d6:	lea    rcx,[rip+0x1f43]        # 0x140004320
   1400023dd:	call   QWORD PTR [rip+0x1cdd]        # 0x1400040c0
   1400023e3:	mov    ebp,eax
   1400023e5:	test   eax,eax
   1400023e7:	jne    0x14000247a
   1400023ed:	mov    rbx,QWORD PTR [rsp+0x78]
   1400023f2:	mov    rax,QWORD PTR [rbx]
   1400023f5:	mov    rsi,QWORD PTR [rax+0x18]
   1400023f9:	mov    rcx,rsi
   1400023fc:	call   QWORD PTR [rip+0x1dae]        # 0x1400041b0
   140002402:	mov    rdx,rdi
   140002405:	mov    rcx,rbx
   140002408:	call   rsi
   14000240a:	mov    ebp,eax
   14000240c:	test   eax,eax
   14000240e:	jne    0x14000247a
   140002410:	mov    rbx,QWORD PTR [rsp+0x78]
   140002415:	mov    rax,QWORD PTR [rbx]
   140002418:	mov    rsi,QWORD PTR [rax+0x28]
   14000241c:	mov    rcx,rsi
   14000241f:	call   QWORD PTR [rip+0x1d8b]        # 0x1400041b0
   140002425:	lea    eax,[rbp+0x1]
   140002428:	mov    rcx,rbx
   14000242b:	mov    r8d,eax
   14000242e:	mov    edx,eax
   140002430:	call   rsi
   140002432:	mov    ebp,eax
   140002434:	test   eax,eax
   140002436:	jne    0x14000247a
   140002438:	mov    rbx,QWORD PTR [rsp+0x78]
   14000243d:	mov    rax,QWORD PTR [rbx]
   140002440:	mov    rsi,QWORD PTR [rax+0xd0]
   140002447:	mov    rcx,rsi
   14000244a:	call   QWORD PTR [rip+0x1d60]        # 0x1400041b0
   140002450:	xor    edx,edx
   140002452:	mov    rcx,rbx
   140002455:	call   rsi
   140002457:	mov    ebp,eax
   140002459:	test   eax,eax
   14000245b:	jne    0x14000247a
   14000245d:	mov    rbx,QWORD PTR [rsp+0x78]
   140002462:	mov    QWORD PTR [r15],rbx
   140002465:	mov    rax,QWORD PTR [rbx]
   140002468:	mov    rsi,QWORD PTR [rax+0x8]
   14000246c:	mov    rcx,rsi
   14000246f:	call   QWORD PTR [rip+0x1d3b]        # 0x1400041b0
   140002475:	mov    rcx,rbx
   140002478:	call   rsi
   14000247a:	cmp    r14,0xffffffffffffffff
   14000247e:	je     0x140002489
   140002480:	mov    rcx,r14
   140002483:	call   QWORD PTR [rip+0x1bbf]        # 0x140004048
   140002489:	mov    rbx,QWORD PTR [rsp+0x78]
   14000248e:	jmp    0x140002495
   140002490:	mov    ebp,0x80070057
   140002495:	test   rbx,rbx
   140002498:	je     0x1400024af
   14000249a:	mov    rax,QWORD PTR [rbx]
   14000249d:	mov    rsi,QWORD PTR [rax+0x10]
   1400024a1:	mov    rcx,rsi
   1400024a4:	call   QWORD PTR [rip+0x1d06]        # 0x1400041b0
   1400024aa:	mov    rcx,rbx
   1400024ad:	call   rsi
   1400024af:	test   rdi,rdi
   1400024b2:	je     0x1400024c9
   1400024b4:	mov    rcx,QWORD PTR [rdi]
   1400024b7:	mov    rbx,QWORD PTR [rcx+0x10]
   1400024bb:	mov    rcx,rbx
   1400024be:	call   QWORD PTR [rip+0x1cec]        # 0x1400041b0
   1400024c4:	mov    rcx,rdi
   1400024c7:	call   rbx
   1400024c9:	mov    eax,ebp
   1400024cb:	mov    rbx,QWORD PTR [rsp+0x70]
   1400024d0:	add    rsp,0x40
   1400024d4:	pop    r15
   1400024d6:	pop    r14
   1400024d8:	pop    rdi
   1400024d9:	pop    rsi
   1400024da:	pop    rbp
   1400024db:	ret    
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	int3   
   1400024e1:	int3   
   1400024e2:	int3   
   1400024e3:	int3   
   1400024e4:	mov    QWORD PTR [rsp+0x18],r8
   1400024e9:	mov    QWORD PTR [rsp+0x20],r9
   1400024ee:	push   rbx
   1400024ef:	push   rbp
   1400024f0:	push   rsi
   1400024f1:	push   rdi
   1400024f2:	sub    rsp,0x28
   1400024f6:	xor    ebp,ebp
   1400024f8:	lea    rax,[rdx-0x1]
   1400024fc:	cmp    rax,0x7ffffffe
   140002502:	mov    rsi,rcx
   140002505:	mov    edi,ebp
   140002507:	mov    ecx,0x80070057
   14000250c:	cmova  edi,ecx
   14000250f:	test   edi,edi
   140002511:	js     0x140002548
   140002513:	lea    rbx,[rdx-0x1]
   140002517:	mov    rcx,rsi
   14000251a:	mov    rdx,rbx
   14000251d:	lea    r9,[rsp+0x68]
   140002522:	mov    edi,ebp
   140002524:	call   QWORD PTR [rip+0x1c1e]        # 0x140004148
   14000252a:	test   eax,eax
   14000252c:	js     0x14000253d
   14000252e:	cdqe   
   140002530:	cmp    rax,rbx
   140002533:	ja     0x14000253d
   140002535:	jne    0x140002550
   140002537:	mov    WORD PTR [rsi+rbx*2],bp
   14000253b:	jmp    0x140002550
   14000253d:	mov    WORD PTR [rsi+rbx*2],bp
   140002541:	mov    edi,0x8007007a
   140002546:	jmp    0x140002550
   140002548:	test   rdx,rdx
   14000254b:	je     0x140002550
   14000254d:	mov    WORD PTR [rsi],bp
   140002550:	mov    eax,edi
   140002552:	add    rsp,0x28
   140002556:	pop    rdi
   140002557:	pop    rsi
   140002558:	pop    rbp
   140002559:	pop    rbx
   14000255a:	ret    
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	int3   
   140002561:	int3   
   140002562:	int3   
   140002563:	int3   
   140002564:	mov    QWORD PTR [rsp+0x10],rbx
   140002569:	mov    QWORD PTR [rsp+0x18],rbp
   14000256e:	mov    QWORD PTR [rsp+0x20],rsi
   140002573:	push   rdi
   140002574:	push   r14
   140002576:	push   r15
   140002578:	sub    rsp,0x80
   14000257f:	mov    r9,rcx
   140002582:	lea    r8,[rip+0x6aa7]        # 0x140009030
   140002589:	xor    r14d,r14d
   14000258c:	lea    r10,[rip+0x6a8d]        # 0x140009020
   140002593:	xor    ecx,ecx
   140002595:	mov    r15d,DWORD PTR [r9+0x10]
   140002599:	cmp    DWORD PTR [r8],r15d
   14000259c:	jne    0x1400025b8
   14000259e:	mov    edx,ecx
   1400025a0:	shl    rdx,0x5
   1400025a4:	mov    rax,QWORD PTR [rdx+r10*1]
   1400025a8:	cmp    rax,QWORD PTR [r9]
   1400025ab:	jne    0x1400025b8
   1400025ad:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
   1400025b2:	cmp    rax,QWORD PTR [r9+0x8]
   1400025b6:	je     0x1400025c8
   1400025b8:	inc    ecx
   1400025ba:	add    r8,0x20
   1400025be:	cmp    ecx,0xa3
   1400025c4:	jae    0x1400025dc
   1400025c6:	jmp    0x140002599
   1400025c8:	mov    eax,ecx
   1400025ca:	shl    rax,0x5
   1400025ce:	mov    r14,QWORD PTR [rax+r10*1+0x18]
   1400025d3:	test   r14,r14
   1400025d6:	jne    0x140002665
   1400025dc:	movzx  ecx,BYTE PTR [r9+0xe]
   1400025e1:	movzx  edx,BYTE PTR [r9+0xd]
   1400025e6:	movzx  r8d,BYTE PTR [r9+0xc]
   1400025eb:	movzx  ebx,BYTE PTR [r9+0x9]
   1400025f0:	movzx  eax,BYTE PTR [r9+0xf]
   1400025f5:	movzx  r10d,BYTE PTR [r9+0xb]
   1400025fa:	movzx  r11d,BYTE PTR [r9+0xa]
   1400025ff:	movzx  edi,BYTE PTR [r9+0x8]
   140002604:	movzx  esi,WORD PTR [r9+0x6]
   140002609:	movzx  ebp,WORD PTR [r9+0x4]
   14000260e:	mov    r9d,DWORD PTR [r9]
   140002611:	mov    DWORD PTR [rsp+0x70],r15d
   140002616:	mov    DWORD PTR [rsp+0x68],eax
   14000261a:	mov    DWORD PTR [rsp+0x60],ecx
   14000261e:	mov    DWORD PTR [rsp+0x58],edx
   140002622:	mov    edx,0x80
   140002627:	mov    DWORD PTR [rsp+0x50],r8d
   14000262c:	lea    r8,[rip+0x518d]        # 0x1400077c0
   140002633:	mov    DWORD PTR [rsp+0x48],r10d
   140002638:	mov    DWORD PTR [rsp+0x40],r11d
   14000263d:	mov    DWORD PTR [rsp+0x38],ebx
   140002641:	lea    rbx,[rip+0x83e8]        # 0x14000aa30
   140002648:	mov    DWORD PTR [rsp+0x30],edi
   14000264c:	mov    rcx,rbx
   14000264f:	mov    DWORD PTR [rsp+0x28],esi
   140002653:	mov    DWORD PTR [rsp+0x20],ebp
   140002657:	call   0x1400024e4
   14000265c:	test   eax,eax
   14000265e:	cmovne rbx,r14
   140002662:	mov    r14,rbx
   140002665:	lea    r11,[rsp+0x80]
   14000266d:	mov    rax,r14
   140002670:	mov    rbx,QWORD PTR [r11+0x28]
   140002674:	mov    rbp,QWORD PTR [r11+0x30]
   140002678:	mov    rsi,QWORD PTR [r11+0x38]
   14000267c:	mov    rsp,r11
   14000267f:	pop    r15
   140002681:	pop    r14
   140002683:	pop    rdi
   140002684:	ret    
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	mov    QWORD PTR [rsp+0x18],rbx
   140002691:	push   rbp
   140002692:	push   rsi
   140002693:	push   rdi
   140002694:	push   r12
   140002696:	push   r13
   140002698:	push   r14
   14000269a:	push   r15
   14000269c:	lea    rbp,[rsp-0x30]
   1400026a1:	sub    rsp,0x130
   1400026a8:	mov    rax,QWORD PTR [rip+0x6959]        # 0x140009008
   1400026af:	xor    rax,rsp
   1400026b2:	mov    QWORD PTR [rbp+0x20],rax
   1400026b6:	xor    eax,eax
   1400026b8:	xor    r13d,r13d
   1400026bb:	mov    r15,rdx
   1400026be:	mov    DWORD PTR [rsp+0x30],r13d
   1400026c3:	mov    r14,rcx
   1400026c6:	mov    DWORD PTR [rbp-0x40],r13d
   1400026ca:	xor    edx,edx
   1400026cc:	mov    QWORD PTR [rbp-0x3c],rax
   1400026d0:	lea    r8d,[r13+0x3e]
   1400026d4:	mov    QWORD PTR [rbp-0x34],rax
   1400026d8:	lea    rcx,[rbp-0x1e]
   1400026dc:	mov    WORD PTR [rsp+0x38],r13w
   1400026e2:	mov    QWORD PTR [rsp+0x3a],rax
   1400026e7:	mov    QWORD PTR [rsp+0x42],rax
   1400026ec:	mov    DWORD PTR [rsp+0x4a],eax
   1400026f0:	mov    WORD PTR [rsp+0x4e],ax
   1400026f5:	mov    WORD PTR [rbp-0x20],r13w
   1400026fa:	call   0x140003a56
   1400026ff:	mov    rdi,QWORD PTR [r14]
   140002702:	test   rdi,rdi
   140002705:	je     0x140002a1b
   14000270b:	mov    rax,QWORD PTR [rdi]
   14000270e:	cmp    QWORD PTR [r15],r13
   140002711:	je     0x140002a09
   140002717:	mov    rbx,QWORD PTR [rax+0xd8]
   14000271e:	mov    rcx,rbx
   140002721:	call   QWORD PTR [rip+0x1a89]        # 0x1400041b0
   140002727:	xor    r9d,r9d
   14000272a:	lea    r8,[rip+0x50ff]        # 0x140007830
   140002731:	xor    edx,edx
   140002733:	mov    rcx,rdi
   140002736:	call   rbx
   140002738:	mov    edi,eax
   14000273a:	test   eax,eax
   14000273c:	jne    0x1400027ae
   14000273e:	mov    rdi,QWORD PTR [r15]
   140002741:	mov    rax,QWORD PTR [rdi]
   140002744:	mov    rbx,QWORD PTR [rax+0x18]
   140002748:	mov    rcx,rbx
   14000274b:	call   QWORD PTR [rip+0x1a5f]        # 0x1400041b0
   140002751:	lea    rdx,[rsp+0x30]
   140002756:	mov    rcx,rdi
   140002759:	call   rbx
   14000275b:	mov    edi,eax
   14000275d:	test   eax,eax
   14000275f:	jne    0x1400027ae
   140002761:	mov    r9d,DWORD PTR [rsp+0x30]
   140002766:	lea    r8,[rip+0x50df]        # 0x14000784c
   14000276d:	lea    edx,[rax+0x20]
   140002770:	lea    rcx,[rbp-0x20]
   140002774:	call   0x1400024e4
   140002779:	mov    edi,eax
   14000277b:	test   eax,eax
   14000277d:	jne    0x1400027ae
   14000277f:	mov    rdi,QWORD PTR [r14]
   140002782:	mov    rax,QWORD PTR [rdi]
   140002785:	mov    rbx,QWORD PTR [rax+0x38]
   140002789:	mov    rcx,rbx
   14000278c:	call   QWORD PTR [rip+0x1a1e]        # 0x1400041b0
   140002792:	lea    rax,[rbp-0x20]
   140002796:	xor    r9d,r9d
   140002799:	lea    r8,[rip+0x50b8]        # 0x140007858
   1400027a0:	mov    QWORD PTR [rsp+0x20],rax
   1400027a5:	xor    edx,edx
   1400027a7:	mov    rcx,rdi
   1400027aa:	call   rbx
   1400027ac:	mov    edi,eax
   1400027ae:	mov    r12d,r13d
   1400027b1:	cmp    DWORD PTR [rsp+0x30],r13d
   1400027b6:	jbe    0x14000299f
   1400027bc:	mov    rdi,QWORD PTR [r15]
   1400027bf:	mov    rax,QWORD PTR [rdi]
   1400027c2:	mov    rbx,QWORD PTR [rax+0x20]
   1400027c6:	mov    rcx,rbx
   1400027c9:	call   QWORD PTR [rip+0x19e1]        # 0x1400041b0
   1400027cf:	lea    r8,[rbp-0x40]
   1400027d3:	mov    edx,r12d
   1400027d6:	mov    rcx,rdi
   1400027d9:	call   rbx
   1400027db:	test   eax,eax
   1400027dd:	jne    0x140002983
   1400027e3:	mov    rdi,QWORD PTR [r15]
   1400027e6:	mov    rax,QWORD PTR [rdi]
   1400027e9:	mov    rbx,QWORD PTR [rax+0x28]
   1400027ed:	mov    rcx,rbx
   1400027f0:	call   QWORD PTR [rip+0x19ba]        # 0x1400041b0
   1400027f6:	lea    r8,[rsp+0x38]
   1400027fb:	mov    rcx,rdi
   1400027fe:	lea    rdx,[rbp-0x40]
   140002802:	call   rbx
   140002804:	test   eax,eax
   140002806:	je     0x14000292d
   14000280c:	mov    r9d,eax
   14000280f:	lea    r8,[rip+0x5062]        # 0x140007878
   140002816:	mov    edx,0x20
   14000281b:	lea    rcx,[rbp-0x20]
   14000281f:	call   0x1400024e4
   140002824:	mov    rdi,QWORD PTR [r14]
   140002827:	mov    rax,QWORD PTR [rdi]
   14000282a:	mov    rbx,QWORD PTR [rax+0xd8]
   140002831:	mov    rcx,rbx
   140002834:	call   QWORD PTR [rip+0x1976]        # 0x1400041b0
   14000283a:	xor    r9d,r9d
   14000283d:	lea    r8,[rip+0x5044]        # 0x140007888
   140002844:	xor    edx,edx
   140002846:	mov    rcx,rdi
   140002849:	call   rbx
   14000284b:	test   eax,eax
   14000284d:	jne    0x140002983
   140002853:	mov    rsi,QWORD PTR [r14]
   140002856:	lea    rcx,[rsp+0x60]
   14000285b:	movups xmm0,XMMWORD PTR [rbp-0x40]
   14000285f:	mov    eax,DWORD PTR [rbp-0x30]
   140002862:	mov    DWORD PTR [rsp+0x70],eax
   140002866:	mov    rdi,QWORD PTR [rsi]
   140002869:	movaps XMMWORD PTR [rsp+0x60],xmm0
   14000286e:	call   0x140002564
   140002873:	mov    rcx,QWORD PTR [rdi+0x38]
   140002877:	mov    rbx,rax
   14000287a:	call   QWORD PTR [rip+0x1930]        # 0x1400041b0
   140002880:	xor    r9d,r9d
   140002883:	mov    QWORD PTR [rsp+0x20],rbx
   140002888:	lea    r8,[rip+0x5011]        # 0x1400078a0
   14000288f:	xor    edx,edx
   140002891:	mov    rcx,rsi
   140002894:	call   QWORD PTR [rdi+0x38]
   140002897:	test   eax,eax
   140002899:	jne    0x140002983
   14000289f:	mov    rdi,QWORD PTR [r14]
   1400028a2:	mov    rax,QWORD PTR [rdi]
   1400028a5:	mov    rbx,QWORD PTR [rax+0xd8]
   1400028ac:	mov    rcx,rbx
   1400028af:	call   QWORD PTR [rip+0x18fb]        # 0x1400041b0
   1400028b5:	xor    r9d,r9d
   1400028b8:	lea    r8,[rip+0x4fe9]        # 0x1400078a8
   1400028bf:	xor    edx,edx
   1400028c1:	mov    rcx,rdi
   1400028c4:	call   rbx
   1400028c6:	test   eax,eax
   1400028c8:	jne    0x140002983
   1400028ce:	mov    rdi,QWORD PTR [r14]
   1400028d1:	mov    rax,QWORD PTR [rdi]
   1400028d4:	mov    rbx,QWORD PTR [rax+0xe0]
   1400028db:	mov    rcx,rbx
   1400028de:	call   QWORD PTR [rip+0x18cc]        # 0x1400041b0
   1400028e4:	lea    rdx,[rbp-0x20]
   1400028e8:	mov    rcx,rdi
   1400028eb:	call   rbx
   1400028ed:	test   eax,eax
   1400028ef:	jne    0x140002983
   1400028f5:	mov    rdi,QWORD PTR [r14]
   1400028f8:	mov    rax,QWORD PTR [rdi]
   1400028fb:	mov    rbx,QWORD PTR [rax+0x88]
   140002902:	mov    rcx,rbx
   140002905:	call   QWORD PTR [rip+0x18a5]        # 0x1400041b0
   14000290b:	mov    rcx,rdi
   14000290e:	call   rbx
   140002910:	mov    rdi,QWORD PTR [r14]
   140002913:	mov    rax,QWORD PTR [rdi]
   140002916:	mov    rbx,QWORD PTR [rax+0x88]
   14000291d:	mov    rcx,rbx
   140002920:	call   QWORD PTR [rip+0x188a]        # 0x1400041b0
   140002926:	mov    rcx,rdi
   140002929:	call   rbx
   14000292b:	jmp    0x140002983
   14000292d:	movups xmm0,XMMWORD PTR [rsp+0x38]
   140002932:	mov    rbx,QWORD PTR [r14]
   140002935:	movsd  xmm1,QWORD PTR [rsp+0x48]
   14000293b:	mov    eax,DWORD PTR [rbp-0x30]
   14000293e:	movaps XMMWORD PTR [rbp-0x60],xmm0
   140002942:	movsd  QWORD PTR [rbp-0x50],xmm1
   140002947:	mov    DWORD PTR [rbp-0x70],eax
   14000294a:	mov    QWORD PTR [rsp+0x50],rbx
   14000294f:	movups xmm0,XMMWORD PTR [rbp-0x40]
   140002953:	movaps XMMWORD PTR [rbp-0x80],xmm0
   140002957:	test   rbx,rbx
   14000295a:	je     0x140002971
   14000295c:	mov    rax,QWORD PTR [rbx]
   14000295f:	mov    rdi,QWORD PTR [rax+0x8]
   140002963:	mov    rcx,rdi
   140002966:	call   QWORD PTR [rip+0x1844]        # 0x1400041b0
   14000296c:	mov    rcx,rbx
   14000296f:	call   rdi
   140002971:	lea    r8,[rbp-0x60]
   140002975:	lea    rdx,[rbp-0x80]
   140002979:	lea    rcx,[rsp+0x50]
   14000297e:	call   0x140002a6c
   140002983:	lea    rcx,[rsp+0x38]
   140002988:	call   QWORD PTR [rip+0x17e2]        # 0x140004170
   14000298e:	inc    r12d
   140002991:	mov    edi,r13d
   140002994:	cmp    r12d,DWORD PTR [rsp+0x30]
   140002999:	jb     0x1400027bc
   14000299f:	test   edi,edi
   1400029a1:	jne    0x1400029c0
   1400029a3:	mov    rdi,QWORD PTR [r14]
   1400029a6:	mov    rax,QWORD PTR [rdi]
   1400029a9:	mov    rbx,QWORD PTR [rax+0x88]
   1400029b0:	mov    rcx,rbx
   1400029b3:	call   QWORD PTR [rip+0x17f7]        # 0x1400041b0
   1400029b9:	mov    rcx,rdi
   1400029bc:	call   rbx
   1400029be:	mov    edi,eax
   1400029c0:	lea    rcx,[rsp+0x38]
   1400029c5:	call   QWORD PTR [rip+0x17a5]        # 0x140004170
   1400029cb:	mov    rsi,QWORD PTR [r14]
   1400029ce:	test   rsi,rsi
   1400029d1:	je     0x1400029e8
   1400029d3:	mov    rax,QWORD PTR [rsi]
   1400029d6:	mov    rbx,QWORD PTR [rax+0x10]
   1400029da:	mov    rcx,rbx
   1400029dd:	call   QWORD PTR [rip+0x17cd]        # 0x1400041b0
   1400029e3:	mov    rcx,rsi
   1400029e6:	call   rbx
   1400029e8:	mov    rsi,QWORD PTR [r15]
   1400029eb:	test   rsi,rsi
   1400029ee:	je     0x140002a05
   1400029f0:	mov    rax,QWORD PTR [rsi]
   1400029f3:	mov    rbx,QWORD PTR [rax+0x10]
   1400029f7:	mov    rcx,rbx
   1400029fa:	call   QWORD PTR [rip+0x17b0]        # 0x1400041b0
   140002a00:	mov    rcx,rsi
   140002a03:	call   rbx
   140002a05:	mov    eax,edi
   140002a07:	jmp    0x140002a3d
   140002a09:	mov    rbx,QWORD PTR [rax+0x10]
   140002a0d:	mov    rcx,rbx
   140002a10:	call   QWORD PTR [rip+0x179a]        # 0x1400041b0
   140002a16:	mov    rcx,rdi
   140002a19:	call   rbx
   140002a1b:	mov    rdi,QWORD PTR [r15]
   140002a1e:	test   rdi,rdi
   140002a21:	je     0x140002a38
   140002a23:	mov    rax,QWORD PTR [rdi]
   140002a26:	mov    rbx,QWORD PTR [rax+0x10]
   140002a2a:	mov    rcx,rbx
   140002a2d:	call   QWORD PTR [rip+0x177d]        # 0x1400041b0
   140002a33:	mov    rcx,rdi
   140002a36:	call   rbx
   140002a38:	mov    eax,0x80070057
   140002a3d:	mov    rcx,QWORD PTR [rbp+0x20]
   140002a41:	xor    rcx,rsp
   140002a44:	call   0x140003490
   140002a49:	mov    rbx,QWORD PTR [rsp+0x180]
   140002a51:	add    rsp,0x130
   140002a58:	pop    r15
   140002a5a:	pop    r14
   140002a5c:	pop    r13
   140002a5e:	pop    r12
   140002a60:	pop    rdi
   140002a61:	pop    rsi
   140002a62:	pop    rbp
   140002a63:	ret    
   140002a64:	int3   
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	mov    QWORD PTR [rsp+0x20],rbx
   140002a71:	push   rbp
   140002a72:	push   rsi
   140002a73:	push   rdi
   140002a74:	push   r12
   140002a76:	push   r13
   140002a78:	push   r14
   140002a7a:	push   r15
   140002a7c:	lea    rbp,[rsp-0x27]
   140002a81:	sub    rsp,0xb0
   140002a88:	mov    rax,QWORD PTR [rip+0x6579]        # 0x140009008
   140002a8f:	xor    rax,rsp
   140002a92:	mov    QWORD PTR [rbp+0x17],rax
   140002a96:	xor    r13d,r13d
   140002a99:	mov    r15,r8
   140002a9c:	mov    rbx,rdx
   140002a9f:	mov    QWORD PTR [rbp-0x59],r13
   140002aa3:	mov    r12,rcx
   140002aa6:	mov    WORD PTR [rbp-0x29],r13w
   140002aab:	xor    edx,edx
   140002aad:	lea    rcx,[rbp-0x27]
   140002ab1:	lea    r8d,[r13+0x3e]
   140002ab5:	call   0x140003a56
   140002aba:	cmp    QWORD PTR [r12],r13
   140002abe:	jne    0x140002aca
   140002ac0:	mov    eax,0x80070057
   140002ac5:	jmp    0x1400030cd
   140002aca:	movups xmm0,XMMWORD PTR [rbx]
   140002acd:	mov    eax,DWORD PTR [rbx+0x10]
   140002ad0:	lea    rcx,[rbp-0x49]
   140002ad4:	mov    DWORD PTR [rbp-0x39],eax
   140002ad7:	movaps XMMWORD PTR [rbp-0x49],xmm0
   140002adb:	call   0x140002564
   140002ae0:	movzx  r8d,WORD PTR [r15]
   140002ae4:	lea    r9,[rip+0x4835]        # 0x140007320
   140002aeb:	mov    rdx,r9
   140002aee:	mov    r14,rax
   140002af1:	mov    rsi,r13
   140002af4:	mov    ecx,r13d
   140002af7:	cmp    WORD PTR [rdx],r8w
   140002afb:	je     0x140002b0a
   140002afd:	inc    ecx
   140002aff:	add    rdx,0x10
   140002b03:	cmp    ecx,0x4a
   140002b06:	jb     0x140002af7
   140002b08:	jmp    0x140002b19
   140002b0a:	mov    eax,ecx
   140002b0c:	add    rax,rax
   140002b0f:	mov    rsi,QWORD PTR [r9+rax*8+0x8]
   140002b14:	test   rsi,rsi
   140002b17:	jne    0x140002b45
   140002b19:	movzx  r9d,r8w
   140002b1d:	lea    rcx,[rip+0x800c]        # 0x14000ab30
   140002b24:	lea    r8,[rip+0x4d4d]        # 0x140007878
   140002b2b:	mov    edx,0x20
   140002b30:	call   0x1400024e4
   140002b35:	test   eax,eax
   140002b37:	lea    rcx,[rip+0x7ef2]        # 0x14000aa30
   140002b3e:	cmovne rcx,rsi
   140002b42:	mov    rsi,rcx
   140002b45:	mov    rdi,QWORD PTR [r12]
   140002b49:	mov    rax,QWORD PTR [rdi]
   140002b4c:	mov    rbx,QWORD PTR [rax+0xd8]
   140002b53:	mov    rcx,rbx
   140002b56:	call   QWORD PTR [rip+0x1654]        # 0x1400041b0
   140002b5c:	xor    r9d,r9d
   140002b5f:	lea    r8,[rip+0x4d22]        # 0x140007888
   140002b66:	xor    edx,edx
   140002b68:	mov    rcx,rdi
   140002b6b:	call   rbx
   140002b6d:	mov    edi,eax
   140002b6f:	test   eax,eax
   140002b71:	jne    0x1400030ad
   140002b77:	mov    rdi,QWORD PTR [r12]
   140002b7b:	mov    rax,QWORD PTR [rdi]
   140002b7e:	mov    rbx,QWORD PTR [rax+0x38]
   140002b82:	mov    rcx,rbx
   140002b85:	call   QWORD PTR [rip+0x1625]        # 0x1400041b0
   140002b8b:	xor    r9d,r9d
   140002b8e:	mov    QWORD PTR [rsp+0x20],r14
   140002b93:	lea    r8,[rip+0x4d06]        # 0x1400078a0
   140002b9a:	xor    edx,edx
   140002b9c:	mov    rcx,rdi
   140002b9f:	call   rbx
   140002ba1:	mov    edi,eax
   140002ba3:	test   eax,eax
   140002ba5:	jne    0x1400030ad
   140002bab:	mov    rdi,QWORD PTR [r12]
   140002baf:	mov    rax,QWORD PTR [rdi]
   140002bb2:	mov    rbx,QWORD PTR [rax+0x38]
   140002bb6:	mov    rcx,rbx
   140002bb9:	call   QWORD PTR [rip+0x15f1]        # 0x1400041b0
   140002bbf:	xor    r9d,r9d
   140002bc2:	mov    QWORD PTR [rsp+0x20],rsi
   140002bc7:	lea    r8,[rip+0x4cea]        # 0x1400078b8
   140002bce:	xor    edx,edx
   140002bd0:	mov    rcx,rdi
   140002bd3:	call   rbx
   140002bd5:	mov    edi,eax
   140002bd7:	test   eax,eax
   140002bd9:	jne    0x1400030ad
   140002bdf:	movzx  eax,WORD PTR [r15]
   140002be3:	lea    r14,[rip+0x4c62]        # 0x14000784c
   140002bea:	mov    ecx,0x1000
   140002bef:	lea    esi,[rdi+0x20]
   140002bf2:	and    ax,cx
   140002bf5:	cmp    r13w,ax
   140002bf9:	je     0x140002c4f
   140002bfb:	mov    r9d,DWORD PTR [r15+0x8]
   140002bff:	lea    rcx,[rbp-0x29]
   140002c03:	mov    r8,r14
   140002c06:	mov    edx,esi
   140002c08:	call   0x1400024e4
   140002c0d:	mov    edi,eax
   140002c0f:	test   eax,eax
   140002c11:	jne    0x1400030ad
   140002c17:	mov    rdi,QWORD PTR [r12]
   140002c1b:	mov    rax,QWORD PTR [rdi]
   140002c1e:	mov    rbx,QWORD PTR [rax+0x38]
   140002c22:	mov    rcx,rbx
   140002c25:	call   QWORD PTR [rip+0x1585]        # 0x1400041b0
   140002c2b:	lea    rax,[rbp-0x29]
   140002c2f:	xor    r9d,r9d
   140002c32:	lea    r8,[rip+0x4c8f]        # 0x1400078c8
   140002c39:	mov    QWORD PTR [rsp+0x20],rax
   140002c3e:	xor    edx,edx
   140002c40:	mov    rcx,rdi
   140002c43:	call   rbx
   140002c45:	mov    edi,eax
   140002c47:	test   eax,eax
   140002c49:	jne    0x1400030ad
   140002c4f:	mov    rdi,QWORD PTR [r12]
   140002c53:	mov    rax,QWORD PTR [rdi]
   140002c56:	mov    rbx,QWORD PTR [rax+0xd8]
   140002c5d:	mov    rcx,rbx
   140002c60:	call   QWORD PTR [rip+0x154a]        # 0x1400041b0
   140002c66:	xor    r9d,r9d
   140002c69:	lea    r8,[rip+0x4c38]        # 0x1400078a8
   140002c70:	xor    edx,edx
   140002c72:	mov    rcx,rdi
   140002c75:	call   rbx
   140002c77:	mov    edi,eax
   140002c79:	test   eax,eax
   140002c7b:	jne    0x1400030ad
   140002c81:	movzx  ecx,WORD PTR [r15]
   140002c85:	cmp    ecx,0x1f
   140002c88:	jg     0x140002dfe
   140002c8e:	je     0x140002cf7
   140002c90:	cmp    ecx,0x10
   140002c93:	jg     0x140002d91
   140002c99:	je     0x140002d4c
   140002c9f:	sub    ecx,0x2
   140002ca2:	je     0x140002d45
   140002ca8:	sub    ecx,0x1
   140002cab:	je     0x140002d3f
   140002cb1:	sub    ecx,0x1
   140002cb4:	je     0x140002d1c
   140002cb6:	sub    ecx,0x1
   140002cb9:	je     0x140002d14
   140002cbb:	sub    ecx,0x2
   140002cbe:	je     0x140002d14
   140002cc0:	sub    ecx,0x1
   140002cc3:	je     0x140002cf7
   140002cc5:	sub    ecx,0x2
   140002cc8:	je     0x140002d3f
   140002cca:	cmp    ecx,0x1
   140002ccd:	jne    0x14000306d
   140002cd3:	cmp    WORD PTR [r15+0x8],0xffff
   140002cd9:	lea    rax,[rip+0x4c30]        # 0x140007910
   140002ce0:	lea    r9,[rip+0x4c39]        # 0x140007920
   140002ce7:	cmove  r9,rax
   140002ceb:	lea    r8,[rip+0x4c3a]        # 0x14000792c
   140002cf2:	jmp    0x140002dd9
   140002cf7:	mov    rdi,QWORD PTR [r12]
   140002cfb:	mov    rax,QWORD PTR [rdi]
   140002cfe:	mov    rbx,QWORD PTR [rax+0xe0]
   140002d05:	mov    rcx,rbx
   140002d08:	call   QWORD PTR [rip+0x14a2]        # 0x1400041b0
   140002d0e:	mov    rdx,QWORD PTR [r15+0x8]
   140002d12:	jmp    0x140002d85
   140002d14:	movsd  xmm3,QWORD PTR [r15+0x8]
   140002d1a:	jmp    0x140002d25
   140002d1c:	movss  xmm3,DWORD PTR [r15+0x8]
   140002d22:	cvtps2pd xmm3,xmm3
   140002d25:	movq   r9,xmm3
   140002d2a:	lea    r8,[rip+0x4bd3]        # 0x140007904
   140002d31:	mov    rdx,rsi
   140002d34:	lea    rcx,[rbp-0x29]
   140002d38:	call   0x1400024e4
   140002d3d:	jmp    0x140002d60
   140002d3f:	mov    r9d,DWORD PTR [r15+0x8]
   140002d43:	jmp    0x140002d51
   140002d45:	movsx  r9d,WORD PTR [r15+0x8]
   140002d4a:	jmp    0x140002d51
   140002d4c:	movsx  r9d,BYTE PTR [r15+0x8]
   140002d51:	mov    r8,r14
   140002d54:	mov    rdx,rsi
   140002d57:	lea    rcx,[rbp-0x29]
   140002d5b:	call   0x1400024e4
   140002d60:	mov    edi,eax
   140002d62:	test   eax,eax
   140002d64:	jne    0x1400030ad
   140002d6a:	mov    rdi,QWORD PTR [r12]
   140002d6e:	mov    rax,QWORD PTR [rdi]
   140002d71:	mov    rbx,QWORD PTR [rax+0xe0]
   140002d78:	mov    rcx,rbx
   140002d7b:	call   QWORD PTR [rip+0x142f]        # 0x1400041b0
   140002d81:	lea    rdx,[rbp-0x29]
   140002d85:	mov    rcx,rdi
   140002d88:	call   rbx
   140002d8a:	mov    edi,eax
   140002d8c:	jmp    0x140003069
   140002d91:	sub    ecx,0x11
   140002d94:	je     0x140002df4
   140002d96:	sub    ecx,0x1
   140002d99:	je     0x140002dea
   140002d9b:	sub    ecx,0x1
   140002d9e:	je     0x140002db8
   140002da0:	sub    ecx,0x1
   140002da3:	je     0x140002dce
   140002da5:	sub    ecx,0x1
   140002da8:	je     0x140002dc5
   140002daa:	sub    ecx,0x1
   140002dad:	je     0x140002d3f
   140002daf:	cmp    ecx,0x1
   140002db2:	jne    0x14000306d
   140002db8:	mov    r9d,DWORD PTR [r15+0x8]
   140002dbc:	lea    r8,[rip+0x4b1d]        # 0x1400078e0
   140002dc3:	jmp    0x140002d54
   140002dc5:	lea    r8,[rip+0x4b2c]        # 0x1400078f8
   140002dcc:	jmp    0x140002dd5
   140002dce:	lea    r8,[rip+0x4b13]        # 0x1400078e8
   140002dd5:	mov    r9,QWORD PTR [r15+0x8]
   140002dd9:	mov    rdx,rsi
   140002ddc:	lea    rcx,[rbp-0x29]
   140002de0:	call   0x1400024e4
   140002de5:	jmp    0x140002d60
   140002dea:	movzx  r9d,WORD PTR [r15+0x8]
   140002def:	jmp    0x140002d51
   140002df4:	movzx  r9d,BYTE PTR [r15+0x8]
   140002df9:	jmp    0x140002d51
   140002dfe:	sub    ecx,0x48
   140002e01:	je     0x140003020
   140002e07:	sub    ecx,0xfc0
   140002e0d:	je     0x140002f86
   140002e13:	sub    ecx,0x17
   140002e16:	je     0x140002ee9
   140002e1c:	cmp    ecx,0x29
   140002e1f:	jne    0x14000306d
   140002e25:	mov    esi,r13d
   140002e28:	cmp    esi,DWORD PTR [r15+0x8]
   140002e2c:	jae    0x140003069
   140002e32:	mov    ecx,esi
   140002e34:	lea    rdx,[rbp-0x59]
   140002e38:	shl    rcx,0x4
   140002e3c:	add    rcx,QWORD PTR [r15+0x10]
   140002e40:	call   QWORD PTR [rip+0x1332]        # 0x140004178
   140002e46:	mov    edi,eax
   140002e48:	test   eax,eax
   140002e4a:	jne    0x140002e6e
   140002e4c:	mov    rdi,QWORD PTR [r12]
   140002e50:	mov    rax,QWORD PTR [rdi]
   140002e53:	mov    rbx,QWORD PTR [rax+0xe0]
   140002e5a:	mov    rcx,rbx
   140002e5d:	call   QWORD PTR [rip+0x134d]        # 0x1400041b0
   140002e63:	mov    rdx,QWORD PTR [rbp-0x59]
   140002e67:	mov    rcx,rdi
   140002e6a:	call   rbx
   140002e6c:	mov    edi,eax
   140002e6e:	mov    rcx,QWORD PTR [rbp-0x59]
   140002e72:	test   rcx,rcx
   140002e75:	je     0x140002e81
   140002e77:	call   QWORD PTR [rip+0x1313]        # 0x140004190
   140002e7d:	mov    QWORD PTR [rbp-0x59],r13
   140002e81:	test   edi,edi
   140002e83:	jne    0x140002eda
   140002e85:	lea    eax,[rsi+0x1]
   140002e88:	cmp    eax,DWORD PTR [r15+0x8]
   140002e8c:	jae    0x140002eda
   140002e8e:	mov    rdi,QWORD PTR [r12]
   140002e92:	mov    rax,QWORD PTR [rdi]
   140002e95:	mov    rbx,QWORD PTR [rax+0x88]
   140002e9c:	mov    rcx,rbx
   140002e9f:	call   QWORD PTR [rip+0x130b]        # 0x1400041b0
   140002ea5:	mov    rcx,rdi
   140002ea8:	call   rbx
   140002eaa:	mov    edi,eax
   140002eac:	test   eax,eax
   140002eae:	jne    0x140002eda
   140002eb0:	mov    rdi,QWORD PTR [r12]
   140002eb4:	mov    rax,QWORD PTR [rdi]
   140002eb7:	mov    rbx,QWORD PTR [rax+0xd8]
   140002ebe:	mov    rcx,rbx
   140002ec1:	call   QWORD PTR [rip+0x12e9]        # 0x1400041b0
   140002ec7:	xor    r9d,r9d
   140002eca:	lea    r8,[rip+0x49d7]        # 0x1400078a8
   140002ed1:	xor    edx,edx
   140002ed3:	mov    rcx,rdi
   140002ed6:	call   rbx
   140002ed8:	mov    edi,eax
   140002eda:	inc    esi
   140002edc:	test   edi,edi
   140002ede:	je     0x140002e28
   140002ee4:	jmp    0x140003069
   140002ee9:	cmp    r13d,DWORD PTR [r15+0x8]
   140002eed:	jae    0x140003069
   140002ef3:	mov    r14,QWORD PTR [r12]
   140002ef7:	mov    rbx,QWORD PTR [r15+0x10]
   140002efb:	mov    edi,r13d
   140002efe:	mov    rax,QWORD PTR [r14]
   140002f01:	mov    rsi,QWORD PTR [rax+0xe0]
   140002f08:	mov    rcx,rsi
   140002f0b:	call   QWORD PTR [rip+0x129f]        # 0x1400041b0
   140002f11:	mov    rdx,QWORD PTR [rbx+rdi*8]
   140002f15:	mov    rcx,r14
   140002f18:	call   rsi
   140002f1a:	mov    edi,eax
   140002f1c:	test   eax,eax
   140002f1e:	jne    0x140002f76
   140002f20:	lea    eax,[r13+0x1]
   140002f24:	cmp    eax,DWORD PTR [r15+0x8]
   140002f28:	jae    0x140002f76
   140002f2a:	mov    rdi,QWORD PTR [r12]
   140002f2e:	mov    rax,QWORD PTR [rdi]
   140002f31:	mov    rbx,QWORD PTR [rax+0x88]
   140002f38:	mov    rcx,rbx
   140002f3b:	call   QWORD PTR [rip+0x126f]        # 0x1400041b0
   140002f41:	mov    rcx,rdi
   140002f44:	call   rbx
   140002f46:	mov    edi,eax
   140002f48:	test   eax,eax
   140002f4a:	jne    0x140002f76
   140002f4c:	mov    rdi,QWORD PTR [r12]
   140002f50:	mov    rax,QWORD PTR [rdi]
   140002f53:	mov    rbx,QWORD PTR [rax+0xd8]
   140002f5a:	mov    rcx,rbx
   140002f5d:	call   QWORD PTR [rip+0x124d]        # 0x1400041b0
   140002f63:	xor    r9d,r9d
   140002f66:	lea    r8,[rip+0x493b]        # 0x1400078a8
   140002f6d:	xor    edx,edx
   140002f6f:	mov    rcx,rdi
   140002f72:	call   rbx
   140002f74:	mov    edi,eax
   140002f76:	inc    r13d
   140002f79:	test   edi,edi
   140002f7b:	je     0x140002ee9
   140002f81:	jmp    0x140003069
   140002f86:	cmp    r13d,DWORD PTR [r15+0x8]
   140002f8a:	jae    0x140003069
   140002f90:	mov    r14,QWORD PTR [r12]
   140002f94:	mov    rbx,QWORD PTR [r15+0x10]
   140002f98:	mov    edi,r13d
   140002f9b:	mov    rax,QWORD PTR [r14]
   140002f9e:	mov    rsi,QWORD PTR [rax+0xe0]
   140002fa5:	mov    rcx,rsi
   140002fa8:	call   QWORD PTR [rip+0x1202]        # 0x1400041b0
   140002fae:	mov    rdx,QWORD PTR [rbx+rdi*8]
   140002fb2:	mov    rcx,r14
   140002fb5:	call   rsi
   140002fb7:	mov    edi,eax
   140002fb9:	test   eax,eax
   140002fbb:	jne    0x140003013
   140002fbd:	lea    eax,[r13+0x1]
   140002fc1:	cmp    eax,DWORD PTR [r15+0x8]
   140002fc5:	jae    0x140003013
   140002fc7:	mov    rdi,QWORD PTR [r12]
   140002fcb:	mov    rax,QWORD PTR [rdi]
   140002fce:	mov    rbx,QWORD PTR [rax+0x88]
   140002fd5:	mov    rcx,rbx
   140002fd8:	call   QWORD PTR [rip+0x11d2]        # 0x1400041b0
   140002fde:	mov    rcx,rdi
   140002fe1:	call   rbx
   140002fe3:	mov    edi,eax
   140002fe5:	test   eax,eax
   140002fe7:	jne    0x140003013
   140002fe9:	mov    rdi,QWORD PTR [r12]
   140002fed:	mov    rax,QWORD PTR [rdi]
   140002ff0:	mov    rbx,QWORD PTR [rax+0xd8]
   140002ff7:	mov    rcx,rbx
   140002ffa:	call   QWORD PTR [rip+0x11b0]        # 0x1400041b0
   140003000:	xor    r9d,r9d
   140003003:	lea    r8,[rip+0x489e]        # 0x1400078a8
   14000300a:	xor    edx,edx
   14000300c:	mov    rcx,rdi
   14000300f:	call   rbx
   140003011:	mov    edi,eax
   140003013:	inc    r13d
   140003016:	test   edi,edi
   140003018:	je     0x140002f86
   14000301e:	jmp    0x140003069
   140003020:	mov    rcx,QWORD PTR [r15+0x8]
   140003024:	lea    rdx,[rbp-0x59]
   140003028:	call   QWORD PTR [rip+0x114a]        # 0x140004178
   14000302e:	mov    edi,eax
   140003030:	test   eax,eax
   140003032:	jne    0x140003056
   140003034:	mov    rdi,QWORD PTR [r12]
   140003038:	mov    rax,QWORD PTR [rdi]
   14000303b:	mov    rbx,QWORD PTR [rax+0xe0]
   140003042:	mov    rcx,rbx
   140003045:	call   QWORD PTR [rip+0x1165]        # 0x1400041b0
   14000304b:	mov    rdx,QWORD PTR [rbp-0x59]
   14000304f:	mov    rcx,rdi
   140003052:	call   rbx
   140003054:	mov    edi,eax
   140003056:	mov    rcx,QWORD PTR [rbp-0x59]
   14000305a:	test   rcx,rcx
   14000305d:	je     0x140003069
   14000305f:	call   QWORD PTR [rip+0x112b]        # 0x140004190
   140003065:	mov    QWORD PTR [rbp-0x59],r13
   140003069:	test   edi,edi
   14000306b:	jne    0x1400030ad
   14000306d:	mov    rdi,QWORD PTR [r12]
   140003071:	mov    rax,QWORD PTR [rdi]
   140003074:	mov    rbx,QWORD PTR [rax+0x88]
   14000307b:	mov    rcx,rbx
   14000307e:	call   QWORD PTR [rip+0x112c]        # 0x1400041b0
   140003084:	mov    rcx,rdi
   140003087:	call   rbx
   140003089:	mov    edi,eax
   14000308b:	test   eax,eax
   14000308d:	jne    0x1400030ad
   14000308f:	mov    rdi,QWORD PTR [r12]
   140003093:	mov    rax,QWORD PTR [rdi]
   140003096:	mov    rbx,QWORD PTR [rax+0x88]
   14000309d:	mov    rcx,rbx
   1400030a0:	call   QWORD PTR [rip+0x110a]        # 0x1400041b0
   1400030a6:	mov    rcx,rdi
   1400030a9:	call   rbx
   1400030ab:	mov    edi,eax
   1400030ad:	mov    rsi,QWORD PTR [r12]
   1400030b1:	test   rsi,rsi
   1400030b4:	je     0x1400030cb
   1400030b6:	mov    rax,QWORD PTR [rsi]
   1400030b9:	mov    rbx,QWORD PTR [rax+0x10]
   1400030bd:	mov    rcx,rbx
   1400030c0:	call   QWORD PTR [rip+0x10ea]        # 0x1400041b0
   1400030c6:	mov    rcx,rsi
   1400030c9:	call   rbx
   1400030cb:	mov    eax,edi
   1400030cd:	mov    rcx,QWORD PTR [rbp+0x17]
   1400030d1:	xor    rcx,rsp
   1400030d4:	call   0x140003490
   1400030d9:	mov    rbx,QWORD PTR [rsp+0x108]
   1400030e1:	add    rsp,0xb0
   1400030e8:	pop    r15
   1400030ea:	pop    r14
   1400030ec:	pop    r13
   1400030ee:	pop    r12
   1400030f0:	pop    rdi
   1400030f1:	pop    rsi
   1400030f2:	pop    rbp
   1400030f3:	ret    
   1400030f4:	int3   
   1400030f5:	int3   
   1400030f6:	int3   
   1400030f7:	int3   
   1400030f8:	int3   
   1400030f9:	int3   
   1400030fa:	int3   
   1400030fb:	int3   
   1400030fc:	jmp    0x1400034b4
   140003101:	int3   
   140003102:	int3   
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	mov    QWORD PTR [rsp+0x8],rbx
   14000310d:	push   rdi
   14000310e:	sub    rsp,0x20
   140003112:	mov    rdi,rcx
   140003115:	jmp    0x140003126
   140003117:	mov    rcx,rdi
   14000311a:	call   0x1400034cc
   14000311f:	test   eax,eax
   140003121:	je     0x140003133
   140003123:	mov    rcx,rdi
   140003126:	call   0x1400034c0
   14000312b:	mov    rbx,rax
   14000312e:	test   rax,rax
   140003131:	je     0x140003117
   140003133:	mov    rax,rbx
   140003136:	mov    rbx,QWORD PTR [rsp+0x30]
   14000313b:	add    rsp,0x20
   14000313f:	pop    rdi
   140003140:	ret    
   140003141:	int3   
   140003142:	int3   
   140003143:	int3   
   140003144:	int3   
   140003145:	int3   
   140003146:	int3   
   140003147:	int3   
   140003148:	int3   
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	sub    rsp,0x28
   140003154:	mov    eax,0x5a4d
   140003159:	cmp    WORD PTR [rip+0xffffffffffffcea0],ax        # 0x140000000
   140003160:	je     0x140003166
   140003162:	xor    eax,eax
   140003164:	jmp    0x1400031b5
   140003166:	movsxd rcx,DWORD PTR [rip+0xffffffffffffcecf]        # 0x14000003c
   14000316d:	lea    rax,[rip+0xffffffffffffce8c]        # 0x140000000
   140003174:	add    rcx,rax
   140003177:	cmp    DWORD PTR [rcx],0x4550
   14000317d:	jne    0x140003162
   14000317f:	movzx  eax,WORD PTR [rcx+0x18]
   140003183:	cmp    eax,0x10b
   140003188:	je     0x1400031a4
   14000318a:	cmp    eax,0x20b
   14000318f:	jne    0x140003162
   140003191:	xor    eax,eax
   140003193:	cmp    DWORD PTR [rcx+0x84],0xe
   14000319a:	jbe    0x1400031b5
   14000319c:	cmp    DWORD PTR [rcx+0xf8],eax
   1400031a2:	jmp    0x1400031b2
   1400031a4:	xor    eax,eax
   1400031a6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400031aa:	jbe    0x1400031b5
   1400031ac:	cmp    DWORD PTR [rcx+0xe8],eax
   1400031b2:	setne  al
   1400031b5:	mov    ecx,0x1
   1400031ba:	mov    DWORD PTR [rip+0x72e0],eax        # 0x14000a4a0
   1400031c0:	call   0x1400035a8
   1400031c5:	mov    ecx,eax
   1400031c7:	call   QWORD PTR [rip+0xf23]        # 0x1400040f0
   1400031cd:	mov    rcx,QWORD PTR [rip+0xf54]        # 0x140004128
   1400031d4:	or     rax,0xffffffffffffffff
   1400031d8:	mov    QWORD PTR [rip+0x7991],rax        # 0x14000ab70
   1400031df:	mov    QWORD PTR [rip+0x7992],rax        # 0x14000ab78
   1400031e6:	mov    eax,DWORD PTR [rip+0x72c8]        # 0x14000a4b4
   1400031ec:	mov    DWORD PTR [rcx],eax
   1400031ee:	mov    rcx,QWORD PTR [rip+0xeeb]        # 0x1400040e0
   1400031f5:	mov    eax,DWORD PTR [rip+0x72ad]        # 0x14000a4a8
   1400031fb:	mov    DWORD PTR [rcx],eax
   1400031fd:	call   0x140003600
   140003202:	cmp    DWORD PTR [rip+0x5df7],0x0        # 0x140009000
   140003209:	jne    0x140003218
   14000320b:	lea    rcx,[rip+0x3ee]        # 0x140003600
   140003212:	call   QWORD PTR [rip+0xf08]        # 0x140004120
   140003218:	xor    eax,eax
   14000321a:	add    rsp,0x28
   14000321e:	ret    
   14000321f:	int3   
   140003220:	int3   
   140003221:	int3   
   140003222:	int3   
   140003223:	int3   
   140003224:	int3   
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	sub    rsp,0x38
   140003234:	mov    eax,DWORD PTR [rip+0x7276]        # 0x14000a4b0
   14000323a:	lea    r8,[rip+0x7257]        # 0x14000a498
   140003241:	mov    r9d,DWORD PTR [rip+0x7264]        # 0x14000a4ac
   140003248:	lea    rdx,[rip+0x7241]        # 0x14000a490
   14000324f:	mov    DWORD PTR [rip+0x724f],eax        # 0x14000a4a4
   140003255:	lea    rcx,[rip+0x722c]        # 0x14000a488
   14000325c:	lea    rax,[rip+0x7241]        # 0x14000a4a4
   140003263:	mov    QWORD PTR [rsp+0x20],rax
   140003268:	call   QWORD PTR [rip+0xe8a]        # 0x1400040f8
   14000326e:	mov    DWORD PTR [rip+0x7218],eax        # 0x14000a48c
   140003274:	add    rsp,0x38
   140003278:	ret    
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    rax,rsp
   140003283:	mov    QWORD PTR [rax+0x8],rbx
   140003287:	mov    QWORD PTR [rax+0x10],rsi
   14000328b:	mov    QWORD PTR [rax+0x18],rdi
   14000328f:	mov    QWORD PTR [rax+0x20],r12
   140003293:	push   r14
   140003295:	sub    rsp,0x30
   140003299:	mov    rax,QWORD PTR gs:0x30
   1400032a2:	mov    rbx,QWORD PTR [rax+0x8]
   1400032a6:	xor    r14d,r14d
   1400032a9:	xor    eax,eax
   1400032ab:	lock cmpxchg QWORD PTR [rip+0x78cc],rbx        # 0x14000ab80
   1400032b4:	je     0x1400032d2
   1400032b6:	cmp    rax,rbx
   1400032b9:	jne    0x1400032c5
   1400032bb:	mov    ebx,0x1
   1400032c0:	mov    r14d,ebx
   1400032c3:	jmp    0x1400032d7
   1400032c5:	mov    ecx,0x3e8
   1400032ca:	call   QWORD PTR [rip+0xd90]        # 0x140004060
   1400032d0:	jmp    0x1400032a9
   1400032d2:	mov    ebx,0x1
   1400032d7:	mov    eax,DWORD PTR [rip+0x78ab]        # 0x14000ab88
   1400032dd:	cmp    eax,ebx
   1400032df:	jne    0x1400032ed
   1400032e1:	mov    ecx,0x1f
   1400032e6:	call   0x1400035f4
   1400032eb:	jmp    0x140003356
   1400032ed:	mov    eax,DWORD PTR [rip+0x7895]        # 0x14000ab88
   1400032f3:	test   eax,eax
   1400032f5:	jne    0x140003350
   1400032f7:	mov    DWORD PTR [rip+0x788b],ebx        # 0x14000ab88
   1400032fd:	lea    r12,[rip+0xeec]        # 0x1400041f0
   140003304:	lea    rdi,[rip+0xecd]        # 0x1400041d8
   14000330b:	mov    QWORD PTR [rsp+0x28],rdi
   140003310:	mov    DWORD PTR [rsp+0x20],eax
   140003314:	cmp    rdi,r12
   140003317:	jae    0x140003342
   140003319:	test   eax,eax
   14000331b:	jne    0x140003346
   14000331d:	mov    rsi,QWORD PTR [rdi]
   140003320:	test   rsi,rsi
   140003323:	je     0x140003337
   140003325:	mov    rcx,rsi
   140003328:	mov    rax,QWORD PTR [rip+0xe81]        # 0x1400041b0
   14000332f:	call   rax
   140003331:	call   rsi
   140003333:	mov    DWORD PTR [rsp+0x20],eax
   140003337:	add    rdi,0x8
   14000333b:	mov    QWORD PTR [rsp+0x28],rdi
   140003340:	jmp    0x140003314
   140003342:	test   eax,eax
   140003344:	je     0x140003356
   140003346:	mov    eax,0xff
   14000334b:	jmp    0x140003437
   140003350:	mov    DWORD PTR [rip+0x712e],ebx        # 0x14000a484
   140003356:	mov    eax,DWORD PTR [rip+0x782c]        # 0x14000ab88
   14000335c:	cmp    eax,ebx
   14000335e:	jne    0x14000337d
   140003360:	lea    rdx,[rip+0xe69]        # 0x1400041d0
   140003367:	lea    rcx,[rip+0xe52]        # 0x1400041c0
   14000336e:	call   0x1400037ca
   140003373:	mov    DWORD PTR [rip+0x780b],0x2        # 0x14000ab88
   14000337d:	test   r14d,r14d
   140003380:	jne    0x14000338b
   140003382:	xor    eax,eax
   140003384:	xchg   QWORD PTR [rip+0x77f5],rax        # 0x14000ab80
   14000338b:	cmp    QWORD PTR [rip+0x77fd],0x0        # 0x14000ab90
   140003393:	je     0x1400033c3
   140003395:	lea    rcx,[rip+0x77f4]        # 0x14000ab90
   14000339c:	call   0x140003660
   1400033a1:	test   eax,eax
   1400033a3:	je     0x1400033c3
   1400033a5:	mov    rbx,QWORD PTR [rip+0x77e4]        # 0x14000ab90
   1400033ac:	mov    rcx,rbx
   1400033af:	mov    rax,QWORD PTR [rip+0xdfa]        # 0x1400041b0
   1400033b6:	call   rax
   1400033b8:	xor    r8d,r8d
   1400033bb:	lea    edx,[r8+0x2]
   1400033bf:	xor    ecx,ecx
   1400033c1:	call   rbx
   1400033c3:	mov    r8,QWORD PTR [rip+0x70ce]        # 0x14000a498
   1400033ca:	mov    rdx,QWORD PTR [rip+0x70bf]        # 0x14000a490
   1400033d1:	mov    ecx,DWORD PTR [rip+0x70b1]        # 0x14000a488
   1400033d7:	call   0x14000128c
   1400033dc:	mov    DWORD PTR [rip+0x709e],eax        # 0x14000a480
   1400033e2:	cmp    DWORD PTR [rip+0x70b7],0x0        # 0x14000a4a0
   1400033e9:	jne    0x1400033f3
   1400033eb:	mov    ecx,eax
   1400033ed:	call   QWORD PTR [rip+0xcf5]        # 0x1400040e8
   1400033f3:	cmp    DWORD PTR [rip+0x708a],0x0        # 0x14000a484
   1400033fa:	jne    0x140003408
   1400033fc:	call   QWORD PTR [rip+0xcd6]        # 0x1400040d8
   140003402:	mov    eax,DWORD PTR [rip+0x7078]        # 0x14000a480
   140003408:	jmp    0x140003437
   14000340a:	mov    DWORD PTR [rip+0x7070],eax        # 0x14000a480
   140003410:	cmp    DWORD PTR [rip+0x7089],0x0        # 0x14000a4a0
   140003417:	jne    0x140003422
   140003419:	mov    ecx,eax
   14000341b:	call   QWORD PTR [rip+0xd0f]        # 0x140004130
   140003421:	int3   
   140003422:	cmp    DWORD PTR [rip+0x705b],0x0        # 0x14000a484
   140003429:	jne    0x140003437
   14000342b:	call   QWORD PTR [rip+0xca7]        # 0x1400040d8
   140003431:	mov    eax,DWORD PTR [rip+0x7049]        # 0x14000a480
   140003437:	mov    rbx,QWORD PTR [rsp+0x40]
   14000343c:	mov    rsi,QWORD PTR [rsp+0x48]
   140003441:	mov    rdi,QWORD PTR [rsp+0x50]
   140003446:	mov    r12,QWORD PTR [rsp+0x58]
   14000344b:	add    rsp,0x30
   14000344f:	pop    r14
   140003451:	ret    
   140003452:	int3   
   140003453:	int3   
   140003454:	int3   
   140003455:	int3   
   140003456:	int3   
   140003457:	int3   
   140003458:	int3   
   140003459:	int3   
   14000345a:	int3   
   14000345b:	int3   
   14000345c:	int3   
   14000345d:	int3   
   14000345e:	int3   
   14000345f:	int3   
   140003460:	sub    rsp,0x28
   140003464:	call   0x1400036f4
   140003469:	add    rsp,0x28
   14000346d:	jmp    0x140003280
   140003472:	int3   
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	int3   
   140003481:	int3   
   140003482:	int3   
   140003483:	int3   
   140003484:	int3   
   140003485:	int3   
   140003486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003490:	cmp    rcx,QWORD PTR [rip+0x5b71]        # 0x140009008
   140003497:	jne    0x1400034a9
   140003499:	rol    rcx,0x10
   14000349d:	test   cx,0xffff
   1400034a2:	jne    0x1400034a5
   1400034a4:	ret    
   1400034a5:	ror    rcx,0x10
   1400034a9:	jmp    0x140003840
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	int3   
   1400034b1:	int3   
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	jmp    QWORD PTR [rip+0xc86]        # 0x140004140
   1400034ba:	int3   
   1400034bb:	int3   
   1400034bc:	int3   
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	jmp    QWORD PTR [rip+0xc52]        # 0x140004118
   1400034c6:	int3   
   1400034c7:	int3   
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	jmp    QWORD PTR [rip+0xc3e]        # 0x140004110
   1400034d2:	int3   
   1400034d3:	int3   
   1400034d4:	int3   
   1400034d5:	int3   
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	sub    rsp,0x28
   1400034e4:	mov    rax,QWORD PTR [rcx]
   1400034e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400034ed:	jne    0x140003512
   1400034ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400034f3:	jne    0x140003512
   1400034f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400034f8:	lea    eax,[rcx-0x19930520]
   1400034fe:	cmp    eax,0x2
   140003501:	jbe    0x14000350b
   140003503:	cmp    ecx,0x1994000
   140003509:	jne    0x140003512
   14000350b:	call   QWORD PTR [rip+0xbbf]        # 0x1400040d0
   140003511:	int3   
   140003512:	xor    eax,eax
   140003514:	add    rsp,0x28
   140003518:	ret    
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	sub    rsp,0x28
   140003524:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400034e0
   14000352b:	call   QWORD PTR [rip+0xb27]        # 0x140004058
   140003531:	xor    eax,eax
   140003533:	add    rsp,0x28
   140003537:	ret    
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	jmp    QWORD PTR [rip+0xbc4]        # 0x140004108
   140003544:	int3   
   140003545:	int3   
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	sub    rsp,0x18
   140003550:	xor    edx,edx
   140003552:	lea    rax,[rcx-0x1]
   140003556:	cmp    rax,0xfffffffffffffffd
   14000355a:	ja     0x140003598
   14000355c:	mov    eax,0x5a4d
   140003561:	cmp    WORD PTR [rcx],ax
   140003564:	jne    0x140003590
   140003566:	cmp    DWORD PTR [rcx+0x3c],edx
   140003569:	jl     0x140003590
   14000356b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140003572:	jae    0x140003590
   140003574:	movsxd rax,DWORD PTR [rcx+0x3c]
   140003578:	add    rax,rcx
   14000357b:	mov    QWORD PTR [rsp],rax
   14000357f:	cmp    DWORD PTR [rax],0x4550
   140003585:	cmovne rax,rdx
   140003589:	mov    rdx,rax
   14000358c:	mov    QWORD PTR [rsp],rax
   140003590:	jmp    0x140003598
   140003592:	xor    edx,edx
   140003594:	mov    QWORD PTR [rsp],rdx
   140003598:	mov    rax,rdx
   14000359b:	add    rsp,0x18
   14000359f:	ret    
   1400035a0:	int3   
   1400035a1:	int3   
   1400035a2:	int3   
   1400035a3:	int3   
   1400035a4:	int3   
   1400035a5:	int3   
   1400035a6:	int3   
   1400035a7:	int3   
   1400035a8:	rex push rbx
   1400035aa:	sub    rsp,0x20
   1400035ae:	mov    ebx,ecx
   1400035b0:	xor    ecx,ecx
   1400035b2:	call   QWORD PTR [rip+0xa98]        # 0x140004050
   1400035b8:	test   rax,rax
   1400035bb:	je     0x1400035e5
   1400035bd:	mov    rcx,rax
   1400035c0:	call   0x14000354c
   1400035c5:	test   rax,rax
   1400035c8:	je     0x1400035e5
   1400035ca:	mov    ecx,0x2
   1400035cf:	cmp    WORD PTR [rax+0x5c],cx
   1400035d3:	jne    0x1400035d9
   1400035d5:	mov    eax,ecx
   1400035d7:	jmp    0x1400035e7
   1400035d9:	cmp    WORD PTR [rax+0x5c],0x3
   1400035de:	mov    eax,0x1
   1400035e3:	je     0x1400035e7
   1400035e5:	mov    eax,ebx
   1400035e7:	add    rsp,0x20
   1400035eb:	pop    rbx
   1400035ec:	ret    
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	int3   
   1400035f1:	int3   
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	jmp    QWORD PTR [rip+0xb06]        # 0x140004100
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	xor    eax,eax
   140003602:	ret    
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003614:	xor    r9d,r9d
   140003617:	add    r8,rcx
   14000361a:	mov    r10,rdx
   14000361d:	movzx  eax,WORD PTR [r8+0x14]
   140003622:	movzx  r11d,WORD PTR [r8+0x6]
   140003627:	add    rax,0x18
   14000362b:	add    rax,r8
   14000362e:	test   r11d,r11d
   140003631:	je     0x140003651
   140003633:	mov    edx,DWORD PTR [rax+0xc]
   140003636:	cmp    r10,rdx
   140003639:	jb     0x140003645
   14000363b:	mov    ecx,DWORD PTR [rax+0x8]
   14000363e:	add    ecx,edx
   140003640:	cmp    r10,rcx
   140003643:	jb     0x140003653
   140003645:	inc    r9d
   140003648:	add    rax,0x28
   14000364c:	cmp    r9d,r11d
   14000364f:	jb     0x140003633
   140003651:	xor    eax,eax
   140003653:	ret    
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x8],rbx
   140003665:	push   rdi
   140003666:	sub    rsp,0x20
   14000366a:	mov    rbx,rcx
   14000366d:	lea    rdi,[rip+0xffffffffffffc98c]        # 0x140000000
   140003674:	mov    rcx,rdi
   140003677:	call   0x1400036c0
   14000367c:	test   eax,eax
   14000367e:	je     0x1400036a2
   140003680:	sub    rbx,rdi
   140003683:	mov    rdx,rbx
   140003686:	mov    rcx,rdi
   140003689:	call   0x140003610
   14000368e:	test   rax,rax
   140003691:	je     0x1400036a2
   140003693:	mov    eax,DWORD PTR [rax+0x24]
   140003696:	shr    eax,0x1f
   140003699:	not    eax
   14000369b:	and    eax,0x1
   14000369e:	jmp    0x1400036a2
   1400036a0:	xor    eax,eax
   1400036a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036a7:	add    rsp,0x20
   1400036ab:	pop    rdi
   1400036ac:	ret    
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	int3   
   1400036b1:	int3   
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    rax,rcx
   1400036c3:	mov    ecx,0x5a4d
   1400036c8:	cmp    WORD PTR [rax],cx
   1400036cb:	je     0x1400036d0
   1400036cd:	xor    eax,eax
   1400036cf:	ret    
   1400036d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400036d4:	add    rcx,rax
   1400036d7:	xor    eax,eax
   1400036d9:	cmp    DWORD PTR [rcx],0x4550
   1400036df:	jne    0x1400036ed
   1400036e1:	mov    edx,0x20b
   1400036e6:	cmp    WORD PTR [rcx+0x18],dx
   1400036ea:	sete   al
   1400036ed:	ret    
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	int3   
   1400036f1:	int3   
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400036f9:	push   rbp
   1400036fa:	mov    rbp,rsp
   1400036fd:	sub    rsp,0x20
   140003701:	and    QWORD PTR [rbp+0x18],0x0
   140003706:	movabs rbx,0x2b992ddfa232
   140003710:	mov    rax,QWORD PTR [rip+0x58f1]        # 0x140009008
   140003717:	cmp    rax,rbx
   14000371a:	jne    0x1400037af
   140003720:	lea    rcx,[rbp+0x18]
   140003724:	call   QWORD PTR [rip+0x94e]        # 0x140004078
   14000372a:	mov    rax,QWORD PTR [rbp+0x18]
   14000372e:	mov    QWORD PTR [rbp+0x10],rax
   140003732:	call   QWORD PTR [rip+0x930]        # 0x140004068
   140003738:	mov    eax,eax
   14000373a:	xor    QWORD PTR [rbp+0x10],rax
   14000373e:	call   QWORD PTR [rip+0x92c]        # 0x140004070
   140003744:	mov    eax,eax
   140003746:	xor    QWORD PTR [rbp+0x10],rax
   14000374a:	call   QWORD PTR [rip+0x930]        # 0x140004080
   140003750:	mov    eax,eax
   140003752:	shl    rax,0x18
   140003756:	xor    QWORD PTR [rbp+0x10],rax
   14000375a:	call   QWORD PTR [rip+0x920]        # 0x140004080
   140003760:	mov    eax,eax
   140003762:	lea    rcx,[rbp+0x10]
   140003766:	xor    rax,QWORD PTR [rbp+0x10]
   14000376a:	xor    rax,rcx
   14000376d:	lea    rcx,[rbp+0x20]
   140003771:	mov    QWORD PTR [rbp+0x10],rax
   140003775:	call   QWORD PTR [rip+0x935]        # 0x1400040b0
   14000377b:	mov    eax,DWORD PTR [rbp+0x20]
   14000377e:	movabs rcx,0xffffffffffff
   140003788:	shl    rax,0x20
   14000378c:	xor    rax,QWORD PTR [rbp+0x20]
   140003790:	xor    rax,QWORD PTR [rbp+0x10]
   140003794:	and    rax,rcx
   140003797:	movabs rcx,0x2b992ddfa233
   1400037a1:	cmp    rax,rbx
   1400037a4:	cmove  rax,rcx
   1400037a8:	mov    QWORD PTR [rip+0x5859],rax        # 0x140009008
   1400037af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400037b4:	not    rax
   1400037b7:	mov    QWORD PTR [rip+0x5852],rax        # 0x140009010
   1400037be:	add    rsp,0x20
   1400037c2:	pop    rbp
   1400037c3:	ret    
   1400037c4:	int3   
   1400037c5:	int3   
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	int3   
   1400037c9:	int3   
   1400037ca:	jmp    QWORD PTR [rip+0x968]        # 0x140004138
   1400037d0:	int3   
   1400037d1:	int3   
   1400037d2:	int3   
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	jmp    QWORD PTR [rip+0x97c]        # 0x140004158
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	int3   
   1400037e1:	int3   
   1400037e2:	int3   
   1400037e3:	int3   
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	ret    0x0
   1400037f3:	int3   
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	rex push rbx
   1400037fe:	sub    rsp,0x20
   140003802:	mov    rbx,rcx
   140003805:	xor    ecx,ecx
   140003807:	call   QWORD PTR [rip+0x84b]        # 0x140004058
   14000380d:	mov    rcx,rbx
   140003810:	call   QWORD PTR [rip+0x88a]        # 0x1400040a0
   140003816:	call   QWORD PTR [rip+0x7e4]        # 0x140004000
   14000381c:	mov    rcx,rax
   14000381f:	mov    edx,0xc0000409
   140003824:	add    rsp,0x20
   140003828:	pop    rbx
   140003829:	rex.W jmp QWORD PTR [rip+0x878]        # 0x1400040a8
   140003830:	int3   
   140003831:	int3   
   140003832:	int3   
   140003833:	int3   
   140003834:	int3   
   140003835:	int3   
   140003836:	int3   
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	mov    QWORD PTR [rsp+0x8],rcx
   140003845:	sub    rsp,0x88
   14000384c:	lea    rcx,[rip+0x6d0d]        # 0x14000a560
   140003853:	call   QWORD PTR [rip+0x82f]        # 0x140004088
   140003859:	mov    rax,QWORD PTR [rip+0x6df8]        # 0x14000a658
   140003860:	mov    QWORD PTR [rsp+0x48],rax
   140003865:	xor    r8d,r8d
   140003868:	lea    rdx,[rsp+0x50]
   14000386d:	mov    rcx,QWORD PTR [rsp+0x48]
   140003872:	call   QWORD PTR [rip+0x818]        # 0x140004090
   140003878:	mov    QWORD PTR [rsp+0x40],rax
   14000387d:	cmp    QWORD PTR [rsp+0x40],0x0
   140003883:	je     0x1400038c7
   140003885:	mov    QWORD PTR [rsp+0x38],0x0
   14000388e:	lea    rax,[rsp+0x58]
   140003893:	mov    QWORD PTR [rsp+0x30],rax
   140003898:	lea    rax,[rsp+0x60]
   14000389d:	mov    QWORD PTR [rsp+0x28],rax
   1400038a2:	lea    rax,[rip+0x6cb7]        # 0x14000a560
   1400038a9:	mov    QWORD PTR [rsp+0x20],rax
   1400038ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400038b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400038b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400038bd:	xor    ecx,ecx
   1400038bf:	call   QWORD PTR [rip+0x7d3]        # 0x140004098
   1400038c5:	jmp    0x1400038ea
   1400038c7:	mov    rax,QWORD PTR [rip+0x6d2a]        # 0x14000a5f8
   1400038ce:	mov    rax,QWORD PTR [rax]
   1400038d1:	mov    QWORD PTR [rip+0x6d80],rax        # 0x14000a658
   1400038d8:	mov    rax,QWORD PTR [rip+0x6d19]        # 0x14000a5f8
   1400038df:	add    rax,0x8
   1400038e3:	mov    QWORD PTR [rip+0x6d0e],rax        # 0x14000a5f8
   1400038ea:	mov    rax,QWORD PTR [rip+0x6d67]        # 0x14000a658
   1400038f1:	mov    QWORD PTR [rip+0x6bd8],rax        # 0x14000a4d0
   1400038f8:	mov    rax,QWORD PTR [rsp+0x90]
   140003900:	mov    QWORD PTR [rip+0x6cd9],rax        # 0x14000a5e0
   140003907:	mov    DWORD PTR [rip+0x6baf],0xc0000409        # 0x14000a4c0
   140003911:	mov    DWORD PTR [rip+0x6ba9],0x1        # 0x14000a4c4
   14000391b:	mov    DWORD PTR [rip+0x6bb3],0x3        # 0x14000a4d8
   140003925:	mov    eax,0x8
   14000392a:	imul   rax,rax,0x0
   14000392e:	lea    rcx,[rip+0x6bab]        # 0x14000a4e0
   140003935:	mov    QWORD PTR [rcx+rax*1],0x2
   14000393d:	mov    eax,0x8
   140003942:	imul   rax,rax,0x1
   140003946:	lea    rcx,[rip+0x6b93]        # 0x14000a4e0
   14000394d:	mov    rdx,QWORD PTR [rip+0x56b4]        # 0x140009008
   140003954:	mov    QWORD PTR [rcx+rax*1],rdx
   140003958:	mov    eax,0x8
   14000395d:	imul   rax,rax,0x2
   140003961:	lea    rcx,[rip+0x6b78]        # 0x14000a4e0
   140003968:	mov    rdx,QWORD PTR [rip+0x56a1]        # 0x140009010
   14000396f:	mov    QWORD PTR [rcx+rax*1],rdx
   140003973:	mov    eax,0x8
   140003978:	imul   rax,rax,0x0
   14000397c:	mov    rcx,QWORD PTR [rip+0x5685]        # 0x140009008
   140003983:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003988:	mov    eax,0x8
   14000398d:	imul   rax,rax,0x1
   140003991:	mov    rcx,QWORD PTR [rip+0x5678]        # 0x140009010
   140003998:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000399d:	lea    rcx,[rip+0x89c]        # 0x140004240
   1400039a4:	call   0x1400037fc
   1400039a9:	add    rsp,0x88
   1400039b0:	ret    
   1400039b1:	int3   
   1400039b2:	int3   
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	int3   
   1400039c1:	int3   
   1400039c2:	int3   
   1400039c3:	int3   
   1400039c4:	int3   
   1400039c5:	int3   
   1400039c6:	int3   
   1400039c7:	int3   
   1400039c8:	sub    rsp,0x28
   1400039cc:	mov    r8,QWORD PTR [r9+0x38]
   1400039d0:	mov    rcx,rdx
   1400039d3:	mov    rdx,r9
   1400039d6:	call   0x1400039ec
   1400039db:	mov    eax,0x1
   1400039e0:	add    rsp,0x28
   1400039e4:	ret    
   1400039e5:	int3   
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	rex push rbx
   1400039ee:	sub    rsp,0x20
   1400039f2:	mov    r11d,DWORD PTR [r8]
   1400039f5:	mov    rbx,rdx
   1400039f8:	and    r11d,0xfffffff8
   1400039fc:	mov    r9,rcx
   1400039ff:	test   BYTE PTR [r8],0x4
   140003a03:	mov    r10,rcx
   140003a06:	je     0x140003a1b
   140003a08:	mov    eax,DWORD PTR [r8+0x8]
   140003a0c:	movsxd r10,DWORD PTR [r8+0x4]
   140003a10:	neg    eax
   140003a12:	add    r10,rcx
   140003a15:	movsxd rcx,eax
   140003a18:	and    r10,rcx
   140003a1b:	movsxd rax,r11d
   140003a1e:	mov    rdx,QWORD PTR [rax+r10*1]
   140003a22:	mov    rax,QWORD PTR [rbx+0x10]
   140003a26:	mov    ecx,DWORD PTR [rax+0x8]
   140003a29:	add    rcx,QWORD PTR [rbx+0x8]
   140003a2d:	test   BYTE PTR [rcx+0x3],0xf
   140003a31:	je     0x140003a3f
   140003a33:	movzx  eax,BYTE PTR [rcx+0x3]
   140003a37:	and    eax,0xfffffff0
   140003a3a:	cdqe   
   140003a3c:	add    r9,rax
   140003a3f:	xor    r9,rdx
   140003a42:	mov    rcx,r9
   140003a45:	add    rsp,0x20
   140003a49:	pop    rbx
   140003a4a:	jmp    0x140003490
   140003a4f:	int3   
   140003a50:	int3   
   140003a51:	int3   
   140003a52:	int3   
   140003a53:	int3   
   140003a54:	int3   
   140003a55:	int3   
   140003a56:	jmp    QWORD PTR [rip+0x704]        # 0x140004160
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	int3   
   140003a61:	int3   
   140003a62:	int3   
   140003a63:	int3   
   140003a64:	int3   
   140003a65:	int3   
   140003a66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003a70:	jmp    rax
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	int3   
   140003a81:	int3   
   140003a82:	int3   
   140003a83:	int3   
   140003a84:	int3   
   140003a85:	int3   
   140003a86:	rex push rbp
   140003a88:	sub    rsp,0x20
   140003a8c:	mov    rbp,rdx
   140003a8f:	mov    rax,QWORD PTR [rcx]
   140003a92:	mov    rdx,rcx
   140003a95:	mov    ecx,DWORD PTR [rax]
   140003a97:	call   0x14000353e
   140003a9c:	nop
   140003a9d:	add    rsp,0x20
   140003aa1:	pop    rbp
   140003aa2:	ret    
   140003aa3:	int3   
   140003aa4:	int3   
   140003aa5:	int3   
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	rex push rbp
   140003ab2:	sub    rsp,0x20
   140003ab6:	mov    rbp,rdx
   140003ab9:	mov    rax,QWORD PTR [rcx]
   140003abc:	xor    ecx,ecx
   140003abe:	cmp    DWORD PTR [rax],0xc0000005
   140003ac4:	sete   cl
   140003ac7:	mov    eax,ecx
   140003ac9:	add    rsp,0x20
   140003acd:	pop    rbp
   140003ace:	ret    
   140003acf:	int3   

Disassembly of section .rdata:

0000000140004000 <.rdata>:
   140004000:	push   rax
   140004001:	add    BYTE PTR [rax],0x0
   140004004:	add    BYTE PTR [rax],al
   140004006:	add    BYTE PTR [rax],al
   140004008:	add    BYTE PTR fs:[rax],0x0
   14000400c:	add    BYTE PTR [rax],al
   14000400e:	add    BYTE PTR [rax],al
   140004010:	js     0x140003f92
   140004012:	add    BYTE PTR [rax],al
   140004014:	add    BYTE PTR [rax],al
   140004016:	add    BYTE PTR [rax],al
   140004018:	test   BYTE PTR [rax+0x0],al
   14000401e:	add    BYTE PTR [rax],al
   140004020:	nop
   140004021:	add    BYTE PTR [rax],0x0
   140004024:	add    BYTE PTR [rax],al
   140004026:	add    BYTE PTR [rax],al
   140004028:	sahf   
   140004029:	add    BYTE PTR [rax],0x0
   14000402c:	add    BYTE PTR [rax],al
   14000402e:	add    BYTE PTR [rax],al
   140004030:	scas   al,BYTE PTR es:[rdi]
   140004031:	add    BYTE PTR [rax],0x0
   140004034:	add    BYTE PTR [rax],al
   140004036:	add    BYTE PTR [rax],al
   140004038:	mov    esi,0x80
   14000403d:	add    BYTE PTR [rax],al
   14000403f:	add    dh,cl
   140004041:	add    BYTE PTR [rax],0x0
   140004044:	add    BYTE PTR [rax],al
   140004046:	add    BYTE PTR [rax],al
   140004048:	loopne 0x140003fca
   14000404a:	add    BYTE PTR [rax],al
   14000404c:	add    BYTE PTR [rax],al
   14000404e:	add    BYTE PTR [rax],al
   140004050:	retf   0x82
   140004053:	add    BYTE PTR [rax],al
   140004055:	add    BYTE PTR [rax],al
   140004057:	add    BYTE PTR [rdx+rax*4+0x0],ch
   14000405e:	add    BYTE PTR [rax],al
   140004060:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004061:	(bad)  
   140004062:	add    BYTE PTR [rax],al
   140004064:	add    BYTE PTR [rax],al
   140004066:	add    BYTE PTR [rax],al
   140004068:	clc    
   140004069:	(bad)  
   14000406a:	add    BYTE PTR [rax],al
   14000406c:	add    BYTE PTR [rax],al
   14000406e:	add    BYTE PTR [rax],al
   140004070:	(bad)  
   140004071:	add    DWORD PTR [rax],0x0
   140004074:	add    BYTE PTR [rax],al
   140004076:	add    BYTE PTR [rax],al
   140004078:	and    al,0x83
   14000407a:	add    BYTE PTR [rax],al
   14000407c:	add    BYTE PTR [rax],al
   14000407e:	add    BYTE PTR [rax],al
   140004080:	add    DWORD PTR ds:[rax],0x0
   140004084:	add    BYTE PTR [rax],al
   140004086:	add    BYTE PTR [rax],al
   140004088:	rex.WRX add QWORD PTR [rax],0x0
   14000408c:	add    BYTE PTR [rax],al
   14000408e:	add    BYTE PTR [rax],al
   140004090:	(bad)  
   140004092:	add    BYTE PTR [rax],al
   140004094:	add    BYTE PTR [rax],al
   140004096:	add    BYTE PTR [rax],al
   140004098:	jl     0x14000401d
   14000409a:	add    BYTE PTR [rax],al
   14000409c:	add    BYTE PTR [rax],al
   14000409e:	add    BYTE PTR [rax],al
   1400040a0:	nop
   1400040a1:	add    DWORD PTR [rax],0x0
   1400040a4:	add    BYTE PTR [rax],al
   1400040a6:	add    BYTE PTR [rax],al
   1400040a8:	lods   al,BYTE PTR ds:[rsi]
   1400040a9:	add    DWORD PTR [rax],0x0
   1400040ac:	add    BYTE PTR [rax],al
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	fiadd  WORD PTR [rdx+0x0]
	...
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	xchg   BYTE PTR [rdx+0x0],al
	...
   1400040ce:	add    BYTE PTR [rax],al
   1400040d0:	call   0x140004156
   1400040d5:	add    BYTE PTR [rax],al
   1400040d7:	add    BYTE PTR [rcx+rax*4+0x0],al
   1400040de:	add    BYTE PTR [rax],al
   1400040e0:	rol    BYTE PTR [rcx+0x0],1
   1400040e6:	add    BYTE PTR [rax],al
   1400040e8:	je     0x14000406b
   1400040ea:	add    BYTE PTR [rax],al
   1400040ec:	add    BYTE PTR [rax],al
   1400040ee:	add    BYTE PTR [rax],al
   1400040f0:	(bad)  
   1400040f2:	add    BYTE PTR [rax],al
   1400040f4:	add    BYTE PTR [rax],al
   1400040f6:	add    BYTE PTR [rax],al
   1400040f8:	push   rax
   1400040f9:	add    DWORD PTR [rax],0x0
   1400040ff:	add    BYTE PTR [rdx-0x7f],al
   140004102:	add    BYTE PTR [rax],al
   140004104:	add    BYTE PTR [rax],al
   140004106:	add    BYTE PTR [rax],al
   140004108:	xor    al,0x81
   14000410a:	add    BYTE PTR [rax],al
   14000410c:	add    BYTE PTR [rax],al
   14000410e:	add    BYTE PTR [rax],al
   140004110:	sub    BYTE PTR [rcx+0x0],al
   140004116:	add    BYTE PTR [rax],al
   140004118:	(bad)  
   140004119:	add    DWORD PTR [rax],0x0
   14000411f:	add    BYTE PTR [rsi+0x81],cl
   140004125:	add    BYTE PTR [rax],al
   140004127:	add    dh,al
   140004129:	add    DWORD PTR [rax],0x0
   14000412f:	add    BYTE PTR [rcx+rax*4+0x0],bh
   140004133:	add    BYTE PTR [rax],al
   140004135:	add    BYTE PTR [rax],al
   140004137:	add    BYTE PTR [rdx+0x81],ah
   14000413d:	add    BYTE PTR [rax],al
   14000413f:	add    BYTE PTR [rsi],dl
   140004141:	add    DWORD PTR [rax],0x0
   140004147:	add    BYTE PTR [rax],cl
   140004149:	add    DWORD PTR [rax],0x0
   14000414f:	add    ah,bh
   140004151:	add    BYTE PTR [rax],0x0
   140004154:	add    BYTE PTR [rax],al
   140004156:	add    BYTE PTR [rax],al
   140004158:	scas   al,BYTE PTR es:[rdi]
   140004159:	add    DWORD PTR [rax],0x0
   14000415f:	add    al,al
   140004161:	add    DWORD PTR [rax],0x0
	...
   140004170:	push   0x82
   140004175:	add    BYTE PTR [rax],al
   140004177:	add    BYTE PTR [rsi-0x7e],dl
   14000417a:	add    BYTE PTR [rax],al
   14000417c:	add    BYTE PTR [rax],al
   14000417e:	add    BYTE PTR [rax],al
   140004180:	rex.R (bad) 
   140004182:	add    BYTE PTR [rax],al
   140004184:	add    BYTE PTR [rax],al
   140004186:	add    BYTE PTR [rax],al
   140004188:	xor    al,BYTE PTR [rdx+0x0]
   14000418e:	add    BYTE PTR [rax],al
   140004190:	and    al,BYTE PTR [rdx+0x0]
   140004196:	add    BYTE PTR [rax],al
   140004198:	adc    BYTE PTR [rdx+0x0],al
   14000419e:	add    BYTE PTR [rax],al
   1400041a0:	cld    
   1400041a1:	add    DWORD PTR [rax],0x0
	...
   1400041af:	add    al,dh
   1400041b1:	(bad)  
   1400041b2:	add    BYTE PTR [rax+0x1],al
   1400041b5:	add    BYTE PTR [rax],al
   1400041b7:	add    BYTE PTR [rax+0x3a],dh
   1400041ba:	add    BYTE PTR [rax+0x1],al
	...
   1400041c5:	add    BYTE PTR [rax],al
   1400041c7:	add    BYTE PTR [rax],dh
   1400041c9:	xor    al,BYTE PTR [rax]
   1400041cb:	rex add DWORD PTR [rax],eax
	...
   1400041de:	add    BYTE PTR [rax],al
   1400041e0:	push   rax
   1400041e1:	xor    DWORD PTR [rax],eax
   1400041e3:	rex add DWORD PTR [rax],eax
   1400041e6:	add    BYTE PTR [rax],al
   1400041e8:	and    BYTE PTR [rip+0x14000],dh        # 0x1400181ee
	...
   1400041f6:	add    BYTE PTR [rax],al
   1400041f8:	adc    BYTE PTR [rax],dl
   1400041fa:	add    BYTE PTR [rax],al
   1400041fc:	xor    BYTE PTR [rax],dl
   1400041fe:	add    BYTE PTR [rax],al
   140004200:	nop
   140004201:	adc    BYTE PTR [rax],al
   140004203:	add    BYTE PTR [rax+0x11],dl
   140004206:	add    BYTE PTR [rax],al
   140004208:	nop
   140004209:	adc    DWORD PTR [rax],eax
   14000420b:	add    al,dl
   14000420d:	adc    DWORD PTR [rax],eax
   14000420f:	add    al,ah
   140004211:	adc    DWORD PTR [rax],eax
   140004213:	add    BYTE PTR [rax+0x12],dl
   140004216:	add    BYTE PTR [rax],al
   140004218:	push   rax
   140004219:	xor    DWORD PTR [rax],eax
   14000421b:	add    BYTE PTR [rax],dh
   14000421d:	xor    al,BYTE PTR [rax]
   14000421f:	add    BYTE PTR [rax+0x34],ah
   140004222:	add    BYTE PTR [rax],al
   140004224:	loopne 0x14000425a
   140004226:	add    BYTE PTR [rax],al
   140004228:	and    BYTE PTR [rip+0x36000000],dh        # 0x17600422e
   14000422e:	add    BYTE PTR [rax],al
   140004230:	lock (bad) 
   140004232:	add    BYTE PTR [rax],al
   140004234:	cmp    BYTE PTR [rax],al
	...
   14000423f:	add    al,al
   140004241:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004242:	add    BYTE PTR [rax+0x1],al
   140004245:	add    BYTE PTR [rax],al
   140004247:	add    BYTE PTR [rax-0x5b],ah
   14000424a:	add    BYTE PTR [rax+0x1],al
   14000424d:	add    BYTE PTR [rax],al
   14000424f:	add    BYTE PTR [rax+rax*1+0x64],ah
   140004253:	add    BYTE PTR [rdi+0x0],ch
   140004256:	add    BYTE PTR fs:[rcx+0x0],ch
   14000425a:	(bad)  
   14000425b:	add    BYTE PTR [rdi+0x0],ah
   14000425e:	add    BYTE PTR cs:[rax+0x0],bh
   140004262:	ins    DWORD PTR es:[rdi],dx
   140004263:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000426f:	add    BYTE PTR [rax+0x0],dl
   140004272:	jb     0x140004274
   140004274:	outs   dx,DWORD PTR ds:[rsi]
   140004275:	add    BYTE PTR [rsi+0x0],dh
   140004278:	imul   eax,DWORD PTR [rax],0x650064
   14000427e:	jb     0x140004280
   140004280:	pop    rsp
   140004281:	add    BYTE PTR [rbp+0x0],cl
   140004284:	imul   eax,DWORD PTR [rax],0x720063
   14000428a:	outs   dx,DWORD PTR ds:[rsi]
   14000428b:	add    BYTE PTR [rbx+0x0],dh
   14000428e:	outs   dx,DWORD PTR ds:[rsi]
   14000428f:	add    BYTE PTR [rsi+0x0],ah
   140004292:	je     0x140004294
   140004294:	add    BYTE PTR cs:[rdx+0x0],al
   140004298:	(bad)  
   140004299:	add    BYTE PTR [rbx+0x0],dh
   14000429c:	add    BYTE PTR gs:[rsi],ch
   14000429f:	add    BYTE PTR [rax+rax*1+0x65],al
   1400042a3:	add    BYTE PTR [rsi+0x0],dh
   1400042a6:	push   rcx
   1400042a7:	add    BYTE PTR [rbp+0x0],dh
   1400042aa:	add    BYTE PTR gs:[rdx+0x0],dh
   1400042ae:	jns    0x1400042b0
   1400042b0:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   1400042b4:	push   0x0
   1400042b6:	add    BYTE PTR gs:[rbx+0x0],ah
   1400042ba:	je     0x1400042bc
   1400042bc:	jae    0x1400042be
   1400042be:	add    BYTE PTR [rax],al
   1400042c0:	add    BYTE PTR [rax+rax*1+0x4f],r8b
   1400042c5:	add    BYTE PTR [rax+rax*1+0x69],al
   1400042c9:	add    BYTE PTR [rcx+0x0],ah
   1400042cc:	add    BYTE PTR [eax],al
   1400042cf:	add    BYTE PTR [rip+0x6f00],ch        # 0x14000b1d5
   1400042d5:	add    BYTE PTR [rax],al
   1400042d7:	add    BYTE PTR [rdi],ch
   1400042d9:	add    BYTE PTR [rdi+0x0],ch
   1400042dc:	add    BYTE PTR [rax],al
   1400042de:	add    BYTE PTR [rax],al
   1400042e0:	add    BYTE PTR [rax+rax*1+0x4f],r8b
   1400042e5:	add    BYTE PTR [rax],al
   1400042e7:	add    BYTE PTR [rcx+0x0],ch
   1400042ea:	outs   dx,BYTE PTR ds:[rsi]
   1400042eb:	add    BYTE PTR [rbx+0x0],dh
   1400042ee:	je     0x1400042f0
   1400042f0:	(bad)  
   1400042f1:	add    BYTE PTR [rsi+0x0],ch
   1400042f4:	movsxd eax,DWORD PTR [rax]
   1400042f6:	add    BYTE PTR gs:[rcx+0x0],cl
   1400042fa:	add    BYTE PTR fs:[rax],al
   1400042fd:	add    BYTE PTR [rax],al
   1400042ff:	add    BYTE PTR [rax+rax*1+0x46],al
   140004303:	add    BYTE PTR [rdi+0x0],cl
   140004306:	add    BYTE PTR [rax],al
   140004308:	add    BYTE PTR [rcx+0x0],r9b
   14000430c:	rex.WRXB add BYTE PTR [r8],r8b
   14000430f:	add    BYTE PTR [rax],dh
   140004311:	cmp    dh,BYTE PTR [rbx+0xc]
   140004314:	sbb    al,0x2a
   140004316:	(bad)  
   140004317:	adc    DWORD PTR [rbp+0xaa00e5],ebp
   14000431d:	rex.R ja 0x14000435d
   140004320:	mov    ah,bh
   140004322:	jns    0x140004396
   140004324:	popf   
   140004325:	jo     0x1400042bc
   140004327:	mov    sil,0x3d
   14000432a:	imul   edi,esi,0x30900d4b
	...
   140004338:	rol    BYTE PTR [rax],0x0
   14000433b:	add    BYTE PTR [rax],al
   14000433d:	add    BYTE PTR [rax],al
   14000433f:	rex.RX or al,0x0
   140004342:	add    BYTE PTR [rax],al
   140004344:	add    BYTE PTR [rax],al
   140004346:	add    BYTE PTR [rax],al
   140004348:	rol    BYTE PTR [rax],0x0
   14000434b:	add    BYTE PTR [rax],al
   14000434d:	add    BYTE PTR [rax],al
   14000434f:	rex.RX xchg eax,eax
   140004351:	adc    BYTE PTR [rax],al
   140004353:	rex add DWORD PTR [rax],eax
   140004356:	add    BYTE PTR [rax],al
   140004358:	adc    BYTE PTR [rax],dl
   14000435a:	add    BYTE PTR [rax+0x1],al
   14000435d:	add    BYTE PTR [rax],al
   14000435f:	add    BYTE PTR [rax],dh
   140004361:	adc    BYTE PTR [rax],al
   140004363:	rex add DWORD PTR [rax],eax
   140004366:	add    BYTE PTR [rax],al
   140004368:	push   rax
   140004369:	adc    DWORD PTR [rax],eax
   14000436b:	rex add DWORD PTR [rax],eax
   14000436e:	add    BYTE PTR [rax],al
   140004370:	nop
   140004371:	adc    DWORD PTR [rax],eax
   140004373:	rex add DWORD PTR [rax],eax
   140004376:	add    BYTE PTR [rax],al
   140004378:	loopne 0x14000438b
   14000437a:	add    BYTE PTR [rax+0x1],al
   14000437d:	add    BYTE PTR [rax],al
   14000437f:	add    al,dl
   140004381:	adc    DWORD PTR [rax],eax
   140004383:	rex add DWORD PTR [rax],eax
   140004386:	add    BYTE PTR [rax],al
   140004388:	rcl    BYTE PTR [rcx],1
   14000438a:	add    BYTE PTR [rax+0x1],al
   14000438d:	add    BYTE PTR [rax],al
   14000438f:	add    al,dl
   140004391:	adc    DWORD PTR [rax],eax
   140004393:	rex add DWORD PTR [rax],eax
   140004396:	add    BYTE PTR [rax],al
   140004398:	rcl    BYTE PTR [rcx],1
   14000439a:	add    BYTE PTR [rax+0x1],al
   14000439d:	add    BYTE PTR [rax],al
   14000439f:	add    al,dl
   1400043a1:	adc    DWORD PTR [rax],eax
   1400043a3:	rex add DWORD PTR [rax],eax
   1400043a6:	add    BYTE PTR [rax],al
   1400043a8:	rcl    BYTE PTR [rcx],1
   1400043aa:	add    BYTE PTR [rax+0x1],al
   1400043ad:	add    BYTE PTR [rax],al
   1400043af:	add    BYTE PTR [rax+0x12],dl
   1400043b2:	add    BYTE PTR [rax+0x1],al
   1400043b5:	add    BYTE PTR [rax],al
   1400043b7:	add    al,dl
   1400043b9:	adc    DWORD PTR [rax],eax
   1400043bb:	rex add DWORD PTR [rax],eax
   1400043be:	add    BYTE PTR [rax],al
   1400043c0:	xchg   ebp,eax
   1400043c1:	fsub   DWORD PTR [rbx-0x5d7aa310]
   1400043c7:	rex.X xchg esp,eax
   1400043c9:	lea    ebp,[rdi]
   1400043cb:	xchg   edi,eax
   1400043cc:	(bad)  
   1400043cd:	push   rax
   1400043ce:	in     al,dx
   1400043cf:	mov    cl,0xec
   1400043d1:	loop   0x1400043fe
   1400043d3:	(bad)  
   1400043d4:	nop
   1400043d5:	mov    gs,WORD PTR [rax*2-0x7054654e]
   1400043dc:	icebp  
   1400043dd:	shl    BYTE PTR [rcx-0x4],0x70
   1400043e1:	fwait
   1400043e2:	stc    
   1400043e3:	rex.WRB
   1400043e4:	rex.W loope 0x140004419
   1400043e7:	rex.R mov al,0x4
   1400043ea:	rex.WR sahf 
   1400043ec:	jmp    0x140004441
   1400043ee:	pop    rdx
   1400043ef:	pop    rsi
   1400043f0:	push   rax
   1400043f1:	add    BYTE PTR [rbx+0x0],cl
   1400043f4:	add    BYTE PTR [r9+0x0],r11b
   1400043f8:	pop    rdi
   1400043f9:	add    BYTE PTR [rdx+0x0],al
   1400043fc:	rex.WR add BYTE PTR [rbp+0x0],r10b
   140004400:	add    BYTE PTR [r8+rax*1+0x4f],r10b
   140004405:	add    BYTE PTR [rdi+0x0],cl
   140004408:	push   rsp
   140004409:	add    BYTE PTR [rax+0x0],cl
   14000440c:	pop    rdi
   14000440d:	add    BYTE PTR [rax+rax*1+0x45],al
   140004411:	add    BYTE PTR [rsi+0x0],dl
   140004414:	rex.WB add BYTE PTR [r11+0x0],al
   140004418:	add    BYTE PTR [r15+0x0],r11b
   14000441c:	rex.WB add BYTE PTR [r14+0x0],cl
   140004420:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140004424:	pop    rdi
   140004425:	add    BYTE PTR [rcx+0x0],al
   140004428:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   14000442d:	add    BYTE PTR [rbp+0x0],ah
   140004430:	jae    0x140004432
   140004432:	jae    0x140004434
	...
   140004440:	push   rax
   140004441:	add    BYTE PTR [rbx+0x0],cl
   140004444:	add    BYTE PTR [r9+0x0],r11b
   140004448:	pop    rdi
   140004449:	add    BYTE PTR [rdx+0x0],al
   14000444c:	rex.WR add BYTE PTR [rbp+0x0],r10b
   140004450:	add    BYTE PTR [r8+rax*1+0x4f],r10b
   140004455:	add    BYTE PTR [rdi+0x0],cl
   140004458:	push   rsp
   140004459:	add    BYTE PTR [rax+0x0],cl
   14000445c:	pop    rdi
   14000445d:	add    BYTE PTR [rax+rax*1+0x45],al
   140004461:	add    BYTE PTR [rsi+0x0],dl
   140004464:	rex.WB add BYTE PTR [r11+0x0],al
   140004468:	add    BYTE PTR [r15+0x0],r11b
   14000446c:	rex.WB add BYTE PTR [r14+0x0],cl
   140004470:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140004474:	pop    rdi
   140004475:	add    BYTE PTR [rbp+0x0],dh
   140004478:	ins    BYTE PTR es:[rdi],dx
   140004479:	add    BYTE PTR [rbx+0x0],al
   14000447c:	ins    BYTE PTR es:[rdi],dx
   14000447d:	add    BYTE PTR [rcx+0x0],ah
   140004480:	jae    0x140004482
   140004482:	jae    0x140004484
   140004484:	outs   dx,DWORD PTR ds:[rsi]
   140004485:	add    BYTE PTR [rsi+0x0],ah
   140004488:	add    BYTE PTR [rbp+0x0],r12b
   14000448c:	jbe    0x14000448e
   14000448e:	imul   eax,DWORD PTR [rax],0x650063
	...
   1400044a0:	push   rax
   1400044a1:	add    BYTE PTR [rbx+0x0],cl
   1400044a4:	add    BYTE PTR [r9+0x0],r11b
   1400044a8:	pop    rdi
   1400044a9:	add    BYTE PTR [rdx+0x0],al
   1400044ac:	rex.WR add BYTE PTR [rbp+0x0],r10b
   1400044b0:	add    BYTE PTR [r8+rax*1+0x4f],r10b
   1400044b5:	add    BYTE PTR [rdi+0x0],cl
   1400044b8:	push   rsp
   1400044b9:	add    BYTE PTR [rax+0x0],cl
   1400044bc:	pop    rdi
   1400044bd:	add    BYTE PTR [rax+rax*1+0x45],al
   1400044c1:	add    BYTE PTR [rsi+0x0],dl
   1400044c4:	rex.WB add BYTE PTR [r11+0x0],al
   1400044c8:	add    BYTE PTR [r15+0x0],r11b
   1400044cc:	rex.WB add BYTE PTR [r14+0x0],cl
   1400044d0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400044d4:	pop    rdi
   1400044d5:	add    BYTE PTR [rsi+0x0],ah
   1400044d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400044dc:	outs   dx,BYTE PTR ds:[rsi]
   1400044dd:	add    BYTE PTR [rsi+0x0],ch
   1400044e0:	add    BYTE PTR gs:[rbx+0x0],ah
   1400044e4:	je     0x1400044e6
   1400044e6:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400044eb:	add    BYTE PTR [rax],al
   1400044ed:	add    BYTE PTR [rax],al
   1400044ef:	add    BYTE PTR [rax+0x0],dl
   1400044f2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400044f6:	pop    rcx
   1400044f7:	add    BYTE PTR [rdi+0x0],bl
   1400044fa:	add    BYTE PTR [rax+r8*1+0x55],cl
   1400044ff:	add    BYTE PTR [rbp+0x0],al
   140004502:	push   rsp
   140004503:	add    BYTE PTR [rdi+0x0],cl
   140004506:	rex.WRXB add BYTE PTR [r8+r8*1+0x48],r10b
   14000450b:	add    BYTE PTR [rdi+0x0],bl
   14000450e:	add    BYTE PTR [rbp+0x0],r8b
   140004512:	push   rsi
   140004513:	add    BYTE PTR [rcx+0x0],cl
   140004516:	rex.XB add BYTE PTR [r13+0x0],al
   14000451a:	pop    rdi
   14000451b:	add    BYTE PTR [rcx+0x0],cl
   14000451e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140004522:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   140004526:	data16 add BYTE PTR [rdx+0x0],dl
   14000452a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000452e:	add    BYTE PTR gs:[rbp+0x0],ch
   140004532:	(bad)  
   140004533:	add    BYTE PTR [rbp+0x0],ah
   140004536:	jb     0x140004538
   140004538:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000453d:	add    BYTE PTR [rax],al
   14000453f:	add    BYTE PTR [rax+0x0],dl
   140004542:	rex.WXB add BYTE PTR [r13+0x0],al
   140004546:	pop    rcx
   140004547:	add    BYTE PTR [rdi+0x0],bl
   14000454a:	add    BYTE PTR [rax+r8*1+0x55],cl
   14000454f:	add    BYTE PTR [rbp+0x0],al
   140004552:	push   rsp
   140004553:	add    BYTE PTR [rdi+0x0],cl
   140004556:	rex.WRXB add BYTE PTR [r8+r8*1+0x48],r10b
   14000455b:	add    BYTE PTR [rdi+0x0],bl
   14000455e:	add    BYTE PTR [rbp+0x0],r8b
   140004562:	push   rsi
   140004563:	add    BYTE PTR [rcx+0x0],cl
   140004566:	rex.XB add BYTE PTR [r13+0x0],al
   14000456a:	pop    rdi
   14000456b:	add    BYTE PTR [rcx+0x0],cl
   14000456e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140004572:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   140004576:	data16 add BYTE PTR [rcx+0x0],al
   14000457a:	jne    0x14000457c
   14000457c:	je     0x14000457e
   14000457e:	push   0x6e006500
   140004583:	add    BYTE PTR [rax+rax*1+0x69],dh
   140004587:	add    BYTE PTR [rbx+0x0],ah
   14000458a:	(bad)  
   14000458b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000458f:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000459f:	add    BYTE PTR [rax+0x0],dl
   1400045a2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400045a6:	pop    rcx
   1400045a7:	add    BYTE PTR [rdi+0x0],bl
   1400045aa:	add    BYTE PTR [rax+r8*1+0x55],cl
   1400045af:	add    BYTE PTR [rbp+0x0],al
   1400045b2:	push   rsp
   1400045b3:	add    BYTE PTR [rdi+0x0],cl
   1400045b6:	rex.WRXB add BYTE PTR [r8+r8*1+0x48],r10b
   1400045bb:	add    BYTE PTR [rdi+0x0],bl
   1400045be:	add    BYTE PTR [rbp+0x0],r8b
   1400045c2:	push   rsi
   1400045c3:	add    BYTE PTR [rcx+0x0],cl
   1400045c6:	rex.XB add BYTE PTR [r13+0x0],al
   1400045ca:	pop    rdi
   1400045cb:	add    BYTE PTR [rcx+0x0],cl
   1400045ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400045d2:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   1400045d6:	jae    0x1400045d8
   1400045d8:	je     0x1400045da
   1400045da:	rex.WR add BYTE PTR [rcx+0x0],r12b
   1400045de:	jae    0x1400045e0
   1400045e0:	je     0x1400045e2
   1400045e2:	push   rbx
   1400045e3:	add    BYTE PTR [rbp+0x0],ah
   1400045e6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400045ea:	add    BYTE PTR [rax],al
   1400045ec:	add    BYTE PTR [rax],al
   1400045ee:	add    BYTE PTR [rax],al
   1400045f0:	push   rax
   1400045f1:	add    BYTE PTR [rbx+0x0],cl
   1400045f4:	add    BYTE PTR [r9+0x0],r11b
   1400045f8:	pop    rdi
   1400045f9:	add    BYTE PTR [rdx+0x0],al
   1400045fc:	rex.WR add BYTE PTR [rbp+0x0],r10b
   140004600:	add    BYTE PTR [r8+rax*1+0x4f],r10b
   140004605:	add    BYTE PTR [rdi+0x0],cl
   140004608:	push   rsp
   140004609:	add    BYTE PTR [rax+0x0],cl
   14000460c:	pop    rdi
   14000460d:	add    BYTE PTR [rax+rax*1+0x45],al
   140004611:	add    BYTE PTR [rsi+0x0],dl
   140004614:	rex.WB add BYTE PTR [r11+0x0],al
   140004618:	add    BYTE PTR [r15+0x0],r11b
   14000461c:	rex.WB add BYTE PTR [r14+0x0],cl
   140004620:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140004624:	pop    rdi
   140004625:	add    BYTE PTR [rbx+0x0],dh
   140004628:	je     0x14000462a
   14000462a:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000462e:	jae    0x140004630
   140004630:	je     0x140004632
   140004632:	push   rbp
   140004633:	add    BYTE PTR [rbx+0x0],dh
   140004636:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000463b:	add    BYTE PTR [rax],al
   14000463d:	add    BYTE PTR [rax],al
   14000463f:	add    BYTE PTR [rax+0x0],dl
   140004642:	rex.WXB add BYTE PTR [r13+0x0],al
   140004646:	pop    rcx
   140004647:	add    BYTE PTR [rdi+0x0],bl
   14000464a:	add    BYTE PTR [rax+r8*1+0x55],cl
   14000464f:	add    BYTE PTR [rbp+0x0],al
   140004652:	push   rsp
   140004653:	add    BYTE PTR [rdi+0x0],cl
   140004656:	rex.WRXB add BYTE PTR [r8+r8*1+0x48],r10b
   14000465b:	add    BYTE PTR [rdi+0x0],bl
   14000465e:	add    BYTE PTR [rbp+0x0],r8b
   140004662:	push   rsi
   140004663:	add    BYTE PTR [rcx+0x0],cl
   140004666:	rex.XB add BYTE PTR [r13+0x0],al
   14000466a:	pop    rdi
   14000466b:	add    BYTE PTR [rcx+0x0],cl
   14000466e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140004672:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   140004676:	jae    0x140004678
   140004678:	jp     0x14000467a
   14000467a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000467e:	ins    DWORD PTR es:[rdi],dx
   14000467f:	add    BYTE PTR [rbp+0x0],ah
	...
   14000468e:	add    BYTE PTR [rax],al
   140004690:	push   rax
   140004691:	add    BYTE PTR [rbx+0x0],cl
   140004694:	add    BYTE PTR [r9+0x0],r11b
   140004698:	pop    rdi
   140004699:	add    BYTE PTR [rdx+0x0],al
   14000469c:	rex.WR add BYTE PTR [rbp+0x0],r10b
   1400046a0:	add    BYTE PTR [r8+rax*1+0x4f],r10b
   1400046a5:	add    BYTE PTR [rdi+0x0],cl
   1400046a8:	push   rsp
   1400046a9:	add    BYTE PTR [rax+0x0],cl
   1400046ac:	pop    rdi
   1400046ad:	add    BYTE PTR [rax+rax*1+0x45],al
   1400046b1:	add    BYTE PTR [rsi+0x0],dl
   1400046b4:	rex.WB add BYTE PTR [r11+0x0],al
   1400046b8:	add    BYTE PTR [r15+0x0],r11b
   1400046bc:	rex.WB add BYTE PTR [r14+0x0],cl
   1400046c0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400046c4:	pop    rdi
   1400046c5:	add    BYTE PTR [rdx+0x0],dl
   1400046c8:	push   rbx
   1400046c9:	add    BYTE PTR [rbx+0x0],dl
   1400046cc:	rex.WB add BYTE PTR [r8],al
   1400046cf:	add    BYTE PTR [rax+0x0],dl
   1400046d2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400046d6:	pop    rcx
   1400046d7:	add    BYTE PTR [rdi+0x0],bl
   1400046da:	add    BYTE PTR [rbp+0x0],r12b
   1400046de:	jbe    0x1400046e0
   1400046e0:	imul   eax,DWORD PTR [rax],0x650063
   1400046e6:	pop    rdi
   1400046e7:	add    BYTE PTR [rcx+0x0],al
   1400046ea:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   1400046ef:	add    BYTE PTR [rbp+0x0],ah
   1400046f2:	jae    0x1400046f4
   1400046f4:	jae    0x1400046f6
   1400046f6:	add    BYTE PTR [rax],al
   1400046f8:	push   rax
   1400046f9:	add    BYTE PTR [rbx+0x0],cl
   1400046fc:	add    BYTE PTR [r9+0x0],r11b
   140004700:	pop    rdi
   140004701:	add    BYTE PTR [rax+rax*1+0x65],al
   140004705:	add    BYTE PTR [rsi+0x0],dh
   140004708:	imul   eax,DWORD PTR [rax],0x650063
   14000470e:	pop    rdi
   14000470f:	add    BYTE PTR [rdx+0x0],al
   140004712:	(bad)  
   140004713:	add    BYTE PTR [rbx+0x0],dh
   140004716:	add    BYTE PTR gs:[rbx+0x0],al
   14000471a:	outs   dx,DWORD PTR ds:[rsi]
   14000471b:	add    BYTE PTR [rsi+0x0],ch
   14000471e:	je     0x140004720
   140004720:	(bad)  
   140004721:	add    BYTE PTR [rcx+0x0],ch
   140004724:	outs   dx,BYTE PTR ds:[rsi]
   140004725:	add    BYTE PTR [rbp+0x0],ah
   140004728:	jb     0x14000472a
   14000472a:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000472f:	add    BYTE PTR [rax+0x0],dl
   140004732:	rex.WXB add BYTE PTR [r13+0x0],al
   140004736:	pop    rcx
   140004737:	add    BYTE PTR [rdi+0x0],bl
   14000473a:	add    BYTE PTR [rbp+0x0],r12b
   14000473e:	jbe    0x140004740
   140004740:	imul   eax,DWORD PTR [rax],0x650063
   140004746:	pop    rdi
   140004747:	add    BYTE PTR [rdx+0x0],al
   14000474a:	rex.WB add BYTE PTR [r15+0x0],cl
   14000474e:	push   rbx
   14000474f:	add    BYTE PTR [rsi+0x0],dl
   140004752:	add    BYTE PTR gs:[rdx+0x0],dh
   140004756:	jae    0x140004758
   140004758:	imul   eax,DWORD PTR [rax],0x6e006f
   14000475e:	add    BYTE PTR [rax],al
   140004760:	push   rax
   140004761:	add    BYTE PTR [rbx+0x0],cl
   140004764:	add    BYTE PTR [r9+0x0],r11b
   140004768:	pop    rdi
   140004769:	add    BYTE PTR [rax+rax*1+0x65],al
   14000476d:	add    BYTE PTR [rsi+0x0],dh
   140004770:	imul   eax,DWORD PTR [rax],0x650063
   140004776:	pop    rdi
   140004777:	add    BYTE PTR [rdx+0x0],al
   14000477a:	jne    0x14000477c
   14000477c:	jae    0x14000477e
   14000477e:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140004782:	ins    DWORD PTR es:[rdi],dx
   140004783:	add    BYTE PTR [rdx+0x0],ah
   140004786:	add    BYTE PTR gs:[rdx+0x0],dh
   14000478a:	add    BYTE PTR [rax],al
   14000478c:	add    BYTE PTR [rax],al
   14000478e:	add    BYTE PTR [rax],al
   140004790:	push   rax
   140004791:	add    BYTE PTR [rbx+0x0],cl
   140004794:	add    BYTE PTR [r9+0x0],r11b
   140004798:	pop    rdi
   140004799:	add    BYTE PTR [rax+rax*1+0x65],al
   14000479d:	add    BYTE PTR [rsi+0x0],dh
   1400047a0:	imul   eax,DWORD PTR [rax],0x650063
   1400047a6:	pop    rdi
   1400047a7:	add    BYTE PTR [rdx+0x0],al
   1400047aa:	jne    0x1400047ac
   1400047ac:	jae    0x1400047ae
   1400047ae:	push   rsp
   1400047af:	add    BYTE PTR [rcx+0x0],bh
   1400047b2:	jo     0x1400047b4
   1400047b4:	add    BYTE PTR gs:[rdi+0x0],al
   1400047b8:	jne    0x1400047ba
   1400047ba:	imul   eax,DWORD PTR [rax],0x64
   1400047c0:	push   rax
   1400047c1:	add    BYTE PTR [rbx+0x0],cl
   1400047c4:	add    BYTE PTR [r9+0x0],r11b
   1400047c8:	pop    rdi
   1400047c9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400047cd:	add    BYTE PTR [rsi+0x0],dh
   1400047d0:	imul   eax,DWORD PTR [rax],0x650063
   1400047d6:	pop    rdi
   1400047d7:	add    BYTE PTR [rbx+0x0],al
   1400047da:	(bad)  
   1400047db:	add    BYTE PTR [rax+0x0],dh
   1400047de:	(bad)  
   1400047df:	add    BYTE PTR [rdx+0x0],ah
   1400047e2:	imul   eax,DWORD PTR [rax],0x69006c
   1400047e8:	je     0x1400047ea
   1400047ea:	imul   eax,DWORD PTR [rax],0x730065
	...
   1400047f8:	push   rax
   1400047f9:	add    BYTE PTR [rbx+0x0],cl
   1400047fc:	add    BYTE PTR [r9+0x0],r11b
   140004800:	pop    rdi
   140004801:	add    BYTE PTR [rax+rax*1+0x65],al
   140004805:	add    BYTE PTR [rsi+0x0],dh
   140004808:	imul   eax,DWORD PTR [rax],0x650063
   14000480e:	pop    rdi
   14000480f:	add    BYTE PTR [rbx+0x0],al
   140004812:	push   0x72006100
   140004817:	add    BYTE PTR [rcx+0x0],ah
   14000481a:	movsxd eax,DWORD PTR [rax]
   14000481c:	je     0x14000481e
   14000481e:	add    BYTE PTR gs:[rdx+0x0],dh
   140004822:	imul   eax,DWORD PTR [rax],0x740073
   140004828:	imul   eax,DWORD PTR [rax],0x730063
   14000482e:	add    BYTE PTR [rax],al
   140004830:	push   rax
   140004831:	add    BYTE PTR [rbx+0x0],cl
   140004834:	add    BYTE PTR [r9+0x0],r11b
   140004838:	pop    rdi
   140004839:	add    BYTE PTR [rax+rax*1+0x65],al
   14000483d:	add    BYTE PTR [rsi+0x0],dh
   140004840:	imul   eax,DWORD PTR [rax],0x650063
   140004846:	pop    rdi
   140004847:	add    BYTE PTR [rbx+0x0],al
   14000484a:	ins    BYTE PTR es:[rdi],dx
   14000484b:	add    BYTE PTR [rcx+0x0],ah
   14000484e:	jae    0x140004850
   140004850:	jae    0x140004852
   140004852:	add    BYTE PTR [rax],al
   140004854:	add    BYTE PTR [rax],al
   140004856:	add    BYTE PTR [rax],al
   140004858:	push   rax
   140004859:	add    BYTE PTR [rbx+0x0],cl
   14000485c:	add    BYTE PTR [r9+0x0],r11b
   140004860:	pop    rdi
   140004861:	add    BYTE PTR [rax+rax*1+0x65],al
   140004865:	add    BYTE PTR [rsi+0x0],dh
   140004868:	imul   eax,DWORD PTR [rax],0x650063
   14000486e:	pop    rdi
   14000486f:	add    BYTE PTR [rbx+0x0],al
   140004872:	ins    BYTE PTR es:[rdi],dx
   140004873:	add    BYTE PTR [rcx+0x0],ah
   140004876:	jae    0x140004878
   140004878:	jae    0x14000487a
   14000487a:	rex.RXB add BYTE PTR [r13+0x0],r14b
   14000487e:	imul   eax,DWORD PTR [rax],0x64
   140004884:	add    BYTE PTR [rax],al
   140004886:	add    BYTE PTR [rax],al
   140004888:	push   rax
   140004889:	add    BYTE PTR [rbx+0x0],cl
   14000488c:	add    BYTE PTR [r9+0x0],r11b
   140004890:	pop    rdi
   140004891:	add    BYTE PTR [rax+rax*1+0x65],al
   140004895:	add    BYTE PTR [rsi+0x0],dh
   140004898:	imul   eax,DWORD PTR [rax],0x650063
   14000489e:	pop    rdi
   14000489f:	add    BYTE PTR [rbx+0x0],al
   1400048a2:	outs   dx,DWORD PTR ds:[rsi]
   1400048a3:	add    BYTE PTR [rbp+0x0],ch
   1400048a6:	jo     0x1400048a8
   1400048a8:	(bad)  
   1400048a9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400048ad:	add    BYTE PTR [rdx+0x0],ah
   1400048b0:	ins    BYTE PTR es:[rdi],dx
   1400048b1:	add    BYTE PTR [rbp+0x0],ah
   1400048b4:	rex.WB add BYTE PTR [r8+rax*1+0x73],spl
   1400048b9:	add    BYTE PTR [rax],al
   1400048bb:	add    BYTE PTR [rax],al
   1400048bd:	add    BYTE PTR [rax],al
   1400048bf:	add    BYTE PTR [rax+0x0],dl
   1400048c2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400048c6:	pop    rcx
   1400048c7:	add    BYTE PTR [rdi+0x0],bl
   1400048ca:	add    BYTE PTR [rbp+0x0],r12b
   1400048ce:	jbe    0x1400048d0
   1400048d0:	imul   eax,DWORD PTR [rax],0x650063
   1400048d6:	pop    rdi
   1400048d7:	add    BYTE PTR [rbx+0x0],al
   1400048da:	outs   dx,DWORD PTR ds:[rsi]
   1400048db:	add    BYTE PTR [rsi+0x0],ch
   1400048de:	data16 add BYTE PTR [rcx+0x0],ch
   1400048e2:	add    BYTE PTR [esi+0x0],al
   1400048e6:	ins    BYTE PTR es:[rdi],dx
   1400048e7:	add    BYTE PTR [rcx+0x0],ah
   1400048ea:	add    BYTE PTR [ebx+0x0],dh
   1400048ee:	add    BYTE PTR [rax],al
   1400048f0:	push   rax
   1400048f1:	add    BYTE PTR [rbx+0x0],cl
   1400048f4:	add    BYTE PTR [r9+0x0],r11b
   1400048f8:	pop    rdi
   1400048f9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400048fd:	add    BYTE PTR [rsi+0x0],dh
   140004900:	imul   eax,DWORD PTR [rax],0x650063
   140004906:	pop    rdi
   140004907:	add    BYTE PTR [rbx+0x0],al
   14000490a:	outs   dx,DWORD PTR ds:[rsi]
   14000490b:	add    BYTE PTR [rsi+0x0],ch
   14000490e:	je     0x140004910
   140004910:	(bad)  
   140004911:	add    BYTE PTR [rcx+0x0],ch
   140004914:	outs   dx,BYTE PTR ds:[rsi]
   140004915:	add    BYTE PTR [rbp+0x0],ah
   140004918:	jb     0x14000491a
   14000491a:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000491f:	add    BYTE PTR [rax+0x0],dl
   140004922:	rex.WXB add BYTE PTR [r13+0x0],al
   140004926:	pop    rcx
   140004927:	add    BYTE PTR [rdi+0x0],bl
   14000492a:	add    BYTE PTR [rbp+0x0],r12b
   14000492e:	jbe    0x140004930
   140004930:	imul   eax,DWORD PTR [rax],0x650063
   140004936:	pop    rdi
   140004937:	add    BYTE PTR [rax+rax*1+0x65],al
   14000493b:	add    BYTE PTR [rsi+0x0],dh
   14000493e:	imul   eax,DWORD PTR [rax],0x650063
   140004944:	add    BYTE PTR [rbp+0x0],r12b
   140004948:	jae    0x14000494a
   14000494a:	movsxd eax,DWORD PTR [rax]
   14000494c:	add    BYTE PTR [rax],al
   14000494e:	add    BYTE PTR [rax],al
   140004950:	push   rax
   140004951:	add    BYTE PTR [rbx+0x0],cl
   140004954:	add    BYTE PTR [r9+0x0],r11b
   140004958:	pop    rdi
   140004959:	add    BYTE PTR [rax+rax*1+0x65],al
   14000495d:	add    BYTE PTR [rsi+0x0],dh
   140004960:	imul   eax,DWORD PTR [rax],0x650063
   140004966:	pop    rdi
   140004967:	add    BYTE PTR [rax+rax*1+0x65],al
   14000496b:	add    BYTE PTR [rsi+0x0],dh
   14000496e:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140004972:	add    BYTE PTR fs:[rbp+0x0],ah
   140004976:	push   rbx
   140004977:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000497b:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000497f:	add    BYTE PTR [rbx+0x0],dh
   140004982:	add    BYTE PTR [rax],al
   140004984:	add    BYTE PTR [rax],al
   140004986:	add    BYTE PTR [rax],al
   140004988:	push   rax
   140004989:	add    BYTE PTR [rbx+0x0],cl
   14000498c:	add    BYTE PTR [r9+0x0],r11b
   140004990:	pop    rdi
   140004991:	add    BYTE PTR [rax+rax*1+0x65],al
   140004995:	add    BYTE PTR [rsi+0x0],dh
   140004998:	imul   eax,DWORD PTR [rax],0x650063
   14000499e:	pop    rdi
   14000499f:	add    BYTE PTR [rax+rax*1+0x72],al
   1400049a3:	add    BYTE PTR [rcx+0x0],ch
   1400049a6:	jbe    0x1400049a8
   1400049a8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400049ac:	add    BYTE PTR [rax],al
   1400049ae:	add    BYTE PTR [rax],al
   1400049b0:	push   rax
   1400049b1:	add    BYTE PTR [rbx+0x0],cl
   1400049b4:	add    BYTE PTR [r9+0x0],r11b
   1400049b8:	pop    rdi
   1400049b9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400049bd:	add    BYTE PTR [rsi+0x0],dh
   1400049c0:	imul   eax,DWORD PTR [rax],0x650063
   1400049c6:	pop    rdi
   1400049c7:	add    BYTE PTR [rax+rax*1+0x72],al
   1400049cb:	add    BYTE PTR [rcx+0x0],ch
   1400049ce:	jbe    0x1400049d0
   1400049d0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400049d4:	add    BYTE PTR [rcx+0x0],r12b
   1400049d8:	je     0x1400049da
   1400049da:	add    BYTE PTR gs:[rax],al
   1400049dd:	add    BYTE PTR [rax],al
   1400049df:	add    BYTE PTR [rax+0x0],dl
   1400049e2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400049e6:	pop    rcx
   1400049e7:	add    BYTE PTR [rdi+0x0],bl
   1400049ea:	add    BYTE PTR [rbp+0x0],r12b
   1400049ee:	jbe    0x1400049f0
   1400049f0:	imul   eax,DWORD PTR [rax],0x650063
   1400049f6:	pop    rdi
   1400049f7:	add    BYTE PTR [rax+rax*1+0x72],al
   1400049fb:	add    BYTE PTR [rcx+0x0],ch
   1400049fe:	jbe    0x140004a00
   140004a00:	add    BYTE PTR gs:[rdx+0x0],dh
   140004a04:	add    BYTE PTR [rbp+0x0],r12b
   140004a08:	jae    0x140004a0a
   140004a0a:	movsxd eax,DWORD PTR [rax]
   140004a0c:	add    BYTE PTR [rax],al
   140004a0e:	add    BYTE PTR [rax],al
   140004a10:	push   rax
   140004a11:	add    BYTE PTR [rbx+0x0],cl
   140004a14:	add    BYTE PTR [r9+0x0],r11b
   140004a18:	pop    rdi
   140004a19:	add    BYTE PTR [rax+rax*1+0x65],al
   140004a1d:	add    BYTE PTR [rsi+0x0],dh
   140004a20:	imul   eax,DWORD PTR [rax],0x650063
   140004a26:	pop    rdi
   140004a27:	add    BYTE PTR [rax+rax*1+0x72],al
   140004a2b:	add    BYTE PTR [rcx+0x0],ch
   140004a2e:	jbe    0x140004a30
   140004a30:	add    BYTE PTR gs:[rdx+0x0],dh
   140004a34:	rex.WB add BYTE PTR [r14+0x0],bpl
   140004a38:	data16 add BYTE PTR [rax+0x0],dl
   140004a3c:	(bad)  
   140004a3d:	add    BYTE PTR [rax+rax*1+0x68],dh
   140004a41:	add    BYTE PTR [rax],al
   140004a43:	add    BYTE PTR [rax],al
   140004a45:	add    BYTE PTR [rax],al
   140004a47:	add    BYTE PTR [rax+0x0],dl
   140004a4a:	rex.WXB add BYTE PTR [r13+0x0],al
   140004a4e:	pop    rcx
   140004a4f:	add    BYTE PTR [rdi+0x0],bl
   140004a52:	add    BYTE PTR [rbp+0x0],r12b
   140004a56:	jbe    0x140004a58
   140004a58:	imul   eax,DWORD PTR [rax],0x650063
   140004a5e:	pop    rdi
   140004a5f:	add    BYTE PTR [rax+rax*1+0x72],al
   140004a63:	add    BYTE PTR [rcx+0x0],ch
   140004a66:	jbe    0x140004a68
   140004a68:	add    BYTE PTR gs:[rdx+0x0],dh
   140004a6c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140004a70:	data16 add BYTE PTR [rbx+0x0],dl
   140004a74:	add    BYTE PTR gs:[rbx+0x0],ah
   140004a78:	je     0x140004a7a
   140004a7a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140004a90:	push   rax
   140004a91:	add    BYTE PTR [rbx+0x0],cl
   140004a94:	add    BYTE PTR [r9+0x0],r11b
   140004a98:	pop    rdi
   140004a99:	add    BYTE PTR [rax+rax*1+0x65],al
   140004a9d:	add    BYTE PTR [rsi+0x0],dh
   140004aa0:	imul   eax,DWORD PTR [rax],0x650063
   140004aa6:	pop    rdi
   140004aa7:	add    BYTE PTR [rax+rax*1+0x72],al
   140004aab:	add    BYTE PTR [rcx+0x0],ch
   140004aae:	jbe    0x140004ab0
   140004ab0:	add    BYTE PTR gs:[rdx+0x0],dh
   140004ab4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140004ab8:	data16 add BYTE PTR [rbx+0x0],dl
   140004abc:	add    BYTE PTR gs:[rbx+0x0],ah
   140004ac0:	je     0x140004ac2
   140004ac2:	imul   eax,DWORD PTR [rax],0x6e006f
   140004ac8:	add    BYTE PTR [r8+0x0],r15b
   140004acc:	je     0x140004ace
   140004ace:	add    BYTE PTR [rax],al
   140004ad0:	push   rax
   140004ad1:	add    BYTE PTR [rbx+0x0],cl
   140004ad4:	add    BYTE PTR [r9+0x0],r11b
   140004ad8:	pop    rdi
   140004ad9:	add    BYTE PTR [rax+rax*1+0x65],al
   140004add:	add    BYTE PTR [rsi+0x0],dh
   140004ae0:	imul   eax,DWORD PTR [rax],0x650063
   140004ae6:	pop    rdi
   140004ae7:	add    BYTE PTR [rax+rax*1+0x72],al
   140004aeb:	add    BYTE PTR [rcx+0x0],ch
   140004aee:	jbe    0x140004af0
   140004af0:	add    BYTE PTR gs:[rdx+0x0],dh
   140004af4:	push   rax
   140004af5:	add    BYTE PTR [rdx+0x0],dh
   140004af8:	outs   dx,DWORD PTR ds:[rsi]
   140004af9:	add    BYTE PTR [rax+0x0],dh
   140004afc:	push   rax
   140004afd:	add    BYTE PTR [rcx+0x0],ah
   140004b00:	add    BYTE PTR [ebp+0x0],ah
   140004b04:	push   rax
   140004b05:	add    BYTE PTR [rdx+0x0],dh
   140004b08:	outs   dx,DWORD PTR ds:[rsi]
   140004b09:	add    BYTE PTR [rsi+0x0],dh
   140004b0c:	imul   eax,DWORD PTR [rax],0x650064
   140004b12:	jb     0x140004b14
   140004b14:	add    BYTE PTR [rax],al
   140004b16:	add    BYTE PTR [rax],al
   140004b18:	push   rax
   140004b19:	add    BYTE PTR [rbx+0x0],cl
   140004b1c:	add    BYTE PTR [r9+0x0],r11b
   140004b20:	pop    rdi
   140004b21:	add    BYTE PTR [rax+rax*1+0x65],al
   140004b25:	add    BYTE PTR [rsi+0x0],dh
   140004b28:	imul   eax,DWORD PTR [rax],0x650063
   140004b2e:	pop    rdi
   140004b2f:	add    BYTE PTR [rax+rax*1+0x72],al
   140004b33:	add    BYTE PTR [rcx+0x0],ch
   140004b36:	jbe    0x140004b38
   140004b38:	add    BYTE PTR gs:[rdx+0x0],dh
   140004b3c:	push   rax
   140004b3d:	add    BYTE PTR [rdx+0x0],dh
   140004b40:	outs   dx,DWORD PTR ds:[rsi]
   140004b41:	add    BYTE PTR [rsi+0x0],dh
   140004b44:	imul   eax,DWORD PTR [rax],0x650064
   140004b4a:	jb     0x140004b4c
   140004b4c:	add    BYTE PTR [rax],al
   140004b4e:	add    BYTE PTR [rax],al
   140004b50:	push   rax
   140004b51:	add    BYTE PTR [rbx+0x0],cl
   140004b54:	add    BYTE PTR [r9+0x0],r11b
   140004b58:	pop    rdi
   140004b59:	add    BYTE PTR [rax+rax*1+0x65],al
   140004b5d:	add    BYTE PTR [rsi+0x0],dh
   140004b60:	imul   eax,DWORD PTR [rax],0x650063
   140004b66:	pop    rdi
   140004b67:	add    BYTE PTR [rax+rax*1+0x72],al
   140004b6b:	add    BYTE PTR [rcx+0x0],ch
   140004b6e:	jbe    0x140004b70
   140004b70:	add    BYTE PTR gs:[rdx+0x0],dh
   140004b74:	push   rdx
   140004b75:	add    BYTE PTR [rcx+0x0],ah
   140004b78:	outs   dx,BYTE PTR ds:[rsi]
   140004b79:	add    BYTE PTR [rbx+0x0],ch
   140004b7c:	add    BYTE PTR [rax],al
   140004b7e:	add    BYTE PTR [rax],al
   140004b80:	push   rax
   140004b81:	add    BYTE PTR [rbx+0x0],cl
   140004b84:	add    BYTE PTR [r9+0x0],r11b
   140004b88:	pop    rdi
   140004b89:	add    BYTE PTR [rax+rax*1+0x65],al
   140004b8d:	add    BYTE PTR [rsi+0x0],dh
   140004b90:	imul   eax,DWORD PTR [rax],0x650063
   140004b96:	pop    rdi
   140004b97:	add    BYTE PTR [rax+rax*1+0x72],al
   140004b9b:	add    BYTE PTR [rcx+0x0],ch
   140004b9e:	jbe    0x140004ba0
   140004ba0:	add    BYTE PTR gs:[rdx+0x0],dh
   140004ba4:	push   rsi
   140004ba5:	add    BYTE PTR [rbp+0x0],ah
   140004ba8:	jb     0x140004baa
   140004baa:	jae    0x140004bac
   140004bac:	imul   eax,DWORD PTR [rax],0x6e006f
   140004bb2:	add    BYTE PTR [rax],al
   140004bb4:	add    BYTE PTR [rax],al
   140004bb6:	add    BYTE PTR [rax],al
   140004bb8:	push   rax
   140004bb9:	add    BYTE PTR [rbx+0x0],cl
   140004bbc:	add    BYTE PTR [r9+0x0],r11b
   140004bc0:	pop    rdi
   140004bc1:	add    BYTE PTR [rax+rax*1+0x65],al
   140004bc5:	add    BYTE PTR [rsi+0x0],dh
   140004bc8:	imul   eax,DWORD PTR [rax],0x650063
   140004bce:	pop    rdi
   140004bcf:	add    BYTE PTR [rbp+0x0],al
   140004bd2:	outs   dx,BYTE PTR ds:[rsi]
   140004bd3:	add    BYTE PTR [rbp+0x0],dh
   140004bd6:	ins    DWORD PTR es:[rdi],dx
   140004bd7:	add    BYTE PTR [rbp+0x0],ah
   140004bda:	jb     0x140004bdc
   140004bdc:	(bad)  
   140004bdd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140004be1:	add    BYTE PTR [rdx+0x0],dh
   140004be4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140004be8:	ins    DWORD PTR es:[rdi],dx
   140004be9:	add    BYTE PTR [rbp+0x0],ah
   140004bec:	add    BYTE PTR [rax],al
   140004bee:	add    BYTE PTR [rax],al
   140004bf0:	push   rax
   140004bf1:	add    BYTE PTR [rbx+0x0],cl
   140004bf4:	add    BYTE PTR [r9+0x0],r11b
   140004bf8:	pop    rdi
   140004bf9:	add    BYTE PTR [rax+rax*1+0x65],al
   140004bfd:	add    BYTE PTR [rsi+0x0],dh
   140004c00:	imul   eax,DWORD PTR [rax],0x650063
   140004c06:	pop    rdi
   140004c07:	add    BYTE PTR [rsi+0x0],al
   140004c0a:	jb     0x140004c0c
   140004c0c:	imul   eax,DWORD PTR [rax],0x6e0065
   140004c12:	add    BYTE PTR fs:[rax+rax*1+0x79],ch
   140004c17:	add    BYTE PTR [rsi+0x0],cl
   140004c1a:	(bad)  
   140004c1b:	add    BYTE PTR [rbp+0x0],ch
   140004c1e:	add    BYTE PTR gs:[rax],al
   140004c21:	add    BYTE PTR [rax],al
   140004c23:	add    BYTE PTR [rax],al
   140004c25:	add    BYTE PTR [rax],al
   140004c27:	add    BYTE PTR [rax+0x0],dl
   140004c2a:	rex.WXB add BYTE PTR [r13+0x0],al
   140004c2e:	pop    rcx
   140004c2f:	add    BYTE PTR [rdi+0x0],bl
   140004c32:	add    BYTE PTR [rbp+0x0],r12b
   140004c36:	jbe    0x140004c38
   140004c38:	imul   eax,DWORD PTR [rax],0x650063
   140004c3e:	pop    rdi
   140004c3f:	add    BYTE PTR [rax+0x0],cl
   140004c42:	(bad)  
   140004c43:	add    BYTE PTR [rdx+0x0],dh
   140004c46:	add    BYTE PTR fs:[rdi+0x0],dh
   140004c4a:	(bad)  
   140004c4b:	add    BYTE PTR [rdx+0x0],dh
   140004c4e:	add    BYTE PTR gs:[rcx+0x0],cl
   140004c52:	add    BYTE PTR fs:[rbx+0x0],dh
   140004c56:	add    BYTE PTR [rax],al
   140004c58:	push   rax
   140004c59:	add    BYTE PTR [rbx+0x0],cl
   140004c5c:	add    BYTE PTR [r9+0x0],r11b
   140004c60:	pop    rdi
   140004c61:	add    BYTE PTR [rax+rax*1+0x65],al
   140004c65:	add    BYTE PTR [rsi+0x0],dh
   140004c68:	imul   eax,DWORD PTR [rax],0x650063
   140004c6e:	pop    rdi
   140004c6f:	add    BYTE PTR [rcx+0x0],cl
   140004c72:	outs   dx,BYTE PTR ds:[rsi]
   140004c73:	add    BYTE PTR [rbx+0x0],dh
   140004c76:	je     0x140004c78
   140004c78:	(bad)  
   140004c79:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140004c7d:	add    BYTE PTR [rbx+0x0],dl
   140004c80:	je     0x140004c82
   140004c82:	(bad)  
   140004c83:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   140004c8f:	add    BYTE PTR [rax+0x0],dl
   140004c92:	rex.WXB add BYTE PTR [r13+0x0],al
   140004c96:	pop    rcx
   140004c97:	add    BYTE PTR [rdi+0x0],bl
   140004c9a:	add    BYTE PTR [rbp+0x0],r12b
   140004c9e:	jbe    0x140004ca0
   140004ca0:	imul   eax,DWORD PTR [rax],0x650063
   140004ca6:	pop    rdi
   140004ca7:	add    BYTE PTR [rcx+0x0],cl
   140004caa:	outs   dx,BYTE PTR ds:[rsi]
   140004cab:	add    BYTE PTR [rbx+0x0],dh
   140004cae:	je     0x140004cb0
   140004cb0:	(bad)  
   140004cb1:	add    BYTE PTR [rsi+0x0],ch
   140004cb4:	movsxd eax,DWORD PTR [rax]
   140004cb6:	add    BYTE PTR gs:[rcx+0x0],cl
   140004cba:	add    BYTE PTR fs:[rax],al
   140004cbd:	add    BYTE PTR [rax],al
   140004cbf:	add    BYTE PTR [rax+0x0],dl
   140004cc2:	rex.WXB add BYTE PTR [r13+0x0],al
   140004cc6:	pop    rcx
   140004cc7:	add    BYTE PTR [rdi+0x0],bl
   140004cca:	add    BYTE PTR [rbp+0x0],r12b
   140004cce:	jbe    0x140004cd0
   140004cd0:	imul   eax,DWORD PTR [rax],0x650063
   140004cd6:	pop    rdi
   140004cd7:	add    BYTE PTR [rcx+0x0],cl
   140004cda:	outs   dx,BYTE PTR ds:[rsi]
   140004cdb:	add    BYTE PTR [rax+rax*1+0x65],dh
   140004cdf:	add    BYTE PTR [rdx+0x0],dh
   140004ce2:	data16 add BYTE PTR [rcx+0x0],ah
   140004ce6:	movsxd eax,DWORD PTR [rax]
   140004ce8:	add    BYTE PTR gs:[rax],al
   140004ceb:	add    BYTE PTR [rax],al
   140004ced:	add    BYTE PTR [rax],al
   140004cef:	add    BYTE PTR [rax+0x0],dl
   140004cf2:	rex.WXB add BYTE PTR [r13+0x0],al
   140004cf6:	pop    rcx
   140004cf7:	add    BYTE PTR [rdi+0x0],bl
   140004cfa:	add    BYTE PTR [rbp+0x0],r12b
   140004cfe:	jbe    0x140004d00
   140004d00:	imul   eax,DWORD PTR [rax],0x650063
   140004d06:	pop    rdi
   140004d07:	add    BYTE PTR [rax+rax*1+0x65],cl
   140004d0b:	add    BYTE PTR [rdi+0x0],ah
   140004d0e:	(bad)  
   140004d0f:	add    BYTE PTR [rbx+0x0],ah
   140004d12:	jns    0x140004d14
   140004d14:	rex.X add BYTE PTR [rbp+0x0],sil
   140004d18:	jae    0x140004d1a
   140004d1a:	push   rsp
   140004d1b:	add    BYTE PTR [rcx+0x0],bh
   140004d1e:	jo     0x140004d20
   140004d20:	add    BYTE PTR gs:[rax],al
   140004d23:	add    BYTE PTR [rax],al
   140004d25:	add    BYTE PTR [rax],al
   140004d27:	add    BYTE PTR [rax+0x0],dl
   140004d2a:	rex.WXB add BYTE PTR [r13+0x0],al
   140004d2e:	pop    rcx
   140004d2f:	add    BYTE PTR [rdi+0x0],bl
   140004d32:	add    BYTE PTR [rbp+0x0],r12b
   140004d36:	jbe    0x140004d38
   140004d38:	imul   eax,DWORD PTR [rax],0x650063
   140004d3e:	pop    rdi
   140004d3f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140004d43:	add    BYTE PTR [rbx+0x0],ah
   140004d46:	(bad)  
   140004d47:	add    BYTE PTR [rax+rax*1+0x69],dh
   140004d4b:	add    BYTE PTR [rdi+0x0],ch
   140004d4e:	outs   dx,BYTE PTR ds:[rsi]
   140004d4f:	add    BYTE PTR [rcx+0x0],cl
   140004d52:	outs   dx,BYTE PTR ds:[rsi]
   140004d53:	add    BYTE PTR [rsi+0x0],ah
   140004d56:	outs   dx,DWORD PTR ds:[rsi]
	...
   140004d5f:	add    BYTE PTR [rax+0x0],dl
   140004d62:	rex.WXB add BYTE PTR [r13+0x0],al
   140004d66:	pop    rcx
   140004d67:	add    BYTE PTR [rdi+0x0],bl
   140004d6a:	add    BYTE PTR [rbp+0x0],r12b
   140004d6e:	jbe    0x140004d70
   140004d70:	imul   eax,DWORD PTR [rax],0x650063
   140004d76:	pop    rdi
   140004d77:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140004d7b:	add    BYTE PTR [rbx+0x0],ah
   140004d7e:	(bad)  
   140004d7f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140004d83:	add    BYTE PTR [rdi+0x0],ch
   140004d86:	outs   dx,BYTE PTR ds:[rsi]
   140004d87:	add    BYTE PTR [rax+0x0],dl
   140004d8a:	(bad)  
   140004d8b:	add    BYTE PTR [rax+rax*1+0x68],dh
   140004d8f:	add    BYTE PTR [rbx+0x0],dh
   140004d92:	add    BYTE PTR [rax],al
   140004d94:	add    BYTE PTR [rax],al
   140004d96:	add    BYTE PTR [rax],al
   140004d98:	push   rax
   140004d99:	add    BYTE PTR [rbx+0x0],cl
   140004d9c:	add    BYTE PTR [r9+0x0],r11b
   140004da0:	pop    rdi
   140004da1:	add    BYTE PTR [rax+rax*1+0x65],al
   140004da5:	add    BYTE PTR [rsi+0x0],dh
   140004da8:	imul   eax,DWORD PTR [rax],0x650063
   140004dae:	pop    rdi
   140004daf:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140004db3:	add    BYTE PTR [rdi+0x0],dh
   140004db6:	add    BYTE PTR gs:[rdx+0x0],dh
   140004dba:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140004dbe:	ins    BYTE PTR es:[rdi],dx
   140004dbf:	add    BYTE PTR [rax+rax*1+0x65],dh
   140004dc3:	add    BYTE PTR [rdx+0x0],dh
   140004dc6:	jae    0x140004dc8
	...
   140004dd0:	push   rax
   140004dd1:	add    BYTE PTR [rbx+0x0],cl
   140004dd4:	add    BYTE PTR [r9+0x0],r11b
   140004dd8:	pop    rdi
   140004dd9:	add    BYTE PTR [rax+rax*1+0x65],al
   140004ddd:	add    BYTE PTR [rsi+0x0],dh
   140004de0:	imul   eax,DWORD PTR [rax],0x650063
   140004de6:	pop    rdi
   140004de7:	add    BYTE PTR [rbp+0x0],cl
   140004dea:	(bad)  
   140004deb:	add    BYTE PTR [rsi+0x0],ch
   140004dee:	jne    0x140004df0
   140004df0:	data16 add BYTE PTR [rcx+0x0],ah
   140004df4:	movsxd eax,DWORD PTR [rax]
   140004df6:	je     0x140004df8
   140004df8:	jne    0x140004dfa
   140004dfa:	jb     0x140004dfc
   140004dfc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140004e08:	push   rax
   140004e09:	add    BYTE PTR [rbx+0x0],cl
   140004e0c:	add    BYTE PTR [r9+0x0],r11b
   140004e10:	pop    rdi
   140004e11:	add    BYTE PTR [rax+rax*1+0x65],al
   140004e15:	add    BYTE PTR [rsi+0x0],dh
   140004e18:	imul   eax,DWORD PTR [rax],0x650063
   140004e1e:	pop    rdi
   140004e1f:	add    BYTE PTR [rbp+0x0],cl
   140004e22:	(bad)  
   140004e23:	add    BYTE PTR [rax+rax*1+0x63],dh
   140004e27:	add    BYTE PTR [rax+0x0],ch
   140004e2a:	imul   eax,DWORD PTR [rax],0x67006e
   140004e30:	add    BYTE PTR [rbp+0x0],r12b
   140004e34:	jbe    0x140004e36
   140004e36:	imul   eax,DWORD PTR [rax],0x650063
   140004e3c:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   140004e41:	add    BYTE PTR [rax],al
   140004e43:	add    BYTE PTR [rax],al
   140004e45:	add    BYTE PTR [rax],al
   140004e47:	add    BYTE PTR [rax+0x0],dl
   140004e4a:	rex.WXB add BYTE PTR [r13+0x0],al
   140004e4e:	pop    rcx
   140004e4f:	add    BYTE PTR [rdi+0x0],bl
   140004e52:	add    BYTE PTR [rbp+0x0],r12b
   140004e56:	jbe    0x140004e58
   140004e58:	imul   eax,DWORD PTR [rax],0x650063
   140004e5e:	pop    rdi
   140004e5f:	add    BYTE PTR [rbp+0x0],cl
   140004e62:	outs   dx,DWORD PTR ds:[rsi]
   140004e63:	add    BYTE PTR [rax+rax*1+0x65],ah
   140004e67:	add    BYTE PTR [rax+rax*1+0x0],ch
   140004e6b:	add    BYTE PTR [rax],al
   140004e6d:	add    BYTE PTR [rax],al
   140004e6f:	add    BYTE PTR [rax+0x0],dl
   140004e72:	rex.WXB add BYTE PTR [r13+0x0],al
   140004e76:	pop    rcx
   140004e77:	add    BYTE PTR [rdi+0x0],bl
   140004e7a:	add    BYTE PTR [rbp+0x0],r12b
   140004e7e:	jbe    0x140004e80
   140004e80:	imul   eax,DWORD PTR [rax],0x650063
   140004e86:	pop    rdi
   140004e87:	add    BYTE PTR [rbp+0x0],cl
   140004e8a:	outs   dx,DWORD PTR ds:[rsi]
   140004e8b:	add    BYTE PTR [rax+rax*1+0x65],ah
   140004e8f:	add    BYTE PTR [rax+rax*1+0x49],ch
   140004e93:	add    BYTE PTR [rax+rax*1+0x0],ah
   140004e97:	add    BYTE PTR [rax+0x0],dl
   140004e9a:	rex.WXB add BYTE PTR [r13+0x0],al
   140004e9e:	pop    rcx
   140004e9f:	add    BYTE PTR [rdi+0x0],bl
   140004ea2:	add    BYTE PTR [rbp+0x0],r12b
   140004ea6:	jbe    0x140004ea8
   140004ea8:	imul   eax,DWORD PTR [rax],0x650063
   140004eae:	pop    rdi
   140004eaf:	add    BYTE PTR [rsi+0x0],cl
   140004eb2:	outs   dx,DWORD PTR ds:[rsi]
   140004eb3:	add    BYTE PTR [rbx+0x0],al
   140004eb6:	outs   dx,DWORD PTR ds:[rsi]
   140004eb7:	add    BYTE PTR [rsi+0x0],ch
   140004eba:	outs   dx,BYTE PTR ds:[rsi]
   140004ebb:	add    BYTE PTR [rbp+0x0],ah
   140004ebe:	movsxd eax,DWORD PTR [rax]
   140004ec0:	je     0x140004ec2
   140004ec2:	push   rbx
   140004ec3:	add    BYTE PTR [rdi+0x0],ch
   140004ec6:	jne    0x140004ec8
   140004ec8:	outs   dx,BYTE PTR ds:[rsi]
   140004ec9:	add    BYTE PTR [rax+rax*1+0x0],ah
   140004ecd:	add    BYTE PTR [rax],al
   140004ecf:	add    BYTE PTR [rax+0x0],dl
   140004ed2:	rex.WXB add BYTE PTR [r13+0x0],al
   140004ed6:	pop    rcx
   140004ed7:	add    BYTE PTR [rdi+0x0],bl
   140004eda:	add    BYTE PTR [rbp+0x0],r12b
   140004ede:	jbe    0x140004ee0
   140004ee0:	imul   eax,DWORD PTR [rax],0x650063
   140004ee6:	pop    rdi
   140004ee7:	add    BYTE PTR [rsi+0x0],cl
   140004eea:	outs   dx,DWORD PTR ds:[rsi]
   140004eeb:	add    BYTE PTR [rax+rax*1+0x50],dh
   140004eef:	add    BYTE PTR [rdx+0x0],dh
   140004ef2:	add    BYTE PTR gs:[rbx+0x0],dh
   140004ef6:	add    BYTE PTR gs:[rsi+0x0],ch
   140004efa:	je     0x140004efc
   140004efc:	add    BYTE PTR [rax],al
   140004efe:	add    BYTE PTR [rax],al
   140004f00:	push   rax
   140004f01:	add    BYTE PTR [rbx+0x0],cl
   140004f04:	add    BYTE PTR [r9+0x0],r11b
   140004f08:	pop    rdi
   140004f09:	add    BYTE PTR [rax+rax*1+0x65],al
   140004f0d:	add    BYTE PTR [rsi+0x0],dh
   140004f10:	imul   eax,DWORD PTR [rax],0x650063
   140004f16:	pop    rdi
   140004f17:	add    BYTE PTR [rax+0x0],dl
   140004f1a:	(bad)  
   140004f1b:	add    BYTE PTR [rdx+0x0],dh
   140004f1e:	add    BYTE PTR gs:[rsi+0x0],ch
   140004f22:	je     0x140004f24
   140004f24:	add    BYTE PTR [rax],al
   140004f26:	add    BYTE PTR [rax],al
   140004f28:	push   rax
   140004f29:	add    BYTE PTR [rbx+0x0],cl
   140004f2c:	add    BYTE PTR [r9+0x0],r11b
   140004f30:	pop    rdi
   140004f31:	add    BYTE PTR [rax+rax*1+0x65],al
   140004f35:	add    BYTE PTR [rsi+0x0],dh
   140004f38:	imul   eax,DWORD PTR [rax],0x650063
   140004f3e:	pop    rdi
   140004f3f:	add    BYTE PTR [rax+0x0],dl
   140004f42:	add    BYTE PTR [rdi+0x0],r9b
   140004f46:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140004f4a:	ins    DWORD PTR es:[rdi],dx
   140004f4b:	add    BYTE PTR [rbp+0x0],ah
   140004f4e:	add    BYTE PTR [rax],al
   140004f50:	push   rax
   140004f51:	add    BYTE PTR [rbx+0x0],cl
   140004f54:	add    BYTE PTR [r9+0x0],r11b
   140004f58:	pop    rdi
   140004f59:	add    BYTE PTR [rax+rax*1+0x65],al
   140004f5d:	add    BYTE PTR [rsi+0x0],dh
   140004f60:	imul   eax,DWORD PTR [rax],0x650063
   140004f66:	pop    rdi
   140004f67:	add    BYTE PTR [rax+0x0],dl
   140004f6a:	outs   dx,DWORD PTR ds:[rsi]
   140004f6b:	add    BYTE PTR [rdi+0x0],dh
   140004f6e:	add    BYTE PTR gs:[rdx+0x0],dh
   140004f72:	add    BYTE PTR [rcx+0x0],r12b
   140004f76:	je     0x140004f78
   140004f78:	(bad)  
   140004f79:	add    BYTE PTR [rax],al
   140004f7b:	add    BYTE PTR [rax],al
   140004f7d:	add    BYTE PTR [rax],al
   140004f7f:	add    BYTE PTR [rax+0x0],dl
   140004f82:	rex.WXB add BYTE PTR [r13+0x0],al
   140004f86:	pop    rcx
   140004f87:	add    BYTE PTR [rdi+0x0],bl
   140004f8a:	add    BYTE PTR [rbp+0x0],r12b
   140004f8e:	jbe    0x140004f90
   140004f90:	imul   eax,DWORD PTR [rax],0x650063
   140004f96:	pop    rdi
   140004f97:	add    BYTE PTR [rax+0x0],dl
   140004f9a:	jb     0x140004f9c
   140004f9c:	outs   dx,DWORD PTR ds:[rsi]
   140004f9d:	add    BYTE PTR [rdx+0x0],ah
   140004fa0:	ins    BYTE PTR es:[rdi],dx
   140004fa1:	add    BYTE PTR [rbp+0x0],ah
   140004fa4:	ins    DWORD PTR es:[rdi],dx
   140004fa5:	add    BYTE PTR [rbx+0x0],al
   140004fa8:	outs   dx,DWORD PTR ds:[rsi]
   140004fa9:	add    BYTE PTR [rax+rax*1+0x65],ah
   140004fad:	add    BYTE PTR [rax],al
   140004faf:	add    BYTE PTR [rax+0x0],dl
   140004fb2:	rex.WXB add BYTE PTR [r13+0x0],al
   140004fb6:	pop    rcx
   140004fb7:	add    BYTE PTR [rdi+0x0],bl
   140004fba:	add    BYTE PTR [rbp+0x0],r12b
   140004fbe:	jbe    0x140004fc0
   140004fc0:	imul   eax,DWORD PTR [rax],0x650063
   140004fc6:	pop    rdi
   140004fc7:	add    BYTE PTR [rdx+0x0],dl
   140004fca:	add    BYTE PTR gs:[rbp+0x0],ch
   140004fce:	outs   dx,DWORD PTR ds:[rsi]
   140004fcf:	add    BYTE PTR [rsi+0x0],dh
   140004fd2:	(bad)  
   140004fd3:	add    BYTE PTR [rax+rax*1+0x50],ch
   140004fd7:	add    BYTE PTR [rdi+0x0],ch
   140004fda:	ins    BYTE PTR es:[rdi],dx
   140004fdb:	add    BYTE PTR [rcx+0x0],ch
   140004fde:	movsxd eax,DWORD PTR [rax]
   140004fe0:	jns    0x140004fe2
	...
   140004fee:	add    BYTE PTR [rax],al
   140004ff0:	push   rax
   140004ff1:	add    BYTE PTR [rbx+0x0],cl
   140004ff4:	add    BYTE PTR [r9+0x0],r11b
   140004ff8:	pop    rdi
   140004ff9:	add    BYTE PTR [rax+rax*1+0x65],al
   140004ffd:	add    BYTE PTR [rsi+0x0],dh
   140005000:	imul   eax,DWORD PTR [rax],0x650063
   140005006:	pop    rdi
   140005007:	add    BYTE PTR [rdx+0x0],dl
   14000500a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000500e:	outs   dx,DWORD PTR ds:[rsi]
   14000500f:	add    BYTE PTR [rsi+0x0],dh
   140005012:	(bad)  
   140005013:	add    BYTE PTR [rax+rax*1+0x50],ch
   140005017:	add    BYTE PTR [rdi+0x0],ch
   14000501a:	ins    BYTE PTR es:[rdi],dx
   14000501b:	add    BYTE PTR [rcx+0x0],ch
   14000501e:	movsxd eax,DWORD PTR [rax]
   140005020:	jns    0x140005022
   140005022:	add    BYTE PTR [rbp+0x0],r12b
   140005026:	data16 add BYTE PTR [rcx+0x0],ah
   14000502a:	jne    0x14000502c
   14000502c:	ins    BYTE PTR es:[rdi],dx
   14000502d:	add    BYTE PTR [rax+rax*1+0x0],dh
   140005031:	add    BYTE PTR [rax],al
   140005033:	add    BYTE PTR [rax],al
   140005035:	add    BYTE PTR [rax],al
   140005037:	add    BYTE PTR [rax+0x0],dl
   14000503a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000503e:	pop    rcx
   14000503f:	add    BYTE PTR [rdi+0x0],bl
   140005042:	add    BYTE PTR [rbp+0x0],r12b
   140005046:	jbe    0x140005048
   140005048:	imul   eax,DWORD PTR [rax],0x650063
   14000504e:	pop    rdi
   14000504f:	add    BYTE PTR [rbx+0x0],dl
   140005052:	add    BYTE PTR gs:[rdx+0x0],dh
   140005056:	jbe    0x140005058
   140005058:	imul   eax,DWORD PTR [rax],0x650063
   14000505e:	add    BYTE PTR [rax],al
   140005060:	push   rax
   140005061:	add    BYTE PTR [rbx+0x0],cl
   140005064:	add    BYTE PTR [r9+0x0],r11b
   140005068:	pop    rdi
   140005069:	add    BYTE PTR [rax+rax*1+0x65],al
   14000506d:	add    BYTE PTR [rsi+0x0],dh
   140005070:	imul   eax,DWORD PTR [rax],0x650063
   140005076:	pop    rdi
   140005077:	add    BYTE PTR [rbx+0x0],dl
   14000507a:	imul   eax,DWORD PTR [rax],0x6c0062
   140005080:	imul   eax,DWORD PTR [rax],0x67006e
   140005086:	jae    0x140005088
	...
   140005090:	push   rax
   140005091:	add    BYTE PTR [rbx+0x0],cl
   140005094:	add    BYTE PTR [r9+0x0],r11b
   140005098:	pop    rdi
   140005099:	add    BYTE PTR [rax+rax*1+0x65],al
   14000509d:	add    BYTE PTR [rsi+0x0],dh
   1400050a0:	imul   eax,DWORD PTR [rax],0x650063
   1400050a6:	pop    rdi
   1400050a7:	add    BYTE PTR [rbx+0x0],dl
   1400050aa:	add    BYTE PTR gs:[rbx+0x0],ah
   1400050ae:	jne    0x1400050b0
   1400050b0:	jb     0x1400050b2
   1400050b2:	imul   eax,DWORD PTR [rax],0x790074
	...
   1400050c0:	push   rax
   1400050c1:	add    BYTE PTR [rbx+0x0],cl
   1400050c4:	add    BYTE PTR [r9+0x0],r11b
   1400050c8:	pop    rdi
   1400050c9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400050cd:	add    BYTE PTR [rsi+0x0],dh
   1400050d0:	imul   eax,DWORD PTR [rax],0x650063
   1400050d6:	pop    rdi
   1400050d7:	add    BYTE PTR [rbx+0x0],dl
   1400050da:	add    BYTE PTR gs:[rbx+0x0],ah
   1400050de:	jne    0x1400050e0
   1400050e0:	jb     0x1400050e2
   1400050e2:	imul   eax,DWORD PTR [rax],0x790074
   1400050e8:	push   rbx
   1400050e9:	add    BYTE PTR [rax+rax*1+0x53],al
   1400050ed:	add    BYTE PTR [rax],al
   1400050ef:	add    BYTE PTR [rax+0x0],dl
   1400050f2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400050f6:	pop    rcx
   1400050f7:	add    BYTE PTR [rdi+0x0],bl
   1400050fa:	add    BYTE PTR [rbp+0x0],r12b
   1400050fe:	jbe    0x140005100
   140005100:	imul   eax,DWORD PTR [rax],0x650063
   140005106:	pop    rdi
   140005107:	add    BYTE PTR [rbp+0x0],dl
   14000510a:	jo     0x14000510c
   14000510c:	jo     0x14000510e
   14000510e:	add    BYTE PTR gs:[rdx+0x0],dh
   140005112:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140005116:	ins    BYTE PTR es:[rdi],dx
   140005117:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000511b:	add    BYTE PTR [rdx+0x0],dh
   14000511e:	jae    0x140005120
	...
   140005130:	push   rax
   140005131:	add    BYTE PTR [rbx+0x0],cl
   140005134:	add    BYTE PTR [r9+0x0],r11b
   140005138:	pop    rdi
   140005139:	add    BYTE PTR [rax+rax*1+0x65],al
   14000513d:	add    BYTE PTR [rsi+0x0],dh
   140005140:	imul   eax,DWORD PTR [rax],0x650063
   140005146:	pop    rdi
   140005147:	add    BYTE PTR [rbx+0x0],dl
   14000514a:	(bad)  
   14000514b:	add    BYTE PTR [rsi+0x0],ah
   14000514e:	add    BYTE PTR gs:[rdx+0x0],dl
   140005152:	add    BYTE PTR gs:[rbp+0x0],ch
   140005156:	outs   dx,DWORD PTR ds:[rsi]
   140005157:	add    BYTE PTR [rsi+0x0],dh
   14000515a:	(bad)  
   14000515b:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000515f:	add    BYTE PTR [rbp+0x0],ah
   140005162:	jno    0x140005164
   140005164:	jne    0x140005166
   140005166:	imul   eax,DWORD PTR [rax],0x650072
   14000516c:	add    BYTE PTR fs:[rax],al
   14000516f:	add    BYTE PTR [rax+0x0],dl
   140005172:	rex.WXB add BYTE PTR [r13+0x0],al
   140005176:	pop    rcx
   140005177:	add    BYTE PTR [rdi+0x0],bl
   14000517a:	add    BYTE PTR [rbp+0x0],r12b
   14000517e:	jbe    0x140005180
   140005180:	imul   eax,DWORD PTR [rax],0x650063
   140005186:	pop    rdi
   140005187:	add    BYTE PTR [rbx+0x0],dl
   14000518a:	imul   eax,DWORD PTR [rax],0x6e0067
   140005190:	(bad)  
   140005191:	add    BYTE PTR [rax+rax*1+0x53],ch
   140005195:	add    BYTE PTR [rax+rax*1+0x72],dh
   140005199:	add    BYTE PTR [rbp+0x0],ah
   14000519c:	outs   dx,BYTE PTR ds:[rsi]
   14000519d:	add    BYTE PTR [rdi+0x0],ah
   1400051a0:	je     0x1400051a2
   1400051a2:	push   0x0
	...
   1400051af:	add    BYTE PTR [rax+0x0],dl
   1400051b2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400051b6:	pop    rcx
   1400051b7:	add    BYTE PTR [rdi+0x0],bl
   1400051ba:	add    BYTE PTR [rbp+0x0],r12b
   1400051be:	jbe    0x1400051c0
   1400051c0:	imul   eax,DWORD PTR [rax],0x650063
   1400051c6:	pop    rdi
   1400051c7:	add    BYTE PTR [rcx+0x0],cl
   1400051ca:	jae    0x1400051cc
   1400051cc:	add    BYTE PTR [r11+0x0],sil
   1400051d0:	jae    0x1400051d2
   1400051d2:	outs   dx,DWORD PTR ds:[rsi]
   1400051d3:	add    BYTE PTR [rbx+0x0],ah
   1400051d6:	imul   eax,DWORD PTR [rax],0x740061
   1400051dc:	add    BYTE PTR gs:[rcx+0x0],ah
   1400051e0:	(bad)  
   1400051e1:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400051e5:	add    BYTE PTR [rdx+0x0],al
   1400051e8:	jns    0x1400051ea
   1400051ea:	push   rbp
   1400051eb:	add    BYTE PTR [rbx+0x0],dh
   1400051ee:	add    BYTE PTR gs:[rdx+0x0],dh
   1400051f2:	add    BYTE PTR [r11+0x0],spl
   1400051f6:	je     0x1400051f8
   1400051f8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400051fe:	add    BYTE PTR [rax],al
   140005200:	push   rax
   140005201:	add    BYTE PTR [rbx+0x0],cl
   140005204:	add    BYTE PTR [r9+0x0],r11b
   140005208:	pop    rdi
   140005209:	add    BYTE PTR [rax+rax*1+0x65],al
   14000520d:	add    BYTE PTR [rsi+0x0],dh
   140005210:	imul   eax,DWORD PTR [rax],0x650063
   140005216:	add    BYTE PTR [rcx+0x0],r13b
   14000521a:	jae    0x14000521c
   14000521c:	jo     0x14000521e
   14000521e:	ins    BYTE PTR es:[rdi],dx
   14000521f:	add    BYTE PTR [rcx+0x0],ah
   140005222:	jns    0x140005224
   140005224:	pop    rdi
   140005225:	add    BYTE PTR [rcx+0x0],al
   140005228:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   14000522d:	add    BYTE PTR [rbp+0x0],ah
   140005230:	jae    0x140005232
   140005232:	jae    0x140005234
	...
   140005240:	push   rax
   140005241:	add    BYTE PTR [rbx+0x0],cl
   140005244:	add    BYTE PTR [r9+0x0],r11b
   140005248:	pop    rdi
   140005249:	add    BYTE PTR [rax+rax*1+0x65],al
   14000524d:	add    BYTE PTR [rsi+0x0],dh
   140005250:	imul   eax,DWORD PTR [rax],0x650063
   140005256:	add    BYTE PTR [rcx+0x0],r13b
   14000525a:	jae    0x14000525c
   14000525c:	jo     0x14000525e
   14000525e:	ins    BYTE PTR es:[rdi],dx
   14000525f:	add    BYTE PTR [rcx+0x0],ah
   140005262:	jns    0x140005264
   140005264:	pop    rdi
   140005265:	add    BYTE PTR [rcx+0x0],al
   140005268:	jae    0x14000526a
   14000526a:	jae    0x14000526c
   14000526c:	outs   dx,DWORD PTR ds:[rsi]
   14000526d:	add    BYTE PTR [rbx+0x0],ah
   140005270:	imul   eax,DWORD PTR [rax],0x740061
   140005276:	imul   eax,DWORD PTR [rax],0x6e006f
   14000527c:	add    BYTE PTR [r10+0x0],sil
   140005280:	jb     0x140005282
   140005282:	(bad)  
   140005283:	add    BYTE PTR [rcx+0x0],bh
	...
   14000528e:	add    BYTE PTR [rax],al
   140005290:	push   rax
   140005291:	add    BYTE PTR [rbx+0x0],cl
   140005294:	add    BYTE PTR [r9+0x0],r11b
   140005298:	pop    rdi
   140005299:	add    BYTE PTR [rax+rax*1+0x65],al
   14000529d:	add    BYTE PTR [rsi+0x0],dh
   1400052a0:	imul   eax,DWORD PTR [rax],0x650063
   1400052a6:	add    BYTE PTR [rcx+0x0],r13b
   1400052aa:	jae    0x1400052ac
   1400052ac:	jo     0x1400052ae
   1400052ae:	ins    BYTE PTR es:[rdi],dx
   1400052af:	add    BYTE PTR [rcx+0x0],ah
   1400052b2:	jns    0x1400052b4
   1400052b4:	pop    rdi
   1400052b5:	add    BYTE PTR [rdx+0x0],al
   1400052b8:	(bad)  
   1400052b9:	add    BYTE PTR [rbx+0x0],dh
   1400052bc:	add    BYTE PTR gs:[rax+rax*1+0x69],ch
   1400052c1:	add    BYTE PTR [rsi+0x0],ch
   1400052c4:	add    BYTE PTR gs:[rbp+0x0],al
   1400052c8:	js     0x1400052ca
   1400052ca:	jo     0x1400052cc
   1400052cc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400052d0:	imul   eax,DWORD PTR [rax],0x6e0065
   1400052d6:	movsxd eax,DWORD PTR [rax]
   1400052d8:	add    BYTE PTR gs:[rcx+0x0],cl
   1400052dc:	add    BYTE PTR fs:[rax],al
   1400052df:	add    BYTE PTR [rax+0x0],dl
   1400052e2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400052e6:	pop    rcx
   1400052e7:	add    BYTE PTR [rdi+0x0],bl
   1400052ea:	add    BYTE PTR [rbp+0x0],r12b
   1400052ee:	jbe    0x1400052f0
   1400052f0:	imul   eax,DWORD PTR [rax],0x650063
   1400052f6:	add    BYTE PTR [rcx+0x0],r13b
   1400052fa:	jae    0x1400052fc
   1400052fc:	jo     0x1400052fe
   1400052fe:	ins    BYTE PTR es:[rdi],dx
   1400052ff:	add    BYTE PTR [rcx+0x0],ah
   140005302:	jns    0x140005304
   140005304:	pop    rdi
   140005305:	add    BYTE PTR [rbx+0x0],al
   140005308:	(bad)  
   140005309:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000530d:	add    BYTE PTR [rdi+0x0],ah
   140005310:	outs   dx,DWORD PTR ds:[rsi]
   140005311:	add    BYTE PTR [rdx+0x0],dh
   140005314:	jns    0x140005316
	...
   14000531e:	add    BYTE PTR [rax],al
   140005320:	push   rax
   140005321:	add    BYTE PTR [rbx+0x0],cl
   140005324:	add    BYTE PTR [r9+0x0],r11b
   140005328:	pop    rdi
   140005329:	add    BYTE PTR [rax+rax*1+0x65],al
   14000532d:	add    BYTE PTR [rsi+0x0],dh
   140005330:	imul   eax,DWORD PTR [rax],0x650063
   140005336:	add    BYTE PTR [rcx+0x0],r13b
   14000533a:	jae    0x14000533c
   14000533c:	jo     0x14000533e
   14000533e:	ins    BYTE PTR es:[rdi],dx
   14000533f:	add    BYTE PTR [rcx+0x0],ah
   140005342:	jns    0x140005344
   140005344:	pop    rdi
   140005345:	add    BYTE PTR [rax+rax*1+0x65],al
   140005349:	add    BYTE PTR [rsi+0x0],dh
   14000534c:	imul   eax,DWORD PTR [rax],0x650063
   140005352:	add    BYTE PTR [rbp+0x0],r12b
   140005356:	jae    0x140005358
   140005358:	movsxd eax,DWORD PTR [rax]
   14000535a:	jb     0x14000535c
   14000535c:	imul   eax,DWORD PTR [rax],0x740070
   140005362:	imul   eax,DWORD PTR [rax],0x6e006f
   140005368:	xor    DWORD PTR [rax],eax
   14000536a:	add    BYTE PTR [rax],al
   14000536c:	add    BYTE PTR [rax],al
   14000536e:	add    BYTE PTR [rax],al
   140005370:	push   rax
   140005371:	add    BYTE PTR [rbx+0x0],cl
   140005374:	add    BYTE PTR [r9+0x0],r11b
   140005378:	pop    rdi
   140005379:	add    BYTE PTR [rax+rax*1+0x65],al
   14000537d:	add    BYTE PTR [rsi+0x0],dh
   140005380:	imul   eax,DWORD PTR [rax],0x650063
   140005386:	add    BYTE PTR [rcx+0x0],r13b
   14000538a:	jae    0x14000538c
   14000538c:	jo     0x14000538e
   14000538e:	ins    BYTE PTR es:[rdi],dx
   14000538f:	add    BYTE PTR [rcx+0x0],ah
   140005392:	jns    0x140005394
   140005394:	pop    rdi
   140005395:	add    BYTE PTR [rax+rax*1+0x65],al
   140005399:	add    BYTE PTR [rsi+0x0],dh
   14000539c:	imul   eax,DWORD PTR [rax],0x650063
   1400053a2:	add    BYTE PTR [rbp+0x0],r12b
   1400053a6:	jae    0x1400053a8
   1400053a8:	movsxd eax,DWORD PTR [rax]
   1400053aa:	jb     0x1400053ac
   1400053ac:	imul   eax,DWORD PTR [rax],0x740070
   1400053b2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400053b8:	xor    al,BYTE PTR [rax]
   1400053ba:	add    BYTE PTR [rax],al
   1400053bc:	add    BYTE PTR [rax],al
   1400053be:	add    BYTE PTR [rax],al
   1400053c0:	push   rax
   1400053c1:	add    BYTE PTR [rbx+0x0],cl
   1400053c4:	add    BYTE PTR [r9+0x0],r11b
   1400053c8:	pop    rdi
   1400053c9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400053cd:	add    BYTE PTR [rsi+0x0],dh
   1400053d0:	imul   eax,DWORD PTR [rax],0x650063
   1400053d6:	add    BYTE PTR [rcx+0x0],r13b
   1400053da:	jae    0x1400053dc
   1400053dc:	jo     0x1400053de
   1400053de:	ins    BYTE PTR es:[rdi],dx
   1400053df:	add    BYTE PTR [rcx+0x0],ah
   1400053e2:	jns    0x1400053e4
   1400053e4:	pop    rdi
   1400053e5:	add    BYTE PTR [rax+rax*1+0x69],al
   1400053e9:	add    BYTE PTR [rbx+0x0],dh
   1400053ec:	movsxd eax,DWORD PTR [rax]
   1400053ee:	outs   dx,DWORD PTR ds:[rsi]
   1400053ef:	add    BYTE PTR [rsi+0x0],dh
   1400053f2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400053f6:	jns    0x1400053f8
   1400053f8:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400053fc:	je     0x1400053fe
   1400053fe:	push   0x64006f00
	...
   14000540f:	add    BYTE PTR [rax+0x0],dl
   140005412:	rex.WXB add BYTE PTR [r13+0x0],al
   140005416:	pop    rcx
   140005417:	add    BYTE PTR [rdi+0x0],bl
   14000541a:	add    BYTE PTR [rbp+0x0],r12b
   14000541e:	jbe    0x140005420
   140005420:	imul   eax,DWORD PTR [rax],0x650063
   140005426:	add    BYTE PTR [rcx+0x0],r13b
   14000542a:	jae    0x14000542c
   14000542c:	jo     0x14000542e
   14000542e:	ins    BYTE PTR es:[rdi],dx
   14000542f:	add    BYTE PTR [rcx+0x0],ah
   140005432:	jns    0x140005434
   140005434:	pop    rdi
   140005435:	add    BYTE PTR [rbp+0x0],al
   140005438:	js     0x14000543a
   14000543a:	jo     0x14000543c
   14000543c:	add    BYTE PTR gs:[rdx+0x0],dh
   140005440:	imul   eax,DWORD PTR [rax],0x6e0065
   140005446:	movsxd eax,DWORD PTR [rax]
   140005448:	add    BYTE PTR gs:[rcx+0x0],cl
   14000544c:	add    BYTE PTR fs:[rax],al
   14000544f:	add    BYTE PTR [rax+0x0],dl
   140005452:	rex.WXB add BYTE PTR [r13+0x0],al
   140005456:	pop    rcx
   140005457:	add    BYTE PTR [rdi+0x0],bl
   14000545a:	add    BYTE PTR [rbp+0x0],r12b
   14000545e:	jbe    0x140005460
   140005460:	imul   eax,DWORD PTR [rax],0x650063
   140005466:	add    BYTE PTR [rcx+0x0],r13b
   14000546a:	jae    0x14000546c
   14000546c:	jo     0x14000546e
   14000546e:	ins    BYTE PTR es:[rdi],dx
   14000546f:	add    BYTE PTR [rcx+0x0],ah
   140005472:	jns    0x140005474
   140005474:	pop    rdi
   140005475:	add    BYTE PTR [rsi+0x0],al
   140005478:	jb     0x14000547a
   14000547a:	imul   eax,DWORD PTR [rax],0x6e0065
   140005480:	add    BYTE PTR fs:[rax+rax*1+0x79],ch
   140005485:	add    BYTE PTR [rsi+0x0],cl
   140005488:	(bad)  
   140005489:	add    BYTE PTR [rbp+0x0],ch
   14000548c:	add    BYTE PTR gs:[rax],al
   14000548f:	add    BYTE PTR [rax+0x0],dl
   140005492:	rex.WXB add BYTE PTR [r13+0x0],al
   140005496:	pop    rcx
   140005497:	add    BYTE PTR [rdi+0x0],bl
   14000549a:	add    BYTE PTR [rbp+0x0],r12b
   14000549e:	jbe    0x1400054a0
   1400054a0:	imul   eax,DWORD PTR [rax],0x650063
   1400054a6:	add    BYTE PTR [rcx+0x0],r13b
   1400054aa:	jae    0x1400054ac
   1400054ac:	jo     0x1400054ae
   1400054ae:	ins    BYTE PTR es:[rdi],dx
   1400054af:	add    BYTE PTR [rcx+0x0],ah
   1400054b2:	jns    0x1400054b4
   1400054b4:	pop    rdi
   1400054b5:	add    BYTE PTR [rcx+0x0],cl
   1400054b8:	movsxd eax,DWORD PTR [rax]
   1400054ba:	outs   dx,DWORD PTR ds:[rsi]
   1400054bb:	add    BYTE PTR [rsi+0x0],ch
   1400054be:	add    BYTE PTR [rax],al
   1400054c0:	push   rax
   1400054c1:	add    BYTE PTR [rbx+0x0],cl
   1400054c4:	add    BYTE PTR [r9+0x0],r11b
   1400054c8:	pop    rdi
   1400054c9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400054cd:	add    BYTE PTR [rsi+0x0],dh
   1400054d0:	imul   eax,DWORD PTR [rax],0x650063
   1400054d6:	add    BYTE PTR [rcx+0x0],r13b
   1400054da:	jae    0x1400054dc
   1400054dc:	jo     0x1400054de
   1400054de:	ins    BYTE PTR es:[rdi],dx
   1400054df:	add    BYTE PTR [rcx+0x0],ah
   1400054e2:	jns    0x1400054e4
   1400054e4:	pop    rdi
   1400054e5:	add    BYTE PTR [rcx+0x0],cl
   1400054e8:	jae    0x1400054ea
   1400054ea:	add    BYTE PTR [r13+0x0],sil
   1400054ee:	je     0x1400054f0
   1400054f0:	push   0x6e006500
   1400054f5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400054f9:	add    BYTE PTR [rbx+0x0],ah
   1400054fc:	(bad)  
   1400054fd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140005501:	add    BYTE PTR [rax+rax*1+0x0],ah
   140005505:	add    BYTE PTR [rax],al
   140005507:	add    BYTE PTR [rax+0x0],dl
   14000550a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000550e:	pop    rcx
   14000550f:	add    BYTE PTR [rdi+0x0],bl
   140005512:	add    BYTE PTR [rbp+0x0],r12b
   140005516:	jbe    0x140005518
   140005518:	imul   eax,DWORD PTR [rax],0x650063
   14000551e:	add    BYTE PTR [rcx+0x0],r13b
   140005522:	jae    0x140005524
   140005524:	jo     0x140005526
   140005526:	ins    BYTE PTR es:[rdi],dx
   140005527:	add    BYTE PTR [rcx+0x0],ah
   14000552a:	jns    0x14000552c
   14000552c:	pop    rdi
   14000552d:	add    BYTE PTR [rcx+0x0],cl
   140005530:	jae    0x140005532
   140005532:	rex.XB add BYTE PTR [r15+0x0],bpl
   140005536:	outs   dx,BYTE PTR ds:[rsi]
   140005537:	add    BYTE PTR [rsi+0x0],ch
   14000553a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000553e:	je     0x140005540
   140005540:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
	...
   14000554d:	add    BYTE PTR [rax],al
   14000554f:	add    BYTE PTR [rax+0x0],dl
   140005552:	rex.WXB add BYTE PTR [r13+0x0],al
   140005556:	pop    rcx
   140005557:	add    BYTE PTR [rdi+0x0],bl
   14000555a:	add    BYTE PTR [rbp+0x0],r12b
   14000555e:	jbe    0x140005560
   140005560:	imul   eax,DWORD PTR [rax],0x650063
   140005566:	add    BYTE PTR [rcx+0x0],r13b
   14000556a:	jae    0x14000556c
   14000556c:	jo     0x14000556e
   14000556e:	ins    BYTE PTR es:[rdi],dx
   14000556f:	add    BYTE PTR [rcx+0x0],ah
   140005572:	jns    0x140005574
   140005574:	pop    rdi
   140005575:	add    BYTE PTR [rcx+0x0],cl
   140005578:	jae    0x14000557a
   14000557a:	add    BYTE PTR [rbp+0x0],r12b
   14000557e:	data16 add BYTE PTR [rcx+0x0],ah
   140005582:	jne    0x140005584
   140005584:	ins    BYTE PTR es:[rdi],dx
   140005585:	add    BYTE PTR [rax+rax*1+0x44],dh
   140005589:	add    BYTE PTR [rbp+0x0],ah
   14000558c:	jbe    0x14000558e
   14000558e:	imul   eax,DWORD PTR [rax],0x650063
	...
   1400055a0:	push   rax
   1400055a1:	add    BYTE PTR [rbx+0x0],cl
   1400055a4:	add    BYTE PTR [r9+0x0],r11b
   1400055a8:	pop    rdi
   1400055a9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400055ad:	add    BYTE PTR [rsi+0x0],dh
   1400055b0:	imul   eax,DWORD PTR [rax],0x650063
   1400055b6:	add    BYTE PTR [rcx+0x0],r13b
   1400055ba:	jae    0x1400055bc
   1400055bc:	jo     0x1400055be
   1400055be:	ins    BYTE PTR es:[rdi],dx
   1400055bf:	add    BYTE PTR [rcx+0x0],ah
   1400055c2:	jns    0x1400055c4
   1400055c4:	pop    rdi
   1400055c5:	add    BYTE PTR [rcx+0x0],cl
   1400055c8:	jae    0x1400055ca
   1400055ca:	add    BYTE PTR [rbp+0x0],r12b
   1400055ce:	jbe    0x1400055d0
   1400055d0:	imul   eax,DWORD PTR [rax],0x650063
   1400055d6:	push   rbp
   1400055d7:	add    BYTE PTR [rsi+0x0],ch
   1400055da:	imul   eax,DWORD PTR [rax],0x750071
   1400055e0:	add    BYTE PTR gs:[rax+rax*1+0x79],ch
   1400055e5:	add    BYTE PTR [rcx+0x0],cl
   1400055e8:	add    BYTE PTR fs:[rbp+0x0],ah
   1400055ec:	outs   dx,BYTE PTR ds:[rsi]
   1400055ed:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400055f1:	add    BYTE PTR [rsi+0x0],ah
   1400055f4:	imul   eax,DWORD PTR [rax],0x620061
   1400055fa:	ins    BYTE PTR es:[rdi],dx
   1400055fb:	add    BYTE PTR [rbp+0x0],ah
   1400055fe:	add    BYTE PTR [rax],al
   140005600:	push   rax
   140005601:	add    BYTE PTR [rbx+0x0],cl
   140005604:	add    BYTE PTR [r9+0x0],r11b
   140005608:	pop    rdi
   140005609:	add    BYTE PTR [rax+rax*1+0x65],al
   14000560d:	add    BYTE PTR [rsi+0x0],dh
   140005610:	imul   eax,DWORD PTR [rax],0x650063
   140005616:	add    BYTE PTR [rcx+0x0],r13b
   14000561a:	jae    0x14000561c
   14000561c:	jo     0x14000561e
   14000561e:	ins    BYTE PTR es:[rdi],dx
   14000561f:	add    BYTE PTR [rcx+0x0],ah
   140005622:	jns    0x140005624
   140005624:	pop    rdi
   140005625:	add    BYTE PTR [rcx+0x0],cl
   140005628:	jae    0x14000562a
   14000562a:	add    BYTE PTR [r14+0x0],r13b
   14000562e:	movsxd eax,DWORD PTR [rax]
   140005630:	jb     0x140005632
   140005632:	jns    0x140005634
   140005634:	jo     0x140005636
   140005636:	je     0x140005638
   140005638:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000563d:	add    BYTE PTR [rax],al
   14000563f:	add    BYTE PTR [rax+0x0],dl
   140005642:	rex.WXB add BYTE PTR [r13+0x0],al
   140005646:	pop    rcx
   140005647:	add    BYTE PTR [rdi+0x0],bl
   14000564a:	add    BYTE PTR [rbp+0x0],r12b
   14000564e:	jbe    0x140005650
   140005650:	imul   eax,DWORD PTR [rax],0x650063
   140005656:	add    BYTE PTR [rcx+0x0],r13b
   14000565a:	jae    0x14000565c
   14000565c:	jo     0x14000565e
   14000565e:	ins    BYTE PTR es:[rdi],dx
   14000565f:	add    BYTE PTR [rcx+0x0],ah
   140005662:	jns    0x140005664
   140005664:	pop    rdi
   140005665:	add    BYTE PTR [rcx+0x0],cl
   140005668:	jae    0x14000566a
   14000566a:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000566e:	movsxd eax,DWORD PTR [rax]
   140005670:	(bad)  
   140005671:	add    BYTE PTR [rax+rax*1+0x4d],ch
   140005675:	add    BYTE PTR [rcx+0x0],ah
   140005678:	movsxd eax,DWORD PTR [rax]
   14000567a:	push   0x6e006900
   14000567f:	add    BYTE PTR [rbp+0x0],ah
	...
   14000568e:	add    BYTE PTR [rax],al
   140005690:	push   rax
   140005691:	add    BYTE PTR [rbx+0x0],cl
   140005694:	add    BYTE PTR [r9+0x0],r11b
   140005698:	pop    rdi
   140005699:	add    BYTE PTR [rax+rax*1+0x65],al
   14000569d:	add    BYTE PTR [rsi+0x0],dh
   1400056a0:	imul   eax,DWORD PTR [rax],0x650063
   1400056a6:	add    BYTE PTR [rcx+0x0],r13b
   1400056aa:	jae    0x1400056ac
   1400056ac:	jo     0x1400056ae
   1400056ae:	ins    BYTE PTR es:[rdi],dx
   1400056af:	add    BYTE PTR [rcx+0x0],ah
   1400056b2:	jns    0x1400056b4
   1400056b4:	pop    rdi
   1400056b5:	add    BYTE PTR [rcx+0x0],cl
   1400056b8:	jae    0x1400056ba
   1400056ba:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400056be:	je     0x1400056c0
   1400056c0:	(bad)  
   1400056c1:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400056c5:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400056c9:	add    BYTE PTR [rbx+0x0],dl
   1400056cc:	add    BYTE PTR gs:[rcx+0x0],ah
   1400056d0:	jb     0x1400056d2
   1400056d2:	movsxd eax,DWORD PTR [rax]
   1400056d4:	push   0x6e004900
   1400056d9:	add    BYTE PTR [rax+0x0],dl
   1400056dc:	jb     0x1400056de
   1400056de:	outs   dx,DWORD PTR ds:[rsi]
   1400056df:	add    BYTE PTR [rdi+0x0],ah
   1400056e2:	jb     0x1400056e4
   1400056e4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400056e8:	jae    0x1400056ea
   1400056ea:	add    BYTE PTR [rax],al
   1400056ec:	add    BYTE PTR [rax],al
   1400056ee:	add    BYTE PTR [rax],al
   1400056f0:	push   rax
   1400056f1:	add    BYTE PTR [rbx+0x0],cl
   1400056f4:	add    BYTE PTR [r9+0x0],r11b
   1400056f8:	pop    rdi
   1400056f9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400056fd:	add    BYTE PTR [rsi+0x0],dh
   140005700:	imul   eax,DWORD PTR [rax],0x650063
   140005706:	add    BYTE PTR [rcx+0x0],r13b
   14000570a:	jae    0x14000570c
   14000570c:	jo     0x14000570e
   14000570e:	ins    BYTE PTR es:[rdi],dx
   14000570f:	add    BYTE PTR [rcx+0x0],ah
   140005712:	jns    0x140005714
   140005714:	pop    rdi
   140005715:	add    BYTE PTR [rcx+0x0],cl
   140005718:	jae    0x14000571a
   14000571a:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000571e:	je     0x140005720
   140005720:	ja     0x140005722
   140005722:	outs   dx,DWORD PTR ds:[rsi]
   140005723:	add    BYTE PTR [rdx+0x0],dh
   140005726:	imul   eax,DWORD PTR [rax],0x44
   140005729:	add    BYTE PTR [rbp+0x0],ah
   14000572c:	jbe    0x14000572e
   14000572e:	imul   eax,DWORD PTR [rax],0x650063
	...
   140005740:	push   rax
   140005741:	add    BYTE PTR [rbx+0x0],cl
   140005744:	add    BYTE PTR [r9+0x0],r11b
   140005748:	pop    rdi
   140005749:	add    BYTE PTR [rax+rax*1+0x65],al
   14000574d:	add    BYTE PTR [rsi+0x0],dh
   140005750:	imul   eax,DWORD PTR [rax],0x650063
   140005756:	add    BYTE PTR [rcx+0x0],r13b
   14000575a:	jae    0x14000575c
   14000575c:	jo     0x14000575e
   14000575e:	ins    BYTE PTR es:[rdi],dx
   14000575f:	add    BYTE PTR [rcx+0x0],ah
   140005762:	jns    0x140005764
   140005764:	pop    rdi
   140005765:	add    BYTE PTR [rcx+0x0],cl
   140005768:	jae    0x14000576a
   14000576a:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000576e:	je     0x140005770
   140005770:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005774:	je     0x140005776
   140005776:	add    BYTE PTR gs:[rdx+0x0],dh
   14000577a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000577e:	je     0x140005780
   140005780:	imul   eax,DWORD PTR [rax],0x67006e
   140005786:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000578a:	jb     0x14000578c
   14000578c:	add    BYTE PTR [rcx+0x0],r13b
   140005790:	jae    0x140005792
   140005792:	jo     0x140005794
   140005794:	ins    BYTE PTR es:[rdi],dx
   140005795:	add    BYTE PTR [rcx+0x0],ah
   140005798:	jns    0x14000579a
   14000579a:	add    BYTE PTR [rax],al
   14000579c:	add    BYTE PTR [rax],al
   14000579e:	add    BYTE PTR [rax],al
   1400057a0:	push   rax
   1400057a1:	add    BYTE PTR [rbx+0x0],cl
   1400057a4:	add    BYTE PTR [r9+0x0],r11b
   1400057a8:	pop    rdi
   1400057a9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400057ad:	add    BYTE PTR [rsi+0x0],dh
   1400057b0:	imul   eax,DWORD PTR [rax],0x650063
   1400057b6:	add    BYTE PTR [rcx+0x0],r13b
   1400057ba:	jae    0x1400057bc
   1400057bc:	jo     0x1400057be
   1400057be:	ins    BYTE PTR es:[rdi],dx
   1400057bf:	add    BYTE PTR [rcx+0x0],ah
   1400057c2:	jns    0x1400057c4
   1400057c4:	pop    rdi
   1400057c5:	add    BYTE PTR [rcx+0x0],cl
   1400057c8:	jae    0x1400057ca
   1400057ca:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400057ce:	je     0x1400057d0
   1400057d0:	push   rdi
   1400057d1:	add    BYTE PTR [rdi+0x0],ch
   1400057d4:	jb     0x1400057d6
   1400057d6:	imul   eax,DWORD PTR [rax],0x69
   1400057d9:	add    BYTE PTR [rsi+0x0],ch
   1400057dc:	add    BYTE PTR [eax+0x0],dl
   1400057e0:	jb     0x1400057e2
   1400057e2:	outs   dx,DWORD PTR ds:[rsi]
   1400057e3:	add    BYTE PTR [rax+0x0],dh
   1400057e6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400057ea:	ins    BYTE PTR es:[rdi],dx
   1400057eb:	add    BYTE PTR [rcx+0x0],bh
   1400057ee:	add    BYTE PTR [rax],al
   1400057f0:	push   rax
   1400057f1:	add    BYTE PTR [rbx+0x0],cl
   1400057f4:	add    BYTE PTR [r9+0x0],r11b
   1400057f8:	pop    rdi
   1400057f9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400057fd:	add    BYTE PTR [rsi+0x0],dh
   140005800:	imul   eax,DWORD PTR [rax],0x650063
   140005806:	add    BYTE PTR [rcx+0x0],r13b
   14000580a:	jae    0x14000580c
   14000580c:	jo     0x14000580e
   14000580e:	ins    BYTE PTR es:[rdi],dx
   14000580f:	add    BYTE PTR [rcx+0x0],ah
   140005812:	jns    0x140005814
   140005814:	pop    rdi
   140005815:	add    BYTE PTR [rcx+0x0],cl
   140005818:	jae    0x14000581a
   14000581a:	push   rax
   14000581b:	add    BYTE PTR [rcx+0x0],ah
   14000581e:	imul   eax,DWORD PTR [rax],0x650072
   140005824:	add    BYTE PTR fs:[rax],al
	...
   14000582f:	add    BYTE PTR [rax+0x0],dl
   140005832:	rex.WXB add BYTE PTR [r13+0x0],al
   140005836:	pop    rcx
   140005837:	add    BYTE PTR [rdi+0x0],bl
   14000583a:	add    BYTE PTR [rbp+0x0],r12b
   14000583e:	jbe    0x140005840
   140005840:	imul   eax,DWORD PTR [rax],0x650063
   140005846:	add    BYTE PTR [rcx+0x0],r13b
   14000584a:	jae    0x14000584c
   14000584c:	jo     0x14000584e
   14000584e:	ins    BYTE PTR es:[rdi],dx
   14000584f:	add    BYTE PTR [rcx+0x0],ah
   140005852:	jns    0x140005854
   140005854:	pop    rdi
   140005855:	add    BYTE PTR [rcx+0x0],cl
   140005858:	jae    0x14000585a
   14000585a:	push   rbx
   14000585b:	add    BYTE PTR [rax+0x0],ch
   14000585e:	(bad)  
   14000585f:	add    BYTE PTR [rdx+0x0],dh
   140005862:	add    BYTE PTR gs:[rax+rax*1+0x44],ah
   140005867:	add    BYTE PTR [rbp+0x0],ah
   14000586a:	jbe    0x14000586c
   14000586c:	imul   eax,DWORD PTR [rax],0x650063
	...
   14000587e:	add    BYTE PTR [rax],al
   140005880:	push   rax
   140005881:	add    BYTE PTR [rbx+0x0],cl
   140005884:	add    BYTE PTR [r9+0x0],r11b
   140005888:	pop    rdi
   140005889:	add    BYTE PTR [rax+rax*1+0x65],al
   14000588d:	add    BYTE PTR [rsi+0x0],dh
   140005890:	imul   eax,DWORD PTR [rax],0x650063
   140005896:	add    BYTE PTR [rcx+0x0],r13b
   14000589a:	jae    0x14000589c
   14000589c:	jo     0x14000589e
   14000589e:	ins    BYTE PTR es:[rdi],dx
   14000589f:	add    BYTE PTR [rcx+0x0],ah
   1400058a2:	jns    0x1400058a4
   1400058a4:	pop    rdi
   1400058a5:	add    BYTE PTR [rcx+0x0],cl
   1400058a8:	jae    0x1400058aa
   1400058aa:	push   rbx
   1400058ab:	add    BYTE PTR [rax+0x0],ch
   1400058ae:	outs   dx,DWORD PTR ds:[rsi]
   1400058af:	add    BYTE PTR [rdi+0x0],dh
   1400058b2:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400058b6:	add    BYTE PTR [rcx+0x0],r13b
   1400058ba:	jae    0x1400058bc
   1400058bc:	movsxd eax,DWORD PTR [rax]
   1400058be:	outs   dx,DWORD PTR ds:[rsi]
   1400058bf:	add    BYTE PTR [rsi+0x0],ch
   1400058c2:	outs   dx,BYTE PTR ds:[rsi]
   1400058c3:	add    BYTE PTR [rbp+0x0],ah
   1400058c6:	movsxd eax,DWORD PTR [rax]
   1400058c8:	je     0x1400058ca
   1400058ca:	add    BYTE PTR gs:[rax+rax*1+0x53],ah
   1400058cf:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400058d3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   1400058df:	add    BYTE PTR [rax+0x0],dl
   1400058e2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400058e6:	pop    rcx
   1400058e7:	add    BYTE PTR [rdi+0x0],bl
   1400058ea:	add    BYTE PTR [rbp+0x0],r12b
   1400058ee:	jbe    0x1400058f0
   1400058f0:	imul   eax,DWORD PTR [rax],0x650063
   1400058f6:	add    BYTE PTR [rcx+0x0],r13b
   1400058fa:	jae    0x1400058fc
   1400058fc:	jo     0x1400058fe
   1400058fe:	ins    BYTE PTR es:[rdi],dx
   1400058ff:	add    BYTE PTR [rcx+0x0],ah
   140005902:	jns    0x140005904
   140005904:	pop    rdi
   140005905:	add    BYTE PTR [rax+rax*1+0x61],cl
   140005909:	add    BYTE PTR [rbx+0x0],dh
   14000590c:	je     0x14000590e
   14000590e:	pop    rdi
   14000590f:	add    BYTE PTR [rbx+0x0],al
   140005912:	outs   dx,DWORD PTR ds:[rsi]
   140005913:	add    BYTE PTR [rsi+0x0],ch
   140005916:	outs   dx,BYTE PTR ds:[rsi]
   140005917:	add    BYTE PTR [rbp+0x0],ah
   14000591a:	movsxd eax,DWORD PTR [rax]
   14000591c:	je     0x14000591e
   14000591e:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140005923:	add    BYTE PTR [rax],al
   140005925:	add    BYTE PTR [rax],al
   140005927:	add    BYTE PTR [rax+0x0],dl
   14000592a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000592e:	pop    rcx
   14000592f:	add    BYTE PTR [rdi+0x0],bl
   140005932:	add    BYTE PTR [rbp+0x0],r12b
   140005936:	jbe    0x140005938
   140005938:	imul   eax,DWORD PTR [rax],0x650063
   14000593e:	add    BYTE PTR [rcx+0x0],r13b
   140005942:	jae    0x140005944
   140005944:	jo     0x140005946
   140005946:	ins    BYTE PTR es:[rdi],dx
   140005947:	add    BYTE PTR [rcx+0x0],ah
   14000594a:	jns    0x14000594c
   14000594c:	pop    rdi
   14000594d:	add    BYTE PTR [rax+rax*1+0x61],cl
   140005951:	add    BYTE PTR [rbx+0x0],dh
   140005954:	je     0x140005956
   140005956:	pop    rdi
   140005957:	add    BYTE PTR [rbx+0x0],dl
   14000595a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000595e:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000596f:	add    BYTE PTR [rax+0x0],dl
   140005972:	rex.WXB add BYTE PTR [r13+0x0],al
   140005976:	pop    rcx
   140005977:	add    BYTE PTR [rdi+0x0],bl
   14000597a:	add    BYTE PTR [rbp+0x0],r12b
   14000597e:	jbe    0x140005980
   140005980:	imul   eax,DWORD PTR [rax],0x650063
   140005986:	add    BYTE PTR [rcx+0x0],r13b
   14000598a:	jae    0x14000598c
   14000598c:	jo     0x14000598e
   14000598e:	ins    BYTE PTR es:[rdi],dx
   14000598f:	add    BYTE PTR [rcx+0x0],ah
   140005992:	jns    0x140005994
   140005994:	pop    rdi
   140005995:	add    BYTE PTR [rax+rax*1+0x61],cl
   140005999:	add    BYTE PTR [rbp+0x0],dh
   14000599c:	outs   dx,BYTE PTR ds:[rsi]
   14000599d:	add    BYTE PTR [rbx+0x0],ah
   1400059a0:	push   0x65004400
   1400059a5:	add    BYTE PTR [rsi+0x0],dh
   1400059a8:	imul   eax,DWORD PTR [rax],0x650063
   1400059ae:	push   rbx
   1400059af:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400059b3:	add    BYTE PTR [rdi+0x0],ah
   1400059b6:	add    BYTE PTR gs:[rsi+0x0],al
   1400059ba:	jb     0x1400059bc
   1400059bc:	outs   dx,DWORD PTR ds:[rsi]
   1400059bd:	add    BYTE PTR [rbp+0x0],ch
   1400059c0:	add    BYTE PTR [r8+0x0],r15b
   1400059c4:	jo     0x1400059c6
   1400059c6:	ins    BYTE PTR es:[rdi],dx
   1400059c7:	add    BYTE PTR [rdi+0x0],ch
   1400059ca:	jb     0x1400059cc
   1400059cc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   1400059e0:	push   rax
   1400059e1:	add    BYTE PTR [rbx+0x0],cl
   1400059e4:	add    BYTE PTR [r9+0x0],r11b
   1400059e8:	pop    rdi
   1400059e9:	add    BYTE PTR [rax+rax*1+0x65],al
   1400059ed:	add    BYTE PTR [rsi+0x0],dh
   1400059f0:	imul   eax,DWORD PTR [rax],0x650063
   1400059f6:	add    BYTE PTR [rcx+0x0],r13b
   1400059fa:	jae    0x1400059fc
   1400059fc:	jo     0x1400059fe
   1400059fe:	ins    BYTE PTR es:[rdi],dx
   1400059ff:	add    BYTE PTR [rcx+0x0],ah
   140005a02:	jns    0x140005a04
   140005a04:	pop    rdi
   140005a05:	add    BYTE PTR [rax+rax*1+0x61],cl
   140005a09:	add    BYTE PTR [rbp+0x0],dh
   140005a0c:	outs   dx,BYTE PTR ds:[rsi]
   140005a0d:	add    BYTE PTR [rbx+0x0],ah
   140005a10:	push   0x65004400
   140005a15:	add    BYTE PTR [rsi+0x0],dh
   140005a18:	imul   eax,DWORD PTR [rax],0x650063
   140005a1e:	push   rbx
   140005a1f:	add    BYTE PTR [rax+rax*1+0x61],dh
   140005a23:	add    BYTE PTR [rdi+0x0],ah
   140005a26:	add    BYTE PTR gs:[rdi+0x0],cl
   140005a2a:	outs   dx,BYTE PTR ds:[rsi]
   140005a2b:	add    BYTE PTR [rax+rax*1+0x65],al
   140005a2f:	add    BYTE PTR [rsi+0x0],dh
   140005a32:	imul   eax,DWORD PTR [rax],0x650063
   140005a38:	rex.XB add BYTE PTR [r15+0x0],bpl
   140005a3c:	outs   dx,BYTE PTR ds:[rsi]
   140005a3d:	add    BYTE PTR [rsi+0x0],ch
   140005a40:	add    BYTE PTR gs:[rbx+0x0],ah
   140005a44:	je     0x140005a46
	...
   140005a4e:	add    BYTE PTR [rax],al
   140005a50:	push   rax
   140005a51:	add    BYTE PTR [rbx+0x0],cl
   140005a54:	add    BYTE PTR [r9+0x0],r11b
   140005a58:	pop    rdi
   140005a59:	add    BYTE PTR [rax+rax*1+0x65],al
   140005a5d:	add    BYTE PTR [rsi+0x0],dh
   140005a60:	imul   eax,DWORD PTR [rax],0x650063
   140005a66:	add    BYTE PTR [rcx+0x0],r13b
   140005a6a:	jae    0x140005a6c
   140005a6c:	jo     0x140005a6e
   140005a6e:	ins    BYTE PTR es:[rdi],dx
   140005a6f:	add    BYTE PTR [rcx+0x0],ah
   140005a72:	jns    0x140005a74
   140005a74:	pop    rdi
   140005a75:	add    BYTE PTR [rbp+0x0],cl
   140005a78:	(bad)  
   140005a79:	add    BYTE PTR [rsi+0x0],ch
   140005a7c:	jne    0x140005a7e
   140005a7e:	data16 add BYTE PTR [rcx+0x0],ah
   140005a82:	movsxd eax,DWORD PTR [rax]
   140005a84:	je     0x140005a86
   140005a86:	jne    0x140005a88
   140005a88:	jb     0x140005a8a
   140005a8a:	add    BYTE PTR gs:[rdx+0x0],dh
   140005a8e:	add    BYTE PTR [rax],al
   140005a90:	push   rax
   140005a91:	add    BYTE PTR [rbx+0x0],cl
   140005a94:	add    BYTE PTR [r9+0x0],r11b
   140005a98:	pop    rdi
   140005a99:	add    BYTE PTR [rax+rax*1+0x65],al
   140005a9d:	add    BYTE PTR [rsi+0x0],dh
   140005aa0:	imul   eax,DWORD PTR [rax],0x650063
   140005aa6:	add    BYTE PTR [rcx+0x0],r13b
   140005aaa:	jae    0x140005aac
   140005aac:	jo     0x140005aae
   140005aae:	ins    BYTE PTR es:[rdi],dx
   140005aaf:	add    BYTE PTR [rcx+0x0],ah
   140005ab2:	jns    0x140005ab4
   140005ab4:	pop    rdi
   140005ab5:	add    BYTE PTR [rbp+0x0],cl
   140005ab8:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   140005abd:	add    BYTE PTR [rax+rax*1+0x61],ah
   140005ac1:	add    BYTE PTR [rax+rax*1+0x61],dh
   140005ac5:	add    BYTE PTR [rbx+0x0],al
   140005ac8:	(bad)  
   140005ac9:	add    BYTE PTR [rdx+0x0],ah
   140005acc:	imul   eax,DWORD PTR [rax],0x65006e
   140005ad2:	je     0x140005ad4
	...
   140005ae0:	push   rax
   140005ae1:	add    BYTE PTR [rbx+0x0],cl
   140005ae4:	add    BYTE PTR [r9+0x0],r11b
   140005ae8:	pop    rdi
   140005ae9:	add    BYTE PTR [rax+rax*1+0x65],al
   140005aed:	add    BYTE PTR [rsi+0x0],dh
   140005af0:	imul   eax,DWORD PTR [rax],0x650063
   140005af6:	add    BYTE PTR [rcx+0x0],r13b
   140005afa:	jae    0x140005afc
   140005afc:	jo     0x140005afe
   140005afe:	ins    BYTE PTR es:[rdi],dx
   140005aff:	add    BYTE PTR [rcx+0x0],ah
   140005b02:	jns    0x140005b04
   140005b04:	pop    rdi
   140005b05:	add    BYTE PTR [rbp+0x0],cl
   140005b08:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   140005b0d:	add    BYTE PTR [rax+rax*1+0x61],ah
   140005b11:	add    BYTE PTR [rax+rax*1+0x61],dh
   140005b15:	add    BYTE PTR [rbx+0x0],al
   140005b18:	push   0x63006500
   140005b1d:	add    BYTE PTR [rbx+0x0],ch
   140005b20:	jae    0x140005b22
   140005b22:	jne    0x140005b24
   140005b24:	ins    DWORD PTR es:[rdi],dx
	...
   140005b2d:	add    BYTE PTR [rax],al
   140005b2f:	add    BYTE PTR [rax+0x0],dl
   140005b32:	rex.WXB add BYTE PTR [r13+0x0],al
   140005b36:	pop    rcx
   140005b37:	add    BYTE PTR [rdi+0x0],bl
   140005b3a:	add    BYTE PTR [rbp+0x0],r12b
   140005b3e:	jbe    0x140005b40
   140005b40:	imul   eax,DWORD PTR [rax],0x650063
   140005b46:	add    BYTE PTR [rcx+0x0],r13b
   140005b4a:	jae    0x140005b4c
   140005b4c:	jo     0x140005b4e
   140005b4e:	ins    BYTE PTR es:[rdi],dx
   140005b4f:	add    BYTE PTR [rcx+0x0],ah
   140005b52:	jns    0x140005b54
   140005b54:	pop    rdi
   140005b55:	add    BYTE PTR [rbp+0x0],cl
   140005b58:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   140005b5d:	add    BYTE PTR [rax+rax*1+0x61],ah
   140005b61:	add    BYTE PTR [rax+rax*1+0x61],dh
   140005b65:	add    BYTE PTR [rax+0x0],dl
   140005b68:	(bad)  
   140005b69:	add    BYTE PTR [rax+rax*1+0x68],dh
   140005b6d:	add    BYTE PTR [rax],al
   140005b6f:	add    BYTE PTR [rax+0x0],dl
   140005b72:	rex.WXB add BYTE PTR [r13+0x0],al
   140005b76:	pop    rcx
   140005b77:	add    BYTE PTR [rdi+0x0],bl
   140005b7a:	add    BYTE PTR [rbp+0x0],r12b
   140005b7e:	jbe    0x140005b80
   140005b80:	imul   eax,DWORD PTR [rax],0x650063
   140005b86:	add    BYTE PTR [rcx+0x0],r13b
   140005b8a:	jae    0x140005b8c
   140005b8c:	jo     0x140005b8e
   140005b8e:	ins    BYTE PTR es:[rdi],dx
   140005b8f:	add    BYTE PTR [rcx+0x0],ah
   140005b92:	jns    0x140005b94
   140005b94:	pop    rdi
   140005b95:	add    BYTE PTR [rbp+0x0],cl
   140005b98:	outs   dx,DWORD PTR ds:[rsi]
   140005b99:	add    BYTE PTR [rax+rax*1+0x65],ah
   140005b9d:	add    BYTE PTR [rax+rax*1+0x4e],ch
   140005ba1:	add    BYTE PTR [rcx+0x0],ah
   140005ba4:	ins    DWORD PTR es:[rdi],dx
   140005ba5:	add    BYTE PTR [rbp+0x0],ah
	...
   140005bb0:	push   rax
   140005bb1:	add    BYTE PTR [rbx+0x0],cl
   140005bb4:	add    BYTE PTR [r9+0x0],r11b
   140005bb8:	pop    rdi
   140005bb9:	add    BYTE PTR [rax+rax*1+0x65],al
   140005bbd:	add    BYTE PTR [rsi+0x0],dh
   140005bc0:	imul   eax,DWORD PTR [rax],0x650063
   140005bc6:	add    BYTE PTR [rcx+0x0],r13b
   140005bca:	jae    0x140005bcc
   140005bcc:	jo     0x140005bce
   140005bce:	ins    BYTE PTR es:[rdi],dx
   140005bcf:	add    BYTE PTR [rcx+0x0],ah
   140005bd2:	jns    0x140005bd4
   140005bd4:	pop    rdi
   140005bd5:	add    BYTE PTR [rbp+0x0],cl
   140005bd8:	outs   dx,DWORD PTR ds:[rsi]
   140005bd9:	add    BYTE PTR [rax+rax*1+0x65],ah
   140005bdd:	add    BYTE PTR [rax+rax*1+0x4e],ch
   140005be1:	add    BYTE PTR [rbp+0x0],dh
   140005be4:	ins    DWORD PTR es:[rdi],dx
   140005be5:	add    BYTE PTR [rdx+0x0],ah
   140005be8:	add    BYTE PTR gs:[rdx+0x0],dh
   140005bec:	add    BYTE PTR [rax],al
   140005bee:	add    BYTE PTR [rax],al
   140005bf0:	push   rax
   140005bf1:	add    BYTE PTR [rbx+0x0],cl
   140005bf4:	add    BYTE PTR [r9+0x0],r11b
   140005bf8:	pop    rdi
   140005bf9:	add    BYTE PTR [rax+rax*1+0x65],al
   140005bfd:	add    BYTE PTR [rsi+0x0],dh
   140005c00:	imul   eax,DWORD PTR [rax],0x650063
   140005c06:	add    BYTE PTR [rcx+0x0],r13b
   140005c0a:	jae    0x140005c0c
   140005c0c:	jo     0x140005c0e
   140005c0e:	ins    BYTE PTR es:[rdi],dx
   140005c0f:	add    BYTE PTR [rcx+0x0],ah
   140005c12:	jns    0x140005c14
   140005c14:	pop    rdi
   140005c15:	add    BYTE PTR [rax+0x0],dl
   140005c18:	jb     0x140005c1a
   140005c1a:	imul   eax,DWORD PTR [rax],0x61006d
   140005c20:	jb     0x140005c22
   140005c22:	jns    0x140005c24
   140005c24:	rex.XB add BYTE PTR [r9+0x0],spl
   140005c28:	je     0x140005c2a
   140005c2a:	add    BYTE PTR gs:[rdi+0x0],ah
   140005c2e:	outs   dx,DWORD PTR ds:[rsi]
   140005c2f:	add    BYTE PTR [rdx+0x0],dh
   140005c32:	jns    0x140005c34
	...
   140005c40:	push   rax
   140005c41:	add    BYTE PTR [rbx+0x0],cl
   140005c44:	add    BYTE PTR [r9+0x0],r11b
   140005c48:	pop    rdi
   140005c49:	add    BYTE PTR [rax+rax*1+0x65],al
   140005c4d:	add    BYTE PTR [rsi+0x0],dh
   140005c50:	imul   eax,DWORD PTR [rax],0x650063
   140005c56:	add    BYTE PTR [rcx+0x0],r13b
   140005c5a:	jae    0x140005c5c
   140005c5c:	jo     0x140005c5e
   140005c5e:	ins    BYTE PTR es:[rdi],dx
   140005c5f:	add    BYTE PTR [rcx+0x0],ah
   140005c62:	jns    0x140005c64
   140005c64:	pop    rdi
   140005c65:	add    BYTE PTR [rdx+0x0],dl
   140005c68:	add    BYTE PTR gs:[rcx+0x0],dh
   140005c6c:	jne    0x140005c6e
   140005c6e:	imul   eax,DWORD PTR [rax],0x650072
   140005c74:	jae    0x140005c76
   140005c76:	push   rax
   140005c77:	add    BYTE PTR [rcx+0x0],ah
   140005c7a:	imul   eax,DWORD PTR [rax],0x690072
   140005c80:	outs   dx,BYTE PTR ds:[rsi]
   140005c81:	add    BYTE PTR [rdi+0x0],ah
   140005c84:	add    BYTE PTR [r8+rax*1+0x65],r13b
   140005c89:	add    BYTE PTR [rsi+0x0],dh
   140005c8c:	(bad)  
   140005c8d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140005c91:	add    BYTE PTR [rdi+0x0],ch
   140005c94:	outs   dx,BYTE PTR ds:[rsi]
   140005c95:	add    BYTE PTR [rax],al
   140005c97:	add    BYTE PTR [rax+0x0],dl
   140005c9a:	rex.WXB add BYTE PTR [r13+0x0],al
   140005c9e:	pop    rcx
   140005c9f:	add    BYTE PTR [rdi+0x0],bl
   140005ca2:	add    BYTE PTR [rbp+0x0],r12b
   140005ca6:	jbe    0x140005ca8
   140005ca8:	imul   eax,DWORD PTR [rax],0x650063
   140005cae:	add    BYTE PTR [rcx+0x0],r13b
   140005cb2:	jae    0x140005cb4
   140005cb4:	jo     0x140005cb6
   140005cb6:	ins    BYTE PTR es:[rdi],dx
   140005cb7:	add    BYTE PTR [rcx+0x0],ah
   140005cba:	jns    0x140005cbc
   140005cbc:	pop    rdi
   140005cbd:	add    BYTE PTR [rsi+0x0],dl
   140005cc0:	add    BYTE PTR gs:[rdx+0x0],dh
   140005cc4:	jae    0x140005cc6
   140005cc6:	imul   eax,DWORD PTR [rax],0x6e006f
   140005ccc:	add    BYTE PTR [rax],al
   140005cce:	add    BYTE PTR [rax],al
   140005cd0:	push   rax
   140005cd1:	add    BYTE PTR [rbx+0x0],cl
   140005cd4:	add    BYTE PTR [r9+0x0],r11b
   140005cd8:	pop    rdi
   140005cd9:	add    BYTE PTR [rax+rax*1+0x65],al
   140005cdd:	add    BYTE PTR [rsi+0x0],dh
   140005ce0:	imul   eax,DWORD PTR [rax],0x650063
   140005ce6:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005cea:	je     0x140005cec
   140005cec:	add    BYTE PTR gs:[rdx+0x0],dh
   140005cf0:	data16 add BYTE PTR [rcx+0x0],ah
   140005cf4:	movsxd eax,DWORD PTR [rax]
   140005cf6:	add    BYTE PTR gs:[rdi+0x0],bl
   140005cfa:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140005cff:	add    BYTE PTR [rbx+0x0],dh
   140005d02:	jae    0x140005d04
   140005d04:	rex.RXB add BYTE PTR [r13+0x0],r14b
   140005d08:	imul   eax,DWORD PTR [rax],0x64
   140005d0e:	add    BYTE PTR [rax],al
   140005d10:	push   rax
   140005d11:	add    BYTE PTR [rbx+0x0],cl
   140005d14:	add    BYTE PTR [r9+0x0],r11b
   140005d18:	pop    rdi
   140005d19:	add    BYTE PTR [rax+rax*1+0x65],al
   140005d1d:	add    BYTE PTR [rsi+0x0],dh
   140005d20:	imul   eax,DWORD PTR [rax],0x650063
   140005d26:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005d2a:	je     0x140005d2c
   140005d2c:	add    BYTE PTR gs:[rdx+0x0],dh
   140005d30:	data16 add BYTE PTR [rcx+0x0],ah
   140005d34:	movsxd eax,DWORD PTR [rax]
   140005d36:	add    BYTE PTR gs:[rdi+0x0],bl
   140005d3a:	add    BYTE PTR [rbp+0x0],r12b
   140005d3e:	jbe    0x140005d40
   140005d40:	imul   eax,DWORD PTR [rax],0x650063
   140005d46:	push   rax
   140005d47:	add    BYTE PTR [rcx+0x0],ah
   140005d4a:	je     0x140005d4c
   140005d4c:	push   0x50000000
   140005d51:	add    BYTE PTR [rbx+0x0],cl
   140005d54:	add    BYTE PTR [r9+0x0],r11b
   140005d58:	pop    rdi
   140005d59:	add    BYTE PTR [rax+rax*1+0x65],al
   140005d5d:	add    BYTE PTR [rsi+0x0],dh
   140005d60:	imul   eax,DWORD PTR [rax],0x650063
   140005d66:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005d6a:	je     0x140005d6c
   140005d6c:	add    BYTE PTR gs:[rdx+0x0],dh
   140005d70:	data16 add BYTE PTR [rcx+0x0],ah
   140005d74:	movsxd eax,DWORD PTR [rax]
   140005d76:	add    BYTE PTR gs:[rdi+0x0],bl
   140005d7a:	add    BYTE PTR [r14+0x0],r13b
   140005d7e:	(bad)  
   140005d7f:	add    BYTE PTR [rdx+0x0],ah
   140005d82:	ins    BYTE PTR es:[rdi],dx
   140005d83:	add    BYTE PTR [rbp+0x0],ah
   140005d86:	add    BYTE PTR fs:[rax],al
   140005d89:	add    BYTE PTR [rax],al
   140005d8b:	add    BYTE PTR [rax],al
   140005d8d:	add    BYTE PTR [rax],al
   140005d8f:	add    BYTE PTR [rax+0x0],dl
   140005d92:	rex.WXB add BYTE PTR [r13+0x0],al
   140005d96:	pop    rcx
   140005d97:	add    BYTE PTR [rdi+0x0],bl
   140005d9a:	add    BYTE PTR [rbp+0x0],r12b
   140005d9e:	jbe    0x140005da0
   140005da0:	imul   eax,DWORD PTR [rax],0x650063
   140005da6:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005daa:	je     0x140005dac
   140005dac:	add    BYTE PTR gs:[rdx+0x0],dh
   140005db0:	data16 add BYTE PTR [rcx+0x0],ah
   140005db4:	movsxd eax,DWORD PTR [rax]
   140005db6:	add    BYTE PTR gs:[rdi+0x0],bl
   140005dba:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140005dbe:	imul   eax,DWORD PTR [rax],0x6e0065
   140005dc4:	add    BYTE PTR fs:[rax+rax*1+0x79],ch
   140005dc9:	add    BYTE PTR [rsi+0x0],cl
   140005dcc:	(bad)  
   140005dcd:	add    BYTE PTR [rbp+0x0],ch
   140005dd0:	add    BYTE PTR gs:[rax],al
	...
   140005ddf:	add    BYTE PTR [rax+0x0],dl
   140005de2:	rex.WXB add BYTE PTR [r13+0x0],al
   140005de6:	pop    rcx
   140005de7:	add    BYTE PTR [rdi+0x0],bl
   140005dea:	add    BYTE PTR [rdx+0x0],r14b
   140005dee:	imul   eax,DWORD PTR [rax],0x650076
   140005df4:	jb     0x140005df6
   140005df6:	push   rax
   140005df7:	add    BYTE PTR [rcx+0x0],ah
   140005dfa:	movsxd eax,DWORD PTR [rax]
   140005dfc:	imul   eax,DWORD PTR [rax],0x61
   140005dff:	add    BYTE PTR [rdi+0x0],ah
   140005e02:	add    BYTE PTR gs:[rdi+0x0],bl
   140005e06:	rex.X add BYTE PTR [rdx+0x0],sil
   140005e0a:	(bad)  
   140005e0b:	add    BYTE PTR [rsi+0x0],ch
   140005e0e:	add    BYTE PTR fs:[rcx+0x0],ch
   140005e12:	outs   dx,BYTE PTR ds:[rsi]
   140005e13:	add    BYTE PTR [rdi+0x0],ah
   140005e16:	rex.WB add BYTE PTR [r11+0x0],spl
   140005e1a:	outs   dx,DWORD PTR ds:[rsi]
   140005e1b:	add    BYTE PTR [rsi+0x0],ch
   140005e1e:	add    BYTE PTR [rax],al
   140005e20:	push   rax
   140005e21:	add    BYTE PTR [rbx+0x0],cl
   140005e24:	add    BYTE PTR [r9+0x0],r11b
   140005e28:	pop    rdi
   140005e29:	add    BYTE PTR [rax+rax*1+0x72],al
   140005e2d:	add    BYTE PTR [rcx+0x0],ch
   140005e30:	jbe    0x140005e32
   140005e32:	add    BYTE PTR gs:[rdx+0x0],dh
   140005e36:	push   rax
   140005e37:	add    BYTE PTR [rcx+0x0],ah
   140005e3a:	movsxd eax,DWORD PTR [rax]
   140005e3c:	imul   eax,DWORD PTR [rax],0x61
   140005e3f:	add    BYTE PTR [rdi+0x0],ah
   140005e42:	add    BYTE PTR gs:[rdi+0x0],bl
   140005e46:	add    BYTE PTR [rbp+0x0],r12b
   140005e4a:	je     0x140005e4c
   140005e4c:	(bad)  
   140005e4d:	add    BYTE PTR [rcx+0x0],ch
   140005e50:	ins    BYTE PTR es:[rdi],dx
   140005e51:	add    BYTE PTR [rbp+0x0],ah
   140005e54:	add    BYTE PTR fs:[rax+rax*1+0x65],al
   140005e59:	add    BYTE PTR [rbx+0x0],dh
   140005e5c:	movsxd eax,DWORD PTR [rax]
   140005e5e:	jb     0x140005e60
   140005e60:	imul   eax,DWORD PTR [rax],0x740070
   140005e66:	imul   eax,DWORD PTR [rax],0x6e006f
   140005e6c:	add    BYTE PTR [rax],al
   140005e6e:	add    BYTE PTR [rax],al
   140005e70:	push   rax
   140005e71:	add    BYTE PTR [rbx+0x0],cl
   140005e74:	add    BYTE PTR [r9+0x0],r11b
   140005e78:	pop    rdi
   140005e79:	add    BYTE PTR [rax+rax*1+0x72],al
   140005e7d:	add    BYTE PTR [rcx+0x0],ch
   140005e80:	jbe    0x140005e82
   140005e82:	add    BYTE PTR gs:[rdx+0x0],dh
   140005e86:	push   rax
   140005e87:	add    BYTE PTR [rcx+0x0],ah
   140005e8a:	movsxd eax,DWORD PTR [rax]
   140005e8c:	imul   eax,DWORD PTR [rax],0x61
   140005e8f:	add    BYTE PTR [rdi+0x0],ah
   140005e92:	add    BYTE PTR gs:[rdi+0x0],bl
   140005e96:	add    BYTE PTR [rdi+0x0],r13b
   140005e9a:	movsxd eax,DWORD PTR [rax]
   140005e9c:	jne    0x140005e9e
   140005e9e:	ins    DWORD PTR es:[rdi],dx
   140005e9f:	add    BYTE PTR [rbp+0x0],ah
   140005ea2:	outs   dx,BYTE PTR ds:[rsi]
   140005ea3:	add    BYTE PTR [rax+rax*1+0x61],dh
   140005ea7:	add    BYTE PTR [rax+rax*1+0x69],dh
   140005eab:	add    BYTE PTR [rdi+0x0],ch
   140005eae:	outs   dx,BYTE PTR ds:[rsi]
   140005eaf:	add    BYTE PTR [rax+rax*1+0x69],cl
   140005eb3:	add    BYTE PTR [rsi+0x0],ch
   140005eb6:	imul   eax,DWORD PTR [rax],0x0
   140005eb9:	add    BYTE PTR [rax],al
   140005ebb:	add    BYTE PTR [rax],al
   140005ebd:	add    BYTE PTR [rax],al
   140005ebf:	add    BYTE PTR [rax+0x0],dl
   140005ec2:	rex.WXB add BYTE PTR [r13+0x0],al
   140005ec6:	pop    rcx
   140005ec7:	add    BYTE PTR [rdi+0x0],bl
   140005eca:	add    BYTE PTR [rdx+0x0],r14b
   140005ece:	imul   eax,DWORD PTR [rax],0x650076
   140005ed4:	jb     0x140005ed6
   140005ed6:	push   rax
   140005ed7:	add    BYTE PTR [rcx+0x0],ah
   140005eda:	movsxd eax,DWORD PTR [rax]
   140005edc:	imul   eax,DWORD PTR [rax],0x61
   140005edf:	add    BYTE PTR [rdi+0x0],ah
   140005ee2:	add    BYTE PTR gs:[rdi+0x0],bl
   140005ee6:	rex.WB add BYTE PTR [r11+0x0],spl
   140005eea:	outs   dx,DWORD PTR ds:[rsi]
   140005eeb:	add    BYTE PTR [rsi+0x0],ch
   140005eee:	add    BYTE PTR [rax],al
   140005ef0:	push   rax
   140005ef1:	add    BYTE PTR [rbx+0x0],cl
   140005ef4:	add    BYTE PTR [r9+0x0],r11b
   140005ef8:	pop    rdi
   140005ef9:	add    BYTE PTR [rax+rax*1+0x72],al
   140005efd:	add    BYTE PTR [rcx+0x0],ch
   140005f00:	jbe    0x140005f02
   140005f02:	add    BYTE PTR gs:[rdx+0x0],dh
   140005f06:	push   rax
   140005f07:	add    BYTE PTR [rcx+0x0],ah
   140005f0a:	movsxd eax,DWORD PTR [rax]
   140005f0c:	imul   eax,DWORD PTR [rax],0x61
   140005f0f:	add    BYTE PTR [rdi+0x0],ah
   140005f12:	add    BYTE PTR gs:[rdi+0x0],bl
   140005f16:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140005f1a:	add    BYTE PTR fs:[rbp+0x0],ah
   140005f1e:	ins    BYTE PTR es:[rdi],dx
	...
   140005f2f:	add    BYTE PTR [rax+0x0],dl
   140005f32:	rex.WXB add BYTE PTR [r13+0x0],al
   140005f36:	pop    rcx
   140005f37:	add    BYTE PTR [rdi+0x0],bl
   140005f3a:	add    BYTE PTR [rdx+0x0],r14b
   140005f3e:	imul   eax,DWORD PTR [rax],0x650076
   140005f44:	jb     0x140005f46
   140005f46:	push   rax
   140005f47:	add    BYTE PTR [rcx+0x0],ah
   140005f4a:	movsxd eax,DWORD PTR [rax]
   140005f4c:	imul   eax,DWORD PTR [rax],0x61
   140005f4f:	add    BYTE PTR [rdi+0x0],ah
   140005f52:	add    BYTE PTR gs:[rdi+0x0],bl
   140005f56:	push   rsi
   140005f57:	add    BYTE PTR [rbp+0x0],ah
   140005f5a:	outs   dx,BYTE PTR ds:[rsi]
   140005f5b:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140005f5f:	add    BYTE PTR [rdx+0x0],dh
   140005f62:	push   rdi
   140005f63:	add    BYTE PTR [rbp+0x0],ah
   140005f66:	(bad)  
   140005f67:	add    BYTE PTR [rbx+0x0],dl
   140005f6a:	imul   eax,DWORD PTR [rax],0x650074
	...
   140005f78:	push   rax
   140005f79:	add    BYTE PTR [rbx+0x0],cl
   140005f7c:	add    BYTE PTR [r9+0x0],r11b
   140005f80:	pop    rdi
   140005f81:	add    BYTE PTR [rsi+0x0],al
   140005f84:	add    BYTE PTR [rdi+0x0],r11b
   140005f88:	push   rsi
   140005f89:	add    BYTE PTR [rcx+0x0],ch
   140005f8c:	jae    0x140005f8e
   140005f8e:	imul   eax,DWORD PTR [rax],0x690062
   140005f94:	ins    BYTE PTR es:[rdi],dx
   140005f95:	add    BYTE PTR [rcx+0x0],ch
   140005f98:	je     0x140005f9a
   140005f9a:	jns    0x140005f9c
   140005f9c:	add    BYTE PTR [rax],al
   140005f9e:	add    BYTE PTR [rax],al
   140005fa0:	push   rax
   140005fa1:	add    BYTE PTR [rbx+0x0],cl
   140005fa4:	add    BYTE PTR [r9+0x0],r11b
   140005fa8:	pop    rdi
   140005fa9:	add    BYTE PTR [rax+0x0],cl
   140005fac:	(bad)  
   140005fad:	add    BYTE PTR [rdx+0x0],dh
   140005fb0:	add    BYTE PTR fs:[rdi+0x0],dh
   140005fb4:	(bad)  
   140005fb5:	add    BYTE PTR [rdx+0x0],dh
   140005fb8:	add    BYTE PTR gs:[rdi+0x0],bl
   140005fbc:	add    BYTE PTR [rbp+0x0],r12b
   140005fc0:	jbe    0x140005fc2
   140005fc2:	imul   eax,DWORD PTR [rax],0x73006e
   140005fc8:	je     0x140005fca
   140005fca:	add    BYTE PTR [rax],al
   140005fcc:	add    BYTE PTR [rax],al
   140005fce:	add    BYTE PTR [rax],al
   140005fd0:	push   rax
   140005fd1:	add    BYTE PTR [rbx+0x0],cl
   140005fd4:	add    BYTE PTR [r9+0x0],r11b
   140005fd8:	pop    rdi
   140005fd9:	add    BYTE PTR [rax+0x0],cl
   140005fdc:	(bad)  
   140005fdd:	add    BYTE PTR [rdx+0x0],dh
   140005fe0:	add    BYTE PTR fs:[rdi+0x0],dh
   140005fe4:	(bad)  
   140005fe5:	add    BYTE PTR [rdx+0x0],dh
   140005fe8:	add    BYTE PTR gs:[rdi+0x0],bl
   140005fec:	add    BYTE PTR [rcx+0x0],r13b
   140005ff0:	jae    0x140005ff2
   140005ff2:	jo     0x140005ff4
   140005ff4:	ins    BYTE PTR es:[rdi],dx
   140005ff5:	add    BYTE PTR [rcx+0x0],ah
   140005ff8:	jns    0x140005ffa
   140005ffa:	add    BYTE PTR [r8+rax*1+0x74],sil
   140005fff:	add    BYTE PTR [rdx+0x0],dh
   140006002:	imul   eax,DWORD PTR [rax],0x750062
   140006008:	je     0x14000600a
   14000600a:	add    BYTE PTR gs:[rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rax+0x0],dl
   140006012:	rex.WXB add BYTE PTR [r13+0x0],al
   140006016:	pop    rcx
   140006017:	add    BYTE PTR [rdi+0x0],bl
   14000601a:	rex.W add BYTE PTR [rcx+0x0],spl
   14000601e:	jb     0x140006020
   140006020:	add    BYTE PTR fs:[rdi+0x0],dh
   140006024:	(bad)  
   140006025:	add    BYTE PTR [rdx+0x0],dh
   140006028:	add    BYTE PTR gs:[rdi+0x0],bl
   14000602c:	add    BYTE PTR [rdx+0x0],r14b
   140006030:	imul   eax,DWORD PTR [rax],0x650076
   140006036:	jb     0x140006038
   140006038:	add    BYTE PTR [rcx+0x0],r12b
   14000603c:	je     0x14000603e
   14000603e:	add    BYTE PTR gs:[rax],al
   140006041:	add    BYTE PTR [rax],al
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rax+0x0],dl
   14000604a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000604e:	pop    rcx
   14000604f:	add    BYTE PTR [rdi+0x0],bl
   140006052:	rex.W add BYTE PTR [rcx+0x0],spl
   140006056:	jb     0x140006058
   140006058:	add    BYTE PTR fs:[rdi+0x0],dh
   14000605c:	(bad)  
   14000605d:	add    BYTE PTR [rdx+0x0],dh
   140006060:	add    BYTE PTR gs:[rdi+0x0],bl
   140006064:	add    BYTE PTR [rdx+0x0],r14b
   140006068:	imul   eax,DWORD PTR [rax],0x650076
   14000606e:	jb     0x140006070
   140006070:	push   rax
   140006071:	add    BYTE PTR [rdx+0x0],dh
   140006074:	outs   dx,DWORD PTR ds:[rsi]
   140006075:	add    BYTE PTR [rsi+0x0],dh
   140006078:	imul   eax,DWORD PTR [rax],0x650064
   14000607e:	jb     0x140006080
	...
   140006088:	push   rax
   140006089:	add    BYTE PTR [rbx+0x0],cl
   14000608c:	add    BYTE PTR [r9+0x0],r11b
   140006090:	pop    rdi
   140006091:	add    BYTE PTR [rax+0x0],cl
   140006094:	(bad)  
   140006095:	add    BYTE PTR [rdx+0x0],dh
   140006098:	add    BYTE PTR fs:[rdi+0x0],dh
   14000609c:	(bad)  
   14000609d:	add    BYTE PTR [rdx+0x0],dh
   1400060a0:	add    BYTE PTR gs:[rdi+0x0],bl
   1400060a4:	add    BYTE PTR [rdx+0x0],r14b
   1400060a8:	imul   eax,DWORD PTR [rax],0x650076
   1400060ae:	jb     0x1400060b0
   1400060b0:	push   rsi
   1400060b1:	add    BYTE PTR [rbp+0x0],ah
   1400060b4:	jb     0x1400060b6
   1400060b6:	jae    0x1400060b8
   1400060b8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	push   rax
   1400060c1:	add    BYTE PTR [rbx+0x0],cl
   1400060c4:	add    BYTE PTR [r9+0x0],r11b
   1400060c8:	pop    rdi
   1400060c9:	add    BYTE PTR [rax+0x0],cl
   1400060cc:	(bad)  
   1400060cd:	add    BYTE PTR [rdx+0x0],dh
   1400060d0:	add    BYTE PTR fs:[rdi+0x0],dh
   1400060d4:	(bad)  
   1400060d5:	add    BYTE PTR [rdx+0x0],dh
   1400060d8:	add    BYTE PTR gs:[rdi+0x0],bl
   1400060dc:	rex.RX add BYTE PTR [rbp+0x0],r14b
   1400060e0:	outs   dx,BYTE PTR ds:[rsi]
   1400060e1:	add    BYTE PTR [rbx+0x0],ah
   1400060e4:	je     0x1400060e6
   1400060e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	push   rax
   1400060f1:	add    BYTE PTR [rbx+0x0],cl
   1400060f4:	add    BYTE PTR [r9+0x0],r11b
   1400060f8:	pop    rdi
   1400060f9:	add    BYTE PTR [rax+0x0],cl
   1400060fc:	(bad)  
   1400060fd:	add    BYTE PTR [rdx+0x0],dh
   140006100:	add    BYTE PTR fs:[rdi+0x0],dh
   140006104:	(bad)  
   140006105:	add    BYTE PTR [rdx+0x0],dh
   140006108:	add    BYTE PTR gs:[rdi+0x0],bl
   14000610c:	rex.WB add BYTE PTR [r11+0x0],spl
   140006110:	outs   dx,DWORD PTR ds:[rsi]
   140006111:	add    BYTE PTR [rsi+0x0],ch
   140006114:	add    BYTE PTR [rax],al
   140006116:	add    BYTE PTR [rax],al
   140006118:	push   rax
   140006119:	add    BYTE PTR [rbx+0x0],cl
   14000611c:	add    BYTE PTR [r9+0x0],r11b
   140006120:	pop    rdi
   140006121:	add    BYTE PTR [rax+0x0],cl
   140006124:	(bad)  
   140006125:	add    BYTE PTR [rdx+0x0],dh
   140006128:	add    BYTE PTR fs:[rdi+0x0],dh
   14000612c:	(bad)  
   14000612d:	add    BYTE PTR [rdx+0x0],dh
   140006130:	add    BYTE PTR gs:[rdi+0x0],bl
   140006134:	rex.WB add BYTE PTR [r13+0x0],bpl
   140006138:	(bad)  
   140006139:	add    BYTE PTR [rdi+0x0],ah
   14000613c:	add    BYTE PTR gs:[rax],al
   14000613f:	add    BYTE PTR [rax+0x0],dl
   140006142:	rex.WXB add BYTE PTR [r13+0x0],al
   140006146:	pop    rcx
   140006147:	add    BYTE PTR [rdi+0x0],bl
   14000614a:	rex.W add BYTE PTR [rcx+0x0],spl
   14000614e:	jb     0x140006150
   140006150:	add    BYTE PTR fs:[rdi+0x0],dh
   140006154:	(bad)  
   140006155:	add    BYTE PTR [rdx+0x0],dh
   140006158:	add    BYTE PTR gs:[rdi+0x0],bl
   14000615c:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140006160:	outs   dx,BYTE PTR ds:[rsi]
   140006161:	add    BYTE PTR [rbp+0x0],dh
   140006164:	data16 add BYTE PTR [rcx+0x0],ah
   140006168:	movsxd eax,DWORD PTR [rax]
   14000616a:	je     0x14000616c
   14000616c:	jne    0x14000616e
   14000616e:	jb     0x140006170
   140006170:	add    BYTE PTR gs:[rdx+0x0],dh
   140006174:	add    BYTE PTR [rax],al
   140006176:	add    BYTE PTR [rax],al
   140006178:	push   rax
   140006179:	add    BYTE PTR [rbx+0x0],cl
   14000617c:	add    BYTE PTR [r9+0x0],r11b
   140006180:	pop    rdi
   140006181:	add    BYTE PTR [rax+0x0],cl
   140006184:	(bad)  
   140006185:	add    BYTE PTR [rdx+0x0],dh
   140006188:	add    BYTE PTR fs:[rdi+0x0],dh
   14000618c:	(bad)  
   14000618d:	add    BYTE PTR [rdx+0x0],dh
   140006190:	add    BYTE PTR gs:[rdi+0x0],bl
   140006194:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006198:	add    BYTE PTR fs:[rbp+0x0],ah
   14000619c:	ins    BYTE PTR es:[rdi],dx
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    BYTE PTR [rax+0x0],dl
   1400061a2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400061a6:	pop    rcx
   1400061a7:	add    BYTE PTR [rdi+0x0],bl
   1400061aa:	rex.W add BYTE PTR [rcx+0x0],spl
   1400061ae:	jb     0x1400061b0
   1400061b0:	add    BYTE PTR fs:[rdi+0x0],dh
   1400061b4:	(bad)  
   1400061b5:	add    BYTE PTR [rdx+0x0],dh
   1400061b8:	add    BYTE PTR gs:[rdi+0x0],bl
   1400061bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400061c0:	ins    DWORD PTR es:[rdi],dx
   1400061c1:	add    BYTE PTR [rbp+0x0],ah
   1400061c4:	add    BYTE PTR [rax],al
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	push   rax
   1400061c9:	add    BYTE PTR [rbx+0x0],cl
   1400061cc:	add    BYTE PTR [r9+0x0],r11b
   1400061d0:	pop    rdi
   1400061d1:	add    BYTE PTR [rax+0x0],cl
   1400061d4:	(bad)  
   1400061d5:	add    BYTE PTR [rdx+0x0],dh
   1400061d8:	add    BYTE PTR fs:[rdi+0x0],dh
   1400061dc:	(bad)  
   1400061dd:	add    BYTE PTR [rdx+0x0],dh
   1400061e0:	add    BYTE PTR gs:[rdi+0x0],bl
   1400061e4:	push   rbx
   1400061e5:	add    BYTE PTR [rbp+0x0],ah
   1400061e8:	jb     0x1400061ea
   1400061ea:	imul   eax,DWORD PTR [rax],0x6c0061
   1400061f0:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   1400061f4:	ins    DWORD PTR es:[rdi],dx
   1400061f5:	add    BYTE PTR [rdx+0x0],ah
   1400061f8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	push   rax
   140006201:	add    BYTE PTR [rbx+0x0],cl
   140006204:	add    BYTE PTR [r9+0x0],r11b
   140006208:	pop    rdi
   140006209:	add    BYTE PTR [rax+0x0],cl
   14000620c:	(bad)  
   14000620d:	add    BYTE PTR [rdx+0x0],dh
   140006210:	add    BYTE PTR fs:[rdi+0x0],dh
   140006214:	(bad)  
   140006215:	add    BYTE PTR [rdx+0x0],dh
   140006218:	add    BYTE PTR gs:[rdi+0x0],bl
   14000621c:	push   rbx
   14000621d:	add    BYTE PTR [rax+0x0],ch
   140006220:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140006225:	add    BYTE PTR [rcx+0x0],al
   140006228:	je     0x14000622a
   14000622a:	je     0x14000622c
   14000622c:	jb     0x14000622e
   14000622e:	imul   eax,DWORD PTR [rax],0x750062
   140006234:	je     0x140006236
   140006236:	add    BYTE PTR gs:[rbx+0x0],dh
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	push   rax
   140006241:	add    BYTE PTR [rbx+0x0],cl
   140006244:	add    BYTE PTR [r9+0x0],r11b
   140006248:	pop    rdi
   140006249:	add    BYTE PTR [rax+0x0],cl
   14000624c:	(bad)  
   14000624d:	add    BYTE PTR [rdx+0x0],dh
   140006250:	add    BYTE PTR fs:[rdi+0x0],dh
   140006254:	(bad)  
   140006255:	add    BYTE PTR [rdx+0x0],dh
   140006258:	add    BYTE PTR gs:[rdi+0x0],bl
   14000625c:	push   rbx
   14000625d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006261:	add    BYTE PTR [rax+rax*1+0x75],dh
   140006265:	add    BYTE PTR [rbx+0x0],dh
	...
   140006270:	push   rax
   140006271:	add    BYTE PTR [rbx+0x0],cl
   140006274:	add    BYTE PTR [r9+0x0],r11b
   140006278:	pop    rdi
   140006279:	add    BYTE PTR [rcx+0x0],cl
   14000627c:	je     0x14000627e
   14000627e:	add    BYTE PTR gs:[rbp+0x0],ch
   140006282:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140006286:	ins    DWORD PTR es:[rdi],dx
   140006287:	add    BYTE PTR [rbp+0x0],ah
   14000628a:	add    BYTE PTR [rcx+0x0],r13b
   14000628e:	jae    0x140006290
   140006290:	jo     0x140006292
   140006292:	ins    BYTE PTR es:[rdi],dx
   140006293:	add    BYTE PTR [rcx+0x0],ah
   140006296:	jns    0x140006298
	...
   1400062a0:	push   rax
   1400062a1:	add    BYTE PTR [rbx+0x0],cl
   1400062a4:	add    BYTE PTR [r9+0x0],r11b
   1400062a8:	pop    rdi
   1400062a9:	add    BYTE PTR [rsi+0x0],cl
   1400062ac:	add    BYTE PTR [r13+0x0],cl
   1400062b0:	add    BYTE PTR [r8],r8b
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax+0x0],dl
   1400062ba:	rex.WXB add BYTE PTR [r13+0x0],al
   1400062be:	pop    rcx
   1400062bf:	add    BYTE PTR [rdi+0x0],bl
   1400062c2:	push   rax
   1400062c3:	add    BYTE PTR [rsi+0x0],cl
   1400062c6:	push   rax
   1400062c7:	add    BYTE PTR [rax+0x0],bl
   1400062ca:	pop    rdi
   1400062cb:	add    BYTE PTR [rcx+0x0],al
   1400062ce:	jae    0x1400062d0
   1400062d0:	jae    0x1400062d2
   1400062d2:	outs   dx,DWORD PTR ds:[rsi]
   1400062d3:	add    BYTE PTR [rbx+0x0],ah
   1400062d6:	imul   eax,DWORD PTR [rax],0x740061
   1400062dc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400062e1:	add    BYTE PTR [rax],al
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rax+0x0],dl
   1400062ea:	rex.WXB add BYTE PTR [r13+0x0],al
   1400062ee:	pop    rcx
   1400062ef:	add    BYTE PTR [rdi+0x0],bl
   1400062f2:	push   rax
   1400062f3:	add    BYTE PTR [rsi+0x0],cl
   1400062f6:	push   rax
   1400062f7:	add    BYTE PTR [rax+0x0],bl
   1400062fa:	pop    rdi
   1400062fb:	add    BYTE PTR [rbx+0x0],al
   1400062fe:	outs   dx,DWORD PTR ds:[rsi]
   1400062ff:	add    BYTE PTR [rbp+0x0],ch
   140006302:	jo     0x140006304
   140006304:	(bad)  
   140006305:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006309:	add    BYTE PTR [rdx+0x0],ah
   14000630c:	ins    BYTE PTR es:[rdi],dx
   14000630d:	add    BYTE PTR [rbp+0x0],ah
   140006310:	push   rsp
   140006311:	add    BYTE PTR [rcx+0x0],bh
   140006314:	jo     0x140006316
   140006316:	add    BYTE PTR gs:[rbx+0x0],dh
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	push   rax
   140006321:	add    BYTE PTR [rbx+0x0],cl
   140006324:	add    BYTE PTR [r9+0x0],r11b
   140006328:	pop    rdi
   140006329:	add    BYTE PTR [rax+0x0],dl
   14000632c:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006330:	pop    rax
   140006331:	add    BYTE PTR [rdi+0x0],bl
   140006334:	add    BYTE PTR [rbp+0x0],r12b
   140006338:	jbe    0x14000633a
   14000633a:	imul   eax,DWORD PTR [rax],0x650063
   140006340:	rex.XB add BYTE PTR [r9+0x0],spl
   140006344:	je     0x140006346
   140006346:	add    BYTE PTR gs:[rdi+0x0],ah
   14000634a:	outs   dx,DWORD PTR ds:[rsi]
   14000634b:	add    BYTE PTR [rdx+0x0],dh
   14000634e:	jns    0x140006350
	...
   140006358:	push   rax
   140006359:	add    BYTE PTR [rbx+0x0],cl
   14000635c:	add    BYTE PTR [r9+0x0],r11b
   140006360:	pop    rdi
   140006361:	add    BYTE PTR [rax+0x0],dl
   140006364:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006368:	pop    rax
   140006369:	add    BYTE PTR [rdi+0x0],bl
   14000636c:	add    BYTE PTR [rbp+0x0],r12b
   140006370:	jbe    0x140006372
   140006372:	imul   eax,DWORD PTR [rax],0x650063
   140006378:	rex.XB add BYTE PTR [r9+0x0],spl
   14000637c:	je     0x14000637e
   14000637e:	add    BYTE PTR gs:[rdi+0x0],ah
   140006382:	outs   dx,DWORD PTR ds:[rsi]
   140006383:	add    BYTE PTR [rdx+0x0],dh
   140006386:	jns    0x140006388
   140006388:	pop    rdi
   140006389:	add    BYTE PTR [rax+rax*1+0x65],al
   14000638d:	add    BYTE PTR [rbx+0x0],dh
   140006390:	movsxd eax,DWORD PTR [rax]
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	push   rax
   140006399:	add    BYTE PTR [rbx+0x0],cl
   14000639c:	add    BYTE PTR [r9+0x0],r11b
   1400063a0:	pop    rdi
   1400063a1:	add    BYTE PTR [rax+0x0],dl
   1400063a4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400063a8:	pop    rax
   1400063a9:	add    BYTE PTR [rdi+0x0],bl
   1400063ac:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400063b0:	jb     0x1400063b2
   1400063b2:	ins    DWORD PTR es:[rdi],dx
   1400063b3:	add    BYTE PTR [rdi+0x0],dh
   1400063b6:	(bad)  
   1400063b7:	add    BYTE PTR [rdx+0x0],dh
   1400063ba:	add    BYTE PTR gs:[rsi+0x0],dl
   1400063be:	add    BYTE PTR gs:[rdx+0x0],dh
   1400063c2:	jae    0x1400063c4
   1400063c4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	add    BYTE PTR [rax],al
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	push   rax
   1400063d1:	add    BYTE PTR [rbx+0x0],cl
   1400063d4:	add    BYTE PTR [r9+0x0],r11b
   1400063d8:	pop    rdi
   1400063d9:	add    BYTE PTR [rax+0x0],dl
   1400063dc:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400063e0:	pop    rax
   1400063e1:	add    BYTE PTR [rdi+0x0],bl
   1400063e4:	rex.RX add BYTE PTR [rdx+0x0],r14b
   1400063e8:	imul   eax,DWORD PTR [rax],0x6e0065
   1400063ee:	add    BYTE PTR fs:[rax+rax*1+0x79],ch
   1400063f3:	add    BYTE PTR [rsi+0x0],cl
   1400063f6:	(bad)  
   1400063f7:	add    BYTE PTR [rbp+0x0],ch
   1400063fa:	add    BYTE PTR gs:[rax],al
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax+0x0],dl
   140006402:	rex.WXB add BYTE PTR [r13+0x0],al
   140006406:	pop    rcx
   140006407:	add    BYTE PTR [rdi+0x0],bl
   14000640a:	push   rax
   14000640b:	add    BYTE PTR [rsi+0x0],cl
   14000640e:	push   rax
   14000640f:	add    BYTE PTR [rax+0x0],bl
   140006412:	pop    rdi
   140006413:	add    BYTE PTR [rdi+0x0],al
   140006416:	ins    BYTE PTR es:[rdi],dx
   140006417:	add    BYTE PTR [rdi+0x0],ch
   14000641a:	(bad)  
   14000641b:	add    BYTE PTR [rcx+0x0],ah
   14000641e:	ins    BYTE PTR es:[rdi],dx
   14000641f:	add    BYTE PTR [rcx+0x0],cl
   140006422:	add    BYTE PTR fs:[rbp+0x0],ah
   140006426:	outs   dx,BYTE PTR ds:[rsi]
   140006427:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000642b:	add    BYTE PTR [rax+rax*1+0x79],dh
	...
   140006437:	add    BYTE PTR [rax+0x0],dl
   14000643a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000643e:	pop    rcx
   14000643f:	add    BYTE PTR [rdi+0x0],bl
   140006442:	push   rax
   140006443:	add    BYTE PTR [rsi+0x0],cl
   140006446:	push   rax
   140006447:	add    BYTE PTR [rax+0x0],bl
   14000644a:	pop    rdi
   14000644b:	add    BYTE PTR [rcx+0x0],cl
   14000644e:	add    BYTE PTR [rax],r8b
   140006451:	add    BYTE PTR [rax],al
   140006453:	add    BYTE PTR [rax],al
   140006455:	add    BYTE PTR [rax],al
   140006457:	add    BYTE PTR [rax+0x0],dl
   14000645a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000645e:	pop    rcx
   14000645f:	add    BYTE PTR [rdi+0x0],bl
   140006462:	push   rax
   140006463:	add    BYTE PTR [rsi+0x0],cl
   140006466:	push   rax
   140006467:	add    BYTE PTR [rax+0x0],bl
   14000646a:	pop    rdi
   14000646b:	add    BYTE PTR [rcx+0x0],cl
   14000646e:	outs   dx,BYTE PTR ds:[rsi]
   14000646f:	add    BYTE PTR [rbx+0x0],dh
   140006472:	je     0x140006474
   140006474:	(bad)  
   140006475:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140006479:	add    BYTE PTR [rcx+0x0],ah
   14000647c:	(bad)  
   14000647d:	add    BYTE PTR [rax+rax*1+0x65],ch
   140006481:	add    BYTE PTR [rax],al
   140006483:	add    BYTE PTR [rax],al
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    BYTE PTR [rax+0x0],dl
   14000648a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000648e:	pop    rcx
   14000648f:	add    BYTE PTR [rdi+0x0],bl
   140006492:	push   rax
   140006493:	add    BYTE PTR [rsi+0x0],cl
   140006496:	push   rax
   140006497:	add    BYTE PTR [rax+0x0],bl
   14000649a:	pop    rdi
   14000649b:	add    BYTE PTR [rbp+0x0],cl
   14000649e:	(bad)  
   14000649f:	add    BYTE PTR [rsi+0x0],ch
   1400064a2:	jne    0x1400064a4
   1400064a4:	data16 add BYTE PTR [rcx+0x0],ah
   1400064a8:	movsxd eax,DWORD PTR [rax]
   1400064aa:	je     0x1400064ac
   1400064ac:	jne    0x1400064ae
   1400064ae:	jb     0x1400064b0
   1400064b0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400064b4:	add    BYTE PTR [rax],al
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	push   rax
   1400064b9:	add    BYTE PTR [rbx+0x0],cl
   1400064bc:	add    BYTE PTR [r9+0x0],r11b
   1400064c0:	pop    rdi
   1400064c1:	add    BYTE PTR [rax+0x0],dl
   1400064c4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400064c8:	pop    rax
   1400064c9:	add    BYTE PTR [rdi+0x0],bl
   1400064cc:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400064d0:	outs   dx,BYTE PTR ds:[rsi]
   1400064d1:	add    BYTE PTR [rbp+0x0],dh
   1400064d4:	data16 add BYTE PTR [rcx+0x0],ah
   1400064d8:	movsxd eax,DWORD PTR [rax]
   1400064da:	je     0x1400064dc
   1400064dc:	jne    0x1400064de
   1400064de:	jb     0x1400064e0
   1400064e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400064e4:	push   rbp
   1400064e5:	add    BYTE PTR [rdx+0x0],dh
   1400064e8:	ins    BYTE PTR es:[rdi],dx
   1400064e9:	add    BYTE PTR [rax],al
   1400064eb:	add    BYTE PTR [rax],al
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rax+0x0],dl
   1400064f2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400064f6:	pop    rcx
   1400064f7:	add    BYTE PTR [rdi+0x0],bl
   1400064fa:	push   rax
   1400064fb:	add    BYTE PTR [rsi+0x0],cl
   1400064fe:	push   rax
   1400064ff:	add    BYTE PTR [rax+0x0],bl
   140006502:	pop    rdi
   140006503:	add    BYTE PTR [rbp+0x0],cl
   140006506:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   14000650b:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000650f:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006513:	add    BYTE PTR [rsi+0x0],dl
   140006516:	add    BYTE PTR gs:[rdx+0x0],dh
   14000651a:	jae    0x14000651c
   14000651c:	imul   eax,DWORD PTR [rax],0x6e006f
   140006522:	add    BYTE PTR [rax],al
   140006524:	add    BYTE PTR [rax],al
   140006526:	add    BYTE PTR [rax],al
   140006528:	push   rax
   140006529:	add    BYTE PTR [rbx+0x0],cl
   14000652c:	add    BYTE PTR [r9+0x0],r11b
   140006530:	pop    rdi
   140006531:	add    BYTE PTR [rax+0x0],dl
   140006534:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006538:	pop    rax
   140006539:	add    BYTE PTR [rdi+0x0],bl
   14000653c:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006540:	add    BYTE PTR fs:[rbp+0x0],ah
   140006544:	ins    BYTE PTR es:[rdi],dx
   140006545:	add    BYTE PTR [rsi+0x0],cl
   140006548:	(bad)  
   140006549:	add    BYTE PTR [rbp+0x0],ch
   14000654c:	add    BYTE PTR gs:[rax],al
   14000654f:	add    BYTE PTR [rax+0x0],dl
   140006552:	rex.WXB add BYTE PTR [r13+0x0],al
   140006556:	pop    rcx
   140006557:	add    BYTE PTR [rdi+0x0],bl
   14000655a:	push   rax
   14000655b:	add    BYTE PTR [rsi+0x0],cl
   14000655e:	push   rax
   14000655f:	add    BYTE PTR [rax+0x0],bl
   140006562:	pop    rdi
   140006563:	add    BYTE PTR [rbp+0x0],cl
   140006566:	outs   dx,DWORD PTR ds:[rsi]
   140006567:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000656b:	add    BYTE PTR [rax+rax*1+0x4e],ch
   14000656f:	add    BYTE PTR [rbp+0x0],dh
   140006572:	ins    DWORD PTR es:[rdi],dx
   140006573:	add    BYTE PTR [rdx+0x0],ah
   140006576:	add    BYTE PTR gs:[rdx+0x0],dh
   14000657a:	add    BYTE PTR [rax],al
   14000657c:	add    BYTE PTR [rax],al
   14000657e:	add    BYTE PTR [rax],al
   140006580:	push   rax
   140006581:	add    BYTE PTR [rbx+0x0],cl
   140006584:	add    BYTE PTR [r9+0x0],r11b
   140006588:	pop    rdi
   140006589:	add    BYTE PTR [rax+0x0],dl
   14000658c:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006590:	pop    rax
   140006591:	add    BYTE PTR [rdi+0x0],bl
   140006594:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006598:	add    BYTE PTR fs:[rbp+0x0],ah
   14000659c:	ins    BYTE PTR es:[rdi],dx
   14000659d:	add    BYTE PTR [rbp+0x0],dl
   1400065a0:	jb     0x1400065a2
   1400065a2:	ins    BYTE PTR es:[rdi],dx
   1400065a3:	add    BYTE PTR [rax],al
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rax+0x0],dl
   1400065aa:	rex.WXB add BYTE PTR [r13+0x0],al
   1400065ae:	pop    rcx
   1400065af:	add    BYTE PTR [rdi+0x0],bl
   1400065b2:	push   rax
   1400065b3:	add    BYTE PTR [rsi+0x0],cl
   1400065b6:	push   rax
   1400065b7:	add    BYTE PTR [rax+0x0],bl
   1400065ba:	pop    rdi
   1400065bb:	add    BYTE PTR [rsi+0x0],cl
   1400065be:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   1400065c3:	add    BYTE PTR [rdi+0x0],ch
   1400065c6:	jb     0x1400065c8
   1400065c8:	imul   eax,DWORD PTR [rax],0x49
   1400065cb:	add    BYTE PTR [rsi+0x0],ch
   1400065ce:	je     0x1400065d0
   1400065d0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065d4:	data16 add BYTE PTR [rcx+0x0],ah
   1400065d8:	movsxd eax,DWORD PTR [rax]
   1400065da:	add    BYTE PTR gs:[rax+rax*1+0x75],cl
   1400065df:	add    BYTE PTR [rcx+0x0],ch
   1400065e2:	add    BYTE PTR fs:[rax],al
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rax+0x0],dl
   1400065ea:	rex.WXB add BYTE PTR [r13+0x0],al
   1400065ee:	pop    rcx
   1400065ef:	add    BYTE PTR [rdi+0x0],bl
   1400065f2:	push   rax
   1400065f3:	add    BYTE PTR [rsi+0x0],cl
   1400065f6:	push   rax
   1400065f7:	add    BYTE PTR [rax+0x0],bl
   1400065fa:	pop    rdi
   1400065fb:	add    BYTE PTR [rsi+0x0],cl
   1400065fe:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140006603:	add    BYTE PTR [rdi+0x0],ch
   140006606:	jb     0x140006608
   140006608:	imul   eax,DWORD PTR [rax],0x49
   14000660b:	add    BYTE PTR [rsi+0x0],ch
   14000660e:	je     0x140006610
   140006610:	add    BYTE PTR gs:[rdx+0x0],dh
   140006614:	data16 add BYTE PTR [rcx+0x0],ah
   140006618:	movsxd eax,DWORD PTR [rax]
   14000661a:	add    BYTE PTR gs:[rdi+0x0],al
   14000661e:	jne    0x140006620
   140006620:	imul   eax,DWORD PTR [rax],0x64
   140006626:	add    BYTE PTR [rax],al
   140006628:	push   rax
   140006629:	add    BYTE PTR [rbx+0x0],cl
   14000662c:	add    BYTE PTR [r9+0x0],r11b
   140006630:	pop    rdi
   140006631:	add    BYTE PTR [rax+0x0],dl
   140006634:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006638:	pop    rax
   140006639:	add    BYTE PTR [rdi+0x0],bl
   14000663c:	push   rax
   14000663d:	add    BYTE PTR [rax+0x0],ch
   140006640:	jns    0x140006642
   140006642:	jae    0x140006644
   140006644:	imul   eax,DWORD PTR [rax],0x610063
   14000664a:	ins    BYTE PTR es:[rdi],dx
   14000664b:	add    BYTE PTR [rcx+0x0],al
   14000664e:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   140006653:	add    BYTE PTR [rbp+0x0],ah
   140006656:	jae    0x140006658
   140006658:	jae    0x14000665a
   14000665a:	add    BYTE PTR [rax],al
   14000665c:	add    BYTE PTR [rax],al
   14000665e:	add    BYTE PTR [rax],al
   140006660:	push   rax
   140006661:	add    BYTE PTR [rbx+0x0],cl
   140006664:	add    BYTE PTR [r9+0x0],r11b
   140006668:	pop    rdi
   140006669:	add    BYTE PTR [rax+0x0],dl
   14000666c:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006670:	pop    rax
   140006671:	add    BYTE PTR [rdi+0x0],bl
   140006674:	push   rax
   140006675:	add    BYTE PTR [rdx+0x0],dh
   140006678:	add    BYTE PTR gs:[rbx+0x0],dh
   14000667c:	add    BYTE PTR gs:[rsi+0x0],ch
   140006680:	je     0x140006682
   140006682:	(bad)  
   140006683:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006687:	add    BYTE PTR [rdi+0x0],ch
   14000668a:	outs   dx,BYTE PTR ds:[rsi]
   14000668b:	add    BYTE PTR [rbp+0x0],dl
   14000668e:	jb     0x140006690
   140006690:	ins    BYTE PTR es:[rdi],dx
   140006691:	add    BYTE PTR [rax],al
   140006693:	add    BYTE PTR [rax],al
   140006695:	add    BYTE PTR [rax],al
   140006697:	add    BYTE PTR [rax+0x0],dl
   14000669a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000669e:	pop    rcx
   14000669f:	add    BYTE PTR [rdi+0x0],bl
   1400066a2:	push   rax
   1400066a3:	add    BYTE PTR [rsi+0x0],cl
   1400066a6:	push   rax
   1400066a7:	add    BYTE PTR [rax+0x0],bl
   1400066aa:	pop    rdi
   1400066ab:	add    BYTE PTR [rdx+0x0],dl
   1400066ae:	add    BYTE PTR gs:[rbp+0x0],ch
   1400066b2:	outs   dx,DWORD PTR ds:[rsi]
   1400066b3:	add    BYTE PTR [rsi+0x0],dh
   1400066b6:	(bad)  
   1400066b7:	add    BYTE PTR [rdx+0x0],ah
   1400066ba:	ins    BYTE PTR es:[rdi],dx
   1400066bb:	add    BYTE PTR [rbp+0x0],ah
   1400066be:	add    BYTE PTR [rax],al
   1400066c0:	push   rax
   1400066c1:	add    BYTE PTR [rbx+0x0],cl
   1400066c4:	add    BYTE PTR [r9+0x0],r11b
   1400066c8:	pop    rdi
   1400066c9:	add    BYTE PTR [rax+0x0],dl
   1400066cc:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400066d0:	pop    rax
   1400066d1:	add    BYTE PTR [rdi+0x0],bl
   1400066d4:	push   rbx
   1400066d5:	add    BYTE PTR [rbx+0x0],ah
   1400066d8:	outs   dx,DWORD PTR ds:[rsi]
   1400066d9:	add    BYTE PTR [rax+0x0],dh
   1400066dc:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   1400066e8:	push   rax
   1400066e9:	add    BYTE PTR [rbx+0x0],cl
   1400066ec:	add    BYTE PTR [r9+0x0],r11b
   1400066f0:	pop    rdi
   1400066f1:	add    BYTE PTR [rax+0x0],dl
   1400066f4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400066f8:	pop    rax
   1400066f9:	add    BYTE PTR [rdi+0x0],bl
   1400066fc:	push   rbx
   1400066fd:	add    BYTE PTR [rbp+0x0],ah
   140006700:	jb     0x140006702
   140006702:	imul   eax,DWORD PTR [rax],0x6c0061
   140006708:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14000670c:	ins    DWORD PTR es:[rdi],dx
   14000670d:	add    BYTE PTR [rdx+0x0],ah
   140006710:	add    BYTE PTR gs:[rdx+0x0],dh
   140006714:	add    BYTE PTR [rax],al
   140006716:	add    BYTE PTR [rax],al
   140006718:	push   rax
   140006719:	add    BYTE PTR [rbx+0x0],cl
   14000671c:	add    BYTE PTR [r9+0x0],r11b
   140006720:	pop    rdi
   140006721:	add    BYTE PTR [rax+0x0],dl
   140006724:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006728:	pop    rax
   140006729:	add    BYTE PTR [rdi+0x0],bl
   14000672c:	push   rbx
   14000672d:	add    BYTE PTR [rbp+0x0],ah
   140006730:	jb     0x140006732
   140006732:	jbe    0x140006734
   140006734:	imul   eax,DWORD PTR [rax],0x650063
   14000673a:	add    BYTE PTR [r8+rax*1+0x64],spl
   14000673f:	add    BYTE PTR [rdx+0x0],dh
   140006742:	add    BYTE PTR gs:[rbx+0x0],dh
   140006746:	jae    0x140006748
	...
   140006750:	push   rax
   140006751:	add    BYTE PTR [rbx+0x0],cl
   140006754:	add    BYTE PTR [r9+0x0],r11b
   140006758:	pop    rdi
   140006759:	add    BYTE PTR [rax+0x0],dl
   14000675c:	rex.WRX add BYTE PTR [rax+0x0],r10b
   140006760:	pop    rax
   140006761:	add    BYTE PTR [rdi+0x0],bl
   140006764:	push   rbx
   140006765:	add    BYTE PTR [rbp+0x0],ah
   140006768:	jb     0x14000676a
   14000676a:	jbe    0x14000676c
   14000676c:	imul   eax,DWORD PTR [rax],0x650063
   140006772:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   140006777:	add    BYTE PTR [rax+0x0],dl
   14000677a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000677e:	pop    rcx
   14000677f:	add    BYTE PTR [rdi+0x0],bl
   140006782:	push   rax
   140006783:	add    BYTE PTR [rsi+0x0],cl
   140006786:	push   rax
   140006787:	add    BYTE PTR [rax+0x0],bl
   14000678a:	pop    rdi
   14000678b:	add    BYTE PTR [rbx+0x0],dl
   14000678e:	add    BYTE PTR gs:[rdx+0x0],dh
   140006792:	jbe    0x140006794
   140006794:	imul   eax,DWORD PTR [rax],0x650063
   14000679a:	push   rsp
   14000679b:	add    BYTE PTR [rcx+0x0],bh
   14000679e:	jo     0x1400067a0
   1400067a0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400067a4:	add    BYTE PTR [rax],al
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	push   rax
   1400067a9:	add    BYTE PTR [rbx+0x0],cl
   1400067ac:	add    BYTE PTR [r9+0x0],r11b
   1400067b0:	pop    rdi
   1400067b1:	add    BYTE PTR [rax+0x0],dl
   1400067b4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400067b8:	pop    rax
   1400067b9:	add    BYTE PTR [rdi+0x0],bl
   1400067bc:	push   rsp
   1400067bd:	add    BYTE PTR [rcx+0x0],bh
   1400067c0:	jo     0x1400067c2
   1400067c2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	push   rax
   1400067c9:	add    BYTE PTR [rbx+0x0],cl
   1400067cc:	add    BYTE PTR [r9+0x0],r11b
   1400067d0:	pop    rdi
   1400067d1:	add    BYTE PTR [rax+0x0],dl
   1400067d4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400067d8:	pop    rax
   1400067d9:	add    BYTE PTR [rdi+0x0],bl
   1400067dc:	push   rbp
   1400067dd:	add    BYTE PTR [rax+0x0],dh
   1400067e0:	movsxd eax,DWORD PTR [rax]
   1400067e2:	add    BYTE PTR [rax],al
   1400067e4:	add    BYTE PTR [rax],al
   1400067e6:	add    BYTE PTR [rax],al
   1400067e8:	push   rax
   1400067e9:	add    BYTE PTR [rbx+0x0],cl
   1400067ec:	add    BYTE PTR [r9+0x0],r11b
   1400067f0:	pop    rdi
   1400067f1:	add    BYTE PTR [rax+0x0],dl
   1400067f4:	rex.WRX add BYTE PTR [rax+0x0],r10b
   1400067f8:	pop    rax
   1400067f9:	add    BYTE PTR [rdi+0x0],bl
   1400067fc:	pop    rax
   1400067fd:	add    BYTE PTR [rcx+0x0],al
   140006800:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   140006805:	add    BYTE PTR [rbx+0x0],dh
	...
   140006810:	push   rax
   140006811:	add    BYTE PTR [rbx+0x0],cl
   140006814:	add    BYTE PTR [r9+0x0],r11b
   140006818:	pop    rdi
   140006819:	add    BYTE PTR [rdi+0x0],dl
   14000681c:	jb     0x14000681e
   14000681e:	imul   eax,DWORD PTR [rax],0x650074
   140006824:	pop    rdi
   140006825:	add    BYTE PTR [rax+rax*1+0x69],dl
   140006829:	add    BYTE PTR [rbp+0x0],ch
   14000682c:	add    BYTE PTR gs:[rax],al
   14000682f:	add    BYTE PTR [rax+0x0],dl
   140006832:	rex.WXB add BYTE PTR [r13+0x0],al
   140006836:	pop    rcx
   140006837:	add    BYTE PTR [rdi+0x0],bl
   14000683a:	push   rdi
   14000683b:	add    BYTE PTR [rbx+0x0],dl
   14000683e:	add    BYTE PTR [rdi+0x0],r11b
   140006842:	add    BYTE PTR [r8+rax*1+0x64],spl
   140006847:	add    BYTE PTR [rdx+0x0],dh
   14000684a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000684e:	jae    0x140006850
   140006850:	push   rbp
   140006851:	add    BYTE PTR [rdx+0x0],dl
   140006854:	rex.WB add BYTE PTR [r8],al
   140006857:	add    BYTE PTR [rax+0x0],dl
   14000685a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000685e:	pop    rcx
   14000685f:	add    BYTE PTR [rdi+0x0],bl
   140006862:	push   rdi
   140006863:	add    BYTE PTR [rbx+0x0],dl
   140006866:	add    BYTE PTR [rdi+0x0],r11b
   14000686a:	add    BYTE PTR [r8+0x0],sil
   14000686e:	jo     0x140006870
   140006870:	push   rbx
   140006871:	add    BYTE PTR [rbp+0x0],ah
   140006874:	jno    0x140006876
   140006876:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000687a:	jae    0x14000687c
   14000687c:	je     0x14000687e
   14000687e:	(bad)  
   14000687f:	add    BYTE PTR [rsi+0x0],ch
   140006882:	movsxd eax,DWORD PTR [rax]
   140006884:	add    BYTE PTR gs:[rcx+0x0],cl
   140006888:	add    BYTE PTR [rax],r8b
   14000688b:	add    BYTE PTR [rax],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    BYTE PTR [rax+0x0],dl
   140006892:	rex.WXB add BYTE PTR [r13+0x0],al
   140006896:	pop    rcx
   140006897:	add    BYTE PTR [rdi+0x0],bl
   14000689a:	push   rdi
   14000689b:	add    BYTE PTR [rbx+0x0],dl
   14000689e:	add    BYTE PTR [rdi+0x0],r11b
   1400068a2:	add    BYTE PTR [r8+0x0],sil
   1400068a6:	jo     0x1400068a8
   1400068a8:	push   rbx
   1400068a9:	add    BYTE PTR [rbp+0x0],ah
   1400068ac:	jno    0x1400068ae
   1400068ae:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400068b2:	jae    0x1400068b4
   1400068b4:	jae    0x1400068b6
   1400068b6:	(bad)  
   1400068b7:	add    BYTE PTR [rdi+0x0],ah
   1400068ba:	add    BYTE PTR gs:[rsi+0x0],cl
   1400068be:	jne    0x1400068c0
   1400068c0:	ins    DWORD PTR es:[rdi],dx
   1400068c1:	add    BYTE PTR [rdx+0x0],ah
   1400068c4:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   1400068d0:	push   rax
   1400068d1:	add    BYTE PTR [rbx+0x0],cl
   1400068d4:	add    BYTE PTR [r9+0x0],r11b
   1400068d8:	pop    rdi
   1400068d9:	add    BYTE PTR [rdi+0x0],dl
   1400068dc:	push   rbx
   1400068dd:	add    BYTE PTR [rax+rax*1+0x5f],al
   1400068e1:	add    BYTE PTR [rcx+0x0],al
   1400068e4:	jo     0x1400068e6
   1400068e6:	jo     0x1400068e8
   1400068e8:	push   rbx
   1400068e9:	add    BYTE PTR [rbp+0x0],ah
   1400068ec:	jno    0x1400068ee
   1400068ee:	push   rbx
   1400068ef:	add    BYTE PTR [rbp+0x0],ah
   1400068f2:	jae    0x1400068f4
   1400068f4:	jae    0x1400068f6
   1400068f6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400068fc:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006901:	add    BYTE PTR [rax],al
   140006903:	add    BYTE PTR [rax],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rax+0x0],dl
   14000690a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000690e:	pop    rcx
   14000690f:	add    BYTE PTR [rdi+0x0],bl
   140006912:	push   rdi
   140006913:	add    BYTE PTR [rbx+0x0],dl
   140006916:	add    BYTE PTR [rdi+0x0],r11b
   14000691a:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14000691e:	je     0x140006920
   140006920:	(bad)  
   140006921:	add    BYTE PTR [rax+rax*1+0x61],ah
   140006925:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006929:	add    BYTE PTR [rsi+0x0],dl
   14000692c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006930:	jae    0x140006932
   140006932:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140006940:	push   rax
   140006941:	add    BYTE PTR [rbx+0x0],cl
   140006944:	add    BYTE PTR [r9+0x0],r11b
   140006948:	pop    rdi
   140006949:	add    BYTE PTR [rdi+0x0],dl
   14000694c:	push   rbx
   14000694d:	add    BYTE PTR [rax+rax*1+0x5f],al
   140006951:	add    BYTE PTR [rbx+0x0],dl
   140006954:	movsxd eax,DWORD PTR [rax]
   140006956:	outs   dx,DWORD PTR ds:[rsi]
   140006957:	add    BYTE PTR [rax+0x0],dh
   14000695a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000695e:	add    BYTE PTR [rax],al
   140006960:	push   rax
   140006961:	add    BYTE PTR [rbx+0x0],cl
   140006964:	add    BYTE PTR [r9+0x0],r11b
   140006968:	pop    rdi
   140006969:	add    BYTE PTR [rdi+0x0],dl
   14000696c:	push   rbx
   14000696d:	add    BYTE PTR [rax+rax*1+0x5f],al
   140006971:	add    BYTE PTR [rax+rax*1+0x79],dl
   140006975:	add    BYTE PTR [rax+0x0],dh
   140006978:	add    BYTE PTR gs:[rbx+0x0],dh
   14000697c:	add    BYTE PTR [rax],al
   14000697e:	add    BYTE PTR [rax],al
   140006980:	push   rax
   140006981:	add    BYTE PTR [rbx+0x0],cl
   140006984:	add    BYTE PTR [r9+0x0],r11b
   140006988:	pop    rdi
   140006989:	add    BYTE PTR [rdi+0x0],dl
   14000698c:	push   rbx
   14000698d:	add    BYTE PTR [rax+rax*1+0x5f],al
   140006991:	add    BYTE PTR [rax+0x0],bl
   140006994:	add    BYTE PTR [r8+rax*1+0x64],spl
   140006999:	add    BYTE PTR [rdx+0x0],dh
   14000699c:	jae    0x14000699e
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	push   rsi
   1400069a1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400069a5:	add    BYTE PTR [rbp+0x0],al
   1400069a8:	rex.WRB add BYTE PTR [r8+0x0],r10b
   1400069ac:	push   rsp
   1400069ad:	add    BYTE PTR [rcx+0x0],bl
	...
   1400069b8:	push   rsi
   1400069b9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400069bd:	add    BYTE PTR [rsi+0x0],cl
   1400069c0:	push   rbp
   1400069c1:	add    BYTE PTR [rax+rax*1+0x4c],cl
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rsi+0x0],dl
   1400069ca:	push   rsp
   1400069cb:	add    BYTE PTR [rdi+0x0],bl
   1400069ce:	rex.WB add BYTE PTR [r9],sil
   1400069d1:	add    BYTE PTR [rax],al
   1400069d3:	add    BYTE PTR [rax],al
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    BYTE PTR [rsi+0x0],dl
   1400069da:	push   rsp
   1400069db:	add    BYTE PTR [rdi+0x0],bl
   1400069de:	push   rbp
   1400069df:	add    BYTE PTR [rcx+0x0],cl
   1400069e2:	xor    DWORD PTR [rax],eax
   1400069e4:	add    BYTE PTR [rax],al
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	push   rsi
   1400069e9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400069ed:	add    BYTE PTR [rcx+0x0],cl
   1400069f0:	xor    al,BYTE PTR [rax]
   1400069f2:	add    BYTE PTR [rax],al
   1400069f4:	add    BYTE PTR [rax],al
   1400069f6:	add    BYTE PTR [rax],al
   1400069f8:	push   rsi
   1400069f9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400069fd:	add    BYTE PTR [rbp+0x0],dl
   140006a00:	rex.WB add BYTE PTR [r10],sil
   140006a03:	add    BYTE PTR [rax],al
   140006a05:	add    BYTE PTR [rax],al
   140006a07:	add    BYTE PTR [rsi+0x0],dl
   140006a0a:	push   rsp
   140006a0b:	add    BYTE PTR [rdi+0x0],bl
   140006a0e:	rex.WB add BYTE PTR [r8+rax*1],sil
   140006a12:	add    BYTE PTR [rax],al
   140006a14:	add    BYTE PTR [rax],al
   140006a16:	add    BYTE PTR [rax],al
   140006a18:	push   rsi
   140006a19:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006a1d:	add    BYTE PTR [rbp+0x0],dl
   140006a20:	rex.WB add BYTE PTR [r8+rax*1],sil
   140006a24:	add    BYTE PTR [rax],al
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	push   rsi
   140006a29:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006a2d:	add    BYTE PTR [rcx+0x0],cl
   140006a30:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rsi+0x0],dl
   140006a3a:	push   rsp
   140006a3b:	add    BYTE PTR [rdi+0x0],bl
   140006a3e:	push   rbp
   140006a3f:	add    BYTE PTR [rcx+0x0],cl
   140006a42:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140006a47:	add    BYTE PTR [rsi+0x0],dl
   140006a4a:	push   rsp
   140006a4b:	add    BYTE PTR [rdi+0x0],bl
   140006a4e:	rex.WB add BYTE PTR [r8],dil
   140006a51:	add    BYTE PTR [rax],al
   140006a53:	add    BYTE PTR [rax],al
   140006a55:	add    BYTE PTR [rax],al
   140006a57:	add    BYTE PTR [rsi+0x0],dl
   140006a5a:	push   rsp
   140006a5b:	add    BYTE PTR [rdi+0x0],bl
   140006a5e:	push   rbp
   140006a5f:	add    BYTE PTR [rcx+0x0],cl
   140006a62:	cmp    BYTE PTR [rax],al
   140006a64:	add    BYTE PTR [rax],al
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	push   rsi
   140006a69:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006a6d:	add    BYTE PTR [rdx+0x0],dl
   140006a70:	xor    al,0x0
   140006a72:	add    BYTE PTR [rax],al
   140006a74:	add    BYTE PTR [rax],al
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	push   rsi
   140006a79:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006a7d:	add    BYTE PTR [rdx+0x0],dl
   140006a80:	cmp    BYTE PTR [rax],al
   140006a82:	add    BYTE PTR [rax],al
   140006a84:	add    BYTE PTR [rax],al
   140006a86:	add    BYTE PTR [rax],al
   140006a88:	push   rsi
   140006a89:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006a8d:	add    BYTE PTR [rdx+0x0],al
   140006a90:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140006a94:	rex.WR add BYTE PTR [rax],r8b
   140006a97:	add    BYTE PTR [rsi+0x0],dl
   140006a9a:	push   rsp
   140006a9b:	add    BYTE PTR [rdi+0x0],bl
   140006a9e:	add    BYTE PTR [r10+0x0],r10b
   140006aa2:	push   rdx
   140006aa3:	add    BYTE PTR [rdi+0x0],cl
   140006aa6:	push   rdx
	...
   140006aaf:	add    BYTE PTR [rsi+0x0],dl
   140006ab2:	push   rsp
   140006ab3:	add    BYTE PTR [rdi+0x0],bl
   140006ab6:	rex.XB add BYTE PTR [r9+0x0],bl
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	add    BYTE PTR [rax],al
   140006abe:	add    BYTE PTR [rax],al
   140006ac0:	push   rsi
   140006ac1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006ac5:	add    BYTE PTR [rax+rax*1+0x41],al
   140006ac9:	add    BYTE PTR [rax+rax*1+0x45],dl
   140006acd:	add    BYTE PTR [rax],al
   140006acf:	add    BYTE PTR [rsi+0x0],dl
   140006ad2:	push   rsp
   140006ad3:	add    BYTE PTR [rdi+0x0],bl
   140006ad6:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140006ada:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140006ade:	push   rsp
   140006adf:	add    BYTE PTR [rcx+0x0],cl
   140006ae2:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140006ae6:	add    BYTE PTR [rax],al
   140006ae8:	push   rsi
   140006ae9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006aed:	add    BYTE PTR [rbx+0x0],al
   140006af0:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140006af4:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006af9:	add    BYTE PTR [rax],al
   140006afb:	add    BYTE PTR [rax],al
   140006afd:	add    BYTE PTR [rax],al
   140006aff:	add    BYTE PTR [rsi+0x0],dl
   140006b02:	push   rsp
   140006b03:	add    BYTE PTR [rdi+0x0],bl
   140006b06:	rex.XB add BYTE PTR [r14+0x0],al
   140006b0a:	add    BYTE PTR [rax],al
   140006b0c:	add    BYTE PTR [rax],al
   140006b0e:	add    BYTE PTR [rax],al
   140006b10:	push   rsi
   140006b11:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006b15:	add    BYTE PTR [rdx+0x0],al
   140006b18:	push   rbx
   140006b19:	add    BYTE PTR [rax+rax*1+0x52],dl
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rsi+0x0],dl
   140006b22:	push   rsp
   140006b23:	add    BYTE PTR [rdi+0x0],bl
   140006b26:	add    BYTE PTR [rax+r8*1+0x4f],cl
   140006b2b:	add    BYTE PTR [rdx+0x0],al
   140006b2e:	add    BYTE PTR [rax],al
   140006b30:	push   rsi
   140006b31:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006b35:	add    BYTE PTR [rax+rax*1+0x50],cl
   140006b39:	add    BYTE PTR [rbx+0x0],dl
   140006b3c:	push   rsp
   140006b3d:	add    BYTE PTR [rdx+0x0],dl
	...
   140006b48:	push   rsi
   140006b49:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006b4d:	add    BYTE PTR [rax+rax*1+0x50],cl
   140006b51:	add    BYTE PTR [rdi+0x0],dl
   140006b54:	push   rbx
   140006b55:	add    BYTE PTR [rax+rax*1+0x52],dl
   140006b59:	add    BYTE PTR [rax],al
   140006b5b:	add    BYTE PTR [rax],al
   140006b5d:	add    BYTE PTR [rax],al
   140006b5f:	add    BYTE PTR [rsi+0x0],dl
   140006b62:	push   rsp
   140006b63:	add    BYTE PTR [rdi+0x0],bl
   140006b66:	push   rbp
   140006b67:	add    BYTE PTR [rsi+0x0],cl
   140006b6a:	rex.WXB add BYTE PTR [r14+0x0],cl
   140006b6e:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140006b72:	rex.WRX add BYTE PTR [rax],r8b
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    BYTE PTR [rsi+0x0],dl
   140006b7a:	push   rsp
   140006b7b:	add    BYTE PTR [rdi+0x0],bl
   140006b7e:	add    BYTE PTR [rcx+0x0],r9b
   140006b82:	push   rbx
   140006b83:	add    BYTE PTR [rax+0x0],dl
   140006b86:	add    BYTE PTR [r8+rax*1+0x43],dl
   140006b8b:	add    BYTE PTR [rax+0x0],cl
   140006b8e:	add    BYTE PTR [rax],al
   140006b90:	push   rsi
   140006b91:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006b95:	add    BYTE PTR [rbx+0x0],dl
   140006b98:	push   rsp
   140006b99:	add    BYTE PTR [rdi+0x0],cl
   140006b9c:	push   rdx
   140006b9d:	add    BYTE PTR [rbp+0x0],al
   140006ba0:	add    BYTE PTR [rdi+0x0],r11b
   140006ba4:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   140006ba8:	rex.WX add BYTE PTR [rbp+0x0],al
   140006bac:	add    BYTE PTR [r8+r8*1+0x0],dl
   140006bb1:	add    BYTE PTR [rax],al
   140006bb3:	add    BYTE PTR [rax],al
   140006bb5:	add    BYTE PTR [rax],al
   140006bb7:	add    BYTE PTR [rsi+0x0],dl
   140006bba:	push   rsp
   140006bbb:	add    BYTE PTR [rdi+0x0],bl
   140006bbe:	add    BYTE PTR [rbp+0x0],r8b
   140006bc2:	rex.XB add BYTE PTR [r9+0x0],cl
   140006bc6:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140006bca:	rex.WR add BYTE PTR [rax],r8b
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rsi+0x0],dl
   140006bd2:	push   rsp
   140006bd3:	add    BYTE PTR [rdi+0x0],bl
   140006bd6:	push   rsi
   140006bd7:	add    BYTE PTR [rcx+0x0],al
   140006bda:	push   rdx
   140006bdb:	add    BYTE PTR [rcx+0x0],cl
   140006bde:	add    BYTE PTR [r14+0x0],cl
   140006be2:	push   rsp
   140006be3:	add    BYTE PTR [rax],al
   140006be5:	add    BYTE PTR [rax],al
   140006be7:	add    BYTE PTR [rsi+0x0],dl
   140006bea:	push   rsp
   140006beb:	add    BYTE PTR [rdi+0x0],bl
   140006bee:	push   rsi
   140006bef:	add    BYTE PTR [rbp+0x0],al
   140006bf2:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006bf7:	add    BYTE PTR [rdx+0x0],dl
   140006bfa:	and    BYTE PTR [rax],al
   140006bfc:	jl     0x140006bfe
   140006bfe:	and    BYTE PTR [rax],al
   140006c00:	push   rsi
   140006c01:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006c05:	add    BYTE PTR [rcx+0x0],cl
   140006c08:	xor    DWORD PTR [rax],eax
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	add    BYTE PTR [rax],al
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	push   rsi
   140006c11:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006c15:	add    BYTE PTR [rsi+0x0],dl
   140006c18:	add    BYTE PTR [r11+0x0],r8b
   140006c1c:	push   rsp
   140006c1d:	add    BYTE PTR [rdi+0x0],cl
   140006c20:	push   rdx
   140006c21:	add    BYTE PTR [rax],ah
   140006c23:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006c27:	add    BYTE PTR [rsi+0x0],dl
   140006c2a:	push   rsp
   140006c2b:	add    BYTE PTR [rdi+0x0],bl
   140006c2e:	push   rbp
   140006c2f:	add    BYTE PTR [rcx+0x0],cl
   140006c32:	xor    DWORD PTR [rax],eax
   140006c34:	add    BYTE PTR [rax],al
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	push   rsi
   140006c39:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006c3d:	add    BYTE PTR [rsi+0x0],dl
   140006c40:	add    BYTE PTR [r11+0x0],r8b
   140006c44:	push   rsp
   140006c45:	add    BYTE PTR [rdi+0x0],cl
   140006c48:	push   rdx
   140006c49:	add    BYTE PTR [rax],ah
   140006c4b:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006c4f:	add    BYTE PTR [rsi+0x0],dl
   140006c52:	push   rsp
   140006c53:	add    BYTE PTR [rdi+0x0],bl
   140006c56:	rex.WB add BYTE PTR [r10],sil
   140006c59:	add    BYTE PTR [rax],al
   140006c5b:	add    BYTE PTR [rax],al
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rsi+0x0],dl
   140006c62:	push   rsp
   140006c63:	add    BYTE PTR [rdi+0x0],bl
   140006c66:	push   rsi
   140006c67:	add    BYTE PTR [rbp+0x0],al
   140006c6a:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006c6f:	add    BYTE PTR [rdx+0x0],dl
   140006c72:	and    BYTE PTR [rax],al
   140006c74:	jl     0x140006c76
   140006c76:	and    BYTE PTR [rax],al
   140006c78:	push   rsi
   140006c79:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006c7d:	add    BYTE PTR [rbp+0x0],dl
   140006c80:	rex.WB add BYTE PTR [r10],sil
   140006c83:	add    BYTE PTR [rax],al
   140006c85:	add    BYTE PTR [rax],al
   140006c87:	add    BYTE PTR [rsi+0x0],dl
   140006c8a:	push   rsp
   140006c8b:	add    BYTE PTR [rdi+0x0],bl
   140006c8e:	push   rsi
   140006c8f:	add    BYTE PTR [rbp+0x0],al
   140006c92:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006c97:	add    BYTE PTR [rdx+0x0],dl
   140006c9a:	and    BYTE PTR [rax],al
   140006c9c:	jl     0x140006c9e
   140006c9e:	and    BYTE PTR [rax],al
   140006ca0:	push   rsi
   140006ca1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006ca5:	add    BYTE PTR [rcx+0x0],cl
   140006ca8:	xor    al,0x0
   140006caa:	add    BYTE PTR [rax],al
   140006cac:	add    BYTE PTR [rax],al
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	push   rsi
   140006cb1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006cb5:	add    BYTE PTR [rsi+0x0],dl
   140006cb8:	add    BYTE PTR [r11+0x0],r8b
   140006cbc:	push   rsp
   140006cbd:	add    BYTE PTR [rdi+0x0],cl
   140006cc0:	push   rdx
   140006cc1:	add    BYTE PTR [rax],ah
   140006cc3:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006cc7:	add    BYTE PTR [rsi+0x0],dl
   140006cca:	push   rsp
   140006ccb:	add    BYTE PTR [rdi+0x0],bl
   140006cce:	push   rbp
   140006ccf:	add    BYTE PTR [rcx+0x0],cl
   140006cd2:	xor    al,0x0
   140006cd4:	add    BYTE PTR [rax],al
   140006cd6:	add    BYTE PTR [rax],al
   140006cd8:	push   rsi
   140006cd9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006cdd:	add    BYTE PTR [rsi+0x0],dl
   140006ce0:	add    BYTE PTR [r11+0x0],r8b
   140006ce4:	push   rsp
   140006ce5:	add    BYTE PTR [rdi+0x0],cl
   140006ce8:	push   rdx
   140006ce9:	add    BYTE PTR [rax],ah
   140006ceb:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006cef:	add    BYTE PTR [rsi+0x0],dl
   140006cf2:	push   rsp
   140006cf3:	add    BYTE PTR [rdi+0x0],bl
   140006cf6:	rex.WB add BYTE PTR [r14+0x0],cl
   140006cfa:	push   rsp
   140006cfb:	add    BYTE PTR [rax],al
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rsi+0x0],dl
   140006d02:	push   rsp
   140006d03:	add    BYTE PTR [rdi+0x0],bl
   140006d06:	push   rsi
   140006d07:	add    BYTE PTR [rbp+0x0],al
   140006d0a:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006d0f:	add    BYTE PTR [rdx+0x0],dl
   140006d12:	and    BYTE PTR [rax],al
   140006d14:	jl     0x140006d16
   140006d16:	and    BYTE PTR [rax],al
   140006d18:	push   rsi
   140006d19:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006d1d:	add    BYTE PTR [rbp+0x0],dl
   140006d20:	rex.WB add BYTE PTR [r14+0x0],cl
   140006d24:	push   rsp
   140006d25:	add    BYTE PTR [rax],al
   140006d27:	add    BYTE PTR [rsi+0x0],dl
   140006d2a:	push   rsp
   140006d2b:	add    BYTE PTR [rdi+0x0],bl
   140006d2e:	push   rsi
   140006d2f:	add    BYTE PTR [rbp+0x0],al
   140006d32:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006d37:	add    BYTE PTR [rdx+0x0],dl
   140006d3a:	and    BYTE PTR [rax],al
   140006d3c:	jl     0x140006d3e
   140006d3e:	and    BYTE PTR [rax],al
   140006d40:	push   rsi
   140006d41:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006d45:	add    BYTE PTR [rcx+0x0],cl
   140006d48:	cmp    BYTE PTR [rax],al
   140006d4a:	add    BYTE PTR [rax],al
   140006d4c:	add    BYTE PTR [rax],al
   140006d4e:	add    BYTE PTR [rax],al
   140006d50:	push   rsi
   140006d51:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006d55:	add    BYTE PTR [rsi+0x0],dl
   140006d58:	add    BYTE PTR [r11+0x0],r8b
   140006d5c:	push   rsp
   140006d5d:	add    BYTE PTR [rdi+0x0],cl
   140006d60:	push   rdx
   140006d61:	add    BYTE PTR [rax],ah
   140006d63:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006d67:	add    BYTE PTR [rsi+0x0],dl
   140006d6a:	push   rsp
   140006d6b:	add    BYTE PTR [rdi+0x0],bl
   140006d6e:	push   rbp
   140006d6f:	add    BYTE PTR [rcx+0x0],cl
   140006d72:	cmp    BYTE PTR [rax],al
   140006d74:	add    BYTE PTR [rax],al
   140006d76:	add    BYTE PTR [rax],al
   140006d78:	push   rsi
   140006d79:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006d7d:	add    BYTE PTR [rsi+0x0],dl
   140006d80:	add    BYTE PTR [r11+0x0],r8b
   140006d84:	push   rsp
   140006d85:	add    BYTE PTR [rdi+0x0],cl
   140006d88:	push   rdx
   140006d89:	add    BYTE PTR [rax],ah
   140006d8b:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006d8f:	add    BYTE PTR [rsi+0x0],dl
   140006d92:	push   rsp
   140006d93:	add    BYTE PTR [rdi+0x0],bl
   140006d96:	push   rdx
   140006d97:	add    BYTE PTR [rax+rax*1],dh
   140006d9a:	add    BYTE PTR [rax],al
   140006d9c:	add    BYTE PTR [rax],al
   140006d9e:	add    BYTE PTR [rax],al
   140006da0:	push   rsi
   140006da1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006da5:	add    BYTE PTR [rsi+0x0],dl
   140006da8:	add    BYTE PTR [r11+0x0],r8b
   140006dac:	push   rsp
   140006dad:	add    BYTE PTR [rdi+0x0],cl
   140006db0:	push   rdx
   140006db1:	add    BYTE PTR [rax],ah
   140006db3:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006db7:	add    BYTE PTR [rsi+0x0],dl
   140006dba:	push   rsp
   140006dbb:	add    BYTE PTR [rdi+0x0],bl
   140006dbe:	push   rdx
   140006dbf:	add    BYTE PTR [rax],bh
   140006dc1:	add    BYTE PTR [rax],al
   140006dc3:	add    BYTE PTR [rax],al
   140006dc5:	add    BYTE PTR [rax],al
   140006dc7:	add    BYTE PTR [rsi+0x0],dl
   140006dca:	push   rsp
   140006dcb:	add    BYTE PTR [rdi+0x0],bl
   140006dce:	push   rsi
   140006dcf:	add    BYTE PTR [rbp+0x0],al
   140006dd2:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006dd7:	add    BYTE PTR [rdx+0x0],dl
   140006dda:	and    BYTE PTR [rax],al
   140006ddc:	jl     0x140006dde
   140006dde:	and    BYTE PTR [rax],al
   140006de0:	push   rsi
   140006de1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006de5:	add    BYTE PTR [rdx+0x0],al
   140006de8:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140006dec:	rex.WR add BYTE PTR [rax],r8b
   140006def:	add    BYTE PTR [rsi+0x0],dl
   140006df2:	push   rsp
   140006df3:	add    BYTE PTR [rdi+0x0],bl
   140006df6:	push   rsi
   140006df7:	add    BYTE PTR [rbp+0x0],al
   140006dfa:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006dff:	add    BYTE PTR [rdx+0x0],dl
   140006e02:	and    BYTE PTR [rax],al
   140006e04:	jl     0x140006e06
   140006e06:	and    BYTE PTR [rax],al
   140006e08:	push   rsi
   140006e09:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006e0d:	add    BYTE PTR [rbp+0x0],al
   140006e10:	push   rdx
   140006e11:	add    BYTE PTR [rdx+0x0],dl
   140006e14:	rex.WRXB add BYTE PTR [r10+0x0],r10b
	...
   140006e20:	push   rsi
   140006e21:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006e25:	add    BYTE PTR [rsi+0x0],dl
   140006e28:	add    BYTE PTR [r11+0x0],r8b
   140006e2c:	push   rsp
   140006e2d:	add    BYTE PTR [rdi+0x0],cl
   140006e30:	push   rdx
   140006e31:	add    BYTE PTR [rax],ah
   140006e33:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006e37:	add    BYTE PTR [rsi+0x0],dl
   140006e3a:	push   rsp
   140006e3b:	add    BYTE PTR [rdi+0x0],bl
   140006e3e:	rex.XB add BYTE PTR [r9+0x0],bl
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	add    BYTE PTR [rax],al
   140006e46:	add    BYTE PTR [rax],al
   140006e48:	push   rsi
   140006e49:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006e4d:	add    BYTE PTR [rsi+0x0],dl
   140006e50:	add    BYTE PTR [r11+0x0],r8b
   140006e54:	push   rsp
   140006e55:	add    BYTE PTR [rdi+0x0],cl
   140006e58:	push   rdx
   140006e59:	add    BYTE PTR [rax],ah
   140006e5b:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006e5f:	add    BYTE PTR [rsi+0x0],dl
   140006e62:	push   rsp
   140006e63:	add    BYTE PTR [rdi+0x0],bl
   140006e66:	add    BYTE PTR [rcx+0x0],r8b
   140006e6a:	push   rsp
   140006e6b:	add    BYTE PTR [rbp+0x0],al
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	push   rsi
   140006e71:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006e75:	add    BYTE PTR [rsi+0x0],dl
   140006e78:	add    BYTE PTR [r11+0x0],r8b
   140006e7c:	push   rsp
   140006e7d:	add    BYTE PTR [rdi+0x0],cl
   140006e80:	push   rdx
   140006e81:	add    BYTE PTR [rax],ah
   140006e83:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006e87:	add    BYTE PTR [rsi+0x0],dl
   140006e8a:	push   rsp
   140006e8b:	add    BYTE PTR [rdi+0x0],bl
   140006e8e:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140006e92:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140006e96:	push   rsp
   140006e97:	add    BYTE PTR [rcx+0x0],cl
   140006e9a:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	push   rsi
   140006ea1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006ea5:	add    BYTE PTR [rsi+0x0],dl
   140006ea8:	add    BYTE PTR [r11+0x0],r8b
   140006eac:	push   rsp
   140006ead:	add    BYTE PTR [rdi+0x0],cl
   140006eb0:	push   rdx
   140006eb1:	add    BYTE PTR [rax],ah
   140006eb3:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006eb7:	add    BYTE PTR [rsi+0x0],dl
   140006eba:	push   rsp
   140006ebb:	add    BYTE PTR [rdi+0x0],bl
   140006ebe:	add    BYTE PTR [r8+r8*1+0x53],cl
   140006ec3:	add    BYTE PTR [rcx+0x0],cl
   140006ec6:	add    BYTE PTR [rax],r8b
   140006ec9:	add    BYTE PTR [rax],al
   140006ecb:	add    BYTE PTR [rax],al
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rsi+0x0],dl
   140006ed2:	push   rsp
   140006ed3:	add    BYTE PTR [rdi+0x0],bl
   140006ed6:	push   rsi
   140006ed7:	add    BYTE PTR [rbp+0x0],al
   140006eda:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006edf:	add    BYTE PTR [rdx+0x0],dl
   140006ee2:	and    BYTE PTR [rax],al
   140006ee4:	jl     0x140006ee6
   140006ee6:	and    BYTE PTR [rax],al
   140006ee8:	push   rsi
   140006ee9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006eed:	add    BYTE PTR [rbx+0x0],al
   140006ef0:	rex.RX add BYTE PTR [rax],r8b
   140006ef3:	add    BYTE PTR [rax],al
   140006ef5:	add    BYTE PTR [rax],al
   140006ef7:	add    BYTE PTR [rsi+0x0],dl
   140006efa:	push   rsp
   140006efb:	add    BYTE PTR [rdi+0x0],bl
   140006efe:	push   rsi
   140006eff:	add    BYTE PTR [rbp+0x0],al
   140006f02:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006f07:	add    BYTE PTR [rdx+0x0],dl
   140006f0a:	and    BYTE PTR [rax],al
   140006f0c:	jl     0x140006f0e
   140006f0e:	and    BYTE PTR [rax],al
   140006f10:	push   rsi
   140006f11:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006f15:	add    BYTE PTR [rdx+0x0],al
   140006f18:	push   rbx
   140006f19:	add    BYTE PTR [rax+rax*1+0x52],dl
   140006f1d:	add    BYTE PTR [rax],al
   140006f1f:	add    BYTE PTR [rsi+0x0],dl
   140006f22:	push   rsp
   140006f23:	add    BYTE PTR [rdi+0x0],bl
   140006f26:	push   rsi
   140006f27:	add    BYTE PTR [rbp+0x0],al
   140006f2a:	add    BYTE PTR [r8+r8*1+0x4f],dl
   140006f2f:	add    BYTE PTR [rdx+0x0],dl
   140006f32:	and    BYTE PTR [rax],al
   140006f34:	jl     0x140006f36
   140006f36:	and    BYTE PTR [rax],al
   140006f38:	push   rsi
   140006f39:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006f3d:	add    BYTE PTR [rax+rax*1+0x50],cl
   140006f41:	add    BYTE PTR [rbx+0x0],dl
   140006f44:	push   rsp
   140006f45:	add    BYTE PTR [rdx+0x0],dl
	...
   140006f50:	push   rsi
   140006f51:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006f55:	add    BYTE PTR [rsi+0x0],dl
   140006f58:	add    BYTE PTR [r11+0x0],r8b
   140006f5c:	push   rsp
   140006f5d:	add    BYTE PTR [rdi+0x0],cl
   140006f60:	push   rdx
   140006f61:	add    BYTE PTR [rax],ah
   140006f63:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006f67:	add    BYTE PTR [rsi+0x0],dl
   140006f6a:	push   rsp
   140006f6b:	add    BYTE PTR [rdi+0x0],bl
   140006f6e:	rex.WR add BYTE PTR [rax+0x0],r10b
   140006f72:	push   rdi
   140006f73:	add    BYTE PTR [rbx+0x0],dl
   140006f76:	push   rsp
   140006f77:	add    BYTE PTR [rdx+0x0],dl
   140006f7a:	add    BYTE PTR [rax],al
   140006f7c:	add    BYTE PTR [rax],al
   140006f7e:	add    BYTE PTR [rax],al
   140006f80:	push   rsi
   140006f81:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140006f85:	add    BYTE PTR [rsi+0x0],dl
   140006f88:	add    BYTE PTR [r11+0x0],r8b
   140006f8c:	push   rsp
   140006f8d:	add    BYTE PTR [rdi+0x0],cl
   140006f90:	push   rdx
   140006f91:	add    BYTE PTR [rax],ah
   140006f93:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006f97:	add    BYTE PTR [rsi+0x0],dl
   140006f9a:	push   rsp
   140006f9b:	add    BYTE PTR [rdi+0x0],bl
   140006f9e:	push   rsi
   140006f9f:	add    BYTE PTR [rcx+0x0],al
   140006fa2:	push   rdx
   140006fa3:	add    BYTE PTR [rcx+0x0],cl
   140006fa6:	add    BYTE PTR [r14+0x0],cl
   140006faa:	push   rsp
   140006fab:	add    BYTE PTR [rax],al
   140006fad:	add    BYTE PTR [rax],al
   140006faf:	add    BYTE PTR [rsi+0x0],dl
   140006fb2:	push   rsp
   140006fb3:	add    BYTE PTR [rdi+0x0],bl
   140006fb6:	add    BYTE PTR [r10+0x0],dl
   140006fba:	push   rdx
   140006fbb:	add    BYTE PTR [rcx+0x0],al
   140006fbe:	pop    rcx
   140006fbf:	add    BYTE PTR [rax],ah
   140006fc1:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006fc5:	add    BYTE PTR [rsi+0x0],dl
   140006fc8:	push   rsp
   140006fc9:	add    BYTE PTR [rdi+0x0],bl
   140006fcc:	rex.WB add BYTE PTR [r9],sil
	...
   140006fd7:	add    BYTE PTR [rsi+0x0],dl
   140006fda:	push   rsp
   140006fdb:	add    BYTE PTR [rdi+0x0],bl
   140006fde:	add    BYTE PTR [r10+0x0],dl
   140006fe2:	push   rdx
   140006fe3:	add    BYTE PTR [rcx+0x0],al
   140006fe6:	pop    rcx
   140006fe7:	add    BYTE PTR [rax],ah
   140006fe9:	add    BYTE PTR [rax+rax*1+0x20],bh
   140006fed:	add    BYTE PTR [rsi+0x0],dl
   140006ff0:	push   rsp
   140006ff1:	add    BYTE PTR [rdi+0x0],bl
   140006ff4:	push   rbp
   140006ff5:	add    BYTE PTR [rcx+0x0],cl
   140006ff8:	xor    DWORD PTR [rax],eax
   140006ffa:	add    BYTE PTR [rax],al
   140006ffc:	add    BYTE PTR [rax],al
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	push   rsi
   140007001:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007005:	add    BYTE PTR [rcx+0x0],al
   140007008:	push   rdx
   140007009:	add    BYTE PTR [rdx+0x0],dl
   14000700c:	add    BYTE PTR [r9+0x0],bl
   140007010:	and    BYTE PTR [rax],al
   140007012:	jl     0x140007014
   140007014:	and    BYTE PTR [rax],al
   140007016:	push   rsi
   140007017:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000701b:	add    BYTE PTR [rcx+0x0],cl
   14000701e:	xor    al,BYTE PTR [rax]
	...
   140007028:	push   rsi
   140007029:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000702d:	add    BYTE PTR [rcx+0x0],al
   140007030:	push   rdx
   140007031:	add    BYTE PTR [rdx+0x0],dl
   140007034:	add    BYTE PTR [r9+0x0],bl
   140007038:	and    BYTE PTR [rax],al
   14000703a:	jl     0x14000703c
   14000703c:	and    BYTE PTR [rax],al
   14000703e:	push   rsi
   14000703f:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007043:	add    BYTE PTR [rbp+0x0],dl
   140007046:	rex.WB add BYTE PTR [r10],sil
   140007049:	add    BYTE PTR [rax],al
   14000704b:	add    BYTE PTR [rax],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rsi+0x0],dl
   140007052:	push   rsp
   140007053:	add    BYTE PTR [rdi+0x0],bl
   140007056:	add    BYTE PTR [r10+0x0],dl
   14000705a:	push   rdx
   14000705b:	add    BYTE PTR [rcx+0x0],al
   14000705e:	pop    rcx
   14000705f:	add    BYTE PTR [rax],ah
   140007061:	add    BYTE PTR [rax+rax*1+0x20],bh
   140007065:	add    BYTE PTR [rsi+0x0],dl
   140007068:	push   rsp
   140007069:	add    BYTE PTR [rdi+0x0],bl
   14000706c:	rex.WB add BYTE PTR [r8+rax*1],sil
	...
   140007078:	push   rsi
   140007079:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000707d:	add    BYTE PTR [rcx+0x0],al
   140007080:	push   rdx
   140007081:	add    BYTE PTR [rdx+0x0],dl
   140007084:	add    BYTE PTR [r9+0x0],bl
   140007088:	and    BYTE PTR [rax],al
   14000708a:	jl     0x14000708c
   14000708c:	and    BYTE PTR [rax],al
   14000708e:	push   rsi
   14000708f:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007093:	add    BYTE PTR [rbp+0x0],dl
   140007096:	rex.WB add BYTE PTR [r8+rax*1],sil
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	push   rsi
   1400070a1:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400070a5:	add    BYTE PTR [rcx+0x0],al
   1400070a8:	push   rdx
   1400070a9:	add    BYTE PTR [rdx+0x0],dl
   1400070ac:	add    BYTE PTR [r9+0x0],bl
   1400070b0:	and    BYTE PTR [rax],al
   1400070b2:	jl     0x1400070b4
   1400070b4:	and    BYTE PTR [rax],al
   1400070b6:	push   rsi
   1400070b7:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400070bb:	add    BYTE PTR [rcx+0x0],cl
   1400070be:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   1400070c3:	add    BYTE PTR [rax],al
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    BYTE PTR [rsi+0x0],dl
   1400070ca:	push   rsp
   1400070cb:	add    BYTE PTR [rdi+0x0],bl
   1400070ce:	add    BYTE PTR [r10+0x0],dl
   1400070d2:	push   rdx
   1400070d3:	add    BYTE PTR [rcx+0x0],al
   1400070d6:	pop    rcx
   1400070d7:	add    BYTE PTR [rax],ah
   1400070d9:	add    BYTE PTR [rax+rax*1+0x20],bh
   1400070dd:	add    BYTE PTR [rsi+0x0],dl
   1400070e0:	push   rsp
   1400070e1:	add    BYTE PTR [rdi+0x0],bl
   1400070e4:	push   rbp
   1400070e5:	add    BYTE PTR [rcx+0x0],cl
   1400070e8:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   1400070ed:	add    BYTE PTR [rax],al
   1400070ef:	add    BYTE PTR [rsi+0x0],dl
   1400070f2:	push   rsp
   1400070f3:	add    BYTE PTR [rdi+0x0],bl
   1400070f6:	add    BYTE PTR [r10+0x0],dl
   1400070fa:	push   rdx
   1400070fb:	add    BYTE PTR [rcx+0x0],al
   1400070fe:	pop    rcx
   1400070ff:	add    BYTE PTR [rax],ah
   140007101:	add    BYTE PTR [rax+rax*1+0x20],bh
   140007105:	add    BYTE PTR [rsi+0x0],dl
   140007108:	push   rsp
   140007109:	add    BYTE PTR [rdi+0x0],bl
   14000710c:	rex.WB add BYTE PTR [r8],dil
	...
   140007117:	add    BYTE PTR [rsi+0x0],dl
   14000711a:	push   rsp
   14000711b:	add    BYTE PTR [rdi+0x0],bl
   14000711e:	add    BYTE PTR [r10+0x0],dl
   140007122:	push   rdx
   140007123:	add    BYTE PTR [rcx+0x0],al
   140007126:	pop    rcx
   140007127:	add    BYTE PTR [rax],ah
   140007129:	add    BYTE PTR [rax+rax*1+0x20],bh
   14000712d:	add    BYTE PTR [rsi+0x0],dl
   140007130:	push   rsp
   140007131:	add    BYTE PTR [rdi+0x0],bl
   140007134:	push   rbp
   140007135:	add    BYTE PTR [rcx+0x0],cl
   140007138:	cmp    BYTE PTR [rax],al
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	add    BYTE PTR [rax],al
   14000713e:	add    BYTE PTR [rax],al
   140007140:	push   rsi
   140007141:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007145:	add    BYTE PTR [rcx+0x0],al
   140007148:	push   rdx
   140007149:	add    BYTE PTR [rdx+0x0],dl
   14000714c:	add    BYTE PTR [r9+0x0],bl
   140007150:	and    BYTE PTR [rax],al
   140007152:	jl     0x140007154
   140007154:	and    BYTE PTR [rax],al
   140007156:	push   rsi
   140007157:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000715b:	add    BYTE PTR [rdx+0x0],dl
   14000715e:	xor    al,0x0
	...
   140007168:	push   rsi
   140007169:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000716d:	add    BYTE PTR [rcx+0x0],al
   140007170:	push   rdx
   140007171:	add    BYTE PTR [rdx+0x0],dl
   140007174:	add    BYTE PTR [r9+0x0],bl
   140007178:	and    BYTE PTR [rax],al
   14000717a:	jl     0x14000717c
   14000717c:	and    BYTE PTR [rax],al
   14000717e:	push   rsi
   14000717f:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007183:	add    BYTE PTR [rdx+0x0],dl
   140007186:	cmp    BYTE PTR [rax],al
	...
   140007190:	push   rsi
   140007191:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007195:	add    BYTE PTR [rcx+0x0],al
   140007198:	push   rdx
   140007199:	add    BYTE PTR [rdx+0x0],dl
   14000719c:	add    BYTE PTR [r9+0x0],bl
   1400071a0:	and    BYTE PTR [rax],al
   1400071a2:	jl     0x1400071a4
   1400071a4:	and    BYTE PTR [rax],al
   1400071a6:	push   rsi
   1400071a7:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400071ab:	add    BYTE PTR [rdx+0x0],al
   1400071ae:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   1400071b2:	rex.WR add BYTE PTR [rax],r8b
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rsi+0x0],dl
   1400071ba:	push   rsp
   1400071bb:	add    BYTE PTR [rdi+0x0],bl
   1400071be:	add    BYTE PTR [r10+0x0],dl
   1400071c2:	push   rdx
   1400071c3:	add    BYTE PTR [rcx+0x0],al
   1400071c6:	pop    rcx
   1400071c7:	add    BYTE PTR [rax],ah
   1400071c9:	add    BYTE PTR [rax+rax*1+0x20],bh
   1400071cd:	add    BYTE PTR [rsi+0x0],dl
   1400071d0:	push   rsp
   1400071d1:	add    BYTE PTR [rdi+0x0],bl
   1400071d4:	add    BYTE PTR [r10+0x0],r10b
   1400071d8:	push   rdx
   1400071d9:	add    BYTE PTR [rdi+0x0],cl
   1400071dc:	push   rdx
   1400071dd:	add    BYTE PTR [rax],al
   1400071df:	add    BYTE PTR [rsi+0x0],dl
   1400071e2:	push   rsp
   1400071e3:	add    BYTE PTR [rdi+0x0],bl
   1400071e6:	add    BYTE PTR [r10+0x0],dl
   1400071ea:	push   rdx
   1400071eb:	add    BYTE PTR [rcx+0x0],al
   1400071ee:	pop    rcx
   1400071ef:	add    BYTE PTR [rax],ah
   1400071f1:	add    BYTE PTR [rax+rax*1+0x20],bh
   1400071f5:	add    BYTE PTR [rsi+0x0],dl
   1400071f8:	push   rsp
   1400071f9:	add    BYTE PTR [rdi+0x0],bl
   1400071fc:	rex.XB add BYTE PTR [r9+0x0],bl
	...
   140007208:	push   rsi
   140007209:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000720d:	add    BYTE PTR [rcx+0x0],al
   140007210:	push   rdx
   140007211:	add    BYTE PTR [rdx+0x0],dl
   140007214:	add    BYTE PTR [r9+0x0],bl
   140007218:	and    BYTE PTR [rax],al
   14000721a:	jl     0x14000721c
   14000721c:	and    BYTE PTR [rax],al
   14000721e:	push   rsi
   14000721f:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007223:	add    BYTE PTR [rax+rax*1+0x41],al
   140007227:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000722b:	add    BYTE PTR [rax],al
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rsi+0x0],dl
   140007232:	push   rsp
   140007233:	add    BYTE PTR [rdi+0x0],bl
   140007236:	add    BYTE PTR [r10+0x0],dl
   14000723a:	push   rdx
   14000723b:	add    BYTE PTR [rcx+0x0],al
   14000723e:	pop    rcx
   14000723f:	add    BYTE PTR [rax],ah
   140007241:	add    BYTE PTR [rax+rax*1+0x20],bh
   140007245:	add    BYTE PTR [rsi+0x0],dl
   140007248:	push   rsp
   140007249:	add    BYTE PTR [rdi+0x0],bl
   14000724c:	add    BYTE PTR [rbp+0x0],r8b
   140007250:	rex.XB add BYTE PTR [r9+0x0],cl
   140007254:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140007258:	rex.WR add BYTE PTR [rax],r8b
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rsi+0x0],dl
   140007262:	push   rsp
   140007263:	add    BYTE PTR [rdi+0x0],bl
   140007266:	add    BYTE PTR [r10+0x0],dl
   14000726a:	push   rdx
   14000726b:	add    BYTE PTR [rcx+0x0],al
   14000726e:	pop    rcx
   14000726f:	add    BYTE PTR [rax],ah
   140007271:	add    BYTE PTR [rax+rax*1+0x20],bh
   140007275:	add    BYTE PTR [rsi+0x0],dl
   140007278:	push   rsp
   140007279:	add    BYTE PTR [rdi+0x0],bl
   14000727c:	rex.X add BYTE PTR [rbx+0x0],dl
   140007280:	push   rsp
   140007281:	add    BYTE PTR [rdx+0x0],dl
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	push   rsi
   140007289:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000728d:	add    BYTE PTR [rcx+0x0],al
   140007290:	push   rdx
   140007291:	add    BYTE PTR [rdx+0x0],dl
   140007294:	add    BYTE PTR [r9+0x0],bl
   140007298:	and    BYTE PTR [rax],al
   14000729a:	jl     0x14000729c
   14000729c:	and    BYTE PTR [rax],al
   14000729e:	push   rsi
   14000729f:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400072a3:	add    BYTE PTR [rbp+0x0],dl
   1400072a6:	rex.WRX add BYTE PTR [rbx+0x0],r9b
   1400072aa:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   1400072ae:	push   rdi
   1400072af:	add    BYTE PTR [rsi+0x0],cl
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	push   rsi
   1400072b9:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400072bd:	add    BYTE PTR [rcx+0x0],al
   1400072c0:	push   rdx
   1400072c1:	add    BYTE PTR [rdx+0x0],dl
   1400072c4:	add    BYTE PTR [r9+0x0],bl
   1400072c8:	and    BYTE PTR [rax],al
   1400072ca:	jl     0x1400072cc
   1400072cc:	and    BYTE PTR [rax],al
   1400072ce:	push   rsi
   1400072cf:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400072d3:	add    BYTE PTR [rax+rax*1+0x49],al
   1400072d7:	add    BYTE PTR [rbx+0x0],dl
   1400072da:	push   rax
   1400072db:	add    BYTE PTR [rcx+0x0],al
   1400072de:	push   rsp
   1400072df:	add    BYTE PTR [rbx+0x0],al
   1400072e2:	rex.W add BYTE PTR [rax],al
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    BYTE PTR [rsi+0x0],dl
   1400072ea:	push   rsp
   1400072eb:	add    BYTE PTR [rdi+0x0],bl
   1400072ee:	add    BYTE PTR [r10+0x0],dl
   1400072f2:	push   rdx
   1400072f3:	add    BYTE PTR [rcx+0x0],al
   1400072f6:	pop    rcx
   1400072f7:	add    BYTE PTR [rax],ah
   1400072f9:	add    BYTE PTR [rax+rax*1+0x20],bh
   1400072fd:	add    BYTE PTR [rsi+0x0],dl
   140007300:	push   rsp
   140007301:	add    BYTE PTR [rdi+0x0],bl
   140007304:	push   rsi
   140007305:	add    BYTE PTR [rcx+0x0],al
   140007308:	push   rdx
   140007309:	add    BYTE PTR [rcx+0x0],cl
   14000730c:	add    BYTE PTR [r14+0x0],cl
   140007310:	push   rsp
	...
   140007325:	add    BYTE PTR [rax],al
   140007327:	add    BYTE PTR [rax+0x1400069],ah
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    BYTE PTR [rcx],al
   140007331:	add    BYTE PTR [rax],al
   140007333:	add    BYTE PTR [rax],al
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rax+0x1400069],bh
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rax],dl
   140007341:	add    BYTE PTR [rax],al
   140007343:	add    BYTE PTR [rax],al
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    al,cl
   140007349:	imul   eax,DWORD PTR [rax],0x140
   14000734f:	add    BYTE PTR [rcx],dl
   140007351:	add    BYTE PTR [rax],al
   140007353:	add    BYTE PTR [rax],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    al,bl
   140007359:	imul   eax,DWORD PTR [rax],0x140
   14000735f:	add    BYTE PTR [rdx],al
   140007361:	add    BYTE PTR [rax],al
   140007363:	add    BYTE PTR [rax],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    al,ch
   140007369:	imul   eax,DWORD PTR [rax],0x140
   14000736f:	add    BYTE PTR [rdx],dl
   140007371:	add    BYTE PTR [rax],al
   140007373:	add    BYTE PTR [rax],al
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    al,bh
   140007379:	imul   eax,DWORD PTR [rax],0x140
   14000737f:	add    BYTE PTR [rbx],al
   140007381:	add    BYTE PTR [rax],al
   140007383:	add    BYTE PTR [rax],al
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax],cl
   140007389:	push   0x0
   14000738b:	rex add DWORD PTR [rax],eax
   14000738e:	add    BYTE PTR [rax],al
   140007390:	adc    eax,DWORD PTR [rax]
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	sbb    BYTE PTR [rdx+0x0],ch
   14000739b:	rex add DWORD PTR [rax],eax
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	(bad)  
   1400073a1:	add    BYTE PTR [rax],al
   1400073a3:	add    BYTE PTR [rax],al
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rax],ch
   1400073a9:	push   0x0
   1400073ab:	rex add DWORD PTR [rax],eax
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	(bad)  
   1400073b1:	add    BYTE PTR [rax],al
   1400073b3:	add    BYTE PTR [rax],al
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax],bh
   1400073b9:	push   0x0
   1400073bb:	rex add DWORD PTR [rax],eax
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	adc    al,0x0
   1400073c2:	add    BYTE PTR [rax],al
   1400073c4:	add    BYTE PTR [rax],al
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	rex.W push 0x0
   1400073cb:	rex add DWORD PTR [rax],eax
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	adc    eax,0x0
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rax+0x6a],bl
   1400073da:	add    BYTE PTR [rax+0x1],al
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax+rax*1],al
   1400073e2:	add    BYTE PTR [rax],al
   1400073e4:	add    BYTE PTR [rax],al
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	push   0x140006a
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rip+0x0],al        # 0x1400073f5
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    BYTE PTR [rax+0x6a],bh
   1400073fa:	add    BYTE PTR [rax+0x1],al
   1400073fd:	add    BYTE PTR [rax],al
   1400073ff:	add    BYTE PTR [rbx],cl
   140007401:	add    BYTE PTR [rax],al
   140007403:	add    BYTE PTR [rax],al
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax+0x140006a],cl
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rdx],cl
   140007411:	add    BYTE PTR [rax],al
   140007413:	add    BYTE PTR [rax],al
   140007415:	add    BYTE PTR [rax],al
   140007417:	add    BYTE PTR [rax+0x140006a],bl
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rsi],al
   140007421:	add    BYTE PTR [rax],al
   140007423:	add    BYTE PTR [rax],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax+0x140006a],dh
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rdi],al
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rax],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    al,al
   140007439:	push   0x0
   14000743b:	rex add DWORD PTR [rax],eax
   14000743e:	add    BYTE PTR [rax],al
   140007440:	add    BYTE PTR [rax],al
   140007443:	add    BYTE PTR [rax],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    al,dl
   140007449:	push   0x0
   14000744b:	rex add DWORD PTR [rax],eax
   14000744e:	add    BYTE PTR [rax],al
   140007450:	rex.W add BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rax],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    al,ch
   140007459:	push   0x0
   14000745b:	rex add DWORD PTR [rax],eax
   14000745e:	add    BYTE PTR [rax],al
   140007460:	rex.RXB add BYTE PTR [r8],r8b
   140007463:	add    BYTE PTR [rax],al
   140007465:	add    BYTE PTR [rax],al
   140007467:	add    BYTE PTR [rax],al
   140007469:	imul   eax,DWORD PTR [rax],0x40
   14000746c:	add    DWORD PTR [rax],eax
   14000746e:	add    BYTE PTR [rax],al
   140007470:	or     BYTE PTR [rax],al
   140007472:	add    BYTE PTR [rax],al
   140007474:	add    BYTE PTR [rax],al
   140007476:	add    BYTE PTR [rax],al
   140007478:	adc    BYTE PTR [rbx+0x0],ch
   14000747b:	rex add DWORD PTR [rax],eax
   14000747e:	add    BYTE PTR [rax],al
   140007480:	add    BYTE PTR [r8],al
   140007483:	add    BYTE PTR [rax],al
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rax],ah
   140007489:	imul   eax,DWORD PTR [rax],0x40
   14000748c:	add    DWORD PTR [rax],eax
   14000748e:	add    BYTE PTR [rax],al
   140007490:	(bad)  
   140007491:	add    BYTE PTR [rax],al
   140007493:	add    BYTE PTR [rax],al
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    BYTE PTR [rax],dh
   140007499:	imul   eax,DWORD PTR [rax],0x40
   14000749c:	add    DWORD PTR [rax],eax
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	(bad)  
   1400074a1:	add    BYTE PTR [rax],al
   1400074a3:	add    BYTE PTR [rax],al
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax+0x6b],cl
   1400074aa:	add    BYTE PTR [rax+0x1],al
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rip+0x0],cl        # 0x1400074b5
   1400074b5:	add    BYTE PTR [rax],al
   1400074b7:	add    BYTE PTR [rax+0x6b],ah
   1400074ba:	add    BYTE PTR [rax+0x1],al
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    BYTE PTR [rcx],cl
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	add    BYTE PTR [rax],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rax+0x6b],bh
   1400074ca:	add    BYTE PTR [rax+0x1],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rbp+0x0],al
   1400074d2:	add    BYTE PTR [rax],al
   1400074d4:	add    BYTE PTR [rax],al
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	nop
   1400074d9:	imul   eax,DWORD PTR [rax],0x40
   1400074dc:	add    DWORD PTR [rax],eax
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	(bad)  
   1400074e1:	add    BYTE PTR [rax],al
   1400074e3:	add    BYTE PTR [rax],al
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rax+0x140006b],bh
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax+rax*1],cl
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	add    BYTE PTR [rax],al
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	shr    BYTE PTR [rbx+0x0],1
   1400074fb:	rex add DWORD PTR [rax],eax
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	adc    BYTE PTR [rax],dl
   140007502:	add    BYTE PTR [rax],al
   140007504:	add    BYTE PTR [rax],al
   140007506:	add    BYTE PTR [rax],al
   140007508:	call   0x141407578
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rcx],dl
   140007511:	adc    BYTE PTR [rax],al
   140007513:	add    BYTE PTR [rax],al
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rax],dl
   140007519:	ins    BYTE PTR es:[rdi],dx
   14000751a:	add    BYTE PTR [rax+0x1],al
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rdx],al
   140007521:	adc    BYTE PTR [rax],al
   140007523:	add    BYTE PTR [rax],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rax],bh
   140007529:	ins    BYTE PTR es:[rdi],dx
   14000752a:	add    BYTE PTR [rax+0x1],al
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    BYTE PTR [rdx],dl
   140007531:	adc    BYTE PTR [rax],al
   140007533:	add    BYTE PTR [rax],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rax+0x6c],ah
   14000753a:	add    BYTE PTR [rax+0x1],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    BYTE PTR [rbx],al
   140007541:	adc    BYTE PTR [rax],al
   140007543:	add    BYTE PTR [rax],al
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    BYTE PTR [rax+0x140006c],cl
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    BYTE PTR [rbx],dl
   140007551:	adc    BYTE PTR [rax],al
   140007553:	add    BYTE PTR [rax],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rax+0x140006c],dh
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rsi],dl
   140007561:	adc    BYTE PTR [rax],al
   140007563:	add    BYTE PTR [rax],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    al,bl
   140007569:	ins    BYTE PTR es:[rdi],dx
   14000756a:	add    BYTE PTR [rax+0x1],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rdi],dl
   140007571:	adc    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax],al
   140007579:	ins    DWORD PTR es:[rdi],dx
   14000757a:	add    BYTE PTR [rax+0x1],al
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax+rdx*1],dl
   140007582:	add    BYTE PTR [rax],al
   140007584:	add    BYTE PTR [rax],al
   140007586:	add    BYTE PTR [rax],al
   140007588:	sub    BYTE PTR [rbp+0x0],ch
   14000758b:	rex add DWORD PTR [rax],eax
   14000758e:	add    BYTE PTR [rax],al
   140007590:	adc    eax,0x10
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rax+0x6d],dl
   14000759a:	add    BYTE PTR [rax+0x1],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rax+rdx*1],al
   1400075a2:	add    BYTE PTR [rax],al
   1400075a4:	add    BYTE PTR [rax],al
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	js     0x140007617
   1400075aa:	add    BYTE PTR [rax+0x1],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rip+0x10],al        # 0x1400075c5
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rax+0x140006d],ah
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rbx],cl
   1400075c1:	adc    BYTE PTR [rax],al
   1400075c3:	add    BYTE PTR [rax],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    al,cl
   1400075c9:	ins    DWORD PTR es:[rdi],dx
   1400075ca:	add    BYTE PTR [rax+0x1],al
   1400075cd:	add    BYTE PTR [rax],al
   1400075cf:	add    BYTE PTR [rdx],cl
   1400075d1:	adc    BYTE PTR [rax],al
   1400075d3:	add    BYTE PTR [rax],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    al,dh
   1400075d9:	ins    DWORD PTR es:[rdi],dx
   1400075da:	add    BYTE PTR [rax+0x1],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rsi],al
   1400075e1:	adc    BYTE PTR [rax],al
   1400075e3:	add    BYTE PTR [rax],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax],ah
   1400075e9:	outs   dx,BYTE PTR ds:[rsi]
   1400075ea:	add    BYTE PTR [rax+0x1],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rdi],al
   1400075f1:	adc    BYTE PTR [rax],al
   1400075f3:	add    BYTE PTR [rax],al
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax+0x6e],cl
   1400075fa:	add    BYTE PTR [rax+0x1],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax+0x10],al
   140007602:	add    BYTE PTR [rax],al
   140007604:	add    BYTE PTR [rax],al
   140007606:	add    BYTE PTR [rax],al
   140007608:	jo     0x140007678
   14000760a:	add    BYTE PTR [rax+0x1],al
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax+0x10],cl
   140007612:	add    BYTE PTR [rax],al
   140007614:	add    BYTE PTR [rax],al
   140007616:	add    BYTE PTR [rax],al
   140007618:	movabs al,ds:0x470000000140006e
   140007621:	adc    BYTE PTR [rax],al
   140007623:	add    BYTE PTR [rax],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    al,dl
   140007629:	outs   dx,BYTE PTR ds:[rsi]
   14000762a:	add    BYTE PTR [rax+0x1],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax],cl
   140007631:	adc    BYTE PTR [rax],al
   140007633:	add    BYTE PTR [rax],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    al,bh
   140007639:	outs   dx,BYTE PTR ds:[rsi]
   14000763a:	add    BYTE PTR [rax+0x1],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rsi],bl
   140007641:	adc    BYTE PTR [rax],al
   140007643:	add    BYTE PTR [rax],al
   140007645:	add    BYTE PTR [rax],al
   140007647:	add    BYTE PTR [rax],ah
   140007649:	outs   dx,DWORD PTR ds:[rsi]
   14000764a:	add    BYTE PTR [rax+0x1],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rdi],bl
   140007651:	adc    BYTE PTR [rax],al
   140007653:	add    BYTE PTR [rax],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x6f],dl
   14000765a:	add    BYTE PTR [rax+0x1],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rax+rdx*1],cl
   140007662:	add    BYTE PTR [rax],al
   140007664:	add    BYTE PTR [rax],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	sub    BYTE PTR [rdi+0x0],0x40
   14000766c:	add    DWORD PTR [rax],eax
   14000766e:	add    BYTE PTR [rax],al
   140007670:	adc    BYTE PTR [rax],ah
   140007672:	add    BYTE PTR [rax],al
   140007674:	add    BYTE PTR [rax],al
   140007676:	add    BYTE PTR [rax],al
   140007678:	mov    al,0x6f
   14000767a:	add    BYTE PTR [rax+0x1],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    BYTE PTR [rcx],dl
   140007681:	and    BYTE PTR [rax],al
   140007683:	add    BYTE PTR [rax],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    al,bl
   140007689:	outs   dx,DWORD PTR ds:[rsi]
   14000768a:	add    BYTE PTR [rax+0x1],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rdx],al
   140007691:	and    BYTE PTR [rax],al
   140007693:	add    BYTE PTR [rax],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rax],al
   140007699:	jo     0x14000769b
   14000769b:	rex add DWORD PTR [rax],eax
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	adc    ah,BYTE PTR [rax]
   1400076a2:	add    BYTE PTR [rax],al
   1400076a4:	add    BYTE PTR [rax],al
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	sub    BYTE PTR [rax+0x0],dh
   1400076ab:	rex add DWORD PTR [rax],eax
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	add    esp,DWORD PTR [rax]
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	add    BYTE PTR [rax],al
   1400076b6:	add    BYTE PTR [rax],al
   1400076b8:	push   rax
   1400076b9:	jo     0x1400076bb
   1400076bb:	rex add DWORD PTR [rax],eax
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	adc    esp,DWORD PTR [rax]
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	add    BYTE PTR [rax],al
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	js     0x14000773a
   1400076ca:	add    BYTE PTR [rax+0x1],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rsi],dl
   1400076d1:	and    BYTE PTR [rax],al
   1400076d3:	add    BYTE PTR [rax],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax+0x1400070],ah
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rdi],dl
   1400076e1:	and    BYTE PTR [rax],al
   1400076e3:	add    BYTE PTR [rax],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    al,cl
   1400076e9:	jo     0x1400076eb
   1400076eb:	rex add DWORD PTR [rax],eax
   1400076ee:	add    BYTE PTR [rax],al
   1400076f0:	adc    al,0x20
   1400076f2:	add    BYTE PTR [rax],al
   1400076f4:	add    BYTE PTR [rax],al
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	lock jo 0x1400076fb
   1400076fb:	rex add DWORD PTR [rax],eax
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	adc    eax,0x20
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rax],bl
   140007709:	jno    0x14000770b
   14000770b:	rex add DWORD PTR [rax],eax
   14000770e:	add    BYTE PTR [rax],al
   140007710:	add    al,0x20
   140007712:	add    BYTE PTR [rax],al
   140007714:	add    BYTE PTR [rax],al
   140007716:	add    BYTE PTR [rax],al
   140007718:	rex jno 0x14000771b
   14000771b:	rex add DWORD PTR [rax],eax
   14000771e:	add    BYTE PTR [rax],al
   140007720:	add    eax,0x20
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rax+0x71],ch
   14000772a:	add    BYTE PTR [rax+0x1],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rbx],cl
   140007731:	and    BYTE PTR [rax],al
   140007733:	add    BYTE PTR [rax],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rax+0x1400071],dl
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    BYTE PTR [rdx],cl
   140007741:	and    BYTE PTR [rax],al
   140007743:	add    BYTE PTR [rax],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rax+0x1400071],bh
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rsi],al
   140007751:	and    BYTE PTR [rax],al
   140007753:	add    BYTE PTR [rax],al
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    al,ah
   140007759:	jno    0x14000775b
   14000775b:	rex add DWORD PTR [rax],eax
   14000775e:	add    BYTE PTR [rax],al
   140007760:	(bad)  
   140007761:	and    BYTE PTR [rax],al
   140007763:	add    BYTE PTR [rax],al
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rax],cl
   140007769:	jb     0x14000776b
   14000776b:	rex add DWORD PTR [rax],eax
   14000776e:	add    BYTE PTR [rax],al
   140007770:	(bad)  
   140007771:	and    BYTE PTR [rax],al
   140007773:	add    BYTE PTR [rax],al
   140007775:	add    BYTE PTR [rax],al
   140007777:	add    BYTE PTR [rax],dh
   140007779:	jb     0x14000777b
   14000777b:	rex add DWORD PTR [rax],eax
   14000777e:	add    BYTE PTR [rax],al
   140007780:	or     BYTE PTR [rax],ah
   140007782:	add    BYTE PTR [rax],al
   140007784:	add    BYTE PTR [rax],al
   140007786:	add    BYTE PTR [rax],al
   140007788:	(bad)  
   140007789:	jb     0x14000778b
   14000778b:	rex add DWORD PTR [rax],eax
   14000778e:	add    BYTE PTR [rax],al
   140007790:	or     eax,0x20
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rax+0x1400072],cl
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    BYTE PTR [rcx],cl
   1400077a1:	and    BYTE PTR [rax],al
   1400077a3:	add    BYTE PTR [rax],al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rax+0x1400072],bh
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rax+riz*1],cl
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	add    BYTE PTR [rax],al
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	call   0x14140782f
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800a7c5
   1400077c5:	add    BYTE PTR [rax+0x0],bh
   1400077c8:	sub    eax,0x30002500
   1400077cd:	add    BYTE PTR [rax+rax*1],dh
   1400077d0:	js     0x1400077d2
   1400077d2:	sub    eax,0x30002500
   1400077d7:	add    BYTE PTR [rax+rax*1],dh
   1400077da:	js     0x1400077dc
   1400077dc:	sub    eax,0x30002500
   1400077e1:	add    BYTE PTR [rdx],dh
   1400077e3:	add    BYTE PTR [rax+0x0],bh
   1400077e6:	and    eax,0x32003000
   1400077eb:	add    BYTE PTR [rax+0x0],bh
   1400077ee:	sub    eax,0x30002500
   1400077f3:	add    BYTE PTR [rdx],dh
   1400077f5:	add    BYTE PTR [rax+0x0],bh
   1400077f8:	and    eax,0x32003000
   1400077fd:	add    BYTE PTR [rax+0x0],bh
   140007800:	and    eax,0x32003000
   140007805:	add    BYTE PTR [rax+0x0],bh
   140007808:	and    eax,0x32003000
   14000780d:	add    BYTE PTR [rax+0x0],bh
   140007810:	and    eax,0x32003000
   140007815:	add    BYTE PTR [rax+0x0],bh
   140007818:	and    eax,0x32003000
   14000781d:	add    BYTE PTR [rax+0x0],bh
   140007820:	sub    al,0x0
   140007822:	and    BYTE PTR [rax],al
   140007824:	and    eax,0x6400
   140007829:	add    BYTE PTR [rax],al
   14000782b:	add    BYTE PTR [rax],al
   14000782d:	add    BYTE PTR [rax],al
   14000782f:	add    BYTE PTR [rax+0x0],dl
   140007832:	jb     0x140007834
   140007834:	outs   dx,DWORD PTR ds:[rsi]
   140007835:	add    BYTE PTR [rax+0x0],dh
   140007838:	add    BYTE PTR gs:[rdx+0x0],dh
   14000783c:	je     0x14000783e
   14000783e:	jns    0x140007840
   140007840:	push   rbx
   140007841:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140007845:	add    BYTE PTR [rdx+0x0],dh
   140007848:	add    BYTE PTR gs:[rax],al
   14000784b:	add    BYTE PTR [rip+0x6400],ah        # 0x14000dc51
   140007851:	add    BYTE PTR [rax],al
   140007853:	add    BYTE PTR [rax],al
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax+0x0],dh
   14000785a:	jb     0x14000785c
   14000785c:	outs   dx,DWORD PTR ds:[rsi]
   14000785d:	add    BYTE PTR [rax+0x0],dh
   140007860:	add    BYTE PTR gs:[rdx+0x0],dh
   140007864:	je     0x140007866
   140007866:	jns    0x140007868
   140007868:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000786c:	jne    0x14000786e
   14000786e:	outs   dx,BYTE PTR ds:[rsi]
   14000786f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140007873:	add    BYTE PTR [rax],al
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rax],dh
   140007879:	add    BYTE PTR [rax+0x0],bh
   14000787c:	and    eax,0x7800
   140007881:	add    BYTE PTR [rax],al
   140007883:	add    BYTE PTR [rax],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rax+0x0],dl
   14000788a:	jb     0x14000788c
   14000788c:	outs   dx,DWORD PTR ds:[rsi]
   14000788d:	add    BYTE PTR [rax+0x0],dh
   140007890:	add    BYTE PTR gs:[rdx+0x0],dh
   140007894:	je     0x140007896
   140007896:	jns    0x140007898
	...
   1400078a0:	imul   eax,DWORD PTR [rax],0x65
   1400078a3:	add    BYTE PTR [rcx+0x0],bh
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	push   rsi
   1400078a9:	add    BYTE PTR [rcx+0x0],ah
   1400078ac:	ins    BYTE PTR es:[rdi],dx
   1400078ad:	add    BYTE PTR [rbp+0x0],dh
   1400078b0:	add    BYTE PTR gs:[rax],al
   1400078b3:	add    BYTE PTR [rax],al
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    BYTE PTR [rax+rax*1+0x79],dh
   1400078bb:	add    BYTE PTR [rax+0x0],dh
   1400078be:	add    BYTE PTR gs:[rax],al
   1400078c1:	add    BYTE PTR [rax],al
   1400078c3:	add    BYTE PTR [rax],al
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    BYTE PTR [rsi+0x0],dh
   1400078ca:	add    BYTE PTR gs:[rbx+0x0],ah
   1400078ce:	je     0x1400078d0
   1400078d0:	outs   dx,DWORD PTR ds:[rsi]
   1400078d1:	add    BYTE PTR [rdx+0x0],dh
   1400078d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400078d8:	jne    0x1400078da
   1400078da:	outs   dx,BYTE PTR ds:[rsi]
   1400078db:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400078df:	add    BYTE PTR [rip+0x7500],ah        # 0x14000ede5
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rip+0x36004900],ah        # 0x17600c1ed
   1400078ed:	add    BYTE PTR [rax+rax*1],dh
   1400078f0:	add    BYTE PTR fs:[rax],al
   1400078f3:	add    BYTE PTR [rax],al
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rip+0x36004900],ah        # 0x17600c1fd
   1400078fd:	add    BYTE PTR [rax+rax*1],dh
   140007900:	jne    0x140007902
   140007902:	add    BYTE PTR [rax],al
   140007904:	and    eax,0x6600
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rax],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140007913:	add    BYTE PTR [rbp+0x0],dh
   140007916:	add    BYTE PTR gs:[rax],al
   140007919:	add    BYTE PTR [rax],al
   14000791b:	add    BYTE PTR [rax],al
   14000791d:	add    BYTE PTR [rax],al
   14000791f:	add    BYTE PTR [rsi+0x0],ah
   140007922:	(bad)  
   140007923:	add    BYTE PTR [rax+rax*1+0x73],ch
   140007927:	add    BYTE PTR [rbp+0x0],ah
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	and    eax,0x7300
   140007931:	add    BYTE PTR [rax],al
   140007933:	add    BYTE PTR [rax],al
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    dl,ah
   140007939:	jmp    0x103fa8d1e
   14000793e:	cmp    al,0x4e
   140007940:	nop
   140007941:	outs   dx,BYTE PTR ds:[rsi]
   140007942:	fs push rax
   140007944:	(bad)  
   140007945:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007946:	fcom   QWORD PTR [rbp+0x40eab0b9]
   14000794c:	jg     0x14000799b
   14000794e:	push   rbx
   14000794f:	rex.WXB movabs ds:0xf44190dd811534,rax
	...
   140007961:	add    BYTE PTR [rax],al
   140007963:	add    BYTE PTR [rcx+0x559f38],ah
   140007969:	add    BYTE PTR [rax],al
   14000796b:	add    BYTE PTR [rdx],al
   14000796d:	add    BYTE PTR [rax],al
   14000796f:	add    BYTE PTR [rax+rax*1],ah
   140007972:	add    BYTE PTR [rax],al
   140007974:	(bad)  
   140007975:	jp     0x140007977
   140007977:	add    BYTE PTR [rax+0x6a],ah
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	add    BYTE PTR [rax],al
   14000797e:	add    BYTE PTR [rax],al
   140007980:	movabs eax,ds:0xd00000000559f38
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    al,ah
   14000798d:	add    DWORD PTR [rax],eax
   14000798f:	add    BYTE PTR [rax-0x67ffff86],bl
   140007995:	push   0x0
	...
   1400079bf:	add    BYTE PTR [rax+0x0],ah
	...
   140007a15:	add    BYTE PTR [rax],al
   140007a17:	add    BYTE PTR [rax],cl
   140007a19:	nop
   140007a1a:	add    BYTE PTR [rax+0x1],al
	...
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax+0x1400041],dh
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	add    BYTE PTR [rax+0x1400041],bh
   140007a3d:	add    BYTE PTR [rax],al
   140007a3f:	add    al,bh
   140007a41:	add    BYTE PTR [r8+0x1],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rax],dl
	...
   140007a51:	xor    eax,0x0
	...
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	push   rdx
   140007a61:	push   rbx
   140007a62:	rex.R push rbx
   140007a64:	jp     0x140007a83
   140007a66:	(bad)  
   140007a68:	jnp    0x140007a35
   140007a6a:	add    ecx,DWORD PTR [rdx-0x4c]
   140007a6d:	rex.RX sar BYTE PTR [rsi+0x7e4402de],0x1
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rsp+rax*2+0x4f],al
   140007a7b:	imul   r12d,DWORD PTR [rcx+0x67],0x6264702e
	...
   140007a97:	add    BYTE PTR [rdi+0x43],al
   140007a9a:	push   rsp
   140007a9b:	rex.WR add BYTE PTR [rax],r10b
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	pop    rsp
   140007aa1:	sub    al,BYTE PTR [rax]
   140007aa3:	add    BYTE PTR [rsi],ch
   140007aa5:	je     0x140007b0c
   140007aa7:	js     0x140007b1d
   140007aa9:	and    al,0x6d
   140007aab:	outs   dx,BYTE PTR ds:[rsi]
   140007aac:	add    BYTE PTR [rax],al
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	(bad)  
   140007ab1:	cmp    al,BYTE PTR [rax]
   140007ab3:	add    BYTE PTR [rdx],dl
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rsi],ch
   140007ab9:	je     0x140007b20
   140007abb:	js     0x140007b31
   140007abd:	and    al,0x6d
   140007abf:	outs   dx,BYTE PTR ds:[rsi]
   140007ac0:	and    al,0x30
   140007ac2:	xor    BYTE PTR [rax],al
   140007ac4:	cmp    BYTE PTR [rdx],0x0
   140007ac7:	add    BYTE PTR [rax+0x0],dl
   140007aca:	add    BYTE PTR [rax],al
   140007acc:	cs je  0x140007b34
   140007acf:	js     0x140007b45
   140007ad1:	and    al,0x78
   140007ad3:	add    BYTE PTR [rax],al
   140007ad5:	add    BYTE PTR [rax],al
   140007ad8:	mov    al,0x1
   140007ada:	add    BYTE PTR [rax],al
   140007adc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rax+0x10000041],dh
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rsi],ch
   140007af1:	xor    BYTE PTR [rax],dh
   140007af3:	movsxd esp,DWORD PTR [rsi+0x67]
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	rol    BYTE PTR [rcx+0x0],0x0
   140007afc:	or     BYTE PTR [rax],al
   140007afe:	add    BYTE PTR [rax],al
   140007b00:	cs rex.XB push r10
   140007b03:	push   rsp
   140007b04:	and    al,0x58
   140007b06:	rex.XB
   140007b07:	add    BYTE PTR [r8],al
   140007b0a:	add    BYTE PTR [rax],al
   140007b0c:	enter  0x41,0x0
   140007b10:	or     BYTE PTR [rax],al
   140007b12:	add    BYTE PTR [rax],al
   140007b14:	cs rex.XB push r10
   140007b17:	push   rsp
   140007b18:	and    al,0x58
   140007b1a:	rex.XB
   140007b1b:	rex.B
   140007b1c:	add    BYTE PTR [r8],al
   140007b1f:	add    al,dl
   140007b21:	add    BYTE PTR [r8],al
   140007b24:	or     BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	cs rex.XB push r10
   140007b2b:	push   rsp
   140007b2c:	and    al,0x58
   140007b2e:	rex.XB pop r10
   140007b30:	add    BYTE PTR [rax],al
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	fadd   DWORD PTR [rcx+0x0]
   140007b37:	add    BYTE PTR [rax],cl
   140007b39:	add    BYTE PTR [rax],al
   140007b3b:	add    BYTE PTR [rsi],ch
   140007b3d:	rex.XB push r10
   140007b3f:	push   rsp
   140007b40:	and    al,0x58
   140007b42:	rex.WB
   140007b43:	add    BYTE PTR [r8],al
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	loopne 0x140007b8b
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	or     BYTE PTR [rax],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	cs rex.XB push r10
   140007b53:	push   rsp
   140007b54:	and    al,0x58
   140007b56:	rex.WB
   140007b57:	rex.B
   140007b58:	add    BYTE PTR [r8],al
   140007b5b:	add    al,ch
   140007b5d:	add    BYTE PTR [r8],al
   140007b60:	or     BYTE PTR [rax],al
   140007b62:	add    BYTE PTR [rax],al
   140007b64:	cs rex.XB push r10
   140007b67:	push   rsp
   140007b68:	and    al,0x58
   140007b6a:	rex.WB pop r9
   140007b6c:	add    BYTE PTR [rax],al
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	lock add BYTE PTR [r8],al
   140007b74:	or     BYTE PTR [rax],al
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	cs rex.XB push r10
   140007b7b:	push   rsp
   140007b7c:	and    al,0x58
   140007b7e:	rex.WB pop r10
   140007b80:	add    BYTE PTR [rax],al
   140007b82:	add    BYTE PTR [rax],al
   140007b84:	clc    
   140007b85:	add    BYTE PTR [r8],al
   140007b88:	add    BYTE PTR [rax],al
   140007b8b:	add    BYTE PTR [rsi],ch
   140007b8d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    BYTE PTR [rax+0x42],al
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	and    BYTE PTR [rax],bh
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	cs jb  0x140007c07
   140007ba3:	(bad)  
   140007ba4:	je     0x140007c07
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	(bad)  
   140007ba9:	jp     0x140007bab
   140007bab:	add    BYTE PTR [rax],bl
   140007bad:	add    al,BYTE PTR [rax]
   140007baf:	add    BYTE PTR [rsi],ch
   140007bb1:	jb     0x140007c17
   140007bb3:	(bad)  
   140007bb4:	je     0x140007c17
   140007bb6:	and    al,0x7a
   140007bb8:	jp     0x140007c34
   140007bba:	fs (bad) 
   140007bbc:	add    BYTE PTR [eax],al
   140007bbf:	add    BYTE PTR [rax+0x7c],bh
   140007bc2:	add    BYTE PTR [rax],al
   140007bc4:	mov    esp,0x2e000001
   140007bc9:	js     0x140007c2f
   140007bcb:	(bad)  
   140007bcc:	je     0x140007c2f
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	cmp    BYTE PTR [rsi+0x0],bh
   140007bd3:	add    BYTE PTR [rax+0x0],dl
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140007be1:	add    BYTE PTR [rax],al
   140007be3:	add    BYTE PTR [rax+0x1400007e],cl
   140007be9:	add    BYTE PTR [rax],al
   140007beb:	add    BYTE PTR [rsi],ch
   140007bed:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax-0x4fffff82],ah
   140007bfd:	add    DWORD PTR [rax],eax
   140007bff:	add    BYTE PTR [rsi],ch
   140007c01:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007c09:	add    BYTE PTR [rax],al
   140007c0b:	add    BYTE PTR [rax-0x80],dl
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	jp     0x140007c15
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rax],al
   140007c21:	nop
   140007c22:	add    BYTE PTR [rax],al
   140007c24:	adc    BYTE PTR [rax+rax*1],0x0
   140007c28:	cs fs (bad) 
   140007c2b:	je     0x140007c8e
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rax+0x180000a4],al
   140007c35:	(bad)  
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	cs (bad) 
   140007c3b:	jae    0x140007c3d
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    BYTE PTR [rax],al
   140007c41:	mov    al,0x0
   140007c43:	add    BYTE PTR [rcx+rax*1+0x702e0000],ah
   140007c4a:	fs (bad) 
   140007c4c:	je     0x140007caf
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	add    al,al
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	movabs al,ds:0x637273722e000000
   140007c5d:	and    al,0x30
   140007c5f:	xor    DWORD PTR [rax],eax
   140007c61:	add    BYTE PTR [rax],al
   140007c63:	add    BYTE PTR [rax-0x37ffff40],ah
   140007c69:	(bad)  
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	cs jb  0x140007ce2
   140007c6f:	jb     0x140007cd4
   140007c71:	and    al,0x30
   140007c73:	xor    al,BYTE PTR [rax]
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rcx],al
   140007c79:	or     al,BYTE PTR [rax+rax*1]
   140007c7c:	or     dh,BYTE PTR [rsi+rax*1]
   140007c7f:	add    BYTE PTR [rdx],cl
   140007c81:	xor    al,BYTE PTR [rsi]
   140007c83:	jo     0x140007c86
   140007c85:	adc    eax,0x74150008
   140007c8a:	or     BYTE PTR [rax],al
   140007c8c:	adc    eax,0x15000764
   140007c91:	xor    al,0x6
   140007c93:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e08dcb
   140007c99:	(bad)  
   140007c9a:	add    al,BYTE PTR [rax]
   140007c9c:	(bad)  
   140007c9d:	push   rdx
   140007c9e:	add    dh,BYTE PTR [rax]
   140007ca0:	add    DWORD PTR [rsi],eax
   140007ca2:	add    al,BYTE PTR [rax]
   140007ca4:	(bad)  
   140007ca5:	xor    al,BYTE PTR [rdx]
   140007ca7:	xor    BYTE PTR [rcx],al
   140007ca9:	adc    eax,0x64150008
   140007cae:	adc    DWORD PTR [rax],eax
   140007cb0:	adc    eax,0x15001034
   140007cb5:	mov    dl,0xe
   140007cb7:	lock or al,0x70
   140007cba:	or     edx,DWORD PTR [rax+0x1]
   140007cbd:	(bad)  
   140007cbe:	or     al,0x0
   140007cc0:	(bad)  
   140007cc1:	fs or  eax,0xc541f00
   140007cc7:	add    BYTE PTR [rdi],bl
   140007cc9:	xor    al,0xb
   140007ccb:	add    BYTE PTR [rdi],bl
   140007ccd:	xor    bl,BYTE PTR [rbx]
   140007ccf:	lock sbb eax,esp
   140007cd2:	(bad)  
   140007cd3:	rcl    BYTE PTR [rip+0x17013c0],1        # 0x141709099
   140007cd9:	adc    cl,BYTE PTR [rax]
   140007cdb:	add    BYTE PTR [rdx],dl
   140007cdd:	xchg   edx,eax
   140007cde:	or     esi,eax
   140007ce0:	or     eax,esp
   140007ce2:	(bad)  
   140007ce3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360815a
   140007cea:	add    dl,BYTE PTR [rax+0x1]
   140007ced:	adc    cl,BYTE PTR [rax]
   140007cef:	add    BYTE PTR [rdx],dl
   140007cf1:	jb     0x140007cfe
   140007cf3:	lock or eax,esp
   140007cf6:	(bad)  
   140007cf7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360816e
   140007cfe:	add    dl,BYTE PTR [rax+0x1]
   140007d01:	adc    cl,BYTE PTR [rax]
   140007d03:	add    BYTE PTR [rdx],dl
   140007d05:	xor    al,0xe
   140007d07:	add    BYTE PTR [rdx],dl
   140007d09:	jb     0x140007d19
   140007d0b:	lock or al,0xe0
   140007d0e:	or     dh,BYTE PTR [rax+0x9]
   140007d11:	(bad)  
   140007d12:	or     BYTE PTR [rax+0x1],dl
   140007d15:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e428f1b
   140007d1b:	jo     0x140007d2a
   140007d1d:	(bad)  
   140007d1e:	or     al,0x50
   140007d20:	or     esi,DWORD PTR [rax]
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    DWORD PTR [rbx],ebx
   140007d26:	or     al,BYTE PTR [rax]
   140007d28:	sbb    esp,DWORD PTR [rdi+rdx*1+0x0]
   140007d2c:	sbb    edx,DWORD PTR [rsi+rdx*1+0x0]
   140007d30:	sbb    esi,DWORD PTR [rdx*1+0x14f21b00]
   140007d37:	lock adc ah,al
   140007d3a:	adc    BYTE PTR [rax+0x19],dh
   140007d3d:	sub    cl,BYTE PTR [rbx]
   140007d3f:	add    BYTE PTR [rsp+rsi*1],bl
   140007d42:	xor    BYTE PTR [rax],al
   140007d44:	sbb    al,0x1
   140007d46:	add    BYTE PTR es:[rax],dl
   140007d49:	lock (bad) 
   140007d4b:	loopne 0x140007d59
   140007d4d:	ror    BYTE PTR [rdx],1
   140007d4f:	ror    BYTE PTR [rax],0x70
   140007d52:	(bad)  
   140007d53:	(bad)  
   140007d54:	(bad)  
   140007d55:	push   rax
   140007d56:	add    BYTE PTR [rax],al
   140007d58:	enter  0x39,0x0
   140007d5c:	and    BYTE PTR [rcx],al
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	sbb    DWORD PTR [rdx],ebp
   140007d62:	or     eax,DWORD PTR [rax]
   140007d64:	sbb    al,0x34
   140007d66:	and    DWORD PTR [rax],eax
   140007d68:	sbb    al,0x1
   140007d6a:	(bad)  
   140007d6b:	add    BYTE PTR [rax],dl
   140007d6d:	lock (bad) 
   140007d6f:	loopne 0x140007d7d
   140007d71:	ror    BYTE PTR [rdx],1
   140007d73:	ror    BYTE PTR [rax],0x70
   140007d76:	(bad)  
   140007d77:	(bad)  
   140007d78:	(bad)  
   140007d79:	push   rax
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	enter  0x39,0x0
   140007d80:	movabs al,ds:0x400010401000000
   140007d89:	(bad)  
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	or     DWORD PTR [rcx],ebx
   140007d8e:	or     al,BYTE PTR [rax]
   140007d90:	sbb    esp,eax
   140007d92:	or     eax,DWORD PTR [rax]
   140007d94:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140007d98:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140007d9c:	sbb    DWORD PTR [rax+rcx*1],esi
   140007d9f:	add    BYTE PTR [rcx],bl
   140007da1:	push   rdx
   140007da2:	adc    eax,0x37d6e0
   140007da7:	add    BYTE PTR [rcx],al
   140007da9:	add    BYTE PTR [rax],al
   140007dab:	add    BYTE PTR [rcx+0xa000032],bl
   140007db1:	xor    al,0x0
   140007db3:	add    BYTE PTR [rsi+0xa00003a],al
   140007db9:	xor    al,0x0
   140007dbb:	add    BYTE PTR [rax],al
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    BYTE PTR [rcx],al
   140007dc1:	add    BYTE PTR [rax],al
   140007dc3:	add    BYTE PTR [rcx],cl
   140007dc5:	add    al,0x1
   140007dc7:	add    BYTE PTR [rdx+riz*1],al
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	(bad)  
   140007dcd:	(bad)  
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	add    DWORD PTR [rax],eax
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	pop    rsp
   140007dd5:	xor    eax,0x35920000
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    DWORD PTR [rax],eax
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	xchg   edx,eax
   140007de1:	xor    eax,0xa090000
   140007de6:	add    al,0x0
   140007de8:	or     dh,BYTE PTR [rsi+rax*1]
   140007deb:	add    BYTE PTR [rdx],cl
   140007ded:	xor    al,BYTE PTR [rsi]
   140007def:	jo     0x140007dc7
   140007df1:	(bad)  
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	add    DWORD PTR [rax],eax
   140007df6:	add    BYTE PTR [rax],al
   140007df8:	ins    DWORD PTR es:[rdi],dx
   140007df9:	add    BYTE PTR ss:[rax],al
   140007dfc:	movabs al,ds:0xa000003ab0000036
   140007e05:	add    BYTE PTR ss:[rax],al
   140007e08:	add    DWORD PTR [rsi],eax
   140007e0a:	add    al,BYTE PTR [rax]
   140007e0c:	(bad)  
   140007e0d:	xor    al,BYTE PTR [rdx]
   140007e0f:	push   rax
   140007e10:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7e1a
   140007e16:	or     DWORD PTR [rax],eax
   140007e18:	or     eax,0x1500632
   140007e1d:	or     al,0x2
   140007e1f:	add    BYTE PTR [rcx+rax*1],cl
   140007e22:	adc    DWORD PTR [rax],eax
   140007e24:	add    BYTE PTR [rax],al
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	add    DWORD PTR [rax],eax
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	add    DWORD PTR [rcx+rax*1],eax
   140007e2f:	add    BYTE PTR [rdx+rax*2],al
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	add    BYTE PTR [rax],al
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	movabs al,ds:0x7e
   140007e41:	add    BYTE PTR [rax],al
   140007e43:	add    dh,ch
   140007e45:	add    BYTE PTR [rax],0x0
   140007e48:	add    BYTE PTR [rax+0x0],al
   140007e4b:	add    BYTE PTR [rax+0x7f],dh
	...
   140007e56:	add    BYTE PTR [rax],al
   140007e58:	fadd   QWORD PTR [rcx+0x40d00000]
   140007e5e:	add    BYTE PTR [rax],al
   140007e60:	adc    BYTE PTR [rax+0x0],al
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	add    BYTE PTR [rax],al
   140007e6a:	add    BYTE PTR [rax],al
   140007e6c:	jl     0x140007df0
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	jo     0x140007eb3
   140007e72:	add    BYTE PTR [rax],al
   140007e74:	(bad)  
   140007e75:	jg     0x140007e77
	...
   140007e7f:	add    BYTE PTR [rax-0x3fffff7e],bl
   140007e85:	add    BYTE PTR [rax],al
	...
   140007ea0:	push   rax
   140007ea1:	add    BYTE PTR [rax],0x0
   140007ea4:	add    BYTE PTR [rax],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	add    BYTE PTR fs:[rax],0x0
   140007eac:	add    BYTE PTR [rax],al
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	js     0x140007e32
   140007eb2:	add    BYTE PTR [rax],al
   140007eb4:	add    BYTE PTR [rax],al
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	test   BYTE PTR [rax+0x0],al
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	nop
   140007ec1:	add    BYTE PTR [rax],0x0
   140007ec4:	add    BYTE PTR [rax],al
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	sahf   
   140007ec9:	add    BYTE PTR [rax],0x0
   140007ecc:	add    BYTE PTR [rax],al
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	scas   al,BYTE PTR es:[rdi]
   140007ed1:	add    BYTE PTR [rax],0x0
   140007ed4:	add    BYTE PTR [rax],al
   140007ed6:	add    BYTE PTR [rax],al
   140007ed8:	mov    esi,0x80
   140007edd:	add    BYTE PTR [rax],al
   140007edf:	add    dh,cl
   140007ee1:	add    BYTE PTR [rax],0x0
   140007ee4:	add    BYTE PTR [rax],al
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	loopne 0x140007e6a
   140007eea:	add    BYTE PTR [rax],al
   140007eec:	add    BYTE PTR [rax],al
   140007eee:	add    BYTE PTR [rax],al
   140007ef0:	retf   0x82
   140007ef3:	add    BYTE PTR [rax],al
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rdx+rax*4+0x0],ch
   140007efe:	add    BYTE PTR [rax],al
   140007f00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007f01:	(bad)  
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	add    BYTE PTR [rax],al
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	clc    
   140007f09:	(bad)  
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    BYTE PTR [rax],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	(bad)  
   140007f11:	add    DWORD PTR [rax],0x0
   140007f14:	add    BYTE PTR [rax],al
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	and    al,0x83
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	add    BYTE PTR [rax],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	add    DWORD PTR ds:[rax],0x0
   140007f24:	add    BYTE PTR [rax],al
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	rex.WRX add QWORD PTR [rax],0x0
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	(bad)  
   140007f32:	add    BYTE PTR [rax],al
   140007f34:	add    BYTE PTR [rax],al
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	jl     0x140007ebd
   140007f3a:	add    BYTE PTR [rax],al
   140007f3c:	add    BYTE PTR [rax],al
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	nop
   140007f41:	add    DWORD PTR [rax],0x0
   140007f44:	add    BYTE PTR [rax],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	lods   al,BYTE PTR ds:[rsi]
   140007f49:	add    DWORD PTR [rax],0x0
   140007f4c:	add    BYTE PTR [rax],al
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	fiadd  WORD PTR [rdx+0x0]
	...
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	xchg   BYTE PTR [rdx+0x0],al
	...
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	call   0x140007ff6
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    BYTE PTR [rcx+rax*4+0x0],al
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	rol    BYTE PTR [rcx+0x0],1
   140007f86:	add    BYTE PTR [rax],al
   140007f88:	je     0x140007f0b
   140007f8a:	add    BYTE PTR [rax],al
   140007f8c:	add    BYTE PTR [rax],al
   140007f8e:	add    BYTE PTR [rax],al
   140007f90:	(bad)  
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	add    BYTE PTR [rax],al
   140007f96:	add    BYTE PTR [rax],al
   140007f98:	push   rax
   140007f99:	add    DWORD PTR [rax],0x0
   140007f9f:	add    BYTE PTR [rdx-0x7f],al
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	add    BYTE PTR [rax],al
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	xor    al,0x81
   140007faa:	add    BYTE PTR [rax],al
   140007fac:	add    BYTE PTR [rax],al
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	sub    BYTE PTR [rcx+0x0],al
   140007fb6:	add    BYTE PTR [rax],al
   140007fb8:	(bad)  
   140007fb9:	add    DWORD PTR [rax],0x0
   140007fbf:	add    BYTE PTR [rsi+0x81],cl
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    dh,al
   140007fc9:	add    DWORD PTR [rax],0x0
   140007fcf:	add    BYTE PTR [rcx+rax*4+0x0],bh
   140007fd3:	add    BYTE PTR [rax],al
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    BYTE PTR [rdx+0x81],ah
   140007fdd:	add    BYTE PTR [rax],al
   140007fdf:	add    BYTE PTR [rsi],dl
   140007fe1:	add    DWORD PTR [rax],0x0
   140007fe7:	add    BYTE PTR [rax],cl
   140007fe9:	add    DWORD PTR [rax],0x0
   140007fef:	add    ah,bh
   140007ff1:	add    BYTE PTR [rax],0x0
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	scas   al,BYTE PTR es:[rdi]
   140007ff9:	add    DWORD PTR [rax],0x0
   140007fff:	add    al,al
   140008001:	add    DWORD PTR [rax],0x0
	...
   140008010:	push   0x82
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    BYTE PTR [rsi-0x7e],dl
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	rex.R (bad) 
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	xor    al,BYTE PTR [rdx+0x0]
   14000802e:	add    BYTE PTR [rax],al
   140008030:	and    al,BYTE PTR [rdx+0x0]
   140008036:	add    BYTE PTR [rax],al
   140008038:	adc    BYTE PTR [rdx+0x0],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	cld    
   140008041:	add    DWORD PTR [rax],0x0
	...
   14000804f:	add    BYTE PTR [rax],dl
   140008051:	add    al,BYTE PTR [rdi+0x65]
   140008054:	je     0x140008099
   140008056:	jne    0x1400080ca
   140008058:	jb     0x1400080bf
   14000805a:	outs   dx,BYTE PTR ds:[rsi]
   14000805b:	je     0x1400080ad
   14000805d:	jb     0x1400080ce
   14000805f:	movsxd esp,DWORD PTR [rbp+0x73]
   140008062:	jae    0x140008064
   140008064:	adc    eax,0x74655305
   140008069:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x746e696f
   140008072:	gs jb  0x1400080ba
   140008075:	js     0x140008077
   140008077:	add    BYTE PTR [rax],al
   140008079:	(bad)  
   14000807a:	push   rdi
   14000807b:	jb     0x1400080e6
   14000807d:	je     0x1400080e4
   14000807f:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6552045c
   140008088:	(bad)  
   140008089:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4300c000
   140008093:	jb     0x1400080fa
   140008095:	(bad)  
   140008096:	je     0x1400080fd
   140008098:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4702ed00
   1400080a1:	gs je  0x1400080f8
   1400080a4:	gs ins DWORD PTR es:[rdi],dx
   1400080a6:	jo     0x1400080f8
   1400080a8:	(bad)  
   1400080a9:	je     0x140008113
   1400080ab:	push   rdi
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    r8b,BYTE PTR [rdi+0x65]
   1400080b2:	je     0x1400080fa
   1400080b4:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x45657a69
   1400080bc:	js     0x1400080be
   1400080be:	push   rdi
   1400080bf:	add    al,BYTE PTR [rdi+0x65]
   1400080c2:	je     0x140008110
   1400080c4:	(bad)  
   1400080c5:	jae    0x14000813b
   1400080c7:	rex.RB jb 0x14000813c
   1400080ca:	outs   dx,DWORD PTR ds:[rsi]
   1400080cb:	jb     0x1400080cd
   1400080cd:	add    BYTE PTR [rbx],ah
   1400080cf:	add    DWORD PTR [rbp+rsi*2+0x70],eax
   1400080d3:	ins    BYTE PTR es:[rdi],dx
   1400080d4:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   1400080db:	outs   dx,BYTE PTR ds:[rsi]
   1400080dc:	fs ins BYTE PTR es:[rdi],dx
   1400080de:	add    BYTE PTR gs:[rbp+0x0],bh
   1400080e2:	rex.XB ins BYTE PTR es:[rdi],dx
   1400080e4:	outs   dx,DWORD PTR ds:[rsi]
   1400080e5:	jae    0x14000814c
   1400080e7:	rex.W (bad) 
   1400080e9:	outs   dx,BYTE PTR ds:[rsi]
   1400080ea:	fs ins BYTE PTR es:[rdi],dx
   1400080ec:	add    BYTE PTR gs:[rbx+0x45],cl
   1400080f0:	push   rdx
   1400080f1:	rex.WRX
   1400080f2:	rex.RB
   1400080f3:	xor    r14,QWORD PTR [rdx]
   1400080f6:	cs fs ins BYTE PTR es:[rdi],dx
   1400080f9:	ins    BYTE PTR es:[rdi],dx
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	mov    al,BYTE PTR [rbx]
   1400080fe:	pop    rdi
   1400080ff:	ja     0x140008164
   140008101:	jae    0x14000816c
   140008103:	movsxd ebp,DWORD PTR [rbp+0x70]
   140008106:	add    BYTE PTR [rax],al
   140008108:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000810e:	ja     0x140008180
   140008110:	jb     0x14000817b
   140008112:	outs   dx,BYTE PTR ds:[rsi]
   140008113:	je     0x14000817b
   140008115:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140008119:	jb     0x140008180
   14000811b:	add    BYTE PTR gs:[rax],al
   14000811e:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140008125:	movsxd eax,DWORD PTR [rax]
   140008127:	add    BYTE PTR [rdi+0x61635f00],bh
   14000812d:	ins    BYTE PTR es:[rdi],dx
   14000812e:	ins    BYTE PTR es:[rdi],dx
   14000812f:	outs   dx,BYTE PTR ds:[rsi]
   140008130:	gs ja  0x14000819b
   140008133:	add    BYTE PTR [rbp+0x0],dl
   140008136:	pop    rdi
   140008137:	pop    rax
   140008138:	movsxd esi,DWORD PTR [rax+0x74]
   14000813b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008144:	pop    rdi
   140008145:	(bad)  
   140008146:	ins    DWORD PTR es:[rdi],dx
   140008147:	jae    0x1400081b0
   140008149:	pop    rdi
   14000814a:	gs js  0x1400081b6
   14000814d:	je     0x14000814f
   14000814f:	add    BYTE PTR [rbp+0x775f5f00],bl
   140008155:	addr32 gs je 0x1400081c6
   140008159:	(bad)  
   14000815a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008161:	add    BYTE PTR [rsi+0x735f5f00],cl
   140008167:	gs je  0x1400081c9
   14000816a:	(bad)  
   14000816b:	jo     0x1400081dd
   14000816d:	pop    rdi
   14000816e:	je     0x1400081e9
   140008170:	jo     0x1400081d7
   140008172:	add    BYTE PTR [rax],al
   140008174:	xor    al,BYTE PTR [riz*2+0x746978]
   14000817b:	add    BYTE PTR [rsi],cl
   14000817d:	add    DWORD PTR [rdi+0x65],ebx
   140008180:	js     0x1400081eb
   140008182:	je     0x140008184
   140008184:	rol    DWORD PTR [rax],0x5f
   140008187:	movsxd esp,DWORD PTR [rbp+0x78]
   14000818a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140008192:	jae    0x1400081f9
   140008194:	je     0x14000820b
   140008196:	jae    0x1400081fd
   140008198:	jb     0x140008207
   14000819a:	(bad)  
   14000819b:	je     0x140008205
   14000819d:	gs jb  0x140008212
   1400081a0:	add    BYTE PTR [rax],al
   1400081a2:	jge    0x1400081a5
   1400081a4:	pop    rdi
   1400081a5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400081ac:	ins    DWORD PTR es:[rdi],dx
   1400081ad:	add    BYTE PTR [rdi+0x0],dl
   1400081b0:	pop    rdi
   1400081b1:	pop    rdi
   1400081b2:	rex.XB pop r15
   1400081b4:	jae    0x140008226
   1400081b6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400081ba:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400081c1:	ins    BYTE PTR es:[rdi],dx
   1400081c2:	gs jb  0x1400081c5
   1400081c5:	add    BYTE PTR [rdi],ah
   1400081c7:	add    DWORD PTR [rdi+0x66],ebx
   1400081ca:	ins    DWORD PTR es:[rdi],dx
   1400081cb:	outs   dx,DWORD PTR ds:[rsi]
   1400081cc:	fs add BYTE PTR gs:[rax],al
   1400081d0:	rol    BYTE PTR [rax],cl
   1400081d2:	pop    rdi
   1400081d3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400081d6:	ins    DWORD PTR es:[rdi],dx
   1400081d7:	outs   dx,DWORD PTR ds:[rsi]
   1400081d8:	fs add BYTE PTR gs:[rax],al
   1400081dc:	ins    DWORD PTR es:[rdi],dx
   1400081dd:	jae    0x140008255
   1400081df:	movsxd esi,DWORD PTR [rdx+0x74]
   1400081e2:	cs fs ins BYTE PTR es:[rdi],dx
   1400081e5:	ins    BYTE PTR es:[rdi],dx
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	(bad)  
   1400081e9:	add    BYTE PTR [rdi],bh
   1400081eb:	je     0x140008252
   1400081ed:	jb     0x14000825c
   1400081ef:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400081f6:	pop    rcx
   1400081f7:	pop    r8
   1400081f9:	pop    rax
   1400081fa:	pop    rdx
   1400081fb:	add    BYTE PTR [rbx],ch
   1400081fd:	add    BYTE PTR [rbx+0x6f],al
   140008200:	rex.XB jb 0x140008268
   140008203:	(bad)  
   140008204:	je     0x14000826b
   140008206:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008208:	jae    0x14000827e
   14000820a:	(bad)  
   14000820b:	outs   dx,BYTE PTR ds:[rsi]
   14000820c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000820f:	add    BYTE PTR [rax+0x556f4300],dl
   140008215:	outs   dx,BYTE PTR ds:[rsi]
   140008216:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000821d:	imul   edi,DWORD PTR [rdx+0x65],0x8c0000
   140008224:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008226:	push   rsp
   140008227:	(bad)  
   140008228:	jae    0x140008295
   14000822a:	rex.WRB
   14000822b:	gs ins DWORD PTR es:[rdi],dx
   14000822d:	rex.RX jb 0x140008295
   140008230:	add    BYTE PTR gs:[rbx+0x546f4300],cl
   140008237:	(bad)  
   140008238:	jae    0x1400082a5
   14000823a:	rex.WRB
   14000823b:	gs ins DWORD PTR es:[rdi],dx
   14000823d:	rex.B ins BYTE PTR es:[rdi],dx
   14000823f:	ins    BYTE PTR es:[rdi],dx
   140008240:	outs   dx,DWORD PTR ds:[rsi]
   140008241:	movsxd eax,DWORD PTR [rax]
   140008243:	add    BYTE PTR [rcx+0x0],ah
   140008246:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008248:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000824a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008252:	rex.RB js 0x140008255
   140008255:	add    BYTE PTR [rdx],cl
   140008257:	add    dl,BYTE PTR [rbx+0x74]
   14000825a:	jb     0x1400082c5
   14000825c:	outs   dx,BYTE PTR ds:[rsi]
   14000825d:	addr32 rex.RX jb 0x1400082d0
   140008261:	ins    DWORD PTR es:[rdi],dx
   140008262:	rex.XB
   140008263:	rex.WR push rbx
   140008265:	rex.WB
   140008266:	add    sil,r9b
   140008269:	add    DWORD PTR [rax+0x72],edx
   14000826c:	outs   dx,DWORD PTR ds:[rsi]
   14000826d:	jo     0x1400082c5
   14000826f:	(bad)  
   140008270:	jb     0x1400082db
   140008272:	(bad)  
   140008273:	outs   dx,BYTE PTR ds:[rsi]
   140008274:	je     0x1400082b9
   140008276:	ins    BYTE PTR es:[rdi],dx
   140008277:	gs (bad) 
   140008279:	jb     0x14000827b
   14000827b:	add    BYTE PTR [rdi+0x6c],ch
   14000827e:	xor    esi,DWORD PTR gs:[rdx]
   140008281:	cs fs ins BYTE PTR es:[rdi],dx
   140008284:	ins    BYTE PTR es:[rdi],dx
   140008285:	add    BYTE PTR [rbx],al
   140008287:	add    BYTE PTR [rbx+0x72],al
   14000828a:	gs (bad) 
   14000828c:	je     0x1400082f3
   14000828e:	pop    rax
   14000828f:	ins    DWORD PTR es:[rdi],dx
   140008290:	ins    BYTE PTR es:[rdi],dx
   140008291:	push   rdi
   140008292:	jb     0x1400082fd
   140008294:	je     0x1400082fb
   140008296:	jb     0x140008298
   140008298:	pop    rax
   140008299:	ins    DWORD PTR es:[rdi],dx
   14000829a:	ins    BYTE PTR es:[rdi],dx
   14000829b:	imul   r14,QWORD PTR [rbp+riz*2+0x2e],0x6c6c64
   1400082a4:	ins    DWORD PTR es:[rdi],dx
   1400082a5:	add    eax,0x65656c53
   1400082aa:	jo     0x1400082ac
   1400082ac:	pop    rsi
   1400082ad:	add    eax,0x55746553
   1400082b2:	outs   dx,BYTE PTR ds:[rsi]
   1400082b3:	push   0x6c646e61
   1400082b8:	gs fs rex.RB js 0x140008320
   1400082bd:	gs jo  0x140008334
   1400082c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400082c7:	gs jb  0x1400082ca
   1400082ca:	outs   dx,BYTE PTR ds:[rsi]
   1400082cb:	add    al,BYTE PTR [rdi+0x65]
   1400082ce:	je     0x14000831d
   1400082d0:	outs   dx,DWORD PTR ds:[rsi]
   1400082d1:	fs jne 0x140008340
   1400082d4:	gs rex.W (bad) 
   1400082d7:	outs   dx,BYTE PTR ds:[rsi]
   1400082d8:	fs ins BYTE PTR es:[rdi],dx
   1400082da:	gs push rdi
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	ss add al,0x51
   1400082e1:	jne    0x140008348
   1400082e3:	jb     0x14000835e
   1400082e5:	push   rax
   1400082e6:	gs jb  0x14000834f
   1400082e9:	outs   dx,DWORD PTR ds:[rsi]
   1400082ea:	jb     0x140008359
   1400082ec:	(bad)  
   1400082ed:	outs   dx,BYTE PTR ds:[rsi]
   1400082ee:	movsxd esp,DWORD PTR [rbp+0x43]
   1400082f1:	outs   dx,DWORD PTR ds:[rsi]
   1400082f2:	jne    0x140008362
   1400082f4:	je     0x14000835b
   1400082f6:	jb     0x1400082f8
   1400082f8:	adc    DWORD PTR [rdx],eax
   1400082fa:	rex.RXB
   1400082fb:	gs je  0x140008341
   1400082fe:	jne    0x140008372
   140008300:	jb     0x140008367
   140008302:	outs   dx,BYTE PTR ds:[rsi]
   140008303:	je     0x140008355
   140008305:	jb     0x140008376
   140008307:	movsxd esp,DWORD PTR [rbp+0x73]
   14000830a:	jae    0x140008355
   14000830c:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465ca15
   140008313:	rex.XB jne 0x140008388
   140008316:	jb     0x14000837d
   140008318:	outs   dx,BYTE PTR ds:[rsi]
   140008319:	je     0x14000836f
   14000831b:	push   0x64616572
   140008320:	rex.WB
   140008321:	add    BYTE PTR fs:[rax],al
   140008324:	loopne 0x140008328
   140008326:	rex.RXB
   140008327:	gs je  0x14000837d
   14000832a:	jns    0x14000839f
   14000832c:	je     0x140008393
   14000832e:	ins    DWORD PTR es:[rdi],dx
   14000832f:	push   rsp
   140008330:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008337:	ins    BYTE PTR es:[rdi],dx
   140008338:	gs push rsp
   14000833a:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140008341:	gs je  0x140008398
   140008344:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000834b:	je     0x14000834d
   14000834d:	add    BYTE PTR [rdi+0x6c745204],dh
   140008353:	rex.XB (bad) 
   140008355:	jo     0x1400083cb
   140008357:	jne    0x1400083cb
   140008359:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000835c:	outs   dx,BYTE PTR ds:[rsi]
   14000835d:	je     0x1400083c4
   14000835f:	js     0x1400083d5
   140008361:	add    BYTE PTR [rsi+0x6c745204],bh
   140008367:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008369:	outs   dx,DWORD PTR ds:[rsi]
   14000836a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000836e:	jne    0x1400083de
   140008370:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008374:	outs   dx,BYTE PTR ds:[rsi]
   140008375:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008377:	je     0x1400083eb
   140008379:	jns    0x14000837b
   14000837b:	add    ch,al
   14000837d:	add    al,0x52
   14000837f:	je     0x1400083ed
   140008381:	push   rsi
   140008382:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008389:	outs   dx,BYTE PTR ds:[rsi]
   14000838a:	ja     0x1400083f5
   14000838c:	outs   dx,BYTE PTR ds:[rsi]
   14000838d:	add    BYTE PTR fs:[rax],al
   140008390:	sahf   
   140008391:	add    eax,0x61686e55
   140008396:	outs   dx,BYTE PTR ds:[rsi]
   140008397:	fs ins BYTE PTR es:[rdi],dx
   140008399:	gs fs rex.RB js 0x140008401
   14000839e:	gs jo  0x140008415
   1400083a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400083a8:	gs jb  0x1400083ab
   1400083ab:	add    BYTE PTR [rbp+rax*1+0x54],bh
   1400083af:	gs jb  0x14000841f
   1400083b2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400083b9:	outs   dx,DWORD PTR ds:[rsi]
   1400083ba:	movsxd esp,DWORD PTR [rbp+0x73]
   1400083bd:	jae    0x1400083bf
   1400083bf:	add    BYTE PTR [rsi+0x6d656d04],dl
   1400083c5:	jae    0x14000842c
   1400083c7:	je     0x1400083c9
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rdx],dl
   140009021:	(bad)  
   140009022:	(bad)  
   140009023:	(bad)  
   140009024:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009025:	push   rdi
   140009026:	in     al,0x45
   140009028:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000902e:	pop    rbx
   14000902f:	mov    ebx,0x1
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	lock rex.XB add BYTE PTR [r8+0x1],al
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rdx],dl
   140009041:	(bad)  
   140009042:	(bad)  
   140009043:	(bad)  
   140009044:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009045:	push   rdi
   140009046:	in     al,0x45
   140009048:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000904e:	pop    rbx
   14000904f:	mov    ebx,0x2
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	rex
   140009059:	add    BYTE PTR [rax+0x1],r8b
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rdx],dl
   140009061:	(bad)  
   140009062:	(bad)  
   140009063:	(bad)  
   140009064:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009065:	push   rdi
   140009066:	in     al,0x45
   140009068:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000906e:	pop    rbx
   14000906f:	mov    ebx,0x3
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	movabs al,ds:0x1200000001400044
   140009081:	(bad)  
   140009082:	(bad)  
   140009083:	(bad)  
   140009084:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009085:	push   rdi
   140009086:	in     al,0x45
   140009088:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000908e:	pop    rbx
   14000908f:	mov    ebx,0x4
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	lock add BYTE PTR [rax+0x1],r8b
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    BYTE PTR [rdx],dl
   1400090a1:	(bad)  
   1400090a2:	(bad)  
   1400090a3:	(bad)  
   1400090a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400090a5:	push   rdi
   1400090a6:	in     al,0x45
   1400090a8:	test   DWORD PTR [rdx-0x61ddf536],ecx
   1400090ae:	pop    rbx
   1400090af:	mov    ebx,0x5
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	rex
   1400090b9:	add    BYTE PTR [r8+0x1],r8b
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    BYTE PTR [rdx],dl
   1400090c1:	(bad)  
   1400090c2:	(bad)  
   1400090c3:	(bad)  
   1400090c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400090c5:	push   rdi
   1400090c6:	in     al,0x45
   1400090c8:	test   DWORD PTR [rdx-0x61ddf536],ecx
   1400090ce:	pop    rbx
   1400090cf:	mov    ebx,0x6
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	movabs al,ds:0x1200000001400045
   1400090e1:	(bad)  
   1400090e2:	(bad)  
   1400090e3:	(bad)  
   1400090e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400090e5:	push   rdi
   1400090e6:	in     al,0x45
   1400090e8:	test   DWORD PTR [rdx-0x61ddf536],ecx
   1400090ee:	pop    rbx
   1400090ef:	mov    ebx,0x7
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	lock add BYTE PTR [r8+0x1],r8b
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rdx],dl
   140009101:	(bad)  
   140009102:	(bad)  
   140009103:	(bad)  
   140009104:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009105:	push   rdi
   140009106:	in     al,0x45
   140009108:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000910e:	pop    rbx
   14000910f:	mov    ebx,0x8
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	rex
   140009119:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000911d:	add    BYTE PTR [rax],al
   14000911f:	add    BYTE PTR [rdx],dl
   140009121:	(bad)  
   140009122:	(bad)  
   140009123:	(bad)  
   140009124:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009125:	push   rdi
   140009126:	in     al,0x45
   140009128:	test   DWORD PTR [rdx-0x61ddf536],ecx
   14000912e:	pop    rbx
   14000912f:	mov    ebx,0x9
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	nop
   140009139:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    BYTE PTR [rsi+0x25],cl
   140009142:	pop    rsp
   140009143:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009144:	sbb    al,0xdf
   140009146:	std    
   140009147:	rex.WRX and BYTE PTR [rax],0x67
   14000914b:	rol    DWORD PTR [rsi-0x58],1
   14000914e:	push   rax
   14000914f:	loopne 0x14000916f
   140009151:	add    BYTE PTR [rax],al
   140009153:	add    BYTE PTR [rax],al
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    al,dl
   140009159:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rsi+0x25],cl
   140009162:	pop    rsp
   140009163:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009164:	sbb    al,0xdf
   140009166:	std    
   140009167:	rex.WRX and BYTE PTR [rax],0x67
   14000916b:	rol    DWORD PTR [rsi-0x58],1
   14000916e:	push   rax
   14000916f:	loopne 0x140009197
   140009171:	add    BYTE PTR [rax],al
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    al,bh
   140009179:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rip+0x33eaee7f],bl        # 0x173eb8004
   140009185:	push   0xffffffffffffffd1
   140009187:	rex.R xchg esp,eax
   140009189:	pop    r15
   14000918b:	rex.RX fdivrp st(2),st
   14000918e:	xor    DWORD PTR [rax+0x9],ebx
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	xor    BYTE PTR [rdi+0x0],al
   14000919b:	rex add DWORD PTR [rax],eax
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	rex.WRX and rax,0xffffffffdf1ca45c
   1400091a6:	std    
   1400091a7:	rex.WRX and BYTE PTR [rax],0x67
   1400091ab:	rol    DWORD PTR [rsi-0x58],1
   1400091ae:	push   rax
   1400091af:	loopne 0x1400091c8
   1400091b1:	add    BYTE PTR [rax],al
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    BYTE PTR [rax+0x47],ah
   1400091ba:	add    BYTE PTR [rax+0x1],al
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    BYTE PTR [rsi+0x25],cl
   1400091c2:	pop    rsp
   1400091c3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400091c4:	sbb    al,0xdf
   1400091c6:	std    
   1400091c7:	rex.WRX and BYTE PTR [rax],0x67
   1400091cb:	rol    DWORD PTR [rsi-0x58],1
   1400091ce:	push   rax
   1400091cf:	loopne 0x1400091e6
   1400091d1:	add    BYTE PTR [rax],al
   1400091d3:	add    BYTE PTR [rax],al
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rax+0x1400047],dl
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rsi+0x25],cl
   1400091e2:	pop    rsp
   1400091e3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400091e4:	sbb    al,0xdf
   1400091e6:	std    
   1400091e7:	rex.WRX and BYTE PTR [rax],0x67
   1400091eb:	rol    DWORD PTR [rsi-0x58],1
   1400091ee:	push   rax
   1400091ef:	loopne 0x140009202
   1400091f1:	add    BYTE PTR [rax],al
   1400091f3:	add    BYTE PTR [rax],al
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    al,al
   1400091f9:	rex.RXB add BYTE PTR [r8+0x1],r8b
   1400091fd:	add    BYTE PTR [rax],al
   1400091ff:	add    BYTE PTR [rsi+0x25],cl
   140009202:	pop    rsp
   140009203:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009204:	sbb    al,0xdf
   140009206:	std    
   140009207:	rex.WRX and BYTE PTR [rax],0x67
   14000920b:	rol    DWORD PTR [rsi-0x58],1
   14000920e:	push   rax
   14000920f:	loopne 0x14000922e
   140009211:	add    BYTE PTR [rax],al
   140009213:	add    BYTE PTR [rax],al
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    al,bh
   140009219:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000921d:	add    BYTE PTR [rax],al
   14000921f:	add    BYTE PTR [rsi+0x25],cl
   140009222:	pop    rsp
   140009223:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009224:	sbb    al,0xdf
   140009226:	std    
   140009227:	rex.WRX and BYTE PTR [rax],0x67
   14000922b:	rol    DWORD PTR [rsi-0x58],1
   14000922e:	push   rax
   14000922f:	loopne 0x14000923a
   140009231:	add    BYTE PTR [rax],al
   140009233:	add    BYTE PTR [rax],al
   140009235:	add    BYTE PTR [rax],al
   140009237:	add    BYTE PTR [rax],dh
   140009239:	rex.W add BYTE PTR [rax+0x1],al
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rsi+0x25],cl
   140009242:	pop    rsp
   140009243:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009244:	sbb    al,0xdf
   140009246:	std    
   140009247:	rex.WRX and BYTE PTR [rax],0x67
   14000924b:	rol    DWORD PTR [rsi-0x58],1
   14000924e:	push   rax
   14000924f:	loopne 0x14000925b
   140009251:	add    BYTE PTR [rax],al
   140009253:	add    BYTE PTR [rax],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax+0x48],bl
   14000925a:	add    BYTE PTR [rax+0x1],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rsi+0x25],cl
   140009262:	pop    rsp
   140009263:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009264:	sbb    al,0xdf
   140009266:	std    
   140009267:	rex.WRX and BYTE PTR [rax],0x67
   14000926b:	rol    DWORD PTR [rsi-0x58],1
   14000926e:	push   rax
   14000926f:	loopne 0x140009275
   140009271:	add    BYTE PTR [rax],al
   140009273:	add    BYTE PTR [rax],al
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rax+0x1400048],cl
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rsi+0x25],cl
   140009282:	pop    rsp
   140009283:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009284:	sbb    al,0xdf
   140009286:	std    
   140009287:	rex.WRX and BYTE PTR [rax],0x67
   14000928b:	rol    DWORD PTR [rsi-0x58],1
   14000928e:	push   rax
   14000928f:	loopne 0x14000929d
   140009291:	add    BYTE PTR [rax],al
   140009293:	add    BYTE PTR [rax],al
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    al,al
   140009299:	rex.W add BYTE PTR [rax+0x1],al
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    BYTE PTR [rsi],al
   1400092a1:	sar    BYTE PTR [rsi-0x74],cl
   1400092a4:	mov    bh,BYTE PTR [rdi]
   1400092a6:	(bad)  
   1400092a7:	rex.W mov bl,0xab
   1400092aa:	scas   al,BYTE PTR es:[rdi]
   1400092ab:	sahf   
   1400092ac:	(bad)  
   1400092ad:	scas   al,BYTE PTR es:[rdi]
   1400092ae:	cld    
   1400092af:	ins    BYTE PTR es:[rdi],dx
   1400092b0:	add    al,BYTE PTR [rax]
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	lock rex.W add BYTE PTR [rax+0x1],al
   1400092bd:	add    BYTE PTR [rax],al
   1400092bf:	add    BYTE PTR [rsi+0x25],cl
   1400092c2:	pop    rsp
   1400092c3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400092c4:	sbb    al,0xdf
   1400092c6:	std    
   1400092c7:	rex.WRX and BYTE PTR [rax],0x67
   1400092cb:	rol    DWORD PTR [rsi-0x58],1
   1400092ce:	push   rax
   1400092cf:	loopne 0x1400092d3
   1400092d1:	add    BYTE PTR [rax],al
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    BYTE PTR [rax],ah
   1400092d9:	rex.WB add BYTE PTR [r8+0x1],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    ch,al
   1400092e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400092e2:	rex
   1400092e3:	rex.XB cli 
   1400092e5:	xchg   ebx,eax
   1400092e6:	(bad)  
   1400092e7:	rex.RXB xchg r15d,eax
   1400092e9:	sub    al,0x7b
   1400092eb:	or     BYTE PTR fs:[rax],0xa5
   1400092ef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400092f0:	add    al,BYTE PTR [rax]
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	add    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	push   rax
   1400092f9:	rex.WB add BYTE PTR [r8+0x1],al
   1400092fd:	add    BYTE PTR [rax],al
   1400092ff:	add    BYTE PTR [rsi+0x25],cl
   140009302:	pop    rsp
   140009303:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009304:	sbb    al,0xdf
   140009306:	std    
   140009307:	rex.WRX and BYTE PTR [rax],0x67
   14000930b:	rol    DWORD PTR [rsi-0x58],1
   14000930e:	push   rax
   14000930f:	loopne 0x14000931c
   140009311:	add    BYTE PTR [rax],al
   140009313:	add    BYTE PTR [rax],al
   140009315:	add    BYTE PTR [rax],al
   140009317:	add    BYTE PTR [rax+0x1400049],cl
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    ch,bl
   140009321:	gs mov eax,0x942e3da8
   140009327:	rex lods eax,DWORD PTR ds:[rsi]
   140009329:	xchg   edi,eax
   14000932a:	in     eax,0x93
   14000932c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000932d:	or     al,0x75
   14000932f:	(bad)  
   140009330:	add    al,BYTE PTR [rax]
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    BYTE PTR [rax],al
   140009336:	add    BYTE PTR [rax],al
   140009338:	mov    al,0x49
   14000933a:	add    BYTE PTR [rax+0x1],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    ch,bl
   140009341:	gs mov eax,0x942e3da8
   140009347:	rex lods eax,DWORD PTR ds:[rsi]
   140009349:	xchg   edi,eax
   14000934a:	in     eax,0x93
   14000934c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000934d:	or     al,0x75
   14000934f:	(bad)  
   140009350:	add    al,0x0
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	loopne 0x1400093a3
   14000935a:	add    BYTE PTR [rax+0x1],al
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    ch,bl
   140009361:	gs mov eax,0x942e3da8
   140009367:	rex lods eax,DWORD PTR ds:[rsi]
   140009369:	xchg   edi,eax
   14000936a:	in     eax,0x93
   14000936c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000936d:	or     al,0x75
   14000936f:	(bad)  
   140009370:	add    eax,0x0
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax],dl
   140009379:	rex.WX add BYTE PTR [rax+0x1],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    ch,bl
   140009381:	gs mov eax,0x942e3da8
   140009387:	rex lods eax,DWORD PTR ds:[rsi]
   140009389:	xchg   edi,eax
   14000938a:	in     eax,0x93
   14000938c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000938d:	or     al,0x75
   14000938f:	(bad)  
   140009390:	(bad)  
   140009391:	add    BYTE PTR [rax],al
   140009393:	add    BYTE PTR [rax],al
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rax+0x4a],cl
   14000939a:	add    BYTE PTR [rax+0x1],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    ch,bl
   1400093a1:	gs mov eax,0x942e3da8
   1400093a7:	rex lods eax,DWORD PTR ds:[rsi]
   1400093a9:	xchg   edi,eax
   1400093aa:	in     eax,0x93
   1400093ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400093ad:	or     al,0x75
   1400093af:	(bad)  
   1400093b0:	(bad)  
   1400093b1:	add    BYTE PTR [rax],al
   1400093b3:	add    BYTE PTR [rax],al
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    BYTE PTR [rax+0x140004a],dl
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    ch,bl
   1400093c1:	gs mov eax,0x942e3da8
   1400093c7:	rex lods eax,DWORD PTR ds:[rsi]
   1400093c9:	xchg   edi,eax
   1400093ca:	in     eax,0x93
   1400093cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400093cd:	or     al,0x75
   1400093cf:	(bad)  
   1400093d0:	or     al,BYTE PTR [rax]
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	add    BYTE PTR [rax],al
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	ror    BYTE PTR [rdx+0x0],1
   1400093db:	rex add DWORD PTR [rax],eax
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	frstor [rbp-0x48]
   1400093e3:	test   al,0x3d
   1400093e5:	cs xchg esp,eax
   1400093e7:	rex lods eax,DWORD PTR ds:[rsi]
   1400093e9:	xchg   edi,eax
   1400093ea:	in     eax,0x93
   1400093ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400093ed:	or     al,0x75
   1400093ef:	(bad)  
   1400093f0:	or     DWORD PTR [rax],eax
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	sbb    BYTE PTR [rbx+0x0],cl
   1400093fb:	rex add DWORD PTR [rax],eax
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	frstor [rbp-0x48]
   140009403:	test   al,0x3d
   140009405:	cs xchg esp,eax
   140009407:	rex lods eax,DWORD PTR ds:[rsi]
   140009409:	xchg   edi,eax
   14000940a:	in     eax,0x93
   14000940c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000940d:	or     al,0x75
   14000940f:	(bad)  
   140009410:	(bad)  
   140009411:	add    BYTE PTR [rax],al
   140009413:	add    BYTE PTR [rax],al
   140009415:	add    BYTE PTR [rax],al
   140009417:	add    BYTE PTR [rax+0x4b],dl
   14000941a:	add    BYTE PTR [rax+0x1],al
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    ch,bl
   140009421:	gs mov eax,0x942e3da8
   140009427:	rex lods eax,DWORD PTR ds:[rsi]
   140009429:	xchg   edi,eax
   14000942a:	in     eax,0x93
   14000942c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000942d:	or     al,0x75
   14000942f:	(bad)  
   140009430:	add    eax,DWORD PTR [rax]
   140009432:	add    BYTE PTR [rax],al
   140009434:	add    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	or     BYTE PTR [rbx+0x0],0x40
   14000943c:	add    DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	rex.WRX and rax,0xffffffffdf1ca45c
   140009446:	std    
   140009447:	rex.WRX and BYTE PTR [rax],0x67
   14000944b:	rol    DWORD PTR [rsi-0x58],1
   14000944e:	push   rax
   14000944f:	loopne 0x140009469
   140009451:	add    BYTE PTR [rax],al
   140009453:	add    BYTE PTR [rax],al
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rax+0x140004b],bh
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rsi+0x25],cl
   140009462:	pop    rsp
   140009463:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009464:	sbb    al,0xdf
   140009466:	std    
   140009467:	rex.WRX and BYTE PTR [rax],0x67
   14000946b:	rol    DWORD PTR [rsi-0x58],1
   14000946e:	push   rax
   14000946f:	loopne 0x14000947f
   140009471:	add    BYTE PTR [rax],al
   140009473:	add    BYTE PTR [rax],al
   140009475:	add    BYTE PTR [rax],al
   140009477:	add    al,dh
   140009479:	rex.WXB add BYTE PTR [r8+0x1],al
   14000947d:	add    BYTE PTR [rax],al
   14000947f:	add    BYTE PTR [rsi+0x25],cl
   140009482:	pop    rsp
   140009483:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009484:	sbb    al,0xdf
   140009486:	std    
   140009487:	rex.WRX and BYTE PTR [rax],0x67
   14000948b:	rol    DWORD PTR [rsi-0x58],1
   14000948e:	push   rax
   14000948f:	loopne 0x140009494
   140009491:	add    BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rax],al
   140009495:	add    BYTE PTR [rax],al
   140009497:	add    BYTE PTR [rax],ch
   140009499:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rsi+0x25],cl
   1400094a2:	pop    rsp
   1400094a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094a4:	sbb    al,0xdf
   1400094a6:	std    
   1400094a7:	rex.WRX and BYTE PTR [rax],0x67
   1400094ab:	rol    DWORD PTR [rsi-0x58],1
   1400094ae:	push   rax
   1400094af:	loopne 0x1400094d5
   1400094b1:	add    BYTE PTR [rax],al
   1400094b3:	add    BYTE PTR [rax],al
   1400094b5:	add    BYTE PTR [rax],al
   1400094b7:	add    BYTE PTR [rax+0x4c],bl
   1400094ba:	add    BYTE PTR [rax+0x1],al
   1400094bd:	add    BYTE PTR [rax],al
   1400094bf:	add    al,cl
   1400094c1:	rex.WRXB ret 
   1400094c3:	js     0x14000950f
   1400094c5:	adc    dl,cl
   1400094c7:	rex.WX sahf 
   1400094c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094ca:	push   rdx
   1400094cb:	rex.WRB push r10
   1400094cd:	cdq    
   1400094ce:	outs   dx,BYTE PTR ds:[rsi]
   1400094cf:	push   rdi
   1400094d0:	add    BYTE PTR [rcx],al
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	add    BYTE PTR [rax],al
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	nop
   1400094d9:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    al,cl
   1400094e1:	rex.WRXB ret 
   1400094e3:	js     0x14000952f
   1400094e5:	adc    dl,cl
   1400094e7:	rex.WX sahf 
   1400094e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094ea:	push   rdx
   1400094eb:	rex.WRB push r10
   1400094ed:	cdq    
   1400094ee:	outs   dx,BYTE PTR ds:[rsi]
   1400094ef:	push   rdi
   1400094f0:	add    DWORD PTR [rcx],eax
   1400094f2:	add    BYTE PTR [rax],al
   1400094f4:	add    BYTE PTR [rax],al
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	ror    BYTE PTR [rax+rax*1+0x40],0x1
   1400094fd:	add    BYTE PTR [rax],al
   1400094ff:	add    BYTE PTR [rsi+0x25],cl
   140009502:	pop    rsp
   140009503:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009504:	sbb    al,0xdf
   140009506:	std    
   140009507:	rex.WRX and BYTE PTR [rax],0x67
   14000950b:	rol    DWORD PTR [rsi-0x58],1
   14000950e:	push   rax
   14000950f:	loopne 0x140009527
   140009511:	add    BYTE PTR [rax],al
   140009513:	add    BYTE PTR [rax],al
   140009515:	add    BYTE PTR [rax],al
   140009517:	add    al,dh
   140009519:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000951d:	add    BYTE PTR [rax],al
   14000951f:	add    BYTE PTR [rsi+0x25],cl
   140009522:	pop    rsp
   140009523:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009524:	sbb    al,0xdf
   140009526:	std    
   140009527:	rex.WRX and BYTE PTR [rax],0x67
   14000952b:	rol    DWORD PTR [rsi-0x58],1
   14000952e:	push   rax
   14000952f:	loopne 0x140009540
   140009531:	add    BYTE PTR [rax],al
   140009533:	add    BYTE PTR [rax],al
   140009535:	add    BYTE PTR [rax],al
   140009537:	add    BYTE PTR [rax],ch
   140009539:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    BYTE PTR [rsi+0x25],cl
   140009542:	pop    rsp
   140009543:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009544:	sbb    al,0xdf
   140009546:	std    
   140009547:	rex.WRX and BYTE PTR [rax],0x67
   14000954b:	rol    DWORD PTR [rsi-0x58],1
   14000954e:	push   rax
   14000954f:	loopne 0x140009576
   140009551:	add    BYTE PTR [rax],al
   140009553:	add    BYTE PTR [rax],al
   140009555:	add    BYTE PTR [rax],al
   140009557:	add    BYTE PTR [rax+0x4d],ah
   14000955a:	add    BYTE PTR [rax+0x1],al
   14000955d:	add    BYTE PTR [rax],al
   14000955f:	add    BYTE PTR [rsi+0x25],cl
   140009562:	pop    rsp
   140009563:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009564:	sbb    al,0xdf
   140009566:	std    
   140009567:	rex.WRX and BYTE PTR [rax],0x67
   14000956b:	rol    DWORD PTR [rsi-0x58],1
   14000956e:	push   rax
   14000956f:	loopne 0x140009585
   140009571:	add    BYTE PTR [rax],al
   140009573:	add    BYTE PTR [rax],al
   140009575:	add    BYTE PTR [rax],al
   140009577:	add    BYTE PTR [rax+0x140004d],bl
   14000957d:	add    BYTE PTR [rax],al
   14000957f:	add    BYTE PTR [rsi+0x25],cl
   140009582:	pop    rsp
   140009583:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009584:	sbb    al,0xdf
   140009586:	std    
   140009587:	rex.WRX and BYTE PTR [rax],0x67
   14000958b:	rol    DWORD PTR [rsi-0x58],1
   14000958e:	push   rax
   14000958f:	loopne 0x14000959e
   140009591:	add    BYTE PTR [rax],al
   140009593:	add    BYTE PTR [rax],al
   140009595:	add    BYTE PTR [rax],al
   140009597:	add    al,dl
   140009599:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000959d:	add    BYTE PTR [rax],al
   14000959f:	add    ch,bl
   1400095a1:	gs mov eax,0x942e3da8
   1400095a7:	rex lods eax,DWORD PTR ds:[rsi]
   1400095a9:	xchg   edi,eax
   1400095aa:	in     eax,0x93
   1400095ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400095ad:	or     al,0x75
   1400095af:	(bad)  
   1400095b0:	or     BYTE PTR [rax],al
   1400095b2:	add    BYTE PTR [rax],al
   1400095b4:	add    BYTE PTR [rax],al
   1400095b6:	add    BYTE PTR [rax],al
   1400095b8:	or     BYTE PTR [rsi+0x0],cl
   1400095bb:	rex add DWORD PTR [rax],eax
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	enter  0xc34f,0x78
   1400095c4:	rex.WX adc dl,cl
   1400095c7:	rex.WX sahf 
   1400095c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400095ca:	push   rdx
   1400095cb:	rex.WRB push r10
   1400095cd:	cdq    
   1400095ce:	outs   dx,BYTE PTR ds:[rsi]
   1400095cf:	push   rdi
   1400095d0:	(bad)  
   1400095d1:	add    BYTE PTR [rax],al
   1400095d3:	add    BYTE PTR [rax],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rax+0x4e],cl
   1400095da:	add    BYTE PTR [rax+0x1],al
   1400095dd:	add    BYTE PTR [rax],al
   1400095df:	add    BYTE PTR [rsi+0x7380d81e],ah
   1400095e5:	je     0x1400095f3
   1400095e7:	rex.WXB (bad) 
   1400095e9:	(bad)  
   1400095ea:	out    dx,eax
   1400095eb:	rcr    DWORD PTR [rdx],0x2c
   1400095ee:	mov    r8,QWORD PTR [rdx]
   1400095f1:	add    BYTE PTR [rax],al
   1400095f3:	add    BYTE PTR [rax],al
   1400095f5:	add    BYTE PTR [rax],al
   1400095f7:	add    BYTE PTR [rax+0x4e],dh
   1400095fa:	add    BYTE PTR [rax+0x1],al
   1400095fd:	add    BYTE PTR [rax],al
   1400095ff:	add    ch,bl
   140009601:	gs mov eax,0x942e3da8
   140009607:	rex lods eax,DWORD PTR ds:[rsi]
   140009609:	xchg   edi,eax
   14000960a:	in     eax,0x93
   14000960c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000960d:	or     al,0x75
   14000960f:	(bad)  
   140009610:	adc    DWORD PTR [rax],eax
   140009612:	add    BYTE PTR [rax],al
   140009614:	add    BYTE PTR [rax],al
   140009616:	add    BYTE PTR [rax],al
   140009618:	cwde   
   140009619:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000961d:	add    BYTE PTR [rax],al
   14000961f:	add    BYTE PTR [rdx+0x1d904b03],ah
   140009625:	rex.RXB cmp al,0x42
   140009628:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009629:	test   bl,dh
   14000962b:	rex.W xor dil,BYTE PTR [rax]
   14000962e:	movabs eax,ds:0x246
   140009637:	add    al,dl
   140009639:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000963d:	add    BYTE PTR [rax],al
   14000963f:	add    ch,al
   140009641:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009642:	rex
   140009643:	rex.XB cli 
   140009645:	xchg   ebx,eax
   140009646:	(bad)  
   140009647:	rex.RXB xchg r15d,eax
   140009649:	sub    al,0x7b
   14000964b:	or     BYTE PTR fs:[rax],0xa5
   14000964f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009650:	or     BYTE PTR [rax],al
   140009652:	add    BYTE PTR [rax],al
   140009654:	add    BYTE PTR [rax],al
   140009656:	add    BYTE PTR [rax],al
   140009658:	add    BYTE PTR [rdi+0x0],cl
   14000965b:	rex add DWORD PTR [rax],eax
   14000965e:	add    BYTE PTR [rax],al
   140009660:	rex.WRX and rax,0xffffffffdf1ca45c
   140009666:	std    
   140009667:	rex.WRX and BYTE PTR [rax],0x67
   14000966b:	rol    DWORD PTR [rsi-0x58],1
   14000966e:	push   rax
   14000966f:	loopne 0x140009681
   140009671:	add    BYTE PTR [rax],al
   140009673:	add    BYTE PTR [rax],al
   140009675:	add    BYTE PTR [rax],al
   140009677:	add    BYTE PTR [rax],ch
   140009679:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000967d:	add    BYTE PTR [rax],al
   14000967f:	add    BYTE PTR [rsi+0x25],cl
   140009682:	pop    rsp
   140009683:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009684:	sbb    al,0xdf
   140009686:	std    
   140009687:	rex.WRX and BYTE PTR [rax],0x67
   14000968b:	rol    DWORD PTR [rsi-0x58],1
   14000968e:	push   rax
   14000968f:	loopne 0x1400096b1
   140009691:	add    BYTE PTR [rax],al
   140009693:	add    BYTE PTR [rax],al
   140009695:	add    BYTE PTR [rax],al
   140009697:	add    BYTE PTR [rax+0x4f],dl
   14000969a:	add    BYTE PTR [rax+0x1],al
   14000969d:	add    BYTE PTR [rax],al
   14000969f:	add    ch,al
   1400096a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400096a2:	rex
   1400096a3:	rex.XB cli 
   1400096a5:	xchg   ebx,eax
   1400096a6:	(bad)  
   1400096a7:	rex.RXB xchg r15d,eax
   1400096a9:	sub    al,0x7b
   1400096ab:	or     BYTE PTR fs:[rax],0xa5
   1400096af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400096b0:	add    eax,DWORD PTR [rax]
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	add    BYTE PTR [rax],al
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	or     BYTE PTR [rdi+0x0],0x40
   1400096bc:	add    DWORD PTR [rax],eax
   1400096be:	add    BYTE PTR [rax],al
   1400096c0:	rex.WRX and rax,0xffffffffdf1ca45c
   1400096c6:	std    
   1400096c7:	rex.WRX and BYTE PTR [rax],0x67
   1400096cb:	rol    DWORD PTR [rsi-0x58],1
   1400096ce:	push   rax
   1400096cf:	loopne 0x1400096f2
   1400096d1:	add    BYTE PTR [rax],al
   1400096d3:	add    BYTE PTR [rax],al
   1400096d5:	add    BYTE PTR [rax],al
   1400096d7:	add    BYTE PTR [rax+0x140004f],dh
   1400096dd:	add    BYTE PTR [rax],al
   1400096df:	add    BYTE PTR [rsi+0x25],cl
   1400096e2:	pop    rsp
   1400096e3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400096e4:	sbb    al,0xdf
   1400096e6:	std    
   1400096e7:	rex.WRX and BYTE PTR [rax],0x67
   1400096eb:	rol    DWORD PTR [rsi-0x58],1
   1400096ee:	push   rax
   1400096ef:	loopne 0x140009713
   1400096f1:	add    BYTE PTR [rax],al
   1400096f3:	add    BYTE PTR [rax],al
   1400096f5:	add    BYTE PTR [rax],al
   1400096f7:	add    al,dh
   1400096f9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rsi+0x25],cl
   140009702:	pop    rsp
   140009703:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009704:	sbb    al,0xdf
   140009706:	std    
   140009707:	rex.WRX and BYTE PTR [rax],0x67
   14000970b:	rol    DWORD PTR [rsi-0x58],1
   14000970e:	push   rax
   14000970f:	loopne 0x140009717
   140009711:	add    BYTE PTR [rax],al
   140009713:	add    BYTE PTR [rax],al
   140009715:	add    BYTE PTR [rax],al
   140009717:	add    BYTE PTR [rax],bh
   140009719:	push   rax
   14000971a:	add    BYTE PTR [rax+0x1],al
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    ch,al
   140009721:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009722:	rex
   140009723:	rex.XB cli 
   140009725:	xchg   ebx,eax
   140009726:	(bad)  
   140009727:	rex.RXB xchg r15d,eax
   140009729:	sub    al,0x7b
   14000972b:	or     BYTE PTR fs:[rax],0xa5
   14000972f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009730:	or     al,BYTE PTR [rax]
   140009732:	add    BYTE PTR [rax],al
   140009734:	add    BYTE PTR [rax],al
   140009736:	add    BYTE PTR [rax],al
   140009738:	(bad)  
   140009739:	push   rax
   14000973a:	add    BYTE PTR [rax+0x1],al
   14000973d:	add    BYTE PTR [rax],al
   14000973f:	add    BYTE PTR [rsi+0x25],cl
   140009742:	pop    rsp
   140009743:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009744:	sbb    al,0xdf
   140009746:	std    
   140009747:	rex.WRX and BYTE PTR [rax],0x67
   14000974b:	rol    DWORD PTR [rsi-0x58],1
   14000974e:	push   rax
   14000974f:	loopne 0x14000976a
   140009751:	add    BYTE PTR [rax],al
   140009753:	add    BYTE PTR [rax],al
   140009755:	add    BYTE PTR [rax],al
   140009757:	add    BYTE PTR [rax+0x1400050],dl
   14000975d:	add    BYTE PTR [rax],al
   14000975f:	add    BYTE PTR [rsi+0x25],cl
   140009762:	pop    rsp
   140009763:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009764:	sbb    al,0xdf
   140009766:	std    
   140009767:	rex.WRX and BYTE PTR [rax],0x67
   14000976b:	rol    DWORD PTR [rsi-0x58],1
   14000976e:	push   rax
   14000976f:	loopne 0x14000978b
   140009771:	add    BYTE PTR [rax],al
   140009773:	add    BYTE PTR [rax],al
   140009775:	add    BYTE PTR [rax],al
   140009777:	add    al,al
   140009779:	push   rax
   14000977a:	add    BYTE PTR [rax+0x1],al
   14000977d:	add    BYTE PTR [rax],al
   14000977f:	add    BYTE PTR [rsi+0x25],cl
   140009782:	pop    rsp
   140009783:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009784:	sbb    al,0xdf
   140009786:	std    
   140009787:	rex.WRX and BYTE PTR [rax],0x67
   14000978b:	rol    DWORD PTR [rsi-0x58],1
   14000978e:	push   rax
   14000978f:	loopne 0x1400097a4
   140009791:	add    BYTE PTR [rax],al
   140009793:	add    BYTE PTR [rax],al
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    al,dh
   140009799:	push   rax
   14000979a:	add    BYTE PTR [rax+0x1],al
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rax+0x76],al
   1400097a2:	fldcw  WORD PTR [rdi+0x421086a3]
   1400097a8:	mov    dh,0x7c
   1400097aa:	sub    BYTE PTR [rcx+rax*2+0x255beaa],bl
   1400097b1:	add    BYTE PTR [rax],al
   1400097b3:	add    BYTE PTR [rax],al
   1400097b5:	add    BYTE PTR [rax],al
   1400097b7:	add    BYTE PTR [rax],dh
   1400097b9:	push   rcx
   1400097ba:	add    BYTE PTR [rax+0x1],al
   1400097bd:	add    BYTE PTR [rax],al
   1400097bf:	add    BYTE PTR [rsi+0x7380d81e],ah
   1400097c5:	je     0x1400097d3
   1400097c7:	rex.WXB (bad) 
   1400097c9:	(bad)  
   1400097ca:	out    dx,eax
   1400097cb:	rcr    DWORD PTR [rdx],0x2c
   1400097ce:	mov    r8,QWORD PTR [rsi]
   1400097d1:	add    BYTE PTR [rax],al
   1400097d3:	add    BYTE PTR [rax],al
   1400097d5:	add    BYTE PTR [rax],al
   1400097d7:	add    BYTE PTR [rax+0x51],dh
   1400097da:	add    BYTE PTR [rax+0x1],al
   1400097dd:	add    BYTE PTR [rax],al
   1400097df:	add    BYTE PTR [rsi+0x7380d81e],ah
   1400097e5:	je     0x1400097f3
   1400097e7:	rex.WXB (bad) 
   1400097e9:	(bad)  
   1400097ea:	out    dx,eax
   1400097eb:	rcr    DWORD PTR [rdx],0x2c
   1400097ee:	mov    r8,QWORD PTR [rdi]
   1400097f1:	add    BYTE PTR [rax],al
   1400097f3:	add    BYTE PTR [rax],al
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    BYTE PTR [rax+0x1400051],dh
   1400097fd:	add    BYTE PTR [rax],al
   1400097ff:	add    al,cl
   140009801:	rex.WRXB ret 
   140009803:	js     0x14000984f
   140009805:	adc    dl,cl
   140009807:	rex.WX sahf 
   140009809:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000980a:	push   rdx
   14000980b:	rex.WRB push r10
   14000980d:	cdq    
   14000980e:	outs   dx,BYTE PTR ds:[rsi]
   14000980f:	push   rdi
   140009810:	xor    eax,DWORD PTR [rax]
   140009812:	add    BYTE PTR [rax],al
   140009814:	add    BYTE PTR [rax],al
   140009816:	add    BYTE PTR [rax],al
   140009818:	add    BYTE PTR [rdx+0x0],dl
   14000981b:	rex add DWORD PTR [rax],eax
   14000981e:	add    BYTE PTR [rax],al
   140009820:	enter  0xc34f,0x78
   140009824:	rex.WX adc dl,cl
   140009827:	rex.WX sahf 
   140009829:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000982a:	push   rdx
   14000982b:	rex.WRB push r10
   14000982d:	cdq    
   14000982e:	outs   dx,BYTE PTR ds:[rsi]
   14000982f:	push   rdi
   140009830:	push   rax
   140009831:	add    BYTE PTR [rax],al
   140009833:	add    BYTE PTR [rax],al
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rax+0x52],al
   14000983a:	add    BYTE PTR [rax+0x1],al
   14000983d:	add    BYTE PTR [rax],al
   14000983f:	add    al,cl
   140009841:	rex.WRXB ret 
   140009843:	js     0x14000988f
   140009845:	adc    dl,cl
   140009847:	rex.WX sahf 
   140009849:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000984a:	push   rdx
   14000984b:	rex.WRB push r10
   14000984d:	cdq    
   14000984e:	outs   dx,BYTE PTR ds:[rsi]
   14000984f:	push   rdi
   140009850:	rex.WRX add BYTE PTR [rax],r8b
   140009853:	add    BYTE PTR [rax],al
   140009855:	add    BYTE PTR [rax],al
   140009857:	add    BYTE PTR [rax+0x1400052],dl
   14000985d:	add    BYTE PTR [rax],al
   14000985f:	add    al,cl
   140009861:	rex.WRXB ret 
   140009863:	js     0x1400098af
   140009865:	adc    dl,cl
   140009867:	rex.WX sahf 
   140009869:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000986a:	push   rdx
   14000986b:	rex.WRB push r10
   14000986d:	cdq    
   14000986e:	outs   dx,BYTE PTR ds:[rsi]
   14000986f:	push   rdi
   140009870:	pop    rdx
   140009871:	add    BYTE PTR [rax],al
   140009873:	add    BYTE PTR [rax],al
   140009875:	add    BYTE PTR [rax],al
   140009877:	add    al,ah
   140009879:	push   rdx
   14000987a:	add    BYTE PTR [rax+0x1],al
   14000987d:	add    BYTE PTR [rax],al
   14000987f:	add    al,cl
   140009881:	rex.WRXB ret 
   140009883:	js     0x1400098cf
   140009885:	adc    dl,cl
   140009887:	rex.WX sahf 
   140009889:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000988a:	push   rdx
   14000988b:	rex.WRB push r10
   14000988d:	cdq    
   14000988e:	outs   dx,BYTE PTR ds:[rsi]
   14000988f:	push   rdi
   140009890:	push   rcx
   140009891:	add    BYTE PTR [rax],al
   140009893:	add    BYTE PTR [rax],al
   140009895:	add    BYTE PTR [rax],al
   140009897:	add    BYTE PTR [rax],ah
   140009899:	push   rbx
   14000989a:	add    BYTE PTR [rax+0x1],al
   14000989d:	add    BYTE PTR [rax],al
   14000989f:	add    al,cl
   1400098a1:	rex.WRXB ret 
   1400098a3:	js     0x1400098ef
   1400098a5:	adc    dl,cl
   1400098a7:	rex.WX sahf 
   1400098a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098aa:	push   rdx
   1400098ab:	rex.WRB push r10
   1400098ad:	cdq    
   1400098ae:	outs   dx,BYTE PTR ds:[rsi]
   1400098af:	push   rdi
   1400098b0:	push   rdx
   1400098b1:	add    BYTE PTR [rax],al
   1400098b3:	add    BYTE PTR [rax],al
   1400098b5:	add    BYTE PTR [rax],al
   1400098b7:	add    BYTE PTR [rax+0x53],dh
   1400098ba:	add    BYTE PTR [rax+0x1],al
   1400098bd:	add    BYTE PTR [rax],al
   1400098bf:	add    al,cl
   1400098c1:	rex.WRXB ret 
   1400098c3:	js     0x14000990f
   1400098c5:	adc    dl,cl
   1400098c7:	rex.WX sahf 
   1400098c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098ca:	push   rdx
   1400098cb:	rex.WRB push r10
   1400098cd:	cdq    
   1400098ce:	outs   dx,BYTE PTR ds:[rsi]
   1400098cf:	push   rdi
   1400098d0:	xor    al,0x0
   1400098d2:	add    BYTE PTR [rax],al
   1400098d4:	add    BYTE PTR [rax],al
   1400098d6:	add    BYTE PTR [rax],al
   1400098d8:	rcl    BYTE PTR [rbx+0x0],0x40
   1400098dc:	add    DWORD PTR [rax],eax
   1400098de:	add    BYTE PTR [rax],al
   1400098e0:	enter  0xc34f,0x78
   1400098e4:	rex.WX adc dl,cl
   1400098e7:	rex.WX sahf 
   1400098e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098ea:	push   rdx
   1400098eb:	rex.WRB push r10
   1400098ed:	cdq    
   1400098ee:	outs   dx,BYTE PTR ds:[rsi]
   1400098ef:	push   rdi
   1400098f0:	pop    rcx
   1400098f1:	add    BYTE PTR [rax],al
   1400098f3:	add    BYTE PTR [rax],al
   1400098f5:	add    BYTE PTR [rax],al
   1400098f7:	add    BYTE PTR [rax],dl
   1400098f9:	push   rsp
   1400098fa:	add    BYTE PTR [rax+0x1],al
   1400098fd:	add    BYTE PTR [rax],al
   1400098ff:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   140009905:	in     al,dx
   140009906:	std    
   140009907:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000990b:	loopne 0x14000994d
   14000990d:	rex.WX xchg rsi,rax
   14000990f:	int    0x0
   140009911:	xor    BYTE PTR [rax],al
   140009913:	add    BYTE PTR [rax],al
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    BYTE PTR [rax+0x54],dl
   14000991a:	add    BYTE PTR [rax+0x1],al
   14000991d:	add    BYTE PTR [rax],al
   14000991f:	add    al,cl
   140009921:	rex.WRXB ret 
   140009923:	js     0x14000996f
   140009925:	adc    dl,cl
   140009927:	rex.WX sahf 
   140009929:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000992a:	push   rdx
   14000992b:	rex.WRB push r10
   14000992d:	cdq    
   14000992e:	outs   dx,BYTE PTR ds:[rsi]
   14000992f:	push   rdi
   140009930:	cmp    DWORD PTR [rax],eax
   140009932:	add    BYTE PTR [rax],al
   140009934:	add    BYTE PTR [rax],al
   140009936:	add    BYTE PTR [rax],al
   140009938:	nop
   140009939:	push   rsp
   14000993a:	add    BYTE PTR [rax+0x1],al
   14000993d:	add    BYTE PTR [rax],al
   14000993f:	add    al,cl
   140009941:	rex.WRXB ret 
   140009943:	js     0x14000998f
   140009945:	adc    dl,cl
   140009947:	rex.WX sahf 
   140009949:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000994a:	push   rdx
   14000994b:	rex.WRB push r10
   14000994d:	cdq    
   14000994e:	outs   dx,BYTE PTR ds:[rsi]
   14000994f:	push   rdi
   140009950:	add    BYTE PTR ss:[rax],al
   140009953:	add    BYTE PTR [rax],al
   140009955:	add    BYTE PTR [rax],al
   140009957:	add    al,al
   140009959:	push   rsp
   14000995a:	add    BYTE PTR [rax+0x1],al
   14000995d:	add    BYTE PTR [rax],al
   14000995f:	add    al,cl
   140009961:	rex.WRXB ret 
   140009963:	js     0x1400099af
   140009965:	adc    dl,cl
   140009967:	rex.WX sahf 
   140009969:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000996a:	push   rdx
   14000996b:	rex.WRB push r10
   14000996d:	cdq    
   14000996e:	outs   dx,BYTE PTR ds:[rsi]
   14000996f:	push   rdi
   140009970:	(bad)  
   140009971:	add    BYTE PTR [rax],al
   140009973:	add    BYTE PTR [rax],al
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rax],cl
   140009979:	push   rbp
   14000997a:	add    BYTE PTR [rax+0x1],al
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    al,cl
   140009981:	rex.WRXB ret 
   140009983:	js     0x1400099cf
   140009985:	adc    dl,cl
   140009987:	rex.WX sahf 
   140009989:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000998a:	push   rdx
   14000998b:	rex.WRB push r10
   14000998d:	cdq    
   14000998e:	outs   dx,BYTE PTR ds:[rsi]
   14000998f:	push   rdi
   140009990:	push   rsi
   140009991:	add    BYTE PTR [rax],al
   140009993:	add    BYTE PTR [rax],al
   140009995:	add    BYTE PTR [rax],al
   140009997:	add    BYTE PTR [rax+0x55],dl
   14000999a:	add    BYTE PTR [rax+0x1],al
   14000999d:	add    BYTE PTR [rax],al
   14000999f:	add    al,cl
   1400099a1:	rex.WRXB ret 
   1400099a3:	js     0x1400099ef
   1400099a5:	adc    dl,cl
   1400099a7:	rex.WX sahf 
   1400099a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400099aa:	push   rdx
   1400099ab:	rex.WRB push r10
   1400099ad:	cdq    
   1400099ae:	outs   dx,BYTE PTR ds:[rsi]
   1400099af:	push   rdi
   1400099b0:	rex.WRXB add BYTE PTR [r8],r8b
   1400099b3:	add    BYTE PTR [rax],al
   1400099b5:	add    BYTE PTR [rax],al
   1400099b7:	add    BYTE PTR [rax+0x1400055],ah
   1400099bd:	add    BYTE PTR [rax],al
   1400099bf:	add    al,cl
   1400099c1:	rex.WRXB ret 
   1400099c3:	js     0x140009a0f
   1400099c5:	adc    dl,cl
   1400099c7:	rex.WX sahf 
   1400099c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400099ca:	push   rdx
   1400099cb:	rex.WRB push r10
   1400099cd:	cdq    
   1400099ce:	outs   dx,BYTE PTR ds:[rsi]
   1400099cf:	push   rdi
   1400099d0:	xor    eax,0x0
   1400099d5:	add    BYTE PTR [rax],al
   1400099d7:	add    BYTE PTR [rax],al
   1400099d9:	push   rsi
   1400099da:	add    BYTE PTR [rax+0x1],al
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    al,cl
   1400099e1:	rex.WRXB ret 
   1400099e3:	js     0x140009a2f
   1400099e5:	adc    dl,cl
   1400099e7:	rex.WX sahf 
   1400099e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400099ea:	push   rdx
   1400099eb:	rex.WRB push r10
   1400099ed:	cdq    
   1400099ee:	outs   dx,BYTE PTR ds:[rsi]
   1400099ef:	push   rdi
   1400099f0:	rex.RX add BYTE PTR [rax],r8b
   1400099f3:	add    BYTE PTR [rax],al
   1400099f5:	add    BYTE PTR [rax],al
   1400099f7:	add    BYTE PTR [rax+0x56],al
   1400099fa:	add    BYTE PTR [rax+0x1],al
   1400099fd:	add    BYTE PTR [rax],al
   1400099ff:	add    al,cl
   140009a01:	rex.WRXB ret 
   140009a03:	js     0x140009a4f
   140009a05:	adc    dl,cl
   140009a07:	rex.WX sahf 
   140009a09:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a0a:	push   rdx
   140009a0b:	rex.WRB push r10
   140009a0d:	cdq    
   140009a0e:	outs   dx,BYTE PTR ds:[rsi]
   140009a0f:	push   rdi
   140009a10:	rex.W add BYTE PTR [rax],al
   140009a13:	add    BYTE PTR [rax],al
   140009a15:	add    BYTE PTR [rax],al
   140009a17:	add    BYTE PTR [rax+0x1400056],dl
   140009a1d:	add    BYTE PTR [rax],al
   140009a1f:	add    al,cl
   140009a21:	rex.WRXB ret 
   140009a23:	js     0x140009a6f
   140009a25:	adc    dl,cl
   140009a27:	rex.WX sahf 
   140009a29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a2a:	push   rdx
   140009a2b:	rex.WRB push r10
   140009a2d:	cdq    
   140009a2e:	outs   dx,BYTE PTR ds:[rsi]
   140009a2f:	push   rdi
   140009a30:	push   rbp
   140009a31:	add    BYTE PTR [rax],al
   140009a33:	add    BYTE PTR [rax],al
   140009a35:	add    BYTE PTR [rax],al
   140009a37:	add    al,dh
   140009a39:	push   rsi
   140009a3a:	add    BYTE PTR [rax+0x1],al
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    al,cl
   140009a41:	rex.WRXB ret 
   140009a43:	js     0x140009a8f
   140009a45:	adc    dl,cl
   140009a47:	rex.WX sahf 
   140009a49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a4a:	push   rdx
   140009a4b:	rex.WRB push r10
   140009a4d:	cdq    
   140009a4e:	outs   dx,BYTE PTR ds:[rsi]
   140009a4f:	push   rdi
   140009a50:	rex.WX add BYTE PTR [rax],al
   140009a53:	add    BYTE PTR [rax],al
   140009a55:	add    BYTE PTR [rax],al
   140009a57:	add    BYTE PTR [rax+0x57],al
   140009a5a:	add    BYTE PTR [rax+0x1],al
   140009a5d:	add    BYTE PTR [rax],al
   140009a5f:	add    al,cl
   140009a61:	rex.WRXB ret 
   140009a63:	js     0x140009aaf
   140009a65:	adc    dl,cl
   140009a67:	rex.WX sahf 
   140009a69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a6a:	push   rdx
   140009a6b:	rex.WRB push r10
   140009a6d:	cdq    
   140009a6e:	outs   dx,BYTE PTR ds:[rsi]
   140009a6f:	push   rdi
   140009a70:	push   rbx
   140009a71:	add    BYTE PTR [rax],al
   140009a73:	add    BYTE PTR [rax],al
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rax+0x1400057],ah
   140009a7d:	add    BYTE PTR [rax],al
   140009a7f:	add    al,cl
   140009a81:	rex.WRXB ret 
   140009a83:	js     0x140009acf
   140009a85:	adc    dl,cl
   140009a87:	rex.WX sahf 
   140009a89:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a8a:	push   rdx
   140009a8b:	rex.WRB push r10
   140009a8d:	cdq    
   140009a8e:	outs   dx,BYTE PTR ds:[rsi]
   140009a8f:	push   rdi
   140009a90:	cmp    BYTE PTR [rax],al
   140009a92:	add    BYTE PTR [rax],al
   140009a94:	add    BYTE PTR [rax],al
   140009a96:	add    BYTE PTR [rax],al
   140009a98:	lock push rdi
   140009a9a:	add    BYTE PTR [rax+0x1],al
   140009a9d:	add    BYTE PTR [rax],al
   140009a9f:	add    al,cl
   140009aa1:	rex.WRXB ret 
   140009aa3:	js     0x140009aef
   140009aa5:	adc    dl,cl
   140009aa7:	rex.WX sahf 
   140009aa9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009aaa:	push   rdx
   140009aab:	rex.WRB push r10
   140009aad:	cdq    
   140009aae:	outs   dx,BYTE PTR ds:[rsi]
   140009aaf:	push   rdi
   140009ab0:	push   rsp
   140009ab1:	add    BYTE PTR [rax],al
   140009ab3:	add    BYTE PTR [rax],al
   140009ab5:	add    BYTE PTR [rax],al
   140009ab7:	add    BYTE PTR [rax],dh
   140009ab9:	pop    rax
   140009aba:	add    BYTE PTR [rax+0x1],al
   140009abd:	add    BYTE PTR [rax],al
   140009abf:	add    al,cl
   140009ac1:	rex.WRXB ret 
   140009ac3:	js     0x140009b0f
   140009ac5:	adc    dl,cl
   140009ac7:	rex.WX sahf 
   140009ac9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009aca:	push   rdx
   140009acb:	rex.WRB push r10
   140009acd:	cdq    
   140009ace:	outs   dx,BYTE PTR ds:[rsi]
   140009acf:	push   rdi
   140009ad0:	add    BYTE PTR [rax],r8b
   140009ad3:	add    BYTE PTR [rax],al
   140009ad5:	add    BYTE PTR [rax],al
   140009ad7:	add    BYTE PTR [rax+0x1400058],al
   140009add:	add    BYTE PTR [rax],al
   140009adf:	add    al,cl
   140009ae1:	rex.WRXB ret 
   140009ae3:	js     0x140009b2f
   140009ae5:	adc    dl,cl
   140009ae7:	rex.WX sahf 
   140009ae9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009aea:	push   rdx
   140009aeb:	rex.WRB push r10
   140009aed:	cdq    
   140009aee:	outs   dx,BYTE PTR ds:[rsi]
   140009aef:	push   rdi
   140009af0:	rex.XB add BYTE PTR [r8],al
   140009af3:	add    BYTE PTR [rax],al
   140009af5:	add    BYTE PTR [rax],al
   140009af7:	add    al,ah
   140009af9:	pop    rax
   140009afa:	add    BYTE PTR [rax+0x1],al
   140009afd:	add    BYTE PTR [rax],al
   140009aff:	add    al,cl
   140009b01:	rex.WRXB ret 
   140009b03:	js     0x140009b4f
   140009b05:	adc    dl,cl
   140009b07:	rex.WX sahf 
   140009b09:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b0a:	push   rdx
   140009b0b:	rex.WRB push r10
   140009b0d:	cdq    
   140009b0e:	outs   dx,BYTE PTR ds:[rsi]
   140009b0f:	push   rdi
   140009b10:	rex.X add BYTE PTR [rax],al
   140009b13:	add    BYTE PTR [rax],al
   140009b15:	add    BYTE PTR [rax],al
   140009b17:	add    BYTE PTR [rax],ch
   140009b19:	pop    rcx
   140009b1a:	add    BYTE PTR [rax+0x1],al
   140009b1d:	add    BYTE PTR [rax],al
   140009b1f:	add    al,cl
   140009b21:	rex.WRXB ret 
   140009b23:	js     0x140009b6f
   140009b25:	adc    dl,cl
   140009b27:	rex.WX sahf 
   140009b29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b2a:	push   rdx
   140009b2b:	rex.WRB push r10
   140009b2d:	cdq    
   140009b2e:	outs   dx,BYTE PTR ds:[rsi]
   140009b2f:	push   rdi
   140009b30:	rex.WRB add BYTE PTR [r8],r8b
   140009b33:	add    BYTE PTR [rax],al
   140009b35:	add    BYTE PTR [rax],al
   140009b37:	add    BYTE PTR [rax+0x59],dh
   140009b3a:	add    BYTE PTR [rax+0x1],al
   140009b3d:	add    BYTE PTR [rax],al
   140009b3f:	add    al,cl
   140009b41:	rex.WRXB ret 
   140009b43:	js     0x140009b8f
   140009b45:	adc    dl,cl
   140009b47:	rex.WX sahf 
   140009b49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b4a:	push   rdx
   140009b4b:	rex.WRB push r10
   140009b4d:	cdq    
   140009b4e:	outs   dx,BYTE PTR ds:[rsi]
   140009b4f:	push   rdi
   140009b50:	rex.WR add BYTE PTR [rax],r8b
   140009b53:	add    BYTE PTR [rax],al
   140009b55:	add    BYTE PTR [rax],al
   140009b57:	add    al,ah
   140009b59:	pop    rcx
   140009b5a:	add    BYTE PTR [rax+0x1],al
   140009b5d:	add    BYTE PTR [rax],al
   140009b5f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   140009b65:	in     al,dx
   140009b66:	std    
   140009b67:	rex.XB test BYTE PTR [r15+0x4a],sil
   140009b6b:	loopne 0x140009bad
   140009b6d:	rex.WX xchg rsi,rax
   140009b6f:	int    0x0
   140009b71:	and    BYTE PTR [rax],al
   140009b73:	add    BYTE PTR [rax],al
   140009b75:	add    BYTE PTR [rax],al
   140009b77:	add    BYTE PTR [rax+0x5a],dl
   140009b7a:	add    BYTE PTR [rax+0x1],al
   140009b7d:	add    BYTE PTR [rax],al
   140009b7f:	add    al,cl
   140009b81:	rex.WRXB ret 
   140009b83:	js     0x140009bcf
   140009b85:	adc    dl,cl
   140009b87:	rex.WX sahf 
   140009b89:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b8a:	push   rdx
   140009b8b:	rex.WRB push r10
   140009b8d:	cdq    
   140009b8e:	outs   dx,BYTE PTR ds:[rsi]
   140009b8f:	push   rdi
   140009b90:	push   rdi
   140009b91:	add    BYTE PTR [rax],al
   140009b93:	add    BYTE PTR [rax],al
   140009b95:	add    BYTE PTR [rax],al
   140009b97:	add    BYTE PTR [rax+0x140005a],dl
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    al,cl
   140009ba1:	rex.WRXB ret 
   140009ba3:	js     0x140009bef
   140009ba5:	adc    dl,cl
   140009ba7:	rex.WX sahf 
   140009ba9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009baa:	push   rdx
   140009bab:	rex.WRB push r10
   140009bad:	cdq    
   140009bae:	outs   dx,BYTE PTR ds:[rsi]
   140009baf:	push   rdi
   140009bb0:	rex.WB add BYTE PTR [r8],al
   140009bb3:	add    BYTE PTR [rax],al
   140009bb5:	add    BYTE PTR [rax],al
   140009bb7:	add    al,ah
   140009bb9:	pop    rdx
   140009bba:	add    BYTE PTR [rax+0x1],al
   140009bbd:	add    BYTE PTR [rax],al
   140009bbf:	add    al,cl
   140009bc1:	rex.WRXB ret 
   140009bc3:	js     0x140009c0f
   140009bc5:	adc    dl,cl
   140009bc7:	rex.WX sahf 
   140009bc9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009bca:	push   rdx
   140009bcb:	rex.WRB push r10
   140009bcd:	cdq    
   140009bce:	outs   dx,BYTE PTR ds:[rsi]
   140009bcf:	push   rdi
   140009bd0:	rex.RXB add BYTE PTR [r8],r8b
   140009bd3:	add    BYTE PTR [rax],al
   140009bd5:	add    BYTE PTR [rax],al
   140009bd7:	add    BYTE PTR [rax],dh
   140009bd9:	pop    rbx
   140009bda:	add    BYTE PTR [rax+0x1],al
   140009bdd:	add    BYTE PTR [rax],al
   140009bdf:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   140009be5:	in     al,dx
   140009be6:	std    
   140009be7:	rex.XB test BYTE PTR [r15+0x4a],sil
   140009beb:	loopne 0x140009c2d
   140009bed:	rex.WX xchg rsi,rax
   140009bef:	int    0x2
   140009bf1:	and    BYTE PTR [rax],al
   140009bf3:	add    BYTE PTR [rax],al
   140009bf5:	add    BYTE PTR [rax],al
   140009bf7:	add    BYTE PTR [rax+0x5b],dh
   140009bfa:	add    BYTE PTR [rax+0x1],al
   140009bfd:	add    BYTE PTR [rax],al
   140009bff:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   140009c05:	in     al,dx
   140009c06:	std    
   140009c07:	rex.XB test BYTE PTR [r15+0x4a],sil
   140009c0b:	loopne 0x140009c4d
   140009c0d:	rex.WX xchg rsi,rax
   140009c0f:	int    0x3
   140009c11:	and    BYTE PTR [rax],al
   140009c13:	add    BYTE PTR [rax],al
   140009c15:	add    BYTE PTR [rax],al
   140009c17:	add    BYTE PTR [rax+0x140005b],dh
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    al,cl
   140009c21:	rex.WRXB ret 
   140009c23:	js     0x140009c6f
   140009c25:	adc    dl,cl
   140009c27:	rex.WX sahf 
   140009c29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c2a:	push   rdx
   140009c2b:	rex.WRB push r10
   140009c2d:	cdq    
   140009c2e:	outs   dx,BYTE PTR ds:[rsi]
   140009c2f:	push   rdi
   140009c30:	(bad)  
   140009c31:	add    BYTE PTR [rax],al
   140009c33:	add    BYTE PTR [rax],al
   140009c35:	add    BYTE PTR [rax],al
   140009c37:	add    al,dh
   140009c39:	pop    rbx
   140009c3a:	add    BYTE PTR [rax+0x1],al
   140009c3d:	add    BYTE PTR [rax],al
   140009c3f:	add    al,cl
   140009c41:	rex.WRXB ret 
   140009c43:	js     0x140009c8f
   140009c45:	adc    dl,cl
   140009c47:	rex.WX sahf 
   140009c49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c4a:	push   rdx
   140009c4b:	rex.WRB push r10
   140009c4d:	cdq    
   140009c4e:	outs   dx,BYTE PTR ds:[rsi]
   140009c4f:	push   rdi
   140009c50:	pop    rax
   140009c51:	add    BYTE PTR [rax],al
   140009c53:	add    BYTE PTR [rax],al
   140009c55:	add    BYTE PTR [rax],al
   140009c57:	add    BYTE PTR [rax+0x5c],al
   140009c5a:	add    BYTE PTR [rax+0x1],al
   140009c5d:	add    BYTE PTR [rax],al
   140009c5f:	add    al,cl
   140009c61:	rex.WRXB ret 
   140009c63:	js     0x140009caf
   140009c65:	adc    dl,cl
   140009c67:	rex.WX sahf 
   140009c69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c6a:	push   rdx
   140009c6b:	rex.WRB push r10
   140009c6d:	cdq    
   140009c6e:	outs   dx,BYTE PTR ds:[rsi]
   140009c6f:	push   rdi
   140009c70:	add    BYTE PTR [r8],al
   140009c73:	add    BYTE PTR [rax],al
   140009c75:	add    BYTE PTR [rax],al
   140009c77:	add    BYTE PTR [rax+0x140005c],bl
   140009c7d:	add    BYTE PTR [rax],al
   140009c7f:	add    BYTE PTR [rsi+0x51],ch
   140009c82:	outs   dx,BYTE PTR ds:[rsi]
   140009c83:	add    dl,BYTE PTR [rax+rdi*4]
   140009c86:	rex.WXB
   140009c87:	or     r13d,0xffffff85
   140009c8b:	ins    DWORD PTR es:[rdi],dx
   140009c8c:	outs   dx,DWORD PTR ds:[rsi]
   140009c8d:	out    dx,eax
   140009c8e:	rex.W and al,BYTE PTR [rax+rax*1]
   140009c92:	add    BYTE PTR [rax],al
   140009c94:	add    BYTE PTR [rax],al
   140009c96:	add    BYTE PTR [rax],al
   140009c98:	rcr    BYTE PTR [rax+rax*1+0x40],1
   140009c9c:	add    DWORD PTR [rax],eax
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	or     BYTE PTR [rax+0x7bb5380],al
   140009ca6:	(bad)  
   140009ca7:	rex.RX mov esp,0x3e95b53c
   140009cad:	jo     0x140009c34
   140009caf:	(bad)  
   140009cb0:	add    DWORD PTR [rax],eax
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	add    BYTE PTR [rax],al
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	adc    BYTE PTR [rbp+0x0],bl
   140009cbb:	rex add DWORD PTR [rax],eax
   140009cbe:	add    BYTE PTR [rax],al
   140009cc0:	outs   dx,BYTE PTR ds:[rsi]
   140009cc1:	push   rcx
   140009cc2:	outs   dx,BYTE PTR ds:[rsi]
   140009cc3:	add    dl,BYTE PTR [rax+rdi*4]
   140009cc6:	rex.WXB
   140009cc7:	or     r13d,0xffffff85
   140009ccb:	ins    DWORD PTR es:[rdi],dx
   140009ccc:	outs   dx,DWORD PTR ds:[rsi]
   140009ccd:	out    dx,eax
   140009cce:	rex.W and al,BYTE PTR [rbx]
   140009cd1:	add    BYTE PTR [rax],al
   140009cd3:	add    BYTE PTR [rax],al
   140009cd5:	add    BYTE PTR [rax],al
   140009cd7:	add    BYTE PTR [rax+0x5d],dl
   140009cda:	add    BYTE PTR [rax+0x1],al
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rsi+0x51],ch
   140009ce2:	outs   dx,BYTE PTR ds:[rsi]
   140009ce3:	add    dl,BYTE PTR [rax+rdi*4]
   140009ce6:	rex.WXB
   140009ce7:	or     r13d,0xffffff85
   140009ceb:	ins    DWORD PTR es:[rdi],dx
   140009cec:	outs   dx,DWORD PTR ds:[rsi]
   140009ced:	out    dx,eax
   140009cee:	rex.W and al,BYTE PTR [rdx]
   140009cf1:	add    BYTE PTR [rax],al
   140009cf3:	add    BYTE PTR [rax],al
   140009cf5:	add    BYTE PTR [rax],al
   140009cf7:	add    BYTE PTR [rax+0x140005d],dl
   140009cfd:	add    BYTE PTR [rax],al
   140009cff:	add    BYTE PTR [rcx-0x45],dl
   140009d02:	jae    0x140009cd3
   140009d04:	mov    edi,0x8544a23a
   140009d09:	loopne 0x140009ca5
   140009d0b:	cmp    eax,0x3221a1c7
   140009d10:	(bad)  
   140009d11:	add    BYTE PTR [rax],al
   140009d13:	add    BYTE PTR [rax],al
   140009d15:	add    BYTE PTR [rax],al
   140009d17:	add    al,ah
   140009d19:	pop    rbp
   140009d1a:	add    BYTE PTR [rax+0x1],al
   140009d1d:	add    BYTE PTR [rax],al
   140009d1f:	add    BYTE PTR [rcx-0x45],dl
   140009d22:	jae    0x140009cf3
   140009d24:	mov    edi,0x8544a23a
   140009d29:	loopne 0x140009cc5
   140009d2b:	cmp    eax,0x3221a1c7
   140009d30:	add    al,0x0
   140009d32:	add    BYTE PTR [rax],al
   140009d34:	add    BYTE PTR [rax],al
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	and    BYTE PTR [rsi+0x0],bl
   140009d3b:	rex add DWORD PTR [rax],eax
   140009d3e:	add    BYTE PTR [rax],al
   140009d40:	push   rcx
   140009d41:	mov    ebx,0x3abfcf73
   140009d46:	movabs ds:0x21a1c73d9ae08544,al
   140009d4f:	xor    al,BYTE PTR [rip+0x0]        # 0x140009d55
   140009d55:	add    BYTE PTR [rax],al
   140009d57:	add    BYTE PTR [rax+0x5e],dh
   140009d5a:	add    BYTE PTR [rax+0x1],al
   140009d5d:	add    BYTE PTR [rax],al
   140009d5f:	add    BYTE PTR [rcx-0x45],dl
   140009d62:	jae    0x140009d33
   140009d64:	mov    edi,0x8544a23a
   140009d69:	loopne 0x140009d05
   140009d6b:	cmp    eax,0x3221a1c7
   140009d70:	(bad)  
   140009d71:	add    BYTE PTR [rax],al
   140009d73:	add    BYTE PTR [rax],al
   140009d75:	add    BYTE PTR [rax],al
   140009d77:	add    al,al
   140009d79:	pop    rsi
   140009d7a:	add    BYTE PTR [rax+0x1],al
   140009d7d:	add    BYTE PTR [rax],al
   140009d7f:	add    BYTE PTR [rcx-0x45],dl
   140009d82:	jae    0x140009d53
   140009d84:	mov    edi,0x8544a23a
   140009d89:	loopne 0x140009d25
   140009d8b:	cmp    eax,0x3221a1c7
   140009d90:	add    al,BYTE PTR [rax]
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	add    BYTE PTR [rax],al
   140009d96:	add    BYTE PTR [rax],al
   140009d98:	lock pop rsi
   140009d9a:	add    BYTE PTR [rax+0x1],al
   140009d9d:	add    BYTE PTR [rax],al
   140009d9f:	add    BYTE PTR [rcx-0x45],dl
   140009da2:	jae    0x140009d73
   140009da4:	mov    edi,0x8544a23a
   140009da9:	loopne 0x140009d45
   140009dab:	cmp    eax,0x3221a1c7
   140009db0:	add    eax,DWORD PTR [rax]
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	add    BYTE PTR [rax],al
   140009db6:	add    BYTE PTR [rax],al
   140009db8:	xor    BYTE PTR [rdi+0x0],bl
   140009dbb:	rex add DWORD PTR [rax],eax
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	movabs ds:0xa5423c471d904b03,al
   140009dc9:	test   bl,dh
   140009dcb:	rex.W xor dil,BYTE PTR [rax]
   140009dce:	movabs eax,ds:0x146
   140009dd7:	add    BYTE PTR [rax+0x5f],bh
   140009dda:	add    BYTE PTR [rax+0x1],al
   140009ddd:	add    BYTE PTR [rax],al
   140009ddf:	add    dl,dh
   140009de1:	ds scas eax,DWORD PTR es:[rdi]
   140009de3:	pop    rsi
   140009de4:	retf   0x98e0
   140009de7:	rex.RB mov r15d,0x1ded7106
   140009ded:	popf   
   140009dee:	fst    DWORD PTR [rbx+0x1]
   140009df1:	adc    BYTE PTR [rax],al
   140009df3:	add    BYTE PTR [rax],al
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	add    BYTE PTR [rax+0x140005f],ah
   140009dfd:	add    BYTE PTR [rax],al
   140009dff:	add    dl,dh
   140009e01:	ds scas eax,DWORD PTR es:[rdi]
   140009e03:	pop    rsi
   140009e04:	retf   0x98e0
   140009e07:	rex.RB mov r15d,0x1ded7106
   140009e0d:	popf   
   140009e0e:	fst    DWORD PTR [rbx+0x5]
   140009e11:	add    BYTE PTR [rax],al
   140009e13:	add    BYTE PTR [rax],al
   140009e15:	add    BYTE PTR [rax],al
   140009e17:	add    al,dl
   140009e19:	pop    rdi
   140009e1a:	add    BYTE PTR [rax+0x1],al
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    dl,dh
   140009e21:	ds scas eax,DWORD PTR es:[rdi]
   140009e23:	pop    rsi
   140009e24:	retf   0x98e0
   140009e27:	rex.RB mov r15d,0x1ded7106
   140009e2d:	popf   
   140009e2e:	fst    DWORD PTR [rbx+0xb]
   140009e31:	add    BYTE PTR [rax],al
   140009e33:	add    BYTE PTR [rax],al
   140009e35:	add    BYTE PTR [rax],al
   140009e37:	add    BYTE PTR [rax],dl
   140009e39:	(bad)  
   140009e3a:	add    BYTE PTR [rax+0x1],al
   140009e3d:	add    BYTE PTR [rax],al
   140009e3f:	add    dl,dh
   140009e41:	ds scas eax,DWORD PTR es:[rdi]
   140009e43:	pop    rsi
   140009e44:	retf   0x98e0
   140009e47:	rex.RB mov r15d,0x1ded7106
   140009e4d:	popf   
   140009e4e:	fst    DWORD PTR [rbx+0xa]
   140009e51:	add    BYTE PTR [rax],al
   140009e53:	add    BYTE PTR [rax],al
   140009e55:	add    BYTE PTR [rax],al
   140009e57:	add    BYTE PTR [rax+0x60],cl
   140009e5a:	add    BYTE PTR [rax+0x1],al
   140009e5d:	add    BYTE PTR [rax],al
   140009e5f:	add    dl,dh
   140009e61:	ds scas eax,DWORD PTR es:[rdi]
   140009e63:	pop    rsi
   140009e64:	retf   0x98e0
   140009e67:	rex.RB mov r15d,0x1ded7106
   140009e6d:	popf   
   140009e6e:	fst    DWORD PTR [rbx+0x9]
   140009e71:	add    BYTE PTR [rax],al
   140009e73:	add    BYTE PTR [rax],al
   140009e75:	add    BYTE PTR [rax],al
   140009e77:	add    BYTE PTR [rax+0x1400060],cl
   140009e7d:	add    BYTE PTR [rax],al
   140009e7f:	add    dl,dh
   140009e81:	ds scas eax,DWORD PTR es:[rdi]
   140009e83:	pop    rsi
   140009e84:	retf   0x98e0
   140009e87:	rex.RB mov r15d,0x1ded7106
   140009e8d:	popf   
   140009e8e:	fst    DWORD PTR [rbx+0x3]
   140009e91:	adc    BYTE PTR [rax],al
   140009e93:	add    BYTE PTR [rax],al
   140009e95:	add    BYTE PTR [rax],al
   140009e97:	add    al,al
   140009e99:	(bad)  
   140009e9a:	add    BYTE PTR [rax+0x1],al
   140009e9d:	add    BYTE PTR [rax],al
   140009e9f:	add    dl,dh
   140009ea1:	ds scas eax,DWORD PTR es:[rdi]
   140009ea3:	pop    rsi
   140009ea4:	retf   0x98e0
   140009ea7:	rex.RB mov r15d,0x1ded7106
   140009ead:	popf   
   140009eae:	fst    DWORD PTR [rbx+0x3]
   140009eb1:	add    BYTE PTR [rax],al
   140009eb3:	add    BYTE PTR [rax],al
   140009eb5:	add    BYTE PTR [rax],al
   140009eb7:	add    al,dh
   140009eb9:	(bad)  
   140009eba:	add    BYTE PTR [rax+0x1],al
   140009ebd:	add    BYTE PTR [rax],al
   140009ebf:	add    dl,dh
   140009ec1:	ds scas eax,DWORD PTR es:[rdi]
   140009ec3:	pop    rsi
   140009ec4:	retf   0x98e0
   140009ec7:	rex.RB mov r15d,0x1ded7106
   140009ecd:	popf   
   140009ece:	fst    DWORD PTR [rbx+0x2]
   140009ed1:	adc    BYTE PTR [rax],al
   140009ed3:	add    BYTE PTR [rax],al
   140009ed5:	add    BYTE PTR [rax],al
   140009ed7:	add    BYTE PTR [rax],bl
   140009ed9:	(bad)  
   140009eda:	add    BYTE PTR [rax+0x1],al
   140009edd:	add    BYTE PTR [rax],al
   140009edf:	add    dl,dh
   140009ee1:	ds scas eax,DWORD PTR es:[rdi]
   140009ee3:	pop    rsi
   140009ee4:	retf   0x98e0
   140009ee7:	rex.RB mov r15d,0x1ded7106
   140009eed:	popf   
   140009eee:	fst    DWORD PTR [rbx+0x6]
   140009ef1:	add    BYTE PTR [rax],al
   140009ef3:	add    BYTE PTR [rax],al
   140009ef5:	add    BYTE PTR [rax],al
   140009ef7:	add    BYTE PTR [rax+0x61],al
   140009efa:	add    BYTE PTR [rax+0x1],al
   140009efd:	add    BYTE PTR [rax],al
   140009eff:	add    dl,dh
   140009f01:	ds scas eax,DWORD PTR es:[rdi]
   140009f03:	pop    rsi
   140009f04:	retf   0x98e0
   140009f07:	rex.RB mov r15d,0x1ded7106
   140009f0d:	popf   
   140009f0e:	fst    DWORD PTR [rbx+0x7]
   140009f11:	add    BYTE PTR [rax],al
   140009f13:	add    BYTE PTR [rax],al
   140009f15:	add    BYTE PTR [rax],al
   140009f17:	add    BYTE PTR [rax+0x61],bh
   140009f1a:	add    BYTE PTR [rax+0x1],al
   140009f1d:	add    BYTE PTR [rax],al
   140009f1f:	add    dl,dh
   140009f21:	ds scas eax,DWORD PTR es:[rdi]
   140009f23:	pop    rsi
   140009f24:	retf   0x98e0
   140009f27:	rex.RB mov r15d,0x1ded7106
   140009f2d:	popf   
   140009f2e:	fst    DWORD PTR [rbx+0x2]
   140009f31:	add    BYTE PTR [rax],al
   140009f33:	add    BYTE PTR [rax],al
   140009f35:	add    BYTE PTR [rax],al
   140009f37:	add    BYTE PTR [rax+0x1400061],ah
   140009f3d:	add    BYTE PTR [rax],al
   140009f3f:	add    dl,dh
   140009f41:	ds scas eax,DWORD PTR es:[rdi]
   140009f43:	pop    rsi
   140009f44:	retf   0x98e0
   140009f47:	rex.RB mov r15d,0x1ded7106
   140009f4d:	popf   
   140009f4e:	fst    DWORD PTR [rbx+0x8]
   140009f51:	add    BYTE PTR [rax],al
   140009f53:	add    BYTE PTR [rax],al
   140009f55:	add    BYTE PTR [rax],al
   140009f57:	add    al,cl
   140009f59:	(bad)  
   140009f5a:	add    BYTE PTR [rax+0x1],al
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    dl,dh
   140009f61:	ds scas eax,DWORD PTR es:[rdi]
   140009f63:	pop    rsi
   140009f64:	retf   0x98e0
   140009f67:	rex.RB mov r15d,0x1ded7106
   140009f6d:	popf   
   140009f6e:	fst    DWORD PTR [rbx+0x4]
   140009f71:	adc    BYTE PTR [rax],al
   140009f73:	add    BYTE PTR [rax],al
   140009f75:	add    BYTE PTR [rax],al
   140009f77:	add    BYTE PTR [rax],al
   140009f79:	(bad)  
   140009f7a:	add    BYTE PTR [rax+0x1],al
   140009f7d:	add    BYTE PTR [rax],al
   140009f7f:	add    dl,dh
   140009f81:	ds scas eax,DWORD PTR es:[rdi]
   140009f83:	pop    rsi
   140009f84:	retf   0x98e0
   140009f87:	rex.RB mov r15d,0x1ded7106
   140009f8d:	popf   
   140009f8e:	fst    DWORD PTR [rbx+0x0]
   140009f91:	adc    BYTE PTR [rax],al
   140009f93:	add    BYTE PTR [rax],al
   140009f95:	add    BYTE PTR [rax],al
   140009f97:	add    BYTE PTR [rax+0x62],al
   140009f9a:	add    BYTE PTR [rax+0x1],al
   140009f9d:	add    BYTE PTR [rax],al
   140009f9f:	add    BYTE PTR [rax],dh
   140009fa1:	icebp  
   140009fa2:	and    eax,0x1a47efb7
   140009fa7:	adc    BYTE PTR [rbp-0x739ffd0f],ah
   140009fad:	sahf   
   140009fae:	jmp    0x140009f5c
   140009fb0:	or     al,BYTE PTR [rax]
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	add    BYTE PTR [rax],al
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	jo     0x14000a01c
   140009fba:	add    BYTE PTR [rax+0x1],al
   140009fbd:	add    BYTE PTR [rax],al
   140009fbf:	add    BYTE PTR [rax],dh
   140009fc1:	icebp  
   140009fc2:	and    eax,0x1a47efb7
   140009fc7:	adc    BYTE PTR [rbp-0x739ffd0f],ah
   140009fcd:	sahf   
   140009fce:	jmp    0x140009f7c
   140009fd0:	or     al,BYTE PTR [rax]
   140009fd2:	add    BYTE PTR [rax],al
   140009fd4:	add    BYTE PTR [rax],al
   140009fd6:	add    BYTE PTR [rax],al
   140009fd8:	movabs al,ds:0x7e00000001400062
   140009fe1:	(bad)  
   140009fe2:	(bad)
   140009fe5:	mov    dh,0xbe
   140009fe7:	rex.R xchg ebx,eax
   140009fe9:	jrcxz  0x140009f71
   140009feb:	retf   0x36fe
   140009fee:	mov    ebp,cs
   140009ff0:	add    al,BYTE PTR [rax]
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    BYTE PTR [rax],al
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	mov    eax,0x1400062
   140009ffd:	add    BYTE PTR [rax],al
   140009fff:	add    BYTE PTR [rsi+0x7],bh
   14000a002:	(bad)
   14000a005:	mov    dh,0xbe
   14000a007:	rex.R xchg ebx,eax
   14000a009:	jrcxz  0x140009f91
   14000a00b:	retf   0x36fe
   14000a00e:	mov    ebp,cs
   14000a010:	add    eax,DWORD PTR [rax]
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	call   0x14140a07f
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a025:	in     al,dx
   14000a026:	std    
   14000a027:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a02b:	loopne 0x14000a06d
   14000a02d:	rex.WX xchg rsi,rax
   14000a02f:	int    0x4
   14000a031:	xor    BYTE PTR [rax],al
   14000a033:	add    BYTE PTR [rax],al
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rax],ah
   14000a039:	movsxd eax,DWORD PTR [rax]
   14000a03b:	rex add DWORD PTR [rax],eax
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	mov    bl,0x3b
   14000a042:	push   0x65
   14000a044:	shr    ah,0xfd
   14000a047:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a04b:	loopne 0x14000a08d
   14000a04d:	rex.WX xchg rsi,rax
   14000a04f:	int    0x5
   14000a051:	xor    BYTE PTR [rax],al
   14000a053:	add    BYTE PTR [rax],al
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    BYTE PTR [rax+0x63],bl
   14000a05a:	add    BYTE PTR [rax+0x1],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a065:	in     al,dx
   14000a066:	std    
   14000a067:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a06b:	loopne 0x14000a0ad
   14000a06d:	rex.WX xchg rsi,rax
   14000a06f:	int    0x1
   14000a071:	xor    BYTE PTR [rax],al
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rax+0x1400063],bl
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a085:	in     al,dx
   14000a086:	std    
   14000a087:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a08b:	loopne 0x14000a0cd
   14000a08d:	rex.WX xchg rsi,rax
   14000a08f:	int    0x0
   14000a091:	xor    BYTE PTR [rax],al
   14000a093:	add    BYTE PTR [rax],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    al,dl
   14000a099:	movsxd eax,DWORD PTR [rax]
   14000a09b:	rex add DWORD PTR [rax],eax
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	mov    bl,0x3b
   14000a0a2:	push   0x65
   14000a0a4:	shr    ah,0xfd
   14000a0a7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a0ab:	loopne 0x14000a0ed
   14000a0ad:	rex.WX xchg rsi,rax
   14000a0af:	int    0x0
   14000a0b1:	adc    BYTE PTR [rax],al
   14000a0b3:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rax],al
   14000a0b9:	add    BYTE PTR fs:[rax+0x1],al
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a0c5:	in     al,dx
   14000a0c6:	std    
   14000a0c7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a0cb:	loopne 0x14000a10d
   14000a0cd:	rex.WX xchg rsi,rax
   14000a0cf:	int    0x5
   14000a0d1:	adc    BYTE PTR [rax],al
   14000a0d3:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rax],bh
   14000a0d9:	add    BYTE PTR fs:[rax+0x1],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rsi+0x7],bh
   14000a0e2:	(bad)
   14000a0e5:	mov    dh,0xbe
   14000a0e7:	rex.R xchg ebx,eax
   14000a0e9:	jrcxz  0x14000a071
   14000a0eb:	retf   0x36fe
   14000a0ee:	mov    ebp,cs
   14000a0f0:	add    DWORD PTR [rax],eax
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	pop    rax
   14000a0f9:	add    BYTE PTR fs:[rax+0x1],al
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a105:	in     al,dx
   14000a106:	std    
   14000a107:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a10b:	loopne 0x14000a14d
   14000a10d:	rex.WX xchg rsi,rax
   14000a10f:	int    0x0
   14000a111:	and    BYTE PTR [rax],al
   14000a113:	add    BYTE PTR [rax],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rax+0x1400064],cl
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a125:	in     al,dx
   14000a126:	std    
   14000a127:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a12b:	loopne 0x14000a16d
   14000a12d:	rex.WX xchg rsi,rax
   14000a12f:	int    0x1
   14000a131:	and    BYTE PTR [rax],al
   14000a133:	add    BYTE PTR [rax],al
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rax+0x1400064],bh
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a145:	in     al,dx
   14000a146:	std    
   14000a147:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a14b:	loopne 0x14000a18d
   14000a14d:	rex.WX xchg rsi,rax
   14000a14f:	int    0x4
   14000a151:	adc    BYTE PTR [rax],al
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    al,dh
   14000a159:	add    BYTE PTR fs:[rax+0x1],al
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a165:	in     al,dx
   14000a166:	std    
   14000a167:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a16b:	loopne 0x14000a1ad
   14000a16d:	rex.WX xchg rsi,rax
   14000a16f:	int    0x2
   14000a171:	and    BYTE PTR [rax],al
   14000a173:	add    BYTE PTR [rax],al
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rax],ch
   14000a179:	add    BYTE PTR gs:[rax+0x1],al
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a185:	in     al,dx
   14000a186:	std    
   14000a187:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a18b:	loopne 0x14000a1cd
   14000a18d:	rex.WX xchg rsi,rax
   14000a18f:	int    0x3
   14000a191:	and    BYTE PTR [rax],al
   14000a193:	add    BYTE PTR [rax],al
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rax+0x65],dl
   14000a19a:	add    BYTE PTR [rax+0x1],al
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a1a5:	in     al,dx
   14000a1a6:	std    
   14000a1a7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a1ab:	loopne 0x14000a1ed
   14000a1ad:	rex.WX xchg rsi,rax
   14000a1af:	int    0x4
   14000a1b1:	and    BYTE PTR [rax],al
   14000a1b3:	add    BYTE PTR [rax],al
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rax+0x1400065],al
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a1c5:	in     al,dx
   14000a1c6:	std    
   14000a1c7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a1cb:	loopne 0x14000a20d
   14000a1cd:	rex.WX xchg rsi,rax
   14000a1cf:	int    0x7
   14000a1d1:	xor    BYTE PTR [rax],al
   14000a1d3:	add    BYTE PTR [rax],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    BYTE PTR [rax+0x1400065],ch
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a1e5:	in     al,dx
   14000a1e6:	std    
   14000a1e7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a1eb:	loopne 0x14000a22d
   14000a1ed:	rex.WX xchg rsi,rax
   14000a1ef:	int    0x8
   14000a1f1:	xor    BYTE PTR [rax],al
   14000a1f3:	add    BYTE PTR [rax],al
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    al,ch
   14000a1f9:	add    BYTE PTR gs:[rax+0x1],al
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a205:	in     al,dx
   14000a206:	std    
   14000a207:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a20b:	loopne 0x14000a24d
   14000a20d:	rex.WX xchg rsi,rax
   14000a20f:	int    0x6
   14000a211:	xor    BYTE PTR [rax],al
   14000a213:	add    BYTE PTR [rax],al
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    BYTE PTR [rax],ch
   14000a219:	data16 add BYTE PTR [rax+0x1],al
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a225:	in     al,dx
   14000a226:	std    
   14000a227:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a22b:	loopne 0x14000a26d
   14000a22d:	rex.WX xchg rsi,rax
   14000a22f:	int    0x6
   14000a231:	and    BYTE PTR [rax],al
   14000a233:	add    BYTE PTR [rax],al
   14000a235:	add    BYTE PTR [rax],al
   14000a237:	add    BYTE PTR [rax+0x66],ah
   14000a23a:	add    BYTE PTR [rax+0x1],al
   14000a23d:	add    BYTE PTR [rax],al
   14000a23f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a245:	in     al,dx
   14000a246:	std    
   14000a247:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a24b:	loopne 0x14000a28d
   14000a24d:	rex.WX xchg rsi,rax
   14000a24f:	int    0x0
   14000a251:	jo     0x14000a253
   14000a253:	add    BYTE PTR [rax],al
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rax+0x1400066],bl
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a265:	in     al,dx
   14000a266:	std    
   14000a267:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a26b:	loopne 0x14000a2ad
   14000a26d:	rex.WX xchg rsi,rax
   14000a26f:	int    0x2
   14000a271:	adc    BYTE PTR [rax],al
   14000a273:	add    BYTE PTR [rax],al
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    al,al
   14000a279:	data16 add BYTE PTR [rax+0x1],al
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a285:	in     al,dx
   14000a286:	std    
   14000a287:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a28b:	loopne 0x14000a2cd
   14000a28d:	rex.WX xchg rsi,rax
   14000a28f:	int    0x2
   14000a291:	xor    BYTE PTR [rax],al
   14000a293:	add    BYTE PTR [rax],al
   14000a295:	add    BYTE PTR [rax],al
   14000a297:	add    al,ch
   14000a299:	data16 add BYTE PTR [rax+0x1],al
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a2a5:	in     al,dx
   14000a2a6:	std    
   14000a2a7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a2ab:	loopne 0x14000a2ed
   14000a2ad:	rex.WX xchg rsi,rax
   14000a2af:	int    0x0
   14000a2b1:	add    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	sbb    BYTE PTR [rdi+0x0],ah
   14000a2bb:	rex add DWORD PTR [rax],eax
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	mov    bl,0x3b
   14000a2c2:	push   0x65
   14000a2c4:	shr    ah,0xfd
   14000a2c7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a2cb:	loopne 0x14000a30d
   14000a2cd:	rex.WX xchg rsi,rax
   14000a2cf:	int    0x1
   14000a2d1:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	push   rax
   14000a2d9:	add    BYTE PTR [eax+0x1],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a2e5:	in     al,dx
   14000a2e6:	std    
   14000a2e7:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a2eb:	loopne 0x14000a32d
   14000a2ed:	rex.WX xchg rsi,rax
   14000a2ef:	int    0x2
   14000a2f1:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	js     0x14000a361
   14000a2fa:	add    BYTE PTR [rax+0x1],al
   14000a2fd:	add    BYTE PTR [rax],al
   14000a2ff:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a305:	in     al,dx
   14000a306:	std    
   14000a307:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a30b:	loopne 0x14000a34d
   14000a30d:	rex.WX xchg rsi,rax
   14000a30f:	int    0x1
   14000a311:	adc    BYTE PTR [rax],al
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    BYTE PTR [rax+0x1400067],ch
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a325:	in     al,dx
   14000a326:	std    
   14000a327:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a32b:	loopne 0x14000a36d
   14000a32d:	rex.WX xchg rsi,rax
   14000a32f:	int    0x5
   14000a331:	and    BYTE PTR [rax],al
   14000a333:	add    BYTE PTR [rax],al
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    al,cl
   14000a339:	add    BYTE PTR [eax+0x1],al
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    BYTE PTR [rbx-0x3f9a95c5],dh
   14000a345:	in     al,dx
   14000a346:	std    
   14000a347:	rex.XB test BYTE PTR [r15+0x4a],sil
   14000a34b:	loopne 0x14000a38d
   14000a34d:	rex.WX xchg rsi,rax
   14000a34f:	int    0x3
   14000a351:	adc    BYTE PTR [rax],al
   14000a353:	add    BYTE PTR [rax],al
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    al,ch
   14000a359:	add    BYTE PTR [eax+0x1],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rsi+rdi*2],bl
   14000a362:	cmp    esi,ebp
   14000a364:	loopne 0x14000a3dd
   14000a366:	push   rax
   14000a367:	rex.R mov WORD PTR [rdi-0x59],ds
   14000a36b:	ins    BYTE PTR es:[rdi],dx
   14000a36c:	(bad)  
   14000a36d:	std    
   14000a36e:	loopne 0x14000a3c8
   14000a370:	add    BYTE PTR [rcx],al
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	adc    BYTE PTR [rax+0x0],ch
   14000a37b:	rex add DWORD PTR [rax],eax
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	xchg   ecx,eax
   14000a381:	fs push rax
   14000a383:	xchg   edx,eax
   14000a384:	xchg   ebp,eax
   14000a385:	jmp    QWORD PTR [rdi+rax*2]
   14000a388:	movabs al,ds:0x927c5a88815b5a
   14000a391:	adc    BYTE PTR [rax],al
   14000a393:	add    BYTE PTR [rax],al
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rax],dh
   14000a399:	push   0x14000
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	xchg   ecx,eax
   14000a3a1:	fs push rax
   14000a3a3:	xchg   edx,eax
   14000a3a4:	xchg   ebp,eax
   14000a3a5:	jmp    QWORD PTR [rdi+rax*2]
   14000a3a8:	movabs al,ds:0x4927c5a88815b5a
   14000a3b1:	adc    BYTE PTR [rax],al
   14000a3b3:	add    BYTE PTR [rax],al
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	add    BYTE PTR [rax+0x68],bl
   14000a3ba:	add    BYTE PTR [rax+0x1],al
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    BYTE PTR [rcx-0x6a6daf9c],dl
   14000a3c5:	jmp    QWORD PTR [rdi+rax*2]
   14000a3c8:	movabs al,ds:0x6927c5a88815b5a
   14000a3d1:	adc    BYTE PTR [rax],al
   14000a3d3:	add    BYTE PTR [rax],al
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    BYTE PTR [rax+0x1400068],dl
   14000a3dd:	add    BYTE PTR [rax],al
   14000a3df:	add    BYTE PTR [rcx-0x6a6daf9c],dl
   14000a3e5:	jmp    QWORD PTR [rdi+rax*2]
   14000a3e8:	movabs al,ds:0x5927c5a88815b5a
   14000a3f1:	adc    BYTE PTR [rax],al
   14000a3f3:	add    BYTE PTR [rax],al
   14000a3f5:	add    BYTE PTR [rax],al
   14000a3f7:	add    al,dl
   14000a3f9:	push   0x14000
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	xchg   ecx,eax
   14000a401:	fs push rax
   14000a403:	xchg   edx,eax
   14000a404:	xchg   ebp,eax
   14000a405:	jmp    QWORD PTR [rdi+rax*2]
   14000a408:	movabs al,ds:0x3927c5a88815b5a
   14000a411:	adc    BYTE PTR [rax],al
   14000a413:	add    BYTE PTR [rax],al
   14000a415:	add    BYTE PTR [rax],al
   14000a417:	add    BYTE PTR [rax],cl
   14000a419:	imul   eax,DWORD PTR [rax],0x140
   14000a41f:	add    BYTE PTR [rcx-0x6a6daf9c],dl
   14000a425:	jmp    QWORD PTR [rdi+rax*2]
   14000a428:	movabs al,ds:0x2927c5a88815b5a
   14000a431:	adc    BYTE PTR [rax],al
   14000a433:	add    BYTE PTR [rax],al
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rax+0x69],al
   14000a43a:	add    BYTE PTR [rax+0x1],al
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rcx-0x6a6daf9c],dl
   14000a445:	jmp    QWORD PTR [rdi+rax*2]
   14000a448:	movabs al,ds:0x1927c5a88815b5a
   14000a451:	adc    BYTE PTR [rax],al
   14000a453:	add    BYTE PTR [rax],al
   14000a455:	add    BYTE PTR [rax],al
   14000a457:	add    BYTE PTR [rax+0x69],ah
   14000a45a:	add    BYTE PTR [rax+0x1],al
   14000a45d:	add    BYTE PTR [rax],al
   14000a45f:	add    BYTE PTR [rcx-0x6a6daf9c],dl
   14000a465:	jmp    QWORD PTR [rdi+rax*2]
   14000a468:	movabs al,ds:0x927c5a88815b5a
   14000a471:	and    BYTE PTR [rax],al
   14000a473:	add    BYTE PTR [rax],al
   14000a475:	add    BYTE PTR [rax],al
   14000a477:	add    BYTE PTR [rax+0x1400069],al
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	xor    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	adc    DWORD PTR [rax],0x0
   14000b007:	add    BYTE PTR [rax+0x7c],bh
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	nop
   14000b00d:	adc    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rsi],bh
   14000b011:	adc    DWORD PTR [rax],eax
   14000b013:	add    BYTE PTR [rsp+rdi*2+0x11500000],al
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	xchg   DWORD PTR [rcx],edx
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	cwde   
   14000b021:	jl     0x14000b023
   14000b023:	add    BYTE PTR [rax-0x38ffffef],dl
   14000b029:	adc    DWORD PTR [rax],eax
   14000b02b:	add    BYTE PTR [rax-0x1fffff84],bl
   14000b031:	adc    DWORD PTR [rax],eax
   14000b033:	add    BYTE PTR [rbx+0x12],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	movabs al,ds:0x860000125000007c
   14000b041:	adc    al,BYTE PTR [rax]
   14000b043:	add    BYTE PTR [rax-0x73ffff84],ah
   14000b049:	adc    al,BYTE PTR [rax]
   14000b04b:	add    BYTE PTR [rax-0x57ffffeb],ah
   14000b051:	jl     0x14000b053
   14000b053:	add    BYTE PTR [rax+0x2e000015],ch
   14000b059:	sbb    BYTE PTR [rax],al
   14000b05b:	add    BYTE PTR [rsp+rdi*2+0x18340000],bh
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	or     BYTE PTR [rax+rax*1],bl
   14000b067:	add    al,bl
   14000b069:	jl     0x14000b06b
   14000b06b:	add    BYTE PTR [rax],dl
   14000b06d:	sbb    al,0x0
   14000b06f:	add    ah,ah
   14000b071:	(bad)  
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	fdivr  DWORD PTR [rax+rax*1+0x0]
   14000b078:	in     al,dx
   14000b079:	(bad)  
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	pushf  
   14000b07d:	and    al,BYTE PTR [rax]
   14000b07f:	add    ah,ch
   14000b081:	jl     0x14000b083
   14000b083:	add    BYTE PTR [rdx+riz*1+0x24dc0000],ah
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	add    BYTE PTR [rbp+0x0],bh
   14000b08f:	add    ah,ah
   14000b091:	and    al,0x0
   14000b093:	add    BYTE PTR [rbx+0x25],bl
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	adc    al,0x7d
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	fs and eax,0x26850000
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	and    al,0x7d
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	mov    WORD PTR [rsi],fs
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	sub    al,BYTE PTR fs:[rax]
   14000b0af:	add    BYTE PTR [rdi*2+0x2a6c0000],bh
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	hlt    
   14000b0b9:	xor    BYTE PTR [rax],al
   14000b0bb:	add    BYTE PTR [rax+0x7d],ah
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	or     BYTE PTR [rcx],dh
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	xor    DWORD PTR [r8],eax
   14000b0c7:	add    BYTE PTR [rax+0x7c],bh
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	push   rax
   14000b0cd:	xor    DWORD PTR [rax],eax
   14000b0cf:	add    BYTE PTR [rdi],bl
   14000b0d1:	xor    al,BYTE PTR [rax]
   14000b0d3:	add    BYTE PTR [rsi+rdi*2],ch
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	xor    BYTE PTR [rdx],dh
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	jns    0x14000b110
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	test   BYTE PTR [rbp+0x0],bh
   14000b0e3:	add    BYTE PTR [rax+0x52000032],al
   14000b0e9:	xor    al,0x0
   14000b0eb:	add    BYTE PTR [rbp+rdi*2+0x34600000],cl
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	jb     0x14000b12a
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	sub    al,0x7e
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	nop
   14000b0fd:	xor    al,0x0
   14000b0ff:	add    BYTE PTR [rsi-0x3fffffcc],ch
   14000b105:	jge    0x14000b107
   14000b107:	add    al,ah
   14000b109:	xor    al,0x0
   14000b10b:	add    BYTE PTR [rcx],bl
   14000b10d:	xor    eax,0x7e2c0000
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	and    BYTE PTR [rip+0x35380000],dh        # 0x17538b11a
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	sub    al,0x7e
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	rex.WR xor rax,0x35a00000
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	(bad)  
   14000b129:	jge    0x14000b12b
   14000b12b:	add    BYTE PTR [rax-0x12ffffcb],ch
   14000b131:	xor    eax,0x7ca00000
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	(bad)  
   14000b139:	add    BYTE PTR ss:[rax],al
   14000b13c:	lods   eax,DWORD PTR ds:[rsi]
   14000b13d:	add    BYTE PTR ss:[rax],al
   14000b140:	in     al,0x7d
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	hlt    
   14000b145:	add    BYTE PTR ss:[rax],al
   14000b148:	(bad)  
   14000b149:	(bad)  
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	adc    BYTE PTR [rsi+0x0],bh
   14000b14f:	add    ah,bh
   14000b151:	(bad)  
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	xor    BYTE PTR [rax],bh
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	movabs al,ds:0xb10000384000007c
   14000b161:	cmp    DWORD PTR [rax],eax
   14000b163:	add    BYTE PTR [rsi+rdi*2],bl
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	enter  0x39,0x0
   14000b16c:	in     eax,0x39
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	sub    al,0x7e
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	in     al,dx
   14000b175:	cmp    DWORD PTR [rax],eax
   14000b177:	add    BYTE PTR [rdi+0x3a],cl
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	movabs al,ds:0x7200003a7000007c
   14000b185:	cmp    al,BYTE PTR [rax]
   14000b187:	add    BYTE PTR [rax],ch
   14000b189:	jle    0x14000b18b
   14000b18b:	add    BYTE PTR [rsi-0x5bffffc6],al
   14000b191:	cmp    al,BYTE PTR [rax]
   14000b193:	add    BYTE PTR [rax],cl
   14000b195:	jle    0x14000b197
   14000b197:	add    BYTE PTR [rax-0x2fffffc6],dh
   14000b19d:	cmp    al,BYTE PTR [rax]
   14000b19f:	add    BYTE PTR [rax],cl
   14000b1a1:	jle    0x14000b1a3
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	and    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x18],al
   14000c01c:	cmp    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax+0x0],al
	...
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x40000000],dl
   14000c081:	ret    
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	and    al,0x4
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	movabs al,ds:0x29c0000c0
   14000c099:	add    BYTE PTR [rax],al
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000c0a2:	js     0x14000c111
   14000c0a4:	ins    BYTE PTR es:[rdi],dx
   14000c0a5:	and    BYTE PTR [rsi+0x65],dh
   14000c0a8:	jb     0x14000c11d
   14000c0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c0b1:	xor    BYTE PTR [rdx],ah
   14000c0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000c0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c0c0:	rex.RX sub eax,0x73202238
   14000c0c6:	je     0x14000c129
   14000c0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c9:	fs (bad) 
   14000c0cb:	ins    BYTE PTR es:[rdi],dx
   14000c0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ce:	gs cmp eax,0x73657922
   14000c0d4:	and    bh,BYTE PTR [rdi]
   14000c0d6:	ds or  eax,0x2d213c0a
   14000c0dc:	sub    eax,0x706f4320
   14000c0e1:	jns    0x14000c155
   14000c0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c0ea:	sub    DWORD PTR [rax],esp
   14000c0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c0f4:	je     0x14000c116
   14000c0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c0f8:	jb     0x14000c16a
   14000c0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c0fb:	jb     0x14000c15e
   14000c0fd:	je     0x14000c168
   14000c0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c100:	outs   dx,BYTE PTR ds:[rsi]
   14000c101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff34
   14000c107:	cmp    al,0x61
   14000c109:	jae    0x14000c17e
   14000c10b:	gs ins DWORD PTR es:[rdi],dx
   14000c10d:	(bad)  
   14000c10e:	ins    BYTE PTR es:[rdi],dx
   14000c10f:	jns    0x14000c131
   14000c111:	js     0x14000c180
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	outs   dx,BYTE PTR ds:[rsi]
   14000c115:	jae    0x14000c154
   14000c117:	and    dh,BYTE PTR [rbp+0x72]
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c11e:	push   0x73616d65
   14000c123:	sub    eax,0x7263696d
   14000c128:	outs   dx,DWORD PTR ds:[rsi]
   14000c129:	jae    0x14000c19a
   14000c12b:	data16 je 0x14000c15b
   14000c12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c134:	ins    DWORD PTR es:[rdi],dx
   14000c135:	cs jbe 0x14000c169
   14000c138:	and    ah,BYTE PTR [rax]
   14000c13a:	ins    DWORD PTR es:[rdi],dx
   14000c13b:	(bad)  
   14000c13c:	outs   dx,BYTE PTR ds:[rsi]
   14000c13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c144:	jb     0x14000c1b9
   14000c146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c14d:	xor    BYTE PTR [rdx],ah
   14000c14f:	ds or  eax,0x3c20200a
   14000c155:	(bad)  
   14000c156:	jae    0x14000c1cb
   14000c158:	gs ins DWORD PTR es:[rdi],dx
   14000c15a:	(bad)  
   14000c15b:	ins    BYTE PTR es:[rdi],dx
   14000c15c:	jns    0x14000c1a7
   14000c15e:	fs outs dx,BYTE PTR gs:[rsi]
   14000c161:	je     0x14000c1cc
   14000c163:	je     0x14000c1de
   14000c165:	or     eax,0x2020200a
   14000c16a:	and    BYTE PTR [rsi+0x65],dh
   14000c16d:	jb     0x14000c1e2
   14000c16f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c176:	xor    BYTE PTR [rsi],ch
   14000c178:	xor    BYTE PTR [rsi],ch
   14000c17a:	xor    BYTE PTR [rdx],ah
   14000c17c:	or     eax,0x2020200a
   14000c181:	and    BYTE PTR [rax+0x72],dh
   14000c184:	outs   dx,DWORD PTR ds:[rsi]
   14000c185:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c188:	jae    0x14000c1f9
   14000c18a:	jb     0x14000c1cd
   14000c18c:	jb     0x14000c1f1
   14000c18e:	push   0x63657469
   14000c193:	je     0x14000c20a
   14000c195:	jb     0x14000c1fc
   14000c197:	cmp    eax,0x646d6122
   14000c19c:	ss xor al,0x22
   14000c19f:	or     eax,0x2020200a
   14000c1a4:	and    BYTE PTR [rsi+0x61],ch
   14000c1a7:	ins    DWORD PTR es:[rdi],dx
   14000c1a8:	gs cmp eax,0x63694d22
   14000c1ae:	jb     0x14000c21f
   14000c1b0:	jae    0x14000c221
   14000c1b2:	data16 je 0x14000c1e3
   14000c1b5:	push   rdi
   14000c1b6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c1bd:	fs outs dx,DWORD PTR fs:[rsi]
   14000c1c0:	imul   esp,DWORD PTR fs:[rcx+0x67],0x200a0d22
   14000c1c8:	and    BYTE PTR [rax],ah
   14000c1ca:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c1ce:	gs cmp eax,0x6e697722
   14000c1d4:	xor    esi,DWORD PTR [rdx]
   14000c1d6:	and    cl,BYTE PTR [rip+0x2f20200a]        # 0x16f20e1e6
   14000c1dc:	ds or  eax,0x3c20200a
   14000c1e2:	fs gs jae 0x14000c249
   14000c1e6:	jb     0x14000c251
   14000c1e8:	jo     0x14000c25e
   14000c1ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x7665443e
   14000c1f1:	imul   esp,DWORD PTR [rbx+0x65],0x73694420
   14000c1f8:	jo     0x14000c266
   14000c1fa:	(bad)  
   14000c1fb:	jns    0x14000c21d
   14000c1fd:	rex.WRXB (bad) 
   14000c1ff:	push   0x65
   14000c201:	movsxd esi,DWORD PTR [rax+riz*1+0x44]
   14000c205:	imul   esp,DWORD PTR [rcx+0x67],0x74736f6e
   14000c20c:	imul   esp,DWORD PTR [rbx+0x73],0x6f6f5420
   14000c213:	ins    BYTE PTR es:[rdi],dx
   14000c214:	cmp    al,0x2f
   14000c216:	fs gs jae 0x14000c27d
   14000c21a:	jb     0x14000c285
   14000c21c:	jo     0x14000c292
   14000c21e:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000c225:	and    BYTE PTR [rsp+rsi*2],bh
   14000c228:	jb     0x14000c29f
   14000c22a:	jae    0x14000c2a0
   14000c22c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c22e:	outs   dx,WORD PTR ds:[rsi]
   14000c230:	and    BYTE PTR [rax+0x6d],bh
   14000c233:	ins    BYTE PTR es:[rdi],dx
   14000c234:	outs   dx,BYTE PTR ds:[rsi]
   14000c235:	jae    0x14000c274
   14000c237:	and    dh,BYTE PTR [rbp+0x72]
   14000c23a:	outs   dx,BYTE PTR ds:[rsi]
   14000c23b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c23e:	push   0x73616d65
   14000c243:	sub    eax,0x7263696d
   14000c248:	outs   dx,DWORD PTR ds:[rsi]
   14000c249:	jae    0x14000c2ba
   14000c24b:	data16 je 0x14000c27b
   14000c24e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c251:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c254:	ins    DWORD PTR es:[rdi],dx
   14000c255:	cs jbe 0x14000c28b
   14000c258:	and    bh,BYTE PTR [rsi]
   14000c25a:	or     eax,0x2020200a
   14000c25f:	and    BYTE PTR [rbx+rsi*2],bh
   14000c262:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c266:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c26e:	and    BYTE PTR [rax],ah
   14000c270:	and    BYTE PTR [rax],ah
   14000c272:	cmp    al,0x72
   14000c274:	gs jno 0x14000c2ec
   14000c277:	gs jae 0x14000c2ee
   14000c27a:	gs fs push rax
   14000c27d:	jb     0x14000c2e8
   14000c27f:	jbe    0x14000c2ea
   14000c281:	ins    BYTE PTR es:[rdi],dx
   14000c282:	gs addr32 gs jae 0x14000c2c5
   14000c287:	or     eax,0x2020200a
   14000c28c:	and    BYTE PTR [rax],ah
   14000c28e:	and    BYTE PTR [rax],ah
   14000c290:	and    BYTE PTR [rdx+rsi*2],bh
   14000c293:	gs jno 0x14000c30b
   14000c296:	gs jae 0x14000c30d
   14000c299:	gs fs rex.RB js 0x14000c303
   14000c29e:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c2a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c2a8:	ins    BYTE PTR es:[rdi],dx
   14000c2a9:	or     eax,0x2020200a
   14000c2ae:	and    BYTE PTR [rax],ah
   14000c2b0:	and    BYTE PTR [rax],ah
   14000c2b2:	and    BYTE PTR [rax],ah
   14000c2b4:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c2b8:	gs ins BYTE PTR es:[rdi],dx
   14000c2ba:	cmp    eax,0x49736122
   14000c2bf:	outs   dx,BYTE PTR ds:[rsi]
   14000c2c0:	jbe    0x14000c331
   14000c2c2:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c2c6:	or     eax,0x2020200a
   14000c2cb:	and    BYTE PTR [rax],ah
   14000c2cd:	and    BYTE PTR [rax],ah
   14000c2cf:	and    BYTE PTR [rax],ah
   14000c2d1:	and    BYTE PTR [rbp+0x69],dh
   14000c2d4:	movsxd esp,DWORD PTR [r11+0x65]
   14000c2d8:	jae    0x14000c34d
   14000c2da:	cmp    eax,0x6c616622
   14000c2df:	jae    0x14000c346
   14000c2e1:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e2f1
   14000c2e7:	and    BYTE PTR [rax],ah
   14000c2e9:	and    BYTE PTR [rax],ah
   14000c2eb:	and    BYTE PTR [rdi],ch
   14000c2ed:	ds or  eax,0x2020200a
   14000c2f3:	and    BYTE PTR [rax],ah
   14000c2f5:	and    BYTE PTR [rdi+rbp*1],bh
   14000c2f8:	jb     0x14000c35f
   14000c2fa:	jno    0x14000c371
   14000c2fc:	gs jae 0x14000c373
   14000c2ff:	gs fs push rax
   14000c302:	jb     0x14000c36d
   14000c304:	jbe    0x14000c36f
   14000c306:	ins    BYTE PTR es:[rdi],dx
   14000c307:	gs addr32 gs jae 0x14000c34a
   14000c30c:	or     eax,0x2020200a
   14000c311:	and    BYTE PTR [rdi+rbp*1],bh
   14000c314:	jae    0x14000c37b
   14000c316:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c319:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c321:	cmp    al,0x2f
   14000c323:	je     0x14000c397
   14000c325:	jne    0x14000c39a
   14000c327:	je     0x14000c372
   14000c329:	outs   dx,BYTE PTR ds:[rsi]
   14000c32a:	outs   dx,WORD PTR ds:[rsi]
   14000c32c:	ds or  eax,0x612f3c0a
   14000c332:	jae    0x14000c3a7
   14000c334:	gs ins DWORD PTR es:[rdi],dx
   14000c336:	(bad)  
   14000c337:	ins    BYTE PTR es:[rdi],dx
   14000c338:	jns    0x14000c378
   14000c33a:	or     eax,0xa
   14000c33f:	add    BYTE PTR [rsp+rax*1],ah
   14000c342:	xor    al,0x0
   14000c344:	add    BYTE PTR [rax],al
   14000c346:	push   rsi
   14000c347:	add    BYTE PTR [rbx+0x0],dl
   14000c34a:	pop    rdi
   14000c34b:	add    BYTE PTR [rsi+0x0],dl
   14000c34e:	add    BYTE PTR [r10+0x0],r10b
   14000c352:	push   rbx
   14000c353:	add    BYTE PTR [rcx+0x0],cl
   14000c356:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c35a:	pop    rdi
   14000c35b:	add    BYTE PTR [rcx+0x0],cl
   14000c35e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c362:	rex.WRXB add BYTE PTR [r8],r8b
   14000c365:	add    BYTE PTR [rax],al
   14000c367:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c36d:	add    BYTE PTR [rcx],al
   14000c36f:	add    BYTE PTR [rax],al
   14000c371:	add    BYTE PTR [rdx],cl
   14000c373:	add    BYTE PTR [rax],al
   14000c375:	add    BYTE PTR [rax],bpl
   14000c378:	add    BYTE PTR [rax],al
   14000c37a:	or     al,BYTE PTR [rax]
   14000c37c:	add    BYTE PTR [rax+0x0],al
   14000c37f:	sub    BYTE PTR [rdi],bh
   14000c381:	add    BYTE PTR [rax],al
   14000c383:	add    BYTE PTR [rax],al
   14000c385:	add    BYTE PTR [rax],al
   14000c387:	add    BYTE PTR [rax+rax*1],al
   14000c38a:	add    al,0x0
   14000c38c:	add    DWORD PTR [rax],eax
	...
   14000c39a:	add    BYTE PTR [rax],al
   14000c39c:	(bad)  
   14000c39d:	add    eax,DWORD PTR [rax]
   14000c39f:	add    BYTE PTR [rcx],al
   14000c3a1:	add    BYTE PTR [rbx+0x0],dl
   14000c3a4:	je     0x14000c3a6
   14000c3a6:	jb     0x14000c3a8
   14000c3a8:	imul   eax,DWORD PTR [rax],0x67006e
   14000c3ae:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c3b2:	ins    BYTE PTR es:[rdi],dx
   14000c3b3:	add    BYTE PTR [rbp+0x0],ah
   14000c3b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3ba:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	pop    rsi
   14000c3c1:	add    eax,DWORD PTR [rax]
   14000c3c3:	add    BYTE PTR [rcx],al
   14000c3c5:	add    BYTE PTR [rax],dh
   14000c3c7:	add    BYTE PTR [rax+rax*1],dh
   14000c3ca:	xor    BYTE PTR [rax],al
   14000c3cc:	cmp    DWORD PTR [rax],eax
   14000c3ce:	xor    BYTE PTR [rax],al
   14000c3d0:	xor    al,0x0
   14000c3d2:	rex.X add BYTE PTR [rax],sil
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c3db:	add    BYTE PTR [rcx],al
   14000c3dd:	add    BYTE PTR [rbx+0x0],al
   14000c3e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c3e1:	add    BYTE PTR [rbp+0x0],ch
   14000c3e4:	jo     0x14000c3e6
   14000c3e6:	(bad)  
   14000c3e7:	add    BYTE PTR [rsi+0x0],ch
   14000c3ea:	jns    0x14000c3ec
   14000c3ec:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c3f0:	ins    DWORD PTR es:[rdi],dx
   14000c3f1:	add    BYTE PTR [rbp+0x0],ah
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c3fc:	movsxd eax,DWORD PTR [rax]
   14000c3fe:	jb     0x14000c400
   14000c400:	outs   dx,DWORD PTR ds:[rsi]
   14000c401:	add    BYTE PTR [rbx+0x0],dh
   14000c404:	outs   dx,DWORD PTR ds:[rsi]
   14000c405:	add    BYTE PTR [rsi+0x0],ah
   14000c408:	je     0x14000c40a
   14000c40a:	and    BYTE PTR [rax],al
   14000c40c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c410:	jb     0x14000c412
   14000c412:	jo     0x14000c414
   14000c414:	outs   dx,DWORD PTR ds:[rsi]
   14000c415:	add    BYTE PTR [rdx+0x0],dh
   14000c418:	(bad)  
   14000c419:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c41d:	add    BYTE PTR [rdi+0x0],ch
   14000c420:	outs   dx,BYTE PTR ds:[rsi]
   14000c421:	add    BYTE PTR [rax],al
   14000c423:	add    al,dh
   14000c425:	add    BYTE PTR [rax+rax*1+0x1],ah
   14000c429:	add    BYTE PTR [rsi+0x0],al
   14000c42c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c432:	add    BYTE PTR [rbp+0x0],r12b
   14000c436:	jae    0x14000c438
   14000c438:	movsxd eax,DWORD PTR [rax]
   14000c43a:	jb     0x14000c43c
   14000c43c:	imul   eax,DWORD PTR [rax],0x740070
   14000c442:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c448:	add    BYTE PTR [rax],al
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	add    BYTE PTR [rax+rax*1+0x4f],r8b
   14000c451:	add    BYTE PTR [rax+rax*1+0x69],al
   14000c455:	add    BYTE PTR [rcx+0x0],ah
   14000c458:	add    BYTE PTR [eax],ah
   14000c45b:	add    BYTE PTR [rcx+0x0],ch
   14000c45e:	jae    0x14000c460
   14000c460:	and    BYTE PTR [rax],al
   14000c462:	(bad)  
   14000c463:	add    BYTE PTR [rax],ah
   14000c465:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c469:	add    BYTE PTR [rdi+0x0],ch
   14000c46c:	ins    BYTE PTR es:[rdi],dx
   14000c46d:	add    BYTE PTR [rax],ah
   14000c46f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c473:	add    BYTE PTR [rcx+0x0],ah
   14000c476:	je     0x14000c478
   14000c478:	and    BYTE PTR [rax],al
   14000c47a:	movsxd eax,DWORD PTR [rax]
   14000c47c:	outs   dx,DWORD PTR ds:[rsi]
   14000c47d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000c481:	add    BYTE PTR [rbp+0x0],ah
   14000c484:	movsxd eax,DWORD PTR [rax]
   14000c486:	je     0x14000c488
   14000c488:	jae    0x14000c48a
   14000c48a:	and    BYTE PTR [rax],al
   14000c48c:	add    BYTE PTR [rbp+0x0],r12b
   14000c490:	jbe    0x14000c492
   14000c492:	imul   eax,DWORD PTR [rax],0x650063
   14000c498:	and    BYTE PTR [rax],al
   14000c49a:	add    BYTE PTR [rcx+0x0],r13b
   14000c49e:	jae    0x14000c4a0
   14000c4a0:	jo     0x14000c4a2
   14000c4a2:	ins    BYTE PTR es:[rdi],dx
   14000c4a3:	add    BYTE PTR [rcx+0x0],ah
   14000c4a6:	jns    0x14000c4a8
   14000c4a8:	and    BYTE PTR [rax],al
   14000c4aa:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000c4ae:	push   0x0
   14000c4b0:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c4b4:	je     0x14000c4b6
   14000c4b6:	and    BYTE PTR [rax],al
   14000c4b8:	sub    BYTE PTR [rax],al
   14000c4ba:	add    BYTE PTR [rax+rax*1+0x4f],r8b
   14000c4bf:	add    BYTE PTR [rcx],ch
   14000c4c1:	add    BYTE PTR [rax],ah
   14000c4c3:	add    BYTE PTR [rcx+0x0],ch
   14000c4c6:	outs   dx,BYTE PTR ds:[rsi]
   14000c4c7:	add    BYTE PTR [rsi+0x0],ah
   14000c4ca:	outs   dx,DWORD PTR ds:[rsi]
   14000c4cb:	add    BYTE PTR [rdx+0x0],dh
   14000c4ce:	ins    DWORD PTR es:[rdi],dx
   14000c4cf:	add    BYTE PTR [rcx+0x0],ah
   14000c4d2:	je     0x14000c4d4
   14000c4d4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4da:	and    BYTE PTR [rax],al
   14000c4dc:	data16 add BYTE PTR [rdx+0x0],dh
   14000c4e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4e1:	add    BYTE PTR [rbp+0x0],ch
   14000c4e4:	and    BYTE PTR [rax],al
   14000c4e6:	je     0x14000c4e8
   14000c4e8:	push   0x20006500
   14000c4ed:	add    BYTE PTR [rbx+0x0],dh
   14000c4f0:	jns    0x14000c4f2
   14000c4f2:	jae    0x14000c4f4
   14000c4f4:	je     0x14000c4f6
   14000c4f6:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c4fa:	and    BYTE PTR [rax],al
   14000c4fc:	(bad)  
   14000c4fd:	add    BYTE PTR [rsi+0x0],ch
   14000c500:	add    BYTE PTR fs:[rax],ah
   14000c503:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000c507:	add    BYTE PTR [rdi+0x0],ah
   14000c50a:	jae    0x14000c50c
   14000c50c:	and    BYTE PTR [rax],al
   14000c50e:	imul   eax,DWORD PTR [rax],0x74
   14000c514:	data16 add BYTE PTR [rbx],ah
   14000c517:	add    BYTE PTR [rcx],al
   14000c519:	add    BYTE PTR [rsi+0x0],al
   14000c51c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c522:	push   rsi
   14000c523:	add    BYTE PTR [rbp+0x0],ah
   14000c526:	jb     0x14000c528
   14000c528:	jae    0x14000c52a
   14000c52a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c530:	add    BYTE PTR [rax],al
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	xor    DWORD PTR [rax],eax
   14000c536:	xor    BYTE PTR [rax],al
   14000c538:	add    BYTE PTR cs:[rax],dh
   14000c53b:	add    BYTE PTR [rsi],ch
   14000c53d:	add    BYTE PTR [rcx],dh
   14000c53f:	add    BYTE PTR [rax],dh
   14000c541:	add    BYTE PTR [rdx],dh
   14000c543:	add    BYTE PTR [rax+rax*1],dh
   14000c546:	xor    BYTE PTR [rax],al
   14000c548:	add    BYTE PTR cs:[rcx],dh
   14000c54b:	add    BYTE PTR [rsi],dh
   14000c54d:	add    BYTE PTR [rbx],dh
   14000c54f:	add    BYTE PTR [rax],bh
   14000c551:	add    BYTE PTR [rax+rax*1],dh
   14000c554:	and    BYTE PTR [rax],al
   14000c556:	sub    BYTE PTR [rax],al
   14000c558:	je     0x14000c55a
   14000c55a:	push   0x2e003100
   14000c55f:	add    BYTE PTR [rcx],dh
   14000c561:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f567
   14000c567:	add    BYTE PTR [rax],dh
   14000c569:	add    BYTE PTR [rcx],bh
   14000c56b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f671
   14000c571:	add    BYTE PTR [rax],dh
   14000c573:	add    BYTE PTR [rax],dh
   14000c575:	add    BYTE PTR [rcx],ch
   14000c577:	add    BYTE PTR [rax],al
   14000c579:	add    BYTE PTR [rax],al
   14000c57b:	add    BYTE PTR [rax],dh
   14000c57d:	add    BYTE PTR [rax],cl
   14000c57f:	add    BYTE PTR [rcx],al
   14000c581:	add    BYTE PTR [rcx+0x0],cl
   14000c584:	outs   dx,BYTE PTR ds:[rsi]
   14000c585:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c589:	add    BYTE PTR [rdx+0x0],dh
   14000c58c:	outs   dx,BYTE PTR ds:[rsi]
   14000c58d:	add    BYTE PTR [rcx+0x0],ah
   14000c590:	ins    BYTE PTR es:[rdi],dx
   14000c591:	add    BYTE PTR [rsi+0x0],cl
   14000c594:	(bad)  
   14000c595:	add    BYTE PTR [rbp+0x0],ch
   14000c598:	add    BYTE PTR gs:[rax],al
   14000c59b:	add    BYTE PTR [rax+rax*1+0x44],al
   14000c59f:	add    BYTE PTR [rdi+0x0],cl
   14000c5a2:	add    BYTE PTR [rcx+0x0],r13b
   14000c5a6:	(bad)  
   14000c5a7:	add    BYTE PTR [rdi+0x0],ah
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	add    BYTE PTR [rax],0x2e
   14000c5af:	add    BYTE PTR [rcx],al
   14000c5b1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c5b5:	add    BYTE PTR [rdi+0x0],ah
   14000c5b8:	(bad)  
   14000c5b9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c5bd:	add    BYTE PTR [rdi+0x0],ch
   14000c5c0:	jo     0x14000c5c2
   14000c5c2:	jns    0x14000c5c4
   14000c5c4:	jb     0x14000c5c6
   14000c5c6:	imul   eax,DWORD PTR [rax],0x680067
   14000c5cc:	je     0x14000c5ce
   14000c5ce:	add    BYTE PTR [rax],al
   14000c5d0:	test   eax,0x4d002000
   14000c5d5:	add    BYTE PTR [rcx+0x0],ch
   14000c5d8:	movsxd eax,DWORD PTR [rax]
   14000c5da:	jb     0x14000c5dc
   14000c5dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c5dd:	add    BYTE PTR [rbx+0x0],dh
   14000c5e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e1:	add    BYTE PTR [rsi+0x0],ah
   14000c5e4:	je     0x14000c5e6
   14000c5e6:	and    BYTE PTR [rax],al
   14000c5e8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c5ec:	jb     0x14000c5ee
   14000c5ee:	jo     0x14000c5f0
   14000c5f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c5f1:	add    BYTE PTR [rdx+0x0],dh
   14000c5f4:	(bad)  
   14000c5f5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c5f9:	add    BYTE PTR [rdi+0x0],ch
   14000c5fc:	outs   dx,BYTE PTR ds:[rsi]
   14000c5fd:	add    BYTE PTR [rsi],ch
   14000c5ff:	add    BYTE PTR [rax],ah
   14000c601:	add    BYTE PTR [rcx+0x0],al
   14000c604:	ins    BYTE PTR es:[rdi],dx
   14000c605:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c609:	add    BYTE PTR [rdx+0x0],dh
   14000c60c:	imul   eax,DWORD PTR [rax],0x680067
   14000c612:	je     0x14000c614
   14000c614:	jae    0x14000c616
   14000c616:	and    BYTE PTR [rax],al
   14000c618:	jb     0x14000c61a
   14000c61a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c61e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c622:	jbe    0x14000c624
   14000c624:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c629:	add    BYTE PTR [rax],al
   14000c62b:	add    BYTE PTR [rax+0x0],al
   14000c62e:	or     al,0x0
   14000c630:	add    DWORD PTR [rax],eax
   14000c632:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c636:	imul   eax,DWORD PTR [rax],0x690067
   14000c63c:	outs   dx,BYTE PTR ds:[rsi]
   14000c63d:	add    BYTE PTR [rcx+0x0],ah
   14000c640:	ins    BYTE PTR es:[rdi],dx
   14000c641:	add    BYTE PTR [rsi+0x0],al
   14000c644:	imul   eax,DWORD PTR [rax],0x65006c
   14000c64a:	outs   dx,BYTE PTR ds:[rsi]
   14000c64b:	add    BYTE PTR [rcx+0x0],ah
   14000c64e:	ins    DWORD PTR es:[rdi],dx
   14000c64f:	add    BYTE PTR [rbp+0x0],ah
   14000c652:	add    BYTE PTR [rax],al
   14000c654:	add    BYTE PTR [rax+rax*1+0x4f],r8b
   14000c659:	add    BYTE PTR [rax+rax*1+0x69],al
   14000c65d:	add    BYTE PTR [rcx+0x0],ah
   14000c660:	add    BYTE PTR [esi],ch
   14000c663:	add    BYTE PTR [rbp+0x0],ah
   14000c666:	js     0x14000c668
   14000c668:	add    BYTE PTR gs:[rax],al
   14000c66b:	add    BYTE PTR [rdx+0x0],ch
   14000c66e:	and    eax,0x50000100
   14000c673:	add    BYTE PTR [rdx+0x0],dh
   14000c676:	outs   dx,DWORD PTR ds:[rsi]
   14000c677:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c67b:	add    BYTE PTR [rbx+0x0],ah
   14000c67e:	je     0x14000c680
   14000c680:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c684:	ins    DWORD PTR es:[rdi],dx
   14000c685:	add    BYTE PTR [rbp+0x0],ah
   14000c688:	add    BYTE PTR [rax],al
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c690:	movsxd eax,DWORD PTR [rax]
   14000c692:	jb     0x14000c694
   14000c694:	outs   dx,DWORD PTR ds:[rsi]
   14000c695:	add    BYTE PTR [rbx+0x0],dh
   14000c698:	outs   dx,DWORD PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rsi+0x0],ah
   14000c69c:	je     0x14000c69e
   14000c69e:	scas   al,BYTE PTR es:[rdi]
   14000c69f:	add    BYTE PTR [rax],ah
   14000c6a1:	add    BYTE PTR [rdi+0x0],dl
   14000c6a4:	imul   eax,DWORD PTR [rax],0x64006e
   14000c6aa:	outs   dx,DWORD PTR ds:[rsi]
   14000c6ab:	add    BYTE PTR [rdi+0x0],dh
   14000c6ae:	jae    0x14000c6b0
   14000c6b0:	scas   al,BYTE PTR es:[rdi]
   14000c6b1:	add    BYTE PTR [rax],ah
   14000c6b3:	add    BYTE PTR [rdi+0x0],cl
   14000c6b6:	jo     0x14000c6b8
   14000c6b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c6bc:	(bad)  
   14000c6bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c6c1:	add    BYTE PTR [rsi+0x0],ch
   14000c6c4:	add    BYTE PTR [eax],ah
   14000c6c7:	add    BYTE PTR [rbx+0x0],dl
   14000c6ca:	jns    0x14000c6cc
   14000c6cc:	jae    0x14000c6ce
   14000c6ce:	je     0x14000c6d0
   14000c6d0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c6d4:	add    BYTE PTR [rax],al
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	rex.RX add BYTE PTR [rcx],r10b
   14000c6db:	add    BYTE PTR [rcx],al
   14000c6dd:	add    BYTE PTR [rax+0x0],dl
   14000c6e0:	jb     0x14000c6e2
   14000c6e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c6e3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c6e7:	add    BYTE PTR [rbx+0x0],ah
   14000c6ea:	je     0x14000c6ec
   14000c6ec:	push   rsi
   14000c6ed:	add    BYTE PTR [rbp+0x0],ah
   14000c6f0:	jb     0x14000c6f2
   14000c6f2:	jae    0x14000c6f4
   14000c6f4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6fa:	add    BYTE PTR [rax],al
   14000c6fc:	xor    DWORD PTR [rax],eax
   14000c6fe:	xor    BYTE PTR [rax],al
   14000c700:	add    BYTE PTR cs:[rax],dh
   14000c703:	add    BYTE PTR [rsi],ch
   14000c705:	add    BYTE PTR [rcx],dh
   14000c707:	add    BYTE PTR [rax],dh
   14000c709:	add    BYTE PTR [rdx],dh
   14000c70b:	add    BYTE PTR [rax+rax*1],dh
   14000c70e:	xor    BYTE PTR [rax],al
   14000c710:	add    BYTE PTR cs:[rcx],dh
   14000c713:	add    BYTE PTR [rsi],dh
   14000c715:	add    BYTE PTR [rbx],dh
   14000c717:	add    BYTE PTR [rax],bh
   14000c719:	add    BYTE PTR [rax+rax*1],dh
   14000c71c:	add    BYTE PTR [rax],al
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	add    BYTE PTR [rax],r8b
   14000c723:	add    BYTE PTR [rcx],al
   14000c725:	add    BYTE PTR [rsi+0x0],dl
   14000c728:	(bad)  
   14000c729:	add    BYTE PTR [rdx+0x0],dh
   14000c72c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c730:	ins    BYTE PTR es:[rdi],dx
   14000c731:	add    BYTE PTR [rbp+0x0],ah
   14000c734:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c738:	data16 add BYTE PTR [rdi+0x0],ch
   14000c73c:	add    BYTE PTR [rax],al
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	and    al,0x0
   14000c742:	add    al,0x0
   14000c744:	add    BYTE PTR [rax],al
   14000c746:	push   rsp
   14000c747:	add    BYTE PTR [rdx+0x0],dh
   14000c74a:	(bad)  
   14000c74b:	add    BYTE PTR [rsi+0x0],ch
   14000c74e:	jae    0x14000c750
   14000c750:	ins    BYTE PTR es:[rdi],dx
   14000c751:	add    BYTE PTR [rcx+0x0],ah
   14000c754:	je     0x14000c756
   14000c756:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c75c:	add    BYTE PTR [rax],al
   14000c75e:	add    BYTE PTR [rax],al
   14000c760:	or     DWORD PTR [rax+rsi*4],eax
   14000c763:	add    al,0x0
   14000c765:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],al
   14000d003:	add    BYTE PTR [rax+rax*1],dh
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	mov    al,0xa1
   14000d00a:	mov    eax,0xe0a1c8a1
   14000d00f:	movabs eax,ds:0xa350a248a240a1e8
   14000d018:	pop    rax
   14000d019:	movabs ds:0xa378a370a368a360,eax
   14000d022:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14000d029:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14000d032:	add    BYTE PTR [rax],al
   14000d034:	add    BYTE PTR [rax+0x0],dh
   14000d037:	add    BYTE PTR [rax+rax*1-0x5cd80000],ah
   14000d03e:	cmp    BYTE PTR [rbx-0x5ca75cb8],ah
   14000d044:	push   0xffffffff88a378a3
   14000d049:	movabs ds:0xa3c8a3b8a3a8a398,eax
   14000d052:	fsub   DWORD PTR [rbx-0x5c075c18]
   14000d058:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   14000d05f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d060:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d062:	pop    rax
   14000d063:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d064:	push   0xffffffff88a478a4
   14000d069:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d06a:	cwde   
   14000d06b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d06c:	test   al,0xa4
   14000d06e:	mov    eax,0xd8a4c8a4
   14000d073:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d074:	call   0x148a5c91d
   14000d079:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d07a:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   14000d080:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d082:	pop    rax
   14000d083:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d084:	push   0xffffffff88a578a5
   14000d089:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d08a:	cwde   
   14000d08b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d08c:	test   al,0xa5
   14000d08e:	mov    eax,0xd8a5c8a5
   14000d093:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d094:	call   0x148a6c93e
   14000d099:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d09a:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   14000d0a0:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0a2:	pop    rax
   14000d0a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0a4:	push   0xffffffff88a678a6
   14000d0a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0aa:	cwde   
   14000d0ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0ac:	test   al,0xa6
   14000d0ae:	mov    eax,0xd8a6c8a6
   14000d0b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0b4:	call   0x148a7c95f
   14000d0b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d0ba:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14000d0c0:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000d0c2:	pop    rax
   14000d0c3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d0c4:	push   0xffffffff88a778a7
   14000d0c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d0ca:	cwde   
   14000d0cb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d0cc:	test   al,0xa7
   14000d0ce:	mov    eax,0x30aa18a7
   14000d0d3:	stos   BYTE PTR es:[rdi],al
   14000d0d4:	cmp    BYTE PTR [rdx-0x6fff55c0],ch
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	or     BYTE PTR [rcx],al
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	cmp    BYTE PTR [rax-0x5f875fa8],ah
   14000d0e6:	cwde   
   14000d0e7:	movabs al,ds:0xa118a0f8a0d8a0b8
   14000d0f0:	cmp    BYTE PTR [rcx-0x5e875ea8],ah
   14000d0f6:	cwde   
   14000d0f7:	movabs eax,ds:0xa218a1f8a1d8a1b8
   14000d100:	cmp    BYTE PTR [rdx-0x5d875da8],ah
   14000d106:	cwde   
   14000d107:	movabs ds:0xa318a2f8a2d8a2b8,al
   14000d110:	cmp    BYTE PTR [rbx-0x5c875ca8],ah
   14000d116:	cwde   
   14000d117:	movabs ds:0xa418a3f8a3d8a3b8,eax
   14000d120:	cmp    BYTE PTR [rax+rbx*2-0x675b875c],ah
   14000d127:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d128:	mov    eax,0xf8a4d8a4
   14000d12d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d12e:	sbb    BYTE PTR [rbp-0x5aa75ac8],ah
   14000d134:	js     0x14000d0db
   14000d136:	cwde   
   14000d137:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d138:	mov    eax,0xf8a5d8a5
   14000d13d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d13e:	sbb    BYTE PTR [rsi-0x59a759c8],ah
   14000d144:	js     0x14000d0ec
   14000d146:	cwde   
   14000d147:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d148:	mov    eax,0xf8a6d8a6
   14000d14d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d14e:	sbb    BYTE PTR [rdi-0x58a758c8],ah
   14000d154:	js     0x14000d0fd
   14000d156:	cwde   
   14000d157:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d158:	mov    eax,0xf8a7d8a7
   14000d15d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d15e:	sbb    BYTE PTR [rax-0x57a757c8],ch
   14000d164:	js     0x14000d10e
   14000d166:	cwde   
   14000d167:	test   al,0xb8
   14000d169:	test   al,0xd8
   14000d16b:	test   al,0xf8
   14000d16d:	test   al,0x18
   14000d16f:	test   eax,0xa958a938
   14000d174:	js     0x14000d11f
   14000d176:	cwde   
   14000d177:	test   eax,0xa9d8a9b8
   14000d17c:	clc    
   14000d17d:	test   eax,0xaa38aa18
   14000d182:	pop    rax
   14000d183:	stos   BYTE PTR es:[rdi],al
   14000d184:	js     0x14000d130
   14000d186:	cwde   
   14000d187:	stos   BYTE PTR es:[rdi],al
   14000d188:	mov    eax,0xf8aad8aa
   14000d18d:	stos   BYTE PTR es:[rdi],al
   14000d18e:	sbb    BYTE PTR [rbx-0x54a754c8],ch
   14000d194:	js     0x14000d141
   14000d196:	cwde   
   14000d197:	stos   DWORD PTR es:[rdi],eax
   14000d198:	mov    eax,0xf8abd8ab
   14000d19d:	stos   DWORD PTR es:[rdi],eax
   14000d19e:	sbb    BYTE PTR [rax+rdi*1+0x78ac58ac],ch
   14000d1a5:	lods   al,BYTE PTR ds:[rsi]
   14000d1a6:	cwde   
   14000d1a7:	lods   al,BYTE PTR ds:[rsi]
   14000d1a8:	mov    eax,0xf8acd8ac
   14000d1ad:	lods   al,BYTE PTR ds:[rsi]
   14000d1ae:	sbb    BYTE PTR [rbp-0x52a752c8],ch
   14000d1b4:	js     0x14000d163
   14000d1b6:	cwde   
   14000d1b7:	lods   eax,DWORD PTR ds:[rsi]
   14000d1b8:	mov    eax,0xf8add8ad
   14000d1bd:	lods   eax,DWORD PTR ds:[rsi]
   14000d1be:	sbb    BYTE PTR [rsi-0x51a751c8],ch
   14000d1c4:	js     0x14000d174
   14000d1c6:	cwde   
   14000d1c7:	scas   al,BYTE PTR es:[rdi]
   14000d1c8:	mov    eax,0xf8aed8ae
   14000d1cd:	scas   al,BYTE PTR es:[rdi]
   14000d1ce:	sbb    BYTE PTR [rdi-0x50a750c8],ch
   14000d1d4:	js     0x14000d185
   14000d1d6:	cwde   
   14000d1d7:	scas   eax,DWORD PTR es:[rdi]
   14000d1d8:	mov    eax,0xf8afd8af
   14000d1dd:	scas   eax,DWORD PTR es:[rdi]
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	add    BYTE PTR [rax+0x500000],ah
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	sbb    BYTE PTR [rax-0x5fa75fc8],ah
   14000d1ee:	js     0x14000d190
   14000d1f0:	cwde   
   14000d1f1:	movabs al,ds:0xa118a0f8a0d8a0b8
   14000d1fa:	cmp    BYTE PTR [rcx-0x5e875ea8],ah
   14000d200:	cwde   
   14000d201:	movabs eax,ds:0xa218a1f8a1d8a1b8
   14000d20a:	cmp    BYTE PTR [rdx-0x5d875da8],ah
   14000d210:	cwde   
   14000d211:	movabs ds:0xa318a2f8a2d8a2b8,al
   14000d21a:	cmp    BYTE PTR [rbx-0x5c875ca8],ah
   14000d220:	cwde   
   14000d221:	movabs ds:0xa418a3f8a3d8a3b8,eax
   14000d22a:	.byte 0x38
   14000d22b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d22c:	pop    rax
   14000d22d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d22e:	js     0x14000d1d4
