
fa7e95675dacc5c3bd90e758cac31e72234cefa245f0b5ecaca3a2021f68c00c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rdi
   140001002:	sub    rsp,0x20
   140001006:	xor    edx,edx
   140001008:	lea    rcx,[rip+0xa6e9]        # 0x14000b6f8
   14000100f:	lea    r8d,[rdx+0x28]
   140001013:	call   0x140006f22
   140001018:	and    DWORD PTR [rip+0xa6c9],0x0        # 0x14000b6e8
   14000101f:	lea    rdi,[rip+0xa6ba]        # 0x14000b6e0
   140001026:	and    QWORD PTR [rip+0xa6c2],0x0        # 0x14000b6f0
   14000102e:	lea    rcx,[rip+0xa6c3]        # 0x14000b6f8
   140001035:	and    DWORD PTR [rip+0xa6b0],0x0        # 0x14000b6ec
   14000103c:	and    QWORD PTR [rip+0xa6dc],0x0        # 0x14000b720
   140001044:	mov    QWORD PTR [rip+0xa60d],rdi        # 0x14000b658
   14000104b:	call   0x140002b5c
   140001050:	test   eax,eax
   140001052:	jns    0x14000105d
   140001054:	mov    BYTE PTR [rip+0xa5f9],0x1        # 0x14000b654
   14000105b:	jmp    0x140001067
   14000105d:	mov    DWORD PTR [rip+0xa681],0x38        # 0x14000b6e8
   140001067:	lea    rax,[rip+0x76c2]        # 0x140008730
   14000106e:	mov    QWORD PTR [rip+0xa5eb],rdi        # 0x14000b660
   140001075:	lea    rcx,[rip+0x6ac4]        # 0x140007b40
   14000107c:	mov    QWORD PTR [rip+0xa65d],rax        # 0x14000b6e0
   140001083:	add    rsp,0x20
   140001087:	pop    rdi
   140001088:	jmp    0x140006be0
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	sub    rsp,0x28
   140001094:	call   QWORD PTR [rip+0x7086]        # 0x140008120
   14000109a:	lea    rcx,[rip+0x770f]        # 0x1400087b0
   1400010a1:	mov    BYTE PTR [rip+0xa6b0],0x0        # 0x14000b758
   1400010a8:	mov    QWORD PTR [rip+0xa699],rcx        # 0x14000b748
   1400010af:	lea    rcx,[rip+0x6aaa]        # 0x140007b60
   1400010b6:	mov    QWORD PTR [rip+0xa693],rax        # 0x14000b750
   1400010bd:	add    rsp,0x28
   1400010c1:	jmp    0x140006be0
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	lea    rcx,[rip+0x6ac9]        # 0x140007ba0
   1400010d7:	jmp    0x140006be0
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	rex push rbx
   1400010e2:	sub    rsp,0x20
   1400010e6:	xor    edx,edx
   1400010e8:	lea    rcx,[rip+0xa699]        # 0x14000b788
   1400010ef:	lea    r8d,[rdx+0x28]
   1400010f3:	call   0x140006f22
   1400010f8:	and    QWORD PTR [rip+0xa6b0],0x0        # 0x14000b7b0
   140001100:	lea    rax,[rip+0xffffffffffffeef9]        # 0x140000000
   140001107:	and    DWORD PTR [rip+0xa6aa],0x0        # 0x14000b7b8
   14000110e:	lea    rcx,[rip+0xa673]        # 0x14000b788
   140001115:	and    DWORD PTR [rip+0xa6a0],0x0        # 0x14000b7bc
   14000111c:	mov    ebx,0x1
   140001121:	mov    QWORD PTR [rip+0xa648],rax        # 0x14000b770
   140001128:	mov    QWORD PTR [rip+0xa639],rax        # 0x14000b768
   14000112f:	lea    rax,[rip+0x7b4a]        # 0x140008c80
   140001136:	mov    QWORD PTR [rip+0xa643],rax        # 0x14000b780
   14000113d:	mov    DWORD PTR [rip+0xa619],0x60        # 0x14000b760
   140001147:	mov    BYTE PTR [rip+0xa62b],bl        # 0x14000b778
   14000114d:	mov    DWORD PTR [rip+0xa625],0x800        # 0x14000b77c
   140001157:	call   0x140002b5c
   14000115c:	movzx  ecx,BYTE PTR [rip+0xa4f1]        # 0x14000b654
   140001163:	test   eax,eax
   140001165:	cmovs  ecx,ebx
   140001168:	mov    BYTE PTR [rip+0xa4e6],cl        # 0x14000b654
   14000116e:	lea    rcx,[rip+0x6a4b]        # 0x140007bc0
   140001175:	add    rsp,0x20
   140001179:	pop    rbx
   14000117a:	jmp    0x140006be0
   14000117f:	int3   
   140001180:	sub    rsp,0x28
   140001184:	xor    edx,edx
   140001186:	lea    rcx,[rip+0xa63b]        # 0x14000b7c8
   14000118d:	lea    r8d,[rdx+0x28]
   140001191:	call   0x140006f22
   140001196:	and    QWORD PTR [rip+0xa65a],0x0        # 0x14000b7f8
   14000119e:	lea    rcx,[rip+0xa623]        # 0x14000b7c8
   1400011a5:	and    DWORD PTR [rip+0xa654],0x0        # 0x14000b800
   1400011ac:	and    DWORD PTR [rip+0xa651],0x0        # 0x14000b804
   1400011b3:	and    QWORD PTR [rip+0xa635],0x0        # 0x14000b7f0
   1400011bb:	mov    DWORD PTR [rip+0xa5fb],0x48        # 0x14000b7c0
   1400011c5:	call   0x140002b5c
   1400011ca:	test   eax,eax
   1400011cc:	jns    0x1400011dc
   1400011ce:	and    DWORD PTR [rip+0xa5eb],0x0        # 0x14000b7c0
   1400011d5:	mov    BYTE PTR [rip+0xa478],0x1        # 0x14000b654
   1400011dc:	lea    rcx,[rip+0x6a2d]        # 0x140007c10
   1400011e3:	add    rsp,0x28
   1400011e7:	jmp    0x140006be0
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	sub    rsp,0x28
   1400011f4:	xor    edx,edx
   1400011f6:	lea    rcx,[rip+0xa633]        # 0x14000b830
   1400011fd:	lea    r8d,[rdx+0x28]
   140001201:	call   0x140006f22
   140001206:	and    DWORD PTR [rip+0xa603],0x0        # 0x14000b810
   14000120d:	lea    rax,[rip+0xffffffffffffedec]        # 0x140000000
   140001214:	mov    QWORD PTR [rip+0xa5fd],rax        # 0x14000b818
   14000121b:	lea    rcx,[rip+0xa60e]        # 0x14000b830
   140001222:	lea    rax,[rip+0x8ab7]        # 0x140009ce0
   140001229:	mov    QWORD PTR [rip+0xa5f0],rax        # 0x14000b820
   140001230:	lea    rax,[rip+0x8aa9]        # 0x140009ce0
   140001237:	mov    QWORD PTR [rip+0xa5ea],rax        # 0x14000b828
   14000123e:	call   0x140002b5c
   140001243:	test   eax,eax
   140001245:	jns    0x140001250
   140001247:	mov    BYTE PTR [rip+0xa406],0x1        # 0x14000b654
   14000124e:	jmp    0x14000125a
   140001250:	mov    DWORD PTR [rip+0xa5b6],0x48        # 0x14000b810
   14000125a:	lea    rcx,[rip+0x6a9f]        # 0x140007d00
   140001261:	add    rsp,0x28
   140001265:	jmp    0x140006be0
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	int3   
   140001271:	int3   
   140001272:	int3   
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	sub    rsp,0x38
   14000127c:	and    QWORD PTR [rsp+0x20],0x0
   140001282:	movzx  r9d,dx
   140001286:	mov    edx,0x2b
   14000128b:	call   QWORD PTR [rip+0x6dcf]        # 0x140008060
   140001291:	add    rsp,0x38
   140001295:	ret    
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	mov    r11,rsp
   14000129f:	mov    DWORD PTR [r11+0x20],r9d
   1400012a3:	sub    rsp,0x48
   1400012a7:	and    QWORD PTR [r11-0x18],0x0
   1400012ac:	lea    rax,[r11+0x20]
   1400012b0:	movzx  r9d,dx
   1400012b4:	mov    edx,0x2b
   1400012b9:	mov    QWORD PTR [r11-0x20],0x4
   1400012c1:	mov    QWORD PTR [r11-0x28],rax
   1400012c5:	call   QWORD PTR [rip+0x6d95]        # 0x140008060
   1400012cb:	add    rsp,0x48
   1400012cf:	ret    
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	mov    r11,rsp
   1400012db:	mov    QWORD PTR [r11+0x20],r9
   1400012df:	sub    rsp,0x48
   1400012e3:	and    QWORD PTR [r11-0x18],0x0
   1400012e8:	lea    rax,[r11+0x20]
   1400012ec:	movzx  r9d,dx
   1400012f0:	lea    r8,[rip+0x7881]        # 0x140008b78
   1400012f7:	mov    QWORD PTR [r11-0x20],0x8
   1400012ff:	mov    edx,0x2b
   140001304:	mov    QWORD PTR [r11-0x28],rax
   140001308:	call   QWORD PTR [rip+0x6d52]        # 0x140008060
   14000130e:	add    rsp,0x48
   140001312:	ret    
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	mov    QWORD PTR [rsp+0x20],r9
   140001321:	sub    rsp,0x78
   140001325:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000132d:	xor    r9d,r9d
   140001330:	mov    r10d,0xa
   140001336:	test   rdx,rdx
   140001339:	je     0x14000136a
   14000133b:	cmp    WORD PTR [rdx],r9w
   14000133f:	jne    0x140001347
   140001341:	lea    eax,[r10+0x4]
   140001345:	jmp    0x14000136d
   140001347:	or     rax,0xffffffffffffffff
   14000134b:	inc    rax
   14000134e:	cmp    WORD PTR [rdx+rax*2],r9w
   140001353:	jne    0x14000134b
   140001355:	inc    rax
   140001358:	mov    r8d,0xf3c
   14000135e:	cmp    rax,r8
   140001361:	cmova  rax,r8
   140001365:	add    rax,rax
   140001368:	jmp    0x14000136d
   14000136a:	mov    rax,r10
   14000136d:	test   rdx,rdx
   140001370:	je     0x140001383
   140001372:	cmp    WORD PTR [rdx],r9w
   140001376:	lea    r8,[rip+0x781b]        # 0x140008b98
   14000137d:	cmove  rdx,r8
   140001381:	jmp    0x14000138a
   140001383:	lea    rdx,[rip+0x781e]        # 0x140008ba8
   14000138a:	mov    QWORD PTR [rsp+0x60],r9
   14000138f:	lea    r8,[rsp+0xb0]
   140001397:	mov    QWORD PTR [rsp+0x58],0x4
   1400013a0:	mov    QWORD PTR [rsp+0x50],r8
   1400013a5:	lea    r8,[rip+0x77cc]        # 0x140008b78
   1400013ac:	mov    QWORD PTR [rsp+0x48],rax
   1400013b1:	lea    rax,[rsp+0xa0]
   1400013b9:	mov    QWORD PTR [rsp+0x40],rdx
   1400013be:	mov    edx,0x8
   1400013c3:	mov    QWORD PTR [rsp+0x38],rdx
   1400013c8:	mov    QWORD PTR [rsp+0x30],rax
   1400013cd:	lea    rax,[rsp+0x98]
   1400013d5:	mov    QWORD PTR [rsp+0x28],rdx
   1400013da:	mov    edx,0x2b
   1400013df:	movzx  r9d,r10w
   1400013e3:	mov    QWORD PTR [rsp+0x20],rax
   1400013e8:	call   QWORD PTR [rip+0x6c72]        # 0x140008060
   1400013ee:	add    rsp,0x78
   1400013f2:	ret    
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rbx
   140001405:	mov    QWORD PTR [rsp+0x10],rsi
   14000140a:	push   rdi
   14000140b:	sub    rsp,0x20
   14000140f:	and    DWORD PTR [r8],0x0
   140001413:	mov    rbx,rdx
   140001416:	sub    ecx,0x4
   140001419:	je     0x140001430
   14000141b:	cmp    ecx,0x1
   14000141e:	je     0x140001427
   140001420:	mov    eax,0x57
   140001425:	jmp    0x14000146f
   140001427:	xor    edi,edi
   140001429:	xor    eax,eax
   14000142b:	xor    sil,sil
   14000142e:	jmp    0x140001451
   140001430:	mov    rcx,r9
   140001433:	call   QWORD PTR [rip+0x6c2f]        # 0x140008068
   140001439:	mov    rcx,rax
   14000143c:	mov    rdi,rax
   14000143f:	call   QWORD PTR [rip+0x6c2b]        # 0x140008070
   140001445:	mov    rcx,rdi
   140001448:	mov    sil,al
   14000144b:	call   QWORD PTR [rip+0x6c27]        # 0x140008078
   140001451:	test   BYTE PTR [rbx+0x1a],0x2
   140001455:	je     0x140001462
   140001457:	mov    rcx,QWORD PTR [rbx+0x10]
   14000145b:	test   rcx,rcx
   14000145e:	cmovne rbx,rcx
   140001462:	mov    QWORD PTR [rbx+0x10],rdi
   140001466:	mov    BYTE PTR [rbx+0x19],sil
   14000146a:	mov    DWORD PTR [rbx+0x1c],eax
   14000146d:	xor    eax,eax
   14000146f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001474:	mov    rsi,QWORD PTR [rsp+0x38]
   140001479:	add    rsp,0x20
   14000147d:	pop    rdi
   14000147e:	ret    
   14000147f:	int3   
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	mov    QWORD PTR [rsp+0x8],rbx
   140001495:	push   rdi
   140001496:	sub    rsp,0x20
   14000149a:	lea    rax,[rip+0x728f]        # 0x140008730
   1400014a1:	mov    ebx,edx
   1400014a3:	mov    QWORD PTR [rcx],rax
   1400014a6:	mov    rdi,rcx
   1400014a9:	call   0x1400023cc
   1400014ae:	test   bl,0x1
   1400014b1:	je     0x1400014bb
   1400014b3:	mov    rcx,rdi
   1400014b6:	call   0x1400066b8
   1400014bb:	mov    rax,rdi
   1400014be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014c3:	add    rsp,0x20
   1400014c7:	pop    rdi
   1400014c8:	ret    
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	mov    rax,rsp
   1400014d3:	mov    QWORD PTR [rax+0x8],rbx
   1400014d7:	mov    QWORD PTR [rax+0x10],rsi
   1400014db:	mov    QWORD PTR [rax+0x18],rdi
   1400014df:	mov    DWORD PTR [rax+0x20],r9d
   1400014e3:	push   rbp
   1400014e4:	push   r12
   1400014e6:	push   r13
   1400014e8:	push   r14
   1400014ea:	push   r15
   1400014ec:	lea    rbp,[rax-0x5f]
   1400014f0:	sub    rsp,0xa0
   1400014f7:	mov    rsi,r8
   1400014fa:	mov    r15,rdx
   1400014fd:	mov    r12,rcx
   140001500:	xor    r13d,r13d
   140001503:	lea    rax,[rip+0x767e]        # 0x140008b88
   14000150a:	lea    rbx,[rip+0xa19f]        # 0x14000b6b0
   140001511:	mov    QWORD PTR [rip+0xa1a8],r13        # 0x14000b6c0
   140001518:	mov    QWORD PTR [rip+0xa191],r13        # 0x14000b6b0
   14000151f:	lea    rdi,[rip+0xa1b2]        # 0x14000b6d8
   140001526:	mov    QWORD PTR [rip+0xa1ab],rax        # 0x14000b6d8
   14000152d:	lea    r14d,[r13+0x1]
   140001531:	mov    QWORD PTR [rip+0x9ae8],rbx        # 0x14000b020
   140001538:	mov    QWORD PTR [rip+0xa189],r14        # 0x14000b6c8
   14000153f:	mov    r8,QWORD PTR [rdi]
   140001542:	lea    rax,[rbx+0x8]
   140001546:	mov    QWORD PTR [rsp+0x38],rax
   14000154b:	lea    rcx,[rip+0xfffffffffffffeae]        # 0x140001400
   140001552:	mov    QWORD PTR [rsp+0x30],r13
   140001557:	lea    rax,[rbp+0xf]
   14000155b:	mov    QWORD PTR [rbp+0xf],r8
   14000155f:	lea    rdi,[rdi+0x8]
   140001563:	mov    QWORD PTR [rbp+0x17],r13
   140001567:	mov    r9d,r14d
   14000156a:	mov    QWORD PTR [rsp+0x28],r13
   14000156f:	mov    rdx,rbx
   140001572:	mov    QWORD PTR [rsp+0x20],rax
   140001577:	mov    QWORD PTR [rbx+0x20],r8
   14000157b:	call   QWORD PTR [rip+0x6aff]        # 0x140008080
   140001581:	mov    rbx,QWORD PTR [rbx]
   140001584:	test   rbx,rbx
   140001587:	jne    0x14000153f
   140001589:	mov    rcx,QWORD PTR [rip+0x9a90]        # 0x14000b020
   140001590:	lea    rax,[rip+0x9a89]        # 0x14000b020
   140001597:	mov    r14d,DWORD PTR [rbp+0x7f]
   14000159b:	cmp    rcx,rax
   14000159e:	je     0x1400015c9
   1400015a0:	lea    eax,[rbx+0x1]
   1400015a3:	test   BYTE PTR [rcx+0x1c],al
   1400015a6:	je     0x1400015c9
   1400015a8:	cmp    BYTE PTR [rcx+0x19],0x5
   1400015ac:	jb     0x1400015c9
   1400015ae:	mov    rcx,QWORD PTR [rcx+0x10]
   1400015b2:	mov    r9,r12
   1400015b5:	mov    DWORD PTR [rsp+0x30],r14d
   1400015ba:	mov    QWORD PTR [rsp+0x28],rsi
   1400015bf:	mov    QWORD PTR [rsp+0x20],r15
   1400015c4:	call   0x14000131c
   1400015c9:	xor    edx,edx
   1400015cb:	xor    ecx,ecx
   1400015cd:	call   QWORD PTR [rip+0x6ba5]        # 0x140008178
   1400015d3:	xor    r9d,r9d
   1400015d6:	xor    r8d,r8d
   1400015d9:	xor    ecx,ecx
   1400015db:	lea    r14d,[r9+0x1]
   1400015df:	mov    edx,r14d
   1400015e2:	call   QWORD PTR [rip+0x6b88]        # 0x140008170
   1400015e8:	mov    rdx,rsi
   1400015eb:	lea    rcx,[rbp-0x9]
   1400015ef:	mov    r15d,r13d
   1400015f2:	mov    rbx,r13
   1400015f5:	call   0x1400022ac
   1400015fa:	mov    rax,QWORD PTR [rbp-0x9]
   1400015fe:	or     rdi,0xffffffffffffffff
   140001602:	cmp    DWORD PTR [rax-0x10],r13d
   140001606:	jl     0x140001742
   14000160c:	mov    rcx,rdi
   14000160f:	inc    rcx
   140001612:	cmp    WORD PTR [rax+rcx*2],r13w
   140001617:	jne    0x14000160f
   140001619:	mov    r9d,DWORD PTR [rip+0x75a0]        # 0x140008bc0
   140001620:	mov    rdx,rax
   140001623:	mov    r10,QWORD PTR [rip+0x758e]        # 0x140008bb8
   14000162a:	movsxd rcx,ecx
   14000162d:	lea    r8,[rax+rcx*2]
   140001631:	test   rdx,rdx
   140001634:	jne    0x1400016f8
   14000163a:	mov    rdx,r13
   14000163d:	test   rdx,rdx
   140001640:	je     0x140001742
   140001646:	sub    rdx,rax
   140001649:	sar    rdx,1
   14000164c:	cmp    edx,edi
   14000164e:	je     0x140001742
   140001654:	lea    r8,[rip+0x7575]        # 0x140008bd0
   14000165b:	xor    edx,edx
   14000165d:	mov    ecx,0x100002
   140001662:	call   QWORD PTR [rip+0x6af8]        # 0x140008160
   140001668:	mov    rbx,rax
   14000166b:	mov    rcx,QWORD PTR [rip+0x99ae]        # 0x14000b020
   140001672:	lea    r12,[rip+0x99a7]        # 0x14000b020
   140001679:	cmp    rcx,r12
   14000167c:	je     0x14000169b
   14000167e:	test   BYTE PTR [rcx+0x1c],0x2
   140001682:	je     0x14000169b
   140001684:	cmp    BYTE PTR [rcx+0x19],0x4
   140001688:	jb     0x14000169b
   14000168a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000168e:	mov    edx,0xb
   140001693:	mov    r9,rax
   140001696:	call   0x1400012d8
   14000169b:	test   rbx,rbx
   14000169e:	je     0x1400016e5
   1400016a0:	mov    rcx,rbx
   1400016a3:	call   QWORD PTR [rip+0x6aa7]        # 0x140008150
   1400016a9:	mov    rcx,QWORD PTR [rip+0x9970]        # 0x14000b020
   1400016b0:	cmp    rcx,r12
   1400016b3:	je     0x1400016d9
   1400016b5:	test   BYTE PTR [rcx+0x1c],0x2
   1400016b9:	je     0x1400016d9
   1400016bb:	cmp    BYTE PTR [rcx+0x19],0x4
   1400016bf:	jb     0x1400016d9
   1400016c1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400016c5:	lea    r8,[rip+0x74ac]        # 0x140008b78
   1400016cc:	mov    edx,0xc
   1400016d1:	mov    r9d,eax
   1400016d4:	call   0x14000129c
   1400016d9:	mov    rcx,rbx
   1400016dc:	call   QWORD PTR [rip+0x6ac6]        # 0x1400081a8
   1400016e2:	mov    rbx,r13
   1400016e5:	mov    rax,QWORD PTR [rbp-0x9]
   1400016e9:	mov    r15d,r14d
   1400016ec:	jmp    0x140001749
   1400016ee:	cmp    cx,0x2f
   1400016f2:	je     0x14000170e
   1400016f4:	add    rdx,0x2
   1400016f8:	movzx  ecx,WORD PTR [rdx]
   1400016fb:	test   cx,cx
   1400016fe:	jne    0x1400016ee
   140001700:	cmp    WORD PTR [rdx],0x2f
   140001704:	mov    rcx,r13
   140001707:	cmove  rcx,rdx
   14000170b:	mov    rdx,rcx
   14000170e:	test   rdx,rdx
   140001711:	je     0x14000163a
   140001717:	mov    rcx,r8
   14000171a:	sub    rcx,rdx
   14000171d:	sar    rcx,1
   140001720:	cmp    rcx,0x6
   140001724:	jb     0x14000163a
   14000172a:	cmp    QWORD PTR [rdx],r10
   14000172d:	jne    0x140001739
   14000172f:	cmp    DWORD PTR [rdx+0x8],r9d
   140001733:	je     0x14000163d
   140001739:	add    rdx,0x2
   14000173d:	jmp    0x140001631
   140001742:	lea    r12,[rip+0x98d7]        # 0x14000b020
   140001749:	lea    r14,[rax-0x18]
   14000174d:	mov    eax,edi
   14000174f:	lock xadd DWORD PTR [r14+0x10],eax
   140001755:	add    eax,edi
   140001757:	test   eax,eax
   140001759:	jg     0x140001776
   14000175b:	mov    rsi,QWORD PTR [r14]
   14000175e:	mov    rax,QWORD PTR [rsi]
   140001761:	mov    rdi,QWORD PTR [rax+0x8]
   140001765:	mov    rcx,rdi
   140001768:	call   QWORD PTR [rip+0x6bb2]        # 0x140008320
   14000176e:	mov    rdx,r14
   140001771:	mov    rcx,rsi
   140001774:	call   rdi
   140001776:	test   rbx,rbx
   140001779:	je     0x140001784
   14000177b:	mov    rcx,rbx
   14000177e:	call   QWORD PTR [rip+0x6a24]        # 0x1400081a8
   140001784:	test   r15d,r15d
   140001787:	jne    0x140001cbf
   14000178d:	lea    rcx,[rbp+0x1f]
   140001791:	call   0x1400055ac
   140001796:	lea    rcx,[rbp+0x1f]
   14000179a:	call   0x14000575c
   14000179f:	cmp    eax,0x4
   1400017a2:	lea    esi,[r15+0x1]
   1400017a6:	lea    rcx,[rbp+0x1f]
   1400017aa:	cmove  r15d,esi
   1400017ae:	call   0x1400056a8
   1400017b3:	test   r15d,r15d
   1400017b6:	jne    0x140001cc4
   1400017bc:	call   0x140005d08
   1400017c1:	test   eax,eax
   1400017c3:	je     0x140001cc4
   1400017c9:	mov    rax,QWORD PTR [rip+0x9858]        # 0x14000b028
   1400017d0:	mov    rbx,QWORD PTR [rax+0x18]
   1400017d4:	mov    rcx,rbx
   1400017d7:	call   QWORD PTR [rip+0x6b43]        # 0x140008320
   1400017dd:	lea    rdi,[rip+0x9844]        # 0x14000b028
   1400017e4:	mov    rcx,rdi
   1400017e7:	call   rbx
   1400017e9:	add    rax,0x18
   1400017ed:	mov    QWORD PTR [rbp-0x11],rax
   1400017f1:	mov    rax,QWORD PTR [rip+0x9830]        # 0x14000b028
   1400017f8:	mov    rbx,QWORD PTR [rax+0x18]
   1400017fc:	mov    rcx,rbx
   1400017ff:	call   QWORD PTR [rip+0x6b1b]        # 0x140008320
   140001805:	mov    rcx,rdi
   140001808:	call   rbx
   14000180a:	add    rax,0x18
   14000180e:	lea    rdx,[rbp-0x1]
   140001812:	lea    rcx,[rbp-0x11]
   140001816:	mov    QWORD PTR [rbp-0x1],rax
   14000181a:	call   0x14000639c
   14000181f:	sub    eax,esi
   140001821:	neg    eax
   140001823:	mov    rax,QWORD PTR [rip+0x97fe]        # 0x14000b028
   14000182a:	sbb    r14d,r14d
   14000182d:	and    r14d,0x80004005
   140001834:	mov    rbx,QWORD PTR [rax+0x18]
   140001838:	mov    rcx,rbx
   14000183b:	call   QWORD PTR [rip+0x6adf]        # 0x140008320
   140001841:	mov    rcx,rdi
   140001844:	call   rbx
   140001846:	add    rax,0x18
   14000184a:	lea    rdx,[rbp-0x11]
   14000184e:	lea    rcx,[rbp+0x7]
   140001852:	mov    QWORD PTR [rbp-0x21],rax
   140001856:	call   0x140001d58
   14000185b:	mov    rdx,rax
   14000185e:	lea    rcx,[rbp-0x21]
   140001862:	call   0x140004fb8
   140001867:	mov    rsi,QWORD PTR [rbp+0x7]
   14000186b:	or     eax,0xffffffff
   14000186e:	lock xadd DWORD PTR [rsi-0x8],eax
   140001873:	sub    eax,0x1
   140001876:	jg     0x140001895
   140001878:	mov    rdi,QWORD PTR [rsi-0x18]
   14000187c:	mov    rax,QWORD PTR [rdi]
   14000187f:	mov    rbx,QWORD PTR [rax+0x8]
   140001883:	mov    rcx,rbx
   140001886:	call   QWORD PTR [rip+0x6a94]        # 0x140008320
   14000188c:	lea    rdx,[rsi-0x18]
   140001890:	mov    rcx,rdi
   140001893:	call   rbx
   140001895:	mov    rdi,QWORD PTR [rbp-0x21]
   140001899:	lea    r15,[rip+0x7390]        # 0x140008c30
   1400018a0:	mov    rsi,r15
   1400018a3:	mov    ecx,0x1
   1400018a8:	sub    rsi,rdi
   1400018ab:	sar    rsi,1
   1400018ae:	mov    r13d,DWORD PTR [rdi-0x10]
   1400018b2:	mov    eax,DWORD PTR [rdi-0xc]
   1400018b5:	sub    ecx,DWORD PTR [rdi-0x8]
   1400018b8:	lea    ebx,[r13+0x24]
   1400018bc:	sub    eax,ebx
   1400018be:	or     ecx,eax
   1400018c0:	jge    0x1400018d1
   1400018c2:	mov    edx,ebx
   1400018c4:	lea    rcx,[rbp-0x21]
   1400018c8:	call   0x140004e7c
   1400018cd:	mov    rdi,QWORD PTR [rbp-0x21]
   1400018d1:	cmp    rsi,r13
   1400018d4:	ja     0x1400018da
   1400018d6:	lea    r15,[rdi+rsi*2]
   1400018da:	mov    edx,0x48
   1400018df:	lea    rcx,[rdi+r13*2]
   1400018e3:	mov    r9d,edx
   1400018e6:	mov    r8,r15
   1400018e9:	call   QWORD PTR [rip+0x6a01]        # 0x1400082f0
   1400018ef:	xor    r13d,r13d
   1400018f2:	test   ebx,ebx
   1400018f4:	js     0x140001d47
   1400018fa:	cmp    ebx,DWORD PTR [rdi-0xc]
   1400018fd:	jg     0x140001d47
   140001903:	movsxd rax,ebx
   140001906:	mov    esi,r13d
   140001909:	mov    DWORD PTR [rdi-0x10],ebx
   14000190c:	mov    WORD PTR [rdi+rax*2],r13w
   140001911:	test   r14d,r14d
   140001914:	js     0x140001bec
   14000191a:	mov    r8,rdi
   14000191d:	xor    edx,edx
   14000191f:	mov    ecx,0x100002
   140001924:	call   QWORD PTR [rip+0x6836]        # 0x140008160
   14000192a:	mov    rsi,rax
   14000192d:	mov    rcx,QWORD PTR [rip+0x96ec]        # 0x14000b020
   140001934:	cmp    rcx,r12
   140001937:	je     0x140001955
   140001939:	test   BYTE PTR [rcx+0x1c],0x2
   14000193d:	je     0x140001955
   14000193f:	cmp    BYTE PTR [rcx+0x19],0x4
   140001943:	jb     0x140001955
   140001945:	mov    rcx,QWORD PTR [rcx+0x10]
   140001949:	lea    edx,[r13+0xd]
   14000194d:	mov    r9,rax
   140001950:	call   0x1400012d8
   140001955:	test   rsi,rsi
   140001958:	je     0x140001970
   14000195a:	mov    rcx,rsi
   14000195d:	call   QWORD PTR [rip+0x6845]        # 0x1400081a8
   140001963:	mov    ebx,0x80004005
   140001968:	mov    rsi,r13
   14000196b:	mov    r14d,ebx
   14000196e:	jmp    0x140001975
   140001970:	mov    ebx,0x80004005
   140001975:	test   r14d,r14d
   140001978:	js     0x140001bec
   14000197e:	call   QWORD PTR [rip+0x681c]        # 0x1400081a0
   140001984:	cmp    eax,0xb7
   140001989:	cmove  r14d,ebx
   14000198d:	test   r14d,r14d
   140001990:	js     0x140001bec
   140001996:	mov    edx,0x2
   14000199b:	xor    ecx,ecx
   14000199d:	call   QWORD PTR [rip+0xb6bd]        # 0x14000d060
   1400019a3:	mov    ebx,eax
   1400019a5:	mov    rcx,QWORD PTR [rip+0x9674]        # 0x14000b020
   1400019ac:	cmp    rcx,r12
   1400019af:	je     0x1400019d5
   1400019b1:	test   BYTE PTR [rcx+0x1c],0x2
   1400019b5:	je     0x1400019d5
   1400019b7:	cmp    BYTE PTR [rcx+0x19],0x4
   1400019bb:	jb     0x1400019d5
   1400019bd:	mov    rcx,QWORD PTR [rcx+0x10]
   1400019c1:	lea    r8,[rip+0x71b0]        # 0x140008b78
   1400019c8:	mov    edx,0xe
   1400019cd:	mov    r9d,eax
   1400019d0:	call   0x14000129c
   1400019d5:	test   ebx,ebx
   1400019d7:	js     0x140001c1f
   1400019dd:	call   0x140002014
   1400019e2:	mov    ebx,eax
   1400019e4:	mov    rcx,QWORD PTR [rip+0x9635]        # 0x14000b020
   1400019eb:	cmp    rcx,r12
   1400019ee:	je     0x140001a14
   1400019f0:	test   BYTE PTR [rcx+0x1c],0x2
   1400019f4:	je     0x140001a14
   1400019f6:	cmp    BYTE PTR [rcx+0x19],0x4
   1400019fa:	jb     0x140001a14
   1400019fc:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a00:	lea    r8,[rip+0x7171]        # 0x140008b78
   140001a07:	mov    edx,0xf
   140001a0c:	mov    r9d,eax
   140001a0f:	call   0x14000129c
   140001a14:	test   ebx,ebx
   140001a16:	js     0x140001bec
   140001a1c:	xor    edx,edx
   140001a1e:	mov    QWORD PTR [rbp-0x29],r13
   140001a22:	lea    rax,[rbp-0x29]
   140001a26:	mov    QWORD PTR [rbp-0x19],r13
   140001a2a:	lea    r9,[rip+0x6dbf]        # 0x1400087f0
   140001a31:	mov    QWORD PTR [rsp+0x20],rax
   140001a36:	lea    rcx,[rip+0x6dd3]        # 0x140008810
   140001a3d:	lea    r8d,[rdx+0x17]
   140001a41:	call   QWORD PTR [rip+0xb611]        # 0x14000d058
   140001a47:	mov    ebx,eax
   140001a49:	mov    rcx,QWORD PTR [rip+0x95d0]        # 0x14000b020
   140001a50:	cmp    rcx,r12
   140001a53:	je     0x140001a79
   140001a55:	test   BYTE PTR [rcx+0x1c],0x2
   140001a59:	je     0x140001a79
   140001a5b:	cmp    BYTE PTR [rcx+0x19],0x4
   140001a5f:	jb     0x140001a79
   140001a61:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a65:	lea    r8,[rip+0x710c]        # 0x140008b78
   140001a6c:	mov    edx,0x10
   140001a71:	mov    r9d,eax
   140001a74:	call   0x14000129c
   140001a79:	test   ebx,ebx
   140001a7b:	js     0x140001ba1
   140001a81:	mov    rbx,QWORD PTR [rbp-0x29]
   140001a85:	mov    rax,QWORD PTR [rbx]
   140001a88:	mov    r14,QWORD PTR [rax+0x50]
   140001a8c:	mov    rcx,r14
   140001a8f:	call   QWORD PTR [rip+0x688b]        # 0x140008320
   140001a95:	xor    edx,edx
   140001a97:	mov    rcx,rbx
   140001a9a:	call   r14
   140001a9d:	mov    r15d,eax
   140001aa0:	mov    rcx,QWORD PTR [rip+0x9579]        # 0x14000b020
   140001aa7:	cmp    rcx,r12
   140001aaa:	je     0x140001ad0
   140001aac:	test   BYTE PTR [rcx+0x1c],0x2
   140001ab0:	je     0x140001ad0
   140001ab2:	cmp    BYTE PTR [rcx+0x19],0x4
   140001ab6:	jb     0x140001ad0
   140001ab8:	mov    rcx,QWORD PTR [rcx+0x10]
   140001abc:	lea    r8,[rip+0x70b5]        # 0x140008b78
   140001ac3:	mov    edx,0x11
   140001ac8:	mov    r9d,eax
   140001acb:	call   0x14000129c
   140001ad0:	mov    r14,QWORD PTR [rbp-0x29]
   140001ad4:	test   r14,r14
   140001ad7:	je     0x140001af2
   140001ad9:	mov    QWORD PTR [rbp-0x29],r13
   140001add:	mov    rax,QWORD PTR [r14]
   140001ae0:	mov    rbx,QWORD PTR [rax+0x10]
   140001ae4:	mov    rcx,rbx
   140001ae7:	call   QWORD PTR [rip+0x6833]        # 0x140008320
   140001aed:	mov    rcx,r14
   140001af0:	call   rbx
   140001af2:	test   r15d,r15d
   140001af5:	js     0x140001ba1
   140001afb:	xor    edx,edx
   140001afd:	lea    rax,[rbp-0x19]
   140001b01:	lea    r9,[rip+0x6cd8]        # 0x1400087e0
   140001b08:	mov    QWORD PTR [rsp+0x20],rax
   140001b0d:	lea    rcx,[rip+0x6cec]        # 0x140008800
   140001b14:	lea    r8d,[rdx+0x1]
   140001b18:	call   QWORD PTR [rip+0xb53a]        # 0x14000d058
   140001b1e:	mov    ebx,eax
   140001b20:	mov    rcx,QWORD PTR [rip+0x94f9]        # 0x14000b020
   140001b27:	cmp    rcx,r12
   140001b2a:	je     0x140001b50
   140001b2c:	test   BYTE PTR [rcx+0x1c],0x2
   140001b30:	je     0x140001b50
   140001b32:	cmp    BYTE PTR [rcx+0x19],0x5
   140001b36:	jb     0x140001b50
   140001b38:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b3c:	lea    r8,[rip+0x7035]        # 0x140008b78
   140001b43:	mov    edx,0x12
   140001b48:	mov    r9d,eax
   140001b4b:	call   0x14000129c
   140001b50:	test   ebx,ebx
   140001b52:	js     0x140001ba1
   140001b54:	mov    rbx,QWORD PTR [rbp-0x19]
   140001b58:	mov    rax,QWORD PTR [rbx]
   140001b5b:	mov    r14,QWORD PTR [rax+0xd8]
   140001b62:	mov    rcx,r14
   140001b65:	call   QWORD PTR [rip+0x67b5]        # 0x140008320
   140001b6b:	mov    rcx,rbx
   140001b6e:	call   r14
   140001b71:	mov    rcx,QWORD PTR [rip+0x94a8]        # 0x14000b020
   140001b78:	cmp    rcx,r12
   140001b7b:	je     0x140001ba1
   140001b7d:	test   BYTE PTR [rcx+0x1c],0x2
   140001b81:	je     0x140001ba1
   140001b83:	cmp    BYTE PTR [rcx+0x19],0x5
   140001b87:	jb     0x140001ba1
   140001b89:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b8d:	lea    r8,[rip+0x6fe4]        # 0x140008b78
   140001b94:	mov    edx,0x13
   140001b99:	mov    r9d,eax
   140001b9c:	call   0x14000129c
   140001ba1:	call   0x140001eb0
   140001ba6:	mov    rbx,QWORD PTR [rbp-0x19]
   140001baa:	test   rbx,rbx
   140001bad:	je     0x140001bc5
   140001baf:	mov    rax,QWORD PTR [rbx]
   140001bb2:	mov    r14,QWORD PTR [rax+0x10]
   140001bb6:	mov    rcx,r14
   140001bb9:	call   QWORD PTR [rip+0x6761]        # 0x140008320
   140001bbf:	mov    rcx,rbx
   140001bc2:	call   r14
   140001bc5:	mov    rbx,QWORD PTR [rbp-0x29]
   140001bc9:	test   rbx,rbx
   140001bcc:	je     0x140001be4
   140001bce:	mov    rax,QWORD PTR [rbx]
   140001bd1:	mov    r14,QWORD PTR [rax+0x10]
   140001bd5:	mov    rcx,r14
   140001bd8:	call   QWORD PTR [rip+0x6742]        # 0x140008320
   140001bde:	mov    rcx,rbx
   140001be1:	call   r14
   140001be4:	xor    ecx,ecx
   140001be6:	call   QWORD PTR [rip+0xb41c]        # 0x14000d008
   140001bec:	call   QWORD PTR [rip+0xb476]        # 0x14000d068
   140001bf2:	mov    rcx,QWORD PTR [rip+0x9427]        # 0x14000b020
   140001bf9:	cmp    rcx,r12
   140001bfc:	je     0x140001c1f
   140001bfe:	test   BYTE PTR [rcx+0x1c],0x2
   140001c02:	je     0x140001c1f
   140001c04:	cmp    BYTE PTR [rcx+0x19],0x4
   140001c08:	jb     0x140001c1f
   140001c0a:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c0e:	lea    r8,[rip+0x6f63]        # 0x140008b78
   140001c15:	mov    edx,0x14
   140001c1a:	call   0x140001278
   140001c1f:	test   rsi,rsi
   140001c22:	je     0x140001c2d
   140001c24:	mov    rcx,rsi
   140001c27:	call   QWORD PTR [rip+0x657b]        # 0x1400081a8
   140001c2d:	or     r14,0xffffffffffffffff
   140001c31:	lea    rsi,[rdi-0x18]
   140001c35:	mov    eax,r14d
   140001c38:	lock xadd DWORD PTR [rsi+0x10],eax
   140001c3d:	add    eax,r14d
   140001c40:	test   eax,eax
   140001c42:	jg     0x140001c5f
   140001c44:	mov    rdi,QWORD PTR [rsi]
   140001c47:	mov    rax,QWORD PTR [rdi]
   140001c4a:	mov    rbx,QWORD PTR [rax+0x8]
   140001c4e:	mov    rcx,rbx
   140001c51:	call   QWORD PTR [rip+0x66c9]        # 0x140008320
   140001c57:	mov    rdx,rsi
   140001c5a:	mov    rcx,rdi
   140001c5d:	call   rbx
   140001c5f:	mov    rsi,QWORD PTR [rbp-0x1]
   140001c63:	mov    eax,r14d
   140001c66:	lock xadd DWORD PTR [rsi-0x8],eax
   140001c6b:	add    eax,r14d
   140001c6e:	test   eax,eax
   140001c70:	jg     0x140001c8f
   140001c72:	mov    rdi,QWORD PTR [rsi-0x18]
   140001c76:	mov    rax,QWORD PTR [rdi]
   140001c79:	mov    rbx,QWORD PTR [rax+0x8]
   140001c7d:	mov    rcx,rbx
   140001c80:	call   QWORD PTR [rip+0x669a]        # 0x140008320
   140001c86:	lea    rdx,[rsi-0x18]
   140001c8a:	mov    rcx,rdi
   140001c8d:	call   rbx
   140001c8f:	mov    rsi,QWORD PTR [rbp-0x11]
   140001c93:	mov    eax,r14d
   140001c96:	lock xadd DWORD PTR [rsi-0x8],eax
   140001c9b:	add    eax,r14d
   140001c9e:	test   eax,eax
   140001ca0:	jg     0x140001cbf
   140001ca2:	mov    rdi,QWORD PTR [rsi-0x18]
   140001ca6:	mov    rax,QWORD PTR [rdi]
   140001ca9:	mov    rbx,QWORD PTR [rax+0x8]
   140001cad:	mov    rcx,rbx
   140001cb0:	call   QWORD PTR [rip+0x666a]        # 0x140008320
   140001cb6:	lea    rdx,[rsi-0x18]
   140001cba:	mov    rcx,rdi
   140001cbd:	call   rbx
   140001cbf:	mov    esi,0x1
   140001cc4:	mov    rbx,QWORD PTR [rip+0x9355]        # 0x14000b020
   140001ccb:	cmp    rbx,r12
   140001cce:	je     0x140001d24
   140001cd0:	test   BYTE PTR [rbx+0x1c],sil
   140001cd4:	je     0x140001cfb
   140001cd6:	cmp    BYTE PTR [rbx+0x19],0x5
   140001cda:	jb     0x140001cfb
   140001cdc:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ce0:	lea    r8,[rip+0x6e91]        # 0x140008b78
   140001ce7:	mov    edx,0x15
   140001cec:	xor    r9d,r9d
   140001cef:	call   0x14000129c
   140001cf4:	mov    rbx,QWORD PTR [rip+0x9325]        # 0x14000b020
   140001cfb:	cmp    rbx,r12
   140001cfe:	je     0x140001d24
   140001d00:	jmp    0x140001d18
   140001d02:	mov    rcx,QWORD PTR [rbx+0x8]
   140001d06:	test   rcx,rcx
   140001d09:	je     0x140001d15
   140001d0b:	call   QWORD PTR [rip+0x6377]        # 0x140008088
   140001d11:	mov    QWORD PTR [rbx+0x8],r13
   140001d15:	mov    rbx,QWORD PTR [rbx]
   140001d18:	test   rbx,rbx
   140001d1b:	jne    0x140001d02
   140001d1d:	mov    QWORD PTR [rip+0x92fc],r12        # 0x14000b020
   140001d24:	lea    r11,[rsp+0xa0]
   140001d2c:	xor    eax,eax
   140001d2e:	mov    rbx,QWORD PTR [r11+0x30]
   140001d32:	mov    rsi,QWORD PTR [r11+0x38]
   140001d36:	mov    rdi,QWORD PTR [r11+0x40]
   140001d3a:	mov    rsp,r11
   140001d3d:	pop    r15
   140001d3f:	pop    r14
   140001d41:	pop    r13
   140001d43:	pop    r12
   140001d45:	pop    rbp
   140001d46:	ret    
   140001d47:	mov    ecx,0x80070057
   140001d4c:	call   0x1400051b0
   140001d51:	int3   
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	mov    rax,rsp
   140001d5b:	mov    QWORD PTR [rax+0x8],rcx
   140001d5f:	push   rdi
   140001d60:	push   r14
   140001d62:	push   r15
   140001d64:	sub    rsp,0x30
   140001d68:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140001d70:	mov    QWORD PTR [rax+0x10],rbx
   140001d74:	mov    QWORD PTR [rax+0x18],rbp
   140001d78:	mov    QWORD PTR [rax+0x20],rsi
   140001d7c:	mov    r14,rdx
   140001d7f:	mov    rsi,rcx
   140001d82:	xor    r15d,r15d
   140001d85:	mov    DWORD PTR [rax-0x28],r15d
   140001d89:	mov    rax,QWORD PTR [rdx]
   140001d8c:	mov    rdi,QWORD PTR [rax-0x18]
   140001d90:	test   rdi,rdi
   140001d93:	je     0x140001daf
   140001d95:	mov    rax,QWORD PTR [rdi]
   140001d98:	mov    rbx,QWORD PTR [rax+0x20]
   140001d9c:	mov    rcx,rbx
   140001d9f:	call   QWORD PTR [rip+0x657b]        # 0x140008320
   140001da5:	mov    rcx,rdi
   140001da8:	call   rbx
   140001daa:	mov    rdi,rax
   140001dad:	jmp    0x140001db2
   140001daf:	mov    rdi,r15
   140001db2:	test   rdi,rdi
   140001db5:	jne    0x140001dd7
   140001db7:	mov    rax,QWORD PTR [rip+0x926a]        # 0x14000b028
   140001dbe:	mov    rbx,QWORD PTR [rax+0x20]
   140001dc2:	mov    rcx,rbx
   140001dc5:	call   QWORD PTR [rip+0x6555]        # 0x140008320
   140001dcb:	lea    rcx,[rip+0x9256]        # 0x14000b028
   140001dd2:	call   rbx
   140001dd4:	mov    rdi,rax
   140001dd7:	mov    ecx,r15d
   140001dda:	test   rdi,rdi
   140001ddd:	setne  cl
   140001de0:	test   ecx,ecx
   140001de2:	jne    0x140001def
   140001de4:	mov    ecx,0x80004005
   140001de9:	call   0x1400051b0
   140001dee:	int3   
   140001def:	mov    rax,QWORD PTR [rdi]
   140001df2:	mov    rbx,QWORD PTR [rax+0x18]
   140001df6:	mov    rcx,rbx
   140001df9:	call   QWORD PTR [rip+0x6521]        # 0x140008320
   140001dff:	mov    rcx,rdi
   140001e02:	call   rbx
   140001e04:	add    rax,0x18
   140001e08:	mov    QWORD PTR [rsi],rax
   140001e0b:	mov    ecx,0x1
   140001e10:	mov    DWORD PTR [rsp+0x20],ecx
   140001e14:	mov    r14,QWORD PTR [r14]
   140001e17:	movsxd rbx,DWORD PTR [r14-0x10]
   140001e1b:	lea    ebp,[rbx+0x1]
   140001e1e:	sub    ecx,DWORD PTR [rax-0x8]
   140001e21:	mov    eax,DWORD PTR [rax-0xc]
   140001e24:	sub    eax,ebp
   140001e26:	or     ecx,eax
   140001e28:	jge    0x140001e34
   140001e2a:	mov    edx,ebp
   140001e2c:	mov    rcx,rsi
   140001e2f:	call   0x140004e7c
   140001e34:	mov    rdi,QWORD PTR [rsi]
   140001e37:	add    rbx,rbx
   140001e3a:	mov    r9,rbx
   140001e3d:	mov    r8,r14
   140001e40:	mov    rdx,rbx
   140001e43:	mov    rcx,rdi
   140001e46:	call   QWORD PTR [rip+0x64a4]        # 0x1400082f0
   140001e4c:	lea    rcx,[rbx+rdi*1]
   140001e50:	mov    edx,0x2
   140001e55:	mov    r9d,edx
   140001e58:	lea    r8,[rip+0x6dc9]        # 0x140008c28
   140001e5f:	call   QWORD PTR [rip+0x648b]        # 0x1400082f0
   140001e65:	test   ebp,ebp
   140001e67:	js     0x140001e84
   140001e69:	mov    rax,QWORD PTR [rsi]
   140001e6c:	cmp    ebp,DWORD PTR [rax-0xc]
   140001e6f:	jg     0x140001e84
   140001e71:	mov    DWORD PTR [rax-0x10],ebp
   140001e74:	movsxd rcx,ebp
   140001e77:	mov    rax,QWORD PTR [rsi]
   140001e7a:	mov    WORD PTR [rax+rcx*2],r15w
   140001e7f:	mov    rax,rsi
   140001e82:	jmp    0x140001e8f
   140001e84:	mov    ecx,0x80070057
   140001e89:	call   0x1400051b0
   140001e8e:	nop
   140001e8f:	mov    rbx,QWORD PTR [rsp+0x58]
   140001e94:	mov    rbp,QWORD PTR [rsp+0x60]
   140001e99:	mov    rsi,QWORD PTR [rsp+0x68]
   140001e9e:	add    rsp,0x30
   140001ea2:	pop    r15
   140001ea4:	pop    r14
   140001ea6:	pop    rdi
   140001ea7:	ret    
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001eb5:	mov    QWORD PTR [rsp+0x10],rbp
   140001eba:	mov    QWORD PTR [rsp+0x18],rsi
   140001ebf:	push   rdi
   140001ec0:	sub    rsp,0x20
   140001ec4:	mov    rdi,QWORD PTR [rip+0x978d]        # 0x14000b658
   140001ecb:	lea    rcx,[rdi+0x18]
   140001ecf:	call   QWORD PTR [rip+0x62eb]        # 0x1400081c0
   140001ed5:	mov    rbx,QWORD PTR [rip+0x9864]        # 0x14000b740
   140001edc:	xor    ebp,ebp
   140001ede:	test   rbx,rbx
   140001ee1:	je     0x140001f1d
   140001ee3:	cmp    DWORD PTR [rbx+0x8],ebp
   140001ee6:	jle    0x140001efb
   140001ee8:	mov    rcx,QWORD PTR [rbx]
   140001eeb:	mov    rcx,QWORD PTR [rcx]
   140001eee:	call   QWORD PTR [rip+0xb13c]        # 0x14000d030
   140001ef4:	mov    rbx,QWORD PTR [rip+0x9845]        # 0x14000b740
   140001efb:	test   rbx,rbx
   140001efe:	je     0x140001f1d
   140001f00:	mov    rcx,QWORD PTR [rbx]
   140001f03:	test   rcx,rcx
   140001f06:	je     0x140001f11
   140001f08:	call   QWORD PTR [rip+0x630a]        # 0x140008218
   140001f0e:	mov    QWORD PTR [rbx],rbp
   140001f11:	mov    rcx,rbx
   140001f14:	mov    QWORD PTR [rbx+0x8],rbp
   140001f18:	call   0x1400066b8
   140001f1d:	lea    rcx,[rdi+0x18]
   140001f21:	mov    QWORD PTR [rip+0x9818],rbp        # 0x14000b740
   140001f28:	call   QWORD PTR [rip+0x629a]        # 0x1400081c8
   140001f2e:	mov    rbx,QWORD PTR [rip+0x9803]        # 0x14000b738
   140001f35:	test   rbx,rbx
   140001f38:	je     0x140001f69
   140001f3a:	mov    rcx,QWORD PTR [rbx]
   140001f3d:	test   rcx,rcx
   140001f40:	je     0x140001f4b
   140001f42:	call   QWORD PTR [rip+0x62d0]        # 0x140008218
   140001f48:	mov    QWORD PTR [rbx],rbp
   140001f4b:	mov    rcx,QWORD PTR [rbx+0x8]
   140001f4f:	test   rcx,rcx
   140001f52:	je     0x140001f5e
   140001f54:	call   QWORD PTR [rip+0x62be]        # 0x140008218
   140001f5a:	mov    QWORD PTR [rbx+0x8],rbp
   140001f5e:	mov    rcx,rbx
   140001f61:	mov    DWORD PTR [rbx+0x10],ebp
   140001f64:	call   0x1400066b8
   140001f69:	mov    rdi,QWORD PTR [rip+0x97b8]        # 0x14000b728
   140001f70:	test   rdi,rdi
   140001f73:	je     0x140001fb3
   140001f75:	jmp    0x140001fae
   140001f77:	mov    rsi,QWORD PTR [rdi+0x20]
   140001f7b:	test   rsi,rsi
   140001f7e:	je     0x140001f95
   140001f80:	mov    rax,QWORD PTR [rsi]
   140001f83:	mov    rbx,QWORD PTR [rax+0x10]
   140001f87:	mov    rcx,rbx
   140001f8a:	call   QWORD PTR [rip+0x6390]        # 0x140008320
   140001f90:	mov    rcx,rsi
   140001f93:	call   rbx
   140001f95:	mov    rbx,QWORD PTR [rdi+0x40]
   140001f99:	mov    rcx,rbx
   140001f9c:	mov    QWORD PTR [rdi+0x20],rbp
   140001fa0:	call   QWORD PTR [rip+0x637a]        # 0x140008320
   140001fa6:	xor    ecx,ecx
   140001fa8:	call   rbx
   140001faa:	add    rdi,0x48
   140001fae:	cmp    QWORD PTR [rdi],rbp
   140001fb1:	jne    0x140001f77
   140001fb3:	mov    rdi,QWORD PTR [rip+0x9866]        # 0x14000b820
   140001fba:	mov    rax,QWORD PTR [rip+0x9867]        # 0x14000b828
   140001fc1:	jmp    0x140001fe7
   140001fc3:	mov    rbx,QWORD PTR [rdi]
   140001fc6:	test   rbx,rbx
   140001fc9:	je     0x140001fe3
   140001fcb:	mov    rbx,QWORD PTR [rbx+0x40]
   140001fcf:	mov    rcx,rbx
   140001fd2:	call   QWORD PTR [rip+0x6348]        # 0x140008320
   140001fd8:	xor    ecx,ecx
   140001fda:	call   rbx
   140001fdc:	mov    rax,QWORD PTR [rip+0x9845]        # 0x14000b828
   140001fe3:	add    rdi,0x8
   140001fe7:	cmp    rdi,rax
   140001fea:	jb     0x140001fc3
   140001fec:	lea    rcx,[rip+0x96ed]        # 0x14000b6e0
   140001ff3:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ff8:	mov    rbp,QWORD PTR [rsp+0x38]
   140001ffd:	mov    rsi,QWORD PTR [rsp+0x40]
   140002002:	add    rsp,0x20
   140002006:	pop    rdi
   140002007:	jmp    0x1400023cc
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	int3   
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	rex push rsi
   140002016:	sub    rsp,0x30
   14000201a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002023:	mov    QWORD PTR [rsp+0x40],rbx
   140002028:	and    QWORD PTR [rip+0x96f8],0x0        # 0x14000b728
   140002030:	mov    rsi,QWORD PTR [rip+0x97e9]        # 0x14000b820
   140002037:	mov    rax,QWORD PTR [rip+0x97ea]        # 0x14000b828
   14000203e:	jmp    0x140002064
   140002040:	mov    rbx,QWORD PTR [rsi]
   140002043:	test   rbx,rbx
   140002046:	je     0x140002060
   140002048:	mov    rbx,QWORD PTR [rbx+0x40]
   14000204c:	mov    rcx,rbx
   14000204f:	call   QWORD PTR [rip+0x62cb]        # 0x140008320
   140002055:	mov    cl,0x1
   140002057:	call   rbx
   140002059:	mov    rax,QWORD PTR [rip+0x97c8]        # 0x14000b828
   140002060:	add    rsi,0x8
   140002064:	cmp    rsi,rax
   140002067:	jb     0x140002040
   140002069:	call   QWORD PTR [rip+0x60d9]        # 0x140008148
   14000206f:	mov    DWORD PTR [rip+0x96bb],eax        # 0x14000b730
   140002075:	and    QWORD PTR [rip+0x96bb],0x0        # 0x14000b738
   14000207d:	mov    ecx,0x18
   140002082:	call   0x1400066d0
   140002087:	test   rax,rax
   14000208a:	je     0x140002099
   14000208c:	and    QWORD PTR [rax],0x0
   140002090:	and    QWORD PTR [rax+0x8],0x0
   140002095:	and    DWORD PTR [rax+0x10],0x0
   140002099:	mov    QWORD PTR [rip+0x9698],rax        # 0x14000b738
   1400020a0:	jmp    0x1400020a9
   1400020a2:	mov    rax,QWORD PTR [rip+0x968f]        # 0x14000b738
   1400020a9:	test   rax,rax
   1400020ac:	jne    0x1400020b5
   1400020ae:	mov    eax,0x8007000e
   1400020b3:	jmp    0x1400020bf
   1400020b5:	and    QWORD PTR [rip+0x9683],0x0        # 0x14000b740
   1400020bd:	xor    eax,eax
   1400020bf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400020c4:	add    rsp,0x30
   1400020c8:	pop    rsi
   1400020c9:	ret    
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400020da:	mov    QWORD PTR [rsp+0x18],rsi
   1400020df:	push   rdi
   1400020e0:	sub    rsp,0x20
   1400020e4:	mov    edi,r8d
   1400020e7:	mov    rsi,rdx
   1400020ea:	mov    rbp,rcx
   1400020ed:	call   QWORD PTR [rip+0x609d]        # 0x140008190
   1400020f3:	test   rax,rax
   1400020f6:	jne    0x1400020fc
   1400020f8:	xor    eax,eax
   1400020fa:	jmp    0x140002149
   1400020fc:	mov    rcx,rax
   1400020ff:	call   QWORD PTR [rip+0x6063]        # 0x140008168
   140002105:	mov    rbx,rax
   140002108:	test   rax,rax
   14000210b:	je     0x1400020f8
   14000210d:	mov    rdx,rsi
   140002110:	mov    rcx,rbp
   140002113:	call   QWORD PTR [rip+0x60e7]        # 0x140008200
   140002119:	mov    ecx,eax
   14000211b:	add    rcx,rbx
   14000211e:	and    edi,0xf
   140002121:	jbe    0x140002138
   140002123:	cmp    rbx,rcx
   140002126:	jae    0x1400020f8
   140002128:	movzx  eax,WORD PTR [rbx]
   14000212b:	lea    rbx,[rbx+rax*2]
   14000212f:	add    rbx,0x2
   140002133:	add    edi,0xffffffff
   140002136:	jne    0x140002123
   140002138:	cmp    rbx,rcx
   14000213b:	jae    0x1400020f8
   14000213d:	movzx  eax,WORD PTR [rbx]
   140002140:	neg    ax
   140002143:	sbb    rax,rax
   140002146:	and    rax,rbx
   140002149:	mov    rbx,QWORD PTR [rsp+0x30]
   14000214e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002153:	mov    rsi,QWORD PTR [rsp+0x40]
   140002158:	add    rsp,0x20
   14000215c:	pop    rdi
   14000215d:	ret    
   14000215e:	int3   
   14000215f:	int3   
   140002160:	int3   
   140002161:	int3   
   140002162:	int3   
   140002163:	int3   
   140002164:	mov    rax,rsp
   140002167:	mov    QWORD PTR [rax+0x8],rbx
   14000216b:	mov    QWORD PTR [rax+0x10],rbp
   14000216f:	mov    QWORD PTR [rax+0x18],rsi
   140002173:	mov    QWORD PTR [rax+0x20],rdi
   140002177:	push   r14
   140002179:	sub    rsp,0x20
   14000217d:	xor    r9d,r9d
   140002180:	mov    eax,r8d
   140002183:	mov    rdi,rdx
   140002186:	shr    eax,0x4
   140002189:	mov    ebx,r8d
   14000218c:	mov    rsi,rcx
   14000218f:	mov    rcx,rdi
   140002192:	lea    r14d,[r9+0x1]
   140002196:	add    ax,r14w
   14000219a:	lea    edx,[r9+0x6]
   14000219e:	movzx  r8d,ax
   1400021a2:	call   QWORD PTR [rip+0x5fe0]        # 0x140008188
   1400021a8:	xor    ebp,ebp
   1400021aa:	test   rax,rax
   1400021ad:	je     0x14000225a
   1400021b3:	mov    r8d,ebx
   1400021b6:	mov    rdx,rax
   1400021b9:	mov    rcx,rdi
   1400021bc:	call   0x1400020d0
   1400021c1:	mov    rdi,rax
   1400021c4:	test   rax,rax
   1400021c7:	je     0x14000225a
   1400021cd:	movzx  ebx,WORD PTR [rax]
   1400021d0:	mov    ecx,r14d
   1400021d3:	mov    rax,QWORD PTR [rsi]
   1400021d6:	sub    ecx,DWORD PTR [rax-0x8]
   1400021d9:	mov    eax,DWORD PTR [rax-0xc]
   1400021dc:	sub    eax,ebx
   1400021de:	or     ecx,eax
   1400021e0:	jge    0x1400021ec
   1400021e2:	mov    edx,ebx
   1400021e4:	mov    rcx,rsi
   1400021e7:	call   0x140004e7c
   1400021ec:	movzx  ecx,WORD PTR [rdi]
   1400021ef:	lea    r8,[rdi+0x2]
   1400021f3:	or     rax,0xffffffffffffffff
   1400021f7:	cmp    ecx,eax
   1400021f9:	jne    0x140002211
   1400021fb:	test   r8,r8
   1400021fe:	jne    0x140002204
   140002200:	mov    eax,ebp
   140002202:	jmp    0x14000220e
   140002204:	inc    rax
   140002207:	cmp    WORD PTR [r8+rax*2],bp
   14000220c:	jne    0x140002204
   14000220e:	lea    ecx,[rax+0x1]
   140002211:	movsxd r9,ecx
   140002214:	lea    rdi,[rbx+rbx*1]
   140002218:	mov    rcx,QWORD PTR [rsi]
   14000221b:	add    r9,r9
   14000221e:	mov    rdx,rdi
   140002221:	call   QWORD PTR [rip+0x60c9]        # 0x1400082f0
   140002227:	test   eax,eax
   140002229:	je     0x14000223f
   14000222b:	cmp    eax,0xc
   14000222e:	je     0x14000228d
   140002230:	cmp    eax,0x16
   140002233:	je     0x140002282
   140002235:	cmp    eax,0x22
   140002238:	je     0x140002282
   14000223a:	cmp    eax,0x50
   14000223d:	jne    0x140002277
   14000223f:	test   ebx,ebx
   140002241:	js     0x140002298
   140002243:	mov    rcx,QWORD PTR [rsi]
   140002246:	cmp    ebx,DWORD PTR [rcx-0xc]
   140002249:	jg     0x140002298
   14000224b:	mov    DWORD PTR [rcx-0x10],ebx
   14000224e:	mov    eax,r14d
   140002251:	mov    rcx,QWORD PTR [rsi]
   140002254:	mov    WORD PTR [rdi+rcx*1],bp
   140002258:	jmp    0x14000225c
   14000225a:	xor    eax,eax
   14000225c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002261:	mov    rbp,QWORD PTR [rsp+0x38]
   140002266:	mov    rsi,QWORD PTR [rsp+0x40]
   14000226b:	mov    rdi,QWORD PTR [rsp+0x48]
   140002270:	add    rsp,0x20
   140002274:	pop    r14
   140002276:	ret    
   140002277:	mov    ecx,0x80004005
   14000227c:	call   0x1400051b0
   140002281:	int3   
   140002282:	mov    ecx,0x80070057
   140002287:	call   0x1400051b0
   14000228c:	int3   
   14000228d:	mov    ecx,0x8007000e
   140002292:	call   0x1400051b0
   140002297:	int3   
   140002298:	mov    ecx,0x80070057
   14000229d:	call   0x1400051b0
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	int3   
   1400022a5:	int3   
   1400022a6:	int3   
   1400022a7:	int3   
   1400022a8:	int3   
   1400022a9:	int3   
   1400022aa:	int3   
   1400022ab:	int3   
   1400022ac:	mov    rax,rsp
   1400022af:	mov    QWORD PTR [rax+0x8],rcx
   1400022b3:	push   rsi
   1400022b4:	push   rdi
   1400022b5:	push   r12
   1400022b7:	push   r14
   1400022b9:	push   r15
   1400022bb:	sub    rsp,0x30
   1400022bf:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400022c7:	mov    QWORD PTR [rax+0x10],rbx
   1400022cb:	mov    QWORD PTR [rax+0x18],rbp
   1400022cf:	mov    rdi,rdx
   1400022d2:	mov    rsi,rcx
   1400022d5:	mov    rax,QWORD PTR [rip+0x8d4c]        # 0x14000b028
   1400022dc:	mov    rbx,QWORD PTR [rax+0x18]
   1400022e0:	mov    rcx,rbx
   1400022e3:	call   QWORD PTR [rip+0x6037]        # 0x140008320
   1400022e9:	lea    rcx,[rip+0x8d38]        # 0x14000b028
   1400022f0:	call   rbx
   1400022f2:	add    rax,0x18
   1400022f6:	mov    QWORD PTR [rsi],rax
   1400022f9:	xor    r15d,r15d
   1400022fc:	test   rdi,rdi
   1400022ff:	je     0x140002398
   140002305:	test   rdi,0xffffffffffff0000
   14000230c:	jne    0x140002388
   14000230e:	movzx  ebp,di
   140002311:	xor    edx,edx
   140002313:	call   0x1400054b0
   140002318:	mov    rbx,rax
   14000231b:	lea    r12d,[r15+0x1]
   14000231f:	mov    edi,r12d
   140002322:	test   rax,rax
   140002325:	je     0x140002370
   140002327:	mov    r14d,ebp
   14000232a:	shr    r14d,0x4
   14000232e:	xor    r9d,r9d
   140002331:	lea    eax,[r12+r14*1]
   140002335:	movzx  r8d,ax
   140002339:	lea    edx,[r9+0x6]
   14000233d:	mov    rcx,rbx
   140002340:	call   QWORD PTR [rip+0x5e42]        # 0x140008188
   140002346:	test   rax,rax
   140002349:	je     0x14000235e
   14000234b:	mov    r8d,ebp
   14000234e:	mov    rdx,rax
   140002351:	mov    rcx,rbx
   140002354:	call   0x1400020d0
   140002359:	test   rax,rax
   14000235c:	jne    0x140002373
   14000235e:	mov    edx,edi
   140002360:	call   0x1400054b0
   140002365:	mov    rbx,rax
   140002368:	add    edi,r12d
   14000236b:	test   rax,rax
   14000236e:	jne    0x14000232e
   140002370:	mov    rbx,r15
   140002373:	test   rbx,rbx
   140002376:	je     0x1400023aa
   140002378:	mov    r8d,ebp
   14000237b:	mov    rdx,rbx
   14000237e:	mov    rcx,rsi
   140002381:	call   0x140002164
   140002386:	jmp    0x1400023aa
   140002388:	or     rax,0xffffffffffffffff
   14000238c:	inc    rax
   14000238f:	cmp    WORD PTR [rdi+rax*2],r15w
   140002394:	jne    0x14000238c
   140002396:	jmp    0x14000239b
   140002398:	mov    eax,r15d
   14000239b:	mov    r8d,eax
   14000239e:	mov    rdx,rdi
   1400023a1:	mov    rcx,rsi
   1400023a4:	call   0x140004ee0
   1400023a9:	nop
   1400023aa:	mov    rax,rsi
   1400023ad:	mov    rbx,QWORD PTR [rsp+0x68]
   1400023b2:	mov    rbp,QWORD PTR [rsp+0x70]
   1400023b7:	add    rsp,0x30
   1400023bb:	pop    r15
   1400023bd:	pop    r14
   1400023bf:	pop    r12
   1400023c1:	pop    rdi
   1400023c2:	pop    rsi
   1400023c3:	ret    
   1400023c4:	int3   
   1400023c5:	int3   
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400023d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400023d6:	mov    QWORD PTR [rsp+0x18],rdi
   1400023db:	push   r14
   1400023dd:	sub    rsp,0x20
   1400023e1:	lea    rsi,[rcx+0x8]
   1400023e5:	mov    rdi,rcx
   1400023e8:	cmp    DWORD PTR [rsi],0x0
   1400023eb:	je     0x14000245d
   1400023ed:	cmp    QWORD PTR [rcx+0x10],0x0
   1400023f2:	je     0x140002432
   1400023f4:	test   rsi,rsi
   1400023f7:	je     0x140002473
   1400023f9:	mov    r14,QWORD PTR [rsi+0x8]
   1400023fd:	test   r14,r14
   140002400:	je     0x140002428
   140002402:	mov    rbx,QWORD PTR [r14]
   140002405:	mov    rcx,rbx
   140002408:	call   QWORD PTR [rip+0x5f12]        # 0x140008320
   14000240e:	mov    rcx,QWORD PTR [r14+0x8]
   140002412:	call   rbx
   140002414:	mov    rbx,QWORD PTR [r14+0x10]
   140002418:	mov    rcx,r14
   14000241b:	call   0x1400066b8
   140002420:	mov    r14,rbx
   140002423:	test   rbx,rbx
   140002426:	jne    0x140002402
   140002428:	and    QWORD PTR [rsi+0x8],0x0
   14000242d:	and    QWORD PTR [rdi+0x10],0x0
   140002432:	mov    r14,QWORD PTR [rdi+0x40]
   140002436:	test   r14,r14
   140002439:	je     0x140002450
   14000243b:	mov    rax,QWORD PTR [r14]
   14000243e:	mov    rbx,QWORD PTR [rax+0x10]
   140002442:	mov    rcx,rbx
   140002445:	call   QWORD PTR [rip+0x5ed5]        # 0x140008320
   14000244b:	mov    rcx,r14
   14000244e:	call   rbx
   140002450:	lea    rcx,[rdi+0x18]
   140002454:	call   QWORD PTR [rip+0x5d5e]        # 0x1400081b8
   14000245a:	and    DWORD PTR [rsi],0x0
   14000245d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002462:	mov    rsi,QWORD PTR [rsp+0x38]
   140002467:	mov    rdi,QWORD PTR [rsp+0x40]
   14000246c:	add    rsp,0x20
   140002470:	pop    r14
   140002472:	ret    
   140002473:	mov    ecx,0xc0000005
   140002478:	call   0x140005198
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	int3   
   140002481:	int3   
   140002482:	int3   
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    eax,0x1
   140002495:	lock xadd DWORD PTR [rcx+0xc],eax
   14000249a:	inc    eax
   14000249c:	ret    
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	int3   
   1400024a1:	int3   
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	int3   
   1400024a5:	int3   
   1400024a6:	int3   
   1400024a7:	int3   
   1400024a8:	int3   
   1400024a9:	int3   
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	int3   
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	or     eax,0xffffffff
   1400024b3:	lock xadd DWORD PTR [rcx+0xc],eax
   1400024b8:	dec    eax
   1400024ba:	ret    
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	int3   
   1400024c1:	int3   
   1400024c2:	int3   
   1400024c3:	int3   
   1400024c4:	int3   
   1400024c5:	int3   
   1400024c6:	int3   
   1400024c7:	int3   
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    eax,DWORD PTR [rcx+0xc]
   1400024d3:	ret    
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400024ea:	push   rdi
   1400024eb:	sub    rsp,0x30
   1400024ef:	mov    rbx,rdx
   1400024f2:	test   rdx,rdx
   1400024f5:	jne    0x1400024fe
   1400024f7:	mov    eax,0x80004003
   1400024fc:	jmp    0x14000254e
   1400024fe:	xor    esi,esi
   140002500:	lea    rdi,[rcx+0x40]
   140002504:	cmp    QWORD PTR [rdi],rsi
   140002507:	jne    0x14000252e
   140002509:	lea    r9,[rip+0x6310]        # 0x140008820
   140002510:	mov    QWORD PTR [rsp+0x20],rdi
   140002515:	xor    edx,edx
   140002517:	lea    r8d,[rsi+0x1]
   14000251b:	lea    rcx,[rip+0x6166]        # 0x140008688
   140002522:	call   QWORD PTR [rip+0xab30]        # 0x14000d058
   140002528:	mov    esi,eax
   14000252a:	test   eax,eax
   14000252c:	js     0x14000254c
   14000252e:	mov    rcx,QWORD PTR [rdi]
   140002531:	mov    QWORD PTR [rbx],rcx
   140002534:	mov    rdi,QWORD PTR [rdi]
   140002537:	mov    rdx,QWORD PTR [rdi]
   14000253a:	mov    rbx,QWORD PTR [rdx+0x8]
   14000253e:	mov    rcx,rbx
   140002541:	call   QWORD PTR [rip+0x5dd9]        # 0x140008320
   140002547:	mov    rcx,rdi
   14000254a:	call   rbx
   14000254c:	mov    eax,esi
   14000254e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002553:	mov    rsi,QWORD PTR [rsp+0x48]
   140002558:	add    rsp,0x30
   14000255c:	pop    rdi
   14000255d:	ret    
   14000255e:	int3   
   14000255f:	int3   
   140002560:	int3   
   140002561:	int3   
   140002562:	int3   
   140002563:	int3   
   140002564:	int3   
   140002565:	int3   
   140002566:	int3   
   140002567:	int3   
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	mov    QWORD PTR [rsp+0x8],rbx
   140002575:	push   rdi
   140002576:	sub    rsp,0x20
   14000257a:	mov    rax,QWORD PTR [rdx]
   14000257d:	mov    rdi,rdx
   140002580:	mov    rbx,QWORD PTR [rax+0x18]
   140002584:	mov    rcx,rbx
   140002587:	call   QWORD PTR [rip+0x5d93]        # 0x140008320
   14000258d:	lea    r8,[rip+0x629c]        # 0x140008830
   140002594:	mov    rcx,rdi
   140002597:	lea    rdx,[rip+0x629a]        # 0x140008838
   14000259e:	mov    rax,rbx
   1400025a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025a6:	add    rsp,0x20
   1400025aa:	pop    rdi
   1400025ab:	rex.W jmp rax
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	int3   
   1400025b1:	int3   
   1400025b2:	int3   
   1400025b3:	int3   
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    eax,0x80004005
   1400025c5:	ret    
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400025d1:	push   rbp
   1400025d2:	push   rsi
   1400025d3:	push   rdi
   1400025d4:	push   r14
   1400025d6:	push   r15
   1400025d8:	lea    rbp,[rsp-0x9d0]
   1400025e0:	sub    rsp,0xad0
   1400025e7:	mov    rax,QWORD PTR [rip+0x8a22]        # 0x14000b010
   1400025ee:	xor    rax,rsp
   1400025f1:	mov    QWORD PTR [rbp+0x9c0],rax
   1400025f8:	xor    r14d,r14d
   1400025fb:	mov    edi,edx
   1400025fd:	mov    esi,r8d
   140002600:	mov    QWORD PTR [rsp+0x38],r14
   140002605:	lea    rax,[rip+0x60f4]        # 0x140008700
   14000260c:	mov    QWORD PTR [rsp+0x40],r14
   140002611:	xor    edx,edx
   140002613:	mov    QWORD PTR [rsp+0x30],rax
   140002618:	lea    r8d,[r14+0x28]
   14000261c:	mov    DWORD PTR [rsp+0x48],r14d
   140002621:	lea    rcx,[rsp+0x50]
   140002626:	mov    rbx,r9
   140002629:	call   0x140006f22
   14000262e:	lea    rcx,[rsp+0x50]
   140002633:	mov    BYTE PTR [rsp+0x78],r14b
   140002638:	call   0x140002b5c
   14000263d:	test   eax,eax
   14000263f:	js     0x1400026bd
   140002641:	mov    BYTE PTR [rsp+0x78],0x1
   140002646:	test   rbx,rbx
   140002649:	je     0x14000266a
   14000264b:	jmp    0x140002662
   14000264d:	mov    r8,QWORD PTR [rbx+0x8]
   140002651:	lea    rcx,[rsp+0x30]
   140002656:	mov    rdx,rax
   140002659:	call   0x140002e20
   14000265e:	lea    rbx,[rbx+0x10]
   140002662:	mov    rax,QWORD PTR [rbx]
   140002665:	test   rax,rax
   140002668:	jne    0x14000264d
   14000266a:	mov    rax,QWORD PTR [rsp+0x30]
   14000266f:	mov    rbx,QWORD PTR [rax+0x18]
   140002673:	mov    rcx,rbx
   140002676:	call   QWORD PTR [rip+0x5ca4]        # 0x140008320
   14000267c:	lea    r8,[rip+0x61ad]        # 0x140008830
   140002683:	lea    rdx,[rip+0x61ae]        # 0x140008838
   14000268a:	lea    rcx,[rsp+0x30]
   14000268f:	call   rbx
   140002691:	mov    ebx,eax
   140002693:	test   eax,eax
   140002695:	js     0x1400026bf
   140002697:	mov    rbx,QWORD PTR [rip+0x90ca]        # 0x14000b768
   14000269e:	lea    rdx,[rbp-0x80]
   1400026a2:	mov    r15d,0x104
   1400026a8:	mov    rcx,rbx
   1400026ab:	mov    r8d,r15d
   1400026ae:	call   QWORD PTR [rip+0x5acc]        # 0x140008180
   1400026b4:	test   eax,eax
   1400026b6:	jne    0x1400026f1
   1400026b8:	call   0x140005060
   1400026bd:	mov    ebx,eax
   1400026bf:	lea    rcx,[rsp+0x30]
   1400026c4:	call   0x140002ab4
   1400026c9:	mov    eax,ebx
   1400026cb:	mov    rcx,QWORD PTR [rbp+0x9c0]
   1400026d2:	xor    rcx,rsp
   1400026d5:	call   0x140006b00
   1400026da:	mov    rbx,QWORD PTR [rsp+0xb00]
   1400026e2:	add    rsp,0xad0
   1400026e9:	pop    r15
   1400026eb:	pop    r14
   1400026ed:	pop    rdi
   1400026ee:	pop    rsi
   1400026ef:	pop    rbp
   1400026f0:	ret    
   1400026f1:	cmp    eax,r15d
   1400026f4:	jne    0x1400026fd
   1400026f6:	mov    ebx,0x8007007a
   1400026fb:	jmp    0x1400026bf
   1400026fd:	lea    rdx,[rbp-0x80]
   140002701:	mov    ecx,r14d
   140002704:	mov    r9d,0x27
   14000270a:	movzx  r8d,WORD PTR [rdx]
   14000270e:	test   r8w,r8w
   140002712:	je     0x140002746
   140002714:	mov    eax,ecx
   140002716:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   14000271f:	cmp    r8w,r9w
   140002723:	jne    0x140002738
   140002725:	cmp    ecx,0x206
   14000272b:	jae    0x140002738
   14000272d:	inc    ecx
   14000272f:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140002738:	add    rdx,0x2
   14000273c:	inc    ecx
   14000273e:	cmp    ecx,0x207
   140002744:	jb     0x14000270a
   140002746:	mov    eax,ecx
   140002748:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140002751:	test   rbx,rbx
   140002754:	je     0x14000276f
   140002756:	xor    ecx,ecx
   140002758:	call   QWORD PTR [rip+0x5a8a]        # 0x1400081e8
   14000275e:	cmp    rbx,rax
   140002761:	je     0x14000276f
   140002763:	lea    r8,[rbp+0x190]
   14000276a:	jmp    0x140002801
   14000276f:	mov    r15d,0x22
   140002775:	lea    rcx,[rbp+0x190]
   14000277c:	or     rbx,0xffffffffffffffff
   140002780:	mov    WORD PTR [rbp+0x5a0],r15w
   140002788:	mov    rax,rbx
   14000278b:	inc    rax
   14000278e:	cmp    WORD PTR [rcx+rax*2],r14w
   140002793:	jne    0x14000278b
   140002795:	inc    eax
   140002797:	lea    r8,[rbp+0x190]
   14000279e:	movsxd r9,eax
   1400027a1:	lea    rcx,[rbp+0x5a2]
   1400027a8:	add    r9,r9
   1400027ab:	mov    edx,0x416
   1400027b0:	call   QWORD PTR [rip+0x5b3a]        # 0x1400082f0
   1400027b6:	test   eax,eax
   1400027b8:	je     0x1400027c4
   1400027ba:	mov    ebx,0x80004005
   1400027bf:	jmp    0x1400026bf
   1400027c4:	lea    rax,[rbp+0x5a0]
   1400027cb:	inc    rbx
   1400027ce:	cmp    WORD PTR [rax+rbx*2],r14w
   1400027d3:	jne    0x1400027cb
   1400027d5:	movsxd rax,ebx
   1400027d8:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   1400027e1:	lea    rax,[rax*2+0x2]
   1400027e9:	cmp    rax,0x418
   1400027ef:	jae    0x14000286b
   1400027f1:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   1400027fa:	lea    r8,[rbp+0x5a0]
   140002801:	lea    rdx,[rip+0x6040]        # 0x140008848
   140002808:	lea    rcx,[rsp+0x30]
   14000280d:	call   0x140002e20
   140002812:	test   eax,eax
   140002814:	js     0x1400026bd
   14000281a:	lea    r8,[rbp+0x190]
   140002821:	lea    rdx,[rip+0x6030]        # 0x140008858
   140002828:	lea    rcx,[rsp+0x30]
   14000282d:	call   0x140002e20
   140002832:	test   eax,eax
   140002834:	js     0x1400026bd
   14000283a:	movzx  r8d,di
   14000283e:	lea    r9,[rip+0x602b]        # 0x140008870
   140002845:	lea    rdx,[rbp-0x80]
   140002849:	lea    rcx,[rsp+0x30]
   14000284e:	test   esi,esi
   140002850:	je     0x14000285c
   140002852:	mov    DWORD PTR [rsp+0x20],0x1
   14000285a:	jmp    0x140002861
   14000285c:	mov    DWORD PTR [rsp+0x20],r14d
   140002861:	call   0x140004754
   140002866:	jmp    0x1400026bd
   14000286b:	call   0x140006e18
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	jmp    0x1400025cc
   140002885:	int3   
   140002886:	int3   
   140002887:	int3   
   140002888:	int3   
   140002889:	int3   
   14000288a:	int3   
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	test   r8,r8
   140002893:	je     0x140002899
   140002895:	and    QWORD PTR [r8],0x0
   140002899:	mov    eax,0x80004001
   14000289e:	ret    
   14000289f:	int3   
   1400028a0:	int3   
   1400028a1:	int3   
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	int3   
   1400028a5:	int3   
   1400028a6:	int3   
   1400028a7:	int3   
   1400028a8:	int3   
   1400028a9:	int3   
   1400028aa:	int3   
   1400028ab:	int3   
   1400028ac:	int3   
   1400028ad:	int3   
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	mov    eax,0x1
   1400028b5:	ret    
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	int3   
   1400028b9:	int3   
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	xor    eax,eax
   1400028c2:	ret    
   1400028c3:	int3   
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028d5:	push   rdi
   1400028d6:	sub    rsp,0x20
   1400028da:	mov    ebx,edx
   1400028dc:	mov    rdi,rcx
   1400028df:	call   0x140002ab4
   1400028e4:	test   bl,0x1
   1400028e7:	je     0x1400028f1
   1400028e9:	mov    rcx,rdi
   1400028ec:	call   0x1400066b8
   1400028f1:	mov    rax,rdi
   1400028f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f9:	add    rsp,0x20
   1400028fd:	pop    rdi
   1400028fe:	ret    
   1400028ff:	int3   
   140002900:	int3   
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	rex push rbx
   14000290a:	sub    rsp,0x20
   14000290e:	mov    rbx,rcx
   140002911:	mov    rcx,QWORD PTR [rcx]
   140002914:	test   rcx,rcx
   140002917:	je     0x140002923
   140002919:	call   QWORD PTR [rip+0x58f9]        # 0x140008218
   14000291f:	and    QWORD PTR [rbx],0x0
   140002923:	mov    rcx,QWORD PTR [rbx+0x8]
   140002927:	test   rcx,rcx
   14000292a:	je     0x140002937
   14000292c:	call   QWORD PTR [rip+0x58e6]        # 0x140008218
   140002932:	and    QWORD PTR [rbx+0x8],0x0
   140002937:	and    DWORD PTR [rbx+0x10],0x0
   14000293b:	add    rsp,0x20
   14000293f:	pop    rbx
   140002940:	ret    
   140002941:	int3   
   140002942:	int3   
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	mov    QWORD PTR [rsp+0x8],rcx
   14000294d:	push   rbx
   14000294e:	sub    rsp,0x30
   140002952:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000295b:	mov    rbx,rcx
   14000295e:	call   0x1400029bc
   140002963:	nop
   140002964:	mov    rcx,QWORD PTR [rbx]
   140002967:	test   rcx,rcx
   14000296a:	je     0x140002976
   14000296c:	call   QWORD PTR [rip+0x58a6]        # 0x140008218
   140002972:	and    QWORD PTR [rbx],0x0
   140002976:	mov    rcx,QWORD PTR [rbx+0x8]
   14000297a:	test   rcx,rcx
   14000297d:	je     0x14000298a
   14000297f:	call   QWORD PTR [rip+0x5893]        # 0x140008218
   140002985:	and    QWORD PTR [rbx+0x8],0x0
   14000298a:	and    DWORD PTR [rbx+0x10],0x0
   14000298e:	add    rsp,0x30
   140002992:	pop    rbx
   140002993:	ret    
   140002994:	int3   
   140002995:	int3   
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	sub    rsp,0x28
   1400029a0:	cmp    BYTE PTR [rcx+0x28],0x0
   1400029a4:	je     0x1400029b0
   1400029a6:	mov    BYTE PTR [rcx+0x28],0x0
   1400029aa:	call   QWORD PTR [rip+0x5808]        # 0x1400081b8
   1400029b0:	add    rsp,0x28
   1400029b4:	ret    
   1400029b5:	int3   
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400029c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400029c6:	push   rdi
   1400029c7:	sub    rsp,0x20
   1400029cb:	xor    esi,esi
   1400029cd:	mov    rbx,rcx
   1400029d0:	cmp    DWORD PTR [rcx+0x10],esi
   1400029d3:	jle    0x140002a0a
   1400029d5:	xor    edi,edi
   1400029d7:	test   rdi,rdi
   1400029da:	js     0x140002a51
   1400029dc:	cmp    esi,DWORD PTR [rbx+0x10]
   1400029df:	jge    0x140002a51
   1400029e1:	mov    rcx,QWORD PTR [rbx]
   1400029e4:	mov    rcx,QWORD PTR [rdi+rcx*1]
   1400029e8:	call   0x1400066c4
   1400029ed:	cmp    esi,DWORD PTR [rbx+0x10]
   1400029f0:	jge    0x140002a46
   1400029f2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400029f6:	mov    rcx,QWORD PTR [rcx+rdi*1]
   1400029fa:	call   0x1400066c4
   1400029ff:	inc    esi
   140002a01:	add    rdi,0x8
   140002a05:	cmp    esi,DWORD PTR [rbx+0x10]
   140002a08:	jl     0x1400029d7
   140002a0a:	mov    rcx,QWORD PTR [rbx]
   140002a0d:	test   rcx,rcx
   140002a10:	je     0x140002a1c
   140002a12:	call   QWORD PTR [rip+0x5800]        # 0x140008218
   140002a18:	and    QWORD PTR [rbx],0x0
   140002a1c:	mov    rcx,QWORD PTR [rbx+0x8]
   140002a20:	test   rcx,rcx
   140002a23:	je     0x140002a30
   140002a25:	call   QWORD PTR [rip+0x57ed]        # 0x140008218
   140002a2b:	and    QWORD PTR [rbx+0x8],0x0
   140002a30:	and    DWORD PTR [rbx+0x10],0x0
   140002a34:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a39:	xor    eax,eax
   140002a3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002a40:	add    rsp,0x20
   140002a44:	pop    rdi
   140002a45:	ret    
   140002a46:	mov    ecx,0xc000008c
   140002a4b:	call   0x140005198
   140002a50:	int3   
   140002a51:	mov    ecx,0xc000008c
   140002a56:	call   0x140005198
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	int3   
   140002a61:	int3   
   140002a62:	int3   
   140002a63:	int3   
   140002a64:	int3   
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	mov    QWORD PTR [rsp+0x8],rbx
   140002a75:	push   rdi
   140002a76:	sub    rsp,0x20
   140002a7a:	lea    rdi,[rcx+0x20]
   140002a7e:	mov    rbx,rcx
   140002a81:	mov    rcx,rdi
   140002a84:	call   QWORD PTR [rip+0x5736]        # 0x1400081c0
   140002a8a:	lea    rcx,[rbx+0x8]
   140002a8e:	call   0x1400029bc
   140002a93:	mov    rcx,rdi
   140002a96:	mov    ebx,eax
   140002a98:	call   QWORD PTR [rip+0x572a]        # 0x1400081c8
   140002a9e:	mov    eax,ebx
   140002aa0:	mov    rbx,QWORD PTR [rsp+0x30]
   140002aa5:	add    rsp,0x20
   140002aa9:	pop    rdi
   140002aaa:	ret    
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	int3   
   140002ab1:	int3   
   140002ab2:	int3   
   140002ab3:	int3   
   140002ab4:	mov    QWORD PTR [rsp+0x8],rcx
   140002ab9:	push   rdi
   140002aba:	sub    rsp,0x30
   140002abe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002ac7:	mov    QWORD PTR [rsp+0x48],rbx
   140002acc:	mov    rbx,rcx
   140002acf:	lea    rax,[rip+0x5c2a]        # 0x140008700
   140002ad6:	mov    QWORD PTR [rcx],rax
   140002ad9:	lea    rdi,[rcx+0x20]
   140002add:	mov    rcx,rdi
   140002ae0:	call   QWORD PTR [rip+0x56da]        # 0x1400081c0
   140002ae6:	add    rbx,0x8
   140002aea:	mov    rcx,rbx
   140002aed:	call   0x1400029bc
   140002af2:	mov    rcx,rdi
   140002af5:	call   QWORD PTR [rip+0x56cd]        # 0x1400081c8
   140002afb:	nop
   140002afc:	cmp    BYTE PTR [rdi+0x28],0x0
   140002b00:	je     0x140002b10
   140002b02:	mov    BYTE PTR [rdi+0x28],0x0
   140002b06:	mov    rcx,rdi
   140002b09:	call   QWORD PTR [rip+0x56a9]        # 0x1400081b8
   140002b0f:	nop
   140002b10:	mov    QWORD PTR [rsp+0x40],rbx
   140002b15:	mov    rcx,rbx
   140002b18:	call   0x1400029bc
   140002b1d:	nop
   140002b1e:	mov    rcx,QWORD PTR [rbx]
   140002b21:	test   rcx,rcx
   140002b24:	je     0x140002b30
   140002b26:	call   QWORD PTR [rip+0x56ec]        # 0x140008218
   140002b2c:	and    QWORD PTR [rbx],0x0
   140002b30:	mov    rcx,QWORD PTR [rbx+0x8]
   140002b34:	test   rcx,rcx
   140002b37:	je     0x140002b44
   140002b39:	call   QWORD PTR [rip+0x56d9]        # 0x140008218
   140002b3f:	and    QWORD PTR [rbx+0x8],0x0
   140002b44:	and    DWORD PTR [rbx+0x10],0x0
   140002b48:	mov    rbx,QWORD PTR [rsp+0x48]
   140002b4d:	add    rsp,0x30
   140002b51:	pop    rdi
   140002b52:	ret    
   140002b53:	int3   
   140002b54:	int3   
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	sub    rsp,0x38
   140002b60:	call   QWORD PTR [rip+0x564a]        # 0x1400081b0
   140002b66:	xor    eax,eax
   140002b68:	mov    DWORD PTR [rsp+0x20],eax
   140002b6c:	jmp    0x140002b77
   140002b6e:	mov    eax,0x8007000e
   140002b73:	mov    DWORD PTR [rsp+0x20],eax
   140002b77:	add    rsp,0x38
   140002b7b:	ret    
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	int3   
   140002b81:	int3   
   140002b82:	int3   
   140002b83:	int3   
   140002b84:	mov    rax,rsp
   140002b87:	mov    QWORD PTR [rax+0x18],r8
   140002b8b:	mov    QWORD PTR [rax+0x10],rdx
   140002b8f:	mov    QWORD PTR [rax+0x8],rcx
   140002b93:	push   rbx
   140002b94:	push   rsi
   140002b95:	push   rdi
   140002b96:	push   r12
   140002b98:	push   r13
   140002b9a:	push   r14
   140002b9c:	push   r15
   140002b9e:	sub    rsp,0x60
   140002ba2:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140002baa:	mov    r13,r8
   140002bad:	mov    r12,rdx
   140002bb0:	mov    r15,rcx
   140002bb3:	xor    esi,esi
   140002bb5:	test   rdx,rdx
   140002bb8:	je     0x140002dfc
   140002bbe:	test   r8,r8
   140002bc1:	je     0x140002dfc
   140002bc7:	mov    r14d,esi
   140002bca:	or     rbx,0xffffffffffffffff
   140002bce:	mov    rax,rbx
   140002bd1:	inc    rax
   140002bd4:	cmp    WORD PTR [rdx+rax*2],si
   140002bd8:	jne    0x140002bd1
   140002bda:	lea    rcx,[rax*2+0x2]
   140002be2:	mov    QWORD PTR [rsp+0x48],rcx
   140002be7:	mov    QWORD PTR [rsp+0x28],rsi
   140002bec:	mov    eax,0x2
   140002bf1:	mul    rcx
   140002bf4:	cmovo  rax,rbx
   140002bf8:	mov    rcx,rax
   140002bfb:	call   0x140006710
   140002c00:	mov    QWORD PTR [rsp+0x20],rax
   140002c05:	mov    QWORD PTR [rsp+0x28],rax
   140002c0a:	jmp    0x140002c37
   140002c0c:	xor    esi,esi
   140002c0e:	or     rbx,0xffffffffffffffff
   140002c12:	mov    r15,QWORD PTR [rsp+0xa0]
   140002c1a:	mov    r13,QWORD PTR [rsp+0xb0]
   140002c22:	mov    r12,QWORD PTR [rsp+0xa8]
   140002c2a:	mov    r14d,esi
   140002c2d:	mov    rax,QWORD PTR [rsp+0x28]
   140002c32:	mov    QWORD PTR [rsp+0x20],rax
   140002c37:	mov    rdi,rax
   140002c3a:	mov    QWORD PTR [rsp+0x40],rax
   140002c3f:	mov    rax,rbx
   140002c42:	inc    rax
   140002c45:	cmp    WORD PTR [r13+rax*2+0x0],si
   140002c4b:	jne    0x140002c42
   140002c4d:	inc    eax
   140002c4f:	movsxd rcx,eax
   140002c52:	add    rcx,rcx
   140002c55:	mov    QWORD PTR [rsp+0x38],rcx
   140002c5a:	mov    QWORD PTR [rsp+0x30],rsi
   140002c5f:	mov    eax,0x2
   140002c64:	mul    rcx
   140002c67:	cmovo  rax,rbx
   140002c6b:	mov    rcx,rax
   140002c6e:	call   0x140006710
   140002c73:	mov    rbx,rax
   140002c76:	mov    QWORD PTR [rsp+0x30],rax
   140002c7b:	mov    rax,QWORD PTR [rsp+0x20]
   140002c80:	jmp    0x140002cb3
   140002c82:	xor    esi,esi
   140002c84:	mov    r15,QWORD PTR [rsp+0xa0]
   140002c8c:	mov    r13,QWORD PTR [rsp+0xb0]
   140002c94:	mov    r12,QWORD PTR [rsp+0xa8]
   140002c9c:	mov    r14d,esi
   140002c9f:	mov    rax,QWORD PTR [rsp+0x28]
   140002ca4:	mov    QWORD PTR [rsp+0x20],rax
   140002ca9:	mov    rdi,QWORD PTR [rsp+0x40]
   140002cae:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cb3:	test   rax,rax
   140002cb6:	je     0x140002dda
   140002cbc:	test   rbx,rbx
   140002cbf:	je     0x140002dda
   140002cc5:	mov    rdx,QWORD PTR [rsp+0x48]
   140002cca:	mov    r9,rdx
   140002ccd:	mov    r8,r12
   140002cd0:	mov    rcx,rax
   140002cd3:	call   QWORD PTR [rip+0x5617]        # 0x1400082f0
   140002cd9:	test   eax,eax
   140002cdb:	je     0x140002d12
   140002cdd:	cmp    eax,0xc
   140002ce0:	je     0x140002d07
   140002ce2:	cmp    eax,0x16
   140002ce5:	je     0x140002cfc
   140002ce7:	cmp    eax,0x22
   140002cea:	je     0x140002cfc
   140002cec:	cmp    eax,0x50
   140002cef:	je     0x140002d12
   140002cf1:	mov    ecx,0x80004005
   140002cf6:	call   0x1400051b0
   140002cfb:	int3   
   140002cfc:	mov    ecx,0x80070057
   140002d01:	call   0x1400051b0
   140002d06:	int3   
   140002d07:	mov    ecx,0x8007000e
   140002d0c:	call   0x1400051b0
   140002d11:	int3   
   140002d12:	mov    r9,QWORD PTR [rsp+0x38]
   140002d17:	mov    r8,r13
   140002d1a:	mov    rdx,r9
   140002d1d:	mov    rcx,rbx
   140002d20:	call   QWORD PTR [rip+0x55ca]        # 0x1400082f0
   140002d26:	test   eax,eax
   140002d28:	je     0x140002d5f
   140002d2a:	cmp    eax,0xc
   140002d2d:	je     0x140002d54
   140002d2f:	cmp    eax,0x16
   140002d32:	je     0x140002d49
   140002d34:	cmp    eax,0x22
   140002d37:	je     0x140002d49
   140002d39:	cmp    eax,0x50
   140002d3c:	je     0x140002d5f
   140002d3e:	mov    ecx,0x80004005
   140002d43:	call   0x1400051b0
   140002d48:	int3   
   140002d49:	mov    ecx,0x80070057
   140002d4e:	call   0x1400051b0
   140002d53:	int3   
   140002d54:	mov    ecx,0x8007000e
   140002d59:	call   0x1400051b0
   140002d5e:	int3   
   140002d5f:	mov    eax,DWORD PTR [r15+0x10]
   140002d63:	inc    eax
   140002d65:	movsxd rdx,eax
   140002d68:	mov    r12d,0x8
   140002d6e:	mov    r8d,r12d
   140002d71:	mov    rcx,QWORD PTR [r15]
   140002d74:	call   QWORD PTR [rip+0x8286]        # 0x14000b000
   140002d7a:	test   rax,rax
   140002d7d:	je     0x140002dda
   140002d7f:	mov    QWORD PTR [r15],rax
   140002d82:	mov    eax,DWORD PTR [r15+0x10]
   140002d86:	inc    eax
   140002d88:	movsxd rdx,eax
   140002d8b:	mov    r8d,r12d
   140002d8e:	mov    rcx,QWORD PTR [r15+0x8]
   140002d92:	call   QWORD PTR [rip+0x8268]        # 0x14000b000
   140002d98:	test   rax,rax
   140002d9b:	je     0x140002dda
   140002d9d:	mov    QWORD PTR [r15+0x8],rax
   140002da1:	movsxd rdx,DWORD PTR [r15+0x10]
   140002da5:	mov    rax,QWORD PTR [r15]
   140002da8:	lea    rcx,[rax+rdx*8]
   140002dac:	test   rcx,rcx
   140002daf:	je     0x140002db9
   140002db1:	mov    rax,QWORD PTR [rsp+0x20]
   140002db6:	mov    QWORD PTR [rcx],rax
   140002db9:	mov    rax,QWORD PTR [r15+0x8]
   140002dbd:	lea    rcx,[rax+rdx*8]
   140002dc1:	test   rcx,rcx
   140002dc4:	je     0x140002dc9
   140002dc6:	mov    QWORD PTR [rcx],rbx
   140002dc9:	inc    DWORD PTR [r15+0x10]
   140002dcd:	mov    rdi,rsi
   140002dd0:	mov    QWORD PTR [rsp+0x40],rsi
   140002dd5:	mov    rbx,rsi
   140002dd8:	jmp    0x140002de0
   140002dda:	mov    r14d,0x8007000e
   140002de0:	test   r14d,r14d
   140002de3:	setns  sil
   140002de7:	mov    rcx,rbx
   140002dea:	call   0x1400066c4
   140002def:	nop
   140002df0:	mov    rcx,rdi
   140002df3:	call   0x1400066c4
   140002df8:	mov    eax,esi
   140002dfa:	jmp    0x140002dfe
   140002dfc:	xor    eax,eax
   140002dfe:	add    rsp,0x60
   140002e02:	pop    r15
   140002e04:	pop    r14
   140002e06:	pop    r13
   140002e08:	pop    r12
   140002e0a:	pop    rdi
   140002e0b:	pop    rsi
   140002e0c:	pop    rbx
   140002e0d:	ret    
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	int3   
   140002e11:	int3   
   140002e12:	int3   
   140002e13:	int3   
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    rax,rsp
   140002e23:	push   rdi
   140002e24:	sub    rsp,0x30
   140002e28:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002e30:	mov    QWORD PTR [rax+0x8],rbx
   140002e34:	mov    QWORD PTR [rax+0x18],rbp
   140002e38:	mov    QWORD PTR [rax+0x20],rsi
   140002e3c:	mov    rbx,r8
   140002e3f:	mov    rsi,rdx
   140002e42:	mov    rbp,rcx
   140002e45:	test   rdx,rdx
   140002e48:	je     0x140002e87
   140002e4a:	test   rbx,rbx
   140002e4d:	je     0x140002e87
   140002e4f:	add    rcx,0x20
   140002e53:	call   QWORD PTR [rip+0x5367]        # 0x1400081c0
   140002e59:	and    QWORD PTR [rsp+0x48],0x0
   140002e5f:	lea    rcx,[rbp+0x8]
   140002e63:	mov    r8,rbx
   140002e66:	mov    rdx,rsi
   140002e69:	call   0x140002b84
   140002e6e:	mov    ebx,eax
   140002e70:	lea    rcx,[rbp+0x20]
   140002e74:	call   QWORD PTR [rip+0x534e]        # 0x1400081c8
   140002e7a:	neg    ebx
   140002e7c:	sbb    eax,eax
   140002e7e:	not    eax
   140002e80:	and    eax,0x8007000e
   140002e85:	jmp    0x140002e8c
   140002e87:	mov    eax,0x80070057
   140002e8c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e91:	mov    rbp,QWORD PTR [rsp+0x50]
   140002e96:	mov    rsi,QWORD PTR [rsp+0x58]
   140002e9b:	add    rsp,0x30
   140002e9f:	pop    rdi
   140002ea0:	ret    
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	int3   
   140002ea5:	int3   
   140002ea6:	int3   
   140002ea7:	int3   
   140002ea8:	mov    rcx,QWORD PTR [rcx]
   140002eab:	rex.W jmp QWORD PTR [rip+0x5366]        # 0x140008218
   140002eb2:	int3   
   140002eb3:	int3   
   140002eb4:	int3   
   140002eb5:	int3   
   140002eb6:	int3   
   140002eb7:	int3   
   140002eb8:	sub    rsp,0x28
   140002ebc:	lea    rax,[rcx+0x8]
   140002ec0:	cmp    QWORD PTR [rcx],rax
   140002ec3:	je     0x140002eca
   140002ec5:	call   0x140002ea8
   140002eca:	add    rsp,0x28
   140002ece:	ret    
   140002ecf:	int3   
   140002ed0:	int3   
   140002ed1:	int3   
   140002ed2:	int3   
   140002ed3:	int3   
   140002ed4:	int3   
   140002ed5:	int3   
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	rex push rbx
   140002eda:	sub    rsp,0x20
   140002ede:	mov    rbx,rcx
   140002ee1:	mov    rcx,rdx
   140002ee4:	call   QWORD PTR [rip+0x5336]        # 0x140008220
   140002eea:	test   rax,rax
   140002eed:	je     0x140002ef8
   140002eef:	mov    QWORD PTR [rbx],rax
   140002ef2:	add    rsp,0x20
   140002ef6:	pop    rbx
   140002ef7:	ret    
   140002ef8:	mov    ecx,0x8007000e
   140002efd:	call   0x1400051b0
   140002f02:	int3   
   140002f03:	int3   
   140002f04:	int3   
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	mov    rax,rsp
   140002f0f:	mov    QWORD PTR [rax+0x8],rbx
   140002f13:	mov    QWORD PTR [rax+0x10],rbp
   140002f17:	mov    QWORD PTR [rax+0x18],rsi
   140002f1b:	mov    QWORD PTR [rax+0x20],rdi
   140002f1f:	push   r14
   140002f21:	sub    rsp,0x20
   140002f25:	mov    rbx,rcx
   140002f28:	mov    esi,r8d
   140002f2b:	lea    ecx,[r8+0x1]
   140002f2f:	mov    rbp,rdx
   140002f32:	add    ecx,DWORD PTR [rbx]
   140002f34:	cmp    ecx,DWORD PTR [rbx]
   140002f36:	jle    0x140002fe9
   140002f3c:	cmp    ecx,r8d
   140002f3f:	jle    0x140002fe9
   140002f45:	mov    edi,DWORD PTR [rbx+0x4]
   140002f48:	xor    r14d,r14d
   140002f4b:	cmp    ecx,edi
   140002f4d:	jl     0x140002f88
   140002f4f:	cmp    edi,0x3fffffff
   140002f55:	jg     0x140002fe9
   140002f5b:	add    edi,edi
   140002f5d:	cmp    ecx,edi
   140002f5f:	jge    0x140002f4f
   140002f61:	mov    eax,edi
   140002f63:	mov    ecx,0xffffffff
   140002f68:	add    rax,rax
   140002f6b:	cmp    rax,rcx
   140002f6e:	ja     0x140002fe9
   140002f70:	mov    rcx,QWORD PTR [rbx+0x8]
   140002f74:	mov    edx,eax
   140002f76:	call   QWORD PTR [rip+0xa0cc]        # 0x14000d048
   140002f7c:	test   rax,rax
   140002f7f:	je     0x140002fe9
   140002f81:	mov    QWORD PTR [rbx+0x8],rax
   140002f85:	mov    DWORD PTR [rbx+0x4],edi
   140002f88:	cmp    DWORD PTR [rbx],r14d
   140002f8b:	jl     0x140002fe9
   140002f8d:	mov    ecx,DWORD PTR [rbx+0x4]
   140002f90:	cmp    DWORD PTR [rbx],ecx
   140002f92:	jge    0x140002fe9
   140002f94:	mov    eax,ecx
   140002f96:	sub    eax,DWORD PTR [rbx]
   140002f98:	cmp    eax,ecx
   140002f9a:	jg     0x140002fe9
   140002f9c:	movsxd rcx,DWORD PTR [rbx]
   140002f9f:	mov    r8,rbp
   140002fa2:	movsxd rdx,eax
   140002fa5:	mov    rax,QWORD PTR [rbx+0x8]
   140002fa9:	add    rdx,rdx
   140002fac:	lea    rcx,[rax+rcx*2]
   140002fb0:	lea    eax,[rsi+rsi*1]
   140002fb3:	movsxd r9,eax
   140002fb6:	call   QWORD PTR [rip+0x5334]        # 0x1400082f0
   140002fbc:	test   eax,eax
   140002fbe:	je     0x140002fd4
   140002fc0:	cmp    eax,0xc
   140002fc3:	je     0x14000301c
   140002fc5:	cmp    eax,0x16
   140002fc8:	je     0x140003011
   140002fca:	cmp    eax,0x22
   140002fcd:	je     0x140003011
   140002fcf:	cmp    eax,0x50
   140002fd2:	jne    0x140003006
   140002fd4:	add    DWORD PTR [rbx],esi
   140002fd6:	mov    rax,QWORD PTR [rbx+0x8]
   140002fda:	movsxd rcx,DWORD PTR [rbx]
   140002fdd:	mov    WORD PTR [rax+rcx*2],r14w
   140002fe2:	mov    eax,0x1
   140002fe7:	jmp    0x140002feb
   140002fe9:	xor    eax,eax
   140002feb:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ff0:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ff5:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ffa:	mov    rdi,QWORD PTR [rsp+0x48]
   140002fff:	add    rsp,0x20
   140003003:	pop    r14
   140003005:	ret    
   140003006:	mov    ecx,0x80004005
   14000300b:	call   0x1400051b0
   140003010:	int3   
   140003011:	mov    ecx,0x80070057
   140003016:	call   0x1400051b0
   14000301b:	int3   
   14000301c:	mov    ecx,0x8007000e
   140003021:	call   0x1400051b0
   140003026:	int3   
   140003027:	int3   
   140003028:	int3   
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    QWORD PTR [rsp+0x10],rbx
   140003035:	push   rbp
   140003036:	push   rsi
   140003037:	push   rdi
   140003038:	push   r12
   14000303a:	push   r13
   14000303c:	push   r14
   14000303e:	push   r15
   140003040:	lea    rbp,[rsp-0x27]
   140003045:	sub    rsp,0x90
   14000304c:	mov    rax,QWORD PTR [rip+0x7fbd]        # 0x14000b010
   140003053:	xor    rax,rsp
   140003056:	mov    QWORD PTR [rbp+0x17],rax
   14000305a:	xor    ebx,ebx
   14000305c:	mov    QWORD PTR [rbp-0x39],r8
   140003060:	mov    rdi,rdx
   140003063:	mov    rsi,rcx
   140003066:	test   r8,r8
   140003069:	jne    0x140003072
   14000306b:	mov    eax,0x80004003
   140003070:	jmp    0x1400030b9
   140003072:	mov    QWORD PTR [r8],rbx
   140003075:	or     rax,0xffffffffffffffff
   140003079:	inc    rax
   14000307c:	cmp    WORD PTR [rdx+rax*2],bx
   140003080:	jne    0x140003079
   140003082:	add    eax,eax
   140003084:	mov    DWORD PTR [rbp-0x49],ebx
   140003087:	cmp    eax,0x64
   14000308a:	mov    ecx,0x3e8
   14000308f:	cmovl  eax,ecx
   140003092:	mov    ecx,eax
   140003094:	mov    DWORD PTR [rbp-0x45],eax
   140003097:	add    rcx,rcx
   14000309a:	mov    eax,0xffffffff
   14000309f:	cmp    rcx,rax
   1400030a2:	jbe    0x1400030e0
   1400030a4:	mov    QWORD PTR [rbp-0x41],rbx
   1400030a8:	mov    ebx,0x8007000e
   1400030ad:	mov    rcx,QWORD PTR [rbp-0x41]
   1400030b1:	call   QWORD PTR [rip+0x9fb9]        # 0x14000d070
   1400030b7:	mov    eax,ebx
   1400030b9:	mov    rcx,QWORD PTR [rbp+0x17]
   1400030bd:	xor    rcx,rsp
   1400030c0:	call   0x140006b00
   1400030c5:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400030cd:	add    rsp,0x90
   1400030d4:	pop    r15
   1400030d6:	pop    r14
   1400030d8:	pop    r13
   1400030da:	pop    r12
   1400030dc:	pop    rdi
   1400030dd:	pop    rsi
   1400030de:	pop    rbp
   1400030df:	ret    
   1400030e0:	mov    ecx,ecx
   1400030e2:	call   QWORD PTR [rip+0x9f68]        # 0x14000d050
   1400030e8:	mov    QWORD PTR [rbp-0x41],rax
   1400030ec:	test   rax,rax
   1400030ef:	je     0x1400030a8
   1400030f1:	mov    WORD PTR [rax],bx
   1400030f4:	mov    QWORD PTR [rsi],rdi
   1400030f7:	cmp    WORD PTR [rdi],bx
   1400030fa:	je     0x140003299
   140003100:	mov    rdx,QWORD PTR [rsi]
   140003103:	cmp    WORD PTR [rdx],0x25
   140003107:	jne    0x140003121
   140003109:	mov    rcx,rdx
   14000310c:	call   QWORD PTR [rip+0x9f26]        # 0x14000d038
   140003112:	mov    QWORD PTR [rsi],rax
   140003115:	mov    rdi,rax
   140003118:	cmp    WORD PTR [rax],0x25
   14000311c:	jne    0x140003149
   14000311e:	mov    rdx,rax
   140003121:	mov    r8d,0x1
   140003127:	lea    rcx,[rbp-0x49]
   14000312b:	call   0x140002f0c
   140003130:	test   eax,eax
   140003132:	je     0x1400030a8
   140003138:	mov    rcx,QWORD PTR [rsi]
   14000313b:	call   QWORD PTR [rip+0x9ef7]        # 0x14000d038
   140003141:	mov    QWORD PTR [rsi],rax
   140003144:	cmp    WORD PTR [rax],bx
   140003147:	jmp    0x1400030fa
   140003149:	test   rax,rax
   14000314c:	je     0x140003285
   140003152:	movzx  eax,WORD PTR [rax]
   140003155:	test   ax,ax
   140003158:	je     0x140003285
   14000315e:	cmp    ax,0x25
   140003162:	je     0x140003172
   140003164:	mov    rcx,rdi
   140003167:	call   QWORD PTR [rip+0x9ecb]        # 0x14000d038
   14000316d:	mov    rdi,rax
   140003170:	jmp    0x140003152
   140003172:	test   rdi,rdi
   140003175:	je     0x140003285
   14000317b:	mov    rax,rdi
   14000317e:	sub    rax,QWORD PTR [rsi]
   140003181:	sar    rax,1
   140003184:	cmp    rax,0x1f
   140003188:	jg     0x14000328f
   14000318e:	mov    r8,QWORD PTR [rsi]
   140003191:	lea    rcx,[rbp-0x29]
   140003195:	movsxd r9,eax
   140003198:	mov    edx,0x20
   14000319d:	call   QWORD PTR [rip+0x5085]        # 0x140008228
   1400031a3:	test   eax,eax
   1400031a5:	je     0x1400031cb
   1400031a7:	cmp    eax,0xc
   1400031aa:	je     0x1400032c3
   1400031b0:	cmp    eax,0x16
   1400031b3:	je     0x1400032b8
   1400031b9:	cmp    eax,0x22
   1400031bc:	je     0x1400032b8
   1400031c2:	cmp    eax,0x50
   1400031c5:	jne    0x1400032ad
   1400031cb:	mov    r15,QWORD PTR [rsi+0x8]
   1400031cf:	lea    rcx,[r15+0x20]
   1400031d3:	call   QWORD PTR [rip+0x4fe7]        # 0x1400081c0
   1400031d9:	mov    r12d,ebx
   1400031dc:	mov    r14,rbx
   1400031df:	cmp    DWORD PTR [r15+0x18],ebx
   1400031e3:	jle    0x140003207
   1400031e5:	mov    rax,QWORD PTR [r15+0x8]
   1400031e9:	lea    rdx,[rbp-0x29]
   1400031ed:	mov    rcx,QWORD PTR [rax+r14*8]
   1400031f1:	call   QWORD PTR [rip+0x4ff9]        # 0x1400081f0
   1400031f7:	test   eax,eax
   1400031f9:	je     0x14000320f
   1400031fb:	inc    r12d
   1400031fe:	inc    r14
   140003201:	cmp    r12d,DWORD PTR [r15+0x18]
   140003205:	jl     0x1400031e5
   140003207:	or     r12d,0xffffffff
   14000320b:	or     r14,0xffffffffffffffff
   14000320f:	cmp    r14,0xffffffffffffffff
   140003213:	jne    0x14000321a
   140003215:	mov    r14,rbx
   140003218:	jmp    0x140003235
   14000321a:	test   r14,r14
   14000321d:	js     0x1400032ce
   140003223:	cmp    r12d,DWORD PTR [r15+0x18]
   140003227:	jge    0x1400032ce
   14000322d:	mov    rax,QWORD PTR [r15+0x10]
   140003231:	mov    r14,QWORD PTR [rax+r14*8]
   140003235:	lea    rcx,[r15+0x20]
   140003239:	call   QWORD PTR [rip+0x4f89]        # 0x1400081c8
   14000323f:	test   r14,r14
   140003242:	je     0x140003285
   140003244:	or     r8,0xffffffffffffffff
   140003248:	inc    r8
   14000324b:	cmp    WORD PTR [r14+r8*2],bx
   140003250:	jne    0x140003248
   140003252:	mov    rdx,r14
   140003255:	lea    rcx,[rbp-0x49]
   140003259:	call   0x140002f0c
   14000325e:	test   eax,eax
   140003260:	je     0x1400030a8
   140003266:	cmp    QWORD PTR [rsi],rdi
   140003269:	je     0x140003138
   14000326f:	mov    rcx,QWORD PTR [rsi]
   140003272:	call   QWORD PTR [rip+0x9dc0]        # 0x14000d038
   140003278:	mov    QWORD PTR [rsi],rax
   14000327b:	cmp    rax,rdi
   14000327e:	jne    0x14000326f
   140003280:	jmp    0x140003138
   140003285:	mov    ebx,0x80020009
   14000328a:	jmp    0x1400030ad
   14000328f:	mov    ebx,0x80004005
   140003294:	jmp    0x1400030ad
   140003299:	mov    rax,QWORD PTR [rbp-0x41]
   14000329d:	mov    rcx,QWORD PTR [rbp-0x39]
   1400032a1:	mov    QWORD PTR [rbp-0x41],rbx
   1400032a5:	mov    QWORD PTR [rcx],rax
   1400032a8:	jmp    0x1400030ad
   1400032ad:	mov    ecx,0x80004005
   1400032b2:	call   0x1400051b0
   1400032b7:	int3   
   1400032b8:	mov    ecx,0x80070057
   1400032bd:	call   0x1400051b0
   1400032c2:	int3   
   1400032c3:	mov    ecx,0x8007000e
   1400032c8:	call   0x1400051b0
   1400032cd:	int3   
   1400032ce:	mov    ecx,0xc000008c
   1400032d3:	call   0x140005198
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	mov    r11,rsp
   1400032e3:	mov    QWORD PTR [r11+0x20],r9
   1400032e7:	push   rbx
   1400032e8:	sub    rsp,0x50
   1400032ec:	and    QWORD PTR [r11+0x20],0x0
   1400032f1:	mov    rbx,rcx
   1400032f4:	lea    rcx,[r11+0x28]
   1400032f8:	mov    rax,r8
   1400032fb:	mov    QWORD PTR [r11-0x18],rcx
   1400032ff:	mov    r10,rdx
   140003302:	lea    rcx,[r11+0x20]
   140003306:	xor    r9d,r9d
   140003309:	mov    QWORD PTR [r11-0x20],rcx
   14000330d:	xor    r8d,r8d
   140003310:	and    QWORD PTR [r11-0x28],0x0
   140003315:	mov    rdx,rax
   140003318:	mov    DWORD PTR [rsp+0x28],0x2001f
   140003320:	mov    rcx,r10
   140003323:	and    DWORD PTR [rsp+0x20],0x0
   140003328:	call   QWORD PTR [rip+0x4d72]        # 0x1400080a0
   14000332e:	mov    ecx,eax
   140003330:	test   eax,eax
   140003332:	jne    0x140003350
   140003334:	cmp    QWORD PTR [rbx],rcx
   140003337:	je     0x140003348
   140003339:	mov    rcx,QWORD PTR [rbx]
   14000333c:	call   QWORD PTR [rip+0x4d4e]        # 0x140008090
   140003342:	and    QWORD PTR [rbx],0x0
   140003346:	mov    ecx,eax
   140003348:	mov    rax,QWORD PTR [rsp+0x78]
   14000334d:	mov    QWORD PTR [rbx],rax
   140003350:	mov    eax,ecx
   140003352:	add    rsp,0x50
   140003356:	pop    rbx
   140003357:	ret    
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    rax,rsp
   140003363:	mov    QWORD PTR [rax+0x8],rbx
   140003367:	mov    QWORD PTR [rax+0x10],rbp
   14000336b:	mov    QWORD PTR [rax+0x18],rsi
   14000336f:	mov    QWORD PTR [rax+0x20],rdi
   140003373:	push   r15
   140003375:	sub    rsp,0x20
   140003379:	mov    eax,DWORD PTR [rip+0x82e9]        # 0x14000b668
   14000337f:	mov    rsi,rdx
   140003382:	mov    rbp,rcx
   140003385:	test   al,0x1
   140003387:	jne    0x1400033fa
   140003389:	or     eax,0x1
   14000338c:	mov    DWORD PTR [rip+0x82d6],eax        # 0x14000b668
   140003392:	lea    rax,[rip+0x51b3]        # 0x14000854c
   140003399:	mov    QWORD PTR [rip+0x82d0],rax        # 0x14000b670
   1400033a0:	mov    eax,0x8
   1400033a5:	mov    WORD PTR [rip+0x82cc],ax        # 0x14000b678
   1400033ac:	lea    rax,[rip+0x519d]        # 0x140008550
   1400033b3:	mov    QWORD PTR [rip+0x82c6],rax        # 0x14000b680
   1400033ba:	mov    eax,0x4008
   1400033bf:	mov    WORD PTR [rip+0x82c2],ax        # 0x14000b688
   1400033c6:	lea    rax,[rip+0x5187]        # 0x140008554
   1400033cd:	mov    QWORD PTR [rip+0x82bc],rax        # 0x14000b690
   1400033d4:	mov    eax,0x13
   1400033d9:	mov    WORD PTR [rip+0x82b8],ax        # 0x14000b698
   1400033e0:	lea    rax,[rip+0x5171]        # 0x140008558
   1400033e7:	mov    QWORD PTR [rip+0x82b2],rax        # 0x14000b6a0
   1400033ee:	mov    eax,0x11
   1400033f3:	mov    WORD PTR [rip+0x82ae],ax        # 0x14000b6a8
   1400033fa:	lea    r15,[rip+0x826f]        # 0x14000b670
   140003401:	xor    ebx,ebx
   140003403:	mov    rdi,r15
   140003406:	mov    rdx,QWORD PTR [rdi]
   140003409:	mov    rcx,rbp
   14000340c:	call   QWORD PTR [rip+0x4dde]        # 0x1400081f0
   140003412:	test   eax,eax
   140003414:	je     0x140003429
   140003416:	inc    ebx
   140003418:	add    rdi,0x10
   14000341c:	movsxd rax,ebx
   14000341f:	cmp    rax,0x4
   140003423:	jb     0x140003406
   140003425:	xor    eax,eax
   140003427:	jmp    0x14000343d
   140003429:	movsxd rcx,ebx
   14000342c:	mov    eax,0x1
   140003431:	add    rcx,rcx
   140003434:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   14000343a:	mov    WORD PTR [rsi],cx
   14000343d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003442:	mov    rbp,QWORD PTR [rsp+0x38]
   140003447:	mov    rsi,QWORD PTR [rsp+0x40]
   14000344c:	mov    rdi,QWORD PTR [rsp+0x48]
   140003451:	add    rsp,0x20
   140003455:	pop    r15
   140003457:	ret    
   140003458:	int3   
   140003459:	int3   
   14000345a:	int3   
   14000345b:	int3   
   14000345c:	int3   
   14000345d:	int3   
   14000345e:	int3   
   14000345f:	int3   
   140003460:	rex push rbx
   140003462:	push   rsi
   140003463:	push   rdi
   140003464:	push   r12
   140003466:	push   r13
   140003468:	push   r14
   14000346a:	push   r15
   14000346c:	mov    eax,0x21a0
   140003471:	call   0x140007860
   140003476:	sub    rsp,rax
   140003479:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140003482:	mov    rax,QWORD PTR [rip+0x7b87]        # 0x14000b010
   140003489:	xor    rax,rsp
   14000348c:	mov    QWORD PTR [rsp+0x2190],rax
   140003494:	mov    r15,r8
   140003497:	mov    QWORD PTR [rsp+0x40],r8
   14000349c:	mov    r13,rdx
   14000349f:	mov    r12,rcx
   1400034a2:	mov    QWORD PTR [rsp+0x50],rcx
   1400034a7:	mov    QWORD PTR [rsp+0x48],rdx
   1400034ac:	mov    QWORD PTR [rsp+0x60],r8
   1400034b1:	mov    QWORD PTR [rsp+0x70],r9
   1400034b6:	xor    ebx,ebx
   1400034b8:	mov    WORD PTR [rsp+0x30],bx
   1400034bd:	lea    rdx,[rsp+0x190]
   1400034c5:	call   0x140003c68
   1400034ca:	test   eax,eax
   1400034cc:	js     0x140003946
   1400034d2:	lea    rdx,[rsp+0x30]
   1400034d7:	lea    rcx,[rsp+0x190]
   1400034df:	call   0x140003360
   1400034e4:	test   eax,eax
   1400034e6:	jne    0x1400034f2
   1400034e8:	mov    eax,0x80020009
   1400034ed:	jmp    0x140003946
   1400034f2:	mov    rcx,QWORD PTR [r12]
   1400034f6:	movzx  eax,WORD PTR [rcx]
   1400034f9:	cmp    eax,0x20
   1400034fc:	ja     0x14000351a
   1400034fe:	movabs rdx,0x100002600
   140003508:	bt     rdx,rax
   14000350c:	jae    0x14000351a
   14000350e:	call   QWORD PTR [rip+0x9b24]        # 0x14000d038
   140003514:	mov    QWORD PTR [r12],rax
   140003518:	jmp    0x1400034f2
   14000351a:	lea    rdx,[rsp+0x190]
   140003522:	mov    rcx,r12
   140003525:	call   0x140003c68
   14000352a:	test   eax,eax
   14000352c:	js     0x140003946
   140003532:	movzx  eax,WORD PTR [rsp+0x30]
   140003537:	cmp    eax,0x8
   14000353a:	je     0x1400038e0
   140003540:	cmp    eax,0x11
   140003543:	je     0x140003724
   140003549:	cmp    eax,0x13
   14000354c:	je     0x1400036ec
   140003552:	cmp    eax,0x4008
   140003557:	jne    0x140003932
   14000355d:	lea    rcx,[rsp+0x190]
   140003565:	or     rsi,0xffffffffffffffff
   140003569:	mov    rax,rsi
   14000356c:	inc    rax
   14000356f:	cmp    WORD PTR [rcx+rax*2],bx
   140003573:	jne    0x14000356c
   140003575:	add    eax,0x2
   140003578:	mov    QWORD PTR [rsp+0x80],rbx
   140003580:	movsxd rcx,eax
   140003583:	test   eax,eax
   140003585:	je     0x1400035c4
   140003587:	xor    edx,edx
   140003589:	mov    rax,rsi
   14000358c:	div    rcx
   14000358f:	cmp    rax,0x2
   140003593:	jb     0x1400035b9
   140003595:	lea    rdx,[rcx+rcx*1]
   140003599:	cmp    rdx,0x100
   1400035a0:	jbe    0x1400035c4
   1400035a2:	lea    rcx,[rsp+0x80]
   1400035aa:	call   0x140002ed8
   1400035af:	mov    rdi,QWORD PTR [rsp+0x80]
   1400035b7:	jmp    0x1400035d4
   1400035b9:	mov    ecx,0x80070057
   1400035be:	call   0x1400051b0
   1400035c3:	int3   
   1400035c4:	lea    rdi,[rsp+0x88]
   1400035cc:	mov    QWORD PTR [rsp+0x80],rdi
   1400035d4:	jmp    0x1400035f8
   1400035d6:	xor    ebx,ebx
   1400035d8:	or     rsi,0xffffffffffffffff
   1400035dc:	mov    rdi,QWORD PTR [rsp+0x80]
   1400035e4:	mov    r12,QWORD PTR [rsp+0x50]
   1400035e9:	mov    r13,QWORD PTR [rsp+0x48]
   1400035ee:	mov    rax,QWORD PTR [rsp+0x60]
   1400035f3:	mov    QWORD PTR [rsp+0x40],rax
   1400035f8:	test   rdi,rdi
   1400035fb:	je     0x1400036c4
   140003601:	lea    r14,[rsp+0x190]
   140003609:	cmp    WORD PTR [rsp+0x190],bx
   140003611:	je     0x140003658
   140003613:	mov    r15d,0x30
   140003619:	mov    rcx,r14
   14000361c:	call   QWORD PTR [rip+0x9a16]        # 0x14000d038
   140003622:	movzx  ecx,WORD PTR [r14]
   140003626:	cmp    cx,0x5c
   14000362a:	jne    0x140003647
   14000362c:	cmp    WORD PTR [rax],r15w
   140003630:	jne    0x140003647
   140003632:	mov    WORD PTR [rdi],bx
   140003635:	add    rdi,0x2
   140003639:	mov    rcx,rax
   14000363c:	call   QWORD PTR [rip+0x99f6]        # 0x14000d038
   140003642:	mov    r14,rax
   140003645:	jmp    0x140003652
   140003647:	mov    WORD PTR [rdi],cx
   14000364a:	add    rdi,0x2
   14000364e:	add    r14,0x2
   140003652:	cmp    WORD PTR [r14],bx
   140003656:	jne    0x140003619
   140003658:	mov    DWORD PTR [rdi],0x0
   14000365e:	mov    rdx,QWORD PTR [rsp+0x80]
   140003666:	test   rdx,rdx
   140003669:	jne    0x140003676
   14000366b:	mov    ecx,0x80004005
   140003670:	call   0x1400051b0
   140003675:	int3   
   140003676:	mov    r9d,ebx
   140003679:	mov    r8,rdx
   14000367c:	mov    rcx,rsi
   14000367f:	inc    rcx
   140003682:	cmp    WORD PTR [r8+rcx*2],bx
   140003687:	jne    0x14000367f
   140003689:	inc    ecx
   14000368b:	lea    r8,[r8+rcx*2]
   14000368f:	lea    r9d,[r9+rcx*2]
   140003693:	cmp    ecx,0x1
   140003696:	jne    0x14000367c
   140003698:	mov    DWORD PTR [rsp+0x28],r9d
   14000369d:	mov    QWORD PTR [rsp+0x20],rdx
   1400036a2:	lea    r9d,[rcx+0x6]
   1400036a6:	xor    r8d,r8d
   1400036a9:	mov    rdx,QWORD PTR [rsp+0x40]
   1400036ae:	mov    rcx,QWORD PTR [r13+0x0]
   1400036b2:	call   QWORD PTR [rip+0x4948]        # 0x140008000
   1400036b8:	mov    esi,eax
   1400036ba:	mov    rdi,QWORD PTR [rsp+0x80]
   1400036c2:	jmp    0x1400036c9
   1400036c4:	mov    esi,0xe
   1400036c9:	lea    rax,[rsp+0x88]
   1400036d1:	cmp    rdi,rax
   1400036d4:	je     0x140003925
   1400036da:	lea    rcx,[rsp+0x80]
   1400036e2:	call   0x140002ea8
   1400036e7:	jmp    0x140003925
   1400036ec:	lea    r9,[rsp+0x30]
   1400036f1:	xor    r8d,r8d
   1400036f4:	xor    edx,edx
   1400036f6:	lea    rcx,[rsp+0x190]
   1400036fe:	call   QWORD PTR [rip+0x98fc]        # 0x14000d000
   140003704:	mov    eax,DWORD PTR [rsp+0x30]
   140003708:	mov    DWORD PTR [rsp+0x38],eax
   14000370c:	mov    DWORD PTR [rsp+0x28],0x4
   140003714:	lea    rax,[rsp+0x38]
   140003719:	mov    r9d,0x4
   14000371f:	jmp    0x14000390e
   140003724:	lea    rax,[rsp+0x190]
   14000372c:	or     rsi,0xffffffffffffffff
   140003730:	mov    rdi,rsi
   140003733:	inc    rdi
   140003736:	cmp    WORD PTR [rax+rdi*2],bx
   14000373a:	jne    0x140003733
   14000373c:	mov    DWORD PTR [rsp+0x38],edi
   140003740:	test   dil,0x1
   140003744:	je     0x140003750
   140003746:	mov    eax,0x80004005
   14000374b:	jmp    0x140003946
   140003750:	mov    eax,edi
   140003752:	cdq    
   140003753:	sub    eax,edx
   140003755:	sar    eax,1
   140003757:	movsxd r14,eax
   14000375a:	mov    DWORD PTR [rsp+0x30],r14d
   14000375f:	mov    QWORD PTR [rsp+0x80],rbx
   140003767:	mov    rcx,r14
   14000376a:	test   eax,eax
   14000376c:	je     0x1400037aa
   14000376e:	xor    edx,edx
   140003770:	mov    rax,rsi
   140003773:	div    rcx
   140003776:	cmp    rax,0x1
   14000377a:	jae    0x140003787
   14000377c:	mov    ecx,0x80070057
   140003781:	call   0x1400051b0
   140003786:	int3   
   140003787:	cmp    rcx,0x100
   14000378e:	jbe    0x1400037aa
   140003790:	mov    rdx,rcx
   140003793:	lea    rcx,[rsp+0x80]
   14000379b:	call   0x140002ed8
   1400037a0:	mov    rcx,QWORD PTR [rsp+0x80]
   1400037a8:	jmp    0x1400037ba
   1400037aa:	lea    rcx,[rsp+0x88]
   1400037b2:	mov    QWORD PTR [rsp+0x80],rcx
   1400037ba:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037bf:	jmp    0x1400037e3
   1400037c1:	xor    ebx,ebx
   1400037c3:	mov    edi,DWORD PTR [rsp+0x38]
   1400037c7:	mov    r14d,DWORD PTR [rsp+0x30]
   1400037cc:	mov    rcx,QWORD PTR [rsp+0x80]
   1400037d4:	mov    r12,QWORD PTR [rsp+0x50]
   1400037d9:	mov    r13,QWORD PTR [rsp+0x48]
   1400037de:	mov    rsi,QWORD PTR [rsp+0x60]
   1400037e3:	test   rcx,rcx
   1400037e6:	jne    0x14000380b
   1400037e8:	lea    rax,[rsp+0x88]
   1400037f0:	test   rax,rax
   1400037f3:	je     0x140003746
   1400037f9:	lea    rcx,[rsp+0x80]
   140003801:	call   0x140002ea8
   140003806:	jmp    0x140003746
   14000380b:	movsxd r8,r14d
   14000380e:	xor    edx,edx
   140003810:	call   0x140006f22
   140003815:	mov    r8d,ebx
   140003818:	mov    r9,rbx
   14000381b:	movsxd r11,edi
   14000381e:	test   edi,edi
   140003820:	jle    0x140003895
   140003822:	mov    r15d,0x30
   140003828:	mov    eax,r8d
   14000382b:	cdq    
   14000382c:	sub    eax,edx
   14000382e:	sar    eax,1
   140003830:	movsxd r10,eax
   140003833:	add    r10,QWORD PTR [rsp+0x80]
   14000383b:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140003844:	mov    eax,edx
   140003846:	cmp    edx,r15d
   140003849:	jl     0x140003871
   14000384b:	cmp    eax,0x39
   14000384e:	jle    0x14000386c
   140003850:	cmp    eax,0x40
   140003853:	jle    0x140003871
   140003855:	cmp    eax,0x46
   140003858:	jle    0x140003867
   14000385a:	add    eax,0xffffff9f
   14000385d:	cmp    eax,0x5
   140003860:	ja     0x140003871
   140003862:	sub    dl,0x57
   140003865:	jmp    0x140003873
   140003867:	sub    dl,0x37
   14000386a:	jmp    0x140003873
   14000386c:	sub    dl,r15b
   14000386f:	jmp    0x140003873
   140003871:	mov    dl,bl
   140003873:	mov    ecx,r8d
   140003876:	and    ecx,0x1
   140003879:	shl    ecx,0x2
   14000387c:	mov    eax,0x4
   140003881:	sub    eax,ecx
   140003883:	mov    cl,al
   140003885:	shl    dl,cl
   140003887:	or     BYTE PTR [r10],dl
   14000388a:	inc    r8d
   14000388d:	inc    r9
   140003890:	cmp    r9,r11
   140003893:	jl     0x140003828
   140003895:	mov    DWORD PTR [rsp+0x28],r14d
   14000389a:	mov    rax,QWORD PTR [rsp+0x80]
   1400038a2:	mov    QWORD PTR [rsp+0x20],rax
   1400038a7:	mov    r9d,0x3
   1400038ad:	xor    r8d,r8d
   1400038b0:	mov    rdx,rsi
   1400038b3:	mov    rcx,QWORD PTR [r13+0x0]
   1400038b7:	call   QWORD PTR [rip+0x4743]        # 0x140008000
   1400038bd:	mov    esi,eax
   1400038bf:	lea    rax,[rsp+0x88]
   1400038c7:	cmp    QWORD PTR [rsp+0x80],rax
   1400038cf:	je     0x140003925
   1400038d1:	lea    rcx,[rsp+0x80]
   1400038d9:	call   0x140002ea8
   1400038de:	jmp    0x140003925
   1400038e0:	lea    rax,[rsp+0x190]
   1400038e8:	or     rsi,0xffffffffffffffff
   1400038ec:	inc    rsi
   1400038ef:	cmp    WORD PTR [rax+rsi*2],bx
   1400038f3:	jne    0x1400038ec
   1400038f5:	lea    eax,[rsi*2+0x2]
   1400038fc:	mov    DWORD PTR [rsp+0x28],eax
   140003900:	lea    rax,[rsp+0x190]
   140003908:	mov    r9d,0x1
   14000390e:	mov    QWORD PTR [rsp+0x20],rax
   140003913:	xor    r8d,r8d
   140003916:	mov    rdx,r15
   140003919:	mov    rcx,QWORD PTR [r13+0x0]
   14000391d:	call   QWORD PTR [rip+0x46dd]        # 0x140008000
   140003923:	mov    esi,eax
   140003925:	test   esi,esi
   140003927:	je     0x140003932
   140003929:	mov    ecx,esi
   14000392b:	call   0x140003c54
   140003930:	jmp    0x140003946
   140003932:	mov    rdx,QWORD PTR [rsp+0x70]
   140003937:	mov    rcx,r12
   14000393a:	call   0x140003c68
   14000393f:	test   eax,eax
   140003941:	cmovs  ebx,eax
   140003944:	mov    eax,ebx
   140003946:	mov    rcx,QWORD PTR [rsp+0x2190]
   14000394e:	xor    rcx,rsp
   140003951:	call   0x140006b00
   140003956:	add    rsp,0x21a0
   14000395d:	pop    r15
   14000395f:	pop    r14
   140003961:	pop    r13
   140003963:	pop    r12
   140003965:	pop    rdi
   140003966:	pop    rsi
   140003967:	pop    rbx
   140003968:	ret    
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x18],rbx
   140003975:	push   rdi
   140003976:	mov    eax,0x2030
   14000397b:	call   0x140007860
   140003980:	sub    rsp,rax
   140003983:	mov    rax,QWORD PTR [rip+0x7686]        # 0x14000b010
   14000398a:	xor    rax,rsp
   14000398d:	mov    QWORD PTR [rsp+0x2020],rax
   140003995:	cmp    WORD PTR [rdx],0x3d
   140003999:	mov    rdi,rdx
   14000399c:	mov    rbx,rcx
   14000399f:	jne    0x1400039f0
   1400039a1:	call   0x140003c68
   1400039a6:	test   eax,eax
   1400039a8:	js     0x1400039f2
   1400039aa:	mov    rcx,QWORD PTR [rbx]
   1400039ad:	movzx  eax,WORD PTR [rcx]
   1400039b0:	cmp    eax,0x20
   1400039b3:	ja     0x1400039d0
   1400039b5:	movabs rdx,0x100002600
   1400039bf:	bt     rdx,rax
   1400039c3:	jae    0x1400039d0
   1400039c5:	call   QWORD PTR [rip+0x966d]        # 0x14000d038
   1400039cb:	mov    QWORD PTR [rbx],rax
   1400039ce:	jmp    0x1400039aa
   1400039d0:	lea    rdx,[rsp+0x20]
   1400039d5:	mov    rcx,rbx
   1400039d8:	call   0x140003c68
   1400039dd:	test   eax,eax
   1400039df:	js     0x1400039f2
   1400039e1:	mov    rdx,rdi
   1400039e4:	mov    rcx,rbx
   1400039e7:	call   0x140003c68
   1400039ec:	test   eax,eax
   1400039ee:	js     0x1400039f2
   1400039f0:	xor    eax,eax
   1400039f2:	mov    rcx,QWORD PTR [rsp+0x2020]
   1400039fa:	xor    rcx,rsp
   1400039fd:	call   0x140006b00
   140003a02:	mov    rbx,QWORD PTR [rsp+0x2050]
   140003a0a:	add    rsp,0x2030
   140003a11:	pop    rdi
   140003a12:	ret    
   140003a13:	int3   
   140003a14:	int3   
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	mov    QWORD PTR [rsp+0x18],rbx
   140003a21:	push   rbp
   140003a22:	push   rsi
   140003a23:	push   rdi
   140003a24:	lea    rbp,[rsp-0x180]
   140003a2c:	sub    rsp,0x280
   140003a33:	mov    rax,QWORD PTR [rip+0x75d6]        # 0x14000b010
   140003a3a:	xor    rax,rsp
   140003a3d:	mov    QWORD PTR [rbp+0x170],rax
   140003a44:	xor    eax,eax
   140003a46:	mov    rdi,rcx
   140003a49:	mov    rcx,QWORD PTR [rcx]
   140003a4c:	mov    r9d,0x2001f
   140003a52:	mov    QWORD PTR [rsp+0x48],rax
   140003a57:	xor    r8d,r8d
   140003a5a:	mov    QWORD PTR [rsp+0x50],rax
   140003a5f:	mov    rsi,rdx
   140003a62:	mov    QWORD PTR [rsp+0x58],rax
   140003a67:	mov    QWORD PTR [rsp+0x60],rax
   140003a6c:	lea    rax,[rsp+0x60]
   140003a71:	mov    QWORD PTR [rsp+0x20],rax
   140003a76:	call   QWORD PTR [rip+0x458c]        # 0x140008008
   140003a7c:	mov    ebx,eax
   140003a7e:	test   eax,eax
   140003a80:	jne    0x140003b1f
   140003a86:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a8b:	test   rcx,rcx
   140003a8e:	je     0x140003a98
   140003a90:	call   QWORD PTR [rip+0x45fa]        # 0x140008090
   140003a96:	mov    ebx,eax
   140003a98:	mov    rcx,QWORD PTR [rsp+0x60]
   140003a9d:	mov    QWORD PTR [rsp+0x48],rcx
   140003aa2:	test   ebx,ebx
   140003aa4:	jne    0x140003b1f
   140003aa6:	jmp    0x140003ac2
   140003aa8:	lea    rdx,[rsp+0x70]
   140003aad:	lea    rcx,[rsp+0x48]
   140003ab2:	call   0x140003a1c
   140003ab7:	mov    ebx,eax
   140003ab9:	test   eax,eax
   140003abb:	jne    0x140003b1f
   140003abd:	mov    rcx,QWORD PTR [rsp+0x48]
   140003ac2:	lea    rax,[rsp+0x68]
   140003ac7:	mov    DWORD PTR [rsp+0x40],0x100
   140003acf:	mov    QWORD PTR [rsp+0x38],rax
   140003ad4:	lea    r9,[rsp+0x40]
   140003ad9:	and    QWORD PTR [rsp+0x30],0x0
   140003adf:	lea    r8,[rsp+0x70]
   140003ae4:	and    QWORD PTR [rsp+0x28],0x0
   140003aea:	xor    edx,edx
   140003aec:	and    QWORD PTR [rsp+0x20],0x0
   140003af2:	call   QWORD PTR [rip+0x4518]        # 0x140008010
   140003af8:	test   eax,eax
   140003afa:	je     0x140003aa8
   140003afc:	mov    rcx,QWORD PTR [rsp+0x48]
   140003b01:	test   rcx,rcx
   140003b04:	je     0x140003b12
   140003b06:	call   QWORD PTR [rip+0x4584]        # 0x140008090
   140003b0c:	and    QWORD PTR [rsp+0x48],0x0
   140003b12:	mov    rdx,rsi
   140003b15:	mov    rcx,rdi
   140003b18:	call   0x140003b84
   140003b1d:	mov    ebx,eax
   140003b1f:	mov    rcx,QWORD PTR [rsp+0x48]
   140003b24:	test   rcx,rcx
   140003b27:	je     0x140003b2f
   140003b29:	call   QWORD PTR [rip+0x4561]        # 0x140008090
   140003b2f:	mov    eax,ebx
   140003b31:	mov    rcx,QWORD PTR [rbp+0x170]
   140003b38:	xor    rcx,rsp
   140003b3b:	call   0x140006b00
   140003b40:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140003b48:	add    rsp,0x280
   140003b4f:	pop    rdi
   140003b50:	pop    rsi
   140003b51:	pop    rbp
   140003b52:	ret    
   140003b53:	int3   
   140003b54:	int3   
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	rex push rbx
   140003b5e:	sub    rsp,0x20
   140003b62:	mov    rbx,rcx
   140003b65:	mov    rcx,QWORD PTR [rcx]
   140003b68:	test   rcx,rcx
   140003b6b:	je     0x140003b77
   140003b6d:	call   QWORD PTR [rip+0x451d]        # 0x140008090
   140003b73:	and    QWORD PTR [rbx],0x0
   140003b77:	add    rsp,0x20
   140003b7b:	pop    rbx
   140003b7c:	ret    
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	int3   
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	mov    QWORD PTR [rsp+0x8],rbx
   140003b89:	mov    QWORD PTR [rsp+0x10],rsi
   140003b8e:	push   rdi
   140003b8f:	sub    rsp,0x20
   140003b93:	cmp    QWORD PTR [rcx+0x8],0x0
   140003b98:	mov    rsi,rdx
   140003b9b:	mov    rbx,rcx
   140003b9e:	jne    0x140003bfa
   140003ba0:	cmp    QWORD PTR [rcx+0x10],0x0
   140003ba5:	jne    0x140003bfa
   140003ba7:	lea    rcx,[rip+0x4f32]        # 0x140008ae0
   140003bae:	call   QWORD PTR [rip+0x4634]        # 0x1400081e8
   140003bb4:	test   rax,rax
   140003bb7:	je     0x140003bcf
   140003bb9:	lea    rdx,[rip+0x4f78]        # 0x140008b38
   140003bc0:	mov    rcx,rax
   140003bc3:	call   QWORD PTR [rip+0x460f]        # 0x1400081d8
   140003bc9:	mov    QWORD PTR [rbx+0x8],rax
   140003bcd:	jmp    0x140003bfa
   140003bcf:	xor    r8d,r8d
   140003bd2:	lea    rcx,[rip+0x4f6f]        # 0x140008b48
   140003bd9:	xor    edx,edx
   140003bdb:	call   QWORD PTR [rip+0x45ff]        # 0x1400081e0
   140003be1:	test   rax,rax
   140003be4:	je     0x140003bfa
   140003be6:	lea    rdx,[rip+0x4f7b]        # 0x140008b68
   140003bed:	mov    rcx,rax
   140003bf0:	call   QWORD PTR [rip+0x45e2]        # 0x1400081d8
   140003bf6:	mov    QWORD PTR [rbx+0x10],rax
   140003bfa:	mov    rdi,QWORD PTR [rbx+0x8]
   140003bfe:	test   rdi,rdi
   140003c01:	je     0x140003c1c
   140003c03:	mov    rcx,rdi
   140003c06:	call   QWORD PTR [rip+0x4714]        # 0x140008320
   140003c0c:	mov    rcx,QWORD PTR [rbx]
   140003c0f:	xor    r9d,r9d
   140003c12:	xor    r8d,r8d
   140003c15:	mov    rdx,rsi
   140003c18:	call   rdi
   140003c1a:	jmp    0x140003c3e
   140003c1c:	mov    rdi,QWORD PTR [rbx+0x10]
   140003c20:	test   rdi,rdi
   140003c23:	je     0x140003c38
   140003c25:	mov    rcx,rdi
   140003c28:	call   QWORD PTR [rip+0x46f2]        # 0x140008320
   140003c2e:	mov    rcx,QWORD PTR [rbx]
   140003c31:	mov    rdx,rsi
   140003c34:	call   rdi
   140003c36:	jmp    0x140003c3e
   140003c38:	call   QWORD PTR [rip+0x4562]        # 0x1400081a0
   140003c3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c43:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c48:	add    rsp,0x20
   140003c4c:	pop    rdi
   140003c4d:	ret    
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	int3   
   140003c51:	int3   
   140003c52:	int3   
   140003c53:	int3   
   140003c54:	movzx  eax,cx
   140003c57:	or     eax,0x80070000
   140003c5c:	test   ecx,ecx
   140003c5e:	cmovle eax,ecx
   140003c61:	ret    
   140003c62:	int3   
   140003c63:	int3   
   140003c64:	int3   
   140003c65:	int3   
   140003c66:	int3   
   140003c67:	int3   
   140003c68:	mov    rax,rsp
   140003c6b:	mov    QWORD PTR [rax+0x8],rbx
   140003c6f:	mov    QWORD PTR [rax+0x10],rbp
   140003c73:	mov    QWORD PTR [rax+0x18],rsi
   140003c77:	mov    QWORD PTR [rax+0x20],rdi
   140003c7b:	push   r12
   140003c7d:	push   r14
   140003c7f:	push   r15
   140003c81:	sub    rsp,0x20
   140003c85:	mov    rbx,rdx
   140003c88:	mov    rdi,rcx
   140003c8b:	movabs r12,0x100002600
   140003c95:	mov    rcx,QWORD PTR [rdi]
   140003c98:	movzx  eax,WORD PTR [rcx]
   140003c9b:	cmp    eax,0x20
   140003c9e:	ja     0x140003cb1
   140003ca0:	bt     r12,rax
   140003ca4:	jae    0x140003cb1
   140003ca6:	call   QWORD PTR [rip+0x938c]        # 0x14000d038
   140003cac:	mov    QWORD PTR [rdi],rax
   140003caf:	jmp    0x140003c95
   140003cb1:	xor    r14d,r14d
   140003cb4:	cmp    r14w,WORD PTR [rcx]
   140003cb8:	je     0x140003dce
   140003cbe:	lea    r15d,[r14+0x27]
   140003cc2:	lea    rbp,[rbx+0x2000]
   140003cc9:	cmp    r15w,WORD PTR [rcx]
   140003ccd:	jne    0x140003d6e
   140003cd3:	call   QWORD PTR [rip+0x935f]        # 0x14000d038
   140003cd9:	mov    QWORD PTR [rdi],rax
   140003cdc:	cmp    r14w,WORD PTR [rax]
   140003ce0:	je     0x140003d4e
   140003ce2:	mov    rcx,QWORD PTR [rdi]
   140003ce5:	cmp    r15w,WORD PTR [rcx]
   140003ce9:	jne    0x140003cf7
   140003ceb:	call   QWORD PTR [rip+0x9347]        # 0x14000d038
   140003cf1:	cmp    r15w,WORD PTR [rax]
   140003cf5:	jne    0x140003d4e
   140003cf7:	mov    rcx,QWORD PTR [rdi]
   140003cfa:	cmp    r15w,WORD PTR [rcx]
   140003cfe:	jne    0x140003d09
   140003d00:	call   QWORD PTR [rip+0x9332]        # 0x14000d038
   140003d06:	mov    QWORD PTR [rdi],rax
   140003d09:	mov    rsi,QWORD PTR [rdi]
   140003d0c:	mov    rcx,rsi
   140003d0f:	call   QWORD PTR [rip+0x9323]        # 0x14000d038
   140003d15:	mov    QWORD PTR [rdi],rax
   140003d18:	sub    rax,rsi
   140003d1b:	sar    rax,1
   140003d1e:	lea    rcx,[rax+0x1]
   140003d22:	lea    rcx,[rbx+rcx*2]
   140003d26:	cmp    rcx,rbp
   140003d29:	jae    0x140003dce
   140003d2f:	test   eax,eax
   140003d31:	jle    0x140003d49
   140003d33:	sub    rsi,rbx
   140003d36:	mov    ecx,eax
   140003d38:	movzx  eax,WORD PTR [rsi+rbx*1]
   140003d3c:	mov    WORD PTR [rbx],ax
   140003d3f:	add    rbx,0x2
   140003d43:	sub    rcx,0x1
   140003d47:	jne    0x140003d38
   140003d49:	mov    rax,QWORD PTR [rdi]
   140003d4c:	jmp    0x140003cdc
   140003d4e:	mov    rax,QWORD PTR [rdi]
   140003d51:	cmp    r14w,WORD PTR [rax]
   140003d55:	je     0x140003dce
   140003d57:	cmp    rbx,rbp
   140003d5a:	jae    0x140003dce
   140003d5c:	mov    WORD PTR [rbx],r14w
   140003d60:	mov    rcx,QWORD PTR [rdi]
   140003d63:	call   QWORD PTR [rip+0x92cf]        # 0x14000d038
   140003d69:	mov    QWORD PTR [rdi],rax
   140003d6c:	jmp    0x140003dca
   140003d6e:	mov    rsi,QWORD PTR [rdi]
   140003d71:	movzx  eax,WORD PTR [rsi]
   140003d74:	cmp    eax,0x20
   140003d77:	ja     0x140003d7f
   140003d79:	bt     r12,rax
   140003d7d:	jb     0x140003dc1
   140003d7f:	mov    rcx,rsi
   140003d82:	call   QWORD PTR [rip+0x92b0]        # 0x14000d038
   140003d88:	mov    QWORD PTR [rdi],rax
   140003d8b:	sub    rax,rsi
   140003d8e:	sar    rax,1
   140003d91:	lea    rcx,[rax+0x1]
   140003d95:	lea    rcx,[rbx+rcx*2]
   140003d99:	cmp    rcx,rbp
   140003d9c:	jae    0x140003dce
   140003d9e:	test   eax,eax
   140003da0:	jle    0x140003db8
   140003da2:	sub    rsi,rbx
   140003da5:	mov    ecx,eax
   140003da7:	movzx  eax,WORD PTR [rsi+rbx*1]
   140003dab:	mov    WORD PTR [rbx],ax
   140003dae:	add    rbx,0x2
   140003db2:	sub    rcx,0x1
   140003db6:	jne    0x140003da7
   140003db8:	mov    rax,QWORD PTR [rdi]
   140003dbb:	cmp    r14w,WORD PTR [rax]
   140003dbf:	jne    0x140003d6e
   140003dc1:	cmp    rbx,rbp
   140003dc4:	jae    0x140003dce
   140003dc6:	mov    WORD PTR [rbx],r14w
   140003dca:	xor    eax,eax
   140003dcc:	jmp    0x140003dd3
   140003dce:	mov    eax,0x80020009
   140003dd3:	mov    rbx,QWORD PTR [rsp+0x40]
   140003dd8:	mov    rbp,QWORD PTR [rsp+0x48]
   140003ddd:	mov    rsi,QWORD PTR [rsp+0x50]
   140003de2:	mov    rdi,QWORD PTR [rsp+0x58]
   140003de7:	add    rsp,0x20
   140003deb:	pop    r15
   140003ded:	pop    r14
   140003def:	pop    r12
   140003df1:	ret    
   140003df2:	int3   
   140003df3:	int3   
   140003df4:	int3   
   140003df5:	int3   
   140003df6:	int3   
   140003df7:	int3   
   140003df8:	rex push rbp
   140003dfa:	push   rbx
   140003dfb:	push   rsi
   140003dfc:	push   rdi
   140003dfd:	lea    rbp,[rsp-0x21f8]
   140003e05:	mov    eax,0x22f8
   140003e0a:	call   0x140007860
   140003e0f:	sub    rsp,rax
   140003e12:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140003e1a:	mov    rax,QWORD PTR [rip+0x71ef]        # 0x14000b010
   140003e21:	xor    rax,rsp
   140003e24:	mov    QWORD PTR [rbp+0x21e0],rax
   140003e2b:	mov    DWORD PTR [rsp+0x78],r9d
   140003e30:	mov    QWORD PTR [rbp-0x78],r8
   140003e34:	mov    rdi,rdx
   140003e37:	mov    rax,rcx
   140003e3a:	mov    QWORD PTR [rsp+0x68],rcx
   140003e3f:	xor    ecx,ecx
   140003e41:	mov    esi,ecx
   140003e43:	mov    QWORD PTR [rbp-0x70],rcx
   140003e47:	mov    QWORD PTR [rbp-0x68],rcx
   140003e4b:	mov    QWORD PTR [rbp-0x60],rcx
   140003e4f:	mov    ecx,DWORD PTR [rbp+0x2240]
   140003e55:	mov    DWORD PTR [rbp-0x40],ecx
   140003e58:	mov    rcx,rax
   140003e5b:	call   0x140003c68
   140003e60:	test   eax,eax
   140003e62:	mov    ebx,eax
   140003e64:	js     0x140004560
   140003e6a:	cmp    WORD PTR [rdi],0x7d
   140003e6e:	je     0x140004560
   140003e74:	mov    eax,0x1
   140003e79:	mov    DWORD PTR [rsp+0x70],eax
   140003e7d:	lea    rdx,[rip+0x4714]        # 0x140008598
   140003e84:	mov    rcx,rdi
   140003e87:	call   QWORD PTR [rip+0x4363]        # 0x1400081f0
   140003e8d:	xor    ecx,ecx
   140003e8f:	mov    ebx,ecx
   140003e91:	test   eax,eax
   140003e93:	sete   bl
   140003e96:	mov    DWORD PTR [rsp+0x60],ebx
   140003e9a:	lea    rdx,[rip+0x46c7]        # 0x140008568
   140003ea1:	mov    rcx,rdi
   140003ea4:	call   QWORD PTR [rip+0x4346]        # 0x1400081f0
   140003eaa:	test   eax,eax
   140003eac:	je     0x140003eb6
   140003eae:	test   ebx,ebx
   140003eb0:	je     0x140003f7b
   140003eb6:	mov    rdx,rdi
   140003eb9:	mov    rcx,QWORD PTR [rsp+0x68]
   140003ebe:	call   0x140003c68
   140003ec3:	mov    ebx,eax
   140003ec5:	xor    edx,edx
   140003ec7:	test   eax,eax
   140003ec9:	js     0x140004560
   140003ecf:	cmp    DWORD PTR [rsp+0x78],edx
   140003ed3:	je     0x140003f7b
   140003ed9:	mov    QWORD PTR [rbp-0x58],rdx
   140003edd:	mov    QWORD PTR [rbp-0x50],rdx
   140003ee1:	mov    QWORD PTR [rbp-0x48],rdx
   140003ee5:	mov    rcx,rdi
   140003ee8:	movzx  eax,WORD PTR [rdi]
   140003eeb:	jmp    0x140003eff
   140003eed:	cmp    ax,0x5c
   140003ef1:	je     0x140003f06
   140003ef3:	call   QWORD PTR [rip+0x913f]        # 0x14000d038
   140003ef9:	mov    rcx,rax
   140003efc:	movzx  eax,WORD PTR [rax]
   140003eff:	test   ax,ax
   140003f02:	jne    0x140003eed
   140003f04:	jmp    0x140003f0f
   140003f06:	test   rcx,rcx
   140003f09:	jne    0x140004522
   140003f0f:	lea    rbx,[rip+0x478a]        # 0x1400086a0
   140003f16:	mov    rdx,QWORD PTR [rbx]
   140003f19:	mov    rcx,rdi
   140003f1c:	call   QWORD PTR [rip+0x42ce]        # 0x1400081f0
   140003f22:	test   eax,eax
   140003f24:	je     0x140003f4a
   140003f26:	add    rbx,0x8
   140003f2a:	lea    rax,[rip+0x47cf]        # 0x140008700
   140003f31:	cmp    rbx,rax
   140003f34:	jl     0x140003f16
   140003f36:	mov    rax,QWORD PTR [rbp-0x78]
   140003f3a:	mov    QWORD PTR [rbp-0x58],rax
   140003f3e:	mov    rdx,rdi
   140003f41:	lea    rcx,[rbp-0x58]
   140003f45:	call   0x140003a1c
   140003f4a:	xor    eax,eax
   140003f4c:	cmp    DWORD PTR [rsp+0x60],eax
   140003f50:	je     0x140003f7b
   140003f52:	mov    rdx,rdi
   140003f55:	mov    rcx,QWORD PTR [rsp+0x68]
   140003f5a:	call   0x140003c68
   140003f5f:	mov    ebx,eax
   140003f61:	test   eax,eax
   140003f63:	js     0x140004560
   140003f69:	mov    rdx,rdi
   140003f6c:	mov    rcx,QWORD PTR [rsp+0x68]
   140003f71:	call   0x140003970
   140003f76:	jmp    0x1400041cf
   140003f7b:	lea    rdx,[rip+0x45fe]        # 0x140008580
   140003f82:	mov    rcx,rdi
   140003f85:	call   QWORD PTR [rip+0x4265]        # 0x1400081f0
   140003f8b:	xor    ecx,ecx
   140003f8d:	test   eax,eax
   140003f8f:	jne    0x140003fac
   140003f91:	mov    DWORD PTR [rsp+0x70],ecx
   140003f95:	mov    rdx,rdi
   140003f98:	mov    rcx,QWORD PTR [rsp+0x68]
   140003f9d:	call   0x140003c68
   140003fa2:	mov    ebx,eax
   140003fa4:	test   eax,eax
   140003fa6:	js     0x140004560
   140003fac:	lea    rdx,[rip+0x45ad]        # 0x140008560
   140003fb3:	mov    rcx,rdi
   140003fb6:	call   QWORD PTR [rip+0x4234]        # 0x1400081f0
   140003fbc:	xor    edx,edx
   140003fbe:	test   eax,eax
   140003fc0:	jne    0x1400040b3
   140003fc6:	lea    rdx,[rbp+0x1e0]
   140003fcd:	mov    rcx,QWORD PTR [rsp+0x68]
   140003fd2:	call   0x140003c68
   140003fd7:	mov    ebx,eax
   140003fd9:	test   eax,eax
   140003fdb:	js     0x140004560
   140003fe1:	mov    rdx,rdi
   140003fe4:	mov    rcx,QWORD PTR [rsp+0x68]
   140003fe9:	call   0x140003c68
   140003fee:	mov    ebx,eax
   140003ff0:	xor    edx,edx
   140003ff2:	test   eax,eax
   140003ff4:	js     0x140004560
   140003ffa:	cmp    WORD PTR [rdi],0x3d
   140003ffe:	jne    0x140004522
   140004004:	cmp    DWORD PTR [rsp+0x78],edx
   140004008:	je     0x140004037
   14000400a:	mov    QWORD PTR [rbp-0x50],rdx
   14000400e:	mov    QWORD PTR [rbp-0x48],rdx
   140004012:	mov    rax,QWORD PTR [rbp-0x78]
   140004016:	mov    QWORD PTR [rbp-0x58],rax
   14000401a:	mov    r9,rdi
   14000401d:	lea    r8,[rbp+0x1e0]
   140004024:	lea    rdx,[rbp-0x58]
   140004028:	mov    rcx,QWORD PTR [rsp+0x68]
   14000402d:	call   0x140003460
   140004032:	jmp    0x1400041cf
   140004037:	cmp    DWORD PTR [rbp+0x2240],edx
   14000403d:	jne    0x1400040a1
   14000403f:	cmp    DWORD PTR [rsp+0x70],edx
   140004043:	je     0x1400040a1
   140004045:	mov    QWORD PTR [rsp+0x70],rdx
   14000404a:	lea    rax,[rsp+0x70]
   14000404f:	mov    QWORD PTR [rsp+0x20],rax
   140004054:	mov    r9d,0x20006
   14000405a:	xor    r8d,r8d
   14000405d:	mov    rcx,QWORD PTR [rbp-0x78]
   140004061:	call   QWORD PTR [rip+0x3fa1]        # 0x140008008
   140004067:	test   eax,eax
   140004069:	jne    0x140004557
   14000406f:	mov    rbx,QWORD PTR [rsp+0x70]
   140004074:	mov    QWORD PTR [rbp-0x80],rbx
   140004078:	lea    rdx,[rbp+0x1e0]
   14000407f:	mov    rcx,rbx
   140004082:	call   QWORD PTR [rip+0x3fd0]        # 0x140008058
   140004088:	test   eax,0xfffffffd
   14000408d:	jne    0x140004508
   140004093:	test   rbx,rbx
   140004096:	je     0x1400040a1
   140004098:	mov    rcx,rbx
   14000409b:	call   QWORD PTR [rip+0x3fef]        # 0x140008090
   1400040a1:	mov    rdx,rdi
   1400040a4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400040a9:	call   0x140003970
   1400040ae:	jmp    0x140003e60
   1400040b3:	mov    rcx,rdi
   1400040b6:	movzx  eax,WORD PTR [rdi]
   1400040b9:	jmp    0x1400040cf
   1400040bb:	cmp    ax,0x5c
   1400040bf:	je     0x1400040d6
   1400040c1:	call   QWORD PTR [rip+0x8f71]        # 0x14000d038
   1400040c7:	mov    rcx,rax
   1400040ca:	movzx  eax,WORD PTR [rax]
   1400040cd:	xor    edx,edx
   1400040cf:	test   ax,ax
   1400040d2:	jne    0x1400040bb
   1400040d4:	jmp    0x1400040df
   1400040d6:	test   rcx,rcx
   1400040d9:	jne    0x140004522
   1400040df:	cmp    DWORD PTR [rsp+0x78],edx
   1400040e3:	je     0x140004230
   1400040e9:	mov    QWORD PTR [rsp+0x70],rdx
   1400040ee:	lea    rax,[rsp+0x70]
   1400040f3:	mov    QWORD PTR [rsp+0x20],rax
   1400040f8:	mov    r9d,0x2001f
   1400040fe:	xor    r8d,r8d
   140004101:	mov    rdx,rdi
   140004104:	mov    rbx,QWORD PTR [rbp-0x78]
   140004108:	mov    rcx,rbx
   14000410b:	call   QWORD PTR [rip+0x3ef7]        # 0x140008008
   140004111:	xor    ecx,ecx
   140004113:	test   eax,eax
   140004115:	jne    0x140004136
   140004117:	mov    eax,ecx
   140004119:	test   rsi,rsi
   14000411c:	je     0x140004129
   14000411e:	mov    rcx,rsi
   140004121:	call   QWORD PTR [rip+0x3f69]        # 0x140008090
   140004127:	xor    ecx,ecx
   140004129:	mov    rsi,QWORD PTR [rsp+0x70]
   14000412e:	mov    QWORD PTR [rbp-0x70],rsi
   140004132:	test   eax,eax
   140004134:	je     0x140004198
   140004136:	mov    QWORD PTR [rsp+0x70],rcx
   14000413b:	lea    rax,[rsp+0x70]
   140004140:	mov    QWORD PTR [rsp+0x20],rax
   140004145:	mov    r9d,0x20019
   14000414b:	xor    r8d,r8d
   14000414e:	mov    rdx,rdi
   140004151:	mov    rcx,rbx
   140004154:	call   QWORD PTR [rip+0x3eae]        # 0x140008008
   14000415a:	xor    ecx,ecx
   14000415c:	test   eax,eax
   14000415e:	jne    0x14000417d
   140004160:	mov    eax,ecx
   140004162:	test   rsi,rsi
   140004165:	je     0x140004170
   140004167:	mov    rcx,rsi
   14000416a:	call   QWORD PTR [rip+0x3f20]        # 0x140008090
   140004170:	mov    rsi,QWORD PTR [rsp+0x70]
   140004175:	mov    QWORD PTR [rbp-0x70],rsi
   140004179:	test   eax,eax
   14000417b:	je     0x140004198
   14000417d:	mov    r8,rdi
   140004180:	mov    rdx,rbx
   140004183:	lea    rcx,[rbp-0x70]
   140004187:	call   0x1400032e0
   14000418c:	test   eax,eax
   14000418e:	jne    0x140004529
   140004194:	mov    rsi,QWORD PTR [rbp-0x70]
   140004198:	mov    rdx,rdi
   14000419b:	mov    rcx,QWORD PTR [rsp+0x68]
   1400041a0:	call   0x140003c68
   1400041a5:	mov    ebx,eax
   1400041a7:	xor    edx,edx
   1400041a9:	test   eax,eax
   1400041ab:	js     0x140004560
   1400041b1:	cmp    WORD PTR [rdi],0x3d
   1400041b5:	jne    0x1400041db
   1400041b7:	mov    r9,rdi
   1400041ba:	xor    r8d,r8d
   1400041bd:	lea    rdx,[rbp-0x70]
   1400041c1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400041c6:	call   0x140003460
   1400041cb:	mov    rsi,QWORD PTR [rbp-0x70]
   1400041cf:	xor    edx,edx
   1400041d1:	mov    ebx,eax
   1400041d3:	test   eax,eax
   1400041d5:	js     0x140004560
   1400041db:	cmp    WORD PTR [rdi],0x7b
   1400041df:	jne    0x140003e6a
   1400041e5:	or     rax,0xffffffffffffffff
   1400041e9:	inc    rax
   1400041ec:	cmp    WORD PTR [rdi+rax*2],dx
   1400041f0:	jne    0x1400041e9
   1400041f2:	mov    ecx,0x1
   1400041f7:	cmp    rax,rcx
   1400041fa:	jne    0x140003e6a
   140004200:	mov    DWORD PTR [rsp+0x20],edx
   140004204:	mov    r9d,DWORD PTR [rsp+0x78]
   140004209:	mov    r8,rsi
   14000420c:	mov    rdx,rdi
   14000420f:	mov    rcx,QWORD PTR [rsp+0x68]
   140004214:	call   0x140003df8
   140004219:	mov    ebx,eax
   14000421b:	test   eax,eax
   14000421d:	js     0x140004560
   140004223:	mov    rdx,rdi
   140004226:	mov    rcx,QWORD PTR [rsp+0x68]
   14000422b:	jmp    0x140003e5b
   140004230:	mov    ebx,DWORD PTR [rbp+0x2240]
   140004236:	test   ebx,ebx
   140004238:	jne    0x140004289
   14000423a:	mov    QWORD PTR [rbp-0x80],rdx
   14000423e:	lea    rax,[rbp-0x80]
   140004242:	mov    QWORD PTR [rsp+0x20],rax
   140004247:	mov    r9d,0x20019
   14000424d:	xor    r8d,r8d
   140004250:	mov    rdx,rdi
   140004253:	mov    rcx,QWORD PTR [rbp-0x78]
   140004257:	call   QWORD PTR [rip+0x3dab]        # 0x140008008
   14000425d:	mov    DWORD PTR [rsp+0x60],eax
   140004261:	xor    edx,edx
   140004263:	test   eax,eax
   140004265:	jne    0x140004294
   140004267:	mov    eax,edx
   140004269:	mov    DWORD PTR [rsp+0x60],edx
   14000426d:	test   rsi,rsi
   140004270:	je     0x14000427f
   140004272:	mov    rcx,rsi
   140004275:	call   QWORD PTR [rip+0x3e15]        # 0x140008090
   14000427b:	mov    DWORD PTR [rsp+0x60],eax
   14000427f:	mov    rsi,QWORD PTR [rbp-0x80]
   140004283:	mov    QWORD PTR [rbp-0x70],rsi
   140004287:	jmp    0x140004292
   140004289:	mov    eax,0x2
   14000428e:	mov    DWORD PTR [rsp+0x60],eax
   140004292:	test   eax,eax
   140004294:	mov    eax,0x1
   140004299:	cmovne ebx,eax
   14000429c:	mov    DWORD PTR [rbp+0x2240],ebx
   1400042a2:	or     r9,0xffffffffffffffff
   1400042a6:	mov    r8,rdi
   1400042a9:	mov    edx,0x104
   1400042ae:	lea    rcx,[rbp-0x30]
   1400042b2:	call   QWORD PTR [rip+0x3f70]        # 0x140008228
   1400042b8:	test   eax,eax
   1400042ba:	je     0x1400042e0
   1400042bc:	cmp    eax,0xc
   1400042bf:	je     0x14000454c
   1400042c5:	cmp    eax,0x16
   1400042c8:	je     0x140004541
   1400042ce:	cmp    eax,0x22
   1400042d1:	je     0x140004541
   1400042d7:	cmp    eax,0x50
   1400042da:	jne    0x140004536
   1400042e0:	mov    rdx,rdi
   1400042e3:	mov    rcx,QWORD PTR [rsp+0x68]
   1400042e8:	call   0x140003c68
   1400042ed:	mov    ebx,eax
   1400042ef:	test   eax,eax
   1400042f1:	js     0x140004560
   1400042f7:	mov    rdx,rdi
   1400042fa:	mov    rcx,QWORD PTR [rsp+0x68]
   1400042ff:	call   0x140003970
   140004304:	mov    ebx,eax
   140004306:	xor    edx,edx
   140004308:	test   eax,eax
   14000430a:	js     0x140004560
   140004310:	cmp    WORD PTR [rdi],0x7b
   140004314:	jne    0x140004377
   140004316:	or     rax,0xffffffffffffffff
   14000431a:	inc    rax
   14000431d:	cmp    WORD PTR [rdi+rax*2],dx
   140004321:	jne    0x14000431a
   140004323:	mov    ecx,0x1
   140004328:	cmp    rax,rcx
   14000432b:	jne    0x140004377
   14000432d:	mov    eax,DWORD PTR [rbp+0x2240]
   140004333:	mov    DWORD PTR [rsp+0x20],eax
   140004337:	xor    r9d,r9d
   14000433a:	mov    r8,rsi
   14000433d:	mov    rdx,rdi
   140004340:	mov    rcx,QWORD PTR [rsp+0x68]
   140004345:	call   0x140003df8
   14000434a:	mov    ebx,eax
   14000434c:	xor    edx,edx
   14000434e:	test   eax,eax
   140004350:	jns    0x14000435e
   140004352:	cmp    DWORD PTR [rbp+0x2240],edx
   140004358:	je     0x140004560
   14000435e:	mov    rdx,rdi
   140004361:	mov    rcx,QWORD PTR [rsp+0x68]
   140004366:	call   0x140003c68
   14000436b:	mov    ebx,eax
   14000436d:	xor    edx,edx
   14000436f:	test   eax,eax
   140004371:	js     0x140004560
   140004377:	mov    eax,DWORD PTR [rbp-0x40]
   14000437a:	mov    DWORD PTR [rbp+0x2240],eax
   140004380:	mov    ecx,DWORD PTR [rsp+0x60]
   140004384:	cmp    ecx,0x2
   140004387:	je     0x140003e6a
   14000438d:	test   ecx,ecx
   14000438f:	je     0x14000439e
   140004391:	test   eax,eax
   140004393:	je     0x140004559
   140004399:	jmp    0x140003e6a
   14000439e:	test   eax,eax
   1400043a0:	je     0x140004455
   1400043a6:	mov    DWORD PTR [rsp+0x60],edx
   1400043aa:	mov    QWORD PTR [rsp+0x58],rdx
   1400043af:	mov    QWORD PTR [rsp+0x50],rdx
   1400043b4:	mov    QWORD PTR [rsp+0x48],rdx
   1400043b9:	mov    QWORD PTR [rsp+0x40],rdx
   1400043be:	mov    QWORD PTR [rsp+0x38],rdx
   1400043c3:	mov    QWORD PTR [rsp+0x30],rdx
   1400043c8:	mov    QWORD PTR [rsp+0x28],rdx
   1400043cd:	lea    rax,[rsp+0x60]
   1400043d2:	mov    QWORD PTR [rsp+0x20],rax
   1400043d7:	xor    r9d,r9d
   1400043da:	xor    r8d,r8d
   1400043dd:	xor    edx,edx
   1400043df:	mov    rcx,rsi
   1400043e2:	call   QWORD PTR [rip+0x3cb0]        # 0x140008098
   1400043e8:	xor    edx,edx
   1400043ea:	test   eax,eax
   1400043ec:	jne    0x140004455
   1400043ee:	mov    eax,edx
   1400043f0:	cmp    DWORD PTR [rsp+0x60],edx
   1400043f4:	seta   al
   1400043f7:	test   eax,eax
   1400043f9:	je     0x140004455
   1400043fb:	lea    rax,[rip+0x429e]        # 0x1400086a0
   140004402:	mov    QWORD PTR [rbp-0x80],rax
   140004406:	mov    rdx,QWORD PTR [rax]
   140004409:	lea    rcx,[rbp-0x30]
   14000440d:	call   QWORD PTR [rip+0x3ddd]        # 0x1400081f0
   140004413:	xor    edx,edx
   140004415:	test   eax,eax
   140004417:	je     0x140003e6a
   14000441d:	mov    rax,QWORD PTR [rbp-0x80]
   140004421:	add    rax,0x8
   140004425:	mov    QWORD PTR [rbp-0x80],rax
   140004429:	lea    rcx,[rip+0x42d0]        # 0x140008700
   140004430:	cmp    rax,rcx
   140004433:	jl     0x140004406
   140004435:	cmp    DWORD PTR [rsp+0x70],edx
   140004439:	je     0x140003e6a
   14000443f:	lea    rdx,[rbp-0x30]
   140004443:	lea    rcx,[rbp-0x70]
   140004447:	call   0x140003a1c
   14000444c:	mov    rsi,QWORD PTR [rbp-0x70]
   140004450:	jmp    0x140003e6a
   140004455:	mov    DWORD PTR [rsp+0x60],edx
   140004459:	mov    QWORD PTR [rsp+0x58],rdx
   14000445e:	mov    QWORD PTR [rsp+0x50],rdx
   140004463:	mov    QWORD PTR [rsp+0x48],rdx
   140004468:	mov    QWORD PTR [rsp+0x40],rdx
   14000446d:	mov    QWORD PTR [rsp+0x38],rdx
   140004472:	mov    QWORD PTR [rsp+0x30],rdx
   140004477:	mov    QWORD PTR [rsp+0x28],rdx
   14000447c:	lea    rax,[rsp+0x60]
   140004481:	mov    QWORD PTR [rsp+0x20],rax
   140004486:	xor    r9d,r9d
   140004489:	xor    r8d,r8d
   14000448c:	xor    edx,edx
   14000448e:	mov    rcx,rsi
   140004491:	call   QWORD PTR [rip+0x3c01]        # 0x140008098
   140004497:	xor    edx,edx
   140004499:	test   eax,eax
   14000449b:	je     0x1400044a3
   14000449d:	mov    DWORD PTR [rsp+0x60],edx
   1400044a1:	jmp    0x1400044b0
   1400044a3:	mov    eax,edx
   1400044a5:	cmp    DWORD PTR [rsp+0x60],edx
   1400044a9:	seta   al
   1400044ac:	mov    DWORD PTR [rsp+0x60],eax
   1400044b0:	test   rsi,rsi
   1400044b3:	je     0x1400044ce
   1400044b5:	mov    rcx,rsi
   1400044b8:	call   QWORD PTR [rip+0x3bd2]        # 0x140008090
   1400044be:	xor    edx,edx
   1400044c0:	mov    esi,edx
   1400044c2:	mov    QWORD PTR [rbp-0x70],rdx
   1400044c6:	test   eax,eax
   1400044c8:	jne    0x140004557
   1400044ce:	cmp    DWORD PTR [rsp+0x70],edx
   1400044d2:	je     0x140003e6a
   1400044d8:	cmp    DWORD PTR [rsp+0x60],edx
   1400044dc:	jne    0x140003e6a
   1400044e2:	mov    QWORD PTR [rbp-0x50],rdx
   1400044e6:	mov    QWORD PTR [rbp-0x48],rdx
   1400044ea:	mov    rax,QWORD PTR [rbp-0x78]
   1400044ee:	mov    QWORD PTR [rbp-0x58],rax
   1400044f2:	lea    rdx,[rbp-0x30]
   1400044f6:	lea    rcx,[rbp-0x58]
   1400044fa:	call   0x140003b84
   1400044ff:	test   eax,eax
   140004501:	jne    0x140004557
   140004503:	jmp    0x140003e6a
   140004508:	mov    ecx,eax
   14000450a:	call   0x140003c54
   14000450f:	mov    ebx,eax
   140004511:	mov    rcx,QWORD PTR [rbp-0x80]
   140004515:	test   rcx,rcx
   140004518:	je     0x140004560
   14000451a:	call   QWORD PTR [rip+0x3b70]        # 0x140008090
   140004520:	jmp    0x140004560
   140004522:	mov    ebx,0x80020009
   140004527:	jmp    0x140004560
   140004529:	mov    ecx,eax
   14000452b:	call   0x140003c54
   140004530:	mov    rsi,QWORD PTR [rbp-0x70]
   140004534:	jmp    0x14000455e
   140004536:	mov    ecx,0x80004005
   14000453b:	call   0x1400051b0
   140004540:	int3   
   140004541:	mov    ecx,0x80070057
   140004546:	call   0x1400051b0
   14000454b:	int3   
   14000454c:	mov    ecx,0x8007000e
   140004551:	call   0x1400051b0
   140004556:	int3   
   140004557:	mov    ecx,eax
   140004559:	call   0x140003c54
   14000455e:	mov    ebx,eax
   140004560:	test   rsi,rsi
   140004563:	je     0x14000456e
   140004565:	mov    rcx,rsi
   140004568:	call   QWORD PTR [rip+0x3b22]        # 0x140008090
   14000456e:	mov    eax,ebx
   140004570:	mov    rcx,QWORD PTR [rbp+0x21e0]
   140004577:	xor    rcx,rsp
   14000457a:	call   0x140006b00
   14000457f:	add    rsp,0x22f8
   140004586:	pop    rdi
   140004587:	pop    rsi
   140004588:	pop    rbx
   140004589:	pop    rbp
   14000458a:	ret    
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	int3   
   140004591:	int3   
   140004592:	int3   
   140004593:	int3   
   140004594:	mov    QWORD PTR [rsp+0x20],rbx
   140004599:	push   rbp
   14000459a:	push   rsi
   14000459b:	push   rdi
   14000459c:	push   r12
   14000459e:	push   r13
   1400045a0:	push   r14
   1400045a2:	push   r15
   1400045a4:	mov    eax,0x2050
   1400045a9:	call   0x140007860
   1400045ae:	sub    rsp,rax
   1400045b1:	mov    rax,QWORD PTR [rip+0x6a58]        # 0x14000b010
   1400045b8:	xor    rax,rsp
   1400045bb:	mov    QWORD PTR [rsp+0x2040],rax
   1400045c3:	xor    r12d,r12d
   1400045c6:	mov    r15d,r8d
   1400045c9:	mov    QWORD PTR [rsp+0x30],r12
   1400045ce:	mov    rdi,rcx
   1400045d1:	mov    ebp,r12d
   1400045d4:	test   rdx,rdx
   1400045d7:	je     0x1400045ec
   1400045d9:	lea    r8,[rsp+0x30]
   1400045de:	call   0x140003030
   1400045e3:	mov    rbp,QWORD PTR [rsp+0x30]
   1400045e8:	mov    ebx,eax
   1400045ea:	jmp    0x1400045f1
   1400045ec:	mov    ebx,0x80004003
   1400045f1:	test   ebx,ebx
   1400045f3:	js     0x14000471f
   1400045f9:	mov    QWORD PTR [rdi],rbp
   1400045fc:	cmp    r12w,WORD PTR [rbp+0x0]
   140004601:	je     0x140004716
   140004607:	lea    r13,[rip+0x43f2]        # 0x140008a00
   14000460e:	lea    rdx,[rsp+0x40]
   140004613:	mov    rcx,rdi
   140004616:	call   0x140003c68
   14000461b:	mov    ebx,eax
   14000461d:	test   eax,eax
   14000461f:	js     0x140004716
   140004625:	mov    esi,r12d
   140004628:	mov    rbx,r12
   14000462b:	mov    r14,r13
   14000462e:	mov    rdx,QWORD PTR [r14]
   140004631:	lea    rcx,[rsp+0x40]
   140004636:	call   QWORD PTR [rip+0x3bb4]        # 0x1400081f0
   14000463c:	test   eax,eax
   14000463e:	je     0x140004657
   140004640:	inc    esi
   140004642:	inc    rbx
   140004645:	movsxd rax,esi
   140004648:	add    r14,0x10
   14000464c:	cmp    rax,0xe
   140004650:	jb     0x14000462e
   140004652:	mov    rsi,r12
   140004655:	jmp    0x14000465f
   140004657:	add    rbx,rbx
   14000465a:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   14000465f:	test   rsi,rsi
   140004662:	je     0x140004711
   140004668:	lea    rdx,[rsp+0x40]
   14000466d:	mov    rcx,rdi
   140004670:	call   0x140003c68
   140004675:	mov    ebx,eax
   140004677:	test   eax,eax
   140004679:	js     0x140004716
   14000467f:	mov    eax,0x7b
   140004684:	cmp    ax,WORD PTR [rsp+0x40]
   140004689:	jne    0x140004711
   14000468f:	mov    DWORD PTR [rsp+0x20],r12d
   140004694:	mov    r8,rsi
   140004697:	lea    rdx,[rsp+0x40]
   14000469c:	mov    rcx,rdi
   14000469f:	test   r15d,r15d
   1400046a2:	je     0x1400046d2
   1400046a4:	mov    r14,QWORD PTR [rdi]
   1400046a7:	mov    r9d,r15d
   1400046aa:	call   0x140003df8
   1400046af:	mov    ebx,eax
   1400046b1:	test   eax,eax
   1400046b3:	jns    0x1400046e0
   1400046b5:	xor    r9d,r9d
   1400046b8:	mov    QWORD PTR [rdi],r14
   1400046bb:	mov    r8,rsi
   1400046be:	mov    DWORD PTR [rsp+0x20],r12d
   1400046c3:	lea    rdx,[rsp+0x40]
   1400046c8:	mov    rcx,rdi
   1400046cb:	call   0x140003df8
   1400046d0:	jmp    0x140004716
   1400046d2:	xor    r9d,r9d
   1400046d5:	call   0x140003df8
   1400046da:	mov    ebx,eax
   1400046dc:	test   eax,eax
   1400046de:	js     0x140004716
   1400046e0:	mov    rcx,QWORD PTR [rdi]
   1400046e3:	movzx  eax,WORD PTR [rcx]
   1400046e6:	cmp    eax,0x20
   1400046e9:	ja     0x140004706
   1400046eb:	movabs rdx,0x100002600
   1400046f5:	bt     rdx,rax
   1400046f9:	jae    0x140004706
   1400046fb:	call   QWORD PTR [rip+0x8937]        # 0x14000d038
   140004701:	mov    QWORD PTR [rdi],rax
   140004704:	jmp    0x1400046e0
   140004706:	cmp    r12w,WORD PTR [rcx]
   14000470a:	je     0x140004716
   14000470c:	jmp    0x14000460e
   140004711:	mov    ebx,0x80020009
   140004716:	mov    rcx,rbp
   140004719:	call   QWORD PTR [rip+0x8951]        # 0x14000d070
   14000471f:	mov    eax,ebx
   140004721:	mov    rcx,QWORD PTR [rsp+0x2040]
   140004729:	xor    rcx,rsp
   14000472c:	call   0x140006b00
   140004731:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140004739:	add    rsp,0x2050
   140004740:	pop    r15
   140004742:	pop    r14
   140004744:	pop    r13
   140004746:	pop    r12
   140004748:	pop    rdi
   140004749:	pop    rsi
   14000474a:	pop    rbp
   14000474b:	ret    
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	int3   
   140004751:	int3   
   140004752:	int3   
   140004753:	int3   
   140004754:	mov    rax,rsp
   140004757:	push   rsi
   140004758:	push   rdi
   140004759:	push   r14
   14000475b:	sub    rsp,0x490
   140004762:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000476b:	mov    QWORD PTR [rax+0x8],rbx
   14000476f:	mov    rax,QWORD PTR [rip+0x689a]        # 0x14000b010
   140004776:	xor    rax,rsp
   140004779:	mov    QWORD PTR [rsp+0x480],rax
   140004781:	mov    r14,r9
   140004784:	mov    rdi,r8
   140004787:	mov    rax,rdx
   14000478a:	xor    ebx,ebx
   14000478c:	mov    QWORD PTR [rsp+0x60],rbx
   140004791:	mov    QWORD PTR [rsp+0x50],rcx
   140004796:	mov    QWORD PTR [rsp+0x48],rbx
   14000479b:	mov    QWORD PTR [rsp+0x70],rbx
   1400047a0:	xor    edx,edx
   1400047a2:	lea    r8d,[rbx+0x2]
   1400047a6:	mov    rcx,rax
   1400047a9:	call   QWORD PTR [rip+0x3a31]        # 0x1400081e0
   1400047af:	mov    rsi,rax
   1400047b2:	mov    QWORD PTR [rsp+0x38],rax
   1400047b7:	test   rax,rax
   1400047ba:	jne    0x1400047c8
   1400047bc:	call   0x140005060
   1400047c1:	mov    ebx,eax
   1400047c3:	jmp    0x1400048f9
   1400047c8:	xor    r9d,r9d
   1400047cb:	mov    r8,rdi
   1400047ce:	mov    rdx,r14
   1400047d1:	mov    rcx,rax
   1400047d4:	call   QWORD PTR [rip+0x39ae]        # 0x140008188
   1400047da:	mov    rdi,rax
   1400047dd:	test   rax,rax
   1400047e0:	jne    0x1400047ec
   1400047e2:	call   0x140005060
   1400047e7:	jmp    0x1400048ed
   1400047ec:	mov    rdx,rax
   1400047ef:	mov    rcx,rsi
   1400047f2:	call   QWORD PTR [rip+0x3998]        # 0x140008190
   1400047f8:	mov    r14,rax
   1400047fb:	mov    QWORD PTR [rsp+0x40],rax
   140004800:	test   rax,rax
   140004803:	je     0x1400047e2
   140004805:	mov    rdx,rdi
   140004808:	mov    rcx,rsi
   14000480b:	call   QWORD PTR [rip+0x39ef]        # 0x140008200
   140004811:	mov    edi,eax
   140004813:	mov    DWORD PTR [rsp+0x30],eax
   140004817:	inc    eax
   140004819:	cmp    eax,edi
   14000481b:	jae    0x14000483e
   14000481d:	lea    rax,[rsp+0x78]
   140004822:	cmp    QWORD PTR [rsp+0x70],rax
   140004827:	je     0x140004834
   140004829:	lea    rcx,[rsp+0x70]
   14000482e:	call   0x140002ea8
   140004833:	nop
   140004834:	mov    eax,0x8007000e
   140004839:	jmp    0x140004912
   14000483e:	mov    ecx,eax
   140004840:	test   eax,eax
   140004842:	je     0x14000487c
   140004844:	xor    edx,edx
   140004846:	or     rax,0xffffffffffffffff
   14000484a:	div    rcx
   14000484d:	cmp    rax,0x2
   140004851:	jb     0x140004871
   140004853:	lea    rdx,[rcx+rcx*1]
   140004857:	cmp    rdx,0x400
   14000485e:	jbe    0x14000487c
   140004860:	lea    rcx,[rsp+0x70]
   140004865:	call   0x140002ed8
   14000486a:	mov    rax,QWORD PTR [rsp+0x70]
   14000486f:	jmp    0x140004886
   140004871:	mov    ecx,0x80070057
   140004876:	call   0x1400051b0
   14000487b:	int3   
   14000487c:	lea    rax,[rsp+0x78]
   140004881:	mov    QWORD PTR [rsp+0x70],rax
   140004886:	jmp    0x14000489d
   140004888:	xor    ebx,ebx
   14000488a:	mov    rax,QWORD PTR [rsp+0x70]
   14000488f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004894:	mov    r14,QWORD PTR [rsp+0x40]
   140004899:	mov    edi,DWORD PTR [rsp+0x30]
   14000489d:	test   rax,rax
   1400048a0:	jne    0x1400048a9
   1400048a2:	mov    ebx,0x8007000e
   1400048a7:	jmp    0x1400048ef
   1400048a9:	mov    DWORD PTR [rsp+0x28],edi
   1400048ad:	mov    QWORD PTR [rsp+0x20],rax
   1400048b2:	mov    r9d,edi
   1400048b5:	mov    r8,r14
   1400048b8:	xor    edx,edx
   1400048ba:	lea    ecx,[rdx+0x3]
   1400048bd:	call   QWORD PTR [rip+0x3935]        # 0x1400081f8
   1400048c3:	test   eax,eax
   1400048c5:	je     0x1400047e2
   1400048cb:	mov    ecx,eax
   1400048cd:	mov    rax,QWORD PTR [rsp+0x70]
   1400048d2:	mov    WORD PTR [rax+rcx*2],bx
   1400048d6:	mov    r8d,DWORD PTR [rsp+0x4d0]
   1400048de:	mov    rdx,QWORD PTR [rsp+0x70]
   1400048e3:	lea    rcx,[rsp+0x48]
   1400048e8:	call   0x140004594
   1400048ed:	mov    ebx,eax
   1400048ef:	mov    rcx,rsi
   1400048f2:	call   QWORD PTR [rip+0x38d8]        # 0x1400081d0
   1400048f8:	nop
   1400048f9:	lea    rax,[rsp+0x78]
   1400048fe:	cmp    QWORD PTR [rsp+0x70],rax
   140004903:	je     0x140004910
   140004905:	lea    rcx,[rsp+0x70]
   14000490a:	call   0x140002ea8
   14000490f:	nop
   140004910:	mov    eax,ebx
   140004912:	mov    rcx,QWORD PTR [rsp+0x480]
   14000491a:	xor    rcx,rsp
   14000491d:	call   0x140006b00
   140004922:	mov    rbx,QWORD PTR [rsp+0x4b0]
   14000492a:	add    rsp,0x490
   140004931:	pop    r14
   140004933:	pop    rdi
   140004934:	pop    rsi
   140004935:	ret    
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	mov    QWORD PTR [rsp+0x8],rbx
   140004941:	push   rbp
   140004942:	push   rsi
   140004943:	push   rdi
   140004944:	push   r14
   140004946:	push   r15
   140004948:	lea    rbp,[rsp-0x9d0]
   140004950:	sub    rsp,0xad0
   140004957:	mov    rax,QWORD PTR [rip+0x66b2]        # 0x14000b010
   14000495e:	xor    rax,rsp
   140004961:	mov    QWORD PTR [rbp+0x9c0],rax
   140004968:	xor    r14d,r14d
   14000496b:	lea    rax,[rip+0x3d8e]        # 0x140008700
   140004972:	mov    esi,r8d
   140004975:	mov    QWORD PTR [rsp+0x30],rax
   14000497a:	mov    rdi,rdx
   14000497d:	mov    QWORD PTR [rsp+0x38],r14
   140004982:	xor    edx,edx
   140004984:	mov    QWORD PTR [rsp+0x40],r14
   140004989:	lea    r8d,[r14+0x28]
   14000498d:	mov    DWORD PTR [rsp+0x48],r14d
   140004992:	lea    rcx,[rsp+0x50]
   140004997:	mov    rbx,r9
   14000499a:	call   0x140006f22
   14000499f:	lea    rcx,[rsp+0x50]
   1400049a4:	mov    BYTE PTR [rsp+0x78],r14b
   1400049a9:	call   0x140002b5c
   1400049ae:	test   eax,eax
   1400049b0:	js     0x140004a2e
   1400049b2:	mov    BYTE PTR [rsp+0x78],0x1
   1400049b7:	test   rbx,rbx
   1400049ba:	je     0x1400049db
   1400049bc:	jmp    0x1400049d3
   1400049be:	mov    r8,QWORD PTR [rbx+0x8]
   1400049c2:	lea    rcx,[rsp+0x30]
   1400049c7:	mov    rdx,rax
   1400049ca:	call   0x140002e20
   1400049cf:	lea    rbx,[rbx+0x10]
   1400049d3:	mov    rax,QWORD PTR [rbx]
   1400049d6:	test   rax,rax
   1400049d9:	jne    0x1400049be
   1400049db:	mov    rax,QWORD PTR [rsp+0x30]
   1400049e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400049e4:	mov    rcx,rbx
   1400049e7:	call   QWORD PTR [rip+0x3933]        # 0x140008320
   1400049ed:	lea    r8,[rip+0x3e3c]        # 0x140008830
   1400049f4:	lea    rdx,[rip+0x3e3d]        # 0x140008838
   1400049fb:	lea    rcx,[rsp+0x30]
   140004a00:	call   rbx
   140004a02:	mov    ebx,eax
   140004a04:	test   eax,eax
   140004a06:	js     0x140004a30
   140004a08:	mov    rbx,QWORD PTR [rip+0x6d59]        # 0x14000b768
   140004a0f:	lea    rdx,[rbp-0x80]
   140004a13:	mov    r15d,0x104
   140004a19:	mov    rcx,rbx
   140004a1c:	mov    r8d,r15d
   140004a1f:	call   QWORD PTR [rip+0x375b]        # 0x140008180
   140004a25:	test   eax,eax
   140004a27:	jne    0x140004a62
   140004a29:	call   0x140005060
   140004a2e:	mov    ebx,eax
   140004a30:	lea    rcx,[rsp+0x30]
   140004a35:	call   0x140002ab4
   140004a3a:	mov    eax,ebx
   140004a3c:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140004a43:	xor    rcx,rsp
   140004a46:	call   0x140006b00
   140004a4b:	mov    rbx,QWORD PTR [rsp+0xb00]
   140004a53:	add    rsp,0xad0
   140004a5a:	pop    r15
   140004a5c:	pop    r14
   140004a5e:	pop    rdi
   140004a5f:	pop    rsi
   140004a60:	pop    rbp
   140004a61:	ret    
   140004a62:	cmp    eax,r15d
   140004a65:	jne    0x140004a6e
   140004a67:	mov    ebx,0x8007007a
   140004a6c:	jmp    0x140004a30
   140004a6e:	lea    rdx,[rbp-0x80]
   140004a72:	mov    ecx,r14d
   140004a75:	mov    r9d,0x27
   140004a7b:	movzx  r8d,WORD PTR [rdx]
   140004a7f:	test   r8w,r8w
   140004a83:	je     0x140004ab7
   140004a85:	mov    eax,ecx
   140004a87:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140004a90:	cmp    r8w,r9w
   140004a94:	jne    0x140004aa9
   140004a96:	cmp    ecx,0x206
   140004a9c:	jae    0x140004aa9
   140004a9e:	inc    ecx
   140004aa0:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140004aa9:	add    rdx,0x2
   140004aad:	inc    ecx
   140004aaf:	cmp    ecx,0x207
   140004ab5:	jb     0x140004a7b
   140004ab7:	mov    eax,ecx
   140004ab9:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140004ac2:	test   rbx,rbx
   140004ac5:	je     0x140004ae0
   140004ac7:	xor    ecx,ecx
   140004ac9:	call   QWORD PTR [rip+0x3719]        # 0x1400081e8
   140004acf:	cmp    rbx,rax
   140004ad2:	je     0x140004ae0
   140004ad4:	lea    r8,[rbp+0x190]
   140004adb:	jmp    0x140004b76
   140004ae0:	mov    r15d,0x22
   140004ae6:	lea    rcx,[rbp+0x190]
   140004aed:	or     rbx,0xffffffffffffffff
   140004af1:	mov    WORD PTR [rbp+0x5a0],r15w
   140004af9:	mov    rax,rbx
   140004afc:	inc    rax
   140004aff:	cmp    WORD PTR [rcx+rax*2],r14w
   140004b04:	jne    0x140004afc
   140004b06:	inc    eax
   140004b08:	lea    r8,[rbp+0x190]
   140004b0f:	movsxd r9,eax
   140004b12:	lea    rcx,[rbp+0x5a2]
   140004b19:	add    r9,r9
   140004b1c:	mov    edx,0x414
   140004b21:	call   QWORD PTR [rip+0x37c9]        # 0x1400082f0
   140004b27:	test   eax,eax
   140004b29:	je     0x140004b35
   140004b2b:	mov    ebx,0x80004005
   140004b30:	jmp    0x140004a30
   140004b35:	lea    rax,[rbp+0x5a0]
   140004b3c:	inc    rbx
   140004b3f:	cmp    WORD PTR [rax+rbx*2],r14w
   140004b44:	jne    0x140004b3c
   140004b46:	movsxd rax,ebx
   140004b49:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140004b52:	lea    rax,[rax*2+0x2]
   140004b5a:	cmp    rax,0x418
   140004b60:	jae    0x140004bf3
   140004b66:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140004b6f:	lea    r8,[rbp+0x5a0]
   140004b76:	lea    rdx,[rip+0x3ccb]        # 0x140008848
   140004b7d:	lea    rcx,[rsp+0x30]
   140004b82:	call   0x140002e20
   140004b87:	test   eax,eax
   140004b89:	js     0x140004a2e
   140004b8f:	lea    r8,[rbp+0x190]
   140004b96:	lea    rdx,[rip+0x3cbb]        # 0x140008858
   140004b9d:	lea    rcx,[rsp+0x30]
   140004ba2:	call   0x140002e20
   140004ba7:	test   eax,eax
   140004ba9:	js     0x140004a2e
   140004baf:	test   esi,esi
   140004bb1:	je     0x140004bc2
   140004bb3:	test   rdi,rdi
   140004bb6:	je     0x140004be9
   140004bb8:	mov    DWORD PTR [rsp+0x20],0x1
   140004bc0:	jmp    0x140004bcc
   140004bc2:	test   rdi,rdi
   140004bc5:	je     0x140004be9
   140004bc7:	mov    DWORD PTR [rsp+0x20],r14d
   140004bcc:	lea    r9,[rip+0x3c9d]        # 0x140008870
   140004bd3:	mov    r8,rdi
   140004bd6:	lea    rdx,[rbp-0x80]
   140004bda:	lea    rcx,[rsp+0x30]
   140004bdf:	call   0x140004754
   140004be4:	jmp    0x140004a2e
   140004be9:	mov    ebx,0x80070057
   140004bee:	jmp    0x140004a30
   140004bf3:	call   0x140006e18
   140004bf8:	int3   
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	jmp    0x14000493c
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	rex push rbx
   140004c0e:	sub    rsp,0x20
   140004c12:	cmp    QWORD PTR [rcx],0x0
   140004c16:	mov    rbx,rcx
   140004c19:	je     0x140004c30
   140004c1b:	mov    rcx,QWORD PTR [rbx]
   140004c1e:	mov    rax,QWORD PTR [rcx]
   140004c21:	mov    QWORD PTR [rbx],rax
   140004c24:	call   QWORD PTR [rip+0x35ee]        # 0x140008218
   140004c2a:	cmp    QWORD PTR [rbx],0x0
   140004c2e:	jne    0x140004c1b
   140004c30:	add    rsp,0x20
   140004c34:	pop    rbx
   140004c35:	ret    
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	int3   
   140004c39:	int3   
   140004c3a:	int3   
   140004c3b:	int3   
   140004c3c:	rex push rbx
   140004c3e:	sub    rsp,0x20
   140004c42:	mov    rbx,rcx
   140004c45:	mov    rcx,QWORD PTR [rcx]
   140004c48:	call   0x1400066c4
   140004c4d:	and    QWORD PTR [rbx],0x0
   140004c51:	add    rsp,0x20
   140004c55:	pop    rbx
   140004c56:	ret    
   140004c57:	int3   
   140004c58:	int3   
   140004c59:	int3   
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	mov    rax,rsp
   140004c63:	mov    QWORD PTR [rax+0x8],rbx
   140004c67:	mov    QWORD PTR [rax+0x10],rsi
   140004c6b:	mov    QWORD PTR [rax+0x18],rdi
   140004c6f:	mov    QWORD PTR [rax+0x20],r14
   140004c73:	push   r15
   140004c75:	sub    rsp,0x20
   140004c79:	mov    rax,QWORD PTR [rcx]
   140004c7c:	mov    r14,rcx
   140004c7f:	xor    ecx,ecx
   140004c81:	lea    rsi,[rax-0x18]
   140004c85:	mov    r15,QWORD PTR [rsi]
   140004c88:	cmp    DWORD PTR [rsi+0x8],ecx
   140004c8b:	je     0x140004ce6
   140004c8d:	cmp    DWORD PTR [rsi+0x10],ecx
   140004c90:	jge    0x140004ca2
   140004c92:	cmp    DWORD PTR [rax-0xc],ecx
   140004c95:	jl     0x140004d01
   140004c97:	mov    DWORD PTR [rax-0x10],ecx
   140004c9a:	mov    rax,QWORD PTR [r14]
   140004c9d:	mov    WORD PTR [rax],cx
   140004ca0:	jmp    0x140004ce6
   140004ca2:	or     eax,0xffffffff
   140004ca5:	lock xadd DWORD PTR [rsi+0x10],eax
   140004caa:	sub    eax,0x1
   140004cad:	jg     0x140004cca
   140004caf:	mov    rdi,QWORD PTR [rsi]
   140004cb2:	mov    rax,QWORD PTR [rdi]
   140004cb5:	mov    rbx,QWORD PTR [rax+0x8]
   140004cb9:	mov    rcx,rbx
   140004cbc:	call   QWORD PTR [rip+0x365e]        # 0x140008320
   140004cc2:	mov    rdx,rsi
   140004cc5:	mov    rcx,rdi
   140004cc8:	call   rbx
   140004cca:	mov    rax,QWORD PTR [r15]
   140004ccd:	mov    rbx,QWORD PTR [rax+0x18]
   140004cd1:	mov    rcx,rbx
   140004cd4:	call   QWORD PTR [rip+0x3646]        # 0x140008320
   140004cda:	mov    rcx,r15
   140004cdd:	call   rbx
   140004cdf:	add    rax,0x18
   140004ce3:	mov    QWORD PTR [r14],rax
   140004ce6:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ceb:	mov    rsi,QWORD PTR [rsp+0x38]
   140004cf0:	mov    rdi,QWORD PTR [rsp+0x40]
   140004cf5:	mov    r14,QWORD PTR [rsp+0x48]
   140004cfa:	add    rsp,0x20
   140004cfe:	pop    r15
   140004d00:	ret    
   140004d01:	mov    ecx,0x80070057
   140004d06:	call   0x1400051b0
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	int3   
   140004d11:	int3   
   140004d12:	int3   
   140004d13:	int3   
   140004d14:	mov    QWORD PTR [rsp+0x8],rbx
   140004d19:	mov    QWORD PTR [rsp+0x10],rbp
   140004d1e:	mov    QWORD PTR [rsp+0x18],rsi
   140004d23:	push   rdi
   140004d24:	push   r14
   140004d26:	push   r15
   140004d28:	sub    rsp,0x20
   140004d2c:	mov    rsi,QWORD PTR [rcx]
   140004d2f:	mov    r14,rcx
   140004d32:	mov    ebp,edx
   140004d34:	mov    rdi,QWORD PTR [rsi-0x18]
   140004d38:	mov    r15d,DWORD PTR [rsi-0x10]
   140004d3c:	mov    rax,QWORD PTR [rdi]
   140004d3f:	mov    rbx,QWORD PTR [rax+0x20]
   140004d43:	mov    rcx,rbx
   140004d46:	call   QWORD PTR [rip+0x35d4]        # 0x140008320
   140004d4c:	mov    rcx,rdi
   140004d4f:	call   rbx
   140004d51:	mov    rdi,rax
   140004d54:	mov    rcx,QWORD PTR [rax]
   140004d57:	mov    rbx,QWORD PTR [rcx]
   140004d5a:	mov    rcx,rbx
   140004d5d:	call   QWORD PTR [rip+0x35bd]        # 0x140008320
   140004d63:	mov    r8d,0x2
   140004d69:	mov    edx,ebp
   140004d6b:	mov    rcx,rdi
   140004d6e:	call   rbx
   140004d70:	mov    rbx,rax
   140004d73:	test   rax,rax
   140004d76:	je     0x140004de4
   140004d78:	cmp    r15d,ebp
   140004d7b:	mov    r8,rsi
   140004d7e:	cmovl  ebp,r15d
   140004d82:	inc    ebp
   140004d84:	movsxd rdx,ebp
   140004d87:	lea    rbp,[rax+0x18]
   140004d8b:	add    rdx,rdx
   140004d8e:	mov    rcx,rbp
   140004d91:	mov    r9,rdx
   140004d94:	call   QWORD PTR [rip+0x3556]        # 0x1400082f0
   140004d9a:	or     eax,0xffffffff
   140004d9d:	mov    DWORD PTR [rbx+0x8],r15d
   140004da1:	lock xadd DWORD PTR [rsi-0x8],eax
   140004da6:	sub    eax,0x1
   140004da9:	jg     0x140004dc8
   140004dab:	mov    rdi,QWORD PTR [rsi-0x18]
   140004daf:	mov    rax,QWORD PTR [rdi]
   140004db2:	mov    rbx,QWORD PTR [rax+0x8]
   140004db6:	mov    rcx,rbx
   140004db9:	call   QWORD PTR [rip+0x3561]        # 0x140008320
   140004dbf:	lea    rdx,[rsi-0x18]
   140004dc3:	mov    rcx,rdi
   140004dc6:	call   rbx
   140004dc8:	mov    rbx,QWORD PTR [rsp+0x40]
   140004dcd:	mov    rsi,QWORD PTR [rsp+0x50]
   140004dd2:	mov    QWORD PTR [r14],rbp
   140004dd5:	mov    rbp,QWORD PTR [rsp+0x48]
   140004dda:	add    rsp,0x20
   140004dde:	pop    r15
   140004de0:	pop    r14
   140004de2:	pop    rdi
   140004de3:	ret    
   140004de4:	call   0x140005084
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	mov    rax,rsp
   140004df3:	mov    QWORD PTR [rax+0x8],rbx
   140004df7:	mov    QWORD PTR [rax+0x10],rsi
   140004dfb:	mov    QWORD PTR [rax+0x18],rdi
   140004dff:	mov    QWORD PTR [rax+0x20],r14
   140004e03:	push   r15
   140004e05:	sub    rsp,0x20
   140004e09:	mov    rdi,QWORD PTR [rcx]
   140004e0c:	mov    esi,edx
   140004e0e:	mov    r14,rcx
   140004e11:	mov    r15,QWORD PTR [rdi-0x18]
   140004e15:	cmp    DWORD PTR [rdi-0xc],edx
   140004e18:	jge    0x140004e6d
   140004e1a:	test   edx,edx
   140004e1c:	jle    0x140004e6d
   140004e1e:	mov    rax,QWORD PTR [r15]
   140004e21:	mov    rbx,QWORD PTR [rax+0x10]
   140004e25:	mov    rcx,rbx
   140004e28:	call   QWORD PTR [rip+0x34f2]        # 0x140008320
   140004e2e:	mov    r9d,0x2
   140004e34:	lea    rdx,[rdi-0x18]
   140004e38:	mov    r8d,esi
   140004e3b:	mov    rcx,r15
   140004e3e:	call   rbx
   140004e40:	test   rax,rax
   140004e43:	je     0x140004e67
   140004e45:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e4a:	add    rax,0x18
   140004e4e:	mov    rsi,QWORD PTR [rsp+0x38]
   140004e53:	mov    rdi,QWORD PTR [rsp+0x40]
   140004e58:	mov    QWORD PTR [r14],rax
   140004e5b:	mov    r14,QWORD PTR [rsp+0x48]
   140004e60:	add    rsp,0x20
   140004e64:	pop    r15
   140004e66:	ret    
   140004e67:	call   0x140005084
   140004e6c:	int3   
   140004e6d:	call   0x140005084
   140004e72:	int3   
   140004e73:	int3   
   140004e74:	int3   
   140004e75:	int3   
   140004e76:	int3   
   140004e77:	int3   
   140004e78:	int3   
   140004e79:	int3   
   140004e7a:	int3   
   140004e7b:	int3   
   140004e7c:	sub    rsp,0x28
   140004e80:	mov    rax,QWORD PTR [rcx]
   140004e83:	mov    r8d,edx
   140004e86:	mov    r9,rcx
   140004e89:	cmp    DWORD PTR [rax-0x10],edx
   140004e8c:	cmovg  r8d,DWORD PTR [rax-0x10]
   140004e91:	cmp    DWORD PTR [rax-0x8],0x1
   140004e95:	jle    0x140004ea3
   140004e97:	mov    edx,r8d
   140004e9a:	add    rsp,0x28
   140004e9e:	jmp    0x140004d14
   140004ea3:	mov    ecx,DWORD PTR [rax-0xc]
   140004ea6:	cmp    ecx,r8d
   140004ea9:	jge    0x140004ed5
   140004eab:	cmp    ecx,0x40000000
   140004eb1:	jle    0x140004ebb
   140004eb3:	add    ecx,0x100000
   140004eb9:	jmp    0x140004ec4
   140004ebb:	mov    eax,ecx
   140004ebd:	cdq    
   140004ebe:	sub    eax,edx
   140004ec0:	sar    eax,1
   140004ec2:	add    ecx,eax
   140004ec4:	cmp    ecx,r8d
   140004ec7:	cmovl  ecx,r8d
   140004ecb:	mov    edx,ecx
   140004ecd:	mov    rcx,r9
   140004ed0:	call   0x140004df0
   140004ed5:	add    rsp,0x28
   140004ed9:	ret    
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ee5:	mov    QWORD PTR [rsp+0x10],rbp
   140004eea:	mov    QWORD PTR [rsp+0x18],rsi
   140004eef:	push   rdi
   140004ef0:	push   r14
   140004ef2:	push   r15
   140004ef4:	sub    rsp,0x20
   140004ef8:	xor    r15d,r15d
   140004efb:	movsxd rbx,r8d
   140004efe:	mov    r14,rdx
   140004f01:	mov    rdi,rcx
   140004f04:	test   r8d,r8d
   140004f07:	jne    0x140004f27
   140004f09:	call   0x140004c60
   140004f0e:	mov    rbx,QWORD PTR [rsp+0x40]
   140004f13:	mov    rbp,QWORD PTR [rsp+0x48]
   140004f18:	mov    rsi,QWORD PTR [rsp+0x50]
   140004f1d:	add    rsp,0x20
   140004f21:	pop    r15
   140004f23:	pop    r14
   140004f25:	pop    rdi
   140004f26:	ret    
   140004f27:	test   rdx,rdx
   140004f2a:	je     0x140004f99
   140004f2c:	mov    rax,QWORD PTR [rcx]
   140004f2f:	mov    rbp,rdx
   140004f32:	sub    rbp,rax
   140004f35:	mov    ecx,0x1
   140004f3a:	sar    rbp,1
   140004f3d:	sub    ecx,DWORD PTR [rax-0x8]
   140004f40:	mov    esi,DWORD PTR [rax-0x10]
   140004f43:	mov    eax,DWORD PTR [rax-0xc]
   140004f46:	sub    eax,ebx
   140004f48:	or     ecx,eax
   140004f4a:	jge    0x140004f56
   140004f4c:	mov    edx,ebx
   140004f4e:	mov    rcx,rdi
   140004f51:	call   0x140004e7c
   140004f56:	mov    rcx,QWORD PTR [rdi]
   140004f59:	cmp    rbp,rsi
   140004f5c:	lea    rsi,[rbx+rbx*1]
   140004f60:	mov    r9,rsi
   140004f63:	mov    rdx,rsi
   140004f66:	ja     0x140004f74
   140004f68:	lea    r8,[rcx+rbp*2]
   140004f6c:	call   QWORD PTR [rip+0x329e]        # 0x140008210
   140004f72:	jmp    0x140004f7d
   140004f74:	mov    r8,r14
   140004f77:	call   QWORD PTR [rip+0x3373]        # 0x1400082f0
   140004f7d:	test   ebx,ebx
   140004f7f:	js     0x140004fa4
   140004f81:	mov    rax,QWORD PTR [rdi]
   140004f84:	cmp    ebx,DWORD PTR [rax-0xc]
   140004f87:	jg     0x140004fa4
   140004f89:	mov    DWORD PTR [rax-0x10],ebx
   140004f8c:	mov    rax,QWORD PTR [rdi]
   140004f8f:	mov    WORD PTR [rsi+rax*1],r15w
   140004f94:	jmp    0x140004f0e
   140004f99:	mov    ecx,0x80070057
   140004f9e:	call   0x1400051b0
   140004fa3:	int3   
   140004fa4:	mov    ecx,0x80070057
   140004fa9:	call   0x1400051b0
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	int3   
   140004fb1:	int3   
   140004fb2:	int3   
   140004fb3:	int3   
   140004fb4:	int3   
   140004fb5:	int3   
   140004fb6:	int3   
   140004fb7:	int3   
   140004fb8:	mov    rax,rsp
   140004fbb:	mov    QWORD PTR [rax+0x8],rbx
   140004fbf:	mov    QWORD PTR [rax+0x10],rbp
   140004fc3:	mov    QWORD PTR [rax+0x18],rsi
   140004fc7:	mov    QWORD PTR [rax+0x20],rdi
   140004fcb:	push   r14
   140004fcd:	sub    rsp,0x20
   140004fd1:	mov    rdx,QWORD PTR [rdx]
   140004fd4:	mov    r14,rcx
   140004fd7:	mov    rsi,QWORD PTR [r14]
   140004fda:	lea    rcx,[rdx-0x18]
   140004fde:	sub    rsi,0x18
   140004fe2:	cmp    rcx,rsi
   140004fe5:	je     0x14000503a
   140004fe7:	cmp    DWORD PTR [rsi+0x10],0x0
   140004feb:	jl     0x14000502e
   140004fed:	mov    rax,QWORD PTR [rsi]
   140004ff0:	cmp    QWORD PTR [rcx],rax
   140004ff3:	jne    0x14000502e
   140004ff5:	call   0x14000509c
   140004ffa:	mov    rbp,rax
   140004ffd:	or     ecx,0xffffffff
   140005000:	lock xadd DWORD PTR [rsi+0x10],ecx
   140005005:	sub    ecx,0x1
   140005008:	jg     0x140005025
   14000500a:	mov    rdi,QWORD PTR [rsi]
   14000500d:	mov    r8,QWORD PTR [rdi]
   140005010:	mov    rbx,QWORD PTR [r8+0x8]
   140005014:	mov    rcx,rbx
   140005017:	call   QWORD PTR [rip+0x3303]        # 0x140008320
   14000501d:	mov    rdx,rsi
   140005020:	mov    rcx,rdi
   140005023:	call   rbx
   140005025:	lea    rax,[rbp+0x18]
   140005029:	mov    QWORD PTR [r14],rax
   14000502c:	jmp    0x14000503a
   14000502e:	mov    r8d,DWORD PTR [rdx-0x10]
   140005032:	mov    rcx,r14
   140005035:	call   0x140004ee0
   14000503a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000503f:	mov    rax,r14
   140005042:	mov    rbp,QWORD PTR [rsp+0x38]
   140005047:	mov    rsi,QWORD PTR [rsp+0x40]
   14000504c:	mov    rdi,QWORD PTR [rsp+0x48]
   140005051:	add    rsp,0x20
   140005055:	pop    r14
   140005057:	ret    
   140005058:	int3   
   140005059:	int3   
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	int3   
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	sub    rsp,0x28
   140005064:	call   QWORD PTR [rip+0x3136]        # 0x1400081a0
   14000506a:	mov    ecx,eax
   14000506c:	movzx  eax,ax
   14000506f:	or     eax,0x80070000
   140005074:	test   ecx,ecx
   140005076:	cmovle eax,ecx
   140005079:	add    rsp,0x28
   14000507d:	ret    
   14000507e:	int3   
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	sub    rsp,0x28
   140005088:	mov    ecx,0x8007000e
   14000508d:	call   0x1400051b0
   140005092:	int3   
   140005093:	int3   
   140005094:	int3   
   140005095:	int3   
   140005096:	int3   
   140005097:	int3   
   140005098:	int3   
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	mov    QWORD PTR [rsp+0x8],rbx
   1400050a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400050a6:	push   rdi
   1400050a7:	sub    rsp,0x20
   1400050ab:	mov    rdi,QWORD PTR [rcx]
   1400050ae:	mov    rsi,rcx
   1400050b1:	mov    rax,QWORD PTR [rdi]
   1400050b4:	mov    rbx,QWORD PTR [rax+0x20]
   1400050b8:	mov    rcx,rbx
   1400050bb:	call   QWORD PTR [rip+0x325f]        # 0x140008320
   1400050c1:	mov    rcx,rdi
   1400050c4:	call   rbx
   1400050c6:	cmp    DWORD PTR [rsi+0x10],0x0
   1400050ca:	mov    rdi,rax
   1400050cd:	jl     0x1400050dd
   1400050cf:	cmp    rax,QWORD PTR [rsi]
   1400050d2:	jne    0x1400050dd
   1400050d4:	mov    rbx,rsi
   1400050d7:	lock inc DWORD PTR [rsi+0x10]
   1400050db:	jmp    0x140005124
   1400050dd:	mov    rax,QWORD PTR [rax]
   1400050e0:	mov    rbx,QWORD PTR [rax]
   1400050e3:	mov    rcx,rbx
   1400050e6:	call   QWORD PTR [rip+0x3234]        # 0x140008320
   1400050ec:	mov    edx,DWORD PTR [rsi+0x8]
   1400050ef:	mov    r8d,0x2
   1400050f5:	mov    rcx,rdi
   1400050f8:	call   rbx
   1400050fa:	mov    rbx,rax
   1400050fd:	test   rax,rax
   140005100:	je     0x140005137
   140005102:	mov    eax,DWORD PTR [rsi+0x8]
   140005105:	lea    r8,[rsi+0x18]
   140005109:	mov    DWORD PTR [rbx+0x8],eax
   14000510c:	lea    rcx,[rbx+0x18]
   140005110:	mov    eax,DWORD PTR [rsi+0x8]
   140005113:	inc    eax
   140005115:	movsxd rdx,eax
   140005118:	add    rdx,rdx
   14000511b:	mov    r9,rdx
   14000511e:	call   QWORD PTR [rip+0x31cc]        # 0x1400082f0
   140005124:	mov    rsi,QWORD PTR [rsp+0x38]
   140005129:	mov    rax,rbx
   14000512c:	mov    rbx,QWORD PTR [rsp+0x30]
   140005131:	add    rsp,0x20
   140005135:	pop    rdi
   140005136:	ret    
   140005137:	call   0x140005084
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	mov    QWORD PTR [rsp+0x8],rbx
   140005149:	mov    QWORD PTR [rsp+0x10],rsi
   14000514e:	push   rdi
   14000514f:	sub    rsp,0x20
   140005153:	mov    rsi,QWORD PTR [rcx]
   140005156:	or     eax,0xffffffff
   140005159:	lock xadd DWORD PTR [rsi-0x8],eax
   14000515e:	sub    eax,0x1
   140005161:	jg     0x140005180
   140005163:	mov    rdi,QWORD PTR [rsi-0x18]
   140005167:	mov    rax,QWORD PTR [rdi]
   14000516a:	mov    rbx,QWORD PTR [rax+0x8]
   14000516e:	mov    rcx,rbx
   140005171:	call   QWORD PTR [rip+0x31a9]        # 0x140008320
   140005177:	lea    rdx,[rsi-0x18]
   14000517b:	mov    rcx,rdi
   14000517e:	call   rbx
   140005180:	mov    rbx,QWORD PTR [rsp+0x30]
   140005185:	mov    rsi,QWORD PTR [rsp+0x38]
   14000518a:	add    rsp,0x20
   14000518e:	pop    rdi
   14000518f:	ret    
   140005190:	int3   
   140005191:	int3   
   140005192:	int3   
   140005193:	int3   
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	xor    r9d,r9d
   14000519b:	xor    r8d,r8d
   14000519e:	lea    edx,[r9+0x1]
   1400051a2:	rex.W jmp QWORD PTR [rip+0x2fef]        # 0x140008198
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	sub    rsp,0x28
   1400051b4:	cmp    ecx,0x8007000e
   1400051ba:	mov    eax,0xc0000017
   1400051bf:	mov    edx,0xc000001d
   1400051c4:	cmovne eax,edx
   1400051c7:	mov    ecx,eax
   1400051c9:	call   0x140005198
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	int3   
   1400051d1:	int3   
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	int3   
   1400051d5:	int3   
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400051e5:	push   rdi
   1400051e6:	sub    rsp,0x20
   1400051ea:	mov    rdi,rcx
   1400051ed:	test   edx,edx
   1400051ef:	js     0x140005265
   1400051f1:	mov    eax,0x7fffffff
   1400051f6:	sub    eax,edx
   1400051f8:	cmp    eax,0x1
   1400051fb:	jl     0x140005265
   1400051fd:	inc    edx
   1400051ff:	lea    ebx,[rdx+0x7]
   140005202:	and    ebx,0xfffffff8
   140005205:	cmp    edx,ebx
   140005207:	jg     0x140005265
   140005209:	movsxd rcx,r8d
   14000520c:	movsxd r8,ebx
   14000520f:	test   ebx,ebx
   140005211:	jne    0x140005218
   140005213:	xor    r8d,r8d
   140005216:	jmp    0x140005230
   140005218:	xor    edx,edx
   14000521a:	or     rax,0xffffffffffffffff
   14000521e:	div    r8
   140005221:	cmp    rax,rcx
   140005224:	jb     0x140005265
   140005226:	imul   r8,rcx
   14000522a:	cmp    r8,0xffffffffffffffe7
   14000522e:	ja     0x140005265
   140005230:	mov    rcx,QWORD PTR [rdi+0x8]
   140005234:	add    r8,0x18
   140005238:	xor    edx,edx
   14000523a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000523e:	call   QWORD PTR [rip+0x2ee4]        # 0x140008128
   140005244:	mov    rcx,rax
   140005247:	test   rax,rax
   14000524a:	je     0x140005265
   14000524c:	and    DWORD PTR [rcx+0x8],0x0
   140005250:	mov    QWORD PTR [rax],rdi
   140005253:	mov    DWORD PTR [rax+0x10],0x1
   14000525a:	lea    eax,[rbx-0x1]
   14000525d:	mov    DWORD PTR [rcx+0xc],eax
   140005260:	mov    rax,rcx
   140005263:	jmp    0x140005267
   140005265:	xor    eax,eax
   140005267:	mov    rbx,QWORD PTR [rsp+0x30]
   14000526c:	add    rsp,0x20
   140005270:	pop    rdi
   140005271:	ret    
   140005272:	int3   
   140005273:	int3   
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	sub    rsp,0x28
   140005284:	test   rdx,rdx
   140005287:	je     0x14000529c
   140005289:	mov    rcx,QWORD PTR [rcx+0x8]
   14000528d:	mov    r8,rdx
   140005290:	xor    edx,edx
   140005292:	mov    rcx,QWORD PTR [rcx+0x8]
   140005296:	call   QWORD PTR [rip+0x2e94]        # 0x140008130
   14000529c:	add    rsp,0x28
   1400052a0:	ret    
   1400052a1:	int3   
   1400052a2:	int3   
   1400052a3:	int3   
   1400052a4:	int3   
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	int3   
   1400052a9:	int3   
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	rex push rbx
   1400052b2:	sub    rsp,0x20
   1400052b6:	mov    r10,rcx
   1400052b9:	test   r8d,r8d
   1400052bc:	js     0x14000531f
   1400052be:	mov    eax,0x7fffffff
   1400052c3:	sub    eax,r8d
   1400052c6:	cmp    eax,0x1
   1400052c9:	jl     0x14000531f
   1400052cb:	inc    r8d
   1400052ce:	lea    ebx,[r8+0x7]
   1400052d2:	and    ebx,0xfffffff8
   1400052d5:	cmp    r8d,ebx
   1400052d8:	jg     0x14000531f
   1400052da:	mov    eax,r9d
   1400052dd:	mov    ecx,ebx
   1400052df:	imul   rcx,rax
   1400052e3:	mov    eax,0xffffffff
   1400052e8:	cmp    rcx,rax
   1400052eb:	ja     0x14000531f
   1400052ed:	cmp    ecx,0xffffffe7
   1400052f0:	ja     0x14000531f
   1400052f2:	lea    eax,[rcx+0x18]
   1400052f5:	mov    rcx,QWORD PTR [r10+0x8]
   1400052f9:	mov    r9d,eax
   1400052fc:	mov    rcx,QWORD PTR [rcx+0x8]
   140005300:	test   rdx,rdx
   140005303:	jne    0x140005310
   140005305:	mov    r8d,r9d
   140005308:	call   QWORD PTR [rip+0x2e1a]        # 0x140008128
   14000530e:	jmp    0x14000532d
   140005310:	mov    r8,rdx
   140005313:	xor    edx,edx
   140005315:	test   eax,eax
   140005317:	jne    0x140005327
   140005319:	call   QWORD PTR [rip+0x2e11]        # 0x140008130
   14000531f:	xor    eax,eax
   140005321:	add    rsp,0x20
   140005325:	pop    rbx
   140005326:	ret    
   140005327:	call   QWORD PTR [rip+0x2e0b]        # 0x140008138
   14000532d:	mov    rcx,rax
   140005330:	test   rax,rax
   140005333:	je     0x14000531f
   140005335:	lea    eax,[rbx-0x1]
   140005338:	mov    DWORD PTR [rcx+0xc],eax
   14000533b:	mov    rax,rcx
   14000533e:	jmp    0x140005321
   140005340:	int3   
   140005341:	int3   
   140005342:	int3   
   140005343:	int3   
   140005344:	int3   
   140005345:	int3   
   140005346:	int3   
   140005347:	int3   
   140005348:	int3   
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	lock inc DWORD PTR [rcx+0x20]
   140005354:	lea    rax,[rcx+0x10]
   140005358:	ret    
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	mov    rax,rcx
   140005363:	ret    
   140005364:	int3   
   140005365:	int3   
   140005366:	int3   
   140005367:	int3   
   140005368:	int3   
   140005369:	int3   
   14000536a:	int3   
   14000536b:	int3   
   14000536c:	int3   
   14000536d:	int3   
   14000536e:	int3   
   14000536f:	int3   
   140005370:	rex push rbx
   140005372:	sub    rsp,0x20
   140005376:	lea    rax,[rip+0x3403]        # 0x140008780
   14000537d:	mov    rbx,rcx
   140005380:	mov    QWORD PTR [rcx],rax
   140005383:	test   dl,0x1
   140005386:	je     0x14000538d
   140005388:	call   0x1400066b8
   14000538d:	mov    rax,rbx
   140005390:	add    rsp,0x20
   140005394:	pop    rbx
   140005395:	ret    
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053a4:	mov    r8,rdx
   1400053a7:	xor    edx,edx
   1400053a9:	rex.W jmp QWORD PTR [rip+0x2d78]        # 0x140008128
   1400053b0:	int3   
   1400053b1:	int3   
   1400053b2:	int3   
   1400053b3:	int3   
   1400053b4:	int3   
   1400053b5:	int3   
   1400053b6:	int3   
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	sub    rsp,0x28
   1400053c4:	test   rdx,rdx
   1400053c7:	je     0x1400053d8
   1400053c9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053cd:	mov    r8,rdx
   1400053d0:	xor    edx,edx
   1400053d2:	call   QWORD PTR [rip+0x2d58]        # 0x140008130
   1400053d8:	add    rsp,0x28
   1400053dc:	ret    
   1400053dd:	int3   
   1400053de:	int3   
   1400053df:	int3   
   1400053e0:	int3   
   1400053e1:	int3   
   1400053e2:	int3   
   1400053e3:	int3   
   1400053e4:	int3   
   1400053e5:	int3   
   1400053e6:	int3   
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	sub    rsp,0x28
   1400053f4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053f8:	test   rdx,rdx
   1400053fb:	jne    0x140005408
   1400053fd:	add    rsp,0x28
   140005401:	rex.W jmp QWORD PTR [rip+0x2d20]        # 0x140008128
   140005408:	test   r8,r8
   14000540b:	jne    0x14000541f
   14000540d:	mov    r8,rdx
   140005410:	xor    edx,edx
   140005412:	call   QWORD PTR [rip+0x2d18]        # 0x140008130
   140005418:	xor    eax,eax
   14000541a:	add    rsp,0x28
   14000541e:	ret    
   14000541f:	mov    r9,r8
   140005422:	mov    r8,rdx
   140005425:	xor    edx,edx
   140005427:	add    rsp,0x28
   14000542b:	rex.W jmp QWORD PTR [rip+0x2d06]        # 0x140008138
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	int3   
   14000543d:	int3   
   14000543e:	int3   
   14000543f:	int3   
   140005440:	mov    rcx,QWORD PTR [rcx+0x8]
   140005444:	mov    r8,rdx
   140005447:	xor    edx,edx
   140005449:	rex.W jmp QWORD PTR [rip+0x2cf0]        # 0x140008140
   140005450:	int3   
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	int3   
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	mov    QWORD PTR [rsp+0x8],rbx
   140005465:	push   rdi
   140005466:	sub    rsp,0x20
   14000546a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000546e:	lea    rax,[rip+0x333b]        # 0x1400087b0
   140005475:	mov    QWORD PTR [rcx],rax
   140005478:	mov    edi,edx
   14000547a:	mov    rbx,rcx
   14000547d:	je     0x14000548e
   14000547f:	mov    rcx,QWORD PTR [rcx+0x8]
   140005483:	test   rcx,rcx
   140005486:	je     0x14000548e
   140005488:	call   QWORD PTR [rip+0x2c8a]        # 0x140008118
   14000548e:	test   dil,0x1
   140005492:	je     0x14000549c
   140005494:	mov    rcx,rbx
   140005497:	call   0x1400066b8
   14000549c:	mov    rax,rbx
   14000549f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054a4:	add    rsp,0x20
   1400054a8:	pop    rdi
   1400054a9:	ret    
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054b5:	push   rdi
   1400054b6:	sub    rsp,0x20
   1400054ba:	lea    rcx,[rip+0x62c7]        # 0x14000b788
   1400054c1:	movsxd rbx,edx
   1400054c4:	call   QWORD PTR [rip+0x2cf6]        # 0x1400081c0
   1400054ca:	mov    eax,DWORD PTR [rip+0x62e8]        # 0x14000b7b8
   1400054d0:	xor    edi,edi
   1400054d2:	cmp    ebx,eax
   1400054d4:	jg     0x1400054e5
   1400054d6:	test   ebx,ebx
   1400054d8:	js     0x1400054e5
   1400054da:	cmp    ebx,eax
   1400054dc:	jne    0x140005500
   1400054de:	mov    rdi,QWORD PTR [rip+0x628b]        # 0x14000b770
   1400054e5:	lea    rcx,[rip+0x629c]        # 0x14000b788
   1400054ec:	call   QWORD PTR [rip+0x2cd6]        # 0x1400081c8
   1400054f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054f7:	mov    rax,rdi
   1400054fa:	add    rsp,0x20
   1400054fe:	pop    rdi
   1400054ff:	ret    
   140005500:	jge    0x14000550f
   140005502:	mov    rax,QWORD PTR [rip+0x62a7]        # 0x14000b7b0
   140005509:	mov    rdi,QWORD PTR [rax+rbx*8]
   14000550d:	jmp    0x1400054e5
   14000550f:	mov    ecx,0xc000008c
   140005514:	call   0x140005198
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	mov    r11,rsp
   140005523:	mov    DWORD PTR [r11+0x20],r9d
   140005527:	sub    rsp,0x48
   14000552b:	and    QWORD PTR [r11-0x18],0x0
   140005530:	lea    rax,[r11+0x20]
   140005534:	movzx  r9d,dx
   140005538:	lea    r8,[rip+0x3771]        # 0x140008cb0
   14000553f:	mov    QWORD PTR [r11-0x20],0x4
   140005547:	mov    edx,0x2b
   14000554c:	mov    QWORD PTR [r11-0x28],rax
   140005550:	call   QWORD PTR [rip+0x2b0a]        # 0x140008060
   140005556:	add    rsp,0x48
   14000555a:	ret    
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	int3   
   14000555f:	int3   
   140005560:	int3   
   140005561:	int3   
   140005562:	int3   
   140005563:	int3   
   140005564:	mov    r11,rsp
   140005567:	mov    DWORD PTR [r11+0x20],r9d
   14000556b:	sub    rsp,0x48
   14000556f:	and    QWORD PTR [r11-0x18],0x0
   140005574:	lea    rax,[r11+0x20]
   140005578:	mov    edx,0x19
   14000557d:	mov    QWORD PTR [r11-0x20],0x4
   140005585:	movzx  r9d,dx
   140005589:	lea    r8,[rip+0x3720]        # 0x140008cb0
   140005590:	mov    edx,0x2b
   140005595:	mov    QWORD PTR [r11-0x28],rax
   140005599:	call   QWORD PTR [rip+0x2ac1]        # 0x140008060
   14000559f:	add    rsp,0x48
   1400055a3:	ret    
   1400055a4:	int3   
   1400055a5:	int3   
   1400055a6:	int3   
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	mov    rax,rsp
   1400055af:	mov    QWORD PTR [rax+0x8],rcx
   1400055b3:	push   rdi
   1400055b4:	sub    rsp,0x30
   1400055b8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400055c0:	mov    QWORD PTR [rax+0x10],rbx
   1400055c4:	mov    QWORD PTR [rax+0x18],rsi
   1400055c8:	mov    rdi,rcx
   1400055cb:	mov    rax,QWORD PTR [rip+0x5a56]        # 0x14000b028
   1400055d2:	mov    rbx,QWORD PTR [rax+0x18]
   1400055d6:	mov    rcx,rbx
   1400055d9:	call   QWORD PTR [rip+0x2d41]        # 0x140008320
   1400055df:	lea    rcx,[rip+0x5a42]        # 0x14000b028
   1400055e6:	call   rbx
   1400055e8:	add    rax,0x18
   1400055ec:	mov    QWORD PTR [rdi],rax
   1400055ef:	lea    rsi,[rip+0x5a2a]        # 0x14000b020
   1400055f6:	lea    rbx,[rip+0x36b3]        # 0x140008cb0
   1400055fd:	mov    rcx,QWORD PTR [rip+0x5a1c]        # 0x14000b020
   140005604:	cmp    rcx,rsi
   140005607:	je     0x140005620
   140005609:	test   BYTE PTR [rcx+0x1c],0x1
   14000560d:	je     0x140005620
   14000560f:	mov    edx,0xa
   140005614:	mov    r8,rbx
   140005617:	mov    rcx,QWORD PTR [rcx+0x10]
   14000561b:	call   0x140001278
   140005620:	mov    r8d,0xd
   140005626:	lea    rdx,[rip+0x3663]        # 0x140008c90
   14000562d:	mov    rcx,rdi
   140005630:	call   0x140004ee0
   140005635:	mov    rcx,QWORD PTR [rip+0x59e4]        # 0x14000b020
   14000563c:	cmp    rcx,rsi
   14000563f:	je     0x14000565e
   140005641:	test   BYTE PTR [rcx+0x1c],0x2
   140005645:	je     0x14000565e
   140005647:	cmp    BYTE PTR [rcx+0x19],0x4
   14000564b:	jb     0x14000565e
   14000564d:	mov    edx,0xb
   140005652:	mov    r8,rbx
   140005655:	mov    rcx,QWORD PTR [rcx+0x10]
   140005659:	call   0x140001278
   14000565e:	and    QWORD PTR [rdi+0x8],0x0
   140005663:	and    QWORD PTR [rdi+0x10],0x0
   140005668:	mov    rcx,QWORD PTR [rip+0x59b1]        # 0x14000b020
   14000566f:	cmp    rcx,rsi
   140005672:	je     0x14000568c
   140005674:	test   BYTE PTR [rcx+0x1c],0x1
   140005678:	je     0x14000568c
   14000567a:	mov    edx,0xc
   14000567f:	mov    r8,rbx
   140005682:	mov    rcx,QWORD PTR [rcx+0x10]
   140005686:	call   0x140001278
   14000568b:	nop
   14000568c:	mov    rax,rdi
   14000568f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005694:	mov    rsi,QWORD PTR [rsp+0x50]
   140005699:	add    rsp,0x30
   14000569d:	pop    rdi
   14000569e:	ret    
   14000569f:	int3   
   1400056a0:	int3   
   1400056a1:	int3   
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	int3   
   1400056a5:	int3   
   1400056a6:	int3   
   1400056a7:	int3   
   1400056a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400056ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400056b2:	push   rdi
   1400056b3:	sub    rsp,0x20
   1400056b7:	mov    rsi,rcx
   1400056ba:	mov    rcx,QWORD PTR [rip+0x595f]        # 0x14000b020
   1400056c1:	lea    rbx,[rip+0x5958]        # 0x14000b020
   1400056c8:	cmp    rcx,rbx
   1400056cb:	je     0x1400056e8
   1400056cd:	test   BYTE PTR [rcx+0x1c],0x1
   1400056d1:	je     0x1400056e8
   1400056d3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056d7:	lea    r8,[rip+0x35d2]        # 0x140008cb0
   1400056de:	mov    edx,0xd
   1400056e3:	call   0x140001278
   1400056e8:	mov    rcx,rsi
   1400056eb:	call   0x140005b1c
   1400056f0:	mov    rcx,QWORD PTR [rip+0x5929]        # 0x14000b020
   1400056f7:	cmp    rcx,rbx
   1400056fa:	je     0x140005717
   1400056fc:	test   BYTE PTR [rcx+0x1c],0x1
   140005700:	je     0x140005717
   140005702:	mov    rcx,QWORD PTR [rcx+0x10]
   140005706:	lea    r8,[rip+0x35a3]        # 0x140008cb0
   14000570d:	mov    edx,0xe
   140005712:	call   0x140001278
   140005717:	mov    rsi,QWORD PTR [rsi]
   14000571a:	or     eax,0xffffffff
   14000571d:	lock xadd DWORD PTR [rsi-0x8],eax
   140005722:	sub    eax,0x1
   140005725:	jg     0x140005744
   140005727:	mov    rdi,QWORD PTR [rsi-0x18]
   14000572b:	mov    rax,QWORD PTR [rdi]
   14000572e:	mov    rbx,QWORD PTR [rax+0x8]
   140005732:	mov    rcx,rbx
   140005735:	call   QWORD PTR [rip+0x2be5]        # 0x140008320
   14000573b:	lea    rdx,[rsi-0x18]
   14000573f:	mov    rcx,rdi
   140005742:	call   rbx
   140005744:	mov    rbx,QWORD PTR [rsp+0x30]
   140005749:	mov    rsi,QWORD PTR [rsp+0x38]
   14000574e:	add    rsp,0x20
   140005752:	pop    rdi
   140005753:	ret    
   140005754:	int3   
   140005755:	int3   
   140005756:	int3   
   140005757:	int3   
   140005758:	int3   
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	mov    QWORD PTR [rsp+0x8],rbx
   140005761:	mov    QWORD PTR [rsp+0x18],rbp
   140005766:	mov    QWORD PTR [rsp+0x20],rsi
   14000576b:	push   rdi
   14000576c:	push   r14
   14000576e:	push   r15
   140005770:	sub    rsp,0x20
   140005774:	mov    r14,rcx
   140005777:	mov    rcx,QWORD PTR [rip+0x58a2]        # 0x14000b020
   14000577e:	lea    r15,[rip+0x589b]        # 0x14000b020
   140005785:	cmp    rcx,r15
   140005788:	je     0x1400057a5
   14000578a:	test   BYTE PTR [rcx+0x1c],0x1
   14000578e:	je     0x1400057a5
   140005790:	mov    rcx,QWORD PTR [rcx+0x10]
   140005794:	lea    r8,[rip+0x3515]        # 0x140008cb0
   14000579b:	mov    edx,0x14
   1400057a0:	call   0x140001278
   1400057a5:	xor    esi,esi
   1400057a7:	mov    rcx,r14
   1400057aa:	call   0x140005908
   1400057af:	mov    ebp,eax
   1400057b1:	mov    rdi,QWORD PTR [rip+0x5868]        # 0x14000b020
   1400057b8:	cmp    rdi,r15
   1400057bb:	je     0x1400057e6
   1400057bd:	test   BYTE PTR [rdi+0x1c],0x2
   1400057c1:	je     0x1400057e6
   1400057c3:	cmp    BYTE PTR [rdi+0x19],0x4
   1400057c7:	jb     0x1400057e6
   1400057c9:	mov    rcx,QWORD PTR [rdi+0x10]
   1400057cd:	lea    edx,[rsi+0x15]
   1400057d0:	mov    r9d,eax
   1400057d3:	lea    r8,[rip+0x34d6]        # 0x140008cb0
   1400057da:	call   0x14000129c
   1400057df:	mov    rdi,QWORD PTR [rip+0x583a]        # 0x14000b020
   1400057e6:	mov    rbx,rsi
   1400057e9:	cmp    ebp,0x1
   1400057ec:	jne    0x1400058b2
   1400057f2:	mov    ecx,0x2000
   1400057f7:	call   QWORD PTR [rip+0x2a23]        # 0x140008220
   1400057fd:	test   rax,rax
   140005800:	mov    rbx,rax
   140005803:	setne  al
   140005806:	movzx  ebp,al
   140005809:	cmp    rdi,r15
   14000580c:	je     0x140005832
   14000580e:	test   BYTE PTR [rdi+0x1c],0x2
   140005812:	je     0x140005832
   140005814:	cmp    BYTE PTR [rdi+0x19],0x4
   140005818:	jb     0x140005832
   14000581a:	mov    rcx,QWORD PTR [rdi+0x10]
   14000581e:	lea    r8,[rip+0x348b]        # 0x140008cb0
   140005825:	mov    edx,0x16
   14000582a:	mov    r9d,ebp
   14000582d:	call   0x14000129c
   140005832:	cmp    ebp,0x1
   140005835:	jne    0x1400058b2
   140005837:	mov    rcx,QWORD PTR [r14+0x10]
   14000583b:	lea    r9,[rsp+0x48]
   140005840:	mov    r8d,0x2000
   140005846:	mov    rdx,rbx
   140005849:	call   QWORD PTR [rip+0x2801]        # 0x140008050
   14000584f:	cmp    eax,ebp
   140005851:	je     0x140005882
   140005853:	call   QWORD PTR [rip+0x2947]        # 0x1400081a0
   140005859:	mov    rcx,QWORD PTR [rip+0x57c0]        # 0x14000b020
   140005860:	cmp    rcx,r15
   140005863:	je     0x1400058b2
   140005865:	test   BYTE PTR [rcx+0x1c],0x2
   140005869:	je     0x1400058b2
   14000586b:	cmp    BYTE PTR [rcx+0x19],0x4
   14000586f:	jb     0x1400058b2
   140005871:	mov    rcx,QWORD PTR [rcx+0x10]
   140005875:	lea    edx,[rbp+0x16]
   140005878:	mov    r9d,eax
   14000587b:	call   0x140005520
   140005880:	jmp    0x1400058b2
   140005882:	mov    esi,DWORD PTR [rbx+0x4]
   140005885:	mov    rcx,QWORD PTR [rip+0x5794]        # 0x14000b020
   14000588c:	cmp    rcx,r15
   14000588f:	je     0x1400058b2
   140005891:	test   BYTE PTR [rcx+0x1c],0x2
   140005895:	je     0x1400058b2
   140005897:	cmp    BYTE PTR [rcx+0x19],0x4
   14000589b:	jb     0x1400058b2
   14000589d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058a1:	lea    r8,[rip+0x3408]        # 0x140008cb0
   1400058a8:	mov    edx,0x18
   1400058ad:	call   0x140001278
   1400058b2:	mov    rcx,r14
   1400058b5:	call   0x140005b1c
   1400058ba:	mov    rcx,QWORD PTR [rip+0x575f]        # 0x14000b020
   1400058c1:	cmp    rcx,r15
   1400058c4:	je     0x1400058de
   1400058c6:	test   BYTE PTR [rcx+0x1c],0x1
   1400058ca:	je     0x1400058de
   1400058cc:	cmp    BYTE PTR [rcx+0x19],0x5
   1400058d0:	jb     0x1400058de
   1400058d2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058d6:	mov    r9d,esi
   1400058d9:	call   0x140005564
   1400058de:	mov    rcx,rbx
   1400058e1:	call   QWORD PTR [rip+0x2931]        # 0x140008218
   1400058e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058ec:	mov    eax,esi
   1400058ee:	mov    rsi,QWORD PTR [rsp+0x58]
   1400058f3:	mov    rbp,QWORD PTR [rsp+0x50]
   1400058f8:	add    rsp,0x20
   1400058fc:	pop    r15
   1400058fe:	pop    r14
   140005900:	pop    rdi
   140005901:	ret    
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	mov    QWORD PTR [rsp+0x8],rbx
   14000590d:	mov    QWORD PTR [rsp+0x10],rbp
   140005912:	push   rdi
   140005913:	sub    rsp,0x20
   140005917:	mov    rdi,rcx
   14000591a:	mov    rcx,QWORD PTR [rip+0x56ff]        # 0x14000b020
   140005921:	lea    rbp,[rip+0x56f8]        # 0x14000b020
   140005928:	cmp    rcx,rbp
   14000592b:	je     0x14000594f
   14000592d:	test   BYTE PTR [rcx+0x1c],0x1
   140005931:	je     0x14000594f
   140005933:	mov    rcx,QWORD PTR [rcx+0x10]
   140005937:	lea    r8,[rip+0x3372]        # 0x140008cb0
   14000593e:	mov    edx,0x37
   140005943:	call   0x140001278
   140005948:	mov    rcx,QWORD PTR [rip+0x56d1]        # 0x14000b020
   14000594f:	cmp    QWORD PTR [rdi+0x10],0x0
   140005954:	mov    ebx,0x1
   140005959:	jne    0x1400059f7
   14000595f:	mov    rcx,rdi
   140005962:	call   0x140005a38
   140005967:	mov    ebx,eax
   140005969:	mov    rcx,QWORD PTR [rip+0x56b0]        # 0x14000b020
   140005970:	cmp    rcx,rbp
   140005973:	je     0x1400059a0
   140005975:	test   BYTE PTR [rcx+0x1c],0x2
   140005979:	je     0x1400059a0
   14000597b:	cmp    BYTE PTR [rcx+0x19],0x4
   14000597f:	jb     0x1400059a0
   140005981:	mov    rcx,QWORD PTR [rcx+0x10]
   140005985:	lea    r8,[rip+0x3324]        # 0x140008cb0
   14000598c:	mov    edx,0x38
   140005991:	mov    r9d,eax
   140005994:	call   0x14000129c
   140005999:	mov    rcx,QWORD PTR [rip+0x5680]        # 0x14000b020
   1400059a0:	cmp    ebx,0x1
   1400059a3:	jne    0x1400059f7
   1400059a5:	mov    rdx,QWORD PTR [rdi]
   1400059a8:	mov    r8d,0x115
   1400059ae:	mov    rcx,QWORD PTR [rdi+0x8]
   1400059b2:	call   QWORD PTR [rip+0x2688]        # 0x140008040
   1400059b8:	mov    QWORD PTR [rdi+0x10],rax
   1400059bc:	test   rax,rax
   1400059bf:	jne    0x1400059f0
   1400059c1:	xor    ebx,ebx
   1400059c3:	call   QWORD PTR [rip+0x27d7]        # 0x1400081a0
   1400059c9:	mov    rcx,QWORD PTR [rip+0x5650]        # 0x14000b020
   1400059d0:	cmp    rcx,rbp
   1400059d3:	je     0x140005a20
   1400059d5:	test   BYTE PTR [rcx+0x1c],0x2
   1400059d9:	je     0x1400059f7
   1400059db:	cmp    BYTE PTR [rcx+0x19],0x4
   1400059df:	jb     0x1400059f7
   1400059e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400059e5:	lea    edx,[rbx+0x39]
   1400059e8:	mov    r9d,eax
   1400059eb:	call   0x140005520
   1400059f0:	mov    rcx,QWORD PTR [rip+0x5629]        # 0x14000b020
   1400059f7:	cmp    rcx,rbp
   1400059fa:	je     0x140005a20
   1400059fc:	test   BYTE PTR [rcx+0x1c],0x1
   140005a00:	je     0x140005a20
   140005a02:	cmp    BYTE PTR [rcx+0x19],0x5
   140005a06:	jb     0x140005a20
   140005a08:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a0c:	lea    r8,[rip+0x329d]        # 0x140008cb0
   140005a13:	mov    edx,0x3a
   140005a18:	mov    r9d,ebx
   140005a1b:	call   0x14000129c
   140005a20:	mov    rbp,QWORD PTR [rsp+0x38]
   140005a25:	mov    eax,ebx
   140005a27:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a2c:	add    rsp,0x20
   140005a30:	pop    rdi
   140005a31:	ret    
   140005a32:	int3   
   140005a33:	int3   
   140005a34:	int3   
   140005a35:	int3   
   140005a36:	int3   
   140005a37:	int3   
   140005a38:	mov    QWORD PTR [rsp+0x8],rbx
   140005a3d:	mov    QWORD PTR [rsp+0x10],rsi
   140005a42:	push   rdi
   140005a43:	sub    rsp,0x20
   140005a47:	mov    rdi,rcx
   140005a4a:	mov    rcx,QWORD PTR [rip+0x55cf]        # 0x14000b020
   140005a51:	lea    rsi,[rip+0x55c8]        # 0x14000b020
   140005a58:	cmp    rcx,rsi
   140005a5b:	je     0x140005a7f
   140005a5d:	test   BYTE PTR [rcx+0x1c],0x1
   140005a61:	je     0x140005a7f
   140005a63:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a67:	lea    r8,[rip+0x3242]        # 0x140008cb0
   140005a6e:	mov    edx,0x3e
   140005a73:	call   0x140001278
   140005a78:	mov    rcx,QWORD PTR [rip+0x55a1]        # 0x14000b020
   140005a7f:	cmp    QWORD PTR [rdi+0x8],0x0
   140005a84:	mov    ebx,0x1
   140005a89:	jne    0x140005ada
   140005a8b:	xor    edx,edx
   140005a8d:	mov    r8d,0x20001
   140005a93:	xor    ecx,ecx
   140005a95:	call   QWORD PTR [rip+0x2595]        # 0x140008030
   140005a9b:	mov    QWORD PTR [rdi+0x8],rax
   140005a9f:	test   rax,rax
   140005aa2:	jne    0x140005ad3
   140005aa4:	xor    ebx,ebx
   140005aa6:	call   QWORD PTR [rip+0x26f4]        # 0x1400081a0
   140005aac:	mov    rcx,QWORD PTR [rip+0x556d]        # 0x14000b020
   140005ab3:	cmp    rcx,rsi
   140005ab6:	je     0x140005b03
   140005ab8:	test   BYTE PTR [rcx+0x1c],0x2
   140005abc:	je     0x140005ada
   140005abe:	cmp    BYTE PTR [rcx+0x19],0x4
   140005ac2:	jb     0x140005ada
   140005ac4:	mov    rcx,QWORD PTR [rcx+0x10]
   140005ac8:	lea    edx,[rbx+0x3f]
   140005acb:	mov    r9d,eax
   140005ace:	call   0x140005520
   140005ad3:	mov    rcx,QWORD PTR [rip+0x5546]        # 0x14000b020
   140005ada:	cmp    rcx,rsi
   140005add:	je     0x140005b03
   140005adf:	test   BYTE PTR [rcx+0x1c],0x1
   140005ae3:	je     0x140005b03
   140005ae5:	cmp    BYTE PTR [rcx+0x19],0x5
   140005ae9:	jb     0x140005b03
   140005aeb:	mov    rcx,QWORD PTR [rcx+0x10]
   140005aef:	lea    r8,[rip+0x31ba]        # 0x140008cb0
   140005af6:	mov    edx,0x40
   140005afb:	mov    r9d,ebx
   140005afe:	call   0x14000129c
   140005b03:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b08:	mov    eax,ebx
   140005b0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b0f:	add    rsp,0x20
   140005b13:	pop    rdi
   140005b14:	ret    
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140005b21:	mov    QWORD PTR [rsp+0x10],rsi
   140005b26:	push   rdi
   140005b27:	sub    rsp,0x20
   140005b2b:	mov    rbx,rcx
   140005b2e:	mov    rcx,QWORD PTR [rip+0x54eb]        # 0x14000b020
   140005b35:	lea    rdi,[rip+0x54e4]        # 0x14000b020
   140005b3c:	lea    rsi,[rip+0x316d]        # 0x140008cb0
   140005b43:	cmp    rcx,rdi
   140005b46:	je     0x140005b89
   140005b48:	test   BYTE PTR [rcx+0x1c],0x1
   140005b4c:	je     0x140005b66
   140005b4e:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b52:	mov    edx,0x41
   140005b57:	mov    r8,rsi
   140005b5a:	call   0x140001278
   140005b5f:	mov    rcx,QWORD PTR [rip+0x54ba]        # 0x14000b020
   140005b66:	cmp    rcx,rdi
   140005b69:	je     0x140005b89
   140005b6b:	test   BYTE PTR [rcx+0x1c],0x1
   140005b6f:	je     0x140005b89
   140005b71:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b75:	mov    edx,0x3b
   140005b7a:	mov    r8,rsi
   140005b7d:	call   0x140001278
   140005b82:	mov    rcx,QWORD PTR [rip+0x5497]        # 0x14000b020
   140005b89:	mov    rax,QWORD PTR [rbx+0x10]
   140005b8d:	test   rax,rax
   140005b90:	je     0x140005bd0
   140005b92:	and    QWORD PTR [rbx+0x10],0x0
   140005b97:	mov    rcx,rax
   140005b9a:	call   QWORD PTR [rip+0x2498]        # 0x140008038
   140005ba0:	mov    rcx,QWORD PTR [rip+0x5479]        # 0x14000b020
   140005ba7:	cmp    rcx,rdi
   140005baa:	je     0x140005bf3
   140005bac:	test   BYTE PTR [rcx+0x1c],0x2
   140005bb0:	je     0x140005bd0
   140005bb2:	cmp    BYTE PTR [rcx+0x19],0x4
   140005bb6:	jb     0x140005bd0
   140005bb8:	mov    rcx,QWORD PTR [rcx+0x10]
   140005bbc:	mov    edx,0x3c
   140005bc1:	mov    r8,rsi
   140005bc4:	call   0x140001278
   140005bc9:	mov    rcx,QWORD PTR [rip+0x5450]        # 0x14000b020
   140005bd0:	cmp    rcx,rdi
   140005bd3:	je     0x140005bf3
   140005bd5:	test   BYTE PTR [rcx+0x1c],0x1
   140005bd9:	je     0x140005bf3
   140005bdb:	mov    rcx,QWORD PTR [rcx+0x10]
   140005bdf:	mov    edx,0x3d
   140005be4:	mov    r8,rsi
   140005be7:	call   0x140001278
   140005bec:	mov    rcx,QWORD PTR [rip+0x542d]        # 0x14000b020
   140005bf3:	mov    rax,QWORD PTR [rbx+0x8]
   140005bf7:	test   rax,rax
   140005bfa:	je     0x140005c3a
   140005bfc:	and    QWORD PTR [rbx+0x8],0x0
   140005c01:	mov    rcx,rax
   140005c04:	call   QWORD PTR [rip+0x242e]        # 0x140008038
   140005c0a:	mov    rcx,QWORD PTR [rip+0x540f]        # 0x14000b020
   140005c11:	cmp    rcx,rdi
   140005c14:	je     0x140005c56
   140005c16:	test   BYTE PTR [rcx+0x1c],0x2
   140005c1a:	je     0x140005c3a
   140005c1c:	cmp    BYTE PTR [rcx+0x19],0x4
   140005c20:	jb     0x140005c3a
   140005c22:	mov    rcx,QWORD PTR [rcx+0x10]
   140005c26:	mov    edx,0x42
   140005c2b:	mov    r8,rsi
   140005c2e:	call   0x140001278
   140005c33:	mov    rcx,QWORD PTR [rip+0x53e6]        # 0x14000b020
   140005c3a:	cmp    rcx,rdi
   140005c3d:	je     0x140005c56
   140005c3f:	test   BYTE PTR [rcx+0x1c],0x1
   140005c43:	je     0x140005c56
   140005c45:	mov    rcx,QWORD PTR [rcx+0x10]
   140005c49:	mov    edx,0x43
   140005c4e:	mov    r8,rsi
   140005c51:	call   0x140001278
   140005c56:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c5b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c60:	add    rsp,0x20
   140005c64:	pop    rdi
   140005c65:	ret    
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	sub    rsp,0x48
   140005c70:	xor    r11d,r11d
   140005c73:	mov    r10,rcx
   140005c76:	test   r9,r9
   140005c79:	je     0x140005cb8
   140005c7b:	cmp    WORD PTR [r9],r11w
   140005c7f:	jne    0x140005c87
   140005c81:	lea    eax,[r11+0xe]
   140005c85:	jmp    0x140005cbd
   140005c87:	or     rcx,0xffffffffffffffff
   140005c8b:	inc    rcx
   140005c8e:	cmp    WORD PTR [r9+rcx*2],r11w
   140005c93:	jne    0x140005c8b
   140005c95:	inc    rcx
   140005c98:	mov    eax,0xf3c
   140005c9d:	cmp    rcx,rax
   140005ca0:	ja     0x140005cb3
   140005ca2:	or     rax,0xffffffffffffffff
   140005ca6:	inc    rax
   140005ca9:	cmp    WORD PTR [r9+rax*2],r11w
   140005cae:	jne    0x140005ca6
   140005cb0:	inc    rax
   140005cb3:	add    rax,rax
   140005cb6:	jmp    0x140005cbd
   140005cb8:	mov    eax,0xa
   140005cbd:	test   r9,r9
   140005cc0:	je     0x140005cd3
   140005cc2:	cmp    WORD PTR [r9],r11w
   140005cc6:	lea    rcx,[rip+0x2ecb]        # 0x140008b98
   140005ccd:	cmove  r9,rcx
   140005cd1:	jmp    0x140005cda
   140005cd3:	lea    r9,[rip+0x2ece]        # 0x140008ba8
   140005cda:	mov    QWORD PTR [rsp+0x30],r11
   140005cdf:	mov    rcx,r10
   140005ce2:	mov    QWORD PTR [rsp+0x28],rax
   140005ce7:	mov    QWORD PTR [rsp+0x20],r9
   140005cec:	movzx  r9d,dx
   140005cf0:	mov    edx,0x2b
   140005cf5:	call   QWORD PTR [rip+0x2365]        # 0x140008060
   140005cfb:	add    rsp,0x48
   140005cff:	ret    
   140005d00:	int3   
   140005d01:	int3   
   140005d02:	int3   
   140005d03:	int3   
   140005d04:	int3   
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	rex push rbx
   140005d0a:	push   rbp
   140005d0b:	push   rsi
   140005d0c:	push   rdi
   140005d0d:	sub    rsp,0x38
   140005d11:	mov    rcx,QWORD PTR [rip+0x5308]        # 0x14000b020
   140005d18:	lea    rbp,[rip+0x5301]        # 0x14000b020
   140005d1f:	mov    ebx,0x1
   140005d24:	cmp    rcx,rbp
   140005d27:	je     0x140005d41
   140005d29:	test   BYTE PTR [rcx+0x1c],bl
   140005d2c:	je     0x140005d41
   140005d2e:	mov    rcx,QWORD PTR [rcx+0x10]
   140005d32:	lea    edx,[rbx+0x16]
   140005d35:	lea    r8,[rip+0x3014]        # 0x140008d50
   140005d3c:	call   0x140001278
   140005d41:	lea    rax,[rsp+0x78]
   140005d46:	xor    esi,esi
   140005d48:	and    QWORD PTR [rsp+0x78],rsi
   140005d4d:	lea    rdx,[rip+0x2f6c]        # 0x140008cc0
   140005d54:	mov    r9d,0x20119
   140005d5a:	mov    QWORD PTR [rsp+0x20],rax
   140005d5f:	xor    r8d,r8d
   140005d62:	mov    rcx,0xffffffff80000002
   140005d69:	xor    edi,edi
   140005d6b:	call   QWORD PTR [rip+0x2297]        # 0x140008008
   140005d71:	test   eax,eax
   140005d73:	jne    0x140005df4
   140005d75:	mov    rdi,QWORD PTR [rsp+0x78]
   140005d7a:	lea    rax,[rsp+0x68]
   140005d7f:	and    DWORD PTR [rsp+0x60],esi
   140005d83:	lea    r9,[rsp+0x70]
   140005d88:	mov    QWORD PTR [rsp+0x28],rax
   140005d8d:	lea    rdx,[rip+0x2f8c]        # 0x140008d20
   140005d94:	lea    rax,[rsp+0x60]
   140005d99:	mov    DWORD PTR [rsp+0x68],0x4
   140005da1:	xor    r8d,r8d
   140005da4:	mov    QWORD PTR [rsp+0x20],rax
   140005da9:	mov    rcx,rdi
   140005dac:	call   QWORD PTR [rip+0x2296]        # 0x140008048
   140005db2:	test   eax,eax
   140005db4:	jne    0x140005df4
   140005db6:	cmp    DWORD PTR [rsp+0x70],0x4
   140005dbb:	jne    0x140005df4
   140005dbd:	test   eax,eax
   140005dbf:	jne    0x140005df4
   140005dc1:	cmp    DWORD PTR [rsp+0x60],ebx
   140005dc5:	jne    0x140005df4
   140005dc7:	mov    esi,ebx
   140005dc9:	mov    rcx,QWORD PTR [rip+0x5250]        # 0x14000b020
   140005dd0:	cmp    rcx,rbp
   140005dd3:	je     0x140005e29
   140005dd5:	test   BYTE PTR [rcx+0x1c],0x2
   140005dd9:	je     0x140005dfb
   140005ddb:	cmp    BYTE PTR [rcx+0x19],0x3
   140005ddf:	jb     0x140005dfb
   140005de1:	mov    rcx,QWORD PTR [rcx+0x10]
   140005de5:	lea    edx,[rax+0x18]
   140005de8:	lea    r8,[rip+0x2f61]        # 0x140008d50
   140005def:	call   0x140001278
   140005df4:	mov    rcx,QWORD PTR [rip+0x5225]        # 0x14000b020
   140005dfb:	cmp    rcx,rbp
   140005dfe:	je     0x140005e29
   140005e00:	test   BYTE PTR [rcx+0x1c],bl
   140005e03:	je     0x140005e29
   140005e05:	cmp    BYTE PTR [rcx+0x19],0x5
   140005e09:	jb     0x140005e29
   140005e0b:	mov    rcx,QWORD PTR [rcx+0x10]
   140005e0f:	lea    r8,[rip+0x2f3a]        # 0x140008d50
   140005e16:	xor    r9d,r9d
   140005e19:	mov    edx,0x19
   140005e1e:	test   esi,esi
   140005e20:	sete   r9b
   140005e24:	call   0x14000129c
   140005e29:	xor    ebx,ebx
   140005e2b:	test   esi,esi
   140005e2d:	sete   bl
   140005e30:	test   rdi,rdi
   140005e33:	je     0x140005e3e
   140005e35:	mov    rcx,rdi
   140005e38:	call   QWORD PTR [rip+0x2252]        # 0x140008090
   140005e3e:	mov    eax,ebx
   140005e40:	add    rsp,0x38
   140005e44:	pop    rdi
   140005e45:	pop    rsi
   140005e46:	pop    rbp
   140005e47:	pop    rbx
   140005e48:	ret    
   140005e49:	int3   
   140005e4a:	int3   
   140005e4b:	int3   
   140005e4c:	int3   
   140005e4d:	int3   
   140005e4e:	int3   
   140005e4f:	int3   
   140005e50:	mov    QWORD PTR [rsp+0x8],rbx
   140005e55:	push   rdi
   140005e56:	sub    rsp,0x20
   140005e5a:	mov    BYTE PTR [rcx+0x4c],0x0
   140005e5e:	lea    rax,[rip+0x2973]        # 0x1400087d8
   140005e65:	mov    QWORD PTR [rcx],rax
   140005e68:	mov    rdi,rcx
   140005e6b:	mov    DWORD PTR [rcx+0x50],0x7
   140005e72:	mov    rax,QWORD PTR [rip+0x51af]        # 0x14000b028
   140005e79:	mov    rbx,QWORD PTR [rax+0x18]
   140005e7d:	mov    rcx,rbx
   140005e80:	call   QWORD PTR [rip+0x249a]        # 0x140008320
   140005e86:	lea    rcx,[rip+0x519b]        # 0x14000b028
   140005e8d:	call   rbx
   140005e8f:	add    rax,0x18
   140005e93:	mov    QWORD PTR [rdi+0x58],rax
   140005e97:	mov    rax,QWORD PTR [rip+0x518a]        # 0x14000b028
   140005e9e:	mov    rbx,QWORD PTR [rax+0x18]
   140005ea2:	mov    rcx,rbx
   140005ea5:	call   QWORD PTR [rip+0x2475]        # 0x140008320
   140005eab:	lea    rcx,[rip+0x5176]        # 0x14000b028
   140005eb2:	call   rbx
   140005eb4:	add    rax,0x18
   140005eb8:	mov    QWORD PTR [rdi+0x60],rax
   140005ebc:	mov    rax,QWORD PTR [rip+0x5165]        # 0x14000b028
   140005ec3:	mov    rbx,QWORD PTR [rax+0x18]
   140005ec7:	mov    rcx,rbx
   140005eca:	call   QWORD PTR [rip+0x2450]        # 0x140008320
   140005ed0:	lea    rcx,[rip+0x5151]        # 0x14000b028
   140005ed7:	call   rbx
   140005ed9:	add    rax,0x18
   140005edd:	mov    QWORD PTR [rdi+0x68],rax
   140005ee1:	mov    rax,QWORD PTR [rip+0x5140]        # 0x14000b028
   140005ee8:	mov    rbx,QWORD PTR [rax+0x18]
   140005eec:	mov    rcx,rbx
   140005eef:	call   QWORD PTR [rip+0x242b]        # 0x140008320
   140005ef5:	lea    rcx,[rip+0x512c]        # 0x14000b028
   140005efc:	call   rbx
   140005efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f03:	add    rax,0x18
   140005f07:	mov    QWORD PTR [rdi+0x70],rax
   140005f0b:	mov    rax,rdi
   140005f0e:	add    rsp,0x20
   140005f12:	pop    rdi
   140005f13:	ret    
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	int3   
   140005f1d:	int3   
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	mov    QWORD PTR [rsp+0x8],rbx
   140005f25:	push   rdi
   140005f26:	sub    rsp,0x20
   140005f2a:	mov    ebx,edx
   140005f2c:	mov    rdi,rcx
   140005f2f:	call   0x140005f58
   140005f34:	test   bl,0x1
   140005f37:	je     0x140005f41
   140005f39:	mov    rcx,rdi
   140005f3c:	call   0x1400066b8
   140005f41:	mov    rax,rdi
   140005f44:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f49:	add    rsp,0x20
   140005f4d:	pop    rdi
   140005f4e:	ret    
   140005f4f:	int3   
   140005f50:	int3   
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	mov    rax,rsp
   140005f5b:	mov    QWORD PTR [rax+0x8],rbx
   140005f5f:	mov    QWORD PTR [rax+0x10],rbp
   140005f63:	mov    QWORD PTR [rax+0x18],rsi
   140005f67:	mov    QWORD PTR [rax+0x20],rdi
   140005f6b:	push   r14
   140005f6d:	sub    rsp,0x20
   140005f71:	mov    rsi,QWORD PTR [rcx+0x70]
   140005f75:	lea    rax,[rip+0x285c]        # 0x1400087d8
   140005f7c:	or     ebp,0xffffffff
   140005f7f:	mov    QWORD PTR [rcx],rax
   140005f82:	mov    eax,ebp
   140005f84:	mov    r14,rcx
   140005f87:	lock xadd DWORD PTR [rsi-0x8],eax
   140005f8c:	add    eax,ebp
   140005f8e:	test   eax,eax
   140005f90:	jg     0x140005faf
   140005f92:	mov    rdi,QWORD PTR [rsi-0x18]
   140005f96:	mov    rax,QWORD PTR [rdi]
   140005f99:	mov    rbx,QWORD PTR [rax+0x8]
   140005f9d:	mov    rcx,rbx
   140005fa0:	call   QWORD PTR [rip+0x237a]        # 0x140008320
   140005fa6:	lea    rdx,[rsi-0x18]
   140005faa:	mov    rcx,rdi
   140005fad:	call   rbx
   140005faf:	mov    rsi,QWORD PTR [r14+0x68]
   140005fb3:	mov    eax,ebp
   140005fb5:	lock xadd DWORD PTR [rsi-0x8],eax
   140005fba:	add    eax,ebp
   140005fbc:	test   eax,eax
   140005fbe:	jg     0x140005fdd
   140005fc0:	mov    rdi,QWORD PTR [rsi-0x18]
   140005fc4:	mov    rax,QWORD PTR [rdi]
   140005fc7:	mov    rbx,QWORD PTR [rax+0x8]
   140005fcb:	mov    rcx,rbx
   140005fce:	call   QWORD PTR [rip+0x234c]        # 0x140008320
   140005fd4:	lea    rdx,[rsi-0x18]
   140005fd8:	mov    rcx,rdi
   140005fdb:	call   rbx
   140005fdd:	mov    rsi,QWORD PTR [r14+0x60]
   140005fe1:	mov    eax,ebp
   140005fe3:	lock xadd DWORD PTR [rsi-0x8],eax
   140005fe8:	add    eax,ebp
   140005fea:	test   eax,eax
   140005fec:	jg     0x14000600b
   140005fee:	mov    rdi,QWORD PTR [rsi-0x18]
   140005ff2:	mov    rax,QWORD PTR [rdi]
   140005ff5:	mov    rbx,QWORD PTR [rax+0x8]
   140005ff9:	mov    rcx,rbx
   140005ffc:	call   QWORD PTR [rip+0x231e]        # 0x140008320
   140006002:	lea    rdx,[rsi-0x18]
   140006006:	mov    rcx,rdi
   140006009:	call   rbx
   14000600b:	mov    rsi,QWORD PTR [r14+0x58]
   14000600f:	mov    eax,ebp
   140006011:	lock xadd DWORD PTR [rsi-0x8],eax
   140006016:	add    eax,ebp
   140006018:	test   eax,eax
   14000601a:	jg     0x140006039
   14000601c:	mov    rdi,QWORD PTR [rsi-0x18]
   140006020:	mov    rax,QWORD PTR [rdi]
   140006023:	mov    rbx,QWORD PTR [rax+0x8]
   140006027:	mov    rcx,rbx
   14000602a:	call   QWORD PTR [rip+0x22f0]        # 0x140008320
   140006030:	lea    rdx,[rsi-0x18]
   140006034:	mov    rcx,rdi
   140006037:	call   rbx
   140006039:	mov    rbx,QWORD PTR [rsp+0x30]
   14000603e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006043:	mov    rsi,QWORD PTR [rsp+0x40]
   140006048:	mov    rdi,QWORD PTR [rsp+0x48]
   14000604d:	add    rsp,0x20
   140006051:	pop    r14
   140006053:	ret    
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	mov    rax,rsp
   14000605f:	push   rbp
   140006060:	push   rsi
   140006061:	push   rdi
   140006062:	push   r12
   140006064:	push   r13
   140006066:	push   r14
   140006068:	push   r15
   14000606a:	lea    rbp,[rax-0x78]
   14000606e:	sub    rsp,0x140
   140006075:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000607e:	mov    QWORD PTR [rax+0x18],rbx
   140006082:	mov    rax,QWORD PTR [rip+0x4f87]        # 0x14000b010
   140006089:	xor    rax,rsp
   14000608c:	mov    QWORD PTR [rbp+0x30],rax
   140006090:	mov    r15,rdx
   140006093:	mov    rbx,rcx
   140006096:	xor    r12d,r12d
   140006099:	mov    QWORD PTR [rsp+0x50],r12
   14000609e:	mov    edx,0x100
   1400060a3:	lea    rcx,[rsp+0x50]
   1400060a8:	call   0x140002ed8
   1400060ad:	mov    rsi,QWORD PTR [rsp+0x50]
   1400060b2:	mov    DWORD PTR [rsp+0x44],0x44
   1400060ba:	mov    r13d,0x80
   1400060c0:	mov    DWORD PTR [rsp+0x40],r13d
   1400060c5:	lea    r14,[rbx+0x50]
   1400060c9:	mov    QWORD PTR [rsp+0x30],r14
   1400060ce:	lea    rax,[rsp+0x40]
   1400060d3:	mov    QWORD PTR [rsp+0x28],rax
   1400060d8:	mov    QWORD PTR [rsp+0x20],rsi
   1400060dd:	lea    r9,[rsp+0x44]
   1400060e2:	lea    r8,[rbp-0x20]
   1400060e6:	mov    rdx,r15
   1400060e9:	xor    ecx,ecx
   1400060eb:	call   QWORD PTR [rip+0x1f2f]        # 0x140008020
   1400060f1:	test   eax,eax
   1400060f3:	jne    0x140006224
   1400060f9:	call   QWORD PTR [rip+0x20a1]        # 0x1400081a0
   1400060ff:	cmp    eax,0x7a
   140006102:	jne    0x1400062aa
   140006108:	cmp    DWORD PTR [rsp+0x44],0x44
   14000610d:	jbe    0x14000611a
   14000610f:	mov    ecx,0x80004005
   140006114:	call   0x1400051b0
   140006119:	int3   
   14000611a:	cmp    DWORD PTR [rsp+0x40],r13d
   14000611f:	jbe    0x1400061f4
   140006125:	mov    edi,DWORD PTR [rsp+0x40]
   140006129:	add    rdi,rdi
   14000612c:	mov    eax,r12d
   14000612f:	movabs rcx,0x7fffffffffffffff
   140006139:	cmp    rdi,rcx
   14000613c:	setb   al
   14000613f:	test   eax,eax
   140006141:	jne    0x14000614e
   140006143:	mov    ecx,0x80004005
   140006148:	call   0x1400051b0
   14000614d:	int3   
   14000614e:	add    rdi,rdi
   140006151:	mov    rax,QWORD PTR [rsp+0x50]
   140006156:	test   rax,rax
   140006159:	jne    0x140006173
   14000615b:	cmp    rdi,r13
   14000615e:	jbe    0x1400061e5
   140006164:	mov    rdx,rdi
   140006167:	lea    rcx,[rsp+0x50]
   14000616c:	call   0x140002ed8
   140006171:	jmp    0x1400061ef
   140006173:	cmp    rdi,r13
   140006176:	jbe    0x1400061e5
   140006178:	lea    rcx,[rsp+0x58]
   14000617d:	mov    rdx,rdi
   140006180:	cmp    rax,rcx
   140006183:	lea    rcx,[rsp+0x50]
   140006188:	jne    0x1400061de
   14000618a:	call   0x140002ed8
   14000618f:	mov    r9,r13
   140006192:	lea    r8,[rsp+0x58]
   140006197:	mov    rdx,rdi
   14000619a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000619f:	call   QWORD PTR [rip+0x214b]        # 0x1400082f0
   1400061a5:	test   eax,eax
   1400061a7:	je     0x1400061ef
   1400061a9:	cmp    eax,0xc
   1400061ac:	je     0x1400061d3
   1400061ae:	cmp    eax,0x16
   1400061b1:	je     0x1400061c8
   1400061b3:	cmp    eax,0x22
   1400061b6:	je     0x1400061c8
   1400061b8:	cmp    eax,0x50
   1400061bb:	je     0x1400061ef
   1400061bd:	mov    ecx,0x80004005
   1400061c2:	call   0x1400051b0
   1400061c7:	int3   
   1400061c8:	mov    ecx,0x80070057
   1400061cd:	call   0x1400051b0
   1400061d2:	int3   
   1400061d3:	mov    ecx,0x8007000e
   1400061d8:	call   0x1400051b0
   1400061dd:	int3   
   1400061de:	call   0x140006648
   1400061e3:	jmp    0x1400061ef
   1400061e5:	lea    rax,[rsp+0x58]
   1400061ea:	mov    QWORD PTR [rsp+0x50],rax
   1400061ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400061f4:	mov    QWORD PTR [rsp+0x30],r14
   1400061f9:	lea    rax,[rsp+0x40]
   1400061fe:	mov    QWORD PTR [rsp+0x28],rax
   140006203:	mov    QWORD PTR [rsp+0x20],rsi
   140006208:	lea    r9,[rsp+0x44]
   14000620d:	lea    r8,[rbp-0x20]
   140006211:	mov    rdx,r15
   140006214:	xor    ecx,ecx
   140006216:	call   QWORD PTR [rip+0x1e04]        # 0x140008020
   14000621c:	test   eax,eax
   14000621e:	je     0x1400062aa
   140006224:	mov    BYTE PTR [rbx+0x4c],0x1
   140006228:	lea    rdx,[rbx+0x8]
   14000622c:	lea    r8,[rbp-0x20]
   140006230:	mov    ecx,DWORD PTR [rsp+0x44]
   140006234:	call   QWORD PTR [rip+0x1dee]        # 0x140008028
   14000623a:	test   eax,eax
   14000623c:	je     0x1400062aa
   14000623e:	lea    rcx,[rbx+0x60]
   140006242:	or     rdi,0xffffffffffffffff
   140006246:	test   rsi,rsi
   140006249:	jne    0x140006250
   14000624b:	mov    eax,r12d
   14000624e:	jmp    0x14000625d
   140006250:	mov    rax,rdi
   140006253:	inc    rax
   140006256:	cmp    WORD PTR [rsi+rax*2],r12w
   14000625b:	jne    0x140006253
   14000625d:	mov    r8d,eax
   140006260:	mov    rdx,rsi
   140006263:	call   0x140004ee0
   140006268:	lea    rcx,[rbx+0x58]
   14000626c:	inc    rdi
   14000626f:	cmp    WORD PTR [r15+rdi*2],r12w
   140006274:	jne    0x14000626c
   140006276:	mov    r8d,edi
   140006279:	mov    rdx,r15
   14000627c:	call   0x140004ee0
   140006281:	lea    rcx,[rbx+0x70]
   140006285:	xor    r8d,r8d
   140006288:	xor    edx,edx
   14000628a:	call   0x140004ee0
   14000628f:	nop
   140006290:	lea    rcx,[rsp+0x58]
   140006295:	cmp    QWORD PTR [rsp+0x50],rcx
   14000629a:	je     0x1400062a6
   14000629c:	lea    rcx,[rsp+0x50]
   1400062a1:	call   0x140002ea8
   1400062a6:	mov    al,0x1
   1400062a8:	jmp    0x1400062f1
   1400062aa:	mov    DWORD PTR [r14],0x7
   1400062b1:	lea    rcx,[rbx+0x58]
   1400062b5:	call   0x140004c60
   1400062ba:	lea    rcx,[rbx+0x60]
   1400062be:	call   0x140004c60
   1400062c3:	lea    rcx,[rbx+0x68]
   1400062c7:	call   0x140004c60
   1400062cc:	lea    rcx,[rbx+0x70]
   1400062d0:	call   0x140004c60
   1400062d5:	mov    BYTE PTR [rbx+0x4c],r12b
   1400062d9:	lea    rax,[rsp+0x58]
   1400062de:	cmp    QWORD PTR [rsp+0x50],rax
   1400062e3:	je     0x1400062ef
   1400062e5:	lea    rcx,[rsp+0x50]
   1400062ea:	call   0x140002ea8
   1400062ef:	xor    al,al
   1400062f1:	mov    rcx,QWORD PTR [rbp+0x30]
   1400062f5:	xor    rcx,rsp
   1400062f8:	call   0x140006b00
   1400062fd:	mov    rbx,QWORD PTR [rsp+0x190]
   140006305:	add    rsp,0x140
   14000630c:	pop    r15
   14000630e:	pop    r14
   140006310:	pop    r13
   140006312:	pop    r12
   140006314:	pop    rdi
   140006315:	pop    rsi
   140006316:	pop    rbp
   140006317:	ret    
   140006318:	int3   
   140006319:	int3   
   14000631a:	int3   
   14000631b:	int3   
   14000631c:	int3   
   14000631d:	int3   
   14000631e:	int3   
   14000631f:	int3   
   140006320:	mov    r11,rsp
   140006323:	mov    QWORD PTR [r11+0x8],rcx
   140006327:	push   rdi
   140006328:	sub    rsp,0x30
   14000632c:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140006334:	mov    QWORD PTR [r11+0x18],rbx
   140006338:	lea    rdi,[rcx+0x68]
   14000633c:	mov    rax,QWORD PTR [rdi]
   14000633f:	xor    ebx,ebx
   140006341:	cmp    DWORD PTR [rax-0x10],ebx
   140006344:	jne    0x140006387
   140006346:	add    rcx,0x8
   14000634a:	lea    rdx,[r11+0x10]
   14000634e:	call   QWORD PTR [rip+0x1cc4]        # 0x140008018
   140006354:	test   eax,eax
   140006356:	je     0x140006387
   140006358:	mov    rdx,QWORD PTR [rsp+0x48]
   14000635d:	test   rdx,rdx
   140006360:	je     0x140006371
   140006362:	or     rax,0xffffffffffffffff
   140006366:	inc    rax
   140006369:	cmp    WORD PTR [rdx+rax*2],bx
   14000636d:	jne    0x140006366
   14000636f:	mov    ebx,eax
   140006371:	mov    r8d,ebx
   140006374:	mov    rcx,rdi
   140006377:	call   0x140004ee0
   14000637c:	mov    rcx,QWORD PTR [rsp+0x48]
   140006381:	call   QWORD PTR [rip+0x1d31]        # 0x1400080b8
   140006387:	mov    rax,QWORD PTR [rdi]
   14000638a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000638f:	add    rsp,0x30
   140006393:	pop    rdi
   140006394:	ret    
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	mov    rax,rsp
   14000639f:	push   rbp
   1400063a0:	push   rdi
   1400063a1:	push   r12
   1400063a3:	push   r14
   1400063a5:	push   r15
   1400063a7:	lea    rbp,[rax-0x5f]
   1400063ab:	sub    rsp,0xc0
   1400063b2:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   1400063ba:	mov    QWORD PTR [rax+0x18],rbx
   1400063be:	mov    QWORD PTR [rax+0x20],rsi
   1400063c2:	mov    rax,QWORD PTR [rip+0x4c47]        # 0x14000b010
   1400063c9:	xor    rax,rsp
   1400063cc:	mov    QWORD PTR [rbp+0x27],rax
   1400063d0:	mov    rsi,rdx
   1400063d3:	mov    r15,rcx
   1400063d6:	lea    r12,[rip+0x4c43]        # 0x14000b020
   1400063dd:	mov    rcx,QWORD PTR [rip+0x4c3c]        # 0x14000b020
   1400063e4:	cmp    rcx,r12
   1400063e7:	je     0x14000640a
   1400063e9:	test   BYTE PTR [rcx+0x1c],0x1
   1400063ed:	je     0x14000640a
   1400063ef:	cmp    BYTE PTR [rcx+0x19],0x5
   1400063f3:	jb     0x14000640a
   1400063f5:	mov    edx,0x12
   1400063fa:	lea    r8,[rip+0x295f]        # 0x140008d60
   140006401:	mov    rcx,QWORD PTR [rcx+0x10]
   140006405:	call   0x140001278
   14000640a:	mov    edx,0x7fff
   14000640f:	mov    DWORD PTR [rbp-0x69],edx
   140006412:	mov    rax,QWORD PTR [rsi]
   140006415:	mov    ecx,0x1
   14000641a:	sub    ecx,DWORD PTR [rax-0x8]
   14000641d:	mov    eax,DWORD PTR [rax-0xc]
   140006420:	sub    eax,edx
   140006422:	or     eax,ecx
   140006424:	jge    0x14000642e
   140006426:	mov    rcx,rsi
   140006429:	call   0x140004e7c
   14000642e:	lea    r8,[rbp-0x69]
   140006432:	mov    rdx,QWORD PTR [rsi]
   140006435:	mov    ecx,0x2
   14000643a:	call   QWORD PTR [rip+0x6bd8]        # 0x14000d018
   140006440:	movzx  edi,al
   140006443:	mov    rcx,QWORD PTR [rip+0x4bd6]        # 0x14000b020
   14000644a:	cmp    rcx,r12
   14000644d:	je     0x140006473
   14000644f:	test   BYTE PTR [rcx+0x1c],0x2
   140006453:	je     0x140006473
   140006455:	cmp    BYTE PTR [rcx+0x19],0x4
   140006459:	jb     0x140006473
   14000645b:	mov    edx,0x13
   140006460:	mov    r9d,edi
   140006463:	lea    r8,[rip+0x28f6]        # 0x140008d60
   14000646a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000646e:	call   0x14000129c
   140006473:	mov    rcx,QWORD PTR [rsi]
   140006476:	or     r14,0xffffffffffffffff
   14000647a:	xor    ebx,ebx
   14000647c:	test   rcx,rcx
   14000647f:	jne    0x140006485
   140006481:	mov    eax,ebx
   140006483:	jmp    0x140006499
   140006485:	mov    rax,r14
   140006488:	inc    rax
   14000648b:	cmp    WORD PTR [rcx+rax*2],bx
   14000648f:	jne    0x140006488
   140006491:	test   eax,eax
   140006493:	js     0x14000660c
   140006499:	cmp    eax,DWORD PTR [rcx-0xc]
   14000649c:	jg     0x14000660c
   1400064a2:	mov    DWORD PTR [rcx-0x10],eax
   1400064a5:	movsxd rcx,eax
   1400064a8:	mov    rax,QWORD PTR [rsi]
   1400064ab:	mov    WORD PTR [rax+rcx*2],bx
   1400064af:	lea    rcx,[rbp-0x59]
   1400064b3:	call   0x140005e50
   1400064b8:	nop
   1400064b9:	cmp    edi,0x1
   1400064bc:	jne    0x1400065ce
   1400064c2:	mov    rcx,QWORD PTR [rip+0x4b57]        # 0x14000b020
   1400064c9:	cmp    rcx,r12
   1400064cc:	je     0x1400064f0
   1400064ce:	test   BYTE PTR [rcx+0x1c],0x2
   1400064d2:	je     0x1400064f0
   1400064d4:	cmp    BYTE PTR [rcx+0x19],0x4
   1400064d8:	jb     0x1400064f0
   1400064da:	lea    edx,[rdi+0x13]
   1400064dd:	mov    r9,QWORD PTR [rsi]
   1400064e0:	lea    r8,[rip+0x2879]        # 0x140008d60
   1400064e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400064eb:	call   0x140005c6c
   1400064f0:	mov    rdi,QWORD PTR [rsi]
   1400064f3:	mov    DWORD PTR [rbp-0x9],0x7
   1400064fa:	lea    rcx,[rbp-0x1]
   1400064fe:	call   0x140004c60
   140006503:	lea    rcx,[rbp+0x7]
   140006507:	call   0x140004c60
   14000650c:	lea    rcx,[rbp+0xf]
   140006510:	call   0x140004c60
   140006515:	lea    rcx,[rbp+0x17]
   140006519:	call   0x140004c60
   14000651e:	mov    BYTE PTR [rbp-0xd],bl
   140006521:	test   rdi,rdi
   140006524:	jne    0x14000652a
   140006526:	mov    al,bl
   140006528:	jmp    0x140006536
   14000652a:	mov    rdx,rdi
   14000652d:	lea    rcx,[rbp-0x59]
   140006531:	call   0x14000605c
   140006536:	movzx  edi,al
   140006539:	mov    rcx,QWORD PTR [rip+0x4ae0]        # 0x14000b020
   140006540:	cmp    rcx,r12
   140006543:	je     0x140006570
   140006545:	test   BYTE PTR [rcx+0x1c],0x2
   140006549:	je     0x140006570
   14000654b:	cmp    BYTE PTR [rcx+0x19],0x4
   14000654f:	jb     0x140006570
   140006551:	mov    edx,0x15
   140006556:	mov    r9d,edi
   140006559:	lea    r8,[rip+0x2800]        # 0x140008d60
   140006560:	mov    rcx,QWORD PTR [rcx+0x10]
   140006564:	call   0x14000129c
   140006569:	mov    rcx,QWORD PTR [rip+0x4ab0]        # 0x14000b020
   140006570:	cmp    edi,0x1
   140006573:	jne    0x1400065d5
   140006575:	lea    rcx,[rbp-0x59]
   140006579:	call   0x140006320
   14000657e:	test   rax,rax
   140006581:	je     0x140006590
   140006583:	inc    r14
   140006586:	cmp    WORD PTR [rax+r14*2],bx
   14000658b:	jne    0x140006583
   14000658d:	mov    ebx,r14d
   140006590:	mov    r8d,ebx
   140006593:	mov    rdx,rax
   140006596:	mov    rcx,r15
   140006599:	call   0x140004ee0
   14000659e:	mov    rcx,QWORD PTR [rip+0x4a7b]        # 0x14000b020
   1400065a5:	cmp    rcx,r12
   1400065a8:	je     0x1400065ff
   1400065aa:	test   BYTE PTR [rcx+0x1c],0x2
   1400065ae:	je     0x1400065d5
   1400065b0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400065b4:	jb     0x1400065d5
   1400065b6:	mov    edx,0x16
   1400065bb:	mov    r9,QWORD PTR [r15]
   1400065be:	lea    r8,[rip+0x279b]        # 0x140008d60
   1400065c5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400065c9:	call   0x140005c6c
   1400065ce:	mov    rcx,QWORD PTR [rip+0x4a4b]        # 0x14000b020
   1400065d5:	cmp    rcx,r12
   1400065d8:	je     0x1400065ff
   1400065da:	test   BYTE PTR [rcx+0x1c],0x1
   1400065de:	je     0x1400065ff
   1400065e0:	cmp    BYTE PTR [rcx+0x19],0x5
   1400065e4:	jb     0x1400065ff
   1400065e6:	mov    edx,0x17
   1400065eb:	mov    r9d,edi
   1400065ee:	lea    r8,[rip+0x276b]        # 0x140008d60
   1400065f5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400065f9:	call   0x14000129c
   1400065fe:	nop
   1400065ff:	lea    rcx,[rbp-0x59]
   140006603:	call   0x140005f58
   140006608:	mov    eax,edi
   14000660a:	jmp    0x140006617
   14000660c:	mov    ecx,0x80070057
   140006611:	call   0x1400051b0
   140006616:	int3   
   140006617:	mov    rcx,QWORD PTR [rbp+0x27]
   14000661b:	xor    rcx,rsp
   14000661e:	call   0x140006b00
   140006623:	lea    r11,[rsp+0xc0]
   14000662b:	mov    rbx,QWORD PTR [r11+0x40]
   14000662f:	mov    rsi,QWORD PTR [r11+0x48]
   140006633:	mov    rsp,r11
   140006636:	pop    r15
   140006638:	pop    r14
   14000663a:	pop    r12
   14000663c:	pop    rdi
   14000663d:	pop    rbp
   14000663e:	ret    
   14000663f:	int3   
   140006640:	int3   
   140006641:	int3   
   140006642:	int3   
   140006643:	int3   
   140006644:	int3   
   140006645:	int3   
   140006646:	int3   
   140006647:	int3   
   140006648:	rex push rbx
   14000664a:	sub    rsp,0x20
   14000664e:	mov    rbx,rcx
   140006651:	mov    rcx,QWORD PTR [rcx]
   140006654:	call   QWORD PTR [rip+0x1c7e]        # 0x1400082d8
   14000665a:	test   rax,rax
   14000665d:	je     0x140006668
   14000665f:	mov    QWORD PTR [rbx],rax
   140006662:	add    rsp,0x20
   140006666:	pop    rbx
   140006667:	ret    
   140006668:	mov    ecx,0x8007000e
   14000666d:	call   0x1400051b0
   140006672:	int3   
   140006673:	int3   
   140006674:	int3   
   140006675:	int3   
   140006676:	int3   
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	int3   
   14000667d:	int3   
   14000667e:	int3   
   14000667f:	int3   
   140006680:	sub    rsp,0x38
   140006684:	and    DWORD PTR [rsp+0x28],0x0
   140006689:	mov    r9,QWORD PTR [rip+0x1a20]        # 0x1400080b0
   140006690:	mov    r8,QWORD PTR [rip+0x26d9]        # 0x140008d70
   140006697:	mov    QWORD PTR [rsp+0x20],rdx
   14000669c:	mov    rdx,rcx
   14000669f:	lea    rcx,[rip+0xffffffffffff995a]        # 0x140000000
   1400066a6:	call   QWORD PTR [rip+0x1aac]        # 0x140008158
   1400066ac:	add    rsp,0x38
   1400066b0:	ret    
   1400066b1:	int3   
   1400066b2:	int3   
   1400066b3:	int3   
   1400066b4:	int3   
   1400066b5:	int3   
   1400066b6:	int3   
   1400066b7:	int3   
   1400066b8:	jmp    0x140006b24
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	jmp    0x1400066b8
   1400066c9:	int3   
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	int3   
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066d5:	push   rdi
   1400066d6:	sub    rsp,0x20
   1400066da:	mov    rdi,rcx
   1400066dd:	jmp    0x1400066ee
   1400066df:	mov    rcx,rdi
   1400066e2:	call   0x140006f16
   1400066e7:	test   eax,eax
   1400066e9:	je     0x1400066fb
   1400066eb:	mov    rcx,rdi
   1400066ee:	call   0x140006b30
   1400066f3:	mov    rbx,rax
   1400066f6:	test   rax,rax
   1400066f9:	je     0x1400066df
   1400066fb:	mov    rax,rbx
   1400066fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140006703:	add    rsp,0x20
   140006707:	pop    rdi
   140006708:	ret    
   140006709:	int3   
   14000670a:	int3   
   14000670b:	int3   
   14000670c:	int3   
   14000670d:	int3   
   14000670e:	int3   
   14000670f:	int3   
   140006710:	jmp    0x1400066d0
   140006715:	int3   
   140006716:	int3   
   140006717:	int3   
   140006718:	int3   
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	int3   
   14000671d:	int3   
   14000671e:	int3   
   14000671f:	int3   
   140006720:	sub    rsp,0x28
   140006724:	mov    eax,0x5a4d
   140006729:	cmp    WORD PTR [rip+0xffffffffffff98d0],ax        # 0x140000000
   140006730:	je     0x140006736
   140006732:	xor    eax,eax
   140006734:	jmp    0x140006785
   140006736:	movsxd rcx,DWORD PTR [rip+0xffffffffffff98ff]        # 0x14000003c
   14000673d:	lea    rax,[rip+0xffffffffffff98bc]        # 0x140000000
   140006744:	add    rcx,rax
   140006747:	cmp    DWORD PTR [rcx],0x4550
   14000674d:	jne    0x140006732
   14000674f:	movzx  eax,WORD PTR [rcx+0x18]
   140006753:	cmp    eax,0x10b
   140006758:	je     0x140006774
   14000675a:	cmp    eax,0x20b
   14000675f:	jne    0x140006732
   140006761:	xor    eax,eax
   140006763:	cmp    DWORD PTR [rcx+0x84],0xe
   14000676a:	jbe    0x140006785
   14000676c:	cmp    DWORD PTR [rcx+0xf8],eax
   140006772:	jmp    0x140006782
   140006774:	xor    eax,eax
   140006776:	cmp    DWORD PTR [rcx+0x74],0xe
   14000677a:	jbe    0x140006785
   14000677c:	cmp    DWORD PTR [rcx+0xe8],eax
   140006782:	setne  al
   140006785:	mov    ecx,0x2
   14000678a:	mov    DWORD PTR [rip+0x4910],eax        # 0x14000b0a0
   140006790:	call   0x140006ff8
   140006795:	mov    ecx,eax
   140006797:	call   QWORD PTR [rip+0x1abb]        # 0x140008258
   14000679d:	mov    rcx,QWORD PTR [rip+0x1af4]        # 0x140008298
   1400067a4:	or     rax,0xffffffffffffffff
   1400067a8:	mov    QWORD PTR [rip+0x50c9],rax        # 0x14000b878
   1400067af:	mov    QWORD PTR [rip+0x50ca],rax        # 0x14000b880
   1400067b6:	mov    eax,DWORD PTR [rip+0x4e70]        # 0x14000b62c
   1400067bc:	mov    DWORD PTR [rcx],eax
   1400067be:	mov    rcx,QWORD PTR [rip+0x1adb]        # 0x1400082a0
   1400067c5:	mov    eax,DWORD PTR [rip+0x4e55]        # 0x14000b620
   1400067cb:	mov    DWORD PTR [rcx],eax
   1400067cd:	call   0x1400028c0
   1400067d2:	cmp    DWORD PTR [rip+0x482f],0x0        # 0x14000b008
   1400067d9:	jne    0x1400067e8
   1400067db:	lea    rcx,[rip+0xffffffffffffc0de]        # 0x1400028c0
   1400067e2:	call   QWORD PTR [rip+0x1a90]        # 0x140008278
   1400067e8:	xor    eax,eax
   1400067ea:	add    rsp,0x28
   1400067ee:	ret    
   1400067ef:	int3   
   1400067f0:	int3   
   1400067f1:	int3   
   1400067f2:	int3   
   1400067f3:	int3   
   1400067f4:	int3   
   1400067f5:	int3   
   1400067f6:	int3   
   1400067f7:	int3   
   1400067f8:	int3   
   1400067f9:	int3   
   1400067fa:	int3   
   1400067fb:	int3   
   1400067fc:	int3   
   1400067fd:	int3   
   1400067fe:	int3   
   1400067ff:	int3   
   140006800:	sub    rsp,0x38
   140006804:	mov    eax,DWORD PTR [rip+0x4e1e]        # 0x14000b628
   14000680a:	lea    r8,[rip+0x4887]        # 0x14000b098
   140006811:	mov    r9d,DWORD PTR [rip+0x4e0c]        # 0x14000b624
   140006818:	lea    rdx,[rip+0x4871]        # 0x14000b090
   14000681f:	mov    DWORD PTR [rip+0x487f],eax        # 0x14000b0a4
   140006825:	lea    rcx,[rip+0x485c]        # 0x14000b088
   14000682c:	lea    rax,[rip+0x4871]        # 0x14000b0a4
   140006833:	mov    QWORD PTR [rsp+0x20],rax
   140006838:	call   QWORD PTR [rip+0x1a12]        # 0x140008250
   14000683e:	mov    DWORD PTR [rip+0x4848],eax        # 0x14000b08c
   140006844:	add    rsp,0x38
   140006848:	ret    
   140006849:	int3   
   14000684a:	int3   
   14000684b:	int3   
   14000684c:	int3   
   14000684d:	int3   
   14000684e:	int3   
   14000684f:	int3   
   140006850:	mov    QWORD PTR [rsp+0x8],rbx
   140006855:	mov    QWORD PTR [rsp+0x10],rsi
   14000685a:	mov    QWORD PTR [rsp+0x18],rdi
   14000685f:	push   r12
   140006861:	push   r14
   140006863:	push   r15
   140006865:	sub    rsp,0xb0
   14000686c:	xor    r15d,r15d
   14000686f:	mov    DWORD PTR [rsp+0x20],r15d
   140006874:	lea    rcx,[rsp+0x40]
   140006879:	call   QWORD PTR [rip+0x1889]        # 0x140008108
   14000687f:	nop
   140006880:	mov    rax,QWORD PTR gs:0x30
   140006889:	mov    rbx,QWORD PTR [rax+0x8]
   14000688d:	mov    r14d,r15d
   140006890:	xor    eax,eax
   140006892:	lock cmpxchg QWORD PTR [rip+0x4fcd],rbx        # 0x14000b868
   14000689b:	je     0x1400068b9
   14000689d:	cmp    rax,rbx
   1400068a0:	jne    0x1400068ac
   1400068a2:	mov    edi,0x1
   1400068a7:	mov    r14d,edi
   1400068aa:	jmp    0x1400068be
   1400068ac:	mov    ecx,0x3e8
   1400068b1:	call   QWORD PTR [rip+0x1859]        # 0x140008110
   1400068b7:	jmp    0x140006890
   1400068b9:	mov    edi,0x1
   1400068be:	mov    eax,DWORD PTR [rip+0x4fac]        # 0x14000b870
   1400068c4:	cmp    eax,edi
   1400068c6:	jne    0x1400068d6
   1400068c8:	mov    esi,0x1f
   1400068cd:	mov    ecx,esi
   1400068cf:	call   0x140007044
   1400068d4:	jmp    0x140006947
   1400068d6:	mov    eax,DWORD PTR [rip+0x4f94]        # 0x14000b870
   1400068dc:	test   eax,eax
   1400068de:	jne    0x14000693c
   1400068e0:	mov    DWORD PTR [rip+0x4f8a],edi        # 0x14000b870
   1400068e6:	lea    r12,[rip+0x1aa3]        # 0x140008390
   1400068ed:	lea    rbx,[rip+0x1a84]        # 0x140008378
   1400068f4:	mov    QWORD PTR [rsp+0x30],rbx
   1400068f9:	mov    eax,r15d
   1400068fc:	mov    DWORD PTR [rsp+0x24],eax
   140006900:	cmp    rbx,r12
   140006903:	jae    0x14000692e
   140006905:	test   eax,eax
   140006907:	jne    0x140006932
   140006909:	mov    rsi,QWORD PTR [rbx]
   14000690c:	test   rsi,rsi
   14000690f:	je     0x140006923
   140006911:	mov    rcx,rsi
   140006914:	mov    rax,QWORD PTR [rip+0x1a05]        # 0x140008320
   14000691b:	call   rax
   14000691d:	call   rsi
   14000691f:	mov    DWORD PTR [rsp+0x24],eax
   140006923:	add    rbx,0x8
   140006927:	mov    QWORD PTR [rsp+0x30],rbx
   14000692c:	jmp    0x140006900
   14000692e:	test   eax,eax
   140006930:	je     0x140006942
   140006932:	mov    eax,0xff
   140006937:	jmp    0x140006aa3
   14000693c:	mov    DWORD PTR [rip+0x4742],edi        # 0x14000b084
   140006942:	mov    esi,0x1f
   140006947:	mov    eax,DWORD PTR [rip+0x4f23]        # 0x14000b870
   14000694d:	cmp    eax,edi
   14000694f:	jne    0x14000696e
   140006951:	lea    rdx,[rip+0x1a18]        # 0x140008370
   140006958:	lea    rcx,[rip+0x19d1]        # 0x140008330
   14000695f:	call   0x14000720a
   140006964:	mov    DWORD PTR [rip+0x4f02],0x2        # 0x14000b870
   14000696e:	test   r14d,r14d
   140006971:	jne    0x14000697d
   140006973:	mov    rax,r15
   140006976:	xchg   QWORD PTR [rip+0x4eeb],rax        # 0x14000b868
   14000697d:	cmp    QWORD PTR [rip+0x4f04],r15        # 0x14000b888
   140006984:	je     0x1400069b4
   140006986:	lea    rcx,[rip+0x4efb]        # 0x14000b888
   14000698d:	call   0x1400070a0
   140006992:	test   eax,eax
   140006994:	je     0x1400069b4
   140006996:	mov    rbx,QWORD PTR [rip+0x4eeb]        # 0x14000b888
   14000699d:	mov    rcx,rbx
   1400069a0:	mov    rax,QWORD PTR [rip+0x1979]        # 0x140008320
   1400069a7:	call   rax
   1400069a9:	xor    r8d,r8d
   1400069ac:	lea    edx,[r8+0x2]
   1400069b0:	xor    ecx,ecx
   1400069b2:	call   rbx
   1400069b4:	mov    rax,QWORD PTR [rip+0x18d5]        # 0x140008290
   1400069bb:	mov    rdx,QWORD PTR [rax]
   1400069be:	test   rdx,rdx
   1400069c1:	jne    0x1400069cd
   1400069c3:	mov    eax,0xff
   1400069c8:	jmp    0x140006aa3
   1400069cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400069d2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400069d6:	cmp    WORD PTR [rdx],0x20
   1400069da:	ja     0x140006a54
   1400069dc:	cmp    WORD PTR [rdx],r15w
   1400069e0:	je     0x1400069e6
   1400069e2:	test   ecx,ecx
   1400069e4:	jne    0x140006a54
   1400069e6:	movzx  eax,WORD PTR [rdx]
   1400069e9:	sub    ax,di
   1400069ec:	cmp    ax,si
   1400069ef:	ja     0x1400069fc
   1400069f1:	add    rdx,0x2
   1400069f5:	mov    QWORD PTR [rsp+0x28],rdx
   1400069fa:	jmp    0x1400069e6
   1400069fc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140006a00:	movzx  eax,WORD PTR [rsp+0x80]
   140006a08:	mov    r9d,0xa
   140006a0e:	and    cl,dil
   140006a11:	cmovne r9d,eax
   140006a15:	mov    r8,rdx
   140006a18:	xor    edx,edx
   140006a1a:	lea    rcx,[rip+0xffffffffffff95df]        # 0x140000000
   140006a21:	call   0x1400014d0
   140006a26:	mov    DWORD PTR [rip+0x4654],eax        # 0x14000b080
   140006a2c:	cmp    DWORD PTR [rip+0x466d],r15d        # 0x14000b0a0
   140006a33:	jne    0x140006a3d
   140006a35:	mov    ecx,eax
   140006a37:	call   QWORD PTR [rip+0x1823]        # 0x140008260
   140006a3d:	cmp    DWORD PTR [rip+0x4640],r15d        # 0x14000b084
   140006a44:	jne    0x140006a52
   140006a46:	call   QWORD PTR [rip+0x1824]        # 0x140008270
   140006a4c:	mov    eax,DWORD PTR [rip+0x462e]        # 0x14000b080
   140006a52:	jmp    0x140006aa3
   140006a54:	cmp    WORD PTR [rdx],0x22
   140006a58:	jne    0x140006a68
   140006a5a:	mov    eax,r15d
   140006a5d:	test   ecx,ecx
   140006a5f:	sete   al
   140006a62:	mov    ecx,eax
   140006a64:	mov    DWORD PTR [rsp+0x20],eax
   140006a68:	add    rdx,0x2
   140006a6c:	mov    QWORD PTR [rsp+0x28],rdx
   140006a71:	jmp    0x1400069d6
   140006a76:	mov    DWORD PTR [rip+0x4604],eax        # 0x14000b080
   140006a7c:	cmp    DWORD PTR [rip+0x461d],0x0        # 0x14000b0a0
   140006a83:	jne    0x140006a8e
   140006a85:	mov    ecx,eax
   140006a87:	call   QWORD PTR [rip+0x17db]        # 0x140008268
   140006a8d:	int3   
   140006a8e:	cmp    DWORD PTR [rip+0x45ef],0x0        # 0x14000b084
   140006a95:	jne    0x140006aa3
   140006a97:	call   QWORD PTR [rip+0x17d3]        # 0x140008270
   140006a9d:	mov    eax,DWORD PTR [rip+0x45dd]        # 0x14000b080
   140006aa3:	lea    r11,[rsp+0xb0]
   140006aab:	mov    rbx,QWORD PTR [r11+0x20]
   140006aaf:	mov    rsi,QWORD PTR [r11+0x28]
   140006ab3:	mov    rdi,QWORD PTR [r11+0x30]
   140006ab7:	mov    rsp,r11
   140006aba:	pop    r15
   140006abc:	pop    r14
   140006abe:	pop    r12
   140006ac0:	ret    
   140006ac1:	int3   
   140006ac2:	int3   
   140006ac3:	int3   
   140006ac4:	int3   
   140006ac5:	int3   
   140006ac6:	int3   
   140006ac7:	int3   
   140006ac8:	int3   
   140006ac9:	int3   
   140006aca:	int3   
   140006acb:	int3   
   140006acc:	int3   
   140006acd:	int3   
   140006ace:	int3   
   140006acf:	int3   
   140006ad0:	sub    rsp,0x28
   140006ad4:	call   0x140007134
   140006ad9:	add    rsp,0x28
   140006add:	jmp    0x140006850
   140006ae2:	int3   
   140006ae3:	int3   
   140006ae4:	int3   
   140006ae5:	int3   
   140006ae6:	int3   
   140006ae7:	int3   
   140006ae8:	int3   
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	int3   
   140006aed:	int3   
   140006aee:	int3   
   140006aef:	int3   
   140006af0:	int3   
   140006af1:	int3   
   140006af2:	int3   
   140006af3:	int3   
   140006af4:	int3   
   140006af5:	int3   
   140006af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006b00:	cmp    rcx,QWORD PTR [rip+0x4509]        # 0x14000b010
   140006b07:	jne    0x140006b19
   140006b09:	rol    rcx,0x10
   140006b0d:	test   cx,0xffff
   140006b12:	jne    0x140006b15
   140006b14:	ret    
   140006b15:	ror    rcx,0x10
   140006b19:	jmp    0x140006ca0
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	int3   
   140006b21:	int3   
   140006b22:	int3   
   140006b23:	int3   
   140006b24:	jmp    QWORD PTR [rip+0x16ee]        # 0x140008218
   140006b2a:	int3   
   140006b2b:	int3   
   140006b2c:	int3   
   140006b2d:	int3   
   140006b2e:	int3   
   140006b2f:	int3   
   140006b30:	jmp    QWORD PTR [rip+0x16ea]        # 0x140008220
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140006b41:	push   rdi
   140006b42:	sub    rsp,0x20
   140006b46:	mov    rdi,rcx
   140006b49:	mov    rax,QWORD PTR [rip+0x4d30]        # 0x14000b880
   140006b50:	mov    QWORD PTR [rsp+0x38],rax
   140006b55:	cmp    rax,0xffffffffffffffff
   140006b59:	jne    0x140006b72
   140006b5b:	mov    rbx,QWORD PTR [rip+0x1766]        # 0x1400082c8
   140006b62:	mov    rcx,rbx
   140006b65:	call   QWORD PTR [rip+0x17b5]        # 0x140008320
   140006b6b:	mov    rcx,rdi
   140006b6e:	call   rbx
   140006b70:	jmp    0x140006bcf
   140006b72:	mov    ecx,0x8
   140006b77:	call   0x14000723a
   140006b7c:	nop
   140006b7d:	mov    rax,QWORD PTR [rip+0x4cfc]        # 0x14000b880
   140006b84:	mov    QWORD PTR [rsp+0x38],rax
   140006b89:	mov    rax,QWORD PTR [rip+0x4ce8]        # 0x14000b878
   140006b90:	mov    QWORD PTR [rsp+0x40],rax
   140006b95:	lea    r8,[rsp+0x40]
   140006b9a:	lea    rdx,[rsp+0x38]
   140006b9f:	mov    rcx,rdi
   140006ba2:	call   0x140007252
   140006ba7:	mov    rbx,rax
   140006baa:	mov    rdx,QWORD PTR [rsp+0x38]
   140006baf:	mov    QWORD PTR [rip+0x4cca],rdx        # 0x14000b880
   140006bb6:	mov    rdx,QWORD PTR [rsp+0x40]
   140006bbb:	mov    QWORD PTR [rip+0x4cb6],rdx        # 0x14000b878
   140006bc2:	mov    ecx,0x8
   140006bc7:	call   0x140007246
   140006bcc:	mov    rax,rbx
   140006bcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bd4:	add    rsp,0x20
   140006bd8:	pop    rdi
   140006bd9:	ret    
   140006bda:	int3   
   140006bdb:	int3   
   140006bdc:	int3   
   140006bdd:	int3   
   140006bde:	int3   
   140006bdf:	int3   
   140006be0:	sub    rsp,0x28
   140006be4:	call   0x140006b3c
   140006be9:	neg    rax
   140006bec:	sbb    eax,eax
   140006bee:	neg    eax
   140006bf0:	dec    eax
   140006bf2:	add    rsp,0x28
   140006bf6:	ret    
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	sub    rsp,0x38
   140006c04:	mov    r9,rdx
   140006c07:	test   rdx,rdx
   140006c0a:	je     0x140006c41
   140006c0c:	xor    edx,edx
   140006c0e:	lea    rax,[rdx-0x20]
   140006c12:	div    r9
   140006c15:	cmp    rax,r8
   140006c18:	jae    0x140006c41
   140006c1a:	call   0x14000725e
   140006c1f:	and    QWORD PTR [rsp+0x20],0x0
   140006c25:	xor    r9d,r9d
   140006c28:	xor    r8d,r8d
   140006c2b:	xor    edx,edx
   140006c2d:	xor    ecx,ecx
   140006c2f:	mov    DWORD PTR [rax],0xc
   140006c35:	call   0x14000726c
   140006c3a:	xor    eax,eax
   140006c3c:	add    rsp,0x38
   140006c40:	ret    
   140006c41:	imul   r9,r8
   140006c45:	mov    rdx,r9
   140006c48:	add    rsp,0x38
   140006c4c:	jmp    0x140007342
   140006c51:	int3   
   140006c52:	int3   
   140006c53:	int3   
   140006c54:	int3   
   140006c55:	int3   
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	rex push rbx
   140006c5a:	sub    rsp,0x20
   140006c5e:	mov    rbx,rcx
   140006c61:	xor    ecx,ecx
   140006c63:	call   QWORD PTR [rip+0x148f]        # 0x1400080f8
   140006c69:	mov    rcx,rbx
   140006c6c:	call   QWORD PTR [rip+0x148e]        # 0x140008100
   140006c72:	call   QWORD PTR [rip+0x1478]        # 0x1400080f0
   140006c78:	mov    rcx,rax
   140006c7b:	mov    edx,0xc0000409
   140006c80:	add    rsp,0x20
   140006c84:	pop    rbx
   140006c85:	rex.W jmp QWORD PTR [rip+0x145c]        # 0x1400080e8
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	int3   
   140006c91:	int3   
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	int3   
   140006c95:	int3   
   140006c96:	int3   
   140006c97:	int3   
   140006c98:	int3   
   140006c99:	int3   
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	mov    QWORD PTR [rsp+0x8],rcx
   140006ca5:	sub    rsp,0x88
   140006cac:	lea    rcx,[rip+0x449d]        # 0x14000b150
   140006cb3:	call   QWORD PTR [rip+0x1657]        # 0x140008310
   140006cb9:	mov    rax,QWORD PTR [rip+0x4588]        # 0x14000b248
   140006cc0:	mov    QWORD PTR [rsp+0x48],rax
   140006cc5:	xor    r8d,r8d
   140006cc8:	lea    rdx,[rsp+0x50]
   140006ccd:	mov    rcx,QWORD PTR [rsp+0x48]
   140006cd2:	call   QWORD PTR [rip+0x1630]        # 0x140008308
   140006cd8:	mov    QWORD PTR [rsp+0x40],rax
   140006cdd:	cmp    QWORD PTR [rsp+0x40],0x0
   140006ce3:	je     0x140006d27
   140006ce5:	mov    QWORD PTR [rsp+0x38],0x0
   140006cee:	lea    rax,[rsp+0x58]
   140006cf3:	mov    QWORD PTR [rsp+0x30],rax
   140006cf8:	lea    rax,[rsp+0x60]
   140006cfd:	mov    QWORD PTR [rsp+0x28],rax
   140006d02:	lea    rax,[rip+0x4447]        # 0x14000b150
   140006d09:	mov    QWORD PTR [rsp+0x20],rax
   140006d0e:	mov    r9,QWORD PTR [rsp+0x40]
   140006d13:	mov    r8,QWORD PTR [rsp+0x48]
   140006d18:	mov    rdx,QWORD PTR [rsp+0x50]
   140006d1d:	xor    ecx,ecx
   140006d1f:	call   QWORD PTR [rip+0x15db]        # 0x140008300
   140006d25:	jmp    0x140006d4a
   140006d27:	mov    rax,QWORD PTR [rip+0x44ba]        # 0x14000b1e8
   140006d2e:	mov    rax,QWORD PTR [rax]
   140006d31:	mov    QWORD PTR [rip+0x4510],rax        # 0x14000b248
   140006d38:	mov    rax,QWORD PTR [rip+0x44a9]        # 0x14000b1e8
   140006d3f:	add    rax,0x8
   140006d43:	mov    QWORD PTR [rip+0x449e],rax        # 0x14000b1e8
   140006d4a:	mov    rax,QWORD PTR [rip+0x44f7]        # 0x14000b248
   140006d51:	mov    QWORD PTR [rip+0x4368],rax        # 0x14000b0c0
   140006d58:	mov    rax,QWORD PTR [rsp+0x90]
   140006d60:	mov    QWORD PTR [rip+0x4469],rax        # 0x14000b1d0
   140006d67:	mov    DWORD PTR [rip+0x433f],0xc0000409        # 0x14000b0b0
   140006d71:	mov    DWORD PTR [rip+0x4339],0x1        # 0x14000b0b4
   140006d7b:	mov    DWORD PTR [rip+0x4343],0x3        # 0x14000b0c8
   140006d85:	mov    eax,0x8
   140006d8a:	imul   rax,rax,0x0
   140006d8e:	lea    rcx,[rip+0x433b]        # 0x14000b0d0
   140006d95:	mov    QWORD PTR [rcx+rax*1],0x2
   140006d9d:	mov    eax,0x8
   140006da2:	imul   rax,rax,0x1
   140006da6:	lea    rcx,[rip+0x4323]        # 0x14000b0d0
   140006dad:	mov    rdx,QWORD PTR [rip+0x425c]        # 0x14000b010
   140006db4:	mov    QWORD PTR [rcx+rax*1],rdx
   140006db8:	mov    eax,0x8
   140006dbd:	imul   rax,rax,0x2
   140006dc1:	lea    rcx,[rip+0x4308]        # 0x14000b0d0
   140006dc8:	mov    rdx,QWORD PTR [rip+0x4249]        # 0x14000b018
   140006dcf:	mov    QWORD PTR [rcx+rax*1],rdx
   140006dd3:	mov    eax,0x8
   140006dd8:	imul   rax,rax,0x0
   140006ddc:	mov    rcx,QWORD PTR [rip+0x422d]        # 0x14000b010
   140006de3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006de8:	mov    eax,0x8
   140006ded:	imul   rax,rax,0x1
   140006df1:	mov    rcx,QWORD PTR [rip+0x4220]        # 0x14000b018
   140006df8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006dfd:	lea    rcx,[rip+0x169c]        # 0x1400084a0
   140006e04:	call   0x140006c58
   140006e09:	add    rsp,0x88
   140006e10:	ret    
   140006e11:	int3   
   140006e12:	int3   
   140006e13:	int3   
   140006e14:	int3   
   140006e15:	int3   
   140006e16:	int3   
   140006e17:	int3   
   140006e18:	sub    rsp,0x78
   140006e1c:	lea    rcx,[rip+0x432d]        # 0x14000b150
   140006e23:	call   QWORD PTR [rip+0x14e7]        # 0x140008310
   140006e29:	mov    rax,QWORD PTR [rip+0x4418]        # 0x14000b248
   140006e30:	mov    QWORD PTR [rsp+0x48],rax
   140006e35:	xor    r8d,r8d
   140006e38:	lea    rdx,[rsp+0x50]
   140006e3d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006e42:	call   QWORD PTR [rip+0x14c0]        # 0x140008308
   140006e48:	mov    QWORD PTR [rsp+0x40],rax
   140006e4d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006e53:	je     0x140006e97
   140006e55:	mov    QWORD PTR [rsp+0x38],0x0
   140006e5e:	lea    rax,[rsp+0x58]
   140006e63:	mov    QWORD PTR [rsp+0x30],rax
   140006e68:	lea    rax,[rsp+0x60]
   140006e6d:	mov    QWORD PTR [rsp+0x28],rax
   140006e72:	lea    rax,[rip+0x42d7]        # 0x14000b150
   140006e79:	mov    QWORD PTR [rsp+0x20],rax
   140006e7e:	mov    r9,QWORD PTR [rsp+0x40]
   140006e83:	mov    r8,QWORD PTR [rsp+0x48]
   140006e88:	mov    rdx,QWORD PTR [rsp+0x50]
   140006e8d:	xor    ecx,ecx
   140006e8f:	call   QWORD PTR [rip+0x146b]        # 0x140008300
   140006e95:	jmp    0x140006eba
   140006e97:	mov    rax,QWORD PTR [rip+0x434a]        # 0x14000b1e8
   140006e9e:	mov    rax,QWORD PTR [rax]
   140006ea1:	mov    QWORD PTR [rip+0x43a0],rax        # 0x14000b248
   140006ea8:	mov    rax,QWORD PTR [rip+0x4339]        # 0x14000b1e8
   140006eaf:	add    rax,0x8
   140006eb3:	mov    QWORD PTR [rip+0x432e],rax        # 0x14000b1e8
   140006eba:	mov    rax,QWORD PTR [rip+0x4387]        # 0x14000b248
   140006ec1:	mov    QWORD PTR [rip+0x41f8],rax        # 0x14000b0c0
   140006ec8:	mov    DWORD PTR [rip+0x41de],0xc0000409        # 0x14000b0b0
   140006ed2:	mov    DWORD PTR [rip+0x41d8],0x1        # 0x14000b0b4
   140006edc:	mov    DWORD PTR [rip+0x41e2],0x1        # 0x14000b0c8
   140006ee6:	mov    eax,0x8
   140006eeb:	imul   rax,rax,0x0
   140006eef:	lea    rcx,[rip+0x41da]        # 0x14000b0d0
   140006ef6:	mov    QWORD PTR [rcx+rax*1],0x8
   140006efe:	lea    rcx,[rip+0x159b]        # 0x1400084a0
   140006f05:	call   0x140006c58
   140006f0a:	add    rsp,0x78
   140006f0e:	ret    
   140006f0f:	int3   
   140006f10:	int3   
   140006f11:	int3   
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	jmp    QWORD PTR [rip+0x1314]        # 0x140008230
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	int3   
   140006f21:	int3   
   140006f22:	jmp    QWORD PTR [rip+0x1310]        # 0x140008238
   140006f28:	int3   
   140006f29:	int3   
   140006f2a:	int3   
   140006f2b:	int3   
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	sub    rsp,0x28
   140006f34:	mov    rax,QWORD PTR [rcx]
   140006f37:	cmp    DWORD PTR [rax],0xe06d7363
   140006f3d:	jne    0x140006f62
   140006f3f:	cmp    DWORD PTR [rax+0x18],0x4
   140006f43:	jne    0x140006f62
   140006f45:	mov    ecx,DWORD PTR [rax+0x20]
   140006f48:	lea    eax,[rcx-0x19930520]
   140006f4e:	cmp    eax,0x2
   140006f51:	jbe    0x140006f5b
   140006f53:	cmp    ecx,0x1994000
   140006f59:	jne    0x140006f62
   140006f5b:	call   QWORD PTR [rip+0x1347]        # 0x1400082a8
   140006f61:	int3   
   140006f62:	xor    eax,eax
   140006f64:	add    rsp,0x28
   140006f68:	ret    
   140006f69:	int3   
   140006f6a:	int3   
   140006f6b:	int3   
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	sub    rsp,0x28
   140006f74:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140006f30
   140006f7b:	call   QWORD PTR [rip+0x1177]        # 0x1400080f8
   140006f81:	xor    eax,eax
   140006f83:	add    rsp,0x28
   140006f87:	ret    
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	jmp    QWORD PTR [rip+0x12ac]        # 0x140008240
   140006f94:	int3   
   140006f95:	int3   
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	int3   
   140006f99:	int3   
   140006f9a:	int3   
   140006f9b:	int3   
   140006f9c:	sub    rsp,0x18
   140006fa0:	xor    edx,edx
   140006fa2:	lea    rax,[rcx-0x1]
   140006fa6:	cmp    rax,0xfffffffffffffffd
   140006faa:	ja     0x140006fe8
   140006fac:	mov    eax,0x5a4d
   140006fb1:	cmp    WORD PTR [rcx],ax
   140006fb4:	jne    0x140006fe0
   140006fb6:	cmp    DWORD PTR [rcx+0x3c],edx
   140006fb9:	jl     0x140006fe0
   140006fbb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006fc2:	jae    0x140006fe0
   140006fc4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006fc8:	add    rax,rcx
   140006fcb:	mov    QWORD PTR [rsp],rax
   140006fcf:	cmp    DWORD PTR [rax],0x4550
   140006fd5:	cmovne rax,rdx
   140006fd9:	mov    rdx,rax
   140006fdc:	mov    QWORD PTR [rsp],rax
   140006fe0:	jmp    0x140006fe8
   140006fe2:	xor    edx,edx
   140006fe4:	mov    QWORD PTR [rsp],rdx
   140006fe8:	mov    rax,rdx
   140006feb:	add    rsp,0x18
   140006fef:	ret    
   140006ff0:	int3   
   140006ff1:	int3   
   140006ff2:	int3   
   140006ff3:	int3   
   140006ff4:	int3   
   140006ff5:	int3   
   140006ff6:	int3   
   140006ff7:	int3   
   140006ff8:	rex push rbx
   140006ffa:	sub    rsp,0x20
   140006ffe:	mov    ebx,ecx
   140007000:	xor    ecx,ecx
   140007002:	call   QWORD PTR [rip+0x11e0]        # 0x1400081e8
   140007008:	test   rax,rax
   14000700b:	je     0x140007035
   14000700d:	mov    rcx,rax
   140007010:	call   0x140006f9c
   140007015:	test   rax,rax
   140007018:	je     0x140007035
   14000701a:	mov    ecx,0x2
   14000701f:	cmp    WORD PTR [rax+0x5c],cx
   140007023:	jne    0x140007029
   140007025:	mov    eax,ecx
   140007027:	jmp    0x140007037
   140007029:	cmp    WORD PTR [rax+0x5c],0x3
   14000702e:	mov    eax,0x1
   140007033:	je     0x140007037
   140007035:	mov    eax,ebx
   140007037:	add    rsp,0x20
   14000703b:	pop    rbx
   14000703c:	ret    
   14000703d:	int3   
   14000703e:	int3   
   14000703f:	int3   
   140007040:	int3   
   140007041:	int3   
   140007042:	int3   
   140007043:	int3   
   140007044:	jmp    QWORD PTR [rip+0x11fe]        # 0x140008248
   14000704a:	int3   
   14000704b:	int3   
   14000704c:	int3   
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007054:	xor    r9d,r9d
   140007057:	add    r8,rcx
   14000705a:	mov    r10,rdx
   14000705d:	movzx  eax,WORD PTR [r8+0x14]
   140007062:	movzx  r11d,WORD PTR [r8+0x6]
   140007067:	add    rax,0x18
   14000706b:	add    rax,r8
   14000706e:	test   r11d,r11d
   140007071:	je     0x140007091
   140007073:	mov    edx,DWORD PTR [rax+0xc]
   140007076:	cmp    r10,rdx
   140007079:	jb     0x140007085
   14000707b:	mov    ecx,DWORD PTR [rax+0x8]
   14000707e:	add    ecx,edx
   140007080:	cmp    r10,rcx
   140007083:	jb     0x140007093
   140007085:	inc    r9d
   140007088:	add    rax,0x28
   14000708c:	cmp    r9d,r11d
   14000708f:	jb     0x140007073
   140007091:	xor    eax,eax
   140007093:	ret    
   140007094:	int3   
   140007095:	int3   
   140007096:	int3   
   140007097:	int3   
   140007098:	int3   
   140007099:	int3   
   14000709a:	int3   
   14000709b:	int3   
   14000709c:	int3   
   14000709d:	int3   
   14000709e:	int3   
   14000709f:	int3   
   1400070a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400070a5:	push   rdi
   1400070a6:	sub    rsp,0x20
   1400070aa:	mov    rbx,rcx
   1400070ad:	lea    rdi,[rip+0xffffffffffff8f4c]        # 0x140000000
   1400070b4:	mov    rcx,rdi
   1400070b7:	call   0x140007100
   1400070bc:	test   eax,eax
   1400070be:	je     0x1400070e2
   1400070c0:	sub    rbx,rdi
   1400070c3:	mov    rdx,rbx
   1400070c6:	mov    rcx,rdi
   1400070c9:	call   0x140007050
   1400070ce:	test   rax,rax
   1400070d1:	je     0x1400070e2
   1400070d3:	mov    eax,DWORD PTR [rax+0x24]
   1400070d6:	shr    eax,0x1f
   1400070d9:	not    eax
   1400070db:	and    eax,0x1
   1400070de:	jmp    0x1400070e2
   1400070e0:	xor    eax,eax
   1400070e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070e7:	add    rsp,0x20
   1400070eb:	pop    rdi
   1400070ec:	ret    
   1400070ed:	int3   
   1400070ee:	int3   
   1400070ef:	int3   
   1400070f0:	int3   
   1400070f1:	int3   
   1400070f2:	int3   
   1400070f3:	int3   
   1400070f4:	int3   
   1400070f5:	int3   
   1400070f6:	int3   
   1400070f7:	int3   
   1400070f8:	int3   
   1400070f9:	int3   
   1400070fa:	int3   
   1400070fb:	int3   
   1400070fc:	int3   
   1400070fd:	int3   
   1400070fe:	int3   
   1400070ff:	int3   
   140007100:	mov    rax,rcx
   140007103:	mov    ecx,0x5a4d
   140007108:	cmp    WORD PTR [rax],cx
   14000710b:	je     0x140007110
   14000710d:	xor    eax,eax
   14000710f:	ret    
   140007110:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007114:	add    rcx,rax
   140007117:	xor    eax,eax
   140007119:	cmp    DWORD PTR [rcx],0x4550
   14000711f:	jne    0x14000712d
   140007121:	mov    edx,0x20b
   140007126:	cmp    WORD PTR [rcx+0x18],dx
   14000712a:	sete   al
   14000712d:	ret    
   14000712e:	int3   
   14000712f:	int3   
   140007130:	int3   
   140007131:	int3   
   140007132:	int3   
   140007133:	int3   
   140007134:	mov    QWORD PTR [rsp+0x20],rbx
   140007139:	push   rbp
   14000713a:	mov    rbp,rsp
   14000713d:	sub    rsp,0x20
   140007141:	and    QWORD PTR [rbp+0x18],0x0
   140007146:	movabs rbx,0x2b992ddfa232
   140007150:	mov    rax,QWORD PTR [rip+0x3eb9]        # 0x14000b010
   140007157:	cmp    rax,rbx
   14000715a:	jne    0x1400071ef
   140007160:	lea    rcx,[rbp+0x18]
   140007164:	call   QWORD PTR [rip+0xf66]        # 0x1400080d0
   14000716a:	mov    rax,QWORD PTR [rbp+0x18]
   14000716e:	mov    QWORD PTR [rbp+0x10],rax
   140007172:	call   QWORD PTR [rip+0xf60]        # 0x1400080d8
   140007178:	mov    eax,eax
   14000717a:	xor    QWORD PTR [rbp+0x10],rax
   14000717e:	call   QWORD PTR [rip+0xfc4]        # 0x140008148
   140007184:	mov    eax,eax
   140007186:	xor    QWORD PTR [rbp+0x10],rax
   14000718a:	call   QWORD PTR [rip+0xf38]        # 0x1400080c8
   140007190:	mov    eax,eax
   140007192:	shl    rax,0x18
   140007196:	xor    QWORD PTR [rbp+0x10],rax
   14000719a:	call   QWORD PTR [rip+0xf28]        # 0x1400080c8
   1400071a0:	mov    eax,eax
   1400071a2:	lea    rcx,[rbp+0x10]
   1400071a6:	xor    rax,QWORD PTR [rbp+0x10]
   1400071aa:	xor    rax,rcx
   1400071ad:	lea    rcx,[rbp+0x20]
   1400071b1:	mov    QWORD PTR [rbp+0x10],rax
   1400071b5:	call   QWORD PTR [rip+0xf25]        # 0x1400080e0
   1400071bb:	mov    eax,DWORD PTR [rbp+0x20]
   1400071be:	movabs rcx,0xffffffffffff
   1400071c8:	shl    rax,0x20
   1400071cc:	xor    rax,QWORD PTR [rbp+0x20]
   1400071d0:	xor    rax,QWORD PTR [rbp+0x10]
   1400071d4:	and    rax,rcx
   1400071d7:	movabs rcx,0x2b992ddfa233
   1400071e1:	cmp    rax,rbx
   1400071e4:	cmove  rax,rcx
   1400071e8:	mov    QWORD PTR [rip+0x3e21],rax        # 0x14000b010
   1400071ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400071f4:	not    rax
   1400071f7:	mov    QWORD PTR [rip+0x3e1a],rax        # 0x14000b018
   1400071fe:	add    rsp,0x20
   140007202:	pop    rbp
   140007203:	ret    
   140007204:	int3   
   140007205:	int3   
   140007206:	int3   
   140007207:	int3   
   140007208:	int3   
   140007209:	int3   
   14000720a:	jmp    QWORD PTR [rip+0x1070]        # 0x140008280
   140007210:	int3   
   140007211:	int3   
   140007212:	int3   
   140007213:	int3   
   140007214:	int3   
   140007215:	int3   
   140007216:	jmp    QWORD PTR [rip+0x106c]        # 0x140008288
   14000721c:	int3   
   14000721d:	int3   
   14000721e:	int3   
   14000721f:	int3   
   140007220:	int3   
   140007221:	int3   
   140007222:	int3   
   140007223:	int3   
   140007224:	int3   
   140007225:	int3   
   140007226:	int3   
   140007227:	int3   
   140007228:	int3   
   140007229:	int3   
   14000722a:	int3   
   14000722b:	int3   
   14000722c:	int3   
   14000722d:	int3   
   14000722e:	int3   
   14000722f:	int3   
   140007230:	ret    0x0
   140007233:	int3   
   140007234:	int3   
   140007235:	int3   
   140007236:	int3   
   140007237:	int3   
   140007238:	int3   
   140007239:	int3   
   14000723a:	jmp    QWORD PTR [rip+0x1070]        # 0x1400082b0
   140007240:	int3   
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	int3   
   140007245:	int3   
   140007246:	jmp    QWORD PTR [rip+0x106c]        # 0x1400082b8
   14000724c:	int3   
   14000724d:	int3   
   14000724e:	int3   
   14000724f:	int3   
   140007250:	int3   
   140007251:	int3   
   140007252:	jmp    QWORD PTR [rip+0x1068]        # 0x1400082c0
   140007258:	int3   
   140007259:	int3   
   14000725a:	int3   
   14000725b:	int3   
   14000725c:	int3   
   14000725d:	int3   
   14000725e:	jmp    QWORD PTR [rip+0x106c]        # 0x1400082d0
   140007264:	int3   
   140007265:	int3   
   140007266:	int3   
   140007267:	int3   
   140007268:	int3   
   140007269:	int3   
   14000726a:	int3   
   14000726b:	int3   
   14000726c:	jmp    0x140007278
   140007271:	int3   
   140007272:	int3   
   140007273:	int3   
   140007274:	int3   
   140007275:	int3   
   140007276:	int3   
   140007277:	int3   
   140007278:	rex push rbx
   14000727a:	sub    rsp,0x540
   140007281:	mov    rax,QWORD PTR [rip+0x3d88]        # 0x14000b010
   140007288:	xor    rax,rsp
   14000728b:	mov    QWORD PTR [rsp+0x530],rax
   140007293:	lea    rcx,[rsp+0x60]
   140007298:	call   QWORD PTR [rip+0x1072]        # 0x140008310
   14000729e:	mov    rbx,QWORD PTR [rsp+0x158]
   1400072a6:	lea    rdx,[rsp+0x40]
   1400072ab:	mov    rcx,rbx
   1400072ae:	xor    r8d,r8d
   1400072b1:	call   QWORD PTR [rip+0x1051]        # 0x140008308
   1400072b7:	test   rax,rax
   1400072ba:	je     0x1400072f5
   1400072bc:	and    QWORD PTR [rsp+0x38],0x0
   1400072c2:	lea    rcx,[rsp+0x48]
   1400072c7:	mov    rdx,QWORD PTR [rsp+0x40]
   1400072cc:	mov    r9,rax
   1400072cf:	mov    QWORD PTR [rsp+0x30],rcx
   1400072d4:	mov    r8,rbx
   1400072d7:	lea    rcx,[rsp+0x50]
   1400072dc:	mov    QWORD PTR [rsp+0x28],rcx
   1400072e1:	lea    rcx,[rsp+0x60]
   1400072e6:	mov    QWORD PTR [rsp+0x20],rcx
   1400072eb:	xor    ecx,ecx
   1400072ed:	call   QWORD PTR [rip+0x100d]        # 0x140008300
   1400072f3:	jmp    0x140007315
   1400072f5:	mov    rax,QWORD PTR [rsp+0x548]
   1400072fd:	mov    QWORD PTR [rsp+0x158],rax
   140007305:	lea    rax,[rsp+0x548]
   14000730d:	mov    QWORD PTR [rsp+0xf8],rax
   140007315:	lea    rcx,[rip+0x1194]        # 0x1400084b0
   14000731c:	call   QWORD PTR [rip+0xd9e]        # 0x1400080c0
   140007322:	mov    rcx,QWORD PTR [rsp+0x530]
   14000732a:	xor    rcx,rsp
   14000732d:	call   0x140006b00
   140007332:	add    rsp,0x540
   140007339:	pop    rbx
   14000733a:	ret    
   14000733b:	int3   
   14000733c:	int3   
   14000733d:	int3   
   14000733e:	int3   
   14000733f:	int3   
   140007340:	int3   
   140007341:	int3   
   140007342:	jmp    QWORD PTR [rip+0xf90]        # 0x1400082d8
   140007348:	int3   
   140007349:	int3   
   14000734a:	int3   
   14000734b:	int3   
   14000734c:	int3   
   14000734d:	int3   
   14000734e:	int3   
   14000734f:	int3   
   140007350:	int3   
   140007351:	int3   
   140007352:	int3   
   140007353:	int3   
   140007354:	int3   
   140007355:	int3   
   140007356:	int3   
   140007357:	int3   
   140007358:	sub    rsp,0x28
   14000735c:	mov    r8,QWORD PTR [r9+0x38]
   140007360:	mov    rcx,rdx
   140007363:	mov    rdx,r9
   140007366:	call   0x14000737c
   14000736b:	mov    eax,0x1
   140007370:	add    rsp,0x28
   140007374:	ret    
   140007375:	int3   
   140007376:	int3   
   140007377:	int3   
   140007378:	int3   
   140007379:	int3   
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	rex push rbx
   14000737e:	sub    rsp,0x20
   140007382:	mov    r11d,DWORD PTR [r8]
   140007385:	mov    rbx,rdx
   140007388:	and    r11d,0xfffffff8
   14000738c:	mov    r9,rcx
   14000738f:	test   BYTE PTR [r8],0x4
   140007393:	mov    r10,rcx
   140007396:	je     0x1400073ab
   140007398:	mov    eax,DWORD PTR [r8+0x8]
   14000739c:	movsxd r10,DWORD PTR [r8+0x4]
   1400073a0:	neg    eax
   1400073a2:	add    r10,rcx
   1400073a5:	movsxd rcx,eax
   1400073a8:	and    r10,rcx
   1400073ab:	movsxd rax,r11d
   1400073ae:	mov    rdx,QWORD PTR [rax+r10*1]
   1400073b2:	mov    rax,QWORD PTR [rbx+0x10]
   1400073b6:	mov    ecx,DWORD PTR [rax+0x8]
   1400073b9:	add    rcx,QWORD PTR [rbx+0x8]
   1400073bd:	test   BYTE PTR [rcx+0x3],0xf
   1400073c1:	je     0x1400073cf
   1400073c3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400073c7:	and    eax,0xfffffff0
   1400073ca:	cdqe   
   1400073cc:	add    r9,rax
   1400073cf:	xor    r9,rdx
   1400073d2:	mov    rcx,r9
   1400073d5:	add    rsp,0x20
   1400073d9:	pop    rbx
   1400073da:	jmp    0x140006b00
   1400073df:	int3   
   1400073e0:	int3   
   1400073e1:	int3   
   1400073e2:	int3   
   1400073e3:	int3   
   1400073e4:	int3   
   1400073e5:	int3   
   1400073e6:	int3   
   1400073e7:	int3   
   1400073e8:	int3   
   1400073e9:	int3   
   1400073ea:	int3   
   1400073eb:	int3   
   1400073ec:	int3   
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	lea    rax,[rip+0x5c41]        # 0x14000d038
   1400073f7:	jmp    0x140007410
   1400073fc:	int3   
   1400073fd:	int3   
   1400073fe:	int3   
   1400073ff:	int3   
   140007400:	int3   
   140007401:	int3   
   140007402:	int3   
   140007403:	int3   
   140007404:	int3   
   140007405:	int3   
   140007406:	int3   
   140007407:	int3   
   140007408:	int3   
   140007409:	int3   
   14000740a:	int3   
   14000740b:	int3   
   14000740c:	int3   
   14000740d:	int3   
   14000740e:	int3   
   14000740f:	int3   
   140007410:	mov    QWORD PTR [rsp+0x8],rcx
   140007415:	mov    QWORD PTR [rsp+0x10],rdx
   14000741a:	mov    QWORD PTR [rsp+0x18],r8
   14000741f:	mov    QWORD PTR [rsp+0x20],r9
   140007424:	sub    rsp,0x68
   140007428:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000742e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007434:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000743a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007440:	mov    rdx,rax
   140007443:	lea    rcx,[rip+0x289e]        # 0x140009ce8
   14000744a:	call   0x140006680
   14000744f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007455:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000745b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007461:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007467:	mov    rcx,QWORD PTR [rsp+0x70]
   14000746c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007471:	mov    r8,QWORD PTR [rsp+0x80]
   140007479:	mov    r9,QWORD PTR [rsp+0x88]
   140007481:	add    rsp,0x68
   140007485:	jmp    0x140007487
   140007487:	jmp    rax
   140007489:	int3   
   14000748a:	int3   
   14000748b:	int3   
   14000748c:	int3   
   14000748d:	int3   
   14000748e:	int3   
   14000748f:	int3   
   140007490:	lea    rax,[rip+0x5b99]        # 0x14000d030
   140007497:	jmp    0x140007410
   14000749c:	int3   
   14000749d:	int3   
   14000749e:	int3   
   14000749f:	int3   
   1400074a0:	int3   
   1400074a1:	int3   
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	int3   
   1400074a5:	int3   
   1400074a6:	int3   
   1400074a7:	int3   
   1400074a8:	int3   
   1400074a9:	int3   
   1400074aa:	int3   
   1400074ab:	int3   
   1400074ac:	int3   
   1400074ad:	int3   
   1400074ae:	int3   
   1400074af:	int3   
   1400074b0:	lea    rax,[rip+0x5b71]        # 0x14000d028
   1400074b7:	jmp    0x140007410
   1400074bc:	int3   
   1400074bd:	int3   
   1400074be:	int3   
   1400074bf:	int3   
   1400074c0:	int3   
   1400074c1:	int3   
   1400074c2:	int3   
   1400074c3:	int3   
   1400074c4:	int3   
   1400074c5:	int3   
   1400074c6:	int3   
   1400074c7:	int3   
   1400074c8:	int3   
   1400074c9:	int3   
   1400074ca:	int3   
   1400074cb:	int3   
   1400074cc:	int3   
   1400074cd:	int3   
   1400074ce:	int3   
   1400074cf:	int3   
   1400074d0:	lea    rax,[rip+0x5b31]        # 0x14000d008
   1400074d7:	jmp    0x1400074f0
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	int3   
   1400074e1:	int3   
   1400074e2:	int3   
   1400074e3:	int3   
   1400074e4:	int3   
   1400074e5:	int3   
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	int3   
   1400074e9:	int3   
   1400074ea:	int3   
   1400074eb:	int3   
   1400074ec:	int3   
   1400074ed:	int3   
   1400074ee:	int3   
   1400074ef:	int3   
   1400074f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400074f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400074fa:	mov    QWORD PTR [rsp+0x18],r8
   1400074ff:	mov    QWORD PTR [rsp+0x20],r9
   140007504:	sub    rsp,0x68
   140007508:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000750e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007514:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000751a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007520:	mov    rdx,rax
   140007523:	lea    rcx,[rip+0x27de]        # 0x140009d08
   14000752a:	call   0x140006680
   14000752f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007535:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000753b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007541:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007547:	mov    rcx,QWORD PTR [rsp+0x70]
   14000754c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007551:	mov    r8,QWORD PTR [rsp+0x80]
   140007559:	mov    r9,QWORD PTR [rsp+0x88]
   140007561:	add    rsp,0x68
   140007565:	jmp    0x140007567
   140007567:	jmp    rax
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	int3   
   14000756d:	int3   
   14000756e:	int3   
   14000756f:	int3   
   140007570:	lea    rax,[rip+0x5a89]        # 0x14000d000
   140007577:	jmp    0x1400074f0
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	int3   
   140007581:	int3   
   140007582:	int3   
   140007583:	int3   
   140007584:	int3   
   140007585:	int3   
   140007586:	int3   
   140007587:	int3   
   140007588:	int3   
   140007589:	int3   
   14000758a:	int3   
   14000758b:	int3   
   14000758c:	int3   
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	lea    rax,[rip+0x5ad9]        # 0x14000d070
   140007597:	jmp    0x1400075b0
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	int3   
   1400075a1:	int3   
   1400075a2:	int3   
   1400075a3:	int3   
   1400075a4:	int3   
   1400075a5:	int3   
   1400075a6:	int3   
   1400075a7:	int3   
   1400075a8:	int3   
   1400075a9:	int3   
   1400075aa:	int3   
   1400075ab:	int3   
   1400075ac:	int3   
   1400075ad:	int3   
   1400075ae:	int3   
   1400075af:	int3   
   1400075b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400075b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400075ba:	mov    QWORD PTR [rsp+0x18],r8
   1400075bf:	mov    QWORD PTR [rsp+0x20],r9
   1400075c4:	sub    rsp,0x68
   1400075c8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400075ce:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400075d4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400075da:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400075e0:	mov    rdx,rax
   1400075e3:	lea    rcx,[rip+0x273e]        # 0x140009d28
   1400075ea:	call   0x140006680
   1400075ef:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400075f5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400075fb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007601:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007607:	mov    rcx,QWORD PTR [rsp+0x70]
   14000760c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007611:	mov    r8,QWORD PTR [rsp+0x80]
   140007619:	mov    r9,QWORD PTR [rsp+0x88]
   140007621:	add    rsp,0x68
   140007625:	jmp    0x140007627
   140007627:	jmp    rax
   140007629:	int3   
   14000762a:	int3   
   14000762b:	int3   
   14000762c:	int3   
   14000762d:	int3   
   14000762e:	int3   
   14000762f:	int3   
   140007630:	lea    rax,[rip+0x5a11]        # 0x14000d048
   140007637:	jmp    0x1400075b0
   14000763c:	int3   
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	int3   
   140007641:	int3   
   140007642:	int3   
   140007643:	int3   
   140007644:	int3   
   140007645:	int3   
   140007646:	int3   
   140007647:	int3   
   140007648:	int3   
   140007649:	int3   
   14000764a:	int3   
   14000764b:	int3   
   14000764c:	int3   
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	lea    rax,[rip+0x59f9]        # 0x14000d050
   140007657:	jmp    0x1400075b0
   14000765c:	int3   
   14000765d:	int3   
   14000765e:	int3   
   14000765f:	int3   
   140007660:	int3   
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	int3   
   140007665:	int3   
   140007666:	int3   
   140007667:	int3   
   140007668:	int3   
   140007669:	int3   
   14000766a:	int3   
   14000766b:	int3   
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	lea    rax,[rip+0x59e1]        # 0x14000d058
   140007677:	jmp    0x1400075b0
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	int3   
   140007681:	int3   
   140007682:	int3   
   140007683:	int3   
   140007684:	int3   
   140007685:	int3   
   140007686:	int3   
   140007687:	int3   
   140007688:	int3   
   140007689:	int3   
   14000768a:	int3   
   14000768b:	int3   
   14000768c:	int3   
   14000768d:	int3   
   14000768e:	int3   
   14000768f:	int3   
   140007690:	lea    rax,[rip+0x59c9]        # 0x14000d060
   140007697:	jmp    0x1400075b0
   14000769c:	int3   
   14000769d:	int3   
   14000769e:	int3   
   14000769f:	int3   
   1400076a0:	int3   
   1400076a1:	int3   
   1400076a2:	int3   
   1400076a3:	int3   
   1400076a4:	int3   
   1400076a5:	int3   
   1400076a6:	int3   
   1400076a7:	int3   
   1400076a8:	int3   
   1400076a9:	int3   
   1400076aa:	int3   
   1400076ab:	int3   
   1400076ac:	int3   
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	lea    rax,[rip+0x59b1]        # 0x14000d068
   1400076b7:	jmp    0x1400075b0
   1400076bc:	int3   
   1400076bd:	int3   
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	int3   
   1400076c1:	int3   
   1400076c2:	int3   
   1400076c3:	int3   
   1400076c4:	int3   
   1400076c5:	int3   
   1400076c6:	int3   
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	lea    rax,[rip+0x5941]        # 0x14000d018
   1400076d7:	jmp    0x1400076f0
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	int3   
   1400076e1:	int3   
   1400076e2:	int3   
   1400076e3:	int3   
   1400076e4:	int3   
   1400076e5:	int3   
   1400076e6:	int3   
   1400076e7:	int3   
   1400076e8:	int3   
   1400076e9:	int3   
   1400076ea:	int3   
   1400076eb:	int3   
   1400076ec:	int3   
   1400076ed:	int3   
   1400076ee:	int3   
   1400076ef:	int3   
   1400076f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400076f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400076fa:	mov    QWORD PTR [rsp+0x18],r8
   1400076ff:	mov    QWORD PTR [rsp+0x20],r9
   140007704:	sub    rsp,0x68
   140007708:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000770e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007714:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000771a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007720:	mov    rdx,rax
   140007723:	lea    rcx,[rip+0x261e]        # 0x140009d48
   14000772a:	call   0x140006680
   14000772f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007735:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000773b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007741:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007747:	mov    rcx,QWORD PTR [rsp+0x70]
   14000774c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007751:	mov    r8,QWORD PTR [rsp+0x80]
   140007759:	mov    r9,QWORD PTR [rsp+0x88]
   140007761:	add    rsp,0x68
   140007765:	jmp    0x140007767
   140007767:	jmp    rax
   140007769:	int3   
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	int3   
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	jmp    QWORD PTR [rip+0x93a]        # 0x1400080b0
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	jmp    QWORD PTR [rip+0xb66]        # 0x1400082e8
   140007782:	int3   
   140007783:	int3   
   140007784:	int3   
   140007785:	int3   
   140007786:	int3   
   140007787:	int3   
   140007788:	jmp    QWORD PTR [rip+0xb52]        # 0x1400082e0
   14000778e:	int3   
   14000778f:	int3   
   140007790:	int3   
   140007791:	int3   
   140007792:	int3   
   140007793:	int3   
   140007794:	mov    rax,rsp
   140007797:	mov    QWORD PTR [rax+0x8],rbx
   14000779b:	mov    QWORD PTR [rax+0x10],rbp
   14000779f:	mov    QWORD PTR [rax+0x18],rsi
   1400077a3:	mov    QWORD PTR [rax+0x20],rdi
   1400077a7:	push   r14
   1400077a9:	sub    rsp,0x20
   1400077ad:	mov    rbx,QWORD PTR [r9+0x38]
   1400077b1:	mov    rsi,rdx
   1400077b4:	mov    r14,r8
   1400077b7:	mov    rbp,rcx
   1400077ba:	mov    rdx,r9
   1400077bd:	mov    rcx,rsi
   1400077c0:	mov    rdi,r9
   1400077c3:	lea    r8,[rbx+0x4]
   1400077c7:	call   0x14000737c
   1400077cc:	mov    r11d,DWORD PTR [rbx+0x4]
   1400077d0:	mov    r8d,0x1
   1400077d6:	mov    r10d,DWORD PTR [rbp+0x4]
   1400077da:	mov    eax,r11d
   1400077dd:	and    eax,r8d
   1400077e0:	and    r11d,0x2
   1400077e4:	and    r10b,0x66
   1400077e8:	cmove  r11d,eax
   1400077ec:	test   r11d,r11d
   1400077ef:	je     0x140007805
   1400077f1:	mov    r9,rdi
   1400077f4:	mov    r8,r14
   1400077f7:	mov    rdx,rsi
   1400077fa:	mov    rcx,rbp
   1400077fd:	call   0x140007788
   140007802:	mov    r8d,eax
   140007805:	mov    rbx,QWORD PTR [rsp+0x30]
   14000780a:	mov    eax,r8d
   14000780d:	mov    rbp,QWORD PTR [rsp+0x38]
   140007812:	mov    rsi,QWORD PTR [rsp+0x40]
   140007817:	mov    rdi,QWORD PTR [rsp+0x48]
   14000781c:	add    rsp,0x20
   140007820:	pop    r14
   140007822:	ret    
   140007823:	int3   
   140007824:	int3   
   140007825:	int3   
   140007826:	int3   
   140007827:	int3   
   140007828:	int3   
   140007829:	int3   
   14000782a:	int3   
   14000782b:	int3   
   14000782c:	int3   
   14000782d:	int3   
   14000782e:	int3   
   14000782f:	int3   
   140007830:	int3   
   140007831:	int3   
   140007832:	int3   
   140007833:	int3   
   140007834:	int3   
   140007835:	int3   
   140007836:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007840:	jmp    rax
   140007842:	int3   
   140007843:	int3   
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	int3   
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	int3   
   140007851:	int3   
   140007852:	int3   
   140007853:	int3   
   140007854:	int3   
   140007855:	int3   
   140007856:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007860:	sub    rsp,0x10
   140007864:	mov    QWORD PTR [rsp],r10
   140007868:	mov    QWORD PTR [rsp+0x8],r11
   14000786d:	xor    r11,r11
   140007870:	lea    r10,[rsp+0x18]
   140007875:	sub    r10,rax
   140007878:	cmovb  r10,r11
   14000787c:	mov    r11,QWORD PTR gs:0x10
   140007885:	cmp    r10,r11
   140007888:	jae    0x14000789f
   14000788a:	and    r10w,0xf000
   140007890:	lea    r11,[r11-0x1000]
   140007897:	test   BYTE PTR [r11],r11b
   14000789a:	cmp    r10,r11
   14000789d:	jne    0x140007890
   14000789f:	mov    r10,QWORD PTR [rsp]
   1400078a3:	mov    r11,QWORD PTR [rsp+0x8]
   1400078a8:	add    rsp,0x10
   1400078ac:	ret    
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	int3   
   1400078b1:	int3   
   1400078b2:	int3   
   1400078b3:	int3   
   1400078b4:	int3   
   1400078b5:	int3   
   1400078b6:	rex push rbp
   1400078b8:	sub    rsp,0x20
   1400078bc:	mov    rbp,rdx
   1400078bf:	mov    eax,DWORD PTR [rbp+0x20]
   1400078c2:	and    eax,0x1
   1400078c5:	test   eax,eax
   1400078c7:	je     0x1400078d6
   1400078c9:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400078cd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400078d1:	call   0x140005144
   1400078d6:	add    rsp,0x20
   1400078da:	pop    rbp
   1400078db:	ret    
   1400078dc:	int3   
   1400078dd:	int3   
   1400078de:	int3   
   1400078df:	int3   
   1400078e0:	int3   
   1400078e1:	int3   
   1400078e2:	mov    QWORD PTR [rsp+0x10],rdx
   1400078e7:	push   rbp
   1400078e8:	sub    rsp,0x20
   1400078ec:	mov    rbp,rdx
   1400078ef:	lea    rax,[rip+0xffffffffffffa7ac]        # 0x1400020a2
   1400078f6:	add    rsp,0x20
   1400078fa:	pop    rbp
   1400078fb:	ret    
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	int3   
   140007901:	int3   
   140007902:	int3   
   140007903:	mov    rcx,QWORD PTR [rdx+0x60]
   14000790a:	jmp    0x140005144
   14000790f:	int3   
   140007910:	int3   
   140007911:	int3   
   140007912:	int3   
   140007913:	int3   
   140007914:	int3   
   140007915:	mov    rcx,QWORD PTR [rdx+0x40]
   14000791c:	jmp    0x140002908
   140007921:	int3   
   140007922:	int3   
   140007923:	int3   
   140007924:	int3   
   140007925:	int3   
   140007926:	int3   
   140007927:	mov    rcx,QWORD PTR [rdx+0x40]
   14000792e:	add    rcx,0x8
   140007932:	jmp    0x140002948
   140007937:	mov    rcx,QWORD PTR [rdx+0x40]
   14000793e:	add    rcx,0x20
   140007942:	jmp    0x14000299c
   140007947:	mov    rcx,QWORD PTR [rdx+0x40]
   14000794e:	jmp    0x140002908
   140007953:	int3   
   140007954:	int3   
   140007955:	int3   
   140007956:	int3   
   140007957:	int3   
   140007958:	int3   
   140007959:	rex push rbp
   14000795b:	sub    rsp,0x20
   14000795f:	mov    rbp,rdx
   140007962:	mov    rax,QWORD PTR [rcx]
   140007965:	xor    ecx,ecx
   140007967:	cmp    DWORD PTR [rax],0xc0000017
   14000796d:	sete   cl
   140007970:	mov    eax,ecx
   140007972:	add    rsp,0x20
   140007976:	pop    rbp
   140007977:	ret    
   140007978:	int3   
   140007979:	int3   
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	int3   
   14000797d:	int3   
   14000797e:	int3   
   14000797f:	mov    QWORD PTR [rsp+0x10],rdx
   140007984:	push   rbp
   140007985:	sub    rsp,0x20
   140007989:	mov    rbp,rdx
   14000798c:	lea    rax,[rip+0xffffffffffffb279]        # 0x140002c0c
   140007993:	add    rsp,0x20
   140007997:	pop    rbp
   140007998:	ret    
   140007999:	int3   
   14000799a:	lea    rcx,[rdx+0x40]
   1400079a1:	jmp    0x140004c3c
   1400079a6:	mov    QWORD PTR [rsp+0x10],rdx
   1400079ab:	push   rbp
   1400079ac:	sub    rsp,0x20
   1400079b0:	mov    rbp,rdx
   1400079b3:	lea    rax,[rip+0xffffffffffffb2c8]        # 0x140002c82
   1400079ba:	add    rsp,0x20
   1400079be:	pop    rbp
   1400079bf:	ret    
   1400079c0:	int3   
   1400079c1:	int3   
   1400079c2:	int3   
   1400079c3:	int3   
   1400079c4:	int3   
   1400079c5:	int3   
   1400079c6:	int3   
   1400079c7:	lea    rcx,[rdx+0x48]
   1400079ce:	jmp    0x140004c0c
   1400079d3:	int3   
   1400079d4:	int3   
   1400079d5:	int3   
   1400079d6:	int3   
   1400079d7:	int3   
   1400079d8:	int3   
   1400079d9:	mov    QWORD PTR [rsp+0x10],rdx
   1400079de:	push   rbp
   1400079df:	sub    rsp,0x30
   1400079e3:	mov    rbp,rdx
   1400079e6:	lea    rax,[rip+0xffffffffffffbbe9]        # 0x1400035d6
   1400079ed:	add    rsp,0x30
   1400079f1:	pop    rbp
   1400079f2:	ret    
   1400079f3:	int3   
   1400079f4:	mov    QWORD PTR [rsp+0x10],rdx
   1400079f9:	push   rbp
   1400079fa:	sub    rsp,0x30
   1400079fe:	mov    rbp,rdx
   140007a01:	lea    rax,[rip+0xffffffffffffbdb9]        # 0x1400037c1
   140007a08:	add    rsp,0x30
   140007a0c:	pop    rbp
   140007a0d:	ret    
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	int3   
   140007a11:	int3   
   140007a12:	int3   
   140007a13:	int3   
   140007a14:	int3   
   140007a15:	lea    rcx,[rdx+0x90]
   140007a1c:	jmp    0x140003b5c
   140007a21:	int3   
   140007a22:	int3   
   140007a23:	int3   
   140007a24:	int3   
   140007a25:	int3   
   140007a26:	int3   
   140007a27:	lea    rcx,[rdx+0x60]
   140007a2e:	jmp    0x140004c0c
   140007a33:	lea    rcx,[rdx+0x70]
   140007a3a:	jmp    0x140002eb8
   140007a3f:	mov    QWORD PTR [rsp+0x10],rdx
   140007a44:	push   rbp
   140007a45:	sub    rsp,0x30
   140007a49:	mov    rbp,rdx
   140007a4c:	lea    rax,[rip+0xffffffffffffce35]        # 0x140004888
   140007a53:	add    rsp,0x30
   140007a57:	pop    rbp
   140007a58:	ret    
   140007a59:	int3   
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	mov    rcx,QWORD PTR [rdx+0x40]
   140007a67:	jmp    0x140005144
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	int3   
   140007a71:	int3   
   140007a72:	lea    rcx,[rdx+0x50]
   140007a79:	jmp    0x140002eb8
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	int3   
   140007a81:	int3   
   140007a82:	int3   
   140007a83:	int3   
   140007a84:	mov    QWORD PTR [rsp+0x10],rdx
   140007a89:	push   rbp
   140007a8a:	sub    rsp,0x20
   140007a8e:	mov    rbp,rdx
   140007a91:	mov    rcx,QWORD PTR [rbp+0x40]
   140007a95:	add    rcx,0x68
   140007a99:	call   0x140004c60
   140007a9e:	xor    edx,edx
   140007aa0:	xor    ecx,ecx
   140007aa2:	call   0x14000777c
   140007aa7:	nop
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	int3   
   140007aad:	int3   
   140007aae:	lea    rcx,[rdx+0x30]
   140007ab5:	jmp    0x140005f58
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	rex push rbp
   140007ac2:	sub    rsp,0x20
   140007ac6:	mov    rbp,rdx
   140007ac9:	mov    rax,QWORD PTR [rcx]
   140007acc:	mov    rdx,rcx
   140007acf:	mov    ecx,DWORD PTR [rax]
   140007ad1:	call   0x140006f8e
   140007ad6:	nop
   140007ad7:	add    rsp,0x20
   140007adb:	pop    rbp
   140007adc:	ret    
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	int3   
   140007ae1:	int3   
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	rex push rbp
   140007ae6:	sub    rsp,0x20
   140007aea:	mov    rbp,rdx
   140007aed:	mov    ecx,0x8
   140007af2:	call   0x140007246
   140007af7:	nop
   140007af8:	add    rsp,0x20
   140007afc:	pop    rbp
   140007afd:	ret    
   140007afe:	int3   
   140007aff:	int3   
   140007b00:	int3   
   140007b01:	int3   
   140007b02:	int3   
   140007b03:	int3   
   140007b04:	int3   
   140007b05:	int3   
   140007b06:	int3   
   140007b07:	int3   
   140007b08:	int3   
   140007b09:	int3   
   140007b0a:	int3   
   140007b0b:	int3   
   140007b0c:	int3   
   140007b0d:	int3   
   140007b0e:	int3   
   140007b0f:	int3   
   140007b10:	rex push rbp
   140007b12:	sub    rsp,0x20
   140007b16:	mov    rbp,rdx
   140007b19:	mov    rax,QWORD PTR [rcx]
   140007b1c:	xor    ecx,ecx
   140007b1e:	cmp    DWORD PTR [rax],0xc0000005
   140007b24:	sete   cl
   140007b27:	mov    eax,ecx
   140007b29:	add    rsp,0x20
   140007b2d:	pop    rbp
   140007b2e:	ret    
   140007b2f:	int3   
   140007b30:	int3   
   140007b31:	int3   
   140007b32:	int3   
   140007b33:	int3   
   140007b34:	int3   
   140007b35:	int3   
   140007b36:	int3   
   140007b37:	int3   
   140007b38:	int3   
   140007b39:	int3   
   140007b3a:	int3   
   140007b3b:	int3   
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	lea    rax,[rip+0xbe9]        # 0x140008730
   140007b47:	lea    rcx,[rip+0x3b92]        # 0x14000b6e0
   140007b4e:	mov    QWORD PTR [rip+0x3b8b],rax        # 0x14000b6e0
   140007b55:	jmp    0x1400023cc
   140007b5a:	int3   
   140007b5b:	int3   
   140007b5c:	int3   
   140007b5d:	int3   
   140007b5e:	int3   
   140007b5f:	int3   
   140007b60:	sub    rsp,0x28
   140007b64:	cmp    BYTE PTR [rip+0x3bed],0x0        # 0x14000b758
   140007b6b:	lea    rax,[rip+0xc3e]        # 0x1400087b0
   140007b72:	mov    QWORD PTR [rip+0x3bcf],rax        # 0x14000b748
   140007b79:	je     0x140007b8d
   140007b7b:	mov    rcx,QWORD PTR [rip+0x3bce]        # 0x14000b750
   140007b82:	test   rcx,rcx
   140007b85:	je     0x140007b8d
   140007b87:	call   QWORD PTR [rip+0x58b]        # 0x140008118
   140007b8d:	add    rsp,0x28
   140007b91:	ret    
   140007b92:	int3   
   140007b93:	int3   
   140007b94:	int3   
   140007b95:	int3   
   140007b96:	int3   
   140007b97:	int3   
   140007b98:	int3   
   140007b99:	int3   
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	int3   
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	lea    rax,[rip+0xbd9]        # 0x140008780
   140007ba7:	mov    QWORD PTR [rip+0x347a],rax        # 0x14000b028
   140007bae:	ret    
   140007baf:	int3   
   140007bb0:	int3   
   140007bb1:	int3   
   140007bb2:	int3   
   140007bb3:	int3   
   140007bb4:	int3   
   140007bb5:	int3   
   140007bb6:	int3   
   140007bb7:	int3   
   140007bb8:	int3   
   140007bb9:	int3   
   140007bba:	int3   
   140007bbb:	int3   
   140007bbc:	int3   
   140007bbd:	int3   
   140007bbe:	int3   
   140007bbf:	int3   
   140007bc0:	sub    rsp,0x28
   140007bc4:	lea    rcx,[rip+0x3bbd]        # 0x14000b788
   140007bcb:	call   QWORD PTR [rip+0x5e7]        # 0x1400081b8
   140007bd1:	mov    rcx,QWORD PTR [rip+0x3bd8]        # 0x14000b7b0
   140007bd8:	test   rcx,rcx
   140007bdb:	je     0x140007beb
   140007bdd:	call   QWORD PTR [rip+0x635]        # 0x140008218
   140007be3:	and    QWORD PTR [rip+0x3bc5],0x0        # 0x14000b7b0
   140007beb:	and    DWORD PTR [rip+0x3bc6],0x0        # 0x14000b7b8
   140007bf2:	and    DWORD PTR [rip+0x3bc3],0x0        # 0x14000b7bc
   140007bf9:	add    rsp,0x28
   140007bfd:	ret    
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	int3   
   140007c01:	int3   
   140007c02:	int3   
   140007c03:	int3   
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	mov    QWORD PTR [rsp+0x8],rbx
   140007c15:	mov    QWORD PTR [rsp+0x10],rsi
   140007c1a:	push   rdi
   140007c1b:	sub    rsp,0x20
   140007c1f:	cmp    DWORD PTR [rip+0x3b9a],0x48        # 0x14000b7c0
   140007c26:	mov    rsi,QWORD PTR [rip+0x3b3b]        # 0x14000b768
   140007c2d:	jne    0x140007cae
   140007c2f:	mov    eax,DWORD PTR [rip+0x3bcb]        # 0x14000b800
   140007c35:	xor    ebx,ebx
   140007c37:	test   eax,eax
   140007c39:	jle    0x140007c72
   140007c3b:	xor    edi,edi
   140007c3d:	test   rdi,rdi
   140007c40:	js     0x140007ce6
   140007c46:	cmp    ebx,eax
   140007c48:	jge    0x140007ce6
   140007c4e:	mov    rax,QWORD PTR [rip+0x3ba3]        # 0x14000b7f8
   140007c55:	mov    rdx,rsi
   140007c58:	movzx  ecx,WORD PTR [rdi+rax*1]
   140007c5c:	call   QWORD PTR [rip+0x53c6]        # 0x14000d028
   140007c62:	mov    eax,DWORD PTR [rip+0x3b98]        # 0x14000b800
   140007c68:	inc    ebx
   140007c6a:	add    rdi,0x2
   140007c6e:	cmp    ebx,eax
   140007c70:	jl     0x140007c3d
   140007c72:	mov    rcx,QWORD PTR [rip+0x3b7f]        # 0x14000b7f8
   140007c79:	test   rcx,rcx
   140007c7c:	je     0x140007c8c
   140007c7e:	call   QWORD PTR [rip+0x594]        # 0x140008218
   140007c84:	and    QWORD PTR [rip+0x3b6c],0x0        # 0x14000b7f8
   140007c8c:	and    DWORD PTR [rip+0x3b6d],0x0        # 0x14000b800
   140007c93:	lea    rcx,[rip+0x3b2e]        # 0x14000b7c8
   140007c9a:	and    DWORD PTR [rip+0x3b63],0x0        # 0x14000b804
   140007ca1:	call   QWORD PTR [rip+0x511]        # 0x1400081b8
   140007ca7:	and    DWORD PTR [rip+0x3b12],0x0        # 0x14000b7c0
   140007cae:	mov    rcx,QWORD PTR [rip+0x3b43]        # 0x14000b7f8
   140007cb5:	test   rcx,rcx
   140007cb8:	je     0x140007cc8
   140007cba:	call   QWORD PTR [rip+0x558]        # 0x140008218
   140007cc0:	and    QWORD PTR [rip+0x3b30],0x0        # 0x14000b7f8
   140007cc8:	and    DWORD PTR [rip+0x3b31],0x0        # 0x14000b800
   140007ccf:	and    DWORD PTR [rip+0x3b2e],0x0        # 0x14000b804
   140007cd6:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cdb:	mov    rsi,QWORD PTR [rsp+0x38]
   140007ce0:	add    rsp,0x20
   140007ce4:	pop    rdi
   140007ce5:	ret    
   140007ce6:	mov    ecx,0xc000008c
   140007ceb:	call   0x140005198
   140007cf0:	int3   
   140007cf1:	int3   
   140007cf2:	int3   
   140007cf3:	int3   
   140007cf4:	int3   
   140007cf5:	int3   
   140007cf6:	int3   
   140007cf7:	int3   
   140007cf8:	int3   
   140007cf9:	int3   
   140007cfa:	int3   
   140007cfb:	int3   
   140007cfc:	int3   
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	mov    QWORD PTR [rsp+0x8],rbx
   140007d05:	mov    QWORD PTR [rsp+0x10],rsi
   140007d0a:	mov    QWORD PTR [rsp+0x18],rdi
   140007d0f:	push   r14
   140007d11:	sub    rsp,0x20
   140007d15:	cmp    DWORD PTR [rip+0x3af4],0x0        # 0x14000b810
   140007d1c:	je     0x140007d7d
   140007d1e:	mov    rdi,QWORD PTR [rip+0x3afb]        # 0x14000b820
   140007d25:	mov    rax,QWORD PTR [rip+0x3afc]        # 0x14000b828
   140007d2c:	jmp    0x140007d64
   140007d2e:	mov    rsi,QWORD PTR [rdi]
   140007d31:	test   rsi,rsi
   140007d34:	je     0x140007d60
   140007d36:	mov    r14,QWORD PTR [rsi+0x20]
   140007d3a:	test   r14,r14
   140007d3d:	je     0x140007d54
   140007d3f:	mov    rax,QWORD PTR [r14]
   140007d42:	mov    rbx,QWORD PTR [rax+0x10]
   140007d46:	mov    rcx,rbx
   140007d49:	call   QWORD PTR [rip+0x5d1]        # 0x140008320
   140007d4f:	mov    rcx,r14
   140007d52:	call   rbx
   140007d54:	and    QWORD PTR [rsi+0x20],0x0
   140007d59:	mov    rax,QWORD PTR [rip+0x3ac8]        # 0x14000b828
   140007d60:	add    rdi,0x8
   140007d64:	cmp    rdi,rax
   140007d67:	jb     0x140007d2e
   140007d69:	lea    rcx,[rip+0x3ac0]        # 0x14000b830
   140007d70:	call   QWORD PTR [rip+0x442]        # 0x1400081b8
   140007d76:	and    DWORD PTR [rip+0x3a93],0x0        # 0x14000b810
   140007d7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d82:	mov    rsi,QWORD PTR [rsp+0x38]
   140007d87:	mov    rdi,QWORD PTR [rsp+0x40]
   140007d8c:	add    rsp,0x20
   140007d90:	pop    r14
   140007d92:	ret    

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	sub    al,0xa5
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	sbb    al,0xa5
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	or     al,0xa5
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	in     al,0xa5
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	(bad)  
   140008021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	(bad)  
   140008029:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	mov    dl,0xa5
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	pushf  
   140008039:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	mov    WORD PTR [rbp+0x0],fs
   140008046:	add    BYTE PTR [rax],al
   140008048:	js     0x140007fef
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax],al
   140008050:	(bad)  
   140008051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008052:	add    BYTE PTR [rax],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	push   rax
   140008059:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	push   0xa4
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rax-0x5c],bh
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	add    BYTE PTR [rax],al
   14000806e:	add    BYTE PTR [rax],al
   140008070:	nop
   140008071:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008079:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	mov    esp,0xa4
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    dl,dl
   140008089:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	(bad)  
   140008091:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	clc    
   140008099:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	add    BYTE PTR [rax],al
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	ss test eax,0x0
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	add    al,0xa9
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	out    dx,al
   1400080c1:	test   al,0x0
   1400080c3:	add    BYTE PTR [rax],al
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    dh,bl
   1400080c9:	test   al,0x0
   1400080cb:	add    BYTE PTR [rax],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    ah,al
   1400080d1:	test   al,0x0
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rsi+0xa8],ch
   1400080dd:	add    BYTE PTR [rax],al
   1400080df:	add    BYTE PTR [rax+rbp*4+0x0],dl
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	sub    BYTE PTR [rax+0x0],0x0
   1400080ef:	add    BYTE PTR [rax+rbp*4+0x0],ch
   1400080f3:	add    BYTE PTR [rax],al
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    BYTE PTR [rsi-0x58],cl
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	xor    ch,BYTE PTR [rax+0x0]
   140008106:	add    BYTE PTR [rax],al
   140008108:	and    BYTE PTR [rax+0x0],ch
   14000810e:	add    BYTE PTR [rax],al
   140008110:	sbb    BYTE PTR [rax+0x0],ch
   140008116:	add    BYTE PTR [rax],al
   140008118:	or     ch,BYTE PTR [rax+0x0]
   14000811e:	add    BYTE PTR [rax],al
   140008120:	clc    
   140008121:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	in     al,dx
   140008129:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	loopne 0x1400080d9
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax],al
   140008138:	shl    BYTE PTR [rdi+0x0],cl
   14000813e:	add    BYTE PTR [rax],al
   140008140:	(bad)  
   140008141:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	mov    al,0xa7
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008151:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	(bad)  
   140008159:	test   eax,0x0
   14000815e:	add    BYTE PTR [rax],al
   140008160:	xchg   esi,eax
   140008161:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax],al
   140008168:	xchg   BYTE PTR [rdi+0x0],ah
   14000816e:	add    BYTE PTR [rax],al
   140008170:	jo     0x140008119
   140008172:	add    BYTE PTR [rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	push   rdx
   140008179:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	add    BYTE PTR [rax],al
   14000817e:	add    BYTE PTR [rax],al
   140008180:	cmp    al,0xa7
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	sub    ah,BYTE PTR [rdi+0x0]
   14000818e:	add    BYTE PTR [rax],al
   140008190:	sbb    ah,BYTE PTR [rdi+0x0]
   140008196:	add    BYTE PTR [rax],al
   140008198:	or     al,0xa6
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	(bad)  
   1400081a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	cmp    al,0xa6
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	pop    rax
   1400081b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	jo     0x140008168
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	mov    BYTE PTR [rsi+0x0],ah
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	movabs al,ds:0xae000000000000a6
   1400081d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	add    BYTE PTR [rax],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	shl    BYTE PTR [rsi+0x0],0x0
   1400081e7:	add    dl,dl
   1400081e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	out    0xa6,al
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	or     BYTE PTR [rdi+0x0],ah
	...
   14000820e:	add    BYTE PTR [rax],al
   140008210:	int3   
   140008211:	movabs ds:0xa2d8000000000000,al
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    BYTE PTR [rax],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	loopne 0x1400081c4
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	movabs ds:0xa2f6000000000000,al
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	add    ah,BYTE PTR [rbx+0x0]
   14000823e:	add    BYTE PTR [rax],al
   140008240:	or     al,0xa3
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	sbb    ah,BYTE PTR [rbx+0x0]
   14000824e:	add    BYTE PTR [rax],al
   140008250:	sub    BYTE PTR [rbx+0x0],ah
   140008256:	add    BYTE PTR [rax],al
   140008258:	cmp    ah,BYTE PTR [rbx+0x0]
   14000825e:	add    BYTE PTR [rax],al
   140008260:	rex.WR movabs ds:0xa354000000000000,rax
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	pop    rsp
   140008271:	movabs ds:0xa366000000000000,eax
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	jp     0x140008225
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    BYTE PTR [rax],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	xchg   BYTE PTR [rbx+0x0],ah
   14000828e:	add    BYTE PTR [rax],al
   140008290:	sahf   
   140008291:	movabs ds:0xa3a8000000000000,eax
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	mov    dl,0xa3
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    BYTE PTR [rax],al
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	mov    esi,0xa3
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    dh,bl
   1400082b1:	movabs ds:0xa3e6000000000000,eax
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	lock movabs ds:0xa3fe000000000000,eax
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	or     BYTE PTR [rax+rax*1+0x0],ah
   1400082d7:	add    BYTE PTR [rdx],dl
   1400082d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	fs test eax,0x0
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	rex.WRX test rax,0x0
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	shl    BYTE PTR [rdx+0x0],0x0
	...
   1400082ff:	add    BYTE PTR [rdx-0x5c],cl
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	xor    BYTE PTR [rax+rax*1+0x0],ah
   14000830f:	add    BYTE PTR [rsp+riz*4],bl
	...
   14000831e:	add    BYTE PTR [rax],al
   140008320:	xor    BYTE PTR [rdx+0x0],dh
   140008323:	rex add DWORD PTR [rax],eax
   140008326:	add    BYTE PTR [rax],al
   140008328:	rex js 0x14000832b
   14000832b:	rex add DWORD PTR [rax],eax
	...
   140008336:	add    BYTE PTR [rax],al
   140008338:	add    BYTE PTR [rax+0x0],ch
   14000833b:	rex add DWORD PTR [rax],eax
   14000833e:	add    BYTE PTR [rax],al
   140008340:	nop
   140008341:	adc    BYTE PTR [rax],al
   140008343:	rex add DWORD PTR [rax],eax
   140008346:	add    BYTE PTR [rax],al
   140008348:	rcl    BYTE PTR [rax],1
   14000834a:	add    BYTE PTR [rax+0x1],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    al,ah
   140008351:	adc    BYTE PTR [rax],al
   140008353:	rex add DWORD PTR [rax],eax
   140008356:	add    BYTE PTR [rax],al
   140008358:	adc    BYTE PTR [rcx],0x0
   14000835b:	rex add DWORD PTR [rax],eax
   14000835e:	add    BYTE PTR [rax],al
   140008360:	lock adc DWORD PTR [rax],eax
   140008363:	rex add DWORD PTR [rax],eax
   140008366:	add    BYTE PTR [rax],al
   140008368:	add    BYTE PTR [rax],dl
   14000836a:	add    BYTE PTR [rax+0x1],al
	...
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rax],ah
   140008381:	add    BYTE PTR [eax+0x1],al
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rax+0x6f],dh
   14000838a:	add    BYTE PTR [rax+0x1],al
	...
   140008399:	adc    BYTE PTR [rax],al
   14000839b:	add    BYTE PTR [rax-0x2ffffff0],dl
   1400083a1:	adc    BYTE PTR [rax],al
   1400083a3:	add    al,ah
   1400083a5:	adc    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rax-0xfffffef],al
   1400083ad:	adc    DWORD PTR [rax],eax
   1400083af:	add    BYTE PTR [rax],al
   1400083b1:	adc    al,0x0
   1400083b3:	add    BYTE PTR [rax-0x6fffffec],dl
   1400083b9:	and    al,0x0
   1400083bb:	add    BYTE PTR [rax-0x2fffffdc],dh
   1400083c1:	and    al,0x0
   1400083c3:	add    al,ah
   1400083c5:	and    al,0x0
   1400083c7:	add    BYTE PTR [rax+0x25],dh
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	shl    BYTE PTR [rip+0x28800000],0x0        # 0x1688083d3
   1400083d3:	add    BYTE PTR [rax-0x4fffffd8],dl
   1400083d9:	sub    BYTE PTR [rax],al
   1400083db:	add    al,al
   1400083dd:	sub    BYTE PTR [rax],al
   1400083df:	add    al,dl
   1400083e1:	sub    BYTE PTR [rax],al
   1400083e3:	add    BYTE PTR [rax+0x2a],dh
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	and    BYTE PTR [rsi],ch
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400083f0:	loopne 0x140008443
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	adc    BYTE PTR [rdx+0x0],0x0
   1400083f8:	mov    al,0x52
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	push   rax
   1400083fd:	push   rbx
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	(bad)  
   140008401:	push   rbx
   140008402:	add    BYTE PTR [rax],al
   140008404:	jo     0x140008459
   140008406:	add    BYTE PTR [rax],al
   140008408:	movabs al,ds:0xf0000053c0000053
   140008411:	push   rbx
   140008412:	add    BYTE PTR [rax],al
   140008414:	rex push rsp
   140008416:	add    BYTE PTR [rax],al
   140008418:	(bad)  
   140008419:	push   rsp
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	and    BYTE PTR [rdi+0x0],bl
   14000841f:	add    BYTE PTR [rax+0x20000066],al
   140008425:	add    BYTE PTR [eax],al
   140008428:	add    BYTE PTR [rax+0x0],ch
   14000842b:	add    al,dl
   14000842d:	push   0x0
   14000842f:	add    BYTE PTR [rax],al
   140008431:	ins    BYTE PTR es:[rdi],dx
   140008432:	add    BYTE PTR [rax],al
   140008434:	movabs al,ds:0x7000006f3000006c
   14000843d:	outs   dx,DWORD PTR ds:[rsi]
   14000843e:	add    BYTE PTR [rax],al
   140008440:	xor    BYTE PTR [rdx+0x0],dh
   140008443:	add    al,dh
   140008445:	jae    0x140008447
   140008447:	add    BYTE PTR [rax],dl
   140008449:	je     0x14000844b
   14000844b:	add    BYTE PTR [rax-0x4fffff8c],dl
   140008451:	je     0x140008453
   140008453:	add    al,dl
   140008455:	je     0x140008457
   140008457:	add    al,dh
   140008459:	je     0x14000845b
   14000845b:	add    BYTE PTR [rax+0x75],dh
   14000845e:	add    BYTE PTR [rax],al
   140008460:	nop
   140008461:	jne    0x140008463
   140008463:	add    BYTE PTR [rax+0x30000075],dh
   140008469:	jbe    0x14000846b
   14000846b:	add    BYTE PTR [rax+0x76],dl
   14000846e:	add    BYTE PTR [rax],al
   140008470:	jo     0x1400084e8
   140008472:	add    BYTE PTR [rax],al
   140008474:	nop
   140008475:	jbe    0x140008477
   140008477:	add    BYTE PTR [rax-0x2fffff8a],dh
   14000847d:	jbe    0x14000847f
   14000847f:	add    al,dh
   140008481:	jbe    0x140008483
   140008483:	add    BYTE PTR [rax+0x77],dh
   140008486:	add    BYTE PTR [rax],al
   140008488:	rex jnp 0x14000848b
   14000848b:	add    BYTE PTR [rax+0x7b],ah
   14000848e:	add    BYTE PTR [rax],al
   140008490:	movabs al,ds:0x1000007bc000007b
   140008499:	jl     0x14000849b
   14000849b:	add    BYTE PTR [rax],al
   14000849d:	jge    0x14000849f
   14000849f:	add    BYTE PTR [rax+0x14000b0],dh
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rax-0x4f],dl
   1400084aa:	add    BYTE PTR [rax+0x1],al
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    BYTE PTR [rcx+0x6e],cl
   1400084b2:	jbe    0x140008515
   1400084b4:	ins    BYTE PTR es:[rdi],dx
   1400084b5:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   1400084bd:	gs je  0x140008525
   1400084c0:	jb     0x1400084e2
   1400084c2:	jo     0x140008525
   1400084c4:	jae    0x140008539
   1400084c6:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   1400084cc:	rex.XB and BYTE PTR [r10+0x75],sil
   1400084d0:	outs   dx,BYTE PTR ds:[rsi]
   1400084d1:	je     0x14000853c
   1400084d3:	ins    DWORD PTR es:[rdi],dx
   1400084d4:	and    BYTE PTR gs:[rsi+0x75],ah
   1400084d8:	outs   dx,BYTE PTR ds:[rsi]
   1400084d9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400084dd:	outs   dx,BYTE PTR ds:[rsi]
   1400084de:	or     al,BYTE PTR cs:[rax]
	...
   1400084ed:	add    BYTE PTR [rax],al
   1400084ef:	add    BYTE PTR [rbp+0x53],dl
   1400084f2:	rex.RB push r10
   1400084f4:	xor    esi,DWORD PTR [rdx]
   1400084f6:	cs fs ins BYTE PTR es:[rdi],dx
   1400084f9:	ins    BYTE PTR es:[rdi],dx
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	add    BYTE PTR [rax],al
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	rex.WRXB
   140008501:	rex.WR
   140008502:	rex.RB
   140008503:	push   r13
   140008505:	push   rsp
   140008506:	xor    esi,DWORD PTR [rdx]
   140008508:	cs fs ins BYTE PTR es:[rdi],dx
   14000850b:	ins    BYTE PTR es:[rdi],dx
   14000850c:	add    BYTE PTR [rax],al
   14000850e:	add    BYTE PTR [rax],al
   140008510:	outs   dx,DWORD PTR ds:[rsi]
   140008511:	ins    BYTE PTR es:[rdi],dx
   140008512:	xor    esi,DWORD PTR gs:[rdx]
   140008515:	cs fs ins BYTE PTR es:[rdi],dx
   140008518:	ins    BYTE PTR es:[rdi],dx
   140008519:	add    BYTE PTR [rax],al
   14000851b:	add    BYTE PTR [rax],al
   14000851d:	add    BYTE PTR [rax],al
   14000851f:	add    BYTE PTR [rbx+0x73],dl
   140008522:	jo     0x14000858d
   140008524:	rex.XB ins BYTE PTR es:[rdi],dx
   140008526:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000852c:	add    BYTE PTR [rax],al
   14000852e:	add    BYTE PTR [rax],al
   140008530:	add    BYTE PTR [r8+r8*1+0x53],cl
   140008535:	add    BYTE PTR [rcx+0x0],cl
   140008538:	add    BYTE PTR [rax],r8b
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rcx+0x0],al
   140008542:	jo     0x140008544
   140008544:	jo     0x140008546
   140008546:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000854b:	add    BYTE PTR [rbx+0x0],dl
   14000854e:	add    BYTE PTR [rax],al
   140008550:	rex.WRB add BYTE PTR [r8],r8b
   140008553:	add    BYTE PTR [rax+rax*1+0x0],al
   140008557:	add    BYTE PTR [rdx+0x0],al
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	add    BYTE PTR [rax],al
   14000855e:	add    BYTE PTR [rax],al
   140008560:	push   rsi
   140008561:	add    BYTE PTR [rcx+0x0],ah
   140008564:	ins    BYTE PTR es:[rdi],dx
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rsi+0x0],al
   14000856a:	outs   dx,DWORD PTR ds:[rsi]
   14000856b:	add    BYTE PTR [rdx+0x0],dh
   14000856e:	movsxd eax,DWORD PTR [rax]
   140008570:	add    BYTE PTR gs:[rdx+0x0],dl
   140008574:	add    BYTE PTR gs:[rbp+0x0],ch
   140008578:	outs   dx,DWORD PTR ds:[rsi]
   140008579:	add    BYTE PTR [rsi+0x0],dh
   14000857c:	add    BYTE PTR gs:[rax],al
   14000857f:	add    BYTE PTR [rsi+0x0],cl
   140008582:	outs   dx,DWORD PTR ds:[rsi]
   140008583:	add    BYTE PTR [rdx+0x0],dl
   140008586:	add    BYTE PTR gs:[rbp+0x0],ch
   14000858a:	outs   dx,DWORD PTR ds:[rsi]
   14000858b:	add    BYTE PTR [rsi+0x0],dh
   14000858e:	add    BYTE PTR gs:[rax],al
   140008591:	add    BYTE PTR [rax],al
   140008593:	add    BYTE PTR [rax],al
   140008595:	add    BYTE PTR [rax],al
   140008597:	add    BYTE PTR [rax+rax*1+0x65],al
   14000859b:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000859f:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400085a3:	add    BYTE PTR [rax],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rbx+0x0],al
   1400085aa:	outs   dx,DWORD PTR ds:[rsi]
   1400085ab:	add    BYTE PTR [rbp+0x0],ch
   1400085ae:	jo     0x1400085b0
   1400085b0:	outs   dx,DWORD PTR ds:[rsi]
   1400085b1:	add    BYTE PTR [rsi+0x0],ch
   1400085b4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400085b8:	je     0x1400085ba
   1400085ba:	and    BYTE PTR [rax],al
   1400085bc:	rex.XB add BYTE PTR [r9+0x0],spl
   1400085c0:	je     0x1400085c2
   1400085c2:	add    BYTE PTR gs:[rdi+0x0],ah
   1400085c6:	outs   dx,DWORD PTR ds:[rsi]
   1400085c7:	add    BYTE PTR [rdx+0x0],dh
   1400085ca:	imul   eax,DWORD PTR [rax],0x730065
	...
   1400085d8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400085dc:	ins    BYTE PTR es:[rdi],dx
   1400085dd:	add    BYTE PTR [rbp+0x0],ah
   1400085e0:	push   rsp
   1400085e1:	add    BYTE PTR [rcx+0x0],bh
   1400085e4:	jo     0x1400085e6
   1400085e6:	add    BYTE PTR gs:[rax],al
   1400085e9:	add    BYTE PTR [rax],al
   1400085eb:	add    BYTE PTR [rax],al
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rcx+0x0],cl
   1400085f2:	outs   dx,BYTE PTR ds:[rsi]
   1400085f3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400085f7:	add    BYTE PTR [rdx+0x0],dh
   1400085fa:	data16 add BYTE PTR [rcx+0x0],ah
   1400085fe:	movsxd eax,DWORD PTR [rax]
   140008600:	add    BYTE PTR gs:[rax],al
   140008603:	add    BYTE PTR [rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rax+0x0],cl
   14000860a:	(bad)  
   14000860b:	add    BYTE PTR [rdx+0x0],dh
   14000860e:	add    BYTE PTR fs:[rdi+0x0],dh
   140008612:	(bad)  
   140008613:	add    BYTE PTR [rdx+0x0],dh
   140008616:	add    BYTE PTR gs:[rax],al
   140008619:	add    BYTE PTR [rax],al
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rbp+0x0],cl
   140008622:	imul   eax,DWORD PTR [rax],0x65006d
	...
   140008630:	push   rbx
   140008631:	add    BYTE PTR [rcx+0x0],al
   140008634:	rex.WRB add BYTE PTR [r8],r8b
   140008637:	add    BYTE PTR [rbx+0x0],dl
   14000863a:	add    BYTE PTR [r11+0x0],r8b
   14000863e:	push   rbp
   14000863f:	add    BYTE PTR [rdx+0x0],dl
   140008642:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000864f:	add    BYTE PTR [rbx+0x0],dl
   140008652:	pop    rcx
   140008653:	add    BYTE PTR [rbx+0x0],dl
   140008656:	push   rsp
   140008657:	add    BYTE PTR [rbp+0x0],al
   14000865a:	rex.WRB add BYTE PTR [r8],r8b
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rbx+0x0],dl
   140008662:	outs   dx,DWORD PTR ds:[rsi]
   140008663:	add    BYTE PTR [rsi+0x0],ah
   140008666:	je     0x140008668
   140008668:	ja     0x14000866a
   14000866a:	(bad)  
   14000866b:	add    BYTE PTR [rdx+0x0],dh
   14000866e:	add    BYTE PTR gs:[rax],al
   140008671:	add    BYTE PTR [rax],al
   140008673:	add    BYTE PTR [rax],al
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000867b:	add    BYTE PTR [rax+0x0],dh
   14000867e:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140008683:	add    BYTE PTR [rdx+0x0],ah
   140008686:	add    BYTE PTR [rax],al
   140008688:	and    eax,DWORD PTR [rbx]
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	add    BYTE PTR [rax],al
   14000868e:	add    BYTE PTR [rax],al
   140008690:	rol    BYTE PTR [rax],0x0
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	rex.RX add BYTE PTR [rax],r8b
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	add    BYTE PTR [rax],al
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	rex test DWORD PTR [rax],eax
   1400086a3:	rex add DWORD PTR [rax],eax
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	xor    BYTE PTR [rbp+0x14000],al
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	test   al,0x85
   1400086b2:	add    BYTE PTR [rax+0x1],al
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    al,bl
   1400086b9:	test   DWORD PTR [rax],eax
   1400086bb:	rex add DWORD PTR [rax],eax
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	lock test DWORD PTR [rax],eax
   1400086c3:	rex add DWORD PTR [rax],eax
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	or     BYTE PTR [rsi+0x14000],al
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	and    BYTE PTR [rsi+0x14000],al
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	xor    BYTE PTR [rsi+0x14000],al
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	cmp    BYTE PTR [rsi+0x14000],al
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	push   rax
   1400086e9:	xchg   BYTE PTR [rax],al
   1400086eb:	rex add DWORD PTR [rax],eax
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	(bad)  
   1400086f1:	xchg   BYTE PTR [rax],al
   1400086f3:	rex add DWORD PTR [rax],eax
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	js     0x140008680
   1400086fa:	add    BYTE PTR [rax+0x1],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rax+0x1400028],dl
   140008705:	add    BYTE PTR [rax],al
   140008707:	add    BYTE PTR [rax+0x1400028],dh
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    al,al
   140008711:	sub    BYTE PTR [rax],al
   140008713:	rex add DWORD PTR [rax],eax
   140008716:	add    BYTE PTR [rax],al
   140008718:	and    BYTE PTR [rsi],ch
   14000871a:	add    BYTE PTR [rax+0x1],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rax+0x2a],dh
   140008722:	add    BYTE PTR [rax+0x1],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,dl
   140008729:	sub    BYTE PTR [rax],al
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	nop
   140008731:	adc    al,0x0
   140008733:	rex add DWORD PTR [rax],eax
   140008736:	add    BYTE PTR [rax],al
   140008738:	nop
   140008739:	and    al,0x0
   14000873b:	rex add DWORD PTR [rax],eax
   14000873e:	add    BYTE PTR [rax],al
   140008740:	mov    al,0x24
   140008742:	add    BYTE PTR [rax+0x1],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    al,dl
   140008749:	and    al,0x0
   14000874b:	rex add DWORD PTR [rax],eax
   14000874e:	add    BYTE PTR [rax],al
   140008750:	loopne 0x140008776
   140008752:	add    BYTE PTR [rax+0x1],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rax+0x25],dh
   14000875a:	add    BYTE PTR [rax+0x1],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    al,al
   140008761:	and    eax,0x14000
   140008766:	add    BYTE PTR [rax],al
   140008768:	shl    BYTE PTR [rip+0x14000],0x0        # 0x14001c76f
   14000876f:	add    BYTE PTR [rax+0x1400028],al
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rax],al
   140008779:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    al,ah
   140008781:	push   rcx
   140008782:	add    BYTE PTR [rax+0x1],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rax+0x1400052],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rax+0x1400052],dh
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax+0x53],dl
   14000879a:	add    BYTE PTR [rax+0x1],al
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rax+0x53],ah
   1400087a2:	add    BYTE PTR [rax+0x1],al
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax+0x53],dh
   1400087aa:	add    BYTE PTR [rax+0x1],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rax+0x1400053],ah
   1400087b5:	add    BYTE PTR [rax],al
   1400087b7:	add    al,al
   1400087b9:	push   rbx
   1400087ba:	add    BYTE PTR [rax+0x1],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    al,dh
   1400087c1:	push   rbx
   1400087c2:	add    BYTE PTR [rax+0x1],al
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax+0x54],al
   1400087ca:	add    BYTE PTR [rax+0x1],al
   1400087cd:	add    BYTE PTR [rax],al
   1400087cf:	add    BYTE PTR [rax+0x54],ah
   1400087d2:	add    BYTE PTR [rax+0x1],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rax],ah
   1400087d9:	pop    rdi
   1400087da:	add    BYTE PTR [rax+0x1],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rbx-0x7cc9f75f],bh
   1400087e5:	sbb    al,al
   1400087e7:	rex.WR popf 
   1400087e9:	test   al,0xb4
   1400087eb:	iret   
   1400087ec:	and    eax,0x50423894
   1400087f1:	rex.WB
   1400087f2:	rex.WRXB and BYTE PTR [r10],r13b
   1400087f5:	and    DWORD PTR [rdi+0x41],ecx
   1400087f8:	fwait
   1400087f9:	(bad)  
   1400087fa:	jae    0x1400087b9
   1400087fc:	xchg   DWORD PTR [rdx+0x3f],eax
   1400087ff:	and    eax,0x6bf52a52
   140008804:	rex.WX cmp rbx,rdx
   140008807:	adc    DWORD PTR [rcx+0x4fc00053],esi
   14000880d:	jns    0x140008809
   14000880f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008810:	xor    al,BYTE PTR [rcx+0x4d1a9249]
   140008816:	xchg   edi,eax
   140008817:	rex.X
   140008818:	fwait
   140008819:	js     0x1400087b9
   14000881b:	cs rex.WXB test rax,0x146079c
   140008822:	add    BYTE PTR [rax],al
   140008824:	add    BYTE PTR [rax],al
   140008826:	add    BYTE PTR [rax],al
   140008828:	rol    BYTE PTR [rax],0x0
   14000882b:	add    BYTE PTR [rax],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	rex.RX add BYTE PTR [rax],r8b
   140008832:	add    BYTE PTR [rax],al
   140008834:	add    BYTE PTR [rax],al
   140008836:	add    BYTE PTR [rax],al
   140008838:	add    BYTE PTR [r8+0x0],dl
   14000883c:	push   rax
   14000883d:	add    BYTE PTR [rcx+0x0],cl
   140008840:	add    BYTE PTR [rax],r8b
   140008843:	add    BYTE PTR [rax],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rbp+0x0],cl
   14000884a:	outs   dx,DWORD PTR ds:[rsi]
   14000884b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000884f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008853:	add    BYTE PTR [rax],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    BYTE PTR [rbp+0x0],cl
   14000885a:	outs   dx,DWORD PTR ds:[rsi]
   14000885b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000885f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008863:	add    BYTE PTR [rdi+0x0],bl
   140008866:	push   rdx
   140008867:	add    BYTE PTR [rcx+0x0],ah
   14000886a:	ja     0x14000886c
   14000886c:	add    BYTE PTR [rax],al
   14000886e:	add    BYTE PTR [rax],al
   140008870:	push   rdx
   140008871:	add    BYTE PTR [rbp+0x0],al
   140008874:	rex.RXB add BYTE PTR [r9+0x0],r9b
   140008878:	push   rbx
   140008879:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000887d:	add    BYTE PTR [rcx+0x0],bl
	...
   140008888:	rex.W add BYTE PTR [rbx+0x0],cl
   14000888c:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   140008898:	rex.W add BYTE PTR [rbx+0x0],cl
   14000889c:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   1400088a8:	rex.W add BYTE PTR [rbx+0x0],cl
   1400088ac:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   1400088b8:	rex.W add BYTE PTR [rbx+0x0],cl
   1400088bc:	push   rbp
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    BYTE PTR [rax+0x0],cl
   1400088c2:	rex.WXB add BYTE PTR [r8+0x0],dl
   1400088c6:	add    BYTE PTR [rax],r8b
   1400088c9:	add    BYTE PTR [rax],al
   1400088cb:	add    BYTE PTR [rax],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rax+0x0],cl
   1400088d2:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   1400088df:	add    BYTE PTR [rax+0x0],cl
   1400088e2:	rex.WXB add BYTE PTR [r11+0x0],al
   1400088e6:	rex.XB add BYTE PTR [r8],al
   1400088e9:	add    BYTE PTR [rax],al
   1400088eb:	add    BYTE PTR [rax],al
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rax+0x0],cl
   1400088f2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400088f6:	pop    rcx
   1400088f7:	add    BYTE PTR [rdi+0x0],bl
   1400088fa:	add    BYTE PTR [r8+r8*1+0x41],cl
   1400088ff:	add    BYTE PTR [rbx+0x0],dl
   140008902:	push   rbx
   140008903:	add    BYTE PTR [rbp+0x0],al
   140008906:	push   rbx
   140008907:	add    BYTE PTR [rdi+0x0],bl
   14000890a:	push   rdx
   14000890b:	add    BYTE PTR [rdi+0x0],cl
   14000890e:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   140008913:	add    BYTE PTR [rax],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    BYTE PTR [rax+0x0],cl
   14000891a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000891e:	pop    rcx
   14000891f:	add    BYTE PTR [rdi+0x0],bl
   140008922:	rex.XB add BYTE PTR [r13+0x0],dl
   140008926:	push   rdx
   140008927:	add    BYTE PTR [rdx+0x0],dl
   14000892a:	add    BYTE PTR [r14+0x0],r9b
   14000892e:	push   rsp
   14000892f:	add    BYTE PTR [rdi+0x0],bl
   140008932:	push   rbp
   140008933:	add    BYTE PTR [rbx+0x0],dl
   140008936:	add    BYTE PTR [r10+0x0],r10b
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	add    BYTE PTR [rax],al
   14000893e:	add    BYTE PTR [rax],al
   140008940:	rex.W add BYTE PTR [rbx+0x0],cl
   140008944:	add    BYTE PTR [r9+0x0],r11b
   140008948:	pop    rdi
   140008949:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000894d:	add    BYTE PTR [rbx+0x0],al
   140008950:	add    BYTE PTR [r8+rax*1+0x5f],cl
   140008955:	add    BYTE PTR [rbp+0x0],cl
   140008958:	add    BYTE PTR [r11+0x0],al
   14000895c:	rex.W add BYTE PTR [rcx+0x0],cl
   140008960:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140008964:	add    BYTE PTR [rax],al
   140008966:	add    BYTE PTR [rax],al
   140008968:	rex.W add BYTE PTR [rbx+0x0],cl
   14000896c:	add    BYTE PTR [r9+0x0],r11b
   140008970:	pop    rdi
   140008971:	add    BYTE PTR [rbp+0x0],dl
   140008974:	push   rbx
   140008975:	add    BYTE PTR [rbp+0x0],al
   140008978:	push   rdx
   140008979:	add    BYTE PTR [rbx+0x0],dl
   14000897c:	add    BYTE PTR [rax],al
   14000897e:	add    BYTE PTR [rax],al
   140008980:	rex.W add BYTE PTR [rbx+0x0],cl
   140008984:	add    BYTE PTR [r9+0x0],r11b
   140008988:	pop    rdi
   140008989:	add    BYTE PTR [rax+0x0],dl
   14000898c:	add    BYTE PTR [r10+0x0],r10b
   140008990:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140008994:	push   rdx
   140008995:	add    BYTE PTR [rbp+0x0],cl
   140008998:	add    BYTE PTR [r14+0x0],cl
   14000899c:	rex.XB add BYTE PTR [r13+0x0],al
   1400089a0:	pop    rdi
   1400089a1:	add    BYTE PTR [rax+rax*1+0x41],al
   1400089a5:	add    BYTE PTR [rax+rax*1+0x41],dl
   1400089a9:	add    BYTE PTR [rax],al
   1400089ab:	add    BYTE PTR [rax],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rax+0x0],cl
   1400089b2:	rex.WXB add BYTE PTR [r13+0x0],al
   1400089b6:	pop    rcx
   1400089b7:	add    BYTE PTR [rdi+0x0],bl
   1400089ba:	add    BYTE PTR [rcx+0x0],r11b
   1400089be:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400089c2:	add    BYTE PTR [rcx+0x0],r8b
   1400089c6:	push   rsp
   1400089c7:	add    BYTE PTR [rcx+0x0],al
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	add    BYTE PTR [rax],al
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400089d4:	add    BYTE PTR [r9+0x0],r11b
   1400089d8:	pop    rdi
   1400089d9:	add    BYTE PTR [rbx+0x0],al
   1400089dc:	push   rbp
   1400089dd:	add    BYTE PTR [rdx+0x0],dl
   1400089e0:	push   rdx
   1400089e1:	add    BYTE PTR [rbp+0x0],al
   1400089e4:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   1400089e9:	add    BYTE PTR [rbx+0x0],al
   1400089ec:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400089f0:	rex.RX add BYTE PTR [rcx+0x0],r9b
   1400089f4:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400089ff:	add    BYTE PTR [rax+0x1400088],cl
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax],al
   140008a09:	add    BYTE PTR [rax],al
   140008a0b:	cmp    bh,0xff
   140008a0e:	(bad)  
   140008a0f:	call   FWORD PTR [rax+0x1400088]
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    BYTE PTR [rcx],al
   140008a19:	add    BYTE PTR [rax],al
   140008a1b:	cmp    bh,0xff
   140008a1e:	(bad)  
   140008a1f:	jmp    FWORD PTR [rax+0x1400088]
   140008a25:	add    BYTE PTR [rax],al
   140008a27:	add    BYTE PTR [rdx],al
   140008a29:	add    BYTE PTR [rax],al
   140008a2b:	cmp    bh,0xff
   140008a2e:	(bad)  
   140008a2f:	(bad)  
   140008a30:	mov    eax,0x1400088
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    BYTE PTR [rbx],al
   140008a39:	add    BYTE PTR [rax],al
   140008a3b:	cmp    bh,0xff
   140008a3e:	(bad)  
   140008a3f:	inc    eax
   140008a41:	mov    BYTE PTR [rax],al
   140008a43:	rex add DWORD PTR [rax],eax
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	add    al,0x0
   140008a4a:	add    BYTE PTR [rax-0x1],al
   140008a50:	ror    BYTE PTR [rax+0x14000],1
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	(bad)  
   140008a59:	add    BYTE PTR [rax],al
   140008a5b:	cmp    bh,0xff
   140008a5e:	(bad)  
   140008a5f:	jmp    rax
   140008a61:	mov    BYTE PTR [rax],al
   140008a63:	rex add DWORD PTR [rax],eax
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	add    eax,0xff800000
   140008a6d:	(bad)  
   140008a6e:	(bad)  
   140008a6f:	push   rax
   140008a71:	mov    BYTE PTR [rax],al
   140008a73:	rex add DWORD PTR [rax],eax
   140008a76:	add    BYTE PTR [rax],al
   140008a78:	add    BYTE PTR [rax],al
   140008a7a:	add    BYTE PTR [rax-0x1],al
   140008a80:	sbb    BYTE PTR [rcx+0x14000],cl
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	add    DWORD PTR [rax],eax
   140008a8a:	add    BYTE PTR [rax-0x1],al
   140008a90:	rex mov DWORD PTR [rax],eax
   140008a93:	rex add DWORD PTR [rax],eax
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	add    al,BYTE PTR [rax]
   140008a9a:	add    BYTE PTR [rax-0x1],al
   140008aa0:	push   0x1400089
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    BYTE PTR [rbx],al
   140008aa9:	add    BYTE PTR [rax],al
   140008aab:	cmp    bh,0xff
   140008aae:	(bad)  
   140008aaf:	inc    DWORD PTR [rax+0x1400089]
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	add    BYTE PTR [rax+rax*1],al
   140008aba:	add    BYTE PTR [rax-0x1],al
   140008ac0:	mov    al,0x89
   140008ac2:	add    BYTE PTR [rax+0x1],al
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	add    BYTE PTR [rsi],al
   140008ac9:	add    BYTE PTR [rax],al
   140008acb:	cmp    bh,0xff
   140008ace:	(bad)  
   140008acf:	call   rax
   140008ad1:	mov    DWORD PTR [rax],eax
   140008ad3:	rex add DWORD PTR [rax],eax
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	add    eax,0xff800000
   140008add:	(bad)  
   140008ade:	(bad)  
   140008adf:	inc    DWORD PTR [rcx+0x0]
   140008ae2:	push   rax
   140008ae3:	add    BYTE PTR [rcx+0x0],cl
   140008ae6:	sub    eax,0x53004d00
   140008aeb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900e1f1
   140008af1:	add    BYTE PTR [rsi+0x0],ch
   140008af4:	sub    eax,0x6f004300
   140008af9:	add    BYTE PTR [rdx+0x0],dh
   140008afc:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00d703
   140008b03:	add    BYTE PTR [rbx+0x0],ah
   140008b06:	(bad)  
   140008b07:	add    BYTE PTR [rax+rax*1+0x52],ch
   140008b0b:	add    BYTE PTR [rbp+0x0],ah
   140008b0e:	add    BYTE PTR [ecx+0x0],ch
   140008b12:	jae    0x140008b14
   140008b14:	je     0x140008b16
   140008b16:	jb     0x140008b18
   140008b18:	jns    0x140008b1a
   140008b1a:	sub    eax,0x31004c00
   140008b1f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00bc25
   140008b25:	add    BYTE PTR [rax],dh
   140008b27:	add    BYTE PTR [rsi],ch
   140008b29:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140008b2d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008b31:	add    BYTE PTR [rax],al
   140008b33:	add    BYTE PTR [rax],al
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    BYTE PTR [rdx+0x65],dl
   140008b3a:	addr32 rex.R
   140008b3c:	gs ins BYTE PTR es:[rdi],dx
   140008b3e:	gs je  0x140008ba6
   140008b41:	rex.WXB
   140008b42:	gs jns 0x140008b8a
   140008b45:	js     0x140008b9e
   140008b47:	add    BYTE PTR [rcx+0x0],ah
   140008b4a:	add    BYTE PTR fs:[rsi+0x0],dh
   140008b4e:	(bad)  
   140008b4f:	add    BYTE PTR [rax+0x0],dh
   140008b52:	imul   eax,DWORD PTR [rax],0x320033
   140008b58:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140008b5d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008b61:	add    BYTE PTR [rax],al
   140008b63:	add    BYTE PTR [rax],al
   140008b65:	add    BYTE PTR [rax],al
   140008b67:	add    BYTE PTR [rdx+0x65],dl
   140008b6a:	addr32 rex.R
   140008b6c:	gs ins BYTE PTR es:[rdi],dx
   140008b6e:	gs je  0x140008bd6
   140008b71:	rex.WXB
   140008b72:	gs jns 0x140008bcc
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    dl,ch
   140008b79:	mov    eax,0xb9e1c5c5
   140008b7e:	call   0x1a61ca464
   140008b83:	push   0xfffffffffdee26a7
   140008b88:	jg     0x140008b30
   140008b8a:	add    al,0xd8
   140008b8c:	and    eax,0x8943c14c
   140008b91:	outs   dx,DWORD PTR ds:[rsi]
   140008b92:	mov    edi,edi
   140008b94:	js     0x140008b49
   140008b96:	test   eax,0x4e003c11
   140008b9b:	add    BYTE PTR [rbp+0x0],dl
   140008b9e:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140008ba3:	add    BYTE PTR [rax],al
   140008ba5:	add    BYTE PTR [rax],al
   140008ba7:	add    BYTE PTR [rsi+0x0],cl
   140008baa:	push   rbp
   140008bab:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140008bb7:	add    BYTE PTR [rdi],ch
   140008bb9:	add    BYTE PTR [rbx+0x0],al
   140008bbc:	ins    BYTE PTR es:[rdi],dx
   140008bbd:	add    BYTE PTR [rdi+0x0],ch
   140008bc0:	jae    0x140008bc2
   140008bc2:	add    BYTE PTR gs:[rax],al
	...
   140008bcd:	add    BYTE PTR [rax],al
   140008bcf:	add    BYTE PTR [rdi+0x0],al
   140008bd2:	ins    BYTE PTR es:[rdi],dx
   140008bd3:	add    BYTE PTR [rdi+0x0],ch
   140008bd6:	(bad)  
   140008bd7:	add    BYTE PTR [rcx+0x0],ah
   140008bda:	ins    BYTE PTR es:[rdi],dx
   140008bdb:	add    BYTE PTR [rax+rax*1+0x61],bl
   140008bdf:	add    BYTE PTR [rax+rax*1+0x38],ah
   140008be3:	add    BYTE PTR [rsi],dh
   140008be5:	add    BYTE PTR [rcx],bh
   140008be7:	add    BYTE PTR [rdx+0x0],ah
   140008bea:	(bad)  
   140008beb:	add    BYTE PTR [rcx],dh
   140008bed:	add    BYTE PTR [rip+0x61003700],ch        # 0x1a100c2f3
   140008bf3:	add    BYTE PTR [rax+rax*1+0x32],ah
   140008bf7:	add    BYTE PTR [rip+0x37003400],ch        # 0x17700bffd
   140008bfd:	add    BYTE PTR [rcx],dh
   140008bff:	add    BYTE PTR [rdx],dh
   140008c01:	add    BYTE PTR [rip+0x37006100],ch        # 0x17700ed07
   140008c07:	add    BYTE PTR [rdi],dh
   140008c09:	add    BYTE PTR [rbp+0x0],ah
   140008c0c:	sub    eax,0x37006100
   140008c11:	add    BYTE PTR [rax],dh
   140008c13:	add    BYTE PTR [rsi+0x0],ah
   140008c16:	data16 add BYTE PTR [rcx],bh
   140008c19:	add    BYTE PTR [rip+0x62003800],dh        # 0x1a200c41f
   140008c1f:	add    BYTE PTR [rcx],dh
   140008c21:	add    BYTE PTR [rdx],dh
   140008c23:	add    BYTE PTR [rip+0x2d000000],dh        # 0x16d008c29
   140008c29:	add    BYTE PTR [rax],al
   140008c2b:	add    BYTE PTR [rax],al
   140008c2d:	add    BYTE PTR [rax],al
   140008c2f:	add    BYTE PTR [rcx],bh
   140008c31:	add    BYTE PTR [rcx],bh
   140008c33:	add    BYTE PTR [rsi+0x0],ah
   140008c36:	xor    eax,DWORD PTR [rax]
   140008c38:	add    BYTE PTR fs:[rax],bh
   140008c3b:	add    BYTE PTR [rdx+0x0],ah
   140008c3e:	add    BYTE PTR fs:[rip+0x61006200],ch        # 0x1a100ee45
   140008c45:	add    BYTE PTR [rsi+0x0],ah
   140008c48:	xor    DWORD PTR [rax],eax
   140008c4a:	sub    eax,0x30003400
   140008c4f:	add    BYTE PTR [rax+rax*1],dh
   140008c52:	(bad)  
   140008c53:	add    BYTE PTR [rip+0x66003900],ch        # 0x1a600c559
   140008c59:	add    BYTE PTR [rsi+0x0],ah
   140008c5c:	xor    eax,0x61002d00
   140008c61:	add    BYTE PTR [rbx],dh
   140008c63:	add    BYTE PTR [rax+rax*1],dh
   140008c66:	xor    al,BYTE PTR [rax]
   140008c68:	(bad)  
   140008c69:	add    BYTE PTR [rdx+0x0],ah
   140008c6c:	xor    BYTE PTR [rax],al
   140008c6e:	data16 add BYTE PTR [rbx+0x0],ah
   140008c72:	xor    al,0x0
   140008c74:	xor    eax,0x3400
   140008c79:	add    BYTE PTR [rax],al
   140008c7b:	add    BYTE PTR [rax],al
   140008c7d:	add    BYTE PTR [rax],al
   140008c7f:	add    al,ah
   140008c81:	cmp    eax,0x3c6f394c
   140008c86:	rcl    BYTE PTR [rcx],cl
   140008c88:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   140008c8f:	mov    bh,0x57
   140008c91:	add    BYTE PTR [rbp+0x0],cl
   140008c94:	push   rax
   140008c95:	add    BYTE PTR [rsi+0x0],cl
   140008c98:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140008c9d:	add    BYTE PTR [rdi+0x0],ch
   140008ca0:	jb     0x140008ca2
   140008ca2:	imul   eax,DWORD PTR [rax],0x53
   140008ca5:	add    BYTE PTR [rsi+0x0],dh
   140008ca8:	movsxd eax,DWORD PTR [rax]
   140008caa:	add    BYTE PTR [rax],al
   140008cac:	add    BYTE PTR [rax],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	push   rdi
   140008cb1:	jno    0x140008cae
   140008cb3:	sysret 
   140008cb5:	ja     0x140008cd9
   140008cb7:	int3   
   140008cb8:	(bad)  
   140008cba:	adc    BYTE PTR [rax-0x54602a82],dh
   140008cc0:	push   rbx
   140008cc1:	add    BYTE PTR [rdi+0x0],cl
   140008cc4:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140008cc9:	add    BYTE PTR [rcx+0x0],al
   140008ccc:	push   rdx
   140008ccd:	add    BYTE PTR [rbp+0x0],al
   140008cd0:	pop    rsp
   140008cd1:	add    BYTE PTR [rax+0x0],dl
   140008cd4:	outs   dx,DWORD PTR ds:[rsi]
   140008cd5:	add    BYTE PTR [rax+rax*1+0x69],ch
   140008cd9:	add    BYTE PTR [rbx+0x0],ah
   140008cdc:	imul   eax,DWORD PTR [rax],0x730065
   140008ce2:	pop    rsp
   140008ce3:	add    BYTE PTR [rbp+0x0],cl
   140008ce6:	imul   eax,DWORD PTR [rax],0x720063
   140008cec:	outs   dx,DWORD PTR ds:[rsi]
   140008ced:	add    BYTE PTR [rbx+0x0],dh
   140008cf0:	outs   dx,DWORD PTR ds:[rsi]
   140008cf1:	add    BYTE PTR [rsi+0x0],ah
   140008cf4:	je     0x140008cf6
   140008cf6:	pop    rsp
   140008cf7:	add    BYTE PTR [rdi+0x0],dl
   140008cfa:	imul   eax,DWORD PTR [rax],0x64006e
   140008d00:	outs   dx,DWORD PTR ds:[rsi]
   140008d01:	add    BYTE PTR [rdi+0x0],dh
   140008d04:	jae    0x140008d06
   140008d06:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140008d0a:	add    BYTE PTR fs:[rcx+0x0],ch
   140008d0e:	(bad)  
   140008d0f:	add    BYTE PTR [rax+0x0],dl
   140008d12:	ins    BYTE PTR es:[rdi],dx
   140008d13:	add    BYTE PTR [rcx+0x0],ah
   140008d16:	jns    0x140008d18
   140008d18:	add    BYTE PTR gs:[rdx+0x0],dh
   140008d1c:	add    BYTE PTR [rax],al
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	push   rax
   140008d21:	add    BYTE PTR [rdx+0x0],dh
   140008d24:	add    BYTE PTR gs:[rsi+0x0],dh
   140008d28:	add    BYTE PTR gs:[rsi+0x0],ch
   140008d2c:	je     0x140008d2e
   140008d2e:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140008d32:	(bad)  
   140008d33:	add    BYTE PTR [rdx+0x0],dh
   140008d36:	(bad)  
   140008d37:	add    BYTE PTR [rdx+0x0],dh
   140008d3a:	jns    0x140008d3c
   140008d3c:	push   rbx
   140008d3d:	add    BYTE PTR [rax+0x0],ch
   140008d40:	(bad)  
   140008d41:	add    BYTE PTR [rdx+0x0],dh
   140008d44:	imul   eax,DWORD PTR [rax],0x67006e
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	pop    rbp
   140008d51:	push   rsi
   140008d52:	cmp    BYTE PTR [rsi-0x42430f],dh
   140008d58:	movabs ds:0x55e6da5fea28a28,eax
   140008d61:	ror    bl,cl
   140008d63:	(bad)  
   140008d64:	addr32 pop rcx
   140008d66:	sbb    edi,esp
   140008d68:	ret    0xe7fd
   140008d6b:	or     BYTE PTR [rdx+0x31],ch
   140008d6e:	movabs eax,ds:0x21
   140008d77:	add    BYTE PTR [rdx],ah
   140008d79:	add    eax,0x41993
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	ins    BYTE PTR es:[rdi],dx
   140008d81:	cdq    
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	add    DWORD PTR [rax],eax
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	mov    WORD PTR [rcx+0xa0000],ds
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	rcr    BYTE PTR [rcx+0x580000],0x0
   140008d97:	add    BYTE PTR [rax],al
   140008d99:	add    BYTE PTR [rax],al
   140008d9b:	add    BYTE PTR [rcx],al
   140008d9d:	add    BYTE PTR [rax],al
   140008d9f:	add    BYTE PTR [rdx],ah
   140008da1:	add    eax,0x11993
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	add    al,0x99
	...
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	add    eax,DWORD PTR [rax]
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	adc    BYTE PTR [rcx+0xc80000],bl
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	add    BYTE PTR [rax],al
   140008dc2:	add    BYTE PTR [rax],al
   140008dc4:	add    DWORD PTR [rax],eax
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	and    al,BYTE PTR [rip+0x41993]        # 0x14004a761
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	call   0x142008e6c
   140008dd5:	add    BYTE PTR [rax],al
   140008dd7:	add    BYTE PTR [rax],cl
   140008dd9:	cwde   
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	(bad)  
   140008ddd:	add    BYTE PTR [rax],al
   140008ddf:	add    BYTE PTR [rax-0x68],bl
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	js     0x140008de6
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	add    BYTE PTR [rax],al
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    DWORD PTR [rax],eax
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a789
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	pop    rsp
   140008df9:	xchg   edi,eax
	...
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    eax,DWORD PTR [rax]
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	push   0x20000097
   140008e0d:	add    BYTE PTR [rax],al
   140008e0f:	add    BYTE PTR [rax],al
   140008e11:	add    BYTE PTR [rax],al
   140008e13:	add    BYTE PTR [rcx],al
   140008e15:	add    BYTE PTR [rax],al
   140008e17:	add    BYTE PTR [rdx],ah
   140008e19:	add    eax,0x51993
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	ins    BYTE PTR es:[rdi],dx
   140008e21:	xchg   esi,eax
   140008e22:	add    BYTE PTR [rax],al
   140008e24:	add    al,BYTE PTR [rax]
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	xchg   esp,eax
   140008e29:	xchg   esi,eax
   140008e2a:	add    BYTE PTR [rax],al
   140008e2c:	or     BYTE PTR [rax],al
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	lock xchg esi,eax
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	push   rax
   140008e35:	add    BYTE PTR [rax],al
   140008e37:	add    BYTE PTR [rax],al
   140008e39:	add    BYTE PTR [rax],al
   140008e3b:	add    BYTE PTR [rcx],al
   140008e3d:	add    BYTE PTR [rax],al
   140008e3f:	add    BYTE PTR [rdx],ah
   140008e41:	add    eax,0x31993
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	in     al,0x95
	...
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	(bad)  
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rax],al
   140008e59:	xchg   esi,eax
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	and    BYTE PTR [rax],al
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	add    BYTE PTR [rax],al
   140008e62:	add    BYTE PTR [rax],al
   140008e64:	add    DWORD PTR [rax],eax
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a801
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008e71:	xchg   ebp,eax
	...
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	add    eax,DWORD PTR [rax]
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	mov    al,0x95
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	and    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	add    BYTE PTR [rax],al
   140008e8a:	add    BYTE PTR [rax],al
   140008e8c:	add    DWORD PTR [rax],eax
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a829
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	sub    BYTE PTR [rbp+0x0],dl
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	add    BYTE PTR [rax],al
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    eax,DWORD PTR [rax]
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	xor    BYTE PTR [rbp+0x200000],dl
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	add    BYTE PTR [rax],al
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    DWORD PTR [rax],eax
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002a851
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	mov    BYTE PTR [rax+rax*1+0x100],dl
   140008ec7:	add    BYTE PTR [rax+0x4000094],bl
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	add    al,al
   140008ed1:	xchg   esp,eax
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	and    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	add    BYTE PTR [rax],al
   140008eda:	add    BYTE PTR [rax],al
   140008edc:	add    DWORD PTR [rax],eax
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a879
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	cmp    al,0x94
	...
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	add    al,BYTE PTR [rax]
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	xchg   rsp,rax
   140008efa:	add    BYTE PTR [rax],al
   140008efc:	sub    BYTE PTR [rax],al
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	add    BYTE PTR [rax],al
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	add    DWORD PTR [rax],eax
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a8a1
   140008f0e:	add    BYTE PTR [rax],al
   140008f10:	push   0x9a
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    BYTE PTR [rax],al
   140008f19:	add    BYTE PTR [rax],al
   140008f1b:	add    BYTE PTR [rbx],al
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    BYTE PTR [rax-0x66],dh
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	and    BYTE PTR [rax],al
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	add    BYTE PTR [rax],al
   140008f2a:	add    BYTE PTR [rax],al
   140008f2c:	add    DWORD PTR [rax],eax
   140008f2e:	add    BYTE PTR [rax],al
   140008f30:	and    al,BYTE PTR [rip+0x21993]        # 0x14002a8c9
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	mov    BYTE PTR [rax+rax*1+0x100],dl
   140008f3f:	add    BYTE PTR [rbx+rbx*4],dh
   140008f42:	add    BYTE PTR [rax],al
   140008f44:	add    eax,DWORD PTR [rax]
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	(bad)  
   140008f49:	fwait
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	and    BYTE PTR [rax],al
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	add    BYTE PTR [rax],al
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    DWORD PTR [rax],eax
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a8f1
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	lock (bad) 
	...
   140008f6a:	add    BYTE PTR [rax],al
   140008f6c:	add    eax,0xf8000000
   140008f71:	(bad)  
   140008f72:	add    BYTE PTR [rax],al
   140008f74:	rex.W add BYTE PTR [rax],al
   140008f77:	add    BYTE PTR [rax],al
   140008f79:	add    BYTE PTR [rax],al
   140008f7b:	add    BYTE PTR [rcx],al
   140008f7d:	add    BYTE PTR [rax],al
   140008f7f:	add    BYTE PTR [rdx],ah
   140008f81:	add    eax,0x11993
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	mov    al,0x9b
	...
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    eax,DWORD PTR [rax]
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	mov    eax,0x2800009b
   140008f9d:	add    BYTE PTR [rax],al
   140008f9f:	add    BYTE PTR [rax],al
   140008fa1:	add    BYTE PTR [rax],al
   140008fa3:	add    BYTE PTR [rcx],al
	...
   140008fb1:	add    BYTE PTR [rax],al
   140008fb3:	add    BYTE PTR [rcx+0x38],al
   140008fb6:	lahf   
   140008fb7:	push   rbp
   140008fb8:	add    BYTE PTR [rax],al
   140008fba:	add    BYTE PTR [rax],al
   140008fbc:	add    al,BYTE PTR [rax]
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	and    eax,0xb0000000
   140008fc5:	nop
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	mov    al,0x82
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	cmp    BYTE PTR [r15+0x55],bl
   140008fd7:	add    BYTE PTR [rip+0xffffffffc8000000],cl        # 0x108008fdd
   140008fdd:	add    al,BYTE PTR [rax]
   140008fdf:	add    ah,ch
   140008fe1:	nop
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	in     al,dx
   140008fe5:	(bad)  
	...
   14000900e:	add    BYTE PTR [rax],al
   140009010:	movabs al,ds:0x0
	...
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax],dl
   140009069:	mov    al,0x0
   14000906b:	rex add DWORD PTR [rax],eax
	...
   14000907e:	add    BYTE PTR [rax],al
   140009080:	and    BYTE PTR [rbx+0x14000],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	sub    BYTE PTR [rbx+0x14000],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	cwde   
   140009091:	add    DWORD PTR [rax],0x40
   140009094:	add    DWORD PTR [rax],eax
   140009096:	add    BYTE PTR [rax],al
   140009098:	rex.X add BYTE PTR [rax],al
   14000909b:	add    BYTE PTR [rax],al
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    BYTE PTR [rax],al
   1400090a1:	xor    eax,0x0
	...
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	push   rdx
   1400090b1:	push   rbx
   1400090b2:	rex.R push rbx
   1400090b4:	rcr    DWORD PTR [rsi],1
   1400090b6:	and    BYTE PTR [rip+0x459272cd],dl        # 0x185930389
   1400090bc:	(bad)  
   1400090bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090be:	(bad)  
   1400090bf:	fst    QWORD PTR [rbx+0x41]
   1400090c2:	(bad)  
   1400090c3:	outs   dx,DWORD PTR ds:[rsi]
   1400090c4:	add    DWORD PTR [rax],eax
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	push   rdi
   1400090c9:	rex.WRB push r8
   1400090cb:	rex.WRX push rbx
   1400090cd:	rex.XB
   1400090ce:	rex.RX
   1400090cf:	rex.RXB
   1400090d0:	cs jo  0x140009137
   1400090d3:	(bad)  
	...
   1400090ec:	rex.RXB
   1400090ed:	rex.XB push r12
   1400090ef:	rex.WR add BYTE PTR [rax],r10b
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	push   0x2
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	cs je  0x140009160
   1400090fb:	js     0x140009171
   1400090fd:	and    al,0x64
   1400090ff:	imul   eax,DWORD PTR [rax],0x70000000
   140009105:	adc    al,BYTE PTR [rax]
   140009107:	add    al,al
   140009109:	add    BYTE PTR gs:[rax],al
   14000910c:	cs je  0x140009174
   14000910f:	js     0x140009185
   140009111:	and    al,0x6d
   140009113:	outs   dx,BYTE PTR ds:[rsi]
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	xor    BYTE PTR [rax+0x0],bh
   14000911b:	add    BYTE PTR [rbp+0x0],bh
   14000911e:	add    BYTE PTR [rax],al
   140009120:	cs je  0x140009188
   140009123:	js     0x140009199
   140009125:	and    al,0x6d
   140009127:	outs   dx,BYTE PTR ds:[rsi]
   140009128:	and    al,0x30
   14000912a:	xor    BYTE PTR [rax],al
   14000912c:	mov    al,0x78
   14000912e:	add    BYTE PTR [rax],al
   140009130:	add    BYTE PTR [rdx],0x0
   140009133:	add    BYTE PTR [rsi],ch
   140009135:	je     0x14000919c
   140009137:	js     0x1400091ad
   140009139:	and    al,0x78
   14000913b:	add    BYTE PTR [rax],dh
   14000913d:	jnp    0x14000913f
   14000913f:	add    BYTE PTR [rbx+0x2],ah
   140009142:	add    BYTE PTR [rax],al
   140009144:	cs je  0x1400091ac
   140009147:	js     0x1400091bd
   140009149:	and    al,0x79
   14000914b:	add    BYTE PTR fs:[rax],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	add    BYTE PTR [rax+0x3200000],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140009161:	add    BYTE PTR [rax],al
   140009163:	add    BYTE PTR [rax],ah
   140009165:	add    DWORD PTR [rax],0x0
   140009168:	adc    BYTE PTR [rax],al
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	xor    BYTE PTR cs:[rax],dh
   14000916f:	movsxd esp,DWORD PTR [rsi+0x67]
   140009172:	add    BYTE PTR [rax],al
   140009174:	xor    BYTE PTR [rbx+0x80000],al
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	cs rex.XB push r10
   14000917f:	push   rsp
   140009180:	and    al,0x58
   140009182:	rex.XB
   140009183:	add    BYTE PTR [r8],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	cmp    BYTE PTR [rbx+0x80000],al
   14000918e:	add    BYTE PTR [rax],al
   140009190:	cs rex.XB push r10
   140009193:	push   rsp
   140009194:	and    al,0x58
   140009196:	rex.XB
   140009197:	rex.B
   140009198:	add    BYTE PTR [r8],al
   14000919b:	add    BYTE PTR [rax-0x7d],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	sub    BYTE PTR [rax],al
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	cs rex.XB push r10
   1400091a7:	push   rsp
   1400091a8:	and    al,0x58
   1400091aa:	rex.XB
   1400091ab:	rex.WR add BYTE PTR [rax],r8b
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	push   0x8000083
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    BYTE PTR [rsi],ch
   1400091b9:	rex.XB push r10
   1400091bb:	push   rsp
   1400091bc:	and    al,0x58
   1400091be:	rex.XB push r13
   1400091c0:	add    BYTE PTR [rax],al
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	jo     0x140009149
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	or     BYTE PTR [rax],al
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	cs rex.XB push r10
   1400091cf:	push   rsp
   1400091d0:	and    al,0x58
   1400091d2:	rex.XB pop r10
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	js     0x14000915d
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	or     BYTE PTR [rax],al
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	cs rex.XB push r10
   1400091e3:	push   rsp
   1400091e4:	and    al,0x58
   1400091e6:	rex.WB
   1400091e7:	add    BYTE PTR [r8],al
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rbx+0x80000],0x0
   1400091f3:	add    BYTE PTR [rsi],ch
   1400091f5:	rex.XB push r10
   1400091f7:	push   rsp
   1400091f8:	and    al,0x58
   1400091fa:	rex.WB
   1400091fb:	rex.B
   1400091fc:	add    BYTE PTR [r8],al
   1400091ff:	add    BYTE PTR [rax+0x8000083],cl
   140009205:	add    BYTE PTR [rax],al
   140009207:	add    BYTE PTR [rsi],ch
   140009209:	rex.XB push r10
   14000920b:	push   rsp
   14000920c:	and    al,0x58
   14000920e:	rex.WB pop r9
   140009210:	add    BYTE PTR [rax],al
   140009212:	add    BYTE PTR [rax],al
   140009214:	nop
   140009215:	add    DWORD PTR [rax],0x0
   140009218:	or     BYTE PTR [rax],al
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	cs rex.XB push r10
   14000921f:	push   rsp
   140009220:	and    al,0x58
   140009222:	rex.WB pop r10
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	cwde   
   140009229:	add    DWORD PTR [rax],0x0
   14000922c:	or     BYTE PTR [rcx],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140009239:	add    BYTE PTR [rax],al
   14000923b:	add    BYTE PTR [rax+0x10000084],ah
   140009241:	or     al,0x0
   140009243:	add    BYTE PTR [rsi],ch
   140009245:	jb     0x1400092ab
   140009247:	(bad)  
   140009248:	je     0x1400092ab
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	mov    al,0x90
   14000924e:	add    BYTE PTR [rax],al
   140009250:	add    al,0x3
   140009252:	add    BYTE PTR [rax],al
   140009254:	cs jb  0x1400092bb
   140009257:	(bad)  
   140009258:	je     0x1400092bb
   14000925a:	and    al,0x7a
   14000925c:	jp     0x1400092d8
   14000925e:	fs (bad) 
   140009260:	add    BYTE PTR [eax],al
   140009263:	add    al,al
   140009265:	xchg   ebx,eax
   140009266:	add    BYTE PTR [rax],al
   140009268:	sbb    BYTE PTR [rcx],cl
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	cs js  0x1400092d3
   14000926f:	(bad)  
   140009270:	je     0x1400092d3
   140009272:	add    BYTE PTR [rax],al
   140009274:	fcomp  DWORD PTR [rax+rax*1+0x800]
   14000927b:	add    BYTE PTR [rcx+0x54],al
   14000927e:	rex.WR and al,0x5f
   140009281:	pop    rdi
   140009282:	(bad)  
   140009283:	add    al,ah
   140009285:	pushf  
   140009286:	add    BYTE PTR [rax],al
   140009288:	or     BYTE PTR [rax],al
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	push   r12
   14000928e:	rex.WR and al,0x5f
   140009291:	pop    rdi
   140009292:	jp     0x140009294
   140009294:	call   0xc0009335
   140009299:	add    BYTE PTR [rax],al
   14000929b:	add    BYTE PTR [rsi],ch
   14000929d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	push   0x2000009d
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rsi],ch
   1400092b1:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	mov    BYTE PTR [rbp+0x800000],bl
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	or     BYTE PTR [rsi+0xb00000],bl
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	mov    eax,0x8000009e
   1400092e9:	add    BYTE PTR [rax],al
   1400092eb:	add    BYTE PTR [rsi],ch
   1400092ed:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	cmp    BYTE PTR [rdi+0x500000],bl
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140009309:	add    BYTE PTR [rax],al
   14000930b:	add    BYTE PTR [rax+0x1400009f],cl
   140009311:	add    BYTE PTR [rax],al
   140009313:	add    BYTE PTR [rsi],ch
   140009315:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rax+0x2000009f],ah
   140009325:	add    eax,DWORD PTR [rax]
   140009327:	add    BYTE PTR [rsi],ch
   140009329:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140009331:	add    BYTE PTR [rax],al
   140009333:	add    al,al
   140009335:	movabs ds:0x692e000006ba0000,al
   14000933e:	fs (bad) 
   140009340:	je     0x1400093a3
   140009342:	and    al,0x36
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	add    BYTE PTR [rax+0x600000],dh
   14000934e:	add    BYTE PTR [rax],al
   140009350:	cs fs (bad) 
   140009353:	je     0x1400093b6
   140009355:	add    BYTE PTR [rax],al
   140009357:	add    BYTE PTR [rax+0x100000b0],al
   14000935d:	or     BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rsi],ch
   140009361:	(bad)  
   140009363:	jae    0x140009365
   140009365:	add    BYTE PTR [rax],al
   140009367:	add    BYTE PTR [rax],al
   140009369:	rol    BYTE PTR [rax],0x0
   14000936c:	and    al,0x6
   14000936e:	add    BYTE PTR [rax],al
   140009370:	cs jo  0x1400093d7
   140009373:	(bad)  
   140009374:	je     0x1400093d7
   140009376:	add    BYTE PTR [rax],al
   140009378:	add    al,dl
   14000937a:	add    BYTE PTR [rax],al
   14000937c:	add    BYTE PTR [rax],0x0
   14000937f:	add    BYTE PTR [rsi],ch
   140009381:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    al,ah
   14000938e:	add    BYTE PTR [rax],al
   140009390:	add    BYTE PTR [rbx],al
   140009392:	add    BYTE PTR [rax],al
   140009394:	cs jb  0x14000940a
   140009397:	jb     0x1400093fc
   140009399:	and    al,0x30
   14000939b:	xor    DWORD PTR [rax],eax
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rax],al
   1400093a1:	jrcxz  0x1400093a3
   1400093a3:	add    al,dl
   1400093a5:	push   0x0
   1400093a7:	add    BYTE PTR [rsi],ch
   1400093a9:	jb     0x14000941e
   1400093ab:	jb     0x140009410
   1400093ad:	and    al,0x30
   1400093af:	xor    al,BYTE PTR [rax]
	...
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rcx],al
   1400093c1:	add    al,0x1
   1400093c3:	add    BYTE PTR [rdx+riz*2],al
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	add    DWORD PTR [rbx],ecx
   1400093ca:	add    DWORD PTR [rax],eax
   1400093cc:	or     eax,DWORD PTR [rdx+0x9010000]
   1400093d2:	add    DWORD PTR [rax],eax
   1400093d4:	or     edx,esp
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	add    DWORD PTR [rdi],ecx
   1400093da:	(bad)  
   1400093db:	add    BYTE PTR [rdi],cl
   1400093dd:	fs (bad) 
   1400093df:	add    BYTE PTR [rdi],cl
   1400093e1:	xor    al,0x6
   1400093e3:	add    BYTE PTR [rdi],cl
   1400093e5:	xor    cl,BYTE PTR [rbx]
   1400093e7:	jo     0x1400093ea
   1400093e9:	(bad)  
   1400093ea:	add    al,BYTE PTR [rax]
   1400093ec:	(bad)  
   1400093ed:	xor    al,BYTE PTR [rdx]
   1400093ef:	jo     0x1400093f2
   1400093f1:	or     al,BYTE PTR [rax+rax*1]
   1400093f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400093f7:	add    BYTE PTR [rdx],cl
   1400093f9:	xor    al,BYTE PTR [rsi]
   1400093fb:	jo     0x1400093fe
   1400093fd:	(bad)  
   1400093fe:	or     eax,0x1c742700
   140009403:	add    BYTE PTR [rdi],ah
   140009405:	sbb    eax,DWORD PTR fs:[rax]
   140009408:	(bad)  
   140009409:	xor    al,0x1a
   14000940b:	add    BYTE PTR [rdi],ah
   14000940d:	add    DWORD PTR [rax+rax*1],edx
   140009410:	sbb    al,0xf0
   140009412:	sbb    ah,al
   140009414:	sbb    al,dl
   140009416:	(bad)  
   140009417:	rcl    BYTE PTR [rax+rdx*2],0x0
   14000941b:	add    BYTE PTR [rcx],dl
   14000941d:	and    al,0xa
   14000941f:	add    BYTE PTR [rsp+riz*2],ah
   140009422:	or     eax,0xc542000
   140009427:	add    BYTE PTR [rsp+rsi*1],bl
   14000942a:	or     eax,DWORD PTR [rax]
   14000942c:	adc    BYTE PTR [rdx+0xc],dl
   14000942f:	lock or ah,al
   140009432:	or     BYTE PTR [rax-0x78],dh
   140009435:	ja     0x140009437
   140009437:	add    al,ah
   140009439:	mov    es,WORD PTR [rax]
   14000943b:	add    bh,bh
   14000943d:	(bad)  
   14000943e:	(bad)  
   14000943f:	push   QWORD PTR [rsi+0x78]
   140009445:	add    BYTE PTR [rax],al
   140009447:	add    BYTE PTR [rax+0x1d],bl
   14000944a:	add    BYTE PTR [rax],al
   14000944c:	(bad)  
   14000944d:	(bad)  
   14000944e:	(bad)  
   14000944f:	inc    DWORD PTR [rdx+0x1d]
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rcx],al
   140009459:	(bad)  
   14000945a:	add    al,BYTE PTR [rax]
   14000945c:	(bad)  
   14000945d:	xor    al,BYTE PTR [rdx]
   14000945f:	push   rax
   140009460:	add    DWORD PTR [rax+rcx*1],edx
   140009463:	add    BYTE PTR [rsp+riz*2],dl
   140009466:	or     BYTE PTR [rax],al
   140009468:	adc    al,0x54
   14000946a:	(bad)  
   14000946b:	add    BYTE PTR [rsp+rsi*1],dl
   14000946e:	(bad)  
   14000946f:	add    BYTE PTR [rdx+rsi*1],dl
   140009472:	adc    BYTE PTR [rax+0x19],dh
   140009475:	adc    al,0x4
   140009477:	add    BYTE PTR [rsp+rsi*1],dl
   14000947a:	or     BYTE PTR [rax],al
   14000947c:	(bad)  
   14000947d:	push   rdx
   14000947e:	add    ah,BYTE PTR [rax-0x78]
   140009481:	ja     0x140009483
   140009483:	add    BYTE PTR [rax-0xffff72],bh
   140009489:	(bad)  
   14000948a:	(bad)  
   14000948b:	inc    DWORD PTR [rax]
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    bh,bh
   140009491:	(bad)  
   140009492:	(bad)  
   140009493:	inc    DWORD PTR [rax]
	...
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rcx],al
   1400094a1:	add    BYTE PTR [rax],al
   1400094a3:	add    BYTE PTR [rcx],al
   1400094a5:	add    BYTE PTR [rax],al
   1400094a7:	add    BYTE PTR [rsp+rdx*4+0x400000],ch
	...
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	loop   0x140009532
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	cmp    BYTE PTR [rax],al
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	adc    al,0x20
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	(bad)  
   1400094c5:	(bad)  
   1400094c6:	(bad)  
   1400094c7:	(bad)  
   1400094c8:	jge    0x1400094ea
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	add    BYTE PTR [rax],al
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	movabs al,ds:0xe2ffffffff000020
   1400094d9:	js     0x1400094db
   1400094db:	add    BYTE PTR [rax],al
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rcx],bl
   1400094e1:	or     al,BYTE PTR [rdx]
   1400094e3:	add    BYTE PTR [rdx],cl
   1400094e5:	xor    al,BYTE PTR [rsi]
   1400094e7:	push   rax
   1400094e8:	mov    BYTE PTR [rdi+0x0],dh
   1400094eb:	add    BYTE PTR [rax+0x100008e],bh
   1400094f1:	sbb    DWORD PTR [rdx],ecx
   1400094f3:	add    BYTE PTR [rcx],bl
   1400094f5:	je     0x140009500
   1400094f7:	add    BYTE PTR [rcx],bl
   1400094f9:	or     BYTE PTR fs:[rax],al
   1400094fc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140009500:	sbb    DWORD PTR [rsi+rax*1],esi
   140009503:	add    BYTE PTR [rcx],bl
   140009505:	xor    dl,BYTE PTR [rip+0xa2311e0]        # 0x14a23a6eb
   14000950b:	add    BYTE PTR [rbx],ah
   14000950d:	push   rsp
   14000950e:	(bad)  
   14000950f:	add    BYTE PTR [rdi],bl
   140009511:	xor    al,0xd
   140009513:	add    BYTE PTR [rbx],dl
   140009515:	push   rdx
   140009516:	(bad)  
   140009518:	or     eax,0x9c00be0
   14000951d:	jo     0x140009527
   14000951f:	(bad)  
   140009520:	mov    BYTE PTR [rdi+0x0],dh
   140009523:	add    BYTE PTR [rax-0xffff72],dl
   140009529:	(bad)  
   14000952a:	(bad)  
   14000952b:	inc    DWORD PTR [rbx]
   14000952d:	jns    0x14000952f
   14000952f:	add    BYTE PTR [rdx+riz*1-0x10000],ch
   140009536:	(bad)  
   140009537:	(bad)  
   140009538:	stc    
   140009539:	and    al,BYTE PTR [rax]
   14000953b:	add    BYTE PTR [rax],al
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    BYTE PTR [rdx-0xffffdd],ch
   140009545:	(bad)  
   140009546:	(bad)  
   140009547:	inc    DWORD PTR [rcx]
   140009549:	adc    eax,0x74150008
   14000954e:	or     BYTE PTR [rax],al
   140009550:	adc    eax,0x15000764
   140009555:	xor    al,0x6
   140009557:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0a68f
   14000955d:	clts   
   14000955f:	add    BYTE PTR [rdi],cl
   140009561:	or     DWORD PTR fs:[rax],eax
   140009564:	sysenter 
   140009566:	or     BYTE PTR [rax],al
   140009568:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000956b:	jo     0x140009586
   14000956d:	sub    al,0x9
   14000956f:	add    BYTE PTR [rbx],bl
   140009571:	xor    al,0x60
   140009573:	add    DWORD PTR [rbx],ebx
   140009575:	add    DWORD PTR [rdx+0x1],ebx
   140009578:	or     al,0xf0
   14000957a:	or     ah,al
   14000957c:	or     BYTE PTR [rax+0x7],dh
   14000957f:	(bad)  
   140009580:	(bad)  
   140009581:	push   rax
   140009582:	add    BYTE PTR [rax],al
   140009584:	pop    rax
   140009585:	jae    0x140009587
   140009587:	add    al,al
   140009589:	or     al,BYTE PTR [rax]
   14000958b:	add    BYTE PTR [rcx],al
   14000958d:	(bad)  
   14000958e:	add    al,BYTE PTR [rax]
   140009590:	(bad)  
   140009591:	xor    al,BYTE PTR [rdx]
   140009593:	xor    BYTE PTR [rcx],dl
   140009595:	adc    eax,DWORD PTR [rdx]
   140009597:	add    BYTE PTR [rdx],cl
   140009599:	push   rdx
   14000959a:	(bad)  
   14000959b:	xor    BYTE PTR [rax+0x68000077],cl
   1400095a1:	mov    es,WORD PTR [rax]
   1400095a3:	add    bh,bh
   1400095a5:	(bad)  
   1400095a6:	(bad)  
   1400095a7:	call   QWORD PTR [rip+0x79]        # 0x140009626
   1400095ad:	add    BYTE PTR [rax],al
   1400095af:	add    BYTE PTR [rax+0x29],cl
   1400095b2:	add    BYTE PTR [rax],al
   1400095b4:	(bad)  
   1400095b5:	(bad)  
   1400095b6:	(bad)  
   1400095b7:	call   FWORD PTR [rsi+0x29]
   1400095ba:	add    BYTE PTR [rax],al
   1400095bc:	add    BYTE PTR [rax],al
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	sub    DWORD PTR fs:[rax],eax
   1400095c3:	add    bh,bh
   1400095c5:	(bad)  
   1400095c6:	(bad)  
   1400095c7:	inc    DWORD PTR [rcx]
   1400095c9:	add    al,0x1
   1400095cb:	add    BYTE PTR [rdx+rax*2],al
   1400095ce:	add    BYTE PTR [rax],al
   1400095d0:	adc    DWORD PTR [rax],ebx
   1400095d2:	add    al,0x0
   1400095d4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400095d7:	add    BYTE PTR [rdx],cl
   1400095d9:	push   rdx
   1400095da:	(bad)  
   1400095db:	jo     0x140009565
   1400095dd:	ja     0x1400095df
   1400095df:	add    BYTE PTR [rax-0x72],al
   1400095e2:	add    BYTE PTR [rax],al
   1400095e4:	(bad)  
   1400095e5:	(bad)  
   1400095e6:	(bad)  
   1400095e7:	jmp    QWORD PTR [rdi]
   1400095e9:	jns    0x1400095eb
   1400095eb:	add    BYTE PTR [rax],al
   1400095ed:	add    BYTE PTR [rax],al
   1400095ef:	add    BYTE PTR [rdi],dh
   1400095f1:	jns    0x1400095f3
   1400095f3:	add    bh,bh
   1400095f5:	(bad)  
   1400095f6:	(bad)  
   1400095f7:	inc    DWORD PTR [rdi+0x79]
   1400095fa:	add    BYTE PTR [rax],al
   1400095fc:	add    BYTE PTR [rax],al
   1400095fe:	add    BYTE PTR [rax],al
   140009600:	mov    ah,0x2a
   140009602:	add    BYTE PTR [rax],al
   140009604:	(bad)  
   140009605:	(bad)  
   140009606:	(bad)  
   140009607:	(bad)  
   140009608:	fldcw  WORD PTR [rdx]
   14000960a:	add    BYTE PTR [rax],al
   14000960c:	add    DWORD PTR [rax],eax
   14000960e:	add    BYTE PTR [rax],al
   140009610:	cld    
   140009611:	sub    al,BYTE PTR [rax]
   140009613:	add    BYTE PTR [rax],al
   140009615:	add    BYTE PTR [rax],al
   140009617:	add    BYTE PTR [rax],dl
   140009619:	sub    eax,DWORD PTR [rax]
   14000961b:	add    bh,bh
   14000961d:	(bad)  
   14000961e:	(bad)  
   14000961f:	call   QWORD PTR [rip+0x200002b]        # 0x142009650
   140009625:	add    BYTE PTR [rax],al
   140009627:	add    BYTE PTR [rsi],bl
   140009629:	sub    eax,DWORD PTR [rax]
   14000962b:	add    bh,bh
   14000962d:	(bad)  
   14000962e:	(bad)  
   14000962f:	dec    DWORD PTR [rcx]
   140009631:	add    al,0x1
   140009633:	add    BYTE PTR [rdx+riz*2],al
   140009636:	add    BYTE PTR [rax],al
   140009638:	(bad)  
   140009639:	jb     0x14000963b
   14000963b:	add    BYTE PTR [rcx],al
   14000963d:	add    BYTE PTR [rax],al
   14000963f:	add    BYTE PTR [rax+0x2b],ah
   140009642:	add    BYTE PTR [rax],al
   140009644:	outs   dx,BYTE PTR ds:[rsi]
   140009645:	sub    eax,DWORD PTR [rax]
   140009647:	add    BYTE PTR [rcx+0x79],bl
   14000964a:	add    BYTE PTR [rax],al
   14000964c:	outs   dx,BYTE PTR ds:[rsi]
   14000964d:	sub    eax,DWORD PTR [rax]
   14000964f:	add    BYTE PTR [rcx],bl
   140009651:	or     BYTE PTR es:[rax],al
   140009654:	(bad)  
   140009655:	mov    dl,0x1a
   140009657:	lock sbb al,ah
   14000965a:	(bad)  
   14000965b:	rcl    BYTE PTR [rax+rax*8],1
   14000965e:	adc    dh,BYTE PTR [rax+0x11]
   140009661:	(bad)  
   140009662:	adc    BYTE PTR [rax],dh
   140009664:	mov    BYTE PTR [rdi+0x0],dh
   140009667:	add    BYTE PTR [rax],bl
   140009669:	mov    es,WORD PTR [rax]
   14000966b:	add    bh,bh
   14000966d:	(bad)  
   14000966e:	(bad)  
   14000966f:	inc    DWORD PTR [rax]
   140009671:	add    BYTE PTR [rax],al
   140009673:	add    bh,bh
   140009675:	(bad)  
   140009676:	(bad)  
   140009677:	inc    DWORD PTR [rax]
   140009679:	add    BYTE PTR [rax],al
   14000967b:	add    bh,bh
   14000967d:	(bad)  
   14000967e:	(bad)  
   14000967f:	call   FWORD PTR [rdx+0x2000079]
   140009685:	add    BYTE PTR [rax],al
   140009687:	add    BYTE PTR [rax],al
   140009689:	add    BYTE PTR [rax],al
   14000968b:	add    BYTE PTR [rdx],al
	...
   140009699:	add    BYTE PTR [rax],al
   14000969b:	add    BYTE PTR [rcx],al
   14000969d:	add    BYTE PTR [rax],al
   14000969f:	add    BYTE PTR [rcx],al
   1400096a1:	add    BYTE PTR [rax],al
   1400096a3:	add    BYTE PTR [rsi+rdx*4+0x30000],bh
   1400096aa:	add    BYTE PTR [rax],al
   1400096ac:	add    eax,DWORD PTR [rax]
   1400096ae:	add    BYTE PTR [rax],al
   1400096b0:	add    al,0x0
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	add    DWORD PTR [rax],eax
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	rcl    BYTE PTR [rsi+0x400000],1
	...
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	jg     0x140009743
   1400096ca:	add    BYTE PTR [rax],al
   1400096cc:	cmp    BYTE PTR [rax],al
   1400096ce:	add    BYTE PTR [rax],al
   1400096d0:	add    BYTE PTR [rax],al
	...
   1400096db:	add    BYTE PTR [rsi+0x38000079],ah
	...
   1400096ed:	add    BYTE PTR [rax],al
   1400096ef:	add    BYTE PTR [rbx+rbp*1-0x10000],al
   1400096f6:	(bad)  
   1400096f7:	(bad)  
   1400096f8:	in     al,dx
   1400096f9:	sub    eax,DWORD PTR [rax]
   1400096fb:	add    BYTE PTR [rax],al
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rdx],cl
   140009701:	sub    al,0x0
   140009703:	add    bh,bh
   140009705:	(bad)  
   140009706:	(bad)  
   140009707:	push   QWORD PTR [rdi]
   140009709:	sub    al,0x0
   14000970b:	add    BYTE PTR [rdx],al
   14000970d:	add    BYTE PTR [rax],al
   14000970f:	add    BYTE PTR [rdi+0x2c],bl
   140009712:	add    BYTE PTR [rax],al
   140009714:	add    eax,DWORD PTR [rax]
   140009716:	add    BYTE PTR [rax],al
   140009718:	jnp    0x140009746
   14000971a:	add    BYTE PTR [rax],al
   14000971c:	add    al,BYTE PTR [rax]
   14000971e:	add    BYTE PTR [rax],al
   140009720:	lock sub eax,0xffff0000
   140009726:	(bad)  
   140009727:	(bad)  
   140009728:	jg     0x1400097a3
   14000972a:	add    BYTE PTR [rax],al
   14000972c:	add    BYTE PTR [rax],al
   14000972e:	add    BYTE PTR [rax],al
   140009730:	sbb    DWORD PTR [rdx],ecx
   140009732:	add    al,BYTE PTR [rax]
   140009734:	or     dh,BYTE PTR [rdx]
   140009736:	(bad)  
   140009737:	push   rax
   140009738:	mov    BYTE PTR [rdi+0x0],dh
   14000973b:	add    BYTE PTR [rax],bl
   14000973d:	mov    es,WORD PTR [rax]
   14000973f:	add    BYTE PTR [rcx],dl
   140009741:	sbb    al,0x8
   140009743:	add    BYTE PTR [rsp+riz*2],bl
   140009746:	or     eax,DWORD PTR [rax]
   140009748:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000974c:	adc    al,0x34
   14000974e:	or     BYTE PTR [rax],al
   140009750:	or     BYTE PTR [rdx+0x4],dl
   140009753:	jo     0x1400096dd
   140009755:	ja     0x140009757
   140009757:	add    al,dh
   140009759:	lea    eax,[rax]
   14000975b:	add    bh,bh
   14000975d:	(bad)  
   14000975e:	(bad)  
   14000975f:	inc    edi
   140009761:	jns    0x140009763
   140009763:	add    BYTE PTR [rax],al
   140009765:	add    BYTE PTR [rax],al
   140009767:	add    BYTE PTR [rax],ah
   140009769:	add    BYTE PTR cs:[rax],al
   14000976c:	(bad)  
   14000976d:	(bad)  
   14000976e:	(bad)  
   14000976f:	call   FWORD PTR [rdi+0x2e]
   140009772:	add    BYTE PTR [rax],al
   140009774:	add    BYTE PTR [rax],al
   140009776:	add    BYTE PTR [rax],al
   140009778:	test   DWORD PTR [rsi],ebp
   14000977a:	add    BYTE PTR [rax],al
   14000977c:	(bad)  
   14000977d:	(bad)  
   14000977e:	(bad)  
   14000977f:	call   FWORD PTR [rcx]
   140009781:	sub    cl,BYTE PTR [rbx]
   140009783:	add    BYTE PTR [rsp+rsi*1],bl
   140009786:	sbb    eax,DWORD PTR [rax]
   140009788:	sbb    al,0x1
   14000978a:	adc    al,BYTE PTR [rax]
   14000978c:	adc    al,dh
   14000978e:	(bad)  
   14000978f:	loopne 0x14000979d
   140009791:	ror    BYTE PTR [rdx],1
   140009793:	ror    BYTE PTR [rax],0x70
   140009796:	(bad)  
   140009797:	(bad)  
   140009798:	(bad)  
   140009799:	push   rax
   14000979a:	add    BYTE PTR [rax],al
   14000979c:	pop    rax
   14000979d:	jae    0x14000979f
   14000979f:	add    BYTE PTR [rax+0x1000000],al
   1400097a5:	or     al,0x2
   1400097a7:	add    BYTE PTR [rdx+rdx*4],cl
   1400097aa:	or     BYTE PTR [rax],dh
   1400097ac:	add    DWORD PTR [rcx],ebx
   1400097ae:	or     al,BYTE PTR [rax]
   1400097b0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400097b4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400097b8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400097bc:	sbb    DWORD PTR [rsi+rax*1],esi
   1400097bf:	add    BYTE PTR [rcx],bl
   1400097c1:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x14934b1b7
   1400097c7:	add    BYTE PTR [rcx],bl
   1400097c9:	add    DWORD PTR [rsp+rax*1],esi
   1400097cc:	or     al,0xf0
   1400097ce:	or     ah,al
   1400097d0:	or     al,dl
   1400097d2:	(bad)  
   1400097d3:	rol    BYTE PTR [rax+rsi*2],0x3
   1400097d7:	(bad)  
   1400097d8:	add    dh,BYTE PTR [rax]
   1400097da:	add    BYTE PTR [rax],al
   1400097dc:	xchg   esp,eax
   1400097dd:	ja     0x1400097df
   1400097df:	add    al,cl
   1400097e1:	lea    eax,[rax]
   1400097e3:	add    BYTE PTR [rbx-0xffffdf],dl
   1400097e9:	(bad)  
   1400097ea:	(bad)  
   1400097eb:	inc    DWORD PTR [rax]
   1400097ed:	add    BYTE PTR [rax],al
   1400097ef:	add    bh,bh
   1400097f1:	(bad)  
   1400097f2:	(bad)  
   1400097f3:	inc    DWORD PTR [rax]
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    bh,bh
   1400097f9:	(bad)  
   1400097fa:	(bad)  
   1400097fb:	inc    DWORD PTR [rax]
   1400097fd:	add    BYTE PTR [rax],al
   1400097ff:	add    bh,bh
   140009801:	(bad)  
   140009802:	(bad)  
   140009803:	inc    DWORD PTR [rax]
	...
   14000980d:	add    BYTE PTR [rax],al
   14000980f:	add    BYTE PTR [rcx],al
   140009811:	add    BYTE PTR [rax],al
   140009813:	add    BYTE PTR [rcx],al
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    BYTE PTR [rax],dh
   140009819:	cwde   
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	add    al,BYTE PTR [rax]
   14000981e:	add    BYTE PTR [rax],al
   140009820:	add    al,BYTE PTR [rax]
   140009822:	add    BYTE PTR [rax],al
   140009824:	add    eax,DWORD PTR [rax]
   140009826:	add    BYTE PTR [rax],al
   140009828:	add    DWORD PTR [rax],eax
   14000982a:	add    BYTE PTR [rax],al
   14000982c:	rex.R cwde 
   14000982e:	add    BYTE PTR [rax],al
   140009830:	add    BYTE PTR [rax],al
	...
   14000983b:	add    cl,bl
   14000983d:	jns    0x14000983f
   14000983f:	add    BYTE PTR [rax+0x0],cl
   140009842:	add    BYTE PTR [rax],al
   140009844:	add    BYTE PTR [rax],al
	...
   14000984f:	add    ah,dh
   140009851:	jns    0x140009853
   140009853:	add    BYTE PTR [rax+0x0],cl
   140009856:	add    BYTE PTR [rax],al
   140009858:	(bad)  
   140009859:	xor    al,0x0
   14000985b:	add    bh,bh
   14000985d:	(bad)  
   14000985e:	(bad)  
   14000985f:	inc    DWORD PTR [rax+0x35]
   140009865:	add    BYTE PTR [rax],al
   140009867:	add    ah,dl
   140009869:	xor    eax,0xffff0000
   14000986e:	(bad)  
   14000986f:	jmp    QWORD PTR [rdi+0x37]
   140009872:	add    BYTE PTR [rax],al
   140009874:	add    al,BYTE PTR [rax]
   140009876:	add    BYTE PTR [rax],al
   140009878:	mov    edx,0xff000037
   14000987d:	(bad)  
   14000987e:	(bad)  
   14000987f:	(bad)  
   140009880:	fnstcw WORD PTR [rcx+0x0]
   140009883:	add    BYTE PTR [rax],al
   140009885:	add    BYTE PTR [rax],al
   140009887:	add    BYTE PTR [rcx],bl
   140009889:	or     al,BYTE PTR [rdx]
   14000988b:	add    BYTE PTR [rdx],cl
   14000988d:	push   rdx
   14000988e:	(bad)  
   14000988f:	push   rax
   140009890:	mov    BYTE PTR [rdi+0x0],dh
   140009893:	add    al,cl
   140009895:	lea    eax,[rax]
   140009897:	add    BYTE PTR [rcx],bl
   140009899:	and    eax,0x34130005
   14000989e:	or     al,BYTE PTR [rbx+rdx*1]
   1400098a1:	add    DWORD PTR [rsi],eax
   1400098a3:	add    al,0x6
   1400098a5:	jo     0x1400098a7
   1400098a7:	add    BYTE PTR [rax+0x73],bl
   1400098aa:	add    BYTE PTR [rax],al
   1400098ac:	and    BYTE PTR [rax],ah
   1400098ae:	add    BYTE PTR [rax],al
   1400098b0:	sbb    DWORD PTR [rax],ebp
   1400098b2:	(bad)  
   1400098b3:	add    BYTE PTR [rdi],dl
   1400098b5:	xor    al,0x56
   1400098b7:	add    BYTE PTR [rdi],dl
   1400098b9:	add    DWORD PTR [rax+0x0],edx
   1400098bc:	or     BYTE PTR [rax+0x7],dh
   1400098bf:	(bad)  
   1400098c0:	(bad)  
   1400098c1:	push   rax
   1400098c2:	add    BYTE PTR [rax],al
   1400098c4:	pop    rax
   1400098c5:	jae    0x1400098c7
   1400098c7:	add    BYTE PTR [rax+0x2],dh
   1400098ca:	add    BYTE PTR [rax],al
   1400098cc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d98de
   1400098d2:	or     eax,DWORD PTR [rax]
   1400098d4:	sbb    eax,0x1d000a64
   1400098d9:	push   rsp
   1400098da:	or     DWORD PTR [rax],eax
   1400098dc:	sbb    eax,0x1d000834
   1400098e1:	xor    bl,BYTE PTR [rcx]
   1400098e3:	lock (bad) 
   1400098e5:	loopne 0x1400098fc
   1400098e7:	rcr    BYTE PTR [rcx],0x33
   1400098ea:	(bad)  
   1400098eb:	add    BYTE PTR [rdx],bl
   1400098ed:	add    DWORD PTR [rdi+0x4],ebx
   1400098f0:	add    eax,0x3600470
   1400098f5:	xor    BYTE PTR [rdx],al
   1400098f7:	push   rax
   1400098f8:	xchg   esp,eax
   1400098f9:	ja     0x1400098fb
   1400098fb:	add    BYTE PTR [rax-0x1dffff73],ah
   140009901:	and    al,BYTE PTR [rax]
   140009903:	add    bh,bh
   140009905:	(bad)  
   140009906:	(bad)  
   140009907:	call   QWORD PTR [rip+0x7a]        # 0x140009987
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    al,bh
   140009911:	cmp    eax,0xffff0000
   140009916:	(bad)  
   140009917:	dec    DWORD PTR [rdi+0x3e]
   14000991a:	add    BYTE PTR [rax],al
   14000991c:	add    BYTE PTR [rax],al
   14000991e:	add    BYTE PTR [rax],al
   140009920:	(bad)  
   140009921:	add    BYTE PTR [r8],r8b
   140009924:	(bad)  
   140009925:	(bad)  
   140009926:	(bad)  
   140009927:	call   FWORD PTR [rcx]
   140009929:	(bad)  
   14000992a:	or     eax,DWORD PTR [rax]
   14000992c:	sbb    eax,0x1d041534
   140009931:	add    DWORD PTR [rdx],ecx
   140009933:	add    al,0x10
   140009935:	lock (bad) 
   140009937:	loopne 0x140009945
   140009939:	ror    BYTE PTR [rdx],1
   14000993b:	ror    BYTE PTR [rax],0x70
   14000993e:	(bad)  
   14000993f:	(bad)  
   140009940:	(bad)  
   140009941:	push   rax
   140009942:	add    BYTE PTR [rax],al
   140009944:	pop    rax
   140009945:	jae    0x140009947
   140009947:	add    BYTE PTR [rax+0x20],al
   14000994a:	add    BYTE PTR [rax],al
   14000994c:	sbb    DWORD PTR [rip+0x341b0007],ebp        # 0x1741b9959
   140009952:	xchg   esi,eax
   140009953:	add    BYTE PTR [rsi],cl
   140009955:	add    DWORD PTR [rdx+0x5e00700],edx
   14000995b:	jo     0x140009961
   14000995d:	(bad)  
   14000995e:	add    BYTE PTR [rax],al
   140009960:	xchg   esp,eax
   140009961:	ja     0x140009963
   140009963:	add    BYTE PTR [rax-0x73],bh
   140009966:	add    BYTE PTR [rax],al
   140009968:	add    DWORD PTR [rax+rax*1],0x0
   14000996c:	(bad)  
   14000996d:	(bad)  
   14000996e:	(bad)  
   14000996f:	jmp    QWORD PTR [rdi]
   140009971:	jp     0x140009973
   140009973:	add    BYTE PTR [rax],al
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rbx],dh
   140009979:	jp     0x14000997b
   14000997b:	add    BYTE PTR [rcx],al
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    BYTE PTR [rax],al
   140009981:	add    BYTE PTR [rax],al
   140009983:	add    BYTE PTR [rcx],al
   140009985:	add    BYTE PTR [rax],al
   140009987:	add    BYTE PTR [rax],al
   140009989:	add    BYTE PTR [rax],al
   14000998b:	add    BYTE PTR [rdx],al
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    BYTE PTR [rdx],al
   140009991:	add    BYTE PTR [rax],al
   140009993:	add    BYTE PTR [rbx],al
   140009995:	add    BYTE PTR [rax],al
   140009997:	add    BYTE PTR [rcx],al
   140009999:	add    BYTE PTR [rax],al
   14000999b:	add    BYTE PTR [rax+0x40000099],ah
	...
   1400099a9:	add    BYTE PTR [rax],al
   1400099ab:	add    BYTE PTR [rdi],bh
   1400099ad:	jp     0x1400099af
   1400099af:	add    BYTE PTR [rax+0x0],cl
	...
   1400099be:	add    BYTE PTR [rax],al
   1400099c0:	push   rsp
   1400099c1:	rex.RXB add BYTE PTR [r8],r8b
   1400099c4:	(bad)  
   1400099c5:	(bad)  
   1400099c6:	(bad)  
   1400099c7:	call   QWORD PTR [rcx+0x47]
   1400099cd:	add    BYTE PTR [rax],al
   1400099cf:	add    BYTE PTR [rax+0x1000047],ah
   1400099d5:	add    BYTE PTR [rax],al
   1400099d7:	add    BYTE PTR [rip+0x48],bl        # 0x140009a25
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rax+rcx*2],dh
   1400099e2:	add    BYTE PTR [rax],al
   1400099e4:	(bad)  
   1400099e5:	(bad)  
   1400099e6:	(bad)  
   1400099e7:	(bad)  
   1400099e8:	rex.W add BYTE PTR ds:[rax],al
   1400099ec:	add    al,BYTE PTR [rax]
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	xchg   BYTE PTR [rax+0x0],cl
   1400099f3:	add    BYTE PTR [rcx],al
   1400099f5:	add    BYTE PTR [rax],al
   1400099f7:	add    cl,bh
   1400099f9:	rex.W add BYTE PTR [rax],al
   1400099fc:	add    BYTE PTR [rax],al
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	adc    BYTE PTR [rcx+0x0],cl
   140009a03:	add    bh,bh
   140009a05:	(bad)  
   140009a06:	(bad)  
   140009a07:	(bad)  
   140009a08:	(bad)  
   140009a09:	jp     0x140009a0b
   140009a0b:	add    BYTE PTR [rax],al
   140009a0d:	add    BYTE PTR [rax],al
   140009a0f:	add    BYTE PTR [rcx],bl
   140009a11:	or     al,BYTE PTR [rdx]
   140009a13:	add    BYTE PTR [rdx],cl
   140009a15:	push   rdx
   140009a16:	(bad)  
   140009a17:	push   rax
   140009a18:	mov    BYTE PTR [rdi+0x0],dh
   140009a1b:	add    BYTE PTR [rax-0x73],bh
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	add    DWORD PTR [rcx],ebx
   140009a22:	or     al,BYTE PTR [rax]
   140009a24:	sbb    esp,esp
   140009a26:	or     DWORD PTR [rax],eax
   140009a28:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140009a2c:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140009a30:	sbb    DWORD PTR [rsi+rax*1],esi
   140009a33:	add    BYTE PTR [rcx],bl
   140009a35:	xor    dl,BYTE PTR [rip+0xa1801f0]        # 0x14a189c2b
   140009a3b:	add    BYTE PTR [rax],bl
   140009a3d:	or     al,BYTE PTR fs:[rax]
   140009a40:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140009a44:	sbb    BYTE PTR [rax+rcx*1],dh
   140009a47:	add    BYTE PTR [rax],bl
   140009a49:	xor    dl,BYTE PTR [rax+rsi*8]
   140009a4c:	adc    ah,al
   140009a4e:	adc    BYTE PTR [rax+0x11],dh
   140009a51:	sbb    al,0x6
   140009a53:	add    BYTE PTR [rsp+riz*2],bl
   140009a56:	or     al,BYTE PTR [rax]
   140009a58:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009a5b:	add    BYTE PTR [rdx+rdx*2],cl
   140009a5e:	or     BYTE PTR [rax-0x78],dh
   140009a61:	ja     0x140009a63
   140009a63:	add    BYTE PTR [rax],cl
   140009a65:	pop    QWORD PTR [rax]
   140009a67:	add    bh,bh
   140009a69:	(bad)  
   140009a6a:	(bad)  
   140009a6b:	jmp    QWORD PTR [rax+0x7a]
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	lods   al,BYTE PTR ds:[rsi]
   140009a71:	push   rbp
   140009a72:	add    BYTE PTR [rax],al
   140009a74:	(bad)  
   140009a75:	(bad)  
   140009a76:	(bad)  
   140009a77:	(bad)  
   140009a78:	out    dx,eax
   140009a79:	push   rbp
   140009a7a:	add    BYTE PTR [rax],al
   140009a7c:	add    BYTE PTR [rax],al
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	mov    WORD PTR [rsi+0x0],ss
   140009a83:	add    bh,bh
   140009a85:	(bad)  
   140009a86:	(bad)  
   140009a87:	inc    DWORD PTR [rcx]
   140009a89:	sbb    BYTE PTR [rdx],cl
   140009a8b:	add    BYTE PTR [rax],bl
   140009a8d:	or     eax,DWORD PTR fs:[rax]
   140009a90:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140009a94:	sbb    BYTE PTR [rax+rcx*1],dh
   140009a97:	add    BYTE PTR [rax],bl
   140009a99:	xor    dl,BYTE PTR [rax+rsi*8]
   140009a9c:	adc    ah,al
   140009a9e:	adc    BYTE PTR [rax+0x1],dh
   140009aa1:	clts   
   140009aa3:	add    BYTE PTR [rdi],cl
   140009aa5:	push   rsp
   140009aa6:	(bad)  
   140009aa7:	add    BYTE PTR [rdi],cl
   140009aa9:	xor    al,0x6
   140009aab:	add    BYTE PTR [rdi],cl
   140009aad:	xor    cl,BYTE PTR [rbx]
   140009aaf:	jo     0x140009ab2
   140009ab1:	add    al,0x1
   140009ab3:	add    BYTE PTR [rdx+rax*4],al
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	add    DWORD PTR [rcx],ecx
   140009aba:	add    eax,0x5620900
   140009abf:	jo     0x140009ac5
   140009ac1:	(bad)  
   140009ac2:	add    edx,DWORD PTR [rax+0x2]
   140009ac5:	xor    BYTE PTR [rax],al
   140009ac7:	add    BYTE PTR [rcx],bl
   140009ac9:	xor    al,0xb
   140009acb:	add    BYTE PTR [rsi],ah
   140009acd:	xor    al,0x32
   140009acf:	add    BYTE PTR [rcx],bl
   140009ad1:	add    DWORD PTR [rax],ebp
   140009ad3:	add    BYTE PTR [rsi],cl
   140009ad5:	lock or al,0xe0
   140009ad8:	or     dl,al
   140009ada:	or     al,al
   140009adc:	(bad)  
   140009add:	jo     0x140009ae4
   140009adf:	(bad)  
   140009ae0:	add    al,0x50
   140009ae2:	add    BYTE PTR [rax],al
   140009ae4:	xchg   esp,eax
   140009ae5:	ja     0x140009ae7
   140009ae7:	add    BYTE PTR [rax-0x71],bl
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	xor    al,BYTE PTR [rcx]
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	(bad)  
   140009af1:	(bad)  
   140009af2:	(bad)  
   140009af3:	push   QWORD PTR [rdx+0x7a]
   140009af6:	add    BYTE PTR [rax],al
   140009af8:	pop    rsp
   140009af9:	(bad)  
   140009afa:	add    BYTE PTR [rax],al
   140009afc:	(bad)  
   140009afd:	(bad)  
   140009afe:	(bad)  
   140009aff:	call   FWORD PTR [rsi+0x60]
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    BYTE PTR [rax-0xffff9e],dl
   140009b0d:	(bad)  
   140009b0e:	(bad)  
   140009b0f:	jmp    FWORD PTR [rdx+0x62]
   140009b15:	add    BYTE PTR [rax],al
   140009b17:	add    cl,bl
   140009b19:	(bad)  
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	(bad)  
   140009b1d:	(bad)  
   140009b1e:	(bad)  
   140009b1f:	call   FWORD PTR [rcx]
   140009b21:	sbb    BYTE PTR [rax+rax*1],al
   140009b24:	sbb    BYTE PTR [rdx+rcx*1],dh
   140009b27:	add    BYTE PTR [rdx+rdx*2],cl
   140009b2a:	or     BYTE PTR [rax-0x78],dh
   140009b2d:	ja     0x140009b2f
   140009b2f:	add    BYTE PTR [rax],dh
   140009b31:	pop    QWORD PTR [rax]
	...
   140009b3b:	add    BYTE PTR [rcx],al
   140009b3d:	add    BYTE PTR [rax],al
   140009b3f:	add    BYTE PTR [rcx],al
   140009b41:	add    BYTE PTR [rax],al
   140009b43:	add    BYTE PTR [rax-0x65],cl
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	add    BYTE PTR [rax],al
	...
   140009b53:	add    BYTE PTR [rdx+rdi*2+0x380000],al
   140009b5a:	add    BYTE PTR [rax],al
   140009b5c:	add    BYTE PTR [rax],al
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	and    BYTE PTR [rbx+0x0],ah
   140009b63:	add    bh,bh
   140009b65:	(bad)  
   140009b66:	(bad)  
   140009b67:	(bad)  
   140009b68:	cmp    BYTE PTR [rbx+0x0],ah
   140009b6b:	add    BYTE PTR [rax],al
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    BYTE PTR [rcx+0x100007a],dl
   140009b75:	add    BYTE PTR [rax],al
   140009b77:	add    BYTE PTR [rcx],bl
   140009b79:	or     al,BYTE PTR [rdx]
   140009b7b:	add    BYTE PTR [rdx],cl
   140009b7d:	xor    al,BYTE PTR [rsi]
   140009b7f:	push   rax
   140009b80:	mov    BYTE PTR [rdi+0x0],dh
   140009b83:	add    BYTE PTR [rax],dh
   140009b85:	pop    QWORD PTR [rax]
   140009b87:	add    BYTE PTR [rcx],bl
   140009b89:	xor    al,0xb
   140009b8b:	add    BYTE PTR [rsi],ah
   140009b8d:	and    DWORD PTR fs:[rax],eax
   140009b90:	and    dh,BYTE PTR [rax+riz*1]
   140009b93:	add    BYTE PTR [rsi],dl
   140009b95:	add    DWORD PTR [rax],ebx
   140009b97:	add    BYTE PTR [rbx],cl
   140009b99:	lock or eax,esp
   140009b9c:	(bad)  
   140009b9d:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050a014
   140009ba4:	xchg   esp,eax
   140009ba5:	ja     0x140009ba7
   140009ba7:	add    BYTE PTR [rax-0x4dffff71],al
   140009bad:	add    BYTE PTR [rax],al
   140009baf:	add    bh,bh
   140009bb1:	(bad)  
   140009bb2:	(bad)  
   140009bb3:	jmp    FWORD PTR [rsi-0x63ffff86]
   140009bb9:	movsxd eax,DWORD PTR [rax]
   140009bbb:	add    bh,bh
   140009bbd:	(bad)  
   140009bbe:	(bad)  
   140009bbf:	(bad)  
   140009bc0:	mov    ecx,0x64
   140009bc5:	add    BYTE PTR [rax],al
   140009bc7:	add    bh,bh
   140009bc9:	add    BYTE PTR gs:[rax],al
   140009bcc:	(bad)  
   140009bcd:	(bad)  
   140009bce:	(bad)  
   140009bcf:	dec    DWORD PTR [rcx]
   140009bd1:	sbb    al,0xb
   140009bd3:	add    BYTE PTR [rsp+rsi*2],bl
   140009bd6:	sbb    al,0x0
   140009bd8:	sbb    al,0x64
   140009bda:	sbb    eax,DWORD PTR [rax]
   140009bdc:	sbb    al,0x34
   140009bde:	sbb    al,BYTE PTR [rax]
   140009be0:	sbb    al,0x1
   140009be2:	(bad)  
   140009be3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0afd9
   140009be9:	rol    BYTE PTR [rax],0x0
   140009bec:	(bad)  
   140009bed:	jb     0x140009bef
   140009bef:	add    BYTE PTR [rcx],al
   140009bf1:	add    BYTE PTR [rax],al
   140009bf3:	add    BYTE PTR [rax+0x76000068],al
   140009bf9:	push   0x0
   140009bfb:	add    al,al
   140009bfd:	jp     0x140009bff
   140009bff:	add    BYTE PTR [rsi+0x6a],dh
   140009c02:	add    BYTE PTR [rax],al
   140009c04:	add    BYTE PTR [rax],al
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	add    DWORD PTR [rax],eax
   140009c0a:	add    BYTE PTR [rax],al
   140009c0c:	adc    DWORD PTR [rdx],ecx
   140009c0e:	add    al,0x0
   140009c10:	or     dh,BYTE PTR [rsi+rax*1]
   140009c13:	add    BYTE PTR [rdx],cl
   140009c15:	xor    al,BYTE PTR [rsi]
   140009c17:	jo     0x140009c2f
   140009c19:	jb     0x140009c1b
   140009c1b:	add    BYTE PTR [rcx],al
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rbp+0x6b],bh
   140009c22:	add    BYTE PTR [rax],al
   140009c24:	ret    0x6b
   140009c27:	add    ah,ah
   140009c29:	jp     0x140009c2b
   140009c2b:	add    BYTE PTR [rax],al
   140009c2d:	add    BYTE PTR [rax],al
   140009c2f:	add    BYTE PTR [rcx],al
   140009c31:	add    al,0x1
   140009c33:	add    BYTE PTR [rdx+riz*8],al
   140009c36:	add    BYTE PTR [rax],al
   140009c38:	add    DWORD PTR [rdx+rax*1],ecx
   140009c3b:	add    BYTE PTR [rcx+rax*1],cl
   140009c3e:	adc    DWORD PTR [rax],eax
   140009c40:	or     DWORD PTR [rcx+rax*1],eax
   140009c43:	add    BYTE PTR [rdx+riz*1],al
   140009c46:	add    BYTE PTR [rax],al
   140009c48:	(bad)  
   140009c49:	jb     0x140009c4b
   140009c4b:	add    BYTE PTR [rcx],al
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rdi+rbp*2+0x6fe20000],ch
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	add    DWORD PTR [rax],eax
   140009c5a:	add    BYTE PTR [rax],al
   140009c5c:	loop   0x140009ccd
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	or     DWORD PTR [rdx],ecx
   140009c62:	add    al,0x0
   140009c64:	or     dh,BYTE PTR [rsi+rax*1]
   140009c67:	add    BYTE PTR [rdx],cl
   140009c69:	xor    al,BYTE PTR [rsi]
   140009c6b:	jo     0x140009c83
   140009c6d:	jb     0x140009c6f
   140009c6f:	add    BYTE PTR [rcx],al
   140009c71:	add    BYTE PTR [rax],al
   140009c73:	add    BYTE PTR [rbp-0x1fffff90],ch
   140009c79:	jo     0x140009c7b
   140009c7b:	add    BYTE PTR [rax],dl
   140009c7d:	jnp    0x140009c7f
   140009c7f:	add    al,ah
   140009c81:	jo     0x140009c83
   140009c83:	add    BYTE PTR [rcx],al
   140009c85:	or     eax,0x340d0004
   140009c8a:	or     DWORD PTR [rax],eax
   140009c8c:	or     eax,0x19500632
   140009c91:	sbb    eax,DWORD PTR [rbx]
   140009c93:	add    BYTE PTR [rcx],cl
   140009c95:	add    DWORD PTR [rax+0x300200],ebp
   140009c9b:	add    BYTE PTR [rax+0x73],bl
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	xor    BYTE PTR [rip+0x0],al        # 0x140009ca6
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	add    DWORD PTR [rax],eax
   140009caa:	add    BYTE PTR [rax],al
   140009cac:	add    DWORD PTR [rax],ebx
   140009cae:	add    DWORD PTR [rax],eax
   140009cb0:	sbb    dl,al
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	add    DWORD PTR [rax],ebx
   140009cb6:	add    DWORD PTR [rax],eax
   140009cb8:	sbb    dl,al
   140009cba:	add    BYTE PTR [rax],al
   140009cbc:	add    DWORD PTR [rax],ebx
   140009cbe:	add    DWORD PTR [rax],eax
   140009cc0:	sbb    dl,al
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	add    DWORD PTR [rax],ebx
   140009cc6:	add    DWORD PTR [rax],eax
   140009cc8:	sbb    dl,al
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	add    BYTE PTR [rax],al
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	add    DWORD PTR [rcx+rax*1],eax
   140009cd3:	add    BYTE PTR [rdx+rdx*1],al
	...
   140009ce6:	add    BYTE PTR [rax],al
   140009ce8:	add    DWORD PTR [rax],eax
   140009cea:	add    BYTE PTR [rax],al
   140009cec:	lock test BYTE PTR [rax],al
   140009cef:	add    BYTE PTR [rax],dh
   140009cf1:	mov    dh,0x0
   140009cf3:	add    BYTE PTR [rax],ch
   140009cf5:	rol    BYTE PTR [rax],1
   140009cf7:	add    BYTE PTR [rax-0x47ffff63],dh
   140009cfd:	sahf   
	...
   140009d06:	add    BYTE PTR [rax],al
   140009d08:	add    DWORD PTR [rax],eax
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	add    BYTE PTR [rbp-0x49c80000],al
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	add    al,dl
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	mov    BYTE PTR [rbp-0x61280000],bl
	...
   140009d26:	add    BYTE PTR [rax],al
   140009d28:	add    DWORD PTR [rax],eax
   140009d2a:	add    BYTE PTR [rax],al
   140009d2c:	adc    BYTE PTR [rbp-0x49c00000],al
   140009d32:	add    BYTE PTR [rax],al
   140009d34:	rex.W rol BYTE PTR [rax],1
   140009d37:	add    al,dl
   140009d39:	popf   
   140009d3a:	add    BYTE PTR [rax],al
   140009d3c:	lock sahf 
	...
   140009d46:	add    BYTE PTR [rax],al
   140009d48:	add    DWORD PTR [rax],eax
   140009d4a:	add    BYTE PTR [rax],al
   140009d4c:	and    BYTE PTR [rbp-0x49b80000],al
   140009d52:	add    BYTE PTR [rax],al
   140009d54:	sbb    al,dl
   140009d56:	add    BYTE PTR [rax],al
   140009d58:	movabs al,ds:0x9f2800009d
	...
   140009d85:	add    BYTE PTR [rax],al
   140009d87:	add    BYTE PTR [rip+0x1],dl        # 0x140009d8e
   140009d8d:	add    BYTE PTR [rax],al
   140009d8f:	add    BYTE PTR [rsi],0x0
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	add    BYTE PTR [rax],al
   140009d96:	add    BYTE PTR [rax+0x0],al
   140009d9c:	add    BYTE PTR [rax],al
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009da1:	sahf   
	...
   140009dae:	add    BYTE PTR [rax],al
   140009db0:	and    al,0x9e
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	add    BYTE PTR [rax],al
   140009db6:	add    BYTE PTR [rax],al
   140009db8:	adc    al,0x9e
   140009dba:	add    BYTE PTR [rax],al
   140009dbc:	add    BYTE PTR [rax],al
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	or     BYTE PTR [rsi+0x0],bl
	...
   140009dce:	add    BYTE PTR [rax],al
   140009dd0:	rex.W sahf 
   140009dd2:	add    BYTE PTR [rax],al
   140009dd4:	add    BYTE PTR [rax],al
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	pop    rsp
   140009dd9:	sahf   
   140009dda:	add    BYTE PTR [rax],al
   140009ddc:	add    BYTE PTR [rax],al
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	outs   dx,BYTE PTR ds:[rsi]
   140009de1:	sahf   
   140009de2:	add    BYTE PTR [rax],al
   140009de4:	add    BYTE PTR [rax],al
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	(bad)  
   140009de9:	sahf   
   140009dea:	add    BYTE PTR [rax],al
   140009dec:	add    BYTE PTR [rax],al
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	xchg   esp,eax
   140009df1:	sahf   
   140009df2:	add    BYTE PTR [rax],al
   140009df4:	add    BYTE PTR [rax],al
   140009df6:	add    BYTE PTR [rax],al
   140009df8:	cmp    BYTE PTR [rsi+0x0],bl
	...
   140009e0a:	rex.XB push 0x654e7261
   140009e10:	js     0x140009e86
   140009e12:	push   rdi
   140009e13:	add    BYTE PTR [rax],al
   140009e15:	add    BYTE PTR [rbp+riz*2+0x73],al
   140009e19:	je     0x140009e8d
   140009e1b:	outs   dx,DWORD PTR ds:[rsi]
   140009e1c:	jns    0x140009e75
   140009e1e:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140009e25:	add    BYTE PTR [rbp+0x6e],dl
   140009e28:	jb     0x140009e8f
   140009e2a:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140009e32:	(bad)  
   140009e33:	jae    0x140009ea8
   140009e35:	add    BYTE PTR [r8],al
   140009e38:	add    BYTE PTR [rax],al
   140009e3a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009e3c:	push   rsp
   140009e3d:	(bad)  
   140009e3e:	jae    0x140009eab
   140009e40:	rex.WRB
   140009e41:	gs ins DWORD PTR es:[rdi],dx
   140009e43:	rex.RX jb 0x140009eab
   140009e46:	add    BYTE PTR gs:[rax],al
   140009e49:	add    BYTE PTR [rbx+0x6f],al
   140009e4c:	push   rsp
   140009e4d:	(bad)  
   140009e4e:	jae    0x140009ebb
   140009e50:	rex.WRB
   140009e51:	gs ins DWORD PTR es:[rdi],dx
   140009e53:	push   rdx
   140009e54:	gs (bad) 
   140009e56:	ins    BYTE PTR es:[rdi],dx
   140009e57:	ins    BYTE PTR es:[rdi],dx
   140009e58:	outs   dx,DWORD PTR ds:[rsi]
   140009e59:	movsxd eax,DWORD PTR [rax]
   140009e5b:	add    BYTE PTR [rax],al
   140009e5d:	add    BYTE PTR [rbx+0x6f],al
   140009e60:	push   rsp
   140009e61:	(bad)  
   140009e62:	jae    0x140009ecf
   140009e64:	rex.WRB
   140009e65:	gs ins DWORD PTR es:[rdi],dx
   140009e67:	rex.B ins BYTE PTR es:[rdi],dx
   140009e69:	ins    BYTE PTR es:[rdi],dx
   140009e6a:	outs   dx,DWORD PTR ds:[rsi]
   140009e6b:	movsxd eax,DWORD PTR [rax]
   140009e6d:	add    BYTE PTR [rax],al
   140009e6f:	add    BYTE PTR [rbx+0x6f],al
   140009e72:	rex.XB jb 0x140009eda
   140009e75:	(bad)  
   140009e76:	je     0x140009edd
   140009e78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e7a:	jae    0x140009ef0
   140009e7c:	(bad)  
   140009e7d:	outs   dx,BYTE PTR ds:[rsi]
   140009e7e:	movsxd esp,DWORD PTR [rbp+0x0]
   140009e81:	add    BYTE PTR [rax],al
   140009e83:	add    BYTE PTR [rbx+0x6f],al
   140009e86:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009e88:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009e90:	rex.RB js 0x140009e93
   140009e93:	add    BYTE PTR [rax],al
   140009e95:	add    BYTE PTR [rbx+0x6f],al
   140009e98:	push   rbp
   140009e99:	outs   dx,BYTE PTR ds:[rsi]
   140009e9a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140009ea1:	imul   edi,DWORD PTR [rdx+0x65],0x0
   140009ea8:	rex.RXB
   140009ea9:	gs je  0x140009f01
   140009eac:	jae    0x140009f13
   140009eae:	jb     0x140009efe
   140009eb0:	(bad)  
   140009eb1:	ins    DWORD PTR es:[rdi],dx
   140009eb2:	gs rex.RB js 0x140009f0d
	...
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	mov    al,0xa1
	...
   140009f42:	add    BYTE PTR [rax],al
   140009f44:	shl    BYTE PTR [rbx-0x7df00000],cl
   140009f4a:	add    BYTE PTR [rax],al
   140009f4c:	movabs al,ds:0xa2
   140009f55:	add    BYTE PTR [rax],al
   140009f57:	add    BYTE PTR [rsi-0x5c],bl
   140009f5a:	add    BYTE PTR [rax],al
   140009f5c:	add    BYTE PTR [rbx-0x60600000],al
	...
   140009f6a:	add    BYTE PTR [rax],al
   140009f6c:	(bad)  
   140009f6d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f6e:	add    BYTE PTR [rax],al
   140009f70:	add    BYTE PTR [rax-0x5fb00000],al
	...
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	adc    BYTE PTR [rcx-0x7f500000],ch
	...
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	sub    al,0xa5
   140009fa2:	add    BYTE PTR [rax],al
   140009fa4:	add    BYTE PTR [rax],al
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	sbb    al,0xa5
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	add    BYTE PTR [rax],al
   140009fae:	add    BYTE PTR [rax],al
   140009fb0:	or     al,0xa5
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	add    BYTE PTR [rax],al
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	in     al,0xa5
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	add    BYTE PTR [rax],al
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	(bad)  
   140009fc1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	add    BYTE PTR [rax],al
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	(bad)  
   140009fc9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	add    BYTE PTR [rax],al
   140009fce:	add    BYTE PTR [rax],al
   140009fd0:	mov    dl,0xa5
   140009fd2:	add    BYTE PTR [rax],al
   140009fd4:	add    BYTE PTR [rax],al
   140009fd6:	add    BYTE PTR [rax],al
   140009fd8:	pushf  
   140009fd9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	add    BYTE PTR [rax],al
   140009fde:	add    BYTE PTR [rax],al
   140009fe0:	mov    WORD PTR [rbp+0x0],fs
   140009fe6:	add    BYTE PTR [rax],al
   140009fe8:	js     0x140009f8f
   140009fea:	add    BYTE PTR [rax],al
   140009fec:	add    BYTE PTR [rax],al
   140009fee:	add    BYTE PTR [rax],al
   140009ff0:	(bad)  
   140009ff1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    BYTE PTR [rax],al
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	push   rax
   140009ff9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009ffa:	add    BYTE PTR [rax],al
   140009ffc:	add    BYTE PTR [rax],al
   140009ffe:	add    BYTE PTR [rax],al
   14000a000:	push   0xa4
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rax-0x5c],bh
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	nop
   14000a011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	mov    esp,0xa4
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    dl,dl
   14000a029:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	(bad)  
   14000a031:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	clc    
   14000a039:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	ss test eax,0x0
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	add    al,0xa9
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	out    dx,al
   14000a061:	test   al,0x0
   14000a063:	add    BYTE PTR [rax],al
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    dh,bl
   14000a069:	test   al,0x0
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    ah,al
   14000a071:	test   al,0x0
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rsi+0xa8],ch
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	sub    BYTE PTR [rax+0x0],0x0
   14000a08f:	add    BYTE PTR [rax+rbp*4+0x0],ch
   14000a093:	add    BYTE PTR [rax],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    BYTE PTR [rsi-0x58],cl
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	xor    ch,BYTE PTR [rax+0x0]
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	and    BYTE PTR [rax+0x0],ch
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	sbb    BYTE PTR [rax+0x0],ch
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	or     ch,BYTE PTR [rax+0x0]
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	clc    
   14000a0c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	in     al,dx
   14000a0c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	loopne 0x14000a079
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	shl    BYTE PTR [rdi+0x0],cl
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	(bad)  
   14000a0e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    BYTE PTR [rax],al
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	mov    al,0xa7
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a0f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	(bad)  
   14000a0f9:	test   eax,0x0
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	xchg   esi,eax
   14000a101:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	xchg   BYTE PTR [rdi+0x0],ah
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	jo     0x14000a0b9
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	push   rdx
   14000a119:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	cmp    al,0xa7
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	sub    ah,BYTE PTR [rdi+0x0]
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	sbb    ah,BYTE PTR [rdi+0x0]
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	or     al,0xa6
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	(bad)  
   14000a141:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	cmp    al,0xa6
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	add    BYTE PTR [rax],al
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	pop    rax
   14000a159:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	jo     0x14000a108
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	mov    BYTE PTR [rsi+0x0],ah
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	movabs al,ds:0xae000000000000a6
   14000a179:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	shl    BYTE PTR [rsi+0x0],0x0
   14000a187:	add    dl,dl
   14000a189:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	add    BYTE PTR [rax],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	out    0xa6,al
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	or     BYTE PTR [rdi+0x0],ah
	...
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	int3   
   14000a1b1:	movabs ds:0xa2d8000000000000,al
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	loopne 0x14000a164
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	(bad)  
   14000a1c9:	movabs ds:0xa2f6000000000000,al
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	add    ah,BYTE PTR [rbx+0x0]
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	or     al,0xa3
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	add    BYTE PTR [rax],al
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	sbb    ah,BYTE PTR [rbx+0x0]
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	sub    BYTE PTR [rbx+0x0],ah
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	cmp    ah,BYTE PTR [rbx+0x0]
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	rex.WR movabs ds:0xa354000000000000,rax
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	add    BYTE PTR [rax],al
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	pop    rsp
   14000a211:	movabs ds:0xa366000000000000,eax
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	add    BYTE PTR [rax],al
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	jp     0x14000a1c5
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	xchg   BYTE PTR [rbx+0x0],ah
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	sahf   
   14000a231:	movabs ds:0xa3a8000000000000,eax
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	mov    dl,0xa3
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	mov    esi,0xa3
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    dh,bl
   14000a251:	movabs ds:0xa3e6000000000000,eax
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	add    BYTE PTR [rax],al
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	lock movabs ds:0xa3fe000000000000,eax
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	or     BYTE PTR [rax+rax*1+0x0],ah
   14000a277:	add    BYTE PTR [rdx],dl
   14000a279:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rax],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	fs test eax,0x0
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	rex.WRX test rax,0x0
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	shl    BYTE PTR [rdx+0x0],0x0
	...
   14000a29f:	add    BYTE PTR [rdx-0x5c],cl
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	xor    BYTE PTR [rax+rax*1+0x0],ah
   14000a2af:	add    BYTE PTR [rsp+riz*4],bl
	...
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	xchg   ebx,eax
   14000a2c1:	add    al,0x6d
   14000a2c3:	gs ins DWORD PTR es:[rdi],dx
   14000a2c5:	movsxd esi,DWORD PTR [rax+0x79]
   14000a2c8:	pop    rdi
   14000a2c9:	jae    0x14000a2cb
   14000a2cb:	add    BYTE PTR [rbp+0x6d656d04],dl
   14000a2d1:	ins    DWORD PTR es:[rdi],dx
   14000a2d2:	outs   dx,DWORD PTR ds:[rsi]
   14000a2d3:	jbe    0x14000a33a
   14000a2d5:	pop    rdi
   14000a2d6:	jae    0x14000a2d8
   14000a2d8:	rex.WR add al,0x66
   14000a2db:	jb     0x14000a342
   14000a2dd:	add    BYTE PTR gs:[rax],al
   14000a2e0:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000a2e7:	movsxd eax,DWORD PTR [rax]
   14000a2e9:	add    BYTE PTR [rip+0x73637705],cl        # 0x1b36419f4
   14000a2ef:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f0:	movsxd esi,DWORD PTR [rax+0x79]
   14000a2f3:	pop    rdi
   14000a2f4:	jae    0x14000a2f6
   14000a2f6:	mov    edi,0x61635f00
   14000a2fb:	ins    BYTE PTR es:[rdi],dx
   14000a2fc:	ins    BYTE PTR es:[rdi],dx
   14000a2fd:	outs   dx,BYTE PTR ds:[rsi]
   14000a2fe:	gs ja  0x14000a369
   14000a301:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000a307:	jae    0x14000a36e
   14000a309:	je     0x14000a30b
   14000a30b:	add    BYTE PTR [rbp+0x0],dl
   14000a30e:	pop    rdi
   14000a30f:	pop    rax
   14000a310:	movsxd esi,DWORD PTR [rax+0x74]
   14000a313:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000a31c:	pop    rdi
   14000a31d:	(bad)  
   14000a31e:	ins    DWORD PTR es:[rdi],dx
   14000a31f:	jae    0x14000a388
   14000a321:	pop    rdi
   14000a322:	gs js  0x14000a38e
   14000a325:	je     0x14000a327
   14000a327:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000a32d:	addr32 gs je 0x14000a39e
   14000a331:	(bad)  
   14000a332:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a339:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000a33f:	gs je  0x14000a3a1
   14000a342:	(bad)  
   14000a343:	jo     0x14000a3b5
   14000a345:	pop    rdi
   14000a346:	je     0x14000a3c1
   14000a348:	jo     0x14000a3af
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	xor    al,BYTE PTR [riz*2+0x746978]
   14000a353:	add    BYTE PTR [rsi],cl
   14000a355:	add    DWORD PTR [rdi+0x65],ebx
   14000a358:	js     0x14000a3c3
   14000a35a:	je     0x14000a35c
   14000a35c:	rol    DWORD PTR [rax],0x5f
   14000a35f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a362:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000a36a:	jae    0x14000a3d1
   14000a36c:	je     0x14000a3e3
   14000a36e:	jae    0x14000a3d5
   14000a370:	jb     0x14000a3df
   14000a372:	(bad)  
   14000a373:	je     0x14000a3dd
   14000a375:	gs jb  0x14000a3ea
   14000a378:	add    BYTE PTR [rax],al
   14000a37a:	jge    0x14000a37d
   14000a37c:	pop    rdi
   14000a37d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a384:	ins    DWORD PTR es:[rdi],dx
   14000a385:	add    BYTE PTR [rdi+0x0],dl
   14000a388:	pop    rdi
   14000a389:	pop    rdi
   14000a38a:	rex.XB pop r15
   14000a38c:	jae    0x14000a3fe
   14000a38e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a392:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a399:	ins    BYTE PTR es:[rdi],dx
   14000a39a:	gs jb  0x14000a39d
   14000a39d:	add    BYTE PTR [rdx+0x63775f03],al
   14000a3a3:	ins    DWORD PTR es:[rdi],dx
   14000a3a4:	fs ins BYTE PTR es:[rdi],dx
   14000a3a6:	outs   dx,BYTE PTR ds:[rsi]
   14000a3a7:	add    BYTE PTR [rdi],ah
   14000a3a9:	add    DWORD PTR [rdi+0x66],ebx
   14000a3ac:	ins    DWORD PTR es:[rdi],dx
   14000a3ad:	outs   dx,DWORD PTR ds:[rsi]
   14000a3ae:	fs add BYTE PTR gs:[rax],al
   14000a3b2:	rol    BYTE PTR [rax],cl
   14000a3b4:	pop    rdi
   14000a3b5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a3b8:	ins    DWORD PTR es:[rdi],dx
   14000a3b9:	outs   dx,DWORD PTR ds:[rsi]
   14000a3ba:	fs add BYTE PTR gs:[rax],al
   14000a3be:	(bad)  
   14000a3bf:	add    BYTE PTR [rdi],bh
   14000a3c1:	je     0x14000a428
   14000a3c3:	jb     0x14000a432
   14000a3c5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a3cc:	pop    rcx
   14000a3cd:	pop    r8
   14000a3cf:	pop    rax
   14000a3d0:	pop    rdx
   14000a3d1:	add    BYTE PTR [rbp+0x73],ch
   14000a3d4:	jbe    0x14000a439
   14000a3d6:	jb     0x14000a44c
   14000a3d8:	cs fs ins BYTE PTR es:[rdi],dx
   14000a3db:	ins    BYTE PTR es:[rdi],dx
   14000a3dc:	add    BYTE PTR [rax],al
   14000a3de:	out    0x1,al
   14000a3e0:	pop    rdi
   14000a3e1:	ins    BYTE PTR es:[rdi],dx
   14000a3e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a3e3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a3e6:	add    ebx,DWORD PTR [r15+0x75]
   14000a3ea:	outs   dx,BYTE PTR ds:[rsi]
   14000a3eb:	ins    BYTE PTR es:[rdi],dx
   14000a3ec:	outs   dx,DWORD PTR ds:[rsi]
   14000a3ed:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a3f0:	jnp    0x14000a3f2
   14000a3f2:	pop    rdi
   14000a3f3:	pop    rdi
   14000a3f4:	fs ins BYTE PTR es:[rdi],dx
   14000a3f6:	ins    BYTE PTR es:[rdi],dx
   14000a3f7:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f8:	outs   dx,BYTE PTR ds:[rsi]
   14000a3f9:	gs js  0x14000a465
   14000a3fc:	je     0x14000a3fe
   14000a3fe:	nop
   14000a3ff:	add    bl,BYTE PTR [rdi+0x6f]
   14000a402:	outs   dx,BYTE PTR ds:[rsi]
   14000a403:	gs js  0x14000a46f
   14000a406:	je     0x14000a408
   14000a408:	add    eax,0x72655f01
   14000a40d:	jb     0x14000a47d
   14000a40f:	outs   dx,DWORD PTR ds:[rsi]
   14000a410:	add    BYTE PTR [rax],al
   14000a412:	test   eax,0x61657204
   14000a417:	ins    BYTE PTR es:[rdi],dx
   14000a418:	ins    BYTE PTR es:[rdi],dx
   14000a419:	outs   dx,DWORD PTR ds:[rsi]
   14000a41a:	movsxd eax,DWORD PTR [rax]
   14000a41c:	mov    BYTE PTR [rdx],0x52
   14000a41f:	je     0x14000a48d
   14000a421:	rex.XB (bad) 
   14000a423:	jo     0x14000a499
   14000a425:	jne    0x14000a499
   14000a427:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000a42a:	outs   dx,BYTE PTR ds:[rsi]
   14000a42b:	je     0x14000a492
   14000a42d:	js     0x14000a4a3
   14000a42f:	add    BYTE PTR [rdi+0x4],dh
   14000a432:	push   rdx
   14000a433:	je     0x14000a4a1
   14000a435:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a437:	outs   dx,DWORD PTR ds:[rsi]
   14000a438:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000a43c:	jne    0x14000a4ac
   14000a43e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000a442:	outs   dx,BYTE PTR ds:[rsi]
   14000a443:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a445:	je     0x14000a4b9
   14000a447:	jns    0x14000a449
   14000a449:	add    BYTE PTR [rbx+0x6c745205],cl
   14000a44f:	push   rsi
   14000a450:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000a457:	outs   dx,BYTE PTR ds:[rsi]
   14000a458:	ja     0x14000a4c3
   14000a45a:	outs   dx,BYTE PTR ds:[rsi]
   14000a45b:	add    BYTE PTR fs:[rax],al
   14000a45e:	outs   dx,BYTE PTR ds:[rsi]
   14000a45f:	je     0x14000a4c5
   14000a461:	ins    BYTE PTR es:[rdi],dx
   14000a462:	ins    BYTE PTR es:[rdi],dx
   14000a463:	cs fs ins BYTE PTR es:[rdi],dx
   14000a466:	ins    BYTE PTR es:[rdi],dx
   14000a467:	add    BYTE PTR [rax],ah
   14000a469:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   14000a46d:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000a470:	gs jae 0x14000a4e6
   14000a473:	(bad)  
   14000a474:	add    BYTE PTR gs:[eax],al
   14000a478:	jb     0x14000a47b
   14000a47a:	rex.RXB
   14000a47b:	gs je  0x14000a4d2
   14000a47e:	jb     0x14000a4e1
   14000a480:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000a483:	outs   dx,DWORD PTR ds:[rsi]
   14000a484:	addr32 addr32 gs jb 0x14000a4d1
   14000a489:	(bad)  
   14000a48a:	outs   dx,BYTE PTR ds:[rsi]
   14000a48b:	fs ins BYTE PTR es:[rdi],dx
   14000a48d:	add    BYTE PTR gs:[rax],al
   14000a490:	jno    0x14000a493
   14000a492:	rex.RXB
   14000a493:	gs je  0x14000a4ea
   14000a496:	jb     0x14000a4f9
   14000a498:	movsxd esp,DWORD PTR [rbp+0x45]
   14000a49b:	outs   dx,BYTE PTR ds:[rsi]
   14000a49c:	(bad)  
   14000a49d:	(bad)  
   14000a49e:	ins    BYTE PTR es:[rdi],dx
   14000a49f:	gs rex.WR
   14000a4a1:	gs jbe 0x14000a509
   14000a4a4:	ins    BYTE PTR es:[rdi],dx
   14000a4a5:	add    BYTE PTR [rax+0x1],dh
   14000a4a8:	rex.RXB
   14000a4a9:	gs je  0x14000a500
   14000a4ac:	jb     0x14000a50f
   14000a4ae:	movsxd esp,DWORD PTR [rbp+0x45]
   14000a4b1:	outs   dx,BYTE PTR ds:[rsi]
   14000a4b2:	(bad)  
   14000a4b3:	(bad)  
   14000a4b4:	ins    BYTE PTR es:[rdi],dx
   14000a4b5:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000a4b8:	(bad)  
   14000a4b9:	addr32 jae 0x14000a4bc
   14000a4bc:	scas   eax,DWORD PTR es:[rdi]
   14000a4bd:	add    dl,BYTE PTR [rdx+0x65]
   14000a4c0:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000a4c8:	(bad)  
   14000a4c9:	movsxd esp,DWORD PTR [rbp+0x47]
   14000a4cc:	jne    0x14000a537
   14000a4ce:	fs jae 0x14000a528
   14000a4d1:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26ef9da
   14000a4d7:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000a4e0:	(bad)  
   14000a4e1:	movsxd esp,DWORD PTR [rbp+0x47]
   14000a4e4:	jne    0x14000a54f
   14000a4e6:	fs jae 0x14000a4e9
   14000a4e9:	add    BYTE PTR [rbp+0x2],dl
   14000a4ec:	push   rdx
   14000a4ed:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000a4f1:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f2:	jae    0x14000a559
   14000a4f4:	rex.WXB
   14000a4f5:	gs jns 0x14000a4f8
   14000a4f8:	lea    eax,[rdx]
   14000a4fa:	push   rdx
   14000a4fb:	gs addr32 push rcx
   14000a4fe:	jne    0x14000a565
   14000a500:	jb     0x14000a57b
   14000a502:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a504:	outs   dx,WORD PTR ds:[rsi]
   14000a506:	rex.WXB
   14000a507:	gs jns 0x14000a561
   14000a50a:	add    BYTE PTR [rax],al
   14000a50c:	je     0x14000a510
   14000a50e:	push   rdx
   14000a50f:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000a513:	jne    0x14000a582
   14000a515:	rex.WXB
   14000a516:	gs jns 0x14000a55e
   14000a519:	js     0x14000a572
   14000a51b:	add    BYTE PTR [rsi+0x67655202],al
   14000a521:	rex.WRXB jo 0x14000a589
   14000a524:	outs   dx,BYTE PTR ds:[rsi]
   14000a525:	rex.WXB
   14000a526:	gs jns 0x14000a56e
   14000a529:	js     0x14000a582
   14000a52b:	add    BYTE PTR [rbx+0x67655202],ah
   14000a531:	push   rbx
   14000a532:	gs je  0x14000a58b
   14000a535:	(bad)  
   14000a536:	ins    BYTE PTR es:[rdi],dx
   14000a537:	jne    0x14000a59e
   14000a539:	rex.RB js 0x14000a593
   14000a53c:	add    BYTE PTR [rax],al
   14000a53e:	pop    rsi
   14000a53f:	add    dl,BYTE PTR [rdx+0x65]
   14000a542:	addr32 rex.XB jb 0x14000a5ab
   14000a546:	(bad)  
   14000a547:	je     0x14000a5ae
   14000a549:	rex.WXB
   14000a54a:	gs jns 0x14000a592
   14000a54d:	js     0x14000a5a6
   14000a54f:	add    BYTE PTR [rbp+0x2],ch
   14000a552:	push   rdx
   14000a553:	gs addr32 rex.R
   14000a556:	gs ins BYTE PTR es:[rdi],dx
   14000a558:	gs je  0x14000a5c0
   14000a55b:	push   rsi
   14000a55c:	(bad)  
   14000a55d:	ins    BYTE PTR es:[rdi],dx
   14000a55e:	jne    0x14000a5c5
   14000a560:	push   rdi
   14000a561:	add    BYTE PTR [rax+0x2],cl
   14000a564:	push   rcx
   14000a565:	jne    0x14000a5cc
   14000a567:	jb     0x14000a5e2
   14000a569:	push   rbx
   14000a56a:	gs jb  0x14000a5e3
   14000a56d:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   14000a574:	imul   esp,DWORD PTR [rdi+0x57],0x52029300
   14000a57b:	gs addr32 push rcx
   14000a57e:	jne    0x14000a5e5
   14000a580:	jb     0x14000a5fb
   14000a582:	push   rsi
   14000a583:	(bad)  
   14000a584:	ins    BYTE PTR es:[rdi],dx
   14000a585:	jne    0x14000a5ec
   14000a587:	rex.RB js 0x14000a5e1
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	(bad)  
   14000a58d:	add    cl,BYTE PTR [rdi+0x70]
   14000a590:	outs   dx,BYTE PTR gs:[rsi]
   14000a592:	push   rbx
   14000a593:	gs jb  0x14000a60c
   14000a596:	imul   esp,DWORD PTR [rbx+0x65],0x65000057
   14000a59d:	add    BYTE PTR [rbx+0x6c],al
   14000a5a0:	outs   dx,DWORD PTR ds:[rsi]
   14000a5a1:	jae    0x14000a608
   14000a5a3:	push   rbx
   14000a5a4:	gs jb  0x14000a61d
   14000a5a7:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   14000a5ae:	ins    BYTE PTR es:[rdi],dx
   14000a5af:	add    BYTE PTR gs:[rax],al
   14000a5b2:	adc    eax,0x65704f02
   14000a5b7:	outs   dx,BYTE PTR ds:[rsi]
   14000a5b8:	push   rbx
   14000a5b9:	rex.XB
   14000a5ba:	rex.WRB (bad) 
   14000a5bc:	outs   dx,BYTE PTR ds:[rsi]
   14000a5bd:	(bad)  
   14000a5be:	addr32 gs jb 0x14000a619
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	test   DWORD PTR [rax],eax
   14000a5c6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a5c8:	jo     0x14000a643
   14000a5ca:	push   rbx
   14000a5cb:	imul   esp,DWORD PTR [rax+rax*1-0x5b],0x6f6f4c01
   14000a5d3:	imul   esi,DWORD PTR [rbp+0x70],0x41
   14000a5d7:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000a5da:	jne    0x14000a64a
   14000a5dc:	je     0x14000a62c
   14000a5de:	(bad)  
   14000a5df:	ins    DWORD PTR es:[rdi],dx
   14000a5e0:	gs push rdi
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	jnp    0x14000a5e6
   14000a5e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a5e8:	outs   dx,BYTE PTR ds:[rsi]
   14000a5e9:	jbe    0x14000a650
   14000a5eb:	jb     0x14000a661
   14000a5ed:	push   rbx
   14000a5ee:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000a5f6:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f7:	addr32 push rbx
   14000a5f9:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x56444100
   14000a601:	push   r8
   14000a603:	xor    rsi,QWORD PTR [r10]
   14000a606:	cs fs ins BYTE PTR es:[rdi],dx
   14000a609:	ins    BYTE PTR es:[rdi],dx
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	rex.W add al,0x52
   14000a60f:	(bad)  
   14000a610:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000a617:	jo     0x14000a68d
   14000a619:	imul   ebp,DWORD PTR [rdi+0x6e],0x2550000
   14000a620:	rex.RXB
   14000a621:	gs je  0x14000a670
   14000a624:	(bad)  
   14000a625:	jae    0x14000a69b
   14000a627:	rex.RB jb 0x14000a69c
   14000a62a:	outs   dx,DWORD PTR ds:[rsi]
   14000a62b:	jb     0x14000a62d
   14000a62d:	add    BYTE PTR [rbp+0x0],bh
   14000a630:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a632:	outs   dx,DWORD PTR ds:[rsi]
   14000a633:	jae    0x14000a69a
   14000a635:	rex.W (bad) 
   14000a637:	outs   dx,BYTE PTR ds:[rsi]
   14000a638:	fs ins BYTE PTR es:[rdi],dx
   14000a63a:	add    BYTE PTR gs:[rdx+0x3],dl
   14000a63e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a640:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a648:	rex.XB jb 0x14000a6b4
   14000a64b:	je     0x14000a6b6
   14000a64d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a650:	push   rbx
   14000a651:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a656:	outs   dx,BYTE PTR ds:[rsi]
   14000a657:	add    BYTE PTR [rbx],al
   14000a659:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000a65d:	gs je  0x14000a6c5
   14000a660:	rex.XB jb 0x14000a6cc
   14000a663:	je     0x14000a6ce
   14000a665:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a668:	push   rbx
   14000a669:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a66e:	outs   dx,BYTE PTR ds:[rsi]
   14000a66f:	add    BYTE PTR [rdi],ah
   14000a671:	add    DWORD PTR [rbp+0x6e],eax
   14000a674:	je     0x14000a6db
   14000a676:	jb     0x14000a6bb
   14000a678:	jb     0x14000a6e3
   14000a67a:	je     0x14000a6e5
   14000a67c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a67f:	push   rbx
   14000a680:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a685:	outs   dx,BYTE PTR ds:[rsi]
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a689:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   14000a68d:	jbe    0x14000a6f4
   14000a68f:	rex.XB jb 0x14000a6fb
   14000a692:	je     0x14000a6fd
   14000a694:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a697:	push   rbx
   14000a698:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a69d:	outs   dx,BYTE PTR ds:[rsi]
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	movabs ds:0x62694c6565724601,al
   14000a6a9:	jb     0x14000a70c
   14000a6ab:	jb     0x14000a726
   14000a6ad:	add    BYTE PTR [rbx+0x74654702],ah
   14000a6b3:	push   rax
   14000a6b4:	jb     0x14000a725
   14000a6b6:	movsxd eax,DWORD PTR [rcx+0x64]
   14000a6b9:	fs jb  0x14000a721
   14000a6bc:	jae    0x14000a731
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	lods   al,BYTE PTR ds:[rsi]
   14000a6c1:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000a6c5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000a6ce:	js     0x14000a727
   14000a6d0:	add    BYTE PTR [rax],al
   14000a6d2:	ins    BYTE PTR es:[rdi],dx
   14000a6d3:	add    al,BYTE PTR [rdi+0x65]
   14000a6d6:	je     0x14000a725
   14000a6d8:	outs   dx,DWORD PTR ds:[rsi]
   14000a6d9:	fs jne 0x14000a748
   14000a6dc:	gs rex.W (bad) 
   14000a6df:	outs   dx,BYTE PTR ds:[rsi]
   14000a6e0:	fs ins BYTE PTR es:[rdi],dx
   14000a6e2:	gs push rdi
   14000a6e4:	add    BYTE PTR [rax],al
   14000a6e6:	and    BYTE PTR [rsi],al
   14000a6e8:	ins    BYTE PTR es:[rdi],dx
   14000a6e9:	jae    0x14000a75f
   14000a6eb:	jb     0x14000a750
   14000a6ed:	ins    DWORD PTR es:[rdi],dx
   14000a6ee:	jo     0x14000a759
   14000a6f0:	push   rdi
   14000a6f1:	add    dh,dl
   14000a6f3:	add    ecx,DWORD PTR [rbp+0x75]
   14000a6f6:	ins    BYTE PTR es:[rdi],dx
   14000a6f7:	je     0x14000a762
   14000a6f9:	rex.X jns 0x14000a770
   14000a6fc:	gs push rsp
   14000a6fe:	outs   dx,DWORD PTR ds:[rsi]
   14000a6ff:	push   rdi
   14000a700:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000a708:	addr32 add eax,0x657a6953
   14000a70e:	outs   dx,DWORD PTR ds:[rsi]
   14000a70f:	push   dx
   14000a711:	gs jae 0x14000a783
   14000a714:	jne    0x14000a788
   14000a716:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a719:	add    BYTE PTR [rax+0x616f4c03],dh
   14000a71f:	fs push rdx
   14000a721:	gs jae 0x14000a793
   14000a724:	jne    0x14000a798
   14000a726:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a729:	add    BYTE PTR [rcx+rax*1+0x646e6946],cl
   14000a730:	push   rdx
   14000a731:	gs jae 0x14000a7a3
   14000a734:	jne    0x14000a7a8
   14000a736:	movsxd esp,DWORD PTR [rbp+0x45]
   14000a739:	js     0x14000a792
   14000a73b:	add    BYTE PTR [rax+0x2],ch
   14000a73e:	rex.RXB
   14000a73f:	gs je  0x14000a78f
   14000a742:	outs   dx,DWORD PTR ds:[rsi]
   14000a743:	fs jne 0x14000a7b2
   14000a746:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000a750:	add    BYTE PTR [rax],al
   14000a752:	mov    BYTE PTR [rdx+rdx*2],al
   14000a755:	imul   esi,DWORD PTR gs:[ebx+0x74],0x70417265
   14000a75e:	jo     0x14000a7cc
   14000a760:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000a767:	push   rdx
   14000a768:	gs jae 0x14000a7df
   14000a76b:	(bad)  
   14000a76c:	jb     0x14000a7e2
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	rex.X add ecx,DWORD PTR [rax+0x65]
   14000a774:	(bad)  
   14000a775:	jo     0x14000a7ca
   14000a777:	gs je  0x14000a7c3
   14000a77a:	outs   dx,BYTE PTR ds:[rsi]
   14000a77b:	outs   dx,WORD PTR ds:[rsi]
   14000a77d:	jb     0x14000a7ec
   14000a77f:	(bad)  
   14000a780:	je     0x14000a7eb
   14000a782:	outs   dx,DWORD PTR ds:[rsi]
   14000a783:	outs   dx,BYTE PTR ds:[rsi]
   14000a784:	add    BYTE PTR [rax],al
   14000a786:	ret    0x4c03
   14000a789:	outs   dx,DWORD PTR ds:[rsi]
   14000a78a:	movsxd ebp,DWORD PTR [rbx+0x52]
   14000a78d:	gs jae 0x14000a7ff
   14000a790:	jne    0x14000a804
   14000a792:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a795:	add    al,ch
   14000a797:	add    ecx,DWORD PTR [rdi+0x70]
   14000a79a:	outs   dx,BYTE PTR gs:[rsi]
   14000a79c:	rex.RB jbe 0x14000a804
   14000a79f:	outs   dx,BYTE PTR ds:[rsi]
   14000a7a0:	je     0x14000a7f9
   14000a7a2:	add    BYTE PTR [rax],al
   14000a7a4:	add    al,0x5
   14000a7a6:	push   rbx
   14000a7a7:	gs je  0x14000a7ef
   14000a7aa:	jbe    0x14000a811
   14000a7ac:	outs   dx,BYTE PTR ds:[rsi]
   14000a7ad:	je     0x14000a7af
   14000a7af:	add    BYTE PTR [rbx],dl
   14000a7b1:	add    al,BYTE PTR [rdi+0x65]
   14000a7b4:	je     0x14000a7f9
   14000a7b6:	jne    0x14000a82a
   14000a7b8:	jb     0x14000a81f
   14000a7ba:	outs   dx,BYTE PTR ds:[rsi]
   14000a7bb:	je     0x14000a811
   14000a7bd:	push   0x64616572
   14000a7c2:	rex.WB
   14000a7c3:	add    BYTE PTR fs:[rax],al
   14000a7c6:	rex.XB add ecx,DWORD PTR [r8+0x65]
   14000a7ca:	(bad)  
   14000a7cb:	jo     0x14000a820
   14000a7cd:	imul   edi,DWORD PTR [rdx+0x65],0x3410000
   14000a7d4:	rex.W
   14000a7d5:	gs (bad) 
   14000a7d7:	jo     0x14000a82b
   14000a7d9:	gs rex.B ins BYTE PTR es:[rdi],dx
   14000a7dc:	ins    BYTE PTR es:[rdi],dx
   14000a7dd:	outs   dx,DWORD PTR ds:[rsi]
   14000a7de:	movsxd eax,DWORD PTR [rax]
   14000a7e0:	add    ecx,DWORD PTR ds:[rax+0x65]
   14000a7e4:	(bad)  
   14000a7e5:	jo     0x14000a82d
   14000a7e7:	jb     0x14000a84e
   14000a7e9:	add    BYTE PTR gs:[rax],al
   14000a7ec:	cmp    al,BYTE PTR [rbx]
   14000a7ee:	rex.W
   14000a7ef:	gs (bad) 
   14000a7f1:	jo     0x14000a834
   14000a7f3:	ins    BYTE PTR es:[rdi],dx
   14000a7f4:	ins    BYTE PTR es:[rdi],dx
   14000a7f5:	outs   dx,DWORD PTR ds:[rsi]
   14000a7f6:	movsxd eax,DWORD PTR [rax]
   14000a7f8:	test   eax,0x74654702
   14000a7fd:	push   rax
   14000a7fe:	jb     0x14000a86f
   14000a800:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a803:	jae    0x14000a84d
   14000a805:	gs (bad) 
   14000a807:	jo     0x14000a809
   14000a809:	add    BYTE PTR [rip+0x61654803],bh        # 0x1a165f012
   14000a80f:	jo     0x14000a855
   14000a811:	gs jae 0x14000a888
   14000a814:	jb     0x14000a885
   14000a816:	jns    0x14000a818
   14000a818:	push   0x656c5305
   14000a81d:	gs jo  0x14000a820
   14000a820:	(bad)
   14000a823:	gs je  0x14000a879
   14000a826:	je     0x14000a889
   14000a828:	jb     0x14000a89e
   14000a82a:	jne    0x14000a89c
   14000a82c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a82e:	outs   dx,WORD PTR ds:[rsi]
   14000a830:	push   rdi
   14000a831:	add    BYTE PTR [rcx+0x686e5505],bl
   14000a837:	(bad)  
   14000a838:	outs   dx,BYTE PTR ds:[rsi]
   14000a839:	fs ins BYTE PTR es:[rdi],dx
   14000a83b:	gs fs rex.RB js 0x14000a8a3
   14000a840:	gs jo  0x14000a8b7
   14000a843:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a84a:	gs jb  0x14000a84d
   14000a84d:	add    BYTE PTR [rcx+0x5],bl
   14000a850:	push   rbx
   14000a851:	gs je  0x14000a8a9
   14000a854:	outs   dx,BYTE PTR ds:[rsi]
   14000a855:	push   0x6c646e61
   14000a85a:	gs fs rex.RB js 0x14000a8c2
   14000a85f:	gs jo  0x14000a8d6
   14000a862:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a869:	gs jb  0x14000a86c
   14000a86c:	(bad)  
   14000a86d:	add    al,BYTE PTR [rdi+0x65]
   14000a870:	je     0x14000a8b5
   14000a872:	jne    0x14000a8e6
   14000a874:	jb     0x14000a8db
   14000a876:	outs   dx,BYTE PTR ds:[rsi]
   14000a877:	je     0x14000a8c9
   14000a879:	jb     0x14000a8ea
   14000a87b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a87e:	jae    0x14000a880
   14000a880:	ja     0x14000a887
   14000a882:	push   rsp
   14000a883:	gs jb  0x14000a8f3
   14000a886:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000a88d:	outs   dx,DWORD PTR ds:[rsi]
   14000a88e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a891:	jae    0x14000a893
   14000a893:	add    BYTE PTR [rdx],dh
   14000a895:	add    al,0x51
   14000a897:	jne    0x14000a8fe
   14000a899:	jb     0x14000a914
   14000a89b:	push   rax
   14000a89c:	gs jb  0x14000a905
   14000a89f:	outs   dx,DWORD PTR ds:[rsi]
   14000a8a0:	jb     0x14000a90f
   14000a8a2:	(bad)  
   14000a8a3:	outs   dx,BYTE PTR ds:[rsi]
   14000a8a4:	movsxd esp,DWORD PTR [rbp+0x43]
   14000a8a7:	outs   dx,DWORD PTR ds:[rsi]
   14000a8a8:	jne    0x14000a918
   14000a8aa:	je     0x14000a911
   14000a8ac:	jb     0x14000a8ae
   14000a8ae:	lar    eax,WORD PTR [rdi+0x65]
   14000a8b2:	je     0x14000a8f7
   14000a8b4:	jne    0x14000a928
   14000a8b6:	jb     0x14000a91d
   14000a8b8:	outs   dx,BYTE PTR ds:[rsi]
   14000a8b9:	je     0x14000a90b
   14000a8bb:	jb     0x14000a92c
   14000a8bd:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a8c0:	jae    0x14000a90b
   14000a8c2:	fs add dh,bl
   14000a8c5:	add    al,BYTE PTR [rdi+0x65]
   14000a8c8:	je     0x14000a91d
   14000a8ca:	jns    0x14000a93f
   14000a8cc:	je     0x14000a933
   14000a8ce:	ins    DWORD PTR es:[rdi],dx
   14000a8cf:	push   rsp
   14000a8d0:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000a8d7:	ins    BYTE PTR es:[rdi],dx
   14000a8d8:	gs push rsp
   14000a8da:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fb00
   14000a8e1:	gs je  0x14000a938
   14000a8e4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000a8eb:	je     0x14000a8ed
   14000a8ed:	add    ch,bh
   14000a8ef:	add    ecx,DWORD PTR [rdi+0x75]
   14000a8f2:	je     0x14000a964
   14000a8f4:	jne    0x14000a96a
   14000a8f6:	rex.R
   14000a8f7:	gs (bad) 
   14000a8f9:	jne    0x14000a962
   14000a8fb:	push   rbx
   14000a8fc:	je     0x14000a970
   14000a8fe:	imul   ebp,DWORD PTR [rsi+0x67],0xb7000041
   14000a905:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000a909:	(bad)  
   14000a90a:	ins    BYTE PTR es:[rdi],dx
   14000a90b:	rex.RX jb 0x14000a973
   14000a90e:	add    BYTE PTR gs:[rbx+0x45],cl
   14000a912:	push   rdx
   14000a913:	rex.WRX
   14000a914:	rex.RB
   14000a915:	xor    r14,QWORD PTR [rdx]
   14000a918:	cs fs ins BYTE PTR es:[rdi],dx
   14000a91b:	ins    BYTE PTR es:[rdi],dx
   14000a91c:	add    BYTE PTR [rax],al
   14000a91e:	lods   eax,DWORD PTR ds:[rsi]
   14000a91f:	add    al,0x52
   14000a921:	gs jae 0x14000a993
   14000a924:	ins    BYTE PTR es:[rdi],dx
   14000a925:	jbe    0x14000a98c
   14000a927:	rex.R
   14000a928:	gs ins BYTE PTR es:[rdi],dx
   14000a92a:	(bad)  
   14000a92b:	jns    0x14000a979
   14000a92d:	outs   dx,DWORD PTR ds:[rsi]
   14000a92e:	(bad)  
   14000a92f:	fs gs fs push r8
   14000a934:	rex.WB add BYTE PTR [r8],al
   14000a937:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000a93b:	(bad)  
   14000a93c:	jns    0x14000a98a
   14000a93e:	outs   dx,DWORD PTR ds:[rsi]
   14000a93f:	(bad)  
   14000a940:	fs rex.RX (bad) 
   14000a943:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000a94b:	imul   eax,DWORD PTR [rax],0x0
   14000a94e:	rex.WXB add BYTE PTR [r15+0x43],bl
   14000a952:	js     0x14000a9cc
   14000a954:	push   rsp
   14000a955:	push   0x45776f72
   14000a95a:	js     0x14000a9bf
   14000a95c:	gs jo  0x14000a9d3
   14000a95f:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000a966:	pop    rdi
   14000a967:	pop    rdi
   14000a968:	rex.XB js 0x14000a9e3
   14000a96b:	rex.RX jb 0x14000a9cf
   14000a96e:	ins    DWORD PTR es:[rdi],dx
   14000a96f:	gs rex.W (bad) 
   14000a972:	outs   dx,BYTE PTR ds:[rsi]
   14000a973:	fs ins BYTE PTR es:[rdi],dx
   14000a975:	gs jb  0x14000a9ab
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	add    BYTE PTR [rax+rax*1+0x40],ch
   14000b004:	add    DWORD PTR [rax],eax
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	add    DWORD PTR [rax],eax
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    BYTE PTR [rax],al
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	int    0x5d
   14000b01a:	and    dl,dl
   14000b01c:	data16 (bad) 
   14000b01e:	(bad)  
   14000b01f:	jmp    QWORD PTR [rax]
   14000b021:	mov    al,0x0
   14000b023:	rex add DWORD PTR [rax],eax
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	add    BYTE PTR [rdi+0x14000],0x0
   14000b02f:	add    BYTE PTR [rax-0x49],cl
   14000b032:	add    BYTE PTR [rax+0x1],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],ch
   14000b039:	mov    al,0x0
   14000b03b:	rex add DWORD PTR [rax],eax
	...
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	add    al,BYTE PTR [rax]
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	add    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	lea    edx,[rax]
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	call   0xd000c0a0
   14000c00d:	adc    BYTE PTR [rax],al
   14000c00f:	add    dh,al
   14000c011:	adc    BYTE PTR [rax],al
   14000c013:	add    al,cl
   14000c015:	xchg   ebp,eax
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	loopne 0x14000c02a
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	jg     0x14000c02f
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	mov    WORD PTR [rbp+0x11800000],ss
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	in     al,dx
   14000c029:	adc    DWORD PTR [rax],eax
   14000c02b:	add    al,cl
   14000c02d:	xchg   ebp,eax
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	lock adc DWORD PTR [rax],eax
   14000c033:	add    BYTE PTR [rdx+0x12],ch
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	enter  0x95,0x0
   14000c03c:	js     0x14000c050
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	xchg   esi,eax
   14000c041:	adc    al,BYTE PTR [rax]
   14000c043:	add    al,al
   14000c045:	xchg   ebx,eax
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	pushf  
   14000c049:	adc    al,BYTE PTR [rax]
   14000c04b:	add    al,dl
   14000c04d:	adc    al,BYTE PTR [rax]
   14000c04f:	add    al,cl
   14000c051:	xchg   ebx,eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	fcom   DWORD PTR [rdx]
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	adc    edx,DWORD PTR [rbx]
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	enter  0x93,0x0
   14000c060:	sbb    al,0x13
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	repz adc eax,DWORD PTR [rax]
   14000c067:	add    al,dl
   14000c069:	xchg   ebx,eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	add    BYTE PTR [rax+rax*1],dl
   14000c06f:	add    BYTE PTR [rdi+0x14],bh
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	fcom   DWORD PTR [rbx+0x14900000]
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	leave  
   14000c07d:	adc    al,0x0
   14000c07f:	add    al,dh
   14000c081:	xchg   ebx,eax
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	rcl    BYTE PTR [rax+rax*1],1
   14000c087:	add    BYTE PTR [rdx+0x1d],dl
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	cld    
   14000c08d:	xchg   ebx,eax
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	pop    rax
   14000c091:	sbb    eax,0x1ea90000
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	sbb    al,0x94
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	mov    al,0x1e
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	or     al,0x20
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	(bad)  
   14000c0a5:	xchg   esp,eax
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	adc    al,0x20
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	retf   0x20
   14000c0af:	add    BYTE PTR [rsp+rdx*4+0x0],dh
   14000c0b3:	add    al,dl
   14000c0b5:	and    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rsi+0x21],bl
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	(bad)  
   14000c0bd:	xchg   esp,eax
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	and    DWORD PTR fs:[rax],eax
   14000c0c3:	add    BYTE PTR [rbx-0xfffffde],ah
   14000c0c9:	xchg   esp,eax
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	lods   al,BYTE PTR ds:[rsi]
   14000c0cd:	and    al,BYTE PTR [rax]
   14000c0cf:	add    ah,al
   14000c0d1:	and    eax,DWORD PTR [rax]
   14000c0d3:	add    BYTE PTR [rax],cl
   14000c0d5:	xchg   ebp,eax
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	int3   
   14000c0d9:	and    eax,DWORD PTR [rax]
   14000c0db:	add    BYTE PTR [rsi+0x24],bh
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	xchg   rbp,rax
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	loopne 0x14000c10a
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	pop    rsi
   14000c0e9:	and    eax,0x955c0000
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	jo     0x14000c117
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	scas   al,BYTE PTR es:[rdi]
   14000c0f5:	and    eax,0x93f00000
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	int3   
   14000c0fd:	and    eax,0x28710000
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	ins    BYTE PTR es:[rdi],dx
   14000c105:	xchg   ebp,eax
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	shr    BYTE PTR [rax],1
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	jmp    FWORD PTR [rax]
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	lock xchg ebx,eax
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	or     BYTE PTR [rcx],ch
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	sub    DWORD PTR [r8],eax
   14000c11b:	add    BYTE PTR [rbp+rdx*4+0x29480000],cl
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	xchg   esp,eax
   14000c125:	sub    DWORD PTR [rax],eax
   14000c127:	add    BYTE PTR [rbp+rdx*4+0x299c0000],dl
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	mov    ch,0x29
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	enter  0x95,0x0
   14000c138:	mov    esp,0x5c000029
   14000c13d:	sub    al,BYTE PTR [rax]
   14000c13f:	add    al,bl
   14000c141:	xchg   ebx,eax
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	jo     0x14000c170
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	stos   DWORD PTR es:[rdi],eax
   14000c149:	sub    al,BYTE PTR [rax]
   14000c14b:	add    al,dh
   14000c14d:	xchg   ebx,eax
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	mov    ah,0x2a
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	push   rbx
   14000c155:	sub    eax,DWORD PTR [rax]
   14000c157:	add    al,dl
   14000c159:	xchg   ebp,eax
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	pop    rsp
   14000c15d:	sub    eax,DWORD PTR [rax]
   14000c15f:	add    BYTE PTR [rbx+rbp*1+0x0],bh
   14000c163:	add    BYTE PTR [rax],dh
   14000c165:	xchg   esi,eax
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	test   BYTE PTR [rbx],ch
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	(bad)  
   14000c16d:	add    BYTE PTR cs:[rax],al
   14000c170:	push   rax
   14000c171:	xchg   esi,eax
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	and    BYTE PTR [rsi],ch
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	movabs eax,ds:0xb80000974000002e
   14000c181:	add    BYTE PTR cs:[rax],al
   14000c184:	iret   
   14000c185:	add    BYTE PTR cs:[rax],al
   14000c188:	enter  0x95,0x0
   14000c18c:	fsubr  DWORD PTR [rsi]
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	add    ebp,DWORD PTR [rdi]
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	mov    WORD PTR [rbp+0x2f0c0000],ss
   14000c19a:	add    BYTE PTR [rax],al
   14000c19c:	(bad)  
   14000c19d:	xor    BYTE PTR [rax],al
   14000c19f:	add    al,dh
   14000c1a1:	xchg   esp,eax
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	xor    BYTE PTR [rax],dh
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	fnstenv [rdx]
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	adc    BYTE PTR [rdi+0x32e00000],0x0
   14000c1b3:	add    BYTE PTR [rax+0x33],bl
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c1b9:	xchg   edi,eax
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	(bad)  
   14000c1bd:	xor    eax,DWORD PTR [rax]
   14000c1bf:	add    BYTE PTR [rax+0x34],bl
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	lods   al,BYTE PTR ds:[rsi]
   14000c1c5:	xchg   edi,eax
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	(bad)  
   14000c1c9:	xor    al,0x0
   14000c1cb:	add    BYTE PTR [rcx+0x39],ch
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	(bad)  
   14000c1d1:	xchg   edi,eax
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	jo     0x14000c20f
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	adc    edi,DWORD PTR [rdx]
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	cwde   
   14000c1dd:	cwde   
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	sbb    al,0x3a
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	push   rbx
   14000c1e5:	cmp    eax,DWORD PTR [rax]
   14000c1e7:	add    BYTE PTR [rax+0x5c000098],dh
   14000c1ed:	cmp    eax,DWORD PTR [rax]
   14000c1ef:	add    BYTE PTR [rbp+0x3b],bh
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	mov    WORD PTR [rbp+0x3b840000],ss
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	rex.WRX cmp al,0x0
   14000c1ff:	add    al,bl
   14000c201:	xchg   ebx,eax
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	push   0xfffffffff200003c
   14000c209:	cmp    eax,0x98cc0000
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	clc    
   14000c211:	cmp    eax,0x458b0000
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	call   0xd400c2b5
   14000c21d:	add    BYTE PTR [r8],r8b
   14000c220:	rex.WR
   14000c221:	rex.RXB add BYTE PTR [r8],r8b
   14000c224:	sub    BYTE PTR [rcx+0x47540000],bl
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	rex.WB add BYTE PTR ss:[r8],al
   14000c230:	rex.WR cqo 
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	cmp    al,0x49
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	stc    
   14000c239:	rex.WXB add BYTE PTR [r8],al
   14000c23c:	ins    BYTE PTR es:[rdi],dx
   14000c23d:	xchg   ebp,eax
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	or     al,0x4c
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	rex.WR add BYTE PTR ss:[rax],r8b
   14000c248:	mov    WORD PTR [rbp+0x4c3c0000],ss
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	push   rdi
   14000c251:	rex.WR add BYTE PTR [rax],r8b
   14000c254:	mov    WORD PTR [rbp+0x4c600000],ss
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	or     al,0x4d
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	and    BYTE PTR [rdx+0x4d140000],bl
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	(bad)  
   14000c269:	rex.WRB add BYTE PTR [r8],r8b
   14000c26c:	cmp    BYTE PTR [rdx+0x4df00000],bl
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	jae    0x14000c2c4
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	and    BYTE PTR [rdx+0x4e7c0000],bl
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	fimul  DWORD PTR [rsi+0x0]
   14000c283:	add    al,cl
   14000c285:	xchg   ebp,eax
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	loopne 0x14000c2d8
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	scas   eax,DWORD PTR es:[rdi]
   14000c28d:	rex.WRXB add BYTE PTR [r8],r8b
   14000c290:	cmp    BYTE PTR [rdx+0x4fb80000],bl
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	pop    rax
   14000c299:	push   rax
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	lock xchg esp,eax
   14000c29e:	add    BYTE PTR [rax],al
   14000c2a0:	(bad)  
   14000c2a1:	push   rax
   14000c2a2:	add    BYTE PTR [rax],al
   14000c2a4:	jle    0x14000c2f6
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	enter  0x95,0x0
   14000c2ac:	test   BYTE PTR [rax+0x0],dl
   14000c2af:	add    BYTE PTR [rbx-0x37ffffb0],dl
   14000c2b5:	xchg   ebp,eax
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	pushf  
   14000c2b9:	push   rax
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	cmp    eax,0xd8000051
   14000c2c1:	xchg   ebx,eax
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	rex.R push rcx
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	nop
   14000c2c9:	push   rcx
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	fcom   DWORD PTR [rbx+0x51b00000]
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	iret   
   14000c2d5:	push   rcx
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	enter  0x95,0x0
   14000c2dc:	loopne 0x14000c32f
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	jb     0x14000c334
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	lock xchg ebx,eax
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	adc    BYTE PTR [rdx+0x0],0x0
   14000c2ec:	movabs eax,ds:0xb0000095c8000052
   14000c2f5:	push   rdx
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	rex push rbx
   14000c2fa:	add    BYTE PTR [rax],al
   14000c2fc:	mov    WORD PTR [rbp+0x53700000],ss
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	xchg   esi,eax
   14000c305:	push   rbx
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	mov    WORD PTR [rbp+0x53c00000],ss
   14000c30e:	add    BYTE PTR [rax],al
   14000c310:	fst    QWORD PTR [rbx+0x0]
   14000c313:	add    al,cl
   14000c315:	xchg   ebp,eax
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	lock push rbx
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	xor    dl,BYTE PTR [rax+rax*1+0x0]
   14000c320:	enter  0x95,0x0
   14000c324:	(bad)  
   14000c325:	push   rsp
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	stos   BYTE PTR es:[rdi],al
   14000c329:	push   rsp
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	lock xchg ebx,eax
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	mov    al,0x54
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	sbb    dl,BYTE PTR [rbp+0x0]
   14000c337:	add    al,dh
   14000c339:	xchg   ebx,eax
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	and    BYTE PTR [rbp+0x0],dl
   14000c33f:	add    BYTE PTR [rbx+0x55],bl
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	enter  0x93,0x0
   14000c348:	fs push rbp
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c34d:	push   rbp
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	enter  0x93,0x0
   14000c354:	lods   al,BYTE PTR ds:[rsi]
   14000c355:	push   rbp
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	lahf   
   14000c359:	push   rsi
   14000c35a:	add    BYTE PTR [rax],al
   14000c35c:	push   rax
   14000c35d:	(bad)  
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	test   al,0x56
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	push   rsp
   14000c365:	push   rdi
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	fcom   DWORD PTR [rbx+0x575c0000]
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	add    bl,BYTE PTR [rcx+0x0]
   14000c373:	add    BYTE PTR [rax+0x800009a],cl
   14000c379:	pop    rcx
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	xor    bl,BYTE PTR [rdx+0x0]
   14000c37f:	add    BYTE PTR [rax+0x3800009a],ah
   14000c385:	pop    rdx
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	adc    eax,0xd800005b
   14000c38d:	xchg   ebx,eax
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	sbb    al,0x5b
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	pop    sp
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	fcom   DWORD PTR [rbx+0x5c6c0000]
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	add    BYTE PTR [rbp+0x0],bl
   14000c3a3:	add    BYTE PTR [rax+0x800009a],dh
   14000c3a9:	pop    rbp
   14000c3aa:	add    BYTE PTR [rax],al
   14000c3ac:	rex.WB pop r14
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	mov    eax,0x5000009a
   14000c3b5:	pop    rsi
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	adc    al,0x5f
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	lock xchg ebx,eax
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	and    BYTE PTR [rdi+0x0],bl
   14000c3c3:	add    BYTE PTR [rdi+0x5f],cl
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	lock xchg ebx,eax
   14000c3ca:	add    BYTE PTR [rax],al
   14000c3cc:	pop    rax
   14000c3cd:	pop    rdi
   14000c3ce:	add    BYTE PTR [rax],al
   14000c3d0:	push   rsp
   14000c3d1:	(bad)  
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	lock xchg esp,eax
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	pop    rsp
   14000c3d9:	(bad)  
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	sbb    BYTE PTR [rbx+0x0],ah
   14000c3df:	add    al,cl
   14000c3e1:	(bad)  
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	and    BYTE PTR [rbx+0x0],ah
   14000c3e7:	add    BYTE PTR [rsi+0x20000063],dl
   14000c3ed:	fwait
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	pushf  
   14000c3f1:	movsxd eax,DWORD PTR [rax]
   14000c3f3:	add    BYTE PTR [rdi],bh
   14000c3f5:	data16 add BYTE PTR [rax],al
   14000c3f8:	mov    BYTE PTR [rbx+0x66480000],bl
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	jae    0x14000c468
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	mov    WORD PTR [rbp+0x66800000],ss
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	mov    cl,0x66
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	rcl    BYTE PTR [rbx+0x66d00000],0x0
   14000c417:	add    BYTE PTR [rcx],cl
   14000c419:	add    BYTE PTR [eax],al
   14000c41c:	lock xchg ebx,eax
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	and    BYTE PTR [rdi+0x0],ah
   14000c423:	add    bh,ch
   14000c425:	add    BYTE PTR [eax],al
   14000c428:	enter  0x95,0x0
   14000c42c:	add    BYTE PTR [rax+0x0],ch
   14000c42f:	add    BYTE PTR [rcx+0x68],cl
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	rcl    BYTE PTR [rbx+0x68500000],0x0
   14000c43b:	add    cl,al
   14000c43d:	push   0x0
   14000c43f:	add    al,dl
   14000c441:	fwait
   14000c442:	add    BYTE PTR [rax],al
   14000c444:	shr    BYTE PTR [rdx+0x0],1
   14000c447:	add    dl,ah
   14000c449:	push   0x0
   14000c44b:	add    al,cl
   14000c44d:	xchg   ebp,eax
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	add    BYTE PTR [rbx+0x0],ch
   14000c453:	add    BYTE PTR [rsi],bl
   14000c455:	imul   eax,DWORD PTR [rax],0x0
   14000c458:	or     BYTE PTR [rax+rax*1+0x6b3c00],bl
   14000c45f:	add    dl,bl
   14000c461:	imul   eax,DWORD PTR [rax],0x0
   14000c464:	or     al,0x9c
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	loopne 0x14000c4d5
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	imul   DWORD PTR [rbx+0x0]
   14000c46f:	add    al,cl
   14000c471:	xchg   ebp,eax
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c478:	push   rcx
   14000c479:	ins    BYTE PTR es:[rdi],dx
   14000c47a:	add    BYTE PTR [rax],al
   14000c47c:	rcl    BYTE PTR [rbx+0x6c580000],0x0
   14000c483:	add    BYTE PTR [rsp+rbp*2-0x6a740000],cl
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	movabs al,ds:0x3800006e1100006c
   14000c495:	pushf  
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	sbb    BYTE PTR [rsi+0x0],ch
   14000c49b:	add    BYTE PTR [rdi],cl
   14000c49d:	outs   dx,DWORD PTR ds:[rsi]
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	xor    BYTE PTR [rax+rax*1+0x6f3000],bl
   14000c4a7:	add    BYTE PTR [rcx+0x6f],ch
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	enter  0x95,0x0
   14000c4b0:	jo     0x14000c521
   14000c4b2:	add    BYTE PTR [rax],al
   14000c4b4:	mov    BYTE PTR [rdi+0x0],ch
   14000c4b7:	add    al,cl
   14000c4b9:	xchg   ebp,eax
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	pushf  
   14000c4bd:	outs   dx,DWORD PTR ds:[rsi]
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	lock outs dx,DWORD PTR ds:[rsi]
   14000c4c2:	add    BYTE PTR [rax],al
   14000c4c4:	rex pushf 
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	clc    
   14000c4c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	cmp    eax,0x8c000070
   14000c4d1:	xchg   ebp,eax
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	movabs al,ds:0x60000070ed000070
   14000c4dd:	pushf  
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	xor    al,0x71
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	add    al,0x72
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	test   BYTE PTR [rax+rax*1+0x727800],bl
   14000c4ef:	add    BYTE PTR [rbx],bh
   14000c4f1:	jae    0x14000c4f3
   14000c4f3:	add    BYTE PTR [rax+0x5800009c],dl
   14000c4f9:	jae    0x14000c4fb
   14000c4fb:	add    BYTE PTR [rbp+0x73],dh
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	enter  0x95,0x0
   14000c504:	jl     0x14000c579
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	fbstp  TBYTE PTR [rbx+0x0]
   14000c50b:	add    BYTE PTR [rbp+rdx*4+0x74100000],cl
   14000c512:	add    BYTE PTR [rax],al
   14000c514:	xchg   DWORD PTR [rax+rax*1+0x0],esi
   14000c518:	lods   al,BYTE PTR ds:[rsi]
   14000c519:	pushf  
   14000c51a:	add    BYTE PTR [rax],al
   14000c51c:	lock je 0x14000c51f
   14000c51f:	add    BYTE PTR [rdi+0x75],ah
   14000c522:	add    BYTE PTR [rax],al
   14000c524:	mov    ah,0x9c
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	mov    al,0x75
   14000c52a:	add    BYTE PTR [rax],al
   14000c52c:	(bad)  
   14000c52d:	jbe    0x14000c52f
   14000c52f:	add    BYTE PTR [rsp+rbx*4+0x76f00000],bh
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	addr32 ja 0x14000c53b
   14000c53b:	add    ah,al
   14000c53d:	pushf  
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	xchg   esp,eax
   14000c541:	ja     0x14000c543
   14000c543:	add    BYTE PTR [rbx],ah
   14000c545:	js     0x14000c547
   14000c547:	add    al,dh
   14000c549:	xchg   esp,eax
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	rex js 0x14000c54f
   14000c54f:	add    BYTE PTR [rdx+0x78],al
   14000c552:	add    BYTE PTR [rax],al
   14000c554:	test   al,0x9c
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	(bad)  
   14000c559:	js     0x14000c55b
   14000c55b:	add    BYTE PTR [rbp-0x2fffff88],ch
   14000c561:	pushf  
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	mov    dh,0x78
   14000c566:	add    BYTE PTR [rax],al
   14000c568:	fdivr  QWORD PTR [rax+0x0]
   14000c56b:	add    BYTE PTR [rax-0x6c],bl
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	loop   0x14000c5ea
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	std    
   14000c575:	js     0x14000c577
   14000c577:	add    al,ah
   14000c579:	xchg   esp,eax
   14000c57a:	add    BYTE PTR [rax],al
   14000c57c:	pop    rcx
   14000c57d:	jns    0x14000c57f
   14000c57f:	add    BYTE PTR [rcx+0x79],bh
   14000c582:	add    BYTE PTR [rax],al
   14000c584:	pop    rax
   14000c585:	xchg   esp,eax
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	jg     0x14000c603
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	(bad)  
   14000c58d:	jns    0x14000c58f
   14000c58f:	add    BYTE PTR [rax],dh
   14000c591:	xchg   edi,eax
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c595:	jns    0x14000c597
   14000c597:	add    cl,al
   14000c599:	jns    0x14000c59b
   14000c59b:	add    BYTE PTR [rax],dh
   14000c59d:	xchg   edi,eax
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	fnstcw WORD PTR [rcx+0x0]
   14000c5a3:	add    ah,dh
   14000c5a5:	jns    0x14000c5a7
   14000c5a7:	add    BYTE PTR [rax-0xbffff68],cl
   14000c5ad:	jns    0x14000c5af
   14000c5af:	add    BYTE PTR [rdi],cl
   14000c5b1:	jp     0x14000c5b3
   14000c5b3:	add    BYTE PTR [rax+0x3f000098],cl
   14000c5b9:	jp     0x14000c5bb
   14000c5bb:	add    BYTE PTR [rdx+0x7a],bl
   14000c5be:	add    BYTE PTR [rax],al
   14000c5c0:	adc    BYTE PTR [rdx+0x7a840000],bl
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	test   al,0x7a
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	js     0x14000c569
   14000c5ce:	add    BYTE PTR [rax],al
   14000c5d0:	sar    BYTE PTR [rdx+0x0],0x0
   14000c5d4:	fidivr WORD PTR [rdx+0x0]
   14000c5d7:	add    BYTE PTR [rax-0x6c],bl
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	in     al,0x7a
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	(bad)  
   14000c5e1:	jp     0x14000c5e3
   14000c5e3:	add    BYTE PTR [rax-0x6c],bl
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	adc    BYTE PTR [rbx+0x0],bh
   14000c5eb:	add    BYTE PTR [rax],dh
   14000c5ed:	jnp    0x14000c5ef
   14000c5ef:	add    BYTE PTR [rax-0x6c],bl
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	(bad)  
   14000c5f5:	jnp    0x14000c5f7
   14000c5f7:	add    BYTE PTR [rdx-0x37ffff85],dl
   14000c5fd:	xchg   ebp,eax
   14000c5fe:	add    BYTE PTR [rax],al
   14000c600:	sar    BYTE PTR [rbx+0x0],0x0
   14000c604:	(bad)  
   14000c605:	jnp    0x14000c607
   14000c607:	add    al,cl
   14000c609:	xchg   ebp,eax
   14000c60a:	add    BYTE PTR [rax],al
   14000c60c:	adc    BYTE PTR [rax+rax*1+0x0],bh
   14000c610:	icebp  
   14000c611:	jl     0x14000c613
   14000c613:	add    al,bl
   14000c615:	xchg   ebx,eax
   14000c616:	add    BYTE PTR [rax],al
   14000c618:	add    BYTE PTR [rbp+0x0],bh
   14000c61b:	add    BYTE PTR [rbx+0x4800007d],dl
   14000c621:	xchg   ebp,eax
	...

Disassembly of section .didat:

000000014000d000 <.didat>:
   14000d000:	jo     0x14000d077
   14000d002:	add    BYTE PTR [rax+0x1],al
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    al,dl
   14000d009:	je     0x14000d00b
   14000d00b:	rex add DWORD PTR [rax],eax
	...
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	shl    BYTE PTR [rsi+0x0],1
   14000d01b:	rex add DWORD PTR [rax],eax
	...
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	mov    al,0x74
   14000d02a:	add    BYTE PTR [rax+0x1],al
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    BYTE PTR [rax+0x1400074],dl
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    al,dh
   14000d039:	jae    0x14000d03b
   14000d03b:	rex add DWORD PTR [rax],eax
	...
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	xor    BYTE PTR [rsi+0x0],dh
   14000d04b:	rex add DWORD PTR [rax],eax
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	push   rax
   14000d051:	jbe    0x14000d053
   14000d053:	rex add DWORD PTR [rax],eax
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	jo     0x14000d0d0
   14000d05a:	add    BYTE PTR [rax+0x1],al
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rax+0x1400076],dl
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rax+0x1400076],dh
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rax+0x1400075],dl
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    DWORD PTR [rax],eax
   14000e00e:	add    al,0x0
   14000e010:	clc    
   14000e011:	add    al,BYTE PTR [rax]
   14000e013:	cmp    BYTE PTR [rax],0x0
   14000e016:	add    BYTE PTR [rax+0x3],al
   14000e01c:	push   rax
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	or     BYTE PTR [rsi],0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	test   al,0x0
   14000e026:	add    BYTE PTR [rax+0x10],al
   14000e02c:	rol    BYTE PTR [rax],0x0
   14000e02f:	sbb    BYTE PTR [rax],0x0
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	fadd   DWORD PTR [rax]
   14000e036:	add    BYTE PTR [rax+0x0],al
	...
   14000e044:	add    BYTE PTR [rax],al
   14000e046:	add    DWORD PTR [rax],eax
   14000e048:	add    DWORD PTR [rax],eax
   14000e04a:	add    BYTE PTR [rax],al
   14000e04c:	lock add BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rax],0x0
	...
   14000e05e:	or     DWORD PTR [rax],eax
   14000e060:	add    DWORD PTR [rax],eax
   14000e062:	add    BYTE PTR [rax],al
   14000e064:	or     BYTE PTR [rcx],al
   14000e066:	add    BYTE PTR [rax+0x2],al
   14000e06c:	and    BYTE PTR [rcx],al
   14000e06e:	add    BYTE PTR [rax+0x3],al
   14000e074:	cmp    BYTE PTR [rcx],al
   14000e076:	add    BYTE PTR [rax+0x4],al
   14000e07c:	push   rax
   14000e07d:	add    DWORD PTR [rax],eax
   14000e07f:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a800e086
   14000e086:	add    BYTE PTR [rax+0x6],al
   14000e08c:	add    BYTE PTR [rcx],0x0
   14000e08f:	add    BYTE PTR [rdi],0x0
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	cwde   
   14000e095:	add    DWORD PTR [rax],eax
   14000e097:	or     BYTE PTR [rax],0x0
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	mov    al,0x1
   14000e09e:	add    BYTE PTR [rax+0x9],al
   14000e0a4:	enter  0x1,0x80
	...
   14000e0b4:	add    BYTE PTR [rax],al
   14000e0b6:	add    DWORD PTR [rax],eax
   14000e0b8:	add    BYTE PTR fs:[rax],al
   14000e0bb:	add    al,ah
   14000e0bd:	add    DWORD PTR [rax],eax
   14000e0bf:	add    BYTE PTR [rax],0x0
	...
   14000e0ce:	add    DWORD PTR [rax],eax
   14000e0d0:	add    DWORD PTR [rax],eax
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	clc    
   14000e0d5:	add    DWORD PTR [rax],eax
   14000e0d7:	add    BYTE PTR [rax],0x0
	...
   14000e0e6:	add    DWORD PTR [rax],eax
   14000e0e8:	add    DWORD PTR [rax],eax
   14000e0ea:	add    BYTE PTR [rax],al
   14000e0ec:	adc    BYTE PTR [rdx],al
   14000e0ee:	add    BYTE PTR [rax+0x0],al
	...
   14000e0fc:	add    BYTE PTR [rax],al
   14000e0fe:	add    DWORD PTR [rax],eax
   14000e100:	or     DWORD PTR [rax+rax*1],eax
   14000e103:	add    BYTE PTR [rax],ch
   14000e105:	add    al,BYTE PTR [rax]
	...
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	add    BYTE PTR [rcx],al
   14000e117:	add    BYTE PTR [rcx],cl
   14000e119:	add    al,0x0
   14000e11b:	add    BYTE PTR [rax],bh
   14000e11d:	add    al,BYTE PTR [rax]
	...
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	add    BYTE PTR [rcx],al
   14000e12f:	add    BYTE PTR [rcx],cl
   14000e131:	add    al,0x0
   14000e133:	add    BYTE PTR [rax+0x2],cl
	...
   14000e146:	add    DWORD PTR [rax],eax
   14000e148:	or     DWORD PTR [rax+rax*1],eax
   14000e14b:	add    BYTE PTR [rax+0x2],bl
	...
   14000e15e:	add    DWORD PTR [rax],eax
   14000e160:	or     DWORD PTR [rax+rax*1],eax
   14000e163:	add    BYTE PTR [rax+0x2],ch
	...
   14000e176:	add    DWORD PTR [rax],eax
   14000e178:	or     DWORD PTR [rax+rax*1],eax
   14000e17b:	add    BYTE PTR [rax+0x2],bh
	...
   14000e18e:	add    DWORD PTR [rax],eax
   14000e190:	or     DWORD PTR [rax+rax*1],eax
   14000e193:	add    BYTE PTR [rax+0x2],cl
	...
   14000e1a5:	add    BYTE PTR [rcx],al
   14000e1a7:	add    BYTE PTR [rcx],cl
   14000e1a9:	add    al,0x0
   14000e1ab:	add    BYTE PTR [rax+0x2],bl
	...
   14000e1bd:	add    BYTE PTR [rcx],al
   14000e1bf:	add    BYTE PTR [rcx],cl
   14000e1c1:	add    al,0x0
   14000e1c3:	add    BYTE PTR [rax+0x2],ch
	...
   14000e1d5:	add    BYTE PTR [rcx],al
   14000e1d7:	add    BYTE PTR [rcx],cl
   14000e1d9:	add    al,0x0
   14000e1db:	add    BYTE PTR [rax+0x2],bh
	...
   14000e1ed:	add    BYTE PTR [rcx],al
   14000e1ef:	add    BYTE PTR [rcx],cl
   14000e1f1:	add    al,0x0
   14000e1f3:	add    al,cl
   14000e1f5:	add    al,BYTE PTR [rax]
	...
   14000e203:	add    BYTE PTR [rax],al
   14000e205:	add    BYTE PTR [rcx],al
   14000e207:	add    BYTE PTR [rcx],cl
   14000e209:	add    al,0x0
   14000e20b:	add    al,bl
   14000e20d:	add    al,BYTE PTR [rax]
	...
   14000e21b:	add    BYTE PTR [rax],al
   14000e21d:	add    BYTE PTR [rcx],al
   14000e21f:	add    BYTE PTR [rcx],cl
   14000e221:	add    al,0x0
   14000e223:	add    al,ch
   14000e225:	add    al,BYTE PTR [rax]
   14000e227:	add    BYTE PTR [rax],al
   14000e229:	add    QWORD PTR [r8],r8
   14000e22c:	rol    BYTE PTR [rax],1
	...
   14000e236:	add    BYTE PTR [rax],al
   14000e238:	nop
   14000e239:	(bad)  
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	push   0x6
   14000e241:	add    BYTE PTR [rax],al
   14000e243:	add    BYTE PTR [rax],al
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    al,bh
   14000e249:	lock add BYTE PTR [rax],al
   14000e24c:	call   0x14000e253
   14000e251:	add    BYTE PTR [rax],al
   14000e253:	add    BYTE PTR [rax],al
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    al,ah
   14000e259:	repz add BYTE PTR [rax],al
   14000e25c:	sub    BYTE PTR [rcx],al
	...
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	or     ch,dh
   14000e26a:	add    BYTE PTR [rax],al
   14000e26c:	test   al,0xe
	...
   14000e276:	add    BYTE PTR [rax],al
   14000e278:	mov    al,0x3
   14000e27a:	add    DWORD PTR [rax],eax
   14000e27c:	test   al,0x8
	...
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	pop    rax
   14000e289:	or     al,0x1
   14000e28b:	add    BYTE PTR [rax+0x5],ch
	...
   14000e296:	add    BYTE PTR [rax],al
   14000e298:	rcl    BYTE PTR [rcx],0x1
   14000e29b:	add    BYTE PTR [rax+0x25],ch
   14000e2a1:	add    BYTE PTR [rax],al
   14000e2a3:	add    BYTE PTR [rax],al
   14000e2a5:	add    BYTE PTR [rax],al
   14000e2a7:	add    BYTE PTR [rax+0x37],ch
   14000e2aa:	add    DWORD PTR [rax],eax
   14000e2ac:	test   al,0x10
	...
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	adc    BYTE PTR [rax+0x1],cl
   14000e2bb:	add    BYTE PTR [rax+0x4],ch
	...
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	js     0x14000e316
   14000e2ca:	add    DWORD PTR [rax],eax
   14000e2cc:	test   BYTE PTR [rax],al
	...
   14000e2d6:	add    BYTE PTR [rax],al
   14000e2d8:	mov    al,0xe6
   14000e2da:	add    BYTE PTR [rax],al
   14000e2dc:	loopne 0x14000e2e1
	...
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	add    bl,ah
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	test   eax,0x3
   14000e2f1:	add    BYTE PTR [rax],al
   14000e2f3:	add    BYTE PTR [rax],al
   14000e2f5:	add    BYTE PTR [rax],al
   14000e2f7:	add    BYTE PTR [rbx],al
   14000e2f9:	add    BYTE PTR [rbp+0x0],cl
   14000e2fc:	push   rbp
   14000e2fd:	add    BYTE PTR [rcx+0x0],cl
   14000e300:	cmp    al,0x3f
   14000e302:	js     0x14000e371
   14000e304:	ins    BYTE PTR es:[rdi],dx
   14000e305:	and    BYTE PTR [rsi+0x65],dh
   14000e308:	jb     0x14000e37d
   14000e30a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e311:	xor    BYTE PTR [rdx],ah
   14000e313:	and    BYTE PTR [rbp+0x6e],ah
   14000e316:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e319:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e320:	rex.RX sub eax,0x73202238
   14000e326:	je     0x14000e389
   14000e328:	outs   dx,BYTE PTR ds:[rsi]
   14000e329:	fs (bad) 
   14000e32b:	ins    BYTE PTR es:[rdi],dx
   14000e32c:	outs   dx,DWORD PTR ds:[rsi]
   14000e32d:	outs   dx,BYTE PTR ds:[rsi]
   14000e32e:	gs cmp eax,0x73657922
   14000e334:	and    bh,BYTE PTR [rdi]
   14000e336:	and    BYTE PTR ds:[rip+0x2d213c0a],cl        # 0x16d221f47
   14000e33d:	sub    eax,0x706f4320
   14000e342:	jns    0x14000e3b6
   14000e344:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e34b:	sub    DWORD PTR [rax],esp
   14000e34d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e355:	je     0x14000e377
   14000e357:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e359:	jb     0x14000e3cb
   14000e35b:	outs   dx,DWORD PTR ds:[rsi]
   14000e35c:	jb     0x14000e3bf
   14000e35e:	je     0x14000e3c9
   14000e360:	outs   dx,DWORD PTR ds:[rsi]
   14000e361:	outs   dx,BYTE PTR ds:[rsi]
   14000e362:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e2195
   14000e368:	cmp    al,0x61
   14000e36a:	jae    0x14000e3df
   14000e36c:	gs ins DWORD PTR es:[rdi],dx
   14000e36e:	(bad)  
   14000e36f:	ins    BYTE PTR es:[rdi],dx
   14000e370:	jns    0x14000e392
   14000e372:	js     0x14000e3e1
   14000e374:	ins    BYTE PTR es:[rdi],dx
   14000e375:	outs   dx,BYTE PTR ds:[rsi]
   14000e376:	jae    0x14000e3b5
   14000e378:	and    dh,BYTE PTR [rbp+0x72]
   14000e37b:	outs   dx,BYTE PTR ds:[rsi]
   14000e37c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e37f:	push   0x73616d65
   14000e384:	sub    eax,0x7263696d
   14000e389:	outs   dx,DWORD PTR ds:[rsi]
   14000e38a:	jae    0x14000e3fb
   14000e38c:	data16 je 0x14000e3bc
   14000e38f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e392:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e395:	ins    DWORD PTR es:[rdi],dx
   14000e396:	cs jbe 0x14000e3ca
   14000e399:	and    ah,BYTE PTR [rax]
   14000e39b:	ins    DWORD PTR es:[rdi],dx
   14000e39c:	(bad)  
   14000e39d:	outs   dx,BYTE PTR ds:[rsi]
   14000e39e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e3a5:	jb     0x14000e41a
   14000e3a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e3ae:	xor    BYTE PTR [rdx],ah
   14000e3b0:	and    BYTE PTR ds:[rip+0x613c090a],cl        # 0x1a13cecc1
   14000e3b7:	jae    0x14000e42c
   14000e3b9:	gs ins DWORD PTR es:[rdi],dx
   14000e3bb:	(bad)  
   14000e3bc:	ins    BYTE PTR es:[rdi],dx
   14000e3bd:	jns    0x14000e408
   14000e3bf:	fs outs dx,BYTE PTR gs:[rsi]
   14000e3c2:	je     0x14000e42d
   14000e3c4:	je     0x14000e43f
   14000e3c6:	or     eax,0x7609090a
   14000e3cb:	gs jb  0x14000e441
   14000e3ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e3d5:	xor    DWORD PTR [rsi],ebp
   14000e3d7:	xor    BYTE PTR [rsi],ch
   14000e3d9:	xor    BYTE PTR [rdx],ah
   14000e3db:	or     eax,0x7009090a
   14000e3e0:	jb     0x14000e451
   14000e3e2:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e3e5:	jae    0x14000e456
   14000e3e7:	jb     0x14000e42a
   14000e3e9:	jb     0x14000e44e
   14000e3eb:	push   0x63657469
   14000e3f0:	je     0x14000e467
   14000e3f2:	jb     0x14000e459
   14000e3f4:	cmp    eax,0x646d6122
   14000e3f9:	ss xor al,0x22
   14000e3fc:	or     eax,0x6e09090a
   14000e401:	(bad)  
   14000e402:	ins    DWORD PTR es:[rdi],dx
   14000e403:	gs cmp eax,0x63694d22
   14000e409:	jb     0x14000e47a
   14000e40b:	jae    0x14000e47c
   14000e40d:	data16 je 0x14000e43e
   14000e410:	push   rdi
   14000e411:	imul   ebp,DWORD PTR [rsi+0x64],0x4d73776f
   14000e418:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x6579616c
   14000e421:	jb     0x14000e471
   14000e423:	push   rbx
   14000e424:	push   rbx
   14000e425:	rex.XB outs dx,DWORD PTR cs:[rsi]
   14000e428:	outs   dx,BYTE PTR ds:[rsi]
   14000e429:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000e42f:	je     0x14000e49a
   14000e431:	outs   dx,DWORD PTR ds:[rsi]
   14000e432:	outs   dx,BYTE PTR ds:[rsi]
   14000e433:	rex.WRB (bad) 
   14000e435:	outs   dx,BYTE PTR ds:[rsi]
   14000e436:	(bad)  
   14000e437:	addr32 gs jb 0x14000e45d
   14000e43b:	or     eax,0x7409090a
   14000e440:	jns    0x14000e4b2
   14000e442:	gs cmp eax,0x6e697722
   14000e448:	xor    esi,DWORD PTR [rdx]
   14000e44a:	and    cl,BYTE PTR [rip+0x3e2f090a]        # 0x17e2fed5a
   14000e450:	or     eax,0x643c090a
   14000e455:	gs jae 0x14000e4bb
   14000e458:	jb     0x14000e4c3
   14000e45a:	jo     0x14000e4d0
   14000e45c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14000e463:	outs   dx,DWORD PTR fs:[rsi]
   14000e465:	ja     0x14000e4da
   14000e467:	and    BYTE PTR [rbp+0x65],cl
   14000e46a:	imul   esp,DWORD PTR fs:[rcx+0x20],0x79616c50
   14000e472:	gs jb  0x14000e495
   14000e475:	rex.WRX
   14000e476:	gs je  0x14000e4f0
   14000e479:	outs   dx,DWORD PTR ds:[rsi]
   14000e47a:	jb     0x14000e4e7
   14000e47c:	and    BYTE PTR [rbx+0x68],dl
   14000e47f:	(bad)  
   14000e480:	jb     0x14000e4eb
   14000e482:	outs   dx,BYTE PTR ds:[rsi]
   14000e483:	and    BYTE PTR [ebx+0x65],dl
   14000e487:	jb     0x14000e4ff
   14000e489:	imul   esp,DWORD PTR [rbx+0x65],0x6e6f4320
   14000e490:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000e496:	je     0x14000e501
   14000e498:	outs   dx,DWORD PTR ds:[rsi]
   14000e499:	outs   dx,BYTE PTR ds:[rsi]
   14000e49a:	and    BYTE PTR [rbp+0x61],cl
   14000e49d:	outs   dx,BYTE PTR ds:[rsi]
   14000e49e:	(bad)  
   14000e49f:	addr32 gs jb 0x14000e4d1
   14000e4a3:	cmp    al,0x2f
   14000e4a5:	fs gs jae 0x14000e50c
   14000e4a9:	jb     0x14000e514
   14000e4ab:	jo     0x14000e521
   14000e4ad:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
   14000e4b4:	or     DWORD PTR [rsp+riz*2],edi
   14000e4b7:	gs jo  0x14000e51f
   14000e4ba:	outs   dx,BYTE PTR ds:[rsi]
   14000e4bb:	fs outs dx,BYTE PTR gs:[rsi]
   14000e4be:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000e4c1:	and    BYTE PTR [rip+0x3c09090a],cl        # 0x17c09edd1
   14000e4c7:	fs gs jo 0x14000e530
   14000e4cb:	outs   dx,BYTE PTR ds:[rsi]
   14000e4cc:	fs outs dx,BYTE PTR gs:[rsi]
   14000e4cf:	je     0x14000e512
   14000e4d1:	jae    0x14000e546
   14000e4d3:	gs ins DWORD PTR es:[rdi],dx
   14000e4d5:	(bad)  
   14000e4d6:	ins    BYTE PTR es:[rdi],dx
   14000e4d7:	jns    0x14000e517
   14000e4d9:	and    BYTE PTR [rip+0x909090a],cl        # 0x14909ede9
   14000e4df:	cmp    al,0x61
   14000e4e1:	jae    0x14000e556
   14000e4e3:	gs ins DWORD PTR es:[rdi],dx
   14000e4e5:	(bad)  
   14000e4e6:	ins    BYTE PTR es:[rdi],dx
   14000e4e7:	jns    0x14000e532
   14000e4e9:	fs outs dx,BYTE PTR gs:[rsi]
   14000e4ec:	je     0x14000e557
   14000e4ee:	je     0x14000e569
   14000e4f0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e4f4:	gs cmp eax,0x6e697722
   14000e4fa:	xor    esi,DWORD PTR [rdx]
   14000e4fc:	and    ah,BYTE PTR [rax]
   14000e4fe:	outs   dx,BYTE PTR ds:[rsi]
   14000e4ff:	(bad)  
   14000e500:	ins    DWORD PTR es:[rdi],dx
   14000e501:	gs cmp eax,0x63694d22
   14000e507:	jb     0x14000e578
   14000e509:	jae    0x14000e57a
   14000e50b:	data16 je 0x14000e53c
   14000e50e:	push   rdi
   14000e50f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e516:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e518:	ins    DWORD PTR es:[rdi],dx
   14000e519:	ins    DWORD PTR es:[rdi],dx
   14000e51a:	outs   dx,DWORD PTR ds:[rsi]
   14000e51b:	outs   dx,BYTE PTR ds:[rsi]
   14000e51c:	sub    eax,0x746e6f43
   14000e521:	jb     0x14000e592
   14000e523:	ins    BYTE PTR es:[rdi],dx
   14000e524:	jae    0x14000e548
   14000e526:	and    BYTE PTR [rsi+0x65],dh
   14000e529:	jb     0x14000e59e
   14000e52b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000e532:	xor    BYTE PTR [rsi],ch
   14000e534:	xor    BYTE PTR [rsi],ch
   14000e536:	xor    BYTE PTR [rdx],ah
   14000e538:	and    BYTE PTR [rax+0x72],dh
   14000e53b:	outs   dx,DWORD PTR ds:[rsi]
   14000e53c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e53f:	jae    0x14000e5b0
   14000e541:	jb     0x14000e584
   14000e543:	jb     0x14000e5a8
   14000e545:	push   0x63657469
   14000e54a:	je     0x14000e5c1
   14000e54c:	jb     0x14000e5b3
   14000e54e:	cmp    eax,0x646d6122
   14000e553:	ss xor al,0x22
   14000e556:	and    BYTE PTR [rax+0x75],dh
   14000e559:	(bad)  
   14000e55a:	ins    BYTE PTR es:[rdi],dx
   14000e55b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000e562:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000e566:	and    dh,BYTE PTR [rsi]
   14000e568:	xor    eax,0x36623539
   14000e56d:	xor    al,0x31
   14000e56f:	xor    al,0x34
   14000e571:	movsxd esp,DWORD PTR [rbx+0x66]
   14000e574:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000e578:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000e57c:	addr32 jne 0x14000e5e0
   14000e57f:	addr32 gs cmp eax,0x20222a22
   14000e586:	(bad)  
   14000e587:	and    BYTE PTR ds:[rip+0x3c09090a],cl        # 0x17c09ee98
   14000e58e:	(bad)  
   14000e58f:	fs gs jo 0x14000e5f8
   14000e593:	outs   dx,BYTE PTR ds:[rsi]
   14000e594:	fs outs dx,BYTE PTR gs:[rsi]
   14000e597:	je     0x14000e5da
   14000e599:	jae    0x14000e60e
   14000e59b:	gs ins DWORD PTR es:[rdi],dx
   14000e59d:	(bad)  
   14000e59e:	ins    BYTE PTR es:[rdi],dx
   14000e59f:	jns    0x14000e5df
   14000e5a1:	and    BYTE PTR [rip+0x2f3c090a],cl        # 0x16f3ceeb1
   14000e5a7:	fs gs jo 0x14000e610
   14000e5ab:	outs   dx,BYTE PTR ds:[rsi]
   14000e5ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000e5af:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000e5b2:	or     eax,0x200a0d0a
   14000e5b7:	and    BYTE PTR [rsp+rsi*2],bh
   14000e5ba:	jb     0x14000e631
   14000e5bc:	jae    0x14000e632
   14000e5be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e5c0:	outs   dx,WORD PTR ds:[rsi]
   14000e5c2:	and    BYTE PTR [rax+0x6d],bh
   14000e5c5:	ins    BYTE PTR es:[rdi],dx
   14000e5c6:	outs   dx,BYTE PTR ds:[rsi]
   14000e5c7:	jae    0x14000e606
   14000e5c9:	and    dh,BYTE PTR [rbp+0x72]
   14000e5cc:	outs   dx,BYTE PTR ds:[rsi]
   14000e5cd:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e5d0:	push   0x73616d65
   14000e5d5:	sub    eax,0x7263696d
   14000e5da:	outs   dx,DWORD PTR ds:[rsi]
   14000e5db:	jae    0x14000e64c
   14000e5dd:	data16 je 0x14000e60d
   14000e5e0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e5e3:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e5e6:	ins    DWORD PTR es:[rdi],dx
   14000e5e7:	cs jbe 0x14000e61d
   14000e5ea:	and    bh,BYTE PTR [rsi]
   14000e5ec:	or     eax,0x733c090a
   14000e5f1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e5f5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20090a0d
   14000e5fd:	and    BYTE PTR [rdx+rsi*2],bh
   14000e600:	gs jno 0x14000e678
   14000e603:	gs jae 0x14000e67a
   14000e606:	gs fs push rax
   14000e609:	jb     0x14000e674
   14000e60b:	jbe    0x14000e676
   14000e60d:	ins    BYTE PTR es:[rdi],dx
   14000e60e:	gs addr32 gs jae 0x14000e651
   14000e613:	or     eax,0x3c09090a
   14000e618:	jb     0x14000e67f
   14000e61a:	jno    0x14000e691
   14000e61c:	gs jae 0x14000e693
   14000e61f:	gs fs rex.RB js 0x14000e689
   14000e624:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e627:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e62e:	ins    BYTE PTR es:[rdi],dx
   14000e62f:	or     eax,0x2009090a
   14000e634:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e638:	gs ins BYTE PTR es:[rdi],dx
   14000e63a:	cmp    eax,0x49736122
   14000e63f:	outs   dx,BYTE PTR ds:[rsi]
   14000e640:	jbe    0x14000e6b1
   14000e642:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e646:	or     eax,0x2009090a
   14000e64b:	and    BYTE PTR [rbp+0x69],dh
   14000e64e:	movsxd esp,DWORD PTR [r11+0x65]
   14000e652:	jae    0x14000e6c7
   14000e654:	cmp    eax,0x6c616622
   14000e659:	jae    0x14000e6c0
   14000e65b:	and    ch,BYTE PTR [rdi]
   14000e65d:	ds or  eax,0x2020090a
   14000e663:	cmp    al,0x2f
   14000e665:	jb     0x14000e6cc
   14000e667:	jno    0x14000e6de
   14000e669:	gs jae 0x14000e6e0
   14000e66c:	gs fs push rax
   14000e66f:	jb     0x14000e6da
   14000e671:	jbe    0x14000e6dc
   14000e673:	ins    BYTE PTR es:[rdi],dx
   14000e674:	gs addr32 gs jae 0x14000e6b7
   14000e679:	or     eax,0x2f3c090a
   14000e67e:	jae    0x14000e6e5
   14000e680:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e683:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e68b:	cmp    al,0x2f
   14000e68d:	je     0x14000e701
   14000e68f:	jne    0x14000e704
   14000e691:	je     0x14000e6dc
   14000e693:	outs   dx,BYTE PTR ds:[rsi]
   14000e694:	outs   dx,WORD PTR ds:[rsi]
   14000e696:	ds or  eax,0x3c0a0d0a
   14000e69c:	(bad)  
   14000e69d:	(bad)  
   14000e69e:	jae    0x14000e713
   14000e6a0:	gs ins DWORD PTR es:[rdi],dx
   14000e6a2:	(bad)  
   14000e6a3:	ins    BYTE PTR es:[rdi],dx
   14000e6a4:	jns    0x14000e6e4
   14000e6a6:	and    BYTE PTR [rip+0xa],cl        # 0x14000e6b6
   14000e6ac:	add    BYTE PTR [rax],al
   14000e6ae:	add    BYTE PTR [rax],al
   14000e6b0:	loopne 0x14000e6b5
   14000e6b2:	xor    al,0x0
   14000e6b4:	add    BYTE PTR [rax],al
   14000e6b6:	push   rsi
   14000e6b7:	add    BYTE PTR [rbx+0x0],dl
   14000e6ba:	pop    rdi
   14000e6bb:	add    BYTE PTR [rsi+0x0],dl
   14000e6be:	add    BYTE PTR [r10+0x0],r10b
   14000e6c2:	push   rbx
   14000e6c3:	add    BYTE PTR [rcx+0x0],cl
   14000e6c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e6ca:	pop    rdi
   14000e6cb:	add    BYTE PTR [rcx+0x0],cl
   14000e6ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e6d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000e6d5:	add    BYTE PTR [rax],al
   14000e6d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e6dd:	add    BYTE PTR [rcx],al
   14000e6df:	add    BYTE PTR [rax],al
   14000e6e1:	add    BYTE PTR [rax+rax*1],cl
   14000e6e4:	add    BYTE PTR [rax+0x0],al
   14000e6e7:	sub    BYTE PTR [rax],al
   14000e6e9:	add    BYTE PTR [rax+rax*1],cl
   14000e6ec:	add    BYTE PTR [rax+0x0],al
   14000e6ef:	sub    BYTE PTR [rdi],bh
   14000e6f1:	add    BYTE PTR [rax],al
   14000e6f3:	add    BYTE PTR [rax],al
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    BYTE PTR [rax+rax*1],al
   14000e6fa:	add    al,0x0
   14000e6fc:	add    DWORD PTR [rax],eax
	...
   14000e70a:	add    BYTE PTR [rax],al
   14000e70c:	add    eax,DWORD PTR ds:[rax]
   14000e70f:	add    BYTE PTR [rcx],al
   14000e711:	add    BYTE PTR [rbx+0x0],dl
   14000e714:	je     0x14000e716
   14000e716:	jb     0x14000e718
   14000e718:	imul   eax,DWORD PTR [rax],0x67006e
   14000e71e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e722:	ins    BYTE PTR es:[rdi],dx
   14000e723:	add    BYTE PTR [rbp+0x0],ah
   14000e726:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e72a:	data16 add BYTE PTR [rdi+0x0],ch
   14000e72e:	add    BYTE PTR [rax],al
   14000e730:	sbb    al,BYTE PTR [rbx]
   14000e732:	add    BYTE PTR [rax],al
   14000e734:	add    DWORD PTR [rax],eax
   14000e736:	xor    BYTE PTR [rax],al
   14000e738:	xor    al,0x0
   14000e73a:	xor    BYTE PTR [rax],al
   14000e73c:	cmp    DWORD PTR [rax],eax
   14000e73e:	xor    BYTE PTR [rax],al
   14000e740:	xor    al,0x0
   14000e742:	rex.X add BYTE PTR [rax],sil
   14000e745:	add    BYTE PTR [rax],al
   14000e747:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e74b:	add    BYTE PTR [rcx],al
   14000e74d:	add    BYTE PTR [rbx+0x0],al
   14000e750:	outs   dx,DWORD PTR ds:[rsi]
   14000e751:	add    BYTE PTR [rbp+0x0],ch
   14000e754:	jo     0x14000e756
   14000e756:	(bad)  
   14000e757:	add    BYTE PTR [rsi+0x0],ch
   14000e75a:	jns    0x14000e75c
   14000e75c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e760:	ins    DWORD PTR es:[rdi],dx
   14000e761:	add    BYTE PTR [rbp+0x0],ah
   14000e764:	add    BYTE PTR [rax],al
   14000e766:	add    BYTE PTR [rax],al
   14000e768:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e76c:	movsxd eax,DWORD PTR [rax]
   14000e76e:	jb     0x14000e770
   14000e770:	outs   dx,DWORD PTR ds:[rsi]
   14000e771:	add    BYTE PTR [rbx+0x0],dh
   14000e774:	outs   dx,DWORD PTR ds:[rsi]
   14000e775:	add    BYTE PTR [rsi+0x0],ah
   14000e778:	je     0x14000e77a
   14000e77a:	and    BYTE PTR [rax],al
   14000e77c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e780:	jb     0x14000e782
   14000e782:	jo     0x14000e784
   14000e784:	outs   dx,DWORD PTR ds:[rsi]
   14000e785:	add    BYTE PTR [rdx+0x0],dh
   14000e788:	(bad)  
   14000e789:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e78d:	add    BYTE PTR [rdi+0x0],ch
   14000e790:	outs   dx,BYTE PTR ds:[rsi]
   14000e791:	add    BYTE PTR [rax],al
   14000e793:	add    BYTE PTR [rsi+0x1004700],dh
   14000e799:	add    BYTE PTR [rsi+0x0],al
   14000e79c:	imul   eax,DWORD PTR [rax],0x65006c
   14000e7a2:	add    BYTE PTR [rbp+0x0],r12b
   14000e7a6:	jae    0x14000e7a8
   14000e7a8:	movsxd eax,DWORD PTR [rax]
   14000e7aa:	jb     0x14000e7ac
   14000e7ac:	imul   eax,DWORD PTR [rax],0x740070
   14000e7b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e7b8:	add    BYTE PTR [rax],al
   14000e7ba:	add    BYTE PTR [rax],al
   14000e7bc:	push   rdi
   14000e7bd:	add    BYTE PTR [rcx+0x0],ch
   14000e7c0:	outs   dx,BYTE PTR ds:[rsi]
   14000e7c1:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000e7c5:	add    BYTE PTR [rdi+0x0],dh
   14000e7c8:	jae    0x14000e7ca
   14000e7ca:	and    BYTE PTR [rax],al
   14000e7cc:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14000e7d0:	add    BYTE PTR fs:[rcx+0x0],ch
   14000e7d4:	(bad)  
   14000e7d5:	add    BYTE PTR [rax],ah
   14000e7d7:	add    BYTE PTR [rax+0x0],dl
   14000e7da:	ins    BYTE PTR es:[rdi],dx
   14000e7db:	add    BYTE PTR [rcx+0x0],ah
   14000e7de:	jns    0x14000e7e0
   14000e7e0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e7e4:	and    BYTE PTR [rax],al
   14000e7e6:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000e7ea:	je     0x14000e7ec
   14000e7ec:	ja     0x14000e7ee
   14000e7ee:	outs   dx,DWORD PTR ds:[rsi]
   14000e7ef:	add    BYTE PTR [rdx+0x0],dh
   14000e7f2:	imul   eax,DWORD PTR [rax],0x20
   14000e7f5:	add    BYTE PTR [rbx+0x0],dl
   14000e7f8:	push   0x72006100
   14000e7fd:	add    BYTE PTR [rcx+0x0],ch
   14000e800:	outs   dx,BYTE PTR ds:[rsi]
   14000e801:	add    BYTE PTR [rdi+0x0],ah
   14000e804:	and    BYTE PTR [rax],al
   14000e806:	push   rbx
   14000e807:	add    BYTE PTR [rbp+0x0],ah
   14000e80a:	jb     0x14000e80c
   14000e80c:	jbe    0x14000e80e
   14000e80e:	imul   eax,DWORD PTR [rax],0x650063
   14000e814:	and    BYTE PTR [rax],al
   14000e816:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e81a:	outs   dx,BYTE PTR ds:[rsi]
   14000e81b:	add    BYTE PTR [rsi+0x0],ah
   14000e81e:	imul   eax,DWORD PTR [rax],0x750067
   14000e824:	jb     0x14000e826
   14000e826:	(bad)  
   14000e827:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e82b:	add    BYTE PTR [rdi+0x0],ch
   14000e82e:	outs   dx,BYTE PTR ds:[rsi]
   14000e82f:	add    BYTE PTR [rax],ah
   14000e831:	add    BYTE PTR [rcx+0x0],al
   14000e834:	jo     0x14000e836
   14000e836:	jo     0x14000e838
   14000e838:	ins    BYTE PTR es:[rdi],dx
   14000e839:	add    BYTE PTR [rcx+0x0],ch
   14000e83c:	movsxd eax,DWORD PTR [rax]
   14000e83e:	(bad)  
   14000e83f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e843:	add    BYTE PTR [rdi+0x0],ch
   14000e846:	outs   dx,BYTE PTR ds:[rsi]
   14000e847:	add    BYTE PTR [rax],al
   14000e849:	add    BYTE PTR [rax],al
   14000e84b:	add    BYTE PTR [rsi+0x0],ah
   14000e84e:	and    eax,DWORD PTR [rax]
   14000e850:	add    DWORD PTR [rax],eax
   14000e852:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e856:	ins    BYTE PTR es:[rdi],dx
   14000e857:	add    BYTE PTR [rbp+0x0],ah
   14000e85a:	push   rsi
   14000e85b:	add    BYTE PTR [rbp+0x0],ah
   14000e85e:	jb     0x14000e860
   14000e860:	jae    0x14000e862
   14000e862:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e868:	add    BYTE PTR [rax],al
   14000e86a:	add    BYTE PTR [rax],al
   14000e86c:	xor    DWORD PTR [rax],eax
   14000e86e:	xor    al,BYTE PTR [rax]
   14000e870:	add    BYTE PTR cs:[rax],dh
   14000e873:	add    BYTE PTR [rsi],ch
   14000e875:	add    BYTE PTR [rcx],dh
   14000e877:	add    BYTE PTR [rax],dh
   14000e879:	add    BYTE PTR [rdx],dh
   14000e87b:	add    BYTE PTR [rax+rax*1],dh
   14000e87e:	xor    BYTE PTR [rax],al
   14000e880:	add    BYTE PTR cs:[rcx],dh
   14000e883:	add    BYTE PTR [rsi],dh
   14000e885:	add    BYTE PTR [rbx],dh
   14000e887:	add    BYTE PTR [rax],bh
   14000e889:	add    BYTE PTR [rax+rax*1],dh
   14000e88c:	and    BYTE PTR [rax],al
   14000e88e:	sub    BYTE PTR [rax],al
   14000e890:	je     0x14000e892
   14000e892:	push   0x2e003100
   14000e897:	add    BYTE PTR [rcx],dh
   14000e899:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701189f
   14000e89f:	add    BYTE PTR [rax],dh
   14000e8a1:	add    BYTE PTR [rcx],bh
   14000e8a3:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770119a9
   14000e8a9:	add    BYTE PTR [rax],dh
   14000e8ab:	add    BYTE PTR [rax],dh
   14000e8ad:	add    BYTE PTR [rcx],ch
   14000e8af:	add    BYTE PTR [rax],al
   14000e8b1:	add    BYTE PTR [rax],al
   14000e8b3:	add    BYTE PTR [rax],ah
   14000e8b5:	add    BYTE PTR [rax],al
   14000e8b7:	add    BYTE PTR [rcx],al
   14000e8b9:	add    BYTE PTR [rcx+0x0],cl
   14000e8bc:	outs   dx,BYTE PTR ds:[rsi]
   14000e8bd:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e8c1:	add    BYTE PTR [rdx+0x0],dh
   14000e8c4:	outs   dx,BYTE PTR ds:[rsi]
   14000e8c5:	add    BYTE PTR [rcx+0x0],ah
   14000e8c8:	ins    BYTE PTR es:[rdi],dx
   14000e8c9:	add    BYTE PTR [rsi+0x0],cl
   14000e8cc:	(bad)  
   14000e8cd:	add    BYTE PTR [rbp+0x0],ch
   14000e8d0:	add    BYTE PTR gs:[rax],al
   14000e8d3:	add    BYTE PTR [rax+0x1002e00],al
   14000e8d9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e8dd:	add    BYTE PTR [rdi+0x0],ah
   14000e8e0:	(bad)  
   14000e8e1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e8e5:	add    BYTE PTR [rdi+0x0],ch
   14000e8e8:	jo     0x14000e8ea
   14000e8ea:	jns    0x14000e8ec
   14000e8ec:	jb     0x14000e8ee
   14000e8ee:	imul   eax,DWORD PTR [rax],0x680067
   14000e8f4:	je     0x14000e8f6
   14000e8f6:	add    BYTE PTR [rax],al
   14000e8f8:	test   eax,0x4d002000
   14000e8fd:	add    BYTE PTR [rcx+0x0],ch
   14000e900:	movsxd eax,DWORD PTR [rax]
   14000e902:	jb     0x14000e904
   14000e904:	outs   dx,DWORD PTR ds:[rsi]
   14000e905:	add    BYTE PTR [rbx+0x0],dh
   14000e908:	outs   dx,DWORD PTR ds:[rsi]
   14000e909:	add    BYTE PTR [rsi+0x0],ah
   14000e90c:	je     0x14000e90e
   14000e90e:	and    BYTE PTR [rax],al
   14000e910:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e914:	jb     0x14000e916
   14000e916:	jo     0x14000e918
   14000e918:	outs   dx,DWORD PTR ds:[rsi]
   14000e919:	add    BYTE PTR [rdx+0x0],dh
   14000e91c:	(bad)  
   14000e91d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e921:	add    BYTE PTR [rdi+0x0],ch
   14000e924:	outs   dx,BYTE PTR ds:[rsi]
   14000e925:	add    BYTE PTR [rsi],ch
   14000e927:	add    BYTE PTR [rax],ah
   14000e929:	add    BYTE PTR [rcx+0x0],al
   14000e92c:	ins    BYTE PTR es:[rdi],dx
   14000e92d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e931:	add    BYTE PTR [rdx+0x0],dh
   14000e934:	imul   eax,DWORD PTR [rax],0x680067
   14000e93a:	je     0x14000e93c
   14000e93c:	jae    0x14000e93e
   14000e93e:	and    BYTE PTR [rax],al
   14000e940:	jb     0x14000e942
   14000e942:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e946:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e94a:	jbe    0x14000e94c
   14000e94c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e951:	add    BYTE PTR [rax],al
   14000e953:	add    BYTE PTR [rdx+0x0],al
   14000e956:	or     eax,0x4f000100
   14000e95b:	add    BYTE PTR [rdx+0x0],dh
   14000e95e:	imul   eax,DWORD PTR [rax],0x690067
   14000e964:	outs   dx,BYTE PTR ds:[rsi]
   14000e965:	add    BYTE PTR [rcx+0x0],ah
   14000e968:	ins    BYTE PTR es:[rdi],dx
   14000e969:	add    BYTE PTR [rsi+0x0],al
   14000e96c:	imul   eax,DWORD PTR [rax],0x65006c
   14000e972:	outs   dx,BYTE PTR ds:[rsi]
   14000e973:	add    BYTE PTR [rcx+0x0],ah
   14000e976:	ins    DWORD PTR es:[rdi],dx
   14000e977:	add    BYTE PTR [rbp+0x0],ah
   14000e97a:	add    BYTE PTR [rax],al
   14000e97c:	push   rdi
   14000e97d:	add    BYTE PTR [rbp+0x0],cl
   14000e980:	push   rax
   14000e981:	add    BYTE PTR [rsi+0x0],cl
   14000e984:	push   rbx
   14000e985:	add    BYTE PTR [rbx+0x0],al
   14000e988:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14000e98c:	add    BYTE PTR cs:[rbp+0x0],al
   14000e990:	pop    rax
   14000e991:	add    BYTE PTR [rbp+0x0],al
   14000e994:	add    BYTE PTR [rax],al
   14000e996:	add    BYTE PTR [rax],al
   14000e998:	push   0x0
   14000e99a:	and    eax,0x50000100
   14000e99f:	add    BYTE PTR [rdx+0x0],dh
   14000e9a2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9a3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e9a7:	add    BYTE PTR [rbx+0x0],ah
   14000e9aa:	je     0x14000e9ac
   14000e9ac:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e9b0:	ins    DWORD PTR es:[rdi],dx
   14000e9b1:	add    BYTE PTR [rbp+0x0],ah
   14000e9b4:	add    BYTE PTR [rax],al
   14000e9b6:	add    BYTE PTR [rax],al
   14000e9b8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e9bc:	movsxd eax,DWORD PTR [rax]
   14000e9be:	jb     0x14000e9c0
   14000e9c0:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c1:	add    BYTE PTR [rbx+0x0],dh
   14000e9c4:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c5:	add    BYTE PTR [rsi+0x0],ah
   14000e9c8:	je     0x14000e9ca
   14000e9ca:	scas   al,BYTE PTR es:[rdi]
   14000e9cb:	add    BYTE PTR [rax],ah
   14000e9cd:	add    BYTE PTR [rdi+0x0],dl
   14000e9d0:	imul   eax,DWORD PTR [rax],0x64006e
   14000e9d6:	outs   dx,DWORD PTR ds:[rsi]
   14000e9d7:	add    BYTE PTR [rdi+0x0],dh
   14000e9da:	jae    0x14000e9dc
   14000e9dc:	scas   al,BYTE PTR es:[rdi]
   14000e9dd:	add    BYTE PTR [rax],ah
   14000e9df:	add    BYTE PTR [rdi+0x0],cl
   14000e9e2:	jo     0x14000e9e4
   14000e9e4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e9e8:	(bad)  
   14000e9e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e9ed:	add    BYTE PTR [rsi+0x0],ch
   14000e9f0:	add    BYTE PTR [eax],ah
   14000e9f3:	add    BYTE PTR [rbx+0x0],dl
   14000e9f6:	jns    0x14000e9f8
   14000e9f8:	jae    0x14000e9fa
   14000e9fa:	je     0x14000e9fc
   14000e9fc:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ea00:	add    BYTE PTR [rax],al
   14000ea02:	add    BYTE PTR [rax],al
   14000ea04:	rex.RX add BYTE PTR [rcx],r10b
   14000ea07:	add    BYTE PTR [rcx],al
   14000ea09:	add    BYTE PTR [rax+0x0],dl
   14000ea0c:	jb     0x14000ea0e
   14000ea0e:	outs   dx,DWORD PTR ds:[rsi]
   14000ea0f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000ea13:	add    BYTE PTR [rbx+0x0],ah
   14000ea16:	je     0x14000ea18
   14000ea18:	push   rsi
   14000ea19:	add    BYTE PTR [rbp+0x0],ah
   14000ea1c:	jb     0x14000ea1e
   14000ea1e:	jae    0x14000ea20
   14000ea20:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ea26:	add    BYTE PTR [rax],al
   14000ea28:	xor    DWORD PTR [rax],eax
   14000ea2a:	xor    al,BYTE PTR [rax]
   14000ea2c:	add    BYTE PTR cs:[rax],dh
   14000ea2f:	add    BYTE PTR [rsi],ch
   14000ea31:	add    BYTE PTR [rcx],dh
   14000ea33:	add    BYTE PTR [rax],dh
   14000ea35:	add    BYTE PTR [rdx],dh
   14000ea37:	add    BYTE PTR [rax+rax*1],dh
   14000ea3a:	xor    BYTE PTR [rax],al
   14000ea3c:	add    BYTE PTR cs:[rcx],dh
   14000ea3f:	add    BYTE PTR [rsi],dh
   14000ea41:	add    BYTE PTR [rbx],dh
   14000ea43:	add    BYTE PTR [rax],bh
   14000ea45:	add    BYTE PTR [rax+rax*1],dh
   14000ea48:	add    BYTE PTR [rax],al
   14000ea4a:	add    BYTE PTR [rax],al
   14000ea4c:	add    BYTE PTR [rax],r8b
   14000ea4f:	add    BYTE PTR [rcx],al
   14000ea51:	add    BYTE PTR [rsi+0x0],dl
   14000ea54:	(bad)  
   14000ea55:	add    BYTE PTR [rdx+0x0],dh
   14000ea58:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000ea5c:	ins    BYTE PTR es:[rdi],dx
   14000ea5d:	add    BYTE PTR [rbp+0x0],ah
   14000ea60:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000ea64:	data16 add BYTE PTR [rdi+0x0],ch
   14000ea68:	add    BYTE PTR [rax],al
   14000ea6a:	add    BYTE PTR [rax],al
   14000ea6c:	and    al,0x0
   14000ea6e:	add    al,0x0
   14000ea70:	add    BYTE PTR [rax],al
   14000ea72:	push   rsp
   14000ea73:	add    BYTE PTR [rdx+0x0],dh
   14000ea76:	(bad)  
   14000ea77:	add    BYTE PTR [rsi+0x0],ch
   14000ea7a:	jae    0x14000ea7c
   14000ea7c:	ins    BYTE PTR es:[rdi],dx
   14000ea7d:	add    BYTE PTR [rcx+0x0],ah
   14000ea80:	je     0x14000ea82
   14000ea82:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ea88:	add    BYTE PTR [rax],al
   14000ea8a:	add    BYTE PTR [rax],al
   14000ea8c:	or     DWORD PTR [rax+rsi*4],eax
   14000ea8f:	add    al,0x28
   14000ea91:	add    BYTE PTR [rax],al
   14000ea93:	add    BYTE PTR [rax],dh
   14000ea95:	add    BYTE PTR [rax],al
   14000ea97:	add    BYTE PTR [rax+0x0],ah
   14000ea9a:	add    BYTE PTR [rax],al
   14000ea9c:	add    DWORD PTR [rax],eax
   14000ea9e:	add    al,0x0
   14000eaa0:	add    BYTE PTR [rax],al
   14000eaa2:	add    BYTE PTR [rax],al
   14000eaa4:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000eabc:	add    BYTE PTR [rax],al
   14000eabe:	add    BYTE PTR [rax],0x0
   14000eac1:	add    BYTE PTR [rax],0x0
   14000eac4:	add    BYTE PTR [rax+0x800080],al
   14000eaca:	add    BYTE PTR [rax],al
   14000eacc:	add    BYTE PTR [rax],0x80
   14000eacf:	add    BYTE PTR [rax-0x7fffff80],al
   14000ead5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000eadc:	add    BYTE PTR [rax],al
   14000eade:	inc    DWORD PTR [rax]
   14000eae0:	add    bh,bh
   14000eae2:	add    BYTE PTR [rax],al
   14000eae4:	add    bh,bh
   14000eae6:	inc    DWORD PTR [rax]
   14000eae8:	inc    DWORD PTR [rax]
   14000eaea:	add    BYTE PTR [rax],al
   14000eaec:	inc    DWORD PTR [rax]
   14000eaee:	inc    DWORD PTR [rax]
   14000eaf0:	(bad)  
   14000eaf1:	inc    DWORD PTR [rax]
   14000eaf3:	add    bh,bh
   14000eaf5:	(bad)  
   14000eaf6:	inc    DWORD PTR [rax]
   14000eaf8:	add    BYTE PTR [rax],al
   14000eafa:	add    BYTE PTR [rax+0x0],bh
	...
   14000eb11:	add    BYTE PTR [rdi-0x79],dh
   14000eb14:	ja     0x14000eb16
	...
   14000eb26:	add    BYTE PTR [rax],al
   14000eb28:	add    BYTE PTR [rdi],al
   14000eb2a:	xchg   DWORD PTR [rax+0x78],edi
   14000eb2d:	ja     0x14000eb2f
   14000eb2f:	(bad)  
   14000eb30:	ja     0x14000eba9
	...
   14000eb3e:	add    BYTE PTR [rax],al
   14000eb40:	add    BYTE PTR [rax+0x77],bh
   14000eb43:	mov    BYTE PTR [rax+0x77],bh
   14000eb46:	jo     0x14000ebb8
   14000eb48:	ja     0x14000ead2
   14000eb4a:	ja     0x14000eb4c
	...
   14000eb58:	add    BYTE PTR [rax-0x79],bh
   14000eb5b:	mov    BYTE PTR [rax+0x77],bh
   14000eb5e:	xchg   DWORD PTR [rdi+0x77],esi
   14000eb61:	ja     0x14000eaeb
   14000eb63:	ja     0x14000eb65
	...
   14000eb71:	js     0x14000eafa
   14000eb73:	mov    BYTE PTR [rax-0x79],bh
   14000eb76:	js     0x14000eaff
   14000eb78:	jo     0x14000ebea
   14000eb7a:	ja     0x14000eb04
   14000eb7c:	ja     0x14000eb7e
	...
   14000eb86:	add    BYTE PTR [rax],al
   14000eb88:	add    BYTE PTR [rax-0x79],bh
   14000eb8b:	mov    BYTE PTR [rax+0x78],bh
   14000eb8e:	xchg   DWORD PTR [rax-0x78],edi
   14000eb91:	ja     0x14000ec03
   14000eb93:	ja     0x14000eb1d
   14000eb95:	ja     0x14000eb97
	...
   14000eb9f:	add    BYTE PTR [rax],al
   14000eba1:	js     0x14000eb2a
   14000eba3:	mov    BYTE PTR [rax-0x79],bh
   14000eba6:	mov    BYTE PTR [rax+0x70778878],cl
   14000ebac:	ja     0x14000eb36
   14000ebae:	ja     0x14000ebb0
	...
   14000ebb8:	add    BYTE PTR [rdi-0x79],bh
   14000ebbb:	mov    BYTE PTR [rax+0x78],bh
   14000ebbe:	ja     0x14000eb47
   14000ebc0:	mov    BYTE PTR [rax-0x78],bh
   14000ebc3:	ja     0x14000ec35
   14000ebc5:	xchg   DWORD PTR [rdi+0x70],eax
   14000ebcb:	add    BYTE PTR [rax],al
   14000ebcd:	add    BYTE PTR [rax],al
   14000ebcf:	add    BYTE PTR [rax],al
   14000ebd1:	js     0x14000eb5b
   14000ebd3:	mov    BYTE PTR [rax+0x78787878],cl
   14000ebd9:	mov    BYTE PTR [rax+0x70777788],cl
	...
   14000ebe7:	add    BYTE PTR [rax],al
   14000ebe9:	jg     0x14000eb72
   14000ebeb:	mov    BYTE PTR [rax+0x78],bh
   14000ebee:	js     0x14000ec68
   14000ebf0:	js     0x14000ec6a
   14000ebf2:	mov    BYTE PTR [rdi+0x707088],al
	...
   14000ec00:	add    BYTE PTR [rdi-0x78],bh
   14000ec03:	mov    BYTE PTR [rax-0x79],bh
   14000ec06:	js     0x14000ec80
   14000ec08:	js     0x14000ec82
   14000ec0a:	js     0x14000eb94
   14000ec0c:	xchg   DWORD PTR [rax+0x7077],ecx
   14000ec12:	add    BYTE PTR [rax],al
   14000ec14:	add    BYTE PTR [rax],al
   14000ec16:	add    BYTE PTR [rax],al
   14000ec18:	add    BYTE PTR [rdi-0x79],bh
   14000ec1b:	mov    BYTE PTR [rax+0x78787878],cl
   14000ec21:	js     0x14000ec9b
   14000ec23:	js     0x14000ebad
   14000ec25:	xchg   DWORD PTR [rdi+0x87],eax
   14000ec2b:	add    BYTE PTR [rax],al
   14000ec2d:	add    BYTE PTR [rax],al
   14000ec2f:	add    BYTE PTR [rax],al
   14000ec31:	jg     0x14000ebbb
   14000ec33:	mov    BYTE PTR [rax+0x78],bh
   14000ec36:	js     0x14000ecb0
   14000ec38:	js     0x14000ecb2
   14000ec3a:	js     0x14000ecb4
   14000ec3c:	js     0x14000ebc6
   14000ec3e:	ja     0x14000ebc7
   14000ec40:	ja     0x14000ecb8
   14000ec42:	jo     0x14000ec44
   14000ec44:	add    BYTE PTR [rax],al
   14000ec46:	add    BYTE PTR [rax],al
   14000ec48:	add    BYTE PTR [rdi-0x78],bh
   14000ec4b:	mov    BYTE PTR [rax-0x79],bh
   14000ec4e:	xchg   DWORD PTR [rdi-0x77787879],eax
   14000ec54:	js     0x14000ecce
   14000ec56:	mov    BYTE PTR [rsi-0x1a],dh
   14000ec59:	out    0xe7,eax
   14000ec5b:	jo     0x14000ec5d
   14000ec5d:	add    BYTE PTR [rax],al
   14000ec5f:	add    BYTE PTR [rax],al
   14000ec61:	jg     0x14000ebeb
   14000ec63:	mov    BYTE PTR [rax+0x78787878],cl
   14000ec69:	js     0x14000ebf2
   14000ec6b:	xchg   DWORD PTR [rax+0x7cec8787],ecx
   14000ec71:	ins    BYTE PTR es:[rdi],dx
   14000ec72:	ins    BYTE PTR es:[rdi],dx
   14000ec73:	out    0x0,eax
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax],al
   14000ec79:	jg     0x14000ec03
   14000ec7b:	mov    BYTE PTR [rax+0x78],bh
   14000ec7e:	js     0x14000ecf8
   14000ec80:	xchg   DWORD PTR [rax+0x78788878],ecx
   14000ec86:	xchg   esi,esp
   14000ec88:	out    0xe6,al
   14000ec8a:	out    0xce,al
   14000ec8c:	jo     0x14000ec8e
   14000ec8e:	add    BYTE PTR [rax],al
   14000ec90:	add    BYTE PTR [rdi-0x78],bh
   14000ec93:	mov    BYTE PTR [rax-0x77787879],cl
   14000ec99:	js     0x14000ec22
   14000ec9b:	xchg   DWORD PTR [rax-0x31717979],ecx
   14000eca1:	mov    esi,0x707c
   14000eca7:	add    BYTE PTR [rax],al
   14000eca9:	jg     0x14000eca3
   14000ecab:	mov    BYTE PTR [rax+0x78],bh
   14000ecae:	mov    BYTE PTR [rax+0x78888778],cl
   14000ecb4:	xchg   DWORD PTR [rax-0x19181879],ecx
   14000ecba:	out    0xe6,al
   14000ecbc:	loopne 0x14000ecbe
   14000ecbe:	add    BYTE PTR [rax],al
   14000ecc0:	add    BYTE PTR [rdi-0x78],bh
   14000ecc3:	mov    BYTE PTR [rax-0x78787879],cl
   14000ecc9:	add    BYTE PTR [rip+0x46011420],0x8e        # 0x1860200f0
   14000ecd0:	jl     0x14000ecbe
   14000ecd2:	in     al,dx
   14000ecd3:	jl     0x14000ed35
   14000ecd5:	add    BYTE PTR [rax],al
   14000ecd7:	add    BYTE PTR [rax],al
   14000ecd9:	jg     0x14000ec63
   14000ecdb:	clc    
   14000ecdc:	js     0x14000ec66
   14000ecde:	js     0x14000ec68
   14000ece0:	js     0x14000ec66
   14000ece2:	mov    BYTE PTR [rsi],bl
   14000ece4:	ja     0x14000ed54
   14000ece6:	add    BYTE PTR [rsi-0x11818172],cl
   14000ecec:	jo     0x14000ecee
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	add    BYTE PTR [rdi-0x9],bh
   14000ecf3:	mov    BYTE PTR [rax+0x78],bh
   14000ecf6:	xchg   DWORD PTR [rdi+0x7888088],eax
   14000ecfc:	ja     0x14000ec8c
   14000ecfe:	push   rax
   14000ecff:	rex.RXB call 0x1a07dd9ed
   14000ed05:	(bad)  
   14000ed06:	add    BYTE PTR [rax],al
   14000ed08:	add    BYTE PTR [rdi-0x78],bh
   14000ed0b:	mov    BYTE PTR [rax-0x77777779],cl
   14000ed11:	and    DWORD PTR [rip+0x66e76628],0x787c7c45        # 0x1a6e85343
   14000ed1b:	call   0x140e0f580
   14000ed20:	add    BYTE PTR [rdi-0x78],bh
   14000ed23:	mov    BYTE PTR [rax-0x78],bh
   14000ed26:	mov    BYTE PTR [rax-0x78],bh
   14000ed29:	test   BYTE PTR [rax-0x733118f8],cl
   14000ed2f:	mov    fs,ecx
   14000ed31:	add    BYTE PTR [rax+0xe],ah
   14000ed34:	jo     0x14000ed36
   14000ed36:	jle    0x14000ed38
   14000ed38:	add    BYTE PTR [rdi-0x78],bh
   14000ed3b:	mov    BYTE PTR [rax-0x78],bh
   14000ed3e:	mov    BYTE PTR [rax+0x76888088],cl
   14000ed44:	(bad)  
   14000ed45:	mov    esi,gs
   14000ed47:	jbe    0x14000eccd
   14000ed49:	add    BYTE PTR [rax],al
   14000ed4b:	(bad)  
   14000ed4c:	jo     0x14000ed4e
   14000ed4e:	mov    WORD PTR [rax-0x77777800],es
   14000ed54:	mov    BYTE PTR [rax-0x7f777778],cl
   14000ed5a:	xor    BYTE PTR [rsi+0x76],cl
   14000ed5d:	out    0x7e,eax
   14000ed5f:	rex.R loope 0x14000ed87
   14000ed62:	and    BYTE PTR [rdi],al
   14000ed64:	loopne 0x14000ed66
   14000ed66:	(bad)  
   14000ed67:	(bad)  
   14000ed68:	add    BYTE PTR [rdi-0x79],bh
   14000ed6b:	mov    BYTE PTR [rax-0x78],bh
   14000ed6e:	xchg   DWORD PTR [rax+0x36888488],ecx
   14000ed74:	in     al,dx
   14000ed75:	jl     0x14000edeb
   14000ed77:	adc    BYTE PTR [rax+rax*1+0x10],dh
   14000ed7b:	(bad)  
   14000ed7c:	jo     0x14000ed7e
   14000ed7e:	(bad)  
   14000ed7f:	rol    BYTE PTR [rax],0x78
   14000ed82:	mov    BYTE PTR [rax-0x77777781],cl
   14000ed88:	mov    BYTE PTR [rax-0x1718f771],al
   14000ed8e:	(bad)  
   14000ed8f:	(bad)  
   14000ed90:	jae    0x14000ed92
   14000ed92:	rex (bad) 
   14000ed94:	loopne 0x14000ed96
   14000ed96:	(bad)  
   14000ed97:	(bad)  
   14000ed98:	add    BYTE PTR [rax-0x77877779],cl
   14000ed9e:	mov    BYTE PTR [rax+0x40418388],cl
   14000eda4:	push   rsp
   14000eda5:	add    al,0x14
   14000eda7:	adc    dl,BYTE PTR [rax+0x43]
   14000edaa:	add    BYTE PTR [rsi],cl
   14000edac:	jo     0x14000edae
   14000edae:	mov    es,eax
   14000edb0:	add    BYTE PTR [rax-0x79],bh
   14000edb3:	mov    BYTE PTR [rax-0x77777778],cl
   14000edb9:	test   BYTE PTR [rax+0x77373737],cl
   14000edbf:	ja     0x14000ee33
   14000edc1:	add    BYTE PTR [rax],dl
   14000edc3:	(bad)  
   14000edc4:	loopne 0x14000edc6
   14000edc6:	in     al,dx
   14000edc7:	loopne 0x14000edc9
   14000edc9:	mov    BYTE PTR [rdi+0x78],dh
   14000edcc:	jg     0x14000ed56
   14000edce:	mov    BYTE PTR [rax+0x8888388],cl
   14000edd4:	xchg   edi,eax
   14000edd5:	xchg   edi,eax
   14000edd6:	jae    0x14000ee4b
   14000edd8:	jo     0x14000edda
   14000edda:	(bad)  
   14000eddb:	(bad)  
   14000eddc:	jo     0x14000edde
   14000edde:	out    0x0,eax
   14000ede0:	add    BYTE PTR [rbx+0x7a],dh
   14000ede3:	cmp    BYTE PTR [rdi-0x78],bh
   14000ede6:	mov    BYTE PTR [rax+0x70784f8],cl
   14000edec:	xchg   edi,eax
   14000eded:	push   rdi
   14000edee:	jae    0x14000ee21
   14000edf0:	je     0x14000ee22
   14000edf2:	adc    BYTE PTR [rdi],al
   14000edf4:	rol    BYTE PTR [rdi],0xec
   14000edf7:	add    BYTE PTR [rax],al
   14000edf9:	and    DWORD PTR [rbx-0x777780c8],0xfffffff8
   14000ee00:	mov    al,dh
   14000ee02:	clc    
   14000ee03:	sbb    BYTE PTR [rdi+0x76],dh
   14000ee06:	(bad)  
   14000ee07:	jae    0x14000ee7a
   14000ee09:	add    BYTE PTR [rax+0xe],al
   14000ee0c:	xchg   esi,ebp
   14000ee0e:	add    BYTE PTR [rax],0x0
   14000ee11:	jae    0x14000ee45
   14000ee13:	sub    BYTE PTR [rdi-0x78],bh
   14000ee16:	mov    BYTE PTR [rax+0x48888288],cl
   14000ee1c:	ja     0x14000ee95
   14000ee1e:	mov    r15b,0x83
   14000ee21:	add    BYTE PTR [rax],dh
   14000ee23:	or     al,ch
   14000ee25:	mov    es,WORD PTR [rax+0x70860000]
   14000ee2b:	or     BYTE PTR [rdi-0x78],bh
   14000ee2e:	clc    
   14000ee2f:	clc    
   14000ee30:	clc    
   14000ee31:	hlt    
   14000ee32:	adc    bl,BYTE PTR [rax]
   14000ee34:	xchg   eax,ebp
   14000ee36:	jbe    0x14000eeaf
   14000ee38:	add    DWORD PTR [rax+rax*1],0xe8e807
   14000ee3f:	add    BYTE PTR [rax],al
   14000ee41:	and    DWORD PTR [rax+0x8],0x8888887f
   14000ee48:	pop    QWORD PTR [rax-0x7777b708]
   14000ee4e:	ja     0x14000eea7
   14000ee50:	add    BYTE PTR [rax],0x30
   14000ee53:	(bad)  
   14000ee54:	xchg   DWORD PTR [rax-0x80000000],eax
   14000ee5a:	je     0x14000ee64
   14000ee5c:	jg     0x14000eded
   14000ee5e:	(bad)  
   14000ee5f:	vpmacssdqh xmm1,xmm1,xmm14,XMMWORD PTR [r8]
   14000ee65:	jle    0x14000edf5
   14000ee67:	xchg   DWORD PTR [rsi-0x18f8c000],eax
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rax],al
   14000ee71:	xchg   DWORD PTR [rdi+0x77],esi
   14000ee74:	mov    BYTE PTR [rax-0x78077771],cl
   14000ee7a:	add    DWORD PTR [rax+0x50],esp
   14000ee7d:	push   rax
   14000ee7e:	rex.B
   14000ee7f:	rex.X
   14000ee80:	adc    dl,BYTE PTR [r8]
   14000ee83:	or     BYTE PTR [rax+0x0],dh
   14000ee86:	add    BYTE PTR [rax],al
   14000ee88:	add    BYTE PTR [rdi-0x8889],al
   14000ee8e:	mov    al,bh
   14000ee90:	(bad)  
   14000ee94:	(bad)  
   14000ee95:	(bad)  
   14000ee96:	(bad)
   14000ee9a:	add    BYTE PTR [rsi],cl
   14000ee9c:	add    BYTE PTR [rax],0x0
   14000ee9f:	add    BYTE PTR [rax],al
   14000eea1:	or     BYTE PTR [rax-0x71],bh
   14000eea4:	(bad)  
   14000eea5:	(bad)  
   14000eea6:	dec    DWORD PTR [rdi-0x77707071]
   14000eeac:	clc    
   14000eead:	clc    
   14000eeae:	clc    
   14000eeaf:	clc    
   14000eeb0:	add    BYTE PTR [rax],al
   14000eeb2:	add    BYTE PTR [rax],cl
   14000eeb4:	add    BYTE PTR [rax],al
   14000eeb6:	add    BYTE PTR [rax],al
   14000eeb8:	add    BYTE PTR [rax],al
   14000eeba:	mov    BYTE PTR [rax-0x71],cl
   14000eec0:	dec    DWORD PTR [rdi-0x7070771]
   14000eec6:	dec    DWORD PTR [rax+0x0]
   14000eecc:	add    BYTE PTR [rax],al
   14000eece:	add    BYTE PTR [rax],al
   14000eed0:	add    BYTE PTR [rax],al
   14000eed2:	add    BYTE PTR [rax],cl
   14000eed4:	mov    BYTE PTR [rax-0x1],cl
   14000eeda:	clc    
   14000eedb:	clc    
   14000eedc:	dec    DWORD PTR [rdi+0xf88f]
	...
   14000eeea:	add    BYTE PTR [rax],al
   14000eeec:	add    BYTE PTR [rax],cl
   14000eeee:	mov    BYTE PTR [rdi-0x1],cl
   14000eef4:	clc    
   14000eef5:	dec    DWORD PTR [rdi+0x88]
	...
   14000ef07:	mov    BYTE PTR [rax-0x1],cl
   14000ef0d:	dec    DWORD PTR [rdi+0xf8]
	...
   14000ef1f:	add    BYTE PTR [rax],cl
   14000ef21:	mov    BYTE PTR [rdi-0x1],cl
   14000ef27:	clc    
	...
   14000ef38:	add    BYTE PTR [rax],al
   14000ef3a:	mov    BYTE PTR [rax-0x70000071],cl
	...
   14000ef50:	add    BYTE PTR [rax],al
   14000ef52:	add    BYTE PTR [rax],cl
   14000ef54:	mov    BYTE PTR [rax+0x8088],cl
	...
   14000ef76:	add    BYTE PTR [rax],al
   14000ef78:	cld    
   14000ef79:	(bad)  
   14000ef7a:	(bad)  
   14000ef7b:	(bad)  
   14000ef7c:	(bad)  
   14000ef7d:	inc    DWORD PTR [rax]
   14000ef7f:	add    al,dh
   14000ef81:	(bad)  
   14000ef82:	(bad)  
   14000ef83:	(bad)  
   14000ef84:	(bad)  
   14000ef85:	inc    DWORD PTR [rax]
   14000ef87:	add    al,ah
   14000ef89:	(bad)  
   14000ef8a:	ud0    edi,edi
   14000ef8d:	inc    DWORD PTR [rax]
   14000ef8f:	add    al,al
   14000ef91:	add    BYTE PTR [rbx],al
   14000ef93:	(bad)  
   14000ef94:	(bad)  
   14000ef95:	inc    DWORD PTR [rax]
   14000ef97:	add    al,al
   14000ef99:	add    BYTE PTR [rax],al
   14000ef9b:	(bad)  
   14000ef9c:	(bad)  
   14000ef9d:	inc    DWORD PTR [rax]
   14000ef9f:	add    al,al
   14000efa1:	add    BYTE PTR [rax],dl
   14000efa3:	(bad)  
   14000efa4:	(bad)  
   14000efa5:	inc    DWORD PTR [rax]
   14000efa7:	add    al,al
   14000efa9:	add    BYTE PTR [rdi+rcx*1],al
   14000efac:	(bad)  
   14000efad:	inc    DWORD PTR [rax]
   14000efaf:	add    al,al
   14000efb1:	add    BYTE PTR [rcx],al
   14000efb3:	add    edi,edi
   14000efb5:	inc    DWORD PTR [rax]
   14000efb7:	add    al,al
   14000efb9:	add    BYTE PTR [rax],al
   14000efbb:	add    edi,edi
   14000efbd:	inc    DWORD PTR [rax]
   14000efbf:	add    al,al
   14000efc1:	add    BYTE PTR [rax],al
   14000efc3:	(bad)  
   14000efc4:	(bad)  
   14000efc5:	inc    DWORD PTR [rax]
   14000efc7:	add    al,al
   14000efc9:	add    BYTE PTR [rax],al
   14000efcb:	(bad)  
   14000efcc:	(bad)  
   14000efcd:	inc    DWORD PTR [rax]
   14000efcf:	add    al,al
   14000efd1:	add    BYTE PTR [rax],al
   14000efd3:	add    edi,edi
   14000efd5:	inc    DWORD PTR [rax]
   14000efd7:	add    al,al
   14000efd9:	add    BYTE PTR [rax],al
   14000efdb:	add    bh,bh
   14000efdd:	inc    DWORD PTR [rax]
   14000efdf:	add    al,al
   14000efe1:	add    BYTE PTR [rax],al
   14000efe3:	add    BYTE PTR [rdi],al
   14000efe5:	inc    DWORD PTR [rax]
   14000efe7:	add    al,al
   14000efe9:	add    BYTE PTR [rax],al
   14000efeb:	add    BYTE PTR [rcx],al
   14000efed:	inc    DWORD PTR [rax]
   14000efef:	add    al,al
   14000eff1:	add    BYTE PTR [rax],al
   14000eff3:	add    BYTE PTR [rax],al
   14000eff5:	inc    DWORD PTR [rax]
   14000eff7:	add    al,al
   14000eff9:	add    BYTE PTR [rax],al
   14000effb:	add    BYTE PTR [rax],al
   14000effd:	jg     0x14000efff
   14000efff:	add    al,al
   14000f001:	add    BYTE PTR [rax],al
   14000f003:	add    BYTE PTR [rax],al
   14000f005:	jg     0x14000f007
   14000f007:	add    al,al
   14000f009:	add    BYTE PTR [rax],al
   14000f00b:	add    BYTE PTR [rax],al
   14000f00d:	jg     0x14000f00f
   14000f00f:	add    al,al
   14000f011:	add    BYTE PTR [rax],al
   14000f013:	add    BYTE PTR [rax],al
   14000f015:	jg     0x14000f017
   14000f017:	add    al,al
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    BYTE PTR [rax],al
   14000f01d:	jg     0x14000f01f
   14000f01f:	add    al,al
   14000f021:	add    BYTE PTR [rax],al
   14000f023:	add    BYTE PTR [rax],al
   14000f025:	outs   dx,DWORD PTR ds:[rsi]
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	rol    BYTE PTR [rax],0x0
   14000f02b:	add    BYTE PTR [rax],al
   14000f02d:	add    BYTE PTR [eax],al
   14000f030:	rol    BYTE PTR [rax],0x0
   14000f033:	add    BYTE PTR [rsi],dh
   14000f035:	jae    0x14000f037
   14000f037:	add    al,al
   14000f039:	add    BYTE PTR [rax],al
   14000f03b:	add    BYTE PTR [rsi],dh
   14000f03d:	jno    0x14000f03f
   14000f03f:	add    al,al
   14000f041:	add    BYTE PTR [rax],al
   14000f043:	add    BYTE PTR [rsi],al
   14000f045:	jns    0x14000f047
   14000f047:	add    al,al
   14000f049:	add    BYTE PTR [rax],al
   14000f04b:	add    BYTE PTR [rsi],dh
   14000f04d:	jns    0x14000f04f
   14000f04f:	add    al,al
   14000f051:	add    BYTE PTR [rax],al
   14000f053:	add    BYTE PTR [rsi],dh
   14000f055:	jns    0x14000f057
   14000f057:	add    al,al
   14000f059:	add    BYTE PTR [rax],al
   14000f05b:	add    BYTE PTR [rsi],al
   14000f05d:	jno    0x14000f05f
   14000f05f:	add    al,al
   14000f061:	add    BYTE PTR [rax],al
   14000f063:	add    BYTE PTR [rsi],dh
   14000f065:	jno    0x14000f067
   14000f067:	add    al,al
   14000f069:	add    BYTE PTR [rax],al
   14000f06b:	add    BYTE PTR [rsi],dh
   14000f06d:	jae    0x14000f06f
   14000f06f:	add    al,al
   14000f071:	add    BYTE PTR [rax],al
   14000f073:	add    BYTE PTR [rsi],al
   14000f075:	movsxd eax,DWORD PTR [rax]
   14000f077:	add    al,al
   14000f079:	add    BYTE PTR [rax],al
   14000f07b:	add    BYTE PTR [rsi],dh
   14000f07d:	(bad)  
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	rol    BYTE PTR [rax],0x0
   14000f083:	add    BYTE PTR [rsi],dh
   14000f085:	(bad)  
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	rol    BYTE PTR [rax],0x0
   14000f08b:	add    BYTE PTR [rsi],al
   14000f08d:	sldt   WORD PTR [rax]
   14000f090:	rol    BYTE PTR [rax],0x0
   14000f093:	add    BYTE PTR [rsi],dh
   14000f095:	(bad)  
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	rol    BYTE PTR [rax],0x0
   14000f09b:	add    BYTE PTR [rsi],dh
   14000f09d:	(bad)  
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	rol    BYTE PTR [rax],0x0
   14000f0a3:	add    BYTE PTR [rsi],al
   14000f0a5:	jg     0x14000f0a7
   14000f0a7:	add    al,al
   14000f0a9:	add    BYTE PTR [rax],al
   14000f0ab:	add    dh,bh
   14000f0ad:	jg     0x14000f0af
   14000f0af:	add    al,ah
   14000f0b1:	add    BYTE PTR [rax],al
   14000f0b3:	add    dh,bh
   14000f0b5:	inc    DWORD PTR [rax]
   14000f0b7:	add    al,dh
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    bh,bh
   14000f0bd:	inc    DWORD PTR [rax]
   14000f0bf:	add    dh,bh
   14000f0c1:	add    BYTE PTR [rax],al
   14000f0c3:	add    bh,bh
   14000f0c5:	inc    DWORD PTR [rax]
   14000f0c7:	add    bh,bh
   14000f0c9:	loopne 0x14000f0cb
   14000f0cb:	add    bh,bh
   14000f0cd:	inc    DWORD PTR [rax]
   14000f0cf:	add    bh,bh
   14000f0d1:	cld    
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	(bad)  
   14000f0d5:	inc    DWORD PTR [rax]
   14000f0d7:	add    bh,bh
   14000f0d9:	inc    DWORD PTR [rax+0xffff00]
   14000f0df:	add    bh,bh
   14000f0e1:	push   rax
   14000f0e3:	add    bh,bh
   14000f0e5:	inc    DWORD PTR [rax]
   14000f0e7:	add    bh,bh
   14000f0e9:	(bad)  
   14000f0ea:	inc    BYTE PTR [rcx]
   14000f0ec:	(bad)  
   14000f0ed:	inc    DWORD PTR [rax]
   14000f0ef:	add    bh,bh
   14000f0f1:	(bad)  
   14000f0f2:	(bad)  
   14000f0f3:	(bad)  
   14000f0f4:	(bad)  
   14000f0f5:	inc    DWORD PTR [rax]
   14000f0f7:	add    BYTE PTR [rax],ch
   14000f0f9:	add    BYTE PTR [rax],al
   14000f0fb:	add    BYTE PTR [rax],ah
   14000f0fd:	add    BYTE PTR [rax],al
   14000f0ff:	add    BYTE PTR [rax+0x0],al
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	add    DWORD PTR [rax],eax
   14000f106:	add    al,0x0
   14000f108:	add    BYTE PTR [rax],al
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	add    BYTE PTR [rdx],al
	...
   14000f126:	add    BYTE PTR [rax],0x0
   14000f129:	add    BYTE PTR [rax],0x0
   14000f12c:	add    BYTE PTR [rax+0x800080],al
   14000f132:	add    BYTE PTR [rax],al
   14000f134:	add    BYTE PTR [rax],0x80
   14000f137:	add    BYTE PTR [rax-0x7fffff80],al
   14000f13d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000f144:	add    BYTE PTR [rax],al
   14000f146:	inc    DWORD PTR [rax]
   14000f148:	add    bh,bh
   14000f14a:	add    BYTE PTR [rax],al
   14000f14c:	add    bh,bh
   14000f14e:	inc    DWORD PTR [rax]
   14000f150:	inc    DWORD PTR [rax]
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	inc    DWORD PTR [rax]
   14000f156:	inc    DWORD PTR [rax]
   14000f158:	(bad)  
   14000f159:	inc    DWORD PTR [rax]
   14000f15b:	add    bh,bh
   14000f15d:	(bad)  
   14000f15e:	inc    DWORD PTR [rax]
   14000f160:	add    BYTE PTR [rdi],al
   14000f162:	ja     0x14000f0e4
	...
   14000f170:	add    BYTE PTR [rax-0x79],bh
   14000f173:	div    DWORD PTR [rdi+0x77]
   14000f176:	ja     0x14000f178
	...
   14000f180:	(bad)  
   14000f181:	xchg   DWORD PTR [rdi-0x77f88878],eax
   14000f187:	xchg   DWORD PTR [rax],eax
   14000f189:	add    BYTE PTR [rax],al
   14000f18b:	add    BYTE PTR [rax],al
   14000f18d:	add    BYTE PTR [rax],al
   14000f18f:	add    BYTE PTR [rax],cl
   14000f191:	xchg   DWORD PTR [rdi+0x77877888],eax
   14000f197:	mov    BYTE PTR [rdi+0x0],dh
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	add    BYTE PTR [rax],al
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	(bad)  
   14000f1a1:	xchg   DWORD PTR [rax-0x78877878],ecx
   14000f1a7:	ja     0x14000f131
   14000f1a9:	xchg   DWORD PTR [rax],eax
   14000f1ab:	add    BYTE PTR [rax],al
   14000f1ad:	add    BYTE PTR [rax],al
   14000f1af:	add    BYTE PTR [rdi],al
   14000f1b1:	mov    BYTE PTR [rdi+0x78887888],al
   14000f1b7:	xchg   DWORD PTR [rdi-0x78],esi
   14000f1ba:	jo     0x14000f1bc
   14000f1bc:	add    BYTE PTR [rax],al
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	or     BYTE PTR [rdi+0x78888788],al
   14000f1c6:	mov    BYTE PTR [rax+0x707787],cl
   14000f1cc:	add    BYTE PTR [rax],al
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	(bad)  
   14000f1d1:	mov    BYTE PTR [rdi+0x787878f7],al
   14000f1d7:	mov    BYTE PTR [rax+0x707676],cl
   14000f1dd:	add    BYTE PTR [rax],al
   14000f1df:	add    BYTE PTR [rax],cl
   14000f1e1:	mov    BYTE PTR [rax-0x78878778],cl
   14000f1e7:	mov    BYTE PTR [rsi+0x70e7ecec],al
   14000f1ed:	add    BYTE PTR [rax],al
   14000f1ef:	add    BYTE PTR [rdi],al
   14000f1f1:	test   DWORD PTR [rdi-0x78888778],0x66677e87
   14000f1fb:	(bad)  
   14000f1fc:	enter  0x0,0x0
   14000f200:	(bad)  
   14000f201:	div    edi
   14000f203:	mov    BYTE PTR [rax-0x79],bh
   14000f206:	mov    BYTE PTR [rax-0x72],bh
   14000f209:	(bad)  
   14000f20a:	(bad)  
   14000f20b:	jbe    0x14000f1f3
   14000f20d:	add    BYTE PTR [rax],al
   14000f20f:	add    BYTE PTR [rax],cl
   14000f211:	mov    BYTE PTR [rax+0x78888788],cl
   14000f217:	xchg   DWORD PTR [rax-0x1a],ebp
   14000f21a:	out    0xce,eax
   14000f21c:	mov    DWORD PTR [rax],0xf7070000
   14000f222:	test   DWORD PTR [rax+0x7074778],0x66cee768
   14000f22c:	out    0x0,al
   14000f22e:	add    BYTE PTR [rax],al
   14000f230:	or     BYTE PTR [rax+0x78878888],cl
   14000f236:	ja     0x14000f21f
   14000f238:	(bad)  
   14000f239:	mov    cs,WORD PTR [rsi+0x7000c7ce]
   14000f23f:	add    BYTE PTR [rdi],al
   14000f241:	test   DWORD PTR [rax+0x27748887],0xe867768e
   14000f24b:	call   0x14087f336
   14000f250:	or     BYTE PTR [rax+0x7f878887],cl
   14000f256:	pop    rsi
   14000f257:	jle    0x14000f2d0
   14000f259:	in     al,dx
   14000f25a:	pop    rax
   14000f25b:	push   rax
   14000f25c:	jle    0x14000f25e
   14000f25e:	(bad)  
   14000f25f:	add    BYTE PTR [rdi],al
   14000f261:	test   DWORD PTR [rax+0x67438888],0x67c8e8ec
   14000f26b:	(bad)  
   14000f26c:	in     al,dx
   14000f26d:	add    BYTE PTR [rsi],cl
   14000f26f:	jo     0x14000f278
   14000f271:	mov    BYTE PTR [rdi+0x4e7f8888],al
   14000f277:	js     0x14000f2d7
   14000f279:	jbe    0x14000f293
   14000f27b:	jo     0x14000f2fb
   14000f27d:	add    BYTE PTR [rax+rsi*2],cl
   14000f280:	or     BYTE PTR [rdi+0x61888888],al
   14000f286:	jbe    0x14000f250
   14000f288:	in     eax,0x75
   14000f28a:	(bad)  
   14000f28b:	xchg   BYTE PTR [rax],al
   14000f28e:	(bad)  
   14000f28f:	jo     0x14000f298
   14000f291:	mov    BYTE PTR [rdi+0x477f88f8],al
   14000f297:	and    al,0x16
   14000f299:	add    bl,BYTE PTR [rdi+0x30]
   14000f29c:	in     al,dx
   14000f29d:	add    BYTE PTR [rsi],cl
   14000f29f:	push   rax
   14000f2a0:	or     BYTE PTR [rbx-0x79],dh
   14000f2a3:	mov    BYTE PTR [rax+0x77987552],cl
   14000f2a9:	(bad)  
   14000f2aa:	xor    al,0x70
   14000f2ac:	mov    es,WORD PTR [rax]
   14000f2ae:	(bad)  
   14000f2af:	add    BYTE PTR [rdi],al
   14000f2b1:	movabs ds:0x9b8676577f888f88,eax
   14000f2ba:	rex.WRXB jo 0x14000f324
   14000f2bd:	add    BYTE PTR [rsi+0x0],bh
   14000f2c0:	or     BYTE PTR [rdx],dh
   14000f2c2:	js     0x14000f24c
   14000f2c4:	mov    BYTE PTR [rsi+0x3e],dh
   14000f2c7:	xchg   edi,eax
   14000f2c9:	mov    bh,0x53
   14000f2cb:	rex mov cs,WORD PTR [rax]
   14000f2ce:	out    0x0,eax
   14000f2d0:	(bad)  
   14000f2d1:	je     0x14000f34b
   14000f2d3:	(bad)  
   14000f2d7:	mov    es,WORD PTR [rdi+0x7e703f77]
   14000f2dd:	jle    0x14000f25f
   14000f2df:	add    BYTE PTR [rdi],al
   14000f2e1:	ja     0x14000f35a
   14000f2e3:	clc    
   14000f2e4:	mov    BYTE PTR [rsi+0x77],dh
   14000f2e7:	call   0x140486b7a
   14000f2ec:	mov    cs,WORD PTR [rsi+0x77080000]
   14000f2f2:	js     0x14000f2ec
   14000f2f4:	clc    
   14000f2f5:	js     0x14000f375
   14000f2f7:	mov    cs,WORD PTR [rax+0x78704fe8]
   14000f2fd:	loopne 0x14000f2ff
   14000f2ff:	add    BYTE PTR [rax],al
   14000f301:	mov    BYTE PTR [rax+0x3574ffff],cl
   14000f307:	push   rsi
   14000f308:	push   rsi
   14000f309:	push   rsp
   14000f30a:	(bad)  
   14000f30b:	rex call 0x14000f311
   14000f311:	add    BYTE PTR [rax-0x78],cl
   14000f317:	(bad)  
   14000f31b:	add    BYTE PTR [rsi+0x0],bh
   14000f31e:	add    BYTE PTR [rax],al
   14000f320:	add    BYTE PTR [rax],al
   14000f322:	add    BYTE PTR [rax],cl
   14000f324:	mov    BYTE PTR [rax-0x1],cl
   14000f32a:	mov    BYTE PTR [rax],al
   14000f32c:	add    BYTE PTR [rax],0x0
   14000f32f:	add    BYTE PTR [rax],al
   14000f331:	add    BYTE PTR [rax],al
   14000f333:	add    BYTE PTR [rax],al
   14000f335:	or     BYTE PTR [rax-0x77000071],cl
	...
   14000f343:	add    BYTE PTR [rax],al
   14000f345:	add    BYTE PTR [rax],cl
   14000f347:	mov    BYTE PTR [rax+0x8088],cl
	...
   14000f355:	add    BYTE PTR [rax],al
   14000f357:	add    BYTE PTR [rax],cl
   14000f359:	pop    QWORD PTR [rax]
   14000f35b:	add    BYTE PTR [rax],al
   14000f35d:	add    BYTE PTR [rax],al
   14000f35f:	add    cl,ah
   14000f361:	(bad)  
   14000f362:	(bad)  
   14000f363:	inc    eax
   14000f365:	add    edi,edi
   14000f367:	inc    DWORD PTR [rax-0x7f000100]
   14000f36d:	add    BYTE PTR [rdi],bh
   14000f36f:	inc    DWORD PTR [rax-0x7f00f100]
   14000f375:	add    BYTE PTR [rdi],al
   14000f377:	inc    DWORD PTR [rax-0x7f00f900]
   14000f37d:	add    BYTE PTR [rcx],al
   14000f37f:	inc    DWORD PTR [rax-0x7f810000]
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	(bad)  
   14000f388:	add    BYTE PTR [rax],0x0
   14000f38b:	(bad)  
   14000f38c:	add    BYTE PTR [rax],0x0
   14000f38f:	(bad)  
   14000f390:	add    BYTE PTR [rax],0x0
   14000f393:	(bad)  
   14000f394:	add    BYTE PTR [rax],0x0
   14000f397:	(bad)  
   14000f398:	add    BYTE PTR [rax],0x0
   14000f39b:	xor    eax,DWORD PTR [rax-0x7fc4ff00]
   14000f3a1:	add    BYTE PTR [rcx],al
   14000f3a3:	cmp    DWORD PTR [rax-0x7fc6ff00],eax
   14000f3a9:	add    BYTE PTR [rcx],al
   14000f3ab:	cmp    DWORD PTR [rax-0x7fc6ff00],eax
   14000f3b1:	add    BYTE PTR [rcx],al
   14000f3b3:	cmp    eax,DWORD PTR [rax-0x7fccff00]
   14000f3b9:	add    BYTE PTR [rcx],al
   14000f3bb:	and    eax,DWORD PTR [rax-0x7ff8ff00]
   14000f3c1:	add    BYTE PTR [rcx],al
   14000f3c3:	jo     0x1001ff4c9
   14000f3c9:	add    BYTE PTR [rcx],al
   14000f3cb:	(bad)  
   14000f3cc:	lock add BYTE PTR [rbx],al
   14000f3cf:	(bad)  
   14000f3d0:	inc    BYTE PTR [rax]
   14000f3d2:	add    edi,DWORD PTR [rdi-0x1]
   14000f3d5:	loopne 0x14000f3da
   14000f3d7:	(bad)  
   14000f3d8:	(bad)  
   14000f3d9:	clc    
   14000f3da:	(bad)  
   14000f3db:	(bad)  
   14000f3dc:	(bad)  
   14000f3dd:	dec    DWORD PTR [rdi+0x28ff]
   14000f3e3:	add    BYTE PTR [rax],dl
   14000f3e5:	add    BYTE PTR [rax],al
   14000f3e7:	add    BYTE PTR [rax],ah
   14000f3e9:	add    BYTE PTR [rax],al
   14000f3eb:	add    BYTE PTR [rcx],al
   14000f3ed:	add    BYTE PTR [rax+rax*1],al
   14000f3f0:	add    BYTE PTR [rax],al
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	add    BYTE PTR [rax],0x0
	...
   14000f40b:	add    BYTE PTR [rax],al
   14000f40d:	add    BYTE PTR [rax+0x800000],al
   14000f413:	add    BYTE PTR [rax],al
   14000f415:	add    BYTE PTR [rax+0x8000],0x0
   14000f41c:	add    BYTE PTR [rax],0x80
   14000f41f:	add    BYTE PTR [rax-0x7fffff80],al
   14000f425:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000f42c:	add    BYTE PTR [rax],al
   14000f42e:	inc    DWORD PTR [rax]
   14000f430:	add    bh,bh
   14000f432:	add    BYTE PTR [rax],al
   14000f434:	add    bh,bh
   14000f436:	inc    DWORD PTR [rax]
   14000f438:	inc    DWORD PTR [rax]
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	inc    DWORD PTR [rax]
   14000f43e:	inc    DWORD PTR [rax]
   14000f440:	(bad)  
   14000f441:	inc    DWORD PTR [rax]
   14000f443:	add    bh,bh
   14000f445:	(bad)  
   14000f446:	inc    DWORD PTR [rax]
   14000f448:	or     BYTE PTR [rdi-0x78],dh
   14000f44b:	add    BYTE PTR [rax],al
   14000f44d:	add    BYTE PTR [rax],al
   14000f44f:	add    BYTE PTR [rax+0x808888],cl
   14000f455:	outs   dx,BYTE PTR ds:[rsi]
   14000f456:	jo     0x14000f458
   14000f458:	js     0x14000f3e1
   14000f45a:	mov    BYTE PTR [rax+0x7],dh
   14000f45d:	in     al,dx
   14000f45e:	outs   dx,BYTE PTR ds:[rsi]
   14000f45f:	add    BYTE PTR [rax+0x7e707087],cl
   14000f465:	(bad)  
   14000f466:	mov    DWORD PTR [rax],0x776f877f
   14000f46c:	in     al,dx
   14000f46d:	outs   dx,BYTE PTR ds:[rsi]
   14000f46e:	outs   dx,BYTE PTR ds:[rsi]
   14000f46f:	add    BYTE PTR [rax-0x79],bh
   14000f472:	push   rdx
   14000f473:	jle    0x14000f4ec
   14000f475:	data16 jl 0x14000f478
   14000f478:	mov    bh,dh
   14000f47a:	(bad)  
   14000f47b:	ins    BYTE PTR es:[rdi],dx
   14000f47c:	out    0xf5,eax
   14000f47e:	(bad)  
   14000f47f:	(bad)  
   14000f480:	jg     0x14000f409
   14000f482:	rex.RXB push r15
   14000f484:	push   rsi
   14000f485:	(bad)  
   14000f486:	(bad)  
   14000f487:	or     al,0x88
   14000f489:	mov    BYTE PTR [rdi],ch
   14000f48b:	ja     0x14000f504
   14000f48d:	hlt    
   14000f48e:	(bad)  
   14000f48f:	(bad)  
   14000f490:	jg     0x14000f419
   14000f492:	push   rdx
   14000f493:	js     0x14000f50c
   14000f495:	(bad)  
   14000f496:	(bad)  
   14000f497:	jle    0x14000f421
   14000f499:	xchg   DWORD PTR [rdi+0x7e],edi
   14000f49c:	xchg   esi,esi
   14000f49e:	(bad)  
   14000f49f:	sar    BYTE PTR [rdi+0x3a],0x41
   14000f4a3:	gs fs xor al,0xe
   14000f4a7:	add    BYTE PTR [rax+0x800800],cl
   14000f4ad:	add    BYTE PTR [rax],al
   14000f4af:	add    BYTE PTR [rax+0x707877],cl
   14000f4b5:	add    BYTE PTR [rax],al
   14000f4b7:	add    BYTE PTR [rax+0x808888],cl
   14000f4bd:	add    BYTE PTR [rax],al
   14000f4bf:	add    BYTE PTR [rax],cl
   14000f4c1:	mov    BYTE PTR [rax+0x0],cl
   14000f4c7:	add    BYTE PTR [rbx+0x10000ff],al
   14000f4cd:	mov    DWORD PTR [rax],0x830100
   14000f4d3:	add    BYTE PTR [rax],al
   14000f4d5:	add    eax,DWORD PTR [rax]
   14000f4d7:	add    BYTE PTR [rax],al
   14000f4d9:	add    eax,DWORD PTR [rax]
   14000f4db:	add    BYTE PTR [rax],al
   14000f4dd:	add    eax,DWORD PTR [rax]
   14000f4df:	add    BYTE PTR [rax],al
   14000f4e1:	or     al,BYTE PTR [rax]
   14000f4e3:	add    BYTE PTR [rax],al
   14000f4e5:	or     al,BYTE PTR [rax]
   14000f4e7:	add    BYTE PTR [rax],al
   14000f4e9:	or     al,BYTE PTR [rax]
   14000f4eb:	add    BYTE PTR [rax],al
   14000f4ed:	or     BYTE PTR [rax],al
   14000f4ef:	add    BYTE PTR [rax],al
   14000f4f1:	or     DWORD PTR [rax],eax
   14000f4f3:	add    BYTE PTR [rax],al
   14000f4f5:	or     eax,DWORD PTR [rax]
   14000f4f7:	add    BYTE PTR [rcx],al
   14000f4f9:	inc    DWORD PTR [rax]
   14000f4fb:	add    BYTE PTR [rcx],al
   14000f4fd:	inc    DWORD PTR [rax]
   14000f4ff:	add    BYTE PTR [rcx],al
   14000f501:	inc    DWORD PTR [rax]
   14000f503:	add    BYTE PTR [rbx+0x280000ff],al
   14000f509:	add    BYTE PTR [rax],al
   14000f50b:	add    BYTE PTR [rax],dh
   14000f50d:	add    BYTE PTR [rax],al
   14000f50f:	add    BYTE PTR [rax+0x0],ah
   14000f512:	add    BYTE PTR [rax],al
   14000f514:	add    DWORD PTR [rax],eax
   14000f516:	or     BYTE PTR [rax],al
   14000f518:	add    BYTE PTR [rax],al
   14000f51a:	add    BYTE PTR [rax],al
   14000f51c:	add    BYTE PTR [rcx],cl
	...
   14000f526:	add    BYTE PTR [rax],al
   14000f528:	add    BYTE PTR [rcx],al
   14000f52a:	add    BYTE PTR [rax],al
   14000f52c:	add    BYTE PTR [rcx],al
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	add    BYTE PTR [rax],al
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	sbb    edx,DWORD PTR [rdx]
   14000f536:	or     BYTE PTR [rax],al
   14000f538:	add    BYTE PTR [rax+rbx*1],al
   14000f53b:	add    BYTE PTR [rsp+rdx*1],dl
   14000f53e:	adc    eax,0x1a292c00
   14000f543:	add    BYTE PTR [rdx],bh
   14000f545:	sub    ebx,DWORD PTR [rax+rax*1]
   14000f548:	add    BYTE PTR [rax],al
   14000f54a:	and    eax,0x26222900
   14000f54f:	add    BYTE PTR [rip+0x2a002d33],bh        # 0x16a012288
   14000f555:	sub    esi,DWORD PTR [rbx]
   14000f557:	add    BYTE PTR [rdx],bh
   14000f559:	cmp    bh,BYTE PTR [rbx]
   14000f55b:	add    BYTE PTR [rax+0x28],cl
   14000f55e:	(bad)  
   14000f55f:	add    BYTE PTR [rbx+0x38],cl
   14000f562:	sbb    al,0x0
   14000f564:	adc    eax,DWORD PTR [rax+riz*1+0x0]
   14000f568:	(bad)  
   14000f569:	rex.X (bad) 
   14000f56b:	add    BYTE PTR [rbp+0x4e],ah
   14000f56e:	sub    al,0x0
   14000f570:	jle    0x14000f5d0
   14000f572:	add    BYTE PTR ss:[rax],bl
   14000f575:	sub    ecx,DWORD PTR [rsi+0x0]
   14000f578:	sub    eax,0x9004020
   14000f57d:	(bad)  
   14000f57e:	(bad)  
   14000f57f:	add    BYTE PTR [rsi+0x2d],al
   14000f582:	jae    0x14000f584
   14000f584:	and    al,0x41
   14000f586:	rex.WR add BYTE PTR [rdi],r15b
   14000f589:	rex.X
   14000f58a:	rex.WXB add BYTE PTR [r14+r15*2],bl
   14000f58e:	rex.WR add BYTE PTR [rsi+rdi*2],r12b
   14000f592:	push   rdi
   14000f593:	add    BYTE PTR [rbx],ah
   14000f595:	rex.B
   14000f596:	data16 add BYTE PTR [rbp+0x47],al
   14000f59a:	rex.W add BYTE PTR [rsi+0x4b],dl
   14000f59e:	add    BYTE PTR [rax+0x51],r11b
   14000f5a2:	rex.WR add BYTE PTR [rsi+0x56],r10b
   14000f5a6:	push   rsi
   14000f5a7:	add    BYTE PTR [rsi+0x5c],bl
   14000f5aa:	push   rbx
   14000f5ab:	add    BYTE PTR [rbx+0x5b],bl
   14000f5ae:	pop    rbx
   14000f5af:	add    BYTE PTR [rsi+0x40],ah
   14000f5b2:	rex.WXB add BYTE PTR [r9+0x48],sil
   14000f5b6:	rex.WRX add BYTE PTR [rbx+0x58],r12b
   14000f5ba:	pop    rax
   14000f5bb:	add    BYTE PTR [rbp+0x6c],ah
   14000f5be:	pop    rcx
   14000f5bf:	add    BYTE PTR [rdi+0x69],dh
   14000f5c2:	pop    rdx
   14000f5c3:	add    BYTE PTR [rcx+0x49],al
   14000f5c6:	jle    0x14000f5c8
   14000f5c8:	jnp    0x14000f628
   14000f5ca:	jnp    0x14000f5cc
   14000f5cc:	rex.WRX
   14000f5cd:	outs   dx,DWORD PTR ds:[esi]
   14000f5cf:	add    BYTE PTR [rbp+0x68],dl
   14000f5d2:	jno    0x14000f5d4
   14000f5d4:	rex.WB jnp 0x14000f64c
   14000f5d7:	add    BYTE PTR [rsp+riz*2+0x64],ah
   14000f5db:	add    BYTE PTR [rax+0x62],ch
   14000f5de:	data16 add BYTE PTR [rsp+rbp*2+0x6c],ch
   14000f5e3:	add    BYTE PTR [rdi+0x71],dh
   14000f5e6:	ins    DWORD PTR es:[rdi],dx
   14000f5e7:	add    BYTE PTR [rdx+rdi*2+0x7a],ah
   14000f5eb:	add    BYTE PTR [rbx+0x73],dh
   14000f5ee:	jae    0x14000f5f0
   14000f5f0:	jnp    0x14000f66a
   14000f5f2:	jne    0x14000f5f4
   14000f5f4:	jge    0x14000f672
   14000f5f6:	jl     0x14000f5f8
   14000f5f8:	xchg   BYTE PTR [rbp+0x14],bl
   14000f5fb:	add    BYTE PTR [rcx-0x43ffff95],bh
   14000f601:	jne    0x14000f60b
   14000f603:	add    BYTE PTR [rbp-0x49ffc697],cl
   14000f609:	jl     0x14000f638
   14000f60b:	add    BYTE PTR [rdi+rsi*2+0x7eb30038],ah
   14000f612:	xor    BYTE PTR [rax],al
   14000f614:	ret    
   14000f615:	jnp    0x14000f623
   14000f617:	add    BYTE PTR [rsp+rbx*2+0x6885005f],dl
   14000f61e:	rex.WB add BYTE PTR [r11-0x73ffae96],bl
   14000f625:	jne    0x14000f67f
   14000f627:	add    BYTE PTR [rcx-0x53ffa289],bl
   14000f62d:	jno    0x14000f674
   14000f62f:	add    BYTE PTR [rdx-0x4bffa987],ah
   14000f635:	jge    0x14000f689
   14000f637:	add    BYTE PTR [rax-0x61ff9aa8],dl
   14000f63d:	ins    BYTE PTR es:[rdi],dx
   14000f63e:	(bad)  
   14000f63f:	add    BYTE PTR [rcx-0x6fff9986],cl
   14000f645:	push   0x76
   14000f647:	add    BYTE PTR [rax-0x55ff8181],al
   14000f64d:	jp     0x14000f6b6
   14000f64f:	add    BYTE PTR [rax],al
   14000f651:	stos   DWORD PTR es:[rdi],eax
   14000f652:	pop    rax
   14000f653:	add    BYTE PTR [rip+0x390060a3],al        # 0x1790156fc
   14000f659:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f65a:	jae    0x14000f65c
   14000f65c:	push   rax
   14000f65d:	(bad)  
   14000f65e:	imul   eax,DWORD PTR [rax],0x59
   14000f661:	fwait
   14000f662:	js     0x14000f664
   14000f664:	imul   eax,DWORD PTR [rbx-0x7f8cff96],0x9470006a
   14000f66e:	outs   dx,BYTE PTR ds:[rsi]
   14000f66f:	add    BYTE PTR [rcx-0x7e],ch
   14000f672:	jge    0x14000f674
   14000f674:	jle    0x14000f5fc
   14000f676:	jo     0x14000f678
   14000f678:	(bad)  
   14000f679:	(bad)  
   14000f67a:	jbe    0x14000f67c
   14000f67c:	add    al,ch
   14000f67e:	jns    0x14000f680
   14000f680:	mov    ch,0x81
   14000f682:	(bad)  
   14000f683:	add    BYTE PTR [rdi-0x48ffc177],ch
   14000f689:	xchg   DWORD PTR [rcx],esi
   14000f68b:	add    ah,cl
   14000f68d:	(bad)  
   14000f68e:	(bad)  
   14000f68f:	add    bl,dl
   14000f691:	or     DWORD PTR [rbx],0xf97de00
   14000f697:	add    ch,cl
   14000f699:	test   BYTE PTR [rcx],dl
   14000f69b:	add    ah,dl
   14000f69d:	mov    WORD PTR [rip+0x1894da00],ss        # 0x15895d0a3
   14000f6a3:	add    ch,ch
   14000f6a5:	pushf  
   14000f6a6:	or     al,BYTE PTR [rax]
   14000f6a8:	jrcxz  0x14000f643
   14000f6aa:	adc    eax,0x1ba6e700
   14000f6af:	add    bh,dh
   14000f6b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f6b2:	(bad)  
   14000f6b3:	add    dh,bh
   14000f6b5:	mov    edx,0x8fcf0018
   14000f6ba:	sub    DWORD PTR [rax],eax
   14000f6bc:	(bad)  
   14000f6bd:	cwde   
   14000f6be:	sub    al,BYTE PTR [rax]
   14000f6c0:	(bad)
   14000f6c3:	add    al,cl
   14000f6c5:	(bad)  
   14000f6c6:	(bad)  
   14000f6c7:	add    dh,dl
   14000f6c9:	cdq    
   14000f6ca:	ss add cl,ah
   14000f6cd:	cwde   
   14000f6ce:	cs add ch,ah
   14000f6d1:	cdq    
   14000f6d2:	xor    al,BYTE PTR [rax]
   14000f6d4:	fsub   QWORD PTR [rax-0x5c37ffd3]
   14000f6da:	cmp    eax,0x2ba5e600
   14000f6df:	add    bh,dh
   14000f6e1:	scas   al,BYTE PTR es:[rdi]
   14000f6e2:	(bad)  
   14000f6e3:	add    al,ch
   14000f6e5:	test   al,0x39
   14000f6e7:	add    ah,dh
   14000f6e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f6ea:	xor    al,0x0
   14000f6ec:	clc    
   14000f6ed:	mov    dh,0x38
   14000f6ef:	add    bh,bh
   14000f6f1:	(bad)  
   14000f6f2:	(bad)  
   14000f6f3:	add    bh,bh
   14000f6f5:	(bad)  
   14000f6f6:	(bad)  
   14000f6f7:	add    BYTE PTR [rdi-0x52ffae76],dl
   14000f6fd:	xchg   DWORD PTR [rcx+0x0],ecx
   14000f700:	mov    ecx,0xb4004788
   14000f705:	xchg   edx,eax
   14000f706:	add    BYTE PTR [r11-0x46ffa37e],r14b
   14000f70d:	xchg   esp,eax
   14000f70e:	pop    rdi
   14000f70f:	add    BYTE PTR [rsi-0x74ff9b71],dl
   14000f715:	lahf   
   14000f716:	imul   eax,DWORD PTR [rax],0xffffff85
   14000f719:	cmp    DWORD PTR [rdi+0x0],0xffffff8e
   14000f71d:	xchg   DWORD PTR [rdi+0x0],edi
   14000f720:	xchg   edi,eax
   14000f721:	xchg   DWORD PTR [rax+rax*1-0x43],esi
   14000f725:	cdq    
   14000f726:	add    BYTE PTR [ebp-0x39ff8576],dh
   14000f72d:	pop    QWORD PTR [rax+0x0]
   14000f730:	(bad)  
   14000f731:	cwde   
   14000f732:	rex.WB add r12b,dl
   14000f735:	xchg   esi,eax
   14000f736:	add    cl,r9b
   14000f739:	xchg   esp,eax
   14000f73a:	push   rsp
   14000f73b:	add    bl,bl
   14000f73d:	sahf   
   14000f73e:	push   rbx
   14000f73f:	add    cl,ah
   14000f741:	adc    DWORD PTR [rdx+0x0],0x41a0c8
   14000f748:	fild   QWORD PTR [rbp-0x5c3bffb1]
   14000f74e:	pop    rax
   14000f74f:	add    bl,bl
   14000f751:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f752:	pop    rdx
   14000f753:	add    dl,ch
   14000f755:	test   al,0x44
   14000f757:	add    dh,dh
   14000f759:	lods   eax,DWORD PTR ds:[rsi]
   14000f75a:	add    bl,r13b
   14000f75d:	mov    ah,0x44
   14000f75f:	add    ah,bh
   14000f761:	mov    bh,0x46
   14000f763:	add    bh,ah
   14000f765:	lods   al,BYTE PTR ds:[rsi]
   14000f766:	push   rbx
   14000f767:	add    al,ch
   14000f769:	mov    al,0x59
   14000f76b:	add    dl,dh
   14000f76d:	mov    eax,0xafdb0053
   14000f772:	push   0x0
   14000f774:	fidiv  DWORD PTR [rax-0x5a39ff9c]
   14000f77a:	jp     0x14000f77c
   14000f77c:	shr    BYTE PTR [rax-0x4819ff89],1
   14000f782:	imul   eax,DWORD PTR [rax],0x65baf7
   14000f788:	out    dx,al
   14000f789:	mov    esi,0xc7fe0072
   14000f78e:	rex.WXB add r15b,bpl
   14000f791:	rcr    BYTE PTR [rdx+0x0],0xf8
   14000f795:	(bad)
   14000f798:	sti    
   14000f799:	(bad)
   14000f79c:	cli    
   14000f79d:	(bad)  
   14000f79e:	data16 add ch,dh
   14000f7a1:	ret    
   14000f7a2:	jae    0x14000f7a4
   14000f7a4:	(bad)  
   14000f7a5:	(bad)  
   14000f7a6:	jno    0x14000f7a8
   14000f7a8:	cmp    BYTE PTR [rdi],bl
   14000f7aa:	cwde   
   14000f7ab:	add    BYTE PTR [rdi],bl
   14000f7ad:	rex.RXB test DWORD PTR [r8],r8d
   14000f7b0:	sbb    DWORD PTR [rdi-0x59],ebp
   14000f7b3:	add    BYTE PTR [rax],ch
   14000f7b5:	imul   esi,DWORD PTR [rcx-0x63bcaf00],0x0
   14000f7bc:	rex.WRXB pop r13
   14000f7be:	popf   
   14000f7bf:	add    BYTE PTR [rbp+0x6b],cl
   14000f7c2:	test   DWORD PTR [rax],eax
   14000f7c4:	jp     0x14000f82c
   14000f7c6:	pop    QWORD PTR [rax]
   14000f7c8:	push   0x51009b76
   14000f7cd:	(bad)  
   14000f7ce:	mov    bl,0x0
   14000f7d0:	pop    rcx
   14000f7d1:	js     0x14000f78c
   14000f7d3:	add    BYTE PTR [rdx+0x3f],cl
   14000f7d6:	loop   0x14000f7d8
   14000f7d8:	sub    eax,0x5800e876
   14000f7dd:	push   rbx
   14000f7de:	out    dx,al
   14000f7df:	add    BYTE PTR [rdx+0x61],ah
   14000f7e2:	clc    
   14000f7e3:	add    BYTE PTR [rdi-0x63],ch
   14000f7e6:	xchg   BYTE PTR [rax],al
   14000f7e8:	movsxd eax,DWORD PTR [rcx-0x7b9bff56]
   14000f7ee:	mov    ch,0x0
   14000f7f0:	push   rdi
   14000f7f1:	movabs eax,ds:0x805900c3876f00af
   14000f7fa:	sti    
   14000f7fb:	add    BYTE PTR [rsi+rcx*8-0xd],al
   14000f7ff:	add    BYTE PTR [rbp-0x3f],dh
   14000f802:	in     eax,0x0
   14000f804:	test   DWORD PTR [rsp+rax*4-0x7c7b7800],eax
   14000f80b:	add    BYTE PTR [rcx-0x73ff7978],cl
   14000f811:	mov    WORD PTR [rbx-0x72717000],cs
   14000f817:	add    BYTE PTR [rbx-0x6eff7270],dl
   14000f81d:	(bad)  
   14000f81e:	nop
   14000f81f:	add    BYTE PTR [rdx+rdx*4-0x6966ff6d],dl
   14000f826:	xchg   esp,eax
   14000f827:	add    BYTE PTR [rax-0x64ff6f63],dl
   14000f82d:	cwde   
   14000f82e:	xchg   edi,eax
   14000f82f:	add    BYTE PTR [rdi+rdx*4-0x6362ff68],bl
   14000f836:	pushf  
   14000f837:	add    BYTE PTR [rdx-0x5dff7061],ch
   14000f83d:	popf   
   14000f83e:	pushf  
   14000f83f:	add    BYTE PTR [rbp-0x73ff7d49],bl
   14000f845:	test   eax,0xab990096
   14000f84a:	xchg   esi,eax
   14000f84b:	add    BYTE PTR [rax+rbp*4-0x5d59ff74],ah
   14000f852:	lahf   
   14000f853:	add    BYTE PTR [rcx-0x6eff567c],ah
   14000f859:	stos   BYTE PTR es:[rdi],al
   14000f85a:	movabs eax,ds:0xa4a5ab00a3a3a300
   14000f863:	add    BYTE PTR [rbx-0x55ff5b55],ch
   14000f869:	stos   BYTE PTR es:[rdi],al
   14000f86a:	stos   BYTE PTR es:[rdi],al
   14000f86b:	add    BYTE PTR [rcx-0x48ff5455],dh
   14000f871:	mov    al,0xaf
   14000f873:	add    BYTE PTR [rax-0x4bff4e51],dh
   14000f879:	mov    bl,0xb3
   14000f87b:	add    BYTE PTR [rbx-0x4cff4b4b],bh
   14000f881:	mov    ebx,0xb6bb00b2
   14000f886:	mov    ecx,0xb8b8b700
   14000f88b:	add    BYTE PTR [rsp+rdi*4-0x5735ff45],bh
   14000f892:	mov    DWORD PTR [rax],eax
   14000f894:	(bad)  
   14000f895:	mov    dh,0x8b
   14000f897:	add    bl,dl
   14000f899:	mov    dl,0x8c
   14000f89b:	add    bh,bl
   14000f89d:	stos   BYTE PTR es:[rdi],al
   14000f89e:	popf   
   14000f89f:	add    ah,cl
   14000f8a1:	mov    ch,0x94
   14000f8a3:	add    cl,dl
   14000f8a5:	mov    bl,0x91
   14000f8a7:	add    cl,ch
   14000f8a9:	mov    ebx,0xaed70083
   14000f8ae:	mov    ah,0x0
   14000f8b0:	ret    0xbbbc
   14000f8b3:	add    BYTE PTR [rbx-0x48ff4636],ch
   14000f8b9:	enter  0xbc,0xb0
   14000f8bd:	xlat   BYTE PTR ds:[rbx]
   14000f8be:	mov    ecx,0x9dcadc00
   14000f8c3:	add    al,ch
   14000f8c5:	(bad)
   14000f8c8:	stc    
   14000f8c9:	retf   
   14000f8ca:	(bad)  
   14000f8cb:	add    bh,bh
   14000f8cd:	fadd   QWORD PTR [rcx-0x68381700]
   14000f8d3:	add    cl,cl
   14000f8d5:	sar    DWORD PTR [rdi-0x16656f00],0x0
   14000f8dc:	ret    
   14000f8dd:	mov    edi,0xc0bf00c1
   14000f8e2:	rol    BYTE PTR [rax],0xc7
   14000f8e5:	mov    edi,0xcacbd200
   14000f8eb:	add    ah,cl
   14000f8ed:	ror    ch,1
   14000f8ef:	add    bh,dl
   14000f8f1:	ror    dh,1
   14000f8f3:	add    dh,dl
   14000f8f5:	iret   
   14000f8f6:	rol    BYTE PTR [rax],1
   14000f8f8:	fcom   st(7)
   14000f8fa:	xlat   BYTE PTR ds:[rbx]
   14000f8fb:	add    dl,ah
   14000f8fd:	(bad)  
   14000f8ff:	add    dh,bl
   14000f901:	loopne 0x14000f8e0
   14000f903:	add    dl,ah
   14000f905:	loope  0x14000f8e4
   14000f907:	add    al,ch
   14000f909:	(bad)  
   14000f90b:	add    ch,ah
   14000f90d:	in     al,0xe5
   14000f90f:	add    ah,dh
   14000f911:	(bad)  
   14000f912:	jmp    0x14000f914
   14000f914:	clc    
   14000f915:	out    dx,al
   14000f916:	lock add bl,dh
   14000f919:	repz repz add bl,bh
   14000f91d:	lock icebp 
   14000f91f:	add    bh,dh
   14000f921:	clc    
   14000f922:	test   DWORD PTR [rax],0xf8f7f8
   14000f928:	(bad)  
   14000f929:	(bad)  
   14000f92a:	inc    BYTE PTR [rax]
   14000f92c:	(bad)  
   14000f92d:	(bad)  
   14000f92e:	inc    DWORD PTR [rax]
   14000f930:	add    BYTE PTR [rax],al
   14000f932:	add    BYTE PTR [rax],al
   14000f934:	add    BYTE PTR [rax],al
   14000f936:	mov    bh,0xc1
	...
   14000f964:	mov    ch,0xb7
   14000f966:	int3   
   14000f967:	xor    ecx,eax
   14000f969:	mov    ch,0x0
	...
   14000f993:	mov    esp,0xd2ccb6bf
   14000f998:	mov    edi,0x2a2cce
   14000f99d:	add    BYTE PTR [rax],al
   14000f99f:	sub    bl,BYTE PTR [rdi]
   14000f9a1:	sub    al,0x31
   14000f9a3:	sub    al,BYTE PTR [rax]
	...
   14000f9c1:	add    BYTE PTR [rsi+rcx*8-0x2f338534],bh
   14000f9c8:	ror    esi,0xcb
   14000f9cb:	mov    esp,0x1f0a162a
   14000f9d0:	xor    DWORD PTR [rdi+0x2ab6eceb],esi
	...
   14000f9f2:	mov    bh,0xd7
   14000f9f4:	int    0xb6
   14000f9f6:	rcl    dl,1
   14000f9f8:	mov    edi,0xcbc1b7ce
   14000f9fd:	shr    DWORD PTR [rdi],0x1f
   14000fa00:	sbb    eax,0xed2f2f2a
   14000fa05:	jmp    0x14000f9be
   14000fa07:	sub    al,BYTE PTR [rax]
	...
   14000fa21:	add    BYTE PTR [rdx-0x1f452f20],bh
   14000fa27:	rol    cl,1
   14000fa29:	(bad)  
   14000fa2a:	rol    cl,cl
   14000fa2c:	mov    bh,0xc1
   14000fa2e:	(bad)  
   14000fa2f:	(bad)  
   14000fa30:	(bad)  
   14000fa31:	sbb    eax,0x2f2cc12f
   14000fa36:	in     eax,dx
   14000fa37:	jmp    0x14000f9f3
   14000fa39:	sub    al,BYTE PTR [rax]
	...
   14000fa4f:	add    BYTE PTR [rax],al
   14000fa51:	add    BYTE PTR [rdi-0x1f422c20],dh
   14000fa57:	rol    cl,1
   14000fa59:	rol    cl,cl
   14000fa5b:	rcl    dh,cl
   14000fa5d:	retf   
   14000fa5e:	mov    edx,0x31d6d7cb
   14000fa63:	(bad)  
   14000fa64:	(bad)  
   14000fa65:	shr    DWORD PTR [rdi],0x2f
   14000fa68:	in     eax,dx
   14000fa69:	in     al,dx
   14000fa6a:	mov    bh,0x2a
	...
   14000fa80:	add    BYTE PTR [rax],al
   14000fa82:	mov    esp,0xe9bdd3ed
   14000fa87:	(bad)  
   14000fa88:	mov    ebp,0xc1c1c1d6
   14000fa8d:	shr    ah,cl
   14000fa8f:	(bad)  
   14000fa90:	retf   
   14000fa91:	retf   
   14000fa92:	jmp    0x14000fa81
   14000fa94:	mov    esp,0x2cc12c1f
   14000fa99:	shr    ebx,0xce
   14000fa9c:	mov    dh,0x2c
	...
   14000fab2:	mov    edx,0xedc0e0f0
   14000fab7:	sar    BYTE PTR [rbp-0x3e3e3e2a],cl
   14000fabd:	ror    ebx,0xce
   14000fac0:	jmp    0x14000faad
   14000fac2:	(bad)  
   14000fac3:	(bad)  
   14000fac4:	in     eax,dx
   14000fac5:	in     eax,dx
   14000fac6:	rcr    DWORD PTR [rdi],0x1f
   14000fac9:	(bad)  
   14000faca:	mov    edx,0x30bcd2d2
	...
   14000fadf:	add    BYTE PTR [rax],al
   14000fae1:	add    BYTE PTR [rdx-0xf3f1610],bh
   14000fae7:	rol    al,1
   14000fae9:	(bad)  
   14000faea:	rol    ecx,0xc1
   14000faed:	rol    ecx,0xc1
   14000faf0:	retf   
   14000faf1:	(bad)  
   14000faf2:	in     eax,dx
   14000faf3:	jmp    0x14000facb
   14000faf5:	(bad)  
   14000faf6:	in     al,dx
   14000faf7:	jmp    0x14000faba
   14000faf9:	sub    dl,BYTE PTR [rsi]
   14000fafb:	(bad)  
   14000fafc:	(bad)  
	...
   14000fb11:	add    BYTE PTR [rdx-0xf3c160a],bh
   14000fb17:	sar    DWORD PTR [rdi-0x3e3e3e2a],cl
   14000fb1d:	rol    ecx,0xc1
   14000fb20:	rol    ecx,0xc1
   14000fb23:	(bad)  
   14000fb24:	in     eax,dx
   14000fb25:	in     eax,dx
   14000fb26:	(bad)  
   14000fb27:	shr    ah,cl
   14000fb29:	xlat   BYTE PTR ds:[rbx]
   14000fb2a:	mov    edx,0x2c1f
	...
   14000fb3f:	add    BYTE PTR [rax],al
   14000fb41:	add    BYTE PTR [rdx-0xf3c0f0a],bh
   14000fb47:	rol    ecx,cl
   14000fb49:	(bad)  
   14000fb4a:	rol    ecx,0xc1
   14000fb4d:	ror    ebx,0xc1
   14000fb50:	rol    ecx,0xc1
   14000fb53:	rol    ecx,0xd6
   14000fb56:	in     eax,dx
   14000fb57:	in     eax,dx
   14000fb58:	ror    dh,cl
   14000fb5a:	(bad)  
   14000fb5b:	shl    BYTE PTR [rdi+0xb52c],cl
	...
   14000fb71:	add    BYTE PTR [rsi+rsi*8-0x2a0f3710],bh
   14000fb78:	mov    ebp,0xc1c1c1d6
   14000fb7d:	retf   
   14000fb7e:	rol    ecx,0xcb
   14000fb81:	ror    ebx,0xc1
   14000fb84:	rol    ecx,0xc1
   14000fb87:	shr    ah,cl
   14000fb89:	jmp    0x14000fb5d
   14000fb8b:	ror    ebx,0xce
   14000fb8e:	retf   
   14000fb8f:	mov    bh,0x0
	...
   14000fba1:	add    BYTE PTR [rdi-0xf330f07],dh
   14000fba7:	xlat   BYTE PTR ds:[rbx]
   14000fba8:	mov    ebp,0xc1c1c1d7
   14000fbad:	retf   
   14000fbae:	ror    ebx,0xc1
   14000fbb1:	ror    ebx,0xcb
   14000fbb4:	retf   
   14000fbb5:	retf   
   14000fbb6:	retf   
   14000fbb7:	ror    ebx,0xd2
   14000fbba:	(bad)  
   14000fbbb:	(bad)  
   14000fbbc:	sar    DWORD PTR [rcx+rax*8+0x403d7cb7],0x3d
   14000fbc4:	mov    edx,0x0
	...
   14000fbd1:	add    BYTE PTR [rdx-0x9330f07],bh
   14000fbd7:	sar    DWORD PTR [rbp-0x343e3e29],cl
   14000fbdd:	ror    ebx,0xcb
   14000fbe0:	ror    esi,0xcb
   14000fbe3:	retf   
   14000fbe4:	retf   
   14000fbe5:	retf   
   14000fbe6:	retf   
   14000fbe7:	(bad)  
   14000fbe8:	retf   
   14000fbe9:	retf   
   14000fbea:	retf   
   14000fbeb:	rcl    dl,cl
   14000fbed:	rol    BYTE PTR [rsi+riz*2-0x76],cl
   14000fbf1:	ins    DWORD PTR es:[rdi],dx
   14000fbf2:	push   0x7c648968
	...
   14000fbff:	add    BYTE PTR [rax],al
   14000fc01:	add    BYTE PTR [rdx-0x9330f07],bh
   14000fc07:	loopne 0x14000fbc5
   14000fc09:	xlat   BYTE PTR ds:[rbx]
   14000fc0a:	retf   
   14000fc0b:	ror    ebx,0xc1
   14000fc0e:	retf   
   14000fc0f:	retf   
   14000fc10:	retf   
   14000fc11:	retf   
   14000fc12:	retf   
   14000fc13:	retf   
   14000fc14:	(bad)  
   14000fc15:	retf   
   14000fc16:	(bad)  
   14000fc17:	retf   
   14000fc18:	(bad)  
   14000fc19:	retf   
   14000fc1a:	(bad)  
   14000fc1b:	retf   
   14000fc1c:	(bad)  
   14000fc1d:	ret    0x5d6d
   14000fc20:	cmp    DWORD PTR [rcx],edi
   14000fc22:	cmp    DWORD PTR [rbx+rsi*1],esi
   14000fc25:	pop    rbx
   14000fc26:	mov    DWORD PTR [rax+0x0],eax
	...
   14000fc31:	add    BYTE PTR [rdi-0x9320903],dh
   14000fc37:	loopne 0x14000fbf6
   14000fc39:	xlat   BYTE PTR ds:[rbx]
   14000fc3a:	ror    esi,0xcb
   14000fc3d:	(bad)  
   14000fc3e:	retf   
   14000fc3f:	retf   
   14000fc40:	(bad)  
   14000fc41:	retf   
   14000fc42:	(bad)  
   14000fc43:	(bad)  
   14000fc44:	retf   
   14000fc45:	(bad)  
   14000fc46:	(bad)  
   14000fc47:	(bad)  
   14000fc48:	(bad)  
   14000fc49:	(bad)  
   14000fc4a:	ror    dh,cl
   14000fc4c:	shl    BYTE PTR [rdi-0x69],cl
   14000fc4f:	push   rdi
   14000fc50:	pop    rsp
   14000fc51:	pop    rbx
   14000fc52:	pop    rdx
   14000fc53:	pop    rdx
   14000fc54:	cmp    DWORD PTR [rcx+rdi*1],esi
   14000fc57:	push   0x7c
   14000fc5c:	add    BYTE PTR [rax],al
   14000fc5e:	add    BYTE PTR [rax],al
   14000fc60:	add    BYTE PTR [rax],al
   14000fc62:	mov    esp,0xf6cdf6fd
   14000fc67:	jmp    0x14000fc25
   14000fc69:	in     al,dx
   14000fc6a:	retf   
   14000fc6b:	retf   
   14000fc6c:	(bad)  
   14000fc6d:	ror    esi,0xcb
   14000fc70:	(bad)  
   14000fc71:	retf   
   14000fc72:	(bad)  
   14000fc73:	retf   
   14000fc74:	(bad)  
   14000fc75:	(bad)  
   14000fc76:	(bad)  
   14000fc77:	(bad)  
   14000fc78:	(bad)  
   14000fc79:	(bad)  
   14000fc7a:	(bad)  
   14000fc7b:	(bad)  
   14000fc7c:	(bad)  
   14000fc7d:	test   DWORD PTR [rcx+0x5b5c5c5e],ebx
   14000fc83:	pop    rbx
   14000fc84:	pop    rdx
   14000fc85:	cmp    DWORD PTR [rcx],edi
   14000fc87:	pop    rax
   14000fc88:	add    BYTE PTR fs:[rax],al
   14000fc8b:	add    BYTE PTR [rax],al
   14000fc8d:	add    BYTE PTR [rax],al
   14000fc8f:	add    BYTE PTR [rax],al
   14000fc91:	add    BYTE PTR [rbp+rdi*8-0x1209300a],bh
   14000fc98:	mov    esp,0xcbcecbec
   14000fc9d:	(bad)  
   14000fc9e:	(bad)  
   14000fc9f:	(bad)  
   14000fca0:	(bad)  
   14000fca1:	(bad)  
   14000fca2:	(bad)  
   14000fca3:	(bad)  
   14000fca4:	(bad)  
   14000fca5:	(bad)  
   14000fca6:	(bad)  
   14000fca7:	(bad)  
   14000fca8:	ror    dh,cl
   14000fcaa:	rcl    dl,cl
   14000fcac:	rol    BYTE PTR [rax+0x5e5f6d9d],cl
   14000fcb2:	pop    rsp
   14000fcb3:	pop    rsp
   14000fcb4:	pop    rsp
   14000fcb5:	pop    rdx
   14000fcb6:	pop    rax
   14000fcb7:	pop    rax
   14000fcb8:	add    BYTE PTR ss:[rax],al
   14000fcbb:	add    BYTE PTR [rax],al
   14000fcbd:	add    BYTE PTR [rax],al
   14000fcbf:	add    BYTE PTR [rax],al
   14000fcc1:	add    BYTE PTR [rbp+rdi*8-0x16092d0a],bh
   14000fcc8:	mov    ebp,0xcececed7
   14000fccd:	(bad)  
   14000fcce:	(bad)  
   14000fccf:	(bad)  
   14000fcd0:	(bad)  
   14000fcd1:	(bad)  
   14000fcd2:	(bad)  
   14000fcd3:	or     DWORD PTR [rcx],ecx
   14000fcd5:	or     DWORD PTR [rcx],ecx
   14000fcd7:	or     DWORD PTR [rcx],ecx
   14000fcd9:	or     DWORD PTR [rcx],ecx
   14000fcdb:	or     DWORD PTR [rcx],ecx
   14000fcdd:	adc    BYTE PTR [rbx+0x5f5f8b8f],bl
   14000fce3:	pop    rsp
   14000fce4:	pop    rsp
   14000fce5:	pop    rsp
   14000fce6:	pop    rbx
   14000fce7:	pop    rbx
   14000fce8:	add    BYTE PTR ss:[rax],al
   14000fceb:	add    BYTE PTR [rax],al
   14000fced:	add    BYTE PTR [rax],al
   14000fcef:	add    BYTE PTR [rax],al
   14000fcf1:	add    BYTE PTR [rbp+rdi*8-0x1209320a],bh
   14000fcf8:	mov    esp,0xcececeec
   14000fcfd:	(bad)  
   14000fcfe:	(bad)  
   14000fcff:	(bad)  
   14000fd00:	(bad)  
   14000fd01:	(bad)  
   14000fd02:	(bad)  
   14000fd03:	or     edx,esp
   14000fd05:	xlat   BYTE PTR ds:[rbx]
   14000fd06:	or     DWORD PTR [rsi+rdi*1+0x1803f35],eax
   14000fd0d:	add    DWORD PTR [rdi+0x5f8b8f9b],eax
   14000fd13:	pop    rdi
   14000fd14:	pop    rcx
   14000fd15:	pop    rsp
   14000fd16:	pop    rsp
   14000fd17:	pop    rcx
   14000fd18:	push   rsp
	...
   14000fd21:	add    BYTE PTR [rbp+rdi*8-0xf0f330a],bh
   14000fd28:	mov    edx,0xcececeeb
   14000fd2d:	(bad)  
   14000fd2e:	(bad)  
   14000fd2f:	(bad)  
   14000fd30:	(bad)  
   14000fd31:	rcl    dh,cl
   14000fd33:	or     esp,ebp
   14000fd35:	in     eax,dx
   14000fd36:	or     DWORD PTR [rcx+0x29],edi
   14000fd39:	rex.WRB xchg BYTE PTR [r15+0x74120105],r9b
   14000fd40:	cwde   
   14000fd41:	cwde   
   14000fd42:	fwait
   14000fd43:	xchg   edi,eax
   14000fd44:	outs   dx,DWORD PTR ds:[rsi]
   14000fd45:	imul   ebp,DWORD PTR [rbx+0x60],0x36
   14000fd49:	add    BYTE PTR [rax],al
   14000fd4b:	mov    DWORD PTR [rax],eax
   14000fd4d:	add    BYTE PTR [rax],al
   14000fd4f:	add    BYTE PTR [rax],al
   14000fd51:	add    BYTE PTR [rcx+rdi*8-0xf0f330a],bh
   14000fd58:	mov    edx,0xd2ced2eb
   14000fd5d:	rcl    dl,cl
   14000fd5f:	(bad)  
   14000fd60:	(bad)  
   14000fd61:	(bad)  
   14000fd62:	(bad)  
   14000fd63:	or     DWORD PTR [rcx],ecx
   14000fd65:	or     DWORD PTR [rcx],ecx
   14000fd67:	(bad)  
   14000fd68:	jb     0x14000fcea
   14000fd6a:	mov    DWORD PTR [rcx+0x210b0e7f],ecx
   14000fd70:	(bad)  
   14000fd71:	(bad)  
   14000fd72:	add    BYTE PTR [rdx+0x6e929080],0x56
   14000fd79:	add    BYTE PTR [rax],al
   14000fd7b:	mov    DWORD PTR [rcx+0x0],ecx
   14000fd81:	add    BYTE PTR [rcx+rdi*8-0x120f3310],bh
   14000fd88:	mov    edx,0xd6ced6ed
   14000fd8d:	(bad)  
   14000fd8e:	(bad)  
   14000fd8f:	(bad)  
   14000fd90:	(bad)  
   14000fd91:	(bad)  
   14000fd92:	(bad)  
   14000fd93:	or     edx,esp
   14000fd95:	in     al,dx
   14000fd96:	or     DWORD PTR [rdx+0x66666868],ecx
   14000fd9c:	mov    DWORD PTR [rbp+0x66],ebp
   14000fd9f:	xchg   di,ax
   14000fda1:	or     DWORD PTR [rax],eax
   14000fda3:	add    BYTE PTR [rax],cl
   14000fda5:	add    BYTE PTR [rax],al
   14000fda7:	ins    DWORD PTR es:[rdi],dx
   14000fda8:	add    BYTE PTR gs:[rax],al
   14000fdab:	add    BYTE PTR [rcx+0x81],cl
   14000fdb1:	add    BYTE PTR [rsi+rsi*8-0xf163710],bh
   14000fdb8:	mov    edx,0xd6d6d6f0
   14000fdbd:	(bad)  
   14000fdbe:	(bad)  
   14000fdbf:	(bad)  
   14000fdc0:	(bad)  
   14000fdc1:	in     al,dx
   14000fdc2:	(bad)  
   14000fdc3:	or     esp,ebp
   14000fdc5:	out    dx,eax
   14000fdc6:	or     DWORD PTR [rbp+0x66],ebp
   14000fdc9:	data16 imul bp,WORD PTR [rcx+0x6c],0x7380
   14000fdd0:	xchg   edi,eax
   14000fdd1:	or     DWORD PTR [rax],eax
   14000fdd3:	add    BYTE PTR [rcx],cl
   14000fdd5:	add    BYTE PTR [rax],al
   14000fdd7:	imul   ebp,DWORD PTR [rdx+0x0],0x0
   14000fddb:	add    BYTE PTR [rbx+0x816e],dl
   14000fde1:	add    BYTE PTR [rbp-0x163c0f0a],bh
   14000fde7:	in     eax,dx
   14000fde8:	mov    edx,0xd7d6d6f1
   14000fded:	xlat   BYTE PTR ds:[rbx]
   14000fdee:	xlat   BYTE PTR ds:[rbx]
   14000fdef:	in     al,dx
   14000fdf0:	xlat   BYTE PTR ds:[rbx]
   14000fdf1:	xlat   BYTE PTR ds:[rbx]
   14000fdf2:	in     al,dx
   14000fdf3:	or     DWORD PTR [rcx],ecx
   14000fdf5:	or     DWORD PTR [rcx],ecx
   14000fdf7:	ins    DWORD PTR es:[rdi],dx
   14000fdf8:	(bad)  
   14000fdfa:	movsxd edi,DWORD PTR [rbx+rax*2]
   14000fdfd:	(bad)  
   14000fdfe:	or     al,0x4
   14000fe00:	outs   dx,DWORD PTR ds:[rsi]
   14000fe01:	or     DWORD PTR [rcx],ecx
   14000fe03:	or     DWORD PTR [rcx],ecx
   14000fe05:	add    BYTE PTR [rax],al
   14000fe07:	ins    DWORD PTR es:[rdi],dx
   14000fe08:	push   0x0
   14000fe0a:	add    BYTE PTR [rax],al
   14000fe0c:	add    BYTE PTR [rax+0x5e],ah
   14000fe0f:	add    BYTE PTR [rax],al
   14000fe11:	add    BYTE PTR [rsi+rsi*8-0x12163f17],bh
   14000fe18:	mov    edx,0xd7d7d7f1
   14000fe1d:	xlat   BYTE PTR ds:[rbx]
   14000fe1e:	xlat   BYTE PTR ds:[rbx]
   14000fe1f:	in     al,dx
   14000fe20:	in     al,dx
   14000fe21:	in     al,dx
   14000fe22:	in     al,dx
   14000fe23:	or     esp,ebp
   14000fe25:	in     eax,dx
   14000fe26:	or     DWORD PTR [rsi+0x5b],ebx
   14000fe29:	pop    rbx
   14000fe2a:	pop    rcx
   14000fe2b:	cmp    bh,BYTE PTR [rdx]
   14000fe2d:	xor    al,BYTE PTR [rdx]
   14000fe2f:	(bad)  
   14000fe30:	push   rbp
   14000fe31:	or     DWORD PTR [rax],eax
   14000fe33:	add    BYTE PTR [rcx],cl
   14000fe35:	add    BYTE PTR [rax],al
   14000fe37:	ins    DWORD PTR es:[rdi],dx
   14000fe38:	push   0x0
   14000fe3a:	add    BYTE PTR [rax],al
   14000fe3c:	add    BYTE PTR [rax+0x5e],ah
   14000fe3f:	add    BYTE PTR [rax],al
   14000fe41:	add    BYTE PTR [rcx+rsi*8-0x161f4017],bh
   14000fe48:	mov    edx,0xebd7ecf2
   14000fe4d:	in     al,dx
   14000fe4e:	jmp    0x14000fe3c
   14000fe50:	jmp    0x14000fe3e
   14000fe52:	jmp    0x14000fe5d
   14000fe54:	jmp    0x14000fe45
   14000fe56:	or     DWORD PTR [rsi+rbp*2+0x358a6c6c],ecx
   14000fe5d:	adc    DWORD PTR [rsi],edx
   14000fe5f:	adc    al,0xae
   14000fe61:	or     DWORD PTR [rax],eax
   14000fe63:	add    BYTE PTR [rcx],cl
   14000fe65:	add    BYTE PTR [rax],al
   14000fe67:	ins    DWORD PTR es:[rdi],dx
   14000fe68:	push   0x0
   14000fe6a:	add    BYTE PTR [rax],al
   14000fe6c:	add    BYTE PTR [rax+0x5e],ah
   14000fe6f:	add    BYTE PTR [rax],al
   14000fe71:	add    BYTE PTR [rdi-0x1f421f13],bh
   14000fe77:	jmp    0x14000fe35
   14000fe79:	repnz in al,dx
   14000fe7b:	in     al,dx
   14000fe7c:	jmp    0x14000fe69
   14000fe7e:	jmp    0x14000fe6d
   14000fe80:	jmp    0x14000fe6f
   14000fe82:	in     eax,dx
   14000fe83:	or     DWORD PTR [rcx],ecx
   14000fe85:	or     DWORD PTR [rcx],ecx
   14000fe87:	or     DWORD PTR [rcx],ecx
   14000fe89:	or     DWORD PTR [rcx],ecx
   14000fe8b:	or     DWORD PTR [rcx],ecx
   14000fe8d:	or     DWORD PTR [rcx],ecx
   14000fe8f:	or     DWORD PTR [rcx],ecx
   14000fe91:	or     DWORD PTR [rcx],ecx
   14000fe93:	or     DWORD PTR [rcx],ecx
   14000fe95:	add    BYTE PTR [rax],al
   14000fe97:	ins    DWORD PTR es:[rdi],dx
   14000fe98:	test   DWORD PTR [rax],eax
   14000fe9a:	add    BYTE PTR [rax],al
   14000fe9c:	fsub   DWORD PTR [rcx+0x5e]
   14000fe9f:	add    BYTE PTR [rax],al
   14000fea1:	add    BYTE PTR [rdi-0x1d413214],bh
   14000fea7:	in     eax,dx
   14000fea8:	mov    esp,0xedebebf2
   14000fead:	jmp    0x14000fe9c
   14000feaf:	in     al,dx
   14000feb0:	in     eax,dx
   14000feb1:	in     eax,dx
   14000feb2:	in     eax,dx
   14000feb3:	or     ebp,ebp
   14000feb5:	in     eax,dx
   14000feb6:	or     DWORD PTR [rax+0x28a3a7a7],ebp
   14000febc:	push   rax
   14000febd:	rex.WRX (bad) 
   14000febf:	and    edx,DWORD PTR [rcx+0x9]
   14000fec2:	add    BYTE PTR [rax],al
   14000fec4:	or     DWORD PTR [rax],eax
   14000fec6:	add    BYTE PTR [rbp-0x80],ch
   14000fec9:	add    BYTE PTR [rax],al
   14000fecb:	add    BYTE PTR [rdi+0x61],bl
   14000fece:	pop    rsi
   14000fecf:	add    BYTE PTR [rax],al
   14000fed1:	add    cl,al
   14000fed3:	(bad)  
   14000fed4:	(bad)
   14000fed7:	jmp    0x14000fe95
   14000fed9:	hlt    
   14000feda:	in     eax,dx
   14000fedb:	in     eax,dx
   14000fedc:	in     eax,dx
   14000fedd:	in     eax,dx
   14000fede:	out    dx,eax
   14000fedf:	in     eax,dx
   14000fee0:	in     eax,dx
   14000fee1:	in     eax,dx
   14000fee2:	out    dx,eax
   14000fee3:	or     ebp,ebp
   14000fee5:	icebp  
   14000fee6:	or     DWORD PTR [rdx+0x27a9abab],esi
   14000feec:	lods   eax,DWORD PTR ds:[rsi]
   14000feed:	cs and eax,0x94fa4
   14000fef3:	add    BYTE PTR [rcx],cl
   14000fef5:	add    BYTE PTR [rax],al
   14000fef7:	mov    DWORD PTR [rbp+0x5f000000],eax
   14000fefd:	pop    rsi
   14000fefe:	add    BYTE PTR [rax],al
   14000ff00:	add    BYTE PTR [rax],al
   14000ff02:	ror    DWORD PTR [rdx+0x4a],0x53
   14000ff06:	push   rdx
   14000ff07:	loop   0x14000fec8
   14000ff09:	hlt    
   14000ff0a:	in     eax,dx
   14000ff0b:	in     eax,dx
   14000ff0c:	in     eax,dx
   14000ff0d:	in     eax,dx
   14000ff0e:	in     eax,dx
   14000ff0f:	in     eax,dx
   14000ff10:	out    dx,eax
   14000ff11:	in     eax,dx
   14000ff12:	in     eax,dx
   14000ff13:	or     DWORD PTR [rcx],ecx
   14000ff15:	or     DWORD PTR [rcx],ecx
   14000ff17:	lods   al,BYTE PTR ds:[rsi]
   14000ff18:	movabs ds:0x50a0a11978249e26,al
   14000ff21:	or     DWORD PTR [rcx],ecx
   14000ff23:	or     DWORD PTR [rcx],ecx
   14000ff25:	add    BYTE PTR [rax],al
   14000ff27:	ins    DWORD PTR es:[rdi],dx
   14000ff28:	jne    0x14000ff2a
   14000ff2a:	add    BYTE PTR [rsi+0x70],ah
   14000ff2d:	pop    rsi
   14000ff2e:	add    BYTE PTR [rax],al
   14000ff30:	add    BYTE PTR [rax],al
   14000ff32:	rcl    DWORD PTR [rdx+0x53],0x48
   14000ff36:	rex.WB loope 0x14000fef5
   14000ff39:	hlt    
   14000ff3a:	in     eax,dx
   14000ff3b:	in     eax,dx
   14000ff3c:	out    dx,eax
   14000ff3d:	in     eax,dx
   14000ff3e:	out    dx,eax
   14000ff3f:	in     eax,dx
   14000ff40:	out    dx,eax
   14000ff41:	out    dx,eax
   14000ff42:	icebp  
   14000ff43:	or     ebp,ebp
   14000ff45:	in     eax,dx
   14000ff46:	or     ecx,ecx
   14000ff48:	rex.RB
   14000ff49:	rex.RXB and BYTE PTR [r9+0xf],r8b
   14000ff4d:	adc    ebp,DWORD PTR [rdx+0x9af9f]
   14000ff53:	add    BYTE PTR [rcx],cl
   14000ff55:	add    BYTE PTR [rax],al
   14000ff57:	lea    eax,[rdx-0x718e7d84]
   14000ff5d:	add    BYTE PTR [rax],al
   14000ff5f:	add    BYTE PTR [rax],al
   14000ff61:	add    bl,cl
   14000ff63:	sbb    BYTE PTR [rdi],dl
   14000ff65:	or     eax,0xf7bcd603
   14000ff6a:	in     eax,dx
   14000ff6b:	out    dx,eax
   14000ff6c:	in     eax,dx
   14000ff6d:	out    dx,eax
   14000ff6e:	out    dx,eax
   14000ff6f:	icebp  
   14000ff70:	out    dx,eax
   14000ff71:	icebp  
   14000ff72:	out    dx,eax
   14000ff73:	or     ebp,ebp
   14000ff75:	hlt    
   14000ff76:	or     ebx,ebx
   14000ff78:	jle    0x14000fff0
   14000ff7a:	rex.RXB ja 0x14000ff84
   14000ff7d:	adc    eax,0x9b4b0b3
   14000ff82:	add    BYTE PTR [rax],al
   14000ff84:	or     DWORD PTR [rax],eax
   14000ff86:	add    BYTE PTR [rcx-0x64646666],dl
   14000ff8c:	fiadd  WORD PTR [rax]
   14000ff8e:	add    BYTE PTR [rax],al
   14000ff90:	add    BYTE PTR [rax],al
   14000ff92:	int3   
   14000ff93:	or     bl,BYTE PTR [rbx]
   14000ff95:	add    DWORD PTR [rbx],eax
   14000ff97:	(bad)  
   14000ff98:	mov    esp,0xf1efeff7
   14000ff9d:	out    dx,eax
   14000ff9e:	out    dx,eax
   14000ff9f:	out    dx,eax
   14000ffa0:	icebp  
   14000ffa1:	out    dx,eax
   14000ffa2:	out    dx,eax
   14000ffa3:	or     DWORD PTR [rcx],ecx
   14000ffa5:	or     DWORD PTR [rcx],ecx
   14000ffa7:	in     al,0xca
   14000ffa9:	(bad)  
   14000ffaa:	in     eax,0xe8
   14000ffac:	sub    edx,DWORD PTR [rsi]
   14000ffae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ffaf:	mov    cl,0xea
   14000ffb1:	or     DWORD PTR [rcx],ecx
   14000ffb3:	or     DWORD PTR [rcx],ecx
   14000ffb5:	add    BYTE PTR [rax],al
   14000ffb7:	sbb    DWORD PTR [rdx+0xde999a],0x0
   14000ffbe:	add    BYTE PTR [rax],al
   14000ffc0:	add    BYTE PTR [rax],al
   14000ffc2:	(bad)  
   14000ffc3:	(bad)  
   14000ffc4:	sbb    eax,DWORD PTR [rcx]
   14000ffc6:	add    edx,eax
   14000ffc8:	mov    esp,0xeff1eff7
   14000ffcd:	icebp  
   14000ffce:	out    dx,eax
   14000ffcf:	icebp  
   14000ffd0:	out    dx,eax
   14000ffd1:	repnz out dx,eax
   14000ffd3:	or     edi,ebp
   14000ffd5:	in     eax,dx
   14000ffd6:	or     ebx,esp
   14000ffd8:	(bad)  
   14000ffd9:	fxam   
   14000ffdb:	out    0x93,al
   14000ffdd:	and    al,0x22
   14000ffdf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffe0:	fisttp WORD PTR [rcx]
   14000ffe2:	add    BYTE PTR [rax],al
   14000ffe4:	or     DWORD PTR [rax],eax
   14000ffe6:	add    BYTE PTR [rbx+0xde9d9a],al
   14000ffec:	add    BYTE PTR [rax],al
   14000ffee:	add    BYTE PTR [rax],al
   14000fff0:	add    BYTE PTR [rax],al
   14000fff2:	ror    BYTE PTR [rdx],1
   14000fff4:	sbb    al,0x8
   14000fff6:	add    edx,eax
   14000fff8:	mov    esp,0xefeff1f7
   14000fffd:	repnz out dx,eax
   14000ffff:	repnz out dx,eax
   140010001:	repnz repnz or edi,ebp
   140010005:	hlt    
   140010006:	or     esi,esp
   140010008:	xchg   ebp,eax
   140010009:	xchg   esp,eax
   14001000a:	xchg   esp,eax
   14001000b:	xchg   esp,eax
   14001000c:	pushf  
   14001000d:	xchg   esi,eax
   14001000e:	xchg   ecx,eax
   14001000f:	xchg   esp,eax
   140010010:	out    0x9,eax
   140010012:	add    BYTE PTR [rax],al
   140010014:	or     DWORD PTR [rax],eax
   140010016:	add    BYTE PTR [rax+0x919d],cl
   14001001c:	add    BYTE PTR [rax],al
   14001001e:	add    BYTE PTR [rax],al
   140010020:	add    BYTE PTR [rax],al
   140010022:	(bad)  
   140010023:	(bad)  
   140010024:	(bad)  
   140010025:	(bad)  
   140010026:	mov    ebp,0xeff7c1b7
   14001002b:	icebp  
   14001002c:	out    dx,eax
   14001002d:	repnz out dx,eax
   14001002f:	repnz repnz repnz repnz or DWORD PTR [rcx],ecx
   140010035:	or     DWORD PTR [rcx],ecx
   140010037:	or     DWORD PTR [rcx],ecx
   140010039:	or     DWORD PTR [rcx],ecx
   14001003b:	or     DWORD PTR [rcx],ecx
   14001003d:	or     DWORD PTR [rcx],ecx
   14001003f:	or     DWORD PTR [rcx],ecx
   140010041:	or     DWORD PTR [rcx],ecx
   140010043:	or     DWORD PTR [rcx],ecx
   140010045:	add    BYTE PTR [rax],al
   140010047:	mov    ss,WORD PTR [rcx+0x0]
   14001004d:	add    BYTE PTR [rax],al
   14001004f:	add    BYTE PTR [rax],al
   140010051:	add    ch,ch
   140010053:	xor    DWORD PTR [rax],esi
   140010055:	mov    bh,0xba
   140010057:	mov    dh,0xf7
   140010059:	(bad)  
   14001005a:	cld    
   14001005b:	div    esp
   14001005d:	repnz repnz repnz repnz repnz repnz repnz hlt 
   140010065:	repnz hlt 
   140010067:	hlt    
   140010068:	hlt    
   140010069:	hlt    
   14001006a:	hlt    
   14001006b:	hlt    
   14001006c:	hlt    
   14001006d:	hlt    
   14001006e:	hlt    
   14001006f:	xlat   BYTE PTR ds:[rbx]
   140010070:	add    BYTE PTR [rax],al
   140010072:	add    BYTE PTR [rax],al
   140010074:	add    BYTE PTR [rax],al
   140010076:	add    BYTE PTR [rsi+0x91],cl
   14001007c:	add    BYTE PTR [rax],al
   14001007e:	add    BYTE PTR [rax],al
   140010080:	add    BYTE PTR [rax],al
   140010082:	add    dh,dl
   140010084:	(bad)  
   140010085:	rcl    bl,cl
   140010087:	stc    
   140010088:	(bad)  
   140010089:	(bad)  
   14001008a:	(bad)  
   14001008b:	(bad)  
   14001008c:	(bad)  
   14001008d:	cld    
   14001008e:	div    esp
   140010090:	repnz repnz hlt 
   140010093:	hlt    
   140010094:	repnz div esp
   140010097:	hlt    
   140010098:	hlt    
   140010099:	hlt    
   14001009a:	hlt    
   14001009b:	div    esp
   14001009d:	div    esp
   14001009f:	in     al,dx
   1400100a0:	add    BYTE PTR [rax],al
   1400100a2:	add    BYTE PTR [rax],al
   1400100a4:	add    BYTE PTR [rax],al
   1400100a6:	add    BYTE PTR [rax+0x0],cl
	...
   1400100b4:	imul   ah
   1400100b6:	(bad)  
   1400100b7:	jmp    0x1400100b0
   1400100b9:	(bad)  
   1400100ba:	(bad)  
   1400100bb:	(bad)  
   1400100bc:	(bad)  
   1400100bd:	(bad)  
   1400100be:	(bad)  
   1400100bf:	(bad)  
   1400100c0:	(bad)  
   1400100c1:	cld    
   1400100c2:	div    esp
   1400100c4:	div    edx
   1400100c6:	div    esp
   1400100c8:	div    bh
   1400100ca:	div    esp
   1400100cc:	div    edi
   1400100ce:	imul   esp
	...
   1400100e4:	add    BYTE PTR [rax],al
   1400100e6:	add    ah,dh
   1400100e8:	jmp    0x1400100bc
   1400100ea:	in     eax,dx
   1400100eb:	repnz (bad) 
   1400100ed:	(bad)  
   1400100ee:	(bad)  
   1400100ef:	(bad)  
   1400100f0:	(bad)  
   1400100f1:	(bad)  
   1400100f2:	(bad)  
   1400100f3:	(bad)  
   1400100f4:	cld    
   1400100f5:	div    edi
   1400100f7:	repnz div edi
   1400100fa:	hlt    
   1400100fb:	div    edi
   1400100fd:	div    edi
   1400100ff:	jmp    0x140010101
	...
   140010119:	add    BYTE PTR [rax],al
   14001011b:	in     eax,dx
   14001011c:	shr    ah,cl
   14001011e:	hlt    
   14001011f:	cld    
   140010120:	(bad)  
   140010121:	(bad)  
   140010122:	(bad)  
   140010123:	(bad)  
   140010124:	(bad)  
   140010125:	(bad)  
   140010126:	(bad)  
   140010127:	cld    
   140010128:	cld    
   140010129:	div    edi
   14001012b:	div    edi
   14001012d:	div    edi
   14001012f:	jmp    0x140010131
	...
   14001014d:	add    ch,ch
   14001014f:	(bad)  
   140010150:	xlat   BYTE PTR ds:[rbx]
   140010151:	icebp  
   140010152:	cld    
   140010153:	(bad)  
   140010154:	(bad)  
   140010155:	(bad)  
   140010156:	(bad)  
   140010157:	(bad)  
   140010158:	(bad)  
   140010159:	(bad)  
   14001015a:	(bad)  
   14001015b:	cld    
   14001015c:	div    edi
   14001015e:	imul   ebx
	...
   140010180:	add    bh,ch
   140010182:	(bad)  
   140010183:	(bad)  
   140010184:	icebp  
   140010185:	idiv   edi
   140010187:	(bad)  
   140010188:	(bad)  
   140010189:	(bad)  
   14001018a:	(bad)  
   14001018b:	(bad)  
   14001018c:	(bad)  
   14001018d:	(bad)  
   14001018e:	(bad)  
   14001018f:	out    dx,eax
	...
   1400101b4:	icebp  
   1400101b5:	in     al,dx
   1400101b6:	(bad)  
   1400101b7:	in     eax,dx
   1400101b8:	idiv   edi
   1400101ba:	(bad)  
   1400101bb:	(bad)  
   1400101bc:	(bad)  
   1400101bd:	push   rsp
   1400101bf:	hlt    
	...
   1400101e4:	add    BYTE PTR [rax],al
   1400101e6:	add    dl,dh
   1400101e8:	jmp    0x1400101c0
   1400101ea:	in     eax,dx
   1400101eb:	in     eax,dx
   1400101ec:	xlat   BYTE PTR ds:[rbx]
   1400101ed:	(bad)  
   1400101ee:	in     eax,dx
	...
   14001022f:	add    ah,bh
   140010231:	(bad)  
   140010232:	(bad)  
   140010233:	(bad)  
   140010234:	(bad)  
   140010235:	inc    DWORD PTR [rax]
   140010237:	add    al,dh
   140010239:	(bad)  
   14001023a:	(bad)  
   14001023b:	(bad)  
   14001023c:	(bad)  
   14001023d:	inc    DWORD PTR [rax]
   14001023f:	add    al,ah
   140010241:	(bad)  
   140010242:	ud0    edi,edi
   140010245:	inc    DWORD PTR [rax]
   140010247:	add    al,al
   140010249:	add    BYTE PTR [rbx],al
   14001024b:	(bad)  
   14001024c:	(bad)  
   14001024d:	inc    DWORD PTR [rax]
   14001024f:	add    al,al
   140010251:	add    BYTE PTR [rax],al
   140010253:	(bad)  
   140010254:	(bad)  
   140010255:	inc    DWORD PTR [rax]
   140010257:	add    al,al
   140010259:	add    BYTE PTR [rax],al
   14001025b:	(bad)  
   14001025c:	(bad)  
   14001025d:	inc    DWORD PTR [rax]
   14001025f:	add    al,al
   140010261:	add    BYTE PTR [rax],al
   140010263:	ud0    edi,edi
   140010266:	add    BYTE PTR [rax],al
   140010268:	rol    BYTE PTR [rax],0x0
   14001026b:	add    edi,edi
   14001026d:	inc    DWORD PTR [rax]
   14001026f:	add    al,al
   140010271:	add    BYTE PTR [rax],al
   140010273:	add    edi,edi
   140010275:	inc    DWORD PTR [rax]
   140010277:	add    al,al
   140010279:	add    BYTE PTR [rax],al
   14001027b:	(bad)  
   14001027c:	(bad)  
   14001027d:	inc    DWORD PTR [rax]
   14001027f:	add    al,al
   140010281:	add    BYTE PTR [rax],al
   140010283:	(bad)  
   140010284:	(bad)  
   140010285:	inc    DWORD PTR [rax]
   140010287:	add    al,al
   140010289:	add    BYTE PTR [rax],al
   14001028b:	add    edi,edi
   14001028d:	inc    DWORD PTR [rax]
   14001028f:	add    al,al
   140010291:	add    BYTE PTR [rax],al
   140010293:	add    bh,bh
   140010295:	inc    DWORD PTR [rax]
   140010297:	add    al,al
   140010299:	add    BYTE PTR [rax],al
   14001029b:	add    BYTE PTR [rdi],al
   14001029d:	inc    DWORD PTR [rax]
   14001029f:	add    al,al
   1400102a1:	add    BYTE PTR [rax],al
   1400102a3:	add    BYTE PTR [rcx],al
   1400102a5:	inc    DWORD PTR [rax]
   1400102a7:	add    al,al
   1400102a9:	add    BYTE PTR [rax],al
   1400102ab:	add    BYTE PTR [rax],al
   1400102ad:	inc    DWORD PTR [rax]
   1400102af:	add    al,al
   1400102b1:	add    BYTE PTR [rax],al
   1400102b3:	add    BYTE PTR [rax],al
   1400102b5:	jg     0x1400102b7
   1400102b7:	add    al,al
   1400102b9:	add    BYTE PTR [rax],al
   1400102bb:	add    BYTE PTR [rax],al
   1400102bd:	jg     0x1400102bf
   1400102bf:	add    al,al
   1400102c1:	add    BYTE PTR [rax],al
   1400102c3:	add    BYTE PTR [rax],al
   1400102c5:	jg     0x1400102c7
   1400102c7:	add    al,al
   1400102c9:	add    BYTE PTR [rax],al
   1400102cb:	add    BYTE PTR [rax],al
   1400102cd:	jg     0x1400102cf
   1400102cf:	add    al,al
   1400102d1:	add    BYTE PTR [rax],al
   1400102d3:	add    BYTE PTR [rax],al
   1400102d5:	jg     0x1400102d7
   1400102d7:	add    al,al
   1400102d9:	add    BYTE PTR [rax],al
   1400102db:	add    BYTE PTR [rax],al
   1400102dd:	outs   dx,DWORD PTR ds:[rsi]
   1400102de:	add    BYTE PTR [rax],al
   1400102e0:	rol    BYTE PTR [rax],0x0
   1400102e3:	add    BYTE PTR [rax],al
   1400102e5:	add    BYTE PTR [eax],al
   1400102e8:	rol    BYTE PTR [rax],0x0
   1400102eb:	add    BYTE PTR [rsi],dh
   1400102ed:	jae    0x1400102ef
   1400102ef:	add    al,al
   1400102f1:	add    BYTE PTR [rax],al
   1400102f3:	add    BYTE PTR [rsi],dh
   1400102f5:	jno    0x1400102f7
   1400102f7:	add    al,al
   1400102f9:	add    BYTE PTR [rax],al
   1400102fb:	add    BYTE PTR [rsi],al
   1400102fd:	jns    0x1400102ff
   1400102ff:	add    al,al
   140010301:	add    BYTE PTR [rax],al
   140010303:	add    BYTE PTR [rsi],dh
   140010305:	jns    0x140010307
   140010307:	add    al,al
   140010309:	add    BYTE PTR [rax],al
   14001030b:	add    BYTE PTR [rsi],dh
   14001030d:	jns    0x14001030f
   14001030f:	add    al,al
   140010311:	add    BYTE PTR [rax],al
   140010313:	add    BYTE PTR [rsi],al
   140010315:	jno    0x140010317
   140010317:	add    al,al
   140010319:	add    BYTE PTR [rax],al
   14001031b:	add    BYTE PTR [rsi],dh
   14001031d:	jno    0x14001031f
   14001031f:	add    al,al
   140010321:	add    BYTE PTR [rax],al
   140010323:	add    BYTE PTR [rsi],dh
   140010325:	jae    0x140010327
   140010327:	add    al,al
   140010329:	add    BYTE PTR [rax],al
   14001032b:	add    BYTE PTR [rsi],al
   14001032d:	movsxd eax,DWORD PTR [rax]
   14001032f:	add    al,al
   140010331:	add    BYTE PTR [rax],al
   140010333:	add    BYTE PTR [rsi],dh
   140010335:	(bad)  
   140010336:	add    BYTE PTR [rax],al
   140010338:	rol    BYTE PTR [rax],0x0
   14001033b:	add    BYTE PTR [rsi],dh
   14001033d:	(bad)  
   14001033e:	add    BYTE PTR [rax],al
   140010340:	rol    BYTE PTR [rax],0x0
   140010343:	add    BYTE PTR [rsi],al
   140010345:	sldt   WORD PTR [rax]
   140010348:	rol    BYTE PTR [rax],0x0
   14001034b:	add    BYTE PTR [rsi],dh
   14001034d:	(bad)  
   14001034e:	add    BYTE PTR [rax],al
   140010350:	rol    BYTE PTR [rax],0x0
   140010353:	add    BYTE PTR [rsi],dh
   140010355:	(bad)  
   140010356:	add    BYTE PTR [rax],al
   140010358:	rol    BYTE PTR [rax],0x0
   14001035b:	add    BYTE PTR [rsi],al
   14001035d:	jg     0x14001035f
   14001035f:	add    al,al
   140010361:	add    BYTE PTR [rax],al
   140010363:	add    dh,bh
   140010365:	jg     0x140010367
   140010367:	add    al,ah
   140010369:	add    BYTE PTR [rax],al
   14001036b:	add    dh,bh
   14001036d:	inc    DWORD PTR [rax]
   14001036f:	add    al,dh
   140010371:	add    BYTE PTR [rax],al
   140010373:	add    bh,bh
   140010375:	inc    DWORD PTR [rax]
   140010377:	add    dh,bh
   140010379:	add    BYTE PTR [rax],al
   14001037b:	add    bh,bh
   14001037d:	inc    DWORD PTR [rax]
   14001037f:	add    bh,bh
   140010381:	loopne 0x140010383
   140010383:	add    bh,bh
   140010385:	inc    DWORD PTR [rax]
   140010387:	add    bh,bh
   140010389:	cld    
   14001038a:	add    BYTE PTR [rax],al
   14001038c:	(bad)  
   14001038d:	inc    DWORD PTR [rax]
   14001038f:	add    bh,bh
   140010391:	inc    DWORD PTR [rax+0xffff00]
   140010397:	add    bh,bh
   140010399:	push   rax
   14001039b:	add    bh,bh
   14001039d:	inc    DWORD PTR [rax]
   14001039f:	add    bh,bh
   1400103a1:	(bad)  
   1400103a2:	inc    BYTE PTR [rcx]
   1400103a4:	(bad)  
   1400103a5:	inc    DWORD PTR [rax]
   1400103a7:	add    bh,bh
   1400103a9:	(bad)  
   1400103aa:	(bad)  
   1400103ab:	(bad)  
   1400103ac:	(bad)  
   1400103ad:	inc    DWORD PTR [rax]
   1400103af:	add    BYTE PTR [rax],ch
   1400103b1:	add    BYTE PTR [rax],al
   1400103b3:	add    BYTE PTR [rax],ah
   1400103b5:	add    BYTE PTR [rax],al
   1400103b7:	add    BYTE PTR [rax+0x0],al
   1400103ba:	add    BYTE PTR [rax],al
   1400103bc:	add    DWORD PTR [rax],eax
   1400103be:	or     BYTE PTR [rax],al
   1400103c0:	add    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	add    BYTE PTR [rax+rax*1],al
	...
   1400103cf:	add    BYTE PTR [rax],al
   1400103d1:	add    DWORD PTR [rax],eax
   1400103d3:	add    BYTE PTR [rax],al
   1400103d5:	add    DWORD PTR [rax],eax
   1400103d7:	add    BYTE PTR [rax],al
   1400103d9:	add    BYTE PTR [rax],al
   1400103db:	add    BYTE PTR [rdi],ch
   1400103dd:	sbb    eax,0x3a1a0017
   1400103e2:	(bad)  
   1400103e3:	add    BYTE PTR [rdi],dh
   1400103e5:	xor    ebp,DWORD PTR [rsi]
   1400103e7:	add    BYTE PTR [rcx],bh
   1400103e9:	xor    ebp,DWORD PTR [rsi]
   1400103eb:	add    BYTE PTR [rbx],bh
   1400103ed:	xor    al,BYTE PTR ss:[rax]
   1400103f0:	cmp    DWORD PTR ds:[rax+rax*1],esi
   1400103f4:	rex.X cmp esi,DWORD PTR [rsi]
   1400103f7:	add    BYTE PTR [rsi+rdi*1+0x38],al
   1400103fb:	add    BYTE PTR [rsi+0x40],al
   1400103fe:	cmp    al,BYTE PTR [rax]
   140010400:	rex.WX
   140010401:	rex.XB cmp eax,0x37445000
   140010407:	add    BYTE PTR [rbp+0x46],cl
   14001040a:	add    BYTE PTR [r15+0x49],al
   14001040e:	rex.WRXB add BYTE PTR [r11+0x4c],r10b
   140010412:	add    BYTE PTR [r15+0x4f],r10b
   140010416:	rex.W add BYTE PTR [rdi+0x50],dl
   14001041a:	rex.WB add BYTE PTR [r13+0x56],bl
   14001041e:	rex.WRX add BYTE PTR [rax+0x54],r9b
   140010422:	pop    rdi
   140010423:	add    BYTE PTR [rdi+0x57],dl
   140010426:	push   rdi
   140010427:	add    BYTE PTR [rax+0x54],bl
   14001042a:	push   rdx
   14001042b:	add    BYTE PTR [rdx+0x56],dl
   14001042e:	pop    rax
   14001042f:	add    BYTE PTR [rsp+rbx*2+0x5b],bl
   140010433:	add    BYTE PTR [rsi+0x55],ch
   140010436:	add    BYTE PTR [r10+0x5e],bpl
   14001043a:	rex.WRB add BYTE PTR [r9+0x5a],r12b
   14001043e:	push   rbp
   14001043f:	add    BYTE PTR [rdi+0x70],al
   140010442:	pop    rbp
   140010443:	add    BYTE PTR [rax+rax*2+0x76],cl
   140010447:	add    BYTE PTR [rbp+0x65],ah
   14001044a:	add    BYTE PTR gs:[rcx+0x69],ch
   14001044e:	imul   eax,DWORD PTR [rax],0x6d6d6d
   140010454:	jno    0x1400104c7
   140010456:	jno    0x140010458
   140010458:	ja     0x1400104d1
   14001045a:	jbe    0x14001045c
   14001045c:	jnp    0x1400104d1
   14001045e:	jne    0x140010460
   140010460:	jns    0x1400104db
   140010462:	jns    0x140010464
   140010464:	jl     0x1400104e2
   140010466:	jl     0x140010468
   140010468:	mov    edx,0xbe000773
   14001046d:	jbe    0x14001047c
   14001046f:	add    BYTE PTR [rdi-0x45fff285],bh
   140010475:	jne    0x14001048f
   140010477:	add    BYTE PTR [rbx-0x7dffe287],dh
   14001047d:	(bad)  
   14001047e:	xor    BYTE PTR [rax],al
   140010480:	xchg   DWORD PTR [rbp+0x38],esp
   140010483:	add    bl,dl
   140010485:	jle    0x140010490
   140010487:	add    BYTE PTR [rsi-0x6fffbd97],al
   14001048d:	outs   dx,BYTE PTR ds:[rsi]
   14001048e:	rex.WX add BYTE PTR [rsi-0x6fffba8e],al
   140010495:	jb     0x1400104e5
   140010497:	add    BYTE PTR [rsi-0x6effac91],dl
   14001049d:	pop    rsi
   14001049e:	je     0x1400104a0
   1400104a0:	mov    ch,0x7d
   1400104a2:	ja     0x1400104a4
   1400104a4:	mov    ebx,0x757a
   1400104a9:	mov    edi,0xee00005d
   1400104ae:	jge    0x1400104b0
   1400104b0:	mov    ebp,0xaf001985
   1400104b5:	xor    DWORD PTR [rdi],0x0
   1400104b8:	mov    bl,0x84
   1400104ba:	(bad)  
   1400104bb:	add    BYTE PTR [rsi-0x45ffcf80],bh
   1400104c1:	lea    esi,[rdx]
   1400104c3:	add    bh,cl
   1400104c5:	test   DWORD PTR [rsi],eax
   1400104c7:	add    bl,cl
   1400104c9:	(bad)  
   1400104ca:	ltr    bx
   1400104cd:	test   BYTE PTR [rsi],al
   1400104cf:	add    bl,bl
   1400104d1:	mov    es,WORD PTR [rsi]
   1400104d3:	add    ah,dl
   1400104d5:	test   BYTE PTR [rbx],cl
   1400104d7:	add    cl,bl
   1400104d9:	or     DWORD PTR [rcx],0x0
   1400104dc:	mov    BYTE PTR [rax-0x7a35ffef],0x13
   1400104e3:	add    dl,dl
   1400104e5:	mov    edx,DWORD PTR [rax+rax*1]
   1400104e8:	fst    DWORD PTR [rbx-0x6721ffeb]
   1400104ee:	adc    eax,DWORD PTR [rax]
   1400104f0:	ficom  DWORD PTR [rbx+rbx*1+0x1c9ad000]
   1400104f7:	add    ch,bl
   1400104f9:	(bad)  
   1400104fa:	sbb    eax,0xb89e300
   1400104ff:	add    dl,ah
   140010501:	cdq    
   140010502:	(bad)  
   140010503:	add    cl,ah
   140010505:	xchg   ecx,eax
   140010506:	adc    DWORD PTR [rax],eax
   140010508:	loop   0x1400104a3
   14001050a:	adc    BYTE PTR [rax],al
   14001050c:	in     eax,dx
   14001050d:	pushf  
   14001050e:	(bad)  
   14001050f:	add    ah,ah
   140010511:	movabs al,ds:0xa3f1001aa4e8001d
   14001051a:	adc    al,0x0
   14001051c:	repnz movabs al,ds:0x97c6001db4ff001e
   140010526:	sub    eax,DWORD PTR [rax]
   140010528:	int    0x9e
   14001052a:	sub    eax,DWORD PTR [rax]
   14001052c:	(bad)  
   14001052d:	xchg   edi,eax
   14001052e:	sub    eax,DWORD PTR [rax]
   140010530:	rcr    DWORD PTR [rsi-0x702effd2],1
   140010536:	cmp    al,BYTE PTR [rax]
   140010538:	in     al,dx
   140010539:	popf   
   14001053a:	xor    eax,0x379ff000
   14001053f:	add    cl,dl
   140010541:	movabs ds:0xa5ef0027a4ef0025,al
   14001054a:	sub    eax,DWORD PTR [rax]
   14001054c:	in     al,dx
   14001054d:	test   eax,0xa2ff0029
   140010552:	and    DWORD PTR [rax],eax
   140010554:	imul   DWORD PTR [rbp+rbp*1+0x2bb0f000]
   14001055b:	add    bh,bh
   14001055d:	mov    ebx,0xa2ed002c
   140010562:	xor    al,BYTE PTR [rax]
   140010564:	out    0xa6,al
   140010566:	cmp    eax,DWORD PTR [rax]
   140010568:	(bad)  
   140010569:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001056a:	(bad)  
   14001056b:	add    dl,ch
   14001056d:	test   al,0x3e
   14001056f:	add    cl,dh
   140010571:	movabs eax,ds:0xcbff003aa5fc003c
   14001057a:	(bad)  
   14001057b:	add    bh,bh
   14001057d:	(bad)  
   14001057e:	sbb    eax,0x36d4ff00
   140010583:	add    BYTE PTR [rdx-0x55ffbc79],dh
   140010589:	test   BYTE PTR [rcx+0x0],dl
   14001058c:	scas   al,BYTE PTR es:[rdi]
   14001058d:	mov    BYTE PTR [rax+rax*1-0x71],dl
   140010591:	xchg   BYTE PTR [rbp+0x0],bh
   140010594:	sahf   
   140010595:	(bad)  
   140010596:	jge    0x140010598
   140010598:	mov    WORD PTR [rdx-0x7356ff86],ss
   14001059e:	push   0x0
   1400105a0:	mov    dl,0x8e
   1400105a2:	(bad)  
   1400105a3:	add    BYTE PTR [rdx-0x4fff996f],ch
   1400105a9:	xchg   ebx,eax
   1400105aa:	movsxd eax,DWORD PTR [rax]
   1400105ac:	mov    bh,0x99
   1400105ae:	imul   eax,DWORD PTR [rax],0xffffffa2
   1400105b1:	mov    WORD PTR [rcx+0x0],?
   1400105b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400105b5:	xchg   edx,eax
   1400105b6:	jl     0x1400105b8
   1400105b8:	lods   eax,DWORD PTR ds:[rsi]
   1400105b9:	mov    dl,0x7f
   1400105bb:	add    cl,dl
   1400105bd:	sahf   
   1400105be:	rex.WRB add r12b,r8b
   1400105c1:	lea    ebx,[rbx+0x0]
   1400105c4:	(bad)
   1400105c7:	add    ah,cl
   1400105c9:	lahf   
   1400105ca:	pop    rax
   1400105cb:	add    dl,bl
   1400105cd:	fwait
   1400105ce:	push   rbx
   1400105cf:	add    dl,dl
   1400105d1:	pushf  
   1400105d2:	pop    rcx
   1400105d3:	add    dl,ah
   1400105d5:	popf   
   1400105d6:	rex.W add spl,spl
   1400105d9:	xchg   esp,eax
   1400105da:	push   rsp
   1400105db:	add    ah,bl
   1400105dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400105de:	add    r15b,r10b
   1400105e1:	movabs eax,ds:0xa4da004aa4dd0049
   1400105ea:	push   rbp
   1400105eb:	add    ah,dl
   1400105ed:	movabs ds:0xa7e90041a2e30058,al
   1400105f6:	rex.RXB add r9b,r13b
   1400105f9:	lods   eax,DWORD PTR ds:[rsi]
   1400105fa:	add    al,r13b
   1400105fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400105fe:	rex.W add spl,spl
   140010601:	test   eax,0xade8004f
   140010606:	rex.W add dil,spl
   140010609:	mov    bl,0x4b
   14001060b:	add    al,dh
   14001060d:	mov    bh,0x43
   14001060f:	add    ch,dh
   140010611:	mov    edi,0xa2e4004b
   140010616:	push   rax
   140010617:	add    ch,ah
   140010619:	scas   al,BYTE PTR es:[rdi]
   14001061a:	pop    rbx
   14001061b:	add    ch,ah
   14001061d:	mov    ah,0x57
   14001061f:	add    ch,ah
   140010621:	mov    esi,0xbaec0059
   140010626:	pop    rbx
   140010627:	add    bh,al
   140010629:	sahf   
   14001062a:	imul   eax,DWORD PTR [rax],0xffffffda
   14001062d:	xchg   edi,eax
   14001062e:	gs add cl,dl
   140010631:	fwait
   140010632:	jno    0x140010634
   140010634:	(bad)  
   140010635:	movabs ds:0xa1ce0066abdb0061,eax
   14001063e:	jl     0x140010640
   140010640:	fidiv  WORD PTR [rbp-0x4420ff8a]
   140010646:	jno    0x140010648
   140010648:	(bad)  
   140010649:	mov    esp,0xbbfe0066
   14001064e:	imul   eax,DWORD PTR [rax],0x57c1f2
   140010654:	lock leave 
   140010656:	push   rsp
   140010657:	add    bl,dh
   140010659:	retf   0x5e
   14001065c:	fmulp  st(4),st
   14001065e:	ja     0x140010660
   140010660:	ffree  st(3)
   140010662:	jnp    0x140010664
   140010664:	fmulp  st(4),st
   140010666:	jns    0x140010668
   140010668:	loop   0x140010636
   14001066a:	addr32 add al,ah
   14001066d:	retf   
   14001066e:	push   0x0
   140010670:	cld    
   140010671:	(bad)  
   140010672:	gs add ch,bh
   140010675:	shr    DWORD PTR [rcx+0x0],0xff
   140010679:	int3   
   14001067a:	imul   eax,DWORD PTR [rax],0xfffffff4
   14001067d:	(bad)  
   14001067e:	addr32 add ch,bh
   140010681:	shl    DWORD PTR [rdi+0x0],1
   140010684:	cmc    
   140010685:	retf   
   140010686:	jb     0x140010688
   140010688:	(bad)  
   140010689:	fbstp  TBYTE PTR [rax+0x0]
   14001068c:	jmp    rax
   14001068e:	(bad)  
   14001068f:	add    BYTE PTR [rdi],dh
   140010691:	outs   dx,DWORD PTR ds:[rsi]
   140010692:	mov    al,0x0
   140010694:	outs   dx,DWORD PTR ds:[rsi]
   140010695:	je     0x140010624
   140010697:	add    BYTE PTR [rbp+0x35],cl
   14001069a:	(bad)  
   14001069b:	add    BYTE PTR [rax],ch
   14001069d:	ja     0x140010670
   14001069f:	add    BYTE PTR [rip+0x7200ea7b],bl        # 0x1b201f120
   1400106a5:	rex.WRX (bad) 
   1400106a7:	add    BYTE PTR [rax+rdx*4-0x7e],ch
   1400106ab:	add    BYTE PTR [rsi-0x57],bh
   1400106ae:	xchg   edx,eax
   1400106af:	add    BYTE PTR [rsi],dh
   1400106b1:	add    bl,0x0
   1400106b4:	cmp    eax,0x7600dfb1
   1400106b9:	(bad)  
   1400106ba:	int3   
   1400106bb:	add    BYTE PTR [rsi-0x44],dl
   1400106be:	in     eax,0x0
   1400106c0:	add    DWORD PTR [rbx-0x7e7bff7e],0xffffff81
   1400106c7:	add    BYTE PTR [rsi-0x77ff7a7a],al
   1400106cd:	test   DWORD PTR [rdx-0x76767600],eax
   1400106d3:	add    BYTE PTR [rsi-0x69ff7173],cl
   1400106d9:	mov    WORD PTR [rcx-0x74737000],es
   1400106df:	add    BYTE PTR [rbx+rdx*4-0x6c6aff76],bl
   1400106e6:	xchg   esp,eax
   1400106e7:	add    BYTE PTR [rbp-0x67ff6a6b],dl
   1400106ed:	xchg   ebp,eax
   1400106ee:	xchg   edi,eax
   1400106ef:	add    BYTE PTR [rcx-0x67ff6963],bl
   1400106f5:	xchg   edi,eax
   1400106f6:	cdq    
   1400106f7:	add    BYTE PTR [rbp-0x66ff6567],dl
   1400106fd:	cwde   
   1400106fe:	(bad)  
   1400106ff:	add    BYTE PTR [rcx+rbx*4-0x6362ff66],bl
   140010706:	fwait
   140010707:	add    BYTE PTR [rbx-0x63ff6367],bl
   14001070d:	(bad)  
   14001070e:	popf   
   14001070f:	add    BYTE PTR [rsi-0x5fff6163],bl
   140010715:	popf   
   140010716:	sahf   
   140010717:	add    BYTE PTR [rdi-0x5eff5e61],bl
   14001071d:	sahf   
   14001071e:	movabs al,ds:0xa3a3a300acba9d00
   140010727:	add    BYTE PTR [rcx-0x56ff5c5b],ch
   14001072d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001072e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001072f:	add    BYTE PTR [rdi-0x55ff575a],ah
   140010735:	stos   BYTE PTR es:[rdi],al
   140010736:	stos   BYTE PTR es:[rdi],al
   140010737:	add    BYTE PTR [rdi+rbp*4-0x4c4cff53],dh
   14001073e:	mov    bl,0x0
   140010740:	mov    edx,0xbe00b4b5
   140010745:	mov    ecx,0xb9b600b7
   14001074a:	mov    ecx,0xbbbbbb00
   14001074f:	add    ah,al
   140010751:	mov    esi,0xc3b200bd
   140010756:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010757:	add    BYTE PTR [rsi-0x24ff4d40],ah
   14001075d:	(bad)
   140010760:	fxch   st(5)
   140010762:	lea    eax,[rax]
   140010764:	in     al,0xc2
   140010766:	fwait
   140010767:	add    ah,al
   140010769:	ret    0xbe
   14001076c:	mov    edi,0xc300c0c0
   140010771:	ret    
   140010772:	ret    
   140010773:	add    dl,cl
   140010775:	(bad)
   140010778:	retf   
   140010779:	(bad)  
   14001077a:	enter  0xc600,0xc8
   14001077e:	enter  0xcc00,0xcb
   140010782:	int3   
   140010783:	add    bl,dl
   140010785:	int3   
   140010786:	int3   
   140010787:	add    dh,cl
   140010789:	ror    bh,1
   14001078b:	add    dl,dl
   14001078d:	ror    bh,1
   14001078f:	add    bh,cl
   140010791:	iret   
   140010792:	rol    BYTE PTR [rax],1
   140010794:	ror    bh,1
   140010796:	rol    BYTE PTR [rax],1
   140010798:	rcl    edx,cl
   14001079a:	rol    DWORD PTR [rax],cl
   14001079c:	fcmovbe st,st(3)
   14001079e:	rol    DWORD PTR [rax],cl
   1400107a0:	xlat   BYTE PTR ds:[rbx]
   1400107a1:	fcom   st(7)
   1400107a3:	add    dh,dl
   1400107a5:	(bad)  
   1400107a6:	fadd   DWORD PTR [rax]
   1400107a8:	xlat   BYTE PTR ds:[rbx]
   1400107a9:	fcomp  st(0)
   1400107ab:	add    al,bl
   1400107ad:	(bad)  
   1400107af:	add    ch,bl
   1400107b1:	fstp   st(5)
   1400107b3:	add    bl,ah
   1400107b5:	fcmove st,st(6)
   1400107b7:	add    ah,ah
   1400107b9:	fcmovnu st,st(3)
   1400107bb:	add    bl,ah
   1400107bd:	jrcxz  0x1400107a2
   1400107bf:	add    bl,ch
   1400107c1:	loop   0x1400107a5
   1400107c3:	add    ah,ch
   1400107c5:	in     al,dx
   1400107c6:	in     al,dx
   1400107c7:	add    ah,dh
   1400107c9:	hlt    
   1400107ca:	hlt    
   1400107cb:	add    cl,bh
   1400107cd:	stc    
   1400107ce:	stc    
   1400107cf:	add    dh,bh
   1400107d1:	(bad)  
   1400107d2:	inc    BYTE PTR [rax]
   1400107d4:	(bad)  
   1400107d5:	(bad)  
   1400107d6:	inc    DWORD PTR [rax]
   1400107d8:	add    BYTE PTR [rax],al
   1400107da:	add    BYTE PTR [rdi+0xd7bcbf],bh
	...
   1400107f8:	add    BYTE PTR [rax],al
   1400107fa:	mov    edi,0xf6d5d5c3
   1400107ff:	(bad)  
   140010800:	and    esp,DWORD PTR [rbx]
   140010802:	sbb    al,0x1e
   140010804:	mov    esp,0x23
	...
   140010819:	int    0xd7
   14001081b:	ret    
   14001081c:	(bad)  
   14001081d:	int    0xf0
   14001081f:	xlat   BYTE PTR ds:[rbx]
   140010820:	int    0x1c
   140010822:	(bad)  
   140010823:	and    edx,edi
   140010825:	out    dx,al
   140010826:	shl    DWORD PTR [rbx],cl
	...
   140010838:	add    ah,cl
   14001083a:	fcmovb st,st(5)
   14001083c:	fmul   st,st(7)
   14001083e:	lock xlat BYTE PTR ds:[rbx]
   140010840:	mov    edi,0x1e1fd7d3
   140010845:	mov    esp,0x1fd3ecda
	...
   140010856:	add    BYTE PTR [rax],al
   140010858:	add    ch,cl
   14001085a:	fcmove st,st(5)
   14001085c:	fcmove st,st(5)
   14001085e:	lock fucomp st(6)
   140010861:	(bad)  
   140010862:	ret    
   140010863:	xlat   BYTE PTR ds:[rbx]
   140010864:	fnstsw WORD PTR [rbp+rbx*1-0x320f2641]
   14001086b:	and    eax,DWORD PTR [rax]
	...
   140010879:	int    0xde
   14001087b:	int    0xe8
   14001087d:	int    0xf0
   14001087f:	int    0xcf
   140010881:	fsub   st(6),st
   140010883:	(bad)  
   140010885:	(bad)  
   140010886:	(bad)  
   140010887:	mov    esi,0xdadd2316
   14001088c:	mov    esp,0x0
	...
   140010899:	int    0xea
   14001089b:	iret   
   14001089c:	(bad)  
   14001089d:	iret   
   14001089e:	in     eax,dx
   14001089f:	rcl    al,1
   1400108a1:	int    0xd0
   1400108a3:	(bad)  
   1400108a5:	(bad)  
   1400108a6:	(bad)  
   1400108a7:	(bad)  
   1400108a8:	(bad)  
   1400108a9:	mov    edi,0xbcbc14
	...
   1400108b6:	add    BYTE PTR [rax],al
   1400108b8:	add    ch,cl
   1400108ba:	in     eax,dx
   1400108bb:	iret   
   1400108bc:	in     eax,dx
   1400108bd:	int    0xf0
   1400108bf:	int    0xcf
   1400108c1:	ror    ch,1
   1400108c3:	ror    ch,1
   1400108c5:	fsubr  st,st(6)
   1400108c7:	call   0x16c78e3a6
   1400108cc:	ins    DWORD PTR es:[rdi],dx
   1400108cd:	sub    eax,0x6e
   1400108d2:	add    BYTE PTR [rax],al
   1400108d4:	add    BYTE PTR [rax],al
   1400108d6:	add    BYTE PTR [rax],al
   1400108d8:	add    ch,cl
   1400108da:	icebp  
   1400108db:	iret   
   1400108dc:	in     eax,dx
   1400108dd:	iret   
   1400108de:	lock iret 
   1400108e0:	rcl    al,1
   1400108e2:	rcl    al,1
   1400108e4:	ror    ch,1
   1400108e6:	rcr    cl,1
   1400108e8:	out    0x38,al
   1400108ea:	pop    rdi
   1400108eb:	rex.WRB cmp rax,0xffffffffc0575949
	...
   1400108f9:	int    0xf8
   1400108fb:	iret   
   1400108fc:	in     eax,dx
   1400108fd:	iret   
   1400108fe:	out    dx,al
   1400108ff:	rcl    al,1
   140010901:	iret   
   140010902:	iret   
   140010903:	iret   
   140010904:	rcl    esi,cl
   140010906:	iret   
   140010907:	shl    DWORD PTR [rbp+0x61],cl
   14001090a:	cmp    edi,DWORD PTR [rcx+rax*2]
   14001090d:	and    eax,0xc2672b24
   140010912:	add    BYTE PTR [rax],al
   140010914:	add    BYTE PTR [rax],al
   140010916:	add    BYTE PTR [rax],al
   140010918:	add    ch,cl
   14001091a:	cli    
   14001091b:	iret   
   14001091c:	icebp  
   14001091d:	int    0xf0
   14001091f:	iret   
   140010920:	iret   
   140010921:	(bad)  
   140010922:	(bad)  
   140010923:	rcl    esi,cl
   140010925:	(bad)  
   140010926:	(bad)  
   140010927:	(bad)  
   140010928:	test   BYTE PTR [rbp+0x3c4b453e],cl
   14001092e:	cmp    esp,DWORD PTR [rdi*1+0x39]
   140010935:	add    BYTE PTR [rax],al
   140010937:	add    BYTE PTR [rax],al
   140010939:	int    0xfa
   14001093b:	shl    ecx,cl
   14001093d:	iret   
   14001093e:	lock (bad) 
   140010940:	(bad)  
   140010941:	rcl    esi,cl
   140010943:	(bad)  
   140010944:	(bad)  
   140010945:	(bad)  
   140010946:	xlat   BYTE PTR ds:[rbx]
   140010947:	xlat   BYTE PTR ds:[rbx]
   140010948:	(bad)  
   140010949:	stos   BYTE PTR es:[rdi],al
   14001094a:	rex.WRXB
   14001094b:	rex.WR
   14001094c:	rex.W
   14001094d:	rex.RB
   14001094e:	rex.WXB cmp al,0x3f
   140010951:	(bad)  
   140010952:	add    BYTE PTR [rax],al
   140010954:	add    BYTE PTR [rax],al
   140010956:	add    BYTE PTR [rax],al
   140010958:	add    bh,cl
   14001095a:	cli    
   14001095b:	shl    ecx,cl
   14001095d:	int    0xf0
   14001095f:	(bad)  
   140010960:	(bad)  
   140010961:	xlat   BYTE PTR ds:[rbx]
   140010962:	adc    DWORD PTR [rcx],edx
   140010964:	or     eax,DWORD PTR [rdi]
   140010966:	(bad)  
   140010967:	(bad)  
   140010968:	sub    ch,BYTE PTR [rcx+0x454a5d9e]
   14001096e:	rex.WXB
   14001096f:	rex.WXB
   140010970:	rex.WXB sub BYTE PTR [r8],al
   140010973:	add    BYTE PTR [rax],al
   140010975:	add    BYTE PTR [rax],al
   140010977:	add    BYTE PTR [rax],al
   140010979:	int    0xfa
   14001097b:	shl    ecx,cl
   14001097d:	iret   
   14001097e:	lock xlat BYTE PTR ds:[rbx]
   140010980:	xlat   BYTE PTR ds:[rbx]
   140010981:	xlat   BYTE PTR ds:[rbx]
   140010982:	adc    ebx,edi
   140010984:	or     esi,DWORD PTR [rsp+rax*4+0x6d]
   140010988:	ins    DWORD PTR es:[rdi],dx
   140010989:	imul   esp,DWORD PTR [rax+0x505d8ea6],0x48
   140010990:	push   rax
   140010991:	sub    BYTE PTR [rax],al
   140010993:	add    BYTE PTR [rsi+0x0],dh
   140010996:	add    BYTE PTR [rax],al
   140010998:	add    bh,cl
   14001099a:	cli    
   14001099b:	iret   
   14001099c:	in     eax,dx
   14001099d:	iret   
   14001099e:	lock xlat BYTE PTR ds:[rbx]
   1400109a0:	xlat   BYTE PTR ds:[rbx]
   1400109a1:	xlat   BYTE PTR ds:[rbx]
   1400109a2:	sbb    DWORD PTR [rcx],edx
   1400109a4:	or     al,0x78
   1400109a6:	xchg   edx,eax
   1400109a7:	mov    DWORD PTR [rdi-0x6e84d2e9],ecx
   1400109ad:	xchg   ebx,eax
   1400109ae:	mov    WORD PTR [rbx+riz*2+0x36],?
   1400109b2:	add    BYTE PTR [rax],al
   1400109b4:	pushf  
   1400109b5:	jno    0x1400109b7
   1400109b7:	add    BYTE PTR [rax],al
   1400109b9:	int    0xf8
   1400109bb:	iret   
   1400109bc:	call   0x11adbfa90
   1400109c1:	fcom   QWORD PTR [rcx]
   1400109c3:	std    
   1400109c4:	or     al,0x8c
   1400109c6:	mov    WORD PTR [rsp+rcx*4+0xb7f8687],cs
   1400109cd:	neg    DWORD PTR [rax]
   1400109cf:	add    BYTE PTR [rdx+0x47],al
   1400109d5:	add    BYTE PTR [eax],al
   1400109d8:	add    ch,cl
   1400109da:	icebp  
   1400109db:	iret   
   1400109dc:	fmulp  st(5),st
   1400109de:	lock (bad) 
   1400109e1:	fst    QWORD PTR [rcx]
   1400109e3:	adc    DWORD PTR [riz*2-0x779a9a9b],ecx
   1400109ea:	mov    BYTE PTR [rbp+0x111106],al
   1400109f0:	xchg   BYTE PTR [rdi+0x0],al
   1400109f3:	add    BYTE PTR [rax],al
   1400109f5:	pop    rsi
   1400109f6:	outs   dx,DWORD PTR ds:[rsi]
   1400109f7:	add    BYTE PTR [rax],al
   1400109f9:	int    0xed
   1400109fb:	int    0xdb
   1400109fd:	shl    eax,1
   1400109ff:	(bad)  
   140010a00:	fsubr  st(6),st
   140010a02:	adc    ebp,edi
   140010a04:	(bad)  
   140010a05:	(bad)  
   140010a07:	xor    dh,BYTE PTR [rbx]
   140010a09:	mov    BYTE PTR [rdi],dh
   140010a0b:	adc    DWORD PTR [rsi],eax
   140010a0d:	sti    
   140010a0e:	adc    DWORD PTR [rax],eax
   140010a10:	sbb    DWORD PTR [rdx+0x0],0x2c500000
   140010a17:	add    BYTE PTR [rax],al
   140010a19:	int    0xe8
   140010a1b:	int    0xda
   140010a1d:	iret   
   140010a1e:	lock out 0xe6,al
   140010a21:	out    0x11,al
   140010a23:	adc    DWORD PTR [rsi],ecx
   140010a25:	pop    rbp
   140010a26:	(bad)  
   140010a27:	add    BYTE PTR [rax+0x61b1230],0x19
   140010a2e:	adc    DWORD PTR [rax],eax
   140010a30:	sbb    DWORD PTR [rdx+0x0],0x295b0000
   140010a37:	add    BYTE PTR [rax],al
   140010a39:	int    0xde
   140010a3b:	(bad)  
   140010a3c:	(bad)  
   140010a3e:	repz (bad) 
   140010a40:	out    0xe8,al
   140010a42:	adc    ebp,edi
   140010a44:	(bad)  
   140010a45:	add    eax,0x4040505
   140010a4a:	add    al,0x3
   140010a4c:	or     bl,bh
   140010a4e:	adc    DWORD PTR [rax],eax
   140010a50:	adc    DWORD PTR [rax+rax*1+0x0],0x0
   140010a55:	push   rdx
   140010a56:	add    BYTE PTR cs:[rax],al
   140010a59:	int    0xb5
   140010a5b:	xor    eax,0xe8f0d1e0
   140010a60:	(bad)  
   140010a61:	(bad)  
   140010a62:	adc    DWORD PTR [rcx],edx
   140010a64:	(bad)  
   140010a65:	mov    bl,0xb0
   140010a67:	jo     0x140010ad9
   140010a69:	mov    ah,0xae
   140010a6b:	mov    dh,0x8
   140010a6d:	sbb    DWORD PTR [rcx],edx
   140010a6f:	add    BYTE PTR [rbx+0x56],al
   140010a75:	push   0xffffffffc8000000
   140010a7a:	xor    eax,0xf3d3d234
   140010a7f:	out    dx,al
   140010a80:	(bad)  
   140010a81:	out    dx,al
   140010a82:	adc    ebp,edi
   140010a84:	adc    DWORD PTR [rdx],esi
   140010a86:	xor    DWORD PTR [rdx+0x7a],edi
   140010a89:	adc    al,0xb2
   140010a8b:	mov    cl,0x9
   140010a8d:	sti    
   140010a8e:	adc    DWORD PTR [rax],eax
   140010a90:	adc    DWORD PTR [rbx+0x0],0x0
   140010a94:	push   rbp
   140010a95:	push   0xffffffffcd000000
   140010a9a:	sbb    al,BYTE PTR [rdx]
   140010a9c:	rcl    ecx,0xf0
   140010a9f:	out    dx,al
   140010aa0:	out    dx,al
   140010aa1:	out    dx,al
   140010aa2:	adc    DWORD PTR [rcx],edx
   140010aa4:	adc    DWORD PTR [rsi+0xd727495],edx
   140010aaa:	mov    bh,0xb9
   140010aac:	or     DWORD PTR [rcx],ebx
   140010aae:	adc    DWORD PTR [rax],eax
   140010ab0:	(bad)  
   140010ab1:	cmp    al,BYTE PTR [rax]
   140010ab3:	jge    0x140010b1f
   140010ab5:	je     0x140010ab7
   140010ab7:	add    BYTE PTR [rax],al
   140010ab9:	int    0x11
   140010abb:	add    DWORD PTR [rdi-0x1111092d],edi
   140010ac1:	out    dx,al
   140010ac2:	adc    ebp,edi
   140010ac4:	adc    edi,ebx
   140010ac6:	loop   0x140010aa9
   140010ac8:	loope  0x140010aeb
   140010aca:	scas   eax,DWORD PTR es:[rdi]
   140010acb:	mov    eax,0x11fb0c
   140010ad0:	xchg   edi,eax
   140010ad1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010ad2:	mov    DWORD PTR [rbp+0x9f],ebp
   140010ad8:	add    ch,cl
   140010ada:	(bad)  
   140010adb:	sbb    edi,ecx
   140010add:	int3   
   140010ade:	stc    
   140010adf:	in     eax,dx
   140010ae0:	in     al,dx
   140010ae1:	in     eax,dx
   140010ae2:	adc    DWORD PTR [rcx],edx
   140010ae4:	adc    DWORD PTR [rdx-0x645e5c5d],esp
   140010aea:	xchg   esp,eax
   140010aeb:	cdq    
   140010aec:	or     al,0x11
   140010aee:	adc    DWORD PTR [rax],eax
   140010af0:	jle    0x140010a8f
   140010af2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010af3:	xchg   ebx,eax
   140010af4:	add    BYTE PTR [rax],al
   140010af6:	add    BYTE PTR [rax],al
   140010af8:	add    dl,ch
   140010afa:	mov    edx,0xffd6ccbc
   140010aff:	stc    
   140010b00:	div    dh
   140010b02:	adc    ebp,edi
   140010b04:	adc    DWORD PTR [rbp+riz*4-0x5a5a5a5b],esp
   140010b0b:	(bad)  
   140010b0c:	(bad)  
   140010b0d:	sti    
   140010b0e:	sbb    DWORD PTR [rax],eax
   140010b10:	jle    0x140010aba
   140010b12:	stos   DWORD PTR es:[rdi],eax
   140010b13:	add    BYTE PTR [rax],al
   140010b15:	add    BYTE PTR [rax],al
   140010b17:	add    BYTE PTR [rax],al
   140010b19:	add    dl,ch
   140010b1b:	fcmovu st,st(4)
   140010b1d:	idiv   bh
   140010b1f:	(bad)  
   140010b20:	(bad)  
   140010b21:	call   QWORD PTR [rcx]
   140010b23:	sbb    DWORD PTR [rcx],edx
   140010b25:	adc    DWORD PTR [rcx],edx
   140010b27:	adc    DWORD PTR [rcx],edx
   140010b29:	adc    BYTE PTR [rax],dl
   140010b2b:	(bad)  
   140010b2c:	(bad)  
   140010b2d:	sbb    DWORD PTR [rcx],edx
   140010b2f:	add    BYTE PTR [rsi-0x54],bh
	...
   140010b3a:	add    BYTE PTR [rax],al
   140010b3c:	imul   dl
   140010b3e:	fsub   st(2),st
   140010b40:	stc    
   140010b41:	(bad)  
   140010b42:	(bad)  
   140010b43:	(bad)  
   140010b44:	(bad)  
   140010b45:	(bad)  
   140010b46:	stc    
   140010b47:	stc    
   140010b48:	idiv   cl
   140010b4a:	stc    
   140010b4b:	stc    
   140010b4c:	not    bh
   140010b4e:	add    BYTE PTR [rax],al
   140010b50:	nop
   140010b51:	jnp    0x140010b53
	...
   140010b5f:	lock out 0xdc,al
   140010b62:	(bad)  
   140010b63:	repnz (bad) 
   140010b65:	(bad)  
   140010b66:	(bad)  
   140010b67:	(bad)  
   140010b68:	(bad)  
   140010b69:	sti    
   140010b6a:	sti    
   140010b6b:	stc    
   140010b6c:	not    bh
   140010b6e:	add    BYTE PTR [rax],al
   140010b70:	cwde   
	...
   140010b81:	add    BYTE PTR [rax],al
   140010b83:	(bad)  
   140010b84:	(bad)  
   140010b86:	idiv   bh
   140010b88:	(bad)  
   140010b89:	(bad)  
   140010b8a:	(bad)  
   140010b8b:	(bad)  
   140010b8c:	out    dx,al
   140010b8d:	(bad)  
	...
   140010ba2:	add    BYTE PTR [rax],al
   140010ba4:	add    dh,dh
   140010ba6:	(bad)  
   140010ba7:	fsub   st(2),st
   140010ba9:	div    dh
   140010bab:	out    dx,al
   140010bac:	fadd   QWORD PTR [rax]
	...
   140010bc6:	add    BYTE PTR [rax],al
   140010bc8:	add    dl,ch
   140010bca:	(bad)  
   140010bcb:	lock add BYTE PTR [rax],al
	...
   140010bd6:	add    BYTE PTR [rax],al
   140010bd8:	loope  0x140010bd9
   140010bda:	(bad)  
   140010bdb:	inc    eax
   140010bdd:	add    edi,edi
   140010bdf:	inc    DWORD PTR [rax-0x7f000100]
   140010be5:	add    BYTE PTR [rdi],bh
   140010be7:	inc    DWORD PTR [rax-0x7f00f100]
   140010bed:	add    BYTE PTR [rdi],al
   140010bef:	inc    DWORD PTR [rax-0x7f00f900]
   140010bf5:	add    BYTE PTR [rcx],al
   140010bf7:	inc    DWORD PTR [rax-0x7f810000]
   140010bfd:	add    BYTE PTR [rax],al
   140010bff:	(bad)  
   140010c00:	add    BYTE PTR [rax],0x0
   140010c03:	(bad)  
   140010c04:	add    BYTE PTR [rax],0x0
   140010c07:	(bad)  
   140010c08:	add    BYTE PTR [rax],0x0
   140010c0b:	(bad)  
   140010c0c:	add    BYTE PTR [rax],0x0
   140010c0f:	(bad)  
   140010c10:	add    BYTE PTR [rax],0x0
   140010c13:	xor    eax,DWORD PTR [rax-0x7fc4ff00]
   140010c19:	add    BYTE PTR [rcx],al
   140010c1b:	cmp    DWORD PTR [rax-0x7fc6ff00],eax
   140010c21:	add    BYTE PTR [rcx],al
   140010c23:	cmp    DWORD PTR [rax-0x7fc6ff00],eax
   140010c29:	add    BYTE PTR [rcx],al
   140010c2b:	cmp    eax,DWORD PTR [rax-0x7fccff00]
   140010c31:	add    BYTE PTR [rcx],al
   140010c33:	and    eax,DWORD PTR [rax-0x7ff8ff00]
   140010c39:	add    BYTE PTR [rcx],al
   140010c3b:	jo     0x100200d41
   140010c41:	add    BYTE PTR [rcx],al
   140010c43:	(bad)  
   140010c44:	lock add BYTE PTR [rbx],al
   140010c47:	(bad)  
   140010c48:	inc    BYTE PTR [rax]
   140010c4a:	add    edi,DWORD PTR [rdi-0x1]
   140010c4d:	loopne 0x140010c52
   140010c4f:	(bad)  
   140010c50:	(bad)  
   140010c51:	clc    
   140010c52:	(bad)  
   140010c53:	(bad)  
   140010c54:	(bad)  
   140010c55:	dec    DWORD PTR [rdi+0x28ff]
   140010c5b:	add    BYTE PTR [rax],dl
   140010c5d:	add    BYTE PTR [rax],al
   140010c5f:	add    BYTE PTR [rax],ah
   140010c61:	add    BYTE PTR [rax],al
   140010c63:	add    BYTE PTR [rcx],al
   140010c65:	add    BYTE PTR [rax],cl
   140010c67:	add    BYTE PTR [rax],al
   140010c69:	add    BYTE PTR [rax],al
   140010c6b:	add    BYTE PTR [rax],al
   140010c6d:	add    DWORD PTR [rax],eax
	...
   140010c77:	add    BYTE PTR [rax],al
   140010c79:	add    DWORD PTR [rax],eax
   140010c7b:	add    BYTE PTR [rax],al
   140010c7d:	add    DWORD PTR [rax],eax
   140010c7f:	add    BYTE PTR [rax],al
   140010c81:	add    BYTE PTR [rax],al
   140010c83:	add    BYTE PTR [rdx+0x43],cl
   140010c86:	cmp    eax,0x3f454c00
   140010c8b:	add    BYTE PTR [rsi+0x59],bh
   140010c8e:	sub    BYTE PTR [rax],al
   140010c90:	push   rsi
   140010c91:	rex.WRX
   140010c92:	rex.RXB add BYTE PTR [r15+0x50],r10b
   140010c96:	rex.WB add BYTE PTR [r8+0x51],bl
   140010c9a:	rex.WX add BYTE PTR [rax+0x5c],dil
   140010c9e:	(bad)  
   140010c9f:	add    BYTE PTR [rdi+0x7f],bh
   140010ca2:	jg     0x140010ca4
   140010ca4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ca5:	jno    0x140010cc0
   140010ca7:	add    ch,cl
   140010ca9:	jbe    0x140010cab
   140010cab:	add    ch,al
   140010cad:	ja     0x140010cba
   140010caf:	add    dh,cl
   140010cb1:	jns    0x140010cbd
   140010cb3:	add    dl,cl
   140010cb5:	jge    0x140010cc5
   140010cb7:	add    cl,dl
   140010cb9:	jnp    0x140010cce
   140010cbb:	add    BYTE PTR [rcx+rsi*2+0x7da00047],bl
   140010cc2:	rex.X add BYTE PTR [rax+0x31006278],al
   140010cc9:	rcr    BYTE PTR [rbp+0x0],0x9
   140010ccd:	jmp    0xc7b40d26
   140010cd2:	ss add dh,cl
   140010cd5:	mov    WORD PTR [rcx],es
   140010cd7:	add    bh,al
   140010cd9:	mov    DWORD PTR [rax+rax*1],ecx
   140010cdc:	rol    BYTE PTR [rax-0x792e0000],1
   140010ce2:	add    BYTE PTR [rax],al
   140010ce4:	fadd   QWORD PTR [rcx-0x72260000]
   140010cea:	add    BYTE PTR [rax],al
   140010cec:	iret   
   140010ced:	xchg   esi,eax
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	fistp  WORD PTR [rcx-0x6f2a0000]
   140010cf6:	str    ecx
   140010cf9:	mov    dl,BYTE PTR [rip+0x198acb00]        # 0x1598bd7ff
   140010cff:	add    bl,cl
   140010d01:	lea    ebx,[rbx]
   140010d03:	add    ah,cl
   140010d05:	mov    WORD PTR [rdx],ds
   140010d07:	add    al,ah
   140010d09:	pop    QWORD PTR [rcx]
   140010d0b:	add    cl,ah
   140010d0d:	xchg   ebx,eax
   140010d0e:	add    BYTE PTR [rax],al
   140010d10:	loope  0x140010cb1
   140010d12:	add    BYTE PTR [rax],al
   140010d14:	out    0x98,al
   140010d16:	add    eax,0x1fabfa00
   140010d1b:	add    cl,cl
   140010d1d:	mov    BYTE PTR [rbx],ah
   140010d1f:	add    cl,ch
   140010d21:	(bad)  
   140010d22:	ds add dl,dl
   140010d25:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010d26:	cmp    DWORD PTR [rax],eax
   140010d28:	jmp    0x140010cd6
   140010d2a:	(bad)  
   140010d2b:	add    BYTE PTR [rax-0x57ffaf7b],ah
   140010d31:	nop
   140010d32:	(bad)  
   140010d33:	add    BYTE PTR [rbx-0x56ff9b68],ah
   140010d39:	pushf  
   140010d3a:	imul   eax,DWORD PTR [rax],0xffffffa1
   140010d3d:	xchg   esp,eax
   140010d3e:	jbe    0x140010d40
   140010d40:	mov    bl,0xa1
   140010d42:	jae    0x140010d44
   140010d44:	retf   
   140010d45:	pop    QWORD PTR [rsi+0x0]
   140010d48:	(bad)  
   140010d49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010d4a:	add    cl,dl
   140010d4d:	movabs al,ds:0xb3e4005fa9db0051
   140010d56:	rex.WRB add r13b,r13b
   140010d59:	mov    ah,0x49
   140010d5b:	add    dh,bl
   140010d5d:	iret   
   140010d5e:	je     0x140010d60
   140010d60:	call   0x12201852a
   140010d65:	(bad)  
   140010d66:	je     0x140010d68
   140010d68:	jbe    0x140010dc5
   140010d6a:	pop    QWORD PTR [rax]
   140010d6c:	xchg   ebx,eax
   140010d6d:	movsxd eax,DWORD PTR [rdi-0x4aa97b00]
   140010d73:	add    BYTE PTR [rbp-0x75ff7a7b],al
   140010d79:	mov    cl,BYTE PTR [rdx-0x6c6c6d00]
   140010d7f:	add    BYTE PTR [rbp-0x66ff6a6b],dl
   140010d85:	cdq    
   140010d86:	cdq    
   140010d87:	add    BYTE PTR [rbp-0x5dff6263],bl
   140010d8d:	movabs ds:0xaaaa00a5a5a500a2,al
   140010d96:	stos   BYTE PTR es:[rdi],al
   140010d97:	add    BYTE PTR [rsi-0x4eff5152],ch
   140010d9d:	mov    cl,0xb1
   140010d9f:	add    BYTE PTR [rdx-0x69ff4546],bh
   140010da5:	(bad)
   140010da8:	(bad)  
   140010da9:	ror    DWORD PTR [rax-0x773a1d00],0x0
   140010db0:	out    0xcc,al
   140010db2:	xchg   esp,eax
   140010db3:	add    cl,al
   140010db5:	rol    ecx,0x0
   140010db8:	(bad)
   140010dbb:	add    bl,cl
   140010dbd:	retf   
   140010dbe:	retf   
   140010dbf:	add    dl,dl
   140010dc1:	rcl    dl,cl
   140010dc3:	add    dh,dl
   140010dc5:	(bad)  
   140010dc6:	(bad)  
   140010dc7:	add    dh,al
   140010dc9:	neg    cl
   140010dcb:	add    cl,dh
   140010dcd:	icebp  
   140010dce:	icebp  
	...
   14001107b:	add    bh,bh
   14001107d:	(bad)  
   14001107e:	inc    DWORD PTR [rax]
   140011080:	add    BYTE PTR [rdi+0x40],al
   140011083:	rex
   140011084:	rex
   140011085:	rex.RXB add BYTE PTR [r8],r8b
	...
   140011090:	rex.RXB
   140011091:	rex.W
   140011092:	rex.WRX
   140011093:	rex.WRX
   140011094:	rex.WRX
   140011095:	rex.RXB
   140011096:	rex.RXB add BYTE PTR [r8],r8b
   140011099:	add    BYTE PTR [rbx],bl
   14001109b:	sbb    esi,DWORD PTR [rcx]
   14001109d:	add    BYTE PTR [rax],al
   14001109f:	add    BYTE PTR [rdx+0x51],al
   1400110a2:	rex.WRX
   1400110a3:	ds rex.WRX
   1400110a5:	rex.W
   1400110a6:	rex.X add BYTE PTR [rax],al
   1400110a9:	xor    ebx,DWORD PTR [rbx]
   1400110ab:	sbb    BYTE PTR [rcx+rsi*1],cl
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	rex.X push rcx
   1400110b2:	rex.WRX
   1400110b3:	add    DWORD PTR ds:[rcx],eax
   1400110b6:	add    DWORD PTR [rcx],eax
   1400110b8:	add    DWORD PTR [rip+0x27192225],esp        # 0x1671a32e3
   1400110be:	add    BYTE PTR [rax],al
   1400110c0:	rex.X push rcx
   1400110c2:	rex.W
   1400110c3:	add    DWORD PTR ds:[rbx+0x11],edx
   1400110c7:	xor    BYTE PTR [rsp+rcx*1],dh
   1400110ca:	and    ah,BYTE PTR [rip+0x2122]        # 0x1400131f2
   1400110d0:	rex.X push rcx
   1400110d2:	rex.WRX
   1400110d3:	add    DWORD PTR ds:[rcx],eax
   1400110d6:	sub    esi,DWORD PTR [rip+0x9031036]        # 0x149042112
   1400110dc:	sub    ah,BYTE PTR [rcx]
   1400110de:	add    BYTE PTR [rax],al
   1400110e0:	rex.X push rcx
   1400110e2:	rex.WRXB
   1400110e3:	rex add DWORD PTR [rbx+0x14],edx
   1400110e7:	sub    BYTE PTR es:[rdi],cl
   1400110ea:	inc    DWORD PTR [rcx]
   1400110ec:	add    BYTE PTR [rsi],dl
   1400110ee:	add    BYTE PTR [rbx],cl
   1400110f0:	rex.X push rcx
   1400110f2:	push   rcx
   1400110f3:	rex.X add DWORD PTR [rcx],eax
   1400110f6:	(bad)  
   1400110f7:	(bad)  
   1400110f8:	add    al,0x1
   1400110fa:	add    DWORD PTR [rcx],eax
   1400110fc:	add    BYTE PTR [rsi],bl
   1400110fe:	add    BYTE PTR [rsi],cl
   140011100:	rex.R push rcx
   140011102:	push   rcx
   140011103:	rex add DWORD PTR [rbx+0x3a],edx
   140011107:	cmp    al,0x3b
   140011109:	(bad)  
   14001110a:	inc    DWORD PTR [rcx]
   14001110c:	add    BYTE PTR [rsi],bl
   14001110e:	add    BYTE PTR [rdx],cl
   140011110:	rex.R push rcx
   140011112:	push   rcx
   140011113:	rex add DWORD PTR [rcx],eax
   140011116:	(bad)  
   140011117:	rex.WX cmp BYTE PTR [rcx+r8*1],bpl
   14001111b:	add    DWORD PTR [rax],eax
   14001111d:	and    DWORD PTR [rcx],ebp
   14001111f:	xor    al,BYTE PTR [rcx+rdx*2+0x40]
   140011123:	rex add DWORD PTR [rbx+0x2e],edx
   140011127:	(bad)  
   140011128:	cmp    DWORD PTR [rip+0x1d0001ff],ebp        # 0x15d01132d
   14001112e:	adc    eax,0x12524400
   140011133:	adc    eax,DWORD PTR [rcx]
   140011135:	add    DWORD PTR [rcx],eax
   140011137:	add    DWORD PTR [rcx],eax
   140011139:	add    DWORD PTR [rcx],eax
   14001113b:	add    DWORD PTR [rax],eax
   14001113d:	sbb    BYTE PTR [rax],al
   14001113f:	add    BYTE PTR [rbp+0x52],al
   140011142:	add    BYTE PTR [rax],al
   140011144:	add    BYTE PTR [rcx+0x45],cl
	...
   14001114f:	add    BYTE PTR [rbp+0x51],al
   140011152:	or     BYTE PTR ds:[rip+0x4548],bh        # 0x1400156a1
   140011159:	add    BYTE PTR [rax],al
   14001115b:	add    BYTE PTR [rax],al
   14001115d:	add    BYTE PTR [rax],al
   14001115f:	add    BYTE PTR [rsi+0x47],cl
   140011162:	rex.WRX
   140011163:	rex.WRX
   140011164:	rex.WRX
   140011165:	rex.RXB
   140011166:	rex.WRX add BYTE PTR [rax],r8b
	...
   140011171:	rex.WRX
   140011172:	rex.RXB
   140011173:	rex.RXB
   140011174:	rex.RXB
   140011175:	rex.WRX add BYTE PTR [rax],r8b
	...
   140011180:	cmp    edi,0x0
   140011183:	add    BYTE PTR [rcx],al
   140011185:	mov    DWORD PTR [rax],0x830100
   14001118b:	add    BYTE PTR [rax],al
   14001118d:	add    eax,DWORD PTR [rax]
   14001118f:	add    BYTE PTR [rax],al
   140011191:	add    eax,DWORD PTR [rax]
   140011193:	add    BYTE PTR [rax],al
   140011195:	add    eax,DWORD PTR [rax]
   140011197:	add    BYTE PTR [rax],al
   140011199:	or     al,BYTE PTR [rax]
   14001119b:	add    BYTE PTR [rax],al
   14001119d:	or     al,BYTE PTR [rax]
   14001119f:	add    BYTE PTR [rax],al
   1400111a1:	or     al,BYTE PTR [rax]
   1400111a3:	add    BYTE PTR [rax],al
   1400111a5:	or     BYTE PTR [rax],al
   1400111a7:	add    BYTE PTR [rax],al
   1400111a9:	or     DWORD PTR [rax],eax
   1400111ab:	add    BYTE PTR [rax],al
   1400111ad:	or     eax,DWORD PTR [rax]
   1400111af:	add    BYTE PTR [rcx],bh
   1400111b1:	inc    DWORD PTR [rax]
   1400111b3:	add    BYTE PTR [rcx],al
   1400111b5:	inc    DWORD PTR [rax]
   1400111b7:	add    BYTE PTR [rcx],al
   1400111b9:	inc    DWORD PTR [rax]
   1400111bb:	add    BYTE PTR [rbx+0x280000ff],al
   1400111c1:	add    BYTE PTR [rax],al
   1400111c3:	add    BYTE PTR [rax],dh
   1400111c5:	add    BYTE PTR [rax],al
   1400111c7:	add    BYTE PTR [rax+0x0],ah
   1400111ca:	add    BYTE PTR [rax],al
   1400111cc:	add    DWORD PTR [rax],eax
   1400111ce:	and    BYTE PTR [rax],al
   1400111d0:	add    BYTE PTR [rax],al
   1400111d2:	add    BYTE PTR [rax],al
   1400111d4:	and    BYTE PTR [rip+0x0],0x0        # 0x1400111db
	...
   1400111f7:	add    BYTE PTR [rax],al
   1400111f9:	add    al,0x0
   1400111fb:	sub    DWORD PTR [rcx],edi
   1400111fd:	cmp    al,0x39
   1400111ff:	jnp    0x14001124b
   140011201:	rex.WB
   140011202:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140011204:	cmp    DWORD PTR [rcx+rdi*1],edi
   140011207:	test   BYTE PTR [rax],al
   140011209:	add    al,0x0
   14001120b:	xor    DWORD PTR [rax],eax
   14001120d:	add    BYTE PTR [rax],al
   14001120f:	or     BYTE PTR [rax],al
   140011211:	add    BYTE PTR [rax],al
   140011213:	adc    BYTE PTR [rax],al
   140011215:	add    BYTE PTR [rax],al
   140011217:	sbb    BYTE PTR [rax],al
   140011219:	add    BYTE PTR [rax],al
   14001121b:	sbb    BYTE PTR [rax],al
   14001121d:	add    BYTE PTR [rax],al
   14001121f:	sbb    BYTE PTR [rax],al
   140011221:	add    BYTE PTR [rax],al
   140011223:	sbb    BYTE PTR [rax],al
   140011225:	add    BYTE PTR [rax],al
   140011227:	sbb    BYTE PTR [rax],al
   140011229:	add    BYTE PTR [rax],al
   14001122b:	sbb    BYTE PTR [rax],al
   14001122d:	add    BYTE PTR [rax],al
   14001122f:	adc    BYTE PTR [rax],al
   140011231:	add    BYTE PTR [rax],al
   140011233:	adc    BYTE PTR [rax],al
   140011235:	add    BYTE PTR [rax],al
   140011237:	or     BYTE PTR [rax],al
   140011239:	add    BYTE PTR [rax],al
   14001123b:	or     BYTE PTR [rax],al
	...
   1400112b1:	add    BYTE PTR [rax],al
   1400112b3:	add    BYTE PTR [rcx],ch
   1400112b5:	sub    BYTE PTR [rcx],ch
   1400112b7:	push   rdx
   1400112b8:	jnp    0x140011337
   1400112ba:	jnp    0x1400112ab
   1400112bc:	mov    WORD PTR [rdx-0x59520074],cs
   1400112c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400112c3:	(bad)  
   1400112c4:	jnp    0x140011343
   1400112c6:	jnp    0x1400112c7
   1400112c8:	xchg   esp,eax
   1400112c9:	xchg   esi,eax
   1400112ca:	xchg   esp,eax
   1400112cb:	idiv   DWORD PTR [rcx]
   1400112cd:	cmp    BYTE PTR [rcx],bh
   1400112cf:	pushf  
   1400112d0:	add    BYTE PTR [rax],al
   1400112d2:	add    BYTE PTR [rdx+0x0],cl
   1400112d5:	add    BYTE PTR [rax],al
   1400112d7:	xor    DWORD PTR [rax],eax
   1400112d9:	add    BYTE PTR [rax],al
   1400112db:	cmp    DWORD PTR [rax],eax
   1400112dd:	add    BYTE PTR [rax],al
   1400112df:	rex.X add BYTE PTR [rax],al
   1400112e2:	add    BYTE PTR [rcx],bh
   1400112e4:	add    BYTE PTR [rax],al
   1400112e6:	add    BYTE PTR [rcx],bh
   1400112e8:	add    BYTE PTR [rax],al
   1400112ea:	add    BYTE PTR [rcx],bh
   1400112ec:	add    BYTE PTR [rax],al
   1400112ee:	add    BYTE PTR [rdx+0x0],dl
   1400112f1:	add    BYTE PTR [rax],al
   1400112f3:	push   rdx
   1400112f4:	add    BYTE PTR [rax],al
   1400112f6:	add    BYTE PTR [rcx],ch
   1400112f8:	add    BYTE PTR [rax],al
   1400112fa:	add    BYTE PTR [rax],bl
   1400112fc:	add    BYTE PTR [rax],al
   1400112fe:	add    BYTE PTR [rax],dl
   140011300:	add    BYTE PTR [rax],al
   140011302:	add    BYTE PTR [rax],cl
	...
   140011370:	adc    BYTE PTR [rax],dl
   140011372:	adc    BYTE PTR [rcx],bh
   140011374:	mov    WORD PTR [rsi-0x69630074],cs
   14001137a:	xchg   esp,eax
   14001137b:	dec    DWORD PTR [rsi+rax*4-0x5952007c]
   140011382:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011383:	push   QWORD PTR [rbp-0x63005252]
   140011389:	(bad)  
   14001138a:	pushf  
   14001138b:	jmp    FWORD PTR [rbp+0x63ffadaa]
   140011391:	gs movsxd esi,edi
   140011394:	sbb    BYTE PTR [rax+rbx*1],bl
   140011397:	mov    ch,0x0
   140011399:	add    BYTE PTR [rax],al
   14001139b:	jae    0x14001139d
   14001139d:	add    BYTE PTR [rax],al
   14001139f:	movsxd eax,DWORD PTR [rax]
   1400113a1:	add    BYTE PTR [rax],al
   1400113a3:	jnp    0x1400113a5
   1400113a5:	add    BYTE PTR [rax],al
   1400113a7:	pushf  
   1400113a8:	sub    DWORD PTR [rcx+rbp*1],ebp
   1400113ab:	(bad)  
   1400113ac:	movsxd esp,DWORD PTR [rbp+0x63]
   1400113af:	div    DWORD PTR [rbx+0x75]
   1400113b2:	jae    0x1400113a3
   1400113b4:	and    DWORD PTR [rax],esp
   1400113b6:	sbb    BYTE PTR [rbp+0x63000000],ch
   1400113bc:	add    BYTE PTR [rax],al
   1400113be:	add    BYTE PTR [rcx],dh
   1400113c0:	add    BYTE PTR [rax],al
   1400113c2:	add    BYTE PTR [rcx],ah
   1400113c4:	add    BYTE PTR [rax],al
   1400113c6:	add    BYTE PTR [rax],dl
   1400113c8:	add    BYTE PTR [rax],al
   1400113ca:	add    BYTE PTR [rax],cl
	...
   140011430:	push   rdx
   140011431:	push   rbp
   140011432:	push   rdx
   140011433:	pushf  
   140011434:	lods   eax,DWORD PTR ds:[rsi]
   140011435:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011436:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011437:	jmp    FWORD PTR [rbp-0x7b005a5a]
   14001143d:	(bad)  
   14001143e:	jnp    0x14001143f
   140011440:	lods   eax,DWORD PTR ds:[rsi]
   140011441:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011442:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011443:	push   QWORD PTR [rbp-0x63004a4e]
   140011449:	(bad)  
   14001144a:	pushf  
   14001144b:	jmp    FWORD PTR [rbp-0x5a005256]
   140011451:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011452:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011453:	call   QWORD PTR [rsi+rdx*4+0x5d5aff94]
   14001145a:	pop    rdx
   14001145b:	div    DWORD PTR [rcx]
   14001145d:	xor    BYTE PTR [rcx],dh
   14001145f:	out    0x31,eax
   140011461:	xor    al,0x31
   140011463:	not    DWORD PTR [rdx+0x55]
   140011466:	push   rdx
   140011467:	(bad)  
   140011468:	jnp    0x1400114e7
   14001146a:	jnp    0x14001146b
   14001146c:	mov    WORD PTR [rsi-0x41420074],cs
   140011472:	mov    ebp,0xbdbebdff
   140011477:	inc    DWORD PTR [rdx+rax*4+0x2c29f784]
   14001147e:	sub    DWORD PTR [rbp+0x6b000000],edi
   140011484:	add    BYTE PTR [rax],al
   140011486:	add    BYTE PTR [rcx],bh
   140011488:	add    BYTE PTR [rax],al
   14001148a:	add    BYTE PTR [rcx],ah
   14001148c:	add    BYTE PTR [rax],al
   14001148e:	add    BYTE PTR [rax],bl
   140011490:	add    BYTE PTR [rax],al
   140011492:	add    BYTE PTR [rax],cl
	...
   1400114f0:	pop    rdx
   1400114f1:	pop    rbp
   1400114f2:	pop    rdx
   1400114f3:	mov    ebp,0xffbdbabd
   1400114f8:	lods   eax,DWORD PTR ds:[rsi]
   1400114f9:	stos   BYTE PTR es:[rdi],al
   1400114fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400114fb:	dec    DWORD PTR [rsi+rax*4-0x4d4a007c]
   140011502:	lods   eax,DWORD PTR ds:[rsi]
   140011503:	push   QWORD PTR [rbp-0x63004a4e]
   140011509:	(bad)  
   14001150a:	pushf  
   14001150b:	jmp    FWORD PTR [rbp-0x73005256]
   140011511:	mov    cs,WORD PTR [rdi+rdi*8-0x6b696c]
   140011518:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011519:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001151a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001151b:	call   FWORD PTR [rdx+rbx*4+0x7573ff9c]
   140011522:	jae    0x140011523
   140011524:	pop    rdx
   140011525:	pop    rcx
   140011526:	pop    rdx
   140011527:	inc    DWORD PTR [rdx+0x41]
   14001152a:	rex.X out 0x10,eax
   14001152d:	adc    BYTE PTR [rax],dl
   14001152f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011530:	sub    DWORD PTR [rcx+rbp*1],ebp
   140011533:	lods   eax,DWORD PTR ds:[rsi]
   140011534:	mov    WORD PTR [rsi-0x34311874],cs
   14001153a:	(bad)  
   14001153b:	inc    esi
   14001153d:	ret    
   14001153e:	(bad)  
   14001153f:	inc    DWORD PTR [rsi+rax*4+0x3031f784]
   140011546:	sub    DWORD PTR [rbp+0x7b000000],edi
   14001154c:	add    BYTE PTR [rax],al
   14001154e:	add    BYTE PTR [rdx+0x0],al
   140011551:	add    BYTE PTR [rax],al
   140011553:	sub    DWORD PTR [rax],eax
   140011555:	add    BYTE PTR [rax],al
   140011557:	sbb    BYTE PTR [rax],al
   140011559:	add    BYTE PTR [rax],al
   14001155b:	or     BYTE PTR [rax],al
	...
   1400115ad:	add    BYTE PTR [rax],al
   1400115af:	add    BYTE PTR [rbx+0x6d],dh
   1400115b2:	imul   ecx,esi,0xffffffc6
   1400115b5:	mov    esi,0xaeb5ffbd
   1400115ba:	lods   eax,DWORD PTR ds:[rsi]
   1400115bb:	call   QWORD PTR [rsi+rcx*4-0x45390074]
   1400115c2:	mov    ebp,0xb5b2b5ff
   1400115c7:	call   FWORD PTR [rdx+rbx*4-0x51520064]
   1400115ce:	lods   eax,DWORD PTR ds:[rsi]
   1400115cf:	jmp    FWORD PTR [rbp-0x63005252]
   1400115d5:	sahf   
   1400115d6:	pushf  
   1400115d7:	dec    DWORD PTR [rdx+rcx*4-0x61630074]
   1400115de:	pushf  
   1400115df:	push   QWORD PTR [rbp-0x52004a4a]
   1400115e5:	stos   BYTE PTR es:[rdi],al
   1400115e6:	lods   eax,DWORD PTR ds:[rsi]
   1400115e7:	push   QWORD PTR [rbx+0x71]
   1400115ea:	jae    0x1400115e3
   1400115ec:	sub    DWORD PTR [rax],ebp
   1400115ee:	sub    esi,ecx
   1400115f0:	add    BYTE PTR [rax],al
   1400115f2:	add    BYTE PTR [rax+rax*1+0x217b0000],cl
   1400115f9:	and    BYTE PTR [rcx],ah
   1400115fb:	lods   eax,DWORD PTR ds:[rsi]
   1400115fc:	xchg   esp,eax
   1400115fd:	xchg   esi,eax
   1400115fe:	xchg   esp,eax
   1400115ff:	out    0xce,eax
   140011601:	iret   
   140011602:	(bad)  
   140011603:	inc    esi
   140011605:	ret    
   140011606:	(bad)  
   140011607:	dec    DWORD PTR [rdx+rcx*4+0x2c29ff8c]
   14001160e:	sub    esi,eax
   140011610:	add    BYTE PTR [rax],al
   140011612:	add    BYTE PTR [rbx+0x0],bh
   140011615:	add    BYTE PTR [rax],al
   140011617:	cmp    DWORD PTR [rax],eax
   140011619:	add    BYTE PTR [rax],al
   14001161b:	and    DWORD PTR [rax],eax
   14001161d:	add    BYTE PTR [rax],al
   14001161f:	adc    BYTE PTR [rax],al
   140011621:	add    BYTE PTR [rax],al
   140011623:	or     BYTE PTR [rax],al
	...
   14001166d:	add    BYTE PTR [rax],al
   14001166f:	add    BYTE PTR [rbx+0x71],dh
   140011672:	jae    0x140011642
   140011674:	(bad)  
   140011675:	mov    esi,0xb6bdffbd
   14001167a:	mov    ch,0xff
   14001167c:	pushf  
   14001167d:	xchg   esi,eax
   14001167e:	xchg   esp,eax
   14001167f:	inc    esi
   140011681:	mov    esi,0xb2b5ffbd
   140011686:	mov    ch,0xff
   140011688:	pushf  
   140011689:	(bad)  
   14001168a:	pushf  
   14001168b:	push   QWORD PTR [rbp-0x5a004a52]
   140011691:	movabs ds:0xb6b5ffadaeadffa5,al
   14001169a:	mov    ch,0xff
   14001169c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001169d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001169e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001169f:	call   QWORD PTR [rdx+rdx*4-0x595a006c]
   1400116a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400116a7:	(bad)  
   1400116a8:	mov    ebp,0xb5ffbdbe
   1400116ad:	mov    dh,0xb5
   1400116af:	(bad)  
   1400116b0:	jnp    0x14001172f
   1400116b2:	jnp    0x1400116b3
   1400116b4:	sub    DWORD PTR [rcx+rbp*1],ebp
   1400116b7:	(bad)  
   1400116b8:	add    BYTE PTR [rax],al
   1400116ba:	add    BYTE PTR [rax+rax*1+0x217b0000],cl
   1400116c1:	and    al,0x21
   1400116c3:	lods   eax,DWORD PTR ds:[rsi]
   1400116c4:	xchg   esp,eax
   1400116c5:	xchg   edx,eax
   1400116c6:	xchg   esp,eax
   1400116c7:	out    dx,eax
   1400116c8:	mov    bh,0xc6
   1400116cb:	(bad)  
   1400116cc:	mov    ebp,0x84ffbdbe
   1400116d1:	xchg   BYTE PTR [rdi+rdi*8-0x42d6d7d7],al
   1400116d8:	add    BYTE PTR [rax],al
   1400116da:	add    BYTE PTR [rbx+0x0],dh
   1400116dd:	add    BYTE PTR [rax],al
   1400116df:	cmp    DWORD PTR [rax],eax
   1400116e1:	add    BYTE PTR [rax],al
   1400116e3:	sbb    BYTE PTR [rax],al
   1400116e5:	add    BYTE PTR [rax],al
   1400116e7:	adc    BYTE PTR [rax],al
	...
   14001172d:	add    BYTE PTR [rax],al
   14001172f:	add    BYTE PTR [rbx+0x75],bh
   140011732:	jae    0x14001170a
   140011734:	(bad)  
   140011735:	ret    
   140011736:	(bad)  
   140011737:	(bad)  
   140011738:	mov    ebp,0x9cffb5b6
   14001173d:	xchg   esi,eax
   14001173e:	xchg   esp,eax
   14001173f:	dec    esi
   140011741:	ret    
   140011742:	mov    ebp,0xb5b2b5ff
   140011747:	call   FWORD PTR [rdx+rbx*4-0x4d4a0064]
   14001174e:	mov    ch,0xff
   140011750:	pushf  
   140011751:	sahf   
   140011752:	pushf  
   140011753:	call   FWORD PTR [rsi+rbx*4-0x5d5a0064]
   14001175a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001175b:	jmp    FWORD PTR [rbp-0x42005252]
   140011761:	mov    esi,0xb6b5ffbd
   140011766:	mov    ch,0xff
   140011768:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011769:	movabs ds:0xc3c6ffa5a6a5ffa5,al
   140011772:	(bad)  
   140011773:	inc    esi
   140011775:	mov    esi,0x949294ff
   14001177b:	(bad)  
   14001177c:	cmp    DWORD PTR [rcx+rdi*1],edi
   14001177f:	(bad)  
   140011780:	add    BYTE PTR [rax],al
   140011782:	add    BYTE PTR [rax+rax*1+0x187b0000],dl
   140011789:	sbb    BYTE PTR [rax],bl
   14001178b:	pushf  
   14001178c:	mov    WORD PTR [rsi-0x38392174],cs
   140011792:	(bad)  
   140011793:	jmp    FWORD PTR [rbp-0x7b005252]
   140011799:	(bad)  
   14001179a:	test   bh,bh
   14001179c:	rex.X
   14001179d:	rex.B
   14001179e:	rex.X (bad) 
   1400117a0:	add    BYTE PTR [rax],al
   1400117a2:	add    BYTE PTR [rbx+0x0],ah
   1400117a5:	add    BYTE PTR [rax],al
   1400117a7:	and    DWORD PTR [rax],eax
   1400117a9:	add    BYTE PTR [rax],al
   1400117ab:	adc    BYTE PTR [rax],al
   1400117ad:	add    BYTE PTR [rax],al
   1400117af:	or     BYTE PTR [rax],al
	...
   1400117ed:	add    BYTE PTR [rax],al
   1400117ef:	add    BYTE PTR [rbx+0x79],bh
   1400117f2:	jnp    0x1400117ca
   1400117f4:	(bad)  
   1400117f5:	retf   
   1400117f6:	(bad)  
   1400117f7:	inc    esi
   1400117f9:	mov    edx,0x9a9cffbd
   1400117fe:	xchg   esp,eax
   1400117ff:	dec    esi
   140011801:	mov    esi,0xb5b2b5ff
   140011807:	call   FWORD PTR [rdx+rbx*4-0x494a0064]
   14001180e:	mov    ch,0xff
   140011810:	pushf  
   140011811:	sahf   
   140011812:	pushf  
   140011813:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   14001181a:	pushf  
   14001181b:	call   FWORD PTR [rsi+rbx*4-0x5d5a0064]
   140011822:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011823:	push   QWORD PTR [rbp-0x39004a4e]
   140011829:	mov    esi,0xbdbebdff
   14001182f:	jmp    FWORD PTR [rbp-0x52005256]
   140011835:	stos   BYTE PTR es:[rdi],al
   140011836:	lods   eax,DWORD PTR ds:[rsi]
   140011837:	inc    esi
   140011839:	mov    esi,0xcecbceff
   14001183f:	call   QWORD PTR [rsi+rdx*4+0x3839ff94]
   140011846:	cmp    esi,ecx
   140011848:	add    BYTE PTR [rax],al
   14001184a:	add    BYTE PTR [rbp-0x31e7e3e8],ah
   140011850:	mov    WORD PTR [rdx-0x51520074],cs
   140011856:	lods   eax,DWORD PTR ds:[rsi]
   140011857:	jmp    FWORD PTR [rbp-0x6b005252]
   14001185d:	xchg   edx,eax
   14001185e:	xchg   esp,eax
   14001185f:	neg    DWORD PTR [rax]
   140011861:	sbb    al,0x18
   140011863:	pushf  
   140011864:	add    BYTE PTR [rax],al
   140011866:	add    BYTE PTR [rcx],bh
   140011868:	add    BYTE PTR [rax],al
   14001186a:	add    BYTE PTR [rcx],ah
   14001186c:	add    BYTE PTR [rax],al
   14001186e:	add    BYTE PTR [rax],dl
	...
   1400118b0:	jnp    0x14001192f
   1400118b2:	jnp    0x140011892
   1400118b4:	(bad)  
   1400118b5:	iret   
   1400118b6:	(bad)  
   1400118b7:	inc    esi
   1400118b9:	mov    esi,0x9ea5ffbd
   1400118be:	pushf  
   1400118bf:	dec    esi
   1400118c1:	retf   
   1400118c2:	(bad)  
   1400118c3:	push   QWORD PTR [rbp-0x63004a4e]
   1400118c9:	(bad)  
   1400118ca:	pushf  
   1400118cb:	push   QWORD PTR [rbp-0x63004a4a]
   1400118d1:	sahf   
   1400118d2:	pushf  
   1400118d3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   1400118da:	pushf  
   1400118db:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   1400118e2:	pushf  
   1400118e3:	call   FWORD PTR [rsi+rbx*4-0x5d5a0064]
   1400118ea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400118eb:	push   QWORD PTR [rbp-0x31004a4a]
   1400118f1:	retf   
   1400118f2:	(bad)  
   1400118f3:	inc    esi
   1400118f5:	ret    
   1400118f6:	(bad)  
   1400118f7:	push   QWORD PTR [rbp-0x4a004a4e]
   1400118fd:	mov    dl,0xb5
   1400118ff:	inc    esi
   140011901:	ret    
   140011902:	(bad)  
   140011903:	inc    esi
   140011905:	ret    
   140011906:	(bad)  
   140011907:	call   FWORD PTR [rdx+rbx*4+0x5d5aff9c]
   14001190e:	pop    rdx
   14001190f:	inc    DWORD PTR [rdx+0x41]
   140011912:	rex.X mul DWORD PTR [rcx]
   140011915:	and    al,0x21
   140011917:	mov    ebp,0x94080c08
   14001191c:	add    BYTE PTR [rax],al
   14001191e:	add    BYTE PTR [rbx+0x0],bh
   140011921:	add    BYTE PTR [rax],al
   140011923:	movsxd eax,DWORD PTR [rax]
   140011925:	add    BYTE PTR [rax],al
   140011927:	rex.WX add BYTE PTR [rax],al
   14001192a:	add    BYTE PTR [rcx],dh
   14001192c:	add    BYTE PTR [rax],al
   14001192e:	add    BYTE PTR [rax],bl
   140011930:	add    BYTE PTR [rax],al
   140011932:	add    BYTE PTR [rax],cl
	...
   140011970:	test   BYTE PTR [rbp+0x7b],bh
   140011973:	(bad)  
   140011975:	xlat   BYTE PTR ds:[rbx]
   140011976:	(bad)  
   140011977:	dec    esi
   140011979:	ret    
   14001197a:	mov    ebp,0x9c9ea5ff
   14001197f:	call   rsi
   140011981:	retf   
   140011982:	(bad)  
   140011983:	(bad)  
   140011984:	mov    ebp,0x9cffb5b6
   140011989:	(bad)  
   14001198a:	pushf  
   14001198b:	push   QWORD PTR [rbp-0x63004a4a]
   140011991:	sahf   
   140011992:	pushf  
   140011993:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   14001199a:	pushf  
   14001199b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   1400119a2:	pushf  
   1400119a3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   1400119aa:	pushf  
   1400119ab:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   1400119b2:	pushf  
   1400119b3:	push   QWORD PTR [rbp-0x31004a4e]
   1400119b9:	retf   
   1400119ba:	(bad)  
   1400119bb:	dec    esi
   1400119bd:	iret   
   1400119be:	(bad)  
   1400119bf:	push   QWORD PTR [rbp-0x52004a4a]
   1400119c5:	scas   al,BYTE PTR es:[rdi]
   1400119c6:	lods   eax,DWORD PTR ds:[rsi]
   1400119c7:	(bad)  
   1400119c8:	mov    ebp,0xbdffbdbe
   1400119cd:	mov    esi,0x8e8cffbd
   1400119d2:	mov    edi,?
   1400119d4:	xor    DWORD PTR [rcx+rsi*1],esi
   1400119d7:	(bad)  
   1400119d8:	add    BYTE PTR [rax],al
   1400119da:	add    BYTE PTR [rax+rax*1+0x630000],dl
   1400119e1:	add    BYTE PTR [rax],al
   1400119e3:	push   rdx
   1400119e4:	add    BYTE PTR [rax],al
   1400119e6:	add    BYTE PTR [rdx+0x0],cl
   1400119e9:	add    BYTE PTR [rax],al
   1400119eb:	xor    DWORD PTR [rax],eax
   1400119ed:	add    BYTE PTR [rax],al
   1400119ef:	and    DWORD PTR [rax],eax
   1400119f1:	add    BYTE PTR [rax],al
   1400119f3:	adc    BYTE PTR [rax],al
   1400119f5:	add    BYTE PTR [rax],al
   1400119f7:	or     BYTE PTR [rax],al
	...
   140011a2d:	add    BYTE PTR [rax],al
   140011a2f:	add    BYTE PTR [rdx+rax*4-0x2418187c],al
   140011a36:	fdivp  st(7),st
   140011a38:	(bad)  
   140011a39:	mov    esi,0x9c9ea5ff
   140011a3f:	call   rsi
   140011a41:	iret   
   140011a42:	(bad)  
   140011a43:	(bad)  
   140011a44:	mov    ebp,0x9cffbdb6
   140011a49:	(bad)  
   140011a4a:	pushf  
   140011a4b:	push   QWORD PTR [rbp-0x63004a4a]
   140011a51:	sahf   
   140011a52:	pushf  
   140011a53:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011a5a:	pushf  
   140011a5b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011a62:	pushf  
   140011a63:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011a6a:	pushf  
   140011a6b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011a72:	pushf  
   140011a73:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011a7a:	pushf  
   140011a7b:	push   QWORD PTR [rbp-0x31004a4e]
   140011a81:	retf   
   140011a82:	(bad)  
   140011a83:	dec    esi
   140011a85:	retf   
   140011a86:	(bad)  
   140011a87:	push   QWORD PTR [rbp-0x52004a4e]
   140011a8d:	stos   BYTE PTR es:[rdi],al
   140011a8e:	lods   eax,DWORD PTR ds:[rsi]
   140011a8f:	push   QWORD PTR [rbp-0x4a004a4a]
   140011a95:	mov    dl,0xb5
   140011a97:	dec    DWORD PTR [rdx+rcx*4+0x494aff8c]
   140011a9e:	rex.WX (bad) 
   140011aa0:	or     BYTE PTR [rax],cl
   140011aa2:	or     BYTE PTR [rax+rax*1+0x420000],al
   140011aa9:	add    BYTE PTR [rax],al
   140011aab:	xor    DWORD PTR [rax],eax
   140011aad:	add    BYTE PTR [rax],al
   140011aaf:	and    DWORD PTR [rax],eax
   140011ab1:	add    BYTE PTR [rax],al
   140011ab3:	sbb    BYTE PTR [rax],al
   140011ab5:	add    BYTE PTR [rax],al
   140011ab7:	or     BYTE PTR [rax],al
   140011ab9:	add    BYTE PTR [rax],al
   140011abb:	or     BYTE PTR [rax],al
	...
   140011aed:	add    BYTE PTR [rax],al
   140011aef:	add    BYTE PTR [rdx+rax*4-0x2010187c],al
   140011af6:	fdivp  st(7),st
   140011af8:	(bad)  
   140011af9:	retf   
   140011afa:	(bad)  
   140011afb:	jmp    QWORD PTR [rbp-0x29005a5e]
   140011b01:	ror    esi,cl
   140011b03:	(bad)  
   140011b04:	mov    ebp,0x9cffbdb6
   140011b09:	xchg   esi,eax
   140011b0a:	pushf  
   140011b0b:	push   QWORD PTR [rbp-0x63004a4a]
   140011b11:	sahf   
   140011b12:	pushf  
   140011b13:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b1a:	pushf  
   140011b1b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b22:	pushf  
   140011b23:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b2a:	pushf  
   140011b2b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b32:	pushf  
   140011b33:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b3a:	pushf  
   140011b3b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011b42:	pushf  
   140011b43:	jmp    FWORD PTR [rbp-0x39005252]
   140011b49:	ret    
   140011b4a:	(bad)  
   140011b4b:	inc    esi
   140011b4d:	ret    
   140011b4e:	(bad)  
   140011b4f:	jmp    FWORD PTR [rbp-0x63005252]
   140011b55:	sahf   
   140011b56:	pushf  
   140011b57:	jmp    QWORD PTR [rbp-0x52005a5e]
   140011b5d:	stos   BYTE PTR es:[rdi],al
   140011b5e:	lods   eax,DWORD PTR ds:[rsi]
   140011b5f:	jmp    QWORD PTR [rbp+0x63ffa5a6]
   140011b65:	(bad)  
   140011b66:	movsxd edi,DWORD PTR [rbp+0x31000000]
   140011b6c:	add    BYTE PTR [rax],al
   140011b6e:	add    BYTE PTR [rcx],ah
   140011b70:	add    BYTE PTR [rax],al
   140011b72:	add    BYTE PTR [rax],bl
   140011b74:	add    BYTE PTR [rax],al
   140011b76:	add    BYTE PTR [rax],dl
   140011b78:	add    BYTE PTR [rax],al
   140011b7a:	add    BYTE PTR [rax],cl
   140011b7c:	add    BYTE PTR [rax],al
   140011b7e:	add    BYTE PTR [rax],cl
	...
   140011bb0:	test   BYTE PTR [rsi-0x1810107c],al
   140011bb6:	out    0xff,eax
   140011bb8:	(bad)  
   140011bb9:	iret   
   140011bba:	(bad)  
   140011bbb:	jmp    FWORD PTR [rbp-0x21005a5a]
   140011bc1:	ror    esi,cl
   140011bc3:	(bad)  
   140011bc4:	mov    ebp,0x9cffbdb6
   140011bc9:	xchg   esi,eax
   140011bca:	xchg   esp,eax
   140011bcb:	(bad)  
   140011bcc:	mov    ebp,0x9cffbdba
   140011bd1:	sahf   
   140011bd2:	pushf  
   140011bd3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011bda:	pushf  
   140011bdb:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011be2:	pushf  
   140011be3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011bea:	pushf  
   140011beb:	call   FWORD PTR [rsi+rbx*4-0x5d5a0064]
   140011bf2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011bf3:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140011bf9:	movabs ds:0xa2a5ffa5a2a5ffa5,al
   140011c02:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c03:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140011c09:	movabs ds:0xbabdffadaeadffa5,al
   140011c12:	mov    ebp,0xb5b6b5ff
   140011c17:	call   FWORD PTR [rsi+rbx*4-0x6d6b0064]
   140011c1e:	xchg   esp,eax
   140011c1f:	call   FWORD PTR [rsi+rbx*4-0x7d730064]
   140011c26:	jnp    0x140011c1f
   140011c28:	rex.X xor BYTE PTR [rax],bl
   140011c2b:	pushf  
   140011c2c:	imul   ecx,DWORD PTR [rbp+0x21],0xffffffc6
   140011c30:	xchg   esp,eax
   140011c31:	gs xor esi,edx
   140011c34:	movsxd eax,DWORD PTR [rcx+0x18]
   140011c37:	mov    ebp,0x84182839
   140011c3c:	adc    BYTE PTR [rax],dl
   140011c3e:	adc    BYTE PTR [rcx],dh
   140011c40:	sbb    BYTE PTR [rax+rcx*1],dl
   140011c43:	adc    BYTE PTR [rax],al
	...
   140011c6d:	add    BYTE PTR [rax],al
   140011c6f:	add    BYTE PTR [rsi+rax*4-0x1408107c],cl
   140011c76:	out    dx,eax
   140011c77:	(bad)  
   140011c78:	(bad)  
   140011c7a:	(bad)  
   140011c7b:	jmp    FWORD PTR [rbp-0x21005a5a]
   140011c81:	rcl    esi,cl
   140011c83:	(bad)  
   140011c84:	mov    ebp,0x94ffbdba
   140011c89:	xchg   esi,eax
   140011c8a:	xchg   esp,eax
   140011c8b:	(bad)  
   140011c8c:	mov    ebp,0x9cffbdba
   140011c91:	sahf   
   140011c92:	pushf  
   140011c93:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140011c9a:	pushf  
   140011c9b:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140011ca1:	movabs ds:0xa2a5ffa5a2a5ffa5,al
   140011caa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011cab:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140011cb1:	movabs ds:0xa6a5ffa5a2a5ffa5,al
   140011cba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011cbb:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011cc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011cc2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011cc3:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011cc9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011cca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ccb:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011cd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011cd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011cd3:	jmp    FWORD PTR [rbp-0x4a005252]
   140011cd9:	mov    dl,0xb5
   140011cdb:	jmp    FWORD PTR [rbp-0x73005256]
   140011ce1:	jns    0x140011d46
   140011ce3:	call   rsi
   140011ce5:	xchg   esi,eax
   140011ce6:	cmp    edi,edi
   140011ce8:	push   QWORD PTR [rdx-0x5d1000be]
   140011cee:	cmp    edi,edi
   140011cf0:	out    0x9a,eax
   140011cf2:	sub    edi,edi
   140011cf4:	out    0x9a,eax
   140011cf6:	xor    edi,edi
   140011cf8:	out    dx,eax
   140011cf9:	movabs ds:0x455aff398ac6ff42,al
   140011d02:	and    DWORD PTR [rbp+0x18000408],esp
	...
   140011d30:	mov    WORD PTR [rdx-0x14080874],cs
   140011d36:	out    dx,eax
   140011d37:	(bad)  
   140011d38:	(bad)  
   140011d3a:	(bad)  
   140011d3b:	jmp    FWORD PTR [rbp-0x21005a5a]
   140011d41:	xlat   BYTE PTR ds:[rbx]
   140011d42:	(bad)  
   140011d43:	inc    esi
   140011d45:	mov    edx,0x9694ffbd
   140011d4a:	xchg   esp,eax
   140011d4b:	(bad)  
   140011d4c:	mov    ebp,0xa5ffbdba
   140011d51:	movabs ds:0xa2a5ffa5a2a5ffa5,al
   140011d5a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d5b:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140011d61:	movabs ds:0xa6a5ffa5a2a5ffa5,al
   140011d6a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d6b:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011d71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d72:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d73:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011d79:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d7a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d7b:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011d81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d82:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d83:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011d89:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d8a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d8b:	jmp    FWORD PTR [rbp-0x52005256]
   140011d91:	stos   BYTE PTR es:[rdi],al
   140011d92:	lods   eax,DWORD PTR ds:[rsi]
   140011d93:	jmp    FWORD PTR [rbp-0x52005256]
   140011d99:	stos   BYTE PTR es:[rdi],al
   140011d9a:	lods   eax,DWORD PTR ds:[rsi]
   140011d9b:	jmp    FWORD PTR [rbp-0x10007362]
   140011da1:	stos   BYTE PTR es:[rdi],al
   140011da2:	xor    edi,edi
   140011da4:	out    dx,eax
   140011da5:	sahf   
   140011da6:	or     bh,bh
   140011da8:	(bad)  
   140011da9:	jge    0x140011db3
   140011dab:	inc    esi
   140011dad:	jge    0x140011db7
   140011daf:	(bad)  
   140011db0:	mov    ebp,0xbdff0879
   140011db5:	jne    0x140011db7
   140011db7:	(bad)  
   140011db8:	mov    ebp,0xd6ff0069
   140011dbd:	xchg   BYTE PTR [rax],bl
   140011dbf:	push   rdi
   140011dc1:	movabs ds:0x808d629618cff39,al
   140011dca:	or     BYTE PTR [rcx],ah
	...
   140011df0:	mov    WORD PTR [rdx-0x10000874],cs
   140011df6:	idiv   edi
   140011df8:	(bad)  
   140011dfa:	(bad)  
   140011dfb:	push   QWORD PTR [rbp-0x21005256]
   140011e01:	fcmovnbe st,st(6)
   140011e03:	inc    esi
   140011e05:	mov    esi,0x9694ffbd
   140011e0a:	xchg   esp,eax
   140011e0b:	(bad)  
   140011e0c:	mov    ebp,0xa5ffbdba
   140011e11:	movabs ds:0xa2a5ffa5a2a5ffa5,al
   140011e1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e1b:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011e21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e22:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e23:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011e29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e2a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e2b:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011e31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e32:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e33:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011e39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e3a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e3b:	jmp    FWORD PTR [rbp-0x52005256]
   140011e41:	stos   BYTE PTR es:[rdi],al
   140011e42:	lods   eax,DWORD PTR ds:[rsi]
   140011e43:	jmp    FWORD PTR [rbp-0x52005256]
   140011e49:	stos   BYTE PTR es:[rdi],al
   140011e4a:	lods   eax,DWORD PTR ds:[rsi]
   140011e4b:	jmp    FWORD PTR [rbp-0x52005256]
   140011e51:	stos   BYTE PTR es:[rdi],al
   140011e52:	lods   eax,DWORD PTR ds:[rsi]
   140011e53:	jmp    FWORD PTR [rbp-0x52005256]
   140011e59:	stos   BYTE PTR es:[rdi],al
   140011e5a:	lods   eax,DWORD PTR ds:[rsi]
   140011e5b:	(bad)  
   140011e5c:	mov    ebp,0xffff5a96
   140011e61:	(bad)  
   140011e62:	push   rdx
   140011e63:	dec    esi
   140011e65:	xchg   BYTE PTR [rax],al
   140011e67:	(bad)  
   140011e68:	ficom  WORD PTR [rdx-0x712900e8]
   140011e6e:	adc    bh,bh
   140011e70:	(bad)  
   140011e71:	xchg   BYTE PTR [rax],dl
   140011e73:	dec    esi
   140011e75:	(bad)  
   140011e76:	adc    bh,bh
   140011e78:	(bad)  
   140011e79:	jge    0x140011e83
   140011e7b:	(bad)  
   140011e7c:	mov    ebp,0xc6ff0071
   140011e81:	jne    0x140011e8b
   140011e83:	jmp    rdi
   140011e85:	xchg   esi,eax
   140011e86:	xor    edi,edi
   140011e88:	imul   ecx,DWORD PTR [rbp+0x29],0xffffffad
	...
   140011eb0:	mov    WORD PTR [rdx-0xc000874],cs
   140011eb6:	idiv   edi
   140011eb8:	out    0xdb,eax
   140011eba:	(bad)  
   140011ebb:	push   QWORD PTR [rbp-0x18005256]
   140011ec1:	fcmovnu st,st(6)
   140011ec3:	inc    esi
   140011ec5:	mov    esi,0x9294ffc6
   140011eca:	xchg   esp,eax
   140011ecb:	(bad)  
   140011ecc:	mov    ebp,0xa5ffbdbe
   140011ed1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011ed2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ed3:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011ed9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011eda:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011edb:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011ee1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011ee2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ee3:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011ee9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011eea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011eeb:	jmp    FWORD PTR [rbp-0x52005256]
   140011ef1:	stos   BYTE PTR es:[rdi],al
   140011ef2:	lods   eax,DWORD PTR ds:[rsi]
   140011ef3:	jmp    FWORD PTR [rbp-0x52005256]
   140011ef9:	stos   BYTE PTR es:[rdi],al
   140011efa:	lods   eax,DWORD PTR ds:[rsi]
   140011efb:	jmp    FWORD PTR [rbp-0x52005256]
   140011f01:	stos   BYTE PTR es:[rdi],al
   140011f02:	lods   eax,DWORD PTR ds:[rsi]
   140011f03:	jmp    FWORD PTR [rbp-0x52005256]
   140011f09:	stos   BYTE PTR es:[rdi],al
   140011f0a:	lods   eax,DWORD PTR ds:[rsi]
   140011f0b:	jmp    FWORD PTR [rbp-0x52005256]
   140011f11:	stos   BYTE PTR es:[rdi],al
   140011f12:	lods   eax,DWORD PTR ds:[rsi]
   140011f13:	jmp    FWORD PTR [rbp-0x52005252]
   140011f19:	scas   al,BYTE PTR es:[rdi]
   140011f1a:	lods   eax,DWORD PTR ds:[rsi]
   140011f1b:	call   rsi
   140011f1d:	(bad)  
   140011f1e:	rex.WX push rdi
   140011f21:	(bad)  
   140011f22:	pop    rdx
   140011f23:	jmp    rdi
   140011f25:	xchg   esi,eax
   140011f26:	adc    bh,bh
   140011f28:	ficom  WORD PTR [rsi-0x692100f0]
   140011f2e:	sbb    bh,bh
   140011f30:	(bad)  
   140011f31:	mov    ss,WORD PTR [rax]
   140011f33:	call   rsi
   140011f35:	mov    dl,BYTE PTR [rax]
   140011f37:	dec    esi
   140011f39:	xchg   BYTE PTR [rax],dl
   140011f3b:	dec    esi
   140011f3d:	(bad)  
   140011f3e:	or     bh,bh
   140011f40:	(bad)  
   140011f41:	jne    0x140011f4b
   140011f43:	call   rsi
   140011f45:	(bad)  
   140011f46:	or     bh,bh
   140011f48:	mov    ch,0x75
   140011f4a:	and    edi,esp
	...
   140011f70:	mov    WORD PTR [rdx-0xc000874],cs
   140011f76:	idiv   edi
   140011f78:	out    0xdb,eax
   140011f7a:	fdivp  st(7),st
   140011f7c:	mov    ch,0xaa
   140011f7e:	lods   eax,DWORD PTR ds:[rsi]
   140011f7f:	jmp    rdi
   140011f81:	fcmovnu st,st(6)
   140011f83:	inc    esi
   140011f85:	ret    
   140011f86:	(bad)  
   140011f87:	call   QWORD PTR [rdx+rdx*4-0x4142006c]
   140011f8e:	mov    ebp,0xa5a6a5ff
   140011f93:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140011f99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011f9a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011f9b:	jmp    FWORD PTR [rbp-0x52005256]
   140011fa1:	stos   BYTE PTR es:[rdi],al
   140011fa2:	lods   eax,DWORD PTR ds:[rsi]
   140011fa3:	jmp    FWORD PTR [rbp-0x52005256]
   140011fa9:	stos   BYTE PTR es:[rdi],al
   140011faa:	lods   eax,DWORD PTR ds:[rsi]
   140011fab:	jmp    FWORD PTR [rbp-0x52005256]
   140011fb1:	stos   BYTE PTR es:[rdi],al
   140011fb2:	lods   eax,DWORD PTR ds:[rsi]
   140011fb3:	jmp    FWORD PTR [rbp-0x52005256]
   140011fb9:	stos   BYTE PTR es:[rdi],al
   140011fba:	lods   eax,DWORD PTR ds:[rsi]
   140011fbb:	jmp    FWORD PTR [rbp-0x52005256]
   140011fc1:	scas   al,BYTE PTR es:[rdi]
   140011fc2:	lods   eax,DWORD PTR ds:[rsi]
   140011fc3:	jmp    FWORD PTR [rbp-0x52005256]
   140011fc9:	scas   al,BYTE PTR es:[rdi]
   140011fca:	lods   eax,DWORD PTR ds:[rsi]
   140011fcb:	jmp    FWORD PTR [rbp-0x52005252]
   140011fd1:	scas   al,BYTE PTR es:[rdi]
   140011fd2:	lods   eax,DWORD PTR ds:[rsi]
   140011fd3:	jmp    FWORD PTR [rbp-0x52005252]
   140011fd9:	scas   al,BYTE PTR es:[rdi]
   140011fda:	lods   eax,DWORD PTR ds:[rsi]
   140011fdb:	dec    esi
   140011fdd:	(bad)  
   140011fde:	rex.WX (bad) 
   140011fe0:	call   rdi
   140011fe2:	imul   edi,edi,0xffffffef
   140011fe5:	scas   al,BYTE PTR es:[rdi]
   140011fe6:	cmp    edi,edi
   140011fe8:	out    0x9e,eax
   140011fea:	adc    bh,bh
   140011fec:	out    0x9a,eax
   140011fee:	sbb    bh,bh
   140011ff0:	ficomp WORD PTR [rdx-0x692100e8]
   140011ff6:	sbb    bh,bh
   140011ff8:	(bad)  
   140011ff9:	mov    ss,WORD PTR [rax]
   140011ffb:	dec    esi
   140011ffd:	mov    dl,BYTE PTR [rax]
   140011fff:	dec    esi
   140012001:	(bad)  
   140012002:	adc    bh,bh
   140012004:	(bad)  
   140012005:	(bad)  
   140012006:	or     bh,bh
   140012008:	lods   eax,DWORD PTR ds:[rsi]
   140012009:	ins    DWORD PTR es:[rdi],dx
   14001200a:	adc    bh,ah
	...
   140012030:	xchg   esp,eax
   140012031:	mov    cs,WORD PTR [rdi+rsi*8-0x80c01]
   140012038:	out    0xdb,eax
   14001203a:	fdivp  st(7),st
   14001203c:	mov    ch,0xaa
   14001203e:	lods   eax,DWORD PTR ds:[rsi]
   14001203f:	jmp    rdi
   140012041:	fcmovnbe st,st(6)
   140012043:	dec    esi
   140012045:	mov    esi,0x949294ff
   14001204b:	(bad)  
   14001204c:	mov    ebp,0xadffbdbe
   140012051:	stos   BYTE PTR es:[rdi],al
   140012052:	lods   eax,DWORD PTR ds:[rsi]
   140012053:	jmp    FWORD PTR [rbp-0x52005256]
   140012059:	stos   BYTE PTR es:[rdi],al
   14001205a:	lods   eax,DWORD PTR ds:[rsi]
   14001205b:	jmp    FWORD PTR [rbp-0x52005256]
   140012061:	stos   BYTE PTR es:[rdi],al
   140012062:	lods   eax,DWORD PTR ds:[rsi]
   140012063:	jmp    FWORD PTR [rbp-0x52005256]
   140012069:	stos   BYTE PTR es:[rdi],al
   14001206a:	lods   eax,DWORD PTR ds:[rsi]
   14001206b:	jmp    FWORD PTR [rbp-0x52005256]
   140012071:	scas   al,BYTE PTR es:[rdi]
   140012072:	lods   eax,DWORD PTR ds:[rsi]
   140012073:	jmp    FWORD PTR [rcx]
   140012075:	sub    BYTE PTR [rcx],dh
   140012077:	jmp    FWORD PTR [rcx]
   140012079:	sub    BYTE PTR [rcx],dh
   14001207b:	jmp    FWORD PTR [rcx]
   14001207d:	sub    BYTE PTR [rcx],dh
   14001207f:	jmp    FWORD PTR [rcx]
   140012081:	sub    BYTE PTR [rcx],dh
   140012083:	jmp    FWORD PTR [rcx]
   140012085:	sub    BYTE PTR [rcx],dh
   140012087:	jmp    FWORD PTR [rcx]
   140012089:	sub    BYTE PTR [rcx],dh
   14001208b:	jmp    FWORD PTR [rcx]
   14001208d:	sub    BYTE PTR [rcx],dh
   14001208f:	jmp    FWORD PTR [rcx]
   140012091:	sub    BYTE PTR [rcx],dh
   140012093:	jmp    FWORD PTR [rcx]
   140012095:	sub    BYTE PTR [rcx],dh
   140012097:	jmp    FWORD PTR [rcx]
   140012099:	sub    BYTE PTR [rcx],dh
   14001209b:	(bad)  
   14001209c:	jnp    0x1400120fb
   14001209e:	xor    edi,edi
   1400120a0:	test   edi,0xbef7ff63
   1400120a6:	push   rdx
   1400120a7:	(bad)  
   1400120a8:	out    dx,eax
   1400120a9:	mov    dl,0x42
   1400120ab:	jmp    rdi
   1400120ad:	movabs ds:0x9ae7ff109ee7ff10,al
   1400120b6:	sbb    bh,bh
   1400120b8:	ficom  WORD PTR [rsi-0x6d2900e8]
   1400120be:	sbb    bh,bh
   1400120c0:	(bad)  
   1400120c1:	mov    dl,BYTE PTR [rax]
   1400120c3:	(bad)  
   1400120c4:	fimul  WORD PTR [rsi+0x6dadff10]
   1400120ca:	adc    dh,bl
	...
   1400120f0:	xchg   esp,eax
   1400120f1:	mov    cs,WORD PTR [rdi+rsi*8-0x80c01]
   1400120f8:	out    0xdb,eax
   1400120fa:	fdivp  st(7),st
   1400120fc:	mov    ch,0xaa
   1400120fe:	lods   eax,DWORD PTR ds:[rsi]
   1400120ff:	(bad)  
   140012100:	(bad)  
   140012102:	(bad)  
   140012103:	dec    esi
   140012105:	mov    esi,0x949294ff
   14001210b:	(bad)  
   14001210c:	mov    ebp,0xadffc6c3
   140012111:	stos   BYTE PTR es:[rdi],al
   140012112:	lods   eax,DWORD PTR ds:[rsi]
   140012113:	jmp    FWORD PTR [rbp-0x52005256]
   140012119:	stos   BYTE PTR es:[rdi],al
   14001211a:	lods   eax,DWORD PTR ds:[rsi]
   14001211b:	jmp    FWORD PTR [rbp-0x52005256]
   140012121:	stos   BYTE PTR es:[rdi],al
   140012122:	lods   eax,DWORD PTR ds:[rsi]
   140012123:	jmp    FWORD PTR [rbp-0x52005252]
   140012129:	scas   al,BYTE PTR es:[rdi]
   14001212a:	lods   eax,DWORD PTR ds:[rsi]
   14001212b:	jmp    FWORD PTR [rbp-0x52005252]
   140012131:	scas   al,BYTE PTR es:[rdi]
   140012132:	lods   eax,DWORD PTR ds:[rsi]
   140012133:	jmp    FWORD PTR [rcx]
   140012135:	sub    BYTE PTR [rcx],dh
   140012137:	(bad)  
   140012138:	mov    ebp,0xbdffbdba
   14001213d:	mov    esi,0x2829ffbd
   140012142:	xor    edi,edi
   140012144:	out    0x82,eax
   140012146:	push   rdx
   140012147:	call   FWORD PTR [rcx+rsi*2+0x698cff5a]
   14001214e:	cmp    edi,edi
   140012150:	lods   eax,DWORD PTR ds:[rsi]
   140012151:	jno    0x140012195
   140012153:	inc    esi
   140012155:	xchg   edx,eax
   140012156:	rex.WX inc QWORD PTR [rax]
   140012159:	add    BYTE PTR [rax],al
   14001215b:	call   FWORD PTR [rax]
   14001215d:	adc    al,0x8
   14001215f:	inc    esi
   140012161:	movabs ds:0xc7ffff5acff7ff5a,al
   14001216a:	pop    rdx
   14001216b:	(bad)  
   14001216c:	out    dx,eax
   14001216d:	mov    dh,0x4a
   14001216f:	(bad)  
   140012170:	out    dx,eax
   140012171:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012172:	and    edi,edi
   140012174:	out    0x9e,eax
   140012176:	adc    bh,bh
   140012178:	ficomp WORD PTR [rdx-0x6d2100f8]
   14001217e:	adc    bh,bh
   140012180:	ficom  WORD PTR [rdx-0x691800f0]
   140012186:	adc    bh,bh
   140012188:	lods   eax,DWORD PTR ds:[rsi]
   140012189:	jno    0x14001219b
   14001218b:	fiadd  WORD PTR [rax]
   14001218d:	add    BYTE PTR [rax],al
   14001218f:	add    BYTE PTR [rax],al
   140012191:	add    BYTE PTR [rax],al
   140012193:	add    BYTE PTR [rbp+rcx*2+0x4210],al
   14001219a:	add    BYTE PTR [rax],dl
	...
   1400121b0:	xchg   esp,eax
   1400121b1:	mov    cs,WORD PTR [rdi+rsi*8-0x101009]
   1400121b8:	out    0xdb,eax
   1400121ba:	(bad)  
   1400121bb:	push   QWORD PTR [rbp-0x21005256]
   1400121c1:	rcl    esi,cl
   1400121c3:	dec    esi
   1400121c5:	(bad)  
   1400121c6:	(bad)  
   1400121c7:	call   QWORD PTR [rdx+rdx*4-0x3c39006c]
   1400121ce:	(bad)  
   1400121cf:	jmp    FWORD PTR [rbp-0x52005256]
   1400121d5:	stos   BYTE PTR es:[rdi],al
   1400121d6:	lods   eax,DWORD PTR ds:[rsi]
   1400121d7:	jmp    FWORD PTR [rbp-0x52005256]
   1400121dd:	scas   al,BYTE PTR es:[rdi]
   1400121de:	lods   eax,DWORD PTR ds:[rsi]
   1400121df:	jmp    FWORD PTR [rbp-0x52005252]
   1400121e5:	scas   al,BYTE PTR es:[rdi]
   1400121e6:	lods   eax,DWORD PTR ds:[rsi]
   1400121e7:	push   QWORD PTR [rbp-0x4a004a4e]
   1400121ed:	mov    dl,0xb5
   1400121ef:	push   QWORD PTR [rbp+0x29ffb5b6]
   1400121f5:	sub    BYTE PTR [rcx],dh
   1400121f7:	(bad)  
   1400121f8:	mov    ebp,0xc6ffbdbe
   1400121fd:	mov    esi,0x312829ff
   140012203:	dec    DWORD PTR [rsi+rbx*4+0x794aff6b]
   14001220a:	jae    0x14001220b
   14001220c:	imul   eax,DWORD PTR [rdx-0x51210095],0x4a
   140012213:	push   rdi
   140012215:	mov    dl,0x52
   140012217:	(bad)  
   140012218:	cmp    DWORD PTR [rax],ebp
   14001221a:	sbb    bh,bh
   14001221c:	add    BYTE PTR [rax],al
   14001221e:	add    bh,bh
   140012220:	sub    DWORD PTR [rax],esp
   140012222:	rex.X (bad) 
   140012224:	mov    ebp,0xefff4a8e
   140012229:	ret    
   14001222a:	pop    rdx
   14001222b:	push   rdi
   14001222d:	(bad)  
   14001222e:	pop    rdx
   14001222f:	push   rdi
   140012231:	(bad)  
   140012232:	pop    rdx
   140012233:	(bad)  
   140012234:	inc    edi
   140012236:	push   rdx
   140012237:	push   rdi
   140012239:	mov    dh,0x39
   14001223b:	jmp    rdi
   14001223d:	stos   BYTE PTR es:[rdi],al
   14001223e:	sub    edi,edi
   140012240:	out    0xa2,eax
   140012242:	sub    edi,edi
   140012244:	out    dx,eax
   140012245:	movabs ds:0xde1071adff18,al
   14001224e:	add    BYTE PTR [rax],al
   140012250:	out    0x9a,eax
   140012252:	rex.X sbb dil,spl
   140012255:	stos   BYTE PTR es:[rdi],al
   140012256:	imul   ecx,esi,0xffffff84
   140012259:	imul   eax,DWORD PTR [rdx-0x22],0x21000808
	...
   140012270:	xchg   esp,eax
   140012271:	mov    cs,WORD PTR [rdi+rsi*8-0x101409]
   140012278:	(bad)  
   14001227a:	(bad)  
   14001227b:	jmp    FWORD PTR [rbp-0x21005a5a]
   140012281:	ror    esi,cl
   140012283:	dec    esi
   140012285:	retf   
   140012286:	(bad)  
   140012287:	call   QWORD PTR [rsi+rcx*4-0x3839006c]
   14001228e:	(bad)  
   14001228f:	jmp    FWORD PTR [rbp-0x52005252]
   140012295:	scas   al,BYTE PTR es:[rdi]
   140012296:	lods   eax,DWORD PTR ds:[rsi]
   140012297:	jmp    FWORD PTR [rbp-0x52005252]
   14001229d:	scas   al,BYTE PTR es:[rdi]
   14001229e:	lods   eax,DWORD PTR ds:[rsi]
   14001229f:	push   QWORD PTR [rbp-0x4a004a4e]
   1400122a5:	mov    dh,0xb5
   1400122a7:	push   QWORD PTR [rbp-0x4a004a4a]
   1400122ad:	mov    dh,0xb5
   1400122af:	(bad)  
   1400122b0:	mov    ebp,0x29ffbdba
   1400122b5:	sub    BYTE PTR [rcx],dh
   1400122b7:	jmp    FWORD PTR [rcx]
   1400122b9:	sub    BYTE PTR [rcx],dh
   1400122bb:	jmp    FWORD PTR [rcx]
   1400122bd:	sub    BYTE PTR [rcx],dh
   1400122bf:	jmp    FWORD PTR [rcx]
   1400122c1:	sub    BYTE PTR [rcx],dh
   1400122c3:	call   FWORD PTR [rsi+rsi*4-0x756b007c]
   1400122ca:	push   rdx
   1400122cb:	inc    esi
   1400122cd:	(bad)  
   1400122ce:	rex.WX (bad) 
   1400122d0:	out    dx,eax
   1400122d1:	stos   BYTE PTR es:[rdi],al
   1400122d2:	rex.X (bad) 
   1400122d4:	out    dx,eax
   1400122d5:	scas   al,BYTE PTR es:[rdi]
   1400122d6:	rex.X inc esi
   1400122d9:	mov    es,WORD PTR [rdx-0x1]
   1400122dc:	movsxd eax,DWORD PTR [rcx+0x18]
   1400122df:	dec    DWORD PTR [rdx+0x28]
   1400122e2:	adc    bh,bh
   1400122e4:	jae    0x14001232f
   1400122e6:	rex.WX dec rsi
   1400122e9:	xchg   edx,eax
   1400122ea:	pop    rdx
   1400122eb:	jmp    QWORD PTR [rbp-0x3900c68b]
   1400122f1:	xchg   esi,eax
   1400122f2:	rex.WX dec rsi
   1400122f5:	sahf   
   1400122f6:	rex.WX inc rsi
   1400122f9:	xchg   esi,eax
   1400122fa:	rex.X call rsi
   1400122fd:	(bad)  
   1400122fe:	cmp    esi,eax
   140012300:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012301:	jno    0x14001232c
   140012303:	pushf  
   140012304:	div    DWORD PTR [rdx+0x7db5ff31]
   14001230a:	adc    bh,ah
	...
   140012314:	(bad)  
   140012315:	xchg   edx,eax
   140012316:	rex.WX mov rdi,?
   140012319:	mov    esi,0x4d6bff63
   14001231e:	sub    DWORD PTR [rbp+0x8000000],ebp
	...
   140012330:	xchg   esp,eax
   140012331:	mov    cs,WORD PTR [rdi+rsi*8-0x101811]
   140012338:	(bad)  
   14001233a:	(bad)  
   14001233b:	jmp    FWORD PTR [rbp-0x29005a5a]
   140012341:	iret   
   140012342:	(bad)  
   140012343:	dec    esi
   140012345:	mov    esi,0x8c8e94ff
   14001234b:	dec    esi
   14001234d:	retf   
   14001234e:	(bad)  
   14001234f:	jmp    FWORD PTR [rbp-0x4a005252]
   140012355:	mov    dl,0xb5
   140012357:	push   QWORD PTR [rbp-0x4a004a4e]
   14001235d:	mov    dh,0xb5
   14001235f:	(bad)  
   140012360:	mov    ebp,0xbdffbdba
   140012365:	mov    edx,0xbabdffbd
   14001236a:	mov    ebp,0xbdbabdff
   14001236f:	(bad)  
   140012370:	mov    ebp,0x29ffbdba
   140012375:	sub    BYTE PTR [rcx],dh
   140012377:	(bad)  
   140012378:	mov    ebp,0xbdffc6c3
   14001237d:	ret    
   14001237e:	(bad)  
   14001237f:	jmp    FWORD PTR [rcx]
   140012381:	sub    BYTE PTR [rcx],dh
   140012383:	(bad)  
   140012384:	jmp    FWORD PTR [rsi-0x651000be]
   14001238a:	xor    edi,edi
   14001238c:	out    0x9e,eax
   14001238e:	xor    edi,edi
   140012390:	ficomp WORD PTR [rsi-0x612100c7]
   140012396:	cmp    edi,edi
   140012398:	out    dx,eax
   140012399:	stos   BYTE PTR es:[rdi],al
   14001239a:	cmp    edi,edi
   14001239c:	out    dx,eax
   14001239d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001239e:	cmp    edi,edi
   1400123a0:	(bad)  
   1400123a1:	(bad)  
   1400123a2:	xor    edi,edi
   1400123a4:	ficomp WORD PTR [rsi-0x380000cf]
   1400123aa:	rex.X jmp FWORD PTR [rcx]
   1400123ad:	sub    al,0x31
   1400123af:	dec    esi
   1400123b1:	(bad)  
   1400123b2:	mov    ebp,0xadbec684
   1400123b7:	mov    WORD PTR [rcx],?
   1400123b9:	xor    BYTE PTR [rcx],dh
   1400123bb:	inc    DWORD PTR [rax]
   1400123bd:	add    BYTE PTR [rax],al
   1400123bf:	add    BYTE PTR [rax],al
   1400123c1:	add    BYTE PTR [rax],al
   1400123c3:	add    bh,ah
   1400123c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123c6:	sub    edi,edi
   1400123c8:	(bad)  
   1400123c9:	mov    bl,BYTE PTR [rax]
   1400123cb:	fiadd  WORD PTR [rax]
   1400123cd:	add    BYTE PTR [rax],al
   1400123cf:	add    BYTE PTR [rax],al
   1400123d1:	add    BYTE PTR [rax],al
   1400123d3:	add    BYTE PTR [rbp-0x10d6bd8b],ch
   1400123d9:	(bad)  
   1400123da:	sub    esi,ebx
   1400123dc:	(bad)  
   1400123dd:	xchg   edx,eax
   1400123de:	rex.X call QWORD PTR [rax]
   1400123e1:	or     al,0x8
   1400123e3:	sub    DWORD PTR [rax],eax
	...
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    BYTE PTR [rsi+rcx*4-0x20100874],dl
   1400123f6:	out    0xff,eax
   1400123f8:	(bad)  
   1400123f9:	iret   
   1400123fa:	(bad)  
   1400123fb:	jmp    QWORD PTR [rbp-0x3100635e]
   140012401:	retf   
   140012402:	(bad)  
   140012403:	dec    esi
   140012405:	mov    esi,0x8c8e8cff
   14001240b:	dec    esi
   14001240d:	iret   
   14001240e:	(bad)  
   14001240f:	push   QWORD PTR [rbp-0x4a004a4e]
   140012415:	mov    dh,0xb5
   140012417:	(bad)  
   140012418:	mov    ebp,0xbdffbdba
   14001241d:	mov    edx,0xbabdffbd
   140012422:	mov    ebp,0xbdbabdff
   140012427:	(bad)  
   140012428:	mov    ebp,0xbdffbdba
   14001242d:	mov    esi,0xbebdffbd
   140012432:	mov    ebp,0x312829ff
   140012437:	(bad)  
   140012438:	mov    ebp,0xceffc6c3
   14001243d:	retf   
   14001243e:	(bad)  
   14001243f:	jmp    FWORD PTR [rcx]
   140012441:	sub    BYTE PTR [rcx],dh
   140012443:	(bad)  
   140012444:	out    dx,eax
   140012445:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012446:	cmp    edi,edi
   140012448:	(bad)  
   140012449:	xchg   esi,eax
   14001244a:	sub    edi,edi
   14001244c:	(bad)  
   14001244d:	xchg   esi,eax
   14001244e:	xor    edi,edi
   140012450:	(bad)  
   140012451:	xchg   esi,eax
   140012452:	xor    edi,edi
   140012454:	ficomp WORD PTR [rsi-0x5d2100d7]
   14001245a:	sub    edi,edi
   14001245c:	imul   DWORD PTR [rsi-0x6d3900d7]
   140012462:	rex.WX jmp FWORD PTR [rbp-0xb57a]
   140012469:	mov    esi,0x2829ff42
   14001246e:	xor    edi,edi
   140012470:	(bad)  
   140012471:	retf   
   140012472:	(bad)  
   140012473:	jnp    0x140012474
   140012475:	(bad)  
   140012476:	push   QWORD PTR [rcx]
   140012478:	sub    DWORD PTR [rax],ebp
   14001247a:	xor    edi,edi
	...
   140012484:	out    0xaa,eax
   140012486:	sub    edi,edi
   140012488:	(bad)  
   140012489:	xchg   edx,eax
   14001248a:	sbb    dh,bl
	...
   140012498:	mov    ch,0x79
   14001249a:	sub    DWORD PTR [rbp-0xce5d01],esp
   1400124a0:	sub    DWORD PTR [rax+rcx*1],ebx
   1400124a3:	imul   eax,DWORD PTR [rax],0x0
	...
   1400124ae:	add    BYTE PTR [rax],al
   1400124b0:	xchg   esp,eax
   1400124b1:	mov    cs,WORD PTR [rdi+rsi*8-0x212419]
   1400124b8:	(bad)  
   1400124b9:	retf   
   1400124ba:	(bad)  
   1400124bb:	jmp    QWORD PTR [rbp-0x31006362]
   1400124c1:	mov    esi,0xc6c7ceff
   1400124c7:	dec    DWORD PTR [rsi+rcx*4-0x2c290074]
   1400124ce:	(bad)  
   1400124cf:	(bad)  
   1400124d0:	mov    ebp,0xbdffbdba
   1400124d5:	mov    edx,0xbabdffbd
   1400124da:	mov    ebp,0xbdbebdff
   1400124df:	(bad)  
   1400124e0:	mov    ebp,0xbdffbdba
   1400124e5:	mov    esi,0xbebdffbd
   1400124ea:	mov    ebp,0xbdbebdff
   1400124ef:	(bad)  
   1400124f0:	mov    ebp,0x29ffbdbe
   1400124f5:	sub    BYTE PTR [rcx],dh
   1400124f7:	jmp    FWORD PTR [rcx]
   1400124f9:	sub    BYTE PTR [rcx],dh
   1400124fb:	jmp    FWORD PTR [rcx]
   1400124fd:	sub    BYTE PTR [rcx],dh
   1400124ff:	jmp    FWORD PTR [rcx]
   140012501:	sub    BYTE PTR [rcx],dh
   140012503:	jmp    rdi
   140012505:	movabs ds:0x92d6ff298eceff31,al
   14001250e:	sub    edi,edi
   140012510:	(bad)  
   140012511:	(bad)  
   140012512:	and    edi,edi
   140012514:	pushf  
   140012515:	imul   edx,DWORD PTR [rdx-0x1],0xff636d9c
   14001251c:	push   QWORD PTR [rdx+0x384aff18]
   140012522:	sbb    bh,bh
   140012524:	sub    DWORD PTR [rax],ebp
   140012526:	sbb    bh,bh
   140012528:	push   QWORD PTR [rsi+0x2829ff31]
   14001252e:	xor    edi,edi
   140012530:	sub    DWORD PTR [rax],ebp
   140012532:	xor    edi,edi
   140012534:	sub    DWORD PTR [rax],ebp
   140012536:	xor    edi,edi
   140012538:	sub    DWORD PTR [rax],ebp
   14001253a:	xor    edi,edi
	...
   140012544:	out    0xaa,eax
   140012546:	xor    edi,edi
   140012548:	(bad)  
   140012549:	xchg   esi,eax
   14001254a:	and    esi,ebx
	...
   140012558:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012559:	imul   ebp,DWORD PTR [rcx],0x18a2ff84
   14001255f:	dec    DWORD PTR [rdx+0x34]
   140012562:	adc    BYTE PTR [rbp+0x0],ah
	...
   140012570:	xchg   esp,eax
   140012571:	mov    ss,WORD PTR [rdi+rsi*8-0x292822]
   140012578:	(bad)  
   140012579:	ret    
   14001257a:	(bad)  
   14001257b:	call   FWORD PTR [rsi+rbx*4-0x41390064]
   140012582:	mov    ebp,0xc6c3ceff
   140012587:	dec    DWORD PTR [rsi+rcx*4-0x28290074]
   14001258e:	(bad)  
   14001258f:	(bad)  
   140012590:	mov    ebp,0xbdffbdbe
   140012595:	mov    esi,0xbebdffbd
   14001259a:	mov    ebp,0xbdbebdff
   14001259f:	(bad)  
   1400125a0:	mov    ebp,0xbdffbdbe
   1400125a5:	mov    esi,0xbebdffbd
   1400125aa:	mov    ebp,0xbdbebdff
   1400125af:	(bad)  
   1400125b0:	mov    ebp,0x29ffbdbe
   1400125b5:	sub    BYTE PTR [rcx],dh
   1400125b7:	inc    esi
   1400125b9:	ret    
   1400125ba:	(bad)  
   1400125bb:	inc    esi
   1400125bd:	ret    
   1400125be:	(bad)  
   1400125bf:	jmp    FWORD PTR [rcx]
   1400125c1:	sub    BYTE PTR [rcx],dh
   1400125c3:	(bad)  
   1400125c4:	out    dx,eax
   1400125c5:	(bad)  
   1400125c6:	sbb    bh,bh
   1400125c8:	(bad)  
   1400125c9:	mov    ss,WORD PTR [rax]
   1400125cb:	call   rsi
   1400125cd:	mov    ds,WORD PTR [rax]
   1400125cf:	(bad)  
   1400125d0:	ficom  WORD PTR [rsi+0x5d94ff08]
   1400125d6:	pop    rdx
   1400125d7:	call   QWORD PTR [rcx+rbx*2+0x5d84ff63]
   1400125de:	adc    bh,bh
   1400125e0:	add    BYTE PTR [rax+rbx*1],al
   1400125e3:	inc    DWORD PTR [rax]
   1400125e5:	add    BYTE PTR [rcx],ah
   1400125e7:	jmp    FWORD PTR [rbp+0x29ff398a]
   1400125ed:	sub    BYTE PTR [rcx],dh
   1400125ef:	dec    esi
   1400125f1:	retf   
   1400125f2:	(bad)  
   1400125f3:	jnp    0x1400125c3
   1400125f5:	retf   
   1400125f6:	(bad)  
   1400125f7:	jnp    0x140012622
   1400125f9:	sub    BYTE PTR [rcx],dh
   1400125fb:	inc    DWORD PTR [rax]
   1400125fd:	add    BYTE PTR [rax],al
   1400125ff:	add    BYTE PTR [rax],al
   140012601:	add    BYTE PTR [rax],al
   140012603:	add    bh,ah
   140012605:	stos   BYTE PTR es:[rdi],al
   140012606:	xor    edi,edi
   140012608:	(bad)  
   140012609:	xchg   esi,eax
   14001260a:	and    esi,ebx
	...
   140012618:	lods   eax,DWORD PTR ds:[rsi]
   140012619:	ins    DWORD PTR es:[rdi],dx
   14001261a:	and    DWORD PTR [rbx-0x9],esi
   14001261d:	movabs ds:0xbd083052ff10,al
	...
   14001262e:	add    BYTE PTR [rax],al
   140012630:	xchg   esp,eax
   140012631:	xchg   edx,eax
   140012632:	xchg   esp,eax
   140012633:	not    esi
   140012635:	iret   
   140012636:	(bad)  
   140012637:	inc    esi
   140012639:	mov    esi,0x969cffbd
   14001263e:	xchg   esp,eax
   14001263f:	inc    esi
   140012641:	mov    esi,0xc3ceffbd
   140012646:	(bad)  
   140012647:	dec    DWORD PTR [rsi+rcx*4-0x28210074]
   14001264e:	(bad)  
   14001264f:	(bad)  
   140012650:	mov    ebp,0xbdffbdbe
   140012655:	mov    esi,0xbebdffbd
   14001265a:	mov    ebp,0xbdbebdff
   14001265f:	inc    esi
   140012661:	ret    
   140012662:	(bad)  
   140012663:	inc    esi
   140012665:	ret    
   140012666:	(bad)  
   140012667:	inc    esi
   140012669:	ret    
   14001266a:	(bad)  
   14001266b:	inc    esi
   14001266d:	ret    
   14001266e:	(bad)  
   14001266f:	inc    esi
   140012671:	ret    
   140012672:	(bad)  
   140012673:	jmp    FWORD PTR [rcx]
   140012675:	sub    BYTE PTR [rcx],dh
   140012677:	inc    esi
   140012679:	ret    
   14001267a:	(bad)  
   14001267b:	call   rsi
   14001267d:	rcl    esi,cl
   14001267f:	jmp    FWORD PTR [rcx]
   140012681:	sub    BYTE PTR [rcx],dh
   140012683:	(bad)  
   140012684:	(bad)  
   140012685:	mov    esi,0xaaf7ff39
   14001268a:	xor    edi,edi
   14001268c:	imul   DWORD PTR [rsi-0x4d0000cf]
   140012692:	xor    edi,edi
   140012694:	imul   DWORD PTR [rsi+0x658cff42]
   14001269a:	rex.X call FWORD PTR [rax]
   14001269d:	sub    BYTE PTR [rdx-0x1],cl
   1400126a0:	rex.X
   1400126a1:	rex.RB
   1400126a2:	rex.WX inc QWORD PTR [rdx+0x2c]
   1400126a6:	jae    0x1400126a7
   1400126a8:	pop    rdx
   1400126a9:	jns    0x140012650
   1400126ab:	imul   DWORD PTR [rcx]
   1400126ad:	sub    BYTE PTR [rcx],dh
   1400126af:	dec    esi
   1400126b1:	retf   
   1400126b2:	(bad)  
   1400126b3:	jnp    0x1400126b4
   1400126b5:	(bad)  
   1400126b6:	push   QWORD PTR [rcx]
   1400126b8:	sub    DWORD PTR [rax],ebp
   1400126ba:	xor    edi,edi
	...
   1400126c4:	out    0xaa,eax
   1400126c6:	cmp    edi,edi
   1400126c8:	(bad)  
   1400126c9:	xchg   edx,eax
   1400126ca:	and    esi,ebx
	...
   1400126d8:	lods   eax,DWORD PTR ds:[rsi]
   1400126d9:	ins    DWORD PTR es:[rdi],dx
   1400126da:	and    DWORD PTR [rbx-0x9],esi
   1400126dd:	stos   BYTE PTR es:[rdi],al
   1400126de:	adc    bh,bh
   1400126e0:	push   rdx
   1400126e1:	xor    BYTE PTR [rax],cl
   1400126e3:	mov    ebp,0x0
	...
   1400126f0:	xchg   esp,eax
   1400126f1:	xchg   edx,eax
   1400126f2:	xchg   esp,eax
   1400126f3:	test   esi,0xc6ffcec7
   1400126f9:	mov    esi,0x969cffbd
   1400126fe:	xchg   esp,eax
   1400126ff:	inc    esi
   140012701:	mov    esi,0xc3c6ffbd
   140012706:	(bad)  
   140012707:	call   QWORD PTR [rdx+rdx*4-0x2421006c]
   14001270e:	fdivp  st(7),st
   140012710:	mov    ebp,0xbdffbdbe
   140012715:	mov    esi,0xc3c6ffbd
   14001271a:	(bad)  
   14001271b:	inc    esi
   14001271d:	ret    
   14001271e:	(bad)  
   14001271f:	inc    esi
   140012721:	ret    
   140012722:	(bad)  
   140012723:	inc    esi
   140012725:	ret    
   140012726:	(bad)  
   140012727:	inc    esi
   140012729:	mov    esi,0xc6c7c6ff
   14001272f:	inc    esi
   140012731:	mov    esi,0x312829ff
   140012737:	jmp    FWORD PTR [rcx]
   140012739:	sub    BYTE PTR [rcx],dh
   14001273b:	jmp    FWORD PTR [rcx]
   14001273d:	sub    BYTE PTR [rcx],dh
   14001273f:	jmp    FWORD PTR [rcx]
   140012741:	sub    BYTE PTR [rcx],dh
   140012743:	jmp    FWORD PTR [rcx]
   140012745:	sub    BYTE PTR [rcx],dh
   140012747:	jmp    FWORD PTR [rcx]
   140012749:	sub    BYTE PTR [rcx],dh
   14001274b:	jmp    FWORD PTR [rcx]
   14001274d:	sub    BYTE PTR [rcx],dh
   14001274f:	jmp    FWORD PTR [rcx]
   140012751:	sub    BYTE PTR [rcx],dh
   140012753:	jmp    FWORD PTR [rcx]
   140012755:	sub    BYTE PTR [rcx],dh
   140012757:	jmp    FWORD PTR [rcx]
   140012759:	sub    BYTE PTR [rcx],dh
   14001275b:	jmp    FWORD PTR [rcx]
   14001275d:	sub    BYTE PTR [rcx],dh
   14001275f:	jmp    FWORD PTR [rcx]
   140012761:	sub    BYTE PTR [rcx],dh
   140012763:	jmp    FWORD PTR [rcx]
   140012765:	sub    BYTE PTR [rcx],dh
   140012767:	jmp    FWORD PTR [rcx]
   140012769:	sub    BYTE PTR [rcx],dh
   14001276b:	jmp    FWORD PTR [rcx]
   14001276d:	sub    BYTE PTR [rcx],dh
   14001276f:	jmp    FWORD PTR [rcx]
   140012771:	sub    BYTE PTR [rcx],dh
   140012773:	jmp    FWORD PTR [rcx]
   140012775:	sub    BYTE PTR [rcx],dh
   140012777:	jmp    FWORD PTR [rcx]
   140012779:	sub    BYTE PTR [rcx],dh
   14001277b:	inc    DWORD PTR [rax]
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	add    BYTE PTR [rax],al
   140012781:	add    BYTE PTR [rax],al
   140012783:	add    bh,ah
   140012785:	stos   BYTE PTR es:[rdi],al
   140012786:	cmp    edi,edi
   140012788:	mov    ebp,0xde2992
	...
   140012795:	add    BYTE PTR [rax],al
   140012797:	add    BYTE PTR [rcx+rbx*2-0x41007be8],bl
   14001279e:	adc    bh,bh
   1400127a0:	rex.X sub al,0x8
   1400127a3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   1400127b0:	xchg   esp,eax
   1400127b1:	xchg   edx,eax
   1400127b2:	xchg   esp,eax
   1400127b3:	out    dx,eax
   1400127b4:	mov    ebp,0xadffbdc3
   1400127b9:	scas   al,BYTE PTR es:[rdi]
   1400127ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400127bb:	call   QWORD PTR [rsi+rbx*4-0x3042006c]
   1400127c2:	mov    ebp,0xc6c7c6ff
   1400127c7:	call   QWORD PTR [rdx+rdx*4-0x2021006c]
   1400127ce:	fdivp  st(7),st
   1400127d0:	mov    bl,0xc6
   1400127d3:	inc    esi
   1400127d5:	ret    
   1400127d6:	(bad)  
   1400127d7:	inc    esi
   1400127d9:	ret    
   1400127da:	(bad)  
   1400127db:	inc    esi
   1400127dd:	ret    
   1400127de:	(bad)  
   1400127df:	inc    esi
   1400127e1:	mov    esi,0xc6c7c6ff
   1400127e7:	dec    esi
   1400127e9:	retf   
   1400127ea:	(bad)  
   1400127eb:	dec    esi
   1400127ed:	retf   
   1400127ee:	(bad)  
   1400127ef:	dec    esi
   1400127f1:	retf   
   1400127f2:	(bad)  
   1400127f3:	jmp    FWORD PTR [rcx]
   1400127f5:	sub    BYTE PTR [rcx],dh
   1400127f7:	inc    esi
   1400127f9:	mov    esi,0xc6c7c6ff
   1400127ff:	jmp    FWORD PTR [rcx]
   140012801:	sub    BYTE PTR [rcx],dh
   140012803:	call   FWORD PTR [rdx+0x79]
   140012806:	mov    ebp,0xb56152ff
   14001280b:	call   QWORD PTR [rdx+0x61]
   14001280e:	mov    ch,0xff
   140012810:	rex.WX pop rbp
   140012812:	pushf  
   140012813:	call   QWORD PTR [rdx+0x69]
   140012816:	jae    0x140012817
   140012818:	imul   eax,DWORD PTR [rdx-0x7d8c0085],0x6b
   14001281f:	call   FWORD PTR [rdx+0x5d]
   140012822:	push   rdx
   140012823:	jmp    QWORD PTR [rbx+0x6d]
   140012826:	pop    rdx
   140012827:	push   QWORD PTR [rbx+0x7d]
   14001282a:	movsxd ebp,edi
   14001282c:	sub    DWORD PTR [rax],ebp
   14001282e:	xor    edi,edi
   140012830:	(bad)  
   140012831:	retf   
   140012832:	(bad)  
   140012833:	jnp    0x140012803
   140012835:	retf   
   140012836:	(bad)  
   140012837:	jnp    0x140012862
   140012839:	sub    BYTE PTR [rcx],dh
   14001283b:	inc    DWORD PTR [rax]
   14001283d:	add    BYTE PTR [rax],al
   14001283f:	add    BYTE PTR [rax],al
   140012841:	add    BYTE PTR [rax],al
   140012843:	add    bh,ah
   140012845:	stos   BYTE PTR es:[rdi],al
   140012846:	cmp    edi,edi
   140012848:	mov    ebp,0xde2992
   14001284d:	add    BYTE PTR [rax],al
   14001284f:	add    BYTE PTR [rax],al
   140012851:	add    BYTE PTR [rax],al
   140012853:	add    BYTE PTR [rax],dl
   140012855:	or     al,0x10
   140012857:	adc    BYTE PTR [rbp-0x42ef93],dh
   14001285d:	mov    esi,0x1821ff10
   140012862:	add    BYTE PTR [rbx+0x0],ah
	...
   14001286d:	add    BYTE PTR [rax],al
   14001286f:	add    BYTE PTR [rdx+rdx*4-0x454a106c],dl
   140012876:	mov    ch,0xff
   140012878:	mov    WORD PTR [rdx-0x71ad006c],gs
   14001287e:	imul   edi,edi,0x5a
   140012881:	(bad)  
   140012882:	jnp    0x140012883
   140012884:	mov    bh,0xc6
   140012887:	call   QWORD PTR [rdx+rdx*4-0x2021006c]
   14001288e:	fdivp  st(7),st
   140012890:	mov    bh,0xc6
   140012893:	inc    esi
   140012895:	mov    esi,0xc6c7c6ff
   14001289b:	dec    esi
   14001289d:	retf   
   14001289e:	(bad)  
   14001289f:	dec    esi
   1400128a1:	retf   
   1400128a2:	(bad)  
   1400128a3:	dec    esi
   1400128a5:	retf   
   1400128a6:	(bad)  
   1400128a7:	dec    esi
   1400128a9:	retf   
   1400128aa:	(bad)  
   1400128ab:	dec    esi
   1400128ad:	retf   
   1400128ae:	(bad)  
   1400128af:	dec    esi
   1400128b1:	retf   
   1400128b2:	(bad)  
   1400128b3:	jmp    FWORD PTR [rcx]
   1400128b5:	sub    BYTE PTR [rcx],dh
   1400128b7:	inc    esi
   1400128b9:	mov    esi,0xd6d7d6ff
   1400128bf:	jmp    FWORD PTR [rcx]
   1400128c1:	sub    BYTE PTR [rcx],dh
   1400128c3:	call   FWORD PTR [rdx-0x7e]
   1400128c6:	(bad)  
   1400128c7:	call   QWORD PTR [rdx+0x51]
   1400128ca:	out    dx,eax
   1400128cb:	call   FWORD PTR [rdx+0x55]
   1400128ce:	out    dx,eax
   1400128cf:	dec    DWORD PTR [rdx+0x3c]
   1400128d2:	out    0xff,eax
   1400128d4:	rex.WX
   1400128d5:	gs imul edi,edi,0x6b
   1400128d9:	sahf   
   1400128da:	test   bh,bh
   1400128dc:	movsxd edi,DWORD PTR [rcx+0x7b]
   1400128df:	inc    DWORD PTR [rdx+0x49]
   1400128e2:	jnp    0x1400128e3
   1400128e4:	imul   rax,QWORD PTR [rdi+r15*8-0x89c7195],0xffffffffff312829
   1400128f0:	(bad)  
   1400128f1:	retf   
   1400128f2:	(bad)  
   1400128f3:	jnp    0x1400128f4
   1400128f5:	(bad)  
   1400128f6:	push   QWORD PTR [rcx]
   1400128f8:	sub    DWORD PTR [rax],ebp
   1400128fa:	xor    edi,edi
	...
   140012904:	out    0xaa,eax
   140012906:	rex.X (bad) 
   140012908:	mov    ebp,0xe72992
   14001290d:	add    BYTE PTR [rax],al
   14001290f:	add    BYTE PTR [rax],al
   140012911:	add    BYTE PTR [rax],al
   140012913:	add    BYTE PTR [rcx+rdx*2-0x51189cf0],dl
   14001291a:	adc    bh,dh
   14001291c:	out    dx,eax
   14001291d:	xchg   edx,eax
   14001291e:	adc    bh,bh
   140012920:	adc    BYTE PTR [rax],cl
   140012922:	add    BYTE PTR [rcx],ah
	...
   140012930:	xchg   esp,eax
   140012931:	xchg   edx,eax
   140012932:	xchg   esp,eax
   140012933:	out    dx,eax
   140012934:	cmp    DWORD PTR [rsi-0x59ce008d],esp
   14001293a:	jae    0x14001293b
   14001293c:	add    bh,ch
   14001293e:	jnp    0x14001293f
   140012940:	or     bl,al
   140012942:	jae    0x140012943
   140012944:	mov    ch,0xcb
   140012946:	mov    ebp,0x949294ff
   14001294b:	jmp    rdi
   14001294d:	jrcxz  0x14001292d
   14001294f:	dec    esi
   140012951:	retf   
   140012952:	(bad)  
   140012953:	dec    esi
   140012955:	retf   
   140012956:	(bad)  
   140012957:	dec    esi
   140012959:	retf   
   14001295a:	(bad)  
   14001295b:	dec    esi
   14001295d:	retf   
   14001295e:	(bad)  
   14001295f:	dec    esi
   140012961:	retf   
   140012962:	(bad)  
   140012963:	dec    esi
   140012965:	retf   
   140012966:	(bad)  
   140012967:	dec    esi
   140012969:	retf   
   14001296a:	(bad)  
   14001296b:	dec    esi
   14001296d:	retf   
   14001296e:	(bad)  
   14001296f:	dec    esi
   140012971:	retf   
   140012972:	(bad)  
   140012973:	jmp    FWORD PTR [rcx]
   140012975:	sub    BYTE PTR [rcx],dh
   140012977:	jmp    FWORD PTR [rcx]
   140012979:	sub    BYTE PTR [rcx],dh
   14001297b:	jmp    FWORD PTR [rcx]
   14001297d:	sub    BYTE PTR [rcx],dh
   14001297f:	jmp    FWORD PTR [rcx]
   140012981:	sub    BYTE PTR [rcx],dh
   140012983:	jmp    QWORD PTR [rbx+0x61]
   140012986:	(bad)  
   140012987:	call   QWORD PTR [rdx+0x41]
   14001298a:	pushf  
   14001298b:	(bad)  
   14001298c:	jnp    0x1400129eb
   14001298e:	jnp    0x14001298f
   140012990:	cmp    DWORD PTR [rsp+rbx*4],ebx
   140012993:	(bad)  
   140012994:	jnp    0x1400129ff
   140012996:	push   rdx
   140012997:	call   QWORD PTR [rsi+rcx*4+0x4121ff63]
   14001299e:	movsxd edi,edi
   1400129a0:	sub    DWORD PTR [rcx-0x4b],ebp
   1400129a3:	call   FWORD PTR [rax]
   1400129a5:	ins    DWORD PTR es:[rdi],dx
   1400129a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400129a7:	jmp    QWORD PTR [rbx+0x7d]
   1400129aa:	jnp    0x1400129a3
   1400129ac:	sub    DWORD PTR [rax],ebp
   1400129ae:	xor    edi,edi
   1400129b0:	sub    DWORD PTR [rax],ebp
   1400129b2:	xor    edi,edi
   1400129b4:	sub    DWORD PTR [rax],ebp
   1400129b6:	xor    edi,edi
   1400129b8:	sub    DWORD PTR [rax],ebp
   1400129ba:	xor    edi,edi
	...
   1400129c4:	out    dx,eax
   1400129c5:	stos   BYTE PTR es:[rdi],al
   1400129c6:	rex.X jmp QWORD PTR [rbp+0xd6217d]
   1400129cd:	add    BYTE PTR [rax],al
   1400129cf:	sbb    BYTE PTR [rbp+rdx*2-0x7521bdf0],cl
   1400129d6:	sbb    bh,ah
   1400129d8:	inc    edi
   1400129da:	sbb    bh,bh
   1400129dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400129dd:	jne    0x140012a10
   1400129df:	(bad)  
   1400129e0:	or     BYTE PTR [rax+rax*1],al
   1400129e3:	or     BYTE PTR [rax],al
	...
   1400129ed:	add    BYTE PTR [rax],al
   1400129ef:	add    BYTE PTR [rsi+rdx*4-0x34ff186c],dl
   1400129f6:	jae    0x1400129f7
   1400129f8:	add    bl,ah
   1400129fa:	jae    0x1400129fb
   1400129fc:	add    BYTE PTR [rdx-0x5dff00a6],ch
   140012a02:	movsxd edi,edi
   140012a04:	lods   eax,DWORD PTR ds:[rsi]
   140012a05:	retf   
   140012a06:	mov    ebp,0x949294ff
   140012a0b:	jmp    rdi
   140012a0d:	jrcxz  0x1400129f6
   140012a0f:	dec    esi
   140012a11:	retf   
   140012a12:	(bad)  
   140012a13:	dec    esi
   140012a15:	retf   
   140012a16:	(bad)  
   140012a17:	dec    esi
   140012a19:	retf   
   140012a1a:	(bad)  
   140012a1b:	dec    esi
   140012a1d:	retf   
   140012a1e:	(bad)  
   140012a1f:	dec    esi
   140012a21:	retf   
   140012a22:	(bad)  
   140012a23:	dec    esi
   140012a25:	retf   
   140012a26:	(bad)  
   140012a27:	dec    esi
   140012a29:	iret   
   140012a2a:	(bad)  
   140012a2b:	dec    esi
   140012a2d:	iret   
   140012a2e:	(bad)  
   140012a2f:	dec    esi
   140012a31:	iret   
   140012a32:	(bad)  
   140012a33:	jmp    FWORD PTR [rcx]
   140012a35:	sub    BYTE PTR [rcx],dh
   140012a37:	inc    esi
   140012a39:	retf   
   140012a3a:	(bad)  
   140012a3b:	inc    esi
   140012a3d:	retf   
   140012a3e:	(bad)  
   140012a3f:	jmp    FWORD PTR [rcx]
   140012a41:	sub    BYTE PTR [rcx],dh
   140012a43:	jmp    QWORD PTR [rbp-0x6b00527a]
   140012a49:	imul   esi,DWORD PTR [rbx-0x1],0xff6379ad
   140012a50:	movsxd eax,DWORD PTR [rcx+0x4a]
   140012a53:	push   QWORD PTR [rbp+0x63ff527d]
   140012a59:	sub    r15,r15
   140012a5c:	or     BYTE PTR [rbx+riz*2],ch
   140012a5f:	jmp    FWORD PTR [rcx]
   140012a61:	jne    0x140012a52
   140012a63:	call   FWORD PTR [rax]
   140012a65:	test   r15b,r15b
   140012a68:	pop    rdx
   140012a69:	(bad)  
   140012a6a:	mov    ch,0xf7
   140012a6c:	sub    DWORD PTR [rax],ebp
   140012a6e:	xor    edi,edi
   140012a70:	(bad)  
   140012a71:	retf   
   140012a72:	(bad)  
   140012a73:	jnp    0x140012a43
   140012a75:	retf   
   140012a76:	(bad)  
   140012a77:	jnp    0x140012aa2
   140012a79:	sub    BYTE PTR [rcx],dh
   140012a7b:	inc    DWORD PTR [rax]
   140012a7d:	add    BYTE PTR [rax],al
   140012a7f:	add    BYTE PTR [rax],al
   140012a81:	add    BYTE PTR [rax],al
   140012a83:	add    bh,ah
   140012a85:	stos   BYTE PTR es:[rdi],al
   140012a86:	push   rdx
   140012a87:	inc    esi
   140012a89:	xchg   edx,eax
   140012a8a:	cmp    edi,esp
   140012a8c:	rex.WX xor BYTE PTR [rax],dl
   140012a8f:	xchg   esp,eax
   140012a90:	mov    ebp,0xffd62982
   140012a95:	xlat   BYTE PTR ds:[rbx]
   140012a96:	xor    edi,edi
   140012a98:	out    0xae,eax
   140012a9a:	push   rdx
   140012a9b:	imul   DWORD PTR [rcx]
   140012a9d:	sbb    BYTE PTR [rax],dl
   140012a9f:	rex.X add BYTE PTR [rax],al
	...
   140012aae:	add    BYTE PTR [rax],al
   140012ab0:	pushf  
   140012ab1:	xchg   esi,eax
   140012ab2:	xchg   esp,eax
   140012ab3:	out    0x21,eax
   140012ab5:	jge    0x140012b09
   140012ab7:	call   FWORD PTR [rax]
   140012ab9:	jge    0x140012b05
   140012abb:	call   QWORD PTR [rax]
   140012abd:	and    r15d,r15d
   140012ac0:	sbb    BYTE PTR [rax+rbx*1],bl
   140012ac3:	push   QWORD PTR [rbp-0x6b004a4e]
   140012ac9:	xchg   edx,eax
   140012aca:	xchg   esp,eax
   140012acb:	jmp    rdi
   140012acd:	jrcxz  0x140012ab6
   140012acf:	dec    esi
   140012ad1:	retf   
   140012ad2:	(bad)  
   140012ad3:	dec    esi
   140012ad5:	retf   
   140012ad6:	(bad)  
   140012ad7:	dec    esi
   140012ad9:	iret   
   140012ada:	(bad)  
   140012adb:	dec    esi
   140012add:	iret   
   140012ade:	(bad)  
   140012adf:	dec    esi
   140012ae1:	iret   
   140012ae2:	(bad)  
   140012ae3:	dec    esi
   140012ae5:	iret   
   140012ae6:	(bad)  
   140012ae7:	dec    esi
   140012ae9:	iret   
   140012aea:	(bad)  
   140012aeb:	dec    esi
   140012aed:	iret   
   140012aee:	(bad)  
   140012aef:	dec    esi
   140012af1:	iret   
   140012af2:	(bad)  
   140012af3:	jmp    FWORD PTR [rcx]
   140012af5:	sub    BYTE PTR [rcx],dh
   140012af7:	inc    esi
   140012af9:	retf   
   140012afa:	(bad)  
   140012afb:	(bad)  
   140012afc:	(bad)  
   140012afe:	fdivp  st(7),st
   140012b00:	sub    DWORD PTR [rax],ebp
   140012b02:	xor    edi,edi
   140012b04:	fisubr WORD PTR [rdx-0x754a0064]
   140012b0a:	jnp    0x140012b0b
   140012b0c:	mov    ch,0x82
   140012b0e:	pop    rdx
   140012b0f:	jmp    QWORD PTR [rbp-0x4200a58f]
   140012b15:	xchg   esi,eax
   140012b16:	movsxd edi,edi
   140012b18:	sub    DWORD PTR [rax],esp
   140012b1a:	and    edi,edi
   140012b1c:	and    DWORD PTR [rcx+0x4a],eax
   140012b1f:	inc    DWORD PTR [rdx-0x31]
   140012b22:	idiv   edi
   140012b24:	push   rdx
   140012b25:	movabs ds:0x2829f7e7be73ffad,al
   140012b2e:	xor    edi,edi
   140012b30:	(bad)  
   140012b31:	retf   
   140012b32:	(bad)  
   140012b33:	jnp    0x140012b34
   140012b35:	(bad)  
   140012b36:	push   QWORD PTR [rcx]
   140012b38:	sub    DWORD PTR [rax],ebp
   140012b3a:	xor    edi,edi
	...
   140012b44:	fisubr WORD PTR [rdx-0x380000a6]
   140012b4a:	imul   edi,edi,0xffffffff
   140012b4d:	ret    
   140012b4e:	pop    rdx
   140012b4f:	(bad)  
   140012b50:	call   rdi
   140012b52:	movsxd edi,edi
   140012b54:	neg    ebx
   140012b56:	movsxd edi,edi
   140012b58:	pushf  
   140012b59:	ins    DWORD PTR es:[rdi],dx
   140012b5a:	sub    DWORD PTR [rax+rax*1+0x0],eax
	...
   140012b6d:	add    BYTE PTR [rax],al
   140012b6f:	add    BYTE PTR [rdx+rbx*4+0x3c39de9c],bl
   140012b76:	cmp    edi,edi
   140012b78:	push   rdx
   140012b79:	rex.WB
   140012b7a:	rex.X call FWORD PTR [rax]
   140012b7d:	adc    BYTE PTR [rax],al
   140012b7f:	call   QWORD PTR [rax]
   140012b81:	adc    BYTE PTR [rax],dl
   140012b83:	push   QWORD PTR [rbp-0x6b004a4e]
   140012b89:	xchg   edx,eax
   140012b8a:	xchg   esp,eax
   140012b8b:	jmp    rdi
   140012b8d:	jrcxz  0x140012b76
   140012b8f:	dec    esi
   140012b91:	iret   
   140012b92:	(bad)  
   140012b93:	dec    esi
   140012b95:	iret   
   140012b96:	(bad)  
   140012b97:	dec    esi
   140012b99:	iret   
   140012b9a:	(bad)  
   140012b9b:	dec    esi
   140012b9d:	iret   
   140012b9e:	(bad)  
   140012b9f:	dec    esi
   140012ba1:	iret   
   140012ba2:	(bad)  
   140012ba3:	dec    esi
   140012ba5:	iret   
   140012ba6:	(bad)  
   140012ba7:	dec    esi
   140012ba9:	iret   
   140012baa:	(bad)  
   140012bab:	call   rsi
   140012bad:	rcl    esi,cl
   140012baf:	call   rsi
   140012bb1:	rcl    esi,cl
   140012bb3:	jmp    FWORD PTR [rcx]
   140012bb5:	sub    BYTE PTR [rcx],dh
   140012bb7:	jmp    FWORD PTR [rcx]
   140012bb9:	sub    BYTE PTR [rcx],dh
   140012bbb:	jmp    FWORD PTR [rcx]
   140012bbd:	sub    BYTE PTR [rcx],dh
   140012bbf:	jmp    FWORD PTR [rcx]
   140012bc1:	sub    BYTE PTR [rcx],dh
   140012bc3:	(bad)  
   140012bc4:	fmulp  st(3),st
   140012bc6:	pushf  
   140012bc7:	call   QWORD PTR [rdx+rbp*4-0x5563005b]
   140012bce:	xchg   esp,eax
   140012bcf:	jmp    rdi
   140012bd1:	(bad)  
   140012bd2:	mov    edi,?
   140012bd4:	out    dx,eax
   140012bd5:	retf   
   140012bd6:	xchg   esp,eax
   140012bd7:	jmp    FWORD PTR [rbx+0x61]
   140012bda:	movsxd edi,edi
   140012bdc:	cmp    DWORD PTR [rcx+0x4a],eax
   140012bdf:	jmp    FWORD PTR [rbx+0x75]
   140012be2:	pushf  
   140012be3:	jmp    FWORD PTR [rbx-0x7a]
   140012be6:	(bad)  
   140012be7:	dec    DWORD PTR [rsi+rdx*4+0x2829f7ef]
   140012bee:	xor    edi,edi
   140012bf0:	sub    DWORD PTR [rax],ebp
   140012bf2:	xor    edi,edi
   140012bf4:	sub    DWORD PTR [rax],ebp
   140012bf6:	xor    edi,edi
   140012bf8:	sub    DWORD PTR [rax],ebp
   140012bfa:	xor    edi,edi
	...
   140012c04:	fisub  WORD PTR [rdx-0x450000ae]
   140012c0a:	movsxd edi,edi
   140012c0c:	inc    ebx
   140012c0e:	movsxd edi,edi
   140012c10:	inc    ebx
   140012c12:	push   rdx
   140012c13:	(bad)  
   140012c14:	mov    ebp,0x8cad528a
   140012c19:	pop    rcx
   140012c1a:	sub    DWORD PTR [rax],edx
	...
   140012c30:	pushf  
   140012c31:	sahf   
   140012c32:	pushf  
   140012c33:	fidivr WORD PTR [rcx]
   140012c35:	cmp    al,0x39
   140012c37:	call   QWORD PTR [rdx+0x49]
   140012c3a:	rex.X call FWORD PTR [rax]
   140012c3d:	adc    BYTE PTR [rax],al
   140012c3f:	call   QWORD PTR [rax]
   140012c41:	adc    BYTE PTR [rax],dl
   140012c43:	push   QWORD PTR [rbp-0x6b004a4e]
   140012c49:	xchg   edx,eax
   140012c4a:	xchg   esp,eax
   140012c4b:	jmp    rdi
   140012c4d:	jrcxz  0x140012c36
   140012c4f:	dec    esi
   140012c51:	iret   
   140012c52:	(bad)  
   140012c53:	dec    esi
   140012c55:	iret   
   140012c56:	(bad)  
   140012c57:	dec    esi
   140012c59:	iret   
   140012c5a:	(bad)  
   140012c5b:	call   rsi
   140012c5d:	rcl    esi,cl
   140012c5f:	call   rsi
   140012c61:	rcl    esi,cl
   140012c63:	call   rsi
   140012c65:	rcl    esi,cl
   140012c67:	call   rsi
   140012c69:	rcl    esi,cl
   140012c6b:	call   rsi
   140012c6d:	rcl    esi,cl
   140012c6f:	call   rsi
   140012c71:	rcl    esi,cl
   140012c73:	jmp    FWORD PTR [rcx]
   140012c75:	sub    BYTE PTR [rcx],dh
   140012c77:	dec    esi
   140012c79:	retf   
   140012c7a:	(bad)  
   140012c7b:	dec    esi
   140012c7d:	retf   
   140012c7e:	(bad)  
   140012c7f:	jmp    FWORD PTR [rcx]
   140012c81:	sub    BYTE PTR [rcx],dh
   140012c83:	push   QWORD PTR [rbp-0x5a004229]
   140012c89:	stos   BYTE PTR es:[rdi],al
   140012c8a:	mov    edi,?
   140012c8c:	(bad)  
   140012c8d:	mov    dh,0x8c
   140012c8f:	(bad)  
   140012c90:	out    dx,eax
   140012c91:	mov    DWORD PTR [rdi+rdi*8-0x7b3409],0xff7baace
   140012c9c:	jae    0x140012d03
   140012c9e:	pop    rdx
   140012c9f:	jmp    QWORD PTR [rbx+0x55]
   140012ca2:	pop    rdx
   140012ca3:	(bad)  
   140012ca4:	jnp    0x140012d0b
   140012ca6:	mov    edi,?
   140012ca8:	(bad)  
   140012ca9:	stos   BYTE PTR es:[rdi],al
   140012caa:	mov    ch,0xf7
   140012cac:	sub    DWORD PTR [rax],ebp
   140012cae:	xor    edi,edi
   140012cb0:	(bad)  
   140012cb1:	retf   
   140012cb2:	(bad)  
   140012cb3:	jnp    0x140012c83
   140012cb5:	retf   
   140012cb6:	(bad)  
   140012cb7:	jnp    0x140012ce2
   140012cb9:	sub    BYTE PTR [rcx],dh
   140012cbb:	inc    DWORD PTR [rax]
   140012cbd:	add    BYTE PTR [rax],al
   140012cbf:	add    BYTE PTR [rax],al
   140012cc1:	add    BYTE PTR [rax],al
   140012cc3:	add    dh,bl
   140012cc5:	sahf   
   140012cc6:	push   rdx
   140012cc7:	(bad)  
   140012cc8:	inc    ebx
   140012cca:	movsxd edi,edi
   140012ccc:	call   rbx
   140012cce:	jae    0x140012ccf
   140012cd0:	out    0xa2,eax
   140012cd2:	rex.WX mov bpl,0x0
	...
   140012ced:	add    BYTE PTR [rax],al
   140012cef:	add    BYTE PTR [rbp+0x39d69c9e],ah
   140012cf5:	cmp    al,0x39
   140012cf7:	call   FWORD PTR [rdx+0x51]
   140012cfa:	rex.WX (bad) 
   140012cfc:	cmp    DWORD PTR [rax],esi
   140012cfe:	sub    edi,edi
   140012d00:	adc    BYTE PTR [rax],dl
   140012d02:	adc    bh,bh
   140012d04:	mov    ch,0xb2
   140012d06:	mov    ch,0xff
   140012d08:	xchg   esp,eax
   140012d09:	xchg   esi,eax
   140012d0a:	xchg   esp,eax
   140012d0b:	jmp    rdi
   140012d0d:	out    0xe7,eax
   140012d0f:	call   rsi
   140012d11:	rcl    esi,cl
   140012d13:	call   rsi
   140012d15:	rcl    esi,cl
   140012d17:	call   rsi
   140012d19:	rcl    esi,cl
   140012d1b:	call   rsi
   140012d1d:	rcl    esi,cl
   140012d1f:	call   rsi
   140012d21:	rcl    esi,cl
   140012d23:	call   rsi
   140012d25:	rcl    esi,cl
   140012d27:	call   rsi
   140012d29:	rcl    esi,cl
   140012d2b:	call   rsi
   140012d2d:	rcl    esi,cl
   140012d2f:	call   rsi
   140012d31:	xlat   BYTE PTR ds:[rbx]
   140012d32:	(bad)  
   140012d33:	jmp    FWORD PTR [rcx]
   140012d35:	sub    BYTE PTR [rcx],dh
   140012d37:	dec    esi
   140012d39:	retf   
   140012d3a:	(bad)  
   140012d3b:	(bad)  
   140012d3c:	(bad)  
   140012d3e:	fdivp  st(7),st
   140012d40:	sub    DWORD PTR [rax],ebp
   140012d42:	xor    edi,edi
   140012d44:	dec    edi
   140012d46:	test   bh,bh
   140012d48:	idiv   DWORD PTR [rdx-0x4508009d]
   140012d4e:	movsxd edi,edi
   140012d50:	out    0xb6,eax
   140012d52:	imul   edi,edi,0xffffffe7
   140012d55:	mov    edx,0xc3f7ff6b
   140012d5a:	jae    0x140012d5b
   140012d5c:	out    dx,eax
   140012d5d:	mov    esi,0xb2deff73
   140012d62:	movsxd edi,edi
   140012d64:	out    0xb6,eax
   140012d66:	movsxd edi,edi
   140012d68:	(bad)  
   140012d69:	fstp   TBYTE PTR [rbx-0x9]
   140012d6c:	sub    DWORD PTR [rax],ebp
   140012d6e:	xor    edi,edi
   140012d70:	(bad)  
   140012d71:	retf   
   140012d72:	(bad)  
   140012d73:	jnp    0x140012d74
   140012d75:	(bad)  
   140012d76:	push   QWORD PTR [rcx]
   140012d78:	sub    DWORD PTR [rax],ebp
   140012d7a:	xor    edi,edi
	...
   140012d84:	fisub  WORD PTR [rsi-0x200000ae]
   140012d8a:	jae    0x140012d8b
   140012d8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012d8d:	(bad)  
   140012d8e:	rex.X (bad) 
   140012d90:	rex.WX xor BYTE PTR [rax],bl
   140012d93:	and    DWORD PTR [rax],eax
	...
   140012dad:	add    BYTE PTR [rax],al
   140012daf:	add    BYTE PTR [rbp+0x5ac6a5a2],ah
   140012db5:	pop    rcx
   140012db6:	pop    rdx
   140012db7:	jmp    QWORD PTR [rbx+0x5d]
   140012dba:	pop    rdx
   140012dbb:	push   QWORD PTR [rbx+0x71]
   140012dbe:	imul   edi,edi,0xffffff9c
   140012dc1:	xchg   esi,eax
   140012dc2:	pushf  
   140012dc3:	dec    DWORD PTR [rdx+rcx*4-0x65630074]
   140012dca:	pushf  
   140012dcb:	(bad)  
   140012dcc:	out    dx,eax
   140012dcd:	jmp    0x140012dbe
   140012dcf:	call   rsi
   140012dd1:	rcl    esi,cl
   140012dd3:	call   rsi
   140012dd5:	rcl    esi,cl
   140012dd7:	call   rsi
   140012dd9:	rcl    esi,cl
   140012ddb:	call   rsi
   140012ddd:	rcl    esi,cl
   140012ddf:	call   rsi
   140012de1:	rcl    esi,cl
   140012de3:	call   rsi
   140012de5:	xlat   BYTE PTR ds:[rbx]
   140012de6:	(bad)  
   140012de7:	call   rsi
   140012de9:	xlat   BYTE PTR ds:[rbx]
   140012dea:	(bad)  
   140012deb:	call   rsi
   140012ded:	xlat   BYTE PTR ds:[rbx]
   140012dee:	(bad)  
   140012def:	call   rsi
   140012df1:	xlat   BYTE PTR ds:[rbx]
   140012df2:	(bad)  
   140012df3:	jmp    FWORD PTR [rcx]
   140012df5:	sub    BYTE PTR [rcx],dh
   140012df7:	jmp    FWORD PTR [rcx]
   140012df9:	sub    BYTE PTR [rcx],dh
   140012dfb:	jmp    FWORD PTR [rcx]
   140012dfd:	sub    BYTE PTR [rcx],dh
   140012dff:	jmp    FWORD PTR [rcx]
   140012e01:	sub    BYTE PTR [rcx],dh
   140012e03:	jmp    FWORD PTR [rcx]
   140012e05:	sub    BYTE PTR [rcx],dh
   140012e07:	jmp    FWORD PTR [rcx]
   140012e09:	sub    BYTE PTR [rcx],dh
   140012e0b:	jmp    FWORD PTR [rcx]
   140012e0d:	sub    BYTE PTR [rcx],dh
   140012e0f:	jmp    FWORD PTR [rcx]
   140012e11:	sub    BYTE PTR [rcx],dh
   140012e13:	jmp    FWORD PTR [rcx]
   140012e15:	sub    BYTE PTR [rcx],dh
   140012e17:	jmp    FWORD PTR [rcx]
   140012e19:	sub    BYTE PTR [rcx],dh
   140012e1b:	jmp    FWORD PTR [rcx]
   140012e1d:	sub    BYTE PTR [rcx],dh
   140012e1f:	jmp    FWORD PTR [rcx]
   140012e21:	sub    BYTE PTR [rcx],dh
   140012e23:	jmp    FWORD PTR [rcx]
   140012e25:	sub    BYTE PTR [rcx],dh
   140012e27:	jmp    FWORD PTR [rcx]
   140012e29:	sub    BYTE PTR [rcx],dh
   140012e2b:	jmp    FWORD PTR [rcx]
   140012e2d:	sub    BYTE PTR [rcx],dh
   140012e2f:	jmp    FWORD PTR [rcx]
   140012e31:	sub    BYTE PTR [rcx],dh
   140012e33:	jmp    FWORD PTR [rcx]
   140012e35:	sub    BYTE PTR [rcx],dh
   140012e37:	jmp    FWORD PTR [rcx]
   140012e39:	sub    BYTE PTR [rcx],dh
   140012e3b:	inc    DWORD PTR [rax]
   140012e3d:	add    BYTE PTR [rax],al
   140012e3f:	add    BYTE PTR [rax],al
   140012e41:	add    BYTE PTR [rax],al
   140012e43:	add    bh,ch
   140012e45:	mov    dl,0x5a
   140012e47:	call   rsi
   140012e49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012e4a:	rex.WX out 0x21,eax
   140012e4d:	or     al,0x0
   140012e4f:	cmp    DWORD PTR [rax],eax
	...
   140012e6d:	add    BYTE PTR [rax],al
   140012e6f:	add    BYTE PTR [rbp+0x7ba5adae],dh
   140012e75:	jns    0x140012ef2
   140012e77:	(bad)  
   140012e78:	jnp    0x140012ef3
   140012e7a:	jae    0x140012e7b
   140012e7c:	mov    WORD PTR [rdx-0x6d6b007c],cs
   140012e82:	mov    edi,?
   140012e84:	mov    WORD PTR [rsi-0x1c18007c],es
   140012e8a:	out    0xff,eax
   140012e8c:	(bad)  
   140012e8d:	(bad)  
   140012e8e:	(bad)  
   140012e8f:	(bad)  
   140012e90:	out    dx,eax
   140012e91:	out    dx,eax
   140012e92:	out    dx,eax
   140012e93:	jmp    rdi
   140012e95:	jrcxz  0x140012e7e
   140012e97:	(bad)  
   140012e98:	(bad)  
   140012e9a:	fdivp  st(7),st
   140012e9c:	(bad)  
   140012e9d:	xlat   BYTE PTR ds:[rbx]
   140012e9e:	(bad)  
   140012e9f:	call   rsi
   140012ea1:	xlat   BYTE PTR ds:[rbx]
   140012ea2:	(bad)  
   140012ea3:	call   rsi
   140012ea5:	xlat   BYTE PTR ds:[rbx]
   140012ea6:	(bad)  
   140012ea7:	(bad)  
   140012ea8:	(bad)  
   140012eaa:	fdivp  st(7),st
   140012eac:	(bad)  
   140012eae:	fdivp  st(7),st
   140012eb0:	(bad)  
   140012eb2:	fdivp  st(7),st
   140012eb4:	(bad)  
   140012eb6:	fdivp  st(7),st
   140012eb8:	(bad)  
   140012eba:	fdivp  st(7),st
   140012ebc:	(bad)  
   140012ebe:	fdivp  st(7),st
   140012ec0:	(bad)  
   140012ec2:	fdivp  st(7),st
   140012ec4:	(bad)  
   140012ec6:	fdivp  st(7),st
   140012ec8:	(bad)  
   140012eca:	fdivp  st(7),st
   140012ecc:	(bad)  
   140012ece:	fdivp  st(7),st
   140012ed0:	(bad)  
   140012ed2:	fdivp  st(7),st
   140012ed4:	(bad)  
   140012ed6:	fdivp  st(7),st
   140012ed8:	(bad)  
   140012eda:	fdivp  st(7),st
   140012edc:	(bad)  
   140012ede:	fdivp  st(7),st
   140012ee0:	(bad)  
   140012ee2:	fdivp  st(7),st
   140012ee4:	mov    ebp,0xdeffbdba
   140012ee9:	(bad)  
   140012eeb:	sub    DWORD PTR [rax],eax
	...
   140012f01:	add    BYTE PTR [rax],al
   140012f03:	add    bh,ch
   140012f05:	scas   al,BYTE PTR es:[rdi]
   140012f06:	push   rdx
   140012f07:	call   FWORD PTR [rbp+riz*2+0x9c21]
	...
   140012f2e:	add    BYTE PTR [rax],al
   140012f30:	pushf  
   140012f31:	(bad)  
   140012f32:	xchg   esp,eax
   140012f33:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140012f35:	movabs ds:0xaeadffadaeadcea5,al
   140012f3e:	lods   eax,DWORD PTR ds:[rsi]
   140012f3f:	push   QWORD PTR [rbp-0x10004a4a]
   140012f45:	out    dx,eax
   140012f46:	out    dx,eax
   140012f47:	(bad)  
   140012f48:	(bad)  
   140012f49:	(bad)  
   140012f4a:	(bad)  
   140012f4b:	(bad)  
   140012f4c:	(bad)  
   140012f4d:	(bad)  
   140012f4e:	(bad)  
   140012f4f:	(bad)  
   140012f50:	(bad)  
   140012f51:	(bad)  
   140012f52:	(bad)  
   140012f53:	(bad)  
   140012f54:	(bad)  
   140012f55:	(bad)  
   140012f56:	(bad)  
   140012f57:	(bad)  
   140012f58:	(bad)  
   140012f59:	(bad)  
   140012f5a:	(bad)  
   140012f5b:	push   rdi
   140012f5d:	div    edi
   140012f5f:	(bad)  
   140012f60:	out    dx,eax
   140012f61:	jmp    0x140012f52
   140012f63:	(bad)  
   140012f64:	(bad)  
   140012f66:	fdivp  st(7),st
   140012f68:	(bad)  
   140012f6a:	fdivp  st(7),st
   140012f6c:	(bad)  
   140012f6e:	fdivp  st(7),st
   140012f70:	(bad)  
   140012f72:	fdivp  st(7),st
   140012f74:	(bad)  
   140012f76:	fdivp  st(7),st
   140012f78:	(bad)  
   140012f7a:	fdivp  st(7),st
   140012f7c:	(bad)  
   140012f7e:	fdivp  st(7),st
   140012f80:	(bad)  
   140012f82:	fdivp  st(7),st
   140012f84:	(bad)  
   140012f86:	fdivp  st(7),st
   140012f88:	(bad)  
   140012f8a:	fdivp  st(7),st
   140012f8c:	(bad)  
   140012f8e:	fdivp  st(7),st
   140012f90:	(bad)  
   140012f92:	fdivp  st(7),st
   140012f94:	out    0xe3,eax
   140012f96:	out    0xff,eax
   140012f98:	out    0xe3,eax
   140012f9a:	out    0xff,eax
   140012f9c:	out    0xe3,eax
   140012f9e:	out    0xff,eax
   140012fa0:	out    0xe3,eax
   140012fa2:	out    0xff,eax
   140012fa4:	mov    ebp,0xe7ffbdbe
   140012fa9:	jrcxz  0x140012f92
   140012fab:	and    DWORD PTR [rax],eax
	...
   140012fc1:	add    BYTE PTR [rax],al
   140012fc3:	add    dh,cl
   140012fc5:	xchg   edx,eax
   140012fc6:	rex.X fidiv WORD PTR [rbp+0x4a3175]
	...
   140012ff1:	add    BYTE PTR [rax],al
   140012ff3:	add    bh,ah
   140012ff5:	out    0xe7,eax
   140012ff7:	xor    esi,eax
   140012ff9:	retf   
   140012ffa:	(bad)  
   140012ffb:	lods   eax,DWORD PTR ds:[rsi]
   140012ffc:	mov    ebp,0xb5efbdbe
   140013001:	mov    dh,0xb5
   140013003:	inc    esi
   140013005:	mov    esi,0xe7e3e7ff
   14001300b:	(bad)  
   14001300c:	(bad)  
   14001300d:	(bad)  
   14001300e:	(bad)  
   14001300f:	(bad)  
   140013010:	(bad)  
   140013011:	(bad)  
   140013012:	(bad)  
   140013013:	(bad)  
   140013014:	(bad)  
   140013015:	(bad)  
   140013016:	(bad)  
   140013017:	(bad)  
   140013018:	(bad)  
   140013019:	(bad)  
   14001301a:	(bad)  
   14001301b:	(bad)  
   14001301c:	(bad)  
   14001301d:	(bad)  
   14001301e:	(bad)  
   14001301f:	(bad)  
   140013020:	(bad)  
   140013021:	(bad)  
   140013022:	(bad)  
   140013023:	(bad)  
   140013024:	(bad)  
   140013025:	(bad)  
   140013026:	(bad)  
   140013027:	(bad)  
   140013028:	(bad)  
   140013029:	sti    
   14001302a:	(bad)  
   14001302b:	(bad)  
   14001302c:	out    dx,eax
   14001302d:	out    dx,eax
   14001302e:	out    dx,eax
   14001302f:	jmp    rdi
   140013031:	jrcxz  0x14001301a
   140013033:	(bad)  
   140013034:	(bad)  
   140013036:	fdivp  st(7),st
   140013038:	(bad)  
   14001303a:	fdivp  st(7),st
   14001303c:	(bad)  
   14001303e:	fdivp  st(7),st
   140013040:	(bad)  
   140013042:	fdivp  st(7),st
   140013044:	(bad)  
   140013046:	fdivp  st(7),st
   140013048:	(bad)  
   14001304a:	fdivp  st(7),st
   14001304c:	out    0xe3,eax
   14001304e:	out    0xff,eax
   140013050:	out    0xe3,eax
   140013052:	out    0xff,eax
   140013054:	out    0xe3,eax
   140013056:	out    0xff,eax
   140013058:	out    0xe3,eax
   14001305a:	out    0xff,eax
   14001305c:	out    0xe3,eax
   14001305e:	out    0xff,eax
   140013060:	out    0xe7,eax
   140013062:	out    0xff,eax
   140013064:	mov    ebp,0xe7f7bdbe
   140013069:	out    0xe7,eax
   14001306b:	and    DWORD PTR [rax],eax
	...
   1400130bd:	add    BYTE PTR [rax],al
   1400130bf:	add    BYTE PTR [rbp-0x39e74a4e],dh
   1400130c5:	ret    
   1400130c6:	(bad)  
   1400130c7:	xchg   esp,eax
   1400130c8:	mov    ebp,0xb5e7bdbe
   1400130cd:	mov    dh,0xb5
   1400130cf:	inc    esi
   1400130d1:	ret    
   1400130d2:	(bad)  
   1400130d3:	(bad)  
   1400130d4:	(bad)  
   1400130d6:	fdivp  st(7),st
   1400130d8:	(bad)  
   1400130d9:	sti    
   1400130da:	(bad)  
   1400130db:	(bad)  
   1400130dc:	(bad)  
   1400130dd:	(bad)  
   1400130de:	(bad)  
   1400130df:	(bad)  
   1400130e0:	(bad)  
   1400130e1:	(bad)  
   1400130e2:	(bad)  
   1400130e3:	(bad)  
   1400130e4:	(bad)  
   1400130e5:	(bad)  
   1400130e6:	(bad)  
   1400130e7:	(bad)  
   1400130e8:	(bad)  
   1400130e9:	(bad)  
   1400130ea:	(bad)  
   1400130eb:	(bad)  
   1400130ec:	(bad)  
   1400130ed:	(bad)  
   1400130ee:	(bad)  
   1400130ef:	(bad)  
   1400130f0:	(bad)  
   1400130f1:	(bad)  
   1400130f2:	(bad)  
   1400130f3:	(bad)  
   1400130f4:	(bad)  
   1400130f5:	(bad)  
   1400130f6:	(bad)  
   1400130f7:	push   rdi
   1400130f9:	div    edi
   1400130fb:	(bad)  
   1400130fc:	out    dx,eax
   1400130fd:	jmp    0x1400130ee
   1400130ff:	jmp    rdi
   140013101:	jrcxz  0x1400130ea
   140013103:	(bad)  
   140013104:	(bad)  
   140013106:	fdivp  st(7),st
   140013108:	out    0xe3,eax
   14001310a:	out    0xff,eax
   14001310c:	out    0xe3,eax
   14001310e:	out    0xff,eax
   140013110:	out    0xe3,eax
   140013112:	out    0xff,eax
   140013114:	out    0xe7,eax
   140013116:	out    0xff,eax
   140013118:	out    0xe7,eax
   14001311a:	out    0xff,eax
   14001311c:	out    0xe7,eax
   14001311e:	out    0xff,eax
   140013120:	out    0xe7,eax
   140013122:	out    0xff,eax
   140013124:	mov    ebp,0xe7f7bdbe
   140013129:	out    0xe7,eax
   14001312b:	sbb    BYTE PTR [rax],al
	...
   140013189:	add    BYTE PTR [rax],al
   14001318b:	add    BYTE PTR [rbp-0x42f74a4e],dh
   140013191:	mov    esi,0xbebd73bd
   140013196:	mov    ebp,0xb5b6b5de
   14001319b:	inc    esi
   14001319d:	ret    
   14001319e:	mov    ebp,0xd6d7deff
   1400131a3:	div    edi
   1400131a5:	div    edi
   1400131a7:	(bad)  
   1400131a8:	(bad)  
   1400131a9:	(bad)  
   1400131aa:	(bad)  
   1400131ab:	(bad)  
   1400131ac:	(bad)  
   1400131ad:	(bad)  
   1400131ae:	(bad)  
   1400131af:	(bad)  
   1400131b0:	(bad)  
   1400131b1:	(bad)  
   1400131b2:	(bad)  
   1400131b3:	(bad)  
   1400131b4:	(bad)  
   1400131b5:	(bad)  
   1400131b6:	(bad)  
   1400131b7:	(bad)  
   1400131b8:	(bad)  
   1400131b9:	(bad)  
   1400131ba:	(bad)  
   1400131bb:	(bad)  
   1400131bc:	(bad)  
   1400131bd:	(bad)  
   1400131be:	(bad)  
   1400131bf:	(bad)  
   1400131c0:	(bad)  
   1400131c1:	(bad)  
   1400131c2:	(bad)  
   1400131c3:	(bad)  
   1400131c4:	push   rdi
   1400131c6:	(bad)  
   1400131c7:	(bad)  
   1400131c8:	out    dx,eax
   1400131c9:	out    dx,eax
   1400131ca:	out    dx,eax
   1400131cb:	jmp    rdi
   1400131cd:	out    0xe7,eax
   1400131cf:	jmp    rdi
   1400131d1:	out    0xe7,eax
   1400131d3:	jmp    rdi
   1400131d5:	out    0xe7,eax
   1400131d7:	jmp    rdi
   1400131d9:	out    0xe7,eax
   1400131db:	jmp    rdi
   1400131dd:	out    0xe7,eax
   1400131df:	jmp    rdi
   1400131e1:	out    0xe7,eax
   1400131e3:	inc    esi
   1400131e5:	ret    
   1400131e6:	mov    ebp,0xe7ebe7f7
   1400131eb:	adc    BYTE PTR [rax],al
	...
   140013259:	add    BYTE PTR [rax],al
   14001325b:	add    BYTE PTR [rbp-0x429c4242],bh
   140013261:	mov    esi,0xb6b5cebd
   140013266:	mov    ch,0xff
   140013268:	mov    ebp,0xd6ffbdbe
   14001326d:	rcl    esi,cl
   14001326f:	div    edi
   140013271:	repz idiv edi
   140013274:	(bad)  
   140013275:	(bad)  
   140013276:	(bad)  
   140013277:	(bad)  
   140013278:	(bad)  
   140013279:	(bad)  
   14001327a:	(bad)  
   14001327b:	(bad)  
   14001327c:	(bad)  
   14001327d:	(bad)  
   14001327e:	(bad)  
   14001327f:	(bad)  
   140013280:	(bad)  
   140013281:	(bad)  
   140013282:	(bad)  
   140013283:	(bad)  
   140013284:	(bad)  
   140013285:	(bad)  
   140013286:	(bad)  
   140013287:	(bad)  
   140013288:	(bad)  
   140013289:	(bad)  
   14001328a:	(bad)  
   14001328b:	(bad)  
   14001328c:	(bad)  
   14001328d:	(bad)  
   14001328e:	(bad)  
   14001328f:	(bad)  
   140013290:	(bad)  
   140013291:	(bad)  
   140013292:	(bad)  
   140013293:	push   rdi
   140013295:	repz idiv edi
   140013298:	out    dx,eax
   140013299:	jmp    0x14001328a
   14001329b:	(bad)  
   14001329c:	out    dx,eax
   14001329d:	jmp    0x14001328e
   14001329f:	jmp    rdi
   1400132a1:	out    0xe7,eax
   1400132a3:	(bad)  
   1400132a4:	mov    ebp,0xeff7bdc3
   1400132a9:	jmp    0x14001329a
   1400132ab:	or     BYTE PTR [rax],al
	...
   140013325:	add    BYTE PTR [rax],al
   140013327:	add    BYTE PTR [rbp-0x39ad4242],bh
   14001332d:	ret    
   14001332e:	mov    ebp,0xb5b6b5bd
   140013333:	(bad)  
   140013334:	mov    ebp,0xceffbdba
   140013339:	iret   
   14001333a:	(bad)  
   14001333b:	out    dx,eax
   14001333c:	out    dx,eax
   14001333d:	jmp    0x14001332e
   14001333f:	(bad)  
   140013340:	(bad)  
   140013341:	(bad)  
   140013342:	(bad)  
   140013343:	(bad)  
   140013344:	(bad)  
   140013345:	(bad)  
   140013346:	(bad)  
   140013347:	(bad)  
   140013348:	(bad)  
   140013349:	(bad)  
   14001334a:	(bad)  
   14001334b:	(bad)  
   14001334c:	(bad)  
   14001334d:	(bad)  
   14001334e:	(bad)  
   14001334f:	(bad)  
   140013350:	(bad)  
   140013351:	(bad)  
   140013352:	(bad)  
   140013353:	(bad)  
   140013354:	(bad)  
   140013355:	(bad)  
   140013356:	(bad)  
   140013357:	(bad)  
   140013358:	(bad)  
   140013359:	(bad)  
   14001335a:	(bad)  
   14001335b:	(bad)  
   14001335c:	(bad)  
   14001335d:	(bad)  
   14001335e:	(bad)  
   14001335f:	push   rdi
   140013361:	sti    
   140013362:	idiv   edi
   140013364:	(bad)  
   140013365:	iret   
   140013366:	(bad)  
   140013367:	imul   edi
   140013369:	jmp    0x14001335a
   14001336b:	or     BYTE PTR [rax],al
	...
   1400133f1:	add    BYTE PTR [rax],al
   1400133f3:	add    BYTE PTR [rbp-0x42c64242],bh
   1400133f9:	mov    esi,0xbabdadbd
   1400133fe:	mov    ebp,0xb5b6b5f7
   140013403:	dec    esi
   140013405:	retf   
   140013406:	(bad)  
   140013407:	out    0xe7,eax
   140013409:	out    0xe7,eax
   14001340b:	idiv   edi
   14001340d:	(bad)  
   14001340e:	(bad)  
   14001340f:	(bad)  
   140013410:	(bad)  
   140013411:	(bad)  
   140013412:	(bad)  
   140013413:	(bad)  
   140013414:	(bad)  
   140013415:	(bad)  
   140013416:	(bad)  
   140013417:	(bad)  
   140013418:	(bad)  
   140013419:	(bad)  
   14001341a:	(bad)  
   14001341b:	(bad)  
   14001341c:	(bad)  
   14001341d:	(bad)  
   14001341e:	(bad)  
   14001341f:	call   rsi
   140013421:	xlat   BYTE PTR ds:[rbx]
   140013422:	(bad)  
   140013423:	(bad)  
   140013424:	(bad)  
   140013426:	fsubp  st(7),st
	...
   1400134c0:	mov    ebp,0xbd21bdbe
   1400134c5:	mov    esi,0xbabd94bd
   1400134ca:	mov    ebp,0xb5b6b5e7
   1400134cf:	inc    esi
   1400134d1:	mov    esi,0xc6cbc6ef
   1400134d7:	idiv   DWORD PTR [rbp-0x4a004242]
   1400134dd:	mov    dh,0xb5
   1400134df:	inc    esi
   1400134e1:	mov    esi,0xe7ebefe7
   1400134e7:	push   rdx
	...
   14001358c:	mov    ebp,0xc618bdba
   140013591:	ret    
   140013592:	(bad)  
   140013593:	imul   eax,esi,0xffffffbe
   140013596:	mov    ebp,0xc6c7c68c
   14001359b:	push   rdx
   14001359c:	(bad)  
   14001359d:	retf   
   14001359e:	mov    ebp,0x21
	...
   1400135e7:	add    al,dh
   1400135e9:	add    BYTE PTR [rdi],al
   1400135eb:	(bad)  
   1400135ec:	(bad)  
   1400135ed:	inc    DWORD PTR [rax]
   1400135ef:	add    al,ah
   1400135f1:	add    BYTE PTR [rcx],al
   1400135f3:	(bad)  
   1400135f4:	(bad)  
   1400135f5:	inc    DWORD PTR [rax]
   1400135f7:	add    al,al
   1400135f9:	add    BYTE PTR [rax],al
   1400135fb:	jg     0x1400135fc
   1400135fd:	inc    DWORD PTR [rax]
   1400135ff:	add    al,al
   140013601:	add    BYTE PTR [rax],al
   140013603:	(bad)  
   140013604:	(bad)  
   140013605:	inc    DWORD PTR [rax]
   140013607:	add    al,al
   140013609:	add    BYTE PTR [rax],al
   14001360b:	(bad)  
   14001360c:	(bad)  
   14001360d:	inc    DWORD PTR [rax]
   14001360f:	add    al,al
   140013611:	add    BYTE PTR [rax],al
   140013613:	add    edi,edi
   140013615:	inc    DWORD PTR [rax]
   140013617:	add    al,al
   140013619:	add    BYTE PTR [rax],al
   14001361b:	add    bh,bh
   14001361d:	inc    DWORD PTR [rax]
   14001361f:	add    al,al
   140013621:	add    BYTE PTR [rax],al
   140013623:	add    BYTE PTR [rdi],bh
   140013625:	inc    DWORD PTR [rax]
   140013627:	add    al,al
   140013629:	add    BYTE PTR [rax],al
   14001362b:	add    BYTE PTR [rdi],bh
   14001362d:	inc    DWORD PTR [rax]
   14001362f:	add    al,al
   140013631:	add    BYTE PTR [rax],al
   140013633:	add    BYTE PTR [rdi],bl
   140013635:	inc    DWORD PTR [rax]
   140013637:	add    al,al
   140013639:	add    BYTE PTR [rax],al
   14001363b:	add    BYTE PTR [rdi],cl
   14001363d:	inc    DWORD PTR [rax]
   14001363f:	add    al,al
   140013641:	add    BYTE PTR [rax],al
   140013643:	add    BYTE PTR [rdi],al
   140013645:	inc    DWORD PTR [rax]
   140013647:	add    al,al
   140013649:	add    BYTE PTR [rax],al
   14001364b:	add    BYTE PTR [rbx],al
   14001364d:	inc    DWORD PTR [rax]
   14001364f:	add    al,al
   140013651:	add    BYTE PTR [rax],al
   140013653:	add    BYTE PTR [rcx],al
   140013655:	inc    DWORD PTR [rax]
   140013657:	add    al,al
   140013659:	add    BYTE PTR [rax],al
   14001365b:	add    BYTE PTR [rax],al
   14001365d:	inc    DWORD PTR [rax]
   14001365f:	add    al,al
   140013661:	add    BYTE PTR [rax],al
   140013663:	add    BYTE PTR [rax],al
   140013665:	jg     0x140013667
   140013667:	add    al,al
   140013669:	add    BYTE PTR [rax],al
   14001366b:	add    BYTE PTR [rax],al
   14001366d:	jg     0x14001366f
   14001366f:	add    al,al
   140013671:	add    BYTE PTR [rax],al
   140013673:	add    BYTE PTR [rax],al
   140013675:	jg     0x140013677
   140013677:	add    al,al
   140013679:	add    BYTE PTR [rax],al
   14001367b:	add    BYTE PTR [rax],al
   14001367d:	jg     0x14001367f
   14001367f:	add    al,al
   140013681:	add    BYTE PTR [rax],al
   140013683:	add    BYTE PTR [rax],al
   140013685:	jg     0x140013687
   140013687:	add    al,al
   140013689:	add    BYTE PTR [rax],al
   14001368b:	add    BYTE PTR [rax],al
   14001368d:	add    BYTE PTR [eax],al
   140013690:	rol    BYTE PTR [rax],0x0
   140013693:	add    BYTE PTR [rax],al
   140013695:	rex.XB add BYTE PTR [r8],al
   140013698:	rol    BYTE PTR [rax],0x0
   14001369b:	add    BYTE PTR [rax],al
   14001369d:	(bad)  
   14001369e:	add    BYTE PTR [rax],al
   1400136a0:	rol    BYTE PTR [rax],0x0
   1400136a3:	add    BYTE PTR [rsi],al
   1400136a5:	(bad)  
   1400136a6:	add    BYTE PTR [rax],al
   1400136a8:	rol    BYTE PTR [rax],0x0
   1400136ab:	add    BYTE PTR [rsi],al
   1400136ad:	jno    0x1400136af
   1400136af:	add    al,al
   1400136b1:	add    BYTE PTR [rax],al
   1400136b3:	add    BYTE PTR [rsi],al
   1400136b5:	jno    0x1400136b7
   1400136b7:	add    al,al
   1400136b9:	add    BYTE PTR [rax],al
   1400136bb:	add    BYTE PTR [rsi],al
   1400136bd:	jno    0x1400136bf
   1400136bf:	add    al,al
   1400136c1:	add    BYTE PTR [rax],al
   1400136c3:	add    BYTE PTR [rsi],al
   1400136c5:	jno    0x1400136c7
   1400136c7:	add    al,al
   1400136c9:	add    BYTE PTR [rax],al
   1400136cb:	add    BYTE PTR [rsi],al
   1400136cd:	jno    0x1400136cf
   1400136cf:	add    al,al
   1400136d1:	add    BYTE PTR [rax],al
   1400136d3:	add    BYTE PTR [rsi],al
   1400136d5:	(bad)  
   1400136d6:	add    BYTE PTR [rax],al
   1400136d8:	rol    BYTE PTR [rax],0x0
   1400136db:	add    BYTE PTR [rsi],al
   1400136dd:	(bad)  
   1400136de:	add    BYTE PTR [rax],al
   1400136e0:	rol    BYTE PTR [rax],0x0
   1400136e3:	add    BYTE PTR [rsi],al
   1400136e5:	add    DWORD PTR [rax],eax
   1400136e7:	add    al,al
   1400136e9:	add    BYTE PTR [rax],al
   1400136eb:	add    BYTE PTR [rsi],al
   1400136ed:	add    eax,DWORD PTR [rax]
   1400136ef:	add    al,al
   1400136f1:	add    BYTE PTR [rax],al
   1400136f3:	add    BYTE PTR [rsi],al
   1400136f5:	(bad)  
   1400136f6:	add    BYTE PTR [rax],al
   1400136f8:	rol    BYTE PTR [rax],0x0
   1400136fb:	add    BYTE PTR [rsi],al
   1400136fd:	(bad)  
   1400136fe:	add    BYTE PTR [rax],al
   140013700:	rol    BYTE PTR [rax],0x0
   140013703:	add    BYTE PTR [rsi],al
   140013705:	(bad)  
   140013706:	add    BYTE PTR [rax],al
   140013708:	rol    BYTE PTR [rax],0x0
   14001370b:	add    BYTE PTR [rsi],al
   14001370d:	(bad)  
   14001370e:	add    BYTE PTR [rax],al
   140013710:	rol    BYTE PTR [rax],0x0
   140013713:	add    BYTE PTR [rsi],al
   140013715:	(bad)  
   140013716:	add    BYTE PTR [rax],al
   140013718:	rol    BYTE PTR [rax],0x0
   14001371b:	add    BYTE PTR [rsi+0x7f],bh
   14001371e:	add    BYTE PTR [rax],al
   140013720:	rol    BYTE PTR [rax],0x0
   140013723:	add    BYTE PTR [rsi+0x7f],bh
   140013726:	add    BYTE PTR [rax],al
   140013728:	loopne 0x14001372a
   14001372a:	add    BYTE PTR [rax],al
   14001372c:	jg     0x14001372d
   14001372e:	add    BYTE PTR [rax],al
   140013730:	cld    
   140013731:	add    BYTE PTR [rax],al
   140013733:	add    BYTE PTR [rdi-0x1],bh
   140013736:	add    BYTE PTR [rax],al
   140013738:	inc    DWORD PTR [rax-0x810000]
   14001373e:	add    BYTE PTR [rax],al
   140013740:	(bad)  
   140013741:	clc    
   140013742:	add    BYTE PTR [rax],al
   140013744:	jg     0x140013745
   140013746:	add    BYTE PTR [rax],al
   140013748:	(bad)  
   140013749:	inc    DWORD PTR [rax]
   14001374b:	add    BYTE PTR [rdi-0x1],bh
   14001374e:	add    BYTE PTR [rax],al
   140013750:	(bad)  
   140013751:	jmp    rax
   140013753:	add    bh,bh
   140013755:	inc    DWORD PTR [rax]
   140013757:	add    bh,bh
   140013759:	(bad)  
   14001375a:	cld    
   14001375b:	add    bh,bh
   14001375d:	inc    DWORD PTR [rax]
   14001375f:	add    bh,bh
   140013761:	(bad)  
   140013762:	inc    DWORD PTR [rbx+0xffff]
   140013768:	sub    BYTE PTR [rax],al
   14001376a:	add    BYTE PTR [rax],al
   14001376c:	and    BYTE PTR [rax],al
   14001376e:	add    BYTE PTR [rax],al
   140013770:	add    BYTE PTR [rax],al
   140013773:	add    BYTE PTR [rcx],al
   140013775:	add    BYTE PTR [rax],ah
   140013777:	add    BYTE PTR [rax],al
   140013779:	add    BYTE PTR [rax],al
   14001377b:	add    BYTE PTR [rax+0x10],al
	...
   140013795:	add    BYTE PTR [rax],al
   140013797:	add    BYTE PTR [rcx],ch
   140013799:	sub    BYTE PTR [rcx],ch
   14001379b:	cmp    DWORD PTR [rbp+rdi*2+0x797be784],eax
   1400137a2:	jnp    0x14001378b
   1400137a4:	pop    rdx
   1400137a5:	pop    rbp
   1400137a6:	pop    rdx
   1400137a7:	mov    ebp,0x5a212021
   1400137ac:	add    BYTE PTR [rax],al
   1400137ae:	add    BYTE PTR [rcx],ah
   1400137b0:	add    BYTE PTR [rax],al
   1400137b2:	add    BYTE PTR [rcx],ah
   1400137b4:	add    BYTE PTR [rax],al
   1400137b6:	add    BYTE PTR [rcx],ch
   1400137b8:	add    BYTE PTR [rax],al
   1400137ba:	add    BYTE PTR [rcx],ch
   1400137bc:	add    BYTE PTR [rax],al
   1400137be:	add    BYTE PTR [rcx],dh
   1400137c0:	add    BYTE PTR [rax],al
   1400137c2:	add    BYTE PTR [rcx],dh
   1400137c4:	add    BYTE PTR [rax],al
   1400137c6:	add    BYTE PTR [rax],dl
	...
   140013814:	xor    DWORD PTR [rax],esi
   140013816:	xor    DWORD PTR [rdx-0x7c],edx
   140013819:	(bad)  
   14001381a:	test   bh,ah
   14001381c:	xchg   esp,eax
   14001381d:	xchg   edx,eax
   14001381e:	xchg   esp,eax
   14001381f:	jmp    FWORD PTR [rbp-0x52005a5a]
   140013825:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013826:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013827:	(bad)  
   140013828:	(bad)  
   14001382a:	fdivp  st(7),st
   14001382c:	rex.WX
   14001382d:	rex.WRB
   14001382e:	rex.WX (bad) 
   140013830:	adc    BYTE PTR [rax],dl
   140013832:	adc    BYTE PTR [rax+rax*1+0x10840004],cl
   140013839:	adc    al,0x10
   14001383b:	lods   eax,DWORD PTR ds:[rsi]
   14001383c:	pop    rdx
   14001383d:	pop    rcx
   14001383e:	pop    rdx
   14001383f:	out    0x7b,eax
   140013841:	jge    0x1400138be
   140013843:	out    dx,eax
   140013844:	sub    DWORD PTR [rcx+rbp*1],ebp
   140013847:	pushf  
   140013848:	add    BYTE PTR [rax],al
   14001384a:	add    BYTE PTR [rdx+0x0],cl
   14001384d:	add    BYTE PTR [rax],al
   14001384f:	sbb    BYTE PTR [rax],al
   140013851:	add    BYTE PTR [rax],al
   140013853:	or     BYTE PTR [rax],al
	...
   14001388d:	add    BYTE PTR [rax],al
   14001388f:	add    BYTE PTR [rdx+rdx*4-0x797bef6c],dl
   140013896:	mov    esi,ss
   140013898:	lods   eax,DWORD PTR ds:[rsi]
   140013899:	stos   BYTE PTR es:[rdi],al
   14001389a:	lods   eax,DWORD PTR ds:[rsi]
   14001389b:	call   QWORD PTR [rdx+rdx*4-0x5952006c]
   1400138a2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138a3:	call   FWORD PTR [rsi+rbx*4-0x30310064]
   1400138aa:	(bad)  
   1400138ab:	jmp    FWORD PTR [rbp-0x6b005252]
   1400138b1:	xchg   esi,eax
   1400138b2:	xchg   esp,eax
   1400138b3:	jmp    QWORD PTR [rbx+0x65]
   1400138b6:	movsxd edi,edi
   1400138b8:	pop    rdx
   1400138b9:	pop    rbp
   1400138ba:	pop    rdx
   1400138bb:	jmp    QWORD PTR [rbx+0x65]
   1400138be:	movsxd ebx,esi
   1400138c0:	pushf  
   1400138c1:	(bad)  
   1400138c2:	pushf  
   1400138c3:	(bad)  
   1400138c4:	(bad)  
   1400138c5:	iret   
   1400138c6:	(bad)  
   1400138c7:	call   FWORD PTR [rsi+rbx*4+0x3839ef9c]
   1400138ce:	xor    DWORD PTR [rbp+0x52000000],esp
   1400138d4:	add    BYTE PTR [rax],al
   1400138d6:	add    BYTE PTR [rax],bl
   1400138d8:	add    BYTE PTR [rax],al
   1400138da:	add    BYTE PTR [rax],cl
	...
   140013910:	xchg   esp,eax
   140013911:	xchg   edx,eax
   140013912:	xchg   esp,eax
   140013913:	sbb    BYTE PTR [rsi+rcx*4-0x4d421074],cl
   14001391a:	mov    ch,0xff
   14001391c:	pushf  
   14001391d:	xchg   esi,eax
   14001391e:	xchg   esp,eax
   14001391f:	push   QWORD PTR [rbp-0x63005252]
   140013925:	(bad)  
   140013926:	pushf  
   140013927:	dec    esi
   140013929:	iret   
   14001392a:	(bad)  
   14001392b:	jmp    FWORD PTR [rbp-0x73005252]
   140013931:	mov    cs,WORD PTR [rdi+rdi*8-0x5a5d5b]
   140013938:	lods   eax,DWORD PTR ds:[rsi]
   140013939:	stos   BYTE PTR es:[rdi],al
   14001393a:	lods   eax,DWORD PTR ds:[rsi]
   14001393b:	call   FWORD PTR [rdx+0x5d]
   14001393e:	pop    rdx
   14001393f:	ficom  WORD PTR [rax]
   140013941:	adc    BYTE PTR [rax],dl
   140013943:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013944:	xor    DWORD PTR [rcx+rsi*1],esi
   140013947:	xchg   esp,eax
   140013948:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013949:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001394a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001394b:	(bad)  
   14001394c:	(bad)  
   14001394d:	iret   
   14001394e:	(bad)  
   14001394f:	jmp    QWORD PTR [rbp+0x31f7a5a2]
   140013955:	xor    BYTE PTR [rcx],dh
   140013957:	lods   eax,DWORD PTR ds:[rsi]
   140013958:	add    BYTE PTR [rax],al
   14001395a:	add    BYTE PTR [rdx+0x0],dl
   14001395d:	add    BYTE PTR [rax],al
   14001395f:	sbb    BYTE PTR [rax],al
   140013961:	add    BYTE PTR [rax],al
   140013963:	or     BYTE PTR [rax],al
	...
   14001398d:	add    BYTE PTR [rax],al
   14001398f:	add    BYTE PTR [rdx+rdx*4-0x716be76c],dl
   140013996:	xchg   esp,eax
   140013997:	out    dx,eax
   140013998:	mov    ebp,0x9cffb5b6
   14001399d:	(bad)  
   14001399e:	pushf  
   14001399f:	push   QWORD PTR [rbp-0x63004a4a]
   1400139a5:	(bad)  
   1400139a6:	pushf  
   1400139a7:	dec    esi
   1400139a9:	iret   
   1400139aa:	(bad)  
   1400139ab:	(bad)  
   1400139ac:	mov    ebp,0xceffbdba
   1400139b1:	retf   
   1400139b2:	(bad)  
   1400139b3:	jmp    FWORD PTR [rbp-0x6b005256]
   1400139b9:	xchg   esi,eax
   1400139ba:	xchg   esp,eax
   1400139bb:	jmp    FWORD PTR [rbp-0x4a005252]
   1400139c1:	mov    dh,0xb5
   1400139c3:	jmp    FWORD PTR [rbx+0x6d]
   1400139c6:	imul   edx,esi,0x18
   1400139c9:	sbb    BYTE PTR [rax],bl
   1400139cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400139cc:	cmp    DWORD PTR [rcx+rdi*1],edi
   1400139cf:	pushf  
   1400139d0:	pushf  
   1400139d1:	(bad)  
   1400139d2:	pushf  
   1400139d3:	(bad)  
   1400139d4:	(bad)  
   1400139d5:	ror    esi,cl
   1400139d7:	call   QWORD PTR [rsi+rdx*4+0x4142ef94]
   1400139de:	rex.X mov bpl,0x0
   1400139e1:	add    al,0x0
   1400139e3:	rex.WX add BYTE PTR [rax],al
   1400139e6:	add    BYTE PTR [rax],dl
	...
   140013a10:	xchg   esp,eax
   140013a11:	xchg   edx,eax
   140013a12:	xchg   esp,eax
   140013a13:	sbb    BYTE PTR [rdx+rdx*4-0x4139106c],dl
   140013a1a:	mov    ebp,0x9c9a9cff
   140013a1f:	dec    esi
   140013a21:	mov    esi,0x9c9a9cff
   140013a27:	dec    esi
   140013a29:	iret   
   140013a2a:	(bad)  
   140013a2b:	call   FWORD PTR [rsi+rbx*4-0x5d5a0064]
   140013a32:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013a33:	push   QWORD PTR [rbp-0x31004a4a]
   140013a39:	retf   
   140013a3a:	(bad)  
   140013a3b:	(bad)  
   140013a3c:	mov    ebp,0xb5ffbdba
   140013a41:	mov    dl,0xb5
   140013a43:	inc    esi
   140013a45:	mov    esi,0xc6c7c6ff
   140013a4b:	push   QWORD PTR [rbx+0x75]
   140013a4e:	jae    0x140013a2e
   140013a50:	sbb    BYTE PTR [rax],bl
   140013a52:	sbb    BYTE PTR [rbp-0x10949295],dh
   140013a58:	mov    ebp,0xadf7bdbe
   140013a5d:	scas   al,BYTE PTR es:[rdi]
   140013a5e:	lods   eax,DWORD PTR ds:[rsi]
   140013a5f:	out    dx,eax
   140013a60:	and    DWORD PTR [rcx+riz*1],esp
   140013a63:	xchg   esp,eax
   140013a64:	add    BYTE PTR [rax],al
   140013a66:	add    BYTE PTR [rcx],ch
   140013a68:	add    BYTE PTR [rax],al
   140013a6a:	add    BYTE PTR [rax],dl
	...
   140013a90:	xchg   esp,eax
   140013a91:	xchg   edx,eax
   140013a92:	xchg   esp,eax
   140013a93:	sbb    BYTE PTR [rdx+rdx*4-0x3831106c],dl
   140013a9a:	(bad)  
   140013a9b:	call   FWORD PTR [rdx+rbx*4-0x38310064]
   140013aa2:	(bad)  
   140013aa3:	call   FWORD PTR [rdx+rbx*4-0x30310064]
   140013aaa:	(bad)  
   140013aab:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013ab2:	pushf  
   140013ab3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013aba:	pushf  
   140013abb:	push   QWORD PTR [rbp-0x31004a4a]
   140013ac1:	iret   
   140013ac2:	(bad)  
   140013ac3:	inc    esi
   140013ac5:	mov    esi,0xc6c3c6ff
   140013acb:	dec    esi
   140013acd:	retf   
   140013ace:	(bad)  
   140013acf:	dec    esi
   140013ad1:	retf   
   140013ad2:	(bad)  
   140013ad3:	dec    DWORD PTR [rsi+rcx*4+0x2829ff8c]
   140013ada:	sub    esi,ecx
   140013adc:	sbb    BYTE PTR [rax+rbx*1],bl
   140013adf:	jae    0x140013ae1
   140013ae1:	add    BYTE PTR [rax],al
   140013ae3:	push   rdx
   140013ae4:	add    BYTE PTR [rax],al
   140013ae6:	add    BYTE PTR [rcx],bh
   140013ae8:	add    BYTE PTR [rax],al
   140013aea:	add    BYTE PTR [rcx],ah
   140013aec:	add    BYTE PTR [rax],al
   140013aee:	add    BYTE PTR [rax],cl
	...
   140013b10:	xchg   esp,eax
   140013b11:	xchg   edx,eax
   140013b12:	xchg   esp,eax
   140013b13:	sbb    BYTE PTR [rdx+rdx*4-0x3029106c],dl
   140013b1a:	(bad)  
   140013b1b:	call   FWORD PTR [rdx+rbx*4-0x34310064]
   140013b22:	(bad)  
   140013b23:	call   FWORD PTR [rsi+rbx*4-0x30310064]
   140013b2a:	(bad)  
   140013b2b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013b32:	pushf  
   140013b33:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013b3a:	pushf  
   140013b3b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013b42:	pushf  
   140013b43:	push   QWORD PTR [rbp-0x31004a4e]
   140013b49:	iret   
   140013b4a:	(bad)  
   140013b4b:	dec    esi
   140013b4d:	retf   
   140013b4e:	(bad)  
   140013b4f:	push   QWORD PTR [rbp-0x42004a4a]
   140013b55:	mov    dh,0xb5
   140013b57:	jmp    QWORD PTR [rbp-0x7b00846e]
   140013b5d:	rex.X jmp QWORD PTR gs:[rbp+0x7bf74a7d]
   140013b65:	pop    rbp
   140013b66:	xor    esi,ebx
   140013b68:	cmp    DWORD PTR [rax+rbx*1],ebp
   140013b6b:	xchg   esp,eax
   140013b6c:	sbb    BYTE PTR [rax+rdx*1],dl
   140013b6f:	cmp    DWORD PTR [rax],eax
   140013b71:	add    BYTE PTR [rax],al
   140013b73:	or     BYTE PTR [rax],al
	...
   140013b8d:	add    BYTE PTR [rax],al
   140013b8f:	add    BYTE PTR [rdx+rdx*4-0x6d6be76c],dl
   140013b96:	xchg   esp,eax
   140013b97:	out    dx,eax
   140013b98:	(bad)  
   140013b9a:	(bad)  
   140013b9b:	call   FWORD PTR [rsi+rbx*4-0x30290064]
   140013ba2:	(bad)  
   140013ba3:	call   FWORD PTR [rdx+rbx*4-0x30310064]
   140013baa:	(bad)  
   140013bab:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013bb2:	pushf  
   140013bb3:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013bba:	pushf  
   140013bbb:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013bc2:	pushf  
   140013bc3:	jmp    QWORD PTR [rbp-0x63005a5e]
   140013bc9:	sahf   
   140013bca:	pushf  
   140013bcb:	push   QWORD PTR [rbp-0x39004a4e]
   140013bd1:	ret    
   140013bd2:	mov    ebp,0x3186b5ff
   140013bd7:	push   rdi
   140013bd9:	scas   al,BYTE PTR es:[rdi]
   140013bda:	sub    edi,edi
   140013bdc:	out    dx,eax
   140013bdd:	sahf   
   140013bde:	sbb    bh,bh
   140013be0:	fiadd  WORD PTR [rsi-0x75180100]
   140013be6:	or     bh,bh
   140013be8:	neg    DWORD PTR [rsi-0x712900cf]
   140013bee:	cmp    edi,edi
   140013bf0:	cmp    DWORD PTR [rax],ebp
   140013bf2:	sbb    BYTE PTR [rax+rax*1+0x80000],cl
	...
   140013c0d:	add    BYTE PTR [rax],al
   140013c0f:	add    BYTE PTR [rdx+rdx*4-0x6d6be76c],dl
   140013c16:	xchg   esp,eax
   140013c17:	out    dx,eax
   140013c18:	out    0xdb,eax
   140013c1a:	fdivp  st(7),st
   140013c1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c1d:	sahf   
   140013c1e:	pushf  
   140013c1f:	call   rsi
   140013c21:	iret   
   140013c22:	(bad)  
   140013c23:	call   FWORD PTR [rdx+rbx*4-0x30310064]
   140013c2a:	(bad)  
   140013c2b:	call   FWORD PTR [rsi+rbx*4-0x61630064]
   140013c32:	pushf  
   140013c33:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140013c39:	movabs ds:0xa2a5ffa5a2a5ffa5,al
   140013c42:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c43:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140013c49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c4a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c4b:	jmp    QWORD PTR [rbp-0x4a005a5a]
   140013c51:	(bad)  
   140013c52:	imul   edi,edi,0xffffffff
   140013c55:	mov    edx,0x86ceff29
   140013c5a:	add    bh,bh
   140013c5c:	(bad)  
   140013c5d:	xchg   BYTE PTR [rax],dl
   140013c5f:	inc    esi
   140013c61:	(bad)  
   140013c62:	adc    bh,bh
   140013c64:	mov    ebp,0xbdff0879
   140013c69:	jno    0x140013c6b
   140013c6b:	call   rsi
   140013c6d:	jge    0x140013c77
   140013c6f:	push   rdi
   140013c71:	movabs ds:0x84182c42ff39,al
	...
   140013c8e:	add    BYTE PTR [rax],al
   140013c90:	xchg   esp,eax
   140013c91:	xchg   edx,eax
   140013c92:	xchg   esp,eax
   140013c93:	sbb    BYTE PTR [rsi+rdx*4-0x2018086c],dl
   140013c9a:	fdivp  st(7),st
   140013c9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c9d:	sahf   
   140013c9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c9f:	call   rsi
   140013ca1:	ror    esi,cl
   140013ca3:	call   FWORD PTR [rsi+rbx*4-0x30310064]
   140013caa:	(bad)  
   140013cab:	jmp    QWORD PTR [rbp-0x5a005a5e]
   140013cb1:	movabs ds:0xa6a5ffa5a2a5ffa5,al
   140013cba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013cbb:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140013cc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cc2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013cc3:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140013cc9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013ccb:	jmp    QWORD PTR [rbp-0x21005a5a]
   140013cd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cd2:	push   rdx
   140013cd3:	push   rdi
   140013cd5:	mov    dh,0x42
   140013cd7:	(bad)  
   140013cd8:	fimul  WORD PTR [rsi-0x69210100]
   140013cde:	sbb    bh,bh
   140013ce0:	(bad)  
   140013ce1:	mov    ss,WORD PTR [rax]
   140013ce3:	call   rsi
   140013ce5:	mov    dl,BYTE PTR [rax]
   140013ce7:	dec    esi
   140013ce9:	(bad)  
   140013cea:	or     bh,bh
   140013cec:	mov    ebp,0xdeff0875
   140013cf1:	(bad)  
   140013cf2:	or     bh,bh
   140013cf4:	mov    ebp,0xf72179
	...
   140013d0d:	add    BYTE PTR [rax],al
   140013d0f:	add    BYTE PTR [rdx+rdx*4-0x696be76c],dl
   140013d16:	xchg   esp,eax
   140013d17:	imul   edi
   140013d19:	jrcxz  0x140013d02
   140013d1b:	jmp    QWORD PTR [rbp-0x29005a5e]
   140013d21:	rcl    esi,cl
   140013d23:	call   FWORD PTR [rsi+rbx*4-0x30290064]
   140013d2a:	(bad)  
   140013d2b:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140013d31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013d32:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d33:	jmp    QWORD PTR [rbp-0x5a005a5a]
   140013d39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013d3a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d3b:	jmp    QWORD PTR [rbp-0x52005a5a]
   140013d41:	stos   BYTE PTR es:[rdi],al
   140013d42:	lods   eax,DWORD PTR ds:[rsi]
   140013d43:	jmp    FWORD PTR [rbp-0x52005256]
   140013d49:	stos   BYTE PTR es:[rdi],al
   140013d4a:	lods   eax,DWORD PTR ds:[rsi]
   140013d4b:	jmp    FWORD PTR [rbp-0x29005256]
   140013d51:	sahf   
   140013d52:	rex.WX (bad) 
   140013d54:	call   rbx
   140013d56:	movsxd edi,edi
   140013d58:	out    0xa2,eax
   140013d5a:	sbb    bh,bh
   140013d5c:	out    0x9a,eax
   140013d5e:	adc    bh,bh
   140013d60:	ficomp WORD PTR [rdx-0x6d2100e8]
   140013d66:	sbb    bh,bh
   140013d68:	(bad)  
   140013d69:	mov    ss,WORD PTR [rax]
   140013d6b:	dec    esi
   140013d6d:	xchg   BYTE PTR [rax],dl
   140013d6f:	call   rsi
   140013d71:	xchg   BYTE PTR [rax],cl
   140013d73:	(bad)  
   140013d74:	mov    ebp,0xf71071
	...
   140013d8d:	add    BYTE PTR [rax],al
   140013d8f:	add    BYTE PTR [rdx+rdx*4-0x696be76c],dl
   140013d96:	xchg   esp,eax
   140013d97:	imul   edi
   140013d99:	jrcxz  0x140013d82
   140013d9b:	jmp    QWORD PTR [rbp-0x21005a5e]
   140013da1:	rcl    esi,cl
   140013da3:	call   FWORD PTR [rsi+rbx*4-0x2c290064]
   140013daa:	(bad)  
   140013dab:	jmp    QWORD PTR [rbp-0x52005a5a]
   140013db1:	stos   BYTE PTR es:[rdi],al
   140013db2:	lods   eax,DWORD PTR ds:[rsi]
   140013db3:	jmp    FWORD PTR [rbp+0x5affadaa]
   140013db9:	push   rbp
   140013dba:	rex.WX call FWORD PTR [rdx+0x55]
   140013dbe:	rex.WX inc QWORD PTR [rdx+0x41]
   140013dc2:	cmp    edi,edi
   140013dc4:	rex.X
   140013dc5:	cmp    r15d,edi
   140013dc8:	rex.X cmp al,0x39
   140013dcb:	inc    DWORD PTR [rdx+0x3c]
   140013dce:	cmp    edi,edi
   140013dd0:	test   BYTE PTR [rbp+0x39],ah
   140013dd3:	push   rdi
   140013dd5:	xlat   BYTE PTR ds:[rbx]
   140013dd6:	movsxd edi,edi
   140013dd8:	test   ebx,0xaaefff52
   140013dde:	sub    edi,edi
   140013de0:	out    0x9a,eax
   140013de2:	or     bh,bh
   140013de4:	ficomp WORD PTR [rdx-0x6d2100f0]
   140013dea:	adc    bh,bh
   140013dec:	(bad)  
   140013ded:	mov    dl,BYTE PTR [rax]
   140013def:	jmp    rdi
   140013df1:	xchg   edx,eax
   140013df2:	adc    bh,bh
   140013df4:	mov    ch,0x71
   140013df6:	adc    bh,dh
	...
   140013e10:	xchg   esp,eax
   140013e11:	xchg   edx,eax
   140013e12:	xchg   esp,eax
   140013e13:	sbb    BYTE PTR [rsi+rdx*4-0x1c10086c],dl
   140013e1a:	out    0xff,eax
   140013e1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e1d:	movabs ds:0x9ea5ffd6d3d6ffa5,al
   140013e26:	pushf  
   140013e27:	call   rsi
   140013e29:	rcl    esi,cl
   140013e2b:	jmp    FWORD PTR [rbp-0x52005256]
   140013e31:	stos   BYTE PTR es:[rdi],al
   140013e32:	lods   eax,DWORD PTR ds:[rsi]
   140013e33:	jmp    FWORD PTR [rbp+0x5affadaa]
   140013e39:	push   rbp
   140013e3a:	rex.WX (bad) 
   140013e3c:	out    dx,eax
   140013e3d:	out    dx,eax
   140013e3e:	out    dx,eax
   140013e3f:	dec    DWORD PTR [rdx+0x41]
   140013e42:	cmp    edi,edi
   140013e44:	lods   eax,DWORD PTR ds:[rsi]
   140013e45:	xchg   edx,eax
   140013e46:	movsxd edi,edi
   140013e48:	ficomp WORD PTR [rdx-0x755200ae]
   140013e4e:	push   rdx
   140013e4f:	jmp    FWORD PTR [rbp-0x4a00ad7a]
   140013e55:	xchg   BYTE PTR [rdx-0x1],al
   140013e58:	test   ebx,0xcfffff5a
   140013e5e:	movsxd edi,edi
   140013e60:	idiv   DWORD PTR [rsi-0x4d0800b6]
   140013e66:	sub    edi,edi
   140013e68:	out    dx,eax
   140013e69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013e6a:	sbb    bh,bh
   140013e6c:	out    0xa2,eax
   140013e6e:	sbb    bh,bh
   140013e70:	mul    DWORD PTR [rdx+0x71adff10]
   140013e76:	adc    bh,dh
   140013e78:	add    BYTE PTR [rax],al
   140013e7a:	add    BYTE PTR [rax],al
   140013e7c:	out    0x9e,eax
   140013e7e:	rex.WX cmp QWORD PTR [rbx+0x59],rdi
   140013e82:	xor    DWORD PTR [rbp+0x10000000],esi
	...
   140013e90:	xchg   esp,eax
   140013e91:	xchg   edx,eax
   140013e92:	xchg   esp,eax
   140013e93:	sbb    BYTE PTR [rsi+rdx*4-0x1c100864],dl
   140013e9a:	out    0xff,eax
   140013e9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e9d:	sahf   
   140013e9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e9f:	call   rsi
   140013ea1:	rcl    esi,cl
   140013ea3:	jmp    QWORD PTR [rbp-0x29006362]
   140013ea9:	rcl    esi,cl
   140013eab:	jmp    FWORD PTR [rbp-0x52005252]
   140013eb1:	scas   al,BYTE PTR es:[rdi]
   140013eb2:	lods   eax,DWORD PTR ds:[rsi]
   140013eb3:	jmp    FWORD PTR [rbp+0x5affadae]
   140013eb9:	push   rbp
   140013eba:	rex.WX call FWORD PTR [rdx+0x55]
   140013ebe:	rex.WX dec QWORD PTR [rdx+0x45]
   140013ec2:	cmp    edi,edi
   140013ec4:	lods   eax,DWORD PTR ds:[rsi]
   140013ec5:	mov    dl,0x7b
   140013ec7:	jmp    rdi
   140013ec9:	mov    esi,0xa2e7ff5a
   140013ece:	push   rdx
   140013ecf:	jmp    rdi
   140013ed1:	movabs ds:0x6d94ff42556bff52,al
   140013eda:	rex.WX inc rsi
   140013edd:	xchg   esi,eax
   140013ede:	push   rdx
   140013edf:	jmp    rdi
   140013ee1:	mov    dh,0x52
   140013ee3:	(bad)  
   140013ee4:	out    dx,eax
   140013ee5:	mov    edx,0xb2e7ff5a
   140013eea:	rex.WX inc rsi
   140013eed:	mov    dh,BYTE PTR [rcx]
   140013eef:	(bad)  
   140013ef0:	out    0xa2,eax
   140013ef2:	xor    edi,esi
   140013ef4:	mov    ebp,0xff1082
   140013ef9:	add    BYTE PTR [rax],al
   140013efb:	add    dh,cl
   140013efd:	jge    0x140013f28
   140013eff:	adc    bh,bh
   140013f01:	mov    esi,0x6d94ff63
   140013f06:	rex.X (bad) 
	...
   140013f10:	xchg   esp,eax
   140013f11:	xchg   edx,eax
   140013f12:	xchg   esp,eax
   140013f13:	sbb    BYTE PTR [rsi+rdx*4-0x24180864],dl
   140013f1a:	fdivp  st(7),st
   140013f1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f1d:	sahf   
   140013f1e:	pushf  
   140013f1f:	inc    esi
   140013f21:	ret    
   140013f22:	(bad)  
   140013f23:	call   FWORD PTR [rsi+rbx*4-0x2c290064]
   140013f2a:	(bad)  
   140013f2b:	push   QWORD PTR [rbp-0x4a004a4e]
   140013f31:	mov    dl,0xb5
   140013f33:	push   QWORD PTR [rbp+0x5affb5b6]
   140013f39:	push   rbp
   140013f3a:	rex.WX push rdi
   140013f3d:	repz idiv edi
   140013f40:	rex.WX
   140013f41:	rex.RB
   140013f42:	rex.X (bad) 
   140013f44:	out    dx,eax
   140013f45:	scas   al,BYTE PTR es:[rdi]
   140013f46:	rex.WX (bad) 
   140013f48:	out    dx,eax
   140013f49:	scas   al,BYTE PTR es:[rdi]
   140013f4a:	rex.WX jmp rdi
   140013f4d:	mov    dh,0x4a
   140013f4f:	jmp    rdi
   140013f51:	mov    dh,0x4a
   140013f53:	(bad)  
   140013f54:	out    dx,eax
   140013f55:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f56:	rex.WX jmp rdi
   140013f59:	movabs ds:0x4552ff4a9ee7ff42,al
   140013f62:	xor    edi,edi
   140013f64:	out    0xdb,eax
   140013f66:	(bad)  
   140013f67:	jmp    FWORD PTR [rbx+0x5d]
   140013f6a:	rex.WX inc QWORD PTR [rax]
   140013f6d:	add    BYTE PTR [rax],al
   140013f6f:	add    dh,dl
   140013f71:	xchg   esi,eax
   140013f72:	xor    edi,esp
   140013f74:	(bad)  
   140013f75:	(bad)  
   140013f76:	sbb    bh,bh
	...
   140013f80:	(bad)  
   140013f81:	xchg   edx,eax
   140013f82:	rex.WX mov rdi,?
   140013f85:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f86:	cmp    edi,edi
   140013f88:	sbb    BYTE PTR [rax+rdx*1],dl
   140013f8b:	rex.X add BYTE PTR [rax],al
   140013f8e:	add    BYTE PTR [rax],al
   140013f90:	xchg   esp,eax
   140013f91:	xchg   edx,eax
   140013f92:	xchg   esp,eax
   140013f93:	sbb    BYTE PTR [rsi+rdx*4-0x2c21086c],dl
   140013f9a:	(bad)  
   140013f9b:	call   FWORD PTR [rsi+rbx*4-0x41390064]
   140013fa2:	mov    ebp,0x9c9e9cff
   140013fa7:	call   rsi
   140013fa9:	rcl    esi,cl
   140013fab:	(bad)  
   140013fac:	mov    ebp,0xbdffbdba
   140013fb1:	mov    edx,0xbabdffbd
   140013fb6:	mov    ebp,0x4a555aff
   140013fbb:	call   FWORD PTR [rdx+0x55]
   140013fbe:	rex.WX dec QWORD PTR [rdx+0x45]
   140013fc2:	rex.X (bad) 
   140013fc4:	out    dx,eax
   140013fc5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013fc6:	cmp    edi,edi
   140013fc8:	out    dx,eax
   140013fc9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013fca:	cmp    edi,edi
   140013fcc:	out    dx,eax
   140013fcd:	stos   BYTE PTR es:[rdi],al
   140013fce:	cmp    edi,edi
   140013fd0:	out    dx,eax
   140013fd1:	stos   BYTE PTR es:[rdi],al
   140013fd2:	cmp    edi,edi
   140013fd4:	out    dx,eax
   140013fd5:	scas   al,BYTE PTR es:[rdi]
   140013fd6:	rex.X (bad) 
   140013fd8:	out    dx,eax
   140013fd9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013fda:	rex.X call rsi
   140013fdd:	movabs ds:0x555aff313842ff5a,al
   140013fe6:	rex.WX call FWORD PTR [rdx+0x55]
   140013fea:	rex.WX inc QWORD PTR [rax]
   140013fed:	add    BYTE PTR [rax],al
   140013fef:	add    dh,bl
   140013ff1:	sahf   
   140013ff2:	xor    edi,ebp
   140013ff4:	(bad)  
   140013ff5:	sahf   
   140013ff6:	sbb    bh,bh
	...
   140014004:	jmp    QWORD PTR [rdx+0x455aff21]
   14001400a:	sub    DWORD PTR [rax+rax*1-0x6c000000],ebx
   140014011:	xchg   edx,eax
   140014012:	xchg   esp,eax
   140014013:	sbb    BYTE PTR [rsi+rdx*4-0x3429086c],dl
   14001401a:	(bad)  
   14001401b:	call   FWORD PTR [rdx+rbx*4-0x45420064]
   140014022:	mov    ch,0xff
   140014024:	pushf  
   140014025:	sahf   
   140014026:	pushf  
   140014027:	call   rsi
   140014029:	rcl    esi,cl
   14001402b:	(bad)  
   14001402c:	mov    ebp,0xbdffbdbe
   140014031:	mov    esi,0xbebdffbd
   140014036:	mov    ebp,0x4a555aff
   14001403b:	push   rdi
   14001403d:	repz idiv edi
   140014040:	push   rdx
   140014041:	rex.WB
   140014042:	rex.X (bad) 
   140014044:	out    dx,eax
   140014045:	sahf   
   140014046:	xor    edi,edi
   140014048:	out    dx,eax
   140014049:	movabs ds:0x79bdff737db5ff31,al
   140014052:	jae    0x140014053
   140014054:	out    dx,eax
   140014055:	scas   al,BYTE PTR es:[rdi]
   140014056:	rex.X jmp FWORD PTR [rbp+0x5aff3182]
   14001405d:	push   rbp
   14001405e:	push   rdx
   14001405f:	inc    DWORD PTR [rdx+0x3c]
   140014062:	xor    edi,edi
   140014064:	out    dx,eax
   140014065:	out    dx,eax
   140014066:	out    dx,eax
   140014067:	call   FWORD PTR [rdx+0x55]
   14001406a:	rex.WX inc QWORD PTR [rax]
   14001406d:	add    BYTE PTR [rax],al
   14001406f:	add    dh,bl
   140014071:	sahf   
   140014072:	xor    edi,ebp
   140014074:	(bad)  
   140014075:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014076:	and    edi,edi
	...
   140014084:	mul    DWORD PTR [rdx+0x4163ff18]
   14001408a:	or     dh,cl
   14001408c:	add    BYTE PTR [rax],al
   14001408e:	add    BYTE PTR [rax],al
   140014090:	xchg   esp,eax
   140014091:	xchg   edx,eax
   140014092:	xchg   esp,eax
   140014093:	sbb    BYTE PTR [rsi+rdx*4-0x3c31086c],dl
   14001409a:	(bad)  
   14001409b:	call   FWORD PTR [rdx+rbx*4-0x49420064]
   1400140a2:	mov    ch,0xff
   1400140a4:	pushf  
   1400140a5:	sahf   
   1400140a6:	pushf  
   1400140a7:	call   rsi
   1400140a9:	xlat   BYTE PTR ds:[rbx]
   1400140aa:	(bad)  
   1400140ab:	(bad)  
   1400140ac:	mov    ebp,0xc6ffbdbe
   1400140b1:	ret    
   1400140b2:	(bad)  
   1400140b3:	inc    esi
   1400140b5:	ret    
   1400140b6:	(bad)  
   1400140b7:	call   FWORD PTR [rdx+0x55]
   1400140ba:	rex.WX call FWORD PTR [rdx+0x55]
   1400140be:	rex.WX call QWORD PTR [rdx+0x4d]
   1400140c2:	rex.X (bad) 
   1400140c4:	out    dx,eax
   1400140c5:	stos   BYTE PTR es:[rdi],al
   1400140c6:	sub    edi,edi
   1400140c8:	out    dx,eax
   1400140c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400140ca:	sub    edi,edi
   1400140cc:	out    0x96,eax
   1400140ce:	push   rdx
   1400140cf:	jmp    rdi
   1400140d1:	xchg   edx,eax
   1400140d2:	push   rdx
   1400140d3:	call   QWORD PTR [rbp+rbp*2+0x554aff52]
   1400140da:	pop    rdx
   1400140db:	dec    DWORD PTR [rdx+0x41]
   1400140de:	jae    0x1400140df
   1400140e0:	rex.X cmp al,0x39
   1400140e3:	call   FWORD PTR [rdx+0x55]
   1400140e6:	rex.WX call FWORD PTR [rdx+0x55]
   1400140ea:	rex.WX inc QWORD PTR [rax]
   1400140ed:	add    BYTE PTR [rax],al
   1400140ef:	add    dh,bl
   1400140f1:	sahf   
   1400140f2:	cmp    edi,ebp
   1400140f4:	(bad)  
   1400140f5:	movabs ds:0xff21,al
   1400140fe:	add    BYTE PTR [rax],al
   140014100:	add    BYTE PTR [rax],al
   140014102:	add    BYTE PTR [rax],al
   140014104:	out    dx,eax
   140014105:	movabs ds:0xd608416bf718,al
   14001410e:	add    BYTE PTR [rax],al
   140014110:	xchg   esp,eax
   140014111:	xchg   edx,eax
   140014112:	xchg   esp,eax
   140014113:	sbb    BYTE PTR [rsi+rdx*4-0x4142106c],dl
   14001411a:	mov    ebp,0x949e9cff
   14001411f:	(bad)  
   140014120:	mov    ebp,0xa5ffbdbe
   140014125:	sahf   
   140014126:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014127:	call   rsi
   140014129:	xlat   BYTE PTR ds:[rbx]
   14001412a:	(bad)  
   14001412b:	inc    esi
   14001412d:	ret    
   14001412e:	(bad)  
   14001412f:	inc    esi
   140014131:	ret    
   140014132:	(bad)  
   140014133:	inc    esi
   140014135:	mov    esi,0x4a555aff
   14001413b:	push   rdi
   14001413d:	div    edi
   14001413f:	call   QWORD PTR [rdx+0x4d]
   140014142:	rex.X (bad) 
   140014144:	cmp    DWORD PTR [rax],edi
   140014146:	xor    edi,edi
   140014148:	cmp    DWORD PTR [rax],edi
   14001414a:	xor    edi,edi
   14001414c:	cmp    DWORD PTR [rcx+rsi*1],esi
   14001414f:	(bad)  
   140014150:	cmp    DWORD PTR [rcx+rsi*1],esi
   140014153:	(bad)  
   140014154:	cmp    DWORD PTR [rcx+rbp*1],esi
   140014157:	(bad)  
   140014158:	cmp    DWORD PTR [rax],esi
   14001415a:	sub    edi,edi
   14001415c:	xor    DWORD PTR [rax],esi
   14001415e:	sub    edi,edi
   140014160:	rex.X
   140014161:	cmp    r15d,edi
   140014164:	out    dx,eax
   140014165:	out    dx,eax
   140014166:	out    dx,eax
   140014167:	call   FWORD PTR [rdx+0x55]
   14001416a:	rex.WX inc QWORD PTR [rax]
   14001416d:	add    BYTE PTR [rax],al
   14001416f:	add    dh,bl
   140014171:	sahf   
   140014172:	cmp    edi,ebp
   140014174:	(bad)  
   140014175:	sahf   
   140014176:	sub    edi,edi
	...
   140014184:	push   QWORD PTR [rsi+0x455aff18]
   14001418a:	or     dh,al
   14001418c:	add    BYTE PTR [rax],al
   14001418e:	add    BYTE PTR [rax],al
   140014190:	xchg   esp,eax
   140014191:	xchg   edx,eax
   140014192:	xchg   esp,eax
   140014193:	sbb    BYTE PTR [rdx+rdx*4-0x5584106c],dl
   14001419a:	xchg   esp,eax
   14001419b:	inc    DWORD PTR [rax]
   14001419d:	out    dx,eax
   14001419e:	jnp    0x14001419f
   1400141a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141a1:	ret    
   1400141a2:	mov    ch,0xff
   1400141a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141a5:	sahf   
   1400141a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141a7:	call   rsi
   1400141a9:	xlat   BYTE PTR ds:[rbx]
   1400141aa:	(bad)  
   1400141ab:	inc    esi
   1400141ad:	mov    esi,0xc6c7c6ff
   1400141b3:	dec    esi
   1400141b5:	retf   
   1400141b6:	(bad)  
   1400141b7:	call   FWORD PTR [rdx+0x55]
   1400141ba:	rex.WX call FWORD PTR [rdx+0x55]
   1400141be:	rex.WX call QWORD PTR [rdx+0x4d]
   1400141c2:	rex.WX push QWORD PTR [rbx+0x4d]
   1400141c6:	(bad)  
   1400141c7:	dec    DWORD PTR [rdx+0x34]
   1400141ca:	(bad)  
   1400141cb:	dec    DWORD PTR [rdx+rdx*4-0x6d730085]
   1400141d2:	jnp    0x1400141d3
   1400141d4:	imul   edx,DWORD PTR [rdx+0x6d31ff84],0xffffffb5
   1400141db:	push   QWORD PTR [rcx]
   1400141dd:	(bad)  
   1400141de:	(bad)  
   1400141df:	inc    DWORD PTR [rdx+0x41]
   1400141e2:	cmp    edi,edi
   1400141e4:	pop    rdx
   1400141e5:	push   rbp
   1400141e6:	rex.WX call FWORD PTR [rdx+0x55]
   1400141ea:	rex.WX inc QWORD PTR [rax]
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    dh,bl
   1400141f1:	sahf   
   1400141f2:	cmp    edi,ebp
   1400141f4:	(bad)  
   1400141f5:	sahf   
   1400141f6:	sub    edi,edi
	...
   140014200:	cmp    DWORD PTR [rax],esp
   140014202:	adc    BYTE PTR [rdx-0x1],bl
   140014205:	retf   
   140014206:	adc    bh,bh
   140014208:	cmp    DWORD PTR [rax],ebp
   14001420a:	add    BYTE PTR [rbx+0x0],dh
   14001420d:	add    BYTE PTR [rax],al
   14001420f:	add    BYTE PTR [rdx+rdx*4-0x6d73f76c],dl
   140014216:	xchg   esp,eax
   140014217:	test   DWORD PTR [rax],0xff7bef
   14001421d:	mov    esi,0xba9cff5a
   140014222:	lods   eax,DWORD PTR ds:[rsi]
   140014223:	call   FWORD PTR [rsi+rbx*4-0x2829005b]
   14001422a:	(bad)  
   14001422b:	dec    esi
   14001422d:	retf   
   14001422e:	(bad)  
   14001422f:	dec    esi
   140014231:	retf   
   140014232:	(bad)  
   140014233:	dec    esi
   140014235:	retf   
   140014236:	(bad)  
   140014237:	call   FWORD PTR [rdx+0x55]
   14001423a:	rex.WX push rdi
   14001423d:	div    edi
   14001423f:	call   FWORD PTR [rdx+0x51]
   140014242:	rex.WX push QWORD PTR [rbp-0x6b008c83]
   140014249:	pop    rbp
   14001424a:	jae    0x14001424b
   14001424c:	(bad)  
   14001424d:	mov    ds,WORD PTR [rdx-0x1]
   140014250:	(bad)  
   140014251:	mov    ds,WORD PTR [rdx-0x1]
   140014254:	push   rdx
   140014255:	push   rbp
   140014256:	pop    rdx
   140014257:	call   FWORD PTR [rax]
   140014259:	jns    0x14001424a
   14001425b:	jmp    FWORD PTR [rcx]
   14001425d:	jne    0x140014235
   14001425f:	dec    DWORD PTR [rdx+0x41]
   140014262:	cmp    edi,edi
   140014264:	out    dx,eax
   140014265:	out    dx,eax
   140014266:	out    dx,eax
   140014267:	call   FWORD PTR [rdx+0x55]
   14001426a:	rex.WX inc QWORD PTR [rax]
   14001426d:	add    BYTE PTR [rax],al
   14001426f:	add    dh,bl
   140014271:	sahf   
   140014272:	cmp    edi,ebp
   140014274:	(bad)  
   140014275:	xchg   esi,eax
   140014276:	sub    edi,edi
	...
   140014280:	(bad)  
   140014281:	mov    ss,WORD PTR [rax]
   140014283:	out    0xff,eax
   140014285:	(bad)  
   140014286:	sbb    bh,bh
   140014288:	sbb    BYTE PTR [rax+rcx*1],al
   14001428b:	xor    DWORD PTR [rax],eax
   14001428d:	add    BYTE PTR [rax],al
   14001428f:	add    BYTE PTR [rax],al
   140014291:	add    BYTE PTR [rax],al
   140014293:	add    BYTE PTR [rdx+rdx*4+0x7142ef94],dl
   14001429a:	pop    rdx
   14001429b:	call   FWORD PTR [rax]
   14001429d:	cmp    BYTE PTR [rax],bl
   14001429f:	call   QWORD PTR [rsi+rcx*4-0x615a0074]
   1400142a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400142a7:	call   rsi
   1400142a9:	xlat   BYTE PTR ds:[rbx]
   1400142aa:	fdivp  st(7),st
   1400142ac:	(bad)  
   1400142ad:	iret   
   1400142ae:	(bad)  
   1400142af:	dec    esi
   1400142b1:	iret   
   1400142b2:	(bad)  
   1400142b3:	dec    esi
   1400142b5:	iret   
   1400142b6:	(bad)  
   1400142b7:	call   FWORD PTR [rdx+0x55]
   1400142ba:	rex.WX call FWORD PTR [rdx+0x55]
   1400142be:	rex.WX call FWORD PTR [rdx+0x51]
   1400142c2:	rex.WX call rsi
   1400142c5:	(bad)  
   1400142c6:	jae    0x1400142c7
   1400142c8:	ficom  WORD PTR [rsi-0x714a009d]
   1400142ce:	movsxd edi,edi
   1400142d0:	mov    ch,0x8e
   1400142d2:	movsxd edi,edi
   1400142d4:	rex.X
   1400142d5:	rex.WB
   1400142d6:	rex.WX (bad) 
   1400142d8:	cmp    DWORD PTR [rdx-0x41ad0022],esi
   1400142de:	out    0xff,eax
   1400142e0:	rex.WX
   1400142e1:	cmp    r15d,r15d
   1400142e4:	pop    rdx
   1400142e5:	push   rbp
   1400142e6:	rex.WX call FWORD PTR [rdx+0x55]
   1400142ea:	rex.WX inc QWORD PTR [rax]
   1400142ed:	add    BYTE PTR [rax],al
   1400142ef:	add    dh,bl
   1400142f1:	sahf   
   1400142f2:	rex.X out dx,eax
   1400142f4:	mov    ebp,0xf7298a
   1400142f9:	add    BYTE PTR [rax],al
   1400142fb:	xor    esi,ecx
   1400142fd:	jge    0x140014317
   1400142ff:	(bad)  
   140014300:	call   rdi
   140014302:	xor    edi,edi
   140014304:	pushf  
   140014305:	jne    0x140014340
   140014307:	(bad)  
	...
   140014314:	xchg   esp,eax
   140014315:	xchg   edx,eax
   140014316:	xchg   esp,eax
   140014317:	out    dx,eax
   140014318:	pop    rdx
   140014319:	push   rcx
   14001431a:	push   rdx
   14001431b:	jmp    FWORD PTR [rcx]
   14001431d:	sbb    al,0x10
   14001431f:	call   QWORD PTR [rsi+rcx*4-0x5d5a0074]
   140014326:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014327:	call   rsi
   140014329:	xlat   BYTE PTR ds:[rbx]
   14001432a:	fdivp  st(7),st
   14001432c:	(bad)  
   14001432d:	rcl    esi,cl
   14001432f:	dec    esi
   140014331:	iret   
   140014332:	(bad)  
   140014333:	call   rsi
   140014335:	rcl    esi,cl
   140014337:	call   FWORD PTR [rdx+0x55]
   14001433a:	rex.WX push rdi
   14001433d:	div    edi
   14001433f:	call   FWORD PTR [rdx+0x55]
   140014342:	rex.WX push QWORD PTR [rbp-0x21005a3d]
   140014349:	iret   
   14001434a:	mov    edi,?
   14001434c:	faddp  st(7),st
   14001434e:	test   bh,bh
   140014350:	faddp  st(7),st
   140014352:	test   bh,bh
   140014354:	jnp    0x1400143c7
   140014356:	jae    0x140014357
   140014358:	imul   esi,DWORD PTR [rbp-0x74],0xffffffff
   14001435c:	jae    0x1400142e0
   14001435e:	(bad)  
   14001435f:	dec    DWORD PTR [rdx+0x45]
   140014362:	rex.X (bad) 
   140014364:	out    dx,eax
   140014365:	out    dx,eax
   140014366:	out    dx,eax
   140014367:	call   FWORD PTR [rdx+0x55]
   14001436a:	rex.WX inc QWORD PTR [rax]
   14001436d:	add    BYTE PTR [rax],al
   14001436f:	add    dh,dl
   140014371:	(bad)  
   140014372:	push   rdx
   140014373:	out    0xff,eax
   140014375:	ret    
   140014376:	imul   edi,edi,0xffffffe7
   140014379:	stos   BYTE PTR es:[rdi],al
   14001437a:	rex.WX (bad) 
   14001437c:	jmp    rbx
   14001437e:	movsxd edi,edi
   140014380:	test   ebx,0x1431ff52
   140014386:	or     BYTE PTR [rcx],ah
	...
   140014394:	xchg   esp,eax
   140014395:	xchg   edx,eax
   140014396:	xchg   esp,eax
   140014397:	out    dx,eax
   140014398:	pop    rdx
   140014399:	pop    rcx
   14001439a:	pop    rdx
   14001439b:	jmp    QWORD PTR [rbx+0x59]
   14001439e:	push   rdx
   14001439f:	jmp    QWORD PTR [rbp-0x63006366]
   1400143a5:	(bad)  
   1400143a6:	pushf  
   1400143a7:	jmp    rdi
   1400143a9:	jrcxz  0x140014392
   1400143ab:	call   rsi
   1400143ad:	rcl    esi,cl
   1400143af:	call   rsi
   1400143b1:	rcl    esi,cl
   1400143b3:	call   rsi
   1400143b5:	rcl    esi,cl
   1400143b7:	call   FWORD PTR [rdx+0x55]
   1400143ba:	rex.WX call FWORD PTR [rdx+0x55]
   1400143be:	rex.WX call FWORD PTR [rdx+0x55]
   1400143c2:	rex.WX (bad) 
   1400143c4:	faddp  st(3),st
   1400143c6:	jnp    0x1400143c7
   1400143c8:	fmulp  st(7),st
   1400143ca:	jnp    0x1400143cb
   1400143cc:	fmulp  st(3),st
   1400143ce:	jnp    0x1400143cf
   1400143d0:	fmulp  st(7),st
   1400143d2:	jae    0x1400143d3
   1400143d4:	fidivr WORD PTR [rdx-0x6139008d]
   1400143da:	imul   edi,edi,0xffffffce
   1400143dd:	movabs ds:0x555aff42454aff7b,al
   1400143e6:	rex.WX call FWORD PTR [rdx+0x55]
   1400143ea:	rex.WX inc QWORD PTR [rax]
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	add    dh,cl
   1400143f1:	xchg   edx,eax
   1400143f2:	rex.WX out 0xff,eax
   1400143f5:	mov    edx,0xcfffff6b
   1400143fa:	movsxd edi,edi
   1400143fc:	out    dx,eax
   1400143fd:	mov    edx,0x79adf752
   140014402:	rex.WX push rdx
	...
   140014414:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014415:	movabs ds:0x868cff848284a5a5,al
   14001441e:	test   bh,bh
   140014420:	pushf  
   140014421:	(bad)  
   140014422:	pushf  
   140014423:	jmp    QWORD PTR [rbp-0x800525a]
   140014429:	div    edi
   14001442b:	jmp    rdi
   14001442d:	out    0xe7,eax
   14001442f:	(bad)  
   140014430:	(bad)  
   140014432:	fdivp  st(7),st
   140014434:	(bad)  
   140014435:	xlat   BYTE PTR ds:[rbx]
   140014436:	(bad)  
   140014437:	call   FWORD PTR [rdx+0x55]
   14001443a:	rex.WX push rdi
   14001443d:	div    edi
   14001443f:	call   FWORD PTR [rdx+0x55]
   140014442:	rex.WX jmp rdi
   140014445:	iret   
   140014446:	movsxd edi,edi
   140014448:	out    0xcb,eax
   14001444a:	imul   edi,edi,0xffffffe7
   14001444d:	retf   
   14001444e:	imul   edi,edi,0xffffffe7
   140014451:	retf   
   140014452:	imul   edi,edi,0xffffffe7
   140014455:	iret   
   140014456:	imul   edi,edi,0xffffffe7
   140014459:	retf   
   14001445a:	imul   edi,edi,0xffffffde
   14001445d:	mov    dh,0x73
   14001445f:	call   QWORD PTR [rdx+0x49]
   140014462:	rex.X (bad) 
   140014464:	out    dx,eax
   140014465:	out    dx,eax
   140014466:	out    dx,eax
   140014467:	call   FWORD PTR [rdx+0x55]
   14001446a:	rex.WX inc QWORD PTR [rax]
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    dh,cl
   140014471:	xchg   edx,eax
   140014472:	rex.X out 0xff,eax
   140014475:	iret   
   140014476:	imul   edi,edi,0xfffffff7
   140014479:	retf   
   14001447a:	jae    0x14001447b
   14001447c:	mov    BYTE PTR [rsi+0x4a39],0x0
	...
   140014493:	add    BYTE PTR [rdx+rcx*4-0x494ad674],cl
   14001449a:	mov    ch,0xbd
   14001449c:	mov    ch,0xb6
   14001449e:	mov    ch,0xff
   1400144a0:	mov    ch,0xba
   1400144a2:	mov    ebp,0xdedfdeff
   1400144a7:	(bad)  
   1400144a8:	(bad)  
   1400144a9:	(bad)  
   1400144aa:	(bad)  
   1400144ab:	(bad)  
   1400144ac:	(bad)  
   1400144ad:	(bad)  
   1400144ae:	(bad)  
   1400144af:	(bad)  
   1400144b0:	(bad)  
   1400144b1:	(bad)  
   1400144b2:	(bad)  
   1400144b3:	(bad)  
   1400144b4:	(bad)  
   1400144b5:	sti    
   1400144b6:	(bad)  
   1400144b7:	call   FWORD PTR [rdx+0x55]
   1400144ba:	rex.WX call FWORD PTR [rdx+0x55]
   1400144be:	rex.WX call FWORD PTR [rdx+0x55]
   1400144c2:	rex.WX call FWORD PTR [rdx+0x55]
   1400144c6:	rex.WX call FWORD PTR [rdx+0x55]
   1400144ca:	rex.WX call FWORD PTR [rdx+0x55]
   1400144ce:	rex.WX call FWORD PTR [rdx+0x51]
   1400144d2:	rex.WX call QWORD PTR [rdx+0x51]
   1400144d6:	rex.WX call QWORD PTR [rdx+0x4d]
   1400144da:	rex.X call QWORD PTR [rdx+0x4d]
   1400144de:	rex.X call QWORD PTR [rdx+0x4d]
   1400144e2:	rex.X call FWORD PTR [rdx+0x55]
   1400144e6:	rex.WX call FWORD PTR [rdx+0x55]
   1400144ea:	rex.WX inc QWORD PTR [rax]
   1400144ed:	add    BYTE PTR [rax],al
   1400144ef:	add    dh,dl
   1400144f1:	xchg   esi,eax
   1400144f2:	rex.WX out dx,eax
   1400144f4:	(bad)  
   1400144f5:	fbstp  TBYTE PTR [rbx-0x1]
   1400144f8:	rex.X sub al,0x10
   1400144fb:	imul   eax,DWORD PTR [rax],0x0
	...
   14001451a:	add    BYTE PTR [rax],al
   14001451c:	mov    ebp,0xb531c6c3
   140014521:	mov    dh,0xb5
   140014523:	test   BYTE PTR [rbp-0x4a184246],bh
   140014529:	mov    edx,0xc7c6ffbd
   14001452e:	(bad)  
   14001452f:	jmp    rdi
   140014531:	jrcxz  0x14001451a
   140014533:	(bad)  
   140014534:	(bad)  
   140014535:	sti    
   140014536:	(bad)  
   140014537:	(bad)  
   140014538:	(bad)  
   140014539:	(bad)  
   14001453a:	(bad)  
   14001453b:	(bad)  
   14001453c:	(bad)  
   14001453d:	(bad)  
   14001453e:	(bad)  
   14001453f:	(bad)  
   140014540:	(bad)  
   140014541:	sti    
   140014542:	(bad)  
   140014543:	push   rdi
   140014545:	div    edi
   140014547:	(bad)  
   140014548:	out    dx,eax
   140014549:	jmp    0x14001453a
   14001454b:	jmp    rdi
   14001454d:	jrcxz  0x140014536
   14001454f:	jmp    rdi
   140014551:	jrcxz  0x14001453a
   140014553:	jmp    rdi
   140014555:	jrcxz  0x14001453e
   140014557:	jmp    rdi
   140014559:	jrcxz  0x140014542
   14001455b:	jmp    rdi
   14001455d:	out    0xe7,eax
   14001455f:	call   rsi
   140014561:	xlat   BYTE PTR ds:[rbx]
   140014562:	(bad)  
   140014563:	call   FWORD PTR [rsi+rbx*4+0xe7a5]
   14001456a:	add    BYTE PTR [rax],al
   14001456c:	add    BYTE PTR [rax],al
   14001456e:	add    BYTE PTR [rax],al
   140014570:	out    0xaa,eax
   140014572:	push   rdx
   140014573:	idiv   DWORD PTR [rbp+0xde3986]
	...
   1400145a5:	add    BYTE PTR [rax],al
   1400145a7:	add    BYTE PTR [rbp-0x4ae74a4a],dh
   1400145ad:	mov    edx,0xb6b594bd
   1400145b2:	mov    ch,0xd6
   1400145b4:	mov    ch,0xba
   1400145b6:	mov    ebp,0xc6c7c6f7
   1400145bb:	(bad)  
   1400145bc:	(bad)  
   1400145be:	fdivp  st(7),st
   1400145c0:	(bad)  
   1400145c1:	(bad)  
   1400145c2:	(bad)  
   1400145c3:	(bad)  
   1400145c4:	(bad)  
   1400145c5:	(bad)  
   1400145c6:	(bad)  
   1400145c7:	(bad)  
   1400145c8:	(bad)  
   1400145c9:	(bad)  
   1400145ca:	(bad)  
   1400145cb:	(bad)  
   1400145cc:	(bad)  
   1400145cd:	(bad)  
   1400145ce:	(bad)  
   1400145cf:	push   rdi
   1400145d1:	div    edi
   1400145d3:	(bad)  
   1400145d4:	out    dx,eax
   1400145d5:	out    dx,eax
   1400145d6:	out    dx,eax
   1400145d7:	(bad)  
   1400145d8:	out    dx,eax
   1400145d9:	jmp    0x1400145ca
   1400145db:	jmp    rdi
   1400145dd:	out    0xe7,eax
   1400145df:	call   rsi
   1400145e1:	xlat   BYTE PTR ds:[rbx]
   1400145e2:	(bad)  
   1400145e3:	jmp    QWORD PTR [rbp+0xe7a5a2]
   1400145e9:	add    BYTE PTR [rax],al
   1400145eb:	add    BYTE PTR [rax],al
   1400145ed:	add    BYTE PTR [rax],al
   1400145ef:	add    dh,dl
   1400145f1:	(bad)  
   1400145f2:	rex.WX (bad) 
   1400145f4:	mov    ebp,0x73317d
	...
   140014631:	add    BYTE PTR [rax],al
   140014633:	add    BYTE PTR [rbp-0x4ad64246],bh
   140014639:	mov    dh,0xb5
   14001463b:	jnp    0x1400145f2
   14001463d:	mov    dh,0xb5
   14001463f:	(bad)  
   140014640:	mov    ch,0xba
   140014642:	mov    ebp,0xc6c3c6f7
   140014647:	(bad)  
   140014648:	(bad)  
   14001464a:	fdivp  st(7),st
   14001464c:	div    edi
   14001464e:	idiv   edi
   140014650:	(bad)  
   140014651:	(bad)  
   140014652:	(bad)  
   140014653:	(bad)  
   140014654:	(bad)  
   140014655:	(bad)  
   140014656:	(bad)  
   140014657:	(bad)  
   140014658:	(bad)  
   140014659:	(bad)  
   14001465a:	(bad)  
   14001465b:	(bad)  
   14001465c:	(bad)  
   14001465d:	(bad)  
   14001465e:	(bad)  
   14001465f:	dec    esi
   140014661:	ror    esi,cl
   140014663:	push   QWORD PTR [rbp+0xdeb5b6]
	...
   1400146bd:	add    BYTE PTR [rax],al
   1400146bf:	add    BYTE PTR [rbp-0x4aef4a4a],dh
   1400146c5:	mov    dh,0xb5
   1400146c7:	test   BYTE PTR [rbp-0x4a294a4a],dh
   1400146cd:	mov    dh,0xb5
   1400146cf:	out    dx,eax
   1400146d0:	mov    bl,0xc6
   1400146d3:	(bad)  
   1400146d4:	(bad)  
   1400146d6:	fdivp  st(7),st
   1400146d8:	out    0xe3,eax
   1400146da:	out    0xff,eax
   1400146dc:	(bad)  
   1400146dd:	retf   
   1400146de:	(bad)  
   1400146df:	(bad)  
   1400146e0:	mov    ebp,0xe7ffbdbe
   1400146e5:	out    0xe7,eax
   1400146e7:	imul   eax,DWORD PTR [rax],0x0
	...
   14001474a:	add    BYTE PTR [rax],al
   14001474c:	mov    ch,0xba
   14001474e:	mov    ch,0x18
   140014750:	mov    ch,0xb6
   140014752:	mov    ch,0x7b
   140014754:	mov    ch,0xb6
   140014756:	mov    ch,0xbd
   140014758:	mov    ch,0xba
   14001475a:	mov    ebp,0xb5bab5d6
   14001475f:	mov    esi,es
   140014761:	mov    esi,0x39
	...
   14001478f:	add    al,al
   140014791:	add    edi,edi
   140014793:	inc    DWORD PTR [rax+0xff7f00]
   140014799:	add    BYTE PTR [rdi],bl
   14001479b:	inc    DWORD PTR [rax]
   14001479d:	add    BYTE PTR [rdi],al
   14001479f:	inc    DWORD PTR [rax]
   1400147a1:	add    BYTE PTR [rbx],al
   1400147a3:	inc    DWORD PTR [rax]
   1400147a5:	add    BYTE PTR [rcx],al
   1400147a7:	inc    DWORD PTR [rax]
   1400147a9:	add    BYTE PTR [rax],al
   1400147ab:	inc    DWORD PTR [rax]
   1400147ad:	add    BYTE PTR [rax],al
   1400147af:	jg     0x1400147b1
   1400147b1:	add    BYTE PTR [rax],al
   1400147b3:	(bad)  
   1400147b4:	add    BYTE PTR [rax],al
   1400147b6:	add    BYTE PTR [rdi],bh
   1400147b8:	add    BYTE PTR [rax],al
   1400147ba:	add    BYTE PTR [rdi],bh
   1400147bc:	add    BYTE PTR [rax],al
   1400147be:	add    BYTE PTR [rdi],bh
   1400147c0:	add    BYTE PTR [rax],al
   1400147c2:	add    BYTE PTR [rdi],bh
   1400147c4:	add    BYTE PTR [rax],al
   1400147c6:	add    BYTE PTR [rbx],ah
   1400147c8:	add    BYTE PTR [rax],al
   1400147ca:	add    BYTE PTR [rbx],ah
   1400147cc:	add    BYTE PTR [rax],al
   1400147ce:	add    DWORD PTR [rcx],esi
   1400147d0:	add    BYTE PTR [rax],al
   1400147d2:	add    DWORD PTR [rcx],edi
   1400147d4:	add    BYTE PTR [rax],al
   1400147d6:	add    DWORD PTR [rcx],edi
   1400147d8:	add    BYTE PTR [rax],al
   1400147da:	add    DWORD PTR [rcx],edi
   1400147dc:	add    BYTE PTR [rax],al
   1400147de:	add    DWORD PTR [rcx],edi
   1400147e0:	add    BYTE PTR [rax],al
   1400147e2:	add    DWORD PTR [rcx],esi
   1400147e4:	add    BYTE PTR [rax],al
   1400147e6:	add    DWORD PTR [rcx],esi
   1400147e8:	add    BYTE PTR [rax],0x1
   1400147eb:	add    eax,DWORD PTR [rax-0x7ffcff00]
   1400147f1:	add    BYTE PTR [rcx],al
   1400147f3:	(bad)  
   1400147f4:	add    BYTE PTR [rax],0x1
   1400147f7:	jo     0x1202048fd
   1400147fd:	add    BYTE PTR [rbx],al
   1400147ff:	(bad)  
   140014800:	cld    
   140014801:	add    BYTE PTR [rbx],al
   140014803:	(bad)  
   140014804:	inc    DWORD PTR [rax-0xf0000fd]
   14001480a:	add    edi,edi
   14001480c:	(bad)  
   14001480d:	inc    BYTE PTR [rdi]
   14001480f:	jmp    FWORD PTR [rax]
   140014811:	add    BYTE PTR [rax],al
   140014813:	add    BYTE PTR [rax],dl
   140014815:	add    BYTE PTR [rax],al
   140014817:	add    BYTE PTR [rax],ah
   140014819:	add    BYTE PTR [rax],al
   14001481b:	add    BYTE PTR [rcx],al
   14001481d:	add    BYTE PTR [rax],ah
   14001481f:	add    BYTE PTR [rax],al
   140014821:	add    BYTE PTR [rax],al
   140014823:	add    BYTE PTR [rax+0x4],al
	...
   14001483a:	add    BYTE PTR [rax],al
   14001483c:	pushf  
   14001483d:	sahf   
   14001483e:	pushf  
   14001483f:	(bad)  
   140014840:	xchg   esp,eax
   140014841:	xchg   esi,eax
   140014842:	xchg   esp,eax
   140014843:	call   QWORD PTR [rsi+rdx*4-0x696b006c]
   14001484a:	xchg   esp,eax
   14001484b:	call   FWORD PTR [rsi+rbx*4+0xce9c]
	...
   140014876:	add    BYTE PTR [rax],al
   140014878:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014879:	movabs ds:0xc7c6ffbdbabdcea5,al
   140014882:	(bad)  
   140014883:	inc    esi
   140014885:	mov    esi,0xc6c7c6ff
   14001488b:	push   QWORD PTR [rbp-0x5a004a4e]
   140014891:	movabs ds:0xcea5,al
   14001489a:	add    BYTE PTR [rax],al
   14001489c:	(bad)  
   14001489d:	movabs ds:0xa2d69c39a2d64239,al
   1400148a6:	cmp    DWORD PTR [rsi+rdx*8-0x299cd666],ecx
   1400148ad:	movabs ds:0x2139,al
   1400148b6:	add    BYTE PTR [rax],al
   1400148b8:	pushf  
   1400148b9:	(bad)  
   1400148ba:	pushf  
   1400148bb:	call   rsi
   1400148bd:	xlat   BYTE PTR ds:[rbx]
   1400148be:	(bad)  
   1400148bf:	inc    esi
   1400148c1:	ret    
   1400148c2:	(bad)  
   1400148c3:	dec    DWORD PTR [rdx+rcx*4-0x3c390074]
   1400148ca:	(bad)  
   1400148cb:	(bad)  
   1400148cc:	mov    ebp,0x9cffbdba
   1400148d1:	(bad)  
   1400148d2:	pushf  
   1400148d3:	inc    DWORD PTR [rax]
   1400148d5:	add    BYTE PTR [rax],al
   1400148d7:	add    BYTE PTR [rax],al
   1400148d9:	add    BYTE PTR [rax],al
   1400148db:	add    BYTE PTR [rbp-0x3152ff8b],bh
   1400148e1:	xchg   esi,eax
   1400148e2:	add    bh,bh
   1400148e4:	(bad)  
   1400148e5:	xchg   BYTE PTR [rax],al
   1400148e7:	inc    esi
   1400148e9:	jne    0x1400148eb
   1400148eb:	idiv   DWORD PTR [rbp+0xbd0065]
   1400148f1:	add    BYTE PTR [rax],al
   1400148f3:	add    BYTE PTR [rax],al
   1400148f5:	add    BYTE PTR [rax],al
   1400148f7:	add    BYTE PTR [rdx+rbx*4-0x28290064],bl
   1400148fe:	(bad)  
   1400148ff:	inc    esi
   140014901:	ret    
   140014902:	(bad)  
   140014903:	dec    DWORD PTR [rdx+rcx*4+0x454aff8c]
   14001490a:	cmp    edi,edi
   14001490c:	rex.WX
   14001490d:	cmp    r15d,r15d
   140014910:	rex.WX
   140014911:	cmp    r15d,r15d
   140014914:	rex.WX
   140014915:	cmp    r15d,r15d
   140014918:	rex.WX
   140014919:	cmp    r15d,r15d
   14001491c:	out    0x9a,eax
   14001491e:	add    bh,bh
   140014920:	out    0x9e,eax
   140014922:	add    bh,bh
   140014924:	fimul  WORD PTR [rsi-0x7d210100]
   14001492a:	add    bh,bh
   14001492c:	(bad)  
   14001492d:	jne    0x14001492f
   14001492f:	fiadd  WORD PTR [rax]
   140014931:	add    BYTE PTR [rax],al
   140014933:	add    BYTE PTR [rax],al
   140014935:	add    BYTE PTR [rax],al
   140014937:	add    BYTE PTR [rdx+rbx*4-0x28290064],bl
   14001493e:	(bad)  
   14001493f:	inc    esi
   140014941:	ret    
   140014942:	(bad)  
   140014943:	dec    DWORD PTR [rdx+rcx*4+0x454aff8c]
   14001494a:	cmp    edi,edi
   14001494c:	div    ebx
   14001494e:	idiv   edi
   140014950:	test   BYTE PTR [rcx+0x63],bh
   140014953:	push   QWORD PTR [rbp-0x21008c5e]
   140014959:	stos   BYTE PTR es:[rdi],al
   14001495a:	pop    rdx
   14001495b:	dec    esi
   14001495d:	jns    0x140014967
   14001495f:	jmp    rdi
   140014961:	mov    es,WORD PTR [rax]
   140014963:	(bad)  
   140014964:	ficomp WORD PTR [rdx-0x6d180100]
   14001496a:	add    bh,bh
   14001496c:	(bad)  
   14001496d:	jge    0x14001496f
   14001496f:	out    0x0,eax
   140014971:	add    BYTE PTR [rax],al
   140014973:	add    BYTE PTR [rax],al
   140014975:	add    BYTE PTR [rax],al
   140014977:	add    BYTE PTR [rdx+rbx*4-0x28290064],bl
   14001497e:	(bad)  
   14001497f:	inc    esi
   140014981:	ret    
   140014982:	(bad)  
   140014983:	dec    DWORD PTR [rdx+rcx*4+0x454aff8c]
   14001498a:	cmp    edi,edi
   14001498c:	rex.WX
   14001498d:	cmp    r15d,r15d
   140014990:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014991:	xchg   BYTE PTR [rdx-0x1],dl
   140014994:	out    0xb2,eax
   140014996:	rex.WX (bad) 
   140014998:	out    dx,eax
   140014999:	mov    dh,0x4a
   14001499b:	jmp    QWORD PTR [rbp+0x7bff427d]
   1400149a1:	pop    rcx
   1400149a2:	sub    edi,edi
   1400149a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149a5:	jno    0x1400149bf
   1400149a7:	jmp    rdi
   1400149a9:	xchg   esi,eax
   1400149aa:	add    dh,cl
   1400149ac:	mov    BYTE PTR [rdx+0xe700],0x0
   1400149b3:	add    BYTE PTR [rbp-0x63c6ffcc],ch
   1400149b9:	sahf   
   1400149ba:	pushf  
   1400149bb:	call   rsi
   1400149bd:	xlat   BYTE PTR ds:[rbx]
   1400149be:	(bad)  
   1400149bf:	dec    esi
   1400149c1:	retf   
   1400149c2:	(bad)  
   1400149c3:	call   QWORD PTR [rdx+rdx*4+0x454aff94]
   1400149ca:	cmp    edi,edi
   1400149cc:	div    ebx
   1400149ce:	idiv   edi
   1400149d0:	mov    ch,0x86
   1400149d2:	xor    edi,edi
   1400149d4:	jmp    FWORD PTR [rdx-0x651000e8]
   1400149da:	cmp    edi,edi
   1400149dc:	pushf  
   1400149dd:	jno    0x140014a21
   1400149df:	(bad)  
   1400149e0:	(bad)  
   1400149e1:	(bad)  
   1400149e2:	dec    esi
   1400149e4:	rex.WX
   1400149e5:	cmp    r15d,r15d
   1400149e8:	add    BYTE PTR [rax],al
   1400149ea:	add    BYTE PTR [rax],al
   1400149ec:	mov    BYTE PTR [rsi+0xf700],0x0
   1400149f3:	add    dh,al
   1400149f5:	jno    0x1400149f7
   1400149f7:	neg    DWORD PTR [rsi+rbx*4-0x28290064]
   1400149fe:	(bad)  
   1400149ff:	call   rsi
   140014a01:	rcl    esi,cl
   140014a03:	call   FWORD PTR [rdx+rbx*4+0x454aff9c]
   140014a0a:	cmp    edi,edi
   140014a0c:	rex.WX
   140014a0d:	cmp    r15d,r15d
   140014a10:	pop    rdx
   140014a11:	push   rcx
   140014a12:	rex.WX call QWORD PTR [rdx+0x51]
   140014a16:	rex.WX call QWORD PTR [rdx+0x4d]
   140014a1a:	rex.X dec DWORD PTR [rdx+0x41]
   140014a1e:	cmp    edi,edi
   140014a20:	rex.WX
   140014a21:	cmp    r15d,r15d
   140014a24:	rex.WX
   140014a25:	cmp    r15d,r15d
   140014a28:	add    BYTE PTR [rax],al
   140014a2a:	add    BYTE PTR [rax],al
   140014a2c:	mov    BYTE PTR [rdx+0xef00],0x0
   140014a33:	add    dh,cl
   140014a35:	jno    0x140014a37
   140014a37:	out    dx,eax
   140014a38:	pushf  
   140014a39:	sahf   
   140014a3a:	pushf  
   140014a3b:	call   rsi
   140014a3d:	xlat   BYTE PTR ds:[rbx]
   140014a3e:	(bad)  
   140014a3f:	call   rsi
   140014a41:	rcl    esi,cl
   140014a43:	call   FWORD PTR [rdx+rbx*4+0x454aff9c]
   140014a4a:	cmp    edi,edi
   140014a4c:	div    ebx
   140014a4e:	idiv   edi
   140014a50:	jae    0x140014aab
   140014a52:	mov    edi,?
   140014a54:	test   BYTE PTR [rbp-0x4b],dl
   140014a57:	call   QWORD PTR [rcx+riz*2+0x5d7bff84]
   140014a5e:	movsxd edi,edi
   140014a60:	(bad)  
   140014a61:	(bad)  
   140014a62:	dec    esi
   140014a64:	rex.WX
   140014a65:	cmp    r15d,r15d
   140014a68:	add    BYTE PTR [rax],al
   140014a6a:	add    BYTE PTR [rax],al
   140014a6c:	mov    BYTE PTR [rdx+0xef00],0x0
   140014a73:	add    dh,cl
   140014a75:	jne    0x140014a77
   140014a77:	jmp    QWORD PTR [rbp-0x29005a5e]
   140014a7d:	xlat   BYTE PTR ds:[rbx]
   140014a7e:	(bad)  
   140014a7f:	call   rsi
   140014a81:	xlat   BYTE PTR ds:[rbx]
   140014a82:	(bad)  
   140014a83:	call   QWORD PTR [rsi+rdx*4+0x454aff94]
   140014a8a:	cmp    edi,edi
   140014a8c:	rex.WX
   140014a8d:	cmp    r15d,r15d
   140014a90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014a91:	xchg   esi,eax
   140014a92:	jae    0x140014a93
   140014a94:	(bad)  
   140014a95:	ret    
   140014a96:	mov    edi,?
   140014a98:	out    dx,eax
   140014a99:	(bad)  
   140014a9a:	jae    0x140014a9b
   140014a9c:	lods   eax,DWORD PTR ds:[rsi]
   140014a9d:	xchg   edx,eax
   140014a9e:	movsxd edi,edi
   140014aa0:	rex.WX
   140014aa1:	cmp    r15d,r15d
   140014aa4:	rex.WX
   140014aa5:	cmp    r15d,r15d
   140014aa8:	add    BYTE PTR [rax],al
   140014aaa:	add    BYTE PTR [rax],al
   140014aac:	(bad)  
   140014aad:	jge    0x140014aaf
   140014aaf:	out    0xc6,eax
   140014ab1:	mov    es,WORD PTR [rax]
   140014ab3:	mov    dh,0x86
   140014ab6:	add    BYTE PTR [rbp-0x5a595b],bh
   140014abc:	(bad)  
   140014abd:	xlat   BYTE PTR ds:[rbx]
   140014abe:	(bad)  
   140014abf:	call   QWORD PTR [rsi+rdx*4-0x696b006c]
   140014ac6:	xchg   esp,eax
   140014ac7:	dec    DWORD PTR [rdx+0x45]
   140014aca:	cmp    edi,edi
   140014acc:	div    ebx
   140014ace:	idiv   edi
   140014ad0:	lods   eax,DWORD PTR ds:[rsi]
   140014ad1:	sahf   
   140014ad2:	imul   edi,edi,0xffffffde
   140014ad5:	iret   
   140014ad6:	jae    0x140014ad7
   140014ad8:	out    0xd7,eax
   140014ada:	jae    0x140014adb
   140014adc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014add:	(bad)  
   140014ade:	movsxd edi,edi
   140014ae0:	(bad)  
   140014ae1:	(bad)  
   140014ae2:	dec    esi
   140014ae4:	rex.WX
   140014ae5:	cmp    r15d,r15d
   140014ae8:	add    BYTE PTR [rax],al
   140014aea:	add    BYTE PTR [rax],al
   140014aec:	(bad)  
   140014aed:	mov    al,BYTE PTR [rax]
   140014aef:	test   esi,0xc6ff008e
   140014af5:	xchg   BYTE PTR [rax],al
   140014af7:	sbb    BYTE PTR [rbp-0x39005a5a],ah
   140014afd:	neg    esi
   140014aff:	push   QWORD PTR [rcx]
   140014b01:	ret    
   140014b02:	pop    rdx
   140014b03:	dec    DWORD PTR [rax]
   140014b05:	jmp    0x140014b59
   140014b07:	dec    DWORD PTR [rdx+0x45]
   140014b0a:	cmp    edi,edi
   140014b0c:	rex.WX
   140014b0d:	cmp    r15d,r15d
   140014b10:	rex.WX
   140014b11:	cmp    r15d,r15d
   140014b14:	rex.WX
   140014b15:	cmp    r15d,r15d
   140014b18:	rex.WX
   140014b19:	cmp    r15d,r15d
   140014b1c:	rex.WX
   140014b1d:	cmp    r15d,r15d
   140014b20:	rex.WX
   140014b21:	cmp    r15d,r15d
   140014b24:	rex.WX
   140014b25:	cmp    r15d,r15d
   140014b28:	add    BYTE PTR [rax],al
   140014b2a:	add    BYTE PTR [rax],al
   140014b2c:	(bad)  
   140014b2d:	(bad)  
   140014b2e:	add    bh,bh
   140014b30:	out    0xa2,eax
   140014b32:	add    BYTE PTR [rdx+0x0],al
   140014b35:	add    BYTE PTR [rax],al
   140014b37:	add    BYTE PTR [rbp-0x39005256],ch
   140014b3d:	neg    esi
   140014b3f:	inc    DWORD PTR [rax]
   140014b41:	add    BYTE PTR [rax],al
   140014b43:	inc    DWORD PTR [rax]
   140014b45:	add    BYTE PTR [rax],al
   140014b47:	inc    DWORD PTR [rax]
   140014b49:	add    BYTE PTR [rax],al
   140014b4b:	call   QWORD PTR [rdi+rax*8-0x5552005b]
   140014b52:	lods   eax,DWORD PTR ds:[rsi]
   140014b53:	inc    DWORD PTR [rax]
	...
   140014b69:	add    BYTE PTR [rax],al
   140014b6b:	add    BYTE PTR [rbp+0x730061],bh
   140014b71:	add    BYTE PTR [rax],al
   140014b73:	add    BYTE PTR [rax],al
   140014b75:	add    BYTE PTR [rax],al
   140014b77:	add    BYTE PTR [rbp-0x29005252],ch
   140014b7d:	rcl    esi,cl
   140014b7f:	dec    DWORD PTR [rdx+rcx*4+0x7d7bff8c]
   140014b86:	jnp    0x140014b87
   140014b88:	test   BYTE PTR [rsi-0x4542007c],al
   140014b8e:	mov    ebp,0xadaeadff
   140014b93:	inc    DWORD PTR [rax]
	...
   140014bb5:	add    BYTE PTR [rax],al
   140014bb7:	add    BYTE PTR [rbp-0x42314a4e],dh
   140014bbd:	mov    edx,0xc7c6ffbd
   140014bc2:	(bad)  
   140014bc3:	inc    esi
   140014bc5:	mov    esi,0xc6c7c6ff
   140014bcb:	jmp    FWORD PTR [rbp-0x4a005252]
   140014bd1:	mov    dl,0xb5
   140014bd3:	(bad)  
	...
   140014bfc:	mov    ch,0xb6
   140014bfe:	mov    ch,0xce
   140014c00:	mov    ch,0xb2
   140014c02:	mov    ch,0xff
   140014c04:	mov    ch,0xb2
   140014c06:	mov    ch,0xff
   140014c08:	mov    ch,0xb2
   140014c0a:	mov    ch,0xff
   140014c0c:	mov    ch,0xb6
   140014c0e:	mov    ch,0xce
	...
   140014c38:	cmp    edi,0x0
   140014c3b:	add    BYTE PTR [rcx],al
   140014c3d:	add    DWORD PTR [rax],0x0
   140014c40:	add    DWORD PTR [rbx+0x3000000],eax
   140014c46:	add    BYTE PTR [rax],al
   140014c48:	add    BYTE PTR [rbx],al
   140014c4a:	add    BYTE PTR [rax],al
   140014c4c:	add    BYTE PTR [rdx],al
   140014c4e:	add    BYTE PTR [rax],al
   140014c50:	add    BYTE PTR [rdx],cl
   140014c52:	add    BYTE PTR [rax],al
   140014c54:	add    BYTE PTR [rdx],cl
   140014c56:	add    BYTE PTR [rax],al
   140014c58:	add    BYTE PTR [rdx],cl
   140014c5a:	add    BYTE PTR [rax],al
   140014c5c:	add    BYTE PTR [rax],cl
   140014c5e:	add    BYTE PTR [rax],al
   140014c60:	add    BYTE PTR [rax],cl
   140014c62:	add    BYTE PTR [rax],al
   140014c64:	add    BYTE PTR [rcx],cl
   140014c66:	add    BYTE PTR [rax],al
   140014c68:	add    ebx,edi
   140014c6a:	add    BYTE PTR [rax],al
   140014c6c:	add    edi,edi
   140014c6e:	add    BYTE PTR [rax],al
   140014c70:	add    edi,edi
   140014c72:	add    BYTE PTR [rax],al
   140014c74:	cmp    edi,0x0
   140014c77:	add    BYTE PTR [rax],al
   140014c79:	add    BYTE PTR [rcx],al
   140014c7b:	add    BYTE PTR [rcx],cl
   140014c7d:	add    BYTE PTR [rax],dh
   140014c7f:	xor    BYTE PTR [rax],dl
   140014c81:	add    BYTE PTR [rcx],al
   140014c83:	add    BYTE PTR [rax+rax*1],al
   140014c86:	push   0x1000006
   140014c8b:	add    BYTE PTR [rax],ah
   140014c8d:	and    BYTE PTR [rax],dl
   140014c8f:	add    BYTE PTR [rcx],al
   140014c91:	add    BYTE PTR [rax+rax*1],al
   140014c94:	call   0x142014c9b
   140014c99:	add    BYTE PTR [rax],dl
   140014c9b:	adc    BYTE PTR [rax],dl
   140014c9d:	add    BYTE PTR [rcx],al
   140014c9f:	add    BYTE PTR [rax+rax*1],al
   140014ca2:	sub    BYTE PTR [rcx],al
   140014ca4:	add    BYTE PTR [rax],al
   140014ca6:	add    eax,DWORD PTR [rax]
   140014ca8:	xor    BYTE PTR [rax],dh
   140014caa:	add    BYTE PTR [rax],al
   140014cac:	add    DWORD PTR [rax],eax
   140014cae:	or     BYTE PTR [rax],al
   140014cb0:	test   al,0xe
   140014cb2:	add    BYTE PTR [rax],al
   140014cb4:	add    al,0x0
   140014cb6:	and    BYTE PTR [rax],ah
   140014cb8:	add    BYTE PTR [rax],al
   140014cba:	add    DWORD PTR [rax],eax
   140014cbc:	or     BYTE PTR [rax],al
   140014cbe:	test   al,0x8
   140014cc0:	add    BYTE PTR [rax],al
   140014cc2:	add    eax,0x101000
   140014cc7:	add    BYTE PTR [rcx],al
   140014cc9:	add    BYTE PTR [rax],cl
   140014ccb:	add    BYTE PTR [rax+0x5],ch
   140014cce:	add    BYTE PTR [rax],al
   140014cd0:	(bad)  
   140014cd1:	add    BYTE PTR [rax],dh
   140014cd3:	xor    BYTE PTR [rax],al
   140014cd5:	add    BYTE PTR [rcx],al
   140014cd7:	add    BYTE PTR [rax],ah
   140014cd9:	add    BYTE PTR [rax+0x7000025],ch
   140014cdf:	add    BYTE PTR [rax],ah
   140014ce1:	and    BYTE PTR [rax],al
   140014ce3:	add    BYTE PTR [rcx],al
   140014ce5:	add    BYTE PTR [rax],ah
   140014ce7:	add    BYTE PTR [rax+0x8000010],ch
   140014ced:	add    BYTE PTR [rax],dl
   140014cef:	adc    BYTE PTR [rax],al
   140014cf1:	add    BYTE PTR [rcx],al
   140014cf3:	add    BYTE PTR [rax],ah
   140014cf5:	add    BYTE PTR [rax+0x4],ch
   140014cf8:	add    BYTE PTR [rax],al
   140014cfa:	or     DWORD PTR [rax],eax
   140014cfc:	add    BYTE PTR [rax],al
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	int    0xfe
   140014d02:	int    0xfe
   140014d04:	rol    BYTE PTR [rax],1
   140014d06:	add    BYTE PTR [rax],al
   140014d08:	add    BYTE PTR [rax],al
   140014d0a:	add    DWORD PTR [rax],eax
   140014d0c:	add    BYTE PTR [rax],al
   140014d0e:	add    BYTE PTR [rax],al
   140014d10:	adc    DWORD PTR [rax],eax
   140014d12:	add    BYTE PTR [rax],al
   140014d14:	add    BYTE PTR [rax],al
   140014d16:	add    BYTE PTR [rax],al
   140014d18:	add    al,BYTE PTR [rax]
   140014d1a:	add    BYTE PTR [rax],al
   140014d1c:	cs imul ebx,DWORD PTR gs:[rsp+rsi*1+0xba00c46],0xffffff8a
   140014d26:	addr32 je 0x140014cc7
   140014d29:	shl    BYTE PTR [rip+0xffffffffe0598446],1        # 0x1205ad175
   140014d2f:	pop    rdx
   140014d30:	je     0x140014d89
   140014d32:	fsubrp st(7),st
   140014d34:	int    0xc0
   140014d36:	repz (bad) 
   140014d38:	movabs ds:0xc029c4,al
	...
   140014d51:	add    BYTE PTR [rax],al
   140014d53:	add    BYTE PTR [rax+0xe000000],cl
   140014d59:	add    BYTE PTR [rax],al
   140014d5b:	add    BYTE PTR [rax+0x10000000],bl
   140014d61:	add    BYTE PTR [rax],al
   140014d63:	add    BYTE PTR [rax+0xe000000],ch
   140014d69:	add    BYTE PTR [rax],al
   140014d6b:	add    BYTE PTR [rax+0x8000000],bh
	...
   140014d79:	add    BYTE PTR [rax],al
   140014d7b:	add    al,al
   140014d7d:	add    BYTE PTR [rax],al
   140014d7f:	add    BYTE PTR [rax+rax*1],cl
   140014d82:	add    BYTE PTR [rax],al
   140014d84:	add    BYTE PTR [rax],al
   140014d86:	add    BYTE PTR [rax],al
   140014d88:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140014d8c:	rex.WB add BYTE PTR [r8],al
	...
   140014d97:	add    BYTE PTR [rbx],al
   140014d99:	add    BYTE PTR [rax],al
   140014d9b:	add    BYTE PTR [rsi],cl
   140014d9d:	add    BYTE PTR [rax],al
   140014d9f:	add    BYTE PTR [rax],dl
   140014da1:	add    BYTE PTR [rax],al
   140014da3:	add    BYTE PTR [rax],bl
   140014da5:	add    BYTE PTR [rax],al
   140014da7:	add    BYTE PTR [rbp+0x0],cl
   140014daa:	push   rbp
   140014dab:	add    BYTE PTR [rcx+0x0],cl
	...
   140014db6:	add    BYTE PTR [rax],al
   140014db8:	(bad)  
   140014db9:	add    BYTE PTR [rax],al
   140014dbb:	add    BYTE PTR [rax],dl
   140014dbd:	add    BYTE PTR [rax],al
   140014dbf:	add    BYTE PTR [rbp+0x0],ah
   140014dc2:	outs   dx,BYTE PTR ds:[rsi]
   140014dc3:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301a2c9
   140014dc9:	add    BYTE PTR [rax],al
   140014dcb:	add    BYTE PTR [rax],al
   140014dcd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax+0x900000],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	and    BYTE PTR [rbx-0x5cc75cd8],ah
   14001500e:	rex movabs ds:0xa360a358a350a348,eax
   140015018:	push   0xffffffff88a380a3
   14001501d:	movabs ds:0xa6a8a6a0a4a8a4a0,eax
   140015026:	mov    al,0xa6
   140015028:	mov    eax,0xc8a6c0a6
   14001502d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001502e:	shl    BYTE PTR [rsi-0x591f5928],1
   140015034:	call   0x138a840df
   140015039:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001503a:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140015040:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140015046:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14001504c:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001504e:	push   rax
   14001504f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015050:	pop    rax
   140015051:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015052:	(bad)  
   140015053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015054:	push   0x78a770a7
   140015059:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001505a:	and    BYTE PTR [rdi-0x586f5878],0x98
   140015061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015062:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001506b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001506c:	enter  0xd0a7,0xa7
   140015070:	fsub   DWORD PTR [rdi-0x55ef5600]
   140015076:	and    BYTE PTR [rdx-0x55bf55d0],ch
   14001507c:	push   rax
   14001507d:	stos   BYTE PTR es:[rdi],al
   14001507e:	(bad)  
   14001507f:	stos   BYTE PTR es:[rdi],al
   140015080:	jo     0x14001502c
   140015082:	sub    BYTE PTR [rdx-0x555f5570],0xb0
   140015089:	stos   BYTE PTR es:[rdi],al
   14001508a:	shr    BYTE PTR [rdx+0xaad0],0x0
   140015091:	nop
   140015092:	add    BYTE PTR [rax],al
   140015094:	adc    BYTE PTR [rax],al
   140015096:	add    BYTE PTR [rax],al
   140015098:	push   0xffffffff88a080a0
   14001509d:	movabs al,ds:0x140000b000a090
   1400150a6:	add    BYTE PTR [rax],al
   1400150a8:	add    BYTE PTR [rax-0x5fd75fe0],ah
   1400150ae:	xor    BYTE PTR [rax+0xa038],ah
   1400150b4:	add    al,dl
   1400150b6:	add    BYTE PTR [rax],al
   1400150b8:	and    BYTE PTR [rax],al
   1400150ba:	add    BYTE PTR [rax],al
   1400150bc:	add    BYTE PTR [rax-0x5fe75ff8],ah
   1400150c2:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   1400150c8:	rex.W movabs al,ds:0xa068a060a058a050
   1400150d2:	jo     0x140015074
