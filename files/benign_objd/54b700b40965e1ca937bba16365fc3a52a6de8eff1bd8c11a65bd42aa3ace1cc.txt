
54b700b40965e1ca937bba16365fc3a52a6de8eff1bd8c11a65bd42aa3ace1cc.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x6fe5]        # 0x408000
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x6fe6]        # 0x408010
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x6fe9]        # 0x408020
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x6fac]        # 0x407ff0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x6e4f]        # 0x407ea0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x6f81]        # 0x407fe0
  40105f:	mov    DWORD PTR [rip+0x9fa3],edx        # 0x40b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404618
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402920
  401081:	mov    rdx,QWORD PTR [rip+0x6eb8]        # 0x407f40
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x6e9e]        # 0x407f30
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x6f04]        # 0x407fa0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x6e3b]        # 0x407ee0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402500
  4010af:	mov    rax,QWORD PTR [rip+0x6d9a]        # 0x407e50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404618
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x16d9]        # 0x402800
  401127:	call   0x4027f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x6e65]        # 0x407fd0
  40116b:	lea    r8,[rip+0x9ea6]        # 0x40b018
  401172:	lea    rdx,[rip+0x9ea7]        # 0x40b020
  401179:	lea    rcx,[rip+0x9ea8]        # 0x40b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x9e78],eax        # 0x40b000
  401188:	lea    rax,[rip+0x9e71]        # 0x40b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x6df5]        # 0x407f90
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404630
  4011a3:	mov    DWORD PTR [rip+0x9e67],eax        # 0x40b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x6e1a]        # 0x407fe0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x6d1b]        # 0x407f10
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xb2e6]        # 0x40c4e8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x6cf7]        # 0x407f20
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x9dba],0x1        # 0x40b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x6c2c]        # 0x407e90
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402b10
  40127d:	lea    rcx,[rip+0x1e2c]        # 0x4030b0
  401284:	call   QWORD PTR [rip+0xb256]        # 0x40c4e0
  40128a:	mov    rdx,QWORD PTR [rip+0x6c6f]        # 0x407f00
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402fc0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x404660
  4012a5:	call   0x402900
  4012aa:	mov    rax,QWORD PTR [rip+0x6bef]        # 0x407ea0
  4012b1:	mov    QWORD PTR [rip+0xa750],rax        # 0x40ba08
  4012b8:	mov    rax,QWORD PTR [rip+0x6c11]        # 0x407ed0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xa6e9],rax        # 0x40ba00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0x9ceb]        # 0x40b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404578
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x9cc2]        # 0x40b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404528
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404578
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404570
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x9c6a],rbp        # 0x40b020
  4013b6:	call   0x4024d0
  4013bb:	mov    rax,QWORD PTR [rip+0x6afe]        # 0x407ec0
  4013c2:	mov    rdx,QWORD PTR [rip+0x9c4f]        # 0x40b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x9c59]        # 0x40b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x9c3c]        # 0x40b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x9c3d]        # 0x40b020
  4013e3:	call   0x404730
  4013e8:	mov    ecx,DWORD PTR [rip+0x9c1a]        # 0x40b008
  4013ee:	mov    DWORD PTR [rip+0x9c18],eax        # 0x40b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x9c02]        # 0x40b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404600
  40140b:	mov    eax,DWORD PTR [rip+0x9bfb]        # 0x40b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x6ae9]        # 0x407f20
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404608
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x6afd]        # 0x407f60
  401463:	mov    rcx,QWORD PTR [rip+0x6ae6]        # 0x407f50
  40146a:	call   0x4045f0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xaff7]        # 0x40c490
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x6ad9]        # 0x407f80
  4014a7:	mov    rcx,QWORD PTR [rip+0x6ac2]        # 0x407f70
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4045f0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4045b0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x6b05]        # 0x407fe0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402510
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x6ad5]        # 0x407fe0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402510
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x120
  401538:	call   QWORD PTR [rip+0xb00a]        # 0x40c548
  40153e:	lea    rbx,[rsp+0x20]
  401543:	mov    r8,rax
  401546:	mov    edx,0x100
  40154b:	mov    rcx,rbx
  40154e:	call   0x4045a8
  401553:	test   rax,rax
  401556:	je     0x401580
  401558:	mov    edx,0xa
  40155d:	mov    rcx,rbx
  401560:	call   0x404530
  401565:	test   rax,rax
  401568:	je     0x40156d
  40156a:	mov    BYTE PTR [rax],0x0
  40156d:	mov    rcx,rbx
  401570:	call   QWORD PTR [rip+0xb032]        # 0x40c5a8
  401576:	add    rsp,0x120
  40157d:	pop    rbx
  40157e:	ret    
  40157f:	nop
  401580:	xor    eax,eax
  401582:	jmp    0x401576
  401584:	xchg   ax,ax
  401586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401590:	push   r14
  401592:	push   r13
  401594:	push   r12
  401596:	push   rbp
  401597:	push   rdi
  401598:	push   rsi
  401599:	push   rbx
  40159a:	sub    rsp,0x20
  40159e:	lea    rbx,[rsp+0x68]
  4015a3:	mov    QWORD PTR [rsp+0x68],rdx
  4015a8:	lea    rdx,[rip+0x5a51]        # 0x407000
  4015af:	mov    rbp,rcx
  4015b2:	mov    r14,r8
  4015b5:	mov    rcx,rbx
  4015b8:	call   0x4022e0
  4015bd:	test   rax,rax
  4015c0:	je     0x4016a0
  4015c6:	mov    rcx,rax
  4015c9:	mov    r12,QWORD PTR [rip+0xafd8]        # 0x40c5a8
  4015d0:	call   r12
  4015d3:	lea    rdx,[rip+0x5a26]        # 0x407000
  4015da:	mov    QWORD PTR [rbp+0x10],rax
  4015de:	mov    rcx,rbx
  4015e1:	call   0x4022e0
  4015e6:	test   rax,rax
  4015e9:	je     0x4016a0
  4015ef:	mov    rcx,rax
  4015f2:	call   r12
  4015f5:	lea    rdx,[rip+0x5a04]        # 0x407000
  4015fc:	mov    QWORD PTR [rbp+0x0],rax
  401600:	mov    rcx,rbx
  401603:	call   0x4022e0
  401608:	test   rax,rax
  40160b:	mov    r13,rax
  40160e:	je     0x4016a0
  401614:	lea    rdi,[rip+0x59e7]        # 0x407002
  40161b:	mov    ecx,0x2
  401620:	mov    rsi,rax
  401623:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401625:	je     0x4016b1
  40162b:	mov    rcx,rax
  40162e:	call   r12
  401631:	mov    rcx,r13
  401634:	mov    QWORD PTR [rbp+0x8],rax
  401638:	call   0x404528
  40163d:	mov    edx,0x2a
  401642:	mov    r8,rax
  401645:	mov    rcx,r13
  401648:	call   0x404568
  40164d:	lea    rdx,[rip+0x59ac]        # 0x407000
  401654:	mov    rcx,rbx
  401657:	call   0x4022e0
  40165c:	test   rax,rax
  40165f:	je     0x4016a0
  401661:	mov    rcx,rax
  401664:	call   r12
  401667:	lea    rdx,[rip+0x5992]        # 0x407000
  40166e:	mov    QWORD PTR [rbp+0x18],rax
  401672:	mov    rcx,rbx
  401675:	call   0x4022e0
  40167a:	test   rax,rax
  40167d:	je     0x4016a0
  40167f:	mov    rcx,rax
  401682:	call   r12
  401685:	mov    QWORD PTR [rbp+0x20],rax
  401689:	mov    eax,0x1
  40168e:	add    rsp,0x20
  401692:	pop    rbx
  401693:	pop    rsi
  401694:	pop    rdi
  401695:	pop    rbp
  401696:	pop    r12
  401698:	pop    r13
  40169a:	pop    r14
  40169c:	ret    
  40169d:	nop    DWORD PTR [rax]
  4016a0:	xor    eax,eax
  4016a2:	add    rsp,0x20
  4016a6:	pop    rbx
  4016a7:	pop    rsi
  4016a8:	pop    rdi
  4016a9:	pop    rbp
  4016aa:	pop    r12
  4016ac:	pop    r13
  4016ae:	pop    r14
  4016b0:	ret    
  4016b1:	lea    rcx,[rip+0x594c]        # 0x407004
  4016b8:	mov    rdx,r14
  4016bb:	call   0x404560
  4016c0:	call   0x401530
  4016c5:	mov    QWORD PTR [rbp+0x8],rax
  4016c9:	jmp    0x40164d
  4016ce:	xchg   ax,ax
  4016d0:	push   r15
  4016d2:	push   r14
  4016d4:	mov    eax,0xf68
  4016d9:	push   r13
  4016db:	push   r12
  4016dd:	push   rbp
  4016de:	push   rdi
  4016df:	push   rsi
  4016e0:	push   rbx
  4016e1:	call   0x403880
  4016e6:	sub    rsp,rax
  4016e9:	lea    rbx,[rsp+0x760]
  4016f1:	mov    r12,rdx
  4016f4:	lea    rdx,[rip+0x5915]        # 0x407010
  4016fb:	mov    rbp,r9
  4016fe:	mov    rdi,rcx
  401701:	mov    r13,r8
  401704:	mov    r8,rcx
  401707:	mov    rcx,rbx
  40170a:	call   0x404538
  40170f:	mov    rdx,rbx
  401712:	mov    rcx,rbp
  401715:	call   0x402178
  40171a:	test   eax,eax
  40171c:	je     0x4018bd
  401722:	mov    rcx,rbp
  401725:	call   0x4020f0
  40172a:	test   eax,eax
  40172c:	mov    esi,eax
  40172e:	je     0x4018e5
  401734:	mov    rcx,rbp
  401737:	call   0x402118
  40173c:	cmp    eax,0x2
  40173f:	jne    0x401734
  401741:	cmp    BYTE PTR [r12],0x0
  401746:	lea    rax,[rip+0x58bc]        # 0x407009
  40174d:	lea    r9,[rip+0x58b3]        # 0x407007
  401754:	lea    rdx,[rip+0x5910]        # 0x40706b
  40175b:	mov    QWORD PTR [rsp+0x20],r13
  401760:	mov    r8,r12
  401763:	mov    rcx,rbx
  401766:	cmove  r9,rax
  40176a:	call   0x404538
  40176f:	mov    rcx,rbp
  401772:	call   0x402120
  401777:	test   eax,eax
  401779:	mov    r13d,eax
  40177c:	jle    0x401860
  401782:	lea    r12,[rsp+0x30]
  401787:	lea    rdi,[rip+0x587c]        # 0x40700a
  40178e:	mov    esi,0x1
  401793:	lea    r15,[r12+0x4]
  401798:	lea    r14,[r12+0x62c]
  4017a0:	jmp    0x4017c4
  4017a2:	lea    rdx,[rip+0x58e2]        # 0x40708b
  4017a9:	mov    rcx,rbx
  4017ac:	add    esi,0x1
  4017af:	lea    rdi,[rip+0x58df]        # 0x407095
  4017b6:	call   0x402240
  4017bb:	cmp    r13d,esi
  4017be:	jl     0x401860
  4017c4:	mov    r8,r12
  4017c7:	mov    edx,esi
  4017c9:	mov    rcx,rbp
  4017cc:	mov    DWORD PTR [rsp+0x30],0x72c
  4017d4:	call   0x4020e8
  4017d9:	cmp    eax,0x1
  4017dc:	jne    0x4018e1
  4017e2:	mov    r8d,0x800
  4017e8:	mov    rdx,rdi
  4017eb:	mov    rcx,rbx
  4017ee:	call   0x402240
  4017f3:	mov    r8d,0x800
  4017f9:	mov    rdx,r15
  4017fc:	mov    rcx,rbx
  4017ff:	call   0x402240
  401804:	lea    rdx,[rip+0x5878]        # 0x407083
  40180b:	mov    r8d,0x800
  401811:	mov    rcx,rbx
  401814:	call   0x402240
  401819:	mov    r8d,0x800
  40181f:	mov    rdx,r14
  401822:	mov    rcx,rbx
  401825:	call   0x402240
  40182a:	cmp    BYTE PTR [rsp+0x64c],0x1
  401832:	mov    r8d,0x800
  401838:	jne    0x4017a2
  40183e:	lea    rdx,[rip+0x5840]        # 0x407085
  401845:	mov    rcx,rbx
  401848:	add    esi,0x1
  40184b:	lea    rdi,[rip+0x5843]        # 0x407095
  401852:	call   0x402240
  401857:	cmp    r13d,esi
  40185a:	jge    0x4017c4
  401860:	lea    rdx,[rip+0x5819]        # 0x407080
  401867:	mov    r8d,0x800
  40186d:	mov    rcx,rbx
  401870:	call   0x402240
  401875:	cmp    rax,0x7ff
  40187b:	ja     0x4018f6
  40187d:	mov    rcx,QWORD PTR [rsp+0xfd0]
  401885:	mov    rdx,rbx
  401888:	call   0x402178
  40188d:	test   eax,eax
  40188f:	je     0x4018bd
  401891:	mov    rcx,QWORD PTR [rsp+0xfd0]
  401899:	call   0x4020f0
  40189e:	test   eax,eax
  4018a0:	mov    esi,eax
  4018a2:	je     0x40191b
  4018a4:	mov    rcx,QWORD PTR [rsp+0xfd0]
  4018ac:	call   0x402118
  4018b1:	cmp    eax,0x2
  4018b4:	jne    0x4018a4
  4018b6:	mov    esi,0x1
  4018bb:	jmp    0x4018cb
  4018bd:	lea    rcx,[rip+0x577c]        # 0x407040
  4018c4:	xor    esi,esi
  4018c6:	call   0x404550
  4018cb:	mov    eax,esi
  4018cd:	add    rsp,0xf68
  4018d4:	pop    rbx
  4018d5:	pop    rsi
  4018d6:	pop    rdi
  4018d7:	pop    rbp
  4018d8:	pop    r12
  4018da:	pop    r13
  4018dc:	pop    r14
  4018de:	pop    r15
  4018e0:	ret    
  4018e1:	xor    esi,esi
  4018e3:	jmp    0x4018cb
  4018e5:	lea    rcx,[rip+0x5761]        # 0x40704d
  4018ec:	mov    rdx,rdi
  4018ef:	call   0x404560
  4018f4:	jmp    0x4018cb
  4018f6:	call   QWORD PTR [rip+0xac4c]        # 0x40c548
  4018fc:	lea    rcx,[rip+0x5795]        # 0x407098
  401903:	lea    r9,[rax+0x60]
  401907:	mov    r8d,0x31
  40190d:	mov    edx,0x1
  401912:	xor    esi,esi
  401914:	call   0x404588
  401919:	jmp    0x4018cb
  40191b:	lea    rcx,[rip+0x57ae]        # 0x4070d0
  401922:	call   0x404550
  401927:	jmp    0x4018cb
  401929:	nop    DWORD PTR [rax+0x0]
  401930:	push   r15
  401932:	push   r14
  401934:	push   r13
  401936:	push   r12
  401938:	push   rbp
  401939:	push   rdi
  40193a:	push   rsi
  40193b:	push   rbx
  40193c:	sub    rsp,0x8a8
  401943:	movaps XMMWORD PTR [rsp+0x890],xmm6
  40194b:	mov    rsi,r8
  40194e:	mov    r13,rcx
  401951:	mov    rbx,rdx
  401954:	mov    r8d,DWORD PTR [rcx+0x84]
  40195b:	test   r8d,r8d
  40195e:	jne    0x401b4f
  401964:	mov    ecx,DWORD PTR [r13+0x64]
  401968:	lea    rdi,[rsp+0x60]
  40196d:	test   ecx,ecx
  40196f:	je     0x4019b9
  401971:	mov    r8,QWORD PTR [r13+0x50]
  401975:	lea    rdx,[rip+0x5789]        # 0x407105
  40197c:	mov    rcx,rdi
  40197f:	call   0x404538
  401984:	mov    rdx,rdi
  401987:	mov    rcx,rsi
  40198a:	call   0x402178
  40198f:	test   eax,eax
  401991:	je     0x401b12
  401997:	mov    rcx,rsi
  40199a:	call   0x4020f0
  40199f:	test   eax,eax
  4019a1:	je     0x401b3f
  4019a7:	mov    rcx,rsi
  4019aa:	call   0x402118
  4019af:	test   eax,eax
  4019b1:	mov    ebp,eax
  4019b3:	je     0x401dab
  4019b9:	mov    r8,QWORD PTR [r13+0x28]
  4019bd:	lea    rdx,[rip+0x5777]        # 0x40713b
  4019c4:	mov    rcx,rdi
  4019c7:	call   0x404538
  4019cc:	mov    rdx,rdi
  4019cf:	mov    rcx,rbx
  4019d2:	call   0x402178
  4019d7:	test   eax,eax
  4019d9:	je     0x401b12
  4019df:	mov    rcx,rbx
  4019e2:	call   0x4020f0
  4019e7:	test   eax,eax
  4019e9:	je     0x401b3f
  4019ef:	mov    rcx,rbx
  4019f2:	call   0x402118
  4019f7:	cmp    eax,0x2
  4019fa:	je     0x401b60
  401a00:	mov    rcx,rbx
  401a03:	call   0x402120
  401a08:	test   eax,eax
  401a0a:	mov    edi,eax
  401a0c:	je     0x401dbc
  401a12:	mov    rdx,QWORD PTR [r13+0x50]
  401a16:	xor    r9d,r9d
  401a19:	xor    r8d,r8d
  401a1c:	mov    DWORD PTR [rsp+0x20],0x1
  401a24:	mov    rcx,rsi
  401a27:	call   0x402190
  401a2c:	test   eax,eax
  401a2e:	je     0x401c81
  401a34:	movsxd rdx,edi
  401a37:	mov    ecx,0x4
  401a3c:	call   0x4045b8
  401a41:	test   edi,edi
  401a43:	mov    QWORD PTR [rsp+0x30],rax
  401a48:	jle    0x401b95
  401a4e:	mov    r12,rax
  401a51:	xor    r14d,r14d
  401a54:	xor    ebp,ebp
  401a56:	lea    r15,[rsp+0x160]
  401a5e:	jmp    0x401a8c
  401a60:	cmp    eax,0x3a
  401a63:	jge    0x401a80
  401a65:	cmp    eax,0x2d
  401a68:	je     0x401a80
  401a6a:	jle    0x401cb7
  401a70:	cmp    eax,0x2f
  401a73:	jl     0x401ae8
  401a75:	cmp    eax,0x34
  401a78:	jle    0x401a80
  401a7a:	cmp    eax,0x38
  401a7d:	jne    0x401ae8
  401a7f:	nop
  401a80:	add    r12,0x4
  401a84:	cmp    edi,ebp
  401a86:	je     0x401d7b
  401a8c:	add    ebp,0x1
  401a8f:	mov    r8,r15
  401a92:	mov    rcx,rbx
  401a95:	mov    edx,ebp
  401a97:	mov    DWORD PTR [rsp+0x160],0x72c
  401aa2:	call   0x4020e8
  401aa7:	cmp    eax,0x1
  401aaa:	jne    0x401d74
  401ab0:	mov    edx,DWORD PTR [rsp+0x780]
  401ab7:	mov    rcx,rbx
  401aba:	test   edx,edx
  401abc:	mov    edx,ebp
  401abe:	cmovne r14d,eax
  401ac2:	call   0x402168
  401ac7:	cmp    eax,0x3e
  401aca:	mov    r8d,eax
  401acd:	mov    DWORD PTR [r12],eax
  401ad1:	jle    0x401a60
  401ad3:	cmp    eax,0x7a
  401ad6:	je     0x401a80
  401ad8:	jg     0x401c94
  401ade:	cmp    eax,0x6a
  401ae1:	je     0x401a80
  401ae3:	cmp    eax,0x6c
  401ae6:	je     0x401a80
  401ae8:	mov    DWORD PTR [rsp+0x30],r8d
  401aed:	call   QWORD PTR [rip+0xaa55]        # 0x40c548
  401af3:	mov    r8d,DWORD PTR [rsp+0x30]
  401af8:	lea    rcx,[rax+0x60]
  401afc:	lea    rdx,[rip+0x5675]        # 0x407178
  401b03:	call   0x4045a0
  401b08:	mov    ecx,0x1
  401b0d:	call   0x4045b0
  401b12:	lea    rcx,[rip+0x5527]        # 0x407040
  401b19:	xor    ebp,ebp
  401b1b:	call   0x404550
  401b20:	nop
  401b21:	movaps xmm6,XMMWORD PTR [rsp+0x890]
  401b29:	mov    eax,ebp
  401b2b:	add    rsp,0x8a8
  401b32:	pop    rbx
  401b33:	pop    rsi
  401b34:	pop    rdi
  401b35:	pop    rbp
  401b36:	pop    r12
  401b38:	pop    r13
  401b3a:	pop    r14
  401b3c:	pop    r15
  401b3e:	ret    
  401b3f:	lea    rcx,[rip+0x55d1]        # 0x407117
  401b46:	xor    ebp,ebp
  401b48:	call   0x404550
  401b4d:	jmp    0x401b21
  401b4f:	lea    rcx,[rip+0x559d]        # 0x4070f3
  401b56:	call   0x404550
  401b5b:	jmp    0x401964
  401b60:	mov    rdx,QWORD PTR [r13+0x50]
  401b64:	xor    r9d,r9d
  401b67:	xor    r8d,r8d
  401b6a:	mov    DWORD PTR [rsp+0x20],0x1
  401b72:	mov    rcx,rsi
  401b75:	call   0x402190
  401b7a:	test   eax,eax
  401b7c:	je     0x401c81
  401b82:	xor    edx,edx
  401b84:	mov    ecx,0x4
  401b89:	xor    edi,edi
  401b8b:	call   0x4045b8
  401b90:	mov    QWORD PTR [rsp+0x30],rax
  401b95:	lea    rcx,[rsp+0x40]
  401b9a:	xor    edx,edx
  401b9c:	xor    r14d,r14d
  401b9f:	call   0x4021c0
  401ba4:	mov    DWORD PTR [rsp+0x3c],0x0
  401bac:	mov    DWORD PTR [rsp+0x38],0x0
  401bb4:	mov    rcx,rbx
  401bb7:	call   0x402128
  401bbc:	cmp    eax,0xfffffffe
  401bbf:	je     0x401df5
  401bc5:	add    DWORD PTR [rsp+0x38],0x1
  401bca:	xor    ebp,ebp
  401bcc:	test   edi,edi
  401bce:	mov    r12,QWORD PTR [rsp+0x30]
  401bd3:	jg     0x401c4a
  401bd5:	jmp    0x401d10
  401bda:	nop    WORD PTR [rax+rax*1+0x0]
  401be0:	cmp    r8d,0x3a
  401be4:	jge    0x401c10
  401be6:	cmp    r8d,0x2d
  401bea:	je     0x401c10
  401bec:	jle    0x401d62
  401bf2:	cmp    r8d,0x2f
  401bf6:	jl     0x401ae8
  401bfc:	cmp    r8d,0x34
  401c00:	jle    0x401c10
  401c02:	cmp    r8d,0x38
  401c06:	jne    0x401ae8
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	mov    r8d,ebp
  401c13:	mov    rdx,r15
  401c16:	mov    rcx,rsi
  401c19:	call   0x4021a8
  401c1e:	test   r15,r15
  401c21:	je     0x401cf5
  401c27:	mov    edx,ebp
  401c29:	mov    rcx,rbx
  401c2c:	add    r12,0x4
  401c30:	call   0x402158
  401c35:	mov    r8d,ebp
  401c38:	mov    edx,eax
  401c3a:	mov    rcx,rsi
  401c3d:	call   0x4021b0
  401c42:	cmp    ebp,edi
  401c44:	je     0x401d10
  401c4a:	add    ebp,0x1
  401c4d:	mov    rcx,rbx
  401c50:	mov    edx,ebp
  401c52:	call   0x402160
  401c57:	mov    r8d,DWORD PTR [r12]
  401c5b:	mov    r15,rax
  401c5e:	cmp    r8d,0x3e
  401c62:	jle    0x401be0
  401c68:	cmp    r8d,0x7a
  401c6c:	je     0x401c10
  401c6e:	jg     0x401cd0
  401c70:	cmp    r8d,0x6a
  401c74:	je     0x401c10
  401c76:	cmp    r8d,0x6c
  401c7a:	je     0x401c10
  401c7c:	jmp    0x401ae8
  401c81:	lea    rcx,[rip+0x54d7]        # 0x40715f
  401c88:	xor    ebp,ebp
  401c8a:	call   0x404550
  401c8f:	jmp    0x401b21
  401c94:	cmp    eax,0x7f
  401c97:	je     0x401a80
  401c9d:	jl     0x401ae8
  401ca3:	lea    eax,[rax-0xbb]
  401ca9:	cmp    eax,0x1
  401cac:	jbe    0x401a80
  401cb2:	jmp    0x401ae8
  401cb7:	lea    eax,[rax-0x22]
  401cba:	cmp    eax,0x1
  401cbd:	jbe    0x401a80
  401cc3:	jmp    0x401ae8
  401cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	cmp    r8d,0x7f
  401cd4:	je     0x401c10
  401cda:	jl     0x401ae8
  401ce0:	lea    eax,[r8-0xbb]
  401ce7:	cmp    eax,0x1
  401cea:	jbe    0x401c10
  401cf0:	jmp    0x401ae8
  401cf5:	xor    edx,edx
  401cf7:	mov    r8d,ebp
  401cfa:	mov    rcx,rsi
  401cfd:	call   0x4021b0
  401d02:	add    r12,0x4
  401d06:	cmp    ebp,edi
  401d08:	jne    0x401c4a
  401d0e:	xchg   ax,ax
  401d10:	mov    rcx,rsi
  401d13:	call   0x402188
  401d18:	test   eax,eax
  401d1a:	mov    ebp,eax
  401d1c:	je     0x401dcf
  401d22:	add    r14d,0x1
  401d26:	cmp    DWORD PTR [r13+0x0],r14d
  401d2a:	jne    0x401bb4
  401d30:	mov    rcx,rsi
  401d33:	call   0x4021b8
  401d38:	cmp    eax,0xffffffff
  401d3b:	je     0x401ec9
  401d41:	add    DWORD PTR [rsp+0x3c],eax
  401d45:	lea    rcx,[rip+0x5474]        # 0x4071c0
  401d4c:	xor    r14d,r14d
  401d4f:	mov    edx,DWORD PTR [rsp+0x3c]
  401d53:	mov    r8d,edx
  401d56:	mov    edx,eax
  401d58:	call   0x404560
  401d5d:	jmp    0x401bb4
  401d62:	lea    eax,[r8-0x22]
  401d66:	cmp    eax,0x1
  401d69:	jbe    0x401c10
  401d6f:	jmp    0x401ae8
  401d74:	xor    ebp,ebp
  401d76:	jmp    0x401b21
  401d7b:	and    r14b,0x1
  401d7f:	je     0x401b95
  401d85:	cmp    DWORD PTR [r13+0x80],0x0
  401d8d:	je     0x401b95
  401d93:	mov    r8d,0x1
  401d99:	mov    edx,0x8
  401d9e:	mov    rcx,rsi
  401da1:	call   0x4021a0
  401da6:	jmp    0x401b95
  401dab:	lea    rcx,[rip+0x5376]        # 0x407128
  401db2:	call   0x404550
  401db7:	jmp    0x401b21
  401dbc:	lea    rcx,[rip+0x5389]        # 0x40714c
  401dc3:	xor    ebp,ebp
  401dc5:	call   0x404550
  401dca:	jmp    0x401b21
  401dcf:	call   QWORD PTR [rip+0xa773]        # 0x40c548
  401dd5:	lea    rcx,[rip+0x53bd]        # 0x407199
  401ddc:	lea    r9,[rax+0x60]
  401de0:	mov    r8d,0x16
  401de6:	mov    edx,0x1
  401deb:	call   0x404588
  401df0:	jmp    0x401b21
  401df5:	cmp    DWORD PTR [rsp+0x38],0x0
  401dfa:	je     0x401e11
  401dfc:	mov    rcx,rsi
  401dff:	call   0x402198
  401e04:	add    DWORD PTR [rsp+0x3c],eax
  401e08:	add    eax,0x1
  401e0b:	je     0x401edc
  401e11:	lea    rcx,[rsp+0x50]
  401e16:	xor    edx,edx
  401e18:	mov    ebp,0x1
  401e1d:	call   0x4021c0
  401e22:	cmp    DWORD PTR [r13+0x84],0x0
  401e2a:	mov    edx,DWORD PTR [rsp+0x50]
  401e2e:	mov    r8d,DWORD PTR [rsp+0x40]
  401e33:	mov    eax,DWORD PTR [rsp+0x54]
  401e37:	mov    ecx,DWORD PTR [rsp+0x44]
  401e3b:	je     0x401b21
  401e41:	pxor   xmm0,xmm0
  401e45:	sub    eax,ecx
  401e47:	sub    edx,r8d
  401e4a:	pxor   xmm6,xmm6
  401e4e:	mov    ecx,0xa
  401e53:	cvtsi2sd xmm0,eax
  401e57:	cvtsi2sd xmm6,edx
  401e5b:	divsd  xmm0,QWORD PTR [rip+0x5c15]        # 0x407a78
  401e63:	addsd  xmm6,xmm0
  401e67:	call   0x404558
  401e6c:	mov    edx,DWORD PTR [rsp+0x38]
  401e70:	lea    rcx,[rip+0x5385]        # 0x4071fc
  401e77:	call   0x404560
  401e7c:	mov    edx,DWORD PTR [rsp+0x3c]
  401e80:	lea    rcx,[rip+0x5390]        # 0x407217
  401e87:	call   0x404560
  401e8c:	movapd xmm1,xmm6
  401e90:	movq   rdx,xmm6
  401e95:	lea    rcx,[rip+0x5396]        # 0x407232
  401e9c:	call   0x404560
  401ea1:	pxor   xmm0,xmm0
  401ea5:	lea    rcx,[rip+0x53a1]        # 0x40724d
  401eac:	cvtsi2sd xmm0,DWORD PTR [rsp+0x3c]
  401eb2:	divsd  xmm0,xmm6
  401eb6:	movapd xmm1,xmm0
  401eba:	movq   rdx,xmm0
  401ebf:	call   0x404560
  401ec4:	jmp    0x401b21
  401ec9:	lea    rcx,[rip+0x52e0]        # 0x4071b0
  401ed0:	xor    ebp,ebp
  401ed2:	call   0x404550
  401ed7:	jmp    0x401b21
  401edc:	call   QWORD PTR [rip+0xa666]        # 0x40c548
  401ee2:	lea    rcx,[rip+0x52ff]        # 0x4071e8
  401ee9:	lea    r9,[rax+0x60]
  401eed:	mov    r8d,0x13
  401ef3:	mov    edx,0x1
  401ef8:	xor    ebp,ebp
  401efa:	call   0x404588
  401eff:	jmp    0x401b21
  401f04:	xchg   ax,ax
  401f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f10:	sub    rsp,0x28
  401f14:	mov    eax,edx
  401f16:	and    eax,0xfffffffd
  401f19:	cmp    eax,0x1645
  401f1e:	jne    0x401f30
  401f20:	xor    eax,eax
  401f22:	add    rsp,0x28
  401f26:	ret    
  401f27:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	mov    eax,r9d
  401f33:	lea    rcx,[rip+0x532e]        # 0x407268
  401f3a:	mov    r9d,r8d
  401f3d:	mov    r8d,eax
  401f40:	call   0x404560
  401f45:	mov    rax,QWORD PTR [rsp+0x58]
  401f4a:	cmp    BYTE PTR [rax],0x0
  401f4d:	jne    0x401f90
  401f4f:	mov    rax,QWORD PTR [rsp+0x60]
  401f54:	cmp    BYTE PTR [rax],0x0
  401f57:	jne    0x401fa9
  401f59:	mov    eax,DWORD PTR [rsp+0x68]
  401f5d:	test   eax,eax
  401f5f:	jle    0x401f71
  401f61:	mov    edx,DWORD PTR [rsp+0x68]
  401f65:	lea    rcx,[rip+0x5338]        # 0x4072a4
  401f6c:	call   0x404560
  401f71:	mov    rdx,QWORD PTR [rsp+0x50]
  401f76:	lea    rcx,[rip+0x532f]        # 0x4072ac
  401f7d:	call   0x404560
  401f82:	xor    eax,eax
  401f84:	add    rsp,0x28
  401f88:	ret    
  401f89:	nop    DWORD PTR [rax+0x0]
  401f90:	lea    rcx,[rip+0x52ee]        # 0x407285
  401f97:	mov    rdx,rax
  401f9a:	call   0x404560
  401f9f:	mov    rax,QWORD PTR [rsp+0x60]
  401fa4:	cmp    BYTE PTR [rax],0x0
  401fa7:	je     0x401f59
  401fa9:	lea    rcx,[rip+0x52e3]        # 0x407293
  401fb0:	mov    rdx,rax
  401fb3:	call   0x404560
  401fb8:	jmp    0x401f59
  401fba:	nop    WORD PTR [rax+rax*1+0x0]
  401fc0:	push   rsi
  401fc1:	push   rbx
  401fc2:	sub    rsp,0x38
  401fc6:	test   r8d,r8d
  401fc9:	mov    ebx,edx
  401fcb:	jne    0x402014
  401fcd:	mov    rbx,QWORD PTR [rip+0xa574]        # 0x40c548
  401fd4:	call   rbx
  401fd6:	lea    rcx,[rip+0x52ec]        # 0x4072c9
  401fdd:	lea    r9,[rax+0x60]
  401fe1:	mov    r8d,0x13
  401fe7:	mov    edx,0x1
  401fec:	call   0x404588
  401ff1:	call   rbx
  401ff3:	mov    r8,QWORD PTR [rsp+0x70]
  401ff8:	lea    rcx,[rax+0x60]
  401ffc:	lea    rdx,[rip+0x52da]        # 0x4072dd
  402003:	call   0x4045a0
  402008:	mov    eax,0x2
  40200d:	add    rsp,0x38
  402011:	pop    rbx
  402012:	pop    rsi
  402013:	ret    
  402014:	mov    DWORD PTR [rsp+0x2c],r8d
  402019:	mov    rsi,QWORD PTR [rip+0xa528]        # 0x40c548
  402020:	call   rsi
  402022:	mov    r8d,DWORD PTR [rsp+0x2c]
  402027:	lea    rcx,[rax+0x60]
  40202b:	lea    rdx,[rip+0x5280]        # 0x4072b2
  402032:	mov    r9d,ebx
  402035:	call   0x4045a0
  40203a:	call   rsi
  40203c:	mov    r8,QWORD PTR [rsp+0x70]
  402041:	lea    rcx,[rax+0x60]
  402045:	lea    rdx,[rip+0x5278]        # 0x4072c4
  40204c:	call   0x4045a0
  402051:	mov    eax,0x2
  402056:	add    rsp,0x38
  40205a:	pop    rbx
  40205b:	pop    rsi
  40205c:	ret    
  40205d:	nop    DWORD PTR [rax]
  402060:	push   rsi
  402061:	push   rbx
  402062:	sub    rsp,0x48
  402066:	test   edx,edx
  402068:	js     0x40209e
  40206a:	lea    rsi,[rsp+0x20]
  40206f:	mov    r8d,edx
  402072:	lea    rdx,[rip+0x5268]        # 0x4072e1
  402079:	mov    rbx,rcx
  40207c:	mov    rcx,rsi
  40207f:	call   0x404538
  402084:	or     r9d,0xffffffff
  402088:	mov    rcx,rbx
  40208b:	mov    r8,rsi
  40208e:	mov    edx,0x11
  402093:	call   0x4020f8
  402098:	test   eax,eax
  40209a:	mov    ebx,eax
  40209c:	je     0x4020ac
  40209e:	mov    ebx,0x1
  4020a3:	mov    eax,ebx
  4020a5:	add    rsp,0x48
  4020a9:	pop    rbx
  4020aa:	pop    rsi
  4020ab:	ret    
  4020ac:	call   QWORD PTR [rip+0xa496]        # 0x40c548
  4020b2:	lea    rcx,[rip+0x522b]        # 0x4072e4
  4020b9:	lea    r9,[rax+0x60]
  4020bd:	mov    r8d,0x10
  4020c3:	mov    edx,0x1
  4020c8:	call   0x404588
  4020cd:	jmp    0x4020a3
  4020cf:	nop
  4020d0:	jmp    QWORD PTR [rip+0xa37a]        # 0x40c450
  4020d6:	nop
  4020d7:	nop
  4020d8:	jmp    QWORD PTR [rip+0xa36a]        # 0x40c448
  4020de:	nop
  4020df:	nop
  4020e0:	jmp    QWORD PTR [rip+0xa35a]        # 0x40c440
  4020e6:	nop
  4020e7:	nop
  4020e8:	jmp    QWORD PTR [rip+0xa34a]        # 0x40c438
  4020ee:	nop
  4020ef:	nop
  4020f0:	jmp    QWORD PTR [rip+0xa33a]        # 0x40c430
  4020f6:	nop
  4020f7:	nop
  4020f8:	jmp    QWORD PTR [rip+0xa32a]        # 0x40c428
  4020fe:	nop
  4020ff:	nop
  402100:	jmp    QWORD PTR [rip+0xa31a]        # 0x40c420
  402106:	nop
  402107:	nop
  402108:	jmp    QWORD PTR [rip+0xa30a]        # 0x40c418
  40210e:	nop
  40210f:	nop
  402110:	jmp    QWORD PTR [rip+0xa2fa]        # 0x40c410
  402116:	nop
  402117:	nop
  402118:	jmp    QWORD PTR [rip+0xa2ea]        # 0x40c408
  40211e:	nop
  40211f:	nop
  402120:	jmp    QWORD PTR [rip+0xa2da]        # 0x40c400
  402126:	nop
  402127:	nop
  402128:	jmp    QWORD PTR [rip+0xa2ca]        # 0x40c3f8
  40212e:	nop
  40212f:	nop
  402130:	jmp    QWORD PTR [rip+0xa2ba]        # 0x40c3f0
  402136:	nop
  402137:	nop
  402138:	jmp    QWORD PTR [rip+0xa2aa]        # 0x40c3e8
  40213e:	nop
  40213f:	nop
  402140:	jmp    QWORD PTR [rip+0xa29a]        # 0x40c3e0
  402146:	nop
  402147:	nop
  402148:	jmp    QWORD PTR [rip+0xa28a]        # 0x40c3d8
  40214e:	nop
  40214f:	nop
  402150:	jmp    QWORD PTR [rip+0xa27a]        # 0x40c3d0
  402156:	nop
  402157:	nop
  402158:	jmp    QWORD PTR [rip+0xa26a]        # 0x40c3c8
  40215e:	nop
  40215f:	nop
  402160:	jmp    QWORD PTR [rip+0xa25a]        # 0x40c3c0
  402166:	nop
  402167:	nop
  402168:	jmp    QWORD PTR [rip+0xa24a]        # 0x40c3b8
  40216e:	nop
  40216f:	nop
  402170:	jmp    QWORD PTR [rip+0xa23a]        # 0x40c3b0
  402176:	nop
  402177:	nop
  402178:	jmp    QWORD PTR [rip+0xa22a]        # 0x40c3a8
  40217e:	nop
  40217f:	nop
  402180:	jmp    QWORD PTR [rip+0xa21a]        # 0x40c3a0
  402186:	nop
  402187:	nop
  402188:	jmp    QWORD PTR [rip+0xa20a]        # 0x40c398
  40218e:	nop
  40218f:	nop
  402190:	jmp    QWORD PTR [rip+0xa1fa]        # 0x40c390
  402196:	nop
  402197:	nop
  402198:	jmp    QWORD PTR [rip+0xa1ea]        # 0x40c388
  40219e:	nop
  40219f:	nop
  4021a0:	jmp    QWORD PTR [rip+0xa1da]        # 0x40c380
  4021a6:	nop
  4021a7:	nop
  4021a8:	jmp    QWORD PTR [rip+0xa1ca]        # 0x40c378
  4021ae:	nop
  4021af:	nop
  4021b0:	jmp    QWORD PTR [rip+0xa1ba]        # 0x40c370
  4021b6:	nop
  4021b7:	nop
  4021b8:	jmp    QWORD PTR [rip+0xa1aa]        # 0x40c368
  4021be:	nop
  4021bf:	nop
  4021c0:	push   rbx
  4021c1:	sub    rsp,0x30
  4021c5:	test   rcx,rcx
  4021c8:	mov    rbx,rcx
  4021cb:	je     0x40222d
  4021cd:	lea    rcx,[rsp+0x20]
  4021d2:	call   QWORD PTR [rip+0xa2c0]        # 0x40c498
  4021d8:	mov    r8d,DWORD PTR [rsp+0x24]
  4021dd:	mov    eax,DWORD PTR [rsp+0x20]
  4021e1:	movabs rdx,0xd6bf94d5e57a42bd
  4021eb:	shl    r8,0x20
  4021ef:	or     r8,rax
  4021f2:	movabs rax,0xfe624e212ac18000
  4021fc:	add    r8,rax
  4021ff:	mov    rax,r8
  402202:	mul    rdx
  402205:	shr    rdx,0x17
  402209:	mov    DWORD PTR [rbx],edx
  40220b:	imul   rdx,rdx,0x989680
  402212:	sub    r8,rdx
  402215:	mov    edx,0xcccccccd
  40221a:	mov    eax,r8d
  40221d:	mul    edx
  40221f:	xor    eax,eax
  402221:	shr    edx,0x3
  402224:	mov    DWORD PTR [rbx+0x4],edx
  402227:	add    rsp,0x30
  40222b:	pop    rbx
  40222c:	ret    
  40222d:	call   QWORD PTR [rip+0xa34d]        # 0x40c580
  402233:	mov    DWORD PTR [rax],0x16
  402239:	mov    eax,0xffffffff
  40223e:	jmp    0x402227
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rdi
  402244:	push   rsi
  402245:	push   rbx
  402246:	sub    rsp,0x20
  40224a:	mov    r12,rdx
  40224d:	mov    rsi,r8
  402250:	mov    rbp,rcx
  402253:	call   0x404528
  402258:	mov    rcx,r12
  40225b:	mov    rbx,rax
  40225e:	call   0x404528
  402263:	test   rsi,rsi
  402266:	lea    rdi,[rax+rbx*1]
  40226a:	je     0x40227e
  40226c:	lea    r8,[rsi-0x1]
  402270:	lea    rdi,[rax+rbx*1]
  402274:	cmp    r8,rdi
  402277:	jae    0x402290
  402279:	cmp    rbx,r8
  40227c:	jb     0x4022b0
  40227e:	mov    rax,rdi
  402281:	add    rsp,0x20
  402285:	pop    rbx
  402286:	pop    rsi
  402287:	pop    rdi
  402288:	pop    rbp
  402289:	pop    r12
  40228b:	ret    
  40228c:	nop    DWORD PTR [rax+0x0]
  402290:	lea    rcx,[rbp+rbx*1+0x0]
  402295:	lea    r8,[rax+0x1]
  402299:	mov    rdx,r12
  40229c:	call   0x404570
  4022a1:	mov    rax,rdi
  4022a4:	add    rsp,0x20
  4022a8:	pop    rbx
  4022a9:	pop    rsi
  4022aa:	pop    rdi
  4022ab:	pop    rbp
  4022ac:	pop    r12
  4022ae:	ret    
  4022af:	nop
  4022b0:	lea    rcx,[rbp+rbx*1+0x0]
  4022b5:	sub    r8,rbx
  4022b8:	mov    rdx,r12
  4022bb:	call   0x404570
  4022c0:	mov    rax,rdi
  4022c3:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  4022c8:	add    rsp,0x20
  4022cc:	pop    rbx
  4022cd:	pop    rsi
  4022ce:	pop    rdi
  4022cf:	pop    rbp
  4022d0:	pop    r12
  4022d2:	ret    
  4022d3:	nop
  4022d4:	nop
  4022d5:	nop
  4022d6:	nop
  4022d7:	nop
  4022d8:	nop
  4022d9:	nop
  4022da:	nop
  4022db:	nop
  4022dc:	nop
  4022dd:	nop
  4022de:	nop
  4022df:	nop
  4022e0:	push   rsi
  4022e1:	push   rbx
  4022e2:	sub    rsp,0x28
  4022e6:	mov    rbx,QWORD PTR [rcx]
  4022e9:	test   rbx,rbx
  4022ec:	je     0x402355
  4022ee:	movzx  eax,BYTE PTR [rdx]
  4022f1:	mov    rsi,rcx
  4022f4:	test   al,al
  4022f6:	je     0x40232b
  4022f8:	cmp    BYTE PTR [rdx+0x1],0x0
  4022fc:	je     0x402320
  4022fe:	mov    rcx,rbx
  402301:	call   0x404518
  402306:	test   rax,rax
  402309:	je     0x40232b
  40230b:	mov    BYTE PTR [rax],0x0
  40230e:	add    rax,0x1
  402312:	mov    QWORD PTR [rsi],rax
  402315:	mov    rax,rbx
  402318:	add    rsp,0x28
  40231c:	pop    rbx
  40231d:	pop    rsi
  40231e:	ret    
  40231f:	nop
  402320:	movzx  edx,BYTE PTR [rbx]
  402323:	cmp    al,dl
  402325:	je     0x402350
  402327:	test   dl,dl
  402329:	jne    0x402340
  40232b:	mov    rax,rbx
  40232e:	mov    QWORD PTR [rsi],0x0
  402335:	add    rsp,0x28
  402339:	pop    rbx
  40233a:	pop    rsi
  40233b:	ret    
  40233c:	nop    DWORD PTR [rax+0x0]
  402340:	lea    rcx,[rbx+0x1]
  402344:	movsx  edx,al
  402347:	call   0x404530
  40234c:	jmp    0x402306
  40234e:	xchg   ax,ax
  402350:	mov    rax,rbx
  402353:	jmp    0x40230b
  402355:	xor    eax,eax
  402357:	jmp    0x402318
  402359:	nop
  40235a:	nop
  40235b:	nop
  40235c:	nop
  40235d:	nop
  40235e:	nop
  40235f:	nop
  402360:	push   rbx
  402361:	sub    rsp,0x30
  402365:	mov    rbx,rcx
  402368:	mov    rcx,QWORD PTR [rip+0x96a1]        # 0x40ba10
  40236f:	call   0x402910
  402374:	cmp    rax,0xffffffffffffffff
  402378:	mov    QWORD PTR [rsp+0x20],rax
  40237d:	je     0x4023f5
  40237f:	mov    ecx,0x8
  402384:	call   0x4045e8
  402389:	mov    rcx,QWORD PTR [rip+0x9680]        # 0x40ba10
  402390:	call   0x402910
  402395:	mov    rcx,QWORD PTR [rip+0x967c]        # 0x40ba18
  40239c:	mov    QWORD PTR [rsp+0x20],rax
  4023a1:	call   0x402910
  4023a6:	lea    rdx,[rsp+0x20]
  4023ab:	lea    r8,[rsp+0x28]
  4023b0:	mov    rcx,rbx
  4023b3:	mov    QWORD PTR [rsp+0x28],rax
  4023b8:	call   0x404638
  4023bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4023c2:	mov    rbx,rax
  4023c5:	call   0x402920
  4023ca:	mov    rcx,QWORD PTR [rsp+0x28]
  4023cf:	mov    QWORD PTR [rip+0x963a],rax        # 0x40ba10
  4023d6:	call   0x402920
  4023db:	mov    ecx,0x8
  4023e0:	mov    QWORD PTR [rip+0x9631],rax        # 0x40ba18
  4023e7:	call   0x4045d0
  4023ec:	mov    rax,rbx
  4023ef:	add    rsp,0x30
  4023f3:	pop    rbx
  4023f4:	ret    
  4023f5:	mov    rax,QWORD PTR [rip+0x5af4]        # 0x407ef0
  4023fc:	mov    rcx,rbx
  4023ff:	call   QWORD PTR [rax]
  402401:	add    rsp,0x30
  402405:	pop    rbx
  402406:	ret    
  402407:	nop    WORD PTR [rax+rax*1+0x0]
  402410:	sub    rsp,0x28
  402414:	call   0x402360
  402419:	test   rax,rax
  40241c:	sete   al
  40241f:	movzx  eax,al
  402422:	neg    eax
  402424:	add    rsp,0x28
  402428:	ret    
  402429:	nop
  40242a:	nop
  40242b:	nop
  40242c:	nop
  40242d:	nop
  40242e:	nop
  40242f:	nop
  402430:	sub    rsp,0x28
  402434:	mov    rax,QWORD PTR [rip+0x3bd5]        # 0x406010
  40243b:	mov    rax,QWORD PTR [rax]
  40243e:	test   rax,rax
  402441:	je     0x402460
  402443:	call   rax
  402445:	mov    rax,QWORD PTR [rip+0x3bc4]        # 0x406010
  40244c:	lea    rdx,[rax+0x8]
  402450:	mov    rax,QWORD PTR [rax+0x8]
  402454:	mov    QWORD PTR [rip+0x3bb5],rdx        # 0x406010
  40245b:	test   rax,rax
  40245e:	jne    0x402443
  402460:	add    rsp,0x28
  402464:	ret    
  402465:	nop
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	push   rsi
  402471:	push   rbx
  402472:	sub    rsp,0x28
  402476:	mov    rsi,QWORD PTR [rip+0x59e3]        # 0x407e60
  40247d:	mov    rax,QWORD PTR [rsi]
  402480:	cmp    eax,0xffffffff
  402483:	mov    ebx,eax
  402485:	je     0x4024b0
  402487:	test   ebx,ebx
  402489:	je     0x40249a
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]
  402490:	mov    eax,ebx
  402492:	call   QWORD PTR [rsi+rax*8]
  402495:	sub    ebx,0x1
  402498:	jne    0x402490
  40249a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402430
  4024a1:	add    rsp,0x28
  4024a5:	pop    rbx
  4024a6:	pop    rsi
  4024a7:	jmp    0x402410
  4024ac:	nop    DWORD PTR [rax+0x0]
  4024b0:	xor    ebx,ebx
  4024b2:	jmp    0x4024b6
  4024b4:	mov    ebx,eax
  4024b6:	lea    edx,[rbx+0x1]
  4024b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4024be:	mov    rax,rdx
  4024c1:	jne    0x4024b4
  4024c3:	jmp    0x402487
  4024c5:	nop
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	mov    eax,DWORD PTR [rip+0x8b5a]        # 0x40b030
  4024d6:	test   eax,eax
  4024d8:	je     0x4024e0
  4024da:	repz ret 
  4024dc:	nop    DWORD PTR [rax+0x0]
  4024e0:	mov    DWORD PTR [rip+0x8b46],0x1        # 0x40b030
  4024ea:	jmp    0x402470
  4024ec:	nop
  4024ed:	nop
  4024ee:	nop
  4024ef:	nop
  4024f0:	mov    rax,QWORD PTR [rip+0xa059]        # 0x40c550
  4024f7:	rex.W jmp rax
  4024fa:	nop
  4024fb:	nop
  4024fc:	nop
  4024fd:	nop
  4024fe:	nop
  4024ff:	nop
  402500:	xor    eax,eax
  402502:	ret    
  402503:	nop
  402504:	nop
  402505:	nop
  402506:	nop
  402507:	nop
  402508:	nop
  402509:	nop
  40250a:	nop
  40250b:	nop
  40250c:	nop
  40250d:	nop
  40250e:	nop
  40250f:	nop
  402510:	push   r12
  402512:	push   rbp
  402513:	push   rdi
  402514:	push   rsi
  402515:	push   rbx
  402516:	sub    rsp,0x40
  40251a:	mov    rbx,QWORD PTR [rip+0x3b7f]        # 0x4060a0
  402521:	movabs rax,0x2b992ddfa232
  40252b:	mov    QWORD PTR [rsp+0x20],0x0
  402534:	cmp    rbx,rax
  402537:	je     0x402550
  402539:	not    rbx
  40253c:	mov    QWORD PTR [rip+0x3b6d],rbx        # 0x4060b0
  402543:	add    rsp,0x40
  402547:	pop    rbx
  402548:	pop    rsi
  402549:	pop    rdi
  40254a:	pop    rbp
  40254b:	pop    r12
  40254d:	ret    
  40254e:	xchg   ax,ax
  402550:	lea    rcx,[rsp+0x20]
  402555:	call   QWORD PTR [rip+0x9f3d]        # 0x40c498
  40255b:	mov    r12,QWORD PTR [rsp+0x20]
  402560:	call   QWORD PTR [rip+0x9f12]        # 0x40c478
  402566:	mov    ebp,eax
  402568:	call   QWORD PTR [rip+0x9f12]        # 0x40c480
  40256e:	mov    edi,eax
  402570:	call   QWORD PTR [rip+0x9f2a]        # 0x40c4a0
  402576:	lea    rcx,[rsp+0x30]
  40257b:	mov    esi,eax
  40257d:	call   QWORD PTR [rip+0x9f35]        # 0x40c4b8
  402583:	xor    r12,QWORD PTR [rsp+0x30]
  402588:	mov    edx,edi
  40258a:	movabs rax,0xffffffffffff
  402594:	xor    rbp,r12
  402597:	mov    rdi,rbp
  40259a:	xor    rdi,rdx
  40259d:	mov    edx,esi
  40259f:	xor    rdi,rdx
  4025a2:	mov    rsi,rdi
  4025a5:	and    rsi,rax
  4025a8:	cmp    rsi,rbx
  4025ab:	je     0x4025d0
  4025ad:	mov    rax,rsi
  4025b0:	not    rax
  4025b3:	mov    QWORD PTR [rip+0x3ae6],rsi        # 0x4060a0
  4025ba:	mov    QWORD PTR [rip+0x3aef],rax        # 0x4060b0
  4025c1:	add    rsp,0x40
  4025c5:	pop    rbx
  4025c6:	pop    rsi
  4025c7:	pop    rdi
  4025c8:	pop    rbp
  4025c9:	pop    r12
  4025cb:	ret    
  4025cc:	nop    DWORD PTR [rax+0x0]
  4025d0:	movabs rax,0xffffd466d2205dcc
  4025da:	movabs rsi,0x2b992ddfa233
  4025e4:	jmp    0x4025b3
  4025e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025f0:	push   rbp
  4025f1:	push   rsi
  4025f2:	push   rbx
  4025f3:	mov    rbp,rsp
  4025f6:	sub    rsp,0x70
  4025fa:	mov    rsi,rcx
  4025fd:	lea    rcx,[rip+0x8a7c]        # 0x40b080
  402604:	call   QWORD PTR [rip+0x9ebe]        # 0x40c4c8
  40260a:	mov    rbx,QWORD PTR [rip+0x8b67]        # 0x40b178
  402611:	xor    r8d,r8d
  402614:	lea    rdx,[rbp-0x28]
  402618:	mov    rcx,rbx
  40261b:	call   QWORD PTR [rip+0x9eaf]        # 0x40c4d0
  402621:	test   rax,rax
  402624:	mov    r9,rax
  402627:	je     0x4026d0
  40262d:	lea    rax,[rbp-0x20]
  402631:	mov    QWORD PTR [rsp+0x38],0x0
  40263a:	mov    r8,rbx
  40263d:	mov    rdx,QWORD PTR [rbp-0x28]
  402641:	xor    ecx,ecx
  402643:	mov    QWORD PTR [rsp+0x30],rax
  402648:	lea    rax,[rbp-0x18]
  40264c:	mov    QWORD PTR [rsp+0x28],rax
  402651:	lea    rax,[rip+0x8a28]        # 0x40b080
  402658:	mov    QWORD PTR [rsp+0x20],rax
  40265d:	call   QWORD PTR [rip+0x9e75]        # 0x40c4d8
  402663:	mov    rax,QWORD PTR [rip+0x8b0e]        # 0x40b178
  40266a:	xor    ecx,ecx
  40266c:	mov    QWORD PTR [rip+0x8a8d],rsi        # 0x40b100
  402673:	mov    DWORD PTR [rip+0x8f03],0xc0000409        # 0x40b580
  40267d:	mov    DWORD PTR [rip+0x8efd],0x1        # 0x40b584
  402687:	mov    QWORD PTR [rip+0x8f02],rax        # 0x40b590
  40268e:	mov    rax,QWORD PTR [rip+0x3a0b]        # 0x4060a0
  402695:	mov    QWORD PTR [rbp-0x10],rax
  402699:	mov    rax,QWORD PTR [rip+0x3a10]        # 0x4060b0
  4026a0:	mov    QWORD PTR [rbp-0x8],rax
  4026a4:	call   QWORD PTR [rip+0x9e36]        # 0x40c4e0
  4026aa:	lea    rcx,[rip+0x53cf]        # 0x407a80
  4026b1:	call   QWORD PTR [rip+0x9e49]        # 0x40c500
  4026b7:	call   QWORD PTR [rip+0x9db3]        # 0x40c470
  4026bd:	mov    edx,0xc0000409
  4026c2:	mov    rcx,rax
  4026c5:	call   QWORD PTR [rip+0x9e25]        # 0x40c4f0
  4026cb:	call   0x4045c8
  4026d0:	mov    rax,QWORD PTR [rbp+0x18]
  4026d4:	mov    QWORD PTR [rip+0x8a9d],rax        # 0x40b178
  4026db:	lea    rax,[rbp+0x8]
  4026df:	mov    QWORD PTR [rip+0x8a32],rax        # 0x40b118
  4026e6:	jmp    0x402663
  4026eb:	nop
  4026ec:	nop
  4026ed:	nop
  4026ee:	nop
  4026ef:	nop
  4026f0:	sub    rsp,0x28
  4026f4:	test   edx,edx
  4026f6:	je     0x402710
  4026f8:	cmp    edx,0x3
  4026fb:	je     0x402710
  4026fd:	mov    eax,0x1
  402702:	add    rsp,0x28
  402706:	ret    
  402707:	nop    WORD PTR [rax+rax*1+0x0]
  402710:	call   0x403400
  402715:	mov    eax,0x1
  40271a:	add    rsp,0x28
  40271e:	ret    
  40271f:	nop
  402720:	push   rsi
  402721:	push   rbx
  402722:	sub    rsp,0x28
  402726:	mov    rax,QWORD PTR [rip+0x5713]        # 0x407e40
  40272d:	cmp    DWORD PTR [rax],0x2
  402730:	je     0x402738
  402732:	mov    DWORD PTR [rax],0x2
  402738:	cmp    edx,0x2
  40273b:	je     0x402750
  40273d:	cmp    edx,0x1
  402740:	je     0x402782
  402742:	mov    eax,0x1
  402747:	add    rsp,0x28
  40274b:	pop    rbx
  40274c:	pop    rsi
  40274d:	ret    
  40274e:	xchg   ax,ax
  402750:	lea    rbx,[rip+0xa909]        # 0x40d060
  402757:	lea    rsi,[rip+0xa902]        # 0x40d060
  40275e:	cmp    rbx,rsi
  402761:	je     0x402742
  402763:	mov    rax,QWORD PTR [rbx]
  402766:	test   rax,rax
  402769:	je     0x40276d
  40276b:	call   rax
  40276d:	add    rbx,0x8
  402771:	cmp    rbx,rsi
  402774:	jne    0x402763
  402776:	mov    eax,0x1
  40277b:	add    rsp,0x28
  40277f:	pop    rbx
  402780:	pop    rsi
  402781:	ret    
  402782:	call   0x403400
  402787:	jmp    0x402742
  402789:	nop    DWORD PTR [rax+0x0]
  402790:	xor    eax,eax
  402792:	ret    
  402793:	nop
  402794:	nop
  402795:	nop
  402796:	nop
  402797:	nop
  402798:	nop
  402799:	nop
  40279a:	nop
  40279b:	nop
  40279c:	nop
  40279d:	nop
  40279e:	nop
  40279f:	nop
  4027a0:	sub    rsp,0x58
  4027a4:	mov    rax,QWORD PTR [rip+0x8eb5]        # 0x40b660
  4027ab:	test   rax,rax
  4027ae:	je     0x4027dc
  4027b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4027b9:	mov    DWORD PTR [rsp+0x20],ecx
  4027bd:	lea    rcx,[rsp+0x20]
  4027c2:	mov    QWORD PTR [rsp+0x28],rdx
  4027c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4027cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  4027d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4027d9:	call   rax
  4027db:	nop
  4027dc:	add    rsp,0x58
  4027e0:	ret    
  4027e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	mov    QWORD PTR [rip+0x8e69],rcx        # 0x40b660
  4027f7:	jmp    0x404610
  4027fc:	nop    DWORD PTR [rax+0x0]
  402800:	push   rsi
  402801:	push   rbx
  402802:	sub    rsp,0x78
  402806:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40280b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402810:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402816:	cmp    DWORD PTR [rcx],0x6
  402819:	ja     0x4028f0
  40281f:	mov    edx,DWORD PTR [rcx]
  402821:	lea    rax,[rip+0x539c]        # 0x407bc4
  402828:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40282c:	add    rax,rdx
  40282f:	jmp    rax
  402831:	lea    rbx,[rip+0x5268]        # 0x407aa0
  402838:	nop    DWORD PTR [rax+rax*1+0x0]
  402840:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402846:	mov    rsi,QWORD PTR [rcx+0x8]
  40284a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40284f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402854:	call   0x404628
  402859:	movsd  QWORD PTR [rsp+0x30],xmm8
  402860:	lea    rcx,[rax+0x60]
  402864:	lea    rdx,[rip+0x532d]        # 0x407b98
  40286b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402871:	mov    r9,rsi
  402874:	mov    r8,rbx
  402877:	movsd  QWORD PTR [rsp+0x20],xmm6
  40287d:	call   0x4045a0
  402882:	nop
  402883:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402888:	xor    eax,eax
  40288a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40288f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402895:	add    rsp,0x78
  402899:	pop    rbx
  40289a:	pop    rsi
  40289b:	ret    
  40289c:	nop    DWORD PTR [rax+0x0]
  4028a0:	lea    rbx,[rip+0x5218]        # 0x407abf
  4028a7:	jmp    0x402840
  4028a9:	nop    DWORD PTR [rax+0x0]
  4028b0:	lea    rbx,[rip+0x5229]        # 0x407ae0
  4028b7:	jmp    0x402840
  4028b9:	nop    DWORD PTR [rax+0x0]
  4028c0:	lea    rbx,[rip+0x5289]        # 0x407b50
  4028c7:	jmp    0x402840
  4028cc:	nop    DWORD PTR [rax+0x0]
  4028d0:	lea    rbx,[rip+0x5251]        # 0x407b28
  4028d7:	jmp    0x402840
  4028dc:	nop    DWORD PTR [rax+0x0]
  4028e0:	lea    rbx,[rip+0x5219]        # 0x407b00
  4028e7:	jmp    0x402840
  4028ec:	nop    DWORD PTR [rax+0x0]
  4028f0:	lea    rbx,[rip+0x528f]        # 0x407b86
  4028f7:	jmp    0x402840
  4028fc:	nop
  4028fd:	nop
  4028fe:	nop
  4028ff:	nop
  402900:	fninit 
  402902:	ret    
  402903:	nop
  402904:	nop
  402905:	nop
  402906:	nop
  402907:	nop
  402908:	nop
  402909:	nop
  40290a:	nop
  40290b:	nop
  40290c:	nop
  40290d:	nop
  40290e:	nop
  40290f:	nop
  402910:	mov    rax,rcx
  402913:	ret    
  402914:	xchg   ax,ax
  402916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402920:	mov    rax,rcx
  402923:	ret    
  402924:	nop
  402925:	nop
  402926:	nop
  402927:	nop
  402928:	nop
  402929:	nop
  40292a:	nop
  40292b:	nop
  40292c:	nop
  40292d:	nop
  40292e:	nop
  40292f:	nop
  402930:	push   rsi
  402931:	push   rbx
  402932:	sub    rsp,0x38
  402936:	lea    rax,[rsp+0x58]
  40293b:	mov    rbx,rcx
  40293e:	mov    QWORD PTR [rsp+0x58],rdx
  402943:	mov    QWORD PTR [rsp+0x60],r8
  402948:	mov    QWORD PTR [rsp+0x68],r9
  40294d:	mov    QWORD PTR [rsp+0x28],rax
  402952:	call   0x404628
  402957:	lea    rcx,[rip+0x5282]        # 0x407be0
  40295e:	lea    r9,[rax+0x60]
  402962:	mov    r8d,0x1b
  402968:	mov    edx,0x1
  40296d:	call   0x404588
  402972:	mov    rsi,QWORD PTR [rsp+0x28]
  402977:	call   0x404628
  40297c:	lea    rcx,[rax+0x60]
  402980:	mov    rdx,rbx
  402983:	mov    r8,rsi
  402986:	call   0x404510
  40298b:	call   0x4045c8
  402990:	nop
  402991:	nop    DWORD PTR [rax+rax*1+0x0]
  402996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029a0:	push   r13
  4029a2:	push   r12
  4029a4:	push   rbp
  4029a5:	push   rdi
  4029a6:	push   rsi
  4029a7:	push   rbx
  4029a8:	sub    rsp,0x58
  4029ac:	movsxd rbp,DWORD PTR [rip+0x8cd1]        # 0x40b684
  4029b3:	mov    rbx,rcx
  4029b6:	mov    rsi,rdx
  4029b9:	mov    rdi,r8
  4029bc:	test   ebp,ebp
  4029be:	jle    0x402aba
  4029c4:	mov    rax,QWORD PTR [rip+0x8cbd]        # 0x40b688
  4029cb:	xor    r9d,r9d
  4029ce:	add    rax,0x8
  4029d2:	mov    r10,QWORD PTR [rax]
  4029d5:	cmp    rbx,r10
  4029d8:	jb     0x4029ee
  4029da:	mov    rdx,QWORD PTR [rax+0x8]
  4029de:	mov    r11d,DWORD PTR [rdx+0x8]
  4029e2:	add    r10,r11
  4029e5:	cmp    rbx,r10
  4029e8:	jb     0x402aa0
  4029ee:	add    r9d,0x1
  4029f2:	add    rax,0x18
  4029f6:	cmp    r9d,ebp
  4029f9:	jne    0x4029d2
  4029fb:	mov    rcx,rbx
  4029fe:	call   0x403610
  402a03:	test   rax,rax
  402a06:	mov    r12,rax
  402a09:	je     0x402af2
  402a0f:	lea    rbp,[rbp+rbp*2+0x0]
  402a14:	shl    rbp,0x3
  402a18:	mov    r13,rbp
  402a1b:	add    r13,QWORD PTR [rip+0x8c66]        # 0x40b688
  402a22:	mov    QWORD PTR [r13+0x10],rax
  402a26:	mov    DWORD PTR [r13+0x0],0x0
  402a2e:	call   0x403730
  402a33:	mov    edx,DWORD PTR [r12+0xc]
  402a38:	mov    r8d,0x30
  402a3e:	add    rax,rdx
  402a41:	lea    rdx,[rsp+0x20]
  402a46:	mov    QWORD PTR [r13+0x8],rax
  402a4a:	mov    rax,QWORD PTR [rip+0x8c37]        # 0x40b688
  402a51:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402a56:	call   QWORD PTR [rip+0x9ab4]        # 0x40c510
  402a5c:	test   rax,rax
  402a5f:	je     0x402ad5
  402a61:	mov    eax,DWORD PTR [rsp+0x44]
  402a65:	lea    edx,[rax-0x4]
  402a68:	and    edx,0xfffffffb
  402a6b:	je     0x402a99
  402a6d:	sub    eax,0x40
  402a70:	and    eax,0xffffffbf
  402a73:	je     0x402a99
  402a75:	mov    r9,rbp
  402a78:	add    r9,QWORD PTR [rip+0x8c09]        # 0x40b688
  402a7f:	mov    r8d,0x40
  402a85:	mov    rdx,QWORD PTR [rsp+0x38]
  402a8a:	mov    rcx,QWORD PTR [rsp+0x20]
  402a8f:	call   QWORD PTR [rip+0x9a73]        # 0x40c508
  402a95:	test   eax,eax
  402a97:	je     0x402ac1
  402a99:	add    DWORD PTR [rip+0x8be4],0x1        # 0x40b684
  402aa0:	mov    r8,rdi
  402aa3:	mov    rdx,rsi
  402aa6:	mov    rcx,rbx
  402aa9:	add    rsp,0x58
  402aad:	pop    rbx
  402aae:	pop    rsi
  402aaf:	pop    rdi
  402ab0:	pop    rbp
  402ab1:	pop    r12
  402ab3:	pop    r13
  402ab5:	jmp    0x404570
  402aba:	xor    ebp,ebp
  402abc:	jmp    0x4029fb
  402ac1:	call   QWORD PTR [rip+0x99c1]        # 0x40c488
  402ac7:	lea    rcx,[rip+0x518a]        # 0x407c58
  402ace:	mov    edx,eax
  402ad0:	call   0x402930
  402ad5:	mov    rax,QWORD PTR [rip+0x8bac]        # 0x40b688
  402adc:	mov    edx,DWORD PTR [r12+0x8]
  402ae1:	lea    rcx,[rip+0x5138]        # 0x407c20
  402ae8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  402aed:	call   0x402930
  402af2:	lea    rcx,[rip+0x5107]        # 0x407c00
  402af9:	mov    rdx,rbx
  402afc:	call   0x402930
  402b01:	nop
  402b02:	nop    DWORD PTR [rax+0x0]
  402b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b10:	push   rbp
  402b11:	push   r14
  402b13:	push   r13
  402b15:	push   r12
  402b17:	push   rdi
  402b18:	push   rsi
  402b19:	push   rbx
  402b1a:	mov    rbp,rsp
  402b1d:	sub    rsp,0x60
  402b21:	mov    ebx,DWORD PTR [rip+0x8b59]        # 0x40b680
  402b27:	test   ebx,ebx
  402b29:	je     0x402b40
  402b2b:	mov    rsp,rbp
  402b2e:	pop    rbx
  402b2f:	pop    rsi
  402b30:	pop    rdi
  402b31:	pop    r12
  402b33:	pop    r13
  402b35:	pop    r14
  402b37:	pop    rbp
  402b38:	ret    
  402b39:	nop    DWORD PTR [rax+0x0]
  402b40:	mov    DWORD PTR [rip+0x8b36],0x1        # 0x40b680
  402b4a:	call   0x403660
  402b4f:	cdqe   
  402b51:	lea    rax,[rax+rax*2]
  402b55:	lea    rax,[rax*8+0x1e]
  402b5d:	and    rax,0xfffffffffffffff0
  402b61:	call   0x403880
  402b66:	mov    rsi,QWORD PTR [rip+0x5303]        # 0x407e70
  402b6d:	mov    rbx,QWORD PTR [rip+0x530c]        # 0x407e80
  402b74:	sub    rsp,rax
  402b77:	mov    DWORD PTR [rip+0x8b03],0x0        # 0x40b684
  402b81:	lea    rax,[rsp+0x20]
  402b86:	mov    QWORD PTR [rip+0x8afb],rax        # 0x40b688
  402b8d:	mov    rax,rsi
  402b90:	sub    rax,rbx
  402b93:	cmp    rax,0x7
  402b97:	jle    0x402b2b
  402b99:	cmp    rax,0xb
  402b9d:	jle    0x402bc5
  402b9f:	mov    r11d,DWORD PTR [rbx]
  402ba2:	test   r11d,r11d
  402ba5:	jne    0x402cf0
  402bab:	mov    r10d,DWORD PTR [rbx+0x4]
  402baf:	test   r10d,r10d
  402bb2:	jne    0x402cf0
  402bb8:	mov    r9d,DWORD PTR [rbx+0x8]
  402bbc:	test   r9d,r9d
  402bbf:	jne    0x402bdc
  402bc1:	add    rbx,0xc
  402bc5:	mov    r8d,DWORD PTR [rbx]
  402bc8:	test   r8d,r8d
  402bcb:	jne    0x402cf0
  402bd1:	mov    ecx,DWORD PTR [rbx+0x4]
  402bd4:	test   ecx,ecx
  402bd6:	jne    0x402cf0
  402bdc:	mov    edx,DWORD PTR [rbx+0x8]
  402bdf:	cmp    edx,0x1
  402be2:	jne    0x402dfc
  402be8:	add    rbx,0xc
  402bec:	cmp    rbx,rsi
  402bef:	jae    0x402b2b
  402bf5:	mov    r12,QWORD PTR [rip+0x52a4]        # 0x407ea0
  402bfc:	lea    r13,[rbp-0x30]
  402c00:	movabs r14,0xffffffff00000000
  402c0a:	mov    ecx,DWORD PTR [rbx+0x4]
  402c0d:	mov    eax,DWORD PTR [rbx]
  402c0f:	movzx  edx,BYTE PTR [rbx+0x8]
  402c13:	add    rax,r12
  402c16:	add    rcx,r12
  402c19:	cmp    edx,0x10
  402c1c:	mov    r8,QWORD PTR [rax]
  402c1f:	je     0x402d66
  402c25:	jbe    0x402d2d
  402c2b:	cmp    edx,0x20
  402c2e:	je     0x402daf
  402c34:	cmp    edx,0x40
  402c37:	jne    0x402d9b
  402c3d:	sub    r8,rax
  402c40:	mov    rdx,r13
  402c43:	mov    rdi,r13
  402c46:	mov    rax,r8
  402c49:	add    rax,QWORD PTR [rcx]
  402c4c:	mov    r8d,0x8
  402c52:	mov    QWORD PTR [rbp-0x30],rax
  402c56:	call   0x4029a0
  402c5b:	add    rbx,0xc
  402c5f:	cmp    rbx,rsi
  402c62:	jb     0x402c0a
  402c64:	mov    eax,DWORD PTR [rip+0x8a1a]        # 0x40b684
  402c6a:	xor    ebx,ebx
  402c6c:	xor    esi,esi
  402c6e:	test   eax,eax
  402c70:	jle    0x402b2b
  402c76:	mov    r14,QWORD PTR [rip+0x9893]        # 0x40c510
  402c7d:	lea    r13,[rbp-0x34]
  402c81:	mov    r12,QWORD PTR [rip+0x9880]        # 0x40c508
  402c88:	jmp    0x402ca3
  402c8a:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	add    esi,0x1
  402c93:	add    rbx,0x18
  402c97:	cmp    esi,DWORD PTR [rip+0x89e7]        # 0x40b684
  402c9d:	jge    0x402b2b
  402ca3:	mov    rax,rbx
  402ca6:	add    rax,QWORD PTR [rip+0x89db]        # 0x40b688
  402cad:	mov    edx,DWORD PTR [rax]
  402caf:	test   edx,edx
  402cb1:	je     0x402c90
  402cb3:	mov    rcx,QWORD PTR [rax+0x8]
  402cb7:	mov    r8d,0x30
  402cbd:	mov    rdx,rdi
  402cc0:	call   r14
  402cc3:	test   rax,rax
  402cc6:	je     0x402dde
  402ccc:	mov    rax,QWORD PTR [rip+0x89b5]        # 0x40b688
  402cd3:	mov    r9,r13
  402cd6:	mov    rdx,QWORD PTR [rbp-0x18]
  402cda:	mov    rcx,QWORD PTR [rbp-0x30]
  402cde:	mov    r8d,DWORD PTR [rax+rbx*1]
  402ce2:	call   r12
  402ce5:	jmp    0x402c90
  402ce7:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	cmp    rbx,rsi
  402cf3:	jae    0x402b2b
  402cf9:	mov    r12,QWORD PTR [rip+0x51a0]        # 0x407ea0
  402d00:	lea    rdi,[rbp-0x30]
  402d04:	mov    ecx,DWORD PTR [rbx+0x4]
  402d07:	mov    eax,DWORD PTR [rbx]
  402d09:	mov    r8d,0x4
  402d0f:	mov    rdx,rdi
  402d12:	add    rbx,0x8
  402d16:	add    rcx,r12
  402d19:	add    eax,DWORD PTR [rcx]
  402d1b:	mov    DWORD PTR [rbp-0x30],eax
  402d1e:	call   0x4029a0
  402d23:	cmp    rbx,rsi
  402d26:	jb     0x402d04
  402d28:	jmp    0x402c64
  402d2d:	cmp    edx,0x8
  402d30:	jne    0x402d9b
  402d32:	movzx  edx,BYTE PTR [rcx]
  402d35:	mov    rdi,r13
  402d38:	mov    r10,rdx
  402d3b:	or     r10,0xffffffffffffff00
  402d42:	test   dl,dl
  402d44:	cmovs  rdx,r10
  402d48:	sub    rdx,rax
  402d4b:	lea    rax,[r8+rdx*1]
  402d4f:	mov    r8d,0x1
  402d55:	mov    rdx,r13
  402d58:	mov    QWORD PTR [rbp-0x30],rax
  402d5c:	call   0x4029a0
  402d61:	jmp    0x402c5b
  402d66:	movzx  edx,WORD PTR [rcx]
  402d69:	mov    rdi,r13
  402d6c:	mov    r10,rdx
  402d6f:	or     r10,0xffffffffffff0000
  402d76:	test   dx,dx
  402d79:	cmovs  rdx,r10
  402d7d:	sub    rdx,rax
  402d80:	lea    rax,[r8+rdx*1]
  402d84:	mov    r8d,0x2
  402d8a:	mov    rdx,r13
  402d8d:	mov    QWORD PTR [rbp-0x30],rax
  402d91:	call   0x4029a0
  402d96:	jmp    0x402c5b
  402d9b:	lea    rcx,[rip+0x4f16]        # 0x407cb8
  402da2:	mov    QWORD PTR [rbp-0x30],0x0
  402daa:	call   0x402930
  402daf:	mov    edx,DWORD PTR [rcx]
  402db1:	mov    rdi,r13
  402db4:	mov    r10,rdx
  402db7:	or     r10,r14
  402dba:	test   edx,edx
  402dbc:	cmovs  rdx,r10
  402dc0:	sub    rdx,rax
  402dc3:	lea    rax,[r8+rdx*1]
  402dc7:	mov    r8d,0x4
  402dcd:	mov    rdx,r13
  402dd0:	mov    QWORD PTR [rbp-0x30],rax
  402dd4:	call   0x4029a0
  402dd9:	jmp    0x402c5b
  402dde:	add    rbx,QWORD PTR [rip+0x88a3]        # 0x40b688
  402de5:	lea    rcx,[rip+0x4e34]        # 0x407c20
  402dec:	mov    rax,QWORD PTR [rbx+0x10]
  402df0:	mov    r8,QWORD PTR [rbx+0x8]
  402df4:	mov    edx,DWORD PTR [rax+0x8]
  402df7:	call   0x402930
  402dfc:	lea    rcx,[rip+0x4e7d]        # 0x407c80
  402e03:	call   0x402930
  402e08:	nop
  402e09:	nop
  402e0a:	nop
  402e0b:	nop
  402e0c:	nop
  402e0d:	nop
  402e0e:	nop
  402e0f:	nop
  402e10:	sub    rsp,0x28
  402e14:	mov    eax,DWORD PTR [rcx]
  402e16:	cmp    eax,0xc0000091
  402e1b:	ja     0x402e80
  402e1d:	cmp    eax,0xc000008d
  402e22:	jae    0x402e9f
  402e24:	cmp    eax,0xc0000008
  402e29:	je     0x402f40
  402e2f:	ja     0x402f10
  402e35:	cmp    eax,0x80000002
  402e3a:	je     0x402f40
  402e40:	cmp    eax,0xc0000005
  402e45:	jne    0x402f1e
  402e4b:	xor    edx,edx
  402e4d:	mov    ecx,0xb
  402e52:	call   0x404540
  402e57:	cmp    rax,0x1
  402e5b:	je     0x402fa0
  402e61:	test   rax,rax
  402e64:	je     0x402f80
  402e6a:	mov    ecx,0xb
  402e6f:	call   rax
  402e71:	xor    eax,eax
  402e73:	add    rsp,0x28
  402e77:	ret    
  402e78:	nop    DWORD PTR [rax+rax*1+0x0]
  402e80:	cmp    eax,0xc0000094
  402e85:	je     0x402f50
  402e8b:	ja     0x402ed0
  402e8d:	cmp    eax,0xc0000092
  402e92:	je     0x402f40
  402e98:	cmp    eax,0xc0000093
  402e9d:	jne    0x402f1e
  402e9f:	xor    edx,edx
  402ea1:	mov    ecx,0x8
  402ea6:	call   0x404540
  402eab:	cmp    rax,0x1
  402eaf:	mov    rdx,rax
  402eb2:	je     0x402f28
  402eb4:	test   rdx,rdx
  402eb7:	mov    eax,0x1
  402ebc:	je     0x402e73
  402ebe:	mov    ecx,0x8
  402ec3:	call   rdx
  402ec5:	xor    eax,eax
  402ec7:	add    rsp,0x28
  402ecb:	ret    
  402ecc:	nop    DWORD PTR [rax+0x0]
  402ed0:	cmp    eax,0xc0000095
  402ed5:	je     0x402f40
  402ed7:	cmp    eax,0xc0000096
  402edc:	jne    0x402f1e
  402ede:	xor    edx,edx
  402ee0:	mov    ecx,0x4
  402ee5:	call   0x404540
  402eea:	cmp    rax,0x1
  402eee:	je     0x402f8a
  402ef4:	test   rax,rax
  402ef7:	je     0x402f80
  402efd:	mov    ecx,0x4
  402f02:	call   rax
  402f04:	xor    eax,eax
  402f06:	jmp    0x402e73
  402f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f10:	cmp    eax,0xc000001d
  402f15:	je     0x402ede
  402f17:	cmp    eax,0xc000008c
  402f1c:	je     0x402f40
  402f1e:	mov    eax,0x1
  402f23:	add    rsp,0x28
  402f27:	ret    
  402f28:	mov    edx,0x1
  402f2d:	mov    ecx,0x8
  402f32:	call   0x404540
  402f37:	call   0x402900
  402f3c:	nop    DWORD PTR [rax+0x0]
  402f40:	xor    eax,eax
  402f42:	add    rsp,0x28
  402f46:	ret    
  402f47:	nop    WORD PTR [rax+rax*1+0x0]
  402f50:	xor    edx,edx
  402f52:	mov    ecx,0x8
  402f57:	call   0x404540
  402f5c:	cmp    rax,0x1
  402f60:	mov    rdx,rax
  402f63:	jne    0x402eb4
  402f69:	mov    edx,0x1
  402f6e:	mov    ecx,0x8
  402f73:	call   0x404540
  402f78:	xor    eax,eax
  402f7a:	jmp    0x402e73
  402f7f:	nop
  402f80:	mov    eax,0x4
  402f85:	add    rsp,0x28
  402f89:	ret    
  402f8a:	mov    edx,0x1
  402f8f:	mov    ecx,0x4
  402f94:	call   0x404540
  402f99:	xor    eax,eax
  402f9b:	jmp    0x402e73
  402fa0:	mov    edx,0x1
  402fa5:	mov    ecx,0xb
  402faa:	call   0x404540
  402faf:	xor    eax,eax
  402fb1:	jmp    0x402e73
  402fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fc0:	push   r12
  402fc2:	push   rbp
  402fc3:	push   rdi
  402fc4:	push   rsi
  402fc5:	push   rbx
  402fc6:	sub    rsp,0x20
  402fca:	call   0x403730
  402fcf:	mov    rbp,rax
  402fd2:	mov    eax,DWORD PTR [rip+0x86f0]        # 0x40b6c8
  402fd8:	test   eax,eax
  402fda:	jne    0x403001
  402fdc:	test   rbp,rbp
  402fdf:	je     0x403001
  402fe1:	lea    rcx,[rip+0x4d08]        # 0x407cf0
  402fe8:	mov    DWORD PTR [rip+0x86d6],0x1        # 0x40b6c8
  402ff2:	call   0x403570
  402ff7:	test   rax,rax
  402ffa:	je     0x403010
  402ffc:	mov    eax,0x1
  403001:	add    rsp,0x20
  403005:	pop    rbx
  403006:	pop    rsi
  403007:	pop    rdi
  403008:	pop    rbp
  403009:	pop    r12
  40300b:	ret    
  40300c:	nop    DWORD PTR [rax+0x0]
  403010:	lea    rbx,[rip+0x87e9]        # 0x40b800
  403017:	mov    ecx,0x30
  40301c:	lea    rdx,[rip+0x86dd]        # 0x40b700
  403023:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402e10
  40302a:	xor    esi,esi
  40302c:	mov    rdi,rbx
  40302f:	rep stos QWORD PTR es:[rdi],rax
  403032:	mov    rdi,rdx
  403035:	sub    r12,rbp
  403038:	mov    cl,0x20
  40303a:	rep stos QWORD PTR es:[rdi],rax
  40303d:	mov    rdi,rdx
  403040:	jmp    0x403070
  403042:	mov    BYTE PTR [rdi],0x9
  403045:	mov    DWORD PTR [rdi+0x4],r12d
  403049:	add    rsi,0x1
  40304d:	mov    edx,DWORD PTR [rax+0xc]
  403050:	add    rbx,0xc
  403054:	mov    DWORD PTR [rbx-0xc],edx
  403057:	add    edx,DWORD PTR [rax+0x8]
  40305a:	mov    rax,rdi
  40305d:	sub    rax,rbp
  403060:	add    rdi,0x8
  403064:	mov    DWORD PTR [rbx-0x4],eax
  403067:	mov    DWORD PTR [rbx-0x8],edx
  40306a:	cmp    rsi,0x20
  40306e:	je     0x4030a5
  403070:	mov    rcx,rsi
  403073:	call   0x4036a0
  403078:	test   rax,rax
  40307b:	jne    0x403042
  40307d:	test   rsi,rsi
  403080:	je     0x402ffc
  403086:	mov    edx,esi
  403088:	nop    DWORD PTR [rax+rax*1+0x0]
  403090:	mov    r8,rbp
  403093:	lea    rcx,[rip+0x8766]        # 0x40b800
  40309a:	call   QWORD PTR [rip+0x9420]        # 0x40c4c0
  4030a0:	jmp    0x402ffc
  4030a5:	mov    edx,0x20
  4030aa:	jmp    0x403090
  4030ac:	nop    DWORD PTR [rax+0x0]
  4030b0:	push   rbx
  4030b1:	sub    rsp,0x20
  4030b5:	mov    rdx,QWORD PTR [rcx]
  4030b8:	mov    eax,DWORD PTR [rdx]
  4030ba:	mov    r8d,eax
  4030bd:	and    r8d,0x20ffffff
  4030c4:	cmp    r8d,0x20474343
  4030cb:	je     0x4031d0
  4030d1:	cmp    eax,0xc0000091
  4030d6:	mov    rbx,rcx
  4030d9:	ja     0x403160
  4030df:	cmp    eax,0xc000008d
  4030e4:	jae    0x403177
  4030ea:	cmp    eax,0xc0000008
  4030ef:	je     0x403123
  4030f1:	ja     0x403130
  4030f3:	cmp    eax,0x80000002
  4030f8:	je     0x403123
  4030fa:	cmp    eax,0xc0000005
  4030ff:	jne    0x403142
  403101:	xor    edx,edx
  403103:	mov    ecx,0xb
  403108:	call   0x404540
  40310d:	cmp    rax,0x1
  403111:	je     0x403240
  403117:	test   rax,rax
  40311a:	je     0x403142
  40311c:	mov    ecx,0xb
  403121:	call   rax
  403123:	mov    eax,0xffffffff
  403128:	add    rsp,0x20
  40312c:	pop    rbx
  40312d:	ret    
  40312e:	xchg   ax,ax
  403130:	cmp    eax,0xc000001d
  403135:	je     0x4031f6
  40313b:	cmp    eax,0xc000008c
  403140:	je     0x403123
  403142:	mov    rax,QWORD PTR [rip+0x8577]        # 0x40b6c0
  403149:	test   rax,rax
  40314c:	je     0x403128
  40314e:	mov    rcx,rbx
  403151:	add    rsp,0x20
  403155:	pop    rbx
  403156:	rex.W jmp rax
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	cmp    eax,0xc0000094
  403165:	je     0x4031a2
  403167:	ja     0x4031e0
  403169:	cmp    eax,0xc0000092
  40316e:	je     0x403123
  403170:	cmp    eax,0xc0000093
  403175:	jne    0x403142
  403177:	xor    edx,edx
  403179:	mov    ecx,0x8
  40317e:	call   0x404540
  403183:	cmp    rax,0x1
  403187:	jne    0x4031b4
  403189:	mov    edx,0x1
  40318e:	mov    ecx,0x8
  403193:	call   0x404540
  403198:	call   0x402900
  40319d:	jmp    0x403123
  4031a2:	xor    edx,edx
  4031a4:	mov    ecx,0x8
  4031a9:	call   0x404540
  4031ae:	cmp    rax,0x1
  4031b2:	je     0x403222
  4031b4:	test   rax,rax
  4031b7:	je     0x403142
  4031b9:	mov    ecx,0x8
  4031be:	call   rax
  4031c0:	mov    eax,0xffffffff
  4031c5:	jmp    0x403128
  4031ca:	nop    WORD PTR [rax+rax*1+0x0]
  4031d0:	test   BYTE PTR [rdx+0x4],0x1
  4031d4:	jne    0x4030d1
  4031da:	jmp    0x403123
  4031df:	nop
  4031e0:	cmp    eax,0xc0000095
  4031e5:	je     0x403123
  4031eb:	cmp    eax,0xc0000096
  4031f0:	jne    0x403142
  4031f6:	xor    edx,edx
  4031f8:	mov    ecx,0x4
  4031fd:	call   0x404540
  403202:	cmp    rax,0x1
  403206:	je     0x403254
  403208:	test   rax,rax
  40320b:	je     0x403142
  403211:	mov    ecx,0x4
  403216:	call   rax
  403218:	mov    eax,0xffffffff
  40321d:	jmp    0x403128
  403222:	mov    edx,0x1
  403227:	mov    ecx,0x8
  40322c:	call   0x404540
  403231:	jmp    0x403123
  403236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403240:	mov    edx,0x1
  403245:	mov    ecx,0xb
  40324a:	call   0x404540
  40324f:	jmp    0x403123
  403254:	mov    edx,0x1
  403259:	mov    ecx,0x4
  40325e:	call   0x404540
  403263:	jmp    0x403123
  403268:	nop
  403269:	nop
  40326a:	nop
  40326b:	nop
  40326c:	nop
  40326d:	nop
  40326e:	nop
  40326f:	nop
  403270:	push   rbp
  403271:	push   rdi
  403272:	push   rsi
  403273:	push   rbx
  403274:	sub    rsp,0x28
  403278:	lea    rcx,[rip+0x8721]        # 0x40b9a0
  40327f:	call   QWORD PTR [rip+0x91e3]        # 0x40c468
  403285:	mov    rbx,QWORD PTR [rip+0x86f4]        # 0x40b980
  40328c:	test   rbx,rbx
  40328f:	je     0x4032c4
  403291:	mov    rbp,QWORD PTR [rip+0x9260]        # 0x40c4f8
  403298:	mov    rdi,QWORD PTR [rip+0x91e9]        # 0x40c488
  40329f:	nop
  4032a0:	mov    ecx,DWORD PTR [rbx]
  4032a2:	call   rbp
  4032a4:	mov    rsi,rax
  4032a7:	call   rdi
  4032a9:	test   eax,eax
  4032ab:	jne    0x4032bb
  4032ad:	test   rsi,rsi
  4032b0:	je     0x4032bb
  4032b2:	mov    rax,QWORD PTR [rbx+0x8]
  4032b6:	mov    rcx,rsi
  4032b9:	call   rax
  4032bb:	mov    rbx,QWORD PTR [rbx+0x10]
  4032bf:	test   rbx,rbx
  4032c2:	jne    0x4032a0
  4032c4:	mov    rax,QWORD PTR [rip+0x91e5]        # 0x40c4b0
  4032cb:	lea    rcx,[rip+0x86ce]        # 0x40b9a0
  4032d2:	add    rsp,0x28
  4032d6:	pop    rbx
  4032d7:	pop    rsi
  4032d8:	pop    rdi
  4032d9:	pop    rbp
  4032da:	rex.W jmp rax
  4032dd:	nop    DWORD PTR [rax]
  4032e0:	push   rdi
  4032e1:	push   rsi
  4032e2:	push   rbx
  4032e3:	sub    rsp,0x20
  4032e7:	mov    eax,DWORD PTR [rip+0x869b]        # 0x40b988
  4032ed:	test   eax,eax
  4032ef:	jne    0x403300
  4032f1:	add    rsp,0x20
  4032f5:	pop    rbx
  4032f6:	pop    rsi
  4032f7:	pop    rdi
  4032f8:	ret    
  4032f9:	nop    DWORD PTR [rax+0x0]
  403300:	mov    rsi,rdx
  403303:	mov    edi,ecx
  403305:	mov    edx,0x18
  40330a:	mov    ecx,0x1
  40330f:	call   0x4045b8
  403314:	test   rax,rax
  403317:	mov    rbx,rax
  40331a:	je     0x403358
  40331c:	mov    DWORD PTR [rax],edi
  40331e:	mov    QWORD PTR [rax+0x8],rsi
  403322:	lea    rcx,[rip+0x8677]        # 0x40b9a0
  403329:	call   QWORD PTR [rip+0x9139]        # 0x40c468
  40332f:	mov    rax,QWORD PTR [rip+0x864a]        # 0x40b980
  403336:	lea    rcx,[rip+0x8663]        # 0x40b9a0
  40333d:	mov    QWORD PTR [rip+0x863c],rbx        # 0x40b980
  403344:	mov    QWORD PTR [rbx+0x10],rax
  403348:	call   QWORD PTR [rip+0x9162]        # 0x40c4b0
  40334e:	xor    eax,eax
  403350:	add    rsp,0x20
  403354:	pop    rbx
  403355:	pop    rsi
  403356:	pop    rdi
  403357:	ret    
  403358:	mov    eax,0xffffffff
  40335d:	jmp    0x4032f1
  40335f:	nop
  403360:	push   rbx
  403361:	sub    rsp,0x20
  403365:	mov    eax,DWORD PTR [rip+0x861d]        # 0x40b988
  40336b:	test   eax,eax
  40336d:	jne    0x403380
  40336f:	xor    eax,eax
  403371:	add    rsp,0x20
  403375:	pop    rbx
  403376:	ret    
  403377:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	mov    ebx,ecx
  403382:	lea    rcx,[rip+0x8617]        # 0x40b9a0
  403389:	call   QWORD PTR [rip+0x90d9]        # 0x40c468
  40338f:	mov    rdx,QWORD PTR [rip+0x85ea]        # 0x40b980
  403396:	test   rdx,rdx
  403399:	je     0x4033b7
  40339b:	mov    eax,DWORD PTR [rdx]
  40339d:	cmp    eax,ebx
  40339f:	jne    0x4033ae
  4033a1:	jmp    0x4033ef
  4033a3:	mov    r8d,DWORD PTR [rax]
  4033a6:	cmp    r8d,ebx
  4033a9:	je     0x4033d0
  4033ab:	mov    rdx,rax
  4033ae:	mov    rax,QWORD PTR [rdx+0x10]
  4033b2:	test   rax,rax
  4033b5:	jne    0x4033a3
  4033b7:	lea    rcx,[rip+0x85e2]        # 0x40b9a0
  4033be:	call   QWORD PTR [rip+0x90ec]        # 0x40c4b0
  4033c4:	xor    eax,eax
  4033c6:	add    rsp,0x20
  4033ca:	pop    rbx
  4033cb:	ret    
  4033cc:	nop    DWORD PTR [rax+0x0]
  4033d0:	mov    rcx,rax
  4033d3:	mov    rax,QWORD PTR [rax+0x10]
  4033d7:	mov    QWORD PTR [rdx+0x10],rax
  4033db:	call   0x404590
  4033e0:	lea    rcx,[rip+0x85b9]        # 0x40b9a0
  4033e7:	call   QWORD PTR [rip+0x90c3]        # 0x40c4b0
  4033ed:	jmp    0x4033c4
  4033ef:	mov    rax,QWORD PTR [rdx+0x10]
  4033f3:	mov    rcx,rdx
  4033f6:	mov    QWORD PTR [rip+0x8583],rax        # 0x40b980
  4033fd:	jmp    0x4033db
  4033ff:	nop
  403400:	push   rbx
  403401:	sub    rsp,0x20
  403405:	cmp    edx,0x1
  403408:	je     0x4034a0
  40340e:	jb     0x403440
  403410:	cmp    edx,0x2
  403413:	je     0x403430
  403415:	cmp    edx,0x3
  403418:	jne    0x403435
  40341a:	mov    eax,DWORD PTR [rip+0x8568]        # 0x40b988
  403420:	test   eax,eax
  403422:	je     0x403435
  403424:	call   0x403270
  403429:	jmp    0x403435
  40342b:	nop    DWORD PTR [rax+rax*1+0x0]
  403430:	call   0x402900
  403435:	mov    eax,0x1
  40343a:	add    rsp,0x20
  40343e:	pop    rbx
  40343f:	ret    
  403440:	mov    eax,DWORD PTR [rip+0x8542]        # 0x40b988
  403446:	test   eax,eax
  403448:	jne    0x4034d0
  40344e:	mov    eax,DWORD PTR [rip+0x8534]        # 0x40b988
  403454:	cmp    eax,0x1
  403457:	jne    0x403435
  403459:	mov    rcx,QWORD PTR [rip+0x8520]        # 0x40b980
  403460:	test   rcx,rcx
  403463:	je     0x403476
  403465:	mov    rbx,QWORD PTR [rcx+0x10]
  403469:	call   0x404590
  40346e:	test   rbx,rbx
  403471:	mov    rcx,rbx
  403474:	jne    0x403465
  403476:	lea    rcx,[rip+0x8523]        # 0x40b9a0
  40347d:	mov    QWORD PTR [rip+0x84f8],0x0        # 0x40b980
  403488:	mov    DWORD PTR [rip+0x84f6],0x0        # 0x40b988
  403492:	call   QWORD PTR [rip+0x8fc8]        # 0x40c460
  403498:	jmp    0x403435
  40349a:	nop    WORD PTR [rax+rax*1+0x0]
  4034a0:	mov    eax,DWORD PTR [rip+0x84e2]        # 0x40b988
  4034a6:	test   eax,eax
  4034a8:	je     0x4034c0
  4034aa:	mov    eax,0x1
  4034af:	mov    DWORD PTR [rip+0x84cf],0x1        # 0x40b988
  4034b9:	add    rsp,0x20
  4034bd:	pop    rbx
  4034be:	ret    
  4034bf:	nop
  4034c0:	lea    rcx,[rip+0x84d9]        # 0x40b9a0
  4034c7:	call   QWORD PTR [rip+0x8fdb]        # 0x40c4a8
  4034cd:	jmp    0x4034aa
  4034cf:	nop
  4034d0:	call   0x403270
  4034d5:	jmp    0x40344e
  4034da:	nop
  4034db:	nop
  4034dc:	nop
  4034dd:	nop
  4034de:	nop
  4034df:	nop
  4034e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4034e4:	add    rcx,rax
  4034e7:	xor    eax,eax
  4034e9:	cmp    DWORD PTR [rcx],0x4550
  4034ef:	je     0x4034f3
  4034f1:	repz ret 
  4034f3:	xor    eax,eax
  4034f5:	cmp    WORD PTR [rcx+0x18],0x20b
  4034fb:	sete   al
  4034fe:	ret    
  4034ff:	nop
  403500:	cmp    WORD PTR [rcx],0x5a4d
  403505:	je     0x403510
  403507:	xor    eax,eax
  403509:	ret    
  40350a:	nop    WORD PTR [rax+rax*1+0x0]
  403510:	jmp    0x4034e0
  403512:	nop    DWORD PTR [rax+0x0]
  403516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403520:	movsxd rax,DWORD PTR [rcx+0x3c]
  403524:	add    rcx,rax
  403527:	movzx  eax,WORD PTR [rcx+0x14]
  40352b:	lea    rax,[rcx+rax*1+0x18]
  403530:	movzx  ecx,WORD PTR [rcx+0x6]
  403534:	test   ecx,ecx
  403536:	je     0x403561
  403538:	sub    ecx,0x1
  40353b:	lea    rcx,[rcx+rcx*4]
  40353f:	lea    r9,[rax+rcx*8+0x28]
  403544:	mov    r8d,DWORD PTR [rax+0xc]
  403548:	cmp    r8,rdx
  40354b:	mov    rcx,r8
  40354e:	ja     0x403558
  403550:	add    ecx,DWORD PTR [rax+0x8]
  403553:	cmp    rdx,rcx
  403556:	jb     0x403563
  403558:	add    rax,0x28
  40355c:	cmp    rax,r9
  40355f:	jne    0x403544
  403561:	xor    eax,eax
  403563:	repz ret 
  403565:	nop
  403566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403570:	push   rdi
  403571:	push   rsi
  403572:	push   rbx
  403573:	sub    rsp,0x20
  403577:	mov    rsi,rcx
  40357a:	call   0x404528
  40357f:	cmp    rax,0x8
  403583:	ja     0x4035a0
  403585:	mov    rbx,QWORD PTR [rip+0x4914]        # 0x407ea0
  40358c:	xor    edi,edi
  40358e:	cmp    WORD PTR [rbx],0x5a4d
  403593:	je     0x4035b0
  403595:	mov    rax,rdi
  403598:	add    rsp,0x20
  40359c:	pop    rbx
  40359d:	pop    rsi
  40359e:	pop    rdi
  40359f:	ret    
  4035a0:	xor    edi,edi
  4035a2:	mov    rax,rdi
  4035a5:	add    rsp,0x20
  4035a9:	pop    rbx
  4035aa:	pop    rsi
  4035ab:	pop    rdi
  4035ac:	ret    
  4035ad:	nop    DWORD PTR [rax]
  4035b0:	mov    rcx,rbx
  4035b3:	call   0x4034e0
  4035b8:	test   eax,eax
  4035ba:	je     0x403595
  4035bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4035c0:	add    rdx,rbx
  4035c3:	movzx  eax,WORD PTR [rdx+0x14]
  4035c7:	lea    rbx,[rdx+rax*1+0x18]
  4035cc:	movzx  eax,WORD PTR [rdx+0x6]
  4035d0:	test   eax,eax
  4035d2:	je     0x403595
  4035d4:	sub    eax,0x1
  4035d7:	lea    rax,[rax+rax*4]
  4035db:	lea    rdi,[rbx+rax*8+0x28]
  4035e0:	jmp    0x4035eb
  4035e2:	add    rbx,0x28
  4035e6:	cmp    rbx,rdi
  4035e9:	je     0x4035a0
  4035eb:	mov    r8d,0x8
  4035f1:	mov    rdx,rsi
  4035f4:	mov    rcx,rbx
  4035f7:	call   0x404520
  4035fc:	test   eax,eax
  4035fe:	jne    0x4035e2
  403600:	mov    rdi,rbx
  403603:	mov    rax,rdi
  403606:	add    rsp,0x20
  40360a:	pop    rbx
  40360b:	pop    rsi
  40360c:	pop    rdi
  40360d:	ret    
  40360e:	xchg   ax,ax
  403610:	push   rsi
  403611:	push   rbx
  403612:	sub    rsp,0x28
  403616:	mov    rbx,QWORD PTR [rip+0x4883]        # 0x407ea0
  40361d:	cmp    WORD PTR [rbx],0x5a4d
  403622:	je     0x403630
  403624:	xor    eax,eax
  403626:	add    rsp,0x28
  40362a:	pop    rbx
  40362b:	pop    rsi
  40362c:	ret    
  40362d:	nop    DWORD PTR [rax]
  403630:	mov    rsi,rcx
  403633:	mov    rcx,rbx
  403636:	call   0x4034e0
  40363b:	test   eax,eax
  40363d:	je     0x403624
  40363f:	sub    rsi,rbx
  403642:	mov    rcx,rbx
  403645:	mov    rdx,rsi
  403648:	add    rsp,0x28
  40364c:	pop    rbx
  40364d:	pop    rsi
  40364e:	jmp    0x403520
  403653:	nop    DWORD PTR [rax]
  403656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403660:	push   rbx
  403661:	sub    rsp,0x20
  403665:	mov    rbx,QWORD PTR [rip+0x4834]        # 0x407ea0
  40366c:	xor    eax,eax
  40366e:	cmp    WORD PTR [rbx],0x5a4d
  403673:	je     0x403680
  403675:	add    rsp,0x20
  403679:	pop    rbx
  40367a:	ret    
  40367b:	nop    DWORD PTR [rax+rax*1+0x0]
  403680:	mov    rcx,rbx
  403683:	call   0x4034e0
  403688:	test   eax,eax
  40368a:	je     0x403675
  40368c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403690:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403695:	add    rsp,0x20
  403699:	pop    rbx
  40369a:	ret    
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	push   rdi
  4036a1:	push   rsi
  4036a2:	push   rbx
  4036a3:	sub    rsp,0x20
  4036a7:	mov    rsi,QWORD PTR [rip+0x47f2]        # 0x407ea0
  4036ae:	xor    edi,edi
  4036b0:	mov    rbx,rcx
  4036b3:	cmp    WORD PTR [rsi],0x5a4d
  4036b8:	je     0x4036c5
  4036ba:	mov    rax,rdi
  4036bd:	add    rsp,0x20
  4036c1:	pop    rbx
  4036c2:	pop    rsi
  4036c3:	pop    rdi
  4036c4:	ret    
  4036c5:	mov    rcx,rsi
  4036c8:	call   0x4034e0
  4036cd:	test   eax,eax
  4036cf:	je     0x4036ba
  4036d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4036d5:	add    rsi,rax
  4036d8:	movzx  eax,WORD PTR [rsi+0x14]
  4036dc:	lea    rdx,[rsi+rax*1+0x18]
  4036e1:	movzx  eax,WORD PTR [rsi+0x6]
  4036e5:	test   eax,eax
  4036e7:	je     0x4036ba
  4036e9:	sub    eax,0x1
  4036ec:	lea    rax,[rax+rax*4]
  4036f0:	lea    rax,[rdx+rax*8+0x28]
  4036f5:	test   BYTE PTR [rdx+0x27],0x20
  4036f9:	je     0x403704
  4036fb:	test   rbx,rbx
  4036fe:	je     0x403720
  403700:	sub    rbx,0x1
  403704:	add    rdx,0x28
  403708:	cmp    rdx,rax
  40370b:	jne    0x4036f5
  40370d:	xor    edi,edi
  40370f:	mov    rax,rdi
  403712:	add    rsp,0x20
  403716:	pop    rbx
  403717:	pop    rsi
  403718:	pop    rdi
  403719:	ret    
  40371a:	nop    WORD PTR [rax+rax*1+0x0]
  403720:	mov    rdi,rdx
  403723:	mov    rax,rdi
  403726:	add    rsp,0x20
  40372a:	pop    rbx
  40372b:	pop    rsi
  40372c:	pop    rdi
  40372d:	ret    
  40372e:	xchg   ax,ax
  403730:	push   rsi
  403731:	push   rbx
  403732:	sub    rsp,0x28
  403736:	mov    rsi,QWORD PTR [rip+0x4763]        # 0x407ea0
  40373d:	xor    ebx,ebx
  40373f:	cmp    WORD PTR [rsi],0x5a4d
  403744:	je     0x403750
  403746:	mov    rax,rbx
  403749:	add    rsp,0x28
  40374d:	pop    rbx
  40374e:	pop    rsi
  40374f:	ret    
  403750:	mov    rcx,rsi
  403753:	call   0x4034e0
  403758:	test   eax,eax
  40375a:	cmovne rbx,rsi
  40375e:	mov    rax,rbx
  403761:	add    rsp,0x28
  403765:	pop    rbx
  403766:	pop    rsi
  403767:	ret    
  403768:	nop    DWORD PTR [rax+rax*1+0x0]
  403770:	push   rsi
  403771:	push   rbx
  403772:	sub    rsp,0x28
  403776:	mov    rbx,QWORD PTR [rip+0x4723]        # 0x407ea0
  40377d:	xor    eax,eax
  40377f:	cmp    WORD PTR [rbx],0x5a4d
  403784:	je     0x403790
  403786:	add    rsp,0x28
  40378a:	pop    rbx
  40378b:	pop    rsi
  40378c:	ret    
  40378d:	nop    DWORD PTR [rax]
  403790:	mov    rsi,rcx
  403793:	mov    rcx,rbx
  403796:	call   0x4034e0
  40379b:	test   eax,eax
  40379d:	je     0x403786
  40379f:	sub    rsi,rbx
  4037a2:	mov    rcx,rbx
  4037a5:	mov    rdx,rsi
  4037a8:	call   0x403520
  4037ad:	test   rax,rax
  4037b0:	je     0x4037c1
  4037b2:	mov    eax,DWORD PTR [rax+0x24]
  4037b5:	not    eax
  4037b7:	shr    eax,0x1f
  4037ba:	add    rsp,0x28
  4037be:	pop    rbx
  4037bf:	pop    rsi
  4037c0:	ret    
  4037c1:	xor    eax,eax
  4037c3:	jmp    0x403786
  4037c5:	nop
  4037c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037d0:	push   rbp
  4037d1:	push   rdi
  4037d2:	push   rsi
  4037d3:	push   rbx
  4037d4:	sub    rsp,0x28
  4037d8:	mov    rdi,QWORD PTR [rip+0x46c1]        # 0x407ea0
  4037df:	xor    ebp,ebp
  4037e1:	mov    esi,ecx
  4037e3:	cmp    WORD PTR [rdi],0x5a4d
  4037e8:	je     0x403800
  4037ea:	mov    rax,rbp
  4037ed:	add    rsp,0x28
  4037f1:	pop    rbx
  4037f2:	pop    rsi
  4037f3:	pop    rdi
  4037f4:	pop    rbp
  4037f5:	ret    
  4037f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403800:	mov    rcx,rdi
  403803:	call   0x4034e0
  403808:	test   eax,eax
  40380a:	je     0x4037ea
  40380c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403810:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403817:	test   edx,edx
  403819:	je     0x4037ea
  40381b:	mov    ebx,edx
  40381d:	mov    rcx,rdi
  403820:	mov    rdx,rbx
  403823:	call   0x403520
  403828:	test   rax,rax
  40382b:	je     0x4037ea
  40382d:	add    rbx,rdi
  403830:	mov    rdx,rbx
  403833:	jne    0x403847
  403835:	jmp    0x4037ea
  403837:	nop    WORD PTR [rax+rax*1+0x0]
  403840:	sub    esi,0x1
  403843:	add    rdx,0x14
  403847:	mov    ecx,DWORD PTR [rdx+0x4]
  40384a:	test   ecx,ecx
  40384c:	jne    0x403855
  40384e:	mov    eax,DWORD PTR [rdx+0xc]
  403851:	test   eax,eax
  403853:	je     0x403870
  403855:	test   esi,esi
  403857:	jg     0x403840
  403859:	mov    ebp,DWORD PTR [rdx+0xc]
  40385c:	add    rbp,rdi
  40385f:	mov    rax,rbp
  403862:	add    rsp,0x28
  403866:	pop    rbx
  403867:	pop    rsi
  403868:	pop    rdi
  403869:	pop    rbp
  40386a:	ret    
  40386b:	nop    DWORD PTR [rax+rax*1+0x0]
  403870:	xor    ebp,ebp
  403872:	mov    rax,rbp
  403875:	add    rsp,0x28
  403879:	pop    rbx
  40387a:	pop    rsi
  40387b:	pop    rdi
  40387c:	pop    rbp
  40387d:	ret    
  40387e:	nop
  40387f:	nop
  403880:	push   rcx
  403881:	push   rax
  403882:	cmp    rax,0x1000
  403888:	lea    rcx,[rsp+0x18]
  40388d:	jb     0x4038a8
  40388f:	sub    rcx,0x1000
  403896:	or     QWORD PTR [rcx],0x0
  40389a:	sub    rax,0x1000
  4038a0:	cmp    rax,0x1000
  4038a6:	ja     0x40388f
  4038a8:	sub    rcx,rax
  4038ab:	or     QWORD PTR [rcx],0x0
  4038af:	pop    rax
  4038b0:	pop    rcx
  4038b1:	ret    
  4038b2:	nop
  4038b3:	nop
  4038b4:	nop
  4038b5:	nop
  4038b6:	nop
  4038b7:	nop
  4038b8:	nop
  4038b9:	nop
  4038ba:	nop
  4038bb:	nop
  4038bc:	nop
  4038bd:	nop
  4038be:	nop
  4038bf:	nop
  4038c0:	push   r13
  4038c2:	push   r12
  4038c4:	push   rbp
  4038c5:	push   rdi
  4038c6:	push   rsi
  4038c7:	push   rbx
  4038c8:	mov    r12d,edx
  4038cb:	mov    ebp,r8d
  4038ce:	mov    edi,edx
  4038d0:	sub    r12d,ecx
  4038d3:	sub    ebp,edx
  4038d5:	mov    eax,r12d
  4038d8:	cdq    
  4038d9:	idiv   ebp
  4038db:	test   edx,edx
  4038dd:	mov    r13d,edx
  4038e0:	je     0x403965
  4038e6:	mov    eax,ebp
  4038e8:	jmp    0x4038f3
  4038ea:	nop    WORD PTR [rax+rax*1+0x0]
  4038f0:	mov    r13d,edx
  4038f3:	cdq    
  4038f4:	idiv   r13d
  4038f7:	mov    eax,r13d
  4038fa:	test   edx,edx
  4038fc:	jne    0x4038f0
  4038fe:	mov    eax,r8d
  403901:	sub    eax,ecx
  403903:	cdq    
  403904:	idiv   r13d
  403907:	test   r13d,r13d
  40390a:	jle    0x40395c
  40390c:	movsxd rdx,edi
  40390f:	xor    esi,esi
  403911:	lea    rdx,[r9+rdx*8]
  403915:	test   eax,eax
  403917:	lea    ecx,[rdi+rsi*1]
  40391a:	jle    0x403953
  40391c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  403920:	xor    r10d,r10d
  403923:	mov    r11d,ecx
  403926:	lea    r8d,[rcx+rbp*1]
  40392a:	sub    r11d,r12d
  40392d:	cmp    edi,ecx
  40392f:	mov    ecx,r11d
  403932:	cmovg  ecx,r8d
  403936:	add    r10d,0x1
  40393a:	movsxd r11,ecx
  40393d:	cmp    r10d,eax
  403940:	lea    r8,[r9+r11*8]
  403944:	mov    r11,QWORD PTR [r8]
  403947:	mov    QWORD PTR [r8],rbx
  40394a:	mov    QWORD PTR [rdx+rsi*8],r11
  40394e:	mov    rbx,r11
  403951:	jne    0x403923
  403953:	add    rsi,0x1
  403957:	cmp    r13d,esi
  40395a:	jg     0x403915
  40395c:	pop    rbx
  40395d:	pop    rsi
  40395e:	pop    rdi
  40395f:	pop    rbp
  403960:	pop    r12
  403962:	pop    r13
  403964:	ret    
  403965:	mov    r13d,ebp
  403968:	jmp    0x4038fe
  40396a:	nop    WORD PTR [rax+rax*1+0x0]
  403970:	push   rdi
  403971:	push   rsi
  403972:	push   rbx
  403973:	sub    rsp,0x30
  403977:	mov    rax,QWORD PTR [rip+0x4532]        # 0x407eb0
  40397e:	mov    QWORD PTR [rsp+0x58],rdx
  403983:	mov    QWORD PTR [rsp+0x60],r8
  403988:	lea    rsi,[rsp+0x58]
  40398d:	mov    QWORD PTR [rsp+0x68],r9
  403992:	mov    rbx,rcx
  403995:	mov    rax,QWORD PTR [rax]
  403998:	mov    QWORD PTR [rsp+0x28],rsi
  40399d:	mov    rax,QWORD PTR [rax]
  4039a0:	mov    rdi,QWORD PTR [rax]
  4039a3:	call   0x404628
  4039a8:	lea    rdx,[rip+0x4351]        # 0x407d00
  4039af:	lea    rcx,[rax+0x60]
  4039b3:	mov    r8,rdi
  4039b6:	call   0x4045a0
  4039bb:	test   rbx,rbx
  4039be:	je     0x4039d4
  4039c0:	call   0x404628
  4039c5:	lea    rcx,[rax+0x60]
  4039c9:	mov    r8,rsi
  4039cc:	mov    rdx,rbx
  4039cf:	call   0x404510
  4039d4:	call   0x404628
  4039d9:	lea    rdx,[rax+0x60]
  4039dd:	mov    ecx,0xa
  4039e2:	call   0x404598
  4039e7:	nop
  4039e8:	add    rsp,0x30
  4039ec:	pop    rbx
  4039ed:	pop    rsi
  4039ee:	pop    rdi
  4039ef:	ret    
  4039f0:	push   r15
  4039f2:	push   r14
  4039f4:	push   r13
  4039f6:	push   r12
  4039f8:	push   rbp
  4039f9:	push   rdi
  4039fa:	push   rsi
  4039fb:	push   rbx
  4039fc:	sub    rsp,0x48
  403a00:	mov    eax,DWORD PTR [rip+0x2666]        # 0x40606c
  403a06:	mov    rbp,QWORD PTR [rip+0x2653]        # 0x406060
  403a0d:	mov    QWORD PTR [rsp+0x90],rcx
  403a15:	mov    QWORD PTR [rsp+0x98],rdx
  403a1d:	mov    edx,0x3d
  403a22:	mov    r14,r8
  403a25:	mov    QWORD PTR [rsp+0xa8],r9
  403a2d:	mov    r13d,DWORD PTR [rsp+0xb0]
  403a35:	mov    DWORD PTR [rsp+0x38],eax
  403a39:	mov    rcx,rbp
  403a3c:	add    eax,0x1
  403a3f:	mov    DWORD PTR [rsp+0x3c],eax
  403a43:	mov    DWORD PTR [rip+0x2623],eax        # 0x40606c
  403a49:	call   0x404530
  403a4e:	test   rax,rax
  403a51:	mov    QWORD PTR [rsp+0x30],rax
  403a56:	je     0x403c34
  403a5c:	mov    rdi,rax
  403a5f:	add    rax,0x1
  403a63:	sub    rdi,rbp
  403a66:	mov    QWORD PTR [rsp+0x30],rax
  403a6b:	mov    r15,QWORD PTR [r14]
  403a6e:	test   r15,r15
  403a71:	je     0x403c7b
  403a77:	lea    rbx,[r14+0x20]
  403a7b:	mov    r12d,0xffffffff
  403a81:	mov    DWORD PTR [rsp+0x2c],0x0
  403a89:	xor    esi,esi
  403a8b:	jmp    0x403aa5
  403a8d:	nop    DWORD PTR [rax]
  403a90:	test   r13d,r13d
  403a93:	je     0x403ace
  403a95:	add    rbx,0x20
  403a99:	mov    r15,QWORD PTR [rbx-0x20]
  403a9d:	add    esi,0x1
  403aa0:	test   r15,r15
  403aa3:	je     0x403b10
  403aa5:	mov    r8,rdi
  403aa8:	mov    rdx,r15
  403aab:	mov    rcx,rbp
  403aae:	call   0x404520
  403ab3:	test   eax,eax
  403ab5:	jne    0x403a95
  403ab7:	mov    rcx,r15
  403aba:	call   0x404528
  403abf:	cmp    rax,rdi
  403ac2:	je     0x403bbd
  403ac8:	cmp    rdi,0x1
  403acc:	je     0x403a90
  403ace:	cmp    r12d,0xffffffff
  403ad2:	je     0x403b70
  403ad8:	movsxd rax,r12d
  403adb:	shl    rax,0x5
  403adf:	add    rax,r14
  403ae2:	mov    edx,DWORD PTR [rax+0x8]
  403ae5:	cmp    DWORD PTR [rbx-0x18],edx
  403ae8:	je     0x403b80
  403aee:	add    rbx,0x20
  403af2:	mov    r15,QWORD PTR [rbx-0x20]
  403af6:	add    esi,0x1
  403af9:	mov    DWORD PTR [rsp+0x2c],0x1
  403b01:	test   r15,r15
  403b04:	jne    0x403aa5
  403b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b10:	mov    r9d,DWORD PTR [rsp+0x2c]
  403b15:	test   r9d,r9d
  403b18:	je     0x403bb0
  403b1e:	mov    r8d,DWORD PTR [rip+0x254b]        # 0x406070
  403b25:	test   r8d,r8d
  403b28:	je     0x403b48
  403b2a:	mov    rax,QWORD PTR [rsp+0x98]
  403b32:	cmp    BYTE PTR [rax],0x3a
  403b35:	je     0x403b48
  403b37:	lea    rcx,[rip+0x4252]        # 0x407d90
  403b3e:	mov    r8,rbp
  403b41:	mov    edx,edi
  403b43:	call   0x403970
  403b48:	mov    DWORD PTR [rip+0x2516],0x0        # 0x406068
  403b52:	mov    eax,0x3f
  403b57:	add    rsp,0x48
  403b5b:	pop    rbx
  403b5c:	pop    rsi
  403b5d:	pop    rdi
  403b5e:	pop    rbp
  403b5f:	pop    r12
  403b61:	pop    r13
  403b63:	pop    r14
  403b65:	pop    r15
  403b67:	ret    
  403b68:	nop    DWORD PTR [rax+rax*1+0x0]
  403b70:	mov    r12d,esi
  403b73:	jmp    0x403a95
  403b78:	nop    DWORD PTR [rax+rax*1+0x0]
  403b80:	mov    rdx,QWORD PTR [rax+0x10]
  403b84:	cmp    QWORD PTR [rbx-0x10],rdx
  403b88:	jne    0x403aee
  403b8e:	mov    eax,DWORD PTR [rax+0x18]
  403b91:	cmp    DWORD PTR [rbx-0x8],eax
  403b94:	mov    eax,0x1
  403b99:	cmove  eax,DWORD PTR [rsp+0x2c]
  403b9e:	mov    DWORD PTR [rsp+0x2c],eax
  403ba2:	jmp    0x403a95
  403ba7:	nop    WORD PTR [rax+rax*1+0x0]
  403bb0:	cmp    r12d,0xffffffff
  403bb4:	je     0x403c7b
  403bba:	mov    esi,r12d
  403bbd:	movsxd rax,esi
  403bc0:	shl    rax,0x5
  403bc4:	add    r14,rax
  403bc7:	cmp    QWORD PTR [rsp+0x30],0x0
  403bcd:	mov    eax,DWORD PTR [r14+0x8]
  403bd1:	setne  cl
  403bd4:	je     0x403c44
  403bd6:	test   eax,eax
  403bd8:	jne    0x403c44
  403bda:	mov    ecx,DWORD PTR [rip+0x2490]        # 0x406070
  403be0:	test   ecx,ecx
  403be2:	jne    0x403c14
  403be4:	cmp    QWORD PTR [r14+0x10],0x0
  403be9:	je     0x403d44
  403bef:	mov    DWORD PTR [rip+0x246f],0x0        # 0x406068
  403bf9:	mov    rax,QWORD PTR [rsp+0x98]
  403c01:	cmp    BYTE PTR [rax],0x3a
  403c04:	je     0x403d31
  403c0a:	mov    eax,0x3f
  403c0f:	jmp    0x403b57
  403c14:	mov    rax,QWORD PTR [rsp+0x98]
  403c1c:	cmp    BYTE PTR [rax],0x3a
  403c1f:	je     0x403be4
  403c21:	lea    rcx,[rip+0x4138]        # 0x407d60
  403c28:	mov    r8,rbp
  403c2b:	mov    edx,edi
  403c2d:	call   0x403970
  403c32:	jmp    0x403be4
  403c34:	mov    rcx,rbp
  403c37:	call   0x404528
  403c3c:	mov    rdi,rax
  403c3f:	jmp    0x403a6b
  403c44:	lea    edx,[rax-0x1]
  403c47:	cmp    edx,0x1
  403c4a:	jbe    0x403cb7
  403c4c:	cmp    QWORD PTR [rsp+0xa8],0x0
  403c55:	je     0x403c61
  403c57:	mov    rax,QWORD PTR [rsp+0xa8]
  403c5f:	mov    DWORD PTR [rax],esi
  403c61:	mov    rax,QWORD PTR [r14+0x10]
  403c65:	test   rax,rax
  403c68:	je     0x403d3b
  403c6e:	mov    edx,DWORD PTR [r14+0x18]
  403c72:	mov    DWORD PTR [rax],edx
  403c74:	xor    eax,eax
  403c76:	jmp    0x403b57
  403c7b:	test   r13d,r13d
  403c7e:	jne    0x403d92
  403c84:	mov    eax,DWORD PTR [rip+0x23e6]        # 0x406070
  403c8a:	test   eax,eax
  403c8c:	je     0x403b48
  403c92:	mov    rax,QWORD PTR [rsp+0x98]
  403c9a:	cmp    BYTE PTR [rax],0x3a
  403c9d:	je     0x403b48
  403ca3:	lea    rcx,[rip+0x4076]        # 0x407d20
  403caa:	mov    rdx,rbp
  403cad:	call   0x403970
  403cb2:	jmp    0x403b48
  403cb7:	test   cl,cl
  403cb9:	je     0x403d53
  403cbf:	mov    rdx,QWORD PTR [rsp+0x30]
  403cc4:	cmp    eax,0x1
  403cc7:	mov    QWORD PTR [rip+0x7d82],rdx        # 0x40ba50
  403cce:	jne    0x403c4c
  403cd4:	mov    r15,QWORD PTR [rsp+0x30]
  403cd9:	test   r15,r15
  403cdc:	jne    0x403c4c
  403ce2:	mov    edx,DWORD PTR [rip+0x2388]        # 0x406070
  403ce8:	test   edx,edx
  403cea:	je     0x403d08
  403cec:	mov    rax,QWORD PTR [rsp+0x98]
  403cf4:	cmp    BYTE PTR [rax],0x3a
  403cf7:	je     0x403d08
  403cf9:	lea    rcx,[rip+0x40c0]        # 0x407dc0
  403d00:	mov    rdx,rbp
  403d03:	call   0x403970
  403d08:	cmp    QWORD PTR [r14+0x10],0x0
  403d0d:	je     0x403d86
  403d0f:	mov    DWORD PTR [rip+0x234f],0x0        # 0x406068
  403d19:	mov    rax,QWORD PTR [rsp+0x98]
  403d21:	sub    DWORD PTR [rip+0x2344],0x1        # 0x40606c
  403d28:	cmp    BYTE PTR [rax],0x3a
  403d2b:	jne    0x403c0a
  403d31:	mov    eax,0x3a
  403d36:	jmp    0x403b57
  403d3b:	mov    eax,DWORD PTR [r14+0x18]
  403d3f:	jmp    0x403b57
  403d44:	mov    eax,DWORD PTR [r14+0x18]
  403d48:	mov    DWORD PTR [rip+0x231a],eax        # 0x406068
  403d4e:	jmp    0x403bf9
  403d53:	cmp    eax,0x1
  403d56:	jne    0x403c4c
  403d5c:	mov    eax,DWORD PTR [rsp+0x38]
  403d60:	mov    rdx,QWORD PTR [rsp+0x90]
  403d68:	add    eax,0x2
  403d6b:	mov    DWORD PTR [rip+0x22fb],eax        # 0x40606c
  403d71:	movsxd rax,DWORD PTR [rsp+0x3c]
  403d76:	mov    r15,QWORD PTR [rdx+rax*8]
  403d7a:	mov    QWORD PTR [rip+0x7ccf],r15        # 0x40ba50
  403d81:	jmp    0x403cd9
  403d86:	mov    eax,DWORD PTR [r14+0x18]
  403d8a:	mov    DWORD PTR [rip+0x22d8],eax        # 0x406068
  403d90:	jmp    0x403d19
  403d92:	mov    eax,DWORD PTR [rsp+0x38]
  403d96:	mov    DWORD PTR [rip+0x22d0],eax        # 0x40606c
  403d9c:	mov    eax,0xffffffff
  403da1:	jmp    0x403b57
  403da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403db0:	push   r15
  403db2:	push   r14
  403db4:	push   r13
  403db6:	push   r12
  403db8:	push   rbp
  403db9:	push   rdi
  403dba:	push   rsi
  403dbb:	push   rbx
  403dbc:	sub    rsp,0x38
  403dc0:	test   r8,r8
  403dc3:	mov    edi,ecx
  403dc5:	mov    r15,rdx
  403dc8:	mov    QWORD PTR [rsp+0x90],r8
  403dd0:	mov    QWORD PTR [rsp+0x98],r9
  403dd8:	je     0x4040ae
  403dde:	mov    r9d,DWORD PTR [rip+0x2287]        # 0x40606c
  403de5:	test   r9d,r9d
  403de8:	je     0x404040
  403dee:	cmp    DWORD PTR [rip+0x225b],0xffffffff        # 0x406050
  403df5:	je     0x403fb4
  403dfb:	mov    edx,DWORD PTR [rip+0x7c57]        # 0x40ba58
  403e01:	test   edx,edx
  403e03:	jne    0x403fb4
  403e09:	mov    rax,QWORD PTR [rsp+0x90]
  403e11:	movzx  eax,BYTE PTR [rax]
  403e14:	cmp    al,0x2d
  403e16:	je     0x403fe8
  403e1c:	cmp    al,0x2b
  403e1e:	je     0x4040c4
  403e24:	mov    r8d,DWORD PTR [rip+0x2225]        # 0x406050
  403e2b:	test   r8d,r8d
  403e2e:	jne    0x4040c4
  403e34:	sub    eax,0x2b
  403e37:	test   al,0xfd
  403e39:	je     0x403ff0
  403e3f:	test   edx,edx
  403e41:	mov    QWORD PTR [rip+0x7c04],0x0        # 0x40ba50
  403e4c:	jne    0x404020
  403e52:	mov    r14d,DWORD PTR [rsp+0xa8]
  403e5a:	mov    ebp,DWORD PTR [rsp+0xa8]
  403e61:	and    r14d,0x2
  403e65:	and    ebp,0x1
  403e68:	jmp    0x403eee
  403e6d:	nop    DWORD PTR [rax]
  403e70:	lea    rax,[rip+0x3e9e]        # 0x407d15
  403e77:	test   r14d,r14d
  403e7a:	mov    edx,r14d
  403e7d:	mov    QWORD PTR [rip+0x21dc],rax        # 0x406060
  403e84:	jne    0x404190
  403e8a:	test   ebp,ebp
  403e8c:	je     0x4040ae
  403e92:	mov    r12d,DWORD PTR [rip+0x21bf]        # 0x406058
  403e99:	cmp    r12d,0xffffffff
  403e9d:	je     0x404010
  403ea3:	mov    r13d,DWORD PTR [rip+0x21aa]        # 0x406054
  403eaa:	cmp    r13d,0xffffffff
  403eae:	je     0x403ee5
  403eb0:	mov    edx,r13d
  403eb3:	mov    r9,r15
  403eb6:	mov    r8d,ebx
  403eb9:	mov    ecx,r12d
  403ebc:	call   0x4038c0
  403ec1:	mov    esi,DWORD PTR [rip+0x21a5]        # 0x40606c
  403ec7:	mov    eax,r12d
  403eca:	mov    edx,DWORD PTR [rip+0x7b88]        # 0x40ba58
  403ed0:	sub    eax,r13d
  403ed3:	mov    DWORD PTR [rip+0x2177],0xffffffff        # 0x406054
  403edd:	add    eax,esi
  403edf:	mov    DWORD PTR [rip+0x2173],eax        # 0x406058
  403ee5:	add    esi,0x1
  403ee8:	mov    DWORD PTR [rip+0x217e],esi        # 0x40606c
  403eee:	test   edx,edx
  403ef0:	jne    0x403f04
  403ef2:	mov    rsi,QWORD PTR [rip+0x2167]        # 0x406060
  403ef9:	movzx  eax,BYTE PTR [rsi]
  403efc:	test   al,al
  403efe:	jne    0x4040fe
  403f04:	movsxd rbx,DWORD PTR [rip+0x2161]        # 0x40606c
  403f0b:	mov    DWORD PTR [rip+0x7b43],0x0        # 0x40ba58
  403f15:	cmp    ebx,edi
  403f17:	mov    esi,ebx
  403f19:	jge    0x404060
  403f1f:	movsxd rax,ebx
  403f22:	mov    r13,QWORD PTR [r15+rax*8]
  403f26:	cmp    BYTE PTR [r13+0x0],0x2d
  403f2b:	mov    QWORD PTR [rip+0x212e],r13        # 0x406060
  403f32:	jne    0x403e70
  403f38:	movzx  eax,BYTE PTR [r13+0x1]
  403f3d:	test   al,al
  403f3f:	jne    0x4040d1
  403f45:	mov    rcx,QWORD PTR [rsp+0x90]
  403f4d:	mov    edx,0x2d
  403f52:	call   0x404530
  403f57:	test   rax,rax
  403f5a:	je     0x403e70
  403f60:	cmp    DWORD PTR [rip+0x20f1],0xffffffff        # 0x406058
  403f67:	mov    rsi,r13
  403f6a:	je     0x403f84
  403f6c:	cmp    DWORD PTR [rip+0x20e1],0xffffffff        # 0x406054
  403f73:	mov    eax,0x2d
  403f78:	jne    0x4040fe
  403f7e:	mov    DWORD PTR [rip+0x20d0],ebx        # 0x406054
  403f84:	cmp    QWORD PTR [rsp+0x98],0x0
  403f8d:	je     0x40437c
  403f93:	cmp    rsi,QWORD PTR [r15+rbx*8]
  403f97:	mov    eax,0x2d
  403f9c:	je     0x4041ce
  403fa2:	add    rsi,0x1
  403fa6:	xor    edx,edx
  403fa8:	mov    QWORD PTR [rip+0x20b1],rsi        # 0x406060
  403faf:	jmp    0x404152
  403fb4:	lea    rcx,[rip+0x3d4a]        # 0x407d05
  403fbb:	call   0x404580
  403fc0:	test   rax,rax
  403fc3:	mov    edx,DWORD PTR [rip+0x7a8f]        # 0x40ba58
  403fc9:	setne  al
  403fcc:	movzx  eax,al
  403fcf:	mov    DWORD PTR [rip+0x207b],eax        # 0x406050
  403fd5:	mov    rax,QWORD PTR [rsp+0x90]
  403fdd:	movzx  eax,BYTE PTR [rax]
  403fe0:	cmp    al,0x2d
  403fe2:	jne    0x403e1c
  403fe8:	or     DWORD PTR [rsp+0xa8],0x2
  403ff0:	add    QWORD PTR [rsp+0x90],0x1
  403ff9:	test   edx,edx
  403ffb:	mov    QWORD PTR [rip+0x7a4a],0x0        # 0x40ba50
  404006:	je     0x403e52
  40400c:	jmp    0x404020
  40400e:	xchg   ax,ax
  404010:	mov    DWORD PTR [rip+0x2042],ebx        # 0x406058
  404016:	jmp    0x403ee5
  40401b:	nop    DWORD PTR [rax+rax*1+0x0]
  404020:	mov    DWORD PTR [rip+0x202a],0xffffffff        # 0x406054
  40402a:	mov    DWORD PTR [rip+0x2024],0xffffffff        # 0x406058
  404034:	jmp    0x403e52
  404039:	nop    DWORD PTR [rax+0x0]
  404040:	mov    DWORD PTR [rip+0x7a0e],0x1        # 0x40ba58
  40404a:	mov    DWORD PTR [rip+0x2018],0x1        # 0x40606c
  404054:	jmp    0x403dee
  404059:	nop    DWORD PTR [rax+0x0]
  404060:	mov    esi,DWORD PTR [rip+0x1fee]        # 0x406054
  404066:	lea    rax,[rip+0x3ca8]        # 0x407d15
  40406d:	mov    QWORD PTR [rip+0x1fec],rax        # 0x406060
  404074:	cmp    esi,0xffffffff
  404077:	je     0x4041aa
  40407d:	mov    edi,DWORD PTR [rip+0x1fd5]        # 0x406058
  404083:	mov    r9,r15
  404086:	mov    r8d,ebx
  404089:	mov    edx,esi
  40408b:	mov    ecx,edi
  40408d:	sub    edi,esi
  40408f:	call   0x4038c0
  404094:	add    DWORD PTR [rip+0x1fd2],edi        # 0x40606c
  40409a:	mov    DWORD PTR [rip+0x1fb0],0xffffffff        # 0x406054
  4040a4:	mov    DWORD PTR [rip+0x1faa],0xffffffff        # 0x406058
  4040ae:	mov    eax,0xffffffff
  4040b3:	add    rsp,0x38
  4040b7:	pop    rbx
  4040b8:	pop    rsi
  4040b9:	pop    rdi
  4040ba:	pop    rbp
  4040bb:	pop    r12
  4040bd:	pop    r13
  4040bf:	pop    r14
  4040c1:	pop    r15
  4040c3:	ret    
  4040c4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  4040cc:	jmp    0x403e34
  4040d1:	mov    ebp,DWORD PTR [rip+0x1f81]        # 0x406058
  4040d7:	cmp    ebp,0xffffffff
  4040da:	je     0x4040eb
  4040dc:	cmp    DWORD PTR [rip+0x1f71],0xffffffff        # 0x406054
  4040e3:	jne    0x4040eb
  4040e5:	mov    DWORD PTR [rip+0x1f69],ebx        # 0x406054
  4040eb:	lea    rsi,[r13+0x1]
  4040ef:	cmp    al,0x2d
  4040f1:	mov    QWORD PTR [rip+0x1f68],rsi        # 0x406060
  4040f8:	je     0x4042af
  4040fe:	cmp    QWORD PTR [rsp+0x98],0x0
  404107:	je     0x4041ce
  40410d:	movsxd rdx,DWORD PTR [rip+0x1f58]        # 0x40606c
  404114:	cmp    rsi,QWORD PTR [r15+rdx*8]
  404118:	je     0x4041ce
  40411e:	cmp    al,0x2d
  404120:	je     0x403fa2
  404126:	test   BYTE PTR [rsp+0xa8],0x4
  40412e:	je     0x4041ce
  404134:	xor    edx,edx
  404136:	cmp    al,0x3a
  404138:	je     0x404152
  40413a:	mov    rcx,QWORD PTR [rsp+0x90]
  404142:	movsx  edx,al
  404145:	call   0x404530
  40414a:	xor    edx,edx
  40414c:	test   rax,rax
  40414f:	setne  dl
  404152:	mov    DWORD PTR [rsp+0x20],edx
  404156:	mov    r9,QWORD PTR [rsp+0xa0]
  40415e:	mov    rcx,r15
  404161:	mov    r8,QWORD PTR [rsp+0x98]
  404169:	mov    rdx,QWORD PTR [rsp+0x90]
  404171:	call   0x4039f0
  404176:	cmp    eax,0xffffffff
  404179:	je     0x4041c4
  40417b:	lea    rcx,[rip+0x3b93]        # 0x407d15
  404182:	mov    QWORD PTR [rip+0x1ed7],rcx        # 0x406060
  404189:	jmp    0x4040b3
  40418e:	xchg   ax,ax
  404190:	add    ebx,0x1
  404193:	mov    QWORD PTR [rip+0x78b6],r13        # 0x40ba50
  40419a:	mov    eax,0x1
  40419f:	mov    DWORD PTR [rip+0x1ec7],ebx        # 0x40606c
  4041a5:	jmp    0x4040b3
  4041aa:	mov    eax,DWORD PTR [rip+0x1ea8]        # 0x406058
  4041b0:	cmp    eax,0xffffffff
  4041b3:	je     0x40409a
  4041b9:	mov    DWORD PTR [rip+0x1ead],eax        # 0x40606c
  4041bf:	jmp    0x40409a
  4041c4:	mov    rsi,QWORD PTR [rip+0x1e95]        # 0x406060
  4041cb:	movzx  eax,BYTE PTR [rsi]
  4041ce:	lea    rbp,[rsi+0x1]
  4041d2:	movsx  ebx,al
  4041d5:	cmp    ebx,0x3a
  4041d8:	mov    QWORD PTR [rip+0x1e81],rbp        # 0x406060
  4041df:	je     0x404244
  4041e1:	cmp    ebx,0x2d
  4041e4:	je     0x404387
  4041ea:	mov    rcx,QWORD PTR [rsp+0x90]
  4041f2:	mov    edx,ebx
  4041f4:	call   0x404530
  4041f9:	test   rax,rax
  4041fc:	je     0x404244
  4041fe:	cmp    ebx,0x57
  404201:	jne    0x4042a6
  404207:	cmp    QWORD PTR [rsp+0x98],0x0
  404210:	je     0x4042a6
  404216:	movzx  edx,BYTE PTR [rax+0x1]
  40421a:	cmp    dl,0x3b
  40421d:	je     0x404300
  404223:	cmp    dl,0x3a
  404226:	je     0x40439b
  40422c:	cmp    BYTE PTR [rsi+0x1],0x0
  404230:	mov    eax,ebx
  404232:	jne    0x4040b3
  404238:	add    DWORD PTR [rip+0x1e2d],0x1        # 0x40606c
  40423f:	jmp    0x4040b3
  404244:	cmp    BYTE PTR [rsi+0x1],0x0
  404248:	jne    0x404251
  40424a:	add    DWORD PTR [rip+0x1e1b],0x1        # 0x40606c
  404251:	mov    ecx,DWORD PTR [rip+0x1e19]        # 0x406070
  404257:	test   ecx,ecx
  404259:	je     0x404276
  40425b:	mov    rax,QWORD PTR [rsp+0x90]
  404263:	cmp    BYTE PTR [rax],0x3a
  404266:	je     0x404276
  404268:	lea    rcx,[rip+0x3ad1]        # 0x407d40
  40426f:	mov    edx,ebx
  404271:	call   0x403970
  404276:	mov    DWORD PTR [rip+0x1dec],ebx        # 0x406068
  40427c:	mov    eax,0x3f
  404281:	jmp    0x4040b3
  404286:	mov    rcx,QWORD PTR [rsp+0x90]
  40428e:	mov    edx,0x2d
  404293:	call   0x404530
  404298:	test   rax,rax
  40429b:	je     0x4040ae
  4042a1:	mov    ebx,0x2d
  4042a6:	movzx  edx,BYTE PTR [rax+0x1]
  4042aa:	jmp    0x404223
  4042af:	cmp    BYTE PTR [r13+0x2],0x0
  4042b4:	jne    0x403f84
  4042ba:	mov    esi,DWORD PTR [rip+0x1d94]        # 0x406054
  4042c0:	lea    r8d,[rbx+0x1]
  4042c4:	lea    rax,[rip+0x3a4a]        # 0x407d15
  4042cb:	mov    DWORD PTR [rip+0x1d9a],r8d        # 0x40606c
  4042d2:	mov    QWORD PTR [rip+0x1d87],rax        # 0x406060
  4042d9:	cmp    esi,0xffffffff
  4042dc:	je     0x40409a
  4042e2:	mov    ecx,ebp
  4042e4:	mov    r9,r15
  4042e7:	mov    edx,esi
  4042e9:	call   0x4038c0
  4042ee:	sub    ebp,esi
  4042f0:	add    DWORD PTR [rip+0x1d76],ebp        # 0x40606c
  4042f6:	jmp    0x40409a
  4042fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	cmp    BYTE PTR [rsi+0x1],0x0
  404304:	jne    0x404455
  40430a:	mov    eax,DWORD PTR [rip+0x1d5c]        # 0x40606c
  404310:	add    eax,0x1
  404313:	cmp    edi,eax
  404315:	mov    DWORD PTR [rip+0x1d51],eax        # 0x40606c
  40431b:	jg     0x404448
  404321:	mov    edx,DWORD PTR [rip+0x1d49]        # 0x406070
  404327:	lea    rax,[rip+0x39e7]        # 0x407d15
  40432e:	mov    QWORD PTR [rip+0x1d2b],rax        # 0x406060
  404335:	test   edx,edx
  404337:	je     0x404357
  404339:	mov    rax,QWORD PTR [rsp+0x90]
  404341:	cmp    BYTE PTR [rax],0x3a
  404344:	je     0x404357
  404346:	lea    rcx,[rip+0x3ab3]        # 0x407e00
  40434d:	mov    edx,0x57
  404352:	call   0x403970
  404357:	mov    rax,QWORD PTR [rsp+0x90]
  40435f:	mov    DWORD PTR [rip+0x1cff],0x57        # 0x406068
  404369:	cmp    BYTE PTR [rax],0x3a
  40436c:	je     0x40443e
  404372:	mov    eax,0x3f
  404377:	jmp    0x4040b3
  40437c:	lea    rbp,[rsi+0x1]
  404380:	mov    QWORD PTR [rip+0x1cd9],rbp        # 0x406060
  404387:	cmp    BYTE PTR [rsi+0x1],0x0
  40438b:	je     0x404286
  404391:	mov    ebx,0x2d
  404396:	jmp    0x404251
  40439b:	mov    QWORD PTR [rip+0x76aa],0x0        # 0x40ba50
  4043a6:	cmp    BYTE PTR [rsi+0x1],0x0
  4043aa:	je     0x4043d7
  4043ac:	mov    eax,DWORD PTR [rip+0x1cba]        # 0x40606c
  4043b2:	mov    QWORD PTR [rip+0x7697],rbp        # 0x40ba50
  4043b9:	lea    rcx,[rip+0x3955]        # 0x407d15
  4043c0:	add    eax,0x1
  4043c3:	mov    DWORD PTR [rip+0x1ca3],eax        # 0x40606c
  4043c9:	mov    eax,ebx
  4043cb:	mov    QWORD PTR [rip+0x1c8e],rcx        # 0x406060
  4043d2:	jmp    0x4040b3
  4043d7:	cmp    BYTE PTR [rax+0x2],0x3a
  4043db:	mov    eax,DWORD PTR [rip+0x1c8b]        # 0x40606c
  4043e1:	je     0x4043b9
  4043e3:	add    eax,0x1
  4043e6:	cmp    edi,eax
  4043e8:	mov    DWORD PTR [rip+0x1c7e],eax        # 0x40606c
  4043ee:	jg     0x404482
  4043f4:	lea    rax,[rip+0x391a]        # 0x407d15
  4043fb:	mov    QWORD PTR [rip+0x1c5e],rax        # 0x406060
  404402:	mov    eax,DWORD PTR [rip+0x1c68]        # 0x406070
  404408:	test   eax,eax
  40440a:	je     0x404427
  40440c:	mov    rax,QWORD PTR [rsp+0x90]
  404414:	cmp    BYTE PTR [rax],0x3a
  404417:	je     0x404427
  404419:	lea    rcx,[rip+0x39e0]        # 0x407e00
  404420:	mov    edx,ebx
  404422:	call   0x403970
  404427:	mov    rax,QWORD PTR [rsp+0x90]
  40442f:	mov    DWORD PTR [rip+0x1c33],ebx        # 0x406068
  404435:	cmp    BYTE PTR [rax],0x3a
  404438:	jne    0x404372
  40443e:	mov    eax,0x3a
  404443:	jmp    0x4040b3
  404448:	cdqe   
  40444a:	mov    rax,QWORD PTR [r15+rax*8]
  40444e:	mov    QWORD PTR [rip+0x1c0b],rax        # 0x406060
  404455:	mov    r9,QWORD PTR [rsp+0xa0]
  40445d:	mov    r8,QWORD PTR [rsp+0x98]
  404465:	mov    rcx,r15
  404468:	mov    rdx,QWORD PTR [rsp+0x90]
  404470:	mov    DWORD PTR [rsp+0x20],0x0
  404478:	call   0x4039f0
  40447d:	jmp    0x40417b
  404482:	movsxd rdx,eax
  404485:	mov    rdx,QWORD PTR [r15+rdx*8]
  404489:	mov    QWORD PTR [rip+0x75c0],rdx        # 0x40ba50
  404490:	jmp    0x4043b9
  404495:	nop
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	sub    rsp,0x38
  4044a4:	xor    r9d,r9d
  4044a7:	mov    DWORD PTR [rsp+0x28],0x0
  4044af:	mov    QWORD PTR [rsp+0x20],0x0
  4044b8:	call   0x403db0
  4044bd:	add    rsp,0x38
  4044c1:	ret    
  4044c2:	nop    DWORD PTR [rax+0x0]
  4044c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044d0:	sub    rsp,0x38
  4044d4:	mov    rax,QWORD PTR [rsp+0x60]
  4044d9:	mov    DWORD PTR [rsp+0x28],0x1
  4044e1:	mov    QWORD PTR [rsp+0x20],rax
  4044e6:	call   0x403db0
  4044eb:	add    rsp,0x38
  4044ef:	ret    
  4044f0:	sub    rsp,0x38
  4044f4:	mov    rax,QWORD PTR [rsp+0x60]
  4044f9:	mov    DWORD PTR [rsp+0x28],0x5
  404501:	mov    QWORD PTR [rsp+0x20],rax
  404506:	call   0x403db0
  40450b:	add    rsp,0x38
  40450f:	ret    
  404510:	jmp    QWORD PTR [rip+0x815a]        # 0x40c670
  404516:	nop
  404517:	nop
  404518:	jmp    QWORD PTR [rip+0x814a]        # 0x40c668
  40451e:	nop
  40451f:	nop
  404520:	jmp    QWORD PTR [rip+0x813a]        # 0x40c660
  404526:	nop
  404527:	nop
  404528:	jmp    QWORD PTR [rip+0x812a]        # 0x40c658
  40452e:	nop
  40452f:	nop
  404530:	jmp    QWORD PTR [rip+0x811a]        # 0x40c650
  404536:	nop
  404537:	nop
  404538:	jmp    QWORD PTR [rip+0x810a]        # 0x40c648
  40453e:	nop
  40453f:	nop
  404540:	jmp    QWORD PTR [rip+0x80fa]        # 0x40c640
  404546:	nop
  404547:	nop
  404548:	jmp    QWORD PTR [rip+0x80ea]        # 0x40c638
  40454e:	nop
  40454f:	nop
  404550:	jmp    QWORD PTR [rip+0x80da]        # 0x40c630
  404556:	nop
  404557:	nop
  404558:	jmp    QWORD PTR [rip+0x80ca]        # 0x40c628
  40455e:	nop
  40455f:	nop
  404560:	jmp    QWORD PTR [rip+0x80ba]        # 0x40c620
  404566:	nop
  404567:	nop
  404568:	jmp    QWORD PTR [rip+0x80aa]        # 0x40c618
  40456e:	nop
  40456f:	nop
  404570:	jmp    QWORD PTR [rip+0x809a]        # 0x40c610
  404576:	nop
  404577:	nop
  404578:	jmp    QWORD PTR [rip+0x808a]        # 0x40c608
  40457e:	nop
  40457f:	nop
  404580:	jmp    QWORD PTR [rip+0x807a]        # 0x40c600
  404586:	nop
  404587:	nop
  404588:	jmp    QWORD PTR [rip+0x806a]        # 0x40c5f8
  40458e:	nop
  40458f:	nop
  404590:	jmp    QWORD PTR [rip+0x805a]        # 0x40c5f0
  404596:	nop
  404597:	nop
  404598:	jmp    QWORD PTR [rip+0x804a]        # 0x40c5e8
  40459e:	nop
  40459f:	nop
  4045a0:	jmp    QWORD PTR [rip+0x803a]        # 0x40c5e0
  4045a6:	nop
  4045a7:	nop
  4045a8:	jmp    QWORD PTR [rip+0x802a]        # 0x40c5d8
  4045ae:	nop
  4045af:	nop
  4045b0:	jmp    QWORD PTR [rip+0x801a]        # 0x40c5d0
  4045b6:	nop
  4045b7:	nop
  4045b8:	jmp    QWORD PTR [rip+0x800a]        # 0x40c5c8
  4045be:	nop
  4045bf:	nop
  4045c0:	jmp    QWORD PTR [rip+0x7ffa]        # 0x40c5c0
  4045c6:	nop
  4045c7:	nop
  4045c8:	jmp    QWORD PTR [rip+0x7fea]        # 0x40c5b8
  4045ce:	nop
  4045cf:	nop
  4045d0:	jmp    QWORD PTR [rip+0x7fda]        # 0x40c5b0
  4045d6:	nop
  4045d7:	nop
  4045d8:	jmp    QWORD PTR [rip+0x7fca]        # 0x40c5a8
  4045de:	nop
  4045df:	nop
  4045e0:	jmp    QWORD PTR [rip+0x7fba]        # 0x40c5a0
  4045e6:	nop
  4045e7:	nop
  4045e8:	jmp    QWORD PTR [rip+0x7faa]        # 0x40c598
  4045ee:	nop
  4045ef:	nop
  4045f0:	jmp    QWORD PTR [rip+0x7f9a]        # 0x40c590
  4045f6:	nop
  4045f7:	nop
  4045f8:	jmp    QWORD PTR [rip+0x7f82]        # 0x40c580
  4045fe:	nop
  4045ff:	nop
  404600:	jmp    QWORD PTR [rip+0x7f72]        # 0x40c578
  404606:	nop
  404607:	nop
  404608:	jmp    QWORD PTR [rip+0x7f62]        # 0x40c570
  40460e:	nop
  40460f:	nop
  404610:	jmp    QWORD PTR [rip+0x7f4a]        # 0x40c560
  404616:	nop
  404617:	nop
  404618:	jmp    QWORD PTR [rip+0x7f3a]        # 0x40c558
  40461e:	nop
  40461f:	nop
  404620:	jmp    QWORD PTR [rip+0x7f2a]        # 0x40c550
  404626:	nop
  404627:	nop
  404628:	jmp    QWORD PTR [rip+0x7f1a]        # 0x40c548
  40462e:	nop
  40462f:	nop
  404630:	jmp    QWORD PTR [rip+0x7f02]        # 0x40c538
  404636:	nop
  404637:	nop
  404638:	jmp    QWORD PTR [rip+0x7ef2]        # 0x40c530
  40463e:	nop
  40463f:	nop
  404640:	jmp    QWORD PTR [rip+0x7eda]        # 0x40c520
  404646:	nop
  404647:	nop
  404648:	nop    DWORD PTR [rax+rax*1+0x0]
  404650:	mov    rax,QWORD PTR [rip+0x7399]        # 0x40b9f0
  404657:	ret    
  404658:	nop    DWORD PTR [rax+rax*1+0x0]
  404660:	mov    rax,rcx
  404663:	xchg   QWORD PTR [rip+0x7386],rax        # 0x40b9f0
  40466a:	ret    
  40466b:	nop
  40466c:	nop
  40466d:	nop
  40466e:	nop
  40466f:	nop
  404670:	jmp    QWORD PTR [rip+0x7e9a]        # 0x40c510
  404676:	nop
  404677:	nop
  404678:	jmp    QWORD PTR [rip+0x7e8a]        # 0x40c508
  40467e:	nop
  40467f:	nop
  404680:	jmp    QWORD PTR [rip+0x7e7a]        # 0x40c500
  404686:	nop
  404687:	nop
  404688:	jmp    QWORD PTR [rip+0x7e6a]        # 0x40c4f8
  40468e:	nop
  40468f:	nop
  404690:	jmp    QWORD PTR [rip+0x7e5a]        # 0x40c4f0
  404696:	nop
  404697:	nop
  404698:	jmp    QWORD PTR [rip+0x7e4a]        # 0x40c4e8
  40469e:	nop
  40469f:	nop
  4046a0:	jmp    QWORD PTR [rip+0x7e3a]        # 0x40c4e0
  4046a6:	nop
  4046a7:	nop
  4046a8:	jmp    QWORD PTR [rip+0x7e2a]        # 0x40c4d8
  4046ae:	nop
  4046af:	nop
  4046b0:	jmp    QWORD PTR [rip+0x7e1a]        # 0x40c4d0
  4046b6:	nop
  4046b7:	nop
  4046b8:	jmp    QWORD PTR [rip+0x7e0a]        # 0x40c4c8
  4046be:	nop
  4046bf:	nop
  4046c0:	jmp    QWORD PTR [rip+0x7dfa]        # 0x40c4c0
  4046c6:	nop
  4046c7:	nop
  4046c8:	jmp    QWORD PTR [rip+0x7dea]        # 0x40c4b8
  4046ce:	nop
  4046cf:	nop
  4046d0:	jmp    QWORD PTR [rip+0x7dda]        # 0x40c4b0
  4046d6:	nop
  4046d7:	nop
  4046d8:	jmp    QWORD PTR [rip+0x7dca]        # 0x40c4a8
  4046de:	nop
  4046df:	nop
  4046e0:	jmp    QWORD PTR [rip+0x7dba]        # 0x40c4a0
  4046e6:	nop
  4046e7:	nop
  4046e8:	jmp    QWORD PTR [rip+0x7daa]        # 0x40c498
  4046ee:	nop
  4046ef:	nop
  4046f0:	jmp    QWORD PTR [rip+0x7d9a]        # 0x40c490
  4046f6:	nop
  4046f7:	nop
  4046f8:	jmp    QWORD PTR [rip+0x7d8a]        # 0x40c488
  4046fe:	nop
  4046ff:	nop
  404700:	jmp    QWORD PTR [rip+0x7d7a]        # 0x40c480
  404706:	nop
  404707:	nop
  404708:	jmp    QWORD PTR [rip+0x7d6a]        # 0x40c478
  40470e:	nop
  40470f:	nop
  404710:	jmp    QWORD PTR [rip+0x7d5a]        # 0x40c470
  404716:	nop
  404717:	nop
  404718:	jmp    QWORD PTR [rip+0x7d4a]        # 0x40c468
  40471e:	nop
  40471f:	nop
  404720:	jmp    QWORD PTR [rip+0x7d3a]        # 0x40c460
  404726:	nop
  404727:	nop
  404728:	nop    DWORD PTR [rax+rax*1+0x0]
  404730:	push   r15
  404732:	push   r14
  404734:	push   r13
  404736:	push   r12
  404738:	push   rbp
  404739:	push   rdi
  40473a:	push   rsi
  40473b:	push   rbx
  40473c:	sub    rsp,0x1d8
  404743:	mov    esi,ecx
  404745:	mov    rbx,rdx
  404748:	lea    r12,[rsp+0x40]
  40474d:	call   0x4024d0
  404752:	lea    rdx,[rip+0x28b0]        # 0x407009
  404759:	xor    ecx,ecx
  40475b:	mov    rdi,r12
  40475e:	call   0x404548
  404763:	mov    rbp,QWORD PTR [rip+0x38c6]        # 0x408030
  40476a:	mov    ecx,0x11
  40476f:	xor    eax,eax
  404771:	rep stos QWORD PTR es:[rdi],rax
  404774:	mov    DWORD PTR [rsp+0xa0],0xffffffff
  40477f:	mov    DWORD PTR [rsp+0x40],0x3e8
  404787:	mov    r15,rbp
  40478a:	mov    r14,rbp
  40478d:	mov    r13,rbp
  404790:	mov    rdi,rbp
  404793:	lea    r8,[rip+0x2bc7]        # 0x407361
  40479a:	mov    rdx,rbx
  40479d:	mov    ecx,esi
  40479f:	call   0x4044a0
  4047a4:	cmp    eax,0xffffffff
  4047a7:	je     0x404ad9
  4047ad:	sub    eax,0x44
  4047b0:	cmp    eax,0x32
  4047b3:	ja     0x4048e4
  4047b9:	lea    rdx,[rip+0x31e8]        # 0x4079a8
  4047c0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4047c4:	add    rdx,rax
  4047c7:	jmp    rdx
  4047c9:	nop    DWORD PTR [rax+0x0]
  4047d0:	add    DWORD PTR [rsp+0xc4],0x1
  4047d8:	jmp    0x404793
  4047da:	nop    WORD PTR [rax+rax*1+0x0]
  4047e0:	add    DWORD PTR [rsp+0xa4],0x1
  4047e8:	jmp    0x404793
  4047ea:	nop    WORD PTR [rax+rax*1+0x0]
  4047f0:	mov    rcx,QWORD PTR [rdi]
  4047f3:	add    DWORD PTR [rsp+0xbc],0x1
  4047fb:	call   0x4045c0
  404800:	mov    DWORD PTR [rsp+0x44],eax
  404804:	jmp    0x404793
  404806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404810:	xor    ecx,ecx
  404812:	call   0x4020d0
  404817:	jmp    0x404793
  40481c:	nop    DWORD PTR [rax+0x0]
  404820:	mov    rcx,QWORD PTR [r13+0x0]
  404824:	add    DWORD PTR [rsp+0xac],0x1
  40482c:	cmp    BYTE PTR [rcx],0x2d
  40482f:	je     0x405091
  404835:	call   QWORD PTR [rip+0x7d6d]        # 0x40c5a8
  40483b:	mov    QWORD PTR [rsp+0x98],rax
  404843:	jmp    0x404793
  404848:	nop    DWORD PTR [rax+rax*1+0x0]
  404850:	mov    rax,QWORD PTR [rip+0x37d9]        # 0x408030
  404857:	add    DWORD PTR [rsp+0xb8],0x1
  40485f:	mov    rcx,QWORD PTR [rax]
  404862:	call   0x4045c0
  404867:	mov    DWORD PTR [rsp+0x40],eax
  40486b:	jmp    0x404793
  404870:	add    DWORD PTR [rsp+0xa8],0x1
  404878:	jmp    0x404793
  40487d:	nop    DWORD PTR [rax]
  404880:	mov    rcx,QWORD PTR [rbp+0x0]
  404884:	call   0x4045c0
  404889:	test   eax,eax
  40488b:	mov    DWORD PTR [rsp+0xa0],eax
  404892:	jns    0x404793
  404898:	mov    rbx,QWORD PTR [rip+0x7ca9]        # 0x40c548
  40489f:	call   rbx
  4048a1:	lea    rcx,[rip+0x2a9c]        # 0x407344
  4048a8:	lea    r9,[rax+0x60]
  4048ac:	mov    r8d,0x1c
  4048b2:	mov    edx,0x1
  4048b7:	call   0x404588
  4048bc:	jmp    0x4048eb
  4048be:	xchg   ax,ax
  4048c0:	mov    rdx,QWORD PTR [r14]
  4048c3:	lea    rcx,[r12+0x8]
  4048c8:	lea    r8,[rip+0x2a40]        # 0x40730f
  4048cf:	add    DWORD PTR [rsp+0xb0],0x1
  4048d7:	call   0x401590
  4048dc:	test   eax,eax
  4048de:	jne    0x404793
  4048e4:	mov    rbx,QWORD PTR [rip+0x7c5d]        # 0x40c548
  4048eb:	call   rbx
  4048ed:	lea    rcx,[rip+0x2d6c]        # 0x407660
  4048f4:	lea    r9,[rax+0x60]
  4048f8:	mov    r8d,0x61
  4048fe:	mov    edx,0x1
  404903:	call   0x404588
  404908:	call   rbx
  40490a:	lea    rcx,[rip+0x2db7]        # 0x4076c8
  404911:	lea    r9,[rax+0x60]
  404915:	mov    r8d,0x34
  40491b:	mov    edx,0x1
  404920:	call   0x404588
  404925:	call   rbx
  404927:	lea    rcx,[rip+0x2dd2]        # 0x407700
  40492e:	lea    r9,[rax+0x60]
  404932:	mov    r8d,0x34
  404938:	mov    edx,0x1
  40493d:	call   0x404588
  404942:	call   rbx
  404944:	lea    rcx,[rip+0x2ded]        # 0x407738
  40494b:	lea    r9,[rax+0x60]
  40494f:	mov    r8d,0x36
  404955:	mov    edx,0x1
  40495a:	call   0x404588
  40495f:	call   rbx
  404961:	lea    rcx,[rip+0x2e08]        # 0x407770
  404968:	lea    r9,[rax+0x60]
  40496c:	mov    r8d,0x28
  404972:	mov    edx,0x1
  404977:	call   0x404588
  40497c:	call   rbx
  40497e:	lea    rcx,[rip+0x2e1b]        # 0x4077a0
  404985:	lea    r9,[rax+0x60]
  404989:	mov    r8d,0x39
  40498f:	mov    edx,0x1
  404994:	call   0x404588
  404999:	call   rbx
  40499b:	lea    rcx,[rip+0x2e3e]        # 0x4077e0
  4049a2:	lea    r9,[rax+0x60]
  4049a6:	mov    r8d,0x3a
  4049ac:	mov    edx,0x1
  4049b1:	call   0x404588
  4049b6:	call   rbx
  4049b8:	lea    rcx,[rip+0x2e61]        # 0x407820
  4049bf:	lea    r9,[rax+0x60]
  4049c3:	mov    r8d,0x24
  4049c9:	mov    edx,0x1
  4049ce:	call   0x404588
  4049d3:	call   rbx
  4049d5:	lea    rcx,[rip+0x2e6c]        # 0x407848
  4049dc:	lea    r9,[rax+0x60]
  4049e0:	mov    r8d,0x3f
  4049e6:	mov    edx,0x1
  4049eb:	call   0x404588
  4049f0:	call   rbx
  4049f2:	lea    rcx,[rip+0x2e8f]        # 0x407888
  4049f9:	lea    r9,[rax+0x60]
  4049fd:	mov    r8d,0x25
  404a03:	mov    edx,0x1
  404a08:	call   0x404588
  404a0d:	call   rbx
  404a0f:	lea    rcx,[rip+0x2e9a]        # 0x4078b0
  404a16:	lea    r9,[rax+0x60]
  404a1a:	mov    r8d,0x20
  404a20:	mov    edx,0x1
  404a25:	call   0x404588
  404a2a:	call   rbx
  404a2c:	lea    rcx,[rip+0x2ea5]        # 0x4078d8
  404a33:	lea    r9,[rax+0x60]
  404a37:	mov    r8d,0x21
  404a3d:	mov    edx,0x1
  404a42:	call   0x404588
  404a47:	call   rbx
  404a49:	lea    rcx,[rip+0x2eb0]        # 0x407900
  404a50:	lea    r9,[rax+0x60]
  404a54:	mov    r8d,0x32
  404a5a:	mov    edx,0x1
  404a5f:	call   0x404588
  404a64:	call   rbx
  404a66:	lea    rcx,[rip+0x2ecb]        # 0x407938
  404a6d:	lea    r9,[rax+0x60]
  404a71:	mov    r8d,0x37
  404a77:	mov    edx,0x1
  404a7c:	mov    ebx,0x1
  404a81:	call   0x404588
  404a86:	mov    eax,ebx
  404a88:	add    rsp,0x1d8
  404a8f:	pop    rbx
  404a90:	pop    rsi
  404a91:	pop    rdi
  404a92:	pop    rbp
  404a93:	pop    r12
  404a95:	pop    r13
  404a97:	pop    r14
  404a99:	pop    r15
  404a9b:	ret    
  404a9c:	nop    DWORD PTR [rax+0x0]
  404aa0:	add    DWORD PTR [rsp+0xc0],0x1
  404aa8:	jmp    0x404793
  404aad:	nop    DWORD PTR [rax]
  404ab0:	mov    rdx,QWORD PTR [r15]
  404ab3:	lea    rcx,[r12+0x30]
  404ab8:	lea    r8,[rip+0x2868]        # 0x407327
  404abf:	add    DWORD PTR [rsp+0xb4],0x1
  404ac7:	call   0x401590
  404acc:	test   eax,eax
  404ace:	jne    0x404793
  404ad4:	jmp    0x4048e4
  404ad9:	mov    eax,DWORD PTR [rsp+0xa8]
  404ae0:	add    eax,DWORD PTR [rsp+0xa4]
  404ae7:	add    eax,DWORD PTR [rsp+0xac]
  404aee:	sub    eax,0x1
  404af1:	jne    0x404f75
  404af7:	cmp    DWORD PTR [rsp+0xb0],0x0
  404aff:	je     0x404fc6
  404b05:	cmp    DWORD PTR [rsp+0xb4],0x0
  404b0d:	jne    0x404b96
  404b13:	lea    rcx,[rip+0x2916]        # 0x407430
  404b1a:	call   0x404550
  404b1f:	lea    rcx,[rip+0x28af]        # 0x4073d5
  404b26:	call   0x404560
  404b2b:	call   0x401530
  404b30:	lea    rcx,[rip+0x28b0]        # 0x4073e7
  404b37:	mov    QWORD PTR [rsp+0x80],rax
  404b3f:	call   0x404560
  404b44:	call   0x401530
  404b49:	lea    rcx,[rip+0x28a9]        # 0x4073f9
  404b50:	mov    QWORD PTR [rsp+0x70],rax
  404b55:	call   0x404560
  404b5a:	call   0x401530
  404b5f:	lea    rcx,[rip+0x28a5]        # 0x40740b
  404b66:	mov    QWORD PTR [rsp+0x78],rax
  404b6b:	call   0x404560
  404b70:	call   0x401530
  404b75:	lea    rcx,[rip+0x28a1]        # 0x40741d
  404b7c:	mov    QWORD PTR [rsp+0x88],rax
  404b84:	call   0x404560
  404b89:	call   0x401530
  404b8e:	mov    QWORD PTR [rsp+0x90],rax
  404b96:	call   0x402148
  404b9b:	test   eax,eax
  404b9d:	jne    0x404ba9
  404b9f:	mov    ebx,0x1
  404ba4:	jmp    0x404a86
  404ba9:	lea    rcx,[rip+0xffffffffffffd410]        # 0x401fc0
  404bb0:	call   0x402150
  404bb5:	lea    rcx,[rip+0xffffffffffffd354]        # 0x401f10
  404bbc:	call   0x402130
  404bc1:	call   0x402140
  404bc6:	mov    rdx,QWORD PTR [rsp+0x48]
  404bcb:	mov    rbx,rax
  404bce:	test   rdx,rdx
  404bd1:	je     0x404be1
  404bd3:	mov    r8d,0x2
  404bd9:	mov    rcx,rax
  404bdc:	call   0x402100
  404be1:	mov    rdx,QWORD PTR [rsp+0x50]
  404be6:	test   rdx,rdx
  404be9:	je     0x404bf9
  404beb:	mov    r8d,0x3
  404bf1:	mov    rcx,rbx
  404bf4:	call   0x402100
  404bf9:	lea    rdx,[rip+0x285a]        # 0x40745a
  404c00:	mov    r8d,0x5
  404c06:	mov    rcx,rbx
  404c09:	call   0x402100
  404c0e:	cmp    DWORD PTR [rsp+0xbc],0x0
  404c16:	je     0x404c2e
  404c18:	mov    edx,DWORD PTR [rsp+0x44]
  404c1c:	test   edx,edx
  404c1e:	jle    0x404c2e
  404c20:	mov    r8d,0xb
  404c26:	mov    rcx,rbx
  404c29:	call   0x402108
  404c2e:	mov    rdx,QWORD PTR [rsp+0x58]
  404c33:	mov    r8d,0x1
  404c39:	mov    rcx,rbx
  404c3c:	call   0x4020d8
  404c41:	test   rax,rax
  404c44:	mov    rsi,rax
  404c47:	je     0x404f9e
  404c4d:	mov    rdx,QWORD PTR [rsp+0x60]
  404c52:	mov    rcx,rax
  404c55:	call   0x4020e0
  404c5a:	test   eax,eax
  404c5c:	jne    0x404c93
  404c5e:	mov    rsi,QWORD PTR [rsp+0x60]
  404c63:	xor    edi,edi
  404c65:	call   QWORD PTR [rip+0x78dd]        # 0x40c548
  404c6b:	lea    rdx,[rip+0x281e]        # 0x407490
  404c72:	lea    rcx,[rax+0x60]
  404c76:	mov    r8,rsi
  404c79:	call   0x4045a0
  404c7e:	mov    rcx,rbx
  404c81:	call   0x402138
  404c86:	mov    rcx,rdi
  404c89:	call   0x402138
  404c8e:	jmp    0x404b9f
  404c93:	call   0x402140
  404c98:	mov    rdx,QWORD PTR [rsp+0x70]
  404c9d:	mov    rdi,rax
  404ca0:	test   rdx,rdx
  404ca3:	je     0x404cb3
  404ca5:	mov    r8d,0x2
  404cab:	mov    rcx,rax
  404cae:	call   0x402100
  404cb3:	mov    rdx,QWORD PTR [rsp+0x78]
  404cb8:	test   rdx,rdx
  404cbb:	je     0x404ccb
  404cbd:	mov    r8d,0x3
  404cc3:	mov    rcx,rdi
  404cc6:	call   0x402100
  404ccb:	lea    rdx,[rip+0x2788]        # 0x40745a
  404cd2:	mov    r8d,0x5
  404cd8:	mov    rcx,rdi
  404cdb:	call   0x402100
  404ce0:	mov    r8d,0x6
  404ce6:	mov    edx,0x1
  404ceb:	mov    rcx,rdi
  404cee:	call   0x402110
  404cf3:	cmp    DWORD PTR [rsp+0xbc],0x0
  404cfb:	je     0x404d13
  404cfd:	mov    edx,DWORD PTR [rsp+0x44]
  404d01:	test   edx,edx
  404d03:	jle    0x404d13
  404d05:	mov    r8d,0xb
  404d0b:	mov    rcx,rdi
  404d0e:	call   0x402108
  404d13:	mov    rdx,QWORD PTR [rsp+0x80]
  404d1b:	mov    r8d,0x1
  404d21:	mov    rcx,rdi
  404d24:	call   0x4020d8
  404d29:	test   rax,rax
  404d2c:	mov    rbp,rax
  404d2f:	je     0x40506b
  404d35:	mov    rdx,QWORD PTR [rsp+0x88]
  404d3d:	mov    rcx,rax
  404d40:	call   0x4020e0
  404d45:	test   eax,eax
  404d47:	je     0x405045
  404d4d:	mov    rcx,rbx
  404d50:	call   0x402138
  404d55:	mov    rcx,rdi
  404d58:	call   0x402138
  404d5d:	mov    edx,DWORD PTR [rsp+0xa0]
  404d64:	mov    rcx,rbp
  404d67:	call   0x402060
  404d6c:	sub    eax,0x1
  404d6f:	jne    0x404b9f
  404d75:	mov    edx,DWORD PTR [rsp+0xa0]
  404d7c:	mov    rcx,rsi
  404d7f:	call   0x402060
  404d84:	cmp    eax,0x1
  404d87:	mov    ebx,eax
  404d89:	jne    0x404b9f
  404d8f:	cmp    DWORD PTR [rsp+0xac],0x0
  404d97:	je     0x404dc3
  404d99:	mov    r8,QWORD PTR [rsp+0x90]
  404da1:	mov    rdx,QWORD PTR [rsp+0x98]
  404da9:	mov    r9,rsi
  404dac:	mov    rcx,QWORD PTR [rsp+0x68]
  404db1:	mov    QWORD PTR [rsp+0x20],rbp
  404db6:	call   0x4016d0
  404dbb:	test   eax,eax
  404dbd:	je     0x4050ed
  404dc3:	mov    r14,QWORD PTR [rsp+0x68]
  404dc8:	lea    r13,[rsp+0xd0]
  404dd0:	lea    rdx,[rip+0x2239]        # 0x407010
  404dd7:	mov    r15,QWORD PTR [rsp+0x90]
  404ddf:	mov    rcx,r13
  404de2:	mov    r8,r14
  404de5:	call   0x404538
  404dea:	mov    rdx,r13
  404ded:	mov    rcx,rsi
  404df0:	call   0x402178
  404df5:	test   eax,eax
  404df7:	je     0x4050ba
  404dfd:	mov    rcx,rsi
  404e00:	xor    edi,edi
  404e02:	call   0x4020f0
  404e07:	test   eax,eax
  404e09:	jne    0x404e1a
  404e0b:	jmp    0x40511e
  404e10:	mov    rcx,rsi
  404e13:	call   0x402120
  404e18:	mov    edi,eax
  404e1a:	mov    rcx,rsi
  404e1d:	call   0x402118
  404e22:	cmp    eax,0x1
  404e25:	je     0x404e10
  404e27:	cmp    eax,0x2
  404e2a:	jne    0x4050cb
  404e30:	test   edi,edi
  404e32:	je     0x4050dc
  404e38:	lea    rdx,[rip+0x21d1]        # 0x407010
  404e3f:	mov    r8,r15
  404e42:	mov    rcx,r13
  404e45:	call   0x404538
  404e4a:	mov    rdx,r13
  404e4d:	mov    rcx,rbp
  404e50:	call   0x402178
  404e55:	test   eax,eax
  404e57:	je     0x4050ba
  404e5d:	mov    rcx,rbp
  404e60:	xor    r15d,r15d
  404e63:	call   0x4020f0
  404e68:	test   eax,eax
  404e6a:	jne    0x404e7c
  404e6c:	jmp    0x405143
  404e71:	mov    rcx,rbp
  404e74:	call   0x402120
  404e79:	mov    r15d,eax
  404e7c:	mov    rcx,rbp
  404e7f:	call   0x402118
  404e84:	cmp    eax,0x1
  404e87:	je     0x404e71
  404e89:	cmp    eax,0x2
  404e8c:	jne    0x4050cb
  404e92:	test   r15d,r15d
  404e95:	je     0x405132
  404e9b:	cmp    edi,r15d
  404e9e:	mov    r13d,0x1
  404ea4:	je     0x404eb5
  404ea6:	jmp    0x405198
  404eab:	cmp    r15d,0x6c
  404eaf:	jne    0x404efd
  404eb1:	add    r13d,0x1
  404eb5:	cmp    edi,r13d
  404eb8:	jl     0x405157
  404ebe:	mov    edx,r13d
  404ec1:	mov    rcx,rsi
  404ec4:	call   0x402168
  404ec9:	mov    edx,r13d
  404ecc:	mov    rcx,rsi
  404ecf:	mov    r15d,eax
  404ed2:	call   0x402170
  404ed7:	mov    edx,r13d
  404eda:	mov    rcx,rbp
  404edd:	mov    DWORD PTR [rsp+0x38],eax
  404ee1:	call   0x402168
  404ee6:	mov    edx,r13d
  404ee9:	mov    r14d,eax
  404eec:	mov    rcx,rbp
  404eef:	call   0x402170
  404ef4:	cmp    r14d,0x6c
  404ef8:	mov    r10d,eax
  404efb:	je     0x404eab
  404efd:	cmp    r14d,0x6a
  404f01:	jne    0x404f09
  404f03:	cmp    r15d,0x6a
  404f07:	je     0x404eb1
  404f09:	cmp    DWORD PTR [rsp+0x38],r10d
  404f0e:	jne    0x404f15
  404f10:	cmp    r15d,r14d
  404f13:	je     0x404eb1
  404f15:	lea    rcx,[rip+0x267c]        # 0x407598
  404f1c:	mov    edx,r13d
  404f1f:	mov    DWORD PTR [rsp+0x3c],r10d
  404f24:	call   0x404560
  404f29:	mov    r8d,DWORD PTR [rsp+0x38]
  404f2e:	lea    rcx,[rip+0x2684]        # 0x4075b9
  404f35:	mov    edx,r15d
  404f38:	call   0x404560
  404f3d:	mov    r10d,DWORD PTR [rsp+0x3c]
  404f42:	lea    rcx,[rip+0x268c]        # 0x4075d5
  404f49:	mov    edx,r14d
  404f4c:	mov    r8d,r10d
  404f4f:	call   0x404560
  404f54:	lea    rcx,[rip+0x2a15]        # 0x407970
  404f5b:	call   0x404550
  404f60:	mov    rcx,rsi
  404f63:	call   0x402180
  404f68:	mov    rcx,rbp
  404f6b:	call   0x402180
  404f70:	jmp    0x404a86
  404f75:	mov    rbx,QWORD PTR [rip+0x75cc]        # 0x40c548
  404f7c:	call   rbx
  404f7e:	lea    rcx,[rip+0x23f3]        # 0x407378
  404f85:	lea    r9,[rax+0x60]
  404f89:	mov    r8d,0x35
  404f8f:	mov    edx,0x1
  404f94:	call   0x404588
  404f99:	jmp    0x4048eb
  404f9e:	call   QWORD PTR [rip+0x75a4]        # 0x40c548
  404fa4:	lea    rcx,[rip+0x24bd]        # 0x407468
  404fab:	lea    r9,[rax+0x60]
  404faf:	mov    r8d,0x20
  404fb5:	mov    edx,0x1
  404fba:	xor    edi,edi
  404fbc:	call   0x404588
  404fc1:	jmp    0x404c7e
  404fc6:	lea    rcx,[rip+0x23e3]        # 0x4073b0
  404fcd:	call   0x404550
  404fd2:	lea    rcx,[rip+0x23fc]        # 0x4073d5
  404fd9:	call   0x404560
  404fde:	call   0x401530
  404fe3:	lea    rcx,[rip+0x23fd]        # 0x4073e7
  404fea:	mov    QWORD PTR [rsp+0x58],rax
  404fef:	call   0x404560
  404ff4:	call   0x401530
  404ff9:	lea    rcx,[rip+0x23f9]        # 0x4073f9
  405000:	mov    QWORD PTR [rsp+0x48],rax
  405005:	call   0x404560
  40500a:	call   0x401530
  40500f:	lea    rcx,[rip+0x23f5]        # 0x40740b
  405016:	mov    QWORD PTR [rsp+0x50],rax
  40501b:	call   0x404560
  405020:	call   0x401530
  405025:	lea    rcx,[rip+0x23f1]        # 0x40741d
  40502c:	mov    QWORD PTR [rsp+0x60],rax
  405031:	call   0x404560
  405036:	call   0x401530
  40503b:	mov    QWORD PTR [rsp+0x68],rax
  405040:	jmp    0x404b05
  405045:	mov    rsi,QWORD PTR [rsp+0x88]
  40504d:	call   QWORD PTR [rip+0x74f5]        # 0x40c548
  405053:	lea    rdx,[rip+0x2436]        # 0x407490
  40505a:	lea    rcx,[rax+0x60]
  40505e:	mov    r8,rsi
  405061:	call   0x4045a0
  405066:	jmp    0x404c7e
  40506b:	call   QWORD PTR [rip+0x74d7]        # 0x40c548
  405071:	lea    rcx,[rip+0x2438]        # 0x4074b0
  405078:	lea    r9,[rax+0x60]
  40507c:	mov    r8d,0x25
  405082:	mov    edx,0x1
  405087:	call   0x404588
  40508c:	jmp    0x404c7e
  405091:	mov    rbx,QWORD PTR [rip+0x74b0]        # 0x40c548
  405098:	call   rbx
  40509a:	lea    rcx,[rip+0x2254]        # 0x4072f5
  4050a1:	lea    r9,[rax+0x60]
  4050a5:	mov    r8d,0x19
  4050ab:	mov    edx,0x1
  4050b0:	call   0x404588
  4050b5:	jmp    0x4048eb
  4050ba:	lea    rcx,[rip+0x1f7f]        # 0x407040
  4050c1:	call   0x404550
  4050c6:	jmp    0x404f54
  4050cb:	lea    rcx,[rip+0x2056]        # 0x407128
  4050d2:	call   0x404550
  4050d7:	jmp    0x404f54
  4050dc:	lea    rcx,[rip+0x2432]        # 0x407515
  4050e3:	call   0x404550
  4050e8:	jmp    0x404f54
  4050ed:	mov    r8,QWORD PTR [rsp+0x90]
  4050f5:	mov    rdx,QWORD PTR [rsp+0x98]
  4050fd:	lea    rcx,[rip+0x23d4]        # 0x4074d8
  405104:	call   0x404560
  405109:	mov    rcx,rsi
  40510c:	call   0x402180
  405111:	mov    rcx,rbp
  405114:	call   0x402180
  405119:	jmp    0x404a86
  40511e:	lea    rcx,[rip+0x1f28]        # 0x40704d
  405125:	mov    rdx,r14
  405128:	call   0x404560
  40512d:	jmp    0x404f54
  405132:	lea    rcx,[rip+0x240d]        # 0x407546
  405139:	call   0x404550
  40513e:	jmp    0x404f54
  405143:	lea    rcx,[rip+0x23e0]        # 0x40752a
  40514a:	mov    rdx,r14
  40514d:	call   0x404560
  405152:	jmp    0x404f54
  405157:	mov    r8,rbp
  40515a:	mov    rdx,rsi
  40515d:	mov    rcx,r12
  405160:	call   0x401930
  405165:	test   eax,eax
  405167:	je     0x405180
  405169:	mov    rcx,rsi
  40516c:	xor    ebx,ebx
  40516e:	call   0x402180
  405173:	mov    rcx,rbp
  405176:	call   0x402180
  40517b:	jmp    0x404a86
  405180:	lea    rcx,[rip+0x246a]        # 0x4075f1
  405187:	call   0x404550
  40518c:	lea    rcx,[rip+0x247d]        # 0x407610
  405193:	jmp    0x404f5b
  405198:	lea    rcx,[rip+0x23c1]        # 0x407560
  40519f:	mov    r8d,r15d
  4051a2:	mov    edx,edi
  4051a4:	call   0x404560
  4051a9:	jmp    0x404f54
  4051ae:	nop
  4051af:	nop
  4051b0:	(bad)  
  4051b1:	(bad)  
  4051b2:	(bad)  
  4051b3:	(bad)  
  4051b4:	(bad)  
  4051b5:	(bad)  
  4051b6:	(bad)  
  4051b7:	inc    DWORD PTR [rax]
  4051b9:	add    BYTE PTR [rax],al
  4051bb:	add    BYTE PTR [rax],al
  4051bd:	add    BYTE PTR [rax],al
  4051bf:	add    bh,bh
  4051c1:	(bad)  
  4051c2:	(bad)  
  4051c3:	(bad)  
  4051c4:	(bad)  
  4051c5:	(bad)  
  4051c6:	(bad)  
  4051c7:	inc    DWORD PTR [rax]
  4051c9:	add    BYTE PTR [rax],al
  4051cb:	add    BYTE PTR [rax],al
  4051cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40600e:	add    BYTE PTR [rax],al
  406010:	enter  0x4051,0x0
	...
  406020:	(bad)  
  406021:	(bad)  
  406022:	(bad)  
  406023:	(bad)  
  406024:	(bad)  
  406025:	(bad)  
  406026:	(bad)  
  406027:	inc    DWORD PTR [rax]
  406029:	add    BYTE PTR [rax],al
  40602b:	add    BYTE PTR [rax],al
  40602d:	add    BYTE PTR [rax],al
  40602f:	add    bh,bh
	...
  40603d:	add    BYTE PTR [rax],al
  40603f:	add    BYTE PTR [rdx],al
	...
  40604d:	add    BYTE PTR [rax],al
  40604f:	add    bh,bh
  406051:	(bad)  
  406052:	(bad)  
  406053:	(bad)  
  406054:	(bad)  
  406055:	(bad)  
  406056:	(bad)  
  406057:	(bad)  
  406058:	(bad)  
  406059:	(bad)  
  40605a:	(bad)  
  40605b:	inc    DWORD PTR [rax]
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    BYTE PTR [rip+0x407d],dl        # 0x40a0e2
  406065:	add    BYTE PTR [rax],al
  406067:	add    BYTE PTR [rdi],bh
  406069:	add    BYTE PTR [rax],al
  40606b:	add    BYTE PTR [rcx],al
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rcx],al
	...
  40607d:	add    BYTE PTR [rax],al
  40607f:	add    bh,bh
  406081:	(bad)  
  406082:	(bad)  
  406083:	inc    DWORD PTR [rax]
	...
  40608d:	add    BYTE PTR [rax],al
  40608f:	add    BYTE PTR [rax+0x46],dl
  406092:	add    BYTE PTR [rax],al
  406095:	add    BYTE PTR [rax],al
  406097:	add    BYTE PTR [rax+0x46],ah
  40609a:	add    BYTE PTR [rax],al
  40609d:	add    BYTE PTR [rax],al
  40609f:	add    BYTE PTR [rdx],dh
  4060a1:	movabs ds:0x2b992ddf,al
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	add    BYTE PTR [rax],al
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	int    0x5d
  4060b2:	and    dl,dl
  4060b4:	data16 (bad) 
  4060b6:	(bad)  
  4060b7:	inc    DWORD PTR [rax]
  4060b9:	add    BYTE PTR [rax],al
  4060bb:	add    BYTE PTR [rax],al
  4060bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	(bad)  
  407001:	add    BYTE PTR [rip+0x732500],ch        # 0xb39507
  407007:	add    BYTE PTR cs:[rax],al
  40700a:	sub    BYTE PTR [rax],ah
  40700c:	add    BYTE PTR [rax],al
  40700e:	add    BYTE PTR [rax],al
  407010:	push   rbx
  407011:	rex.RB push r12
  407013:	and    BYTE PTR [rsi+0x4d],al
  407016:	push   rsp
  407017:	rex.WRXB
  407018:	rex.WRX
  407019:	rex.WR pop rcx
  40701b:	and    BYTE PTR [rdi+0x4e],cl
  40701e:	and    BYTE PTR [rbx+0x65],dh
  407021:	ins    BYTE PTR es:[rdi],dx
  407022:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x2a]
  407027:	and    BYTE PTR [rsi+0x72],ah
  40702a:	outs   dx,DWORD PTR ds:[rsi]
  40702b:	ins    DWORD PTR es:[rdi],dx
  40702c:	and    BYTE PTR [rip+0x45532073],ah        # 0x459390a5
  407032:	push   rsp
  407033:	and    BYTE PTR [rsi+0x4d],al
  407036:	push   rsp
  407037:	rex.WRXB
  407038:	rex.WRX
  407039:	rex.WR pop rcx
  40703b:	and    BYTE PTR [rdi+0x46],cl
  40703e:	add    BYTE PTR [rdx+r12*2+0x63],r12b
  407043:	ins    DWORD PTR es:[rdi],dx
  407044:	and    BYTE PTR fs:[rsi+0x61],ah
  407048:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x62617400
  407050:	ins    BYTE PTR es:[rdi],dx
  407051:	and    BYTE PTR gs:[rip+0x6f6e2073],ah        # 0x6fae90cb
  407058:	je     0x40707a
  40705a:	outs   dx,WORD PTR ds:[rsi]
  40705c:	jne    0x4070cc
  40705e:	and    BYTE PTR fs:[rdi+0x6e],ch
  407062:	and    BYTE PTR [rbx+0x4f],dl
  407065:	push   rbp
  407066:	push   rdx
  407067:	rex.XB
  407068:	or     r8b,BYTE PTR [r8]
  40706b:	rex.XB push r10
  40706d:	rex.RB
  40706e:	push   r12
  407070:	and    BYTE PTR [r9+rax*2+0x42],r10b
  407075:	rex.WR
  407076:	and    BYTE PTR [rip+0x25732573],r12b        # 0x25b395f0
  40707d:	jae    0x40709f
  40707f:	add    BYTE PTR [rax],ah
  407081:	sub    DWORD PTR [rax],eax
  407083:	and    BYTE PTR [rax],al
  407085:	and    BYTE PTR [rsi+0x55],cl
  407088:	rex.WR
  407089:	rex.WR add BYTE PTR [rax],r12b
  40708c:	rex.WRX
  40708d:	rex.WRXB push r12
  40708f:	and    BYTE PTR [rsi+0x55],cl
  407092:	rex.WR
  407093:	rex.WR add BYTE PTR [rax+riz*1],r13b
  407097:	add    BYTE PTR [rdx+0x75],al
  40709a:	data16 data16 gs jb 0x4070bf
  40709f:	outs   dx,DWORD PTR ds:[rsi]
  4070a0:	jbe    0x407107
  4070a2:	jb     0x40710a
  4070a4:	ins    BYTE PTR es:[rdi],dx
  4070a5:	outs   dx,DWORD PTR ds:[rsi]
  4070a6:	ja     0x4070c8
  4070a8:	(bad)  
  4070a9:	jne    0x407114
  4070ab:	ins    BYTE PTR es:[rdi],dx
  4070ac:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6d6f6320
  4070b4:	ins    DWORD PTR es:[rdi],dx
  4070b5:	(bad)  
  4070b6:	outs   dx,BYTE PTR ds:[rsi]
  4070b7:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4070bc:	movsxd esi,DWORD PTR [rdx+0x65]
  4070bf:	(bad)  
  4070c0:	je     0x407127
  4070c2:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4070c6:	ins    BYTE PTR es:[rdi],dx
  4070c7:	or     al,BYTE PTR gs:[rax]
  4070ca:	add    BYTE PTR [rax],al
  4070cc:	add    BYTE PTR [rax],al
  4070ce:	add    BYTE PTR [rax],al
  4070d0:	movsxd esi,DWORD PTR [rdx+0x65]
  4070d3:	(bad)  
  4070d4:	je     0x40713b
  4070d6:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4070da:	ins    BYTE PTR es:[rdi],dx
  4070db:	and    BYTE PTR gs:[rdi+0x6e],ch
  4070df:	and    BYTE PTR [rbp+rax*2+0x53],al
  4070e3:	push   rsp
  4070e4:	rex.WB
  4070e5:	rex.WRX
  4070e6:	push   r12
  4070e8:	rex.WB
  4070e9:	rex.WRXB
  4070ea:	rex.WRX and BYTE PTR [rsi+0x61],r12b
  4070ee:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74530a00
  4070f6:	(bad)  
  4070f7:	jb     0x40716d
  4070f9:	imul   ebp,DWORD PTR [rsi+0x67],0x706f6320
  407100:	jns    0x407130
  407102:	cs add BYTE PTR cs:[rdx+rsi*2+0x75],dh
  407108:	outs   dx,BYTE PTR ds:[rsi]
  407109:	movsxd esp,DWORD PTR [rcx+0x74]
  40710c:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  407111:	ins    BYTE PTR es:[rdi],dx
  407112:	and    BYTE PTR gs:[rip+0x62640073],ah        # 0x62a4718c
  407119:	jae    0x40718c
  40711b:	ins    BYTE PTR es:[rdi],dx
  40711c:	gs js  0x407184
  40711f:	movsxd esp,DWORD PTR [rax]
  407121:	data16 (bad) 
  407123:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x72724500
  40712b:	outs   dx,DWORD PTR ds:[rsi]
  40712c:	jb     0x40714e
  40712e:	imul   ebp,DWORD PTR [rsi+0x20],0x65726264
  407135:	jae    0x4071ac
  407137:	ins    BYTE PTR es:[rdi],dx
  407138:	je     0x4071ad
  40713a:	add    BYTE PTR [rbx+0x65],dh
  40713d:	ins    BYTE PTR es:[rdi],dx
  40713e:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x2a]
  407143:	and    BYTE PTR [rsi+0x72],ah
  407146:	outs   dx,DWORD PTR ds:[rsi]
  407147:	ins    DWORD PTR es:[rdi],dx
  407148:	and    BYTE PTR [rip+0x72450073],ah        # 0x728571c1
  40714e:	jb     0x4071bf
  407150:	jb     0x407172
  407152:	imul   ebp,DWORD PTR [rsi+0x20],0x756e6264
  407159:	ins    DWORD PTR es:[rdi],dx
  40715a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40715d:	jae    0x40715f
  40715f:	rex.RB jb 0x4071d4
  407162:	outs   dx,DWORD PTR ds:[rsi]
  407163:	jb     0x407185
  407165:	imul   ebp,DWORD PTR [rsi+0x20],0x5f706362
  40716c:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  407173:	add    BYTE PTR [rax],al
  407175:	add    BYTE PTR [rax],al
  407177:	add    BYTE PTR [rcx+rdi*2+0x70],dl
  40717b:	and    BYTE PTR gs:[rip+0x6f6e2064],ah        # 0x6fae91e6
  407182:	je     0x4071a4
  407184:	push   0x6c646e61
  407189:	gs and BYTE PTR fs:[rdx+0x79],ah
  40718e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  407192:	(bad)  
  407193:	movsxd ebp,DWORD PTR [rdi+0x70]
  407196:	jns    0x4071a2
  407198:	add    BYTE PTR [rdx+0x63],ah
  40719b:	jo     0x4071fc
  40719d:	jae    0x407204
  40719f:	outs   dx,BYTE PTR ds:[rsi]
  4071a0:	fs jb  0x407212
  4071a3:	ja     0x4071c5
  4071a5:	data16 (bad) 
  4071a7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa20202e
  4071af:	add    BYTE PTR [rdx+0x63],ah
  4071b2:	jo     0x407213
  4071b4:	(bad)
  4071b9:	and    BYTE PTR [rbp+0x72],ah
  4071bc:	jb     0x40722d
  4071be:	jb     0x4071c0
  4071c0:	and    eax,0x6f722064
  4071c5:	ja     0x40723a
  4071c7:	and    BYTE PTR [rbx+0x75],dh
  4071ca:	movsxd esp,DWORD PTR [rbx+0x65]
  4071cd:	jae    0x407242
  4071cf:	data16 jne 0x40723e
  4071d2:	ins    BYTE PTR es:[rdi],dx
  4071d3:	jns    0x4071f5
  4071d5:	movsxd ebp,DWORD PTR [rdi+0x70]
  4071d8:	imul   esp,DWORD PTR [rbp+0x64],0x6f742820
  4071df:	je     0x407242
  4071e1:	ins    BYTE PTR es:[rdi],dx
  4071e2:	and    BYTE PTR [rip+0xa2964],ah        # 0x4a9b4c
  4071e8:	(bad)  
  4071ea:	jo     0x40724b
  4071ec:	outs   dx,DWORD PTR fs:[rsi]
  4071ee:	outs   dx,BYTE PTR ds:[rsi]
  4071ef:	and    BYTE PTR gs:[rsi+0x61],ah
  4071f3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa20202e
  4071fb:	add    BYTE PTR [rdx+0x6f],dh
  4071fe:	ja     0x407273
  407200:	and    BYTE PTR [rdx+0x65],dh
  407203:	(bad)  
  407204:	and    BYTE PTR fs:[rax],ah
  407207:	and    BYTE PTR [rax],ah
  407209:	and    BYTE PTR [rax],ah
  40720b:	and    BYTE PTR [rax],ah
  40720d:	and    BYTE PTR [rax],ah
  40720f:	and    BYTE PTR [rax],ah
  407211:	cmp    ah,BYTE PTR [rax]
  407213:	and    eax,0x72000a64
  407218:	outs   dx,DWORD PTR ds:[rsi]
  407219:	ja     0x40728e
  40721b:	and    BYTE PTR [rdi+0x72],dh
  40721e:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x2020206e
  407226:	and    BYTE PTR [rax],ah
  407228:	and    BYTE PTR [rax],ah
  40722a:	and    BYTE PTR [rax],ah
  40722c:	cmp    ah,BYTE PTR [rax]
  40722e:	and    eax,0x65000a64
  407233:	ins    BYTE PTR es:[rdi],dx
  407234:	(bad)  
  407235:	jo     0x4072aa
  407237:	gs and BYTE PTR fs:[rcx+rbp*2+0x6d],dh
  40723d:	and    BYTE PTR gs:[rax],ch
  407240:	jae    0x4072a7
  407242:	movsxd esi,DWORD PTR [rbx+0x29]
  407245:	and    BYTE PTR [rax],ah
  407247:	cmp    ah,BYTE PTR [rax]
  407249:	and    eax,0x72000a66
  40724e:	outs   dx,DWORD PTR ds:[rsi]
  40724f:	ja     0x4072c4
  407251:	and    BYTE PTR [rax+0x65],dh
  407254:	jb     0x407276
  407256:	jae    0x4072bd
  407258:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40725b:	and    BYTE PTR fs:[rax],ah
  40725e:	and    BYTE PTR [rax],ah
  407260:	and    BYTE PTR [rax],ah
  407262:	cmp    ah,BYTE PTR [rax]
  407264:	and    eax,0x4d000a66
  407269:	jae    0x4072d2
  40726b:	and    BYTE PTR [rip+0x202c646c],ah        # 0x206cd6dd
  407271:	rex.WR
  407272:	gs jbe 0x4072da
  407275:	ins    BYTE PTR es:[rdi],dx
  407276:	and    BYTE PTR [rip+0x53202c64],ah        # 0x53609ee0
  40727c:	je     0x4072df
  40727e:	je     0x4072e5
  407280:	and    BYTE PTR [rip+0x53000a64],ah        # 0x53407cea
  407286:	gs jb  0x4072ff
  407289:	gs jb  0x4072ac
  40728c:	(bad)  
  40728d:	and    eax,0x202c2773
  407292:	add    BYTE PTR [rax+0x72],dl
  407295:	outs   dx,DWORD PTR ds:[rsi]
  407296:	movsxd esp,DWORD PTR [rbp+0x64]
  407299:	jne    0x40730d
  40729b:	and    BYTE PTR gs:[rdi],ah
  40729e:	and    eax,0x202c2773
  4072a3:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  4072a7:	and    BYTE PTR gs:[rip+0x90a0064],ah        # 0x94a7312
  4072ae:	and    eax,0x4d000a73
  4072b3:	jae    0x40731c
  4072b5:	and    BYTE PTR [rip+0x4c202c64],ah        # 0x4c609f1f
  4072bb:	gs jbe 0x407323
  4072be:	ins    BYTE PTR es:[rdi],dx
  4072bf:	and    BYTE PTR [rip+0x25000a64],ah        # 0x25407d29
  4072c5:	jae    0x4072d1
  4072c7:	or     al,BYTE PTR [rax]
  4072c9:	rex.R
  4072ca:	rex.X sub eax,0x5242494c
  4072d0:	push   r10
  4072d2:	pop    rcx
  4072d3:	and    BYTE PTR [rbp+0x72],ah
  4072d6:	jb     0x407347
  4072d8:	jb     0x407314
  4072da:	or     cl,BYTE PTR [rcx]
  4072dc:	add    BYTE PTR [rip+0x25000a73],ah        # 0x25407d55
  4072e2:	add    BYTE PTR fs:[rdx+riz*2+0x73],ah
  4072e7:	gs je  0x407359
  4072ea:	jo     0x407360
  4072ec:	and    BYTE PTR [rsi+0x61],ah
  4072ef:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e49000a
  4072f7:	jbe    0x40735a
  4072f9:	ins    BYTE PTR es:[rdi],dx
  4072fa:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x72656e77
  407302:	and    BYTE PTR [rbx+0x70],dh
  407305:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  407309:	imul   esp,DWORD PTR [rbp+0x64],0x45000a2e
  407310:	outs   dx,BYTE PTR ds:[rsi]
  407311:	je     0x407378
  407313:	jb     0x407335
  407315:	push   rbx
  407316:	outs   dx,DWORD PTR ds:[rsi]
  407317:	jne    0x40738b
  407319:	movsxd esp,DWORD PTR [rbp+0x20]
  40731c:	push   rax
  40731d:	(bad)  
  40731e:	jae    0x407393
  407320:	ja     0x407391
  407322:	jb     0x407388
  407324:	cmp    ah,BYTE PTR [rax]
  407326:	add    BYTE PTR [rbp+0x6e],al
  407329:	je     0x407390
  40732b:	jb     0x40734d
  40732d:	rex.R
  40732e:	gs jae 0x4073a5
  407331:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  407338:	and    BYTE PTR [rax+0x61],dl
  40733b:	jae    0x4073b0
  40733d:	ja     0x4073ae
  40733f:	jb     0x4073a5
  407341:	cmp    ah,BYTE PTR [rax]
  407343:	add    BYTE PTR [rcx+0x6e],cl
  407346:	jbe    0x4073a9
  407348:	ins    BYTE PTR es:[rdi],dx
  407349:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x73747865
  407351:	imul   edi,DWORD PTR [rdx+0x65],0x65707320
  407358:	movsxd ebp,DWORD PTR [rcx+0x66]
  40735b:	imul   esp,DWORD PTR [rbp+0x64],0x62000a2e
  407362:	cmp    dh,BYTE PTR [rax+0x3a]
  407365:	je     0x4073c8
  407367:	movsxd edi,DWORD PTR [rdx]
  407369:	fs push rbx
  40736b:	cmp    al,BYTE PTR [rdx+rdi*1+0x54]
  40736f:	cmp    al,BYTE PTR [rbp+0x76]
  407372:	add    BYTE PTR [rax],al
  407374:	add    BYTE PTR [rax],al
  407376:	add    BYTE PTR [rax],al
  407378:	outs   dx,DWORD PTR ds:[rsi]
  407379:	outs   dx,BYTE PTR ds:[rsi]
  40737a:	and    BYTE PTR gs:[rax],ch
  40737d:	(bad)  
  40737e:	outs   dx,BYTE PTR ds:[rsi]
  40737f:	and    BYTE PTR fs:[rdi+0x6e],ch
  407383:	ins    BYTE PTR es:[rdi],dx
  407384:	jns    0x4073a6
  407386:	outs   dx,DWORD PTR ds:[rsi]
  407387:	outs   dx,BYTE PTR ds:[rsi]
  407388:	sub    DWORD PTR gs:[rax],esp
  40738b:	outs   dx,DWORD PTR ds:[rsi]
  40738c:	data16 and BYTE PTR [rip+0x2d202c74],ch        # 0x2d60a007
  407393:	(bad)  
  407394:	and    BYTE PTR [rdi+0x72],ch
  407397:	and    BYTE PTR [rip+0x756d2063],ch        # 0x75ad9400
  40739d:	jae    0x407413
  40739f:	and    BYTE PTR [rdx+0x65],ah
  4073a2:	and    BYTE PTR [rbx+0x70],dh
  4073a5:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4073a9:	imul   esp,DWORD PTR [rbp+0x64],0xa
  4073b0:	or     cl,BYTE PTR [rsi+0x6f]
  4073b3:	and    BYTE PTR [rbx+0x2d],bl
  4073b6:	push   rbx
  4073b7:	pop    rbp
  4073b8:	outs   dx,DWORD PTR ds:[rsi]
  4073b9:	jne    0x40742d
  4073bb:	movsxd esp,DWORD PTR [rbp+0x20]
  4073be:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  4073c5:	je     0x407430
  4073c7:	outs   dx,DWORD PTR ds:[rsi]
  4073c8:	outs   dx,BYTE PTR ds:[rsi]
  4073c9:	and    BYTE PTR [rbx+0x75],dh
  4073cc:	jo     0x40743e
  4073ce:	ins    BYTE PTR es:[rdi],dx
  4073cf:	imul   esp,DWORD PTR [rbp+0x64],0x45000a2e
  4073d6:	outs   dx,BYTE PTR ds:[rsi]
  4073d7:	je     0x40743e
  4073d9:	jb     0x4073fb
  4073db:	push   rbx
  4073dc:	gs jb  0x407455
  4073df:	gs jb  0x407402
  4073e2:	and    BYTE PTR [rax],ah
  4073e4:	cmp    ah,BYTE PTR [rax]
  4073e6:	add    BYTE PTR [rbp+0x6e],al
  4073e9:	je     0x407450
  4073eb:	jb     0x40740d
  4073ed:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4073ef:	imul   ebp,DWORD PTR [esi+0x20],0x3a202020
  4073f7:	and    BYTE PTR [rax],al
  4073f9:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4073fb:	je     0x407462
  4073fd:	jb     0x40741f
  4073ff:	push   rax
  407400:	(bad)  
  407401:	jae    0x407476
  407403:	ja     0x407474
  407405:	jb     0x40746b
  407407:	and    BYTE PTR [rdx],bh
  407409:	and    BYTE PTR [rax],al
  40740b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40740d:	je     0x407474
  40740f:	jb     0x407431
  407411:	rex.R (bad) 
  407413:	je     0x407476
  407415:	(bad)  
  407417:	jae    0x40747e
  407419:	and    BYTE PTR [rdx],bh
  40741b:	and    BYTE PTR [rax],al
  40741d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40741f:	je     0x407486
  407421:	jb     0x407443
  407423:	push   rsp
  407424:	(bad)  
  407425:	(bad)  
  407426:	ins    BYTE PTR es:[rdi],dx
  407427:	and    BYTE PTR gs:[rax],ah
  40742a:	and    BYTE PTR [rax],ah
  40742c:	cmp    ah,BYTE PTR [rax]
  40742e:	add    BYTE PTR [rax],al
  407430:	or     cl,BYTE PTR [rsi+0x6f]
  407433:	and    BYTE PTR [rbx+0x2d],bl
  407436:	rex.R pop rbp
  407438:	gs jae 0x4074af
  40743b:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  407442:	and    BYTE PTR [rcx+0x6e],ch
  407445:	outs   dx,WORD PTR ds:[rsi]
  407447:	jb     0x4074b6
  407449:	(bad)  
  40744a:	je     0x4074b5
  40744c:	outs   dx,DWORD PTR ds:[rsi]
  40744d:	outs   dx,BYTE PTR ds:[rsi]
  40744e:	and    BYTE PTR [rbx+0x75],dh
  407451:	jo     0x4074c3
  407453:	ins    BYTE PTR es:[rdi],dx
  407454:	imul   esp,DWORD PTR [rbp+0x64],0x4d000a2e
  40745b:	imul   esp,DWORD PTR [rdi+0x72],0x20657461
  407462:	rex.R (bad) 
  407464:	je     0x4074c7
  407466:	add    BYTE PTR [rax],al
  407468:	rex.XB (bad) 
  40746a:	outs   dx,BYTE PTR ds:[rsi]
  40746b:	(bad)  
  40746c:	je     0x40748e
  40746e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407471:	outs   dx,BYTE PTR ds:[rsi]
  407472:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  407477:	outs   dx,DWORD PTR ds:[rsi]
  407478:	and    BYTE PTR [rbx+0x6f],dh
  40747b:	jne    0x4074ef
  40747d:	movsxd esp,DWORD PTR [rbp+0x20]
  407480:	jae    0x4074e7
  407482:	jb     0x4074fa
  407484:	gs jb  0x4074b5
  407487:	or     al,BYTE PTR [rax]
  407489:	add    BYTE PTR [rax],al
  40748b:	add    BYTE PTR [rax],al
  40748d:	add    BYTE PTR [rax],al
  40748f:	add    BYTE PTR [rbx+0x61],al
  407492:	outs   dx,BYTE PTR ds:[rsi]
  407493:	(bad)  
  407494:	je     0x4074b6
  407496:	movsxd ebp,DWORD PTR [rax+0x61]
  407499:	outs   dx,BYTE PTR ds:[rsi]
  40749a:	and    BYTE PTR gs:[ecx+eiz*2+0x74],ah
  4074a0:	(bad)  
  4074a1:	(bad)  
  4074a3:	jae    0x40750a
  4074a5:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4074a9:	and    eax,0xa2e2073
  4074ae:	add    BYTE PTR [rax],al
  4074b0:	rex.XB (bad) 
  4074b2:	outs   dx,BYTE PTR ds:[rsi]
  4074b3:	(bad)  
  4074b4:	je     0x4074d6
  4074b6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4074b9:	outs   dx,BYTE PTR ds:[rsi]
  4074ba:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4074bf:	outs   dx,DWORD PTR ds:[rsi]
  4074c0:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4074c4:	je     0x40752f
  4074c6:	outs   dx,BYTE PTR ds:[rsi]
  4074c7:	(bad)  
  4074c8:	je     0x407533
  4074ca:	outs   dx,DWORD PTR ds:[rsi]
  4074cb:	outs   dx,BYTE PTR ds:[rsi]
  4074cc:	and    BYTE PTR [rbx+0x65],dh
  4074cf:	jb     0x407547
  4074d1:	gs jb  0x407502
  4074d4:	or     al,BYTE PTR [rax]
  4074d6:	add    BYTE PTR [rax],al
  4074d8:	fs (bad) 
  4074da:	je     0x40753d
  4074dc:	movsxd ebp,DWORD PTR [rdi+0x70]
  4074df:	jns    0x40751b
  4074e1:	and    BYTE PTR [rbx+0x6f],ah
  4074e4:	jne    0x407552
  4074e6:	and    BYTE PTR fs:[rsi+0x6f],ch
  4074ea:	je     0x40750c
  4074ec:	movsxd esi,DWORD PTR [rdx+0x65]
  4074ef:	(bad)  
  4074f0:	je     0x407557
  4074f2:	and    BYTE PTR [rcx+riz*2+0x72],dh
  4074f6:	addr32 gs je 0x40751a
  4074fa:	je     0x40755d
  4074fc:	(bad)  
  4074fd:	ins    BYTE PTR es:[rdi],dx
  4074fe:	and    BYTE PTR gs:[rip+0x73252e73],ah        # 0x7365a378
  407505:	and    BYTE PTR [rsi],ch
  407507:	and    BYTE PTR [rbp+riz*2+0x72],dh
  40750b:	ins    DWORD PTR es:[rdi],dx
  40750c:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
  407513:	or     al,BYTE PTR [rax]
  407515:	rex.RB jb 0x40758a
  407518:	outs   dx,DWORD PTR ds:[rsi]
  407519:	jb     0x40753b
  40751b:	imul   ebp,DWORD PTR [rsi+0x20],0x756e6264
  407522:	ins    DWORD PTR es:[rdi],dx
  407523:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407526:	jae    0x407548
  407528:	xor    DWORD PTR [rax],eax
  40752a:	je     0x40758d
  40752c:	(bad)  
  40752d:	ins    BYTE PTR es:[rdi],dx
  40752e:	and    BYTE PTR gs:[rip+0x6f6e2073],ah        # 0x6fae95a8
  407535:	je     0x407557
  407537:	outs   dx,WORD PTR ds:[rsi]
  407539:	jne    0x4075a9
  40753b:	and    BYTE PTR fs:[rdi+0x6e],ch
  40753f:	and    BYTE PTR [rbp+rax*2+0x53],al
  407543:	push   rsp
  407544:	or     al,BYTE PTR [rax]
  407546:	rex.RB jb 0x4075bb
  407549:	outs   dx,DWORD PTR ds:[rsi]
  40754a:	jb     0x40756c
  40754c:	imul   ebp,DWORD PTR [rsi+0x20],0x756e6264
  407553:	ins    DWORD PTR es:[rdi],dx
  407554:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407557:	jae    0x407579
  407559:	xor    al,BYTE PTR [rax]
  40755b:	add    BYTE PTR [rax],al
  40755d:	add    BYTE PTR [rax],al
  40755f:	add    BYTE PTR [rsi+0x75],ch
  407562:	ins    DWORD PTR es:[rdi],dx
  407563:	(bad)  
  407564:	gs jb  0x407587
  407567:	outs   dx,DWORD PTR ds:[rsi]
  407568:	data16 and BYTE PTR [rbx+0x6f],ah
  40756c:	ins    BYTE PTR es:[rdi],dx
  40756d:	jne    0x4075dc
  40756f:	outs   dx,BYTE PTR ds:[rsi]
  407570:	jae    0x407592
  407572:	outs   dx,DWORD PTR fs:[rsi]
  407574:	and    BYTE PTR [rsi+0x6f],ch
  407577:	je     0x407599
  407579:	ins    DWORD PTR es:[rdi],dx
  40757a:	(bad)  
  40757b:	je     0x4075e0
  40757d:	push   0x6f73202e
  407582:	jne    0x4075f6
  407584:	movsxd esp,DWORD PTR [rbp+0x20]
  407587:	cmp    ah,BYTE PTR [rax]
  407589:	and    eax,0x202c2064
  40758e:	fs gs jae 0x407606
  407592:	cmp    ah,BYTE PTR [rax]
  407594:	and    eax,0x43000a64
  407599:	rex.WRXB
  40759a:	rex.WR push rbp
  40759c:	rex.WRB
  40759d:	rex.WRX and BYTE PTR [rcx+r11*2+0x50],r10b
  4075a2:	and    BYTE PTR [r13+0x49],r9b
  4075a6:	push   rbx
  4075a7:	rex.WRB
  4075a8:	push   r12
  4075aa:	rex.XB
  4075ab:	rex.W cmp spl,BYTE PTR [rax]
  4075ae:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4075b1:	jne    0x407620
  4075b3:	outs   dx,BYTE PTR ds:[rsi]
  4075b4:	and    BYTE PTR [rip+0x73000a64],ah        # 0x7340801e
  4075ba:	outs   dx,DWORD PTR ds:[rsi]
  4075bb:	jne    0x40762f
  4075bd:	movsxd esp,DWORD PTR [rbp+0x3a]
  4075c0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4075c4:	and    BYTE PTR gs:[rip+0x6c202c64],ah        # 0x6c60a22f
  4075cb:	outs   dx,BYTE PTR gs:[rsi]
  4075cd:	addr32 je 0x407638
  4075d0:	and    BYTE PTR [rip+0x64000a64],ah        # 0x6440803a
  4075d6:	gs jae 0x40764d
  4075d9:	and    BYTE PTR [rax],ah
  4075db:	cmp    ah,BYTE PTR [rax]
  4075dd:	je     0x407658
  4075df:	jo     0x407646
  4075e1:	and    BYTE PTR [rip+0x6c202c64],ah        # 0x6c60a24b
  4075e7:	outs   dx,BYTE PTR gs:[rsi]
  4075e9:	addr32 je 0x407654
  4075ec:	and    BYTE PTR [rip+0x64000a64],ah        # 0x64408056
  4075f2:	(bad)  
  4075f3:	je     0x407656
  4075f5:	movsxd ebp,DWORD PTR [rdi+0x70]
  4075f8:	jns    0x407634
  4075fa:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4075fe:	ins    BYTE PTR es:[rdi],dx
  4075ff:	and    BYTE PTR gs:[rbx+0x6f],ah
  407603:	jo     0x40767e
  407605:	and    BYTE PTR [rsi+0x61],ah
  407608:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
  407610:	and    BYTE PTR [rax],ah
  407612:	and    BYTE PTR [rax],ah
  407614:	and    BYTE PTR [rax],ah
  407616:	and    BYTE PTR [rax],ah
  407618:	and    BYTE PTR [rax],ah
  40761a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40761e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  407622:	(bad)  
  407623:	and    BYTE PTR [rbp+0x61],ch
  407626:	jns    0x407648
  407628:	push   0x20657661
  40762d:	(bad)  
  40762e:	gs outs dx,BYTE PTR gs:[rsi]
  407631:	and    BYTE PTR [rax+0x61],dh
  407634:	jb     0x4076aa
  407636:	imul   esp,DWORD PTR [rcx+0x6c],0x6320796c
  40763d:	outs   dx,DWORD PTR ds:[rsi]
  40763e:	jo     0x4076a9
  407640:	gs and BYTE PTR fs:[rcx+0x6e],ch
  407645:	je     0x4076b6
  407647:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40764b:	and    BYTE PTR [rcx+riz*2+0x72],dh
  40764f:	addr32 gs je 0x407673
  407653:	fs (bad) 
  407655:	je     0x4076b8
  407657:	(bad)  
  407659:	jae    0x4076c0
  40765b:	and    BYTE PTR [rax],al
  40765d:	add    BYTE PTR [rax],al
  40765f:	add    BYTE PTR [rbp+0x73],dh
  407662:	(bad)  
  407663:	cmp    ah,BYTE PTR gs:[eax]
  407667:	fs (bad) 
  407669:	je     0x4076cc
  40766b:	movsxd ebp,DWORD PTR [rdi+0x70]
  40766e:	jns    0x407690
  407670:	pop    rbx
  407671:	sub    eax,0x207c2074
  407676:	sub    eax,0x207c2061
  40767b:	sub    eax,0x776f2063
  407680:	outs   dx,BYTE PTR ds:[rsi]
  407681:	gs jb  0x4076e1
  407684:	and    BYTE PTR [rbx+0x2d],bl
  407687:	(bad)  
  407688:	and    BYTE PTR [rdx+0x61],ah
  40768b:	je     0x4076f0
  40768d:	push   0x657a6973
  407692:	pop    rbp
  407693:	and    BYTE PTR [rbx+0x2d],bl
  407696:	jo     0x4076b8
  407698:	jo     0x4076fb
  40769a:	movsxd ebp,DWORD PTR [rbx+0x65]
  40769d:	je     0x407712
  40769f:	imul   edi,DWORD PTR [rdx+0x65],0x2d5b205d
  4076a6:	push   rsp
  4076a7:	and    BYTE PTR [rbp+riz*2+0x78],dh
  4076ab:	je     0x407720
  4076ad:	imul   edi,DWORD PTR [rdx+0x65],0x2d5b205d
  4076b4:	jbe    0x407713
  4076b6:	and    BYTE PTR [rbx+0x2d],bl
  4076b9:	fs pop rbp
  4076bb:	and    BYTE PTR [rbx+0x2d],bl
  4076be:	rex.RB pop r13
  4076c0:	or     al,BYTE PTR [rax]
  4076c2:	add    BYTE PTR [rax],al
  4076c4:	add    BYTE PTR [rax],al
  4076c6:	add    BYTE PTR [rax],al
  4076c8:	and    BYTE PTR [rax],ah
  4076ca:	and    BYTE PTR [rax],ah
  4076cc:	and    BYTE PTR [rax],ah
  4076ce:	and    BYTE PTR [rbx+0x2d],bl
  4076d1:	push   rbx
  4076d2:	and    BYTE PTR [rbx+0x65],dh
  4076d5:	jb     0x40774d
  4076d7:	gs jb  0x407709
  4076da:	jne    0x40774f
  4076dc:	gs jb  0x40774d
  4076df:	(bad)  
  4076e0:	ins    DWORD PTR es:[rdi],dx
  4076e1:	gs (bad) 
  4076e3:	jo     0x407746
  4076e5:	jae    0x40775a
  4076e7:	ja     0x407758
  4076e9:	jb     0x40774f
  4076eb:	(bad)  
  4076ec:	fs (bad) 
  4076ee:	je     0x407751
  4076f0:	(bad)  
  4076f2:	jae    0x407759
  4076f4:	(bad)  
  4076f5:	je     0x407758
  4076f7:	(bad)  
  4076f8:	ins    BYTE PTR es:[rdi],dx
  4076f9:	gs pop rbp
  4076fb:	or     al,BYTE PTR [rax]
  4076fd:	add    BYTE PTR [rax],al
  4076ff:	add    BYTE PTR [rax],ah
  407701:	and    BYTE PTR [rax],ah
  407703:	and    BYTE PTR [rax],ah
  407705:	and    BYTE PTR [rax],ah
  407707:	pop    rbx
  407708:	sub    eax,0x65732044
  40770d:	jb     0x407785
  40770f:	gs jb  0x407741
  407712:	jne    0x407787
  407714:	gs jb  0x407785
  407717:	(bad)  
  407718:	ins    DWORD PTR es:[rdi],dx
  407719:	gs (bad) 
  40771b:	jo     0x40777e
  40771d:	jae    0x407792
  40771f:	ja     0x407790
  407721:	jb     0x407787
  407723:	(bad)  
  407724:	fs (bad) 
  407726:	je     0x407789
  407728:	(bad)  
  40772a:	jae    0x407791
  40772c:	(bad)  
  40772d:	je     0x407790
  40772f:	(bad)  
  407730:	ins    BYTE PTR es:[rdi],dx
  407731:	gs pop rbp
  407733:	or     al,BYTE PTR [rax]
  407735:	add    BYTE PTR [rax],al
  407737:	add    BYTE PTR [rax],ah
  407739:	and    BYTE PTR [rax],ah
  40773b:	and    BYTE PTR [rax],ah
  40773d:	and    BYTE PTR [rax],ah
  40773f:	sub    eax,0x203a2074
  407744:	je     0x4077b8
  407746:	jne    0x4077b6
  407748:	movsxd esp,DWORD PTR [rcx+0x74]
  40774b:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
  407750:	addr32 gs je 0x407774
  407754:	je     0x4077b7
  407756:	(bad)  
  407757:	ins    BYTE PTR es:[rdi],dx
  407758:	and    BYTE PTR gs:[rdx+0x65],ah
  40775c:	outs   dx,WORD PTR ds:[rsi]
  40775e:	jb     0x4077c5
  407760:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  407764:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74616420
  40776c:	(bad)  
  40776d:	or     al,BYTE PTR [rax]
  40776f:	add    BYTE PTR [rax],ah
  407771:	and    BYTE PTR [rax],ah
  407773:	and    BYTE PTR [rax],ah
  407775:	and    BYTE PTR [rax],ah
  407777:	sub    eax,0x203a2061
  40777c:	(bad)  
  40777d:	jo     0x4077ef
  40777f:	outs   dx,BYTE PTR gs:[rsi]
  407781:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  407786:	(bad)  
  407787:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40778b:	je     0x4077ee
  40778d:	jb     0x4077f6
  40778f:	gs je  0x4077b2
  407792:	je     0x4077f5
  407794:	(bad)  
  407795:	ins    BYTE PTR es:[rdi],dx
  407796:	or     al,BYTE PTR gs:[rax]
  407799:	add    BYTE PTR [rax],al
  40779b:	add    BYTE PTR [rax],al
  40779d:	add    BYTE PTR [rax],al
  40779f:	add    BYTE PTR [rax],ah
  4077a1:	and    BYTE PTR [rax],ah
  4077a3:	and    BYTE PTR [rax],ah
  4077a5:	and    BYTE PTR [rax],ah
  4077a7:	sub    eax,0x203a2063
  4077ac:	movsxd esi,DWORD PTR [rdx+0x65]
  4077af:	(bad)  
  4077b0:	je     0x407817
  4077b2:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4077b6:	ins    BYTE PTR es:[rdi],dx
  4077b7:	and    BYTE PTR gs:[rdi+0x77],ch
  4077bb:	outs   dx,BYTE PTR ds:[rsi]
  4077bc:	gs jb  0x4077ed
  4077bf:	je     0x407822
  4077c1:	(bad)  
  4077c2:	ins    BYTE PTR es:[rdi],dx
  4077c3:	and    BYTE PTR gs:[rdx+0x65],ah
  4077c7:	outs   dx,WORD PTR ds:[rsi]
  4077c9:	jb     0x407830
  4077cb:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  4077cf:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74616420
  4077d7:	(bad)  
  4077d8:	or     al,BYTE PTR [rax]
  4077da:	add    BYTE PTR [rax],al
  4077dc:	add    BYTE PTR [rax],al
  4077de:	add    BYTE PTR [rax],al
  4077e0:	and    BYTE PTR [rax],ah
  4077e2:	and    BYTE PTR [rax],ah
  4077e4:	and    BYTE PTR [rax],ah
  4077e6:	and    BYTE PTR [rip+0x203a2062],ch        # 0x207a984e
  4077ec:	(bad)  
  4077ed:	ins    BYTE PTR es:[rdi],dx
  4077ee:	je     0x407855
  4077f0:	jb     0x407812
  4077f2:	je     0x40785c
  4077f4:	and    BYTE PTR gs:[rsi+0x75],ch
  4077f8:	ins    DWORD PTR es:[rdi],dx
  4077f9:	(bad)  
  4077fa:	gs jb  0x40781d
  4077fd:	outs   dx,DWORD PTR ds:[rsi]
  4077fe:	data16 and BYTE PTR [rdx+0x65],dh
  407802:	movsxd ebp,DWORD PTR [rdi+0x72]
  407805:	fs jae 0x407828
  407808:	imul   ebp,DWORD PTR [rsi+0x20],0x68636165
  40780f:	and    BYTE PTR [rdx+0x63],ah
  407812:	jo     0x407834
  407814:	(bad)
  407819:	or     al,BYTE PTR [rax]
  40781b:	add    BYTE PTR [rax],al
  40781d:	add    BYTE PTR [rax],al
  40781f:	add    BYTE PTR [rax],ah
  407821:	and    BYTE PTR [rax],ah
  407823:	and    BYTE PTR [rax],ah
  407825:	and    BYTE PTR [rax],ah
  407827:	sub    BYTE PTR [rcx+riz*2+0x72],ch
  40782b:	addr32 gs jb 0x40784f
  40782f:	(bad)
  407834:	and    BYTE PTR [rbx+0x69],dh
  407837:	jp     0x40789e
  407839:	and    BYTE PTR [rip+0x73616620],bh        # 0x73a1de5f
  40783f:	je     0x4078a6
  407841:	jb     0x40786c
  407843:	or     al,BYTE PTR [rax]
  407845:	add    BYTE PTR [rax],al
  407847:	add    BYTE PTR [rax],ah
  407849:	and    BYTE PTR [rax],ah
  40784b:	and    BYTE PTR [rax],ah
  40784d:	and    BYTE PTR [rax],ah
  40784f:	sub    eax,0x203a2070
  407854:	(bad)  
  407855:	ins    BYTE PTR es:[rdi],dx
  407856:	je     0x4078bd
  407858:	jb     0x40787a
  40785a:	je     0x4078c4
  40785c:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  407861:	(bad)  
  407862:	jne    0x4078d0
  407864:	je     0x407886
  407866:	push   rsp
  407867:	rex.R push rbx
  407869:	and    BYTE PTR [rax+0x61],dh
  40786c:	movsxd ebp,DWORD PTR [rbx+0x65]
  40786f:	je     0x407891
  407871:	jae    0x4078dc
  407873:	jp     0x4078da
  407875:	and    BYTE PTR [rsi+0x72],ah
  407878:	outs   dx,DWORD PTR ds:[rsi]
  407879:	ins    DWORD PTR es:[rdi],dx
  40787a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40787e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  407882:	(bad)  
  407883:	jne    0x4078f1
  407885:	je     0x407891
  407887:	add    BYTE PTR [rax],ah
  407889:	and    BYTE PTR [rax],ah
  40788b:	and    BYTE PTR [rax],ah
  40788d:	and    BYTE PTR [rax],ah
  40788f:	sub    BYTE PTR [rcx+riz*2+0x72],ch
  407893:	addr32 gs jb 0x4078b7
  407897:	jo     0x4078fa
  407899:	movsxd ebp,DWORD PTR [rbx+0x65]
  40789c:	je     0x4078be
  40789e:	jae    0x407909
  4078a0:	jp     0x407907
  4078a2:	and    BYTE PTR [rip+0x73616620],bh        # 0x73a1dec8
  4078a8:	je     0x40790f
  4078aa:	jb     0x4078d5
  4078ac:	or     al,BYTE PTR [rax]
  4078ae:	add    BYTE PTR [rax],al
  4078b0:	and    BYTE PTR [rax],ah
  4078b2:	and    BYTE PTR [rax],ah
  4078b4:	and    BYTE PTR [rax],ah
  4078b6:	and    BYTE PTR [rip+0x203a2054],ch        # 0x207a9910
  4078bc:	push   rsp
  4078bd:	gs js  0x407934
  4078c0:	and    BYTE PTR [rcx+0x6e],ah
  4078c3:	and    BYTE PTR fs:[rcx+0x6d],ch
  4078c7:	(bad)  
  4078c8:	and    BYTE PTR gs:[ebx+0x69],dh
  4078cd:	jp     0x407934
  4078cf:	or     al,BYTE PTR [rax]
  4078d1:	add    BYTE PTR [rax],al
  4078d3:	add    BYTE PTR [rax],al
  4078d5:	add    BYTE PTR [rax],al
  4078d7:	add    BYTE PTR [rax],ah
  4078d9:	and    BYTE PTR [rax],ah
  4078db:	and    BYTE PTR [rax],ah
  4078dd:	and    BYTE PTR [rax],ah
  4078df:	sub    eax,0x203a2045
  4078e4:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4078e8:	and    BYTE PTR [rcx+0x64],ch
  4078eb:	outs   dx,BYTE PTR gs:[rsi]
  4078ed:	je     0x407958
  4078ef:	je     0x40796a
  4078f1:	and    BYTE PTR [rsi+0x61],dh
  4078f4:	ins    BYTE PTR es:[rdi],dx
  4078f5:	jne    0x40795c
  4078f7:	jae    0x407903
  4078f9:	add    BYTE PTR [rax],al
  4078fb:	add    BYTE PTR [rax],al
  4078fd:	add    BYTE PTR [rax],al
  4078ff:	add    BYTE PTR [rax],ah
  407901:	and    BYTE PTR [rax],ah
  407903:	and    BYTE PTR [rax],ah
  407905:	and    BYTE PTR [rax],ah
  407907:	sub    eax,0x203a2076
  40790c:	jo     0x407980
  40790e:	outs   dx,DWORD PTR ds:[rsi]
  40790f:	fs jne 0x407975
  407912:	and    BYTE PTR gs:[rsi+0x65],dh
  407916:	jb     0x40797a
  407918:	outs   dx,DWORD PTR ds:[rsi]
  407919:	jae    0x407980
  40791b:	and    BYTE PTR [rdi+0x75],ch
  40791e:	je     0x407990
  407920:	jne    0x407996
  407922:	and    BYTE PTR [rax],ch
  407924:	je     0x40798f
  407926:	ins    DWORD PTR es:[rdi],dx
  407927:	imul   ebp,DWORD PTR [rsi+0x67],0x74652073
  40792e:	movsxd ebp,DWORD PTR [rsi]
  407930:	sub    DWORD PTR [rdx],ecx
  407932:	add    BYTE PTR [rax],al
  407934:	add    BYTE PTR [rax],al
  407936:	add    BYTE PTR [rax],al
  407938:	and    BYTE PTR [rax],ah
  40793a:	and    BYTE PTR [rax],ah
  40793c:	and    BYTE PTR [rax],ah
  40793e:	and    BYTE PTR [rip+0x203a2064],ch        # 0x207a99a8
  407944:	jo     0x4079b8
  407946:	outs   dx,DWORD PTR ds:[rsi]
  407947:	fs jne 0x4079ad
  40794a:	and    BYTE PTR gs:[rsp+rax*2+0x53],dl
  40794f:	and    BYTE PTR [rbp+rdx*2+0x4d],al
  407953:	push   rax
  407954:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  407958:	and    BYTE PTR [rax],ch
  40795a:	jae    0x4079c1
  40795c:	jb     0x4079c7
  40795e:	outs   dx,DWORD PTR ds:[rsi]
  40795f:	jne    0x4079d4
  407961:	and    BYTE PTR [rbp+riz*2+0x62],ah
  407965:	jne    0x4079ce
  407967:	and    BYTE PTR [rdi+0x6e],ch
  40796a:	ins    BYTE PTR es:[rdi],dx
  40796b:	jns    0x40798e
  40796d:	sub    DWORD PTR [rdx],ecx
  40796f:	add    BYTE PTR [rcx+riz*2+0x74],ah
  407973:	(bad)  
  407974:	movsxd ebp,DWORD PTR [rdi+0x70]
  407977:	jns    0x4079b3
  407979:	and    BYTE PTR [rcx+riz*2+0x62],dh
  40797d:	ins    BYTE PTR es:[rdi],dx
  40797e:	and    BYTE PTR gs:[rbx+0x74],dh
  407982:	jb     0x4079f9
  407984:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  407988:	gs jae 0x4079ab
  40798b:	outs   dx,DWORD PTR fs:[rsi]
  40798d:	and    BYTE PTR [rsi+0x6f],ch
  407990:	je     0x4079b2
  407992:	ins    DWORD PTR es:[rdi],dx
  407993:	(bad)  
  407994:	je     0x4079f9
  407996:	push   0x6574202e
  40799b:	jb     0x407a0a
  40799d:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
  4079a4:	add    BYTE PTR [rax],al
  4079a6:	add    BYTE PTR [rax],al
  4079a8:	or     cl,dl
  4079aa:	(bad)  
  4079ab:	(bad)  
  4079ac:	clc    
  4079ad:	sar    bh,1
  4079af:	(bad)  
  4079b0:	cmp    al,0xcf
  4079b2:	(bad)  
  4079b3:	(bad)  
  4079b4:	cmp    al,0xcf
  4079b6:	(bad)  
  4079b7:	(bad)  
  4079b8:	cmp    al,0xcf
  4079ba:	(bad)  
  4079bb:	(bad)  
  4079bc:	cmp    al,0xcf
  4079be:	(bad)  
  4079bf:	(bad)  
  4079c0:	cmp    al,0xcf
  4079c2:	(bad)  
  4079c3:	(bad)  
  4079c4:	cmp    al,0xcf
  4079c6:	(bad)  
  4079c7:	(bad)  
  4079c8:	cmp    al,0xcf
  4079ca:	(bad)  
  4079cb:	(bad)  
  4079cc:	cmp    al,0xcf
  4079ce:	(bad)  
  4079cf:	(bad)  
  4079d0:	cmp    al,0xcf
  4079d2:	(bad)  
  4079d3:	(bad)  
  4079d4:	cmp    al,0xcf
  4079d6:	(bad)  
  4079d7:	(bad)  
  4079d8:	cmp    al,0xcf
  4079da:	(bad)  
  4079db:	(bad)  
  4079dc:	cmp    al,0xcf
  4079de:	(bad)  
  4079df:	(bad)  
  4079e0:	cmp    al,0xcf
  4079e2:	(bad)  
  4079e3:	call   FWORD PTR [rax]
  4079e5:	iret   
  4079e6:	(bad)  
  4079e7:	(bad)  
  4079e8:	fmul   st,st(6)
  4079ea:	(bad)  
  4079eb:	(bad)  
  4079ec:	cmp    al,0xcf
  4079ee:	(bad)  
  4079ef:	(bad)  
  4079f0:	cmp    al,0xcf
  4079f2:	(bad)  
  4079f3:	(bad)  
  4079f4:	cmp    al,0xcf
  4079f6:	(bad)  
  4079f7:	(bad)  
  4079f8:	cmp    al,0xcf
  4079fa:	(bad)  
  4079fb:	(bad)  
  4079fc:	cmp    al,0xcf
  4079fe:	(bad)  
  4079ff:	(bad)  
  407a00:	cmp    al,0xcf
  407a02:	(bad)  
  407a03:	(bad)  
  407a04:	cmp    al,0xcf
  407a06:	(bad)  
  407a07:	(bad)  
  407a08:	cmp    al,0xcf
  407a0a:	(bad)  
  407a0b:	(bad)  
  407a0c:	cmp    al,0xcf
  407a0e:	(bad)  
  407a0f:	(bad)  
  407a10:	cmp    al,0xcf
  407a12:	(bad)  
  407a13:	(bad)  
  407a14:	cmp    al,0xcf
  407a16:	(bad)  
  407a17:	(bad)  
  407a18:	cmp    al,0xcf
  407a1a:	(bad)  
  407a1b:	dec    eax
  407a1d:	(bad)  
  407a1e:	(bad)  
  407a1f:	jmp    FWORD PTR [rax+0x78ffffce]
  407a25:	(bad)  
  407a26:	(bad)  
  407a27:	jmp    FWORD PTR [rax-0x32]
  407a2a:	(bad)  
  407a2b:	(bad)  
  407a2c:	cmp    al,0xcf
  407a2e:	(bad)  
  407a2f:	(bad)  
  407a30:	cmp    al,0xcf
  407a32:	(bad)  
  407a33:	(bad)  
  407a34:	cmp    al,0xcf
  407a36:	(bad)  
  407a37:	(bad)  
  407a38:	cmp    al,0xcf
  407a3a:	(bad)  
  407a3b:	(bad)  
  407a3c:	cmp    al,0xcf
  407a3e:	(bad)  
  407a3f:	(bad)  
  407a40:	cmp    al,0xcf
  407a42:	(bad)  
  407a43:	(bad)  
  407a44:	cmp    al,0xcf
  407a46:	(bad)  
  407a47:	(bad)  
  407a48:	cmp    al,0xcf
  407a4a:	(bad)  
  407a4b:	(bad)  
  407a4c:	cmp    al,0xcf
  407a4e:	(bad)  
  407a4f:	(bad)  
  407a50:	cmp    al,0xcf
  407a52:	(bad)  
  407a53:	(bad)  
  407a54:	cmp    al,0xcf
  407a56:	(bad)  
  407a57:	dec    DWORD PTR [rax-0x32]
  407a5a:	(bad)  
  407a5b:	(bad)  
  407a5c:	cmp    al,0xcf
  407a5e:	(bad)  
  407a5f:	(bad)  
  407a60:	cmp    al,0xcf
  407a62:	(bad)  
  407a63:	(bad)  
  407a64:	cmp    al,0xcf
  407a66:	(bad)  
  407a67:	(bad)  
  407a68:	cmp    dh,cl
  407a6a:	(bad)  
  407a6b:	(bad)  
  407a6c:	cmp    al,0xcf
  407a6e:	(bad)  
  407a6f:	jmp    FWORD PTR [rax]
  407a71:	(bad)  
  407a72:	(bad)  
  407a73:	inc    DWORD PTR [rax]
  407a75:	add    BYTE PTR [rax],al
  407a77:	add    BYTE PTR [rax],al
  407a79:	add    BYTE PTR [rax],al
  407a7b:	add    BYTE PTR [rax-0x7fbed17c],al
  407a81:	mov    ch,0x40
  407a83:	add    BYTE PTR [rax],al
  407a85:	add    BYTE PTR [rax],al
  407a87:	add    BYTE PTR [rax+0x40b0],al
  407a8d:	add    BYTE PTR [rax],al
  407a8f:	add    BYTE PTR [rax],ah
  407a91:	(bad)  
  407a92:	add    BYTE PTR [rax],al
	...
  407a9d:	add    BYTE PTR [rax],al
  407a9f:	add    BYTE PTR [rcx+0x72],al
  407aa2:	addr32 jne 0x407b12
  407aa5:	outs   dx,BYTE PTR gs:[rsi]
  407aa7:	je     0x407ac9
  407aa9:	outs   dx,DWORD PTR fs:[rsi]
  407aab:	ins    DWORD PTR es:[rdi],dx
  407aac:	(bad)  
  407aad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  407ab4:	jb     0x407ad6
  407ab6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  407aba:	rex.B
  407abb:	rex.WB
  407abc:	rex.WRX sub QWORD PTR [rax],r8
  407abf:	rex.B jb 0x407b29
  407ac2:	jne    0x407b31
  407ac4:	outs   dx,BYTE PTR gs:[rsi]
  407ac6:	je     0x407ae8
  407ac8:	jae    0x407b33
  407aca:	outs   dx,BYTE PTR ds:[rsi]
  407acb:	addr32 jne 0x407b3a
  407ace:	(bad)  
  407acf:	jb     0x407b3a
  407ad1:	je     0x407b4c
  407ad3:	and    BYTE PTR [rax],ch
  407ad5:	push   rbx
  407ad6:	rex.WB
  407ad7:	rex.RXB
  407ad8:	rex.WRX sub QWORD PTR [rax],r8
  407adb:	add    BYTE PTR [rax],al
  407add:	add    BYTE PTR [rax],al
  407adf:	add    BYTE PTR [rdi+0x76],cl
  407ae2:	gs jb  0x407b4b
  407ae5:	ins    BYTE PTR es:[rdi],dx
  407ae6:	outs   dx,DWORD PTR ds:[rsi]
  407ae7:	ja     0x407b09
  407ae9:	jb     0x407b4c
  407aeb:	outs   dx,BYTE PTR ds:[rsi]
  407aec:	and    BYTE PTR gs:[ebp+0x72],ah
  407af1:	jb     0x407b62
  407af3:	jb     0x407b15
  407af5:	sub    BYTE PTR [rdi+0x56],cl
  407af8:	rex.RB push r10
  407afa:	rex.RX
  407afb:	rex.WR
  407afc:	rex.WRXB push r15
  407afe:	sub    DWORD PTR [rax],eax
  407b00:	push   rax
  407b01:	(bad)  
  407b02:	jb     0x407b78
  407b04:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  407b0b:	jae    0x407b2d
  407b0d:	outs   dx,DWORD PTR ds:[rsi]
  407b0e:	data16 and BYTE PTR [rbx+0x69],dh
  407b12:	outs   dx,BYTE PTR ds:[esi]
  407b14:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  407b1b:	and    BYTE PTR gs:[rax],ch
  407b1e:	push   rax
  407b1f:	rex.WR
  407b20:	rex.WRXB push r11
  407b22:	push   rbx
  407b23:	sub    DWORD PTR [rax],eax
  407b25:	add    BYTE PTR [rax],al
  407b27:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  407b2b:	(bad)  
  407b2c:	ins    BYTE PTR es:[rdi],dx
  407b2d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  407b31:	jae    0x407b53
  407b33:	outs   dx,DWORD PTR ds:[rsi]
  407b34:	data16 and BYTE PTR [rbx+0x69],dh
  407b38:	outs   dx,BYTE PTR ds:[esi]
  407b3a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  407b41:	and    BYTE PTR gs:[rax],ch
  407b44:	push   rsp
  407b45:	rex.WR
  407b46:	rex.WRXB push r11
  407b48:	push   rbx
  407b49:	sub    DWORD PTR [rax],eax
  407b4b:	add    BYTE PTR [rax],al
  407b4d:	add    BYTE PTR [rax],al
  407b4f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  407b53:	and    BYTE PTR [rdx+0x65],dh
  407b56:	jae    0x407bcd
  407b58:	ins    BYTE PTR es:[rdi],dx
  407b59:	je     0x407b7b
  407b5b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  407b62:	jae    0x407bd1
  407b64:	(bad)  
  407b65:	ins    BYTE PTR es:[rdi],dx
  407b66:	ins    BYTE PTR es:[rdi],dx
  407b67:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407b6b:	(bad)  
  407b6c:	and    BYTE PTR gs:[rdx+0x65],dh
  407b70:	jo     0x407be4
  407b72:	gs jae 0x407bda
  407b75:	outs   dx,BYTE PTR ds:[rsi]
  407b76:	je     0x407bdd
  407b78:	and    BYTE PTR fs:[rax],ch
  407b7b:	push   rbp
  407b7c:	rex.WRX
  407b7d:	rex.R
  407b7e:	rex.RB push r10
  407b80:	rex.RX
  407b81:	rex.WR
  407b82:	rex.WRXB push r15
  407b84:	sub    DWORD PTR [rax],eax
  407b86:	push   rbp
  407b87:	outs   dx,BYTE PTR ds:[rsi]
  407b88:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407b8c:	outs   dx,BYTE PTR ds:[rsi]
  407b8d:	and    BYTE PTR [rbp+0x72],ah
  407b90:	jb     0x407c01
  407b92:	jb     0x407b94
  407b94:	add    BYTE PTR [rax],al
  407b96:	add    BYTE PTR [rax],al
  407b98:	pop    rdi
  407b99:	ins    DWORD PTR es:[rdi],dx
  407b9a:	(bad)  
  407b9b:	je     0x407c05
  407b9d:	gs jb  0x407c12
  407ba0:	sub    BYTE PTR [rcx],ch
  407ba2:	cmp    ah,BYTE PTR [rax]
  407ba4:	and    eax,0x6e692073
  407ba9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765a422
  407baf:	sub    al,0x20
  407bb1:	and    eax,0x20202967
  407bb6:	sub    BYTE PTR [rdx+0x65],dh
  407bb9:	je     0x407c31
  407bbb:	(bad)  
  407bbc:	ins    BYTE PTR es:[rdi],dx
  407bbd:	cmp    eax,0xa296725
  407bc2:	add    BYTE PTR [rax],al
  407bc4:	sub    al,0xad
  407bc6:	(bad)  
  407bc7:	jmp    FWORD PTR [rbp-0x54]
  407bca:	(bad)  
  407bcb:	(bad)  
  407bcc:	fsubr  QWORD PTR [rdi+rdi*8-0x531301]
  407bd3:	(bad)  
  407bd4:	cld    
  407bd5:	lods   al,BYTE PTR ds:[rsi]
  407bd6:	(bad)  
  407bd7:	dec    DWORD PTR [rbp*4-0x52e30001]
  407bde:	(bad)  
  407bdf:	dec    DWORD PTR [rbp+0x69]
  407be2:	outs   dx,BYTE PTR ds:[rsi]
  407be3:	addr32 ja 0x407c13
  407be6:	ja     0x407c1e
  407be8:	xor    al,0x20
  407bea:	jb     0x407c61
  407bec:	outs   dx,BYTE PTR ds:[rsi]
  407bed:	je     0x407c58
  407bef:	ins    DWORD PTR es:[rdi],dx
  407bf0:	and    BYTE PTR gs:[rsi+0x61],ah
  407bf4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  407bfc:	add    BYTE PTR [rax],al
  407bfe:	add    BYTE PTR [rax],al
  407c00:	rex.B
  407c01:	fs fs jb 0x407c6a
  407c05:	jae    0x407c7a
  407c07:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a89c7d
  407c0d:	jae    0x407c2f
  407c0f:	outs   dx,BYTE PTR ds:[rsi]
  407c10:	outs   dx,DWORD PTR ds:[rsi]
  407c11:	and    BYTE PTR [rcx+0x6d],ch
  407c14:	(bad)  
  407c15:	addr32 gs sub eax,0x74636573
  407c1c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  407c23:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  407c2a:	jne    0x407c91
  407c2c:	jb     0x407ca7
  407c2e:	and    BYTE PTR [rsi+0x61],ah
  407c31:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  407c39:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a29ca3
  407c3f:	je     0x407ca6
  407c41:	jae    0x407c63
  407c43:	(bad)  
  407c44:	je     0x407c66
  407c46:	(bad)  
  407c47:	fs fs jb 0x407cb0
  407c4b:	jae    0x407cc0
  407c4d:	and    BYTE PTR [rip+0x70],ah        # 0x407cc3
  407c53:	add    BYTE PTR [rax],al
  407c55:	add    BYTE PTR [rax],al
  407c57:	add    BYTE PTR [rax],ah
  407c59:	and    BYTE PTR [rsi+0x69],dl
  407c5c:	jb     0x407cd2
  407c5e:	jne    0x407cc1
  407c60:	ins    BYTE PTR es:[rdi],dx
  407c61:	push   rax
  407c62:	jb     0x407cd3
  407c64:	je     0x407ccb
  407c66:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  407c6a:	(bad)  
  407c6b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  407c73:	push   0x646f6320
  407c78:	and    BYTE PTR gs:[rax],dh
  407c7b:	js     0x407ca2
  407c7d:	js     0x407c7f
  407c7f:	add    BYTE PTR [rax],ah
  407c81:	and    BYTE PTR [rbp+0x6e],dl
  407c84:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407c88:	outs   dx,BYTE PTR ds:[rsi]
  407c89:	and    BYTE PTR [rax+0x73],dh
  407c8c:	gs jne 0x407cf3
  407c8f:	outs   dx,DWORD PTR ds:[rsi]
  407c90:	and    BYTE PTR [rdx+0x65],dh
  407c93:	ins    BYTE PTR es:[rdi],dx
  407c94:	outs   dx,DWORD PTR ds:[rsi]
  407c95:	movsxd esp,DWORD PTR [rcx+0x74]
  407c98:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  407c9f:	je     0x407d10
  407ca1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407ca4:	and    BYTE PTR [rsi+0x65],dh
  407ca7:	jb     0x407d1c
  407ca9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  407cb0:	or     al,BYTE PTR [rax]
  407cb2:	add    BYTE PTR [rax],al
  407cb4:	add    BYTE PTR [rax],al
  407cb6:	add    BYTE PTR [rax],al
  407cb8:	and    BYTE PTR [rax],ah
  407cba:	push   rbp
  407cbb:	outs   dx,BYTE PTR ds:[rsi]
  407cbc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407cc0:	outs   dx,BYTE PTR ds:[rsi]
  407cc1:	and    BYTE PTR [rax+0x73],dh
  407cc4:	gs jne 0x407d2b
  407cc7:	outs   dx,DWORD PTR ds:[rsi]
  407cc8:	and    BYTE PTR [rdx+0x65],dh
  407ccb:	ins    BYTE PTR es:[rdi],dx
  407ccc:	outs   dx,DWORD PTR ds:[rsi]
  407ccd:	movsxd esp,DWORD PTR [rcx+0x74]
  407cd0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  407cd7:	and    BYTE PTR [rbx+0x69],dh
  407cda:	jp     0x407d41
  407cdc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4aab46
	...
  407cee:	add    BYTE PTR [rax],al
  407cf0:	cs jo  0x407d57
  407cf3:	(bad)  
  407cf4:	je     0x407d57
	...
  407cfe:	add    BYTE PTR [rax],al
  407d00:	and    eax,0x203a73
  407d05:	push   rax
  407d06:	rex.WRXB push r11
  407d08:	rex.WB pop r8
  407d0a:	rex.WR pop rcx
  407d0c:	pop    rdi
  407d0d:	rex.XB
  407d0e:	rex.WRXB push r10
  407d10:	push   rdx
  407d11:	rex.RB
  407d12:	rex.XB push r12
	...
  407d20:	jne    0x407d90
  407d22:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407d26:	outs   dx,BYTE PTR ds:[rsi]
  407d27:	and    BYTE PTR [rdi+0x70],ch
  407d2a:	je     0x407d95
  407d2c:	outs   dx,DWORD PTR ds:[rsi]
  407d2d:	outs   dx,BYTE PTR ds:[rsi]
  407d2e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73659d61
	...
  407d40:	jne    0x407db0
  407d42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407d46:	outs   dx,BYTE PTR ds:[rsi]
  407d47:	and    BYTE PTR [rdi+0x70],ch
  407d4a:	je     0x407db5
  407d4c:	outs   dx,DWORD PTR ds:[rsi]
  407d4d:	outs   dx,BYTE PTR ds:[rsi]
  407d4e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63659d81
	...
  407d60:	outs   dx,DWORD PTR ds:[rsi]
  407d61:	jo     0x407dd7
  407d63:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  407d6a:	jae    0x407dda
  407d6c:	(bad)  
  407d6d:	je     0x407d8f
  407d6f:	je     0x407dd2
  407d71:	imul   esp,DWORD PTR [rbp+0x20],0x61
  407d75:	outs   dx,BYTE PTR ds:[rsi]
  407d76:	and    BYTE PTR [rcx+0x72],ah
  407d79:	addr32 jne 0x407de9
  407d7c:	outs   dx,BYTE PTR gs:[rsi]
  407d7e:	je     0x407da0
  407d80:	sub    eax,0x2e25202d
  407d85:	sub    dh,BYTE PTR [rbx+0x0]
	...
  407d90:	(bad)  
  407d91:	ins    DWORD PTR es:[rdi],dx
  407d92:	(bad)  
  407d93:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  407d9a:	outs   dx,DWORD PTR ds:[rsi]
  407d9b:	jo     0x407e11
  407d9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  407da4:	and    eax,0x732a2e
	...
  407dbd:	add    BYTE PTR [rax],al
  407dbf:	add    BYTE PTR [rdi+0x70],ch
  407dc2:	je     0x407e2d
  407dc4:	outs   dx,DWORD PTR ds:[rsi]
  407dc5:	outs   dx,BYTE PTR ds:[rsi]
  407dc6:	and    BYTE PTR [rdx+0x65],dh
  407dc9:	jno    0x407e40
  407dcb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407dd2:	and    BYTE PTR [rcx+0x72],ah
  407dd5:	addr32 jne 0x407e45
  407dd8:	outs   dx,BYTE PTR gs:[rsi]
  407dda:	je     0x407dfc
  407ddc:	sub    eax,0x7325202d
	...
  407dfd:	add    BYTE PTR [rax],al
  407dff:	add    BYTE PTR [rdi+0x70],ch
  407e02:	je     0x407e6d
  407e04:	outs   dx,DWORD PTR ds:[rsi]
  407e05:	outs   dx,BYTE PTR ds:[rsi]
  407e06:	and    BYTE PTR [rdx+0x65],dh
  407e09:	jno    0x407e80
  407e0b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407e12:	and    BYTE PTR [rcx+0x72],ah
  407e15:	addr32 jne 0x407e85
  407e18:	outs   dx,BYTE PTR gs:[rsi]
  407e1a:	je     0x407e3c
  407e1c:	sub    eax,0x6325202d
	...
  407e3d:	add    BYTE PTR [rax],al
  407e3f:	add    BYTE PTR [rax+0x60],al
  407e42:	add    BYTE PTR [rax],al
	...
  407e4d:	add    BYTE PTR [rax],al
  407e4f:	add    BYTE PTR [rax+0x4060],al
	...
  407e5d:	add    BYTE PTR [rax],al
  407e5f:	add    BYTE PTR [rax+0x4051],dh
	...
  407e6d:	add    BYTE PTR [rax],al
  407e6f:	add    BYTE PTR [rax],ah
  407e71:	test   BYTE PTR [rax+0x0],al
	...
  407e80:	and    BYTE PTR [rax+rax*2+0x0],al
	...
  407e8f:	add    BYTE PTR [rax+0x407a],dl
	...
  407ea1:	add    BYTE PTR [rax+0x0],al
	...
  407eb0:	sub    ch,al
  407eb2:	add    BYTE PTR [rax],al
	...
  407ebd:	add    BYTE PTR [rax],al
  407ebf:	add    BYTE PTR [rax-0x3b],al
  407ec2:	add    BYTE PTR [rax],al
	...
  407ecd:	add    BYTE PTR [rax],al
  407ecf:	add    BYTE PTR [rax-0x3b],ch
  407ed2:	add    BYTE PTR [rax],al
	...
  407edd:	add    BYTE PTR [rax],al
  407edf:	add    BYTE PTR [rax+0x40c5],cl
	...
  407eed:	add    BYTE PTR [rax],al
  407eef:	add    BYTE PTR [rax+0x40c5],ah
	...
  407efd:	add    BYTE PTR [rax],al
  407eff:	add    al,al
  407f01:	mov    dh,0x40
	...
  407f0f:	add    BYTE PTR [rax],ch
  407f11:	mov    edx,0x40
	...
  407f1e:	add    BYTE PTR [rax],al
  407f20:	and    BYTE PTR [rdx+0x40],bh
	...
  407f2e:	add    BYTE PTR [rax],al
  407f30:	adc    BYTE PTR [rdx+0x40],bh
	...
  407f3e:	add    BYTE PTR [rax],al
  407f40:	sbb    BYTE PTR [rdx+0x40],bh
	...
  407f4e:	add    BYTE PTR [rax],al
  407f50:	add    al,dl
  407f52:	add    BYTE PTR [rax],al
	...
  407f5d:	add    BYTE PTR [rax],al
  407f5f:	add    BYTE PTR [rax],dl
  407f61:	rol    BYTE PTR [rax+0x0],1
	...
  407f70:	sbb    al,dl
  407f72:	add    BYTE PTR [rax],al
	...
  407f7d:	add    BYTE PTR [rax],al
  407f7f:	add    BYTE PTR [rax],dh
  407f81:	rol    BYTE PTR [rax+0x0],1
	...
  407f90:	mov    al,0x40
	...
  407f9f:	add    BYTE PTR [rax+0x40b6],dl
	...
  407fad:	add    BYTE PTR [rax],al
  407faf:	add    BYTE PTR [rax+0x4030],dh
	...
  407fc1:	sub    BYTE PTR [rax+0x0],al
	...
  407fd0:	mov    sil,0x40
	...
  407fdf:	add    BYTE PTR [rax-0x4a],dh
  407fe2:	add    BYTE PTR [rax],al
	...
  407fed:	add    BYTE PTR [rax],al
  407fef:	add    BYTE PTR [rax-0x50],dl
  407ff2:	add    BYTE PTR [rax],al
	...
  407ffd:	add    BYTE PTR [rax],al
  407fff:	add    BYTE PTR [rax-0x4a],bl
  408002:	add    BYTE PTR [rax],al
	...
  40800d:	add    BYTE PTR [rax],al
  40800f:	add    BYTE PTR [rsi+rsi*4+0x40],dl
	...
  40801f:	add    BYTE PTR [rax-0x4a],dl
  408022:	add    BYTE PTR [rax],al
	...
  40802d:	add    BYTE PTR [rax],al
  40802f:	add    BYTE PTR [rax-0x46],dl
  408032:	add    BYTE PTR [rax],al
	...
  40803d:	add    BYTE PTR [rax],al
  40803f:	add    BYTE PTR [rdi+0x43],al
  408042:	rex.XB cmp spl,BYTE PTR [r8]
  408045:	sub    BYTE PTR [rdi+0x4e],al
  408048:	push   rbp
  408049:	sub    DWORD PTR [rax],esp
  40804b:	xor    al,0x2e
  40804d:	cmp    DWORD PTR [rsi],ebp
  40804f:	xor    al,0x0
	...
  40805d:	add    BYTE PTR [rax],al
  40805f:	add    BYTE PTR [rdi+0x43],al
  408062:	rex.XB cmp spl,BYTE PTR [r8]
  408065:	sub    BYTE PTR [rdi+0x4e],al
  408068:	push   rbp
  408069:	sub    DWORD PTR [rax],esp
  40806b:	xor    al,0x2e
  40806d:	cmp    DWORD PTR [rsi],ebp
  40806f:	xor    al,0x0
	...
  40807d:	add    BYTE PTR [rax],al
  40807f:	add    BYTE PTR [rdi+0x43],al
  408082:	rex.XB cmp spl,BYTE PTR [r8]
  408085:	sub    BYTE PTR [rdi+0x4e],al
  408088:	push   rbp
  408089:	sub    DWORD PTR [rax],esp
  40808b:	xor    al,0x2e
  40808d:	cmp    DWORD PTR [rsi],ebp
  40808f:	xor    al,0x0
	...
  40809d:	add    BYTE PTR [rax],al
  40809f:	add    BYTE PTR [rdi+0x43],al
  4080a2:	rex.XB cmp spl,BYTE PTR [r8]
  4080a5:	sub    BYTE PTR [rdi+0x4e],al
  4080a8:	push   rbp
  4080a9:	sub    DWORD PTR [rax],esp
  4080ab:	xor    al,0x2e
  4080ad:	cmp    DWORD PTR [rsi],ebp
  4080af:	xor    al,0x0
	...
  4080bd:	add    BYTE PTR [rax],al
  4080bf:	add    BYTE PTR [rdi+0x43],al
  4080c2:	rex.XB cmp spl,BYTE PTR [r8]
  4080c5:	sub    BYTE PTR [rdi+0x4e],al
  4080c8:	push   rbp
  4080c9:	sub    DWORD PTR [rax],esp
  4080cb:	xor    al,0x2e
  4080cd:	cmp    DWORD PTR [rsi],ebp
  4080cf:	xor    al,0x0
	...
  4080dd:	add    BYTE PTR [rax],al
  4080df:	add    BYTE PTR [rdi+0x43],al
  4080e2:	rex.XB cmp spl,BYTE PTR [r8]
  4080e5:	sub    BYTE PTR [rdi+0x4e],al
  4080e8:	push   rbp
  4080e9:	sub    DWORD PTR [rax],esp
  4080eb:	xor    al,0x2e
  4080ed:	cmp    DWORD PTR [rsi],ebp
  4080ef:	xor    al,0x0
	...
  4080fd:	add    BYTE PTR [rax],al
  4080ff:	add    BYTE PTR [rdi+0x43],al
  408102:	rex.XB cmp spl,BYTE PTR [r8]
  408105:	sub    BYTE PTR [rdi+0x4e],al
  408108:	push   rbp
  408109:	sub    DWORD PTR [rax],esp
  40810b:	xor    al,0x2e
  40810d:	cmp    DWORD PTR [rsi],ebp
  40810f:	xor    al,0x0
	...
  40811d:	add    BYTE PTR [rax],al
  40811f:	add    BYTE PTR [rdi+0x43],al
  408122:	rex.XB cmp spl,BYTE PTR [r8]
  408125:	sub    BYTE PTR [rdi+0x4e],al
  408128:	push   rbp
  408129:	sub    DWORD PTR [rax],esp
  40812b:	xor    al,0x2e
  40812d:	cmp    DWORD PTR [rsi],ebp
  40812f:	xor    al,0x0
	...
  40813d:	add    BYTE PTR [rax],al
  40813f:	add    BYTE PTR [rdi+0x43],al
  408142:	rex.XB cmp spl,BYTE PTR [r8]
  408145:	sub    BYTE PTR [rdi+0x4e],al
  408148:	push   rbp
  408149:	sub    DWORD PTR [rax],esp
  40814b:	xor    al,0x2e
  40814d:	cmp    DWORD PTR [rsi],ebp
  40814f:	xor    al,0x0
	...
  40815d:	add    BYTE PTR [rax],al
  40815f:	add    BYTE PTR [rdi+0x43],al
  408162:	rex.XB cmp spl,BYTE PTR [r8]
  408165:	sub    BYTE PTR [rdi+0x4e],al
  408168:	push   rbp
  408169:	sub    DWORD PTR [rax],esp
  40816b:	xor    al,0x2e
  40816d:	cmp    DWORD PTR [rsi],ebp
  40816f:	xor    al,0x0
	...
  40817d:	add    BYTE PTR [rax],al
  40817f:	add    BYTE PTR [rdi+0x43],al
  408182:	rex.XB cmp spl,BYTE PTR [r8]
  408185:	sub    BYTE PTR [rdi+0x4e],al
  408188:	push   rbp
  408189:	sub    DWORD PTR [rax],esp
  40818b:	xor    al,0x2e
  40818d:	cmp    DWORD PTR [rsi],ebp
  40818f:	xor    al,0x0
	...
  40819d:	add    BYTE PTR [rax],al
  40819f:	add    BYTE PTR [rdi+0x43],al
  4081a2:	rex.XB cmp spl,BYTE PTR [r8]
  4081a5:	sub    BYTE PTR [rdi+0x4e],al
  4081a8:	push   rbp
  4081a9:	sub    DWORD PTR [rax],esp
  4081ab:	xor    al,0x2e
  4081ad:	cmp    DWORD PTR [rsi],ebp
  4081af:	xor    al,0x0
	...
  4081bd:	add    BYTE PTR [rax],al
  4081bf:	add    BYTE PTR [rdi+0x43],al
  4081c2:	rex.XB cmp spl,BYTE PTR [r8]
  4081c5:	sub    BYTE PTR [rdi+0x4e],al
  4081c8:	push   rbp
  4081c9:	sub    DWORD PTR [rax],esp
  4081cb:	xor    al,0x2e
  4081cd:	cmp    DWORD PTR [rsi],ebp
  4081cf:	xor    al,0x0
	...
  4081dd:	add    BYTE PTR [rax],al
  4081df:	add    BYTE PTR [rdi+0x43],al
  4081e2:	rex.XB cmp spl,BYTE PTR [r8]
  4081e5:	sub    BYTE PTR [rdi+0x4e],al
  4081e8:	push   rbp
  4081e9:	sub    DWORD PTR [rax],esp
  4081eb:	xor    al,0x2e
  4081ed:	cmp    DWORD PTR [rsi],ebp
  4081ef:	xor    al,0x0
	...
  4081fd:	add    BYTE PTR [rax],al
  4081ff:	add    BYTE PTR [rdi+0x43],al
  408202:	rex.XB cmp spl,BYTE PTR [r8]
  408205:	sub    BYTE PTR [rdi+0x4e],al
  408208:	push   rbp
  408209:	sub    DWORD PTR [rax],esp
  40820b:	xor    al,0x2e
  40820d:	cmp    DWORD PTR [rsi],ebp
  40820f:	xor    al,0x0
	...
  40821d:	add    BYTE PTR [rax],al
  40821f:	add    BYTE PTR [rdi+0x43],al
  408222:	rex.XB cmp spl,BYTE PTR [r8]
  408225:	sub    BYTE PTR [rdi+0x4e],al
  408228:	push   rbp
  408229:	sub    DWORD PTR [rax],esp
  40822b:	xor    al,0x2e
  40822d:	cmp    DWORD PTR [rsi],ebp
  40822f:	xor    al,0x0
	...
  40823d:	add    BYTE PTR [rax],al
  40823f:	add    BYTE PTR [rdi+0x43],al
  408242:	rex.XB cmp spl,BYTE PTR [r8]
  408245:	sub    BYTE PTR [rdi+0x4e],al
  408248:	push   rbp
  408249:	sub    DWORD PTR [rax],esp
  40824b:	xor    al,0x2e
  40824d:	cmp    DWORD PTR [rsi],ebp
  40824f:	xor    al,0x0
	...
  40825d:	add    BYTE PTR [rax],al
  40825f:	add    BYTE PTR [rdi+0x43],al
  408262:	rex.XB cmp spl,BYTE PTR [r8]
  408265:	sub    BYTE PTR [rdi+0x4e],al
  408268:	push   rbp
  408269:	sub    DWORD PTR [rax],esp
  40826b:	xor    al,0x2e
  40826d:	cmp    DWORD PTR [rsi],ebp
  40826f:	xor    al,0x0
	...
  40827d:	add    BYTE PTR [rax],al
  40827f:	add    BYTE PTR [rdi+0x43],al
  408282:	rex.XB cmp spl,BYTE PTR [r8]
  408285:	sub    BYTE PTR [rdi+0x4e],al
  408288:	push   rbp
  408289:	sub    DWORD PTR [rax],esp
  40828b:	xor    al,0x2e
  40828d:	cmp    DWORD PTR [rsi],ebp
  40828f:	xor    al,0x0
	...
  40829d:	add    BYTE PTR [rax],al
  40829f:	add    BYTE PTR [rdi+0x43],al
  4082a2:	rex.XB cmp spl,BYTE PTR [r8]
  4082a5:	sub    BYTE PTR [rdi+0x4e],al
  4082a8:	push   rbp
  4082a9:	sub    DWORD PTR [rax],esp
  4082ab:	xor    al,0x2e
  4082ad:	cmp    DWORD PTR [rsi],ebp
  4082af:	xor    al,0x0
	...
  4082bd:	add    BYTE PTR [rax],al
  4082bf:	add    BYTE PTR [rdi+0x43],al
  4082c2:	rex.XB cmp spl,BYTE PTR [r8]
  4082c5:	sub    BYTE PTR [rdi+0x4e],al
  4082c8:	push   rbp
  4082c9:	sub    DWORD PTR [rax],esp
  4082cb:	xor    al,0x2e
  4082cd:	cmp    DWORD PTR [rsi],ebp
  4082cf:	xor    al,0x0
	...
  4082dd:	add    BYTE PTR [rax],al
  4082df:	add    BYTE PTR [rdi+0x43],al
  4082e2:	rex.XB cmp spl,BYTE PTR [r8]
  4082e5:	sub    BYTE PTR [rdi+0x4e],al
  4082e8:	push   rbp
  4082e9:	sub    DWORD PTR [rax],esp
  4082eb:	xor    al,0x2e
  4082ed:	cmp    DWORD PTR [rsi],ebp
  4082ef:	xor    al,0x0
	...
  4082fd:	add    BYTE PTR [rax],al
  4082ff:	add    BYTE PTR [rdi+0x43],al
  408302:	rex.XB cmp spl,BYTE PTR [r8]
  408305:	sub    BYTE PTR [rdi+0x4e],al
  408308:	push   rbp
  408309:	sub    DWORD PTR [rax],esp
  40830b:	xor    al,0x2e
  40830d:	cmp    DWORD PTR [rsi],ebp
  40830f:	xor    al,0x0
	...
  40831d:	add    BYTE PTR [rax],al
  40831f:	add    BYTE PTR [rdi+0x43],al
  408322:	rex.XB cmp spl,BYTE PTR [r8]
  408325:	sub    BYTE PTR [rdi+0x4e],al
  408328:	push   rbp
  408329:	sub    DWORD PTR [rax],esp
  40832b:	xor    al,0x2e
  40832d:	cmp    DWORD PTR [rsi],ebp
  40832f:	xor    al,0x0
	...
  40833d:	add    BYTE PTR [rax],al
  40833f:	add    BYTE PTR [rdi+0x43],al
  408342:	rex.XB cmp spl,BYTE PTR [r8]
  408345:	sub    BYTE PTR [rdi+0x4e],al
  408348:	push   rbp
  408349:	sub    DWORD PTR [rax],esp
  40834b:	xor    al,0x2e
  40834d:	cmp    DWORD PTR [rsi],ebp
  40834f:	xor    al,0x0
	...
  40835d:	add    BYTE PTR [rax],al
  40835f:	add    BYTE PTR [rdi+0x43],al
  408362:	rex.XB cmp spl,BYTE PTR [r8]
  408365:	sub    BYTE PTR [rdi+0x4e],al
  408368:	push   rbp
  408369:	sub    DWORD PTR [rax],esp
  40836b:	xor    al,0x2e
  40836d:	cmp    DWORD PTR [rsi],ebp
  40836f:	xor    al,0x0
	...
  40837d:	add    BYTE PTR [rax],al
  40837f:	add    BYTE PTR [rdi+0x43],al
  408382:	rex.XB cmp spl,BYTE PTR [r8]
  408385:	sub    BYTE PTR [rdi+0x4e],al
  408388:	push   rbp
  408389:	sub    DWORD PTR [rax],esp
  40838b:	xor    al,0x2e
  40838d:	cmp    DWORD PTR [rsi],ebp
  40838f:	xor    al,0x0
	...
  40839d:	add    BYTE PTR [rax],al
  40839f:	add    BYTE PTR [rdi+0x43],al
  4083a2:	rex.XB cmp spl,BYTE PTR [r8]
  4083a5:	sub    BYTE PTR [rdi+0x4e],al
  4083a8:	push   rbp
  4083a9:	sub    DWORD PTR [rax],esp
  4083ab:	xor    al,0x2e
  4083ad:	cmp    DWORD PTR [rsi],ebp
  4083af:	xor    al,0x0
	...
  4083bd:	add    BYTE PTR [rax],al
  4083bf:	add    BYTE PTR [rdi+0x43],al
  4083c2:	rex.XB cmp spl,BYTE PTR [r8]
  4083c5:	sub    BYTE PTR [rdi+0x4e],al
  4083c8:	push   rbp
  4083c9:	sub    DWORD PTR [rax],esp
  4083cb:	xor    al,0x2e
  4083cd:	cmp    DWORD PTR [rsi],ebp
  4083cf:	xor    al,0x0
	...
  4083dd:	add    BYTE PTR [rax],al
  4083df:	add    BYTE PTR [rdi+0x43],al
  4083e2:	rex.XB cmp spl,BYTE PTR [r8]
  4083e5:	sub    BYTE PTR [rdi+0x4e],al
  4083e8:	push   rbp
  4083e9:	sub    DWORD PTR [rax],esp
  4083eb:	xor    al,0x2e
  4083ed:	cmp    DWORD PTR [rsi],ebp
  4083ef:	xor    al,0x0
	...
  4083fd:	add    BYTE PTR [rax],al
  4083ff:	add    BYTE PTR [rdi+0x43],al
  408402:	rex.XB cmp spl,BYTE PTR [r8]
  408405:	sub    BYTE PTR [rdi+0x4e],al
  408408:	push   rbp
  408409:	sub    DWORD PTR [rax],esp
  40840b:	xor    al,0x2e
  40840d:	cmp    DWORD PTR [rsi],ebp
  40840f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000409000 <.pdata>:
  409000:	add    BYTE PTR [rax],dl
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rax],edx
  409006:	add    BYTE PTR [rax],al
  409008:	add    BYTE PTR [rax+0x10100000],ah
  40900e:	add    BYTE PTR [rax],al
  409010:	push   rcx
  409011:	adc    DWORD PTR [rax],eax
  409013:	add    BYTE PTR [rax+riz*4],al
  409016:	add    BYTE PTR [rax],al
  409018:	(bad)  
  409019:	adc    DWORD PTR [rax],eax
  40901b:	add    BYTE PTR [rsi+0xc000011],ch
  409021:	movabs al,ds:0x14ce000011b00000
  40902a:	add    BYTE PTR [rax],al
  40902c:	adc    al,0xa0
  40902e:	add    BYTE PTR [rax],al
  409030:	rcl    BYTE PTR [rax+rax*1],1
  409033:	add    dl,dh
  409035:	adc    al,0x0
  409037:	add    BYTE PTR [rax],ch
  409039:	movabs al,ds:0x1522000015000000
  409042:	add    BYTE PTR [rax],al
  409044:	rex.W movabs al,ds:0x1584000015300000
  40904e:	add    BYTE PTR [rax],al
  409050:	push   0xffffffff900000a0
  409055:	adc    eax,0x16ce0000
  40905a:	add    BYTE PTR [rax],al
  40905c:	je     0x408ffe
  40905e:	add    BYTE PTR [rax],al
  409060:	rcl    BYTE PTR [rsi],1
  409062:	add    BYTE PTR [rax],al
  409064:	sub    DWORD PTR [rcx],ebx
  409066:	add    BYTE PTR [rax],al
  409068:	mov    BYTE PTR [rax+0x19300000],ah
  40906e:	add    BYTE PTR [rax],al
  409070:	add    al,0x1f
  409072:	add    BYTE PTR [rax],al
  409074:	movabs al,ds:0xba00001f100000a0
  40907d:	(bad)  
  40907e:	add    BYTE PTR [rax],al
  409080:	mov    esp,0xc00000a0
  409085:	(bad)  
  409086:	add    BYTE PTR [rax],al
  409088:	pop    rbp
  409089:	and    BYTE PTR [rax],al
  40908b:	add    ah,al
  40908d:	movabs al,ds:0x20cf000020600000
  409096:	add    BYTE PTR [rax],al
  409098:	shl    BYTE PTR [rax+0x21c00000],1
  40909e:	add    BYTE PTR [rax],al
  4090a0:	and    al,BYTE PTR [rax]
  4090a3:	add    ah,dh
  4090a5:	movabs al,ds:0x22d3000022400000
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	cld    
  4090b1:	movabs al,ds:0x2359000022e00000
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	or     al,0xa1
  4090be:	add    BYTE PTR [rax],al
  4090c0:	(bad)  
  4090c1:	and    eax,DWORD PTR [rax]
  4090c3:	add    BYTE PTR [rdi],al
  4090c5:	and    al,0x0
  4090c7:	add    BYTE PTR [rax],bl
  4090c9:	movabs eax,ds:0x2429000024100000
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	and    BYTE PTR [rcx+0x24300000],ah
  4090da:	add    BYTE PTR [rax],al
  4090dc:	gs and al,0x0
  4090df:	add    BYTE PTR [rax],ch
  4090e1:	movabs eax,ds:0x24c5000024700000
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	xor    BYTE PTR [rcx+0x24d00000],ah
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	in     al,dx
  4090f5:	and    al,0x0
  4090f7:	add    BYTE PTR [rcx+riz*4],bh
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	lock and al,0x0
  4090ff:	add    dl,bh
  409101:	and    al,0x0
  409103:	add    BYTE PTR [rax-0x5f],al
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rip+0x25030000],ah        # 0x2543910e
  40910e:	add    BYTE PTR [rax],al
  409110:	rex.R movabs eax,ds:0x25e6000025100000
  40911a:	add    BYTE PTR [rax],al
  40911c:	movabs rax,ds:0x26eb000025f00000
  409126:	add    BYTE PTR [rax],al
  409128:	pop    rax
  409129:	movabs eax,ds:0x271f000026f00000
  409132:	add    BYTE PTR [rax],al
  409134:	push   0x200000a1
  409139:	(bad)  
  40913a:	add    BYTE PTR [rax],al
  40913c:	mov    DWORD PTR [rdi],esp
  40913e:	add    BYTE PTR [rax],al
  409140:	jo     0x4090e3
  409142:	add    BYTE PTR [rax],al
  409144:	nop
  409145:	(bad)  
  409146:	add    BYTE PTR [rax],al
  409148:	xchg   ebx,eax
  409149:	(bad)  
  40914a:	add    BYTE PTR [rax],al
  40914c:	jl     0x4090ef
  40914e:	add    BYTE PTR [rax],al
  409150:	movabs al,ds:0x80000027e1000027
  409159:	movabs eax,ds:0x27fc000027f00000
  409162:	add    BYTE PTR [rax],al
  409164:	mov    BYTE PTR [rcx+0x28000000],ah
  40916a:	add    BYTE PTR [rax],al
  40916c:	cld    
  40916d:	sub    BYTE PTR [rax],al
  40916f:	add    BYTE PTR [rcx+riz*4+0x29000000],cl
  409176:	add    BYTE PTR [rax],al
  409178:	add    ebp,DWORD PTR [rcx]
  40917a:	add    BYTE PTR [rax],al
  40917c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40917d:	movabs eax,ds:0x2914000029100000
  409186:	add    BYTE PTR [rax],al
  409188:	test   al,0xa1
  40918a:	add    BYTE PTR [rax],al
  40918c:	and    BYTE PTR [rcx],ch
  40918e:	add    BYTE PTR [rax],al
  409190:	and    al,0x29
  409192:	add    BYTE PTR [rax],al
  409194:	lods   al,BYTE PTR ds:[rsi]
  409195:	movabs eax,ds:0x2991000029300000
  40919e:	add    BYTE PTR [rax],al
  4091a0:	mov    al,0xa1
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	movabs al,ds:0xbc00002b02000029
  4091ad:	movabs eax,ds:0x2e0900002b100000
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	shl    BYTE PTR [rcx+0x2e100000],1
  4091be:	add    BYTE PTR [rax],al
  4091c0:	mov    dh,0x2f
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	call   0xffffffffc040926a
  4091c9:	(bad)  
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	lods   al,BYTE PTR ds:[rsi]
  4091cd:	xor    BYTE PTR [rax],al
  4091cf:	add    al,dh
  4091d1:	movabs eax,ds:0x3268000030b00000
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rdx+0x32700000],ah
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	fnsave [rdx]
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	or     BYTE PTR [rdx+0x32e00000],ah
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	pop    rdi
  4091f1:	xor    eax,DWORD PTR [rax]
  4091f3:	add    BYTE PTR [rax],bl
  4091f5:	movabs ds:0x33ff000033600000,al
  4091fe:	add    BYTE PTR [rax],al
  409200:	and    al,0xa2
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax+rax*1],dh
  409207:	add    dl,bl
  409209:	xor    al,0x0
  40920b:	add    BYTE PTR [rdx+riz*4],ch
  40920e:	add    BYTE PTR [rax],al
  409210:	loopne 0x409246
  409212:	add    BYTE PTR [rax],al
  409214:	push   QWORD PTR [rax+rax*1]
  409217:	add    BYTE PTR [rdx+riz*4],dh
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rip+0x35120000],dh        # 0x35529222
  409222:	add    BYTE PTR [rax],al
  409224:	cmp    BYTE PTR [rdx+0x35200000],ah
  40922a:	add    BYTE PTR [rax],al
  40922c:	gs xor eax,0xa23c0000
  409232:	add    BYTE PTR [rax],al
  409234:	jo     0x40926b
  409236:	add    BYTE PTR [rax],al
  409238:	(bad)  
  409239:	add    BYTE PTR ss:[rax],al
  40923c:	movabs ds:0x3653000036100000,al
  409246:	add    BYTE PTR [rax],al
  409248:	rex.WR movabs ds:0x369b000036600000,al
  409252:	add    BYTE PTR [rax],al
  409254:	pop    rax
  409255:	movabs ds:0x372e000036a00000,al
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	movabs ds:0x3768000037300000,al
  40926a:	add    BYTE PTR [rax],al
  40926c:	ins    BYTE PTR es:[rdi],dx
  40926d:	movabs ds:0x37c5000037700000,al
  409276:	add    BYTE PTR [rax],al
  409278:	js     0x40921c
  40927a:	add    BYTE PTR [rax],al
  40927c:	shl    BYTE PTR [rdi],1
  40927e:	add    BYTE PTR [rax],al
  409280:	jle    0x4092ba
  409282:	add    BYTE PTR [rax],al
  409284:	test   BYTE PTR [rdx+0x38c00000],ah
  40928a:	add    BYTE PTR [rax],al
  40928c:	push   0x39
  40928e:	add    BYTE PTR [rax],al
  409290:	xchg   esp,eax
  409291:	movabs ds:0x39f0000039700000,al
  40929a:	add    BYTE PTR [rax],al
  40929c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40929d:	movabs ds:0x3da6000039f00000,al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	mov    al,0xa2
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	mov    al,0x3d
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	xchg   ebp,eax
  4092b1:	add    BYTE PTR [rax],r8b
  4092b4:	enter  0xa2,0x0
  4092b8:	movabs al,ds:0xe0000044c2000044
  4092c1:	movabs ds:0x44f0000044d00000,al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	call   0xfffffffff0409373
  4092d1:	add    BYTE PTR [rax],r8b
  4092d4:	adc    BYTE PTR [rbp+0x0],al
  4092d7:	add    al,dh
  4092d9:	movabs ds:0x4658000046500000,al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	clc    
  4092e5:	movabs ds:0x466b000046600000,al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	cld    
  4092f1:	movabs ds:0x51ae000047300000,al
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	.byte 0xdc
  4092fd:	.byte 0xa0
	...

Disassembly of section .xdata:

000000000040a000 <.xdata>:
  40a000:	add    DWORD PTR [rax],eax
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rcx+rax*1],eax
  40a007:	add    BYTE PTR [rdx+rax*2],al
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	add    DWORD PTR [rcx+rax*1],eax
  40a00f:	add    BYTE PTR [rdx+riz*2],al
  40a012:	add    BYTE PTR [rax],al
  40a014:	add    DWORD PTR [rdi],ecx
  40a016:	or     BYTE PTR [rax],al
  40a018:	lgdt   [rbx]
  40a01b:	add    BYTE PTR [rax],cl
  40a01d:	xor    BYTE PTR [rdi],al
  40a01f:	(bad)  
  40a020:	(bad)  
  40a021:	jo     0x40a028
  40a023:	push   rax
  40a024:	add    al,0xc0
  40a026:	add    dl,al
  40a028:	or     DWORD PTR [rcx+rax*1],eax
  40a02b:	add    BYTE PTR [rdx+rax*2],al
  40a02e:	add    BYTE PTR [rax],al
  40a030:	rex
  40a031:	rex.RX add BYTE PTR [rax],r8b
  40a034:	add    DWORD PTR [rax],eax
  40a036:	add    BYTE PTR [rax],al
  40a038:	(bad)  
  40a039:	adc    al,0x0
  40a03b:	add    ah,ch
  40a03d:	adc    al,0x0
  40a03f:	add    BYTE PTR [rax-0x13ffffd0],dh
  40a045:	adc    al,0x0
  40a047:	add    BYTE PTR [rcx],cl
  40a049:	add    al,0x1
  40a04b:	add    BYTE PTR [rdx+rax*2],al
  40a04e:	add    BYTE PTR [rax],al
  40a050:	rex
  40a051:	rex.RX add BYTE PTR [rax],r8b
  40a054:	add    DWORD PTR [rax],eax
  40a056:	add    BYTE PTR [rax],al
  40a058:	add    al,0x15
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	sbb    al,0x15
  40a05e:	add    BYTE PTR [rax],al
  40a060:	mov    al,0x30
  40a062:	add    BYTE PTR [rax],al
  40a064:	sbb    al,0x15
  40a066:	add    BYTE PTR [rax],al
  40a068:	add    DWORD PTR [rax],ecx
  40a06a:	add    eax,DWORD PTR [rax]
  40a06c:	or     BYTE PTR [rcx],al
  40a06e:	and    al,0x0
  40a070:	add    DWORD PTR [rax],esi
  40a072:	add    BYTE PTR [rax],al
  40a074:	add    DWORD PTR [rsi],ecx
  40a076:	or     BYTE PTR [rax],al
  40a078:	(bad)  
  40a079:	xor    cl,BYTE PTR [rdx]
  40a07b:	xor    BYTE PTR [rcx],cl
  40a07d:	(bad)  
  40a07e:	or     BYTE PTR [rax+0x7],dh
  40a081:	push   rax
  40a082:	(bad)  
  40a083:	rol    BYTE PTR [rax+rdx*8],0x2
  40a087:	loopne 0x40a08a
  40a089:	sbb    DWORD PTR [rdx],ecx
  40a08b:	add    BYTE PTR [rcx],bl
  40a08d:	add    ebp,ebp
  40a08f:	add    DWORD PTR [rcx],edx
  40a091:	xor    BYTE PTR [rax],dl
  40a093:	(bad)  
  40a094:	pshufw mm1,QWORD PTR [rsi],0x50
  40a098:	or     eax,0x4d00bc0
  40a09d:	loopne 0x40a0a1
  40a09f:	lock add DWORD PTR [rbx],ebx
  40a0a2:	or     al,0x0
  40a0a4:	sbb    ebp,DWORD PTR [rax-0x77]
  40a0a7:	add    BYTE PTR [rbx],dl
  40a0a9:	add    DWORD PTR [rip+0xb300c01],edx        # 0xb70acb0
  40a0af:	(bad)  
  40a0b0:	or     dh,BYTE PTR [rax+0x9]
  40a0b3:	push   rax
  40a0b4:	or     al,al
  40a0b6:	(bad)  
  40a0b7:	rol    BYTE PTR [rax+riz*8],1
  40a0ba:	add    dh,al
  40a0bc:	add    DWORD PTR [rcx+rax*1],eax
  40a0bf:	add    BYTE PTR [rdx+rax*2],al
  40a0c2:	add    BYTE PTR [rax],al
  40a0c4:	add    DWORD PTR [rsi],eax
  40a0c6:	add    eax,DWORD PTR [rax]
  40a0c8:	(bad)  
  40a0c9:	(bad)  
  40a0cb:	xor    BYTE PTR [rcx],al
  40a0cd:	(bad)  
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	add    DWORD PTR [rsi],eax
  40a0d2:	add    eax,DWORD PTR [rax]
  40a0d4:	(bad)  
  40a0d5:	(bad)  
  40a0d6:	add    dh,BYTE PTR [rax]
  40a0d8:	add    DWORD PTR [rax+0x0],esp
  40a0db:	add    BYTE PTR [rcx],al
  40a0dd:	adc    ecx,DWORD PTR [rdx]
  40a0df:	add    BYTE PTR [rbx],dl
  40a0e1:	add    DWORD PTR [rbx],edi
  40a0e3:	add    BYTE PTR [rax+rsi*1],cl
  40a0e6:	or     esp,DWORD PTR [rax+0xa]
  40a0e9:	jo     0x40a0f4
  40a0eb:	push   rax
  40a0ec:	or     al,al
  40a0ee:	(bad)  
  40a0ef:	rol    BYTE PTR [rax+riz*8],1
  40a0f2:	add    dh,al
  40a0f4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245a0fc
  40a0fa:	add    DWORD PTR [rax],esi
  40a0fc:	add    DWORD PTR [rdx],ecx
  40a0fe:	(bad)  
  40a0ff:	add    BYTE PTR [rdx],cl
  40a101:	xor    al,BYTE PTR [rsi]
  40a103:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a569
  40a109:	push   rax
  40a10a:	add    al,al
  40a10c:	add    DWORD PTR [rsi],eax
  40a10e:	add    eax,DWORD PTR [rax]
  40a110:	(bad)  
  40a111:	rex.X add sil,BYTE PTR [rax]
  40a114:	add    DWORD PTR [rax+0x0],esp
  40a117:	add    BYTE PTR [rcx],al
  40a119:	add    eax,0x52050002
  40a11e:	add    DWORD PTR [rax],esi
  40a120:	add    DWORD PTR [rcx+rax*1],eax
  40a123:	add    BYTE PTR [rdx+rax*2],al
  40a126:	add    BYTE PTR [rax],al
  40a128:	add    DWORD PTR [rcx+rax*1],eax
  40a12b:	add    BYTE PTR [rdx+rax*2],al
  40a12e:	add    BYTE PTR [rax],al
  40a130:	add    DWORD PTR [rsi],eax
  40a132:	add    eax,DWORD PTR [rax]
  40a134:	(bad)  
  40a135:	rex.X add sil,BYTE PTR [rax]
  40a138:	add    DWORD PTR [rax+0x0],esp
  40a13b:	add    BYTE PTR [rcx],al
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rcx],al
  40a141:	add    BYTE PTR [rax],al
  40a143:	add    BYTE PTR [rcx],al
  40a145:	add    BYTE PTR [rax],al
  40a147:	add    BYTE PTR [rcx],al
  40a149:	or     al,BYTE PTR [rsi]
  40a14b:	add    BYTE PTR [rdx],cl
  40a14d:	jb     0x40a155
  40a14f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a5b5
  40a155:	push   rax
  40a156:	add    al,al
  40a158:	add    DWORD PTR [rdx],ecx
  40a15a:	add    eax,0x6d20a05
  40a15f:	add    eax,DWORD PTR [rbx]
  40a161:	xor    BYTE PTR [rdx],al
  40a163:	(bad)  
  40a164:	add    DWORD PTR [rax+0x0],edx
  40a167:	add    BYTE PTR [rcx],al
  40a169:	add    al,0x1
  40a16b:	add    BYTE PTR [rdx+rax*2],al
  40a16e:	add    BYTE PTR [rax],al
  40a170:	add    DWORD PTR [rsi],eax
  40a172:	add    eax,DWORD PTR [rax]
  40a174:	(bad)  
  40a175:	rex.X add sil,BYTE PTR [rax]
  40a178:	add    DWORD PTR [rax+0x0],esp
  40a17b:	add    BYTE PTR [rcx],al
  40a17d:	add    BYTE PTR [rax],al
  40a17f:	add    BYTE PTR [rcx],al
  40a181:	add    al,0x1
  40a183:	add    BYTE PTR [rdx+riz*4],al
  40a186:	add    BYTE PTR [rax],al
  40a188:	add    DWORD PTR [rax],eax
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    DWORD PTR [rsi],edx
  40a18e:	or     DWORD PTR [rax],eax
  40a190:	(bad)  
  40a191:	mov    BYTE PTR [rsi],al
  40a193:	add    BYTE PTR [rax],dl
  40a195:	js     0x40a19c
  40a197:	add    BYTE PTR [rbx],cl
  40a199:	push   0xffffffffe2060004
  40a19e:	add    dh,BYTE PTR [rax]
  40a1a0:	add    DWORD PTR [rax+0x0],esp
  40a1a3:	add    BYTE PTR [rcx],al
  40a1a5:	add    BYTE PTR [rax],al
  40a1a7:	add    BYTE PTR [rcx],al
  40a1a9:	add    BYTE PTR [rax],al
  40a1ab:	add    BYTE PTR [rcx],al
  40a1ad:	add    BYTE PTR [rax],al
  40a1af:	add    BYTE PTR [rcx],al
  40a1b1:	(bad)  
  40a1b2:	add    eax,DWORD PTR [rax]
  40a1b4:	(bad)  
  40a1b5:	(bad)  
  40a1b7:	xor    BYTE PTR [rcx],al
  40a1b9:	(bad)  
  40a1ba:	add    BYTE PTR [rax],al
  40a1bc:	add    DWORD PTR [rdi+rax*1],ecx
  40a1bf:	add    BYTE PTR [rdx+riz*4],cl
  40a1c2:	or     BYTE PTR [rax],dh
  40a1c4:	(bad)  
  40a1c5:	(bad)  
  40a1c6:	(bad)  
  40a1c7:	jo     0x40a1ce
  40a1c9:	push   rax
  40a1ca:	add    al,0xc0
  40a1cc:	add    dl,al
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	add    DWORD PTR [rcx],edx
  40a1d2:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e53e9
  40a1d8:	or     dh,BYTE PTR [rax]
  40a1da:	or     DWORD PTR [rax+0x8],esp
  40a1dd:	jo     0x40a1e6
  40a1df:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220a5b6
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	add    DWORD PTR [rcx+rax*1],eax
  40a1eb:	add    BYTE PTR [rdx+rax*2],al
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	add    DWORD PTR [rdx],ecx
  40a1f2:	(bad)  
  40a1f3:	add    BYTE PTR [rdx],cl
  40a1f5:	xor    al,BYTE PTR [rsi]
  40a1f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a65d
  40a1fd:	push   rax
  40a1fe:	add    al,al
  40a200:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a208
  40a206:	add    DWORD PTR [rax],esi
  40a208:	add    DWORD PTR [rax],ecx
  40a20a:	add    eax,0x4420800
  40a20f:	xor    BYTE PTR [rbx],al
  40a211:	(bad)  
  40a212:	add    dh,BYTE PTR [rax+0x1]
  40a215:	push   rax
  40a216:	add    BYTE PTR [rax],al
  40a218:	add    DWORD PTR [rdi],eax
  40a21a:	add    al,0x0
  40a21c:	(bad)  
  40a21d:	xor    al,BYTE PTR [rbx]
  40a21f:	xor    BYTE PTR [rdx],al
  40a221:	(bad)  
  40a222:	add    DWORD PTR [rax+0x1],esi
  40a225:	add    eax,0x32050002
  40a22a:	add    DWORD PTR [rax],esi
  40a22c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a234
  40a232:	add    DWORD PTR [rax],esi
  40a234:	add    DWORD PTR [rax],eax
  40a236:	add    BYTE PTR [rax],al
  40a238:	add    DWORD PTR [rax],eax
  40a23a:	add    BYTE PTR [rax],al
  40a23c:	add    DWORD PTR [rax],eax
  40a23e:	add    BYTE PTR [rax],al
  40a240:	add    DWORD PTR [rdi],eax
  40a242:	add    al,0x0
  40a244:	(bad)  
  40a245:	xor    al,BYTE PTR [rbx]
  40a247:	xor    BYTE PTR [rdx],al
  40a249:	(bad)  
  40a24a:	add    DWORD PTR [rax+0x1],esi
  40a24d:	(bad)  
  40a24e:	add    eax,DWORD PTR [rax]
  40a250:	(bad)  
  40a251:	rex.X add sil,BYTE PTR [rax]
  40a254:	add    DWORD PTR [rax+0x0],esp
  40a257:	add    BYTE PTR [rcx],al
  40a259:	add    eax,0x32050002
  40a25e:	add    DWORD PTR [rax],esi
  40a260:	add    DWORD PTR [rdi],eax
  40a262:	add    al,0x0
  40a264:	(bad)  
  40a265:	xor    al,BYTE PTR [rbx]
  40a267:	xor    BYTE PTR [rdx],al
  40a269:	(bad)  
  40a26a:	add    DWORD PTR [rax+0x1],esi
  40a26d:	(bad)  
  40a26e:	add    eax,DWORD PTR [rax]
  40a270:	(bad)  
  40a271:	rex.X add sil,BYTE PTR [rax]
  40a274:	add    DWORD PTR [rax+0x0],esp
  40a277:	add    BYTE PTR [rcx],al
  40a279:	(bad)  
  40a27a:	add    eax,DWORD PTR [rax]
  40a27c:	(bad)  
  40a27d:	rex.X add sil,BYTE PTR [rax]
  40a280:	add    DWORD PTR [rax+0x0],esp
  40a283:	add    BYTE PTR [rcx],al
  40a285:	or     BYTE PTR [rip+0x4420800],al        # 0x482aa8b
  40a28b:	xor    BYTE PTR [rbx],al
  40a28d:	(bad)  
  40a28e:	add    dh,BYTE PTR [rax+0x1]
  40a291:	push   rax
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    DWORD PTR [rax],ecx
  40a296:	(bad)  
  40a297:	add    BYTE PTR [rax],cl
  40a299:	xor    BYTE PTR [rdi],al
  40a29b:	(bad)  
  40a29c:	(bad)  
  40a29d:	jo     0x40a2a4
  40a29f:	push   rax
  40a2a0:	add    al,0xc0
  40a2a2:	add    dl,al
  40a2a4:	add    DWORD PTR [rdi],eax
  40a2a6:	add    al,0x0
  40a2a8:	(bad)  
  40a2a9:	push   rdx
  40a2aa:	add    esi,DWORD PTR [rax]
  40a2ac:	add    ah,BYTE PTR [rax+0x1]
  40a2af:	jo     0x40a2b2
  40a2b1:	adc    BYTE PTR [rcx],cl
  40a2b3:	add    BYTE PTR [rax],dl
  40a2b5:	(bad)  
  40a2b6:	or     al,0x30
  40a2b8:	or     esp,DWORD PTR [rax+0xa]
  40a2bb:	jo     0x40a2c6
  40a2bd:	push   rax
  40a2be:	or     al,al
  40a2c0:	(bad)  
  40a2c1:	rol    BYTE PTR [rax+riz*8],1
  40a2c4:	add    dh,al
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	add    DWORD PTR [rax],edx
  40a2ca:	or     DWORD PTR [rax],eax
  40a2cc:	adc    BYTE PTR [rdx+0xc],ah
  40a2cf:	xor    BYTE PTR [rbx],cl
  40a2d1:	(bad)  
  40a2d2:	or     dh,BYTE PTR [rax+0x9]
  40a2d5:	push   rax
  40a2d6:	or     al,al
  40a2d8:	(bad)  
  40a2d9:	rol    BYTE PTR [rax+riz*8],1
  40a2dc:	add    dh,al
  40a2de:	add    BYTE PTR [rax],al
  40a2e0:	add    DWORD PTR [rcx+rax*1],eax
  40a2e3:	add    BYTE PTR [rdx+riz*2],al
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	add    DWORD PTR [rcx+rax*1],eax
  40a2eb:	add    BYTE PTR [rdx+riz*2],al
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	add    DWORD PTR [rcx+rax*1],eax
  40a2f3:	add    BYTE PTR [rdx+riz*2],al
  40a2f6:	add    BYTE PTR [rax],al
  40a2f8:	add    DWORD PTR [rax],eax
  40a2fa:	add    BYTE PTR [rax],al
  40a2fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040b000 <.bss>:
	...

Disassembly of section .idata:

000000000040c000 <.idata>:
  40c000:	push   rax
  40c001:	rol    BYTE PTR [rax],0x0
	...
  40c00c:	push   rsp
  40c00d:	int3   
  40c00e:	add    BYTE PTR [rax],al
  40c010:	push   0x480000c3
  40c015:	rol    DWORD PTR [rax],0x0
	...
  40c020:	ror    ah,0x0
  40c023:	add    BYTE PTR [rax-0x3c],ah
  40c026:	add    BYTE PTR [rax],al
  40c028:	or     dl,al
	...
  40c032:	add    BYTE PTR [rax],al
  40c034:	jl     0x40c003
  40c036:	add    BYTE PTR [rax],al
  40c038:	and    ch,al
	...
  40c04e:	add    BYTE PTR [rax],al
  40c050:	add    dh,0x0
  40c053:	add    BYTE PTR [rax],al
  40c055:	add    BYTE PTR [rax],al
  40c057:	add    BYTE PTR [rsi+rax*8+0x0],cl
  40c05e:	add    BYTE PTR [rax],al
  40c060:	pushf  
  40c061:	mov    BYTE PTR [rax],0x0
  40c064:	add    BYTE PTR [rax],al
  40c066:	add    BYTE PTR [rax],al
  40c068:	lods   al,BYTE PTR ds:[rsi]
  40c069:	mov    BYTE PTR [rax],0x0
  40c06c:	add    BYTE PTR [rax],al
  40c06e:	add    BYTE PTR [rax],al
  40c070:	mov    esp,0xc6
  40c075:	add    BYTE PTR [rax],al
  40c077:	add    al,cl
  40c079:	mov    BYTE PTR [rax],0x0
  40c07c:	add    BYTE PTR [rax],al
  40c07e:	add    BYTE PTR [rax],al
  40c080:	(bad)  
  40c081:	mov    BYTE PTR [rax],0x0
  40c084:	add    BYTE PTR [rax],al
  40c086:	add    BYTE PTR [rax],al
  40c088:	in     al,0xc6
  40c08a:	add    BYTE PTR [rax],al
  40c08c:	add    BYTE PTR [rax],al
  40c08e:	add    BYTE PTR [rax],al
  40c090:	lock mov BYTE PTR [rax],0x0
  40c094:	add    BYTE PTR [rax],al
  40c096:	add    BYTE PTR [rax],al
  40c098:	clc    
  40c099:	mov    BYTE PTR [rax],0x0
  40c09c:	add    BYTE PTR [rax],al
  40c09e:	add    BYTE PTR [rax],al
  40c0a0:	add    al,0xc7
  40c0a2:	add    BYTE PTR [rax],al
  40c0a4:	add    BYTE PTR [rax],al
  40c0a6:	add    BYTE PTR [rax],al
  40c0a8:	adc    bh,al
  40c0aa:	add    BYTE PTR [rax],al
  40c0ac:	add    BYTE PTR [rax],al
  40c0ae:	add    BYTE PTR [rax],al
  40c0b0:	sbb    al,0xc7
  40c0b2:	add    BYTE PTR [rax],al
  40c0b4:	add    BYTE PTR [rax],al
  40c0b6:	add    BYTE PTR [rax],al
  40c0b8:	sub    bh,al
  40c0ba:	add    BYTE PTR [rax],al
  40c0bc:	add    BYTE PTR [rax],al
  40c0be:	add    BYTE PTR [rax],al
  40c0c0:	cmp    bh,al
  40c0c2:	add    BYTE PTR [rax],al
  40c0c4:	add    BYTE PTR [rax],al
  40c0c6:	add    BYTE PTR [rax],al
  40c0c8:	rex.R mov DWORD PTR [rax],0x0
  40c0cf:	add    BYTE PTR [rax-0x39],dl
  40c0d2:	add    BYTE PTR [rax],al
  40c0d4:	add    BYTE PTR [rax],al
  40c0d6:	add    BYTE PTR [rax],al
  40c0d8:	(bad)  
  40c0d9:	mov    DWORD PTR [rax],0x0
  40c0df:	add    BYTE PTR [rax-0x39],dh
  40c0e2:	add    BYTE PTR [rax],al
  40c0e4:	add    BYTE PTR [rax],al
  40c0e6:	add    BYTE PTR [rax],al
  40c0e8:	jl     0x40c0b1
  40c0ea:	add    BYTE PTR [rax],al
  40c0ec:	add    BYTE PTR [rax],al
  40c0ee:	add    BYTE PTR [rax],al
  40c0f0:	mov    bh,al
  40c0f2:	add    BYTE PTR [rax],al
  40c0f4:	add    BYTE PTR [rax],al
  40c0f6:	add    BYTE PTR [rax],al
  40c0f8:	xchg   esp,eax
  40c0f9:	mov    DWORD PTR [rax],0x0
  40c0ff:	add    BYTE PTR [rdi+rax*8+0x0],ah
  40c106:	add    BYTE PTR [rax],al
  40c108:	mov    ah,0xc7
  40c10a:	add    BYTE PTR [rax],al
  40c10c:	add    BYTE PTR [rax],al
  40c10e:	add    BYTE PTR [rax],al
  40c110:	(bad)  
  40c111:	mov    DWORD PTR [rax],0x0
  40c117:	add    al,dl
  40c119:	mov    DWORD PTR [rax],0x0
  40c11f:	add    ah,bl
  40c121:	mov    DWORD PTR [rax],0x0
  40c127:	add    al,dh
  40c129:	mov    DWORD PTR [rax],0x0
  40c12f:	add    al,bh
  40c131:	mov    DWORD PTR [rax],0x0
  40c137:	add    BYTE PTR [rax+rcx*8],al
	...
  40c146:	add    BYTE PTR [rax],al
  40c148:	adc    al,0xc8
  40c14a:	add    BYTE PTR [rax],al
  40c14c:	add    BYTE PTR [rax],al
  40c14e:	add    BYTE PTR [rax],al
  40c150:	sub    al,0xc8
  40c152:	add    BYTE PTR [rax],al
  40c154:	add    BYTE PTR [rax],al
  40c156:	add    BYTE PTR [rax],al
  40c158:	rex.R enter 0x0,0x0
  40c15d:	add    BYTE PTR [rax],al
  40c15f:	add    BYTE PTR [rax-0x38],bl
  40c162:	add    BYTE PTR [rax],al
  40c164:	add    BYTE PTR [rax],al
  40c166:	add    BYTE PTR [rax],al
  40c168:	outs   dx,BYTE PTR ds:[rsi]
  40c169:	enter  0x0,0x0
  40c16d:	add    BYTE PTR [rax],al
  40c16f:	add    BYTE PTR [rax+rcx*8+0x0],al
  40c176:	add    BYTE PTR [rax],al
  40c178:	xchg   esp,eax
  40c179:	enter  0x0,0x0
  40c17d:	add    BYTE PTR [rax],al
  40c17f:	add    BYTE PTR [rsi+0xc8],ah
  40c185:	add    BYTE PTR [rax],al
  40c187:	add    al,al
  40c189:	enter  0x0,0x0
  40c18d:	add    BYTE PTR [rax],al
  40c18f:	add    al,dl
  40c191:	enter  0x0,0x0
  40c195:	add    BYTE PTR [rax],al
  40c197:	add    ah,ch
  40c199:	enter  0x0,0x0
  40c19d:	add    BYTE PTR [rax],al
  40c19f:	add    BYTE PTR [rcx+rcx*8],al
  40c1a2:	add    BYTE PTR [rax],al
  40c1a4:	add    BYTE PTR [rax],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	(bad)  
  40c1a9:	leave  
  40c1aa:	add    BYTE PTR [rax],al
  40c1ac:	add    BYTE PTR [rax],al
  40c1ae:	add    BYTE PTR [rax],al
  40c1b0:	xor    al,0xc9
  40c1b2:	add    BYTE PTR [rax],al
  40c1b4:	add    BYTE PTR [rax],al
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	rex.W leave 
  40c1ba:	add    BYTE PTR [rax],al
  40c1bc:	add    BYTE PTR [rax],al
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	(bad)  
  40c1c1:	leave  
  40c1c2:	add    BYTE PTR [rax],al
  40c1c4:	add    BYTE PTR [rax],al
  40c1c6:	add    BYTE PTR [rax],al
  40c1c8:	jbe    0x40c193
  40c1ca:	add    BYTE PTR [rax],al
  40c1cc:	add    BYTE PTR [rax],al
  40c1ce:	add    BYTE PTR [rax],al
  40c1d0:	xchg   esp,eax
  40c1d1:	leave  
  40c1d2:	add    BYTE PTR [rax],al
  40c1d4:	add    BYTE PTR [rax],al
  40c1d6:	add    BYTE PTR [rax],al
  40c1d8:	pushf  
  40c1d9:	leave  
  40c1da:	add    BYTE PTR [rax],al
  40c1dc:	add    BYTE PTR [rax],al
  40c1de:	add    BYTE PTR [rax],al
  40c1e0:	mov    al,0xc9
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	add    BYTE PTR [rax],al
  40c1e6:	add    BYTE PTR [rax],al
  40c1e8:	mov    esi,0xc9
  40c1ed:	add    BYTE PTR [rax],al
  40c1ef:	add    dl,bl
  40c1f1:	leave  
  40c1f2:	add    BYTE PTR [rax],al
  40c1f4:	add    BYTE PTR [rax],al
  40c1f6:	add    BYTE PTR [rax],al
  40c1f8:	in     al,dx
  40c1f9:	leave  
	...
  40c206:	add    BYTE PTR [rax],al
  40c208:	cld    
  40c209:	leave  
  40c20a:	add    BYTE PTR [rax],al
  40c20c:	add    BYTE PTR [rax],al
  40c20e:	add    BYTE PTR [rax],al
  40c210:	adc    al,0xca
  40c212:	add    BYTE PTR [rax],al
  40c214:	add    BYTE PTR [rax],al
  40c216:	add    BYTE PTR [rax],al
  40c218:	(bad)  
  40c219:	retf   0x0
  40c21c:	add    BYTE PTR [rax],al
  40c21e:	add    BYTE PTR [rax],al
  40c220:	sub    al,0xca
  40c222:	add    BYTE PTR [rax],al
  40c224:	add    BYTE PTR [rax],al
  40c226:	add    BYTE PTR [rax],al
  40c228:	cmp    al,0xca
  40c22a:	add    BYTE PTR [rax],al
  40c22c:	add    BYTE PTR [rax],al
  40c22e:	add    BYTE PTR [rax],al
  40c230:	rex.W retf 0x0
  40c234:	add    BYTE PTR [rax],al
  40c236:	add    BYTE PTR [rax],al
  40c238:	push   rsi
  40c239:	retf   0x0
  40c23c:	add    BYTE PTR [rax],al
  40c23e:	add    BYTE PTR [rax],al
  40c240:	retfw  0x0
  40c244:	add    BYTE PTR [rax],al
  40c246:	add    BYTE PTR [rax],al
  40c248:	js     0x40c214
  40c24a:	add    BYTE PTR [rax],al
  40c24c:	add    BYTE PTR [rax],al
  40c24e:	add    BYTE PTR [rax],al
  40c250:	mov    edx,cs
  40c252:	add    BYTE PTR [rax],al
  40c254:	add    BYTE PTR [rax],al
  40c256:	add    BYTE PTR [rax],al
  40c258:	xchg   esi,eax
  40c259:	retf   0x0
  40c25c:	add    BYTE PTR [rax],al
  40c25e:	add    BYTE PTR [rax],al
  40c260:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c261:	retf   0x0
  40c264:	add    BYTE PTR [rax],al
  40c266:	add    BYTE PTR [rax],al
  40c268:	scas   al,BYTE PTR es:[rdi]
  40c269:	retf   0x0
  40c26c:	add    BYTE PTR [rax],al
  40c26e:	add    BYTE PTR [rax],al
  40c270:	mov    eax,0xca
  40c275:	add    BYTE PTR [rax],al
  40c277:	add    dl,al
  40c279:	retf   0x0
  40c27c:	add    BYTE PTR [rax],al
  40c27e:	add    BYTE PTR [rax],al
  40c280:	(bad)  
  40c281:	retf   0x0
  40c284:	add    BYTE PTR [rax],al
  40c286:	add    BYTE PTR [rax],al
  40c288:	(bad)  
  40c289:	retf   0x0
  40c28c:	add    BYTE PTR [rax],al
  40c28e:	add    BYTE PTR [rax],al
  40c290:	loopne 0x40c25c
  40c292:	add    BYTE PTR [rax],al
  40c294:	add    BYTE PTR [rax],al
  40c296:	add    BYTE PTR [rax],al
  40c298:	(bad)  
  40c299:	retf   0x0
  40c29c:	add    BYTE PTR [rax],al
  40c29e:	add    BYTE PTR [rax],al
  40c2a0:	hlt    
  40c2a1:	retf   0x0
  40c2a4:	add    BYTE PTR [rax],al
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	cld    
  40c2a9:	retf   0x0
  40c2ac:	add    BYTE PTR [rax],al
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	add    al,0xcb
  40c2b2:	add    BYTE PTR [rax],al
  40c2b4:	add    BYTE PTR [rax],al
  40c2b6:	add    BYTE PTR [rax],al
  40c2b8:	(bad)  
  40c2b9:	retf   
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	add    BYTE PTR [rax],al
  40c2be:	add    BYTE PTR [rax],al
  40c2c0:	(bad)  
  40c2c1:	retf   
  40c2c2:	add    BYTE PTR [rax],al
  40c2c4:	add    BYTE PTR [rax],al
  40c2c6:	add    BYTE PTR [rax],al
  40c2c8:	(bad)  
  40c2c9:	retf   
  40c2ca:	add    BYTE PTR [rax],al
  40c2cc:	add    BYTE PTR [rax],al
  40c2ce:	add    BYTE PTR [rax],al
  40c2d0:	sub    bl,cl
  40c2d2:	add    BYTE PTR [rax],al
  40c2d4:	add    BYTE PTR [rax],al
  40c2d6:	add    BYTE PTR [rax],al
  40c2d8:	xor    bl,cl
  40c2da:	add    BYTE PTR [rax],al
  40c2dc:	add    BYTE PTR [rax],al
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	cmp    bl,cl
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	add    BYTE PTR [rax],al
  40c2e6:	add    BYTE PTR [rax],al
  40c2e8:	rex.X retf 
  40c2ea:	add    BYTE PTR [rax],al
  40c2ec:	add    BYTE PTR [rax],al
  40c2ee:	add    BYTE PTR [rax],al
  40c2f0:	rex.WR retf 
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	add    BYTE PTR [rax],al
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	push   rsi
  40c2f9:	retf   
  40c2fa:	add    BYTE PTR [rax],al
  40c2fc:	add    BYTE PTR [rax],al
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	(bad)  
  40c301:	retf   
  40c302:	add    BYTE PTR [rax],al
  40c304:	add    BYTE PTR [rax],al
  40c306:	add    BYTE PTR [rax],al
  40c308:	push   0xffffffffffffffcb
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	add    BYTE PTR [rax],al
  40c30e:	add    BYTE PTR [rax],al
  40c310:	je     0x40c2dd
  40c312:	add    BYTE PTR [rax],al
  40c314:	add    BYTE PTR [rax],al
  40c316:	add    BYTE PTR [rax],al
  40c318:	jle    0x40c2e5
  40c31a:	add    BYTE PTR [rax],al
  40c31c:	add    BYTE PTR [rax],al
  40c31e:	add    BYTE PTR [rax],al
  40c320:	xchg   bl,cl
  40c322:	add    BYTE PTR [rax],al
  40c324:	add    BYTE PTR [rax],al
  40c326:	add    BYTE PTR [rax],al
  40c328:	xchg   edx,eax
  40c329:	retf   
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	add    BYTE PTR [rax],al
  40c32e:	add    BYTE PTR [rax],al
  40c330:	pushf  
  40c331:	retf   
  40c332:	add    BYTE PTR [rax],al
  40c334:	add    BYTE PTR [rax],al
  40c336:	add    BYTE PTR [rax],al
  40c338:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c339:	retf   
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	add    BYTE PTR [rax],al
  40c33e:	add    BYTE PTR [rax],al
  40c340:	mov    al,0xcb
  40c342:	add    BYTE PTR [rax],al
  40c344:	add    BYTE PTR [rax],al
  40c346:	add    BYTE PTR [rax],al
  40c348:	mov    edx,0xcb
  40c34d:	add    BYTE PTR [rax],al
  40c34f:	add    ah,al
  40c351:	retf   
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    BYTE PTR [rax],al
  40c356:	add    BYTE PTR [rax],al
  40c358:	(bad)  
  40c359:	retf   
	...
  40c366:	add    BYTE PTR [rax],al
  40c368:	add    dh,0x0
  40c36b:	add    BYTE PTR [rax],al
  40c36d:	add    BYTE PTR [rax],al
  40c36f:	add    BYTE PTR [rsi+rax*8+0x0],cl
  40c376:	add    BYTE PTR [rax],al
  40c378:	pushf  
  40c379:	mov    BYTE PTR [rax],0x0
  40c37c:	add    BYTE PTR [rax],al
  40c37e:	add    BYTE PTR [rax],al
  40c380:	lods   al,BYTE PTR ds:[rsi]
  40c381:	mov    BYTE PTR [rax],0x0
  40c384:	add    BYTE PTR [rax],al
  40c386:	add    BYTE PTR [rax],al
  40c388:	mov    esp,0xc6
  40c38d:	add    BYTE PTR [rax],al
  40c38f:	add    al,cl
  40c391:	mov    BYTE PTR [rax],0x0
  40c394:	add    BYTE PTR [rax],al
  40c396:	add    BYTE PTR [rax],al
  40c398:	(bad)  
  40c399:	mov    BYTE PTR [rax],0x0
  40c39c:	add    BYTE PTR [rax],al
  40c39e:	add    BYTE PTR [rax],al
  40c3a0:	in     al,0xc6
  40c3a2:	add    BYTE PTR [rax],al
  40c3a4:	add    BYTE PTR [rax],al
  40c3a6:	add    BYTE PTR [rax],al
  40c3a8:	lock mov BYTE PTR [rax],0x0
  40c3ac:	add    BYTE PTR [rax],al
  40c3ae:	add    BYTE PTR [rax],al
  40c3b0:	clc    
  40c3b1:	mov    BYTE PTR [rax],0x0
  40c3b4:	add    BYTE PTR [rax],al
  40c3b6:	add    BYTE PTR [rax],al
  40c3b8:	add    al,0xc7
  40c3ba:	add    BYTE PTR [rax],al
  40c3bc:	add    BYTE PTR [rax],al
  40c3be:	add    BYTE PTR [rax],al
  40c3c0:	adc    bh,al
  40c3c2:	add    BYTE PTR [rax],al
  40c3c4:	add    BYTE PTR [rax],al
  40c3c6:	add    BYTE PTR [rax],al
  40c3c8:	sbb    al,0xc7
  40c3ca:	add    BYTE PTR [rax],al
  40c3cc:	add    BYTE PTR [rax],al
  40c3ce:	add    BYTE PTR [rax],al
  40c3d0:	sub    bh,al
  40c3d2:	add    BYTE PTR [rax],al
  40c3d4:	add    BYTE PTR [rax],al
  40c3d6:	add    BYTE PTR [rax],al
  40c3d8:	cmp    bh,al
  40c3da:	add    BYTE PTR [rax],al
  40c3dc:	add    BYTE PTR [rax],al
  40c3de:	add    BYTE PTR [rax],al
  40c3e0:	rex.R mov DWORD PTR [rax],0x0
  40c3e7:	add    BYTE PTR [rax-0x39],dl
  40c3ea:	add    BYTE PTR [rax],al
  40c3ec:	add    BYTE PTR [rax],al
  40c3ee:	add    BYTE PTR [rax],al
  40c3f0:	(bad)  
  40c3f1:	mov    DWORD PTR [rax],0x0
  40c3f7:	add    BYTE PTR [rax-0x39],dh
  40c3fa:	add    BYTE PTR [rax],al
  40c3fc:	add    BYTE PTR [rax],al
  40c3fe:	add    BYTE PTR [rax],al
  40c400:	jl     0x40c3c9
  40c402:	add    BYTE PTR [rax],al
  40c404:	add    BYTE PTR [rax],al
  40c406:	add    BYTE PTR [rax],al
  40c408:	mov    bh,al
  40c40a:	add    BYTE PTR [rax],al
  40c40c:	add    BYTE PTR [rax],al
  40c40e:	add    BYTE PTR [rax],al
  40c410:	xchg   esp,eax
  40c411:	mov    DWORD PTR [rax],0x0
  40c417:	add    BYTE PTR [rdi+rax*8+0x0],ah
  40c41e:	add    BYTE PTR [rax],al
  40c420:	mov    ah,0xc7
  40c422:	add    BYTE PTR [rax],al
  40c424:	add    BYTE PTR [rax],al
  40c426:	add    BYTE PTR [rax],al
  40c428:	(bad)  
  40c429:	mov    DWORD PTR [rax],0x0
  40c42f:	add    al,dl
  40c431:	mov    DWORD PTR [rax],0x0
  40c437:	add    ah,bl
  40c439:	mov    DWORD PTR [rax],0x0
  40c43f:	add    al,dh
  40c441:	mov    DWORD PTR [rax],0x0
  40c447:	add    al,bh
  40c449:	mov    DWORD PTR [rax],0x0
  40c44f:	add    BYTE PTR [rax+rcx*8],al
	...
  40c45e:	add    BYTE PTR [rax],al
  40c460:	adc    al,0xc8
  40c462:	add    BYTE PTR [rax],al
  40c464:	add    BYTE PTR [rax],al
  40c466:	add    BYTE PTR [rax],al
  40c468:	sub    al,0xc8
  40c46a:	add    BYTE PTR [rax],al
  40c46c:	add    BYTE PTR [rax],al
  40c46e:	add    BYTE PTR [rax],al
  40c470:	rex.R enter 0x0,0x0
  40c475:	add    BYTE PTR [rax],al
  40c477:	add    BYTE PTR [rax-0x38],bl
  40c47a:	add    BYTE PTR [rax],al
  40c47c:	add    BYTE PTR [rax],al
  40c47e:	add    BYTE PTR [rax],al
  40c480:	outs   dx,BYTE PTR ds:[rsi]
  40c481:	enter  0x0,0x0
  40c485:	add    BYTE PTR [rax],al
  40c487:	add    BYTE PTR [rax+rcx*8+0x0],al
  40c48e:	add    BYTE PTR [rax],al
  40c490:	xchg   esp,eax
  40c491:	enter  0x0,0x0
  40c495:	add    BYTE PTR [rax],al
  40c497:	add    BYTE PTR [rsi+0xc8],ah
  40c49d:	add    BYTE PTR [rax],al
  40c49f:	add    al,al
  40c4a1:	enter  0x0,0x0
  40c4a5:	add    BYTE PTR [rax],al
  40c4a7:	add    al,dl
  40c4a9:	enter  0x0,0x0
  40c4ad:	add    BYTE PTR [rax],al
  40c4af:	add    ah,ch
  40c4b1:	enter  0x0,0x0
  40c4b5:	add    BYTE PTR [rax],al
  40c4b7:	add    BYTE PTR [rcx+rcx*8],al
  40c4ba:	add    BYTE PTR [rax],al
  40c4bc:	add    BYTE PTR [rax],al
  40c4be:	add    BYTE PTR [rax],al
  40c4c0:	(bad)  
  40c4c1:	leave  
  40c4c2:	add    BYTE PTR [rax],al
  40c4c4:	add    BYTE PTR [rax],al
  40c4c6:	add    BYTE PTR [rax],al
  40c4c8:	xor    al,0xc9
  40c4ca:	add    BYTE PTR [rax],al
  40c4cc:	add    BYTE PTR [rax],al
  40c4ce:	add    BYTE PTR [rax],al
  40c4d0:	rex.W leave 
  40c4d2:	add    BYTE PTR [rax],al
  40c4d4:	add    BYTE PTR [rax],al
  40c4d6:	add    BYTE PTR [rax],al
  40c4d8:	(bad)  
  40c4d9:	leave  
  40c4da:	add    BYTE PTR [rax],al
  40c4dc:	add    BYTE PTR [rax],al
  40c4de:	add    BYTE PTR [rax],al
  40c4e0:	jbe    0x40c4ab
  40c4e2:	add    BYTE PTR [rax],al
  40c4e4:	add    BYTE PTR [rax],al
  40c4e6:	add    BYTE PTR [rax],al
  40c4e8:	xchg   esp,eax
  40c4e9:	leave  
  40c4ea:	add    BYTE PTR [rax],al
  40c4ec:	add    BYTE PTR [rax],al
  40c4ee:	add    BYTE PTR [rax],al
  40c4f0:	pushf  
  40c4f1:	leave  
  40c4f2:	add    BYTE PTR [rax],al
  40c4f4:	add    BYTE PTR [rax],al
  40c4f6:	add    BYTE PTR [rax],al
  40c4f8:	mov    al,0xc9
  40c4fa:	add    BYTE PTR [rax],al
  40c4fc:	add    BYTE PTR [rax],al
  40c4fe:	add    BYTE PTR [rax],al
  40c500:	mov    esi,0xc9
  40c505:	add    BYTE PTR [rax],al
  40c507:	add    dl,bl
  40c509:	leave  
  40c50a:	add    BYTE PTR [rax],al
  40c50c:	add    BYTE PTR [rax],al
  40c50e:	add    BYTE PTR [rax],al
  40c510:	in     al,dx
  40c511:	leave  
	...
  40c51e:	add    BYTE PTR [rax],al
  40c520:	cld    
  40c521:	leave  
  40c522:	add    BYTE PTR [rax],al
  40c524:	add    BYTE PTR [rax],al
  40c526:	add    BYTE PTR [rax],al
  40c528:	adc    al,0xca
  40c52a:	add    BYTE PTR [rax],al
  40c52c:	add    BYTE PTR [rax],al
  40c52e:	add    BYTE PTR [rax],al
  40c530:	(bad)  
  40c531:	retf   0x0
  40c534:	add    BYTE PTR [rax],al
  40c536:	add    BYTE PTR [rax],al
  40c538:	sub    al,0xca
  40c53a:	add    BYTE PTR [rax],al
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	cmp    al,0xca
  40c542:	add    BYTE PTR [rax],al
  40c544:	add    BYTE PTR [rax],al
  40c546:	add    BYTE PTR [rax],al
  40c548:	rex.W retf 0x0
  40c54c:	add    BYTE PTR [rax],al
  40c54e:	add    BYTE PTR [rax],al
  40c550:	push   rsi
  40c551:	retf   0x0
  40c554:	add    BYTE PTR [rax],al
  40c556:	add    BYTE PTR [rax],al
  40c558:	retfw  0x0
  40c55c:	add    BYTE PTR [rax],al
  40c55e:	add    BYTE PTR [rax],al
  40c560:	js     0x40c52c
  40c562:	add    BYTE PTR [rax],al
  40c564:	add    BYTE PTR [rax],al
  40c566:	add    BYTE PTR [rax],al
  40c568:	mov    edx,cs
  40c56a:	add    BYTE PTR [rax],al
  40c56c:	add    BYTE PTR [rax],al
  40c56e:	add    BYTE PTR [rax],al
  40c570:	xchg   esi,eax
  40c571:	retf   0x0
  40c574:	add    BYTE PTR [rax],al
  40c576:	add    BYTE PTR [rax],al
  40c578:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c579:	retf   0x0
  40c57c:	add    BYTE PTR [rax],al
  40c57e:	add    BYTE PTR [rax],al
  40c580:	scas   al,BYTE PTR es:[rdi]
  40c581:	retf   0x0
  40c584:	add    BYTE PTR [rax],al
  40c586:	add    BYTE PTR [rax],al
  40c588:	mov    eax,0xca
  40c58d:	add    BYTE PTR [rax],al
  40c58f:	add    dl,al
  40c591:	retf   0x0
  40c594:	add    BYTE PTR [rax],al
  40c596:	add    BYTE PTR [rax],al
  40c598:	(bad)  
  40c599:	retf   0x0
  40c59c:	add    BYTE PTR [rax],al
  40c59e:	add    BYTE PTR [rax],al
  40c5a0:	(bad)  
  40c5a1:	retf   0x0
  40c5a4:	add    BYTE PTR [rax],al
  40c5a6:	add    BYTE PTR [rax],al
  40c5a8:	loopne 0x40c574
  40c5aa:	add    BYTE PTR [rax],al
  40c5ac:	add    BYTE PTR [rax],al
  40c5ae:	add    BYTE PTR [rax],al
  40c5b0:	(bad)  
  40c5b1:	retf   0x0
  40c5b4:	add    BYTE PTR [rax],al
  40c5b6:	add    BYTE PTR [rax],al
  40c5b8:	hlt    
  40c5b9:	retf   0x0
  40c5bc:	add    BYTE PTR [rax],al
  40c5be:	add    BYTE PTR [rax],al
  40c5c0:	cld    
  40c5c1:	retf   0x0
  40c5c4:	add    BYTE PTR [rax],al
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	add    al,0xcb
  40c5ca:	add    BYTE PTR [rax],al
  40c5cc:	add    BYTE PTR [rax],al
  40c5ce:	add    BYTE PTR [rax],al
  40c5d0:	(bad)  
  40c5d1:	retf   
  40c5d2:	add    BYTE PTR [rax],al
  40c5d4:	add    BYTE PTR [rax],al
  40c5d6:	add    BYTE PTR [rax],al
  40c5d8:	(bad)  
  40c5d9:	retf   
  40c5da:	add    BYTE PTR [rax],al
  40c5dc:	add    BYTE PTR [rax],al
  40c5de:	add    BYTE PTR [rax],al
  40c5e0:	(bad)  
  40c5e1:	retf   
  40c5e2:	add    BYTE PTR [rax],al
  40c5e4:	add    BYTE PTR [rax],al
  40c5e6:	add    BYTE PTR [rax],al
  40c5e8:	sub    bl,cl
  40c5ea:	add    BYTE PTR [rax],al
  40c5ec:	add    BYTE PTR [rax],al
  40c5ee:	add    BYTE PTR [rax],al
  40c5f0:	xor    bl,cl
  40c5f2:	add    BYTE PTR [rax],al
  40c5f4:	add    BYTE PTR [rax],al
  40c5f6:	add    BYTE PTR [rax],al
  40c5f8:	cmp    bl,cl
  40c5fa:	add    BYTE PTR [rax],al
  40c5fc:	add    BYTE PTR [rax],al
  40c5fe:	add    BYTE PTR [rax],al
  40c600:	rex.X retf 
  40c602:	add    BYTE PTR [rax],al
  40c604:	add    BYTE PTR [rax],al
  40c606:	add    BYTE PTR [rax],al
  40c608:	rex.WR retf 
  40c60a:	add    BYTE PTR [rax],al
  40c60c:	add    BYTE PTR [rax],al
  40c60e:	add    BYTE PTR [rax],al
  40c610:	push   rsi
  40c611:	retf   
  40c612:	add    BYTE PTR [rax],al
  40c614:	add    BYTE PTR [rax],al
  40c616:	add    BYTE PTR [rax],al
  40c618:	(bad)  
  40c619:	retf   
  40c61a:	add    BYTE PTR [rax],al
  40c61c:	add    BYTE PTR [rax],al
  40c61e:	add    BYTE PTR [rax],al
  40c620:	push   0xffffffffffffffcb
  40c622:	add    BYTE PTR [rax],al
  40c624:	add    BYTE PTR [rax],al
  40c626:	add    BYTE PTR [rax],al
  40c628:	je     0x40c5f5
  40c62a:	add    BYTE PTR [rax],al
  40c62c:	add    BYTE PTR [rax],al
  40c62e:	add    BYTE PTR [rax],al
  40c630:	jle    0x40c5fd
  40c632:	add    BYTE PTR [rax],al
  40c634:	add    BYTE PTR [rax],al
  40c636:	add    BYTE PTR [rax],al
  40c638:	xchg   bl,cl
  40c63a:	add    BYTE PTR [rax],al
  40c63c:	add    BYTE PTR [rax],al
  40c63e:	add    BYTE PTR [rax],al
  40c640:	xchg   edx,eax
  40c641:	retf   
  40c642:	add    BYTE PTR [rax],al
  40c644:	add    BYTE PTR [rax],al
  40c646:	add    BYTE PTR [rax],al
  40c648:	pushf  
  40c649:	retf   
  40c64a:	add    BYTE PTR [rax],al
  40c64c:	add    BYTE PTR [rax],al
  40c64e:	add    BYTE PTR [rax],al
  40c650:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c651:	retf   
  40c652:	add    BYTE PTR [rax],al
  40c654:	add    BYTE PTR [rax],al
  40c656:	add    BYTE PTR [rax],al
  40c658:	mov    al,0xcb
  40c65a:	add    BYTE PTR [rax],al
  40c65c:	add    BYTE PTR [rax],al
  40c65e:	add    BYTE PTR [rax],al
  40c660:	mov    edx,0xcb
  40c665:	add    BYTE PTR [rax],al
  40c667:	add    ah,al
  40c669:	retf   
  40c66a:	add    BYTE PTR [rax],al
  40c66c:	add    BYTE PTR [rax],al
  40c66e:	add    BYTE PTR [rax],al
  40c670:	(bad)  
  40c671:	retf   
	...
  40c682:	(bad)  
  40c684:	jo     0x40c6e5
  40c686:	(bad)
  40c68b:	add    BYTE PTR [rax+rax*1],al
  40c68e:	(bad)  
  40c690:	jo     0x40c6f1
  40c692:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40c695:	ins    BYTE PTR es:[rdi],dx
  40c696:	outs   dx,BYTE PTR gs:[rsi]
  40c698:	add    BYTE PTR [rax],al
  40c69a:	add    BYTE PTR [rax],al
  40c69c:	add    eax,0x70636200
  40c6a1:	pop    rdi
  40c6a2:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40c6a5:	jo     0x40c71b
  40c6a7:	jb     0x40c6a9
  40c6a9:	add    BYTE PTR [rax],al
  40c6ab:	add    BYTE PTR [rdi],al
  40c6ad:	add    BYTE PTR [rdx+0x63],ah
  40c6b0:	jo     0x40c711
  40c6b2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c6b5:	je     0x40c729
  40c6b7:	outs   dx,DWORD PTR ds:[rsi]
  40c6b8:	ins    BYTE PTR es:[rdi],dx
  40c6b9:	add    BYTE PTR [rax],al
  40c6bb:	add    BYTE PTR [rax],cl
  40c6bd:	add    BYTE PTR [rdx+0x63],ah
  40c6c0:	jo     0x40c721
  40c6c2:	outs   dx,DWORD PTR fs:[rsi]
  40c6c4:	outs   dx,BYTE PTR ds:[rsi]
  40c6c5:	add    BYTE PTR gs:[rax],al
  40c6c8:	or     al,0x0
  40c6ca:	(bad)  
  40c6cc:	jo     0x40c72d
  40c6ce:	imul   ebp,DWORD PTR [rsi+0x69],0xf000074
  40c6d5:	add    BYTE PTR [rdx+0x63],ah
  40c6d8:	jo     0x40c739
  40c6da:	jae    0x40c741
  40c6dc:	outs   dx,BYTE PTR ds:[rsi]
  40c6dd:	fs jb  0x40c74f
  40c6e0:	ja     0x40c6e2
  40c6e2:	add    BYTE PTR [rax],al
  40c6e4:	(bad)  
  40c6e5:	add    BYTE PTR [rdx+riz*2+0x63],ah
  40c6e9:	ins    BYTE PTR es:[rdi],dx
  40c6ea:	outs   dx,DWORD PTR ds:[rsi]
  40c6eb:	jae    0x40c752
  40c6ed:	add    BYTE PTR [rax],al
  40c6ef:	add    BYTE PTR [rdx],ah
  40c6f1:	add    BYTE PTR [rdx+riz*2+0x63],ah
  40c6f5:	ins    DWORD PTR es:[rdi],dx
  40c6f6:	add    BYTE PTR fs:[rip+0x63626400],ah        # 0x63a32afd
  40c6fd:	outs   dx,DWORD PTR ds:[rsi]
  40c6fe:	ins    BYTE PTR es:[rdi],dx
  40c6ff:	ins    BYTE PTR es:[rdi],dx
  40c700:	outs   dx,BYTE PTR gs:[rsi]
  40c702:	add    BYTE PTR [rax],al
  40c704:	sub    BYTE PTR [rax],al
  40c706:	(bad)
  40c70c:	jns    0x40c77e
  40c70e:	add    BYTE PTR gs:[rax],dh
  40c711:	add    BYTE PTR [rdx+riz*2+0x64],ah
  40c715:	(bad)  
  40c716:	je     0x40c779
  40c718:	add    BYTE PTR [rax],al
  40c71a:	add    BYTE PTR [rax],al
  40c71c:	xor    eax,DWORD PTR [rax]
  40c71e:	fs (bad) 
  40c720:	fs (bad) 
  40c722:	je     0x40c790
  40c724:	outs   dx,BYTE PTR gs:[rsi]
  40c726:	add    BYTE PTR [rax],al
  40c728:	xor    eax,0x65626400
  40c72d:	jb     0x40c7a1
  40c72f:	push   0x6c646e61
  40c734:	add    BYTE PTR gs:[rax],al
  40c737:	add    BYTE PTR [rdx+0x0],al
  40c73a:	fs (bad) 
  40c73c:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40c743:	add    BYTE PTR [rcx+0x0],cl
  40c746:	fs (bad) 
  40c748:	ins    BYTE PTR es:[rdi],dx
  40c749:	outs   dx,DWORD PTR ds:[rsi]
  40c74a:	imul   ebp,DWORD PTR [esi+0x0],0x4a0000
  40c752:	fs (bad) 
  40c754:	ins    BYTE PTR es:[rdi],dx
  40c755:	outs   dx,DWORD PTR ds:[rsi]
  40c756:	imul   ebp,DWORD PTR [esi+0x66],0x656572
  40c75e:	add    BYTE PTR [rax],al
  40c760:	pop    rsp
  40c761:	add    BYTE PTR [rdx+riz*2+0x6d],ah
  40c765:	jae    0x40c7ce
  40c767:	push   0x6c646e61
  40c76c:	add    BYTE PTR gs:[rax],al
  40c76f:	add    BYTE PTR [rsi+0x0],bl
  40c772:	fs (bad) 
  40c774:	outs   dx,BYTE PTR ds:[rsi]
  40c775:	gs js  0x40c7ec
  40c778:	jb     0x40c7e9
  40c77a:	ja     0x40c77c
  40c77c:	(bad)  
  40c77d:	add    BYTE PTR [rdx+riz*2+0x6e],ah
  40c781:	jne    0x40c7f0
  40c783:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40c786:	jae    0x40c788
  40c788:	jb     0x40c78a
  40c78a:	(bad)
  40c790:	ins    BYTE PTR es:[rdi],dx
  40c791:	je     0x40c806
  40c793:	add    BYTE PTR [rbx+0x73626400],al
  40c799:	gs je  0x40c808
  40c79c:	(bad)  
  40c79d:	outs   dx,DWORD PTR ds:[rsi]
  40c79e:	outs   dx,DWORD PTR ds:[rsi]
  40c79f:	ins    BYTE PTR es:[rdi],dx
  40c7a0:	add    BYTE PTR [rax],al
  40c7a2:	add    BYTE PTR [rax],al
  40c7a4:	test   BYTE PTR [rax],al
  40c7a6:	(bad)
  40c7ac:	ins    BYTE PTR es:[rdi],dx
  40c7ad:	outs   dx,DWORD PTR ds:[rsi]
  40c7ae:	outs   dx,BYTE PTR ds:[rsi]
  40c7af:	add    BYTE PTR [eax],al
  40c7b2:	add    BYTE PTR [rax],al
  40c7b4:	test   DWORD PTR [rax],eax
  40c7b6:	(bad)
  40c7bc:	outs   dx,BYTE PTR ds:[rsi]
  40c7bd:	(bad)  
  40c7be:	ins    DWORD PTR es:[rdi],dx
  40c7bf:	add    BYTE PTR gs:[rax],al
  40c7c2:	add    BYTE PTR [rax],al
  40c7c4:	mov    al,BYTE PTR [rax]
  40c7c6:	(bad)
  40c7cc:	jo     0x40c842
  40c7ce:	add    BYTE PTR [rax],al
  40c7d0:	xchg   esp,eax
  40c7d1:	add    BYTE PTR [rdx+riz*2+0x73],ah
  40c7d5:	jno    0x40c843
  40c7d7:	gs js  0x40c83f
  40c7da:	movsxd eax,DWORD PTR [rax]
  40c7dc:	(bad)  
  40c7dd:	add    BYTE PTR [rdx+riz*2+0x74],ah
  40c7e1:	(bad)  
  40c7e2:	(bad)  
  40c7e3:	ins    BYTE PTR es:[rdi],dx
  40c7e4:	movsxd ebp,DWORD PTR gs:[rdi+0x6c]
  40c7e8:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
  40c7ef:	add    BYTE PTR [rsi+0x75626400],bl
  40c7f5:	jae    0x40c85c
  40c7f7:	add    BYTE PTR [rbx+0x73647400],ah
  40c7fd:	fs (bad) 
  40c7ff:	outs   dx,DWORD PTR ds:[rsi]
  40c800:	jo     0x40c867
  40c802:	outs   dx,BYTE PTR ds:[rsi]
  40c803:	add    BYTE PTR [rax+rax*1+0x64736474],ah
  40c80a:	jne    0x40c879
  40c80c:	jo     0x40c86d
  40c80e:	outs   dx,DWORD PTR ds:[rsi]
  40c80f:	jo     0x40c876
  40c811:	outs   dx,BYTE PTR ds:[rsi]
  40c812:	add    BYTE PTR [rax],al
  40c814:	fadd   DWORD PTR [rax]
  40c816:	rex.R
  40c817:	gs ins BYTE PTR es:[rdi],dx
  40c819:	gs je  0x40c881
  40c81c:	rex.XB jb 0x40c888
  40c81f:	je     0x40c88a
  40c821:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c824:	push   rbx
  40c825:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c82a:	outs   dx,BYTE PTR ds:[rsi]
  40c82b:	add    al,bh
  40c82d:	add    BYTE PTR [rbp+0x6e],al
  40c830:	je     0x40c897
  40c832:	jb     0x40c877
  40c834:	jb     0x40c89f
  40c836:	je     0x40c8a1
  40c838:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c83b:	push   rbx
  40c83c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c841:	outs   dx,BYTE PTR ds:[rsi]
  40c842:	add    BYTE PTR [rax],al
  40c844:	int    0x1
  40c846:	rex.RXB
  40c847:	gs je  0x40c88d
  40c84a:	jne    0x40c8be
  40c84c:	jb     0x40c8b3
  40c84e:	outs   dx,BYTE PTR ds:[rsi]
  40c84f:	je     0x40c8a1
  40c851:	jb     0x40c8c2
  40c853:	movsxd esp,DWORD PTR [rbp+0x73]
  40c856:	jae    0x40c858
  40c858:	(bad)  
  40c859:	add    DWORD PTR [rdi+0x65],eax
  40c85c:	je     0x40c8a1
  40c85e:	jne    0x40c8d2
  40c860:	jb     0x40c8c7
  40c862:	outs   dx,BYTE PTR ds:[rsi]
  40c863:	je     0x40c8b5
  40c865:	jb     0x40c8d6
  40c867:	movsxd esp,DWORD PTR [rbp+0x73]
  40c86a:	jae    0x40c8b5
  40c86c:	fs add dl,dl
  40c86f:	add    DWORD PTR [rdi+0x65],eax
  40c872:	je     0x40c8b7
  40c874:	jne    0x40c8e8
  40c876:	jb     0x40c8dd
  40c878:	outs   dx,BYTE PTR ds:[rsi]
  40c879:	je     0x40c8cf
  40c87b:	push   0x64616572
  40c880:	rex.WB
  40c881:	add    BYTE PTR fs:[rax],al
  40c884:	adc    BYTE PTR [rdx],al
  40c886:	rex.RXB
  40c887:	gs je  0x40c8d6
  40c88a:	(bad)  
  40c88b:	jae    0x40c901
  40c88d:	rex.RB jb 0x40c902
  40c890:	outs   dx,DWORD PTR ds:[rsi]
  40c891:	jb     0x40c893
  40c893:	add    BYTE PTR [rbx+0x2],dh
  40c896:	rex.RXB
  40c897:	gs je  0x40c8ed
  40c89a:	je     0x40c8fd
  40c89c:	jb     0x40c912
  40c89e:	jne    0x40c910
  40c8a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40c8a2:	outs   dx,WORD PTR ds:[rsi]
  40c8a4:	add    BYTE PTR [r10+0x74654702],cl
  40c8ab:	push   rbx
  40c8ac:	jns    0x40c921
  40c8ae:	je     0x40c915
  40c8b0:	ins    DWORD PTR es:[rdi],dx
  40c8b1:	push   rsp
  40c8b2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40c8b9:	ins    BYTE PTR es:[rdi],dx
  40c8ba:	gs push rsp
  40c8bc:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40c8c3:	gs je  0x40c91a
  40c8c6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40c8cd:	je     0x40c8cf
  40c8cf:	add    cl,bh
  40c8d1:	add    cl,BYTE PTR [rcx+0x6e]
  40c8d4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40c8dc:	rex.XB jb 0x40c948
  40c8df:	je     0x40c94a
  40c8e1:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c8e4:	push   rbx
  40c8e5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c8ea:	outs   dx,BYTE PTR ds:[rsi]
  40c8eb:	add    BYTE PTR [rbx+0x3],cl
  40c8ee:	rex.WR
  40c8ef:	gs (bad) 
  40c8f1:	jbe    0x40c958
  40c8f3:	rex.XB jb 0x40c95f
  40c8f6:	je     0x40c961
  40c8f8:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c8fb:	push   rbx
  40c8fc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c901:	outs   dx,BYTE PTR ds:[rsi]
  40c902:	add    BYTE PTR [rax],al
  40c904:	mov    ebx,0x65755103
  40c909:	jb     0x40c984
  40c90b:	push   rax
  40c90c:	gs jb  0x40c975
  40c90f:	outs   dx,DWORD PTR ds:[rsi]
  40c910:	jb     0x40c97f
  40c912:	(bad)  
  40c913:	outs   dx,BYTE PTR ds:[rsi]
  40c914:	movsxd esp,DWORD PTR [rbp+0x43]
  40c917:	outs   dx,DWORD PTR ds:[rsi]
  40c918:	jne    0x40c988
  40c91a:	je     0x40c981
  40c91c:	jb     0x40c91e
  40c91e:	add    DWORD PTR [rdx+rdx*2],eax
  40c921:	je     0x40c98f
  40c923:	rex.B
  40c924:	fs fs rex.RX jne 0x40c997
  40c929:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c92d:	outs   dx,BYTE PTR ds:[rsi]
  40c92e:	push   rsp
  40c92f:	(bad)  
  40c930:	(bad)  
  40c931:	ins    BYTE PTR es:[rdi],dx
  40c932:	add    BYTE PTR gs:[rdx],al
  40c935:	add    al,0x52
  40c937:	je     0x40c9a5
  40c939:	rex.XB (bad) 
  40c93b:	jo     0x40c9b1
  40c93d:	jne    0x40c9b1
  40c93f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40c942:	outs   dx,BYTE PTR ds:[rsi]
  40c943:	je     0x40c9aa
  40c945:	js     0x40c9bb
  40c947:	add    BYTE PTR [rcx],cl
  40c949:	add    al,0x52
  40c94b:	je     0x40c9b9
  40c94d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40c94f:	outs   dx,DWORD PTR ds:[rsi]
  40c950:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40c954:	jne    0x40c9c4
  40c956:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c95a:	outs   dx,BYTE PTR ds:[rsi]
  40c95b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40c95d:	je     0x40c9d1
  40c95f:	jns    0x40c961
  40c961:	add    BYTE PTR [rax],dl
  40c963:	add    al,0x52
  40c965:	je     0x40c9d3
  40c967:	push   rsi
  40c968:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40c96f:	outs   dx,BYTE PTR ds:[rsi]
  40c970:	ja     0x40c9db
  40c972:	outs   dx,BYTE PTR ds:[rsi]
  40c973:	add    BYTE PTR fs:[rax],al
  40c976:	lahf   
  40c977:	add    al,0x53
  40c979:	gs je  0x40c9d1
  40c97c:	outs   dx,BYTE PTR ds:[rsi]
  40c97d:	push   0x6c646e61
  40c982:	gs fs rex.RB js 0x40c9ea
  40c987:	gs jo  0x40c9fe
  40c98a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40c991:	gs jb  0x40c994
  40c994:	lods   al,BYTE PTR ds:[rsi]
  40c995:	add    al,0x53
  40c997:	ins    BYTE PTR es:[rdi],dx
  40c998:	gs gs jo 0x40c99c
  40c99c:	mov    edx,0x72655404
  40c9a1:	ins    DWORD PTR es:[rdi],dx
  40c9a2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40c9a9:	outs   dx,DWORD PTR ds:[rsi]
  40c9aa:	movsxd esp,DWORD PTR [rbp+0x73]
  40c9ad:	jae    0x40c9af
  40c9af:	add    cl,al
  40c9b1:	add    al,0x54
  40c9b3:	ins    BYTE PTR es:[rdi],dx
  40c9b4:	jae    0x40c9fd
  40c9b6:	gs je  0x40ca0f
  40c9b9:	(bad)  
  40c9ba:	ins    BYTE PTR es:[rdi],dx
  40c9bb:	jne    0x40ca22
  40c9bd:	add    dh,cl
  40c9bf:	add    al,0x55
  40c9c1:	outs   dx,BYTE PTR ds:[rsi]
  40c9c2:	push   0x6c646e61
  40c9c7:	gs fs rex.RB js 0x40ca2f
  40c9cc:	gs jo  0x40ca43
  40c9cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40c9d6:	gs jb  0x40c9d9
  40c9d9:	add    ah,ch
  40c9db:	add    al,0x56
  40c9dd:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40c9e4:	jb     0x40ca55
  40c9e6:	je     0x40ca4d
  40c9e8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40c9ec:	out    dx,al
  40c9ed:	add    al,0x56
  40c9ef:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40c9f6:	jne    0x40ca5d
  40c9f8:	jb     0x40ca73
  40c9fa:	add    BYTE PTR [rax],al
  40c9fc:	(bad)  
  40c9fd:	add    BYTE PTR [rdi+0x5f],bl
  40ca00:	rex.XB pop r15
  40ca02:	jae    0x40ca74
  40ca04:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40ca08:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40ca0f:	ins    BYTE PTR es:[rdi],dx
  40ca10:	gs jb  0x40ca13
  40ca13:	add    BYTE PTR [rsi+0x0],al
  40ca16:	pop    rdi
  40ca17:	pop    rdi
  40ca18:	(bad)  
  40ca19:	jb     0x40ca82
  40ca1b:	jbe    0x40ca1d
  40ca1d:	add    BYTE PTR [rsi+0x0],cl
  40ca20:	pop    rdi
  40ca21:	pop    rdi
  40ca22:	fs ins BYTE PTR es:[rdi],dx
  40ca24:	ins    BYTE PTR es:[rdi],dx
  40ca25:	outs   dx,DWORD PTR ds:[rsi]
  40ca26:	outs   dx,BYTE PTR ds:[rsi]
  40ca27:	gs js  0x40ca93
  40ca2a:	je     0x40ca2c
  40ca2c:	push   rcx
  40ca2d:	add    BYTE PTR [rdi+0x5f],bl
  40ca30:	addr32 gs je 0x40caa1
  40ca34:	(bad)  
  40ca35:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40ca3c:	push   rdx
  40ca3d:	add    BYTE PTR [rdi+0x5f],bl
  40ca40:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40ca47:	add    BYTE PTR [rbx+0x0],dl
  40ca4a:	pop    rdi
  40ca4b:	pop    rdi
  40ca4c:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40ca53:	movsxd eax,DWORD PTR [rax]
  40ca55:	add    BYTE PTR [rdx+0x0],bl
  40ca58:	pop    rdi
  40ca59:	pop    rdi
  40ca5a:	ins    BYTE PTR es:[rdi],dx
  40ca5b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ca5e:	jbe    0x40cabf
  40ca60:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40ca67:	add    BYTE PTR [rdi+0x5f],bl
  40ca6a:	jae    0x40cad1
  40ca6c:	je     0x40cacd
  40ca6e:	(bad)  
  40ca6f:	jo     0x40cae1
  40ca71:	pop    rdi
  40ca72:	je     0x40caed
  40ca74:	jo     0x40cadb
  40ca76:	add    BYTE PTR [rax],al
  40ca78:	(bad)  
  40ca79:	add    BYTE PTR [rdi+0x5f],bl
  40ca7c:	jae    0x40cae3
  40ca7e:	je     0x40caf5
  40ca80:	jae    0x40cae7
  40ca82:	jb     0x40caf1
  40ca84:	(bad)  
  40ca85:	je     0x40caef
  40ca87:	gs jb  0x40cafc
  40ca8a:	add    BYTE PTR [rax],al
  40ca8c:	jno    0x40ca8e
  40ca8e:	pop    rdi
  40ca8f:	(bad)  
  40ca90:	movsxd ebp,DWORD PTR [rbp+0x64]
  40ca93:	ins    BYTE PTR es:[rdi],dx
  40ca94:	outs   dx,BYTE PTR ds:[rsi]
  40ca95:	add    BYTE PTR [rax+0x0],bh
  40ca98:	pop    rdi
  40ca99:	(bad)  
  40ca9a:	ins    DWORD PTR es:[rdi],dx
  40ca9b:	jae    0x40cb04
  40ca9d:	pop    rdi
  40ca9e:	gs js  0x40cb0a
  40caa1:	je     0x40caa3
  40caa3:	add    BYTE PTR [rdx+0x65635f00],cl
  40caa9:	js     0x40cb14
  40caab:	je     0x40caad
  40caad:	add    BYTE PTR [rdx+0x72655f00],bh
  40cab3:	jb     0x40cb23
  40cab5:	outs   dx,DWORD PTR ds:[rsi]
  40cab6:	add    BYTE PTR [rax],al
  40cab8:	fiadd  DWORD PTR [rax]
  40caba:	pop    rdi
  40cabb:	ins    WORD PTR es:[rdi],dx
  40cabd:	outs   dx,DWORD PTR ds:[rsi]
  40cabe:	fs add BYTE PTR gs:[rax],al
  40cac2:	sbb    al,BYTE PTR [rcx]
  40cac4:	pop    rdi
  40cac5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40cacc:	ins    DWORD PTR es:[rdi],dx
  40cacd:	add    BYTE PTR [rax+0x6f6c5f01],al
  40cad3:	movsxd ebp,DWORD PTR [rbx+0x0]
  40cad6:	and    eax,0x6e6f5f02
  40cadb:	gs js  0x40cb47
  40cade:	je     0x40cae0
  40cae0:	add    BYTE PTR [rdx],0x5f
  40cae3:	jae    0x40cb59
  40cae5:	jb     0x40cb4b
  40cae7:	jne    0x40cb59
  40cae9:	add    ah,al
  40caeb:	add    bl,BYTE PTR [rdi+0x75]
  40caee:	outs   dx,BYTE PTR ds:[rsi]
  40caef:	ins    BYTE PTR es:[rdi],dx
  40caf0:	outs   dx,DWORD PTR ds:[rsi]
  40caf1:	movsxd ebp,DWORD PTR [rbx+0x0]
  40caf4:	jg     0x40caf9
  40caf6:	(bad)  
  40caf7:	(bad)  
  40caf8:	outs   dx,DWORD PTR ds:[rsi]
  40caf9:	jb     0x40cb6f
  40cafb:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  40cb02:	add    BYTE PTR [rax],al
  40cb04:	nop
  40cb05:	add    esp,DWORD PTR [rbx+0x61]
  40cb08:	ins    BYTE PTR es:[rdi],dx
  40cb09:	ins    BYTE PTR es:[rdi],dx
  40cb0a:	outs   dx,DWORD PTR ds:[rsi]
  40cb0b:	movsxd eax,DWORD PTR [rax]
  40cb0d:	add    BYTE PTR [rbp+0x69786503],bl
  40cb13:	je     0x40cb15
  40cb15:	add    BYTE PTR [rdi+0x65676603],ah
  40cb1b:	je     0x40cb90
  40cb1d:	add    BYTE PTR [rax+0x72706603],dh
  40cb23:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40cb2a:	data16 jo 0x40cba2
  40cb2d:	je     0x40cb92
  40cb2f:	add    BYTE PTR [rdi+0x65726603],dh
  40cb35:	add    BYTE PTR gs:[rax],al
  40cb38:	ret    0x6603
  40cb3b:	ja     0x40cbaf
  40cb3d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40cb45:	gs je  0x40cbad
  40cb48:	outs   dx,BYTE PTR ds:[rsi]
  40cb49:	jbe    0x40cb4b
  40cb4b:	add    al,dh
  40cb4d:	add    ebp,DWORD PTR [rbp+0x61]
  40cb50:	ins    BYTE PTR es:[rdi],dx
  40cb51:	ins    BYTE PTR es:[rdi],dx
  40cb52:	outs   dx,DWORD PTR ds:[rsi]
  40cb53:	movsxd eax,DWORD PTR [rax]
  40cb55:	add    al,bh
  40cb57:	add    ebp,DWORD PTR [rbp+0x65]
  40cb5a:	ins    DWORD PTR es:[rdi],dx
  40cb5b:	movsxd esi,DWORD PTR [rax+0x79]
  40cb5e:	add    BYTE PTR [rax],al
  40cb60:	cli    
  40cb61:	add    ebp,DWORD PTR [rbp+0x65]
  40cb64:	ins    DWORD PTR es:[rdi],dx
  40cb65:	jae    0x40cbcc
  40cb67:	je     0x40cb69
  40cb69:	add    BYTE PTR [rcx],al
  40cb6b:	add    al,0x70
  40cb6d:	jb     0x40cbd8
  40cb6f:	outs   dx,BYTE PTR ds:[rsi]
  40cb70:	je     0x40cbd8
  40cb72:	add    BYTE PTR [rax],al
  40cb74:	add    al,0x4
  40cb76:	jo     0x40cbed
  40cb78:	je     0x40cbdd
  40cb7a:	push   0x5007261
  40cb7f:	add    al,0x70
  40cb81:	jne    0x40cbf7
  40cb83:	jae    0x40cb85
  40cb85:	add    BYTE PTR [rsp+rax*1],dl
  40cb88:	jae    0x40cbef
  40cb8a:	je     0x40cbf8
  40cb8c:	outs   dx,DWORD PTR ds:[rsi]
  40cb8d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40cb90:	add    BYTE PTR gs:[rsi],dl
  40cb93:	add    al,0x73
  40cb95:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40cb9c:	sbb    eax,DWORD PTR [rbx+rsi*2]
  40cb9f:	jo     0x40cc13
  40cba1:	imul   ebp,DWORD PTR [rsi+0x74],0x4230066
  40cba8:	jae    0x40cc1e
  40cbaa:	jb     0x40cc0f
  40cbac:	push   0x2b000072
  40cbb1:	add    al,0x73
  40cbb3:	je     0x40cc27
  40cbb5:	ins    BYTE PTR es:[rdi],dx
  40cbb6:	outs   dx,BYTE PTR gs:[rsi]
  40cbb8:	add    BYTE PTR [rax],al
  40cbba:	cs add al,0x73
  40cbbd:	je     0x40cc31
  40cbbf:	outs   dx,BYTE PTR ds:[rsi]
  40cbc0:	movsxd ebp,DWORD PTR [rbp+0x70]
  40cbc3:	add    BYTE PTR [rcx],dh
  40cbc5:	add    al,0x73
  40cbc7:	je     0x40cc3b
  40cbc9:	jo     0x40cc2d
  40cbcb:	jb     0x40cc38
  40cbcd:	add    BYTE PTR [rsi+0x4],cl
  40cbd0:	jbe    0x40cc38
  40cbd2:	jo     0x40cc46
  40cbd4:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40cbdb:	add    BYTE PTR [rax],al
  40cbdd:	rol    BYTE PTR [rax],0x0
  40cbe0:	add    al,al
  40cbe2:	add    BYTE PTR [rax],al
  40cbe4:	add    al,al
  40cbe6:	add    BYTE PTR [rax],al
  40cbe8:	add    al,al
  40cbea:	add    BYTE PTR [rax],al
  40cbec:	add    al,al
  40cbee:	add    BYTE PTR [rax],al
  40cbf0:	add    al,al
  40cbf2:	add    BYTE PTR [rax],al
  40cbf4:	add    al,al
  40cbf6:	add    BYTE PTR [rax],al
  40cbf8:	add    al,al
  40cbfa:	add    BYTE PTR [rax],al
  40cbfc:	add    al,al
  40cbfe:	add    BYTE PTR [rax],al
  40cc00:	add    al,al
  40cc02:	add    BYTE PTR [rax],al
  40cc04:	add    al,al
  40cc06:	add    BYTE PTR [rax],al
  40cc08:	add    al,al
  40cc0a:	add    BYTE PTR [rax],al
  40cc0c:	add    al,al
  40cc0e:	add    BYTE PTR [rax],al
  40cc10:	add    al,al
  40cc12:	add    BYTE PTR [rax],al
  40cc14:	add    al,al
  40cc16:	add    BYTE PTR [rax],al
  40cc18:	add    al,al
  40cc1a:	add    BYTE PTR [rax],al
  40cc1c:	add    al,al
  40cc1e:	add    BYTE PTR [rax],al
  40cc20:	add    al,al
  40cc22:	add    BYTE PTR [rax],al
  40cc24:	add    al,al
  40cc26:	add    BYTE PTR [rax],al
  40cc28:	add    al,al
  40cc2a:	add    BYTE PTR [rax],al
  40cc2c:	add    al,al
  40cc2e:	add    BYTE PTR [rax],al
  40cc30:	add    al,al
  40cc32:	add    BYTE PTR [rax],al
  40cc34:	add    al,al
  40cc36:	add    BYTE PTR [rax],al
  40cc38:	add    al,al
  40cc3a:	add    BYTE PTR [rax],al
  40cc3c:	add    al,al
  40cc3e:	add    BYTE PTR [rax],al
  40cc40:	add    al,al
  40cc42:	add    BYTE PTR [rax],al
  40cc44:	add    al,al
  40cc46:	add    BYTE PTR [rax],al
  40cc48:	add    al,al
  40cc4a:	add    BYTE PTR [rax],al
  40cc4c:	add    al,al
  40cc4e:	add    BYTE PTR [rax],al
  40cc50:	add    al,al
  40cc52:	add    BYTE PTR [rax],al
  40cc54:	ins    BYTE PTR es:[rdi],dx
  40cc55:	imul   esp,DWORD PTR [rdx+0x73],0x62646279
  40cc5c:	sub    eax,0x6c642e35
  40cc61:	ins    BYTE PTR es:[rdi],dx
  40cc62:	add    BYTE PTR [rax],al
  40cc64:	adc    al,0xc0
  40cc66:	add    BYTE PTR [rax],al
  40cc68:	adc    al,0xc0
  40cc6a:	add    BYTE PTR [rax],al
  40cc6c:	adc    al,0xc0
  40cc6e:	add    BYTE PTR [rax],al
  40cc70:	adc    al,0xc0
  40cc72:	add    BYTE PTR [rax],al
  40cc74:	adc    al,0xc0
  40cc76:	add    BYTE PTR [rax],al
  40cc78:	adc    al,0xc0
  40cc7a:	add    BYTE PTR [rax],al
  40cc7c:	adc    al,0xc0
  40cc7e:	add    BYTE PTR [rax],al
  40cc80:	adc    al,0xc0
  40cc82:	add    BYTE PTR [rax],al
  40cc84:	adc    al,0xc0
  40cc86:	add    BYTE PTR [rax],al
  40cc88:	adc    al,0xc0
  40cc8a:	add    BYTE PTR [rax],al
  40cc8c:	adc    al,0xc0
  40cc8e:	add    BYTE PTR [rax],al
  40cc90:	adc    al,0xc0
  40cc92:	add    BYTE PTR [rax],al
  40cc94:	adc    al,0xc0
  40cc96:	add    BYTE PTR [rax],al
  40cc98:	adc    al,0xc0
  40cc9a:	add    BYTE PTR [rax],al
  40cc9c:	adc    al,0xc0
  40cc9e:	add    BYTE PTR [rax],al
  40cca0:	adc    al,0xc0
  40cca2:	add    BYTE PTR [rax],al
  40cca4:	adc    al,0xc0
  40cca6:	add    BYTE PTR [rax],al
  40cca8:	adc    al,0xc0
  40ccaa:	add    BYTE PTR [rax],al
  40ccac:	adc    al,0xc0
  40ccae:	add    BYTE PTR [rax],al
  40ccb0:	adc    al,0xc0
  40ccb2:	add    BYTE PTR [rax],al
  40ccb4:	adc    al,0xc0
  40ccb6:	add    BYTE PTR [rax],al
  40ccb8:	adc    al,0xc0
  40ccba:	add    BYTE PTR [rax],al
  40ccbc:	adc    al,0xc0
  40ccbe:	add    BYTE PTR [rax],al
  40ccc0:	rex.WXB
  40ccc1:	rex.RB push r10
  40ccc3:	rex.WRX
  40ccc4:	rex.RB
  40ccc5:	xor    r14,QWORD PTR [rdx]
  40ccc8:	cs fs ins BYTE PTR es:[rdi],dx
  40cccb:	ins    BYTE PTR es:[rdi],dx
  40cccc:	add    BYTE PTR [rax],al
  40ccce:	add    BYTE PTR [rax],al
  40ccd0:	sub    al,al
  40ccd2:	add    BYTE PTR [rax],al
  40ccd4:	sub    al,al
  40ccd6:	add    BYTE PTR [rax],al
  40ccd8:	sub    al,al
  40ccda:	add    BYTE PTR [rax],al
  40ccdc:	sub    al,al
  40ccde:	add    BYTE PTR [rax],al
  40cce0:	sub    al,al
  40cce2:	add    BYTE PTR [rax],al
  40cce4:	sub    al,al
  40cce6:	add    BYTE PTR [rax],al
  40cce8:	sub    al,al
  40ccea:	add    BYTE PTR [rax],al
  40ccec:	sub    al,al
  40ccee:	add    BYTE PTR [rax],al
  40ccf0:	sub    al,al
  40ccf2:	add    BYTE PTR [rax],al
  40ccf4:	sub    al,al
  40ccf6:	add    BYTE PTR [rax],al
  40ccf8:	sub    al,al
  40ccfa:	add    BYTE PTR [rax],al
  40ccfc:	sub    al,al
  40ccfe:	add    BYTE PTR [rax],al
  40cd00:	sub    al,al
  40cd02:	add    BYTE PTR [rax],al
  40cd04:	sub    al,al
  40cd06:	add    BYTE PTR [rax],al
  40cd08:	sub    al,al
  40cd0a:	add    BYTE PTR [rax],al
  40cd0c:	sub    al,al
  40cd0e:	add    BYTE PTR [rax],al
  40cd10:	sub    al,al
  40cd12:	add    BYTE PTR [rax],al
  40cd14:	sub    al,al
  40cd16:	add    BYTE PTR [rax],al
  40cd18:	sub    al,al
  40cd1a:	add    BYTE PTR [rax],al
  40cd1c:	sub    al,al
  40cd1e:	add    BYTE PTR [rax],al
  40cd20:	sub    al,al
  40cd22:	add    BYTE PTR [rax],al
  40cd24:	sub    al,al
  40cd26:	add    BYTE PTR [rax],al
  40cd28:	sub    al,al
  40cd2a:	add    BYTE PTR [rax],al
  40cd2c:	sub    al,al
  40cd2e:	add    BYTE PTR [rax],al
  40cd30:	sub    al,al
  40cd32:	add    BYTE PTR [rax],al
  40cd34:	sub    al,al
  40cd36:	add    BYTE PTR [rax],al
  40cd38:	sub    al,al
  40cd3a:	add    BYTE PTR [rax],al
  40cd3c:	sub    al,al
  40cd3e:	add    BYTE PTR [rax],al
  40cd40:	sub    al,al
  40cd42:	add    BYTE PTR [rax],al
  40cd44:	sub    al,al
  40cd46:	add    BYTE PTR [rax],al
  40cd48:	sub    al,al
  40cd4a:	add    BYTE PTR [rax],al
  40cd4c:	sub    al,al
  40cd4e:	add    BYTE PTR [rax],al
  40cd50:	sub    al,al
  40cd52:	add    BYTE PTR [rax],al
  40cd54:	sub    al,al
  40cd56:	add    BYTE PTR [rax],al
  40cd58:	sub    al,al
  40cd5a:	add    BYTE PTR [rax],al
  40cd5c:	sub    al,al
  40cd5e:	add    BYTE PTR [rax],al
  40cd60:	sub    al,al
  40cd62:	add    BYTE PTR [rax],al
  40cd64:	sub    al,al
  40cd66:	add    BYTE PTR [rax],al
  40cd68:	sub    al,al
  40cd6a:	add    BYTE PTR [rax],al
  40cd6c:	sub    al,al
  40cd6e:	add    BYTE PTR [rax],al
  40cd70:	sub    al,al
  40cd72:	add    BYTE PTR [rax],al
  40cd74:	sub    al,al
  40cd76:	add    BYTE PTR [rax],al
  40cd78:	sub    al,al
  40cd7a:	add    BYTE PTR [rax],al
  40cd7c:	ins    DWORD PTR es:[rdi],dx
  40cd7d:	jae    0x40cdf5
  40cd7f:	movsxd esi,DWORD PTR [rdx+0x74]
  40cd82:	cs fs ins BYTE PTR es:[rdi],dx
  40cd85:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040d000 <.CRT>:
	...
  40d008:	(bad)  
  40d009:	adc    DWORD PTR [rax+0x0],eax
	...
  40d020:	adc    BYTE PTR [rax],dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    al,dh
  40d029:	and    al,0x40
	...
  40d03f:	add    BYTE PTR [rax],ah
  40d041:	(bad)  
  40d042:	add    BYTE PTR [rax],al
  40d045:	add    BYTE PTR [rax],al
  40d047:	add    al,dh
  40d049:	add    BYTE PTR es:[rax],al
	...

Disassembly of section .tls:

000000000040e000 <.tls>:
	...
  40e020:	add    al,ah
  40e022:	add    BYTE PTR [rax],al
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax-0x20],ah
  40e02a:	add    BYTE PTR [rax],al
  40e02d:	add    BYTE PTR [rax],al
  40e02f:	add    BYTE PTR [rsi+rsi*4+0x40],bl
  40e033:	add    BYTE PTR [rax],al
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    BYTE PTR [rax-0x30],al
  40e03a:	add    BYTE PTR [rax],al
	...
