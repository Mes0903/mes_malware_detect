
cae59bdfecb5b2bdfcab22af171281872dbe296b42359b3b8dd58275d619cb12.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x44e5]        # 0x405500
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x44e6]        # 0x405510
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x44e9]        # 0x405520
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x44ac]        # 0x4054f0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x435f]        # 0x4053b0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4481]        # 0x4054e0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402bb0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401bb0
  401081:	mov    rdx,QWORD PTR [rip+0x43b8]        # 0x405440
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x439e]        # 0x405430
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4404]        # 0x4054a0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x433b]        # 0x4053e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401790
  4010af:	mov    rax,QWORD PTR [rip+0x428a]        # 0x405340
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402bb0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x969]        # 0x401a90
  401127:	call   0x401a80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4365]        # 0x4054d0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x42f5]        # 0x405490
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bc8
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x431a]        # 0x4054e0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x421b]        # 0x405410
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x9226]        # 0x40a428
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x41f7]        # 0x405420
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x413c]        # 0x4053a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401da0
  40127d:	lea    rcx,[rip+0x10bc]        # 0x402340
  401284:	call   QWORD PTR [rip+0x9196]        # 0x40a420
  40128a:	mov    rdx,QWORD PTR [rip+0x416f]        # 0x405400
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402250
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402bf0
  4012a5:	call   0x401b90
  4012aa:	mov    rax,QWORD PTR [rip+0x40ff]        # 0x4053b0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4111]        # 0x4053d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b40
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b20
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b40
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b30
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401760
  4013bb:	mov    rax,QWORD PTR [rip+0x3ffe]        # 0x4053c0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402d40
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b98
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3fe9]        # 0x405420
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402ba0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3ffd]        # 0x405460
  401463:	mov    rcx,QWORD PTR [rip+0x3fe6]        # 0x405450
  40146a:	call   0x402b90
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x8f37]        # 0x40a3d0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3fd9]        # 0x405480
  4014a7:	mov    rcx,QWORD PTR [rip+0x3fc2]        # 0x405470
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b90
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b60
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4005]        # 0x4054e0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4017a0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3fd5]        # 0x4054e0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4017a0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	lea    rcx,[rip+0x6af9]        # 0x408030
  401537:	jmp    0x4015c8
  40153c:	nop
  40153d:	nop
  40153e:	nop
  40153f:	nop
  401540:	push   rbx
  401541:	sub    rsp,0x30
  401545:	lea    rdx,[rip+0x3b44]        # 0x405090
  40154c:	lea    r8,[rsp+0x2f]
  401551:	mov    rbx,rcx
  401554:	call   0x4015d8
  401559:	mov    rax,rbx
  40155c:	add    rsp,0x30
  401560:	pop    rbx
  401561:	ret    
  401562:	nop
  401563:	nop
  401564:	nop
  401565:	nop
  401566:	nop
  401567:	nop
  401568:	nop
  401569:	nop
  40156a:	nop
  40156b:	nop
  40156c:	nop
  40156d:	nop
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x8fe2]        # 0x40a558
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x8fd2]        # 0x40a550
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x8d92]        # 0x40a318
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x8d82]        # 0x40a310
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x8d72]        # 0x40a308
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x8d92]        # 0x40a330
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x8d82]        # 0x40a328
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x8de2]        # 0x40a390
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x8dd2]        # 0x40a388
  4015b6:	nop
  4015b7:	nop
  4015b8:	jmp    QWORD PTR [rip+0x8dc2]        # 0x40a380
  4015be:	nop
  4015bf:	nop
  4015c0:	jmp    QWORD PTR [rip+0x8daa]        # 0x40a370
  4015c6:	nop
  4015c7:	nop
  4015c8:	jmp    QWORD PTR [rip+0x8d9a]        # 0x40a368
  4015ce:	nop
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x8d8a]        # 0x40a360
  4015d6:	nop
  4015d7:	nop
  4015d8:	jmp    QWORD PTR [rip+0x8d7a]        # 0x40a358
  4015de:	nop
  4015df:	nop
  4015e0:	jmp    QWORD PTR [rip+0x8d6a]        # 0x40a350
  4015e6:	nop
  4015e7:	nop
  4015e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	push   rbx
  4015f1:	sub    rsp,0x30
  4015f5:	mov    rbx,rcx
  4015f8:	mov    rcx,QWORD PTR [rip+0x7411]        # 0x408a10
  4015ff:	call   0x401ba0
  401604:	cmp    rax,0xffffffffffffffff
  401608:	mov    QWORD PTR [rsp+0x20],rax
  40160d:	je     0x401685
  40160f:	mov    ecx,0x8
  401614:	call   0x402b88
  401619:	mov    rcx,QWORD PTR [rip+0x73f0]        # 0x408a10
  401620:	call   0x401ba0
  401625:	mov    rcx,QWORD PTR [rip+0x73ec]        # 0x408a18
  40162c:	mov    QWORD PTR [rsp+0x20],rax
  401631:	call   0x401ba0
  401636:	lea    rdx,[rsp+0x20]
  40163b:	lea    r8,[rsp+0x28]
  401640:	mov    rcx,rbx
  401643:	mov    QWORD PTR [rsp+0x28],rax
  401648:	call   0x402bd0
  40164d:	mov    rcx,QWORD PTR [rsp+0x20]
  401652:	mov    rbx,rax
  401655:	call   0x401bb0
  40165a:	mov    rcx,QWORD PTR [rsp+0x28]
  40165f:	mov    QWORD PTR [rip+0x73aa],rax        # 0x408a10
  401666:	call   0x401bb0
  40166b:	mov    ecx,0x8
  401670:	mov    QWORD PTR [rip+0x73a1],rax        # 0x408a18
  401677:	call   0x402b78
  40167c:	mov    rax,rbx
  40167f:	add    rsp,0x30
  401683:	pop    rbx
  401684:	ret    
  401685:	mov    rax,QWORD PTR [rip+0x3d64]        # 0x4053f0
  40168c:	mov    rcx,rbx
  40168f:	call   QWORD PTR [rax]
  401691:	add    rsp,0x30
  401695:	pop    rbx
  401696:	ret    
  401697:	nop    WORD PTR [rax+rax*1+0x0]
  4016a0:	sub    rsp,0x28
  4016a4:	call   0x4015f0
  4016a9:	test   rax,rax
  4016ac:	sete   al
  4016af:	movzx  eax,al
  4016b2:	neg    eax
  4016b4:	add    rsp,0x28
  4016b8:	ret    
  4016b9:	nop
  4016ba:	nop
  4016bb:	nop
  4016bc:	nop
  4016bd:	nop
  4016be:	nop
  4016bf:	nop
  4016c0:	sub    rsp,0x28
  4016c4:	mov    rax,QWORD PTR [rip+0x2955]        # 0x404020
  4016cb:	mov    rax,QWORD PTR [rax]
  4016ce:	test   rax,rax
  4016d1:	je     0x4016f0
  4016d3:	call   rax
  4016d5:	mov    rax,QWORD PTR [rip+0x2944]        # 0x404020
  4016dc:	lea    rdx,[rax+0x8]
  4016e0:	mov    rax,QWORD PTR [rax+0x8]
  4016e4:	mov    QWORD PTR [rip+0x2935],rdx        # 0x404020
  4016eb:	test   rax,rax
  4016ee:	jne    0x4016d3
  4016f0:	add    rsp,0x28
  4016f4:	ret    
  4016f5:	nop
  4016f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401700:	push   rsi
  401701:	push   rbx
  401702:	sub    rsp,0x28
  401706:	mov    rsi,QWORD PTR [rip+0x3c63]        # 0x405370
  40170d:	mov    rax,QWORD PTR [rsi]
  401710:	cmp    eax,0xffffffff
  401713:	mov    ebx,eax
  401715:	je     0x401740
  401717:	test   ebx,ebx
  401719:	je     0x40172a
  40171b:	nop    DWORD PTR [rax+rax*1+0x0]
  401720:	mov    eax,ebx
  401722:	call   QWORD PTR [rsi+rax*8]
  401725:	sub    ebx,0x1
  401728:	jne    0x401720
  40172a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4016c0
  401731:	add    rsp,0x28
  401735:	pop    rbx
  401736:	pop    rsi
  401737:	jmp    0x4016a0
  40173c:	nop    DWORD PTR [rax+0x0]
  401740:	xor    ebx,ebx
  401742:	jmp    0x401746
  401744:	mov    ebx,eax
  401746:	lea    edx,[rbx+0x1]
  401749:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40174e:	mov    rax,rdx
  401751:	jne    0x401744
  401753:	jmp    0x401717
  401755:	nop
  401756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401760:	mov    eax,DWORD PTR [rip+0x68da]        # 0x408040
  401766:	test   eax,eax
  401768:	je     0x401770
  40176a:	repz ret 
  40176c:	nop    DWORD PTR [rax+0x0]
  401770:	mov    DWORD PTR [rip+0x68c6],0x1        # 0x408040
  40177a:	jmp    0x401700
  40177c:	nop
  40177d:	nop
  40177e:	nop
  40177f:	nop
  401780:	mov    rax,QWORD PTR [rip+0x8d01]        # 0x40a488
  401787:	rex.W jmp rax
  40178a:	nop
  40178b:	nop
  40178c:	nop
  40178d:	nop
  40178e:	nop
  40178f:	nop
  401790:	xor    eax,eax
  401792:	ret    
  401793:	nop
  401794:	nop
  401795:	nop
  401796:	nop
  401797:	nop
  401798:	nop
  401799:	nop
  40179a:	nop
  40179b:	nop
  40179c:	nop
  40179d:	nop
  40179e:	nop
  40179f:	nop
  4017a0:	push   r12
  4017a2:	push   rbp
  4017a3:	push   rdi
  4017a4:	push   rsi
  4017a5:	push   rbx
  4017a6:	sub    rsp,0x40
  4017aa:	mov    rbx,QWORD PTR [rip+0x28cf]        # 0x404080
  4017b1:	movabs rax,0x2b992ddfa232
  4017bb:	mov    QWORD PTR [rsp+0x20],0x0
  4017c4:	cmp    rbx,rax
  4017c7:	je     0x4017e0
  4017c9:	not    rbx
  4017cc:	mov    QWORD PTR [rip+0x28bd],rbx        # 0x404090
  4017d3:	add    rsp,0x40
  4017d7:	pop    rbx
  4017d8:	pop    rsi
  4017d9:	pop    rdi
  4017da:	pop    rbp
  4017db:	pop    r12
  4017dd:	ret    
  4017de:	xchg   ax,ax
  4017e0:	lea    rcx,[rsp+0x20]
  4017e5:	call   QWORD PTR [rip+0x8bed]        # 0x40a3d8
  4017eb:	mov    r12,QWORD PTR [rsp+0x20]
  4017f0:	call   QWORD PTR [rip+0x8bc2]        # 0x40a3b8
  4017f6:	mov    ebp,eax
  4017f8:	call   QWORD PTR [rip+0x8bc2]        # 0x40a3c0
  4017fe:	mov    edi,eax
  401800:	call   QWORD PTR [rip+0x8bda]        # 0x40a3e0
  401806:	lea    rcx,[rsp+0x30]
  40180b:	mov    esi,eax
  40180d:	call   QWORD PTR [rip+0x8be5]        # 0x40a3f8
  401813:	xor    r12,QWORD PTR [rsp+0x30]
  401818:	mov    edx,edi
  40181a:	movabs rax,0xffffffffffff
  401824:	xor    rbp,r12
  401827:	mov    rdi,rbp
  40182a:	xor    rdi,rdx
  40182d:	mov    edx,esi
  40182f:	xor    rdi,rdx
  401832:	mov    rsi,rdi
  401835:	and    rsi,rax
  401838:	cmp    rsi,rbx
  40183b:	je     0x401860
  40183d:	mov    rax,rsi
  401840:	not    rax
  401843:	mov    QWORD PTR [rip+0x2836],rsi        # 0x404080
  40184a:	mov    QWORD PTR [rip+0x283f],rax        # 0x404090
  401851:	add    rsp,0x40
  401855:	pop    rbx
  401856:	pop    rsi
  401857:	pop    rdi
  401858:	pop    rbp
  401859:	pop    r12
  40185b:	ret    
  40185c:	nop    DWORD PTR [rax+0x0]
  401860:	movabs rax,0xffffd466d2205dcc
  40186a:	movabs rsi,0x2b992ddfa233
  401874:	jmp    0x401843
  401876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401880:	push   rbp
  401881:	push   rsi
  401882:	push   rbx
  401883:	mov    rbp,rsp
  401886:	sub    rsp,0x70
  40188a:	mov    rsi,rcx
  40188d:	lea    rcx,[rip+0x67ec]        # 0x408080
  401894:	call   QWORD PTR [rip+0x8b6e]        # 0x40a408
  40189a:	mov    rbx,QWORD PTR [rip+0x68d7]        # 0x408178
  4018a1:	xor    r8d,r8d
  4018a4:	lea    rdx,[rbp-0x28]
  4018a8:	mov    rcx,rbx
  4018ab:	call   QWORD PTR [rip+0x8b5f]        # 0x40a410
  4018b1:	test   rax,rax
  4018b4:	mov    r9,rax
  4018b7:	je     0x401960
  4018bd:	lea    rax,[rbp-0x20]
  4018c1:	mov    QWORD PTR [rsp+0x38],0x0
  4018ca:	mov    r8,rbx
  4018cd:	mov    rdx,QWORD PTR [rbp-0x28]
  4018d1:	xor    ecx,ecx
  4018d3:	mov    QWORD PTR [rsp+0x30],rax
  4018d8:	lea    rax,[rbp-0x18]
  4018dc:	mov    QWORD PTR [rsp+0x28],rax
  4018e1:	lea    rax,[rip+0x6798]        # 0x408080
  4018e8:	mov    QWORD PTR [rsp+0x20],rax
  4018ed:	call   QWORD PTR [rip+0x8b25]        # 0x40a418
  4018f3:	mov    rax,QWORD PTR [rip+0x687e]        # 0x408178
  4018fa:	xor    ecx,ecx
  4018fc:	mov    QWORD PTR [rip+0x67fd],rsi        # 0x408100
  401903:	mov    DWORD PTR [rip+0x6c73],0xc0000409        # 0x408580
  40190d:	mov    DWORD PTR [rip+0x6c6d],0x1        # 0x408584
  401917:	mov    QWORD PTR [rip+0x6c72],rax        # 0x408590
  40191e:	mov    rax,QWORD PTR [rip+0x275b]        # 0x404080
  401925:	mov    QWORD PTR [rbp-0x10],rax
  401929:	mov    rax,QWORD PTR [rip+0x2760]        # 0x404090
  401930:	mov    QWORD PTR [rbp-0x8],rax
  401934:	call   QWORD PTR [rip+0x8ae6]        # 0x40a420
  40193a:	lea    rcx,[rip+0x375f]        # 0x4050a0
  401941:	call   QWORD PTR [rip+0x8af9]        # 0x40a440
  401947:	call   QWORD PTR [rip+0x8a63]        # 0x40a3b0
  40194d:	mov    edx,0xc0000409
  401952:	mov    rcx,rax
  401955:	call   QWORD PTR [rip+0x8ad5]        # 0x40a430
  40195b:	call   0x402b70
  401960:	mov    rax,QWORD PTR [rbp+0x18]
  401964:	mov    QWORD PTR [rip+0x680d],rax        # 0x408178
  40196b:	lea    rax,[rbp+0x8]
  40196f:	mov    QWORD PTR [rip+0x67a2],rax        # 0x408118
  401976:	jmp    0x4018f3
  40197b:	nop
  40197c:	nop
  40197d:	nop
  40197e:	nop
  40197f:	nop
  401980:	sub    rsp,0x28
  401984:	test   edx,edx
  401986:	je     0x4019a0
  401988:	cmp    edx,0x3
  40198b:	je     0x4019a0
  40198d:	mov    eax,0x1
  401992:	add    rsp,0x28
  401996:	ret    
  401997:	nop    WORD PTR [rax+rax*1+0x0]
  4019a0:	call   0x402690
  4019a5:	mov    eax,0x1
  4019aa:	add    rsp,0x28
  4019ae:	ret    
  4019af:	nop
  4019b0:	push   rsi
  4019b1:	push   rbx
  4019b2:	sub    rsp,0x28
  4019b6:	mov    rax,QWORD PTR [rip+0x3973]        # 0x405330
  4019bd:	cmp    DWORD PTR [rax],0x2
  4019c0:	je     0x4019c8
  4019c2:	mov    DWORD PTR [rax],0x2
  4019c8:	cmp    edx,0x2
  4019cb:	je     0x4019e0
  4019cd:	cmp    edx,0x1
  4019d0:	je     0x401a12
  4019d2:	mov    eax,0x1
  4019d7:	add    rsp,0x28
  4019db:	pop    rbx
  4019dc:	pop    rsi
  4019dd:	ret    
  4019de:	xchg   ax,ax
  4019e0:	lea    rbx,[rip+0x9679]        # 0x40b060
  4019e7:	lea    rsi,[rip+0x9672]        # 0x40b060
  4019ee:	cmp    rbx,rsi
  4019f1:	je     0x4019d2
  4019f3:	mov    rax,QWORD PTR [rbx]
  4019f6:	test   rax,rax
  4019f9:	je     0x4019fd
  4019fb:	call   rax
  4019fd:	add    rbx,0x8
  401a01:	cmp    rbx,rsi
  401a04:	jne    0x4019f3
  401a06:	mov    eax,0x1
  401a0b:	add    rsp,0x28
  401a0f:	pop    rbx
  401a10:	pop    rsi
  401a11:	ret    
  401a12:	call   0x402690
  401a17:	jmp    0x4019d2
  401a19:	nop    DWORD PTR [rax+0x0]
  401a20:	xor    eax,eax
  401a22:	ret    
  401a23:	nop
  401a24:	nop
  401a25:	nop
  401a26:	nop
  401a27:	nop
  401a28:	nop
  401a29:	nop
  401a2a:	nop
  401a2b:	nop
  401a2c:	nop
  401a2d:	nop
  401a2e:	nop
  401a2f:	nop
  401a30:	sub    rsp,0x58
  401a34:	mov    rax,QWORD PTR [rip+0x6c25]        # 0x408660
  401a3b:	test   rax,rax
  401a3e:	je     0x401a6c
  401a40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a49:	mov    DWORD PTR [rsp+0x20],ecx
  401a4d:	lea    rcx,[rsp+0x20]
  401a52:	mov    QWORD PTR [rsp+0x28],rdx
  401a57:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a63:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a69:	call   rax
  401a6b:	nop
  401a6c:	add    rsp,0x58
  401a70:	ret    
  401a71:	nop    DWORD PTR [rax+rax*1+0x0]
  401a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a80:	mov    QWORD PTR [rip+0x6bd9],rcx        # 0x408660
  401a87:	jmp    0x402ba8
  401a8c:	nop    DWORD PTR [rax+0x0]
  401a90:	push   rsi
  401a91:	push   rbx
  401a92:	sub    rsp,0x78
  401a96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401aa0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401aa6:	cmp    DWORD PTR [rcx],0x6
  401aa9:	ja     0x401b80
  401aaf:	mov    edx,DWORD PTR [rcx]
  401ab1:	lea    rax,[rip+0x372c]        # 0x4051e4
  401ab8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401abc:	add    rax,rdx
  401abf:	jmp    rax
  401ac1:	lea    rbx,[rip+0x35f8]        # 0x4050c0
  401ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ad0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401ad6:	mov    rsi,QWORD PTR [rcx+0x8]
  401ada:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401adf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ae4:	call   0x402bc0
  401ae9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401af0:	lea    rcx,[rax+0x60]
  401af4:	lea    rdx,[rip+0x36bd]        # 0x4051b8
  401afb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401b01:	mov    r9,rsi
  401b04:	mov    r8,rbx
  401b07:	movsd  QWORD PTR [rsp+0x20],xmm6
  401b0d:	call   0x402b58
  401b12:	nop
  401b13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b18:	xor    eax,eax
  401b1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b25:	add    rsp,0x78
  401b29:	pop    rbx
  401b2a:	pop    rsi
  401b2b:	ret    
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x35a8]        # 0x4050df
  401b37:	jmp    0x401ad0
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x35b9]        # 0x405100
  401b47:	jmp    0x401ad0
  401b49:	nop    DWORD PTR [rax+0x0]
  401b50:	lea    rbx,[rip+0x3619]        # 0x405170
  401b57:	jmp    0x401ad0
  401b5c:	nop    DWORD PTR [rax+0x0]
  401b60:	lea    rbx,[rip+0x35e1]        # 0x405148
  401b67:	jmp    0x401ad0
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	lea    rbx,[rip+0x35a9]        # 0x405120
  401b77:	jmp    0x401ad0
  401b7c:	nop    DWORD PTR [rax+0x0]
  401b80:	lea    rbx,[rip+0x361f]        # 0x4051a6
  401b87:	jmp    0x401ad0
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	fninit 
  401b92:	ret    
  401b93:	nop
  401b94:	nop
  401b95:	nop
  401b96:	nop
  401b97:	nop
  401b98:	nop
  401b99:	nop
  401b9a:	nop
  401b9b:	nop
  401b9c:	nop
  401b9d:	nop
  401b9e:	nop
  401b9f:	nop
  401ba0:	mov    rax,rcx
  401ba3:	ret    
  401ba4:	xchg   ax,ax
  401ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bb0:	mov    rax,rcx
  401bb3:	ret    
  401bb4:	nop
  401bb5:	nop
  401bb6:	nop
  401bb7:	nop
  401bb8:	nop
  401bb9:	nop
  401bba:	nop
  401bbb:	nop
  401bbc:	nop
  401bbd:	nop
  401bbe:	nop
  401bbf:	nop
  401bc0:	push   rsi
  401bc1:	push   rbx
  401bc2:	sub    rsp,0x38
  401bc6:	lea    rax,[rsp+0x58]
  401bcb:	mov    rbx,rcx
  401bce:	mov    QWORD PTR [rsp+0x58],rdx
  401bd3:	mov    QWORD PTR [rsp+0x60],r8
  401bd8:	mov    QWORD PTR [rsp+0x68],r9
  401bdd:	mov    QWORD PTR [rsp+0x28],rax
  401be2:	call   0x402bc0
  401be7:	lea    rcx,[rip+0x3612]        # 0x405200
  401bee:	lea    r9,[rax+0x60]
  401bf2:	mov    r8d,0x1b
  401bf8:	mov    edx,0x1
  401bfd:	call   0x402b48
  401c02:	mov    rsi,QWORD PTR [rsp+0x28]
  401c07:	call   0x402bc0
  401c0c:	lea    rcx,[rax+0x60]
  401c10:	mov    rdx,rbx
  401c13:	mov    r8,rsi
  401c16:	call   0x402b10
  401c1b:	call   0x402b70
  401c20:	nop
  401c21:	nop    DWORD PTR [rax+rax*1+0x0]
  401c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c30:	push   r13
  401c32:	push   r12
  401c34:	push   rbp
  401c35:	push   rdi
  401c36:	push   rsi
  401c37:	push   rbx
  401c38:	sub    rsp,0x58
  401c3c:	movsxd rbp,DWORD PTR [rip+0x6a41]        # 0x408684
  401c43:	mov    rbx,rcx
  401c46:	mov    rsi,rdx
  401c49:	mov    rdi,r8
  401c4c:	test   ebp,ebp
  401c4e:	jle    0x401d4a
  401c54:	mov    rax,QWORD PTR [rip+0x6a2d]        # 0x408688
  401c5b:	xor    r9d,r9d
  401c5e:	add    rax,0x8
  401c62:	mov    r10,QWORD PTR [rax]
  401c65:	cmp    rbx,r10
  401c68:	jb     0x401c7e
  401c6a:	mov    rdx,QWORD PTR [rax+0x8]
  401c6e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c72:	add    r10,r11
  401c75:	cmp    rbx,r10
  401c78:	jb     0x401d30
  401c7e:	add    r9d,0x1
  401c82:	add    rax,0x18
  401c86:	cmp    r9d,ebp
  401c89:	jne    0x401c62
  401c8b:	mov    rcx,rbx
  401c8e:	call   0x4028a0
  401c93:	test   rax,rax
  401c96:	mov    r12,rax
  401c99:	je     0x401d82
  401c9f:	lea    rbp,[rbp+rbp*2+0x0]
  401ca4:	shl    rbp,0x3
  401ca8:	mov    r13,rbp
  401cab:	add    r13,QWORD PTR [rip+0x69d6]        # 0x408688
  401cb2:	mov    QWORD PTR [r13+0x10],rax
  401cb6:	mov    DWORD PTR [r13+0x0],0x0
  401cbe:	call   0x4029c0
  401cc3:	mov    edx,DWORD PTR [r12+0xc]
  401cc8:	mov    r8d,0x30
  401cce:	add    rax,rdx
  401cd1:	lea    rdx,[rsp+0x20]
  401cd6:	mov    QWORD PTR [r13+0x8],rax
  401cda:	mov    rax,QWORD PTR [rip+0x69a7]        # 0x408688
  401ce1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401ce6:	call   QWORD PTR [rip+0x8764]        # 0x40a450
  401cec:	test   rax,rax
  401cef:	je     0x401d65
  401cf1:	mov    eax,DWORD PTR [rsp+0x44]
  401cf5:	lea    edx,[rax-0x4]
  401cf8:	and    edx,0xfffffffb
  401cfb:	je     0x401d29
  401cfd:	sub    eax,0x40
  401d00:	and    eax,0xffffffbf
  401d03:	je     0x401d29
  401d05:	mov    r9,rbp
  401d08:	add    r9,QWORD PTR [rip+0x6979]        # 0x408688
  401d0f:	mov    r8d,0x40
  401d15:	mov    rdx,QWORD PTR [rsp+0x38]
  401d1a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d1f:	call   QWORD PTR [rip+0x8723]        # 0x40a448
  401d25:	test   eax,eax
  401d27:	je     0x401d51
  401d29:	add    DWORD PTR [rip+0x6954],0x1        # 0x408684
  401d30:	mov    r8,rdi
  401d33:	mov    rdx,rsi
  401d36:	mov    rcx,rbx
  401d39:	add    rsp,0x58
  401d3d:	pop    rbx
  401d3e:	pop    rsi
  401d3f:	pop    rdi
  401d40:	pop    rbp
  401d41:	pop    r12
  401d43:	pop    r13
  401d45:	jmp    0x402b30
  401d4a:	xor    ebp,ebp
  401d4c:	jmp    0x401c8b
  401d51:	call   QWORD PTR [rip+0x8671]        # 0x40a3c8
  401d57:	lea    rcx,[rip+0x351a]        # 0x405278
  401d5e:	mov    edx,eax
  401d60:	call   0x401bc0
  401d65:	mov    rax,QWORD PTR [rip+0x691c]        # 0x408688
  401d6c:	mov    edx,DWORD PTR [r12+0x8]
  401d71:	lea    rcx,[rip+0x34c8]        # 0x405240
  401d78:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d7d:	call   0x401bc0
  401d82:	lea    rcx,[rip+0x3497]        # 0x405220
  401d89:	mov    rdx,rbx
  401d8c:	call   0x401bc0
  401d91:	nop
  401d92:	nop    DWORD PTR [rax+0x0]
  401d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401da0:	push   rbp
  401da1:	push   r14
  401da3:	push   r13
  401da5:	push   r12
  401da7:	push   rdi
  401da8:	push   rsi
  401da9:	push   rbx
  401daa:	mov    rbp,rsp
  401dad:	sub    rsp,0x60
  401db1:	mov    ebx,DWORD PTR [rip+0x68c9]        # 0x408680
  401db7:	test   ebx,ebx
  401db9:	je     0x401dd0
  401dbb:	mov    rsp,rbp
  401dbe:	pop    rbx
  401dbf:	pop    rsi
  401dc0:	pop    rdi
  401dc1:	pop    r12
  401dc3:	pop    r13
  401dc5:	pop    r14
  401dc7:	pop    rbp
  401dc8:	ret    
  401dc9:	nop    DWORD PTR [rax+0x0]
  401dd0:	mov    DWORD PTR [rip+0x68a6],0x1        # 0x408680
  401dda:	call   0x4028f0
  401ddf:	cdqe   
  401de1:	lea    rax,[rax+rax*2]
  401de5:	lea    rax,[rax*8+0x1e]
  401ded:	and    rax,0xfffffffffffffff0
  401df1:	call   0x402cd0
  401df6:	mov    rsi,QWORD PTR [rip+0x3583]        # 0x405380
  401dfd:	mov    rbx,QWORD PTR [rip+0x358c]        # 0x405390
  401e04:	sub    rsp,rax
  401e07:	mov    DWORD PTR [rip+0x6873],0x0        # 0x408684
  401e11:	lea    rax,[rsp+0x20]
  401e16:	mov    QWORD PTR [rip+0x686b],rax        # 0x408688
  401e1d:	mov    rax,rsi
  401e20:	sub    rax,rbx
  401e23:	cmp    rax,0x7
  401e27:	jle    0x401dbb
  401e29:	cmp    rax,0xb
  401e2d:	jle    0x401e55
  401e2f:	mov    r11d,DWORD PTR [rbx]
  401e32:	test   r11d,r11d
  401e35:	jne    0x401f80
  401e3b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e3f:	test   r10d,r10d
  401e42:	jne    0x401f80
  401e48:	mov    r9d,DWORD PTR [rbx+0x8]
  401e4c:	test   r9d,r9d
  401e4f:	jne    0x401e6c
  401e51:	add    rbx,0xc
  401e55:	mov    r8d,DWORD PTR [rbx]
  401e58:	test   r8d,r8d
  401e5b:	jne    0x401f80
  401e61:	mov    ecx,DWORD PTR [rbx+0x4]
  401e64:	test   ecx,ecx
  401e66:	jne    0x401f80
  401e6c:	mov    edx,DWORD PTR [rbx+0x8]
  401e6f:	cmp    edx,0x1
  401e72:	jne    0x40208c
  401e78:	add    rbx,0xc
  401e7c:	cmp    rbx,rsi
  401e7f:	jae    0x401dbb
  401e85:	mov    r12,QWORD PTR [rip+0x3524]        # 0x4053b0
  401e8c:	lea    r13,[rbp-0x30]
  401e90:	movabs r14,0xffffffff00000000
  401e9a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e9d:	mov    eax,DWORD PTR [rbx]
  401e9f:	movzx  edx,BYTE PTR [rbx+0x8]
  401ea3:	add    rax,r12
  401ea6:	add    rcx,r12
  401ea9:	cmp    edx,0x10
  401eac:	mov    r8,QWORD PTR [rax]
  401eaf:	je     0x401ff6
  401eb5:	jbe    0x401fbd
  401ebb:	cmp    edx,0x20
  401ebe:	je     0x40203f
  401ec4:	cmp    edx,0x40
  401ec7:	jne    0x40202b
  401ecd:	sub    r8,rax
  401ed0:	mov    rdx,r13
  401ed3:	mov    rdi,r13
  401ed6:	mov    rax,r8
  401ed9:	add    rax,QWORD PTR [rcx]
  401edc:	mov    r8d,0x8
  401ee2:	mov    QWORD PTR [rbp-0x30],rax
  401ee6:	call   0x401c30
  401eeb:	add    rbx,0xc
  401eef:	cmp    rbx,rsi
  401ef2:	jb     0x401e9a
  401ef4:	mov    eax,DWORD PTR [rip+0x678a]        # 0x408684
  401efa:	xor    ebx,ebx
  401efc:	xor    esi,esi
  401efe:	test   eax,eax
  401f00:	jle    0x401dbb
  401f06:	mov    r14,QWORD PTR [rip+0x8543]        # 0x40a450
  401f0d:	lea    r13,[rbp-0x34]
  401f11:	mov    r12,QWORD PTR [rip+0x8530]        # 0x40a448
  401f18:	jmp    0x401f33
  401f1a:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	add    esi,0x1
  401f23:	add    rbx,0x18
  401f27:	cmp    esi,DWORD PTR [rip+0x6757]        # 0x408684
  401f2d:	jge    0x401dbb
  401f33:	mov    rax,rbx
  401f36:	add    rax,QWORD PTR [rip+0x674b]        # 0x408688
  401f3d:	mov    edx,DWORD PTR [rax]
  401f3f:	test   edx,edx
  401f41:	je     0x401f20
  401f43:	mov    rcx,QWORD PTR [rax+0x8]
  401f47:	mov    r8d,0x30
  401f4d:	mov    rdx,rdi
  401f50:	call   r14
  401f53:	test   rax,rax
  401f56:	je     0x40206e
  401f5c:	mov    rax,QWORD PTR [rip+0x6725]        # 0x408688
  401f63:	mov    r9,r13
  401f66:	mov    rdx,QWORD PTR [rbp-0x18]
  401f6a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f6e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f72:	call   r12
  401f75:	jmp    0x401f20
  401f77:	nop    WORD PTR [rax+rax*1+0x0]
  401f80:	cmp    rbx,rsi
  401f83:	jae    0x401dbb
  401f89:	mov    r12,QWORD PTR [rip+0x3420]        # 0x4053b0
  401f90:	lea    rdi,[rbp-0x30]
  401f94:	mov    ecx,DWORD PTR [rbx+0x4]
  401f97:	mov    eax,DWORD PTR [rbx]
  401f99:	mov    r8d,0x4
  401f9f:	mov    rdx,rdi
  401fa2:	add    rbx,0x8
  401fa6:	add    rcx,r12
  401fa9:	add    eax,DWORD PTR [rcx]
  401fab:	mov    DWORD PTR [rbp-0x30],eax
  401fae:	call   0x401c30
  401fb3:	cmp    rbx,rsi
  401fb6:	jb     0x401f94
  401fb8:	jmp    0x401ef4
  401fbd:	cmp    edx,0x8
  401fc0:	jne    0x40202b
  401fc2:	movzx  edx,BYTE PTR [rcx]
  401fc5:	mov    rdi,r13
  401fc8:	mov    r10,rdx
  401fcb:	or     r10,0xffffffffffffff00
  401fd2:	test   dl,dl
  401fd4:	cmovs  rdx,r10
  401fd8:	sub    rdx,rax
  401fdb:	lea    rax,[r8+rdx*1]
  401fdf:	mov    r8d,0x1
  401fe5:	mov    rdx,r13
  401fe8:	mov    QWORD PTR [rbp-0x30],rax
  401fec:	call   0x401c30
  401ff1:	jmp    0x401eeb
  401ff6:	movzx  edx,WORD PTR [rcx]
  401ff9:	mov    rdi,r13
  401ffc:	mov    r10,rdx
  401fff:	or     r10,0xffffffffffff0000
  402006:	test   dx,dx
  402009:	cmovs  rdx,r10
  40200d:	sub    rdx,rax
  402010:	lea    rax,[r8+rdx*1]
  402014:	mov    r8d,0x2
  40201a:	mov    rdx,r13
  40201d:	mov    QWORD PTR [rbp-0x30],rax
  402021:	call   0x401c30
  402026:	jmp    0x401eeb
  40202b:	lea    rcx,[rip+0x32a6]        # 0x4052d8
  402032:	mov    QWORD PTR [rbp-0x30],0x0
  40203a:	call   0x401bc0
  40203f:	mov    edx,DWORD PTR [rcx]
  402041:	mov    rdi,r13
  402044:	mov    r10,rdx
  402047:	or     r10,r14
  40204a:	test   edx,edx
  40204c:	cmovs  rdx,r10
  402050:	sub    rdx,rax
  402053:	lea    rax,[r8+rdx*1]
  402057:	mov    r8d,0x4
  40205d:	mov    rdx,r13
  402060:	mov    QWORD PTR [rbp-0x30],rax
  402064:	call   0x401c30
  402069:	jmp    0x401eeb
  40206e:	add    rbx,QWORD PTR [rip+0x6613]        # 0x408688
  402075:	lea    rcx,[rip+0x31c4]        # 0x405240
  40207c:	mov    rax,QWORD PTR [rbx+0x10]
  402080:	mov    r8,QWORD PTR [rbx+0x8]
  402084:	mov    edx,DWORD PTR [rax+0x8]
  402087:	call   0x401bc0
  40208c:	lea    rcx,[rip+0x320d]        # 0x4052a0
  402093:	call   0x401bc0
  402098:	nop
  402099:	nop
  40209a:	nop
  40209b:	nop
  40209c:	nop
  40209d:	nop
  40209e:	nop
  40209f:	nop
  4020a0:	sub    rsp,0x28
  4020a4:	mov    eax,DWORD PTR [rcx]
  4020a6:	cmp    eax,0xc0000091
  4020ab:	ja     0x402110
  4020ad:	cmp    eax,0xc000008d
  4020b2:	jae    0x40212f
  4020b4:	cmp    eax,0xc0000008
  4020b9:	je     0x4021d0
  4020bf:	ja     0x4021a0
  4020c5:	cmp    eax,0x80000002
  4020ca:	je     0x4021d0
  4020d0:	cmp    eax,0xc0000005
  4020d5:	jne    0x4021ae
  4020db:	xor    edx,edx
  4020dd:	mov    ecx,0xb
  4020e2:	call   0x402b28
  4020e7:	cmp    rax,0x1
  4020eb:	je     0x402230
  4020f1:	test   rax,rax
  4020f4:	je     0x402210
  4020fa:	mov    ecx,0xb
  4020ff:	call   rax
  402101:	xor    eax,eax
  402103:	add    rsp,0x28
  402107:	ret    
  402108:	nop    DWORD PTR [rax+rax*1+0x0]
  402110:	cmp    eax,0xc0000094
  402115:	je     0x4021e0
  40211b:	ja     0x402160
  40211d:	cmp    eax,0xc0000092
  402122:	je     0x4021d0
  402128:	cmp    eax,0xc0000093
  40212d:	jne    0x4021ae
  40212f:	xor    edx,edx
  402131:	mov    ecx,0x8
  402136:	call   0x402b28
  40213b:	cmp    rax,0x1
  40213f:	mov    rdx,rax
  402142:	je     0x4021b8
  402144:	test   rdx,rdx
  402147:	mov    eax,0x1
  40214c:	je     0x402103
  40214e:	mov    ecx,0x8
  402153:	call   rdx
  402155:	xor    eax,eax
  402157:	add    rsp,0x28
  40215b:	ret    
  40215c:	nop    DWORD PTR [rax+0x0]
  402160:	cmp    eax,0xc0000095
  402165:	je     0x4021d0
  402167:	cmp    eax,0xc0000096
  40216c:	jne    0x4021ae
  40216e:	xor    edx,edx
  402170:	mov    ecx,0x4
  402175:	call   0x402b28
  40217a:	cmp    rax,0x1
  40217e:	je     0x40221a
  402184:	test   rax,rax
  402187:	je     0x402210
  40218d:	mov    ecx,0x4
  402192:	call   rax
  402194:	xor    eax,eax
  402196:	jmp    0x402103
  40219b:	nop    DWORD PTR [rax+rax*1+0x0]
  4021a0:	cmp    eax,0xc000001d
  4021a5:	je     0x40216e
  4021a7:	cmp    eax,0xc000008c
  4021ac:	je     0x4021d0
  4021ae:	mov    eax,0x1
  4021b3:	add    rsp,0x28
  4021b7:	ret    
  4021b8:	mov    edx,0x1
  4021bd:	mov    ecx,0x8
  4021c2:	call   0x402b28
  4021c7:	call   0x401b90
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	xor    eax,eax
  4021d2:	add    rsp,0x28
  4021d6:	ret    
  4021d7:	nop    WORD PTR [rax+rax*1+0x0]
  4021e0:	xor    edx,edx
  4021e2:	mov    ecx,0x8
  4021e7:	call   0x402b28
  4021ec:	cmp    rax,0x1
  4021f0:	mov    rdx,rax
  4021f3:	jne    0x402144
  4021f9:	mov    edx,0x1
  4021fe:	mov    ecx,0x8
  402203:	call   0x402b28
  402208:	xor    eax,eax
  40220a:	jmp    0x402103
  40220f:	nop
  402210:	mov    eax,0x4
  402215:	add    rsp,0x28
  402219:	ret    
  40221a:	mov    edx,0x1
  40221f:	mov    ecx,0x4
  402224:	call   0x402b28
  402229:	xor    eax,eax
  40222b:	jmp    0x402103
  402230:	mov    edx,0x1
  402235:	mov    ecx,0xb
  40223a:	call   0x402b28
  40223f:	xor    eax,eax
  402241:	jmp    0x402103
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402250:	push   r12
  402252:	push   rbp
  402253:	push   rdi
  402254:	push   rsi
  402255:	push   rbx
  402256:	sub    rsp,0x20
  40225a:	call   0x4029c0
  40225f:	mov    rbp,rax
  402262:	mov    eax,DWORD PTR [rip+0x6460]        # 0x4086c8
  402268:	test   eax,eax
  40226a:	jne    0x402291
  40226c:	test   rbp,rbp
  40226f:	je     0x402291
  402271:	lea    rcx,[rip+0x3098]        # 0x405310
  402278:	mov    DWORD PTR [rip+0x6446],0x1        # 0x4086c8
  402282:	call   0x402800
  402287:	test   rax,rax
  40228a:	je     0x4022a0
  40228c:	mov    eax,0x1
  402291:	add    rsp,0x20
  402295:	pop    rbx
  402296:	pop    rsi
  402297:	pop    rdi
  402298:	pop    rbp
  402299:	pop    r12
  40229b:	ret    
  40229c:	nop    DWORD PTR [rax+0x0]
  4022a0:	lea    rbx,[rip+0x6559]        # 0x408800
  4022a7:	mov    ecx,0x30
  4022ac:	lea    rdx,[rip+0x644d]        # 0x408700
  4022b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4020a0
  4022ba:	xor    esi,esi
  4022bc:	mov    rdi,rbx
  4022bf:	rep stos QWORD PTR es:[rdi],rax
  4022c2:	mov    rdi,rdx
  4022c5:	sub    r12,rbp
  4022c8:	mov    cl,0x20
  4022ca:	rep stos QWORD PTR es:[rdi],rax
  4022cd:	mov    rdi,rdx
  4022d0:	jmp    0x402300
  4022d2:	mov    BYTE PTR [rdi],0x9
  4022d5:	mov    DWORD PTR [rdi+0x4],r12d
  4022d9:	add    rsi,0x1
  4022dd:	mov    edx,DWORD PTR [rax+0xc]
  4022e0:	add    rbx,0xc
  4022e4:	mov    DWORD PTR [rbx-0xc],edx
  4022e7:	add    edx,DWORD PTR [rax+0x8]
  4022ea:	mov    rax,rdi
  4022ed:	sub    rax,rbp
  4022f0:	add    rdi,0x8
  4022f4:	mov    DWORD PTR [rbx-0x4],eax
  4022f7:	mov    DWORD PTR [rbx-0x8],edx
  4022fa:	cmp    rsi,0x20
  4022fe:	je     0x402335
  402300:	mov    rcx,rsi
  402303:	call   0x402930
  402308:	test   rax,rax
  40230b:	jne    0x4022d2
  40230d:	test   rsi,rsi
  402310:	je     0x40228c
  402316:	mov    edx,esi
  402318:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	mov    r8,rbp
  402323:	lea    rcx,[rip+0x64d6]        # 0x408800
  40232a:	call   QWORD PTR [rip+0x80d0]        # 0x40a400
  402330:	jmp    0x40228c
  402335:	mov    edx,0x20
  40233a:	jmp    0x402320
  40233c:	nop    DWORD PTR [rax+0x0]
  402340:	push   rbx
  402341:	sub    rsp,0x20
  402345:	mov    rdx,QWORD PTR [rcx]
  402348:	mov    eax,DWORD PTR [rdx]
  40234a:	mov    r8d,eax
  40234d:	and    r8d,0x20ffffff
  402354:	cmp    r8d,0x20474343
  40235b:	je     0x402460
  402361:	cmp    eax,0xc0000091
  402366:	mov    rbx,rcx
  402369:	ja     0x4023f0
  40236f:	cmp    eax,0xc000008d
  402374:	jae    0x402407
  40237a:	cmp    eax,0xc0000008
  40237f:	je     0x4023b3
  402381:	ja     0x4023c0
  402383:	cmp    eax,0x80000002
  402388:	je     0x4023b3
  40238a:	cmp    eax,0xc0000005
  40238f:	jne    0x4023d2
  402391:	xor    edx,edx
  402393:	mov    ecx,0xb
  402398:	call   0x402b28
  40239d:	cmp    rax,0x1
  4023a1:	je     0x4024d0
  4023a7:	test   rax,rax
  4023aa:	je     0x4023d2
  4023ac:	mov    ecx,0xb
  4023b1:	call   rax
  4023b3:	mov    eax,0xffffffff
  4023b8:	add    rsp,0x20
  4023bc:	pop    rbx
  4023bd:	ret    
  4023be:	xchg   ax,ax
  4023c0:	cmp    eax,0xc000001d
  4023c5:	je     0x402486
  4023cb:	cmp    eax,0xc000008c
  4023d0:	je     0x4023b3
  4023d2:	mov    rax,QWORD PTR [rip+0x62e7]        # 0x4086c0
  4023d9:	test   rax,rax
  4023dc:	je     0x4023b8
  4023de:	mov    rcx,rbx
  4023e1:	add    rsp,0x20
  4023e5:	pop    rbx
  4023e6:	rex.W jmp rax
  4023e9:	nop    DWORD PTR [rax+0x0]
  4023f0:	cmp    eax,0xc0000094
  4023f5:	je     0x402432
  4023f7:	ja     0x402470
  4023f9:	cmp    eax,0xc0000092
  4023fe:	je     0x4023b3
  402400:	cmp    eax,0xc0000093
  402405:	jne    0x4023d2
  402407:	xor    edx,edx
  402409:	mov    ecx,0x8
  40240e:	call   0x402b28
  402413:	cmp    rax,0x1
  402417:	jne    0x402444
  402419:	mov    edx,0x1
  40241e:	mov    ecx,0x8
  402423:	call   0x402b28
  402428:	call   0x401b90
  40242d:	jmp    0x4023b3
  402432:	xor    edx,edx
  402434:	mov    ecx,0x8
  402439:	call   0x402b28
  40243e:	cmp    rax,0x1
  402442:	je     0x4024b2
  402444:	test   rax,rax
  402447:	je     0x4023d2
  402449:	mov    ecx,0x8
  40244e:	call   rax
  402450:	mov    eax,0xffffffff
  402455:	jmp    0x4023b8
  40245a:	nop    WORD PTR [rax+rax*1+0x0]
  402460:	test   BYTE PTR [rdx+0x4],0x1
  402464:	jne    0x402361
  40246a:	jmp    0x4023b3
  40246f:	nop
  402470:	cmp    eax,0xc0000095
  402475:	je     0x4023b3
  40247b:	cmp    eax,0xc0000096
  402480:	jne    0x4023d2
  402486:	xor    edx,edx
  402488:	mov    ecx,0x4
  40248d:	call   0x402b28
  402492:	cmp    rax,0x1
  402496:	je     0x4024e4
  402498:	test   rax,rax
  40249b:	je     0x4023d2
  4024a1:	mov    ecx,0x4
  4024a6:	call   rax
  4024a8:	mov    eax,0xffffffff
  4024ad:	jmp    0x4023b8
  4024b2:	mov    edx,0x1
  4024b7:	mov    ecx,0x8
  4024bc:	call   0x402b28
  4024c1:	jmp    0x4023b3
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	mov    edx,0x1
  4024d5:	mov    ecx,0xb
  4024da:	call   0x402b28
  4024df:	jmp    0x4023b3
  4024e4:	mov    edx,0x1
  4024e9:	mov    ecx,0x4
  4024ee:	call   0x402b28
  4024f3:	jmp    0x4023b3
  4024f8:	nop
  4024f9:	nop
  4024fa:	nop
  4024fb:	nop
  4024fc:	nop
  4024fd:	nop
  4024fe:	nop
  4024ff:	nop
  402500:	push   rbp
  402501:	push   rdi
  402502:	push   rsi
  402503:	push   rbx
  402504:	sub    rsp,0x28
  402508:	lea    rcx,[rip+0x6491]        # 0x4089a0
  40250f:	call   QWORD PTR [rip+0x7e93]        # 0x40a3a8
  402515:	mov    rbx,QWORD PTR [rip+0x6464]        # 0x408980
  40251c:	test   rbx,rbx
  40251f:	je     0x402554
  402521:	mov    rbp,QWORD PTR [rip+0x7f10]        # 0x40a438
  402528:	mov    rdi,QWORD PTR [rip+0x7e99]        # 0x40a3c8
  40252f:	nop
  402530:	mov    ecx,DWORD PTR [rbx]
  402532:	call   rbp
  402534:	mov    rsi,rax
  402537:	call   rdi
  402539:	test   eax,eax
  40253b:	jne    0x40254b
  40253d:	test   rsi,rsi
  402540:	je     0x40254b
  402542:	mov    rax,QWORD PTR [rbx+0x8]
  402546:	mov    rcx,rsi
  402549:	call   rax
  40254b:	mov    rbx,QWORD PTR [rbx+0x10]
  40254f:	test   rbx,rbx
  402552:	jne    0x402530
  402554:	mov    rax,QWORD PTR [rip+0x7e95]        # 0x40a3f0
  40255b:	lea    rcx,[rip+0x643e]        # 0x4089a0
  402562:	add    rsp,0x28
  402566:	pop    rbx
  402567:	pop    rsi
  402568:	pop    rdi
  402569:	pop    rbp
  40256a:	rex.W jmp rax
  40256d:	nop    DWORD PTR [rax]
  402570:	push   rdi
  402571:	push   rsi
  402572:	push   rbx
  402573:	sub    rsp,0x20
  402577:	mov    eax,DWORD PTR [rip+0x640b]        # 0x408988
  40257d:	test   eax,eax
  40257f:	jne    0x402590
  402581:	add    rsp,0x20
  402585:	pop    rbx
  402586:	pop    rsi
  402587:	pop    rdi
  402588:	ret    
  402589:	nop    DWORD PTR [rax+0x0]
  402590:	mov    rsi,rdx
  402593:	mov    edi,ecx
  402595:	mov    edx,0x18
  40259a:	mov    ecx,0x1
  40259f:	call   0x402b68
  4025a4:	test   rax,rax
  4025a7:	mov    rbx,rax
  4025aa:	je     0x4025e8
  4025ac:	mov    DWORD PTR [rax],edi
  4025ae:	mov    QWORD PTR [rax+0x8],rsi
  4025b2:	lea    rcx,[rip+0x63e7]        # 0x4089a0
  4025b9:	call   QWORD PTR [rip+0x7de9]        # 0x40a3a8
  4025bf:	mov    rax,QWORD PTR [rip+0x63ba]        # 0x408980
  4025c6:	lea    rcx,[rip+0x63d3]        # 0x4089a0
  4025cd:	mov    QWORD PTR [rip+0x63ac],rbx        # 0x408980
  4025d4:	mov    QWORD PTR [rbx+0x10],rax
  4025d8:	call   QWORD PTR [rip+0x7e12]        # 0x40a3f0
  4025de:	xor    eax,eax
  4025e0:	add    rsp,0x20
  4025e4:	pop    rbx
  4025e5:	pop    rsi
  4025e6:	pop    rdi
  4025e7:	ret    
  4025e8:	mov    eax,0xffffffff
  4025ed:	jmp    0x402581
  4025ef:	nop
  4025f0:	push   rbx
  4025f1:	sub    rsp,0x20
  4025f5:	mov    eax,DWORD PTR [rip+0x638d]        # 0x408988
  4025fb:	test   eax,eax
  4025fd:	jne    0x402610
  4025ff:	xor    eax,eax
  402601:	add    rsp,0x20
  402605:	pop    rbx
  402606:	ret    
  402607:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	mov    ebx,ecx
  402612:	lea    rcx,[rip+0x6387]        # 0x4089a0
  402619:	call   QWORD PTR [rip+0x7d89]        # 0x40a3a8
  40261f:	mov    rdx,QWORD PTR [rip+0x635a]        # 0x408980
  402626:	test   rdx,rdx
  402629:	je     0x402647
  40262b:	mov    eax,DWORD PTR [rdx]
  40262d:	cmp    eax,ebx
  40262f:	jne    0x40263e
  402631:	jmp    0x40267f
  402633:	mov    r8d,DWORD PTR [rax]
  402636:	cmp    r8d,ebx
  402639:	je     0x402660
  40263b:	mov    rdx,rax
  40263e:	mov    rax,QWORD PTR [rdx+0x10]
  402642:	test   rax,rax
  402645:	jne    0x402633
  402647:	lea    rcx,[rip+0x6352]        # 0x4089a0
  40264e:	call   QWORD PTR [rip+0x7d9c]        # 0x40a3f0
  402654:	xor    eax,eax
  402656:	add    rsp,0x20
  40265a:	pop    rbx
  40265b:	ret    
  40265c:	nop    DWORD PTR [rax+0x0]
  402660:	mov    rcx,rax
  402663:	mov    rax,QWORD PTR [rax+0x10]
  402667:	mov    QWORD PTR [rdx+0x10],rax
  40266b:	call   0x402b50
  402670:	lea    rcx,[rip+0x6329]        # 0x4089a0
  402677:	call   QWORD PTR [rip+0x7d73]        # 0x40a3f0
  40267d:	jmp    0x402654
  40267f:	mov    rax,QWORD PTR [rdx+0x10]
  402683:	mov    rcx,rdx
  402686:	mov    QWORD PTR [rip+0x62f3],rax        # 0x408980
  40268d:	jmp    0x40266b
  40268f:	nop
  402690:	push   rbx
  402691:	sub    rsp,0x20
  402695:	cmp    edx,0x1
  402698:	je     0x402730
  40269e:	jb     0x4026d0
  4026a0:	cmp    edx,0x2
  4026a3:	je     0x4026c0
  4026a5:	cmp    edx,0x3
  4026a8:	jne    0x4026c5
  4026aa:	mov    eax,DWORD PTR [rip+0x62d8]        # 0x408988
  4026b0:	test   eax,eax
  4026b2:	je     0x4026c5
  4026b4:	call   0x402500
  4026b9:	jmp    0x4026c5
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	call   0x401b90
  4026c5:	mov    eax,0x1
  4026ca:	add    rsp,0x20
  4026ce:	pop    rbx
  4026cf:	ret    
  4026d0:	mov    eax,DWORD PTR [rip+0x62b2]        # 0x408988
  4026d6:	test   eax,eax
  4026d8:	jne    0x402760
  4026de:	mov    eax,DWORD PTR [rip+0x62a4]        # 0x408988
  4026e4:	cmp    eax,0x1
  4026e7:	jne    0x4026c5
  4026e9:	mov    rcx,QWORD PTR [rip+0x6290]        # 0x408980
  4026f0:	test   rcx,rcx
  4026f3:	je     0x402706
  4026f5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026f9:	call   0x402b50
  4026fe:	test   rbx,rbx
  402701:	mov    rcx,rbx
  402704:	jne    0x4026f5
  402706:	lea    rcx,[rip+0x6293]        # 0x4089a0
  40270d:	mov    QWORD PTR [rip+0x6268],0x0        # 0x408980
  402718:	mov    DWORD PTR [rip+0x6266],0x0        # 0x408988
  402722:	call   QWORD PTR [rip+0x7c78]        # 0x40a3a0
  402728:	jmp    0x4026c5
  40272a:	nop    WORD PTR [rax+rax*1+0x0]
  402730:	mov    eax,DWORD PTR [rip+0x6252]        # 0x408988
  402736:	test   eax,eax
  402738:	je     0x402750
  40273a:	mov    eax,0x1
  40273f:	mov    DWORD PTR [rip+0x623f],0x1        # 0x408988
  402749:	add    rsp,0x20
  40274d:	pop    rbx
  40274e:	ret    
  40274f:	nop
  402750:	lea    rcx,[rip+0x6249]        # 0x4089a0
  402757:	call   QWORD PTR [rip+0x7c8b]        # 0x40a3e8
  40275d:	jmp    0x40273a
  40275f:	nop
  402760:	call   0x402500
  402765:	jmp    0x4026de
  40276a:	nop
  40276b:	nop
  40276c:	nop
  40276d:	nop
  40276e:	nop
  40276f:	nop
  402770:	movsxd rax,DWORD PTR [rcx+0x3c]
  402774:	add    rcx,rax
  402777:	xor    eax,eax
  402779:	cmp    DWORD PTR [rcx],0x4550
  40277f:	je     0x402783
  402781:	repz ret 
  402783:	xor    eax,eax
  402785:	cmp    WORD PTR [rcx+0x18],0x20b
  40278b:	sete   al
  40278e:	ret    
  40278f:	nop
  402790:	cmp    WORD PTR [rcx],0x5a4d
  402795:	je     0x4027a0
  402797:	xor    eax,eax
  402799:	ret    
  40279a:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	jmp    0x402770
  4027a2:	nop    DWORD PTR [rax+0x0]
  4027a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027b4:	add    rcx,rax
  4027b7:	movzx  eax,WORD PTR [rcx+0x14]
  4027bb:	lea    rax,[rcx+rax*1+0x18]
  4027c0:	movzx  ecx,WORD PTR [rcx+0x6]
  4027c4:	test   ecx,ecx
  4027c6:	je     0x4027f1
  4027c8:	sub    ecx,0x1
  4027cb:	lea    rcx,[rcx+rcx*4]
  4027cf:	lea    r9,[rax+rcx*8+0x28]
  4027d4:	mov    r8d,DWORD PTR [rax+0xc]
  4027d8:	cmp    r8,rdx
  4027db:	mov    rcx,r8
  4027de:	ja     0x4027e8
  4027e0:	add    ecx,DWORD PTR [rax+0x8]
  4027e3:	cmp    rdx,rcx
  4027e6:	jb     0x4027f3
  4027e8:	add    rax,0x28
  4027ec:	cmp    rax,r9
  4027ef:	jne    0x4027d4
  4027f1:	xor    eax,eax
  4027f3:	repz ret 
  4027f5:	nop
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	push   rdi
  402801:	push   rsi
  402802:	push   rbx
  402803:	sub    rsp,0x20
  402807:	mov    rsi,rcx
  40280a:	call   0x402b20
  40280f:	cmp    rax,0x8
  402813:	ja     0x402830
  402815:	mov    rbx,QWORD PTR [rip+0x2b94]        # 0x4053b0
  40281c:	xor    edi,edi
  40281e:	cmp    WORD PTR [rbx],0x5a4d
  402823:	je     0x402840
  402825:	mov    rax,rdi
  402828:	add    rsp,0x20
  40282c:	pop    rbx
  40282d:	pop    rsi
  40282e:	pop    rdi
  40282f:	ret    
  402830:	xor    edi,edi
  402832:	mov    rax,rdi
  402835:	add    rsp,0x20
  402839:	pop    rbx
  40283a:	pop    rsi
  40283b:	pop    rdi
  40283c:	ret    
  40283d:	nop    DWORD PTR [rax]
  402840:	mov    rcx,rbx
  402843:	call   0x402770
  402848:	test   eax,eax
  40284a:	je     0x402825
  40284c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402850:	add    rdx,rbx
  402853:	movzx  eax,WORD PTR [rdx+0x14]
  402857:	lea    rbx,[rdx+rax*1+0x18]
  40285c:	movzx  eax,WORD PTR [rdx+0x6]
  402860:	test   eax,eax
  402862:	je     0x402825
  402864:	sub    eax,0x1
  402867:	lea    rax,[rax+rax*4]
  40286b:	lea    rdi,[rbx+rax*8+0x28]
  402870:	jmp    0x40287b
  402872:	add    rbx,0x28
  402876:	cmp    rbx,rdi
  402879:	je     0x402830
  40287b:	mov    r8d,0x8
  402881:	mov    rdx,rsi
  402884:	mov    rcx,rbx
  402887:	call   0x402b18
  40288c:	test   eax,eax
  40288e:	jne    0x402872
  402890:	mov    rdi,rbx
  402893:	mov    rax,rdi
  402896:	add    rsp,0x20
  40289a:	pop    rbx
  40289b:	pop    rsi
  40289c:	pop    rdi
  40289d:	ret    
  40289e:	xchg   ax,ax
  4028a0:	push   rsi
  4028a1:	push   rbx
  4028a2:	sub    rsp,0x28
  4028a6:	mov    rbx,QWORD PTR [rip+0x2b03]        # 0x4053b0
  4028ad:	cmp    WORD PTR [rbx],0x5a4d
  4028b2:	je     0x4028c0
  4028b4:	xor    eax,eax
  4028b6:	add    rsp,0x28
  4028ba:	pop    rbx
  4028bb:	pop    rsi
  4028bc:	ret    
  4028bd:	nop    DWORD PTR [rax]
  4028c0:	mov    rsi,rcx
  4028c3:	mov    rcx,rbx
  4028c6:	call   0x402770
  4028cb:	test   eax,eax
  4028cd:	je     0x4028b4
  4028cf:	sub    rsi,rbx
  4028d2:	mov    rcx,rbx
  4028d5:	mov    rdx,rsi
  4028d8:	add    rsp,0x28
  4028dc:	pop    rbx
  4028dd:	pop    rsi
  4028de:	jmp    0x4027b0
  4028e3:	nop    DWORD PTR [rax]
  4028e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028f0:	push   rbx
  4028f1:	sub    rsp,0x20
  4028f5:	mov    rbx,QWORD PTR [rip+0x2ab4]        # 0x4053b0
  4028fc:	xor    eax,eax
  4028fe:	cmp    WORD PTR [rbx],0x5a4d
  402903:	je     0x402910
  402905:	add    rsp,0x20
  402909:	pop    rbx
  40290a:	ret    
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	mov    rcx,rbx
  402913:	call   0x402770
  402918:	test   eax,eax
  40291a:	je     0x402905
  40291c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402920:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402925:	add    rsp,0x20
  402929:	pop    rbx
  40292a:	ret    
  40292b:	nop    DWORD PTR [rax+rax*1+0x0]
  402930:	push   rdi
  402931:	push   rsi
  402932:	push   rbx
  402933:	sub    rsp,0x20
  402937:	mov    rsi,QWORD PTR [rip+0x2a72]        # 0x4053b0
  40293e:	xor    edi,edi
  402940:	mov    rbx,rcx
  402943:	cmp    WORD PTR [rsi],0x5a4d
  402948:	je     0x402955
  40294a:	mov    rax,rdi
  40294d:	add    rsp,0x20
  402951:	pop    rbx
  402952:	pop    rsi
  402953:	pop    rdi
  402954:	ret    
  402955:	mov    rcx,rsi
  402958:	call   0x402770
  40295d:	test   eax,eax
  40295f:	je     0x40294a
  402961:	movsxd rax,DWORD PTR [rsi+0x3c]
  402965:	add    rsi,rax
  402968:	movzx  eax,WORD PTR [rsi+0x14]
  40296c:	lea    rdx,[rsi+rax*1+0x18]
  402971:	movzx  eax,WORD PTR [rsi+0x6]
  402975:	test   eax,eax
  402977:	je     0x40294a
  402979:	sub    eax,0x1
  40297c:	lea    rax,[rax+rax*4]
  402980:	lea    rax,[rdx+rax*8+0x28]
  402985:	test   BYTE PTR [rdx+0x27],0x20
  402989:	je     0x402994
  40298b:	test   rbx,rbx
  40298e:	je     0x4029b0
  402990:	sub    rbx,0x1
  402994:	add    rdx,0x28
  402998:	cmp    rdx,rax
  40299b:	jne    0x402985
  40299d:	xor    edi,edi
  40299f:	mov    rax,rdi
  4029a2:	add    rsp,0x20
  4029a6:	pop    rbx
  4029a7:	pop    rsi
  4029a8:	pop    rdi
  4029a9:	ret    
  4029aa:	nop    WORD PTR [rax+rax*1+0x0]
  4029b0:	mov    rdi,rdx
  4029b3:	mov    rax,rdi
  4029b6:	add    rsp,0x20
  4029ba:	pop    rbx
  4029bb:	pop    rsi
  4029bc:	pop    rdi
  4029bd:	ret    
  4029be:	xchg   ax,ax
  4029c0:	push   rsi
  4029c1:	push   rbx
  4029c2:	sub    rsp,0x28
  4029c6:	mov    rsi,QWORD PTR [rip+0x29e3]        # 0x4053b0
  4029cd:	xor    ebx,ebx
  4029cf:	cmp    WORD PTR [rsi],0x5a4d
  4029d4:	je     0x4029e0
  4029d6:	mov    rax,rbx
  4029d9:	add    rsp,0x28
  4029dd:	pop    rbx
  4029de:	pop    rsi
  4029df:	ret    
  4029e0:	mov    rcx,rsi
  4029e3:	call   0x402770
  4029e8:	test   eax,eax
  4029ea:	cmovne rbx,rsi
  4029ee:	mov    rax,rbx
  4029f1:	add    rsp,0x28
  4029f5:	pop    rbx
  4029f6:	pop    rsi
  4029f7:	ret    
  4029f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	push   rsi
  402a01:	push   rbx
  402a02:	sub    rsp,0x28
  402a06:	mov    rbx,QWORD PTR [rip+0x29a3]        # 0x4053b0
  402a0d:	xor    eax,eax
  402a0f:	cmp    WORD PTR [rbx],0x5a4d
  402a14:	je     0x402a20
  402a16:	add    rsp,0x28
  402a1a:	pop    rbx
  402a1b:	pop    rsi
  402a1c:	ret    
  402a1d:	nop    DWORD PTR [rax]
  402a20:	mov    rsi,rcx
  402a23:	mov    rcx,rbx
  402a26:	call   0x402770
  402a2b:	test   eax,eax
  402a2d:	je     0x402a16
  402a2f:	sub    rsi,rbx
  402a32:	mov    rcx,rbx
  402a35:	mov    rdx,rsi
  402a38:	call   0x4027b0
  402a3d:	test   rax,rax
  402a40:	je     0x402a51
  402a42:	mov    eax,DWORD PTR [rax+0x24]
  402a45:	not    eax
  402a47:	shr    eax,0x1f
  402a4a:	add    rsp,0x28
  402a4e:	pop    rbx
  402a4f:	pop    rsi
  402a50:	ret    
  402a51:	xor    eax,eax
  402a53:	jmp    0x402a16
  402a55:	nop
  402a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a60:	push   rbp
  402a61:	push   rdi
  402a62:	push   rsi
  402a63:	push   rbx
  402a64:	sub    rsp,0x28
  402a68:	mov    rdi,QWORD PTR [rip+0x2941]        # 0x4053b0
  402a6f:	xor    ebp,ebp
  402a71:	mov    esi,ecx
  402a73:	cmp    WORD PTR [rdi],0x5a4d
  402a78:	je     0x402a90
  402a7a:	mov    rax,rbp
  402a7d:	add    rsp,0x28
  402a81:	pop    rbx
  402a82:	pop    rsi
  402a83:	pop    rdi
  402a84:	pop    rbp
  402a85:	ret    
  402a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a90:	mov    rcx,rdi
  402a93:	call   0x402770
  402a98:	test   eax,eax
  402a9a:	je     0x402a7a
  402a9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402aa0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402aa7:	test   edx,edx
  402aa9:	je     0x402a7a
  402aab:	mov    ebx,edx
  402aad:	mov    rcx,rdi
  402ab0:	mov    rdx,rbx
  402ab3:	call   0x4027b0
  402ab8:	test   rax,rax
  402abb:	je     0x402a7a
  402abd:	add    rbx,rdi
  402ac0:	mov    rdx,rbx
  402ac3:	jne    0x402ad7
  402ac5:	jmp    0x402a7a
  402ac7:	nop    WORD PTR [rax+rax*1+0x0]
  402ad0:	sub    esi,0x1
  402ad3:	add    rdx,0x14
  402ad7:	mov    ecx,DWORD PTR [rdx+0x4]
  402ada:	test   ecx,ecx
  402adc:	jne    0x402ae5
  402ade:	mov    eax,DWORD PTR [rdx+0xc]
  402ae1:	test   eax,eax
  402ae3:	je     0x402b00
  402ae5:	test   esi,esi
  402ae7:	jg     0x402ad0
  402ae9:	mov    ebp,DWORD PTR [rdx+0xc]
  402aec:	add    rbp,rdi
  402aef:	mov    rax,rbp
  402af2:	add    rsp,0x28
  402af6:	pop    rbx
  402af7:	pop    rsi
  402af8:	pop    rdi
  402af9:	pop    rbp
  402afa:	ret    
  402afb:	nop    DWORD PTR [rax+rax*1+0x0]
  402b00:	xor    ebp,ebp
  402b02:	mov    rax,rbp
  402b05:	add    rsp,0x28
  402b09:	pop    rbx
  402b0a:	pop    rsi
  402b0b:	pop    rdi
  402b0c:	pop    rbp
  402b0d:	ret    
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x7a2a]        # 0x40a540
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x7a1a]        # 0x40a538
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x7a0a]        # 0x40a530
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x79fa]        # 0x40a528
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x79ea]        # 0x40a520
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x79da]        # 0x40a518
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x79ca]        # 0x40a510
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x79ba]        # 0x40a508
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x79aa]        # 0x40a500
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x799a]        # 0x40a4f8
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x798a]        # 0x40a4f0
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x797a]        # 0x40a4e8
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x796a]        # 0x40a4e0
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x795a]        # 0x40a4d8
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x794a]        # 0x40a4d0
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x793a]        # 0x40a4c8
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x792a]        # 0x40a4c0
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x7912]        # 0x40a4b0
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x7902]        # 0x40a4a8
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x78ea]        # 0x40a498
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x78da]        # 0x40a490
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x78ca]        # 0x40a488
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x78ba]        # 0x40a480
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x78a2]        # 0x40a470
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x7892]        # 0x40a468
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0x7882]        # 0x40a460
  402bde:	nop
  402bdf:	nop
  402be0:	mov    rax,QWORD PTR [rip+0x5e09]        # 0x4089f0
  402be7:	ret    
  402be8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	mov    rax,rcx
  402bf3:	xchg   QWORD PTR [rip+0x5df6],rax        # 0x4089f0
  402bfa:	ret    
  402bfb:	nop
  402bfc:	nop
  402bfd:	nop
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x784a]        # 0x40a450
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x783a]        # 0x40a448
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x782a]        # 0x40a440
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x781a]        # 0x40a438
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x780a]        # 0x40a430
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x77fa]        # 0x40a428
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x77ea]        # 0x40a420
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x77da]        # 0x40a418
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x77ca]        # 0x40a410
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x77ba]        # 0x40a408
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x77aa]        # 0x40a400
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x779a]        # 0x40a3f8
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x778a]        # 0x40a3f0
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x777a]        # 0x40a3e8
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x776a]        # 0x40a3e0
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x775a]        # 0x40a3d8
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x774a]        # 0x40a3d0
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x773a]        # 0x40a3c8
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x772a]        # 0x40a3c0
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x771a]        # 0x40a3b8
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x770a]        # 0x40a3b0
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x76fa]        # 0x40a3a8
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x76ea]        # 0x40a3a0
  402cb6:	nop
  402cb7:	nop
  402cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	jmp    QWORD PTR [rip+0x767a]        # 0x40a340
  402cc6:	nop
  402cc7:	nop
  402cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd0:	push   rcx
  402cd1:	push   rax
  402cd2:	cmp    rax,0x1000
  402cd8:	lea    rcx,[rsp+0x18]
  402cdd:	jb     0x402cf8
  402cdf:	sub    rcx,0x1000
  402ce6:	or     QWORD PTR [rcx],0x0
  402cea:	sub    rax,0x1000
  402cf0:	cmp    rax,0x1000
  402cf6:	ja     0x402cdf
  402cf8:	sub    rcx,rax
  402cfb:	or     QWORD PTR [rcx],0x0
  402cff:	pop    rax
  402d00:	pop    rcx
  402d01:	ret    
  402d02:	nop
  402d03:	nop
  402d04:	nop
  402d05:	nop
  402d06:	nop
  402d07:	nop
  402d08:	nop
  402d09:	nop
  402d0a:	nop
  402d0b:	nop
  402d0c:	nop
  402d0d:	nop
  402d0e:	nop
  402d0f:	nop
  402d10:	sub    rsp,0x28
  402d14:	mov    rcx,QWORD PTR [rcx]
  402d17:	mov    rdx,QWORD PTR [rdx]
  402d1a:	xor    eax,eax
  402d1c:	mov    r8,QWORD PTR [rcx-0x18]
  402d20:	cmp    r8,QWORD PTR [rdx-0x18]
  402d24:	je     0x402d30
  402d26:	add    rsp,0x28
  402d2a:	ret    
  402d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d30:	call   0x402b38
  402d35:	test   eax,eax
  402d37:	sete   al
  402d3a:	add    rsp,0x28
  402d3e:	ret    
  402d3f:	nop
  402d40:	push   r14
  402d42:	push   r13
  402d44:	push   r12
  402d46:	push   rbp
  402d47:	push   rdi
  402d48:	push   rsi
  402d49:	push   rbx
  402d4a:	sub    rsp,0x150
  402d51:	lea    rsi,[rsp+0x30]
  402d56:	lea    rbp,[rsp+0x40]
  402d5b:	mov    r13d,ecx
  402d5e:	mov    r12,rdx
  402d61:	call   0x401760
  402d66:	mov    rcx,rsi
  402d69:	call   0x401540
  402d6e:	mov    rcx,rbp
  402d71:	call   0x4015a0
  402d76:	lea    rdi,[rsp+0x50]
  402d7b:	mov    rcx,rdi
  402d7e:	call   0x401590
  402d83:	lea    rbx,[rsp+0x60]
  402d88:	mov    rcx,rbx
  402d8b:	call   0x401578
  402d90:	mov    rdx,rbp
  402d93:	mov    rcx,rsi
  402d96:	mov    r14d,0x1
  402d9c:	call   0x402d10
  402da1:	test   al,al
  402da3:	je     0x402f7d
  402da9:	mov    rdx,rdi
  402dac:	mov    rcx,rsi
  402daf:	call   0x402d10
  402db4:	test   al,al
  402db6:	je     0x402eae
  402dbc:	mov    rdx,rbx
  402dbf:	mov    rcx,rsi
  402dc2:	call   0x402d10
  402dc7:	test   al,al
  402dc9:	je     0x402f18
  402dcf:	test   r14b,r14b
  402dd2:	je     0x402f73
  402dd8:	mov    rax,QWORD PTR [rsp+0x60]
  402ddd:	lea    rsi,[rsp+0x2f]
  402de2:	mov    rdx,rsi
  402de5:	lea    rcx,[rax-0x18]
  402de9:	call   0x4015e0
  402dee:	mov    rax,QWORD PTR [rsp+0x50]
  402df3:	mov    rdx,rsi
  402df6:	lea    rcx,[rax-0x18]
  402dfa:	call   0x4015e0
  402dff:	mov    rax,QWORD PTR [rsp+0x40]
  402e04:	mov    rdx,rsi
  402e07:	lea    rcx,[rax-0x18]
  402e0b:	call   0x4015e0
  402e10:	mov    rax,QWORD PTR [rsp+0x30]
  402e15:	mov    rdx,rsi
  402e18:	lea    rcx,[rax-0x18]
  402e1c:	call   0x4015e0
  402e21:	mov    rdx,QWORD PTR [r12]
  402e25:	mov    rcx,rbx
  402e28:	mov    r8,rbp
  402e2b:	call   0x4015d8
  402e30:	mov    rcx,rbx
  402e33:	call   0x401598
  402e38:	mov    rax,QWORD PTR [rsp+0x60]
  402e3d:	mov    rdx,rdi
  402e40:	lea    rcx,[rax-0x18]
  402e44:	call   0x4015e0
  402e49:	mov    rcx,rbx
  402e4c:	mov    r8,r12
  402e4f:	mov    edx,r13d
  402e52:	call   0x401588
  402e57:	mov    rsi,QWORD PTR [rip+0x2502]        # 0x405360
  402e5e:	mov    rcx,rbx
  402e61:	mov    DWORD PTR [rsp+0x138],r13d
  402e69:	mov    QWORD PTR [rsp+0x140],r12
  402e71:	mov    BYTE PTR [rsp+0x148],0x0
  402e79:	lea    rax,[rsi+0x10]
  402e7d:	mov    QWORD PTR [rsp+0x60],rax
  402e82:	call   0x401570
  402e87:	mov    edi,eax
  402e89:	add    rsi,0x10
  402e8d:	mov    rcx,rbx
  402e90:	mov    QWORD PTR [rsp+0x60],rsi
  402e95:	call   0x401580
  402e9a:	mov    eax,edi
  402e9c:	add    rsp,0x150
  402ea3:	pop    rbx
  402ea4:	pop    rsi
  402ea5:	pop    rdi
  402ea6:	pop    rbp
  402ea7:	pop    r12
  402ea9:	pop    r13
  402eab:	pop    r14
  402ead:	ret    
  402eae:	mov    rcx,QWORD PTR [rip+0x249b]        # 0x405350
  402eb5:	lea    rdx,[rip+0x2144]        # 0x405000
  402ebc:	call   0x4015b0
  402ec1:	mov    rdx,QWORD PTR [rsp+0x30]
  402ec6:	mov    rcx,rax
  402ec9:	mov    r8,QWORD PTR [rdx-0x18]
  402ecd:	call   0x4015c0
  402ed2:	lea    rdx,[rip+0x215f]        # 0x405038
  402ed9:	mov    rcx,rax
  402edc:	call   0x4015b0
  402ee1:	mov    rdx,QWORD PTR [rsp+0x50]
  402ee6:	mov    rcx,rax
  402ee9:	mov    r8,QWORD PTR [rdx-0x18]
  402eed:	call   0x4015c0
  402ef2:	lea    rdx,[rip+0x213a]        # 0x405033
  402ef9:	mov    rcx,rax
  402efc:	call   0x4015b0
  402f01:	mov    rcx,rax
  402f04:	call   0x4015b8
  402f09:	mov    rdx,rbx
  402f0c:	mov    rcx,rsi
  402f0f:	call   0x402d10
  402f14:	test   al,al
  402f16:	jne    0x402f73
  402f18:	mov    rcx,QWORD PTR [rip+0x2431]        # 0x405350
  402f1f:	lea    rdx,[rip+0x20da]        # 0x405000
  402f26:	call   0x4015b0
  402f2b:	mov    rdx,QWORD PTR [rsp+0x30]
  402f30:	mov    rcx,rax
  402f33:	mov    r8,QWORD PTR [rdx-0x18]
  402f37:	call   0x4015c0
  402f3c:	lea    rdx,[rip+0x211d]        # 0x405060
  402f43:	mov    rcx,rax
  402f46:	call   0x4015b0
  402f4b:	mov    rdx,QWORD PTR [rsp+0x60]
  402f50:	mov    rcx,rax
  402f53:	mov    r8,QWORD PTR [rdx-0x18]
  402f57:	call   0x4015c0
  402f5c:	lea    rdx,[rip+0x20d0]        # 0x405033
  402f63:	mov    rcx,rax
  402f66:	call   0x4015b0
  402f6b:	mov    rcx,rax
  402f6e:	call   0x4015b8
  402f73:	mov    ecx,0x1
  402f78:	call   0x402b60
  402f7d:	mov    rcx,QWORD PTR [rip+0x23cc]        # 0x405350
  402f84:	lea    rdx,[rip+0x2075]        # 0x405000
  402f8b:	call   0x4015b0
  402f90:	mov    rdx,QWORD PTR [rsp+0x30]
  402f95:	mov    rcx,rax
  402f98:	mov    r8,QWORD PTR [rdx-0x18]
  402f9c:	call   0x4015c0
  402fa1:	lea    rdx,[rip+0x2068]        # 0x405010
  402fa8:	mov    rcx,rax
  402fab:	call   0x4015b0
  402fb0:	mov    rdx,QWORD PTR [rsp+0x40]
  402fb5:	mov    rcx,rax
  402fb8:	mov    r8,QWORD PTR [rdx-0x18]
  402fbc:	call   0x4015c0
  402fc1:	lea    rdx,[rip+0x206b]        # 0x405033
  402fc8:	mov    rcx,rax
  402fcb:	call   0x4015b0
  402fd0:	mov    rcx,rax
  402fd3:	call   0x4015b8
  402fd8:	xor    r14d,r14d
  402fdb:	jmp    0x402da9
  402fe0:	mov    rbx,rax
  402fe3:	mov    rax,QWORD PTR [rsp+0x60]
  402fe8:	lea    rsi,[rsp+0x2f]
  402fed:	mov    rdx,rsi
  402ff0:	lea    rcx,[rax-0x18]
  402ff4:	call   0x4015e0
  402ff9:	mov    rax,QWORD PTR [rsp+0x50]
  402ffe:	mov    rdx,rsi
  403001:	lea    rcx,[rax-0x18]
  403005:	call   0x4015e0
  40300a:	mov    rax,QWORD PTR [rsp+0x40]
  40300f:	mov    rdx,rsi
  403012:	lea    rcx,[rax-0x18]
  403016:	call   0x4015e0
  40301b:	mov    rax,QWORD PTR [rsp+0x30]
  403020:	mov    rdx,rsi
  403023:	lea    rcx,[rax-0x18]
  403027:	call   0x4015e0
  40302c:	mov    rcx,rbx
  40302f:	call   0x402cc0
  403034:	mov    rbx,rax
  403037:	lea    rsi,[rsp+0x2f]
  40303c:	jmp    0x402ff9
  40303e:	mov    rbx,rax
  403041:	lea    rsi,[rsp+0x2f]
  403046:	jmp    0x40300a
  403048:	mov    rbx,rax
  40304b:	lea    rsi,[rsp+0x2f]
  403050:	jmp    0x40301b
  403052:	mov    rdi,rax
  403055:	mov    rcx,rbx
  403058:	add    rsi,0x10
  40305c:	mov    QWORD PTR [rsp+0x60],rsi
  403061:	call   0x401580
  403066:	mov    rcx,rdi
  403069:	call   0x402cc0
  40306e:	mov    rbx,rax
  403071:	mov    rax,QWORD PTR [rsp+0x60]
  403076:	mov    rdx,rdi
  403079:	lea    rcx,[rax-0x18]
  40307d:	call   0x4015e0
  403082:	mov    rcx,rbx
  403085:	call   0x402cc0
  40308a:	nop
  40308b:	nop    DWORD PTR [rax+rax*1+0x0]
  403090:	sub    rsp,0x28
  403094:	lea    rcx,[rip+0x4f95]        # 0x408030
  40309b:	call   0x4015d0
  4030a0:	lea    rcx,[rip+0xffffffffffffe489]        # 0x401530
  4030a7:	add    rsp,0x28
  4030ab:	jmp    0x4016a0
  4030b0:	(bad)  
  4030b1:	(bad)  
  4030b2:	(bad)  
  4030b3:	(bad)  
  4030b4:	(bad)  
  4030b5:	(bad)  
  4030b6:	(bad)  
  4030b7:	call   QWORD PTR [rax+0x4030]
	...
  4030c5:	add    BYTE PTR [rax],al
  4030c7:	add    bh,bh
  4030c9:	(bad)  
  4030ca:	(bad)  
  4030cb:	(bad)  
  4030cc:	(bad)  
  4030cd:	(bad)  
  4030ce:	(bad)  
  4030cf:	inc    DWORD PTR [rax]
  4030d1:	add    BYTE PTR [rax],al
  4030d3:	add    BYTE PTR [rax],al
  4030d5:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	test   al,0x15
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    al,dl
  404021:	xor    BYTE PTR [rax+0x0],al
	...
  404030:	(bad)  
  404031:	(bad)  
  404032:	(bad)  
  404033:	(bad)  
  404034:	(bad)  
  404035:	(bad)  
  404036:	(bad)  
  404037:	inc    DWORD PTR [rax]
  404039:	add    BYTE PTR [rax],al
  40403b:	add    BYTE PTR [rax],al
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    bh,bh
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    BYTE PTR [rdx],al
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    bh,bh
  404061:	(bad)  
  404062:	(bad)  
  404063:	inc    DWORD PTR [rax]
	...
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    al,ah
  404071:	sub    eax,DWORD PTR [rax+0x0]
  404074:	add    BYTE PTR [rax],al
  404076:	add    BYTE PTR [rax],al
  404078:	lock sub eax,DWORD PTR [rax+0x0]
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40408e:	add    BYTE PTR [rax],al
  404090:	int    0x5d
  404092:	and    dl,dl
  404094:	data16 (bad) 
  404096:	(bad)  
  404097:	inc    DWORD PTR [rax]
  404099:	add    BYTE PTR [rax],al
  40409b:	add    BYTE PTR [rax],al
  40409d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	outs   dx,DWORD PTR ds:[rsi]
  405001:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  405005:	and    BYTE PTR gs:[rax+0x67],ch
  405009:	and    BYTE PTR [rcx+0x64],ch
  40500c:	and    BYTE PTR [rax],ch
  40500e:	add    BYTE PTR [rax],al
  405010:	sub    DWORD PTR [rax],esp
  405012:	outs   dx,DWORD PTR fs:[rsi]
  405014:	gs jae 0x405037
  405017:	outs   dx,BYTE PTR ds:[rsi]
  405018:	outs   dx,DWORD PTR ds:[rsi]
  405019:	je     0x40503b
  40501b:	ins    DWORD PTR es:[rdi],dx
  40501c:	(bad)  
  40501d:	je     0x405082
  40501f:	push   0x62696c20
  405024:	outs   dx,DWORD PTR ds:[rsi]
  405025:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  405029:	and    BYTE PTR gs:[rax+0x67],ch
  40502d:	and    BYTE PTR [rcx+0x64],ch
  405030:	and    BYTE PTR [rax],ch
  405032:	add    BYTE PTR [rcx],ch
  405034:	add    BYTE PTR [rax],al
  405036:	add    BYTE PTR [rax],al
  405038:	sub    DWORD PTR [rax],esp
  40503a:	outs   dx,DWORD PTR fs:[rsi]
  40503c:	gs jae 0x40505f
  40503f:	outs   dx,BYTE PTR ds:[rsi]
  405040:	outs   dx,DWORD PTR ds:[rsi]
  405041:	je     0x405063
  405043:	ins    DWORD PTR es:[rdi],dx
  405044:	(bad)  
  405045:	je     0x4050aa
  405047:	push   0x62696c20
  40504c:	outs   dx,DWORD PTR ds:[rsi]
  40504d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  405051:	je     0x4050b8
  405053:	jb     0x4050c5
  405055:	and    BYTE PTR [rax+0x67],ch
  405058:	and    BYTE PTR [rcx+0x64],ch
  40505b:	and    BYTE PTR [rax],ch
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rcx],ch
  405061:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  405065:	jae    0x405087
  405067:	outs   dx,BYTE PTR ds:[rsi]
  405068:	outs   dx,DWORD PTR ds:[rsi]
  405069:	je     0x40508b
  40506b:	ins    DWORD PTR es:[rdi],dx
  40506c:	(bad)  
  40506d:	je     0x4050d2
  40506f:	push   0x62696c20
  405074:	outs   dx,DWORD PTR ds:[rsi]
  405075:	movsxd esi,DWORD PTR [rdi+riz*2+0x75]
  405079:	imul   esp,DWORD PTR [rax],0x69206768
  40507f:	and    BYTE PTR fs:[rax],ch
	...
  40508e:	add    BYTE PTR [rax],al
  405090:	xor    DWORD PTR [rbx],esi
  405092:	xor    dh,BYTE PTR [rdi]
  405094:	gs (bad) 
  405096:	xor    al,0x66
  405098:	xor    eax,0x333961
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rax+0x4085],al
  4050a5:	add    BYTE PTR [rax],al
  4050a7:	add    BYTE PTR [rax+0x4080],al
  4050ad:	add    BYTE PTR [rax],al
  4050af:	add    BYTE PTR [rax+0x4019],dh
	...
  4050bd:	add    BYTE PTR [rax],al
  4050bf:	add    BYTE PTR [rcx+0x72],al
  4050c2:	addr32 jne 0x405132
  4050c5:	outs   dx,BYTE PTR gs:[rsi]
  4050c7:	je     0x4050e9
  4050c9:	outs   dx,DWORD PTR fs:[rsi]
  4050cb:	ins    DWORD PTR es:[rdi],dx
  4050cc:	(bad)  
  4050cd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4050d4:	jb     0x4050f6
  4050d6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4050da:	rex.B
  4050db:	rex.WB
  4050dc:	rex.WRX sub QWORD PTR [rax],r8
  4050df:	rex.B jb 0x405149
  4050e2:	jne    0x405151
  4050e4:	outs   dx,BYTE PTR gs:[rsi]
  4050e6:	je     0x405108
  4050e8:	jae    0x405153
  4050ea:	outs   dx,BYTE PTR ds:[rsi]
  4050eb:	addr32 jne 0x40515a
  4050ee:	(bad)  
  4050ef:	jb     0x40515a
  4050f1:	je     0x40516c
  4050f3:	and    BYTE PTR [rax],ch
  4050f5:	push   rbx
  4050f6:	rex.WB
  4050f7:	rex.RXB
  4050f8:	rex.WRX sub QWORD PTR [rax],r8
  4050fb:	add    BYTE PTR [rax],al
  4050fd:	add    BYTE PTR [rax],al
  4050ff:	add    BYTE PTR [rdi+0x76],cl
  405102:	gs jb  0x40516b
  405105:	ins    BYTE PTR es:[rdi],dx
  405106:	outs   dx,DWORD PTR ds:[rsi]
  405107:	ja     0x405129
  405109:	jb     0x40516c
  40510b:	outs   dx,BYTE PTR ds:[rsi]
  40510c:	and    BYTE PTR gs:[ebp+0x72],ah
  405111:	jb     0x405182
  405113:	jb     0x405135
  405115:	sub    BYTE PTR [rdi+0x56],cl
  405118:	rex.RB push r10
  40511a:	rex.RX
  40511b:	rex.WR
  40511c:	rex.WRXB push r15
  40511e:	sub    DWORD PTR [rax],eax
  405120:	push   rax
  405121:	(bad)  
  405122:	jb     0x405198
  405124:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40512b:	jae    0x40514d
  40512d:	outs   dx,DWORD PTR ds:[rsi]
  40512e:	data16 and BYTE PTR [rbx+0x69],dh
  405132:	outs   dx,BYTE PTR ds:[esi]
  405134:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40513b:	and    BYTE PTR gs:[rax],ch
  40513e:	push   rax
  40513f:	rex.WR
  405140:	rex.WRXB push r11
  405142:	push   rbx
  405143:	sub    DWORD PTR [rax],eax
  405145:	add    BYTE PTR [rax],al
  405147:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40514b:	(bad)  
  40514c:	ins    BYTE PTR es:[rdi],dx
  40514d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405151:	jae    0x405173
  405153:	outs   dx,DWORD PTR ds:[rsi]
  405154:	data16 and BYTE PTR [rbx+0x69],dh
  405158:	outs   dx,BYTE PTR ds:[esi]
  40515a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405161:	and    BYTE PTR gs:[rax],ch
  405164:	push   rsp
  405165:	rex.WR
  405166:	rex.WRXB push r11
  405168:	push   rbx
  405169:	sub    DWORD PTR [rax],eax
  40516b:	add    BYTE PTR [rax],al
  40516d:	add    BYTE PTR [rax],al
  40516f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405173:	and    BYTE PTR [rdx+0x65],dh
  405176:	jae    0x4051ed
  405178:	ins    BYTE PTR es:[rdi],dx
  405179:	je     0x40519b
  40517b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405182:	jae    0x4051f1
  405184:	(bad)  
  405185:	ins    BYTE PTR es:[rdi],dx
  405186:	ins    BYTE PTR es:[rdi],dx
  405187:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40518b:	(bad)  
  40518c:	and    BYTE PTR gs:[rdx+0x65],dh
  405190:	jo     0x405204
  405192:	gs jae 0x4051fa
  405195:	outs   dx,BYTE PTR ds:[rsi]
  405196:	je     0x4051fd
  405198:	and    BYTE PTR fs:[rax],ch
  40519b:	push   rbp
  40519c:	rex.WRX
  40519d:	rex.R
  40519e:	rex.RB push r10
  4051a0:	rex.RX
  4051a1:	rex.WR
  4051a2:	rex.WRXB push r15
  4051a4:	sub    DWORD PTR [rax],eax
  4051a6:	push   rbp
  4051a7:	outs   dx,BYTE PTR ds:[rsi]
  4051a8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4051ac:	outs   dx,BYTE PTR ds:[rsi]
  4051ad:	and    BYTE PTR [rbp+0x72],ah
  4051b0:	jb     0x405221
  4051b2:	jb     0x4051b4
  4051b4:	add    BYTE PTR [rax],al
  4051b6:	add    BYTE PTR [rax],al
  4051b8:	pop    rdi
  4051b9:	ins    DWORD PTR es:[rdi],dx
  4051ba:	(bad)  
  4051bb:	je     0x405225
  4051bd:	gs jb  0x405232
  4051c0:	sub    BYTE PTR [rcx],ch
  4051c2:	cmp    ah,BYTE PTR [rax]
  4051c4:	and    eax,0x6e692073
  4051c9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657a42
  4051cf:	sub    al,0x20
  4051d1:	and    eax,0x20202967
  4051d6:	sub    BYTE PTR [rdx+0x65],dh
  4051d9:	je     0x405251
  4051db:	(bad)  
  4051dc:	ins    BYTE PTR es:[rdi],dx
  4051dd:	cmp    eax,0xa296725
  4051e2:	add    BYTE PTR [rax],al
  4051e4:	pushf  
  4051e5:	leave  
  4051e6:	(bad)  
  4051e7:	(bad)  
  4051e8:	(bad)  
  4051ea:	(bad)  
  4051eb:	dec    DWORD PTR [rcx+rcx*8-0x1]
  4051ef:	call   FWORD PTR [rcx+rcx*8-0x1]
  4051f3:	jmp    FWORD PTR [rcx+rcx*8-0x1]
  4051f7:	(bad)  
  4051f8:	jl     0x4051c3
  4051fa:	(bad)  
  4051fb:	dec    DWORD PTR [rcx+rcx*8+0x694dffff]
  405202:	outs   dx,BYTE PTR ds:[rsi]
  405203:	addr32 ja 0x405233
  405206:	ja     0x40523e
  405208:	xor    al,0x20
  40520a:	jb     0x405281
  40520c:	outs   dx,BYTE PTR ds:[rsi]
  40520d:	je     0x405278
  40520f:	ins    DWORD PTR es:[rdi],dx
  405210:	and    BYTE PTR gs:[rsi+0x61],ah
  405214:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40521c:	add    BYTE PTR [rax],al
  40521e:	add    BYTE PTR [rax],al
  405220:	rex.B
  405221:	fs fs jb 0x40528a
  405225:	jae    0x40529a
  405227:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8729d
  40522d:	jae    0x40524f
  40522f:	outs   dx,BYTE PTR ds:[rsi]
  405230:	outs   dx,DWORD PTR ds:[rsi]
  405231:	and    BYTE PTR [rcx+0x6d],ch
  405234:	(bad)  
  405235:	addr32 gs sub eax,0x74636573
  40523c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405243:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40524a:	jne    0x4052b1
  40524c:	jb     0x4052c7
  40524e:	and    BYTE PTR [rsi+0x61],ah
  405251:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405259:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a272c3
  40525f:	je     0x4052c6
  405261:	jae    0x405283
  405263:	(bad)  
  405264:	je     0x405286
  405266:	(bad)  
  405267:	fs fs jb 0x4052d0
  40526b:	jae    0x4052e0
  40526d:	and    BYTE PTR [rip+0x70],ah        # 0x4052e3
  405273:	add    BYTE PTR [rax],al
  405275:	add    BYTE PTR [rax],al
  405277:	add    BYTE PTR [rax],ah
  405279:	and    BYTE PTR [rsi+0x69],dl
  40527c:	jb     0x4052f2
  40527e:	jne    0x4052e1
  405280:	ins    BYTE PTR es:[rdi],dx
  405281:	push   rax
  405282:	jb     0x4052f3
  405284:	je     0x4052eb
  405286:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40528a:	(bad)  
  40528b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405293:	push   0x646f6320
  405298:	and    BYTE PTR gs:[rax],dh
  40529b:	js     0x4052c2
  40529d:	js     0x40529f
  40529f:	add    BYTE PTR [rax],ah
  4052a1:	and    BYTE PTR [rbp+0x6e],dl
  4052a4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052a8:	outs   dx,BYTE PTR ds:[rsi]
  4052a9:	and    BYTE PTR [rax+0x73],dh
  4052ac:	gs jne 0x405313
  4052af:	outs   dx,DWORD PTR ds:[rsi]
  4052b0:	and    BYTE PTR [rdx+0x65],dh
  4052b3:	ins    BYTE PTR es:[rdi],dx
  4052b4:	outs   dx,DWORD PTR ds:[rsi]
  4052b5:	movsxd esp,DWORD PTR [rcx+0x74]
  4052b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4052bf:	je     0x405330
  4052c1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4052c4:	and    BYTE PTR [rsi+0x65],dh
  4052c7:	jb     0x40533c
  4052c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4052d0:	or     al,BYTE PTR [rax]
  4052d2:	add    BYTE PTR [rax],al
  4052d4:	add    BYTE PTR [rax],al
  4052d6:	add    BYTE PTR [rax],al
  4052d8:	and    BYTE PTR [rax],ah
  4052da:	push   rbp
  4052db:	outs   dx,BYTE PTR ds:[rsi]
  4052dc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052e0:	outs   dx,BYTE PTR ds:[rsi]
  4052e1:	and    BYTE PTR [rax+0x73],dh
  4052e4:	gs jne 0x40534b
  4052e7:	outs   dx,DWORD PTR ds:[rsi]
  4052e8:	and    BYTE PTR [rdx+0x65],dh
  4052eb:	ins    BYTE PTR es:[rdi],dx
  4052ec:	outs   dx,DWORD PTR ds:[rsi]
  4052ed:	movsxd esp,DWORD PTR [rcx+0x74]
  4052f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4052f7:	and    BYTE PTR [rbx+0x69],dh
  4052fa:	jp     0x405361
  4052fc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8166
	...
  40530e:	add    BYTE PTR [rax],al
  405310:	cs jo  0x405377
  405313:	(bad)  
  405314:	je     0x405377
	...
  40531e:	add    BYTE PTR [rax],al
  405320:	movabs al,ds:0x1d
  405329:	add    BYTE PTR [rax],al
  40532b:	add    BYTE PTR [rax],al
  40532d:	add    BYTE PTR [rax],al
  40532f:	add    BYTE PTR [rax+0x40],dl
  405332:	add    BYTE PTR [rax],al
	...
  40533d:	add    BYTE PTR [rax],al
  40533f:	add    BYTE PTR [rax+0x40],ah
  405342:	add    BYTE PTR [rax],al
	...
  40534d:	add    BYTE PTR [rax],al
  40534f:	add    BYTE PTR [rax-0x5d],bh
  405352:	add    BYTE PTR [rax],al
	...
  40535d:	add    BYTE PTR [rax],al
  40535f:	add    BYTE PTR [rax-0x5b],ah
  405362:	add    BYTE PTR [rax],al
	...
  40536d:	add    BYTE PTR [rax],al
  40536f:	add    BYTE PTR [rax+0x4030],dh
	...
  40537d:	add    BYTE PTR [rax],al
  40537f:	add    ah,dl
  405381:	pop    rax
  405382:	add    BYTE PTR [rax],al
	...
  40538d:	add    BYTE PTR [rax],al
  40538f:	add    BYTE PTR [rax+0x4058],dh
	...
  40539d:	add    BYTE PTR [rax],al
  40539f:	add    BYTE PTR [rax+0x4050],dh
	...
  4053b1:	add    BYTE PTR [rax+0x0],al
	...
  4053c0:	js     0x405366
  4053c2:	add    BYTE PTR [rax],al
	...
  4053cd:	add    BYTE PTR [rax],al
  4053cf:	add    BYTE PTR [rax+0x40a4],ah
	...
  4053dd:	add    BYTE PTR [rax],al
  4053df:	add    BYTE PTR [rax+0x40a4],bh
	...
  4053ed:	add    BYTE PTR [rax],al
  4053ef:	add    al,dl
  4053f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4053f2:	add    BYTE PTR [rax],al
	...
  4053fd:	add    BYTE PTR [rax],al
  4053ff:	add    al,al
  405401:	xchg   BYTE PTR [rax+0x0],al
	...
  405410:	sub    BYTE PTR [rdx+0x40],cl
	...
  40541e:	add    BYTE PTR [rax],al
  405420:	and    BYTE PTR [rdx+0x40],cl
	...
  40542e:	add    BYTE PTR [rax],al
  405430:	adc    BYTE PTR [rdx+0x40],cl
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40544e:	add    BYTE PTR [rax],al
  405450:	add    BYTE PTR [rax+0x40],dh
	...
  40545e:	add    BYTE PTR [rax],al
  405460:	adc    BYTE PTR [rax+0x40],dh
	...
  40546e:	add    BYTE PTR [rax],al
  405470:	sbb    BYTE PTR [rax+0x40],dh
	...
  40547e:	add    BYTE PTR [rax],al
  405480:	xor    BYTE PTR [rax+0x40],dh
	...
  40548e:	add    BYTE PTR [rax],al
  405490:	push   rax
  405491:	add    BYTE PTR [rax+0x0],0x0
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax+0x4086],dl
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax+0x23],al
  4054b2:	add    BYTE PTR [rax],al
	...
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    BYTE PTR [rax+0x401a],dl
	...
  4054cd:	add    BYTE PTR [rax],al
  4054cf:	add    BYTE PTR [rax-0x7a],al
  4054d2:	add    BYTE PTR [rax],al
	...
  4054dd:	add    BYTE PTR [rax],al
  4054df:	add    BYTE PTR [rax-0x7a],dh
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rax-0x80],ah
  4054f2:	add    BYTE PTR [rax],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    BYTE PTR [rax-0x7a],bl
  405502:	add    BYTE PTR [rax],al
	...
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40551f:	add    BYTE PTR [rax-0x7a],dl
  405522:	add    BYTE PTR [rax],al
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rdi+0x43],al
  405532:	rex.XB cmp spl,BYTE PTR [r8]
  405535:	sub    BYTE PTR [rdi+0x4e],al
  405538:	push   rbp
  405539:	sub    DWORD PTR [rax],esp
  40553b:	xor    al,0x2e
  40553d:	cmp    DWORD PTR [rsi],ebp
  40553f:	xor    al,0x0
	...
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rdi+0x43],al
  405552:	rex.XB cmp spl,BYTE PTR [r8]
  405555:	sub    BYTE PTR [rdi+0x4e],al
  405558:	push   rbp
  405559:	sub    DWORD PTR [rax],esp
  40555b:	xor    al,0x2e
  40555d:	cmp    DWORD PTR [rsi],ebp
  40555f:	xor    al,0x0
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rdi+0x43],al
  405572:	rex.XB cmp spl,BYTE PTR [r8]
  405575:	sub    BYTE PTR [rdi+0x4e],al
  405578:	push   rbp
  405579:	sub    DWORD PTR [rax],esp
  40557b:	xor    al,0x2e
  40557d:	cmp    DWORD PTR [rsi],ebp
  40557f:	xor    al,0x0
	...
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    BYTE PTR [rdi+0x43],al
  405592:	rex.XB cmp spl,BYTE PTR [r8]
  405595:	sub    BYTE PTR [rdi+0x4e],al
  405598:	push   rbp
  405599:	sub    DWORD PTR [rax],esp
  40559b:	xor    al,0x2e
  40559d:	cmp    DWORD PTR [rsi],ebp
  40559f:	xor    al,0x0
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rdi+0x43],al
  4055b2:	rex.XB cmp spl,BYTE PTR [r8]
  4055b5:	sub    BYTE PTR [rdi+0x4e],al
  4055b8:	push   rbp
  4055b9:	sub    DWORD PTR [rax],esp
  4055bb:	xor    al,0x2e
  4055bd:	cmp    DWORD PTR [rsi],ebp
  4055bf:	xor    al,0x0
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rdi+0x43],al
  4055d2:	rex.XB cmp spl,BYTE PTR [r8]
  4055d5:	sub    BYTE PTR [rdi+0x4e],al
  4055d8:	push   rbp
  4055d9:	sub    DWORD PTR [rax],esp
  4055db:	xor    al,0x2e
  4055dd:	cmp    DWORD PTR [rsi],ebp
  4055df:	xor    al,0x0
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rdi+0x43],al
  4055f2:	rex.XB cmp spl,BYTE PTR [r8]
  4055f5:	sub    BYTE PTR [rdi+0x4e],al
  4055f8:	push   rbp
  4055f9:	sub    DWORD PTR [rax],esp
  4055fb:	xor    al,0x2e
  4055fd:	cmp    DWORD PTR [rsi],ebp
  4055ff:	xor    al,0x0
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rdi+0x43],al
  405612:	rex.XB cmp spl,BYTE PTR [r8]
  405615:	sub    BYTE PTR [rdi+0x4e],al
  405618:	push   rbp
  405619:	sub    DWORD PTR [rax],esp
  40561b:	xor    al,0x2e
  40561d:	cmp    DWORD PTR [rsi],ebp
  40561f:	xor    al,0x0
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rdi+0x43],al
  405632:	rex.XB cmp spl,BYTE PTR [r8]
  405635:	sub    BYTE PTR [rdi+0x4e],al
  405638:	push   rbp
  405639:	sub    DWORD PTR [rax],esp
  40563b:	xor    al,0x2e
  40563d:	cmp    DWORD PTR [rsi],ebp
  40563f:	xor    al,0x0
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rdi+0x43],al
  405652:	rex.XB cmp spl,BYTE PTR [r8]
  405655:	sub    BYTE PTR [rdi+0x4e],al
  405658:	push   rbp
  405659:	sub    DWORD PTR [rax],esp
  40565b:	xor    al,0x2e
  40565d:	cmp    DWORD PTR [rsi],ebp
  40565f:	xor    al,0x0
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rdi+0x43],al
  405672:	rex.XB cmp spl,BYTE PTR [r8]
  405675:	sub    BYTE PTR [rdi+0x4e],al
  405678:	push   rbp
  405679:	sub    DWORD PTR [rax],esp
  40567b:	xor    al,0x2e
  40567d:	cmp    DWORD PTR [rsi],ebp
  40567f:	xor    al,0x0
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rdi+0x43],al
  405692:	rex.XB cmp spl,BYTE PTR [r8]
  405695:	sub    BYTE PTR [rdi+0x4e],al
  405698:	push   rbp
  405699:	sub    DWORD PTR [rax],esp
  40569b:	xor    al,0x2e
  40569d:	cmp    DWORD PTR [rsi],ebp
  40569f:	xor    al,0x0
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rdi+0x43],al
  4056b2:	rex.XB cmp spl,BYTE PTR [r8]
  4056b5:	sub    BYTE PTR [rdi+0x4e],al
  4056b8:	push   rbp
  4056b9:	sub    DWORD PTR [rax],esp
  4056bb:	xor    al,0x2e
  4056bd:	cmp    DWORD PTR [rsi],ebp
  4056bf:	xor    al,0x0
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rdi+0x43],al
  4056d2:	rex.XB cmp spl,BYTE PTR [r8]
  4056d5:	sub    BYTE PTR [rdi+0x4e],al
  4056d8:	push   rbp
  4056d9:	sub    DWORD PTR [rax],esp
  4056db:	xor    al,0x2e
  4056dd:	cmp    DWORD PTR [rsi],ebp
  4056df:	xor    al,0x0
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rdi+0x43],al
  4056f2:	rex.XB cmp spl,BYTE PTR [r8]
  4056f5:	sub    BYTE PTR [rdi+0x4e],al
  4056f8:	push   rbp
  4056f9:	sub    DWORD PTR [rax],esp
  4056fb:	xor    al,0x2e
  4056fd:	cmp    DWORD PTR [rsi],ebp
  4056ff:	xor    al,0x0
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rdi+0x43],al
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x4e],al
  405878:	push   rbp
  405879:	sub    DWORD PTR [rax],esp
  40587b:	xor    al,0x2e
  40587d:	cmp    DWORD PTR [rsi],ebp
  40587f:	xor    al,0x0
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rdi+0x43],al
  405892:	rex.XB cmp spl,BYTE PTR [r8]
  405895:	sub    BYTE PTR [rdi+0x4e],al
  405898:	push   rbp
  405899:	sub    DWORD PTR [rax],esp
  40589b:	xor    al,0x2e
  40589d:	cmp    DWORD PTR [rsi],ebp
  40589f:	xor    al,0x0
	...
  4058b5:	add    BYTE PTR [rax],al
  4058b7:	add    BYTE PTR [rcx],al
  4058b9:	add    BYTE PTR [rax],al
  4058bb:	add    BYTE PTR [rax-0x5b],ah
  4058be:	add    BYTE PTR [rax],al
  4058c0:	(bad)  
  4058c1:	push   rbx
  4058c2:	add    BYTE PTR [rax],al
  4058c4:	add    BYTE PTR [rax],al
  4058c7:	add    BYTE PTR [rax-0x5d],bh
  4058ca:	add    BYTE PTR [rax],al
  4058cc:	push   rax
  4058cd:	push   rbx
  4058ce:	add    BYTE PTR [rax],al
  4058d0:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x153c0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x40000070
  406055:	adc    eax,0x15620000
  40605a:	add    BYTE PTR [rax],al
  40605c:	(bad)  
  40605d:	jo     0x40605f
  40605f:	add    al,dh
  406061:	adc    eax,0x16970000
  406066:	add    BYTE PTR [rax],al
  406068:	fdiv   QWORD PTR [rax+0x0]
  40606b:	add    BYTE PTR [rax-0x46ffffea],ah
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	in     al,0x70
  406076:	add    BYTE PTR [rax],al
  406078:	rcl    BYTE PTR [rsi],0x0
  40607b:	add    ch,dh
  40607d:	(bad)  
  40607e:	add    BYTE PTR [rax],al
  406080:	in     al,dx
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax],al
  406085:	(bad)  
  406086:	add    BYTE PTR [rax],al
  406088:	push   rbp
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	hlt    
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax+0x17],ah
  406092:	add    BYTE PTR [rax],al
  406094:	jl     0x4060ad
  406096:	add    BYTE PTR [rax],al
  406098:	add    BYTE PTR [rcx+0x0],dh
  40609b:	add    BYTE PTR [rax-0x75ffffe9],al
  4060a1:	(bad)  
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	add    al,0x71
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	nop
  4060a9:	(bad)  
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	xchg   ebx,eax
  4060ad:	(bad)  
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	or     BYTE PTR [rcx+0x0],dh
  4060b3:	add    BYTE PTR [rax+0x76000017],ah
  4060b9:	sbb    BYTE PTR [rax],al
  4060bb:	add    BYTE PTR [rcx+rsi*2],cl
  4060be:	add    BYTE PTR [rax],al
  4060c0:	sbb    BYTE PTR [rax],0x0
  4060c3:	add    BYTE PTR [rbx+0x19],bh
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	sbb    al,0x71
  4060ca:	add    BYTE PTR [rax],al
  4060cc:	sbb    BYTE PTR [rcx],0x0
  4060cf:	add    BYTE PTR [rdi+0x2c000019],ch
  4060d5:	jno    0x4060d7
  4060d7:	add    BYTE PTR [rax+0x19000019],dh
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    BYTE PTR [rcx+rsi*2],dh
  4060e2:	add    BYTE PTR [rax],al
  4060e4:	and    BYTE PTR [rdx],bl
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	and    ebx,DWORD PTR [rdx]
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	rex jno 0x4060ef
  4060ef:	add    BYTE PTR [rax],dh
  4060f1:	sbb    al,BYTE PTR [rax]
  4060f3:	add    BYTE PTR [rcx+0x1a],dh
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	rex.R jno 0x4060fb
  4060fb:	add    BYTE PTR [rax-0x73ffffe6],al
  406101:	sbb    al,BYTE PTR [rax]
  406103:	add    BYTE PTR [rcx+rsi*2+0x0],cl
  406107:	add    BYTE PTR [rax-0x73ffffe6],dl
  40610d:	sbb    eax,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rax+0x71],dl
  406112:	add    BYTE PTR [rax],al
  406114:	nop
  406115:	sbb    eax,DWORD PTR [rax]
  406117:	add    BYTE PTR [rbx+0x6800001b],dl
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax-0x5bffffe5],ah
  406125:	sbb    eax,DWORD PTR [rax]
  406127:	add    BYTE PTR [rcx+rsi*2+0x0],ch
  40612b:	add    BYTE PTR [rax-0x4bffffe5],dh
  406131:	sbb    eax,DWORD PTR [rax]
  406133:	add    BYTE PTR [rax+0x71],dh
  406136:	add    BYTE PTR [rax],al
  406138:	rcr    BYTE PTR [rbx],0x0
  40613b:	add    BYTE PTR [rcx],ah
  40613d:	sbb    al,0x0
  40613f:	add    BYTE PTR [rcx+rsi*2+0x0],dh
  406143:	add    BYTE PTR [rax],dh
  406145:	sbb    al,0x0
  406147:	add    BYTE PTR [rdx-0x7fffffe3],dl
  40614d:	jno    0x40614f
  40614f:	add    BYTE PTR [rax-0x66ffffe3],ah
  406155:	and    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rcx+rsi*2+0x20a00000],dl
  40615e:	add    BYTE PTR [rax],al
  406160:	rex.RX and r8b,BYTE PTR [rax]
  406163:	add    BYTE PTR [rcx+rsi*2+0x22500000],ch
  40616a:	add    BYTE PTR [rax],al
  40616c:	cmp    al,0x23
  40616e:	add    BYTE PTR [rax],al
  406170:	mov    ah,0x71
  406172:	add    BYTE PTR [rax],al
  406174:	rex and eax,DWORD PTR [rax]
  406177:	add    al,bh
  406179:	and    al,0x0
  40617b:	add    ah,al
  40617d:	jno    0x40617f
  40617f:	add    BYTE PTR [rax],al
  406181:	and    eax,0x256d0000
  406186:	add    BYTE PTR [rax],al
  406188:	int3   
  406189:	jno    0x40618b
  40618b:	add    BYTE PTR [rax+0x25],dh
  40618e:	add    BYTE PTR [rax],al
  406190:	out    dx,eax
  406191:	and    eax,0x71dc0000
  406196:	add    BYTE PTR [rax],al
  406198:	lock and eax,0x268f0000
  40619e:	add    BYTE PTR [rax],al
  4061a0:	call   0xffffffff90406216
  4061a5:	add    BYTE PTR es:[rax],al
  4061a8:	push   0x27
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	lock jno 0x4061af
  4061af:	add    BYTE PTR [rax+0x27],dh
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	(bad)  
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	clc    
  4061b9:	jno    0x4061bb
  4061bb:	add    BYTE PTR [rax-0x5dffffd9],dl
  4061c1:	(bad)  
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	cld    
  4061c5:	jno    0x4061c7
  4061c7:	add    BYTE PTR [rax-0xaffffd9],dh
  4061cd:	(bad)  
  4061ce:	add    BYTE PTR [rax],al
  4061d0:	add    BYTE PTR [rdx+0x0],dh
  4061d3:	add    BYTE PTR [rax],al
  4061d5:	sub    BYTE PTR [rax],al
  4061d7:	add    BYTE PTR [rsi+0x4000028],bl
  4061dd:	jb     0x4061df
  4061df:	add    BYTE PTR [rax-0x1cffffd8],ah
  4061e5:	sub    BYTE PTR [rax],al
  4061e7:	add    BYTE PTR [rax],dl
  4061e9:	jb     0x4061eb
  4061eb:	add    al,dh
  4061ed:	sub    BYTE PTR [rax],al
  4061ef:	add    BYTE PTR [rbx],ch
  4061f1:	sub    DWORD PTR [rax],eax
  4061f3:	add    BYTE PTR [rdx+rsi*2],bl
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	xor    BYTE PTR [rcx],ch
  4061fa:	add    BYTE PTR [rax],al
  4061fc:	mov    esi,0x24000029
  406201:	jb     0x406203
  406203:	add    al,al
  406205:	sub    DWORD PTR [rax],eax
  406207:	add    al,bh
  406209:	sub    DWORD PTR [rax],eax
  40620b:	add    BYTE PTR [rax],dh
  40620d:	jb     0x40620f
  40620f:	add    BYTE PTR [rax],al
  406211:	sub    al,BYTE PTR [rax]
  406213:	add    BYTE PTR [rbp+0x2a],dl
  406216:	add    BYTE PTR [rax],al
  406218:	cmp    al,0x72
  40621a:	add    BYTE PTR [rax],al
  40621c:	(bad)  
  40621d:	sub    al,BYTE PTR [rax]
  40621f:	add    BYTE PTR [rsi],cl
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    BYTE PTR [rax+0x72],cl
  406226:	add    BYTE PTR [rax],al
  406228:	loopne 0x406255
  40622a:	add    BYTE PTR [rax],al
  40622c:	call   0x5840625c
  406231:	jb     0x406233
  406233:	add    al,dh
  406235:	sub    eax,DWORD PTR [rax]
  406237:	add    bl,bh
  406239:	sub    eax,DWORD PTR [rax]
  40623b:	add    BYTE PTR [rdx+rsi*2+0x0],bl
  40623f:	add    BYTE PTR [rax],dl
  406241:	sub    eax,0x2d3f0000
  406246:	add    BYTE PTR [rax],al
  406248:	ins    BYTE PTR es:[rdi],dx
  406249:	jo     0x40624b
  40624b:	add    BYTE PTR [rax+0x2d],al
  40624e:	add    BYTE PTR [rax],al
  406250:	mov    esi,DWORD PTR [rax]
  406252:	add    BYTE PTR [rax],al
  406254:	je     0x4062c6
  406256:	add    BYTE PTR [rax],al
  406258:	nop
  406259:	xor    BYTE PTR [rax],al
  40625b:	add    BYTE PTR [rax-0x33ffffd0],dh
  406261:	jo     0x406263
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	fsubr  DWORD PTR [rbx]
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax+0x23],al
  407042:	add    BYTE PTR [rax],al
  407044:	in     al,dx
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	fsubr  DWORD PTR [rbx]
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	rex and eax,DWORD PTR [rax]
  407063:	add    BYTE PTR [rdx*1+0x10000],bl
  40706a:	add    BYTE PTR [rax],al
  40706c:	add    DWORD PTR [rcx+rax*1],eax
  40706f:	add    BYTE PTR [rdx+rax*2],al
  407072:	add    BYTE PTR [rax],al
  407074:	sbb    DWORD PTR [rcx],edx
  407076:	or     DWORD PTR [rax],eax
  407078:	adc    DWORD PTR [rcx],eax
  40707a:	sub    al,BYTE PTR [rax]
  40707c:	or     dh,BYTE PTR [rax]
  40707e:	or     DWORD PTR [rax+0x8],esp
  407081:	jo     0x40708a
  407083:	push   rax
  407084:	(bad)  
  407085:	rol    BYTE PTR [rax+rdx*8],0x2
  407089:	loopne 0x40708b
  40708b:	add    BYTE PTR [rax-0xffffeb],ch
  407091:	inc    DWORD PTR [rcx]
  407093:	xor    eax,0x529
  407098:	xor    DWORD PTR [rip+0x3e000688],eax        # 0x3e407726
  40709e:	add    eax,0x4b0005fe
  4070a3:	add    eax,0xeb0005f4
  4070a8:	add    DWORD PTR [rip+0x1f30000],eax        # 0x23370ae
  4070ae:	add    eax,0x920006ae
  4070b3:	add    al,BYTE PTR [rip+0x2c20000]        # 0x30270b9
  4070b9:	add    eax,0xfc000692
  4070be:	add    bl,BYTE PTR [rdx+rax*1-0x10fffa60]
  4070c5:	add    eax,0x5c
  4070ca:	add    BYTE PTR [rax],al
  4070cc:	add    DWORD PTR [rcx+rax*1],eax
  4070cf:	add    BYTE PTR [rdx+rax*2],al
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570dc
  4070da:	add    DWORD PTR [rax],esi
  4070dc:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570e4
  4070e2:	add    DWORD PTR [rax],esi
  4070e4:	add    DWORD PTR [rcx+rax*1],eax
  4070e7:	add    BYTE PTR [rdx+rax*2],al
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	add    DWORD PTR [rcx+rax*1],eax
  4070ef:	add    BYTE PTR [rdx+rax*2],al
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    DWORD PTR [rsi],eax
  4070f6:	add    eax,DWORD PTR [rax]
  4070f8:	(bad)  
  4070f9:	rex.X add sil,BYTE PTR [rax]
  4070fc:	add    DWORD PTR [rax+0x0],esp
  4070ff:	add    BYTE PTR [rcx],al
  407101:	add    BYTE PTR [rax],al
  407103:	add    BYTE PTR [rcx],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	or     al,BYTE PTR [rsi]
  40710f:	add    BYTE PTR [rdx],cl
  407111:	jb     0x407119
  407113:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07579
  407119:	push   rax
  40711a:	add    al,al
  40711c:	add    DWORD PTR [rdx],ecx
  40711e:	add    eax,0x6d20a05
  407123:	add    eax,DWORD PTR [rbx]
  407125:	xor    BYTE PTR [rdx],al
  407127:	(bad)  
  407128:	add    DWORD PTR [rax+0x0],edx
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    al,0x1
  40712f:	add    BYTE PTR [rdx+rax*2],al
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rsi],eax
  407136:	add    eax,DWORD PTR [rax]
  407138:	(bad)  
  407139:	rex.X add sil,BYTE PTR [rax]
  40713c:	add    DWORD PTR [rax+0x0],esp
  40713f:	add    BYTE PTR [rcx],al
  407141:	add    BYTE PTR [rax],al
  407143:	add    BYTE PTR [rcx],al
  407145:	add    al,0x1
  407147:	add    BYTE PTR [rdx+riz*4],al
  40714a:	add    BYTE PTR [rax],al
  40714c:	add    DWORD PTR [rax],eax
  40714e:	add    BYTE PTR [rax],al
  407150:	add    DWORD PTR [rsi],edx
  407152:	or     DWORD PTR [rax],eax
  407154:	(bad)  
  407155:	mov    BYTE PTR [rsi],al
  407157:	add    BYTE PTR [rax],dl
  407159:	js     0x407160
  40715b:	add    BYTE PTR [rbx],cl
  40715d:	push   0xffffffffe2060004
  407162:	add    dh,BYTE PTR [rax]
  407164:	add    DWORD PTR [rax+0x0],esp
  407167:	add    BYTE PTR [rcx],al
  407169:	add    BYTE PTR [rax],al
  40716b:	add    BYTE PTR [rcx],al
  40716d:	add    BYTE PTR [rax],al
  40716f:	add    BYTE PTR [rcx],al
  407171:	add    BYTE PTR [rax],al
  407173:	add    BYTE PTR [rcx],al
  407175:	(bad)  
  407176:	add    eax,DWORD PTR [rax]
  407178:	(bad)  
  407179:	(bad)  
  40717b:	xor    BYTE PTR [rcx],al
  40717d:	(bad)  
  40717e:	add    BYTE PTR [rax],al
  407180:	add    DWORD PTR [rdi+rax*1],ecx
  407183:	add    BYTE PTR [rdx+riz*4],cl
  407186:	or     BYTE PTR [rax],dh
  407188:	(bad)  
  407189:	(bad)  
  40718a:	(bad)  
  40718b:	jo     0x407192
  40718d:	push   rax
  40718e:	add    al,0xc0
  407190:	add    dl,al
  407192:	add    BYTE PTR [rax],al
  407194:	add    DWORD PTR [rcx],edx
  407196:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e23ad
  40719c:	or     dh,BYTE PTR [rax]
  40719e:	or     DWORD PTR [rax+0x8],esp
  4071a1:	jo     0x4071aa
  4071a3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220757a
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rcx+rax*1],eax
  4071af:	add    BYTE PTR [rdx+rax*2],al
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rdx],ecx
  4071b6:	(bad)  
  4071b7:	add    BYTE PTR [rdx],cl
  4071b9:	xor    al,BYTE PTR [rsi]
  4071bb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07621
  4071c1:	push   rax
  4071c2:	add    al,al
  4071c4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571cc
  4071ca:	add    DWORD PTR [rax],esi
  4071cc:	add    DWORD PTR [rax],ecx
  4071ce:	add    eax,0x4420800
  4071d3:	xor    BYTE PTR [rbx],al
  4071d5:	(bad)  
  4071d6:	add    dh,BYTE PTR [rax+0x1]
  4071d9:	push   rax
  4071da:	add    BYTE PTR [rax],al
  4071dc:	add    DWORD PTR [rdi],eax
  4071de:	add    al,0x0
  4071e0:	(bad)  
  4071e1:	xor    al,BYTE PTR [rbx]
  4071e3:	xor    BYTE PTR [rdx],al
  4071e5:	(bad)  
  4071e6:	add    DWORD PTR [rax+0x1],esi
  4071e9:	add    eax,0x32050002
  4071ee:	add    DWORD PTR [rax],esi
  4071f0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571f8
  4071f6:	add    DWORD PTR [rax],esi
  4071f8:	add    DWORD PTR [rax],eax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
  4071fe:	add    BYTE PTR [rax],al
  407200:	add    DWORD PTR [rax],eax
  407202:	add    BYTE PTR [rax],al
  407204:	add    DWORD PTR [rdi],eax
  407206:	add    al,0x0
  407208:	(bad)  
  407209:	xor    al,BYTE PTR [rbx]
  40720b:	xor    BYTE PTR [rdx],al
  40720d:	(bad)  
  40720e:	add    DWORD PTR [rax+0x1],esi
  407211:	(bad)  
  407212:	add    eax,DWORD PTR [rax]
  407214:	(bad)  
  407215:	rex.X add sil,BYTE PTR [rax]
  407218:	add    DWORD PTR [rax+0x0],esp
  40721b:	add    BYTE PTR [rcx],al
  40721d:	add    eax,0x32050002
  407222:	add    DWORD PTR [rax],esi
  407224:	add    DWORD PTR [rdi],eax
  407226:	add    al,0x0
  407228:	(bad)  
  407229:	xor    al,BYTE PTR [rbx]
  40722b:	xor    BYTE PTR [rdx],al
  40722d:	(bad)  
  40722e:	add    DWORD PTR [rax+0x1],esi
  407231:	(bad)  
  407232:	add    eax,DWORD PTR [rax]
  407234:	(bad)  
  407235:	rex.X add sil,BYTE PTR [rax]
  407238:	add    DWORD PTR [rax+0x0],esp
  40723b:	add    BYTE PTR [rcx],al
  40723d:	(bad)  
  40723e:	add    eax,DWORD PTR [rax]
  407240:	(bad)  
  407241:	rex.X add sil,BYTE PTR [rax]
  407244:	add    DWORD PTR [rax+0x0],esp
  407247:	add    BYTE PTR [rcx],al
  407249:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a4f
  40724f:	xor    BYTE PTR [rbx],al
  407251:	(bad)  
  407252:	add    dh,BYTE PTR [rax+0x1]
  407255:	push   rax
  407256:	add    BYTE PTR [rax],al
  407258:	add    DWORD PTR [rax],eax
  40725a:	add    BYTE PTR [rax],al
  40725c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .edata:

0000000000409000 <.edata>:
  409000:	add    BYTE PTR [rax],al
  409002:	add    BYTE PTR [rax],al
  409004:	(bad)  
  409005:	gs scas eax,DWORD PTR es:[rdi]
  409007:	pop    rax
  409008:	add    BYTE PTR [rax],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	rex.RX xchg eax,eax
  40900e:	add    BYTE PTR [rax],al
  409010:	add    DWORD PTR [rax],eax
  409012:	add    BYTE PTR [rax],al
  409014:	add    eax,DWORD PTR [rax]
  409016:	add    BYTE PTR [rax],al
  409018:	add    eax,DWORD PTR [rax]
  40901a:	add    BYTE PTR [rax],al
  40901c:	sub    BYTE PTR [rax-0x6fcc0000],dl
  409022:	add    BYTE PTR [rax],al
  409024:	rex xchg eax,eax
  409026:	add    BYTE PTR [rax],al
  409028:	rex adc eax,0x2d100000
  40902e:	add    BYTE PTR [rax],al
  409030:	rex sub eax,0x90550000
  409036:	add    BYTE PTR [rax],al
  409038:	addr32 nop
  40903a:	add    BYTE PTR [rax],al
  40903c:	xlat   BYTE PTR ds:[rbx]
  40903d:	nop
  40903e:	add    BYTE PTR [rax],al
  409040:	add    BYTE PTR [rax],al
  409042:	add    DWORD PTR [rax],eax
  409044:	add    al,BYTE PTR [rax]
  409046:	outs   dx,DWORD PTR ds:[rsi]
  409047:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40904b:	gs sub eax,0x2e697567
  409051:	gs js  0x4090b9
  409054:	add    BYTE PTR [rdi+0x5a],bl
  409057:	xor    DWORD PTR [rdx],esi
  409059:	outs   dx,DWORD PTR ds:[rsi]
  40905a:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40905e:	gs pop rdi
  409060:	push   0x64695f67
  409065:	jbe    0x409067
  409067:	pop    rdi
  409068:	pop    rdx
  409069:	push   rbx
  40906a:	je     0x4090d1
  40906c:	jno    0x4090b7
  40906e:	movsxd eax,DWORD PTR [rbp+0x4e]
  409071:	cmp    DWORD PTR [rdi+0x5f],ebx
  409074:	outs   dx,BYTE PTR ds:[esi]
  409076:	jne    0x4090d7
  409078:	movsxd edi,DWORD PTR [rax+0x78]
  40907b:	xor    DWORD PTR [rcx],esi
  40907d:	pop    rdi
  40907e:	pop    rdi
  40907f:	outs   dx,BYTE PTR gs:[rsi]
  409081:	(bad)  
  409082:	(bad)  
  409083:	ins    BYTE PTR es:[rdi],dx
  409084:	gs pop rdi
  409086:	imul   esp,DWORD PTR [rsi+0x49],0x53727358
  40908d:	je     0x4090c8
  40908f:	pop    rdi
  409090:	pop    rdi
  409091:	imul   esi,DWORD PTR [rbx+0x5f],0x72616863
  409098:	rex.WB push r12
  40909a:	pop    rdi
  40909b:	rex.RB (bad) 
  40909d:	pop    rdi
  40909e:	pop    rdi
  40909f:	jbe    0x409102
  4090a1:	ins    BYTE PTR es:[rdi],dx
  4090a2:	jne    0x409109
  4090a4:	rex.RB (bad) 
  4090a6:	rex.RB
  4090a7:	ss pop rdi
  4090a9:	pop    rdi
  4090aa:	je     0x409125
  4090ac:	jo     0x409113
  4090ae:	rex.RB push r10
  4090b0:	rex.WXB push r11
  4090b2:	(bad)  
  4090b3:	rex.WB push r11
  4090b5:	xor    ebx,DWORD PTR [rdi+0x53]
  4090b8:	je     0x4090eb
  4090ba:	xor    DWORD PTR [rbx+0x68],esp
  4090bd:	(bad)  
  4090be:	jb     0x40911f
  4090c0:	je     0x409134
  4090c2:	(bad)  
  4090c3:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x455f3353
  4090cb:	push   rbx
  4090cc:	(bad)  
  4090cd:	rex.WB push r11
  4090cf:	xor    ebx,DWORD PTR [rdi+0x45]
  4090d2:	rex.RB push r11
  4090d4:	rex.XB pop r15
  4090d6:	add    BYTE PTR [rbp+0x61],ch
  4090d9:	.byte 0x69
  4090da:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .idata:

000000000040a000 <.idata>:
  40a000:	movabs al,ds:0xa0
  40a009:	add    BYTE PTR [rax],al
  40a00b:	add    BYTE PTR [rax-0x55],al
  40a00e:	add    BYTE PTR [rax],al
  40a010:	or     BYTE PTR [rbx-0x5f400000],ah
	...
  40a01e:	add    BYTE PTR [rax],al
  40a020:	pop    rsp
  40a021:	stos   DWORD PTR es:[rdi],eax
  40a022:	add    BYTE PTR [rax],al
  40a024:	sub    BYTE PTR [rbx-0x5f280000],ah
	...
  40a032:	add    BYTE PTR [rax],al
  40a034:	jo     0x409fe1
  40a036:	add    BYTE PTR [rax],al
  40a038:	rex movabs ds:0xa0e80000,eax
  40a042:	add    BYTE PTR [rax],al
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	test   al,0xab
  40a04a:	add    BYTE PTR [rax],al
  40a04c:	push   rax
  40a04d:	movabs ds:0xa1380000,eax
  40a056:	add    BYTE PTR [rax],al
  40a058:	add    BYTE PTR [rax],al
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	adc    al,0xac
  40a05e:	add    BYTE PTR [rax],al
  40a060:	movabs al,ds:0xa1f80000a3
  40a069:	add    BYTE PTR [rax],al
  40a06b:	add    BYTE PTR [rax],al
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    BYTE PTR [rax+0x600000ac],bl
  40a075:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a076:	add    BYTE PTR [rax],al
  40a078:	call   0x40a11f
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rax],al
  40a081:	add    BYTE PTR [rax],al
  40a083:	add    BYTE PTR [rax+0x500000ac],dh
  40a089:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
  40a09e:	add    BYTE PTR [rax],al
  40a0a0:	jo     0x40a047
  40a0a2:	add    BYTE PTR [rax],al
  40a0a4:	add    BYTE PTR [rax],al
  40a0a6:	add    BYTE PTR [rax],al
  40a0a8:	mov    WORD PTR [rbp+0x0],fs
  40a0ae:	add    BYTE PTR [rax],al
  40a0b0:	mov    al,0xa5
	...
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	shl    BYTE PTR [rbp+0x0],1
  40a0c6:	add    BYTE PTR [rax],al
  40a0c8:	call   0x40a172
	...
  40a0d5:	add    BYTE PTR [rax],al
  40a0d7:	add    BYTE PTR [rsi+riz*4],dl
	...
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	sub    BYTE PTR [rsi+0x0],ah
  40a0ee:	add    BYTE PTR [rax],al
  40a0f0:	rex.WR cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0f2:	add    BYTE PTR [rax],al
  40a0f4:	add    BYTE PTR [rax],al
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
  40a0fa:	add    BYTE PTR [rax],al
  40a0fc:	add    BYTE PTR [rax],al
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	and    BYTE PTR [rsi+0x0],0x0
  40a107:	add    BYTE PTR [rsi+riz*4+0x0],bl
  40a10e:	add    BYTE PTR [rax],al
  40a110:	in     al,dx
  40a111:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a112:	add    BYTE PTR [rax],al
  40a114:	add    BYTE PTR [rax],al
  40a116:	add    BYTE PTR [rax],al
  40a118:	clc    
  40a119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	add    BYTE PTR [rax],al
  40a11e:	add    BYTE PTR [rax],al
  40a120:	cmp    BYTE PTR [rdi+0x0],ah
  40a126:	add    BYTE PTR [rax],al
  40a128:	je     0x40a0d1
	...
  40a136:	add    BYTE PTR [rax],al
  40a138:	nop
  40a139:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a13a:	add    BYTE PTR [rax],al
  40a13c:	add    BYTE PTR [rax],al
  40a13e:	add    BYTE PTR [rax],al
  40a140:	test   al,0xa7
  40a142:	add    BYTE PTR [rax],al
  40a144:	add    BYTE PTR [rax],al
  40a146:	add    BYTE PTR [rax],al
  40a148:	shl    BYTE PTR [rdi+0x0],0x0
  40a14f:	add    ah,dl
  40a151:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a152:	add    BYTE PTR [rax],al
  40a154:	add    BYTE PTR [rax],al
  40a156:	add    BYTE PTR [rax],al
  40a158:	(bad)  
  40a159:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	add    BYTE PTR [rax],al
  40a15e:	add    BYTE PTR [rax],al
  40a160:	add    BYTE PTR [rax+0x0],ch
  40a166:	add    BYTE PTR [rax],al
  40a168:	adc    BYTE PTR [rax+0x0],ch
  40a16e:	add    BYTE PTR [rax],al
  40a170:	and    ch,BYTE PTR [rax+0x0]
  40a176:	add    BYTE PTR [rax],al
  40a178:	cmp    al,0xa8
  40a17a:	add    BYTE PTR [rax],al
  40a17c:	add    BYTE PTR [rax],al
  40a17e:	add    BYTE PTR [rax],al
  40a180:	rex.WR test al,0x0
  40a183:	add    BYTE PTR [rax],al
  40a185:	add    BYTE PTR [rax],al
  40a187:	add    BYTE PTR [rax-0x58],ch
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    BYTE PTR [rax],al
  40a18e:	add    BYTE PTR [rax],al
  40a190:	sub    BYTE PTR [rax+0x0],0x0
  40a197:	add    BYTE PTR [rdx+0xa8],bl
  40a19d:	add    BYTE PTR [rax],al
  40a19f:	add    BYTE PTR [rax+0xa8],dh
  40a1a5:	add    BYTE PTR [rax],al
  40a1a7:	add    ah,al
  40a1a9:	test   al,0x0
  40a1ab:	add    BYTE PTR [rax],al
  40a1ad:	add    BYTE PTR [rax],al
  40a1af:	add    dh,bl
  40a1b1:	test   al,0x0
  40a1b3:	add    BYTE PTR [rax],al
  40a1b5:	add    BYTE PTR [rax],al
  40a1b7:	add    dl,dh
  40a1b9:	test   al,0x0
  40a1bb:	add    BYTE PTR [rax],al
  40a1bd:	add    BYTE PTR [rax],al
  40a1bf:	add    BYTE PTR [rax],dl
  40a1c1:	test   eax,0x0
  40a1c6:	add    BYTE PTR [rax],al
  40a1c8:	sbb    BYTE PTR [rcx+0x0],ch
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	sub    al,0xa9
  40a1d2:	add    BYTE PTR [rax],al
  40a1d4:	add    BYTE PTR [rax],al
  40a1d6:	add    BYTE PTR [rax],al
  40a1d8:	cmp    ch,BYTE PTR [rcx+0x0]
  40a1de:	add    BYTE PTR [rax],al
  40a1e0:	push   rsi
  40a1e1:	test   eax,0x0
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	push   0xa9
	...
  40a1f5:	add    BYTE PTR [rax],al
  40a1f7:	add    BYTE PTR [rax-0x57],bh
  40a1fa:	add    BYTE PTR [rax],al
  40a1fc:	add    BYTE PTR [rax],al
  40a1fe:	add    BYTE PTR [rax],al
  40a200:	nop
  40a201:	test   eax,0x0
  40a206:	add    BYTE PTR [rax],al
  40a208:	sahf   
  40a209:	test   eax,0x0
  40a20e:	add    BYTE PTR [rax],al
  40a210:	scas   al,BYTE PTR es:[rdi]
  40a211:	test   eax,0x0
  40a216:	add    BYTE PTR [rax],al
  40a218:	mov    edx,0xa9
  40a21d:	add    BYTE PTR [rax],al
  40a21f:	add    al,cl
  40a221:	test   eax,0x0
  40a226:	add    BYTE PTR [rax],al
  40a228:	fsubr  DWORD PTR [rcx+0x0]
  40a22e:	add    BYTE PTR [rax],al
  40a230:	(bad)  
  40a231:	test   eax,0x0
  40a236:	add    BYTE PTR [rax],al
  40a238:	(bad)  
  40a239:	test   eax,0x0
  40a23e:	add    BYTE PTR [rax],al
  40a240:	or     BYTE PTR [rdx+0x0],ch
  40a246:	add    BYTE PTR [rax],al
  40a248:	(bad)  
  40a249:	stos   BYTE PTR es:[rdi],al
  40a24a:	add    BYTE PTR [rax],al
  40a24c:	add    BYTE PTR [rax],al
  40a24e:	add    BYTE PTR [rax],al
  40a250:	and    BYTE PTR [rdx+0x0],ch
  40a256:	add    BYTE PTR [rax],al
  40a258:	sub    ch,BYTE PTR [rdx+0x0]
  40a25e:	add    BYTE PTR [rax],al
  40a260:	ss stos BYTE PTR es:[rdi],al
  40a262:	add    BYTE PTR [rax],al
  40a264:	add    BYTE PTR [rax],al
  40a266:	add    BYTE PTR [rax],al
  40a268:	ds stos BYTE PTR es:[rdi],al
  40a26a:	add    BYTE PTR [rax],al
  40a26c:	add    BYTE PTR [rax],al
  40a26e:	add    BYTE PTR [rax],al
  40a270:	rex.W stos BYTE PTR es:[rdi],al
  40a272:	add    BYTE PTR [rax],al
  40a274:	add    BYTE PTR [rax],al
  40a276:	add    BYTE PTR [rax],al
  40a278:	push   rdx
  40a279:	stos   BYTE PTR es:[rdi],al
  40a27a:	add    BYTE PTR [rax],al
  40a27c:	add    BYTE PTR [rax],al
  40a27e:	add    BYTE PTR [rax],al
  40a280:	pop    rdx
  40a281:	stos   BYTE PTR es:[rdi],al
  40a282:	add    BYTE PTR [rax],al
  40a284:	add    BYTE PTR [rax],al
  40a286:	add    BYTE PTR [rax],al
  40a288:	fs stos BYTE PTR es:[rdi],al
  40a28a:	add    BYTE PTR [rax],al
  40a28c:	add    BYTE PTR [rax],al
  40a28e:	add    BYTE PTR [rax],al
  40a290:	ins    BYTE PTR es:[rdi],dx
  40a291:	stos   BYTE PTR es:[rdi],al
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    BYTE PTR [rax],al
  40a296:	add    BYTE PTR [rax],al
  40a298:	jbe    0x40a244
  40a29a:	add    BYTE PTR [rax],al
  40a29c:	add    BYTE PTR [rax],al
  40a29e:	add    BYTE PTR [rax],al
  40a2a0:	jle    0x40a24c
  40a2a2:	add    BYTE PTR [rax],al
  40a2a4:	add    BYTE PTR [rax],al
  40a2a6:	add    BYTE PTR [rax],al
  40a2a8:	mov    BYTE PTR [rdx+0x0],ch
  40a2ae:	add    BYTE PTR [rax],al
  40a2b0:	xchg   edx,eax
  40a2b1:	stos   BYTE PTR es:[rdi],al
  40a2b2:	add    BYTE PTR [rax],al
  40a2b4:	add    BYTE PTR [rax],al
  40a2b6:	add    BYTE PTR [rax],al
  40a2b8:	pushf  
  40a2b9:	stos   BYTE PTR es:[rdi],al
  40a2ba:	add    BYTE PTR [rax],al
  40a2bc:	add    BYTE PTR [rax],al
  40a2be:	add    BYTE PTR [rax],al
  40a2c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a2c1:	stos   BYTE PTR es:[rdi],al
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    BYTE PTR [rax],al
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	mov    al,0xaa
  40a2ca:	add    BYTE PTR [rax],al
  40a2cc:	add    BYTE PTR [rax],al
  40a2ce:	add    BYTE PTR [rax],al
  40a2d0:	mov    edx,0xaa
  40a2d5:	add    BYTE PTR [rax],al
  40a2d7:	add    ah,al
  40a2d9:	stos   BYTE PTR es:[rdi],al
	...
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	shr    BYTE PTR [rdx+0x0],1
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	call   0x40a39f
  40a2f5:	add    BYTE PTR [rax],al
  40a2f7:	add    BYTE PTR [rax],dl
  40a2f9:	stos   DWORD PTR es:[rdi],eax
	...
  40a306:	add    BYTE PTR [rax],al
  40a308:	jo     0x40a2af
  40a30a:	add    BYTE PTR [rax],al
  40a30c:	add    BYTE PTR [rax],al
  40a30e:	add    BYTE PTR [rax],al
  40a310:	mov    WORD PTR [rbp+0x0],fs
  40a316:	add    BYTE PTR [rax],al
  40a318:	mov    al,0xa5
	...
  40a326:	add    BYTE PTR [rax],al
  40a328:	shl    BYTE PTR [rbp+0x0],1
  40a32e:	add    BYTE PTR [rax],al
  40a330:	call   0x40a3da
	...
  40a33d:	add    BYTE PTR [rax],al
  40a33f:	add    BYTE PTR [rsi+riz*4],dl
	...
  40a34e:	add    BYTE PTR [rax],al
  40a350:	sub    BYTE PTR [rsi+0x0],ah
  40a356:	add    BYTE PTR [rax],al
  40a358:	rex.WR cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a35a:	add    BYTE PTR [rax],al
  40a35c:	add    BYTE PTR [rax],al
  40a35e:	add    BYTE PTR [rax],al
  40a360:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
  40a362:	add    BYTE PTR [rax],al
  40a364:	add    BYTE PTR [rax],al
  40a366:	add    BYTE PTR [rax],al
  40a368:	and    BYTE PTR [rsi+0x0],0x0
  40a36f:	add    BYTE PTR [rsi+riz*4+0x0],bl
  40a376:	add    BYTE PTR [rax],al
  40a378:	in     al,dx
  40a379:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a37a:	add    BYTE PTR [rax],al
  40a37c:	add    BYTE PTR [rax],al
  40a37e:	add    BYTE PTR [rax],al
  40a380:	clc    
  40a381:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a382:	add    BYTE PTR [rax],al
  40a384:	add    BYTE PTR [rax],al
  40a386:	add    BYTE PTR [rax],al
  40a388:	cmp    BYTE PTR [rdi+0x0],ah
  40a38e:	add    BYTE PTR [rax],al
  40a390:	je     0x40a339
	...
  40a39e:	add    BYTE PTR [rax],al
  40a3a0:	nop
  40a3a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3a2:	add    BYTE PTR [rax],al
  40a3a4:	add    BYTE PTR [rax],al
  40a3a6:	add    BYTE PTR [rax],al
  40a3a8:	test   al,0xa7
  40a3aa:	add    BYTE PTR [rax],al
  40a3ac:	add    BYTE PTR [rax],al
  40a3ae:	add    BYTE PTR [rax],al
  40a3b0:	shl    BYTE PTR [rdi+0x0],0x0
  40a3b7:	add    ah,dl
  40a3b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3ba:	add    BYTE PTR [rax],al
  40a3bc:	add    BYTE PTR [rax],al
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	(bad)  
  40a3c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3c2:	add    BYTE PTR [rax],al
  40a3c4:	add    BYTE PTR [rax],al
  40a3c6:	add    BYTE PTR [rax],al
  40a3c8:	add    BYTE PTR [rax+0x0],ch
  40a3ce:	add    BYTE PTR [rax],al
  40a3d0:	adc    BYTE PTR [rax+0x0],ch
  40a3d6:	add    BYTE PTR [rax],al
  40a3d8:	and    ch,BYTE PTR [rax+0x0]
  40a3de:	add    BYTE PTR [rax],al
  40a3e0:	cmp    al,0xa8
  40a3e2:	add    BYTE PTR [rax],al
  40a3e4:	add    BYTE PTR [rax],al
  40a3e6:	add    BYTE PTR [rax],al
  40a3e8:	rex.WR test al,0x0
  40a3eb:	add    BYTE PTR [rax],al
  40a3ed:	add    BYTE PTR [rax],al
  40a3ef:	add    BYTE PTR [rax-0x58],ch
  40a3f2:	add    BYTE PTR [rax],al
  40a3f4:	add    BYTE PTR [rax],al
  40a3f6:	add    BYTE PTR [rax],al
  40a3f8:	sub    BYTE PTR [rax+0x0],0x0
  40a3ff:	add    BYTE PTR [rdx+0xa8],bl
  40a405:	add    BYTE PTR [rax],al
  40a407:	add    BYTE PTR [rax+0xa8],dh
  40a40d:	add    BYTE PTR [rax],al
  40a40f:	add    ah,al
  40a411:	test   al,0x0
  40a413:	add    BYTE PTR [rax],al
  40a415:	add    BYTE PTR [rax],al
  40a417:	add    dh,bl
  40a419:	test   al,0x0
  40a41b:	add    BYTE PTR [rax],al
  40a41d:	add    BYTE PTR [rax],al
  40a41f:	add    dl,dh
  40a421:	test   al,0x0
  40a423:	add    BYTE PTR [rax],al
  40a425:	add    BYTE PTR [rax],al
  40a427:	add    BYTE PTR [rax],dl
  40a429:	test   eax,0x0
  40a42e:	add    BYTE PTR [rax],al
  40a430:	sbb    BYTE PTR [rcx+0x0],ch
  40a436:	add    BYTE PTR [rax],al
  40a438:	sub    al,0xa9
  40a43a:	add    BYTE PTR [rax],al
  40a43c:	add    BYTE PTR [rax],al
  40a43e:	add    BYTE PTR [rax],al
  40a440:	cmp    ch,BYTE PTR [rcx+0x0]
  40a446:	add    BYTE PTR [rax],al
  40a448:	push   rsi
  40a449:	test   eax,0x0
  40a44e:	add    BYTE PTR [rax],al
  40a450:	push   0xa9
	...
  40a45d:	add    BYTE PTR [rax],al
  40a45f:	add    BYTE PTR [rax-0x57],bh
  40a462:	add    BYTE PTR [rax],al
  40a464:	add    BYTE PTR [rax],al
  40a466:	add    BYTE PTR [rax],al
  40a468:	nop
  40a469:	test   eax,0x0
  40a46e:	add    BYTE PTR [rax],al
  40a470:	sahf   
  40a471:	test   eax,0x0
  40a476:	add    BYTE PTR [rax],al
  40a478:	scas   al,BYTE PTR es:[rdi]
  40a479:	test   eax,0x0
  40a47e:	add    BYTE PTR [rax],al
  40a480:	mov    edx,0xa9
  40a485:	add    BYTE PTR [rax],al
  40a487:	add    al,cl
  40a489:	test   eax,0x0
  40a48e:	add    BYTE PTR [rax],al
  40a490:	fsubr  DWORD PTR [rcx+0x0]
  40a496:	add    BYTE PTR [rax],al
  40a498:	(bad)  
  40a499:	test   eax,0x0
  40a49e:	add    BYTE PTR [rax],al
  40a4a0:	(bad)  
  40a4a1:	test   eax,0x0
  40a4a6:	add    BYTE PTR [rax],al
  40a4a8:	or     BYTE PTR [rdx+0x0],ch
  40a4ae:	add    BYTE PTR [rax],al
  40a4b0:	(bad)  
  40a4b1:	stos   BYTE PTR es:[rdi],al
  40a4b2:	add    BYTE PTR [rax],al
  40a4b4:	add    BYTE PTR [rax],al
  40a4b6:	add    BYTE PTR [rax],al
  40a4b8:	and    BYTE PTR [rdx+0x0],ch
  40a4be:	add    BYTE PTR [rax],al
  40a4c0:	sub    ch,BYTE PTR [rdx+0x0]
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	ss stos BYTE PTR es:[rdi],al
  40a4ca:	add    BYTE PTR [rax],al
  40a4cc:	add    BYTE PTR [rax],al
  40a4ce:	add    BYTE PTR [rax],al
  40a4d0:	ds stos BYTE PTR es:[rdi],al
  40a4d2:	add    BYTE PTR [rax],al
  40a4d4:	add    BYTE PTR [rax],al
  40a4d6:	add    BYTE PTR [rax],al
  40a4d8:	rex.W stos BYTE PTR es:[rdi],al
  40a4da:	add    BYTE PTR [rax],al
  40a4dc:	add    BYTE PTR [rax],al
  40a4de:	add    BYTE PTR [rax],al
  40a4e0:	push   rdx
  40a4e1:	stos   BYTE PTR es:[rdi],al
  40a4e2:	add    BYTE PTR [rax],al
  40a4e4:	add    BYTE PTR [rax],al
  40a4e6:	add    BYTE PTR [rax],al
  40a4e8:	pop    rdx
  40a4e9:	stos   BYTE PTR es:[rdi],al
  40a4ea:	add    BYTE PTR [rax],al
  40a4ec:	add    BYTE PTR [rax],al
  40a4ee:	add    BYTE PTR [rax],al
  40a4f0:	fs stos BYTE PTR es:[rdi],al
  40a4f2:	add    BYTE PTR [rax],al
  40a4f4:	add    BYTE PTR [rax],al
  40a4f6:	add    BYTE PTR [rax],al
  40a4f8:	ins    BYTE PTR es:[rdi],dx
  40a4f9:	stos   BYTE PTR es:[rdi],al
  40a4fa:	add    BYTE PTR [rax],al
  40a4fc:	add    BYTE PTR [rax],al
  40a4fe:	add    BYTE PTR [rax],al
  40a500:	jbe    0x40a4ac
  40a502:	add    BYTE PTR [rax],al
  40a504:	add    BYTE PTR [rax],al
  40a506:	add    BYTE PTR [rax],al
  40a508:	jle    0x40a4b4
  40a50a:	add    BYTE PTR [rax],al
  40a50c:	add    BYTE PTR [rax],al
  40a50e:	add    BYTE PTR [rax],al
  40a510:	mov    BYTE PTR [rdx+0x0],ch
  40a516:	add    BYTE PTR [rax],al
  40a518:	xchg   edx,eax
  40a519:	stos   BYTE PTR es:[rdi],al
  40a51a:	add    BYTE PTR [rax],al
  40a51c:	add    BYTE PTR [rax],al
  40a51e:	add    BYTE PTR [rax],al
  40a520:	pushf  
  40a521:	stos   BYTE PTR es:[rdi],al
  40a522:	add    BYTE PTR [rax],al
  40a524:	add    BYTE PTR [rax],al
  40a526:	add    BYTE PTR [rax],al
  40a528:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a529:	stos   BYTE PTR es:[rdi],al
  40a52a:	add    BYTE PTR [rax],al
  40a52c:	add    BYTE PTR [rax],al
  40a52e:	add    BYTE PTR [rax],al
  40a530:	mov    al,0xaa
  40a532:	add    BYTE PTR [rax],al
  40a534:	add    BYTE PTR [rax],al
  40a536:	add    BYTE PTR [rax],al
  40a538:	mov    edx,0xaa
  40a53d:	add    BYTE PTR [rax],al
  40a53f:	add    ah,al
  40a541:	stos   BYTE PTR es:[rdi],al
	...
  40a54e:	add    BYTE PTR [rax],al
  40a550:	shr    BYTE PTR [rdx+0x0],1
  40a556:	add    BYTE PTR [rax],al
  40a558:	call   0x40a607
  40a55d:	add    BYTE PTR [rax],al
  40a55f:	add    BYTE PTR [rax],dl
  40a561:	stos   DWORD PTR es:[rdi],eax
	...
  40a56e:	add    BYTE PTR [rax],al
  40a570:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a571:	add    bl,BYTE PTR [rdi+0x5a]
  40a574:	xor    DWORD PTR [rax],edi
  40a576:	ins    BYTE PTR es:[rdi],dx
  40a577:	imul   esp,DWORD PTR [rdx+0x6f],0x6e697463
  40a57e:	je     0x40a5e5
  40a580:	jb     0x40a5f2
  40a582:	pop    rdi
  40a583:	push   0x64695f67
  40a588:	jbe    0x40a58a
  40a58a:	add    BYTE PTR [rax],al
  40a58c:	xchg   edx,eax
  40a58d:	sbb    ebx,DWORD PTR [rdi+0x5a]
  40a590:	rex.WRX
  40a591:	outs   dx,DWORD PTR ss:[rsi]
  40a593:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40a597:	xor    DWORD PTR gs:[rcx],esi
  40a59a:	(bad)  
  40a59b:	jo     0x40a60d
  40a59d:	ins    BYTE PTR es:[rdi],dx
  40a59e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40a5a5:	rex.XB xor al,BYTE PTR [r13+0x69]
  40a5a9:	push   rax
  40a5aa:	push   rax
  40a5ab:	movsxd eax,DWORD PTR [rax]
  40a5ad:	add    BYTE PTR [rax],al
  40a5af:	add    BYTE PTR [rbp+0x4e5a5f1b],dl
  40a5b5:	outs   dx,DWORD PTR ss:[rsi]
  40a5b7:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40a5bb:	xor    DWORD PTR gs:[rcx],esi
  40a5be:	(bad)  
  40a5bf:	jo     0x40a631
  40a5c1:	ins    BYTE PTR es:[rdi],dx
  40a5c2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40a5c9:	xor    r8b,BYTE PTR [rbp+0x76]
  40a5cd:	add    BYTE PTR [rax],al
  40a5cf:	add    BYTE PTR [rdi+0x315a5f14],dh
  40a5d5:	xor    eax,0x6f62696c
  40a5da:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40a5de:	gs pop rdi
  40a5e0:	push   0x64695f67
  40a5e5:	jbe    0x40a5e7
  40a5e7:	add    BYTE PTR [rdx+0x4e5a5f3e],cl
  40a5ed:	outs   dx,DWORD PTR ss:[rsi]
  40a5ef:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40a5f3:	xor    esi,DWORD PTR gs:[rbx+0x79]
  40a5f7:	jae    0x40a62c
  40a5f9:	outs   dx,BYTE PTR gs:[rsi]
  40a5fb:	jbe    0x40a62e
  40a5fd:	ss jae 0x40a665
  40a600:	je     0x40a661
  40a602:	jo     0x40a676
  40a604:	outs   dx,DWORD PTR ds:[rsi]
  40a605:	addr32 jb 0x40a669
  40a608:	ins    DWORD PTR es:[rdi],dx
  40a609:	pop    rdi
  40a60a:	outs   dx,BYTE PTR ds:[rsi]
  40a60b:	(bad)  
  40a60c:	ins    DWORD PTR es:[rdi],dx
  40a60d:	gs rex.RB push r10
  40a610:	rex.WXB push r11
  40a612:	jae    0x40a614
  40a614:	(bad)  
  40a615:	add    BYTE PTR [rdi+0x55],bl
  40a618:	outs   dx,BYTE PTR ds:[rsi]
  40a619:	ja     0x40a684
  40a61b:	outs   dx,BYTE PTR ds:[rsi]
  40a61c:	fs pop rdi
  40a61e:	push   rdx
  40a61f:	gs jae 0x40a697
  40a622:	ins    DWORD PTR es:[rdi],dx
  40a623:	add    BYTE PTR gs:[rax],al
  40a626:	add    BYTE PTR [rax],al
  40a628:	repz add ebx,DWORD PTR [rdi+0x5a]
  40a62c:	rex.WRX push rbx
  40a62e:	jae    0x40a664
  40a630:	pop    rdi
  40a631:	push   rdx
  40a632:	gs jo  0x40a666
  40a635:	xor    BYTE PTR [rdi+0x4d],bl
  40a638:	pop    rdi
  40a639:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4565736f
  40a641:	push   rdx
  40a642:	rex.WXB push r11
  40a644:	(bad)  
  40a645:	movsxd rax,DWORD PTR [r13+0x0]
  40a649:	add    BYTE PTR [rax],al
  40a64b:	add    BYTE PTR [rdx],bh
  40a64d:	add    al,0x5f
  40a64f:	pop    rdx
  40a650:	rex.WRX push rbx
  40a652:	jae    0x40a697
  40a654:	xor    DWORD PTR [rbp+0x50],eax
  40a657:	rex.WXB movsxd rdx,DWORD PTR [r10+0x4b]
  40a65b:	push   rbx
  40a65c:	(bad)  
  40a65d:	movsxd rax,DWORD PTR [r13+0x0]
  40a661:	add    BYTE PTR [rax],al
  40a663:	add    BYTE PTR [rax],dh
  40a665:	or     bl,BYTE PTR [rdi+0x5a]
  40a668:	rex.WRX push rbx
  40a66a:	je     0x40a6a4
  40a66c:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  40a673:	gs xor al,0x49
  40a676:	outs   dx,BYTE PTR ds:[rsi]
  40a677:	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x7645
  40a67f:	add    BYTE PTR [rdx],dh
  40a681:	or     bl,BYTE PTR [rdi+0x5a]
  40a684:	rex.WRX push rbx
  40a686:	je     0x40a6c0
  40a688:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  40a68f:	gs xor al,0x49
  40a692:	outs   dx,BYTE PTR ds:[rsi]
  40a693:	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x7645
  40a69b:	add    bh,bh
  40a69d:	or     bl,BYTE PTR [rdi+0x5a]
  40a6a0:	push   rbx
  40a6a1:	je     0x40a6d4
  40a6a3:	ss pop rdi
  40a6a5:	pop    rdi
  40a6a6:	outs   dx,DWORD PTR ds:[rsi]
  40a6a7:	jae    0x40a71d
  40a6a9:	jb     0x40a710
  40a6ab:	(bad)  
  40a6ac:	ins    DWORD PTR es:[rdi],dx
  40a6ad:	pop    rdi
  40a6ae:	imul   ebp,DWORD PTR [rsi+0x73],0x49747265
  40a6b5:	movsxd edx,DWORD PTR [rbx+0x74]
  40a6b8:	xor    DWORD PTR [rcx],esi
  40a6ba:	movsxd ebp,DWORD PTR [rax+0x61]
  40a6bd:	jb     0x40a71e
  40a6bf:	je     0x40a733
  40a6c1:	(bad)  
  40a6c2:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40a6ca:	push   rbx
  40a6cb:	je     0x40a6fe
  40a6cd:	xor    esp,DWORD PTR [rdx+0x61]
  40a6d0:	jae    0x40a73b
  40a6d2:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40a6d5:	jae    0x40a74b
  40a6d7:	jb     0x40a73e
  40a6d9:	(bad)  
  40a6da:	ins    DWORD PTR es:[rdi],dx
  40a6db:	rex.WB push r12
  40a6dd:	pop    rdi
  40a6de:	push   rsp
  40a6df:	xor    BYTE PTR [rdi+0x45],bl
  40a6e2:	push   rbx
  40a6e3:	ss pop rdi
  40a6e5:	push   rax
  40a6e6:	rex.WXB push r11
  40a6e8:	xor    ebx,DWORD PTR [rdi+0x78]
  40a6eb:	add    BYTE PTR [rcx],ch
  40a6ed:	or     ebx,DWORD PTR [rdi+0x5a]
  40a6f0:	push   rbx
  40a6f1:	je     0x40a727
  40a6f3:	movsxd esp,DWORD PTR [rbp+0x72]
  40a6f6:	jb     0x40a6f8
  40a6f8:	sub    al,0xb
  40a6fa:	pop    rdi
  40a6fb:	pop    rdx
  40a6fc:	push   rbx
  40a6fd:	je     0x40a733
  40a6ff:	outs   dx,BYTE PTR gs:[rsi]
  40a701:	fs ins BYTE PTR es:[rdi],dx
  40a703:	movsxd rdx,DWORD PTR [r11+0x74]
  40a707:	xor    DWORD PTR [rcx],esi
  40a709:	movsxd ebp,DWORD PTR [rax+0x61]
  40a70c:	jb     0x40a76d
  40a70e:	je     0x40a782
  40a710:	(bad)  
  40a711:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40a719:	push   rbx
  40a71a:	je     0x40a74d
  40a71c:	xor    esp,DWORD PTR [rdx+0x61]
  40a71f:	jae    0x40a78a
  40a721:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40a724:	jae    0x40a79a
  40a726:	jb     0x40a78d
  40a728:	(bad)  
  40a729:	ins    DWORD PTR es:[rdi],dx
  40a72a:	rex.WB push r12
  40a72c:	pop    rdi
  40a72d:	push   rsp
  40a72e:	xor    BYTE PTR [rdi+0x45],bl
  40a731:	push   rbx
  40a732:	ss pop rdi
  40a734:	add    BYTE PTR [rax],al
  40a736:	add    BYTE PTR [rax],al
  40a738:	jae    0x40a745
  40a73a:	pop    rdi
  40a73b:	pop    rdx
  40a73c:	push   rbx
  40a73d:	je     0x40a7ab
  40a73f:	jae    0x40a78a
  40a741:	push   rbx
  40a742:	je     0x40a775
  40a744:	xor    DWORD PTR [rbx+0x68],esp
  40a747:	(bad)  
  40a748:	jb     0x40a7a9
  40a74a:	je     0x40a7be
  40a74c:	(bad)  
  40a74d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40a755:	push   rbx
  40a756:	je     0x40a789
  40a758:	xor    esp,DWORD PTR [rdx+0x61]
  40a75b:	jae    0x40a7c6
  40a75d:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40a760:	jae    0x40a7d6
  40a762:	jb     0x40a7c9
  40a764:	(bad)  
  40a765:	ins    DWORD PTR es:[rdi],dx
  40a766:	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  40a76b:	push   rbx
  40a76c:	xor    eax,0x634b505f
  40a771:	add    BYTE PTR [rax],al
  40a773:	add    BYTE PTR [rsi],dl
  40a775:	(bad)  
  40a776:	pop    rdi
  40a777:	pop    rdi
  40a778:	addr32 js 0x40a7f3
  40a77b:	pop    rdi
  40a77c:	jo     0x40a7e3
  40a77e:	jb     0x40a7f3
  40a780:	outs   dx,DWORD PTR ds:[rsi]
  40a781:	outs   dx,BYTE PTR ds:[rsi]
  40a782:	(bad)  
  40a783:	ins    BYTE PTR es:[rdi],dx
  40a784:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  40a78c:	add    BYTE PTR [rax],al
  40a78e:	add    BYTE PTR [rax],al
  40a790:	fadd   DWORD PTR [rax]
  40a792:	rex.R
  40a793:	gs ins BYTE PTR es:[rdi],dx
  40a795:	gs je  0x40a7fd
  40a798:	rex.XB jb 0x40a804
  40a79b:	je     0x40a806
  40a79d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a7a0:	push   rbx
  40a7a1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a7a6:	outs   dx,BYTE PTR ds:[rsi]
  40a7a7:	add    al,bh
  40a7a9:	add    BYTE PTR [rbp+0x6e],al
  40a7ac:	je     0x40a813
  40a7ae:	jb     0x40a7f3
  40a7b0:	jb     0x40a81b
  40a7b2:	je     0x40a81d
  40a7b4:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a7b7:	push   rbx
  40a7b8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a7bd:	outs   dx,BYTE PTR ds:[rsi]
  40a7be:	add    BYTE PTR [rax],al
  40a7c0:	int    0x1
  40a7c2:	rex.RXB
  40a7c3:	gs je  0x40a809
  40a7c6:	jne    0x40a83a
  40a7c8:	jb     0x40a82f
  40a7ca:	outs   dx,BYTE PTR ds:[rsi]
  40a7cb:	je     0x40a81d
  40a7cd:	jb     0x40a83e
  40a7cf:	movsxd esp,DWORD PTR [rbp+0x73]
  40a7d2:	jae    0x40a7d4
  40a7d4:	(bad)  
  40a7d5:	add    DWORD PTR [rdi+0x65],eax
  40a7d8:	je     0x40a81d
  40a7da:	jne    0x40a84e
  40a7dc:	jb     0x40a843
  40a7de:	outs   dx,BYTE PTR ds:[rsi]
  40a7df:	je     0x40a831
  40a7e1:	jb     0x40a852
  40a7e3:	movsxd esp,DWORD PTR [rbp+0x73]
  40a7e6:	jae    0x40a831
  40a7e8:	fs add dl,dl
  40a7eb:	add    DWORD PTR [rdi+0x65],eax
  40a7ee:	je     0x40a833
  40a7f0:	jne    0x40a864
  40a7f2:	jb     0x40a859
  40a7f4:	outs   dx,BYTE PTR ds:[rsi]
  40a7f5:	je     0x40a84b
  40a7f7:	push   0x64616572
  40a7fc:	rex.WB
  40a7fd:	add    BYTE PTR fs:[rax],al
  40a800:	adc    BYTE PTR [rdx],al
  40a802:	rex.RXB
  40a803:	gs je  0x40a852
  40a806:	(bad)  
  40a807:	jae    0x40a87d
  40a809:	rex.RB jb 0x40a87e
  40a80c:	outs   dx,DWORD PTR ds:[rsi]
  40a80d:	jb     0x40a80f
  40a80f:	add    BYTE PTR [rbx+0x2],dh
  40a812:	rex.RXB
  40a813:	gs je  0x40a869
  40a816:	je     0x40a879
  40a818:	jb     0x40a88e
  40a81a:	jne    0x40a88c
  40a81c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a81e:	outs   dx,WORD PTR ds:[rsi]
  40a820:	add    BYTE PTR [r10+0x74654702],cl
  40a827:	push   rbx
  40a828:	jns    0x40a89d
  40a82a:	je     0x40a891
  40a82c:	ins    DWORD PTR es:[rdi],dx
  40a82d:	push   rsp
  40a82e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40a835:	ins    BYTE PTR es:[rdi],dx
  40a836:	gs push rsp
  40a838:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40a83f:	gs je  0x40a896
  40a842:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40a849:	je     0x40a84b
  40a84b:	add    cl,bh
  40a84d:	add    cl,BYTE PTR [rcx+0x6e]
  40a850:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40a858:	rex.XB jb 0x40a8c4
  40a85b:	je     0x40a8c6
  40a85d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a860:	push   rbx
  40a861:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a866:	outs   dx,BYTE PTR ds:[rsi]
  40a867:	add    BYTE PTR [rbx+0x3],cl
  40a86a:	rex.WR
  40a86b:	gs (bad) 
  40a86d:	jbe    0x40a8d4
  40a86f:	rex.XB jb 0x40a8db
  40a872:	je     0x40a8dd
  40a874:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a877:	push   rbx
  40a878:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a87d:	outs   dx,BYTE PTR ds:[rsi]
  40a87e:	add    BYTE PTR [rax],al
  40a880:	mov    ebx,0x65755103
  40a885:	jb     0x40a900
  40a887:	push   rax
  40a888:	gs jb  0x40a8f1
  40a88b:	outs   dx,DWORD PTR ds:[rsi]
  40a88c:	jb     0x40a8fb
  40a88e:	(bad)  
  40a88f:	outs   dx,BYTE PTR ds:[rsi]
  40a890:	movsxd esp,DWORD PTR [rbp+0x43]
  40a893:	outs   dx,DWORD PTR ds:[rsi]
  40a894:	jne    0x40a904
  40a896:	je     0x40a8fd
  40a898:	jb     0x40a89a
  40a89a:	add    DWORD PTR [rdx+rdx*2],eax
  40a89d:	je     0x40a90b
  40a89f:	rex.B
  40a8a0:	fs fs rex.RX jne 0x40a913
  40a8a5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a8a9:	outs   dx,BYTE PTR ds:[rsi]
  40a8aa:	push   rsp
  40a8ab:	(bad)  
  40a8ac:	(bad)  
  40a8ad:	ins    BYTE PTR es:[rdi],dx
  40a8ae:	add    BYTE PTR gs:[rdx],al
  40a8b1:	add    al,0x52
  40a8b3:	je     0x40a921
  40a8b5:	rex.XB (bad) 
  40a8b7:	jo     0x40a92d
  40a8b9:	jne    0x40a92d
  40a8bb:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40a8be:	outs   dx,BYTE PTR ds:[rsi]
  40a8bf:	je     0x40a926
  40a8c1:	js     0x40a937
  40a8c3:	add    BYTE PTR [rcx],cl
  40a8c5:	add    al,0x52
  40a8c7:	je     0x40a935
  40a8c9:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40a8cb:	outs   dx,DWORD PTR ds:[rsi]
  40a8cc:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40a8d0:	jne    0x40a940
  40a8d2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a8d6:	outs   dx,BYTE PTR ds:[rsi]
  40a8d7:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40a8d9:	je     0x40a94d
  40a8db:	jns    0x40a8dd
  40a8dd:	add    BYTE PTR [rax],dl
  40a8df:	add    al,0x52
  40a8e1:	je     0x40a94f
  40a8e3:	push   rsi
  40a8e4:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40a8eb:	outs   dx,BYTE PTR ds:[rsi]
  40a8ec:	ja     0x40a957
  40a8ee:	outs   dx,BYTE PTR ds:[rsi]
  40a8ef:	add    BYTE PTR fs:[rax],al
  40a8f2:	lahf   
  40a8f3:	add    al,0x53
  40a8f5:	gs je  0x40a94d
  40a8f8:	outs   dx,BYTE PTR ds:[rsi]
  40a8f9:	push   0x6c646e61
  40a8fe:	gs fs rex.RB js 0x40a966
  40a903:	gs jo  0x40a97a
  40a906:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a90d:	gs jb  0x40a910
  40a910:	lods   al,BYTE PTR ds:[rsi]
  40a911:	add    al,0x53
  40a913:	ins    BYTE PTR es:[rdi],dx
  40a914:	gs gs jo 0x40a918
  40a918:	mov    edx,0x72655404
  40a91d:	ins    DWORD PTR es:[rdi],dx
  40a91e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40a925:	outs   dx,DWORD PTR ds:[rsi]
  40a926:	movsxd esp,DWORD PTR [rbp+0x73]
  40a929:	jae    0x40a92b
  40a92b:	add    cl,al
  40a92d:	add    al,0x54
  40a92f:	ins    BYTE PTR es:[rdi],dx
  40a930:	jae    0x40a979
  40a932:	gs je  0x40a98b
  40a935:	(bad)  
  40a936:	ins    BYTE PTR es:[rdi],dx
  40a937:	jne    0x40a99e
  40a939:	add    dh,cl
  40a93b:	add    al,0x55
  40a93d:	outs   dx,BYTE PTR ds:[rsi]
  40a93e:	push   0x6c646e61
  40a943:	gs fs rex.RB js 0x40a9ab
  40a948:	gs jo  0x40a9bf
  40a94b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a952:	gs jb  0x40a955
  40a955:	add    ah,ch
  40a957:	add    al,0x56
  40a959:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40a960:	jb     0x40a9d1
  40a962:	je     0x40a9c9
  40a964:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40a968:	out    dx,al
  40a969:	add    al,0x56
  40a96b:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40a972:	jne    0x40a9d9
  40a974:	jb     0x40a9ef
  40a976:	add    BYTE PTR [rax],al
  40a978:	(bad)  
  40a979:	add    BYTE PTR [rdi+0x5f],bl
  40a97c:	rex.XB pop r15
  40a97e:	jae    0x40a9f0
  40a980:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a984:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40a98b:	ins    BYTE PTR es:[rdi],dx
  40a98c:	gs jb  0x40a98f
  40a98f:	add    BYTE PTR [rsi+0x0],cl
  40a992:	pop    rdi
  40a993:	pop    rdi
  40a994:	fs ins BYTE PTR es:[rdi],dx
  40a996:	ins    BYTE PTR es:[rdi],dx
  40a997:	outs   dx,DWORD PTR ds:[rsi]
  40a998:	outs   dx,BYTE PTR ds:[rsi]
  40a999:	gs js  0x40aa05
  40a99c:	je     0x40a99e
  40a99e:	push   rcx
  40a99f:	add    BYTE PTR [rdi+0x5f],bl
  40a9a2:	addr32 gs je 0x40aa13
  40a9a6:	(bad)  
  40a9a7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40a9ae:	push   rdx
  40a9af:	add    BYTE PTR [rdi+0x5f],bl
  40a9b2:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40a9b9:	add    BYTE PTR [rbx+0x0],dl
  40a9bc:	pop    rdi
  40a9bd:	pop    rdi
  40a9be:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40a9c5:	movsxd eax,DWORD PTR [rax]
  40a9c7:	add    BYTE PTR [rdx+0x0],bl
  40a9ca:	pop    rdi
  40a9cb:	pop    rdi
  40a9cc:	ins    BYTE PTR es:[rdi],dx
  40a9cd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a9d0:	jbe    0x40aa31
  40a9d2:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40a9d9:	add    BYTE PTR [rdi+0x5f],bl
  40a9dc:	jae    0x40aa43
  40a9de:	je     0x40aa3f
  40a9e0:	(bad)  
  40a9e1:	jo     0x40aa53
  40a9e3:	pop    rdi
  40a9e4:	je     0x40aa5f
  40a9e6:	jo     0x40aa4d
  40a9e8:	add    BYTE PTR [rax],al
  40a9ea:	(bad)  
  40a9eb:	add    BYTE PTR [rdi+0x5f],bl
  40a9ee:	jae    0x40aa55
  40a9f0:	je     0x40aa67
  40a9f2:	jae    0x40aa59
  40a9f4:	jb     0x40aa63
  40a9f6:	(bad)  
  40a9f7:	je     0x40aa61
  40a9f9:	gs jb  0x40aa6e
  40a9fc:	add    BYTE PTR [rax],al
  40a9fe:	jno    0x40aa00
  40aa00:	pop    rdi
  40aa01:	(bad)  
  40aa02:	movsxd ebp,DWORD PTR [rbp+0x64]
  40aa05:	ins    BYTE PTR es:[rdi],dx
  40aa06:	outs   dx,BYTE PTR ds:[rsi]
  40aa07:	add    BYTE PTR [rax+0x0],bh
  40aa0a:	pop    rdi
  40aa0b:	(bad)  
  40aa0c:	ins    DWORD PTR es:[rdi],dx
  40aa0d:	jae    0x40aa76
  40aa0f:	pop    rdi
  40aa10:	gs js  0x40aa7c
  40aa13:	je     0x40aa15
  40aa15:	add    BYTE PTR [rdx+0x65635f00],cl
  40aa1b:	js     0x40aa86
  40aa1d:	je     0x40aa1f
  40aa1f:	add    dl,bl
  40aa21:	add    BYTE PTR [rdi+0x66],bl
  40aa24:	ins    DWORD PTR es:[rdi],dx
  40aa25:	outs   dx,DWORD PTR ds:[rsi]
  40aa26:	fs add BYTE PTR gs:[rax],al
  40aa2a:	sbb    al,BYTE PTR [rcx]
  40aa2c:	pop    rdi
  40aa2d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40aa34:	ins    DWORD PTR es:[rdi],dx
  40aa35:	add    BYTE PTR [rax+0x6f6c5f01],al
  40aa3b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40aa3e:	and    eax,0x6e6f5f02
  40aa43:	gs js  0x40aaaf
  40aa46:	je     0x40aa48
  40aa48:	(bad)
  40aa4c:	outs   dx,BYTE PTR ds:[rsi]
  40aa4d:	ins    BYTE PTR es:[rdi],dx
  40aa4e:	outs   dx,DWORD PTR ds:[rsi]
  40aa4f:	movsxd ebp,DWORD PTR [rbx+0x0]
  40aa52:	jg     0x40aa57
  40aa54:	(bad)  
  40aa55:	(bad)  
  40aa56:	outs   dx,DWORD PTR ds:[rsi]
  40aa57:	jb     0x40aacd
  40aa59:	add    BYTE PTR [rax+0x6c616303],dl
  40aa5f:	ins    BYTE PTR es:[rdi],dx
  40aa60:	outs   dx,DWORD PTR ds:[rsi]
  40aa61:	movsxd eax,DWORD PTR [rax]
  40aa63:	add    BYTE PTR [rbp+0x69786503],bl
  40aa69:	je     0x40aa6b
  40aa6b:	add    BYTE PTR [rax+0x72706603],dh
  40aa71:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40aa78:	data16 jb 0x40aae0
  40aa7b:	add    BYTE PTR gs:[rax],al
  40aa7e:	ret    0x6603
  40aa81:	ja     0x40aaf5
  40aa83:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40aa8b:	(bad)  
  40aa8c:	ins    BYTE PTR es:[rdi],dx
  40aa8d:	ins    BYTE PTR es:[rdi],dx
  40aa8e:	outs   dx,DWORD PTR ds:[rsi]
  40aa8f:	movsxd eax,DWORD PTR [rax]
  40aa91:	add    bh,dh
  40aa93:	add    ebp,DWORD PTR [rbp+0x65]
  40aa96:	ins    DWORD PTR es:[rdi],dx
  40aa97:	movsxd ebp,DWORD PTR [rbp+0x70]
  40aa9a:	add    BYTE PTR [rax],al
  40aa9c:	clc    
  40aa9d:	add    ebp,DWORD PTR [rbp+0x65]
  40aaa0:	ins    DWORD PTR es:[rdi],dx
  40aaa1:	movsxd esi,DWORD PTR [rax+0x79]
  40aaa4:	add    BYTE PTR [rax],al
  40aaa6:	(bad)  
  40aaa7:	add    al,0x73
  40aaa9:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40aab0:	sub    eax,DWORD PTR [rbx+rsi*2]
  40aab3:	je     0x40ab27
  40aab5:	ins    BYTE PTR es:[rdi],dx
  40aab6:	outs   dx,BYTE PTR gs:[rsi]
  40aab8:	add    BYTE PTR [rax],al
  40aaba:	cs add al,0x73
  40aabd:	je     0x40ab31
  40aabf:	outs   dx,BYTE PTR ds:[rsi]
  40aac0:	movsxd ebp,DWORD PTR [rbp+0x70]
  40aac3:	add    BYTE PTR [rsi+0x4],cl
  40aac6:	jbe    0x40ab2e
  40aac8:	jo     0x40ab3c
  40aaca:	imul   ebp,DWORD PTR [rsi+0x74],0x1000066
  40aad1:	add    BYTE PTR [rdi+0x5a],bl
  40aad4:	xor    DWORD PTR [rip+0x6f62696c],esi        # 0x6fa31446
  40aada:	movsxd esi,DWORD PTR [rdi+riz*2+0x75]
  40aade:	imul   ebx,DWORD PTR [rdi+0x68],0x64695f67
  40aae5:	jbe    0x40aae7
  40aae7:	add    bh,dl
  40aae9:	add    eax,0x364e5a5f
  40aaee:	outs   dx,DWORD PTR ds:[rsi]
  40aaef:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40aaf3:	xor    DWORD PTR gs:[rip+0x5f697567],esi        # 0x5faa2061
  40aafa:	(bad)  
  40aafb:	jo     0x40ab6d
  40aafd:	ins    BYTE PTR es:[rdi],dx
  40aafe:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40ab05:	(bad)  
  40ab06:	gs js  0x40ab6e
  40ab09:	movsxd esi,DWORD PTR [rbp+0x74]
  40ab0c:	gs rex.RB jbe 0x40ab10
  40ab10:	leave  
  40ab11:	or     bl,BYTE PTR [rdi+0x5a]
  40ab14:	push   rsp
  40ab15:	push   rsi
  40ab16:	rex.WRX
  40ab17:	outs   dx,DWORD PTR ss:[rsi]
  40ab19:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40ab1d:	xor    DWORD PTR gs:[rip+0x5f697567],esi        # 0x5faa208b
  40ab24:	(bad)  
  40ab25:	jo     0x40ab97
  40ab27:	ins    BYTE PTR es:[rdi],dx
  40ab28:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40ab2f:	add    BYTE PTR [r8],r8b
  40ab32:	add    BYTE PTR [rax],al
  40ab34:	add    BYTE PTR [rax-0x60000000],ah
  40ab3a:	add    BYTE PTR [rax],al
  40ab3c:	add    BYTE PTR [rax+0x696c0000],ah
  40ab42:	(bad)  
  40ab43:	outs   dx,DWORD PTR ds:[rsi]
  40ab44:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  40ab48:	je     0x40abaf
  40ab4a:	jb     0x40abbc
  40ab4c:	sub    eax,0x6c642e34
  40ab51:	ins    BYTE PTR es:[rdi],dx
  40ab52:	add    BYTE PTR [rax],al
  40ab54:	adc    al,0xa0
  40ab56:	add    BYTE PTR [rax],al
  40ab58:	adc    al,0xa0
  40ab5a:	add    BYTE PTR [rax],al
  40ab5c:	ins    BYTE PTR es:[rdi],dx
  40ab5d:	imul   esp,DWORD PTR [rdx+0x6f],0x76617463
  40ab64:	gs sub eax,0x6c642e34
  40ab6a:	ins    BYTE PTR es:[rdi],dx
  40ab6b:	add    BYTE PTR [rax],ch
  40ab6d:	movabs al,ds:0x63636762696c0000
  40ab76:	pop    rdi
  40ab77:	jae    0x40abd8
  40ab79:	jae    0x40abe0
  40ab7b:	push   0x642e312d
  40ab80:	ins    BYTE PTR es:[rdi],dx
  40ab81:	ins    BYTE PTR es:[rdi],dx
  40ab82:	add    BYTE PTR [rax],al
  40ab84:	cmp    al,0xa0
  40ab86:	add    BYTE PTR [rax],al
  40ab88:	cmp    al,0xa0
  40ab8a:	add    BYTE PTR [rax],al
  40ab8c:	cmp    al,0xa0
  40ab8e:	add    BYTE PTR [rax],al
  40ab90:	cmp    al,0xa0
  40ab92:	add    BYTE PTR [rax],al
  40ab94:	cmp    al,0xa0
  40ab96:	add    BYTE PTR [rax],al
  40ab98:	cmp    al,0xa0
  40ab9a:	add    BYTE PTR [rax],al
  40ab9c:	cmp    al,0xa0
  40ab9e:	add    BYTE PTR [rax],al
  40aba0:	cmp    al,0xa0
  40aba2:	add    BYTE PTR [rax],al
  40aba4:	cmp    al,0xa0
  40aba6:	add    BYTE PTR [rax],al
  40aba8:	ins    BYTE PTR es:[rdi],dx
  40aba9:	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
  40abb0:	sub    ebp,DWORD PTR [rip+0x6c642e36]        # 0x6ca4d9ec
  40abb6:	ins    BYTE PTR es:[rdi],dx
  40abb7:	add    BYTE PTR [rax-0x60],dl
  40abba:	add    BYTE PTR [rax],al
  40abbc:	push   rax
  40abbd:	movabs al,ds:0xa0500000a0500000
  40abc6:	add    BYTE PTR [rax],al
  40abc8:	push   rax
  40abc9:	movabs al,ds:0xa0500000a0500000
  40abd2:	add    BYTE PTR [rax],al
  40abd4:	push   rax
  40abd5:	movabs al,ds:0xa0500000a0500000
  40abde:	add    BYTE PTR [rax],al
  40abe0:	push   rax
  40abe1:	movabs al,ds:0xa0500000a0500000
  40abea:	add    BYTE PTR [rax],al
  40abec:	push   rax
  40abed:	movabs al,ds:0xa0500000a0500000
  40abf6:	add    BYTE PTR [rax],al
  40abf8:	push   rax
  40abf9:	movabs al,ds:0xa0500000a0500000
  40ac02:	add    BYTE PTR [rax],al
  40ac04:	push   rax
  40ac05:	movabs al,ds:0xa0500000a0500000
  40ac0e:	add    BYTE PTR [rax],al
  40ac10:	push   rax
  40ac11:	movabs al,ds:0x4c454e52454b0000
  40ac1a:	xor    esi,DWORD PTR [rdx]
  40ac1c:	cs fs ins BYTE PTR es:[rdi],dx
  40ac1f:	ins    BYTE PTR es:[rdi],dx
  40ac20:	add    BYTE PTR [rax],al
  40ac22:	add    BYTE PTR [rax],al
  40ac24:	movabs al,fs:0xa0640000a0640000
  40ac2e:	add    BYTE PTR [rax],al
  40ac30:	movabs al,fs:0xa0640000a0640000
  40ac3a:	add    BYTE PTR [rax],al
  40ac3c:	movabs al,fs:0xa0640000a0640000
  40ac46:	add    BYTE PTR [rax],al
  40ac48:	movabs al,fs:0xa0640000a0640000
  40ac52:	add    BYTE PTR [rax],al
  40ac54:	movabs al,fs:0xa0640000a0640000
  40ac5e:	add    BYTE PTR [rax],al
  40ac60:	movabs al,fs:0xa0640000a0640000
  40ac6a:	add    BYTE PTR [rax],al
  40ac6c:	movabs al,fs:0xa0640000a0640000
  40ac76:	add    BYTE PTR [rax],al
  40ac78:	movabs al,fs:0xa0640000a0640000
  40ac82:	add    BYTE PTR [rax],al
  40ac84:	movabs al,fs:0xa0640000a0640000
  40ac8e:	add    BYTE PTR [rax],al
  40ac90:	movabs al,fs:0x736d0000a0640000
  40ac9a:	jbe    0x40acff
  40ac9c:	jb     0x40ad12
  40ac9e:	cs fs ins BYTE PTR es:[rdi],dx
  40aca1:	ins    BYTE PTR es:[rdi],dx
  40aca2:	add    BYTE PTR [rax],al
  40aca4:	js     0x40ac46
  40aca6:	add    BYTE PTR [rax],al
  40aca8:	js     0x40ac4a
  40acaa:	add    BYTE PTR [rax],al
  40acac:	js     0x40ac4e
  40acae:	add    BYTE PTR [rax],al
  40acb0:	ins    BYTE PTR es:[rdi],dx
  40acb1:	imul   esp,DWORD PTR [rdx+0x6f],0x75677463
  40acb8:	.byte 0x69
  40acb9:	sub    eax,0x6c642e32
  40acbe:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040b000 <.CRT>:
	...
  40b008:	(bad)  
  40b009:	adc    DWORD PTR [rax+0x0],eax
	...
  40b020:	adc    BYTE PTR [rax],dl
  40b022:	add    BYTE PTR [rax],al
  40b025:	add    BYTE PTR [rax],al
  40b027:	add    BYTE PTR [rax+0x4017],al
	...
  40b03d:	add    BYTE PTR [rax],al
  40b03f:	add    BYTE PTR [rax+0x4019],dh
  40b045:	add    BYTE PTR [rax],al
  40b047:	add    BYTE PTR [rax+0x4019],al
	...

Disassembly of section .tls:

000000000040c000 <.tls>:
	...
  40c020:	add    al,al
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax-0x40],ah
  40c02a:	add    BYTE PTR [rax],al
  40c02d:	add    BYTE PTR [rax],al
  40c02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40c033:	add    BYTE PTR [rax],al
  40c035:	add    BYTE PTR [rax],al
  40c037:	add    BYTE PTR [rax-0x50],al
  40c03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000000040d000 <.reloc>:
  40d000:	add    BYTE PTR [rax],dh
  40d002:	add    BYTE PTR [rax],al
  40d004:	or     al,0x0
  40d006:	add    BYTE PTR [rax],al
  40d008:	mov    eax,0xa0
  40d00d:	add    BYTE PTR [rax],al
  40d010:	adc    BYTE PTR [rax],al
  40d012:	add    BYTE PTR [rax],al
  40d014:	adc    BYTE PTR [rax-0x5f8f5fe0],ah
  40d01a:	js     0x40cfbc
  40d01c:	add    BYTE PTR [rax+0x0],dl
  40d01f:	add    BYTE PTR [rax+0x0],dl
  40d022:	add    BYTE PTR [rax],al
  40d024:	movabs al,ds:0x40a330a0b0a0a8a0
  40d02d:	movabs ds:0xa380a370a360a350,eax
  40d036:	nop
  40d037:	movabs ds:0xa3d0a3c0a3b0a3a0,eax
  40d040:	loopne 0x40cfe5
  40d042:	lock movabs ds:0xa430a420a410a400,eax
  40d04c:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d04e:	push   rax
  40d04f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d050:	(bad)  
  40d051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d052:	jo     0x40cff8
  40d054:	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
  40d05c:	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
  40d064:	add    BYTE PTR [rbp-0x5adf5af0],ah
  40d06a:	add    BYTE PTR [rax],al
  40d06c:	add    BYTE PTR [rax+0x140000],dh
  40d072:	add    BYTE PTR [rax],al
  40d074:	or     BYTE PTR [rax-0x5fd75fe0],ah
  40d07a:	movabs al,ds:0xc0000000a048
  40d084:	adc    BYTE PTR [rax],al
  40d086:	add    BYTE PTR [rax],al
  40d088:	and    BYTE PTR [rax-0x5fcf5fd8],ah
  40d08e:	.byte 0x38
  40d08f:	.byte 0xa0
